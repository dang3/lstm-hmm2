push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
adc
add
adc
add
add
mov
add
or
add
mov
add
add
adc
add
add
add
add
add
add
or
add
add
movsl
mov
sarl
jns
jae
outsl
outsl
outsl
outsl
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
dec
add
add
mov
add
add
or
orb
add
add
in
or
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
inc
fmull
add
add
in
add
add
add
add
add
add
add
fadds
add
je
or
xor
add
in
add
add
add
add
add
add
add
add
add
test
or
xor
add
in
add
add
add
add
add
add
add
sub
add
or
xor
add
in
add
add
add
add
add
add
add
push
add
add
loope
add
add
in
add
add
add
add
add
add
add
js
add
inc
loop
add
add
in
add
add
add
add
add
add
add
mov
jecxz
add
add
in
add
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
jl
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
scas
add
add
or
rolb
add
in
add
add
add
pop
add
inc
add
dec
add
push
add
add
add
add
add
add
add
out
add
xor
or
rolb
add
in
add
add
add
push
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
add
or
rolb
add
in
add
add
add
or
inc
add
dec
add
dec
add
push
add
add
add
add
add
add
add
push
add
add
in
or
rolb
add
in
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
icebp
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
repnz
add
or
rolb
add
in
add
add
add
add
add
inc
add
add
add
add
add
add
add
es
add
cmc
or
rolb
add
in
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
add
push
testb
call
add
add
add
add
add
add
add
test
add
rolb
addb
add
clc
add
addb
add
add
add
add
add
add
add
add
add
add
add
rolb
jl,pt
add
add
add
add
add
add
add
add
add
add
call
jge
add
add
in
add
add
add
add
add
add
add
adc
adc
call
add
add
add
add
add
add
add
cmp
adc
test
add
in
add
add
add
add
add
pusha
add
add
dec
add
push
add
dec
add
dec
add
push
add
add
add
add
add
add
add
nop
add
or
push
add
add
add
add
add
add
pop
add
sldt
push
sldt
nop
push
add
mov
sldt
loopne
add
or
add
xor
add
pop
pop
add
addb
xor
add
test
add
rolb
add
clc
pop
add
and
add
dec
or
xor
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
add
add
add
add
add
add
addb
add
or
xor
add
in
add
add
add
add
add
add
add
test
add
insb
or
add
in
add
add
add
add
add
add
add
rolb
add
fcoml
or
cld
add
add
add
add
add
add
add
add
add
clc
push
add
fcoms
add
add
add
add
add
add
add
add
and
add
mov
or
adc
add
in
add
add
add
add
add
add
add
dec
pop
add
mov
add
add
add
add
add
add
add
add
add
jo
add
fcompl
or
or
add
in
add
add
add
add
add
add
add
cwtl
pop
add
in
or
in
add
add
add
add
add
add
add
add
add
rolb
add
and
add
add
in
add
add
add
add
add
add
add
call
and
add
in
add
add
add
add
add
add
add
adc
add
mov
or
push
add
add
add
add
add
add
add
add
add
cmp
add
fsubrl
or
in
add
add
add
add
add
add
add
add
add
pusha
or
add
sub
add
add
add
add
add
add
add
add
add
add
mov
add
clc
sub
add
add
in
add
add
add
add
add
add
add
mov
add
and
or
addb
add
add
add
add
add
add
add
add
fmuls
add
movsb
xor
add
add
add
add
add
add
add
add
add
add
inc
or
sbb
add
add
add
add
add
add
add
add
sub
add
pop
cmp
add
add
in
add
add
add
add
add
add
add
push
or
add
cmp
add
add
add
add
add
add
add
add
add
add
js
add
mov
or
or
add
in
add
add
add
add
add
add
add
mov
or
rolb
add
in
add
add
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
add
add
lock
add
inc
or
les
add
in
add
add
add
add
add
and
add
push
or
andb
add
add
dec
add
add
add
add
add
add
add
inc
or
add
dec
or
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
add
jl
add
in
dec
or
pusha
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
cld
or
cmp
add
and
add
dec
or
cmp
add
je
add
pushf
or
cmp
add
les
add
add
add
add
add
add
add
add
add
in
or
add
add
add
in
add
add
add
add
add
add
add
adc
add
pusha
dec
or
adc
add
in
add
add
add
add
add
add
add
cmp
add
je
or
adc
add
in
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
pushf
dec
or
adc
add
in
add
add
add
add
add
add
add
mov
add
mov
or
adc
add
in
add
add
add
add
add
add
add
fmull
add
les
add
add
in
add
add
add
add
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
cs
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
mov
add
adc
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
mov
add
mov
add
mov
add
mov
add
add
add
xor
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
hlt
shlb
jne
ret
and
fcomip
push
je
mov
or
dec
movsl
push
out
push
repz
rolb
repz
or
dec
jbe
push
sbb
push
mov
sbb
and
inc
aas
add
mov
lea
cmp
into
push
cli
xor
fldenv
insl
iret
fldcw
pop
movsl
in
sub
fists
xor
pop
xchg
je
or
mov
lret
out
daa
test
pop
pop
loop
push
jle
inc
xor
dec
dec
movsb
arpl
test
jmp
lea
sarb
mov
dec
mov
movsb
out
gs
dec
sub
in
pop
and
and
in
xlat
movsl
pop
lods
cwtl
add
outsb
jnp
outsl
movsl
mov
mov
aad
xor
push
xchg
sbb
jp
cmp
call
not
aad
cmp
inc
mov
shll
add
inc
mov
movsb
xlat
and
cmpsl
xlat
mov
rcrb
notb
filds
add
jae
sbb
cmp
ss
add
pop
push
jae
je
daa
inc
xchg
enter
sub
bound
out
mov
fisubrl
pushf
sbb
in
xlat
mov
fwait
xor
jge
lods
push
cmc
loopne
ljmpw
mov
fcmovbe
outsb
cs
sbbb
insb
gs
cwtl
mov
hlt
dec
icebp
xor
scas
cmc
push
call
ja
push
xchg
xchg
push
and
and
sti
roll
stos
fwait
inc
mov
jae
push
mov
bound
lock
shll
xchg
mov
sub
jg
push
in
test
lods
or
pop
inc
fisubl
sarl
ja
ficoms
push
shlb
rorl
shl
call
jne
inc
ret
icebp
mov
out
ret
mov
popa
inc
mov
aaa
imul
lahf
xor
adc
push
stos
adc
sahf
outsb
imul
sti
imul
adc
push
icebp
out
sbb
lret
jp
aam
les
push
mov
outsl
mov
jecxz
imul
enter
pop
jb
or
nop
pop
mov
mov
inc
int
push
xchg
testb
or
sbb
adcb
stos
aad
addr16
gs
vpacksswb
lcall
movsl
mov
inc
mov
or
imul
lcall
push
movsl
pop
fmuls
cmp
xor
pop
les
jb
fsubl
fwait
and
sub
daa
aam
das
js
hlt
popa
inc
mov
repz
jb
mov
lock
xchg
push
adc
dec
jge,pt
mov
push
mov
inc
jge
jge
and
insb
mov
dec
xlat
cs
jb
xchg
nop
lret
mov
lcall
lcall
pop
add
push
lea
mov
insb
cwtl
je
push
daa
pop
fsub
xchg
push
xor
mov
push
adcb
xchg
xchg
sub
sbb
push
mov
mov
das
or
push
jge
jg
pop
es
es
sti
cmp
sbb
aas
mov
or
test
mov
lea
repz
xchg
add
and
mov
ss
out
fdivl
test
pop
jle
and
or
divb
lcall
jmp
outsb
jl
mov
int3
arpl
dec
adc
inc
xor
add
add
adcb
push
add
icebp
ljmp
pop
jb
ret
lods
lock
or
jecxz
dec
arpl
rcrb
fwait
or
es
pop
xchg
into
xor
jo
lock
add
sub
jnp
add
dec
test
sbb
stc
jg
lock
pop
sub
sub
adc
clc
pop
xchg
and
jle
js
addl
pop
adc
mov
lret
fidivs
iret
imul
out
fstl
cltd
out
push
dec
xchg
sbbl
stos
inc
and
call
stc
pop
jge
in
decl
pop
pop
incl
push
ss
shrb
dec
cld
jge
test
push
mov
mov
or
cmp
cs
mov
jecxz
inc
out
xor
push
pop
jg
push
sub
xchg
and
push
jne
call
dec
imul
inc
cmp
insb
ficoms
mov
addr16
and
out
adc
xchg
es
cmc
into
push
hlt
imul
push
stos
fwait
mov
into
loop
sbb
or
testb
not
or
push
fcmovnbe
or
mov
and
outsl
xchg
ds
leave
dec
repz
mov
sub
shl
divb
sub
mov
mov
mov
divb
mov
into
adcl
jnp
cltd
cld
ficompl
or
std
imul
data16
jo
dec
push
loop
add
jge
insb
sarb
mov
stc
adc
cmp
cmp
or
and
andb
jne
add
test
or
stos
push
cli
mov
push
lahf
insb
loop
and
jbe
push
pop
stos
pop
or
mov
shrl
jp
mov
or
sbb
mov
or
pop
in
pop
adc
push
sub
aam
movsl
jmp
push
sysret
pop
mov
stos
stc
ss
mov
push
sbb
ljmp
lods
notl
cld
mov
dec
push
sub
hlt
sub
push
adc
mov
scas
stos
mov
aam
add
mov
test
adc
jb
xor
dec
inc
es
xor
cmp
adc
cmp
and
jge
dec
sub
cwtl
dec
and
iret
xor
jp
clc
lahf
sbb
sbbl
lods
mov
loope
push
dec
lds
sbb
les
loop
popa
cwtl
lods
cmp
jb
in
inc
fs
push
dec
mov
add
testl
cltd
loopne
jle
cmpsl
test
shrl
aam
xor
sbb
dec
fisttpll
jg
xchg
dec
icebp
jo
cmp
ja
sub
es
jo
fidivrl
inc
xlat
leave
inc
add
xchg
cmpsb
mov
lcall
and
out
or
dec
add
xchg
adc
jl
xchg
cmp
dec
call
in
sarb
addr16
or
int3
and
inc
fisubl
or
fnstsw
sbb
pop
int
repnz
sub
inc
loop
inc
repz
xchg
imul
cli
sbb
add
mov
cmp
jno
enter
lods
into
out
es
arpl
testl
ficoml
cmp
scas
popa
pop
fwait
sbb
cmpb
mov
popa
push
rorb
pop
mov
push
cmp
lea
xchg
divb
sbb
mov
negb
mov
icebp
stos
das
cmp
test
xlat
mov
mov
popa
mov
aas
es
mov
or
mov
jmp
sub
fsubrl
stc
outsl
repnz
nop
call
cmc
mov
inc
lods
cmpb
mov
movsbl
test
lods
push
sbb
ss
xor
dec
mov
push
jp
add
popa
loop
push
mov
mov
fistl
pop
and
sbb
xchg
pop
addr16
fadd
jae
fdivrl
xor
orl
stos
fwait
es
incl
out
aam
fs
or
inc
add
daa
sbb
mov
test
push
cmp
jo
sbb
lods
push
scas
ret
or
adc
cmp
mov
inc
push
cwtl
into
out
push
adcl
outsl
test
cli
mov
cmp
mov
pop
or
jg
mov
and
daa
dec
loope
mov
flds
shlb
filds
insb
pop
test
and
in
loope
in
mov
hlt
sti
sti
jno
cltd
xchg
sahf
xchg
mov
rorb
jne
mov
push
mov
dec
xor
jl
or
pop
jnp
sbb
push
negb
lret
push
inc
push
in
and
scas
xor
pop
xlat
ret
xchg
popa
jno
pop
add
out
cmp
into
mov
fsts
ja
sub
xchg
mov
cld
into
inc
adc
lahf
out
xchg
adc
in
ljmp
pushf
outsb
push
adc
out
sbb
shlb
xchg
arpl
fisubl
icebp
xor
mov
scas
mov
sar
xor
pop
lods
loope
jnp
js
cmp
dec
xor
movsl
sub
mov
cmpsb
jnp
int3
iret
das
popa
pushf
inc
push
pop
add
push
dec
push
xlat
push
mov
push
push
mov
push
mov
sub
xchg
in
loopne
and
pushl
aad
iret
outsb
jge
addl
xchg
mov
adc
jecxz
adc
aad
decb
xchg
fcomi
inc
popf
popa
mov
ljmp
stos
call
lahf
addr16
add
imul
mov
adc
les
inc
pop
pop
lods
jae
push
js
stos
sub
cmpsb
jp
fdiv
dec
lcall
unpcklps
fwait
xchg
mov
out
ret
jle
dec
lods
fistps
and
cmp
and
shlb
fistps
pop
sbb
mov
mov
cwtl
sub
outsb
mov
xchg
adc
int3
call
lock
imul
xor
pop
lcall
or
dec
inc
pop
pusha
ss
fstps
sbb
sub
sbb
pop
add
mov
sti
mov
loopne
mov
int3
imul
dec
and
xchg
xor
sbbl
jle
mov
adc
or
sbb
inc
repz
add
scas
andb
push
nop
dec
jmp
mov
mov
data16
add
cltd
push
push
mov
sbb
mull
mov
lahf
jo
insb
jg
fistps
sbb
adc
test
lods
imul
test
and
or
add
xchg
or
cmpsb
gs
mov
cmp
sub
not
mov
mov
iret
pop
sbb
add
stos
nop
sub
push
fnstsw
cmp
or
xor
jo
mov
gs
arpl
xor
adc
cld
lahf
jbe
rcrl
push
xor
ret
clc
shl
ljmp
pop
and
xor
jbe
inc
inc
loopne
stos
sbb
dec
stos
ja
sub
not
mov
add
test
loop
jmp
ret
test
movsl
adc
arpl
jl
xor
and
xor
jns
or
adc
jle
add
adc
cmc
or
out
xor
and
lock
faddl
cmp
cmpsl
jle
lds
add
inc
or
test
xlat
icebp
test
mov
flds
add
dec
jae
cmpsl
ret
pmulhw
mov
pop
and
sub
xchg
fst
cmp
adc
mov
stc
pop
movsl
push
mov
inc
xor
clc
cmp
inc
adc
sub
jmp
xchg
fs
mov
or
ret
mov
push
iret
xlat
pop
fcomip
std
mov
pushf
popf
lret
inc
xor
loopne
and
gs
sub
lcall
orl
fdivrs
jge
test
or
add
fsubp
add
pop
fistps
dec
adc
jo,pt
push
xor
sti
xor
test
pop
idiv
mov
leave
sbb
ds
xchg
pusha
cmp
ja
cltd
stos
mov
jo
test
dec
pop
cmp
ja,pn
jnp
and
mov
and
daa
scas
mov
cmp
mov
add
stos
xchg
addr16
out
adc
push
out
jo
lret
sbbl
xchg
push
loop
mov
mov
int
mov
sub
pop
add
jge
xor
and
movsb
mov
lds
pop
or
icebp
orl
outsb
mov
lea
push
dec
dec
mov
es
push
fiadds
inc
rcrb
enter
lods
xchg
cmpl
xchg
fdivl
fisubrl
push
and
jp
loopne
inc
dec
bound
in
mov
iret
les
xchg
pop
push
cltd
mov
cs
fnsave
mov
jbe
mov
pop
data16
std
cmp
lahf
fbstp
lret
mov
fcmovnb
inc
pop
aad
and
lods
jge
testb
adc
add
adc
mov
xor
inc
jl
mov
scas
adc
cmpsl
mov
add
push
sub
fisubrl
clc
js
dec
sti
sub
in
fsubrs
inc
inc
loop
push
out
rolb
mov
cmp
loop
inc
out
push
jo
cmp
jne
and
lods
xor
mov
mov
inc
mov
icebp
add
lret
lods
icebp
hlt
cmp
xchg
insb
inc
js
mull
call
cld
xor
in
icebp
jge
xchg
push
push
sbb
xor
cli
mov
imul
dec
jp
stos
movsl
movsb
add
imul
xor
loop
xchg
mov
mov
xchg
mov
lcall
jae
leave
mov
xor
loop
push
hlt
lods
leave
out
inc
cmp
cmpb
add
sub
cwtl
mov
test
mov
or
lds
out
inc
call
lds
inc
cld
xchg
mov
jne
insl
in
out
cli
push
xor
adc
push
push
mov
lods
adcl
dec
es
fists
adc
lods
adc
stos
add
xor
call
addr16
cmp
jp
aas
push
repz
std
inc
mov
push
dec
sbb
outsl
cmp
jne
xchg
dec
dec
cltd
daa
xlat
popf
push
sar
pop
lods
ret
lcall
or
rcrl
fcomps
adcb
subb
pusha
sbb
sbb
movsb
push
inc
ficoms
cld
loopne
push
call
and
pushf
aad
adc
adc
push
dec
add
scas
mov
cmpsl
rorb
push
lret
or
xchg
jg
push
mov
adc
mov
lea
mov
cmp
inc
adc
adc
xchg
sub
push
imul
test
xchg
and
sub
add
cmp
and
scas
in
iret
mov
xlat
jge
ret
mov
lea
loop
mov
jp
rorl
les
imul
or
jns
int3
in
jecxz
sar
pop
cmp
mov
adcb
popa
into
mov
test
clc
enter
in
cld
xchg
mov
mov
jg
mov
mulb
scas
jecxz
jo
sub
dec
inc
inc
jno
cmp
rorb
je
pop
pop
push
mov
pop
or
mov
lcall
jae
pop
xchg
ds
sub
ficoms
test
xchg
sub
or
sub
push
mov
clc
inc
cmpsb
popf
xchg
adcl
arpl
add
adcl
aas
dec
mov
mov
cmp
pop
mov
sbb
and
leave
cmp
daa
sarb
mov
mov
mov
ficoml
fdivrp
and
jne
sub
out
stos
rcrb
adc
bound
xchg
jnp
or
lret
lcall
movsl
push
add
ret
filds
pop
popa
aam
sub
popaw
imul
push
and
pop
push
in
dec
into
push
jo
loopne
addl
sub
js
mov
out
movsb
jns
testl
vpshufhw
or
shld
dec
int3
lcall
les
lods
sbb
mov
stc
out
fnstcw
and
incl
sahf
sbb
pop
in
mov
mov
fistpll
int3
lcall
out
loop
push
pop
jp
icebp
mov
test
pusha
dec
ret
push
pop
cld
push
movhps
test
mov
pop
xlat
adc
mov
daa
fcoms
xlat
stos
cmp
and
add
lret
xor
leave
or
pop
lods
cmc
scas
cld
xchg
sub
xor
shrb
jae
dec
jae
pop
push
fbld
mov
inc
sbb
mov
daa
nop
push
add
rorb
add
lods
sbb
and
add
je
jge
mov
push
lds
mov
js
cwtl
pop
sar
inc
add
sbb
data16
inc
or
push
sub
cs
inc
xchg
test
dec
mov
pop
push
out
dec
int
and
loope
sub
mov
mov
mov
repz
lahf
pop
jbe
aad
cs
pop
xchg
push
add
jle
xchg
das
or
xor
xchg
fstpl
xchg
jmp
outsb
push
xorb
loopne
cmp
xchg
mov
fimuls
stc
fisubs
cli
test
lret
xchg
inc
ja
rorl
push
clc
test
shrl
push
dec
movsb
xchg
dec
subb
test
pop
mov
cmp
enter
dec
repnz
gs
ljmp
test
push
ss
pop
sbb
mov
jmp
stos
xchg
nop
mov
jmp
inc
sbb
ss
mov
int3
jae
call
lods
jns
bound
jne
ljmp
mov
jbe
test
subl
sahf
out
sub
inc
stos
push
push
out
pop
push
sub
movsl
into
aaa
stos
xchg
outsb
gs
jne
or
fwait
pop
out
lahf
inc
lret
out
jecxz
call
push
lods
lret
or
dec
cmpb
xchg
xchg
ds
mov
sub
pop
mov
xor
pop
dec
mov
cmc
clc
adc
xor
mov
iret
pusha
iret
les
int
cmc
sub
cmp
pusha
mov
push
into
test
cmpsb
push
pmuludq
emms
std
das
sub
lock
in
push
aaa
std
je
mov
shr
xchg
inc
xchg
sbb
inc
adc
mov
push
inc
imul
clc
test
mov
ljmp
add
pop
add
fs
movsb
imul
fimull
shll
sub
sbb
cwtl
repnz
and
cwtl
loop
add
shrb
ljmp
mov
out
stos
mov
mov
shl
mov
add
pop
fistps
iret
hlt
sbb
mov
test
jp
mov
sbb
mov
lods
in
inc
arpl
mov
mov
mov
in
jb
push
inc
sub
push
xor
sub
jbe
jb
push
arpl
lahf
into
push
fstpt
cs
in
push
icebp
icebp
dec
mov
into
mov
outsl
push
pop
notl
mov
jno
jp
stc
shrl
cmc
shlb
mov
xchg
clc
sbb
loopne
cltd
sbb
sbb
mov
in
cmp
lret
in
sbb
lea
mov
inc
xchg
jg
shlb
gs
sti
test
lods
mov
mov
les
jg
jnp
sbb
push
mov
xorb
scas
ret
insb
out
aam
mov
ret
test
adc
roll
lret
aas
cmpsl
mov
inc
sbb
push
cltd
fcomip
inc
in
push
pop
sbb
repnz
fildll
je
js
gs
xor
fwait
mov
sub
sub
xchg
shll
mov
push
std
mov
movsb
pop
mov
mov
out
mov
jbe
adcl
fisttpl
cmc
cltd
outsl
movsb
add
cmp
pop
inc
sub
mov
test
shrl
sub
cli
loop
xorl
pushl
pushf
add
push
or
das
out
push
sbb
mov
and
in
mov
pop
adc
jo
ss
mov
push
push
sub
inc
mov
mov
pop
inc
loopne
xchg
jecxz
ficoms
push
pop
into
and
shl
mov
xor
repnz
inc
stos
insb
adcl
out
movsl
out
int
loope
xchg
shlb
rolb
dec
jp
mov
pop
jno
xchg
pop
data16
data16
fbld
push
cmp
inc
adc
adc
test
mov
or
repz
adc
mov
pop
xchg
int
sub
shl
cltd
mov
imul
lea
add
or
mov
test
ljmp
cld
dec
dec
int3
xor
mov
dec
xchg
and
mov
or
mull
cwtl
call
sub
add
or
dec
push
lret
pop
outsl
pop
push
repz
rorl
push
or
pop
out
mov
lds
mov
jle
mov
bound
inc
push
loope
adc
adc
shll
mov
mov
fwait
push
idiv
xchg
scas
andl
jne
mov
out
jmp
outsb
testb
loopne
fucomp
stc
in
xchg
sbb
std
ret
insl
repnz
cwtl
adc
add
cwtl
movsb
stc
sub
popf
je
outsl
sub
jno
sub
and
inc
rcrb
inc
das
lcall
test
daa
in
into
mov
mov
cmp
xchg
pop
mov
lret
push
cmp
cmp
loope
push
scas
test
mov
mov
out
cmc
cmc
mov
mov
push
pop
sub
or
movq
mov
imul
cmp
frstor
aam
jne
orb
mov
mov
push
mov
repnz
incb
add
adc
pop
xor
movsb
and
or
movsb
pusha
imul
xor
clc
inc
mov
jb
outsl
mov
mov
std
fwait
bound
xor
inc
lahf
sub
add
adc
push
jge
aas
rcrb
cmp
lcall
push
lret
pop
jno
in
add
mov
adc
mov
xchg
xchg
xor
mov
mov
outsb
sarl
mov
mov
xor
sbb
dec
js
inc
ds
cmp
adc
inc
mov
jo
push
ret
je
addr16
ficoms
mov
mov
push
xchg
imul
aaa
push
sti
push
adc
xchg
sub
loop
push
ja
mov
les
aad
push
xor
les
adc
leave
repnz
test
addl
rcrl
pop
and
inc
push
jg
lods
cmp
ret
lods
jge
cmp
fistps
imul
dec
repz
pop
mov
cld
mov
and
je
jmp
ss
fistpl
cli
sub
xchg
adc
push
dec
push
mov
sti
xor
adc
ss
mov
mov
lods
scas
stc
mov
mov
jno
cld
adc
pop
mov
popa
test
in
push
ret
fistl
and
xchg
inc
mov
pop
add
push
ret
mov
cmpsb
adc
jo
jbe
inc
into
pop
pop
cli
jmp
push
mov
rol
inc
sti
lods
mov
adc
data16
mov
jae
push
add
bndstx
imul
push
adc
sbb
add
es
sti
or
mov
lock
xchg
insb
daa
cmp
jae
jl
rcll
cs
jnp
aad
or
jl
cmp
int3
xchg
xor
test
inc
enter
cs
lds
sarl
testl
adc
movsb
divb
out
in
ds
adc
sub
xrelease
lods
push
test
cwtl
outsb
js
xchg
cs
mov
pop
inc
sar
fimull
cmp
out
adc
repz
stc
insl
aam
cltd
insl
es
adc
jb
cmp
xchg
sbb
cli
ljmp
inc
out
addb
mov
stos
jl
inc
iret
mov
fistpl
lret
inc
fwait
and
in
in
adc
jp
pop
sbb
xchg
gs
cmp
int3
sub
push
dec
and
popf
add
out
cmp
sbb
lock
mov
ret
std
jecxz
hlt
pop
fnstcw
sub
or
movsb
adc
orb
les
lret
jecxz
mov
lahf
mov
stc
xchg
add
repz
mov
imul
into
pop
dec
xor
xchg
xor
es
fadds
mov
mov
in
adc
jbe
xchg
cltd
xor
add
dec
adcb
fnsave
mov
out
pop
in
adc
into
adc
subb
adc
mov
repz
in
clc
sub
pop
mov
mov
or
push
sub
inc
imul
mov
fbld
adc
cwtl
je
xchg
jg
pop
stos
or
fstpt
mov
movsb
test
aam
mov
inc
pop
lods
ret
aad
iret
loop
in
cmpb
data16
pop
push
lahf
add
call
inc
bound
in
sbb
dec
push
push
pop
dec
cmpsb
sahf
shll
cmp
push
or
xchg
mov
dec
add
jp
cli
aam
mov
hlt
jbe
in
pop
and
mov
repz
movsl
push
aad
adc
cmp
dec
lock
cmpsb
inc
push
popf
fists
push
or
das
call
fdivr
cmp
jae
out
and
mov
imul
sahf
push
pop
push
outsb
sub
sahf
inc
sbb
shlb
pop
pop
xlat
mov
enter
jo
fsubp
adc
ret
int3
sub
sub
xor
int
ss
push
int
jnp
adc
popf
sbb
sarl
push
push
call
or
lcall
push
test
imul
mov
test
pop
mov
shll
jno
adc
or
ss
cmp
jmp
jo
fadds
sub
mov
cltd
outsl
loopne
cltd
lcall
mov
loope
orl
xchg
push
mov
pop
cmp
add
cmp
lcall
mov
pop
pop
icebp
mov
pop
aas
cld
pushf
inc
xlat
shrl
push
scas
push
push
dec
pop
cli
inc
leave
ret
push
in
cmp
xor
mov
fsincos
mov
cmp
fisttpl
mov
hlt
ret
int3
jl
and
mov
xor
sub
mov
bound
or
hlt
int
nop
pop
aas
clc
xchg
adc
adc
adc
ss
push
mov
adc
lock
add
cltd
mov
popf
pop
test
jg
loop
aaa
dec
inc
push
mov
jl
rorl
mov
lret
int
and
lea
pusha
cmp
ret
mov
pop
push
cld
ljmp
aas
iret
push
addl
mov
inc
mov
xor
pop
bound
push
sub
xchg
and
insb
movsb
cmp
popf
jo
mov
in
addr16
and
jbe
pop
mov
mov
jp
xor
in
cmp
mov
add
lret
mov
mov
fsubrl
arpl
fists
popa
or
add
xchg
pop
loopne
mov
jns
xchg
bound
inc
mov
loop
and
cmc
mov
mov
lock
and
push
loopne
enter
insl
orl
pop
mov
or
add
movsb
jmp
loop
scas
mov
pop
ds
xchg
mov
loop
ret
push
mov
adc
popf
rcrl
lcall
jae
dec
and
ja
imul
mov
std
ljmp
mov
mov
xchg
sahf
lds
mov
fmul
outsb
ficomps
scas
gs
loope
repnz
cli
stc
cmp
or
or
mov
mov
jnp
sbb
xlat
xor
repnz
sbb
outsb
xor
pop
xchg
stos
push
sbb
mov
mov
flds
in
mov
pop
xchg
push
insl
aaa
cmpsl
sub
aas
xor
cmpsl
add
fsts
int3
dec
stos
sbb
mov
aas
adc
adc
cli
xchg
or
mov
mov
inc
sub
movsl
jne
call
pop
daa
xor
push
lods
adc
mov
stc
mov
icebp
lahf
push
mov
push
pop
push
cmc
adc
adc
adc
xchg
mov
adc
popf
cmc
fcompl
xor
pop
sbb
inc
mov
and
lds
sti
ljmp
cmp
hlt
push
xchg
ja
shl
shlb
mov
jbe
out
push
mov
or
dec
push
lock
lahf
pop
fndisi(8087
adc
pop
sub
mov
add
test
cmc
mov
mov
bound
ja
mov
test
call
sbb
fisttpl
adc
jbe
fidivs
es
repz
rclb
mov
in
jno
fucomip
cltd
push
cwtl
aam
xchg
pop
sbb
scas
cmc
pop
nop
pop
insl
jmp
add
aaa
inc
ficomps
sub
out
mov
lcall
repnz
sbb
xchg
lock
das
jne
sub
ret
jnp
inc
iret
rclb
lret
pop
and
xlat
ss
pop
leave
js
in
in
ja
clc
mov
fsubrp
insl
xlat
mov
imul
das
sub
js
orb
cmpsb
push
int3
mov
jno
ja
jg
lret
jne
notl
pushf
dec
mov
stos
stc
icebp
sbb
aam
mov
mov
sub
in
jg
jmp
xor
data16
pusha
sbb
mov
fisubrl
or
push
fiadds
in
dec
jnp
subb
and
stc
call
jecxz
mov
xchg
es
push
outsl
pop
dec
aam
out
movl
mov
test
scas
pop
subb
in
nop
inc
dec
cltd
loopne
jb
add
pop
negl
mov
ret
fsubrs
jae
jp
shl
cwtl
push
and
or
add
cs
mov
int3
pop
pop
adc
and
fwait
add
xchg
pop
in
cltd
call
adc
ja
push
jae
ds
xor
mov
test
jne
and
hlt
mov
sub
push
mov
data16
inc
sbb
bound
jl
push
sub
cmc
inc
jmp
jmp
add
stos
adcb
shr
into
xor
jmp
pop
mov
scas
addl
or
hlt
add
out
and
ret
or
sti
xchg
dec
pusha
inc
add
cmp
jne
cmp
fcompl
cmpsl
and
repz
dec
xchg
jnp
stc
cld
lret
push
dec
xchg
mov
xor
lds
jo
les
pop
mov
shrb
arpl
or
mov
into
adc
mov
fs
dec
push
pushl
je
adcl
cld
jmp
cwtl
es
in
jp
cmp
inc
int
sub
inc
add
mov
int
in
enter
mov
add
bound
dec
aaa
outsb
outsb
movsl
jp
mov
rcrb
dec
lods
fdivrl
adc
imul
mov
cmpl
sub
adc
push
push
mov
mov
xchg
ss
jl
rol
notb
push
test
hlt
bound
repz
loope
ljmp
inc
cwtl
call
adc
fbld
ret
lock
mov
dec
fbstp
sbb
addb
cmc
cmp
cmpsl
push
xor
mov
aam
shl
mov
xchg
stc
push
dec
addb
ret
mov
sbb
adc
mov
aaa
add
push
or
stos
pop
nop
repnz
ficoms
fidivrs
aaa
xlat
inc
pop
lods
in
cld
or
out
xor
or
ljmp
aaa
cmpl
dec
jg
jb
mov
es
mov
add
or
mov
lds
lahf
mov
int
and
imul
jp
call
jo
cltd
push
mov
xchg
lcall
mov
mov
mov
push
insl
xchg
or
mov
les
jecxz
mov
imul
and
sbb
mov
call
cmpsl
js
into
add
aad
push
xchg
stc
les
jle
mov
pop
out
mov
scas
cli
add
push
dec
sahf
mov
lods
pop
xchg
mov
daa
fldcw
shrb
rcr
inc
popf
ret
insb
xor
mov
mov
test
push
std
xchg
inc
repnz
out
ret
mov
leave
jecxz
lock
add
push
mov
popf
fbld
mov
cltd
push
arpl
stc
pusha
hlt
outsl
jp,pt
cli
ficomps
xor
jne
mov
dec
lods
sti
subb
popa
inc
bnd
mov
adc
pop
into
adc
popf
imul
dec
gs
sti
fbstp
xor
fisttps
ljmp
test
mov
fistpl
push
mov
or
ret
mov
and
mov
mov
fildl
int3
subb
lret
sub
adc
jae
or
pushf
sub
mov
add
push
dec
sahf
adc
mov
outsb
cmp
xor
int
xchg
cmp
js
push
jecxz
js
repnz
mov
push
lret
loop
dec
jp
mov
xchg
into
lret
mov
mov
addr16
pcmpeqd
test
shll
adc
sbb
sbb
scas
sbb
sub
lock
mov
ds
jo
adc
divl
add
jle
jecxz
push
aam
decb
sbb
mov
cwtl
js
sbb
xchg
ss
shrb
push
mov
daa
cmp
jmp
in
call
xchg
subb
dec
xor
out
lods
movsb
das
adc
sbb
sbb
ret
xchg
addl
xor
rcrb
cmp
arpl
push
ss
rcr
inc
ljmp
mov
dec
inc
sub
dec
lcall
lods
in
fsubrs
pop
inc
stos
and
xor
jno
mov
cltd
sbb
dec
aam
out
leave
sbb
imull
push
add
jno
test
icebp
loop
leave
shll
dec
jb
and
js
jg
xorl
bound
movsb
sbb
js
xor
add
lods
fnsave
push
call
fmulp
leave
fwait
adc
mov
nop
rcll
mov
mov
pop
fs
ja
in
jnp
lahf
sub
cwtl
add
xchg
jecxz
pop
icebp
dec
jmp
fstpt
push
clc
mov
mov
scas
adc
test
pop
add
mov
stc
mov
jecxz
add
lods
push
or
fcomip
and
xlat
xchg
leave
push
loop
rorl
shlb
dec
cltd
jnp
jbe
and
xor
sub
inc
jo
cmpsb
stos
stc
sbb
inc
mov
jmp
add
jle
lahf
or
aam
push
rcrl
ret
std
mov
cmp
sarb
pop
push
sbbl
insl
sub
data16
mov
jae,pn
pop
aam
add
popf
sbb
pop
shrl
fdivrl
rorl
clc
mov
ret
test
ret
das
jae
push
cmp
out
test
lcall
mov
movsb
retw
or
xchg
jmp
mov
outsl
fwait
rol
cld
test
xchg
jl
loope
adc
into
fs
std
jl
lds
push
adc
cmc
xchg
fidivl
xchg
mov
jns
call
push
pop
cmp
jg
stc
insb
fimuls
popf
scas
add
sbb
std
cltd
in
mov
es
or
dec
or
aas
sbb
xor
fcmovnb
into
pushf
sub
and
test
aas
xchg
stos
or
mov
sti
ficompl
sbb
dec
jo
sub
inc
dec
mov
cmc
mov
mov
das
pop
pop
lret
mov
ret
mov
fidivs
inc
scas
push
dec
pushf
das
push
xorl
fadd
xor
and
inc
jmp
mov
sub
test
and
mov
insl
frstor
jae
push
cmp
adc
dec
sti
dec
idiv
sub
adc
addb
or
mov
sbb
xchg
enter
ja
push
cmp
cmpsb
sub
pop
loop
xor
divl
mov
push
dec
retw
insl
inc
imull
jg
imul
in
cmp
sbb
clc
lods
push
out
ret
xor
inc
imul
xchg
fwait
cmp
fs
bound
xchg
mov
sub
inc
hlt
mov
imul
mulb
adc
mov
dec
jl
mov
ja
adc
mov
push
jg
push
bound
push
lods
jge
in
pop
jno
mov
testl
out
mov
ficoml
lcall
xor
lock
idivl
and
sar
outsb
clc
mov
sub
jecxz
or
mov
xchg
mov
movsl
sub
jl
and
lods
jb
add
pusha
js
daa
jecxz
mov
dec
lock
aas
or
sub
movsl
xchg
out
sub
mov
dec
test
fwait
rorl
rcrb
mov
sbb
jno
rorb
sahf
mov
cmpsb
mov
jnp
aam
mov
push
xor
xor
xor
rcl
pop
sub
mov
aam
mov
or
push
sub
push
out
scas
sti
xor
cmp
cld
add
and
inc
or
addr16
lret
mov
imul
adc
in
jne
push
repz
and
stos
mov
pop
mov
daa
addr16
fcomip
and
lret
xor
push
pop
jne
xor
sub
add
mov
mov
out
mov
cld
movsb
fbstp
sub
push
xor
mov
pushl
xchg
pop
inc
fisttps
into
lods
icebp
rcll
test
rol
mov
mov
and
xchg
stos
aaa
popf
shlb
fnstenv
jecxz
dec
shl
inc
daa
loope
test
pop
and
lea
sub
in
aas
jno
inc
xchg
ror
inc
and
movb
les
fidivrl
popf
das
mov
lahf
mov
jne
imul
out
les
inc
into
ret
fnstcw
or
jmp
mov
div
sub
mov
cmp
or
sub
lahf
sarb
add
xor
int
js
test
ds
mov
mov
inc
out
incl
mov
push
lods
mov
jns
dec
cmp
adc
push
xchg
pop
pop
mov
js
jbe
ret
jb
inc
lahf
jne
jmp
popl
fnstsw
cmp
pop
ret
ljmp
cmp
mov
mov
mov
outsb
rorb
dec
add
leave
mov
popf
pop
mov
fnstcw
sub
xor
mulb
rorb
xchg
push
in
cmc
mov
push
test
inc
or
int3
xchg
out
cmp
push
dec
lret
jl,pt
jg
fisubrs
inc
or
jno
repnz
arpl
roll
in
fwait
mov
add
out
xchg
addr16
stos
jno
sbb
arpl
fiaddl
dec
dec
mov
popa
add
leave
push
add
test
int3
fsubp
mov
adc
outsl
inc
cmp
loope
lret
mov
inc
push
test
mov
push
jne
mov
xchg
xor
sbb
mov
int
fsubrp
movsb
stos
jb
mov
test
fnstenv
inc
in
push
shrb
popa
push
add
rolb
cmp
xor
push
dec
ss
addr16
ds
jnp
push
cld
jg
test
lock
xor
adc
dec
xchg
outsb
xor
xchg
je
pusha
stc
or
lahf
loop
jbe
sub
scas
bsr
push
sbb
xchg
loope
flds
lods
push
jg
sub
cwtl
xchg
sub
or
cmpsb
xchg
ds
iret
add
xchg
popf
pop
ret
std
out
sbb
cmpsl
pusha
mov
dec
in
mov
insb
pop
int
ficoml
mov
mov
mov
repz
daa
push
xor
jge
ds
xchg
dec
into
loop
mov
xchg
pop
jge
std
arpl
cmp
mov
xchg
pop
lcall
shl
adc
sub
ret
jae
mov
push
jmp
fbld
adc
push
xchg
and
pop
push
repz
mov
iret
jo
and
add
cmpsb
in
out
xor
sbb
ljmp
fsub
jecxz
add
fsts
mov
inc
and
pop
adc
daa
mov
pushf
es
out
mov
inc
in
int
xchg
dec
or
sub
mov
outsb
test
arpl
pop
enter
std
test
push
lret
mov
mov
or
arpl
int
test
dec
push
fldl
lods
pusha
mov
add
mov
jp
push
lcall
sub
or
push
ret
fcmovu
xlat
shll
cwtl
in
sbb
repnz
push
cmp
shlb
mov
or
sub
mov
jns
xchg
shrb
lds
fstps
cmpsb
pop
out
pop
nop
dec
pop
jecxz
push
ja
cli
ja
sbb
jg
jb
repnz
xchg
inc
xchg
sahf
out
frstor
jmp
sub
out
fadd
fistl
ss
xchg
push
mov
pop
ja
sbb
scas
inc
dec
mov
mov
shlb
inc
inc
shr
xor
pushl
loope
xchg
jmp
fwait
push
mov
jno
inc
inc
cwtl
nop
loope
cld
lods
pushf
jp
mov
pop
lds
jg
pop
sub
clc
ret
pop
pop
daa
idiv
mov
clc
into
enter
aam
loope
xor
jno
shlb
lea
inc
sti
rcrb
mov
xchg
leave
dec
push
dec
lcall
mov
out
mov
sub
mov
and
cmp
add
adc
aaa
mov
xchg
lret
nop
leave
cmp
push
dec
cli
bound
xchg
adc
das
adc
int3
cmp
mov
or
out
lock
cmp
sub
xchg
inc
fstl
les
int3
cmp
jge
sbb
mov
add
cwtl
dec
mov
jnp
je
rcrb
inc
dec
jno
dec
mov
loop
sbb
jg
shl
pop
mov
xchg
call
mulb
iret
push
ja
jge
aam
ret
cmpsl
iret
mov
adc
adc
loope
xchg
fcomip
jg
or
inc
cmpsl
and
cmpsb
out
xchg
sbb
loopne
mov
lret
insl
cmc
pushf
pop
xor
sub
add
inc
jae
push
xor
lcall
mov
inc
int3
sub
adc
insb
mov
pop
lds
add
and
ret
testb
mov
loope
pop
mov
lea
push
scas
cmp
dec
inc
mov
jp,pn
mov
mov
adc
pop
les
pop
insl
je
sbb
lahf
pop
mov
jne
out
outsl
pop
sub
pop
mov
pcmpgtw
xchg
mov
or
adc
aad
ror
loopne
inc
xchg
sbb
jmp
or
or
dec
pusha
lahf
xlat
mov
and
cmp
xchg
popf
mov
.byte
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
dec
add
add
mov
add
add
or
orb
add
add
in
or
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
inc
fmull
add
add
in
add
add
add
add
add
add
add
fadds
add
je
or
xor
add
in
add
add
add
add
add
add
add
add
add
test
or
xor
add
in
add
add
add
add
add
add
add
sub
add
or
xor
add
in
add
add
add
add
add
add
add
push
add
add
loope
add
add
in
add
add
add
add
add
add
add
js
add
inc
loop
add
add
in
add
add
add
add
add
add
add
mov
jecxz
add
add
in
add
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
jl
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
scas
add
add
or
rolb
add
in
add
add
add
pop
add
inc
add
dec
add
push
add
add
add
add
add
add
add
out
add
xor
or
rolb
add
in
add
add
add
push
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
add
or
rolb
add
in
add
add
add
or
inc
add
dec
add
dec
add
push
add
add
add
add
add
add
add
push
add
add
in
or
rolb
add
in
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
icebp
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
repnz
add
or
rolb
add
in
add
add
add
add
add
inc
add
add
add
add
add
add
add
es
add
cmc
or
rolb
add
in
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
add
push
testb
call
add
add
add
add
add
add
add
test
add
rolb
addb
add
clc
add
addb
add
add
add
add
add
add
add
add
add
add
add
rolb
jl,pt
add
add
add
add
add
add
add
add
add
add
call
jge
add
add
in
add
add
add
add
add
add
add
adc
adc
call
add
add
add
add
add
add
add
cmp
adc
test
add
in
add
add
add
add
add
pusha
add
add
dec
add
push
add
dec
add
dec
add
push
add
add
add
add
add
add
add
nop
add
or
push
add
add
add
add
add
add
pop
add
sldt
push
sldt
nop
push
add
mov
sldt
loopne
add
or
add
xor
add
pop
pop
add
addb
xor
add
test
add
rolb
add
clc
pop
add
and
add
dec
or
xor
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
add
add
add
add
add
add
addb
add
or
xor
add
in
add
add
add
add
add
add
add
test
add
insb
or
add
in
add
add
add
add
add
add
add
rolb
add
fcoml
or
cld
add
add
add
add
add
add
add
add
add
clc
push
add
fcoms
add
add
add
add
add
add
add
add
and
add
mov
or
adc
add
in
add
add
add
add
add
add
add
dec
pop
add
mov
add
add
add
add
add
add
add
add
add
jo
add
fcompl
or
or
add
in
add
add
add
add
add
add
add
cwtl
pop
add
in
or
in
add
add
add
add
add
add
add
add
add
rolb
add
and
add
add
in
add
add
add
add
add
add
add
call
and
add
in
add
add
add
add
add
add
add
adc
add
mov
or
push
add
add
add
add
add
add
add
add
add
cmp
add
fsubrl
or
in
add
add
add
add
add
add
add
add
add
pusha
or
add
sub
add
add
add
add
add
add
add
add
add
add
mov
add
clc
sub
add
add
in
add
add
add
add
add
add
add
mov
add
and
or
addb
add
add
add
add
add
add
add
add
fmuls
add
movsb
xor
add
add
add
add
add
add
add
add
add
add
inc
or
sbb
add
add
add
add
add
add
add
add
sub
add
pop
cmp
add
add
in
add
add
add
add
add
add
add
push
or
add
cmp
add
add
add
add
add
add
add
add
add
add
js
add
mov
or
or
add
in
add
add
add
add
add
add
add
mov
or
rolb
add
in
add
add
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
add
add
lock
add
inc
or
les
add
in
add
add
add
add
add
and
add
push
or
andb
add
add
dec
add
add
add
add
add
add
add
inc
or
add
dec
or
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
add
jl
add
in
dec
or
pusha
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
cld
or
cmp
add
and
add
dec
or
cmp
add
je
add
pushf
or
cmp
add
les
add
add
add
add
add
add
add
add
add
in
or
add
add
add
in
add
add
add
add
add
add
add
adc
add
pusha
dec
or
adc
add
in
add
add
add
add
add
add
add
cmp
add
je
or
adc
add
in
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
pushf
dec
or
adc
add
in
add
add
add
add
add
add
add
mov
add
mov
or
adc
add
in
add
add
add
add
add
add
add
fmull
add
les
add
add
in
add
add
add
add
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
cs
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
dec
add
add
mov
add
add
or
orb
add
add
in
or
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
inc
fmull
add
add
in
add
add
add
add
add
add
add
fadds
add
je
or
xor
add
in
add
add
add
add
add
add
add
add
add
test
or
xor
add
in
add
add
add
add
add
add
add
sub
add
or
xor
add
in
add
add
add
add
add
add
add
push
add
add
loope
add
add
in
add
add
add
add
add
add
add
js
add
inc
loop
add
add
in
add
add
add
add
add
add
add
mov
jecxz
add
add
in
add
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
jl
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
scas
add
add
or
rolb
add
in
add
add
add
pop
add
inc
add
dec
add
push
add
add
add
add
add
add
add
out
add
xor
or
rolb
add
in
add
add
add
push
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
add
or
rolb
add
in
add
add
add
or
inc
add
dec
add
dec
add
push
add
add
add
add
add
add
add
push
add
add
in
or
rolb
add
in
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
icebp
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
repnz
add
or
rolb
add
in
add
add
add
add
add
inc
add
add
add
add
add
add
add
es
add
cmc
or
rolb
add
in
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
add
push
testb
call
add
add
add
add
add
add
add
test
add
rolb
addb
add
clc
add
addb
add
add
add
add
add
add
add
add
add
add
add
rolb
jl,pt
add
add
add
add
add
add
add
add
add
add
call
jge
add
add
in
add
add
add
add
add
add
add
adc
adc
call
add
add
add
add
add
add
add
cmp
adc
test
add
in
add
add
add
add
add
pusha
add
add
dec
add
push
add
dec
add
dec
add
push
add
add
add
add
add
add
add
nop
add
or
push
add
add
add
add
add
add
pop
add
sldt
push
sldt
nop
push
add
mov
sldt
loopne
add
or
add
xor
add
pop
pop
add
addb
xor
add
test
add
rolb
add
clc
pop
add
and
add
dec
or
xor
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
add
add
add
add
add
add
addb
add
or
xor
add
in
add
add
add
add
add
add
add
test
add
insb
or
add
in
add
add
add
add
add
add
add
rolb
add
fcoml
or
cld
add
add
add
add
add
add
add
add
add
clc
push
add
fcoms
add
add
add
add
add
add
add
add
and
add
mov
or
adc
add
in
add
add
add
add
add
add
add
dec
pop
add
mov
add
add
add
add
add
add
add
add
add
jo
add
fcompl
or
or
add
in
add
add
add
add
add
add
add
cwtl
pop
add
in
or
in
add
add
add
add
add
add
add
add
add
rolb
add
and
add
add
in
add
add
add
add
add
add
add
call
and
add
in
add
add
add
add
add
add
add
adc
add
mov
or
push
add
add
add
add
add
add
add
add
add
cmp
add
fsubrl
or
in
add
add
add
add
add
add
add
add
add
pusha
or
add
sub
add
add
add
add
add
add
add
add
add
add
mov
add
clc
sub
add
add
in
add
add
add
add
add
add
add
mov
add
and
or
addb
add
add
add
add
add
add
add
add
fmuls
add
movsb
xor
add
add
add
add
add
add
add
add
add
add
inc
or
sbb
add
add
add
add
add
add
add
add
sub
add
pop
cmp
add
add
in
add
add
add
add
add
add
add
push
or
add
cmp
add
add
add
add
add
add
add
add
add
add
js
add
mov
or
or
add
in
add
add
add
add
add
add
add
mov
or
rolb
add
in
add
add
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
add
add
lock
add
inc
or
les
add
in
add
add
add
add
add
and
add
push
or
andb
add
add
dec
add
add
add
add
add
add
add
inc
or
add
dec
or
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
add
jl
add
in
dec
or
pusha
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
cld
or
cmp
add
and
add
dec
or
cmp
add
je
add
pushf
or
cmp
add
les
add
add
add
add
add
add
add
add
add
in
or
add
add
add
in
add
add
add
add
add
add
add
adc
add
pusha
dec
or
adc
add
in
add
add
add
add
add
add
add
cmp
add
je
or
adc
add
in
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
pushf
dec
or
adc
add
in
add
add
add
add
add
add
add
mov
add
mov
or
adc
add
in
add
add
add
add
add
add
add
fmull
add
les
add
add
in
add
add
add
add
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
cs
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
mov
add
adc
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
mov
add
mov
add
mov
add
mov
add
add
add
xor
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
hlt
shlb
jne
ret
and
fcomip
push
je
mov
or
dec
movsl
push
out
push
repz
rolb
repz
or
dec
jbe
push
sbb
push
mov
sbb
and
inc
aas
add
mov
lea
cmp
into
push
cli
xor
fldenv
insl
iret
fldcw
pop
movsl
in
sub
fists
xor
pop
xchg
je
or
mov
lret
out
daa
test
pop
pop
loop
push
jle
inc
xor
dec
dec
movsb
arpl
test
jmp
lea
sarb
mov
dec
mov
movsb
out
gs
dec
sub
in
pop
and
and
in
xlat
movsl
pop
lods
cwtl
add
outsb
jnp
outsl
movsl
mov
mov
aad
xor
push
xchg
sbb
jp
cmp
call
not
aad
cmp
inc
mov
shll
add
inc
mov
movsb
xlat
and
cmpsl
xlat
mov
rcrb
notb
filds
add
jae
sbb
cmp
ss
add
pop
push
jae
je
daa
inc
xchg
enter
sub
bound
out
mov
fisubrl
pushf
sbb
in
xlat
mov
fwait
xor
jge
lods
push
cmc
loopne
ljmpw
mov
fcmovbe
outsb
cs
sbbb
insb
gs
cwtl
mov
hlt
dec
icebp
xor
scas
cmc
push
call
ja
push
xchg
xchg
push
and
and
sti
roll
stos
fwait
inc
mov
jae
push
mov
bound
lock
shll
xchg
mov
sub
jg
push
in
test
lods
or
pop
inc
fisubl
sarl
ja
ficoms
push
shlb
rorl
shl
call
jne
inc
ret
icebp
mov
out
ret
mov
popa
inc
mov
aaa
imul
lahf
xor
adc
push
stos
adc
sahf
outsb
imul
sti
imul
adc
push
icebp
out
sbb
lret
jp
aam
les
push
mov
outsl
mov
jecxz
imul
enter
pop
jb
or
nop
pop
mov
mov
inc
int
push
xchg
testb
or
sbb
adcb
stos
aad
addr16
gs
vpacksswb
lcall
movsl
mov
inc
mov
or
imul
lcall
push
movsl
pop
fmuls
cmp
xor
pop
les
jb
fsubl
fwait
and
sub
daa
aam
das
js
hlt
popa
inc
mov
repz
jb
mov
lock
xchg
push
adc
dec
jge,pt
mov
push
mov
inc
jge
jge
and
insb
mov
dec
xlat
cs
jb
xchg
nop
lret
mov
lcall
lcall
pop
add
push
lea
mov
insb
cwtl
je
push
daa
pop
fsub
xchg
push
xor
mov
push
adcb
xchg
xchg
sub
sbb
push
mov
mov
das
or
push
jge
jg
pop
es
es
sti
cmp
sbb
aas
mov
or
test
mov
lea
repz
xchg
add
and
mov
ss
out
fdivl
test
pop
jle
and
or
divb
lcall
jmp
outsb
jl
mov
int3
arpl
dec
adc
inc
xor
add
add
adcb
push
add
icebp
ljmp
pop
jb
ret
lods
lock
or
jecxz
dec
arpl
rcrb
fwait
or
es
pop
xchg
into
xor
jo
lock
add
sub
jnp
add
dec
test
sbb
stc
jg
lock
pop
sub
sub
adc
clc
pop
xchg
and
jle
js
addl
pop
adc
mov
lret
fidivs
iret
imul
out
fstl
cltd
out
push
dec
xchg
sbbl
stos
inc
and
call
stc
pop
jge
in
decl
pop
pop
incl
push
ss
shrb
dec
cld
jge
test
push
mov
mov
or
cmp
cs
mov
jecxz
inc
out
xor
push
pop
jg
push
sub
xchg
and
push
jne
call
dec
imul
inc
cmp
insb
ficoms
mov
addr16
and
out
adc
xchg
es
cmc
into
push
hlt
imul
push
stos
fwait
mov
into
loop
sbb
or
testb
not
or
push
fcmovnbe
or
mov
and
outsl
xchg
ds
leave
dec
repz
mov
sub
shl
divb
sub
mov
mov
mov
divb
mov
into
adcl
jnp
cltd
cld
ficompl
or
std
imul
data16
jo
dec
push
loop
add
jge
insb
sarb
mov
stc
adc
cmp
cmp
or
and
andb
jne
add
test
or
stos
push
cli
mov
push
lahf
insb
loop
and
jbe
push
pop
stos
pop
or
mov
shrl
jp
mov
or
sbb
mov
or
pop
in
pop
adc
push
sub
aam
movsl
jmp
push
sysret
pop
mov
stos
stc
ss
mov
push
sbb
ljmp
lods
notl
cld
mov
dec
push
sub
hlt
sub
push
adc
mov
scas
stos
mov
aam
add
mov
test
adc
jb
xor
dec
inc
es
xor
cmp
adc
cmp
and
jge
dec
sub
cwtl
dec
and
iret
xor
jp
clc
lahf
sbb
sbbl
lods
mov
loope
push
dec
lds
sbb
les
loop
popa
cwtl
lods
cmp
jb
in
inc
fs
push
dec
mov
add
testl
cltd
loopne
jle
cmpsl
test
shrl
aam
xor
sbb
dec
fisttpll
jg
xchg
dec
icebp
jo
cmp
ja
sub
es
jo
fidivrl
inc
xlat
leave
inc
add
xchg
cmpsb
mov
lcall
and
out
or
dec
add
xchg
adc
jl
xchg
cmp
dec
call
in
sarb
addr16
or
int3
and
inc
fisubl
or
fnstsw
sbb
pop
int
repnz
sub
inc
loop
inc
repz
xchg
imul
cli
sbb
add
mov
cmp
jno
enter
lods
into
out
es
arpl
testl
ficoml
cmp
scas
popa
pop
fwait
sbb
cmpb
mov
popa
push
rorb
pop
mov
push
cmp
lea
xchg
divb
sbb
mov
negb
mov
icebp
stos
das
cmp
test
xlat
mov
mov
popa
mov
aas
es
mov
or
mov
jmp
sub
fsubrl
stc
outsl
repnz
nop
call
cmc
mov
inc
lods
cmpb
mov
movsbl
test
lods
push
sbb
ss
xor
dec
mov
push
jp
add
popa
loop
push
mov
mov
fistl
pop
and
sbb
xchg
pop
addr16
fadd
jae
fdivrl
xor
orl
stos
fwait
es
incl
out
aam
fs
or
inc
add
daa
sbb
mov
test
push
cmp
jo
sbb
lods
push
scas
ret
or
adc
cmp
mov
inc
push
cwtl
into
out
push
adcl
outsl
test
cli
mov
cmp
mov
pop
or
jg
mov
and
daa
dec
loope
mov
flds
shlb
filds
insb
pop
test
and
in
loope
in
mov
hlt
sti
sti
jno
cltd
xchg
sahf
xchg
mov
rorb
jne
mov
push
mov
dec
xor
jl
or
pop
jnp
sbb
push
negb
lret
push
inc
push
in
and
scas
xor
pop
xlat
ret
xchg
popa
jno
pop
add
out
cmp
into
mov
fsts
ja
sub
xchg
mov
cld
into
inc
adc
lahf
out
xchg
adc
in
ljmp
pushf
outsb
push
adc
out
sbb
shlb
xchg
arpl
fisubl
icebp
xor
mov
scas
mov
sar
xor
pop
lods
loope
jnp
js
cmp
dec
xor
movsl
sub
mov
cmpsb
jnp
int3
iret
das
popa
pushf
inc
push
pop
add
push
dec
push
xlat
push
mov
push
push
mov
push
mov
sub
xchg
in
loopne
and
pushl
aad
iret
outsb
jge
addl
xchg
mov
adc
jecxz
adc
aad
decb
xchg
fcomi
inc
popf
popa
mov
ljmp
stos
call
lahf
addr16
add
imul
mov
adc
les
inc
pop
pop
lods
jae
push
js
stos
sub
cmpsb
jp
fdiv
dec
lcall
unpcklps
fwait
xchg
mov
out
ret
jle
dec
lods
fistps
and
cmp
and
shlb
fistps
pop
sbb
mov
mov
cwtl
sub
outsb
mov
xchg
adc
int3
call
lock
imul
xor
pop
lcall
or
dec
inc
pop
pusha
ss
fstps
sbb
sub
sbb
pop
add
mov
sti
mov
loopne
mov
int3
imul
dec
and
xchg
xor
sbbl
jle
mov
adc
or
sbb
inc
repz
add
scas
.byte
add
add
add
or
add
add
add
or
add
add
push
add
.byte
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
dec
add
add
mov
add
add
or
orb
add
add
in
or
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
inc
fmull
add
add
in
add
add
add
add
add
add
add
fadds
add
je
or
xor
add
in
add
add
add
add
add
add
add
add
add
test
or
xor
add
in
add
add
add
add
add
add
add
sub
add
or
xor
add
in
add
add
add
add
add
add
add
push
add
add
loope
add
add
in
add
add
add
add
add
add
add
js
add
inc
loop
add
add
in
add
add
add
add
add
add
add
mov
jecxz
add
add
in
add
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
jl
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
scas
add
add
or
rolb
add
in
add
add
add
pop
add
inc
add
dec
add
push
add
add
add
add
add
add
add
out
add
xor
or
rolb
add
in
add
add
add
push
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
add
or
rolb
add
in
add
add
add
or
inc
add
dec
add
dec
add
push
add
add
add
add
add
add
add
push
add
add
in
or
rolb
add
in
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
icebp
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
repnz
add
or
rolb
add
in
add
add
add
add
add
inc
add
add
add
add
add
add
add
es
add
cmc
or
rolb
add
in
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
add
push
testb
call
add
add
add
add
add
add
add
test
add
rolb
addb
add
clc
add
addb
add
add
add
add
add
add
add
add
add
add
add
rolb
jl,pt
add
add
add
add
add
add
add
add
add
add
call
jge
add
add
in
add
add
add
add
add
add
add
adc
adc
call
add
add
add
add
add
add
add
cmp
adc
test
add
in
add
add
add
add
add
pusha
add
add
dec
add
push
add
dec
add
dec
add
push
add
add
add
add
add
add
add
nop
add
or
push
add
add
add
add
add
add
pop
add
sldt
push
sldt
nop
push
add
mov
sldt
loopne
add
or
add
xor
add
pop
pop
add
addb
xor
add
test
add
rolb
add
clc
pop
add
and
add
dec
or
xor
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
add
add
add
add
add
add
addb
add
or
xor
add
in
add
add
add
add
add
add
add
test
add
insb
or
add
in
add
add
add
add
add
add
add
rolb
add
fcoml
or
cld
add
add
add
add
add
add
add
add
add
clc
push
add
fcoms
add
add
add
add
add
add
add
add
and
add
mov
or
adc
add
in
add
add
add
add
add
add
add
dec
pop
add
mov
add
add
add
add
add
add
add
add
add
jo
add
fcompl
or
or
add
in
add
add
add
add
add
add
add
cwtl
pop
add
in
or
in
add
add
add
add
add
add
add
add
add
rolb
add
and
add
add
in
add
add
add
add
add
add
add
call
and
add
in
add
add
add
add
add
add
add
adc
add
mov
or
push
add
add
add
add
add
add
add
add
add
cmp
add
fsubrl
or
in
add
add
add
add
add
add
add
add
add
pusha
or
add
sub
add
add
add
add
add
add
add
add
add
add
mov
add
clc
sub
add
add
in
add
add
add
add
add
add
add
mov
add
and
or
addb
add
add
add
add
add
add
add
add
fmuls
add
movsb
xor
add
add
add
add
add
add
add
add
add
add
inc
or
sbb
add
add
add
add
add
add
add
add
sub
add
pop
cmp
add
add
in
add
add
add
add
add
add
add
push
or
add
cmp
add
add
add
add
add
add
add
add
add
add
js
add
mov
or
or
add
in
add
add
add
add
add
add
add
mov
or
rolb
add
in
add
add
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
add
add
lock
add
inc
or
les
add
in
add
add
add
add
add
and
add
push
or
andb
add
add
dec
add
add
add
add
add
add
add
inc
or
add
dec
or
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
add
jl
add
in
dec
or
pusha
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
cld
or
cmp
add
and
add
dec
or
cmp
add
je
add
pushf
or
cmp
add
les
add
add
add
add
add
add
add
add
add
in
or
add
add
add
in
add
add
add
add
add
add
add
adc
add
pusha
dec
or
adc
add
in
add
add
add
add
add
add
add
cmp
add
je
or
adc
add
in
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
pushf
dec
or
adc
add
in
add
add
add
add
add
add
add
mov
add
mov
or
adc
add
in
add
add
add
add
add
add
add
fmull
add
les
add
add
in
add
add
add
add
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
cs
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
mov
add
adc
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
mov
add
mov
add
mov
add
mov
add
add
add
xor
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
hlt
shlb
jne
ret
and
fcomip
push
je
mov
or
dec
movsl
push
out
push
repz
rolb
repz
or
dec
jbe
push
sbb
push
mov
sbb
and
inc
aas
add
mov
lea
cmp
into
push
cli
xor
fldenv
insl
iret
fldcw
pop
movsl
in
sub
fists
xor
pop
xchg
je
or
mov
lret
out
daa
test
pop
pop
loop
push
jle
inc
xor
dec
dec
movsb
arpl
test
jmp
lea
sarb
mov
dec
mov
movsb
out
gs
dec
sub
in
pop
and
and
in
xlat
movsl
pop
lods
cwtl
add
outsb
jnp
outsl
movsl
mov
mov
aad
xor
push
xchg
sbb
jp
cmp
call
not
aad
cmp
inc
mov
shll
add
inc
mov
movsb
xlat
and
cmpsl
xlat
mov
rcrb
notb
filds
add
jae
sbb
cmp
ss
add
pop
push
jae
je
daa
inc
xchg
enter
sub
bound
out
mov
fisubrl
pushf
sbb
in
xlat
mov
fwait
xor
jge
lods
push
cmc
loopne
ljmpw
mov
fcmovbe
outsb
cs
sbbb
insb
gs
cwtl
mov
hlt
dec
icebp
xor
scas
cmc
push
call
ja
push
xchg
xchg
push
and
and
sti
roll
stos
fwait
inc
mov
jae
push
mov
bound
lock
shll
xchg
mov
sub
jg
push
in
test
lods
or
pop
inc
fisubl
sarl
ja
ficoms
push
shlb
rorl
shl
call
jne
inc
ret
icebp
mov
out
ret
mov
popa
inc
mov
aaa
imul
lahf
xor
adc
push
stos
adc
sahf
outsb
imul
sti
imul
adc
push
icebp
out
sbb
lret
jp
aam
les
push
mov
outsl
mov
jecxz
imul
enter
pop
jb
or
nop
pop
mov
mov
inc
int
push
xchg
testb
or
sbb
adcb
stos
aad
addr16
gs
vpacksswb
lcall
movsl
mov
inc
mov
or
imul
lcall
push
movsl
pop
fmuls
cmp
xor
pop
les
jb
fsubl
fwait
and
sub
daa
aam
das
js
hlt
popa
inc
mov
repz
jb
mov
lock
xchg
push
adc
dec
jge,pt
mov
push
mov
inc
jge
jge
and
insb
mov
dec
xlat
cs
jb
xchg
nop
lret
mov
lcall
lcall
pop
add
push
lea
mov
insb
cwtl
je
push
daa
pop
fsub
xchg
push
xor
mov
push
adcb
xchg
xchg
sub
sbb
push
mov
mov
das
or
push
jge
jg
pop
es
es
sti
cmp
sbb
aas
mov
or
test
mov
lea
repz
xchg
add
and
mov
ss
out
fdivl
test
pop
jle
and
or
divb
lcall
jmp
outsb
jl
mov
int3
arpl
dec
adc
inc
xor
add
add
adcb
push
add
icebp
ljmp
pop
jb
ret
lods
lock
or
jecxz
dec
arpl
rcrb
fwait
or
es
pop
xchg
into
xor
jo
lock
add
sub
jnp
add
dec
test
sbb
stc
jg
lock
pop
sub
sub
adc
clc
pop
xchg
and
jle
js
addl
pop
adc
mov
lret
fidivs
iret
imul
out
fstl
cltd
out
push
dec
xchg
sbbl
stos
inc
and
call
stc
pop
jge
in
decl
pop
pop
incl
push
ss
shrb
dec
cld
jge
test
push
mov
mov
or
cmp
cs
mov
jecxz
inc
out
xor
push
pop
jg
push
sub
xchg
and
push
jne
call
dec
imul
inc
cmp
insb
ficoms
mov
addr16
and
out
adc
xchg
es
cmc
into
push
hlt
imul
push
stos
fwait
mov
into
loop
sbb
or
testb
not
or
push
fcmovnbe
or
mov
and
outsl
xchg
ds
leave
dec
repz
mov
sub
shl
divb
sub
mov
mov
mov
divb
mov
into
adcl
jnp
cltd
cld
ficompl
or
std
imul
data16
jo
dec
push
loop
add
jge
insb
sarb
mov
stc
adc
cmp
cmp
or
and
andb
jne
add
test
or
stos
push
cli
mov
push
lahf
insb
loop
and
jbe
push
pop
stos
pop
or
mov
shrl
jp
mov
or
sbb
mov
or
pop
in
pop
adc
push
sub
aam
movsl
jmp
push
sysret
pop
mov
stos
stc
ss
mov
push
sbb
ljmp
lods
notl
cld
mov
dec
push
sub
hlt
sub
push
adc
mov
scas
stos
mov
aam
add
mov
test
adc
jb
xor
dec
inc
es
xor
cmp
adc
cmp
and
jge
dec
sub
cwtl
dec
and
iret
xor
jp
clc
lahf
sbb
sbbl
lods
mov
loope
push
dec
lds
sbb
les
loop
popa
cwtl
lods
cmp
jb
in
inc
fs
push
dec
mov
add
testl
cltd
loopne
jle
cmpsl
test
shrl
aam
xor
sbb
dec
fisttpll
jg
xchg
dec
icebp
jo
cmp
ja
sub
es
jo
fidivrl
inc
xlat
leave
inc
add
xchg
cmpsb
mov
lcall
and
out
or
dec
add
xchg
adc
jl
xchg
cmp
dec
call
in
sarb
addr16
or
int3
and
inc
fisubl
or
fnstsw
sbb
pop
int
repnz
sub
inc
loop
inc
repz
xchg
imul
cli
sbb
add
mov
cmp
jno
enter
lods
into
out
es
arpl
testl
ficoml
cmp
scas
popa
pop
fwait
sbb
cmpb
mov
popa
push
rorb
pop
mov
push
cmp
lea
xchg
divb
sbb
mov
negb
mov
icebp
stos
das
cmp
test
xlat
mov
mov
popa
mov
aas
es
mov
or
mov
jmp
sub
fsubrl
stc
outsl
repnz
nop
call
cmc
mov
inc
lods
cmpb
mov
movsbl
test
lods
push
sbb
ss
xor
dec
mov
push
jp
add
popa
loop
push
mov
mov
fistl
pop
and
sbb
xchg
pop
addr16
fadd
jae
fdivrl
xor
orl
stos
fwait
es
incl
out
aam
fs
or
inc
add
daa
sbb
mov
test
push
cmp
jo
sbb
lods
push
scas
ret
or
adc
cmp
mov
inc
push
cwtl
into
out
push
adcl
outsl
test
cli
mov
cmp
mov
pop
or
jg
mov
and
daa
dec
loope
mov
flds
shlb
filds
insb
pop
test
and
in
loope
in
mov
hlt
sti
sti
jno
cltd
xchg
sahf
xchg
mov
rorb
jne
mov
push
mov
dec
xor
jl
or
pop
jnp
sbb
push
negb
lret
push
inc
push
in
and
scas
xor
pop
xlat
ret
xchg
popa
jno
pop
add
out
cmp
into
mov
fsts
ja
sub
xchg
mov
cld
into
inc
adc
lahf
out
xchg
adc
in
ljmp
pushf
outsb
push
adc
out
sbb
shlb
xchg
arpl
fisubl
icebp
xor
mov
scas
mov
sar
xor
pop
lods
loope
jnp
js
cmp
dec
xor
movsl
sub
mov
cmpsb
jnp
int3
iret
das
popa
pushf
inc
push
pop
add
push
dec
push
xlat
push
mov
push
push
mov
push
mov
sub
xchg
in
loopne
and
pushl
aad
iret
outsb
jge
addl
xchg
mov
adc
jecxz
adc
aad
decb
xchg
fcomi
inc
popf
popa
mov
ljmp
stos
call
lahf
addr16
add
imul
mov
adc
les
inc
pop
pop
lods
jae
push
js
stos
sub
cmpsb
jp
fdiv
dec
lcall
unpcklps
fwait
xchg
mov
out
ret
jle
dec
lods
fistps
and
cmp
and
shlb
fistps
pop
sbb
mov
mov
cwtl
sub
outsb
mov
xchg
adc
int3
call
lock
imul
xor
pop
lcall
or
dec
inc
pop
pusha
ss
fstps
sbb
sub
sbb
pop
add
mov
sti
mov
loopne
mov
int3
imul
dec
and
xchg
xor
sbbl
jle
mov
adc
or
sbb
inc
repz
add
scas
andb
push
nop
dec
jmp
mov
mov
data16
add
cltd
push
push
mov
sbb
mull
mov
lahf
jo
insb
jg
fistps
sbb
adc
test
lods
imul
test
and
or
add
xchg
or
cmpsb
gs
mov
cmp
sub
not
mov
mov
iret
pop
sbb
add
stos
nop
sub
push
fnstsw
cmp
or
xor
jo
mov
gs
arpl
xor
adc
cld
lahf
jbe
rcrl
push
xor
ret
clc
shl
ljmp
pop
and
xor
jbe
inc
inc
loopne
stos
sbb
dec
stos
ja
sub
not
mov
add
test
loop
jmp
ret
test
movsl
adc
arpl
jl
xor
and
xor
jns
or
adc
jle
add
adc
cmc
or
out
xor
and
lock
faddl
cmp
cmpsl
jle
lds
add
inc
or
test
xlat
icebp
test
mov
flds
add
dec
jae
cmpsl
ret
pmulhw
mov
pop
and
sub
xchg
fst
cmp
adc
mov
stc
pop
movsl
push
mov
inc
xor
clc
cmp
inc
adc
sub
jmp
xchg
fs
mov
or
ret
mov
push
iret
xlat
pop
fcomip
std
mov
pushf
popf
lret
inc
xor
loopne
and
gs
sub
lcall
orl
fdivrs
jge
test
or
add
fsubp
add
pop
fistps
dec
adc
jo,pt
push
xor
sti
xor
test
pop
idiv
mov
leave
sbb
ds
xchg
pusha
cmp
ja
cltd
stos
mov
jo
test
dec
pop
cmp
ja,pn
jnp
and
mov
and
daa
scas
mov
cmp
mov
add
stos
xchg
addr16
out
adc
push
out
jo
lret
sbbl
xchg
push
loop
mov
mov
int
mov
sub
pop
add
jge
xor
and
movsb
mov
lds
pop
or
icebp
orl
outsb
mov
lea
push
dec
dec
mov
es
push
fiadds
inc
rcrb
enter
lods
xchg
cmpl
xchg
fdivl
fisubrl
push
and
jp
loopne
inc
dec
bound
in
mov
iret
les
xchg
pop
push
cltd
mov
cs
fnsave
mov
jbe
mov
pop
data16
std
cmp
lahf
fbstp
lret
mov
fcmovnb
inc
pop
aad
and
lods
jge
testb
adc
add
adc
mov
xor
inc
jl
mov
scas
adc
cmpsl
mov
add
push
sub
fisubrl
clc
js
dec
sti
sub
in
fsubrs
inc
inc
loop
push
out
rolb
mov
cmp
loop
inc
out
push
jo
cmp
jne
and
lods
xor
mov
mov
inc
mov
icebp
add
lret
lods
icebp
hlt
cmp
xchg
insb
inc
js
mull
call
cld
xor
in
icebp
jge
xchg
push
push
sbb
xor
cli
mov
imul
dec
jp
stos
movsl
movsb
add
imul
xor
loop
xchg
mov
mov
xchg
mov
lcall
jae
leave
mov
xor
loop
push
hlt
lods
leave
out
inc
cmp
cmpb
add
sub
cwtl
mov
test
mov
or
lds
out
inc
call
lds
inc
cld
xchg
mov
jne
insl
in
out
cli
push
xor
adc
push
push
mov
lods
adcl
dec
es
fists
adc
lods
adc
stos
add
xor
call
addr16
cmp
jp
aas
push
repz
std
inc
mov
push
dec
sbb
outsl
cmp
jne
xchg
dec
dec
cltd
daa
xlat
popf
push
sar
pop
lods
ret
lcall
or
rcrl
fcomps
adcb
subb
pusha
sbb
sbb
movsb
push
inc
ficoms
cld
loopne
push
call
and
pushf
aad
adc
adc
push
dec
add
scas
mov
cmpsl
rorb
push
lret
or
xchg
jg
push
mov
adc
mov
lea
mov
cmp
inc
adc
adc
xchg
sub
push
imul
test
xchg
and
sub
add
cmp
and
scas
in
iret
mov
xlat
jge
ret
mov
lea
loop
mov
jp
rorl
les
imul
or
jns
int3
in
jecxz
sar
pop
cmp
mov
adcb
popa
into
mov
test
clc
enter
in
cld
xchg
mov
mov
jg
mov
mulb
scas
jecxz
jo
sub
dec
inc
inc
jno
cmp
rorb
je
pop
pop
push
mov
pop
or
mov
lcall
jae
pop
xchg
ds
sub
ficoms
test
xchg
sub
or
sub
push
mov
clc
inc
cmpsb
popf
xchg
adcl
arpl
add
adcl
aas
dec
mov
mov
cmp
pop
mov
sbb
and
leave
cmp
daa
sarb
mov
mov
mov
ficoml
fdivrp
and
jne
sub
out
stos
rcrb
adc
bound
xchg
jnp
or
lret
lcall
movsl
push
add
ret
filds
pop
popa
aam
sub
popaw
imul
push
and
pop
push
in
dec
into
push
jo
loopne
addl
sub
js
mov
out
movsb
jns
testl
vpshufhw
or
shld
dec
int3
lcall
les
lods
sbb
mov
stc
out
fnstcw
and
incl
sahf
sbb
pop
in
mov
mov
fistpll
int3
lcall
out
loop
push
pop
jp
icebp
mov
test
pusha
dec
ret
push
pop
cld
push
movhps
test
mov
pop
xlat
adc
mov
daa
fcoms
xlat
stos
cmp
and
add
lret
xor
leave
or
pop
lods
cmc
scas
cld
xchg
sub
xor
shrb
jae
dec
jae
pop
push
fbld
mov
inc
sbb
mov
daa
nop
push
add
rorb
add
lods
sbb
and
add
je
jge
mov
push
lds
mov
js
cwtl
pop
sar
inc
add
sbb
data16
inc
or
push
sub
cs
inc
xchg
test
dec
mov
pop
push
out
dec
int
and
loope
sub
mov
mov
mov
repz
lahf
pop
jbe
aad
cs
pop
xchg
push
add
jle
xchg
das
or
xor
xchg
fstpl
xchg
jmp
outsb
push
xorb
loopne
cmp
xchg
mov
fimuls
stc
fisubs
cli
test
lret
xchg
inc
ja
rorl
push
clc
test
shrl
push
dec
movsb
xchg
dec
subb
test
pop
mov
cmp
enter
dec
repnz
gs
ljmp
test
push
ss
pop
sbb
mov
jmp
stos
xchg
nop
mov
jmp
inc
sbb
ss
mov
int3
jae
call
lods
jns
bound
jne
ljmp
mov
jbe
test
subl
sahf
out
sub
inc
stos
push
push
out
pop
push
sub
movsl
into
aaa
stos
xchg
outsb
gs
jne
or
fwait
pop
out
lahf
inc
lret
out
jecxz
call
push
lods
lret
or
dec
cmpb
xchg
xchg
ds
mov
sub
pop
mov
xor
pop
dec
mov
cmc
clc
adc
xor
mov
iret
pusha
iret
les
int
cmc
sub
cmp
pusha
mov
push
into
test
cmpsb
push
pmuludq
emms
std
das
sub
lock
in
push
aaa
std
je
mov
shr
xchg
inc
xchg
sbb
inc
adc
mov
push
inc
imul
clc
test
mov
ljmp
add
pop
add
fs
movsb
imul
fimull
shll
sub
sbb
cwtl
repnz
and
cwtl
loop
add
shrb
ljmp
mov
out
stos
mov
mov
shl
mov
add
pop
fistps
iret
hlt
sbb
mov
test
jp
mov
sbb
mov
lods
in
inc
arpl
mov
mov
mov
in
jb
push
inc
sub
push
xor
sub
jbe
jb
push
arpl
lahf
into
push
fstpt
cs
in
push
icebp
icebp
dec
mov
into
mov
outsl
push
pop
notl
mov
jno
jp
stc
shrl
cmc
shlb
mov
xchg
clc
sbb
loopne
cltd
sbb
sbb
mov
in
cmp
lret
in
sbb
lea
mov
inc
xchg
jg
shlb
gs
sti
test
lods
mov
mov
les
jg
jnp
sbb
push
mov
xorb
scas
ret
insb
out
aam
mov
ret
test
adc
roll
lret
aas
cmpsl
mov
inc
sbb
push
cltd
fcomip
inc
in
push
pop
sbb
repnz
fildll
je
js
gs
xor
fwait
mov
sub
sub
xchg
shll
mov
push
std
mov
movsb
pop
mov
mov
out
mov
jbe
adcl
fisttpl
cmc
cltd
outsl
movsb
add
cmp
pop
inc
sub
mov
test
shrl
sub
cli
loop
xorl
pushl
pushf
add
push
or
das
out
push
sbb
mov
and
in
mov
pop
adc
jo
ss
mov
push
push
sub
inc
mov
mov
pop
inc
loopne
xchg
jecxz
ficoms
push
pop
into
and
shl
mov
xor
repnz
inc
stos
insb
adcl
out
movsl
out
int
loope
xchg
shlb
rolb
dec
jp
mov
pop
jno
xchg
pop
data16
data16
fbld
push
cmp
inc
adc
adc
test
mov
or
repz
adc
mov
pop
xchg
int
sub
shl
cltd
mov
imul
lea
add
or
mov
test
ljmp
cld
dec
dec
int3
xor
mov
dec
xchg
and
mov
or
mull
cwtl
call
sub
add
or
dec
push
lret
pop
outsl
pop
push
repz
rorl
push
or
pop
out
mov
lds
mov
jle
mov
bound
inc
push
loope
adc
adc
shll
mov
mov
fwait
push
idiv
xchg
scas
andl
jne
mov
out
jmp
outsb
testb
loopne
fucomp
stc
in
xchg
sbb
std
ret
insl
repnz
cwtl
adc
add
cwtl
movsb
stc
sub
popf
je
outsl
sub
jno
sub
and
inc
rcrb
inc
das
lcall
test
daa
in
into
mov
mov
cmp
xchg
pop
mov
lret
push
cmp
cmp
loope
push
scas
test
mov
mov
out
cmc
cmc
mov
mov
push
pop
sub
or
movq
mov
imul
cmp
frstor
aam
jne
orb
mov
mov
push
mov
repnz
incb
add
adc
pop
xor
movsb
and
or
movsb
pusha
imul
xor
clc
inc
mov
jb
outsl
mov
mov
std
fwait
bound
xor
inc
lahf
sub
add
adc
push
jge
aas
rcrb
cmp
lcall
push
lret
pop
jno
in
add
mov
adc
mov
xchg
xchg
xor
mov
mov
outsb
sarl
mov
mov
xor
sbb
dec
js
inc
ds
cmp
adc
inc
mov
jo
push
ret
je
addr16
ficoms
mov
mov
push
xchg
imul
aaa
push
sti
push
adc
xchg
sub
loop
push
ja
mov
les
aad
push
xor
les
adc
leave
repnz
test
addl
rcrl
pop
and
inc
push
jg
lods
cmp
ret
lods
jge
cmp
fistps
imul
dec
repz
pop
mov
cld
mov
and
je
jmp
ss
fistpl
cli
sub
xchg
adc
push
dec
push
mov
sti
xor
adc
ss
mov
mov
lods
scas
stc
mov
mov
jno
cld
adc
pop
mov
popa
test
in
push
ret
fistl
and
xchg
inc
mov
pop
add
push
ret
mov
cmpsb
adc
jo
jbe
inc
into
pop
pop
cli
jmp
push
mov
rol
inc
sti
lods
mov
adc
data16
mov
jae
push
add
bndstx
imul
push
adc
sbb
add
es
sti
or
mov
lock
xchg
insb
daa
cmp
jae
jl
rcll
cs
jnp
aad
or
jl
cmp
int3
xchg
xor
test
inc
enter
cs
lds
sarl
testl
adc
movsb
divb
out
in
ds
adc
sub
xrelease
lods
push
test
cwtl
outsb
js
xchg
cs
mov
pop
inc
sar
fimull
cmp
out
adc
repz
stc
insl
aam
cltd
insl
es
adc
jb
cmp
xchg
sbb
cli
ljmp
inc
out
addb
mov
stos
jl
inc
iret
mov
fistpl
lret
inc
fwait
and
in
in
adc
jp
pop
sbb
xchg
gs
cmp
int3
sub
push
dec
and
popf
add
out
cmp
sbb
lock
mov
ret
std
jecxz
hlt
pop
fnstcw
sub
or
movsb
adc
orb
les
lret
jecxz
mov
lahf
mov
stc
xchg
add
repz
mov
imul
into
pop
dec
xor
xchg
xor
es
fadds
mov
mov
in
adc
jbe
xchg
cltd
xor
add
dec
adcb
fnsave
mov
out
pop
in
adc
into
adc
subb
adc
mov
repz
in
clc
sub
pop
mov
mov
or
push
sub
inc
imul
mov
fbld
adc
cwtl
je
xchg
jg
pop
stos
or
fstpt
mov
movsb
test
aam
mov
inc
pop
lods
ret
aad
iret
loop
in
cmpb
data16
pop
push
lahf
add
call
inc
bound
in
sbb
dec
push
push
pop
dec
cmpsb
sahf
shll
cmp
push
or
xchg
mov
dec
add
jp
cli
aam
mov
hlt
jbe
in
pop
and
mov
repz
movsl
push
aad
adc
cmp
dec
lock
cmpsb
inc
push
popf
fists
push
or
das
call
fdivr
cmp
jae
out
and
mov
imul
sahf
push
pop
push
outsb
sub
sahf
inc
sbb
shlb
pop
pop
xlat
mov
enter
jo
fsubp
adc
ret
int3
sub
sub
xor
int
ss
push
int
jnp
adc
popf
sbb
sarl
push
push
call
or
lcall
push
test
imul
mov
test
pop
mov
shll
jno
adc
or
ss
cmp
jmp
jo
fadds
sub
mov
cltd
outsl
loopne
cltd
lcall
mov
loope
orl
xchg
push
mov
pop
cmp
add
cmp
lcall
mov
pop
pop
icebp
mov
pop
aas
cld
pushf
inc
xlat
shrl
push
scas
push
push
dec
pop
cli
inc
leave
ret
push
in
cmp
xor
mov
fsincos
mov
cmp
fisttpl
mov
hlt
ret
int3
jl
and
mov
xor
sub
mov
bound
or
hlt
int
nop
pop
aas
clc
xchg
adc
adc
adc
ss
push
mov
adc
lock
add
cltd
mov
popf
pop
test
jg
loop
aaa
dec
inc
push
mov
jl
rorl
mov
lret
int
and
lea
pusha
cmp
ret
mov
pop
push
cld
ljmp
aas
iret
push
addl
mov
inc
mov
xor
pop
bound
push
sub
xchg
and
insb
movsb
cmp
popf
jo
mov
in
addr16
and
jbe
pop
mov
mov
jp
xor
in
cmp
mov
add
lret
mov
mov
fsubrl
arpl
fists
popa
or
add
xchg
pop
loopne
mov
jns
xchg
bound
inc
mov
loop
and
cmc
mov
mov
lock
and
push
loopne
enter
insl
orl
pop
mov
or
add
movsb
jmp
loop
scas
mov
pop
ds
xchg
mov
loop
ret
push
mov
adc
popf
rcrl
lcall
jae
dec
and
ja
imul
mov
std
ljmp
mov
mov
xchg
sahf
lds
mov
fmul
outsb
ficomps
scas
gs
loope
repnz
cli
stc
cmp
or
or
mov
mov
jnp
sbb
xlat
xor
repnz
sbb
outsb
xor
pop
xchg
stos
push
sbb
mov
mov
flds
in
mov
pop
xchg
push
insl
aaa
cmpsl
sub
aas
xor
cmpsl
add
fsts
int3
dec
stos
sbb
mov
aas
adc
adc
cli
xchg
or
mov
mov
inc
sub
movsl
jne
call
pop
daa
xor
push
lods
adc
mov
stc
mov
icebp
lahf
push
mov
push
pop
push
cmc
adc
adc
adc
xchg
mov
adc
popf
cmc
fcompl
xor
pop
sbb
inc
mov
and
lds
sti
ljmp
cmp
hlt
push
xchg
ja
shl
shlb
mov
jbe
out
push
mov
or
dec
push
lock
lahf
pop
fndisi(8087
adc
pop
sub
mov
add
test
cmc
mov
mov
bound
ja
mov
test
call
sbb
fisttpl
adc
jbe
fidivs
es
repz
rclb
mov
in
jno
fucomip
cltd
push
cwtl
aam
xchg
pop
sbb
scas
cmc
pop
nop
pop
insl
jmp
add
aaa
inc
ficomps
sub
out
mov
lcall
repnz
sbb
xchg
lock
das
jne
sub
ret
jnp
inc
iret
rclb
lret
pop
and
xlat
ss
pop
leave
js
in
in
ja
clc
mov
fsubrp
insl
xlat
mov
imul
das
sub
js
orb
cmpsb
push
int3
mov
jno
ja
jg
lret
jne
notl
pushf
dec
mov
stos
stc
icebp
sbb
aam
mov
mov
sub
in
jg
jmp
xor
data16
pusha
sbb
mov
fisubrl
or
push
fiadds
in
dec
jnp
subb
and
stc
call
jecxz
mov
xchg
es
push
outsl
pop
dec
aam
out
movl
mov
test
scas
pop
subb
in
nop
inc
dec
cltd
loopne
jb
add
pop
negl
mov
ret
fsubrs
jae
jp
shl
cwtl
push
and
or
add
cs
mov
int3
pop
pop
adc
and
fwait
add
xchg
pop
in
cltd
call
adc
ja
push
jae
ds
xor
mov
test
jne
and
hlt
mov
sub
push
mov
data16
inc
sbb
bound
jl
push
sub
cmc
inc
jmp
jmp
add
stos
adcb
shr
into
xor
jmp
pop
mov
scas
addl
or
hlt
add
out
and
ret
or
sti
xchg
dec
pusha
inc
add
cmp
jne
cmp
fcompl
cmpsl
and
repz
dec
xchg
jnp
stc
cld
lret
push
dec
xchg
mov
xor
lds
jo
les
pop
mov
shrb
arpl
or
mov
into
adc
mov
fs
dec
push
pushl
je
adcl
cld
jmp
cwtl
es
in
jp
cmp
inc
int
sub
inc
add
mov
int
in
enter
mov
add
bound
dec
aaa
outsb
outsb
movsl
jp
mov
rcrb
dec
lods
fdivrl
adc
imul
mov
cmpl
sub
adc
push
push
mov
mov
xchg
ss
jl
rol
notb
push
test
hlt
bound
repz
loope
ljmp
inc
cwtl
call
adc
fbld
ret
lock
mov
dec
fbstp
sbb
addb
cmc
cmp
cmpsl
push
xor
mov
aam
shl
mov
xchg
stc
push
dec
addb
ret
mov
sbb
adc
mov
aaa
add
push
or
stos
pop
nop
repnz
ficoms
fidivrs
aaa
xlat
inc
pop
lods
in
cld
or
out
xor
or
ljmp
aaa
cmpl
dec
jg
jb
mov
es
mov
add
or
mov
lds
lahf
mov
int
and
imul
jp
call
jo
cltd
push
mov
xchg
lcall
mov
mov
mov
push
insl
xchg
or
mov
les
jecxz
mov
imul
and
sbb
mov
call
cmpsl
js
into
add
aad
push
xchg
stc
les
jle
mov
pop
out
mov
scas
cli
add
push
dec
sahf
mov
lods
pop
xchg
mov
daa
fldcw
shrb
rcr
inc
popf
ret
insb
xor
mov
mov
test
push
std
xchg
inc
repnz
out
ret
mov
leave
jecxz
lock
add
push
mov
popf
fbld
mov
cltd
push
arpl
stc
pusha
hlt
outsl
jp,pt
cli
ficomps
xor
jne
mov
dec
lods
sti
subb
popa
inc
bnd
mov
adc
pop
into
adc
popf
imul
dec
gs
sti
fbstp
xor
fisttps
ljmp
test
mov
fistpl
push
mov
or
ret
mov
and
mov
mov
fildl
int3
subb
lret
sub
adc
jae
or
pushf
sub
mov
add
push
dec
sahf
adc
mov
outsb
cmp
xor
int
xchg
cmp
js
push
jecxz
js
repnz
mov
push
lret
loop
dec
jp
mov
xchg
into
lret
mov
mov
addr16
pcmpeqd
test
shll
adc
sbb
sbb
scas
sbb
sub
lock
mov
ds
jo
adc
divl
add
jle
jecxz
push
aam
decb
sbb
mov
cwtl
js
sbb
xchg
ss
shrb
push
mov
daa
cmp
jmp
in
call
xchg
subb
dec
xor
out
lods
movsb
das
adc
sbb
sbb
ret
xchg
addl
xor
rcrb
cmp
arpl
push
ss
rcr
inc
ljmp
mov
dec
inc
sub
dec
lcall
lods
in
fsubrs
pop
inc
stos
and
xor
jno
mov
cltd
sbb
dec
aam
out
leave
sbb
imull
push
add
jno
test
icebp
loop
leave
shll
dec
jb
and
js
jg
xorl
bound
movsb
sbb
js
xor
add
lods
fnsave
push
call
fmulp
leave
fwait
adc
mov
nop
rcll
mov
mov
pop
fs
ja
in
jnp
lahf
sub
cwtl
add
xchg
jecxz
pop
icebp
dec
jmp
fstpt
push
clc
mov
mov
scas
adc
test
pop
add
mov
stc
mov
jecxz
add
lods
push
or
fcomip
and
xlat
xchg
leave
push
loop
rorl
shlb
dec
cltd
jnp
jbe
and
xor
sub
inc
jo
cmpsb
stos
stc
sbb
inc
mov
jmp
add
jle
lahf
or
aam
push
rcrl
ret
std
mov
cmp
sarb
pop
push
sbbl
insl
sub
data16
mov
jae,pn
pop
aam
add
popf
sbb
pop
shrl
fdivrl
rorl
clc
mov
ret
test
ret
das
jae
push
cmp
out
test
lcall
mov
movsb
retw
or
xchg
jmp
mov
outsl
fwait
rol
cld
test
xchg
jl
loope
adc
into
fs
std
jl
lds
push
adc
cmc
xchg
fidivl
xchg
mov
jns
call
push
pop
cmp
jg
stc
insb
fimuls
popf
scas
add
sbb
std
cltd
in
mov
es
or
dec
or
aas
sbb
xor
fcmovnb
into
pushf
sub
and
test
aas
xchg
stos
or
mov
sti
ficompl
sbb
dec
jo
sub
inc
dec
mov
cmc
mov
mov
das
pop
pop
lret
mov
ret
mov
fidivs
inc
scas
push
dec
pushf
das
push
xorl
fadd
xor
and
inc
jmp
mov
sub
test
and
mov
insl
frstor
jae
push
cmp
adc
dec
sti
dec
idiv
sub
adc
addb
or
mov
sbb
xchg
enter
ja
push
cmp
cmpsb
sub
pop
loop
xor
divl
mov
push
dec
retw
insl
inc
imull
jg
imul
in
cmp
sbb
clc
lods
push
out
ret
xor
inc
imul
xchg
fwait
cmp
fs
bound
xchg
mov
sub
inc
hlt
mov
imul
mulb
adc
mov
dec
jl
mov
ja
adc
mov
push
jg
push
bound
push
lods
jge
in
pop
jno
mov
testl
out
mov
ficoml
lcall
xor
lock
idivl
and
sar
outsb
clc
mov
sub
jecxz
or
mov
xchg
mov
movsl
sub
jl
and
lods
jb
add
pusha
js
daa
jecxz
mov
dec
lock
aas
or
sub
movsl
xchg
out
sub
mov
dec
test
fwait
rorl
rcrb
mov
sbb
jno
rorb
sahf
mov
cmpsb
mov
jnp
aam
mov
push
xor
xor
xor
rcl
pop
sub
mov
aam
mov
or
push
sub
push
out
scas
sti
xor
cmp
cld
add
and
inc
or
addr16
lret
mov
imul
adc
in
jne
push
repz
and
stos
mov
pop
mov
daa
addr16
fcomip
and
lret
xor
push
pop
jne
xor
sub
add
mov
mov
out
mov
cld
movsb
fbstp
sub
push
xor
mov
pushl
xchg
pop
inc
fisttps
into
lods
icebp
rcll
test
rol
mov
mov
and
xchg
stos
aaa
popf
shlb
fnstenv
jecxz
dec
shl
inc
daa
loope
test
pop
and
lea
sub
in
aas
jno
inc
xchg
ror
inc
and
movb
les
fidivrl
popf
das
mov
lahf
mov
jne
imul
out
les
inc
into
ret
fnstcw
or
jmp
mov
div
sub
mov
cmp
or
sub
lahf
sarb
add
xor
int
js
test
ds
mov
mov
inc
out
incl
mov
push
lods
mov
jns
dec
cmp
adc
push
xchg
pop
pop
mov
js
jbe
ret
jb
inc
lahf
jne
jmp
popl
fnstsw
cmp
pop
ret
ljmp
cmp
mov
mov
mov
outsb
rorb
dec
add
leave
mov
popf
pop
mov
fnstcw
sub
xor
mulb
rorb
xchg
push
in
cmc
mov
push
test
inc
or
int3
xchg
out
cmp
push
dec
lret
jl,pt
jg
fisubrs
inc
or
jno
repnz
arpl
roll
in
fwait
mov
add
out
xchg
addr16
stos
jno
sbb
arpl
fiaddl
dec
dec
mov
popa
add
leave
push
add
test
int3
fsubp
mov
adc
outsl
inc
cmp
loope
lret
mov
inc
push
test
mov
push
jne
mov
xchg
xor
sbb
mov
int
fsubrp
movsb
stos
jb
mov
test
fnstenv
inc
in
push
shrb
popa
push
add
rolb
cmp
xor
push
dec
ss
addr16
ds
jnp
push
cld
jg
test
lock
xor
adc
dec
xchg
outsb
xor
xchg
je
pusha
stc
or
lahf
loop
jbe
sub
scas
bsr
push
sbb
xchg
loope
flds
lods
push
jg
sub
cwtl
xchg
sub
or
cmpsb
xchg
ds
iret
add
xchg
popf
pop
ret
std
out
sbb
cmpsl
pusha
mov
dec
in
mov
insb
pop
int
ficoml
mov
mov
mov
repz
daa
push
xor
jge
ds
xchg
dec
into
loop
mov
xchg
pop
jge
std
arpl
cmp
mov
xchg
pop
lcall
shl
adc
sub
ret
jae
mov
push
jmp
fbld
adc
push
xchg
and
pop
push
repz
mov
iret
jo
and
add
cmpsb
in
out
xor
sbb
ljmp
fsub
jecxz
add
fsts
mov
inc
and
pop
adc
daa
mov
pushf
es
out
mov
inc
in
int
xchg
dec
or
sub
mov
outsb
test
arpl
pop
enter
std
test
push
lret
mov
mov
or
arpl
int
test
dec
push
fldl
lods
pusha
mov
add
mov
jp
push
lcall
sub
or
push
ret
fcmovu
xlat
shll
cwtl
in
sbb
repnz
push
cmp
shlb
mov
or
sub
mov
jns
xchg
shrb
lds
fstps
cmpsb
pop
out
pop
nop
dec
pop
jecxz
push
ja
cli
ja
sbb
jg
jb
repnz
xchg
inc
xchg
sahf
out
frstor
jmp
sub
out
fadd
fistl
ss
xchg
push
mov
pop
ja
sbb
scas
inc
dec
mov
mov
shlb
inc
inc
shr
xor
pushl
loope
xchg
jmp
fwait
push
mov
jno
inc
inc
cwtl
nop
loope
cld
lods
pushf
jp
mov
pop
lds
jg
pop
sub
clc
ret
pop
pop
daa
idiv
mov
clc
into
enter
aam
loope
xor
jno
shlb
lea
inc
sti
rcrb
mov
xchg
leave
dec
push
dec
lcall
mov
out
mov
sub
mov
and
cmp
add
adc
aaa
mov
xchg
lret
nop
leave
cmp
push
dec
cli
bound
xchg
adc
das
adc
int3
cmp
mov
or
out
lock
cmp
sub
xchg
inc
fstl
les
int3
cmp
jge
sbb
mov
add
cwtl
dec
mov
jnp
je
rcrb
inc
dec
jno
dec
mov
loop
sbb
jg
shl
pop
mov
xchg
call
mulb
iret
push
ja
jge
aam
ret
cmpsl
iret
mov
adc
adc
loope
xchg
fcomip
jg
or
inc
cmpsl
and
cmpsb
out
xchg
sbb
loopne
mov
lret
insl
cmc
pushf
pop
xor
sub
add
inc
jae
push
xor
lcall
mov
inc
int3
sub
adc
insb
mov
pop
lds
add
and
ret
testb
mov
loope
pop
mov
lea
push
scas
cmp
dec
inc
mov
jp,pn
mov
mov
adc
pop
les
pop
insl
je
sbb
lahf
pop
mov
jne
out
outsl
pop
sub
pop
mov
pcmpgtw
xchg
mov
or
adc
aad
ror
loopne
inc
xchg
sbb
jmp
or
or
dec
pusha
lahf
xlat
mov
and
cmp
xchg
popf
mov
xor
mov
mov
jnp
mov
stc
pop
cmpsl
dec
pop
testb
pop
jbe
dec
inc
mov
cltd
xchg
inc
fstpl
pop
mov
sub
xlat
shrl
push
dec
push
mov
in
aaa
jae
jp
rcrb
scas
xchg
mov
mov
int3
dec
jnp
push
das
out
aas
scas
mov
mov
mov
dec
cmc
int3
movsl
sbb
xchg
jmp
aaa
mov
insl
jb
add
fstpt
sti
mov
push
push
jns
ret
adc
mov
mov
dec
add
xchg
xchg
push
or
imul
ljmp
into
pop
aad
ret
cmp
out
or
rolb
and
decl
aam
push
cmpsl
inc
scas
pop
jmp
cmp
push
sub
aad
rol
xor
push
mov
jno
push
pop
and
inc
stos
movsb
bound
arpl
cmp
aas
sub
es
fsubp
xor
scas
push
clc
jns
cmp
mov
rcr
daa
les
mov
in
xor
pushf
pop
out
test
ja
dec
incl
test
pop
das
sub
xor
loope
pop
iret
jecxz
aad
push
xlat
push
add
sub
int3
or
mov
xchg
lret
repz
push
push
xchg
scas
inc
ret
repz
cmp
jmp
and
jl
or
and
push
xchg
pop
push
rol
jp
pop
push
sbb
or
and
xor
pop
into
mov
jmp
mov
xchg
mov
xchg
mov
mov
adc
or
arpl
or
lcall
dec
sar
mul
mov
xor
push
ficoms
je
push
cli
mov
push
ret
mov
cmp
aaa
xchg
sub
lock
or
jnp
mov
xchg
pop
xchg
lods
or
outsb
xor
call
fsubrp
fiadds
lret
out
push
adc
scas
iret
mov
cmp
das
cmp
mov
orl
call
jmp
orl
dec
loopne
push
outsl
sub
cli
rorb
out
cltd
repnz
popf
jb
fimuls
mov
movsb
lcall
das
dec
mov
mov
clc
int
test
and
aas
nop
and
in
arpl
repnz
xlat
lea
test
mov
aas
loope
in
jp
repnz
xor
not
sub
lret
push
outsl
out
inc
xorl
jmp
arpl
aam
stc
inc
sbb
fildll
fdiv
clc
pop
mov
mov
pop
jbe
jno
mov
adc
js
add
sbb
aam
lods
or
xchg
movsl
push
rcrb
xchg
cwtl
mov
jae
dec
jecxz
push
cmpsb
lods
jne
cmp
out
jb
movsl
rcll
sub
pop
cmpsl
push
and
aam
shlb
xor
aam
dec
jmp
cmp
iret
es
cltd
ret
js
add
in
pop
mov
mov
filds
push
dec
into
out
lahf
add
jle
jmp
aam
shl
rcrl
aaa
int3
insl
mov
ja
arpl
dec
or
inc
dec
mov
jnp
jbe
or
roll
mov
lock
mov
loope
stos
cmc
scas
mov
dec
aaa
jno
int
jo
xor
mov
hlt
xchg
mov
mov
lock
mov
dec
dec
dec
in
repz
leave
dec
stos
adc
sti
orb
ret
and
orl
pop
repz
dec
movsl
aaa
or
jmp
jecxz
pop
dec
in
mov
aaa
popa
pusha
icebp
jecxz
pop
add
aas
add
sub
mov
imul
sbb
sub
jg
int
repz
or
cwtl
xlat
les
cli
loop
mov
ja
dec
adc
scas
mov
testl
stos
or
test
jp
inc
pop
sbb
sub
mov
sbb
xchg
mov
mov
repnz
loope
inc
xor
inc
lret
ja
sbb
adc
and
jecxz
popa
rolb
imul
xchg
sub
inc
roll
mov
std
loop
mov
out
lret
mov
mov
jmp
test
insb
xor
mov
enter
jne
sbb
arpl
fcoms
fsubrp
ljmp
dec
lcall
sub
add
imul
pop
aad
cmpsb
sub
ljmp
mov
push
dec
lahf
mov
lods
adc
sti
dec
cmc
out
add
repz
fidivl
std
mov
mov
push
adc
mov
sub
push
lock
dec
scas
xchg
xor
pop
repnz
inc
js
pop
jmp
xchg
ds
xchg
push
or
out
es
mov
pop
inc
dec
xchg
adc
push
inc
jmp
dec
out
sbb
lret
pop
leave
pop
bound
fsubr
adc
aas
andl
xchg
add
sbb
scas
jmp
mov
pop
or
push
in
loopne
xchg
dec
push
jb
lock
popf
icebp
push
push
fisttpl
cmp
fbld
stc
or
jge
mov
push
mov
ds
in
sub
dec
inc
aaa
xchg
pop
cs
lods
or
cmpsl
fsubrs
out
xor
cltd
fs
ret
enter
lahf
or
nop
add
pop
jb
or
mov
hlt
stos
and
gs
jmp
add
mov
imul
arpl
nop
arpl
in
pusha
cmc
cmp
push
sbb
lds
shlb
int3
push
int3
adc
xchg
ret
xor
xor
pop
push
sbb
or
sub
sub
fdivl
jle
push
lds
or
push
mov
mov
repz
in
ret
xor
fs
xor
mov
fsub
jmp
rcrl
subl
push
out
push
test
hlt
push
shll
push
addr16
mov
je
imul
push
jns
dec
sub
mov
mov
push
mov
stos
js
or
movsl
lcall
outsl
dec
and
mov
jne
movsl
mov
sbb
and
push
lds
pop
pop
inc
imul
sub
xchg
popf
loop
push
xor
ja
jmp
imul
xor
loopne
jp
pop
out
shlb
add
mov
adc
push
push
in
in
sbb
out
notb
mov
repz
ret
in
mov
iret
adc
push
lock
daa
push
popa
int3
push
pop
sbb
mov
cwtl
cmpsl
cmp
lret
jo
mov
pop
insb
fwait
outsl
repnz
test
xchg
iret
pusha
ja
cmp
cmp
sub
fs
fcomps
fsubl
mov
testl
sub
mov
and
xlat
bound
fucomi
xlat
jl
pop
sbb
mov
imul
or
call
jnp
xor
xor
mov
jnp
jecxz
cld
mov
xor
xchg
ljmp
insb
jbe
iret
test
jne
sbb
sbb
imul
add
mov
int3
insl
jl
sbb
in
mov
xor
daa
mov
sqrtps
shll
into
popf
int
enter
dec
arpl
js
rolb
loop
xchg
in
mov
lods
aaa
movsl
mov
xchg
ret
jno
test
mov
out
loop
and
fnstcw
icebp
xor
in
inc
mov
adc
lea
or
mov
sbb
mov
cmpb
popf
add
xchg
xor
push
cmc
add
lahf
jbe
or
lcall
rorl
lds
stos
mov
lcall
cwtl
mov
fwait
add
shrl
xchg
cltd
cwtl
out
cwtl
hlt
ffree
mov
dec
xchg
adc
movsl
fsts
std
mov
fnsave
cmpl
aam
pop
pop
push
adc
mov
adcb
je
insb
pop
xchg
fisubs
or
mov
mov
mov
sub
mov
inc
inc
mov
sub
mov
aam
push
mov
mov
out
dec
jecxz
adc
mov
adc
and
pushf
int
push
and
sbb
dec
pop
adc
inc
jno
fldcw
push
mov
push
testl
sub
fcmovbe
mov
and
xchg
jecxz
cmpsb
pop
popf
mov
jmp
iret
inc
add
mov
cmpsb
test
cli
sti
push
push
jle
pop
push
push
fld
pop
cltd
pop
orb
lcall
test
or
mov
out
inc
repz
xchg
push
outsb
aaa
or
fidivl
push
push
cltd
cs
inc
in
cmp
pop
ds
fcmovnu
mov
jl
incl
pusha
and
out
dec
pop
leave
jmp
nop
subb
scas
pop
add
cmpsl
loope
and
out
adc
dec
pop
pop
push
leave
das
jnp
push
xchg
dec
mov
in
mov
or
adc
and
ret
shlb
inc
add
outsl
outsl
cltd
pop
or
sti
pushf
nop
xchg
mov
cmc
jbe
cltd
pusha
imul
test
lret
inc
mov
mov
stos
in
ss
dec
adc
mov
insb
imul
push
mov
mov
int
add
in
insl
cmp
jae
out
adc
adc
inc
fwait
dec
inc
pop
lcall
mov
rorl
or
icebp
jbe
lds
popf
nop
mov
jg
jmp
mov
shll
mov
fistpl
lods
xor
xchg
pushf
push
mov
mov
xlat
bound
popa
arpl
push
cmp
mov
test
xchg
jmp
scas
fwait
add
movsl
push
xchg
pop
rcll
push
sub
fmulp
jae
lock
gs
int3
cmp
cmp
ja
pushf
cmp
out
ret
pop
add
insl
push
js
and
movsb
push
and
pop
ljmp
inc
adc
sub
cli
mov
mov
fildll
mov
xchg
mov
mov
pop
xor
lahf
dec
imul
ljmp
stc
dec
cwtl
movsb
add
dec
sti
cmc
cltd
or
add
stc
adc
jnp
mov
shlb
mov
dec
fsubrl
orl
mov
jge
inc
and
adc
js
cmp
push
or
lret
xor
sbb
or
leave
daa
mov
inc
movsb
sub
lret
adc
jecxz
mov
in
out
lret
jns
into
addb
jp
add
aaa
icebp
jg
orps
hlt
sub
inc
sub
push
hlt
xor
jns
aad
subb
insl
cmp
fsubp
dec
scas
sbb
insb
cwtl
mov
faddl
sbb
sub
jnp
sub
call
add
pop
in
add
jge
dec
pop
push
bound
es
hlt
stc
mov
sub
cli
mov
mov
sbb
sbb
ret
daa
mov
daa
sbbl
pop
xor
mov
pop
mov
rorl
in
aaa
push
js
xor
mov
push
pop
or
outsl
xchg
and
frstor
addr16
test
cmp
mov
movsb
gs
in
inc
jp
loop
and
shlb
inc
lods
rorb
pop
push
fstps
clc
les
mov
sbb
cli
push
ret
test
out
lahf
push
out
mov
cmp
sub
or
int3
xor
or
or
jl
pop
mov
or
loop
fsubrs
bound
cmp
rclb
pop
mov
aad
arpl
jge
rol
push
push
fsts
in
imul
xor
imul
in
aaa
faddl
in
or
inc
dec
movsb
mov
movsl
hlt
and
sbb
repnz
push
int3
imul
loope
enter
push
mov
mov
clc
mov
in
mov
lret
cld
addr16
cld
les
icebp
mov
out
cmpsl
push
cmp
sub
dec
mov
inc
dec
jmp
ds
push
adc
lods
xchg
adc
jnp
cwtl
scas
je
mov
and
mov
and
cli
sub
sbb
adc
stc
repz
outsl
jnp
loope
ret
mov
adcl
mov
push
ja
sbb
mov
xor
ret
jl
mov
fwait
adc
dec
pop
fbstp
fdivr
push
jo
jmp
jno
sarl
inc
xchg
inc
mov
out
adc
push
sarb
add
mov
pushf
dec
or
les
das
mov
mov
sub
pusha
repnz
gs
xorl
js
pop
xchg
call
sub
std
icebp
cmpsl
or
pop
jo
popf
sub
jge
in
in
loope
lods
mov
mov
out
sbb
or
push
aaa
rcrb
mov
add
outsl
test
rclb
out
scas
sub
xchg
addr16
push
mov
jno
mov
push
sub
shr
push
mov
mov
sbb
stos
adc
lret
pop
push
iret
fistps
jge
pop
jle
outsb
cwtl
and
pop
jg
std
jnp
fucomi
or
or
test
divb
and
daa
mov
mov
out
mov
scas
adc
mov
or
pop
adc
sbb
movsb
jbe
dec
pop
sub
cmp
inc
inc
and
mov
adc
xor
out
pop
lret
fwait
rcrb
mov
adc
push
inc
cwtl
xchg
aas
cwtl
push
lods
icebp
fidivrs
and
adc
adc
clc
jg
lcall
adc
stos
std
in
dec
sub
outsl
xor
jbe
sarl
mov
xlat
popa
loop
xchg
cmpsb
inc
cmp
stc
mov
inc
sub
scas
imul
imul
addr16
mov
imul
pop
pop
mov
sbb
pop
sub
ja
sbbb
mov
sbb
adc
fcomp
mov
add
addl
pop
clc
test
sub
sbb
inc
and
call
in
dec
dec
popa
ss
lods
loopne
jae
pop
xor
push
cmpb
test
mov
lods
push
pop
lcall
pushf
push
sbb
imul
fbstp
mov
shlb
lods
enter
inc
aaa
cld
popf
inc
fstl
push
dec
and
lahf
jbe
test
outsb
push
jb
rcrb
in
addr16
and
hlt
add
scas
imul
imul
outsl
scas
adc
lods
mov
cli
mov
dec
pop
fdivrl
int
sub
mov
push
mov
mov
jb
pop
xchg
cld
int
push
add
mov
add
stc
mov
push
jb
test
es
addr16
mov
pop
mov
or
fistpl
lea
sbb
inc
aaa
mov
pusha
jae
fsubrp
cmpsb
inc
popf
sub
ss
in
push
int
inc
shrl
int
xchg
cmp
nop
ja
pop
nop
fwait
xchg
sbb
push
jle
jp
out
or
shll
pop
mov
mov
push
inc
xor
sbb
inc
decl
mov
arpl
mov
adc
xchg
cli
xchg
ljmp
aas
dec
cs
pop
xor
test
xchg
fistl
rolb
lods
jo
shlb
mov
test
mov
loope
in
cmp
aad
and
lea
adcb
push
pop
out
adc
int
fimull
in
jno
mov
out
or
sbb
cmp
xor
dec
push
stos
out
ss
mov
sbb
out
sub
xlat
enter
and
dec
mov
pop
insb
pop
pop
xor
sub
pop
out
out
add
inc
addb
adc
mov
movsb
xor
in
bound
rclb
popf
shr
sbbl
mov
dec
sbb
rcrl
mov
stc
or
mov
inc
adc
mov
imul
sbb
mov
push
cmpsl
dec
mov
sahf
aaa
jnp
dec
pop
pusha
mov
or
hlt
push
inc
push
call
jbe
es
mov
negb
cltd
xor
xor
pop
pop
cwtl
xchg
call
fs
push
fcmove
loope
aad
jo
insl
cld
dec
jecxz
push
enter
cmp
cwtl
stc
movsb
das
push
aad
xor
cli
pop
add
inc
sub
mov
fstpl
jecxz
jmp
sarb
jecxz
fldenv
insb
pop
mov
out
pop
shll
lods
xor
inc
jl
xor
fstl
cs
gs
sbb
mulb
jbe
leave
xor
pop
jg
push
push
inc
add
and
mov
mov
and
aaa
repz
lcall
jle
mov
ljmp
sub
outsl
mov
sub
mov
inc
and
sbb
jnp
mov
or
data16
mov
insl
loope
sbb
rcrb
leave
cmc
pop
push
mov
stos
cs
cmp
dec
xor
sub
lret
mov
leave
sub
lods
xchg
ja
js
jns
insb
xor
aad
rcrb
aad
jae
xchg
mov
fdivrl
mov
mov
aam
data16
xor
iret
inc
sbb
xchg
dec
lcall
out
je
xchg
fcmovb
repz
adc
in
mov
add
scas
xchg
and
aaa
scas
mov
mov
repz
sub
adc
dec
bound
dec
inc
cs
aas
sbb
out
inc
into
xchg
inc
cmp
ret
in
xchg
sub
in
ret
xchg
xchg
mov
leave
mov
push
add
inc
mov
imulb
inc
or
sbb
call
xor
sbb
iret
movsl
or
pop
jb
pop
xor
sub
push
addr16
dec
popa
jmp
cmp
leave
jecxz
std
sbb
cmp
mov
rcrb
or
jge
mov
dec
push
stc
hlt
or
in
out
sub
movsl
xchg
inc
adc
or
cmp
mov
sub
or
fdivr
sbb
xchg
sub
mov
sbb
imul
insb
andb
mov
cmp
dec
stos
cltd
push
mov
xchg
adc
or
stc
shr
les
std
jecxz
cmpsl
mov
aas
inc
lcall
dec
mov
mov
xchg
lock
enter
and
icebp
cmpsb
push
mov
scas
int3
test
js
scas
stos
sbb
jns
imul
add
sbb
mov
mov
mov
inc
add
mov
jge
fs
rclb
xor
inc
and
into
pop
addr16
cmp
mov
rol
test
xor
mov
dec
inc
pop
jae
test
das
hlt
outsb
pop
mov
or
shrb
pop
int3
or
push
jle
inc
aas
lret
mov
das
out
faddl
push
xchg
mov
stc
repnz
xchg
cltd
aaa
add
jmp
xchg
cltd
in
in
mov
push
mov
aas
lock
inc
or
mov
push
xlat
int3
in
sbb
mov
mov
repnz
fistpll
sbb
icebp
jge
call
loopne
xchg
jo
push
ds
jb
jl
push
insl
test
mov
stos
ret
pop
call
lcall
leave
inc
test
call
arpl
mov
dec
push
call
jne
sub
int
jecxz
fidivs
dec
jae
popa
cld
xor
cld
rolb
movb
ret
mov
or
cmp
shrb
adc
les
cmp
add
or
sbb
call
call
push
sub
call
add
push
add
idivb
das
mov
out
dec
mov
popf
in
out
sbb
push
lahf
std
popf
adc
shll
mov
xchg
jmp
adc
cmc
mov
subl
aad
mul
outsb
hlt
lock
lret
popf
push
xchg
cmp
sbb
pushf
int
test
loope
mov
repz
dec
mov
int
pop
les
mov
cmp
mov
mov
xchg
jmp
add
mov
adc
push
fwait
iret
repz
add
add
inc
int3
fisttps
sbb
fwait
lcall
data16
and
outsb
lret
mov
cmp
outsb
jne
test
mov
adc
mov
lcall
pop
rcrb
imul
or
cmp
jne
pop
frstor
or
hlt
jb
ja
and
ljmp
dec
imul
sub
mov
jecxz
sub
ret
ficoms
stc
xor
iret
lret
add
sub
lock
data16
lock
and
push
jbe
arpl
push
push
jae
sub
cmp
push
sbb
fisttps
inc
outsb
adc
xchg
jae
fdivrl
das
mov
and
adc
scas
xchg
jne
jnp
lcall
push
rolb
out
scas
andb
inc
imul
int
adc
xor
xor
outsl
mov
xchg
xor
dec
jecxz
push
jb
imul
fcmovu
leave
pushf
mov
jne
into
fbld
int
sub
icebp
fmulp
xor
sub
sub
scas
sahf
adc
xor
xlat
popa
aaa
jle
out
add
stos
mov
push
dec
xchg
fst
loope
xor
jmp
call
fisttps
gs
mov
inc
dec
xor
mov
add
jle
sbb
mov
push
insb
insl
cli
cs
mov
sbb
fidivrl
jo
lods
mov
arpl
xor
sahf
add
push
loopne
and
pop
jp
add
sub
hlt
ret
jg
lods
sbb
push
mov
dec
sub
jmp
jmp
add
orl
mov
loop
ss
fnstcw
add
xlat
insl
arpl
jp
fiaddl
stc
mov
adc
pop
xlat
pop
mov
scas
ss
xlat
dec
pusha
push
sbb
adc
xchg
pop
test
sbb
fcoms
cltd
loopne
in
push
adc
dec
pop
xor
aas
fldcw
lds
sub
aas
movsb
insl
push
push
cmp
aaa
lods
cmp
fisubrl
sarl
fs
out
ja
aam
bndldx
add
add
jns
in
dec
push
mov
cltd
xchg
dec
pop
mov
mov
int
pop
addr16
sbb
shr
dec
or
mov
cmp
push
roll
mov
inc
lods
add
arpl
nop
xchg
imul
cwtl
jl
ja
xor
shrl
xchg
into
int3
jl
aam
xor
jg
pop
mov
push
movsl
push
inc
ja
cmpsl
icebp
adc
sahf
jecxz
popa
neg
cmp
xchg
push
cmc
fldl
pushf
mov
addl
sub
dec
xor
aam
imul
mov
imul
into
std
push
lds
lods
xor
jge
cltd
jmp
and
adc
push
sub
imul
testb
pop
fstps
mov
ljmp
sbb
sbb
mov
out
adc
pop
call
mov
cs
jb
in
or
idivl
mov
daa
or
fs
insb
inc
rcr
ret
jbe
aaa
jl
cmpsl
push
mov
push
jecxz
jle
out
out
lock
mov
push
sub
mov
lea
popf
dec
inc
pop
xchg
jg
test
sub
jae
out
imul
sub
bound
xor
jo
adc
flds
push
push
xchg
aad
jns
jge
fs
sahf
cwtl
mov
inc
jmp
mov
inc
jp
fdivrl
mov
inc
fisubrs
mov
xor
pop
dec
mov
and
bound
cmpsb
xor
mov
ss
inc
ret
sbb
pop
dec
xor
popa
or
push
insb
ljmp
adc
adc
jmp
cs
ja
out
xor
inc
iret
xchg
jb
or
fsubrl
mov
mov
ss
hlt
or
fisttps
outsb
int3
mov
decl
ss
cmp
xor
push
sbb
jmp
and
and
cmp
inc
adc
subl
jns
inc
jnp
in
push
fsubrl
cmp
lcall
scas
add
aad
inc
add
dec
ret
ss
cmp
xchg
xor
loope
in
shlb
fisubl
fdiv
xchg
cmp
rolb
das
lock
fbld
lret
out
loop
ljmp
dec
cmpsl
sub
mov
xchg
cwtl
adc
jns
lahf
test
lret
aaa
clc
scas
jne
pop
je
sbb
cmp
lret
xor
push
popf
pop
and
out
xorb
lods
es
sbb
stc
loope
cmp
lock
fwait
add
hlt
sbb
adc
iret
inc
sar
imul
pop
ljmp
mov
sub
pop
fcoms
cmp
add
and
ret
stos
cwtl
or
mov
pop
int
jb
add
and
cmp
mov
dec
xor
and
push
sub
or
or
adc
loopne
mov
cld
cmp
adc
call
lods
or
adc
push
mov
adc
lret
lcall
push
push
pop
inc
mov
loopne
fdivp
lods
inc
addr16
decb
cld
add
pop
out
mulb
js
mov
and
add
or
subb
fildll
or
les
or
fdivr
out
aad
daa
cs
add
int3
scas
loop
lahf
pushw
xchg
push
icebp
push
pop
adc
arpl
add
cmpsl
icebp
aad
out
repnz
mov
adc
into
jne
bound
sbb
repz
mov
clc
cmp
sbbl
push
and
stos
insl
repz
mov
sbb
cwtl
test
cld
lock
cld
or
out
adc
sti
int3
mov
movsl
idivl
aam
sbb
das
int3
scas
icebp
pop
cmp
cs
lret
pop
pusha
add
mov
rcll
jl
jmp
push
sahf
out
sarb
xor
cltd
sti
mov
scas
jnp
or
jne
pop
sbb
jg
mov
iret
sub
and
pop
fcoms
movsb
insb
sub
mov
jg
outsb
bound
mov
das
mov
push
xor
push
in
add
and
and
ret
mov
mov
bound
xor
xchg
jl
mov
and
ljmp
ret
xchg
mov
stos
add
xchg
std
mov
cltd
fsubrs
lods
pop
mov
push
in
lret
fisubrs
mov
xchg
stc
rol
adc
xchg
xchg
aad
cmp
aas
stc
adc
hlt
xor
jo
and
and
mov
xchg
mov
fdivl
int
cmp
in
clc
push
add
or
syscall
push
mov
dec
jns
imul
sub
xchg
adc
push
aas
adc
sbb
fs
or
arpl
stos
sub
adc
pop
icebp
cmp
arpl
pop
scas
addr16
int
mov
pop
outsb
daa
sub
push
test
xor
push
jmp
subl
popf
outsl
sbb
mov
mov
aad
mov
cltd
jns
lods
rorb
jle
insl
mov
imul
push
pop
sarb
sub
dec
mov
mov
movsl
jbe
pop
xchg
xor
adc
mov
pop
cli
sub
lods
inc
cmp
sbb
dec
in
out
mov
das
mull
jl
or
and
cmp
pop
lods
adc
js
icebp
push
mov
outsb
inc
pop
jecxz
jge
sar
jbe
mov
inc
inc
js
add
add
inc
adc
dec
inc
ljmp
mov
andl
push
pop
dec
jmp
adc
inc
pushf
int
jge
enter
jns
nop
adc
xchg
pop
lret
push
lock
hlt
nop
push
movsl
rorb
cld
push
sbb
jg
mov
mov
pop
mov
dec
or
pop
mov
push
adc
loope
mov
adc
stos
xchg
out
sbb
push
lcall
not
pop
mov
mov
mov
loopne
push
xchg
push
dec
daa
or
push
ret
cmp
push
mov
sub
fmuls
clc
xchg
mov
push
lods
mov
lock
enter
pusha
es
push
and
out
loop
xchg
sbb
push
jp
mov
iret
pop
rcl
call
shrd
test
mov
fwait
popf
dec
or
ret
dec
dec
pop
pop
sub
lods
jbe
cmpsl
rol
inc
mov
out
arpl
xor
stos
xchg
or
push
push
icebp
negb
sub
mov
fsts
divb
xor
out
popf
xor
mov
cmp
and
in
mov
popa
in
sub
jae
xchg
xchg
shl
xchg
repz
or
rcl
xorl
sbb
or
test
loop
mov
ds
mov
pop
loop
out
push
in
dec
pop
xor
in
mov
subps
fwait
dec
rol
jle
test
in
std
sahf
mov
lds
pop
ret
xchg
in
xchg
lods
add
sarb
lcallw
add
add
inc
testb
pop
stos
add
or
data16
pop
adc
stc
push
lds
scas
lcall
cwtl
or
xchg
and
popa
leave
jbe
std
jnp
mov
jge
cltd
push
mov
outsl
xadd
jo
mov
xlat
pop
xchg
iret
popa
and
clc
movsb
xor
sbb
jb
mov
fdivl
jnp
xor
cli
dec
int
mov
mov
adc
cli
xchg
mov
xchg
jmp
je
fildl
sub
sti
inc
sub
aam
out
cmp
test
jb
ret
xor
out
xchg
sahf
xchg
cmp
or
mov
pusha
loope
push
fnstcw
or
decb
xchg
cli
lds
pop
orb
push
inc
sub
push
jmp
sub
cmp
imul
and
sbb
mov
hlt
cli
and
lea
outsb
gs
and
mov
cld
xchg
repz
lods
mov
cli
push
push
test
fdivrs
sbb
ja
aad
push
mov
jle
cltd
mov
push
mov
jne
insl
xchg
mov
jae
mov
leave
test
aad
jp
cltd
rorl
sbb
lret
loope
daa
shll
lahf
iret
fwait
pop
pop
in
frstor
cmpsl
popa
lea
mov
popa
test
inc
sbb
push
pop
push
sbb
aad
fmuls
mov
jae
sbb
in
push
adc
fnstsw
popf
loope
adc
dec
pop
ret
out
mov
push
mov
pop
or
mov
push
loope
in
pop
lret
pushf
adc
xor
int
sub
pop
ret
dec
pop
popf
lods
stos
push
dec
mov
cs
dec
lahf
aad
mov
pop
sub
or
push
lea
mov
aam
mov
into
add
mov
fimull
add
xor
xor
shrl
jecxz
clc
sbb
lods
inc
jo
mov
sbb
jb
ljmp
sbb
insb
das
rcl
int
xchg
sti
in
jp
cmpl
shr
push
shll
pop
sbb
or
lahf
cmc
adc
inc
push
imul
cmc
dec
and
sbb
ss
lret
pop
cmp
xchg
enter
xor
adc
fldcw
seta
scas
jle
xor
dec
xor
frstor
loopne
pop
call
cmp
jl
add
ds
mov
lcall
movsb
lods
or
ucomiss
sub
lret
inc
mov
pop
and
sub
cmp
add
inc
out
jg
jbe
push
adc
sahf
fdiv
ficompl
orl
mov
scas
jb
scas
mov
add
cmp
mov
and
cmc
insl
jb
jl
jo
adc
test
push
sbb
lods
loopne
xor
addb
je
sahf
sub
daa
pusha
mov
sub
test
shlb
test
jg
cmp
cmpsb
in
dec
xchg
rolb
xchg
mov
or
arpl
ja
push
cmpl
gs
inc
add
mov
stos
int3
xchg
repnz
jl
sbb
aas
cwtl
push
sub
ret
adc
fildll
and
shll
jmp
jl
mov
stos
add
enter
or
push
push
pop
int
or
xor
arpl
nop
or
popl
push
jno
scas
out
mov
or
repnz
mov
movsb
and
loope
mov
dec
in
clc
hlt
nop
enter
sub
mov
fcomps
ss
jle
add
mov
aas
popf
lods
cmp
adc
cmc
fdivrl
adc
mov
outsl
dec
pushf
fistl
mov
sub
cmp
jecxz
inc
ret
aas
aad
rorl
mov
test
lods
or
jnp
sbb
mulb
out
mov
mov
xor
fiadds
xorl
dec
or
cmp
leave
mov
pop
xor
lret
int3
inc
movsb
insl
das
test
mov
xor
test
mov
sti
mov
sbbb
cs
mov
cmp
mov
repnz
aas
repnz
movsb
xchg
xor
pop
imul
repnz
inc
mov
fcomi
or
popf
sahf
fcoml
pushf
xchg
and
mull
mov
cltd
push
test
pushf
stos
sar
adc
xchg
hlt
push
das
inc
jmp
ja
fnstsw
pushf
leave
mov
xchg
xor
adc
in
push
lea
nop
mov
repz
aaa
or
cli
mov
rorb
mov
rcrb
icebp
inc
cmp
mov
pop
and
jg
or
xchg
cmp
insl
xchg
fiaddl
fisttps
xor
clc
cli
push
movb
mov
lods
cmp
shrl
mov
in
add
fnstsw
popa
pop
jnp
fcompl
cmpsb
cltd
movsb
popa
mov
loope
cwtl
add
cs
and
jmp
or
stos
sbbb
into
mov
outsb
in
movsl
fcmovb
addr16
lret
out
lock
sub
dec
mov
jno
adc
jnp
push
xor
ret
fmuls
inc
mov
jge
inc
sbb
jle
out
out
fbstp
stos
xor
mov
sub
push
ljmp
mov
leave
aad
jns
ja
mov
push
mov
in
mov
ja
pop
negl
je
inc
loop
sub
imul
xor
push
mov
std
notl
mov
aaa
ds
fisubrs
sub
mov
mov
dec
es
pushf
cmp
and
inc
ffreep
or
inc
stos
push
pop
inc
icebp
cmp
and
mov
or
shl
dec
cmp
ss
inc
add
scas
mov
rclb
cli
aaa
les
xchg
inc
loope
adc
xchg
sub
push
clc
pop
sahf
jo
cmc
in
sub
testb
mov
and
add
ds
mov
dec
mov
je
push
jp
jp
inc
call
push
or
out
fistl
cmp
push
xorb
ror
addl
enter
sub
ret
pop
jp
xchg
repz
cmc
and
int3
fmuls
jae
pop
pop
sahf
xor
pslld
pop
sub
sub
jl
gs
cmp
pushf
ret
xor
fsub
ret
ljmp
scas
push
cmc
cmc
out
popf
sbb
sbb
and
pop
pop
std
addb
decl
out
mov
add
sbb
mov
test
popa
push
ljmp
and
jp
and
push
pop
or
dec
cmp
inc
cmpsb
inc
lret
imull
ja
pop
repnz
pop
fnstsw
mov
ret
xchg
loopne
jp
push
cld
aas
push
mov
jl
add
ret
cmpsb
hlt
push
cmp
loop
mov
jae
in
cli
mov
jne
fistpll
xor
dec
ficoms
inc
sbb
and
insb
push
pop
mov
mov
push
jbe
mov
imul
jne
push
jns
inc
loop
lret
in
cmp
cmc
jmp
adc
bound
adc
popf
push
xor
popf
mov
dec
inc
and
aas
test
lds
push
xchg
fstpt
test
xor
ret
ret
mov
mov
insb
fistpll
and
ja
jle
adc
cmp
jns
cmpsb
jnp
or
je
xchg
into
cltd
jno
mov
pop
into
xchg
cmp
hlt
mov
jle
leave
sub
pop
sub
add
lock
pop
imul
pop
or
mov
popa
loopne
loope
inc
movsl
lods
pop
roll
push
mov
leave
dec
pop
xor
loop
xor
aam
loopne
mov
xchg
in
mov
out
js
jmp
dec
mov
pop
push
in
aaa
loop
jno
mov
xor
and
ds
mov
sti
imul
rcr
ds
sbb
sahf
cltd
or
rclb
xor
cmp
rorb
out
mov
ljmp
nop
lds
rcl
enter
idivl
adc
pop
lods
mov
jnp
stc
cmp
imul
jp
push
fidivrl
adcl
xchg
mov
inc
ljmp
push
cld
or
sti
add
mov
ss
pop
stos
mov
sbb
inc
notl
or
icebp
rorl
loopne
sbb
mov
sub
or
inc
jp
pusha
fldl
les
sahf
xor
ss
xchg
mov
pop
jns
jns
add
lds
push
or
inc
mov
ret
aas
js
movsl
jne
ja
dec
pusha
lret
pop
sbbb
xlat
dec
cmc
cld
out
cmc
dec
xor
cs
je
cmp
sub
les
data16
sahf
sbb
sbb
pop
mov
adc
popf
les
push
mov
mov
mov
pop
cmp
push
add
sbb
xchg
fcoms
mov
dec
dec
xorb
orl
stos
sub
filds
cmp
ds
pop
inc
push
xchg
cmp
cmpb
or
dec
adc
test
fwait
movsb
inc
out
subl
out
in
insb
aas
loopne
hlt
mov
dec
mov
mov
jnp
mov
pop
sbb
outsl
lcall
sub
fidivrl
mov
pop
fnstsw
fdivrs
leave
add
mov
mov
dec
addr16
mov
push
xchg
jmp
leave
fstpt
inc
push
dec
cmp
jnp
or
sbb
call
sbb
push
std
or
add
sbb
fbld
cs
inc
xchg
or
jg
jl
ss
mov
and
jge
sbb
jecxz
jp
aad
mov
cltd
mov
mov
push
mov
insb
jae
adc
in
fwait
clc
aaa
popf
cmc
in
adc
dec
jmp
inc
sahf
push
sti
mov
jge
lcall
addr16
cltd
jge
fsubs
push
outsl
adc
pop
mov
push
jle
jle
ficoml
sbb
dec
or
xchg
dec
mov
pop
std
popa
ljmp
imul
shll
pushf
es
adc
jg,pt
sub
lds
stc
shll
add
mov
fistpll
movsb
fisubs
inc
popf
fdiv
sub
pop
in
xor
into
and
loopne
mov
lret
pop
ljmp
sbb
or
loop
lock
cld
jnp
cmp
test
scas
js
dec
add
iret
js
gs
dec
xchg
das
mov
add
fdivrs
jo
jmp
push
enter
jnp
xchg
mov
out
mov
out
adc
repnz
leave
leave
jmp
lods
pop
out
xor
mov
aaa
xchg
jns
jecxz
mov
or
jbe
adc
mov
pushf
mov
jae
cmp
ds
jecxz
fbstp
decb
pop
jno
cld
jl
mov
dec
enter
inc
dec
nop
mov
cmp
pop
xlat
ret
sub
xor
daa
and
or
mov
mov
and
inc
cmp
push
mov
xor
and
or
loop
ret
clc
push
push
in
aaa
dec
into
pop
sbb
push
aaa
out
or
push
xchg
add
push
sub
pop
cwtl
dec
icebp
xchg
mov
inc
push
cwtl
xor
add
mov
xor
or
inc
mov
cs
daa
pop
scas
sahf
jmp
sub
add
or
scas
push
movsb
in
add
cmp
popa
or
imul
xor
sub
les
xchg
stos
mov
insl
or
enter
push
daa
cltd
cmp
leave
repz
jg
test
dec
icebp
ret
pop
sbb
sub
dec
jmp
rolb
push
push
adc
jno
lahf
daa
into
aad
push
ss
mov
sbb
add
test
mov
push
and
call
out
add
divl
clc
xor
jo
sub
push
adc
stos
adc
adc
arpl
xchg
jge
push
stos
inc
xchg
xor
adcl
jg
or
mov
adc
sarl
xchg
jecxz
pop
popa
mov
inc
pop
iret
mov
xor
adc
jo
stos
fwait
mov
pushf
or
jecxz
adc
adc
stos
xor
rcll
cmpsb
imul
divb
je
push
test
add
cmpsb
xor
mov
bound
shrb
mov
dec
idivb
xchg
pop
jmp
jnp
inc
enter
push
pop
outsb
mov
xchg
xor
and
aam
sbb
pop
push
inc
imul
mov
jp
stos
mov
stc
ret
add
imul
add
lea
xchg
iret
fnstenv
pop
iret
pop
xchg
fisttps
ss
lock
out
adc
popf
leave
xor
inc
mov
fstps
push
adc
mov
xchg
out
add
mov
test
es
scas
sahf
mov
jae
xchg
das
out
pop
jle
add
mov
mov
xor
pop
pusha
jle
inc
repz
movsb
call
aam
push
lock
sahf
cmp
sbb
jge
and
xor
inc
mov
xlat
jle
xor
mov
sub
jns
jmp
aam
ftst
sahf
sbb
jbe
insb
and
adc
jne
flds
push
mov
mov
inc
call
and
xchg
xlat
mov
clc
ja
and
inc
add
pushf
sbb
fsubrs
test
es
xor
mov
xor
in
sbb
push
out
sub
lock
pop
inc
and
cs
mov
pop
pop
data16
jo
out
fdivr
cmpsl
je
sbb
mov
fmull
lea
adc
cs
rclb
loopne
pop
xchg
push
mov
fdivs
add
in
std
mov
pop
hlt
pop
data16
out
fldl
push
adc
pop
enter
add
xchg
cmpsb
push
pushf
ja
mov
lods
inc
mov
popf
adc
rolb
shl
das
mov
xchg
cmpsl
stc
and
xchg
mov
enter
push
add
and
pushf
push
lret
jge
scas
dec
das
pop
loope
jnp
lretw
aam
shl
decb
mov
in
lock
fnstenv
xchg
stc
lcall
mov
call
nop
test
pop
outsb
loope
dec
fildl
xchg
stc
pop
icebp
mov
das
je
pushf
fs
cmp
inc
inc
imul
dec
sub
push
mov
mov
arpl
xchg
mov
lcall
stc
xor
fisttpll
pop
mov
sahf
imul
ja
mov
jno
lret
fidivl
testb
add
xlat
ret
cmp
nop
ja
loop
xor
inc
movsl
test
mov
lds
dec
shrl
push
lcall
sbb
daa
notb
inc
imul
add
in
adc
or
cmp
ret
shlb
and
mov
xchg
fstpt
pop
xor
out
pop
fs
arpl
xor
in
pop
push
mov
sbbl
xor
jbe
outsb
mov
iret
xchg
ljmp
cmp
cmp
pop
loopne
sbb
dec
mov
mov
rorb
data16
and
jl
pushl
or
repnz
rcrl
xchg
lea
push
push
out
jp
xchg
pop
out
and
jecxz
test
xorl
pop
xchg
sub
push
pop
stos
fnstenv
mov
and
push
xor
or
pop
insl
stos
out
dec
ret
cmp
pop
inc
dec
inc
pop
outsb
icebp
fwait
stc
daa
std
jge
out
sub
sbb
lahf
arpl
push
mov
gs
imul
stos
mov
out
aam
push
mov
out
sub
inc
in
adc
mov
std
ret
dec
mov
icebp
mov
pop
xchg
ja
inc
lcall
in
int3
pushf
lds
int3
ret
ficompl
test
or
loope
or
fbld
lea
lods
arpl
sahf
bound
adc
jl
mov
mov
and
xor
xchg
das
mov
loope
jge
ret
call
scas
bound
mov
dec
lock
idiv
jl
out
movsl
sbb
and
popl
push
xchg
clc
bound
sbb
dec
jb
inc
push
mov
add
mov
cmpsb
or
data16
leave
dec
xor
pop
mov
dec
into
insb
jae
cld
add
dec
xor
clc
addb
imul
out
cmp
xor
jne
jo
adc
cmp
rcr
arpl
and
add
add
lret
cmp
adc
fwait
clc
sbb
or
leave
xchg
nop
lea
std
mov
loop
lods
xor
inc
out
inc
in
cwtl
or
movsl
lods
add
lcall
pop
js
push
push
ror
pushf
jle
push
fildl
mov
loopne
notl
sbb
shrl
jp
dec
stos
jnp
pop
cli
enter
mov
jne
jmp
dec
or
ljmp
sbb
aad
jnp
cli
ds
test
jge
ss
test
sub
and
scas
lds
add
int3
or
ljmp
push
cmp
and
and
test
mov
insb
cmp
mov
iret
mov
xchg
bound
rolb
rcrb
xchg
popf
fnsave
push
mov
scas
mov
mov
mov
lret
push
popa
push
push
stos
sub
lahf
cltd
adc
popa
dec
xor
jno
mov
loopne
stos
mov
inc
mov
add
popl
stos
lea
push
popa
jmp
fidivrl
lock
stc
lcall
insl
pop
std
sub
mov
dec
jne
in
loop
xor
push
aad
test
cmpsl
or
pop
cmp
test
je
sub
cmp
imul
shlb
aad
and
xor
dec
jne
in
adc
adc
loope
or
mov
or
push
mov
pop
inc
and
cmpsb
jg
inc
ljmp
pop
pop
xchg
lods
imul
and
cmp
lret
add
cmp
xchg
outsl
ljmp
data16
sbb
pop
outsb
lret
out
fisubrl
iret
mov
ret
sahf
fdivrp
lahf
dec
jp
mov
addl
xor
mov
cmpsl
jnp
or
jl
test
iret
mov
call
xchg
pop
cmp
xor
xchg
mov
cmp
sbb
cwtl
aad
arpl
mov
inc
add
jae
cwtl
push
das
dec
sbbb
ds
mov
sub
pushf
or
mov
addr16
jbe
mov
popf
pop
movsb
stc
inc
inc
pop
sti
rcrl
daa
lcall
xchg
sbb
mov
and
inc
jb
test
dec
aad
jno
and
or
cmpsb
mov
jecxz
mov
into
mov
sub
jno
adc
pop
adc
cmp
shl
push
cltd
outsl
mov
pop
pop
sahf
pop
sbbl
das
sbb
jae
push
pop
notl
cld
inc
sbb
pop
push
or
dec
flds
lcall
inc
adc
ds
push
adc
clc
fcomps
jbe
inc
repnz
out
jmp
jg
clc
arpl
pop
test
rorb
lret
gs
push
subl
push
jne
jne
in
loope
mov
aam
clc
fildll
inc
pusha
inc
jns
outsl
pop
orl
repnz
lret
xor
bound
jmp
enter
test
pop
jmp
add
das
ss
imul
mov
pop
lea
xor
insl
pushw
push
addl
jecxz
cmpsb
test
imul
inc
jno
lds
shl
push
stos
inc
mov
jo
jno
sti
push
cmp
js
outsl
mov
pop
cwtl
adc
push
inc
icebp
fcmovnb
pop
std
dec
mov
inc
cmpsb
mov
push
push
leave
sarb
mov
imul
and
mov
jo
dec
dec
sub
push
outsl
add
pop
cwtl
fs
imul
xchg
sbb
mov
lock
fisubrs
xchg
rorl
les
jns
xor
gs
outsl
in
dec
test
andb
adc
push
pop
les
adcl
xchg
pusha
loope
sbb
adc
je
mov
call
mov
sub
xchg
leave
adc
dec
test
and
sti
pop
mov
les
test
sbb
rclb
sti
sbb
sbb
adc
mov
xchg
or
pop
add
dec
xor
pop
inc
xor
mov
loop
pop
or
xor
and
sub
out
sbb
pop
add
out
imul
adc
mov
sbb
mov
mov
lret
loope
mov
mov
je
aaa
imul
mov
arpl
int
icebp
pop
inc
rcll
es
sbb
sbbb
pop
xchg
pause
pop
fcompl
or
addl
and
fstpt
sub
test
xchg
jno
push
xor
jle
adc
in
sub
hlt
mov
cltd
loope
mulb
push
sub
and
scas
sub
icebp
xchg
in
ds
loopne
dec
aam
inc
mov
xor
lea
and
pop
sub
adc
jb
clc
fprem1
xlat
rcrl
mov
jo
or
bound
inc
push
test
mov
out
jno
repz
ljmp
push
dec
inc
push
sbb
push
loope
fimull
pushf
push
mov
xor
and
xorb
or
pop
add
push
mov
cmp
lods
adc
lret
cltd
insl
nop
ffreep
test
dec
fmul
mov
cli
mov
mov
sbb
sarb
jns
sti
fdivrs
jle
mov
stos
lock
inc
mov
je
push
mov
stc
push
sub
outsb
cmp
test
xchg
xor
daa
shll
pop
loop
mov
cli
fstps
or
mov
lahf
jl
mov
inc
and
and
push
shrl
jbe
movsb
mov
xor
cmp
gs
fimull
xor
add
loop
stc
pusha
mov
dec
push
test
pop
repz
neg
fstpl
add
sti
sub
test
imul
std
pop
sub
pusha
lds
pusha
mov
mov
mov
push
cltd
jle
xchg
cmpsl
outsl
cmp
js
mov
mov
fistpll
lods
cmp
jb
mov
mov
push
lea
lock
cli
ljmp
jecxz
sbb
arpl
mov
push
insb
mov
dec
mov
xor
push
xchg
loopne
xchg
jle
push
mov
pop
fucomi
out
lock
cmp
inc
shlb
add
cmpb
cltd
mov
mov
sbb
sbb
and
orl
jne
dec
dec
mov
sub
dec
repz
test
sbb
bound
xor
test
sbb
xor
das
mov
rorb
test
out
mov
loope
push
aaa
enter
in
sub
and
adc
daa
test
je
jl
adc
iret
ljmp
iret
push
push
and
data16
aad
mov
imulb
es
dec
sbb
fisubs
sbb
push
or
ds
jge
push
into
aas
fiadds
sbb
xor
je
mov
scas
push
fwait
push
mov
mov
cld
jecxz
aaa
jl
add
sub
add
inc
push
jne
or
pop
xchg
pushf
adc
lea
int3
aam
jae
scas
adc
test
mov
in
loope
sub
addb
fistl
nop
dec
mov
xchg
dec
mov
push
xchg
cs
xchg
imul
stos
pop
test
in
mov
lds
popa
adcb
ret
push
psrld
mov
mov
xor
data16
imul
loopne
cltd
xor
jmp
fildll
fwait
jbe
inc
cmp
hlt
movsb
push
std
and
push
negl
xor
imul
repz
mov
setp
jmp
pop
jnp
ficoml
cld
mov
out
sbb
push
pushf
pop
sub
cmp
mov
dec
mov
and
push
test
inc
cmp
jae
sbb
fmulp
bound
dec
out
popa
jecxz
pop
arpl
mov
inc
leave
and
jb
mov
mov
iret
adc
adc
or
mov
mov
xchg
test
xor
mov
out
in
pop
sub
xchg
sti
lret
scas
je
outsl
and
mov
or
iret
inc
icebp
das
rorb
test
pushf
mov
fcmovb
inc
sub
mov
xchg
xchg
fwait
mov
fidivl
fldt
dec
add
in
inc
jg
pop
and
ficoml
push
out
into
aam
inc
int
xor
mov
sbb
dec
mov
pop
push
xchg
jl
les
orb
js
cmpsl
inc
push
jge
cmpsl
adc
ss
xor
lcall
faddl
push
pop
jae
xor
fstpl
mov
rol
inc
add
push
pop
iret
and
dec
and
mov
fnstcw
std
mov
xchg
xor
cmp
cmp
cwtl
addl
in
sbb
sub
rcrb
adc
jl
inc
and
cmp
inc
into
in
insb
sub
pop
dec
sbbl
or
cwtl
lcall
and
ret
xor
neg
or
jb
jo
repz
inc
mov
push
xchg
aad
rcrl
sbb
ret
jne
xchg
mov
lret
jle
jbe
stos
popa
mov
ret
notl
cwtl
pop
fsubl
sub
xor
das
and
push
cmp
xchg
movsb
sbb
mov
xchg
inc
test
sbb
dec
dec
out
pop
aas
fildll
gs
pop
pop
scas
icebp
fs
mov
adc
add
fs
ret
cmp
adc
xor
jo
negl
sahf
lea
lods
inc
sub
mov
inc
mov
ds
or
std
push
sub
push
orb
out
push
mov
inc
scas
pop
xlat
int
cwtl
in
xchg
test
cmp
iret
xor
clc
jbe
pop
aad
cmp
aam
nop
data16
mov
fnstsw
sbb
or
fists
mov
xchg
or
add
sahf
mov
xor
movsb
inc
pusha
cmp
jb
xchg
andb
mov
xchg
pusha
gs
mov
pop
jmp
fdivrp
xchg
test
repnz
es
hlt
jae
mov
mov
xchg
daa
and
push
pop
leave
inc
sbb
hlt
xchg
pop
or
inc
push
or
add
aaa
rorl
push
inc
fadd
das
outsl
dec
cmp
sbb
in
xchg
ret
arpl
inc
nop
ret
in
in
std
sub
notb
pop
sbb
jg
pop
mov
popf
sbb
cld
dec
lret
sahf
cwtl
outsl
inc
out
adc
cwtl
sbb
cmc
cltd
testb
mov
movsl
mov
mov
pusha
mov
cmp
mov
mov
mov
or
ss
mov
ret
jge
sbb
adc
adc
sbb
outsb
ds
scas
inc
stos
push
fnstenv
pusha
popf
ret
jns
cltd
inc
xlat
mov
dec
sub
pop
lods
cmp
mov
mov
jp
xchg
sbb
pop
mov
xchg
inc
mov
jp
or
fbstp
imul
mov
cmp
js
les
out
inc
ja
push
hlt
ss
mov
stos
stos
je
jo
jae
mov
mov
test
jl
pusha
movsb
es
adc
je
pop
gs
xor
push
mov
mov
test
add
cmp
int
imul
jno
lds
and
xchg
add
xor
cwtl
adc
test
lods
fwait
stos
push
test
or
push
pop
or
sahf
or
inc
mov
inc
push
jo
mov
cmp
mov
testb
add
xor
and
lret
out
sub
cmp
pop
out
lds
shrl
push
jno
aad
in
sbb
jae
es
adc
daa
inc
andl
xor
jle
xor
insl
jb
stos
push
push
stc
push
stos
cmpb
add
sbb
cmp
iret
jp
lock
test
ljmp
sub
mov
aas
adc
popf
outsb
inc
pop
inc
mov
insl
lods
insb
jge
mov
ds
cmp
sbb
lret
jecxz
leave
fcoml
xchg
push
dec
lcall
imul
xlat
jl
aam
andl
jmp
cwtl
aad
pop
jne
fs
inc
mov
fidivl
inc
out
mov
or
pop
cmp
sub
sub
fisubl
cmp
adc
adc
dec
loop
mov
mov
es
cwtl
ds
xor
push
test
sub
pop
cmp
rcll
jnp
push
stos
test
or
fldcw
div
xchg
aaa
ljmp
dec
loope
mov
inc
dec
stc
sub
add
scas
stos
sbb
mov
pop
cmp
or
pusha
nop
adc
out
inc
leave
cmp
and
add
stc
jp
jmp
mov
leave
notb
xchg
dec
outsl
push
sti
mov
pop
mov
popa
les
sub
pop
sbb
sbb
cmp
test
jl
jae
inc
mov
das
fwait
shll
sbb
dec
push
mov
fstl
sbb
or
stos
or
sbb
cmpsb
cmp
dec
pop
mov
xchg
adc
dec
nop
mov
gs
jge
mov
sub
add
lret
js
pop
inc
ds
pop
jb
test
mov
cmp
sahf
jmp
sqrtps
mov
std
mov
pop
test
push
jge
rorl
lret
dec
push
and
dec
das
inc
rclb
int3
scas
fwait
mov
sti
add
enter
jb
insb
jb
int3
sub
cmp
jbe
aam
scas
test
scas
dec
adc
and
mov
sbb
dec
jmp
mov
inc
fisubrs
ficoml
jb
insl
std
inc
xchg
iret
test
push
lcall
rclb
int3
jae
push
mov
int3
and
add
xor
push
lods
lahf
lds
cltd
in
rorl
inc
lea
lcall
xchg
mov
jbe
jmp
dec
xor
pop
pop
rcrl
pmaxsw
aam
xchg
inc
andl
pop
push
addl
jl
adc
sahf
sti
in
pop
add
ret
inc
xchg
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
dec
add
add
mov
add
add
or
orb
add
add
in
or
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
inc
fmull
add
add
in
add
add
add
add
add
add
add
fadds
add
je
or
xor
add
in
add
add
add
add
add
add
add
add
add
test
or
xor
add
in
add
add
add
add
add
add
add
sub
add
or
xor
add
in
add
add
add
add
add
add
add
push
add
add
loope
add
add
in
add
add
add
add
add
add
add
js
add
inc
loop
add
add
in
add
add
add
add
add
add
add
mov
jecxz
add
add
in
add
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
jl
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
scas
add
add
or
rolb
add
in
add
add
add
pop
add
inc
add
dec
add
push
add
add
add
add
add
add
add
out
add
xor
or
rolb
add
in
add
add
add
push
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
add
or
rolb
add
in
add
add
add
or
inc
add
dec
add
dec
add
push
add
add
add
add
add
add
add
push
add
add
in
or
rolb
add
in
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
icebp
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
repnz
add
or
rolb
add
in
add
add
add
add
add
inc
add
add
add
add
add
add
add
es
add
cmc
or
rolb
add
in
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
add
push
testb
call
add
add
add
add
add
add
add
test
add
rolb
addb
add
clc
add
addb
add
add
add
add
add
add
add
add
add
add
add
rolb
jl,pt
add
add
add
add
add
add
add
add
add
add
call
jge
add
add
in
add
add
add
add
add
add
add
adc
adc
call
add
add
add
add
add
add
add
cmp
adc
test
add
in
add
add
add
add
add
pusha
add
add
dec
add
push
add
dec
add
dec
add
push
add
add
add
add
add
add
add
nop
add
or
push
add
add
add
add
add
add
pop
add
sldt
push
sldt
nop
push
add
mov
sldt
loopne
add
or
add
xor
add
pop
pop
add
addb
xor
add
test
add
rolb
add
clc
pop
add
and
add
dec
or
xor
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
add
add
add
add
add
add
addb
add
or
xor
add
in
add
add
add
add
add
add
add
test
add
insb
or
add
in
add
add
add
add
add
add
add
rolb
add
fcoml
or
cld
add
add
add
add
add
add
add
add
add
clc
push
add
fcoms
add
add
add
add
add
add
add
add
and
add
mov
or
adc
add
in
add
add
add
add
add
add
add
dec
pop
add
mov
add
add
add
add
add
add
add
add
add
jo
add
fcompl
or
or
add
in
add
add
add
add
add
add
add
cwtl
pop
add
in
or
in
add
add
add
add
add
add
add
add
add
rolb
add
and
add
add
in
add
add
add
add
add
add
add
call
and
add
in
add
add
add
add
add
add
add
adc
add
mov
or
push
add
add
add
add
add
add
add
add
add
cmp
add
fsubrl
or
in
add
add
add
add
add
add
add
add
add
pusha
or
add
sub
add
add
add
add
add
add
add
add
add
add
mov
add
clc
sub
add
add
in
add
add
add
add
add
add
add
mov
add
and
or
addb
add
add
add
add
add
add
add
add
fmuls
add
movsb
xor
add
add
add
add
add
add
add
add
add
add
inc
or
sbb
add
add
add
add
add
add
add
add
sub
add
pop
cmp
add
add
in
add
add
add
add
add
add
add
push
or
add
cmp
add
add
add
add
add
add
add
add
add
add
js
add
mov
or
or
add
in
add
add
add
add
add
add
add
mov
or
rolb
add
in
add
add
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
add
add
lock
add
inc
or
les
add
in
add
add
add
add
add
and
add
push
or
andb
add
add
dec
add
add
add
add
add
add
add
inc
or
add
dec
or
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
add
jl
add
in
dec
or
pusha
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
cld
or
cmp
add
and
add
dec
or
cmp
add
je
add
pushf
or
cmp
add
les
add
add
add
add
add
add
add
add
add
in
or
add
add
add
in
add
add
add
add
add
add
add
adc
add
pusha
dec
or
adc
add
in
add
add
add
add
add
add
add
cmp
add
je
or
adc
add
in
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
pushf
dec
or
adc
add
in
add
add
add
add
add
add
add
mov
add
mov
or
adc
add
in
add
add
add
add
add
add
add
fmull
add
les
add
add
in
add
add
add
add
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
cs
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
mov
add
adc
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
mov
add
mov
add
mov
add
mov
add
add
add
xor
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
hlt
shlb
jne
ret
and
fcomip
push
je
mov
or
dec
movsl
push
out
push
repz
rolb
repz
or
dec
jbe
push
sbb
push
mov
sbb
and
inc
aas
add
mov
lea
cmp
into
push
cli
xor
fldenv
insl
iret
fldcw
pop
movsl
in
sub
fists
xor
pop
xchg
je
or
mov
lret
out
daa
test
pop
pop
loop
push
jle
inc
xor
dec
dec
movsb
arpl
test
jmp
lea
sarb
mov
dec
mov
movsb
out
gs
dec
sub
in
pop
and
and
in
xlat
movsl
pop
lods
cwtl
add
outsb
jnp
outsl
movsl
mov
mov
aad
xor
push
xchg
sbb
jp
cmp
call
not
aad
cmp
inc
mov
shll
add
inc
mov
movsb
xlat
and
cmpsl
xlat
mov
rcrb
notb
filds
add
jae
sbb
cmp
ss
add
pop
push
jae
je
daa
inc
xchg
enter
sub
bound
out
mov
fisubrl
pushf
sbb
in
xlat
mov
fwait
xor
jge
lods
push
cmc
loopne
ljmpw
mov
fcmovbe
outsb
cs
sbbb
insb
gs
cwtl
mov
hlt
dec
icebp
xor
scas
cmc
push
call
ja
push
xchg
xchg
push
and
and
sti
roll
stos
fwait
inc
mov
jae
push
mov
bound
lock
shll
xchg
mov
sub
jg
push
in
test
lods
or
pop
inc
fisubl
sarl
ja
ficoms
push
shlb
rorl
shl
call
jne
inc
ret
icebp
mov
out
ret
mov
popa
inc
mov
aaa
imul
lahf
xor
adc
push
stos
adc
sahf
outsb
imul
sti
imul
adc
push
icebp
out
sbb
lret
jp
aam
les
push
mov
outsl
mov
jecxz
imul
enter
pop
jb
or
nop
pop
mov
mov
inc
int
push
xchg
testb
or
sbb
adcb
stos
aad
addr16
gs
vpacksswb
lcall
movsl
mov
inc
mov
or
imul
lcall
push
movsl
pop
fmuls
cmp
xor
pop
les
jb
fsubl
fwait
and
sub
daa
aam
das
js
hlt
popa
inc
mov
repz
jb
mov
lock
xchg
push
adc
dec
jge,pt
mov
push
mov
inc
jge
jge
and
insb
mov
dec
xlat
cs
jb
xchg
nop
lret
mov
lcall
lcall
pop
add
push
lea
mov
insb
cwtl
je
push
daa
pop
fsub
xchg
push
xor
mov
push
adcb
xchg
xchg
sub
sbb
push
mov
mov
das
or
push
jge
jg
pop
es
es
sti
cmp
sbb
aas
mov
or
test
mov
lea
repz
xchg
add
and
mov
ss
out
fdivl
test
pop
jle
and
or
divb
lcall
jmp
outsb
jl
mov
int3
arpl
dec
adc
inc
xor
add
add
adcb
push
add
icebp
ljmp
pop
jb
ret
lods
lock
or
jecxz
dec
arpl
rcrb
fwait
or
es
pop
xchg
into
xor
jo
lock
add
sub
jnp
add
dec
test
sbb
stc
jg
lock
pop
sub
sub
adc
clc
pop
xchg
and
jle
js
addl
pop
adc
mov
lret
fidivs
iret
imul
out
fstl
cltd
out
push
dec
xchg
sbbl
stos
inc
and
call
stc
pop
jge
in
decl
pop
pop
incl
push
ss
shrb
dec
cld
jge
test
push
mov
mov
or
cmp
cs
mov
jecxz
inc
out
xor
push
pop
jg
push
sub
xchg
and
push
jne
call
dec
imul
inc
cmp
insb
ficoms
mov
addr16
and
out
adc
xchg
es
cmc
into
push
hlt
imul
push
stos
fwait
mov
into
loop
sbb
or
testb
not
or
push
fcmovnbe
or
mov
and
outsl
xchg
ds
leave
dec
repz
mov
sub
shl
divb
sub
mov
mov
mov
divb
mov
into
adcl
jnp
cltd
cld
ficompl
or
std
imul
data16
jo
dec
push
loop
add
jge
insb
sarb
mov
stc
adc
cmp
cmp
or
and
andb
jne
add
test
or
stos
push
cli
mov
push
lahf
insb
loop
and
jbe
push
pop
stos
pop
or
mov
shrl
jp
mov
or
sbb
mov
or
pop
in
pop
adc
push
sub
aam
movsl
jmp
push
sysret
pop
mov
stos
stc
ss
mov
push
sbb
ljmp
lods
notl
cld
mov
dec
push
sub
hlt
sub
push
adc
mov
scas
stos
mov
aam
add
mov
test
adc
jb
xor
dec
inc
es
xor
cmp
adc
cmp
and
jge
dec
sub
cwtl
dec
and
iret
xor
jp
clc
lahf
sbb
sbbl
lods
mov
loope
push
dec
lds
sbb
les
loop
popa
cwtl
lods
cmp
jb
in
inc
fs
push
dec
mov
add
testl
cltd
loopne
jle
cmpsl
test
shrl
aam
xor
sbb
dec
fisttpll
jg
xchg
dec
icebp
jo
cmp
ja
sub
es
jo
fidivrl
inc
xlat
leave
inc
add
xchg
cmpsb
mov
lcall
and
out
or
dec
add
xchg
adc
jl
xchg
cmp
dec
call
in
sarb
addr16
or
int3
and
inc
fisubl
or
fnstsw
sbb
pop
int
repnz
sub
inc
loop
inc
repz
xchg
imul
cli
sbb
add
mov
cmp
jno
enter
lods
into
out
es
arpl
testl
ficoml
cmp
scas
popa
pop
fwait
sbb
cmpb
mov
popa
push
rorb
pop
mov
push
cmp
lea
xchg
divb
sbb
mov
negb
mov
icebp
stos
das
cmp
test
xlat
mov
mov
popa
mov
aas
es
mov
or
mov
jmp
sub
fsubrl
stc
outsl
repnz
nop
call
cmc
mov
inc
lods
cmpb
mov
movsbl
test
lods
push
sbb
ss
xor
dec
mov
push
jp
add
popa
loop
push
mov
mov
fistl
pop
and
sbb
xchg
pop
addr16
fadd
jae
fdivrl
xor
orl
stos
fwait
es
incl
out
aam
fs
or
inc
add
daa
sbb
mov
test
push
cmp
jo
sbb
lods
push
scas
ret
or
adc
cmp
mov
inc
push
cwtl
into
out
push
adcl
outsl
test
cli
mov
cmp
mov
pop
or
jg
mov
and
daa
dec
loope
mov
flds
shlb
filds
insb
pop
test
and
in
loope
in
mov
hlt
sti
sti
jno
cltd
xchg
sahf
xchg
mov
rorb
jne
mov
push
mov
dec
xor
jl
or
pop
jnp
sbb
push
negb
lret
push
inc
push
in
and
scas
xor
pop
xlat
ret
xchg
popa
jno
pop
add
out
cmp
into
mov
fsts
ja
sub
xchg
mov
cld
into
inc
adc
lahf
out
xchg
adc
in
ljmp
pushf
outsb
push
adc
out
sbb
shlb
xchg
arpl
fisubl
icebp
xor
mov
scas
mov
sar
xor
pop
lods
loope
jnp
js
cmp
dec
xor
movsl
sub
mov
cmpsb
jnp
int3
iret
das
popa
pushf
inc
push
pop
add
push
dec
push
xlat
push
mov
push
push
mov
push
mov
sub
xchg
in
loopne
and
pushl
aad
iret
outsb
jge
addl
xchg
mov
adc
jecxz
adc
aad
decb
xchg
fcomi
inc
popf
popa
mov
ljmp
stos
call
lahf
addr16
add
imul
mov
adc
les
inc
pop
pop
lods
jae
push
js
stos
sub
cmpsb
jp
fdiv
dec
lcall
unpcklps
fwait
xchg
mov
out
ret
jle
dec
lods
fistps
and
cmp
and
shlb
fistps
pop
sbb
mov
mov
cwtl
sub
outsb
mov
xchg
adc
int3
call
lock
imul
xor
pop
lcall
or
dec
inc
pop
pusha
ss
fstps
sbb
sub
sbb
pop
add
mov
sti
mov
loopne
mov
int3
imul
dec
and
xchg
xor
sbbl
jle
mov
adc
or
sbb
inc
repz
add
scas
andb
push
nop
dec
jmp
mov
mov
data16
add
cltd
push
push
mov
sbb
mull
mov
lahf
jo
insb
jg
fistps
sbb
adc
test
lods
imul
test
and
or
add
xchg
or
cmpsb
gs
mov
cmp
sub
not
mov
mov
iret
pop
sbb
add
stos
nop
sub
push
fnstsw
cmp
or
xor
jo
mov
gs
arpl
xor
adc
cld
lahf
jbe
rcrl
push
xor
ret
clc
shl
ljmp
pop
and
xor
jbe
inc
inc
loopne
stos
sbb
dec
stos
ja
sub
not
mov
add
test
loop
jmp
ret
test
movsl
adc
arpl
jl
xor
and
xor
jns
or
adc
jle
add
adc
cmc
or
out
xor
and
lock
faddl
cmp
cmpsl
jle
lds
add
inc
or
test
xlat
icebp
test
mov
flds
add
dec
jae
cmpsl
ret
pmulhw
mov
pop
and
sub
xchg
fst
cmp
adc
mov
stc
pop
movsl
push
mov
inc
xor
clc
cmp
inc
adc
sub
jmp
xchg
fs
mov
or
ret
mov
push
iret
xlat
pop
fcomip
std
mov
pushf
popf
lret
inc
xor
loopne
and
gs
sub
lcall
orl
fdivrs
jge
test
or
add
fsubp
add
pop
fistps
dec
adc
jo,pt
push
xor
sti
xor
test
pop
idiv
mov
leave
sbb
ds
xchg
pusha
cmp
ja
cltd
stos
mov
jo
test
dec
pop
cmp
ja,pn
jnp
and
mov
and
daa
scas
mov
cmp
mov
add
stos
xchg
addr16
out
adc
push
out
jo
lret
sbbl
xchg
push
loop
mov
mov
int
mov
sub
pop
add
jge
xor
and
movsb
mov
lds
pop
or
icebp
orl
outsb
mov
lea
push
dec
dec
mov
es
push
fiadds
inc
rcrb
enter
lods
xchg
cmpl
xchg
fdivl
fisubrl
push
and
jp
loopne
inc
dec
bound
in
mov
iret
les
xchg
pop
push
cltd
mov
cs
fnsave
mov
jbe
mov
pop
data16
std
cmp
lahf
fbstp
lret
mov
fcmovnb
inc
pop
aad
and
lods
jge
testb
adc
add
adc
mov
xor
inc
jl
mov
scas
adc
cmpsl
mov
add
push
sub
fisubrl
clc
js
dec
sti
sub
in
fsubrs
inc
inc
loop
push
out
rolb
mov
cmp
loop
inc
out
push
jo
cmp
jne
and
lods
xor
mov
mov
inc
mov
icebp
add
lret
lods
icebp
hlt
cmp
xchg
insb
inc
js
mull
call
cld
xor
in
icebp
jge
xchg
push
push
sbb
xor
cli
mov
imul
dec
jp
stos
movsl
movsb
add
imul
xor
loop
xchg
mov
mov
xchg
mov
lcall
jae
leave
mov
xor
loop
push
hlt
lods
leave
out
inc
cmp
cmpb
add
sub
cwtl
mov
test
mov
or
lds
out
inc
call
lds
inc
cld
xchg
mov
jne
insl
in
out
cli
push
xor
adc
push
push
mov
lods
adcl
dec
es
fists
adc
lods
adc
stos
add
xor
call
addr16
cmp
jp
aas
push
repz
std
inc
mov
push
dec
sbb
outsl
cmp
jne
xchg
dec
dec
cltd
daa
xlat
popf
push
sar
pop
lods
ret
lcall
or
rcrl
fcomps
adcb
subb
pusha
sbb
sbb
movsb
push
inc
ficoms
cld
loopne
push
call
and
pushf
aad
adc
adc
push
dec
add
scas
mov
cmpsl
rorb
push
lret
or
xchg
jg
push
mov
adc
mov
lea
mov
cmp
inc
adc
adc
xchg
sub
push
imul
test
xchg
and
sub
add
cmp
and
scas
in
iret
mov
xlat
jge
ret
mov
lea
loop
mov
jp
rorl
les
imul
or
jns
int3
in
jecxz
sar
pop
cmp
mov
adcb
popa
into
mov
test
clc
enter
in
cld
xchg
mov
mov
jg
mov
mulb
scas
jecxz
jo
sub
dec
inc
inc
jno
cmp
rorb
je
pop
pop
push
mov
pop
or
mov
lcall
jae
pop
xchg
ds
sub
ficoms
test
xchg
sub
or
sub
push
mov
clc
inc
cmpsb
popf
xchg
adcl
arpl
add
adcl
aas
dec
mov
mov
cmp
pop
mov
sbb
and
leave
cmp
daa
sarb
mov
mov
mov
ficoml
fdivrp
and
jne
sub
out
stos
rcrb
adc
bound
xchg
jnp
or
lret
lcall
movsl
push
add
ret
filds
pop
popa
aam
sub
popaw
imul
push
and
pop
push
in
dec
into
push
jo
loopne
addl
sub
js
mov
out
movsb
jns
testl
vpshufhw
or
shld
dec
int3
lcall
les
lods
sbb
mov
stc
out
fnstcw
and
incl
sahf
sbb
pop
in
mov
mov
fistpll
int3
lcall
out
loop
push
pop
jp
icebp
mov
test
pusha
dec
ret
push
pop
cld
push
movhps
test
mov
pop
xlat
adc
mov
daa
fcoms
xlat
stos
cmp
and
add
lret
xor
leave
or
pop
lods
cmc
scas
cld
xchg
sub
xor
shrb
jae
dec
jae
pop
push
fbld
mov
inc
sbb
mov
daa
nop
push
add
rorb
add
lods
sbb
and
add
je
jge
mov
push
lds
mov
js
cwtl
pop
sar
inc
add
sbb
data16
inc
or
push
sub
cs
inc
xchg
test
dec
mov
pop
push
out
dec
int
and
loope
sub
mov
mov
mov
repz
lahf
pop
jbe
aad
cs
pop
xchg
push
add
jle
xchg
das
or
xor
xchg
fstpl
xchg
jmp
outsb
push
xorb
loopne
cmp
xchg
mov
fimuls
stc
fisubs
cli
test
lret
xchg
inc
ja
rorl
push
clc
test
shrl
push
dec
movsb
xchg
dec
subb
test
pop
mov
cmp
enter
dec
repnz
gs
ljmp
test
push
ss
pop
sbb
mov
jmp
stos
xchg
nop
mov
jmp
inc
sbb
ss
mov
int3
jae
call
lods
jns
bound
jne
ljmp
mov
jbe
test
subl
sahf
out
sub
inc
stos
push
push
out
pop
push
sub
movsl
into
aaa
stos
xchg
outsb
gs
jne
or
fwait
pop
out
lahf
inc
lret
out
jecxz
call
push
lods
lret
or
dec
cmpb
xchg
xchg
ds
mov
sub
pop
mov
xor
pop
dec
mov
cmc
clc
adc
xor
mov
iret
pusha
iret
les
int
cmc
sub
cmp
pusha
mov
push
into
test
cmpsb
push
pmuludq
emms
std
das
sub
lock
in
push
aaa
std
je
mov
shr
xchg
inc
xchg
sbb
inc
adc
mov
push
inc
imul
clc
test
mov
ljmp
add
pop
add
fs
movsb
imul
fimull
shll
sub
sbb
cwtl
repnz
and
cwtl
loop
add
shrb
ljmp
mov
out
stos
mov
mov
shl
mov
add
pop
fistps
iret
hlt
sbb
mov
test
jp
mov
sbb
mov
lods
in
inc
arpl
mov
mov
mov
in
jb
push
inc
sub
push
xor
sub
jbe
jb
push
arpl
lahf
into
push
fstpt
cs
in
push
icebp
icebp
dec
mov
into
mov
outsl
push
pop
notl
mov
jno
jp
stc
shrl
cmc
shlb
mov
xchg
clc
sbb
loopne
cltd
sbb
sbb
mov
in
cmp
lret
in
sbb
lea
mov
inc
xchg
jg
shlb
gs
sti
test
lods
mov
mov
les
jg
jnp
sbb
push
mov
xorb
scas
ret
insb
out
aam
mov
ret
test
adc
roll
lret
aas
cmpsl
mov
inc
sbb
push
cltd
fcomip
inc
in
push
pop
sbb
repnz
fildll
je
js
gs
xor
fwait
mov
sub
sub
xchg
shll
mov
push
std
mov
movsb
pop
mov
mov
out
mov
jbe
adcl
fisttpl
cmc
cltd
outsl
movsb
add
cmp
pop
inc
sub
mov
test
shrl
sub
cli
loop
xorl
pushl
pushf
add
push
or
das
out
push
sbb
mov
and
in
mov
pop
adc
jo
ss
mov
push
push
sub
inc
mov
mov
pop
inc
loopne
xchg
jecxz
ficoms
push
pop
into
and
shl
mov
xor
repnz
inc
stos
insb
adcl
out
movsl
out
int
loope
xchg
shlb
rolb
dec
jp
mov
pop
jno
xchg
pop
data16
data16
fbld
push
cmp
inc
adc
adc
test
mov
or
repz
adc
mov
pop
xchg
int
sub
shl
cltd
mov
imul
lea
add
or
mov
test
ljmp
cld
dec
dec
int3
xor
mov
dec
xchg
and
mov
or
mull
cwtl
call
sub
add
or
dec
push
lret
pop
outsl
pop
push
repz
rorl
push
or
pop
out
mov
lds
mov
jle
mov
bound
inc
push
loope
adc
adc
shll
mov
mov
fwait
push
idiv
xchg
scas
andl
jne
mov
out
jmp
outsb
testb
loopne
fucomp
stc
in
xchg
sbb
std
ret
insl
repnz
cwtl
adc
add
cwtl
movsb
stc
sub
popf
je
outsl
sub
jno
sub
and
inc
rcrb
inc
das
lcall
test
daa
in
into
mov
mov
cmp
xchg
pop
mov
lret
push
cmp
cmp
loope
push
scas
test
mov
mov
out
cmc
cmc
mov
mov
push
pop
sub
or
movq
mov
imul
cmp
frstor
aam
jne
orb
mov
mov
push
mov
repnz
incb
add
adc
pop
xor
movsb
and
or
movsb
pusha
imul
xor
clc
inc
mov
jb
outsl
mov
mov
std
fwait
bound
xor
inc
lahf
sub
add
adc
push
jge
aas
rcrb
cmp
lcall
push
lret
pop
jno
in
add
mov
adc
mov
xchg
xchg
xor
mov
mov
outsb
sarl
mov
mov
xor
sbb
dec
js
inc
ds
cmp
adc
inc
mov
jo
push
ret
je
addr16
ficoms
mov
mov
push
xchg
imul
aaa
push
sti
push
adc
xchg
sub
loop
push
ja
mov
les
aad
push
xor
les
adc
leave
repnz
test
addl
rcrl
pop
and
inc
push
jg
lods
cmp
ret
lods
jge
cmp
fistps
imul
dec
repz
pop
mov
cld
mov
and
je
jmp
ss
fistpl
cli
sub
xchg
adc
push
dec
push
mov
sti
xor
adc
ss
mov
mov
lods
scas
stc
mov
mov
jno
cld
adc
pop
mov
popa
test
in
push
ret
fistl
and
xchg
inc
mov
pop
add
push
ret
mov
cmpsb
adc
jo
jbe
inc
into
pop
pop
cli
jmp
push
mov
rol
inc
sti
lods
mov
adc
data16
mov
jae
push
add
bndstx
imul
push
adc
sbb
add
es
sti
or
mov
lock
xchg
insb
daa
cmp
jae
jl
rcll
cs
jnp
aad
or
jl
cmp
int3
xchg
xor
test
inc
enter
cs
lds
sarl
testl
adc
movsb
divb
out
in
ds
adc
sub
xrelease
lods
push
test
cwtl
outsb
js
xchg
cs
mov
pop
inc
sar
fimull
cmp
out
adc
repz
stc
insl
aam
cltd
insl
es
adc
jb
cmp
xchg
sbb
cli
ljmp
inc
out
addb
mov
stos
jl
inc
iret
mov
fistpl
lret
inc
fwait
and
in
in
adc
jp
pop
sbb
xchg
gs
cmp
int3
sub
push
dec
and
popf
add
out
cmp
sbb
lock
mov
ret
std
jecxz
hlt
pop
fnstcw
sub
or
movsb
adc
orb
les
lret
jecxz
mov
lahf
mov
stc
xchg
add
repz
mov
imul
into
pop
dec
xor
xchg
xor
es
fadds
mov
mov
in
adc
jbe
xchg
cltd
xor
add
dec
adcb
fnsave
mov
out
pop
in
adc
into
adc
subb
adc
mov
repz
in
clc
sub
pop
mov
mov
or
push
sub
inc
imul
mov
fbld
adc
cwtl
je
xchg
jg
pop
stos
or
fstpt
mov
movsb
test
aam
mov
inc
pop
lods
ret
aad
iret
loop
in
cmpb
data16
pop
push
lahf
add
call
inc
bound
in
sbb
dec
push
push
pop
dec
cmpsb
sahf
shll
cmp
push
or
xchg
mov
dec
add
jp
cli
aam
mov
hlt
jbe
in
pop
and
mov
repz
movsl
push
aad
adc
cmp
dec
lock
cmpsb
inc
push
popf
fists
push
or
das
call
fdivr
cmp
jae
out
and
mov
imul
sahf
push
pop
push
outsb
sub
sahf
inc
sbb
shlb
pop
pop
xlat
mov
enter
jo
fsubp
adc
ret
int3
sub
sub
xor
int
ss
push
int
jnp
adc
popf
sbb
sarl
push
push
call
or
lcall
push
test
imul
mov
test
pop
mov
shll
jno
adc
or
ss
cmp
jmp
jo
fadds
sub
mov
cltd
outsl
loopne
cltd
lcall
mov
loope
orl
xchg
push
mov
pop
cmp
add
cmp
lcall
mov
pop
pop
icebp
mov
pop
aas
cld
pushf
inc
xlat
shrl
push
scas
push
push
dec
pop
cli
inc
leave
ret
push
in
cmp
xor
mov
fsincos
mov
cmp
fisttpl
mov
hlt
ret
int3
jl
and
mov
xor
sub
mov
bound
or
hlt
int
nop
pop
aas
clc
xchg
adc
adc
adc
ss
push
mov
adc
lock
add
cltd
mov
popf
pop
test
jg
loop
aaa
dec
inc
push
mov
jl
rorl
mov
lret
int
and
lea
pusha
cmp
ret
mov
pop
push
cld
ljmp
aas
iret
push
addl
mov
inc
mov
xor
pop
bound
push
sub
xchg
and
insb
movsb
cmp
popf
jo
mov
in
addr16
and
jbe
pop
mov
mov
jp
xor
in
cmp
mov
add
lret
mov
mov
fsubrl
arpl
fists
popa
or
add
xchg
pop
loopne
mov
jns
xchg
bound
inc
mov
loop
and
cmc
mov
mov
lock
and
push
loopne
enter
insl
orl
pop
mov
or
add
movsb
jmp
loop
scas
mov
pop
ds
xchg
mov
loop
ret
push
mov
adc
popf
rcrl
lcall
jae
dec
and
ja
imul
mov
std
ljmp
mov
mov
xchg
sahf
lds
mov
fmul
outsb
ficomps
scas
gs
loope
repnz
cli
stc
cmp
or
or
mov
mov
jnp
sbb
xlat
xor
repnz
sbb
outsb
xor
pop
xchg
stos
push
sbb
mov
mov
flds
in
mov
pop
xchg
push
insl
aaa
cmpsl
sub
aas
xor
cmpsl
add
fsts
int3
dec
stos
sbb
mov
aas
adc
adc
cli
xchg
or
mov
mov
inc
sub
movsl
jne
call
pop
daa
xor
push
lods
adc
mov
stc
mov
icebp
lahf
push
mov
push
pop
push
cmc
adc
adc
adc
xchg
mov
adc
popf
cmc
fcompl
xor
pop
sbb
inc
mov
and
lds
sti
ljmp
cmp
hlt
push
xchg
ja
shl
shlb
mov
jbe
out
push
mov
or
dec
push
lock
lahf
pop
fndisi(8087
adc
pop
sub
mov
add
test
cmc
mov
mov
bound
ja
mov
test
call
sbb
fisttpl
adc
jbe
fidivs
es
repz
rclb
mov
in
jno
fucomip
cltd
push
cwtl
aam
xchg
pop
sbb
scas
cmc
pop
nop
pop
insl
jmp
add
aaa
inc
ficomps
sub
out
mov
lcall
repnz
sbb
xchg
lock
das
jne
sub
ret
jnp
inc
iret
rclb
lret
pop
and
xlat
ss
pop
leave
js
in
in
ja
clc
mov
fsubrp
insl
xlat
mov
imul
das
sub
js
orb
cmpsb
push
int3
mov
jno
ja
jg
lret
jne
notl
pushf
dec
mov
stos
stc
icebp
sbb
aam
mov
mov
sub
in
jg
jmp
xor
data16
pusha
sbb
mov
fisubrl
or
push
fiadds
in
dec
jnp
subb
and
stc
call
jecxz
mov
xchg
es
push
outsl
pop
dec
aam
out
movl
mov
test
scas
pop
subb
in
nop
inc
dec
cltd
loopne
jb
add
pop
negl
mov
ret
fsubrs
jae
jp
shl
cwtl
push
and
or
add
cs
mov
int3
pop
pop
adc
and
fwait
add
xchg
pop
in
cltd
call
adc
ja
push
jae
ds
xor
mov
test
jne
and
hlt
mov
sub
push
mov
data16
inc
sbb
bound
jl
push
sub
cmc
inc
jmp
jmp
add
stos
adcb
shr
into
xor
jmp
pop
mov
scas
addl
or
hlt
add
out
and
ret
or
sti
xchg
dec
pusha
inc
add
cmp
jne
cmp
fcompl
cmpsl
and
repz
dec
xchg
jnp
stc
cld
lret
push
dec
xchg
mov
xor
lds
jo
les
pop
mov
shrb
arpl
or
mov
into
adc
mov
fs
dec
push
pushl
je
adcl
cld
jmp
cwtl
es
in
jp
cmp
inc
int
sub
inc
add
mov
int
in
enter
mov
add
bound
dec
aaa
outsb
outsb
movsl
jp
mov
rcrb
dec
lods
fdivrl
adc
imul
mov
cmpl
sub
adc
push
push
mov
mov
xchg
ss
jl
rol
notb
push
test
hlt
bound
repz
loope
ljmp
inc
cwtl
call
adc
fbld
ret
lock
mov
dec
fbstp
sbb
addb
cmc
cmp
cmpsl
push
xor
mov
aam
shl
mov
xchg
stc
push
dec
addb
ret
mov
sbb
adc
mov
aaa
add
push
or
stos
pop
nop
repnz
ficoms
fidivrs
aaa
xlat
inc
pop
lods
in
cld
or
out
xor
or
ljmp
aaa
cmpl
dec
jg
jb
mov
es
mov
add
or
mov
lds
lahf
mov
int
and
imul
jp
call
jo
cltd
push
mov
xchg
lcall
mov
mov
mov
push
insl
xchg
or
mov
les
jecxz
mov
imul
and
sbb
mov
call
cmpsl
js
into
add
aad
push
xchg
stc
les
jle
mov
pop
out
mov
scas
cli
add
push
dec
sahf
mov
lods
pop
xchg
mov
daa
fldcw
shrb
rcr
inc
popf
ret
insb
xor
mov
mov
test
push
std
xchg
inc
repnz
out
ret
mov
leave
jecxz
lock
add
push
mov
popf
fbld
mov
cltd
push
arpl
stc
pusha
hlt
outsl
jp,pt
cli
ficomps
xor
jne
mov
dec
lods
sti
subb
popa
inc
bnd
mov
adc
pop
into
adc
popf
imul
dec
gs
sti
fbstp
xor
fisttps
ljmp
test
mov
fistpl
push
mov
or
ret
mov
and
mov
mov
fildl
int3
subb
lret
sub
adc
jae
or
pushf
sub
mov
add
push
dec
sahf
adc
mov
outsb
cmp
xor
int
xchg
cmp
js
push
jecxz
js
repnz
mov
push
lret
loop
dec
jp
mov
xchg
into
lret
mov
mov
addr16
pcmpeqd
test
shll
adc
sbb
sbb
scas
sbb
sub
lock
mov
ds
jo
adc
divl
add
jle
jecxz
push
aam
decb
sbb
mov
cwtl
js
sbb
xchg
ss
shrb
push
mov
daa
cmp
jmp
in
call
xchg
subb
dec
xor
out
lods
movsb
das
adc
sbb
sbb
ret
xchg
addl
xor
rcrb
cmp
arpl
push
ss
rcr
inc
ljmp
mov
dec
inc
sub
dec
lcall
lods
in
fsubrs
pop
inc
stos
and
xor
jno
mov
cltd
sbb
dec
aam
out
leave
sbb
imull
push
add
jno
test
icebp
loop
leave
shll
dec
jb
and
js
jg
xorl
bound
movsb
sbb
js
xor
add
lods
fnsave
push
call
fmulp
leave
fwait
adc
mov
nop
rcll
mov
mov
pop
fs
ja
in
jnp
lahf
sub
cwtl
add
xchg
jecxz
pop
icebp
dec
jmp
fstpt
push
clc
mov
mov
scas
adc
test
pop
add
mov
stc
mov
jecxz
add
lods
push
or
fcomip
and
xlat
xchg
leave
push
loop
rorl
shlb
dec
cltd
jnp
jbe
and
xor
sub
inc
jo
cmpsb
stos
stc
sbb
inc
mov
jmp
add
jle
lahf
or
aam
push
rcrl
ret
std
mov
cmp
sarb
pop
push
sbbl
insl
sub
data16
mov
jae,pn
pop
aam
add
popf
sbb
pop
shrl
fdivrl
rorl
clc
mov
ret
test
ret
das
jae
push
cmp
out
test
lcall
mov
movsb
retw
or
xchg
jmp
mov
outsl
fwait
rol
cld
test
xchg
jl
loope
adc
into
fs
std
jl
lds
push
adc
cmc
xchg
fidivl
xchg
mov
jns
call
push
pop
cmp
jg
stc
insb
fimuls
popf
scas
add
sbb
std
cltd
in
mov
es
or
dec
or
aas
sbb
xor
fcmovnb
into
pushf
sub
and
test
aas
xchg
stos
or
mov
sti
ficompl
sbb
dec
jo
sub
inc
dec
mov
cmc
mov
mov
das
pop
pop
lret
mov
ret
mov
fidivs
inc
scas
push
dec
pushf
das
push
xorl
fadd
xor
and
inc
jmp
mov
sub
test
and
mov
insl
frstor
jae
push
cmp
adc
dec
sti
dec
idiv
sub
adc
addb
or
mov
sbb
xchg
enter
ja
push
cmp
cmpsb
sub
pop
loop
xor
divl
mov
push
dec
retw
insl
inc
imull
jg
imul
in
cmp
sbb
clc
lods
push
out
ret
xor
inc
imul
xchg
fwait
cmp
fs
bound
xchg
mov
sub
inc
hlt
mov
imul
mulb
adc
mov
dec
jl
mov
ja
adc
mov
push
jg
push
bound
push
lods
jge
in
pop
jno
mov
testl
out
mov
ficoml
lcall
xor
lock
idivl
and
sar
outsb
clc
mov
sub
jecxz
or
mov
xchg
mov
movsl
sub
jl
and
lods
jb
add
pusha
js
daa
jecxz
mov
dec
lock
aas
or
sub
movsl
xchg
out
sub
mov
dec
test
fwait
rorl
rcrb
mov
sbb
jno
rorb
sahf
mov
cmpsb
mov
jnp
aam
mov
push
xor
xor
xor
rcl
pop
sub
mov
aam
mov
or
push
sub
push
out
scas
sti
xor
cmp
cld
add
and
inc
or
addr16
lret
mov
imul
adc
in
jne
push
repz
and
stos
mov
pop
mov
daa
addr16
fcomip
and
lret
xor
push
pop
jne
xor
sub
add
mov
mov
out
mov
cld
movsb
fbstp
sub
push
xor
mov
pushl
xchg
pop
inc
fisttps
into
lods
icebp
rcll
test
rol
mov
mov
and
xchg
stos
aaa
popf
shlb
fnstenv
jecxz
dec
shl
inc
daa
loope
test
pop
and
lea
sub
in
aas
jno
inc
xchg
ror
inc
and
movb
les
fidivrl
popf
das
mov
lahf
mov
jne
imul
out
les
inc
into
ret
fnstcw
or
jmp
mov
div
sub
mov
cmp
or
sub
lahf
sarb
add
xor
int
js
test
ds
mov
mov
inc
out
incl
mov
push
lods
mov
jns
dec
cmp
adc
push
xchg
pop
pop
mov
js
jbe
ret
jb
inc
lahf
jne
jmp
popl
fnstsw
cmp
pop
ret
ljmp
cmp
mov
mov
mov
outsb
rorb
dec
add
leave
mov
popf
pop
mov
fnstcw
sub
xor
mulb
rorb
xchg
push
in
cmc
mov
push
test
inc
or
int3
xchg
out
cmp
push
dec
lret
jl,pt
jg
fisubrs
inc
or
jno
repnz
arpl
roll
in
fwait
mov
add
out
xchg
addr16
stos
jno
sbb
arpl
fiaddl
dec
dec
mov
popa
add
leave
push
add
test
int3
fsubp
mov
adc
outsl
inc
cmp
loope
lret
mov
inc
push
test
mov
push
jne
mov
xchg
xor
sbb
mov
int
fsubrp
movsb
stos
jb
mov
test
fnstenv
inc
in
push
shrb
popa
push
add
rolb
cmp
xor
push
dec
ss
addr16
ds
jnp
push
cld
jg
test
lock
xor
adc
dec
xchg
outsb
xor
xchg
je
pusha
stc
or
lahf
loop
jbe
sub
scas
bsr
push
sbb
xchg
loope
flds
lods
push
jg
sub
cwtl
xchg
sub
or
cmpsb
xchg
ds
iret
add
xchg
popf
pop
ret
std
out
sbb
cmpsl
pusha
mov
dec
in
mov
insb
pop
int
ficoml
mov
mov
mov
repz
daa
push
xor
jge
ds
xchg
dec
into
loop
mov
xchg
pop
jge
std
arpl
cmp
mov
xchg
pop
lcall
shl
adc
sub
ret
jae
mov
push
jmp
fbld
adc
push
xchg
and
pop
push
repz
mov
iret
jo
and
add
cmpsb
in
out
xor
sbb
ljmp
fsub
jecxz
add
fsts
mov
inc
and
pop
adc
daa
mov
pushf
es
out
mov
inc
in
int
xchg
dec
or
sub
mov
outsb
test
arpl
pop
enter
std
test
push
lret
mov
mov
or
arpl
int
test
dec
push
fldl
lods
pusha
mov
add
mov
jp
push
lcall
sub
or
push
ret
fcmovu
xlat
shll
cwtl
in
sbb
repnz
push
cmp
shlb
mov
or
sub
mov
jns
xchg
shrb
lds
fstps
cmpsb
pop
out
pop
nop
dec
pop
jecxz
push
ja
cli
ja
sbb
jg
jb
repnz
xchg
inc
xchg
sahf
out
frstor
jmp
sub
out
fadd
fistl
ss
xchg
push
mov
pop
ja
sbb
scas
inc
dec
mov
mov
shlb
inc
inc
shr
xor
pushl
loope
xchg
jmp
fwait
push
mov
jno
inc
inc
cwtl
nop
loope
cld
lods
pushf
jp
mov
pop
lds
jg
pop
sub
clc
ret
pop
pop
daa
idiv
mov
clc
into
enter
aam
loope
xor
jno
shlb
lea
inc
sti
rcrb
mov
xchg
leave
dec
push
dec
lcall
mov
out
mov
sub
mov
and
cmp
add
adc
aaa
mov
xchg
lret
nop
leave
cmp
push
dec
cli
bound
xchg
adc
das
adc
int3
cmp
mov
or
out
lock
cmp
sub
xchg
inc
fstl
les
int3
cmp
jge
sbb
mov
add
cwtl
dec
mov
jnp
je
rcrb
inc
dec
jno
dec
mov
loop
sbb
jg
shl
pop
mov
xchg
call
mulb
iret
push
ja
jge
aam
ret
cmpsl
iret
mov
adc
adc
loope
xchg
fcomip
jg
or
inc
cmpsl
and
cmpsb
out
xchg
sbb
loopne
mov
lret
insl
cmc
pushf
pop
xor
sub
add
inc
jae
push
xor
lcall
mov
inc
int3
sub
adc
insb
mov
pop
lds
add
and
ret
testb
mov
loope
pop
mov
lea
push
scas
cmp
dec
inc
mov
jp,pn
mov
mov
adc
pop
les
pop
insl
je
sbb
lahf
pop
mov
jne
out
outsl
pop
sub
pop
mov
pcmpgtw
xchg
mov
or
adc
aad
ror
loopne
inc
xchg
sbb
jmp
or
or
dec
pusha
lahf
xlat
mov
and
cmp
xchg
popf
mov
xor
mov
mov
jnp
mov
stc
pop
cmpsl
dec
pop
testb
pop
jbe
dec
inc
mov
cltd
xchg
inc
fstpl
pop
mov
sub
xlat
shrl
push
dec
push
mov
in
aaa
jae
jp
rcrb
scas
xchg
mov
mov
int3
dec
jnp
push
das
out
aas
scas
mov
mov
mov
dec
cmc
int3
movsl
sbb
xchg
jmp
aaa
mov
insl
jb
add
fstpt
sti
mov
push
push
jns
ret
adc
mov
mov
dec
add
xchg
xchg
push
or
imul
ljmp
into
pop
aad
ret
cmp
out
or
rolb
and
decl
aam
push
cmpsl
inc
scas
pop
jmp
cmp
push
sub
aad
rol
xor
push
mov
jno
push
pop
and
inc
stos
movsb
bound
arpl
cmp
aas
sub
es
fsubp
xor
scas
push
clc
jns
cmp
mov
rcr
daa
les
mov
in
xor
pushf
pop
out
test
ja
dec
incl
test
pop
das
sub
xor
loope
pop
iret
jecxz
aad
push
xlat
push
add
sub
int3
or
mov
xchg
lret
repz
push
push
xchg
scas
inc
ret
repz
cmp
jmp
and
jl
or
and
push
xchg
pop
push
rol
jp
pop
push
sbb
or
and
xor
pop
into
mov
jmp
mov
xchg
mov
xchg
mov
mov
adc
or
arpl
or
lcall
dec
sar
mul
mov
xor
push
ficoms
je
push
cli
mov
push
ret
mov
cmp
aaa
xchg
sub
lock
or
jnp
mov
xchg
pop
xchg
lods
or
outsb
xor
call
fsubrp
fiadds
lret
out
push
adc
scas
iret
mov
cmp
das
cmp
mov
orl
call
jmp
orl
dec
loopne
push
outsl
sub
cli
rorb
out
cltd
repnz
popf
jb
fimuls
mov
movsb
lcall
das
dec
mov
mov
clc
int
test
and
aas
nop
and
in
arpl
repnz
xlat
lea
test
mov
aas
loope
in
jp
repnz
xor
not
sub
lret
push
outsl
out
inc
xorl
jmp
arpl
aam
stc
inc
sbb
fildll
fdiv
clc
pop
mov
mov
pop
jbe
jno
mov
adc
js
add
sbb
aam
lods
or
xchg
movsl
push
rcrb
xchg
cwtl
mov
jae
dec
jecxz
push
cmpsb
lods
jne
cmp
out
jb
movsl
rcll
sub
pop
cmpsl
push
and
aam
shlb
xor
aam
dec
jmp
cmp
iret
es
cltd
ret
js
add
in
pop
mov
mov
filds
push
dec
into
out
lahf
add
jle
jmp
aam
shl
rcrl
aaa
int3
insl
mov
ja
arpl
dec
or
inc
dec
mov
jnp
jbe
or
roll
mov
lock
mov
loope
stos
cmc
scas
mov
dec
aaa
jno
int
jo
xor
mov
hlt
xchg
mov
mov
lock
mov
dec
dec
dec
in
repz
leave
dec
stos
adc
sti
orb
ret
and
orl
pop
repz
dec
movsl
aaa
or
jmp
jecxz
pop
dec
in
mov
aaa
popa
pusha
icebp
jecxz
pop
add
aas
add
sub
mov
imul
sbb
sub
jg
int
repz
or
cwtl
xlat
les
cli
loop
mov
ja
dec
adc
scas
mov
testl
stos
or
test
jp
inc
pop
sbb
sub
mov
sbb
xchg
mov
mov
repnz
loope
inc
xor
inc
lret
ja
sbb
adc
and
jecxz
popa
rolb
imul
xchg
sub
inc
roll
mov
std
loop
mov
out
lret
mov
mov
jmp
test
insb
xor
mov
enter
jne
sbb
arpl
fcoms
fsubrp
ljmp
dec
lcall
sub
add
imul
pop
aad
cmpsb
sub
ljmp
mov
push
dec
lahf
mov
lods
adc
sti
dec
cmc
out
add
repz
fidivl
std
mov
mov
push
adc
mov
sub
push
lock
dec
scas
xchg
xor
pop
repnz
inc
js
pop
jmp
xchg
ds
xchg
push
or
out
es
mov
pop
inc
dec
xchg
adc
push
inc
jmp
dec
out
sbb
lret
pop
leave
pop
bound
fsubr
adc
aas
andl
xchg
add
sbb
scas
jmp
mov
pop
or
push
in
loopne
xchg
dec
push
jb
lock
popf
icebp
push
push
fisttpl
cmp
fbld
stc
or
jge
mov
push
mov
ds
in
sub
dec
inc
aaa
xchg
pop
cs
lods
or
cmpsl
fsubrs
out
xor
cltd
fs
ret
enter
lahf
or
nop
add
pop
jb
or
mov
hlt
stos
and
gs
jmp
add
mov
imul
arpl
nop
arpl
in
pusha
cmc
cmp
push
sbb
lds
shlb
int3
push
int3
adc
xchg
ret
xor
xor
pop
push
sbb
or
sub
sub
fdivl
jle
push
lds
or
push
mov
mov
repz
in
ret
xor
fs
xor
mov
fsub
jmp
rcrl
subl
push
out
push
test
hlt
push
shll
push
addr16
mov
je
imul
push
jns
dec
sub
mov
mov
push
mov
stos
js
or
movsl
lcall
outsl
dec
and
mov
jne
movsl
mov
sbb
and
push
lds
pop
pop
inc
imul
sub
xchg
popf
loop
push
xor
ja
jmp
imul
xor
loopne
jp
pop
out
shlb
add
mov
adc
push
push
in
in
sbb
out
notb
mov
repz
ret
in
mov
iret
adc
push
lock
daa
push
popa
int3
push
pop
sbb
mov
cwtl
cmpsl
cmp
lret
jo
mov
pop
insb
fwait
outsl
repnz
test
xchg
iret
pusha
ja
cmp
cmp
sub
fs
fcomps
fsubl
mov
testl
sub
mov
and
xlat
bound
fucomi
xlat
jl
pop
sbb
mov
imul
or
call
jnp
xor
xor
mov
jnp
jecxz
cld
mov
xor
xchg
ljmp
insb
jbe
iret
test
jne
sbb
sbb
imul
add
mov
int3
insl
jl
sbb
in
mov
xor
daa
mov
sqrtps
shll
into
popf
int
enter
dec
arpl
js
rolb
loop
xchg
in
mov
lods
aaa
movsl
mov
xchg
ret
jno
test
mov
out
loop
and
fnstcw
icebp
xor
in
inc
mov
adc
lea
or
mov
sbb
mov
cmpb
popf
add
xchg
xor
push
cmc
add
lahf
jbe
or
lcall
rorl
lds
stos
mov
lcall
cwtl
mov
fwait
add
shrl
xchg
cltd
cwtl
out
cwtl
hlt
ffree
mov
dec
xchg
adc
movsl
fsts
std
mov
fnsave
cmpl
aam
pop
pop
push
adc
mov
adcb
je
insb
pop
xchg
fisubs
or
mov
mov
mov
sub
mov
inc
inc
mov
sub
mov
aam
push
mov
mov
out
dec
jecxz
adc
mov
adc
and
pushf
int
push
and
sbb
dec
pop
adc
inc
jno
fldcw
push
mov
push
testl
sub
fcmovbe
mov
and
xchg
jecxz
cmpsb
pop
popf
mov
jmp
iret
inc
add
mov
cmpsb
test
cli
sti
push
push
jle
pop
push
push
fld
pop
cltd
pop
orb
lcall
test
or
mov
out
inc
repz
xchg
push
outsb
aaa
or
fidivl
push
push
cltd
cs
inc
in
cmp
pop
ds
fcmovnu
mov
jl
incl
pusha
and
out
dec
pop
leave
jmp
nop
subb
scas
pop
add
cmpsl
loope
and
out
adc
dec
pop
pop
push
leave
das
jnp
push
xchg
dec
mov
in
mov
or
adc
and
ret
shlb
inc
add
outsl
outsl
cltd
pop
or
sti
pushf
nop
xchg
mov
cmc
jbe
cltd
pusha
imul
test
lret
inc
mov
mov
stos
in
ss
dec
adc
mov
insb
imul
push
mov
mov
int
add
in
insl
cmp
jae
out
adc
adc
inc
fwait
dec
inc
pop
lcall
mov
rorl
or
icebp
jbe
lds
popf
nop
mov
jg
jmp
mov
shll
mov
fistpl
lods
xor
xchg
pushf
push
mov
mov
xlat
bound
popa
arpl
push
cmp
mov
test
xchg
jmp
scas
fwait
add
movsl
push
xchg
pop
rcll
push
sub
fmulp
jae
lock
gs
int3
cmp
cmp
ja
pushf
cmp
out
ret
pop
add
insl
push
js
and
movsb
push
and
pop
ljmp
inc
adc
sub
cli
mov
mov
fildll
mov
xchg
mov
mov
pop
xor
lahf
dec
imul
ljmp
stc
dec
cwtl
movsb
add
dec
sti
cmc
cltd
or
add
stc
adc
jnp
mov
shlb
mov
dec
fsubrl
orl
mov
jge
inc
and
adc
js
cmp
push
or
lret
xor
sbb
or
leave
daa
mov
inc
movsb
sub
lret
adc
jecxz
mov
in
out
lret
jns
into
addb
jp
add
aaa
icebp
jg
orps
hlt
sub
inc
sub
push
hlt
xor
jns
aad
subb
insl
cmp
fsubp
dec
scas
sbb
insb
cwtl
mov
faddl
sbb
sub
jnp
sub
call
add
pop
in
add
jge
dec
pop
push
bound
es
hlt
stc
mov
sub
cli
mov
mov
sbb
sbb
ret
daa
mov
daa
sbbl
pop
xor
mov
pop
mov
rorl
in
aaa
push
js
xor
mov
push
pop
or
outsl
xchg
and
frstor
addr16
test
cmp
mov
movsb
gs
in
inc
jp
loop
and
shlb
inc
lods
rorb
pop
push
fstps
clc
les
mov
sbb
cli
push
ret
test
out
lahf
push
out
mov
cmp
sub
or
int3
xor
or
or
jl
pop
mov
or
loop
fsubrs
bound
cmp
rclb
pop
mov
aad
arpl
jge
rol
push
push
fsts
in
imul
xor
imul
in
aaa
faddl
in
or
inc
dec
movsb
mov
movsl
hlt
and
sbb
repnz
push
int3
imul
loope
enter
push
mov
mov
clc
mov
in
mov
lret
cld
addr16
cld
les
icebp
mov
out
cmpsl
push
cmp
sub
dec
mov
inc
dec
jmp
ds
push
adc
lods
xchg
adc
jnp
cwtl
scas
je
mov
and
mov
and
cli
sub
sbb
adc
stc
repz
outsl
jnp
loope
ret
mov
adcl
mov
push
ja
sbb
mov
xor
ret
jl
mov
fwait
adc
dec
pop
fbstp
fdivr
push
jo
jmp
jno
sarl
inc
xchg
inc
mov
out
adc
push
sarb
add
mov
pushf
dec
or
les
das
mov
mov
sub
pusha
repnz
gs
xorl
js
pop
xchg
call
sub
std
icebp
cmpsl
or
pop
jo
popf
sub
jge
in
in
loope
lods
mov
mov
out
sbb
or
push
aaa
rcrb
mov
add
outsl
test
rclb
out
scas
sub
xchg
addr16
push
mov
jno
mov
push
sub
shr
push
mov
mov
sbb
stos
adc
lret
pop
push
iret
fistps
jge
pop
jle
outsb
cwtl
and
pop
jg
std
jnp
fucomi
or
or
test
divb
and
daa
mov
mov
out
mov
scas
adc
mov
or
pop
adc
sbb
movsb
jbe
dec
pop
sub
cmp
inc
inc
and
mov
adc
xor
out
pop
lret
fwait
rcrb
mov
adc
push
inc
cwtl
xchg
aas
cwtl
push
lods
icebp
fidivrs
and
adc
adc
clc
jg
lcall
adc
stos
std
in
dec
sub
outsl
xor
jbe
sarl
mov
xlat
popa
loop
xchg
cmpsb
inc
cmp
stc
mov
inc
sub
scas
imul
imul
addr16
mov
imul
pop
pop
mov
sbb
pop
sub
ja
sbbb
mov
sbb
adc
fcomp
mov
add
addl
pop
clc
test
sub
sbb
inc
and
call
in
dec
dec
popa
ss
lods
loopne
jae
pop
xor
push
cmpb
test
mov
lods
push
pop
lcall
pushf
push
sbb
imul
fbstp
mov
shlb
lods
enter
inc
aaa
cld
popf
inc
fstl
push
dec
and
lahf
jbe
test
outsb
push
jb
rcrb
in
addr16
and
hlt
add
scas
imul
imul
outsl
scas
adc
lods
mov
cli
mov
dec
pop
fdivrl
int
sub
mov
push
mov
mov
jb
pop
xchg
cld
int
push
add
mov
add
stc
mov
push
jb
test
es
addr16
mov
pop
mov
or
fistpl
lea
sbb
inc
aaa
mov
pusha
jae
fsubrp
cmpsb
inc
popf
sub
ss
in
push
int
inc
shrl
int
xchg
cmp
nop
ja
pop
nop
fwait
xchg
sbb
push
jle
jp
out
or
shll
pop
mov
mov
push
inc
xor
sbb
inc
decl
mov
arpl
mov
adc
xchg
cli
xchg
ljmp
aas
dec
cs
pop
xor
test
xchg
fistl
rolb
lods
jo
shlb
mov
test
mov
loope
in
cmp
aad
and
lea
adcb
push
pop
out
adc
int
fimull
in
jno
mov
out
or
sbb
cmp
xor
dec
push
stos
out
ss
mov
sbb
out
sub
xlat
enter
and
dec
mov
pop
insb
pop
pop
xor
sub
pop
out
out
add
inc
addb
adc
mov
movsb
xor
in
bound
rclb
popf
shr
sbbl
mov
dec
sbb
rcrl
mov
stc
or
mov
inc
adc
mov
imul
sbb
mov
push
cmpsl
dec
mov
sahf
aaa
jnp
dec
pop
pusha
mov
or
hlt
push
inc
push
call
jbe
es
mov
negb
cltd
xor
xor
pop
pop
cwtl
xchg
call
fs
push
fcmove
loope
aad
jo
insl
cld
dec
jecxz
push
enter
cmp
cwtl
stc
movsb
das
push
aad
xor
cli
pop
add
inc
sub
mov
fstpl
jecxz
jmp
sarb
jecxz
fldenv
insb
pop
mov
out
pop
shll
lods
xor
inc
jl
xor
fstl
cs
gs
sbb
mulb
jbe
leave
xor
pop
jg
push
push
inc
add
and
mov
mov
and
aaa
repz
lcall
jle
mov
ljmp
sub
outsl
mov
sub
mov
inc
and
sbb
jnp
mov
or
data16
mov
insl
loope
sbb
rcrb
leave
cmc
pop
push
mov
stos
cs
cmp
dec
xor
sub
lret
mov
leave
sub
lods
xchg
ja
js
jns
insb
xor
aad
rcrb
aad
jae
xchg
mov
fdivrl
mov
mov
aam
data16
xor
iret
inc
sbb
xchg
dec
lcall
out
je
xchg
fcmovb
repz
adc
in
mov
add
scas
xchg
and
aaa
scas
mov
mov
repz
sub
adc
dec
bound
dec
inc
cs
aas
sbb
out
inc
into
xchg
inc
cmp
ret
in
xchg
sub
in
ret
xchg
xchg
mov
leave
mov
push
add
inc
mov
imulb
inc
or
sbb
call
xor
sbb
iret
movsl
or
pop
jb
pop
xor
sub
push
addr16
dec
popa
jmp
cmp
leave
jecxz
std
sbb
cmp
mov
rcrb
or
jge
mov
dec
push
stc
hlt
or
in
out
sub
movsl
xchg
inc
adc
or
cmp
mov
sub
or
fdivr
sbb
xchg
sub
mov
sbb
imul
insb
andb
mov
cmp
dec
stos
cltd
push
mov
xchg
adc
or
stc
shr
les
std
jecxz
cmpsl
mov
aas
inc
lcall
dec
mov
mov
xchg
lock
enter
and
icebp
cmpsb
push
mov
scas
int3
test
js
scas
stos
sbb
jns
imul
add
sbb
mov
mov
mov
inc
add
mov
jge
fs
rclb
xor
inc
and
into
pop
addr16
cmp
mov
rol
test
xor
mov
dec
inc
pop
jae
test
das
hlt
outsb
pop
mov
or
shrb
pop
int3
or
push
jle
inc
aas
lret
mov
das
out
faddl
push
xchg
mov
stc
repnz
xchg
cltd
aaa
add
jmp
xchg
cltd
in
in
mov
push
mov
aas
lock
inc
or
mov
push
xlat
int3
in
sbb
mov
mov
repnz
fistpll
sbb
icebp
jge
call
loopne
xchg
jo
push
ds
jb
jl
push
insl
test
mov
stos
ret
pop
call
lcall
leave
inc
test
call
arpl
mov
dec
push
call
jne
sub
int
jecxz
fidivs
dec
jae
popa
cld
xor
cld
rolb
movb
ret
mov
or
cmp
shrb
adc
les
cmp
add
or
sbb
call
call
push
sub
call
add
push
add
idivb
das
mov
out
dec
mov
popf
in
out
sbb
push
lahf
std
popf
adc
shll
mov
xchg
jmp
adc
cmc
mov
subl
aad
mul
outsb
hlt
lock
lret
popf
push
xchg
cmp
sbb
pushf
int
test
loope
mov
repz
dec
mov
int
pop
les
mov
cmp
mov
mov
xchg
jmp
add
mov
adc
push
fwait
iret
repz
add
add
inc
int3
fisttps
sbb
fwait
lcall
data16
and
outsb
lret
mov
cmp
outsb
jne
test
mov
adc
mov
lcall
pop
rcrb
imul
or
cmp
jne
pop
frstor
or
hlt
jb
ja
and
ljmp
dec
imul
sub
mov
jecxz
sub
ret
ficoms
stc
xor
iret
lret
add
sub
lock
data16
lock
and
push
jbe
arpl
push
push
jae
sub
cmp
push
sbb
fisttps
inc
outsb
adc
xchg
jae
fdivrl
das
mov
and
adc
scas
xchg
jne
jnp
lcall
push
rolb
out
scas
andb
inc
imul
int
adc
xor
xor
outsl
mov
xchg
xor
dec
jecxz
push
jb
imul
fcmovu
leave
pushf
mov
jne
into
fbld
int
sub
icebp
fmulp
xor
sub
sub
scas
sahf
adc
xor
xlat
popa
aaa
jle
out
add
stos
mov
push
dec
xchg
fst
loope
xor
jmp
call
fisttps
gs
mov
inc
dec
xor
mov
add
jle
sbb
mov
push
insb
insl
cli
cs
mov
sbb
fidivrl
jo
lods
mov
arpl
xor
sahf
add
push
loopne
and
pop
jp
add
sub
hlt
ret
jg
lods
sbb
push
mov
dec
sub
jmp
jmp
add
orl
mov
loop
ss
fnstcw
add
xlat
insl
arpl
jp
fiaddl
stc
mov
adc
pop
xlat
pop
mov
scas
ss
xlat
dec
pusha
push
sbb
adc
xchg
pop
test
sbb
fcoms
cltd
loopne
in
push
adc
dec
pop
xor
aas
fldcw
lds
sub
aas
movsb
insl
push
push
cmp
aaa
lods
cmp
fisubrl
sarl
fs
out
ja
aam
bndldx
add
add
jns
in
dec
push
mov
cltd
xchg
dec
pop
mov
mov
int
pop
addr16
sbb
shr
dec
or
mov
cmp
push
roll
mov
inc
lods
add
arpl
nop
xchg
imul
cwtl
jl
ja
xor
shrl
xchg
into
int3
jl
aam
xor
jg
pop
mov
push
movsl
push
inc
ja
cmpsl
icebp
adc
sahf
jecxz
popa
neg
cmp
xchg
push
cmc
fldl
pushf
mov
addl
sub
dec
xor
aam
imul
mov
imul
into
std
push
lds
lods
xor
jge
cltd
jmp
and
adc
push
sub
imul
testb
pop
fstps
mov
ljmp
sbb
sbb
mov
out
adc
pop
call
mov
cs
jb
in
or
idivl
mov
daa
or
fs
insb
inc
rcr
ret
jbe
aaa
jl
cmpsl
push
mov
push
jecxz
jle
out
out
lock
mov
push
sub
mov
lea
popf
dec
inc
pop
xchg
jg
test
sub
jae
out
imul
sub
bound
xor
jo
adc
flds
push
push
xchg
aad
jns
jge
fs
sahf
cwtl
mov
inc
jmp
mov
inc
jp
fdivrl
mov
inc
fisubrs
mov
xor
pop
dec
mov
and
bound
cmpsb
xor
mov
ss
inc
ret
sbb
pop
dec
xor
popa
or
push
insb
ljmp
adc
adc
jmp
cs
ja
out
xor
inc
iret
xchg
jb
or
fsubrl
mov
mov
ss
hlt
or
fisttps
outsb
int3
mov
decl
ss
cmp
xor
push
sbb
jmp
and
and
cmp
inc
adc
subl
jns
inc
jnp
in
push
fsubrl
cmp
lcall
scas
add
aad
inc
add
dec
ret
ss
cmp
xchg
xor
loope
in
shlb
fisubl
fdiv
xchg
cmp
rolb
das
lock
fbld
lret
out
loop
ljmp
dec
cmpsl
sub
mov
xchg
cwtl
adc
jns
lahf
test
lret
aaa
clc
scas
jne
pop
je
sbb
cmp
lret
xor
push
popf
pop
and
out
xorb
lods
es
sbb
stc
loope
cmp
lock
fwait
add
hlt
sbb
adc
iret
inc
sar
imul
pop
ljmp
mov
sub
pop
fcoms
cmp
add
and
ret
stos
cwtl
or
mov
pop
int
jb
add
and
cmp
mov
dec
xor
and
push
sub
or
or
adc
loopne
mov
cld
cmp
adc
call
lods
or
adc
push
mov
adc
lret
lcall
push
push
pop
inc
mov
loopne
fdivp
lods
inc
addr16
decb
cld
add
pop
out
mulb
js
mov
and
add
or
subb
fildll
or
les
or
fdivr
out
aad
daa
cs
add
int3
scas
loop
lahf
pushw
xchg
push
icebp
push
pop
adc
arpl
add
cmpsl
icebp
aad
out
repnz
mov
adc
into
jne
bound
sbb
repz
mov
clc
cmp
sbbl
push
and
stos
insl
repz
mov
sbb
cwtl
test
cld
lock
cld
or
out
adc
sti
int3
mov
movsl
idivl
aam
sbb
das
int3
scas
icebp
pop
cmp
cs
lret
pop
pusha
add
mov
rcll
jl
jmp
push
sahf
out
sarb
xor
cltd
sti
mov
scas
jnp
or
jne
pop
sbb
jg
mov
iret
sub
and
pop
fcoms
movsb
insb
sub
mov
jg
outsb
bound
mov
das
mov
push
xor
push
in
add
and
and
ret
mov
mov
bound
xor
xchg
jl
mov
and
ljmp
ret
xchg
mov
stos
add
xchg
std
mov
cltd
fsubrs
lods
pop
mov
push
in
lret
fisubrs
mov
xchg
stc
rol
adc
xchg
xchg
aad
cmp
aas
stc
adc
hlt
xor
jo
and
and
mov
xchg
mov
fdivl
int
cmp
in
clc
push
add
or
syscall
push
mov
dec
jns
imul
sub
xchg
adc
push
aas
adc
sbb
fs
or
arpl
stos
sub
adc
pop
icebp
cmp
arpl
pop
scas
addr16
int
mov
pop
outsb
daa
sub
push
test
xor
push
jmp
subl
popf
outsl
sbb
mov
mov
aad
mov
cltd
jns
lods
rorb
jle
insl
mov
imul
push
pop
sarb
sub
dec
mov
mov
movsl
jbe
pop
xchg
xor
adc
mov
pop
cli
sub
lods
inc
cmp
sbb
dec
in
out
mov
das
mull
jl
or
and
cmp
pop
lods
adc
js
icebp
push
mov
outsb
inc
pop
jecxz
jge
sar
jbe
mov
inc
inc
js
add
add
inc
adc
dec
inc
ljmp
mov
andl
push
pop
dec
jmp
adc
inc
pushf
int
jge
enter
jns
nop
adc
xchg
pop
lret
push
lock
hlt
nop
push
movsl
rorb
cld
push
sbb
jg
mov
mov
pop
mov
dec
or
pop
mov
push
adc
loope
mov
adc
stos
xchg
out
sbb
push
lcall
not
pop
mov
mov
mov
loopne
push
xchg
push
dec
daa
or
push
ret
cmp
push
mov
sub
fmuls
clc
xchg
mov
push
lods
mov
lock
enter
pusha
es
push
and
out
loop
xchg
sbb
push
jp
mov
iret
pop
rcl
call
shrd
test
mov
fwait
popf
dec
or
ret
dec
dec
pop
pop
sub
lods
jbe
cmpsl
rol
inc
mov
out
arpl
xor
stos
xchg
or
push
push
icebp
negb
sub
mov
fsts
divb
xor
out
popf
xor
mov
cmp
and
in
mov
popa
in
sub
jae
xchg
xchg
shl
xchg
repz
or
rcl
xorl
sbb
or
test
loop
mov
ds
mov
pop
loop
out
push
in
dec
pop
xor
in
mov
subps
fwait
dec
rol
jle
test
in
std
sahf
mov
lds
pop
ret
xchg
in
xchg
lods
add
sarb
lcallw
add
add
inc
testb
pop
stos
add
or
data16
pop
adc
stc
push
lds
scas
lcall
cwtl
or
xchg
and
popa
leave
jbe
std
jnp
mov
jge
cltd
push
mov
outsl
xadd
jo
mov
xlat
pop
xchg
iret
popa
and
clc
movsb
xor
sbb
jb
mov
fdivl
jnp
xor
cli
dec
int
mov
mov
adc
cli
xchg
mov
xchg
jmp
je
fildl
sub
sti
inc
sub
aam
out
cmp
test
jb
ret
xor
out
xchg
sahf
xchg
cmp
or
mov
pusha
loope
push
fnstcw
or
decb
xchg
cli
lds
pop
orb
push
inc
sub
push
jmp
sub
cmp
imul
and
sbb
mov
hlt
cli
and
lea
outsb
gs
and
mov
cld
xchg
repz
lods
mov
cli
push
push
test
fdivrs
sbb
ja
aad
push
mov
jle
cltd
mov
push
mov
jne
insl
xchg
mov
jae
mov
leave
test
aad
jp
cltd
rorl
sbb
lret
loope
daa
shll
lahf
iret
fwait
pop
pop
in
frstor
cmpsl
popa
lea
mov
popa
test
inc
sbb
push
pop
push
sbb
aad
fmuls
mov
jae
sbb
in
push
adc
fnstsw
popf
loope
adc
dec
pop
ret
out
mov
push
mov
pop
or
mov
push
loope
in
pop
lret
pushf
adc
xor
int
sub
pop
ret
dec
pop
popf
lods
stos
push
dec
mov
cs
dec
lahf
aad
mov
pop
sub
or
push
lea
mov
aam
mov
into
add
mov
fimull
add
xor
xor
shrl
jecxz
clc
sbb
lods
inc
jo
mov
sbb
jb
ljmp
sbb
insb
das
rcl
int
xchg
sti
in
jp
cmpl
shr
push
shll
pop
sbb
or
lahf
cmc
adc
inc
push
imul
cmc
dec
and
sbb
ss
lret
pop
cmp
xchg
enter
xor
adc
fldcw
seta
scas
jle
xor
dec
xor
frstor
loopne
pop
call
cmp
jl
add
ds
mov
lcall
movsb
lods
or
ucomiss
sub
lret
inc
mov
pop
and
sub
cmp
add
inc
out
jg
jbe
push
adc
sahf
fdiv
ficompl
orl
mov
scas
jb
scas
mov
add
cmp
mov
and
cmc
insl
jb
jl
jo
adc
test
push
sbb
lods
loopne
xor
addb
je
sahf
sub
daa
pusha
mov
sub
test
shlb
test
jg
cmp
cmpsb
in
dec
xchg
rolb
xchg
mov
or
arpl
ja
push
cmpl
gs
inc
add
mov
stos
int3
xchg
repnz
jl
sbb
aas
cwtl
push
sub
ret
adc
fildll
and
shll
jmp
jl
mov
stos
add
enter
or
push
push
pop
int
or
xor
arpl
nop
or
popl
push
jno
scas
out
mov
or
repnz
mov
movsb
and
loope
mov
dec
in
clc
hlt
nop
enter
sub
mov
fcomps
ss
jle
add
mov
aas
popf
lods
cmp
adc
cmc
fdivrl
adc
mov
outsl
dec
pushf
fistl
mov
sub
cmp
jecxz
inc
ret
aas
aad
rorl
mov
test
lods
or
jnp
sbb
mulb
out
mov
mov
xor
fiadds
xorl
dec
or
cmp
leave
mov
pop
xor
lret
int3
inc
movsb
insl
das
test
mov
xor
test
mov
sti
mov
sbbb
cs
mov
cmp
mov
repnz
aas
repnz
movsb
xchg
xor
pop
imul
repnz
inc
mov
fcomi
or
popf
sahf
fcoml
pushf
xchg
and
mull
mov
cltd
push
test
pushf
stos
sar
adc
xchg
hlt
push
das
inc
jmp
ja
fnstsw
pushf
leave
mov
xchg
xor
adc
in
push
lea
nop
mov
repz
aaa
or
cli
mov
rorb
mov
rcrb
icebp
inc
cmp
mov
pop
and
jg
or
xchg
cmp
insl
xchg
fiaddl
fisttps
xor
clc
cli
push
movb
mov
lods
cmp
shrl
mov
in
add
fnstsw
popa
pop
jnp
fcompl
cmpsb
cltd
movsb
popa
mov
loope
cwtl
add
cs
and
jmp
or
stos
sbbb
into
mov
outsb
in
movsl
fcmovb
addr16
lret
out
lock
sub
dec
mov
jno
adc
jnp
push
xor
ret
fmuls
inc
mov
jge
inc
sbb
jle
out
out
fbstp
stos
xor
mov
sub
push
ljmp
mov
leave
aad
jns
ja
mov
push
mov
in
mov
ja
pop
negl
je
inc
loop
sub
imul
xor
push
mov
std
notl
mov
aaa
ds
fisubrs
sub
mov
mov
dec
es
pushf
cmp
and
inc
ffreep
or
inc
stos
push
pop
inc
icebp
cmp
and
mov
or
shl
dec
cmp
ss
inc
add
scas
mov
rclb
cli
aaa
les
xchg
inc
loope
adc
xchg
sub
push
clc
pop
sahf
jo
cmc
in
sub
testb
mov
and
add
ds
mov
dec
mov
je
push
jp
jp
inc
call
push
or
out
fistl
cmp
push
xorb
ror
addl
enter
sub
ret
pop
jp
xchg
repz
cmc
and
int3
fmuls
jae
pop
pop
sahf
xor
pslld
pop
sub
sub
jl
gs
cmp
pushf
ret
xor
fsub
ret
ljmp
scas
push
cmc
cmc
out
popf
sbb
sbb
and
pop
pop
std
addb
decl
out
mov
add
sbb
mov
test
popa
push
ljmp
and
jp
and
push
pop
or
dec
cmp
inc
cmpsb
inc
lret
imull
ja
pop
repnz
pop
fnstsw
mov
ret
xchg
loopne
jp
push
cld
aas
push
mov
jl
add
ret
cmpsb
hlt
push
cmp
loop
mov
jae
in
cli
mov
jne
fistpll
xor
dec
ficoms
inc
sbb
and
insb
push
pop
mov
mov
push
jbe
mov
imul
jne
push
jns
inc
loop
lret
in
cmp
cmc
jmp
adc
bound
adc
popf
push
xor
popf
mov
dec
inc
and
aas
test
lds
push
xchg
fstpt
test
xor
ret
ret
mov
mov
insb
fistpll
and
ja
jle
adc
cmp
jns
cmpsb
jnp
or
je
xchg
into
cltd
jno
mov
pop
into
xchg
cmp
hlt
mov
jle
leave
sub
pop
sub
add
lock
pop
imul
pop
or
mov
popa
loopne
loope
inc
movsl
lods
pop
roll
push
mov
leave
dec
pop
xor
loop
xor
aam
loopne
mov
xchg
in
mov
out
js
jmp
dec
mov
pop
push
in
aaa
loop
jno
mov
xor
and
ds
mov
sti
imul
rcr
ds
sbb
sahf
cltd
or
rclb
xor
cmp
rorb
out
mov
ljmp
nop
lds
rcl
enter
idivl
adc
pop
lods
mov
jnp
stc
cmp
imul
jp
push
fidivrl
adcl
xchg
mov
inc
ljmp
push
cld
or
sti
add
mov
ss
pop
stos
mov
sbb
inc
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
dec
add
add
mov
add
add
or
orb
add
add
in
or
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
inc
fmull
add
add
in
add
add
add
add
add
add
add
fadds
add
je
or
xor
add
in
add
add
add
add
add
add
add
add
add
test
or
xor
add
in
add
add
add
add
add
add
add
sub
add
or
xor
add
in
add
add
add
add
add
add
add
push
add
add
loope
add
add
in
add
add
add
add
add
add
add
js
add
inc
loop
add
add
in
add
add
add
add
add
add
add
mov
jecxz
add
add
in
add
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
jl
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
scas
add
add
or
rolb
add
in
add
add
add
pop
add
inc
add
dec
add
push
add
add
add
add
add
add
add
out
add
xor
or
rolb
add
in
add
add
add
push
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
add
or
rolb
add
in
add
add
add
or
inc
add
dec
add
dec
add
push
add
add
add
add
add
add
add
push
add
add
in
or
rolb
add
in
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
icebp
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
repnz
add
or
rolb
add
in
add
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
dec
add
add
mov
add
add
or
orb
add
add
in
or
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
inc
fmull
add
add
in
add
add
add
add
add
add
add
fadds
add
je
or
xor
add
in
add
add
add
add
add
add
add
add
add
test
or
xor
add
in
add
add
add
add
add
add
add
sub
add
or
xor
add
in
add
add
add
add
add
add
add
push
add
add
loope
add
add
in
add
add
add
add
add
add
add
js
add
inc
loop
add
add
in
add
add
add
add
add
add
add
mov
jecxz
add
add
in
add
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
jl
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
scas
add
add
or
rolb
add
in
add
add
add
pop
add
inc
add
dec
add
push
add
add
add
add
add
add
add
out
add
xor
or
rolb
add
in
add
add
add
push
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
add
or
rolb
add
in
add
add
add
or
inc
add
dec
add
dec
add
push
add
add
add
add
add
add
add
push
add
add
in
or
rolb
add
in
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
icebp
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
repnz
add
or
rolb
add
in
add
add
add
add
add
inc
add
add
add
add
add
add
add
es
add
cmc
or
rolb
add
in
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
add
push
testb
call
add
add
add
add
add
add
add
test
add
rolb
addb
add
clc
add
addb
add
add
add
add
add
add
add
add
add
add
add
rolb
jl,pt
add
add
add
add
add
add
add
add
add
add
call
jge
add
add
in
add
add
add
add
add
add
add
adc
adc
call
add
add
add
add
add
add
add
cmp
adc
test
add
in
add
add
add
add
add
pusha
add
add
dec
add
push
add
dec
add
dec
add
push
add
add
add
add
add
add
add
nop
add
or
push
add
add
add
add
add
add
pop
add
sldt
push
sldt
nop
push
add
mov
sldt
loopne
add
or
add
xor
add
pop
pop
add
addb
xor
add
test
add
rolb
add
clc
pop
add
and
add
dec
or
xor
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
add
add
add
add
add
add
addb
add
or
xor
add
in
add
add
add
add
add
add
add
test
add
insb
or
add
in
add
add
add
add
add
add
add
rolb
add
fcoml
or
cld
add
add
add
add
add
add
add
add
add
clc
push
add
fcoms
add
add
add
add
add
add
add
add
and
add
mov
or
adc
add
in
add
add
add
add
add
add
add
dec
pop
add
mov
add
add
add
add
add
add
add
add
add
jo
add
fcompl
or
or
add
in
add
add
add
add
add
add
add
cwtl
pop
add
in
or
in
add
add
add
add
add
add
add
add
add
rolb
add
and
add
add
in
add
add
add
add
add
add
add
call
and
add
in
add
add
add
add
add
add
add
adc
add
mov
or
push
add
add
add
add
add
add
add
add
add
cmp
add
fsubrl
or
in
add
add
add
add
add
add
add
add
add
pusha
or
add
sub
add
add
add
add
add
add
add
add
add
add
mov
add
clc
sub
add
add
in
add
add
add
add
add
add
add
mov
add
and
or
addb
add
add
add
add
add
add
add
add
fmuls
add
movsb
xor
add
add
add
add
add
add
add
add
add
add
inc
or
sbb
add
add
add
add
add
add
add
add
sub
add
pop
cmp
add
add
in
add
add
add
add
add
add
add
push
or
add
cmp
add
add
add
add
add
add
add
add
add
add
js
add
mov
or
or
add
in
add
add
add
add
add
add
add
mov
or
rolb
add
in
add
add
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
add
add
lock
add
inc
or
les
add
in
add
add
add
add
add
and
add
push
or
andb
add
add
dec
add
add
add
add
add
add
add
inc
or
add
dec
or
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
add
jl
add
in
dec
or
pusha
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
cld
or
cmp
add
and
add
dec
or
cmp
add
je
add
pushf
or
cmp
add
les
add
add
add
add
add
add
add
add
add
in
or
add
add
add
in
add
add
add
add
add
add
add
adc
add
pusha
dec
or
adc
add
in
add
add
add
add
add
add
add
cmp
add
je
or
adc
add
in
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
pushf
dec
or
adc
add
in
add
add
add
add
add
add
add
mov
add
mov
or
adc
add
in
add
add
add
add
add
add
add
fmull
add
les
add
add
in
add
add
add
add
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
cs
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
mov
add
adc
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
mov
add
mov
add
mov
add
mov
add
add
add
xor
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
hlt
shlb
jne
ret
and
fcomip
push
je
mov
or
dec
movsl
push
out
push
repz
rolb
repz
or
dec
jbe
push
sbb
push
mov
sbb
and
inc
aas
add
mov
lea
cmp
into
push
cli
xor
fldenv
insl
iret
fldcw
pop
movsl
in
sub
fists
xor
pop
xchg
je
or
mov
lret
out
daa
test
pop
pop
loop
push
jle
inc
xor
dec
dec
movsb
arpl
test
jmp
lea
sarb
mov
dec
mov
movsb
out
gs
dec
sub
in
pop
and
and
in
xlat
movsl
pop
lods
cwtl
add
outsb
jnp
outsl
movsl
mov
mov
aad
xor
push
xchg
sbb
jp
cmp
call
not
aad
cmp
inc
mov
shll
add
inc
mov
movsb
xlat
and
cmpsl
xlat
mov
rcrb
notb
filds
add
jae
sbb
cmp
ss
add
pop
push
jae
je
daa
inc
xchg
enter
sub
bound
out
mov
fisubrl
pushf
sbb
in
xlat
mov
fwait
xor
jge
lods
push
cmc
loopne
ljmpw
mov
fcmovbe
outsb
cs
sbbb
insb
gs
cwtl
mov
hlt
dec
icebp
xor
scas
cmc
push
call
ja
push
xchg
xchg
push
and
and
sti
roll
stos
fwait
inc
mov
jae
push
mov
bound
lock
shll
xchg
mov
sub
jg
push
in
test
lods
or
pop
inc
fisubl
sarl
ja
ficoms
push
shlb
rorl
shl
call
jne
inc
ret
icebp
mov
out
ret
mov
popa
inc
mov
aaa
imul
lahf
xor
adc
push
stos
adc
sahf
outsb
imul
sti
imul
adc
push
icebp
out
sbb
lret
jp
aam
les
push
mov
outsl
mov
jecxz
imul
enter
pop
jb
or
nop
pop
mov
mov
inc
int
push
xchg
testb
or
sbb
adcb
stos
aad
addr16
gs
vpacksswb
lcall
movsl
mov
inc
mov
or
imul
lcall
push
movsl
pop
fmuls
cmp
xor
pop
les
jb
fsubl
fwait
and
sub
daa
aam
das
js
hlt
popa
inc
mov
repz
jb
mov
lock
xchg
push
adc
dec
jge,pt
mov
push
mov
inc
jge
jge
and
insb
mov
dec
xlat
cs
jb
xchg
nop
lret
mov
lcall
lcall
pop
add
push
lea
mov
insb
cwtl
je
push
daa
pop
fsub
xchg
push
xor
mov
push
adcb
xchg
xchg
sub
sbb
push
mov
mov
das
or
push
jge
jg
pop
es
es
sti
cmp
sbb
aas
mov
or
test
mov
lea
repz
xchg
add
and
mov
ss
out
fdivl
test
pop
jle
and
or
divb
lcall
jmp
outsb
jl
mov
int3
arpl
dec
adc
inc
xor
add
add
adcb
push
add
icebp
ljmp
pop
jb
ret
lods
lock
or
jecxz
dec
arpl
rcrb
fwait
or
es
pop
xchg
into
xor
jo
lock
add
sub
jnp
add
dec
test
sbb
stc
jg
lock
pop
sub
sub
adc
clc
pop
xchg
and
jle
js
addl
pop
adc
mov
lret
fidivs
iret
imul
out
fstl
cltd
out
push
dec
xchg
sbbl
stos
inc
and
call
stc
pop
jge
in
decl
pop
pop
incl
push
ss
shrb
dec
cld
jge
test
push
mov
mov
or
cmp
cs
mov
jecxz
inc
out
xor
push
pop
jg
push
sub
xchg
and
push
jne
call
dec
imul
inc
cmp
insb
ficoms
mov
addr16
and
out
adc
xchg
es
cmc
into
push
hlt
imul
push
stos
fwait
mov
into
loop
sbb
or
testb
not
or
push
fcmovnbe
or
mov
and
outsl
xchg
ds
leave
dec
repz
mov
sub
shl
divb
sub
mov
mov
mov
divb
mov
into
adcl
jnp
cltd
cld
ficompl
or
std
imul
data16
jo
dec
push
loop
add
jge
insb
sarb
mov
stc
adc
cmp
cmp
or
and
andb
jne
add
test
or
stos
push
cli
mov
push
lahf
insb
loop
and
jbe
push
pop
stos
pop
or
mov
shrl
jp
mov
or
sbb
mov
or
pop
in
pop
adc
push
sub
aam
movsl
jmp
push
sysret
pop
mov
stos
stc
ss
mov
push
sbb
ljmp
lods
notl
cld
mov
dec
push
sub
hlt
sub
push
adc
mov
scas
stos
mov
aam
add
mov
test
adc
jb
xor
dec
inc
es
xor
cmp
adc
cmp
and
jge
dec
sub
cwtl
dec
and
iret
xor
jp
clc
lahf
sbb
sbbl
lods
mov
loope
push
dec
lds
sbb
les
loop
popa
cwtl
lods
cmp
jb
in
inc
fs
push
dec
mov
add
testl
cltd
loopne
jle
cmpsl
test
shrl
aam
xor
sbb
dec
fisttpll
jg
xchg
dec
icebp
jo
cmp
ja
sub
es
jo
fidivrl
inc
xlat
leave
inc
add
xchg
cmpsb
mov
lcall
and
out
or
dec
add
xchg
adc
jl
xchg
cmp
dec
call
in
sarb
addr16
or
int3
and
inc
fisubl
or
fnstsw
sbb
pop
int
repnz
sub
inc
loop
inc
repz
xchg
imul
cli
sbb
add
mov
cmp
jno
enter
lods
into
out
es
arpl
testl
ficoml
cmp
scas
popa
pop
fwait
sbb
cmpb
mov
popa
push
rorb
pop
mov
push
cmp
lea
xchg
divb
sbb
mov
negb
mov
icebp
stos
das
cmp
test
xlat
mov
mov
popa
mov
aas
es
mov
or
mov
jmp
sub
fsubrl
stc
outsl
repnz
nop
call
cmc
mov
inc
lods
cmpb
mov
movsbl
test
lods
push
sbb
ss
xor
dec
mov
push
jp
add
popa
loop
push
mov
mov
fistl
pop
and
sbb
xchg
pop
addr16
fadd
jae
fdivrl
xor
orl
stos
fwait
es
incl
out
aam
fs
or
inc
add
daa
sbb
mov
test
push
cmp
jo
sbb
lods
push
scas
ret
or
adc
cmp
mov
inc
push
cwtl
into
out
push
adcl
outsl
test
cli
mov
cmp
mov
pop
or
jg
mov
and
daa
dec
loope
mov
flds
shlb
filds
insb
pop
test
and
in
loope
in
mov
hlt
sti
sti
jno
cltd
xchg
sahf
xchg
mov
rorb
jne
mov
push
mov
dec
xor
jl
or
pop
jnp
sbb
push
negb
lret
push
inc
push
in
and
scas
xor
pop
xlat
ret
xchg
popa
jno
pop
add
out
cmp
into
mov
fsts
ja
sub
xchg
mov
cld
into
inc
adc
lahf
out
xchg
adc
in
ljmp
pushf
outsb
push
adc
out
sbb
shlb
xchg
arpl
fisubl
icebp
xor
mov
scas
mov
sar
xor
pop
lods
loope
jnp
js
cmp
dec
xor
movsl
sub
mov
cmpsb
jnp
int3
iret
das
popa
pushf
inc
push
pop
add
push
dec
push
xlat
push
mov
push
push
mov
push
mov
sub
xchg
in
loopne
and
pushl
aad
iret
outsb
jge
addl
xchg
mov
adc
jecxz
adc
aad
decb
xchg
fcomi
inc
popf
popa
mov
ljmp
stos
call
lahf
addr16
add
imul
mov
adc
les
inc
pop
pop
lods
jae
push
js
stos
sub
cmpsb
jp
fdiv
dec
lcall
unpcklps
fwait
xchg
mov
out
ret
jle
dec
lods
fistps
and
cmp
and
shlb
fistps
pop
sbb
mov
mov
cwtl
sub
outsb
mov
xchg
adc
int3
call
lock
imul
xor
pop
lcall
or
dec
inc
pop
pusha
ss
fstps
sbb
sub
sbb
pop
add
mov
sti
mov
loopne
mov
int3
imul
dec
and
xchg
xor
sbbl
jle
mov
adc
or
sbb
inc
repz
add
scas
andb
push
nop
dec
jmp
mov
mov
data16
add
cltd
push
push
mov
sbb
mull
mov
lahf
jo
insb
jg
fistps
sbb
adc
test
lods
imul
test
and
or
add
xchg
or
cmpsb
gs
mov
cmp
sub
not
mov
mov
iret
pop
sbb
add
stos
nop
sub
push
fnstsw
cmp
or
xor
jo
mov
gs
arpl
xor
adc
cld
lahf
jbe
rcrl
push
xor
ret
clc
shl
ljmp
pop
and
xor
jbe
inc
inc
loopne
stos
sbb
dec
stos
ja
sub
not
mov
add
test
loop
jmp
ret
test
movsl
adc
arpl
jl
xor
and
xor
jns
or
adc
jle
add
adc
cmc
or
out
xor
and
lock
faddl
cmp
cmpsl
jle
lds
add
inc
or
test
xlat
icebp
test
mov
flds
add
dec
jae
cmpsl
ret
pmulhw
mov
pop
and
sub
xchg
fst
cmp
adc
mov
stc
pop
movsl
push
mov
inc
xor
clc
cmp
inc
adc
sub
jmp
xchg
fs
mov
or
ret
mov
push
iret
xlat
pop
fcomip
std
mov
pushf
popf
lret
inc
xor
loopne
and
gs
sub
lcall
orl
fdivrs
jge
test
or
add
fsubp
add
pop
fistps
dec
adc
jo,pt
push
xor
sti
xor
test
pop
idiv
mov
leave
sbb
ds
xchg
pusha
cmp
ja
cltd
stos
mov
jo
test
dec
pop
cmp
ja,pn
jnp
and
mov
and
daa
scas
mov
cmp
mov
add
stos
xchg
addr16
out
adc
push
out
jo
lret
sbbl
xchg
push
loop
mov
mov
int
mov
sub
pop
add
jge
xor
and
movsb
mov
lds
pop
or
icebp
orl
outsb
mov
lea
push
dec
dec
mov
es
push
fiadds
inc
rcrb
enter
lods
xchg
cmpl
xchg
fdivl
fisubrl
push
and
jp
loopne
inc
dec
bound
in
mov
iret
les
xchg
pop
push
cltd
mov
cs
fnsave
mov
jbe
mov
pop
data16
std
cmp
lahf
fbstp
lret
mov
fcmovnb
inc
pop
aad
and
lods
jge
testb
adc
add
adc
mov
xor
inc
jl
mov
scas
adc
cmpsl
mov
add
push
sub
fisubrl
clc
js
dec
sti
sub
in
fsubrs
inc
inc
loop
push
out
rolb
mov
cmp
loop
inc
out
push
jo
cmp
jne
and
lods
xor
mov
mov
inc
mov
icebp
add
lret
lods
icebp
hlt
cmp
xchg
insb
inc
js
mull
call
cld
xor
in
icebp
jge
xchg
push
push
sbb
xor
cli
mov
imul
dec
jp
stos
movsl
movsb
add
imul
xor
loop
xchg
mov
mov
xchg
mov
lcall
jae
leave
mov
xor
loop
push
hlt
lods
leave
out
inc
cmp
cmpb
add
sub
cwtl
mov
test
mov
or
lds
out
inc
call
lds
inc
cld
xchg
mov
jne
insl
in
out
cli
push
xor
adc
push
push
mov
lods
adcl
dec
es
fists
adc
lods
adc
stos
add
xor
call
addr16
cmp
jp
aas
push
repz
std
inc
mov
push
dec
sbb
outsl
cmp
jne
xchg
dec
dec
cltd
daa
xlat
popf
push
sar
pop
lods
ret
lcall
or
rcrl
fcomps
adcb
subb
pusha
sbb
sbb
movsb
push
inc
ficoms
cld
loopne
push
call
and
pushf
aad
adc
adc
push
dec
add
scas
mov
cmpsl
rorb
push
lret
or
xchg
jg
push
mov
adc
mov
lea
mov
cmp
inc
adc
adc
xchg
sub
push
imul
test
xchg
and
sub
add
cmp
and
scas
in
iret
mov
xlat
jge
ret
mov
lea
loop
mov
jp
rorl
les
imul
or
jns
int3
in
jecxz
sar
pop
cmp
mov
adcb
popa
into
mov
test
clc
enter
in
cld
xchg
mov
mov
jg
mov
mulb
scas
jecxz
jo
sub
dec
inc
inc
jno
cmp
rorb
je
pop
pop
push
mov
pop
or
mov
lcall
jae
pop
xchg
ds
sub
ficoms
test
xchg
sub
or
sub
push
mov
clc
inc
cmpsb
popf
xchg
adcl
arpl
add
adcl
aas
dec
mov
mov
cmp
pop
mov
sbb
and
leave
cmp
daa
sarb
mov
mov
mov
ficoml
fdivrp
and
jne
sub
out
stos
rcrb
adc
bound
xchg
jnp
or
lret
lcall
movsl
push
add
ret
filds
pop
popa
aam
sub
popaw
imul
push
and
pop
push
in
dec
into
push
jo
loopne
addl
sub
js
mov
out
movsb
jns
testl
vpshufhw
or
shld
dec
int3
lcall
les
lods
sbb
mov
stc
out
fnstcw
and
incl
sahf
sbb
pop
in
mov
mov
fistpll
int3
lcall
out
loop
push
pop
jp
icebp
mov
test
pusha
dec
ret
push
pop
cld
push
movhps
test
mov
pop
xlat
adc
mov
daa
fcoms
xlat
stos
cmp
and
add
lret
xor
leave
or
pop
lods
cmc
scas
cld
xchg
sub
xor
shrb
jae
dec
jae
pop
push
fbld
mov
inc
sbb
mov
daa
nop
push
add
rorb
add
lods
sbb
and
add
je
jge
mov
push
lds
mov
js
cwtl
pop
sar
inc
add
sbb
data16
inc
or
push
sub
cs
inc
xchg
test
dec
mov
pop
push
out
dec
int
and
loope
sub
mov
mov
mov
repz
lahf
pop
jbe
aad
cs
pop
xchg
push
add
jle
xchg
das
or
xor
xchg
fstpl
xchg
jmp
outsb
push
xorb
loopne
cmp
xchg
mov
fimuls
stc
fisubs
cli
test
lret
xchg
inc
ja
rorl
push
clc
test
shrl
push
dec
movsb
xchg
dec
subb
test
pop
mov
cmp
enter
dec
repnz
gs
ljmp
test
push
ss
pop
sbb
mov
jmp
stos
xchg
nop
mov
jmp
inc
sbb
ss
mov
int3
jae
call
lods
jns
bound
jne
ljmp
mov
jbe
test
subl
sahf
out
sub
inc
stos
push
push
out
pop
push
sub
movsl
into
aaa
stos
xchg
outsb
gs
jne
or
fwait
pop
out
lahf
inc
lret
out
jecxz
call
push
lods
lret
or
dec
cmpb
xchg
xchg
ds
mov
sub
pop
mov
xor
pop
dec
mov
cmc
clc
adc
xor
mov
iret
pusha
iret
les
int
cmc
sub
cmp
pusha
mov
push
into
test
cmpsb
push
pmuludq
emms
std
das
sub
lock
in
push
aaa
std
je
mov
shr
xchg
inc
xchg
sbb
inc
adc
mov
push
inc
imul
clc
test
mov
ljmp
add
pop
add
fs
movsb
imul
fimull
shll
sub
sbb
cwtl
repnz
and
cwtl
loop
add
shrb
ljmp
mov
out
stos
mov
mov
shl
mov
add
pop
fistps
iret
hlt
sbb
mov
test
jp
mov
sbb
mov
lods
in
inc
arpl
mov
mov
mov
in
jb
push
inc
sub
push
xor
sub
jbe
jb
push
arpl
lahf
into
push
fstpt
cs
in
push
icebp
icebp
dec
mov
into
mov
outsl
push
pop
notl
mov
jno
jp
stc
shrl
cmc
shlb
mov
xchg
clc
sbb
loopne
cltd
sbb
sbb
mov
in
cmp
lret
in
sbb
lea
mov
inc
xchg
jg
shlb
gs
sti
test
lods
mov
mov
les
jg
jnp
sbb
push
mov
xorb
scas
ret
insb
out
aam
mov
ret
test
adc
roll
lret
aas
cmpsl
mov
inc
sbb
push
cltd
fcomip
inc
in
push
pop
sbb
repnz
fildll
je
js
gs
xor
fwait
mov
sub
sub
xchg
shll
mov
push
std
mov
movsb
pop
mov
mov
out
mov
jbe
adcl
fisttpl
cmc
cltd
outsl
movsb
add
cmp
pop
inc
sub
mov
test
shrl
sub
cli
loop
xorl
pushl
pushf
add
push
or
das
out
push
sbb
mov
and
in
mov
pop
adc
jo
ss
mov
push
push
sub
inc
mov
mov
pop
inc
loopne
xchg
jecxz
ficoms
push
pop
into
and
shl
mov
xor
repnz
inc
stos
insb
adcl
out
movsl
out
int
loope
xchg
shlb
rolb
dec
jp
mov
pop
jno
xchg
pop
data16
data16
fbld
push
cmp
inc
adc
adc
test
mov
or
repz
adc
mov
pop
xchg
int
sub
shl
cltd
mov
imul
lea
add
or
mov
test
ljmp
cld
dec
dec
int3
xor
mov
dec
xchg
and
mov
or
mull
cwtl
call
sub
add
or
dec
push
lret
pop
outsl
pop
push
repz
rorl
push
or
pop
out
mov
lds
mov
jle
mov
bound
inc
push
loope
adc
adc
shll
mov
mov
fwait
push
idiv
xchg
scas
andl
jne
mov
out
jmp
outsb
testb
loopne
fucomp
stc
in
xchg
sbb
std
ret
insl
repnz
cwtl
adc
add
cwtl
movsb
stc
sub
popf
je
outsl
sub
jno
sub
and
inc
rcrb
inc
das
lcall
test
daa
in
into
mov
mov
cmp
xchg
pop
mov
lret
push
cmp
cmp
loope
push
scas
test
mov
mov
out
cmc
cmc
mov
mov
push
pop
sub
or
movq
mov
imul
cmp
frstor
aam
jne
orb
mov
mov
push
mov
repnz
incb
add
adc
pop
xor
movsb
and
or
movsb
pusha
imul
xor
clc
inc
mov
jb
outsl
mov
mov
std
fwait
bound
xor
inc
lahf
sub
add
adc
push
jge
aas
rcrb
cmp
lcall
push
lret
pop
jno
in
add
mov
adc
mov
xchg
xchg
xor
mov
mov
outsb
sarl
mov
mov
xor
sbb
dec
js
inc
ds
cmp
adc
inc
mov
jo
push
ret
je
addr16
ficoms
mov
mov
push
xchg
imul
aaa
push
sti
push
adc
xchg
sub
loop
push
ja
mov
les
aad
push
xor
les
adc
leave
repnz
test
addl
rcrl
pop
and
inc
push
jg
lods
cmp
ret
lods
jge
cmp
fistps
imul
dec
repz
pop
mov
cld
mov
and
je
jmp
ss
fistpl
cli
sub
xchg
adc
push
dec
push
mov
sti
xor
adc
ss
mov
mov
lods
scas
stc
mov
mov
jno
cld
adc
pop
mov
popa
test
in
push
ret
fistl
and
xchg
inc
mov
pop
add
push
ret
mov
cmpsb
adc
jo
jbe
inc
into
pop
pop
cli
jmp
push
mov
rol
inc
sti
lods
mov
adc
data16
mov
jae
push
add
bndstx
imul
push
adc
sbb
add
es
sti
or
mov
lock
xchg
insb
daa
cmp
jae
jl
rcll
cs
jnp
aad
or
jl
cmp
int3
xchg
xor
test
inc
enter
cs
lds
sarl
testl
adc
movsb
divb
out
in
ds
adc
sub
xrelease
lods
push
test
cwtl
outsb
js
xchg
cs
mov
pop
inc
sar
fimull
cmp
out
adc
repz
stc
insl
aam
cltd
insl
es
adc
jb
cmp
xchg
sbb
cli
ljmp
inc
out
addb
mov
stos
jl
inc
iret
mov
fistpl
lret
inc
fwait
and
in
in
adc
jp
pop
sbb
xchg
gs
cmp
int3
sub
push
dec
and
popf
add
out
cmp
sbb
lock
mov
ret
std
jecxz
hlt
pop
fnstcw
sub
or
movsb
adc
orb
les
lret
jecxz
mov
lahf
mov
stc
xchg
add
repz
mov
imul
into
pop
dec
xor
xchg
xor
es
fadds
mov
mov
in
adc
jbe
xchg
cltd
xor
add
dec
adcb
fnsave
mov
out
pop
in
adc
into
adc
subb
adc
mov
repz
in
clc
sub
pop
mov
mov
or
push
sub
inc
imul
mov
fbld
adc
cwtl
je
xchg
jg
pop
stos
or
fstpt
mov
movsb
test
aam
mov
inc
pop
lods
ret
aad
iret
loop
in
cmpb
data16
pop
push
lahf
add
call
inc
bound
in
sbb
dec
push
push
pop
dec
cmpsb
sahf
shll
cmp
push
or
xchg
mov
dec
add
jp
cli
aam
mov
hlt
jbe
in
pop
and
mov
repz
movsl
push
aad
adc
cmp
dec
lock
cmpsb
inc
push
popf
fists
push
or
das
call
fdivr
cmp
jae
out
and
mov
imul
sahf
push
pop
push
outsb
sub
sahf
inc
sbb
shlb
pop
pop
xlat
mov
enter
jo
fsubp
adc
ret
int3
sub
sub
xor
int
ss
push
int
jnp
adc
popf
sbb
sarl
push
push
call
or
lcall
push
test
imul
mov
test
pop
mov
shll
jno
adc
or
ss
cmp
jmp
jo
fadds
sub
mov
cltd
outsl
loopne
cltd
lcall
mov
loope
orl
xchg
push
mov
pop
cmp
add
cmp
lcall
mov
pop
pop
icebp
mov
pop
aas
cld
pushf
inc
xlat
shrl
push
scas
push
push
dec
pop
cli
inc
leave
ret
push
in
cmp
xor
mov
fsincos
mov
cmp
fisttpl
mov
hlt
ret
int3
jl
and
mov
xor
sub
mov
bound
or
hlt
int
nop
pop
aas
clc
xchg
adc
adc
adc
ss
push
mov
adc
lock
add
cltd
mov
popf
pop
test
jg
loop
aaa
dec
inc
push
mov
jl
rorl
mov
lret
int
and
lea
pusha
cmp
ret
mov
pop
push
cld
ljmp
aas
iret
push
addl
mov
inc
mov
xor
pop
bound
push
sub
xchg
and
insb
movsb
cmp
popf
jo
mov
in
addr16
and
jbe
pop
mov
mov
jp
xor
in
cmp
mov
add
lret
mov
mov
fsubrl
arpl
fists
popa
or
add
xchg
pop
loopne
mov
jns
xchg
bound
inc
mov
loop
and
cmc
mov
mov
lock
and
push
loopne
enter
insl
orl
pop
mov
or
add
movsb
jmp
loop
scas
mov
pop
ds
xchg
mov
loop
ret
push
mov
adc
popf
rcrl
lcall
jae
dec
and
ja
imul
mov
std
ljmp
mov
mov
xchg
sahf
lds
mov
fmul
outsb
ficomps
scas
gs
loope
repnz
cli
stc
cmp
or
or
mov
mov
jnp
sbb
xlat
xor
repnz
sbb
outsb
xor
pop
xchg
stos
push
sbb
mov
mov
flds
in
mov
pop
xchg
push
insl
aaa
cmpsl
sub
aas
xor
cmpsl
add
fsts
int3
dec
stos
sbb
mov
aas
adc
adc
cli
xchg
or
mov
mov
inc
sub
movsl
jne
call
pop
daa
xor
push
lods
adc
mov
stc
mov
icebp
lahf
push
mov
push
pop
push
cmc
adc
adc
adc
xchg
mov
adc
popf
cmc
fcompl
xor
pop
sbb
inc
mov
and
lds
sti
ljmp
cmp
hlt
push
xchg
ja
shl
shlb
mov
jbe
out
push
mov
or
dec
push
lock
lahf
pop
fndisi(8087
adc
pop
sub
mov
add
test
cmc
mov
mov
bound
ja
mov
test
call
sbb
fisttpl
adc
jbe
fidivs
es
repz
rclb
mov
in
jno
fucomip
cltd
push
cwtl
aam
xchg
pop
sbb
scas
cmc
pop
nop
pop
insl
jmp
add
aaa
inc
ficomps
sub
out
mov
lcall
repnz
sbb
xchg
lock
das
jne
sub
ret
jnp
inc
iret
rclb
lret
pop
and
xlat
ss
pop
leave
js
in
in
ja
clc
mov
fsubrp
insl
xlat
mov
imul
das
sub
js
orb
cmpsb
push
int3
mov
jno
ja
jg
lret
jne
notl
pushf
dec
mov
stos
stc
icebp
sbb
aam
mov
mov
sub
in
jg
jmp
xor
data16
pusha
sbb
mov
fisubrl
or
push
fiadds
in
dec
jnp
subb
and
stc
call
jecxz
mov
xchg
es
push
outsl
pop
dec
aam
out
movl
mov
test
scas
pop
subb
in
nop
inc
dec
cltd
loopne
jb
add
pop
negl
mov
ret
fsubrs
jae
jp
shl
cwtl
push
and
or
add
cs
mov
int3
pop
pop
adc
and
fwait
add
xchg
pop
in
cltd
call
adc
ja
push
jae
ds
xor
mov
test
jne
and
hlt
mov
sub
push
mov
data16
inc
sbb
bound
jl
push
sub
cmc
inc
jmp
jmp
add
stos
adcb
shr
into
xor
jmp
pop
mov
scas
addl
or
hlt
add
out
and
ret
or
sti
xchg
dec
pusha
inc
add
cmp
jne
cmp
fcompl
cmpsl
and
repz
dec
xchg
jnp
stc
cld
lret
push
dec
xchg
mov
xor
lds
jo
les
pop
mov
shrb
arpl
or
mov
into
adc
mov
fs
dec
push
pushl
je
adcl
cld
jmp
cwtl
es
in
jp
cmp
inc
int
sub
inc
add
mov
int
in
enter
mov
add
bound
dec
aaa
outsb
outsb
movsl
jp
mov
rcrb
dec
lods
fdivrl
adc
imul
mov
cmpl
sub
adc
push
push
mov
mov
xchg
ss
jl
rol
notb
push
test
hlt
bound
repz
loope
ljmp
inc
cwtl
call
adc
fbld
ret
lock
mov
dec
fbstp
sbb
addb
cmc
cmp
cmpsl
push
xor
mov
aam
shl
mov
xchg
stc
push
dec
addb
ret
mov
sbb
adc
mov
aaa
add
push
or
stos
pop
nop
repnz
ficoms
fidivrs
aaa
xlat
inc
pop
lods
in
cld
or
out
xor
or
ljmp
aaa
cmpl
dec
jg
jb
mov
es
mov
add
or
mov
lds
lahf
mov
int
and
imul
jp
call
jo
cltd
push
mov
xchg
lcall
mov
mov
mov
push
insl
xchg
or
mov
les
jecxz
mov
imul
and
sbb
mov
call
cmpsl
js
into
add
aad
push
xchg
stc
les
jle
mov
pop
out
mov
scas
cli
add
push
dec
sahf
mov
lods
pop
xchg
mov
daa
fldcw
shrb
rcr
inc
popf
ret
insb
xor
mov
mov
test
push
std
xchg
inc
repnz
out
ret
mov
leave
jecxz
lock
add
push
mov
popf
fbld
mov
cltd
push
arpl
stc
pusha
hlt
outsl
jp,pt
cli
ficomps
xor
jne
mov
dec
lods
sti
subb
popa
inc
bnd
mov
adc
pop
into
adc
popf
imul
dec
gs
sti
fbstp
xor
fisttps
ljmp
test
mov
fistpl
push
mov
or
ret
mov
and
mov
mov
fildl
int3
subb
lret
sub
adc
jae
or
pushf
sub
mov
add
push
dec
sahf
adc
mov
outsb
cmp
xor
int
xchg
cmp
js
push
jecxz
js
repnz
mov
push
lret
loop
dec
jp
mov
xchg
into
lret
mov
mov
addr16
pcmpeqd
test
shll
adc
sbb
sbb
scas
sbb
sub
lock
mov
ds
jo
adc
divl
add
jle
jecxz
push
aam
decb
sbb
mov
cwtl
js
sbb
xchg
ss
shrb
push
mov
daa
cmp
jmp
in
call
xchg
subb
dec
xor
out
lods
movsb
das
adc
sbb
sbb
ret
xchg
addl
xor
rcrb
cmp
arpl
push
ss
rcr
inc
ljmp
mov
dec
inc
sub
dec
lcall
lods
in
fsubrs
pop
inc
stos
and
xor
jno
mov
cltd
sbb
dec
aam
out
leave
sbb
imull
push
add
jno
test
icebp
loop
leave
shll
dec
jb
and
js
jg
xorl
bound
movsb
sbb
js
xor
add
lods
fnsave
push
call
fmulp
leave
fwait
adc
mov
nop
rcll
mov
mov
pop
fs
ja
in
jnp
lahf
sub
cwtl
add
xchg
jecxz
pop
icebp
dec
jmp
fstpt
push
clc
mov
mov
scas
adc
test
pop
add
mov
stc
mov
jecxz
add
lods
push
or
fcomip
and
xlat
xchg
leave
push
loop
rorl
shlb
dec
cltd
jnp
jbe
and
xor
sub
inc
jo
cmpsb
stos
stc
sbb
inc
mov
jmp
add
jle
lahf
or
aam
push
rcrl
ret
std
mov
cmp
sarb
pop
push
sbbl
insl
sub
data16
mov
jae,pn
pop
aam
add
popf
sbb
pop
shrl
fdivrl
rorl
clc
mov
ret
test
ret
das
jae
push
cmp
out
test
lcall
mov
movsb
retw
or
xchg
jmp
mov
outsl
fwait
rol
cld
test
xchg
jl
loope
adc
into
fs
std
jl
lds
push
adc
cmc
xchg
fidivl
xchg
mov
jns
call
push
pop
cmp
jg
stc
insb
fimuls
popf
scas
add
sbb
std
cltd
in
mov
es
or
dec
or
aas
sbb
xor
fcmovnb
into
pushf
sub
and
test
aas
xchg
stos
or
mov
sti
ficompl
sbb
dec
jo
sub
inc
dec
mov
cmc
mov
mov
das
pop
pop
lret
mov
ret
mov
fidivs
inc
scas
push
dec
pushf
das
push
xorl
fadd
xor
and
inc
jmp
mov
sub
test
and
mov
insl
frstor
jae
push
cmp
adc
dec
sti
dec
idiv
sub
adc
addb
or
mov
sbb
xchg
enter
ja
push
cmp
cmpsb
sub
pop
loop
xor
divl
mov
push
dec
retw
insl
inc
imull
jg
imul
in
cmp
sbb
clc
lods
push
out
ret
xor
inc
imul
xchg
fwait
cmp
fs
bound
xchg
mov
sub
inc
hlt
mov
imul
mulb
adc
mov
dec
jl
mov
ja
adc
mov
push
jg
push
bound
push
lods
jge
in
pop
jno
mov
testl
out
mov
ficoml
lcall
xor
lock
idivl
and
sar
outsb
clc
mov
sub
jecxz
or
mov
xchg
mov
movsl
sub
jl
and
lods
jb
add
pusha
js
daa
jecxz
mov
dec
lock
aas
or
sub
movsl
xchg
out
sub
mov
dec
test
fwait
rorl
rcrb
mov
sbb
jno
rorb
sahf
mov
cmpsb
mov
jnp
aam
mov
push
xor
xor
xor
rcl
pop
sub
mov
aam
mov
or
push
sub
push
out
scas
sti
xor
cmp
cld
add
and
inc
or
addr16
lret
mov
imul
adc
in
jne
push
repz
and
stos
mov
pop
mov
daa
addr16
fcomip
and
lret
xor
push
pop
jne
xor
sub
add
mov
mov
out
mov
cld
movsb
fbstp
sub
push
xor
mov
pushl
xchg
pop
inc
fisttps
into
lods
icebp
rcll
test
rol
mov
mov
and
xchg
stos
aaa
popf
shlb
fnstenv
jecxz
dec
shl
inc
daa
loope
test
pop
and
lea
sub
in
aas
jno
inc
xchg
ror
inc
and
movb
les
fidivrl
popf
das
mov
lahf
mov
jne
imul
out
les
inc
into
ret
fnstcw
or
jmp
mov
div
sub
mov
cmp
or
sub
lahf
sarb
add
xor
int
js
test
ds
mov
mov
inc
out
incl
mov
push
lods
mov
jns
dec
cmp
adc
push
xchg
pop
pop
mov
js
jbe
ret
jb
inc
lahf
jne
jmp
popl
fnstsw
cmp
pop
ret
ljmp
cmp
mov
mov
mov
outsb
rorb
dec
add
leave
mov
popf
pop
mov
fnstcw
sub
xor
mulb
rorb
xchg
push
in
cmc
mov
push
test
inc
or
int3
xchg
out
cmp
push
dec
lret
jl,pt
jg
fisubrs
inc
or
jno
repnz
arpl
roll
in
fwait
mov
add
out
xchg
addr16
stos
jno
sbb
arpl
fiaddl
dec
dec
mov
popa
add
leave
push
add
test
int3
fsubp
mov
adc
outsl
inc
cmp
loope
lret
mov
inc
push
test
mov
push
jne
mov
xchg
xor
sbb
mov
int
fsubrp
movsb
stos
jb
mov
test
fnstenv
inc
in
push
shrb
popa
push
add
rolb
cmp
xor
push
dec
ss
addr16
ds
jnp
push
cld
jg
test
lock
xor
adc
dec
xchg
outsb
xor
xchg
je
pusha
stc
or
lahf
loop
jbe
sub
scas
bsr
push
sbb
xchg
loope
flds
lods
push
jg
sub
cwtl
xchg
sub
or
cmpsb
xchg
ds
iret
add
xchg
popf
pop
ret
std
out
sbb
cmpsl
pusha
mov
dec
in
mov
insb
pop
int
ficoml
mov
mov
mov
repz
daa
push
xor
jge
ds
xchg
dec
into
loop
mov
xchg
pop
jge
std
arpl
cmp
mov
xchg
pop
lcall
shl
adc
sub
ret
jae
mov
push
jmp
fbld
adc
push
xchg
and
pop
push
repz
mov
iret
jo
and
add
cmpsb
in
out
xor
sbb
ljmp
fsub
jecxz
add
fsts
mov
inc
and
pop
adc
daa
mov
pushf
es
out
mov
inc
in
int
xchg
dec
or
sub
mov
outsb
test
arpl
pop
enter
std
test
push
lret
mov
mov
or
arpl
int
test
dec
push
fldl
lods
pusha
mov
add
mov
jp
push
lcall
sub
or
push
ret
fcmovu
xlat
shll
cwtl
in
sbb
repnz
push
cmp
shlb
mov
or
sub
mov
jns
xchg
shrb
lds
fstps
cmpsb
pop
out
pop
nop
dec
pop
jecxz
push
ja
cli
ja
sbb
jg
jb
repnz
xchg
inc
xchg
sahf
out
frstor
jmp
sub
out
fadd
fistl
ss
xchg
push
mov
pop
ja
sbb
scas
inc
dec
mov
mov
shlb
inc
inc
shr
xor
pushl
loope
xchg
jmp
fwait
push
mov
jno
inc
inc
cwtl
nop
loope
cld
lods
pushf
jp
mov
pop
lds
jg
pop
sub
clc
ret
pop
pop
daa
idiv
mov
clc
into
enter
aam
loope
xor
jno
shlb
lea
inc
sti
rcrb
mov
xchg
leave
dec
push
dec
lcall
mov
out
mov
sub
mov
and
cmp
add
adc
aaa
mov
xchg
lret
nop
leave
cmp
push
dec
cli
bound
xchg
adc
das
adc
int3
cmp
mov
or
out
lock
cmp
sub
xchg
inc
fstl
les
int3
cmp
jge
sbb
mov
add
cwtl
dec
mov
jnp
je
rcrb
inc
dec
jno
dec
mov
loop
sbb
jg
shl
pop
mov
xchg
call
mulb
iret
push
ja
jge
aam
ret
cmpsl
iret
mov
adc
adc
loope
xchg
fcomip
jg
or
inc
cmpsl
and
cmpsb
out
xchg
sbb
loopne
mov
lret
insl
cmc
pushf
pop
xor
sub
add
inc
jae
push
xor
lcall
mov
inc
int3
sub
adc
insb
mov
pop
lds
add
and
ret
testb
mov
loope
pop
mov
lea
push
scas
cmp
dec
inc
mov
jp,pn
mov
mov
adc
pop
les
pop
insl
je
sbb
lahf
pop
mov
jne
out
outsl
pop
sub
pop
mov
pcmpgtw
xchg
mov
or
adc
aad
ror
loopne
inc
xchg
sbb
jmp
or
or
dec
pusha
lahf
xlat
mov
and
cmp
xchg
popf
mov
xor
mov
mov
jnp
mov
stc
pop
cmpsl
dec
pop
testb
pop
jbe
dec
inc
mov
cltd
xchg
inc
fstpl
pop
mov
sub
xlat
shrl
push
dec
push
mov
in
aaa
jae
jp
rcrb
scas
xchg
mov
mov
int3
dec
jnp
push
das
out
aas
scas
mov
mov
mov
dec
cmc
int3
movsl
sbb
xchg
jmp
aaa
mov
insl
jb
add
fstpt
sti
mov
push
push
jns
ret
adc
mov
mov
dec
add
xchg
xchg
push
or
imul
ljmp
into
pop
aad
ret
cmp
out
or
rolb
and
decl
aam
push
cmpsl
inc
scas
pop
jmp
cmp
push
sub
aad
rol
xor
push
mov
jno
push
pop
and
inc
stos
movsb
bound
arpl
cmp
aas
sub
es
fsubp
xor
scas
push
clc
jns
cmp
mov
rcr
daa
les
mov
in
xor
pushf
pop
out
test
ja
dec
incl
test
pop
das
sub
xor
loope
pop
iret
jecxz
aad
push
xlat
push
add
sub
int3
or
mov
xchg
lret
repz
push
push
xchg
scas
inc
ret
repz
cmp
jmp
and
jl
or
and
push
xchg
pop
push
rol
jp
pop
push
sbb
or
and
xor
pop
into
mov
jmp
mov
xchg
mov
xchg
mov
mov
adc
or
arpl
or
lcall
dec
sar
mul
mov
xor
push
ficoms
je
push
cli
mov
push
ret
mov
cmp
aaa
xchg
sub
lock
or
jnp
mov
xchg
pop
xchg
lods
or
outsb
xor
call
fsubrp
fiadds
lret
out
push
adc
scas
iret
mov
cmp
das
cmp
mov
orl
call
jmp
orl
dec
loopne
push
outsl
sub
cli
rorb
out
cltd
repnz
popf
jb
fimuls
mov
movsb
lcall
das
dec
mov
mov
clc
int
test
and
aas
nop
and
in
arpl
repnz
xlat
lea
test
mov
aas
loope
in
jp
repnz
xor
not
sub
lret
push
outsl
out
inc
xorl
jmp
arpl
aam
stc
inc
sbb
fildll
fdiv
clc
pop
mov
mov
pop
jbe
jno
mov
adc
js
add
sbb
aam
lods
or
xchg
movsl
push
rcrb
xchg
cwtl
mov
jae
dec
jecxz
push
cmpsb
lods
jne
cmp
out
jb
movsl
rcll
sub
pop
cmpsl
push
and
aam
shlb
xor
aam
dec
jmp
cmp
iret
es
cltd
ret
js
add
in
pop
mov
mov
filds
push
dec
into
out
lahf
add
jle
jmp
aam
shl
rcrl
aaa
int3
insl
mov
ja
arpl
dec
or
inc
dec
mov
jnp
jbe
or
roll
mov
lock
mov
loope
stos
cmc
scas
mov
dec
aaa
jno
int
jo
xor
mov
hlt
xchg
mov
mov
lock
mov
dec
dec
dec
in
repz
leave
dec
stos
adc
sti
orb
ret
and
orl
pop
repz
dec
movsl
aaa
or
jmp
jecxz
pop
dec
in
mov
aaa
popa
pusha
icebp
jecxz
pop
add
aas
add
sub
mov
imul
sbb
sub
jg
int
repz
or
cwtl
xlat
les
cli
loop
mov
ja
dec
adc
scas
mov
testl
stos
or
test
jp
inc
pop
sbb
sub
mov
sbb
xchg
mov
mov
repnz
loope
inc
xor
inc
lret
ja
sbb
adc
and
jecxz
popa
rolb
imul
xchg
sub
inc
roll
mov
std
loop
mov
out
lret
mov
mov
jmp
test
insb
xor
mov
enter
jne
sbb
arpl
fcoms
fsubrp
ljmp
dec
lcall
sub
add
imul
pop
aad
cmpsb
sub
ljmp
mov
push
dec
lahf
mov
lods
adc
sti
dec
cmc
out
add
repz
fidivl
std
mov
mov
push
adc
mov
sub
push
lock
dec
scas
xchg
xor
pop
repnz
inc
js
pop
jmp
xchg
ds
xchg
push
or
out
es
mov
pop
inc
dec
xchg
adc
push
inc
jmp
dec
out
sbb
lret
pop
leave
pop
bound
fsubr
adc
aas
andl
xchg
add
sbb
scas
jmp
mov
pop
or
push
in
loopne
xchg
dec
push
jb
lock
popf
icebp
push
push
fisttpl
cmp
fbld
stc
or
jge
mov
push
mov
ds
in
sub
dec
inc
aaa
xchg
pop
cs
lods
or
cmpsl
fsubrs
out
xor
cltd
fs
ret
enter
lahf
or
nop
add
pop
jb
or
mov
hlt
stos
and
gs
jmp
add
mov
imul
arpl
nop
arpl
in
pusha
cmc
cmp
push
sbb
lds
shlb
int3
push
int3
adc
xchg
ret
xor
xor
pop
push
sbb
or
sub
sub
fdivl
jle
push
lds
or
push
mov
mov
repz
in
ret
xor
fs
xor
mov
fsub
jmp
rcrl
subl
push
out
push
test
hlt
push
shll
push
addr16
mov
je
imul
push
jns
dec
sub
mov
mov
push
mov
stos
js
or
movsl
lcall
outsl
dec
and
mov
jne
movsl
mov
sbb
and
push
lds
pop
pop
inc
imul
sub
xchg
popf
loop
push
xor
ja
jmp
imul
xor
loopne
jp
pop
out
shlb
add
mov
adc
push
push
in
in
sbb
out
notb
mov
repz
ret
in
mov
iret
adc
push
lock
daa
push
popa
int3
push
pop
sbb
mov
cwtl
cmpsl
cmp
lret
jo
mov
pop
insb
fwait
outsl
repnz
test
xchg
iret
pusha
ja
cmp
cmp
sub
fs
fcomps
fsubl
mov
testl
sub
mov
and
xlat
bound
fucomi
xlat
jl
pop
sbb
mov
imul
or
call
jnp
xor
xor
mov
jnp
jecxz
cld
mov
xor
xchg
ljmp
insb
jbe
iret
test
jne
sbb
sbb
imul
add
mov
int3
insl
jl
sbb
in
mov
xor
daa
mov
sqrtps
shll
into
popf
int
enter
dec
arpl
js
rolb
loop
xchg
in
mov
lods
aaa
movsl
mov
xchg
ret
jno
test
mov
out
loop
and
fnstcw
icebp
xor
in
inc
mov
adc
lea
or
mov
sbb
mov
cmpb
popf
add
xchg
xor
push
cmc
add
lahf
jbe
or
lcall
rorl
lds
stos
mov
lcall
cwtl
mov
fwait
add
shrl
xchg
cltd
cwtl
out
cwtl
hlt
ffree
mov
dec
xchg
adc
movsl
fsts
std
mov
fnsave
cmpl
aam
pop
pop
push
adc
mov
adcb
je
insb
pop
xchg
fisubs
or
mov
mov
mov
sub
mov
inc
inc
mov
sub
mov
aam
push
mov
mov
out
dec
jecxz
adc
mov
adc
and
pushf
int
push
and
sbb
dec
pop
adc
inc
jno
fldcw
push
mov
push
testl
sub
fcmovbe
mov
and
xchg
jecxz
cmpsb
pop
popf
mov
jmp
iret
inc
add
mov
cmpsb
test
cli
sti
push
push
jle
pop
push
push
fld
pop
cltd
pop
orb
lcall
test
or
mov
out
inc
repz
xchg
push
outsb
aaa
or
fidivl
push
push
cltd
cs
inc
in
cmp
pop
ds
fcmovnu
mov
jl
incl
pusha
and
out
dec
pop
leave
jmp
nop
subb
scas
pop
add
cmpsl
loope
and
out
adc
dec
pop
pop
push
leave
das
jnp
push
xchg
dec
mov
in
mov
or
adc
and
ret
shlb
inc
add
outsl
outsl
cltd
pop
or
sti
pushf
nop
xchg
mov
cmc
jbe
cltd
pusha
imul
test
lret
inc
mov
mov
stos
in
ss
dec
adc
mov
insb
imul
push
mov
mov
int
add
in
insl
cmp
jae
out
adc
adc
inc
fwait
dec
inc
pop
lcall
mov
rorl
or
icebp
jbe
lds
popf
nop
mov
jg
jmp
mov
shll
mov
fistpl
lods
xor
xchg
pushf
push
mov
mov
xlat
bound
popa
arpl
push
cmp
mov
test
xchg
jmp
scas
fwait
add
movsl
push
xchg
pop
rcll
push
sub
fmulp
jae
lock
gs
int3
cmp
cmp
ja
pushf
cmp
out
ret
pop
add
insl
push
js
and
movsb
push
and
pop
ljmp
inc
adc
sub
cli
mov
mov
fildll
mov
xchg
mov
mov
pop
xor
lahf
dec
imul
ljmp
stc
dec
cwtl
movsb
add
dec
sti
cmc
cltd
or
add
stc
adc
jnp
mov
shlb
mov
dec
fsubrl
orl
mov
jge
inc
and
adc
js
cmp
push
or
lret
xor
sbb
or
leave
daa
mov
inc
movsb
sub
lret
adc
jecxz
mov
in
out
lret
jns
into
addb
jp
add
aaa
icebp
jg
orps
hlt
sub
inc
sub
push
hlt
xor
jns
aad
subb
insl
cmp
fsubp
dec
scas
sbb
insb
cwtl
mov
faddl
sbb
sub
jnp
sub
call
add
pop
in
add
jge
dec
pop
push
bound
es
hlt
stc
mov
sub
cli
mov
mov
sbb
sbb
ret
daa
mov
daa
sbbl
pop
xor
mov
pop
mov
rorl
in
aaa
push
js
xor
mov
push
pop
or
outsl
xchg
and
frstor
addr16
test
cmp
mov
movsb
gs
in
inc
jp
loop
and
shlb
inc
lods
rorb
pop
push
fstps
clc
les
mov
sbb
cli
push
ret
test
out
lahf
push
out
mov
cmp
sub
or
int3
xor
or
or
jl
pop
mov
or
loop
fsubrs
bound
cmp
rclb
pop
mov
aad
arpl
jge
rol
push
push
fsts
in
imul
xor
imul
in
aaa
faddl
in
or
inc
dec
movsb
mov
movsl
hlt
and
sbb
repnz
push
int3
imul
loope
enter
push
mov
mov
clc
mov
in
mov
lret
cld
addr16
cld
les
icebp
mov
out
cmpsl
push
cmp
sub
dec
mov
inc
dec
jmp
ds
push
adc
lods
xchg
adc
jnp
cwtl
scas
je
mov
and
mov
and
cli
sub
sbb
adc
stc
repz
outsl
jnp
loope
ret
mov
adcl
mov
push
ja
sbb
mov
xor
ret
jl
mov
fwait
adc
dec
pop
fbstp
fdivr
push
jo
jmp
jno
sarl
inc
xchg
inc
mov
out
adc
push
sarb
add
mov
pushf
dec
or
les
das
mov
mov
sub
pusha
repnz
gs
xorl
js
pop
xchg
call
sub
std
icebp
cmpsl
or
pop
jo
popf
sub
jge
in
in
loope
lods
mov
mov
out
sbb
or
push
aaa
rcrb
mov
add
outsl
test
rclb
out
scas
sub
xchg
addr16
push
mov
jno
mov
push
sub
shr
push
mov
mov
sbb
stos
adc
lret
pop
push
iret
fistps
jge
pop
jle
outsb
cwtl
and
pop
jg
std
jnp
fucomi
or
or
test
divb
and
daa
mov
mov
out
mov
scas
adc
mov
or
pop
adc
sbb
movsb
jbe
dec
pop
sub
cmp
inc
inc
and
mov
adc
xor
out
pop
lret
fwait
rcrb
mov
adc
push
inc
cwtl
xchg
aas
cwtl
push
lods
icebp
fidivrs
and
adc
adc
clc
jg
lcall
adc
stos
std
in
dec
sub
outsl
xor
jbe
sarl
mov
xlat
popa
loop
xchg
cmpsb
inc
cmp
stc
mov
inc
sub
scas
imul
imul
addr16
mov
imul
pop
pop
mov
sbb
pop
sub
ja
sbbb
mov
sbb
adc
fcomp
mov
add
addl
pop
clc
test
sub
sbb
inc
and
call
in
dec
dec
popa
ss
lods
loopne
jae
pop
xor
push
cmpb
test
mov
lods
push
pop
lcall
pushf
push
sbb
imul
fbstp
mov
shlb
lods
enter
inc
aaa
cld
popf
inc
fstl
push
dec
and
lahf
jbe
test
outsb
push
jb
rcrb
in
addr16
and
hlt
add
scas
imul
imul
outsl
scas
adc
lods
mov
cli
mov
dec
pop
fdivrl
int
sub
mov
push
mov
mov
jb
pop
xchg
cld
int
push
add
mov
add
stc
mov
push
jb
test
es
addr16
mov
pop
mov
or
fistpl
lea
sbb
inc
aaa
mov
pusha
jae
fsubrp
cmpsb
inc
popf
sub
ss
in
push
int
inc
shrl
int
xchg
cmp
nop
ja
pop
nop
fwait
xchg
sbb
push
jle
jp
out
or
shll
pop
mov
mov
push
inc
xor
sbb
inc
decl
mov
arpl
mov
adc
xchg
cli
xchg
ljmp
aas
dec
cs
pop
xor
test
xchg
fistl
rolb
lods
jo
shlb
mov
test
mov
loope
in
cmp
aad
and
lea
adcb
push
pop
out
adc
int
fimull
in
jno
mov
out
or
sbb
cmp
xor
dec
push
stos
out
ss
mov
sbb
out
sub
xlat
enter
and
dec
mov
pop
insb
pop
pop
xor
sub
pop
out
out
add
inc
addb
adc
mov
movsb
xor
in
bound
rclb
popf
shr
sbbl
mov
dec
sbb
rcrl
mov
stc
or
mov
inc
adc
mov
imul
sbb
mov
push
cmpsl
dec
mov
sahf
aaa
jnp
dec
pop
pusha
mov
or
hlt
push
inc
push
call
jbe
es
mov
negb
cltd
xor
xor
pop
pop
cwtl
xchg
call
fs
push
fcmove
loope
aad
jo
insl
cld
dec
jecxz
push
enter
cmp
cwtl
stc
movsb
das
push
aad
xor
cli
pop
add
inc
sub
mov
fstpl
jecxz
jmp
sarb
jecxz
fldenv
insb
pop
mov
out
pop
shll
lods
xor
inc
jl
xor
fstl
cs
gs
sbb
mulb
jbe
leave
xor
pop
jg
push
push
inc
add
and
mov
mov
and
aaa
repz
lcall
jle
mov
ljmp
sub
outsl
mov
sub
mov
inc
and
sbb
jnp
mov
or
data16
mov
insl
loope
sbb
rcrb
leave
cmc
pop
push
mov
stos
cs
cmp
dec
xor
sub
lret
mov
leave
sub
lods
xchg
ja
js
jns
insb
xor
aad
rcrb
aad
jae
xchg
mov
fdivrl
mov
mov
aam
data16
xor
iret
inc
sbb
xchg
dec
lcall
out
je
xchg
fcmovb
repz
adc
in
mov
add
scas
xchg
and
aaa
scas
mov
mov
repz
sub
adc
dec
bound
dec
inc
cs
aas
sbb
out
inc
into
xchg
inc
cmp
ret
in
xchg
sub
in
ret
xchg
xchg
mov
leave
mov
push
add
inc
mov
imulb
inc
or
sbb
call
xor
sbb
iret
movsl
or
pop
jb
pop
xor
sub
push
addr16
dec
popa
jmp
cmp
leave
jecxz
std
sbb
cmp
mov
rcrb
or
jge
mov
dec
push
stc
hlt
or
in
out
sub
movsl
xchg
inc
adc
or
cmp
mov
sub
or
fdivr
sbb
xchg
sub
mov
sbb
imul
insb
andb
mov
cmp
dec
stos
cltd
push
mov
xchg
adc
or
stc
shr
les
std
jecxz
cmpsl
mov
aas
inc
lcall
dec
mov
mov
xchg
lock
enter
and
icebp
cmpsb
push
mov
scas
int3
test
js
scas
stos
sbb
jns
imul
add
sbb
mov
mov
mov
inc
add
mov
jge
fs
rclb
xor
inc
and
into
pop
addr16
cmp
mov
rol
test
xor
mov
dec
inc
pop
jae
test
das
hlt
outsb
pop
mov
or
shrb
pop
int3
or
push
jle
inc
aas
lret
mov
das
out
faddl
push
xchg
mov
stc
repnz
xchg
cltd
aaa
add
jmp
xchg
cltd
in
in
mov
push
mov
aas
lock
inc
or
mov
push
xlat
int3
in
sbb
mov
mov
repnz
fistpll
sbb
icebp
jge
call
loopne
xchg
jo
push
ds
jb
jl
push
insl
test
mov
stos
ret
pop
call
lcall
leave
inc
test
call
arpl
mov
dec
push
call
jne
sub
int
jecxz
fidivs
dec
jae
popa
cld
xor
cld
rolb
movb
ret
mov
or
cmp
shrb
adc
les
cmp
add
or
sbb
call
call
push
sub
call
add
push
add
idivb
das
mov
out
dec
mov
popf
in
out
sbb
push
lahf
std
popf
adc
shll
mov
xchg
jmp
adc
cmc
mov
subl
aad
mul
outsb
hlt
lock
lret
popf
push
xchg
cmp
sbb
pushf
int
test
loope
mov
repz
dec
mov
int
pop
les
mov
cmp
mov
mov
xchg
jmp
add
mov
adc
push
fwait
iret
repz
add
add
inc
int3
fisttps
sbb
fwait
lcall
data16
and
outsb
lret
mov
cmp
outsb
jne
test
mov
adc
mov
lcall
pop
rcrb
imul
or
cmp
jne
pop
frstor
or
hlt
jb
ja
and
ljmp
dec
imul
sub
mov
jecxz
sub
ret
ficoms
stc
xor
iret
lret
add
sub
lock
data16
lock
and
push
jbe
arpl
push
push
jae
sub
cmp
push
sbb
fisttps
inc
outsb
adc
xchg
jae
fdivrl
das
mov
and
adc
scas
xchg
jne
jnp
lcall
push
rolb
out
scas
andb
inc
imul
int
adc
xor
xor
outsl
mov
xchg
xor
dec
jecxz
push
jb
imul
fcmovu
leave
pushf
mov
jne
into
fbld
int
sub
icebp
fmulp
xor
sub
sub
scas
sahf
adc
xor
xlat
popa
aaa
jle
out
add
stos
mov
push
dec
xchg
fst
loope
xor
jmp
call
fisttps
gs
mov
inc
dec
xor
mov
add
jle
sbb
mov
push
insb
insl
cli
cs
mov
sbb
fidivrl
jo
lods
mov
arpl
xor
sahf
add
push
loopne
and
pop
jp
add
sub
hlt
ret
jg
lods
sbb
push
mov
dec
sub
jmp
jmp
add
orl
mov
loop
ss
fnstcw
add
xlat
insl
arpl
jp
fiaddl
stc
mov
adc
pop
xlat
pop
mov
scas
ss
xlat
dec
pusha
push
sbb
adc
xchg
pop
test
sbb
fcoms
cltd
loopne
in
push
adc
dec
pop
xor
aas
fldcw
lds
sub
aas
movsb
insl
push
push
cmp
aaa
lods
cmp
fisubrl
sarl
fs
out
ja
aam
bndldx
add
add
jns
in
dec
push
mov
cltd
xchg
dec
pop
mov
mov
int
pop
addr16
sbb
shr
dec
or
mov
cmp
push
roll
mov
inc
lods
add
arpl
nop
xchg
imul
cwtl
jl
ja
xor
shrl
xchg
into
int3
jl
aam
xor
jg
pop
mov
push
movsl
push
inc
ja
cmpsl
icebp
adc
sahf
jecxz
popa
neg
cmp
xchg
push
cmc
fldl
pushf
mov
addl
sub
dec
xor
aam
imul
mov
imul
into
std
push
lds
lods
xor
jge
cltd
jmp
and
adc
push
sub
imul
testb
pop
fstps
mov
ljmp
sbb
sbb
mov
out
adc
pop
call
mov
cs
jb
in
or
idivl
mov
daa
or
fs
insb
inc
rcr
ret
jbe
aaa
jl
cmpsl
push
mov
push
jecxz
jle
out
out
lock
mov
push
sub
mov
lea
popf
dec
inc
pop
xchg
jg
test
sub
jae
out
imul
sub
bound
xor
jo
adc
flds
push
push
xchg
aad
jns
jge
fs
sahf
cwtl
mov
inc
jmp
mov
inc
jp
fdivrl
mov
inc
fisubrs
mov
xor
pop
dec
mov
and
bound
cmpsb
xor
mov
ss
inc
ret
sbb
pop
dec
xor
popa
or
push
insb
ljmp
adc
adc
jmp
cs
ja
out
xor
inc
iret
xchg
jb
or
fsubrl
mov
mov
ss
hlt
or
fisttps
outsb
int3
mov
decl
ss
cmp
xor
push
sbb
jmp
and
and
cmp
inc
adc
subl
jns
inc
jnp
in
push
fsubrl
cmp
lcall
scas
add
aad
inc
add
dec
ret
ss
cmp
xchg
xor
loope
in
shlb
fisubl
fdiv
xchg
cmp
rolb
das
lock
fbld
lret
out
loop
ljmp
dec
cmpsl
sub
mov
xchg
cwtl
adc
jns
lahf
test
lret
aaa
clc
scas
jne
pop
je
sbb
cmp
lret
xor
push
popf
pop
and
out
xorb
lods
es
sbb
stc
loope
cmp
lock
fwait
add
hlt
sbb
adc
iret
inc
sar
imul
pop
ljmp
mov
sub
pop
fcoms
cmp
add
and
ret
stos
cwtl
or
mov
pop
int
jb
add
and
cmp
mov
dec
xor
and
push
sub
or
or
adc
loopne
mov
cld
cmp
adc
call
lods
or
adc
push
mov
adc
lret
lcall
push
push
pop
inc
mov
loopne
fdivp
lods
inc
addr16
decb
cld
add
pop
out
mulb
js
mov
and
add
or
subb
fildll
or
les
or
fdivr
out
aad
daa
cs
add
int3
scas
loop
lahf
pushw
xchg
push
icebp
push
pop
adc
arpl
add
cmpsl
icebp
aad
out
repnz
mov
adc
into
jne
bound
sbb
repz
mov
clc
cmp
sbbl
push
and
stos
insl
repz
mov
sbb
cwtl
test
cld
lock
cld
or
out
adc
sti
int3
mov
movsl
idivl
aam
sbb
das
int3
scas
icebp
pop
cmp
cs
lret
pop
pusha
add
mov
rcll
jl
jmp
push
sahf
out
sarb
xor
cltd
sti
mov
scas
jnp
or
jne
pop
sbb
jg
mov
iret
sub
and
pop
fcoms
movsb
insb
sub
mov
jg
outsb
bound
mov
das
mov
push
xor
push
in
add
and
and
ret
mov
mov
bound
xor
xchg
jl
mov
and
ljmp
ret
xchg
mov
stos
add
xchg
std
mov
cltd
fsubrs
lods
pop
mov
push
in
lret
fisubrs
mov
xchg
stc
rol
adc
xchg
xchg
aad
cmp
aas
stc
adc
hlt
xor
jo
and
and
mov
xchg
mov
fdivl
int
cmp
in
clc
push
add
or
syscall
push
mov
dec
jns
imul
sub
xchg
adc
push
aas
adc
sbb
fs
or
arpl
stos
sub
adc
pop
icebp
cmp
arpl
pop
scas
addr16
int
mov
pop
outsb
daa
sub
push
test
xor
push
jmp
subl
popf
outsl
sbb
mov
mov
aad
mov
cltd
jns
lods
rorb
jle
insl
mov
imul
push
pop
sarb
sub
dec
mov
mov
movsl
jbe
pop
xchg
xor
adc
mov
pop
cli
sub
lods
inc
cmp
sbb
dec
in
out
mov
das
mull
jl
or
and
cmp
pop
lods
adc
js
icebp
push
mov
outsb
inc
pop
jecxz
jge
sar
jbe
mov
inc
inc
js
add
add
inc
adc
dec
inc
ljmp
mov
andl
push
pop
dec
jmp
adc
inc
pushf
int
jge
enter
jns
nop
adc
xchg
pop
lret
push
lock
hlt
nop
push
movsl
rorb
cld
push
sbb
jg
mov
mov
pop
mov
dec
or
pop
mov
push
adc
loope
mov
adc
stos
xchg
out
sbb
push
lcall
not
pop
mov
mov
mov
loopne
push
xchg
push
dec
daa
or
push
ret
cmp
push
mov
sub
fmuls
clc
xchg
mov
push
lods
mov
lock
enter
pusha
es
push
and
out
loop
xchg
sbb
push
jp
mov
iret
pop
rcl
call
shrd
test
mov
fwait
popf
dec
or
ret
dec
dec
pop
pop
sub
lods
jbe
cmpsl
rol
inc
mov
out
arpl
xor
stos
xchg
or
push
push
icebp
negb
sub
mov
fsts
divb
xor
out
popf
xor
mov
cmp
and
in
mov
popa
in
sub
jae
xchg
xchg
shl
xchg
repz
or
rcl
xorl
sbb
or
test
loop
mov
ds
mov
pop
loop
out
push
in
dec
pop
xor
in
mov
subps
fwait
dec
rol
jle
test
in
std
sahf
mov
lds
pop
ret
xchg
in
xchg
lods
add
sarb
lcallw
add
add
inc
testb
pop
stos
add
or
data16
pop
adc
stc
push
lds
scas
lcall
cwtl
or
xchg
and
popa
leave
jbe
std
jnp
mov
jge
cltd
push
mov
outsl
xadd
jo
mov
xlat
pop
xchg
iret
popa
and
clc
movsb
xor
sbb
jb
mov
fdivl
jnp
xor
cli
dec
int
mov
mov
adc
cli
xchg
mov
xchg
jmp
je
fildl
sub
sti
inc
sub
aam
out
cmp
test
jb
ret
xor
out
xchg
sahf
xchg
cmp
or
mov
pusha
loope
push
fnstcw
or
decb
xchg
cli
lds
pop
orb
push
inc
sub
push
jmp
sub
cmp
imul
and
sbb
mov
hlt
cli
and
lea
outsb
gs
and
mov
cld
xchg
repz
lods
mov
cli
push
push
test
fdivrs
sbb
ja
aad
push
mov
jle
cltd
mov
push
mov
jne
insl
xchg
mov
jae
mov
leave
test
aad
jp
cltd
rorl
sbb
lret
loope
daa
shll
lahf
iret
fwait
pop
pop
in
frstor
cmpsl
popa
lea
mov
popa
test
inc
sbb
push
pop
push
sbb
aad
fmuls
mov
jae
sbb
in
push
adc
fnstsw
popf
loope
adc
dec
pop
ret
out
mov
push
mov
pop
or
mov
push
loope
in
pop
lret
pushf
adc
xor
int
sub
pop
ret
dec
pop
popf
lods
stos
push
dec
mov
cs
dec
lahf
aad
mov
pop
sub
or
push
lea
mov
aam
mov
into
add
mov
fimull
add
xor
xor
shrl
jecxz
clc
sbb
lods
inc
jo
mov
sbb
jb
ljmp
sbb
insb
das
rcl
int
xchg
sti
in
jp
cmpl
shr
push
shll
pop
sbb
or
lahf
cmc
adc
inc
push
imul
cmc
dec
and
sbb
ss
lret
pop
cmp
xchg
enter
xor
adc
fldcw
seta
scas
jle
xor
dec
xor
frstor
loopne
pop
call
cmp
jl
add
ds
mov
lcall
movsb
lods
or
ucomiss
sub
lret
inc
mov
pop
and
sub
cmp
add
inc
out
jg
jbe
push
adc
sahf
fdiv
ficompl
orl
mov
scas
jb
scas
mov
add
cmp
mov
and
cmc
insl
jb
jl
jo
adc
test
push
sbb
lods
loopne
xor
addb
je
sahf
sub
daa
pusha
mov
sub
test
shlb
test
jg
cmp
cmpsb
in
dec
xchg
rolb
xchg
mov
or
arpl
ja
push
cmpl
gs
inc
add
mov
stos
int3
xchg
repnz
jl
sbb
aas
cwtl
push
sub
ret
adc
fildll
and
shll
jmp
jl
mov
stos
add
enter
or
push
push
pop
int
or
xor
arpl
nop
or
popl
push
jno
scas
out
mov
or
repnz
mov
movsb
and
loope
mov
dec
in
clc
hlt
nop
enter
sub
mov
fcomps
ss
jle
add
mov
aas
popf
lods
cmp
adc
cmc
fdivrl
adc
mov
outsl
dec
pushf
fistl
mov
sub
cmp
jecxz
inc
ret
aas
aad
rorl
mov
test
lods
or
jnp
sbb
mulb
out
mov
mov
xor
fiadds
xorl
dec
or
cmp
leave
mov
pop
xor
lret
int3
inc
movsb
insl
das
test
mov
xor
test
mov
sti
mov
sbbb
cs
mov
cmp
mov
repnz
aas
repnz
movsb
xchg
xor
pop
imul
repnz
inc
mov
fcomi
or
popf
sahf
fcoml
pushf
xchg
and
mull
mov
cltd
push
test
pushf
stos
sar
adc
xchg
hlt
push
das
inc
jmp
ja
fnstsw
pushf
leave
mov
xchg
xor
adc
in
push
lea
nop
mov
repz
aaa
or
cli
mov
rorb
mov
rcrb
icebp
inc
cmp
mov
pop
and
jg
or
xchg
cmp
insl
xchg
fiaddl
fisttps
xor
clc
cli
push
movb
mov
lods
cmp
shrl
mov
in
add
fnstsw
popa
pop
jnp
fcompl
cmpsb
cltd
movsb
popa
mov
loope
cwtl
add
cs
and
jmp
or
stos
sbbb
into
mov
outsb
in
movsl
fcmovb
addr16
lret
out
lock
sub
dec
mov
jno
adc
jnp
push
xor
ret
fmuls
inc
mov
jge
inc
sbb
jle
out
out
fbstp
stos
xor
mov
sub
push
ljmp
mov
leave
aad
jns
ja
mov
push
mov
in
mov
ja
pop
negl
je
inc
loop
sub
imul
xor
push
mov
std
notl
mov
aaa
ds
fisubrs
sub
mov
mov
dec
es
pushf
cmp
and
inc
ffreep
or
inc
stos
push
pop
inc
icebp
cmp
and
mov
or
shl
dec
cmp
ss
inc
add
scas
mov
rclb
cli
aaa
les
xchg
inc
loope
adc
xchg
sub
push
clc
pop
sahf
jo
cmc
in
sub
testb
mov
and
add
ds
mov
dec
mov
je
push
jp
jp
inc
call
push
or
out
fistl
cmp
push
xorb
ror
addl
enter
sub
ret
pop
jp
xchg
repz
cmc
and
int3
fmuls
jae
pop
pop
sahf
xor
pslld
pop
sub
sub
jl
gs
cmp
pushf
ret
xor
fsub
ret
ljmp
scas
push
cmc
cmc
out
popf
sbb
sbb
and
pop
pop
std
addb
decl
out
mov
add
sbb
mov
test
popa
push
ljmp
and
jp
and
push
pop
or
dec
cmp
inc
cmpsb
inc
lret
imull
ja
pop
repnz
pop
fnstsw
mov
ret
xchg
loopne
jp
push
cld
aas
push
mov
jl
add
ret
cmpsb
hlt
push
cmp
loop
mov
jae
in
cli
mov
jne
fistpll
xor
dec
ficoms
inc
sbb
and
insb
push
pop
mov
mov
push
jbe
mov
imul
jne
push
jns
inc
loop
lret
in
cmp
cmc
jmp
adc
bound
adc
popf
push
xor
popf
mov
dec
inc
and
aas
test
lds
push
xchg
fstpt
test
xor
ret
ret
mov
mov
insb
fistpll
and
ja
jle
adc
cmp
jns
cmpsb
jnp
or
je
xchg
into
cltd
jno
mov
pop
into
xchg
cmp
hlt
mov
jle
leave
sub
pop
sub
add
lock
pop
imul
pop
or
mov
popa
loopne
loope
inc
movsl
lods
pop
roll
push
mov
leave
dec
pop
xor
loop
xor
aam
loopne
mov
xchg
in
mov
out
js
jmp
dec
mov
pop
push
in
aaa
loop
jno
mov
xor
and
ds
mov
sti
imul
rcr
ds
sbb
sahf
cltd
or
rclb
xor
cmp
rorb
out
mov
ljmp
nop
lds
rcl
enter
idivl
adc
pop
lods
mov
jnp
stc
cmp
imul
jp
push
fidivrl
adcl
xchg
mov
inc
ljmp
push
cld
or
sti
add
mov
ss
pop
stos
mov
sbb
inc
notl
or
icebp
rorl
loopne
sbb
mov
sub
or
inc
jp
pusha
fldl
les
sahf
xor
ss
xchg
mov
pop
jns
jns
add
lds
push
or
inc
mov
ret
aas
js
movsl
jne
ja
dec
pusha
lret
pop
sbbb
xlat
dec
cmc
cld
out
cmc
dec
xor
cs
je
cmp
sub
les
data16
sahf
sbb
sbb
pop
mov
adc
popf
les
push
mov
mov
mov
pop
cmp
push
add
sbb
xchg
fcoms
mov
dec
dec
xorb
orl
stos
sub
filds
cmp
ds
pop
inc
push
xchg
cmp
cmpb
or
dec
adc
test
fwait
movsb
inc
out
subl
out
in
insb
aas
loopne
hlt
mov
dec
mov
mov
jnp
mov
pop
sbb
outsl
lcall
sub
fidivrl
mov
pop
fnstsw
fdivrs
leave
add
mov
mov
dec
addr16
mov
push
xchg
jmp
leave
fstpt
inc
push
dec
cmp
jnp
or
sbb
call
sbb
push
std
or
add
sbb
fbld
cs
inc
xchg
or
jg
jl
ss
mov
and
jge
sbb
jecxz
jp
aad
mov
cltd
mov
mov
push
mov
insb
jae
adc
in
fwait
clc
aaa
popf
cmc
in
adc
dec
jmp
inc
sahf
push
sti
mov
jge
lcall
addr16
cltd
jge
fsubs
push
outsl
adc
pop
mov
push
jle
jle
ficoml
sbb
dec
or
xchg
dec
mov
pop
std
popa
ljmp
imul
shll
pushf
es
adc
jg,pt
sub
lds
stc
shll
add
mov
fistpll
movsb
fisubs
inc
popf
fdiv
sub
pop
in
xor
into
and
loopne
mov
lret
pop
ljmp
sbb
or
loop
lock
cld
jnp
cmp
test
scas
js
dec
add
iret
js
gs
dec
xchg
das
mov
add
fdivrs
jo
jmp
push
enter
jnp
xchg
mov
out
mov
out
adc
repnz
leave
leave
jmp
lods
pop
out
xor
mov
aaa
xchg
jns
jecxz
mov
or
jbe
adc
mov
pushf
mov
jae
cmp
ds
jecxz
fbstp
decb
pop
jno
cld
jl
mov
dec
enter
inc
dec
nop
mov
cmp
pop
xlat
ret
sub
xor
daa
and
or
mov
mov
and
inc
cmp
push
mov
xor
and
or
loop
ret
clc
push
push
in
aaa
dec
into
pop
sbb
push
aaa
out
or
push
xchg
add
push
sub
pop
cwtl
dec
icebp
xchg
mov
inc
push
cwtl
xor
add
mov
xor
or
inc
mov
cs
daa
pop
scas
sahf
jmp
sub
add
or
scas
push
movsb
in
add
cmp
popa
or
imul
xor
sub
les
xchg
stos
mov
insl
or
enter
push
daa
cltd
cmp
leave
repz
jg
test
dec
icebp
ret
pop
sbb
sub
dec
jmp
rolb
push
push
adc
jno
lahf
daa
into
aad
push
ss
mov
sbb
add
test
mov
push
and
call
out
add
divl
clc
xor
jo
sub
push
adc
stos
adc
adc
arpl
xchg
jge
push
stos
inc
xchg
xor
adcl
jg
or
mov
adc
sarl
xchg
jecxz
pop
popa
mov
inc
pop
iret
mov
xor
adc
jo
stos
fwait
mov
pushf
or
jecxz
adc
adc
stos
xor
rcll
cmpsb
imul
divb
je
push
test
add
cmpsb
xor
mov
bound
shrb
mov
dec
idivb
xchg
pop
jmp
jnp
inc
enter
push
pop
outsb
mov
xchg
xor
and
aam
sbb
pop
push
inc
imul
mov
jp
stos
mov
stc
ret
add
imul
add
lea
xchg
iret
fnstenv
pop
iret
pop
xchg
fisttps
ss
lock
out
adc
popf
leave
xor
inc
mov
fstps
push
adc
mov
xchg
out
add
mov
test
es
scas
sahf
mov
jae
xchg
das
out
pop
jle
add
mov
mov
xor
pop
pusha
jle
inc
repz
movsb
call
aam
push
lock
sahf
cmp
sbb
jge
and
xor
inc
mov
xlat
jle
xor
mov
sub
jns
jmp
aam
ftst
sahf
sbb
jbe
insb
and
adc
jne
flds
push
mov
mov
inc
call
and
xchg
xlat
mov
clc
ja
and
inc
add
pushf
sbb
fsubrs
test
es
xor
mov
xor
in
sbb
push
out
sub
lock
pop
inc
and
cs
mov
pop
pop
data16
jo
out
fdivr
cmpsl
je
sbb
mov
fmull
lea
adc
cs
rclb
loopne
pop
xchg
push
mov
fdivs
add
in
std
mov
pop
hlt
pop
data16
out
fldl
push
adc
pop
enter
add
xchg
cmpsb
push
pushf
ja
mov
lods
inc
mov
popf
adc
rolb
shl
das
mov
xchg
cmpsl
stc
and
xchg
mov
enter
push
add
and
pushf
push
lret
jge
scas
dec
das
pop
loope
jnp
lretw
aam
shl
decb
mov
in
lock
fnstenv
xchg
stc
lcall
mov
call
nop
test
pop
outsb
loope
dec
fildl
xchg
stc
pop
icebp
mov
das
je
pushf
fs
cmp
inc
inc
imul
dec
sub
push
mov
mov
arpl
xchg
mov
lcall
stc
xor
fisttpll
pop
mov
sahf
imul
ja
mov
jno
lret
fidivl
testb
add
xlat
ret
cmp
nop
ja
loop
xor
inc
movsl
test
mov
lds
dec
shrl
push
lcall
sbb
daa
notb
inc
imul
add
in
adc
or
cmp
ret
shlb
and
mov
xchg
fstpt
pop
xor
out
pop
fs
arpl
xor
in
pop
push
mov
sbbl
xor
jbe
outsb
mov
iret
xchg
ljmp
cmp
cmp
pop
loopne
sbb
dec
mov
mov
rorb
data16
and
jl
pushl
or
repnz
rcrl
xchg
lea
push
push
out
jp
xchg
pop
out
and
jecxz
test
xorl
pop
xchg
sub
push
pop
stos
fnstenv
mov
and
push
xor
or
pop
insl
stos
out
dec
ret
cmp
pop
inc
dec
inc
pop
outsb
icebp
fwait
stc
daa
std
jge
out
sub
sbb
lahf
arpl
push
mov
gs
imul
stos
mov
out
aam
push
mov
out
sub
inc
in
adc
mov
std
ret
dec
mov
icebp
mov
pop
xchg
ja
inc
lcall
in
int3
pushf
lds
int3
ret
ficompl
test
or
loope
or
fbld
lea
lods
arpl
sahf
bound
adc
jl
mov
mov
and
xor
xchg
das
mov
loope
jge
ret
call
scas
bound
mov
dec
lock
idiv
jl
out
movsl
sbb
and
popl
push
xchg
clc
bound
sbb
dec
jb
inc
push
mov
add
mov
cmpsb
or
data16
leave
dec
xor
pop
mov
dec
into
insb
jae
cld
add
dec
xor
clc
addb
imul
out
cmp
xor
jne
jo
adc
cmp
rcr
arpl
and
add
add
lret
cmp
adc
fwait
clc
sbb
or
leave
xchg
nop
lea
std
mov
loop
lods
xor
inc
out
inc
in
cwtl
or
movsl
lods
add
lcall
pop
js
push
push
ror
pushf
jle
push
fildl
mov
loopne
notl
sbb
shrl
jp
dec
stos
jnp
pop
cli
enter
mov
jne
jmp
dec
or
ljmp
sbb
aad
jnp
cli
ds
test
jge
ss
test
sub
and
scas
lds
add
int3
or
ljmp
push
cmp
and
and
test
mov
insb
cmp
mov
iret
mov
xchg
bound
rolb
rcrb
xchg
popf
fnsave
push
mov
scas
mov
mov
mov
lret
push
popa
push
push
stos
sub
lahf
cltd
adc
popa
dec
xor
jno
mov
loopne
stos
mov
inc
mov
add
popl
stos
lea
push
popa
jmp
fidivrl
lock
stc
lcall
insl
pop
std
sub
mov
dec
jne
in
loop
xor
push
aad
test
cmpsl
or
pop
cmp
test
je
sub
cmp
imul
shlb
aad
and
xor
dec
jne
in
adc
adc
loope
or
mov
or
push
mov
pop
inc
and
cmpsb
jg
inc
ljmp
pop
pop
xchg
lods
imul
and
cmp
lret
add
cmp
xchg
outsl
ljmp
data16
sbb
pop
outsb
lret
out
fisubrl
iret
mov
ret
sahf
fdivrp
lahf
dec
jp
mov
addl
xor
mov
cmpsl
jnp
or
jl
test
iret
mov
call
xchg
pop
cmp
xor
xchg
mov
cmp
sbb
cwtl
aad
arpl
mov
inc
add
jae
cwtl
push
das
dec
sbbb
ds
mov
sub
pushf
or
mov
addr16
jbe
mov
popf
pop
movsb
stc
inc
inc
pop
sti
rcrl
daa
lcall
xchg
sbb
mov
and
inc
jb
test
dec
aad
jno
and
or
cmpsb
mov
jecxz
mov
into
mov
sub
jno
adc
pop
adc
cmp
shl
push
cltd
outsl
mov
pop
pop
sahf
pop
sbbl
das
sbb
jae
push
pop
notl
cld
inc
sbb
pop
push
or
dec
flds
lcall
inc
adc
ds
push
adc
clc
fcomps
jbe
inc
repnz
out
jmp
jg
clc
arpl
pop
test
rorb
lret
gs
push
subl
push
jne
jne
in
loope
mov
aam
clc
fildll
inc
pusha
inc
jns
outsl
pop
orl
repnz
lret
xor
bound
jmp
enter
test
pop
jmp
add
das
ss
imul
mov
pop
lea
xor
insl
pushw
push
addl
jecxz
cmpsb
test
imul
inc
jno
lds
shl
push
stos
inc
mov
jo
jno
sti
push
cmp
js
outsl
mov
pop
cwtl
adc
push
inc
icebp
fcmovnb
pop
std
dec
mov
inc
cmpsb
mov
push
push
leave
sarb
mov
imul
and
mov
jo
dec
dec
sub
push
outsl
add
pop
cwtl
fs
imul
xchg
sbb
mov
lock
fisubrs
xchg
rorl
les
jns
xor
gs
outsl
in
dec
test
andb
adc
push
pop
les
adcl
xchg
pusha
loope
sbb
adc
je
mov
call
mov
sub
xchg
leave
adc
dec
test
and
sti
pop
mov
les
test
sbb
rclb
sti
sbb
sbb
adc
mov
xchg
or
pop
add
dec
xor
pop
inc
xor
mov
loop
pop
or
xor
and
sub
out
sbb
pop
add
out
imul
adc
mov
sbb
mov
mov
lret
loope
mov
mov
je
aaa
imul
mov
arpl
int
icebp
pop
inc
rcll
es
sbb
sbbb
pop
xchg
pause
pop
fcompl
or
addl
and
fstpt
sub
test
xchg
jno
push
xor
jle
adc
in
sub
hlt
mov
cltd
loope
mulb
push
sub
and
scas
sub
icebp
xchg
in
ds
loopne
dec
aam
inc
mov
xor
lea
and
pop
sub
adc
jb
clc
fprem1
xlat
rcrl
mov
jo
or
bound
inc
push
test
mov
out
jno
repz
ljmp
push
dec
inc
push
sbb
push
loope
fimull
pushf
push
mov
xor
and
xorb
or
pop
add
push
mov
cmp
lods
adc
lret
cltd
insl
nop
ffreep
test
dec
fmul
mov
cli
mov
mov
sbb
sarb
jns
sti
fdivrs
jle
mov
stos
lock
inc
mov
je
push
mov
stc
push
sub
outsb
cmp
test
xchg
xor
daa
shll
pop
loop
mov
cli
fstps
or
mov
lahf
jl
mov
inc
and
and
push
shrl
jbe
movsb
mov
xor
cmp
gs
fimull
xor
add
loop
stc
pusha
mov
dec
push
test
pop
repz
neg
fstpl
add
sti
sub
test
imul
std
pop
sub
pusha
lds
pusha
mov
mov
mov
push
cltd
jle
xchg
cmpsl
outsl
cmp
js
mov
mov
fistpll
lods
cmp
jb
mov
mov
push
lea
lock
cli
ljmp
jecxz
sbb
arpl
mov
push
insb
mov
dec
mov
xor
push
xchg
loopne
xchg
jle
push
mov
pop
fucomi
out
lock
cmp
inc
shlb
add
cmpb
cltd
mov
mov
sbb
sbb
and
orl
jne
dec
dec
mov
sub
dec
repz
test
sbb
bound
xor
test
sbb
xor
das
mov
rorb
test
out
mov
loope
push
aaa
enter
in
sub
and
adc
daa
test
je
jl
adc
iret
ljmp
iret
push
push
and
data16
aad
mov
imulb
es
dec
sbb
fisubs
sbb
push
or
ds
jge
push
into
aas
fiadds
sbb
xor
je
mov
scas
push
fwait
push
mov
mov
cld
jecxz
aaa
jl
add
sub
add
inc
push
jne
or
pop
xchg
pushf
adc
lea
int3
aam
jae
scas
adc
test
mov
in
loope
sub
addb
fistl
nop
dec
mov
xchg
dec
mov
push
xchg
cs
xchg
imul
stos
pop
test
in
mov
lds
popa
adcb
ret
push
psrld
mov
mov
xor
data16
imul
loopne
cltd
xor
jmp
fildll
fwait
jbe
inc
cmp
hlt
movsb
push
std
and
push
negl
xor
imul
repz
mov
setp
jmp
pop
jnp
ficoml
cld
mov
out
sbb
push
pushf
pop
sub
cmp
mov
dec
mov
and
push
test
inc
cmp
jae
sbb
fmulp
bound
dec
out
popa
jecxz
pop
arpl
mov
inc
leave
and
jb
mov
mov
iret
adc
adc
or
mov
mov
xchg
test
xor
mov
out
in
pop
sub
xchg
sti
lret
scas
je
outsl
and
mov
or
iret
inc
icebp
das
rorb
test
pushf
mov
fcmovb
inc
sub
mov
xchg
xchg
fwait
mov
fidivl
fldt
dec
add
in
inc
jg
pop
and
ficoml
push
out
into
aam
inc
int
xor
mov
sbb
dec
mov
pop
push
xchg
jl
les
orb
js
cmpsl
inc
push
jge
cmpsl
adc
ss
xor
lcall
faddl
push
pop
jae
xor
fstpl
mov
rol
inc
add
push
pop
iret
and
dec
and
mov
fnstcw
std
mov
xchg
xor
cmp
cmp
cwtl
addl
in
sbb
sub
rcrb
adc
jl
inc
and
cmp
inc
into
in
insb
sub
pop
dec
sbbl
or
cwtl
lcall
and
ret
xor
neg
or
jb
jo
repz
inc
mov
push
xchg
aad
rcrl
sbb
ret
jne
xchg
mov
lret
jle
jbe
stos
popa
mov
ret
notl
cwtl
pop
fsubl
sub
xor
das
and
push
cmp
xchg
movsb
sbb
mov
xchg
inc
test
sbb
dec
dec
out
pop
aas
fildll
gs
pop
pop
scas
icebp
fs
mov
adc
add
fs
ret
cmp
adc
xor
jo
negl
sahf
lea
lods
inc
sub
mov
inc
mov
ds
or
std
push
sub
push
orb
out
push
mov
inc
scas
pop
xlat
int
cwtl
in
xchg
test
cmp
iret
xor
clc
jbe
pop
aad
cmp
aam
nop
data16
mov
fnstsw
sbb
or
fists
mov
xchg
or
add
sahf
mov
xor
movsb
inc
pusha
cmp
jb
xchg
andb
mov
xchg
pusha
gs
mov
pop
jmp
fdivrp
xchg
test
repnz
es
hlt
jae
mov
mov
xchg
daa
and
push
pop
leave
inc
sbb
hlt
xchg
pop
or
inc
push
or
add
aaa
rorl
push
inc
fadd
das
outsl
dec
cmp
sbb
in
xchg
ret
arpl
inc
nop
ret
in
in
std
sub
notb
pop
sbb
jg
pop
mov
popf
sbb
cld
dec
lret
sahf
cwtl
outsl
inc
out
adc
cwtl
sbb
cmc
cltd
testb
mov
movsl
mov
mov
pusha
mov
cmp
mov
mov
mov
or
ss
mov
ret
jge
sbb
adc
adc
sbb
outsb
ds
scas
inc
stos
push
fnstenv
pusha
popf
ret
jns
cltd
inc
xlat
mov
dec
sub
pop
lods
cmp
mov
mov
jp
xchg
sbb
pop
mov
xchg
inc
mov
jp
or
fbstp
imul
mov
cmp
js
les
out
inc
ja
push
hlt
ss
mov
stos
stos
je
jo
jae
mov
mov
test
jl
pusha
movsb
es
adc
je
pop
gs
xor
push
mov
mov
test
add
cmp
int
imul
jno
lds
and
xchg
add
xor
cwtl
adc
test
lods
fwait
stos
push
test
or
push
pop
or
sahf
or
inc
mov
inc
push
jo
mov
cmp
mov
testb
add
xor
and
lret
out
sub
cmp
pop
out
lds
shrl
push
jno
aad
in
sbb
jae
es
adc
daa
inc
andl
xor
jle
xor
insl
jb
stos
push
push
stc
push
stos
cmpb
add
sbb
cmp
iret
jp
lock
test
ljmp
sub
mov
aas
adc
popf
outsb
inc
pop
inc
mov
insl
lods
insb
jge
mov
ds
cmp
sbb
lret
jecxz
leave
fcoml
xchg
push
dec
lcall
imul
xlat
jl
aam
andl
jmp
cwtl
aad
pop
jne
fs
inc
mov
fidivl
inc
out
mov
or
pop
cmp
sub
sub
fisubl
cmp
adc
adc
dec
loop
mov
mov
es
cwtl
ds
xor
push
test
sub
pop
cmp
rcll
jnp
push
stos
test
or
fldcw
div
xchg
aaa
ljmp
dec
loope
mov
inc
dec
stc
sub
add
scas
stos
sbb
mov
pop
cmp
or
pusha
nop
adc
out
inc
leave
cmp
and
add
stc
jp
jmp
mov
leave
notb
xchg
dec
outsl
push
sti
mov
pop
mov
popa
les
sub
pop
sbb
sbb
cmp
test
jl
jae
inc
mov
das
fwait
shll
sbb
dec
push
mov
fstl
sbb
or
stos
or
sbb
cmpsb
cmp
dec
pop
mov
xchg
adc
dec
nop
mov
gs
jge
mov
sub
add
lret
js
pop
inc
ds
pop
jb
test
mov
cmp
sahf
jmp
sqrtps
mov
std
mov
pop
test
push
jge
rorl
lret
dec
push
and
dec
das
inc
rclb
int3
scas
fwait
mov
sti
add
enter
jb
insb
jb
int3
sub
cmp
jbe
aam
scas
test
scas
dec
adc
and
mov
sbb
dec
jmp
mov
inc
fisubrs
ficoml
jb
insl
std
inc
xchg
iret
test
push
lcall
rclb
int3
jae
push
mov
int3
and
add
xor
push
lods
lahf
lds
cltd
in
rorl
inc
lea
lcall
xchg
mov
jbe
jmp
dec
xor
pop
pop
rcrl
pmaxsw
aam
xchg
inc
andl
pop
push
addl
jl
adc
sahf
sti
in
pop
add
ret
inc
xchg
imul
dec
xchg
imul
inc
pop
xchg
fstpl
pushf
scas
shlb
mov
loopne
in
jl
pusha
inc
and
or
loop
fisubl
jbe
outsl
notl
pop
scas
pop
xor
xor
aam
loope
jg
push
scas
call
popa
sbb
or
call
testl
push
movsl
mov
push
and
fcoms
pop
addr16
cmc
mov
sbb
imul
mov
sbb
jge
lea
cli
dec
xchg
dec
sub
sub
mov
adc
xchg
or
xor
fistps
mov
add
adc
dec
xchg
jnp
xchg
sbb
mov
xor
imul
xor
push
cli
sbb
push
sbb
pop
outsb
pop
aaa
rcrb
test
in
push
jae
lock
cmp
sbb
sub
loop
gs
inc
or
lahf
sub
inc
adc
push
shll
cmp
fldcw
sbb
cld
mov
pop
sbb
add
dec
sbb
cmp
pop
test
mov
pop
cmc
or
sbb
inc
mov
dec
subb
das
jne
cmp
sbb
and
stc
fimuls
mov
call
pop
imul
cmp
cmp
fwait
pop
jle
mov
pop
jno
inc
mov
stc
adc
mov
test
mov
cmc
outsl
lods
outsl
fisubrl
js
mov
adc
sub
data16
push
jne
shll
mov
fisubrs
popf
jge
int
je
adcb
test
icebp
mov
cld
nop
or
adc
test
dec
lret
cmp
adc
sbb
cmp
mov
sbb
sbb
sti
fdivs
cld
stos
sarl
push
push
mov
or
sbb
ret
jmp
popf
or
sbb
test
or
or
pop
test
cmc
lds
xchg
push
nop
xchg
ss
or
fwait
jmp
popa
mov
out
add
mov
sub
lret
jb
push
dec
push
xor
adcl
jae
adc
loope
xchg
test
scas
popf
movsl
mov
dec
aaa
mov
pop
fs
movsl
push
shlb
gs
jp
xchg
sub
cld
cld
ds
or
push
adc
xchg
mov
fsubs
in
pop
div
adc
push
or
rcrb
movsl
push
cld
mov
int3
jo
mov
imul
aaa
xor
mov
fwait
xchg
stc
adc
insl
cmp
cmp
mov
cmp
gs
mov
jno
xchg
xor
fnstcw
popl
xchg
scas
jg
arpl
ficomps
call
sahf
outsb
enter
out
es
push
sarl
sub
cmc
mov
mov
leave
adc
es
cmp
or
aam
mov
mov
in
imul
pop
mov
sub
stc
add
inc
iret
sbb
shl
push
dec
clc
inc
dec
ds
insl
loope
ljmp
push
into
sbb
sbb
dec
ffreep
pop
mov
scas
roll
mov
mov
dec
xchg
cli
ds
sbb
lock
int3
inc
mov
sbb
and
arpl
scas
pop
sub
cltd
mov
aam
sbb
push
adc
fsubs
loop
cmp
je
jge
mov
fildll
cmp
push
jne
pop
lcall
jbe
sub
cltd
mov
xor
ds
rcrl
xchg
push
cmp
add
ljmp
lret
adc
add
shl
sub
jae
adcb
repnz
popf
loope
lods
hlt
popf
mov
stc
movsb
dec
jp
mov
inc
push
aad
cmpsb
inc
jbe
lods
jle
fnstenv
pop
adc
es
mov
mov
lods
adc
out
and
bnd
push
fmuls
xchg
clc
lahf
icebp
pop
data16
jmp
adcl
cmp
mov
test
js
jno
test
xchg
insb
mov
pushf
inc
dec
into
in
pop
ss
pusha
rclb
dec
or
add
in
lods
xchg
test
enter
in
ja
inc
jo
jle
cltd
call
or
push
in
lahf
stos
sahf
popf
cwtl
or
mov
push
and
mov
pop
movsl
add
lock
fldcw
xor
inc
test
ds
inc
pop
fistpll
iret
mov
or
lea
sub
lds
jge
mov
sub
aas
jo
xchg
push
dec
add
jmp
in
lret
int
ret
push
inc
push
test
test
dec
hlt
push
or
mov
xchg
sbb
dec
pop
in
cmp
jle
outsl
push
jmp
movsl
in
push
lcall
inc
loop
sbb
or
xor
lret
adc
inc
in
inc
mov
push
push
pop
jle
jl
xor
push
pop
mov
mov
daa
aad
mov
out
sbbb
mov
mov
jmp
aam
xor
adc
int
dec
xchg
std
jp
cs
rorb
push
lret
fucomip
pop
inc
dec
mov
inc
lahf
aas
xchg
movsb
fiaddl
xor
jne
sub
push
mov
xor
xchg
or
enter
sti
mov
popa
pusha
ljmp
or
sbb
int3
cli
roll
push
xchg
scas
repnz
incl
mov
mov
stos
mov
in
xor
sub
adcb
fiadds
ret
mov
add
pop
daa
and
cmpsb
push
movl
mov
dec
sub
call
pop
jmp
push
sbb
pmovmskb
rcl
and
pop
pop
jg
xor
mov
in
cmp
lea
push
movsb
cmp
mov
mov
aam
xchg
xor
aad
or
mov
push
call
and
mov
inc
cmp
xchg
pushf
mov
dec
cmp
fnstcw
xor
scas
xchg
mov
jecxz
sbb
push
enter
fwait
inc
hlt
sub
lret
add
add
inc
cli
fldenv
sbb
xor
push
lods
mov
cmp
or
cmovne
popf
leave
das
sbb
xor
sarb
push
sbb
xor
repnz
nop
inc
adc
jecxz
sbb
loopne
or
mov
sbb
mov
idivl
aam
data16
imul
sub
insb
inc
std
adc
dec
clc
daa
loope
or
jle
jmp
jne
fisubl
les
adc
mov
pop
repnz
pop
jns
fnstenv
fiadds
popf
jb
sbb
mov
mov
lcall
pushf
jmp
mov
in
xor
pop
and
or
cwtl
pop
fabs
lea
xchg
sub
aad
and
mov
das
mov
add
lcall
outsb
les
sbb
loop
cld
lock
enter
mov
lret
mov
sarb
mov
mov
add
and
movsl
out
shlb
xor
test
test
mov
sti
jg
lds
pop
or
lcall
add
pop
mov
jnp
aaa
mov
scas
in
push
in
ret
aas
cmp
outsb
insl
dec
lock
pop
leave
lret
cwtl
arpl
mov
push
aaa
adc
out
inc
jle
inc
lods
scas
xor
inc
add
mov
aad
dec
rorl
inc
cmc
pop
xchg
nop
dec
push
pop
lea
idivl
sub
mov
mov
jbe
insl
ret
xchg
das
fbld
cmp
in
xor
pop
xchg
sbb
inc
jp
pop
in
lods
mov
test
add
sub
insl
cs
mov
loop
std
lret
sbb
mov
xor
xor
add
ret
popa
push
fidivrl
and
sub
in
iret
push
cmp
sti
add
lea
lods
dec
testb
pop
fucom
adc
xchg
pop
and
adc
cmp
call
jecxz
adc
hlt
or
scas
inc
and
rolb
ljmp
dec
sbb
xchg
loop
add
out
sti
sub
fcmovnbe
inc
add
push
xchg
and
push
in
in
or
sbb
lahf
cmpl
aam
jge
nop
add
dec
push
mov
call
lea
hlt
fistl
jnp
jle
xchg
sbb
mov
sub
int3
jae
das
push
pop
in
jg
cmp
adc
xchg
inc
jg
stos
mov
nop
repnz
fisttps
movsb
sbbb
shrl
jmp
pushl
push
mov
mov
mov
lods
es
push
sbb
pop
stc
cmp
daa
aad
sub
mov
setb
into
mov
les
mov
rolb
fmulp
add
fwait
jg
imul
xchg
sub
fldt
add
cmc
bound
mov
js
xor
pushf
cli
mov
jl
fdivp
mov
adc
fwait
push
ret
mov
jecxz
pusha
pusha
out
sub
xor
mov
roll
mov
ds
add
repz
jno
inc
mov
fst
ficoms
mov
jge
js
cwtl
mov
pop
lcall
pop
xchg
scas
loope
sti
and
test
lcall
xchg
sbb
mov
lock
es
std
fnsave
xor
cmpsl
jns
das
mov
or
aas
cmpsl
jle
mov
es
insb
xor
jnp
mov
out
arpl
repz
pop
xor
dec
int3
test
leave
mov
cmp
mov
dec
sbb
mov
xor
inc
adc
fidivrl
dec
inc
dec
adc
jne
mov
call
std
insb
fcomp
cld
shl
push
addr16
imul
scas
mov
push
dec
mov
sub
outsl
fwait
push
pop
xchg
aad
mov
mov
inc
mov
mov
les
call
sbb
xor
cmp
and
popf
add
mov
sub
add
cwtl
and
aas
adc
scas
stos
dec
jg
std
clc
repz
aaa
jne
sbb
dec
jnp
xor
push
mov
mov
cmp
stos
push
std
mov
popf
inc
dec
inc
inc
mov
pop
aad
pop
xor
in
test
sbb
xchg
inc
mov
daa
add
pop
or
xchg
in
stos
lret
pop
xchg
cltd
dec
out
mov
dec
and
sbb
dec
fsub
xchg
das
ret
mov
rcrl
xor
lahf
fcomi
jl
popf
cmp
and
pop
stos
add
out
cmp
rolb
mov
pop
or
ficompl
jo
xchg
repz
sbb
cmp
sbb
push
mov
dec
xchg
ja
mov
insb
pop
sub
repz
sbb
fstps
mov
push
arpl
mov
int
cltd
sbb
into
xchg
sub
sub
loope
sbb
cmc
mov
inc
dec
mov
ss
fs
and
push
popf
rol
cmp
push
or
mov
mov
sbb
jo
aaa
adc
add
icebp
xchg
cs
lret
shll
cmc
jl
mov
imul
pop
sbb
imul
cmpb
int3
and
aam
or
xchg
dec
push
sbb
xchg
ds
and
js
mov
rorb
andb
dec
adc
push
cmc
repnz
jnp
inc
mov
into
cmp
add
shll
push
push
ja
scas
xchg
sub
pop
mov
mov
in
jmp
mov
sub
mov
aad
cmp
xor
adc
orps
icebp
adc
add
adc
loop
mov
test
xor
mov
mov
add
test
push
inc
ret
pop
xchg
shrb
dec
xchg
ret
jbe
fucomp
pop
mov
inc
nop
test
mov
xchg
inc
iret
xchg
dec
jae
lcall
in
movsl
repz
adc
jg
add
scas
dec
jne
inc
cmp
sbb
inc
jbe
out
lock
arpl
addr16
out
scas
xchg
jnp
jb
add
shrl
jecxz
je
xchg
cmp
pop
sub
cwtl
scas
add
cli
adc
and
push
pop
sub
mov
jmp
jg
in
or
inc
pop
sub
sub
xor
mov
pushf
push
cmpsl
inc
inc
jp
clc
push
push
xor
or
mov
pop
das
jne
loop
enter
jo
gs
inc
cmp
xor
into
cli
leave
sub
lret
jg
and
outsl
add
add
push
jo
jnp
std
in
stos
subb
pusha
push
cmp
sbb
mov
jecxz
jb
mov
scas
pop
into
dec
mov
lods
push
dec
xchg
popf
jg
or
jbe
rcll
cltd
stos
sbb
xchg
inc
or
leave
movsl
jne
fsub
frstor
sbb
sub
sarb
adc
mov
aam
mov
fildll
sub
sub
mov
inc
stc
pop
or
pop
test
cmp
cld
inc
aaa
mov
add
dec
sub
inc
nop
adc
sub
aad
es
jp
das
jno
outsl
sti
std
push
mov
pushl
mov
sub
popa
sub
out
repz
jge
out
lret
sub
jno
pop
scas
dec
sbb
or
sub
pusha
xchg
imul
lret
jmp
dec
push
mov
cmpsb
jno
in
mov
push
aam
mov
int3
adc
incb
adc
enter
jl
jnp
ljmp
push
pop
xlat
mov
cmp
bound
push
mov
test
jo
jle
rclb
outsl
or
rcll
stos
leave
or
test
faddl
loopne
mov
sbb
add
sbb
jmp
push
in
icebp
call
nop
push
pop
je
aas
cmpsl
cltd
sbb
jmp
pop
iret
rorl
pop
push
push
mov
pushf
pop
dec
inc
stc
imul
aaa
cmpsb
or
andb
daa
cltd
push
mov
fisubs
xor
xlat
dec
out
xchg
inc
fs
imul
sub
push
fidivrs
lea
dec
imul
sbb
jne
mov
movsl
lret
jae
je
rorb
lret
add
test
push
push
xchg
in
je
nop
mov
adc
dec
ret
lcall
notb
push
pop
insb
sub
insl
mov
hlt
enter
push
xor
jne
fistpl
in
push
mov
sbb
nop
icebp
xchg
jbe
popf
add
ffree
fwait
bnd
push
int
add
out
cmp
xchg
mov
jecxz
loope
lds
in
add
clc
loope
cmp
jae
inc
stos
add
call
mov
dec
ds
frstor
aas
xchg
divl
mov
aaa
or
jae
xor
cmp
and
mov
mov
sbb
fisubs
lods
pop
cmc
push
loope
sahf
insb
or
les
sbb
xchg
sahf
jae
jnp
inc
aad
mov
aaa
xor
hlt
mov
cli
mov
pop
shl
repnz
cmp
fisubrs
jge
aas
ret
adc
rcrb
sbb
jp
pop
inc
xor
or
xchg
mov
mov
lahf
push
cmp
sbb
jae
sbbl
and
testl
cmpl
gs
push
inc
dec
xchg
dec
sahf
pop
mov
mull
icebp
iret
lock
fstpl
inc
movsb
dec
jge
movsl
or
std
fcomp
or
das
add
lahf
or
sub
sub
sub
cwtl
add
add
xchg
cmp
rcl
fsubs
cmp
or
insb
enter
mov
cltd
sub
cmp
dec
push
adc
mov
cmc
loop
lods
mov
inc
push
leave
fmuls
or
jno
fnsave
rolb
mov
decb
mov
ljmp
and
lods
cli
push
jnp
push
xorb
xor
pavgb
pop
xlat
jne
add
popa
jo
sub
div
outsb
mov
scas
and
fs
push
imul
in
ljmp
dec
sub
les
mov
push
cli
rcl
adc
inc
and
negb
xorl
xor
cmpl
popa
int
jnp
hlt
popa
in
add
xorb
divl
mov
nop
add
icebp
sub
mov
lock
push
xor
ret
dec
out
sti
test
leave
call
movb
inc
in
out
shll
repz
xorl
lret
jmp
adc
sub
xchg
stos
fldenv
jo
movsb
push
sbb
flds
loopne
repz
les
aaa
push
lods
inc
loop
insl
clc
aaa
sub
lods
or
cltd
mov
bound
scas
inc
nop
pop
push
cwtl
mov
pop
sbb
push
aas
sub
mov
sti
out
push
popa
ja
push
mov
mov
push
test
xchg
jge
aad
add
pop
dec
mov
mov
push
sti
jmp
pop
pop
add
push
mov
jb
add
sbb
nop
jmp
sbb
adc
stc
cwtl
push
mov
push
addl
aad
mov
outsb
xchg
mov
pop
mov
or
sti
dec
cltd
shlb
popa
loope
or
xchg
pop
ja
fisttpll
pcmpeqb
movsb
lds
and
rolb
cmp
xor
or
push
push
push
rorl
call
jbe
into
xor
das
mov
xor
iret
jno
sub
lods
sbb
push
jmp
add
xlat
js
arpl
aas
mov
iret
sbb
adc
cmp
xchg
fiadds
sahf
lock
jb
sub
bound
push
jo
scas
mov
add
shr
unpcklps
mov
or
in
iret
pop
fildll
mov
inc
or
js
xchg
mov
mov
jecxz
pop
cmp
jge
inc
adc
es
cmp
push
mov
fnsave
pop
mov
adc
dec
ljmp
mov
movsl
mov
mov
inc
push
adc
sbb
ficoml
or
cmc
sbb
inc
jecxz
sbb
or
insl
cwtl
imull
mov
repz
pop
mov
aad
jae
jne
imul
fwait
jmp
ljmp
pushf
inc
pop
or
jno
mov
clc
stc
cltd
int
add
mov
testb
movsb
inc
in
pop
add
mov
push
sbb
xchg
into
aam
pushf
mov
movsw
push
push
lods
stc
lahf
scas
sbb
add
xor
in
push
xlat
xchg
jmp
cmp
shr
push
stos
orb
cmpsb
pop
out
add
fs
lea
fsts
loopne
dec
mov
push
cld
xchg
lcall
outsb
fistl
sar
mov
das
in
clc
push
jne
sbb
pop
and
or
and
rcrl
ror
int
jb
repnz
push
push
jge
loopne
sub
sub
mov
test
xchg
cld
mov
or
sbb
sbb
jb
aam
sbb
mov
fdivp
loop
jmp
push
dec
and
mov
and
pusha
add
mov
sub
lods
sub
fadds
loope
imull
jb
and
push
cmp
scas
aaa
stos
push
mov
gs
xor
mov
add
mov
push
sti
es
sub
push
fisubs
dec
pop
bound
adc
aad
lret
inc
sbb
test
dec
push
lcall
bound
test
scas
fwait
mov
mov
sbbl
arpl
xor
sarb
or
xlat
testl
jg
popf
test
jecxz
inc
xchg
mov
and
jne
and
clc
fisttps
js
mov
and
jmp
jne
out
mov
cmc
inc
fdivrl
popa
out
mov
jno
bound
push
lcall
pop
cmpsl
fcom
insl
setle
sarl
aas
bound
fisubrs
insl
rcl
aam
cs
sbb
mov
test
lea
adc
sub
mul
or
sbb
push
lock
mov
xor
lods
orl
add
fidivrs
mov
test
repz
cmp
dec
out
scas
scas
jo
push
icebp
aas
mov
gs
and
jecxz
lret
mov
lds
in
and
adc
insl
pop
or
scas
repz
out
inc
lret
xchg
outsl
jbe
pop
test
cltd
cli
add
jg
lret
adc
adc
adc
push
pusha
mov
das
iret
mov
sbb
jae
cmpsb
mov
cmc
dec
stc
divb
and
fwait
mov
bound
sbb
pushf
rcll
cmp
nop
sbb
jecxz
xor
je,pn
arpl
inc
test
or
mov
jno
ret
test
fidivrl
pop
xchg
pop
out
and
call
jmp
btc
cmpsl
fsubr
mov
jge
jge
fcoms
lcall
inc
aam
adc
push
insb
mov
inc
cmp
xchg
mov
lcall
xchg
mov
xchg
jmp
into
movsl
xor
ds
imul
or
pop
mov
cmc
ja
mov
push
mov
int3
lret
js
movsb
adcl
and
sub
mov
fdivs
fsubl
cwtl
stos
and
mov
leave
in
xor
pop
icebp
outsl
adc
sbb
popf
cmp
outsb
cltd
push
pop
inc
add
pop
pusha
pop
sbb
mov
or
jmp
je
dec
orb
mov
stc
lods
xor
stos
aas
cmc
aad
jnp
mov
sbb
adc
and
push
mov
sub
aaa
mov
ss
out
dec
dec
jp
fidivs
lcall
push
lods
mov
or
mov
rcrb
popa
lret
adc
dec
sar
xchg
lea
dec
scas
pop
push
in
sbb
push
sub
push
frstor
mov
shll
sarl
adc
fwait
int3
or
dec
repnz
jp
imul
insl
aas
push
dec
out
pop
jp
add
aam
insl
lods
inc
daa
int3
jecxz
lock
push
or
insl
dec
xchg
or
sbb
andl
rolb
jae
inc
or
outsl
fldln2
fcoml
jns
cld
imul
arpl
cmc
jmp
sbb
mov
jmp
in
mov
outsl
cmpsl
mov
push
push
xlat
mov
mov
ja
pop
mov
popf
jecxz
sub
mov
xor
jle
ljmp
enter
pop
in
cmp
sub
das
sbb
scas
cwtl
lcall
cs
or
push
lret
int3
sbb
push
lea
lea
in
fwait
jmp
adc
cmc
inc
and
mov
mov
ret
and
rcrl
sbb
add
sub
push
sub
andb
fs
lcall
js
or
add
arpl
pop
les
adc
in
lahf
arpl
movsb
and
mov
jle
and
jecxz
stos
in
or
xchg
rcr
ljmp
popa
sub
xchg
inc
aam
aad
mov
adc
mov
push
lock
xchg
cmp
dec
je
lret
xor
sbb
out
push
out
and
in
cmpsb
aam
adc
mov
sub
test
mov
das
mov
shlb
sub
clc
cmp
lds
dec
mov
in
mov
das
mov
mov
imul
sbb
mov
outsl
lret
popf
outsb
cmp
ss
adc
div
loopne
in
scas
test
push
imulb
push
aas
pushf
ljmp
pop
inc
inc
insl
inc
mov
mov
nop
pop
lret
push
ret
xchg
mov
lahf
mov
or
gs
sbb
aas
cmc
pop
lcall
mov
jb
out
rorb
repz
sub
jns
mov
xor
pop
adc
sbb
loopne
nop
fidivrl
test
movb
pop
mov
or
mov
lock
and
fwait
jle
sbbl
in
sub
mov
inc
incb
out
jns
sbb
and
inc
mov
xchg
adc
or
fnstenv
fwait
cmp
std
jl
cmp
lcall
aas
mov
pop
mov
mov
stos
daa
call
fisttpll
shrb
loop
cld
inc
cmp
dec
ljmp
mov
adc
jp
loope
inc
mov
fistl
xor
mov
cmp
push
dec
jnp
scas
in
xor
sub
shll
fdivs
jns
adc
add
mov
mov
jno
push
sub
inc
sub
lea
mov
mov
ret
adcl
sbb
hlt
lcall
addr16
std
dec
pop
mov
cmp
mov
mov
pop
ret
pop
mov
ret
fdivrs
test
mov
ds
ffree
xor
jbe
lods
out
test
inc
push
jns
sahf
xlat
sbb
cmc
inc
fbstp
ss
add
int
and
ror
push
lea
stos
push
shrb
xlat
lock
fidivs
push
pop
xchg
clc
xchg
rcrb
out
xchg
add
in
mov
jne
bound
pop
jns
addr16
sbb
adc
fiaddl
scas
xor
test
cmc
sbb
push
repz
sub
sub
sti
int
orl
xchg
in
incb
lret
mov
in
pop
adc
mov
int
push
inc
fiadds
in
or
clc
aaa
sbb
in
sub
jp
shl
loopne
ljmp
cmpsb
dec
mov
cmc
dec
aaa
mov
jge
icebp
sahf
sub
data16
add
jg
cltd
jns
mov
xchg
shrl
popa
mov
pop
jmp
gs
loopne
scas
lea
mov
sub
je
and
lahf
inc
lret
sub
dec
jnp
sbb
cltd
pop
and
add
fcmovbe
insl
in
xor
ds
cmp
loope
xlat
and
xor
scas
roll
ret
cltd
mov
and
fwait
jne
cmp
stos
dec
push
xor
lea
jmp
push
stos
and
in
lahf
jmp
imul
movsb
mov
sub
adc
jb
lock
lret
dec
sbb
mov
push
shll
push
or
xor
mov
and
mov
insb
incb
jbe
pop
pop
mov
push
adc
mov
push
mov
test
lds
cmp
out
inc
dec
mov
fstp
fcomip
xchg
push
mov
sub
cmp
jno
iret
lds
sbb
mov
fsts
je
aad
decl
outsl
scas
int3
ljmp
enter
mov
push
inc
pop
mov
js
dec
cmpsb
jae
mov
mov
mov
push
les
cmp
mov
sub
dec
aaa
fs
repz
les
or
xlat
mov
into
inc
decb
dec
mov
pop
jno
movsb
repz
and
inc
add
pop
adc
xchg
mov
lock
pop
jbe
loopne
call
scas
sub
mov
leave
push
daa
jge
push
inc
mov
push
aas
movsb
pop
mov
mov
cwtl
js
adc
mov
cmpsl
xchg
add
inc
shlb
or
jmp
cmp
jle
mov
iret
jge
adc
mov
sbb
jl
push
push
mov
dec
xor
fldl
push
jmp
sbb
mov
outsb
pusha
and
movsl
sbb
adc
adcb
jp
cmp
lock
int3
mov
cmp
rcrl
add
pop
mov
shll
mov
sub
cmp
jb
xor
jmp
dec
jge
mov
lods
shl
stos
inc
mov
lods
jbe
std
xor
pushf
cmp
xchg
jmp
call
stc
add
lds
push
add
inc
shlb
in
jo
insl
dec
in
xchg
adc
mov
mov
inc
lcall
daa
in
cmp
out
pop
and
in
adc
jo
sub
mov
push
push
out
jb
fidivrs
sbb
xor
pop
mov
hlt
sub
mov
pop
sbb
test
stos
cltd
xor
shlb
xor
xchg
stos
inc
bound
ss
jl
or
ret
adc
pop
mov
aaa
loopne
and
cli
nop
cmp
jbe
add
sarl
mov
inc
sbb
xchg
add
pop
dec
dec
lahf
sub
shl
pop
sarl
sub
repnz
inc
mov
push
push
pushf
insl
cmp
out
lret
sub
sbbb
popf
fstps
imul
xchg
pop
into
or
lahf
pop
movl
divl
cmp
popf
shlb
cld
jle
mov
insl
loopne
xor
loope
jg
enter
mov
xor
call
or
sub
leave
fnstcw
pop
xchg
hlt
call
mov
jnp
xlat
dec
pop
jns
iret
inc
mov
lret
xor
and
icebp
push
mov
cwtl
push
jo
stos
lret
xor
add
in
mov
mov
mov
repz
push
inc
rcrl
repnz
add
inc
stc
mov
sub
enter
orl
xchg
iret
hlt
push
cmp
jmp
lock
or
adc
imul
rcr
cmp
xor
inc
mov
imul
clc
aaa
loop
pop
in
pusha
scas
pop
mov
mov
and
call
daa
cs
pop
mov
test
cmp
dec
daa
sub
mov
call
movsb
test
sbb
push
mov
adc
xor
shrb
mov
pop
xor
imul
lods
aam
inc
inc
jmp
neg
sub
push
sbb
stos
rolb
pop
insl
jb
bound
inc
shl
dec
incl
imul
xchg
sub
inc
or
and
leave
push
negl
jo
insb
pop
adc
out
push
add
movsl
sbb
cmp
popa
imul
lea
fdivrl
xchg
into
or
pop
gs
stos
jns
ret
mov
clc
adc
pusha
popa
sbb
xor
cmpsl
iret
sub
adc
adc
jbe
mov
dec
sub
ficoms
dec
imul
adcb
aam
pop
push
mov
xchg
and
sbb
daa
adc
sub
mov
mov
adc
add
mov
or
stc
push
jne
dec
lret
jne
xchg
movl
dec
cmp
sub
sub
dec
dec
xchg
int
jg
xchg
mov
mov
jp
cs
int
jmp
pop
das
sbb
and
push
pop
out
dec
mov
lds
cmp
xor
insl
orb
inc
adc
inc
lret
stos
js
mov
divb
mov
div
xchg
test
fcoml
arpl
xlat
xor
loope
imul
fildll
lcall
jae
mov
add
popa
loopne
rorl
mov
fstl
scas
xchg
pop
mov
push
dec
sbb
enter
add
mov
jb
hlt
mov
inc
pop
daa
jno
repnz
add
popa
das
loop
mull
adc
sub
fildl
je
inc
cs
in
dec
repnz
leave
add
push
test
xchg
pushf
xchg
out
test
jb
das
insl
add
sbb
shrl
dec
rorl
mov
xchg
mov
out
popa
popa
inc
cs
dec
pop
pop
xchg
mov
push
dec
imul
stos
into
sbb
xchg
and
mov
mov
dec
xchg
ljmp
push
jge
enter
mov
daa
sbb
popf
test
mov
mov
jae
inc
mov
repz
clc
ds
aam
nop
pop
std
dec
into
mov
insb
mov
add
inc
mov
andl
sbb
loop
adc
xchg
stos
xor
adc
out
xchg
adc
sub
sahf
call
orl
push
movsl
xchg
adc
popa
and
push
or
push
fsts
dec
push
hlt
mov
mov
subl
clc
into
dec
and
mov
and
sub
xchg
mov
cmpl
xor
lcall
lods
pop
lock
out
das
dec
mov
ror
in
cmc
xchg
pusha
mov
jno
aaa
cltd
jmp
mov
sub
inc
int
daa
inc
dec
xchg
fs
ljmp
repnz
push
mov
xchg
jb
mov
aas
popf
add
outsb
add
shrl
or
mov
test
mov
outsb
jge
xchg
cltd
mov
cmp
and
mov
mov
sbb
lds
push
mov
cmp
mov
arpl
sbb
add
adc
pop
outsl
jo
test
dec
jmp
jno
sti
int
std
stc
ror
addb
sahf
inc
hlt
push
inc
lret
xor
sbb
loopne
push
movb
sarb
jmp
push
pcmpeqb
cmp
and
inc
mov
sbb
or
pop
cwtl
data16
jbe
dec
testl
faddl
cltd
mov
xchg
lock
popf
dec
movsb
sbb
sub
rorl
sbb
xor
jg
scas
test
scas
pop
push
les
and
fcoml
lret
sub
std
jae
inc
jne
dec
ret
add
xchg
pop
popf
les
inc
inc
cmp
lods
pop
pop
repnz
cmp
adc
les
jns
mov
push
adc
aad
push
addb
data16
call
dec
fcmovne
leave
leave
bound
or
mov
sub
and
shlb
or
bound
push
loope
bound
int3
ds
pop
int
ds
stos
in
mov
js
jne
cmp
or
xchg
lds
cmpl
xchg
cmpsb
add
adc
xchg
insb
int
mov
leave
enter
sub
stos
add
xchg
out
jl
fisubs
negl
mov
iret
xchg
jmp
cld
xchg
xchg
andl
jns
cmp
enter
aaa
add
stc
push
push
cmp
sub
adc
cmp
adc
ds
sbb
movl
push
sbb
mov
sub
jecxz
out
pop
or
pop
jmp
xchg
arpl
rorl
pop
jp
mov
sbb
cltd
out
in
inc
sbb
mov
incb
ret
gs
ljmp
pusha
loopne
sub
mov
aas
test
clc
push
gs
mov
add
fsubs
bswap
jmp
add
test
xlat
out
adc
dec
xchg
push
mov
mov
cmp
adc
push
call
jno
imul
pop
sbb
jo
jbe
aas
icebp
ror
test
xor
fstps
adc
lock
push
call
push
sub
mov
pushf
stos
and
ret
xlat
add
iret
mov
jmp
insb
mov
fcom
push
fldcw
enter
lcall
jne
test
enter
jl
mov
lods
sbb
inc
inc
push
mov
add
adc
or
outsl
scas
cwtl
in
or
jb
outsb
cmpsl
adc
into
sbb
jle
mov
in
mov
stc
jbe
clc
inc
jb
ds
cltd
bound
jae
cmp
jnp
dec
pop
pop
add
insb
xchg
mov
xor
cmc
fwait
sahf
in
out
cmc
mov
in
testl
mov
mov
shl
lcall
jbe
cmp
insl
add
inc
or
mov
cmp
decb
leave
rolb
outsl
out
test
or
ficoml
dec
ret
cmpsb
adc
fcoms
sub
addl
ja
mov
arpl
lods
inc
jbe
mov
xchg
sbb
sub
dec
jae
xchg
sub
dec
push
incl
je
jmp
mov
in
mov
add
or
data16
mov
cmp
fstps
pushf
cmpsl
iret
ficoml
mov
jecxz
cmp
or
add
in
xor
inc
mov
mov
xchg
fidivl
mov
push
sub
pop
ds
in
cltd
adc
std
loope
shl
mov
mov
outsl
aaa
cmc
push
aad
mov
das
add
add
jl
icebp
leave
iret
in
xchg
push
jae
dec
incb
dec
ljmp
cmp
mov
cmpsb
pop
in
fdivs
call
and
cmp
xor
inc
fstp
loop
jae
aaa
imul
sub
jl
lcall
pop
sbb
lods
inc
inc
call
cmpsb
lds
lock
mov
mov
add
in
mov
jg
xchg
loope
push
pop
sub
aaa
lods
xor
xor
arpl
int3
mov
adc
mov
loop
push
lods
sub
sti
inc
pop
cmp
pop
xor
out
mov
out
pop
sbb
push
sti
jno
xchg
mov
inc
sub
aam
lret
jp
inc
test
cmp
mov
fwait
test
adc
cmc
leave
sbb
das
dec
push
outsl
das
adc
and
inc
jne
fisttpll
mov
ss
nop
cli
pop
movsbl
call
int
sbb
sub
xchg
mov
lret
pop
xchg
sbb
outsl
jne
clc
dec
dec
sbb
popf
mov
sbb
les
loopne
or
fsubrs
sbb
movsb
xor
int3
ja
mov
jl
mov
mov
sub
dec
int
inc
push
xor
jmp
rol
sbb
xor
repnz
pop
mov
cmpsl
shl
popf
lods
mov
das
push
mov
pop
jge
jl
mov
lods
rol
ljmp
xorps
pop
fsubl
add
pusha
inc
fdiv
stc
sub
mov
jp
mov
and
out
lret
fcmovnbe
notb
scas
cmp
jno
jmp
aaa
out
push
sub
sbb
mov
mov
sub
add
fdiv
cmc
add
daa
xchg
dec
xor
test
and
imull
incb
push
xchg
dec
iret
jno
adc
push
push
iret
pop
movsb
add
fs
in
or
jns
inc
movsb
repz
stos
std
xchg
cmp
mov
mov
push
sbb
lea
fwait
cmp
mov
lds
mov
mov
jnp
pop
fldenv
repz
daa
ljmp
cltd
cmp
push
out
test
adc
test
xor
or
das
sub
dec
in
cli
push
cld
bound
pop
or
in
adc
subl
inc
xchg
mov
mov
aas
les
jge
dec
pushf
shll
add
jae
test
mov
aam
dec
std
mov
mov
dec
out
cmp
jecxz
inc
ljmp
test
lods
mov
fs
es
mov
dec
jg
ret
rorb
pop
aas
dec
sahf
xlat
inc
jp
ljmp
push
xor
push
mov
mov
roll
xchg
push
movsb
xlat
inc
xchg
add
and
lahf
sub
and
xor
lret
xchg
push
mov
xlat
lock
icebp
rclb
inc
mov
cld
shr
add
mov
imul
dec
mov
mov
test
cmp
jp
rcrl
repnz
enter
cs
cld
dec
call
jmp
inc
sbb
fidivs
sbb
test
adc
mov
lods
jecxz
add
adc
xchg
jmp
fistl
xchg
daa
les
popf
leave
fwait
push
ljmp
push
fnstenv
mov
adc
mov
sti
mov
jno
nop
jo
xor
popf
clc
xchg
xchg
ficoms
mov
stos
orl
dec
shlb
out
daa
imul
popa
jnp
inc
fidivrl
lahf
cmc
mov
xor
lds
sub
js
sbb
imul
jge
insl
das
xor
les
xor
push
rcrb
or
enter
test
test
add
ss
mov
sbb
adc
jmp
jb
loop
or
sbb
fdiv
in
or
addl
and
imul
add
fnsave
sub
jle
or
iret
cmp
dec
jb
movsl
push
jae
sbb
std
mov
movsl
add
ret
mov
insl
fdivr
xchg
je
call
push
push
fsubrs
sub
cmc
adc
mov
push
js
subb
call
or
add
repnz
icebp
int
imulb
adc
jae
push
adc
setle
or
iret
cmp
add
sub
imul
mov
cs
jle
in
sub
jnp
divb
mov
adc
cmp
mov
mov
ja
push
ss
xor
and
push
pop
shll
or
xor
mov
mov
mov
sbb
or
pop
xor
sbb
jle
push
arpl
push
sub
push
rorb
jne
scas
jbe
dec
ljmp
stos
mov
mov
lock
pop
or
dec
cmp
lahf
clc
lret
sbb
lcall
popa
and
in
gs
pop
int
push
xchg
pop
jns
shlb
das
sbb
rorl
subb
push
and
outsl
sub
xchg
dec
jno
xor
jne
xchg
movsl
outsl
jae
insb
xlat
adc
and
cmp
popf
jae
in
dec
push
mov
adc
jno
inc
xor
sub
mov
andl
cli
fld
mov
xchg
pop
and
fimull
out
mov
push
int3
fmul
sub
fisttpll
mov
cmp
pop
mov
and
sub
cmp
add
mov
mov
nop
jne
stos
mov
xchg
rorb
push
es
jmp
jl
mov
lea
or
inc
aas
mov
lods
test
add
sbb
loop
stos
das
push
ja
scas
in
aas
sbb
push
sti
inc
jge
jne
sub
inc
mov
dec
push
inc
sbb
xlat
cmpsb
cmpsb
cs
push
xor
out
faddl
cs
lds
imul
push
pushf
dec
jbe
repz
or
sbb
aad
leave
enter
jns
jle
das
or
jnp
daa
stos
pusha
shl
sti
xchg
add
xchg
sub
mov
out
arpl
nop
inc
sbb
xchg
push
push
dec
test
lcall
movsb
mov
fnstsw
lcall
hlt
insb
xchg
pop
mov
mov
push
inc
dec
pop
mov
ss
movsb
mov
sarl
cmp
add
roll
ds
or
inc
ds
xor
inc
push
add
mov
testb
push
dec
xor
mov
jo
xlat
into
lds
pop
loope
stc
sti
dec
xchg
push
mov
push
add
adc
sub
jno
das
es
movsl
das
add
push
faddl
xor
jp
xchg
pop
adc
mov
add
ficomps
jb
je
cmpsb
into
out
out
mov
sub
and
rcrl
fstpt
or
and
test
xchg
nop
mov
jge
ja
push
lds
imul
shll
jnp
dec
stos
jecxz
and
mov
call
fstl
gs
hlt
lahf
add
push
repnz
cmp
mov
subl
repnz
cmp
jne
lahf
mov
inc
xchg
adc
addr16
push
int
pop
pop
add
cmp
pop
adc
imul
push
jns
sahf
mov
dec
push
rcrl
mov
jl
cmc
aas
and
add
pop
repz
mov
aas
xor
flds
add
ljmp
adc
push
fs
pop
les
into
lock
cs
imul
sbb
dec
pop
clc
lcall
call
and
bound
ret
xchg
add
iret
add
mov
outsb
fnstcw
popa
adc
inc
push
mov
push
jnp
adc
subb
in
lds
jns
insl
rcrl
sub
dec
popf
mov
repz
xchg
inc
ffreep
mov
dec
out
inc
in
cmpsl
lock
pop
test
fmull
aaa
ja
inc
pop
dec
out
roll
xor
xor
cli
enter
push
sub
xchg
jl
mov
out
in
lods
popf
and
lock
mov
movsb
leave
mov
xchg
xor
push
and
flds
push
testl
cmp
pop
mul
popf
mov
fdivl
push
fsubrs
fcoms
mov
aam
out
jo
fimuls
and
lret
rcrl
cmp
out
mov
out
inc
out
daa
cmovl
jecxz
xchg
popf
and
cmp
push
andl
dec
movsl
pop
nop
mov
cmp
or
cmpsl
sbb
push
xchg
filds
cwtl
into
cltd
and
mov
aad
lret
dec
repnz
jl
or
pop
pop
jo
out
hlt
rcr
out
pop
clc
mov
xlat
jb
shll
ret
cmc
out
sub
pop
loope
hlt
dec
mov
add
xchg
test
lods
sub
lods
and
jnp
mov
cmp
iret
jnp
xchg
push
cwtl
push
adc
iret
scas
cmc
rcl
in
mov
out
cmpsl
push
dec
fwait
push
outsl
jno
or
jnp
pop
jae
cmpsb
and
sub
mov
cmp
or
call
loope
mov
fcmove
pop
aas
enter
adc
mov
popa
mov
inc
test
mov
movsb
xchg
and
sub
fisubrl
push
cld
and
or
outsl
jne
cwtl
adc
outsl
cs
sbb
dec
mov
mov
or
jle
clc
push
pop
imul
xor
lock
inc
shll
rcl
or
add
andl
dec
jmp
shll
out
test
cmpsl
inc
cmc
out
scas
pop
mov
imul
addr16
std
shlb
and
aad
lahf
dec
into
cmpsb
bound
cmc
insl
lea
mov
cmp
popf
inc
aad
jl
or
loopne
or
pushf
fildll
cmp
adc
inc
lods
xchg
inc
xor
nop
inc
push
call
iret
lret
xchg
adcl
es
xchg
rcll
or
outsl
dec
xor
lods
inc
or
or
push
rol
dec
mov
imul
fidivrs
inc
cmp
subl
inc
add
jns
xchg
sbb
and
xlat
mov
mov
xor
xor
repz
inc
mov
nop
int
cli
add
xor
mov
adc
orb
js
hlt
es
mov
sbb
push
imul
and
cltd
imul
add
xor
jns
stc
sarb
lahf
enter
loop
dec
loop
and
adc
xor
addl
or
inc
cwtl
jne
repnz
cwtl
mov
mov
aam
add
stc
popf
pushf
xchg
test
clc
or
mov
sub
push
fcmovbe
addr16
xchg
jge
xchg
pop
jnp
shll
push
ret
mov
dec
jno
aaa
sub
and
xchg
les
jle
outsl
rol
lock
in
addr16
mov
push
or
aad
call
cmp
push
pop
lahf
sub
sub
aas
mov
pop
sbb
inc
jmp
xor
cmp
cmp
mov
mov
mov
sbb
jmp
xchg
and
int
cmpsb
test
push
push
shll
push
das
inc
jg
sub
jno
pop
stos
fdivl
leave
subl
lds
clc
mov
lcall
mov
jns
mov
inc
cmp
pop
jp
ja
jnp
and
cmp
imul
lods
xchg
nop
sbb
xchg
inc
sahf
test
test
mov
pop
call
pop
mov
push
and
lock
add
lcall
sub
int
loopne
data16
js
pop
shr
pop
loope
pop
lods
mov
lcall
jo
fdivrs
adcl
orb
insb
jmp
ss
js
lret
and
or
loopne
data16
or
cmc
jae
lret
dec
dec
add
mov
lret
roll
std
jo
lret
bound
adc
adc
adc
lea
xorl
dec
je
in
std
cmpsb
sbb
push
and
mov
fldcw
or
xchg
jo
jo
sub
jg
jb
lahf
movzwl
mov
mov
jne
repz
mov
es
xor
xchg
xor
daa
jae
in
ficomps
xchg
or
out
lods
pop
insl
bound
in
sub
add
test
adc
lahf
rorb
sub
outsb
xchg
je
sub
pop
mov
addl
sbb
mov
in
and
lret
pop
xchg
mov
out
outsl
sahf
inc
jb
jp
mov
push
push
icebp
push
stc
mov
popf
xor
mov
enter
scas
int
pop
xor
lea
repz
sti
aam
push
dec
insl
cmp
mov
inc
add
mov
out
cwtl
bound
lods
movsl
or
xor
or
cmp
mov
and
subb
adc
into
test
push
shlb
inc
lret
push
jg
test
push
mov
dec
ds
cmc
mov
fnsave
xchg
lcall
js
leave
popa
push
pop
xor
lret
fldcw
out
mov
push
push
stc
loopne
cli
pop
and
js
es
roll
sbb
stc
cmp
cmp
xchg
cmp
insb
ret
clc
ficoms
adc
insb
or
movsb
loop
jmp
aam
lcall
je,pt
dec
dec
jnp
arpl
adc
stos
cmp
lock
das
and
sub
stos
or
dec
push
out
lock
cltd
sti
or
xchg
push
inc
mov
stc
sbb
add
cmp
push
xchg
lods
mov
pop
shll
xor
pop
shlb
mov
pop
pop
iret
repnz
or
adc
mov
adc
imul
inc
ljmp
mov
dec
aam
sub
dec
push
add
ss
pop
bound
fcompl
aad
mov
call
loope
xchg
add
jno
adc
lea
test
iret
daa
push
sub
mov
inc
add
mov
sbb
inc
xor
push
pop
and
dec
push
movsb
sbb
pushf
mov
dec
mov
jbe
cmp
pop
mov
push
in
and
add
or
sub
mov
iret
cmp
ljmp
lds
fstp
inc
pop
mov
int3
sbb
push
cli
dec
orb
mov
scas
std
das
xchg
scas
dec
pop
sahf
push
aad
add
xchg
shl
repz
jne
sbb
cmp
fldcw
xchg
imul
xor
adc
pop
mov
in
cmc
nop
icebp
pop
mov
mov
mov
insl
push
nop
lcall
xchg
ret
xlat
mov
mov
aad
cltd
lock
imul
add
cmpsb
mul
xor
pushf
lods
lret
lahf
loop
add
cmp
cli
mov
jb
sub
fistpl
and
inc
sahf
es
dec
inc
pop
ljmp
imul
jmp
cmpsl
dec
xor
xchg
sbb
sub
jb
pop
in
xchg
inc
sti
shrb
inc
je
rorb
mov
fmul
fstpt
mov
push
and
dec
in
mov
sbb
loope
setae
mov
push
sbb
inc
addl
inc
inc
icebp
fcmovnu
adcl
cmpsb
mov
jb
mov
mov
icebp
aaa
aam
adc
add
out
push
pop
pop
add
pop
pop
mov
inc
add
clc
out
fdivrl
pop
jo
mov
cmp
ret
shrl
daa
sub
pop
pusha
sbb
lret
add
or
loope
lods
adc
xor
jno
mov
cwtl
out
mov
mov
push
adc
mov
xchg
mov
fimuls
or
dec
hlt
bound
or
mov
aaa
mov
sysenter
push
mov
sub
and
lods
je
mov
jno
testb
shll
hlt
in
int
loope
fs
or
lods
mov
sub
dec
fsincos
popa
adc
repnz
insb
out
ret
xchg
stc
inc
push
rorl
dec
sub
cmp
aam
out
jne
das
mov
jae
jnp
pop
inc
imul
stos
xchg
push
xor
imul
or
insl
cmpb
mov
frstor
lahf
roll
push
hlt
xor
sub
int3
aam
mov
push
mov
xor
mov
xchg
aaa
sub
js
notl
test
ja
and
fldl
inc
push
js
add
and
mov
loope
mov
xor
xchg
je
push
and
fwait
xchg
or
add
jle
call
jecxz
push
jmp
xlat
loop
adcb
pop
mov
ret
pop
pusha
mov
sarb
xchg
pop
sbb
cmpsl
pop
es
sub
rcl
cs
dec
jp
mov
shr
addr16
jne
or
in
mov
and
lods
jle
ss
fdivs
popf
mov
dec
fsub
cld
imul
sub
pushf
into
ret
int
add
loop
push
outsl
ss
push
cmp
std
or
inc
out
dec
fbstp
jl
jns
push
testl
stos
mov
xchg
faddl
arpl
mov
push
inc
sbbb
xor
pop
and
sbb
call
mov
data16
into
jae
orb
mov
imul
pop
cmp
cltd
xor
and
cmp
pop
sbb
adc
clc
xchg
or
adc
std
rolb
cmp
adc
sub
js
call
mov
scas
mov
popf
lods
ret
smsw
mov
ret
into
pop
std
or
ljmp
inc
pop
mov
mov
sub
insb
roll
inc
and
add
and
mov
xlat
shlb
pop
xchg
add
and
pop
jg
mov
call
pop
enter
movsb
or
dec
or
aad
les
mov
push
xorl
sub
jae
mov
push
mov
cmpsb
inc
rcrb
fildl
dec
sub
test
jge
pop
jecxz
mov
cmp
imul
jge
std
pop
mov
cltd
mov
lcall
repnz
enter
or
mov
sbb
negl
pusha
addl
mov
rolb
xchg
loop
adc
pop
popa
enter
fiadds
cmpsl
lods
aas
or
clc
inc
sahf
inc
inc
mov
stc
mov
loope
inc
sub
insb
inc
in
icebp
inc
xlat
cmpsl
lret
loope
mov
shrb
stos
sub
xchg
aam
fnstenv
call
daa
loope
add
sbb
mov
cmp
lds
outsb
mov
das
push
rcl
cmpsb
xchg
cwtl
fadds
fists
imul
add
sbb
roll
xchg
add
in
js
sbbl
push
rcrl
or
cmp
xchg
or
push
pushf
cmp
test
inc
inc
mov
xlat
push
outsl
fwait
out
in
insb
pop
imul
jae
cld
cwtl
jno
shll
out
jg
popf
jg
dec
insb
or
inc
mov
pop
sub
xchg
push
cmp
cmp
mov
cmc
out
daa
lods
mov
push
insl
adc
add
test
xor
adc
cltd
and
aam
sub
cld
roll
adc
mov
xchg
push
inc
cmp
xchg
inc
outsl
sti
dec
adcb
xor
sbb
call
push
jne
and
xchg
test
adc
or
xor
out
sbbl
loop
aas
pop
sub
aas
addl
bswap
and
mov
ss
cmp
inc
sub
mov
das
lods
xchg
rcll
shll
dec
dec
sbb
gs
pop
sbb
fdivs
out
cltd
inc
test
out
xor
fsubl
jnp
push
outsl
dec
je
inc
fwait
push
pop
xlat
incb
mov
out
or
movsl
or
add
cmpsb
pop
or
sub
or
imul
xchg
test
xchg
inc
or
mov
les
cmpb
fsubrp
mov
cmp
out
mov
push
addb
fnstcw
cmc
jbe
adc
icebp
std
jo
mov
leave
das
cmpsb
and
call
and
mov
push
movd
dec
subb
adc
in
mov
in
int3
sub
mov
adc
idiv
lret
jmp
add
cmpsb
in
inc
je
out
mov
shll
xor
cli
mov
aaa
or
xor
dec
push
nop
in
dec
lret
hlt
dec
xchg
lret
mov
ss
sub
pop
pusha
loopne
jb
cmpsl
pop
sub
pushf
jl
xor
adc
jae
lds
pop
pop
push
bnd
repnz
lcall
imul
movsb
test
jnp
dec
pop
push
pop
outsb
fs
mov
and
aad
and
bound
loop
adc
aaa
popa
xchg
ljmp
popa
sub
aas
or
inc
test
fisubl
jb
push
fistl
mov
push
adc
pusha
mov
arpl
pop
sti
cltd
movsl
es
iret
jne
mov
jecxz
fldt
mov
pop
int3
pop
cmc
xchg
les
jmp
mov
pushf
push
mov
out
sub
bnd
into
lods
int3
shlb
mov
je
xchg
into
in
jge
cli
inc
add
push
or
xchg
ljmp
add
pushf
mov
addl
dec
out
jp
fcoml
call
aam
xchg
sbb
push
cltd
fstpl
test
add
push
imul
sti
jae
clc
mov
rcl
rcrl
fstpl
xchg
sub
add
xchg
jl
outsb
xchg
cmp
jnp
cmp
push
xchg
mov
les
mov
xchg
cwtl
inc
fsubl
pop
sahf
cmp
lock
mov
mov
push
pop
xchg
outsb
pushf
in
arpl
xchg
pushf
call
mov
fisubl
sbb
adc
mov
leave
pop
push
pop
in
cld
cmp
mov
adc
lods
xor
in
and
add
sub
fmull
or
imul
jno
repz
push
push
jne,pn
pop
sub
adc
xchg
cmp
xorl
fsubrl
and
and
add
hlt
mov
pop
add
pusha
jmp
ret
repz
adc
in
inc
cmpb
out
mov
or
aam
jmp
out
cmp
sarl
test
mov
ret
sub
cmp
movsb
out
cmp
mov
in
jb
xor
pop
and
aaa
hlt
xor
lcall
shr
movsb
lcall
sbb
push
sub
push
jge
and
ret
inc
dec
cmp
pop
stc
shlb
enter
mov
pop
jle
hlt
mov
bound
addr16
test
dec
xor
and
fdivrl
sti
cmp
jle
movsl
add
mov
in
mov
nop
jns
cmp
jecxz
sbb
ss
pop
setle
dec
add
mov
leave
mov
add
or
xchg
mov
sbb
pushf
sub
inc
fwait
xor
in
cld
add
imul
xchg
test
mov
mov
arpl
andl
movaps
fwait
or
dec
inc
lods
outsb
jno
pop
shrb
or
xchg
mov
test
push
cmp
xchg
hlt
add
xor
mov
adc
mov
adc
jle
or
popf
test
pop
loopne
bound
cmp
push
std
cmp
aas
aaa
mov
loopne
lret
xchg
jo
mov
or
les
jg
cmc
mov
fs
xor
sub
mov
popa
in
jbe
push
or
jb
outsl
popf
mov
mov
es
fstpt
push
mov
dec
cmpsb
adc
inc
fadds
xor
stos
mov
mov
jne
mov
cld
cmp
lds
sbb
add
mov
mov
or
stos
lods
mov
fidivrl
dec
mov
cmp
inc
sti
in
lahf
stos
call
push
or
mov
fidivrl
inc
and
cmpsb
jle
xchg
aaa
jmp
sub
xor
lret
cmp
sbb
cmp
ds
test
mov
std
push
arpl
addr16
lret
lcall
jne,pt
insb
add
lds
fiaddl
xor
push
jo
call
pop
xor
lods
inc
out
pop
es
mov
pop
testb
sbb
lret
movsl
pop
lods
jns
and
mov
xchg
loop
pop
loop
push
jbe
shl
jae
adcb
lret
sub
pop
int3
dec
orb
lods
ja
mov
sbb
jbe
dec
inc
loopne
sbbb
loope
out
rolb
fwait
insb
jp
mov
xor
jne
repnz
dec
clc
xchg
stc
or
dec
mov
leave
in
xor
mov
mov
cs
inc
push
mov
cwtl
dec
mov
jl
adc
jge
js
sub
adc
rcll
pop
hlt
sbb
mov
in
and
ljmp
mov
repnz
je
xchg
mov
negl
lods
into
fs
mov
sub
inc
arpl
inc
cmc
inc
xor
mov
subl
and
in
mov
xlat
lahf
mov
or
mov
xor
or
and
sbb
sub
cld
inc
stos
into
cmp
xor
in
cld
iret
sub
xorb
insb
cli
rol
cmp
inc
pop
imul
nop
mull
dec
or
mov
mov
repnz
sti
sbb
mov
stos
jp
cmp
push
pop
movsb
dec
inc
mov
fstpt
sti
pop
mov
mov
add
push
dec
cmp
lods
add
mov
sub
jnp
dec
sub
je
sbb
cmpsb
sub
aas
pop
cmc
lods
jns
pop
movsl
das
pop
loop
mov
mov
pushw
cmpsb
mulb
mov
out
cmp
cmp
out
pop
mov
jae
adc
stos
add
push
or
xlat
mov
jg
loopne
outsb
popl
loop
xchg
out
dec
data16
inc
mov
mov
push
pop
push
fstp
fwait
aad
lret
loop
mov
cmp
xor
sahf
gs
imul
add
mov
lock
ljmp
mov
notl
pop
call
dec
pop
popa
adc
xor
add
outsb
sub
cmp
loop
fildll
insl
outsb
jnp
sbb
gs
xchg
test
shlb
movsl
sub
aad
lahf
pmaxsw
je
or
add
or
pusha
mov
cwtl
add
mov
sar
pop
cwtl
jle
jle
push
setno
add
test
and
xchg
cmpsb
mov
xor
push
fwait
sahf
loop
sbb
mov
cmp
and
push
xchg
cld
lcall
sub
js
movsl
and
push
iret
insb
mov
popa
lcall
imul
stos
fcmovnu
pop
sbbb
pusha
fildl
push
int3
cmp
jle
andl
frstor
pop
ror
sahf
cmc
into
mov
mov
aam
addr16
pop
lret
dec
sbb
xchg
add
outsb
cmpsl
shll
sahf
xor
cmp
ja
ret
sbb
stos
dec
dec
shll
loopne
daa
cmp
sahf
and
jp
mov
push
cmpsl
insl
decl
ret
enter
cmpl
jno
js
addr16
daa
enter
les
rclb
aad
jg
enter
push
dec
out
mov
mov
cmp
add
or
add
lea
pop
xchg
inc
sbb
inc
fstpt
add
pop
enter
ret
dec
ret
shlb
cmpsb
xor
lock
lods
or
sahf
mov
and
jo
and
outsb
mov
lahf
mov
daa
data16
xor
inc
shrl
lret
push
xor
jge
sahf
es
add
mov
clc
loope
adc
out
sub
cltd
and
shll
jle
sahf
dec
and
arpl
cld
and
test
dec
jns
mov
dec
ljmp
mov
clc
lret
sahf
fistpll
stc
lret
push
xchg
rcll
leave
mov
pop
in
js
xor
mov
fs
pop
cmpsb
mov
sub
xlat
dec
jmp
pop
rcrl
cwtl
test
mov
ret
fs
mov
jae
cmp
cli
xchg
pushf
int3
popa
jg
stos
addb
test
mov
mulb
stc
cmp
xor
enter
adc
jne
mov
push
test
out
repz
aam
mov
insl
lods
xchg
ret
shrb
pop
jecxz
jns
sti
inc
push
mulb
sub
sub
jle
dec
xchg
cwtl
movsl
inc
xor
cmp
comiss
jbe
adc
jae
test
int3
or
and
xchg
push
lret
int
and
pushl
mov
sub
pop
call
test
sbb
pop
je
xorl
pushf
mov
or
xor
in
je
test
mov
adc
mov
hlt
shr
andl
jae
movsb
insb
fdivrs
mov
mov
and
xchg
mov
comiss
cmp
cmp
fs
add
pop
jb
jge
sbb
in
mov
lret
in
mov
cmp
fmuls
lods
xor
push
jecxz
pusha
mov
repz
rolb
lods
jp
aad
std
sub
pushf
push
les
xchg
xchg
add
mov
or
mov
jmp
mov
mov
sbb
inc
jge
mov
xor
imul
xor
and
mov
loop
orb
mov
out
in
add
xchg
pop
sbb
leave
sbb
notb
adc
sbb
xor
mov
inc
stos
mov
push
xchg
jno
sub
das
jp
divb
add
cwtl
mov
or
cmp
adc
fadds
outsl
outsb
fidivl
lcall
xor
pmuludq
insb
push
sbb
lods
pop
test
notb
mov
mov
lds
dec
push
movsb
push
shr
mov
mov
lock
xchg
cmpsl
aam
cmp
adc
or
push
pop
ljmp
dec
jnp
cli
inc
xchg
mov
out
xchg
out
fldcw
insl
fcmovnbe
add
push
test
fildl
daa
cmpsl
sahf
pop
sbb
or
stos
xorb
inc
mov
xchg
int3
fisubrs
sar
adc
xchg
loop
mov
lcall
jo
cmp
mov
add
fistpl
data16
push
lods
in
jecxz
fcmovu
shlb
ljmp
dec
sarb
add
push
daa
xchg
cmp
daa
ds
in
ss
sbb
leave
pop
mov
call
mov
mov
cmp
pop
jg
cli
pop
xlat
ljmp
adc
lret
jmp
popf
and
daa
push
outsb
jbe
fldl2t
cmp
push
pushl
cmpsb
or
daa
in
pushf
sbb
lods
ret
sub
add
les
cmp
es
in
dec
sbb
xchg
xor
mov
cli
das
add
add
bnd
aad
and
into
mov
shll
je
in
aad
hlt
dec
pop
sti
cmpsb
test
movb
fldt
push
hlt
test
dec
fsubr
sahf
sar
and
pop
sbb
mov
jmp
push
mov
pop
sub
or
lcall
sbbb
shll
xor
mov
cwtl
xchg
sub
ret
roll
push
gs
repnz
rol
inc
adc
add
mov
cltd
movsb
fiadds
in
int3
clc
cmp
pop
xlat
sbb
test
imul
xor
lret
stos
mov
test
xchg
push
jno
test
lock
jae
ret
and
ret
lahf
aaa
out
jmp
lea
add
mov
push
add
mov
pop
js
add
clc
push
iret
cld
aad
jl
int3
fidivs
dec
daa
xor
loope
inc
jno
les
cs
mov
or
ret
dec
add
sub
jnp
aas
sbb
arpl
mov
aad
fs
pop
push
pusha
xor
xchg
outsb
push
aam
jle
sbb
aam
cld
testb
lods
shlb
int3
loope
into
and
inc
fs
mov
in
push
negb
lods
sahf
or
push
adc
leave
leave
mov
mov
out
lods
xchg
sub
lret
lods
dec
in
loope
sub
or
popf
out
cmc
pushl
imul
outsb
imul
fcom
and
in
cltd
lret
add
inc
push
pusha
pop
scas
icebp
jb
mov
sbb
or
sbb
add
mov
sbb
int3
sbb
inc
jne
mov
cmp
ret
lds
fsub
add
push
out
or
mov
push
pop
cmp
mov
add
fisttps
pop
lods
shll
push
into
jmp
lods
mov
cmpl
aam
hlt
mov
add
addl
fsubrs
hlt
pop
xorl
xchg
cmp
aad
sub
fs
sub
stos
pop
lock
jg
sub
xor
mov
pushf
in
js
fdivrl
mov
outsl
popf
ret
pop
mov
fisubl
std
fbstp
fwait
test
jmp
dec
mov
pop
push
int
push
jle
xchg
repnz
mov
cmp
jle
pop
jo
leave
movl
mov
imul
arpl
push
mov
filds
jmp
sub
jne
dec
mov
push
xor
pop
cmp
pop
idivb
loope
or
cltd
inc
in
fidivs
and
into
fimuls
popa
loop
adc
push
popa
mov
insl
cmovne
sub
sbb
mov
or
xchg
xchg
jle
imul
jb
lcall
addr16
xchg
out
xchg
sub
jns
jge
out
jmp
fistpl
pop
xor
or
jae
enter
imul
hlt
xchg
fadds
loope
mov
ljmp
iret
dec
mov
ja
inc
jae
pop
lret
and
call
xchg
add
mov
mov
psraw
push
or
fisttpl
daa
rolb
int
lds
dec
push
inc
push
mov
mov
std
dec
inc
leave
push
add
sbb
imul
dec
inc
or
sbb
cmp
in
insl
mov
sub
push
dec
cmpb
popf
cwtl
mov
out
scas
cltd
arpl
outsl
inc
jno
mulb
inc
push
push
adc
xchg
and
xchg
jns
insb
stos
and
seto
mov
imul
clc
dec
dec
add
in
mov
dec
mov
add
add
pop
fcomps
out
popa
ficompl
cli
lcall
xchg
shld
jne
das
ret
cmp
mov
std
mov
dec
scas
clc
out
xor
cmp
leave
ja
inc
mov
insb
mov
sbb
bound
insb
lcall
or
pop
dec
xchg
mov
jecxz
decb
sub
mov
fidivrl
cmp
push
or
cmpsl
pop
cmpsb
cld
popf
mov
and
jmp
pop
dec
ret
pop
dec
jg
daa
inc
sub
xchg
push
pop
mov
dec
lret
loopne
mov
jno
imull
cwtl
fcoms
scas
lods
mov
std
pop
jne
push
jbe
xlat
loope
frstor
jecxz
aad
pop
sub
pop
es
mov
mov
lea
adc
fimuls
dec
jnp
jbe
dec
mov
xor
int
add
addb
push
iret
mov
imul
fwait
insb
std
jle
cmp
mov
lret
pushfw
shlb
mov
repz
dec
mov
or
push
push
dec
scas
jg
add
xor
andb
jne
fsubs
cmpsl
lcall
jns
mov
mov
pop
out
sbb
out
imul
jb
and
jl
adc
cmp
shl
jb
ret
jmp
xchg
push
inc
push
es
xchg
lahf
or
push
sub
jbe
and
push
test
movsb
in
ds
add
xchg
sbb
inc
dec
and
call
sub
out
mov
test
int3
lea
sbb
pop
push
imul
mov
pop
leave
dec
cmpsb
lock
lret
push
dec
call
mov
in
sahf
fs
adc
xorl
int
aam
pop
mov
add
cmp
leave
or
push
cld
nop
mov
rorl
or
sub
addr16
testb
mov
aad
pop
cli
jl
push
mov
push
pusha
out
mov
enter
add
add
xchg
scas
and
scas
insb
in
cmp
outsb
mov
int
cmp
push
add
fdivrs
cld
xor
ss
lret
repz
movsl
daa
adc
loop
test
adcl
xchg
or
std
out
mov
sub
push
push
in
adc
scas
jge
inc
mov
test
subb
add
sub
out
cmp
cwtl
inc
and
xor
cltd
mov
inc
jbe
push
orl
jp
cmp
push
push
pop
push
dec
sbb
andb
inc
out
pop
cli
rcrb
pop
loopne
cmp
inc
lcall
gs
hlt
ficoml
setae
cmp
push
xchg
ret
hlt
dec
js
lcall
mov
cld
jne
cbtw
xchg
push
fdivrl
mov
imul
fdivs
or
sub
int
inc
stc
cmp
movsb
xchg
push
add
test
leave
xor
aad
mov
popa
roll
mov
stc
jg
adc
popa
repnz
sbb
std
loop
mov
loope
stc
mov
cltd
sbb
add
or
insb
loop
add
mov
or
rorb
rcl
mov
xor
ficomps
adc
jo
pop
push
loop
popa
repz
imul
pop
imul
shl
test
ret
lret
cli
loop
mov
fsubs
mov
and
pop
or
push
and
fwait
mov
sar
inc
and
rcrb
dec
xchg
mov
shlb
imul
cli
leave
dec
mov
dec
pop
jmp
dec
in
inc
dec
lods
inc
inc
and
or
jle
jg
icebp
sbb
fimuls
push
scas
lret
es
mov
in
cmpsb
or
fwait
cmp
lahf
dec
mov
push
cmpb
mov
push
cld
or
dec
sbb
or
and
xchg
les
sti
loop
loopne
negb
pop
das
xor
jl
data16
dec
pop
cmp
stc
into
cmc
mov
cmp
xchg
lcall
adc
dec
dec
dec
shlb
xchg
test
fisttps
negb
je
fimuls
insl
push
fld
daa
sbb
xchg
xchg
out
pop
lea
lea
mov
add
mov
fldt
mov
nop
fsubs
add
sub
dec
sahf
xchg
pusha
insl
mov
or
test
das
xchg
push
mov
scas
outsl
fistps
jnp
jp
sbb
rcl
lds
sub
fadds
dec
cmp
pushf
xchg
inc
int3
jne
push
jne
call
test
mov
xor
pop
jecxz
arpl
jmp
pop
gs
jmp
push
push
addr16
mov
insl
bswap
cld
pavgb
and
sub
sahf
jo
mov
cmp
test
mov
pop
or
cld
push
fdivl
mov
mov
das
sahf
xchg
ret
pop
jb
gs
fistps
je
or
pop
repz
cmp
xor
aas
arpl
jge
push
mov
cmp
fcmovb
cmpsl
push
addr16
sbb
test
or
mulb
xchg
xor
inc
out
xchg
shrl
add
inc
repnz
shlb
sbbl
enter
loop
movsb
and
pushf
or
pop
insl
js
mov
into
fistpll
and
aas
sbb
inc
xchg
jmp
sahf
mov
mov
scas
mov
xchg
jp
jns
mov
push
push
inc
es
out
mov
into
lahf
adc
adc
or
inc
mov
adc
jbe
pop
mov
adc
fstps
xor
jae
mov
mov
sub
in
sbb
jle
js,pn
maxps
test
push
data16
mov
push
add
and
jg
adc
xor
cli
sbb
ret
xor
inc
test
arpl
or
push
cmp
push
dec
inc
outsb
addr16
imul
xchg
sahf
mov
les
xor
shl
aas
rorb
es
pop
mov
inc
lods
push
or
repz
test
js
movl
push
add
pcmpgtd
insl
std
inc
and
aas
fstl
lret
push
and
push
push
je
xchg
pop
ss
adc
push
clc
inc
sub
loop
xlat
cmp
sarl
ficomps
xchg
ja
dec
inc
fbstp
adc
xor
inc
jl
subl
lcall
jb
jle
repnz
stos
scas
xor
cwtl
xor
xor
sbb
cmpsl
inc
test
enter
fwait
xchg
scas
in
data16
add
add
push
inc
or
push
pop
jmp
or
sub
ss
daa
or
xor
mov
jae
mov
loopne
popf
pop
pushf
pop
cmp
jo
jbe
into
icebp
mov
bound
into
sub
icebp
dec
lea
mov
cld
inc
jl
inc
inc
jnp
les
mov
stos
sub
sbb
das
xor
sbb
fisttps
decb
dec
inc
enter
add
jmp
xchg
inc
jns
repz
pop
mov
or
jg
mov
les
cmp
cmp
rolb
loope
mov
cmpsb
push
ret
cwtl
sahf
or
xor
inc
jp
fistps
pop
loop
cli
out
jo
sub
inc
jmp
inc
bound
dec
lret
popf
rcrl
mov
iret
ret
shlb
pop
mov
das
int3
fsubrl
mov
cld
outsl
int
jnp
insl
xchg
add
fdiv
cmc
in
xor
and
jp
loopne
mov
repnz
add
fs
sbb
mov
fcoml
fs
mov
stos
mov
imul
xor
push
pop
lods
adc
repz
popf
lods
arpl
shl
je
inc
xchg
test
mov
outsb
shl
fistl
or
js
ja
dec
mov
cmp
sub
xchg
jb
adc
jecxz
add
and
loop
mov
pop
adc
icebp
repz
xlat
sbb
dec
adcl
inc
jg
or
add
cs
or
scas
xchg
xor
lock
insb
jp
loop
outsl
shrb
xor
or
and
adc
and
sti
fistl
enter
dec
push
jo
cmc
addr16
pop
sti
movsl
sub
cwtl
outsl
jle
xorl
adc
cmc
pusha
in
imul
cwtl
shll
mov
loope
push
sbb
mov
pop
and
scas
xchg
ljmp
cs
aam
add
cld
or
push
pop
stos
movsb
and
jb
xchg
shlb
mov
fwait
sbb
rcr
mov
xchg
stc
enter
mov
cmpsb
jae
in
sub
pop
adc
pop
add
push
jl
adc
jo
jo
cmpsl
jne
jbe
mov
cmp
jb
xor
testl
sub
adc
xchg
aad
and
aaa
insl
inc
lds
repnz
int
in
fistl
and
cmp
icebp
mov
pop
insl
dec
push
test
movsl
push
nop
inc
and
mov
cmp
inc
push
adcb
aas
push
add
enter
push
ja
mov
dec
cmp
test
and
mov
pop
pop
out
xor
mov
add
or
lods
roll
int3
cmpsl
fmul
lock
push
mov
outsl
pusha
or
cltd
xlat
cmp
ja
or
or
sbb
push
aad
adc
mov
xchg
add
and
xchg
leave
pop
imul
mov
add
sub
pop
lods
sub
pop
sbb
cwtl
test
push
jge
xchg
rolb
ds
mov
cmp
xchg
sti
movsb
incl
rorb
pop
sub
cmp
jbe
mov
sub
lea
inc
lea
outsl
imul
dec
xorb
loope
pushf
sahf
pushf
jle
cmp
or
in
arpl
ret
ss
js
jg
imulb
adc
lea
push
sbb
jb
addr16
jb
outsb
fwait
clc
mov
dec
adc
xchg
out
cmp
and
fbld
mov
cltd
mov
cmc
push
mov
dec
insb
fs
pushf
das
add
lds
xchg
and
stos
outsb
and
add
out
je
call
pop
or
je
orb
sub
lods
ss
imul
fimull
fldl
cmpsl
inc
std
je
stos
jge
loope
testl
dec
outsl
sub
sub
xlat
inc
jmp
push
sbb
lcall
sbb
fsts
and
es
or
jb
andb
sbb
movb
sub
sbb
das
inc
xlat
shlb
adc
push
add
push
popl
lret
dec
lahf
lods
popa
cltd
lahf
lret
add
jnp
dec
sub
cmpsl
push
scas
fnstenv
add
call
scas
and
sub
adc
roll
adc
mov
sbb
aaa
sahf
rcr
xchg
lcall
mov
cmp
add
and
adc
out
in
or
add
cmp
sbb
cli
pop
inc
pop
jg
inc
bound
sarl
push
shl
push
mov
fstp
cmp
mov
sahf
shll
pop
inc
frstor
xor
jnp
stos
cmp
mov
jp
cwtl
add
loope
mov
ss
fnstcw
mov
sbb
int3
sar
aas
loop
inc
or
fucomp
push
or
in
xor
sbb
jns
outsb
pop
xor
add
jp
adc
out
test
pop
xchg
xchg
roll
mov
out
addr16
add
lock
mul
rcr
mov
adc
loope
fsubs
push
pop
or
in
fidivs
mov
scas
jbe
push
dec
clc
inc
std
inc
xor
movl
das
jns
add
adc
ljmp
movsb
mov
adc
sub
adc
inc
and
loope
inc
sti
xchg
pop
pop
mov
sub
mov
ja
push
xchg
popf
je
and
cmp
mov
pop
add
cli
mov
inc
mov
jnp
or
mov
pushf
pop
or
stos
xchg
int3
dec
icebp
mov
inc
fs
aaa
mov
mov
or
pop
fsubs
leave
sub
sbb
mov
frstpm(287
inc
xchg
leave
mov
jnp
adc
dec
fidivs
pusha
enter
hlt
rcl
arpl
data16
sbb
sub
xchg
popf
into
cmp
or
ljmp
cmp
pop
ds
subl
jne
int
push
dec
xor
lret
imul
mov
cli
mov
or
rorb
adc
ss
rorl
inc
and
or
sbb
faddp
movsl
mov
jne
jno
sub
stos
repnz
aaa
out
pop
mov
stos
loope
inc
stos
dec
bound
outsl
testl
or
sar
and
pop
aas
cld
mov
add
adc
dec
dec
pop
mov
out
popf
jae
jno
pop
inc
lret
push
xchg
inc
shll
adc
pusha
pop
pop
lds
ja
jno
cmp
ja
outsb
dec
and
dec
xor
cmp
mov
fst
movsl
int
out
add
lds
cli
xor
insl
or
rcrb
pop
jle
ret
mov
add
call
pusha
roll
std
dec
mov
aas
xchg
xor
or
sbb
push
int3
lea
cltd
into
add
sub
enter
mov
call
movb
das
cmp
jo
es
mov
xor
lahf
push
fdiv
and
or
inc
cmp
call
icebp
mov
outsb
insl
nop
push
inc
mov
mov
cmpsb
cmp
or
pop
mov
pop
mov
inc
dec
inc
adc
es
subb
xorb
mov
mov
clc
xchg
or
mov
scas
push
subl
pop
pop
fwait
js
popf
mov
rcr
bswap
xor
mov
nop
jl
jl
dec
xlat
cmp
movsb
sbb
push
xchg
cmp
popa
and
sbb
dec
and
dec
insl
cmpsb
lock
loop
xor
sub
jnp
inc
dec
sbb
sbb
in
xchg
xchg
jbe
gs
insb
cmp
mov
std
pop
and
ret
push
mov
jo
inc
add
lahf
push
or
pop
ljmp
arpl
movsl
jo
inc
and
ret
pop
mov
or
stc
fwait
sbb
mov
jne
jae
into
add
dec
adc
add
js
and
jne
mov
pop
int
mov
in
test
addr16
ret
cli
lret
enter
dec
xorl
loop
ret
pop
push
jno
movl
sbb
insl
cmp
lods
sub
xchg
roll
pushf
dec
adc
in
jns
sub
mov
or
jne
xor
mov
in
les
mov
push
adc
aaa
hlt
cmp
push
fdivl
jmp
pop
jbe
popa
enter
les
imulb
sub
or
sub
bound
push
scas
ret
sbbb
jge
sbb
ds
xor
movsl
xor
sbbl
sar
inc
fidivrs
mov
adc
mov
cmp
sahf
ss
jns
aad
pop
fisubrs
adc
sbb
out
cmpsl
mov
mov
jp
push
repz
mov
int3
cmp
mov
addr16
pop
out
test
andl
inc
iret
stc
orb
rcll
rorb
mov
and
subb
shl
in
mov
sbb
jge
xchg
inc
out
int3
out
dec
bound
insb
fisubrl
xor
push
movsl
fwait
jnp
les
cmp
rcrl
sub
mov
add
ds
inc
scas
sbb
arpl
inc
pop
push
push
jbe
mov
test
jo
dec
es
push
jno
andb
pop
pop
mov
add
movups
mov
movsb
aas
in
and
insl
in
and
pop
rolb
and
sbb
cmc
cmpsl
icebp
fisubrl
sbb
sub
pushw
lods
lods
aaa
cmp
mov
jge
addr16
insb
mov
addr16
daa
insb
bound
out
xor
pop
adc
test
or
lock
jmp
gs
mov
nop
nop
filds
or
xchg
fwait
jle
push
or
adc
cmp
mov
mov
dec
pop
jge
mov
jae
push
pop
mov
cmpsb
push
xchg
clc
test
push
xor
loope
and
jo
shrb
fidivs
mov
je
clc
aad
push
mov
and
jb
inc
lcall
in
ss
loopne
pop
in
pop
cmpsb
test
mov
sub
mov
aam
sub
cltd
sub
outsb
leave
mov
and
xchg
mov
cmp
aaa
test
frstor
dec
lahf
cmp
add
or
push
scas
out
sahf
fmuls
push
push
push
mov
sti
inc
adc
inc
out
and
xor
jmp
fsubs
in
loopne
in
ss
fs
xchg
decb
sub
lcall
shll
xchg
push
jb
sbb
lea
xor
xor
cld
in
jb
fcmovu
and
xor
pop
sub
inc
repnz
jg
movsb
mov
xchg
sbb
mov
movsl
push
adc
xchg
pop
movsb
fiaddl
and
cmp
and
xlat
push
mov
subb
xor
je
adc
xor
inc
mov
inc
and
ret
add
aaa
xor
mov
mov
cmc
bound
repnz
push
cmpsb
ret
or
xorl
mov
dec
xor
xchg
dec
sbb
test
fwait
outsl
lods
fcoms
in
pop
pop
mov
adc
dec
push
or
and
jnp
scas
and
xor
incl
mov
and
sbb
push
test
push
test
arpl
pop
loop
enter
xchg
leave
sarb
push
inc
sbb
sub
jmp
lret
jno
and
sbb
inc
jns
mov
in
lods
sub
mov
test
dec
clc
xchg
mov
mov
into
lret
pop
cmc
sbb
clc
mov
cmp
imul
adc
icebp
mov
cmpsb
rorb
push
imul
shrb
stos
lods
out
mov
adc
jb
stos
loope
call
mov
cmp
popf
adc
gs
ret
out
sbb
add
out
lret
and
repz
mov
mov
xchg
test
add
push
lock
mov
and
orb
loope
mov
jmp
cmp
aad
dec
inc
sub
test
push
outsb
addl
cmp
xor
inc
cmp
into
cmp
jnp
sub
and
insl
ds
jg
xchg
pop
dec
mov
or
sahf
mov
mov
sub
popf
xchg
xor
mov
gs
add
xor
cmp
or
std
mov
fwait
adc
aad
xor
clc
mov
fldcw
test
mov
inc
mov
and
repnz
xchg
or
outsb
ret
lret
dec
arpl
and
pop
cwtl
mov
push
sbb
out
lods
xchg
test
sbb
lock
and
xchg
in
aaa
add
push
xchg
sbb
xchg
adc
shlb
rep
fwait
leave
add
fcompl
mov
fadds
mov
xor
or
jp
inc
mov
in
inc
or
pusha
mov
fsts
negl
jbe
repz
jle
inc
test
es
out
add
stos
clc
das
pop
jo
ljmp
lahf
sub
cmpsb
imul
inc
outsb
ja
ficompl
insb
movsl
loop
jns
sub
adc
jnp
add
sub
sbb
inc
fimuls
cld
scas
pop
cmp
mov
les
int
xchg
ret
ljmp
imul
test
frstor
cmp
aas
fwait
mov
inc
ds
addr16
xchg
sub
adc
mov
movsb
int
or
in
lcall
inc
xchg
imul
dec
push
sbb
mov
xor
push
push
out
sub
mov
pop
mov
or
sbb
mov
inc
inc
out
xchg
mov
mov
mov
add
and
sbb
dec
mov
jg
mov
jecxz
adc
movsb
sbb
sbb
daa
adc
lahf
aaa
or
mov
addr16
jge
notb
mov
hlt
test
mov
jmp
aad
ljmp
fisubrs
pop
leave
adc
mov
std
lock
add
fstps
iret
scas
out
cmp
push
or
cmp
cmc
ljmp
dec
jmp
fs
shll
cmp
dec
cmpsl
mov
add
mov
arpl
pop
test
scas
or
xor
stc
jns
and
imul
mov
stos
mull
nop
xor
ljmp
fcmovu
cltd
xor
mov
pmulhuw
inc
dec
push
daa
fisttpl
stos
out
push
sbb
rolb
scas
clc
fwait
add
adc
cmp
stos
jb
push
out
mov
mov
imull
cli
lahf
jne
pop
decl
inc
push
mov
dec
ret
popa
imul
popf
stc
lret
out
and
lods
mul
stos
xchg
rcl
sahf
addr16
jns
lock
das
fnsave
sbb
xchg
cwtl
sarb
ret
sbb
mov
and
fwait
mov
pop
cs
into
and
or
xor
cwtl
and
pop
les
int3
sti
xchg
mov
xchg
xchg
outsb
mov
inc
inc
xchg
data16
mov
call
scas
mov
outsb
jbe
jmp
jns
stc
addb
add
pop
jb
lods
and
fists
int
jae
push
out
cmc
ds
dec
mov
cmpsb
mov
clc
movsb
dec
aaa
dec
je
inc
mov
mov
push
jmp
push
xchg
jno
cs
in
cli
mov
int3
inc
sbb
fnstsw
insl
adc
movsb
aam
xchg
mov
add
jmp
ljmp
sar
or
sarl
and
rcr
fwait
mov
mov
bound
gs
mov
imul
es
jae
pop
xchg
aas
jne
mov
mov
not
add
in
outsw
mov
sub
jne
xchg
xor
cmp
add
rclb
jne
adc
cld
testl
adc
test
mov
test
enter
shlb
data16
enter
sub
pop
fstpl
pushf
mov
pop
dec
mov
push
sarb
pop
cmp
scas
fidivs
xchg
add
mov
aaa
insb
js
mov
or
int3
fsubrl
xchg
leave
scas
jb
xor
mov
andl
inc
jmp
fistps
jmp
aam
pop
bound
arpl
xor
push
mov
cmp
add
push
xchg
jecxz
cld
daa
add
sar
rcrl
pop
and
out
lcall
cmpsb
mov
xor
popf
out
pop
lret
sbb
pop
dec
test
xchg
ror
ret
ljmp
int3
jg
imull
and
shr
sub
jmp
or
repnz
jno
sub
pop
cmp
dec
sahf
fwait
mov
add
frstor
dec
stc
call
xchg
inc
lcall
aam
fwait
or
pop
call
jmp
mov
fucom
movsl
mov
adc
jo
pop
push
push
fs
mov
cmp
dec
inc
out
pushf
insb
sahf
jae
lahf
push
int3
gs
mov
mov
jmp
push
jle
es
xor
dec
test
inc
pop
and
add
dec
xor
or
cwtl
xchg
adc
ss
dec
scas
out
cmpb
jns
test
xchg
aaa
mov
sbb
es
dec
test
jno
cmp
rolb
jle
push
fldcw
dec
pop
pushf
rcll
pop
scas
rcr
js
jp
bound
aad
jbe
stc
mov
scas
clc
data16
shrl
push
xchg
and
nop
cmpsb
movsb
xor
int
or
rclb
test
xor
push
ret
dec
mov
inc
jmp
cli
pop
jge
jae
pop
sub
data16
fwait
push
ds
sub
and
and
push
mov
gs
mov
xchg
test
xchg
mov
mov
cmp
out
mov
dec
stos
in
mov
hlt
xor
dec
testl
xlat
je
mov
jno
pop
rcrb
ja
xchg
lea
push
xor
jl
cmp
adc
scas
sub
mov
data16
mov
ficompl
pop
gs
xchg
push
inc
fstps
dec
lcall
mov
push
test
dec
mov
sbb
lea
adc
mov
adc
or
mov
stc
mov
negb
cmpsl
lock
mov
mov
xchg
inc
in
movsb
pop
out
leave
lods
xor
add
fdivl
movsb
push
fsubs
fcoml
jno
ret
pop
or
loop
or
nop
pushl
jo
pop
shll
mov
adcl
icebp
cwtl
xchg
mov
rclb
in
xchg
repnz
ds
xchg
les
cld
stc
add
push
xchg
lock
insb
mov
inc
insb
xorb
jne
rclb
xor
outsb
or
mov
add
mov
bound
loopne
gs
xchg
sbb
xchg
mov
fs
mov
dec
mov
fiaddl
aas
nop
mul
sub
sbb
nop
and
mov
imul
in
pop
pop
into
mov
add
out
cmp
xchg
cmc
push
cli
arpl
jp
lods
std
call
xor
mov
xlat
xlat
jae
jo
shll
fcmove
inc
stc
rclb
out
les
add
mov
jmp
repnz
and
cli
add
sbb
push
xor
out
mov
sbb
cmpsb
pop
push
sbb
sbb
jo
inc
ds
or
mov
shl
imul
movsb
lods
lods
testb
xchg
sbb
dec
sbb
xchg
fwait
repnz
xchg
dec
lea
mov
jno
cmp
dec
fdivl
popl
xchg
push
mov
or
aas
xchg
push
fbstp
push
xchg
aaa
sub
scas
sub
fdivl
or
dec
out
fs
inc
je
mov
add
push
ret
ss
addr16
sub
cwtl
nop
pop
mov
jns
mov
cld
in
xchg
loopne
iret
pop
sarl
sbb
or
dec
xchg
add
mov
sbb
add
mov
cmpl
mov
les
push
lock
mov
jge
aas
xchg
leave
push
pop
mov
mov
cmp
push
lahf
popf
int
cmp
xor
jno
call
jb
push
imul
sbb
bnd
cmp
push
cmpsb
push
mov
ret
lret
movsb
sbb
mov
jmp
pop
outsb
jnp
or
mov
in
fcoml
divl
fnsave
call
xchg
pop
iret
add
decb
lret
jge
repz
and
mov
dec
test
push
test
pop
xlat
fdivr
jl
xchg
test
and
adc
je,pt
sub
push
or
out
adcl
dec
or
jl
subl
int
mov
popf
lret
mov
lods
and
fldt
push
outsl
add
lahf
pop
iret
jbe
leave
dec
xor
shrb
outsl
aam
cmp
sbb
fldenv
fstpt
or
insb
and
pop
clc
icebp
bound
loopne
imul
push
shll
dec
dec
jmp
mov
push
mov
js
loopne
xor
sti
mov
cld
mul
xchg
dec
ret
mov
loopne
aam
ss
lods
int3
adc
fdivrl
in
aad
in
or
dec
jno
test
aas
lret
and
mov
popa
sbb
stos
fidivs
cmp
xor
movsl
xor
and
jb
add
shll
xchg
in
test
sbb
jle
test
icebp
imul
push
out
lahf
test
pop
push
insb
ret
adc
lock
out
outsl
lods
lock
mov
sbb
jnp,pn
int
stos
inc
xchg
push
cmp
leave
sub
pop
ja
loopne
push
and
mov
repz
adc
cmpsb
lock
pop
mov
out
in
sarl
jp
pushf
cmp
push
mov
xchg
andl
aaa
dec
or
aad
sbb
mov
std
enter
cwtl
lock
bound
aad
pop
stc
push
mov
push
push
mov
add
ljmp
sbb
imul
mov
inc
jno
test
js
and
or
adcl
xor
faddp
mov
cmp
leave
cwtl
rol
mov
sbbl
inc
mov
in
test
cltd
xor
pcmpgtb
daa
rcr
inc
outsb
add
push
cmc
and
fstl
sub
cmpsl
mov
xchg
push
mov
mov
jmp
mov
sub
sub
mov
pushf
lock
cs
xlat
inc
ljmp
pop
frstor
mov
fidivrl
push
inc
fs
lds
push
jp
pop
cmp
inc
sbb
xchg
pop
jg
lds
jecxz
pop
pop
test
sbb
push
xor
xchg
nop
xor
test
sub
sbb
and
dec
cmp
push
push
jp
sub
idivl
ret
and
notb
adc
pop
dec
mov
aas
cmpsl
push
lret
jmp
push
push
mov
lds
and
xorb
shrl
pop
sbb
push
arpl
or
cld
gs
outsl
dec
std
cmc
xchg
int3
fisubl
insb
stc
negl
repnz
test
mov
das
clc
cmp
addr16
and
mov
notb
dec
clc
adc
ret
push
inc
mov
mov
mov
inc
mov
jge
lahf
xor
mov
fimuls
aas
fdivp
sti
adc
rorb
mov
ret
andl
jle
dec
xchg
push
leave
or
shll
add
arpl
push
xchg
outsb
jns
mov
fld
pop
cmp
xchg
addr16
loopne
incl
push
bound
dec
mov
test
cld
jns
outsb
fucomp
fbld
inc
inc
loopne
mov
cwtl
sub
aaa
mov
sub
outsb
mov
mov
mov
mov
jae
test
pop
mov
cli
mov
push
mov
outsb
xchg
push
sub
adc
mov
ret
mov
mov
jl
mov
pop
and
inc
stc
pop
ljmp
adc
rcpps
fdivr
add
fdivs
jno
mov
aad
sti
xchg
xor
movb
xor
mov
out
addr16
out
adc
stos
aad
or
or
fstpt
scas
repz
adc
sub
adc
mov
les
das
xor
jle
test
enter
pop
push
xlat
sbb
pop
lods
sahf
dec
inc
lods
cmpb
jb
sbb
leave
mov
xchg
push
xchg
inc
xor
subb
cmc
jo
jnp
ljmp
mov
xchg
fidivl
sarl
or
mov
int
mov
cld
sbb
and
sub
push
mov
inc
xchg
mov
sbb
out
inc
popf
and
xor
mov
xchg
icebp
sub
push
iret
std
inc
call
mov
dec
mov
js
test
cwtl
adc
cli
roll
pop
mov
fldt
push
std
xchg
pop
fcomps
insl
sarl
divb
xor
cmp
loopne
pop
movsl
fisubl
push
push
inc
mov
cmp
aaa
ljmp
fidivl
push
ret
sub
getsec
and
xchg
xchg
jmp
push
sub
loop
cmc
fs
pop
or
or
notl
dec
add
nop
ret
or
lcall
int
gs
mov
rcpps
sahf
bound
sbbl
and
movsb
push
or
lods
mov
iret
adc
jp
scas
lock
inc
test
nop
jo
test
sub
dec
decb
fs
addr16
rolb
dec
movsl
mov
fidivl
arpl
push
mov
pop
xchg
pop
pusha
adc
ja
test
mov
mov
xchg
jecxz
in
daa
xor
cmp
scas
or
jae
les
mov
les
push
stc
shr
movsb
cmp
es
adc
xor
jb
dec
lods
stos
neg
and
lds
jae
fnstsw
sti
mov
repz
mov
push
sub
mov
orb
push
dec
sarb
sti
sahf
add
sub
sub
hlt
xor
xchg
bound
popa
fstps
dec
dec
and
adc
int
addl
push
mov
in
mov
push
in
insl
jmp
jno
hlt
adc
inc
xor
mov
fdivp
sti
daa
in
loopne
cmc
jno
jle
aad
xlat
mov
xchg
stc
mov
push
mov
and
sub
sbb
movsb
sbb
dec
stc
jmp
ja
mov
mov
imul
adc
test
popa
push
scas
cmp
mov
xor
ds
je
in
xor
or
int
pop
xchg
push
xchg
adc
or
sbb
sub
pop
xchg
and
mov
add
xchg
inc
push
sti
inc
shr
pop
jle
insl
dec
bound
adc
cli
inc
add
ret
punpckhdq
lock
fsubl
fsubl
mov
sbb
cmc
scas
fwait
sahf
push
mov
mov
in
dec
dec
and
hlt
lahf
mov
call
dec
or
imul
daa
mov
push
into
rolb
aas
insb
out
push
gs
sarb
inc
mov
sbb
or
dec
roll
and
adc
and
xor
gs
arpl
adc
cmpsl
sub
lret
jmp
mov
outsb
or
sub
mov
andb
cmpb
rclb
sbb
ja
jo
dec
out
imul
into
sub
xorb
fmulp
out
enter
sahf
inc
popf
xchg
ja
ljmp
sub
mov
mov
sub
aas
sub
push
inc
jno
je
ret
xchg
pop
push
outsb
cmp
push
movsb
jp
sbb
add
sbb
xchg
ja
das
jbe
aas
pop
leave
dec
xor
cli
je
pop
adc
and
jle
stos
test
adc
sub
inc
sub
sbb
imul
mov
adc
ret
pop
js
repnz
and
lahf
lahf
jle
push
add
scas
fnstenv
popl
sahf
mov
adc
orb
pop
mov
or
pop
xchg
rcrl
mov
into
lea
inc
insb
mov
bound
mov
and
popf
aad
in
mov
je
mov
mov
mov
mov
add
loop
mov
popf
stc
mov
push
and
jl
jge
sahf
test
xchg
pop
pop
decb
clc
loope
iret
lds
hlt
mov
test
out
mov
push
lret
xchg
pop
push
aaa
sti
xor
add
pop
in
jecxz
popa
out
ja
je
mov
mov
inc
pop
mov
or
mov
sub
stc
loop
mov
out
aaa
daa
int3
pop
lock
int3
out
adc
std
pop
lahf
in
jmp
aaa
stos
test
cs
adc
or
push
push
push
pop
mov
repnz
mov
int
mov
clc
lds
inc
movsl
jno
int
adc
cs
adc
mov
jmp
or
dec
xor
xor
cmp
mov
dec
mov
shr
xchg
pop
test
mov
test
repnz
add
insl
pop
test
sahf
lods
out
mov
cmpb
lods
ret
sub
js
punpckhwd
test
mov
addr16
dec
lcall
aas
in
mov
rclb
lcall
fdivrl
lods
daa
pop
lahf
pop
out
inc
xor
outsb
fcom
dec
inc
mov
fsubrl
je
testb
test
nop
xchg
sbb
ljmp
in
negl
push
add
jg
dec
jno
push
adc
fs
jge
lcall
andb
sbb
gs
lret
sub
cmpsl
dec
dec
push
cmpsb
es
adc
pop
pop
or
jge
sbb
arpl
push
ret
mov
xchg
or
fcomps
es
mov
push
add
push
pushf
cld
out
sub
pop
popa
mov
ret
adc
loop
sbb
out
jae
popf
clc
ret
daa
jge
jl
mull
inc
pop
push
sahf
fwait
jmp
outsl
pusha
aas
outsl
push
mov
daa
adc
adc
inc
xchg
rol
add
test
adc
test
in
movb
and
je
test
sahf
fidivs
push
or
and
xor
in
mov
jne
and
pop
roll
add
pushl
shll
dec
mov
aas
divl
adc
push
sbb
jmp
sbb
fs
jecxz
jae
xchg
dec
lahf
jnp
jge
loope
iret
adc
mov
ss
jns
push
mov
jle
push
das
sbb
xor
mov
popf
mov
push
daa
inc
dec
xchg
test
mov
movsb
in
mov
pop
push
scas
arpl
jno
shll
movsb
dec
pop
loope
xor
mov
fsubrs
repz
in
fadd
ds
xchg
xchg
in
pop
fsubr
push
movsb
ret
jbe
xchg
mov
mov
mov
adc
mov
mov
sbb
sbb
outsb
daa
fnstcw
mov
cmp
aas
jmp
xchg
es
cwtl
ficoml
mov
push
inc
mov
mov
aad
iret
enter
xor
mov
loop
xchg
fwait
rclb
mov
fisubrl
repz
cmpsl
sub
repz
add
push
xor
add
jg
scas
sub
icebp
push
add
shlb
mov
or
clc
mov
ret
mov
jge
movsl
inc
and
jl
shr
addl
test
inc
flds
loope
mov
je
in
test
mov
mov
lret
repz
lods
add
pop
push
dec
mov
xorl
cli
out
cmpsl
cmp
sub
inc
je
sahf
out
mov
xchg
pop
jmp
repz
in
dec
scas
xor
pop
add
adc
mov
fistl
mov
incl
pop
xchg
or
pushf
int
fsubr
dec
scas
push
push
jge
lds
pop
ja
cmp
dec
aam
mov
fcoms
pop
pusha
enter
ret
test
sub
add
icebp
push
add
mov
sbb
lcall
xchg
pop
fldenv
in
push
scas
shll
cmp
jge
in
stos
mov
in
out
xor
out
iret
push
pop
cwtl
mov
jne
sti
fstpt
sbb
and
jmp
jecxz
cltd
stos
pop
xor
insl
inc
inc
es
sbb
dec
and
pusha
loop
dec
out
stos
arpl
sub
lret
sbb
mov
push
subb
stc
pop
pop
scas
addr16
xchg
into
or
test
push
imul
lds
pushf
xchg
xchg
mov
mov
mov
ja
or
test
inc
and
ljmp
push
or
shrl
dec
orb
fadds
add
mov
cmp
add
and
arpl
rorb
addl
stos
cli
inc
mov
sbbb
test
cmp
push
leave
pushf
push
dec
sub
adc
in
insb
or
leave
push
repz
fnstenv
repnz
add
jmp
and
not
or
xor
inc
loopne
sbb
test
push
jno
addr16
adc
sub
pop
insl
je
roll
add
and
inc
leave
dec
aaa
jb
js
cltd
icebp
mov
inc
clc
loop
stos
add
movsl
clc
pop
pop
push
sub
das
jg
inc
sub
xor
cmp
iret
cld
inc
sbb
or
push
adc
shr
pop
popf
nop
pop
int3
das
mov
aam
enter
cwtl
sbbl
mov
add
cmp
out
xor
lea
sub
mov
mov
sbb
or
aam
rcrl
loop
sbb
jne
sub
xlat
dec
dec
sbb
mov
dec
pop
pop
sbb
ss
mov
ss
out
lahf
mov
popfw
sub
jo
sub
xor
jns
pop
popf
rclb
cmp
jmp
cmp
pop
xchg
call
add
sub
jo
xor
lret
jecxz
and
xor
shll
stos
push
lret
fstps
mov
xor
scas
mov
ljmp
pop
mov
xor
cmp
or
xchg
loope
jnp
lret
push
lods
fsubrs
aad
in
cmpsb
or
push
dec
fistpll
jge
dec
mov
push
adc
out
insl
cltd
adc
mov
fwait
jle
sbb
cltd
mov
cmp
aas
mov
lret
jno
fdivr
les
xor
fmull
mov
inc
xor
loop
lea
jmp
add
xor
xchg
xchg
lret
rcr
stos
cmp
aas
inc
outsl
mov
data16
mov
mov
mov
ret
scas
mov
lods
insl
mov
out
ret
mov
mov
cwtl
push
adc
cli
cmc
out
sbb
shl
int
jns
out
pop
in
scas
push
fdecstp
mov
dec
test
mov
push
xchg
mov
and
sbb
test
mov
xchg
xchg
cli
loop
or
pop
inc
mov
pushf
sub
dec
js
sub
xchg
dec
cmc
fildl
or
repnz
sbb
ss
xor
push
pop
call
sub
fcom
dec
outsl
xor
add
push
psllw
mov
sub
testl
icebp
jno
jle
pop
cmovae
mull
xchg
push
jmp
rolb
push
mov
shll
mov
hlt
add
sbb
push
jl
ja
fldt
aad
data16
repz
and
push
lcall
mov
mov
dec
mov
call
inc
mov
mov
add
add
adc
sbb
mov
push
cli
and
andl
test
fs
adc
arpl
repz
int
and
and
xchg
mov
and
cmp
data16
popa
scas
xor
inc
out
roll
add
mov
dec
movsl
xchg
std
push
pusha
jbe
roll
pop
jnp
fldt
out
data16
xor
xchg
lds
push
mov
sub
inc
ss
loop
dec
sbb
loopne
clc
ret
insl
call
add
pop
mov
js
and
imulb
outsb
cmp
mov
inc
fisubl
iret
lret
push
iret
and
int
cmp
xchg
lcall
mov
ja
jecxz
insb
pop
xchg
fwait
test
lret
lcall
dec
jecxz
jb
jl
mov
dec
roll
div
cmp
push
add
lret
xchg
pop
loope
add
loopne
arpl
inc
adc
fsub
mov
push
dec
out
adcl
clc
sub
mov
cmp
cmp
in
stc
in
lods
jns
out
shlb
mov
sbb
push
and
cmc
pop
in
inc
push
jbe
divl
jg
push
das
sub
cmc
sub
add
scas
mov
movsb
insl
inc
inc
sahf
inc
xor
test
jge
xlat
ret
push
and
jmp
daa
lea
sub
xor
cmp
xchg
in
enter
inc
and
add
dec
or
cmp
cld
sub
sbb
sub
sbb
sub
fidivrl
cwtl
inc
in
loope
out
enter
jb
movl
push
stos
jne
nop
in
add
jg
mov
repnz
inc
inc
js
jbe
loopne
sub
ror
jp
mov
pop
jge
fiadds
lock
inc
sub
jne
mov
int3
adc
sbb
adc
lods
xchg
mov
scas
jle
inc
cmpb
push
xor
add
cmc
fistpl
cmp
adc
int
cmp
cmpsl
cli
roll
push
mov
push
adc
jge
daa
dec
cmpsl
ficoml
rcrl
testb
shrl
imul
push
fmull
or
scas
push
leave
jne
add
insb
test
xchg
into
sub
xor
pop
and
mov
sti
push
sbb
xchg
xor
mov
movsb
mov
int
int3
xchg
ret
call
cmp
jl
ljmp
cli
cli
sub
xor
push
xchg
mov
add
push
rsm
sub
add
mov
scas
or
cwtl
bound
dec
mov
inc
ds
mull
in
push
divl
jbe
daa
mov
inc
lds
movsb
mov
arpl
js
mov
lcall
jp
cmp
fcomps
dec
shll
jecxz
push
lret
or
mov
mov
scas
jecxz
enter
inc
repnz
add
and
inc
cmp
push
stos
and
mov
addl
mov
jns
fmulp
shll
inc
fwait
lods
inc
push
mov
cs
pop
fldt
roll
les
xchg
loope
mov
pop
lret
cmp
dec
hlt
rclb
lea
rol
js
and
sahf
xchg
leave
push
das
rcrb
rolb
mov
into
cli
test
clc
lods
inc
jae
cltd
cmp
jmp
sub
popf
int3
ja
nop
mov
call
dec
aam
in
clc
cmp
pop
cmpsb
sub
ds
lea
mov
pop
inc
out
outsl
ja
js
repz
jmp
fs
nop
mov
xchg
pop
or
mov
add
stos
sti
mov
pop
shl
and
in
add
test
popl
aas
rclb
fs
in
inc
jne
loop
inc
icebp
xor
pop
xchg
push
mov
inc
xchg
push
add
cltd
xchg
in
fsubs
and
sub
xchg
mov
mov
call
fs
addr16
mov
cmp
gs
dec
aad
sbb
add
jge
loopne
fs
insb
popa
pop
mov
mov
repnz
sub
call
fs
jmp
xor
xor
std
or
in
mov
and
lods
xchg
test
ret
or
insb
sub
ljmp
movsl
dec
test
std
cs
fidivrl
sub
addl
mov
fcomps
cmp
dec
or
mov
mov
push
rol
dec
dec
cmc
outsb
les
out
les
lret
test
jns
adc
stos
fimull
std
or
jns
cmp
movsl
test
or
sub
pop
lods
pusha
fistl
aam
ret
jae
scas
test
sbb
adc
sub
in
loope
lods
xchg
fistpl
cmp
mov
add
mov
idiv
pop
fnstcw
je
adc
leave
and
mov
and
shll
add
pop
xchg
in
xchg
fdivrl
loop
je
pop
out
inc
pop
sub
xchg
jl
ret
enter
push
inc
inc
out
lret
cmp
lea
std
jmp
mov
mov
mov
push
and
adc
das
inc
mov
lret
lods
int
or
repnz
pop
fdivrs
pop
aaa
ds
cmpsl
pop
mov
sub
jae
mov
push
push
int
dec
or
mov
fwait
jmp
pushf
jge
and
push
lods
ret
push
add
gs
or
fimuls
aad
in
and
pop
jno
xor
sub
jecxz
jge
push
xchg
pop
sub
gs
jmp
ljmp
dec
jg
pop
sub
xchg
call
rep
jge
xchg
or
fs
pop
hlt
or
mov
cmc
push
inc
mov
xchg
inc
pop
sub
push
and
mov
es
repz
repnz
xor
enter
mov
jmp
push
xchg
js
mov
jle
inc
fiaddl
dec
xor
iret
jecxz
test
shrl
fs
push
jg
cmp
add
fidivl
mov
pop
mov
in
cmp
cltd
cmp
mov
and
jp
add
aam
mov
inc
mov
js
xchg
pop
lret
ljmp
push
inc
std
data16
mov
inc
push
inc
jae
and
repz
in
inc
icebp
cld
dec
mov
call
xchg
jecxz
inc
mov
xchg
or
push
psubb
cmpsl
fiadds
xchg
fwait
and
lahf
loope
push
dec
pop
leave
jl
dec
insb
inc
mov
mov
shlb
jbe
inc
mov
out
lcall
mov
scas
mov
sbb
iret
xchg
xchg
push
cmpsl
cmp
jno
iret
nop
fcoml
pop
adc
xor
or
daa
aaa
std
test
cli
popa
xchg
xchg
xchg
scas
jno
arpl
ljmp
jecxz
inc
mov
gs
out
dec
test
idivb
call
dec
out
inc
popa
jns
clc
cmpsl
xor
ds
mov
repz
push
decl
xor
fld
sahf
stos
ss
mov
loopne
sti
dec
push
sub
es
xchg
push
or
int
rorb
orb
pop
mov
cwtl
in
inc
out
jo
jl
add
xor
jb
pop
pop
in
fisubl
stos
je
sub
cmp
cmp
xchg
fstpt
cltd
inc
adc
iret
pop
and
cld
push
xlat
sub
push
pushl
sub
sbb
xor
push
xchg
cmp
subl
shll
insb
push
pop
pop
sub
enter
loopne
shrb
arpl
xlat
test
jmp
jmp
out
mov
outsb
fwait
stos
jecxz
fstpt
out
xchg
int3
imul
add
mov
rorl
sbb
jg
add
outsb
cltd
clc
shl
jbe
inc
sarl
sti
jns
dec
jo
loop
subb
mov
scas
dec
inc
ret
mov
out
dec
fwait
lds
add
fnstcw
insl
loope
sbbb
cmpsb
and
add
lahf
cwtl
xchg
fildl
dec
sub
mov
pop
into
mov
insl
push
xchg
loop
int3
push
jmp
jnp
pushf
jmp
dec
cmp
cld
cmp
jmp
movsl
pop
out
pop
in
or
jno
dec
ret
fcompl
mov
sbb
popa
push
jb
xor
cmc
mov
pop
jnp
adc
mov
arpl
xchg
imul
add
jno
mov
sahf
pop
out
mov
scas
in
push
test
rcrl
inc
sub
mov
aas
sub
sub
xor
mov
pop
and
rolb
imul
ss
xchg
movsl
jmp
stc
stos
popa
outsb
sbb
repnz
ret
arpl
in
mov
stos
jp
daa
sub
in
mov
xor
cs
mov
in
push
imul
pusha
push
push
movsb
mov
aam
and
push
cmp
shrb
push
lods
lahf
jp
sbb
sub
arpl
sub
in
sahf
inc
testl
adcl
xchg
test
push
mov
inc
xchg
add
push
ret
sbb
test
push
inc
in
test
into
fdivs
mov
bound
mov
or
shll
in
aam
inc
xchg
jo
mov
inc
lock
ror
imul
shrl
scas
dec
andl
data16
roll
inc
or
push
xchg
jbe
out
sub
cmc
outsb
mov
xchg
push
xchg
fucomp
lea
lds
jle
adc
out
sub
lea
cmp
sbb
jl
pop
pop
ret
jmp
jmp
dec
mov
movl
mov
mov
jae
and
jp
or
push
icebp
and
ficomps
mov
lcall
lahf
mov
add
push
lret
aad
ret
ret
test
xchg
in
ss
popa
in
in
pop
pusha
jnp
mov
xchg
add
adc
lock
fnsave
mov
orl
les
inc
hlt
divb
adc
push
pop
popa
lds
dec
ficoml
xchg
or
mov
jg
imull
loop
imul
and
xor
dec
sarb
mov
sbbb
inc
sub
jmp
or
jmp
lret
iret
sbb
in
mov
pop
ror
mov
xchg
dec
pop
xor
and
int
rcrb
test
push
lods
cmp
push
mov
rcrl
push
mov
cmp
bound
cmpsl
jmp
scas
shlb
fildll
in
bound
sti
imul
mov
pop
fwait
add
fcoml
adc
inc
es
test
sbb
or
and
jmp
scas
sub
out
xchg
adc
push
inc
nopl
cltd
push
jl
and
adc
inc
movsl
xor
gs
enter
add
aam
sub
es
inc
stos
aaa
scas
imul
add
jl
jne
ret
loope
and
ds
inc
mov
shlb
and
push
sti
mov
cmp
daa
lahf
pushf
mov
mov
jbe
xchg
stc
jge
nop
stos
aad
cli
cmp
popa
xchg
insl
lds
mov
popf
lods
push
lret
mov
cmpsb
fstpl
mov
or
out
leave
and
jmp
test
in
inc
push
pop
leave
gs
lods
stos
cmp
sub
or
pusha
xchg
aam
pop
mov
mov
pop
dec
mull
in
add
insl
push
enter
mov
ds
mov
xchg
cmpsb
mov
mov
jb
xor
enter
mov
pop
mov
lea
xchg
inc
das
dec
jle
loopne
stc
jle
jo
sbb
out
outsl
shll
push
sti
ljmp
mov
cmp
fbstp
addr16
nop
mov
xor
push
xor
mov
loop
lock
inc
sub
das
lds
fimuls
dec
repz
sbb
lods
dec
xchg
cld
out
push
fnstenv
cld
insb
gs
inc
fdivp
pop
mov
in
adc
pop
popf
jno
jno
mov
fsubl
in
xchg
lret
in
mov
xor
mov
sbb
lods
ds
jnp
outsb
sub
pop
insb
inc
ja
imul
dec
adc
sbb
pop
div
push
jae
ljmp
notb
rcr
pop
pop
inc
fucomp
push
push
add
sbb
test
cmpsl
xchg
iret
rorb
pop
sub
movsl
lahf
push
jge
and
xor
notb
push
pop
repz
arpl
pop
fdivrs
loopne
in
pop
cmp
fistpll
inc
and
pop
loopne
cmpsl
mov
or
pop
or
or
adc
add
adc
cld
sub
ss
dec
inc
lea
dec
mov
xchg
mov
leave
pop
sti
jle
leave
int3
xor
out
xor
or
cld
lcall
pop
push
or
ret
sbb
dec
pop
sub
mov
push
sbb
sbb
shlb
cmpl
pusha
sbb
icebp
sub
and
push
inc
mov
pop
pusha
in
fwait
mov
dec
jmp
cwtl
bnd
mov
in
xchg
xchg
daa
sub
loopne
adc
shlb
outsl
out
or
aam
sbb
pop
xchg
addr16
dec
fisttpl
outsb
cmpsl
int3
cli
cwtl
cmp
fcoms
inc
mov
enter
bound
mov
sbb
xchg
loop
ljmp
push
and
daa
dec
pop
jl
js
cli
std
popa
pop
sbb
cmp
xchg
scas
cmp
pop
adc
adc
xchg
and
testl
rorl
xor
inc
xchg
into
jl
jmp
test
xor
push
or
xchg
cmp
mov
mov
jo
aaa
sbb
icebp
jmp
xor
xchg
sbb
pop
popf
pop
or
cli
out
adc
or
jns
pop
lods
imul
adc
imull
mov
jno
mov
sbb
xchg
mov
adc
mov
jno
jb
hlt
cmp
jns
shrl
xchg
iret
sub
insl
add
adc
push
xorl
loop
shll
clc
js
sbb
inc
leave
mov
cmp
or
dec
fstl
shlb
cmp
jno
pop
int3
fs
adc
sub
fsubl
push
divb
push
mov
repnz
in
cmp
jecxz
dec
and
call
mov
xchg
xchg
scas
sbb
ja
sbbb
cmp
sbb
dec
mov
arpl
aam
add
xchg
hlt
jb
push
sbb
and
add
adcl
xchg
insb
sbb
mov
cmp
dec
cmp
daa
shrb
sti
jmp
incb
es
lods
lock
or
ret
mov
roll
cmp
dec
push
sbb
cmc
dec
xor
rclb
xor
mov
ja
jmp
inc
mov
out
ljmp
int
clc
adc
inc
mov
shll
or
pop
out
cs
ret
add
mov
inc
inc
fcmovnb
test
push
pop
insb
xor
imul
jno
add
mov
dec
cmp
push
mov
test
mov
stos
out
inc
jo
mov
sub
xor
mov
push
les
outsl
rolb
adc
sbb
daa
mov
add
test
mov
ljmp
lds
sti
and
das
cmp
sti
mov
loope
mov
lds
cmp
cmp
and
or
xchg
xchg
jge
repz
sti
lea
or
lahf
or
push
inc
mov
and
dec
or
fs
push
inc
pop
xor
push
xchg
idivl
mov
pop
test
shll
dec
fcomps
mov
mov
or
sub
aad
std
cmp
push
outsl
sbb
pop
aaa
jp
push
jg
add
movb
sub
fstps
loope
xchg
arpl
insl
movsb
cwtl
imul
rclb
pop
pop
nop
pop
and
mov
in
sub
lcall
push
imul
jg
mov
lret
fs
sbb
jb
push
cli
rclb
mov
jo
lret
sbbl
inc
sbb
adcl
je
cmp
ret
and
xchg
adc
ret
pop
sbb
out
test
stos
flds
inc
inc
ljmp
sub
pop
movsb
orb
sub
dec
and
or
das
hlt
mov
cltd
sarl
loop
push
cmp
mov
mov
mov
cmp
push
lret
les
and
push
pop
into
imul
mov
lret
movsb
scas
dec
sub
leave
das
dec
mov
test
orb
sbb
iret
popf
jnp
dec
mov
push
cli
neg
cmpsb
add
bound
nop
lret
scas
aaa
pop
sub
in
scas
repz
or
jnp
xchg
pusha
iret
lret
push
call
mov
or
pushf
aaa
jns
movl
mov
pslld
adc
xchg
pushl
lahf
cmc
sub
data16
outsl
pop
sti
scas
cmp
cmp
push
dec
int
push
sub
adc
cmp
insl
gs
mov
mov
or
into
jp
sub
jb
cmp
sub
cmc
test
adc
out
popa
mov
sbb
push
add
adc
or
ja
adcl
ficomps
xlat
nop
mov
sti
ljmp
lea
call
mov
adc
add
mov
lea
fidivl
cmp
repnz
lahf
fstps
xchg
rorb
stos
dec
inc
dec
ss
movsb
shlb
inc
lods
push
loop
jno
jnp
sbb
insl
sti
mov
xchg
rcl
enter
shlb
adc
sahf
inc
inc
dec
pusha
stos
jae
subb
and
mov
add
pop
dec
inc
lea
stos
cli
fmulp
dec
or
movl
movb
stos
aaa
dec
adc
icebp
lret
sub
pusha
imul
rol
mov
mov
test
es
mov
out
push
lods
rorl
ss
in
lahf
nop
into
sub
pusha
rep
clc
icebp
sbb
out
clc
nop
gs
test
mov
cmpsl
popa
and
cmc
imull
adc
test
push
sub
sub
xor
or
cwtl
fs
or
into
pusha
cli
cmp
std
dec
pop
jnp
push
popf
sti
and
pop
movsb
xor
mov
in
or
add
pop
adc
cmp
add
pop
bnd
xchg
fnstenv
in
imul
stos
mov
xchg
je
out
jge
sarl
xor
ja
test
mov
in
cmp
lock
dec
xchg
add
pop
jns
xor
dec
int3
sbb
jle
adc
pop
aaa
dec
push
push
imul
add
ss
stos
jne
sbb
mov
mov
scas
pop
ret
mov
mov
jo
mov
pop
sbb
orb
or
mov
pop
pop
mov
push
out
lds
movl
loopne
imul
bound
pop
out
fdiv
jecxz
xor
jbe
sub
dec
xchg
leave
cmc
arpl
test
pop
arpl
std
lret
aas
repz
andl
and
push
test
lods
fmuls
insl
adc
js
and
pop
mov
aaa
mov
cmp
push
fcompl
sbb
ret
mov
cld
xor
mov
lds
jmp
push
push
repnz
mov
jb
jns
ffreep
cmp
aaa
fistl
fisubrl
out
in
fcoms
mov
push
out
movsb
leave
mov
or
xchg
or
outsl
jae
and
data16
xor
add
outsb
imull
sub
pop
inc
mov
cmpsb
push
sub
lods
divl
fcomip
clc
test
loopne
sarl
nop
cmp
sbb
sbb
dec
popf
call
out
repnz
mov
imul
or
mov
adc
cli
push
fdiv
add
insl
insb
or
xchg
in
push
popa
add
inc
push
loop
mov
jp
in
add
inc
or
pop
sub
push
xchg
fdivs
sub
insb
xchg
jg
pushf
fistl
repz
in
std
data16
and
popa
push
mov
sub
repnz
dec
add
mov
pop
xor
test
push
outsl
jge
in
sub
clc
in
call
mov
and
or
push
mov
js
cmp
sbb
cmpsb
mov
icebp
push
xor
mov
lret
jl
lods
cmc
popa
lahf
push
lods
std
cld
dec
call
cmpsl
pop
mov
and
das
jmp
das
scas
jg
fwait
loopne
imul
mov
fdivl
das
push
lret
pop
or
roll
sarl
cmp
sbb
mov
in
or
imul
adcb
test
insl
std
shl
mov
inc
fistpl
pop
fucomi
push
mov
ja
xchg
imul
lahf
or
push
and
inc
pop
xchg
ret
push
fstps
jnp
ljmp
lcall
jbe
dec
in
int
adc
cwtl
mov
fcomps
lret
ja
xchg
dec
cltd
sbbl
push
adc
into
mov
js
pop
add
inc
push
and
movaps
iret
sbb
mov
xor
mov
test
xchg
lea
push
inc
sub
inc
xchg
aad
int
add
cld
xor
lods
dec
inc
jmp
lahf
cmpsl
fldt
xchg
out
sti
out
mov
das
sub
jnp
mov
icebp
in
push
sbb
imul
xlat
and
bound
and
popf
daa
mov
inc
inc
sub
punpckhdq
jecxz
mov
jl
mov
dec
stos
nop
fnstsw
cli
dec
jmp
dec
pop
scas
adc
cmpb
or
in
or
xchg
outsb
pop
mov
lds
scas
ror
xchg
out
jge
std
leave
cmc
sbb
push
js
mov
push
push
sub
fsubs
pop
das
cmpsl
pushf
xor
sbb
nop
call
clc
clc
fildll
in
and
out
pop
or
out
fdivs
addl
sub
pop
ljmp
sub
adcb
xchg
test
testl
lock
xchg
stc
lret
shlb
pop
cltd
mov
push
lcall
sbb
inc
push
mull
lds
fistpl
out
lods
loopne
ja
fisubs
mov
push
inc
aam
add
sbb
and
mov
jb
or
cmc
andl
loopne
test
or
loop
in
sahf
faddl
xlat
xor
jno
cli
sub
adc
outsl
mov
and
push
push
or
mov
pop
lods
adc
into
insl
cmp
jl
dec
or
nop
mov
mov
stc
addr16
xor
mov
lods
sbb
in
push
insl
int
ret
popf
sub
or
add
imul
jb
adc
inc
mov
push
out
dec
push
es
outsb
hlt
mov
enter
sti
ret
insl
jae
stos
inc
fcoms
xor
cmp
cmc
mov
pop
in
scas
adc
call
ds
jb
iret
ret
push
jbe
sub
pop
leave
jl
fmulp
jle
sti
outsl
add
test
in
sbb
movsb
test
and
ds
test
xor
xchg
es
adc
outsb
dec
cmc
jno
lret
shll
dec
dec
or
mov
mov
loop
jmp
or
cmp
insb
ds
in
ss
imul
outsl
push
fcoml
inc
xor
dec
mov
mov
inc
iret
pop
mov
xlat
pop
pop
pop
jmp
or
fadds
mov
dec
leave
add
roll
cli
mov
out
ljmp
cmc
mov
jno
lods
out
inc
inc
lock
push
dec
mov
mov
fidivrl
rclb
mov
mov
int
pusha
out
mov
or
mov
shrl
mov
lea
idivb
pop
pop
enter
adc
and
repz
xor
inc
adc
push
ljmp
roll
sbb
cmpsl
xchg
xchg
cmp
jle
fs
hlt
call
jbe
jbe
lcall
loopne
sbb
lret
adc
push
sub
cmc
mov
js
in
cwtl
repnz
xchg
int
adcb
fwait
mov
das
jno
pop
jns
jg
pop
ja
pop
aam
cmp
in
mov
mov
xor
gs
ds
inc
movsb
sbb
mov
jns
dec
mov
fs
sbb
add
jmp
jno
xchg
ret
stos
mov
mov
xchg
fsubp
mov
fistl
dec
mov
inc
out
in
and
xlat
xchg
movsb
loope
loope
mov
ja
stc
and
testb
movsl
fcompl
es
jbe
mov
mov
cmp
xchg
push
pop
jno
cmc
jp
je
xor
mov
sbb
sti
xchg
mov
mov
mov
gs
imul
and
bound
add
scas
jmp
inc
cmpsb
stos
enter
sbb
adc
out
inc
int
pop
jno
lods
pop
push
mov
leave
xchg
add
fnsave
or
rorb
out
xor
adc
mov
call
mov
lahf
aas
out
xor
sbb
add
imul
and
movsb
out
push
mov
jae
cwtl
mov
sbb
sbb
mov
in
in
adc
pop
shlb
sbb
ss
push
daa
xchg
mov
pop
imul
out
mov
jae
jle
pop
jbe
sub
stc
mov
sar
sti
sbb
sbb
dec
jmp
mov
outsl
dec
lock
cwtl
fiaddl
clc
out
xchg
mov
add
movsb
pop
loope
xor
pop
andl
adc
fisttps
aam
xchg
adc
ret
push
mov
xorl
inc
lcall
pop
aam
std
inc
push
pop
dec
or
xchg
pop
adc
mov
or
fbstp
or
loop
mov
sarl
jecxz
nop
cwtl
inc
and
inc
test
fstpt
aaa
rorl
jnp
sbb
popa
push
dec
inc
aad
jg
rorl
add
sarb
add
jl
mov
jns
mov
mov
fsubrl
inc
dec
loope
imul
inc
xorl
cmp
dec
ja
push
rorb
mov
mov
mov
orb
and
fwait
mov
je
fidivrs
add
mov
or
xor
jl
push
add
xchg
push
fwait
adc
mov
adc
loopne
cli
dec
xchg
rcrl
mov
cltd
pusha
push
in
cmpsb
scas
int3
aad
dec
mov
mov
pop
lods
outsb
frstor
inc
rcrb
pop
std
sub
sbb
and
pop
insl
push
fnstenv
mulb
xchg
cmp
movsb
dec
jp
push
movsl
lcallw
hlt
mov
mov
fstps
in
int
fistps
xorl
mov
xchg
add
gs
test
or
pop
out
loopne
add
add
cld
and
cmp
push
cmp
andb
xlat
pop
aas
sbb
je
jl
push
xchg
mov
sub
push
add
outsb
xchg
add
daa
adc
mov
adc
popa
add
push
stos
inc
mov
jle
xchg
dec
xchg
inc
push
cmp
call
xchg
sbb
leave
xor
ljmp
mov
mov
xor
arpl
cmp
aas
dec
inc
jmp
clc
sbb
mov
jmp
mov
loopne
pop
fsubr
dec
xor
mov
bound
out
into
jnp
call
xor
ljmp
xchg
jb
js
xor
fidivl
repz
jle
in
adc
sub
leave
jno
js
dec
shr
ret
out
lret
inc
mov
popf
or
pushf
ror
cld
xorl
xchg
rorl
dec
gs
mov
loop
iret
je
loope
add
inc
popf
pop
xor
sub
mov
fwait
popa
popf
scas
mov
dec
push
mov
mov
les
lret
cmp
call
xor
movnti
adc
push
mov
lds
es
cs
sahf
cmp
daa
and
sti
sub
sbb
add
adc
pop
sbb
fdivs
mov
outsb
or
mov
in
sti
xor
jne
xchg
je
inc
cmpsl
lock
xchg
mov
lock
jnp
sub
cmc
and
fwait
sub
lahf
loop
mov
sbb
icebp
into
and
xor
cmp
inc
imul
inc
cwtl
jmp
int3
lret
test
pusha
divb
int3
mov
add
icebp
cmc
xor
popa
pop
jecxz
pop
aaa
js
sahf
loope
push
dec
lahf
mov
xchg
leave
aam
xchg
sysret
aam
and
cwtl
push
ja
mov
les
insl
inc
loop
adcl
mov
pushf
repnz
repz
mov
fcoms
inc
mov
insb
sbb
mov
add
scas
inc
sbb
jecxz
pop
push
fiaddl
jbe
dec
pop
es
push
xor
push
jle
jo
mov
fadd
je
sub
jno
xor
mov
pusha
xchg
mov
jno
push
fisttpll
ret
add
or
filds
std
pop
movsb
lods
mov
xor
shl
adc
lock
cli
inc
xchg
push
andl
idiv
sbb
sahf
push
push
cld
outsb
les
test
cmc
fidivrs
push
xchg
lahf
inc
repz
adc
cmpb
pop
rclb
jle
je
jne
cmc
int3
jae
adc
int3
lcall
cs
mov
shrl
push
loope,pn
push
test
adc
push
dec
or
pop
xchg
addb
pushl
out
cwtl
xchg
bound
push
addr16
inc
mov
out
and
clc
imul
bound
fcomps
fbstp
in
jo
sahf
ficoml
pop
addr16
mov
inc
bound
xchg
adc
push
in
mov
dec
jbe
andl
dec
fstpl
stos
aaa
or
les
cli
mov
sub
gs
insl
jno
inc
loopne
add
inc
cmp
adc
or
xor
and
loope
popa
mov
in
outsb
adc
sbb
stos
scas
pop
rclb
adc
clc
movsl
mov
aam
sub
outsb
dec
mov
cmp
xchg
mov
shll
adc
in
fmuls
inc
mov
aam
xor
scas
fldl
sbb
add
loope
hlt
jecxz
test
mov
cltd
in
mov
xor
and
mov
dec
jmp
xchg
pop
ds
orl
xor
sbb
insl
xor
ret
enter
lods
mov
iret
cmp
xchg
outsb
xchg
sub
andb
ds
cmc
mov
add
movl
jp
push
cli
mov
outsl
loopne
mov
lea
push
add
in
or
mov
mov
xchg
mov
lock
mov
imul
inc
test
or
xor
out
in
insb
cltd
stos
sti
and
and
xor
cmp
xchg
rorl
aas
ja
push
mov
ss
inc
mov
inc
fwait
sbb
pusha
sub
jns
mov
cmp
popf
in
aad
bound
xchg
scas
popf
out
test
jno
loopne
loop
aad
push
testb
repz
lods
out
push
lods
jle
pusha
xchg
cwtl
fbstp
xor
je
ret
and
call
mov
adc
xor
cmp
mov
pop
mov
les
outsl
jns
xchg
cltd
add
pop
inc
mov
dec
xor
popa
ja
fimuls
mov
insb
into
inc
fs
lods
lods
dec
shll
add
movsb
and
lret
pop
xchg
out
dec
imul
push
jb
and
mov
pop
cmp
jne
ss
sub
roll
push
clc
or
lcall
dec
sti
mov
mov
add
mov
sbbb
jl
adc
lock
add
seta
ret
pop
lahf
adc
dec
xlat
je
loopne
adc
icebp
inc
test
jne
lods
mov
cli
loopne
xor
push
adc
outsl
in
cmp
stos
movsl
ret
cwtl
stos
fadds
and
cmp
pop
cmp
sbb
lret
xchg
and
out
jecxz
out
fldl
repnz
push
ficoml
or
bound
and
loop
lods
sub
data16
mov
mov
and
fistpll
leave
in
cwtl
xchg
out
mov
xchg
cmpsl
mov
mov
xchg
aad
pushl
sbb
out
jne
les
or
push
outsl
stos
orb
xchg
sub
in
sub
mov
cmpsl
ret
out
sarl
jle
xchg
inc
in
das
or
push
mov
lret
add
mov
push
lcall
hlt
push
int
cmp
je
gs
lds
sub
cmp
jle
mov
pop
stos
test
es
fcomps
lock
test
cmp
out
jg
cmp
int
cmpsl
out
rorb
jecxz
xor
jle
mov
mov
mov
mov
mov
cmpsb
iret
out
xor
gs
imul
and
sub
mov
and
pop
cmpsl
push
imul
inc
decl
xor
lcall
je
stos
inc
dec
shll
out
int3
out
out
mov
leave
and
cmp
xor
jp
sbb
in
cs
into
fmull
sarl
hlt
jg
fildll
in
scas
int
lcall
mov
ljmp
push
adc
pop
data16
cmc
out
popa
lret
inc
lds
xor
mov
lock
int
adcb
orb
push
out
mov
cmp
test
ljmp
clc
mov
xchg
fstpt
adc
std
in
shll
pop
pop
push
call
jno
cli
xchg
xchg
mov
mov
loopne
cli
sub
jbe
xchg
enter
into
cmp
push
jge
xchg
cld
push
inc
enter
fstl
or
ror
push
cmp
push
sub
jno
mov
mov
inc
cmp
sahf
popf
shr
jnp
xchg
pop
mov
xchg
add
cwtl
lea
imul
lcall
xchg
push
std
sarb
ret
cmp
push
and
shl
mov
sub
pop
and
lahf
pop
fwait
movsb
push
fidivl
mov
ds
mov
stc
fcmovnu
mov
gs
ja
push
jae
or
in
outsb
inc
sbb
outsl
jne
pop
aad
dec
xor
in
jb
out
fisttpll
add
rcll
jle
stos
inc
mulb
jp
mov
pop
inc
mov
mov
stos
lock
test
xorb
in
in
inc
add
mov
mov
into
push
jns
jge
mov
out
xchg
sub
ja
or
pop
sarl
xor
inc
pop
pusha
mov
xchg
jns
mov
scas
sbb
loope
push
shlb
xor
pop
sub
adc
shll
aaa
push
push
cmp
incb
inc
dec
add
xchg
mov
das
jl
ret
cli
imul
jmp
rcl
idiv
mov
push
cmp
mov
xchg
xlat
cltd
xor
js
push
js
adc
popa
jns
or
xchg
clc
loopne
fnstenv
cwtl
orw
pop
cwtl
push
scas
bound
push
shlb
pop
mov
sahf
repz
push
fwait
mov
or
add
push
lds
sbb
jnp
outsb
int
xor
push
es
movsl
lcall
fnstenv
xchg
sbb
mov
push
test
jnp
stc
jge
notl
pop
call
and
mov
popf
flds
scas
mov
das
aaa
jnp
pop
jb
les
xlat
add
xor
push
jl
sub
sub
xchg
jl
add
push
mov
or
dec
rolb
or
sbb
imul
push
mov
add
and
xor
xchg
xor
jg
scas
popa
mov
push
in
xorps
add
pusha
jg
inc
dec
push
adc
jno
dec
jae
std
xor
push
cmp
jbe
sbb
add
addb
pusha
test
stos
sub
out
hlt
cmpsl
xor
sbb
mov
adc
and
xchg
lds
in
lea
push
inc
or
lahf
xor
adc
xchg
push
mov
adc
push
cwtl
dec
inc
cmp
and
dec
push
and
xor
xchg
jae
jno
lret
mov
mov
cmpsl
jnp
inc
xchg
xchg
add
sbb
cmc
cmovb
jge
cmp
outsl
add
sub
sbb
ja
in
lock
add
aaa
scas
inc
push
aam
sarb
sub
and
out
jle
ja
mov
cmp
adc
in
mov
rolb
lahf
pop
sub
aas
das
xor
in
xor
cs
add
test
fnstsw
data16
mov
sub
push
or
cmc
dec
lea
mov
gs
jmp
daa
xchg
hlt
insl
mov
cmp
icebp
and
es
mov
lcall
mov
addr16
and
mov
inc
test
out
pop
insb
sahf
mov
dec
imul
decl
jae
xor
jg
dec
sub
mov
in
push
ret
inc
in
pusha
std
int3
mov
movsl
addr16
xorb
movsl
and
mov
outsl
shlb
push
std
pop
add
das
inc
mov
popa
mov
sub
mov
fdivs
jl
jle
lds
push
scas
es
inc
mov
mov
push
or
mov
mov
int3
lret
es
in
es
mov
xor
add
mov
enter
xor
inc
jnp
rcr
in
or
dec
inc
in
aam
xchg
push
push
iret
filds
sub
test
pop
and
fmull
test
push
test
add
fdivp
push
shrb
negb
push
jnp
dec
gs
scas
cmc
or
sbb
sbb
daa
pop
pop
cmpsb
xlat
and
inc
es
hlt
or
divl
sub
xchg
scas
mov
test
push
push
outsb
js
stc
or
xor
xor
xchg
xchg
scas
aad
cmc
xor
test
mov
xchg
jl
std
aaa
data16
cli
les
add
mov
xchg
cmp
mov
das
push
push
out
fimuls
fs
or
lock
lcall
sub
lods
xchg
aam
dec
rcr
xchg
shll
push
jecxz
mov
outsl
test
lret
ret
xlat
fcmovne
inc
inc
or
push
lods
icebp
popa
inc
cltd
int
push
xchg
pop
push
add
fucomip
pop
sbb
mov
jle
hlt
es
push
jbe
adc
ds
sti
xor
pop
fbstp
or
subl
xchg
dec
and
lock
hlt
xchg
mov
jns
dec
rorb
das
add
mov
pusha
dec
sahf
inc
ljmp
push
dec
sbb
int3
faddl
mov
ret
out
int
push
mov
jne
inc
scas
cmp
fs
hlt
test
mov
lret
xchg
icebp
jne
lahf
dec
and
push
stos
in
lods
xchg
jl
push
push
loop
cld
test
scas
popf
test
sbb
popa
jne
mov
rclb
and
mov
and
movsl
push
sbb
cli
loop
mov
hlt
or
mov
movsl
push
push
fs
pop
push
out
push
cmc
xor
push
es
setle
out
mov
insl
cmp
out
xor
jmp
mov
fmull
jp
shl
xorl
xlat
test
daa
mov
cmpsl
je
sbb
andb
lret
repnz
inc
or
pushf
popf
xor
jl
je
je
call
test
pop
xchg
inc
push
scas
adc
ss
xchg
xchg
push
pusha
js
inc
xchg
push
mov
bound
xchg
pop
mov
add
pop
mov
dec
addl
jbe
mov
sub
gs
andl
repnz
jnp
xchg
cmc
jmp
jecxz
insl
cmp
jns
push
daa
adc
sub
pop
dec
aaa
arpl
rol
lcall
inc
inc
jmp
mov
sbbl
fimuls
mov
jnp
in
test
pop
ficoml
xchg
push
sub
mov
and
sbb
stos
lahf
pop
cmp
adc
sbb
mov
sbb
aad
aad
xor
mov
xchg
cmp
xchg
loopne
test
cmpsl
sbb
fistps
pop
dec
xchg
loopne
and
ja
aad
std
popf
je
stos
mov
ret
dec
add
lahf
ds
dec
inc
pop
repz
je
adc
arpl
jae
movsl
stos
insl
ror
jnp
clc
andl
imul
push
push
sub
mov
fs
es
cmp
mov
hlt
mov
add
xchg
fnstsw
outsb
inc
push
or
push
mov
sub
loope
imul
cld
enter
mov
sbb
xchg
mov
sbb
cwtl
outsb
adc
out
popa
jmp
imul
xchg
in
ret
xchg
cmp
sub
mov
sbb
sub
mov
out
push
add
bound
mov
repz
gs
and
push
push
repz
sub
sbb
xor
dec
int3
fstpt
mov
in
imul
cmpsb
sub
lock
mov
sbb
and
out
mov
mov
cmpl
mov
in
jnp
out
xchg
add
lods
adc
clc
mov
aad
fildll
jle
lahf
outsb
in
add
loop
orb
mov
jnp
stos
lods
fcoms
movsb
mov
mov
jp
inc
mov
jnp
xchg
adc
testl
add
aam
aam
into
mov
adc
mov
mov
pushf
adcl
leave
arpl
stos
clc
and
jecxz
and
inc
lcall
push
mov
movsb
cmpsl
sub
stc
adc
pop
sti
jae
cmp
ja
stos
mov
sar
and
repz
cmp
jmp
mov
fistps
inc
leave
insb
es
outsb
xor
cwtl
lahf
add
test
cwtl
jmp
loop
jno
sub
sub
dec
rorl
pop
and
mov
sbbb
xchg
push
push
xor
and
addr16
lock
pop
push
jbe
adc
or
mov
xor
fxch
mov
and
push
and
jno
iret
out
mov
idivl
mov
popa
and
dec
sbb
and
aaa
dec
jge
and
xchg
dec
loope
scas
or
cmp
sbb
adc
jno
xor
cmp
psllw
daa
and
jecxz
dec
movsb
adcb
inc
mov
cmp
sbb
or
inc
jl
dec
fisubrl
mov
mov
movsb
scas
cld
jo
lods
inc
xchg
inc
leave
int3
pushf
pop
mov
lret
not
cltd
pop
lea
das
push
xchg
push
out
mov
in
outsb
aaa
repnz
or
push
scas
rolb
inc
dec
imul
ret
shlb
mov
jp
dec
pusha
lods
sub
in
mov
sbb
inc
std
inc
aad
arpl
ja
sbb
lret
rcrb
pop
sub
scas
es
xlat
dec
xor
loop
push
push
push
iret
test
or
mov
imul
pop
mov
pop
fsub
adc
jo
mov
out
sbb
pop
into
mov
stc
daa
test
pop
and
mov
stos
jle
or
cmpsl
hlt
movsb
sbb
arpl
dec
in
jne
push
sub
int3
push
sti
or
pop
jg
fwait
sbb
or
or
gs
sti
mov
pushf
ljmp
gs
nop
mov
mov
loopne
pop
adc
jae
fidivrl
pop
mov
xchg
xor
fdivs
mov
xchg
test
test
xor
mov
fsts
sbb
loop
in
data16
pop
inc
in
hlt
pop
jbe
and
fistpll
inc
fwait
xchg
add
mov
jae
pop
inc
xlat
repnz
movsb
and
jnp
xchg
push
mov
dec
pop
test
mov
gs
jmp
jle
xchg
cmp
ret
add
int3
xor
or
mov
call
mov
scas
xchg
add
jns
shr
jge
int
out
decb
jb
sbb
jl
outsl
mov
adc
out
jo
pop
test
std
push
outsb
push
or
mov
test
push
pop
insl
push
push
loop
inc
and
out
paddb
push
sarb
jle
dec
lds
bound
nop
pusha
or
mov
xchg
mov
jbe
insl
mov
pop
dec
jne
xor
shl
sbb
or
aas
aaa
and
mov
stos
push
popa
cld
cs
ds
fstpl
cmp
cli
lock
jae
sti
cld
hlt
xor
test
fidivrl
aam
insb
sahf
aam
imul
jmp
shr
fsubrl
mov
mov
xchg
iret
mov
dec
mov
cli
mov
out
jp
inc
adc
les
test
loopne
push
jmp
cmp
fwait
ret
stos
mov
jnp
dec
js
xor
cmp
stos
movsb
push
fsubs
or
mov
and
cli
adcl
and
rcr
shll
rorb
pushf
push
xor
xor
cmpsl
jns
sub
dec
mov
das
mov
ret
dec
sub
jmp
pop
inc
xchg
repnz
aad
scas
pop
xor
shlb
xchg
orb
push
xchg
add
lcall
push
loop
xor
mov
jmp
push
movsb
jnp
shl
mov
cmpsl
gs
scas
lods
je
sbb
push
out
mov
lcall
mov
dec
daa
or
test
add
cs
test
inc
dec
lods
xlat
scas
setg
sbb
dec
adc
and
push
adc
data16
jmp
sbb
jp
aad
pop
or
rcr
cmc
popf
aas
loope
pop
xor
orps
mov
nop
cmp
jg
cmp
cmpsl
or
in
shr
cs
je
xchg
adc
andb
add
dec
lods
shlb
popl
scas
jg
jl
jns
loope
fidivrl
clc
sub
cmc
out
addb
adc
iret
pop
pop
movsl
jmp
test
dec
popa
sti
xor
jg
insb
clc
lods
stc
inc
dec
pop
and
cmp
adc
jecxz
fwait
aad
xchg
test
pop
or
inc
dec
paddw
or
icebp
lea
inc
repnz
stos
inc
fcomps
out
lds
call
jne
dec
xor
xchg
rclb
adc
jecxz
cmp
cmp
rclb
ja
mov
mov
std
mov
mov
insl
cmp
aad
stos
lahf
out
xor
push
mov
je
cmpsl
xor
jns
mov
xchg
dec
int3
fadds
fwait
incl
xchg
int3
pop
lret
les
mov
sbb
xchg
sub
out
bound
in
inc
xchg
sub
pushf
repnz
lret
das
scas
sbb
enter
mov
cmpsl
fwait
adc
xchg
cmpsl
mov
in
adc
dec
fwait
call
sbb
ss
leave
push
sbb
sbb
negb
jle
cmp
out
out
dec
hlt
pop
enter
dec
mov
test
je
push
and
cmp
adcb
jp,pn
jns
orl
int3
daa
push
jno
mov
out
or
in
and
rorb
jae
xlat
cmpsb
sar
inc
xor
push
xchg
ret
or
sarb
pop
adc
cmc
dec
sarl
shl
cmovno
mov
lods
dec
rclb
or
adc
rorl
fwait
push
adc
inc
ret
mov
rorl
mov
mov
mov
lds
aam
xor
and
cltd
cmp
add
fisttps
filds
sbb
adc
mov
adc
into
push
mov
scas
test
mov
xor
ror
mov
sub
dec
dec
clc
adc
sub
enter
rcrb
push
adc
sbb
movsl
fistpll
outsb
and
inc
cld
jnp
fnstcw
sbb
push
ss
insl
sub
inc
lock
add
lock
aaa
xchg
or
out
cmp
mov
pop
mov
lret
lock
js
push
aaa
fstps
dec
sbb
jle
sbb
es
loopne
jo
mov
orl
mov
in
mov
scas
mov
pop
cwtl
cmpsl
in
divl
mov
jge
fbld
mov
jne
cld
movsb
push
push
jbe
dec
gs
xor
icebp
aaa
xchg
ss
push
xchg
stos
jns
loop
adc
mov
jae
lea
pop
icebp
fs
mov
add
enter
in
decb
repz
jne
test
jmp
sti
adc
jl
ja
stos
mov
out
sub
xchg
jnp
in
idiv
mov
lods
adc
outsb
mov
mov
shr
mov
test
jge
mov
xor
lds
outsl
test
mov
inc
test
cld
mov
mov
push
cmp
loope
push
imul
push
mov
popa
fisttps
inc
sti
lret
xchg
lds
das
mov
jne
push
xchg
adc
movsl
adc
scas
cmp
dec
ljmp
cs
mov
xchg
cmp
adc
int3
pop
int
rcrb
lea
jns
xchg
pusha
scas
into
divl
aas
fcoml
dec
lods
shrb
insb
sbb
ret
scas
mov
sbb
jecxz
sarl
cmpsl
loop
xchg
fs
mov
push
push
arpl
dec
xchg
ret
mov
jp
lock
pop
leave
out
gs
out
ffree
sub
mov
out
pop
cmc
ret
mov
pop
push
fnsave
addr16
jle
xlat
pop
inc
in
xchg
sbb
pop
stc
loop
sub
mov
stos
icebp
arpl
ret
mov
aaa
or
add
pop
sub
add
and
push
mov
fstl
xchg
cmp
inc
jne
jbe
stos
adc
bound
push
pushf
mov
out
repz
pushf
sub
andl
add
push
loop
jnp
ds
rclb
cmp
ss
rol
sti
fildl
adc
pop
aas
scas
ja
push
pop
xor
mov
push
aad
fmull
negl
in
push
push
mov
xor
or
dec
jae
xor
pop
add
popa
mov
jne
mov
iret
orb
jae
in
inc
xchg
lea
adc
pop
push
ret
push
mov
or
xchg
nop
jmp
pop
add
sbb
or
push
sub
xchg
mov
clc
pop
cmpsb
adc
jnp
or
jae
lret
movsb
mov
shll
sub
xorb
push
xor
xchg
ret
xlat
adc
push
xor
rcrb
mov
stc
das
loopne
pusha
and
inc
sub
popf
mov
rcrb
jbe
lods
xor
push
sbb
sbb
pop
mov
int3
push
std
in
rorb
lret
push
popa
das
pop
mov
mov
mov
andb
stos
inc
sub
ljmp
sbb
mov
mov
dec
int
add
push
mov
es
cmp
adc
mov
mov
pushf
mov
mov
mov
xchg
jbe
push
leave
push
cmpsl
push
out
push
orb
loop
mov
decb
notl
out
jne
fisttpll
sub
aad
push
sub
cmp
daa
adc
mov
xchg
jl
jecxz
mov
das
or
insl
les
mov
jb
push
rorl
test
add
cmp
data16
jnp
xor
dec
nop
clc
insl
iret
pop
inc
data16
mov
out
into
ret
sarb
daa
imul
mov
push
jb
push
adc
mov
and
add
hlt
add
mov
jnp
xchg
cmp
mov
adc
inc
xchg
test
movsb
sub
pop
les
mov
test
int
xchg
rcrb
pop
das
adc
sti
fmulp
xchg
enter
js
shrl
mov
outsl
inc
lock
je
fisttpl
outsb
or
xor
jge
or
cmp
scas
ljmp
popf
outsl
inc
aas
cwtl
adc
out
sub
and
pop
mov
in
sbb
in
sbb
mov
test
adc
insl
loopne
xorb
in
stc
fcompl
mov
lds
lret
sti
outsb
xor
xchg
add
inc
enter
push
cli
push
jmp
test
jg
aam
hlt
dec
js
insb
scas
shr
pop
cmp
imul
js
test
shll
adc
mov
hlt
pop
dec
fidivl
or
xor
cs
adc
movsl
jb
jne
rcll
sbb
jmp
outsb
out
push
inc
imul
scas
fs
jno
les
mov
or
push
cmpsb
aas
dec
sahf
mov
xchg
cmp
call
cmp
ret
stc
mov
inc
cs
lods
jae
pop
dec
and
mov
sbb
loop
xor
pop
jb
stos
cmp
pop
loopne
adc
push
pop
mov
mov
out
aaa
dec
lds
int
cmp
lea
sub
and
rclb
sti
enter
inc
out
adcb
lea
lods
loope
mov
pop
das
cs
inc
or
pop
or
push
stc
mov
enter
pop
mov
pop
aad
pop
xchg
jnp
jb
jno
push
or
push
movsb
sub
test
mov
and
es
mov
enter
mov
mov
ljmp
mov
repnz
push
pop
mov
leave
lods
sub
sub
xor
lods
scas
jo
jmp
lcall
pop
out
mov
jae
rcrl
dec
int
sbb
add
pop
mov
fcompl
mov
or
sub
lods
xorps
mov
sbb
ja
sub
xor
jle
cmp
call
xchg
dec
test
add
shr
mov
les
xor
scas
push
xchg
mov
mov
mov
or
sbb
addr16
out
xor
push
xchg
mov
in
cltd
pusha
imul
out
pop
movsl
sbb
adcl
in
sub
mov
pop
ja
xchg
aaa
sbb
cmp
lds
aad
push
inc
xlat
mov
roll
mov
in
clc
pop
mov
sbb
jbe
out
push
insb
dec
push
bound
or
jnp
out
ja
imul
mov
mov
dec
fildl
jecxz
xor
mov
clc
dec
jnp
iret
leave
mov
shll
and
jno
movsl
pusha
and
pop
cmpsl
mov
pop
sti
das
cltd
jo
mov
out
mov
adc
scas
mov
arpl
pop
outsb
fisubl
mov
xorl
sbb
and
dec
push
or
push
add
or
dec
jle
or
push
out
jb
cmp
mov
or
movsl
dec
and
pop
xchg
jae
push
adc
or
cmp
lea
sbb
rorb
mov
xor
hlt
push
jle
lods
in
sub
mov
ds
shl
jne
xor
faddp
ljmp
jne
mov
scas
out
out
cmp
fcmovu
out
xor
jno
jno
ss
mov
inc
addl
xor
sti
pop
mov
mov
pop
jge
and
pop
inc
sahf
ss
ja
out
and
movsb
mov
mov
enter
loop
push
mov
scas
sahf
jg
sub
and
dec
adc
lds
sbb
inc
mov
cmp
xchg
ss
add
insl
cmp
mov
or
stos
jmp
mov
adc
jge
xor
adc
pop
lock
js
push
sbb
data16
xchg
jge
ljmp
jbe,pt
in
sti
sub
call
cld
sahf
xor
xchg
lea
dec
cmp
inc
cmp
add
pshufw
jmp
xor
mov
push
jns
or
push
ljmp
sbb
add
and
xchg
daa
sub
enter
jmp
pop
xor
cmp
mov
xor
imul
xchg
push
mov
dec
sbb
enter
fsubs
test
inc
pop
or
mov
xchg
sub
mov
daa
mov
jnp
jg
lods
fwait
scas
mov
popa
aaa
aaa
es
lcall
in
or
movsb
or
test
jl
dec
xchg
xchg
jle
push
cmp
imul
cmpsb
in
cld
dec
outsl
dec
dec
sub
imul
adc
jp
pop
lea
fidivrl
decb
jns
fistps
out
xor
in
lahf
adc
pop
subb
lret
xchg
sub
out
icebp
iret
pop
or
testb
dec
movl
adcl
loop
xchg
dec
divb
jl
dec
dec
mov
lret
sub
xchg
add
arpl
push
mov
mov
inc
cvtps2pi
xchg
ds
mov
iret
mov
leave
jl
adc
ja
jnp
pop
stos
push
sub
mov
pusha
sbb
xchg
sti
addr16
popa
std
dec
test
sbb
jecxz
pop
mov
sub
push
adc
jns
add
cs
and
inc
and
unpckhps
gs
clc
pop
cltd
loope
xor
call
andb
push
xchg
dec
movsb
lret
push
shlb
push
push
add
outsb
jno
loopne
adc
dec
pushf
test
mov
cmpsb
call
sub
mov
cmc
in
fistpll
cs
mov
ret
cmp
add
in
cmpsl
enter
sbb
lahf
push
dec
sub
jp
clc
jmp
mov
jg
enter
ss
cld
xchg
fmulp
xor
out
xor
ss
in
ljmp
rsqrtps
push
repnz
jge
jb
xor
push
mov
pop
dec
add
shl
das
xor
mov
addl
or
mov
sbb
dec
andb
dec
mov
stc
jnp
shlb
sti
sub
xchg
mov
rolb
jg
lds
inc
add
das
aad
mov
pop
ja
ss
add
imull
aaa
sub
enter
fwait
jmp
addr16
adc
stos
movsl
cmp
adc
imul
in
mov
add
je
mov
repnz
xchg
sahf
push
pop
push
mov
test
test
jge
adc
fimuls
xor
jmp
inc
mov
fimull
addl
xor
inc
xchg
adc
in
cmpb
or
cmp
std
aas
inc
in
ret
cmp
jnp
push
ret
out
test
test
sub
negl
pop
or
outsl
push
pushf
inc
mov
dec
mov
incl
jmp
andl
mov
sub
mov
jne
hlt
aad
jbe
jg
pushf
pop
stos
pop
jns
sbb
pop
or
lcall
enter
jmp
nop
jae
dec
ret
xchg
and
out
test
cmpsb
mov
dec
adc
pop
pushf
dec
or
and
dec
addr16
add
and
push
mov
xchg
sub
dec
add
xchg
cmc
scas
inc
movsb
stc
lea
iret
xor
das
jg
ja
filds
mov
stos
lock
sub
add
daa
or
insl
jnp
lea
andb
dec
mov
sbb
push
jl
hlt
push
lcall
cltd
in
cwtl
and
pop
ss
mov
xor
pop
loopne
lods
dec
arpl
ds
mov
in
fdivl
pop
mov
test
mov
mov
daa
pop
je
jmp
push
sub
jno
cs
lahf
xlat
sub
arpl
push
enter
mov
leave
push
pushf
sbb
test
xchg
stc
lds
test
ficoml
mov
clc
or
shll
stc
aas
gs
shlb
repz
outsl
sti
sbb
xor
xchg
xor
push
pop
daa
lret
dec
or
ds
push
xchg
imul
cmp
dec
loop
push
std
push
xlat
xchg
popa
popa
xchg
nop
idivb
cltd
clc
xor
testl
leave
test
fidivs
div
fadds
clc
or
sub
fildll
adc
call
xorl
aas
sub
insb
xor
push
lcall
test
test
xor
into
cltd
aad
aaa
jb
and
jne
scas
mov
add
pop
mov
adc
pop
inc
lods
pop
mov
add
sbb
jns
cmp
pop
lea
loopne
in
xchg
mov
out
lahf
ss
bound
out
pusha
adc
mov
cmpsb
ds
jg
daa
cmp
cmp
or
sub
mov
dec
xchg
sub
outsb
jge
xchg
sub
mov
mov
cli
xchg
movsb
cld
add
test
jmp
adc
pop
pop
push
pusha
mov
rcl
mov
in
jb
mov
loope
push
sbb
in
ja
mov
inc
out
imul
pop
out
mov
pop
mov
scas
insl
aam
push
pop
dec
jmp
cltd
outsl
call
pop
stos
daa
mov
shlb
repnz
insl
add
xchg
sbb
stos
bound
roll
push
sbb
outsb
and
pusha
popa
cmpsl
imul
inc
test
imul
loopne
jae
data16
out
xor
jge
repz
aad
lods
fsubs
lods
fimuls
push
push
pop
add
sub
xor
sbb
mov
shr
push
push
jns
mov
call
jmp
pop
push
xor
test
xor
cmp
imul
inc
pop
popf
jle
inc
mov
jp
cmp
add
std
movsb
mov
ja
cmp
ret
mov
stc
xchg
dec
lea
xor
je
ret
adc
xchg
aas
rcll
popa
mov
mov
loope
std
xchg
push
inc
push
outsb
repnz
mov
inc
and
mov
mulb
or
imul
mov
lret
or
fiadds
cld
push
das
leave
dec
clc
pop
cli
shll
arpl
fisubl
ljmp
lods
das
push
fcmovnb
test
cmp
jne
or
mov
data16
sbb
outsl
mov
xchg
addr16
dec
push
out
out
test
popf
xlat
hlt
add
inc
cwtl
cmp
outsl
jns
loop
daa
outsl
pop
cmc
mov
std
rcr
popf
int
scas
add
je
repnz
in
js
movsb
pop
pmulhuw
mov
out
lcall
or
shl
push
js
out
imul
lds
add
adc
insl
adc
in
sahf
jnp
std
cmpsl
jnp
jne
out
movsl
cmp
mov
cmc
jbe
in
and
mov
mull
pop
jno
dec
jl
dec
inc
dec
mov
dec
das
push
xchg
iret
sub
sbb
sub
scas
test
call
pop
adc
push
lods
mov
push
jb
pop
add
add
dec
and
cmp
xlat
pushf
rcrb
loop
cmp
loopne
jbe
in
mov
add
jb
popf
push
sahf
push
iret
sbb
cld
adc
scas
dec
stc
jp
or
mov
push
cmp
jge
mov
lods
push
xchg
cmp
mov
stos
pop
cmp
loop
leave
stos
jnp
lds
stos
mov
fldcw
pop
pop
xor
cmpsb
sbbl
mov
ret
add
add
mov
sahf
jns
xor
mov
lret
or
movsb
pop
push
jbe
cmpsb
sub
movsl
test
xlat
cltd
in
jns
xor
cmp
fsubrl
mov
adcb
jno
sbb
ds
jae
push
sarb
add
addr16
sbb
sub
cwtl
mov
aaa
jecxz
add
shl
cmpl
or
sub
dec
ja
mov
mov
mov
sbb
sahf
xor
andl
loope
insb
pop
jge
push
xor
and
xlat
scas
movsl
jg
ja
stc
sarb
std
bound
leave
dec
xchg
nop
jnp
gs
add
mov
push
ret
mul
push
jp
in
adc
scas
call
sbb
cmpsl
cltd
cld
insb
movsb
mov
xor
push
mov
call
jp
loope
pop
sub
rsqrtps
and
flds
sub
daa
pop
je
mov
ds
leave
fistl
mov
popf
cld
stos
xor
jne
or
out
cmp
out
shll
inc
xor
sub
push
mov
sbb
jmp
stos
sub
test
mov
sub
inc
ret
loopne
pop
testb
mov
ljmp
imul
out
lods
jp
decl
test
jbe
push
cs
xchg
xchg
lock
frstor
sbb
mov
pop
jge
imul
mov
shll
lock
aad
mov
int
mov
rcrl
scas
sbb
fimuls
adc
add
lds
in
movsb
fidivl
sti
pop
scas
jo
imul
pop
jno
xor
inc
sti
fcmovnbe
xchg
mov
add
xchg
sub
aas
dec
inc
dec
lahf
and
shlb
mov
mov
rol
popa
out
jo
xor
add
in
dec
jecxz
xchg
and
mov
or
in
pop
jo
add
outsb
push
jne
ja
mov
das
xor
mov
and
divl
mov
sub
mov
xchg
testl
xchg
loop
or
cmp
movsl
mov
and
subb
movl
mov
into
es
cli
clc
inc
push
xchg
daa
cld
mov
jmp
lods
out
arpl
in
add
or
sub
add
mov
mov
jnp
jo
jmp
pop
and
and
mov
mov
sbb
jno
jle
sbb
mov
mov
push
bound
mov
adc
xlat
inc
or
xchg
jb
push
je
mov
jno
cld
xor
sbb
push
inc
mov
in
mov
loope,pn
es
xor
mov
or
pushf
shll
shll
pushf
add
jl
into
xchg
cld
jno
and
jmp
fstpl
rcrb
lahf
jo
cmp
adc
js
xor
mov
push
mov
push
pop
adc
add
je
nop
lds
push
imul
or
iret
inc
xor
inc
adc
sbb
insb
add
lock
call
cmp
jge
outsl
jnp
jge
jae
dec
push
xchg
cmpsb
adc
xchg
popf
clc
lea
inc
mov
cmp
sbb
xor
rorl
sbb
mov
cmc
lcall
repz
add
lock
push
or
aaa
cld
lret
inc
das
push
fisubrs
lods
cmp
test
inc
sub
inc
imul
mov
mov
mov
pop
adc
fildl
in
cmc
leave
cmp
or
mov
call
pop
mov
mov
stc
sbb
fcompl
popa
std
scas
or
in
cld
xlat
push
xchg
clc
jecxz
inc
lahf
call
cmp
adc
push
sbb
mov
jns
ss
stos
popa
or
jb
xchg
xchg
and
cmpsl
lahf
fstl
push
or
adc
inc
and
mov
repz
xor
daa
or
mov
bound
adc
sbb
repz
into
xchg
repnz
jge,pt
xchg
mov
sub
sbb
or
movsl
adc
and
negl
mov
inc
push
imul
pop
int
mov
and
mull
loop
adc
rcrl
dec
movsl
fwait
add
icebp
lds
arpl
hlt
push
leave
mov
inc
enter
cmp
loopne
xor
jns
mov
dec
or
pop
cmp
and
fnsave
pop
xchg
sub
mov
mov
mov
scas
lds
xchg
popa
mov
insb
jl
and
sarb
xchg
sbb
mov
repz
mov
xchg
cmp
es
fdiv
pop
mov
mov
xor
jo
push
sbb
stc
jl
mov
or
ret
xor
mov
data16
ffree
cmp
adc
mov
cmpsl
pop
sub
mov
cmp
arpl
add
into
fldcw
pushf
xor
mov
movsb
xchg
in
mov
mov
insb
sbb
pusha
push
mov
and
jae
mov
dec
fwait
xor
decb
cwtl
sub
adc
rclb
add
rorl
dec
nop
dec
pop
add
push
or
nop
in
pop
or
test
inc
pop
mov
repz
xchg
cltd
adc
adc
loop
sbb
cmpsb
push
jmp
enter
xchg
test
std
mov
push
out
pop
dec
and
mov
insl
lcall
aaa
sbb
xchg
pop
int3
leave
mov
addr16
daa
adc
repnz
arpl
cmpsl
mov
jbe
and
sbb
notb
stc
push
adc
xchg
mov
push
push
movsb
xor
jns
or
hlt
lret
mov
xchg
lea
mov
rcr
jmp
movsl
cs
out
int
lods
sub
shrl
or
mov
cmp
aaa
pop
jb
aas
outsl
xchg
clc
int3
xchg
cli
cmp
adc
das
fstpl
ljmp
sbb
call
mov
jmp
pop
sahf
cmp
dec
pop
pop
cwtl
jl
mov
adc
imul
dec
imul
jl
nop
mov
and
ret
pop
and
mov
adc
loop
add
aas
mov
jecxz
fidivl
sti
stc
out
lds
xor
mov
xor
cmp
sbb
ljmp
mov
hlt
add
ljmp
mov
arpl
aaa
nop
push
in
ja
jle
repz
aad
xorps
xchg
cmpsl
or
adc
dec
mov
or
and
sti
and
or
cmpsl
adc
jo
je
ss
mov
add
fcomps
cmp
adc
push
pop
rcrl
inc
int
out
in
xchg
clc
sbb
fsubs
into
fidivrl
dec
mov
jns
sbb
test
and
cwtl
and
add
test
pop
loopne
sub
mov
push
jne
xorb
movsl
jecxz
inc
fisubrs
sub
pusha
add
or
sub
popa
cmc
out
add
lods
nop
sub
xor
dec
cld
push
sti
movsb
xor
out
icebp
stc
push
adc
adc
cmpsb
or
push
bound
cmc
imul
push
sbb
arpl
or
jl
repnz
ds
in
sbb
xor
arpl
cltd
cmp
dec
push
fs
mov
dec
mov
out
mov
adcl
into
push
icebp
sbbl
cs
in
sub
pop
adc
push
cmp
mov
std
out
aam
into
and
adc
sbb
out
mov
popa
pop
fcoms
mov
push
popf
aas
jo
cmp
and
lcall
pop
or
jle
push
xor
dec
ds
mov
mov
push
jle
dec
je
pusha
scas
xchg
and
mov
and
pushf
cld
andb
mov
cmpsl
push
mov
std
test
shrl
sub
pop
jmp
movsb
loop
add
mov
and
xchg
out
cltd
jno
fdiv
call
rorl
xor
das
jle
push
test
xchg
xchg
xlat
addr16
mov
jp
sahf
push
add
pop
mov
sub
je
push
or
xlat
lock
repnz
inc
sti
int3
stc
jb
jae
pop
xchg
gs
jle
out
hlt
jns
test
dec
mov
mov
jle
aaa
inc
add
and
ss
movsb
stos
push
lret
cmp
mov
sbb
sahf
test
fisttps
mov
cmpsl
mov
outsb
or
testb
dec
ljmp
pop
push
or
xchg
imul
arpl
xlat
jno
pop
add
hlt
lret
push
jnp
pusha
mov
stos
or
insb
sub
pop
fstps
shll
test
add
jno
add
repz
mov
and
or
ja
aas
add
push
sbb
cmp
push
or
or
sbb
imulb
jl
or
dec
fwait
sub
or
aaa
aam
addr16
les
out
enter
push
out
xor
mulb
sbb
cmp
adc
fs
scas
fnsave
dec
pushf
inc
movsb
and
cmpsb
cld
jecxz
and
in
faddl
sbb
cmp
mov
mov
mov
inc
stc
cmc
ss
fidivl
push
lock
pop
popf
ss
mov
hlt
aad
push
mov
dec
mov
pop
xor
lret
and
in
cmp
pop
sub
cmpsb
mov
jnp
pop
xor
mov
push
movsl
mov
mov
movsl
outsl
pop
test
insl
push
push
repnz
ficompl
add
lea
hlt
hlt
inc
cli
jmp
outsb
lcall
iret
pop
cmpsl
cmp
jb
inc
mov
popf
sub
outsb
xchg
das
mov
insb
mov
push
pop
fisttpl
mov
pushf
jg
dec
xlat
xchg
shlb
stos
mov
pop
and
mov
push
jae
loop
adc
fnstenv
xchg
push
push
shlb
fldl
jg
addr16
popa
xor
jbe
scas
bound
jbe
popa
out
pop
adc
sbb
loopne
push
repnz
cmc
orl
sbb
pop
fcmovnb
and
adc
ljmp
push
popf
xchg
test
adc
inc
fabs
cmp
insb
lea
dec
xor
cmp
pop
lret
jmp
mov
rorl
inc
adc
push
or
das
data16
popa
out
mov
mov
mov
iret
out
pop
pusha
rorb
xchg
or
sti
lret
fisubl
out
adc
mov
xchg
jge
sbb
dec
subl
sub
xlat
mov
push
mov
pushf
imul
xor
mov
sub
dec
adc
push
inc
sub
fs
xchg
sbb
inc
aad
dec
push
mov
push
inc
scas
adc
loop
scas
fwait
xor
loope
pop
sub
lock
pop
or
adc
pop
mov
test
movsl
test
test
mov
cmp
push
hlt
pop
xchg
pop
mov
cmp
lret
arpl
cmp
hlt
rcrl
int
cwtl
sbb
add
addr16
inc
int3
insl
pop
pop
hlt
out
inc
dec
and
movsb
jb
or
sbb
mov
cltd
gs
cmp
shlb
pop
cmp
outsb
cmp
and
pop
pop
sti
dec
rcrb
jl
mov
lret
push
jnp
adc
xor
jmp
mov
mov
loope
shll
decb
pushf
stc
ja
daa
mov
pushf
pop
push
xor
cmc
push
mov
xchg
mov
xor
sub
cmpsl
les
lods
xchg
fs
and
dec
push
hlt
out
ljmp
adc
leave
pop
call
cs
pop
scas
sbb
rcrl
push
xchg
and
ret
sar
inc
lahf
shlb
outsl
push
in
incl
cli
ds
out
and
mov
popf
sub
add
lcall
or
int
pop
cmp
inc
movsl
popf
repnz
adc
push
xchg
sbb
cmp
push
fidivrs
mov
ja
push
mov
and
icebp
inc
or
popa
hlt
mov
push
xchg
cmp
stos
fsubrs
nop
lret
outsb
inc
push
movsw
mov
pop
push
mov
movsl
inc
loopne
xlat
mov
mov
sub
call
iret
push
es
ds
mov
sub
cmp
loop
cmpsb
sub
mov
fs
push
in
xor
add
mov
out
clc
fsubl
es
test
dec
mov
jo
call
xchg
fmuls
xchg
xlat
jns
sahf
cmpsb
jbe
lds
sahf
repz
imul
cld
and
and
daa
popf
out
sbb
xchg
add
mov
or
jle
hlt
stos
or
xchg
into
xor
add
aas
pop
jb
stos
pop
aaa
ret
push
pusha
cmc
pop
push
filds
mov
adc
out
stos
fimull
xchg
inc
int
enter
negb
dec
arpl
sbb
ror
xchg
lock
pop
fcomi
dec
or
sub
mov
dec
rclb
inc
jle
inc
inc
mov
hlt
and
cmp
adc
stc
out
jge
add
inc
pop
add
test
xor
jg
fsubrs
enter
sbb
pop
jae
jp
pop
imul
jns
and
fwait
mov
cli
mov
mov
insl
sub
outsb
xchg
xchg
adc
push
lds
jns
xchg
ja
mov
dec
shll
xchg
clc
cwtl
aas
mov
lock
jp
xor
ja
jne
cmp
popl
mov
mov
and
in
psubsw
pusha
mov
sub
pop
lahf
jbe
test
jecxz
daa
mov
cmc
sarl
dec
xchg
stos
bound
fs
push
mov
insl
pop
sub
and
lods
jmp
sub
jmp
aaa
mov
aas
sti
and
aas
mov
and
xchg
std
sub
pop
std
pusha
jo
in
std
inc
jle
in
insl
ret
pop
mulb
dec
hlt
xor
mov
adc
add
xchg
jecxz
and
pop
sub
push
movsb
xchg
ja
enter
negb
cmc
lea
push
mov
std
mov
les
rolb
or
push
movsl
stos
pusha
test
mov
fistps
and
cmp
in
test
enter
push
or
push
in
jl
cmpsl
jb
pop
int
mov
inc
or
or
push
cmp
sbb
add
push
out
cmp
cwtl
arpl
lahf
mov
stc
xchg
mov
cmp
mov
scas
inc
jae
mov
mov
sub
hlt
sbb
loope
cli
xchg
sbbb
sbb
sub
xor
loope
dec
sbb
xchg
fnsave
les
jnp
push
stos
jb
push
aaa
jno
sarb
mov
pop
adc
imul
ja
xchg
jns
xchg
out
xchg
shlb
adc
je
pop
mov
sub
repz
sahf
movsl
nop
outsl
mov
cld
std
cmc
pop
lret
jb
mov
xchg
jb
nop
shrb
push
inc
pop
in
dec
dec
cmpsb
adc
dec
pop
push
inc
aam
and
aad
sub
mov
loopne
or
pop
mov
rcl
popf
pop
data16
adc
pop
lret
daa
lcall
add
in
jmp
stos
or
jmp
scas
aaa
out
rcl
xchg
xchg
mov
xchg
jl
sub
out
dec
sub
push
add
jno
dec
test
es
leave
je
inc
sub
cmpsl
loop
daa
add
mov
lock
cltd
mov
js
pop
push
sub
push
mov
xor
std
fstps
inc
mov
cli
pop
push
cld
cmp
adc
stos
sub
push
lahf
notl
js
add
sbb
cmp
pop
into
scas
inc
pop
mov
mov
push
sbb
add
dec
cmp
clc
or
add
movzbl
sub
lahf
mov
or
ds
fnstsw
imul
repnz
pop
jne
hlt
stc
and
and
lds
xchg
xor
pop
andb
mov
sub
xchg
pop
adcb
cmp
xchg
mov
dec
dec
jne
fs
shlb
std
lea
adc
jae
mov
addr16
sub
jmp
fldcw
mov
inc
shlb
xor
inc
mov
pop
jae
data16
sub
iret
pop
add
push
mov
or
push
outsb
inc
sbb
movl
shll
scas
mov
fwait
cmp
or
loopne
cltd
shr
outsl
dec
and
ret
sbb
push
mov
mov
ficoml
push
xor
cmp
inc
sbb
jmp
mov
outsl
and
aaa
les
fs
lahf
in
dec
daa
sar
sbb
add
jg
call
jne
jg
mov
pop
push
add
mov
pusha
jmp
or
jbe
iret
mov
fsubr
loop
fldenv
jae
pop
outsb
mov
pusha
into
fwait
dec
es
push
cmp
lods
notl
inc
pop
into
iret
test
lret
sahf
les
loope
push
fdivrl
xchg
xchg
test
mov
lret
cmp
dec
cmpb
push
xor
js
xchg
or
mov
jg
fcomi
sbb
mov
fistl
ret
lods
scas
jb
jo
lock
xchg
fistl
pavgb
jge
lock
lcall
cwtl
dec
ss
jo
loope
mov
pop
cmp
jo
cmp
popa
cli
sbb
jl,pt
in
push
cmpsl
data16
rcl
push
imul
xor
adc
or
fdiv
les
in
xor
cmpsb
mov
or
jmp
mov
inc
into
xchg
loopnew
mov
aas
fisttps
cmp
mov
mov
sti
testl
or
push
bound
lods
das
xchg
cmp
and
inc
scas
into
and
sub
sarl
push
xorl
popa
fisttpl
imul
test
mov
sbb
jg
fisubl
jg
xor
std
bound
add
xchg
popf
rcr
cmp
push
in
fisubs
jne
and
shll
lods
push
mov
jle
add
inc
lahf
sahf
fisttps
cmpsl
cmpl
mov
mov
inc
imul
nop
cs
and
mov
mov
out
ja
jg
sbb
dec
sub
inc
fisubl
movsl
ss
adc
sub
pushf
mov
loopne
dec
jbe
sub
lahf
daa
push
mov
sahf
jb
arpl
jg
mov
or
sub
pop
sahf
xchg
aam
mov
out
dec
xchg
gs
movsb
sub
int3
rcrl
sti
scas
shll
fs
mov
addr16
sbb
push
adc
jg
cld
fimull
int3
out
jne
inc
movsb
cmp
jp
xor
cmc
mov
mov
mov
mov
inc
mov
addr16
jbe
cmp
push
push
clc
dec
scas
in
xchg
shll
lretw
aaa
sbb
out
mov
adc
sbb
arpl
mov
mov
mov
in
and
push
mov
pop
test
testb
mov
xchg
int
lret
leave
sbb
xchg
xor
sbb
mov
lret
jmp
xchg
xlat
lret
add
adc
test
out
add
hlt
in
fwait
xchg
push
inc
aas
jb
mov
add
xorb
sti
pop
clc
xor
xor
rcrl
push
and
add
dec
xor
jb
or
jle
leave
and
ret
lods
daa
sbb
iret
gs
movsl
adc
mov
mov
inc
sarb
lock
add
sahf
sbb
ret
and
ret
cmp
lret
and
xchg
movb
outsl
mov
push
jge
icebp
cld
push
dec
push
mov
test
adc
add
addr16
pop
aaa
push
push
mov
ljmp
pop
jl
rorb
push
adc
out
and
inc
rcll
ficoml
rcrl
fidivrl
popf
xchg
testb
repz
push
push
cs
dec
cmpsl
jge
insl
mov
pusha
mov
dec
mov
in
stos
push
imul
rol
jecxz
mov
mov
in
dec
xchg
repnz
leave
adc
pop
and
cmpsb
sub
cli
mov
push
shrb
mov
pop
cs
imull
scas
xor
out
and
mov
icebp
cmpb
insb
aas
daa
sbb
in
pop
mov
std
out
imul
inc
fs
add
inc
push
and
push
mov
pop
xchg
in
jbe
sahf
adc
jg
adc
testl
movsl
pminub
adc
pop
shl
xchg
test
jg
adc
inc
mov
add
dec
mov
jl
mov
insl
add
sub
pop
ja
pop
stc
adc
fmuls
cmpsl
rcrl
fiadds
and
jge
jle
scas
sub
fwait
dec
stc
mov
xchg
adc
out
fmuls
and
or
sub
dec
add
cmc
out
mov
xor
sub
sti
dec
popa
mov
mov
or
push
push
inc
and
xchg
xchg
aad
mov
mov
jg
cmp
scas
cvtdq2ps
cs
test
dec
movsb
xchg
incl
pusha
fdivp
ret
and
insl
sub
out
outsl
mov
pop
xchg
out
lcall
xchg
inc
les
jp
mov
movsl
or
xor
sbb
scas
pop
shrl
shlb
cmp
mov
test
sbb
jecxz
cmp
mov
jne
push
mov
or
sahf
push
sbb
shrl
std
icebp
xor
lds
mov
fmul
roll
jo
or
gs
leave
aam
mov
cmp
sub
add
jle
jl
insl
push
popa
jb
sbb
out
ss
sahf
sti
pushf
adc
popf
cs
iret
js
mov
xchg
cmc
fsubs
cmpsb
aas
sbb
stos
mov
add
adc
push
mov
lds
mov
loop
xchg
add
sbb
pop
lods
add
push
aam
div
outsl
pop
insb
outsb
dec
cmpsb
jno
cmp
sbb
insb
jnp
sbb
mov
xchg
inc
sub
mov
cs
sub
or
add
sub
mov
fwait
sbb
xchg
add
out
subb
xchg
mov
aad
jle
pop
iret
dec
xor
pop
xchg
mov
xchg
lret
in
popa
sub
rolb
pop
and
rorl
aam
jg
add
mov
loop
mov
icebp
das
sahf
mov
mov
pop
push
gs
call
jecxz
inc
add
int
insl
imul
popf
int3
mov
mov
int3
add
mov
fildl
pop
inc
ja
jp
xchg
daa
inc
out
mov
inc
and
scas
mov
subl
call
mov
mov
stos
cltd
push
sahf
insl
out
pmaddwd
push
inc
andl
or
inc
xchg
bound
cmovg
fs
loope
and
scas
stos
cmpsl
mov
les
orl
ret
insb
aaa
fstps
inc
mov
lcall
repnz
mov
dec
dec
cli
jae
sbb
inc
pop
out
sub
jge
test
inc
push
xchg
stos
and
pop
popa
sub
loope
nop
lea
adc
imul
cmpsb
hlt
cmp
pop
rolb
pop
out
push
mov
orl
jmp
iret
ja
sbb
incb
imul
loope
nop
and
stc
popf
sbb
in
rcll
mov
std
dec
js
mov
xlat
inc
iret
add
es
in
ss
popf
push
inc
cltd
cmpsl
leave
lock
xor
adc
ret
mov
lods
jo
push
pop
pop
and
cli
inc
mov
xchg
mov
loope
jno
addl
mov
popa
ja
aad
cs
scas
ret
ret
popf
jb
inc
das
std
cmpl
xor
push
dec
out
aas
call
in
dec
push
insb
pop
fnstenv
adc
daa
ljmp
pop
mov
insb
fimuls
inc
sahf
jnp
insb
les
in
xor
ja
dec
jmp
sub
mov
insb
pop
jp
push
inc
jns
lret
imul
sub
sub
xchg
out
mov
push
ss
lods
push
test
jne
jbe
inc
sbb
stc
movsb
and
mov
mov
inc
sub
push
adc
push
orl
or
jp
mov
add
adc
rcl
gs
sarb
in
push
adc
pushf
testl
mov
and
pop
xchg
scas
push
jg
pop
idivb
and
push
das
sub
cltd
mov
movsl
psubb
addl
xchg
dec
inc
sbb
imul
aad
adc
xor
jecxz
out
ja
test
mov
in
pop
adc
pop
jle
in
add
dec
call
mov
fnsave
jnp
orb
xor
inc
dec
sahf
and
test
lock
popl
loop
xchg
sbb
and
mov
lret
aam
xchg
adcl
movsl
stos
jbe
cmc
jmp
dec
loopne
mov
and
xchg
mov
test
mov
fwait
stos
and
mov
push
jne
pushf
pop
popa
es
divl
push
xchg
dec
clc
pop
mov
iret
push
lods
aaa
inc
mov
or
dec
jnp
xchg
fwait
adc
cmp
in
cmpsb
iret
add
mov
mov
data16
sbb
jno
mov
popf
sub
outsl
lret
dec
inc
mov
test
cmp
cmpsl
add
pop
jmp
sbb
mov
sub
test
rcr
and
mov
scas
nop
aas
ljmp
imul
iret
shl
fwait
adc
push
cmp
mov
iret
jno
pusha
adc
pushf
daa
clc
cmc
fldlg2
jnp
imul
andl
outsl
div
mov
inc
repz
inc
ficoml
pop
push
cmpsb
sub
xchg
and
shll
and
pusha
push
jle
lods
add
mov
push
pop
subb
mov
pop
clc
dec
jne
andl
pop
mov
popa
subl
and
movntq
push
cmp
into
movsb
mov
ss
jl
xchg
or
inc
mov
aad
icebp
in
pop
mov
es
xchg
push
jae
icebp
ror
imul
out
ret
xor
js
sahf
js
stos
sar
add
jb
dec
mov
sbb
dec
outsl
gs
push
ds
movsl
mov
decb
popf
cmp
sub
push
ret
sbb
jb
jb
add
in
and
pop
ficoml
out
test
jno
mov
sub
xchg
mov
imul
arpl
call
gs
scas
jne
clc
pop
mov
sub
pop
xorb
sahf
fcoml
cmp
in
rorb
xor
or
xchg
xor
pop
sbb
data16
in
rcl
cld
pop
cmpsb
repnz
add
dec
or
pop
cmp
add
pop
adc
mov
inc
mov
imul
cwtl
in
or
adc
leave
pop
jbe
stos
sub
sbb
jmp
jle
lahf
mov
mov
sbb
cmp
dec
add
mov
icebp
mov
fimull
or
cmp
xor
loop
sbb
mov
aas
inc
cwtl
idivb
sti
ret
add
sbb
dec
icebp
mov
lods
cmpxchg
xchg
cwtl
mov
jne
jecxz
inc
insl
pop
mov
pusha
dec
xor
das
push
sti
jae
leave
mov
out
jnp
repz
pop
pop
lods
push
je
daa
inc
aad
fs
cmp
shl
jne
jno
lcall
and
push
hlt
pop
pop
mov
xor
jb
mov
dec
int3
es
ds
xlat
pushf
imul
and
pop
adc
jmp
xor
repnz
cs
xchg
sub
clc
add
aad
xor
data16
xchg
sub
ljmp
dec
gs
out
shlb
test
jns
rcrl
pushf
inc
add
sbb
jmp
mov
xchg
xchg
push
in
push
pop
repnz
in
mov
mov
dec
cs
pop
iret
sti
in
push
cld
xchg
adc
inc
jnp
fstps
int
pop
decb
cmp
das
int
fsubs
jbe
sbb
cmpsb
scas
stos
mov
or
xchg
push
dec
fimuls
dec
nop
inc
or
or
loope
adc
xchg
aas
sub
push
inc
in
test
xchg
pop
lret
mov
or
sbb
in
jp
xchg
aaa
aaa
pop
or
cwtl
pmulhw
cmpsl
mov
movsb
add
push
mov
outsb
inc
shlb
aas
bound
stc
jge
inc
xor
test
push
jnp
test
int
mov
cs
pop
mov
mov
cs
enter
mov
mov
mov
vpunpcklqdq
test
push
add
pop
push
leave
sbb
cmp
test
push
js
xor
imulb
loope
insl
jae
cmpl
lret
mov
sub
mov
jbe
push
mov
leave
mov
and
dec
insb
pop
in
pop
movaps
nop
xchg
or
stos
xor
rclb
pop
cmc
inc
xchg
out
lds
rcr
test
mov
sub
mov
cld
and
push
mov
mov
mov
and
iret
mov
fistps
pusha
jo
inc
fadd
movsb
scas
mov
sub
cmpsb
dec
mov
bound
out
outsl
or
mov
fistpll
xor
out
adc
push
out
mov
ds
sbb
xor
and
adc
sar
jo
pop
pop
dec
push
loop
mov
sbb
jle
xor
pop
cmp
cwtl
jnp
sbb
lcall
xchg
pop
lahf
jl
pop
xchg
pop
sbb
out
lret
adcb
jne
xchg
push
xor
lods
sahf
std
cmp
cmp
decl
outsb
in
gs
jbe
and
fstpt
mov
adc
xor
mov
add
add
jmp
jae
inc
mov
movb
adc
sti
test
adc
repz
dec
stos
popa
xlat
sbb
stos
test
test
xchg
mov
mov
je
inc
adc
int3
jno
add
jle
adcw
add
leave
mov
int3
sbb
out
dec
cli
out
push
xchg
addr16
sbb
int3
inc
fwait
mov
mov
jg
jbe
pop
cmc
and
mov
ss
cmc
jns
xor
adc
jle
mov
sarb
or
fdivrl
cld
bound
jmp
fmul
push
rolb
jns
loopne
ja
adc
adc
test
push
ret
pop
clc
cmp
xor
cltd
push
xchg
sub
mov
dec
mov
lock
and
xor
mov
pushf
pushf
cmc
loopne
pop
xchg
inc
aad
xchg
mov
subl
imul
mov
fstpt
sahf
clc
cwtl
xchg
cmpsl
repz
mov
xor
xchg
rcll
das
repnz
and
test
mov
lcall
call
xlat
and
dec
add
test
mov
shlb
je
sbb
les
movsb
shl
lds
movsb
sbb
mov
push
mov
loop
popa
inc
fstl
call
mov
cwtl
jg
stos
je
sbb
and
into
sub
movsl
push
rorl
adc
add
jae
adc
rolb
fwait
jno
jbe
push
addr16
adc
in
daa
push
mov
mov
lods
lds
repz
aaa
in
imul
dec
test
sub
sub
jle
mov
aad
stc
dec
mov
or
loope
sub
outsl
xchg
mov
cmc
sub
cltd
dec
cmp
lahf
shrl
fsubs
incl
insb
jecxz
ja
cmp
or
out
sti
mov
add
push
xchg
scas
push
loop
and
xor
xchg
and
mov
xchg
popf
add
mov
xor
and
dec
decb
sbb
sub
scas
fisttps
gs
sub
lret
inc
sbb
and
pop
sbb
leave
insb
mov
in
enter
inc
inc
pop
mov
inc
jle
add
or
iret
sub
jbe
or
out
sub
sbb
jbe
arpl
leave
xor
pusha
int
adc
add
in
out
lret
jns
lahf
add
pop
mov
sbb
movsb
call
subl
add
xor
jp
pop
mov
dec
iret
inc
or
inc
pushf
adcb
movsb
pop
pusha
jne
jns
mov
pop
mov
and
add
lds
iret
xor
pusha
aam
and
xcrypt-ctr
cmpsl
sbb
in
push
jge
lds
test
mov
lods
stc
pop
mov
jecxz
add
xchg
stos
pop
cmpsb
cmp
push
inc
jns
add
in
ss
or
arpl
cmp
sub
outsl
adc
sub
sti
js
jecxz
cwtl
dec
cmp
or
sub
add
cmp
jnp
pop
cmp
mov
xchg
jmp
cld
inc
in
mov
dec
repz
mov
aaa
repnz
sti
adc
loop
adcl
add
cltd
mov
mov
pop
mov
cmp
mov
mov
sub
cmp
stc
inc
and
je
scas
jecxz
ljmp
inc
js
adc
lock
aam
and
xchg
icebp
adc
mov
int3
sbb
lcall
add
orl
in
cmpsl
in
mov
mov
ja
jecxz
mov
push
lret
dec
enter
cmp
push
sub
imul
adc
loope
push
mov
pop
outsl
xchg
and
lods
pusha
out
stc
mov
sti
mov
imul
rorl
cvttps2pi
ss
imul
and
lret
lret
scas
mov
ficoms
js
hlt
in
fwait
push
inc
xor
idivl
sbb
or
into
xor
dec
dec
adc
fnstenv
push
cmc
adc
mov
xlat
out
jle
xchg
cld
sub
and
push
jmp
dec
add
jno
lods
popl
xor
cwtl
and
sbb
mov
cld
icebp
in
lret
adc
mov
orl
lcall
xlat
or
sub
out
shl
outsl
and
and
pop
dec
xchg
inc
add
sbb
insl
in
push
push
sub
cmp
in
mov
push
mov
fisubrl
cs
mov
outsl
or
jmp
loopne
aam
inc
shrb
inc
xor
outsb
mov
iret
cld
bound
stos
adc
mov
push
mov
outsb
rorl
outsb
shlb
sahf
in
inc
stos
test
fistps
lods
aam
imul
or
xchg
add
loopne
push
add
shll
adc
nop
xchg
clc
push
orb
or
xchg
mov
add
shlb
fisubrs
xor
xchg
add
out
int
jecxz
mov
shll
stc
jl
dec
int
je
loop
sbb
push
addr16
test
cmp
addr16
adc
fs
push
or
jg
lahf
aas
fidivs
push
sahf
add
mov
subl
xchg
out
int3
lds
nop
test
jae
push
inc
mov
dec
jo
rep
push
mov
dec
loopne
pusha
fistl
mov
pop
sahf
push
push
push
cmc
adc
out
daa
aad
or
mov
decb
popf
subl
cmpsb
fadd
push
pop
outsb
jb
loope
mov
cltd
ss
in
sbb
push
xchg
iret
cmp
jne
fistpll
add
inc
call
mov
jle
movsb
daa
push
xchg
sub
add
fdivr
pop
scas
xchg
xchg
push
inc
popa
mov
sbb
sub
xchg
jbe
add
inc
or
fs
loop
cmp
add
mov
mov
test
je
push
mov
sbb
xor
add
cwtl
gs
push
lods
fcmovb
lods
mov
sbb
push
inc
sbb
jge
push
mov
hlt
in
bound
call
sbb
dec
ljmp
in
sub
jns
jne
mov
pop
inc
dec
cmp
push
pop
arpl
jmp
cmp
shlb
fcompl
dec
sti
inc
pop
std
fs
xor
aam
out
inc
int3
pop
sbb
sub
lock
lods
fmuls
sbb
fsubrl
and
into
pop
push
or
dec
aas
scas
jbe
js
icebp
cmp
rcrl
sbb
aad
jmp
jle
jb
in
jnp
adc
leave
push
jns
jno
xor
repz
daa
add
cmpsb
xor
xchg
scas
or
aam
and
sub
or
jne
mov
test
and
mov
sbb
inc
mov
inc
notl
lahf
mov
mov
js
mov
jb
mov
stos
inc
cltd
sbb
scas
leave
jne
cmp
mov
xor
push
inc
mov
add
pop
and
pop
enter
ret
push
and
aas
dec
push
pop
push
addl
pop
mov
in
mov
sub
jl
sbb
notl
imul
and
mov
cmc
testl
mov
pop
cmc
loop
push
ds
xchg
mov
test
inc
das
add
ja
inc
push
mov
push
test
pusha
fimuls
add
notl
mov
cli
add
sbb
jge
fidivs
mov
rorb
pop
cmp
mov
mov
pop
mov
push
inc
imul
xor
scas
and
and
lret
push
xor
mov
and
loop
mov
or
fdivl
mov
shrb
cmp
mov
mov
fisubs
adc
mov
push
into
and
pop
push
ljmp
imull
cmp
add
jae
enter
adc
imull
inc
cmp
cmpsl
pusha
cli
aam
mov
add
test
ffreep
cmp
inc
jl
ficompl
mov
xchg
xor
mov
push
dec
or
sub
adc
aam
jge
push
push
int
push
cmp
mov
add
add
mov
test
in
fiaddl
test
dec
add
cmp
mov
cmp
jae
jnp
xchg
jbe
mov
rcpps
jecxz
decl
cwtl
cmpsl
push
arpl
jmp
loopne
adc
mov
test
pop
icebp
dec
outsl
das
cltd
push
loopne
or
mov
insb
test
popf
mov
iret
hlt
ss
mov
in
ljmp
inc
imul
nop
mov
pop
mov
pop
hlt
in
push
inc
lret
aad
scas
pop
dec
and
cld
jno
cld
idivb
insl
fmulp
les
mov
jno
ds
pop
out
mov
pop
arpl
loope
movsb
pop
addr16
cmpsl
xchg
mov
loopne
adc
test
mov
je
or
xchg
push
rcl
mov
mov
clc
jmp
mov
sbb
lret
fadds
mov
mov
fldt
stos
sbb
jne
scas
xor
jns
jno
mov
mov
mov
movsl
add
jecxz
fsubl
sbb
ss
xor
je
mov
cmp
nop
jnp
movsb
push
call
add
inc
inc
add
mov
pop
sbb
dec
mov
mov
jns
into
in
inc
loopne
mov
inc
cmp
lods
lods
sar
pop
or
and
mov
jo
dec
call
xchg
pop
fisttpll
lret
xchg
mov
push
cmp
fmuls
lret
insl
push
lds
ror
lods
into
inc
mov
add
xor
jp
pop
daa
popa
lds
mov
cmp
or
xchg
aaa
inc
adc
pop
pop
cmpsb
xor
out
in
fidivrs
xor
fnstcw
dec
mov
push
daa
push
fsubrs
aad
mov
sbb
jmp
mov
jo
sbb
adc
or
jb
pop
inc
mov
mov
lret
cmpsb
pushf
repnz
insl
mov
aaa
cmp
inc
rdpmc
fsubl
pop
mov
xchg
stos
pop
nop
pushf
btl
mov
xor
push
push
push
lcall
jmp
inc
idivl
sbb
and
mov
inc
ret
jmp
push
sub
mov
cltd
mov
lea
mov
mov
imul
mov
addr16
cld
pop
or
iret
cmp
icebp
and
or
mov
inc
fwait
sub
fldt
dec
or
loopne
jg
jno
adc
xchg
gs
das
data16
in
loopne
or
xchg
mov
add
push
push
jle
add
mov
repnz
pop
adc
scas
mov
mov
and
rol
lret
loopne
cwtl
mov
ss
adc
jg
mov
jp
push
inc
add
bound
cmp
add
icebp
mov
loope
adc
fiadds
jecxz
fstl
lahf
lcall
ret
and
enter
push
xchg
inc
mov
movsb
push
inc
push
xchg
ss
addr16
cbtw
imul
pop
out
icebp
push
cmp
push
mov
fcmove
in
rcll
push
sti
outsb
testb
mov
xchg
enter
loopne
add
mov
sbb
pop
addb
orl
icebp
inc
mov
jp
push
jne
jnp
push
out
cwtl
call
and
lahf
popf
cld
sbb
push
jl
dec
lret
testl
mov
fdivrl
add
adc
lret
lock
inc
sahf
lods
ljmp
mov
mov
test
inc
ljmp
arpl
push
fnstcw
lret
jae
push
add
adc
push
xor
push
test
mov
ret
mov
out
push
pop
ret
cmp
add
std
lahf
scas
mov
jbe
gs
test
inc
mov
int3
shlb
sub
repnz
mov
push
repnz
push
push
add
dec
adc
iret
in
mov
cmp
or
scas
mov
push
push
fdivl
mov
push
movsb
xorb
mov
push
mov
ljmp
clc
popa
mov
mov
rorl
add
xor
or
add
or
sbb
nop
je
xchg
lock
scas
xor
popf
test
mov
daa
aad
xorl
xorl
jge
fdivs
and
xchg
lcall
ss
cltd
inc
xchg
cmp
je
cmpl
sbb
ficompl
adc
mov
push
hlt
fwait
xchg
je
fbld
jne
mov
add
mov
adc
std
xchg
addr16
fnstenv
lea
inc
lahf
sub
inc
out
dec
sarl
and
ret
les
adc
fdivrs
aad
mov
scas
mov
mov
and
jge
pop
movsl
lods
xchg
cmp
push
mov
adc
insb
cmp
or
cmp
jp
fstpt
sub
adc
lods
ja
sub
xor
jnp
cmpsb
pusha
xchg
inc
add
add
or
and
dec
out
add
jle
push
mov
in
mov
fcom
xchg
insl
mov
cmpsl
push
sbb
sbb
lahf
dec
gs
sbb
dec
jge
mov
je
or
fimuls
and
clc
inc
in
mov
shlb
and
mov
dec
arpl
xor
lods
cmpsl
push
shll
in
mov
mov
xor
adc
es
dec
pop
fnclex
add
mov
fmul
icebp
sahf
jo
filds
shr
add
xchg
cwtl
cmc
aaa
xlat
mov
lds
mov
pop
mov
insb
jno
inc
mov
xchg
gs
dec
push
rolb
lcall
mov
mov
and
fs
pushf
push
pop
sbb
adc
addr16
in
xor
cmpsb
nop
cmp
ljmp
scas
push
cmpsb
jns
pushf
jnp
sub
es
xor
ret
cmp
jp
aaa
inc
mov
inc
repz
sub
cmp
sub
dec
pop
xchg
loop
and
stos
jb
rcrb
inc
mov
lret
mov
push
mov
loope
pop
cmp
jmp
popf
inc
dec
dec
xchg
fwait
enter
inc
push
dec
ret
sti
cwtl
pop
bound
jmp
call
test
das
mov
xorb
add
lds
push
scas
adc
aaa
mov
jecxz
ret
jns
sbb
ljmp
dec
insl
cmp
popa
pop
add
in
shrb
adc
shr
mov
add
imul
lret
cmp
mov
test
sbbb
lds
jns
outsb
int3
test
js
jbe
clc
add
sbb
pop
ljmp
push
insb
jne
cmpsb
in
jb
mov
sub
daa
and
in
mov
call
push
dec
js
add
rep
adc
xorb
xor
mov
out
stc
shrb
int3
imul
push
fldt
pop
loop
sub
jp
xlat
lcall
jo
pop
add
xchg
dec
mov
lds
sbb
icebp
jbe
outsb
jecxz
add
push
sbb
push
je
cmp
aam
cmp
add
sbb
hlt
adc
lock
mov
daa
push
incb
bound
mov
rcr
push
stos
sub
adc
add
cmp
ja
xchg
dec
sub
lods
mov
mov
xchg
ret
iret
pop
fwait
xchg
daa
daa
jecxz
jbe
and
or
mov
adc
xor
push
and
dec
push
ret
mov
test
mov
push
sub
fisubs
andb
cmp
ret
daa
xor
ret
push
daa
cs
lods
sub
adc
addb
pusha
pop
lret
push
sub
push
jle
imul
into
inc
fimuls
fimull
jb
push
or
sbb
mov
orb
rcll
adc
adc
rolb
ds
cs
aas
jbe
in
sbb
out
insl
shlb
mov
stos
gs
ret
mov
into
or
hlt
daa
xchg
push
in
push
mov
mov
fildl
hlt
xchg
rcrb
int3
cs
sti
out
movsl
push
icebp
fiadds
aaa
cmc
mov
jg
call
mov
xchg
jmp
push
sbb
fs
push
jns
ds
mov
dec
fildll
lock
inc
inc
jbe
rclb
mov
sbb
mov
jne
and
jle
mov
addr16
scas
mov
lods
jmp
adc
pushf
cmpsl
lret
mov
inc
xor
sbb
jns
cmp
test
aam
sub
jg
out
push
or
fwait
cmc
push
cmp
and
orb
dec
rolb
jbe
inc
ffree
mov
shl
daa
mov
pop
sub
sbb
pop
fdivl
ror
push
pop
jmp
inc
inc
scas
mov
out
out
pop
iret
jl
add
subb
sbb
adc
and
inc
cmpsl
or
push
mov
mov
push
xor
imulb
mov
xorl
pop
movb
sub
jne
xchg
xor
repz
mov
dec
dec
incb
xchg
fidivrl
sub
mov
not
or
cmp
and
xchg
cmp
dec
pop
out
mov
add
fidivrs
cs
sub
push
jg
sti
pop
dec
test
xchg
out
loop
adc
fnstenv
dec
test
jle
sub
mov
mov
stos
mov
lret
orl
lea
xlat
and
ljmp
jecxz
mov
pop
jp
xchg
or
lret
pop
or
fwait
das
mov
sbb
sbb
test
inc
nop
and
add
xor
mov
subl
inc
cmp
sub
in
out
fwait
sbb
stos
sub
ss
testb
sub
popl
dec
xor
sub
mov
inc
mov
mov
lods
jg
xchg
sti
scas
enter
scas
xchg
or
mov
ret
adc
mov
ss
jb
loopne
mov
jmp
into
add
shrl
ss
pop
aam
cltd
insl
dec
xchg
pop
push
mov
lcall
loopne
push
jl
vmread
jb
adc
or
jge
mov
loop
sub
lret
call
pop
mov
cmpsl
xlat
sub
mov
fisubl
test
xchg
enter
scas
adcl
and
and
movsb
scas
insl
cld
mov
dec
ss
pop
sub
in
ds
dec
xchg
dec
test
aaa
pop
sti
mov
sbb
js
xlat
or
xchg
test
push
jbe
lcall
inc
mov
inc
inc
dec
pop
adc
in
mov
adc
mov
imull
sahf
imul
lahf
jl
cmpsb
js,pt
out
pop
add
mov
sbb
rcl
adc
sub
inc
js
scas
ljmp
push
arpl
adc
shll
gs
and
imul
jne
cwtl
push
aas
cmp
mov
js
mov
jle
mov
add
sahf
test
rcrb
push
out
push
push
push
dec
xchg
adc
and
xor
rorb
dec
in
jge
leave
sarb
sub
push
fldt
inc
cwtl
nop
test
stos
nop
and
dec
adc
or
movsb
fldt
divl
mov
push
lahf
mov
add
xchg
sub
and
pop
jo
cld
and
ds
sub
cmpsl
scas
cli
aas
fimull
aaa
jno
cmp
lds
cmp
xchg
inc
data16
dec
xchg
mov
mov
ljmp
and
pop
loop
mov
pop
ds
lods
fdivrs
stos
test
mov
sbb
sub
sub
and
push
sarl
mov
stos
cmc
mov
int3
mov
push
jns
mov
pop
jmp
repz
push
mov
in
mov
fsubr
out
fistpll
mov
and
out
in
xor
fs
shl
jae
loope
cmpsb
cld
xchg
scas
push
dec
js
loop
imul
xchg
jp
pop
dec
aad
jl
stos
mov
insb
es
inc
pop
inc
adc
or
and
or
xchg
fsubl
outsl
add
xor
pop
das
adc
xor
cmp
jmp
es
popf
adc
gs
mov
xchg
inc
outsb
jb
mov
sbb
bnd
push
push
out
push
sub
faddl
fstpl
lret
dec
xor
pop
cs
jnp
dec
popa
outsb
clc
mov
arpl
cmpsb
imul
lcall
ret
and
lcall
leave
mov
mov
or
cmc
cmpsl
in
jae
add
mov
movsl
repz
inc
cmpb
cmc
xor
jo
popl
mov
daa
cmp
clc
xchg
push
scas
mov
lds
sub
and
es
mov
and
dec
shlb
data16
mov
or
pop
push
clc
push
aad
jb
or
je
xor
push
pop
js
mov
jae
int
out
out
loop
mov
mov
das
js
leave
ret
fwait
bnd
mov
inc
push
jno
add
mov
mov
pop
dec
in
je
daa
mov
jg
push
pop
push
bound
jb
mov
jmp
enter
cli
pop
sub
jo
jno
adc
mov
mov
mov
adc
jecxz
adc
dec
lods
dec
cmp
sbb
icebp
dec
fwait
call
sbb
pushf
xlat
xor
mov
bound
sysenter
xor
and
push
xchg
and
adc
push
cmp
jge
mov
imull
rolb
out
test
mov
jg
xorb
pop
cmpsl
inc
iret
lahf
and
nop
in
cmp
imul
scas
incb
add
cmc
jnp
jp
rcll
jbe
xor
mov
cmp
mov
popa
fisubl
outsb
mov
mov
and
div
aam
mov
dec
and
bound
cmp
fdivp
cmpsl
xor
mov
shlb
aam
mov
pop
mov
push
jbe
mov
dec
ja
add
or
mov
mov
rorl
nop
mov
mov
xchg
jnp
dec
mov
mov
ret
or
and
cmp
sahf
rolb
jae
in
pop
fisubrs
or
xchg
je
mov
push
cmp
movsl
pop
stos
xor
jne
mov
decl
jle
out
sub
pusha
lret
mov
add
push
les
jo
mov
xor
shll
and
cmp
pop
test
movsl
lahf
fidivrl
mov
jge
data16
fidivrl
mov
fwait
jae
xor
test
lods
jb
jbe
aaa
cmp
sarb
mov
lcall
jge
xor
mov
jge
and
push
add
jae
and
notb
xor
cs
rclb
mov
rclb
cmp
cmovg
imul
inc
rcl
negb
dec
xlat
or
rcll
addb
dec
addr16
sub
movb
mov
push
inc
adc
xlat
dec
cmp
loopne
mov
xor
jns
clc
sub
dec
lds
testl
cltd
add
dec
mov
jne
ljmp
out
or
cld
jno
pmulhw
fists
dec
add
dec
lahf
or
push
or
scas
insb
xchg
jl
xor
pushf
mov
xchg
pop
xor
xchg
sarl
add
cmp
jmp
xchg
xchg
ja
push
xchg
mov
ja
inc
pusha
or
xor
gs
or
les
leave
test
cmp
adc
ret
out
stos
popa
push
fbld
push
nop
lcall
scas
lds
or
sti
dec
pusha
or
fs
xchg
sub
lcall
movq
in
iret
pop
fsubrl
or
es
jle
lret
cld
push
repz
movsl
mov
cmovge
push
jb
sub
shr
jns
push
xor
pop
jnp
andb
pop
es
xor
push
dec
adc
adc
in
xor
dec
push
xorl
push
and
andl
push
int
inc
notb
or
rclb
mov
jg
iret
xor
xor
fwait
mov
test
data16
ss
push
xchg
xor
cld
out
mov
inc
out
test
push
cmp
rcll
mov
in
stos
int
and
inc
jge
out
cs
xchg
jge
push
daa
jg
jne
xchg
cmp
mov
leave
loop
and
inc
mov
in
mov
cmc
add
adc
bound
mov
mov
jb
or
fwait
adc
cli
mov
jg
out
mov
ret
mov
sub
add
lcall
repnz
pop
sti
in
addr16
inc
loope
or
and
push
sti
sub
xlat
ds
vpcomub
testb
test
lods
cmp
int3
fldenv
frstor
stos
in
mov
mov
pop
test
jge
sarb
imul
lret
cmpsl
xor
mov
subl
testl
aam
insb
cwtl
mov
lods
and
aad
rcr
sti
or
add
call
ret
pop
popf
scas
ret
daa
jbe
mov
adc
fsubl
mov
sub
hlt
mov
inc
jmp
imul
fnstenv
sub
shrl
stos
push
sbb
imul
repnz
out
sbb
sbb
or
cmc
dec
mov
lahf
xlat
pop
add
mov
jp
inc
add
mov
push
aad
jmp
push
dec
repz
enter
jg
test
inc
dec
jae
and
mov
leave
pop
sbb
lcall
jp
lret
fs
jae
push
mov
mov
dec
adc
movsb
out
ficoml
sub
loope
incb
daa
insl
adc
movsb
dec
lods
subl
sub
pop
push
mov
sub
dec
out
sbb
inc
insl
mov
stc
inc
mov
inc
popl
pop
int
gs
fisubrl
dec
jmp
sbb
inc
xlat
pop
out
sbb
hlt
je
push
int3
and
xchg
or
std
loope
repz
js
fsubs
and
nop
and
cwtl
pop
jne
sarb
jae
lock
mov
inc
leave
es
mov
cmp
shll
xchg
ret
ficomps
icebp
test
xchg
rorb
xchg
es
cmp
push
imul
cmp
loop
std
aas
pop
sub
or
jg
int3
add
rcrb
data16
shl
sub
jecxz
jl
cmp
push
cmp
cmp
sub
push
ret
loop
inc
mov
adc
push
cmp
add
das
test
stc
insl
push
pop
push
or
ret
into
jno
jb
and
mov
adc
fisttpl
jne
ljmp
jp
popf
fidivl
and
imul
mov
push
push
mov
sbb
stc
mov
std
pusha
cli
stos
or
test
call
mov
fstpl
add
loop
or
and
fcmovu
clc
add
and
adcl
out
jo
add
loopne
sub
stos
sub
fs
xlat
jmp
inc
rcrl
repz
jno
dec
add
push
mov
push
or
or
rcr
jl
ds
push
fstpt
jae
cmc
in
daa
lock
jns
sub
mov
imull
adc
fs
push
push
ficomps
nop
sti
gs
push
fdivl
in
stc
es
mov
out
addr16
sub
lea
test
adc
push
sti
sub
cmp
scas
xlat
es
add
and
stos
lcall
fimuls
pop
push
popf
loop
scas
aaa
cmc
roll
adc
mov
ret
sbb
icebp
push
lds
add
jbe
or
dec
or
add
in
xchg
fcmovnb
sbb
in
sub
arpl
rclb
pop
pop
dec
es
hlt
aam
shrl
dec
stos
adc
bound
lcall
in
jb
mov
dec
inc
pop
adc
lret
nop
jg
push
push
jnp
mov
mov
fnstsw
test
push
loop
rolb
ljmp
les
lods
dec
icebp
hlt
sbb
sarl
xchg
cmpsb
cmp
or
xor
ret
or
jp
icebp
push
adc
cmp
in
adc
mov
fwait
es
ret
into
ljmp
add
push
push
aas
pop
mov
or
jmp
sbb
pop
adc
or
movsl
test
push
cmpb
enter
mov
rcrb
xchg
iret
cltd
add
fsubrs
and
mov
out
out
inc
mov
loopne
add
pop
xor
push
mov
nop
pop
mov
or
test
sub
repz
dec
cmp
add
int3
mov
sahf
and
mov
mov
fimull
mov
in
repnz
or
mov
mov
shll
jno
xor
sti
ljmp
or
mov
dec
sub
ds
dec
jnp
mov
jp
clc
out
mov
arpl
push
mov
mov
mov
mov
out
and
testl
adc
xchg
test
mov
push
mov
out
insl
out
mov
pop
pop
dec
pop
sub
cmp
in
pop
inc
push
xchg
or
push
fwait
adc
ror
mov
adc
inc
pop
cs
sub
movd
adc
imul
sub
xchg
xchg
scas
inc
loop
mov
aas
mov
pushf
stc
nop
insl
lock
xor
in
ja
xor
pushf
jno
xlat
sbb
movsl
mov
mov
mov
xchg
aaa
subl
mov
out
cs
or
lret
bts
jl
lods
stc
fidivs
outsb
jb
inc
mov
loopne
adc
add
outsb
or
test
pushf
sarb
jns
ficoms
dec
cmp
pop
adc
fiaddl
js
out
mov
xchg
xor
rorb
stos
inc
sbb
push
push
fs
push
scas
dec
xchg
push
pop
hlt
add
dec
lock
cmpsb
xlat
mov
mov
xchg
inc
sti
xchg
sahf
mov
fcomps
mov
mov
je
arpl
mov
lods
xchg
fptan
xchg
in
out
jmp
and
push
ljmp
inc
je
rcll
and
into
std
xor
int
bound
imul
xor
push
mov
mov
sbb
push
andl
cmp
cmp
es
jae
jg
movsb
mov
cmp
add
add
add
les
inc
or
sbb
jle
insb
pop
pop
xchg
xchg
icebp
movsl
aad
push
test
xchg
nop
adc
xor
mov
fisubs
int
mov
movsb
and
iret
stos
adc
fs
scas
mov
inc
cld
les
adc
test
mov
mov
aas
xchg
push
and
mov
push
pop
mov
subb
fwait
jnp
inc
fsts
icebp
sub
aas
mov
xor
dec
mov
xor
mov
xchg
push
or
insb
scas
imulb
dec
es
bnd
lds
outsb
dec
cmp
clc
adc
push
inc
insl
hlt
fidivrl
cmp
movsb
js
mov
andb
xchg
mov
lcall
push
ljmp
fsubrs
sub
cmp
in
add
cmp
fnstcw
mov
int
pop
pop
lds
mov
or
mov
dec
gs
rorb
cwtl
cmp
xchg
mov
jbe
in
movsb
call
sub
cmp
in
sub
and
jae
xlat
addb
repz
rol
jp
mov
push
pop
and
rcr
fidivrl
fadds
dec
stos
lret
shlb
cmp
loop
inc
pop
into
in
into
es
into
aad
divb
push
xchg
dec
mov
mov
outsl
imul
fdivr
mov
jmp
js
jae
xor
sub
addr16
fsubl
sbb
jmp
cs
insb
pop
lea
divb
mov
and
rorl
cmp
fmul
xchg
adc
std
dec
dec
mov
incl
mov
je
dec
xlat
scas
ds
mov
mov
cmp
insl
pop
inc
dec
movsb
ret
dec
lret
jmp
or
daa
pop
sbb
jno
aad
push
sbb
xchg
daa
in
push
ret
bound
jmp
cmc
sub
mov
mov
adc
mov
jle
rcl
xor
repz
subb
mov
popf
adc
jns
xor
jne
jns
xchg
cmpsb
xor
faddl
movb
loopne
xchg
fisubrs
fwait
scas
push
xchg
xchg
pop
mov
lds
jae
aam
cmpsl
sbb
inc
iret
xor
mov
in
xlat
orl
repnz
sub
stos
pop
fstpt
cmp
rorb
out
fnsave
inc
mov
aaa
inc
dec
dec
xchg
into
shr
mov
inc
dec
movsb
dec
pusha
cmp
fsubs
xchg
lahf
cwtl
ljmp
shlb
lea
into
lret
push
mov
scas
cmp
jbe
jp
insl
lock
ljmp
movsl
sarl
or
sub
cmp
mov
rcr
bound
lock
popf
out
xor
lock
ds
adc
mov
jnp
jb
pop
ljmp
push
add
and
sub
mov
mov
loope
jp
std
or
sbb
pushf
js
mov
sbb
out
rep
or
lahf
stos
fmuls
or
xor
mov
out
insl
push
sarl
and
xchg
xlat
inc
loop
mov
and
or
loope
outsl
loope
movsl
pusha
shl
lea
or
mov
adc
sbb
in
push
mov
cmp
mov
jge
icebp
in
loopne
icebp
ja
out
mov
cmp
push
dec
pop
jne
jno
sbb
pop
test
ja
xor
push
push
mov
push
fsubrl
rol
mov
push
movsl
les
mov
pop
imul
inc
incb
fdivrl
jmp
inc
popf
sub
or
jecxz
inc
pop
mov
xor
sbb
xchg
inc
bound
xor
movd
pop
leave
cmp
add
dec
mov
sub
push
jne
cmp
shll
pop
lods
outsl
aaa
mov
cwtl
adc
jg
fnstsw
stc
aam
insl
xchg
ds
pop
mov
adc
sub
sbb
or
jmp
or
sti
inc
inc
shlb
pop
sahf
iret
dec
clc
jno
cli
adc
jl
icebp
lcall
sub
subb
daa
fs
sub
loope
xlat
aad
dec
ds
fimull
inc
pop
pushf
loope
mov
test
aam
push
inc
dec
sahf
dec
or
loop
dec
negl
pop
xor
ret
cmpsb
aaa
roll
shrb
xchg
aad
mov
add
sub
mov
and
and
push
loopne
dec
jbe
mov
sub
cmp
pop
out
jmp
or
cmc
push
add
movsb
idivl
das
jne
jnp
jmp
jns
loopne
pop
add
push
mov
push
stc
cmp
jnp
movsl
dec
dec
push
and
mov
lds
push
pop
xor
inc
adc
cmp
mov
and
jno
cli
fidivrs
push
out
enter
adc
nop
dec
adc
mov
imul
or
mov
lods
cmp
ret
ds
or
xor
aaa
push
pop
lret
adc
arpl
xor
xchg
jno
in
mov
jp
jne
sub
lret
adc
fs
mov
cli
adc
push
add
mov
sub
imulb
andb
clc
stc
lock
cltd
cs
sbb
aad
clc
or
cs
pop
addr16
subb
cmp
push
sbb
sub
or
enter
js
jno
out
push
aam
mov
dec
cmp
mov
xor
xchg
mov
orl
out
clc
inc
xchg
add
mov
insb
fmull
rol
pop
lods
in
and
cwtl
jne
in
mov
cwtl
in
ds
dec
push
insl
test
push
enter
lods
data16
adcb
jae
sti
test
mov
push
adc
leave
xor
lock
cmp
xlat
loope
pop
pop
mov
inc
inc
jbe
inc
lahf
pop
test
imull
fwait
add
adc
xor
pop
js
dec
iret
adc
shlb
gs
testb
stc
cmpl
mov
adc
arpl
xor
add
sub
jns
push
outsl
sbb
adc
fcomp
jmp
stc
mov
cltd
push
mov
stos
mov
inc
dec
push
rorb
inc
jecxz
fbld
loopne
pushf
or
outsl
jl
out
jg
or
lret
dec
pop
push
sar
lcall
mov
sub
dec
jmp
cmpl
sub
pop
cmp
xchg
jbe
inc
mov
xchg
or
lcall
dec
pop
mov
or
popf
inc
sti
sbb
mov
into
inc
sub
stos
mov
mov
sbb
and
les
pop
jp
add
roll
flds
lock
dec
mov
std
mov
daa
gs
loop
out
in
cwtl
add
mov
push
pop
pop
cmp
ret
xor
jo
xchg
and
jns
outsb
mov
pop
and
mov
jnp
popw
sbb
jne
movsb
jbe
cmp
lahf
xor
jno
xchg
xor
sti
mov
adc
push
mov
cld
xor
cli
mov
push
and
xchg
aam
inc
daa
push
mov
ffreep
and
sub
xor
cmp
add
push
adc
testl
pop
add
inc
idiv
out
sbb
dec
cmc
mov
cmc
iret
hlt
pop
popa
pop
lret
divl
push
push
inc
add
aam
push
push
roll
mov
sbb
mov
jg
fisttpl
leave
mov
or
insl
notl
pushf
cmpsb
push
ret
cltd
sahf
cli
repnz
aad
ret
lea
cltd
sbb
mov
inc
lahf
sarl
loop
dec
cmp
daa
hlt
cmpsl
inc
mov
hlt
cltd
fisubrs
rorl
or
popa
xor
imul
enter
cmpsl
sti
cmp
xor
xchg
dec
adc
out
push
in
mov
out
adc
sarl
icebp
xlat
scas
xlat
sti
add
daa
xorb
pop
and
mov
inc
movsl
inc
inc
bound
xchg
mov
cmc
arpl
push
push
arpl
mov
jb
data16
cmp
fnstcw
adcb
and
divb
push
paddusb
jo
dec
push
lea
int3
add
inc
dec
jnp
add
ja
sarb
addl
fildll
lods
dec
nop
xor
inc
jno
stc
orl
imul
fnstenv
fs
inc
lods
ret
fiadds
imul
loopne
sub
inc
push
pop
jb
daa
out
add
repnz
inc
push
xchg
mov
mov
sub
gs
push
std
inc
push
lds
and
pop
das
imul
sbb
add
repz
insl
push
lcall
lret
or
push
test
int
jl
bound
mov
push
jb
pop
mov
stos
push
test
xchg
mov
movsb
ret
mov
popf
cmpsl
jo
sbb
xlat
and
jnp
test
and
cmp
aas
mov
sahf
mov
pop
hlt
unpckhps
loope
rorl
test
fsubr
ja
shll
lret
int3
lahf
push
push
dec
and
jge
jmp
loopne
jmp
jp
inc
filds
dec
into
mov
xchg
loop
dec
jno
repnz
mov
jg
pop
in
push
dec
incb
xor
int
cmp
jns
in
dec
repz
xchg
fstps
cmpsb
inc
hlt
adc
ret
mov
mov
fmulp
xlat
rol
add
lock
mov
xchg
adc
mov
fildl
jae
mov
sub
xor
imul
push
sbb
test
add
and
and
or
sub
and
sti
jns
std
dec
jl
jmp
aad
adc
jle
sub
push
aam
je
shlb
mov
push
sbb
xchg
add
xchg
cmpsl
mov
xor
jg
out
xor
movsb
push
add
mov
stos
ljmp
in
mov
adc
or
je
pusha
cmp
add
push
jmp
subl
cld
lret
sbb
pop
nop
push
xor
jl
mov
inc
ljmp
dec
push
cwtl
or
pop
inc
xchg
lret
movsb
jmp
push
repnz
adc
lahf
jle
or
jae
inc
outsb
inc
fs
sub
ds
mov
jp,pn
aaa
and
mov
insb
xor
inc
pop
mov
pop
outsb
fmull
std
inc
mov
dec
sbb
xchg
addl
xor
or
ret
imul
push
sti
into
pusha
bound
cmp
mov
pop
jne
push
nop
arpl
hlt
sarl
in
cmc
push
xchg
sarb
jmp
inc
cmp
sti
add
xor
push
dec
xchg
cmp
push
outsb
sub
int
and
ret
int3
dec
push
ja
inc
jl
jo
xlat
jge
xor
shll
jo
and
cmp
adc
idivb
mov
fmul
or
les
mov
push
and
icebp
ds
repz
xchg
mov
dec
lea
push
xor
shll
mov
add
repz
out
add
cmpsl
call
sti
test
sub
and
in
pop
and
jnp
mov
add
repnz
fiaddl
fs
test
mov
insl
fidivrl
imul
xchg
or
mov
mov
lods
test
add
rclb
mov
mov
jecxz
subb
xor
sub
mov
or
je
and
push
mov
ja
push
call
int
add
push
sub
jl
push
sub
pop
mov
insb
xor
cmp
inc
jg
pushl
jno
xchg
pop
adc
xchg
jnp
mov
sti
movsb
inc
sbb
mov
adc
xchg
jno
sti
pop
adc
dec
cmpsl
lahf
jno
test
mov
jmp
out
aaa
sub
shll
repz
movsl
call
decb
fstpl
mov
ret
fdivl
in
fsts
and
sub
out
testl
add
inc
or
mov
jp
in
cmc
push
addb
mov
mov
cld
mov
mov
fstl
sub
inc
dec
scas
mov
adc
cmp
decb
pop
flds
cmp
shrb
sbb
inc
lds
lcall
inc
dec
mov
jmp
inc
fdivr
and
lret
pusha
mov
out
mov
hlt
sbb
cwtl
mov
jle
lods
clc
sbb
in
mov
cmc
xchg
and
or
add
xchg
jecxz
lret
jb
std
sbb
xor
sbb
pop
and
popl
arpl
dec
dec
enter
ret
arpl
xor
shl
fsubl
push
xchg
enter
inc
adc
cmc
cld
mov
jmp
pop
pop
in
in
movsl
sbb
in
jp
in
fs
faddl
push
dec
xlat
jp
movsb
cmp
jnp
dec
or
fs
loopne
push
mov
es
data16
xchg
inc
xchg
push
lock
insl
test
push
jge
dec
jle,pt
jne
arpl
jns
cld
shrl
push
inc
jecxz
mov
jmp
add
lods
pop
fwait
stc
sbb
stos
xorl
ss
mov
inc
xor
xor
shll
and
js
or
mov
sahf
ja,pt
add
adcl
nop
iret
rcrl
nop
int3
adc
mov
dec
push
xchg
mov
push
mov
int
mov
adc
js
movsb
mov
and
ljmp
mov
insb
sub
or
lcall
cwtl
xor
jae
std
fidivrl
pop
sahf
mov
fstpt
push
leave
imul
call
and
dec
shrb
xchg
cltd
jo
mov
stc
mov
sarb
mov
mov
cli
inc
adc
mov
enter
push
and
and
and
mov
push
ja
jle
loop
les
sbb
mov
push
or
in
scas
xor
in
xor
rorb
inc
add
mov
lods
fisttpll
call
fcoms
xchg
xor
sbb
xchg
arpl
adc
leave
test
inc
cmp
xchg
cmp
adc
out
mov
pop
mov
icebp
popf
xor
sahf
std
gs
push
push
data16
das
cmp
or
pop
lods
inc
and
xor
loopne
or
loope
repz
inc
jae
inc
negb
inc
pop
inc
rsm
sub
push
mov
testb
shl
cmpsl
pop
mulb
fsts
mov
adc
popf
les
mov
mov
adcb
scas
sbbb
xchg
push
in
inc
ljmp
jl
add
cmpsb
cltd
in
inc
les
cmp
xchg
dec
fisubrl
push
fnstcw
nop
arpl
gs
popa
cli
mov
mov
jno
stos
fidivrl
rorl
dec
inc
jmp
das
int3
jne
xor
into
xor
mov
add
sub
pop
adc
push
mov
scas
std
bound
mov
cmp
sbb
mov
int
xor
popf
insl
mov
or
sub
mov
rolb
and
insl
dec
xchg
test
add
and
shrb
inc
in
mov
loop
add
ret
rcrb
xchg
es
lds
dec
aad
dec
xorb
and
cmc
inc
pusha
clc
jns
setnp
xor
call
xor
loope
and
sub
mov
std
adc
jno
push
inc
es
fldenv
xlat
dec
add
rcll
fsubl
jmp
cli
xor
vprotd
aaa
test
xchg
pop
pop
ret
out
fsubrl
in
not
in
lret
bound
adc
out
push
jg
ljmp
fldcw
rolb
mov
push
jns
push
and
ljmp
jno
jl
or
icebp
orb
mov
push
mov
sahf
push
xchg
call
mov
cmp
inc
cmpsl
outsl
lods
leave
lcall
sub
and
and
sub
push
cmc
jb
push
xchg
sub
inc
repnz
addr16
ficomps
cmp
mov
aaa
xor
xchg
pop
subl
out
pusha
add
pop
dec
orl
jbe
or
xchg
mov
xchg
cmpsl
inc
push
fstpt
push
and
mov
repnz
or
dec
or
sub
cmc
xorl
mov
ljmp
cltd
shrb
xor
and
mov
sub
pop
test
sbb
xchg
jecxz
or
mov
stos
ret
push
test
pop
imul
ret
add
in
mov
mov
inc
xchg
or
jnp
mov
push
icebp
sub
mov
cmp
and
sar
iret
xor
lods
outsb
shll
ss
pop
add
ret
fisubl
or
xchg
add
dec
xor
in
lock
fldenv
mov
dec
jns
xor
jecxz
pop
fdivrs
shlb
div
push
inc
mov
lock
mov
lcall
xorb
add
mov
lret
imul
inc
mov
cvtdq2ps
push
sub
hlt
out
sbb
test
lcall
loopne
mov
push
daa
mov
inc
pop
popf
add
ljmp
arpl
xchg
test
shrl
lods
lret
xchg
xchg
js
stos
test
push
jge
add
stc
repnz
push
xor
lds
out
sub
movsb
adc
push
mov
mov
mov
adc
and
cmp
mov
subl
call
jl
jecxz
shlb
nop
adc
out
adc
aad
and
addb
xor
push
leave
mov
jnp
js
mov
pop
jmp
out
sbb
adc
gs
rorl
inc
adc
jmp
push
inc
sub
mov
repz
cld
pusha
das
lret
pop
xor
dec
insl
fsubr
mov
inc
into
mulb
inc
aas
mov
or
inc
into
push
ds
stos
rclb
out
leave
push
or
fdiv
andl
ffreep
imul
mov
mov
adc
or
scas
or
push
xchg
cmp
cltd
mov
sahf
test
sbb
cmpsl
jne
pop
jbe
cmp
or
mov
lock
fldenv
frstor
in
shll
inc
push
ljmp
popa
clc
arpl
les
aas
mov
aam
pop
jnp
sbb
mov
fsub
jecxz
xor
out
aaa
hlt
jmp
cmp
adc
ret
push
mov
push
minps
sti
mov
xchg
adc
push
jne
int
jo
cmpsb
inc
cwtl
out
pop
pop
push
adc
sub
bnd
addr16
stc
das
fisubrl
or
insl
mov
mov
cwtl
mov
hlt
and
push
mov
push
cmp
rolb
pop
fdivrs
mov
aam
dec
xchg
cmp
mov
xor
dec
sbb
xor
mov
pandn
aam
push
sub
mov
xchg
push
mov
push
lods
outsb
mov
cltd
mov
xchg
pop
and
mov
jno
js
xchg
fcoml
test
orl
and
dec
inc
pushf
inc
and
sarl
adc
xor
aad
dec
ret
push
mov
shlb
leave
iret
sub
rcr
xor
cs
out
sub
inc
imul
aas
clc
cmp
mul
inc
pop
mov
push
dec
ljmp
xchg
iret
cli
and
cs
into
int3
pop
loop
jp
add
in
mov
jne
data16
cmp
push
and
rorb
dec
sbb
fdivrl
pop
sub
ds
std
pop
daa
cld
or
sub
mov
sti
in
in
sti
loop
pop
mov
cmp
cmpsl
aaa
cltd
cmpsl
fbld
outsl
ds
lock
inc
aas
repz
fnsave
xlat
int3
insb
js
pushl
movsb
leave
fstpl
sub
fxch
dec
rcll
lea
in
fisttps
shl
push
inc
lea
daa
lret
xor
dec
mov
dec
pop
inc
pop
mov
and
testl
add
mov
arpl
mov
lahf
xor
movsb
fstpt
out
shlb
push
bound
test
and
repz
sbb
mov
test
sti
jle
adc
adc
jne
cmpsl
mov
jl
inc
mov
dec
fwait
sub
cmpb
inc
cmp
in
test
je
in
icebp
cmpsb
adc
es
std
xchg
test
adc
enter
push
into
fsubp
or
mov
inc
dec
cmp
aam
roll
xchg
icebp
call
jno
or
dec
mov
sbb
mov
inc
xchg
sbb
adc
inc
sub
push
push
les
ljmp
xchg
or
xchg
imul
mov
sub
mov
jbe
dec
pop
push
cwtl
jb
ss
imul
das
inc
inc
aas
out
add
or
mov
lock
sub
repnz
je
sar
mov
push
lods
xor
bound
pop
pop
push
mov
mov
cmpb
xorb
jno
lret
insl
or
sub
pop
or
mov
and
pop
icebp
xchg
out
pusha
daa
in
sub
rcl
sbb
xchg
mov
stc
loop
testb
fpatan
mov
mov
aas
push
insb
xor
inc
repz
jne
jbe
mov
dec
push
push
push
repnz
pushf
fsub
mov
mov
mov
les
push
xchg
sub
fs
sbb
jle
adc
push
dec
arpl
lods
movsl
cmp
pushf
loopne
mov
mov
mov
out
rcl
push
pop
mov
lods
lea
mov
pop
lds
or
adc
into
jbe
xor
add
in
mov
mov
sbb
dec
dec
out
and
faddl
leave
sub
push
cmp
or
aam
add
pop
int3
sub
int
cltd
adc
xor
xchg
test
ret
ljmp
jno
ljmp
dec
ljmp
inc
mov
push
xor
addr16
ds
cmp
sbb
aas
sbb
data16
das
pop
ret
push
wbinvd
nop
popa
lcall
lcall
lcall
jo
addr16
or
cmp
mov
fwait
rcrl
out
push
push
ret
xor
idivl
cwtl
roll
cli
loop
cli
mull
js
cmp
in
sub
jo
popa
inc
in
sahf
popa
add
mov
outsl
mov
fsubrl
je
push
jns
out
mov
mov
xor
loopne
push
lock
insb
jno
arpl
jnp
stos
jo
dec
push
xchg
adc
jp
into
subl
shll
cmpsb
xchg
jmp
es
and
jae
into
xor
mov
push
dec
shll
inc
push
sub
mov
inc
fs
stos
into
inc
mov
pop
stc
inc
xchg
loopne
inc
repz
lea
push
xor
rcll
jne
or
mov
sbb
aam
sbbb
test
stos
xlat
addl
pop
icebp
xchg
push
and
loopne
loop
cli
insl
sahf
mov
test
mov
pop
aam
dec
push
sub
mov
test
sub
push
add
xchg
and
adc
daa
bound
je
fs
scas
mov
out
das
jmp
push
rcrb
inc
mov
or
icebp
mov
ja
ja
sub
mov
mov
xchg
cli
mov
aad
sahf
sub
xchg
cmpsl
decl
add
mov
adc
jp
mov
pop
mov
or
cmp
cmc
xor
pop
out
or
cmc
and
lahf
xlat
ss
je
icebp
cltd
adc
je
fidivs
and
sbb
adc
ror
sahf
out
addr16
mul
int3
mov
daa
nop
in
xchg
out
or
stos
push
int
scas
lahf
sahf
adcb
shl
inc
xor
incl
into
pushl
mov
mov
mov
out
std
daa
loop
shrb
outsb
adc
popf
fdivl
push
jno
xor
cmc
push
mov
in
inc
or
hlt
push
mov
pop
push
test
pop
and
aas
cli
ret
push
clc
sar
ret
es
mov
cmpsb
inc
inc
adc
xchg
in
lea
xorl
mov
shll
roll
aad
or
decb
xchg
rcrb
test
dec
adc
cmp
imul
dec
push
and
jmp
andb
mov
dec
mov
ss
loope
aad
lcall
lret
repnz
add
xor
inc
ss
adc
rcrb
fxtract
and
push
shll
mov
and
fdivs
out
cmc
sbb
arpl
add
lea
mov
fisttpll
xor
dec
add
add
aaa
mov
mov
or
cmpsb
add
pop
mov
leave
jae
les
cmp
adc
mov
push
scas
cmp
sub
jns
rorl
dec
xor
mov
pusha
adc
cmp
cmpsl
jecxz
xchg
push
pop
xchg
pop
cmpsl
jne
imul
movsb
mov
xchg
pop
inc
dec
fisubs
jbe
std
jb
jp
scas
cmp
dec
mov
repz
adc
sub
test
push
mov
inc
mov
icebp
dec
fldt
iret
pop
pop
je
and
jg
je
jbe
push
inc
cmp
int
ss
fsubl
or
loop
out
xlat
je
lahf
dec
fsubr
jle
ret
push
ficompl
dec
mov
sbb
outsb
cli
into
mov
stos
dec
jnp
icebp
lds
aad
lcall
jno
insl
in
aam
cs
jns
dec
cltd
push
xchg
in
movsl
cwtl
cmp
inc
mov
ljmp
lahf
adc
or
add
or
mov
int
sub
mov
mov
pop
mov
inc
stc
gs
out
pop
or
push
iret
adc
mov
or
lahf
loop
cli
ja
cmp
jae
imul
xor
pop
fisttps
cmc
xor
pop
test
not
xorl
dec
xchg
xchg
mov
push
sti
or
xchg
stc
or
shrl
insl
cmpsl
mov
push
sub
out
fbld
push
cmp
xor
sub
inc
jne
bnd
push
pop
pop
dec
push
stos
cmp
mov
push
mov
mov
sub
out
cmpsb
fwait
js
addb
ret
je
xchg
adc
pop
notl
es
adc
addr16
jb
lds
dec
rorl
xor
fucom
jp
mov
loopne
ljmp
mov
aad
dec
xlat
mov
cmpsl
popf
xchg
and
jl
mov
and
xchg
sub
sbb
aad
sub
mov
mov
movsl
sub
pop
inc
mov
sub
lahf
pop
inc
ret
mov
inc
fistl
xlat
out
repnz
xchg
sub
rcrl
mov
out
adc
lods
sbb
sub
xchg
and
fst
ja
lods
dec
and
fldcw
cmp
les
push
imul
sti
nop
add
push
test
push
sbb
sub
gs
jnp
sbb
loop
lahf
fldl
sub
icebp
pop
icebp
and
scas
mov
dec
push
addl
lock
movsl
mov
and
sub
adc
imul
inc
int
mull
push
cmc
dec
movups
test
pop
fsubs
aam
popa
repnz
sbb
ja
fisttps
jecxz
popf
mov
add
jns
pop
je
mov
sbb
or
cmp
ljmp
insb
mov
icebp
rcl
daa
sbb
shr
pop
pop
in
pop
or
decb
sti
add
push
sbb
xchg
lea
popa
inc
decb
xchg
andl
mov
jns
arpl
faddl
inc
cmp
xchg
outsb
mov
jmp
aas
pop
in
and
mov
movsl
cld
add
das
aaa
scas
xchg
shlb
outsb
shll
call
cli
xchg
lea
in
sub
mov
popf
mov
sub
lret
and
cwtl
pushf
pop
pop
nop
xchg
add
pushf
xchg
mov
cmp
xchg
scas
stos
mov
dec
push
pop
xchg
leave
imul
mov
test
ljmp
mov
stos
stc
or
xchg
sbb
mov
pushf
push
je
ljmp
out
hlt
xor
stc
js
add
aaa
rorb
mov
cmp
or
add
mov
jae
out
mov
lret
xchg
aas
sbb
mov
ds
es
cmp
sahf
inc
pop
cmp
pop
jmp
arpl
jbe
push
clc
leave
jg
xor
sub
jnp
cmp
mov
jmp
lcall
jp
loope
mov
mov
and
jns
push
cmp
and
adc
test
out
inc
add
mov
add
mov
testb
jge
cli
fucomp
xor
jne
dec
push
push
push
xchg
ret
mov
xchg
pop
push
loop
lea
jecxz,pn
adc
adc
mov
movzbl
insl
dec
push
jno
pop
sub
sti
xchg
sarl
mov
pop
mov
cmc
andl
mov
cmp
fidivl
jmp
outsb
pop
jle
negb
adc
jg
pop
ret
mov
jge
in
inc
push
mov
xor
sub
pop
cltd
cmp
ljmp
add
icebp
lods
and
pushf
jae
addr16
call
jecxz
adc
or
inc
sub
sub
sub
repnz
add
inc
push
into
sbb
mov
repnz
pop
jo
cmp
aas
mov
add
sub
subl
cmpsb
xor
adc
ds
push
cmp
mov
ret
aas
cwtl
jle
push
adc
out
cmc
add
and
jmp
icebp
daa
cmp
or
or
sahf
out
or
adc
dec
call
dec
addr16
aam
pushf
ret
inc
xchg
and
leave
loope
xchg
rclb
push
insl
hlt
mov
sub
mov
test
jb
jl
jp
out
jg
mov
lea
adc
push
pop
nop
push
mov
in
test
in
lock
es
test
sub
xor
lret
in
add
sbb
pusha
arpl
test
rorl
mov
lock
push
aaa
aam
pop
mov
call
sub
mov
imul
sbb
mov
jp
add
pop
aas
js
adc
adc
dec
pop
testb
push
pop
pop
add
xor
cli
add
fwait
adc
das
sbb
xchg
dec
insb
xorb
pop
cltd
leave
push
cmp
sbb
adc
icebp
xchg
pop
jno
inc
add
inc
ret
outsb
sub
dec
gs
scas
cld
xchg
cmp
lcall
mov
cmp
outsl
mov
scas
inc
cmp
mov
loope
shrl
cmp
das
push
lcall
call
jecxz
mov
lock
sub
je
adc
fildll
fistps
out
into
add
jp
mov
and
les
xchg
ud1
add
insb
cwtl
xchg
mov
sti
sub
imulb
jb
lods
add
movsl
int
pusha
in
sarl
adc
push
mov
movsb
and
jmp
jle
add
xlat
scas
dec
test
lret
iret
shll
lahf
dec
mov
mov
or
pop
arpl
call
mov
lds
jp
test
outsl
mov
xchg
add
scas
xchg
push
inc
in
jmp
cwtl
jb
int
pop
aas
inc
shl
nop
test
mov
cs
cmp
cmp
jge
outsb
xchg
cmp
or
sub
in
cmp
jns
push
jp
xor
dec
adc
loope
stc
jmp
mov
rorl
in
or
push
or
dec
jb
loope
popf
mov
outsl
fwait
sub
sbb
mov
lods
push
cmpsl
rcll
push
popf
dec
inc
push
clc
inc
adc
subb
or
xlat
pop
dec
lret
data16
movsl
and
pop
icebp
push
jecxz
push
cmp
ljmp
addr16
mov
xchg
insl
rcr
je
sarb
fcmovbe
xlat
sbb
push
in
cltd
faddl
pop
sbb
into
or
gs
fmull
pop
mov
fdivrp
cwtl
adc
lret
push
sbb
cmp
adc
jp
lahf
sbb
xchg
xorb
out
adc
mov
xor
cmp
imul
jle
dec
mov
sub
push
and
loopne
sbb
popa
hlt
and
fwait
or
ljmp
adc
ljmp
jns
mov
aad
nop
jmp
xchg
mov
int
push
mov
sbbb
out
aaa
pop
mov
jge
dec
cmc
in
in
inc
out
pop
xchg
enter
test
xchg
push
icebp
xor
pop
ljmp
dec
fsubr
or
mull
bnd
das
xchg
lods
das
xchg
cmpsl
cld
ss
pusha
inc
test
adc
jns
mov
ret
push
sar
cltd
cmp
sub
xchg
inc
mov
cmc
into
push
pop
sahf
popf
push
in
test
cs
and
push
ror
mov
adc
cmp
add
adc
dec
and
or
ret
cmpsb
pop
inc
icebp
leave
into
mov
in
or
addr16
xor
xlat
scas
fisttpll
mov
ret
pop
or
mov
adc
fwait
dec
mov
in
mov
add
pop
out
in
fdivr
dec
in
sbb
insl
and
mov
mov
fsubrl
or
insl
or
andb
iret
adc
mov
int3
mov
scas
dec
in
rclb
std
push
mov
ss
and
filds
or
inc
int3
imul
push
dec
in
xor
pop
cmp
inc
dec
cmp
addb
jns
lods
cltd
cmp
xchg
xchg
shl
mov
test
out
sbb
xchg
into
hlt
outsb
pop
xor
int3
repnz
pop
in
xor
jo
rcl
push
jmp
je
jae
mov
test
cmp
std
or
lcall
and
pusha
jp
cld
jb
push
test
add
adcb
and
xchg
das
mov
mov
je
push
sub
xor
hlt
mov
xchg
loop
outsb
pop
sbb
mov
cmc
sub
popa
out
fucomip
jnp
xchg
imul
hlt
fldl
int
int
mov
jb
adc
adc
out
out
jmp
inc
sahf
dec
xor
mov
xor
aam
push
dec
jne
xor
adc
cs
call
or
sub
jno
mov
in
js
push
cwtl
inc
add
adc
jne
das
add
jp
xchg
out
stos
xchg
fcoms
or
std
add
jl
pop
cld
pop
cmp
cltd
js
scas
push
outsl
inc
scas
je
and
daa
data16
movsb
fwait
inc
pop
pop
or
adc
adc
rorl
push
adc
xlat
icebp
pop
aad
scas
and
xor
jge
mov
sbb
xchg
fiaddl
lock
pushf
sub
mov
imul
pop
repnz
or
outsl
push
imul
ss
test
pop
add
mov
pushf
sbbl
stos
enter
stos
pop
mov
mov
cmp
les
js
mov
xor
adc
out
pop
cmc
cmp
out
je
mov
inc
or
mov
mov
or
push
jge
stos
clc
jmp
mov
add
dec
lock
in
and
out
cli
rorb
jno
inc
cmp
sbb
or
mov
movsl
pop
cmp
movsl
dec
push
lods
daa
out
mov
lds
jmp
cmp
fisubrs
xchg
fmul
dec
dec
mov
movsb
xchg
das
fisubrs
or
nop
in
mov
mov
cmp
fsubrs
add
fdivp
aas
insb
mov
shrb
les
int
rclb
cmp
test
cmpsl
jp
pop
pop
xchg
cli
xchg
dec
ljmp
sub
je
dec
es
js
inc
lcall
les
sahf
sub
nop
rcpps
and
xchg
rcll
xor
mov
dec
cli
mov
cwtl
fidivrl
ret
adc
pop
les
push
jmp
inc
inc
jns
or
mov
jae
addb
xor
into
push
aam
mov
cbtw
xor
rcrl
add
ficomps
aas
sbb
sub
mov
lret
cmpsb
adc
xchg
cmp
std
mov
ret
dec
les
imul
das
cmp
mov
mov
cmc
add
outsl
pushf
jno
arpl
xchg
jnp
jp
lods
lahf
fnstcw
shrl
cwtl
xchg
sahf
lret
iret
leave
push
mov
stc
pop
sti
xchg
int3
je
push
push
enter
pop
lcall
movsl
fiaddl
icebp
rol
nop
xchg
and
rorb
shlb
imul
xor
mov
and
rorl
add
push
aas
push
mov
imul
add
cmp
in
inc
adc
fcoml
popa
aaa
lret
scas
lret
cwtl
mov
es
xor
mov
movsb
xor
push
dec
sbb
xchg
jmp
in
adc
inc
pop
and
es
xchg
sbb
sub
loope
ljmp
mov
sub
adc
push
sbb
popf
jnp
pop
jge
js
jo
xchg
hlt
mov
into
in
aam
push
xchg
push
mov
jg
dec
pop
jne
mov
push
pop
les
push
pop
das
jp
stc
dec
xor
lds
lea
or
add
adc
cmp
call
imul
ds
pop
jns
mov
insl
pop
stos
xor
mov
out
push
xor
int3
leave
test
push
out
pop
ret
and
sbb
mov
pop
lock
in
je
jo
fisubrl
rcrb
imul
sbb
mov
xchg
hlt
gs
imul
fsubrs
inc
jecxz
and
pop
mov
pop
inc
lret
lods
popf
adc
jmp
and
into
dec
inc
push
rclb
pop
or
or
cmp
pop
mov
std
add
ljmp
mov
jb
popf
adc
push
add
cmp
ljmp
ljmp
xchg
lcall
aaa
add
sbb
xchg
push
sbbl
push
push
mov
push
mov
dec
mov
or
popa
pushf
push
ret
icebp
out
nop
mov
jbe
ljmp
mov
iret
mov
and
mov
sti
or
dec
push
mov
test
jnp
cltd
aaa
adc
pop
push
dec
ficompl
ja
pop
repz
loop
das
sub
or
shrb
aam
sub
xchg
mov
xchg
andb
hlt
dec
je
repz
push
outsb
pop
sbb
dec
mov
jb
stos
xor
xchg
lods
xor
paddq
aad
pop
lea
loope
jns
xchg
lcall
imul
ljmp
rcll
sbb
shrb
jb
jo
ja
push
sbb
inc
dec
je
sub
in
mov
xor
insl
les
adc
dec
mov
adc
cltd
shlb
jns
cmp
push
adc
mov
or
lods
lret
push
pop
mov
mov
and
or
and
sarl
ja
test
push
loope
shrb
mov
mov
inc
xchg
and
push
ss
xchg
ljmp
pop
or
inc
inc
mov
movsl
fistl
adc
inc
int
hlt
mov
test
sbb
cwtl
jb
movsl
pop
orb
push
pop
lods
sub
mov
pop
sarl
bound
das
fwait
jle
loope
das
mov
mov
roll
cs
fs
push
sbb
jle
inc
or
cmc
sbb
dec
loopne
scas
xchg
outsl
mov
aaa
and
cmp
xlat
mov
mov
ficompl
jl
pop
dec
hlt
in
leave
xchg
jne
setb
mov
jno
stos
out
fdivrp
cmp
mov
cmpsb
mov
arpl
ret
in
cmpsl
adc
stc
jbe
jecxz
mov
adc
jmp
mov
cmp
insl
adc
lea
jae
xchg
adc
mov
subl
sub
aaa
dec
in
xor
inc
pop
mov
in
cmp
mov
sahf
stc
outsb
lret
cmp
push
push
pop
push
adc
push
pop
mov
xor
mov
hlt
mov
loop
loopne
pop
aad
div
int3
js
lock
scas
jnp
mov
mov
arpl
out
xchg
xchg
jle
mov
dec
mov
xor
sub
stc
xchg
mov
int
sbbb
sub
mov
shrl
aad
lods
dec
add
popf
sbb
icebp
call
lret
jmp
push
mov
lea
lret
mov
adc
mov
xchg
data16
adc
sbb
dec
pusha
fwait
cwtl
mov
inc
xor
lret
cmp
test
inc
cmp
or
and
fists
jo
loop,pn
lret
mov
add
mov
and
mov
adc
or
loopne
sbb
xchg
test
cmpsb
fimuls
scas
lret
ret
sbb
add
lahf
rclb
mov
mov
adc
cmpsl
or
cmp
lahf
jmp
sbbb
stos
ret
sarb
mov
pop
int3
loopne
xlat
loopne
add
nop
inc
cmp
dec
sub
push
lcall
xor
mov
rcll
cmpsb
iret
xor
jne
lahf
push
mov
or
lea
inc
out
mov
mov
xchg
lahf
xchg
imulb
push
sahf
nop
fbstp
push
sub
in
inc
test
ds
push
rorl
gs
out
cmp
aas
mov
mov
pop
imul
cmp
cltd
scas
push
jecxz
mov
loopne
lock
testb
pop
das
cwtl
out
insl
lea
adc
shlb
imul
stos
cmp
std
jo
vmwrite
outsl
jnp
fildl
xor
adc
sub
inc
lret
in
negb
jg
roll
rolb
push
push
adc
dec
and
push
je
incl
sarl
mov
std
sub
lcall
test
push
test
cmp
or
jne
ja
xchg
fs
out
cltd
mov
fdiv
and
and
or
daa
sbb
rcrb
das
dec
add
dec
mov
mov
aad
ja
mov
fneni(8087
mov
xor
mov
movsb
push
xchg
lret
nop
movsb
sub
mov
rcrb
sbb
frstor
das
ds
shrb
dec
sub
popa
cmp
andb
fldt
fldt
or
movsb
pop
sbb
mov
jnp
cmp
icebp
rcll
xor
inc
xor
and
fwait
push
int3
sub
sahf
jae
into
or
adc
int3
push
cmp
mov
xchg
imul
out
sbb
into
fwait
rclb
movsb
leave
mov
add
mov
adc
add
movsb
outsb
push
add
push
mov
es
mov
cltd
test
dec
mov
push
inc
pop
xchg
jle
xchg
test
jg
imul
sarl
movsb
shll
push
xchg
xchg
push
mov
adc
out
decb
lahf
aas
sub
mov
jbe
test
jbe
or
jno
nop
sbbl
or
je
dec
adc
pop
dec
mov
push
pop
js
ljmp
dec
jp
sub
sub
inc
sub
dec
sbb
cli
in
insl
jecxz
pop
es
imul
cli
sar
sub
inc
hlt
push
je
xor
jg
sahf
aad
inc
in
dec
and
out
pushf
cmc
pop
mov
cld
sbb
icebp
sub
mov
notl
adc
fidivl
or
lret
rorb
pop
test
iret
jo
loop
outsl
add
inc
push
and
adc
call
pop
data16
add
sti
pop
popa
add
nop
in
or
pop
jns
dec
mov
fmuls
push
fistps
adcb
imul
mov
mov
mov
clc
sbb
sub
and
inc
jg
jl
ja
xchg
xlat
popa
mov
xor
loopne
dec
push
cmp
shl
inc
scas
repnz
shrb
sub
lods
fcompl
sbb
sbb
jge
add
out
push
pop
push
jns
cli
cmp
jl
std
icebp
outsl
stos
cmpsb
mov
mov
xchg
scas
insb
ja
sbb
push
jnp
pusha
sbb
dec
les
ds
sub
int3
push
hlt
decb
rorl
mov
adc
out
lret
or
shlb
lahf
dec
and
xchg
lret
ss
test
lret
pushf
pop
aam
jmp
jnp
pop
ljmp
dec
or
out
roll
jbe
js
jo
int3
gs
insl
sbb
pop
push
std
fnstenv
xor
icebp
pop
cmp
enter
cmp
movsb
popl
jb
cmp
arpl
loope
int
lods
ret
std
xchg
xchg
adc
das
out
dec
out
in
cmc
rclb
inc
xchg
das
inc
fs
sub
out
mov
push
cs
dec
inc
sub
add
add
ret
or
xchg
mov
int3
push
out
jecxz
es
xchg
adc
pop
les
dec
repnz
iret
push
iret
pop
bnd
mov
cwtl
std
cld
andl
fiaddl
and
clc
loope
movsl
iret
lahf
cltd
or
adc
das
cs
inc
push
xor
hlt
cmp
sbb
test
inc
ret
add
pop
pusha
mov
cld
cmc
push
push
jnp
outsl
insl
mov
jg
mov
int3
cmp
cwtl
popf
dec
lret
cmpsb
xchg
sub
adc
sbb
ret
outsl
cmp
push
cwtl
or
mov
in
shlb
mov
mov
push
jg
movsb
push
shrb
add
ss
push
jns
aad
add
sbb
and
pop
pop
punpckhdq
rorl
fsubrl
pusha
sbbb
pop
sub
fsts
adc
and
mov
xorl
mov
out
dec
dec
sbb
mov
addr16
cmpsl
and
test
sbb
pop
pop
jmp
mov
mov
inc
lock
addr16
jle
insl
stc
cli
pop
or
lea
in
push
mov
jne
cmpsb
cmp
mov
add
andl
or
cmpsl
imul
lret
sbb
jl
enter
icebp
lock
insl
gs
pop
ja
fs
or
xor
push
mov
es
inc
bnd
cltd
pushf
out
jo
mov
repnz
filds
pop
mov
rorl
mov
and
gs
stc
push
add
mov
hlt
and
out
loope
scas
popa
inc
or
push
lods
jo
cmpb
or
jne
pop
adc
jp
xor
inc
push
icebp
mov
sarb
out
leave
and
and
mov
out
sbb
pop
add
jecxz
lret
cs
adc
jb
xorb
call
out
mov
xchg
mov
inc
lods
inc
mov
jae
mov
adc
cmp
popa
aas
xchg
cwtl
stc
or
and
jecxz
ss
mov
jle
shlb
pushf
inc
sub
xchg
clc
repnz
ss
sbb
rol
inc
notb
cmp
sbb
js
sbb
mov
fistps
xchg
sub
hlt
mov
mov
int3
imull
pop
repz
or
and
cs
outsb
mov
push
sub
fs
test
and
push
pop
mov
les
push
inc
fdivl
cmp
je
xor
pop
mov
cmpsl
dec
sbb
lods
jg
cmc
pop
push
push
addb
push
push
outsb
mov
out
dec
lahf
outsl
gs
adc
dec
inc
xor
int3
dec
or
gs
loop
push
sbb
and
lret
xchg
mov
test
lods
cmp
loop
aam
repz
pusha
int3
scas
repnz
outsl
add
jp
pop
ljmp
daa
roll
rorb
dec
mov
xlat
minps
push
pop
or
daa
icebp
aad
out
jl
fistl
dec
mov
scas
jo
ret
pop
lret
inc
movsl
dec
pushf
fsub
mov
xchg
hlt
sbb
mov
mov
fsubs
push
lret
roll
sbb
movsb
add
cmpsl
xchg
mov
repz
test
mov
ja
xchg
and
fucomip
mov
push
fs
loopne
stc
fstl
mov
sub
mov
dec
sub
hlt
dec
fptan
inc
scas
mul
ret
push
xor
or
ret
sub
push
cmp
adc
mov
loope
and
stos
inc
pop
aaa
mov
lods
push
jge
jge
and
pop
xchg
scas
addr16
push
je
data16
aam
inc
cwtl
pop
inc
inc
inc
mov
lahf
aam
fmuls
rcrb
mov
xor
and
mov
insl
dec
xchg
add
xor
cmp
add
mov
repnz
xor
insl
or
insb
sti
stc
or
lods
ror
add
pop
jmp
insb
and
xchg
hlt
mov
xchg
ja
in
and
pushf
call
mov
mov
mov
sbb
call
pop
enter
adc
js
test
push
lea
divl
xor
xrelease
xchg
mov
arpl
add
push
xor
and
rorb
push
adc
xor
imul
in
call
mov
shl
ds
in
fdivr
xchg
sbb
add
inc
mov
push
xchg
pop
shlb
sti
jb
mov
mov
xor
shrl
cmpsl
inc
icebp
pusha
movsb
mov
stos
pop
add
and
push
adc
test
cmp
cmp
pop
cli
xlat
sub
mov
stos
add
cwtl
mov
fimuls
xor
ja
pop
inc
into
pop
mov
sub
inc
mov
mov
test
daa
hlt
xchg
add
mov
add
add
pushf
sbb
jmp
adc
mov
rcrb
ja
mov
loopne
fadds
aad
orl
sbb
faddl
inc
adc
sbb
jbe
adc
sbb
outsb
fisubl
fwait
xchg
sahf
inc
or
or
inc
mov
pop
push
das
arpl
add
lods
mov
outsb
cmp
mov
xor
loope
sbb
lahf
sbb
pop
adc
rorl
in
shr
lods
faddl
cmp
daa
pop
shlb
adcb
mov
xchg
je
jno
add
dec
popa
or
jmp
aam
pop
data16
lea
mov
cltd
js
lcall
in
cli
sub
aaa
add
sbb
out
dec
sti
push
push
push
dec
ffreep
ds
add
or
sub
push
mov
dec
sbb
loopne
in
mov
xchg
inc
inc
lods
std
je
std
pop
fld
js
push
movsb
pop
mov
arpl
and
adc
cmp
cld
shl
das
adc
stc
loope
pusha
arpl
ret
movsl
inc
jb
sub
arpl
mov
andb
mov
out
mov
pop
push
negb
adc
sub
lret
add
rcrl
jmp
jp
dec
mov
cmpsb
test
mov
sarb
fwait
insb
daa
popf
jno
cmpsl
out
push
lods
fbstp
inc
addr16
add
pushf
sarl
mov
jo
adc
xchg
fldl
xor
mov
jae
out
mov
add
mov
das
std
push
mov
in
rclb
push
lret
sahf
jno
outsl
popf
loop
out
in
cmp
lds
push
call
loopne
out
add
inc
ret
mov
bound
adc
xchg
iret
xor
inc
test
fwait
jno
and
stc
cmp
xchg
sbb
fs
imul
mov
cmp
inc
mov
push
or
imul
sarb
pop
xchg
rclb
rolb
push
out
lods
pop
xchg
push
mov
mov
cmp
into
pop
lcall
mov
xchg
sub
sbb
and
xlat
bound
sbb
leave
test
pop
xchg
mov
out
jb
sub
mov
insl
push
sahf
stos
xchg
js
sbb
insb
sbb
imul
add
mov
cs
dec
stos
ds
mov
hlt
out
xchg
xor
out
dec
outsl
int3
xchg
fisttps
pushf
dec
push
lret
js
movsb
fmull
jb
inc
scas
cmpsl
lock
hlt
push
pop
xor
push
hlt
inc
enter
int3
out
sub
iret
loop
nop
or
add
mov
fs
ljmp
add
xchg
jle
mov
addr16
or
movsb
push
ljmp
das
jge
out
or
xor
mov
cmp
push
pop
jge
adc
mov
mov
jo
jmp
xchg
push
mov
cmc
mov
ljmp
lahf
mov
lcall
mov
push
cmp
pop
adc
cli
jle
das
test
int3
test
stc
testb
movsb
pop
out
push
pop
sub
dec
rcr
stos
sub
jl
sbb
test
and
call
mov
ja
jle
push
push
cld
push
adc
pop
inc
mov
aad
sbb
add
shrd
lcall
mov
rol
inc
fsts
fwait
inc
rsqrtps
into
cmp
ret
out
jne
loopne
sbb
inc
jge
and
lcall
xor
std
xchg
adc
enter
subl
or
aaa
sbb
lods
sar
idivb
mov
into
sbb
sub
leave
das
lret
inc
dec
imul
mov
and
iret
xchg
pop
push
and
stc
inc
cmp
adc
ficompl
add
jmp
mov
push
xor
or
dec
mov
adc
mov
push
insl
xor
loop
data16
sarl
or
popf
or
cmp
int
loope
xchg
call
add
add
sbb
aas
mov
mov
push
and
cmpsb
movb
aad
enter
dec
mov
clc
dec
ret
pop
push
ljmp
sbb
push
push
sbb
xchg
xchg
pop
fmull
imul
sti
xchg
and
sub
xor
les
push
and
in
mov
sub
ljmp
xchg
pusha
xor
mov
idivb
jno
sahf
aas
test
rclb
mov
or
xor
mov
mov
xlat
mov
cmpb
jae
push
push
adc
dec
fiaddl
out
xlat
mov
push
cmp
jge
ret
xchg
pop
in
cltd
aam
jl
dec
mov
or
sbb
ds
dec
xchg
sbb
inc
pop
cwtl
cli
push
xor
xchg
ljmp
out
xor
loope
xchg
les
sub
mull
adc
cmp
add
sahf
cli
and
rcrb
subb
xchg
sahf
ret
push
xchg
push
add
insb
mov
jp
mov
test
test
jns
lock
and
and
push
faddl
sbb
sti
mov
data16
add
push
sub
in
mov
out
push
inc
outsb
lods
adc
outsl
mov
cwtl
sti
in
stos
xor
push
push
jl
cli
cmp
push
sarl
loope
lds
xchg
data16
adc
lods
dec
leave
adc
inc
mov
lds
adc
dec
lds
adc
xor
mov
icebp
mov
jnp
mov
pop
pop
cmpsl
addr16
jg
aad
das
jmp
or
fsubl
mov
mov
fwait
xchg
jno
cmc
lcall
add
dec
push
push
cli
cmp
fldl
dec
sarl
push
dec
lea
push
mov
ret
and
mov
popf
nopl
outsb
sbb
roll
xchg
push
enter
jl
dec
pop
mov
test
dec
xchg
and
and
xor
out
or
je
lret
sub
and
cmp
inc
dec
xchg
outsb
xchg
add
mov
push
jl
cmc
mov
xchg
ficompl
cwtl
and
jns
cwtl
out
push
clc
push
fisubs
int
sub
cmp
add
mov
jmp
lods
in
jg
sti
cmp
fcompl
ljmp
insl
aad
stc
je
loope
adc
arpl
mov
and
testb
insb
mov
sub
inc
pusha
xor
aas
mov
lods
jne
lret
icebp
je
push
mov
inc
incl
xlat
rep
pop
ds
or
push
jbe
hlt
pushf
sub
aas
ficoml
sarl
dec
xor
push
das
jb
es
sub
xor
popa
mov
mov
dec
jle
jg
cmp
call
in
ljmp
jo
stos
sub
cmpsb
pop
sub
mov
fdivrl
cmp
adc
cwtl
and
inc
push
es
push
xor
int3
out
testl
loop
sub
inc
add
push
push
loope
jo
iret
rcrb
and
rcrb
aaa
dec
sub
fldenv
mov
lock
out
inc
mov
in
std
mov
inc
adcl
mov
cmpsl
loop
adc
xchg
xchg
in
cltd
and
fsubrp
out
test
sub
jle
repz
ss
sti
or
add
clc
mov
dec
stc
xchg
bound
or
insl
mov
mov
rcll
dec
mov
xlat
ds
repz
xlat
pop
jecxz
dec
xchg
cs
pop
xchg
push
add
xchg
fldcw
jle
mov
dec
daa
and
out
cmp
and
shll
push
call
enter
push
rcll
jl
shl
cmp
movsl
rclb
sub
xor
mov
arpl
ficoms
xchg
es
push
dec
xor
cld
mov
push
cmp
xchg
mov
hlt
mov
and
push
mov
cmpsl
dec
cmp
or
jnp
jmp
mov
inc
sbb
scas
mov
sub
dec
je
jnp
jns
jge
push
or
arpl
inc
lea
sub
and
test
arpl
mov
scas
enter
aas
repnz
jb
fstpl
movsb
and
aas
jns
xchg
andb
rclb
xchg
hlt
mov
pop
jecxz
js
sub
mov
jno
dec
movsb
loop
inc
aas
pop
sbbb
insb
lahf
jg
js
daa
jns
mov
mov
xchg
xchg
andb
push
scas
sub
cmp
pop
adc
adc
lcall
out
cltd
ljmp
pop
mov
cmp
clc
movsl
out
jb
sahf
lret
decl
push
lahf
cs
dec
push
xor
fs
cmp
add
adc
in
negl
and
sbb
pop
push
and
jg
adc
dec
sarb
fwait
inc
xor
mov
fcom
jg
push
pop
mov
scas
loopne
xchg
imul
int3
fistps
pop
sbb
add
mov
sbbb
das
mov
fisubl
ss
in
mov
jl
aaa
jnp
in
in
cltd
jge
mov
cli
pop
mov
int
shl
lea
xbegin
imul
out
xchg
sub
push
hlt
call
and
cmpsb
mov
mov
adc
cmp
bound
pop
lret
pop
movsb
shrb
cmp
mov
sahf
inc
ret
pop
mov
xchg
mov
mov
sbb
xor
adc
in
mov
lds
psubsw
rcr
gs
xor
mov
out
into
hlt
arpl
lods
popf
add
cmpsl
fwait
jg
xor
cmp
test
xor
inc
loope
pop
mov
imul
mov
xor
dec
movsb
adc
sub
scas
jle
fs
inc
je
sbb
xchg
push
sbb
jb
adc
or
xlat
dec
xchg
scas
out
cmp
mov
std
sbb
aad
pushf
loop
aad
mov
jecxz
push
cmp
sub
loopne
leave
leave
in
cmp
fistl
shl
icebp
push
insb
shrl
pop
out
fisubrs
mov
inc
imul
dec
loop
sti
lcall
push
adc
leave
xchg
aas
mov
lcall
ljmp
xor
mov
insl
sub
cmp
sarl
cltd
sub
inc
mov
push
stc
rol
fld
pop
decl
jge
cwtl
push
jmp
gs
divl
je
push
adc
movsl
mov
mov
cmpsl
shrl
negl
mov
sbb
fstps
sbb
loope
mov
push
and
jge
pop
pop
push
xor
mov
rol
xchg
jmp
lret
dec
pop
hlt
shl
dec
jmp
fwait
push
push
popf
aaa
xor
sub
pop
movsl
xchg
pop
cld
cmpsb
out
cli
sti
pop
push
sbb
frstor
push
das
push
ds
dec
test
stos
les
aad
lea
sub
imul
movsb
jecxz
add
call
pusha
cli
notb
inc
ret
sub
jle
aam
inc
mov
mov
sub
mov
cmp
insb
push
pop
add
mov
clc
lock
mov
dec
inc
xchg
mov
test
mov
or
or
in
aaa
add
mov
clc
cld
mov
jbe
pop
jle
or
add
mov
in
pop
repz
sub
dec
iret
out
ss
lock
sbbl
in
add
jno
test
mov
push
in
mov
jg
mov
out
jge
dec
fsubrs
inc
add
aad
xchg
out
movsl
mov
ljmp
loopne
pop
jnp
mov
jg
out
xor
jmp
push
andl
fmul
pop
leave
leave
insb
pusha
insl
pusha
add
sub
leave
fs
lcall
jle
cwtl
imul
mov
xchg
lods
movsl
out
pop
pop
jle
dec
xchg
dec
fsubs
or
xchg
or
movsl
xchg
xchg
pop
adc
mov
mov
sbb
mov
adc
shrb
into
cmp
sub
mov
add
xor
orb
or
imul
daa
out
push
add
lahf
ss
sbb
push
pushf
mov
pop
insl
insb
aas
mov
fstp
cmp
outsl
incl
bound
inc
mov
add
movsl
pop
jg
or
mov
push
scas
icebp
clc
fistpll
xchg
repnz
in
cli
cmp
jnp
sti
sub
xchg
mov
in
pop
xchg
test
cmp
cmc
dec
mov
or
stc
arpl
ret
imul
out
mov
insl
filds
and
out
dec
adc
pusha
insl
jo
add
add
sti
pop
jp
adc
clc
fistps
vphaddw
cmpl
push
mov
xchg
dec
and
hlt
sbb
add
add
cli
pop
insl
stos
sub
jns
jp
xor
cmpsb
mov
xchg
stos
lret
aad
cs
mov
dec
stos
cmpsb
aas
jp
inc
and
or
push
stc
call
imul
dec
mov
es
inc
push
mov
aad
dec
mov
push
push
mov
xor
mov
mov
or
cmp
fwait
les
and
pop
sub
xor
xchg
jp
popf
std
jecxz
mov
iret
scas
xor
addr16
sahf
sahf
shl
add
hlt
sahf
mov
dec
or
std
inc
test
or
fbstp
pop
push
adc
ds
je
test
loope
shrl
mov
in
test
aam
call
cltd
sub
fisubs
and
test
cmp
push
add
adc
jmp
shlb
sub
loopne
and
ds
adc
imul
cmp
push
mov
scas
pop
mov
and
xchg
mov
sub
mov
repz
dec
add
aam
std
mov
fnstcw
sbb
inc
mov
scas
xlat
enter
ljmp
cmpsl
jae
lahf
and
in
fs
pop
lock
ljmp
shlb
push
mov
ja
clc
or
movsl
int3
in
cmp
pop
lock
cld
sbb
xchg
xchg
out
jb
shl
ret
or
lock
sub
test
dec
sahf
xor
repnz
inc
xchg
pop
test
add
xchg
mov
pop
or
sbb
loop
das
jo
sbbl
xchg
jae
into
or
clc
mov
fs
int
cwtl
aas
clc
cs
cli
add
aam
jmp
xchg
adc
mov
adc
ds
push
cmp
es
leave
sub
push
push
mov
mov
test
popf
mov
xor
and
push
and
lock
inc
push
cmp
mov
in
imull
xor
test
xchg
mov
dec
xchg
and
scas
jg
int
stos
dec
lea
mov
out
ds
inc
dec
mov
jmp
js
ret
sahf
nop
jne
mov
jmpw
in
xor
imul
imul
add
push
cs
ret
mov
pusha
test
mov
idivb
push
or
sti
and
imul
pushf
pop
sti
jl
fisubs
adc
mov
add
lods
inc
mov
xor
aaa
inc
inc
or
stos
sbb
push
inc
shll
sub
xchg
add
push
xlat
mov
bound
lret
push
adc
adc
lds
clc
pop
gs
xor
mov
lret
or
repnz
add
lods
pop
jbe
dec
lods
lods
push
test
or
xchg
and
fmuls
jecxz
stos
push
idivl
push
incb
ret
or
xchg
pop
xlat
sar
add
jae
xchg
jae
mov
sar
sbb
sub
scas
mov
jnp
push
xchg
mov
js
jmp
dec
push
sti
es
fcmovnb
sub
idivb
cmc
dec
pop
xchg
fsubr
or
sbb
cmp
popl
dec
mov
adc
mov
cmp
test
push
dec
sub
test
lods
lds
movsb
addl
stos
jb
scas
cmp
push
out
jne
jle
lods
mov
int3
sti
mov
xchg
loop
or
jbe
shll
inc
inc
sbb
mulb
lds
mov
in
xor
bnd
jns
testb
jle
mov
les
cmpsl
ljmp
push
out
lcall
lcall
mov
cmovae
pop
lret
xchg
lods
dec
or
push
pop
shl
imul
push
lret
dec
jns
inc
sub
scas
fists
in
adc
notb
fs
sbb
push
ret
clc
mov
sbb
insb
adc
clc
mov
in
xor
pop
cmp
lods
adc
lods
mov
dec
imulb
mov
xlat
arpl
xor
mov
rcl
pop
ss
hlt
jg
loop
xor
or
mov
pop
or
dec
pop
fnstsw
mov
sbb
cmpsb
stos
inc
xchg
add
jge
jb
mov
push
adcb
je
test
inc
mov
fstp
daa
pop
scas
bswap
aad
pop
push
lods
mov
lret
clc
inc
insl
mov
mov
sub
leave
inc
sbb
dec
push
inc
push
lds
jae
inc
push
cmpsl
cmpsb
add
lds
mov
pop
mov
sbb
aad
sbb
mov
lret
inc
jbe
out
cmp
aaa
mov
or
stc
xchg
inc
movsl
cld
stc
fwait
movsb
adc
pushf
inc
test
inc
cs
scas
sbb
dec
pop
sub
adc
in
loop
dec
mov
bound
dec
xchg
mov
add
sbb
outsb
xlat
or
rcrl
das
or
push
lds
sti
or
shr
or
mov
daa
push
push
out
ret
adc
sbb
or
cmp
add
cmp
inc
jmp
push
fcompl
xor
or
mov
into
inc
or
cld
cmp
xchg
sub
pushf
inc
leave
dec
aaa
mov
lahf
cmp
lods
push
mov
divb
or
int
mov
and
xchg
or
sbb
xchg
push
gs
add
jecxz
imul
lret
int
inc
stc
test
out
dec
add
sub
out
mov
aad
cmc
lock
mov
popf
rolb
xchg
sahf
fldcw
and
out
pop
or
mov
adc
clc
adc
fs
outsb
imul
stc
adc
push
cltd
jle
fmull
push
fimuls
stc
dec
and
stos
dec
idivb
pop
lods
inc
fstl
push
subl
jmp
inc
xchg
stc
mov
ja
add
rorb
mov
mov
mov
outsl
andb
xchg
jmp
and
pop
or
xchg
push
data16
and
xor
into
movl
mov
cwtl
sub
iret
push
mov
fdivr
mov
xor
lods
leave
pop
inc
cs
and
cmp
flds
and
sahf
xor
leave
jno
les
pop
push
push
ja
and
mov
ja
jne
or
push
inc
push
cmc
mov
dec
push
ss
pusha
repnz
movsb
jne
test
les
pop
jo
test
lds
cmpsl
iret
jge
jecxz
jl
test
fsubs
das
xchg
sbb
lcall
or
push
addr16
adc
jb
or
aas
nop
lods
jb
fadd
pop
push
pop
imul
push
pusha
fidivs
lea
mov
fs
rorb
xchg
dec
pop
jnp
out
and
dec
push
pop
fsubrl
mov
popa
dec
push
in
sbbl
sbb
xor
stos
sbb
fucomi
add
data16
pop
inc
push
push
jnp
and
ret
sub
add
jbe
jae
sti
ss
movsl
jne
push
sbb
imul
jecxz
scas
test
ret
cs
xchg
clc
js
jb
mov
mov
ljmp
and
jecxz
icebp
or
jecxz
fsubl
sub
push
adc
and
sub
inc
lret
shrd
fisubs
xadd
push
sbbb
or
mov
push
insl
out
lock
aad
sarl
into
pushf
mov
jbe
shrl
dec
pop
lds
mov
xchg
negl
imul
mov
cmp
xor
inc
lret
dec
call
or
cmp
ljmp
fs
jge
int3
fiadds
movsl
lds
imul
enter
push
mov
cli
lret
sarl
push
movsl
in
mov
xchg
mov
js
push
scas
lods
lea
js
addl
sbb
xor
rcl
cmpl
and
rorl
push
rcr
test
jne
mov
dec
mov
jecxz
aad
js
addl
outsb
loope
or
push
rolb
cmp
adc
push
mov
or
aad
mov
and
cmp
adc
cmp
add
mov
mov
xor
dec
sti
fwait
and
in
outsl
mov
aaa
dec
jo
cli
or
cmc
add
mov
ret
dec
push
inc
adc
pop
into
fdivs
jecxz
rolb
mov
and
ret
mov
adcl
jecxz
in
es
adc
xchg
sub
fwait
dec
pop
and
jnp
dec
stc
jbe
rolb
sub
or
mov
add
pop
bound
fs
aad
lock
sub
arpl
mov
xchg
add
loope
int3
and
mov
outsl
sbb
mov
fidivs
lds
lahf
fdivrs
cltd
mov
jle
data16
xchg
xchg
int
push
xlat
fwait
xchg
cmp
push
in
aad
in
adc
lret
cltd
add
jp
inc
sbb
into
xlat
dec
push
lret
mov
sub
pusha
jecxz
cmpsl
fcmovu
jns
sbb
cmp
push
inc
cmp
imul
out
cwtl
sub
sub
adc
iret
add
mov
lds
mov
je
mov
gs
sub
xchg
add
sub
idivl
or
add
bound
jne
jno
xlat
add
cmp
adc
cmp
pop
dec
dec
mov
xlat
adc
subl
outsb
mov
insb
xor
lret
rolb
outsl
cmp
sbb
cwtl
cli
ficoms
xchg
inc
popf
ficoms
aad
and
sbb
fiaddl
js
loop
adc
fwait
testb
mov
nop
push
in
ds
sub
lods
mov
fs
sti
ror
sub
in
add
or
push
out
jo
sti
jmp
push
xor
xor
xchg
add
inc
icebp
in
sbb
movsb
xchg
and
mov
rolb
cld
std
sbb
or
icebp
mov
xor
push
lock
adc
fnstenv
adc
mov
jmp
pop
mov
jmp
stos
jecxz
cmpsl
aam
xchg
aaa
sbb
dec
jmp
stos
mov
out
aam
ss
mov
data16
ss
xor
stos
jl
repnz
stc
inc
xchg
sbb
xchg
fwait
add
mov
mov
sub
xor
jne
or
jnp
scas
jge
mov
push
addl
xchg
sbb
pop
jns
into
jmp
sarb
mov
cs
sti
mov
inc
cltd
filds
cmpsb
mul
sub
test
pop
or
jle
cwtl
lods
jecxz
xchg
lcall
aas
ret
dec
mov
arpl
loope
mov
mov
jne
mov
fistl
sub
pop
daa
mov
mov
cli
cmp
jmp
pushf
sub
aam
stc
push
lods
pushf
ljmp
sbb
sub
aaa
shld
imul
add
sub
mov
mov
test
push
xchg
fsubrs
lods
call
arpl
mov
ja
xor
mov
push
scas
mov
xchg
mov
je
xchg
xor
shrb
mov
aad
clc
add
in
push
repnz
movl
jge
lock
mov
cwtl
lret
jecxz
fld
and
lahf
cmpsl
mov
mov
jne
mov
adc
sti
cmpsl
cmpsb
xchg
stos
lcall
add
loope
jge
mov
jnp
push
pop
into
popf
pop
decb
push
divl
inc
push
lods
lods
mov
and
popf
sbb
pushf
lahf
adc
lret
outsl
dec
add
xchg
pop
cmp
mov
icebp
hlt
sarl
ss
popa
insb
mov
jge
in
shl
ljmp
ds
inc
jg
and
fsub
icebp
fnstenv
fstps
test
je
popa
cmp
inc
fistps
xor
push
adc
jmp
outsl
enter
push
ljmp
ret
push
call
push
xorl
dec
fstpl
push
int3
sub
add
xor
test
mov
pop
dec
xor
idivl
add
es
mov
dec
cmpsl
push
adc
and
dec
cmp
daa
into
inc
mov
sbb
xchg
enter
popa
push
cmp
mov
pop
push
mov
fucomip
mov
nop
cmp
in
pop
mov
sub
and
rcl
imul
push
xchg
fxch
std
adc
mov
jbe
cmpsb
push
or
and
mov
cmp
and
jnp
mov
ret
movsb
outsl
push
insl
xor
roll
sbbl
pop
sbb
andb
int3
imul
xor
int3
pop
add
lret
push
mov
repnz
scas
fisttps
dec
btr
inc
movsl
test
cmp
clc
das
add
arpl
ja
test
nop
aam
ret
fsubl
add
lock
iret
sub
lret
test
pushf
mov
aas
int
xchg
ret
ds
push
pop
rcl
sbb
push
sbb
pop
inc
adc
or
cli
push
ljmp
pop
xchg
and
adc
fimull
loop
and
ljmp
push
push
in
lods
sahf
mov
adc
jns
int3
mov
lea
dec
inc
outsl
mov
in
cmp
cwtl
out
mov
bnd
scas
inc
pop
xlat
out
push
mov
sbb
pop
xor
adc
stos
mov
mov
sbb
jo
and
imul
mov
fisttpll
mov
lods
and
daa
lock
xor
ss
adc
es
adc
test
cmp
sar
or
movntq
lods
mov
fst
mov
mov
test
ficompl
les
sbb
test
dec
mov
out
and
inc
outsb
dec
daa
pop
cltd
xor
ljmp
add
mov
add
cltd
out
add
movsl
nop
faddp
ljmp
and
ret
pop
jns
out
shlb
imul
repz
jnp
cmp
mov
bnd
inc
pop
mov
push
jno
dec
test
ja
add
push
scas
xor
cmp
ret
iret
fdivs
xchg
outsb
dec
shl
mov
xchg
cmp
sbb
nop
lock
dec
test
mov
pop
mov
fsts
push
icebp
inc
outsl
pusha
mov
lcall
inc
or
je
lahf
adc
jp
ds
add
aas
cs
inc
lock
mov
inc
out
jecxz
lods
jl
out
add
cmp
mov
out
testb
and
jnp
jb
mov
and
mov
or
mov
fisubs
push
cmp
fsubrs
repnz
je
xor
jge
xchg
cmpsb
jmp
lods
adc
push
lods
xchg
fdivl
cmc
xchg
cmp
xchg
mov
mov
cmpsb
jbe
mov
fistps
xchg
inc
mov
add
sbb
and
fucom
cmp
into
inc
mov
and
push
inc
push
jg
cs
lret
jmp
push
int
jae
insl
in
es
inc
popa
add
ljmp
clc
push
dec
inc
mov
insb
test
aad
repnz
xchg
out
jne
lea
push
and
adc
subb
cld
jne
xchg
andb
pop
addr16
testl
or
out
add
jp
mov
sbb
cwtl
mov
cli
lods
dec
add
add
adc
lret
insl
adc
jnp
icebp
fisttps
and
inc
sbb
xor
testb
xchg
jmp
jp
add
gs
and
cwtl
test
and
pop
mov
cmp
fcmovbe
lods
jecxz
xchg
rcrl
shrb
outsl
mov
leave
jb
outsb
aam
lods
fcoms
movsl
shrb
hlt
lret
filds
aad
or
adc
loop
js
imul
xchg
xor
js
je
mov
mov
dec
shl
cmpsb
movl
dec
jp
clc
mull
fabs
push
push
mov
pop
test
lods
shlb
sbb
fcmovb
xor
or
jnp
orb
jmp
jns
out
pop
out
mov
mov
ret
xor
outsl
cmp
in
es
sbb
mov
scas
xor
fstl
cmp
incl
loop
pop
ret
xor
lret
and
cmpsb
repnz
pushf
inc
pop
scas
jmp
ret
xor
xchg
or
addb
cmp
aaa
mov
insl
outsb
xchg
mov
inc
and
cmp
stos
fmuls
jb
sub
push
cltd
adc
lret
mov
xchg
insb
mov
scas
sahf
push
je
jmp
out
xchg
fwait
or
lcall
cmpsb
rolb
mov
push
xchg
call
cmp
mov
dec
cmpsl
sub
xor
xchg
fnstsw
mov
js
aam
cmpsl
xorb
ret
dec
enter
and
xchg
add
clc
dec
pause
jmp
nop
out
clc
stos
scas
add
mov
push
aam
test
push
scas
cld
ss
xchg
jmp
xchg
sub
test
lret
mov
cli
stos
sbb
and
icebp
jnp
or
cli
iret
pop
or
lock
xor
adc
jg
mov
data16
and
adc
sbb
inc
cltd
push
in
push
mov
das
add
fwait
popa
jb
in
cmc
movsb
test
inc
lret
fsubrl
sbb
add
sub
outsl
mov
inc
int3
push
mov
loop
lods
jb
rolb
cmp
mov
pushf
pop
aad
lock
add
cmpsb
es
cmp
mov
inc
push
dec
or
insb
ds
mov
lcall
dec
loop
xchg
or
std
pop
add
addr16
lods
jecxz
movsb
insb
dec
add
mov
pop
jecxz
jecxz
outsl
mov
mov
hlt
repnz
scas
addr16
loopne
xchg
sti
addr16
lock
test
sub
push
dec
int
mov
or
pop
call
dec
insl
xchg
sbb
dec
dec
inc
adc
leave
shll
jmp
inc
fs
add
sbbb
pushf
lahf
mov
lods
mov
push
inc
xor
bnd
pop
into
pop
cwtl
std
clc
mov
mov
sbb
xchg
mov
in
push
lods
xchg
sti
mov
push
sbb
dec
push
cmp
lret
subl
mov
sub
mov
and
das
cs
fldt
ret
call
adc
arpl
dec
frstor
stos
adc
rcrl
push
lahf
lods
jae
push
outsl
je
inc
stc
outsl
add
ret
daa
ret
xchg
sar
stos
imul
sub
inc
arpl
clc
mov
and
jns
xor
cld
cs
mov
mov
inc
or
mov
lods
dec
xchg
push
xchg
or
dec
lret
mov
mov
lcall
mov
dec
ss
or
sbb
fsubs
and
inc
mov
add
aaa
mov
out
cmp
popf
mov
int
push
mov
dec
es
lods
mov
xchg
cmp
mov
mov
jp
sarb
and
sub
xchg
movsl
aam
aad
and
ficompl
cmpsb
aam
sub
aam
lret
fsubr
cmp
xchg
addr16
sbb
cmpsl
adc
sbb
jg
push
inc
mov
cmpsb
in
mov
flds
movsb
addr16
fwait
push
pop
or
fidivl
rcr
fistps
xchg
stos
enter
test
jb
and
aas
addl
mov
rol
ljmp
inc
sbb
fists
pop
and
shlb
push
loope
mov
int3
xor
aad
in
sub
out
adc
and
and
cld
outsb
cld
xlat
pop
mov
stc
bound
daa
jae
jmp
mov
mov
inc
mov
mov
pusha
mov
out
pop
inc
das
lds
jg
sub
sahf
jns
dec
out
mov
rclb
cmp
out
aam
loope
outsl
mov
jp
lret
inc
mov
ja
sub
lret
cmp
dec
xchg
inc
pushf
adc
or
push
and
movsb
jbe
add
and
stc
sub
insl
fidivrs
test
aad
rorl
sub
or
divl
or
sbb
lods
adcl
push
push
notl
xor
push
xchg
js
add
xchg
mov
mov
mov
push
cmp
in
xchg
jo
lods
inc
and
and
push
lahf
inc
inc
popa
das
xor
insl
pop
adc
add
sti
mov
ss
and
dec
cmp
test
push
mov
sbb
cmpsb
sbb
xor
mov
adc
push
pop
sti
adc
dec
arpl
xchg
fisubs
xor
je
adc
lcall
and
adc
addl
flds
movsl
ret
pop
dec
push
imul
push
dec
test
adc
add
aaa
mov
pop
cmp
and
movsl
xchg
mov
pop
xchg
notl
scas
jb
shrb
lea
push
movsb
leave
sti
jo
add
jl
dec
push
mov
ds
cmc
xchg
or
or
jbe
pop
adc
ljmp
mov
inc
lds
rcrb
adc
pop
sbb
inc
mov
pop
cmp
imul
push
push
aam
stos
popf
cmp
leave
sbb
shrl
nop
or
cmc
adc
lahf
xchg
fisttpll
and
push
cmp
popf
dec
enter
or
fmul
pop
mov
mov
jbe
jns
xor
fstp
ficompl
inc
dec
sub
inc
stc
add
pop
ret
xchg
push
into
call
scas
and
and
shrl
js
ret
fidivrl
mov
xchg
sub
cmpl
xchg
pop
cmc
ret
pop
or
nop
add
sub
cmp
add
mov
inc
adc
push
jge
movsl
cmc
fistl
pop
jmp
enter
and
fs
das
push
push
repz
mov
sub
cwtl
addr16
jecxz
loopne
shrl
dec
xchg
rolb
pop
in
xor
adc
fwait
jg
xchg
xchg
cmp
inc
mov
push
pushf
dec
enter
fildl
outsl
fisubrs
push
jb
pop
cmp
scas
loop
scas
call
ficomps
push
insb
push
das
fwait
and
push
sub
enter
cmp
lret
pop
imul
inc
mov
pop
adc
lods
adc
dec
and
fnstcw
arpl
xor
or
sbb
or
dec
and
ss
roll
fstps
out
mov
mov
mov
decl
mov
push
cmpsb
dec
pop
hlt
mov
decl
iret
cld
pop
mov
lret
gs
cli
push
fsts
fmuls
jnp
cwtl
xor
xchg
lcall
xchg
and
pop
mov
ret
push
mov
scas
push
dec
mov
pop
notl
fcoms
inc
movsb
jmp
dec
xchg
xor
les
cmp
mov
test
fdecstp
and
sub
lcall
sbb
push
ja
jno
and
cmpsb
jmp
js
bound
dec
out
push
in
dec
mov
dec
stos
jbe
inc
xor
add
int3
les
mov
sub
and
inc
mov
mov
movhps
mov
fbld
std
lods
arpl
sbb
push
rolb
mov
daa
inc
bound
pop
je
dec
faddp
loope
fcmovb
push
push
push
and
inc
jle
mov
push
xor
lahf
int
aad
enter
xor
adc
push
push
jecxz
clc
inc
cltd
sbb
lds
mov
or
pushf
cltd
testl
rorl
ds
lds
pop
shll
aad
daa
mov
movsl
jno
mov
xor
out
jb
adc
aad
sbb
dec
andl
push
push
pop
add
lock
cli
mov
sub
ret
adc
xlat
scas
roll
fstps
and
cli
jae
adc
mov
in
int3
jbe
addr16
stos
inc
out
pop
insb
leave
mov
mov
dec
mov
mov
out
cmpsl
and
and
fistps
mov
pop
out
lcall
xchg
call
sbb
mov
adcl
test
add
cmc
xchg
and
enter
and
movsl
inc
in
sub
inc
sbb
loopne
mov
mov
cmp
push
movsl
pop
les
test
repz
xchg
imull
icebp
add
pop
pop
leave
adc
push
xor
dec
scas
ss
ss
mov
pusha
out
in
cmp
cwtl
mov
icebp
sbb
out
adc
ret
pusha
out
fidivrs
xchg
mov
inc
mov
adc
push
inc
iret
inc
rcr
jbe
movsb
insb
jno
pushf
adc
test
sbb
xchg
pop
mov
test
cmc
scas
outsb
fninit
outsl
sub
dec
adc
enter
into
inc
stos
daa
loopne
insb
adc
int
cmpsl
and
add
out
mov
adc
mov
cwtl
dec
pop
cli
or
and
add
mov
jbe
scas
adc
sbb
push
push
xorl
shl
push
sub
jmp
pop
sub
dec
arpl
cmp
ss
cwtl
mov
mov
dec
mov
xor
enter
sbb
sbb
pop
pop
ret
pop
mov
and
and
push
sbbl
orb
stos
sti
popf
mov
cmp
fiadds
inc
out
push
and
mov
cmpsl
add
xchg
in
ja
movsbl
adc
jle
fcmovb
and
test
stos
mov
inc
stos
lods
je
popf
jo
mov
pop
push
lods
mov
lea
pop
xchg
pop
and
gs
mov
dec
pop
ficoml
mov
jo
les
pushf
imul
push
cmp
sub
mov
daa
and
mov
mov
roll
iret
lock
test
and
gs
mov
jmp
and
cmpsb
insl
jbe
pop
mov
cmp
cmp
lret
sbb
mov
mov
sub
stos
in
dec
pop
insb
popa
int3
outsb
push
or
mov
out
movq
mov
cmp
pop
jb
daa
aas
mov
es
jmp
popa
lods
sub
or
imul
push
clc
dec
sbb
mov
jnp
inc
pop
cmc
inc
jp
popf
leave
icebp
arpl
pop
mov
jge
daa
xchg
push
mov
repnz
lcall
mov
jne
cmp
fcomp
lods
jmp
xor
or
adc
shll
pop
xor
fs
sarb
sbb
xor
push
adc
std
mov
xchg
js
arpl
movsl
jmp
or
jbe
add
mov
out
popa
jg
pop
xchg
lods
out
and
out
jg
or
pop
enter
jno
inc
dec
test
lock
cli
nop
mov
xor
rcll
pusha
lock
arpl
xchg
adc
test
fwait
sbb
sub
sub
ret
fs
mov
sahf
call
xchg
jmp
add
daa
xor
xor
jle
and
sub
rcrb
inc
push
js
pop
mov
cli
out
cli
cld
aas
xchg
sub
mov
in
sbbb
pop
cmp
lods
out
cltd
cmpsl
jnp
repz
in
vminss
jle
shlb
mulb
push
mov
mov
sbb
inc
inc
es
add
inc
sub
sahf
pop
or
nop
or
loop
in
cmp
icebp
inc
lret
adc
popf
fidivrl
scas
dec
push
pop
ljmp
xchg
popf
jge
loopne
loope
sbb
xchg
pop
push
push
cmpsb
xchg
cmp
je
sub
cmp
pop
mov
sti
pop
xchg
loope
cmp
inc
scas
js
lcall
adcl
inc
scas
stos
and
bound
psubusw
inc
cmpsl
push
lcall
mul
cmp
mov
mov
stos
loope
lds
or
notl
jl
cltd
push
lds
cld
sti
iret
mov
jmp
call
js
popa
iret
stc
lods
sub
roll
add
jne
fadds
test
pop
pop
mov
fstps
movsl
add
aad
call
push
outsl
push
pop
gs
fucomi
enter
inc
xor
cmpsb
stc
ds
shlb
aad
mov
pop
ljmp
push
mov
pop
or
fsubrs
repz
add
dec
mov
mov
cld
gs
sub
push
cli
mov
jge
arpl
lods
xor
sbb
insb
push
jle
sbb
out
ss
cmp
pop
pop
fildl
outsb
sbbl
sahf
in
pushf
nop
pushf
xchg
lret
mov
rcr
adc
mov
repz
xor
jmp
aad
mov
imul
test
lret
xor
sarb
popa
repz
sbb
xlat
adc
loopne
push
sub
dec
add
pushf
pop
jns
adc
xchg
adc
outsb
inc
imul
leave
fisttpl
jns
push
fs
sub
cmpsb
mov
fwait
cmp
in
imul
inc
ja
mov
fidivrs
jge
in
popf
les
movsb
roll
in
mov
adc
fisubrl
and
add
sub
sub
shrb
rcrl
fsubrl
insl
pop
and
inc
cmpsl
jecxz
sahf
ds
fistpll
hlt
mov
mov
jnp
jp
mov
push
pop
int3
in
sti
pop
in
pop
scas
scas
xlat
or
frstor
jmp
sbb
xchg
rcrb
inc
into
fcmovne
adc
lods
in
mov
mov
ret
sbb
cld
push
insb
inc
sbb
out
cltd
das
mov
mov
gs
cmp
mov
adc
das
pop
cmp
test
lahf
lea
jl
jp
popa
jl
jge
pop
fisubrs
lds
mov
mov
test
ljmp
add
mov
mov
pusha
jge
add
sbb
push
dec
ljmp
mov
pop
mov
xchg
cmp
cltd
jno
pop
push
mov
pop
cmp
cmpsl
xor
dec
ja
pop
dec
popf
addr16
int3
mov
push
push
push
sub
xchg
mov
imul
jne
sahf
movsl
adc
lods
push
mov
mov
mov
inc
fdivr
inc
or
sarb
push
aas
movsb
mov
lods
xlat
push
push
or
jnp
call
pusha
aaa
mov
pop
push
jmp
push
mov
jle
push
or
push
in
insb
push
inc
mov
or
mov
adc
cwtl
ds
out
pop
data16
mov
sub
fsubrl
push
jmp
arpl
int3
jecxz
dec
and
xorl
imulb
jb
add
mov
or
lods
sub
imul
into
push
inc
stos
lods
pop
test
and
fldcw
decl
jge
jge
mov
mov
faddl
js
bnd
lcall
cmp
pop
pushf
mov
jne
push
into
imul
sbb
fwait
not
jb
bound
and
pop
fs
push
jecxz
aad
das
in
xchg
jg
mov
mov
or
dec
ret
idiv
dec
shll
es
pop
fucomi
sti
push
pop
mov
das
jns
hlt
push
test
jo
mov
mov
xchg
imul
rcr
mov
xlat
push
mov
inc
jnp
xchg
xor
mov
lea
cmpsl
pop
xor
ss
sbb
push
mov
sub
xchg
enter
dec
mov
adc
popa
test
pop
and
jns
out
pop
add
sbb
rcll
into
addr16
xlat
push
lods
mov
aaa
mov
jge
test
cmpsb
repz
adc
cmp
lret
mov
push
fsubl
push
cmp
repz
push
out
les
xchg
mov
push
pop
jne
dec
jnp
dec
mov
pusha
mov
xchg
jb
adc
outsl
sysret
in
dec
mov
shl
add
xor
sbb
fldt
xchg
in
in
aas
popf
js
fsubr
jnp
sti
fwait
sarb
and
xchg
lahf
jecxz
sbbl
and
jp
lret
xor
int3
cmc
mov
push
faddl
je
pause
or
fisubs
push
movsb
push
imul
lcall
aad
mov
add
mov
cmp
or
push
notb
sub
lock
cmp
lahf
adc
iret
test
insb
call
push
loopne
adcb
outsl
sbb
fiadds
adcb
out
mov
test
daa
out
push
xor
mov
mov
dec
mov
push
cltd
dec
jmp
mov
je
std
aas
xchg
sbb
ret
and
adc
pop
pop
and
push
push
int3
pop
ret
add
fstps
lcall
aas
and
sub
out
rcll
add
and
rcrl
shlb
out
clc
outsl
stos
loope
or
int
xlat
jnp
and
cmp
pop
aaa
jne
test
cmp
push
inc
mov
cmp
test
xchg
nop
scas
rolb
sbb
mov
lods
mov
push
roll
jl
pop
nop
out
andb
scas
add
jecxz
sub
addr16
xchg
xchg
xor
mov
test
jle,pt
push
loop
push
mov
adc
add
adc
bound
mov
es
dec
bound
mov
and
int3
dec
cmp
scas
loope
sub
xchg
adc
sbb
mov
push
icebp
scas
mov
repz
pop
push
fisubrl
in
push
sbb
mov
mov
leave
ja
push
cmpsl
mov
and
or
adc
jo
lret
xchg
mov
dec
rcll
and
jb
jbe
scas
and
pop
and
jbe
pop
inc
jmp
sub
push
dec
negl
xor
lret
cs
fsubp
movsl
dec
adc
lods
fsubrs
mov
out
lret
sbb
mov
sub
lret
jmp
sub
mov
outsb
add
or
push
aad
cmpsb
xchg
add
and
imul
jge
aaa
imul
lret
dec
imul
jbe
cmpsl
sbb
push
mov
sbb
mov
mov
int
test
out
lret
xchg
aad
add
mov
xchg
sub
cmpsl
es
jecxz
mov
dec
push
xor
push
cs
cwtl
pop
dec
enter
cmp
dec
stos
imul
xchg
dec
pop
arpl
shrb
ret
imul
mov
shlb
pop
mov
hlt
sub
lods
gs
bound
inc
xlat
mov
mov
icebp
push
inc
add
scas
push
pop
sbb
mov
sarl
pop
dec
inc
pusha
iret
mov
ss
sti
xor
addr16
ja
popf
fiaddl
cwtl
dec
rorl
popf
loop
fildll
rol
jne
cmp
imul
xchg
rclb
xchg
xchg
mov
or
mov
mov
inc
cli
cmpsb
sub
fdivrp
pushf
inc
and
gs
pop
mov
push
leave
decl
sub
pop
mov
jnp
loop
into
pop
inc
mov
cmpsl
sub
xor
add
sbb
pop
call
mov
hlt
xor
arpl
std
daa
lret
test
adc
test
in
mov
js
sarl
jb
cmp
and
outsl
inc
sahf
movsl
movsl
sub
jnp
out
push
fcmovnu
xchg
mov
cmpsb
dec
mov
adc
test
and
pusha
pop
jnp
add
cmp
aas
lcall
lds
ljmp
cmp
push
icebp
and
cltd
movsl
xchg
imul
push
dec
stos
sbb
jecxz
imul
jbe
stos
out
test
in
dec
sub
inc
in
popa
xor
adc
mov
fsubp
mov
and
xchg
or
push
pop
cmp
out
gs
xor
enter
pop
aas
test
insb
xchg
loope
lret
lods
cld
xchg
in
fistps
iret
int
neg
jl
cmpsb
sbb
jmp
push
pop
es
lock
dec
es
cltd
adc
cmp
les
sub
xchg
insb
pop
outsl
jns
bound
dec
jecxz
cmp
sbb
pop
mov
adc
js
push
jo
ljmp
mov
clc
es
movsb
dec
movsl
cmp
add
repnz
push
lahf
cmp
dec
xor
add
mov
sub
insb
hlt
sub
sbb
sub
rolb
mov
std
add
icebp
decb
push
pop
jmp
sub
cmp
xchg
subb
aad
xchg
pop
push
inc
lret
dec
and
aad
mov
mov
test
mov
mov
or
loope
out
movsl
cwtl
or
test
mov
push
sahf
imul
lock
shr
pop
mov
inc
and
dec
push
lret
sub
cmp
sub
mov
mov
adc
insl
dec
or
inc
in
fs
xlat
aas
sbb
xchg
sbb
insb
imul
mov
int
cmpsw
fbstp
mov
ret
ljmp
je
arpl
and
xchg
xor
dec
sub
out
lds
addr16
sub
push
cmp
jl
or
fistps
push
lahf
int3
mov
mov
cmc
clc
sub
lock
push
mov
cmc
and
xor
out
jecxz
dec
cltd
dec
or
or
lock
inc
shrb
out
cmp
inc
jae
push
add
jbe
dec
xchg
add
filds
mov
dec
push
pop
mov
and
andb
inc
out
mov
lcall
mov
jae
dec
bound
xchg
jo
cmp
fwait
imul
or
cld
jno
mov
sar
mov
sub
fists
cmp
daa
test
shrb
jbe
push
stos
imul
pop
xor
cmpsb
jle
inc
and
aad
fiaddl
mov
stos
inc
or
mov
or
adc
mov
cld
outsb
xor
addr16
movsl
lea
mov
dec
jp
jle
jp
inc
call
nop
pusha
xor
popf
inc
popa
jo
in
punpckhwd
test
arpl
or
sub
repz
test
fiadds
sbb
outsl
clc
xlat
push
push
imul
mov
dec
stc
mov
mov
aaa
dec
aas
sub
lahf
testl
adc
idiv
ljmp
sbb
add
imul
in
es
iret
add
hlt
jno
mov
add
mov
inc
jne
xchg
nop
add
js
dec
daa
push
popa
sarl
sub
setp
imul
stc
mov
cmp
adc
or
or
aad
in
je
push
lcall
dec
or
incb
adc
cltd
mov
sub
and
outsl
or
pop
leave
and
mov
std
adc
mov
lret
jge
out
dec
inc
into
pop
lods
xor
dec
add
pop
or
jb
cmp
add
adc
ja
pop
int3
loope
shrl
das
jecxz
mov
and
ficoms
jmp
pop
xchg
icebp
sub
or
hlt
rcrb
push
jae
test
sub
cs
sahf
fildl
dec
js
push
mov
cmc
push
mov
sub
cmp
es
or
adc
jo
fcompl
mov
inc
popf
jle
xor
lods
pusha
fcoml
sbb
pop
jle
cltd
int3
in
fbld
mov
and
push
cmp
stos
xor
cmp
mov
adcb
mov
adc
scas
popf
loopne
jmp
jp
or
cs
jne
decl
mov
dec
push
repnz
cmp
clc
daa
jb
int
icebp
adc
jb
testl
cmp
mov
in
sub
sbb
pop
bound
inc
xchg
dec
mov
add
jae
mov
cli
adc
push
jge
pop
repz
jg
loope
dec
scas
insb
push
or
xchg
xor
mov
jno,pn
adc
sbb
mov
xor
lcall
or
lahf
sub
popf
xor
and
das
lahf
in
and
push
in
mov
shrb
fnstsw
jl,pt
xchg
jne
int
and
int
mov
mov
xchg
sbb
push
insb
xlat
jg
mov
lret
les
fiaddl
repnz
xlat
xlat
sub
mov
sbb
jns
jp
xchg
and
fwait
xor
push
or
sarb
je
jo
scas
adc
out
push
sub
es
or
add
lret
cmc
aas
or
pop
je
dec
xchg
fsts
fs
xchg
pop
and
lcall
add
test
ja
out
sub
fimuls
dec
mov
stos
fidivrl
ss
mov
fists
inc
cmpsb
outsl
mov
je
mov
in
stc
pop
add
pop
inc
rol
iret
ds
push
jne
mov
mov
or
inc
je
dec
adc
adc
pop
sbb
mov
out
push
sbb
mov
jne
sahf
rcll
dec
add
into
jg
mov
addl
pop
jae
out
sbb
jmp
xchg
ds
cmpsb
popa
jne
lods
push
jo
sbb
adc
jae
inc
fidivrl
cs
cmpsl
add
dec
push
ja
jo
cltd
iret
adc
pop
mov
stos
iret
jle
dec
leave
add
and
iret
out
sub
and
dec
mov
cmp
jns
movsl
mov
mov
out
scas
sarl
cmc
pop
aam
pusha
pop
inc
adc
pop
aad
mov
mov
scas
jo
subl
inc
dec
sbb
push
fcompl
icebp
sbb
into
or
adc
lahf
mov
mov
xlat
fidivl
stc
cmp
pushf
fcomps
push
ss
or
sahf
push
ret
jg
jb
out
lds
in
fisttpl
inc
mov
lods
ds
imul
inc
leave
je
fstps
or
xchg
xlat
fcoml
aas
xchg
jg
push
cmp
fdivrl
jbe
mov
adc
gs
mov
mov
lret
pusha
pushf
shlb
rorb
jmp
sub
sbb
sbb
dec
call
jge
and
inc
lret
repnz
lock
inc
cmp
fwait
jb
jl
test
stos
xchg
mov
push
test
out
pop
fs
shll
mov
jns
mov
mov
xor
pop
push
loopne
inc
xor
cmp
fldenv
xchg
mov
repz
repnz
lcall
lcall
insb
add
scas
jge
in
int
sbb
jno
cmp
insb
sbb
jge
dec
cwtl
or
dec
adc
cli
les
flds
xor
jbe
cmc
sbb
jmp
int
bound
and
fistpl
les
pop
xchg
shufps
pop
outsb
cltd
lds
lret
push
cmpsb
lods
cli
ret
mov
inc
xor
movsb
push
sub
orb
cs
jns
xchg
nop
movsb
ficoms
or
es
fnstcw
out
push
mov
addr16
sbb
jle
lea
sti
or
je
jbe
sub
push
les
fwait
push
mov
mov
dec
popf
push
jb
lret
std
outsl
aad
pop
ljmp
mov
pop
xor
mov
mov
adc
xchg
in
imul
imul
xchg
add
sub
push
daa
push
dec
inc
push
gs
hlt
shrl
adc
sarl
push
or
push
inc
cmp
cmpsb
mov
inc
stos
leave
jmp
arpl
shl
inc
mov
loopne
out
js
pop
imul
cli
mov
or
xor
mov
repz
jbe
mov
loop
xorl
pop
pop
inc
mov
and
push
cltd
hlt
icebp
mov
ret
mov
mov
or
mov
xor
cmp
or
cmp
jno
movsb
cmpsb
lods
call
dec
repnz
mov
push
push
divb
ret
clc
hlt
out
inc
sbb
in
mov
outsb
addr16
cltd
nop
sub
nop
jnp
xchg
scas
loope
mov
pop
mov
add
xchg
mov
pop
lahf
jmp
mov
or
adcb
mov
rol
test
lret
mov
jnp
imul
imul
xor
push
jnp
cmpsl
pop
out
cmp
cld
lods
jl
fs
pop
icebp
xchg
xchg
mov
dec
xchg
jb
rorb
push
or
mov
orb
jmp
jns
into
fldcw
lahf
xchg
out
icebp
subb
pop
mov
mov
cmp
mov
sub
dec
jmp
mov
ret
aas
push
testb
inc
cmp
je
es
cltd
ja
test
pop
jle
cmc
sbb
pop
fildl
sbb
mov
xor
scas
sub
mov
std
enter
sbb
jg
dec
outsb
and
xchg
icebp
sti
sahf
js
es
cmpsl
xchg
repz
in
in
push
sub
cmc
mov
push
lcall
pop
adc
mov
div
or
pushf
pop
xor
jmp
jg
arpl
not
sub
gs
or
and
jl
jo
idiv
into
adc
es
push
sub
mov
xchg
mov
test
pop
mov
sub
lcall
sbb
leave
sbb
adc
dec
mov
mov
pop
dec
xchg
xchg
push
ret
cld
jge
repz
pop
pushf
insl
lock
cli
mov
dec
adc
iret
in
jbe
mov
jns
insl
cmp
jp
lret
mov
cli
insb
sbb
pop
mov
pop
incl
mov
imul
adc
mov
data16
test
jb
aad
out
aam
jp
dec
out
daa
or
sub
pop
ret
xchg
mov
cmpsb
stos
and
in
and
lret
or
into
add
inc
mov
pop
jge
mov
inc
mov
xor
and
xor
mov
lock
adc
mov
pop
sub
push
test
add
mov
pop
ret
loopne
dec
out
pop
push
sub
in
lfs
js
push
sbb
sahf
cmp
imul
daa
shll
dec
pop
fcoms
pop
or
xchg
mov
or
adc
jecxz
popa
push
xor
sub
jb
stos
and
pop
push
into
pop
loopne
in
mov
mov
push
push
outsb
push
push
add
data16
or
sub
inc
cwtl
mov
mov
pop
sub
sbb
gs
ja
pop
add
mov
jo
cmp
icebp
jecxz
or
jp
xchg
lcall
pop
mov
addl
mov
stos
or
mov
xor
push
inc
imul
loop
stc
imul
pop
mov
jo
lds
insb
add
pop
push
loope
and
jp
sbb
sbb
xchg
dec
add
shlb
push
lock
adc
push
xor
jmp
pop
adc
inc
icebp
mov
inc
ret
mov
push
mov
push
pop
test
imul
test
mov
enter
xor
ljmp
sbb
cli
insb
pop
sbb
push
pop
mov
pop
jae
std
fsubrl
xchg
xor
iret
xchg
sbb
out
test
adc
cmp
and
dec
imul
fwait
mov
push
fnstcw
mov
lret
push
icebp
or
aas
fs
dec
mov
or
test
mov
sub
insb
jo
inc
repz
popa
fldl
int
in
mov
ret
fisttpl
cmpsb
dec
jo
stc
iret
push
cbtw
push
fcomps
xchg
adcb
pop
ljmp
loope
cld
les
inc
pop
cmp
gs
dec
xchg
shll
into
push
and
add
shlb
add
xchg
sahf
fstps
dec
cld
mov
mov
insl
int3
test
test
mov
das
or
repz
cwtl
out
pop
add
push
xor
pop
xchg
mov
imul
imul
cmpsl
clc
push
orl
mov
out
cmp
lods
mov
pop
mov
push
sbbb
or
sahf
dec
in
clc
test
jns
sbb
std
sbb
cltd
andl
adc
sub
int
adc
xor
push
sbb
jb
add
mov
scas
repz
aam
jnp
lahf
fnsave
or
test
xchg
aam
cmpb
in
jg
xchg
sub
or
xlat
lea
cmp
dec
inc
sub
ja
jae
xor
and
mov
outsb
mov
jp
ds
push
les
or
cmp
leave
out
roll
outsb
cli
int
cmp
das
xlat
xchg
sub
add
jae
inc
and
cmpsb
test
mov
rcl
cmpsl
sbb
js
inc
lds
cli
pop
lret
rolb
fnsave
or
xor
mov
jb
cmp
jle
ljmp
and
sahf
pop
bound
movsb
and
sbb
insb
cmc
jp
cs
jl
dec
pusha
sahf
mov
je
xor
cs
aaa
dec
out
pop
mov
mov
stos
fwait
mov
pop
mov
lods
cmc
pop
mov
fdivrl
mov
idivb
pop
jnp
push
pop
daa
adc
push
and
dec
cmpsl
ljmp
in
sub
inc
cmpsb
sbb
jg
pop
add
imul
insl
ja
icebp
jbe
mov
ds
inc
sbbl
cli
ss
inc
inc
push
mov
aas
xchg
dec
ret
mov
add
dec
push
xchg
int3
shll
aas
mov
xchg
adcb
imul
cwtl
mov
cltd
mov
insl
mov
movsl
stos
scas
cmp
dec
mov
arpl
adc
fucomi
lret
inc
cmp
dec
mov
pop
mov
js
shll
idivb
adc
lods
jns
lods
adc
bound
lcall
pop
xchg
sub
mov
push
mov
ret
in
push
cs
pop
adc
pusha
rolb
stos
std
jno
lods
icebp
in
cld
imul
test
insl
ds
adc
and
xor
mov
int
and
iret
outsb
ret
push
fwait
movsb
mov
lds
cwtl
or
sub
mov
xchg
push
scas
push
xchg
lret
inc
lds
insb
fmuls
ljmp
or
push
push
test
dec
adc
data16
pop
push
cmpsl
jnp
mov
sbb
fcoml
insb
sub
std
xchg
mov
je
inc
cmp
inc
cmp
movsb
sbb
or
shrl
popa
xchg
pushf
stos
fstps
mov
out
mov
pop
push
not
or
add
fbld
adc
inc
addb
addl
cld
lods
imul
xchg
or
jmp
cwtl
hlt
loop
ljmp
jae
mov
orb
mov
das
arpl
adc
sbb
adc
mov
and
stc
in
imul
imul
mov
negb
xor
insl
add
scas
jle
pop
push
adc
out
add
lret
clc
test
hlt
sbb
mov
popf
push
or
movsl
movsb
xor
cmp
sbb
roll
push
stc
mov
arpl
mov
sbbb
jb
xchg
add
bound
cwtl
ret
lea
arpl
cmp
aad
jo
push
mov
shlb
sbb
in
mov
inc
sbb
cmp
xchg
lds
jle
cwtl
icebp
jmp
xchg
push
pushf
int3
hlt
jae
push
imul
and
dec
pop
cmp
pop
inc
scas
push
dec
cwtl
lock
jge
shll
and
inc
int
or
push
movsb
test
fs
ret
xor
xchg
pushf
popa
lcall
enter
dec
jnp
inc
pop
inc
push
pusha
mov
mov
jp
inc
cmp
sahf
out
pop
pop
mov
pop
fnstcw
mov
scas
inc
xchg
std
xchg
and
das
sbb
jmp
rcrb
call
mov
push
mov
inc
lock
push
insl
cmp
outsb
sarl
push
scas
mov
jecxz
notl
in
daa
mov
pop
daa
fucom
jb
hlt
pusha
test
bound
adc
cmp
and
ret
jo
dec
adc
sub
sub
dec
std
inc
dec
adc
enter
cmp
xor
jecxz
mov
test
je
sub
adc
push
push
mov
pop
jge
push
dec
pop
scas
sub
push
lahf
cld
jb
adcl
jae
leave
push
pop
js
dec
das
and
and
rol
push
sbb
xchg
push
sbb
test
int
loopne
fucomip
cmc
data16
cwtl
adc
jno
inc
aam
xchg
mov
js
in
fcmovne
lret
lock
hlt
mov
ljmp
popf
lcall
rcrl
pop
mov
or
xor
rol
dec
fdivs
add
mov
ret
mov
cmp
ljmp
jns
dec
popa
xor
dec
es
inc
fsubp
push
add
adc
ds
pop
iret
sub
xchg
lock
sbb
ljmp
mov
sub
lods
push
fmuls
lea
mov
cld
inc
arpl
cltd
mov
pusha
cs
dec
shl
add
andl
mov
jl,pt
fsubl
fldcw
inc
mov
mov
cmp
hlt
icebp
aaa
push
mov
cmpsb
dec
call
fst
ret
push
in
mov
push
xchg
cmc
xchg
mov
jns
insl
push
xorl
into
push
mov
jmp
xchg
out
and
pop
sarb
pavgw
jne
push
fcomps
jb
imul
leave
mov
stc
xor
popa
lods
mov
jno
in
xchg
mov
xorb
mov
and
xlat
dec
sahf
fs
out
pop
mov
mov
mov
testb
shl
and
mov
sahf
cmp
or
dec
mov
jno
dec
in
cmpsb
aad
mov
lcall
mov
sub
lret
push
mov
mov
test
fldl
pop
jle
outsl
das
mov
icebp
add
popa
push
push
pop
and
js
into
push
and
jno
fistps
fdivl
jecxz
xor
sub
in
inc
ljmp
in
cmp
shlb
jp
ret
xchg
or
ljmp
fistpl
pop
push
sbb
mov
pop
add
add
jo
rcrl
sbb
enter
push
lods
jne
dec
jns
fsubs
rclb
cmc
imul
adc
dec
in
in
and
test
in
out
or
mov
or
jp
or
mov
mov
notl
mov
push
inc
xchg
mov
scas
nop
out
int3
jno
sub
and
test
cmpsb
stc
in
cmp
or
pusha
dec
mov
hlt
ds
and
into
inc
bound
mov
add
test
adc
or
push
movsl
adc
mov
adc
int
sub
pop
fidivrs
inc
pop
and
clc
adc
and
push
jbe
cmp
cmp
lahf
divb
sbb
in
hlt
jbe
outsl
jnp
in
movsb
sti
enter
mov
and
mov
xor
xor
or
in
mov
es
xchg
xchg
and
xchg
or
inc
testb
pop
jg
and
shl
cmpsl
int
xchg
or
out
jmp
sbb
nop
outsl
js
ret
les
repnz
or
lahf
jbe
test
push
cltd
sahf
cmp
add
call
aam
sbb
sub
or
mov
add
push
mov
mov
into
sub
adc
jno
dec
ja
sahf
notl
or
sub
sub
adc
repz
lods
push
mov
xchg
push
lcall
sub
inc
lds
orb
sbb
in
push
sbb
pop
in
call
sbb
ds
mov
out
ret
sub
out
or
push
jg
out
mov
les
out
sub
jl
sbb
jnp
push
adc
add
jbe
inc
bound
test
xor
cwtl
push
jle
cmp
pop
jo
loope,pn
lods
cld
xchg
popf
mov
mov
xor
dec
add
sbb
dec
mov
inc
or
ja
pop
xchg
lods
mov
push
inc
hlt
shlb
pop
icebp
outsb
sti
and
mov
pop
rcrl
in
mov
xchg
mov
jecxz
inc
pusha
leave
pop
adc
sbbl
outsl
enter
jbe
test
xchg
sub
sbb
fldt
inc
jae
pushf
shlb
fiadds
and
lea
sub
je
and
adc
sbb
xchg
fildll
and
push
pop
xor
inc
inc
lds
aad
inc
xchg
fsts
enter
pop
aam
insb
jb
popf
and
mov
test
aad
sti
ret
and
pop
sbb
mov
xor
dec
stos
dec
and
daa
repz
adc
int
int3
test
testl
jp
fdivs
cmc
repz
les
iret
outsl
mov
es
jg
leave
ds
inc
mov
and
pop
daa
ss
pop
xchg
mov
xor
ss
daa
xor
repnz
or
inc
sar
lahf
lcall
popf
add
sarl
cmp
pop
dec
leave
jmp
cmp
jp
or
ret
cmp
xchg
mov
inc
and
nop
and
xchg
rolb
sub
fiaddl
sarb
xor
subb
pop
mov
jle
testl
aam
mov
lea
xchg
or
xchg
jae
lock
xchg
cld
pop
pop
jno
push
or
xorb
lret
cmp
inc
xchg
leave
or
enter
imul
lret
stc
cmpsl
fistl
in
sbb
fwait
pop
lret
jmp
cmp
imulb
mov
push
push
imul
stos
sub
push
shll
das
jne
int3
bound
in
in
adc
sub
lds
xchg
xor
mov
push
jecxz
loopne
std
lret
inc
stc
test
in
fneni(8087
dec
sub
mov
das
xor
mov
add
push
test
das
sahf
adcb
test
or
jnp,pn
jecxz
mov
outsl
jmp
imul
and
popf
inc
cmp
imul
sub
js
enter
testb
je
lahf
fld1
mov
dec
push
sub
or
add
sbb
push
loope
pop
and
push
rolb
nop
repnz
inc
in
arpl
push
int
lret
add
xor
leave
clc
ljmp
and
ja
mov
pop
fucom
icebp
pop
lock
push
push
adc
inc
pop
repnz
aas
fldt
call
jge
sbb
popa
fnsave
test
or
inc
and
das
data16
loope
imul
xchg
jge
sarl
add
test
jle
sbb
push
popa
scas
ret
or
xorb
es
sbb
insl
pop
imul
lcall
adc
and
cwtl
fdivr
push
js
in
mov
xor
or
and
dec
call
pop
fbstp
test
or
jle
pop
inc
ja
int3
insb
jne
mov
fstpt
or
movsl
xor
jp
popa
popf
inc
test
cld
dec
jae
es
fisttpl
lock
jmp
shr
stos
outsb
pop
arpl
push
cmpsb
jae
sub
inc
inc
xor
ret
mov
mov
jle
cmp
xchg
and
into
leave
xor
frstor
mov
pop
jp
out
dec
sbb
inc
pop
adc
pop
and
mov
jl
xchg
jae
pop
pop
jae
xchg
add
arpl
mov
mov
push
mov
into
xlat
lcall
shrb
repnz
lds
mov
jae
cmpsl
cmp
ljmp
loopne
mov
insl
sbb
popf
fcompl
xchg
out
mov
out
fwait
pop
dec
pop
fldenv
movsl
xchg
mov
divl
scas
push
cld
sub
ret
mov
jge
test
cmp
xlat
pop
dec
sbb
jnp
into
add
fildl
rcll
das
adc
mov
imul
push
in
int
add
adc
xchg
jo
adc
out
push
sub
push
pop
inc
sub
fnstcw
test
add
idiv
nop
sbb
pushf
fistpll
fbstp
outsb
int
or
xchg
cld
mov
xor
sub
sbb
fadds
push
jge
xchg
ljmp
lock
mov
mov
add
lock
jns
mov
ret
push
jmp
es
mov
das
insb
test
cmpsl
and
pop
or
mov
mov
mov
jnp
pop
mov
sub
fsubs
cmp
imul
loopne
rol
hlt
inc
fs
or
mov
insl
sti
mov
lahf
out
in
out
mov
xchg
jb
dec
add
shrl
ficoml
pop
sub
insb
scas
xchg
mov
jecxz
mov
pop
add
inc
addr16
rol
es
fsubl
mov
sub
xchg
in
push
mov
into
push
inc
add
inc
sub
and
xor
and
and
xor
leave
mov
fdivrp
insb
mov
jne
fisttpl
pop
add
cmp
sub
inc
hlt
push
cli
jne
xchg
out
inc
cs
cmp
mov
mul
ds
mov
sahf
loope
cwtl
push
iret
adc
xchg
int
cld
xchg
jle
xor
jmp
out
test
sub
cld
hlt
int
push
mov
fisttpll
jge
push
push
leave
scas
or
cs
clc
xchg
imul
mov
push
jo
xchg
imul
repnz
addb
test
std
ret
jbe
inc
shrl
cmpsb
mov
ret
mov
imul
outsl
in
adc
pop
call
lock
fldt
mov
cmpsb
test
jbe
daa
dec
jle
jecxz
jmp
in
or
sub
gs
cli
in
inc
push
sbb
imul
loopne
bound
outsb
xor
add
dec
pop
inc
push
movsl
fs
push
leave
insb
shrb
fcmovnb
pop
fcompl
xchg
mov
addb
push
lock
or
adc
jo
mov
lahf
pop
in
cwtl
loop
xor
push
cmc
daa
push
push
inc
loop
xor
xchg
mov
adc
daa
pop
inc
xchg
inc
popa
fdivrs
sub
pop
faddp
or
in
sahf
jne
sub
repz
sbb
and
call
jns
mov
cmp
out
je
dec
push
lret
add
sub
ja
iret
lea
push
sbb
pop
inc
orl
leave
or
in
movsb
ret
sti
ret
rolb
popf
ja
scas
mov
lret
push
pop
xor
pop
push
out
pop
test
push
jae
xchg
lds
mov
jbe
sbb
inc
xchg
into
sbb
xchg
adc
mov
movsl
cmp
icebp
ja
ss
cmp
and
and
cmp
mov
inc
jp
adc
mov
fs
shr
xchg
add
loope
add
cwtl
ret
imul
fdivp
lret
jmp
mov
push
mov
rorb
xor
xchg
push
stc
int
icebp
imul
loop
dec
es
int
dec
xlat
in
shlb
pop
idivb
pushf
test
rol
cmp
daa
fcmovne
adc
int3
inc
bnd
pushf
lahf
repz
outsl
push
pop
jo
and
cmp
inc
popa
pop
clc
lret
dec
dec
out
cmp
test
clc
lods
mov
mov
cmp
loop
lret
cwtl
pop
in
dec
dec
push
int
repz
pop
aas
mov
mov
lcall
js
in
gs
stos
pusha
outsb
pop
xchg
mov
call
adc
mov
jae
sbb
sbbb
in
dec
sub
in
sub
fdiv
mov
hlt
cmc
adc
ds
repnz
lret
mov
cmp
mov
aam
xchg
xor
mov
adc
cmpsb
jl
and
jecxz
sbb
test
push
mov
mov
sti
bnd
push
ds
ficomps
insl
jnp
mov
aam
and
popl
mov
aam
cmp
in
push
and
rolb
inc
sbb
iret
dec
rolb
xchg
mov
mov
jae
cli
fnstenv
fcompl
into
pushf
mul
shl
orb
mov
ljmp
push
xor
sub
dec
push
push
mov
add
cli
sti
mov
sub
inc
jp
jecxz
cltd
std
inc
xchg
shll
cwtl
adc
jge
push
cs
and
repnz
cmp
daa
inc
xchg
fistps
ja
ret
inc
imul
cmc
add
sahf
mov
in
sub
mov
push
adc
add
jg
and
xor
stos
sbb
jns
movsl
into
loope
sbb
insl
test
pop
and
add
shrb
mov
js
aaa
sub
pop
loope
jmp
add
inc
push
xor
push
lods
js
inc
sub
aam
inc
dec
lret
aad
jb
adc
repz
jo
jo
adc
mov
in
and
cmp
faddl
push
imul
jle
outsb
inc
xchg
out
xchg
popf
popa
or
nop
fyl2x
movsb
and
sarb
sbb
xor
inc
mov
and
leave
add
inc
inc
xor
xchg
sub
mov
sub
dec
jb
test
lds
aaa
sarb
ljmp
push
dec
inc
push
sub
mov
jnp
add
rcrl
sar
aaa
and
cmpsl
and
sub
add
mov
inc
mov
pop
inc
gs
push
push
mov
lcall
jecxz
jecxz
test
adc
pushf
xorl
push
mov
out
push
out
xchg
dec
repnz
xor
xor
inc
cmp
xchg
repnz
sub
negl
in
push
jne
aam
xor
inc
xor
cmp
in
pop
jle
je
out
aam
pop
mov
scas
mov
xchg
sub
xor
movsl
fnstenv
out
mov
paddw
mov
ss
and
mov
inc
xchg
push
inc
pop
mov
pop
xor
and
adc
mov
movsb
or
movsb
cmp
mov
jns
xchg
and
xor
fistps
adc
pushf
fwait
sbb
xor
push
dec
cwtl
xor
popa
mov
push
sbb
or
ljmp
adc
pop
push
rcll
ret
mov
std
xor
filds
pop
mov
out
mulb
out
or
sub
cmp
pushf
push
jno
xor
es
out
pop
mov
push
mov
icebp
add
mov
cmc
int
repnz
out
lret
arpl
xor
mull
jl
pop
sbb
das
mov
adc
stc
push
pop
adc
push
cwtl
sbb
test
or
push
test
inc
push
mov
jae
addr16
jge
cmp
mov
ret
popa
mov
gs
pop
loop
xchg
cmp
pop
shrl
cmp
jne
inc
sub
lcall
jnp
sub
push
test
push
push
dec
and
test
pop
in
hlt
xchg
sub
mov
jmp
arpl
push
pop
mov
in
fs
test
test
mov
sub
iret
mov
notb
xchg
mov
imul
fists
bound
push
xlat
inc
inc
jno
sub
jl
push
mov
xor
mov
pop
test
and
inc
mov
sub
xorl
pusha
xor
daa
icebp
int3
dec
int
add
test
inc
jns
pop
out
cmp
or
repnz
fimuls
sub
scas
lds
jg
mov
lcall
jnp
movsl
loop
popa
mov
sbb
mov
xor
pop
inc
and
pop
in
pushf
ds
js
inc
push
add
push
in
fstps
adc
jae
mov
or
and
arpl
imul
mov
jmp
push
sub
fdivl
jae
sbb
xchg
aaa
dec
sbb
cmpsl
mov
dec
lret
pop
mov
outsl
xchg
sbb
add
push
movsl
scas
hlt
arpl
bound
movsl
insb
or
lods
mov
aam
fbstp
lock
cmc
pop
inc
mov
lds
lock
cmpsb
leave
or
sarb
fwait
cmp
mov
addr16
std
dec
add
xchg
add
sti
ret
dec
int3
push
push
jmp
mov
jge
push
xchg
scas
mov
stos
sbb
lea
pop
add
push
addr16
sbb
inc
aad
popa
dec
lahf
shll
sbb
in
sarb
insl
xchg
inc
sarl
push
mov
scas
mov
int3
cmc
les
pusha
xor
in
ret
jb
and
fstpl
fsubrl
scas
ds
dec
gs
adc
ja
nop
lsl
adc
das
xor
daa
shl
sbb
jb
mov
sbb
adc
dec
jp
nop
pusha
jbe
pushf
icebp
cs
sub
mov
jmp
mov
popl
xor
mov
sbb
dec
loope
call
shrl
pop
sub
scas
mov
test
push
insb
mov
mov
orb
mov
cld
xchg
or
jnp
arpl
lcall
enter
adc
das
and
shll
in
mov
dec
jbe
add
leave
inc
fbstp
pop
ret
mov
shlb
lret
lret
mov
dec
je
repnz
pop
adc
subl
adc
xchg
out
adc
lods
scas
or
les
cmp
in
jns
push
mov
cmp
xchg
sarb
jl
sbb
or
orl
mov
aam
scas
outsl
jbe
aaa
dec
outsb
call
in
lea
mov
mov
loop
incl
lods
xor
aaa
push
mov
lret
les
addr16
mov
or
add
enter
std
daa
divl
mov
popf
and
int3
push
aad
inc
sti
dec
inc
ja
adc
hlt
jg
inc
and
scas
xchg
jns
addr16
xchg
push
mov
add
rcrl
mov
or
gs
cmp
mov
xorb
xchg
cmp
iret
orb
cmp
mov
adc
ret
mov
adc
scas
mov
sbb
xchg
xchg
jns
stos
int3
das
xchg
negb
cltd
sbb
and
adc
scas
insb
xchg
je
jno
pop
out
xchg
les
inc
lahf
mov
dec
xor
mov
xor
mov
fsts
push
pop
fisubrs
mov
mov
xor
or
push
test
je
add
add
test
test
in
aaa
rcrb
or
das
js
movsb
ljmp
add
mov
dec
fdivrs
jne
fwait
jbe
lcall
fnstenv
mov
sub
or
pushf
int
pushf
mov
ret
xchg
push
cmpsl
lds
xchg
mov
hlt
cld
into
inc
add
aaa
sub
ljmp
sahf
rolb
cli
cld
and
xchg
mov
or
test
and
insl
add
cmp
pop
fiaddl
mov
dec
mov
lods
push
cmc
pop
pop
dec
scas
sub
jno
lret
rcrb
mov
jl
scas
mov
xchg
cmpsl
push
mov
mov
dec
mov
fnstenv
cmc
mov
mov
dec
hlt
subl
jp
jp
mov
loopne
outsb
adc
adc
push
push
mov
cs
pop
notrack
loop
and
jo
lret
jo
out
mov
jno
xchg
mov
mov
inc
add
cli
jne
orb
imul
cmp
jmp
loopne
popa
es
addb
mov
insb
mov
lods
inc
mov
mov
or
jnp
test
and
jbe
dec
scas
and
fildl
jb
adc
jmp
loop
inc
jnp
lahf
and
test
popa
lock
push
sbb
inc
push
xor
inc
imul
scas
mov
push
cmc
inc
push
sbb
xchg
movsb
lods
test
iret
mov
xchg
lds
mul
mov
mov
xor
mov
sbb
add
jb
inc
or
test
xchg
ss
ds
xor
cmp
sarl
add
mov
or
pop
rcl
into
and
imul
fwait
cmpsb
out
xchg
push
pop
lds
sub
outsl
dec
sbb
cmp
mov
out
aas
inc
popf
jns
push
call
xor
sub
popf
push
subl
add
mov
fcmovnb
sbb
mov
cmc
pop
jno
sahf
adc
jecxz
inc
sbb
sbb
dec
mov
repz
repnz
repnz
repnz
sbb
xchg
mov
inc
jle
in
jno
mov
iret
jp
hlt
push
mov
insb
pusha
sub
or
scas
pop
hlt
pusha
lds
cmp
or
sbb
sbb
inc
pushf
fldenv
popf
test
mov
lcall
rorl
mov
dec
rcr
or
dec
stc
pop
cmp
mov
movb
mov
and
xor
leave
lea
or
jecxz
jbe
jb
iret
push
add
pop
cmp
and
xchg
mov
cli
aad
mov
in
fwait
mov
nop
das
adc
lods
mov
rcr
rclb
fisttpl
or
movsl
dec
iret
aaa
mov
pop
adc
mov
push
lahf
cmc
jl
mov
xlat
jge
adcb
lock
jnp
xor
dec
mov
push
xor
fxam
sub
xchg
daa
loope
es
mov
dec
fisttpl
pop
out
shlb
sub
mulb
fwait
mov
mov
cmp
or
dec
jnp
lods
inc
scas
movw
mov
mov
shrb
inc
out
popf
out
mov
xchg
mov
jnp
jno
fsubl
sarb
es
xorb
popf
ret
data16
pop
in
push
inc
stos
clc
sti
push
dec
inc
mov
fcomps
mov
or
xchg
add
push
xchg
mov
aad
and
sub
dec
pop
mov
shlb
add
fcoml
inc
or
rclb
out
outsb
cmpsl
add
pop
loope
mov
idivl
clc
lahf
adc
inc
mov
mov
scas
mov
clc
jne
cmp
insl
dec
mov
out
fistpl
mov
mov
fadd
fs
mov
pop
int3
push
cmpsl
jl
pop
cmp
inc
mov
fsts
xchg
lods
xchg
sbb
pop
gs
cmpsb
sbb
lods
das
pop
inc
mov
xor
mov
call
jns
fisttpl
fcmovbe
pushf
movsb
fldenv
aad
push
repnz
adc
jg
push
orl
jns
jp
insl
shlb
sbb
cli
fiadds
fcom
dec
and
dec
outsb
adc
mov
ds
sbb
imul
sub
mov
push
jp
cmp
roll
sti
mov
popl
push
cmpsb
dec
fldl
cmp
mov
push
pop
popa
jb
lods
jbe
inc
in
cli
add
inc
stc
jbe
dec
stos
mov
hlt
adc
jp
outsb
inc
stc
adc
pop
das
stc
jae
ss
fwait
cmp
jns
notl
xchg
ret
fsubs
mov
push
mov
out
call
xor
pop
dec
adc
push
push
cld
inc
add
pushf
sar
cwtl
clc
inc
mov
je
mov
pop
clc
adc
hlt
arpl
mov
push
insl
or
fcomp
ret
int
std
adc
jg
jmp
je
dec
aad
or
push
xchg
das
js
scas
mov
scas
repz
into
pushf
or
lock
lahf
mov
push
or
fcmovu
cmpsb
lods
adc
cmpsb
jmp
jmp
dec
decl
sbb
pop
icebp
dec
icebp
cmp
mov
js
mov
inc
movsb
jg
cmp
loopne
das
mov
and
lcall
xor
cltd
outsl
int3
mov
pop
inc
pop
pop
sbb
adc
jmp
sti
mov
pop
andb
popf
movsl
stc
fbstp
jbe
add
call
dec
mov
push
xor
repz
jae
xor
add
cli
call
andb
push
sub
sub
bnd
mov
daa
pop
jb
decl
dec
lock
ficomps
cs
in
dec
sbb
ret
mov
push
jnp
sahf
cltd
mov
leave
push
ljmp
mov
xor
jbe
sbb
dec
lods
mov
cmpl
rclb
mov
mov
rcrl
cmp
ret
mov
xor
lcall
dec
mov
inc
js
push
pop
xor
push
ds
leave
mov
adc
cmpsb
insl
pop
push
aad
dec
sub
rolb
cmp
fcomps
fwait
xorl
xor
aam
and
bound
add
mov
ja
adc
mov
bswap
xchg
inc
xchg
mov
loope
push
pop
jg
jle
int3
cmpsb
cmp
arpl
or
add
js
adc
pop
mov
fmull
mov
aad
lret
lahf
push
lods
or
jp
int
dec
enter
js
add
xor
test
insb
inc
inc
jnp
sbb
lea
test
xchg
call
in
cmpsb
movsb
mov
shr
mov
ja
in
in
sub
in
jo
lea
pop
lds
pop
in
jnp
jo
mov
cmp
mov
cs
push
stc
inc
adc
jl
clc
clc
rcl
dec
mov
cli
subl
mov
xor
addr16
clc
and
inc
mov
or
add
mov
xchg
loope
jo
inc
and
cltd
add
pop
arpl
lods
repz
mov
jl
mov
dec
xchg
mov
sbb
push
fwait
sbb
or
int
push
scas
push
in
jo
inc
icebp
aad
pop
adc
in
add
icebp
sbb
cld
and
negb
in
push
repnz
repnz
in
inc
jg
sahf
xchg
xlat
orl
dec
mov
mov
mov
and
jbe
and
roll
dec
cld
xor
pop
arpl
mov
sbb
jp
bound
cmpsb
adc
jbe
movl
sarl
mov
outsl
mov
pusha
fimuls
ja
repz
daa
sahf
aas
jnp
or
add
shrb
add
mov
pop
adc
sarb
cmp
orl
and
push
xchg
xchg
add
shll
mov
pop
sub
imul
push
fists
xor
push
lods
cmp
roll
addl
in
adc
hlt
testb
push
dec
aas
or
pushf
push
cltd
push
stc
xor
cld
mov
rcr
inc
pop
xchg
leave
push
fisubrs
inc
movsb
int3
insb
movsb
push
in
movsb
push
pop
das
pop
xor
movsb
push
mov
push
add
jmp
incb
pop
jmp
xchg
fisttps
push
push
cmp
dec
inc
sarl
jg
test
mov
adc
push
push
mov
xchg
push
cs
das
mov
int3
shr
aaa
aas
cmp
jbe
jge
ret
jo
jo
pop
ret
push
mov
inc
inc
hlt
ds
push
jae
push
adc
mov
dec
mov
mov
adc
insl
imul
inc
enter
mov
loop
shlb
ds
adc
ror
pop
repnz
sbbl
sub
test
insl
push
xor
imul
xor
cld
mov
pop
lcall
lds
or
push
jmp
aam
mov
xor
repz
or
mov
add
test
popf
pop
popf
fwait
inc
xor
push
cltd
xor
mov
leave
pop
and
inc
in
pop
or
movsl
jnp,pt
mov
icebp
sarl
sbb
aaa
repnz
fst
orl
cmpsl
mov
and
pop
mov
pop
ficompl
in
test
and
lcall
leave
xchg
movsl
lds
jbe
les
mov
cltd
push
mov
repz
lcall
pop
movsl
pushf
inc
movsl
dec
add
dec
js
mov
sbb
xor
cmp
out
mull
js
adc
jne
dec
jge
jle
into
popf
rcrl
cmp
mov
mov
jp
pusha
lcall
push
rolb
ret
test
jge
dec
sbb
or
fildll
pop
outsb
outsl
inc
fidivrl
mov
sti
cmp
mov
sarl
inc
jnp
imul
jle
cs
lret
pop
pop
or
pop
cmpsl
jbe
cmp
cmp
jg
add
dec
and
stos
pushf
xor
pop
dec
xor
bound
lods
scas
mov
loopne
inc
mov
jp
xor
je
sub
xorl
mov
mov
and
xchg
jns
xlat
loope
dec
xor
imul
jb
mov
push
jne
cmp
ficoml
adc
insb
cmp
int3
xor
fadds
push
outsb
push
cmp
lock
imul
cmp
out
jg
loope
std
repnz
add
jmp
add
bound
push
mov
mov
loopne
mov
or
rcrb
cwtl
xor
sub
push
lcall
cmp
jle
and
testl
lret
pop
icebp
fimuls
adc
xchg
inc
inc
repnz
loope
lret
lods
test
xchg
test
stos
shlb
mov
les
fisttpl
mov
ds
subl
movsb
call
sub
and
push
and
mov
aaa
icebp
jnp
lock
shll
shlb
xlat
sub
pop
dec
and
adc
js
imul
pop
int
psubusb
mov
lret
push
ss
push
lock
cmpxchg
mov
nop
jae
mov
stc
int
pusha
push
popa
inc
add
mov
stos
adc
fs
sbb
jmp
dec
lods
imul
push
addr16
es
cmp
sti
repnz
mov
movsb
subb
or
mov
push
and
sbb
jecxz
adc
inc
clc
je
jecxz
sub
pop
jmp
push
sbb
push
cs
insl
dec
jb
jge
pop
pop
test
adcb
jnp
adc
pop
pop
leave
aad
dec
imul
xor
cs
or
movsb
dec
mov
dec
or
cmp
xor
adc
mov
daa
fsubs
push
out
fisubrs
jbe
adc
fidivrs
inc
repz
mov
jb
inc
sbb
inc
repz
dec
ret
adc
push
pop
js
imul
jae
sub
std
push
jmp
push
cltd
mov
mov
mov
mov
jbe
mov
jl
int
mov
repnz
mov
mov
jl
mov
pop
and
pop
lds
cltd
iret
inc
cmp
cmp
scas
adc
ds
cli
aad
add
in
and
loope
call
hlt
inc
xchg
bound
push
in
add
xor
hlt
mov
mov
add
mov
cmp
cwtl
push
mov
dec
movsl
adc
xlat
or
or
xor
mov
jo
cmp
xchg
icebp
or
das
imul
mov
push
pop
and
lds
pop
mov
add
outsb
xlat
lods
dec
sub
adc
inc
cmp
and
inc
aam
daa
test
jbe
adc
scas
mov
mov
outsl
mov
leave
rcll
pop
rorb
sahf
test
and
pusha
fists
jae
add
negl
imul
loopne
pop
mov
insb
out
mov
int3
das
test
lea
cmpsl
repnz
jns
aas
mov
adcl
cmpsl
cmp
pop
dec
mov
stos
adc
subl
adc
inc
mov
xor
pop
mov
push
das
xchg
push
lods
inc
xor
decl
dec
inc
nop
sub
sub
and
adc
in
jne
mov
adcb
push
cld
jne
adc
daa
and
jne
pop
scas
pop
and
js
push
cmp
in
sbb
lods
insb
pop
icebp
movsl
lock
arpl
mov
pop
inc
arpl
push
or
push
adc
or
js
out
mov
ljmp
push
mov
sbb
mov
add
loop
jns
shlb
jns
inc
jmp
aas
aam
and
jbe
or
cli
mov
jo
mov
ljmp
mov
or
lret
mov
outsb
cwtl
cli
cmp
xor
ret
inc
or
test
scas
lahf
mov
inc
xor
out
mov
iret
mov
or
xchg
fisubrs
pusha
cmc
cmp
popf
or
cmpsb
sub
sub
fwait
and
in
xor
lock
lds
outsb
pop
mov
add
scas
fwait
pusha
cmp
jmp
dec
ret
hlt
push
push
ret
sub
outsb
or
xchg
xchg
lcall
enter
sbb
or
ljmp
and
xlat
rcrl
mov
test
mov
std
insb
gs
add
adc
mov
or
mov
or
test
inc
cmp
repnz
and
nop
sti
pop
jns
mov
push
push
mov
push
out
loopne
mov
sbb
scas
adc
xchg
vpsadbw
or
cmp
xor
mov
lods
dec
and
inc
lods
add
pop
add
movsb
mov
jp
add
ss
inc
jg
ret
cwtl
pushf
push
sarb
xor
push
cmp
imul
push
fwait
cltd
dec
dec
iret
outsl
shl
scas
inc
xor
test
repnz
jnp
sbb
push
and
mov
lret
inc
arpl
inc
inc
fiaddl
mov
stc
insl
fs
shlb
push
sbb
mov
add
lret
push
stos
imul
cmpsb
pop
pop
stc
cmp
fmull
outsl
fcomi
mov
pop
cmpsl
dec
xchg
shlb
loop
in
test
je
mov
lea
test
testb
and
cmpsb
mov
ficomps
xorl
lret
and
dec
push
repz
mov
enter
mov
cmp
sbb
mov
addl
fadd
mov
pop
pop
shll
mov
add
cli
iret
mov
jo
aaa
mov
leave
sti
dec
repz
and
push
sbb
mov
fisttpl
loopne
xor
dec
pop
pushl
xor
or
and
sbb
mov
adc
cmp
sub
ret
std
fsubrp
mov
xchg
arpl
jg
mov
push
loopne
dec
cmpsl
sbb
jb
inc
inc
mov
je
loopne
insb
add
std
stc
mov
jge
mov
fldl
stc
lods
mov
out
fistpl
fstl
dec
test
push
xor
mov
xchg
gs
add
dec
mov
xor
inc
mov
ss
mov
xchg
cld
pop
push
mov
jo
mov
das
pop
jns
mov
cmc
cmp
xchg
shr
inc
jne
clc
jns
inc
hlt
insl
loop
and
lahf
fwait
call
push
xchg
jns
dec
in
mov
psubusw
enter
push
pusha
mov
cmp
out
imul
or
rolb
mov
jge
dec
pop
sbb
dec
incb
addr16
movsb
add
dec
cmp
pop
inc
xor
test
sub
test
movsb
out
rorl
addl
jbe
pop
dec
sbb
mov
out
fcmovb
test
push
stos
adc
cmp
div
bound
sub
imul
push
mov
xor
push
xor
scas
jl
add
adc
push
aas
inc
pop
pop
xchg
sbb
fidivrs
mov
addb
add
ret
jae
imulb
xor
dec
add
sbb
rcrl
out
vpsllw
rcl
jb
sbb
inc
addr16
inc
stos
push
sub
jle
dec
jb
lret
rcl
je
cmp
jae
dec
mov
jl
cmp
mov
cli
jo
dec
mov
sti
clc
negl
adc
insl
push
outsl
dec
in
aad
mov
cmpsl
fcmovnu
fnstenv
fcomps
subb
movsb
out
pop
addr16
insb
mov
add
popf
mov
popa
stos
faddl
xchg
xor
xchg
xor
cmpsl
mov
xor
dec
das
adc
cmpsl
dec
fbstp
adc
int
add
inc
dec
adc
rclb
popf
add
lea
inc
cmp
test
jb
fstps
sbb
sti
ss
dec
fs
dec
push
cmp
stos
xor
shlb
popa
sbb
pop
cli
gs
xchg
stos
fadd
jecxz
imul
push
gs
pop
je
xchg
lods
mov
mov
or
das
stos
cmp
adc
adc
mov
loopne
out
setns
adc
adc
xchg
pop
and
jne
or
daa
mov
mov
lds
sub
sbbl
gs
add
mov
and
mov
and
cmp
sbb
sub
data16
sub
pop
addb
jecxz
lea
loope
loop
mov
jge
inc
pop
sub
test
mov
fcmovb
mov
test
xor
les
adc
notb
ror
adc
pop
add
insb
movups
dec
movsl
daa
shl
daa
stc
inc
push
es
dec
pop
fisubl
movsb
sub
jnp
out
mov
sub
jo
lods
jl
push
shrb
add
dec
es
adc
out
movsl
xchg
sub
mov
push
pop
push
mov
pop
jns
xchg
inc
mov
dec
pusha
clc
mov
scas
loopne
pop
jnp
jle
setno
mov
pop
xchg
xor
sub
xchg
cmp
adc
xorl
mov
mov
jno
xor
pop
mov
pop
call
test
dec
int
jne
pusha
testb
pop
jp
movsl
and
testb
cwtl
mov
or
imul
sbb
dec
sahf
lcall
in
add
xchg
jo
inc
push
dec
icebp
ret
or
in
ret
in
lock
sbb
xor
sbb
adc
mov
mov
mov
pop
inc
cmc
mov
hlt
rolb
cwtl
ucomiss
sub
push
mov
test
fisubrl
jb
fiadds
lds
cld
popf
mov
outsl
daa
mov
popf
adc
cmc
mov
sub
adc
fdivs
mov
call
jge
dec
push
pop
dec
insb
into
call
rcll
clc
push
pushf
dec
ja
cmp
fmull
and
out
inc
test
outsb
int3
pop
lcall
div
or
leavew
xchg
xchg
ficomps
ret
mov
pushf
arpl
into
rorl
js
mov
or
test
shlb
out
jmp
scas
sbb
xorb
push
adc
cltd
pushf
stos
push
jnp
sbb
addr16
jg
sub
dec
xchg
cmp
xor
lret
mov
xchg
sarb
lret
rorl
cs
xor
cltd
imul
popf
cmpsb
pop
sub
mov
dec
mov
push
divb
dec
outsl
into
sbb
shll
mov
mov
fs
orl
mov
gs
mov
push
add
or
in
or
mov
pop
sbb
xor
outsb
jecxz
dec
das
or
mov
sub
ljmp
inc
ret
pop
xor
mov
int
loope
cwtl
in
cld
cmp
sbb
rolb
or
sub
adc
or
add
inc
imul
icebp
loopne
mov
pop
ret
push
addr16
dec
int3
es
jno
insb
xchg
xor
inc
cmp
fisttpll
adcl
jne
addb
adc
xorb
pop
fdiv
cltd
mov
push
push
jmp
fcmove
dec
out
xchg
aad
sub
cmp
mov
jl
inc
push
fisttps
xlat
ss
jb
mov
lds
push
push
mov
mov
jmp
cmp
cmp
mov
imul
inc
push
pop
mov
repz
ret
and
or
rcl
mov
jp
jmp
fsubrs
pushf
stc
push
into
idivb
call
cwtl
inc
loope
movsb
push
std
xchg
xchg
cmp
fwait
adc
xchg
jo
jle
or
or
out
mov
inc
testl
push
mov
jbe
divl
sar
fmul
icebp
int3
std
cmc
pushf
xchg
add
out
pop
xchg
sub
jle
xchg
fcomi
outsb
pushf
gs
lds
cmpsb
idivb
pop
xchg
and
adc
mov
xchg
fdivr
inc
pop
xchg
cmp
fsts
push
xor
pop
cmp
or
fwait
sub
out
push
sbb
add
pop
mov
and
push
and
xlat
and
sub
sbb
mov
aas
xchg
leave
mov
cwtl
adc
push
fdivl
push
testb
imul
repnz
xchg
add
jmp
fldl
aam
xchg
add
pop
aam
jge
sbb
pop
insl
test
xor
pop
push
addr16
leave
jne
jae
andb
lcall
xchg
jmp
inc
push
ret
or
ss
insl
xor
lods
test
cmp
iret
jns
mov
bound
jnp
mul
jmp
fiaddl
xchg
ret
mov
out
cs
fldenv
cwtl
mov
enter
loope
add
cs
and
bts
mov
pop
jo
adc
and
add
adc
inc
aam
add
outsb
jo
popa
pop
cli
aam
cmp
jmp
jno
or
int
xor
insl
dec
dec
sti
arpl
imulb
mov
pop
int
ja
dec
imul
xor
or
or
insl
pop
popa
xor
dec
nop
pusha
into
repz
into
icebp
repnz
je
xor
inc
loope
mov
movsl
pop
sahf
nop
push
idivl
xor
stos
fwait
pop
je
cmp
dec
adc
testb
inc
sbb
xor
bound
push
insb
movb
pop
lock
iret
fs
xchg
call
fildl
and
call
and
inc
xchg
xchg
sti
dec
dec
mov
push
cmpsb
mov
ret
sub
shll
sahf
lds
pop
std
aas
cmp
out
fldt
pop
popa
fs
mov
std
adc
pop
sbb
call
jecxz
xchg
lock
pop
fst
dec
inc
mov
jmp
xor
pop
cmp
sar
and
sub
lcall
scas
inc
lahf
or
js
dec
jge
or
hlt
addr16
xor
inc
sbb
dec
dec
imul
xchg
xor
or
imul
jns
out
sub
cmp
scas
lret
xchg
dec
sub
lods
orl
insl
sub
add
hlt
jmp
xor
or
bound
xchg
pop
jb
jno
sub
sub
dec
and
push
aaa
fs
pop
adc
scas
pop
xchg
or
test
mov
cmp
cmp
and
idivl
shlb
fs
or
jns
xchg
dec
pusha
lock
pop
cmp
fisubrl
jo
inc
sbb
pop
push
testb
xchg
roll
out
sub
movsb
arpl
mov
mov
inc
popf
and
out
pop
xlat
and
xor
add
lods
mov
mov
ja
sbb
push
push
in
out
xor
cli
pop
pop
enter
lahf
enter
les
dec
dec
mov
sub
push
jno
adc
call
dec
js
jno
pusha
mov
flds
aaa
popf
fimuls
gs
push
pop
adc
mov
sarl
inc
inc
cmp
lds
xchg
lods
ljmp
ss
cmp
pushf
pop
repz
testl
negb
xor
in
nop
loopne
xchg
mov
repnz
iret
push
popa
lock
jp
jmp
mov
push
out
cmp
pop
in
lods
mov
pop
jne
mov
push
rolb
inc
pop
mov
fisttpll
mov
rorb
out
jecxz
fs
in
addr16
add
mov
cmpb
push
fsts
xchg
sbb
mov
inc
add
adc
or
xchg
shl
jbe
fimuls
test
es
push
ret
pop
xor
insl
arpl
ror
addr16
mov
jo
mov
sbb
mov
insl
in
push
xchg
sahf
fcmovnb
out
scas
xor
and
ficompl
jp
test
xchg
ljmp
fdivrl
mov
and
ljmp
mov
mov
xor
rcr
data16
sbb
incl
pushf
sbb
inc
push
inc
mov
loopne
lock
pop
push
xchg
fadd
jecxz
jmp
and
add
pop
adc
sbb
cmp
ss
xchg
cli
cmp
push
push
xchg
clc
cmpsb
and
sbb
sti
les
xchg
mov
jecxz
mov
loopne
jb
pop
aad
mov
in
fwait
fs
jp
cmpsb
icebp
es
call
mov
sti
xchg
mov
dec
cmp
insb
test
pop
shrl
or
xchg
mov
push
dec
repz
mov
jecxz
sbb
pop
push
clc
push
push
cmp
pop
xchg
xchg
add
ret
jno
mov
adc
jg
hlt
imul
loopne
xchg
mov
jge
mov
mov
loopne
into
out
roll
jne
and
in
pop
or
stc
lea
adc
movsl
stos
fwait
clc
sbb
pop
mov
mov
add
xor
es
stos
sub
dec
add
sarl
xchg
or
add
les
add
inc
popa
push
push
sbb
cmp
sbb
sub
add
loope
dec
jne
push
cltd
adcb
lds
push
loop
icebp
pop
lahf
lcall
sbb
enter
pushf
jp
and
or
test
sub
and
mov
and
fsubr
adc
add
or
pop
popf
cmp
ds
xor
xchg
bound
jge
addl
cmp
mov
jae
sbb
push
dec
pop
fdivrp
mov
mov
shr
out
clc
inc
pop
add
push
mov
testb
mov
sbb
adc
inc
mov
aam
pop
aad
jns
repnz
push
dec
test
adc
lea
shll
ds
xor
lahf
pop
mov
fwait
add
pop
or
dec
pop
movsl
dec
and
out
mov
sub
mov
cwtl
out
sbbl
mov
je
mov
movsb
inc
cwtl
sbb
push
mov
jb
mov
lret
or
into
sarb
dec
or
ficoml
shrl
and
jg
lods
ja
cmpsl
mov
push
xchg
cwtl
jb
dec
mov
inc
hlt
dec
pop
shlb
div
std
mov
or
xor
out
push
aad
mov
xchg
dec
addr16
push
xchg
mov
and
or
sub
inc
clc
push
jp
add
xchg
mov
dec
pop
divl
pop
jb
and
cmpsb
add
loop
jl
xor
jecxz
and
stos
mov
es
out
inc
or
or
lret
loopne,pn
push
xor
rcl
arpl
xlat
pop
pop
mov
int
lret
xchg
dec
dec
lahf
insl
jmp
fidivrl
fbstp
test
loop
push
sti
cs
or
aaa
adc
sub
cmp
aam
xor
sti
in
outsl
and
les
lods
dec
lcall
jg
xor
or
lods
pop
sbb
in
aam
shrb
insb
cmp
xlat
pop
dec
sti
xchg
pop
jbe
add
fildll
adc
sub
inc
testl
nop
add
jae
cmp
pop
sub
jecxz
psubq
ljmp
cmpsl
adc
dec
enter
push
add
lods
das
fldcw
std
mov
mov
pop
sub
inc
jg
bound
dec
mov
xor
lahf
shrb
inc
out
inc
mov
out
pop
push
sub
sbb
js
mov
sub
lods
shrb
lea
or
mov
shlb
and
dec
cmp
mov
add
push
daa
push
mov
int
mov
fs
sbb
sbb
loope
dec
pop
mov
jmp
dec
bound
test
int
ss
ret
and
das
lock
sub
mov
or
mov
dec
push
shll
sbb
and
mov
pop
mov
sub
sub
sub
mov
test
test
enter
xchg
pusha
dec
rclb
call
xlat
push
add
or
mov
dec
xchg
stc
jo
mov
rol
add
push
xchg
fmull
leave
cmp
rcll
push
fistps
sub
fsts
add
jmp
jmp
sbb
aas
cmp
adc
sbb
aam
push
or
ror
outsl
movsb
rorl
xchg
jnp
loopne
lock
xchg
dec
push
and
mov
pop
mov
or
fst
inc
jns
cltd
inc
mov
rolb
test
xlat
push
mov
pop
push
js
xchg
pop
xor
sbb
fstp
dec
inc
fcmove
jge
roll
arpl
lds
adc
mov
leave
cli
dec
dec
scas
pop
aas
push
ficompl
adc
cmp
mov
mov
mov
mov
mov
push
mov
sub
jecxz
mov
clc
fadd
dec
sub
mov
mov
inc
cmp
hlt
xor
dec
sbb
shrl
xlat
pop
xchg
inc
mov
nop
adc
daa
sbb
aas
xchg
out
and
cmp
mov
in
inc
or
mov
add
inc
sbb
mov
decb
cmp
xor
push
xchg
sbb
stos
enter
sub
jns
adc
xor
cmc
in
out
rcr
or
ds
or
xor
sbb
nop
cwtl
out
mov
xor
aam
pop
mov
fstpl
stos
push
dec
shrb
sbb
mov
jmp
mov
cmp
dec
das
imul
in
xchg
out
dec
mov
push
sub
mov
popf
scas
pop
lret
jbe
dec
shll
cmp
pop
xchg
or
add
or
dec
add
jp
lock
into
insb
sbb
js
or
gs
mov
test
inc
add
loopne,pt
cld
mov
mov
pop
cmp
out
das
rclb
push
push
mov
mov
xchg
fucomp
xchg
mov
std
add
mov
sub
adcl
adcb
xchg
mov
sub
pop
xchg
lods
push
fiadds
cwtl
inc
test
stos
fimuls
pop
add
or
ret
idivb
loop
fidivrs
jecxz
xor
inc
ss
jle
decb
pop
xor
xlat
fiaddl
inc
data16
lock
ds
add
add
cmp
sbb
mov
jns
scas
inc
loope
int
in
pop
ss
mov
dec
test
xchg
lret
or
mov
sbb
adc
es
popf
out
out
shr
scas
pminsw
mov
push
push
push
test
add
dec
jecxz
sti
fstpt
jle
sbb
rol
dec
mov
scas
cmp
lea
add
cmp
mov
shr
cmp
fs
out
aad
lcall
stos
dec
pop
imul
test
scas
subl
aaa
sbb
aaa
inc
lea
es
in
bound
call
hlt
push
add
dec
push
cltd
xchg
and
mov
xchg
ret
dec
pop
insb
popf
repnz
cwtl
jno
mov
lds
sbb
pushf
or
scas
pop
or
mov
push
lahf
push
sub
pop
std
sbb
in
mov
inc
xor
or
loopne
shlb
in
pop
push
xor
shll
pop
in
mov
ficomps
clc
call
push
adc
mov
mov
pop
xor
mov
mov
sti
ljmp
stc
cmp
movsl
out
adc
mov
rolb
lahf
addr16
dec
test
lds
sti
aam
mov
das
adc
insl
push
cld
jmp
mov
sarb
data16
faddl
and
bound
jo
subl
pushl
or
int3
ficompl
or
cmp
sbb
cltd
es
cmpsl
lret
ds
outsb
scas
shll
mov
imul
dec
jmp
lret
jo
xchg
or
sub
mov
sbb
push
ret
lods
xchg
cmp
jmp
aam
xchg
sbb
pop
pushf
cld
insb
jge
outsl
or
test
aas
xchg
sub
scas
out
neg
push
mov
outsl
fsubl
stc
push
mov
and
lods
stc
sub
mov
push
arpl
push
jbe
out
les
les
jno
or
adc
dec
and
xchg
push
es
pop
and
lret
shll
repnz
jb
loopne
mov
inc
pusha
jnp
add
dec
jp
insl
xchg
ror
add
cmpsb
push
cmp
push
dec
inc
test
data16
xchg
sbb
cwtl
jg
or
in
dec
or
lea
and
mov
lretw
xchg
clc
jnp
jae
cli
adc
mov
scas
jbe
add
enter
fsubp
and
dec
mov
inc
dec
out
aad
inc
shlb
add
aaa
push
cmp
dec
pusha
pop
int3
pop
hlt
insb
movsb
hlt
or
or
pop
xorb
lods
xchg
add
push
aam
pop
mov
lahf
dec
lcall
dec
out
int3
shl
xchg
nop
dec
into
pop
xor
inc
lea
stos
aas
adc
add
mov
mov
sub
repnz
adc
push
and
jp
stos
sbb
adc
or
andl
cmpsb
clc
mov
aas
cmp
rcrb
cmp
jg
push
xchg
lods
call
inc
xor
mov
das
shrb
inc
jle
sub
pop
and
push
push
in
push
push
int3
mov
or
loope
mov
fs
lds
ds
mov
fwait
mov
sub
push
push
or
xchg
lret
jbe
mov
pop
lret
ljmp
ja
sbb
leave
mulb
rcrl
inc
sbb
jbe
and
adc
dec
popa
mov
loop
mov
jge
cltd
fstps
cmp
lock
sub
jb
loopne
pop
adc
push
lret
imull
mov
xchg
adc
es
push
lock
push
push
mov
xchg
fsubrs
jb
dec
push
and
ds
pop
push
cmpsb
xchg
testb
inc
mov
adc
push
jae
ljmp
sub
and
xor
push
xchg
xchg
ljmp
jmp
out
jecxz
aas
sarb
pop
int3
pop
mov
loopne
sbbb
jae
leave
xlat
shlb
add
and
imul
test
call
movsl
jne
pop
push
lcall
pop
arpl
mov
arpl
shl
inc
sbb
std
lcall
loopne
mov
xchg
adc
aaa
lds
enter
mov
sti
repz
add
xor
adc
leave
xchg
or
push
jnp
out
les
mov
adc
mov
aas
bound
push
movsb
sub
daa
and
xchg
pop
mov
loopne
jmp
mov
jb
lods
outsb
in
jl
stos
mov
inc
test
or
nop
and
pop
inc
inc
cmp
mov
les
aas
dec
or
adc
test
or
add
mov
jb
loop
aas
fldenv
cmp
iret
cmp
adc
hlt
adc
in
jo
enter
push
push
inc
ret
movsl
cltd
mov
jmp
test
and
popl
lret
mov
cmc
dec
mov
adc
sbb
dec
dec
add
jnp
fwait
mov
jo
or
mov
pop
xor
sti
mov
jp
ret
stos
xchg
mov
cmp
popa
push
cld
dec
xor
sbb
adc
sbb
inc
or
push
mov
sarb
mov
mov
and
rorl
sbb
movsl
sbb
mov
popa
ja
arpl
fs
dec
jns
xor
jecxz
push
out
scas
js
mov
dec
popf
int
push
sub
jbe
flds
push
push
mov
cmp
lret
outsb
ret
pop
adc
and
jmp
pop
leave
mov
or
imul
shrl
push
fidivrs
cli
popf
pop
ficompl
into
inc
sti
dec
in
mov
or
xchg
popa
mov
inc
pop
movsl
imulb
in
xchg
mov
add
mov
dec
adc
out
or
sub
sahf
jle
mov
popa
dec
pop
shlb
inc
cli
out
out
and
inc
xor
or
xchg
pop
xchg
jo
fistpl
jge
inc
minps
gs
pop
dec
mov
in
orb
mov
imul
mov
mov
call
xor
inc
mov
cwtl
sti
mov
int
add
cwtl
mov
cmpsl
sub
andb
mov
test
lahf
fwait
addr16
aaa
push
dec
mov
pop
xlat
pop
cmp
dec
xor
mov
lahf
pop
mov
roll
jnp
push
dec
sub
push
jmp
sbb
fsubrl
insb
sbb
sbb
movsl
movsb
adc
mov
inc
and
mov
pop
inc
andl
aam
std
or
mov
ss
lret
push
push
les
mov
pop
jg
out
adc
adc
and
xor
jmp
fisttpl
adc
or
xor
aad
sbb
mov
psubd
fs
insb
push
cmp
xchg
mov
dec
mov
inc
sub
adc
sub
jp
jo
mov
sbb
jp
sbb
in
imul
add
pop
inc
or
xchg
pop
js
sbb
outsl
cmp
pushf
sti
popa
and
call
aas
stos
sub
ja
lret
test
cmpsb
mov
loope
add
add
adc
xor
daa
push
push
out
in
mov
push
ja
ljmp
mov
or
out
leave
sbb
jecxz
fucomip
icebp
loop
jbe
enter
and
mov
andb
sub
mov
xor
mov
xchg
fwait
push
fldenv
imul
in
es
test
sbb
dec
push
fsub
pushf
add
xor
aaa
or
mov
mov
jbe
pushf
cmpsl
adc
xlat
jb
outsl
fwait
and
scas
pushl
pop
repnz
mov
add
lea
fdivrs
jmp
loope
mov
call
xchg
fidivs
push
test
and
subb
inc
dec
pop
mov
sbb
mov
bound
mov
mov
scas
fwait
test
outsb
adc
xor
cmp
add
stc
sahf
in
lret
jbe
jo
movsb
inc
ds
dec
outsl
fists
pop
fs
xor
rcr
bound
dec
inc
loop
push
pop
pop
jmp
int3
xorl
sub
mov
jo
sub
outsl
jg
ret
and
mov
pop
push
jns
xchg
test
jbe
xor
jae
mov
fstpl
jmp
and
adc
add
mov
cmp
push
aaa
lcall
xor
or
adc
int3
out
mov
and
test
stc
mov
in
pop
mov
pop
sub
hlt
test
cmp
xchg
arpl
sbb
frndint
adc
mov
and
rcll
lock
mov
xchg
pop
mov
and
add
inc
push
add
rcrb
out
mov
fidivrs
sub
pop
add
lods
push
out
pop
aaa
popf
test
sub
aad
hlt
popf
jb
mov
push
cmp
js
inc
dec
mov
cmp
aaa
mov
out
dec
pop
ds
mov
in
clc
pop
mov
add
push
mov
pop
pop
int
repnz
sub
out
dec
daa
xor
adc
decb
xchg
pop
push
insb
sub
dec
or
sbb
inc
shll
cmp
hlt
inc
rcrl
cmp
sbb
stos
pop
xchg
js
hlt
push
aaa
push
in
jl
pop
inc
or
leave
dec
inc
scas
lcall
jae
scas
mov
js
test
hlt
nop
les
std
repz
xchg
mov
nop
outsb
loopne
les
out
js
test
lret
into
popf
jle
push
jecxz
add
dec
ss
sub
lock
int
mov
inc
mov
insb
aad
jle
wrmsr
fs
lahf
adc
sahf
aad
test
mov
xor
xor
mov
xchg
and
jge
clc
dec
lods
ja
jb
pusha
rcrl
insb
lock
imul
ljmp
insl
add
in
mov
inc
pop
shl
mov
gs
xor
loopne
mov
fwait
out
push
dec
fs
pop
mov
imul
xor
loope
xor
ret
cli
inc
int3
imul
sub
int3
not
push
jnp
cltd
dec
adcl
xlat
xor
test
mov
add
imul
push
lock
xor
sahf
test
inc
inc
cld
ja
sahf
mov
mov
and
jb
inc
ret
pop
sahf
aaa
mov
jb
mov
test
fidivs
jae
inc
fwait
jb
push
lods
bound
mov
xchg
movsl
add
sub
adc
mov
or
addb
push
ja
add
xor
add
idiv
cmpsl
adc
jne
add
xchg
cwtl
inc
leave
mov
push
shlb
cmc
add
ret
out
mov
adc
aas
sarl
push
xchg
fcmovbe
dec
aaa
mov
jle
lds
imulb
sub
push
scas
push
sbb
xchg
stc
in
mull
push
stos
fs
frstor
pop
cli
cmp
notb
dec
adc
cs
jecxz
push
addl
dec
mov
scas
cmp
fwait
sub
jno
sub
pop
dec
das
shl
inc
jmp
and
jns
adc
inc
xor
pop
nop
mov
iret
sarl
stos
xchg
fwait
cltd
xchg
xlat
int3
jle
cmpb
mov
lock
mov
fwait
pop
dec
pop
lods
popf
sbb
pop
pop
es
mov
mov
hlt
aad
cmp
std
aam
push
out
dec
sub
pusha
jle
loope
addr16
jmp
add
sub
jge
dec
inc
pop
jns
jbe
mov
out
mov
int3
push
cmp
xor
int
popf
adcl
mov
push
int3
mov
adc
sub
into
shll
sub
repnz
sub
aad
sbbl
jnp
xor
cmp
dec
jl
cwtl
shll
xor
filds
into
cmp
cmpsb
frstor
sbb
dec
sub
mov
fsts
pushf
ljmp
sbb
or
pop
scas
push
jge
lret
daa
addr16
rcl
pop
int
insb
incl
mov
jbe
nop
xor
xchg
mov
dec
and
xorb
or
in
jecxz
jns
mov
in
and
popf
out
jle
psrad
add
cmp
fucom
in
sub
cltd
push
xchg
jmp
mov
push
add
push
sti
iret
push
in
add
or
lcall
lret
negb
fsts
ret
push
dec
out
xchg
push
fwait
ret
stos
ja
enter
rclb
std
or
sbb
pop
fstp
pop
cmp
aam
sbb
int
ja
int3
cmp
pusha
aam
es
sub
dec
bound
ljmp
movsl
xchg
dec
mov
ja
xchg
pushf
stos
ret
shr
sub
in
jmp
inc
sbb
mov
dec
push
push
xlat
sbb
fsubrp
fcmovnb
mov
cs
std
rol
mov
sub
dec
add
mov
dec
xchg
mov
jbe
rolb
fisttps
sbb
fidivrs
xorb
mov
lea
inc
cltd
xchg
and
push
xor
rolb
popf
sbb
xchg
push
cmpl
aaa
imul
roll
daa
fucom
pop
data16
sub
into
dec
pop
subb
adc
adc
leave
sub
dec
mov
inc
mov
mov
icebp
xlat
js
leave
ss
sbb
aad
adc
sub
cld
test
movsb
lods
push
push
and
insl
mov
sahf
loope
sarb
or
inc
sub
pop
lea
pop
in
and
or
mov
jg
dec
dec
xor
pop
jmp
push
xor
out
dec
repz
outsb
jle
dec
push
push
and
push
xchg
dec
ss
lret
mov
cmpsb
add
add
xor
daa
cmp
out
daa
mov
jge
push
popf
mov
int
jno
aad
adc
pop
std
adc
add
and
sub
or
pop
or
aas
out
xchg
or
fistps
inc
ss
jmp
imul
cmp
testl
jp
dec
sub
mov
cmp
sbb
sti
mov
cmpb
push
in
jns
pop
jmp
dec
jg
cmpsb
add
cs
push
es
and
and
gs
xchg
cmp
rcrb
in
js
lods
cmp
or
inc
xor
xchg
xor
mov
fists
call
popa
lods
inc
mov
inc
pop
jns
bound
push
push
mov
xor
rcll
movsl
sbb
add
ja
fiaddl
xor
xorb
cltd
repz
dec
or
cld
aad
jbe
jns
xchg
dec
in
mov
sarb
jle
cmp
ficoms
hlt
andb
mov
mov
push
pop
enter
jmp
xor
jge
mov
pop
insb
rcll
data16
popa
and
std
pop
adc
sub
inc
push
jns
adc
xchg
enter
xchg
mov
call
fwait
sub
sbb
xchg
ja
mov
jp
cmp
jmp
inc
cmpsl
add
lret
jmp
mov
jno
idivb
inc
xchg
xchg
or
fisubrs
mov
popf
cmc
mov
inc
lods
push
mov
jle
or
imul
cli
pop
xchg
lcall
ja
lret
inc
and
xchg
push
jo
pop
xlat
xor
repnz
mov
pop
jbe
xchg
mov
add
sub
popf
or
adc
pop
lcall
jle
mov
jmp
xor
je
push
int3
gs
xor
push
dec
gs
js
adc
pop
mov
in
and
mov
mov
sub
push
fistps
adc
cltd
mov
fsubl
data16
test
sti
and
inc
pop
shll
loop
loope
roll
pusha
int3
mov
stos
and
mov
stos
pop
add
mov
mov
cs
push
add
jb
pop
jl
mov
in
aas
mov
outsl
jnp
and
dec
cltd
inc
cli
push
xchg
leave
loop
xor
dec
and
addb
lret
mov
push
dec
jb
loopne
mov
fmuls
arpl
scas
lret
or
xchg
inc
jmp
pop
pop
pop
daa
inc
insb
dec
bswap
push
mov
dec
cmp
cltd
cmp
jmp
dec
mov
inc
es
cmp
rcrb
sbb
sbb
push
into
out
jmp
fcomip
xchg
add
cmp
mov
add
inc
inc
mov
aam
arpl
mov
cmc
xchg
sbb
xlat
leave
sti
cmp
mov
add
shr
pop
xor
stos
sub
sbbb
push
stos
cltd
mov
xchg
aaa
xor
pushf
rol
invlpga
addl
shlb
mov
inc
in
icebp
cli
add
push
push
xor
test
adc
mulb
cmp
addb
shlb
loop
push
ljmp
add
outsl
call
fwait
imul
pop
testb
pop
test
pop
ds
sti
in
shr
xchg
lret
sub
imul
jle
push
jo
xchg
jmp
jp
sarb
repz
xchg
mov
fdivrl
pop
jl
out
scas
lods
cmp
or
es
jno
mov
insl
dec
mov
loopne
jne
movb
adc
js
shlb
pop
dec
fsubr
jp
push
mov
mov
out
xor
mov
jmp
mov
fs
out
add
add
push
sbb
sbbb
jp
dec
jge
cmpsl
sub
enter
xchg
xchg
push
ret
lahf
addr16
notb
testl
out
mov
inc
movsb
cld
mov
inc
pop
sub
js
cmp
fnsave
mov
mov
inc
int
jmp
shlb
es
push
cmp
stos
adc
test
inc
add
loopne
mov
loopne
ja
sub
sbb
lcall
sbb
xchg
push
std
push
imul
inc
iret
popa
lret
pop
mov
mov
ficoms
pop
add
jae
mov
jo
cmp
hlt
mov
lds
rcrb
js
in
xor
pop
fistpl
xor
and
mov
arpl
sbb
sahf
or
pushf
or
imul
pop
dec
loop
xchg
mov
lret
sti
stc
push
dec
xor
test
mov
adc
cmpsb
ja
mov
test
mov
xor
bound
addr16
mov
jno
ret
mov
imul
jbe
inc
or
int
pushf
mov
mov
hlt
rcrb
ja
jle
popa
push
pop
sub
inc
mov
pusha
pushf
and
pop
pop
and
das
sbb
push
into
std
ss
out
mov
xor
or
and
ljmp
std
js
push
movsl
pop
jae
or
arpl
jp
pop
lds
int
mov
or
mov
cmc
in
sbb
cmpsl
xor
gs
aaa
in
repnz
sbb
into
enter
or
imul
rcrb
push
fsubr
loop
cltd
fs
push
jmpw
int
lret
dec
add
mov
lds
sbbl
subl
mov
pop
loope
mov
stos
hlt
in
int
inc
cmpsl
lret
adc
pop
xor
dec
in
mov
stos
dec
test
ja
cmc
repz
frstor
cltd
adc
xlat
dec
leave
cmp
inc
cld
xchg
mov
testb
sbb
fcmovnb
dec
adc
outsl
sub
pop
in
mov
jl
enter
xchg
lods
jge
adc
sub
jnp
pop
outsb
push
lret
and
lds
lods
enter
sub
insb
push
push
std
mov
insb
pop
xchg
xchg
out
sbb
lods
xchg
inc
and
xchg
inc
pushf
mov
das
push
test
lods
pop
dec
push
test
out
inc
pop
insb
ss
lahf
adc
inc
pop
enter
hlt
imul
addr16
push
add
shlb
or
hlt
testb
xor
mov
or
fisttpl
mov
sub
jno
pop
enter
push
jl
mov
aas
push
sub
mov
inc
or
adc
ficoml
xchg
cld
cwtl
ja
and
sbb
jmp
aaa
sbbl
iret
inc
shl
lcall
push
sbb
ss
cltd
stos
fbld
bound
add
lock
mov
inc
mov
push
fbstp
das
clc
cmp
negl
mov
mov
inc
and
hlt
fcoml
testb
pop
sub
add
ss
xor
cmpsl
cmc
cli
xchg
fadd
aad
addr16
push
hlt
adc
mov
or
scas
jmp
mov
repz
insb
dec
mov
and
xlat
cli
insb
addb
inc
mov
add
lea
notl
jg
cld
sti
cmpb
mov
outsb
and
test
and
pusha
test
stos
aas
pop
mov
es
outsb
movsl
sbb
je
fldcw
add
add
mov
or
cwtl
nop
add
stos
jae
subb
xor
dec
pop
xchg
js
lret
xchg
arpl
jle
xorl
jb
inc
cmp
fmuls
ja
test
ret
sub
test
adc
and
cmpsb
pop
and
jmp
xor
test
movsl
sbb
push
loop
jo
jb
sbb
not
into
ljmp
inc
int
out
xor
and
push
shl
mulb
pop
dec
pop
ljmp
jbe
cltd
movsl
pop
stos
dec
stc
dec
andb
xor
and
mov
xor
push
movsl
pop
sti
jp
pop
pop
mov
fwait
mov
jo
cmpl
or
stc
shlb
jmp
mov
push
xor
push
sbb
sub
jmp
xor
pop
int3
mov
in
add
loopne
stos
mov
cld
inc
adc
sub
pop
aaa
sub
je
push
lcall
les
dec
sub
pop
fisttpl
iret
loope
cmp
frstor
mov
xlat
sub
lret
and
fsubl
mov
lea
xchg
hlt
xchg
xlat
xor
pop
mov
add
leave
xchg
jmp
or
push
jg
movsb
mov
in
jns
push
pop
lock
outsl
ds
ja
mov
sub
or
scas
cmp
dec
inc
int3
stc
dec
inc
xor
lods
cmp
push
sti
push
addr16
mov
fistpll
arpl
mov
mov
cmpl
movsb
xor
pop
mov
pop
cli
jno
fisubrl
jle
cmp
pop
push
lock
into
mov
icebp
lea
sub
insl
es
cmpsl
fisubl
sbb
enter
dec
mov
nop
neg
popa
or
fprem1
sbbb
pop
lret
aaa
inc
stos
dec
mov
andnps
pop
pop
ret
cmp
fldl
cmp
adc
stc
mov
xchg
jnp
mov
and
mov
jle
cmp
daa
addr16
rcrl
jo
mov
push
sbb
test
push
popf
je
add
jp
mov
addb
outsb
inc
pop
or
pop
cmp
cmp
aaa
cmp
repz
xlat
jo
popf
pop
cmc
nop
call
pop
enter
in
loop
enter
data16
or
adc
fwait
dec
mov
outsl
cmp
out
fisubrs
pop
mov
roll
leave
dec
push
mov
cmp
xor
inc
insl
enter
mov
xor
mov
jo
sub
jns
rcll
inc
mov
pop
bound
sub
jecxz
jns
ljmp
addr16
push
mov
gs
mov
cs
mov
sti
inc
cmpsb
insl
mov
iret
jmp
or
imull
ja
outsb
mov
aad
mov
sbb
jle
or
psubq
inc
adc
mov
pop
push
mov
ret
sbb
lea
std
pop
mov
xlat
jns
stc
push
cli
es
adc
or
lret
mov
dec
jg
cmc
cli
mov
in
mov
sub
mov
fnstenv
rorl
sub
sub
sub
jnp
jecxz
int
push
aaa
jns
dec
pop
mov
test
cli
fwait
xchg
pop
js
sub
mov
decl
roll
mov
sub
push
cmp
scas
repz
int
push
icebp
adc
imul
insb
pop
clc
dec
mov
pop
xchg
mov
mov
lahf
icebp
stos
mov
pop
and
dec
addps
out
push
mov
cmp
xor
adc
insl
push
xchg
dec
cmpb
sar
cltd
xor
inc
mov
imul
lds
stos
mov
cmpsb
and
fidivl
aad
and
test
push
sbb
fldt
in
pop
fcmovbe
adc
stos
out
aad
mov
and
inc
push
mov
jns
outsl
lret
in
xor
cmp
dec
dec
cmp
testb
in
pop
inc
subb
loopne
dec
push
jg
clc
add
hlt
mov
push
ljmp
stos
pop
hlt
sbb
iret
xchg
xchg
mov
add
pop
or
pop
lret
filds
fsubrs
add
lods
inc
insb
sub
inc
iret
lret
imul
and
jae
push
jns
fwait
cmp
scas
arpl
push
mov
dec
lods
movsl
fidivl
pop
lods
pushf
je
arpl
mov
repnz
int3
stos
dec
das
inc
dec
lret
sarb
out
add
push
cmc
out
stos
and
outsb
cmpsb
movsb
nop
test
lret
pop
fiaddl
dec
out
mov
clc
movsb
sbb
insl
in
add
or
xor
jns
xchg
rcrl
lret
inc
out
test
push
or
add
adc
gs
adc
push
or
fucomi
jmp
cmpsb
in
jg
dec
std
sbb
in
les
add
std
inc
js
cmp
daa
xor
daa
mov
pop
outsb
ss
cmp
push
adc
inc
adc
int3
sbb
sahf
add
jno
inc
js
mov
shll
add
xchg
test
fcmovnb
fcoms
imul
lret
add
push
xchg
add
jg
enter
cli
sbb
fists
jo
xor
cmp
repnz
rcr
xchg
sbb
roll
and
xor
fsubl
lods
sar
stos
dec
js
or
pop
cmpsl
cmc
xor
in
lret
in
pcmpeqb
lahf
popa
dec
bound
es
fwait
push
mov
xor
jns
ja
add
mov
popf
lods
daa
scas
dec
add
mov
inc
sbb
popa
pop
add
adc
cmp
mov
sti
cld
aam
int
inc
addl
push
shll
add
outsl
xchg
cwtl
clc
jbe
popa
jns
enter
xor
lods
sub
pop
jnp
pop
mov
xor
cmc
cwtl
xor
jmp
test
mov
cltd
adc
xchg
push
imul
mov
insl
mov
rcrb
scas
adc
es
pop
lods
inc
add
push
sbbl
mov
mov
jl
cmp
xchg
int3
add
inc
out
pop
pop
jecxz
pop
enter
ret
sbb
push
mov
inc
int3
xor
insb
adc
ljmp
dec
xor
push
cltd
fiadds
inc
sahf
fwait
and
push
bound
inc
out
test
add
je
subb
or
mov
push
aas
and
jnp
pop
push
cmp
push
lret
popf
dec
xchg
clc
push
jge
sub
cwtl
and
testl
cltd
jecxz
lock
cs
dec
lret
idivb
push
xor
fdivr
data16
repnz
orb
pushf
cmp
add
push
dec
jl
cmp
pop
pop
and
insl
pop
dec
mov
jmp
sub
jge
pushw
out
mov
inc
std
imul
test
cmp
inc
mov
test
adc
pop
lret
push
scas
dec
lds
push
sub
in
fsubrl
xchg
xor
ja
popa
jns
loopne
push
inc
icebp
ficoml
and
push
imul
mov
pushl
shlb
std
ljmp
js
aam
adc
cmp
lea
dec
pop
cli
aad
out
test
jae
dec
stos
fisttpll
test
aad
jb
loopne
imul
dec
push
sub
sar
in
mov
lods
cmp
ja
repz
mov
push
adc
mov
ja
lods
rcrl
xor
pushf
jle
fisttps
cmp
inc
out
lret
adc
xor
sahf
xor
jb
mov
inc
and
cmpb
fs
pop
jge
js
into
push
xchg
mov
and
lcall
daa
dec
lock
or
jae
lret
and
out
sub
mov
mov
xchg
inc
mov
insl
lcall
imul
push
sbb
jmp
mov
pop
call
cli
mov
shlb
adc
stos
adc
add
jnp
xor
aad
push
and
jo
jge
push
push
mov
mov
xor
lcall
cmpsl
mov
repz
movsb
mov
add
pop
lods
imul
or
aam
cmp
mov
cmp
sub
arpl
and
cld
mov
sub
mov
icebp
fcmovu
add
pop
inc
lahf
or
xor
sub
cli
int
ret
jecxz
sbb
adc
jecxz
cmp
fsubl
mov
jge
jo
mov
xlat
aad
push
jmp
pop
rorb
jge
les
push
sub
push
pop
mov
jp
cmpsb
mov
sti
jo
sub
test
lret
nop
dec
cmpsl
and
cmpsb
xchg
iret
or
push
mov
adc
or
test
push
xchg
fisttpll
scas
xchg
sbb
adc
push
incb
dec
rorl
add
mov
sbb
test
mov
fwait
idivl
cmp
and
mov
jbe
stc
dec
daa
ret
jle
lock
repz
in
add
mov
rclb
cwtl
cmpsb
sbb
daa
pop
pop
jbe
hlt
int
rcrb
negl
scas
jmp
xchg
out
dec
daa
add
xor
jbe
push
ds
lcall
xchg
sbb
cmp
xchg
cltd
negb
or
int3
push
scas
lods
jmp
jp
push
mov
mov
mov
adc
ret
fdivl
xor
movsb
mov
jmp
or
fistps
pop
rcrl
sahf
leave
in
repz
cmpsb
adc
std
pushf
inc
lcall
sub
lods
push
and
cmpsb
pop
cmp
adc
cmp
sar
cmp
iret
cwtl
add
sbb
movsl
or
xor
sbb
std
sub
ds
pop
outsl
das
loope
testb
push
mov
jge
test
fcomps
loop
cmp
fwait
mov
fwait
popl
xchg
mov
cmp
sti
pop
test
and
pop
aad
mov
jmp
insl
or
pop
pop
popf
lock
mov
mov
daa
dec
insb
inc
dec
cmpl
xchg
fildll
pop
inc
scas
je
mov
movsl
les
adc
loopne
sub
imul
pop
clc
cltd
pop
mov
scas
popf
inc
arpl
popa
jo
cs
imul
inc
loopne
sbb
pusha
pop
scas
jns
add
sub
stos
pop
mov
cmp
sbb
xor
rcl
jle
mov
hlt
cmp
adc
and
ret
inc
aam
aam
pop
mov
add
repnz
mov
and
es
cs
je
imul
cmpsl
sbb
add
add
fs
mov
outsb
xor
fcoms
and
pushf
push
xor
or
aas
fidivrl
fistl
enter
dec
push
xor
fisubl
dec
subb
lods
insl
mov
xchg
mov
mov
mov
sbb
jle
shrl
mov
movsl
lds
sbb
push
and
push
xorl
jb
insl
mov
in
sahf
es
jb
mov
dec
arpl
stc
rorl
sti
sti
mov
arpl
movsb
or
xchg
dec
in
lock
icebp
andb
leave
stos
mov
dec
loop
mov
outsl
hlt
mov
iret
jne
lea
fiadds
loop
dec
and
jp
rcll
mov
sbb
dec
loop
jb
leave
adc
sarl
adc
ror
mov
shl
push
lock
outsl
enter
mov
and
cld
mov
pop
mov
imull
xor
lret
ljmp
fwait
pop
mov
mov
jbe
push
cwtl
cmp
cmpsl
mov
pop
lods
push
sti
jecxz
cmpsb
pop
inc
mov
sbb
ret
mov
cmpsl
lds
jo
push
cmc
inc
cmp
push
int3
push
dec
in
xor
fists
inc
pop
push
xchg
cmp
mov
imul
lods
fst
jecxz
sbb
lret
adc
and
xorl
pop
cmp
aas
and
jne
inc
dec
dec
nop
jns
add
xchg
test
or
movsb
sahf
int3
and
test
in
rcrb
jno
mov
arpl
jae
mov
mov
jnp
mov
sub
mov
mov
aaa
lcall
pusha
pusha
movsl
les
jg
xor
lock
mov
jmp
scas
stos
sahf
pushl
mov
fdecstp
push
xor
scas
mov
dec
out
mov
sbb
mov
lods
xchg
xchg
xchg
movsl
ljmp
loopne
stos
cmp
or
arpl
rorl
jbe
jecxz
adc
sarl
enter
in
mov
dec
push
aas
mov
lret
xor
fwait
xor
pusha
sub
dec
in
jo
cmp
inc
pop
jo
andl
out
lret
pop
test
cmc
enter
pop
lods
pusha
adc
ds
xchg
lahf
inc
sarb
cld
sub
xor
ja
push
clc
inc
jge,pt
add
jg
les
std
cltd
jmp
pop
std
lock
pop
adc
dec
lcall
lcall
cmp
outsl
mov
test
push
pop
or
lret
idiv
mov
ljmp
cmp
or
or
xchg
and
add
mov
scas
data16
push
leave
xchg
inc
cmp
lret
mov
mov
les
sub
fdivrs
inc
inc
pop
test
pushf
pcmpgtd
xchg
xor
clc
add
loopne
xorb
stc
call
or
call
add
and
ret
and
mov
mov
outsb
push
cmp
sar
test
pop
cmp
sbb
js
xchg
and
into
cld
cmp
adc
adc
or
xchg
sbb
or
dec
adc
cmp
rorb
jg
outsl
in
orl
push
loopne
jo
cld
mov
push
jne
mov
test
ja
dec
jo
data16
cmp
lret
nop
or
and
out
int
fbstp
ss
and
leave
sbb
gs
pop
imul
cmp
cmpsb
add
les
push
xlat
icebp
inc
imul
popf
pop
adc
lods
lahf
adc
mov
test
mov
adc
inc
jge
adc
inc
pop
rcrl
sbb
mov
loop
repnz
bound
xchg
mov
mov
fstpt
sbb
jno
xchg
ja
cmpsl
fneni(8087
popa
xchg
scas
sbb
mov
and
out
test
int
or
push
out
mov
fsubr
jmp
sti
jnp
cmp
mov
call
ss
mov
fs
and
ljmp
int
stc
inc
mov
sub
ror
inc
imulb
push
mov
into
das
push
insl
push
sbb
stos
dec
or
subb
xor
jg
roll
pop
sbb
ficompl
sub
je
ljmp
add
push
adc
enter
testl
adc
pusha
add
xchg
lcall
rcl
ja
push
jecxz
or
jmp
into
jns
add
pop
xor
test
cmp
pop
mov
jnp
or
mov
push
ljmp
aas
inc
cmp
cmp
js
lcall
insb
pop
ja
inc
into
dec
into
scas
xchg
pop
scas
stos
sub
iret
stc
jl
dec
movsb
data16
jnp
stos
or
sub
sbb
inc
sub
in
cs
lods
jecxz
jg
push
mov
cmp
push
jecxz
cmp
sub
add
int
jo
xchg
aam
test
int3
addr16
das
fidivrs
js
mov
mov
push
push
bswap
or
inc
adc
mov
clc
stos
add
xor
repz
int
mov
dec
fs
ljmp
loop
popf
add
mov
jecxz
mov
xchg
ret
fcompl
sbb
mov
mov
aas
sets
pop
shll
loope
insl
adc
xchg
dec
mov
jecxz
inc
lock
mov
mov
fcomp
inc
in
jmp
xchg
cli
lds
xor
cld
pushf
fsubrp
add
adc
and
mov
cmp
cs
sbb
jecxz
pop
fucom
dec
sbb
das
xchg
out
fisttpll
dec
scas
mov
int3
sub
dec
fimuls
mov
js
mov
shl
lahf
rcl
pusha
jg
cmpl
push
aaa
dec
add
ljmp
shlb
jb
mov
mov
hlt
filds
push
out
movmskps
pop
mov
push
pusha
ss
int
imul
dec
addr16
mov
push
mov
pop
lock
rcl
adc
cmpsb
es
or
idivl
dec
lret
sub
mov
lcall
inc
pop
push
mov
into
or
repz
and
rol
popf
imul
mov
mov
imul
arpl
and
add
nop
pop
and
mov
pop
lret
lods
xor
mov
loopne
sub
ljmp
pop
mov
jle
add
inc
or
fstpt
popa
es
popf
lahf
jp
mov
nop
jne
push
aam
shlb
xchg
dec
xchg
out
movsb
movsl
es
dec
inc
pop
pop
push
divb
push
test
cmp
pop
ret
lods
xchg
js
mov
dec
jp
repz
xor
add
dec
fwait
icebp
mov
dec
xor
hlt
dec
mov
jle
imul
jb
cmpsl
mov
icebp
imul
test
dec
mov
arpl
addr16
and
ds
jae
xchg
add
push
cmp
std
lret
ret
mov
leave
pop
push
je
mov
xchg
in
punpcklwd
inc
xchg
xor
mov
mov
pop
sub
int
idivl
cmpsb
aad
push
mov
push
or
adc
push
inc
ja
cmp
push
pusha
mov
xchg
push
push
adcb
nop
sub
mov
int
inc
cld
out
bound
pushf
into
sbb
sub
pop
out
or
or
jecxz
lret
cmp
loopne
jbe
dec
aad
add
popa
js
sub
or
loope
rcrb
adcb
pusha
xlat
dec
xor
std
cs
and
or
mov
inc
cmp
push
hlt
jge
int
sahf
adc
mov
mov
insb
movb
icebp
lret
outsb
pop
int3
dec
arpl
push
jno
lret
test
in
popf
ja
dec
lret
popf
xor
jp
mov
filds
test
ja
pop
sbb
or
sbb
das
xlat
stos
cmp
pop
jne
add
cmpsb
inc
popf
pop
jle
jge
mov
cmpsl
add
cmpsl
mov
adc
mov
aad
cmc
fsubs
aas
mov
mov
mov
inc
movsb
adc
jl
cmp
jle
ss
int3
imul
pextrw
popa
adc
sub
ja
jae
rol
adc
jle
jno
and
pop
in
add
mov
das
mov
idivl
lods
popf
bound
test
or
loopne
jns
cmp
bnd
xchg
popf
mov
bound
inc
nop
mov
int
xor
out
or
leave
in
lcall
dec
push
cmp
add
dec
pusha
aad
sarb
loop
lcall
xor
pusha
stos
pop
daa
imul
mov
or
je
sub
cmc
cmpsb
loop
sbb
and
nop
sbb
inc
and
and
scas
sbb
lret
das
dec
adc
bound
mov
call
fmuls
cmp
lcall
out
sbb
outsb
lods
pop
fcomps
pop
or
xchg
scas
push
aas
out
add
sarb
notb
je
rcll
sbb
inc
hlt
sahf
hlt
lret
imul
inc
adc
sub
mov
fstpl
cli
mov
jp
divl
jle
cmp
sub
into
stc
aaa
sub
dec
pop
rcll
sub
popa
gs
adc
or
jecxz
jmp
pop
data16
pop
lcall
lahf
fdivrp
push
inc
mov
inc
push
test
xor
cwtl
call
jnp
lret
dec
push
xor
jns
mov
movsb
bound
outsb
loope
lea
pushl
lret
adc
cs
or
orb
scas
jmp
mov
jb
inc
fdivl
mov
dec
sbb
mov
in
xchg
cmp
pushf
shl
cld
and
in
cltd
scas
stc
sbb
pushf
jb
pop
mov
ja
or
lods
sub
cmpsb
sub
xchg
testb
outsb
jnp
loopne
lcall
pop
jge
daa
mov
data16
inc
cmpsb
mov
inc
adc
push
in
fwait
out
fistpll
xchg
mov
outsl
outsb
int3
arpl
lea
popa
lods
xchg
enter
add
push
cmp
jno
xor
sub
push
enter
add
mov
mov
fcmovnb
sbb
jbe
data16
fs
mov
adc
out
mov
xor
cmp
cld
sub
mov
jle
fcmovbe
mov
inc
repnz
cmp
ss
or
sbb
adc
out
mov
repnz
rclb
xor
hlt
mov
lret
aad
arpl
test
pop
aaa
jecxz
xchg
mov
sub
adc
testb
jnp
jge
imul
push
add
cwtl
cmpsb
outsb
push
icebp
sar
pop
sahf
shrb
divl
fmul
orb
orl
or
data16
lods
mov
mov
push
out
jns
cld
xchg
rcll
dec
shll
in
ss
lahf
pop
cmp
push
xor
imul
fwait
inc
decb
push
sbb
adc
test
mov
sbb
cltd
test
mulb
jno
pop
sbb
test
int
test
popa
xchg
imul
mov
pop
in
xchg
jl
mov
add
into
dec
fs
and
movsl
stos
xor
cwtl
stos
jmp
inc
or
js
test
lcall
adc
cmpsb
ret
jo
enter
sub
mov
es
stos
mov
and
in
pop
cmp
and
cmpsl
lret
xchg
aad
push
inc
push
in
sbb
cmp
sbb
insl
push
test
mov
sbb
sub
xor
aaa
lahf
les
enter
outsl
add
movups
push
fs
xor
or
hlt
aas
lahf
mulb
jns
fwait
push
arpl
and
cld
or
mov
movsb
mov
jnp
mov
inc
sbb
mov
adc
pop
imul
mov
pop
sbb
lods
icebp
push
int3
scas
lea
push
jne
xor
jns
in
mov
adc
adc
mulb
xlat
shlb
ss
fdivrl
inc
jge
xchg
dec
sub
std
push
aam
sub
loop
mov
popf
cmp
stos
lods
in
vcvttss2si
pop
dec
je
push
xchg
sub
mov
clc
rcrb
in
pushf
es
in
bound
mov
cltd
xor
movl
or
adc
pop
nop
and
fdivrs
pop
inc
cmp
rclb
pop
lea
inc
shrl
jecxz
pop
shrl
lock
pop
mov
in
ret
xchg
es
and
into
in
sub
loop
sub
lds
push
adc
out
js
popf
out
inc
out
mov
fcoml
xorl
xor
js
ljmp
adc
adc
push
mov
in
sbb
push
mov
stos
movl
inc
add
rorl
pop
call
or
sub
and
and
dec
shrl
stc
in
push
data16
dec
hlt
pop
shrl
pop
jo
js
jg
push
adc
mov
add
mov
sub
adc
clc
fdivrp
and
xor
jl
jo
xor
mov
inc
xor
xchg
sub
sbb
and
lea
push
sbbb
push
jp
sbb
mov
sbbl
int3
xor
movsb
mov
dec
pop
scas
dec
dec
lret
movsl
adc
cvtdq2ps
je
test
mov
sbb
je
cmp
ret
push
nop
push
sbb
adc
mov
dec
into
lods
adc
aam
push
hlt
pushf
dec
aam
jg
adc
adc
dec
fcoml
adc
dec
into
and
nop
cmp
stos
mov
movsb
sub
adc
inc
psubw
das
es
xlat
iret
pop
je
imul
xor
cmp
int3
pop
icebp
cmp
xor
inc
popf
cwtl
cwtl
xchg
dec
leave
push
mov
dec
stos
dec
sub
lods
adc
aam
insb
lahf
mov
sbb
pop
repz
enter
or
cli
fwait
mov
push
sti
movsl
addl
pop
mov
jb
add
mov
lds
mov
jp
les
stos
jno
push
mov
and
sbb
cs
adc
adc
inc
mov
andb
sbb
sti
pop
rol
popa
push
in
jae
clc
xchg
sub
mov
ret
push
lock
bnd
call
arpl
pusha
ret
mov
arpl
cld
sti
push
xchg
mulb
repnz
or
adc
gs
xor
shl
jno
bound
int
adc
jmp
push
sub
notb
or
push
sub
sbb
sbb
lret
dec
inc
mov
aam
out
das
xchg
add
ret
pop
pop
push
add
int
inc
fcmovnb
lods
xchg
test
cmp
stos
outsl
pop
xor
mov
pop
or
or
out
push
ss
in
mov
fcomps
inc
test
jge
ret
lock
jl
les
sti
push
fcoms
xchg
dec
or
mov
cmp
xchg
sahf
xor
loop
xchg
fsubs
or
mov
lret
xchg
jg
call
movsl
cmp
loopne
add
popf
outsl
inc
and
adc
in
nop
mov
sarb
and
mull
popf
cmp
int
bnd
xchg
xchg
pushf
in
pop
mov
arpl
pop
add
lea
dec
cmpsb
out
addr16
sarl
mov
inc
push
pushf
sub
mov
les
ja
jmp
adc
sub
ficompl
ljmp
fwait
add
lcall
sub
lcall
movsb
daa
xor
jl
inc
leave
push
pushl
out
psubsw
mov
jle
sbb
mov
insl
dec
ds
jle
add
mov
daa
sti
fistl
lret
xchg
lock
mov
lcall
mov
inc
imul
pop
rorl
add
fists
sub
push
push
fadd
sarb
mov
inc
sbb
cli
out
outsb
imul
mov
jb
xor
push
push
cltd
les
cmp
sbb
movsb
test
add
rclb
sbb
out
fistpl
pop
sbb
stc
ficoms
add
adc
mov
fucomip
arpl
mov
ja
push
mov
jecxz
and
lahf
nop
pop
sbb
inc
insl
dec
pop
sbb
or
jns
dec
cmp
fisubs
or
jno
pop
rcrl
mov
push
cmpsl
dec
leave
loope
dec
ds
or
push
into
xchg
or
pop
je
insb
into
insl
cmp
iret
cmpsl
cmp
sub
fnsave
pop
mov
cltd
xchg
pop
mov
ret
lods
fbld
gs
fsubs
sub
cld
jp
ds
mov
pop
subl
ja
jne
adc
jno
xchg
add
adc
movsb
leave
lock
fisubl
cld
call
insb
mov
xor
pop
adc
mov
nop
mov
into
mov
jne
and
fildll
les
or
enter
lcall
sub
repnz
adc
mov
adc
or
ds
pop
popa
cwtl
pop
mov
std
xor
fists
icebp
inc
inc
ret
xchg
outsb
add
and
in
pop
push
clc
mov
outsb
ja
cmpl
mov
mov
insl
fcompl
xchg
pop
std
inc
cmp
cmp
data16
in
repz
xor
jb
or
push
push
rcll
jno
sti
push
xchg
movsb
push
xchg
clc
sub
cwtl
dec
and
or
inc
xlat
push
push
ficompl
sarl
inc
adc
jno
jnp
jle
flds
sub
cmp
jmp
scas
sbb
cld
mov
ret
fisubrs
xchg
jns
push
xor
pop
fildll
mov
ss
or
pop
cmpb
pusha
imull
add
test
mov
or
push
jne
sub
inc
xchg
aas
pop
inc
gs
add
aaa
or
loopne
xor
or
add
lock
js
dec
testb
leave
and
insb
aas
adc
mov
fdivp
addr16
aas
shl
or
xchg
loope
js
xor
mov
mov
mov
loop
jle
popa
outsb
dec
nop
jno
lds
mov
cli
aaa
xchg
scas
shlb
iret
push
js
gs
adc
mov
aam
sub
pop
js
cmc
inc
and
dec
and
imul
adc
dec
inc
dec
xor
outsl
jle
jns
pop
fidivrl
mov
fisttpll
ss
mov
sub
xchg
mov
sahf
adc
cld
loopne
in
xchg
dec
addl
xor
popa
cmc
pop
jmp
test
jg
inc
hlt
mov
sbb
sbb
jl
fstpt
push
test
mov
dec
std
nop
adc
fs
push
jmp
popf
rorb
pop
cmp
mov
shll
push
lock
ss
mov
cld
fmull
sahf
adc
dec
popa
pushf
pop
mov
testl
mov
lods
xchg
mov
insl
repz
loope
ret
ljmp
mov
mov
mov
dec
stos
jo
cli
jecxz
call
js
hlt
popa
stos
sahf
inc
mov
and
mov
adc
xchg
js
push
negb
cmp
shlb
gs
lcall
ja
jns
cmc
lret
hlt
fsubrs
stos
xor
mov
mov
mov
xor
xchg
fistpl
inc
cmpsb
out
rolb
rcl
mov
pusha
hlt
outsl
or
imul
lds
aad
enter
mov
data16
xlat
cmpsl
mov
mov
and
addl
test
icebp
cmpsb
sub
sbb
inc
mov
lahf
je
xor
add
jecxz
mov
lcall
inc
adc
dec
aam
data16
dec
adc
lret
xchg
dec
lea
cmpb
enter
or
sbb
out
daa
mov
lds
mov
repz
xchg
and
jnp,pn
outsb
cmc
mov
fsubrs
xchg
cmp
jno
ja
and
push
jmp
add
popf
cmp
sub
cmp
xchg
icebp
mov
enter
xchg
movsb
xor
hlt
arpl
inc
inc
ljmp
or
aad
dec
xor
jle
adc
adc
int3
pop
add
sbb
dec
xorl
decb
fiadds
jb
sub
cmpb
int
or
test
rcrl
cmc
loop
cmp
lds
mov
repnz
or
stos
mov
inc
push
test
subb
loope
jns
mov
or
cmp
xor
fistl
enter
xchg
test
scas
cld
push
or
mov
cmpsl
mov
add
mov
inc
jmp
sbb
ret
and
movsb
dec
mov
push
jnp
es
xchg
mov
sub
loop
jns
mov
push
and
mov
mov
daa
into
inc
rorl
insb
ficomps
sbb
aas
mov
sbb
push
cld
inc
popa
pop
jbe
ficompl
inc
push
loope
jl
mov
popa
pop
xor
push
dec
jecxz
sub
or
mov
sarb
jns
sbb
xchg
add
mov
mov
leave
mov
sarb
bound
fsts
rcrl
adc
gs
scas
mov
sbb
shl
pop
sbb
or
jno
fdivrl
repnz
mov
repnz
das
ljmp
sub
mov
push
inc
popa
pusha
push
ss
jbe,pn
mov
dec
and
dec
int3
mov
push
outsl
pop
jns
push
push
les
jge
xchg
mov
mov
lea
xchg
push
cmp
jmp
xor
pusha
or
mov
push
pop
pop
orb
aas
cvtdq2ps
fbstp
cltd
leave
cli
cwtl
or
mov
mov
inc
and
sub
dec
inc
mov
cmp
inc
mov
mov
and
clc
mov
jge
or
fists
aas
inc
and
push
jl
jnp
xchg
mov
ret
test
or
or
jnp
mov
loopne
aas
imul
int
shrl
lcall
test
test
lahf
xchg
jge
xor
mov
fmull
pop
inc
mov
repz
shll
mov
mov
sbb
addr16
mov
subl
mov
and
and
sbb
mov
pop
add
mov
inc
mov
fistpl
mov
outsl
and
addl
imul
les
sti
rolb
add
push
fwait
dec
into
mov
mov
jno
pop
cmp
or
xchg
pop
fiadds
pop
jb
sar
in
test
push
dec
jo
shlb
jbe
jne
cmc
in
inc
dec
jno
enter
cli
lcall
fistpl
loop
mov
sti
icebp
idiv
add
arpl
shrl
xchg
jp
or
addl
bound
rcll
loopew
fcoms
pop
sbb
and
dec
inc
xchg
push
and
call
faddp
mov
xor
jno
icebp
adcb
out
cwtl
dec
rolb
dec
pop
ret
push
loope
mov
aam
add
push
jbe
pop
inc
aas
and
loope
movsb
fmull
mov
mov
clc
or
or
loop
or
xchg
mov
xlat
sub
pushf
leave
dec
push
arpl
sbb
pop
stos
inc
or
push
mov
xchg
mov
sahf
pusha
jle
cli
inc
dec
test
inc
ret
nop
lods
mov
push
dec
add
sarb
out
dec
cmp
sbb
aas
fisttpll
mov
mov
inc
push
test
sbb
mov
inc
pop
mov
adc
adc
cwtl
lea
jne
mulb
movsl
mov
fs
aad
xchg
lock
shll
pop
fcomp
jl
mov
pop
sbb
pushl
xchg
pusha
je
test
cli
test
dec
inc
dec
ljmp
inc
dec
dec
sbb
push
push
mov
scas
pop
popf
inc
mov
push
add
out
mov
leave
jecxz
out
cmpsb
scas
scas
dec
test
mov
pop
pushf
out
xor
out
xor
rcll
lods
and
pop
mov
int3
fs
push
outsb
and
gs
or
sub
lds
mov
add
and
in
out
xor
lods
fildl
xor
xchg
push
imul
scas
scas
cmc
enter
xor
data16
out
fildl
ffree
shll
or
aaa
push
sub
test
mov
or
or
subb
addb
push
jns
add
mov
jl
test
out
mov
das
pushf
and
xor
adc
js
dec
inc
in
sbb
in
jg
popa
and
push
push
push
out
outsl
icebp
outsb
pop
cmpsb
outsl
in
adc
mov
xchg
sbb
jg
adc
jecxz
sti
jne
push
add
mov
fldenv
jecxz
jg
aas
mov
addr16
push
cli
jne
aad
xor
clc
add
call
push
xchg
sarb
sahf
sbb
lret
loopne
ret
inc
adc
js
arpl
lods
add
inc
inc
push
push
nop
inc
lahf
movq
sub
or
push
enter
jge
pop
mov
pop
lcall
out
dec
mov
bnd
cltd
xchg
pop
rcll
and
fnstenv
dec
jno
jnp
pop
ds
inc
push
pusha
lahf
sub
and
inc
lahf
mov
cmp
jnp
stc
fidivrl
stos
enter
mov
lock
push
mov
sbb
sbb
mov
cld
cmp
dec
call
stc
std
mov
sub
xlat
pop
mov
stos
gs
pop
jo
or
mov
sbbl
dec
push
xchg
fs
mov
insl
fbld
lcall
jle
add
push
dec
and
dec
and
mov
push
lods
sbb
fwait
sbb
push
push
int3
and
lds
sub
and
cwtl
enter
test
inc
fisttps
fisttpl
movsl
or
mov
or
test
push
push
enter
jne
pmaxsw
mov
or
ds
scas
dec
sbb
inc
dec
mov
jmp
push
sub
pop
jno
repz
xor
rcl
xchg
inc
lahf
and
pop
in
insb
mov
and
adc
dec
cmp
arpl
mov
push
inc
arpl
inc
movb
push
in
dec
rorb
dec
decb
cmp
jmp
fstp
pop
ss
out
sbb
arpl
lcall
hlt
test
mov
lods
lds
daa
fcomi
hlt
les
and
in
sbbl
or
jmp
mov
xor
xor
into
and
sub
and
cmpsb
out
scas
rclb
int
subb
add
into
pop
outsl
notb
sbb
repz
lahf
ror
mov
loopne
das
pushf
test
call
ret
inc
aad
out
in
mov
addb
push
pop
rolb
shrb
inc
push
pmuludq
sbb
adcb
xor
mov
pop
and
lea
sub
xor
lahf
jo
fs
das
cmp
xchg
popf
mov
dec
call
fiadds
pushf
out
hlt
cltd
mov
lret
adc
psrld
push
dec
lret
popa
outsl
test
sbb
roll
jns
lret
xchg
jno
or
inc
test
jnp
push
lods
popf
shlb
push
loop
xlat
pop
scas
adc
std
jle
xor
inc
ret
inc
divl
mov
jle
xchg
shll
mov
jae
mov
cmp
lds
cltd
pop
pop
inc
psubusw
xor
test
adc
pushf
das
mov
ds
fnstsw
std
loope
mov
test
imul
mov
push
sub
subb
idivb
out
call
dec
mov
or
and
ja
popa
addr16
mov
pop
mov
jmp
mov
jno
imul
hlt
jg
mov
out
push
mov
iret
push
cmpsl
arpl
jmp
sqrtps
push
fisubrs
jae
add
sub
ds
inc
or
leave
sub
mov
mov
inc
or
jle
xor
scas
imul
mov
add
in
in
sbb
pop
adc
inc
iret
int3
lret
std
arpl
sub
push
out
fwait
push
out
and
jge
sub
jle
popf
fldt
bswap
cmp
xchg
mov
daa
clc
cmc
cld
sbb
add
sti
mov
cmpsl
popf
inc
or
xchg
test
cmp
and
imul
mov
push
push
mov
lock
sbb
ret
inc
sub
jae
and
imull
out
fwait
icebp
divb
xchg
orl
mov
inc
lahf
popa
fcmovb
adc
frstor
inc
mov
pop
fisubrl
pop
ds
xor
mov
test
jmp
or
imulb
movsb
repz
jp
imul
mov
push
scas
lea
mov
adc
shll
jle
icebp
jo
adc
jne
xchg
xchg
lcall
ja
imul
add
out
ret
ja
xlat
fdivr
rorl
pop
sub
ret
lcall
fs
sarb
adc
ret
sbb
test
outsl
outsl
mov
pop
xchg
mov
mov
incl
pop
mov
ror
sub
push
daa
cmpsb
mov
dec
mov
xor
rclb
cld
xor
mov
fwait
xchg
mov
xor
insl
jmp
bound
sub
push
jp
mov
sti
fsubl
leave
paddq
xchg
sti
decb
mov
ret
les
fldcw
outsb
push
mov
mov
jge
sbb
mov
mov
outsb
jbe
push
add
mov
adc
lcall
orb
lcall
or
fucomp
test
push
sbb
gs
pop
or
ud2
call
jmp
sbb
jno
inc
pop
dec
movsl
test
sub
pop
mov
sti
test
dec
or
inc
push
inc
ret
inc
out
insb
rol
mov
notb
pop
jle
push
jbe
movsl
mov
lds
lcall
cltd
mov
jl
mov
or
fidivrl
popa
andb
mov
push
push
icebp
aam
mov
xlat
and
into
cmp
movsb
aam
imul
mov
adc
and
mov
pop
sbb
cmpsb
cli
jno
sub
testb
ret
dec
sub
xor
mov
in
xchg
jp
cmp
dec
scas
mov
mov
xor
adc
adc
push
stc
mov
pusha
scas
repz
dec
rcll
cwtl
inc
cmp
cs
xchg
shrb
incb
pop
out
test
lret
mov
sub
insb
and
shll
adc
pop
in
mov
aam
andb
orb
je
adc
mov
pop
sbb
cmp
fwait
mov
adc
aaa
test
lret
mov
push
mov
ret
insb
cmp
xchg
or
pop
fmull
cs
cmpsb
mov
mov
jl
outsb
cmpb
gs
pop
cmpsb
cmpsl
cmp
ja
stos
test
loopne
popa
in
jnp
xor
in
bound
pop
in
or
imul
mov
jb
cmp
xchg
adcb
or
jp
add
adc
xchg
sbb
es
loop
pop
cmp
sbb
xor
mov
mov
and
imul
fimuls
cmp
roll
sbb
push
mov
jle
mov
xchg
jmp
pusha
pushf
sbb
mov
fimull
loopne
cmc
inc
ljmp
lds
lock
add
inc
pop
sbb
loope
and
daa
call
sahf
and
mov
mov
mov
outsl
jnp
mov
data16
sbb
dec
add
push
sub
sbb
pop
inc
and
setnp
movsb
test
pop
in
push
push
xor
imul
push
mov
and
fcoml
jecxz
data16
rcrb
outsl
pop
adc
aas
push
aas
and
adc
jge
mov
dec
add
pop
nop
fsts
pushf
imul
cmp
xchg
mov
je
insl
rcll
arpl
mov
adc
lds
cmp
shll
dec
sti
sarl
jmp
sub
inc
push
sbb
arpl
sub
jnp
pop
sbbl
mov
pop
enter
ss
lahf
pop
ret
data16
pusha
push
cmpl
jne
add
pop
jmp
jbe
cmp
jnp
pop
stos
jne
pop
mov
repz
movsb
push
inc
xchg
mov
or
incb
pusha
jno
enter
insb
inc
jge
dec
xchg
inc
faddl
xchg
aas
push
adc
jge
loope
jge
and
inc
jne
ret
jecxz
dec
xor
fwait
into
push
and
int3
je
sub
fbstp
mov
scas
dec
or
push
push
stos
adc
push
inc
mov
xlat
fisttps
inc
out
test
add
mov
or
in
shll
xchg
fsubrs
in
xchg
add
sbb
jecxz
movsl
dec
cmpsl
jns
mov
xor
mov
in
pop
bound
add
in
push
mov
clc
or
push
repnz
or
adc
stos
mov
mov
movsb
sbb
pop
inc
dec
in
in
out
data16
pop
push
push
mov
pop
mov
sbb
jno
mov
or
mov
rolb
clc
sub
lock
sub
dec
cli
and
aad
fcomi
aam
mov
sub
dec
push
inc
std
in
and
inc
cmc
inc
jle
jnp
inc
shl
mov
hlt
pop
arpl
arpl
loop
xchg
sbb
fstpl
ret
andb
in
popf
addl
pop
mov
cmp
cmp
daa
js
push
insl
pop
xchg
mov
call
push
js
sbb
sub
cmpsb
gs
cmpsl
fsubrs
lret
bound
jo
or
ret
mov
test
inc
popf
mov
sub
pop
fs
adc
sbb
sarb
cs
movsl
inc
push
push
fdivl
popl
fwait
xor
xchg
insb
mov
pushf
insb
mov
add
xchg
and
and
les
sbb
out
adc
lock
add
mov
sub
call
mov
sarl
movsl
cmp
addr16
mov
add
sbb
xor
outsb
inc
sti
insb
mov
btr
push
and
fucomp
push
jo
sbbl
enter
inc
pop
jge
push
repz
repz
stc
ljmp
or
daa
pop
cmpsl
jae,pt
and
push
popf
jno
and
in
xlat
fdiv
adc
gs
or
icebp
mov
popa
faddl
bound
cmpsl
sub
scas
adc
push
xorl
aad
je
pop
dec
sub
adc
adc
scas
insl
mov
push
fiadds
test
add
mov
in
xchg
into
sub
aaa
xchg
shrb
mov
push
je
sub
dec
mov
pop
lss
sub
push
jns
push
pop
pop
sub
jge
push
in
cld
stc
and
dec
bswap
jnp
xchg
or
inc
add
cmp
or
push
outsb
xlat
lds
int3
push
pop
nop
popa
sbb
pop
adc
mov
ljmp
mov
mov
scas
repz
stc
pusha
aaa
fsubl
or
cmp
xchg
test
je
pushf
xchg
mov
or
in
push
push
cmp
sahf
hlt
dec
les
push
mov
ja
iret
jl
jb
out
ds
in
xchg
hlt
pop
shll
inc
or
adc
ja
ret
lock
rclb
dec
jo
dec
fcomip
and
shl
or
mov
dec
xchg
out
ss
fwait
aaa
cmp
xor
cmp
push
mov
xor
and
pop
mov
test
mov
adc
js
lods
cmp
cmp
mov
subb
dec
loop
or
adc
scas
addl
inc
push
loop
ja
insb
or
fstl
push
or
subb
das
pop
cld
sub
sub
mov
push
mov
icebp
lahf
popa
imul
les
lea
lcall
insl
sbb
leave
mov
in
jle
push
sub
lret
push
jns
shl
pop
mov
xchg
xchg
jge
xor
lret
push
sbb
mov
sahf
lahf
xchg
inc
imulb
adc
pop
xchg
lret
dec
in
cmc
enter
cmp
mov
in
enter
push
loopne
xchg
ret
and
rolb
loop
scas
and
inc
outsb
xlat
dec
dec
out
adc
jne
push
xor
xchg
cmp
insb
adc
lods
rcrb
sahf
rorl
sub
sbb
xor
outsb
push
and
adc
jnp
sub
mov
call
pop
ss
test
cmp
mov
popa
lret
inc
rcrl
imul
stos
addr16
cmp
ret
dec
pushl
mov
clc
mov
sbb
aad
adc
push
test
out
loop
loopne
push
or
sbb
out
jge
add
sub
mov
into
int3
fisttpll
mov
xchg
mov
call
jae
enter
push
push
dec
out
cmp
test
clc
cld
mov
mov
cmpl
cltd
inc
inc
jmp
xchg
ja
test
pop
push
mov
pop
inc
movsl
fisttpll
addb
jo
push
seta
xchg
stc
or
sahf
into
mov
aam
subl
test
xchg
mov
fidivrl
out
ss
or
adc
xchg
call
aad
fld
dec
adc
in
cmc
sub
sbb
popa
test
rol
xadd
dec
mov
xor
cmpsl
jno
movsb
xchg
sub
cmp
decb
and
fwait
aaa
pushl
pop
pop
insb
push
mov
cld
pop
cli
das
mov
add
test
shlb
mov
mov
sub
dec
push
js
bound
mov
ljmp
cwtl
jne
dec
cmp
pop
fisttps
aaa
in
pop
inc
in
and
or
sbb
data16
push
dec
js
fisubrs
mov
xor
mov
and
push
idiv
add
dec
mov
cmp
sbb
jmp
fs
aas
cmc
push
movsl
ror
sub
mov
mov
inc
dec
fcomps
cmp
ja
aam
sbb
ss
lret
call
sbb
sbb
popf
arpl
rcl
mov
xor
sbb
sub
movsl
adcl
pop
test
sahf
or
mov
in
sbb
daa
in
out
lret
pop
popa
jbe
jecxz
test
cwtl
xchg
dec
fwait
jns
or
pop
int
cmp
psllq
ss
cmp
adc
jo
enter
imul
enter
stos
imul
mov
test
mov
mov
fsubp
add
lods
movsb
fmull
jb
mov
ss
dec
test
in
push
and
or
jecxz
ja
push
or
imul
imul
sbb
jecxz
cltd
sbb
push
or
sbb
dec
adc
lret
out
repz
and
cmp
or
and
push
rclb
dec
insb
inc
inc
negb
inc
mov
leave
bound
xlat
sbb
push
jg
cmp
or
mov
pop
std
dec
mov
jp
les
mov
adc
mov
push
jl
lcall
sub
loope
or
inc
pushf
lods
jmp
scas
xor
dec
push
sbb
add
outsl
jp
stc
lcall
jnp
mov
push
int3
add
repz
and
enter
roll
xor
popa
pop
or
out
pusha
mov
cmp
lods
xor
push
lahf
cmp
cli
mov
fidivs
lods
cltd
repnz
xchg
or
ja
cmp
fbstp
or
mov
xorb
or
pop
sbb
xchg
sub
mov
in
jno
data16
mov
dec
jmp
mov
not
lods
adc
fs
dec
mov
addl
aaa
push
push
sbb
mov
sbb
inc
and
insb
fldl
scas
lret
jecxz
jp
jg
scas
mov
mov
ljmp
loop
fwait
mov
pop
xchg
into
gs
or
push
outsb
loop
lcall
lods
jl
mov
cmp
dec
fwait
pop
mov
jb
leave
mov
and
inc
loope
mov
and
sub
hlt
sub
call
rdpmc
or
and
dec
add
arpl
por
mov
dec
jmp
leave
std
adc
push
inc
mov
xor
mov
sti
inc
mov
fs
mov
jno
push
out
movl
add
push
sbb
addl
dec
push
fiadds
mov
xor
cmpsb
ret
xchg
pushf
sub
loope
insl
movsl
cmp
imul
aam
dec
fs
jl
or
or
cs
fdivl
or
fwait
inc
pop
mov
push
mov
test
sbb
scas
sbb
das
jg
add
fisubrl
inc
gs
push
xor
xchg
scas
add
cmp
lods
push
arpl
scas
xlat
dec
outsb
sub
ret
mov
mov
jae
jnp
rorl
inc
je
ret
mov
repnz
xlat
inc
repz
push
scas
test
lea
shrb
add
jg
stos
decb
add
push
inc
xchg
jmp
xor
xorl
pop
int3
shll
int3
xchg
and
outsl
std
out
mov
jnp
push
pop
test
clc
mov
out
adc
adc
jecxz
inc
dec
cmp
in
push
add
jg
mov
cs
dec
ret
and
sub
xor
or
cld
movsl
mov
jb
sbbb
pop
mov
and
mov
arpl
js
jae
mov
mov
aas
jp
pusha
sub
lahf
pop
mov
lods
and
dec
aam
dec
popa
cwtl
outsl
xor
xchg
xchg
mov
adc
in
adc
cmp
mov
dec
invlpg
mov
jae
jbe
xor
mov
aad
cld
neg
idivb
or
xor
mov
jmp
out
pushf
push
popa
mov
fcoms
aam
icebp
push
xchg
lds
add
jle
sbb
fstl
shlb
mov
scas
in
lret
xchg
mov
jg
pop
ss
fcompl
jae
jae
mov
sbb
lods
inc
ja
nop
popa
andl
es
add
pushf
cli
cmp
lahf
mov
rorl
pop
dec
push
aad
inc
loope
xor
popf
loopne
pop
loope
out
cli
aad
lods
or
jnp
sbb
jle
xchg
repz
push
rcll
lret
cmp
cmp
mov
loopne
jg
out
and
leave
adc
inc
jo
xchg
mov
stos
mov
inc
pushf
pop
lret
jnp
imul
and
adc
mov
ret
inc
push
sub
dec
mov
fistps
add
popa
cmp
inc
loop
or
or
adc
or
ret
xor
leave
lods
pop
pop
sub
in
clc
jg
jg
and
addr16
int3
and
lods
jmp
pop
stos
inc
pop
shrl
lcall
cmpsb
lock
cltd
cwtl
sbb
inc
push
lock
jns
dec
xchg
es
fdivrs
adc
icebp
mov
mov
or
in
lds
cwtl
inc
nop
mov
mov
sarb
icebp
in
in
aaa
sub
pushf
mov
divb
xlat
inc
sbb
insb
pmaxub
add
sbb
xchg
movsl
movsl
fimull
xorl
inc
nop
outsb
loopne
inc
test
sub
cmp
out
fldl
sub
scas
mov
adc
pop
lods
dec
or
pop
add
xchg
imul
jl
mov
outsb
shll
aas
scas
aas
cwtl
movsl
push
ja
sbb
pop
adc
and
sub
cmp
iret
addr16
dec
pop
push
adc
test
sti
out
out
add
push
lock
fbld
pop
mov
outsb
pop
xchg
popa
orb
xchg
add
or
scas
dec
mov
aam
movsb
sbb
popa
jmp
pop
jecxz
and
les
mov
push
ss
jno
aas
mov
in
mov
es
stos
cs
arpl
aam
mov
inc
std
pop
inc
jmp
mov
pushf
imul
arpl
cmpsl
adc
dec
aaa
cmp
jbe
nop
pushf
repz
add
sub
xchg
pop
mov
mov
test
cmp
inc
and
hlt
push
fildll
mov
or
pop
adc
into
inc
mov
nop
popf
xlat
pushf
andl
xor
mov
mov
push
ret
mov
jge
addl
out
mov
or
pop
ss
sbb
lods
mov
cmp
fwait
mov
in
mov
testb
sub
fs
icebp
fstl
push
ds
ds
cld
call
mov
cmp
pop
lods
sub
pop
imul
xchg
push
push
xor
stc
ret
pop
mov
pushf
loop
add
adc
add
ret
lret
fdivrl
inc
xor
pop
jbe
cmp
stos
aas
add
mov
ret
cmp
adc
or
int
loope
sub
jg
out
xor
enter
dec
cmp
mov
lea
cmp
cld
inc
cld
aas
sti
fwait
andb
enter
mov
pushf
ret
mov
insl
xchg
dec
jp
mov
push
dec
jo
out
lcall
mov
clc
sub
xchg
xchg
xchg
jne
jnp
movnti
adc
pop
pop
sti
jl
clc
addr16
jp
inc
cmpl
cmpsl
cmp
iret
mov
jl
sub
mov
xchg
out
xorb
pop
xor
clc
adc
cwtl
sti
push
mov
and
xchg
cmpsb
outsb
test
lea
lret
xchg
cltd
push
push
cltd
rol
call
xor
mov
lcall
mov
pop
and
bound
mov
push
inc
orb
pusha
sub
cmpb
cwtl
push
arpl
adc
and
xchg
repz
add
icebp
ljmp
frstor
jle
xor
xchg
xchg
inc
adc
movsb
sbb
or
nop
movsb
aas
dec
lea
jle
mov
mov
jge
cmp
sahf
jle
ja
rcll
pop
aam
cmpb
cli
fcmovbe
imul
fs
imul
or
xor
mov
aad
cmpsl
rcll
jl
repnz
mov
dec
cmp
aaa
mov
mov
adc
das
xchg
fs
and
sbb
jle
mov
sub
or
call
dec
mov
imul
jp
mov
icebp
dec
lret
ret
pop
inc
shr
pop
ja
pop
push
or
xlat
ljmp
push
mov
push
pop
imul
inc
pop
inc
lea
or
jo
insb
sti
jae
cmpsl
ficoms
outsl
mov
in
push
pop
jo
sub
in
cmp
ss
cmp
dec
loope
cmpsb
mov
js
jge
pop
cltd
cltd
add
mov
sbb
lahf
es
mull
mov
xchg
outsl
dec
dec
lock
lock
in
test
inc
sub
jns
pop
sub
cmpsb
ljmp
xchg
loope
xor
xor
test
aaa
and
xchg
testl
xor
testb
int3
out
xchg
adc
add
jne
pop
pop
stos
pop
lret
pop
jbe
sub
push
cwtl
xchg
sbb
inc
push
cli
bound
loope
call
pushf
jb
xchg
or
add
enter
scas
sub
and
cmp
lcall
lods
fs
aas
mov
pop
xor
push
sub
add
xchg
jno
shll
testl
xlat
sbb
pop
ss
jmp
jns
push
ljmp
mov
in
and
xchg
pop
jmp
push
cmp
xor
and
sti
andnps
loopne
adc
xchg
jmp
dec
outsl
pusha
arpl
jp
cmp
mov
push
fdivrp
mov
pop
jns
frstor
test
ret
cs
cli
sub
imul
adc
insl
pop
add
cld
pop
lds
mov
lret
jae
jno
les
cltd
pop
inc
push
sbb
jge
mov
xor
outsb
and
sub
imul
dec
and
xor
jo
clc
popf
ja
loopne
pop
inc
in
or
xor
movsb
mov
aad
daa
popf
jne
jns
hlt
jmp
sub
and
mov
insl
in
and
imul
pusha
pop
jns
sbbb
insb
stc
mov
out
sti
daa
movsb
dec
cwtl
fiaddl
ret
fisttpl
jge
mov
push
out
clc
movsl
pushf
xchg
sbb
jmp
stc
out
inc
scas
jp
aas
aas
adc
push
cmpsl
lret
push
cmp
shll
iret
inc
sub
out
and
repz
sarb
and
pop
mov
out
jge
cmpsl
lods
je
mov
ficoml
push
outsl
mov
push
rcrl
dec
das
enter
jbe
or
jnp
popa
clc
adc
xor
popf
sbb
repz
pop
loop
imul
cs
sbb
ds
pusha
mov
and
mov
mov
sti
shlb
out
xchg
jmp
int
push
push
negb
xchg
popf
dec
mov
or
ljmp
xor
adc
vandps
and
stos
mov
push
stc
out
cmp
aaa
stos
fdivs
imul
std
outsl
and
or
jmp
ret
mov
sbb
jbe
sarb
jne
xorb
dec
sbb
stos
jge
lahf
or
add
decb
mov
fwait
call
aas
fbld
inc
sbb
inc
insl
pop
mov
cmp
aas
scas
mov
test
std
mov
aaa
sti
aaa
fwait
inc
gs
adc
stos
push
stos
fiaddl
arpl
pushf
mov
lea
sbb
adc
xchg
add
lods
push
fsubrs
movl
push
mov
mov
jo
shlb
inc
push
loopne
aas
insb
sbb
cs
lea
scas
pop
arpl
aad
sbb
push
xchg
movsb
jb
in
mov
push
adc
cmp
ljmp
shl
out
xor
pop
cmpb
pop
dec
jbe
movsl
mov
pop
mov
adc
enter
mov
ss
cmpsb
cmp
inc
js
ret
fisubs
test
jmp
dec
xchg
hlt
push
ss
mov
mov
pop
dec
push
sub
push
pop
and
jmp
push
cmpsb
pop
or
shll
mov
mov
jo,pt
cmpsb
jmp
addr16
push
jle
cmp
out
jno
and
push
add
imul
push
pop
mov
or
pop
repnz
fimuls
fucomip
pop
xor
mov
mov
iret
inc
cmpsb
cmpsl
mov
int3
dec
jg
push
or
stc
add
xor
add
int3
mov
inc
cmpl
scas
mov
scas
jb
adc
jae
cmc
in
cmc
and
cld
rclb
mov
fstps
dec
mov
loope
mov
test
insb
je
push
xor
mov
lea
lret
lds
sarl
jb
movsl
cmp
or
jecxz
icebp
insb
pop
aam
pushf
ljmp
mov
je
cmc
adc
push
insb
fnstsw
ljmp
call
add
jae
fstps
shlb
pop
in
mov
into
jno
mov
inc
inc
sbb
dec
xor
cmpsb
ljmp
stos
cli
jns
lods
sbb
hlt
pop
in
fidivrl
adc
arpl
loope
push
addr16
ret
and
cmp
dec
push
xchg
mov
sbb
pop
test
pop
movsb
jp
out
ds
dec
adc
imul
xchg
pop
adc
push
mov
ret
shlb
xor
add
lds
test
sahf
cmp
test
sbb
and
cmp
jge
test
setbe
stc
jnp
mov
push
xchg
pop
xchg
mull
fstpt
mov
loop
fistpll
lods
fs
xor
mov
out
cmp
scas
push
add
jae
add
jnp
orl
add
arpl
pusha
mov
sub
sbb
mov
lods
dec
les
cmpsb
cli
add
pushf
std
rclb
das
pusha
cmp
or
mov
xorb
cmpsb
xchg
test
jnp
xlat
mov
lods
fcompl
mov
and
jp
std
enter
push
cmc
jp
adc
aam
mov
nop
fisubrs
clc
cmp
mov
adc
adc
es
movsl
mov
dec
ret
int
lds
jo
xor
movsl
cmc
test
pusha
mov
sub
sbb
pop
sub
pusha
mov
fistps
pop
clc
into
jbe
mov
cmp
in
mov
mov
loope
mov
mov
xchg
loop
jle
jl
add
aad
sbb
inc
dec
xor
fwait
sti
mov
add
inc
dec
cli
mov
cs
mov
pop
jle
shlb
inc
ss
clc
mov
mov
ds
push
mov
das
shrb
inc
push
cmp
mov
lcall
ret
fcoms
xor
es
add
sbb
jle
int
jb
mov
lock
mov
cmp
cwtl
in
mov
cmpsb
fwait
dec
ja
loopne
add
sbb
mov
mov
inc
outsb
outsb
jmp
xchg
rclb
jne
in
push
aas
loope
sub
xchg
std
pop
ret
mov
fistl
cltd
xor
mov
jns
das
jae
cwtl
cmpsb
mov
cwtl
xlat
xor
jge
stos
andl
dec
push
cmp
daa
sub
and
sahf
sti
push
xor
inc
lcall
jl
and
sysenter
mov
adc
push
push
jge
loope
xchg
outsb
insl
push
xchg
push
lret
sbb
sarl
dec
or
push
imul
fimuls
out
adc
stc
sbb
fwait
aaa
add
and
dec
out
xor
cmp
mov
movsb
mov
jne
icebp
mov
imul
rcrb
cwtl
push
xchg
xlat
cmp
xchg
cmp
stc
push
movsb
mov
jae
sub
push
in
sti
pop
test
nop
dec
or
mov
or
jge
dec
xchg
in
aas
jle
pop
lret
sbb
cld
cmpsl
dec
inc
ds
fcompp
arpl
push
cmp
jns
mov
xchg
outsb
push
bound
clc
test
push
mov
test
notb
in
daa
xchg
mov
shrb
cmp
cmp
push
mov
mov
mov
loope
pushf
mov
push
and
call
jp
ret
iret
mov
adc
test
pop
cmp
xchg
pop
lret
movsb
and
sub
int3
loope
mov
cli
roll
pop
xlat
iret
or
jb
ficoms
or
testb
jle
and
pusha
outsl
aam
js
jecxz
cmpsb
jge
mov
add
adcl
sti
shlb
leave
xor
stc
in
and
in
pusha
repz
aas
push
fwait
add
test
jne
pop
dec
push
sub
imul
out
xor
stc
dec
xor
pusha
or
cmp
stos
cmpl
mov
mov
inc
push
adcb
je
xchg
mov
push
sub
mov
bound
inc
push
shl
lret
mov
or
add
add
leave
in
mov
ret
xchg
push
mov
xchg
fadds
ret
xor
adc
xor
sub
cmp
adc
loope
dec
outsl
sub
lods
jecxz
stc
ljmp
cwtl
nop
pop
mov
push
inc
xor
xchg
push
cmp
mov
lods
ret
push
lock
mov
in
ljmp
fdivrl
popa
in
call
ljmp
les
inc
leave
add
xchg
xlat
mov
sbb
jge
sub
inc
test
in
rorl
imul
fs
das
push
xchg
inc
aas
lods
mov
out
dec
xor
or
pushf
mov
jl
jb
xchg
out
adc
stos
mov
fwait
mov
push
inc
inc
mov
inc
jns
dec
rcl
popf
popf
hlt
mov
adc
pop
ret
pop
popf
mov
fstpl
clc
ret
pop
out
loope
dec
mov
dec
out
pop
push
push
int
dec
arpl
xchg
pop
xor
ljmp
pop
push
and
adc
sbb
addl
jae
cltd
shlb
addr16
subb
mov
ss
subb
jge
stc
cmp
push
les
sbb
mov
xlat
add
push
sbb
repz
or
shrl
pop
mov
xchg
sbb
icebp
test
xlat
pop
in
decl
adcb
cmp
dec
mov
add
mov
inc
adc
cmp
loop
lds
pop
pop
sbb
jb
jae
push
repz
notl
lds
jb
jge
and
add
not
stc
rclb
rcr
aaa
call
push
or
inc
add
imul
in
mov
cmc
sbb
jmp
mov
fistpl
add
sub
icebp
xor
fdiv
pop
push
push
aam
dec
bound
ret
push
adc
jmp
in
outsb
inc
jg
adc
and
mov
cltd
xor
and
inc
into
pusha
and
stos
dec
clc
add
or
adc
pop
imul
jmp
in
push
sub
fnstcw
jecxz
xchg
push
inc
xor
inc
adc
xchg
cmpsl
mov
mov
repnz
ret
iret
ds
out
inc
je
push
mov
fcoml
push
pusha
cld
pop
xor
mull
dec
sbb
mov
sahf
imul
fistl
in
cld
fisubrl
mov
fnsave
push
imul
push
or
movsl
bound
sbb
data16
jne
push
out
xchg
mov
std
outsb
xchg
or
and
cwtl
mov
and
sahf
fimuls
jae
mov
inc
cmpsl
inc
cmpsb
mov
mov
and
pop
js
std
ffreep
push
sbb
sahf
dec
adcb
leave
sbb
adc
les
xchg
cmp
add
outsb
jp
push
xor
mov
std
mov
bound
popl
bound
daa
int
mov
cmp
enter
cmp
inc
roll
popf
cmp
popf
pop
in
dec
icebp
pop
push
xchg
pop
jmp
enter
loop
mov
in
lret
data16
outsb
jp
xchg
cmp
or
test
repnz
stos
xorb
jbe
test
mov
jecxz
or
adc
dec
in
shrb
imul
xchg
fs
in
imul
movsb
int3
cmp
dec
mov
gs
rcl
pop
or
add
scas
rorl
mov
loopne
dec
sub
add
arpl
mov
enter
xor
in
or
sub
push
xor
pop
out
lcall
mov
and
lds
cmp
fiaddl
xor
bound
xor
pop
neg
pop
sbb
movsl
sub
test
cmp
test
repz
mov
ret
icebp
inc
mov
cwtl
rcrb
sti
mov
xchg
out
aam
enter
cmc
dec
mov
pop
push
sbb
inc
mov
xor
out
stos
aam
or
xor
push
aam
mov
or
test
xor
add
das
outsb
sar
pop
sbb
test
mov
bt
mov
lahf
mov
and
push
push
subl
outsl
out
and
or
xchg
shrl
lock
rclb
aad
add
adc
xor
xor
fildl
les
leave
adc
mov
outsl
inc
xchg
push
jg
xor
mov
jno
lods
daa
rcrl
jo
scas
and
jle
mov
pop
push
dec
in
mov
ds
jg
jns
int3
pop
cltd
add
movsl
shlb
lds
pop
sti
inc
subb
movsl
cmp
add
cli
mov
mov
stos
imulb
jnp
inc
or
adc
sub
lock
arpl
add
test
shrb
clc
mov
mov
add
cld
inc
mov
and
cltd
push
cmp
jmp
jne
mov
aam
mov
add
adc
inc
sub
mov
in
lcall
mov
and
xor
int3
fwait
and
stos
mov
xor
in
out
addb
mov
fistpl
push
xor
je
inc
push
xor
push
fistl
out
jg
sahf
in
rcl
insb
mov
xchg
cmp
nop
xchg
jmp
or
adc
loopne
repnz
fldt
mov
loop
andl
scas
into
cltd
inc
in
push
jl
inc
push
test
je
aad
push
leave
mov
iret
mov
out
or
pop
sub
lds
and
fst
testb
cmc
pmaddwd
aad
shl
ret
or
mov
xchg
jo
in
movsb
add
dec
js
inc
jle
pop
insb
addr16
sub
sub
sbb
stos
xchg
pop
in
push
dec
mov
fbld
sbb
iret
fdivl
jns
pop
aaa
fadds
imul
sbb
jmp
and
mov
inc
pop
sbb
sbb
lods
adcl
imul
cld
mov
inc
loop
cmpb
getsec
arpl
stos
addr16
std
jns
or
and
sbb
inc
xor
in
inc
inc
sti
cs
pop
sbb
mov
xchg
and
xchg
mov
shlb
ljmp
cmp
sbb
pop
and
in
dec
push
and
push
leave
or
and
je
add
movsl
outsb
xor
xor
xchg
in
gs
pop
popa
enter
in
das
cmp
push
push
ja
adc
xor
adc
adc
pop
aaa
aas
mov
jb
ljmp
std
inc
imul
pop
push
fdivrl
ret
pop
insl
dec
cs
ret
inc
xchg
and
out
cmpsl
adc
xor
adc
and
sub
mov
lret
int3
add
cmp
xchg
xchg
test
data16
gs
fsubrl
xor
or
fidivrl
mov
sbb
aaa
faddl
pusha
or
mov
das
into
mov
xchg
addr16
mov
sbb
push
mov
add
bound
aad
cwtl
dec
push
out
push
rorl
out
clc
xor
enter
into
in
or
into
aas
mov
repz
jle
insw
sbb
fs
jmp
cs
add
lods
pop
sbb
std
out
shr
imul
hlt
inc
shlb
ljmp
pop
fldcw
ss
loope
add
sub
pop
dec
cmp
xor
pop
out
stos
and
imul
inc
lret
mov
xchg
and
cmp
jg
aas
push
cmp
leave
cmp
int3
add
add
jae
loope
dec
cmpsl
jg
jbe
fcomps
cmc
sahf
dec
xor
ss
mov
xchg
outsb
fldcw
cwtl
enter
sub
adc
sub
dec
std
or
cli
push
and
jnp
cmp
mov
mov
sub
mov
lods
in
shll
inc
aaa
lods
pop
mov
repnz
dec
pop
movb
dec
xchg
in
ret
xor
ret
test
push
cld
repz
pop
dec
hlt
les
xchg
test
jp
jno
push
sahf
sub
jmp
sub
jae
adc
mov
or
icebp
cmp
mov
and
lahf
int
fistpl
pop
sti
cmc
mov
fsubrs
mov
mov
cmc
sub
lret
popw
stos
int
pusha
out
fldl
and
dec
lods
cmpsl
lea
lods
lea
stc
fs
pop
imul
xchg
ja
dec
mov
fld
ss
xor
leave
shll
hlt
dec
out
cld
enter
pop
adc
std
jl
adc
cmpsb
sub
sub
insb
add
xor
addr16
loopne,pn
insl
out
call
inc
or
push
sub
sub
pop
push
aad
aad
pop
sub
aas
and
dec
adc
outsb
ret
and
repnz
stc
addr16
stos
clc
jbe
ss
push
pop
fisubs
filds
je
test
imul
addb
dec
push
and
popa
xor
add
jae
mov
out
and
imul
mov
mov
pop
test
xchg
cwtl
sbbb
sub
mov
frstor
xchg
pop
lret
movsb
xor
pop
sub
mov
inc
scas
enter
jecxz
pop
push
cmp
push
sub
or
sbb
jno
pop
sahf
add
add
pop
es
mov
or
pop
cmp
rorl
shll
push
xor
adc
std
xor
shrl
roll
int
inc
cmp
das
mov
pusha
cltd
mov
jecxz
ret
sbb
imull
jb
sub
and
shrb
out
mov
xor
push
hlt
add
mov
jo
stc
and
inc
add
xor
fs
mov
dec
pop
dec
xchg
sub
pop
or
pop
sahf
sub
fiaddl
inc
sti
xchg
push
leave
filds
jecxz
add
fsubrs
or
sbb
inc
insl
cltd
xorb
jle
sub
icebp
add
lods
data16
insl
fs
subl
loope
into
inc
cmp
jb
sbb
jp
std
xchg
in
pop
int3
xchg
test
mov
xor
daa
cmp
ljmp
pop
shrb
and
popf
xlat
mov
push
dec
loop
mov
sbb
push
dec
jecxz
mov
push
push
outsl
fisubrs
inc
sbb
nop
aas
call
mov
push
push
add
jg
decl
or
ficoml
lods
std
scas
mov
cmp
flds
xchg
iret
ja
dec
xchg
add
sbb
lods
cmp
jo
cltd
pushf
jae
xchg
and
jno
xlat
out
adc
pop
cmp
xchg
mov
insl
ljmp
adc
icebp
add
mov
imull
push
subb
dec
ret
call
popf
rclb
or
and
ret
sahf
push
cmpsb
jmp
jmp
addr16
adc
mov
mov
push
loope
pop
mov
inc
ljmp
lods
jecxz
shlb
jne
js
arpl
testl
sub
or
dec
mov
stc
mov
fisubs
adc
mov
xchg
adc
mov
add
lret
pop
js
out
dec
lods
popa
add
les
jne
mov
out
nopl
sbb
insl
outsl
pop
push
jae
pop
mull
scas
ja
fwait
pop
aaa
jne
mov
pop
add
xor
enter
mov
adc
push
std
mov
sbb
jo
xor
lds
ss
mov
xchg
das
leave
cltd
clc
jb
cli
dec
lcall
add
xchg
es
insb
mov
nop
add
cmpsb
fisttpl
jno
and
in
jecxz
push
cltd
ds
push
mov
inc
enter
cwtl
lcall
inc
sub
scas
aaa
or
subl
lret
loopne
pop
ds
mov
cmp
xchg
push
in
pop
in
addr16
aam
test
inc
push
or
push
mov
inc
add
pusha
pushf
add
jne
xor
out
push
jg
inc
movsb
jno
testl
and
pop
adc
mov
cmp
pop
arpl
pop
xchg
inc
cmc
pop
or
inc
xchg
mov
andb
pusha
leave
pop
out
mov
mov
addb
lret
xchg
enter
subl
or
pop
push
imul
push
pop
sahf
pop
sahf
popa
xor
enter
dec
sub
inc
int
mov
adc
lahf
cmpsl
mov
and
push
ret
inc
cmp
push
xchg
add
stos
jp
jb
adc
pop
insb
out
imul
xor
add
add
fnstsw
sub
pop
mov
xchg
mov
dec
aas
mov
mov
jno
mov
sahf
fdiv
xchg
xchg
mov
cmp
jb
fs
rolb
stc
pop
lret
add
lock
das
mov
iret
push
lods
inc
jg
fsubrp
hlt
cmc
jnp
push
adc
pop
test
imull
popa
lods
sti
dec
lret
add
lods
mov
inc
add
sub
in
scas
lods
hlt
ljmp
xlat
lods
cmp
xor
sti
push
xchg
add
mov
push
jbe
and
arpl
pop
sub
cmp
movsl
push
rcrl
xor
fsubl
int3
sar
mov
xchg
and
push
cmpsb
in
mov
jnp
add
addr16
push
xchg
sbb
pushf
and
sub
cmpl
fistps
cmp
sbb
push
call
push
aas
mov
adc
pop
lods
adc
das
sbb
ficoms
into
xor
push
mov
sub
jp
iret
lret
in
jmp
mov
dec
cmp
scas
ror
xchg
in
mov
mov
aam
mov
pop
jb
push
dec
jns
daa
aam
outsl
mov
repnz
dec
cli
mov
cmp
jg
push
cmpsb
sbb
test
jns
xchg
mov
outsl
cwtl
pop
xchg
out
sub
ds
sbb
push
adc
mov
stos
notb
lahf
push
test
mov
mov
sub
xor
jae
lock
push
mov
imul
add
out
in
lahf
dec
enter
mov
pop
pop
cltd
xor
jmp
mov
adc
pop
into
add
sarb
ds
xor
add
jmp
jbe
dec
pmullw
xchg
jecxz
and
or
test
cmp
cli
mov
xlat
clc
arpl
andb
jecxz
addr16
push
faddl
into
int
ljmp
pop
sbb
adc
xchg
mov
ss
add
fsubrl
lahf
mov
lea
mov
dec
cmp
idivl
gs
push
jl
dec
outsl
add
inc
pop
or
inc
fcmovnbe
sahf
call
call
jo
xor
rcrl
dec
outsl
xchg
jbe
dec
int3
movsb
mov
inc
js
jmp
mov
mov
in
call
push
push
adc
dec
repnz
xor
adc
pop
xor
add
es
stos
cmp
adc
mov
insl
nop
in
xchg
rcrl
xchg
loopne
popf
imul
xchg
call
push
sbb
in
xchg
adc
dec
adc
jmp
fcompl
in
cmp
fldl
cltd
lret
fsts
push
popf
xchg
addl
lods
or
push
cltd
dec
data16
jp
fsts
test
sarl
stos
sarl
push
push
push
stos
cli
and
inc
bound
iret
lods
adc
icebp
stos
sbb
adc
sti
add
adc
jbe
imul
iret
mov
fwait
mov
in
pusha
xor
outsl
popf
xchg
leave
xchg
stc
push
lret
stos
cmp
mov
adc
mov
icebp
fwait
dec
stos
or
and
sbb
movb
fdivrs
lahf
dec
mov
shlb
test
insb
pop
sbb
addb
int
fs
xchg
nop
push
clc
mov
cwtl
mov
fiaddl
jae
loopne
mov
icebp
popa
xchg
mov
cs
xlat
xor
stc
ficomps
mov
nop
sbb
jae
pop
insb
ret
cltd
cld
jnp
mov
leave
cmpsl
lea
inc
adcl
dec
mul
cltd
loope
daa
or
pop
push
mov
in
out
pop
adc
xor
lock
cmpsb
iret
cs
test
sbb
add
dec
dec
mov
and
push
add
mov
push
xchg
push
idivb
into
xchg
cld
xor
lods
fisubs
xor
bound
adc
dec
aam
xor
js
leave
andb
scas
aam
imul
std
stos
dec
xor
fstpt
jl
xchg
lret
sti
jno
pop
jbe
shrb
push
cmp
xchg
cmpl
pop
je
das
fmulp
or
sarb
stos
sub
rcl
in
call
das
fiaddl
fwait
push
gs
push
bound
cmp
xor
dec
out
insl
push
xchg
sub
pushf
add
fnstsw
out
lret
stos
movl
xchg
ret
sub
pop
xchg
fdivrs
pop
and
xchg
int3
sbb
bound
imul
mov
cmp
mov
es
fmuls
insb
frstor
inc
call
hlt
setns
adc
stc
fsubl
add
aas
inc
popl
xlat
mov
cwtl
mov
pop
inc
nop
sbb
lahf
stc
push
jno
jge
iret
cmpb
sbb
imul
bound
repz
sbb
mov
mov
jnp
stos
or
sbb
xchg
xor
dec
xchg
int3
call
mov
and
pop
stos
inc
cwtl
add
mov
cs
xor
jecxz
cmp
cmp
xchg
mov
ja
dec
jle
aam
insl
dec
addl
lret
insl
pop
push
icebp
fwait
mov
jmp
jo
fmull
fwait
cmpl
imul
js
aaa
jle
mov
jo
ss
sti
pop
mov
fsubs
lea
add
mov
jne
mov
xchg
mov
faddl
std
nop
pop
orl
jmp
add
arpl
aad
or
cmp
in
sbb
push
cwtl
mov
jmp
arpl
popa
repz
hlt
dec
mov
stc
cld
bound
lret
data16
push
outsl
jbe
ret
jbe
nop
xlat
cmp
arpl
or
insl
movl
fbld
sub
pop
mov
clc
mov
cmpl
or
fwait
out
pop
imul
fnsave
in
mov
out
sub
cld
imul
lods
sahf
or
mov
mov
mov
jecxz
push
fs
and
xchg
or
add
jp
cli
dec
in
mov
xorb
and
test
adc
insb
cli
lret
sub
fcmovbe
and
mov
pop
adc
and
hlt
into
pop
cwtl
out
push
scas
stos
cs
jge
sub
pop
std
lret
hlt
adc
test
fmuls
sub
jp
cmpl
jg
shrb
mov
in
mov
jo
xchg
dec
mov
jne
adc
fstl
mov
xor
lcall
mov
aad
iret
sbb
insl
inc
loopne
push
and
xor
repnz
dec
sbb
cmp
xchg
jmp
and
dec
dec
loop
ficoml
mov
dec
lock
test
nop
fisubl
xchg
dec
push
addr16
lods
cmpsb
push
mov
rorl
pop
out
shlb
pop
jae
aad
pop
and
xor
lds
hlt
repz
sub
cld
in
dec
sbb
dec
push
cmp
push
movsb
out
jp
arpl
pop
push
addl
insl
rorl
sbb
mov
sbb
and
sbb
mov
cmp
pop
das
cmp
push
imul
cmp
pusha
jecxz
cli
scas
adc
add
leave
lods
clc
dec
and
add
mov
mov
ficompl
loopne
repz
test
pop
cld
ret
mov
mov
ds
repnz
out
and
xor
rcr
push
jno
mov
inc
mov
pop
sbb
mov
mov
ds
or
jne
and
xchg
pushf
cwtl
xor
mov
leave
sub
pop
sti
mov
inc
xor
push
xchg
inc
dec
jbe
int
rclb
fstp
xor
cld
push
imul
push
xchg
insl
sub
jl
mov
push
jne
iret
mov
xchg
mov
jb
cli
mov
mov
sub
jo
mov
js
and
jns
mov
and
ret
jl
inc
repnz
mov
ss
in
xchg
push
shlb
shlb
in
jge
push
in
lds
aaa
into
dec
xor
int
lods
inc
fistpll
or
movsl
test
fsubs
mov
pop
push
xor
add
add
mov
adcl
fisubs
cmp
push
aam
jne
lods
decb
stos
jno
inc
push
je
jmp
mov
test
and
jns
xchg
dec
loop
icebp
lea
mov
je
mov
lcall
ret
push
jae
mov
mov
and
insb
mov
sbb
pop
add
mov
sbb
mov
loopne
leave
arpl
cld
mov
filds
mov
insl
je
adc
mov
adc
scas
outsb
testb
sbb
or
jp
out
xchg
nop
out
and
test
dec
or
dec
mov
dec
pop
dec
push
xchg
popa
fidivrl
mov
mov
out
push
aad
cwtl
out
sub
xor
mov
ficoml
aad
nop
mov
cmc
inc
mov
data16
push
lods
es
cli
shlb
dec
mov
out
int3
or
in
stc
adc
jne
xchg
les
cmpsb
pop
adcb
test
pop
movsl
sub
or
mov
test
das
and
inc
into
aas
fsubs
stc
pop
test
ss
sub
mov
and
jo
int
inc
cmp
xor
adc
rolb
fldenv
inc
cmpsb
mov
rcrb
push
sub
xor
inc
pop
in
in
out
mov
jmp
push
sub
pop
int
push
je
pop
jae
xchg
lret
sbb
test
roll
ret
jecxz
pop
cmp
imull
pop
push
mov
shll
daa
cmp
cmp
jno
bound
cld
popa
jecxz
xchg
fsubl
les
sbbb
mov
imul
loope
xor
cmpsb
addb
add
or
shl
or
loop
pop
es
xor
sub
in
inc
jge
mov
jge
das
sub
jo
in
jne
inc
lret
mov
in
out
or
xor
cmpsl
in
mov
jns
inc
pushf
scas
cwtl
pop
lods
aas
hlt
adc
add
lods
scas
or
movsl
jmp
loope
xchg
dec
jl
or
repz
fs
mov
in
das
mov
ret
xor
sub
pop
adc
or
lds
mov
cmpsb
idivl
push
inc
inc
jp
div
daa
push
inc
adc
jae
insb
pop
xor
pop
cmp
lds
pop
cwtl
movsb
cmc
push
push
mov
je
mov
xor
add
jno
jno
mov
cmpsl
outsb
add
divb
aad
xchg
bound
les
idivb
and
or
adc
cs
dec
pop
pusha
mov
jbe
lods
aas
pop
je
jl
xchg
jnp
add
in
test
je
negl
movsb
fisttpll
movsl
adc
adc
dec
cmp
sbb
popf
test
arpl
ficompl
and
test
pop
das
pop
push
or
xchg
pop
and
loop
cmp
jo
sub
lcall
jo
cmp
repz
ret
sbb
add
jecxz
inc
and
xor
lcall
push
test
outsb
out
mov
add
insl
add
pop
int3
bound
push
rorb
mov
adc
xor
ja
sub
push
into
mov
andb
mulb
shlb
jecxz
xchg
movsl
dec
and
es
scas
les
js
subb
arpl
adc
adc
sbb
push
push
sub
inc
fisttpll
ret
add
inc
inc
and
es
jb
jbe
push
imul
adcb
and
ret
insb
lods
and
imul
jecxz
inc
mov
adc
mov
repz
jg
test
lahf
mov
movsb
mov
mov
cltd
in
cltd
xchg
in
divl
sbb
adc
dec
cwtl
lods
mov
fsubs
pusha
pop
xor
in
jns
jo
pop
into
sahf
lods
sub
xchg
push
popf
sahf
movsl
dec
dec
pop
clc
aad
testl
add
sbb
rorb
inc
or
shll
rcll
test
add
pop
sub
sub
inc
loope
dec
hlt
mov
ret
mov
aaa
lret
daa
xchg
or
sbbb
jle
dec
scas
jp
push
jge
xor
sar
dec
cmpb
add
mov
push
lret
int3
shrl
or
outsb
cmovo
loope
pop
mov
dec
in
inc
pop
jl
nop
notb
daa
out
push
arpl
insl
cmp
push
in
out
adc
les
xor
mov
adc
mov
in
call
xchg
mov
xchg
dec
sub
mov
xchg
jo
lret
mov
mov
daa
ja
repnz
faddl
call
ficompl
fbld
sbb
xor
std
scas
xchg
xchg
xor
pop
inc
and
loope
lahf
jno
les
ds
mov
sub
fisttps
adc
push
sbbb
xchg
push
into
push
lds
cmp
pop
cmp
insb
addl
and
es
pop
scas
dec
or
adc
adc
ljmp
jmp
cmpl
inc
lock
lret
stc
xchg
cmc
xor
or
in
mov
scas
cmp
push
jmp
jp
inc
ret
lea
pop
inc
xor
mov
cmp
lret
call
dec
in
mov
jle
movsb
cld
ret
sbb
jge
call
pop
fptan
stos
cs
push
popa
mov
fwait
enter
xchg
sub
movsl
scas
pop
in
push
sti
pushf
mov
hlt
loope
into
ss
push
add
pop
push
fidivrl
das
ja
or
insl
mov
mov
test
lahf
lds
cmp
sar
push
cmp
jmp
or
scas
das
pop
push
mov
pop
and
mov
inc
stc
loope
mov
mov
je
xchg
adc
jo
insb
into
ja
lods
notb
sub
pop
adc
subl
rcr
jge
lds
mov
imul
sti
jbe
shrb
scas
add
push
push
aam
xor
cmp
xchg
ds
loopne
int
pop
pop
mov
ja
jge
mov
mov
loop
arpl
fmul
mov
divl
mov
test
dec
jnp
adc
fsubrs
jne
negl
popa
not
sbb
int3
scas
sbb
das
out
adc
or
inc
mov
xchg
add
aas
je
push
leave
sbb
mov
mov
jb
mov
mov
shll
jge
mov
fcmove
sub
popf
mov
mov
cli
xchg
lea
les
jbe
cld
lahf
test
and
ror
cli
add
movsb
loop
cmp
xchg
loope
andb
mov
sbb
rcl
add
or
mov
mov
dec
jne
pop
or
mov
inc
jecxz
pop
xchg
out
xorps
add
cmpsl
jns
iret
out
dec
in
rcrl
das
into
or
fcompl
inc
mov
adcb
or
add
mov
into
outsb
xchg
into
fmulp
sahf
push
add
js
mov
mov
jle
lahf
mov
out
int3
pushf
add
gs
in
sti
push
test
mov
mov
and
inc
sbb
and
int3
push
enter
xor
call
dec
or
dec
idivl
inc
outsl
adc
int
testb
mov
jb
push
idivb
jno
in
shll
mov
insb
int
ja
mov
dec
lahf
pop
inc
mov
sbb
xchg
int
mov
fidivrl
mov
push
imul
cmove
imul
in
mov
pop
mov
and
mov
push
std
xor
mov
mov
mov
fadd
hlt
jmp
ljmp
aaa
mov
xchg
jb
aad
xchg
sub
mov
dec
sub
rorl
iret
notl
fwait
and
push
std
pop
dec
fndisi(8087
jnp
jb
out
and
fcomps
push
inc
outsl
sbb
push
mov
popf
dec
mov
decl
or
adc
or
or
jns
push
adc
and
fimull
jb
lea
and
mov
insb
mov
pop
test
adc
xchg
aad
lret
fs
add
int3
cs
out
mov
data16
jae
sbb
shll
dec
sub
cmp
outsl
lahf
pop
test
pop
pop
out
push
jle
out
out
lock
lock
stos
and
fcomp
scas
inc
sub
inc
pusha
fwait
sbb
push
sbb
popa
mov
adc
adc
hlt
xchg
sbb
inc
xor
cmp
mov
aaa
xor
rorl
push
dec
lret
push
loopne
push
inc
cmpsl
mov
jae
sti
jnp
je
data16
cmp
jp
movsl
sub
mov
mov
jae
ret
add
xchg
sbb
mov
je
mov
and
stos
leave
jne
in
addr16
xor
shll
or
push
cmp
sbb
xor
les
ret
push
xor
out
jb
adc
aam
out
jmp
into
iret
mov
add
xchg
or
ja
call
les
test
mov
mov
jmp
pop
adc
lahf
lcall
adc
sub
icebp
adc
ja
outsb
popf
in
fldcw
pop
mov
mov
mov
xchg
push
adc
mov
fs
mov
mov
in
add
cmp
jo
mov
mov
movsl
mov
fwait
divb
jle
or
cmp
or
rolb
stos
xchg
clc
lahf
mov
cld
ret
pop
xchg
sbb
xlat
cmpsl
out
loope
xchg
cwtl
aas
fmuls
in
mov
mov
pop
cmp
sub
loope
fs
scas
jbe
neg
and
pop
dec
mov
jle
dec
mov
je
inc
das
add
pop
adc
pusha
cmp
insb
lahf
dec
sbb
stos
mov
jo
int
jbe
jo
inc
gs
xchg
mov
and
movsl
aad
inc
and
out
enter
popf
push
pop
stos
and
fs
outsb
in
dec
out
and
or
sub
imul
sbb
mov
add
xor
cmpsl
mov
push
mov
cs
xor
scas
jg
inc
adcl
push
lods
pop
sub
fisttpl
ss
cmp
xchg
daa
lock
pushf
movsl
sbb
int3
incl
xchg
cltd
jb
dec
sbb
loopne
aas
rorb
mov
push
daa
dec
add
dec
mov
imul
lds
pop
je
ficomps
lock
jecxz
jo
in
leave
je
add
push
lods
lahf
popf
lcall
mov
sbb
ds
das
jns
pop
outsl
movsl
cwtl
pop
cmp
ret
sub
clc
gs
popa
fistpll
jge
sub
arpl
adc
adc
js
cmp
jp
adc
mov
pop
dec
jo
imul
sub
or
test
enter
lods
xor
push
xor
cmc
popf
les
jnp
dec
pushl
jle
xlat
xchg
stos
lds
push
scas
add
mov
adc
and
sbb
sbb
adc
stos
jp
ss
popa
or
add
mov
movsl
mov
pop
ljmp
cmc
mov
stos
sahf
fsubrl
or
test
pop
mov
jmp
jg
mov
mov
jno
cli
push
sbb
jbe
out
dec
lahf
test
pop
adc
lods
push
mov
pop
jbe
jmp
push
shlb
inc
dec
xchg
hlt
xchg
adc
mov
jmp
daa
pop
stc
pop
or
add
jle
testl
sbb
scas
inc
push
call
inc
aaa
sub
mov
push
jns
adc
mov
inc
repz
xchg
jecxz
or
test
loopne
inc
push
xor
pop
shl
ficomps
mov
int
push
or
sub
fldt
jno
add
or
xor
shl
or
adc
jle
pusha
stos
mov
adc
outsl
xor
adc
sbb
stc
js
pop
push
out
xor
loop
loopne
cmp
sub
push
or
adc
xchg
mov
or
push
scas
das
stos
push
push
jg
sahf
orb
adc
out
dec
jge
push
jmp
mov
mov
mov
ret
jae
mov
cmp
adc
dec
mov
out
rorb
arpl
mov
adc
push
gs
inc
sub
add
lods
mov
inc
xchg
notb
data16
jmp
pop
add
aam
aad
mov
sarb
fidivs
sub
daa
ja
nop
and
faddl
mov
lea
add
push
and
in
push
popa
jae
xchg
rcr
sbb
mov
mov
mov
sbb
daa
inc
jmp
mov
jge
push
int3
cmc
push
add
xor
mov
push
and
rcl
jp
cmp
repz
and
imulb
push
xor
fimuls
lds
xor
rclb
cmp
ret
sub
jb
and
jmp
icebp
jecxz
fdivrs
mov
or
mov
in
cmp
dec
push
add
xor
add
imul
or
mov
jns
int3
sub
sbb
dec
cmc
adc
fldenv
out
xchg
add
adc
fcomi
adc
mov
enter
pop
filds
andl
sarb
push
sarb
dec
add
and
stc
push
scas
lcall
jge
pop
mov
mov
lcall
or
decb
daa
aad
jns
and
push
ss
in
int
xchg
pushf
mov
into
test
dec
ret
jno
adc
push
mov
ret
add
mov
fsubr
mov
jge
cmp
mov
and
mov
lret
pop
mov
add
and
inc
add
jl
dec
jmp
xchg
and
icebp
rorl
arpl
push
jo
out
je
movsb
sahf
cld
xor
fcmovu
les
mov
inc
daa
out
in
push
pusha
adc
mov
leave
pop
push
shl
or
mov
fdiv
or
pop
dec
pop
sub
lods
js
mov
cmp
test
push
push
test
inc
hlt
mov
inc
dec
lods
test
mov
movsb
mov
xchg
push
ja
and
dec
push
pusha
mov
out
frstor
and
push
inc
mov
clc
cmp
sbb
dec
call
adc
mov
sbb
jae
dec
jae
and
and
out
fcomi
test
daa
or
pop
cltd
out
fimuls
lret
sub
cmp
pop
imul
ficoms
scas
hlt
mov
lcall
notrack
mov
adc
jb
cmp
adc
push
loopne
add
rclb
loopne
mov
popf
fucomip
and
and
inc
push
mov
in
cmovns
outsl
pop
cltd
add
bound
push
jmp
push
pop
sbb
in
push
sub
add
sub
add
jns
sbb
cmp
fs
test
add
mov
dec
daa
dec
adc
xchg
push
mov
and
repz
push
fcomps
pop
xchg
pop
or
jo
ret
fnstcw
loopne
mov
std
addl
mov
stos
fucom
xor
pop
int
rcrb
into
fldcw
pushf
lock
mov
je
mov
xor
mov
imull
std
ds
mov
pop
scas
dec
popa
push
pop
mov
sahf
data16
fcompl
and
loopne
shrl
and
int
ret
mov
int3
mov
fistps
xor
loope
fsubs
call
scas
out
lea
fistps
cltd
jb
dec
jo
mov
jbe
adc
les
fwait
sub
rorb
pusha
pop
jp
mov
pusha
sub
sti
jl
dec
cmc
mov
ret
push
sbbl
cmp
push
repz
in
cmp
push
mov
adc
mov
xchg
xchg
lahf
mov
pop
lock
clc
adc
xchg
movsl
push
imul
nop
add
imull
inc
dec
popa
hlt
mov
js
outsl
cmp
inc
dec
jae
scas
lods
adc
iret
ret
adc
or
xchg
shl
in
mov
aam
sti
pop
mov
xchg
dec
push
outsl
icebp
jns
xor
adc
out
sbb
mov
sbb
push
mov
sti
sbb
push
add
sub
mov
in
sbb
jo
das
pop
xchg
adc
pop
cmpsl
repnz
adc
mull
adc
in
cmp
lea
xchg
sub
in
aad
sahf
daa
aam
mov
or
ret
mov
push
pop
shll
cmp
and
mov
gs
inc
sub
sub
adc
lret
mov
mov
testl
fsubl
pop
loopne
xchg
pop
adc
icebp
or
jnp
xchg
pushf
stos
adc
andl
out
movsl
fldl
xor
sti
js
imul
ds
push
adc
xlat
test
or
pop
push
fwait
cmp
test
iret
fisttpll
mul
rorb
movsl
popf
mov
test
xor
insb
pop
mov
mov
mov
push
out
fsubr
xchg
xlat
popa
mov
sub
xor
push
mov
in
sbb
mov
pop
fnstsw
mov
in
popf
popa
xchg
das
js
out
pop
mov
jo
loop
adc
stc
xor
loopne
lahf
mov
sbb
mov
or
stos
jne
cmpl
add
ffreep
cwtl
sub
or
pop
test
call
pop
int3
ror
sar
movsb
sbb
sub
addl
nop
shlb
pushf
xor
fadds
dec
jge
out
cmp
push
sbb
jae
lret
leave
jae
mov
or
xchg
inc
xchg
loopne
loope
daa
addr16
mov
and
pcmpeqw
or
icebp
mov
push
bound
inc
or
aad
sar
inc
cltd
jp
movsb
jge
add
jae
mov
sub
cmp
add
into
pop
inc
cs
push
cmpsl
cmp
and
sbb
ret
jno
outsb
and
sbbb
mov
cltd
sti
mov
ja
icebp
insl
arpl
push
xor
ja
inc
mov
push
jmp
bound
add
insb
mov
sahf
ljmp
pop
mov
mov
imul
out
sti
aam
or
jp
or
and
repz
pop
loopne
mov
stos
pop
push
jle
lret
lock
nop
int
push
push
loop
mov
cmp
in
push
das
fsubrl
in
test
cmp
xchg
imul
sub
test
js
add
inc
popf
pushf
pushf
add
sar
dec
mov
mov
xorb
int3
loopne
adc
std
xor
push
or
jae
xchg
lea
mov
jp
push
mov
xor
xchg
jnp
jae
jle
jl
repnz
add
inc
roll
add
in
xchg
xor
negb
mov
fdivs
add
mov
mov
stos
cmpsb
inc
shlb
out
sti
ret
fistps
or
mov
rcrl
pushf
loope
sub
inc
mov
out
ret
cmp
andb
in
in
mov
inc
adc
xchg
cmp
out
mov
fmuls
jp
inc
pop
mov
int
rcrl
jle
mov
sub
decb
add
sub
sbb
fs
lcall
pop
int
xchg
cmp
into
or
xor
push
aaa
es
ss
cwtl
sbb
out
add
stos
in
fmull
and
dec
mov
pop
ret
popf
in
ljmp
xchg
mov
mov
loop
imul
in
iret
lods
add
sub
mov
les
adc
fcmovnb
xchg
dec
sbb
adc
rorb
int
push
pushl
mov
cmp
sub
cmp
loop
sbb
inc
cmpb
fstps
push
in
stos
pop
aad
adc
xchg
mov
dec
lods
es
cmpsb
jne
lret
mov
lahf
add
sbb
lods
sbb
xchg
aad
or
loope
into
mov
mov
dec
cltd
xchg
sbb
sub
add
mov
in
test
xor
pop
cmp
cltd
lock
jo
ja
aaa
lret
cmp
inc
adcb
divps
leave
jmp
jno
mov
inc
xor
fdivr
and
fstl
mov
push
inc
stos
das
jecxz
pop
dec
jo
push
loopne
aad
test
out
dec
pop
fcmovne
add
jae
cltd
mov
cld
call
test
mov
repnz
xchg
mov
movsl
mov
test
stos
mov
mov
cmp
inc
pop
inc
cmp
push
outsl
dec
cmpsl
jecxz
dec
xchg
push
xor
pop
bound
fldt
inc
or
jl
xor
notl
out
xchg
lock
push
aas
pop
out
test
cld
sub
notb
stos
push
jp
xchg
xchg
xchg
lock
cmpl
movsl
mov
aam
in
btc
cmp
inc
or
lahf
shlb
adc
cli
js
sub
xchg
sbb
mov
sbb
cmc
pop
stos
pop
iret
enter
sub
outsb
xchg
mov
test
loopne
inc
pop
pop
jge
pop
lahf
dec
sbb
mov
mov
insb
push
negl
mov
cmp
lret
push
inc
shrb
iret
leave
pop
mov
mov
and
sti
sub
xchg
sbb
xor
jp
jg
insb
lds
ss
pop
rorl
loop
sahf
cmp
inc
shl
out
inc
std
stos
scas
cwtl
mov
mov
inc
add
push
add
mov
and
pusha
cmp
notb
hlt
sub
adc
loop
xchg
inc
pop
pop
add
cmpxchg
mov
test
out
in
xor
push
lock
movsl
scas
ljmp
jmp
fistpl
lret
out
xlat
fdivrl
fbld
cmc
lea
adc
lock
mov
mov
dec
ds
lret
lock
lahf
adc
push
push
add
outsl
std
and
fwait
jb
stos
jle
lcall
loop
cmp
jo
push
inc
imul
movsb
mov
je
nop
cmp
xlat
mov
arpl
mov
mov
js
getsec
xor
mov
add
insl
test
or
insl
adcb
les
jmp
bound
pop
rorb
scas
push
imul
es
popf
pop
adc
out
dec
cmpsb
and
pop
rcrb
clc
xchg
cmp
sbb
or
and
pop
pushf
leave
cmp
mov
sub
aaa
insb
sub
movsb
insl
std
loope
jl
scas
jne
les
xchg
sarb
pop
addb
sub
mov
jmp
xchg
cltd
push
adc
sti
xor
lahf
xchg
jne
cwtl
and
xchg
pop
inc
cmp
stos
jns
xor
jbe
mov
push
pop
inc
dec
dec
iret
jge
push
xor
inc
test
inc
adc
or
mov
xlat
push
stos
mov
mov
out
push
shlb
adc
pop
fwait
outsb
gs
lods
clc
fnstcw
xor
adc
mov
sub
push
dec
dec
dec
in
or
imull
daa
scas
xlat
xchg
lahf
xchg
adc
adc
sub
xchg
mov
dec
mov
cmp
pop
push
pop
xchg
dec
dec
mov
enter
mov
inc
jns
stos
xchg
inc
std
divl
lcall
popf
repz
jp
cwtl
fists
push
pop
jecxz
out
pop
mov
push
mov
mov
sub
pop
in
and
mov
jl
xchg
sub
fldl
mov
mov
mov
jne
sub
cmc
shlb
fwait
comiss
orb
dec
add
mov
in
imul
in
xor
inc
jae
int
sahf
inc
push
fisubrs
dec
dec
mov
xchg
add
mov
inc
cli
test
jno
mov
ret
shrb
xor
lock
aam
lcall
nop
cld
add
or
fmull
push
addr16
add
repnz
sbb
pop
clc
adc
inc
fnstenv
xor
scas
xor
dec
inc
sub
sbb
xlat
clc
pusha
popl
icebp
bnd
and
push
push
enter
jl
popf
lock
jmp
push
popa
ja
cmp
mov
lret
push
pop
shll
ljmp
out
xor
es
adc
pop
add
and
inc
lods
mov
xor
push
clc
movsl
cli
or
sbb
fnsave
cmpb
dec
mov
mov
pop
hlt
xchg
jecxz
push
bsr
ret
aad
pop
dec
out
cmp
xchg
sbb
std
jb
mov
in
cmp
dec
pop
stc
pop
add
imul
inc
pop
ljmp
outsl
inc
mov
je
inc
lods
push
push
inc
sub
lret
mov
xchg
dec
pmaddwd
test
adc
push
xchg
lret
lret
cmp
mov
in
add
push
call
push
mov
and
adc
into
loope
mov
xchg
out
adcl
aad
ficoms
bound
cli
adc
lds
sbb
mov
mov
mov
push
adc
xchg
jne
xchg
jg
mov
repnz
cmp
push
in
loop
aas
xorl
adc
jecxz
and
jns
mov
test
sub
jns
adcb
pop
cmp
mov
shrl
in
daa
testb
push
jne
fiaddl
or
jne
inc
xchg
inc
mov
sbb
mov
jnp
lods
xor
ret
inc
repz
cmpsb
mov
push
inc
pop
in
fwait
pop
mov
adc
mov
repnz
in
pop
outsl
mov
scas
fdiv
std
repz
xchg
iret
jge
push
mov
pop
mov
xor
jbe
fs
sub
dec
lret
or
push
cs
push
jb
and
jae
shrb
divb
in
lcall
add
cmp
bound
mov
or
sahf
lahf
or
pop
and
lahf
sub
lea
jecxz
in
shlb
mov
adc
jne
lcall
movhps
cmpsb
push
jg
xchg
sub
xor
lods
and
push
push
xorl
out
insb
lcall
push
xor
sbb
pop
fs
lret
pop
adc
roll
loope
push
push
inc
jne
div
or
lds
aam
push
mov
fmul
cltd
jp
negl
icebp
inc
enter
adc
lret
shl
lret
pusha
test
jl
and
in
add
js
push
jle
xor
je
mov
ss
mov
dec
ffreep
lds
and
inc
cli
test
loop
jae
decl
int
push
shlb
out
mov
xchg
mov
add
add
dec
int3
dec
pop
xor
xchg
mov
cmpsb
sub
or
push
sbb
aas
bound
mov
js
jbe
mov
mov
test
icebp
je
jns
dec
nop
dec
test
xor
gs
daa
pop
dec
out
stc
stc
pusha
je
pop
cmpsl
jp
mov
jl
insl
rep
mov
mov
lock
mov
inc
ja
or
idivb
iret
mov
std
aaa
pushf
cltd
add
aad
pop
mov
cmp
jp
mov
mov
pop
xor
nop
adc
pop
and
xor
imull
add
les
lahf
lahf
mov
sahf
inc
adc
cmc
aaa
mov
inc
pushf
push
jmp
mov
inc
add
xchg
add
int
insl
mov
xor
loopne
aad
pop
movsb
mov
rol
adc
xor
cmp
das
aas
xchg
pushf
icebp
mov
adc
fisubrs
fidivs
mov
clc
adc
data16
decb
nop
xchg
pop
pop
push
cwtl
sub
je
movsb
mov
hlt
jns
dec
nop
dec
jns
cmpsb
mov
inc
leave
add
jmp
mov
sub
mov
and
xchg
xchg
xchg
xor
mov
mov
mov
mov
insb
sti
mov
loope
inc
push
jl
std
mov
fisubrl
cwtl
movl
add
sti
jns
mov
loop
test
lds
fldenv
out
fiadds
inc
loop
movsb
mov
or
and
sbb
lahf
cmp
xor
adc
pop
sbb
and
jecxz
outsb
loope
push
bound
dec
into
ret
lcall
out
cmpsb
sub
mov
scas
inc
pop
std
repnz
sahf
in
pushf
repnz
dec
adc
test
dec
dec
pop
mov
loop
xor
sbb
mov
pop
movsl
and
iret
rol
mov
ja
jne
test
cmp
or
lahf
daa
stc
pop
lds
js
into
stos
test
jecxz
cmp
pop
call
lds
inc
lock
cwtl
xchg
mov
jo
lahf
mov
push
aam
adc
and
or
inc
das
pop
jne
movsb
inc
pop
inc
jno
sahf
add
adcb
shlb
mov
add
inc
addb
bound
shlb
in
dec
les
in
ss
and
jmp
adc
cmp
sbb
add
pop
add
lock
sbb
xchg
fisttps
inc
repz
ds
mov
out
test
cmp
bndldx
xchg
in
inc
jb
pop
aas
stos
xorl
xchg
jl
mov
xchg
leave
stc
push
ja
cmp
int
mov
inc
lret
aam
jle
imul
xchg
xchg
pop
fdivrl
xlat
loop
jbe
in
or
xor
and
xchg
insl
stos
xchg
sbb
mov
sarb
in
and
idivb
mov
fnsave
pop
add
int
cmc
loope
dec
inc
cmpsl
cmpsb
add
ja
dec
cld
cmp
jle
push
sbb
adc
int3
cmp
inc
fcmovne
xor
xchg
cmp
addr16
inc
mov
cltd
xchg
sbb
push
jnp
pop
sub
test
mov
dec
or
jb
dec
or
ljmp
mov
xor
xchg
push
or
fsubrp
pop
leave
mov
dec
outsb
adc
mov
std
and
pop
mov
dec
inc
pop
xchg
cmp
push
adc
mov
outsb
ret
push
mov
mov
adc
lret
mov
stc
cmpsl
aas
inc
sbb
cltd
mov
mov
sub
cmp
jno
xchg
cli
mov
mov
fwait
in
shl
mov
jl
jae
inc
rcl
cmc
ss
mov
lods
mov
cmc
xor
dec
pushf
out
int
push
lods
aam
dec
jp
std
cmpsb
inc
je
dec
mov
mov
cmp
unpckhps
jle
mov
insb
cmp
adc
iret
xchg
bound
aad
jne
loopne
inc
test
or
or
mov
lock
pop
push
leave
and
fucomip
fiaddl
call
add
xor
nop
pop
or
mov
xor
xchg
out
fidivrl
fsubrl
in
jmp
or
or
xor
mov
adc
sarl
and
movsl
lret
push
sub
pop
jno
pop
jmp
push
mov
sbb
sub
mov
xor
loop
push
nop
je
hlt
pop
cwtl
or
in
or
mov
neg
and
mov
add
sbb
test
xor
shll
mov
sub
ja
mov
or
test
lret
int3
scas
iret
jl
push
sbb
add
sbb
and
lcall
andb
es
xchg
add
ja
imul
and
mov
fnstsw
push
sti
js
mov
cltd
add
sub
push
repz
pop
push
xchg
test
insl
xorb
leave
fldt
mov
lods
call
inc
jns
pop
mov
imul
mov
mov
push
dec
psubusb
mov
sbb
push
nop
push
sub
incl
push
xor
jne
int3
xorb
add
fcoms
and
cmc
pop
jecxz
aas
int
dec
xor
pop
xor
cli
int
dec
xor
addr16
fistpll
addr16
loopne
mov
pop
jmp
mov
aad
je
xchg
fwait
mov
mov
movsl
idivl
imul
sub
mov
pop
and
vpsubusb
out
lret
fstpl
lahf
pop
push
pop
shlb
or
adc
pop
fdiv
in
fs
xor
dec
gs
xchg
out
or
pop
mov
mov
adc
cmp
test
das
fsubrs
inc
shlb
mov
pop
jge
sbb
test
add
xchg
push
push
dec
test
and
or
outsb
jb,pn
aas
in
add
lahf
in
inc
cld
shl
scas
pushf
idivb
sbb
icebp
mov
mov
cwtl
sub
push
mov
dec
pop
inc
fnsetpm(287
into
or
jne
test
pop
sub
addr16
adc
cltd
enter
movsb
pop
arpl
mov
jge
out
sub
or
icebp
cli
mov
aaa
xchg
inc
pop
mov
call
pop
and
in
mov
or
loop
sub
data16
out
sbb
sbb
lahf
mov
inc
pop
mov
sub
call
aaa
mov
and
stc
pop
and
sbb
mov
mov
frstor
imul
fwait
cmpsl
dec
in
repz
les
stos
out
pop
andb
insl
pop
pusha
xchg
mov
outsb
mov
sbbb
sbb
dec
and
push
pop
jb
or
fisubl
and
cmpsb
mov
pop
sarb
shr
adc
mov
pop
mov
push
fs
xchg
test
ja
repnz
push
xchg
repz
movsb
imul
pop
imul
jmp
sub
fbld
pop
and
jp
shlw
xor
or
and
push
cmp
sub
push
xchg
testl
movsb
imul
fcmovnbe
cmp
dec
idivb
out
in
mov
push
jb
imul
dec
loope
out
add
xchg
leave
cmp
pop
push
out
push
push
int3
mov
int3
xchg
add
jb
stos
jne
loop
adcl
xchg
hlt
in
std
mov
loopne
arpl
sbbl
mov
leave
dec
pusha
mov
sbb
mov
cmc
stos
outsl
add
adc
stos
jbe
inc
fnsave
test
jno
cmpsl
mov
add
outsl
movsl
xor
cs
popa
lods
xorb
mov
das
push
mov
pop
ss
jne
call
or
cwtl
iret
dec
mov
repnz
loop
cmp
lahf
mov
mov
xor
sub
das
sub
adc
or
mov
push
hlt
int3
addr16
leave
pop
testl
aaa
mov
inc
pop
in
leave
sub
sub
xor
jl
mov
flds
enter
stc
repnz
stos
dec
mov
aam
and
lret
and
cmp
test
or
xor
jecxz
mov
mov
scas
stos
jle
in
mov
jmp
inc
idivb
push
ret
fsub
cmp
inc
lret
adc
loope
int
mov
adc
push
inc
add
ljmp
sbb
jo
inc
dec
enter
out
fldenv
pushf
popa
repnz
dec
push
xor
push
popl
jp
hlt
push
sub
jl
push
negb
or
cmp
out
mov
test
push
xchg
cmp
mov
ljmp
ret
fildll
push
jno
xor
push
cmp
mov
or
mov
xor
fisubrl
push
xor
testb
pop
xchg
push
aam
push
push
lahf
stos
pop
push
mov
dec
outsl
ljmp
notb
cld
lea
inc
loopne
rolb
adc
mov
jg
bound
cmp
pop
stc
jp
sbb
push
iret
je
aam
fwait
sbb
icebp
xor
test
push
orb
xchg
fcmovu
push
xlat
xor
cmpsl
dec
xchg
mov
push
mov
push
testl
sahf
int
fstps
cmpsb
pop
jecxz
lcall
lea
and
cmp
and
or
repnz
aas
leave
push
pop
pop
mov
adc
lret
je
mov
sbb
pop
je
fsincos
sti
sub
into
lds
adc
add
addr16
mov
adc
dec
insl
xchg
test
xor
mov
push
mov
loope
dec
push
pop
stos
loopne
lods
repnz
aaa
xor
mov
sbb
sbb
fs
xor
pusha
mov
les
sbb
mov
hlt
iret
stc
lsl
jmp
cli
ljmp
jle
int3
push
fildl
nop
push
pop
ljmp
dec
sub
pushf
mov
xchg
ljmp
or
xchg
mov
mov
cld
shlb
flds
sub
push
xchg
bound
popf
inc
sbb
andb
pop
mov
movsb
fnstcw
cmpsb
sub
push
inc
imul
dec
lds
ds
mov
xchg
ficompl
daa
std
mov
xor
lcall
rorl
jne
push
lahf
fbld
xchg
cmpsb
push
sub
inc
adc
mov
insl
call
xchg
xchg
push
and
movsl
fwait
lcall
ret
rclb
and
cmpsl
mov
insl
rep
sbbb
and
or
sbb
sbb
in
mov
lret
nop
pop
imul
jo
pop
scas
cltd
enter
jge
sub
in
stos
inc
cmp
bnd
insl
mov
out
push
adc
pusha
cmp
jge
inc
incb
aas
xchg
push
in
icebp
sbb
fidivrs
ss
jo
push
fisttpl
stc
adc
xorl
cmp
lret
scas
cmp
dec
push
xchg
sub
movb
adc
cmp
jb
mov
ficoml
jecxz
adc
mov
jge
dec
popa
cmp
cmpsb
pop
arpl
mov
shrb
mov
addr16
test
mov
cmp
jp
leave
ds
inc
sar
loop
cmpsb
pop
xchg
mov
adc
lcall
std
ss
icebp
pop
push
fistpl
stos
xchg
shll
test
daa
pop
xchg
mov
cld
cli
rolb
sahf
and
and
adc
imul
decl
fcmovbe
mov
movsb
and
xchg
aad
cmc
ss
movsb
imul
or
pushf
movsl
add
test
nop
xlat
push
cli
clc
call
jl
fcomi
stc
arpl
inc
fsubl
mov
inc
jecxz
stc
repz
pop
divb
xor
shll
pop
add
inc
push
mov
popa
mov
and
jb
mov
jmp
lods
push
scas
mov
pop
imul
nop
repnz
pop
int3
adc
mov
mov
dec
rcr
out
mov
shl
aam
mov
xor
ljmp
jns
mov
aad
mov
add
cmp
scas
pop
insl
js
push
add
sbb
add
inc
int3
push
aaa
push
sbb
mov
fsubrs
aas
rcrl
mov
call
shlb
or
mov
ret
pushl
push
adc
loopne
rcr
mov
rorb
scas
je
aad
pusha
icebp
ds
sub
shll
sub
ret
pop
mov
xor
testb
sahf
dec
ja
mov
and
fcmove
push
mov
lahf
fidivrl
pop
jecxz
imul
mov
je
mov
inc
jno
fsubs
jno
jl
insl
fwait
mov
cli
and
adc
addr16
jg
sbb
xor
aad
andb
dec
sbb
mov
mov
jae
add
repnz
dec
jmp
fiadds
xchg
iret
sbb
out
lret
adc
push
out
cmpsb
xor
pop
pop
jg
in
cmp
imul
mov
jnp
lcall
sahf
pop
jmp
adc
pop
xor
int3
mov
mov
dec
stc
and
pusha
lret
mov
lds
jecxz
scas
scas
xchg
jge
inc
dec
fsubrs
mov
shlb
sub
in
sub
dec
into
and
adc
add
mov
cs
cltd
mov
jne
push
jp
jg
ja
out
imulb
push
inc
out
pop
or
mov
sub
cmpsl
sub
mov
lods
mov
xlat
cmc
or
fcmovb
in
mov
das
sub
dec
xchg
or
aaa
out
loopne
or
bound
aad
jle
aaa
push
inc
movsl
cld
pop
incb
and
pop
xchg
loop
out
xchg
jp
sub
push
sbb
mov
sub
repnz
test
imull
insl
mov
rorb
cltd
cmpsl
shrl
cmp
or
je
fnclex
icebp
inc
outsb
mov
push
bswap
clc
jmp
inc
enter
mov
xchg
bound
jnp
pop
fsubrl
xor
xchg
repz
sub
lahf
sbb
mov
js
push
inc
mov
daa
bound
pop
enter
rcrb
pop
xor
cwtl
mov
or
iret
iret
push
repnz
cmc
mov
xlat
push
call
rclb
mov
lds
pop
inc
es
stos
cmp
fstpl
xor
inc
in
lcall
mov
pusha
mov
mov
lahf
push
adc
sbb
stc
pop
xchg
and
mov
jnp
xor
xchg
stos
test
cmpsl
lods
pop
push
pop
flds
shrl
imul
lret
mov
addl
sub
jge
flds
adc
mov
scas
jmp
ja
xor
addl
bound
adc
leave
push
push
fwait
add
add
jbe
and
push
out
fldcw
mov
loop
xor
mov
xor
dec
sbb
sub
fimuls
dec
enter
xchg
or
roll
cmp
xor
mov
mov
adcb
popa
mov
popf
pop
inc
jle
mov
dec
aaa
or
sub
fistpll
nop
fwait
or
insb
push
xchg
or
or
add
pop
insb
pop
jp
pop
rol
pop
mov
ret
arpl
ja
xchg
outsb
mov
xchg
mov
shrl
jl
cmp
in
lods
mov
lahf
ljmp
call
mov
sbb
fists
push
push
add
rcr
and
jp
push
pop
inc
xchg
arpl
push
mull
or
dec
in
add
lods
loopne
pop
lret
add
fwait
lahf
and
push
jecxz
fimuls
std
jmp
in
lods
loopne
cwtl
pop
adc
js
in
cmpsb
cmp
repz
std
cmpb
outsl
adc
or
jl
fsubrp
sbb
sub
jecxz
imul
das
test
sbb
ss
lods
and
jnp
mov
add
pushf
movsb
add
jne
push
ficompl
xor
jecxz
es
scas
test
insl
clc
in
loope
in
frstor
cmp
sbb
jge
mov
jl
jl
dec
rcrb
int3
push
jnp
scas
pop
sub
and
jne
pop
mov
pop
shll
jbe
hlt
stc
pop
jp
std
adc
inc
mov
shll
mov
adc
push
pop
xor
faddl
inc
adc
xchg
mov
pop
jge
pandn
pop
test
sub
cmpsb
cmp
fdivrl
sbb
and
sbb
cwtl
aad
push
popf
xor
data16
and
add
add
push
pop
sub
int3
insl
mov
mov
inc
xchg
mov
je
add
shlb
dec
sarb
push
xchg
fwait
pop
scas
cmpsl
insl
jbe
pop
lahf
jae
pop
sbb
scas
out
inc
add
mov
cmp
pushf
push
jo
mov
and
leave
cwtl
sbb
sbb
cmp
sub
fmuls
pop
xor
xor
pop
sahf
dec
mov
hlt
xor
jl
mov
dec
dec
inc
lcall
dec
mov
jns
pop
sbb
imul
ljmp
mov
insb
xor
inc
pusha
aaa
cmpsb
mov
xor
jp
mov
mull
popf
xor
lcall
pop
fisubrs
cmpsl
xchg
xor
or
push
aad
cmp
mov
icebp
outsb
fstl
imul
je
js
enter
mov
push
mov
shl
jge
enter
fbld
mov
test
popf
cmp
leave
mov
and
mov
push
xlat
pop
dec
mov
push
xchg
fsubrl
jno
into
shr
jl
or
pushf
iret
repz
or
int3
xor
imul
aaa
in
ss
out
jl
mov
fiadds
xchg
xor
cwtl
into
jecxz
xor
sbb
cmp
jb
mov
pop
test
inc
fmuls
jbe
rorb
adc
fsubrs
pushf
sub
out
aam
mov
push
xor
call
push
movsl
jecxz
cmp
sbb
es
xor
loop
jae
das
xchg
mov
cmpsb
aaa
xor
pop
adc
cmc
mov
jmp
xchg
mov
xchg
adc
int
cwtl
mov
add
mov
in
mov
sub
pop
cmp
lock
mov
ds
mov
or
push
cld
in
inc
push
mov
pop
inc
push
out
mov
aas
pop
imul
out
lahf
jae
lea
movsl
shll
jge
repz
mov
and
repz
xchg
xor
cmp
mov
out
xchg
jbe
std
push
sub
subl
vpslld
dec
push
pop
mov
cmc
call
or
adc
fcoml
in
dec
cwtl
jno
pop
repz
outsb
shl
xlat
imul
dec
dec
jmp
xchg
adc
jecxz
mov
addr16
fimuls
sub
xchg
pop
and
jne
sbbb
xchg
lock
mov
out
xchg
sub
push
mov
cwtl
movsl
dec
ficoml
and
repnz
cmp
ja
fstpl
call
insl
add
loop
cmp
loopne
cwtl
mov
mov
push
dec
add
push
ror
pop
or
sahf
or
outsb
push
rorl
pop
popa
pop
mov
cli
outsl
sahf
daa
hlt
int3
popf
ja
jae
repz
xor
add
cld
mov
push
pushf
loopne
sub
out
fnstcw
sbb
enter
jle
inc
roll
xchg
cmc
pop
scas
les
mov
mulb
mov
fcmovbe
fs
fdivl
jg
mov
sub
hlt
loope
dec
inc
fs
sbb
jbe
sbb
and
jae
fdivrs
fidivl
push
cmpsl
mov
or
jmp
mov
js
fimull
adc
sbb
push
push
inc
aaa
push
push
shrl
mov
imul
inc
xchg
jmp
hlt
pushf
pop
push
jmp
xor
mov
rorb
sbb
dec
scas
call
pop
mov
sub
mov
jmp
dec
mov
dec
sub
dec
pushf
pop
cmpl
pop
adc
mov
imul
sti
jge
add
fildll
aaa
sbb
cmp
xchg
xor
movsl
shll
jns
mov
mov
inc
jbe
lods
cmpsb
arpl
add
cmp
xor
insb
jno
cltd
add
inc
sbb
pop
lock
ds
xchg
cli
and
xchg
aad
gs
clc
mov
sbb
xchg
ja
jmp
push
pop
mov
scas
and
adc
cmp
sbb
shr
or
and
pop
push
out
or
in
insl
xor
imul
shlb
pop
or
pusha
jl
clc
mul
sbb
pop
adc
std
mov
movsl
test
ret
inc
or
fnstcw
mov
call
and
add
cmp
outsb
adc
incl
bound
xchg
pop
mov
inc
and
loope
cltd
lret
ds
xchg
lods
popf
bound
loope
mov
pop
fisubrs
sbb
lcall
filds
dec
cld
dec
popf
push
push
jmp
xchg
pop
out
add
leave
xchg
mov
fistps
push
lea
cltd
pop
push
test
push
ret
les
inc
push
mov
inc
jmp
notl
mov
dec
shll
sbb
push
dec
dec
push
imul
fnstenv
aam
push
xchg
adc
std
test
pop
xor
enter
inc
mov
mov
sub
mov
dec
xchg
pushf
sti
popf
sbb
aad
sbb
mov
call
sub
sbb
sub
push
iret
dec
cmp
cmc
pop
mov
mov
pop
or
jl
dec
stc
jne
pop
outsl
add
xchg
jo
dec
or
jno
rcrl
ds
and
xchg
jno,pn
iret
test
shrb
sub
ret
sub
xchg
stos
inc
and
xchg
xchg
and
and
mov
xor
adc
sub
lods
pop
cltd
sub
fcoms
fcos
clc
call
clc
pop
sti
cld
jbe
push
arpl
adc
out
pushf
loope
lock
dec
imul
sub
fbstp
cmpsb
add
jo
jb
ret
mov
sbb
rorl
push
popa
aad
movsb
push
jno
frstor
rol
fdivrs
adc
fists
or
mov
jmp
aaa
in
xor
push
aad
cltd
pusha
push
out
mov
ds
sub
pop
pop
and
mov
jno
xchg
or
xlat
mov
adc
test
popf
loope
push
adc
push
cmp
mov
sub
xor
aam
pop
cli
cmpxchg
lcall
call
movsl
mov
or
xchg
cmp
sub
xchg
cmpsl
mov
adc
cwtl
scas
shrl
pop
frndint
adcl
jb
lock
pusha
mov
adc
inc
pop
push
mov
sub
loope
inc
popa
sti
mov
xchg
jno
xlat
insl
pop
gs
movsb
inc
jge
pop
ds
mov
mov
push
adc
xchg
pop
inc
dec
mov
push
sub
outsb
orb
mov
jo
js
fcmove
sub
std
jecxz
cli
xlat
shr
shl
cwtl
pop
ljmp
xchg
push
mov
fdivp
enter
mov
imul
ret
mov
outsb
sahf
push
movsl
pusha
sub
mov
cmp
sbb
sti
mov
inc
mov
addl
cmp
push
js
push
fdivrp
aad
dec
into
jecxz
sbb
mov
xchg
push
hlt
push
or
pop
sbb
clc
mov
movups
and
mov
lods
mov
ficomps
mov
leave
lock
add
sahf
dec
imul
js
ret
push
jl
test
fucom
push
test
xchg
push
sbb
push
mov
jp
scas
outsb
xchg
mov
sub
cmc
cmp
test
cmpb
dec
and
jns
mov
aad
lock
stos
ficompl
add
into
mov
fcoms
out
add
add
sti
and
enter
hlt
cmp
fistps
ds
hlt
arpl
in
loopne
cmc
pop
loopne
sti
sbb
or
and
dec
pop
jno
push
cmp
sbb
sarb
ret
cwtl
sbb
jp
mov
daa
sub
or
dec
lods
stc
xor
pop
mov
sbb
lahf
inc
sbb
and
inc
js
pop
je
xor
test
jecxz
and
and
popf
mov
cmove
and
add
mov
jg
push
sub
imul
testl
push
cmpsb
pop
out
pmaxub
mov
push
pop
xor
fildl
test
ljmp
pop
gs
mov
push
xlat
dec
js
gs
clc
cltd
jne
adc
sub
ds
rep
gs
fsubs
fisubrs
jbe
cmp
mov
sbb
mov
mov
loope
inc
xchg
jne
rcll
add
ret
cmp
dec
xor
out
jne
jno
xor
sub
mov
loope
repz
pop
imul
test
jnp
mov
xchg
xor
mov
and
dec
repz
ret
aas
mov
cld
call
jb
inc
fbld
inc
in
aam
cmp
fbld
movb
adc
cwtl
jb
test
xor
imul
setne
andl
dec
pop
inc
mov
mov
nop
bound
cmp
and
dec
xchg
mov
ficomps
hlt
cld
outsb
pop
xchg
fwait
mov
aas
or
push
sbb
outsl
gs
pop
lods
xchg
pop
shl
fcmove
fiaddl
sar
fistpll
jge
and
pop
push
sbb
in
adc
test
syscall
pop
int
sub
aas
cmpb
cmpsb
mov
lea
push
mov
insb
push
fsubs
outsl
or
sub
adc
xchg
andb
dec
dec
pushf
sbb
xchg
loope
cmpb
lods
inc
and
mov
mov
popa
bound
xchg
sahf
push
sbb
inc
enter
rol
js
adc
test
cmpb
dec
ficoms
pop
shl
call
aas
cmp
out
mov
cltd
and
dec
bound
pushf
test
add
mov
adc
cwtl
addr16
xor
cwtl
pop
test
mov
imul
clc
es
jno
shll
inc
dec
jmp
xor
or
mov
dec
imul
push
sub
in
outsb
sysenter
mov
lods
cmp
cmp
cmp
aam
mov
into
pop
xlat
mov
mov
inc
and
lds
test
orl
jo
mov
call
shl
push
insl
orl
outsb
rclb
pusha
lods
and
push
push
out
hlt
add
jno
jecxz
scas
stc
les
sbb
addl
mov
push
push
ja
and
pop
or
out
cmp
ficoml
pop
mov
xor
insl
pop
repz
mov
pop
aaa
outsl
mov
sarl
jmp
cmp
iret
mov
sub
mov
push
cs
sbb
add
sbbl
adc
cmpsl
mov
test
and
mov
negl
hlt
in
dec
dec
rolb
test
adc
movsb
cmp
call
lods
js
stos
outsb
xlat
sub
xchg
jle
mov
jnp
repnz
cld
shlb
rcll
pop
xor
cmpsl
sbb
movsl
rcrb
and
lods
into
xchg
sub
add
push
outsb
enter
dec
jb
ficoms
shlb
outsb
xchg
into
push
push
jo
cmp
xor
les
daa
xor
into
sub
jae
cld
cmp
jbe
mov
sub
lds
pop
push
and
xor
mov
mov
inc
dec
push
scas
jne
stc
xor
cli
int
pop
adc
xor
pop
in
inc
lods
bound
cli
sub
and
das
or
arpl
xchg
xlat
aas
loop
xor
out
pop
mov
inc
push
inc
test
sti
mov
cmpsb
loope
sub
and
xchg
mov
xor
cmpsb
mov
and
jno
mov
xlat
popf
data16
cmp
push
mov
sub
subl
xor
jg
lahf
std
scas
dec
mov
je
js
aam
call
ficoml
or
aam
lock
dec
push
mov
scas
and
std
dec
divb
mov
cmp
or
pop
insb
push
mov
fistps
adc
std
sbb
outsl
jno
fsts
lods
inc
inc
sub
outsl
push
mov
cmp
mov
pop
lods
outsl
jbe
in
xchg
bound
pop
jbe
cmp
scas
mov
in
add
adc
pusha
push
filds
xchg
dec
stos
push
fsts
or
popf
xchg
jp
dec
lcall
dec
cmp
xor
mov
hlt
lcall
imul
or
icebp
aad
lcall
pop
cmc
mov
ljmp
call
add
cmp
xor
mov
xchg
mov
jo
pop
mov
jmp
insl
shrl
cmp
push
pop
cltd
ret
push
adc
mov
lds
jl
or
push
enter
cs
lods
scas
jl
xchg
pop
leave
dec
int3
xchg
or
addr16
mov
mov
inc
push
outsl
cwtl
lds
or
push
cs
lret
xchg
js
mov
pop
xchg
xchg
std
mov
lods
subl
push
push
aaa
inc
xor
cmp
aaa
and
std
add
and
mov
daa
in
adc
jge
pop
jmp
mov
in
cmp
andl
orb
sbb
dec
fnstcw
dec
mov
adc
popf
push
insl
sbb
mov
sbb
lods
enter
lods
inc
movsb
scas
and
adc
sti
cmpsl
inc
pop
inc
data16
dec
jns
pop
adc
int3
shlb
adc
inc
jl
imul
int3
in
lods
jle
dec
mov
test
dec
ret
jecxz
sub
scas
xchg
jno
movsl
push
pop
lods
inc
xchg
sub
out
mov
inc
rcl
inc
jne
jg
inc
or
and
and
or
stc
mov
ret
loope
shl
popa
sbb
enter
je
pop
movsl
ret
sub
pop
add
lock
mov
push
add
sbb
lds
push
push
pop
aaa
test
ficoml
sbbb
outsb
cmp
adc
ds
cmp
addb
into
movzbl
aam
push
in
and
inc
shll
shll
shl
pusha
leave
and
ja
pushf
int3
out
bound
popa
adc
adcl
push
xchg
jae
test
mov
in
dec
add
lcallw
jns
fs
aas
xchg
xor
dec
xchg
leave
adc
and
fsubs
int
insl
push
gs
mov
jmp
fmuls
add
sub
mov
xchg
or
cmpsl
shrl
movb
nop
push
std
push
leave
mov
or
sbb
xchg
jl
in
or
cmp
or
out
out
mov
cmc
aas
nop
mov
inc
adc
aas
jb
fbld
inc
lds
fldl
pop
or
cmpsl
xchg
sbb
add
enter
cmpb
add
pusha
dec
cwtl
push
je
adc
dec
dec
xchg
pop
inc
insl
or
insb
or
sbb
jo
push
jbe
and
sbb
inc
test
icebp
xlat
mov
sbb
fwait
enter
mov
pop
add
pusha
int
mov
push
push
das
ja
mov
dec
fiadds
push
pop
insb
dec
sub
ficoms
pop
scas
sub
add
rclb
filds
mov
add
jb
or
mov
mov
dec
subb
or
mov
mov
in
inc
rcrl
mov
int3
popa
add
xor
push
pop
mov
pop
sbb
jp
add
add
pusha
hlt
loope
mov
in
cmpsl
and
push
jge
xlat
mov
push
push
jb
add
jmp
test
mov
add
loopne
inc
adc
and
mov
roll
mov
or
fs
xchg
add
insl
cli
sub
movsl
dec
in
nop
movsb
add
or
mov
movsl
lea
or
rolb
test
lods
shlb
sub
add
notb
mov
mov
stc
loopne
test
bound
lahf
and
push
push
push
dec
mov
orl
mov
cli
jb
lret
cltd
add
popf
fs
jge
sbbl
lret
testb
push
imul
call
or
in
jbe
es
cmp
and
xchg
mov
add
mov
outsl
jbe
cmc
fnsave
xchg
fwait
push
lcall
in
aam
jb
and
adc
cwtl
in
xchg
inc
or
mov
sbb
pusha
lods
jnp
sti
pusha
in
sub
enter
repnz
enter
movsb
xchg
sbb
sarl
lret
xor
les
daa
mov
lahf
aad
sub
or
ror
mov
or
lret
mov
mov
sub
mov
pop
mov
push
cwtl
cmc
dec
inc
arpl
insl
push
adc
dec
in
mov
push
cmc
fistps
lret
js
pusha
push
divb
dec
pop
mov
push
mov
js
add
aas
fs
je
and
adcb
sbb
or
lea
jp
xchg
scas
push
push
jo
pop
mov
roll
push
idivb
leave
enter
repz
sbb
movsl
out
filds
movsb
pop
or
pushf
movsb
inc
sub
pop
fdivs
cli
jno
sub
push
dec
pop
dec
jg
dec
sti
cmp
push
ds
xor
jo
add
sub
push
xchg
dec
pop
lret
out
sbb
movsl
adc
pop
ret
mov
mov
pop
mov
cli
adc
test
pusha
stc
nop
pop
leave
sbb
lret
dec
jl
add
pop
ret
pop
jmp
jne
aam
test
xor
push
lahf
mov
jmp
stc
in
sbb
xchg
add
lahf
adc
fiadds
jne
aas
lret
fucomip
push
mov
sarl
fstpt
jg
dec
les
data16
test
lock
and
adc
fsubl
jmp
mov
add
daa
addr16
nop
mov
jae
push
xor
or
lea
rcll
adc
and
cld
pop
loope
imul
mov
inc
pop
and
inc
mov
fnop
mov
dec
sbb
mov
pop
mov
cmp
sarl
aad
adc
sub
xor
in
mov
enter
mov
js
fbld
cmc
sbb
xchg
fwait
icebp
stc
cmpl
xchg
xchg
arpl
and
idivb
lods
adc
cmp
cmp
aam
adc
jo
mov
mov
or
in
outsl
fmull
mov
shll
cmp
fsubl
mov
push
ret
fnstcw
jecxz
jae
inc
and
mov
xchg
je
js
jmp
or
icebp
js
fisttpl
dec
and
scas
xor
sbb
xchg
pop
or
mov
add
fcoml
or
sbbb
inc
mov
push
insb
nop
xor
pop
add
movsl
aas
mov
adc
in
cld
mov
xor
or
cmp
pop
call
call
cltd
rcl
je
cmp
outsb
ret
mov
sub
cmp
out
mov
fwait
out
mov
sub
pop
mov
pop
mov
jmp
fstl
testb
lret
and
jno
scas
mov
int
data16
inc
andb
cmp
rcll
cmp
sub
and
aas
ja
mov
pop
push
pop
fsts
xchg
mov
xchg
lock
setnp
xchg
rorl
icebp
sbb
aaa
fstl
fistpl
cmp
popa
lock
scas
stos
stos
adc
imul
fs
pushf
mov
or
ret
jge
in
or
mov
push
lods
push
js
sub
imul
dec
insb
jne
xor
cs
arpl
data16
mov
pop
push
lods
pop
mov
mov
sti
xchg
sarb
push
imul
aad
fucomp
sub
cmpsb
aad
jae
xchg
es
dec
mov
cmpsl
push
inc
xchg
shlb
icebp
sbb
loop
fldenv
ret
jmp
ds
icebp
iret
jnp
test
xchg
je
aas
or
cmp
cmp
push
dec
pop
xchg
push
push
out
out
cmp
jb
mov
ljmp
pushf
int
mov
or
add
outsl
add
and
hlt
iret
popf
and
add
into
ds
inc
sub
and
cmpsl
cmpsw
mov
xchg
and
rcrl
mov
cltd
pop
sbb
call
popf
cmp
mov
lock
sbb
nop
das
or
inc
in
insl
push
hlt
cmpsl
xor
ffreep
icebp
dec
loop
ss
inc
cld
dec
jbe
sub
pop
dec
adc
neg
in
cmp
pop
push
imul
push
push
insl
adc
outsl
push
mov
mov
movsl
fidivl
mov
and
xchg
scas
pushf
mov
xor
dec
rol
fimull
movsl
push
push
inc
xlat
imul
aam
call
call
and
faddl
jp
jne
adcb
clc
aam
addr16
mov
ja
sub
aad
sbb
mov
sub
lea
negl
push
xchg
notb
adc
repnz
mov
mov
inc
jle
stos
test
mov
or
fs
mov
jmp
jle
pop
imul
rcl
and
fwait
gs
or
mov
jp
push
test
fistpll
jnp
rorb
xor
xor
fstps
add
ficomps
call
lret
scas
test
loop
push
imul
aad
das
push
jmp
sub
adc
xor
adc
ss
push
ficompl
jg
jp
dec
jno
lock
inc
pop
lcall
out
in
lret
push
mov
xor
push
cmp
pushf
mov
mov
les
popa
ficoml
mov
int3
inc
xchg
aam
push
in
sbb
push
lods
inc
xchg
jge
out
pop
pop
out
jmp
xor
push
icebp
jp
sbb
test
or
jmp
nop
jns
nop
sub
cmpsb
cmc
xor
dec
dec
xor
test
outsb
ret
or
and
xchg
mov
jecxz
cli
cmc
dec
ljmp
lds
es
jle
pop
fcomip
adc
sub
decl
jle
jle
cli
mov
mov
lahf
rolb
or
fmull
mov
rdtsc
inc
and
int3
fwait
and
cld
in
popa
adc
push
mov
push
cld
popf
jbe
aad
aam
fdivs
and
inc
popa
es
xchg
bound
cmp
repz
cli
sbb
mov
ljmp
movsl
cmp
scas
fnsave
call
dec
out
in
rcrb
hlt
cmp
mov
push
inc
mov
jecxz
xor
xchg
stc
sub
mov
pop
push
inc
fidivrl
sti
or
jae
jle
adc
sti
add
cmpsb
loope
cmp
cmc
xor
dec
add
dec
adc
dec
in
andl
dec
fcmovnbe
and
cmp
in
daa
popa
mov
cltd
dec
pop
loope
out
fisttpl
push
mull
pusha
mov
arpl
fwait
arpl
sahf
mov
sbb
mov
mov
adc
loop
sub
imul
sub
pop
jp
std
out
jle
or
data16
push
jmp
in
imul
and
fists
adc
push
add
popa
outsl
lds
pop
int3
je
pop
sbb
rol
xor
dec
orb
daa
in
and
xchg
inc
imul
fwait
imul
jb
lret
mov
sbb
fcmovbe
pop
je,pn
popf
and
inc
mov
sarb
xchg
test
jl
pop
js
lods
outsb
jnp
adc
dec
dec
jmp
sbb
cmp
cmp
pop
xor
xchg
xchg
xchg
xchg
icebp
repz
sbb
sub
mov
mov
xor
js
push
jle
loop
cmpsb
dec
ds
movl
mov
jb
push
insb
imul
add
cmp
add
out
call
cs
sub
lret
push
inc
cmp
jnp
xchg
pop
push
sub
adc
jge
xor
iret
sub
sbb
jns
mov
lcall
cmpsb
fmull
je
jnp
push
add
pop
mov
sbb
loope
sub
pop
dec
mov
clc
mov
insb
sbb
jg
shl
mov
jb
aaa
fcmovnbe
mov
pushf
jo
inc
ficoms
iret
mov
push
subb
adc
push
mov
les
jb
into
xchg
and
out
rcrb
dec
std
data16
push
iret
inc
pop
jmp
xchg
jl
sbb
cmp
xchg
rclb
fucom
xchg
cmpsl
outsl
jnp
repz
in
fisubl
cmp
or
cmp
adc
stos
jbe
or
popf
jns
xorb
fucomi
rcrl
scas
popf
insl
bound
push
inc
cmp
cs
or
mov
lea
aaa
xor
mov
push
jmp
pop
mov
push
stc
arpl
mov
mov
lret
aad
es
out
sub
pop
sbb
imul
test
xchg
outsb
insb
pop
push
sub
jp
jg
ja
cli
xor
inc
push
int
dec
push
mov
iret
pop
outsl
test
xorl
je
and
aam
lock
lock
sbb
notb
push
movsl
aas
out
pop
pop
andb
mov
jmp
mov
or
and
and
mov
cmp
inc
js
xchg
sub
arpl
or
cmp
xor
aam
scas
addl
mov
xchg
repz
jg
pop
das
divl
leave
xchg
push
jbe
pop
inc
xor
loopne
sub
inc
adc
in
jg
imul
push
rep
cs
sbb
cltd
ss
jmp
sbbl
xchg
addr16
dec
xchg
sarl
in
inc
mov
or
in
jecxz
cltd
lds
imul
aad
push
pop
js
test
aam
fmull
xchg
push
mov
pop
pop
sti
mov
inc
or
fstpt
lock
stc
mov
sbb
int3
or
inc
orl
push
outsl
cmp
mov
add
mov
aad
mov
pop
sbb
jbe
test
ja
inc
ljmp
push
fsubp
in
dec
inc
insb
xchg
ret
sbb
mov
insl
push
cwtl
test
ret
mov
hlt
dec
sub
stc
iret
cld
and
aam
lcall
sti
add
aad
ja
or
std
cmp
mov
addr16
cwtl
icebp
mov
into
adc
test
js
ret
mov
jae
mov
call
jmp
lahf
out
push
jns
fisttpll
cmp
les
movsl
cltd
cmpsl
scas
in
jno
xor
dec
scas
sbb
not
jne
movsb
jbe
and
pop
sub
gs
daa
dec
xacquire
das
popf
sbb
jns
loop
stos
in
andl
or
and
int
sbbl
dec
add
mov
lret
cmpsb
clc
xor
in
adc
ds
sbb
call
pop
lds
mov
and
ja
cmpsb
jns
fisttpll
gs
enter
cld
xor
xor
mov
inc
lahf
rclb
popf
sbb
into
push
jo
rcrl
add
mov
loop
and
dec
in
pop
pop
mov
inc
adc
testb
ljmp
pop
and
inc
add
dec
aad
adc
dec
jg
stos
push
adc
mov
pop
pop
stos
mov
push
push
push
and
pop
push
stos
jne
adc
jb
ret
insb
je
mov
or
das
lods
rcll
stc
clc
test
ds
mull
lret
inc
jnp
outsl
add
cmp
in
je
dec
cltd
lret
inc
cmp
insb
cmpsb
in
and
adc
int3
mov
push
jmp
lcall
repnz
call
rol
shlb
inc
sub
sub
mov
mov
mov
test
aad
scas
add
jp
in
sbb
ret
mov
and
popf
icebp
mov
xchg
insb
test
shrb
mov
testb
xchg
xchg
pop
jg
cmp
stos
andl
add
call
cltd
adc
roll
inc
cmp
dec
das
pop
movsl
xchg
ja
fcomi
pop
xor
inc
cmpsb
sub
add
mov
jp
xor
dec
fidivrl
and
xor
mull
das
pop
mov
pop
sbb
jg
xor
fcmovnb
jne
pop
push
mov
movsb
aam
iret
sahf
adcb
adc
test
mov
cs
inc
in
les
xor
mov
sbb
repz
push
adc
mov
shlb
sbb
push
push
push
add
test
fisubrl
out
jo
fsts
es
ret
incl
and
or
inc
cmp
push
push
scas
outsb
cltd
subl
loopne
jo
push
fs
add
pop
jo
addr16
pushf
inc
push
gs
mov
adc
fs
cmp
hlt
mov
fcoml
dec
mov
dec
movsb
mov
cmp
cmp
xchg
aas
repz
jb
rcll
mov
mov
lahf
jne
or
cld
std
scas
or
decb
or
add
sbb
jle
xchg
addr16
inc
or
mov
inc
inc
add
and
test
repz
xchg
pop
sbb
or
push
cmc
mov
fwait
xchg
pushf
movsb
nop
xchg
mov
sarl
hlt
cmpsb
mov
mov
and
dec
mov
sahf
jnp
xor
push
sub
cs
mov
repz
xchg
lret
jmp
js
mov
cmpsb
cwtl
add
rcll
cmp
jle
das
shl
rolb
mov
sahf
js
fdivl
push
mov
pop
data16
in
cmp
xchg
push
sbb
pop
loop
shlb
ljmp
mov
push
pop
into
test
and
add
out
inc
ret
pusha
ret
jge
js
sbb
or
insb
addr16
mov
mov
cmp
aaa
mov
push
outsl
lds
in
mov
out
rolb
repnz
sbb
imul
daa
das
addb
sub
hlt
sub
xlat
out
lcall
push
insb
adc
rcl
loopne
shrb
adc
mov
mov
aaa
clc
loopne
loopne
or
mov
jbe
dec
loope
and
ja
mov
test
outsl
xor
aaa
xchg
test
xchg
add
pop
fsts
sub
fldt
sarl
mov
bound
sbbb
mov
aas
aad
sarb
mov
push
ficompl
insb
jmp
add
mov
arpl
popa
popf
stc
call
mov
mov
dec
mov
mov
jbe
sbb
xchg
cmpsb
ss
es
xorl
aad
into
cs
or
testb
mov
dec
ficomps
shrl
rcrb
xchg
dec
cmp
sahf
mov
jno
dec
mov
mov
pushf
sbb
lret
insb
dec
daa
mov
xchg
and
jmp
mov
int3
pop
inc
sub
pop
xor
mov
or
ljmp
dec
mov
pop
je
and
test
lods
sbb
test
stos
fucomip
mov
in
cmp
or
loop
xor
lcall
xchg
mov
jnp
mov
rol
add
cmp
rclb
fidivs
int
xchg
push
dec
cmp
push
ljmp
pop
jge
sbb
int
sbb
sbb
lcall
mov
dec
push
mov
xchg
int
arpl
insl
arpl
fwait
dec
jp
mov
cld
dec
lret
inc
dec
sub
xchg
cmp
xor
and
or
in
lods
or
gs
push
push
sahf
popa
jbe
jb
push
ds
sbb
sbb
scas
dec
and
push
sbb
fwait
sbb
clc
adc
mov
jle
cmp
mov
movsl
scas
inc
jge
mov
scas
xchg
xor
add
inc
or
jmp
xor
bound
lods
rorl
mov
out
mov
pop
mov
push
mov
inc
into
cmp
pop
push
pop
or
lret
inc
fcmovbe
xchg
andl
xor
cwtl
mov
jecxz
mov
cmp
jae,pt
dec
insl
sbb
fnsave
jbe
mov
xor
lcall
xchg
scas
push
cld
dec
stos
or
push
movsb
and
push
xchg
pushf
mov
add
ljmp
jmp
lret
vpshufhw
or
pop
lahf
jno
pop
push
movsl
add
cld
enter
or
stc
push
pop
loopne
xchg
dec
jge
mov
icebp
pop
lret
jl
icebp
ret
and
mov
mulb
ffree
xchg
xor
jge
cmpsb
cmove
mov
mov
mov
adc
xor
add
pop
add
sbb
cmp
aad
mov
xor
cwtl
xor
pop
bnd
adc
or
inc
dec
or
rclb
xlat
pop
dec
jp
mov
mov
popa
dec
or
cmp
sbb
mov
insl
xchg
scas
dec
aas
push
mov
outsb
sub
mov
xchg
push
and
add
pop
adc
jo
inc
cmpsl
xor
fcmovne
rol
lea
cs
sbb
mov
daa
iret
push
mov
outsl
mov
fsubl
and
sub
leave
stos
std
cmp
mov
xor
sub
mov
dec
xchg
xchg
mov
lds
in
jns
pop
or
aas
dec
xor
aad
pop
cmp
pop
arpl
adc
cld
adc
mov
js
push
lods
popf
jecxz
lea
push
int3
cmpl
jae
jg
test
jmp
adc
pop
cmp
xlat
lea
inc
lods
inc
mov
adc
dec
mov
add
vunpcklps
add
test
sub
sbb
pop
jg
mov
scas
sbb
test
xor
rclb
nop
push
cmp
or
cmc
inc
cli
flds
lock
mov
sbb
dec
cli
jge
popa
and
movaps
sub
call
cmp
test
xchg
fimull
loope
pop
rcrl
test
jbe
jmp
mov
cs
lods
and
lods
mov
test
mov
mov
inc
or
xchg
pop
push
adc
daa
adc
scas
fcomps
rorl
test
or
icebp
icebp
inc
fldt
rcll
stos
adc
fsubrl
push
test
scas
add
dec
ljmp
adc
xchg
jns
stos
sti
pop
jge
insl
fcomip
hlt
iret
xor
cmpsl
dec
cmpsl
in
les
push
and
inc
jl
jmp
cmp
aas
push
inc
sbb
adc
and
cld
cwtl
mov
loop
mov
rorl
push
faddl
xchg
jns
xor
mov
mov
fs
call
test
daa
ljmp
sub
mov
xchg
movsb
jl
inc
jns
jmp
add
sub
sbb
xor
dec
pop
mov
pop
pop
mov
cli
and
pop
fstp
or
mov
push
pop
pop
clc
add
sbb
sti
push
inc
mov
sub
and
adc
out
shlb
inc
pop
cmc
sbb
icebp
ljmp
mov
mov
jb
push
test
pcmpgtw
mov
lods
into
int
rcl
mov
jmp
je
mov
mov
mov
and
fwait
gs
pusha
frstor
dec
rcl
xchg
push
aaa
jns
loopne
repz
jns
xchg
jle
lds
dec
pop
push
xor
sbb
cmp
jae
inc
sub
xchg
pushf
leave
test
outsl
inc
pop
leave
mov
mov
jns
mov
je
aas
mov
out
aad
dec
jl
call
pop
inc
ja
ja
jmp
cmc
sahf
ret
loop
jo
lods
pop
pop
jg
fimull
xor
pop
xchg
jg
mov
outsb
ljmp
xchg
ret
xchg
sbb
int
loop
punpckhbw
rcl
inc
inc
mov
les
mov
ss
dec
pop
je
xchg
cld
add
sbb
loope
clc
inc
adc
sbb
inc
fdivrp
dec
mov
cmp
sbb
lret
loope
dec
cmp
lret
jb
dec
cwtl
es
mov
jo
ljmp
je
and
insl
jne
inc
and
repz
pop
mov
es
insl
aad
sbb
mov
incb
inc
jo
push
cmp
lahf
es
lock
mov
rcr
das
lret
clc
loopne
dec
cwtl
jbe
cld
aas
int3
in
push
push
sarl
mov
test
mov
scas
add
outsl
xor
test
ficoms
sub
mov
addr16
and
mov
subb
popa
ds
daa
jle
pop
in
js
sbb
mov
lcall
sbb
cmpl
into
aaa
sub
fwait
mov
mov
clc
bound
cmc
mov
or
outsl
mov
sbb
cmc
jbe
aaa
test
dec
fwait
gs
aas
cmp
test
nop
push
push
out
dec
inc
into
fwait
pop
jnp
int
mov
mov
sbbb
mov
leave
mov
cli
push
adc
imul
push
enter
or
pop
xchg
cld
sti
int
aaa
inc
scas
pop
xchg
mov
push
push
icebp
cmp
lcall
pushf
imul
mov
call
xchg
movsb
jecxz
mov
jns
loope
lods
aaa
mov
test
into
xchg
xlat
mov
mov
lods
cmp
lahf
scas
negb
push
xor
addl
popf
lods
stc
bound
dec
xlat
xor
call
in
lret
cmp
xor
push
and
cmp
inc
inc
dec
inc
cld
push
jecxz
out
xchg
aaa
fimuls
scas
xchg
stos
push
into
jg
pushf
xorb
test
and
das
outsl
sahf
push
xorb
cmp
push
outsl
cmp
fisttps
cltd
xchg
les
arpl
xor
cmp
and
xchg
mov
push
in
dec
push
sub
cmp
lahf
lea
inc
jns
out
movsl
sbbb
out
and
cld
in
ljmp
cmp
ficoms
xchg
mov
pop
pop
add
pop
lods
jecxz
xor
data16
adc
out
mov
cwtl
adc
dec
sub
cmc
movsl
or
jp
push
cmp
inc
jne
lret
lcall
dec
jg
aam
cli
ret
lret
dec
sbb
js
mov
int
in
jns
icebp
scas
adcb
or
and
dec
outsb
dec
in
push
pop
jle
dec
mov
clc
pop
mov
inc
sub
adc
xor
push
out
cmp
data16
out
mov
int
mov
int
outsb
xor
push
hlt
inc
addr16
int3
push
inc
add
or
add
mov
xchg
jbe
jo
cmp
push
mov
rorl
gs
loopne
cmp
rcrb
fwait
or
mov
ljmp
mov
or
lea
stc
ja
in
sub
push
sbb
push
push
add
cmp
add
jne
adc
dec
js
mov
ljmp
add
or
das
cmp
inc
jae
dec
out
mov
mov
adc
jmp
dec
and
out
lds
sub
mov
movb
pop
sbb
lret
xchg
stos
imul
push
jle
jns
push
jne
lahf
imul
push
and
add
jl
jl
sub
sbb
icebp
xchg
stos
daa
pop
add
in
test
addr16
dec
cmp
in
cmp
and
push
mov
inc
and
out
lods
pop
mov
addb
xor
mov
pop
pop
adcb
and
not
iret
xor
inc
cmpsb
pop
gs
fisubrs
jl
inc
mov
jp
push
lods
xchg
adc
sbb
xor
sbb
dec
adc
lret
sahf
pop
loopne
and
xchg
push
gs
xchg
daa
inc
xor
dec
sbb
in
and
insl
ds
sti
xor
inc
mov
sbb
xlat
test
mov
gs
clc
sarl
pop
pop
cmp
insl
test
ds
push
sub
cmp
mov
cmp
in
negb
mov
inc
mov
inc
js
data16
jbe
mov
sub
hlt
push
and
lea
shrl
adc
rorl
daa
orb
adc
adc
stc
xchg
adc
pop
sbb
mov
movsb
sti
out
pop
push
adcb
fxch
jnp
repnz
jle
cmp
ss
jmp
loope
jg
int3
outsb
pop
sbb
pop
ss
inc
xor
pop
xor
push
je
xor
or
ret
xor
push
inc
in
in
lods
ret
lahf
jle
mov
aad
sbb
xchg
js
xor
add
stos
cmc
push
xchg
insl
add
xchg
sub
or
mov
push
frstor
aas
and
xorb
sub
dec
mov
pop
xchg
xor
mov
adc
cmpsl
ret
scas
aas
push
mov
popa
add
shll
xor
fstp
test
outsb
popf
js
outsl
mov
mov
hlt
cmp
adc
jb
xchg
sub
loopne
inc
mov
addr16
adc
ret
test
pop
lods
mov
pop
inc
nop
mov
mov
cmpsb
xchg
mov
mov
pop
fisubs
js
iret
mov
pop
sbb
imul
mov
mov
jns
imul
push
mov
cmp
push
push
push
inc
or
js
in
fiadds
pop
loopne
arpl
call
sbb
je
cmp
outsl
cmpb
cmp
sbb
xchg
sub
testb
test
xor
repnz
hlt
mov
addr16
cmp
mov
xchg
shl
leave
arpl
jnp
aaa
dec
sbb
stc
xchg
iret
aaa
test
iret
mov
jmp
imul
ljmp
je
imul
ja
leave
repnz
imul
movsb
enter
shrl
pop
inc
imul
aas
rcll
insb
out
std
adc
shlb
and
lret
fs
add
faddp
stos
mov
xor
es
mov
fsubs
cmc
cwtl
inc
ljmp
dec
int3
arpl
xchg
inc
popf
mov
pop
pop
shlb
jne
negb
mov
inc
mov
cmp
adcb
mov
sbb
inc
rol
in
je
cmp
movsb
shll
sbb
sarl
sub
inc
test
in
mov
loop
in
out
inc
add
inc
mov
jbe
mov
adc
fsub
dec
fbstp
xor
sahf
mov
xor
in
pop
scas
orb
ret
jae
test
cs
fsub
popa
test
mov
xchg
dec
dec
pop
je
xchg
add
out
lods
jns
mov
pop
dec
das
dec
or
lea
mov
pusha
pop
iret
out
dec
addb
lea
mov
mov
adc
imul
lahf
mov
add
push
jns
rcll
or
push
mov
xchg
js
stos
lods
xchg
dec
adc
pop
leave
mov
pop
lret
xor
pop
out
aaa
jmp
pop
add
or
inc
cmpsl
mov
dec
jns
fs
lcall
xchg
push
jae
cmpsb
popf
decl
adc
repnz
popl
inc
shr
mov
mov
cmp
cmp
xor
pop
lods
lcall
popa
lock
subl
and
mov
cmp
pop
sahf
push
mov
push
xchg
mov
xchg
shrb
call
add
xor
xchg
mov
mov
rolb
pushf
cld
das
or
in
inc
or
push
push
push
cmpsl
call
outsb
lcall
sbbl
popa
pushf
lods
mov
xor
jecxz
in
sbb
jp
cmp
push
fwait
jo
repnz
aaa
incl
cmc
push
pushf
mov
inc
in
jnp
cmp
mov
lahf
jae
aad
cmp
pop
push
testb
push
adc
jns
mov
jl
outsl
push
and
add
inc
pusha
cmpl
cmp
pop
fs
dec
add
bound
add
push
inc
clc
jmp
imul
adc
sbb
inc
das
fistpl
mov
sbb
pop
mov
loopne
nopl
sbb
mov
les
fstp
movsb
imul
add
int
sub
xor
push
or
inc
fwait
lods
pop
lret
pop
add
out
stc
out
or
push
xchg
hlt
dec
and
cmp
jmp
mov
mov
lea
sub
pop
mov
lret
pop
arpl
sbb
fimull
fsubp
mov
and
fildl
mov
or
pop
cmp
jne
cmp
mov
jno
lahf
pop
xchg
es
scas
xor
ret
push
jl
in
inc
sub
pop
mov
loopne
jl
les
sub
ret
popf
add
mov
fstpl
insb
and
push
pop
ljmp
fdivrs
lret
scas
pop
sub
sbb
into
cmp
add
out
stos
push
in
mov
mov
xlat
in
inc
mov
pop
pop
push
sbb
adc
inc
cli
mov
cli
mov
leave
movsl
jmp
aam
cmp
add
or
cmp
pop
lock
sub
pushf
add
jno
pop
cld
test
mov
sbb
ret
push
in
pop
ds
gs
aam
sbb
scas
xchg
sub
fmull
lahf
scas
cmp
mov
sub
cld
std
cmp
mov
dec
or
fwait
adc
sub
push
sub
sub
ljmp
ds
hlt
fsubs
jno
rcrl
dec
dec
int3
mov
ret
sub
sbb
aaa
js
xchg
mov
fnstenv
dec
push
sub
sub
stos
dec
test
shll
movsl
in
sub
add
jl
movsb
push
movsl
sub
and
call
fisttpl
jl
mov
pop
icebp
jecxz
add
cmpsl
rcrl
es
xchg
sbbb
mov
push
in
push
lds
mov
xchg
sub
mov
and
push
mov
fwait
or
aas
xor
dec
leave
shll
sbb
ret
test
inc
imul
mov
fwait
std
cld
int
adc
nop
ds
mov
adc
loopne
mov
inc
adc
sub
lret
out
lock
adc
cmpsb
adc
je
ret
or
jns
loop
or
scas
aas
imulb
repnz
mov
cmc
jo
and
and
psubsb
push
sbb
or
push
sti
mov
push
test
inc
inc
aaa
xchg
iret
bound
ja
jo
cli
shlb
rolb
outsb
pop
add
gs
sbb
pop
ret
out
divb
push
jnp
ficomps
or
cld
xor
jno
push
adc
cmp
xor
xchg
ljmp
xchg
mov
push
xor
fnstsw
outsb
popf
sbb
jno
dec
stc
push
pop
xor
and
pop
lods
dec
cmp
ret
lods
jmp
adc
cmpsb
jae
cmc
pop
shrd
dec
fucomp
push
jmp
sub
das
das
mov
leave
leave
stos
rorb
lods
and
test
sub
xor
sahf
in
mov
loopne
data16
fdivs
mov
mov
jb
test
and
fistpll
outsb
mov
mov
push
lea
jae
mov
fucomip
aad
xchg
repnz
sub
mov
rcrl
push
cli
shr
std
fmull
ja
sub
dec
inc
mov
and
inc
cmp
cmp
fisttpl
add
dec
sbb
loop
repnz
gs
gs
lods
nop
in
out
js
out
adc
and
fs
mov
out
sahf
cwtl
lods
les
test
xor
and
mov
xchg
scas
popa
pop
out
push
sub
sbbl
mov
pop
or
sub
inc
dec
ret
aas
in
vphadddq
xor
movsb
push
dec
and
pop
pop
sahf
out
sbb
xor
inc
sbb
jge
repnz
lock
jmp
ljmp
and
cmp
jne
in
mov
daa
push
fwait
sahf
fsubr
cmpsb
pusha
xorb
aaa
mov
clc
pop
out
sub
jmp
fldt
jmp
and
imul
test
notl
lock
sbb
pop
mov
add
mov
inc
pop
je
and
sbbb
mov
mov
enter
in
cld
mov
test
pushf
cmp
add
sbb
mov
mov
push
adc
fsubrs
pop
ret
sub
and
shlb
cmp
or
sbb
and
inc
push
decb
mov
adc
icebp
jle
mov
pop
imul
rolb
les
ljmp
test
or
xor
mov
cmpsl
sub
push
xchg
out
lea
dec
lods
stos
loopne
mov
outsb
int3
mov
add
daa
or
lea
int
and
repz
pop
outsl
int3
pop
insb
xor
in
idiv
jne
jge
add
pop
push
mov
mov
dec
xor
push
ss
cmp
dec
shlb
jnp
xchg
cmp
data16
mov
cmp
mov
mov
jbe
mov
mov
test
jl,pt
cmp
sub
dec
rcrb
in
mov
daa
sbb
jmp
mov
xchg
adc
push
mov
inc
inc
jo
int
mov
mov
mov
loop
fimull
sub
mov
push
outsb
std
int3
inc
cld
pop
rorb
dec
sub
mov
pop
xor
sub
jmp
movsb
cld
cmp
jo
mov
lea
jle
clc
movsl
in
mov
cld
addr16
sti
aaa
dec
test
cld
test
push
xor
cmp
lret
push
push
jge
mov
enter
dec
mov
jno
pop
lahf
mov
mov
sbb
enter
sbb
scas
dec
scas
cmp
pusha
xchg
inc
inc
cmpsb
xchg
adc
mov
inc
push
rclb
inc
jb
in
jp
mov
out
test
gs
cs
inc
daa
sbb
cmpsl
and
add
sbb
sub
in
stos
imul
xorb
es
mov
xor
stc
xchg
push
adc
ljmp
cmpsb
cmp
and
xchg
in
inc
dec
or
jns
fwait
jne
fdiv
jl
scas
outsb
jl
lods
mov
add
roll
stos
and
mov
gs
or
sbb
jmp
jo
les
outsb
movsl
pop
jecxz
push
dec
call
adc
in
test
pop
mov
cmpsl
movsb
pop
dec
sbb
divl
fnstsw
xor
sub
push
pop
out
jg
outsl
jno
mov
cmc
cmpsb
push
dec
arpl
int3
subl
or
loop
add
sub
and
cmp
dec
inc
push
add
jge
jne
push
mov
xchg
push
jns
pop
fs
adc
popf
test
mov
lea
dec
mov
test
adc
test
inc
sub
pop
dec
nop
jns
int3
sbb
mov
xorb
mulb
sub
jae
nop
mov
inc
sub
cmpsl
inc
xchg
loope
stos
arpl
lods
lret
and
cli
dec
fwait
mov
das
xor
dec
ljmp
pop
sbbb
dec
xchg
jne
and
ret
fldenv
sti
pop
shlb
dec
dec
mov
add
js
out
cmp
ss
clc
insb
fstl
jg
fsub
aaa
aad
sbb
inc
clc
dec
dec
jnp
and
and
push
stos
dec
and
lret
stos
cmc
mov
cli
push
mul
xchg
adc
js
xor
addb
push
sub
out
mov
mov
hlt
mov
mov
pop
imul
fs
int3
aad
push
xor
repz
loopne
popf
outsb
mov
mov
cmc
rol
sbb
loope
lods
loopne
or
cmp
lock
repz
enter
mov
repnz
dec
loopne
orps
mov
or
or
out
iret
ss
ds
aam
es
out
pop
inc
icebp
push
scas
fisubl
scas
mov
jge
add
repz
addr16
xchg
jae
in
push
call
jl
mov
pop
mov
jbe
rorb
loope
leave
push
fsubrl
test
push
jo
loopne
mov
lock
push
jge
sbb
or
ljmp
xchg
rorb
insb
push
es
aam
je
dec
pop
sbb
cmp
add
or
repnz
and
lret
jno
or
jae
stos
mov
pop
jno
repz
xchg
popf
repz
inc
int3
insl
stos
jge
push
mov
xchg
xchg
and
push
adc
lahf
fcoms
rcrl
mov
dec
xchg
jb
insb
cmpsl
push
mov
insl
pop
sahf
push
jae
out
aaa
bswap
inc
cmp
jg
cmp
add
xor
dec
push
push
clc
scas
aam
add
xchg
jae
cli
dec
sub
mov
push
adcl
lcall
lock
jge
imulb
pushf
sti
jo
xchg
push
push
sub
jg
xchg
jne
mov
jbe
cli
jbe
add
xor
pop
inc
add
adc
jnp
cmp
flds
cmp
xchg
fdivrs
ret
lret
sub
stc
in
mov
cmp
dec
cltd
ja
dec
fstpt
sbb
dec
xor
into
or
mov
pusha
test
fldenv
dec
and
je
inc
scas
sub
sbbl
jae
clc
push
sub
xor
fmull
sbb
stos
mov
cmpsl
fisubrs
cmpsb
cltd
sbbl
and
sub
cmp
pop
cs
imul
in
pusha
xchg
mov
testl
xchg
fwait
test
dec
leave
sub
mov
mov
repz
jmp
imul
aad
pop
push
fsts
pop
adc
jecxz
xor
test
aaa
fsubl
xchg
stos
inc
lret
jae
push
dec
jl
add
xor
rorl
or
xchg
rorl
fdivrs
xchg
arpl
je
sbb
or
das
jmp
pop
mov
pop
bound
fs
xchg
outsb
mov
pop
lahf
push
out
imul
xchg
cmp
dec
outsb
stos
push
push
sarb
inc
scas
gs
sahf
sbb
push
rcrb
sbb
or
jmp
jg
cmpsl
loop
mov
andl
insl
stos
std
int3
cmp
xor
and
push
jb
lret
or
push
movsb
push
or
cs
cld
jl
adc
jl
outsl
dec
jmp
and
add
xchg
or
rorl
add
leave
cmp
push
or
loop
sbb
pop
sub
pop
test
movsb
push
call
sbb
test
xchg
stos
cld
stos
das
pushf
xchg
out
sbb
jp
in
xor
cwtl
frstor
sbb
mov
loope
cltd
out
inc
jb
or
lahf
and
mov
dec
pop
bswap
push
or
push
leave
dec
and
sbb
inc
sbb
cld
or
leave
subb
inc
hlt
mov
loopne
into
sbb
pop
and
das
dec
sbb
fistps
push
std
pop
xlat
dec
dec
iret
loop
mov
xlat
mov
add
pop
inc
add
and
or
daa
jbe
jbe
insb
xchg
mov
pushf
negl
push
insl
jo
sub
icebp
adc
sahf
sar
fmul
nop
push
lahf
and
arpl
ret
xor
mov
jbe
jae
outsb
sub
inc
inc
pusha
jbe
out
fisubrl
pop
cltd
adc
leave
std
pop
lret
lods
insb
ret
and
or
fcom
push
gs
stos
shrl
ljmp
idiv
clc
cltd
cmpsl
mov
push
rorl
jnp
loopne
pop
clc
push
mov
dec
mov
sub
xchg
int
fidivs
js
dec
or
cltd
jns
in
hlt
inc
push
add
pop
or
mov
jl
pop
not
pop
iret
fadd
out
popf
mov
out
xor
cmp
sbb
jmp
fbld
sbb
mov
pop
repz
inc
popa
cmc
mov
add
pop
cmp
pushf
mov
divb
add
stos
adc
bound
ret
rcrl
jae
dec
xor
xor
pop
mov
dec
xor
fcmovnu
inc
mov
push
sarl
leave
inc
xlat
out
jo
mov
inc
mov
push
jecxz
cwtl
push
shll
or
repnz
adc
jo
mov
lock
rolb
es
pop
and
ja
ljmp
push
ds
mov
rcl
int
ja
mov
pusha
and
push
cli
mov
fmull
imul
push
fstl
xchg
sarl
or
adc
shl
sbb
pop
out
in
and
sbb
and
sbb
int3
fiaddl
sbbb
xchg
imul
mov
mov
dec
mov
inc
cmpsl
scas
int3
mov
mov
sbb
or
movsb
mov
and
cmc
jb
xor
or
xchg
in
lods
cmp
lea
sti
xor
les
aad
stos
iret
inc
xor
imul
mov
fcmovu
cmc
arpl
and
adc
and
and
sti
sub
mov
and
repnz
jb
loope
mov
add
add
pop
sbb
ret
push
test
or
push
sbb
pop
shll
iret
jae
incb
pushf
jnp
in
dec
hlt
lret
push
insl
sub
push
lods
leave
leave
xor
and
repnz
mov
sarl
nop
aas
xor
fucomi
fsubrl
mov
or
into
fsubrp
push
ljmp
les
jl
push
or
sbb
ret
data16
pcmpgtd
icebp
aaa
and
imul
mov
out
inc
test
ljmp
or
cmpsb
adc
and
in
mov
lods
jg
addl
lcall
push
sub
jb
sbbl
movsb
and
hlt
cmp
into
js
aam
jnp
cmp
in
mov
inc
xchg
sbb
xchg
sub
aas
outsl
test
ljmp
push
cmpsb
add
sbb
mov
inc
out
mov
test
inc
ret
roll
sbb
dec
xchg
sbb
call
mov
sbb
fcomi
cwtl
aas
cmp
or
mov
leave
loopne
xor
xlat
and
outsb
add
arpl
std
movsl
hlt
and
cltd
inc
jecxz
inc
arpl
scas
dec
sbb
xor
add
fs
mov
ficoms
mov
lahf
push
jnp
in
jb
mov
jle
aas
mov
je
xor
xchg
sbb
cmp
insb
lods
sbb
mov
pop
and
mov
incl
and
sub
lcall
loope
fwait
in
push
frstor
std
sahf
jnp
push
jl
mov
js
js
dec
mov
jo
rorl
sbb
cltd
sbbb
pop
xor
mov
inc
int3
out
inc
int3
mov
mov
push
mov
cmp
jp,pt
xor
dec
xchg
repnz
sub
pop
lods
aaa
fwait
sarb
psubsw
pop
filds
cltd
pop
cli
inc
push
push
xchg
add
mov
cmp
mov
roll
mov
pop
pop
sti
daa
fndisi(8087
push
adcb
inc
mov
sub
sbb
xchg
pop
cmp
or
popf
cmp
lock
movsl
jae
jle
mov
clc
scas
cmp
pop
pop
outsl
xchg
inc
insb
stc
mov
lds
mov
jp
push
call
xchg
mov
mov
jecxz
cmp
adc
lea
aam
daa
mov
pushf
fdivrl
sbb
sub
mov
cmp
jp
icebp
loope
popf
xorl
int3
ja
popf
mov
in
dec
leave
jo
push
ffreep
incl
shr
push
adc
or
sub
nop
jmp
rcl
xor
lcall
add
sbb
arpl
mov
lea
movsl
add
cltd
out
rolb
popf
movsl
scas
stc
lahf
pop
mov
ret
sbb
lods
mov
jne
inc
push
mov
stos
xlat
and
sbb
mov
ss
sub
sbb
movsl
inc
int
or
int
fisubrs
cltd
notb
lcall
ret
fwait
sub
sti
mov
pusha
in
inc
mov
adc
addr16
pop
mov
fsubrs
fnstenv
dec
mov
outsl
jg
mulb
cmp
and
adc
lahf
out
push
xchg
mov
push
mov
cmp
jmp
mov
mov
dec
adc
xchg
xchg
push
xor
push
dec
ret
in
and
outsl
mov
jno
enter
fwait
push
aaa
push
mov
jp
mov
dec
push
inc
mov
std
mov
mov
in
frstor
dec
and
add
addr16
pop
shlb
add
sar
sbb
mov
stc
push
pop
pop
lret
mov
mov
mov
jle
lods
test
adc
movsl
clc
jp
out
fsubs
xchg
xchg
sub
jnp
jnp
adc
sbb
sub
ljmp
jns
repz
cltd
pop
lahf
das
cmpsl
cmpsl
arpl
inc
cmp
in
pop
mov
lahf
push
cmp
in
test
js
sbb
inc
mov
adc
cmpsb
in
decl
das
and
mov
xor
pop
ret
loop
inc
cmp
and
xor
stos
stos
ja
cltd
mov
xor
lahf
out
mov
lods
xchg
cmpsb
aas
je
sbb
push
mov
cmp
pop
aam
pop
repnz
add
das
add
xlat
outsl
inc
sub
pop
xchg
ja
insb
gs
xor
xchg
push
or
bound
ss
cmp
ret
pop
jp
inc
pushf
into
fwait
out
pop
test
shlb
test
and
shrl
loope
or
test
pop
popa
cld
out
pop
dec
jnp
test
sub
cmp
sub
jg
cmp
inc
push
int3
sbb
test
xchg
cltd
jl
mov
inc
mov
es
xchg
fnstsw
or
xor
xchg
lods
daa
sti
repnz
jo
inc
sub
inc
sbb
sahf
fsubrl
lcall
or
addr16
clc
inc
sti
adc
pop
icebp
jb
cmp
insb
fiaddl
mov
pop
sbb
mov
scas
dec
hlt
fldl
push
and
and
xchg
mov
mov
insl
insl
push
mov
xchg
leave
jnp
cwtl
mov
cmc
jg
and
xor
cmpb
push
ja
push
mov
scas
negl
jne
adc
and
dec
pop
ret
xor
mov
scas
cld
loop
loopne
stos
fists
add
push
aaa
mov
hlt
hlt
popf
mov
or
gs
dec
xchg
int3
loop
mov
flds
pop
or
pop
xchg
sbb
xor
ficoms
mov
sub
aas
stos
lods
jp
ja
stos
adc
add
fs
fadd
xlat
inc
shrl
js
sub
cwtl
mov
sub
sahf
nop
ljmp
scas
sbb
lret
fisubs
adc
push
fdivrp
les
pop
push
in
lret
sbb
pushf
sbb
mov
dec
dec
out
jecxz
fdiv
inc
in
add
mov
dec
pop
pop
pop
movsl
cmp
lods
mov
divb
call
push
jo
scas
sbb
fcmovbe
xchg
inc
lahf
jge
aas
iret
dec
out
iret
scas
pop
iret
and
test
inc
aas
in
clc
ret
sbb
sahf
inc
xchg
movsb
mul
mov
outsl
test
or
int3
leave
add
les
push
inc
daa
push
mov
push
mov
cmp
jns
aas
jmp
dec
int3
mov
stos
addr16
cmp
or
dec
inc
in
sbb
icebp
sahf
ss
jbe
pusha
lock
or
mov
inc
aad
sahf
int
mov
pushf
jmp
daa
stc
sub
mov
mov
lods
nop
mov
loop
data16
lods
pshufw
stc
or
add
pop
xchg
leave
push
mov
orl
push
dec
arpl
insb
movsl
call
or
out
fists
dec
int
push
jp
out
pop
lcall
rcll
push
mov
pop
mov
cmc
pop
inc
xchg
outsl
cmp
out
sub
aaa
popf
pop
aaa
add
and
icebp
imul
mov
push
jb
pop
inc
mov
fs
lcall
cmc
leave
sbb
mov
jmp
int3
mov
xor
xchg
sub
cmp
dec
sub
scas
fsubrs
adc
dec
rorl
add
popa
sti
cmp
push
pusha
sbb
sbb
lods
out
cwtl
sbb
into
insl
mov
aaa
leave
pop
icebp
fldenv
aad
out
pop
add
or
movsb
mov
push
pop
push
dec
std
dec
mov
rorl
or
aaa
pop
cmp
mov
pop
icebp
in
adc
std
movsl
insb
mov
sub
lock
rcrl
pusha
insl
aas
pop
and
mov
mov
jmp
cli
aaa
test
mov
shll
lahf
pop
ja
xor
paddsw
aam
pop
pop
cmp
pop
dec
and
repz
mov
sarl
test
mov
pop
add
add
lds
xor
push
push
jbe
or
cli
insl
inc
jg
mov
add
inc
adc
jnp
sub
xchg
inc
mov
into
into
in
xlat
sti
mov
loopne
loop
mov
sbb
adc
cmc
jp
adc
xchg
dec
adc
sub
mov
adc
inc
jno
push
mov
dec
add
mov
ss
sahf
push
adc
push
rcr
mov
xchg
inc
or
loop
sbb
mov
shrb
mov
gs
jbe
sti
adc
mov
adc
xor
lret
inc
imul
flds
inc
xchg
mov
ds
mov
adc
xor
gs
pushf
mov
hlt
inc
fwait
shl
in
jae
add
aaa
sub
movsl
popa
cmp
js
push
sbb
cmpsb
test
lods
jge
cmc
jno
adc
cmp
rcrl
aaa
shl
addr16
sub
jle
mov
add
rcrb
in
xchg
add
xchg
popf
add
adc
dec
pop
push
xor
sub
xlat
mov
cli
dec
xchg
les
and
or
std
lods
xor
push
aam
test
or
jl
mov
sbb
rcrl
shl
add
stos
lods
in
dec
stc
int
xor
repz
mov
mov
cmp
adc
je
leave
arpl
jle
cmp
scas
pop
adc
mov
bnd
sbb
sub
mov
cmpl
sbb
sub
push
daa
mov
pop
jbe
mov
test
pushf
subl
movsb
xlat
mul
mov
and
pop
aam
cmp
shlb
xor
subl
int
pop
fidivrs
je
jb
jge
mov
add
aad
repnz
inc
jae
nop
andb
push
push
or
insl
dec
push
xor
sbb
loop
adc
rorb
and
push
adc
sub
inc
cs
sbb
mov
shl
mov
xchg
mov
stos
repnz
out
pop
imul
gs
xchg
rcl
rcrl
popa
int
movsl
inc
negl
out
fwait
idivb
and
pop
xchg
aad
ret
fdivrs
mov
push
scas
jecxz
inc
cmp
mov
cltd
inc
pop
cmp
out
adc
repnz
cmpsl
cwtl
insb
mov
inc
data16
std
pusha
adc
test
movsl
push
adc
jp
push
inc
fisubs
enter
arpl
pop
and
xchg
cmp
cmc
pop
xchg
leave
lods
jae
mov
iret
dec
push
fsubrs
and
hlt
mov
sbb
out
adc
mov
into
mov
mov
cmpsb
out
xor
aaa
fiadds
test
ret
fisubrl
bound
mov
sub
xchg
push
ljmp
call
add
cmpsb
pop
sahf
clc
jmp
jle
std
xlat
cmpsl
push
cmp
icebp
dec
xor
in
sbb
push
popa
ljmp
xor
imul
ja
inc
pop
xor
out
lcall
repnz
out
adcb
ss
dec
cmpsb
jo
pop
je
pusha
shlb
dec
int
popf
cmp
cli
sbb
inc
sbb
arpl
lahf
cmp
mov
pop
xor
test
imul
pop
or
sub
outsb
call
insb
pop
adc
cwtl
sahf
push
pop
call
test
mov
xor
sbb
pop
sbbb
pop
shlb
jnp
lock
rol
stos
push
mov
jp
repnz
and
je
xor
xchg
je
lds
dec
mov
mov
imul
mov
sub
cmc
jecxz
aad
sbb
repnz
das
lods
shll
xchg
fsts
pushf
xchg
out
add
movsl
fwait
mov
lods
jo
xchg
adc
add
sbb
sbb
scas
and
sti
lahf
cli
xchg
push
jl
popf
inc
mov
push
cs
mov
outsl
xor
mov
cmp
fldt
jo
mov
xchg
into
adc
sub
mov
test
out
add
add
in
mov
adc
add
fsub
xchg
lret
inc
jg
sbb
dec
push
mov
negl
push
movsb
in
jns
je
arpl
mov
movsl
jno
aad
outsb
shll
out
inc
daa
mov
sbb
sub
into
ja
sub
popf
cwtl
ret
jne
insw
pop
data16
das
inc
inc
jl
nop
lods
mov
das
adc
add
xlat
mov
sbb
add
scas
icebp
das
notb
sti
cli
mov
outsl
xlat
mov
mov
sub
xchg
vucomiss
jno
lds
xchg
cli
cwtl
sahf
enter
mov
hlt
test
jnp
inc
jl
test
fwait
jle
adc
push
movsl
out
data16
cmp
inc
xadd
mov
fisttpll
dec
mov
adc
lods
inc
pop
push
shll
imul
jle
mov
pop
cltd
and
aad
orl
mov
jl
jmp
xor
jl
test
add
mov
in
or
xchg
in
call
imul
push
sub
rcll
and
mov
cmp
pop
aas
inc
outsl
fiaddl
jl
push
adc
and
jne
lret
mov
fiaddl
push
rclb
scas
les
stc
push
ss
sbb
xchg
clc
xchg
lahf
rcrb
mov
add
into
call
pop
sbb
xlat
mov
movsb
call
in
fsincos
cli
dec
pop
push
add
jge
mov
mov
mov
stc
addr16
add
in
repnz
fs
mov
in
and
cmpsb
jae
mov
clc
loop
cltd
jg
pop
push
mov
mov
xchg
stc
or
out
out
loop
add
dec
shr
mov
push
fdivl
sbb
inc
ja
test
dec
mov
rcr
aas
rorl
jbe
xchg
cmpsb
test
pop
xlat
inc
sahf
jb
mov
mov
pop
fcompp
mov
jb
mov
push
pop
repz
repz
or
mov
jmp
mov
mov
add
mov
add
lcall
mov
mov
jns
into
lock
and
mov
pop
mov
lock
lahf
std
inc
aas
test
mov
cmp
shl
mov
sarl
in
test
sbb
insb
call
jae
loop
or
scas
inc
jns
out
or
push
sbb
push
xchg
push
dec
bound
dec
test
out
out
mov
mov
or
repnz
cmp
xlat
setns
jge
add
outsl
mov
or
ljmp
adc
out
fidivs
inc
sub
mov
subl
std
pusha
or
loopne
mov
les
testl
mov
push
gs
sub
sarl
mov
pop
sub
sbb
push
lods
pop
xchg
mov
xchg
movsl
lahf
dec
shlb
push
xchg
test
mov
imul
or
mov
int
push
push
mov
lea
out
or
pop
gs
mov
and
insl
jg
lods
ljmp
mov
scas
call
bound
add
jb
mov
pop
insl
popf
in
mov
les
jmp
xor
pop
test
mov
js
stos
jns
mov
push
jecxz
lock
dec
jmp
fcomps
jmp
adc
mov
clc
stc
out
in
push
jo
or
rclb
lock
outsb
xchg
jae
mov
inc
push
loope
mov
fisubl
pop
sbb
test
div
dec
das
mov
sti
shrl
dec
repnz
push
adc
sub
jb
dec
lea
or
push
jmp
mov
dec
mov
mov
push
pop
inc
call
scas
inc
cmp
dec
out
sahf
cmp
nop
fbstp
popf
add
dec
push
loope
in
mov
lret
arpl
roll
sub
or
pop
pop
xor
in
mov
icebp
or
test
mov
xchg
mov
daa
aas
dec
mov
or
pop
mov
daa
push
xchg
jbe
rol
fists
inc
jl
movsl
mov
outsb
jbe
adc
hlt
popa
jl
fisubrl
test
mov
imul
inc
out
adc
mov
xchg
cwtl
outsl
xchg
outsb
mov
repz
push
in
mov
xchg
fisubrs
inc
es
xchg
sub
jmp
fsubl
mov
lods
rorb
int
aas
adc
xor
fs
rclb
out
sub
cltd
pop
subb
cmp
arpl
call
aas
out
fidivrs
mov
cmp
arpl
sub
add
adc
mov
pop
mov
cmp
adc
push
or
or
imulb
out
stos
cmpsb
loope
pop
xchg
xchg
and
pop
movsb
xchg
mov
arpl
push
mov
push
jge
push
mov
stos
push
insb
lds
or
ljmp
mov
xor
push
mov
dec
add
sbb
in
call
cmovs
dec
xchg
rcr
mov
push
inc
sub
sti
aad
fnstsw
dec
inc
push
imul
movsl
sub
cbtw
das
ds
lret
xchg
cmp
jp
cmp
cmpsl
sti
sub
cmp
adc
out
mov
int3
jmp
xorl
lret
stc
cmpb
push
pop
push
push
loopne
mov
daa
inc
add
jecxz
jmp
test
add
sti
xchg
xchg
out
inc
mov
popa
stos
ljmp
lods
jns
pop
insb
data16
xor
repnz
adc
pop
adc
insl
xlat
add
cmp
or
xor
push
popa
cmc
and
lret
inc
pop
scas
rcll
js
mov
sbb
mov
outsb
inc
subb
out
jne
mov
mov
imul
push
sub
test
sub
mov
stc
push
sbb
das
test
dec
inc
push
and
addr16
and
cltd
jge
hlt
add
push
leave
sbb
repnz
test
or
jo
mov
pusha
nop
gs
push
inc
push
jp
notl
sahf
mov
xchg
push
clc
sbb
insl
adc
or
test
jbe
mov
cwtl
pop
xchg
pop
and
data16
sbb
xor
popa
mov
arpl
stos
push
ja
cmp
lods
push
push
jnp
pop
or
mov
pop
sbb
mov
in
jo
adc
add
sbb
enter
arpl
hlt
push
cli
hlt
je
iret
inc
mov
pmulhw
aam
inc
jl
and
fiadds
dec
mov
mov
in
sub
ja
test
ja
cmpsl
sbb
or
imull
sub
push
and
fstps
shlb
xchg
pop
mov
repnz
aaa
mov
fimull
lds
xchg
call
cwtl
sbb
pop
cmc
adc
movsl
outsl
adc
test
out
push
mov
ss
add
cmp
iret
xor
push
insl
jno
es
out
ret
out
in
mov
jno
pop
leave
pop
ja
fnstcw
push
out
sbb
inc
lods
dec
adc
in
bound
xchg
mov
jbe
xchg
loope
add
vmaxsd
dec
inc
mov
roll
push
iret
cmp
out
movsb
repz
es
sub
push
add
leave
testl
cmp
push
repnz
push
pop
adc
inc
loopne
pop
test
cmp
imul
sbb
in
add
cmpsl
iret
sub
insl
sbb
push
clc
cwtl
push
fisttps
xchg
rcrb
xchg
pop
pop
mov
mov
jle
popf
xchg
jmp
push
and
pop
push
test
ss
mov
div
icebp
aad
jmp
in
fisttps
cs
fdivrs
mov
cmpsb
out
in
fcomps
enter
add
out
es
mov
scas
out
pop
xchg
cmpsb
call
mull
lods
inc
jecxz
ror
cmp
hlt
shrb
mov
jecxz
pop
or
rclb
push
dec
jbe
sub
sub
xchg
fcmovnu
xor
xchg
mov
ror
xor
adcl
jb
and
sahf
int
in
inc
fs
inc
clc
mov
inc
mov
add
mov
mov
std
shlb
inc
add
addb
mov
fdivr
clc
jbe
xlat
dec
sbb
mov
xchg
pop
out
icebp
mov
push
lds
inc
add
xchg
mov
rcll
push
in
dec
or
lea
nop
out
mov
push
jle
pop
popa
test
lahf
dec
cmpsb
jmp
imul
push
jecxz
dec
popf
jb
hlt
mov
dec
xor
push
out
push
push
inc
mov
aam
sub
push
mov
inc
cmp
roll
fdivr
xchg
mov
and
pop
orl
mov
in
jae
pop
out
mov
inc
xor
push
dec
push
sahf
inc
nop
and
xchg
bound
cmc
and
jge
xchg
ja
lahf
mov
inc
jbe
jae
incb
ja
push
hlt
xchg
push
cmp
mov
xor
cmp
out
cmc
ret
pop
xor
push
jge
xor
mov
sub
das
es
out
pop
xchg
fcmovu
scas
shll
mov
push
cmpsl
js
nop
or
cwtl
cld
leave
mov
mov
cmpsl
jle
push
sub
pop
or
adc
fnstenv
cwtl
or
jno
push
test
inc
out
outsl
int3
and
push
dec
cmp
mov
sahf
subl
lea
cmpsb
or
adc
mov
aaa
popf
loope
or
in
mov
hlt
mov
mov
out
stc
mov
mov
push
jp
dec
mov
mov
add
inc
mov
scas
ljmp
jnp
mov
cmp
ja
add
int3
outsb
sub
pop
jbe
and
jp
mov
mov
and
and
into
sbb
sbb
jne
insb
cmp
in
jae
mov
idivl
mov
sub
xor
mov
mov
fdivl
int
sub
outsl
jb
xchg
pop
adc
xor
mov
mov
iret
stc
jle
push
sub
add
outsl
dec
pop
dec
dec
mov
push
fdivp
pusha
mov
inc
xchg
sbb
lea
or
mov
adcb
xchg
or
pop
add
push
inc
lds
jecxz
fisttpl
inc
popa
mov
mov
call
es
dec
push
cmp
push
scas
jecxz
dec
xchg
mov
scas
jle
aad
pop
fmulp
gs
xchg
xchg
imulb
mov
in
int
addl
jge
faddl
or
scas
pop
sbb
lods
daa
pop
xchg
push
xor
bound
add
ret
rorb
cld
sub
call
jnp
mov
or
cltd
sub
popf
andl
rolb
movsb
test
cs
loope
or
in
fwait
arpl
pop
lahf
cwtl
xlat
mov
cmp
inc
dec
xchg
in
rorl
push
inc
gs
fwait
pop
nop
das
sbb
sub
leave
mov
test
loopne
fsin
xchg
jb
jge
inc
xchg
jp
cmp
adc
out
fwait
mov
fidivrl
cmp
mov
push
ja
cli
add
stc
inc
inc
adc
add
adc
pop
sub
dec
pop
cwtl
iret
and
jae
jg
xchg
shl
insb
popf
add
jae
jne
shrb
mov
rcl
sub
pop
xchg
add
icebp
push
sub
push
cmpsl
pop
sbb
rorl
lahf
dec
aam
jecxz
cmp
repnz
push
mov
fwait
xor
mov
and
test
out
dec
pushf
ds
mov
inc
jg
gs
push
cmpsl
jbe
test
addr16
jbe
outsl
cltd
jl
xor
call
mov
and
pop
cmc
inc
movsb
or
out
mov
fistpl
mov
mov
and
jge
jle
mov
in
aam
cltd
adc
mov
pop
fisubrs
and
es
mov
push
mov
cmp
mov
nop
sub
outsb
out
mov
pop
mov
pop
sbb
dec
pop
icebp
xchg
mov
mov
mov
sub
dec
test
enter
pop
dec
push
pop
icebp
pop
sbb
iret
lock
xlat
hlt
mov
cmp
out
xor
add
sub
and
arpl
push
lahf
dec
arpl
sub
jbe
daa
rol
cmpsl
xchg
push
xchg
loop
cld
xchg
pop
lret
jno
shll
cmp
push
rcrb
xor
inc
sub
mov
popa
cltd
lret
mov
ss
lock
jecxz
and
cwtl
adc
fnstenv
shll
cli
pop
cs
leave
test
inc
pop
hlt
and
xor
addr16
inc
cmc
dec
cmc
cld
dec
dec
ljmp
adcb
int3
loope
cmpb
mov
push
cmp
ret
clc
xlat
dec
mov
mov
or
lcall
push
jo
stos
or
fwait
pop
addr16
and
out
std
les
test
push
stos
mov
push
negl
outsl
pop
lea
inc
cld
dec
and
and
adc
jne
outsl
lahf
mov
out
ss
jb
ret
pop
push
ja
pop
cmp
dec
into
shrb
xor
sbb
sarb
mov
xchg
add
adc
rcl
and
loope
add
dec
fistpll
push
jmp
stc
add
movsl
fnstsw
mov
int
test
gs
mov
daa
adc
rcr
and
movsl
imul
mov
xor
mov
adc
mov
jae
xchg
sbb
inc
aaa
cmp
push
sbb
add
test
mov
jle
clc
nop
paddsb
aam
lock
jne
sar
lret
inc
inc
outsb
sub
mov
xchg
sbb
push
addb
cmpsl
js
lock
jo
inc
cmp
lcall
lock
jg
or
and
mov
clc
add
mov
jg
int
bnd
in
dec
jmp
ss
into
in
push
fstpl
sbb
or
arpl
adc
out
inc
or
fdivr
psubusw
xor
fisttps
sub
clc
push
mov
cmp
scas
sub
scas
cli
add
fwait
subb
pop
pop
inc
dec
mov
sti
sbb
sar
sbb
push
cwtl
pop
pusha
std
sub
enter
leave
cmp
test
jg
xor
mov
repnz
fwait
cmc
mov
iret
sbb
xchg
jns
cmc
ficomps
lea
cmp
pop
push
ds
int3
movl
loope
jmp
mov
rcll
cld
cmpsl
mov
mov
ss
lea
out
adc
fucomip
rorb
inc
jbe
add
mov
xchg
or
or
lret
dec
fcomps
faddl
std
jo
out
and
cltd
push
mov
xlat
push
in
jne
sbb
inc
mov
scas
daa
mov
or
int
sbb
data16
hlt
imul
lods
pop
sub
and
push
jl
dec
jl
leave
lahf
adcb
pop
cwtl
out
loope
lods
out
jo
in
dec
loop
pop
scas
jl
das
shll
inc
mov
ret
repnz
aaa
repnz
inc
cmp
jge
test
arpl
fldl
fimull
arpl
mov
lcall
mov
cmp
jl
adc
mov
xchg
in
or
arpl
adc
cmp
imul
dec
jmp
cwtl
out
icebp
mov
aas
cmpsb
in
data16
mov
fimuls
adc
dec
jbe
dec
xchg
or
push
data16
dec
test
sbb
cmp
or
js
ss
pop
call
sbb
sub
xor
out
xor
out
mov
lods
lock
mov
and
push
loope
ds
iret
jg
cmpsl
das
in
jae
pop
insl
pop
xor
and
roll
fnstenv
pop
and
dec
push
pop
xor
mov
data16
pop
push
les
inc
in
pop
sub
push
xor
mov
xchg
movsl
mov
jno
lret
mov
cmpsb
push
sub
repnz
js
ljmp
test
jbe
mov
dec
xchg
xchg
lret
insl
lods
cmpsl
imul
or
cs
ljmp
clc
xor
adc
roll
xor
jno
mov
mov
xchg
stos
pop
xor
rsqrtps
scas
inc
pop
shlb
add
add
daa
mov
mov
add
or
add
xor
pusha
das
adc
jle
mov
ret
pop
and
mov
jg
jg
push
xchg
mov
xchg
sub
jge
mov
int
pop
lcall
mov
enter
popa
loop
in
movsb
push
push
xchg
int3
lret
aad
insb
dec
inc
cmp
das
sti
jb
imul
cs
jg
and
xchg
fildl
aam
jecxz
mov
cld
adc
pop
mov
outsb
mov
lret
arpl
inc
sahf
enter
loop
aam
loope
and
cmpsb
jl
leave
ficoms
or
ret
mov
and
sahf
cltd
loopne
xor
jne
mov
jno
and
sarb
jo
add
js
repnz
ss
in
clc
ljmp
pop
adc
das
pop
jne
fisubl
jno
sarl
imul
inc
cmp
mov
add
stc
sub
test
sbb
imul
pop
sub
je
insb
test
mov
je
inc
and
jbe
add
into
add
scas
ljmp
outsl
adc
pop
or
jl
aam
pop
outsl
nop
hlt
int
dec
ss
out
mov
adcl
mov
fcmovb
xchg
jp
repnz
or
scas
xchg
push
and
out
mov
jbe
lds
dec
sbb
stc
fs
sti
adc
adc
fiadds
out
sub
mov
out
lret
xor
lods
mulb
scas
pop
cmpsl
icebp
xchg
or
pop
xchg
icebp
xlat
push
lahf
and
ret
cltd
in
fildl
pop
int
mov
es
hlt
xchg
xchg
sub
negl
gs
xor
inc
adc
sar
gs
outsl
call
ss
mov
mov
pop
shrl
insb
ficompl
cltd
cld
popf
mov
pop
push
jge
cmp
dec
mov
leave
movsl
dec
repnz
mov
aaa
cmc
mov
add
fistps
add
js
mov
ss
adcl
out
fiaddl
cmpsl
neg
jl
nop
sbb
loopne
out
inc
and
sub
cwtl
sbb
push
popa
dec
aas
sahf
mov
mov
mov
add
andl
int
xchg
add
lock
jecxz
ret
loopne
lcall
add
arpl
packuswb
push
add
out
test
inc
arpl
int
cwtl
and
push
out
fiadds
dec
dec
mov
fcmovu
in
js
rcr
fbstp
and
and
jp
ss
ret
mov
jmp
jns
mov
mov
xchg
pusha
fs
ss
int
jns
mov
add
add
pop
imul
xchg
pushf
mov
mov
xor
out
xlat
out
jge
fwait
pop
cmpsl
das
mov
cmp
test
add
jg
fldl
mov
cs
push
cmp
js,pt
ret
xchg
ljmp
mov
push
xchg
jnp
test
addr16
cmp
test
enter
adc
jbe
cmpsb
popa
sbbl
sbb
inc
les
mov
cmc
cmp
clc
cs
fnsetpm(287
or
push
sub
ds
add
mov
mov
mov
and
sti
jp
and
in
mov
add
jmp
enter
sub
mov
test
test
sbb
push
iret
mov
sbb
dec
bound
push
adc
sub
jbe
inc
jg
aaa
aas
adc
ret
testl
insl
cltd
jo
mov
xchg
mov
cmpsl
outsb
xchg
sbb
mov
aaa
clc
sub
ret
jae
pop
lods
pushf
inc
popa
cmpsb
mov
fcomps
mov
adc
mov
xchg
and
jl
pop
nop
cmp
xchg
mov
or
dec
fdiv
xchg
leave
cmpsb
pop
leave
hlt
xor
push
lea
into
mov
dec
aaa
push
xor
arpl
cmp
inc
cmpb
scas
movsl
lock
mov
xchg
mov
mov
fsts
insb
fsub
jmp
es
dec
or
movb
jnp
mov
int
mov
arpl
inc
xor
ljmp
in
jp
jl
cld
xchg
cmp
daa
out
cmp
cmp
sbbb
adc
pop
and
fsubs
jge
mov
rolb
mov
fcomps
jb
ja
jns
jg
out
cmp
divl
pop
or
lahf
ds
cltd
ds
and
stc
adcl
adc
adc
dec
inc
es
arpl
or
aam
jae
and
xchg
cmp
sub
fucomi
lock
das
jnp
mov
mov
sahf
mov
clc
pop
push
clc
mov
jl
sub
cmpb
loopne
cld
mov
je
inc
pop
mov
daa
mov
into
minps
fwait
mov
stos
add
lock
cld
cltd
gs
pop
xlat
inc
mov
push
push
addr16
or
inc
xchg
adc
inc
push
imul
out
hlt
das
dec
stos
ds
out
and
test
xchg
ret
leave
cmpsl
xchg
cmp
adc
sahf
jnp
add
sub
cltd
sub
sbb
cld
pop
jae
xor
mov
mov
adc
or
pushw
in
das
xlat
movsb
and
dec
mov
repnz
lcall
sti
popf
outsl
lods
testb
movsb
pop
lds
shll
test
sub
lcall
push
fmull
push
js
movsb
mov
je
mov
fsubl
popa
sbb
enter
cwtl
arpl
or
jl
inc
or
sub
ljmp
ret
icebp
cli
jne
cmpb
fldcw
lcall
push
cmp
sti
pop
or
test
push
or
and
dec
dec
repz
xor
mov
mov
adc
adc
sub
dec
mov
fstl
enter
push
mov
add
mov
mov
in
out
pop
jg
xor
iret
xchg
out
pop
and
xor
xor
pop
insb
arpl
cld
mov
nop
push
inc
xor
inc
push
xchg
and
iret
lods
subl
fsubrl
jmp
mov
inc
fiadds
dec
cmp
and
repnz
daa
rcll
sti
xlat
rcrb
mov
loopne
add
and
sub
stc
call
leave
pop
das
add
mov
dec
stos
xor
popl
je
mov
mov
fwait
sarl
mov
jge
loop
sub
push
and
sub
or
pushf
jl
testl
pop
cs
jo
cmp
fildl
sbb
mov
jg
loope
outsl
mov
mov
dec
add
mov
cltd
cmpsl
mov
mov
push
sub
loope
stos
xchg
test
scas
jl
push
xor
pop
ret
dec
pop
dec
cwtl
and
mov
inc
cmp
push
sub
test
cmp
pop
push
xor
mov
jge
xor
sub
mov
scas
jo
lcall
cs
sbb
mov
push
sbb
and
lods
mov
cmp
or
enter
nop
lock
outsb
aas
inc
ret
sub
loop
mov
fwait
movsb
aaa
mov
sbb
inc
mov
dec
jno
sub
ret
mov
mov
loopne
adcl
test
pop
pop
addr16
rorl
xchg
int3
sub
and
cmp
pop
cmp
test
repnz
lahf
pushf
sbb
nop
mov
es
mov
xor
fcoms
cld
dec
popa
lahf
lock
cmpsb
sub
mov
ret
push
push
or
fistl
jbe
cmc
mov
cld
out
sub
jmp
into
andl
ds
push
xchg
pop
pop
mov
or
pop
les
pop
loope
sub
loope
ljmp
arpl
imul
or
xchg
adc
mov
negb
xchg
mov
sub
fwait
js
mov
lock
in
mov
adc
fmull
inc
mov
xchg
sub
pop
xor
mov
loope
fcomps
mov
std
arpl
mov
clc
aam
mov
or
xchg
sbb
push
jnp
push
mov
add
xlat
and
outsl
or
mov
cmp
xchg
or
aad
jne
fsubrl
fadds
inc
inc
in
xchg
popf
repnz
pushf
out
sub
mov
mov
pop
cmp
pop
dec
pusha
js
mov
rolb
pop
in
xor
bound
cltd
lret
mov
cmpsl
subb
lea
lock
icebp
out
test
in
pop
cmp
fsubs
jp
pop
cli
sbb
insb
cmpl
movsl
jp
or
adc
shrl
add
dec
xchg
xchg
adc
add
test
lods
mov
hlt
stos
pushf
mov
sbb
and
mov
push
arpl
out
jne
loope
and
jno
aaa
subb
mov
inc
stos
in
loopne
jg
jb
filds
lds
fisttpl
xor
dec
jne
cmp
mov
popa
cwtd
arpl
repnz
jmp
push
sahf
sbb
sub
mov
dec
ret
or
xchg
xchg
outsl
das
lea
pop
fstpl
scas
scas
rorl
xor
repz
dec
sbb
push
mov
ret
in
add
push
dec
mul
jge
mov
pop
daa
cwtl
stos
push
popa
lock
lock
cmp
aas
shlb
adc
pop
xchg
xor
mull
addb
mov
inc
cmpb
sub
ja
jle
push
jb
jle,pt
cld
gs
sub
inc
iret
lock
enter
js
adc
push
mov
enter
adc
mov
adc
dec
insl
imul
dec
ret
dec
add
int
adc
sbb
jb
mov
fdiv
lretw
mov
jp
lret
out
mov
stos
decb
pop
clc
mov
sti
incl
lds
ja
add
fiaddl
jb
scas
ret
xchg
add
lds
rcr
rcr
shlb
ss
rorl
pop
rorl
repz
nop
stos
inc
xor
scas
mov
repz
jbe
sub
test
mov
sbb
add
loopne
stc
pusha
dec
popa
ljmp
dec
push
cs
mov
scas
cmpsb
mov
data16
scas
es
mov
mov
xor
add
icebp
fstp
pop
imul
sub
sbb
aad
push
popf
cld
addl
dec
xor
dec
push
cmp
push
mov
rcll
inc
inc
cmp
adc
xchg
xchg
mov
mov
aas
test
fs
push
adc
aaa
movsl
adc
shll
cltd
lahf
add
pop
cmp
faddl
out
test
aas
xor
push
gs
sub
loopne
push
sbb
inc
sub
loope
mov
cmpsb
and
jl
mov
sub
loope
sbb
test
jno
dec
movsl
jbe
xchg
fmull
push
out
imul
xor
fchs
das
out
jle
and
lahf
out
pop
xor
nop
loope
mov
add
adc
leave
or
cmpsb
xchg
cmp
cmp
adc
and
pop
loop
or
rcl
pop
in
sub
jle
add
lret
data16
push
pop
jmp
push
mov
ret
mov
mov
imul
jbe
lcall
lret
fstps
push
jmp
in
jae
mov
push
dec
add
jmp
inc
in
ja
fisubrl
pop
or
scas
das
stos
push
or
imul
dec
dec
xor
and
mov
hlt
fldl
cli
dec
push
sub
pop
imul
jecxz
cmp
push
cmc
jl
fwait
xchg
add
xchg
scas
std
inc
cli
xchg
mov
pop
les
scas
sub
fidivrs
jmp
test
xor
in
lock
mov
xchg
cld
mov
test
adc
dec
in
leave
movsb
sub
sbb
push
or
jo
shll
or
test
sub
ljmp
in
sub
jnp
add
sbb
std
adc
int3
out
aad
lods
test
andl
lods
shll
mov
xor
scas
loope
adc
jl
testl
jmp
add
hlt
std
dec
xor
aam
dec
inc
cld
adc
lret
cmp
stc
xchg
push
dec
jns
imul
orl
insl
dec
xchg
les
mov
aam
inc
or
mov
cmp
push
jo
adc
xchg
push
sahf
cmp
out
push
mov
xorl
scas
push
mov
mov
pop
pop
aam
or
mov
sbb
inc
push
jecxz
jg
lret
inc
js
adc
xor
cld
lods
cmp
xor
into
sub
ds
lods
push
jecxz
pusha
sbb
popa
sbbl
xor
pcmpgtb
leave
cmp
sbb
andl
popf
push
jp
cmpsb
nop
mov
cmc
out
and
or
inc
mov
push
xor
and
sbb
popa
mov
imul
add
gs
adc
mov
or
and
sub
adc
sahf
gs
push
add
ret
aad
mov
bound
out
cwtl
fwait
push
add
or
call
jl
or
or
xor
pusha
es
cmp
dec
mov
cwtl
enter
pop
dec
jns
fsts
push
jl
ds
out
out
push
sti
xchg
mov
fsubs
fwait
inc
adc
cs
dec
and
dec
dec
pushf
fiaddl
pusha
in
mov
cmp
mov
scas
gs
jo
jbe
sbb
out
pop
mov
pusha
rcll
xor
and
dec
loope
and
aad
fwait
test
or
repz
push
mov
dec
push
mov
or
mov
jg
push
rcrb
mulb
push
test
or
mov
jne
mov
fwait
and
fisttpll
inc
repnz
sub
hlt
mov
adc
into
insb
push
pop
sar
daa
jo
xlat
rclb
sbbb
xchg
adc
sahf
arpl
lahf
and
in
sbb
shlb
push
mov
jnp
mov
xor
add
std
inc
push
adc
inc
mov
fmull
mov
mov
fwait
jo
sub
js
or
inc
movsl
lcall
mov
push
cmp
or
or
and
testb
and
rcrl
mov
jg
mov
lea
aas
sub
popa
dec
ret
movsl
sarl
pushf
dec
aam
mov
pop
stos
pop
clc
push
adc
pop
mov
sub
stos
sti
and
add
stc
in
inc
ret
stos
lds
or
inc
push
jl
push
push
nop
push
pop
int3
loopnew
stc
sbb
adc
lcall
in
or
and
pop
popa
nop
lea
mov
mov
lret
ret
xor
cmp
add
arpl
push
inc
xor
xor
jne
pop
adc
cs
mov
sbb
jg
pop
rcrb
jno
ljmp
imul
mov
dec
addr16
js
mov
cmp
xor
mov
pop
aas
aad
jmp
or
jo
sbb
xor
rclb
or
insb
sbb
pop
push
adc
sub
xchg
add
cmp
add
sbb
sbb
lea
popa
xlat
icebp
shll
jl
test
mov
mov
dec
cli
aam
pop
and
cmc
add
inc
loop
es
dec
lret
add
ds
cmpl
in
jg
jne
cmove
lds
xor
cmc
jle
and
mov
sar
je
cmp
dec
cli
loopne
mov
incb
call
rcrl
icebp
pushf
shrb
dec
mov
shlb
js
pop
jl
or
dec
pushf
repnz
or
jno
call
jle
loop
leave
scas
cmp
or
adc
pusha
shll
fsts
arpl
mov
push
jae
fistpll
leave
pop
adc
enter
out
dec
sbb
movsl
xor
pop
sti
dec
mov
sub
mov
inc
lahf
popa
movsb
xchg
mov
mov
aam
mov
push
mov
movsl
test
insb
jge
icebp
ja
mov
test
sbb
mov
jo
js
xor
xchg
pop
loopne
push
out
dec
inc
mov
sub
mov
cmpsl
adc
jo
dec
xorl
loop
fwait
lods
jbe
sbb
sbb
das
pop
lods
fmull
sub
sbb
pop
std
sub
cmc
hlt
mov
mov
pop
or
test
xor
lahf
adc
mull
or
popa
jb
sub
insl
mov
fistps
xor
notb
adc
jae
ret
dec
xor
push
lea
lds
add
or
dec
push
inc
mov
inc
out
addl
nop
pusha
push
xor
push
inc
in
or
cmpsb
add
and
sub
inc
mulb
cmp
inc
aam
nop
je
pusha
dec
add
adc
jb
imul
mov
aam
cwtl
lahf
mov
pop
test
fstpl
and
and
xchg
mov
add
push
mov
pop
mov
and
xor
adc
jl
fbld
div
pusha
out
and
lret
shr
or
cltd
adcb
out
add
adc
xorb
insb
ja
jle
sub
pushf
sarb
aaa
jns
inc
aaa
push
jp
bswap
sub
movsl
loope
test
insl
xchg
enter
std
adc
call
push
lods
jbe
adc
sbb
cmp
mov
push
pop
fcoms
push
xlat
push
push
jg
movsl
cld
cmp
mov
ret
mov
insb
mov
arpl
cmp
call
inc
ljmp
in
jnp
or
mov
jecxz
in
dec
inc
jns
cmp
ja
sbb
sub
xor
popf
outsb
adc
pushf
mov
and
shl
jno
mov
push
addl
lret
xlat
adc
fnstsw
test
lahf
mov
fstl
xchg
cwtl
popf
cmp
imul
sahf
xchg
xchg
jp
lods
pusha
xor
enter
mov
mov
mov
call
movsb
test
pop
sub
pop
cltd
xor
popa
push
cli
clc
in
jmp
cltd
jbe
mov
mov
mov
insl
fimull
dec
loopne
or
cmpsl
mov
mov
test
js
loope
shll
incb
mov
mov
lret
sti
or
out
insl
sbb
mov
cmp
int
xchg
mov
push
stos
sbb
fnsave
xorb
loopne
data16
lret
push
cmp
cmp
test
cmp
xchg
out
cmpsb
mov
mov
into
out
cwtl
dec
xor
xor
cltd
pop
push
sti
add
imul
mov
loopne
call
xchg
jnp
scas
xor
fmul
dec
mov
lds
movsb
mov
inc
std
add
mov
sbb
fs
iret
mov
jo
cmp
mov
mov
sarl
ret
push
in
xor
mov
lcall
shrl
cld
inc
pop
cli
jns
cs
pop
in
xchg
sub
add
icebp
ja
or
mov
dec
int
addl
xchg
xchg
mov
mov
add
or
pusha
sub
push
hlt
jnp
enter
mov
jbe
loope
hlt
mov
shlb
sbbl
push
mov
out
loop
jns
jg
xchg
jns
push
fmulp
popf
pop
pop
pop
inc
fisttpl
mov
push
imul
adc
enter
mov
sahf
cmc
dec
or
decl
mov
cld
bswap
mov
jno
sub
arpl
mov
jns
js
js
inc
xchg
andb
arpl
mov
fsts
lods
sbb
push
xchg
add
in
out
ss
mov
or
xor
xchg
lret
mov
jo
xchg
dec
adcl
shr
jg
inc
sbb
xchg
xor
push
lods
sub
cmp
insb
jns
xchg
pop
rorb
dec
shlb
int
and
push
xlat
sti
xchg
jns
popa
flds
enter
mov
xor
dec
mov
in
sbb
test
ret
insb
insb
sub
pop
fmuls
jns
mov
mov
shrb
test
nop
cmp
ror
iret
ret
pushf
xchg
push
mov
adc
into
jno
sbb
xchg
lods
popf
leave
jl
imul
jbe
shl
xchg
loopne
xchg
mov
xor
adc
stos
test
push
out
mov
shl
xchg
roll
mov
in
dec
mov
popa
xor
sbb
fcomp
adc
movsl
pop
mov
repnz
in
aad
jae
xchg
jae
push
pop
or
fdivrl
mov
dec
outsl
aad
add
mov
add
mov
inc
xchg
jbe
xchg
xchg
aam
faddl
inc
ljmp
fwait
loop
push
pop
pop
inc
test
and
loop
mov
fisubrs
adc
adc
cltd
cmpsl
insl
and
mov
pop
pop
add
and
mov
sbb
aad
pop
jmp
add
daa
popf
mov
lea
jo
jg
scas
jb
insl
jecxz
mov
sub
mov
push
fdivl
stos
cmp
cmp
repnz
or
or
xchg
adc
aas
insl
test
mov
stc
jmp
iret
mov
push
adc
xor
shrl
mov
pop
cmp
xlat
iret
push
jmp
mov
ret
fsubl
jno
jmp
cmp
mov
jle
clc
out
movsl
sbb
out
cmp
sub
and
repnz
rorl
jnp
push
push
insb
xor
in
dec
pop
adc
lods
or
mov
js
pop
out
xor
shl
pop
or
push
mov
in
push
jmp
stos
mov
push
xor
imul
adc
adc
in
out
pop
shrb
adc
insl
pop
lds
js
rolb
xchg
mov
testb
stos
cmp
into
dec
mov
adc
popa
and
test
enter
cs
sbb
pop
mov
test
stc
fwait
test
out
adc
dec
lret
or
outsb
dec
adc
aam
mov
fst
adc
in
das
daa
repnz
jne
mov
jecxz
xor
dec
fcmovnu
loopne
jl
ret
outsl
inc
mov
or
sub
push
cli
or
and
jae
mov
stos
push
pop
mov
xchg
adc
mov
inc
pusha
movsb
imul
or
adc
or
stos
xchg
jnp
xchg
jl
lods
in
insb
dec
add
lcall
movb
int
loop
mov
sti
mov
sbb
lea
and
ja
arpl
in
jl
andb
ficoms
inc
andb
push
fcmovbe
add
int3
movsb
fldt
daa
faddl
or
xchg
or
test
sarb
lds
popa
ror
data16
divb
clc
pop
add
incl
stos
mov
inc
cmp
lea
add
pop
test
pop
jp
dec
lcall
aas
lods
xchg
outsl
xor
movsb
sub
jnp
loopne
xchg
inc
aad
aas
mov
ret
mov
add
cmpsb
clc
xchg
adc
and
push
pop
xchg
aaa
sti
iret
mov
outsb
jb
push
test
pushf
push
mov
mov
iret
adc
sbb
cli
repz
out
sub
imul
mov
adc
sahf
lds
mov
mov
mul
pusha
adc
and
lods
popa
das
add
ljmp
nop
dec
and
fs
pop
stos
or
stos
inc
mov
lea
aad
xor
je
in
sbb
pop
int3
mov
gs
mov
bound
sti
outsl
bound
push
push
es
insb
and
cmp
xor
pop
sub
xchg
insb
scas
pop
and
or
repz
sbb
stos
xchg
clc
inc
into
and
out
adc
test
out
sub
out
scas
enter
imul
addr16
mov
sub
pop
push
push
xor
imul
jae
stos
test
mov
lret
hlt
fmul
ja
xchg
paddusb
test
dec
jne
push
nop
aaa
pop
stos
xor
cmp
cld
arpl
insb
add
cmp
rol
repnz
jnp
lods
cld
xor
ficompl
pop
dec
pop
inc
pop
inc
sub
dec
fsubl
fisubrs
ret
jo
iret
mov
xchg
in
scas
or
mov
mull
pop
fidivl
les
cwtl
insl
sbb
dec
dec
sub
test
pop
mov
mov
ret
mov
cs
or
add
leave
imul
and
mov
gs
icebp
aam
outsb
xchg
push
hlt
cmp
add
in
out
insb
cmc
loope
out
outsb
ja
pop
sub
cs
and
dec
ftst
xor
inc
out
inc
pop
mov
pop
xchg
lahf
pusha
out
mov
lock
push
out
std
xor
and
lods
lds
mov
adc
push
idivl
add
roll
leave
sub
fs
adc
orb
xor
cmp
xchg
pop
dec
mov
add
mov
xchg
pop
dec
shlb
or
repnz
sti
pop
loopne
in
adc
inc
adc
pop
mov
jo
iret
in
lret
mov
mov
bound
sbb
out
cli
pop
pop
test
pop
and
or
pop
inc
aam
ja
sbb
out
jp
jmp
inc
cltd
xor
cli
mov
mov
cltd
adc
scas
movsb
pop
xchg
xchg
xchg
lock
fstpt
repz
xchg
fs
fwait
push
pop
add
pushf
mov
pop
mov
shll
pop
cmpsl
mov
sbb
sbb
cmp
push
mov
pop
pop
xor
sbbb
and
jle
dec
xorl
sub
add
test
mov
out
fs
in
rorb
popf
pop
mov
insl
pop
imul
xchg
cmc
in
jge
ljmp
enter
mov
insb
and
xchg
shll
rol
popf
or
shr
cmp
mov
mov
jl
scas
cmp
xchg
mov
lock
mov
fcoml
mov
adc
divb
dec
and
ljmp
pop
pop
insb
sbb
cmp
jle
xor
or
fwait
xchg
push
decl
mov
xchg
lock
fistps
daa
push
sbb
cld
xlat
cmp
imul
push
sub
bnd
pop
js
out
aas
fcomp
add
rcrb
jnp
jno
push
test
jnp
push
sub
arpl
lret
inc
sar
xchg
outsb
inc
xor
add
sbb
xor
int
test
add
push
neg
pushf
cmc
adc
jae
xorl
shrd
jnp
mov
aad
mov
jnp
lfs
dec
dec
cmp
inc
stos
cmp
pop
inc
pop
jns
dec
clc
adc
cmp
insl
rorl
cwtl
jbe
dec
repnz
mov
pushf
dec
or
jae
cmp
and
loope
xchg
inc
addr16
repnz
scas
cmp
adc
bound
mov
mov
mov
inc
xor
adc
outsb
cltd
mov
xchg
jge
testl
stos
mov
pop
daa
push
add
and
stc
adc
in
mov
cmp
ret
xor
fwait
sub
hlt
nop
sub
fisttps
inc
mov
cmovns
sub
pop
popa
xor
adc
adc
popf
movsl
iret
xchg
orb
push
push
test
pushl
jg
mov
cli
xor
inc
push
xlat
sub
ret
push
lret
repz
mov
push
xchg
sub
pop
mov
je
call
test
clc
and
ljmp
insl
cmp
pop
aam
or
movsb
inc
lods
mov
push
jl
cmc
fmull
test
adc
addr16
in
icebp
mov
stos
dec
sub
aaa
clc
int3
cwtl
popf
push
stos
loopne
and
cltd
pop
stos
mov
xchg
mov
xor
mov
add
faddp
add
in
mov
add
or
sbb
shrl
mov
loope
sub
add
cmp
adc
cli
mov
push
int3
xchg
outsl
inc
inc
fs
shlb
mov
mov
inc
mov
push
sub
insb
or
cmpsb
mov
mov
sbb
rcll
fldenv
mov
lock
and
pop
lcall
cmp
mov
cmp
faddl
in
movsb
sub
sbb
inc
xchg
push
push
test
pop
mov
pushl
push
dec
mov
pop
xor
push
pop
movsb
jl
call
xchg
jb
inc
add
xor
mov
rcrl
sbb
fs
push
adc
inc
sub
ss
mov
popf
sub
fimull
nop
aad
dec
xchg
pop
loopne
in
jl
rorb
push
mov
xor
jns
sbb
aas
mov
xchg
xor
jnp
testl
enter
pop
cwtl
or
cmp
jb
pop
cwtl
subb
arpl
cmp
rcrl
lods
inc
adc
xchg
xchg
xchg
in
mov
movsb
fistpll
lods
mov
mov
data16
stos
adc
fs
jbe
and
inc
xchg
fistps
xchg
push
jge
pop
mov
inc
and
les
outsb
stos
punpcklwd
dec
inc
cmp
arpl
fstpt
sbb
les
lds
adc
mov
popf
iret
insb
mov
insb
daa
in
lods
stos
mov
pop
lahf
and
lret
mov
cmp
icebp
repnz
cmc
mull
loop
mov
sti
push
movsb
and
lods
lret
lods
in
cmp
lds
or
mov
mov
and
aad
in
pop
movsb
mov
ljmp
cmp
and
mov
jns
mov
inc
es
int
inc
jbe
fdivl
xchg
push
push
push
or
push
mov
mov
das
push
rclb
mov
je
insb
push
outsl
or
and
in
dec
add
add
dec
das
mov
xchg
pop
cmp
and
or
adc
inc
shll
xchg
ret
pop
pop
loop
xor
cmpsb
cmc
pop
in
pop
das
in
jmp
sbb
xor
clc
mov
mov
dec
out
lods
or
fists
add
inc
adc
dec
push
dec
jp
movsbl
imul
and
sbb
mull
inc
mov
stos
subl
mov
orb
lcall
pop
nop
pop
mov
aam
lret
jae
xchg
mov
cmp
xor
mov
jmp
scas
nop
jle
push
cmp
add
pop
mov
movlps
das
movsl
cmp
push
push
jmp
push
add
ret
fdivr
pop
pop
xor
jno
cmp
xchg
xorb
add
jp
xor
es
aam
ljmp
xor
call
push
dec
xchg
inc
fiadds
cmp
mov
imul
fisttpl
lods
incl
push
int
popf
jo
pop
or
jecxz
fmull
cmc
push
push
pop
jne
lock
stc
and
pop
mov
xor
shrl
mov
sub
lcall
outsl
jmp
popa
xor
jle
jg
fiaddl
mov
repz
adcb
cmp
iret
push
push
sbb
lahf
inc
cmp
cs
ja
jo
pop
dec
jmp
test
roll
fsub
loopne
pop
insb
adcb
or
push
sti
push
adc
andl
or
push
dec
xor
cmpsb
gs
mull
cwtl
rorl
inc
rcrl
ljmp
int
lret
movsl
or
dec
mov
fmul
xlat
arpl
inc
int3
out
jb
mov
xor
jge
lds
loope
movsb
lods
mov
and
jp
rolb
jg
fxch
out
or
int
popa
push
inc
xchg
xor
je
adc
dec
dec
inc
mov
aaa
cmp
cmpsl
or
aaa
cmpsl
cmc
xchg
stc
out
sarl
xor
das
and
insb
xchg
stos
hlt
jge
dec
repnz
add
leave
dec
stos
or
sbb
out
fstpl
retw
mov
rorl
cmpb
popf
adc
addr16
fisttps
mov
xor
xchg
mov
shlb
out
loopne
cmc
hlt
push
mov
jo
add
or
xor
xchg
dec
rol
dec
int
mov
pop
test
mov
int3
cli
insb
mov
inc
jns
add
jg
decb
push
adc
inc
lret
sub
sub
inc
mov
push
les
mov
aas
mov
jbe
dec
shll
mov
scas
bound
xchg
ds
paddd
in
adc
jo
data16
into
adcb
dec
mov
hlt
xor
cmp
mov
aad
push
add
xchg
sub
lahf
jne
cwtl
inc
mov
sbb
add
cmpl
jle
into
mov
xchg
dec
outsb
jae
xchg
js
fsubrs
les
lock
cmp
fwait
arpl
mov
outsb
scas
sbb
lret
fwait
stc
push
mov
pop
xor
jp
or
mov
sbb
cmp
rolb
fisttpl
jg
cmpsb
mov
or
add
mov
leave
test
std
mov
fdivrs
push
nop
roll
outsl
or
movsl
push
fmuls
mov
out
xchg
and
int3
aam
cmc
cld
cmc
jg
rolb
fimull
xor
stc
jnp
mov
test
call
sub
popa
push
dec
rcr
out
mov
xchg
jo
xor
stos
shl
fists
xor
and
lods
movsb
pop
test
cltd
ret
pop
dec
in
hlt
mov
rcr
pop
cmp
cmp
cmpsb
lahf
test
jo
xchg
pop
call
xchg
pop
jmp
jl
push
nop
enter
push
mov
je
sub
adc
xlat
add
stos
outsl
arpl
push
mov
cli
push
lret
outsl
dec
outsl
out
jne
xor
sub
mov
jecxz
insb
test
xchg
sub
lea
lcall
pop
pop
mov
pop
pop
adc
push
mov
adc
rcrb
cmp
jns
or
add
dec
pop
lret
popa
cld
sub
mov
int3
add
mov
cli
mov
cwtl
out
push
push
sbb
cmpb
mov
jp
ss
or
dec
lret
cli
test
jo
cltd
inc
loope
daa
jmp
jecxz
iretw
lods
mov
inc
inc
dec
lahf
addr16
notl
jnp
sub
jecxz
hlt
or
std
xor
mov
test
loope
inc
ret
int
lret
insl
xor
es
cmp
fisubs
mov
arpl
icebp
mov
gs
sbb
movsb
int
arpl
nop
sbb
mov
int3
cwtl
inc
xchg
shl
mov
ss
xchg
aaa
scas
scas
test
add
adc
add
movsl
pusha
sbb
push
fnstenv
push
ret
into
push
fcom
mov
cmc
jg
divl
lret
shrl
movb
adc
cmc
lods
xor
fcmovb
or
pushf
pop
lds
pop
das
cmpsw
mov
ficoml
scas
leave
ds
mov
into
push
lcall
pop
pop
pop
dec
stos
arpl
mov
jmp
mov
add
adc
out
cmpb
mov
mov
stos
in
js
leave
repnz
ja
or
cltd
mov
push
dec
push
or
inc
mov
jmp
add
and
es
sarb
arpl
mov
popf
jecxz
addl
mov
add
mov
movsb
cld
cs
popa
out
jo
jns
mov
pop
sbb
int3
mov
iret
pop
add
sbb
lcall
adc
mov
inc
xor
stos
repz
mov
sbb
sbb
loop
mov
push
sahf
es
push
addb
add
sbb
jg
add
push
xorb
jmp
enter
cmp
push
shlb
xor
in
mov
fisttps
das
xchg
mov
cmp
xchg
push
lahf
cmpsb
and
mov
stc
jl
xchg
hlt
jno
jle
add
jne
pop
inc
ss
xchg
bnd
repz
ficompl
jne
xor
mov
pop
fsubrl
and
repz
fsubs
mov
aad
xchg
lods
rcl
sti
adc
xchg
rorb
lods
addl
add
sub
insb
pushw
sahf
and
in
test
dec
sub
xchg
inc
xchg
stos
jmp
out
test
cmpsb
add
bound
mov
aad
sbb
insl
add
shl
pushf
cmp
icebp
jbe
mov
mov
pop
push
adc
xor
xor
inc
and
out
cmp
push
mov
subb
jbe
pop
pop
arpl
mov
leave
jle
cmc
sub
add
dec
mov
xor
decb
sbb
mov
pop
add
xor
sarb
mov
inc
ljmp
leave
sbb
or
lret
out
ret
rcll
push
ret
push
push
addl
sub
std
das
mov
adc
in
xor
mov
shrb
ds
outsl
in
dec
inc
int
sbb
sbb
cmpsb
sbb
popa
dec
ja
mov
cmp
pop
sub
inc
xchg
jno
or
xchg
lds
sub
outsl
arpl
mov
fwait
mov
xor
jnp
nop
clc
cmpb
mov
adc
dec
xchg
pop
mov
cmpsl
stc
ss
stc
lds
inc
cmp
sub
add
sbb
cmp
pop
jb
bound
xchg
xchg
fbstp
mov
mov
dec
inc
lods
subl
adc
cwtl
js
pusha
scas
ret
add
inc
mov
dec
or
and
adc
pop
pop
ret
mov
cmp
lahf
ret
enter
bound
sub
sub
push
sbb
daa
dec
mov
shl
or
xchg
mov
cmp
cmc
sub
pop
rol
mov
xchg
out
sub
and
adc
add
int3
sub
in
mov
cmp
mov
fs
xchg
adc
fs
push
ds
in
xchg
sub
enter
add
test
into
cltd
cmpsb
xor
pop
push
sbb
add
or
push
adcl
jae
dec
xchg
push
xchg
xchg
cmp
and
sti
outsb
xor
test
push
push
outsb
fwait
xchg
fsubr
outsb
sub
iret
mov
push
xchg
mov
out
les
es
ljmp
out
mov
fiaddl
es
shlb
mov
shlb
sub
inc
jno
incl
out
fnstcw
jnp
loope
fistl
or
and
inc
jge
pushf
dec
sar
jmp
or
sbb
aas
push
pop
stos
mov
shrb
xorb
push
mov
jno
mov
mov
es
pop
mov
sarb
subl
js
xor
lcall
or
loopne
out
inc
subb
jns
das
dec
fistpl
jae
mov
and
pop
jl
in
jmp
add
outsl
cmp
add
jmp
adc
jno
stos
rcrb
aad
rorl
jmp
lock
xchg
xlat
in
jg
lcall
pop
jno
mov
rcrl
bound
pop
popf
push
or
shlb
iret
pop
arpl
test
and
sub
and
cmc
push
pop
xchg
push
aad
sub
sahf
lds
sti
outsb
jnp
and
fistps
add
sub
imul
popf
adcb
int
sub
push
loope
xor
pop
jnp
jno
dec
in
xor
repz
cvtps2pi
lahf
jmp
loop
sbb
fisubl
pop
fcoms
jo
xchg
pop
sbb
ret
int3
inc
push
movsl
jecxz
pop
rolb
shrb
push
gs
xor
ficomps
jmp
jbe
repnz
popa
iret
push
cs
roll
sar
dec
lods
lret
stos
mov
push
jecxz
and
lods
xchg
in
loop
or
cmc
fiaddl
mov
enter
dec
int3
dec
je
int
rorl
and
sar
sahf
shrl
and
fsts
fistps
int3
cmp
mov
or
repz
imul
adc
and
movsb
push
icebp
es
ss
enter
push
mov
cmp
sti
jmp
repnz
jg
cmpsb
int3
out
inc
or
cmp
and
dec
jl
mov
or
fnstcw
aas
test
inc
addr16
inc
push
test
stos
push
pushf
imul
fwait
adc
mov
call
fiaddl
cmp
fwait
push
and
outsl
fists
push
jne
adc
aas
jo
mov
stc
push
sbb
push
test
lods
push
mov
mov
ftst
push
push
or
xchg
and
insb
shrl
je
ss
shrl
scas
cmpb
mov
mov
ljmp
stos
jo
cli
pop
pop
push
nop
cld
push
sub
shll
sub
std
cmp
xchg
outsl
popf
mov
push
mov
add
jmp
data16
stc
mov
lock
xor
xor
in
lock
dec
stc
test
stos
add
add
into
fmul
shrb
fmuls
cltd
cmp
imul
sbb
push
imul
cmp
inc
movsl
sub
jl
and
sbb
std
pop
scas
stc
push
mov
push
push
cld
leave
push
jnp
imul
cmc
out
in
cmpsb
addl
int3
pop
cmp
into
mov
add
pop
push
sbb
and
fists
inc
repz
or
and
adc
cmp
leave
pop
pop
out
sti
jle
cli
mov
mov
push
xchg
adc
mov
mov
aam
or
sbb
push
sbb
adc
fstpl
popa
dec
addr16
fwait
or
dec
scas
lods
loop
or
test
push
lret
movsl
outsl
mov
jecxz
mov
insb
cli
sahf
enter
mov
xor
xor
and
pop
adc
fadds
xchg
add
push
jle
mov
subb
fcoms
leave
cmpsl
mov
arpl
push
xor
js
andb
outsl
pop
dec
xchg
inc
xchg
lahf
push
lods
hlt
fidivs
lock
lahf
in
inc
dec
shlb
jae
int3
dec
fldenv
cmp
mov
sub
cmp
mov
clc
mov
jge
data16
push
aaa
jne
mov
cld
xchg
push
pop
loop
mov
jns
fcoms
int3
dec
jno,pt
mov
xor
mov
fsubl
push
js
xor
cmp
mov
iret
in
or
mov
outsb
insl
cmpsl
ret
out
ficoml
cmp
lahf
xor
and
scas
push
pushf
pop
jmp
lods
aad
inc
add
xlat
add
fadds
jmp
xor
sbb
add
mov
aam
pop
and
lods
enter
mov
test
lods
aaa
pushf
data16
mov
add
in
popf
inc
add
pop
cs
dec
mov
not
xchg
fwait
inc
in
rclb
call
jb
xchg
xor
pushf
aaa
lahf
dec
mov
and
sbb
and
xor
daa
mov
add
lock
enter
dec
adc
fstpl
pop
fstps
lcall
jg
pop
lcall
sub
inc
xchg
sbb
aaa
dec
mov
loopne
mov
rcrb
adc
fidivs
dec
mov
xor
sbbl
mov
into
divl
mov
aad
and
fyl2xp1
push
xlat
inc
mov
imull
xchg
int3
mov
or
sub
lea
ret
sub
mov
fisubl
xor
jnp
mov
push
or
or
ret
jp
ljmp
cmpsb
sbb
xor
enter
add
aaa
rorl
sarl
xor
push
inc
sahf
push
or
jae
xchg
xor
mov
fcompl
sbb
cmp
test
shlb
fstp
test
nop
mov
stc
mov
pop
and
rcrb
lds
loope
sub
ror
ficoms
arpl
sbb
pop
sub
or
jo
scas
dec
pop
andl
inc
fst
jns
push
cmp
aaa
pop
arpl
push
repnz
adc
repnz
push
add
jno
out
mov
inc
pop
out
cmpsb
inc
cmp
shlb
nop
xor
mov
xorl
and
sahf
jno
stos
in
fsubs
jl
mov
inc
mov
in
xor
stc
lds
xchg
mov
pop
pop
mov
or
mov
enter
stos
pop
pusha
imul
data16
cmp
lcall
fs
inc
push
pushf
movsl
test
stc
movsl
pop
jnp
mov
lar
jl
mov
mov
fwait
mov
subb
ficomps
jp
sbb
insb
xor
adc
clc
add
stos
scas
push
jecxz
test
pop
mov
cld
cmp
sub
pop
jae
inc
call
ret
mov
pusha
in
mov
fdivrl
outsb
pushf
mov
daa
test
mov
dec
cli
mov
aas
sub
cmp
push
loop
out
push
data16
shlb
mov
push
xchg
addr16
mov
out
shr
push
mov
dec
push
push
inc
aam
dec
jp
push
movsl
add
mov
sub
xchg
loope
cmp
rol
aam
ret
stos
jp
xchg
outsb
pop
cld
xchg
or
xchg
mov
mov
xor
xchg
and
jb
xchg
xchg
fidivrl
out
adc
push
push
inc
pop
push
inc
in
xchg
lock
push
pop
fisubs
xor
rorl
divl
xor
js
ljmp
insl
pushl
fistpl
fldcw
jge
pop
int3
rcrl
dec
push
and
lahf
or
xchg
int3
adc
cltd
out
nop
test
mov
out
mov
js
pop
cmp
xor
stos
jge
cmpsl
and
sub
mov
xchg
dec
xor
inc
mov
dec
inc
push
jo
pusha
push
push
jmp
add
mov
in
pop
mov
adcb
jns
cmc
cmp
xchg
addr16
idivl
fidivs
je
xor
inc
fcompl
cld
or
test
dec
mov
fs
xor
mov
sbb
cwtl
insl
orb
in
mov
movsb
fwait
fwait
inc
pop
int
add
ret
push
hlt
icebp
pop
fwait
test
loopne
mov
or
leave
pushf
stos
pop
jae
mov
into
mov
cwtl
in
dec
leave
aam
cmp
pop
sti
push
xchg
test
fwait
xchg
js
sbb
add
xor
xchg
adc
inc
mov
bound
ret
push
adc
cwtl
fcoml
stos
mov
lods
inc
xor
cli
mov
inc
cmp
int3
cmp
iret
fadds
lcall
lahf
push
loop
and
mov
dec
in
mov
testl
out
sbb
and
lret
rclb
push
cmp
fs
dec
cli
xor
jb
push
pop
add
mov
cmpsb
jno
adc
jmp
fmul
imull
ljmp
sub
sub
out
pop
or
out
mov
test
dec
scas
fdiv
scas
shlb
sub
stos
adc
fcoml
cli
pop
xor
das
outsb
add
std
cmp
cmc
add
mov
enter
aaa
jmp
push
add
leave
mov
jmp
cmp
xorb
scas
daa
inc
sahf
ja
jnp
push
mov
ja
into
hlt
pushf
fs
std
cmpsl
insl
jmp
test
rcl
sbb
movsb
sub
jle
scas
data16
outsb
sbb
data16
push
mov
dec
xor
cmp
in
lea
inc
inc
jae
pop
addb
add
stc
sub
inc
jl
inc
push
mov
cmpsl
xchg
out
xchg
sarl
lods
jbe
sahf
inc
add
sub
roll
push
jle
test
mov
and
mov
adc
cli
adc
jmp
lods
stos
mov
ss
in
push
pushf
mov
insl
mov
pop
leave
push
jno
pop
inc
sti
aaa
orl
iret
cmpsb
xor
data16
mov
leave
cmp
pop
ficomps
popa
xchg
loope
push
fisubs
dec
mov
out
aad
out
mov
pop
sub
rolb
and
or
cmp
sbb
mov
mov
pusha
loope
or
lahf
ja
add
test
add
push
icebp
je
pop
lret
sar
adc
fsub
push
stos
filds
loop
dec
mov
aas
imull
and
adc
push
iret
or
fsqrt
push
mov
fdiv
out
sbb
mov
insb
mov
or
inc
dec
mov
mov
fsubl
lcall
adc
sub
mov
nop
frstor
popf
cmc
fucomp
push
iret
and
in
setl
cli
lea
sbb
fsubr
dec
fisttps
sub
xor
ljmp
test
lods
mov
pop
dec
mov
and
jmp
pop
cli
push
xchg
ret
jns
mov
outsl
lret
pushw
dec
add
mov
and
int
repnz
xchg
inc
mov
cmp
cs
es
fiadds
xchg
int
stc
or
repnz
add
pop
pop
stc
shll
xchg
pop
mov
pop
pop
xchg
out
mov
aaa
mov
int3
negl
pop
sub
xlat
cmp
shll
mov
aam
push
lock
mov
jmp
inc
jmp
push
mov
xor
and
xor
out
mov
pop
ret
in
jae
jmp
int
mov
mov
and
xor
cmp
ds
test
mov
scas
xchg
ljmp
mov
mov
sub
or
test
xor
pop
cmp
popf
sbb
fwait
inc
adc
lods
jnp
xchg
js
out
rcrl
or
jg
fs
mov
mov
cmpsb
lret
out
mov
fmul
inc
imul
xor
sti
call
and
push
adc
or
popa
outsb
sub
cmp
fbstp
scas
stos
movsl
dec
jns
cmp
mov
or
cld
pop
pop
pop
add
xor
and
and
loopne
fmuls
push
pop
pop
mov
mov
jae
subl
add
inc
ja
jne
mov
jb
shll
out
mov
mov
lds
cltd
lds
mov
cltd
or
push
xchg
jbe
or
adc
cwtl
test
pushf
cli
sbb
mov
mov
das
in
and
mov
rcrb
lock
gs
arpl
and
cmp
or
pop
mov
mov
fwait
cld
call
lods
out
addr16
ljmp
iret
sbb
imul
and
or
inc
jp
cld
push
inc
je
xchg
mov
push
fmuls
mov
arpl
dec
roll
popa
cmp
jne
push
int
mov
addr16
fldcw
fdiv
loopne
mov
push
add
paddusw
lock
lcall
pushf
test
xchg
add
clc
into
or
or
add
xor
decb
lods
movb
xor
std
test
pop
fdivs
fs
negl
test
fists
cmp
pop
imul
aam
xchg
arpl
pusha
ret
repz
dec
out
and
xchg
outsl
inc
jl
dec
adc
pop
stc
dec
and
mov
ljmp
rcll
lods
and
cld
jae
sbbb
xor
out
je
pop
fadd
and
adc
das
in
or
andb
daa
sub
inc
fdiv
adcb
add
mov
mov
sbb
in
and
daa
mov
call
mov
dec
fstps
shlb
aas
jb
jmp
mov
push
sub
call
cmpsb
and
rcrb
cmp
mov
mov
mov
inc
inc
mov
pop
mov
ja
pushf
outsl
pop
xor
loopne
add
movsb
cmpsb
mov
outsl
jmp
sbbl
jle
mov
js
pop
fisttpl
nop
fs
fldenv
shl
arpl
stos
push
loopne
es
les
in
push
in
xchg
xor
inc
orl
jp
jecxz
sbb
test
loope
lock
cmpsl
mov
add
or
loope
into
stos
cmp
xchg
push
stos
add
inc
fcompl
jae
adcl
xchg
scas
push
lods
add
sub
mov
mov
ror
push
xor
inc
cwtl
sbb
fwait
cmp
into
adc
push
push
mov
pop
adc
add
mov
sti
sub
test
mov
scas
inc
pop
ds
pslld
fisubl
dec
mov
addr16
notl
fcmovbe
inc
pop
dec
out
push
call
mov
mov
cmp
adc
jne,pt
xlat
cmp
jb
je
jp
aam
cmp
fst
or
pop
push
inc
xor
lret
mov
repnz
ja
daa
shll
cld
jmp
or
and
int
mov
bswap
fwait
imul
pop
cmpsb
jge
loope
imul
fisttps
ds
mov
ret
dec
or
push
sub
shll
mov
xor
mov
push
shrb
push
sbb
fdivrl
sbb
mov
lcall
xchg
fistl
neg
xor
imul
inc
add
adc
cmpsl
xchg
mov
and
xchg
ficoml
pop
xchg
xor
mov
out
fdivl
xchg
aas
cld
scas
jmp
and
and
mov
pop
cvtps2pd
ret
jge
pop
push
fldcw
es
lds
xchg
jmp
std
xchg
lret
popf
movsl
pop
fwait
in
fnsave
leave
test
loop
andb
pop
dec
mov
rclb
imul
fbstp
pop
js
sbb
pushf
adc
sbb
pop
roll
add
aad
rcrl
aas
sti
mov
lahf
nop
xchg
lret
loop
or
mov
jp
lret
xor
movsb
jno
hlt
out
ficompl
cmp
push
xchg
imul
lods
push
xchg
daa
sbb
es
mov
jg
repz
lds
lods
jecxz
in
inc
mov
mov
lock
lods
scas
clc
jge
jnp
pop
or
lret
dec
mov
pop
jg
leave
outsb
mov
insb
sarb
cmp
pop
outsb
stc
into
pop
push
out
sbb
xor
mov
mov
int
sbb
popf
cmp
daa
outsl
xchg
adc
fisubs
xor
stos
sub
lret
ja
cmpsb
or
outsb
les
push
fld
add
xchg
xchg
pop
or
dec
adc
out
lahf
fwait
xchg
movsb
sbb
mov
jno
inc
es
and
int3
sti
mov
adcb
mov
mov
cmp
mov
insl
rolb
std
inc
aad
pop
clc
add
xchg
xchg
adc
push
push
push
addr16
push
jle
sahf
xor
pop
fwait
xor
lock
pop
cmp
int3
les
cmpsb
hlt
fistl
hlt
fwait
sub
stos
addr16
adc
gs
mov
ljmp
loopne
inc
jle
cli
sbb
stc
xlat
sarb
jo
pop
enter
mov
addl
decl
clc
mov
xor
lds
sbb
movsl
shl
fdivrs
jecxz
popa
lods
cmp
js
inc
mov
mov
hlt
ret
test
jo
int
cmp
and
xchg
test
shll
inc
movsl
fs
add
pop
jae
lock
lret
push
sahf
scas
mov
mov
stos
sbb
out
push
adc
rcl
dec
popf
fs
jg
leave
test
xor
sti
jmp
mov
outsb
and
and
stc
mov
or
aas
push
lods
dec
fistpll
fists
fs
outsb
in
xchg
es
repnz
bound
fimuls
xor
shlb
imul
inc
shr
subl
mov
hlt
or
sahf
push
hlt
movsl
add
dec
mov
mov
arpl
fnstsw
mov
xor
frstor
repnz
adc
inc
or
fadd
aas
push
ljmp
int3
popf
pop
in
jns
pushl
inc
bound
and
and
hlt
dec
add
dec
and
dec
out
iret
cld
or
rolb
fsubr
outsb
cmp
lds
imul
mov
xchg
dec
daa
out
add
inc
fxch
out
inc
sub
xchg
ljmp
mov
outsl
cli
cli
ret
orb
movl
xchg
pop
lret
test
or
and
xor
pop
mov
xchg
jg
aaa
scas
rolb
pop
pop
add
popf
and
outsb
or
inc
ss
js
pop
jae
decb
inc
popa
push
push
add
hlt
mov
jge
or
or
jbe
leave
loope
add
mov
clc
xchg
insb
add
add
jbe
cltd
add
or
dec
and
pop
ja
rcrb
inc
or
aam
mov
pusha
orb
test
and
ret
pop
out
inc
fsubrp
popf
shrl
sbb
or
lods
movsl
inc
inc
loopne
aad
push
repnz
sbb
push
sub
adc
xchg
orb
lahf
mov
or
movsl
aas
loopne
dec
ja
out
xlat
push
imul
and
sub
sbb
ljmp
pop
lods
adcb
popa
fs
pop
mov
stc
push
pop
popf
pop
dec
clc
and
nop
je
jge
movsb
fwait
daa
and
sbb
pop
jbe
out
fsubs
push
jnp
xchg
push
pop
repz
dec
arpl
stc
pop
xor
push
adc
cld
addr16
lahf
mov
mov
adc
ljmp
mov
pop
push
pop
int3
xor
cmp
mov
shlb
mov
jle
xor
push
jle
stos
push
test
add
mov
test
mov
mov
es
xorl
cli
sti
add
das
mov
push
sub
xchg
ljmp
sub
fldenv
daa
xor
adc
mov
mov
mov
test
imul
xchg
mov
dec
cmp
pop
mov
mov
out
lea
jg
rcr
mov
xor
icebp
test
xchg
push
mov
xor
mov
adc
out
xor
and
mov
mov
xor
jb
lret
and
and
dec
shrb
xchg
and
push
imul
daa
adc
lret
sbb
lret
cmc
xor
dec
pusha
sub
xchg
fisttpl
cmp
pusha
mov
jno
sub
iret
pop
stos
xchg
jg
xorl
popf
dec
pop
into
and
or
and
aas
loop
movsl
shll
aad
cmp
push
lret
push
cmp
fsubl
or
jo
xchg
add
mov
push
add
jmp
cld
rcl
mov
icebp
ror
sbb
jg
mov
dec
into
lret
cmp
test
xchg
jbe
jo
push
inc
adc
and
or
jecxz
mov
iret
pop
sub
xor
in
cmpsb
sub
sbb
mov
ss
xor
pop
push
xor
insb
jno
and
andb
loopne
das
out
mov
mov
lahf
and
xchg
ljmp
mov
jns
push
cbtw
cmp
cmpsb
int
sbb
arpl
decb
loope
push
mov
lock
lcall
movsl
outsb
mov
shlb
sbb
aaa
mov
mov
cmpsb
and
test
xchg
xor
ss
stos
inc
pop
add
inc
and
imul
cwtl
pop
repz
sbb
sahf
test
fistpl
imul
xlat
call
push
repnz
cmc
jp
cmc
fmuls
or
stos
xor
mov
int3
dec
aas
add
mov
mov
inc
test
ja
out
aad
lods
daa
int
out
dec
sbb
xlat
add
out
xchg
aas
into
xor
adc
adc
cmpsb
aad
pop
mov
in
ret
sbb
inc
inc
cmp
in
mov
clc
xor
dec
addr16
push
xor
xchg
fmuls
or
jns
add
adc
stos
push
push
in
adc
fsubr
and
jae
pushf
loopne
xchg
push
cmp
pushf
cmp
pop
xor
fldt
mov
popf
jp
inc
test
inc
jns
scas
insb
mov
sbb
out
pushf
sbb
jnp
jne
adc
test
mov
ss
sub
bound
xor
pushf
int
cmp
in
xor
ret
inc
adc
scas
add
lods
sub
dec
cmp
addl
sub
shl
xor
pop
and
stos
movb
into
mov
dec
in
lea
pop
cs
and
shlb
sub
pusha
and
enter
inc
shrl
out
in
inc
dec
jmp
xor
clc
mov
adc
or
nop
push
mov
cltd
and
cmp
int
xor
arpl
and
cmp
call
cmc
fsubp
loopne
scas
sbb
jl
popa
jl
xchg
push
cmp
lahf
fwait
pop
adc
add
out
sub
xchg
xchg
dec
fsubrs
mov
inc
stc
andb
and
ficompl
jbe
and
sahf
lods
jae
stc
or
icebp
fistpl
mov
sub
mov
pusha
jnp
mov
push
and
or
out
fcompp
sbb
fwait
ja
gs
mov
sbb
fildll
shr
push
xor
ret
add
mov
aad
push
pop
jp
movsb
fdivrl
mov
xchg
popl
push
xchg
inc
adc
test
push
fidivl
pop
sub
cltd
fwait
and
xor
and
dec
enter
icebp
ret
loopne
shl
inc
int
mov
cmp
mov
fwait
push
cwtl
pop
hlt
dec
arpl
iret
iret
out
sub
dec
fs
jb
pop
jnp
mov
push
repz
add
push
lcall
inc
inc
enter
imulb
enter
js
dec
cmp
jne
sub
sbb
mull
jle
xor
mov
rcrb
mull
mov
jns
inc
cmpl
lock
es
inc
push
rcl
jno
les
adc
into
mov
push
dec
movsl
in
or
pop
mov
lea
je
mov
mov
test
adc
int3
cmp
and
xor
and
bswap
jp
xor
ficomps
pop
and
mov
xor
cmp
fdivs
push
lret
rol
test
rdmsr
xor
es
pop
imul
leave
jecxz
stos
adc
dec
cmc
xor
inc
fdivrp
std
pushf
xchg
shrb
cli
pop
add
mov
xor
cmp
loope
fistl
add
int
mov
jg
pop
shll
in
rcrl
shlb
cmp
test
push
pop
nop
xor
les
adc
jmp
shll
inc
and
pop
add
into
jge
cmp
xchg
popf
aam
mov
sahf
xchg
loopne
test
sbb
sub
dec
pusha
sub
sub
xor
xor
outsb
fsts
jnp
enter
and
fdivrl
imul
add
sbb
push
mov
cmc
add
mov
pusha
pop
fiaddl
gs
mov
cld
sbb
xor
scas
aaa
mov
jns
sub
mov
insl
into
add
jecxz
idivb
jle
cmp
or
repz
pop
arpl
addr16
ljmp
andb
sbb
addr16
jecxz
mov
jns
add
stc
lahf
jno
xchg
cwtl
out
pusha
mov
and
jg
jns
and
leave
sbb
in
mov
fwait
xchg
test
aam
data16
insl
mov
aaa
leave
push
push
mov
adc
into
mov
test
push
test
cs
mov
orb
mov
xor
movsl
mov
mov
cmp
cltd
call
inc
inc
pop
adc
sbb
aam
scas
cmc
or
sarb
nop
adc
lret
mov
repz
popf
stos
sub
lods
inc
sbb
xchg
cmp
popf
jge
adc
push
add
xchg
lahf
mov
fisubrl
pop
push
loope
lock
mov
sqrtps
inc
insb
pop
xchg
and
clc
rorl
in
int
mov
lret
xor
mov
call
mov
and
dec
xor
ret
cmp
movsl
xchg
imul
sub
mov
shl
arpl
mov
cmp
push
daa
ds
cltd
fisubrl
data16
out
int3
jge
in
imul
mov
in
cmc
jo
setns
dec
inc
add
sti
jnp
jne
xor
jle
mov
outsl
adc
inc
and
int3
push
dec
or
data16
pop
pop
mov
mov
insl
lea
and
loop,pn
dec
and
sbb
hlt
jmp
dec
push
jmp
rol
sbb
inc
jae
call
lahf
ret
stos
jnp
call
leave
xchg
sti
jne
mov
mov
mov
push
xchg
out
in
dec
and
stc
call
sub
jle
pop
cmpsl
adc
enter
loope
inc
movsb
outsb
cmpsl
popa
imul
inc
mov
into
cs
pop
icebp
add
test
arpl
xor
add
mov
push
inc
mov
cmp
lds
mov
popf
das
fcmovbe
mov
and
mov
fcmovnbe
lock
pop
mov
and
leave
inc
lds
adc
ds
loopne
adc
fmulp
scas
ret
cmp
push
or
sahf
mov
mov
sub
sbb
or
lock
test
lods
repnz
ret
arpl
cmp
filds
jmp
filds
pop
icebp
daa
dec
xchg
xorl
inc
xchg
mov
inc
adc
sub
into
mulb
mov
lock
sub
arpl
pop
lea
xor
ret
cltd
enter
in
mov
jg
aam
lret
out
ret
movsl
xchg
mov
jae
cmp
sbbb
fisubrl
adc
leave
mov
cmp
loopne
fxam
out
shrb
enter
mov
mov
data16
pop
stos
mov
out
rcr
pop
jle
xor
xor
jg
mov
pop
in
sub
mov
push
pop
cmp
movsb
orl
and
xchg
leave
mov
sbb
pop
js
mov
call
cmp
xchg
ret
movsl
xchg
push
sbb
adc
outsl
pop
repz
jb
int3
lret
inc
mov
sbb
push
lret
adc
addb
fdivl
fxch
and
inc
cmpsl
imul
ret
loope
fnstenv
jb
xor
out
and
jge
sbb
xor
andb
and
sub
es
test
dec
pop
mov
movsl
and
pop
shr
push
sub
out
add
xchg
gs
fs
test
movlps
mov
push
xlat
xchg
or
jecxz
pushf
mov
push
ret
xor
pop
cmp
lds
rolb
decb
push
fwait
orl
outsb
addl
adc
shll
imul
pop
inc
mov
cmc
popw
lret
pop
xchg
and
mov
inc
out
add
ret
push
cmp
sarl
icebp
cmp
dec
jo
or
addr16
cmp
pop
or
push
cmp
lock
xorl
in
cmpsl
into
dec
int
dec
cmp
jmp
mov
cmc
ds
rcr
int
add
push
mov
xorb
das
aaa
inc
ret
or
pusha
push
out
pop
adc
sub
bound
pushf
stc
pop
jae,pt
xchg
sbb
adc
and
cmp
add
sbb
add
mov
dec
aam
pop
insb
add
and
jb
mov
push
mov
test
sti
sbb
lods
xchg
sbb
pushf
mov
aam
sbb
sub
iret
mov
out
sbb
js
cmpsb
sbb
rep
jb
add
pop
pushf
in
jbe
loope
dec
and
mov
leave
rolb
xchg
mov
lret
enter
popfw
jno
adc
lret
jbe
pop
mov
or
test
xchg
test
and
mov
xchg
mov
in
dec
jne
pop
insb
inc
cli
mov
imul
adc
std
out
jae
out
test
cmc
loopne
in
das
mov
or
shr
and
jecxz
les
arpl
stos
mov
xor
sub
hlt
dec
test
adc
push
inc
sub
mov
jp
add
sub
ret
arpl
mov
push
lds
add
push
ret
les
aaa
sbb
mov
dec
sub
and
popa
add
jns
es
mov
test
lea
adcb
rclb
fstpl
inc
adc
daa
jne
mov
jge
iret
or
int3
mov
and
and
adc
js
sahf
fldpi
and
sahf
es
lods
sbb
dec
pop
mov
xor
addr16
sub
fildl
push
idivb
cmc
add
enter
push
push
jl
icebp
or
int
and
sbb
add
sub
ret
dec
lds
fisttpll
dec
mov
mov
ljmp
xchg
fldenv
lcall
jno
insl
pop
movsl
xchg
movsl
clc
sbb
and
in
mov
or
mov
pop
js
pusha
icebp
dec
xlat
in
cmpsl
jo
pop
fchs
cli
dec
inc
les
xchg
in
loop
stc
roll
stc
pop
imul
jnp
adc
shrl
mov
jle
fimull
nop
int
js
in
movsb
xlat
shl
inc
mov
sti
dec
push
movsl
loopne,pt
pop
push
add
adc
inc
lods
fwait
loopne
imul
fisubrl
mov
insl
dec
imul
dec
out
and
sub
bound
or
xor
into
js
outsb
repz
cmp
ds
paddsw
mov
dec
ret
xor
loopne
dec
fcomp
shll
cmp
subl
movsb
cli
push
push
call
xchg
das
test
mov
sbb
lret
shll
fildl
pop
adc
popl
outsb
dec
imul
jo
push
cmp
mov
outsb
ret
adc
dec
leave
dec
movsl
sbb
in
test
aas
mov
and
sub
std
adc
int3
inc
xor
inc
adc
and
mov
rcrl
adc
popf
lcall
add
aam
mov
dec
in
sbb
js
xchg
stos
fsts
popf
and
jge
cmp
sarl
fsubl
repz
sub
test
imul
push
push
push
pusha
add
fdivrs
jbe
inc
das
pop
push
mov
mov
scas
lret
or
adc
pop
mov
in
push
ss
repz
test
jae
cs
push
push
mov
shrl
fistpl
sub
sbb
pop
dec
sbb
ljmp
stos
das
cmp
adc
movsb
into
inc
and
rcrl
or
sbb
popa
push
mov
adc
push
jae
out
xchg
push
or
push
pushf
test
sbb
negl
or
inc
rcrb
outsb
cmp
mov
les
cmp
cs
xchg
mov
mov
leave
cmp
mov
mov
push
sub
sbb
insb
jecxz
les
enter
and
imul
jns
push
mov
fwait
gs
xor
mov
or
xchg
add
fucomp
nop
shlb
and
mov
xchg
jp
ds
stos
inc
int
cld
mov
mov
mov
mov
jle
inc
sarl
xor
cltd
jp
incb
xchg
pop
add
and
clc
cmpsb
jmp
xor
xor
push
int
dec
inc
bound
rcr
loop
ror
mov
call
sahf
in
into
push
dec
lods
add
cmpsl
outsb
ja
call
cmpsb
dec
bound
dec
sub
xor
cmp
and
out
leave
idivb
decb
add
lods
lcall
sahf
jp
rcr
insb
lods
jg
ds
nop
cmc
add
push
jp
add
or
mov
fidivs
add
dec
popf
add
push
pop
adc
sti
sti
cmp
ret
push
dec
xchg
rorl
or
push
mov
nop
inc
xchg
jo
or
cmp
aaa
jns,pn
jns
fstpl
adc
nop
inc
js
arpl
popf
hlt
inc
mov
mov
stc
inc
fadds
ret
ds
xchg
xchg
test
hlt
mov
dec
jg
jg
dec
icebp
insl
xor
out
pushf
fldl
scas
or
inc
aas
ja
fistps
add
es
lea
imul
cmp
aam
add
mov
inc
pop
mov
mov
jns
xchg
inc
incl
jg
js
test
jae
mov
fcoml
and
and
call
cmp
andps
add
dec
adc
add
xor
xchg
xor
fstps
in
pop
mov
jae
mov
shlb
into
jo
imul
loope
sub
jl
pop
cmp
cmp
imul
dec
inc
nop
mov
mov
addr16
repnz
popa
pop
ret
jle
push
and
fst
insl
outsb
push
js
push
stos
imul
inc
insb
cs
push
fidivs
pop
or
imul
mov
std
addb
mov
jb
jbe
inc
pop
lods
mov
testl
push
cli
loop
insl
mov
or
pop
pushf
call
dec
loopne
pushf
push
jecxz
ss
mov
shlb
daa
fisttpl
inc
dec
fsubl
cmp
int
jge
jo
jle
in
sbb
and
imul
push
jg
cmc
pop
scas
push
aad
mov
fdivrl
divl
inc
or
int3
pop
mov
iret
orb
add
dec
in
fnstenv
mov
push
mov
pop
dec
mov
fdivrp
xor
lcall
stos
and
pop
orb
cld
aas
xchg
ss
push
inc
loopne
sub
lcall
mov
and
jle
test
leave
mov
jp
imul
fidivrl
mov
inc
in
outsb
push
dec
dec
cmp
mov
mov
les
out
inc
into
pop
jecxz
sbb
hlt
jp
ja
or
loope
add
fcmovb
xlat
imulb
lods
sbb
fcoml
lret
pop
fcmove
cmp
aaa
ja
add
test
enter
sbb
mov
les
lock
mov
inc
mov
mov
pushf
into
push
iret
idiv
int
push
push
sbb
in
sub
jno
and
jne
rclb
inc
inc
xchg
jge
pop
test
inc
sub
in
fs
jo
stos
sbb
dec
mov
jb
gs
jae
stos
mov
test
inc
cli
repz
xchg
sbb
sub
mov
pop
test
sahf
jae
jae
fwait
push
jo
stc
hlt
sub
xchg
or
xchg
cmc
pop
mov
rclb
out
push
fs
cmpsl
jecxz
outsb
cmp
imul
and
sbb
mov
sbbl
out
fnstcw
jle
mov
xor
mov
push
mov
shll
jg
shll
fcmovnb
and
lea
arpl
sub
pop
mov
push
in
pusha
dec
and
cmp
or
xchg
inc
xchg
jg
xor
and
jmp
pop
idivl
pop
sbb
mov
popa
adc
push
or
push
cwtl
cmp
out
mov
fwait
stc
hlt
push
jbe
aam
pop
gs
fisubrl
push
cmc
cmp
adc
or
or
je
dec
stc
push
sub
push
shlb
incb
call
fnstsw
mov
jecxz
aad
nop
in
cld
js
and
sub
xchg
and
fs
adc
or
fsts
insb
jle
pop
and
mov
fcomps
xchg
xchg
jne
ja
or
lods
add
add
loop
scas
mov
daa
push
cli
mov
out
mov
scas
jge
or
adc
lock
movsl
mov
mov
into
cmp
mov
pop
popa
mov
dec
movsb
aad
pop
lock
mov
mov
push
inc
pop
rcrb
nop
ret
cld
leave
je
dec
scas
fidivrl
push
xchg
fwait
out
jecxz
push
ja
jl
push
fs
xchg
aad
inc
mov
aas
push
in
data16
mov
loopne
ja
jo
push
xor
push
fldenv
ljmp
dec
mov
sub
aam
leave
push
test
push
pop
inc
and
out
in
mov
aam
sbb
in
xor
aaa
mov
sub
fisubs
push
lret
enter
aad
mov
les
je
mov
dec
int
repz
or
insl
xor
xchg
xchg
mov
or
ss
lods
mov
dec
mov
and
mov
lock
and
xor
insl
push
cli
movhps
cmpsl
dec
mov
ds
test
cmp
mov
cmpsb
jns
sbb
fwait
inc
push
adc
adc
push
fsts
test
lahf
sbb
jmp
call
mov
push
jecxz
sti
jo
ror
movsb
scas
push
inc
mov
leave
not
pop
xchg
testb
clc
push
dec
or
scas
out
movsb
mov
cwtl
daa
mov
cmpsl
mov
fsubs
mov
out
fsts
insb
cmpsb
fists
test
push
aaa
arpl
popa
aas
les
in
repnz
stos
enter
mov
popf
push
loope
jne
lock
xor
mov
mov
fs
sbb
andl
mov
push
adc
jmp
scas
jae
xor
sbb
push
xlat
lea
sub
mov
inc
sbb
and
pusha
iret
nop
testb
push
jl
push
out
cmp
ret
mov
or
dec
adc
cmp
fwait
or
add
cltd
jmp
repnz
outsb
leave
sarb
cmp
js
aaa
xor
int
repnz
lods
pop
lods
icebp
mov
xor
nop
cmp
adc
adc
hlt
fistpl
fs
sub
sarl
dec
dec
dec
sbb
xor
xchg
in
cltd
or
jl
and
pop
or
and
cltd
xorl
push
es
sbb
mov
lods
movsl
mov
fbstp
insl
add
bswap
push
mov
aam
push
xchg
test
repz
sub
pop
adc
repnz
mov
popf
mov
arpl
mov
ret
sbb
dec
push
xchg
loope
movsb
push
push
rolb
xor
in
or
into
dec
xchg
mov
xchg
fcomi
jb
stos
stc
adc
and
xor
lods
out
inc
xchg
jo
outsb
ficomps
xor
imul
push
dec
sub
xchg
rol
lds
test
std
push
je
insb
xchg
loope
sbb
mov
xchg
mov
or
cld
adc
fwait
xchg
enter
je
xor
negl
push
popf
icebp
test
mov
xchg
mov
and
jae
jmp
cs
sbb
inc
add
into
ja
sub
in
sub
push
enter
xor
mov
jl
sbb
icebp
data16
daa
sbb
je
mov
mov
or
je
dec
ljmp
xor
xchg
mov
jnp
inc
les
shlb
fisubrl
cmp
fisttpll
and
lahf
int3
movsl
inc
loopne
sub
das
xchg
negl
inc
or
arpl
inc
data16
or
adc
fwait
dec
and
xchg
pop
mov
movsb
push
jmp
xor
into
loopne
pop
lods
test
fmulp
test
addr16
in
enter
clc
pop
adc
lock
sbb
adc
sti
pop
jb
inc
dec
mov
fistpl
cmp
cmpsb
sub
out
clc
push
cmpsb
lret
adc
bound
cmp
rolb
icebp
lret
dec
sub
sbb
fsub
or
or
sarb
add
in
cmpsl
mov
xchg
jmp
aaa
popf
ds
in
lea
xor
ficomps
inc
imul
outsb
daa
dec
lret
or
shlb
pop
aad
lcall
andl
outsl
loop
in
fisubrl
or
jmp
fiadds
aad
pop
jmp
scas
sbb
ret
idiv
cmp
pusha
leave
leave
sbb
inc
shl
jns
xor
shll
add
jmp
test
inc
adc
scas
jae
ja
cmp
enter
arpl
inc
mov
adc
ffree
ljmp
aaa
imul
scas
jl
add
pop
and
imul
fmulp
mov
fbld
mov
xor
scas
adc
fstps
xchg
inc
mov
gs
cltd
add
int
and
mov
subl
outsl
stc
mulb
xor
in
xchg
fcmovnb
or
jb
add
call
outsb
adcb
repz
cmp
pop
xchg
imul
insb
jle
jp
pop
cmpsl
xorl
les
ljmp
adc
movsl
outsb
cmpsl
fs
shl
xchg
push
stos
aaa
lcall
out
out
test
lret
xor
mov
cmp
lods
mov
pop
inc
out
sbb
daa
pop
test
and
stos
dec
mov
mov
enter
icebp
push
sbb
test
add
push
dec
dec
mov
pop
cmpsl
pop
popf
push
pop
and
push
jo
ja
jmp
test
jae
cwtl
pop
data16
stos
cmpl
cmp
mov
lea
test
stc
jl
dec
sub
das
lock
inc
cmp
or
pop
outsb
mov
cmpsl
adc
inc
cmpsl
arpl
fdivrl
adc
ret
jmp
pop
xchg
sbb
pushf
je
mov
dec
and
in
sarl
or
movsl
mov
xlat
sbb
xchg
in
inc
subl
mov
and
mov
mov
xchg
jb
cli
xchg
cmp
xor
inc
stc
add
fdivr
pop
jmp
and
push
and
push
mov
jecxz
clc
or
neg
adc
lret
fstps
loop
lret
dec
mov
push
call
repz
fstpl
shll
aas
mov
nop
pop
popa
push
fs
push
push
ja
sbb
add
fldenv
cltd
in
add
xlat
add
outsl
mov
jle
cwtl
adc
xlat
je
inc
test
cli
fcomip
dec
mov
adc
data16
lods
std
adc
xchg
aaa
enter
dec
mov
and
xchg
jne
ja
in
xchg
lods
jns
mov
test
cmpsl
das
in
out
stos
push
in
pop
pusha
cmp
sub
das
ja
repz
lods
shl
mov
add
xchg
dec
je
mov
mov
xor
fnstenv
push
jmp
popa
test
xchg
jl
sbb
mov
mov
jbe
xchg
orb
jnp
popa
repz
mov
mov
sbb
xchg
dec
cmc
aad
fmull
pop
loopne
mov
pusha
aad
scas
mov
pop
call
out
std
divb
test
lds
in
adc
test
dec
cmp
dec
loope
add
or
push
adc
cmpsl
outsb
scas
and
jge
in
jge
xchg
les
add
js
bound
xor
rorl
sub
sbb
inc
andl
cwtl
fildll
cmpsb
fists
lahf
outsl
mov
push
or
adc
in
jle
dec
int3
jne
insb
sub
adc
cmpsb
mov
mov
in
sbb
testb
mul
xchg
cmp
fsubr
inc
cmpsb
inc
or
xchg
sbb
ds
cmpsb
pop
int
cmp
ret
sub
bound
ja
xchg
inc
ja
in
out
sbb
inc
mov
cmp
test
inc
cmp
xor
fwait
movsb
test
or
xchg
hlt
pop
lret
nop
mov
clc
andl
icebp
jo
or
aas
ds
push
mov
icebp
mov
faddl
cmp
icebp
fiadds
push
xchg
jnp
cwtl
xchg
call
push
jbe
arpl
loopne
pmulhuw
insl
inc
mov
das
pop
rcl
std
ljmp
mov
inc
lea
mov
jecxz
lret
xchg
arpl
jnp
les
xchg
push
loop
inc
mov
out
and
push
xchg
into
sub
loope
inc
mov
jne
sbb
add
mov
jno
loope
inc
aad
sub
mov
bound
jg
lods
sbb
aad
les
and
sub
shll
roll
rclb
mov
or
loope
das
xor
push
adc
pop
push
stos
aam
mov
inc
jae
xchg
mov
adc
add
imul
add
dec
lock
pop
push
jbe
aam
and
cmp
cmp
push
mov
aas
loope
aam
lock
dec
ds
dec
xor
pop
xor
cmc
jmp
cmp
aas
pop
sbbl
shrl
aam
inc
xchg
add
repnz
repnz
outsl
xor
andl
mov
cmp
or
pop
jecxz
shlb
add
movsb
or
gs
arpl
sub
fcmovne
roll
lret
push
xlat
inc
lods
xchg
fidivrs
dec
push
push
push
push
sbb
and
sbb
add
cli
jae
fwait
jmp
js
jecxz
jno
xchg
in
fidivl
rcrb
mov
sbb
pop
push
test
mov
inc
jmp
aad
lea
cmc
inc
adc
or
add
jmp
jmp
in
mov
xchg
js
jmp
mov
aaa
sbb
enter
mov
call
mov
xchg
into
xlat
xchg
in
fldt
adc
adc
jnp
adc
xchg
push
or
nop
in
lret
lods
cmp
mov
xor
cs
test
mov
sbb
icebp
mov
sub
je
push
sbb
loopne
bound
fwait
nop
outsb
jl
jge
jae
jne
jnp
xor
mov
mov
cmp
jae
add
test
popf
add
mov
sbb
pop
leave
test
jmp
jmp
test
fsubrp
in
jnp
sbb
mov
arpl
and
loopne
out
arpl
mov
jmp
hlt
rcrb
xor
adc
in
mov
xchg
test
jo
inc
xchg
push
sahf
aad
ja
or
xor
cs
jne
fnstenv
pop
mov
or
leave
adc
jno
test
js
addl
loope
mov
das
pop
sti
call
int
mov
dec
out
sbb
xor
test
aaa
pop
stos
popa
and
movsb
adc
cmp
in
in
cmp
call
push
mov
and
cmp
aad
dec
inc
mov
push
ljmp
test
nop
mov
adc
enter
sbb
popa
hlt
sarb
mov
loope
mov
mov
adc
insb
aas
dec
dec
cmp
in
or
xor
mov
imul
sub
jmp
dec
inc
nop
lret
shrb
fsubs
mov
lret
push
sub
push
xchg
out
and
inc
js
int
mov
dec
icebp
pusha
fld1
cmp
jbe
push
icebp
cwtl
inc
sbb
mov
vandps
and
jecxz
out
mov
je
nop
loope
dec
ror
popa
mov
fsubl
sub
cmpl
cli
pop
lret
jl
in
pop
jecxz
adc
lds
xor
sbb
jl
rcl
xchg
imul
push
ret
pop
push
jmp
loopne
cmp
xlat
pop
adcb
jo
rcl
mov
sub
jp
in
push
stc
mov
sahf
adc
dec
movsb
jae
in
inc
popl
stos
jl
pop
ja
push
pusha
cmp
or
shl
and
loopne
cmp
fs
ret
cmp
mov
mov
rclb
fstpt
mov
sub
repnz
daa
bound
pusha
mov
pop
sub
pop
mov
imul
pop
insl
pop
aam
cmp
and
ficoms
pop
and
or
push
dec
add
inc
cmpsb
push
ret
push
cwtl
imul
mov
movsb
cmp
xchg
mov
lods
push
inc
out
adc
int
cmpsl
mov
shlb
mov
imul
and
in
mov
pop
lods
and
sarl
sub
push
ror
dec
dec
sahf
push
cmp
push
movl
xchg
fdivs
lret
scas
sbb
mov
cli
or
gs
test
roll
ret
or
nop
ljmp
dec
dec
jbe
fdiv
jns
in
xchg
jno
add
sbb
sbb
push
mov
test
mov
adc
and
cmp
ficoml
push
inc
sbb
in
adc
jb
clc
xchg
test
pop
repnz
test
mov
pop
xor
jno
pushf
mov
mov
lods
sbb
jmp
int
test
enter
sahf
loop
mov
xor
iret
cmp
jle
jl
push
add
add
ja
in
cmc
pop
jns
add
pusha
fsts
push
punpckhbw
or
stos
fdivl
push
out
imul
push
mov
das
jmp
fwait
inc
fs
jo
fnstenv
dec
cmpb
adc
sbb
test
mov
shlb
or
mov
shl
addl
ljmp
jbe
add
jbe
insb
movsb
cmp
pop
cmp
cmc
xor
sbb
popa
xchg
dec
inc
sbb
jg
cmp
sarb
mov
movsl
fs
stos
inc
cmp
jmp
push
pop
jle,pn
xor
hlt
lds
mov
lea
push
jo
dec
xchg
int3
and
pop
or
lds
leave
adcb
xor
fiaddl
and
mov
mov
hlt
inc
mov
sub
xchg
add
pop
negl
or
push
call
inc
stos
sub
clc
pop
sub
aad
repz
or
dec
jbe
lods
push
sbb
mov
sub
lock
mov
dec
push
dec
pop
cmp
mov
repnz
ret
dec
fistpll
xlat
jo
arpl
sbb
ret
jb
jb
cmpsb
das
inc
mov
loope
test
jmp
xchg
stc
mov
mov
sbb
ds
pop
lret
inc
fwait
es
repnz
xor
stos
stos
je
imul
or
pop
inc
push
ret
es
jmp
pop
push
repz
pop
stos
aam
mov
dec
mov
cmp
mov
call
out
incl
test
fiadds
rcr
cwtl
or
cmp
aas
jle
ret
adc
push
cmc
fs
jno
clc
xor
mov
fildll
add
cmp
out
stos
mov
gs
xor
imul
stos
adc
add
cmc
sarb
subl
ja
call
outsb
ss
outsl
jo
loopne
mov
mov
adc
ja
cwtl
fistps
std
les
cmpb
popa
insb
cmpsl
lea
sub
mov
out
in
daa
call
pop
cmp
in
push
cli
enter
ja
pop
or
std
inc
int3
fs
pop
subb
mov
insb
out
jmp
jns
push
ljmp
insl
aas
jae
lea
idiv
pop
icebp
push
inc
pushf
lea
test
sbb
enter
hlt
pusha
loop
cmc
adc
out
jmp
jge
mov
jnp
xor
push
mov
pop
imul
mov
std
mov
mov
stc
mov
mov
mov
adc
imul
ljmp
push
or
jle
mov
aaa
pop
or
cmp
popl
sbb
lahf
dec
cmp
testb
add
aam
ljmp
xor
fimull
inc
pop
mov
and
clc
out
push
mov
or
addr16
cmp
loopne
add
mov
clc
cmp
and
inc
pushf
dec
pop
sbb
addr16
mov
test
jle
xor
or
inc
iret
xor
insb
sbb
orl
sub
cmc
pop
push
xchg
xor
mov
or
push
aaa
lcall
mov
adc
inc
addr16
add
test
imul
dec
popf
push
andl
pop
andb
pushf
aaa
fists
or
mov
mov
cld
pop
lea
push
lods
loope
fildl
push
xchg
inc
cmp
shlb
iret
ret
cmp
lods
mov
in
ror
nop
mov
sbb
pop
lock
pop
ss
push
sbb
cmp
aam
jl
add
cmpl
xchg
jnp
ja
movlps
inc
fsubl
stc
int
subb
cmp
xor
sub
xchg
inc
out
shrb
aam
sub
mov
add
sti
hlt
out
add
mov
fadd
mov
pop
rorb
sub
dec
dec
cmovb
or
je
leave
push
loope
fistps
pop
or
sbbl
scas
out
fcmovb
inc
jl
push
sbb
mov
dec
stos
push
add
jmp
or
mov
fsubrp
test
dec
jb
jb
push
inc
jge
jmp
xchg
pusha
adc
adc
push
add
and
xchg
push
decl
or
mov
test
imul
push
addr16
or
notl
pusha
daa
mov
or
jbe
mov
add
add
insb
ds
inc
test
xchg
mov
lea
pop
sub
xor
fs
xor
cmpsb
mov
ljmp
mov
mov
pop
popa
pop
cmpsb
jmp
cmp
mov
mov
dec
jno
jae
jno
cmp
adc
imul
xlat
movsb
nop
lahf
mov
xchg
repz
adc
das
testb
add
mov
scas
lahf
xchg
push
mov
pop
fldl
lods
push
inc
icebp
ds
shll
imul
sub
mov
pop
mov
icebp
movsb
cs
inc
fs
scas
clc
popa
sbb
xchg
sarl
sub
sbb
fstps
push
mov
mov
cltd
aas
fnstsw
inc
fildll
and
ja
out
ljmp
out
xor
xchg
int
inc
js
sub
lds
push
out
dec
leave
movsl
out
repz
aad
or
xchg
rorl
and
test
jb
cmc
aad
cmpsl
sub
fsubrl
cmp
test
lret
mov
add
inc
std
fs
mov
pop
and
mov
mov
inc
mov
mov
test
sti
or
les
mov
into
mov
mov
loopne
pop
xchg
add
ficoml
mov
rcll
xchg
pop
repz
and
sbb
std
aaa
xchg
xchg
inc
or
into
cmp
jmp
push
iret
in
mov
iret
movsl
lods
inc
cmpsl
jle
and
dec
lds
sub
cmp
xchg
sti
cmp
jecxz
std
push
icebp
or
push
sub
nop
jl
dec
pop
out
mov
inc
imul
or
movsl
lds
mov
inc
sahf
out
dec
in
inc
lea
mov
jl
lahf
aaa
mov
movsl
xor
inc
int
fimuls
into
and
cmp
cmpsb
std
sahf
rcrl
aaa
and
adc
pop
cmp
scas
sub
sbb
inc
push
xchg
je
mov
jbe
jo
mov
push
inc
testb
imul
testb
popa
ret
and
mov
and
jg
pop
lret
or
mov
xchg
dec
sbb
push
cmp
inc
popf
inc
cmp
fists
push
test
scas
in
pop
call
xchg
out
push
pushf
cmp
repnz
cmp
mov
adc
push
in
addr16
jg
dec
jnp
enter
add
jge
ljmp
mov
sti
cmp
cmpl
pushf
cwtl
ljmp
es
jno
adc
int3
aaa
sub
push
loop
mov
stc
gs
mov
pusha
into
cmp
push
pop
inc
loopne
xor
or
pop
add
push
add
sahf
movsl
loop
addl
mov
or
aas
inc
hlt
lock
out
xor
mov
addr16
and
lock
out
mov
sub
es
lcall
sbb
push
sub
mov
jo
daa
mov
add
mov
je
sbb
dec
movsl
inc
pop
cld
push
dec
dec
imul
jp
movsb
sub
dec
pop
jo
dec
mov
sbb
cmp
in
push
test
test
cmp
add
inc
test
push
clc
adc
dec
and
mov
jno
xchg
js
rcl
in
sbb
jo
dec
hlt
fs
jle
jge
lret
movsl
movsb
dec
pop
aad
xchg
clc
add
das
daa
andl
repnz
test
add
or
sbbl
and
pushf
cmp
mov
push
xor
sarl
shll
push
xchg
adc
or
ds
in
icebp
dec
cwtl
imul
inc
cmp
xchg
inc
xor
adc
inc
lea
push
mov
pop
or
out
and
gs
test
mov
and
pop
vmread
jbe
sti
mov
cs
call
popa
cmpsb
popf
aam
das
push
pop
sbb
das
movsb
pushl
or
ror
or
sarl
mov
xor
sub
andb
or
aad
xor
pop
push
imul
fisttps
movsb
pop
idiv
push
lcall
sti
sub
leave
jecxz
sbb
sbb
and
and
sbb
pop
adc
lods
js
cwtl
lahf
test
test
dec
mov
adc
fidivrs
jno
out
mov
or
hlt
inc
orb
sub
pusha
rorl
stc
inc
in
pop
mov
cwtl
sbb
xchg
push
nop
inc
push
xor
jns
fnstenv
lahf
and
fidivs
stos
icebp
in
push
sahf
cli
mov
stc
fnstenv
hlt
push
cmc
aaa
add
scas
sbb
dec
jecxz
int
shlb
cmp
adc
push
aad
sbb
daa
stos
in
je
sahf
and
xchg
cli
mov
enter
and
or
xor
aad
aad
insl
jb
test
mov
adc
lock
ds
in
adc
xchg
xor
pop
jle
into
fwait
ret
aam
cmp
sbb
mov
push
rorl
mov
jo
out
add
cmp
cmp
add
xchg
mov
lds
das
sbb
leave
add
jns
add
pop
jnp
push
and
inc
aas
test
in
jg
fcompl
iret
or
fidivs
push
fdivs
ja
insb
xor
lods
dec
inc
xchg
daa
mov
cmc
jmp
dec
cmpsl
insl
fsubs
xor
cld
mov
imul
inc
ljmp
movsl
loop
ja
sti
ljmp
int
or
repnz
enter
out
jbe
rol
mov
xchg
fists
popa
xchg
scas
sbb
inc
adc
push
adc
sti
push
add
aas
cmpl
pushf
jno
and
cmp
push
mov
popa
jge
cmp
cltd
ljmp
insb
add
mov
dec
pop
dec
ret
jne
dec
jecxz
add
dec
cmpsl
jge
pop
test
int3
and
xchg
arpl
push
into
xchg
jo
mov
pop
inc
mov
xchg
inc
ja
xor
loope
sbb
mov
adc
pop
cmp
add
test
jge
aad
add
jmp
ljmp
jb
fucomi
loope
out
inc
fwait
pop
cmc
out
ja
mov
sub
jg
in
cmp
arpl
or
jecxz
inc
inc
push
jg
mov
adc
jecxz
lea
cmp
fisttpl
fucom
and
jge
fisttps
or
cmpl
pop
xor
jmp
pop
jnp
inc
pusha
and
xlat
xor
aad
inc
sbb
test
insl
mov
sbb
insl
popf
ja
out
out
adc
or
lock
mov
push
mov
xchg
cmp
inc
and
dec
sub
jb
mov
outsb
ficoml
mov
xchg
loope
mov
xchg
ret
ljmp
insb
pushf
and
loope
int
dec
jle
pop
mov
push
test
push
jp
mov
aad
jge
fiaddl
xchg
pop
mov
pop
hlt
mov
aad
js
mov
mov
pop
sbb
xorl
sub
outsb
jb
mov
pop
dec
mov
xchg
ja
lods
inc
xchg
out
jo
sbb
mov
lea
mov
or
into
xlat
and
or
mov
hlt
and
cmp
push
push
sahf
push
dec
push
xchg
adc
mov
pop
popa
xor
mov
push
xor
pop
inc
jbe
or
es
mov
xchg
bound
push
std
ljmp
jnp
dec
dec
add
jae
xor
xchg
mov
es
cmp
orb
fldenv
xor
adcb
fdiv
ret
inc
insb
imul
jae
ja
rcrb
mov
imul
xchg
cmp
lret
mov
jmp
fstpt
xchg
nop
push
adc
sub
mov
outsl
xor
jne
mov
xor
pop
mov
mov
dec
xchg
aaa
xchg
fstps
jmp
cli
lods
mov
jl
lods
aaa
lods
andl
pop
cwtl
sbb
cwtl
insl
push
mov
sub
add
xchg
test
mov
sub
xchg
pop
cmc
in
aaa
or
mov
ljmp
mov
mov
sti
in
mov
mov
or
stc
sbb
mov
sub
or
xor
testl
xchg
mov
push
or
out
mov
scas
cmp
in
xor
xor
je
lret
lea
pushf
xlat
push
sub
inc
and
cmp
enter
sbb
mov
test
test
xchg
ss
aam
fcmovu
jb
mov
or
stos
test
inc
std
data16
out
and
xor
xor
imul
in
jo
sub
das
cmpsl
imul
js
shll
shll
sub
jb
pop
xchg
mov
lcall
lcall
ret
sbb
movsl
inc
push
outsl
lcall
fwait
outsl
sarl
pusha
dec
fdivrs
aaa
arpl
iret
or
push
fbld
ljmp
mov
push
mov
push
xlat
sbb
xor
xchg
cli
push
lods
pop
arpl
and
imul
inc
out
aas
cmp
dec
xchg
adc
fcompl
dec
cmc
leave
inc
or
shrl
push
push
call
push
xor
rcr
and
shl
add
test
fidivrs
inc
jne
sub
ret
mov
shl
call
out
rolb
and
loopne
inc
lds
xchg
push
call
mov
dec
push
lret
cmp
sti
loopne
xor
cmpsl
in
push
lcall
subb
jns
add
clc
subb
insb
sub
ds
pop
out
sti
push
addr16
lcall
sbb
xor
inc
and
adc
inc
mov
pushf
xor
loope
in
jle
ror
dec
pop
mov
data16
cmp
jae
mov
and
std
xor
sub
jmp
inc
push
ljmp
cmpl
adc
pop
call
and
cmp
mov
add
sbb
sbb
xchg
push
xlat
out
icebp
xchg
neg
sub
sbb
pop
je
lret
cld
dec
insb
popf
je
cmp
test
jmp
insb
add
inc
and
lods
mov
or
cmpl
mov
daa
xorb
and
insb
cmp
in
jns
es
insl
pushf
jle
push
adc
and
inc
pop
push
test
aam
leave
jno
or
cld
mov
push
mov
mov
lea
mov
mov
lods
pusha
dec
jmp
pop
cmc
movsb
jns
divl
in
enter
mov
lret
mov
lods
bound
mov
xor
hlt
inc
cmp
clc
xor
sbb
jo
xchg
mov
in
push
lock
icebp
jns
rorl
ds
mov
xchg
fisubl
pop
jle
lahf
adc
xlat
sar
jecxz
xchg
mov
stc
jecxz
icebp
fwait
pop
frstor
ret
jg
dec
inc
add
mov
std
inc
add
jp
or
or
xchg
adc
orb
cmp
add
cmp
sub
cli
hlt
mov
or
lods
pop
mov
stos
push
fdivr
jmp
pop
movl
adc
addr16
icebp
and
lahf
jle
jl
rcrl
inc
movsb
sar
xchg
sti
and
mov
xchg
cmp
jp
jns
or
fnstcw
mov
cmc
and
aas
mov
inc
sub
push
pusha
xor
into
push
sub
lret
push
or
gs
repnz
inc
or
xlat
push
add
xchg
rcl
popa
rolb
mov
jl
dec
pop
bound
and
repz
jle
jne
jg
mov
sti
clc
rcl
dec
addr16
test
fcompl
jb
push
int
sbb
adc
inc
cmp
jecxz
lds
and
inc
cs
push
cmpsl
xchg
jb
mov
xorl
incb
xor
adc
into
mov
adc
mov
xchg
sbb
xor
call
dec
jno
loop
pop
out
scas
clc
push
addr16
push
adc
inc
inc
sbb
ficomps
gs
jae
in
ljmp
jo
aas
outsl
dec
xor
cmpsb
mov
xor
sub
push
test
adc
pop
jnp
call
sub
xlat
lret
sub
and
es
mov
push
mov
bound
movsl
xor
mov
and
enter
cmp
xor
fbstp
adc
in
int
data16
and
sub
imul
mov
popa
cli
pop
out
mov
mov
ror
lret
push
insb
cld
cmp
out
fisubrl
das
insb
loope
test
mov
imul
sbb
add
or
push
mov
popf
adc
test
jo
test
fildll
jbe
xor
push
cs
mov
arpl
ret
xor
jge
jno
test
lahf
fisttpll
cmp
es
fadds
pop
cmp
sbb
xchg
movsb
jl
pop
into
mov
imul
xor
mov
faddp
inc
xor
cmp
mov
mov
xchg
inc
jl
cmpb
mov
xor
xor
sub
leave
outsl
xor
test
enter
mov
sbb
fists
xor
pop
dec
adc
or
add
push
mov
les
jbe
mov
cld
lock
shrl
arpl
test
ljmp
xor
push
add
mov
sbb
imul
iret
add
xchg
xchg
mov
ljmp
adc
in
lret
aaa
jmp
cld
out
or
imulb
mov
cmpsb
sub
je
outsb
inc
pushf
jmp
jg
xchg
push
mov
or
xchg
adc
lock
call
lret
inc
inc
cmp
test
pop
inc
or
lret
cmp
push
sbb
or
mov
cmp
xchg
mov
lods
mov
jmp
nop
lods
popa
mov
or
repnz
jae
adcb
inc
in
fs
leave
rep
lahf
lds
scas
lcall
loop
xor
mov
mov
call
adc
frstor
icebp
mov
xchg
xchg
fwait
ss
ficomps
mov
out
inc
bound
fcomps
push
cmp
cmpsl
xor
sbb
mov
mov
stos
sub
add
jle
fsubp
pusha
and
or
insl
popf
data16
lret
fstps
mov
int
xchg
aaa
dec
test
xchg
scas
jnp
js
sub
hlt
std
sbb
dec
popa
xchg
fcoms
popl
hlt
xor
mov
mov
cmpsb
mov
in
dec
adc
xchg
js
adc
mulb
lods
mov
jl
xor
test
movsb
cmp
fmuls
push
mov
repnz
pop
shll
mov
xchg
mov
ret
sbb
gs
mov
sub
arpl
push
jno
xchg
lahf
in
mov
dec
xchg
dec
sub
andb
xchg
sbb
adc
xor
mov
rcrb
adc
mov
mov
jo
dec
fadds
ret
imul
and
pop
out
and
or
mov
inc
cld
or
cltd
in
cs
mov
cmp
jmp
fsubr
jae
in
cmp
add
sub
testb
pop
aam
xor
adc
lcall
or
out
fldt
cmp
mov
int
int
or
cmpsl
sub
lods
hlt
out
stc
mov
or
fldcw
jno
pop
fists
dec
lret
mov
or
cmp
std
aam
jl
xor
pusha
mov
cltd
imul
jp
inc
xchg
aam
daa
add
jo
mov
pop
jne
cmp
jae
pop
pop
push
out
aaa
xchg
xchg
xor
mov
ftst
in
jo
cmp
sahf
in
inc
outsb
mov
into
mov
push
mov
inc
and
jno
push
push
dec
push
xchg
es
pop
daa
or
xchg
call
ds
sub
ja
jecxz
mov
mov
pop
iret
sub
fimuls
adc
or
jecxz
daa
and
pushf
imul
dec
shl
lods
mov
fists
fcomps
sbb
lock
es
mov
and
add
loopne
imul
ficoml
fstpt
rol
add
aad
pop
stos
je
push
cltd
push
pop
xchg
nop
dec
mov
shl
mov
stc
notl
mov
push
out
add
ds
hlt
jl
test
sti
and
sarl
fnstenv
divb
icebp
inc
lods
fnstcw
or
jl
repz
cmp
mov
nop
push
jns
lea
dec
ret
jo
mov
sub
xchg
push
addps
pushf
dec
popf
pop
mov
push
in
jnp
pop
xchg
mov
push
iret
in
clc
das
xchg
rorb
xor
repz
mov
sbb
or
pop
testl
popl
jg
pop
sbb
xor
andb
inc
psrad
lcall
pop
sub
enter
jmp
scas
fildll
lea
jae
mov
xchg
mov
nop
movsb
scas
xchg
adc
mov
enter
jns
out
sub
enter
fidivrs
push
and
push
decb
lds
sbb
sub
ds
loope
dec
test
clc
test
mov
pop
jecxz
daa
sub
adc
shrl
test
ss
or
xor
idivl
mov
push
outsl
fcoml
rsm
dec
bound
jo
pusha
dec
mov
mov
xor
mov
stc
ret
mov
push
jecxz,pn
xchg
xchg
sbb
sbb
fsubrs
repz
add
sub
and
xor
mov
cmp
cmp
pop
push
sub
add
imul
fadds
popa
xor
dec
push
push
lret
xchg
inc
js
ret
pop
or
in
imul
popf
out
or
rolb
add
and
subb
fldenv
sbb
js
ficomps
or
or
sbb
loope
mov
add
imul
lods
fisttpl
into
cmp
inc
imul
sbb
stc
sti
repnz
xchg
fldt
dec
pushf
andl
aad
mov
lods
push
mulb
out
adc
mov
push
mov
mov
loop
sub
out
adc
out
nop
push
and
scas
test
and
mov
inc
je
push
dec
cltd
lahf
mov
ret
iret
dec
gs
ja
xchg
adc
dec
pop
mov
call
jg
ror
iret
mulps
sahf
sbb
jl
cmc
adc
dec
in
cld
jae
out
or
mov
sbbl
fcomi
dec
cmp
fldcw
sbb
xchg
jg
add
decb
out
push
or
cwtl
cs
andl
xchg
mov
movsb
loope
sbb
mov
adc
jo
ss
adc
xrelease
add
bound
pushf
fiaddl
xchg
jle
xchg
mov
dec
lds
in
je
pmaxsw
aas
push
adc
mov
clc
dec
add
adc
movsl
popf
or
aam
sbb
icebp
mov
out
sub
ss
mov
jmp
cmp
sbb
adc
int3
inc
fildl
mov
mov
cmp
inc
in
aad
xchg
pop
mov
add
rorl
out
adc
jg,pn
mov
pusha
fs
das
mov
mov
push
add
mov
mov
mov
sbb
push
mov
fwait
out
cmp
cmp
pop
mov
adc
push
or
fldt
int3
sub
or
inc
inc
fistl
test
dec
push
push
adc
pushf
out
in
pop
jae
cmp
sub
adc
stos
adc
dec
ds
push
out
adc
out
cltd
sti
mov
xor
mov
ja
jne
leave
aas
in
in
xor
and
adc
movsb
inc
idivl
scas
push
aad
pop
inc
adc
push
aad
movsl
and
aas
mov
ljmp
fildl
call
mov
fwait
pop
mov
pop
adc
fs
cltd
xchg
or
stc
and
paddsw
adc
nop
dec
or
sub
pop
push
pop
leave
add
mov
mov
fs
push
sub
xchg
in
adc
lret
data16
rcrb
add
xchg
inc
lret
mov
jl
pop
cmpsl
ret
in
test
mov
dec
inc
bound
out
add
inc
gs
inc
pop
ret
and
insl
add
ror
cli
or
pop
or
jmp
int3
out
or
scas
into
leave
outsl
iret
jl
das
mulb
cmp
adc
inc
xchg
xchg
pop
scas
cld
jno
xchg
mov
fnstenv
or
sbb
imull
daa
cli
arpl
mov
stc
inc
call
and
adc
iret
add
iret
shlb
sti
scas
lcall
or
sub
push
sub
adc
mov
cmp
test
iret
outsb
jp
pop
inc
ja
rorb
jl
adc
fwait
adc
add
nop
clc
xchg
aam
cmpsl
dec
sub
jno
and
add
cmp
push
jne
cmpsb
mov
in
jg
ss
repz
out
jno
ljmp
pop
push
push
imul
fstl
adcb
cmpsb
mov
std
cmpsb
sub
mov
pop
in
add
dec
cmp
faddl
data16
aad
test
mov
popf
out
ret
mov
sbb
in
and
pop
push
insl
mov
or
jg
lea
daa
mov
mov
mov
pop
sbbb
mov
sub
fs
inc
adc
out
scas
aad
daa
xchg
mov
sbb
adc
jno
mov
or
mov
pop
cltd
or
call
lret
das
push
push
fwait
rcrb
push
xor
gs
jae
mov
mov
enter
jg
adc
adc
clc
or
imul
inc
xor
fisubrs
or
test
movsb
cmp
pop
add
push
push
roll
test
mov
shrb
jno
jns
negb
enter
daa
and
jae
inc
loope
xor
sbb
ret
dec
lock
ss
sub
sbb
out
fdiv
dec
pop
cmpsl
xchg
inc
je
mov
and
insb
cmp
adc
xchg
mov
popf
cwtl
xor
les
add
cmp
mov
je
bnd
and
xor
mov
pop
cwtl
dec
sub
mov
into
inc
outsl
mov
mov
lret
inc
popf
inc
loope
or
push
mov
cmp
cmp
rclb
pushf
movsb
test
mov
mov
les
jecxz
push
mov
xchg
int3
sbb
add
test
sub
adc
and
ret
pop
mov
and
sub
mov
nop
adc
pushf
sub
mov
or
adc
xchg
movq
mov
jg
lods
fisubs
aad
fdivl
or
dec
sub
xchg
jbe
mov
mov
aas
mov
push
repnz
test
xor
outsb
sahf
mov
rolb
add
jle
dec
imul
or
xchg
scas
fsubrs
pop
push
enter
push
push
in
imul
jnp
cmp
movsb
mov
ror
loop
jo
mov
dec
mov
out
jle
ljmp
rclb
inc
popf
sub
xchg
xchg
test
lock
ficoml
mov
mov
xlat
bswap
jecxz
pop
faddl
data16
arpl
or
ss
les
cmp
jecxz
jnp
insb
popf
or
push
fisubl
nop
mulb
jnp
cmpsb
arpl
push
fs
jno
incl
loopne
les
cmp
lret
or
xor
outsb
es
jle
js
push
add
push
mov
addr16
cs
aaa
xchg
mov
divb
adc
sbbb
setb
inc
stc
push
sub
mov
clc
rcll
dec
scas
hlt
je
add
push
sbbl
aas
int
aam
js
mov
mov
shrb
sbb
movsl
test
cmp
inc
pop
mov
test
ret
loope
call
mov
es
mov
or
cmp
data16
jp
sub
xor
test
into
add
lcall
pop
int3
imul
test
inc
cs
mov
mov
and
imul
inc
jbe
shrl
inc
xlat
vmread
and
dec
inc
ret
repnz
cltd
pop
fs
jl
push
dec
hlt
mov
adcb
mov
inc
sti
or
jl
mov
dec
mull
mov
mov
or
pop
xchg
cmp
push
inc
push
xor
dec
aad
mov
stos
sbb
cld
cmp
mov
cmovl
popf
inc
and
mov
sub
filds
and
pusha
xchg
pop
ret
adc
iret
mov
idiv
mov
std
and
cmp
push
add
mov
push
scas
prefetchw
mov
dec
push
cltd
outsl
dec
out
add
popa
mov
jae
bound
mov
dec
adc
sbb
imul
gs
mov
adc
sbb
in
sbb
jmp
xor
adc
sti
mov
dec
dec
cmp
pushf
mov
or
mov
or
fisubrl
inc
jns
jle
ret
sahf
outsl
push
xlat
popa
push
iret
js
inc
ret
dec
jecxz
inc
pop
inc
add
movsl
sub
mov
popa
dec
stos
cmpb
push
pusha
jne
push
shll
xchg
cmc
lret
xchg
inc
push
rcll
xchg
xor
add
fs
sahf
daa
xchg
mov
cmp
fs
jge
rolb
test
adc
adcb
fdivr
cmp
ljmp
mov
mov
lock
leave
movsb
pop
fwait
icebp
in
push
imul
mov
cmpsl
jnp
dec
pushf
or
sarl
xchg
shl
ret
lock
orps
xor
pop
mov
add
rcrl
popa
xor
or
mov
xor
add
and
adc
loope
into
xchg
fmull
mull
test
filds
incb
mov
cmp
mov
and
jmp
or
in
jb
mov
les
cmp
pop
xor
insb
dec
enter
sti
imul
inc
mov
pop
jge
mov
lret
jae
movsl
inc
and
push
shll
jl
push
leave
xor
mov
lret
cmp
iret
movsl
sbb
inc
adc
flds
outsl
xchg
jle
hlt
lahf
lods
jmp
cmp
jmp
or
inc
mov
scas
popl
mov
xor
sbb
pop
aas
sahf
jno
and
push
out
add
adc
mov
mov
push
leave
push
jno
push
neg
fldln2
mov
xchg
cwtl
and
xor
in
jne
or
notb
jle
outsl
jb
ljmp
mov
jmp
jmp
cmp
cmp
enter
repnz
xchg
mov
mov
xchg
adc
adc
ja
sub
inc
fldenv
xchg
or
jbe
add
sbb
sub
repnz
icebp
xchg
sub
movsl
or
sub
jge
fsubl
xchg
pop
lock
test
rorl
inc
in
push
in
pop
stos
cmp
adc
add
and
pop
dec
sub
mov
data16
out
inc
mov
push
inc
clc
notb
in
cmp
test
push
sub
mov
xchg
xchg
icebp
lret
and
daa
jne
std
add
hlt
push
jne
cmp
adc
stos
push
addb
test
cmp
mov
fdivl
test
xor
xor
call
jge
enter
adc
nop
lock
sub
dec
or
xchg
fsts
ds
mov
mov
rorb
or
test
call
into
popa
sbb
push
add
xor
mov
outsb
cmp
push
ja
dec
or
insl
stc
xchg
repz
or
stc
dec
sbb
push
iret
xchg
mov
jns
mov
fwait
and
in
mov
mov
outsl
inc
push
mov
push
fs
add
cwtl
adc
in
sbb
jl
andb
push
sub
jmp
add
lret
fdivp
clc
cltd
push
or
es
pop
popf
mov
fcmovb
ret
addr16
in
push
xor
push
push
in
cmpb
adc
mov
push
xor
bnd
clc
push
lahf
ds
push
push
rclb
and
out
xchg
sbb
mov
jns
inc
fucom
orl
lds
iret
mov
dec
rcr
jo
xor
dec
pop
rol
repz
inc
lret
sub
cmp
mov
push
jmp
dec
std
mov
push
jmp
cmp
mov
leave
add
jg
lods
dec
pusha
or
test
nop
mov
and
faddl
sbb
push
xchg
jge
xchg
adc
hlt
push
adc
mov
es
clc
jno
jae
xor
cmc
leave
cmp
mov
dec
repnz
in
mov
jecxz
dec
push
enter
in
xor
and
push
xchg
jnp
icebp
push
push
xlat
adc
cmp
xlat
ja
jp
sub
in
into
bound
insb
sub
mov
push
mov
nop
test
jne
sarb
sbb
loopne
aaa
or
int
cmp
pop
mov
sub
cmp
mov
imul
sbb
fsubp
nop
mov
ret
dec
lcall
fucomi
les
or
dec
cmpsl
jecxz
into
xlat
mov
gs
mov
xchg
sbb
insl
mov
mov
sub
jbe
out
ds
sub
or
inc
xchg
insb
shll
test
cwtl
lods
jb
jne
sbb
ret
test
out
jbe
std
sbb
lahf
sbb
sahf
push
mov
push
jne,pn
mov
test
lods
adc
push
mov
jbe
push
inc
testl
dec
stos
lret
mov
cmp
fiaddl
adc
shll
stos
loopne
jecxz
inc
fs
stos
sbb
aad
jp
dec
dec
rclb
add
add
in
es
fs
ljmp
xchg
ljmp
cmp
arpl
lahf
arpl
nop
mov
out
out
inc
xor
mov
inc
pop
mov
lcall
xchg
jb
decb
lret
das
fldl
imul
rcr
sub
gs
mov
jg
pop
out
pushf
mov
rorb
int
pop
aaa
sub
lods
add
xchg
xchg
cmp
std
call
inc
cmp
push
mov
dec
es
out
mov
jmp
lods
testb
sub
icebp
or
aam
int3
add
mov
fimuls
or
lds
push
out
jb
addr16
in
jb
jo
scas
xchg
cld
add
shr
scas
jno
fistpll
cmp
adc
std
int
rolb
daa
sub
mov
push
fs
or
or
add
inc
push
dec
xor
insb
stos
mov
loope
xchg
jecxz
addr16
cmp
mov
and
shlb
mov
faddl
bound
pop
mov
xchg
inc
mov
shrb
shrb
mov
pop
inc
in
xor
cmpsl
loopne
rcrl
rcll
pop
mov
add
inc
xchg
ljmp
call
aad
shll
in
ljmp
add
clc
mov
fwait
mov
fdivl
mov
in
push
out
movsl
lcall
arpl
int3
out
dec
and
nop
in
movsl
mov
testb
aad
jne
shl
gs
sti
push
dec
mov
test
adc
fnstcw
mov
mov
inc
sbb
into
test
sbb
inc
sbb
lock
sub
jae
inc
jbe
outsb
aas
jp
shlb
pop
mov
pop
mov
sbb
test
aad
or
popf
mov
xchg
rcrb
sahf
push
push
cmpsl
cmpsb
cwtl
out
test
out
arpl
loopne
popa
aam
in
test
sahf
std
jb
pop
xchg
mov
js
in
loop
dec
cmp
mov
xchg
aas
and
pushf
fcomip
sbb
sbb
lock
sbb
test
insl
add
dec
movsb
xchg
jge
gs
push
push
int3
pop
xchg
daa
imull
fcomps
push
xor
data16
movsl
mov
rcrl
jns
xor
pop
and
jl
and
sti
or
imul
ret
popa
ret
jbe
js
lock
cmp
jb
nop
out
cmc
imul
gs
add
xlat
mov
mov
ljmp
scas
push
pop
in
sub
and
mov
push
test
add
add
xor
stos
std
xor
in
outsl
lods
mov
insl
mov
gs
xchg
lds
or
push
icebp
add
push
jno
mov
or
jge
in
nop
clc
fwait
pop
in
push
jmp
mov
rolb
xchg
xchg
das
sahf
adc
lods
gs
test
sub
testl
pop
add
lretw
push
lcall
jbe
sub
sub
dec
roll
xor
lret
add
mov
mov
les
test
sub
mov
test
loopne
adc
stos
outsb
lock
push
lods
in
push
fwait
cmp
sub
adc
sub
inc
cmp
ss
inc
repnz
jbe
loop
jecxz
push
dec
test
aaa
ret
fldcw
jmp
and
cmp
addb
repnz
imul
dec
inc
xor
sbb
iret
cmp
outsb
fistpl
adc
leave
and
pop
fnsave
push
test
push
es
fs
xor
cmp
dec
mov
sbb
push
fucomip
out
mov
push
adc
adc
sahf
jg
xchg
cmp
add
push
inc
push
dec
sub
mov
pop
pop
add
dec
mov
mov
push
enter
lea
mov
dec
stos
insl
jge
dec
ds
loop
mov
sbb
xor
cltd
jle
inc
das
stos
mov
dec
stos
pop
dec
and
bound
inc
addr16
lods
xchg
cmp
lcall
adc
sbb
mov
xor
mov
push
jne
sbb
popa
test
inc
add
daa
stc
mov
ja
jle
stos
mov
call
push
stos
mov
adc
pop
add
leave
bound
push
xchg
add
fstpl
xchg
xchg
sub
adc
sti
les
and
add
es
pop
dec
jecxz
add
mov
xor
adc
mov
inc
enter
or
jp
outsl
cmpps
movsb
bts
shlb
sbb
aam
orb
loopne
push
inc
dec
sub
sbb
and
sub
and
iret
inc
clc
dec
aad
in
pop
clc
mov
imul
add
cmp
repnz
repnz
mov
out
pop
ret
sub
daa
jbe
nop
push
pop
jnp
mov
pop
subb
fisubl
add
mov
in
and
icebp
pop
cmp
fbld
aaa
push
imul
test
call
insl
sub
add
adc
xchg
push
or
mov
push
cli
shll
add
repnz
shr
inc
adcb
jg
xor
popf
mov
push
dec
sbb
mov
addr16
sub
and
lret
ljmp
test
out
pop
dec
cmc
inc
pop
pushf
fisubs
xor
cld
rorb
sbb
stos
in
mov
bound
mov
movsl
leave
outsl
lahf
xchg
out
pushf
call
repz
sub
inc
mov
push
jbe
mov
lea
adc
std
lret
je
fists
add
movsl
push
ds
pop
push
cmpsl
jns
decb
push
fidivrl
and
sub
mov
mov
mov
rcrb
push
push
pop
cmp
lret
fistpl
xchg
stos
adc
repz
aad
pop
aas
jg
mov
adc
or
enter
dec
mov
sbb
push
leave
mov
fidivrs
mov
add
sub
adc
pop
in
int3
outsb
dec
push
iret
fisubs
pop
mov
or
shrl
aaa
and
cmp
mov
jl
jg
mov
xchg
add
inc
push
jmp
cwtl
fnstenv
aad
pop
pusha
out
sti
ds
mov
add
mov
movsl
fsubrs
popf
cwtl
leave
mov
aas
lock
pop
lahf
lahf
add
mov
sbb
aam
inc
dec
lcall
fstps
dec
bound
jecxz
pushf
or
xchg
ja
push
mov
xor
aad
pusha
push
fldcw
imul
push
jle
mov
cmpsl
cld
cmp
cmp
sub
je
mov
mov
ret
xor
mov
mov
push
xchg
test
lcall
adc
pop
movsl
insl
add
mov
rolb
gs
xchg
sbb
test
dec
mov
loopne
xchg
add
mov
adc
sub
pop
mov
xor
ljmp
cmpsb
mov
mov
cmp
ja,pt
or
push
fs
es
pop
fwait
push
decb
lret
fxch
mov
imul
int3
dec
rcll
in
outsb
inc
mov
fldl
lea
or
psubusw
mov
rolb
or
jo
leave
xrelease
lret
mov
out
loop
inc
pop
add
jge
ljmp
stos
pop
pop
mov
pop
fdivrl
xchg
cmpsl
arpl
or
inc
sarl
dec
fst
push
pop
popa
addl
sahf
fsubr
jge
mov
add
popf
jno
push
aad
sub
lret
lret
cwtl
push
cmp
call
pop
mov
jecxz
js
testl
push
out
ds
jp
ss
test
sbb
out
in
mov
cmp
scas
loop
xchg
call
outsb
popf
xor
les
cmp
inc
cmp
pop
lods
bound
jns
int3
and
lahf
add
add
rorl
mov
retw
inc
imull
addr16
in
sbb
hlt
lahf
stos
mov
mov
nop
xor
push
jecxz
test
add
mov
adc
add
ret
sbb
jge
cltd
ds
jo
mov
and
cltd
pusha
xchg
stos
cmc
rolb
cltd
test
imul
fwait
negb
adc
rol
lcall
insl
pusha
xchg
into
xchg
in
sub
jge
mov
jl
mov
xchg
jb
fstl
push
or
mov
pushf
and
sbb
adc
dec
or
mov
push
inc
cmp
mov
cmp
out
fsubl
int
sub
dec
push
dec
mov
fwait
or
dec
scas
pop
addb
jg
and
push
add
mov
jle
inc
lahf
inc
jnp
pop
lahf
lahf
lea
insl
dec
pop
int3
or
xor
xor
mov
xchg
jge
sub
in
push
pop
dec
jbe
fwait
sbb
mov
push
scas
mov
mov
xchg
jbe
insb
fwait
in
stos
aas
xlat
icebp
int
hlt
jge
jp
jae
xchg
ljmp
jns
jne
fcoms
sub
add
jb
loope
insb
mov
sub
add
outsl
es
adcb
push
cmp
rcrb
sub
mov
mov
stc
cmp
jle
dec
sbb
dec
test
leave
push
xor
cmp
sub
dec
cld
loop
sti
cmp
cmp
outsl
bound
and
or
sarl
inc
or
xor
pushf
pop
iret
or
jno
mov
or
js
repnz
rolb
xor
mov
pushf
or
and
add
jp
adc
cmpsb
xor
loope
mov
and
xor
xchg
pop
mov
cmp
and
push
adc
sbb
sub
lock
lcall
push
adc
shlb
push
cmp
sbb
lods
push
aam
push
push
push
outsb
xchg
loop
aam
xchg
outsb
adc
inc
dec
inc
aaa
mov
ljmp
les
mov
aas
add
std
mov
push
adc
fstps
adc
inc
mov
sub
pop
in
sbb
jl
inc
jmp
aad
sahf
stc
fisttps
push
cs
cmpl
call
out
inc
push
stos
push
neg
shrb
xor
cmpsb
jp
xorb
xor
and
inc
jnp
shr
push
xor
lods
repz
ja
jo
mov
inc
nop
insl
repz
inc
leave
push
std
pop
outsb
mov
into
push
xchg
pop
mov
jp
ret
jne,pn
loope
push
xor
jb
ficoms
in
mov
jecxz
push
jns
out
mov
mov
iret
mov
std
sbb
cmp
add
sbb
pop
clc
sub
sub
jo
sub
rcrb
dec
fwait
sbb
sub
lods
notb
aad
xor
es
xor
xor
or
js
ret
pop
paddw
push
in
repnz
out
js
ret
out
pop
xchg
xchg
mov
xor
or
clc
iret
sub
pop
mov
in
inc
lcall
push
jmp
jb
ret
int
xchg
inc
sbb
loopne
andb
aad
aam
scas
and
jno
fcomps
ret
inc
in
mov
adc
loopne
push
cmpsb
lret
cmp
aas
and
sub
adc
and
sub
and
loop
cmp
cltd
or
xor
ret
xlat
inc
std
cmp
pop
and
mov
aaa
sub
test
cmp
dec
xlat
lds
and
fdivp
test
push
dec
mov
stos
scas
idivb
xchg
ljmp
push
aas
es
test
repnz
sub
insb
adc
popa
jmp
add
sarl
test
ljmp
jae
lcall
dec
adc
fdivr
sub
sbb
jmp
shll
das
lcall
ret
fisubl
cmp
adc
jnp
push
rolb
sub
test
mov
bound
lods
push
sahf
mov
in
inc
push
sub
push
rol
mov
or
imul
mov
sbb
test
fwait
inc
dec
mov
push
pop
daa
adc
jns
and
sarb
mov
fcompl
test
aam
andb
ja
and
hlt
stc
xlat
mov
in
inc
int3
mov
insb
xor
fsubrp
mov
outsl
mov
scas
cmp
rcl
mov
and
jge
lret
mov
iret
movaps
sahf
dec
push
cmp
fs
nop
loope
jmp
xchg
jg
aaa
popf
pop
scas
push
dec
mov
jg
xchg
icebp
cld
mov
mov
add
das
mov
outsb
mov
test
xchg
clc
imul
lods
xchg
mov
movsb
ret
iret
xorl
and
popw
les
inc
dec
or
ja
enter
xor
mov
cmp
inc
sbbl
or
iret
jp
test
push
or
jnp
jg
cwtl
pop
xchg
mov
mov
test
lcall
jnp
and
xorb
iret
xor
lds
in
popf
push
push
cltd
pop
mov
leave
xor
inc
add
sti
lock
mov
dec
xchg
pop
in
mov
inc
stos
daa
nop
hlt
mov
pop
adc
inc
xor
xchg
xchg
pop
add
jmp
addb
add
inc
jp
mov
adc
js
and
stos
mov
and
adc
test
xchg
aas
mov
stos
aam
sub
adc
hlt
pushl
pop
arpl
es
rorb
aad
shll
mov
xor
mov
call
mov
popf
cmp
scas
pop
xchg
les
cltd
ds
adc
insl
xor
push
test
jp
pop
sbbl
sbb
rolb
push
pushf
fbld
cmpsl
int
fsubrl
dec
aam
or
xor
test
imul
and
sbb
movsl
mov
push
sti
addb
xor
inc
stos
and
pushf
mov
jle
ret
scas
fnsave
lret
mov
dec
loope
gs
cmp
fldl
push
idiv
mov
pop
call
dec
sub
push
fisttpll
lds
xor
mov
pop
xchg
jle
data16
enter
push
repz
lods
and
mov
sahf
add
loopne
pusha
mov
push
imul
cmpsl
inc
in
adc
cmp
pop
mov
imul
add
outsl
or
stos
inc
movsl
insl
adc
out
mov
push
je
add
sbb
out
leave
jg
dec
cltd
dec
in
pop
data16
adc
jmp
or
pusha
xchg
es
mov
neg
inc
lods
mov
iret
xchg
pushf
loop
mov
cwtl
and
cmp
and
push
cmpsl
jge
xchg
jmp
popf
insl
push
sbb
and
lret
nop
sbb
int3
lock
cmpsl
loopne
push
mov
xor
mov
dec
jle
stc
scas
fs
ret
xor
aaa
sub
pop
inc
and
out
pop
inc
movsl
push
hlt
sbb
out
jge
inc
cmp
repnz
dec
jmp
cld
dec
cld
sub
enter
or
pusha
sbb
subb
andl
out
dec
fcomi
inc
lret
ret
insl
call
mov
jnp
sbb
cmp
mov
mov
add
sbbl
lret
imul
inc
pop
adc
inc
lret
push
mov
call
inc
jne
shll
mov
pop
xchg
jmp
adc
xchg
es
or
jno
adc
fwait
jnp
xchg
enter
dec
mov
fs
iret
mov
sbb
jb
or
inc
int3
outsb
jl
arpl
cmp
fidivs
cmpsl
jno
ret
iret
in
pushf
pop
adc
aas
cmp
pushf
and
subl
popa
xchg
jne
cmp
push
sbb
inc
mov
jns
ss
pop
add
cmp
imul
dec
mov
lds
mov
xchg
ljmp
enter
pop
in
mov
fsubs
jnp,pt
inc
int3
sarl
or
nopl
hlt
lods
cli
pusha
xor
xchg
push
in
push
or
and
aad
adc
mov
jg
lret
movl
jb
jns
jmp
stc
or
lcall
or
ljmp
loope
push
pop
xchg
dec
push
mov
mov
ja
and
mov
mov
jp
xorb
or
repz
out
xor
add
jl
adc
cmp
sub
xchg
std
xchg
pop
inc
xchg
movsb
xchg
es
out
cli
aad
mov
movl
lds
and
mov
mov
pop
and
xorb
icebp
inc
or
lret
adcl
popa
shlb
mov
mov
jae
jae
sahf
insb
test
jae
cmpsl
dec
adc
fisubrl
test
aam
sbb
add
fmuls
jb
iret
hlt
pop
in
lret
mov
stc
nop
xchg
sbb
lea
mov
fwait
inc
and
dec
push
stos
cmpsb
mov
call
and
push
jb
mov
xchg
repz
rcl
cmpl
cli
add
enter
cli
push
dec
add
mov
fwait
or
mov
jae
es
lcall
and
adc
mov
or
jbe
cmp
or
add
dec
mov
and
daa
aaa
sub
aam
nop
insl
das
test
inc
jno
shll
outsl
lcall
mov
xchg
pop
add
ret
pushf
in
cmc
ds
das
pop
int
hlt
in
add
int
inc
pop
jle
xlat
fnstenv
sub
jmp
test
cmp
dec
push
call
arpl
andl
fmul
xor
std
xchg
sbb
jne
sub
push
mov
stos
sti
dec
ljmp
jge
push
out
cmp
stc
sbb
and
jno,pt
xor
popa
jecxz
std
fadds
xchg
test
testb
or
jle
rorl
test
aas
dec
pop
add
cwtl
jg
mov
pop
ds
addl
cmc
hlt
fists
orb
jne
xor
mov
and
fstpt
lcall
adc
pop
xchg
ror
out
add
int3
cs
sahf
pop
nop
or
imul
or
sub
or
aas
fnsave
mov
cltd
jae
sbb
jae
mov
mulb
lret
and
adc
data16
pusha
int
push
mov
lods
sbb
jbe
jmp
sar
fistpl
cmp
xor
leave
jl
jb
repnz
iret
push
pop
movsb
loop
arpl
push
or
xchg
ljmp
or
aad
lock
loopne
pop
sbb
dec
pop
push
pop
sbb
stos
jle
insl
jl
in
mov
sub
mov
jmp
dec
mov
test
add
sbb
adc
in
fldenv
push
or
sub
testl
das
sub
sbb
rcrl
les
rcll
loope
mov
push
cmp
sarl
jns
insl
or
xor
mov
mov
mov
mov
addr16
dec
rorb
aas
jle
xchg
movl
add
scas
jl
push
cmp
imul
cmp
push
or
pop
ljmp
mov
sbb
jl
fildll
lds
iret
repz
xchg
loop
cmp
and
mov
dec
into
gs
xor
sti
dec
inc
lods
shrl
shrl
or
test
jno
repnz
fnstsw
sti
push
add
adc
or
ds
pop
les
subl
add
aad
push
faddl
add
loope
cmp
stc
fnsave
push
add
repnz
icebp
stos
xor
out
dec
nop
sbb
and
cmp
imul
or
jecxz
mov
mov
bound
adc
repz
xchg
movsb
adc
adc
repz
add
push
dec
jecxz
loope
out
into
data16
in
add
jnp
xchg
pop
clc
mov
adc
sub
loope
sub
lcall
adc
dec
test
data16
fistps
lods
lahf
daa
mov
add
dec
pop
push
cmp
fsqrt
out
push
sbb
retw
xor
aam
sub
pushf
push
dec
loopne
adc
xchg
int3
ret
inc
loopne
push
mov
cmp
popa
hlt
std
mov
sbb
lret
cmp
xor
mov
movsb
mov
hlt
pop
sbb
js
popf
rcrb
bound
add
outsb
inc
rorl
andb
inc
aam
inc
mov
xor
push
data16
jae
jbe
mov
pop
shll
or
push
daa
cmp
cmp
out
push
dec
cmpsl
imul
xor
push
and
pop
pop
mov
jg
arpl
faddp
ficompl
movl
mov
lcall
mov
add
fidivl
inc
adc
test
inc
cmpsl
or
cwtl
fsubp
pop
clc
or
or
add
jle
movsb
sub
adc
mov
cmpsb
lcall
rclb
nop
pop
inc
aam
sbb
test
mov
test
lods
pop
sbb
mulb
jp
pop
cmp
inc
xchg
adc
dec
lods
inc
sub
add
adc
push
pushf
and
flds
jo
lahf
xor
push
lahf
xchg
fucom
xchg
pop
imul
dec
inc
xchg
mov
out
in
jg
xchg
stos
mov
insl
fcmovu
pop
xchg
hlt
jmp
pop
inc
in
pop
loopne
fldt
repz
add
call
dec
into
cmp
add
mov
js
sbb
xor
lret
and
push
test
out
outsb
cmc
in
mov
mov
pop
or
int
mov
pop
pop
xchg
lret
ficoms
jp
scas
or
loopne
mov
mov
jg
iret
out
lret
push
out
sub
sahf
fildl
ficoml
nop
test
mov
add
add
aaa
cli
cmp
out
dec
add
outsb
out
mov
rcr
or
xor
in
or
leave
adcb
sbb
add
addr16
loopne
std
sbb
push
dec
jl
je
cmp
lret
add
push
push
cltd
or
push
pop
test
pop
sti
sub
dec
sub
push
mov
cmp
mov
xor
jle
jg
popf
xor
sub
sbb
mov
and
fcmovnb
rolb
dec
mov
add
sbb
sbb
jns
fisubs
lret
sbb
jg
roll
std
push
or
add
push
fs
push
and
test
fs
jbe
inc
test
es
fistl
fsubl
mov
pusha
xlat
cmc
cmp
mov
pop
lahf
dec
jle
fucomip
mov
rcrb
frstpm(287
std
sub
mov
cmp
out
and
mov
rcrl
cmpsb
pop
sub
push
bnd
pop
outsl
adc
cmpl
mov
bound
aaa
pusha
adc
sub
test
insl
push
repnz
jp
and
hlt
push
ds
sub
or
fsubrp
push
dec
popf
data16
mov
pop
jne
int3
stc
and
test
out
clc
fwait
add
mov
cmp
ret
loope
mov
mov
fwait
pop
pop
stos
fwait
test
cs
adc
adc
fidivrl
push
mov
and
push
in
pop
dec
xchg
insl
add
add
pop
push
inc
loop
cld
dec
add
jns
mov
jns
lret
jecxz
jg
jecxz
jmp
and
shll
jbe
outsl
xorl
push
pop
and
mov
sahf
jg
ss
dec
lds
cs
adc
loope
pop
js
pop
cmc
sbb
lods
mov
lret
xchg
sbb
and
sbb
mov
test
cmpsb
add
cmp
xchg
stos
lcall
adc
leave
cmp
xchg
imul
cld
imul
orb
jns
cwtl
dec
rcl
jb
cmpl
in
rolb
mov
loopne
xor
pop
mov
insb
pop
fisubs
sbb
pop
sub
mov
mov
push
cmpsl
jns
ss
scas
loopne
inc
loope
mov
leave
pop
jecxz
fidivrs
push
inc
lahf
pop
push
xor
das
insb
nop
or
pop
jmp
loope
dec
push
or
mov
inc
enter
mov
dec
scas
in
dec
std
ds
sti
sti
inc
cmp
lock
xchg
push
test
xor
cmc
push
push
mov
jl
pop
mov
fwait
mov
cmp
sbb
jb
jg
ds
push
sbb
test
inc
xchg
inc
clc
jnp
mov
sbb
mov
xchg
shrb
sub
insb
cli
sbb
aaa
cmp
outsb
and
jle
inc
sti
pop
aaa
aad
inc
les
stos
mov
xor
add
ja
jne
push
xchg
or
push
lahf
loope
dec
repnz
xchg
cltd
mov
outsb
inc
testl
jge
outsb
mov
cmp
icebp
mov
pop
out
aad
jle
pop
or
cmovo
mov
mov
cmp
dec
ds
and
xchg
cmp
ret
mov
mov
cmp
cmc
andl
aaa
int
cmp
in
adc
inc
xchg
mov
in
mov
and
movsl
xor
xchg
cmp
push
add
and
dec
fistpl
jne
pop
mov
jno
cltd
add
sahf
xchg
dec
lcall
scas
push
xchg
cmpsl
mov
call
jmp
mov
and
arpl
inc
arpl
shr
int
ljmp
bound
push
lods
dec
sub
mov
imul
cmp
adc
mov
jae
daa
loopne
jge
mov
mov
sbb
adc
xor
push
cmp
cmp
mov
or
sahf
insb
jg
jne
adc
inc
mov
cmp
call
shl
int3
mov
fbstp
les
and
cmp
lock
leave
lcall
mov
sbb
lds
ss
adc
or
in
int
movb
sbb
in
test
inc
xchg
notl
inc
mov
mov
data16
mov
jecxz
and
inc
add
xchg
ds
inc
aam
or
inc
or
adc
jo
js
pop
inc
data16
hlt
ljmp
das
out
push
pushl
js
inc
xchg
lods
adc
scas
jno
int
inc
push
mov
mov
mov
out
imul
fsts
ret
int3
aam
ret
adc
mov
push
and
out
or
xchg
sbb
mov
movsb
jg
mov
test
mov
cmc
or
ficomps
mov
cltd
dec
pushf
test
dec
je
fcomi
mov
addr16
arpl
pop
cs
cmp
out
aas
fadds
loope
je
lods
jae
sub
mov
sub
jg
push
pop
fiadds
or
movsb
and
lret
mov
stos
cmp
sbb
xchg
pop
jl
sbb
into
test
cmpl
sub
mov
inc
dec
out
je
jecxz
sub
pop
nop
xchg
std
lret
xchg
cltd
jp
jle
sub
push
scas
add
imul
ds
stc
fisubl
mov
add
sti
sub
sahf
sbb
js
repz
pop
rcrl
push
push
pop
cmp
pop
dec
mov
imull
pusha
or
cmp
adc
xor
sub
jge
mov
ja
movsb
jecxz
lret
adc
inc
mov
fstpl
dec
dec
xchg
xchg
sub
and
mov
pop
jecxz
ljmp
iret
xchg
mov
xchg
push
mov
pop
int
push
dec
in
repz
std
sbb
sub
xchg
cvtpi2ps
mov
lret
ficoml
mov
loope
sbb
orl
scas
sarl
xchg
aaa
xlat
clc
adc
xchg
call
cmp
and
imul
aam
and
repz
mov
sbb
push
insl
bound
cs
mov
inc
or
mov
cmp
add
sub
cmp
int
mov
lret
sarl
push
adc
jmp
repnz
or
ret
mov
and
inc
push
pop
or
cmp
ret
rcll
repz
inc
loope
repnz
fs
mov
pop
mov
iret
push
lods
sbb
shrb
or
movsl
jnp
int3
repnz
push
pop
mov
inc
pusha
hlt
mov
adc
adc
inc
xchg
test
jg
xchg
push
pop
push
mov
or
aad
mov
pop
inc
notb
cltd
int3
adc
repnz
out
mov
mov
pop
popf
inc
dec
ds
mov
sub
pop
xchg
jp
les
mov
pop
sbb
cmp
mov
cmp
aas
add
aam
into
repnz
and
xorb
sbb
popa
inc
out
lret
xor
insb
out
fcmovnb
dec
fcomps
or
int
outsl
or
mov
imul
and
dec
loope
dec
in
je
push
cmp
push
in
or
push
cmpl
sbb
int
adc
push
pushf
mov
test
arpl
or
jne
cmp
fldt
test
stc
mov
sahf
ds
sbb
pushf
cwtl
xor
int
add
xor
cli
insl
imul
arpl
lea
add
cmc
push
xor
scas
jns
sub
rorb
nop
cmpsb
jmp
andl
mov
cmp
ljmp
imul
hlt
push
cltd
in
cmp
cld
sub
mov
mov
sbb
pop
cwtl
add
xchg
adc
and
daa
mov
push
pop
movsb
sbb
std
mov
inc
hlt
pusha
lret
arpl
das
movsl
jnp
std
dec
fwait
lea
popl
jae
scas
je
sub
daa
add
fadds
ja
jge
xchg
lods
rcrl
loopne
fs
or
sarb
test
push
vpunpckhdq
dec
and
fstl
into
les
mov
cmp
cmp
in
out
mov
push
add
aad
std
mov
mov
mov
push
xor
pop
stos
inc
inc
pop
jae
aas
popa
inc
fcomps
add
jg
int
mov
pop
loopne
pop
test
mov
fdivs
push
ss
out
shrl
ja
cmpsl
lods
call
dec
jb
dec
call
adc
push
dec
cmpsb
jne
sbb
leave
jg
add
jnp
and
pop
cwtl
adc
cmp
sub
stos
lret
lcall
nop
incb
and
lahf
push
shll
in
jb
shlb
cmpsl
inc
push
cmc
xor
and
lret
jno
mov
pop
or
cltd
lcall
cmpb
cmpsb
push
ljmp
xor
arpl
mov
ret
sub
mov
repz
push
cmpb
add
std
clc
out
lcall
mulb
or
dec
fcmove
fs
sbb
mov
jne
add
cmpsb
dec
inc
ret
loopne
dec
enter
ljmp
mov
or
bound
dec
cmp
and
cli
and
pop
addr16
cld
inc
mov
repz
test
cmp
movsl
mov
xor
aam
xchg
cs
add
test
pop
pushf
sbb
paddw
xchg
pop
divl
ficompl
out
nop
jno
arpl
stc
jo
repz
inc
mov
into
jnp
cmp
sbb
adc
sbb
pusha
xchg
loopne
fistl
dec
jne
scas
das
push
movsl
mov
aas
std
sub
xchg
cmp
popa
lock
push
cmp
sub
lahf
jo
jmp
mov
or
sti
xor
dec
mov
enter
test
fcmovb
sub
add
cmp
rcll
jbe
sahf
pop
mov
fbstp
dec
popf
pushf
jecxz
int3
xorb
add
mov
push
pop
mov
data16
sbb
cmpsl
mov
cmp
loop
out
pushf
mov
pop
push
push
xlat
push
icebp
or
mov
sbb
cmp
jne
sbb
out
mov
mov
and
fdivr
imul
data16
hlt
inc
sahf
lock
push
and
dec
jno
daa
iret
and
stos
mov
push
dec
pop
ret
adc
jb
fistpl
pushf
jo
push
xlat
xchg
mov
shl
aas
fnstcw
out
test
fcmovnbe
push
mov
cmp
jp
sub
pusha
jmp
sub
sbb
lret
pop
gs
fwait
dec
mov
repnz
les
loop
pop
adc
push
xchg
inc
int
pusha
sbb
mov
push
sub
mov
jmp
nop
and
jno
inc
sahf
outsb
dec
xor
movsb
pop
mov
test
or
add
push
stc
test
insb
stos
add
aam
push
xor
mov
xor
mov
xor
jne
stos
mov
je
aam
test
aas
add
fisttpll
stos
xor
adc
lods
add
push
mov
int
pop
shrl
gs
adc
mov
aad
pop
js
in
jnp
mov
push
sti
jae
imul
lods
outsb
scas
add
add
ret
mov
in
and
mov
xchg
int
lds
add
into
sbb
jb
mov
clc
or
lahf
dec
pop
xlat
ror
mov
outsb
ss
gs
pop
mov
loopne
insb
and
pop
mov
sbb
push
push
push
cmp
jmp
call
sub
cmpsb
stos
fbstp
jmp
icebp
in
cmp
mov
mov
imulb
shll
pushf
xor
jg
fiaddl
and
inc
mov
add
out
mov
sub
test
xor
test
pop
loop
ret
lret
movb
inc
and
cmpsl
or
xlat
dec
rcl
fs
lcall
mov
sub
cwtl
cltd
jns
jg
mov
mov
xlat
fdivrs
pop
pop
iret
aad
dec
sarl
push
lock
xor
shr
cmp
push
popa
adc
push
rdpmc
out
pusha
cmp
add
inc
xchg
or
stos
shrb
mov
rorl
gs
aas
enter
lods
xchg
inc
into
mov
orl
movsb
sub
test
mov
cmp
adc
mov
cld
adc
cmp
jmp
negl
cmp
xchg
in
ja
jnp
jge
fistl
pop
push
jns
dec
sub
cmp
rol
adc
cmc
xchg
jne
enter
ret
cmpsl
mov
inc
lret
mov
add
ss
add
lock
mov
xor
fsts
xchg
dec
std
mov
jecxz
mov
pop
and
mov
sbbb
jg
or
xor
call
jp
push
imul
daa
inc
call
cwtl
adc
test
rorb
fistpl
repz
jp
pop
inc
hlt
or
repnz
mov
push
xchg
shrl
add
xchg
insl
incl
xchg
push
jno
out
es
lret
and
ret
lcall
lea
arpl
into
jmp
sub
movsb
cltd
stc
cli
push
rclb
cmp
push
mul
imull
std
xlat
test
int3
sahf
jle
dec
or
dec
shrb
adc
int3
push
cmp
orb
xor
lret
sbb
lds
jne
sbb
int
and
jl
insl
inc
inc
mov
lock
test
and
sub
lahf
cmpl
cmp
cld
test
mov
xlat
insb
mov
cs
inc
notl
xchg
cmc
lret
pop
arpl
movsl
mov
dec
sub
sahf
cmp
out
rorl
or
pop
mov
int
nop
or
pop
pusha
mov
test
or
stos
loop
cs
std
test
loope
pop
sub
mov
mov
loopne
and
cmp
push
mov
pop
sbb
cmp
sub
jb
fcmovne
inc
roll
sbb
andl
fimuls
add
enter
push
fs
dec
mov
aad
jg
cltd
nop
mov
test
push
sets
add
xchg
cmpsb
lcall
push
cmp
dec
jle
push
mov
inc
xchg
fnstenv
rclb
sbb
xchg
aam
pop
and
je
clc
mov
loop
and
insb
xchg
jl
stc
into
or
outsb
icebp
addb
in
shlb
jb
subl
cmp
mov
repz
xchg
dec
cmpsl
into
or
push
mov
xor
lret
push
das
icebp
mov
repnz
mov
in
shrl
out
jo
cmp
sbbb
out
incb
call
rolb
iret
mov
loopne
mov
fstps
sarl
mov
andl
mov
mov
mov
push
ja
out
sub
test
mov
in
arpl
lcall
and
cmp
aas
adc
add
mov
popf
shl
orl
lods
ret
lret
inc
lds
jecxz
ds
fs
mov
pop
or
repz
sbb
ret
lock
push
loopne
les
outsl
test
add
jns
mov
sbb
outsb
dec
insb
shlb
xchg
and
and
loopne
scas
popa
loope
std
call
xor
and
push
call
jge
fstl
mov
cltd
fsubp
sub
cld
adc
cmpsb
jo
xchg
dec
int3
xor
mov
xchg
dec
insl
or
xchg
pop
jmp
mov
jae
or
mov
mov
adc
test
les
dec
les
add
jb
adc
in
test
push
pushf
push
out
insb
jb
jnp
mov
mov
sbb
aaa
lds
inc
pop
incb
ja
pop
in
movsl
insb
jno
pop
sahf
or
push
push
shlb
sub
out
dec
mov
mov
cltd
hlt
shrb
in
push
popf
das
jge
add
xchg
fisttpll
jmp
lock
inc
mov
jns
lret
xchg
jne
aaa
cmpsb
rorb
xor
jne
xchg
call
pop
leave
in
pop
jne
icebp
pop
dec
in
add
xor
sub
fimull
shrl
jmp
push
repnz
fistps
jmp
mov
out
pop
movsb
cmpsl
jmp
adc
push
iret
sbb
gs
out
pop
xchg
int3
sbb
fwait
aas
lds
test
sti
xchg
mov
adc
int
add
pop
inc
mov
aad
aas
xor
loop
mov
mov
cmp
insb
sbb
jg
loop
lret
aas
mov
xor
bound
test
cmpl
adc
pop
roll
push
pop
in
mov
mov
aam
sti
mov
outsb
mov
cmc
and
test
lret
or
xchg
sbb
in
mov
sub
pop
aas
pop
pop
inc
gs
jmp
and
pop
pusha
iret
or
outsl
data16
or
pop
pop
sub
adc
mov
adc
jo
out
mov
mov
push
test
inc
addr16
dec
nop
xchg
xchg
pop
rdmsr
lods
jl
push
xchg
push
je
mov
es
mov
out
addr16
mov
out
or
les
les
and
pop
inc
or
mov
in
aas
xorb
mov
jge
sahf
sub
mov
mov
pushf
cmp
pushf
mov
xchg
rol
xchg
daa
jnp
in
imul
xchg
mov
pusha
addr16
pop
xor
mov
pop
inc
jmp
jns
xchg
xchg
mov
fisubs
pop
push
cmp
sbb
jbe
sarb
push
adc
cmc
mov
es
ret
scas
and
sub
push
ficoms
shll
jb
cmpsb
cs
sub
mov
fldt
out
movsb
pop
inc
pop
mov
leave
mov
inc
add
in
mov
in
inc
mov
rol
sti
fsub
ror
orl
cli
das
lahf
xor
movsb
pop
in
lods
fstpt
xor
mov
movsl
subb
ret
imul
inc
vmwrite
cmpsl
jbe
es
mov
enter
mov
sti
xor
lahf
fadds
inc
jns
in
jecxz
in
cmp
bound
out
xor
push
push
pusha
pop
inc
test
or
push
push
call
out
xchg
bnd
das
xchg
adc
imul
mov
xchg
push
ds
sub
xchg
xchg
pop
gs
dec
aam
xor
xchg
mov
push
add
mov
jmp
es
jne
rolb
xor
mov
mov
mov
movsl
popf
sbb
sub
mov
cld
pop
lock
pushf
aaa
call
mov
mov
xor
mov
pop
sbb
adc
sub
mov
add
ljmp
cmp
xchg
cwtl
popa
jl
scas
test
jle
lods
add
addr16
imul
das
pop
mov
mov
outsl
push
popa
sarl
in
jnp
jnp
insl
adc
jne
jecxz
ja
aaa
inc
inc
clc
push
xor
xchg
sub
in
inc
mov
cwtl
pusha
repz
mov
mov
pop
sarb
mov
in
int
in
arpl
jo
sarb
push
mov
jg
scas
sub
jle
xor
add
outsb
lret
fwait
lahf
dec
in
pop
divb
dec
lock
aas
in
lds
pop
sbb
or
mov
clc
dec
jb
ljmp
jp
xchg
inc
leave
sub
and
lret
cmp
jo
fsubl
rdmsr
iret
inc
jns
pop
repnz
aam
inc
scas
mov
pop
xchg
sub
imul
iret
push
adc
mov
mov
les
adcb
mov
mov
mov
xchg
nop
mov
stc
jg
movsl
stc
xor
lret
lds
sahf
cs
mov
and
adc
push
testb
ret
xchg
lods
sarl
xchg
pushf
sbb
test
dec
mov
xor
or
cmp
adc
xor
xor
ja
sbb
push
sub
adc
fstl
cs
add
insb
mov
in
mov
adc
inc
in
stc
imul
cmp
sbb
or
dec
pushf
pop
bnd
bound
push
jno
repnz
lret
lods
imul
mov
xchg
pop
cmc
push
dec
mov
ljmp
insl
fs
mov
lret
imul
dec
sub
mov
mov
or
mov
nop
lea
xchg
and
fstps
and
std
mov
adc
jbe
add
push
mov
dec
xchg
outsl
dec
xor
fstl
hlt
popf
out
das
aad
pop
push
inc
popf
mov
shl
mov
dec
dec
sarl
lock
das
sbbb
jmp
repnz
jno
and
xchg
jge
ret
sbb
out
lcall
mov
and
fs
push
sbbb
cmc
aaa
adc
fadd
inc
sti
jl
xorl
cwtl
mov
jecxz
or
or
push
sub
imul
mov
ret
xchg
ficoms
addb
push
lret
cmc
test
mov
fwait
adc
decb
scas
ljmp
out
cmpsb
rorl
adc
in
sub
xlat
push
les
pop
orb
jecxz
popa
inc
pop
cmc
movsb
push
daa
sbb
out
push
sub
mov
sub
mov
jnp
push
dec
insb
jecxz
push
into
ja
es
fldcw
inc
call
adc
mov
sbb
xchg
and
clc
outsb
sbb
inc
mov
shr
sbb
in
xchg
or
in
add
test
in
sbb
movsb
test
outsl
scas
adc
add
pop
shl
aad
adc
add
int3
sub
pop
jecxz
mov
adc
jnp
xor
je
pop
repnz
and
sti
dec
cltd
or
push
xor
lahf
sahf
mov
loopne
insl
mov
shll
incb
shrl
movsl
mov
daa
push
pusha
fwait
imul
imull
shll
cmp
xchg
jne
mov
lods
xchg
push
mov
sbb
mov
das
in
mov
push
enter
stos
adcb
add
inc
or
jb
cld
aam
into
xor
fildll
mov
xor
shr
cmpsb
mov
jg
fistpl
mov
lock
cmpsl
insb
adc
lahf
xchg
es
int
push
cltd
test
je
push
push
push
repnz
call
sahf
addb
pop
sbb
mov
push
push
scas
movsl
add
ret
popa
lahf
cmpsb
insb
cmp
jbe
ret
adc
or
insb
xchg
push
cmpsl
inc
inc
xchg
xor
call
jb
outsb
and
or
add
sti
add
jns
ds
stc
jp
ss
cltd
shrb
pop
in
lahf
mov
js
or
cmp
test
stc
ja
in
cmpsb
fcoms
neg
sbb
cmp
hlt
and
out
mov
outsb
mov
jmp
pop
push
sub
add
pusha
jne
adc
cmp
inc
xor
sbb
stc
mov
ljmp
fcoml
mov
movsl
add
call
or
mov
cmpsb
push
in
cmp
fisubs
adc
push
insl
shlb
cwtl
dec
dec
xor
out
or
jnp
and
and
sti
cmp
push
test
mov
pop
add
push
jmp
dec
xchg
push
pop
mull
adc
mov
push
adc
mov
xchg
dec
cmpsl
outsl
nop
and
out
gs
cmp
jb
jmp
mov
cwtl
bound
xorb
inc
xor
cmp
inc
mov
adc
cmpsl
stc
stc
shll
pop
cld
stos
sub
pop
jne
sarl
rorl
xchg
lahf
or
out
xadd
js
in
imul
or
loopne
jo
int3
enter
fimuls
lea
xor
jo
nop
xchg
sub
shrb
mov
lcall
lea
jle
or
fs
insl
and
cltd
mov
stc
push
roll
push
adc
sub
xchg
cmp
push
and
fistl
icebp
fsubl
lock
mov
lahf
lods
mov
mov
push
push
xlat
or
inc
sti
adc
pop
in
arpl
dec
jp
xor
into
hlt
mov
scas
dec
faddl
cmp
add
mov
mov
ja
or
push
stos
jbe
rcrb
gs
das
ljmp
and
pop
sbb
imul
into
das
jp
push
or
and
push
cmp
xchg
movsl
das
fnstcw
inc
jp
push
sbb
add
scas
pop
pop
jge
pop
fildl
cmp
inc
inc
inc
rorb
mov
sahf
out
push
movsl
xchg
ss
xchg
jne
pop
cld
shll
sti
xchg
lret
icebp
push
je
and
aam
cld
mov
aas
ficompl
sbb
cvtps2pi
dec
das
sbb
cmp
xorb
dec
test
mov
mov
lods
lret
mov
stos
sub
stos
test
test
lcall
and
mull
push
mov
lret
and
jno
sbb
jmp
lods
sbbb
fdivl
shll
mov
imul
push
push
mov
lods
les
xchg
cmp
lods
nop
repnz
xchg
and
mov
test
loop
jns
jp
sbb
in
sub
idivl
leave
in
lock
imulb
sub
lret
pop
fnsave
out
push
pop
mov
pusha
jl
inc
into
lret
cmp
dec
movsb
adcl
xchg
das
mov
inc
adc
test
mov
adc
sub
sub
mov
dec
divl
sbb
inc
cmp
jo
cmp
sub
cmp
loop
in
ja
cmp
push
dec
add
fbld
xor
sbbl
jp
mov
push
fs
int
sbb
fstpl
sahf
adc
cmp
loopne
inc
or
mov
subl
jno
cs
mov
lret
aaa
es
mov
jge
inc
adc
adc
loopne
mov
pop
ret
bound
icebp
fnstenv
pop
jno
inc
inc
scas
pop
cwtl
int
xchg
loope
sti
mov
sbb
xor
les
sbb
adc
insb
ja
ret
aaa
imul
popa
mov
pop
dec
jae
stc
add
jnp
in
nop
cld
adc
jb
cltd
xchg
pop
sbb
mov
dec
push
outsb
jp
into
ret
push
jp,pt
lret
pop
mov
xor
movsl
cmc
jg
jmp
mov
and
jp
ja
ja
pop
push
cmp
je
ror
cs
xor
mov
xchg
ljmp
lea
and
inc
jecxz
xor
jge
stos
loope
popa
pop
js
pop
iret
pop
pop
sbb
adc
xor
sahf
mov
push
enter
jl
les
push
cli
mov
mov
mov
fwait
dec
add
in
and
mov
or
sbbl
pop
cmc
dec
aas
jmp
negl
js
cmp
nop
sahf
imul
loope
ljmp
mov
mov
push
ja
fwait
leave
out
nop
and
inc
data16
into
jmp
sbb
stos
sbb
js
cmpsb
mov
ljmp
push
pop
xor
cmc
pop
ss
ss
xchg
repnz
inc
jmp
insb
pop
dec
hlt
dec
pop
pop
movsl
test
pop
adc
fistpll
arpl
aas
lret
sbb
adc
cmpsl
test
mov
lds
xorl
loope
aam
hlt
fildll
pop
sbb
rcrl
pusha
cli
xchg
out
cltd
out
repz
sbb
fcoms
mov
mov
jge
ss
xor
popf
jecxz
pushf
ljmp
shlb
sarb
adc
jb
call
jle
leave
loope
pop
sub
aam
cmp
cmp
dec
shlb
push
xor
testl
sbb
js
dec
test
ss
cltd
push
jmp
loope
fisubl
xchg
jmp
cmp
and
test
add
stos
int3
ret
dec
movsb
stc
shr
jl
pop
scas
aad
mov
mov
jae
mov
adc
test
outsb
lds
add
mov
push
sbb
jne
in
clc
inc
sub
jecxz
or
sbb
adc
xor
xchg
adc
aam
cltd
adc
bound
cli
fs
push
and
lgs
mov
push
dec
shl
daa
sub
test
adc
pop
int
popa
xadd
dec
mov
int3
stos
jmp
shrl
sbb
inc
fcompl
sub
mov
das
push
cwtl
dec
mov
cmpsb
mov
sbb
jae
data16
aas
and
repz
cmp
pop
ds
sbb
fnstcw
ds
aad
daa
pop
pop
push
pop
xor
mov
lods
lret
leave
shr
jecxz
iret
ljmp
jno
shlb
aaa
push
sar
cmp
out
iret
dec
jbe
insl
xchg
mov
addr16
out
cs
fcomps
out
mov
xor
push
shlb
scas
mov
rorl
mov
inc
lods
insb
mov
popa
inc
pop
aam
mov
adc
arpl
mov
fcmovb
lods
xchg
je
mov
mov
xchg
dec
sbb
aas
subb
cmp
pusha
cmpsb
mov
jo
fwait
mov
jo
scas
loop
imul
and
jg
in
or
sub
dec
jl
jbe
or
lods
cmp
daa
xchg
loopne
xchg
sbb
stos
inc
stos
ja
out
mov
out
inc
or
add
fnop
xor
dec
loop
out
adc
scas
std
add
xchg
repnz
mov
xchg
mov
and
pop
icebp
sub
and
outsb
dec
pop
inc
push
mov
push
repnz
mov
mov
popf
fsubrs
sub
xor
jo
cmp
neg
mov
jnp
lds
pop
fisubrl
mov
mov
inc
or
lcall
adc
mov
xchg
sub
jle
iret
mov
pop
out
pop
movsb
adc
xchg
xchg
push
fnsave
movsl
rcll
mov
add
pop
mov
xlat
sbb
and
dec
imul
jns
test
jae
push
adc
push
bound
adc
out
or
pop
fimuls
or
ss
mov
mov
rcr
outsb
dec
ret
xor
stos
aad
xor
call
xor
dec
lcall
xor
or
or
daa
cmp
dec
xchg
sti
sbb
push
adc
movsl
aaa
jge
dec
pop
sub
fs
push
out
jge
xor
cmpsl
mov
inc
jp
push
daa
push
jg
cli
mov
push
stos
jmp
jge
call
sbb
outsb
jp
pop
ja
mov
mov
xorl
inc
inc
popa
pop
out
adc
and
pop
loopne
pop
sbb
movsl
sahf
jge
mov
les
push
in
and
dec
xchg
xor
hlt
adc
enter
hlt
int
inc
cltd
jbe
dec
or
cli
mov
in
bound
lods
xchg
int3
bnd
in
or
mov
mov
jae
xor
cmpsl
add
jp
mov
mov
xchg
pop
xchg
adc
adc
jp
ja
inc
mov
and
dec
mov
addl
push
or
ds
push
imulb
or
dec
push
xchg
les
cmp
mov
and
pusha
lods
fistps
std
mov
outsb
pop
cwtl
adc
jae
adc
xor
dec
mov
xor
repnz
dec
jnp
jno
scas
fcmovne
push
sbb
cmp
mov
push
cmp
cmp
lock
and
je
les
xor
ror
outsb
das
and
sbb
mov
mov
or
jecxz
bound
xor
pop
clc
or
das
mov
push
sub
outsb
mov
sub
xor
fsubs
cmpsl
xchg
inc
fs
mov
mov
cli
push
shlb
xchg
addr16
mov
sbb
nop
xchg
mov
outsb
or
adc
fsts
lret
jp
push
pop
jne
lods
je
out
or
call
movsb
insb
loope
push
and
fs
push
dec
mov
into
gs
mov
inc
sbb
outsl
fstl
aas
orl
add
or
movsb
inc
mov
or
xchg
mov
push
pusha
fwait
and
cwtl
push
out
fcmovnb
imul
dec
jns
aas
xchg
das
push
test
sbb
shll
test
sti
jbe
mov
xchg
rcll
fwait
push
leave
ljmp
and
jmp
push
dec
int3
out
arpl
mov
ss
cld
dec
mov
mov
mov
shll
push
mov
or
imul
push
sub
pop
push
les
cwtl
scas
pusha
lods
xchg
test
push
cmpxchg8b
leave
push
push
adc
xlat
cwtl
leave
fwait
inc
popa
xchg
jle
or
jl
shll
xor
sbb
rol
fxch
pop
fwait
sarb
imul
add
lcall
xor
fldenv
movsb
pushf
mov
repnz
sbb
push
jns
push
push
lods
dec
mov
mov
shrb
or
addr16
cwtl
dec
add
jnp
je
dec
pop
jne
enter
mov
incl
bound
ljmp
test
push
inc
xchg
mov
sub
cmpsl
pop
mov
and
hlt
mov
jl
jp
or
sbb
insb
mov
out
jne
mov
in
cmpl
pop
pop
xchg
inc
xlat
mov
push
testb
scas
adc
rolb
sbb
aad
hlt
in
mov
fildl
xchg
cmp
rcl
leave
out
xchg
mov
in
jecxz
out
jmp
jne
dec
gs
mov
dec
xchg
sub
mov
out
sbb
mov
icebp
out
mov
inc
iret
inc
aas
fstl
inc
cmc
inc
push
std
cli
mulb
mov
cmpl
sti
movsb
je
sub
lock
test
int
and
pusha
test
jbe
popa
in
adc
loop
or
cmp
sarb
pop
adc
cmpsb
xchg
jl
stos
fucom
fadds
adc
inc
add
scas
ret
mov
jp
xchg
lock
fcomps
xor
out
lret
mov
jno
adc
adc
cltd
sbb
pop
push
push
cs
insl
mov
push
ja
mull
inc
int
xor
jp
sbb
ljmp
pushf
xchg
icebp
pop
mov
fistl
or
cmp
dec
jns
bound
shrb
rcrb
xor
add
dec
lds
ret
mov
sbb
mov
mov
mov
or
adc
out
loopne
mov
jae
mov
push
push
push
xchg
mov
mov
sub
ljmp
inc
stc
fisttps
bsf
cmc
dec
mov
into
insb
es
lcall
test
in
xlat
sbb
jne
sahf
testl
xor
mov
dec
xor
pop
jl
movsb
or
popf
push
add
inc
into
pop
add
into
sub
xor
ja
in
mov
or
ds
movsl
mov
inc
inc
lds
sbb
sub
jg
push
ficomps
jns
nop
sbb
hlt
test
dec
mov
es
xchg
push
dec
imul
pop
adc
inc
mov
mov
mov
aas
loopne
lret
mov
dec
gs
dec
mov
xchg
adc
sbb
and
mov
jp
test
cs
test
ret
mov
imul
jae
int3
mov
imul
ds
lea
das
xchg
dec
fidivrl
mov
pop
test
add
dec
jmp
cwtl
aaa
inc
cmp
icebp
lods
push
mov
cmp
push
xor
out
call
je
mov
sub
mov
jb
cmp
shl
sub
cld
ds
scas
push
mov
aad
mov
mov
mov
or
jns
push
mov
iret
sbb
mov
cmp
outsl
sti
and
sbb
jmp
xorl
hlt
sbb
pop
out
stc
cmp
mov
insb
mov
fmul
add
movsb
outsl
mov
inc
js
lret
ss
fs
pop
aam
outsl
jge
stos
scas
mov
js
push
popa
mov
loopne
cmp
xlat
ja
cmp
lret
pusha
ss
js
mov
popf
pop
lahf
in
fwait
popf
inc
dec
outsl
jbe
push
sti
push
jns
mov
xor
jbe
ret
xchg
xor
or
and
xchg
jns
dec
mov
fimull
dec
and
add
jns
iret
cs
outsb
daa
mov
sub
seta
add
lea
movsl
mov
xchg
or
xorb
stc
mov
inc
scas
jl
dec
repz
cltd
mov
movsl
jl
and
ss
outsl
or
addb
cvtps2pi
lods
scas
fisubs
scas
dec
out
jecxz
mov
mov
loopne
add
mov
sbb
push
mov
jge
mov
leave
jge
inc
sub
popa
push
inc
lret
popa
pop
lcall
adc
fidivl
loop
in
sbb
cli
iret
outsl
leavew
lds
aam
fisttpl
push
insb
mov
push
add
pop
add
scas
addr16
into
ljmp
mov
sbb
lods
pop
push
mov
xor
inc
jl
popf
mov
loop
test
popa
cmpsl
imul
hlt
jmp
pop
inc
mov
loope
cmpl
add
sbb
add
aas
ret
insl
dec
or
adc
std
pop
push
les
sub
fs
mov
je
pop
and
fisttpl
cmpsl
pop
jns
sbb
fucomi
fsts
hlt
dec
insb
inc
cmpsb
xchg
jmp
in
fs
fidivs
xlat
enter
jle
dec
mov
mov
push
hlt
mov
add
or
pop
fs
pop
js
sbb
add
sbb
mov
jb
ja
stc
stc
add
xchg
xchg
adc
pop
fidivrs
add
aad
shll
pop
mov
jns
popa
dec
jle
aad
jge
add
outsb
iret
rcr
push
jmp
mov
into
adc
mov
mov
imul
push
inc
lea
sub
pop
push
xor
xor
and
and
adc
add
and
or
outsl
ret
cmp
adc
leave
lahf
sub
xlat
cli
into
xchg
lock
call
mov
pop
xor
adc
enter
dec
xor
movsb
and
or
jns
shlb
mov
add
hlt
das
scas
adc
test
add
push
inc
or
cmp
stos
fwait
arpl
mov
mov
mov
jle
pop
push
xchg
rcl
sbb
mov
cld
adc
xor
xor
push
mov
shll
adc
movl
cmp
lea
pop
fnstsw
lods
push
or
gs
push
shrb
cwtl
repz
mov
push
insl
jmp
adc
jb
fistl
insl
xchg
icebp
mov
push
jl
xchg
sti
outsl
stos
xchg
enter
jno
dec
fs
inc
xor
lock
sbb
shlb
pop
jne
enter
notb
inc
mov
push
xor
pop
test
jp
dec
dec
bound
mov
pop
or
test
jmp
mov
sub
add
rorl
xchg
enter
out
sub
pop
call
xor
sbb
into
fcomps
jae
xchg
adc
inc
mov
stos
clc
dec
scas
xor
lock
or
add
push
lcall
sbb
jo
adc
xchg
flds
int3
data16
xchg
push
fdivrp
loopne
cld
cmp
pop
je
andb
in
jl
sub
add
xchg
jae
push
addr16
ljmp
arpl
pushaw
add
cltd
sbb
in
dec
notl
test
stc
fimuls
arpl
iret
das
mov
daa
cmp
mov
push
fstpl
roll
fs
pusha
mov
mov
fnstsw
sub
icebp
push
imul
loop
push
xor
loop
pop
shl
xchg
pop
lods
shll
in
popf
xorl
and
cmpsb
mov
insb
repnz
js
into
push
outsb
xor
jns
mov
lock
xchg
cmpsb
popf
adc
adc
lea
fstps
jne
inc
imul
iret
pop
inc
aad
repnz
mov
fmuls
pop
cmpb
fisttpl
movsb
mov
xchg
pop
pop
jb
jmp
mov
and
insl
push
jle
xchg
aas
nop
add
aas
xor
pusha
push
std
or
cmc
ds
mov
xchg
daa
int
leave
lret
insb
mov
mov
mov
and
xchg
pop
push
fisttpll
cltd
dec
jp
add
aaa
jmp
test
push
adc
nop
inc
mov
sbb
sbb
aad
frstor
scas
ss
mov
imul
aad
aam
fldl
jl
jo
test
call
cli
shrl
je
jl
mov
xchg
aam
mov
imul
repz
jns
and
lods
icebp
or
pop
mov
inc
inc
push
push
xchg
js
mov
push
mov
pop
adc
call
fsubr
xchg
inc
icebp
sub
sbb
xor
mov
dec
or
fisubs
pop
push
push
bound
lds
mov
bound
mov
pop
je
shlb
and
dec
xchg
xchg
cmp
xor
or
lret
push
adc
xchg
xchg
mov
stc
hlt
push
jo
jns
mov
add
faddl
cld
roll
bound
and
rorl
jbe
or
flds
xchg
fsubrs
jae
inc
ret
inc
test
mov
xchg
dec
std
sub
scas
rorl
sbb
loop
sub
lds
pop
add
inc
jge
mov
addb
fwait
andl
and
stc
popa
mov
mov
jge
jge
in
adc
pop
movsb
cli
movsb
jbe
or
es
scas
jbe
les
es
xor
xchg
test
aas
mov
push
push
sub
cmp
hlt
in
dec
adc
adc
in
pop
jp
cli
int3
xorl
sub
fldcw
add
enter
inc
cld
lods
jecxz
jge
jecxz
fucom
dec
js
mov
fs
enter
push
add
aam
push
mov
cmp
mov
jmp
push
and
fistpll
out
mov
inc
lret
xor
xchg
mov
ror
jne
nop
pop
pop
outsl
mov
je
xchg
fcomp
sahf
xchg
dec
ss
sub
and
xchg
out
pop
out
sbb
enter
xchg
mov
jnp
xor
inc
jne
hlt
aaa
inc
mov
pusha
stos
movsb
sbbb
xor
and
ret
sar
xor
push
cmp
sbb
pop
jecxz
push
sbb
ret
jb
push
shrb
and
sbb
dec
dec
sub
jae
push
daa
push
shll
test
and
xchg
cmp
jg
dec
xchg
sbb
and
jg
adc
fwait
aad
push
fnstcw
adc
popf
rcll
jo
lods
adc
popa
sub
jp
mov
cltd
cli
out
add
cmp
fmulp
stc
or
outsb
push
mov
test
push
sbb
sub
push
mov
xchg
inc
pop
mov
outsb
xor
jp
dec
pop
and
fidivrl
bound
pop
fiadds
sub
mov
mov
filds
sbb
ret
cmp
mov
sub
stc
mov
sbb
cmp
fcoms
pop
aam
cmp
xor
insb
jb
sub
popf
mov
inc
jl
mov
dec
stc
addr16
out
clc
and
push
outsb
mov
xchg
adc
call
jno
mov
rolb
and
sub
sbb
ja
leave
pusha
fisubs
push
xchg
shll
cwtl
xor
mov
mov
jmp
fcomps
icebp
adc
insb
in
mov
pop
sbb
scas
dec
adc
push
testl
jge
xchg
ds
xor
movsl
pop
lcall
or
or
loope
sub
sahf
ljmp
mov
inc
lock
dec
adc
lret
xchg
out
dec
jl
out
xchg
call
insl
int
jae
sub
ljmp
cmc
outsb
in
xchg
pop
pop
lods
popa
mov
xlat
bound
xor
ss
fildl
cmp
out
push
rolb
cmp
ja
xor
inc
stos
push
repnz
add
mov
lock
jmp
inc
jae
loope
sub
adc
dec
sahf
aad
or
jl
add
sub
in
cmpsb
ret
ja
cmp
jne
cmp
jb
xor
clc
cld
movsl
or
add
subl
push
push
fbld
sbb
or
daa
jmp
popa
in
sbb
adc
or
aas
push
aam
push
jo
repz
sahf
sbb
mov
or
xchg
aad
movsl
xor
or
adc
roll
test
int3
nop
add
push
je
or
dec
mov
push
mov
je
orb
jnp
fwait
cmpsl
insl
cmp
inc
fisttpll
fldl
mov
daa
fmull
filds
and
cmc
sbb
hlt
out
in
pop
push
dec
bound
push
ljmp
mov
scas
std
or
fisttpl
mov
xor
hlt
sub
mov
in
cvtps2pi
lret
jecxz
pop
push
dec
and
cmp
lods
push
aad
push
jae
push
dec
andl
out
pop
test
imul
inc
adc
lds
scas
out
test
sub
xchg
lods
add
rol
lcall
inc
outsb
es
mov
or
add
int
ds
pcmpgtb
divl
cmpsl
lret
cmc
cld
in
push
jb
push
adc
rcll
pop
jns
xchg
fwait
cmp
push
dec
cli
sub
xchg
and
sub
imul
shlb
adc
push
cmp
cmp
cld
dec
xchg
sbb
pop
test
or
insl
add
out
fs
xchg
mulb
xchg
push
repnz
cmp
pop
jmp
fcmovbe
adc
in
outsb
loop
mov
or
mov
sti
iret
in
loop
mov
fists
ret
mov
xchg
das
negb
add
inc
in
add
icebp
xlat
push
push
jo
cmp
xor
jns
cli
jnp
xchg
xchg
pop
jg
and
xor
xorb
mov
cwtl
stc
pushl
sbb
cmp
je
jno
test
adc
jb
dec
jle
hlt
xor
es
lods
and
mov
jmp
mov
sbb
sbb
cmp
hlt
sarl
pushf
in
xor
push
xchg
and
dec
jp
jle
hlt
in
inc
sub
xlat
sarl
push
sbb
mov
sahf
inc
ds
pop
jle
add
adc
aaa
jnp
add
mov
sbb
in
and
fisubs
cmp
out
adc
out
add
fdivrl
mov
xchg
mov
iret
pop
in
jae
fs
pop
fsubs
sbb
out
outsl
fstps
sub
inc
xor
rolb
rorb
aad
and
mov
es
push
push
int
push
mov
lcall
insb
cmp
jge
push
arpl
push
add
push
mov
xchg
add
das
sbbb
loopne
test
mov
insl
and
and
fs
add
iret
push
sbb
cmp
and
insl
pop
insb
pusha
pop
rolb
push
cmpsb
and
int3
jge
mov
xor
pusha
insb
mov
or
mov
pop
mov
divb
pop
dec
ljmp
push
ret
cmp
push
outsb
mov
mov
mov
mov
outsl
pop
sub
xor
mov
pop
movsb
xor
xor
imul
fisubrs
call
mov
jecxz
inc
jo
or
iret
outsb
sub
cmp
lds
jecxz
inc
dec
pop
adc
xlat
aam
sub
push
iret
ss
repz
das
adc
subb
add
in
rolb
mov
cmp
and
xor
or
mov
imul
fs
fsubp
repz
jae
outsl
cltd
divl
add
mov
fdivl
nop
fmull
push
add
add
mov
stos
jge
nop
fdivrs
repz
xlat
repnz
cwtl
lods
mov
xchg
in
fmuls
push
mov
std
gs
or
insl
dec
mov
add
int3
repnz
movsl
fsts
in
cmpsl
dec
outsb
xor
dec
stos
add
or
jae
icebp
xor
aad
adc
mov
push
or
dec
cs
jno
sarb
pop
push
mov
rorb
xchg
add
add
dec
cmpsb
cwtl
add
xchg
aam
jae
sbb
das
mov
mov
int
add
add
dec
jnp
gs
mov
sub
sub
test
add
mov
jbe
xor
rcrl
xchg
adc
adcb
dec
nop
mov
fsub
mov
mov
sbb
sub
sub
sbb
std
xchg
cli
test
xor
faddl
push
push
add
push
repz
stos
mov
es
adc
movsl
cmp
sbb
mov
add
int3
out
push
lods
mov
pop
xchg
xor
jae
add
xlat
mov
jne
dec
jecxz
loope
sub
loopne
pop
insb
nop
jo
xchg
fdiv
pop
into
lret
sti
push
pop
addr16
ljmp
and
xchg
xchg
or
and
rcll
cwtl
cmpsl
jbe
popa
shrb
outsl
cmp
popf
jno
cmpsb
add
aaa
add
inc
and
in
daa
leave
xchg
scas
fisubrs
sub
jnp
mov
xchg
popf
lds
and
mov
add
mov
rorb
adc
cmp
and
clc
sub
dec
lahf
push
popf
test
dec
push
ja
sbb
sub
adc
mov
xchg
mov
mov
inc
mov
rcl
dec
mov
popa
push
jge
add
or
mov
fadds
mov
pushl
loop
dec
movsl
inc
scas
jp
mov
les
pusha
das
push
xchg
mov
mov
adc
loope
mov
test
xchg
xor
sbb
fsubrp
push
sub
int3
pop
push
shlb
orl
in
xchg
xchg
data16
add
add
jnp
mov
ljmp
push
pushf
adc
lcall
dec
imul
clc
xchg
mov
fldl
mov
es
sbb
mov
xchg
mov
bound
sti
jmp
mov
sahf
and
pop
jno
fistpll
test
outsl
loope
negl
leave
xchg
pop
xchg
aad
insl
pop
pop
popa
xchg
pusha
mov
push
cmp
test
dec
dec
mov
in
mov
push
aad
movsb
adc
orl
sbb
push
mov
mov
jb
or
sub
cmp
and
fsts
and
je
div
and
cmc
xor
mov
cmp
nop
shrb
jno
xchg
xchg
jb
insb
lcall
bound
roll
and
in
rcll
xchg
call
inc
repnz
insl
sti
mov
or
sbb
xchg
dec
outsb
jecxz
loope
add
xchg
sbb
int
shr
push
push
cwtl
testl
cmovnp
push
insl
mov
adc
ret
sbb
stos
lret
jb
arpl
jmp
and
out
std
pop
fwait
int
mov
pop
and
adcb
pop
jne
scas
movb
test
dec
hlt
dec
dec
and
mov
cmp
idivl
sbb
add
pop
cli
xchg
mov
jb
in
xor
or
xor
dec
xchg
xchg
mov
mov
xor
xchg
repz
ficomps
clc
adc
scas
sub
and
jmp
data16
insb
in
ss
std
pop
test
pop
mov
ret
daa
imul
pusha
mov
rorb
ficomps
es
mov
jle
mov
cmpsb
mov
sbb
mov
jge
lret
and
addr16
es
xchg
das
lahf
jno
or
mov
mov
ds
in
push
and
jbe
push
pushf
cmp
das
lahf
movsl
nop
int3
inc
mov
pop
test
xor
pop
lret
mov
xor
xchg
mov
rolb
xchg
mulb
xor
popf
in
pop
mov
mov
ret
orl
into
ljmp
cltd
or
cmpsl
sti
pusha
cltd
int3
cmp
sti
sahf
scas
adc
cwtl
adc
xor
sub
cmp
mov
and
outsb
sahf
test
rcrl
cli
mov
jg
mov
std
jns
and
mov
sahf
xor
cli
movsb
mov
out
ret
shrb
hlt
xchg
and
mov
cmp
push
xchg
push
inc
fisubs
dec
sbb
xchg
dec
xor
pop
jg
stos
jecxz
adc
or
mov
movsb
loope
pop
add
repz
incb
jb
dec
inc
out
or
inc
outsb
out
push
insl
jmp
add
imul
xor
sub
dec
and
sub
pop
and
mov
jbe
hlt
outsb
jo
lcall
sbb
mov
xchg
mov
push
xor
outsb
popf
es
jbe
xor
iret
mov
add
inc
mov
jmp
jmp
jne
lahf
mov
mov
xchg
xchg
clc
repnz
sbb
or
pop
out
cmc
scas
lret
pop
xchg
into
push
stos
push
movsb
jmp
jmp
xor
push
xor
push
xlat
pop
subb
dec
lcall
leave
xchg
cwtl
jmp
xchg
jnp
bound
es
outsl
sbb
subl
outsb
ja
adc
stc
popf
loop
xor
int
daa
xchg
popf
push
cmp
mov
jmp
cmp
repz
sub
mov
test
and
pop
mov
add
cmpsb
repz
rcrb
loope
arpl
es
jp
sbb
je
negl
adc
push
imul
xor
xchg
adc
push
mov
dec
lods
test
xor
adc
xchg
loop
mov
ss
adc
fisttpll
cmp
sub
and
push
imul
divb
jl
repz
cmp
rclb
sti
das
clc
aas
jne
inc
mov
icebp
out
test
jne
mov
and
insl
push
stc
push
insl
aaa
scas
pop
adc
push
xor
jno
adc
scas
sbb
and
fsts
in
repz
jle
les
std
test
sub
data16
movsb
imul
stc
mov
iret
pop
sbb
cmp
testl
jno
pop
int
pop
gs
cmp
xchg
in
jne
stc
outsb
fstpt
addr16
lds
mov
cmp
xchg
inc
rcr
lret
pusha
fldcw
adc
jns
data16
clc
cli
xlat
inc
movsb
inc
stc
fdivl
or
ret
add
push
test
xor
stos
divb
xchg
scas
sbb
lret
leave
daa
cmpb
repnz
cmp
scas
arpl
cmpsl
push
mov
inc
popa
movsb
dec
mov
testb
out
fiaddl
mov
mov
test
es
out
or
in
adc
xor
inc
sub
jnp
lock
shr
cmp
hlt
in
hlt
jo
ret
sbb
and
rolb
or
push
and
ror
ret
sbb
lds
in
in
lcall
dec
das
cmpsb
mov
js
mov
sbb
jp
popf
mov
popf
pop
test
incb
movsl
cmp
dec
inc
mov
rolb
jno
ret
push
inc
inc
ljmp
int
or
xor
daa
and
mov
and
inc
movsl
jle
or
fwait
std
int
or
ds
dec
push
xchg
mov
adc
data16
repnz
push
flds
jns
or
out
add
dec
sbb
lods
mov
add
mov
jg
rorb
movsb
cmp
iret
fbstp
inc
xchg
cmpsl
scas
inc
pop
mov
into
mov
mov
popf
adc
jge
maxps
and
xlat
inc
and
push
inc
mov
fimull
dec
mov
fxtract
inc
dec
inc
mov
scas
sub
mov
mov
cmc
mov
pop
mov
je
or
mov
loopne
sub
mov
test
mov
lcall
fs
dec
mov
out
sbbl
mov
xchg
repz
stc
enter
aam
mov
pop
stc
or
or
movb
xlat
push
test
mov
push
jae
pop
mul
scas
inc
lahf
shrl
outsb
lahf
ss
sahf
cltd
push
dec
dec
out
js
cmpsl
sbb
sbb
jb
adc
insb
or
test
inc
out
sub
clc
inc
iret
loope
int3
push
ss
add
ss
cmp
mov
lahf
lock
or
push
jne
aas
faddl
jbe
cmp
jle
cs
or
xlat
addr16
test
pop
jp
mov
jmp
scas
xchg
jbe
lds
mov
sbb
push
mov
rcll
cmpsb
cs
cli
push
adc
dec
pusha
inc
movsl
in
xor
push
test
mov
adc
inc
jb
add
jle
repnz
scas
ljmp
loop
pop
adc
xchg
mov
iret
mov
aas
das
xor
cmp
xlat
and
fstpt
out
pop
mov
push
rcll
fimuls
mov
sub
and
fcoms
cld
adc
lret
add
xchg
bound
out
outsb
aaa
ljmp
pop
cmp
or
and
jns
push
jmp
jb
mov
xchg
insl
loop
cmpsl
adc
and
jle
push
out
cmp
cwtl
stos
sbb
xor
lahf
and
inc
sbb
mov
cltd
inc
dec
jb
add
or
mov
or
xor
pop
out
in
into
nop
in
sarb
mov
les
gs
lret
das
jge
jo
in
pop
call
fmull
cmovns
popf
fdivrs
push
jle
call
int
vpcmov
mov
push
out
je
pop
ret
mov
jmp
xor
xchg
pop
dec
jns
fdivrl
mov
addr16
push
hlt
add
lock
in
in
sbbb
mov
hlt
lret
mov
lods
sbb
push
adc
xor
in
cli
leave
loop
mov
sub
fldt
cmp
mov
popa
sub
and
xchg
ljmp
outsb
dec
scas
loope
mov
mov
pop
mov
fcmovnbe
xchg
xor
push
icebp
outsb
jbe
jbe
pop
lds
jl
or
outsb
mov
cmp
jmp
js
ljmp
aaa
xor
outsl
and
loope
lret
mov
pop
out
xchg
seta
and
icebp
push
xchg
mov
mov
cmp
arpl
aaa
mov
enter
mov
inc
aam
xor
loopne
rcl
jecxz
mov
inc
scas
xchg
push
fsubs
push
stos
lock
iret
cmp
xchg
ret
cltd
fnsave
fs
lahf
push
jb
mov
cli
adc
xor
mov
jge
pop
mov
lea
cmp
out
cli
mov
loope
adc
add
movsb
iret
lods
inc
mov
clc
push
stos
movsl
gs
pop
sbb
dec
orb
icebp
bound
adc
out
mov
mov
cmp
jo
and
std
lds
or
in
mov
stos
cmp
fiaddl
or
popf
into
stc
jnp
or
int
sub
out
mov
or
add
mov
xor
jnp
lahf
inc
xchg
ljmp
xchg
das
push
adc
or
sti
pusha
mov
xchg
int3
jnp
sahf
add
inc
out
adc
or
out
mov
test
dec
test
in
or
jne
pop
inc
fidivs
jmp
int3
xorl
xlat
mov
gs
add
xor
leave
mov
cmpl
in
lcall
mov
stos
in
mov
loope
add
mov
mov
shr
jmp
pop
sub
mov
mov
inc
pusha
push
xchg
movsl
inc
or
stos
ret
cli
cmp
mov
fists
adc
pop
sarb
mov
mov
xor
xor
mov
cwtl
ret
fcomps
std
enter
xchg
ret
inc
xchg
shl
dec
push
and
pop
xlat
out
xchg
fwait
cmpsl
out
cli
inc
dec
fsts
lock
add
pop
cmp
incl
add
push
cmp
jo
movsl
scas
sub
aaa
sub
add
lret
dec
mov
adc
mov
sub
inc
lret
push
cmp
out
subl
cmp
adc
cmp
cltd
data16
push
sbb
stos
add
pop
push
rorl
push
push
xchg
mov
icebp
lret
popa
movsb
dec
sub
push
sbb
xor
fcoml
push
sbb
push
in
mov
outsl
mov
mov
es
int3
roll
or
pushf
dec
adc
and
lret
xor
popf
jno
sbb
pop
fistl
rcll
jg
nop
in
sbb
add
subb
or
out
or
in
jno
stos
loope
inc
shl
pop
push
mov
xor
rcrb
mov
jnp
jge
add
fistpll
cmpsb
mov
push
mov
lahf
mov
stos
or
adc
daa
cs
xchg
test
sub
mov
and
fisubl
pop
push
aam
xchg
fs
test
or
push
sub
sbb
sbb
jl
xor
outsb
and
mov
sub
out
inc
pop
xchg
dec
push
insl
mov
ja
sbb
cmp
gs
insl
cld
push
outsl
dec
jne
jne
or
ror
call
cmpb
repz
bound
inc
stos
and
rorb
push
jl
inc
cmp
or
xchg
movsl
or
mov
dec
rcrl
ljmp
jae
push
das
add
mov
push
and
dec
cmp
fs
pop
mov
sbb
pop
push
xchg
out
enter
lcall
in
dec
fistpl
or
cwtl
sti
out
pop
and
cmpsb
nop
inc
rclb
out
adc
pop
mov
and
xchg
or
and
fwait
sbb
js
fists
outsb
pop
mov
pusha
inc
shl
add
js
fxch
loopne
add
cmpsl
iret
rol
aaa
fistl
push
inc
cmpsb
sarl
in
push
sub
xchg
and
outsb
dec
dec
jno
cmc
sbb
xor
outsl
popa
jo
and
add
imull
mov
or
lods
aad
push
dec
xchg
mov
pop
jae
imul
aas
daa
cmp
arpl
xchg
repnz
jp
cmp
andb
pop
xchg
jbe
lock
push
pushf
cwtl
lret
lahf
jne
pop
lret
outsb
iret
out
add
dec
fninit
pop
xor
cmp
sarb
mov
jns
dec
mov
ja
fdiv
dec
or
mull
dec
pop
test
pushl
movsb
or
xchg
lock
movsb
cmp
or
mov
jg
or
in
adc
xchg
ret
jbe
or
adcl
es
mov
lcall
push
xchg
push
sarb
or
mov
inc
pop
negl
jge
mov
enter
dec
xor
sbb
sahf
outsb
pop
add
imul
and
jl
xor
inc
inc
xor
dec
inc
aam
daa
cmpsb
int
sub
insb
sub
insl
in
int
scas
adc
add
insb
mov
sub
mov
sti
xchg
int3
cmpsb
daa
lret
or
jmp
addr16
lods
add
fmuls
call
fstl
or
scas
arpl
inc
sarb
aas
fdivrl
push
jg
sti
inc
nop
sbb
lods
shll
sbb
rcl
mov
mov
or
ror
push
mov
mov
lods
cld
jnp
adc
cmp
and
jb
jmp
movb
pop
and
sti
inc
jp
fistl
sbb
mov
mov
jo
inc
push
shlb
addb
int
push
sahf
in
aaa
lods
aaa
scas
data16
jge
pushf
dec
ret
out
cli
mov
xchg
sbb
and
mov
and
sub
cmp
js
in
les
push
cltd
sbb
into
pop
xor
jne
dec
ret
and
jle
mov
test
fwait
mov
adc
popf
int3
inc
dec
scas
ja
jg
fstps
xchg
popa
add
pop
sub
rorl
and
cmp
ficomps
or
push
xor
dec
in
popf
cmp
fdivrl
fsubs
pop
pop
xchg
lds
rorb
pop
sub
movsb
mov
or
sub
js
mov
jnp
cmp
push
lcall
fmul
cmc
add
repnz
gs
xchg
inc
sbb
or
mov
loop
xor
mull
mov
mov
xor
push
insb
jae
lds
sub
jno
push
stos
xchg
fs
dec
enter
mov
aas
sti
xchg
xor
push
pop
or
sbb
in
push
fcomp
dec
nop
lret
les
jno
out
lea
sub
loope
push
push
mov
push
scas
es
xor
stos
sti
push
jo
in
ja
stos
dec
xchg
jbe
testl
jae
sbb
fstpt
test
xchg
int
shlb
jno
jmp
bound
stos
xchg
stos
mov
or
xor
loop
add
loopne
pusha
mov
icebp
ja
or
mov
sub
or
cmpl
es
xor
add
lods
dec
mov
xchg
pop
add
jge
push
mov
pop
clc
xchg
add
outsb
std
call
ficoml
pop
cmpsl
lea
aam
mov
loopne
inc
push
push
xchg
cmpsl
stos
repz
sti
jbe
ret
cmp
fmuls
jo
cmp
mov
mov
jle
dec
popf
xlat
cmp
aam
jns
loope
lret
cmp
mov
aaa
je
addr16
jl
adc
mov
mov
add
sub
jb
in
add
cmpsb
mov
fcmovbe
cltd
cli
jo
repnz
subl
sub
cwtl
xor
int
or
in
icebp
in
inc
leave
hlt
das
lods
scas
xchg
dec
push
lcall
sub
insb
out
iret
lcall
mov
imul
popa
adc
and
push
aaa
pop
repz
mov
inc
andl
fprem1
sub
addr16
outsl
mov
aam
cmp
push
sbb
ret
lret
cld
daa
fcmovnu
sub
inc
cmp
imul
mov
lcall
shlb
subb
or
dec
add
orw
jnp
loope
adc
scas
in
dec
xchg
jns
es
and
jl
jg
out
lods
jo
sahf
sahf
in
aas
pop
mov
mov
and
mov
sub
pop
inc
sbb
test
mov
out
cmpsb
sti
sti
ljmp
push
popf
cmpsb
fildl
push
in
out
cmpsb
and
jecxz
jno
hlt
or
jmp
call
dec
sbb
inc
push
and
mov
stc
std
add
sub
mov
repnz
and
pop
push
ja
fdivr
pop
lock
shll
cmp
scas
inc
shr
nop
dec
cmp
bound
push
mov
cltd
inc
jp
pop
adc
adcl
jno
cmp
jno
adc
iret
sbb
arpl
out
dec
push
cmc
gs
adc
push
jbe
inc
mov
jl
outsl
jmp
dec
add
xchg
insb
out
or
xchg
fstpl
dec
dec
mov
xor
mov
xor
out
movsl
iret
xchg
fstp
jg
enter
repnz
movsb
popf
mov
iret
cmp
xchg
sub
je
popf
in
mov
mov
pop
movb
mov
mov
roll
jmp
addr16
fwait
stc
mov
pop
es
ficomps
push
daa
andl
js
push
into
data16
push
je
jbe
adc
in
outsl
jecxz
push
jno
scas
sahf
or
fnsave
sahf
mov
popf
in
mov
inc
jge
sbb
fdiv
fstps
cwtl
aad
jno
mov
xor
mov
nop
push
fcompl
dec
pop
mov
cmpsb
in
pop
aaa
cmp
add
stc
stos
mov
ficoml
mov
in
mov
mov
test
shlb
out
xor
fsubr
popf
and
fwait
das
adc
dec
mov
les
scas
inc
and
push
outsl
testl
movsl
xlat
dec
mov
adc
mov
sti
add
pusha
dec
dec
mov
sub
lods
add
scas
xlat
cmp
std
fdivs
inc
call
or
inc
push
mov
aam
daa
dec
cmpsb
jmp
xchg
test
and
push
imul
sub
enter
or
in
dec
pop
xor
push
xchg
ds
jmp
inc
sub
cmp
mov
hlt
hlt
mov
pop
jne
push
lea
cmp
pop
inc
jb,pt
dec
xchg
jle
adc
pop
dec
in
daa
loop
stos
aaa
mov
daa
ret
fdivl
insl
repnz
stos
jne
jno
mov
nop
mov
out
pushf
pslld
inc
dec
jge
inc
push
mov
popl
sti
mov
xor
mov
dec
push
or
test
das
addl
lods
and
pusha
movsb
sub
cmp
mov
push
mov
jnp
pop
out
addl
inc
nop
movsl
int
stos
daa
in
out
pop
outsl
jo
pusha
rcrl
imull
jnp
cli
adc
mov
jb
mov
mov
hlt
pop
jnp
repnz
push
lret
jne
aaa
sahf
fimuls
stos
ljmp
ret
xor
adcl
or
test
jns
and
in
jmp
mov
int
sbb
scas
adc
sub
add
loope
and
lock
and
insb
or
cmp
push
mov
aaa
divb
jno
imul
jmp
inc
or
mov
dec
call
movsb
aad
notb
jle
test
xchg
and
cmpsb
fisubrs
adc
dec
ret
inc
fists
mov
push
mov
dec
add
mov
or
jb
mov
ficompl
mov
push
mov
lea
pushf
jns
roll
xchg
int
aam
fcmovnbe
push
popa
lods
sti
dec
aam
lea
mov
dec
xlat
mov
jne
inc
adc
test
jne
mov
jmp
mov
lret
adc
or
inc
icebp
mov
leave
outsb
lcall
cltd
lahf
push
xchg
std
sbb
push
xor
inc
sub
xor
add
inc
andb
xor
int
mov
push
mov
cmp
inc
loopne
sub
inc
dec
adc
cwtl
sarb
cwtl
mov
cmpl
loope
and
out
add
xor
in
pop
test
popf
xchg
push
lret
push
out
mov
ss
movsb
imul
stos
fwait
imul
push
cs
adcb
xchg
lahf
push
movb
jmp
call
out
pop
jge,pt
insb
lahf
sbb
rorl
add
pop
ja
inc
test
sbb
fwait
lods
fisttps
test
icebp
arpl
scas
xor
fsubrp
sahf
dec
call
ss
inc
cli
jns
jns
clc
lcall
push
xchg
jne
movsl
adc
xor
in
jp
add
icebp
inc
dec
cmpsl
push
sahf
dec
xchg
adc
mov
add
lods
insb
jg
cmp
sbb
pop
mov
mov
pop
adc
cmp
pop
sub
je
sahf
xor
push
insb
mov
pop
xchg
push
rcrb
ret
ja
sub
in
push
mov
jmp
mov
lret
lds
rclb
in
aad
mov
pop
lret
dec
subl
jb
inc
inc
int
dec
xchg
xor
xor
jno
std
rclb
mov
pop
cmpsb
adc
mov
xchg
cmp
es
cmpsl
int
mov
lods
jne
imul
mov
fcoms
fucomp
xor
push
lret
ds
mov
pop
inc
jle
imul
lahf
stc
sbb
inc
movsb
daa
hlt
stos
leave
or
iret
popa
scas
mov
aad
add
les
mov
dec
xchg
pop
mov
push
cwtl
push
aad
rolb
cmpsl
roll
out
inc
adc
and
dec
lahf
mov
push
arpl
shll
pop
aam
inc
movsl
stos
jnp
jne
call
xor
xchg
add
rcll
sbb
cmp
lds
sarb
dec
adc
sbb
mov
cmp
cmp
repnz
mov
push
ret
xor
test
cmp
ja
pop
test
mov
rcr
testl
mov
push
lahf
loop
pop
add
imul
js
mov
xor
fistl
loop
out
sub
jae
cmp
dec
jl
push
and
cmp
jmp
imul
push
les
xor
scas
icebp
adc
sarl
ds
xlat
lcall
push
out
or
mov
sub
jno
push
cld
lods
ja
movsb
pop
pop
mov
or
add
data16
nop
dec
sbbl
or
pusha
or
jmp
jnp
xor
jmp
add
iret
xchg
jne
push
mov
lock
mov
enter
repz
push
or
fnstenv
cmpsb
jnp
xor
pop
aam
cld
frstor
das
mov
fstpl
fst
data16
mov
sqrtps
iret
hlt
jecxz
dec
sub
mov
imul
in
repz
neg
xor
fdivl
add
mov
mov
and
adc
cs
mov
push
loop
mov
sarb
outsb
movsl
cmp
jbe
mov
icebp
xchg
mov
ret
orl
cmovbe
xor
call
mov
movsl
adc
in
fs
bound
int3
lea
in
adc
mov
adc
pop
xor
xchg
pop
lods
mov
xchg
cwtl
inc
cmpsl
repnz
ljmp
adc
xchg
jb
xchg
xchg
mov
mov
jae
outsb
pop
pop
xchg
push
pshufw
inc
ss
addr16
xchg
lahf
adc
lea
lods
pop
push
dec
sub
push
mov
lock
inc
dec
pop
out
shll
add
add
xor
das
cs
scas
je
nop
rcl
gs
jae
or
loop
sbb
sbb
lret
add
cmp
and
add
std
adc
xchg
xor
cmp
insl
cwtl
cmp
sub
adc
jmp
pop
dec
jl
scas
pop
hlt
bound
inc
inc
movsb
push
aas
lcall
inc
sub
pop
aas
mov
jo
mov
testb
push
fimuls
push
inc
scas
test
push
ds
mov
mov
std
adc
je
lcall
add
sti
push
pushf
div
lods
sbb
gs
mov
adc
jne
rol
push
and
inc
test
pushf
js
scas
insl
add
loope,pt
push
and
ret
push
mov
stos
mov
pop
jp
aas
xchg
xor
fisttps
cmc
pop
jmp
xor
das
dec
sarb
data16
mov
mov
nop
fwait
pop
jmp
push
into
out
dec
dec
xchg
xchg
ffreep
push
mov
int
xor
push
push
or
mov
cmpl
push
fwait
idiv
mov
cmp
jg
clc
cmpsb
aad
add
enter
pop
mov
shll
xchg
push
jae
outsl
push
popf
inc
insl
rcrb
fsubp
mov
dec
lods
out
ljmp
xchg
add
jle
dec
aas
pop
xchg
lds
data16
sahf
mov
stos
ret
sti
dec
imul
insb
hlt
jle
popa
cld
je
test
ja
xlat
push
cmp
sub
cltd
inc
imulb
icebp
xchg
in
in
ret
fisubl
push
out
sahf
mov
mov
mov
lods
cmp
add
inc
mov
in
or
sbb
dec
cmp
adc
dec
sbb
js
xchg
fs
adc
in
call
sbb
movsb
mov
jns
ljmp
xor
mov
pop
pop
insl
xor
or
sbb
nop
insl
add
push
adc
test
jo
ret
pop
jne
test
mov
bound
incb
data16
mov
mov
or
fisubrl
adc
popf
dec
mov
icebp
mov
sbb
fiadds
xor
cmp
mov
or
fldt
cmp
sbb
xchg
mov
mov
je
rorl
sub
jmp
push
popf
insb
aaa
out
mov
cmp
lock
fwait
es
rorb
cmp
add
out
shl
xor
sbb
dec
imull
mov
xor
jge
mov
adc
rclb
dec
dec
pop
shl
cwtl
mov
in
out
mov
sub
cmp
popa
mov
lret
in
or
and
mov
fldl
adc
scas
daa
xlat
xor
ret
push
cmp
mov
mov
into
and
lahf
xchg
sbb
push
add
adc
ficomps
jb
cltd
adc
icebp
fsub
cmp
mov
push
ret
fwait
ret
hlt
in
cmpsb
movsl
stos
adc
loop
fldl
mov
mov
negb
sub
jae
sub
shlb
leave
sub
add
iret
bound
adc
inc
dec
sub
cmp
pop
cmp
filds
mov
repnz
xchg
pushf
cwtl
aam
fwait
pusha
insl
cmp
xchg
xlat
ljmp
push
lds
cmp
lods
les
lea
jmp
cmpsl
sbb
add
xchg
xchg
ret
mov
inc
test
aas
jle
fnstsw
mov
fldt
adc
cmp
lahf
inc
rcl
jae
lock
mov
sbb
lock
pop
lret
frstor
lret
dec
sbb
mov
xorl
jae
aam
addr16
jns
dec
jp
dec
push
jmp
fildll
enter
cld
fisttps
sub
cmpsl
adc
imul
xchg
daa
jge
sub
test
sbb
repz
mov
in
sub
pop
mov
mov
mov
xor
pop
out
rcll
hlt
aas
loop
mov
xor
inc
cmp
stc
je
xchg
add
or
mov
push
xchg
cmp
inc
rorl
bound
out
cmpsl
stc
aaa
fcoml
inc
jmp
addr16
enter
jae
sub
and
fnsave
roll
sub
xchg
dec
fstpt
xchg
stc
inc
mov
mov
arpl
in
sub
mov
sti
cmp
mov
stc
loopne
dec
cmp
jg
mov
pop
rclb
and
push
sub
sbbb
xchg
cvttps2pi
xor
push
jnp
movsl
sbb
inc
push
fcomip
pop
imul
jmp
in
cmpsb
pop
add
orl
fs
fdivs
out
gs
loop
aas
sbb
and
xor
icebp
repz
jbe
xchg
cmp
leave
mov
xlat
mov
aaa
lods
sti
ljmp
pushf
stos
mov
negl
mov
pop
insb
rolb
ljmp
xchg
or
pusha
sbb
in
push
insb
hlt
into
dec
xchg
adc
rcll
xor
add
pushf
xor
jmp
sbb
pushf
mov
and
aas
iret
pop
enter
jl
lea
inc
adc
inc
das
jge
shrl
mov
xorb
int
add
and
stc
lea
push
pop
sahf
push
xchg
mov
dec
ss
loopne
add
sub
mov
xchg
xchg
xchg
add
lcall
add
mov
jno
out
cltd
push
rorb
mov
mov
mov
in
push
ljmp
movsb
mov
rcl
adc
sbb
nop
divb
inc
cld
sbb
jle
or
pop
cmc
daa
cmp
pop
mov
fincstp
jmp
push
sub
loopne
stc
add
or
dec
lds
sbb
push
mov
aas
sbbb
lods
into
fs
inc
mov
hlt
inc
pusha
add
or
jbe
das
xchg
mov
adc
cltd
sub
mov
es
adc
jecxz
dec
add
xor
mov
ss
mov
push
xlat
filds
repz
push
sbb
jno
xchg
lret
mov
or
sarl
les
dec
xor
inc
bswap
cltd
mov
loopne
mov
mov
or
mov
push
clc
mov
xor
add
xchg
cmp
mov
and
mov
sbb
jne
fdivrs
cmp
cmpsb
fdivrs
jg
lods
icebp
leave
adc
nop
xchg
popa
mov
outsb
sub
push
movsb
xor
mulb
out
test
dec
push
or
pop
nop
mov
add
dec
and
or
sub
mov
mov
ret
pop
pop
test
gs
sbb
sub
jle
in
or
xorl
aad
push
repnz
frstor
insl
jno
and
idivl
aaa
test
pop
ret
cs
test
lcall
or
sub
ret
scas
pop
je
lods
cltd
aam
mov
scas
add
mov
popf
sbb
jo
ret
mov
lret
mov
xchg
pushf
push
dec
loop
sub
movsl
rclb
jo
mov
adc
or
or
shl
mov
shlb
fdivr
xchg
cmp
push
jo
pop
xchg
inc
adc
mov
and
cs
lret
mov
or
xchg
imul
sbbl
mov
xchg
push
inc
out
stc
sub
jns
test
xor
andb
out
pop
lea
in
arpl
xchg
sbb
loopne
or
xor
outsb
dec
pusha
sub
psraw
rcll
or
fincstp
pop
fs
out
out
inc
enter
je
lock
imull
repnz
lds
push
cmpsb
loope
jge
jl
addl
push
jl
iret
sub
sub
in
add
pushf
dec
xchg
pushf
enter
cmp
xor
addr16
mov
xchg
sahf
rcrb
inc
test
imul
inc
loopne
movsb
or
stos
push
stos
cmp
mov
ret
mov
imul
cs
nop
stc
aaa
test
popf
inc
push
push
mov
iret
loop
push
es
push
js
or
ja
les
mov
mov
addr16
adc
fwait
addr16
scas
icebp
pusha
lret
insb
add
push
sbb
pop
clc
sbb
rorb
or
fcoml
jno
mov
in
hlt
cmc
inc
mov
jb
add
nop
and
add
push
mov
pop
sub
jmp
arpl
pop
xor
fcompl
jmp
hlt
or
inc
dec
inc
fldt
sbb
xchg
fwait
inc
ss
int3
pop
xor
lods
inc
mov
sbb
pop
insl
push
je
cmc
inc
ficomps
aam
roll
mull
adc
add
jnp
mov
imul
mov
inc
stos
xlat
imul
js
fisttpl
pop
lods
push
test
add
out
sub
sysenter
lea
push
daa
mov
fs
fmul
sub
sub
ds
insb
loop
test
adc
mov
aad
push
add
aam
stos
sub
je
jb
push
les
ljmp
shlb
pop
test
fcompl
cmp
shr
inc
mov
dec
push
rcrl
xorl
sub
js
movsb
dec
or
sub
jg
imul
fildll
mov
mov
lods
inc
inc
lcall
out
ds
test
sbb
test
dec
sbb
and
leave
mov
xchg
aas
scas
mov
leave
sub
insb
lahf
pop
add
je
and
movsb
fistps
adc
sbb
js
mov
and
pop
add
adc
lret
outsl
popa
cmp
mov
pop
lret
cltd
adc
rcrb
xor
nop
fldenv
adc
in
and
pop
pop
xchg
push
insb
adc
aam
mov
pop
inc
shl
les
sbb
outsl
inc
mov
xor
mov
fcmovnu
std
xchg
mov
xor
lods
jne
aas
push
stos
sbb
in
gs
or
xlat
push
mov
mov
inc
jl
enter
out
cmpsl
sbb
imul
movl
rcrb
loope
loop
inc
mov
int
and
in
inc
sub
leave
xchg
movsl
lds
or
lahf
adc
in
ss
inc
xor
shrl
or
add
inc
adc
jge
xor
loop
cmp
fidivrs
cmp
lock
outsl
mov
push
hlt
test
movsb
test
xor
cwtl
scas
popa
mov
xlat
aaa
push
mov
or
orl
mov
test
ss
mov
dec
push
inc
and
fnsave
cmp
test
pop
movsb
jns
pop
iret
sub
insb
mov
inc
dec
xchg
in
pushf
mov
sub
or
movsb
mov
push
sub
xlat
xlat
and
loop
add
push
jecxz
cmpl
fnstcw
movsl
xor
add
fidivs
push
push
push
or
inc
add
stos
push
mov
fcoms
xchg
shll
stc
jl
mov
mov
mov
mov
push
rolb
push
add
leave
scas
inc
loopne
data16
sub
sarl
stc
or
pop
es
in
inc
stc
dec
add
xor
lahf
std
add
outsl
cwtl
pop
xor
hlt
ret
shlb
inc
and
scas
xor
xlat
jecxz
pop
sub
jle
add
cmc
loope
lret
cmp
mov
hlt
gs
lods
fs
int3
xor
cmc
mov
stc
popf
jns
pop
and
popf
ret
imul
icebp
iret
pop
push
or
cwtl
pop
pop
outsb
push
jp
in
pop
sti
jg
pusha
call
mov
jmp
sub
mov
popl
dec
dec
sub
jno
jl
inc
bnd
hlt
mov
push
jg
lret
xor
cmpsl
push
pusha
mov
call
adc
xor
outsl
cltd
cld
adc
hlt
rcl
mov
and
roll
xor
out
adc
add
push
lods
rclb
xchg
mov
pop
shr
ljmp
iret
cmp
inc
add
push
dec
xchg
imul
and
ss
out
dec
ss
mov
je
push
scas
xchg
mov
jbe
data16
out
cmpsl
das
std
sub
jne
clc
pop
mul
mov
cmpsl
fistps
std
xchg
insb
cmc
out
mov
lds
sti
lret
in
mov
shrb
pop
pushf
push
and
mov
mov
faddl
pop
jae
mov
std
cld
and
adc
lock
xchg
mov
pop
cmpsb
movsl
push
hlt
or
out
add
push
or
lahf
cmpsl
aad
cmp
setg
or
mov
xchg
or
dec
in
mov
xor
cwtl
mov
shl
mov
sbb
cmpsl
mov
add
jns
aad
pop
movsb
mov
in
fs
hlt
push
aam
nop
fdivrs
xchg
sbb
jmp
add
sbb
sub
mov
lret
and
mov
rcrl
ja
mov
mov
sub
clc
push
xor
pop
sbb
push
test
xchg
sarl
loopne
sbb
xor
mov
mov
push
rol
enter
movsl
dec
das
das
mov
mov
insb
leave
inc
cmpsb
aaa
dec
adc
mov
cmpsb
push
aad
mov
rolb
mov
push
icebp
mov
jnp
jl
mov
arpl
mov
jp
dec
ds
fdivl
test
leave
imul
mov
push
cmpsl
andl
and
adc
or
cld
loope
xor
ret
jns
ret
mov
mov
mov
fdivs
stos
cmp
loopne
ds
scas
mov
sbb
add
cld
sub
xchg
jno
dec
add
icebp
and
iret
fnstenv
xor
inc
jmp
cmpsl
lahf
fisttpll
xor
push
stos
outsl
mov
mov
addr16
popa
pop
mov
shll
movsl
inc
sbb
mov
popa
in
pop
cmp
jl
push
arpl
dec
inc
and
test
and
aad
lds
repz
mov
loopne
in
push
pushf
or
loop
add
xor
lcall
stos
repz
loope
cli
pop
jl
fdivs
mov
ja
daa
movsb
cmpsb
repz
lods
sub
cmpsl
xor
fdivr
and
sub
testl
xor
mov
pushf
loopne,pn
out
jp
fisttpll
cs
std
mov
popf
ret
add
or
ret
pop
mov
push
cwtl
xlat
and
add
mov
push
sub
jge
xor
push
jl
pop
cli
jnp
icebp
outsb
fwait
mov
std
sub
fidivl
cmp
adc
jo
pop
pop
add
xor
ja
ret
add
mov
aas
ljmp
divb
rolb
movsl
xor
repnz
cld
bound
test
pushf
add
rclb
cmpl
jbe
push
test
test
inc
and
add
ss
push
push
je
lea
dec
enter
in
sub
push
jb
inc
add
xor
cmp
lods
jnp
push
xchg
jns
inc
fidivl
xchg
add
sub
fmull
jecxz
js
jno
fcmovnbe
xchg
push
pushf
ds
scas
adc
addb
lock
ficoml
pushf
fpatan
inc
imul
leave
pop
fs
pop
xorb
rcll
push
inc
xchg
rclb
insl
mov
pop
adc
jmp
dec
push
xorl
loop
cmp
sbb
xor
rcl
xor
adc
out
insb
mov
lock
arpl
mov
push
fistl
jo
inc
fisubrs
xchg
pop
xchg
iret
mov
mov
xchg
mov
loop
test
gs
mov
and
mov
jbe
mov
shl
in
imul
xchg
push
repnz
pop
xchg
jecxz
aam
rcr
push
shrb
call
mov
push
fwait
mov
pop
add
push
sub
jle
loope
xchg
sbb
call
loope
bnd
lret
cltd
out
mov
jns
mov
cltd
shrl
shll
or
mov
sbb
and
xor
fisubs
sub
xchg
les
xchg
xchg
sbb
stos
and
mov
mov
push
sub
insl
sub
add
shlb
lcall
testl
xlat
mov
mov
pop
xor
sub
stc
out
xchg
xchg
pop
add
sbb
xchg
sub
scas
test
jo
dec
test
testl
lea
push
jb
mov
dec
addr16
fmuls
push
mov
push
sub
fistl
push
and
cmp
lahf
add
or
into
dec
cmp
mov
daa
int
stc
fidivrl
cmp
scas
stos
mov
mov
inc
clc
outsl
dec
xchg
mov
cmp
gs
adc
push
inc
push
clc
dec
mov
aam
stc
into
das
shrl
xchg
add
sub
push
ss
fists
jl
popf
cld
ss
dec
push
ds
les
and
push
in
xor
imul
pop
mov
je
xor
loopne
sbb
jne
aad
push
clc
call
in
int
fdivrs
iret
out
sti
cmp
sbb
xor
mov
xchg
sub
outsb
jle
fwait
mov
or
fldcw
shll
subl
jg
push
or
test
xchg
cmc
aas
inc
jmp
cmc
xchg
add
clc
insb
sbb
std
or
xchg
dec
jecxz
or
test
adc
test
adc
jae
mov
adc
add
fidivl
rcrl
jg
fsubs
push
cmp
jg
xor
jle
mov
xor
jl
adc
xchg
xlat
mov
test
adc
sub
dec
iret
addr16
and
stos
pop
outsl
mov
cmc
imulb
mov
mov
ret
lock
pop
lock
loop
movsb
enter
addb
shlb
sar
movsl
test
jbe
push
pop
xchg
rcll
dec
scas
lods
stc
sub
mov
daa
lret
imul
pop
sub
jecxz
cmpsb
shl
das
xchg
inc
add
jnp
and
cmp
lahf
cmpsl
dec
mov
mov
pop
fsubrs
sub
mov
mov
xor
sub
push
scas
mov
test
js
dec
mov
lock
cmpsb
cmp
insb
mov
xchg
ficompl
cmpsl
in
and
fidivs
mov
push
push
sub
pop
movsl
das
andb
or
jle
fisttpll
jbe
cmpsb
movsb
adc
jge
call
fucomp
test
int
sub
fwait
jb
jle
inc
pop
jmp
mov
lret
repz
push
clc
arpl
bound
test
mov
in
xor
push
lret
sbb
mov
lock
adc
sbb
ret
stc
adc
sarl
aaa
jecxz
add
mov
push
xchg
or
sar
or
mov
outsb
lods
push
pop
fstl
pop
push
fwait
mov
fistl
je
lcall
and
or
mov
test
mov
aad
mov
mov
jle
lods
stos
adc
push
rolb
ja
addl
lret
inc
incl
push
sbb
xor
or
jns
or
fimuls
mov
loope
jnp
inc
enter
fistpll
mov
mov
pop
dec
out
dec
fs
nop
xchg
lcall
jle
xor
xor
inc
repnz
fs
dec
xor
insl
push
jae
adc
dec
xchg
xchg
mov
test
cld
popa
hlt
dec
bound
aaa
or
outsl
lahf
sahf
cmc
mov
sub
push
rorl
nop
outsl
sub
sbb
sti
lock
inc
stc
and
mov
mov
jo
or
push
scas
js
int
es
mov
inc
xchg
cmc
cmpsl
lock
and
insb
mov
push
adc
bnd
mov
add
ret
dec
xor
sahf
ds
pop
mov
daa
mov
repnz
lods
sub
loope
jno
iret
loopne
dec
push
sbb
jo
push
xchg
push
pop
xor
jmp
cmp
jge
inc
cmp
les
call
push
stc
das
das
iret
loop
addr16
jmp
ja
scas
aaa
test
popf
pop
jo
movsb
push
aas
inc
jmp
fstps
loop
sub
lods
cmp
and
clc
lret
divb
xchg
pop
xor
inc
pop
pop
outsb
mov
cmp
jecxz
flds
and
add
mov
push
add
repz
adc
pushf
test
scas
jmp
and
sbb
inc
flds
ja
mov
inc
out
sbb
testl
gs
pop
cmp
sbb
lcall
outsb
jne
push
cwtl
xchg
dec
out
xchg
push
or
mov
js
ss
lds
xor
pop
inc
inc
mov
fcoml
jmp
or
outsl
loop
push
pop
inc
fisttpll
dec
mov
mov
pop
mov
fsts
cmp
movl
sub
or
movsb
pop
xchg
aas
mov
jl
loope
popa
push
push
leave
out
sub
es
aas
push
mov
in
in
and
adc
in
arpl
adc
add
stos
jge
mov
push
dec
pop
cmp
lcall
rorl
push
mov
int3
loop
ret
push
test
mov
adc
js,pt
mov
add
mov
out
adc
subl
xor
gs
push
movb
scas
popf
ret
and
sbb
cmp
je
mov
out
hlt
outsl
outsb
jns
nop
rorl
lds
mov
push
xlat
lmsw
insb
lea
xchg
pop
outsb
pusha
and
ss
add
add
sbb
pop
into
lcall
dec
dec
pop
sub
xchg
pop
sbb
addl
mov
test
aad
mov
lds
dec
lret
test
dec
lret
insb
loopne
dec
and
ja
loopne
hlt
lahf
or
xchg
sarl
mov
lods
mov
push
out
pop
inc
stos
mov
fs
mov
mov
add
sbb
addb
mov
push
cld
xor
and
xchg
icebp
jbe
mov
mov
aas
std
icebp
xlat
mov
sbb
sarl
cmpsb
mov
cmp
mov
nop
mov
dec
sub
jne
outsb
in
sbb
jnp
jecxz
or
test
push
xlat
dec
out
aas
adc
out
lds
xor
cmp
bound
jecxz
call
aas
aaa
or
mov
cwtl
loop
bound
add
xchg
les
mov
pop
dec
xchg
cmp
lret
pop
and
inc
mov
adc
movsl
push
jnp
sub
sbb
addb
roll
or
push
and
xor
xchg
pop
mov
push
adc
sbb
repnz
js
and
je
add
stos
jge
sbb
sub
mov
stc
ret
adc
dec
stos
add
xor
jbe
jmp
dec
cwtl
pop
or
mov
repz
push
add
test
mov
cmp
loop
lods
scas
jge,pt
cltd
mov
pop
jl
pop
and
add
push
nop
push
nop
aaa
loop
add
cmpsl
hlt
or
pop
push
xlat
sbb
mov
adcl
push
and
or
xor
in
inc
leave
push
add
jb
pop
inc
inc
jno
cmp
dec
mov
lods
dec
push
pop
or
jnp
mov
lods
inc
ret
dec
add
mov
push
mov
adc
pop
cmp
call
or
dec
nop
icebp
jo
js
test
jb
int
cmc
sti
jae
and
cs
or
aas
mov
mov
adc
jecxz
pop
jl
addr16
xor
fidivl
arpl
enter
addr16
mov
add
popa
push
ss
aas
xor
loopne
mov
cmp
repnz
jmp
mov
cmp
cmpsl
enter
stc
inc
jge
gs
iret
push
xor
add
pop
push
jnp
mov
cwtl
aas
pop
movsb
fisttpll
iret
sbb
and
lea
add
lods
sbb
xchg
sbb
xchg
pop
addb
jg,pt
bound
add
jmp
imul
cld
inc
or
enter
jmp
push
inc
js
adc
arpl
or
call
mov
mov
sbb
mov
setns
inc
push
sbb
or
sub
push
dec
icebp
rcl
adc
xchg
jmp
jle
aam
dec
cmpsl
sarb
xchg
aam
fstl
push
fsubs
int
mov
jno
je
pop
shrl
js
xor
pop
iret
inc
leave
das
adc
sub
add
mov
orb
leave
daa
add
fisubrs
push
pop
lds
mov
outsb
ret
pop
pop
mov
les
push
mov
mov
cwtl
je
jns
dec
jbe
fdiv
cld
in
fcoml
loope
pusha
pop
movsl
mov
int
enter
je
outsl
std
icebp
into
cs
push
aaa
push
push
add
pop
imul
in
das
test
movl
inc
jae
cmpb
ret
rorb
dec
xor
cmp
inc
mov
adc
mov
mov
add
sbb
inc
inc
dec
jne
out
or
sahf
sbb
sbb
sarb
sub
jbe
sbb
mov
lea
sbb
or
sbb
sahf
adc
inc
xchg
sub
xchg
lea
cmc
jo
xor
mov
lods
nop
sub
jno
mov
jnp
fildll
leave
loopne
sub
adc
jbe
loop
pop
cs
int3
xor
aaa
insb
nop
in
gs
testb
xacquire
fucomi
jecxz
dec
int
jmp
loope
arpl
aad
sub
jb
std
jae
ficoml
adc
xchg
mov
jmp
or
inc
pushf
cltd
jge
out
pop
cmp
fstpl
icebp
incl
add
mov
and
add
mov
add
add
inc
movsl
dec
cmp
ss
or
js
inc
aas
push
mov
outsb
sbb
dec
adc
jmp
fadds
scas
rcr
subb
ljmp
cltd
mov
sub
ret
out
xor
ret
lcall
stos
add
inc
aad
orb
pop
inc
inc
sub
enter
inc
pushf
movsb
aad
mov
rcrl
push
loop
sub
push
push
arpl
ja
sbb
loop
ficompl
inc
sbb
stos
cwtl
nop
aam
repz
fwait
sub
pop
fwait
dec
cmp
out
fisubrs
fs
dec
cli
sub
daa
jns
push
mov
adc
test
aas
sti
mov
jnp
insl
jp
int
lods
popf
sbb
data16
aaa
jmp
push
mov
lock
scas
movsl
out
push
mov
cmpsl
cmp
sub
lret
push
pop
jb
and
cmp
push
notw
lret
into
xchg
loopne
cmp
aas
push
push
adc
pop
daa
jecxz
cmpsl
adc
rolb
push
popl
pop
movsl
add
sub
sub
test
or
push
mov
cmpsb
push
in
notb
movsb
insb
in
in
xchg
add
iret
stc
andl
add
ret
mov
fdivs
pop
sbb
iret
mov
mov
ret
add
call
push
in
xor
xor
and
inc
scas
pop
insb
ja
in
fsubrs
inc
add
jnp
lcall
mulb
xor
out
mov
mov
mov
fistpl
fadd
push
add
loop
jbe
ror
pop
ds
stc
push
xor
lods
mov
int3
mov
mov
fmuls
and
jne
sbb
xor
pusha
adc
mov
mov
mov
enter
leave
es
in
jne
fistpl
xor
cltd
jns
lahf
push
or
dec
push
shl
mov
xlat
addr16
pop
mov
mov
dec
pusha
push
sbb
pop
cltd
aad
lods
dec
xor
and
jmp
stos
xchg
test
xchg
and
mov
jecxz
int3
pop
mov
jg
sbb
je
add
push
xchg
inc
push
sub
aaa
and
in
mov
or
push
int3
pop
fsubrl
arpl
in
dec
dec
bound
mov
inc
push
lahf
arpl
xchg
dec
sub
jg
mov
jg
sub
and
and
sti
shr
in
jecxz
dec
jmp
adc
int
clc
xchg
scas
mov
rcll
int
scas
mov
pop
mov
push
add
mov
jo
jg
xchg
and
sbb
jnp
lret
ret
cltd
inc
cs
xchg
sti
out
es
mov
sbb
rol
mov
push
dec
cmp
popf
data16
jp
sbb
outsl
rorb
roll
in
ljmp
inc
imul
mul
mov
out
dec
mov
std
add
push
stos
adc
add
ss
sub
out
std
scas
mov
add
aaa
shlb
lret
jns
popf
es
push
mov
pop
sub
mov
or
hlt
adc
icebp
mov
cmc
lods
dec
pop
pop
hlt
sbb
xchg
push
cmp
cli
in
inc
jns
xchg
stc
xchg
pop
pusha
or
data16
sbb
pop
shll
cmpsb
daa
cmpsb
test
int3
push
lods
cmp
cltd
stos
xchg
inc
stos
mov
push
in
loop
pop
sbb
icebp
mov
std
cwtl
insb
out
jle
in
pusha
out
sbb
insl
jmp
jge
xlat
push
pushf
add
jmp
pop
test
lahf
xchg
or
fldl
mov
shrb
mov
sbb
adc
cmpsb
nop
mov
pop
loope
lcall
mov
xlat
inc
mov
das
les
ret
seto
mov
sbb
mov
add
bound
xchg
cwtl
out
pop
loop
mov
and
jo
or
out
sahf
shrl
sbb
mov
push
cmp
jmp
push
inc
lret
in
dec
iret
icebp
ja
fwait
or
mov
popf
sbb
int
add
and
sti
ret
mov
xchg
aad
test
xchg
add
pop
pop
mov
insl
leave
repnz
js
dec
cwtl
movsb
mov
out
pop
mov
push
mov
mov
sbb
gs
cmp
or
popa
pusha
stos
pop
and
das
push
cmp
lret
jno
pop
jnp
repnz
sub
scas
add
mov
sbb
add
gs
or
pop
pop
sbb
out
sbb
inc
stos
push
sub
loope
push
and
jb
sbb
rcrl
push
jmp
pop
out
ret
and
push
xchg
test
push
mov
cli
std
xchg
mov
movsl
inc
pop
sub
je
mov
mov
roll
and
mov
mov
cs
sbb
mov
in
test
enter
dec
and
pop
or
or
xchg
push
push
cmp
in
std
cltd
nop
sub
fs
push
repz
fsts
cld
xchg
dec
insl
gs
lea
jne
stos
lods
addr16
push
xchg
dec
out
dec
les
push
in
in
push
sbb
movsl
push
add
sub
xchg
or
gs
nop
int
xor
sub
adc
sbb
sbb
mov
test
xchg
mov
decb
adc
scas
adc
cmp
negb
xchg
push
testl
shll
scas
cmp
add
sarb
jno
loope
sbb
dec
das
add
jmp
icebp
xor
sub
mov
cmp
loope
mov
xchg
fwait
pop
outsb
pop
sbb
repnz
pop
pop
rclb
sbb
jmp
mov
movsl
dec
arpl
mov
mov
stos
fldenv
stos
mov
addb
pusha
cwtl
insl
lock
mov
push
sbb
push
push
mov
dec
jb
push
inc
es
and
les
adcl
mov
js
ds
lock
scas
dec
sub
pop
mov
pop
mov
xor
mov
dec
lcall
lds
leave
mov
add
cmp
clc
mov
aas
movsl
out
push
jl
shlb
roll
xchg
push
repnz
scas
outsl
cmp
cmpsl
in
cwtl
test
xchg
mov
sbb
movsb
nopl
push
mov
aaa
mov
sub
movl
mov
idivl
repz
imull
bound
sbb
psllw
addl
mov
xchg
jbe
pop
clc
nop
dec
ljmp
xchg
sbb
lds
sub
mov
ucomiss
fmuls
pop
xchg
cmp
dec
lock
movsb
add
cmc
or
insl
cmp
das
out
xchg
push
dec
add
lea
sub
into
in
mov
popa
adc
imul
push
bound
test
push
aas
and
add
jecxz
ljmp
lock
xchg
pusha
leave
mov
test
call
aaa
addr16
mov
mov
lahf
pop
and
or
mov
inc
pop
jnp
pop
mov
flds
sbb
lods
iret
lds
mov
ret
in
scas
jae
pop
pop
jnp
cmpsl
daa
lea
push
xchg
std
add
cmp
cmp
clc
cltd
xchg
mov
clc
lock
cmp
mul
insb
cmpsl
test
mov
mov
xor
cmp
sbb
aaa
inc
aas
push
xor
in
mov
fcomi
cmp
adc
push
lret
sbb
inc
cmp
mov
push
jle
cmp
fwait
xor
fldl
ret
and
xor
fucomip
sub
xor
lahf
test
imul
arpl
push
je
or
es
dec
mov
iret
add
into
adc
aas
loopne
sbb
fdivl
ret
rcll
clc
sbb
sahf
adc
arpl
push
and
cmc
movsl
lds
mov
xor
cli
jae
notb
dec
pop
add
incl
nop
and
icebp
cmova
int3
adc
inc
scas
cmc
jmp
test
sbb
dec
das
xchg
aam
mov
sbb
test
lcall
lea
sbb
mov
dec
sub
add
fisubl
xor
lcall
add
cmpsl
and
push
or
mov
add
cmp
loopne
inc
rol
dec
in
sbb
pop
mov
mov
rclb
movsb
xor
adc
dec
push
xchg
pop
pop
into
fidivrs
jmp
ja
popf
add
mov
xchg
lret
notb
jbe
mov
dec
xchg
inc
fcmovbe
roll
adc
xor
out
inc
push
sub
pop
out
mov
cmc
and
xchg
or
in
mov
jnp
lahf
jle
imul
push
es
mov
or
inc
sbb
dec
jecxz
sti
xchg
and
aam
rorb
mov
jle
dec
pusha
aaa
repz
out
adc
fwait
shl
xchg
cmp
add
lcall
out
mov
icebp
jp
push
sarl
sar
bnd
loope
inc
mov
arpl
js
cli
aam
aas
push
pop
loope
imul
pop
scas
xchg
cmp
mov
int3
mov
ljmp
lret
jg
jecxz
add
push
daa
fisubrl
call
loop
adc
adc
xor
push
sbb
inc
lret
iret
cltd
sbb
pop
xchg
pop
test
and
push
jle
mov
sub
or
stos
cmp
cmp
push
loopne
jo
ret
jecxz
xchg
push
fidivrl
imulb
sub
xchg
bound
pop
dec
jecxz
in
arpl
cmp
dec
sub
mov
rorl
cltd
cmpsb
add
daa
repnz
rorl
sub
mov
xor
push
popa
cmp
lds
xor
inc
test
lock
add
mov
push
inc
aam
scas
leave
shl
cmp
aad
mov
aad
and
sbb
mov
dec
lds
pushf
xor
xchg
xchg
stos
sub
adc
scas
loop
mov
fscale
mov
enter
mov
push
sbb
or
cmp
enter
cmpsb
mov
insb
cmpsl
adc
out
repnz
mov
mov
inc
xor
mov
dec
and
lea
xchg
call
push
xchg
xlat
pusha
pushf
lcall
inc
or
lret
sbb
movb
addl
xchg
adc
out
sub
inc
mov
inc
cltd
dec
out
inc
jl
sbb
fcmovnb
pusha
test
cmp
test
jo
pop
std
rclb
xchg
nop
sub
inc
inc
adc
pop
pop
cwtl
jne
push
cmc
test
mov
lahf
jmp
in
das
mov
pop
cmp
in
and
jno
vmwrite
or
dec
fdivrs
cs
sub
stos
adc
dec
movsl
call
stc
adc
xchg
lock
imul
push
sti
mov
mov
idivb
cmp
pop
out
jne
dec
dec
dec
insb
and
in
mov
sub
push
jge
jmp
arpl
out
push
int3
cs
scas
or
add
in
xor
mov
pop
fcmovnbe
iret
bsf
mov
test
cli
mov
inc
jecxz
in
in
in
lods
and
and
dec
mov
subl
add
pop
add
jmp
xor
pop
jbe
lret
jbe
xor
mov
jnp
xchg
cmp
hlt
insb
lods
mov
mov
movsl
jae
mov
sub
sub
test
dec
cmp
add
jno
nop
pop
dec
jbe
adc
ljmp
mov
sbb
sahf
popa
or
sti
and
rclb
repnz
pop
add
adc
ret
inc
daa
xor
add
mov
loope
inc
push
xchg
mov
test
inc
outsl
lcall
xchg
cmp
xchg
mov
mov
mov
in
lcall
and
push
stos
adc
pop
mov
out
leave
addr16
sbb
cli
jne
add
xor
jg
pop
xor
cmpsl
bound
and
push
mov
imul
notl
sub
jns
fsubrl
scas
sub
popf
iret
inc
dec
addr16
insl
mov
out
pop
pushf
sahf
ds
mov
xchg
out
mov
stc
iret
in
mov
leave
gs
incb
xor
cltd
pop
sub
lods
add
int3
gs
jne
cs
jmp
or
mov
jle
dec
mov
hlt
jnp
punpckhwd
and
pop
cmp
xor
add
jae
cmp
jg
add
lods
lea
xor
jo
stos
xchg
push
add
xchg
pop
or
jno
es
enter
jmp
lahf
cmp
cmpsb
ret
mov
jns
sbb
jns
push
arpl
ljmp
jno
iret
std
out
inc
iret
cmpsb
in
mov
and
dec
mov
sbb
or
push
and
mov
test
ret
outsl
pop
xchg
push
sbb
js
sub
loop
andl
subb
push
cs
ss
xchg
inc
jle
sbb
cmp
aaa
jno
xor
leave
push
xchg
add
mull
int3
aas
add
sbb
jg
mov
bound
outsl
lock
rorl
fildll
push
mov
and
pushl
add
mov
sbb
pop
lret
dec
loopne
int
movsl
popa
les
jnp
mov
ss
cmpb
scas
pop
mov
add
dec
test
enter
or
mov
lcall
subl
push
popa
push
jmp
cmp
jmp
and
in
dec
lock
and
aam
jp
hlt
mov
mov
cmc
lret
sbb
aam
adc
addr16
mov
les
add
mov
sub
mov
hlt
nop
sub
outsl
mov
movsb
sbb
cmp
mov
push
jnp
and
jne
pop
std
shll
mov
iret
dec
adc
push
out
adc
fwait
dec
inc
sub
xor
jne
shrl
std
xchg
pop
mov
jnp
push
jae
xchg
cmp
sub
or
jns
jmp
int3
xchg
shll
neg
push
jns
push
jae
mov
add
les
pop
fdivr
mov
fmull
dec
pop
pop
mov
aad
mov
xor
movsb
mov
call
dec
loope
les
and
ret
movsl
pop
leave
pop
pop
aas
arpl
jg
jecxz
movsb
xor
ja
dec
or
in
jae
mov
pop
pop
push
xchg
movsl
ret
int
cld
cmp
xchg
call
stos
fcoms
mov
fidivl
push
sub
imul
popf
xchg
push
and
repnz
mov
jl
js
into
iret
sub
loope
sbb
push
cmp
jb
mov
sbb
jo
xchg
mov
outsb
insl
stos
push
mov
xchg
les
mov
sbb
sub
scas
and
jge
dec
xor
test
mov
sarb
dec
jb
push
les
jae
mov
lea
sbb
sahf
jl
xchg
push
rol
cmp
mov
xor
inc
test
rcrb
sbb
sahf
adc
call
mov
js
cli
mov
lcall
movsl
lds
mov
mov
out
xor
mov
pop
mov
fwait
in
js
sub
or
jnp
inc
lahf
aad
into
pop
aas
sub
xchg
xor
outsl
inc
data16
lds
push
push
sub
or
mov
outsb
mov
adc
cli
pop
dec
outsb
cmp
cmp
testb
lret
imul
mov
sahf
data16
les
loope
cmp
jmp
stos
icebp
outsb
jno
jge
mov
pop
fnstenv
enter
imul
adcl
test
and
dec
scas
lods
fwait
in
xor
insb
jbe
dec
sbb
jo
jge
or
pop
repnz
jle
jns
sahf
ret
int
jmp
int3
jb
notl
aas
jecxz
adc
cmp
test
dec
push
mov
stos
cmp
iret
iret
pop
xorl
xor
nop
sub
pop
sbb
int3
sbb
sub
jle
sbb
jne
jae
add
dec
cli
and
loope
call
out
pop
in
shlb
stc
sbb
movsb
jmp
icebp
add
popa
popa
inc
andl
insl
out
mov
sbb
lcall
ret
ss
cmpsb
ljmp
imul
push
icebp
jnp
sbb
push
inc
flds
pop
push
ffree
leave
xchg
dec
mov
xchg
out
xlat
dec
push
push
ficoml
mov
add
inc
popl
mov
dec
aam
or
pop
lods
cld
loop
fnsave
push
add
les
add
adc
lret
or
fadds
cmp
dec
fwait
clc
cmp
js
test
bsf
mov
rolb
add
push
aaa
dec
lret
mov
or
test
outsb
lds
cmp
xchg
and
xchg
and
sbb
fadd
lods
mov
lea
test
loope
or
sbb
or
mov
sbb
ljmpw
xchg
add
bound
inc
sub
xor
mov
and
lods
inc
cmp
lds
addr16
outsl
pop
lret
imul
pushf
fsubrl
fwait
ljmp
sub
clc
mov
out
add
push
inc
xorb
fistps
dec
xor
lods
bound
int3
and
test
fadds
pop
inc
ret
cmpsl
jbe
sbb
sub
aaa
and
lret
push
or
add
sub
imul
inc
pop
mov
push
mov
sti
jne
adc
cmp
andl
dec
mov
mov
repz
bound
cmp
inc
push
adc
push
sub
out
shlb
mov
or
xor
adc
mov
push
adc
aam
sbb
lahf
fstl
out
mov
std
jbe
orl
dec
xchg
ds
outsb
adc
out
outsl
ljmp
jae
sarb
sbb
xchg
mov
push
xorl
imul
xlat
xchg
sub
inc
aam
jg
pop
xchg
push
and
jno
addr16
sub
pushf
add
adc
scas
insl
pop
xlat
adcl
in
fdivs
testb
addl
imul
ss
xchg
mov
mov
cmp
das
or
lret
mov
xchg
in
dec
call
loopne
inc
ds
cmpsl
mov
jl
leave
jns
push
jbe
and
loope
ss
vphminposuw
cli
repz
icebp
nop
loope
gs
and
sub
jo
arpl
cmp
add
mov
leave
adc
push
and
js
mov
push
lahf
dec
push
xor
roll
xor
dec
or
outsb
subl
and
inc
cmc
movl
inc
jmp
xchg
add
mov
xchg
adc
add
cld
movl
pusha
sub
out
pop
and
les
and
les
rorb
mov
in
mov
lret
jecxz
pop
add
jecxz
xor
cltd
jbe
imul
add
ds
mov
jns
lods
loope
cmp
mov
lock
pop
and
in
flds
icebp
les
mov
xchg
syscall
imul
sti
xor
icebp
mov
sbb
cmp
test
xor
jge
int3
push
sub
call
or
pop
inc
push
xchg
rcrl
ss
movsb
inc
or
xor
mov
cmp
and
in
loop
mov
mov
bound
xchg
repnz
xchg
inc
int
gs
mov
sahf
scas
fisubrl
nop
xor
or
and
fnstenv
leave
push
pop
mov
mov
bound
lods
mov
add
cmc
cltd
cmpsl
mulb
xor
lods
cmp
inc
mov
aaa
mov
cwtl
movd
or
jbe
rcr
and
sahf
loopne
fmull
ss
inc
push
sbb
push
cmpsl
std
mov
rol
stos
aas
pop
in
pop
test
pop
shr
popl
shl
push
cmp
push
ds
scas
in
lret
sbb
imul
sub
adc
bound
and
jae
fidivs
or
dec
inc
ljmp
lods
or
repnz
xchg
mov
shlb
jne
loope
daa
lret
dec
fwait
lea
movb
mov
int
orl
aas
push
dec
cmp
xchg
lcall
popf
jns
scas
or
mov
and
test
push
sbb
inc
pop
aam
pop
iret
push
dec
dec
dec
xor
aam
movsb
xrelease
lret
xchg
sub
sub
xor
test
cld
inc
and
sbb
xchg
or
mov
adc
out
mov
pusha
sbb
mov
mov
xlat
cwtl
out
insb
dec
nop
stos
jnp
pop
cmp
adc
fsubrl
xor
push
hlt
mov
mov
dec
sbb
cwtl
inc
sbb
repz
aam
inc
aas
pop
and
imul
call
fadds
int3
push
pop
pop
xchg
mov
jo
popf
jmp
fwait
mov
mov
mov
pop
arpl
cmpsl
inc
dec
xor
jno
bound
mov
inc
lcall
pop
push
faddl
loopne
fs
sbb
cmpsb
push
out
sub
fisubs
cmpsb
stc
sahf
pop
scas
mov
or
push
outsb
jecxz,pt
gs
jnp
les
inc
mov
and
stos
out
addr16
es
inc
pop
xor
loope
mov
mov
test
jle
nop
mov
mov
sbb
adc
cmp
je
jnp
mov
aaa
lods
subb
scas
jo
out
movsl
cmp
in
sub
jae
dec
out
mov
xor
mov
and
fucomip
mov
loop
push
cmp
add
test
xor
mov
fadds
mov
jg
push
pop
loopne
scas
mov
dec
mov
cmp
fs
add
lret
and
lods
cs
test
sarb
add
cmpsl
idivb
lret
loop
outsb
dec
shll
cmpsl
pushf
and
and
into
sbb
lahf
sub
or
lods
mov
test
ror
jns
pop
inc
shr
mov
fldt
or
call
inc
das
mov
sub
mov
dec
or
and
xor
stc
cwtl
test
cmc
loopne
add
fldcw
stc
stos
add
or
cmp
add
xchg
roll
cmp
fdivl
xchg
jns
xchg
cmp
xchg
daa
mov
add
out
jb
jbe
sub
lcall
jecxz
popf
inc
inc
outsb
inc
jl
sbb
dec
mov
pop
movsl
in
in
es
in
rcrb
mov
jns
aam
not
dec
mov
popa
enter
lds
loope
flds
cmpsb
shl
mov
fstl
add
mov
cwtl
push
scas
call
insb
mov
repnz
push
pop
mov
add
push
cwtl
out
jbe
mov
les
popa
movsb
andl
mov
lcall
inc
jp
lcall
mov
std
push
test
mov
xchg
mov
dec
adc
insl
ret
xchg
mov
xchg
je
sbb
in
jae,pn
rolb
cld
xchg
in
shlb
dec
jnp
gs
xor
xchg
out
inc
inc
fstps
sub
xor
mov
mov
jbe
xchg
adc
lds
pop
adc
xlat
mov
or
and
mov
sbb
inc
loop
lods
nop
xor
push
sub
loopne
jecxz
lahf
lods
xchg
cmc
ficoms
dec
xchg
fidivrs
in
mov
mov
inc
xor
push
pop
cwtl
shrl
mov
pop
out
or
jnp
sub
in
jge
les
out
out
es
call
rcr
data16
and
repz
stos
je
mov
pop
lea
and
mov
mov
test
push
inc
or
pop
out
stos
fs
shlb
out
mov
dec
les
push
ljmp
addr16
push
mov
jmp
cli
mov
xchg
mov
push
lret
dec
jge
pop
ret
shll
xor
insb
imul
and
jne
lea
cmp
loop
xchg
mov
lds
in
push
stos
mov
jb
nop
adc
xor
sub
out
sub
mov
js
cld
in
ljmp
mov
mov
or
add
and
shrb
aad
dec
cwtl
push
sbb
mov
hlt
mov
inc
loopne
xchg
loop
mov
rcl
pop
mov
jecxz
loop
pop
add
std
xchg
imul
cmpb
insb
jecxz
mov
inc
xchg
loopne
mov
cmp
jg
lods
adc
jle
pop
pop
cltd
xchg
push
out
mov
test
repnz
add
mov
adc
add
arpl
sbb
test
sbb
inc
stc
nop
jbe
pop
adc
xchg
inc
int3
mov
movsl
sbb
je
ljmp
mov
sub
inc
dec
int
xchg
xchg
and
and
push
add
xor
cwtl
stc
stos
mov
inc
jae
add
dec
and
movsl
push
testl
mov
js
sub
movsb
adcl
and
ljmp
cli
push
test
test
ljmp
or
pop
lock
push
add
rcrb
mov
push
das
or
xchg
xchg
push
fiadds
mov
or
test
jns
dec
shll
pop
ja
xor
imul
xchg
inc
cmp
pop
push
cs
xchg
jp
jecxz
pop
mov
mov
cmpsl
xlat
sbb
dec
push
mov
sub
ja
add
sahf
mov
test
dec
sbb
aaa
jo
mov
fdivl
xchg
hlt
lock
push
outsl
cmpl
hlt
das
jge
inc
addl
mov
sub
push
xchg
mov
pop
jle
xor
cwtl
shlb
dec
or
pop
add
loop
cmc
mov
xchg
adc
dec
sub
daa
cmp
jno
das
inc
add
popf
adc
fs
adc
orb
xor
mov
cmp
gs
ret
jecxz
out
popa
mov
out
in
lret
shll
fisttpl
mov
jge
adc
out
or
shll
push
movsl
outsb
pop
loope
xchg
in
call
sbb
not
sub
popa
rep
xchg
cmp
enter
mov
jl
enter
and
cs
mov
mov
cmp
cwtl
pop
lds
sbb
sbb
mov
pop
jl
push
and
mov
sbb
fildl
xchg
mov
negb
sbb
inc
push
xchg
jno
aad
xor
jp
movsb
sub
push
inc
or
lods
sahf
jg
inc
ret
int
cld
pop
loopne
mov
add
xchg
outsl
fcoms
popa
fiadds
xchg
adc
seto
and
add
xor
movsl
xchg
arpl
push
and
cli
mov
jecxz
js
outsl
xor
movl
in
sub
push
xor
and
and
jmp
fcoml
enter
jecxz
sub
repnz
push
in
sarb
into
and
inc
std
mov
push
repz
jle
or
cmp
jae
out
andl
inc
add
addr16
scas
pop
fisttps
xlat
test
xchg
sti
jo
sub
xor
pop
fistl
push
adc
and
xchg
iret
in
jecxz
push
je
or
int
iret
js
addr16
push
outsl
das
dec
lock
std
sbb
stc
orb
popa
pop
ds
jl
cmpb
mov
adc
out
mov
js
inc
jp
sbb
mov
lods
mov
stc
dec
xchg
xor
fwait
pop
jp
je
inc
movaps
adc
jp
mov
jo
cmp
mov
cmpsb
xchg
imul
xchg
or
out
mov
pushf
fcmovu
lods
pop
enter
mov
movsb
stos
add
scas
dec
cli
leave
or
push
mov
ficompl
mov
and
mov
ljmp
pop
cwtl
daa
mov
cmpsb
cmp
int3
push
mov
fidivl
pop
push
dec
jns
out
addl
aam
clc
xchg
pop
jmp
das
xchg
jle
loop
mov
adc
jne
mov
and
ret
stos
adc
stos
std
ror
jno
and
repnz
aaa
jb
je
movsb
sbb
dec
cmc
stos
out
js
or
sarl
rcrb
insl
mov
mov
and
mov
adc
and
ds
jno
push
dec
nop
sub
jnp
mov
adc
aad
adc
clc
lock
or
pop
cmp
push
xor
notl
mov
jg
sbb
test
ja
jb
adc
aaa
adc
jae
hlt
fcomps
dec
xchg
dec
dec
arpl
sub
xchg
aas
cmp
popf
arpl
mov
ficoms
repnz
xlat
icebp
fwait
or
ss
insb
jmp
ret
dec
faddl
and
insb
adc
cmp
fstpt
insb
in
aas
fistpll
pop
cld
andl
ss
pop
cmpb
ret
or
aad
mov
mov
push
sub
nop
add
ret
jle
shll
lahf
mov
pushf
lods
jp
sbbl
addl
dec
cmp
out
cmpsl
sub
add
push
mov
push
scas
repz
in
shrb
pop
jnp
pop
xchg
icebp
imul
mov
aas
add
call
sbb
sbb
loopne
lods
xchg
add
add
xchg
popl
pop
xor
cltd
jp
loop
mov
std
in
or
adc
adc
xchg
or
sub
cs
cmpsl
imul
cmc
pop
aam
stc
cwtl
sbb
inc
dec
sub
in
les
sbbl
or
test
xor
cwtl
or
stc
or
adc
lock
jne
xor
mov
dec
xor
stc
push
jbe
dec
stos
cmp
mov
je
jg
push
mov
xchg
jge
cmp
inc
out
adc
add
leave
add
cmp
test
adc
xor
cmp
sub
scas
mov
lock
xchg
daa
sbb
mov
ja
fcomi
jmp
mov
xchg
shl
jmp
int3
shlb
call
push
push
ret
cli
cmp
jbe
out
mov
push
sub
cld
pop
push
and
inc
mov
lret
out
stos
lahf
stos
lds
fdivl
ss
repnz
dec
rclb
popa
out
jle
adc
mov
imul
imul
loopne
jg
sbb
jp
js
out
or
pop
jp
aad
mulb
subl
adc
pop
xchg
or
stos
xor
repnz
lcall
cmpsb
dec
rcl
xchg
addb
ja
mov
push
pusha
sub
cld
stos
mov
scas
inc
adc
outsb
dec
lret
jb
and
repz
pop
sbb
adc
sbb
mov
rep
movsb
inc
push
stos
lock
inc
mov
jb
fldl
xchg
pop
insl
adc
bound
addr16
cmp
push
dec
pop
cltd
push
popf
pop
adc
das
mov
push
subl
mov
loope
jae
cmp
cmpsl
test
mov
mov
das
insl
pop
jp
int
movsl
mov
push
je
aas
xchg
addb
sbb
fisttpll
jmp
movsb
mov
std
jae
inc
testl
push
sbb
push
not
add
xor
je
js
scas
xor
cmp
stos
sub
lahf
inc
mov
inc
adcl
sbb
cwtl
adc
test
idiv
jmp
clc
gs
mov
lahf
int3
out
stos
clc
pop
cmpsl
daa
gs
js
icebp
jecxz
stos
fcoml
outsl
ds
jb
insb
lret
repz
roll
lret
jle
mov
adc
xchg
jl
jecxz
inc
pop
movsw
pop
out
mov
inc
sub
inc
mov
jmp
mov
dec
out
testl
adc
push
in
fimuls
sbb
mov
loopne
or
cmpsl
stc
cltd
mov
mov
iret
icebp
aam
fwait
dec
add
enterw
or
mov
sub
bound
loopne
and
and
xchg
fbstp
loopne
imul
adc
mov
out
clc
mov
xor
jg
push
pushf
lock
mov
loopne
aad
imul
test
leave
mov
adc
cs
or
and
cmp
xor
icebp
jge
pop
out
xor
pop
notl
loope
in
stc
lds
sbb
mov
mov
loop
jnp
xchg
add
lret
ja
or
cltd
stc
insl
or
xchg
dec
cwtl
mov
jmp
cmp
pusha
popa
sub
jne
or
ret
in
out
sub
out
int3
push
stos
hlt
dec
or
hlt
pop
pushf
test
jge
int3
sub
jb
mov
hlt
adc
jle
inc
hlt
inc
xor
ljmp
push
les
scas
xchg
and
dec
dec
and
sbb
pop
mov
test
ficomps
fldenv
cld
jle
mov
push
xchg
test
adc
jmp
mov
jg
jl
push
mov
aam
pop
push
or
js
mov
insb
in
test
js
notl
dec
mov
push
dec
test
adc
negb
enter
nop
andl
call
test
sbb
xchg
and
mov
out
mulb
xor
push
mov
jb
pop
mov
in
sbb
inc
shr
icebp
mov
andl
roll
scas
jge
fldenv
or
shll
push
push
mov
insl
imul
pushf
outsb
sub
dec
idivb
add
dec
stc
pop
dec
gs
xor
or
icebp
repz
in
inc
leave
mov
sbb
jmp
and
divb
mov
xchg
mov
push
outsb
lock
idiv
enter
in
out
mov
filds
jge
sar
sahf
orl
data16
jnp
xor
mov
call
mov
icebp
imul
jns
imul
mov
test
and
clc
mov
sbb
ss
sbb
pop
xchg
pop
dec
sahf
adc
inc
push
call
xchg
sub
daa
cmp
sti
push
inc
inc
lock
mov
fcompl
dec
sub
in
pop
fisubl
shl
insb
cs
shl
or
push
test
jo
arpl
jne
dec
addr16
xchg
lret
mov
jecxz
pusha
xchg
clc
inc
jbe
ljmp
repnz
insb
mov
mov
and
pop
and
jae
push
mov
jle
and
push
cmpsb
es
sub
popa
or
xchg
mov
test
lods
and
adc
inc
cld
sbb
add
sbb
pop
mov
addr16
cmp
cmpsl
xchg
sub
movsl
push
stc
dec
dec
rcrl
cld
sbbl
cmpsb
addb
jbe
mov
sti
pop
cld
in
mov
andb
jno
fisubrs
push
inc
mov
nop
scas
pop
jp
loop
mov
int3
scas
or
out
pop
sbb
shr
lret
and
mov
fldenv
movsb
mov
outsl
pop
ss
loop
and
xchg
shrb
and
push
pop
mov
mov
es
xchg
lea
hlt
fwait
and
jmp
inc
push
xchg
xchg
xor
addb
inc
inc
inc
outsb
ja
fidivl
jbe
fwait
jecxz
out
iret
inc
mov
cmp
dec
xor
pop
lds
aaa
dec
mov
mov
mov
jge
out
icebp
test
add
aad
cmp
jnp
xchg
adcb
fldenv
push
cmp
mov
sbb
jl
stos
inc
dec
pop
cmp
dec
inc
inc
cld
in
mov
and
pop
fnstsw
shrb
dec
shl
jne
mov
jp
movb
mov
mov
push
gs
les
sbb
jle
cmp
pushf
or
int
fadds
int
clc
xor
mov
sub
movsb
pop
lahf
pop
jo
adc
lds
in
mov
cmp
pusha
outsl
das
outsl
add
js
arpl
xorl
popf
or
fwait
xchg
outsb
push
dec
cmc
fsubrs
adc
push
cmc
cmc
sub
dec
mov
add
stos
cmc
pusha
lret
std
xchg
mov
movsb
jb
repnz
sub
lods
pop
xor
jg
jae
push
cmp
xor
sti
jae
dec
xchg
je
pop
dec
out
ja
dec
shrl
ret
lea
rcrl
mov
ljmp
pop
notb
lock
outsl
shll
rcrb
add
outsl
xor
jo
in
lods
mov
mov
sbb
clc
icebp
add
sub
loop
inc
dec
jbe
pop
inc
imul
or
cld
ftst
jae
out
in
sbb
mov
add
add
xor
jns
inc
data16
rcll
push
jmp
test
lods
mov
arpl
sub
mov
insb
cmp
push
bnd
lock
dec
test
xchg
cmp
jno
pop
arpl
rcll
bswap
divb
rcll
dec
arpl
mul
sbb
push
mov
inc
das
cli
cmp
push
xlat
loop
pop
imul
stos
shl
outsl
or
je
mov
and
or
int
stos
cltd
mov
daa
jecxz
scas
jbe
test
push
jmp
popf
lret
cmp
sbb
aad
pop
sbb
aaa
mov
cwtl
scas
jl
mov
dec
js
dec
add
in
sbb
cmc
push
les
lret
mov
jb
adc
gs
sar
push
dec
add
push
arpl
sub
js
cwtl
orb
adc
jg
and
out
inc
dec
adc
sub
testl
and
pop
dec
inc
ja
pop
pop
add
push
rcrl
scas
stos
js
adc
jmp
mov
std
xchg
lock
mov
cs
cmp
pop
bnd
std
inc
cmp
dec
mov
adc
jbe
pop
stc
sub
js
or
push
sub
sub
add
mov
bound
xchg
mov
sub
fldenv
inc
pop
xchg
lret
mov
push
pop
hlt
xchg
push
test
outsb
jns
mov
inc
pop
xor
shlb
pusha
cmp
lret
xor
aad
mov
pop
xchg
mov
popl
rcll
stos
mov
xlat
adc
mov
mov
repnz
pop
sub
lahf
out
pushf
rorl
nop
jle
popf
int
lret
in
jge
mov
jle
sbb
popf
mov
cmp
push
incl
push
push
scas
mov
repz
test
ss
cld
leave
pushf
pop
jge
ja
popa
xchg
clc
leave
sub
ds
movsw
out
scas
rep
cmp
int
adc
aas
cmpsl
inc
dec
cltd
jne
push
sbb
lcall
rclb
fs
sub
push
aam
daa
lods
out
mov
sub
push
and
sub
aas
stos
mov
push
xor
loopne
and
mov
jmp
inc
sbb
into
lcall
and
or
mov
push
inc
mov
loope
inc
cltd
stc
mov
sub
jp
jne
out
dec
nop
sbbb
lods
pop
aaa
lret
mov
sub
inc
sub
dec
sub
mov
jne
in
int3
xchg
mov
or
dec
dec
lret
jne
push
jecxz
lahf
jmp
cmp
test
xchg
push
or
inc
adc
fwait
mov
es
fsts
jmp
adc
mov
lcall
ljmp
dec
push
les
xlat
mov
out
rorl
outsb
xchg
lret
inc
out
loop
rolb
bnd
jne
aam
out
cltd
cmpb
inc
clc
stc
int3
fistpll
mov
jo
and
sti
jecxz
rol
jbe
mov
xchg
fsubrl
idivb
mov
xchg
sbb
pop
jge
pop
enter
mov
dec
decb
movsb
cld
sub
cli
fnstenv
or
pop
dec
cmpsb
xchg
test
test
add
sub
pop
fiadds
out
and
orl
cmpsb
inc
pop
inc
cmp
mov
cmp
jbe
jp
adc
shl
insl
lret
xchg
mov
mov
xchg
jp
ljmp
arpl
mov
cli
les
xor
xlat
in
ljmp
stos
adc
scas
and
mov
or
xor
sub
inc
int
mov
leave
xchg
clc
movsl
inc
repnz
add
inc
gs
dec
xchg
idiv
cmp
xchg
inc
mov
dec
push
lds
xchg
cs
push
nop
ja
push
xchg
cli
adc
loope
into
test
cs
xlat
dec
or
lea
sub
add
adc
dec
inc
loope
add
pop
loope
jmp
xor
in
fistpl
out
sbb
cmp
test
cld
movsl
add
out
lock
lock
loopne
pop
stc
and
inc
mov
sub
pop
mov
fwait
test
aaa
test
mov
test
cmp
adc
mov
leave
jp
ss
push
rcll
mov
aas
and
test
jmp
adc
repz
mov
jne
dec
cli
sbb
cmc
daa
cmp
int3
push
ss
test
mov
nop
ja
add
clc
imul
and
push
loope
push
mov
ret
xorb
fisubrs
fcompl
xchg
pop
mov
cmp
sub
lret
jb
bound
sub
push
dec
add
xchg
and
frstor
pop
mov
or
sub
lahf
clc
adc
mov
add
adc
popf
daa
lods
pushf
out
sbb
jns
or
fistpll
mov
xchg
ret
testl
es
adc
dec
mov
mov
bound
pusha
out
push
dec
inc
push
adc
into
or
sbb
dec
fadd
fists
push
mov
loopne
inc
push
dec
jnp
stos
test
sub
es
jle
pop
nop
lods
jb
jmp
adc
shrl
loopne
and
dec
jle
inc
rolb
push
js
and
pop
mov
xor
cmp
cmpl
lds
add
mov
jg
xchg
mov
pop
out
sub
or
xor
cmpl
out
ds
call
call
fdivs
jae
insb
adc
xchg
adcl
add
test
pop
push
pop
inc
and
inc
or
add
lcall
fs
dec
imulb
fstpl
andb
sbb
xchg
loopne
loope
jb
pop
daa
notb
clc
subl
add
pusha
adc
and
adc
addb
imul
js
xchg
mov
in
rorl
jecxz
mov
push
xor
stos
sbb
push
push
notb
cmpsb
shlb
sbb
pop
nop
push
lret
sbb
cli
inc
and
call
pop
ja
jne
and
mov
stos
mov
fistps
sub
jne
lahf
insl
rcrl
adc
pop
loop
ss
xchg
stc
cmpb
notl
leave
inc
jmp
mov
push
shrl
mov
addl
xor
insl
pop
mov
bnd
jmp
adc
fidivl
jnp
adc
push
in
fstpl
inc
xor
xor
jb
popf
andb
cld
into
aad
sbb
cmp
jno
add
ljmp
loope
mov
xchg
sbb
imul
push
mov
mov
aam
aam
mov
inc
test
data16
mov
rcrb
mov
add
insl
int
inc
xor
ljmp
aas
mov
jb
inc
lea
int3
pop
rcll
mov
std
cmp
cmp
dec
sbb
mov
add
sbb
cmp
sbb
jle
insb
cli
xchg
rclb
pusha
and
mov
fadd
mov
fsubl
sarb
sbb
lahf
outsl
dec
insl
add
lods
dec
fldl2e
sahf
in
pop
mov
inc
in
xchg
popa
adc
sub
lcall
jbe
cmp
lea
or
outsl
imul
test
push
pop
pop
pop
or
repnz
add
mov
sbb
pop
jne
xchg
fisttps
lods
adc
sub
iret
mov
and
and
xchg
add
adc
xchg
and
cmp
pop
loop
push
mov
xchg
lods
data16
sbb
cmp
push
sub
mov
orb
or
mov
push
mov
mov
aaa
dec
data16
add
lret
inc
push
add
pop
mov
mov
add
or
adc
out
les
sbb
push
jge
dec
test
or
out
and
xchg
es
outsb
inc
cwtl
enter
ficompl
adc
lcall
jl
mov
aad
push
push
mov
dec
in
push
sar
std
adc
pop
push
adc
adc
mov
in
mov
inc
inc
dec
loop
test
fcomps
test
jmp
mov
les
shll
arpl
mov
xor
imul
or
loop
test
stos
arpl
mov
adc
pop
test
loope
std
movsb
mov
in
cmpsl
in
lea
arpl
jl
cmpsl
fnstcw
les
xorl
movl
cmp
icebp
jecxz
dec
fs
inc
xor
test
or
jl
aam
push
gs
add
jns
fadds
cmpsb
pop
mov
movsl
sbb
pusha
in
sbb
dec
mov
jle
add
inc
sub
ret
inc
and
mov
sahf
pop
enter
sbb
fmul
in
shlb
je
fcmovbe
outsb
inc
xchg
dec
cmp
jae
imul
dec
or
add
cmpsl
dec
ds
lahf
mov
enter
sbb
jg
arpl
mov
pop
paddw
xchg
jno
scas
adc
lds
loope
xchg
aam
and
hlt
cmpsb
mov
neg
push
mov
fdivs
icebp
push
sub
pop
xchg
fbld
sub
test
pusha
sahf
push
aad
stos
xor
aam
call
or
dec
bound
in
adc
stc
push
mov
mov
insb
add
mov
mov
sub
sub
test
xchg
lahf
cmp
jmp
int3
cmpsb
in
nop
sbb
clc
lds
jno
in
cmp
or
dec
cmp
enter
jg
pop
sbb
mov
add
cltd
rcll
add
fisubrs
loope
adc
mov
leave
lods
mov
dec
lods
xor
fst
mov
mov
sbb
mov
xchg
lcall
jl
or
arpl
inc
push
xor
dec
lods
inc
xlat
mov
inc
adc
sub
inc
pop
and
and
sub
in
push
mov
sub
pop
push
lock
xor
divb
dec
js
dec
or
aad
stc
lea
leave
lret
jne
mov
add
cmp
cmp
sbb
mov
xchg
arpl
push
pushf
push
leave
imul
rcrl
ds
jecxz
mov
push
or
movsl
movsb
sub
inc
push
imul
mov
add
sbb
sarl
insl
jae
stos
je
ljmp
shl
cmp
mov
mov
mov
push
dec
cli
ret
mov
idivb
test
orb
scas
insb
xchg
loop
stc
jo
push
aad
cli
jns
mov
or
and
dec
loopne
bound
xor
ja
bound
inc
ficompl
xchg
rcrb
xor
cmpsl
test
stc
push
sbb
push
sbbb
inc
xchg
jge
popf
adc
jmp
lods
nop
insb
mov
pop
lods
push
shlb
cltd
adc
in
ret
fs
sbb
adcb
xorl
add
jge
loopne
int
inc
ret
test
add
dec
arpl
in
or
and
aas
push
inc
pop
test
aaa
aam
sahf
cmp
add
hlt
cmp
cwtl
add
cmpsl
ficompl
dec
adc
aaa
imul
lret
fwait
jbe
push
and
xor
pop
push
cltd
jg
xchg
xchg
inc
mov
bound
mov
loop
sti
sub
push
fnstenv
mov
arpl
mov
dec
push
fcoml
orb
inc
out
iret
movsb
jp
hlt
add
xchg
push
aaa
adc
push
mov
std
xor
dec
enter
push
ss
add
xchg
pop
test
cli
lret
xchg
into
and
and
dec
mov
sub
pop
mov
mov
stc
cmp
and
movsb
mov
out
enter
jbe
repnz
inc
aaa
je
call
xchg
call
inc
in
push
sbb
pop
pop
pusha
cmpsl
inc
lods
mov
pop
and
pop
mov
inc
push
add
addr16
out
jge
and
daa
xchg
lock
xor
add
out
pop
push
shll
notb
inc
aad
xor
cwtl
mov
mov
mov
dec
mov
paddd
or
ja
mov
bound
sahf
push
lcall
push
fdivrs
or
jecxz
jge
outsl
clc
or
sub
or
out
jns
add
push
data16
dec
push
rcll
cmpl
push
scas
fstps
sub
dec
ja
rorl
ja
dec
xor
add
mov
into
xchg
aam
mulb
fisttpll
cs
insl
jae
lahf
pop
dec
dec
dec
fsts
mov
call
loope
sub
push
or
pop
dec
and
fcomi
mov
cmp
push
pop
cmp
lahf
jge
push
and
mov
inc
mov
rorl
sub
filds
stos
lcall
sbb
stos
and
cmp
cmp
cmp
andl
paddq
lods
mov
fucomi
sbb
movsb
inc
add
pop
mov
cmp
adc
and
push
jo
fildll
pop
dec
into
scas
dec
loope
xlat
out
fcom
dec
jecxz
scas
leave
adc
add
xor
out
movsl
js
pop
in
cmpsl
mov
push
jae
inc
insl
mov
mov
lcall
push
inc
dec
aas
fmul
dec
sbb
insl
cmp
sub
mov
mov
enter
mov
rcr
adc
jg
push
loopne
xor
add
fs
leave
adc
jne
insl
dec
lds
adc
gs
jmp
ds
shll
adcb
out
jb
mov
pop
int
insl
ljmp
adc
ret
neg
add
stos
fisttps
mov
repz
push
das
push
lods
jbe
xchg
std
pop
add
mov
pop
lret
xchg
das
aam
enter
jge
xor
dec
roll
cmp
scas
pop
dec
fisttpll
ss
fxch
jl
pushl
push
aad
pop
mov
sti
jns
iret
cwtl
stos
mov
or
std
ljmp
into
sbb
inc
std
adcl
cmc
add
repz
in
mov
testb
mov
fucomp
xor
cmp
push
xor
adc
cltd
cmpb
jl
xchg
mov
stc
or
jnp
stc
enter
mov
xchg
sbb
mov
push
jecxz
sub
outsb
cmp
rcrl
cltd
arpl
pop
cmp
xchg
int
mov
xchg
js
int
mov
sbb
sub
sub
inc
push
adc
out
dec
inc
nop
push
sub
cs
and
pop
mov
leave
hlt
int
loope
or
xlat
xchg
loope
sub
inc
pop
jb
and
mov
add
int
push
int3
ret
jmp
jecxz
xchg
cmp
test
es
push
sbb
repnz
iret
jl
repnz
push
gs
in
push
cmpsb
fimuls
stc
sub
mov
push
mov
mov
lret
sahf
hlt
cmp
mov
int
testl
jmp
and
mov
loope
jnp
daa
and
cld
mov
lea
or
popf
adc
cmp
mov
xor
push
and
pop
push
xor
inc
mov
smsw
jnp
jle
mov
mov
fs
xchg
xor
mov
sbb
xor
push
cmpsb
stc
mov
out
cs
xor
fstpt
jns
test
fldenv
sbbl
sbb
sub
addr16
jle
push
subl
mov
xor
mov
mov
add
jo
sub
negl
loope
mov
adc
clc
jne
testb
pop
mov
sbb
dec
aad
ror
das
push
pop
and
xor
adc
ficomps
ljmp
xor
adc
in
sub
mov
and
fldt
xchg
aaa
mov
sahf
xor
cmpsl
sbb
adc
adc
movsb
enter
ljmp
pop
imul
jmp
add
stc
test
stos
mov
mov
out
adc
mov
cmp
dec
sub
jb
cmp
cwtl
aad
inc
cmp
sti
stos
adc
push
push
std
fcoms
mov
xlat
fiaddl
rcrb
stc
popa
jne
xor
mov
and
jl
outsb
add
scas
jae
jg
in
mov
cmc
test
pusha
jle
fmuls
daa
cmp
pop
std
mov
cmp
scas
ss
int3
mov
inc
and
push
xor
adc
mov
movaps
sahf
ds
cmp
in
xor
or
sub
pop
or
shlb
sub
or
push
cltd
aam
fsubp
push
cmp
mov
mov
sbb
xchg
leave
jp
loopne
jb
sahf
add
mov
jae
leave
int
lahf
gs
jno
mov
dec
sbb
xor
jge
jle
add
xor
scas
or
and
sub
add
pop
adcb
jmp
js
cmpsb
std
stos
cmp
test
js
xchg
fistpl
rcrl
add
push
stos
fisttpll
xchg
cmp
mov
rorl
inc
mov
out
sub
push
int
sbb
leave
push
clc
sahf
jg
stos
xchg
inc
mov
in
push
jp
lds
add
xrelease
mov
xchg
lods
jle
cwtl
sbb
into
fldl
inc
mov
xchg
or
jecxz
sub
nop
ljmp
mov
pushf
ret
fcmovne
sbbl
lock
js
sub
jnp
daa
out
lahf
pop
inc
add
lret
insl
xchg
out
push
hlt
adc
inc
loopne
cmp
jae
es
and
inc
enter
xor
pop
cmp
inc
push
push
outsl
xchg
loop
push
addr16
scas
int
std
rcl
mov
push
in
test
rcll
pop
add
push
cmp
sub
jb
push
inc
jbe
test
movsb
dec
sti
xchg
xor
insb
inc
lods
adc
sbb
pop
ret
mov
sarl
or
icebp
sub
pop
cld
pop
cmp
jnp
jecxz
sarl
andl
sub
sub
jg
push
add
subl
int3
ds
and
fadds
stos
enter
movsl
sub
data16
popl
sbb
push
lret
cmc
inc
leave
in
imul
xchg
jnp
sbb
mov
inc
mov
lahf
iret
jae
adc
dec
cs
and
inc
insb
jl
jb
xchg
loope
and
stos
push
pop
pop
enter
movsb
in
mov
outsl
cmpsb
mov
adc
sub
xlat
test
lods
insb
out
subb
test
push
insb
inc
shrb
xchg
xlat
inc
sbb
mov
mov
lock
inc
ret
or
shlb
or
sbb
fidivl
dec
lret
jb
fsubrl
je
into
add
int
push
cmp
jle
xlat
xor
add
or
xor
icebp
or
orl
sub
insl
jae
add
paddd
unpckhps
fsubrl
xchg
decb
ja
add
sbb
and
xchg
jbe
lahf
xor
nop
cmpsb
add
push
rcr
mov
sbb
insl
lret
js
fidivs
xchg
fldenv
cs
stos
add
pushf
cmp
jg
cmp
or
pusha
xlat
cmpb
lds
out
mov
pusha
mov
pop
or
sub
and
push
mov
pushf
pop
insb
loop
test
sbb
sbb
call
shlb
cmp
cmp
sar
xor
gs
sbb
jmp
dec
mov
bound
cmc
xor
push
inc
sbb
sub
into
and
fnstenv
sbb
aaa
adc
test
pop
jl
cmpsl
popa
mov
je
arpl
lods
stc
and
mov
orb
mov
mov
iret
ds
add
adc
daa
mov
data16
mov
sub
xchg
test
cmp
inc
mov
adc
push
adc
pop
outsb
inc
testb
mov
movsl
out
sub
cmpsb
jp
clc
std
add
ficompl
sbbl
orl
enter
cli
movsl
mov
mov
or
cmp
lcall
sub
ja
icebp
cmp
inc
adc
mov
jnp
cmp
add
fldl
adc
and
xlat
pop
cmp
imul
notl
jmp
lods
and
cwtl
sarb
dec
jo
lods
lcall
and
popa
pushf
sahf
js
into
psllw
rclb
mov
or
sti
subb
xor
xor
cmp
stc
cmp
add
fstps
out
test
scas
sub
adc
sbb
inc
cmp
into
or
lcall
inc
sahf
movsl
sbb
jne
movups
test
jo
rcl
test
bound
repnz
sub
cmp
fmulp
mov
pop
xor
pop
mov
dec
test
pusha
insl
divb
xor
loope
dec
jns
cmp
mov
rclb
in
jg
mov
jge
xor
jg
cmp
pop
loop
scas
stos
cltd
push
pop
sbb
inc
push
fmuls
mov
not
loope
mov
andl
mov
mov
aas
or
add
daa
adc
mov
stc
icebp
add
push
push
mov
arpl
pop
inc
pop
shrl
popa
repnz
jb
jnp
cmp
inc
cltd
inc
lea
cwtl
cli
mov
push
xchg
add
and
mov
xor
mov
mov
inc
jmp
add
cld
repz
jno,pn
imul
insl
xchg
add
or
into
popa
sbb
data16
jo
in
pop
sbb
insb
ret
pushf
inc
mov
fldcw
and
xor
xchg
dec
je
clc
xor
mov
out
add
test
and
mov
cmp
push
fwait
arpl
push
popa
lods
loope
mov
fs
sub
rorb
or
gs
ffree
pop
xchg
ja
mov
jae
gs
push
scas
cmp
mov
dec
int
std
mov
jl
mov
mov
icebp
mov
das
pop
in
jb
icebp
dec
cmp
inc
push
pop
ret
push
add
test
movsl
xchg
out
or
mov
movsb
mov
adc
adcl
push
mov
pop
sub
mov
pop
fcmovnb
push
aam
dec
insl
insl
push
lods
mov
mov
pop
mov
cld
push
scas
sub
sar
cmpsb
jo
fisubs
cwtl
push
fidivrl
test
inc
shl
lods
push
pop
mov
fs
adc
in
pop
jae
clc
adc
and
cltd
testl
aaa
add
lds
push
int3
fldl
sbb
lock
or
aad
or
xchg
mov
cmpb
jae
std
jns
adc
pop
aas
rcl
sahf
imul
cmp
bound
pop
addr16
out
cmc
fldenv
out
add
jae
icebp
popf
add
cs
inc
pop
out
dec
pop
out
cmp
cwtl
pop
push
push
ss
mov
call
add
inc
int3
cmp
jmp
movsb
push
push
sub
roll
add
xchg
pop
decb
mov
jb
popf
add
loop
cmpl
movsl
and
nop
outsb
mov
gs
push
stos
push
fcoms
push
scas
push
jb
popa
sub
iret
ds
clc
cmp
adc
mov
cmp
xor
add
or
mov
sbb
fimull
push
in
lds
pushf
or
inc
mov
adc
push
and
xchg
and
fisubrs
shl
fistpll
pop
inc
mov
lahf
test
cmc
pop
dec
mov
fsubrs
or
sbb
adc
ljmp
stos
jns
and
cmp
xlat
mov
nop
shl
jb
test
test
fbld
sbb
js
test
lea
jno
lret
sbb
divl
mov
dec
or
xor
aad
shll
pop
mov
bound
mov
andb
sahf
mov
pushf
sahf
fiaddl
jo
jmp
xor
andl
mov
stc
daa
dec
fistpll
daa
popf
xor
add
movsb
xchg
add
scas
mov
pop
movsb
adc
adc
lods
sbb
mov
jae
mov
incl
cmp
inc
and
cmp
inc
jnp
scas
loopne
dec
lock
pusha
sbb
mov
idivb
mov
xor
outsb
or
test
pop
addr16
xchg
jbe
push
dec
aad
jae
inc
lds
and
jle
sbb
imulb
mov
mov
shlb
sbbb
xor
insl
jmp
jl
scas
pop
sbb
sbb
xor
xchg
fldl
sbbl
scas
std
mov
xor
pop
mov
push
jno
xor
push
xor
sub
push
scas
lods
dec
cmp
outsb
dec
and
push
data16
dec
adc
pop
adc
jbe
jg
lea
mov
dec
mov
push
out
pop
lea
dec
push
int
inc
pop
mov
test
test
pop
pushf
xchg
xor
adc
or
repz
test
out
lret
fwait
xor
fisttpll
aam
gs
out
mov
fistps
mov
push
dec
ret
nop
and
pop
cmp
xchg
dec
or
mov
int3
jns
cmp
sub
hlt
mov
outsb
and
imul
inc
mov
test
cld
stos
jne
and
dec
les
js
insb
cmp
xchg
or
sbb
lea
mov
fsubrl
mov
jbe
dec
jnp
imul
push
sbbb
pop
scas
sarl
jno
lock
adc
popf
mov
sub
jle
rcrb
ret
or
mov
push
lahf
lcall
jbe
xor
adc
sahf
test
push
subl
loopne
pop
inc
ffree
mov
gs
xchg
pop
pop
pop
cli
xchg
stos
jno
jns
ja
push
call
jns
sub
ja
cmp
push
adc
stos
cs
mov
or
repz
daa
mov
mov
mull
push
repnz
cmc
clc
mov
test
sbb
stc
xor
fs
test
dec
fwait
and
iret
ss
mov
mov
test
jle
jb
jns
mov
into
pop
cwtl
dec
add
dec
stos
test
cmc
jmp
jo
jne
xchg
iret
fiadds
test
add
and
jle
jmp
mov
dec
rclb
lea
mov
adc
sbb
lods
sub
popf
fmulp
hlt
push
data16
in
je
mov
in
icebp
divl
test
stos
mov
vbroadcasti32x2
loop
adc
sub
cs
sub
adc
into
and
push
push
in
mov
les
sbb
cmp
jo
add
arpl
jne
push
js
fs
loope
pop
push
mov
mov
xchg
fsubrs
mov
push
mov
orb
adc
and
jge
xor
cltd
fsts
cltd
add
leave
or
xchg
out
sub
jmp
xor
cmp
orb
cmpsb
pop
cmp
out
push
push
adc
stc
aas
mov
or
aaa
jae
xor
loop
adc
sbb
dec
call
ficompl
xlat
xchg
addr16
cli
mov
out
cld
ja
cmp
or
adc
xchg
and
cmpsb
mov
pop
xor
push
test
mov
scas
xchg
imul
lret
inc
out
insl
lret
lret
aam
or
xor
rorb
aaa
or
sbb
aas
dec
sbb
testb
xchg
rorb
push
jns
test
lods
cs
pop
mov
mov
and
outsb
sbb
jge
out
sahf
in
or
mov
adc
daa
cmc
das
pop
sub
addl
pop
lds
jnp
sub
pop
cltd
int
ds
jg
pop
pop
cli
shlb
mov
dec
insl
mov
fdivr
mov
push
pop
xchg
inc
mov
and
jle
xchg
jmp
and
imul
inc
lea
ja
mov
fcmovbe
pop
out
push
mov
dec
jns
inc
jae
add
jecxz
mov
xor
loopne
pop
sbb
mov
inc
pushf
sarb
test
and
fsubs
cmpsb
shrl
aas
ja
mov
xchg
jno
xchg
popf
aaa
cmpsb
iret
xchg
scas
clc
fstp
test
decl
adc
fidivl
inc
jmp
pop
cmp
jbe
fldenv
mov
mov
and
test
push
mov
cmc
lds
xor
inc
in
repnz
push
shll
jnp
jbe
xchg
repz
fistpll
xchg
mov
add
xor
popf
mov
fwait
cmp
add
sti
nop
or
mov
inc
sub
dec
fdivs
push
movsb
ret
into
stos
in
push
jl
nop
sub
pop
test
aas
pop
cs
add
mov
jbe
mov
dec
enter
iret
push
mov
loopne
dec
rcrb
sub
std
out
mov
fldcw
lret
adc
sbb
fcmovb
sub
sbb
fnstsw
add
mov
jno
push
dec
shrl
push
xchg
inc
movsl
movsl
dec
jecxz
aam
mov
xor
les
loope
jp
lcall
call
jae
les
sub
xchg
push
add
sub
clc
push
pushl
orl
rclb
push
ljmp
add
xchg
fs
mov
ja
inc
cwtl
push
pop
dec
cmp
push
dec
ret
sbb
jge
dec
push
in
lahf
ret
xchg
add
cli
dec
adc
cmp
lcall
movsl
lds
pop
rcl
mov
pop
push
add
iret
or
das
loope
pop
xor
arpl
xchg
jmp
fisubrs
dec
or
and
sbb
inc
sub
mov
ret
repnz
cmpsl
jle
lahf
and
or
xchg
xchg
jmp
rcll
jmp
mov
cltd
repnz
insb
sub
xor
pop
shl
and
mov
jmp
scas
mov
pop
inc
push
pop
out
xor
push
icebp
std
icebp
repnz
lods
push
mov
and
jge,pn
mov
and
das
cmp
test
cmc
lock
sbb
movsl
push
dec
ficoms
inc
xlat
dec
ret
adc
xor
notb
adc
push
outsl
jmp
add
xchg
sub
leave
inc
pop
int3
movsb
pop
dec
es
xchg
or
push
test
sbb
pop
fsubs
jle
test
ljmp
cmc
sahf
inc
lock
adc
pop
sbb
push
sbb
movsl
popfw
pop
dec
shrl
fstps
push
push
mov
je
sbb
add
fbld
repnz
add
arpl
jne
cli
int3
pop
fs
mov
xchg
mov
adc
jnp
dec
aad
mov
sub
repnz
push
out
fs
jnp
je
repz
lcall
dec
dec
sub
jle
into
sbb
sti
inc
cmc
inc
pop
pop
pop
in
into
jo
mov
sar
popf
scas
jae
inc
sub
dec
es
mov
mov
push
mov
in
add
imul
notb
ret
jmp
pusha
mov
mov
cwtl
sbb
or
daa
outsb
mov
push
pop
mov
mov
mov
fcmovnbe
mov
ja
inc
negl
sbb
jb
pop
fdivl
adc
fstpl
cmp
das
fildll
inc
jle
sbb
call
xchg
cli
jge
xchg
push
push
sarb
ds
inc
pop
inc
call
icebp
mov
jo
iret
testb
orb
mov
lcall
adc
jl
sub
pop
rcrl
cmp
mov
sbb
jge
outsl
mov
or
mov
or
pop
xor
pop
pop
or
jb
xchg
lret
test
pop
mov
push
pop
mov
ss
mov
rcrl
dec
outsl
adc
fs
pop
lock
loopne,pt
out
insl
jmp
arpl
and
psrld
out
sub
inc
outsb
scas
sahf
cmc
jecxz
fcomps
test
adc
jo
add
add
mov
and
dec
mov
xor
sbb
stos
xor
out
aam
test
dec
fnstsw
adc
xor
mov
or
fwait
and
sub
dec
shlb
pop
cmp
out
cmp
shrd
jge
imull
jmp
sbb
or
repnz
mov
add
notl
fcmovb
dec
adc
jge
xchg
lret
xchg
mov
fxch
dec
pop
cld
ret
loopne
shll
mov
out
or
adc
mov
addr16
pop
shr
push
adc
fisttps
mov
mov
sbb
imull
inc
std
shrl
add
sub
aas
imul
cmpsl
repz
pop
aaa
inc
pushf
enter
sub
jecxz
adc
jae
push
pop
lret
ja
or
xchg
mov
cmp
jns
pushf
fidivrl
ret
movsb
inc
aad
loopne
sbb
jb
popf
push
inc
insb
out
xor
adc
mov
and
adc
adc
pop
cmp
push
notb
rorl
sub
movsl
clc
ret
cwtl
outsb
outsl
sbb
xor
pop
mov
pushf
loope
mov
mov
jae
push
push
and
cmpsl
ret
div
sub
popa
loop
push
mov
sbb
fwait
sbb
mov
sbb
insl
notl
jne
sbb
out
xor
jmp
and
icebp
and
inc
cmp
gs
inc
cli
xor
data16
hlt
inc
adc
cmpb
pop
lods
push
in
xchg
sbb
mov
and
inc
sbb
ljmp
aad
pop
push
ljmp
mov
enter
mov
jnp
imul
ret
or
mov
inc
fsubl
fdivrs
ljmp
push
fst
xchg
mov
repnz
mov
mov
insl
mov
adc
xchg
popf
repnz
jg
sahf
testl
jge
stos
jne
dec
fs
fists
mov
int
aaa
enter
orl
stos
test
add
test
scas
cmp
fimull
jb
sahf
mov
cwtl
bound
push
lcall
xor
push
mov
lret
subl
repz
lods
mov
call
add
add
adc
dec
pushl
jge
or
xchg
jecxz
test
popf
xchg
mov
mov
lock
mov
and
jmp
sbb
mov
push
mov
xchg
add
mov
jbe
scas
clc
hlt
push
inc
iret
stc
mov
inc
adc
mov
dec
sbb
addr16
adcl
adc
loop
repnz
cmpsb
mov
mov
addb
in
or
scas
add
jle
add
or
jb
mov
mov
jbe
jns
push
cmc
pop
mov
ret
inc
out
lods
aam
push
mov
lahf
lock
shrb
decb
int
rolb
cmp
sahf
mov
cwtl
adc
jbe
shl
lock
aaa
sub
fcmovne
ds
xchg
out
jg
mov
bsf
mov
js
jne
clc
dec
fsubrl
lods
jmp
push
add
sbb
xchg
adc
daa
jb
xlat
dec
pop
mov
or
icebp
insl
rol
jmp
dec
test
in
aam
clc
aas
push
popf
hlt
xchg
xor
jg
push
adc
int
or
lret
and
add
clc
xchg
outsb
jo
cmp
pop
xchg
dec
vunpcklpd
rclb
insb
add
outsl
jo
adc
dec
inc
adc
and
bound
xor
les
mov
xchg
mov
or
movsl
and
and
mov
scas
sbb
jle
jo
sti
xor
xchg
or
add
mov
mov
cmp
stos
test
mov
cltd
sub
and
fwait
sub
pushf
xchg
and
clc
and
dec
flds
jp
fwait
test
ja
dec
mov
orb
insl
lret
or
and
out
jg
sbb
movsbl
ret
lea
push
and
dec
out
jp
add
sub
mov
cmc
inc
pop
mov
test
add
pop
adc
das
pop
xor
dec
pop
ret
xor
adc
sarl
sub
lea
dec
mov
push
lock
out
jbe
pop
cmp
and
sahf
mov
xor
ret
and
push
call
dec
xor
das
shll
inc
testl
pushf
xchg
out
xor
movsb
mov
adcl
stc
push
iret
and
dec
jecxz
and
inc
push
popa
rcll
jmp
add
out
outsl
out
adc
mov
popf
cltd
lahf
xchg
cmpsl
sti
outsl
lock
data16
test
les
negb
fstl
pop
mov
int3
insb
stos
xchg
mov
mov
dec
add
xchg
push
push
mov
arpl
sbb
stc
imul
adc
xor
and
jo
inc
ret
sub
cmp
xchg
imul
mov
cmc
mov
in
adc
pop
jno
inc
icebp
cwtl
ret
jnp
push
sbb
xorl
or
repnz
cmp
add
test
jo
sbb
mov
lcall
jnp
cmpxchg
xlat
imul
aad
or
inc
ljmp
add
mov
cmp
sub
add
shll
lret
test
dec
inc
in
pop
and
adc
xchg
push
or
inc
popl
scas
push
push
les
mov
call
loopne
or
bound
xchg
dec
pop
stos
mov
pop
testl
std
stc
addr16
cmpsb
es
mov
pop
mov
cwtl
vpandn
mov
add
aad
inc
shlb
and
jno
adc
push
ljmp
andl
in
pushf
aam
ret
icebp
dec
hlt
sbb
icebp
cmc
loope
aam
inc
push
push
sub
inc
sahf
xchg
sbb
adc
loopne
fisttpll
outsl
popf
cwtl
int
lock
mov
loope
jae
mov
fnstsw
scas
push
pop
inc
in
fwait
jnp
incb
push
addl
cmp
or
sub
lods
lods
mov
cltd
sub
mov
lret
inc
outsl
jns
cmp
inc
xor
inc
push
pop
inc
xor
pop
or
std
loope
rorl
inc
dec
jp
xchg
sbb
repz
loope
xor
pop
xchg
test
and
in
stos
test
dec
sbb
out
adc
shrl
lahf
fwait
std
mov
jbe
jl
add
ds
lahf
roll
xchg
jbe
sbb
test
js
push
fidivl
sbb
stos
sar
sbb
and
pop
hlt
dec
imul
add
dec
fld
das
enter
mov
test
out
test
mov
adc
sbb
sbb
push
stos
shl
xchg
jle
.byte
add
add
add
or
add
add
push
add
addb
add
mov
add
js
add
dec
add
add
mov
add
add
or
orb
add
add
in
or
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
inc
fmull
add
add
in
add
add
add
add
add
add
add
fadds
add
je
or
xor
add
in
add
add
add
add
add
add
add
add
add
test
or
xor
add
in
add
add
add
add
add
add
add
sub
add
or
xor
add
in
add
add
add
add
add
add
add
push
add
add
loope
add
add
in
add
add
add
add
add
add
add
js
add
inc
loop
add
add
in
add
add
add
add
add
add
add
mov
jecxz
add
add
in
add
add
add
or
add
sbb
add
push
add
sbbb
test
add
mov
add
xor
add
sub
add
add
xorb
sbbb
add
fiaddl
add
push
add
xorb
add
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
jl
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
scas
add
add
or
rolb
add
in
add
add
add
pop
add
inc
add
dec
add
push
add
add
add
add
add
add
add
out
add
xor
or
rolb
add
in
add
add
add
push
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
add
or
rolb
add
in
add
add
add
or
inc
add
dec
add
dec
add
push
add
add
add
add
add
add
add
push
add
add
in
or
rolb
add
in
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
mov
icebp
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
repnz
add
or
rolb
add
in
add
add
add
add
add
inc
add
add
add
add
add
add
add
es
add
cmc
or
rolb
add
in
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
add
push
testb
call
add
add
add
add
add
add
add
test
add
rolb
addb
add
clc
add
addb
add
add
add
add
add
add
add
add
add
add
add
rolb
jl,pt
add
add
add
add
add
add
add
add
add
add
call
jge
add
add
in
add
add
add
add
add
add
add
adc
adc
call
add
add
add
add
add
add
add
cmp
adc
test
add
in
add
add
add
add
add
pusha
add
add
dec
add
push
add
dec
add
dec
add
push
add
add
add
add
add
add
add
nop
add
or
push
add
add
add
add
add
add
pop
add
sldt
push
sldt
nop
push
add
mov
sldt
loopne
add
or
add
xor
add
pop
pop
add
addb
xor
add
test
add
rolb
add
clc
pop
add
and
add
dec
or
xor
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
add
add
add
add
add
add
addb
add
or
xor
add
in
add
add
add
add
add
add
add
test
add
insb
or
add
in
add
add
add
add
add
add
add
rolb
add
fcoml
or
cld
add
add
add
add
add
add
add
add
add
clc
push
add
fcoms
add
add
add
add
add
add
add
add
and
add
mov
or
adc
add
in
add
add
add
add
add
add
add
dec
pop
add
mov
add
add
add
add
add
add
add
add
add
jo
add
fcompl
or
or
add
in
add
add
add
add
add
add
add
cwtl
pop
add
in
or
in
add
add
add
add
add
add
add
add
add
rolb
add
and
add
add
in
add
add
add
add
add
add
add
call
and
add
in
add
add
add
add
add
add
add
adc
add
mov
or
push
add
add
add
add
add
add
add
add
add
cmp
add
fsubrl
or
in
add
add
add
add
add
add
add
add
add
pusha
or
add
sub
add
add
add
add
add
add
add
add
add
add
mov
add
clc
sub
add
add
in
add
add
add
add
add
add
add
mov
add
and
or
addb
add
add
add
add
add
add
add
add
fmuls
add
movsb
xor
add
add
add
add
add
add
add
add
add
add
inc
or
sbb
add
add
add
add
add
add
add
add
sub
add
pop
cmp
add
add
in
add
add
add
add
add
add
add
push
or
add
cmp
add
add
add
add
add
add
add
add
add
add
js
add
mov
or
or
add
in
add
add
add
add
add
add
add
mov
or
rolb
add
in
add
add
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
add
add
lock
add
inc
or
les
add
in
add
add
add
add
add
and
add
push
or
andb
add
add
dec
add
add
add
add
add
add
add
inc
or
add
dec
or
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
add
jl
add
in
dec
or
pusha
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
cld
or
cmp
add
and
add
dec
or
cmp
add
je
add
pushf
or
cmp
add
les
add
add
add
add
add
add
add
add
add
in
or
add
add
add
in
add
add
add
add
add
add
add
adc
add
pusha
dec
or
adc
add
in
add
add
add
add
add
add
add
cmp
add
je
or
adc
add
in
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
pushf
dec
or
adc
add
in
add
add
add
add
add
add
add
mov
add
mov
or
adc
add
in
add
add
add
add
add
add
add
fmull
add
les
add
add
in
add
add
add
add
add
add
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
cs
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
mov
add
adc
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
mov
add
mov
add
mov
add
mov
add
add
add
xor
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
hlt
shlb
jne
ret
and
fcomip
push
je
mov
or
dec
movsl
push
out
push
repz
rolb
repz
or
dec
jbe
push
sbb
push
mov
sbb
and
inc
aas
add
mov
lea
cmp
into
push
cli
xor
fldenv
insl
iret
fldcw
pop
movsl
in
sub
fists
xor
pop
xchg
je
or
mov
lret
out
daa
test
pop
pop
loop
push
jle
inc
xor
dec
dec
movsb
arpl
test
jmp
lea
sarb
mov
dec
mov
movsb
out
gs
dec
sub
in
pop
and
and
in
xlat
movsl
pop
lods
cwtl
add
outsb
jnp
outsl
movsl
mov
mov
aad
xor
push
xchg
sbb
jp
cmp
call
not
aad
cmp
inc
mov
shll
add
inc
mov
movsb
xlat
and
cmpsl
xlat
mov
rcrb
notb
filds
add
jae
sbb
cmp
ss
add
pop
push
jae
je
daa
inc
xchg
enter
sub
bound
out
mov
fisubrl
pushf
sbb
in
xlat
mov
fwait
xor
jge
lods
push
cmc
loopne
ljmpw
mov
fcmovbe
outsb
cs
sbbb
insb
gs
cwtl
mov
hlt
dec
icebp
xor
scas
cmc
push
call
ja
push
xchg
xchg
push
and
and
sti
roll
stos
fwait
inc
mov
jae
push
mov
bound
lock
shll
xchg
mov
sub
jg
push
in
test
lods
or
pop
inc
fisubl
sarl
ja
ficoms
push
shlb
rorl
shl
call
jne
inc
ret
icebp
mov
out
ret
mov
popa
inc
mov
aaa
imul
lahf
xor
adc
push
stos
adc
sahf
outsb
imul
sti
imul
adc
push
icebp
out
sbb
lret
jp
aam
les
push
mov
outsl
mov
jecxz
imul
enter
pop
jb
or
nop
pop
mov
mov
inc
int
push
xchg
testb
or
sbb
adcb
stos
aad
addr16
gs
vpacksswb
lcall
movsl
mov
inc
mov
or
imul
lcall
push
movsl
pop
fmuls
cmp
xor
pop
les
jb
fsubl
fwait
and
sub
daa
aam
das
js
hlt
popa
inc
mov
repz
jb
mov
lock
xchg
push
adc
dec
jge,pt
mov
push
mov
inc
jge
jge
and
insb
mov
dec
xlat
cs
jb
xchg
nop
lret
mov
lcall
lcall
pop
add
push
lea
mov
insb
cwtl
je
push
daa
pop
fsub
xchg
push
xor
mov
push
adcb
xchg
xchg
sub
sbb
push
mov
mov
das
or
push
jge
jg
pop
es
es
sti
cmp
sbb
aas
mov
or
test
mov
lea
repz
xchg
add
and
mov
ss
out
fdivl
test
pop
jle
and
or
divb
lcall
jmp
outsb
jl
mov
int3
arpl
dec
adc
inc
xor
add
add
adcb
push
add
icebp
ljmp
pop
jb
ret
lods
lock
or
jecxz
dec
arpl
rcrb
fwait
or
es
pop
xchg
into
xor
jo
lock
add
sub
jnp
add
dec
test
sbb
stc
jg
lock
pop
sub
sub
adc
clc
pop
xchg
and
jle
js
addl
pop
adc
mov
lret
fidivs
iret
imul
out
fstl
cltd
out
push
dec
xchg
sbbl
stos
inc
and
call
stc
pop
jge
in
decl
pop
pop
incl
push
ss
shrb
dec
cld
jge
test
push
mov
mov
or
cmp
cs
mov
jecxz
inc
out
xor
push
pop
jg
push
sub
xchg
and
push
jne
call
dec
imul
inc
cmp
insb
ficoms
mov
addr16
and
out
adc
xchg
es
cmc
into
push
hlt
imul
push
stos
fwait
mov
into
loop
sbb
or
testb
not
or
push
fcmovnbe
or
mov
and
outsl
xchg
ds
leave
dec
repz
mov
sub
shl
divb
sub
mov
mov
mov
divb
mov
into
adcl
jnp
cltd
cld
ficompl
or
std
imul
data16
jo
dec
push
loop
add
jge
insb
sarb
mov
stc
adc
cmp
cmp
or
and
andb
jne
add
test
or
stos
push
cli
mov
push
lahf
insb
loop
and
jbe
push
pop
stos
pop
or
mov
shrl
jp
mov
or
sbb
mov
or
pop
in
pop
adc
push
sub
aam
movsl
jmp
push
sysret
pop
mov
stos
stc
ss
mov
push
sbb
ljmp
lods
notl
cld
mov
dec
push
sub
hlt
sub
push
adc
mov
scas
stos
mov
aam
add
mov
test
adc
jb
xor
dec
inc
es
xor
cmp
adc
cmp
and
jge
dec
sub
cwtl
dec
and
iret
xor
jp
clc
lahf
sbb
sbbl
lods
mov
loope
push
dec
lds
sbb
les
loop
popa
cwtl
lods
cmp
jb
in
inc
fs
push
dec
mov
add
testl
cltd
loopne
jle
cmpsl
test
shrl
aam
xor
sbb
dec
fisttpll
jg
xchg
dec
icebp
jo
cmp
ja
sub
es
jo
fidivrl
inc
xlat
leave
inc
add
xchg
cmpsb
mov
lcall
and
out
or
dec
add
xchg
adc
jl
xchg
cmp
dec
call
in
sarb
addr16
or
int3
and
inc
fisubl
or
fnstsw
sbb
pop
int
repnz
sub
inc
loop
inc
repz
xchg
imul
cli
sbb
add
mov
cmp
jno
enter
lods
into
out
es
arpl
testl
ficoml
cmp
scas
popa
pop
fwait
sbb
cmpb
mov
popa
push
rorb
pop
mov
push
cmp
lea
xchg
divb
sbb
mov
negb
mov
icebp
stos
das
cmp
test
xlat
mov
mov
popa
mov
aas
es
mov
or
mov
jmp
sub
fsubrl
stc
outsl
repnz
nop
call
cmc
mov
inc
lods
cmpb
mov
movsbl
test
lods
push
sbb
ss
xor
dec
mov
push
jp
add
popa
loop
push
mov
mov
fistl
pop
and
sbb
xchg
pop
addr16
fadd
jae
fdivrl
xor
orl
stos
fwait
es
incl
out
aam
fs
or
inc
add
daa
sbb
mov
test
push
cmp
jo
sbb
lods
push
scas
ret
or
adc
cmp
mov
inc
push
cwtl
into
out
push
adcl
outsl
test
cli
mov
cmp
mov
pop
or
jg
mov
and
daa
dec
loope
mov
flds
shlb
filds
insb
pop
test
and
in
loope
in
mov
hlt
sti
sti
jno
cltd
xchg
sahf
xchg
mov
rorb
jne
mov
push
mov
dec
xor
jl
or
pop
jnp
sbb
push
negb
lret
push
inc
push
in
and
scas
xor
pop
xlat
ret
xchg
popa
jno
pop
add
out
cmp
into
mov
fsts
ja
sub
xchg
mov
cld
into
inc
adc
lahf
out
xchg
adc
in
ljmp
pushf
outsb
push
adc
out
sbb
shlb
xchg
arpl
fisubl
icebp
xor
mov
scas
mov
sar
xor
pop
lods
loope
jnp
js
cmp
dec
xor
movsl
sub
mov
cmpsb
jnp
int3
iret
das
popa
pushf
inc
push
pop
add
push
dec
push
xlat
push
mov
push
push
mov
push
mov
sub
xchg
in
loopne
and
pushl
aad
iret
outsb
jge
addl
xchg
mov
adc
jecxz
adc
aad
decb
xchg
fcomi
inc
popf
popa
mov
ljmp
stos
call
lahf
addr16
add
imul
mov
adc
les
inc
pop
pop
lods
jae
push
js
stos
sub
cmpsb
jp
fdiv
dec
lcall
unpcklps
fwait
xchg
mov
out
ret
jle
dec
lods
fistps
and
cmp
and
shlb
fistps
pop
sbb
mov
mov
cwtl
sub
outsb
mov
xchg
adc
int3
call
lock
imul
xor
pop
lcall
or
dec
inc
pop
pusha
ss
fstps
sbb
sub
sbb
pop
add
mov
sti
mov
loopne
mov
int3
imul
dec
and
xchg
xor
sbbl
jle
mov
adc
or
sbb
inc
repz
add
scas
andb
push
nop
dec
jmp
mov
mov
data16
add
cltd
push
push
mov
sbb
mull
mov
lahf
jo
insb
jg
fistps
sbb
adc
test
lods
imul
test
and
or
add
xchg
or
cmpsb
gs
mov
cmp
sub
not
mov
mov
iret
pop
sbb
add
stos
nop
sub
push
fnstsw
cmp
or
xor
jo
mov
gs
arpl
xor
adc
cld
lahf
jbe
rcrl
push
xor
ret
clc
shl
ljmp
pop
and
xor
jbe
inc
inc
loopne
stos
sbb
dec
stos
ja
sub
not
mov
add
test
loop
jmp
ret
test
movsl
adc
arpl
jl
xor
and
xor
jns
or
adc
jle
add
adc
cmc
or
out
xor
and
lock
faddl
cmp
cmpsl
jle
lds
add
inc
or
test
xlat
icebp
test
mov
flds
add
dec
jae
cmpsl
ret
pmulhw
mov
pop
and
sub
xchg
fst
cmp
adc
mov
stc
pop
movsl
push
mov
inc
xor
clc
cmp
inc
adc
sub
jmp
xchg
fs
mov
or
ret
mov
push
iret
xlat
pop
fcomip
std
mov
pushf
popf
lret
inc
xor
loopne
and
gs
sub
lcall
orl
fdivrs
jge
test
or
add
fsubp
add
pop
fistps
dec
adc
jo,pt
push
xor
sti
xor
test
pop
idiv
mov
leave
sbb
ds
xchg
pusha
cmp
ja
cltd
stos
mov
jo
test
dec
pop
cmp
ja,pn
jnp
and
mov
and
daa
scas
mov
cmp
mov
add
stos
xchg
addr16
out
adc
push
out
jo
lret
sbbl
xchg
push
loop
mov
mov
int
mov
sub
pop
add
jge
xor
and
movsb
mov
lds
pop
or
icebp
orl
outsb
mov
lea
push
dec
dec
mov
es
push
fiadds
inc
rcrb
enter
lods
xchg
cmpl
xchg
fdivl
fisubrl
push
and
jp
loopne
inc
dec
bound
in
mov
iret
les
xchg
pop
push
cltd
mov
cs
fnsave
mov
jbe
mov
pop
data16
std
cmp
lahf
fbstp
lret
mov
fcmovnb
inc
pop
aad
and
lods
jge
testb
adc
add
adc
mov
xor
inc
jl
mov
scas
adc
cmpsl
mov
add
push
sub
fisubrl
clc
js
dec
sti
sub
in
fsubrs
inc
inc
loop
push
out
rolb
mov
cmp
loop
inc
out
push
jo
cmp
jne
and
lods
xor
mov
mov
inc
mov
icebp
add
lret
lods
icebp
hlt
cmp
xchg
insb
inc
js
mull
call
cld
xor
in
icebp
jge
xchg
push
push
sbb
xor
cli
mov
imul
dec
jp
stos
movsl
movsb
add
imul
xor
loop
xchg
mov
mov
xchg
mov
lcall
jae
leave
mov
xor
loop
push
hlt
lods
leave
out
inc
cmp
cmpb
add
sub
cwtl
mov
test
mov
or
lds
out
inc
call
lds
inc
cld
xchg
mov
jne
insl
in
out
cli
push
xor
adc
push
push
mov
lods
adcl
dec
es
fists
adc
lods
adc
stos
add
xor
call
addr16
cmp
jp
aas
push
repz
std
inc
mov
push
dec
sbb
outsl
cmp
jne
xchg
dec
dec
cltd
daa
xlat
popf
push
sar
pop
lods
ret
lcall
or
rcrl
fcomps
adcb
subb
pusha
sbb
sbb
movsb
push
inc
ficoms
cld
loopne
push
call
and
pushf
aad
adc
adc
push
dec
add
scas
mov
cmpsl
rorb
push
lret
or
xchg
jg
push
mov
adc
mov
lea
mov
cmp
inc
adc
adc
xchg
sub
push
imul
test
xchg
and
sub
add
cmp
and
scas
in
iret
mov
xlat
jge
ret
mov
lea
loop
mov
jp
rorl
les
imul
or
jns
int3
in
jecxz
sar
pop
cmp
mov
adcb
popa
into
mov
test
clc
enter
in
cld
xchg
mov
mov
jg
mov
mulb
scas
jecxz
jo
sub
dec
inc
inc
jno
cmp
rorb
je
pop
pop
push
mov
pop
or
mov
lcall
jae
pop
xchg
ds
sub
ficoms
test
xchg
sub
or
sub
push
mov
clc
inc
cmpsb
popf
xchg
adcl
arpl
add
adcl
aas
dec
mov
mov
cmp
pop
mov
sbb
and
leave
cmp
daa
sarb
mov
mov
mov
ficoml
fdivrp
and
jne
sub
out
stos
rcrb
adc
bound
xchg
jnp
or
lret
lcall
movsl
push
add
ret
filds
pop
popa
aam
sub
popaw
imul
push
and
pop
push
in
dec
into
push
jo
loopne
addl
sub
js
mov
out
movsb
jns
testl
vpshufhw
or
shld
dec
int3
lcall
les
lods
sbb
mov
stc
out
fnstcw
and
incl
sahf
sbb
pop
in
mov
mov
fistpll
int3
lcall
out
loop
push
pop
jp
icebp
mov
test
pusha
dec
ret
push
pop
cld
push
movhps
test
mov
pop
xlat
adc
mov
daa
fcoms
xlat
stos
cmp
and
add
lret
xor
leave
or
pop
lods
cmc
scas
cld
xchg
sub
xor
shrb
jae
dec
jae
pop
push
fbld
mov
inc
sbb
mov
daa
nop
push
add
rorb
add
lods
sbb
and
add
je
jge
mov
push
lds
mov
js
cwtl
pop
sar
inc
add
sbb
data16
inc
or
push
sub
cs
inc
xchg
test
dec
mov
pop
push
out
dec
int
and
loope
sub
mov
mov
mov
repz
lahf
pop
jbe
aad
cs
pop
xchg
push
add
jle
xchg
das
or
xor
xchg
fstpl
xchg
jmp
outsb
push
xorb
loopne
cmp
xchg
mov
fimuls
stc
fisubs
cli
test
lret
xchg
inc
ja
rorl
push
clc
test
shrl
push
dec
movsb
xchg
dec
subb
test
pop
mov
cmp
enter
dec
repnz
gs
ljmp
test
push
ss
pop
sbb
mov
jmp
stos
xchg
nop
mov
jmp
inc
sbb
ss
mov
int3
jae
call
lods
jns
bound
jne
ljmp
mov
jbe
test
subl
sahf
out
sub
inc
stos
push
push
out
pop
push
sub
movsl
into
aaa
stos
xchg
outsb
gs
jne
or
fwait
pop
out
lahf
inc
lret
out
jecxz
call
push
lods
lret
or
dec
cmpb
xchg
xchg
ds
mov
sub
pop
mov
xor
pop
dec
mov
cmc
clc
adc
xor
mov
iret
pusha
iret
les
int
cmc
sub
cmp
pusha
mov
push
into
test
cmpsb
push
pmuludq
emms
std
das
sub
lock
in
push
aaa
std
je
mov
shr
xchg
inc
xchg
sbb
inc
adc
mov
push
inc
imul
clc
test
mov
ljmp
add
pop
add
fs
movsb
imul
fimull
shll
sub
sbb
cwtl
repnz
and
cwtl
loop
add
shrb
ljmp
mov
out
stos
mov
mov
shl
mov
add
pop
fistps
iret
hlt
sbb
mov
test
jp
mov
sbb
mov
lods
in
inc
arpl
mov
mov
mov
in
jb
push
inc
sub
push
xor
sub
jbe
jb
push
arpl
lahf
into
push
fstpt
cs
in
push
icebp
icebp
dec
mov
into
mov
outsl
push
pop
notl
mov
jno
jp
stc
shrl
cmc
shlb
mov
xchg
clc
sbb
loopne
cltd
sbb
sbb
mov
in
cmp
lret
in
sbb
lea
mov
inc
xchg
jg
shlb
gs
sti
test
lods
mov
mov
les
jg
jnp
sbb
push
mov
xorb
scas
ret
insb
out
aam
mov
ret
test
adc
roll
lret
aas
cmpsl
mov
inc
sbb
push
cltd
fcomip
inc
in
push
pop
sbb
repnz
fildll
je
js
gs
xor
fwait
mov
sub
sub
xchg
shll
mov
push
std
mov
movsb
pop
mov
mov
out
mov
jbe
adcl
fisttpl
cmc
cltd
outsl
movsb
add
cmp
pop
inc
sub
mov
test
shrl
sub
cli
loop
xorl
pushl
pushf
add
push
or
das
out
push
sbb
mov
and
in
mov
pop
adc
jo
ss
mov
push
push
sub
inc
mov
mov
pop
inc
loopne
xchg
jecxz
ficoms
push
pop
into
and
shl
mov
xor
repnz
inc
stos
insb
adcl
out
movsl
out
int
loope
xchg
shlb
rolb
dec
jp
mov
pop
jno
xchg
pop
data16
data16
fbld
push
cmp
inc
adc
adc
test
mov
or
repz
adc
mov
pop
xchg
int
sub
shl
cltd
mov
imul
lea
add
or
mov
test
ljmp
cld
dec
dec
int3
xor
mov
dec
xchg
and
mov
or
mull
cwtl
call
sub
add
or
dec
push
lret
pop
outsl
pop
push
repz
rorl
push
or
pop
out
mov
lds
mov
jle
mov
bound
inc
push
loope
adc
adc
shll
mov
mov
fwait
push
idiv
xchg
scas
andl
jne
mov
out
jmp
outsb
testb
loopne
fucomp
stc
in
xchg
sbb
std
ret
insl
repnz
cwtl
adc
add
cwtl
movsb
stc
sub
popf
je
outsl
sub
jno
sub
and
inc
rcrb
inc
das
lcall
test
daa
in
into
mov
mov
cmp
xchg
pop
mov
lret
push
cmp
cmp
loope
push
scas
test
mov
mov
out
cmc
cmc
mov
mov
push
pop
sub
or
movq
mov
imul
cmp
frstor
aam
jne
orb
mov
mov
push
mov
repnz
incb
add
adc
pop
xor
movsb
and
or
movsb
pusha
imul
xor
clc
inc
mov
jb
outsl
mov
mov
std
fwait
bound
xor
inc
lahf
sub
add
adc
push
jge
aas
rcrb
cmp
lcall
push
lret
pop
jno
in
add
mov
adc
mov
xchg
xchg
xor
mov
mov
outsb
sarl
mov
mov
xor
sbb
dec
js
inc
ds
cmp
adc
inc
mov
jo
push
ret
je
addr16
ficoms
mov
mov
push
xchg
imul
aaa
push
sti
push
adc
xchg
sub
loop
push
ja
mov
les
aad
push
xor
les
adc
leave
repnz
test
addl
rcrl
pop
and
inc
push
jg
lods
cmp
ret
lods
jge
cmp
fistps
imul
dec
repz
pop
mov
cld
mov
and
je
jmp
ss
fistpl
cli
sub
xchg
adc
push
dec
push
mov
sti
xor
adc
ss
mov
mov
lods
scas
stc
mov
mov
jno
cld
adc
pop
mov
popa
test
in
push
ret
fistl
and
xchg
inc
mov
pop
add
push
ret
mov
cmpsb
adc
jo
jbe
inc
into
pop
pop
cli
jmp
push
mov
rol
inc
sti
lods
mov
adc
data16
mov
jae
push
add
bndstx
imul
push
adc
sbb
add
es
sti
or
mov
lock
xchg
insb
daa
cmp
jae
jl
rcll
cs
jnp
aad
or
jl
cmp
int3
xchg
xor
test
inc
enter
cs
lds
sarl
testl
adc
movsb
divb
out
in
ds
adc
sub
xrelease
lods
push
test
cwtl
outsb
js
xchg
cs
mov
pop
inc
sar
fimull
cmp
out
adc
repz
stc
insl
aam
cltd
insl
es
adc
jb
cmp
xchg
sbb
cli
ljmp
inc
out
addb
mov
stos
jl
inc
iret
mov
fistpl
lret
inc
fwait
and
in
in
adc
jp
pop
sbb
xchg
gs
cmp
int3
sub
push
dec
and
popf
add
out
cmp
sbb
lock
mov
ret
std
jecxz
hlt
pop
fnstcw
sub
or
movsb
adc
orb
les
lret
jecxz
mov
lahf
mov
stc
xchg
add
repz
mov
imul
into
pop
dec
xor
xchg
xor
es
fadds
mov
mov
in
adc
jbe
xchg
cltd
xor
add
dec
adcb
fnsave
mov
out
pop
in
adc
into
adc
subb
adc
mov
repz
in
clc
sub
pop
mov
mov
or
push
sub
inc
imul
mov
fbld
adc
cwtl
je
xchg
jg
pop
stos
or
fstpt
mov
movsb
test
aam
mov
inc
pop
lods
ret
aad
iret
loop
in
cmpb
data16
pop
push
lahf
add
call
inc
bound
in
sbb
dec
push
push
pop
dec
cmpsb
sahf
shll
cmp
push
or
xchg
mov
dec
add
jp
cli
aam
mov
hlt
jbe
in
pop
and
mov
repz
movsl
push
aad
adc
cmp
dec
lock
cmpsb
inc
push
popf
fists
push
or
das
call
fdivr
cmp
jae
out
and
mov
imul
sahf
push
pop
push
outsb
sub
sahf
inc
sbb
shlb
pop
pop
xlat
mov
enter
jo
fsubp
adc
ret
int3
sub
sub
xor
int
ss
push
int
jnp
adc
popf
sbb
sarl
push
push
call
or
lcall
push
test
imul
mov
test
pop
mov
shll
jno
adc
or
ss
cmp
jmp
jo
fadds
sub
mov
cltd
outsl
loopne
cltd
lcall
mov
loope
orl
xchg
push
mov
pop
cmp
add
cmp
lcall
mov
pop
pop
icebp
mov
pop
aas
cld
pushf
inc
xlat
shrl
push
scas
push
push
dec
pop
cli
inc
leave
ret
push
in
cmp
xor
mov
fsincos
mov
cmp
fisttpl
mov
hlt
ret
int3
jl
and
mov
xor
sub
mov
bound
or
hlt
int
nop
pop
aas
clc
xchg
adc
adc
adc
ss
push
mov
adc
lock
add
cltd
mov
popf
pop
test
jg
loop
aaa
dec
inc
push
mov
jl
rorl
mov
lret
int
and
lea
pusha
cmp
ret
mov
pop
push
cld
ljmp
aas
iret
push
addl
mov
inc
mov
xor
pop
bound
push
sub
xchg
and
insb
movsb
cmp
popf
jo
mov
in
addr16
and
jbe
pop
mov
mov
jp
xor
in
cmp
mov
add
lret
mov
mov
fsubrl
arpl
fists
popa
or
add
xchg
pop
loopne
mov
jns
xchg
bound
inc
mov
loop
and
cmc
mov
mov
lock
and
push
loopne
enter
insl
orl
pop
mov
or
add
movsb
jmp
loop
scas
mov
pop
ds
xchg
mov
loop
ret
push
mov
adc
popf
rcrl
lcall
jae
dec
and
ja
imul
mov
std
ljmp
mov
mov
xchg
sahf
lds
mov
fmul
outsb
ficomps
scas
gs
loope
repnz
cli
stc
cmp
or
or
mov
mov
jnp
sbb
xlat
xor
repnz
sbb
outsb
xor
pop
xchg
stos
push
sbb
mov
mov
flds
in
mov
pop
xchg
push
insl
aaa
cmpsl
sub
aas
xor
cmpsl
add
fsts
int3
dec
stos
sbb
mov
aas
adc
adc
cli
xchg
or
mov
mov
inc
sub
movsl
jne
call
pop
daa
xor
push
lods
adc
mov
stc
mov
icebp
lahf
push
mov
push
pop
push
cmc
adc
adc
adc
xchg
mov
adc
popf
cmc
fcompl
xor
pop
sbb
inc
mov
and
lds
sti
ljmp
cmp
hlt
push
xchg
ja
shl
shlb
mov
jbe
out
push
mov
or
dec
push
lock
lahf
pop
fndisi(8087
adc
pop
sub
mov
add
test
cmc
mov
mov
bound
ja
mov
test
call
sbb
fisttpl
adc
jbe
fidivs
es
repz
rclb
mov
in
jno
fucomip
cltd
push
cwtl
aam
xchg
pop
sbb
scas
cmc
pop
nop
pop
insl
jmp
add
aaa
inc
ficomps
sub
out
mov
lcall
repnz
sbb
xchg
lock
das
jne
sub
ret
jnp
inc
iret
rclb
lret
pop
and
xlat
ss
pop
leave
js
in
in
ja
clc
mov
fsubrp
insl
xlat
mov
imul
das
sub
js
orb
cmpsb
push
int3
mov
jno
ja
jg
lret
jne
notl
pushf
dec
mov
stos
stc
icebp
sbb
aam
mov
mov
sub
in
jg
jmp
xor
data16
pusha
sbb
mov
fisubrl
or
push
fiadds
in
dec
jnp
subb
and
stc
call
jecxz
mov
xchg
es
push
outsl
pop
dec
aam
out
movl
mov
test
scas
pop
subb
in
nop
inc
dec
cltd
loopne
jb
add
pop
negl
mov
ret
fsubrs
jae
jp
shl
cwtl
push
and
or
add
cs
mov
int3
pop
pop
adc
and
fwait
add
xchg
pop
in
cltd
call
adc
ja
push
jae
ds
xor
mov
test
jne
and
hlt
mov
sub
push
mov
data16
inc
sbb
bound
jl
push
sub
cmc
inc
jmp
jmp
add
stos
adcb
shr
into
xor
jmp
pop
mov
scas
addl
or
hlt
add
out
and
ret
or
sti
xchg
dec
pusha
inc
add
cmp
jne
cmp
fcompl
cmpsl
and
repz
dec
xchg
jnp
stc
cld
lret
push
dec
xchg
mov
xor
lds
jo
les
pop
mov
shrb
arpl
or
mov
into
adc
mov
fs
dec
push
pushl
je
adcl
cld
jmp
cwtl
es
in
jp
cmp
inc
int
sub
inc
add
mov
int
in
enter
mov
add
bound
dec
aaa
outsb
outsb
movsl
jp
mov
rcrb
dec
lods
fdivrl
adc
imul
mov
cmpl
sub
adc
push
push
mov
mov
xchg
ss
jl
rol
notb
push
test
hlt
bound
repz
loope
ljmp
inc
cwtl
call
adc
fbld
ret
lock
mov
dec
fbstp
sbb
addb
cmc
cmp
cmpsl
push
xor
mov
aam
shl
mov
xchg
stc
push
dec
addb
ret
mov
sbb
adc
mov
aaa
add
push
or
stos
pop
nop
repnz
ficoms
fidivrs
aaa
xlat
inc
pop
lods
in
cld
or
out
xor
or
ljmp
aaa
cmpl
dec
jg
jb
mov
es
mov
add
or
mov
lds
lahf
mov
int
and
imul
jp
call
jo
cltd
push
mov
xchg
lcall
mov
mov
mov
push
insl
xchg
or
mov
les
jecxz
mov
imul
and
sbb
mov
call
cmpsl
js
into
add
aad
push
xchg
stc
les
jle
mov
pop
out
mov
scas
cli
add
push
dec
sahf
mov
lods
pop
xchg
mov
daa
fldcw
shrb
rcr
inc
popf
ret
insb
xor
mov
mov
test
push
std
xchg
inc
repnz
out
ret
mov
leave
jecxz
lock
add
push
mov
popf
fbld
mov
cltd
push
arpl
stc
pusha
hlt
outsl
jp,pt
cli
ficomps
xor
jne
mov
dec
lods
sti
subb
popa
inc
bnd
mov
adc
pop
into
adc
popf
imul
dec
gs
sti
fbstp
xor
fisttps
ljmp
test
mov
fistpl
push
mov
or
ret
mov
and
mov
mov
fildl
int3
subb
lret
sub
adc
jae
or
pushf
sub
mov
add
push
dec
sahf
adc
mov
outsb
cmp
xor
int
xchg
cmp
js
push
jecxz
js
repnz
mov
push
lret
loop
dec
jp
mov
xchg
into
lret
mov
mov
addr16
pcmpeqd
test
shll
adc
sbb
sbb
scas
sbb
sub
lock
mov
ds
jo
adc
divl
add
jle
jecxz
push
aam
decb
sbb
mov
cwtl
js
sbb
xchg
ss
shrb
push
mov
daa
cmp
jmp
in
call
xchg
subb
dec
xor
out
lods
movsb
das
adc
sbb
sbb
ret
xchg
addl
xor
rcrb
cmp
arpl
push
ss
rcr
inc
ljmp
mov
dec
inc
sub
dec
lcall
lods
in
fsubrs
pop
inc
stos
and
xor
jno
mov
cltd
sbb
dec
aam
out
leave
sbb
imull
push
add
jno
test
icebp
loop
leave
shll
dec
jb
and
js
jg
xorl
bound
movsb
sbb
js
xor
add
lods
fnsave
push
call
fmulp
leave
fwait
adc
mov
nop
rcll
mov
mov
pop
fs
ja
in
jnp
lahf
sub
cwtl
add
xchg
jecxz
pop
icebp
dec
jmp
fstpt
push
clc
mov
mov
scas
adc
test
pop
add
mov
stc
mov
jecxz
add
lods
push
or
fcomip
and
xlat
xchg
leave
push
loop
rorl
shlb
dec
cltd
jnp
jbe
and
xor
sub
inc
jo
cmpsb
stos
stc
sbb
inc
mov
jmp
add
jle
lahf
or
aam
push
rcrl
ret
std
mov
cmp
sarb
pop
push
sbbl
insl
sub
data16
mov
jae,pn
pop
aam
add
popf
sbb
pop
shrl
fdivrl
rorl
clc
mov
ret
test
ret
das
jae
push
cmp
out
test
lcall
mov
movsb
retw
or
xchg
jmp
mov
outsl
fwait
rol
cld
test
xchg
jl
loope
adc
into
fs
std
jl
lds
push
adc
cmc
xchg
fidivl
xchg
mov
jns
call
push
pop
cmp
jg
stc
insb
fimuls
popf
scas
add
sbb
std
cltd
in
mov
es
or
dec
or
aas
sbb
xor
fcmovnb
into
pushf
sub
and
test
aas
xchg
stos
or
mov
sti
ficompl
sbb
dec
jo
sub
inc
dec
mov
cmc
mov
mov
das
pop
pop
lret
mov
ret
mov
fidivs
inc
scas
push
dec
pushf
das
push
xorl
fadd
xor
and
inc
jmp
mov
sub
test
and
mov
insl
frstor
jae
push
cmp
adc
dec
sti
dec
idiv
sub
adc
addb
or
mov
sbb
xchg
enter
ja
push
cmp
cmpsb
sub
pop
loop
xor
divl
mov
push
dec
retw
insl
inc
imull
jg
imul
in
cmp
sbb
clc
lods
push
out
ret
xor
inc
imul
xchg
fwait
cmp
fs
bound
xchg
mov
sub
inc
hlt
mov
imul
mulb
adc
mov
dec
jl
mov
ja
adc
mov
push
jg
push
bound
push
lods
jge
in
pop
jno
mov
testl
out
mov
ficoml
lcall
xor
lock
idivl
and
sar
outsb
clc
mov
sub
jecxz
or
mov
xchg
mov
movsl
sub
jl
and
lods
jb
add
pusha
js
daa
jecxz
mov
dec
lock
aas
or
sub
movsl
xchg
out
sub
mov
dec
test
fwait
rorl
rcrb
mov
sbb
jno
rorb
sahf
mov
cmpsb
mov
jnp
aam
mov
push
xor
xor
xor
rcl
pop
sub
mov
aam
mov
or
push
sub
push
out
scas
sti
xor
cmp
cld
add
and
inc
or
addr16
lret
mov
imul
adc
in
jne
push
repz
and
stos
mov
pop
mov
daa
addr16
fcomip
and
lret
xor
push
pop
jne
xor
sub
add
mov
mov
out
mov
cld
movsb
fbstp
sub
push
xor
mov
pushl
xchg
pop
inc
fisttps
into
lods
icebp
rcll
test
rol
mov
mov
and
xchg
stos
aaa
popf
shlb
fnstenv
jecxz
dec
shl
inc
daa
loope
test
pop
and
lea
sub
in
aas
jno
inc
xchg
ror
inc
and
movb
les
fidivrl
popf
das
mov
lahf
mov
jne
imul
out
les
inc
into
ret
fnstcw
or
jmp
mov
div
sub
mov
cmp
or
sub
lahf
sarb
add
xor
int
js
test
ds
mov
mov
inc
out
incl
mov
push
lods
mov
jns
dec
cmp
adc
push
xchg
pop
pop
mov
js
jbe
ret
jb
inc
lahf
jne
jmp
popl
fnstsw
cmp
pop
ret
ljmp
cmp
mov
mov
mov
outsb
rorb
dec
add
leave
mov
popf
pop
mov
fnstcw
sub
xor
mulb
rorb
xchg
push
in
cmc
mov
push
test
inc
or
int3
xchg
out
cmp
push
dec
lret
jl,pt
jg
fisubrs
inc
or
jno
repnz
arpl
roll
in
fwait
mov
add
out
xchg
addr16
stos
jno
sbb
arpl
fiaddl
dec
dec
mov
popa
add
leave
push
add
test
int3
fsubp
mov
adc
outsl
inc
cmp
loope
lret
mov
inc
push
test
mov
push
jne
mov
xchg
xor
sbb
mov
int
fsubrp
movsb
stos
jb
mov
test
fnstenv
inc
in
push
shrb
popa
push
add
rolb
cmp
xor
push
dec
ss
addr16
ds
jnp
push
cld
jg
test
lock
xor
adc
dec
xchg
outsb
xor
xchg
je
pusha
stc
or
lahf
loop
jbe
sub
scas
bsr
push
sbb
xchg
loope
flds
lods
push
jg
sub
cwtl
xchg
sub
or
cmpsb
xchg
ds
iret
add
xchg
popf
pop
ret
std
out
sbb
cmpsl
pusha
mov
dec
in
mov
insb
pop
int
ficoml
mov
mov
mov
repz
daa
push
xor
jge
ds
xchg
dec
into
loop
mov
xchg
pop
jge
std
arpl
cmp
mov
xchg
pop
lcall
shl
adc
sub
ret
jae
mov
push
jmp
fbld
adc
push
xchg
and
pop
push
repz
mov
iret
jo
and
add
cmpsb
in
out
xor
sbb
ljmp
fsub
jecxz
add
fsts
mov
inc
and
pop
adc
daa
mov
pushf
es
out
mov
inc
in
int
xchg
dec
or
sub
mov
outsb
test
arpl
pop
enter
std
test
push
lret
mov
mov
or
arpl
int
test
dec
push
fldl
lods
pusha
mov
add
mov
jp
push
lcall
sub
or
push
ret
fcmovu
xlat
shll
cwtl
in
sbb
repnz
push
cmp
shlb
mov
or
sub
mov
jns
xchg
shrb
lds
fstps
cmpsb
pop
out
pop
nop
dec
pop
jecxz
push
ja
cli
ja
sbb
jg
jb
repnz
xchg
inc
xchg
sahf
out
frstor
jmp
sub
out
fadd
fistl
ss
xchg
push
mov
pop
ja
sbb
scas
inc
dec
mov
mov
shlb
inc
inc
shr
xor
pushl
loope
xchg
jmp
fwait
push
mov
jno
inc
inc
cwtl
nop
loope
cld
lods
pushf
jp
mov
pop
lds
jg
pop
sub
clc
ret
pop
pop
daa
idiv
mov
clc
into
enter
aam
loope
xor
jno
shlb
lea
inc
sti
rcrb
mov
xchg
leave
dec
push
dec
lcall
mov
out
mov
sub
mov
and
cmp
add
adc
aaa
mov
xchg
lret
nop
leave
cmp
push
dec
cli
bound
xchg
adc
das
adc
int3
cmp
mov
or
out
lock
cmp
sub
xchg
inc
fstl
les
int3
cmp
jge
sbb
mov
add
cwtl
dec
mov
jnp
je
rcrb
inc
dec
jno
dec
mov
loop
sbb
jg
shl
pop
mov
xchg
call
mulb
iret
push
ja
jge
aam
ret
cmpsl
iret
mov
adc
adc
loope
xchg
fcomip
jg
or
inc
cmpsl
and
cmpsb
out
xchg
sbb
loopne
mov
lret
insl
cmc
pushf
pop
xor
sub
add
inc
jae
push
xor
lcall
mov
inc
int3
sub
adc
insb
mov
pop
lds
add
and
ret
testb
mov
loope
pop
mov
lea
push
scas
cmp
dec
inc
mov
jp,pn
mov
mov
adc
pop
les
pop
insl
je
sbb
lahf
pop
mov
jne
out
outsl
pop
sub
pop
mov
pcmpgtw
xchg
mov
or
adc
aad
ror
loopne
inc
xchg
sbb
jmp
or
or
dec
pusha
lahf
xlat
mov
and
cmp
xchg
popf
mov
xor
mov
mov
jnp
mov
stc
pop
cmpsl
dec
pop
testb
pop
jbe
dec
inc
mov
cltd
xchg
inc
fstpl
pop
mov
sub
xlat
shrl
push
dec
push
mov
in
aaa
jae
jp
rcrb
scas
xchg
mov
mov
int3
dec
jnp
push
das
out
aas
scas
mov
mov
mov
dec
cmc
int3
movsl
sbb
xchg
jmp
aaa
mov
insl
jb
add
fstpt
sti
mov
push
push
jns
ret
adc
mov
mov
dec
add
xchg
xchg
push
or
imul
ljmp
into
pop
aad
ret
cmp
out
or
rolb
and
decl
aam
push
cmpsl
inc
scas
pop
jmp
cmp
push
sub
aad
rol
xor
push
mov
jno
push
pop
and
inc
stos
movsb
bound
arpl
cmp
aas
sub
es
fsubp
xor
scas
push
clc
jns
cmp
mov
rcr
daa
les
mov
in
xor
pushf
pop
out
test
ja
dec
incl
test
pop
das
sub
xor
loope
pop
iret
jecxz
aad
push
xlat
push
add
sub
int3
or
mov
xchg
lret
repz
push
push
xchg
scas
inc
ret
repz
cmp
jmp
and
jl
or
and
push
xchg
pop
push
rol
jp
pop
push
sbb
or
and
xor
pop
into
mov
jmp
mov
xchg
mov
xchg
mov
mov
adc
or
arpl
or
lcall
dec
sar
mul
mov
xor
push
ficoms
je
push
cli
mov
push
ret
mov
cmp
aaa
xchg
sub
lock
or
jnp
mov
xchg
pop
xchg
lods
or
outsb
xor
call
fsubrp
fiadds
lret
out
push
adc
scas
iret
mov
cmp
das
cmp
mov
orl
call
jmp
orl
dec
loopne
push
outsl
sub
cli
rorb
out
cltd
repnz
popf
jb
fimuls
mov
movsb
lcall
das
dec
mov
mov
clc
int
test
and
aas
nop
and
in
arpl
repnz
xlat
lea
test
mov
aas
loope
in
jp
repnz
xor
not
sub
lret
push
outsl
out
inc
xorl
jmp
arpl
aam
stc
inc
sbb
fildll
fdiv
clc
pop
mov
mov
pop
jbe
jno
mov
adc
js
add
sbb
aam
lods
or
xchg
movsl
push
rcrb
xchg
cwtl
mov
jae
dec
jecxz
push
cmpsb
lods
jne
cmp
out
jb
movsl
rcll
sub
pop
cmpsl
push
and
aam
shlb
xor
aam
dec
jmp
cmp
iret
es
cltd
ret
js
add
in
pop
mov
mov
filds
push
dec
into
out
lahf
add
jle
jmp
aam
shl
rcrl
aaa
int3
insl
mov
ja
arpl
dec
or
inc
dec
mov
jnp
jbe
or
roll
mov
lock
mov
loope
stos
cmc
scas
mov
dec
aaa
jno
int
jo
xor
mov
hlt
xchg
mov
mov
lock
mov
dec
dec
dec
in
repz
leave
dec
stos
adc
sti
orb
ret
and
orl
pop
repz
dec
movsl
aaa
or
jmp
jecxz
pop
dec
in
mov
aaa
popa
pusha
icebp
jecxz
pop
add
aas
add
sub
mov
imul
sbb
sub
jg
int
repz
or
cwtl
xlat
les
cli
loop
mov
ja
dec
adc
scas
mov
testl
stos
or
test
jp
inc
pop
sbb
sub
mov
sbb
xchg
mov
mov
repnz
loope
inc
xor
inc
lret
ja
sbb
adc
and
jecxz
popa
rolb
imul
xchg
sub
inc
roll
mov
std
loop
mov
out
lret
mov
mov
jmp
test
insb
xor
mov
enter
jne
sbb
arpl
fcoms
fsubrp
ljmp
dec
lcall
sub
add
imul
pop
aad
cmpsb
sub
ljmp
mov
push
dec
lahf
mov
lods
adc
sti
dec
cmc
out
add
repz
fidivl
std
mov
mov
push
adc
mov
sub
push
lock
dec
scas
xchg
xor
pop
repnz
inc
js
pop
jmp
xchg
ds
xchg
push
or
out
es
mov
pop
inc
dec
xchg
adc
push
inc
jmp
dec
out
sbb
lret
pop
leave
pop
bound
fsubr
adc
aas
andl
xchg
add
sbb
scas
jmp
mov
pop
or
push
in
loopne
xchg
dec
push
jb
lock
popf
icebp
push
push
fisttpl
cmp
fbld
stc
or
jge
mov
push
mov
ds
in
sub
dec
inc
aaa
xchg
pop
cs
lods
or
cmpsl
fsubrs
out
xor
cltd
fs
ret
enter
lahf
or
nop
add
pop
jb
or
mov
hlt
stos
and
gs
jmp
add
mov
imul
arpl
nop
arpl
in
pusha
cmc
cmp
push
sbb
lds
shlb
int3
push
int3
adc
xchg
ret
xor
xor
pop
push
sbb
or
sub
sub
fdivl
jle
push
lds
or
push
mov
mov
repz
in
ret
xor
fs
xor
mov
fsub
jmp
rcrl
subl
push
out
push
test
hlt
push
shll
push
addr16
mov
je
imul
push
jns
dec
sub
mov
mov
push
mov
stos
js
or
movsl
lcall
outsl
dec
and
mov
jne
movsl
mov
sbb
and
push
lds
pop
pop
inc
imul
sub
xchg
popf
loop
push
xor
ja
jmp
imul
xor
loopne
jp
pop
out
shlb
add
mov
adc
push
push
in
in
sbb
out
notb
mov
repz
ret
in
mov
iret
adc
push
lock
daa
push
popa
int3
push
pop
sbb
mov
cwtl
cmpsl
cmp
lret
jo
mov
pop
insb
fwait
outsl
repnz
test
xchg
iret
pusha
ja
cmp
cmp
sub
fs
fcomps
fsubl
mov
testl
sub
mov
and
xlat
bound
fucomi
xlat
jl
pop
sbb
mov
imul
or
call
jnp
xor
xor
mov
jnp
jecxz
cld
mov
xor
xchg
ljmp
insb
jbe
iret
test
jne
sbb
sbb
imul
add
mov
int3
insl
jl
sbb
in
mov
xor
daa
mov
sqrtps
shll
into
popf
int
enter
dec
arpl
js
rolb
loop
xchg
in
mov
lods
aaa
movsl
mov
xchg
ret
jno
test
mov
out
loop
and
fnstcw
icebp
xor
in
inc
mov
adc
lea
or
mov
sbb
mov
cmpb
popf
add
xchg
xor
push
cmc
add
lahf
jbe
or
lcall
rorl
lds
stos
mov
lcall
cwtl
mov
fwait
add
shrl
xchg
cltd
cwtl
out
cwtl
hlt
ffree
mov
dec
xchg
adc
movsl
fsts
std
mov
fnsave
cmpl
aam
pop
pop
push
adc
mov
adcb
je
insb
pop
xchg
fisubs
or
mov
mov
mov
sub
mov
inc
inc
mov
sub
mov
aam
push
mov
mov
out
dec
jecxz
adc
mov
adc
and
pushf
int
push
and
sbb
dec
pop
adc
inc
jno
fldcw
push
mov
push
testl
sub
fcmovbe
mov
and
xchg
jecxz
cmpsb
pop
popf
mov
jmp
iret
inc
add
mov
cmpsb
test
cli
sti
push
push
jle
pop
push
push
fld
pop
cltd
pop
orb
lcall
test
or
mov
out
inc
repz
xchg
push
outsb
aaa
or
fidivl
push
push
cltd
cs
inc
in
cmp
pop
ds
fcmovnu
mov
jl
incl
pusha
and
out
dec
pop
leave
jmp
nop
subb
scas
pop
add
cmpsl
loope
and
out
adc
dec
pop
pop
push
leave
das
jnp
push
xchg
dec
mov
in
mov
or
adc
and
ret
shlb
inc
add
outsl
outsl
cltd
pop
or
sti
pushf
nop
xchg
mov
cmc
jbe
cltd
pusha
imul
test
lret
inc
mov
mov
stos
in
ss
dec
adc
mov
insb
imul
push
mov
mov
int
add
in
insl
cmp
jae
out
adc
adc
inc
fwait
dec
inc
pop
lcall
mov
rorl
or
icebp
jbe
lds
popf
nop
mov
jg
jmp
mov
shll
mov
fistpl
lods
xor
xchg
pushf
push
mov
mov
xlat
bound
popa
arpl
push
cmp
mov
test
xchg
jmp
scas
fwait
add
movsl
push
xchg
pop
rcll
push
sub
fmulp
jae
lock
gs
int3
cmp
cmp
ja
pushf
cmp
out
ret
pop
add
insl
push
js
and
movsb
push
and
pop
ljmp
inc
adc
sub
cli
mov
mov
fildll
mov
xchg
mov
mov
pop
xor
lahf
dec
imul
ljmp
stc
dec
cwtl
movsb
add
dec
sti
cmc
cltd
or
add
stc
adc
jnp
mov
shlb
mov
dec
fsubrl
orl
mov
jge
inc
and
adc
js
cmp
push
or
lret
xor
sbb
or
leave
daa
mov
inc
movsb
sub
lret
adc
jecxz
mov
in
out
lret
jns
into
addb
jp
add
aaa
icebp
jg
orps
hlt
sub
inc
sub
push
hlt
xor
jns
aad
subb
insl
cmp
fsubp
dec
scas
sbb
insb
cwtl
mov
faddl
sbb
sub
jnp
sub
call
add
pop
in
add
jge
dec
pop
push
bound
es
hlt
stc
mov
sub
cli
mov
mov
sbb
sbb
ret
daa
mov
daa
sbbl
pop
xor
mov
pop
mov
rorl
in
aaa
push
js
xor
mov
push
pop
or
outsl
xchg
and
frstor
addr16
test
cmp
mov
movsb
gs
in
inc
jp
loop
and
shlb
inc
lods
rorb
pop
push
fstps
clc
les
mov
sbb
cli
push
ret
test
out
lahf
push
out
mov
cmp
sub
or
int3
xor
or
or
jl
pop
mov
or
loop
fsubrs
bound
cmp
rclb
pop
mov
aad
arpl
jge
rol
push
push
fsts
in
imul
xor
imul
in
aaa
faddl
in
or
inc
dec
movsb
mov
movsl
hlt
and
sbb
repnz
push
int3
imul
loope
enter
push
mov
mov
clc
mov
in
mov
lret
cld
addr16
cld
les
icebp
mov
out
cmpsl
push
cmp
sub
dec
mov
inc
dec
jmp
ds
push
adc
lods
xchg
adc
jnp
cwtl
scas
je
mov
and
mov
and
cli
sub
sbb
adc
stc
repz
outsl
jnp
loope
ret
mov
adcl
mov
push
ja
sbb
mov
xor
ret
jl
mov
fwait
adc
dec
pop
fbstp
fdivr
push
jo
jmp
jno
sarl
inc
xchg
inc
mov
out
adc
push
sarb
add
mov
pushf
dec
or
les
das
mov
mov
sub
pusha
repnz
gs
xorl
js
pop
xchg
call
sub
std
icebp
cmpsl
or
pop
jo
popf
sub
jge
in
in
loope
lods
mov
mov
out
sbb
or
push
aaa
rcrb
mov
add
outsl
test
rclb
out
scas
sub
xchg
addr16
push
mov
jno
mov
push
sub
shr
push
mov
mov
sbb
stos
adc
lret
pop
push
iret
fistps
jge
pop
jle
outsb
cwtl
and
pop
jg
std
jnp
fucomi
or
or
test
divb
and
daa
mov
mov
out
mov
scas
adc
mov
or
pop
adc
sbb
movsb
jbe
dec
pop
sub
cmp
inc
inc
and
mov
adc
xor
out
pop
lret
fwait
rcrb
mov
adc
push
inc
cwtl
xchg
aas
cwtl
push
lods
icebp
fidivrs
and
adc
adc
clc
jg
lcall
adc
stos
std
in
dec
sub
outsl
xor
jbe
sarl
mov
xlat
popa
loop
xchg
cmpsb
inc
cmp
stc
mov
inc
sub
scas
imul
imul
addr16
mov
imul
pop
pop
mov
sbb
pop
sub
ja
sbbb
mov
sbb
adc
fcomp
mov
add
addl
pop
clc
test
sub
sbb
inc
and
call
in
dec
dec
popa
ss
lods
loopne
jae
pop
xor
push
cmpb
test
mov
lods
push
pop
lcall
pushf
push
sbb
imul
fbstp
mov
shlb
lods
enter
inc
aaa
cld
popf
inc
fstl
push
dec
and
lahf
jbe
test
outsb
push
jb
rcrb
in
addr16
and
hlt
add
scas
imul
imul
outsl
scas
adc
lods
mov
cli
mov
dec
pop
fdivrl
int
sub
mov
push
mov
mov
jb
pop
xchg
cld
int
push
add
mov
add
stc
mov
push
jb
test
es
addr16
mov
pop
mov
or
fistpl
lea
sbb
inc
aaa
mov
pusha
jae
fsubrp
cmpsb
inc
popf
sub
ss
in
push
int
inc
shrl
int
xchg
cmp
nop
ja
pop
nop
fwait
xchg
sbb
push
jle
jp
out
or
shll
pop
mov
mov
push
inc
xor
sbb
inc
decl
mov
arpl
mov
adc
xchg
cli
xchg
ljmp
aas
dec
cs
pop
xor
test
xchg
fistl
rolb
lods
jo
shlb
mov
test
mov
loope
in
cmp
aad
and
lea
adcb
push
pop
out
adc
int
fimull
in
jno
mov
out
or
sbb
cmp
xor
dec
push
stos
out
ss
mov
sbb
out
sub
xlat
enter
and
dec
mov
pop
insb
pop
pop
xor
sub
pop
out
out
add
inc
addb
adc
mov
movsb
xor
in
bound
rclb
popf
shr
sbbl
mov
dec
sbb
rcrl
mov
stc
or
mov
inc
adc
mov
imul
sbb
mov
push
cmpsl
dec
mov
sahf
aaa
jnp
dec
pop
pusha
mov
or
hlt
push
inc
push
call
jbe
es
mov
negb
cltd
xor
xor
pop
pop
cwtl
xchg
call
fs
push
fcmove
loope
aad
jo
insl
cld
dec
jecxz
push
enter
cmp
cwtl
stc
movsb
das
push
aad
xor
cli
pop
add
inc
sub
mov
fstpl
jecxz
jmp
sarb
jecxz
fldenv
insb
pop
mov
out
pop
shll
lods
xor
inc
jl
xor
fstl
cs
gs
sbb
mulb
jbe
leave
xor
pop
jg
push
push
inc
add
and
mov
mov
and
aaa
repz
lcall
jle
mov
ljmp
sub
outsl
mov
sub
mov
inc
and
sbb
jnp
mov
or
data16
mov
insl
loope
sbb
rcrb
leave
cmc
pop
push
mov
stos
cs
cmp
dec
xor
sub
lret
mov
leave
sub
lods
xchg
ja
js
jns
insb
xor
aad
rcrb
aad
jae
xchg
mov
fdivrl
mov
mov
aam
data16
xor
iret
inc
sbb
xchg
dec
lcall
out
je
xchg
fcmovb
repz
adc
in
mov
add
scas
xchg
and
aaa
scas
mov
mov
repz
sub
adc
dec
bound
dec
inc
cs
aas
sbb
out
inc
into
xchg
inc
cmp
ret
in
xchg
sub
in
ret
xchg
xchg
mov
leave
mov
push
add
inc
mov
imulb
inc
or
sbb
call
xor
sbb
iret
movsl
or
pop
jb
pop
xor
sub
push
addr16
dec
popa
jmp
cmp
leave
jecxz
std
sbb
cmp
mov
rcrb
or
jge
mov
dec
push
stc
hlt
or
in
out
sub
movsl
xchg
inc
adc
or
cmp
mov
sub
or
fdivr
sbb
xchg
sub
mov
sbb
imul
insb
andb
mov
cmp
dec
stos
cltd
push
mov
xchg
adc
or
stc
shr
les
std
jecxz
cmpsl
mov
aas
inc
lcall
dec
mov
mov
xchg
lock
enter
and
icebp
cmpsb
push
mov
scas
int3
test
js
scas
stos
sbb
jns
imul
add
sbb
mov
mov
mov
inc
add
mov
jge
fs
rclb
xor
inc
and
into
pop
addr16
cmp
mov
rol
test
xor
mov
dec
inc
pop
jae
test
das
hlt
outsb
pop
mov
or
shrb
pop
int3
or
push
jle
inc
aas
lret
mov
das
out
faddl
push
xchg
mov
stc
repnz
xchg
cltd
aaa
add
jmp
xchg
cltd
in
in
mov
push
mov
aas
lock
inc
or
mov
push
xlat
int3
in
sbb
mov
mov
repnz
fistpll
sbb
icebp
jge
call
loopne
xchg
jo
push
ds
jb
jl
push
insl
test
mov
stos
ret
pop
call
lcall
leave
inc
test
call
arpl
mov
dec
push
call
jne
sub
int
jecxz
fidivs
dec
jae
popa
cld
xor
cld
rolb
movb
ret
mov
or
cmp
shrb
adc
les
cmp
add
or
sbb
call
call
push
sub
call
add
push
add
idivb
das
mov
out
dec
mov
popf
in
out
sbb
push
lahf
std
popf
adc
shll
mov
xchg
jmp
adc
cmc
mov
subl
aad
mul
outsb
hlt
lock
lret
popf
push
xchg
cmp
sbb
pushf
int
test
loope
mov
repz
dec
mov
int
pop
les
mov
cmp
mov
mov
xchg
jmp
add
mov
adc
push
fwait
iret
repz
add
add
inc
int3
fisttps
sbb
fwait
lcall
data16
and
outsb
lret
mov
cmp
outsb
jne
test
mov
adc
mov
lcall
pop
rcrb
imul
or
cmp
jne
pop
frstor
or
hlt
jb
ja
and
ljmp
dec
imul
sub
mov
jecxz
sub
ret
ficoms
stc
xor
iret
lret
add
sub
lock
data16
lock
and
push
jbe
arpl
push
push
jae
sub
cmp
push
sbb
fisttps
inc
outsb
adc
xchg
jae
fdivrl
das
mov
and
adc
scas
xchg
jne
jnp
lcall
push
rolb
out
scas
andb
inc
imul
int
adc
xor
xor
outsl
mov
xchg
xor
dec
jecxz
push
jb
imul
fcmovu
leave
pushf
mov
jne
into
fbld
int
sub
icebp
fmulp
xor
sub
sub
scas
sahf
adc
xor
xlat
popa
aaa
jle
out
add
stos
mov
push
dec
xchg
fst
loope
xor
jmp
call
fisttps
gs
mov
inc
dec
xor
mov
add
jle
sbb
mov
push
insb
insl
cli
cs
mov
sbb
fidivrl
jo
lods
mov
arpl
xor
sahf
add
push
loopne
and
pop
jp
add
sub
hlt
ret
jg
lods
sbb
push
mov
dec
sub
jmp
jmp
add
orl
mov
loop
ss
fnstcw
add
xlat
insl
arpl
jp
fiaddl
stc
mov
adc
pop
xlat
pop
mov
scas
ss
xlat
dec
pusha
push
sbb
adc
xchg
pop
test
sbb
fcoms
cltd
loopne
in
push
adc
dec
pop
xor
aas
fldcw
lds
sub
aas
movsb
insl
push
push
cmp
aaa
lods
cmp
fisubrl
sarl
fs
out
ja
aam
bndldx
add
add
jns
in
dec
push
mov
cltd
xchg
dec
pop
mov
mov
int
pop
addr16
sbb
shr
dec
or
mov
cmp
push
roll
mov
inc
lods
add
arpl
nop
xchg
imul
cwtl
jl
ja
xor
shrl
xchg
into
int3
jl
aam
xor
jg
pop
mov
push
movsl
push
inc
ja
cmpsl
icebp
adc
sahf
jecxz
popa
neg
cmp
xchg
push
cmc
fldl
pushf
mov
addl
sub
dec
xor
aam
imul
mov
imul
into
std
push
lds
lods
xor
jge
cltd
jmp
and
adc
push
sub
imul
testb
pop
fstps
mov
ljmp
sbb
sbb
mov
out
adc
pop
call
mov
cs
jb
in
or
idivl
mov
daa
or
fs
insb
inc
rcr
ret
jbe
aaa
jl
cmpsl
push
mov
push
jecxz
jle
out
out
lock
mov
push
sub
mov
lea
popf
dec
inc
pop
xchg
jg
test
sub
jae
out
imul
sub
bound
xor
jo
adc
flds
push
push
xchg
aad
jns
jge
fs
sahf
cwtl
mov
inc
jmp
mov
inc
jp
fdivrl
mov
inc
fisubrs
mov
xor
pop
dec
mov
and
bound
cmpsb
xor
mov
ss
inc
ret
sbb
pop
dec
xor
popa
or
push
insb
ljmp
adc
adc
jmp
cs
ja
out
xor
inc
iret
xchg
jb
or
fsubrl
mov
mov
ss
hlt
or
fisttps
outsb
int3
mov
decl
ss
cmp
xor
push
sbb
jmp
and
and
cmp
inc
adc
subl
jns
inc
jnp
in
push
fsubrl
cmp
lcall
scas
add
aad
inc
add
dec
ret
ss
cmp
xchg
xor
loope
in
shlb
fisubl
fdiv
xchg
cmp
rolb
das
lock
fbld
lret
out
loop
ljmp
dec
cmpsl
sub
mov
xchg
cwtl
adc
jns
lahf
test
lret
aaa
clc
scas
jne
pop
je
sbb
cmp
lret
xor
push
popf
pop
and
out
xorb
lods
es
sbb
stc
loope
cmp
lock
fwait
add
hlt
sbb
adc
iret
inc
sar
imul
pop
ljmp
mov
sub
pop
fcoms
cmp
add
and
ret
stos
cwtl
or
mov
pop
int
jb
add
and
cmp
mov
dec
xor
and
push
sub
or
or
adc
loopne
mov
cld
cmp
adc
call
lods
or
adc
push
mov
adc
lret
lcall
push
push
pop
inc
mov
loopne
fdivp
lods
inc
addr16
decb
cld
add
pop
out
mulb
js
mov
and
add
or
subb
fildll
or
les
or
fdivr
out
aad
daa
cs
add
int3
scas
loop
lahf
pushw
xchg
push
icebp
push
pop
adc
arpl
add
cmpsl
icebp
aad
out
repnz
mov
adc
into
jne
bound
sbb
repz
mov
clc
cmp
sbbl
push
and
stos
insl
repz
mov
sbb
cwtl
test
cld
lock
cld
or
out
adc
sti
int3
mov
movsl
idivl
aam
sbb
das
int3
scas
icebp
pop
cmp
cs
lret
pop
pusha
add
mov
rcll
jl
jmp
push
sahf
out
sarb
xor
cltd
sti
mov
scas
jnp
or
jne
pop
sbb
jg
mov
iret
sub
and
pop
fcoms
movsb
insb
sub
mov
jg
outsb
bound
mov
das
mov
push
xor
push
in
add
and
and
ret
mov
mov
bound
xor
xchg
jl
mov
and
ljmp
ret
xchg
mov
stos
add
xchg
std
mov
cltd
fsubrs
lods
pop
mov
push
in
lret
fisubrs
mov
xchg
stc
rol
adc
xchg
xchg
aad
cmp
aas
stc
adc
hlt
xor
jo
and
and
mov
xchg
mov
fdivl
int
cmp
in
clc
push
add
or
syscall
push
mov
dec
jns
imul
sub
xchg
adc
push
aas
adc
sbb
fs
or
arpl
stos
sub
adc
pop
icebp
cmp
arpl
pop
scas
addr16
int
mov
pop
outsb
daa
sub
push
test
xor
push
jmp
subl
popf
outsl
sbb
mov
mov
aad
mov
cltd
jns
lods
rorb
jle
insl
mov
imul
push
pop
sarb
sub
dec
mov
mov
movsl
jbe
pop
xchg
xor
adc
mov
pop
cli
sub
lods
inc
cmp
sbb
dec
in
out
mov
das
mull
jl
or
and
cmp
pop
lods
adc
js
icebp
push
mov
outsb
inc
pop
jecxz
jge
sar
jbe
mov
inc
inc
js
add
add
inc
adc
dec
inc
ljmp
mov
andl
push
pop
dec
jmp
adc
inc
pushf
int
jge
enter
jns
nop
adc
xchg
pop
lret
push
lock
hlt
nop
push
movsl
rorb
cld
push
sbb
jg
mov
mov
pop
mov
dec
or
pop
mov
push
adc
loope
mov
adc
stos
xchg
out
sbb
push
lcall
not
pop
mov
mov
mov
loopne
push
xchg
push
dec
daa
or
push
ret
cmp
push
mov
sub
fmuls
clc
xchg
mov
push
lods
mov
lock
enter
pusha
es
push
and
out
loop
xchg
sbb
push
jp
mov
iret
pop
rcl
call
shrd
test
mov
fwait
popf
dec
or
ret
dec
dec
pop
pop
sub
lods
jbe
cmpsl
rol
inc
mov
out
arpl
xor
stos
xchg
or
push
push
icebp
negb
sub
mov
fsts
divb
xor
out
popf
xor
mov
cmp
and
in
mov
popa
in
sub
jae
xchg
xchg
shl
xchg
repz
or
rcl
xorl
sbb
or
test
loop
mov
ds
mov
pop
loop
out
push
in
dec
pop
xor
in
mov
subps
fwait
dec
rol
jle
test
in
std
sahf
mov
lds
pop
ret
xchg
in
xchg
lods
add
sarb
lcallw
add
add
inc
testb
pop
stos
add
or
data16
pop
adc
stc
push
lds
scas
lcall
cwtl
or
xchg
and
popa
leave
jbe
std
jnp
mov
jge
cltd
push
mov
outsl
xadd
jo
mov
xlat
pop
xchg
iret
popa
and
clc
movsb
xor
sbb
jb
mov
fdivl
jnp
xor
cli
dec
int
mov
mov
adc
cli
xchg
mov
xchg
jmp
je
fildl
sub
sti
inc
sub
aam
out
cmp
test
jb
ret
xor
out
xchg
sahf
xchg
cmp
or
mov
pusha
loope
push
fnstcw
or
decb
xchg
cli
lds
pop
orb
push
inc
sub
push
jmp
sub
cmp
imul
and
sbb
mov
hlt
cli
and
lea
outsb
gs
and
mov
cld
xchg
repz
lods
mov
cli
push
push
test
fdivrs
sbb
ja
aad
push
mov
jle
cltd
mov
push
mov
jne
insl
xchg
mov
jae
mov
leave
test
aad
jp
cltd
rorl
sbb
lret
loope
daa
shll
lahf
iret
fwait
pop
pop
in
frstor
cmpsl
popa
lea
mov
popa
test
inc
sbb
push
pop
push
sbb
aad
fmuls
mov
jae
sbb
in
push
adc
fnstsw
popf
loope
adc
dec
pop
ret
out
mov
push
mov
pop
or
mov
push
loope
in
pop
lret
pushf
adc
xor
int
sub
pop
ret
dec
pop
popf
lods
stos
push
dec
mov
cs
dec
lahf
aad
mov
pop
sub
or
push
lea
mov
aam
mov
into
add
mov
fimull
add
xor
xor
shrl
jecxz
clc
sbb
lods
inc
jo
mov
sbb
jb
ljmp
sbb
insb
das
rcl
int
xchg
sti
in
jp
cmpl
shr
push
shll
pop
sbb
or
lahf
cmc
adc
inc
push
imul
cmc
dec
and
sbb
ss
lret
pop
cmp
xchg
enter
xor
adc
fldcw
seta
scas
jle
xor
dec
xor
frstor
loopne
pop
call
cmp
jl
add
ds
mov
lcall
movsb
lods
or
ucomiss
sub
lret
inc
mov
pop
and
sub
cmp
add
inc
out
jg
jbe
push
adc
sahf
fdiv
ficompl
orl
mov
scas
jb
scas
mov
add
cmp
mov
and
cmc
insl
jb
jl
jo
adc
test
push
sbb
lods
loopne
xor
addb
je
sahf
sub
daa
pusha
mov
sub
test
shlb
test
jg
cmp
cmpsb
in
dec
xchg
rolb
xchg
mov
or
arpl
ja
push
cmpl
gs
inc
add
mov
stos
int3
xchg
repnz
jl
sbb
aas
cwtl
push
sub
ret
adc
fildll
and
shll
jmp
jl
mov
stos
add
enter
or
push
push
pop
int
or
xor
arpl
nop
or
popl
push
jno
scas
out
mov
or
repnz
mov
movsb
and
loope
mov
dec
in
clc
hlt
nop
enter
sub
mov
fcomps
ss
jle
add
mov
aas
popf
lods
cmp
adc
cmc
fdivrl
adc
mov
outsl
dec
pushf
fistl
mov
sub
cmp
jecxz
inc
ret
aas
aad
rorl
mov
test
lods
or
jnp
sbb
mulb
out
mov
mov
xor
fiadds
xorl
dec
or
cmp
leave
mov
pop
xor
lret
int3
inc
movsb
insl
das
test
mov
xor
test
mov
sti
mov
sbbb
cs
mov
cmp
mov
repnz
aas
repnz
movsb
xchg
xor
pop
imul
repnz
inc
mov
fcomi
or
popf
sahf
fcoml
pushf
xchg
and
mull
mov
cltd
push
test
pushf
stos
sar
adc
xchg
hlt
push
das
inc
jmp
ja
fnstsw
pushf
leave
mov
xchg
xor
adc
in
push
lea
nop
mov
repz
aaa
or
cli
mov
rorb
mov
rcrb
icebp
inc
cmp
mov
pop
and
jg
or
xchg
cmp
insl
xchg
fiaddl
fisttps
xor
clc
cli
push
movb
mov
lods
cmp
shrl
mov
in
add
fnstsw
popa
pop
jnp
fcompl
cmpsb
cltd
movsb
popa
mov
loope
cwtl
add
cs
and
jmp
or
stos
sbbb
into
mov
outsb
in
movsl
fcmovb
addr16
lret
out
lock
sub
dec
mov
jno
adc
jnp
push
xor
ret
fmuls
inc
mov
jge
inc
sbb
jle
out
out
fbstp
stos
xor
mov
sub
push
ljmp
mov
leave
aad
jns
ja
mov
push
mov
in
mov
ja
pop
negl
je
inc
loop
sub
imul
xor
push
mov
std
notl
mov
aaa
ds
fisubrs
sub
mov
mov
dec
es
pushf
cmp
and
inc
ffreep
or
inc
stos
push
pop
inc
icebp
cmp
and
mov
or
shl
dec
cmp
ss
inc
add
scas
mov
rclb
cli
aaa
les
xchg
inc
loope
adc
xchg
sub
push
clc
pop
sahf
jo
cmc
in
sub
testb
mov
and
add
ds
mov
dec
mov
je
push
jp
jp
inc
call
push
or
out
fistl
cmp
push
xorb
ror
addl
enter
sub
ret
pop
jp
xchg
repz
cmc
and
int3
fmuls
jae
pop
pop
sahf
xor
pslld
pop
sub
sub
jl
gs
cmp
pushf
ret
xor
fsub
ret
ljmp
scas
push
cmc
cmc
out
popf
sbb
sbb
and
pop
pop
std
addb
decl
out
mov
add
sbb
mov
test
popa
push
ljmp
and
jp
and
push
pop
or
dec
cmp
inc
cmpsb
inc
lret
imull
ja
pop
repnz
pop
fnstsw
mov
ret
xchg
loopne
jp
push
cld
aas
push
mov
jl
add
ret
cmpsb
hlt
push
cmp
loop
mov
jae
in
cli
mov
jne
fistpll
xor
dec
ficoms
inc
sbb
and
insb
push
pop
mov
mov
push
jbe
mov
imul
jne
push
jns
inc
loop
lret
in
cmp
cmc
jmp
adc
bound
adc
popf
push
xor
popf
mov
dec
inc
and
aas
test
lds
push
xchg
fstpt
test
xor
ret
ret
mov
mov
insb
fistpll
and
ja
jle
adc
cmp
jns
cmpsb
jnp
or
je
xchg
into
cltd
jno
mov
pop
into
xchg
cmp
hlt
mov
jle
leave
sub
pop
sub
add
lock
pop
imul
pop
or
mov
popa
loopne
loope
inc
movsl
lods
pop
roll
push
mov
leave
dec
pop
xor
loop
xor
aam
loopne
mov
xchg
in
mov
out
js
jmp
dec
mov
pop
push
in
aaa
loop
jno
mov
xor
and
ds
mov
sti
imul
rcr
ds
sbb
sahf
cltd
or
rclb
xor
cmp
rorb
out
mov
ljmp
nop
lds
rcl
enter
idivl
adc
pop
lods
mov
jnp
stc
cmp
imul
jp
push
fidivrl
adcl
xchg
mov
inc
ljmp
push
cld
or
sti
add
mov
ss
pop
stos
mov
sbb
inc
notl
or
icebp
rorl
loopne
sbb
mov
sub
or
inc
jp
pusha
fldl
les
sahf
xor
ss
xchg
mov
pop
jns
jns
add
lds
push
or
inc
mov
ret
aas
js
movsl
jne
ja
dec
pusha
lret
pop
sbbb
xlat
dec
cmc
cld
out
cmc
dec
xor
cs
je
cmp
sub
les
data16
sahf
sbb
sbb
pop
mov
adc
popf
les
push
mov
mov
mov
pop
cmp
push
add
sbb
xchg
fcoms
mov
dec
dec
xorb
orl
stos
sub
filds
cmp
ds
pop
inc
push
xchg
cmp
cmpb
or
dec
adc
test
fwait
movsb
inc
out
subl
out
in
insb
aas
loopne
hlt
mov
dec
mov
mov
jnp
mov
pop
sbb
outsl
lcall
sub
fidivrl
mov
pop
fnstsw
fdivrs
leave
add
mov
mov
dec
addr16
mov
push
xchg
jmp
leave
fstpt
inc
push
dec
cmp
jnp
or
sbb
call
sbb
push
std
or
add
sbb
fbld
cs
inc
xchg
or
jg
jl
ss
mov
and
jge
sbb
jecxz
jp
aad
mov
cltd
mov
mov
push
mov
insb
jae
adc
in
fwait
clc
aaa
popf
cmc
in
adc
dec
jmp
inc
sahf
push
sti
mov
jge
lcall
addr16
cltd
jge
fsubs
push
outsl
adc
pop
mov
push
jle
jle
ficoml
sbb
dec
or
xchg
dec
mov
pop
std
popa
ljmp
imul
shll
pushf
es
adc
jg,pt
sub
lds
stc
shll
add
mov
fistpll
movsb
fisubs
inc
popf
fdiv
sub
pop
in
xor
into
and
loopne
mov
lret
pop
ljmp
sbb
or
loop
lock
cld
jnp
cmp
test
scas
js
dec
add
iret
js
gs
dec
xchg
das
mov
add
fdivrs
jo
jmp
push
enter
jnp
xchg
mov
out
mov
out
adc
repnz
leave
leave
jmp
lods
pop
out
xor
mov
aaa
xchg
jns
jecxz
mov
or
jbe
adc
mov
pushf
mov
jae
cmp
ds
jecxz
fbstp
decb
pop
jno
cld
jl
mov
dec
enter
inc
dec
nop
mov
cmp
pop
xlat
ret
sub
xor
daa
and
or
mov
mov
and
inc
cmp
push
mov
xor
and
or
loop
ret
clc
push
push
in
aaa
dec
into
pop
sbb
push
aaa
out
or
push
xchg
add
push
sub
pop
cwtl
dec
icebp
xchg
mov
inc
push
cwtl
xor
add
mov
xor
or
inc
mov
cs
daa
pop
scas
sahf
jmp
sub
add
or
scas
push
movsb
in
add
cmp
popa
or
imul
xor
sub
les
xchg
stos
mov
insl
or
enter
push
daa
cltd
cmp
leave
repz
jg
test
dec
icebp
ret
pop
sbb
sub
dec
jmp
rolb
push
push
adc
jno
lahf
daa
into
aad
push
ss
mov
sbb
add
test
mov
push
and
call
out
add
divl
clc
xor
jo
sub
push
adc
stos
adc
adc
arpl
xchg
jge
push
stos
inc
xchg
xor
adcl
jg
or
mov
adc
sarl
xchg
jecxz
pop
popa
mov
inc
pop
iret
mov
xor
adc
jo
stos
fwait
mov
pushf
or
jecxz
adc
adc
stos
xor
rcll
cmpsb
imul
divb
je
push
test
add
cmpsb
xor
mov
bound
shrb
mov
dec
idivb
xchg
pop
jmp
jnp
inc
enter
push
pop
outsb
mov
xchg
xor
and
aam
sbb
pop
push
inc
imul
mov
jp
stos
mov
stc
ret
add
imul
add
lea
xchg
iret
fnstenv
pop
iret
pop
xchg
fisttps
ss
lock
out
adc
popf
leave
xor
inc
mov
fstps
push
adc
mov
xchg
out
add
mov
test
es
scas
sahf
mov
jae
xchg
das
out
pop
jle
add
mov
mov
xor
pop
pusha
jle
inc
repz
movsb
call
aam
push
lock
sahf
cmp
sbb
jge
and
xor
inc
mov
xlat
jle
xor
mov
sub
jns
jmp
aam
ftst
sahf
sbb
jbe
insb
and
adc
jne
flds
push
mov
mov
inc
call
and
xchg
xlat
mov
clc
ja
and
inc
add
pushf
sbb
fsubrs
test
es
xor
mov
xor
in
sbb
push
out
sub
lock
pop
inc
and
cs
mov
pop
pop
data16
jo
out
fdivr
cmpsl
je
sbb
mov
fmull
lea
adc
cs
rclb
loopne
pop
xchg
push
mov
fdivs
add
in
std
mov
pop
hlt
pop
data16
out
fldl
push
adc
pop
enter
add
xchg
cmpsb
push
pushf
ja
mov
lods
inc
mov
popf
adc
rolb
shl
das
mov
xchg
cmpsl
stc
and
xchg
mov
enter
push
add
and
pushf
push
lret
jge
scas
dec
das
pop
loope
jnp
lretw
aam
shl
decb
mov
in
lock
fnstenv
xchg
stc
lcall
mov
call
nop
test
pop
outsb
loope
dec
fildl
xchg
stc
pop
icebp
mov
das
je
pushf
fs
cmp
inc
inc
imul
dec
sub
push
mov
mov
arpl
xchg
mov
lcall
stc
xor
fisttpll
pop
mov
sahf
imul
ja
mov
jno
lret
fidivl
testb
add
xlat
ret
cmp
nop
ja
loop
xor
inc
movsl
test
mov
lds
dec
shrl
push
lcall
sbb
daa
notb
inc
imul
add
in
adc
or
cmp
ret
shlb
and
mov
xchg
fstpt
pop
xor
out
pop
fs
arpl
xor
in
pop
push
mov
sbbl
xor
jbe
outsb
mov
iret
xchg
ljmp
cmp
cmp
pop
loopne
sbb
dec
mov
mov
rorb
data16
and
jl
pushl
or
repnz
rcrl
xchg
lea
push
push
out
jp
xchg
pop
out
and
jecxz
test
xorl
pop
xchg
sub
push
pop
stos
fnstenv
mov
and
push
xor
or
pop
insl
stos
out
dec
ret
cmp
pop
inc
dec
inc
pop
outsb
icebp
fwait
stc
daa
std
jge
out
sub
sbb
lahf
arpl
push
mov
gs
imul
stos
mov
out
aam
push
mov
out
sub
inc
in
adc
mov
std
ret
dec
mov
icebp
mov
pop
xchg
ja
inc
lcall
in
int3
pushf
lds
int3
ret
ficompl
test
or
loope
or
fbld
lea
lods
arpl
sahf
bound
adc
jl
mov
mov
and
xor
xchg
das
mov
loope
jge
ret
call
scas
bound
mov
dec
lock
idiv
jl
out
movsl
sbb
and
popl
push
xchg
clc
bound
sbb
dec
jb
inc
push
mov
add
mov
cmpsb
or
data16
leave
dec
xor
pop
mov
dec
into
insb
jae
cld
add
dec
xor
clc
addb
imul
out
cmp
xor
jne
jo
adc
cmp
rcr
arpl
and
add
add
lret
cmp
adc
fwait
clc
sbb
or
leave
xchg
nop
lea
std
mov
loop
lods
xor
inc
out
inc
in
cwtl
or
movsl
lods
add
lcall
pop
js
push
push
ror
pushf
jle
push
fildl
mov
loopne
notl
sbb
shrl
jp
dec
stos
jnp
pop
cli
enter
mov
jne
jmp
dec
or
ljmp
sbb
aad
jnp
cli
ds
test
jge
ss
test
sub
and
scas
lds
add
int3
or
ljmp
push
cmp
and
and
test
mov
insb
cmp
mov
iret
mov
xchg
bound
rolb
rcrb
xchg
popf
fnsave
push
mov
scas
mov
mov
mov
lret
push
popa
push
push
stos
sub
lahf
cltd
adc
popa
dec
xor
jno
mov
loopne
stos
mov
inc
mov
add
popl
stos
lea
push
popa
jmp
fidivrl
lock
stc
lcall
insl
pop
std
sub
mov
dec
jne
in
loop
xor
push
aad
test
cmpsl
or
pop
cmp
test
je
sub
cmp
imul
shlb
aad
and
xor
dec
jne
in
adc
adc
loope
or
mov
or
push
mov
pop
inc
and
cmpsb
jg
inc
ljmp
pop
pop
xchg
lods
imul
and
cmp
lret
add
cmp
xchg
outsl
ljmp
data16
sbb
pop
outsb
lret
out
fisubrl
iret
mov
ret
sahf
fdivrp
lahf
dec
jp
mov
addl
xor
mov
cmpsl
jnp
or
jl
test
iret
mov
call
xchg
pop
cmp
xor
xchg
mov
cmp
sbb
cwtl
aad
arpl
mov
inc
add
jae
cwtl
push
das
dec
sbbb
ds
mov
sub
pushf
or
mov
addr16
jbe
mov
popf
pop
movsb
stc
inc
inc
pop
sti
rcrl
daa
lcall
xchg
sbb
mov
and
inc
jb
test
dec
aad
jno
and
or
cmpsb
mov
jecxz
mov
into
mov
sub
jno
adc
pop
adc
cmp
shl
push
cltd
outsl
mov
pop
pop
sahf
pop
sbbl
das
sbb
jae
push
pop
notl
cld
inc
sbb
pop
push
or
dec
flds
lcall
inc
adc
ds
push
adc
clc
fcomps
jbe
inc
repnz
out
jmp
jg
clc
arpl
pop
test
rorb
lret
gs
push
subl
push
jne
jne
in
loope
mov
aam
clc
fildll
inc
pusha
inc
jns
outsl
pop
orl
repnz
lret
xor
bound
jmp
enter
test
pop
jmp
add
das
ss
imul
mov
pop
lea
xor
insl
pushw
push
addl
jecxz
cmpsb
test
imul
inc
jno
lds
shl
push
stos
inc
mov
jo
jno
sti
push
cmp
js
outsl
mov
pop
cwtl
adc
push
inc
icebp
fcmovnb
pop
std
dec
mov
inc
cmpsb
mov
push
push
leave
sarb
mov
imul
and
mov
jo
dec
dec
sub
push
outsl
add
pop
cwtl
fs
imul
xchg
sbb
mov
lock
fisubrs
xchg
rorl
les
jns
xor
gs
outsl
in
dec
test
andb
adc
push
pop
les
adcl
xchg
pusha
loope
sbb
adc
je
mov
call
mov
sub
xchg
leave
adc
dec
test
and
sti
pop
mov
les
test
sbb
rclb
sti
sbb
sbb
adc
mov
xchg
or
pop
add
dec
xor
pop
inc
xor
mov
loop
pop
or
xor
and
sub
out
sbb
pop
add
out
imul
adc
mov
sbb
mov
mov
lret
loope
mov
mov
je
aaa
imul
mov
arpl
int
icebp
pop
inc
rcll
es
sbb
sbbb
pop
xchg
pause
pop
fcompl
or
addl
and
fstpt
sub
test
xchg
jno
push
xor
jle
adc
in
sub
hlt
mov
cltd
loope
mulb
push
sub
and
scas
sub
icebp
xchg
in
ds
loopne
dec
aam
inc
mov
xor
lea
and
pop
sub
adc
jb
clc
fprem1
xlat
rcrl
mov
jo
or
bound
inc
push
test
mov
out
jno
repz
ljmp
push
dec
inc
push
sbb
push
loope
fimull
pushf
push
mov
xor
and
xorb
or
pop
add
push
mov
cmp
lods
adc
lret
cltd
insl
nop
ffreep
test
dec
fmul
mov
cli
mov
mov
sbb
sarb
jns
sti
fdivrs
jle
mov
stos
lock
inc
mov
je
push
mov
stc
push
sub
outsb
cmp
test
xchg
xor
daa
shll
pop
loop
mov
cli
fstps
or
mov
lahf
jl
mov
inc
and
and
push
shrl
jbe
movsb
mov
xor
cmp
gs
fimull
xor
add
loop
stc
pusha
mov
dec
push
test
pop
repz
neg
fstpl
add
sti
sub
test
imul
std
pop
sub
pusha
lds
pusha
mov
mov
mov
push
cltd
jle
xchg
cmpsl
outsl
cmp
js
mov
mov
fistpll
lods
cmp
jb
mov
mov
push
lea
lock
cli
ljmp
jecxz
sbb
arpl
mov
push
insb
mov
dec
mov
xor
push
xchg
loopne
xchg
jle
push
mov
pop
fucomi
out
lock
cmp
inc
shlb
add
cmpb
cltd
mov
mov
sbb
sbb
and
orl
jne
dec
dec
mov
sub
dec
repz
test
sbb
bound
xor
test
sbb
xor
das
mov
rorb
test
out
mov
loope
push
aaa
enter
in
sub
and
adc
daa
test
je
jl
adc
iret
ljmp
iret
push
push
and
data16
aad
mov
imulb
es
dec
sbb
fisubs
sbb
push
or
ds
jge
push
into
aas
fiadds
sbb
xor
je
mov
scas
push
fwait
push
mov
mov
cld
jecxz
aaa
jl
add
sub
add
inc
push
jne
or
pop
xchg
pushf
adc
lea
int3
aam
jae
scas
adc
test
mov
in
loope
sub
addb
fistl
nop
dec
mov
xchg
dec
mov
push
xchg
cs
xchg
imul
stos
pop
test
in
mov
lds
popa
adcb
ret
push
psrld
mov
mov
xor
data16
imul
loopne
cltd
xor
jmp
fildll
fwait
jbe
inc
cmp
hlt
movsb
push
std
and
push
negl
xor
imul
repz
mov
setp
jmp
pop
jnp
ficoml
cld
mov
out
sbb
push
pushf
pop
sub
cmp
mov
dec
mov
and
push
test
inc
cmp
jae
sbb
fmulp
bound
dec
out
popa
jecxz
pop
arpl
mov
inc
leave
and
jb
mov
mov
iret
adc
adc
or
mov
mov
xchg
test
xor
mov
out
in
pop
sub
xchg
sti
lret
scas
je
outsl
and
mov
or
iret
inc
icebp
das
rorb
test
pushf
mov
fcmovb
inc
sub
mov
xchg
xchg
fwait
mov
fidivl
fldt
dec
add
in
inc
jg
pop
and
ficoml
push
out
into
aam
inc
int
xor
mov
sbb
dec
mov
pop
push
xchg
jl
les
orb
js
cmpsl
inc
push
jge
cmpsl
adc
ss
xor
lcall
faddl
push
pop
jae
xor
fstpl
mov
rol
inc
add
push
pop
iret
and
dec
and
mov
fnstcw
std
mov
xchg
xor
cmp
cmp
cwtl
addl
in
sbb
sub
rcrb
adc
jl
inc
and
cmp
inc
into
in
insb
sub
pop
dec
sbbl
or
cwtl
lcall
and
ret
xor
neg
or
jb
jo
repz
inc
mov
push
xchg
aad
rcrl
sbb
ret
jne
xchg
mov
lret
jle
jbe
stos
popa
mov
ret
notl
cwtl
pop
fsubl
sub
xor
das
and
push
cmp
xchg
movsb
sbb
mov
xchg
inc
test
sbb
dec
dec
out
pop
aas
fildll
gs
pop
pop
scas
icebp
fs
mov
adc
add
fs
ret
cmp
adc
xor
jo
negl
sahf
lea
lods
inc
sub
mov
inc
mov
ds
or
std
push
sub
push
orb
out
push
mov
inc
scas
pop
xlat
int
cwtl
in
xchg
test
cmp
iret
xor
clc
jbe
pop
aad
cmp
aam
nop
data16
mov
fnstsw
sbb
or
fists
mov
xchg
or
add
sahf
mov
xor
movsb
inc
pusha
cmp
jb
xchg
andb
mov
xchg
pusha
gs
mov
pop
jmp
fdivrp
xchg
test
repnz
es
hlt
jae
mov
mov
xchg
daa
and
push
pop
leave
inc
sbb
hlt
xchg
pop
or
inc
push
or
add
aaa
rorl
push
inc
fadd
das
outsl
dec
cmp
sbb
in
xchg
ret
arpl
inc
nop
ret
in
in
std
sub
notb
pop
sbb
jg
pop
mov
popf
sbb
cld
dec
lret
sahf
cwtl
outsl
inc
out
adc
cwtl
sbb
cmc
cltd
testb
mov
movsl
mov
mov
pusha
mov
cmp
mov
mov
mov
or
ss
mov
ret
jge
sbb
adc
adc
sbb
outsb
ds
scas
inc
stos
push
fnstenv
pusha
popf
ret
jns
cltd
inc
xlat
mov
dec
sub
pop
lods
cmp
mov
mov
jp
xchg
sbb
pop
mov
xchg
inc
mov
jp
or
fbstp
imul
mov
cmp
js
les
out
inc
ja
push
hlt
ss
mov
stos
stos
je
jo
jae
mov
mov
test
jl
pusha
movsb
es
adc
je
pop
gs
xor
push
mov
mov
test
add
cmp
int
imul
jno
lds
and
xchg
add
xor
cwtl
adc
test
lods
fwait
stos
push
test
or
push
pop
or
sahf
or
inc
mov
inc
push
jo
mov
cmp
mov
testb
add
xor
and
lret
out
sub
cmp
pop
out
lds
shrl
push
jno
aad
in
sbb
jae
es
adc
daa
inc
andl
xor
jle
xor
insl
jb
stos
push
push
stc
push
stos
cmpb
add
sbb
cmp
iret
jp
lock
test
ljmp
sub
mov
aas
adc
popf
outsb
inc
pop
inc
mov
insl
lods
insb
jge
mov
ds
cmp
sbb
lret
jecxz
leave
fcoml
xchg
push
dec
lcall
imul
xlat
jl
aam
andl
jmp
cwtl
aad
pop
jne
fs
inc
mov
fidivl
inc
out
mov
or
pop
cmp
sub
sub
fisubl
cmp
adc
adc
dec
loop
mov
mov
es
cwtl
ds
xor
push
test
sub
pop
cmp
rcll
jnp
push
stos
test
or
fldcw
div
xchg
aaa
ljmp
dec
loope
mov
inc
dec
stc
sub
add
scas
stos
sbb
mov
pop
cmp
or
pusha
nop
adc
out
inc
leave
cmp
and
add
stc
jp
jmp
mov
leave
notb
xchg
dec
outsl
push
sti
mov
pop
mov
popa
les
sub
pop
sbb
sbb
cmp
test
jl
jae
inc
mov
das
fwait
shll
sbb
dec
push
mov
fstl
sbb
or
stos
or
sbb
cmpsb
cmp
dec
pop
mov
xchg
adc
dec
nop
mov
gs
jge
mov
sub
add
lret
js
pop
inc
ds
pop
jb
test
mov
cmp
sahf
jmp
sqrtps
mov
std
mov
pop
test
push
jge
rorl
lret
dec
push
and
dec
das
inc
rclb
int3
scas
fwait
mov
sti
add
enter
jb
insb
jb
int3
sub
cmp
jbe
aam
scas
test
scas
dec
adc
and
mov
sbb
dec
jmp
mov
inc
fisubrs
ficoml
jb
insl
std
inc
xchg
iret
test
push
lcall
rclb
int3
jae
push
mov
int3
and
add
xor
push
lods
lahf
lds
cltd
in
rorl
inc
lea
lcall
xchg
mov
jbe
jmp
dec
xor
pop
pop
rcrl
pmaxsw
aam
xchg
inc
andl
pop
push
addl
jl
adc
sahf
sti
in
pop
add
ret
inc
xchg
imul
dec
xchg
imul
inc
pop
xchg
fstpl
pushf
scas
shlb
mov
loopne
in
jl
pusha
inc
and
or
loop
fisubl
jbe
outsl
notl
pop
scas
pop
xor
xor
aam
loope
jg
push
scas
call
popa
sbb
or
call
testl
push
movsl
mov
push
and
fcoms
pop
addr16
cmc
mov
sbb
imul
mov
sbb
jge
lea
cli
dec
xchg
dec
sub
sub
mov
adc
xchg
or
xor
fistps
mov
add
adc
dec
xchg
jnp
xchg
sbb
mov
xor
imul
xor
push
cli
sbb
push
sbb
pop
outsb
pop
aaa
rcrb
test
in
push
jae
lock
cmp
sbb
sub
loop
gs
inc
or
lahf
sub
inc
adc
push
shll
cmp
fldcw
sbb
cld
mov
pop
sbb
add
dec
sbb
cmp
pop
test
mov
pop
cmc
or
sbb
inc
mov
dec
subb
das
jne
cmp
sbb
and
stc
fimuls
mov
call
pop
imul
cmp
cmp
fwait
pop
jle
mov
pop
jno
inc
mov
stc
adc
mov
test
mov
cmc
outsl
lods
outsl
fisubrl
js
mov
adc
sub
data16
push
jne
shll
mov
fisubrs
popf
jge
int
je
adcb
test
icebp
mov
cld
nop
or
adc
test
dec
lret
cmp
adc
sbb
cmp
mov
sbb
sbb
sti
fdivs
cld
stos
sarl
push
push
mov
or
sbb
ret
jmp
popf
or
sbb
test
or
or
pop
test
cmc
lds
xchg
push
nop
xchg
ss
or
fwait
jmp
popa
mov
out
add
mov
sub
lret
jb
push
dec
push
xor
adcl
jae
adc
loope
xchg
test
scas
popf
movsl
mov
dec
aaa
mov
pop
fs
movsl
push
shlb
gs
jp
xchg
sub
cld
cld
ds
or
push
adc
xchg
mov
fsubs
in
pop
div
adc
push
or
rcrb
movsl
push
cld
mov
int3
jo
mov
imul
aaa
xor
mov
fwait
xchg
stc
adc
insl
cmp
cmp
mov
cmp
gs
mov
jno
xchg
xor
fnstcw
popl
xchg
scas
jg
arpl
ficomps
call
sahf
outsb
enter
out
es
push
sarl
sub
cmc
mov
mov
leave
adc
es
cmp
or
aam
mov
mov
in
imul
pop
mov
sub
stc
add
inc
iret
sbb
shl
push
dec
clc
inc
dec
ds
insl
loope
ljmp
push
into
sbb
sbb
dec
ffreep
pop
mov
scas
roll
mov
mov
dec
xchg
cli
ds
sbb
lock
int3
inc
mov
sbb
and
arpl
scas
pop
sub
cltd
mov
aam
sbb
push
adc
fsubs
loop
cmp
je
jge
mov
fildll
cmp
push
jne
pop
lcall
jbe
sub
cltd
mov
xor
ds
rcrl
xchg
push
cmp
add
ljmp
lret
adc
add
shl
sub
jae
adcb
repnz
popf
loope
lods
hlt
popf
mov
stc
movsb
dec
jp
mov
inc
push
aad
cmpsb
inc
jbe
lods
jle
fnstenv
pop
adc
es
mov
mov
lods
adc
out
and
bnd
push
fmuls
xchg
clc
lahf
icebp
pop
data16
jmp
adcl
cmp
mov
test
js
jno
test
xchg
insb
mov
pushf
inc
dec
into
in
pop
ss
pusha
rclb
dec
or
add
in
lods
xchg
test
enter
in
ja
inc
jo
jle
cltd
call
or
push
in
lahf
stos
sahf
popf
cwtl
or
mov
push
and
mov
pop
movsl
add
lock
fldcw
xor
inc
test
ds
inc
pop
fistpll
iret
mov
or
lea
sub
lds
jge
mov
sub
aas
jo
xchg
push
dec
add
jmp
in
lret
int
ret
push
inc
push
test
test
dec
hlt
push
or
mov
xchg
sbb
dec
pop
in
cmp
jle
outsl
push
jmp
movsl
in
push
lcall
inc
loop
sbb
or
xor
lret
adc
inc
in
inc
mov
push
push
pop
jle
jl
xor
push
pop
mov
mov
daa
aad
mov
out
sbbb
mov
mov
jmp
aam
xor
adc
int
dec
xchg
std
jp
cs
rorb
push
lret
fucomip
pop
inc
dec
mov
inc
lahf
aas
xchg
movsb
fiaddl
xor
jne
sub
push
mov
xor
xchg
or
enter
sti
mov
popa
pusha
ljmp
or
sbb
int3
cli
roll
push
xchg
scas
repnz
incl
mov
mov
stos
mov
in
xor
sub
adcb
fiadds
ret
mov
add
pop
daa
and
cmpsb
push
movl
mov
dec
sub
call
pop
jmp
push
sbb
pmovmskb
rcl
and
pop
pop
jg
xor
mov
in
cmp
lea
push
movsb
cmp
mov
mov
aam
xchg
xor
aad
or
mov
push
call
and
mov
inc
cmp
xchg
pushf
mov
dec
cmp
fnstcw
xor
scas
xchg
mov
jecxz
sbb
push
enter
fwait
inc
hlt
sub
lret
add
add
inc
cli
fldenv
sbb
xor
push
lods
mov
cmp
or
cmovne
popf
leave
das
sbb
xor
sarb
push
sbb
xor
repnz
nop
inc
adc
jecxz
sbb
loopne
or
mov
sbb
mov
idivl
aam
data16
imul
sub
insb
inc
std
adc
dec
clc
daa
loope
or
jle
jmp
jne
fisubl
les
adc
mov
pop
repnz
pop
jns
fnstenv
fiadds
popf
jb
sbb
mov
mov
lcall
pushf
jmp
mov
in
xor
pop
and
or
cwtl
pop
fabs
lea
xchg
sub
aad
and
mov
das
mov
add
lcall
outsb
les
sbb
loop
cld
lock
enter
mov
lret
mov
sarb
mov
mov
add
and
movsl
out
shlb
xor
test
test
mov
sti
jg
lds
pop
or
lcall
add
pop
mov
jnp
aaa
mov
scas
in
push
in
ret
aas
cmp
outsb
insl
dec
lock
pop
leave
lret
cwtl
arpl
mov
push
aaa
adc
out
inc
jle
inc
lods
scas
xor
inc
add
mov
aad
dec
rorl
inc
cmc
pop
xchg
nop
dec
push
pop
lea
idivl
sub
mov
mov
jbe
insl
ret
xchg
das
fbld
cmp
in
xor
pop
xchg
sbb
inc
jp
pop
in
lods
mov
test
add
sub
insl
cs
mov
loop
std
lret
sbb
mov
xor
xor
add
ret
popa
push
fidivrl
and
sub
in
iret
push
cmp
sti
add
lea
lods
dec
testb
pop
fucom
adc
xchg
pop
and
adc
cmp
call
jecxz
adc
hlt
or
scas
inc
and
rolb
ljmp
dec
sbb
xchg
loop
add
out
sti
sub
fcmovnbe
inc
add
push
xchg
and
push
in
in
or
sbb
lahf
cmpl
aam
jge
nop
add
dec
push
mov
call
lea
hlt
fistl
jnp
jle
xchg
sbb
mov
sub
int3
jae
das
push
pop
in
jg
cmp
adc
xchg
inc
jg
stos
mov
nop
repnz
fisttps
movsb
sbbb
shrl
jmp
pushl
push
mov
mov
mov
lods
es
push
sbb
pop
stc
cmp
daa
aad
sub
mov
setb
into
mov
les
mov
rolb
fmulp
add
fwait
jg
imul
xchg
sub
fldt
add
cmc
bound
mov
js
xor
pushf
cli
mov
jl
fdivp
mov
adc
fwait
push
ret
mov
jecxz
pusha
pusha
out
sub
xor
mov
roll
mov
ds
add
repz
jno
inc
mov
fst
ficoms
mov
jge
js
cwtl
mov
pop
lcall
pop
xchg
scas
loope
sti
and
test
lcall
xchg
sbb
mov
lock
es
std
fnsave
xor
cmpsl
jns
das
mov
or
aas
cmpsl
jle
mov
es
insb
xor
jnp
mov
out
arpl
repz
pop
xor
dec
int3
test
leave
mov
cmp
mov
dec
sbb
mov
xor
inc
adc
fidivrl
dec
inc
dec
adc
jne
mov
call
std
insb
fcomp
cld
shl
push
addr16
imul
scas
mov
push
dec
mov
sub
outsl
fwait
push
pop
xchg
aad
mov
mov
inc
mov
mov
les
call
sbb
xor
cmp
and
popf
add
mov
sub
add
cwtl
and
aas
adc
scas
stos
dec
jg
std
clc
repz
aaa
jne
sbb
dec
jnp
xor
push
mov
mov
cmp
stos
push
std
mov
popf
inc
dec
inc
inc
mov
pop
aad
pop
xor
in
test
sbb
xchg
inc
mov
daa
add
pop
or
xchg
in
stos
lret
pop
xchg
cltd
dec
out
mov
dec
and
sbb
dec
fsub
xchg
das
ret
mov
rcrl
xor
lahf
fcomi
jl
popf
cmp
and
pop
stos
add
out
cmp
rolb
mov
pop
or
ficompl
jo
xchg
repz
sbb
cmp
sbb
push
mov
dec
xchg
ja
mov
insb
pop
sub
repz
sbb
fstps
mov
push
arpl
mov
int
cltd
sbb
into
xchg
sub
sub
loope
sbb
cmc
mov
inc
dec
mov
ss
fs
and
push
popf
rol
cmp
push
or
mov
mov
sbb
jo
aaa
adc
add
icebp
xchg
cs
lret
shll
cmc
jl
mov
imul
pop
sbb
imul
cmpb
int3
and
aam
or
xchg
dec
push
sbb
xchg
ds
and
js
mov
rorb
andb
dec
adc
push
cmc
repnz
jnp
inc
mov
into
cmp
add
shll
push
push
ja
scas
xchg
sub
pop
mov
mov
in
jmp
mov
sub
mov
aad
cmp
xor
adc
orps
icebp
adc
add
adc
loop
mov
test
xor
mov
mov
add
test
push
inc
ret
pop
xchg
shrb
dec
xchg
ret
jbe
fucomp
pop
mov
inc
nop
test
mov
xchg
inc
iret
xchg
dec
jae
lcall
in
movsl
repz
adc
jg
add
scas
dec
jne
inc
cmp
sbb
inc
jbe
out
lock
arpl
addr16
out
scas
xchg
jnp
jb
add
shrl
jecxz
je
xchg
cmp
pop
sub
cwtl
scas
add
cli
adc
and
push
pop
sub
mov
jmp
jg
in
or
inc
pop
sub
sub
xor
mov
pushf
push
cmpsl
inc
inc
jp
clc
push
push
xor
or
mov
pop
das
jne
loop
enter
jo
gs
inc
cmp
xor
into
cli
leave
sub
lret
jg
and
outsl
add
add
push
jo
jnp
std
in
stos
subb
pusha
push
cmp
sbb
mov
jecxz
jb
mov
scas
pop
into
dec
mov
lods
push
dec
xchg
popf
jg
or
jbe
rcll
cltd
stos
sbb
xchg
inc
or
leave
movsl
jne
fsub
frstor
sbb
sub
sarb
adc
mov
aam
mov
fildll
sub
sub
mov
inc
stc
pop
or
pop
test
cmp
cld
inc
aaa
mov
add
dec
sub
inc
nop
adc
sub
aad
es
jp
das
jno
outsl
sti
std
push
mov
pushl
mov
sub
popa
sub
out
repz
jge
out
lret
sub
jno
pop
scas
dec
sbb
or
sub
pusha
xchg
imul
lret
jmp
dec
push
mov
cmpsb
jno
in
mov
push
aam
mov
int3
adc
incb
adc
enter
jl
jnp
ljmp
push
pop
xlat
mov
cmp
bound
push
mov
test
jo
jle
rclb
outsl
or
rcll
stos
leave
or
test
faddl
loopne
mov
sbb
add
sbb
jmp
push
in
icebp
call
nop
push
pop
je
aas
cmpsl
cltd
sbb
jmp
pop
iret
rorl
pop
push
push
mov
pushf
pop
dec
inc
stc
imul
aaa
cmpsb
or
andb
daa
cltd
push
mov
fisubs
xor
xlat
dec
out
xchg
inc
fs
imul
sub
push
fidivrs
lea
dec
imul
sbb
jne
mov
movsl
lret
jae
je
rorb
lret
add
test
push
push
xchg
in
je
nop
mov
adc
dec
ret
lcall
notb
push
pop
insb
sub
insl
mov
hlt
enter
push
xor
jne
fistpl
in
push
mov
sbb
nop
icebp
xchg
jbe
popf
add
ffree
fwait
bnd
push
int
add
out
cmp
xchg
mov
jecxz
loope
lds
in
add
clc
loope
cmp
jae
inc
stos
add
call
mov
dec
ds
frstor
aas
xchg
divl
mov
aaa
or
jae
xor
cmp
and
mov
mov
sbb
fisubs
lods
pop
cmc
push
loope
sahf
insb
or
les
sbb
xchg
sahf
jae
jnp
inc
aad
mov
aaa
xor
hlt
mov
cli
mov
pop
shl
repnz
cmp
fisubrs
jge
aas
ret
adc
rcrb
sbb
jp
pop
inc
xor
or
xchg
mov
mov
lahf
push
cmp
sbb
jae
sbbl
and
testl
cmpl
gs
push
inc
dec
xchg
dec
sahf
pop
mov
mull
icebp
iret
lock
fstpl
inc
movsb
dec
jge
movsl
or
std
fcomp
or
das
add
lahf
or
sub
sub
sub
cwtl
add
add
xchg
cmp
rcl
fsubs
cmp
or
insb
enter
mov
cltd
sub
cmp
dec
push
adc
mov
cmc
loop
lods
mov
inc
push
leave
fmuls
or
jno
fnsave
rolb
mov
decb
mov
ljmp
and
lods
cli
push
jnp
push
xorb
xor
pavgb
pop
xlat
jne
add
popa
jo
sub
div
outsb
mov
scas
and
fs
push
imul
in
ljmp
dec
sub
les
mov
push
cli
rcl
adc
inc
and
negb
xorl
xor
cmpl
popa
int
jnp
hlt
popa
in
add
xorb
divl
mov
nop
add
icebp
sub
mov
lock
push
xor
ret
dec
out
sti
test
leave
call
movb
inc
in
out
shll
repz
xorl
lret
jmp
adc
sub
xchg
stos
fldenv
jo
movsb
push
sbb
flds
loopne
repz
les
aaa
push
lods
inc
loop
insl
clc
aaa
sub
lods
or
cltd
mov
bound
scas
inc
nop
pop
push
cwtl
mov
pop
sbb
push
aas
sub
mov
sti
out
push
popa
ja
push
mov
mov
push
test
xchg
jge
aad
add
pop
dec
mov
mov
push
sti
jmp
pop
pop
add
push
mov
jb
add
sbb
nop
jmp
sbb
adc
stc
cwtl
push
mov
push
addl
aad
mov
outsb
xchg
mov
pop
mov
or
sti
dec
cltd
shlb
popa
loope
or
xchg
pop
ja
fisttpll
pcmpeqb
movsb
lds
and
rolb
cmp
xor
or
push
push
push
rorl
call
jbe
into
xor
das
mov
xor
iret
jno
sub
lods
sbb
push
jmp
add
xlat
js
arpl
aas
mov
iret
sbb
adc
cmp
xchg
fiadds
sahf
lock
jb
sub
bound
push
jo
scas
mov
add
shr
unpcklps
mov
or
in
iret
pop
fildll
mov
inc
or
js
xchg
mov
mov
jecxz
pop
cmp
jge
inc
adc
es
cmp
push
mov
fnsave
pop
mov
adc
dec
ljmp
mov
movsl
mov
mov
inc
push
adc
sbb
ficoml
or
cmc
sbb
inc
jecxz
sbb
or
insl
cwtl
imull
mov
repz
pop
mov
aad
jae
jne
imul
fwait
jmp
ljmp
pushf
inc
pop
or
jno
mov
clc
stc
cltd
int
add
mov
testb
movsb
inc
in
pop
add
mov
push
sbb
xchg
into
aam
pushf
mov
movsw
push
push
lods
stc
lahf
scas
sbb
add
xor
in
push
xlat
xchg
jmp
cmp
shr
push
stos
orb
cmpsb
pop
out
add
fs
lea
fsts
loopne
dec
mov
push
cld
xchg
lcall
outsb
fistl
sar
mov
das
in
clc
push
jne
sbb
pop
and
or
and
rcrl
ror
int
jb
repnz
push
push
jge
loopne
sub
sub
mov
test
xchg
cld
mov
or
sbb
sbb
jb
aam
sbb
mov
fdivp
loop
jmp
push
dec
and
mov
and
pusha
add
mov
sub
lods
sub
fadds
loope
imull
jb
and
push
cmp
scas
aaa
stos
push
mov
gs
xor
mov
add
mov
push
sti
es
sub
push
fisubs
dec
pop
bound
adc
aad
lret
inc
sbb
test
dec
push
lcall
bound
test
scas
fwait
mov
mov
sbbl
arpl
xor
sarb
or
xlat
testl
jg
popf
test
jecxz
inc
xchg
mov
and
jne
and
clc
fisttps
js
mov
and
jmp
jne
out
mov
cmc
inc
fdivrl
popa
out
mov
jno
bound
push
lcall
pop
cmpsl
fcom
insl
setle
sarl
aas
bound
fisubrs
insl
rcl
aam
cs
sbb
mov
test
lea
adc
sub
mul
or
sbb
push
lock
mov
xor
lods
orl
add
fidivrs
mov
test
repz
cmp
dec
out
scas
scas
jo
push
icebp
aas
mov
gs
and
jecxz
lret
mov
lds
in
and
adc
insl
pop
or
scas
repz
out
inc
lret
xchg
outsl
jbe
pop
test
cltd
cli
add
jg
lret
adc
adc
adc
push
pusha
mov
das
iret
mov
sbb
jae
cmpsb
mov
cmc
dec
stc
divb
and
fwait
mov
bound
sbb
pushf
rcll
cmp
nop
sbb
jecxz
xor
je,pn
arpl
inc
test
or
mov
jno
ret
test
fidivrl
pop
xchg
pop
out
and
call
jmp
btc
cmpsl
fsubr
mov
jge
jge
fcoms
lcall
inc
aam
adc
push
insb
mov
inc
cmp
xchg
mov
lcall
xchg
mov
xchg
jmp
into
movsl
xor
ds
imul
or
pop
mov
cmc
ja
mov
push
mov
int3
lret
js
movsb
adcl
and
sub
mov
fdivs
fsubl
cwtl
stos
and
mov
leave
in
xor
pop
icebp
outsl
adc
sbb
popf
cmp
outsb
cltd
push
pop
inc
add
pop
pusha
pop
sbb
mov
or
jmp
je
dec
orb
mov
stc
lods
xor
stos
aas
cmc
aad
jnp
mov
sbb
adc
and
push
mov
sub
aaa
mov
ss
out
dec
dec
jp
fidivs
lcall
push
lods
mov
or
mov
rcrb
popa
lret
adc
dec
sar
xchg
lea
dec
scas
pop
push
in
sbb
push
sub
push
frstor
mov
shll
sarl
adc
fwait
int3
or
dec
repnz
jp
imul
insl
aas
push
dec
out
pop
jp
add
aam
insl
lods
inc
daa
int3
jecxz
lock
push
or
insl
dec
xchg
or
sbb
andl
rolb
jae
inc
or
outsl
fldln2
fcoml
jns
cld
imul
arpl
cmc
jmp
sbb
mov
jmp
in
mov
outsl
cmpsl
mov
push
push
xlat
mov
mov
ja
pop
mov
popf
jecxz
sub
mov
xor
jle
ljmp
enter
pop
in
cmp
sub
das
sbb
scas
cwtl
lcall
cs
or
push
lret
int3
sbb
push
lea
lea
in
fwait
jmp
adc
cmc
inc
and
mov
mov
ret
and
rcrl
sbb
add
sub
push
sub
andb
fs
lcall
js
or
add
arpl
pop
les
adc
in
lahf
arpl
movsb
and
mov
jle
and
jecxz
stos
in
or
xchg
rcr
ljmp
popa
sub
xchg
inc
aam
aad
mov
adc
mov
push
lock
xchg
cmp
dec
je
lret
xor
sbb
out
push
out
and
in
cmpsb
aam
adc
mov
sub
test
mov
das
mov
shlb
sub
clc
cmp
lds
dec
mov
in
mov
das
mov
mov
imul
sbb
mov
outsl
lret
popf
outsb
cmp
ss
adc
div
loopne
in
scas
test
push
imulb
push
aas
pushf
ljmp
pop
inc
inc
insl
inc
mov
mov
nop
pop
lret
push
ret
xchg
mov
lahf
mov
or
gs
sbb
aas
cmc
pop
lcall
mov
jb
out
rorb
repz
sub
jns
mov
xor
pop
adc
sbb
loopne
nop
fidivrl
test
movb
pop
mov
or
mov
lock
and
fwait
jle
sbbl
in
sub
mov
inc
incb
out
jns
sbb
and
inc
mov
xchg
adc
or
fnstenv
fwait
cmp
std
jl
cmp
lcall
aas
mov
pop
mov
mov
stos
daa
call
fisttpll
shrb
loop
cld
inc
cmp
dec
ljmp
mov
adc
jp
loope
inc
mov
fistl
xor
mov
cmp
push
dec
jnp
scas
in
xor
sub
shll
fdivs
jns
adc
add
mov
mov
jno
push
sub
inc
sub
lea
mov
mov
ret
adcl
sbb
hlt
lcall
addr16
std
dec
pop
mov
cmp
mov
mov
pop
ret
pop
mov
ret
fdivrs
test
mov
ds
ffree
xor
jbe
lods
out
test
inc
push
jns
sahf
xlat
sbb
cmc
inc
fbstp
ss
add
int
and
ror
push
lea
stos
push
shrb
xlat
lock
fidivs
push
pop
xchg
clc
xchg
rcrb
out
xchg
add
in
mov
jne
bound
pop
jns
addr16
sbb
adc
fiaddl
scas
xor
test
cmc
sbb
push
repz
sub
sub
sti
int
orl
xchg
in
incb
lret
mov
in
pop
adc
mov
int
push
inc
fiadds
in
or
clc
aaa
sbb
in
sub
jp
shl
loopne
ljmp
cmpsb
dec
mov
cmc
dec
aaa
mov
jge
icebp
sahf
sub
data16
add
jg
cltd
jns
mov
xchg
shrl
popa
mov
pop
jmp
gs
loopne
scas
lea
mov
sub
je
and
lahf
inc
lret
sub
dec
jnp
sbb
cltd
pop
and
add
fcmovbe
insl
in
xor
ds
cmp
loope
xlat
and
xor
scas
roll
ret
cltd
mov
and
fwait
jne
cmp
stos
dec
push
xor
lea
jmp
push
stos
and
in
lahf
jmp
imul
movsb
mov
sub
adc
jb
lock
lret
dec
sbb
mov
push
shll
push
or
xor
mov
and
mov
insb
incb
jbe
pop
pop
mov
push
adc
mov
push
mov
test
lds
cmp
out
inc
dec
mov
fstp
fcomip
xchg
push
mov
sub
cmp
jno
iret
lds
sbb
mov
fsts
je
aad
decl
outsl
scas
int3
ljmp
enter
mov
push
inc
pop
mov
js
dec
cmpsb
jae
mov
mov
mov
push
les
cmp
mov
sub
dec
aaa
fs
repz
les
or
xlat
mov
into
inc
decb
dec
mov
pop
jno
movsb
repz
and
inc
add
pop
adc
xchg
mov
lock
pop
jbe
loopne
call
scas
sub
mov
leave
push
daa
jge
push
inc
mov
push
aas
movsb
pop
mov
mov
cwtl
js
adc
mov
cmpsl
xchg
add
inc
shlb
or
jmp
cmp
jle
mov
iret
jge
adc
mov
sbb
jl
push
push
mov
dec
xor
fldl
push
jmp
sbb
mov
outsb
pusha
and
movsl
sbb
adc
adcb
jp
cmp
lock
int3
mov
cmp
rcrl
add
pop
mov
shll
mov
sub
cmp
jb
xor
jmp
dec
jge
mov
lods
shl
stos
inc
mov
lods
jbe
std
xor
pushf
cmp
xchg
jmp
call
stc
add
lds
push
add
inc
shlb
in
jo
insl
dec
in
xchg
adc
mov
mov
inc
lcall
daa
in
cmp
out
pop
and
in
adc
jo
sub
mov
push
push
out
jb
fidivrs
sbb
xor
pop
mov
hlt
sub
mov
pop
sbb
test
stos
cltd
xor
shlb
xor
xchg
stos
inc
bound
ss
jl
or
ret
adc
pop
mov
aaa
loopne
and
cli
nop
cmp
jbe
add
sarl
mov
inc
sbb
xchg
add
pop
dec
dec
lahf
sub
shl
pop
sarl
sub
repnz
inc
mov
push
push
pushf
insl
cmp
out
lret
sub
sbbb
popf
fstps
imul
xchg
pop
into
or
lahf
pop
movl
divl
cmp
popf
shlb
cld
jle
mov
insl
loopne
xor
loope
jg
enter
mov
xor
call
or
sub
leave
fnstcw
pop
xchg
hlt
call
mov
jnp
xlat
dec
pop
jns
iret
inc
mov
lret
xor
and
icebp
push
mov
cwtl
push
jo
stos
lret
xor
add
in
mov
mov
mov
repz
push
inc
rcrl
repnz
add
inc
stc
mov
sub
enter
orl
xchg
iret
hlt
push
cmp
jmp
lock
or
adc
imul
rcr
cmp
xor
inc
mov
imul
clc
aaa
loop
pop
in
pusha
scas
pop
mov
mov
and
call
daa
cs
pop
mov
test
cmp
dec
daa
sub
mov
call
movsb
test
sbb
push
mov
adc
xor
shrb
mov
pop
xor
imul
lods
aam
inc
inc
jmp
neg
sub
push
sbb
stos
rolb
pop
insl
jb
bound
inc
shl
dec
incl
imul
xchg
sub
inc
or
and
leave
push
negl
jo
insb
pop
adc
out
push
add
movsl
sbb
cmp
popa
imul
lea
fdivrl
xchg
into
or
pop
gs
stos
jns
ret
mov
clc
adc
pusha
popa
sbb
xor
cmpsl
iret
sub
adc
adc
jbe
mov
dec
sub
ficoms
dec
imul
adcb
aam
pop
push
mov
xchg
and
sbb
daa
adc
sub
mov
mov
adc
add
mov
or
stc
push
jne
dec
lret
jne
xchg
movl
dec
cmp
sub
sub
dec
dec
xchg
int
jg
xchg
mov
mov
jp
cs
int
jmp
pop
das
sbb
and
push
pop
out
dec
mov
lds
cmp
xor
insl
orb
inc
adc
inc
lret
stos
js
mov
divb
mov
div
xchg
test
fcoml
arpl
xlat
xor
loope
imul
fildll
lcall
jae
mov
add
popa
loopne
rorl
mov
fstl
scas
xchg
pop
mov
push
dec
sbb
enter
add
mov
jb
hlt
mov
inc
pop
daa
jno
repnz
add
popa
das
loop
mull
adc
sub
fildl
je
inc
cs
in
dec
repnz
leave
add
push
test
xchg
pushf
xchg
out
test
jb
das
insl
add
sbb
shrl
dec
rorl
mov
xchg
mov
out
popa
popa
inc
cs
dec
pop
pop
xchg
mov
push
dec
imul
stos
into
sbb
xchg
and
mov
mov
dec
xchg
ljmp
push
jge
enter
mov
daa
sbb
popf
test
mov
mov
jae
inc
mov
repz
clc
ds
aam
nop
pop
std
dec
into
mov
insb
mov
add
inc
mov
andl
sbb
loop
adc
xchg
stos
xor
adc
out
xchg
adc
sub
sahf
call
orl
push
movsl
xchg
adc
popa
and
push
or
push
fsts
dec
push
hlt
mov
mov
subl
clc
into
dec
and
mov
and
sub
xchg
mov
cmpl
xor
lcall
lods
pop
lock
out
das
dec
mov
ror
in
cmc
xchg
pusha
mov
jno
aaa
cltd
jmp
mov
sub
inc
int
daa
inc
dec
xchg
fs
ljmp
repnz
push
mov
xchg
jb
mov
aas
popf
add
outsb
add
shrl
or
mov
test
mov
outsb
jge
xchg
cltd
mov
cmp
and
mov
mov
sbb
lds
push
mov
cmp
mov
arpl
sbb
add
adc
pop
outsl
jo
test
dec
jmp
jno
sti
int
std
stc
ror
addb
sahf
inc
hlt
push
inc
lret
xor
sbb
loopne
push
movb
sarb
jmp
push
pcmpeqb
cmp
and
inc
mov
sbb
or
pop
cwtl
data16
jbe
dec
testl
faddl
cltd
mov
xchg
lock
popf
dec
movsb
sbb
sub
rorl
sbb
xor
jg
scas
test
scas
pop
push
les
and
fcoml
lret
sub
std
jae
inc
jne
dec
ret
add
xchg
pop
popf
les
inc
inc
cmp
lods
pop
pop
repnz
cmp
adc
les
jns
mov
push
adc
aad
push
addb
data16
call
dec
fcmovne
leave
leave
bound
or
mov
sub
and
shlb
or
bound
push
loope
bound
int3
ds
pop
int
ds
stos
in
mov
js
jne
cmp
or
xchg
lds
cmpl
xchg
cmpsb
add
adc
xchg
insb
int
mov
leave
enter
sub
stos
add
xchg
out
jl
fisubs
negl
mov
iret
xchg
jmp
cld
xchg
xchg
andl
jns
cmp
enter
aaa
add
stc
push
push
cmp
sub
adc
cmp
adc
ds
sbb
movl
push
sbb
mov
sub
jecxz
out
pop
or
pop
jmp
xchg
arpl
rorl
pop
jp
mov
sbb
cltd
out
in
inc
sbb
mov
incb
ret
gs
ljmp
pusha
loopne
sub
mov
aas
test
clc
push
gs
mov
add
fsubs
bswap
jmp
add
test
xlat
out
adc
dec
xchg
push
mov
mov
cmp
adc
push
call
jno
imul
pop
sbb
jo
jbe
aas
icebp
ror
test
xor
fstps
adc
lock
push
call
push
sub
mov
pushf
stos
and
ret
xlat
add
iret
mov
jmp
insb
mov
fcom
push
fldcw
enter
lcall
jne
test
enter
jl
mov
lods
sbb
inc
inc
push
mov
add
adc
or
outsl
scas
cwtl
in
or
jb
outsb
cmpsl
adc
into
sbb
jle
mov
in
mov
stc
jbe
clc
inc
jb
ds
cltd
bound
jae
cmp
jnp
dec
pop
pop
add
insb
xchg
mov
xor
cmc
fwait
sahf
in
out
cmc
mov
in
testl
mov
mov
shl
lcall
jbe
cmp
insl
add
inc
or
mov
cmp
decb
leave
rolb
outsl
out
test
or
ficoml
dec
ret
cmpsb
adc
fcoms
sub
addl
ja
mov
arpl
lods
inc
jbe
mov
xchg
sbb
sub
dec
jae
xchg
sub
dec
push
incl
je
jmp
mov
in
mov
add
or
data16
mov
cmp
fstps
pushf
cmpsl
iret
ficoml
mov
jecxz
cmp
or
add
in
xor
inc
mov
mov
xchg
fidivl
mov
push
sub
pop
ds
in
cltd
adc
std
loope
shl
mov
mov
outsl
aaa
cmc
push
aad
mov
das
add
add
jl
icebp
leave
iret
in
xchg
push
jae
dec
incb
dec
ljmp
cmp
mov
cmpsb
pop
in
fdivs
call
and
cmp
xor
inc
fstp
loop
jae
aaa
imul
sub
jl
lcall
pop
sbb
lods
inc
inc
call
cmpsb
lds
lock
mov
mov
add
in
mov
jg
xchg
loope
push
pop
sub
aaa
lods
xor
xor
arpl
int3
mov
adc
mov
loop
push
lods
sub
sti
inc
pop
cmp
pop
xor
out
mov
out
pop
sbb
push
sti
jno
xchg
mov
inc
sub
aam
lret
jp
inc
test
cmp
mov
fwait
test
adc
cmc
leave
sbb
das
dec
push
outsl
das
adc
and
inc
jne
fisttpll
mov
ss
nop
cli
pop
movsbl
call
int
sbb
sub
xchg
mov
lret
pop
xchg
sbb
outsl
jne
clc
dec
dec
sbb
popf
mov
sbb
les
loopne
or
fsubrs
sbb
movsb
xor
int3
ja
mov
jl
mov
mov
sub
dec
int
inc
push
xor
jmp
rol
sbb
xor
repnz
pop
mov
cmpsl
shl
popf
lods
mov
das
push
mov
pop
jge
jl
mov
lods
rol
ljmp
xorps
pop
fsubl
add
pusha
inc
fdiv
stc
sub
mov
jp
mov
and
out
lret
fcmovnbe
notb
scas
cmp
jno
jmp
aaa
out
push
sub
sbb
mov
mov
sub
add
fdiv
cmc
add
daa
xchg
dec
xor
test
and
imull
incb
push
xchg
dec
iret
jno
adc
push
push
iret
pop
movsb
add
fs
in
or
jns
inc
movsb
repz
stos
std
xchg
cmp
mov
mov
push
sbb
lea
fwait
cmp
mov
lds
mov
mov
jnp
pop
fldenv
repz
daa
ljmp
cltd
cmp
push
out
test
adc
test
xor
or
das
sub
dec
in
cli
push
cld
bound
pop
or
in
adc
subl
inc
xchg
mov
mov
aas
les
jge
dec
pushf
shll
add
jae
test
mov
aam
dec
std
mov
mov
dec
out
cmp
jecxz
inc
ljmp
test
lods
mov
fs
es
mov
dec
jg
ret
rorb
pop
aas
dec
sahf
xlat
inc
jp
ljmp
push
xor
push
mov
mov
roll
xchg
push
movsb
xlat
inc
xchg
add
and
lahf
sub
and
xor
lret
xchg
push
mov
xlat
lock
icebp
rclb
inc
mov
cld
shr
add
mov
imul
dec
mov
mov
test
cmp
jp
rcrl
repnz
enter
cs
cld
dec
call
jmp
inc
sbb
fidivs
sbb
test
adc
mov
lods
jecxz
add
adc
xchg
jmp
fistl
xchg
daa
les
popf
leave
fwait
push
ljmp
push
fnstenv
mov
adc
mov
sti
mov
jno
nop
jo
xor
popf
clc
xchg
xchg
ficoms
mov
stos
orl
dec
shlb
out
daa
imul
popa
jnp
inc
fidivrl
lahf
cmc
mov
xor
lds
sub
js
sbb
imul
jge
insl
das
xor
les
xor
push
rcrb
or
enter
test
test
add
ss
mov
sbb
adc
jmp
jb
loop
or
sbb
fdiv
in
or
addl
and
imul
add
fnsave
sub
jle
or
iret
cmp
dec
jb
movsl
push
jae
sbb
std
mov
movsl
add
ret
mov
insl
fdivr
xchg
je
call
push
push
fsubrs
sub
cmc
adc
mov
push
js
subb
call
or
add
repnz
icebp
int
imulb
adc
jae
push
adc
setle
or
iret
cmp
add
sub
imul
mov
cs
jle
in
sub
jnp
divb
mov
adc
cmp
mov
mov
ja
push
ss
xor
and
push
pop
shll
or
xor
mov
mov
mov
sbb
or
pop
xor
sbb
jle
push
arpl
push
sub
push
rorb
jne
scas
jbe
dec
ljmp
stos
mov
mov
lock
pop
or
dec
cmp
lahf
clc
lret
sbb
lcall
popa
and
in
gs
pop
int
push
xchg
pop
jns
shlb
das
sbb
rorl
subb
push
and
outsl
sub
xchg
dec
jno
xor
jne
xchg
movsl
outsl
jae
insb
xlat
adc
and
cmp
popf
jae
in
dec
push
mov
adc
jno
inc
xor
sub
mov
andl
cli
fld
mov
xchg
pop
and
fimull
out
mov
push
int3
fmul
sub
fisttpll
mov
cmp
pop
mov
and
sub
cmp
add
mov
mov
nop
jne
stos
mov
xchg
rorb
push
es
jmp
jl
mov
lea
or
inc
aas
mov
lods
test
add
sbb
loop
stos
das
push
ja
scas
in
aas
sbb
push
sti
inc
jge
jne
sub
inc
mov
dec
push
inc
sbb
xlat
cmpsb
cmpsb
cs
push
xor
out
faddl
cs
lds
imul
push
pushf
dec
jbe
repz
or
sbb
aad
leave
enter
jns
jle
das
or
jnp
daa
stos
pusha
shl
sti
xchg
add
xchg
sub
mov
out
arpl
nop
inc
sbb
xchg
push
push
dec
test
lcall
movsb
mov
fnstsw
lcall
hlt
insb
xchg
pop
mov
mov
push
inc
dec
pop
mov
ss
movsb
mov
sarl
cmp
add
roll
ds
or
inc
ds
xor
inc
push
add
mov
testb
push
dec
xor
mov
jo
xlat
into
lds
pop
loope
stc
sti
dec
xchg
push
mov
push
add
adc
sub
jno
das
es
movsl
das
add
push
faddl
xor
jp
xchg
pop
adc
mov
add
ficomps
jb
je
cmpsb
into
out
out
mov
sub
and
rcrl
fstpt
or
and
test
xchg
nop
mov
jge
ja
push
lds
imul
shll
jnp
dec
stos
jecxz
and
mov
call
fstl
gs
hlt
lahf
add
push
repnz
cmp
mov
subl
repnz
cmp
jne
lahf
mov
inc
xchg
adc
addr16
push
int
pop
pop
add
cmp
pop
adc
imul
push
jns
sahf
mov
dec
push
rcrl
mov
jl
cmc
aas
and
add
pop
repz
mov
aas
xor
flds
add
ljmp
adc
push
fs
pop
les
into
lock
cs
imul
sbb
dec
pop
clc
lcall
call
and
bound
ret
xchg
add
iret
add
mov
outsb
fnstcw
popa
adc
inc
push
mov
push
jnp
adc
subb
in
lds
jns
insl
rcrl
sub
dec
popf
mov
repz
xchg
inc
ffreep
mov
dec
out
inc
in
cmpsl
lock
pop
test
fmull
aaa
ja
inc
pop
dec
out
roll
xor
xor
cli
enter
push
sub
xchg
jl
mov
out
in
lods
popf
and
lock
mov
movsb
leave
mov
xchg
xor
push
and
flds
push
testl
cmp
pop
mul
popf
mov
fdivl
push
fsubrs
fcoms
mov
aam
out
jo
fimuls
and
lret
rcrl
cmp
out
mov
out
inc
out
daa
cmovl
jecxz
xchg
popf
and
cmp
push
andl
dec
movsl
pop
nop
mov
cmp
or
cmpsl
sbb
push
xchg
filds
cwtl
into
cltd
and
mov
aad
lret
dec
repnz
jl
or
pop
pop
jo
out
hlt
rcr
out
pop
clc
mov
xlat
jb
shll
ret
cmc
out
sub
pop
loope
hlt
dec
mov
add
xchg
test
lods
sub
lods
and
jnp
mov
cmp
iret
jnp
xchg
push
cwtl
push
adc
iret
scas
cmc
rcl
in
mov
out
cmpsl
push
dec
fwait
push
outsl
jno
or
jnp
pop
jae
cmpsb
and
sub
mov
cmp
or
call
loope
mov
fcmove
pop
aas
enter
adc
mov
popa
mov
inc
test
mov
movsb
xchg
and
sub
fisubrl
push
cld
and
or
outsl
jne
cwtl
adc
outsl
cs
sbb
dec
mov
mov
or
jle
clc
push
pop
imul
xor
lock
inc
shll
rcl
or
add
andl
dec
jmp
shll
out
test
cmpsl
inc
cmc
out
scas
pop
mov
imul
addr16
std
shlb
and
aad
lahf
dec
into
cmpsb
bound
cmc
insl
lea
mov
cmp
popf
inc
aad
jl
or
loopne
or
pushf
fildll
cmp
adc
inc
lods
xchg
inc
xor
nop
inc
push
call
iret
lret
xchg
adcl
es
xchg
rcll
or
outsl
dec
xor
lods
inc
or
or
push
rol
dec
mov
imul
fidivrs
inc
cmp
subl
inc
add
jns
xchg
sbb
and
xlat
mov
mov
xor
xor
repz
inc
mov
nop
int
cli
add
xor
mov
adc
orb
js
hlt
es
mov
sbb
push
imul
and
cltd
imul
add
xor
jns
stc
sarb
lahf
enter
loop
dec
loop
and
adc
xor
addl
or
inc
cwtl
jne
repnz
cwtl
mov
mov
aam
add
stc
popf
pushf
xchg
test
clc
or
mov
sub
push
fcmovbe
addr16
xchg
jge
xchg
pop
jnp
shll
push
ret
mov
dec
jno
aaa
sub
and
xchg
les
jle
outsl
rol
lock
in
addr16
mov
push
or
aad
call
cmp
push
pop
lahf
sub
sub
aas
mov
pop
sbb
inc
jmp
xor
cmp
cmp
mov
mov
mov
sbb
jmp
xchg
and
int
cmpsb
test
push
push
shll
push
das
inc
jg
sub
jno
pop
stos
fdivl
leave
subl
lds
clc
mov
lcall
mov
jns
mov
inc
cmp
pop
jp
ja
jnp
and
cmp
imul
lods
xchg
nop
sbb
xchg
inc
sahf
test
test
mov
pop
call
pop
mov
push
and
lock
add
lcall
sub
int
loopne
data16
js
pop
shr
pop
loope
pop
lods
mov
lcall
jo
fdivrs
adcl
orb
insb
jmp
ss
js
lret
and
or
loopne
data16
or
cmc
jae
lret
dec
dec
add
mov
lret
roll
std
jo
lret
bound
adc
adc
adc
lea
xorl
dec
je
in
std
cmpsb
sbb
push
and
mov
fldcw
or
xchg
jo
jo
sub
jg
jb
lahf
movzwl
mov
mov
jne
repz
mov
es
xor
xchg
xor
daa
jae
in
ficomps
xchg
or
out
lods
pop
insl
bound
in
sub
add
test
adc
lahf
rorb
sub
outsb
xchg
je
sub
pop
mov
addl
sbb
mov
in
and
lret
pop
xchg
mov
out
outsl
sahf
inc
jb
jp
mov
push
push
icebp
push
stc
mov
popf
xor
mov
enter
scas
int
pop
xor
lea
repz
sti
aam
push
dec
insl
cmp
mov
inc
add
mov
out
cwtl
bound
lods
movsl
or
xor
or
cmp
mov
and
subb
adc
into
test
push
shlb
inc
lret
push
jg
test
push
mov
dec
ds
cmc
mov
fnsave
xchg
lcall
js
leave
popa
push
pop
xor
lret
fldcw
out
mov
push
push
stc
loopne
cli
pop
and
js
es
roll
sbb
stc
cmp
cmp
xchg
cmp
insb
ret
clc
ficoms
adc
insb
or
movsb
loop
jmp
aam
lcall
je,pt
dec
dec
jnp
arpl
adc
stos
cmp
lock
das
and
sub
stos
or
dec
push
out
lock
cltd
sti
or
xchg
push
inc
mov
stc
sbb
add
cmp
push
xchg
lods
mov
pop
shll
xor
pop
shlb
mov
pop
pop
iret
repnz
or
adc
mov
adc
imul
inc
ljmp
mov
dec
aam
sub
dec
push
add
ss
pop
bound
fcompl
aad
mov
call
loope
xchg
add
jno
adc
lea
test
iret
daa
push
sub
mov
inc
add
mov
sbb
inc
xor
push
pop
and
dec
push
movsb
sbb
pushf
mov
dec
mov
jbe
cmp
pop
mov
push
in
and
add
or
sub
mov
iret
cmp
ljmp
lds
fstp
inc
pop
mov
int3
sbb
push
cli
dec
orb
mov
scas
std
das
xchg
scas
dec
pop
sahf
push
aad
add
xchg
shl
repz
jne
sbb
cmp
fldcw
xchg
imul
xor
adc
pop
mov
in
cmc
nop
icebp
pop
mov
mov
mov
insl
push
nop
lcall
xchg
ret
xlat
mov
mov
aad
cltd
lock
imul
add
cmpsb
mul
xor
pushf
lods
lret
lahf
loop
add
cmp
cli
mov
jb
sub
fistpl
and
inc
sahf
es
dec
inc
pop
ljmp
imul
jmp
cmpsl
dec
xor
xchg
sbb
sub
jb
pop
in
xchg
inc
sti
shrb
inc
je
rorb
mov
fmul
fstpt
mov
push
and
dec
in
mov
sbb
loope
setae
mov
push
sbb
inc
addl
inc
inc
icebp
fcmovnu
adcl
cmpsb
mov
jb
mov
mov
icebp
aaa
aam
adc
add
out
push
pop
pop
add
pop
pop
mov
inc
add
clc
out
fdivrl
pop
jo
mov
cmp
ret
shrl
daa
sub
pop
pusha
sbb
lret
add
or
loope
lods
adc
xor
jno
mov
cwtl
out
mov
mov
push
adc
mov
xchg
mov
fimuls
or
dec
hlt
bound
or
mov
aaa
mov
sysenter
push
mov
sub
and
lods
je
mov
jno
testb
shll
hlt
in
int
loope
fs
or
lods
mov
sub
dec
fsincos
popa
adc
repnz
insb
out
ret
xchg
stc
inc
push
rorl
dec
sub
cmp
aam
out
jne
das
mov
jae
jnp
pop
inc
imul
stos
xchg
push
xor
imul
or
insl
cmpb
mov
frstor
lahf
roll
push
hlt
xor
sub
int3
aam
mov
push
mov
xor
mov
xchg
aaa
sub
js
notl
test
ja
and
fldl
inc
push
js
add
and
mov
loope
mov
xor
xchg
je
push
and
fwait
xchg
or
add
jle
call
jecxz
push
jmp
xlat
loop
adcb
pop
mov
ret
pop
pusha
mov
sarb
xchg
pop
sbb
cmpsl
pop
es
sub
rcl
cs
dec
jp
mov
shr
addr16
jne
or
in
mov
and
lods
jle
ss
fdivs
popf
mov
dec
fsub
cld
imul
sub
pushf
into
ret
int
add
loop
push
outsl
ss
push
cmp
std
or
inc
out
dec
fbstp
jl
jns
push
testl
stos
mov
xchg
faddl
arpl
mov
push
inc
sbbb
xor
pop
and
sbb
call
mov
data16
into
jae
orb
mov
imul
pop
cmp
cltd
xor
and
cmp
pop
sbb
adc
clc
xchg
or
adc
std
rolb
cmp
adc
sub
js
call
mov
scas
mov
popf
lods
ret
smsw
mov
ret
into
pop
std
or
ljmp
inc
pop
mov
mov
sub
insb
roll
inc
and
add
and
mov
xlat
shlb
pop
xchg
add
and
pop
jg
mov
call
pop
enter
movsb
or
dec
or
aad
les
mov
push
xorl
sub
jae
mov
push
mov
cmpsb
inc
rcrb
fildl
dec
sub
test
jge
pop
jecxz
mov
cmp
imul
jge
std
pop
mov
cltd
mov
lcall
repnz
enter
or
mov
sbb
negl
pusha
addl
mov
rolb
xchg
loop
adc
pop
popa
enter
fiadds
cmpsl
lods
aas
or
clc
inc
sahf
inc
inc
mov
stc
mov
loope
inc
sub
insb
inc
in
icebp
inc
xlat
cmpsl
lret
loope
mov
shrb
stos
sub
xchg
aam
fnstenv
call
daa
loope
add
sbb
mov
cmp
lds
outsb
mov
das
push
rcl
cmpsb
xchg
cwtl
fadds
fists
imul
add
sbb
roll
xchg
add
in
js
sbbl
push
rcrl
or
cmp
xchg
or
push
pushf
cmp
test
inc
inc
mov
xlat
push
outsl
fwait
out
in
insb
pop
imul
jae
cld
cwtl
jno
shll
out
jg
popf
jg
dec
insb
or
inc
mov
pop
sub
xchg
push
cmp
cmp
mov
cmc
out
daa
lods
mov
push
insl
adc
add
test
xor
adc
cltd
and
aam
sub
cld
roll
adc
mov
xchg
push
inc
cmp
xchg
inc
outsl
sti
dec
adcb
xor
sbb
call
push
jne
and
xchg
test
adc
or
xor
out
sbbl
loop
aas
pop
sub
aas
addl
bswap
and
mov
ss
cmp
inc
sub
mov
das
lods
xchg
rcll
shll
dec
dec
sbb
gs
pop
sbb
fdivs
out
cltd
inc
test
out
xor
fsubl
jnp
push
outsl
dec
je
inc
fwait
push
pop
xlat
incb
mov
out
or
movsl
or
add
cmpsb
pop
or
sub
or
imul
xchg
test
xchg
inc
or
mov
les
cmpb
fsubrp
mov
cmp
out
mov
push
addb
fnstcw
cmc
jbe
adc
icebp
std
jo
mov
leave
das
cmpsb
and
call
and
mov
push
movd
dec
subb
adc
in
mov
in
int3
sub
mov
adc
idiv
lret
jmp
add
cmpsb
in
inc
je
out
mov
shll
xor
cli
mov
aaa
or
xor
dec
push
nop
in
dec
lret
hlt
dec
xchg
lret
mov
ss
sub
pop
pusha
loopne
jb
cmpsl
pop
sub
pushf
jl
xor
adc
jae
lds
pop
pop
push
bnd
repnz
lcall
imul
movsb
test
jnp
dec
pop
push
pop
outsb
fs
mov
and
aad
and
bound
loop
adc
aaa
popa
xchg
ljmp
popa
sub
aas
or
inc
test
fisubl
jb
push
fistl
mov
push
adc
pusha
mov
arpl
pop
sti
cltd
movsl
es
iret
jne
mov
jecxz
fldt
mov
pop
int3
pop
cmc
xchg
les
jmp
mov
pushf
push
mov
out
sub
bnd
into
lods
int3
shlb
mov
je
xchg
into
in
jge
cli
inc
add
push
or
xchg
ljmp
add
pushf
mov
addl
dec
out
jp
fcoml
call
aam
xchg
sbb
push
cltd
fstpl
test
add
push
imul
sti
jae
clc
mov
rcl
rcrl
fstpl
xchg
sub
add
xchg
jl
outsb
xchg
cmp
jnp
cmp
push
xchg
mov
les
mov
xchg
cwtl
inc
fsubl
pop
sahf
cmp
lock
mov
mov
push
pop
xchg
outsb
pushf
in
arpl
xchg
pushf
call
mov
fisubl
sbb
adc
mov
leave
pop
push
pop
in
cld
cmp
mov
adc
lods
xor
in
and
add
sub
fmull
or
imul
jno
repz
push
push
jne,pn
pop
sub
adc
xchg
cmp
xorl
fsubrl
and
and
add
hlt
mov
pop
add
pusha
jmp
ret
repz
adc
in
inc
cmpb
out
mov
or
aam
jmp
out
cmp
sarl
test
mov
ret
sub
cmp
movsb
out
cmp
mov
in
jb
xor
pop
and
aaa
hlt
xor
lcall
shr
movsb
lcall
sbb
push
sub
push
jge
and
ret
inc
dec
cmp
pop
stc
shlb
enter
mov
pop
jle
hlt
mov
bound
addr16
test
dec
xor
and
fdivrl
sti
cmp
jle
movsl
add
mov
in
mov
nop
jns
cmp
jecxz
sbb
ss
pop
setle
dec
add
mov
leave
mov
add
or
xchg
mov
sbb
pushf
sub
inc
fwait
xor
in
cld
add
imul
xchg
test
mov
mov
arpl
andl
movaps
fwait
or
dec
inc
lods
outsb
jno
pop
shrb
or
xchg
mov
test
push
cmp
xchg
hlt
add
xor
mov
adc
mov
adc
jle
or
popf
test
pop
loopne
bound
cmp
push
std
cmp
aas
aaa
mov
loopne
lret
xchg
jo
mov
or
les
jg
cmc
mov
fs
xor
sub
mov
popa
in
jbe
push
or
jb
outsl
popf
mov
mov
es
fstpt
push
mov
dec
cmpsb
adc
inc
fadds
xor
stos
mov
mov
jne
mov
cld
cmp
lds
sbb
add
mov
mov
or
stos
lods
mov
fidivrl
dec
mov
cmp
inc
sti
in
lahf
stos
call
push
or
mov
fidivrl
inc
and
cmpsb
jle
xchg
aaa
jmp
sub
xor
lret
cmp
sbb
cmp
ds
test
mov
std
push
arpl
addr16
lret
lcall
jne,pt
insb
add
lds
fiaddl
xor
push
jo
call
pop
xor
lods
inc
out
pop
es
mov
pop
testb
sbb
lret
movsl
pop
lods
jns
and
mov
xchg
loop
pop
loop
push
jbe
shl
jae
adcb
lret
sub
pop
int3
dec
orb
lods
ja
mov
sbb
jbe
dec
inc
loopne
sbbb
loope
out
rolb
fwait
insb
jp
mov
xor
jne
repnz
dec
clc
xchg
stc
or
dec
mov
leave
in
xor
mov
mov
cs
inc
push
mov
cwtl
dec
mov
jl
adc
jge
js
sub
adc
rcll
pop
hlt
sbb
mov
in
and
ljmp
mov
repnz
je
xchg
mov
negl
lods
into
fs
mov
sub
inc
arpl
inc
cmc
inc
xor
mov
subl
and
in
mov
xlat
lahf
mov
or
mov
xor
or
and
sbb
sub
cld
inc
stos
into
cmp
xor
in
cld
iret
sub
xorb
insb
cli
rol
cmp
inc
pop
imul
nop
mull
dec
or
mov
mov
repnz
sti
sbb
mov
stos
jp
cmp
push
pop
movsb
dec
inc
mov
fstpt
sti
pop
mov
mov
add
push
dec
cmp
lods
add
mov
sub
jnp
dec
sub
je
sbb
cmpsb
sub
aas
pop
cmc
lods
jns
pop
movsl
das
pop
loop
mov
mov
pushw
cmpsb
mulb
mov
out
cmp
cmp
out
pop
mov
jae
adc
stos
add
push
or
xlat
mov
jg
loopne
outsb
popl
loop
xchg
out
dec
data16
inc
mov
mov
push
pop
push
fstp
fwait
aad
lret
loop
mov
cmp
xor
sahf
gs
imul
add
mov
lock
ljmp
mov
notl
pop
call
dec
pop
popa
adc
xor
add
outsb
sub
cmp
loop
fildll
insl
outsb
jnp
sbb
gs
xchg
test
shlb
movsl
sub
aad
lahf
pmaxsw
je
or
add
or
pusha
mov
cwtl
add
mov
sar
pop
cwtl
jle
jle
push
setno
add
test
and
xchg
cmpsb
mov
xor
push
fwait
sahf
loop
sbb
mov
cmp
and
push
xchg
cld
lcall
sub
js
movsl
and
push
iret
insb
mov
popa
lcall
imul
stos
fcmovnu
pop
sbbb
pusha
fildl
push
int3
cmp
jle
andl
frstor
pop
ror
sahf
cmc
into
mov
mov
aam
addr16
pop
lret
dec
sbb
xchg
add
outsb
cmpsl
shll
sahf
xor
cmp
ja
ret
sbb
stos
dec
dec
shll
loopne
daa
cmp
sahf
and
jp
mov
push
cmpsl
insl
decl
ret
enter
cmpl
jno
js
addr16
daa
enter
les
rclb
aad
jg
enter
push
dec
out
mov
mov
cmp
add
or
add
lea
pop
xchg
inc
sbb
inc
fstpt
add
pop
enter
ret
dec
ret
shlb
cmpsb
xor
lock
lods
or
sahf
mov
and
jo
and
outsb
mov
lahf
mov
daa
data16
xor
inc
shrl
lret
push
xor
jge
sahf
es
add
mov
clc
loope
adc
out
sub
cltd
and
shll
jle
sahf
dec
and
arpl
cld
and
test
dec
jns
mov
dec
ljmp
mov
clc
lret
sahf
fistpll
stc
lret
push
xchg
rcll
leave
mov
pop
in
js
xor
mov
fs
pop
cmpsb
mov
sub
xlat
dec
jmp
pop
rcrl
cwtl
test
mov
ret
fs
mov
jae
cmp
cli
xchg
pushf
int3
popa
jg
stos
addb
test
mov
mulb
stc
cmp
xor
enter
adc
jne
mov
push
test
out
repz
aam
mov
insl
lods
xchg
ret
shrb
pop
jecxz
jns
sti
inc
push
mulb
sub
sub
jle
dec
xchg
cwtl
movsl
inc
xor
cmp
comiss
jbe
adc
jae
test
int3
or
and
xchg
push
lret
int
and
pushl
mov
sub
pop
call
test
sbb
pop
je
xorl
pushf
mov
or
xor
in
je
test
mov
adc
mov
hlt
shr
andl
jae
movsb
insb
fdivrs
mov
mov
and
xchg
mov
comiss
cmp
cmp
fs
add
pop
jb
jge
sbb
in
mov
lret
in
mov
cmp
fmuls
lods
xor
push
jecxz
pusha
mov
repz
rolb
lods
jp
aad
std
sub
pushf
push
les
xchg
xchg
add
mov
or
mov
jmp
mov
mov
sbb
inc
jge
mov
xor
imul
xor
and
mov
loop
orb
mov
out
in
add
xchg
pop
sbb
leave
sbb
notb
adc
sbb
xor
mov
inc
stos
mov
push
xchg
jno
sub
das
jp
divb
add
cwtl
mov
or
cmp
adc
fadds
outsl
outsb
fidivl
lcall
xor
pmuludq
insb
push
sbb
lods
pop
test
notb
mov
mov
lds
dec
push
movsb
push
shr
mov
mov
lock
xchg
cmpsl
aam
cmp
adc
or
push
pop
ljmp
dec
jnp
cli
inc
xchg
mov
out
xchg
out
fldcw
insl
fcmovnbe
add
push
test
fildl
daa
cmpsl
sahf
pop
sbb
or
stos
xorb
inc
mov
xchg
int3
fisubrs
sar
adc
xchg
loop
mov
lcall
jo
cmp
mov
add
fistpl
data16
push
lods
in
jecxz
fcmovu
shlb
ljmp
dec
sarb
add
push
daa
xchg
cmp
daa
ds
in
ss
sbb
leave
pop
mov
call
mov
mov
cmp
pop
jg
cli
pop
xlat
ljmp
adc
lret
jmp
popf
and
daa
push
outsb
jbe
fldl2t
cmp
push
pushl
cmpsb
or
daa
in
pushf
sbb
lods
ret
sub
add
les
cmp
es
in
dec
sbb
xchg
xor
mov
cli
das
add
add
bnd
aad
and
into
mov
shll
je
in
aad
hlt
dec
pop
sti
cmpsb
test
movb
fldt
push
hlt
test
dec
fsubr
sahf
sar
and
pop
sbb
mov
jmp
push
mov
pop
sub
or
lcall
sbbb
shll
xor
mov
cwtl
xchg
sub
ret
roll
push
gs
repnz
rol
inc
adc
add
mov
cltd
movsb
fiadds
in
int3
clc
cmp
pop
xlat
sbb
test
imul
xor
lret
stos
mov
test
xchg
push
jno
test
lock
jae
ret
and
ret
lahf
aaa
out
jmp
lea
add
mov
push
add
mov
pop
js
add
clc
push
iret
cld
aad
jl
int3
fidivs
dec
daa
xor
loope
inc
jno
les
cs
mov
or
ret
dec
add
sub
jnp
aas
sbb
arpl
mov
aad
fs
pop
push
pusha
xor
xchg
outsb
push
aam
jle
sbb
aam
cld
testb
lods
shlb
int3
loope
into
and
inc
fs
mov
in
push
negb
lods
sahf
or
push
adc
leave
leave
mov
mov
out
lods
xchg
sub
lret
lods
dec
in
loope
sub
or
popf
out
cmc
pushl
imul
outsb
imul
fcom
and
in
cltd
lret
add
inc
push
pusha
pop
scas
icebp
jb
mov
sbb
or
sbb
add
mov
sbb
int3
sbb
inc
jne
mov
cmp
ret
lds
fsub
add
push
out
or
mov
push
pop
cmp
mov
add
fisttps
pop
lods
shll
push
into
jmp
lods
mov
cmpl
aam
hlt
mov
add
addl
fsubrs
hlt
pop
xorl
xchg
cmp
aad
sub
fs
sub
stos
pop
lock
jg
sub
xor
mov
pushf
in
js
fdivrl
mov
outsl
popf
ret
pop
mov
fisubl
std
fbstp
fwait
test
jmp
dec
mov
pop
push
int
push
jle
xchg
repnz
mov
cmp
jle
pop
jo
leave
movl
mov
imul
arpl
push
mov
filds
jmp
sub
jne
dec
mov
push
xor
pop
cmp
pop
idivb
loope
or
cltd
inc
in
fidivs
and
into
fimuls
popa
loop
adc
push
popa
mov
insl
cmovne
sub
sbb
mov
or
xchg
xchg
jle
imul
jb
lcall
addr16
xchg
out
xchg
sub
jns
jge
out
jmp
fistpl
pop
xor
or
jae
enter
imul
hlt
xchg
fadds
loope
mov
ljmp
iret
dec
mov
ja
inc
jae
pop
lret
and
call
xchg
add
mov
mov
psraw
push
or
fisttpl
daa
rolb
int
lds
dec
push
inc
push
mov
mov
std
dec
inc
leave
push
add
sbb
imul
dec
inc
or
sbb
cmp
in
insl
mov
sub
push
dec
cmpb
popf
cwtl
mov
out
scas
cltd
arpl
outsl
inc
jno
mulb
inc
push
push
adc
xchg
and
xchg
jns
insb
stos
and
seto
mov
imul
clc
dec
dec
add
in
mov
dec
mov
add
add
pop
fcomps
out
popa
ficompl
cli
lcall
xchg
shld
jne
das
ret
cmp
mov
std
mov
dec
scas
clc
out
xor
cmp
leave
ja
inc
mov
insb
mov
sbb
bound
insb
lcall
or
pop
dec
xchg
mov
jecxz
decb
sub
mov
fidivrl
cmp
push
or
cmpsl
pop
cmpsb
cld
popf
mov
and
jmp
pop
dec
ret
pop
dec
jg
daa
inc
sub
xchg
push
pop
mov
dec
lret
loopne
mov
jno
imull
cwtl
fcoms
scas
lods
mov
std
pop
jne
push
jbe
xlat
loope
frstor
jecxz
aad
pop
sub
pop
es
mov
mov
lea
adc
fimuls
dec
jnp
jbe
dec
mov
xor
int
add
addb
push
iret
mov
imul
fwait
insb
std
jle
cmp
mov
lret
pushfw
shlb
mov
repz
dec
mov
or
push
push
dec
scas
jg
add
xor
andb
jne
fsubs
cmpsl
lcall
jns
mov
mov
pop
out
sbb
out
imul
jb
and
jl
adc
cmp
shl
jb
ret
jmp
xchg
push
inc
push
es
xchg
lahf
or
push
sub
jbe
and
push
test
movsb
in
ds
add
xchg
sbb
inc
dec
and
call
sub
out
mov
test
int3
lea
sbb
pop
push
imul
mov
pop
leave
dec
cmpsb
lock
lret
push
dec
call
mov
in
sahf
fs
adc
xorl
int
aam
pop
mov
add
cmp
leave
or
push
cld
nop
mov
rorl
or
sub
addr16
testb
mov
aad
pop
cli
jl
push
mov
push
pusha
out
mov
enter
add
add
xchg
scas
and
scas
insb
in
cmp
outsb
mov
int
cmp
push
add
fdivrs
cld
xor
ss
lret
repz
movsl
daa
adc
loop
test
adcl
xchg
or
std
out
mov
sub
push
push
in
adc
scas
jge
inc
mov
test
subb
add
sub
out
cmp
cwtl
inc
and
xor
cltd
mov
inc
jbe
push
orl
jp
cmp
push
push
pop
push
dec
sbb
andb
inc
out
pop
cli
rcrb
pop
loopne
cmp
inc
lcall
gs
hlt
ficoml
setae
cmp
push
xchg
ret
hlt
dec
js
lcall
mov
cld
jne
cbtw
xchg
push
fdivrl
mov
imul
fdivs
or
sub
int
inc
stc
cmp
movsb
xchg
push
add
test
leave
xor
aad
mov
popa
roll
mov
stc
jg
adc
popa
repnz
sbb
std
loop
mov
loope
stc
mov
cltd
sbb
add
or
insb
loop
add
mov
or
rorb
rcl
mov
xor
ficomps
adc
jo
pop
push
loop
popa
repz
imul
pop
imul
shl
test
ret
lret
cli
loop
mov
fsubs
mov
and
pop
or
push
and
fwait
mov
sar
inc
and
rcrb
dec
xchg
mov
shlb
imul
cli
leave
dec
mov
dec
pop
jmp
dec
in
inc
dec
lods
inc
inc
and
or
jle
jg
icebp
sbb
fimuls
push
scas
lret
es
mov
in
cmpsb
or
fwait
cmp
lahf
dec
mov
push
cmpb
mov
push
cld
or
dec
sbb
or
and
xchg
les
sti
loop
loopne
negb
pop
das
xor
jl
data16
dec
pop
cmp
stc
into
cmc
mov
cmp
xchg
lcall
adc
dec
dec
dec
shlb
xchg
test
fisttps
negb
je
fimuls
insl
push
fld
daa
sbb
xchg
xchg
out
pop
lea
lea
mov
add
mov
fldt
mov
nop
fsubs
add
sub
dec
sahf
xchg
pusha
insl
mov
or
test
das
xchg
push
mov
scas
outsl
fistps
jnp
jp
sbb
rcl
lds
sub
fadds
dec
cmp
pushf
xchg
inc
int3
jne
push
jne
call
test
mov
xor
pop
jecxz
arpl
jmp
pop
gs
jmp
push
push
addr16
mov
insl
bswap
cld
pavgb
and
sub
sahf
jo
mov
cmp
test
mov
pop
or
cld
push
fdivl
mov
mov
das
sahf
xchg
ret
pop
jb
gs
fistps
je
or
pop
repz
cmp
xor
aas
arpl
jge
push
mov
cmp
fcmovb
cmpsl
push
addr16
sbb
test
or
mulb
xchg
xor
inc
out
xchg
shrl
add
inc
repnz
shlb
sbbl
enter
loop
movsb
and
pushf
or
pop
insl
js
mov
into
fistpll
and
aas
sbb
inc
xchg
jmp
sahf
mov
mov
scas
mov
xchg
jp
jns
mov
push
push
inc
es
out
mov
into
lahf
adc
adc
or
inc
mov
adc
jbe
pop
mov
adc
fstps
xor
jae
mov
mov
sub
in
sbb
jle
js,pn
maxps
test
push
data16
mov
push
add
and
jg
adc
xor
cli
sbb
ret
xor
inc
test
arpl
or
push
cmp
push
dec
inc
outsb
addr16
imul
xchg
sahf
mov
les
xor
shl
aas
rorb
es
pop
mov
inc
lods
push
or
repz
test
js
movl
push
add
pcmpgtd
insl
std
inc
and
aas
fstl
lret
push
and
push
push
je
xchg
pop
ss
adc
push
clc
inc
sub
loop
xlat
cmp
sarl
ficomps
xchg
ja
dec
inc
fbstp
adc
xor
inc
jl
subl
lcall
jb
jle
repnz
stos
scas
xor
cwtl
xor
xor
sbb
cmpsl
inc
test
enter
fwait
xchg
scas
in
data16
add
add
push
inc
or
push
pop
jmp
or
sub
ss
daa
or
xor
mov
jae
mov
loopne
popf
pop
pushf
pop
cmp
jo
jbe
into
icebp
mov
bound
into
sub
icebp
dec
lea
mov
cld
inc
jl
inc
inc
jnp
les
mov
stos
sub
sbb
das
xor
sbb
fisttps
decb
dec
inc
enter
add
jmp
xchg
inc
jns
repz
pop
mov
or
jg
mov
les
cmp
cmp
rolb
loope
mov
cmpsb
push
ret
cwtl
sahf
or
xor
inc
jp
fistps
pop
loop
cli
out
jo
sub
inc
jmp
inc
bound
dec
lret
popf
rcrl
mov
iret
ret
shlb
pop
mov
das
int3
fsubrl
mov
cld
outsl
int
jnp
insl
xchg
add
fdiv
cmc
in
xor
and
jp
loopne
mov
repnz
add
fs
sbb
mov
fcoml
fs
mov
stos
mov
imul
xor
push
pop
lods
adc
repz
popf
lods
arpl
shl
je
inc
xchg
test
mov
outsb
shl
fistl
or
js
ja
dec
mov
cmp
sub
xchg
jb
adc
jecxz
add
and
loop
mov
pop
adc
icebp
repz
xlat
sbb
dec
adcl
inc
jg
or
add
cs
or
scas
xchg
xor
lock
insb
jp
loop
outsl
shrb
xor
or
and
adc
and
sti
fistl
enter
dec
push
jo
cmc
addr16
pop
sti
movsl
sub
cwtl
outsl
jle
xorl
adc
cmc
pusha
in
imul
cwtl
shll
mov
loope
push
sbb
mov
pop
and
scas
xchg
ljmp
cs
aam
add
cld
or
push
pop
stos
movsb
and
jb
xchg
shlb
mov
fwait
sbb
rcr
mov
xchg
stc
enter
mov
cmpsb
jae
in
sub
pop
adc
pop
add
push
jl
adc
jo
jo
cmpsl
jne
jbe
mov
cmp
jb
xor
testl
sub
adc
xchg
aad
and
aaa
insl
inc
lds
repnz
int
in
fistl
and
cmp
icebp
mov
pop
insl
dec
push
test
movsl
push
nop
inc
and
mov
cmp
inc
push
adcb
aas
push
add
enter
push
ja
mov
dec
cmp
test
and
mov
pop
pop
out
xor
mov
add
or
lods
roll
int3
cmpsl
fmul
lock
push
mov
outsl
pusha
or
cltd
xlat
cmp
ja
or
or
sbb
push
aad
adc
mov
xchg
add
and
xchg
leave
pop
imul
mov
add
sub
pop
lods
sub
pop
sbb
cwtl
test
push
jge
xchg
rolb
ds
mov
cmp
xchg
sti
movsb
incl
rorb
pop
sub
cmp
jbe
mov
sub
lea
inc
lea
outsl
imul
dec
xorb
loope
pushf
sahf
pushf
jle
cmp
or
in
arpl
ret
ss
js
jg
imulb
adc
lea
push
sbb
jb
addr16
jb
outsb
fwait
clc
mov
dec
adc
xchg
out
cmp
and
fbld
mov
cltd
mov
cmc
push
mov
dec
insb
fs
pushf
das
add
lds
xchg
and
stos
outsb
and
add
out
je
call
pop
or
je
orb
sub
lods
ss
imul
fimull
fldl
cmpsl
inc
std
je
stos
jge
loope
testl
dec
outsl
sub
sub
xlat
inc
jmp
push
sbb
lcall
sbb
fsts
and
es
or
jb
andb
sbb
movb
sub
sbb
das
inc
xlat
shlb
adc
push
add
push
popl
lret
dec
lahf
lods
popa
cltd
lahf
lret
add
jnp
dec
sub
cmpsl
push
scas
fnstenv
add
call
scas
and
sub
adc
roll
adc
mov
sbb
aaa
sahf
rcr
xchg
lcall
mov
cmp
add
and
adc
out
in
or
add
cmp
sbb
cli
pop
inc
pop
jg
inc
bound
sarl
push
shl
push
mov
fstp
cmp
mov
sahf
shll
pop
inc
frstor
xor
jnp
stos
cmp
mov
jp
cwtl
add
loope
mov
ss
fnstcw
mov
sbb
int3
sar
aas
loop
inc
or
fucomp
push
or
in
xor
sbb
jns
outsb
pop
xor
add
jp
adc
out
test
pop
xchg
xchg
roll
mov
out
addr16
add
lock
mul
rcr
mov
adc
loope
fsubs
push
pop
or
in
fidivs
mov
scas
jbe
push
dec
clc
inc
std
inc
xor
movl
das
jns
add
adc
ljmp
movsb
mov
adc
sub
adc
inc
and
loope
inc
sti
xchg
pop
pop
mov
sub
mov
ja
push
xchg
popf
je
and
cmp
mov
pop
add
cli
mov
inc
mov
jnp
or
mov
pushf
pop
or
stos
xchg
int3
dec
icebp
mov
inc
fs
aaa
mov
mov
or
pop
fsubs
leave
sub
sbb
mov
frstpm(287
inc
xchg
leave
mov
jnp
adc
dec
fidivs
pusha
enter
hlt
rcl
arpl
data16
sbb
sub
xchg
popf
into
cmp
or
ljmp
cmp
pop
ds
subl
jne
int
push
dec
xor
lret
imul
mov
cli
mov
or
rorb
adc
ss
rorl
inc
and
or
sbb
faddp
movsl
mov
jne
jno
sub
stos
repnz
aaa
out
pop
mov
stos
loope
inc
stos
dec
bound
outsl
testl
or
sar
and
pop
aas
cld
mov
add
adc
dec
dec
pop
mov
out
popf
jae
jno
pop
inc
lret
push
xchg
inc
shll
adc
pusha
pop
pop
lds
ja
jno
cmp
ja
outsb
dec
and
dec
xor
cmp
mov
fst
movsl
int
out
add
lds
cli
xor
insl
or
rcrb
pop
jle
ret
mov
add
call
pusha
roll
std
dec
mov
aas
xchg
xor
or
sbb
push
int3
lea
cltd
into
add
sub
enter
mov
call
movb
das
cmp
jo
es
mov
xor
lahf
push
fdiv
and
or
inc
cmp
call
icebp
mov
outsb
insl
nop
push
inc
mov
mov
cmpsb
cmp
or
pop
mov
pop
mov
inc
dec
inc
adc
es
subb
xorb
mov
mov
clc
xchg
or
mov
scas
push
subl
pop
pop
fwait
js
popf
mov
rcr
bswap
xor
mov
nop
jl
jl
dec
xlat
cmp
movsb
sbb
push
xchg
cmp
popa
and
sbb
dec
and
dec
insl
cmpsb
lock
loop
xor
sub
jnp
inc
dec
sbb
sbb
in
xchg
xchg
jbe
gs
insb
cmp
mov
std
pop
and
ret
push
mov
jo
inc
add
lahf
push
or
pop
ljmp
arpl
movsl
jo
inc
and
ret
pop
mov
or
stc
fwait
sbb
mov
jne
jae
into
add
dec
adc
add
js
and
jne
mov
pop
int
mov
in
test
addr16
ret
cli
lret
enter
dec
xorl
loop
ret
pop
push
jno
movl
sbb
insl
cmp
lods
sub
xchg
roll
pushf
dec
adc
in
jns
sub
mov
or
jne
xor
mov
in
les
mov
push
adc
aaa
hlt
cmp
push
fdivl
jmp
pop
jbe
popa
enter
les
imulb
sub
or
sub
bound
push
scas
ret
sbbb
jge
sbb
ds
xor
movsl
xor
sbbl
sar
inc
fidivrs
mov
adc
mov
cmp
sahf
ss
jns
aad
pop
fisubrs
adc
sbb
out
cmpsl
mov
mov
jp
push
repz
mov
int3
cmp
mov
addr16
pop
out
test
andl
inc
iret
stc
orb
rcll
rorb
mov
and
subb
shl
in
mov
sbb
jge
xchg
inc
out
int3
out
dec
bound
insb
fisubrl
xor
push
movsl
fwait
jnp
les
cmp
rcrl
sub
mov
add
ds
inc
scas
sbb
arpl
inc
pop
push
push
jbe
mov
test
jo
dec
es
push
jno
andb
pop
pop
mov
add
movups
mov
movsb
aas
in
and
insl
in
and
pop
rolb
and
sbb
cmc
cmpsl
icebp
fisubrl
sbb
sub
pushw
lods
lods
aaa
cmp
mov
jge
addr16
insb
mov
addr16
daa
insb
bound
out
xor
pop
adc
test
or
lock
jmp
gs
mov
nop
nop
filds
or
xchg
fwait
jle
push
or
adc
cmp
mov
mov
dec
pop
jge
mov
jae
push
pop
mov
cmpsb
push
xchg
clc
test
push
xor
loope
and
jo
shrb
fidivs
mov
je
clc
aad
push
mov
and
jb
inc
lcall
in
ss
loopne
pop
in
pop
cmpsb
test
mov
sub
mov
aam
sub
cltd
sub
outsb
leave
mov
and
xchg
mov
cmp
aaa
test
frstor
dec
lahf
cmp
add
or
push
scas
out
sahf
fmuls
push
push
push
mov
sti
inc
adc
inc
out
and
xor
jmp
fsubs
in
loopne
in
ss
fs
xchg
decb
sub
lcall
shll
xchg
push
jb
sbb
lea
xor
xor
cld
in
jb
fcmovu
and
xor
pop
sub
inc
repnz
jg
movsb
mov
xchg
sbb
mov
movsl
push
adc
xchg
pop
movsb
fiaddl
and
cmp
and
xlat
push
mov
subb
xor
je
adc
xor
inc
mov
inc
and
ret
add
aaa
xor
mov
mov
cmc
bound
repnz
push
cmpsb
ret
or
xorl
mov
dec
xor
xchg
dec
sbb
test
fwait
outsl
lods
fcoms
in
pop
pop
mov
adc
dec
push
or
and
jnp
scas
and
xor
incl
mov
and
sbb
push
test
push
test
arpl
pop
loop
enter
xchg
leave
sarb
push
inc
sbb
sub
jmp
lret
jno
and
sbb
inc
jns
mov
in
lods
sub
mov
test
dec
clc
xchg
mov
mov
into
lret
pop
cmc
sbb
clc
mov
cmp
imul
adc
icebp
mov
cmpsb
rorb
push
imul
shrb
stos
lods
out
mov
adc
jb
stos
loope
call
mov
cmp
popf
adc
gs
ret
out
sbb
add
out
lret
and
repz
mov
mov
xchg
test
add
push
lock
mov
and
orb
loope
mov
jmp
cmp
aad
dec
inc
sub
test
push
outsb
addl
cmp
xor
inc
cmp
into
cmp
jnp
sub
and
insl
ds
jg
xchg
pop
dec
mov
or
sahf
mov
mov
sub
popf
xchg
xor
mov
gs
add
xor
cmp
or
std
mov
fwait
adc
aad
xor
clc
mov
fldcw
test
mov
inc
mov
and
repnz
xchg
or
outsb
ret
lret
dec
arpl
and
pop
cwtl
mov
push
sbb
out
lods
xchg
test
sbb
lock
and
xchg
in
aaa
add
push
xchg
sbb
xchg
adc
shlb
rep
fwait
leave
add
fcompl
mov
fadds
mov
xor
or
jp
inc
mov
in
inc
or
pusha
mov
fsts
negl
jbe
repz
jle
inc
test
es
out
add
stos
clc
das
pop
jo
ljmp
lahf
sub
cmpsb
imul
inc
outsb
ja
ficompl
insb
movsl
loop
jns
sub
adc
jnp
add
sub
sbb
inc
fimuls
cld
scas
pop
cmp
mov
les
int
xchg
ret
ljmp
imul
test
frstor
cmp
aas
fwait
mov
inc
ds
addr16
xchg
sub
adc
mov
movsb
int
or
in
lcall
inc
xchg
imul
dec
push
sbb
mov
xor
push
push
out
sub
mov
pop
mov
or
sbb
mov
inc
inc
out
xchg
mov
mov
mov
add
and
sbb
dec
mov
jg
mov
jecxz
adc
movsb
sbb
sbb
daa
adc
lahf
aaa
or
mov
addr16
jge
notb
mov
hlt
test
mov
jmp
aad
ljmp
fisubrs
pop
leave
adc
mov
std
lock
add
fstps
iret
scas
out
cmp
push
or
cmp
cmc
ljmp
dec
jmp
fs
shll
cmp
dec
cmpsl
mov
add
mov
arpl
pop
test
scas
or
xor
stc
jns
and
imul
mov
stos
mull
nop
xor
ljmp
fcmovu
cltd
xor
mov
pmulhuw
inc
dec
push
daa
fisttpl
stos
out
push
sbb
rolb
scas
clc
fwait
add
adc
cmp
stos
jb
push
out
mov
mov
imull
cli
lahf
jne
pop
decl
inc
push
mov
dec
ret
popa
imul
popf
stc
lret
out
and
lods
mul
stos
xchg
rcl
sahf
addr16
jns
lock
das
fnsave
sbb
xchg
cwtl
sarb
ret
sbb
mov
and
fwait
mov
pop
cs
into
and
or
xor
cwtl
and
pop
les
int3
sti
xchg
mov
xchg
xchg
outsb
mov
inc
inc
xchg
data16
mov
call
scas
mov
outsb
jbe
jmp
jns
stc
addb
add
pop
jb
lods
and
fists
int
jae
push
out
cmc
ds
dec
mov
cmpsb
mov
clc
movsb
dec
aaa
dec
je
inc
mov
mov
push
jmp
push
xchg
jno
cs
in
cli
mov
int3
inc
sbb
fnstsw
insl
adc
movsb
aam
xchg
mov
add
jmp
ljmp
sar
or
sarl
and
rcr
fwait
mov
mov
bound
gs
mov
imul
es
jae
pop
xchg
aas
jne
mov
mov
not
add
in
outsw
mov
sub
jne
xchg
xor
cmp
add
rclb
jne
adc
cld
testl
adc
test
mov
test
enter
shlb
data16
enter
sub
pop
fstpl
pushf
mov
pop
dec
mov
push
sarb
pop
cmp
scas
fidivs
xchg
add
mov
aaa
insb
js
mov
or
int3
fsubrl
xchg
leave
scas
jb
xor
mov
andl
inc
jmp
fistps
jmp
aam
pop
bound
arpl
xor
push
mov
cmp
add
push
xchg
jecxz
cld
daa
add
sar
rcrl
pop
and
out
lcall
cmpsb
mov
xor
popf
out
pop
lret
sbb
pop
dec
test
xchg
ror
ret
ljmp
int3
jg
imull
and
shr
sub
jmp
or
repnz
jno
sub
pop
cmp
dec
sahf
fwait
mov
add
frstor
dec
stc
call
xchg
inc
lcall
aam
fwait
or
pop
call
jmp
mov
fucom
movsl
mov
adc
jo
pop
push
push
fs
mov
cmp
dec
inc
out
pushf
insb
sahf
jae
lahf
push
int3
gs
mov
mov
jmp
push
jle
es
xor
dec
test
inc
pop
and
add
dec
xor
or
cwtl
xchg
adc
ss
dec
scas
out
cmpb
jns
test
xchg
aaa
mov
sbb
es
dec
test
jno
cmp
rolb
jle
push
fldcw
dec
pop
pushf
rcll
pop
scas
rcr
js
jp
bound
aad
jbe
stc
mov
scas
clc
data16
shrl
push
xchg
and
nop
cmpsb
movsb
xor
int
or
rclb
test
xor
push
ret
dec
mov
inc
jmp
cli
pop
jge
jae
pop
sub
data16
fwait
push
ds
sub
and
and
push
mov
gs
mov
xchg
test
xchg
mov
mov
cmp
out
mov
dec
stos
in
mov
hlt
xor
dec
testl
xlat
je
mov
jno
pop
rcrb
ja
xchg
lea
push
xor
jl
cmp
adc
scas
sub
mov
data16
mov
ficompl
pop
gs
xchg
push
inc
fstps
dec
lcall
mov
push
test
dec
mov
sbb
lea
adc
mov
adc
or
mov
stc
mov
negb
cmpsl
lock
mov
mov
xchg
inc
in
movsb
pop
out
leave
lods
xor
add
fdivl
movsb
push
fsubs
fcoml
jno
ret
pop
or
loop
or
nop
pushl
jo
pop
shll
mov
adcl
icebp
cwtl
xchg
mov
rclb
in
xchg
repnz
ds
xchg
les
cld
stc
add
push
xchg
lock
insb
mov
inc
insb
xorb
jne
rclb
xor
outsb
or
mov
add
mov
bound
loopne
gs
xchg
sbb
xchg
mov
fs
mov
dec
mov
fiaddl
aas
nop
mul
sub
sbb
nop
and
mov
imul
in
pop
pop
into
mov
add
out
cmp
xchg
cmc
push
cli
arpl
jp
lods
std
call
xor
mov
xlat
xlat
jae
jo
shll
fcmove
inc
stc
rclb
out
les
add
mov
jmp
repnz
and
cli
add
sbb
push
xor
out
mov
sbb
cmpsb
pop
push
sbb
sbb
jo
inc
ds
or
mov
shl
imul
movsb
lods
lods
testb
xchg
sbb
dec
sbb
xchg
fwait
repnz
xchg
dec
lea
mov
jno
cmp
dec
fdivl
popl
xchg
push
mov
or
aas
xchg
push
fbstp
push
xchg
aaa
sub
scas
sub
fdivl
or
dec
out
fs
inc
je
mov
add
push
ret
ss
addr16
sub
cwtl
nop
pop
mov
jns
mov
cld
in
xchg
loopne
iret
pop
sarl
sbb
or
dec
xchg
add
mov
sbb
add
mov
cmpl
mov
les
push
lock
mov
jge
aas
xchg
leave
push
pop
mov
mov
cmp
push
lahf
popf
int
cmp
xor
jno
call
jb
push
imul
sbb
bnd
cmp
push
cmpsb
push
mov
ret
lret
movsb
sbb
mov
jmp
pop
outsb
jnp
or
mov
in
fcoml
divl
fnsave
call
xchg
pop
iret
add
decb
lret
jge
repz
and
mov
dec
test
push
test
pop
xlat
fdivr
jl
xchg
test
and
adc
je,pt
sub
push
or
out
adcl
dec
or
jl
subl
int
mov
popf
lret
mov
lods
and
fldt
push
outsl
add
lahf
pop
iret
jbe
leave
dec
xor
shrb
outsl
aam
cmp
sbb
fldenv
fstpt
or
insb
and
pop
clc
icebp
bound
loopne
imul
push
shll
dec
dec
jmp
mov
push
mov
js
loopne
xor
sti
mov
cld
mul
xchg
dec
ret
mov
loopne
aam
ss
lods
int3
adc
fdivrl
in
aad
in
or
dec
jno
test
aas
lret
and
mov
popa
sbb
stos
fidivs
cmp
xor
movsl
xor
and
jb
add
shll
xchg
in
test
sbb
jle
test
icebp
imul
push
out
lahf
test
pop
push
insb
ret
adc
lock
out
outsl
lods
lock
mov
sbb
jnp,pn
int
stos
inc
xchg
push
cmp
leave
sub
pop
ja
loopne
push
and
mov
repz
adc
cmpsb
lock
pop
mov
out
in
sarl
jp
pushf
cmp
push
mov
xchg
andl
aaa
dec
or
aad
sbb
mov
std
enter
cwtl
lock
bound
aad
pop
stc
push
mov
push
push
mov
add
ljmp
sbb
imul
mov
inc
jno
test
js
and
or
adcl
xor
faddp
mov
cmp
leave
cwtl
rol
mov
sbbl
inc
mov
in
test
cltd
xor
pcmpgtb
daa
rcr
inc
outsb
add
push
cmc
and
fstl
sub
cmpsl
mov
xchg
push
mov
mov
jmp
mov
sub
sub
mov
pushf
lock
cs
xlat
inc
ljmp
pop
frstor
mov
fidivrl
push
inc
fs
lds
push
jp
pop
cmp
inc
sbb
xchg
pop
jg
lds
jecxz
pop
pop
test
sbb
push
xor
xchg
nop
xor
test
sub
sbb
and
dec
cmp
push
push
jp
sub
idivl
ret
and
notb
adc
pop
dec
mov
aas
cmpsl
push
lret
jmp
push
push
mov
lds
and
xorb
shrl
pop
sbb
push
arpl
or
cld
gs
outsl
dec
std
cmc
xchg
int3
fisubl
insb
stc
negl
repnz
test
mov
das
clc
cmp
addr16
and
mov
notb
dec
clc
adc
ret
push
inc
mov
mov
mov
inc
mov
jge
lahf
xor
mov
fimuls
aas
fdivp
sti
adc
rorb
mov
ret
andl
jle
dec
xchg
push
leave
or
shll
add
arpl
push
xchg
outsb
jns
mov
fld
pop
cmp
xchg
addr16
loopne
incl
push
bound
dec
mov
test
cld
jns
outsb
fucomp
fbld
inc
inc
loopne
mov
cwtl
sub
aaa
mov
sub
outsb
mov
mov
mov
mov
jae
test
pop
mov
cli
mov
push
mov
outsb
xchg
push
sub
adc
mov
ret
mov
mov
jl
mov
pop
and
inc
stc
pop
ljmp
adc
rcpps
fdivr
add
fdivs
jno
mov
aad
sti
xchg
xor
movb
xor
mov
out
addr16
out
adc
stos
aad
or
or
fstpt
scas
repz
adc
sub
adc
mov
les
das
xor
jle
test
enter
pop
push
xlat
sbb
pop
lods
sahf
dec
inc
lods
cmpb
jb
sbb
leave
mov
xchg
push
xchg
inc
xor
subb
cmc
jo
jnp
ljmp
mov
xchg
fidivl
sarl
or
mov
int
mov
cld
sbb
and
sub
push
mov
inc
xchg
mov
sbb
out
inc
popf
and
xor
mov
xchg
icebp
sub
push
iret
std
inc
call
mov
dec
mov
js
test
cwtl
adc
cli
roll
pop
mov
fldt
push
std
xchg
pop
fcomps
insl
sarl
divb
xor
cmp
loopne
pop
movsl
fisubl
push
push
inc
mov
cmp
aaa
ljmp
fidivl
push
ret
sub
getsec
and
xchg
xchg
jmp
push
sub
loop
cmc
fs
pop
or
or
notl
dec
add
nop
ret
or
lcall
int
gs
mov
rcpps
sahf
bound
sbbl
and
movsb
push
or
lods
mov
iret
adc
jp
scas
lock
inc
test
nop
jo
test
sub
dec
decb
fs
addr16
rolb
dec
movsl
mov
fidivl
arpl
push
mov
pop
xchg
pop
pusha
adc
ja
test
mov
mov
xchg
jecxz
in
daa
xor
cmp
scas
or
jae
les
mov
les
push
stc
shr
movsb
cmp
es
adc
xor
jb
dec
lods
stos
neg
and
lds
jae
fnstsw
sti
mov
repz
mov
push
sub
mov
orb
push
dec
sarb
sti
sahf
add
sub
sub
hlt
xor
xchg
bound
popa
fstps
dec
dec
and
adc
int
addl
push
mov
in
mov
push
in
insl
jmp
jno
hlt
adc
inc
xor
mov
fdivp
sti
daa
in
loopne
cmc
jno
jle
aad
xlat
mov
xchg
stc
mov
push
mov
and
sub
sbb
movsb
sbb
dec
stc
jmp
ja
mov
mov
imul
adc
test
popa
push
scas
cmp
mov
xor
ds
je
in
xor
or
int
pop
xchg
push
xchg
adc
or
sbb
sub
pop
xchg
and
mov
add
xchg
inc
push
sti
inc
shr
pop
jle
insl
dec
bound
adc
cli
inc
add
ret
punpckhdq
lock
fsubl
fsubl
mov
sbb
cmc
scas
fwait
sahf
push
mov
mov
in
dec
dec
and
hlt
lahf
mov
call
dec
or
imul
daa
mov
push
into
rolb
aas
insb
out
push
gs
sarb
inc
mov
sbb
or
dec
roll
and
adc
and
xor
gs
arpl
adc
cmpsl
sub
lret
jmp
mov
outsb
or
sub
mov
andb
cmpb
rclb
sbb
ja
jo
dec
out
imul
into
sub
xorb
fmulp
out
enter
sahf
inc
popf
xchg
ja
ljmp
sub
mov
mov
sub
aas
sub
push
inc
jno
je
ret
xchg
pop
push
outsb
cmp
push
movsb
jp
sbb
add
sbb
xchg
ja
das
jbe
aas
pop
leave
dec
xor
cli
je
pop
adc
and
jle
stos
test
adc
sub
inc
sub
sbb
imul
mov
adc
ret
pop
js
repnz
and
lahf
lahf
jle
push
add
scas
fnstenv
popl
sahf
mov
adc
orb
pop
mov
or
pop
xchg
rcrl
mov
into
lea
inc
insb
mov
bound
mov
and
popf
aad
in
mov
je
mov
mov
mov
mov
add
loop
mov
popf
stc
mov
push
and
jl
jge
sahf
test
xchg
pop
pop
decb
clc
loope
iret
lds
hlt
mov
test
out
mov
push
lret
xchg
pop
push
aaa
sti
xor
add
pop
in
jecxz
popa
out
ja
je
mov
mov
inc
pop
mov
or
mov
sub
stc
loop
mov
out
aaa
daa
int3
pop
lock
int3
out
adc
std
pop
lahf
in
jmp
aaa
stos
test
cs
adc
or
push
push
push
pop
mov
repnz
mov
int
mov
clc
lds
inc
movsl
jno
int
adc
cs
adc
mov
jmp
or
dec
xor
xor
cmp
mov
dec
mov
shr
xchg
pop
test
mov
test
repnz
add
insl
pop
test
sahf
lods
out
mov
cmpb
lods
ret
sub
js
punpckhwd
test
mov
addr16
dec
lcall
aas
in
mov
rclb
lcall
fdivrl
lods
daa
pop
lahf
pop
out
inc
xor
outsb
fcom
dec
inc
mov
fsubrl
je
testb
test
nop
xchg
sbb
ljmp
in
negl
push
add
jg
dec
jno
push
adc
fs
jge
lcall
andb
sbb
gs
lret
sub
cmpsl
dec
dec
push
cmpsb
es
adc
pop
pop
or
jge
sbb
arpl
push
ret
mov
xchg
or
fcomps
es
mov
push
add
push
pushf
cld
out
sub
pop
popa
mov
ret
adc
loop
sbb
out
jae
popf
clc
ret
daa
jge
jl
mull
inc
pop
push
sahf
fwait
jmp
outsl
pusha
aas
outsl
push
mov
daa
adc
adc
inc
xchg
rol
add
test
adc
test
in
movb
and
je
test
sahf
fidivs
push
or
and
xor
in
mov
jne
and
pop
roll
add
pushl
shll
dec
mov
aas
divl
adc
push
sbb
jmp
sbb
fs
jecxz
jae
xchg
dec
lahf
jnp
jge
loope
iret
adc
mov
ss
jns
push
mov
jle
push
das
sbb
xor
mov
popf
mov
push
daa
inc
dec
xchg
test
mov
movsb
in
mov
pop
push
scas
arpl
jno
shll
movsb
dec
pop
loope
xor
mov
fsubrs
repz
in
fadd
ds
xchg
xchg
in
pop
fsubr
push
movsb
ret
jbe
xchg
mov
mov
mov
adc
mov
mov
sbb
sbb
outsb
daa
fnstcw
mov
cmp
aas
jmp
xchg
es
cwtl
ficoml
mov
push
inc
mov
mov
aad
iret
enter
xor
mov
loop
xchg
fwait
rclb
mov
fisubrl
repz
cmpsl
sub
repz
add
push
xor
add
jg
scas
sub
icebp
push
add
shlb
mov
or
clc
mov
ret
mov
jge
movsl
inc
and
jl
shr
addl
test
inc
flds
loope
mov
je
in
test
mov
mov
lret
repz
lods
add
pop
push
dec
mov
xorl
cli
out
cmpsl
cmp
sub
inc
je
sahf
out
mov
xchg
pop
jmp
repz
in
dec
scas
xor
pop
add
adc
mov
fistl
mov
incl
pop
xchg
or
pushf
int
fsubr
dec
scas
push
push
jge
lds
pop
ja
cmp
dec
aam
mov
fcoms
pop
pusha
enter
ret
test
sub
add
icebp
push
add
mov
sbb
lcall
xchg
pop
fldenv
in
push
scas
shll
cmp
jge
in
stos
mov
in
out
xor
out
iret
push
pop
cwtl
mov
jne
sti
fstpt
sbb
and
jmp
jecxz
cltd
stos
pop
xor
insl
inc
inc
es
sbb
dec
and
pusha
loop
dec
out
stos
arpl
sub
lret
sbb
mov
push
subb
stc
pop
pop
scas
addr16
xchg
into
or
test
push
imul
lds
pushf
xchg
xchg
mov
mov
mov
ja
or
test
inc
and
ljmp
push
or
shrl
dec
orb
fadds
add
mov
cmp
add
and
arpl
rorb
addl
stos
cli
inc
mov
sbbb
test
cmp
push
leave
pushf
push
dec
sub
adc
in
insb
or
leave
push
repz
fnstenv
repnz
add
jmp
and
not
or
xor
inc
loopne
sbb
test
push
jno
addr16
adc
sub
pop
insl
je
roll
add
and
inc
leave
dec
aaa
jb
js
cltd
icebp
mov
inc
clc
loop
stos
add
movsl
clc
pop
pop
push
sub
das
jg
inc
sub
xor
cmp
iret
cld
inc
sbb
or
push
adc
shr
pop
popf
nop
pop
int3
das
mov
aam
enter
cwtl
sbbl
mov
add
cmp
out
xor
lea
sub
mov
mov
sbb
or
aam
rcrl
loop
sbb
jne
sub
xlat
dec
dec
sbb
mov
dec
pop
pop
sbb
ss
mov
ss
out
lahf
mov
popfw
sub
jo
sub
xor
jns
pop
popf
rclb
cmp
jmp
cmp
pop
xchg
call
add
sub
jo
xor
lret
jecxz
and
xor
shll
stos
push
lret
fstps
mov
xor
scas
mov
ljmp
pop
mov
xor
cmp
or
xchg
loope
jnp
lret
push
lods
fsubrs
aad
in
cmpsb
or
push
dec
fistpll
jge
dec
mov
push
adc
out
insl
cltd
adc
mov
fwait
jle
sbb
cltd
mov
cmp
aas
mov
lret
jno
fdivr
les
xor
fmull
mov
inc
xor
loop
lea
jmp
add
xor
xchg
xchg
lret
rcr
stos
cmp
aas
inc
outsl
mov
data16
mov
mov
mov
ret
scas
mov
lods
insl
mov
out
ret
mov
mov
cwtl
push
adc
cli
cmc
out
sbb
shl
int
jns
out
pop
in
scas
push
fdecstp
mov
dec
test
mov
push
xchg
mov
and
sbb
test
mov
xchg
xchg
cli
loop
or
pop
inc
mov
pushf
sub
dec
js
sub
xchg
dec
cmc
fildl
or
repnz
sbb
ss
xor
push
pop
call
sub
fcom
dec
outsl
xor
add
push
psllw
mov
sub
testl
icebp
jno
jle
pop
cmovae
mull
xchg
push
jmp
rolb
push
mov
shll
mov
hlt
add
sbb
push
jl
ja
fldt
aad
data16
repz
and
push
lcall
mov
mov
dec
mov
call
inc
mov
mov
add
add
adc
sbb
mov
push
cli
and
andl
test
fs
adc
arpl
repz
int
and
and
xchg
mov
and
cmp
data16
popa
scas
xor
inc
out
roll
add
mov
dec
movsl
xchg
std
push
pusha
jbe
roll
pop
jnp
fldt
out
data16
xor
xchg
lds
push
mov
sub
inc
ss
loop
dec
sbb
loopne
clc
ret
insl
call
add
pop
mov
js
and
imulb
outsb
cmp
mov
inc
fisubl
iret
lret
push
iret
and
int
cmp
xchg
lcall
mov
ja
jecxz
insb
pop
xchg
fwait
test
lret
lcall
dec
jecxz
jb
jl
mov
dec
roll
div
cmp
push
add
lret
xchg
pop
loope
add
loopne
arpl
inc
adc
fsub
mov
push
dec
out
adcl
clc
sub
mov
cmp
cmp
in
stc
in
lods
jns
out
shlb
mov
sbb
push
and
cmc
pop
in
inc
push
jbe
divl
jg
push
das
sub
cmc
sub
add
scas
mov
movsb
insl
inc
inc
sahf
inc
xor
test
jge
xlat
ret
push
and
jmp
daa
lea
sub
xor
cmp
xchg
in
enter
inc
and
add
dec
or
cmp
cld
sub
sbb
sub
sbb
sub
fidivrl
cwtl
inc
in
loope
out
enter
jb
movl
push
stos
jne
nop
in
add
jg
mov
repnz
inc
inc
js
jbe
loopne
sub
ror
jp
mov
pop
jge
fiadds
lock
inc
sub
jne
mov
int3
adc
sbb
adc
lods
xchg
mov
scas
jle
inc
cmpb
push
xor
add
cmc
fistpl
cmp
adc
int
cmp
cmpsl
cli
roll
push
mov
push
adc
jge
daa
dec
cmpsl
ficoml
rcrl
testb
shrl
imul
push
fmull
or
scas
push
leave
jne
add
insb
test
xchg
into
sub
xor
pop
and
mov
sti
push
sbb
xchg
xor
mov
movsb
mov
int
int3
xchg
ret
call
cmp
jl
ljmp
cli
cli
sub
xor
push
xchg
mov
add
push
rsm
sub
add
mov
scas
or
cwtl
bound
dec
mov
inc
ds
mull
in
push
divl
jbe
daa
mov
inc
lds
movsb
mov
arpl
js
mov
lcall
jp
cmp
fcomps
dec
shll
jecxz
push
lret
or
mov
mov
scas
jecxz
enter
inc
repnz
add
and
inc
cmp
push
stos
and
mov
addl
mov
jns
fmulp
shll
inc
fwait
lods
inc
push
mov
cs
pop
fldt
roll
les
xchg
loope
mov
pop
lret
cmp
dec
hlt
rclb
lea
rol
js
and
sahf
xchg
leave
push
das
rcrb
rolb
mov
into
cli
test
clc
lods
inc
jae
cltd
cmp
jmp
sub
popf
int3
ja
nop
mov
call
dec
aam
in
clc
cmp
pop
cmpsb
sub
ds
lea
mov
pop
inc
out
outsl
ja
js
repz
jmp
fs
nop
mov
xchg
pop
or
mov
add
stos
sti
mov
pop
shl
and
in
add
test
popl
aas
rclb
fs
in
inc
jne
loop
inc
icebp
xor
pop
xchg
push
mov
inc
xchg
push
add
cltd
xchg
in
fsubs
and
sub
xchg
mov
mov
call
fs
addr16
mov
cmp
gs
dec
aad
sbb
add
jge
loopne
fs
insb
popa
pop
mov
mov
repnz
sub
call
fs
jmp
xor
xor
std
or
in
mov
and
lods
xchg
test
ret
or
insb
sub
ljmp
movsl
dec
test
std
cs
fidivrl
sub
addl
mov
fcomps
cmp
dec
or
mov
mov
push
rol
dec
dec
cmc
outsb
les
out
les
lret
test
jns
adc
stos
fimull
std
or
jns
cmp
movsl
test
or
sub
pop
lods
pusha
fistl
aam
ret
jae
scas
test
sbb
adc
sub
in
loope
lods
xchg
fistpl
cmp
mov
add
mov
idiv
pop
fnstcw
je
adc
leave
and
mov
and
shll
add
pop
xchg
in
xchg
fdivrl
loop
je
pop
out
inc
pop
sub
xchg
jl
ret
enter
push
inc
inc
out
lret
cmp
lea
std
jmp
mov
mov
mov
push
and
adc
das
inc
mov
lret
lods
int
or
repnz
pop
fdivrs
pop
aaa
ds
cmpsl
pop
mov
sub
jae
mov
push
push
int
dec
or
mov
fwait
jmp
pushf
jge
and
push
lods
ret
push
add
gs
or
fimuls
aad
in
and
pop
jno
xor
sub
jecxz
jge
push
xchg
pop
sub
gs
jmp
ljmp
dec
jg
pop
sub
xchg
call
rep
jge
xchg
or
fs
pop
hlt
or
mov
cmc
push
inc
mov
xchg
inc
pop
sub
push
and
mov
es
repz
repnz
xor
enter
mov
jmp
push
xchg
js
mov
jle
inc
fiaddl
dec
xor
iret
jecxz
test
shrl
fs
push
jg
cmp
add
fidivl
mov
pop
mov
in
cmp
cltd
cmp
mov
and
jp
add
aam
mov
inc
mov
js
xchg
pop
lret
ljmp
push
inc
std
data16
mov
inc
push
inc
jae
and
repz
in
inc
icebp
cld
dec
mov
call
xchg
jecxz
inc
mov
xchg
or
push
psubb
cmpsl
fiadds
xchg
fwait
and
lahf
loope
push
dec
pop
leave
jl
dec
insb
inc
mov
mov
shlb
jbe
inc
mov
out
lcall
mov
scas
mov
sbb
iret
xchg
xchg
push
cmpsl
cmp
jno
iret
nop
fcoml
pop
adc
xor
or
daa
aaa
std
test
cli
popa
xchg
xchg
xchg
scas
jno
arpl
ljmp
jecxz
inc
mov
gs
out
dec
test
idivb
call
dec
out
inc
popa
jns
clc
cmpsl
xor
ds
mov
repz
push
decl
xor
fld
sahf
stos
ss
mov
loopne
sti
dec
push
sub
es
xchg
push
or
int
rorb
orb
pop
mov
cwtl
in
inc
out
jo
jl
add
xor
jb
pop
pop
in
fisubl
stos
je
sub
cmp
cmp
xchg
fstpt
cltd
inc
adc
iret
pop
and
cld
push
xlat
sub
push
pushl
sub
sbb
xor
push
xchg
cmp
subl
shll
insb
push
pop
pop
sub
enter
loopne
shrb
arpl
xlat
test
jmp
jmp
out
mov
outsb
fwait
stos
jecxz
fstpt
out
xchg
int3
imul
add
mov
rorl
sbb
jg
add
outsb
cltd
clc
shl
jbe
inc
sarl
sti
jns
dec
jo
loop
subb
mov
scas
dec
inc
ret
mov
out
dec
fwait
lds
add
fnstcw
insl
loope
sbbb
cmpsb
and
add
lahf
cwtl
xchg
fildl
dec
sub
mov
pop
into
mov
insl
push
xchg
loop
int3
push
jmp
jnp
pushf
jmp
dec
cmp
cld
cmp
jmp
movsl
pop
out
pop
in
or
jno
dec
ret
fcompl
mov
sbb
popa
push
jb
xor
cmc
mov
pop
jnp
adc
mov
arpl
xchg
imul
add
jno
mov
sahf
pop
out
mov
scas
in
push
test
rcrl
inc
sub
mov
aas
sub
sub
xor
mov
pop
and
rolb
imul
ss
xchg
movsl
jmp
stc
stos
popa
outsb
sbb
repnz
ret
arpl
in
mov
stos
jp
daa
sub
in
mov
xor
cs
mov
in
push
imul
pusha
push
push
movsb
mov
aam
and
push
cmp
shrb
push
lods
lahf
jp
sbb
sub
arpl
sub
in
sahf
inc
testl
adcl
xchg
test
push
mov
inc
xchg
add
push
ret
sbb
test
push
inc
in
test
into
fdivs
mov
bound
mov
or
shll
in
aam
inc
xchg
jo
mov
inc
lock
ror
imul
shrl
scas
dec
andl
data16
roll
inc
or
push
xchg
jbe
out
sub
cmc
outsb
mov
xchg
push
xchg
fucomp
lea
lds
jle
adc
out
sub
lea
cmp
sbb
jl
pop
pop
ret
jmp
jmp
dec
mov
movl
mov
mov
jae
and
jp
or
push
icebp
and
ficomps
mov
lcall
lahf
mov
add
push
lret
aad
ret
ret
test
xchg
in
ss
popa
in
in
pop
pusha
jnp
mov
xchg
add
adc
lock
fnsave
mov
orl
les
inc
hlt
divb
adc
push
pop
popa
lds
dec
ficoml
xchg
or
mov
jg
imull
loop
imul
and
xor
dec
sarb
mov
sbbb
inc
sub
jmp
or
jmp
lret
iret
sbb
in
mov
pop
ror
mov
xchg
dec
pop
xor
and
int
rcrb
test
push
lods
cmp
push
mov
rcrl
push
mov
cmp
bound
cmpsl
jmp
scas
shlb
fildll
in
bound
sti
imul
mov
pop
fwait
add
fcoml
adc
inc
es
test
sbb
or
and
jmp
scas
sub
out
xchg
adc
push
inc
nopl
cltd
push
jl
and
adc
inc
movsl
xor
gs
enter
add
aam
sub
es
inc
stos
aaa
scas
imul
add
jl
jne
ret
loope
and
ds
inc
mov
shlb
and
push
sti
mov
cmp
daa
lahf
pushf
mov
mov
jbe
xchg
stc
jge
nop
stos
aad
cli
cmp
popa
xchg
insl
lds
mov
popf
lods
push
lret
mov
cmpsb
fstpl
mov
or
out
leave
and
jmp
test
in
inc
push
pop
leave
gs
lods
stos
cmp
sub
or
pusha
xchg
aam
pop
mov
mov
pop
dec
mull
in
add
insl
push
enter
mov
ds
mov
xchg
cmpsb
mov
mov
jb
xor
enter
mov
pop
mov
lea
xchg
inc
das
dec
jle
loopne
stc
jle
jo
sbb
out
outsl
shll
push
sti
ljmp
mov
cmp
fbstp
addr16
nop
mov
xor
push
xor
mov
loop
lock
inc
sub
das
lds
fimuls
dec
repz
sbb
lods
dec
xchg
cld
out
push
fnstenv
cld
insb
gs
inc
fdivp
pop
mov
in
adc
pop
popf
jno
jno
mov
fsubl
in
xchg
lret
in
mov
xor
mov
sbb
lods
ds
jnp
outsb
sub
pop
insb
inc
ja
imul
dec
adc
sbb
pop
div
push
jae
ljmp
notb
rcr
pop
pop
inc
fucomp
push
push
add
sbb
test
cmpsl
xchg
iret
rorb
pop
sub
movsl
lahf
push
jge
and
xor
notb
push
pop
repz
arpl
pop
fdivrs
loopne
in
pop
cmp
fistpll
inc
and
pop
loopne
cmpsl
mov
or
pop
or
or
adc
add
adc
cld
sub
ss
dec
inc
lea
dec
mov
xchg
mov
leave
pop
sti
jle
leave
int3
xor
out
xor
or
cld
lcall
pop
push
or
ret
sbb
dec
pop
sub
mov
push
sbb
sbb
shlb
cmpl
pusha
sbb
icebp
sub
and
push
inc
mov
pop
pusha
in
fwait
mov
dec
jmp
cwtl
bnd
mov
in
xchg
xchg
daa
sub
loopne
adc
shlb
outsl
out
or
aam
sbb
pop
xchg
addr16
dec
fisttpl
outsb
cmpsl
int3
cli
cwtl
cmp
fcoms
inc
mov
enter
bound
mov
sbb
xchg
loop
ljmp
push
and
daa
dec
pop
jl
js
cli
std
popa
pop
sbb
cmp
xchg
scas
cmp
pop
adc
adc
xchg
and
testl
rorl
xor
inc
xchg
into
jl
jmp
test
xor
push
or
xchg
cmp
mov
mov
jo
aaa
sbb
icebp
jmp
xor
xchg
sbb
pop
popf
pop
or
cli
out
adc
or
jns
pop
lods
imul
adc
imull
mov
jno
mov
sbb
xchg
mov
adc
mov
jno
jb
hlt
cmp
jns
shrl
xchg
iret
sub
insl
add
adc
push
xorl
loop
shll
clc
js
sbb
inc
leave
mov
cmp
or
dec
fstl
shlb
cmp
jno
pop
int3
fs
adc
sub
fsubl
push
divb
push
mov
repnz
in
cmp
jecxz
dec
and
call
mov
xchg
xchg
scas
sbb
ja
sbbb
cmp
sbb
dec
mov
arpl
aam
add
xchg
hlt
jb
push
sbb
and
add
adcl
xchg
insb
sbb
mov
cmp
dec
cmp
daa
shrb
sti
jmp
incb
es
lods
lock
or
ret
mov
roll
cmp
dec
push
sbb
cmc
dec
xor
rclb
xor
mov
ja
jmp
inc
mov
out
ljmp
int
clc
adc
inc
mov
shll
or
pop
out
cs
ret
add
mov
inc
inc
fcmovnb
test
push
pop
insb
xor
imul
jno
add
mov
dec
cmp
push
mov
test
mov
stos
out
inc
jo
mov
sub
xor
mov
push
les
outsl
rolb
adc
sbb
daa
mov
add
test
mov
ljmp
lds
sti
and
das
cmp
sti
mov
loope
mov
lds
cmp
cmp
and
or
xchg
xchg
jge
repz
sti
lea
or
lahf
or
push
inc
mov
and
dec
or
fs
push
inc
pop
xor
push
xchg
idivl
mov
pop
test
shll
dec
fcomps
mov
mov
or
sub
aad
std
cmp
push
outsl
sbb
pop
aaa
jp
push
jg
add
movb
sub
fstps
loope
xchg
arpl
insl
movsb
cwtl
imul
rclb
pop
pop
nop
pop
and
mov
in
sub
lcall
push
imul
jg
mov
lret
fs
sbb
jb
push
cli
rclb
mov
jo
lret
sbbl
inc
sbb
adcl
je
cmp
ret
and
xchg
adc
ret
pop
sbb
out
test
stos
flds
inc
inc
ljmp
sub
pop
movsb
orb
sub
dec
and
or
das
hlt
mov
cltd
sarl
loop
push
cmp
mov
mov
mov
cmp
push
lret
les
and
push
pop
into
imul
mov
lret
movsb
scas
dec
sub
leave
das
dec
mov
test
orb
sbb
iret
popf
jnp
dec
mov
push
cli
neg
cmpsb
add
bound
nop
lret
scas
aaa
pop
sub
in
scas
repz
or
jnp
xchg
pusha
iret
lret
push
call
mov
or
pushf
aaa
jns
movl
mov
pslld
adc
xchg
pushl
lahf
cmc
sub
data16
outsl
pop
sti
scas
cmp
cmp
push
dec
int
push
sub
adc
cmp
insl
gs
mov
mov
or
into
jp
sub
jb
cmp
sub
cmc
test
adc
out
popa
mov
sbb
push
add
adc
or
ja
adcl
ficomps
xlat
nop
mov
sti
ljmp
lea
call
mov
adc
add
mov
lea
fidivl
cmp
repnz
lahf
fstps
xchg
rorb
stos
dec
inc
dec
ss
movsb
shlb
inc
lods
push
loop
jno
jnp
sbb
insl
sti
mov
xchg
rcl
enter
shlb
adc
sahf
inc
inc
dec
pusha
stos
jae
subb
and
mov
add
pop
dec
inc
lea
stos
cli
fmulp
dec
or
movl
movb
stos
aaa
dec
adc
icebp
lret
sub
pusha
imul
rol
mov
mov
test
es
mov
out
push
lods
rorl
ss
in
lahf
nop
into
sub
pusha
rep
clc
icebp
sbb
out
clc
nop
gs
test
mov
cmpsl
popa
and
cmc
imull
adc
test
push
sub
sub
xor
or
cwtl
fs
or
into
pusha
cli
cmp
std
dec
pop
jnp
push
popf
sti
and
pop
movsb
xor
mov
in
or
add
pop
adc
cmp
add
pop
bnd
xchg
fnstenv
in
imul
stos
mov
xchg
je
out
jge
sarl
xor
ja
test
mov
in
cmp
lock
dec
xchg
add
pop
jns
xor
dec
int3
sbb
jle
adc
pop
aaa
dec
push
push
imul
add
ss
stos
jne
sbb
mov
mov
scas
pop
ret
mov
mov
jo
mov
pop
sbb
orb
or
mov
pop
pop
mov
push
out
lds
movl
loopne
imul
bound
pop
out
fdiv
jecxz
xor
jbe
sub
dec
xchg
leave
cmc
arpl
test
pop
arpl
std
lret
aas
repz
andl
and
push
test
lods
fmuls
insl
adc
js
and
pop
mov
aaa
mov
cmp
push
fcompl
sbb
ret
mov
cld
xor
mov
lds
jmp
push
push
repnz
mov
jb
jns
ffreep
cmp
aaa
fistl
fisubrl
out
in
fcoms
mov
push
out
movsb
leave
mov
or
xchg
or
outsl
jae
and
data16
xor
add
outsb
imull
sub
pop
inc
mov
cmpsb
push
sub
lods
divl
fcomip
clc
test
loopne
sarl
nop
cmp
sbb
sbb
dec
popf
call
out
repnz
mov
imul
or
mov
adc
cli
push
fdiv
add
insl
insb
or
xchg
in
push
popa
add
inc
push
loop
mov
jp
in
add
inc
or
pop
sub
push
xchg
fdivs
sub
insb
xchg
jg
pushf
fistl
repz
in
std
data16
and
popa
push
mov
sub
repnz
dec
add
mov
pop
xor
test
push
outsl
jge
in
sub
clc
in
call
mov
and
or
push
mov
js
cmp
sbb
cmpsb
mov
icebp
push
xor
mov
lret
jl
lods
cmc
popa
lahf
push
lods
std
cld
dec
call
cmpsl
pop
mov
and
das
jmp
das
scas
jg
fwait
loopne
imul
mov
fdivl
das
push
lret
pop
or
roll
sarl
cmp
sbb
mov
in
or
imul
adcb
test
insl
std
shl
mov
inc
fistpl
pop
fucomi
push
mov
ja
xchg
imul
lahf
or
push
and
inc
pop
xchg
ret
push
fstps
jnp
ljmp
lcall
jbe
dec
in
int
adc
cwtl
mov
fcomps
lret
ja
xchg
dec
cltd
sbbl
push
adc
into
mov
js
pop
add
inc
push
and
movaps
iret
sbb
mov
xor
mov
test
xchg
lea
push
inc
sub
inc
xchg
aad
int
add
cld
xor
lods
dec
inc
jmp
lahf
cmpsl
fldt
xchg
out
sti
out
mov
das
sub
jnp
mov
icebp
in
push
sbb
imul
xlat
and
bound
and
popf
daa
mov
inc
inc
sub
punpckhdq
jecxz
mov
jl
mov
dec
stos
nop
fnstsw
cli
dec
jmp
dec
pop
scas
adc
cmpb
or
in
or
xchg
outsb
pop
mov
lds
scas
ror
xchg
out
jge
std
leave
cmc
sbb
push
js
mov
push
push
sub
fsubs
pop
das
cmpsl
pushf
xor
sbb
nop
call
clc
clc
fildll
in
and
out
pop
or
out
fdivs
addl
sub
pop
ljmp
sub
adcb
xchg
test
testl
lock
xchg
stc
lret
shlb
pop
cltd
mov
push
lcall
sbb
inc
push
mull
lds
fistpl
out
lods
loopne
ja
fisubs
mov
push
inc
aam
add
sbb
and
mov
jb
or
cmc
andl
loopne
test
or
loop
in
sahf
faddl
xlat
xor
jno
cli
sub
adc
outsl
mov
and
push
push
or
mov
pop
lods
adc
into
insl
cmp
jl
dec
or
nop
mov
mov
stc
addr16
xor
mov
lods
sbb
in
push
insl
int
ret
popf
sub
or
add
imul
jb
adc
inc
mov
push
out
dec
push
es
outsb
hlt
mov
enter
sti
ret
insl
jae
stos
inc
fcoms
xor
cmp
cmc
mov
pop
in
scas
adc
call
ds
jb
iret
ret
push
jbe
sub
pop
leave
jl
fmulp
jle
sti
outsl
add
test
in
sbb
movsb
test
and
ds
test
xor
xchg
es
adc
outsb
dec
cmc
jno
lret
shll
dec
dec
or
mov
mov
loop
jmp
or
cmp
insb
ds
in
ss
imul
outsl
push
fcoml
inc
xor
dec
mov
mov
inc
iret
pop
mov
xlat
pop
pop
pop
jmp
or
fadds
mov
dec
leave
add
roll
cli
mov
out
ljmp
cmc
mov
jno
lods
out
inc
inc
lock
push
dec
mov
mov
fidivrl
rclb
mov
mov
int
pusha
out
mov
or
mov
shrl
mov
lea
idivb
pop
pop
enter
adc
and
repz
xor
inc
adc
push
ljmp
roll
sbb
cmpsl
xchg
xchg
cmp
jle
fs
hlt
call
jbe
jbe
lcall
loopne
sbb
lret
adc
push
sub
cmc
mov
js
in
cwtl
repnz
xchg
int
adcb
fwait
mov
das
jno
pop
jns
jg
pop
ja
pop
aam
cmp
in
mov
mov
xor
gs
ds
inc
movsb
sbb
mov
jns
dec
mov
fs
sbb
add
jmp
jno
xchg
ret
stos
mov
mov
xchg
fsubp
mov
fistl
dec
mov
inc
out
in
and
xlat
xchg
movsb
loope
loope
mov
ja
stc
and
testb
movsl
fcompl
es
jbe
mov
mov
cmp
xchg
push
pop
jno
cmc
jp
je
xor
mov
sbb
sti
xchg
mov
mov
mov
gs
imul
and
bound
add
scas
jmp
inc
cmpsb
stos
enter
sbb
adc
out
inc
int
pop
jno
lods
pop
push
mov
leave
xchg
add
fnsave
or
rorb
out
xor
adc
mov
call
mov
lahf
aas
out
xor
sbb
add
imul
and
movsb
out
push
mov
jae
cwtl
mov
sbb
sbb
mov
in
in
adc
pop
shlb
sbb
ss
push
daa
xchg
mov
pop
imul
out
mov
jae
jle
pop
jbe
sub
stc
mov
sar
sti
sbb
sbb
dec
jmp
mov
outsl
dec
lock
cwtl
fiaddl
clc
out
xchg
mov
add
movsb
pop
loope
xor
pop
andl
adc
fisttps
aam
xchg
adc
ret
push
mov
xorl
inc
lcall
pop
aam
std
inc
push
pop
dec
or
xchg
pop
adc
mov
or
fbstp
or
loop
mov
sarl
jecxz
nop
cwtl
inc
and
inc
test
fstpt
aaa
rorl
jnp
sbb
popa
push
dec
inc
aad
jg
rorl
add
sarb
add
jl
mov
jns
mov
mov
fsubrl
inc
dec
loope
imul
inc
xorl
cmp
dec
ja
push
rorb
mov
mov
mov
orb
and
fwait
mov
je
fidivrs
add
mov
or
xor
jl
push
add
xchg
push
fwait
adc
mov
adc
loopne
cli
dec
xchg
rcrl
mov
cltd
pusha
push
in
cmpsb
scas
int3
aad
dec
mov
mov
pop
lods
outsb
frstor
inc
rcrb
pop
std
sub
sbb
and
pop
insl
push
fnstenv
mulb
xchg
cmp
movsb
dec
jp
push
movsl
lcallw
hlt
mov
mov
fstps
in
int
fistps
xorl
mov
xchg
add
gs
test
or
pop
out
loopne
add
add
cld
and
cmp
push
cmp
andb
xlat
pop
aas
sbb
je
jl
push
xchg
mov
sub
push
add
outsb
xchg
add
daa
adc
mov
adc
popa
add
push
stos
inc
mov
jle
xchg
dec
xchg
inc
push
cmp
call
xchg
sbb
leave
xor
ljmp
mov
mov
xor
arpl
cmp
aas
dec
inc
jmp
clc
sbb
mov
jmp
mov
loopne
pop
fsubr
dec
xor
mov
bound
out
into
jnp
call
xor
ljmp
xchg
jb
js
xor
fidivl
repz
jle
in
adc
sub
leave
jno
js
dec
shr
ret
out
lret
inc
mov
popf
or
pushf
ror
cld
xorl
xchg
rorl
dec
gs
mov
loop
iret
je
loope
add
inc
popf
pop
xor
sub
mov
fwait
popa
popf
scas
mov
dec
push
mov
mov
les
lret
cmp
call
xor
movnti
adc
push
mov
lds
es
cs
sahf
cmp
daa
and
sti
sub
sbb
add
adc
pop
sbb
fdivs
mov
outsb
or
mov
in
sti
xor
jne
xchg
je
inc
cmpsl
lock
xchg
mov
lock
jnp
sub
cmc
and
fwait
sub
lahf
loop
mov
sbb
icebp
into
and
xor
cmp
inc
imul
inc
cwtl
jmp
int3
lret
test
pusha
divb
int3
mov
add
icebp
cmc
xor
popa
pop
jecxz
pop
aaa
js
sahf
loope
push
dec
lahf
mov
xchg
leave
aam
xchg
sysret
aam
and
cwtl
push
ja
mov
les
insl
inc
loop
adcl
mov
pushf
repnz
repz
mov
fcoms
inc
mov
insb
sbb
mov
add
scas
inc
sbb
jecxz
pop
push
fiaddl
jbe
dec
pop
es
push
xor
push
jle
jo
mov
fadd
je
sub
jno
xor
mov
pusha
xchg
mov
jno
push
fisttpll
ret
add
or
filds
std
pop
movsb
lods
mov
xor
shl
adc
lock
cli
inc
xchg
push
andl
idiv
sbb
sahf
push
push
cld
outsb
les
test
cmc
fidivrs
push
xchg
lahf
inc
repz
adc
cmpb
pop
rclb
jle
je
jne
cmc
int3
jae
adc
int3
lcall
cs
mov
shrl
push
loope,pn
push
test
adc
push
dec
or
pop
xchg
addb
pushl
out
cwtl
xchg
bound
push
addr16
inc
mov
out
and
clc
imul
bound
fcomps
fbstp
in
jo
sahf
ficoml
pop
addr16
mov
inc
bound
xchg
adc
push
in
mov
dec
jbe
andl
dec
fstpl
stos
aaa
or
les
cli
mov
sub
gs
insl
jno
inc
loopne
add
inc
cmp
adc
or
xor
and
loope
popa
mov
in
outsb
adc
sbb
stos
scas
pop
rclb
adc
clc
movsl
mov
aam
sub
outsb
dec
mov
cmp
xchg
mov
shll
adc
in
fmuls
inc
mov
aam
xor
scas
fldl
sbb
add
loope
hlt
jecxz
test
mov
cltd
in
mov
xor
and
mov
dec
jmp
xchg
pop
ds
orl
xor
sbb
insl
xor
ret
enter
lods
mov
iret
cmp
xchg
outsb
xchg
sub
andb
ds
cmc
mov
add
movl
jp
push
cli
mov
outsl
loopne
mov
lea
push
add
in
or
mov
mov
xchg
mov
lock
mov
imul
inc
test
or
xor
out
in
insb
cltd
stos
sti
and
and
xor
cmp
xchg
rorl
aas
ja
push
mov
ss
inc
mov
inc
fwait
sbb
pusha
sub
jns
mov
cmp
popf
in
aad
bound
xchg
scas
popf
out
test
jno
loopne
loop
aad
push
testb
repz
lods
out
push
lods
jle
pusha
xchg
cwtl
fbstp
xor
je
ret
and
call
mov
adc
xor
cmp
mov
pop
mov
les
outsl
jns
xchg
cltd
add
pop
inc
mov
dec
xor
popa
ja
fimuls
mov
insb
into
inc
fs
lods
lods
dec
shll
add
movsb
and
lret
pop
xchg
out
dec
imul
push
jb
and
mov
pop
cmp
jne
ss
sub
roll
push
clc
or
lcall
dec
sti
mov
mov
add
mov
sbbb
jl
adc
lock
add
seta
ret
pop
lahf
adc
dec
xlat
je
loopne
adc
icebp
inc
test
jne
lods
mov
cli
loopne
xor
push
adc
outsl
in
cmp
stos
movsl
ret
cwtl
stos
fadds
and
cmp
pop
cmp
sbb
lret
xchg
and
out
jecxz
out
fldl
repnz
push
ficoml
or
bound
and
loop
lods
sub
data16
mov
mov
and
fistpll
leave
in
cwtl
xchg
out
mov
xchg
cmpsl
mov
mov
xchg
aad
pushl
sbb
out
jne
les
or
push
outsl
stos
orb
xchg
sub
in
sub
mov
cmpsl
ret
out
sarl
jle
xchg
inc
in
das
or
push
mov
lret
add
mov
push
lcall
hlt
push
int
cmp
je
gs
lds
sub
cmp
jle
mov
pop
stos
test
es
fcomps
lock
test
cmp
out
jg
cmp
int
cmpsl
out
rorb
jecxz
xor
jle
mov
mov
mov
mov
mov
cmpsb
iret
out
xor
gs
imul
and
sub
mov
and
pop
cmpsl
push
imul
inc
decl
xor
lcall
je
stos
inc
dec
shll
out
int3
out
out
mov
leave
and
cmp
xor
jp
sbb
in
cs
into
fmull
sarl
hlt
jg
fildll
in
scas
int
lcall
mov
ljmp
push
adc
pop
data16
cmc
out
popa
lret
inc
lds
xor
mov
lock
int
adcb
orb
push
out
mov
cmp
test
ljmp
clc
mov
xchg
fstpt
adc
std
in
shll
pop
pop
push
call
jno
cli
xchg
xchg
mov
mov
loopne
cli
sub
jbe
xchg
enter
into
cmp
push
jge
xchg
cld
push
inc
enter
fstl
or
ror
push
cmp
push
sub
jno
mov
mov
inc
cmp
sahf
popf
shr
jnp
xchg
pop
mov
xchg
add
cwtl
lea
imul
lcall
xchg
push
std
sarb
ret
cmp
push
and
shl
mov
sub
pop
and
lahf
pop
fwait
movsb
push
fidivl
mov
ds
mov
stc
fcmovnu
mov
gs
ja
push
jae
or
in
outsb
inc
sbb
outsl
jne
pop
aad
dec
xor
in
jb
out
fisttpll
add
rcll
jle
stos
inc
mulb
jp
mov
pop
inc
mov
mov
stos
lock
test
xorb
in
in
inc
add
mov
mov
into
push
jns
jge
mov
out
xchg
sub
ja
or
pop
sarl
xor
inc
pop
pusha
mov
xchg
jns
mov
scas
sbb
loope
push
shlb
xor
pop
sub
adc
shll
aaa
push
push
cmp
incb
inc
dec
add
xchg
mov
das
jl
ret
cli
imul
jmp
rcl
idiv
mov
push
cmp
mov
xchg
xlat
cltd
xor
js
push
js
adc
popa
jns
or
xchg
clc
loopne
fnstenv
cwtl
orw
pop
cwtl
push
scas
bound
push
shlb
pop
mov
sahf
repz
push
fwait
mov
or
add
push
lds
sbb
jnp
outsb
int
xor
push
es
movsl
lcall
fnstenv
xchg
sbb
mov
push
test
jnp
stc
jge
notl
pop
call
and
mov
popf
flds
scas
mov
das
aaa
jnp
pop
jb
les
xlat
add
xor
push
jl
sub
sub
xchg
jl
add
push
mov
or
dec
rolb
or
sbb
imul
push
mov
add
and
xor
xchg
xor
jg
scas
popa
mov
push
in
xorps
add
pusha
jg
inc
dec
push
adc
jno
dec
jae
std
xor
push
cmp
jbe
sbb
add
addb
pusha
test
stos
sub
out
hlt
cmpsl
xor
sbb
mov
adc
and
xchg
lds
in
lea
push
inc
or
lahf
xor
adc
xchg
push
mov
adc
push
cwtl
dec
inc
cmp
and
dec
push
and
xor
xchg
jae
jno
lret
mov
mov
cmpsl
jnp
inc
xchg
xchg
add
sbb
cmc
cmovb
jge
cmp
outsl
add
sub
sbb
ja
in
lock
add
aaa
scas
inc
push
aam
sarb
sub
and
out
jle
ja
mov
cmp
adc
in
mov
rolb
lahf
pop
sub
aas
das
xor
in
xor
cs
add
test
fnstsw
data16
mov
sub
push
or
cmc
dec
lea
mov
gs
jmp
daa
xchg
hlt
insl
mov
cmp
icebp
and
es
mov
lcall
mov
addr16
and
mov
inc
test
out
pop
insb
sahf
mov
dec
imul
decl
jae
xor
jg
dec
sub
mov
in
push
ret
inc
in
pusha
std
int3
mov
movsl
addr16
xorb
movsl
and
mov
outsl
shlb
push
std
pop
add
das
inc
mov
popa
mov
sub
mov
fdivs
jl
jle
lds
push
scas
es
inc
mov
mov
push
or
mov
mov
int3
lret
es
in
es
mov
xor
add
mov
enter
xor
inc
jnp
rcr
in
or
dec
inc
in
aam
xchg
push
push
iret
filds
sub
test
pop
and
fmull
test
push
test
add
fdivp
push
shrb
negb
push
jnp
dec
gs
scas
cmc
or
sbb
sbb
daa
pop
pop
cmpsb
xlat
and
inc
es
hlt
or
divl
sub
xchg
scas
mov
test
push
push
outsb
js
stc
or
xor
xor
xchg
xchg
scas
aad
cmc
xor
test
mov
xchg
jl
std
aaa
data16
cli
les
add
mov
xchg
cmp
mov
das
push
push
out
fimuls
fs
or
lock
lcall
sub
lods
xchg
aam
dec
rcr
xchg
shll
push
jecxz
mov
outsl
test
lret
ret
xlat
fcmovne
inc
inc
or
push
lods
icebp
popa
inc
cltd
int
push
xchg
pop
push
add
fucomip
pop
sbb
mov
jle
hlt
es
push
jbe
adc
ds
sti
xor
pop
fbstp
or
subl
xchg
dec
and
lock
hlt
xchg
mov
jns
dec
rorb
das
add
mov
pusha
dec
sahf
inc
ljmp
push
dec
sbb
int3
faddl
mov
ret
out
int
push
mov
jne
inc
scas
cmp
fs
hlt
test
mov
lret
xchg
icebp
jne
lahf
dec
and
push
stos
in
lods
xchg
jl
push
push
loop
cld
test
scas
popf
test
sbb
popa
jne
mov
rclb
and
mov
and
movsl
push
sbb
cli
loop
mov
hlt
or
mov
movsl
push
push
fs
pop
push
out
push
cmc
xor
push
es
setle
out
mov
insl
cmp
out
xor
jmp
mov
fmull
jp
shl
xorl
xlat
test
daa
mov
cmpsl
je
sbb
andb
lret
repnz
inc
or
pushf
popf
xor
jl
je
je
call
test
pop
xchg
inc
push
scas
adc
ss
xchg
xchg
push
pusha
js
inc
xchg
push
mov
bound
xchg
pop
mov
add
pop
mov
dec
addl
jbe
mov
sub
gs
andl
repnz
jnp
xchg
cmc
jmp
jecxz
insl
cmp
jns
push
daa
adc
sub
pop
dec
aaa
arpl
rol
lcall
inc
inc
jmp
mov
sbbl
fimuls
mov
jnp
in
test
pop
ficoml
xchg
push
sub
mov
and
sbb
stos
lahf
pop
cmp
adc
sbb
mov
sbb
aad
aad
xor
mov
xchg
cmp
xchg
loopne
test
cmpsl
sbb
fistps
pop
dec
xchg
loopne
and
ja
aad
std
popf
je
stos
mov
ret
dec
add
lahf
ds
dec
inc
pop
repz
je
adc
arpl
jae
movsl
stos
insl
ror
jnp
clc
andl
imul
push
push
sub
mov
fs
es
cmp
mov
hlt
mov
add
xchg
fnstsw
outsb
inc
push
or
push
mov
sub
loope
imul
cld
enter
mov
sbb
xchg
mov
sbb
cwtl
outsb
adc
out
popa
jmp
imul
xchg
in
ret
xchg
cmp
sub
mov
sbb
sub
mov
out
push
add
bound
mov
repz
gs
and
push
push
repz
sub
sbb
xor
dec
int3
fstpt
mov
in
imul
cmpsb
sub
lock
mov
sbb
and
out
mov
mov
cmpl
mov
in
jnp
out
xchg
add
lods
adc
clc
mov
aad
fildll
jle
lahf
outsb
in
add
loop
orb
mov
jnp
stos
lods
fcoms
movsb
mov
mov
jp
inc
mov
jnp
xchg
adc
testl
add
aam
aam
into
mov
adc
mov
mov
pushf
adcl
leave
arpl
stos
clc
and
jecxz
and
inc
lcall
push
mov
movsb
cmpsl
sub
stc
adc
pop
sti
jae
cmp
ja
stos
mov
sar
and
repz
cmp
jmp
mov
fistps
inc
leave
insb
es
outsb
xor
cwtl
lahf
add
test
cwtl
jmp
loop
jno
sub
sub
dec
rorl
pop
and
mov
sbbb
xchg
push
push
xor
and
addr16
lock
pop
push
jbe
adc
or
mov
xor
fxch
mov
and
push
and
jno
iret
out
mov
idivl
mov
popa
and
dec
sbb
and
aaa
dec
jge
and
xchg
dec
loope
scas
or
cmp
sbb
adc
jno
xor
cmp
psllw
daa
and
jecxz
dec
movsb
adcb
inc
mov
cmp
sbb
or
inc
jl
dec
fisubrl
mov
mov
movsb
scas
cld
jo
lods
inc
xchg
inc
leave
int3
pushf
pop
mov
lret
not
cltd
pop
lea
das
push
xchg
push
out
mov
in
outsb
aaa
repnz
or
push
scas
rolb
inc
dec
imul
ret
shlb
mov
jp
dec
pusha
lods
sub
in
mov
sbb
inc
std
inc
aad
arpl
ja
sbb
lret
rcrb
pop
sub
scas
es
xlat
dec
xor
loop
push
push
push
iret
test
or
mov
imul
pop
mov
pop
fsub
adc
jo
mov
out
sbb
pop
into
mov
stc
daa
test
pop
and
mov
stos
jle
or
cmpsl
hlt
movsb
sbb
arpl
dec
in
jne
push
sub
int3
push
sti
or
pop
jg
fwait
sbb
or
or
gs
sti
mov
pushf
ljmp
gs
nop
mov
mov
loopne
pop
adc
jae
fidivrl
pop
mov
xchg
xor
fdivs
mov
xchg
test
test
xor
mov
fsts
sbb
loop
in
data16
pop
inc
in
hlt
pop
jbe
and
fistpll
inc
fwait
xchg
add
mov
jae
pop
inc
xlat
repnz
movsb
and
jnp
xchg
push
mov
dec
pop
test
mov
gs
jmp
jle
xchg
cmp
ret
add
int3
xor
or
mov
call
mov
scas
xchg
add
jns
shr
jge
int
out
decb
jb
sbb
jl
outsl
mov
adc
out
jo
pop
test
std
push
outsb
push
or
mov
test
push
pop
insl
push
push
loop
inc
and
out
paddb
push
sarb
jle
dec
lds
bound
nop
pusha
or
mov
xchg
mov
jbe
insl
mov
pop
dec
jne
xor
shl
sbb
or
aas
aaa
and
mov
stos
push
popa
cld
cs
ds
fstpl
cmp
cli
lock
jae
sti
cld
hlt
xor
test
fidivrl
aam
insb
sahf
aam
imul
jmp
shr
fsubrl
mov
mov
xchg
iret
mov
dec
mov
cli
mov
out
jp
inc
adc
les
test
loopne
push
jmp
cmp
fwait
ret
stos
mov
jnp
dec
js
xor
cmp
stos
movsb
push
fsubs
or
mov
and
cli
adcl
and
rcr
shll
rorb
pushf
push
xor
xor
cmpsl
jns
sub
dec
mov
das
mov
ret
dec
sub
jmp
pop
inc
xchg
repnz
aad
scas
pop
xor
shlb
xchg
orb
push
xchg
add
lcall
push
loop
xor
mov
jmp
push
movsb
jnp
shl
mov
cmpsl
gs
scas
lods
je
sbb
push
out
mov
lcall
mov
dec
daa
or
test
add
cs
test
inc
dec
lods
xlat
scas
setg
sbb
dec
adc
and
push
adc
data16
jmp
sbb
jp
aad
pop
or
rcr
cmc
popf
aas
loope
pop
xor
orps
mov
nop
cmp
jg
cmp
cmpsl
or
in
shr
cs
je
xchg
adc
andb
add
dec
lods
shlb
popl
scas
jg
jl
jns
loope
fidivrl
clc
sub
cmc
out
addb
adc
iret
pop
pop
movsl
jmp
test
dec
popa
sti
xor
jg
insb
clc
lods
stc
inc
dec
pop
and
cmp
adc
jecxz
fwait
aad
xchg
test
pop
or
inc
dec
paddw
or
icebp
lea
inc
repnz
stos
inc
fcomps
out
lds
call
jne
dec
xor
xchg
rclb
adc
jecxz
cmp
cmp
rclb
ja
mov
mov
std
mov
mov
insl
cmp
aad
stos
lahf
out
xor
push
mov
je
cmpsl
xor
jns
mov
xchg
dec
int3
fadds
fwait
incl
xchg
int3
pop
lret
les
mov
sbb
xchg
sub
out
bound
in
inc
xchg
sub
pushf
repnz
lret
das
scas
sbb
enter
mov
cmpsl
fwait
adc
xchg
cmpsl
mov
in
adc
dec
fwait
call
sbb
ss
leave
push
sbb
sbb
negb
jle
cmp
out
out
dec
hlt
pop
enter
dec
mov
test
je
push
and
cmp
adcb
jp,pn
jns
orl
int3
daa
push
jno
mov
out
or
in
and
rorb
jae
xlat
cmpsb
sar
inc
xor
push
xchg
ret
or
sarb
pop
adc
cmc
dec
sarl
shl
cmovno
mov
lods
dec
rclb
or
adc
rorl
fwait
push
adc
inc
ret
mov
rorl
mov
mov
mov
lds
aam
xor
and
cltd
cmp
add
fisttps
filds
sbb
adc
mov
adc
into
push
mov
scas
test
mov
xor
ror
mov
sub
dec
dec
clc
adc
sub
enter
rcrb
push
adc
sbb
movsl
fistpll
outsb
and
inc
cld
jnp
fnstcw
sbb
push
ss
insl
sub
inc
lock
add
lock
aaa
xchg
or
out
cmp
mov
pop
mov
lret
lock
js
push
aaa
fstps
dec
sbb
jle
sbb
es
loopne
jo
mov
orl
mov
in
mov
scas
mov
pop
cwtl
cmpsl
in
divl
mov
jge
fbld
mov
jne
cld
movsb
push
push
jbe
dec
gs
xor
icebp
aaa
xchg
ss
push
xchg
stos
jns
loop
adc
mov
jae
lea
pop
icebp
fs
mov
add
enter
in
decb
repz
jne
test
jmp
sti
adc
jl
ja
stos
mov
out
sub
xchg
jnp
in
idiv
mov
lods
adc
outsb
mov
mov
shr
mov
test
jge
mov
xor
lds
outsl
test
mov
inc
test
cld
mov
mov
push
cmp
loope
push
imul
push
mov
popa
fisttps
inc
sti
lret
xchg
lds
das
mov
jne
push
xchg
adc
movsl
adc
scas
cmp
dec
ljmp
cs
mov
xchg
cmp
adc
int3
pop
int
rcrb
lea
jns
xchg
pusha
scas
into
divl
aas
fcoml
dec
lods
shrb
insb
sbb
ret
scas
mov
sbb
jecxz
sarl
cmpsl
loop
xchg
fs
mov
push
push
arpl
dec
xchg
ret
mov
jp
lock
pop
leave
out
gs
out
ffree
sub
mov
out
pop
cmc
ret
mov
pop
push
fnsave
addr16
jle
xlat
pop
inc
in
xchg
sbb
pop
stc
loop
sub
mov
stos
icebp
arpl
ret
mov
aaa
or
add
pop
sub
add
and
push
mov
fstl
xchg
cmp
inc
jne
jbe
stos
adc
bound
push
pushf
mov
out
repz
pushf
sub
andl
add
push
loop
jnp
ds
rclb
cmp
ss
rol
sti
fildl
adc
pop
aas
scas
ja
push
pop
xor
mov
push
aad
fmull
negl
in
push
push
mov
xor
or
dec
jae
xor
pop
add
popa
mov
jne
mov
iret
orb
jae
in
inc
xchg
lea
adc
pop
push
ret
push
mov
or
xchg
nop
jmp
pop
add
sbb
or
push
sub
xchg
mov
clc
pop
cmpsb
adc
jnp
or
jae
lret
movsb
mov
shll
sub
xorb
push
xor
xchg
ret
xlat
adc
push
xor
rcrb
mov
stc
das
loopne
pusha
and
inc
sub
popf
mov
rcrb
jbe
lods
xor
push
sbb
sbb
pop
mov
int3
push
std
in
rorb
lret
push
popa
das
pop
mov
mov
mov
andb
stos
inc
sub
ljmp
sbb
mov
mov
dec
int
add
push
mov
es
cmp
adc
mov
mov
pushf
mov
mov
mov
xchg
jbe
push
leave
push
cmpsl
push
out
push
orb
loop
mov
decb
notl
out
jne
fisttpll
sub
aad
push
sub
cmp
daa
adc
mov
xchg
jl
jecxz
mov
das
or
insl
les
mov
jb
push
rorl
test
add
cmp
data16
jnp
xor
dec
nop
clc
insl
iret
pop
inc
data16
mov
out
into
ret
sarb
daa
imul
mov
push
jb
push
adc
mov
and
add
hlt
add
mov
jnp
xchg
cmp
mov
adc
inc
xchg
test
movsb
sub
pop
les
mov
test
int
xchg
rcrb
pop
das
adc
sti
fmulp
xchg
enter
js
shrl
mov
outsl
inc
lock
je
fisttpl
outsb
or
xor
jge
or
cmp
scas
ljmp
popf
outsl
inc
aas
cwtl
adc
out
sub
and
pop
mov
in
sbb
in
sbb
mov
test
adc
insl
loopne
xorb
in
stc
fcompl
mov
lds
lret
sti
outsb
xor
xchg
add
inc
enter
push
cli
push
jmp
test
jg
aam
hlt
dec
js
insb
scas
shr
pop
cmp
imul
js
test
shll
adc
mov
hlt
pop
dec
fidivl
or
xor
cs
adc
movsl
jb
jne
rcll
sbb
jmp
outsb
out
push
inc
imul
scas
fs
jno
les
mov
or
push
cmpsb
aas
dec
sahf
mov
xchg
cmp
call
cmp
ret
stc
mov
inc
cs
lods
jae
pop
dec
and
mov
sbb
loop
xor
pop
jb
stos
cmp
pop
loopne
adc
push
pop
mov
mov
out
aaa
dec
lds
int
cmp
lea
sub
and
rclb
sti
enter
inc
out
adcb
lea
lods
loope
mov
pop
das
cs
inc
or
pop
or
push
stc
mov
enter
pop
mov
pop
aad
pop
xchg
jnp
jb
jno
push
or
push
movsb
sub
test
mov
and
es
mov
enter
mov
mov
ljmp
mov
repnz
push
pop
mov
leave
lods
sub
sub
xor
lods
scas
jo
jmp
lcall
pop
out
mov
jae
rcrl
dec
int
sbb
add
pop
mov
fcompl
mov
or
sub
lods
xorps
mov
sbb
ja
sub
xor
jle
cmp
call
xchg
dec
test
add
shr
mov
les
xor
scas
push
xchg
mov
mov
mov
or
sbb
addr16
out
xor
push
xchg
mov
in
cltd
pusha
imul
out
pop
movsl
sbb
adcl
in
sub
mov
pop
ja
xchg
aaa
sbb
cmp
lds
aad
push
inc
xlat
mov
roll
mov
in
clc
pop
mov
sbb
jbe
out
push
insb
dec
push
bound
or
jnp
out
ja
imul
mov
mov
dec
fildl
jecxz
xor
mov
clc
dec
jnp
iret
leave
mov
shll
and
jno
movsl
pusha
and
pop
cmpsl
mov
pop
sti
das
cltd
jo
mov
out
mov
adc
scas
mov
arpl
pop
outsb
fisubl
mov
xorl
sbb
and
dec
push
or
push
add
or
dec
jle
or
push
out
jb
cmp
mov
or
movsl
dec
and
pop
xchg
jae
push
adc
or
cmp
lea
sbb
rorb
mov
xor
hlt
push
jle
lods
in
sub
mov
ds
shl
jne
xor
faddp
ljmp
jne
mov
scas
out
out
cmp
fcmovu
out
xor
jno
jno
ss
mov
inc
addl
xor
sti
pop
mov
mov
pop
jge
and
pop
inc
sahf
ss
ja
out
and
movsb
mov
mov
enter
loop
push
mov
scas
sahf
jg
sub
and
dec
adc
lds
sbb
inc
mov
cmp
xchg
ss
add
insl
cmp
mov
or
stos
jmp
mov
adc
jge
xor
adc
pop
lock
js
push
sbb
data16
xchg
jge
ljmp
jbe,pt
in
sti
sub
call
cld
sahf
xor
xchg
lea
dec
cmp
inc
cmp
add
pshufw
jmp
xor
mov
push
jns
or
push
ljmp
sbb
add
and
xchg
daa
sub
enter
jmp
pop
xor
cmp
mov
xor
imul
xchg
push
mov
dec
sbb
enter
fsubs
test
inc
pop
or
mov
xchg
sub
mov
daa
mov
jnp
jg
lods
fwait
scas
mov
popa
aaa
aaa
es
lcall
in
or
movsb
or
test
jl
dec
xchg
xchg
jle
push
cmp
imul
cmpsb
in
cld
dec
outsl
dec
dec
sub
imul
adc
jp
pop
lea
fidivrl
decb
jns
fistps
out
xor
in
lahf
adc
pop
subb
lret
xchg
sub
out
icebp
iret
pop
or
testb
dec
movl
adcl
loop
xchg
dec
divb
jl
dec
dec
mov
lret
sub
xchg
add
arpl
push
mov
mov
inc
cvtps2pi
xchg
ds
mov
iret
mov
leave
jl
adc
ja
jnp
pop
stos
push
sub
mov
pusha
sbb
xchg
sti
addr16
popa
std
dec
test
sbb
jecxz
pop
mov
sub
push
adc
jns
add
cs
and
inc
and
unpckhps
gs
clc
pop
cltd
loope
xor
call
andb
push
xchg
dec
movsb
lret
push
shlb
push
push
add
outsb
jno
loopne
adc
dec
pushf
test
mov
cmpsb
call
sub
mov
cmc
in
fistpll
cs
mov
ret
cmp
add
in
cmpsl
enter
sbb
lahf
push
dec
sub
jp
clc
jmp
mov
jg
enter
ss
cld
xchg
fmulp
xor
out
xor
ss
in
ljmp
rsqrtps
push
repnz
jge
jb
xor
push
mov
pop
dec
add
shl
das
xor
mov
addl
or
mov
sbb
dec
andb
dec
mov
stc
jnp
shlb
sti
sub
xchg
mov
rolb
jg
lds
inc
add
das
aad
mov
pop
ja
ss
add
imull
aaa
sub
enter
fwait
jmp
addr16
adc
stos
movsl
cmp
adc
imul
in
mov
add
je
mov
repnz
xchg
sahf
push
pop
push
mov
test
test
jge
adc
fimuls
xor
jmp
inc
mov
fimull
addl
xor
inc
xchg
adc
in
cmpb
or
cmp
std
aas
inc
in
ret
cmp
jnp
push
ret
out
test
test
sub
negl
pop
or
outsl
push
pushf
inc
mov
dec
mov
incl
jmp
andl
mov
sub
mov
jne
hlt
aad
jbe
jg
pushf
pop
stos
pop
jns
sbb
pop
or
lcall
enter
jmp
nop
jae
dec
ret
xchg
and
out
test
cmpsb
mov
dec
adc
pop
pushf
dec
or
and
dec
addr16
add
and
push
mov
xchg
sub
dec
add
xchg
cmc
scas
inc
movsb
stc
lea
iret
xor
das
jg
ja
filds
mov
stos
lock
sub
add
daa
or
insl
jnp
lea
andb
dec
mov
sbb
push
jl
hlt
push
lcall
cltd
in
cwtl
and
pop
ss
mov
xor
pop
loopne
lods
dec
arpl
ds
mov
in
fdivl
pop
mov
test
mov
mov
daa
pop
je
jmp
push
sub
jno
cs
lahf
xlat
sub
arpl
push
enter
mov
leave
push
pushf
sbb
test
xchg
stc
lds
test
ficoml
mov
clc
or
shll
stc
aas
gs
shlb
repz
outsl
sti
sbb
xor
xchg
xor
push
pop
daa
lret
dec
or
ds
push
xchg
imul
cmp
dec
loop
push
std
push
xlat
xchg
popa
popa
xchg
nop
idivb
cltd
clc
xor
testl
leave
test
fidivs
div
fadds
clc
or
sub
fildll
adc
call
xorl
aas
sub
insb
xor
push
lcall
test
test
xor
into
cltd
aad
aaa
jb
and
jne
scas
mov
add
pop
mov
adc
pop
inc
lods
pop
mov
add
sbb
jns
cmp
pop
lea
loopne
in
xchg
mov
out
lahf
ss
bound
out
pusha
adc
mov
cmpsb
ds
jg
daa
cmp
cmp
or
sub
mov
dec
xchg
sub
outsb
jge
xchg
sub
mov
mov
cli
xchg
movsb
cld
add
test
jmp
adc
pop
pop
push
pusha
mov
rcl
mov
in
jb
mov
loope
push
sbb
in
ja
mov
inc
out
imul
pop
out
mov
pop
mov
scas
insl
aam
push
pop
dec
jmp
cltd
outsl
call
pop
stos
daa
mov
shlb
repnz
insl
add
xchg
sbb
stos
bound
roll
push
sbb
outsb
and
pusha
popa
cmpsl
imul
inc
test
imul
loopne
jae
data16
out
xor
jge
repz
aad
lods
fsubs
lods
fimuls
push
push
pop
add
sub
xor
sbb
mov
shr
push
push
jns
mov
call
jmp
pop
push
xor
test
xor
cmp
imul
inc
pop
popf
jle
inc
mov
jp
cmp
add
std
movsb
mov
ja
cmp
ret
mov
stc
xchg
dec
lea
xor
je
ret
adc
xchg
aas
rcll
popa
mov
mov
loope
std
xchg
push
inc
push
outsb
repnz
mov
inc
and
mov
mulb
or
imul
mov
lret
or
fiadds
cld
push
das
leave
dec
clc
pop
cli
shll
arpl
fisubl
ljmp
lods
das
push
fcmovnb
test
cmp
jne
or
mov
data16
sbb
outsl
mov
xchg
addr16
dec
push
out
out
test
popf
xlat
hlt
add
inc
cwtl
cmp
outsl
jns
loop
daa
outsl
pop
cmc
mov
std
rcr
popf
int
scas
add
je
repnz
in
js
movsb
pop
pmulhuw
mov
out
lcall
or
shl
push
js
out
imul
lds
add
adc
insl
adc
in
sahf
jnp
std
cmpsl
jnp
jne
out
movsl
cmp
mov
cmc
jbe
in
and
mov
mull
pop
jno
dec
jl
dec
inc
dec
mov
dec
das
push
xchg
iret
sub
sbb
sub
scas
test
call
pop
adc
push
lods
mov
push
jb
pop
add
add
dec
and
cmp
xlat
pushf
rcrb
loop
cmp
loopne
jbe
in
mov
add
jb
popf
push
sahf
push
iret
sbb
cld
adc
scas
dec
stc
jp
or
mov
push
cmp
jge
mov
lods
push
xchg
cmp
mov
stos
pop
cmp
loop
leave
stos
jnp
lds
stos
mov
fldcw
pop
pop
xor
cmpsb
sbbl
mov
ret
add
add
mov
sahf
jns
xor
mov
lret
or
movsb
pop
push
jbe
cmpsb
sub
movsl
test
xlat
cltd
in
jns
xor
cmp
fsubrl
mov
adcb
jno
sbb
ds
jae
push
sarb
add
addr16
sbb
sub
cwtl
mov
aaa
jecxz
add
shl
cmpl
or
sub
dec
ja
mov
mov
mov
sbb
sahf
xor
andl
loope
insb
pop
jge
push
xor
and
xlat
scas
movsl
jg
ja
stc
sarb
std
bound
leave
dec
xchg
nop
jnp
gs
add
mov
push
ret
mul
push
jp
in
adc
scas
call
sbb
cmpsl
cltd
cld
insb
movsb
mov
xor
push
mov
call
jp
loope
pop
sub
rsqrtps
and
flds
sub
daa
pop
je
mov
ds
leave
fistl
mov
popf
cld
stos
xor
jne
or
out
cmp
out
shll
inc
xor
sub
push
mov
sbb
jmp
stos
sub
test
mov
sub
inc
ret
loopne
pop
testb
mov
ljmp
imul
out
lods
jp
decl
test
jbe
push
cs
xchg
xchg
lock
frstor
sbb
mov
pop
jge
imul
mov
shll
lock
aad
mov
int
mov
rcrl
scas
sbb
fimuls
adc
add
lds
in
movsb
fidivl
sti
pop
scas
jo
imul
pop
jno
xor
inc
sti
fcmovnbe
xchg
mov
add
xchg
sub
aas
dec
inc
dec
lahf
and
shlb
mov
mov
rol
popa
out
jo
xor
add
in
dec
jecxz
xchg
and
mov
or
in
pop
jo
add
outsb
push
jne
ja
mov
das
xor
mov
and
divl
mov
sub
mov
xchg
testl
xchg
loop
or
cmp
movsl
mov
and
subb
movl
mov
into
es
cli
clc
inc
push
xchg
daa
cld
mov
jmp
lods
out
arpl
in
add
or
sub
add
mov
mov
jnp
jo
jmp
pop
and
and
mov
mov
sbb
jno
jle
sbb
mov
mov
push
bound
mov
adc
xlat
inc
or
xchg
jb
push
je
mov
jno
cld
xor
sbb
push
inc
mov
in
mov
loope,pn
es
xor
mov
or
pushf
shll
shll
pushf
add
jl
into
xchg
cld
jno
and
jmp
fstpl
rcrb
lahf
jo
cmp
adc
js
xor
mov
push
mov
push
pop
adc
add
je
nop
lds
push
imul
or
iret
inc
xor
inc
adc
sbb
insb
add
lock
call
cmp
jge
outsl
jnp
jge
jae
dec
push
xchg
cmpsb
adc
xchg
popf
clc
lea
inc
mov
cmp
sbb
xor
rorl
sbb
mov
cmc
lcall
repz
add
lock
push
or
aaa
cld
lret
inc
das
push
fisubrs
lods
cmp
test
inc
sub
inc
imul
mov
mov
mov
pop
adc
fildl
in
cmc
leave
cmp
or
mov
call
pop
mov
mov
stc
sbb
fcompl
popa
std
scas
or
in
cld
xlat
push
xchg
clc
jecxz
inc
lahf
call
cmp
adc
push
sbb
mov
jns
ss
stos
popa
or
jb
xchg
xchg
and
cmpsl
lahf
fstl
push
or
adc
inc
and
mov
repz
xor
daa
or
mov
bound
adc
sbb
repz
into
xchg
repnz
jge,pt
xchg
mov
sub
sbb
or
movsl
adc
and
negl
mov
inc
push
imul
pop
int
mov
and
mull
loop
adc
rcrl
dec
movsl
fwait
add
icebp
lds
arpl
hlt
push
leave
mov
inc
enter
cmp
loopne
xor
jns
mov
dec
or
pop
cmp
and
fnsave
pop
xchg
sub
mov
mov
mov
scas
lds
xchg
popa
mov
insb
jl
and
sarb
xchg
sbb
mov
repz
mov
xchg
cmp
es
fdiv
pop
mov
mov
xor
jo
push
sbb
stc
jl
mov
or
ret
xor
mov
data16
ffree
cmp
adc
mov
cmpsl
pop
sub
mov
cmp
arpl
add
into
fldcw
pushf
xor
mov
movsb
xchg
in
mov
mov
insb
sbb
pusha
push
mov
and
jae
mov
dec
fwait
xor
decb
cwtl
sub
adc
rclb
add
rorl
dec
nop
dec
pop
add
push
or
nop
in
pop
or
test
inc
pop
mov
repz
xchg
cltd
adc
adc
loop
sbb
cmpsb
push
jmp
enter
xchg
test
std
mov
push
out
pop
dec
and
mov
insl
lcall
aaa
sbb
xchg
pop
int3
leave
mov
addr16
daa
adc
repnz
arpl
cmpsl
mov
jbe
and
sbb
notb
stc
push
adc
xchg
mov
push
push
movsb
xor
jns
or
hlt
lret
mov
xchg
lea
mov
rcr
jmp
movsl
cs
out
int
lods
sub
shrl
or
mov
cmp
aaa
pop
jb
aas
outsl
xchg
clc
int3
xchg
cli
cmp
adc
das
fstpl
ljmp
sbb
call
mov
jmp
pop
sahf
cmp
dec
pop
pop
cwtl
jl
mov
adc
imul
dec
imul
jl
nop
mov
and
ret
pop
and
mov
adc
loop
add
aas
mov
jecxz
fidivl
sti
stc
out
lds
xor
mov
xor
cmp
sbb
ljmp
mov
hlt
add
ljmp
mov
arpl
aaa
nop
push
in
ja
jle
repz
aad
xorps
xchg
cmpsl
or
adc
dec
mov
or
and
sti
and
or
cmpsl
adc
jo
je
ss
mov
add
fcomps
cmp
adc
push
pop
rcrl
inc
int
out
in
xchg
clc
sbb
fsubs
into
fidivrl
dec
mov
jns
sbb
test
and
cwtl
and
add
test
pop
loopne
sub
mov
push
jne
xorb
movsl
jecxz
inc
fisubrs
sub
pusha
add
or
sub
popa
cmc
out
add
lods
nop
sub
xor
dec
cld
push
sti
movsb
xor
out
icebp
stc
push
adc
adc
cmpsb
or
push
bound
cmc
imul
push
sbb
arpl
or
jl
repnz
ds
in
sbb
xor
arpl
cltd
cmp
dec
push
fs
mov
dec
mov
out
mov
adcl
into
push
icebp
sbbl
cs
in
sub
pop
adc
push
cmp
mov
std
out
aam
into
and
adc
sbb
out
mov
popa
pop
fcoms
mov
push
popf
aas
jo
cmp
and
lcall
pop
or
jle
push
xor
dec
ds
mov
mov
push
jle
dec
je
pusha
scas
xchg
and
mov
and
pushf
cld
andb
mov
cmpsl
push
mov
std
test
shrl
sub
pop
jmp
movsb
loop
add
mov
and
xchg
out
cltd
jno
fdiv
call
rorl
xor
das
jle
push
test
xchg
xchg
xlat
addr16
mov
jp
sahf
push
add
pop
mov
sub
je
push
or
xlat
lock
repnz
inc
sti
int3
stc
jb
jae
pop
xchg
gs
jle
out
hlt
jns
test
dec
mov
mov
jle
aaa
inc
add
and
ss
movsb
stos
push
lret
cmp
mov
sbb
sahf
test
fisttps
mov
cmpsl
mov
outsb
or
testb
dec
ljmp
pop
push
or
xchg
imul
arpl
xlat
jno
pop
add
hlt
lret
push
jnp
pusha
mov
stos
or
insb
sub
pop
fstps
shll
test
add
jno
add
repz
mov
and
or
ja
aas
add
push
sbb
cmp
push
or
or
sbb
imulb
jl
or
dec
fwait
sub
or
aaa
aam
addr16
les
out
enter
push
out
xor
mulb
sbb
cmp
adc
fs
scas
fnsave
dec
pushf
inc
movsb
and
cmpsb
cld
jecxz
and
in
faddl
sbb
cmp
mov
mov
mov
inc
stc
cmc
ss
fidivl
push
lock
pop
popf
ss
mov
hlt
aad
push
mov
dec
mov
pop
xor
lret
and
in
cmp
pop
sub
cmpsb
mov
jnp
pop
xor
mov
push
movsl
mov
mov
movsl
outsl
pop
test
insl
push
push
repnz
ficompl
add
lea
hlt
hlt
inc
cli
jmp
outsb
lcall
iret
pop
cmpsl
cmp
jb
inc
mov
popf
sub
outsb
xchg
das
mov
insb
mov
push
pop
fisttpl
mov
pushf
jg
dec
xlat
xchg
shlb
stos
mov
pop
and
mov
push
jae
loop
adc
fnstenv
xchg
push
push
shlb
fldl
jg
addr16
popa
xor
jbe
scas
bound
jbe
popa
out
pop
adc
sbb
loopne
push
repnz
cmc
orl
sbb
pop
fcmovnb
and
adc
ljmp
push
popf
xchg
test
adc
inc
fabs
cmp
insb
lea
dec
xor
cmp
pop
lret
jmp
mov
rorl
inc
adc
push
or
das
data16
popa
out
mov
mov
mov
iret
out
pop
pusha
rorb
xchg
or
sti
lret
fisubl
out
adc
mov
xchg
jge
sbb
dec
subl
sub
xlat
mov
push
mov
pushf
imul
xor
mov
sub
dec
adc
push
inc
sub
fs
xchg
sbb
inc
aad
dec
push
mov
push
inc
scas
adc
loop
scas
fwait
xor
loope
pop
sub
lock
pop
or
adc
pop
mov
test
movsl
test
test
mov
cmp
push
hlt
pop
xchg
pop
mov
cmp
lret
arpl
cmp
hlt
rcrl
int
cwtl
sbb
add
addr16
inc
int3
insl
pop
pop
hlt
out
inc
dec
and
movsb
jb
or
sbb
mov
cltd
gs
cmp
shlb
pop
cmp
outsb
cmp
and
pop
pop
sti
dec
rcrb
jl
mov
lret
push
jnp
adc
xor
jmp
mov
mov
loope
shll
decb
pushf
stc
ja
daa
mov
pushf
pop
push
xor
cmc
push
mov
xchg
mov
xor
sub
cmpsl
les
lods
xchg
fs
and
dec
push
hlt
out
ljmp
adc
leave
pop
call
cs
pop
scas
sbb
rcrl
push
xchg
and
ret
sar
inc
lahf
shlb
outsl
push
in
incl
cli
ds
out
and
mov
popf
sub
add
lcall
or
int
pop
cmp
inc
movsl
popf
repnz
adc
push
xchg
sbb
cmp
push
fidivrs
mov
ja
push
mov
and
icebp
inc
or
popa
hlt
mov
push
xchg
cmp
stos
fsubrs
nop
lret
outsb
inc
push
movsw
mov
pop
push
mov
movsl
inc
loopne
xlat
mov
mov
sub
call
iret
push
es
ds
mov
sub
cmp
loop
cmpsb
sub
mov
fs
push
in
xor
add
mov
out
clc
fsubl
es
test
dec
mov
jo
call
xchg
fmuls
xchg
xlat
jns
sahf
cmpsb
jbe
lds
sahf
repz
imul
cld
and
and
daa
popf
out
sbb
xchg
add
mov
or
jle
hlt
stos
or
xchg
into
xor
add
aas
pop
jb
stos
pop
aaa
ret
push
pusha
cmc
pop
push
filds
mov
adc
out
stos
fimull
xchg
inc
int
enter
negb
dec
arpl
sbb
ror
xchg
lock
pop
fcomi
dec
or
sub
mov
dec
rclb
inc
jle
inc
inc
mov
hlt
and
cmp
adc
stc
out
jge
add
inc
pop
add
test
xor
jg
fsubrs
enter
sbb
pop
jae
jp
pop
imul
jns
and
fwait
mov
cli
mov
mov
insl
sub
outsb
xchg
xchg
adc
push
lds
jns
xchg
ja
mov
dec
shll
xchg
clc
cwtl
aas
mov
lock
jp
xor
ja
jne
cmp
popl
mov
mov
and
in
psubsw
pusha
mov
sub
pop
lahf
jbe
test
jecxz
daa
mov
cmc
sarl
dec
xchg
stos
bound
fs
push
mov
insl
pop
sub
and
lods
jmp
sub
jmp
aaa
mov
aas
sti
and
aas
mov
and
xchg
std
sub
pop
std
pusha
jo
in
std
inc
jle
in
insl
ret
pop
mulb
dec
hlt
xor
mov
adc
add
xchg
jecxz
and
pop
sub
push
movsb
xchg
ja
enter
negb
cmc
lea
push
mov
std
mov
les
rolb
or
push
movsl
stos
pusha
test
mov
fistps
and
cmp
in
test
enter
push
or
push
in
jl
cmpsl
jb
pop
int
mov
inc
or
or
push
cmp
sbb
add
push
out
cmp
cwtl
arpl
lahf
mov
stc
xchg
mov
cmp
mov
scas
inc
jae
mov
mov
sub
hlt
sbb
loope
cli
xchg
sbbb
sbb
sub
xor
loope
dec
sbb
xchg
fnsave
les
jnp
push
stos
jb
push
aaa
jno
sarb
mov
pop
adc
imul
ja
xchg
jns
xchg
out
xchg
shlb
adc
je
pop
mov
sub
repz
sahf
movsl
nop
outsl
mov
cld
std
cmc
pop
lret
jb
mov
xchg
jb
nop
shrb
push
inc
pop
in
dec
dec
cmpsb
adc
dec
pop
push
inc
aam
and
aad
sub
mov
loopne
or
pop
mov
rcl
popf
pop
data16
adc
pop
lret
daa
lcall
add
in
jmp
stos
or
jmp
scas
aaa
out
rcl
xchg
xchg
mov
xchg
jl
sub
out
dec
sub
push
add
jno
dec
test
es
leave
je
inc
sub
cmpsl
loop
daa
add
mov
lock
cltd
mov
js
pop
push
sub
push
mov
xor
std
fstps
inc
mov
cli
pop
push
cld
cmp
adc
stos
sub
push
lahf
notl
js
add
sbb
cmp
pop
into
scas
inc
pop
mov
mov
push
sbb
add
dec
cmp
clc
or
add
movzbl
sub
lahf
mov
or
ds
fnstsw
imul
repnz
pop
jne
hlt
stc
and
and
lds
xchg
xor
pop
andb
mov
sub
xchg
pop
adcb
cmp
xchg
mov
dec
dec
jne
fs
shlb
std
lea
adc
jae
mov
addr16
sub
jmp
fldcw
mov
inc
shlb
xor
inc
mov
pop
jae
data16
sub
iret
pop
add
push
mov
or
push
outsb
inc
sbb
movl
shll
scas
mov
fwait
cmp
or
loopne
cltd
shr
outsl
dec
and
ret
sbb
push
mov
mov
ficoml
push
xor
cmp
inc
sbb
jmp
mov
outsl
and
aaa
les
fs
lahf
in
dec
daa
sar
sbb
add
jg
call
jne
jg
mov
pop
push
add
mov
pusha
jmp
or
jbe
iret
mov
fsubr
loop
fldenv
jae
pop
outsb
mov
pusha
into
fwait
dec
es
push
cmp
lods
notl
inc
pop
into
iret
test
lret
sahf
les
loope
push
fdivrl
xchg
xchg
test
mov
lret
cmp
dec
cmpb
push
xor
js
xchg
or
mov
jg
fcomi
sbb
mov
fistl
ret
lods
scas
jb
jo
lock
xchg
fistl
pavgb
jge
lock
lcall
cwtl
dec
ss
jo
loope
mov
pop
cmp
jo
cmp
popa
cli
sbb
jl,pt
in
push
cmpsl
data16
rcl
push
imul
xor
adc
or
fdiv
les
in
xor
cmpsb
mov
or
jmp
mov
inc
into
xchg
loopnew
mov
aas
fisttps
cmp
mov
mov
sti
testl
or
push
bound
lods
das
xchg
cmp
and
inc
scas
into
and
sub
sarl
push
xorl
popa
fisttpl
imul
test
mov
sbb
jg
fisubl
jg
xor
std
bound
add
xchg
popf
rcr
cmp
push
in
fisubs
jne
and
shll
lods
push
mov
jle
add
inc
lahf
sahf
fisttps
cmpsl
cmpl
mov
mov
inc
imul
nop
cs
and
mov
mov
out
ja
jg
sbb
dec
sub
inc
fisubl
movsl
ss
adc
sub
pushf
mov
loopne
dec
jbe
sub
lahf
daa
push
mov
sahf
jb
arpl
jg
mov
or
sub
pop
sahf
xchg
aam
mov
out
dec
xchg
gs
movsb
sub
int3
rcrl
sti
scas
shll
fs
mov
addr16
sbb
push
adc
jg
cld
fimull
int3
out
jne
inc
movsb
cmp
jp
xor
cmc
mov
mov
mov
mov
inc
mov
addr16
jbe
cmp
push
push
clc
dec
scas
in
xchg
shll
lretw
aaa
sbb
out
mov
adc
sbb
arpl
mov
mov
mov
in
and
push
mov
pop
test
testb
mov
xchg
int
lret
leave
sbb
xchg
xor
sbb
mov
lret
jmp
xchg
xlat
lret
add
adc
test
out
add
hlt
in
fwait
xchg
push
inc
aas
jb
mov
add
xorb
sti
pop
clc
xor
xor
rcrl
push
and
add
dec
xor
jb
or
jle
leave
and
ret
lods
daa
sbb
iret
gs
movsl
adc
mov
mov
inc
sarb
lock
add
sahf
sbb
ret
and
ret
cmp
lret
and
xchg
movb
outsl
mov
push
jge
icebp
cld
push
dec
push
mov
test
adc
add
addr16
pop
aaa
push
push
mov
ljmp
pop
jl
rorb
push
adc
out
and
inc
rcll
ficoml
rcrl
fidivrl
popf
xchg
testb
repz
push
push
cs
dec
cmpsl
jge
insl
mov
pusha
mov
dec
mov
in
stos
push
imul
rol
jecxz
mov
mov
in
dec
xchg
repnz
leave
adc
pop
and
cmpsb
sub
cli
mov
push
shrb
mov
pop
cs
imull
scas
xor
out
and
mov
icebp
cmpb
insb
aas
daa
sbb
in
pop
mov
std
out
imul
inc
fs
add
inc
push
and
push
mov
pop
xchg
in
jbe
sahf
adc
jg
adc
testl
movsl
pminub
adc
pop
shl
xchg
test
jg
adc
inc
mov
add
dec
mov
jl
mov
insl
add
sub
pop
ja
pop
stc
adc
fmuls
cmpsl
rcrl
fiadds
and
jge
jle
scas
sub
fwait
dec
stc
mov
xchg
adc
out
fmuls
and
or
sub
dec
add
cmc
out
mov
xor
sub
sti
dec
popa
mov
mov
or
push
push
inc
and
xchg
xchg
aad
mov
mov
jg
cmp
scas
cvtdq2ps
cs
test
dec
movsb
xchg
incl
pusha
fdivp
ret
and
insl
sub
out
outsl
mov
pop
xchg
out
lcall
xchg
inc
les
jp
mov
movsl
or
xor
sbb
scas
pop
shrl
shlb
cmp
mov
test
sbb
jecxz
cmp
mov
jne
push
mov
or
sahf
push
sbb
shrl
std
icebp
xor
lds
mov
fmul
roll
jo
or
gs
leave
aam
mov
cmp
sub
add
jle
jl
insl
push
popa
jb
sbb
out
ss
sahf
sti
pushf
adc
popf
cs
iret
js
mov
xchg
cmc
fsubs
cmpsb
aas
sbb
stos
mov
add
adc
push
mov
lds
mov
loop
xchg
add
sbb
pop
lods
add
push
aam
div
outsl
pop
insb
outsb
dec
cmpsb
jno
cmp
sbb
insb
jnp
sbb
mov
xchg
inc
sub
mov
cs
sub
or
add
sub
mov
fwait
sbb
xchg
add
out
subb
xchg
mov
aad
jle
pop
iret
dec
xor
pop
xchg
mov
xchg
lret
in
popa
sub
rolb
pop
and
rorl
aam
jg
add
mov
loop
mov
icebp
das
sahf
mov
mov
pop
push
gs
call
jecxz
inc
add
int
insl
imul
popf
int3
mov
mov
int3
add
mov
fildl
pop
inc
ja
jp
xchg
daa
inc
out
mov
inc
and
scas
mov
subl
call
mov
mov
stos
cltd
push
sahf
insl
out
pmaddwd
push
inc
andl
or
inc
xchg
bound
cmovg
fs
loope
and
scas
stos
cmpsl
mov
les
orl
ret
insb
aaa
fstps
inc
mov
lcall
repnz
mov
dec
dec
cli
jae
sbb
inc
pop
out
sub
jge
test
inc
push
xchg
stos
and
pop
popa
sub
loope
nop
lea
adc
imul
cmpsb
hlt
cmp
pop
rolb
pop
out
push
mov
orl
jmp
iret
ja
sbb
incb
imul
loope
nop
and
stc
popf
sbb
in
rcll
mov
std
dec
js
mov
xlat
inc
iret
add
es
in
ss
popf
push
inc
cltd
cmpsl
leave
lock
xor
adc
ret
mov
lods
jo
push
pop
pop
and
cli
inc
mov
xchg
mov
loope
jno
addl
mov
popa
ja
aad
cs
scas
ret
ret
popf
jb
inc
das
std
cmpl
xor
push
dec
out
aas
call
in
dec
push
insb
pop
fnstenv
adc
daa
ljmp
pop
mov
insb
fimuls
inc
sahf
jnp
insb
les
in
xor
ja
dec
jmp
sub
mov
insb
pop
jp
push
inc
jns
lret
imul
sub
sub
xchg
out
mov
push
ss
lods
push
test
jne
jbe
inc
sbb
stc
movsb
and
mov
mov
inc
sub
push
adc
push
orl
or
jp
mov
add
adc
rcl
gs
sarb
in
push
adc
pushf
testl
mov
and
pop
xchg
scas
push
jg
pop
idivb
and
push
das
sub
cltd
mov
movsl
psubb
addl
xchg
dec
inc
sbb
imul
aad
adc
xor
jecxz
out
ja
test
mov
in
pop
adc
pop
jle
in
add
dec
call
mov
fnsave
jnp
orb
xor
inc
dec
sahf
and
test
lock
popl
loop
xchg
sbb
and
mov
lret
aam
xchg
adcl
movsl
stos
jbe
cmc
jmp
dec
loopne
mov
and
xchg
mov
test
mov
fwait
stos
and
mov
push
jne
pushf
pop
popa
es
divl
push
xchg
dec
clc
pop
mov
iret
push
lods
aaa
inc
mov
or
dec
jnp
xchg
fwait
adc
cmp
in
cmpsb
iret
add
mov
mov
data16
sbb
jno
mov
popf
sub
outsl
lret
dec
inc
mov
test
cmp
cmpsl
add
pop
jmp
sbb
mov
sub
test
rcr
and
mov
scas
nop
aas
ljmp
imul
iret
shl
fwait
adc
push
cmp
mov
iret
jno
pusha
adc
pushf
daa
clc
cmc
fldlg2
jnp
imul
andl
outsl
div
mov
inc
repz
inc
ficoml
pop
push
cmpsb
sub
xchg
and
shll
and
pusha
push
jle
lods
add
mov
push
pop
subb
mov
pop
clc
dec
jne
andl
pop
mov
popa
subl
and
movntq
push
cmp
into
movsb
mov
ss
jl
xchg
or
inc
mov
aad
icebp
in
pop
mov
es
xchg
push
jae
icebp
ror
imul
out
ret
xor
js
sahf
js
stos
sar
add
jb
dec
mov
sbb
dec
outsl
gs
push
ds
movsl
mov
decb
popf
cmp
sub
push
ret
sbb
jb
jb
add
in
and
pop
ficoml
out
test
jno
mov
sub
xchg
mov
imul
arpl
call
gs
scas
jne
clc
pop
mov
sub
pop
xorb
sahf
fcoml
cmp
in
rorb
xor
or
xchg
xor
pop
sbb
data16
in
rcl
cld
pop
cmpsb
repnz
add
dec
or
pop
cmp
add
pop
adc
mov
inc
mov
imul
cwtl
in
or
adc
leave
pop
jbe
stos
sub
sbb
jmp
jle
lahf
mov
mov
sbb
cmp
dec
add
mov
icebp
mov
fimull
or
cmp
xor
loop
sbb
mov
aas
inc
cwtl
idivb
sti
ret
add
sbb
dec
icebp
mov
lods
cmpxchg
xchg
cwtl
mov
jne
jecxz
inc
insl
pop
mov
pusha
dec
xor
das
push
sti
jae
leave
mov
out
jnp
repz
pop
pop
lods
push
je
daa
inc
aad
fs
cmp
shl
jne
jno
lcall
and
push
hlt
pop
pop
mov
xor
jb
mov
dec
int3
es
ds
xlat
pushf
imul
and
pop
adc
jmp
xor
repnz
cs
xchg
sub
clc
add
aad
xor
data16
xchg
sub
ljmp
dec
gs
out
shlb
test
jns
rcrl
pushf
inc
add
sbb
jmp
mov
xchg
xchg
push
in
push
pop
repnz
in
mov
mov
dec
cs
pop
iret
sti
in
push
cld
xchg
adc
inc
jnp
fstps
int
pop
decb
cmp
das
int
fsubs
jbe
sbb
cmpsb
scas
stos
mov
or
xchg
push
dec
fimuls
dec
nop
inc
or
or
loope
adc
xchg
aas
sub
push
inc
in
test
xchg
pop
lret
mov
or
sbb
in
jp
xchg
aaa
aaa
pop
or
cwtl
pmulhw
cmpsl
mov
movsb
add
push
mov
outsb
inc
shlb
aas
bound
stc
jge
inc
xor
test
push
jnp
test
int
mov
cs
pop
mov
mov
cs
enter
mov
mov
mov
vpunpcklqdq
test
push
add
pop
push
leave
sbb
cmp
test
push
js
xor
imulb
loope
insl
jae
cmpl
lret
mov
sub
mov
jbe
push
mov
leave
mov
and
dec
insb
pop
in
pop
movaps
nop
xchg
or
stos
xor
rclb
pop
cmc
inc
xchg
out
lds
rcr
test
mov
sub
mov
cld
and
push
mov
mov
mov
and
iret
mov
fistps
pusha
jo
inc
fadd
movsb
scas
mov
sub
cmpsb
dec
mov
bound
out
outsl
or
mov
fistpll
xor
out
adc
push
out
mov
ds
sbb
xor
and
adc
sar
jo
pop
pop
dec
push
loop
mov
sbb
jle
xor
pop
cmp
cwtl
jnp
sbb
lcall
xchg
pop
lahf
jl
pop
xchg
pop
sbb
out
lret
adcb
jne
xchg
push
xor
lods
sahf
std
cmp
cmp
decl
outsb
in
gs
jbe
and
fstpt
mov
adc
xor
mov
add
add
jmp
jae
inc
mov
movb
adc
sti
test
adc
repz
dec
stos
popa
xlat
sbb
stos
test
test
xchg
mov
mov
je
inc
adc
int3
jno
add
jle
adcw
add
leave
mov
int3
sbb
out
dec
cli
out
push
xchg
addr16
sbb
int3
inc
fwait
mov
mov
jg
jbe
pop
cmc
and
mov
ss
cmc
jns
xor
adc
jle
mov
sarb
or
fdivrl
cld
bound
jmp
fmul
push
rolb
jns
loopne
ja
adc
adc
test
push
ret
pop
clc
cmp
xor
cltd
push
xchg
sub
mov
dec
mov
lock
and
xor
mov
pushf
pushf
cmc
loopne
pop
xchg
inc
aad
xchg
mov
subl
imul
mov
fstpt
sahf
clc
cwtl
xchg
cmpsl
repz
mov
xor
xchg
rcll
das
repnz
and
test
mov
lcall
call
xlat
and
dec
add
test
mov
shlb
je
sbb
les
movsb
shl
lds
movsb
sbb
mov
push
mov
loop
popa
inc
fstl
call
mov
cwtl
jg
stos
je
sbb
and
into
sub
movsl
push
rorl
adc
add
jae
adc
rolb
fwait
jno
jbe
push
addr16
adc
in
daa
push
mov
mov
lods
lds
repz
aaa
in
imul
dec
test
sub
sub
jle
mov
aad
stc
dec
mov
or
loope
sub
outsl
xchg
mov
cmc
sub
cltd
dec
cmp
lahf
shrl
fsubs
incl
insb
jecxz
ja
cmp
or
out
sti
mov
add
push
xchg
scas
push
loop
and
xor
xchg
and
mov
xchg
popf
add
mov
xor
and
dec
decb
sbb
sub
scas
fisttps
gs
sub
lret
inc
sbb
and
pop
sbb
leave
insb
mov
in
enter
inc
inc
pop
mov
inc
jle
add
or
iret
sub
jbe
or
out
sub
sbb
jbe
arpl
leave
xor
pusha
int
adc
add
in
out
lret
jns
lahf
add
pop
mov
sbb
movsb
call
subl
add
xor
jp
pop
mov
dec
iret
inc
or
inc
pushf
adcb
movsb
pop
pusha
jne
jns
mov
pop
mov
and
add
lds
iret
xor
pusha
aam
and
xcrypt-ctr
cmpsl
sbb
in
push
jge
lds
test
mov
lods
stc
pop
mov
jecxz
add
xchg
stos
pop
cmpsb
cmp
push
inc
jns
add
in
ss
or
arpl
cmp
sub
outsl
adc
sub
sti
js
jecxz
cwtl
dec
cmp
or
sub
add
cmp
jnp
pop
cmp
mov
xchg
jmp
cld
inc
in
mov
dec
repz
mov
aaa
repnz
sti
adc
loop
adcl
add
cltd
mov
mov
pop
mov
cmp
mov
mov
sub
cmp
stc
inc
and
je
scas
jecxz
ljmp
inc
js
adc
lock
aam
and
xchg
icebp
adc
mov
int3
sbb
lcall
add
orl
in
cmpsl
in
mov
mov
ja
jecxz
mov
push
lret
dec
enter
cmp
push
sub
imul
adc
loope
push
mov
pop
outsl
xchg
and
lods
pusha
out
stc
mov
sti
mov
imul
rorl
cvttps2pi
ss
imul
and
lret
lret
scas
mov
ficoms
js
hlt
in
fwait
push
inc
xor
idivl
sbb
or
into
xor
dec
dec
adc
fnstenv
push
cmc
adc
mov
xlat
out
jle
xchg
cld
sub
and
push
jmp
dec
add
jno
lods
popl
xor
cwtl
and
sbb
mov
cld
icebp
in
lret
adc
mov
orl
lcall
xlat
or
sub
out
shl
outsl
and
and
pop
dec
xchg
inc
add
sbb
insl
in
push
push
sub
cmp
in
mov
push
mov
fisubrl
cs
mov
outsl
or
jmp
loopne
aam
inc
shrb
inc
xor
outsb
mov
iret
cld
bound
stos
adc
mov
push
mov
outsb
rorl
outsb
shlb
sahf
in
inc
stos
test
fistps
lods
aam
imul
or
xchg
add
loopne
push
add
shll
adc
nop
xchg
clc
push
orb
or
xchg
mov
add
shlb
fisubrs
xor
xchg
add
out
int
jecxz
mov
shll
stc
jl
dec
int
je
loop
sbb
push
addr16
test
cmp
addr16
adc
fs
push
or
jg
lahf
aas
fidivs
push
sahf
add
mov
subl
xchg
out
int3
lds
nop
test
jae
push
inc
mov
dec
jo
rep
push
mov
dec
loopne
pusha
fistl
mov
pop
sahf
push
push
push
cmc
adc
out
daa
aad
or
mov
decb
popf
subl
cmpsb
fadd
push
pop
outsb
jb
loope
mov
cltd
ss
in
sbb
push
xchg
iret
cmp
jne
fistpll
add
inc
call
mov
jle
movsb
daa
push
xchg
sub
add
fdivr
pop
scas
xchg
xchg
push
inc
popa
mov
sbb
sub
xchg
jbe
add
inc
or
fs
loop
cmp
add
mov
mov
test
je
push
mov
sbb
xor
add
cwtl
gs
push
lods
fcmovb
lods
mov
sbb
push
inc
sbb
jge
push
mov
hlt
in
bound
call
sbb
dec
ljmp
in
sub
jns
jne
mov
pop
inc
dec
cmp
push
pop
arpl
jmp
cmp
shlb
fcompl
dec
sti
inc
pop
std
fs
xor
aam
out
inc
int3
pop
sbb
sub
lock
lods
fmuls
sbb
fsubrl
and
into
pop
push
or
dec
aas
scas
jbe
js
icebp
cmp
rcrl
sbb
aad
jmp
jle
jb
in
jnp
adc
leave
push
jns
jno
xor
repz
daa
add
cmpsb
xor
xchg
scas
or
aam
and
sub
or
jne
mov
test
and
mov
sbb
inc
mov
inc
notl
lahf
mov
mov
js
mov
jb
mov
stos
inc
cltd
sbb
scas
leave
jne
cmp
mov
xor
push
inc
mov
add
pop
and
pop
enter
ret
push
and
aas
dec
push
pop
push
addl
pop
mov
in
mov
sub
jl
sbb
notl
imul
and
mov
cmc
testl
mov
pop
cmc
loop
push
ds
xchg
mov
test
inc
das
add
ja
inc
push
mov
push
test
pusha
fimuls
add
notl
mov
cli
add
sbb
jge
fidivs
mov
rorb
pop
cmp
mov
mov
pop
mov
push
inc
imul
xor
scas
and
and
lret
push
xor
mov
and
loop
mov
or
fdivl
mov
shrb
cmp
mov
mov
fisubs
adc
mov
push
into
and
pop
push
ljmp
imull
cmp
add
jae
enter
adc
imull
inc
cmp
cmpsl
pusha
cli
aam
mov
add
test
ffreep
cmp
inc
jl
ficompl
mov
xchg
xor
mov
push
dec
or
sub
adc
aam
jge
push
push
int
push
cmp
mov
add
add
mov
test
in
fiaddl
test
dec
add
cmp
mov
cmp
jae
jnp
xchg
jbe
mov
rcpps
jecxz
decl
cwtl
cmpsl
push
arpl
jmp
loopne
adc
mov
test
pop
icebp
dec
outsl
das
cltd
push
loopne
or
mov
insb
test
popf
mov
iret
hlt
ss
mov
in
ljmp
inc
imul
nop
mov
pop
mov
pop
hlt
in
push
inc
lret
aad
scas
pop
dec
and
cld
jno
cld
idivb
insl
fmulp
les
mov
jno
ds
pop
out
mov
pop
arpl
loope
movsb
pop
addr16
cmpsl
xchg
mov
loopne
adc
test
mov
je
or
xchg
push
rcl
mov
mov
clc
jmp
mov
sbb
lret
fadds
mov
mov
fldt
stos
sbb
jne
scas
xor
jns
jno
mov
mov
mov
movsl
add
jecxz
fsubl
sbb
ss
xor
je
mov
cmp
nop
jnp
movsb
push
call
add
inc
inc
add
mov
pop
sbb
dec
mov
mov
jns
into
in
inc
loopne
mov
inc
cmp
lods
lods
sar
pop
or
and
mov
jo
dec
call
xchg
pop
fisttpll
lret
xchg
mov
push
cmp
fmuls
lret
insl
push
lds
ror
lods
into
inc
mov
add
xor
jp
pop
daa
popa
lds
mov
cmp
or
xchg
aaa
inc
adc
pop
pop
cmpsb
xor
out
in
fidivrs
xor
fnstcw
dec
mov
push
daa
push
fsubrs
aad
mov
sbb
jmp
mov
jo
sbb
adc
or
jb
pop
inc
mov
mov
lret
cmpsb
pushf
repnz
insl
mov
aaa
cmp
inc
rdpmc
fsubl
pop
mov
xchg
stos
pop
nop
pushf
btl
mov
xor
push
push
push
lcall
jmp
inc
idivl
sbb
and
mov
inc
ret
jmp
push
sub
mov
cltd
mov
lea
mov
mov
imul
mov
addr16
cld
pop
or
iret
cmp
icebp
and
or
mov
inc
fwait
sub
fldt
dec
or
loopne
jg
jno
adc
xchg
gs
das
data16
in
loopne
or
xchg
mov
add
push
push
jle
add
mov
repnz
pop
adc
scas
mov
mov
and
rol
lret
loopne
cwtl
mov
ss
adc
jg
mov
jp
push
inc
add
bound
cmp
add
icebp
mov
loope
adc
fiadds
jecxz
fstl
lahf
lcall
ret
and
enter
push
xchg
inc
mov
movsb
push
inc
push
xchg
ss
addr16
cbtw
imul
pop
out
icebp
push
cmp
push
mov
fcmove
in
rcll
push
sti
outsb
testb
mov
xchg
enter
loopne
add
mov
sbb
pop
addb
orl
icebp
inc
mov
jp
push
jne
jnp
push
out
cwtl
call
and
lahf
popf
cld
sbb
push
jl
dec
lret
testl
mov
fdivrl
add
adc
lret
lock
inc
sahf
lods
ljmp
mov
mov
test
inc
ljmp
arpl
push
fnstcw
lret
jae
push
add
adc
push
xor
push
test
mov
ret
mov
out
push
pop
ret
cmp
add
std
lahf
scas
mov
jbe
gs
test
inc
mov
int3
shlb
sub
repnz
mov
push
repnz
push
push
add
dec
adc
iret
in
mov
cmp
or
scas
mov
push
push
fdivl
mov
push
movsb
xorb
mov
push
mov
ljmp
clc
popa
mov
mov
rorl
add
xor
or
add
or
sbb
nop
je
xchg
lock
scas
xor
popf
test
mov
daa
aad
xorl
xorl
jge
fdivs
and
xchg
lcall
ss
cltd
inc
xchg
cmp
je
cmpl
sbb
ficompl
adc
mov
push
hlt
fwait
xchg
je
fbld
jne
mov
add
mov
adc
std
xchg
addr16
fnstenv
lea
inc
lahf
sub
inc
out
dec
sarl
and
ret
les
adc
fdivrs
aad
mov
scas
mov
mov
and
jge
pop
movsl
lods
xchg
cmp
push
mov
adc
insb
cmp
or
cmp
jp
fstpt
sub
adc
lods
ja
sub
xor
jnp
cmpsb
pusha
xchg
inc
add
add
or
and
dec
out
add
jle
push
mov
in
mov
fcom
xchg
insl
mov
cmpsl
push
sbb
sbb
lahf
dec
gs
sbb
dec
jge
mov
je
or
fimuls
and
clc
inc
in
mov
shlb
and
mov
dec
arpl
xor
lods
cmpsl
push
shll
in
mov
mov
xor
adc
es
dec
pop
fnclex
add
mov
fmul
icebp
sahf
jo
filds
shr
add
xchg
cwtl
cmc
aaa
xlat
mov
lds
mov
pop
mov
insb
jno
inc
mov
xchg
gs
dec
push
rolb
lcall
mov
mov
and
fs
pushf
push
pop
sbb
adc
addr16
in
xor
cmpsb
nop
cmp
ljmp
scas
push
cmpsb
jns
pushf
jnp
sub
es
xor
ret
cmp
jp
aaa
inc
mov
inc
repz
sub
cmp
sub
dec
pop
xchg
loop
and
stos
jb
rcrb
inc
mov
lret
mov
push
mov
loope
pop
cmp
jmp
popf
inc
dec
dec
xchg
fwait
enter
inc
push
dec
ret
sti
cwtl
pop
bound
jmp
call
test
das
mov
xorb
add
lds
push
scas
adc
aaa
mov
jecxz
ret
jns
sbb
ljmp
dec
insl
cmp
popa
pop
add
in
shrb
adc
shr
mov
add
imul
lret
cmp
mov
test
sbbb
lds
jns
outsb
int3
test
js
jbe
clc
add
sbb
pop
ljmp
push
insb
jne
cmpsb
in
jb
mov
sub
daa
and
in
mov
call
push
dec
js
add
rep
adc
xorb
xor
mov
out
stc
shrb
int3
imul
push
fldt
pop
loop
sub
jp
xlat
lcall
jo
pop
add
xchg
dec
mov
lds
sbb
icebp
jbe
outsb
jecxz
add
push
sbb
push
je
cmp
aam
cmp
add
sbb
hlt
adc
lock
mov
daa
push
incb
bound
mov
rcr
push
stos
sub
adc
add
cmp
ja
xchg
dec
sub
lods
mov
mov
xchg
ret
iret
pop
fwait
xchg
daa
daa
jecxz
jbe
and
or
mov
adc
xor
push
and
dec
push
ret
mov
test
mov
push
sub
fisubs
andb
cmp
ret
daa
xor
ret
push
daa
cs
lods
sub
adc
addb
pusha
pop
lret
push
sub
push
jle
imul
into
inc
fimuls
fimull
jb
push
or
sbb
mov
orb
rcll
adc
adc
rolb
ds
cs
aas
jbe
in
sbb
out
insl
shlb
mov
stos
gs
ret
mov
into
or
hlt
daa
xchg
push
in
push
mov
mov
fildl
hlt
xchg
rcrb
int3
cs
sti
out
movsl
push
icebp
fiadds
aaa
cmc
mov
jg
call
mov
xchg
jmp
push
sbb
fs
push
jns
ds
mov
dec
fildll
lock
inc
inc
jbe
rclb
mov
sbb
mov
jne
and
jle
mov
addr16
scas
mov
lods
jmp
adc
pushf
cmpsl
lret
mov
inc
xor
sbb
jns
cmp
test
aam
sub
jg
out
push
or
fwait
cmc
push
cmp
and
orb
dec
rolb
jbe
inc
ffree
mov
shl
daa
mov
pop
sub
sbb
pop
fdivl
ror
push
pop
jmp
inc
inc
scas
mov
out
out
pop
iret
jl
add
subb
sbb
adc
and
inc
cmpsl
or
push
mov
mov
push
xor
imulb
mov
xorl
pop
movb
sub
jne
xchg
xor
repz
mov
dec
dec
incb
xchg
fidivrl
sub
mov
not
or
cmp
and
xchg
cmp
dec
pop
out
mov
add
fidivrs
cs
sub
push
jg
sti
pop
dec
test
xchg
out
loop
adc
fnstenv
dec
test
jle
sub
mov
mov
stos
mov
lret
orl
lea
xlat
and
ljmp
jecxz
mov
pop
jp
xchg
or
lret
pop
or
fwait
das
mov
sbb
sbb
test
inc
nop
and
add
xor
mov
subl
inc
cmp
sub
in
out
fwait
sbb
stos
sub
ss
testb
sub
popl
dec
xor
sub
mov
inc
mov
mov
lods
jg
xchg
sti
scas
enter
scas
xchg
or
mov
ret
adc
mov
ss
jb
loopne
mov
jmp
into
add
shrl
ss
pop
aam
cltd
insl
dec
xchg
pop
push
mov
lcall
loopne
push
jl
vmread
jb
adc
or
jge
mov
loop
sub
lret
call
pop
mov
cmpsl
xlat
sub
mov
fisubl
test
xchg
enter
scas
adcl
and
and
movsb
scas
insl
cld
mov
dec
ss
pop
sub
in
ds
dec
xchg
dec
test
aaa
pop
sti
mov
sbb
js
xlat
or
xchg
test
push
jbe
lcall
inc
mov
inc
inc
dec
pop
adc
in
mov
adc
mov
imull
sahf
imul
lahf
jl
cmpsb
js,pt
out
pop
add
mov
sbb
rcl
adc
sub
inc
js
scas
ljmp
push
arpl
adc
shll
gs
and
imul
jne
cwtl
push
aas
cmp
mov
js
mov
jle
mov
add
sahf
test
rcrb
push
out
push
push
push
dec
xchg
adc
and
xor
rorb
dec
in
jge
leave
sarb
sub
push
fldt
inc
cwtl
nop
test
stos
nop
and
dec
adc
or
movsb
fldt
divl
mov
push
lahf
mov
add
xchg
sub
and
pop
jo
cld
and
ds
sub
cmpsl
scas
cli
aas
fimull
aaa
jno
cmp
lds
cmp
xchg
inc
data16
dec
xchg
mov
mov
ljmp
and
pop
loop
mov
pop
ds
lods
fdivrs
stos
test
mov
sbb
sub
sub
and
push
sarl
mov
stos
cmc
mov
int3
mov
push
jns
mov
pop
jmp
repz
push
mov
in
mov
fsubr
out
fistpll
mov
and
out
in
xor
fs
shl
jae
loope
cmpsb
cld
xchg
scas
push
dec
js
loop
imul
xchg
jp
pop
dec
aad
jl
stos
mov
insb
es
inc
pop
inc
adc
or
and
or
xchg
fsubl
outsl
add
xor
pop
das
adc
xor
cmp
jmp
es
popf
adc
gs
mov
xchg
inc
outsb
jb
mov
sbb
bnd
push
push
out
push
sub
faddl
fstpl
lret
dec
xor
pop
cs
jnp
dec
popa
outsb
clc
mov
arpl
cmpsb
imul
lcall
ret
and
lcall
leave
mov
mov
or
cmc
cmpsl
in
jae
add
mov
movsl
repz
inc
cmpb
cmc
xor
jo
popl
mov
daa
cmp
clc
xchg
push
scas
mov
lds
sub
and
es
mov
and
dec
shlb
data16
mov
or
pop
push
clc
push
aad
jb
or
je
xor
push
pop
js
mov
jae
int
out
out
loop
mov
mov
das
js
leave
ret
fwait
bnd
mov
inc
push
jno
add
mov
mov
pop
dec
in
je
daa
mov
jg
push
pop
push
bound
jb
mov
jmp
enter
cli
pop
sub
jo
jno
adc
mov
mov
mov
adc
jecxz
adc
dec
lods
dec
cmp
sbb
icebp
dec
fwait
call
sbb
pushf
xlat
xor
mov
bound
sysenter
xor
and
push
xchg
and
adc
push
cmp
jge
mov
imull
rolb
out
test
mov
jg
xorb
pop
cmpsl
inc
iret
lahf
and
nop
in
cmp
imul
scas
incb
add
cmc
jnp
jp
rcll
jbe
xor
mov
cmp
mov
popa
fisubl
outsb
mov
mov
and
div
aam
mov
dec
and
bound
cmp
fdivp
cmpsl
xor
mov
shlb
aam
mov
pop
mov
push
jbe
mov
dec
ja
add
or
mov
mov
rorl
nop
mov
mov
xchg
jnp
dec
mov
mov
ret
or
and
cmp
sahf
rolb
jae
in
pop
fisubrs
or
xchg
je
mov
push
cmp
movsl
pop
stos
xor
jne
mov
decl
jle
out
sub
pusha
lret
mov
add
push
les
jo
mov
xor
shll
and
cmp
pop
test
movsl
lahf
fidivrl
mov
jge
data16
fidivrl
mov
fwait
jae
xor
test
lods
jb
jbe
aaa
cmp
sarb
mov
lcall
jge
xor
mov
jge
and
push
add
jae
and
notb
xor
cs
rclb
mov
rclb
cmp
cmovg
imul
inc
rcl
negb
dec
xlat
or
rcll
addb
dec
addr16
sub
movb
mov
push
inc
adc
xlat
dec
cmp
loopne
mov
xor
jns
clc
sub
dec
lds
testl
cltd
add
dec
mov
jne
ljmp
out
or
cld
jno
pmulhw
fists
dec
add
dec
lahf
or
push
or
scas
insb
xchg
jl
xor
pushf
mov
xchg
pop
xor
xchg
sarl
add
cmp
jmp
xchg
xchg
ja
push
xchg
mov
ja
inc
pusha
or
xor
gs
or
les
leave
test
cmp
adc
ret
out
stos
popa
push
fbld
push
nop
lcall
scas
lds
or
sti
dec
pusha
or
fs
xchg
sub
lcall
movq
in
iret
pop
fsubrl
or
es
jle
lret
cld
push
repz
movsl
mov
cmovge
push
jb
sub
shr
jns
push
xor
pop
jnp
andb
pop
es
xor
push
dec
adc
adc
in
xor
dec
push
xorl
push
and
andl
push
int
inc
notb
or
rclb
mov
jg
iret
xor
xor
fwait
mov
test
data16
ss
push
xchg
xor
cld
out
mov
inc
out
test
push
cmp
rcll
mov
in
stos
int
and
inc
jge
out
cs
xchg
jge
push
daa
jg
jne
xchg
cmp
mov
leave
loop
and
inc
mov
in
mov
cmc
add
adc
bound
mov
mov
jb
or
fwait
adc
cli
mov
jg
out
mov
ret
mov
sub
add
lcall
repnz
pop
sti
in
addr16
inc
loope
or
and
push
sti
sub
xlat
ds
vpcomub
testb
test
lods
cmp
int3
fldenv
frstor
stos
in
mov
mov
pop
test
jge
sarb
imul
lret
cmpsl
xor
mov
subl
testl
aam
insb
cwtl
mov
lods
and
aad
rcr
sti
or
add
call
ret
pop
popf
scas
ret
daa
jbe
mov
adc
fsubl
mov
sub
hlt
mov
inc
jmp
imul
fnstenv
sub
shrl
stos
push
sbb
imul
repnz
out
sbb
sbb
or
cmc
dec
mov
lahf
xlat
pop
add
mov
jp
inc
add
mov
push
aad
jmp
push
dec
repz
enter
jg
test
inc
dec
jae
and
mov
leave
pop
sbb
lcall
jp
lret
fs
jae
push
mov
mov
dec
adc
movsb
out
ficoml
sub
loope
incb
daa
insl
adc
movsb
dec
lods
subl
sub
pop
push
mov
sub
dec
out
sbb
inc
insl
mov
stc
inc
mov
inc
popl
pop
int
gs
fisubrl
dec
jmp
sbb
inc
xlat
pop
out
sbb
hlt
je
push
int3
and
xchg
or
std
loope
repz
js
fsubs
and
nop
and
cwtl
pop
jne
sarb
jae
lock
mov
inc
leave
es
mov
cmp
shll
xchg
ret
ficomps
icebp
test
xchg
rorb
xchg
es
cmp
push
imul
cmp
loop
std
aas
pop
sub
or
jg
int3
add
rcrb
data16
shl
sub
jecxz
jl
cmp
push
cmp
cmp
sub
push
ret
loop
inc
mov
adc
push
cmp
add
das
test
stc
insl
push
pop
push
or
ret
into
jno
jb
and
mov
adc
fisttpl
jne
ljmp
jp
popf
fidivl
and
imul
mov
push
push
mov
sbb
stc
mov
std
pusha
cli
stos
or
test
call
mov
fstpl
add
loop
or
and
fcmovu
clc
add
and
adcl
out
jo
add
loopne
sub
stos
sub
fs
xlat
jmp
inc
rcrl
repz
jno
dec
add
push
mov
push
or
or
rcr
jl
ds
push
fstpt
jae
cmc
in
daa
lock
jns
sub
mov
imull
adc
fs
push
push
ficomps
nop
sti
gs
push
fdivl
in
stc
es
mov
out
addr16
sub
lea
test
adc
push
sti
sub
cmp
scas
xlat
es
add
and
stos
lcall
fimuls
pop
push
popf
loop
scas
aaa
cmc
roll
adc
mov
ret
sbb
icebp
push
lds
add
jbe
or
dec
or
add
in
xchg
fcmovnb
sbb
in
sub
arpl
rclb
pop
pop
dec
es
hlt
aam
shrl
dec
stos
adc
bound
lcall
in
jb
mov
dec
inc
pop
adc
lret
nop
jg
push
push
jnp
mov
mov
fnstsw
test
push
loop
rolb
ljmp
les
lods
dec
icebp
hlt
sbb
sarl
xchg
cmpsb
cmp
or
xor
ret
or
jp
icebp
push
adc
cmp
in
adc
mov
fwait
es
ret
into
ljmp
add
push
push
aas
pop
mov
or
jmp
sbb
pop
adc
or
movsl
test
push
cmpb
enter
mov
rcrb
xchg
iret
cltd
add
fsubrs
and
mov
out
out
inc
mov
loopne
add
pop
xor
push
mov
nop
pop
mov
or
test
sub
repz
dec
cmp
add
int3
mov
sahf
and
mov
mov
fimull
mov
in
repnz
or
mov
mov
shll
jno
xor
sti
ljmp
or
mov
dec
sub
ds
dec
jnp
mov
jp
clc
out
mov
arpl
push
mov
mov
mov
mov
out
and
testl
adc
xchg
test
mov
push
mov
out
insl
out
mov
pop
pop
dec
pop
sub
cmp
in
pop
inc
push
xchg
or
push
fwait
adc
ror
mov
adc
inc
pop
cs
sub
movd
adc
imul
sub
xchg
xchg
scas
inc
loop
mov
aas
mov
pushf
stc
nop
insl
lock
xor
in
ja
xor
pushf
jno
xlat
sbb
movsl
mov
mov
mov
xchg
aaa
subl
mov
out
cs
or
lret
bts
jl
lods
stc
fidivs
outsb
jb
inc
mov
loopne
adc
add
outsb
or
test
pushf
sarb
jns
ficoms
dec
cmp
pop
adc
fiaddl
js
out
mov
xchg
xor
rorb
stos
inc
sbb
push
push
fs
push
scas
dec
xchg
push
pop
hlt
add
dec
lock
cmpsb
xlat
mov
mov
xchg
inc
sti
xchg
sahf
mov
fcomps
mov
mov
je
arpl
mov
lods
xchg
fptan
xchg
in
out
jmp
and
push
ljmp
inc
je
rcll
and
into
std
xor
int
bound
imul
xor
push
mov
mov
sbb
push
andl
cmp
cmp
es
jae
jg
movsb
mov
cmp
add
add
add
les
inc
or
sbb
jle
insb
pop
pop
xchg
xchg
icebp
movsl
aad
push
test
xchg
nop
adc
xor
mov
fisubs
int
mov
movsb
and
iret
stos
adc
fs
scas
mov
inc
cld
les
adc
test
mov
mov
aas
xchg
push
and
mov
push
pop
mov
subb
fwait
jnp
inc
fsts
icebp
sub
aas
mov
xor
dec
mov
xor
mov
xchg
push
or
insb
scas
imulb
dec
es
bnd
lds
outsb
dec
cmp
clc
adc
push
inc
insl
hlt
fidivrl
cmp
movsb
js
mov
andb
xchg
mov
lcall
push
ljmp
fsubrs
sub
cmp
in
add
cmp
fnstcw
mov
int
pop
pop
lds
mov
or
mov
dec
gs
rorb
cwtl
cmp
xchg
mov
jbe
in
movsb
call
sub
cmp
in
sub
and
jae
xlat
addb
repz
rol
jp
mov
push
pop
and
rcr
fidivrl
fadds
dec
stos
lret
shlb
cmp
loop
inc
pop
into
in
into
es
into
aad
divb
push
xchg
dec
mov
mov
outsl
imul
fdivr
mov
jmp
js
jae
xor
sub
addr16
fsubl
sbb
jmp
cs
insb
pop
lea
divb
mov
and
rorl
cmp
fmul
xchg
adc
std
dec
dec
mov
incl
mov
je
dec
xlat
scas
ds
mov
mov
cmp
insl
pop
inc
dec
movsb
ret
dec
lret
jmp
or
daa
pop
sbb
jno
aad
push
sbb
xchg
daa
in
push
ret
bound
jmp
cmc
sub
mov
mov
adc
mov
jle
rcl
xor
repz
subb
mov
popf
adc
jns
xor
jne
jns
xchg
cmpsb
xor
faddl
movb
loopne
xchg
fisubrs
fwait
scas
push
xchg
xchg
pop
mov
lds
jae
aam
cmpsl
sbb
inc
iret
xor
mov
in
xlat
orl
repnz
sub
stos
pop
fstpt
cmp
rorb
out
fnsave
inc
mov
aaa
inc
dec
dec
xchg
into
shr
mov
inc
dec
movsb
dec
pusha
cmp
fsubs
xchg
lahf
cwtl
ljmp
shlb
lea
into
lret
push
mov
scas
cmp
jbe
jp
insl
lock
ljmp
movsl
sarl
or
sub
cmp
mov
rcr
bound
lock
popf
out
xor
lock
ds
adc
mov
jnp
jb
pop
ljmp
push
add
and
sub
mov
mov
loope
jp
std
or
sbb
pushf
js
mov
sbb
out
rep
or
lahf
stos
fmuls
or
xor
mov
out
insl
push
sarl
and
xchg
xlat
inc
loop
mov
and
or
loope
outsl
loope
movsl
pusha
shl
lea
or
mov
adc
sbb
in
push
mov
cmp
mov
jge
icebp
in
loopne
icebp
ja
out
mov
cmp
push
dec
pop
jne
jno
sbb
pop
test
ja
xor
push
push
mov
push
fsubrl
rol
mov
push
movsl
les
mov
pop
imul
inc
incb
fdivrl
jmp
inc
popf
sub
or
jecxz
inc
pop
mov
xor
sbb
xchg
inc
bound
xor
movd
pop
leave
cmp
add
dec
mov
sub
push
jne
cmp
shll
pop
lods
outsl
aaa
mov
cwtl
adc
jg
fnstsw
stc
aam
insl
xchg
ds
pop
mov
adc
sub
sbb
or
jmp
or
sti
inc
inc
shlb
pop
sahf
iret
dec
clc
jno
cli
adc
jl
icebp
lcall
sub
subb
daa
fs
sub
loope
xlat
aad
dec
ds
fimull
inc
pop
pushf
loope
mov
test
aam
push
inc
dec
sahf
dec
or
loop
dec
negl
pop
xor
ret
cmpsb
aaa
roll
shrb
xchg
aad
mov
add
sub
mov
and
and
push
loopne
dec
jbe
mov
sub
cmp
pop
out
jmp
or
cmc
push
add
movsb
idivl
das
jne
jnp
jmp
jns
loopne
pop
add
push
mov
push
stc
cmp
jnp
movsl
dec
dec
push
and
mov
lds
push
pop
xor
inc
adc
cmp
mov
and
jno
cli
fidivrs
push
out
enter
adc
nop
dec
adc
mov
imul
or
mov
lods
cmp
ret
ds
or
xor
aaa
push
pop
lret
adc
arpl
xor
xchg
jno
in
mov
jp
jne
sub
lret
adc
fs
mov
cli
adc
push
add
mov
sub
imulb
andb
clc
stc
lock
cltd
cs
sbb
aad
clc
or
cs
pop
addr16
subb
cmp
push
sbb
sub
or
enter
js
jno
out
push
aam
mov
dec
cmp
mov
xor
xchg
mov
orl
out
clc
inc
xchg
add
mov
insb
fmull
rol
pop
lods
in
and
cwtl
jne
in
mov
cwtl
in
ds
dec
push
insl
test
push
enter
lods
data16
adcb
jae
sti
test
mov
push
adc
leave
xor
lock
cmp
xlat
loope
pop
pop
mov
inc
inc
jbe
inc
lahf
pop
test
imull
fwait
add
adc
xor
pop
js
dec
iret
adc
shlb
gs
testb
stc
cmpl
mov
adc
arpl
xor
add
sub
jns
push
outsl
sbb
adc
fcomp
jmp
stc
mov
cltd
push
mov
stos
mov
inc
dec
push
rorb
inc
jecxz
fbld
loopne
pushf
or
outsl
jl
out
jg
or
lret
dec
pop
push
sar
lcall
mov
sub
dec
jmp
cmpl
sub
pop
cmp
xchg
jbe
inc
mov
xchg
or
lcall
dec
pop
mov
or
popf
inc
sti
sbb
mov
into
inc
sub
stos
mov
mov
sbb
and
les
pop
jp
add
roll
flds
lock
dec
mov
std
mov
daa
gs
loop
out
in
cwtl
add
mov
push
pop
pop
cmp
ret
xor
jo
xchg
and
jns
outsb
mov
pop
and
mov
jnp
popw
sbb
jne
movsb
jbe
cmp
lahf
xor
jno
xchg
xor
sti
mov
adc
push
mov
cld
xor
cli
mov
push
and
xchg
aam
inc
daa
push
mov
ffreep
and
sub
xor
cmp
add
push
adc
testl
pop
add
inc
idiv
out
sbb
dec
cmc
mov
cmc
iret
hlt
pop
popa
pop
lret
divl
push
push
inc
add
aam
push
push
roll
mov
sbb
mov
jg
fisttpl
leave
mov
or
insl
notl
pushf
cmpsb
push
ret
cltd
sahf
cli
repnz
aad
ret
lea
cltd
sbb
mov
inc
lahf
sarl
loop
dec
cmp
daa
hlt
cmpsl
inc
mov
hlt
cltd
fisubrs
rorl
or
popa
xor
imul
enter
cmpsl
sti
cmp
xor
xchg
dec
adc
out
push
in
mov
out
adc
sarl
icebp
xlat
scas
xlat
sti
add
daa
xorb
pop
and
mov
inc
movsl
inc
inc
bound
xchg
mov
cmc
arpl
push
push
arpl
mov
jb
data16
cmp
fnstcw
adcb
and
divb
push
paddusb
jo
dec
push
lea
int3
add
inc
dec
jnp
add
ja
sarb
addl
fildll
lods
dec
nop
xor
inc
jno
stc
orl
imul
fnstenv
fs
inc
lods
ret
fiadds
imul
loopne
sub
inc
push
pop
jb
daa
out
add
repnz
inc
push
xchg
mov
mov
sub
gs
push
std
inc
push
lds
and
pop
das
imul
sbb
add
repz
insl
push
lcall
lret
or
push
test
int
jl
bound
mov
push
jb
pop
mov
stos
push
test
xchg
mov
movsb
ret
mov
popf
cmpsl
jo
sbb
xlat
and
jnp
test
and
cmp
aas
mov
sahf
mov
pop
hlt
unpckhps
loope
rorl
test
fsubr
ja
shll
lret
int3
lahf
push
push
dec
and
jge
jmp
loopne
jmp
jp
inc
filds
dec
into
mov
xchg
loop
dec
jno
repnz
mov
jg
pop
in
push
dec
incb
xor
int
cmp
jns
in
dec
repz
xchg
fstps
cmpsb
inc
hlt
adc
ret
mov
mov
fmulp
xlat
rol
add
lock
mov
xchg
adc
mov
fildl
jae
mov
sub
xor
imul
push
sbb
test
add
and
and
or
sub
and
sti
jns
std
dec
jl
jmp
aad
adc
jle
sub
push
aam
je
shlb
mov
push
sbb
xchg
add
xchg
cmpsl
mov
xor
jg
out
xor
movsb
push
add
mov
stos
ljmp
in
mov
adc
or
je
pusha
cmp
add
push
jmp
subl
cld
lret
sbb
pop
nop
push
xor
jl
mov
inc
ljmp
dec
push
cwtl
or
pop
inc
xchg
lret
movsb
jmp
push
repnz
adc
lahf
jle
or
jae
inc
outsb
inc
fs
sub
ds
mov
jp,pn
aaa
and
mov
insb
xor
inc
pop
mov
pop
outsb
fmull
std
inc
mov
dec
sbb
xchg
addl
xor
or
ret
imul
push
sti
into
pusha
bound
cmp
mov
pop
jne
push
nop
arpl
hlt
sarl
in
cmc
push
xchg
sarb
jmp
inc
cmp
sti
add
xor
push
dec
xchg
cmp
push
outsb
sub
int
and
ret
int3
dec
push
ja
inc
jl
jo
xlat
jge
xor
shll
jo
and
cmp
adc
idivb
mov
fmul
or
les
mov
push
and
icebp
ds
repz
xchg
mov
dec
lea
push
xor
shll
mov
add
repz
out
add
cmpsl
call
sti
test
sub
and
in
pop
and
jnp
mov
add
repnz
fiaddl
fs
test
mov
insl
fidivrl
imul
xchg
or
mov
mov
lods
test
add
rclb
mov
mov
jecxz
subb
xor
sub
mov
or
je
and
push
mov
ja
push
call
int
add
push
sub
jl
push
sub
pop
mov
insb
xor
cmp
inc
jg
pushl
jno
xchg
pop
adc
xchg
jnp
mov
sti
movsb
inc
sbb
mov
adc
xchg
jno
sti
pop
adc
dec
cmpsl
lahf
jno
test
mov
jmp
out
aaa
sub
shll
repz
movsl
call
decb
fstpl
mov
ret
fdivl
in
fsts
and
sub
out
testl
add
inc
or
mov
jp
in
cmc
push
addb
mov
mov
cld
mov
mov
fstl
sub
inc
dec
scas
mov
adc
cmp
decb
pop
flds
cmp
shrb
sbb
inc
lds
lcall
inc
dec
mov
jmp
inc
fdivr
and
lret
pusha
mov
out
mov
hlt
sbb
cwtl
mov
jle
lods
clc
sbb
in
mov
cmc
xchg
and
or
add
xchg
jecxz
lret
jb
std
sbb
xor
sbb
pop
and
popl
arpl
dec
dec
enter
ret
arpl
xor
shl
fsubl
push
xchg
enter
inc
adc
cmc
cld
mov
jmp
pop
pop
in
in
movsl
sbb
in
jp
in
fs
faddl
push
dec
xlat
jp
movsb
cmp
jnp
dec
or
fs
loopne
push
mov
es
data16
xchg
inc
xchg
push
lock
insl
test
push
jge
dec
jle,pt
jne
arpl
jns
cld
shrl
push
inc
jecxz
mov
jmp
add
lods
pop
fwait
stc
sbb
stos
xorl
ss
mov
inc
xor
xor
shll
and
js
or
mov
sahf
ja,pt
add
adcl
nop
iret
rcrl
nop
int3
adc
mov
dec
push
xchg
mov
push
mov
int
mov
adc
js
movsb
mov
and
ljmp
mov
insb
sub
or
lcall
cwtl
xor
jae
std
fidivrl
pop
sahf
mov
fstpt
push
leave
imul
call
and
dec
shrb
xchg
cltd
jo
mov
stc
mov
sarb
mov
mov
cli
inc
adc
mov
enter
push
and
and
and
mov
push
ja
jle
loop
les
sbb
mov
push
or
in
scas
xor
in
xor
rorb
inc
add
mov
lods
fisttpll
call
fcoms
xchg
xor
sbb
xchg
arpl
adc
leave
test
inc
cmp
xchg
cmp
adc
out
mov
pop
mov
icebp
popf
xor
sahf
std
gs
push
push
data16
das
cmp
or
pop
lods
inc
and
xor
loopne
or
loope
repz
inc
jae
inc
negb
inc
pop
inc
rsm
sub
push
mov
testb
shl
cmpsl
pop
mulb
fsts
mov
adc
popf
les
mov
mov
adcb
scas
sbbb
xchg
push
in
inc
ljmp
jl
add
cmpsb
cltd
in
inc
les
cmp
xchg
dec
fisubrl
push
fnstcw
nop
arpl
gs
popa
cli
mov
mov
jno
stos
fidivrl
rorl
dec
inc
jmp
das
int3
jne
xor
into
xor
mov
add
sub
pop
adc
push
mov
scas
std
bound
mov
cmp
sbb
mov
int
xor
popf
insl
mov
or
sub
mov
rolb
and
insl
dec
xchg
test
add
and
shrb
inc
in
mov
loop
add
ret
rcrb
xchg
es
lds
dec
aad
dec
xorb
and
cmc
inc
pusha
clc
jns
setnp
xor
call
xor
loope
and
sub
mov
std
adc
jno
push
inc
es
fldenv
xlat
dec
add
rcll
fsubl
jmp
cli
xor
vprotd
aaa
test
xchg
pop
pop
ret
out
fsubrl
in
not
in
lret
bound
adc
out
push
jg
ljmp
fldcw
rolb
mov
push
jns
push
and
ljmp
jno
jl
or
icebp
orb
mov
push
mov
sahf
push
xchg
call
mov
cmp
inc
cmpsl
outsl
lods
leave
lcall
sub
and
and
sub
push
cmc
jb
push
xchg
sub
inc
repnz
addr16
ficomps
cmp
mov
aaa
xor
xchg
pop
subl
out
pusha
add
pop
dec
orl
jbe
or
xchg
mov
xchg
cmpsl
inc
push
fstpt
push
and
mov
repnz
or
dec
or
sub
cmc
xorl
mov
ljmp
cltd
shrb
xor
and
mov
sub
pop
test
sbb
xchg
jecxz
or
mov
stos
ret
push
test
pop
imul
ret
add
in
mov
mov
inc
xchg
or
jnp
mov
push
icebp
sub
mov
cmp
and
sar
iret
xor
lods
outsb
shll
ss
pop
add
ret
fisubl
or
xchg
add
dec
xor
in
lock
fldenv
mov
dec
jns
xor
jecxz
pop
fdivrs
shlb
div
push
inc
mov
lock
mov
lcall
xorb
add
mov
lret
imul
inc
mov
cvtdq2ps
push
sub
hlt
out
sbb
test
lcall
loopne
mov
push
daa
mov
inc
pop
popf
add
ljmp
arpl
xchg
test
shrl
lods
lret
xchg
xchg
js
stos
test
push
jge
add
stc
repnz
push
xor
lds
out
sub
movsb
adc
push
mov
mov
mov
adc
and
cmp
mov
subl
call
jl
jecxz
shlb
nop
adc
out
adc
aad
and
addb
xor
push
leave
mov
jnp
js
mov
pop
jmp
out
sbb
adc
gs
rorl
inc
adc
jmp
push
inc
sub
mov
repz
cld
pusha
das
lret
pop
xor
dec
insl
fsubr
mov
inc
into
mulb
inc
aas
mov
or
inc
into
push
ds
stos
rclb
out
leave
push
or
fdiv
andl
ffreep
imul
mov
mov
adc
or
scas
or
push
xchg
cmp
cltd
mov
sahf
test
sbb
cmpsl
jne
pop
jbe
cmp
or
mov
lock
fldenv
frstor
in
shll
inc
push
ljmp
popa
clc
arpl
les
aas
mov
aam
pop
jnp
sbb
mov
fsub
jecxz
xor
out
aaa
hlt
jmp
cmp
adc
ret
push
mov
push
minps
sti
mov
xchg
adc
push
jne
int
jo
cmpsb
inc
cwtl
out
pop
pop
push
adc
sub
bnd
addr16
stc
das
fisubrl
or
insl
mov
mov
cwtl
mov
hlt
and
push
mov
push
cmp
rolb
pop
fdivrs
mov
aam
dec
xchg
cmp
mov
xor
dec
sbb
xor
mov
pandn
aam
push
sub
mov
xchg
push
mov
push
lods
outsb
mov
cltd
mov
xchg
pop
and
mov
jno
js
xchg
fcoml
test
orl
and
dec
inc
pushf
inc
and
sarl
adc
xor
aad
dec
ret
push
mov
shlb
leave
iret
sub
rcr
xor
cs
out
sub
inc
imul
aas
clc
cmp
mul
inc
pop
mov
push
dec
ljmp
xchg
iret
cli
and
cs
into
int3
pop
loop
jp
add
in
mov
jne
data16
cmp
push
and
rorb
dec
sbb
fdivrl
pop
sub
ds
std
pop
daa
cld
or
sub
mov
sti
in
in
sti
loop
pop
mov
cmp
cmpsl
aaa
cltd
cmpsl
fbld
outsl
ds
lock
inc
aas
repz
fnsave
xlat
int3
insb
js
pushl
movsb
leave
fstpl
sub
fxch
dec
rcll
lea
in
fisttps
shl
push
inc
lea
daa
lret
xor
dec
mov
dec
pop
inc
pop
mov
and
testl
add
mov
arpl
mov
lahf
xor
movsb
fstpt
out
shlb
push
bound
test
and
repz
sbb
mov
test
sti
jle
adc
adc
jne
cmpsl
mov
jl
inc
mov
dec
fwait
sub
cmpb
inc
cmp
in
test
je
in
icebp
cmpsb
adc
es
std
xchg
test
adc
enter
push
into
fsubp
or
mov
inc
dec
cmp
aam
roll
xchg
icebp
call
jno
or
dec
mov
sbb
mov
inc
xchg
sbb
adc
inc
sub
push
push
les
ljmp
xchg
or
xchg
imul
mov
sub
mov
jbe
dec
pop
push
cwtl
jb
ss
imul
das
inc
inc
aas
out
add
or
mov
lock
sub
repnz
je
sar
mov
push
lods
xor
bound
pop
pop
push
mov
mov
cmpb
xorb
jno
lret
insl
or
sub
pop
or
mov
and
pop
icebp
xchg
out
pusha
daa
in
sub
rcl
sbb
xchg
mov
stc
loop
testb
fpatan
mov
mov
aas
push
insb
xor
inc
repz
jne
jbe
mov
dec
push
push
push
repnz
pushf
fsub
mov
mov
mov
les
push
xchg
sub
fs
sbb
jle
adc
push
dec
arpl
lods
movsl
cmp
pushf
loopne
mov
mov
mov
out
rcl
push
pop
mov
lods
lea
mov
pop
lds
or
adc
into
jbe
xor
add
in
mov
mov
sbb
dec
dec
out
and
faddl
leave
sub
push
cmp
or
aam
add
pop
int3
sub
int
cltd
adc
xor
xchg
test
ret
ljmp
jno
ljmp
dec
ljmp
inc
mov
push
xor
addr16
ds
cmp
sbb
aas
sbb
data16
das
pop
ret
push
wbinvd
nop
popa
lcall
lcall
lcall
jo
addr16
or
cmp
mov
fwait
rcrl
out
push
push
ret
xor
idivl
cwtl
roll
cli
loop
cli
mull
js
cmp
in
sub
jo
popa
inc
in
sahf
popa
add
mov
outsl
mov
fsubrl
je
push
jns
out
mov
mov
xor
loopne
push
lock
insb
jno
arpl
jnp
stos
jo
dec
push
xchg
adc
jp
into
subl
shll
cmpsb
xchg
jmp
es
and
jae
into
xor
mov
push
dec
shll
inc
push
sub
mov
inc
fs
stos
into
inc
mov
pop
stc
inc
xchg
loopne
inc
repz
lea
push
xor
rcll
jne
or
mov
sbb
aam
sbbb
test
stos
xlat
addl
pop
icebp
xchg
push
and
loopne
loop
cli
insl
sahf
mov
test
mov
pop
aam
dec
push
sub
mov
test
sub
push
add
xchg
and
adc
daa
bound
je
fs
scas
mov
out
das
jmp
push
rcrb
inc
mov
or
icebp
mov
ja
ja
sub
mov
mov
xchg
cli
mov
aad
sahf
sub
xchg
cmpsl
decl
add
mov
adc
jp
mov
pop
mov
or
cmp
cmc
xor
pop
out
or
cmc
and
lahf
xlat
ss
je
icebp
cltd
adc
je
fidivs
and
sbb
adc
ror
sahf
out
addr16
mul
int3
mov
daa
nop
in
xchg
out
or
stos
push
int
scas
lahf
sahf
adcb
shl
inc
xor
incl
into
pushl
mov
mov
mov
out
std
daa
loop
shrb
outsb
adc
popf
fdivl
push
jno
xor
cmc
push
mov
in
inc
or
hlt
push
mov
pop
push
test
pop
and
aas
cli
ret
push
clc
sar
ret
es
mov
cmpsb
inc
inc
adc
xchg
in
lea
xorl
mov
shll
roll
aad
or
decb
xchg
rcrb
test
dec
adc
cmp
imul
dec
push
and
jmp
andb
mov
dec
mov
ss
loope
aad
lcall
lret
repnz
add
xor
inc
ss
adc
rcrb
fxtract
and
push
shll
mov
and
fdivs
out
cmc
sbb
arpl
add
lea
mov
fisttpll
xor
dec
add
add
aaa
mov
mov
or
cmpsb
add
pop
mov
leave
jae
les
cmp
adc
mov
push
scas
cmp
sub
jns
rorl
dec
xor
mov
pusha
adc
cmp
cmpsl
jecxz
xchg
push
pop
xchg
pop
cmpsl
jne
imul
movsb
mov
xchg
pop
inc
dec
fisubs
jbe
std
jb
jp
scas
cmp
dec
mov
repz
adc
sub
test
push
mov
inc
mov
icebp
dec
fldt
iret
pop
pop
je
and
jg
je
jbe
push
inc
cmp
int
ss
fsubl
or
loop
out
xlat
je
lahf
dec
fsubr
jle
ret
push
ficompl
dec
mov
sbb
outsb
cli
into
mov
stos
dec
jnp
icebp
lds
aad
lcall
jno
insl
in
aam
cs
jns
dec
cltd
push
xchg
in
movsl
cwtl
cmp
inc
mov
ljmp
lahf
adc
or
add
or
mov
int
sub
mov
mov
pop
mov
inc
stc
gs
out
pop
or
push
iret
adc
mov
or
lahf
loop
cli
ja
cmp
jae
imul
xor
pop
fisttps
cmc
xor
pop
test
not
xorl
dec
xchg
xchg
mov
push
sti
or
xchg
stc
or
shrl
insl
cmpsl
mov
push
sub
out
fbld
push
cmp
xor
sub
inc
jne
bnd
push
pop
pop
dec
push
stos
cmp
mov
push
mov
mov
sub
out
cmpsb
fwait
js
addb
ret
je
xchg
adc
pop
notl
es
adc
addr16
jb
lds
dec
rorl
xor
fucom
jp
mov
loopne
ljmp
mov
aad
dec
xlat
mov
cmpsl
popf
xchg
and
jl
mov
and
xchg
sub
sbb
aad
sub
mov
mov
movsl
sub
pop
inc
mov
sub
lahf
pop
inc
ret
mov
inc
fistl
xlat
out
repnz
xchg
sub
rcrl
mov
out
adc
lods
sbb
sub
xchg
and
fst
ja
lods
dec
and
fldcw
cmp
les
push
imul
sti
nop
add
push
test
push
sbb
sub
gs
jnp
sbb
loop
lahf
fldl
sub
icebp
pop
icebp
and
scas
mov
dec
push
addl
lock
movsl
mov
and
sub
adc
imul
inc
int
mull
push
cmc
dec
movups
test
pop
fsubs
aam
popa
repnz
sbb
ja
fisttps
jecxz
popf
mov
add
jns
pop
je
mov
sbb
or
cmp
ljmp
insb
mov
icebp
rcl
daa
sbb
shr
pop
pop
in
pop
or
decb
sti
add
push
sbb
xchg
lea
popa
inc
decb
xchg
andl
mov
jns
arpl
faddl
inc
cmp
xchg
outsb
mov
jmp
aas
pop
in
and
mov
movsl
cld
add
das
aaa
scas
xchg
shlb
outsb
shll
call
cli
xchg
lea
in
sub
mov
popf
mov
sub
lret
and
cwtl
pushf
pop
pop
nop
xchg
add
pushf
xchg
mov
cmp
xchg
scas
stos
mov
dec
push
pop
xchg
leave
imul
mov
test
ljmp
mov
stos
stc
or
xchg
sbb
mov
pushf
push
je
ljmp
out
hlt
xor
stc
js
add
aaa
rorb
mov
cmp
or
add
mov
jae
out
mov
lret
xchg
aas
sbb
mov
ds
es
cmp
sahf
inc
pop
cmp
pop
jmp
arpl
jbe
push
clc
leave
jg
xor
sub
jnp
cmp
mov
jmp
lcall
jp
loope
mov
mov
and
jns
push
cmp
and
adc
test
out
inc
add
mov
add
mov
testb
jge
cli
fucomp
xor
jne
dec
push
push
push
xchg
ret
mov
xchg
pop
push
loop
lea
jecxz,pn
adc
adc
mov
movzbl
insl
dec
push
jno
pop
sub
sti
xchg
sarl
mov
pop
mov
cmc
andl
mov
cmp
fidivl
jmp
outsb
pop
jle
negb
adc
jg
pop
ret
mov
jge
in
inc
push
mov
xor
sub
pop
cltd
cmp
ljmp
add
icebp
lods
and
pushf
jae
addr16
call
jecxz
adc
or
inc
sub
sub
sub
repnz
add
inc
push
into
sbb
mov
repnz
pop
jo
cmp
aas
mov
add
sub
subl
cmpsb
xor
adc
ds
push
cmp
mov
ret
aas
cwtl
jle
push
adc
out
cmc
add
and
jmp
icebp
daa
cmp
or
or
sahf
out
or
adc
dec
call
dec
addr16
aam
pushf
ret
inc
xchg
and
leave
loope
xchg
rclb
push
insl
hlt
mov
sub
mov
test
jb
jl
jp
out
jg
mov
lea
adc
push
pop
nop
push
mov
in
test
in
lock
es
test
sub
xor
lret
in
add
sbb
pusha
arpl
test
rorl
mov
lock
push
aaa
aam
pop
mov
call
sub
mov
imul
sbb
mov
jp
add
pop
aas
js
adc
adc
dec
pop
testb
push
pop
pop
add
xor
cli
add
fwait
adc
das
sbb
xchg
dec
insb
xorb
pop
cltd
leave
push
cmp
sbb
adc
icebp
xchg
pop
jno
inc
add
inc
ret
outsb
sub
dec
gs
scas
cld
xchg
cmp
lcall
mov
cmp
outsl
mov
scas
inc
cmp
mov
loope
shrl
cmp
das
push
lcall
call
jecxz
mov
lock
sub
je
adc
fildll
fistps
out
into
add
jp
mov
and
les
xchg
ud1
add
insb
cwtl
xchg
mov
sti
sub
imulb
jb
lods
add
movsl
int
pusha
in
sarl
adc
push
mov
movsb
and
jmp
jle
add
xlat
scas
dec
test
lret
iret
shll
lahf
dec
mov
mov
or
pop
arpl
call
mov
lds
jp
test
outsl
mov
xchg
add
scas
xchg
push
inc
in
jmp
cwtl
jb
int
pop
aas
inc
shl
nop
test
mov
cs
cmp
cmp
jge
outsb
xchg
cmp
or
sub
in
cmp
jns
push
jp
xor
dec
adc
loope
stc
jmp
mov
rorl
in
or
push
or
dec
jb
loope
popf
mov
outsl
fwait
sub
sbb
mov
lods
push
cmpsl
rcll
push
popf
dec
inc
push
clc
inc
adc
subb
or
xlat
pop
dec
lret
data16
movsl
and
pop
icebp
push
jecxz
push
cmp
ljmp
addr16
mov
xchg
insl
rcr
je
sarb
fcmovbe
xlat
sbb
push
in
cltd
faddl
pop
sbb
into
or
gs
fmull
pop
mov
fdivrp
cwtl
adc
lret
push
sbb
cmp
adc
jp
lahf
sbb
xchg
xorb
out
adc
mov
xor
cmp
imul
jle
dec
mov
sub
push
and
loopne
sbb
popa
hlt
and
fwait
or
ljmp
adc
ljmp
jns
mov
aad
nop
jmp
xchg
mov
int
push
mov
sbbb
out
aaa
pop
mov
jge
dec
cmc
in
in
inc
out
pop
xchg
enter
test
xchg
push
icebp
xor
pop
ljmp
dec
fsubr
or
mull
bnd
das
xchg
lods
das
xchg
cmpsl
cld
ss
pusha
inc
test
adc
jns
mov
ret
push
sar
cltd
cmp
sub
xchg
inc
mov
cmc
into
push
pop
sahf
popf
push
in
test
cs
and
push
ror
mov
adc
cmp
add
adc
dec
and
or
ret
cmpsb
pop
inc
icebp
leave
into
mov
in
or
addr16
xor
xlat
scas
fisttpll
mov
ret
pop
or
mov
adc
fwait
dec
mov
in
mov
add
pop
out
in
fdivr
dec
in
sbb
insl
and
mov
mov
fsubrl
or
insl
or
andb
iret
adc
mov
int3
mov
scas
dec
in
rclb
std
push
mov
ss
and
filds
or
inc
int3
imul
push
dec
in
xor
pop
cmp
inc
dec
cmp
addb
jns
lods
cltd
cmp
xchg
xchg
shl
mov
test
out
sbb
xchg
into
hlt
outsb
pop
xor
int3
repnz
pop
in
xor
jo
rcl
push
jmp
je
jae
mov
test
cmp
std
or
lcall
and
pusha
jp
cld
jb
push
test
add
adcb
and
xchg
das
mov
mov
je
push
sub
xor
hlt
mov
xchg
loop
outsb
pop
sbb
mov
cmc
sub
popa
out
fucomip
jnp
xchg
imul
hlt
fldl
int
int
mov
jb
adc
adc
out
out
jmp
inc
sahf
dec
xor
mov
xor
aam
push
dec
jne
xor
adc
cs
call
or
sub
jno
mov
in
js
push
cwtl
inc
add
adc
jne
das
add
jp
xchg
out
stos
xchg
fcoms
or
std
add
jl
pop
cld
pop
cmp
cltd
js
scas
push
outsl
inc
scas
je
and
daa
data16
movsb
fwait
inc
pop
pop
or
adc
adc
rorl
push
adc
xlat
icebp
pop
aad
scas
and
xor
jge
mov
sbb
xchg
fiaddl
lock
pushf
sub
mov
imul
pop
repnz
or
outsl
push
imul
ss
test
pop
add
mov
pushf
sbbl
stos
enter
stos
pop
mov
mov
cmp
les
js
mov
xor
adc
out
pop
cmc
cmp
out
je
mov
inc
or
mov
mov
or
push
jge
stos
clc
jmp
mov
add
dec
lock
in
and
out
cli
rorb
jno
inc
cmp
sbb
or
mov
movsl
pop
cmp
movsl
dec
push
lods
daa
out
mov
lds
jmp
cmp
fisubrs
xchg
fmul
dec
dec
mov
movsb
xchg
das
fisubrs
or
nop
in
mov
mov
cmp
fsubrs
add
fdivp
aas
insb
mov
shrb
les
int
rclb
cmp
test
cmpsl
jp
pop
pop
xchg
cli
xchg
dec
ljmp
sub
je
dec
es
js
inc
lcall
les
sahf
sub
nop
rcpps
and
xchg
rcll
xor
mov
dec
cli
mov
cwtl
fidivrl
ret
adc
pop
les
push
jmp
inc
inc
jns
or
mov
jae
addb
xor
into
push
aam
mov
cbtw
xor
rcrl
add
ficomps
aas
sbb
sub
mov
lret
cmpsb
adc
xchg
cmp
std
mov
ret
dec
les
imul
das
cmp
mov
mov
cmc
add
outsl
pushf
jno
arpl
xchg
jnp
jp
lods
lahf
fnstcw
shrl
cwtl
xchg
sahf
lret
iret
leave
push
mov
stc
pop
sti
xchg
int3
je
push
push
enter
pop
lcall
movsl
fiaddl
icebp
rol
nop
xchg
and
rorb
shlb
imul
xor
mov
and
rorl
add
push
aas
push
mov
imul
add
cmp
in
inc
adc
fcoml
popa
aaa
lret
scas
lret
cwtl
mov
es
xor
mov
movsb
xor
push
dec
sbb
xchg
jmp
in
adc
inc
pop
and
es
xchg
sbb
sub
loope
ljmp
mov
sub
adc
push
sbb
popf
jnp
pop
jge
js
jo
xchg
hlt
mov
into
in
aam
push
xchg
push
mov
jg
dec
pop
jne
mov
push
pop
les
push
pop
das
jp
stc
dec
xor
lds
lea
or
add
adc
cmp
call
imul
ds
pop
jns
mov
insl
pop
stos
xor
mov
out
push
xor
int3
leave
test
push
out
pop
ret
and
sbb
mov
pop
lock
in
je
jo
fisubrl
rcrb
imul
sbb
mov
xchg
hlt
gs
imul
fsubrs
inc
jecxz
and
pop
mov
pop
inc
lret
lods
popf
adc
jmp
and
into
dec
inc
push
rclb
pop
or
or
cmp
pop
mov
std
add
ljmp
mov
jb
popf
adc
push
add
cmp
ljmp
ljmp
xchg
lcall
aaa
add
sbb
xchg
push
sbbl
push
push
mov
push
mov
dec
mov
or
popa
pushf
push
ret
icebp
out
nop
mov
jbe
ljmp
mov
iret
mov
and
mov
sti
or
dec
push
mov
test
jnp
cltd
aaa
adc
pop
push
dec
ficompl
ja
pop
repz
loop
das
sub
or
shrb
aam
sub
xchg
mov
xchg
andb
hlt
dec
je
repz
push
outsb
pop
sbb
dec
mov
jb
stos
xor
xchg
lods
xor
paddq
aad
pop
lea
loope
jns
xchg
lcall
imul
ljmp
rcll
sbb
shrb
jb
jo
ja
push
sbb
inc
dec
je
sub
in
mov
xor
insl
les
adc
dec
mov
adc
cltd
shlb
jns
cmp
push
adc
mov
or
lods
lret
push
pop
mov
mov
and
or
and
sarl
ja
test
push
loope
shrb
mov
mov
inc
xchg
and
push
ss
xchg
ljmp
pop
or
inc
inc
mov
movsl
fistl
adc
inc
int
hlt
mov
test
sbb
cwtl
jb
movsl
pop
orb
push
pop
lods
sub
mov
pop
sarl
bound
das
fwait
jle
loope
das
mov
mov
roll
cs
fs
push
sbb
jle
inc
or
cmc
sbb
dec
loopne
scas
xchg
outsl
mov
aaa
and
cmp
xlat
mov
mov
ficompl
jl
pop
dec
hlt
in
leave
xchg
jne
setb
mov
jno
stos
out
fdivrp
cmp
mov
cmpsb
mov
arpl
ret
in
cmpsl
adc
stc
jbe
jecxz
mov
adc
jmp
mov
cmp
insl
adc
lea
jae
xchg
adc
mov
subl
sub
aaa
dec
in
xor
inc
pop
mov
in
cmp
mov
sahf
stc
outsb
lret
cmp
push
push
pop
push
adc
push
pop
mov
xor
mov
hlt
mov
loop
loopne
pop
aad
div
int3
js
lock
scas
jnp
mov
mov
arpl
out
xchg
xchg
jle
mov
dec
mov
xor
sub
stc
xchg
mov
int
sbbb
sub
mov
shrl
aad
lods
dec
add
popf
sbb
icebp
call
lret
jmp
push
mov
lea
lret
mov
adc
mov
xchg
data16
adc
sbb
dec
pusha
fwait
cwtl
mov
inc
xor
lret
cmp
test
inc
cmp
or
and
fists
jo
loop,pn
lret
mov
add
mov
and
mov
adc
or
loopne
sbb
xchg
test
cmpsb
fimuls
scas
lret
ret
sbb
add
lahf
rclb
mov
mov
adc
cmpsl
or
cmp
lahf
jmp
sbbb
stos
ret
sarb
mov
pop
int3
loopne
xlat
loopne
add
nop
inc
cmp
dec
sub
push
lcall
xor
mov
rcll
cmpsb
iret
xor
jne
lahf
push
mov
or
lea
inc
out
mov
mov
xchg
lahf
xchg
imulb
push
sahf
nop
fbstp
push
sub
in
inc
test
ds
push
rorl
gs
out
cmp
aas
mov
mov
pop
imul
cmp
cltd
scas
push
jecxz
mov
loopne
lock
testb
pop
das
cwtl
out
insl
lea
adc
shlb
imul
stos
cmp
std
jo
vmwrite
outsl
jnp
fildl
xor
adc
sub
inc
lret
in
negb
jg
roll
rolb
push
push
adc
dec
and
push
je
incl
sarl
mov
std
sub
lcall
test
push
test
cmp
or
jne
ja
xchg
fs
out
cltd
mov
fdiv
and
and
or
daa
sbb
rcrb
das
dec
add
dec
mov
mov
aad
ja
mov
fneni(8087
mov
xor
mov
movsb
push
xchg
lret
nop
movsb
sub
mov
rcrb
sbb
frstor
das
ds
shrb
dec
sub
popa
cmp
andb
fldt
fldt
or
movsb
pop
sbb
mov
jnp
cmp
icebp
rcll
xor
inc
xor
and
fwait
push
int3
sub
sahf
jae
into
or
adc
int3
push
cmp
mov
xchg
imul
out
sbb
into
fwait
rclb
movsb
leave
mov
add
mov
adc
add
movsb
outsb
push
add
push
mov
es
mov
cltd
test
dec
mov
push
inc
pop
xchg
jle
xchg
test
jg
imul
sarl
movsb
shll
push
xchg
xchg
push
mov
adc
out
decb
lahf
aas
sub
mov
jbe
test
jbe
or
jno
nop
sbbl
or
je
dec
adc
pop
dec
mov
push
pop
js
ljmp
dec
jp
sub
sub
inc
sub
dec
sbb
cli
in
insl
jecxz
pop
es
imul
cli
sar
sub
inc
hlt
push
je
xor
jg
sahf
aad
inc
in
dec
and
out
pushf
cmc
pop
mov
cld
sbb
icebp
sub
mov
notl
adc
fidivl
or
lret
rorb
pop
test
iret
jo
loop
outsl
add
inc
push
and
adc
call
pop
data16
add
sti
pop
popa
add
nop
in
or
pop
jns
dec
mov
fmuls
push
fistps
adcb
imul
mov
mov
mov
clc
sbb
sub
and
inc
jg
jl
ja
xchg
xlat
popa
mov
xor
loopne
dec
push
cmp
shl
inc
scas
repnz
shrb
sub
lods
fcompl
sbb
sbb
jge
add
out
push
pop
push
jns
cli
cmp
jl
std
icebp
outsl
stos
cmpsb
mov
mov
xchg
scas
insb
ja
sbb
push
jnp
pusha
sbb
dec
les
ds
sub
int3
push
hlt
decb
rorl
mov
adc
out
lret
or
shlb
lahf
dec
and
xchg
lret
ss
test
lret
pushf
pop
aam
jmp
jnp
pop
ljmp
dec
or
out
roll
jbe
js
jo
int3
gs
insl
sbb
pop
push
std
fnstenv
xor
icebp
pop
cmp
enter
cmp
movsb
popl
jb
cmp
arpl
loope
int
lods
ret
std
xchg
xchg
adc
das
out
dec
out
in
cmc
rclb
inc
xchg
das
inc
fs
sub
out
mov
push
cs
dec
inc
sub
add
add
ret
or
xchg
mov
int3
push
out
jecxz
es
xchg
adc
pop
les
dec
repnz
iret
push
iret
pop
bnd
mov
cwtl
std
cld
andl
fiaddl
and
clc
loope
movsl
iret
lahf
cltd
or
adc
das
cs
inc
push
xor
hlt
cmp
sbb
test
inc
ret
add
pop
pusha
mov
cld
cmc
push
push
jnp
outsl
insl
mov
jg
mov
int3
cmp
cwtl
popf
dec
lret
cmpsb
xchg
sub
adc
sbb
ret
outsl
cmp
push
cwtl
or
mov
in
shlb
mov
mov
push
jg
movsb
push
shrb
add
ss
push
jns
aad
add
sbb
and
pop
pop
punpckhdq
rorl
fsubrl
pusha
sbbb
pop
sub
fsts
adc
and
mov
xorl
mov
out
dec
dec
sbb
mov
addr16
cmpsl
and
test
sbb
pop
pop
jmp
mov
mov
inc
lock
addr16
jle
insl
stc
cli
pop
or
lea
in
push
mov
jne
cmpsb
cmp
mov
add
andl
or
cmpsl
imul
lret
sbb
jl
enter
icebp
lock
insl
gs
pop
ja
fs
or
xor
push
mov
es
inc
bnd
cltd
pushf
out
jo
mov
repnz
filds
pop
mov
rorl
mov
and
gs
stc
push
add
mov
hlt
and
out
loope
scas
popa
inc
or
push
lods
jo
cmpb
or
jne
pop
adc
jp
xor
inc
push
icebp
mov
sarb
out
leave
and
and
mov
out
sbb
pop
add
jecxz
lret
cs
adc
jb
xorb
call
out
mov
xchg
mov
inc
lods
inc
mov
jae
mov
adc
cmp
popa
aas
xchg
cwtl
stc
or
and
jecxz
ss
mov
jle
shlb
pushf
inc
sub
xchg
clc
repnz
ss
sbb
rol
inc
notb
cmp
sbb
js
sbb
mov
fistps
xchg
sub
hlt
mov
mov
int3
imull
pop
repz
or
and
cs
outsb
mov
push
sub
fs
test
and
push
pop
mov
les
push
inc
fdivl
cmp
je
xor
pop
mov
cmpsl
dec
sbb
lods
jg
cmc
pop
push
push
addb
push
push
outsb
mov
out
dec
lahf
outsl
gs
adc
dec
inc
xor
int3
dec
or
gs
loop
push
sbb
and
lret
xchg
mov
test
lods
cmp
loop
aam
repz
pusha
int3
scas
repnz
outsl
add
jp
pop
ljmp
daa
roll
rorb
dec
mov
xlat
minps
push
pop
or
daa
icebp
aad
out
jl
fistl
dec
mov
scas
jo
ret
pop
lret
inc
movsl
dec
pushf
fsub
mov
xchg
hlt
sbb
mov
mov
fsubs
push
lret
roll
sbb
movsb
add
cmpsl
xchg
mov
repz
test
mov
ja
xchg
and
fucomip
mov
push
fs
loopne
stc
fstl
mov
sub
mov
dec
sub
hlt
dec
fptan
inc
scas
mul
ret
push
xor
or
ret
sub
push
cmp
adc
mov
loope
and
stos
inc
pop
aaa
mov
lods
push
jge
jge
and
pop
xchg
scas
addr16
push
je
data16
aam
inc
cwtl
pop
inc
inc
inc
mov
lahf
aam
fmuls
rcrb
mov
xor
and
mov
insl
dec
xchg
add
xor
cmp
add
mov
repnz
xor
insl
or
insb
sti
stc
or
lods
ror
add
pop
jmp
insb
and
xchg
hlt
mov
xchg
ja
in
and
pushf
call
mov
mov
mov
sbb
call
pop
enter
adc
js
test
push
lea
divl
xor
xrelease
xchg
mov
arpl
add
push
xor
and
rorb
push
adc
xor
imul
in
call
mov
shl
ds
in
fdivr
xchg
sbb
add
inc
mov
push
xchg
pop
shlb
sti
jb
mov
mov
xor
shrl
cmpsl
inc
icebp
pusha
movsb
mov
stos
pop
add
and
push
adc
test
cmp
cmp
pop
cli
xlat
sub
mov
stos
add
cwtl
mov
fimuls
xor
ja
pop
inc
into
pop
mov
sub
inc
mov
mov
test
daa
hlt
xchg
add
mov
add
add
pushf
sbb
jmp
adc
mov
rcrb
ja
mov
loopne
fadds
aad
orl
sbb
faddl
inc
adc
sbb
jbe
adc
sbb
outsb
fisubl
fwait
xchg
sahf
inc
or
or
inc
mov
pop
push
das
arpl
add
lods
mov
outsb
cmp
mov
xor
loope
sbb
lahf
sbb
pop
adc
rorl
in
shr
lods
faddl
cmp
daa
pop
shlb
adcb
mov
xchg
je
jno
add
dec
popa
or
jmp
aam
pop
data16
lea
mov
cltd
js
lcall
in
cli
sub
aaa
add
sbb
out
dec
sti
push
push
push
dec
ffreep
ds
add
or
sub
push
mov
dec
sbb
loopne
in
mov
xchg
inc
inc
lods
std
je
std
pop
fld
js
push
movsb
pop
mov
arpl
and
adc
cmp
cld
shl
das
adc
stc
loope
pusha
arpl
ret
movsl
inc
jb
sub
arpl
mov
andb
mov
out
mov
pop
push
negb
adc
sub
lret
add
rcrl
jmp
jp
dec
mov
cmpsb
test
mov
sarb
fwait
insb
daa
popf
jno
cmpsl
out
push
lods
fbstp
inc
addr16
add
pushf
sarl
mov
jo
adc
xchg
fldl
xor
mov
jae
out
mov
add
mov
das
std
push
mov
in
rclb
push
lret
sahf
jno
outsl
popf
loop
out
in
cmp
lds
push
call
loopne
out
add
inc
ret
mov
bound
adc
xchg
iret
xor
inc
test
fwait
jno
and
stc
cmp
xchg
sbb
fs
imul
mov
cmp
inc
mov
push
or
imul
sarb
pop
xchg
rclb
rolb
push
out
lods
pop
xchg
push
mov
mov
cmp
into
pop
lcall
mov
xchg
sub
sbb
and
xlat
bound
sbb
leave
test
pop
xchg
mov
out
jb
sub
mov
insl
push
sahf
stos
xchg
js
sbb
insb
sbb
imul
add
mov
cs
dec
stos
ds
mov
hlt
out
xchg
xor
out
dec
outsl
int3
xchg
fisttps
pushf
dec
push
lret
js
movsb
fmull
jb
inc
scas
cmpsl
lock
hlt
push
pop
xor
push
hlt
inc
enter
int3
out
sub
iret
loop
nop
or
add
mov
fs
ljmp
add
xchg
jle
mov
addr16
or
movsb
push
ljmp
das
jge
out
or
xor
mov
cmp
push
pop
jge
adc
mov
mov
jo
jmp
xchg
push
mov
cmc
mov
ljmp
lahf
mov
lcall
mov
push
cmp
pop
adc
cli
jle
das
test
int3
test
stc
testb
movsb
pop
out
push
pop
sub
dec
rcr
stos
sub
jl
sbb
test
and
call
mov
ja
jle
push
push
cld
push
adc
pop
inc
mov
aad
sbb
add
shrd
lcall
mov
rol
inc
fsts
fwait
inc
rsqrtps
into
cmp
ret
out
jne
loopne
sbb
inc
jge
and
lcall
xor
std
xchg
adc
enter
subl
or
aaa
sbb
lods
sar
idivb
mov
into
sbb
sub
leave
das
lret
inc
dec
imul
mov
and
iret
xchg
pop
push
and
stc
inc
cmp
adc
ficompl
add
jmp
mov
push
xor
or
dec
mov
adc
mov
push
insl
xor
loop
data16
sarl
or
popf
or
cmp
int
loope
xchg
call
add
add
sbb
aas
mov
mov
push
and
cmpsb
movb
aad
enter
dec
mov
clc
dec
ret
pop
push
ljmp
sbb
push
push
sbb
xchg
xchg
pop
fmull
imul
sti
xchg
and
sub
xor
les
push
and
in
mov
sub
ljmp
xchg
pusha
xor
mov
idivb
jno
sahf
aas
test
rclb
mov
or
xor
mov
mov
xlat
mov
cmpb
jae
push
push
adc
dec
fiaddl
out
xlat
mov
push
cmp
jge
ret
xchg
pop
in
cltd
aam
jl
dec
mov
or
sbb
ds
dec
xchg
sbb
inc
pop
cwtl
cli
push
xor
xchg
ljmp
out
xor
loope
xchg
les
sub
mull
adc
cmp
add
sahf
cli
and
rcrb
subb
xchg
sahf
ret
push
xchg
push
add
insb
mov
jp
mov
test
test
jns
lock
and
and
push
faddl
sbb
sti
mov
data16
add
push
sub
in
mov
out
push
inc
outsb
lods
adc
outsl
mov
cwtl
sti
in
stos
xor
push
push
jl
cli
cmp
push
sarl
loope
lds
xchg
data16
adc
lods
dec
leave
adc
inc
mov
lds
adc
dec
lds
adc
xor
mov
icebp
mov
jnp
mov
pop
pop
cmpsl
addr16
jg
aad
das
jmp
or
fsubl
mov
mov
fwait
xchg
jno
cmc
lcall
add
dec
push
push
cli
cmp
fldl
dec
sarl
push
dec
lea
push
mov
ret
and
mov
popf
nopl
outsb
sbb
roll
xchg
push
enter
jl
dec
pop
mov
test
dec
xchg
and
and
xor
out
or
je
lret
sub
and
cmp
inc
dec
xchg
outsb
xchg
add
mov
push
jl
cmc
mov
xchg
ficompl
cwtl
and
jns
cwtl
out
push
clc
push
fisubs
int
sub
cmp
add
mov
jmp
lods
in
jg
sti
cmp
fcompl
ljmp
insl
aad
stc
je
loope
adc
arpl
mov
and
testb
insb
mov
sub
inc
pusha
xor
aas
mov
lods
jne
lret
icebp
je
push
mov
inc
incl
xlat
rep
pop
ds
or
push
jbe
hlt
pushf
sub
aas
ficoml
sarl
dec
xor
push
das
jb
es
sub
xor
popa
mov
mov
dec
jle
jg
cmp
call
in
ljmp
jo
stos
sub
cmpsb
pop
sub
mov
fdivrl
cmp
adc
cwtl
and
inc
push
es
push
xor
int3
out
testl
loop
sub
inc
add
push
push
loope
jo
iret
rcrb
and
rcrb
aaa
dec
sub
fldenv
mov
lock
out
inc
mov
in
std
mov
inc
adcl
mov
cmpsl
loop
adc
xchg
xchg
in
cltd
and
fsubrp
out
test
sub
jle
repz
ss
sti
or
add
clc
mov
dec
stc
xchg
bound
or
insl
mov
mov
rcll
dec
mov
xlat
ds
repz
xlat
pop
jecxz
dec
xchg
cs
pop
xchg
push
add
xchg
fldcw
jle
mov
dec
daa
and
out
cmp
and
shll
push
call
enter
push
rcll
jl
shl
cmp
movsl
rclb
sub
xor
mov
arpl
ficoms
xchg
es
push
dec
xor
cld
mov
push
cmp
xchg
mov
hlt
mov
and
push
mov
cmpsl
dec
cmp
or
jnp
jmp
mov
inc
sbb
scas
mov
sub
dec
je
jnp
jns
jge
push
or
arpl
inc
lea
sub
and
test
arpl
mov
scas
enter
aas
repnz
jb
fstpl
movsb
and
aas
jns
xchg
andb
rclb
xchg
hlt
mov
pop
jecxz
js
sub
mov
jno
dec
movsb
loop
inc
aas
pop
sbbb
insb
lahf
jg
js
daa
jns
mov
mov
xchg
xchg
andb
push
scas
sub
cmp
pop
adc
adc
lcall
out
cltd
ljmp
pop
mov
cmp
clc
movsl
out
jb
sahf
lret
decl
push
lahf
cs
dec
push
xor
fs
cmp
add
adc
in
negl
and
sbb
pop
push
and
jg
adc
dec
sarb
fwait
inc
xor
mov
fcom
jg
push
pop
mov
scas
loopne
xchg
imul
int3
fistps
pop
sbb
add
mov
sbbb
das
mov
fisubl
ss
in
mov
jl
aaa
jnp
in
in
cltd
jge
mov
cli
pop
mov
int
shl
lea
xbegin
imul
out
xchg
sub
push
hlt
call
and
cmpsb
mov
mov
adc
cmp
bound
pop
lret
pop
movsb
shrb
cmp
mov
sahf
inc
ret
pop
mov
xchg
mov
mov
sbb
xor
adc
in
mov
lds
psubsw
rcr
gs
xor
mov
out
into
hlt
arpl
lods
popf
add
cmpsl
fwait
jg
xor
cmp
test
xor
inc
loope
pop
mov
imul
mov
xor
dec
movsb
adc
sub
scas
jle
fs
inc
je
sbb
xchg
push
sbb
jb
adc
or
xlat
dec
xchg
scas
out
cmp
mov
std
sbb
aad
pushf
loop
aad
mov
jecxz
push
cmp
sub
loopne
leave
leave
in
cmp
fistl
shl
icebp
push
insb
shrl
pop
out
fisubrs
mov
inc
imul
dec
loop
sti
lcall
push
adc
leave
xchg
aas
mov
lcall
ljmp
xor
mov
insl
sub
cmp
sarl
cltd
sub
inc
mov
push
stc
rol
fld
pop
decl
jge
cwtl
push
jmp
gs
divl
je
push
adc
movsl
mov
mov
cmpsl
shrl
negl
mov
sbb
fstps
sbb
loope
mov
push
and
jge
pop
pop
push
xor
mov
rol
xchg
jmp
lret
dec
pop
hlt
shl
dec
jmp
fwait
push
push
popf
aaa
xor
sub
pop
movsl
xchg
pop
cld
cmpsb
out
cli
sti
pop
push
sbb
frstor
push
das
push
ds
dec
test
stos
les
aad
lea
sub
imul
movsb
jecxz
add
call
pusha
cli
notb
inc
ret
sub
jle
aam
inc
mov
mov
sub
mov
cmp
insb
push
pop
add
mov
clc
lock
mov
dec
inc
xchg
mov
test
mov
or
or
in
aaa
add
mov
clc
cld
mov
jbe
pop
jle
or
add
mov
in
pop
repz
sub
dec
iret
out
ss
lock
sbbl
in
add
jno
test
mov
push
in
mov
jg
mov
out
jge
dec
fsubrs
inc
add
aad
xchg
out
movsl
mov
ljmp
loopne
pop
jnp
mov
jg
out
xor
jmp
push
andl
fmul
pop
leave
leave
insb
pusha
insl
pusha
add
sub
leave
fs
lcall
jle
cwtl
imul
mov
xchg
lods
movsl
out
pop
pop
jle
dec
xchg
dec
fsubs
or
xchg
or
movsl
xchg
xchg
pop
adc
mov
mov
sbb
mov
adc
shrb
into
cmp
sub
mov
add
xor
orb
or
imul
daa
out
push
add
lahf
ss
sbb
push
pushf
mov
pop
insl
insb
aas
mov
fstp
cmp
outsl
incl
bound
inc
mov
add
movsl
pop
jg
or
mov
push
scas
icebp
clc
fistpll
xchg
repnz
in
cli
cmp
jnp
sti
sub
xchg
mov
in
pop
xchg
test
cmp
cmc
dec
mov
or
stc
arpl
ret
imul
out
mov
insl
filds
and
out
dec
adc
pusha
insl
jo
add
add
sti
pop
jp
adc
clc
fistps
vphaddw
cmpl
push
mov
xchg
dec
and
hlt
sbb
add
add
cli
pop
insl
stos
sub
jns
jp
xor
cmpsb
mov
xchg
stos
lret
aad
cs
mov
dec
stos
cmpsb
aas
jp
inc
and
or
push
stc
call
imul
dec
mov
es
inc
push
mov
aad
dec
mov
push
push
mov
xor
mov
mov
or
cmp
fwait
les
and
pop
sub
xor
xchg
jp
popf
std
jecxz
mov
iret
scas
xor
addr16
sahf
sahf
shl
add
hlt
sahf
mov
dec
or
std
inc
test
or
fbstp
pop
push
adc
ds
je
test
loope
shrl
mov
in
test
aam
call
cltd
sub
fisubs
and
test
cmp
push
add
adc
jmp
shlb
sub
loopne
and
ds
adc
imul
cmp
push
mov
scas
pop
mov
and
xchg
mov
sub
mov
repz
dec
add
aam
std
mov
fnstcw
sbb
inc
mov
scas
xlat
enter
ljmp
cmpsl
jae
lahf
and
in
fs
pop
lock
ljmp
shlb
push
mov
ja
clc
or
movsl
int3
in
cmp
pop
lock
cld
sbb
xchg
xchg
out
jb
shl
ret
or
lock
sub
test
dec
sahf
xor
repnz
inc
xchg
pop
test
add
xchg
mov
pop
or
sbb
loop
das
jo
sbbl
xchg
jae
into
or
clc
mov
fs
int
cwtl
aas
clc
cs
cli
add
aam
jmp
xchg
adc
mov
adc
ds
push
cmp
es
leave
sub
push
push
mov
mov
test
popf
mov
xor
and
push
and
lock
inc
push
cmp
mov
in
imull
xor
test
xchg
mov
dec
xchg
and
scas
jg
int
stos
dec
lea
mov
out
ds
inc
dec
mov
jmp
js
ret
sahf
nop
jne
mov
jmpw
in
xor
imul
imul
add
push
cs
ret
mov
pusha
test
mov
idivb
push
or
sti
and
imul
pushf
pop
sti
jl
fisubs
adc
mov
add
lods
inc
mov
xor
aaa
inc
inc
or
stos
sbb
push
inc
shll
sub
xchg
add
push
xlat
mov
bound
lret
push
adc
adc
lds
clc
pop
gs
xor
mov
lret
or
repnz
add
lods
pop
jbe
dec
lods
lods
push
test
or
xchg
and
fmuls
jecxz
stos
push
idivl
push
incb
ret
or
xchg
pop
xlat
sar
add
jae
xchg
jae
mov
sar
sbb
sub
scas
mov
jnp
push
xchg
mov
js
jmp
dec
push
sti
es
fcmovnb
sub
idivb
cmc
dec
pop
xchg
fsubr
or
sbb
cmp
popl
dec
mov
adc
mov
cmp
test
push
dec
sub
test
lods
lds
movsb
addl
stos
jb
scas
cmp
push
out
jne
jle
lods
mov
int3
sti
mov
xchg
loop
or
jbe
shll
inc
inc
sbb
mulb
lds
mov
in
xor
bnd
jns
testb
jle
mov
les
cmpsl
ljmp
push
out
lcall
lcall
mov
cmovae
pop
lret
xchg
lods
dec
or
push
pop
shl
imul
push
lret
dec
jns
inc
sub
scas
fists
in
adc
notb
fs
sbb
push
ret
clc
mov
sbb
insb
adc
clc
mov
in
xor
pop
cmp
lods
adc
lods
mov
dec
imulb
mov
xlat
arpl
xor
mov
rcl
pop
ss
hlt
jg
loop
xor
or
mov
pop
or
dec
pop
fnstsw
mov
sbb
cmpsb
stos
inc
xchg
add
jge
jb
mov
push
adcb
je
test
inc
mov
fstp
daa
pop
scas
bswap
aad
pop
push
lods
mov
lret
clc
inc
insl
mov
mov
sub
leave
inc
sbb
dec
push
inc
push
lds
jae
inc
push
cmpsl
cmpsb
add
lds
mov
pop
mov
sbb
aad
sbb
mov
lret
inc
jbe
out
cmp
aaa
mov
or
stc
xchg
inc
movsl
cld
stc
fwait
movsb
adc
pushf
inc
test
inc
cs
scas
sbb
dec
pop
sub
adc
in
loop
dec
mov
bound
dec
xchg
mov
add
sbb
outsb
xlat
or
rcrl
das
or
push
lds
sti
or
shr
or
mov
daa
push
push
out
ret
adc
sbb
or
cmp
add
cmp
inc
jmp
push
fcompl
xor
or
mov
into
inc
or
cld
cmp
xchg
sub
pushf
inc
leave
dec
aaa
mov
lahf
cmp
lods
push
mov
divb
or
int
mov
and
xchg
or
sbb
xchg
push
gs
add
jecxz
imul
lret
int
inc
stc
test
out
dec
add
sub
out
mov
aad
cmc
lock
mov
popf
rolb
xchg
sahf
fldcw
and
out
pop
or
mov
adc
clc
adc
fs
outsb
imul
stc
adc
push
cltd
jle
fmull
push
fimuls
stc
dec
and
stos
dec
idivb
pop
lods
inc
fstl
push
subl
jmp
inc
xchg
stc
mov
ja
add
rorb
mov
mov
mov
outsl
andb
xchg
jmp
and
pop
or
xchg
push
data16
and
xor
into
movl
mov
cwtl
sub
iret
push
mov
fdivr
mov
xor
lods
leave
pop
inc
cs
and
cmp
flds
and
sahf
xor
leave
jno
les
pop
push
push
ja
and
mov
ja
jne
or
push
inc
push
cmc
mov
dec
push
ss
pusha
repnz
movsb
jne
test
les
pop
jo
test
lds
cmpsl
iret
jge
jecxz
jl
test
fsubs
das
xchg
sbb
lcall
or
push
addr16
adc
jb
or
aas
nop
lods
jb
fadd
pop
push
pop
imul
push
pusha
fidivs
lea
mov
fs
rorb
xchg
dec
pop
jnp
out
and
dec
push
pop
fsubrl
mov
popa
dec
push
in
sbbl
sbb
xor
stos
sbb
fucomi
add
data16
pop
inc
push
push
jnp
and
ret
sub
add
jbe
jae
sti
ss
movsl
jne
push
sbb
imul
jecxz
scas
test
ret
cs
xchg
clc
js
jb
mov
mov
ljmp
and
jecxz
icebp
or
jecxz
fsubl
sub
push
adc
and
sub
inc
lret
shrd
fisubs
xadd
push
sbbb
or
mov
push
insl
out
lock
aad
sarl
into
pushf
mov
jbe
shrl
dec
pop
lds
mov
xchg
negl
imul
mov
cmp
xor
inc
lret
dec
call
or
cmp
ljmp
fs
jge
int3
fiadds
movsl
lds
imul
enter
push
mov
cli
lret
sarl
push
movsl
in
mov
xchg
mov
js
push
scas
lods
lea
js
addl
sbb
xor
rcl
cmpl
and
rorl
push
rcr
test
jne
mov
dec
mov
jecxz
aad
js
addl
outsb
loope
or
push
rolb
cmp
adc
push
mov
or
aad
mov
and
cmp
adc
cmp
add
mov
mov
xor
dec
sti
fwait
and
in
outsl
mov
aaa
dec
jo
cli
or
cmc
add
mov
ret
dec
push
inc
adc
pop
into
fdivs
jecxz
rolb
mov
and
ret
mov
adcl
jecxz
in
es
adc
xchg
sub
fwait
dec
pop
and
jnp
dec
stc
jbe
rolb
sub
or
mov
add
pop
bound
fs
aad
lock
sub
arpl
mov
xchg
add
loope
int3
and
mov
outsl
sbb
mov
fidivs
lds
lahf
fdivrs
cltd
mov
jle
data16
xchg
xchg
int
push
xlat
fwait
xchg
cmp
push
in
aad
in
adc
lret
cltd
add
jp
inc
sbb
into
xlat
dec
push
lret
mov
sub
pusha
jecxz
cmpsl
fcmovu
jns
sbb
cmp
push
inc
cmp
imul
out
cwtl
sub
sub
adc
iret
add
mov
lds
mov
je
mov
gs
sub
xchg
add
sub
idivl
or
add
bound
jne
jno
xlat
add
cmp
adc
cmp
pop
dec
dec
mov
xlat
adc
subl
outsb
mov
insb
xor
lret
rolb
outsl
cmp
sbb
cwtl
cli
ficoms
xchg
inc
popf
ficoms
aad
and
sbb
fiaddl
js
loop
adc
fwait
testb
mov
nop
push
in
ds
sub
lods
mov
fs
sti
ror
sub
in
add
or
push
out
jo
sti
jmp
push
xor
xor
xchg
add
inc
icebp
in
sbb
movsb
xchg
and
mov
rolb
cld
std
sbb
or
icebp
mov
xor
push
lock
adc
fnstenv
adc
mov
jmp
pop
mov
jmp
stos
jecxz
cmpsl
aam
xchg
aaa
sbb
dec
jmp
stos
mov
out
aam
ss
mov
data16
ss
xor
stos
jl
repnz
stc
inc
xchg
sbb
xchg
fwait
add
mov
mov
sub
xor
jne
or
jnp
scas
jge
mov
push
addl
xchg
sbb
pop
jns
into
jmp
sarb
mov
cs
sti
mov
inc
cltd
filds
cmpsb
mul
sub
test
pop
or
jle
cwtl
lods
jecxz
xchg
lcall
aas
ret
dec
mov
arpl
loope
mov
mov
jne
mov
fistl
sub
pop
daa
mov
mov
cli
cmp
jmp
pushf
sub
aam
stc
push
lods
pushf
ljmp
sbb
sub
aaa
shld
imul
add
sub
mov
mov
test
push
xchg
fsubrs
lods
call
arpl
mov
ja
xor
mov
push
scas
mov
xchg
mov
je
xchg
xor
shrb
mov
aad
clc
add
in
push
repnz
movl
jge
lock
mov
cwtl
lret
jecxz
fld
and
lahf
cmpsl
mov
mov
jne
mov
adc
sti
cmpsl
cmpsb
xchg
stos
lcall
add
loope
jge
mov
jnp
push
pop
into
popf
pop
decb
push
divl
inc
push
lods
lods
mov
and
popf
sbb
pushf
lahf
adc
lret
outsl
dec
add
xchg
pop
cmp
mov
icebp
hlt
sarl
ss
popa
insb
mov
jge
in
shl
ljmp
ds
inc
jg
and
fsub
icebp
fnstenv
fstps
test
je
popa
cmp
inc
fistps
xor
push
adc
jmp
outsl
enter
push
ljmp
ret
push
call
push
xorl
dec
fstpl
push
int3
sub
add
xor
test
mov
pop
dec
xor
idivl
add
es
mov
dec
cmpsl
push
adc
and
dec
cmp
daa
into
inc
mov
sbb
xchg
enter
popa
push
cmp
mov
pop
push
mov
fucomip
mov
nop
cmp
in
pop
mov
sub
and
rcl
imul
push
xchg
fxch
std
adc
mov
jbe
cmpsb
push
or
and
mov
cmp
and
jnp
mov
ret
movsb
outsl
push
insl
xor
roll
sbbl
pop
sbb
andb
int3
imul
xor
int3
pop
add
lret
push
mov
repnz
scas
fisttps
dec
btr
inc
movsl
test
cmp
clc
das
add
arpl
ja
test
nop
aam
ret
fsubl
add
lock
iret
sub
lret
test
pushf
mov
aas
int
xchg
ret
ds
push
pop
rcl
sbb
push
sbb
pop
inc
adc
or
cli
push
ljmp
pop
xchg
and
adc
fimull
loop
and
ljmp
push
push
in
lods
sahf
mov
adc
jns
int3
mov
lea
dec
inc
outsl
mov
in
cmp
cwtl
out
mov
bnd
scas
inc
pop
xlat
out
push
mov
sbb
pop
xor
adc
stos
mov
mov
sbb
jo
and
imul
mov
fisttpll
mov
lods
and
daa
lock
xor
ss
adc
es
adc
test
cmp
sar
or
movntq
lods
mov
fst
mov
mov
test
ficompl
les
sbb
test
dec
mov
out
and
inc
outsb
dec
daa
pop
cltd
xor
ljmp
add
mov
add
cltd
out
add
movsl
nop
faddp
ljmp
and
ret
pop
jns
out
shlb
imul
repz
jnp
cmp
mov
bnd
inc
pop
mov
push
jno
dec
test
ja
add
push
scas
xor
cmp
ret
iret
fdivs
xchg
outsb
dec
shl
mov
xchg
cmp
sbb
nop
lock
dec
test
mov
pop
mov
fsts
push
icebp
inc
outsl
pusha
mov
lcall
inc
or
je
lahf
adc
jp
ds
add
aas
cs
inc
lock
mov
inc
out
jecxz
lods
jl
out
add
cmp
mov
out
testb
and
jnp
jb
mov
and
mov
or
mov
fisubs
push
cmp
fsubrs
repnz
je
xor
jge
xchg
cmpsb
jmp
lods
adc
push
lods
xchg
fdivl
cmc
xchg
cmp
xchg
mov
mov
cmpsb
jbe
mov
fistps
xchg
inc
mov
add
sbb
and
fucom
cmp
into
inc
mov
and
push
inc
push
jg
cs
lret
jmp
push
int
jae
insl
in
es
inc
popa
add
ljmp
clc
push
dec
inc
mov
insb
test
aad
repnz
xchg
out
jne
lea
push
and
adc
subb
cld
jne
xchg
andb
pop
addr16
testl
or
out
add
jp
mov
sbb
cwtl
mov
cli
lods
dec
add
add
adc
lret
insl
adc
jnp
icebp
fisttps
and
inc
sbb
xor
testb
xchg
jmp
jp
add
gs
and
cwtl
test
and
pop
mov
cmp
fcmovbe
lods
jecxz
xchg
rcrl
shrb
outsl
mov
leave
jb
outsb
aam
lods
fcoms
movsl
shrb
hlt
lret
filds
aad
or
adc
loop
js
imul
xchg
xor
js
je
mov
mov
dec
shl
cmpsb
movl
dec
jp
clc
mull
fabs
push
push
mov
pop
test
lods
shlb
sbb
fcmovb
xor
or
jnp
orb
jmp
jns
out
pop
out
mov
mov
ret
xor
outsl
cmp
in
es
sbb
mov
scas
xor
fstl
cmp
incl
loop
pop
ret
xor
lret
and
cmpsb
repnz
pushf
inc
pop
scas
jmp
ret
xor
xchg
or
addb
cmp
aaa
mov
insl
outsb
xchg
mov
inc
and
cmp
stos
fmuls
jb
sub
push
cltd
adc
lret
mov
xchg
insb
mov
scas
sahf
push
je
jmp
out
xchg
fwait
or
lcall
cmpsb
rolb
mov
push
xchg
call
cmp
mov
dec
cmpsl
sub
xor
xchg
fnstsw
mov
js
aam
cmpsl
xorb
ret
dec
enter
and
xchg
add
clc
dec
pause
jmp
nop
out
clc
stos
scas
add
mov
push
aam
test
push
scas
cld
ss
xchg
jmp
xchg
sub
test
lret
mov
cli
stos
sbb
and
icebp
jnp
or
cli
iret
pop
or
lock
xor
adc
jg
mov
data16
and
adc
sbb
inc
cltd
push
in
push
mov
das
add
fwait
popa
jb
in
cmc
movsb
test
inc
lret
fsubrl
sbb
add
sub
outsl
mov
inc
int3
push
mov
loop
lods
jb
rolb
cmp
mov
pushf
pop
aad
lock
add
cmpsb
es
cmp
mov
inc
push
dec
or
insb
ds
mov
lcall
dec
loop
xchg
or
std
pop
add
addr16
lods
jecxz
movsb
insb
dec
add
mov
pop
jecxz
jecxz
outsl
mov
mov
hlt
repnz
scas
addr16
loopne
xchg
sti
addr16
lock
test
sub
push
dec
int
mov
or
pop
call
dec
insl
xchg
sbb
dec
dec
inc
adc
leave
shll
jmp
inc
fs
add
sbbb
pushf
lahf
mov
lods
mov
push
inc
xor
bnd
pop
into
pop
cwtl
std
clc
mov
mov
sbb
xchg
mov
in
push
lods
xchg
sti
mov
push
sbb
dec
push
cmp
lret
subl
mov
sub
mov
and
das
cs
fldt
ret
call
adc
arpl
dec
frstor
stos
adc
rcrl
push
lahf
lods
jae
push
outsl
je
inc
stc
outsl
add
ret
daa
ret
xchg
sar
stos
imul
sub
inc
arpl
clc
mov
and
jns
xor
cld
cs
mov
mov
inc
or
mov
lods
dec
xchg
push
xchg
or
dec
lret
mov
mov
lcall
mov
dec
ss
or
sbb
fsubs
and
inc
mov
add
aaa
mov
out
cmp
popf
mov
int
push
mov
dec
es
lods
mov
xchg
cmp
mov
mov
jp
sarb
and
sub
xchg
movsl
aam
aad
and
ficompl
cmpsb
aam
sub
aam
lret
fsubr
cmp
xchg
addr16
sbb
cmpsl
adc
sbb
jg
push
inc
mov
cmpsb
in
mov
flds
movsb
addr16
fwait
push
pop
or
fidivl
rcr
fistps
xchg
stos
enter
test
jb
and
aas
addl
mov
rol
ljmp
inc
sbb
fists
pop
and
shlb
push
loope
mov
int3
xor
aad
in
sub
out
adc
and
and
cld
outsb
cld
xlat
pop
mov
stc
bound
daa
jae
jmp
mov
mov
inc
mov
mov
pusha
mov
out
pop
inc
das
lds
jg
sub
sahf
jns
dec
out
mov
rclb
cmp
out
aam
loope
outsl
mov
jp
lret
inc
mov
ja
sub
lret
cmp
dec
xchg
inc
pushf
adc
or
push
and
movsb
jbe
add
and
stc
sub
insl
fidivrs
test
aad
rorl
sub
or
divl
or
sbb
lods
adcl
push
push
notl
xor
push
xchg
js
add
xchg
mov
mov
mov
push
cmp
in
xchg
jo
lods
inc
and
and
push
lahf
inc
inc
popa
das
xor
insl
pop
adc
add
sti
mov
ss
and
dec
cmp
test
push
mov
sbb
cmpsb
sbb
xor
mov
adc
push
pop
sti
adc
dec
arpl
xchg
fisubs
xor
je
adc
lcall
and
adc
addl
flds
movsl
ret
pop
dec
push
imul
push
dec
test
adc
add
aaa
mov
pop
cmp
and
movsl
xchg
mov
pop
xchg
notl
scas
jb
shrb
lea
push
movsb
leave
sti
jo
add
jl
dec
push
mov
ds
cmc
xchg
or
or
jbe
pop
adc
ljmp
mov
inc
lds
rcrb
adc
pop
sbb
inc
mov
pop
cmp
imul
push
push
aam
stos
popf
cmp
leave
sbb
shrl
nop
or
cmc
adc
lahf
xchg
fisttpll
and
push
cmp
popf
dec
enter
or
fmul
pop
mov
mov
jbe
jns
xor
fstp
ficompl
inc
dec
sub
inc
stc
add
pop
ret
xchg
push
into
call
scas
and
and
shrl
js
ret
fidivrl
mov
xchg
sub
cmpl
xchg
pop
cmc
ret
pop
or
nop
add
sub
cmp
add
mov
inc
adc
push
jge
movsl
cmc
fistl
pop
jmp
enter
and
fs
das
push
push
repz
mov
sub
cwtl
addr16
jecxz
loopne
shrl
dec
xchg
rolb
pop
in
xor
adc
fwait
jg
xchg
xchg
cmp
inc
mov
push
pushf
dec
enter
fildl
outsl
fisubrs
push
jb
pop
cmp
scas
loop
scas
call
ficomps
push
insb
push
das
fwait
and
push
sub
enter
cmp
lret
pop
imul
inc
mov
pop
adc
lods
adc
dec
and
fnstcw
arpl
xor
or
sbb
or
dec
and
ss
roll
fstps
out
mov
mov
mov
decl
mov
push
cmpsb
dec
pop
hlt
mov
decl
iret
cld
pop
mov
lret
gs
cli
push
fsts
fmuls
jnp
cwtl
xor
xchg
lcall
xchg
and
pop
mov
ret
push
mov
scas
push
dec
mov
pop
notl
fcoms
inc
movsb
jmp
dec
xchg
xor
les
cmp
mov
test
fdecstp
and
sub
lcall
sbb
push
ja
jno
and
cmpsb
jmp
js
bound
dec
out
push
in
dec
mov
dec
stos
jbe
inc
xor
add
int3
les
mov
sub
and
inc
mov
mov
movhps
mov
fbld
std
lods
arpl
sbb
push
rolb
mov
daa
inc
bound
pop
je
dec
faddp
loope
fcmovb
push
push
push
and
inc
jle
mov
push
xor
lahf
int
aad
enter
xor
adc
push
push
jecxz
clc
inc
cltd
sbb
lds
mov
or
pushf
cltd
testl
rorl
ds
lds
pop
shll
aad
daa
mov
movsl
jno
mov
xor
out
jb
adc
aad
sbb
dec
andl
push
push
pop
add
lock
cli
mov
sub
ret
adc
xlat
scas
roll
fstps
and
cli
jae
adc
mov
in
int3
jbe
addr16
stos
inc
out
pop
insb
leave
mov
mov
dec
mov
mov
out
cmpsl
and
and
fistps
mov
pop
out
lcall
xchg
call
sbb
mov
adcl
test
add
cmc
xchg
and
enter
and
movsl
inc
in
sub
inc
sbb
loopne
mov
mov
cmp
push
movsl
pop
les
test
repz
xchg
imull
icebp
add
pop
pop
leave
adc
push
xor
dec
scas
ss
ss
mov
pusha
out
in
cmp
cwtl
mov
icebp
sbb
out
adc
ret
pusha
out
fidivrs
xchg
mov
inc
mov
adc
push
inc
iret
inc
rcr
jbe
movsb
insb
jno
pushf
adc
test
sbb
xchg
pop
mov
test
cmc
scas
outsb
fninit
outsl
sub
dec
adc
enter
into
inc
stos
daa
loopne
insb
adc
int
cmpsl
and
add
out
mov
adc
mov
cwtl
dec
pop
cli
or
and
add
mov
jbe
scas
adc
sbb
push
push
xorl
shl
push
sub
jmp
pop
sub
dec
arpl
cmp
ss
cwtl
mov
mov
dec
mov
xor
enter
sbb
sbb
pop
pop
ret
pop
mov
and
and
push
sbbl
orb
stos
sti
popf
mov
cmp
fiadds
inc
out
push
and
mov
cmpsl
add
xchg
in
ja
movsbl
adc
jle
fcmovb
and
test
stos
mov
inc
stos
lods
je
popf
jo
mov
pop
push
lods
mov
lea
pop
xchg
pop
and
gs
mov
dec
pop
ficoml
mov
jo
les
pushf
imul
push
cmp
sub
mov
daa
and
mov
mov
roll
iret
lock
test
and
gs
mov
jmp
and
cmpsb
insl
jbe
pop
mov
cmp
cmp
lret
sbb
mov
mov
sub
stos
in
dec
pop
insb
popa
int3
outsb
push
or
mov
out
movq
mov
cmp
pop
jb
daa
aas
mov
es
jmp
popa
lods
sub
or
imul
push
clc
dec
sbb
mov
jnp
inc
pop
cmc
inc
jp
popf
leave
icebp
arpl
pop
mov
jge
daa
xchg
push
mov
repnz
lcall
mov
jne
cmp
fcomp
lods
jmp
xor
or
adc
shll
pop
xor
fs
sarb
sbb
xor
push
adc
std
mov
xchg
js
arpl
movsl
jmp
or
jbe
add
mov
out
popa
jg
pop
xchg
lods
out
and
out
jg
or
pop
enter
jno
inc
dec
test
lock
cli
nop
mov
xor
rcll
pusha
lock
arpl
xchg
adc
test
fwait
sbb
sub
sub
ret
fs
mov
sahf
call
xchg
jmp
add
daa
xor
xor
jle
and
sub
rcrb
inc
push
js
pop
mov
cli
out
cli
cld
aas
xchg
sub
mov
in
sbbb
pop
cmp
lods
out
cltd
cmpsl
jnp
repz
in
vminss
jle
shlb
mulb
push
mov
mov
sbb
inc
inc
es
add
inc
sub
sahf
pop
or
nop
or
loop
in
cmp
icebp
inc
lret
adc
popf
fidivrl
scas
dec
push
pop
ljmp
xchg
popf
jge
loopne
loope
sbb
xchg
pop
push
push
cmpsb
xchg
cmp
je
sub
cmp
pop
mov
sti
pop
xchg
loope
cmp
inc
scas
js
lcall
adcl
inc
scas
stos
and
bound
psubusw
inc
cmpsl
push
lcall
mul
cmp
mov
mov
stos
loope
lds
or
notl
jl
cltd
push
lds
cld
sti
iret
mov
jmp
call
js
popa
iret
stc
lods
sub
roll
add
jne
fadds
test
pop
pop
mov
fstps
movsl
add
aad
call
push
outsl
push
pop
gs
fucomi
enter
inc
xor
cmpsb
stc
ds
shlb
aad
mov
pop
ljmp
push
mov
pop
or
fsubrs
repz
add
dec
mov
mov
cld
gs
sub
push
cli
mov
jge
arpl
lods
xor
sbb
insb
push
jle
sbb
out
ss
cmp
pop
pop
fildl
outsb
sbbl
sahf
in
pushf
nop
pushf
xchg
lret
mov
rcr
adc
mov
repz
xor
jmp
aad
mov
imul
test
lret
xor
sarb
popa
repz
sbb
xlat
adc
loopne
push
sub
dec
add
pushf
pop
jns
adc
xchg
adc
outsb
inc
imul
leave
fisttpl
jns
push
fs
sub
cmpsb
mov
fwait
cmp
in
imul
inc
ja
mov
fidivrs
jge
in
popf
les
movsb
roll
in
mov
adc
fisubrl
and
add
sub
sub
shrb
rcrl
fsubrl
insl
pop
and
inc
cmpsl
jecxz
sahf
ds
fistpll
hlt
mov
mov
jnp
jp
mov
push
pop
int3
in
sti
pop
in
pop
scas
scas
xlat
or
frstor
jmp
sbb
xchg
rcrb
inc
into
fcmovne
adc
lods
in
mov
mov
ret
sbb
cld
push
insb
inc
sbb
out
cltd
das
mov
mov
gs
cmp
mov
adc
das
pop
cmp
test
lahf
lea
jl
jp
popa
jl
jge
pop
fisubrs
lds
mov
mov
test
ljmp
add
mov
mov
pusha
jge
add
sbb
push
dec
ljmp
mov
pop
mov
xchg
cmp
cltd
jno
pop
push
mov
pop
cmp
cmpsl
xor
dec
ja
pop
dec
popf
addr16
int3
mov
push
push
push
sub
xchg
mov
imul
jne
sahf
movsl
adc
lods
push
mov
mov
mov
inc
fdivr
inc
or
sarb
push
aas
movsb
mov
lods
xlat
push
push
or
jnp
call
pusha
aaa
mov
pop
push
jmp
push
mov
jle
push
or
push
in
insb
push
inc
mov
or
mov
adc
cwtl
ds
out
pop
data16
mov
sub
fsubrl
push
jmp
arpl
int3
jecxz
dec
and
xorl
imulb
jb
add
mov
or
lods
sub
imul
into
push
inc
stos
lods
pop
test
and
fldcw
decl
jge
jge
mov
mov
faddl
js
bnd
lcall
cmp
pop
pushf
mov
jne
push
into
imul
sbb
fwait
not
jb
bound
and
pop
fs
push
jecxz
aad
das
in
xchg
jg
mov
mov
or
dec
ret
idiv
dec
shll
es
pop
fucomi
sti
push
pop
mov
das
jns
hlt
push
test
jo
mov
mov
xchg
imul
rcr
mov
xlat
push
mov
inc
jnp
xchg
xor
mov
lea
cmpsl
pop
xor
ss
sbb
push
mov
sub
xchg
enter
dec
mov
adc
popa
test
pop
and
jns
out
pop
add
sbb
rcll
into
addr16
xlat
push
lods
mov
aaa
mov
jge
test
cmpsb
repz
adc
cmp
lret
mov
push
fsubl
push
cmp
repz
push
out
les
xchg
mov
push
pop
jne
dec
jnp
dec
mov
pusha
mov
xchg
jb
adc
outsl
sysret
in
dec
mov
shl
add
xor
sbb
fldt
xchg
in
in
aas
popf
js
fsubr
jnp
sti
fwait
sarb
and
xchg
lahf
jecxz
sbbl
and
jp
lret
xor
int3
cmc
mov
push
faddl
je
pause
or
fisubs
push
movsb
push
imul
lcall
aad
mov
add
mov
cmp
or
push
notb
sub
lock
cmp
lahf
adc
iret
test
insb
call
push
loopne
adcb
outsl
sbb
fiadds
adcb
out
mov
test
daa
out
push
xor
mov
mov
dec
mov
push
cltd
dec
jmp
mov
je
std
aas
xchg
sbb
ret
and
adc
pop
pop
and
push
push
int3
pop
ret
add
fstps
lcall
aas
and
sub
out
rcll
add
and
rcrl
shlb
out
clc
outsl
stos
loope
or
int
xlat
jnp
and
cmp
pop
aaa
jne
test
cmp
push
inc
mov
cmp
test
xchg
nop
scas
rolb
sbb
mov
lods
mov
push
roll
jl
pop
nop
out
andb
scas
add
jecxz
sub
addr16
xchg
xchg
xor
mov
test
jle,pt
push
loop
push
mov
adc
add
adc
bound
mov
es
dec
bound
mov
and
int3
dec
cmp
scas
loope
sub
xchg
adc
sbb
mov
push
icebp
scas
mov
repz
pop
push
fisubrl
in
push
sbb
mov
mov
leave
ja
push
cmpsl
mov
and
or
adc
jo
lret
xchg
mov
dec
rcll
and
jb
jbe
scas
and
pop
and
jbe
pop
inc
jmp
sub
push
dec
negl
xor
lret
cs
fsubp
movsl
dec
adc
lods
fsubrs
mov
out
lret
sbb
mov
sub
lret
jmp
sub
mov
outsb
add
or
push
aad
cmpsb
xchg
add
and
imul
jge
aaa
imul
lret
dec
imul
jbe
cmpsl
sbb
push
mov
sbb
mov
mov
int
test
out
lret
xchg
aad
add
mov
xchg
sub
cmpsl
es
jecxz
mov
dec
push
xor
push
cs
cwtl
pop
dec
enter
cmp
dec
stos
imul
xchg
dec
pop
arpl
shrb
ret
imul
mov
shlb
pop
mov
hlt
sub
lods
gs
bound
inc
xlat
mov
mov
icebp
push
inc
add
scas
push
pop
sbb
mov
sarl
pop
dec
inc
pusha
iret
mov
ss
sti
xor
addr16
ja
popf
fiaddl
cwtl
dec
rorl
popf
loop
fildll
rol
jne
cmp
imul
xchg
rclb
xchg
xchg
mov
or
mov
mov
inc
cli
cmpsb
sub
fdivrp
pushf
inc
and
gs
pop
mov
push
leave
decl
sub
pop
mov
jnp
loop
into
pop
inc
mov
cmpsl
sub
xor
add
sbb
pop
call
mov
hlt
xor
arpl
std
daa
lret
test
adc
test
in
mov
js
sarl
jb
cmp
and
outsl
inc
sahf
movsl
movsl
sub
jnp
out
push
fcmovnu
xchg
mov
cmpsb
dec
mov
adc
test
and
pusha
pop
jnp
add
cmp
aas
lcall
lds
ljmp
cmp
push
icebp
and
cltd
movsl
xchg
imul
push
dec
stos
sbb
jecxz
imul
jbe
stos
out
test
in
dec
sub
inc
in
popa
xor
adc
mov
fsubp
mov
and
xchg
or
push
pop
cmp
out
gs
xor
enter
pop
aas
test
insb
xchg
loope
lret
lods
cld
xchg
in
fistps
iret
int
neg
jl
cmpsb
sbb
jmp
push
pop
es
lock
dec
es
cltd
adc
cmp
les
sub
xchg
insb
pop
outsl
jns
bound
dec
jecxz
cmp
sbb
pop
mov
adc
js
push
jo
ljmp
mov
clc
es
movsb
dec
movsl
cmp
add
repnz
push
lahf
cmp
dec
xor
add
mov
sub
insb
hlt
sub
sbb
sub
rolb
mov
std
add
icebp
decb
push
pop
jmp
sub
cmp
xchg
subb
aad
xchg
pop
push
inc
lret
dec
and
aad
mov
mov
test
mov
mov
or
loope
out
movsl
cwtl
or
test
mov
push
sahf
imul
lock
shr
pop
mov
inc
and
dec
push
lret
sub
cmp
sub
mov
mov
adc
insl
dec
or
inc
in
fs
xlat
aas
sbb
xchg
sbb
insb
imul
mov
int
cmpsw
fbstp
mov
ret
ljmp
je
arpl
and
xchg
xor
dec
sub
out
lds
addr16
sub
push
cmp
jl
or
fistps
push
lahf
int3
mov
mov
cmc
clc
sub
lock
push
mov
cmc
and
xor
out
jecxz
dec
cltd
dec
or
or
lock
inc
shrb
out
cmp
inc
jae
push
add
jbe
dec
xchg
add
filds
mov
dec
push
pop
mov
and
andb
inc
out
mov
lcall
mov
jae
dec
bound
xchg
jo
cmp
fwait
imul
or
cld
jno
mov
sar
mov
sub
fists
cmp
daa
test
shrb
jbe
push
stos
imul
pop
xor
cmpsb
jle
inc
and
aad
fiaddl
mov
stos
inc
or
mov
or
adc
mov
cld
outsb
xor
addr16
movsl
lea
mov
dec
jp
jle
jp
inc
call
nop
pusha
xor
popf
inc
popa
jo
in
punpckhwd
test
arpl
or
sub
repz
test
fiadds
sbb
outsl
clc
xlat
push
push
imul
mov
dec
stc
mov
mov
aaa
dec
aas
sub
lahf
testl
adc
idiv
ljmp
sbb
add
imul
in
es
iret
add
hlt
jno
mov
add
mov
inc
jne
xchg
nop
add
js
dec
daa
push
popa
sarl
sub
setp
imul
stc
mov
cmp
adc
or
or
aad
in
je
push
lcall
dec
or
incb
adc
cltd
mov
sub
and
outsl
or
pop
leave
and
mov
std
adc
mov
lret
jge
out
dec
inc
into
pop
lods
xor
dec
add
pop
or
jb
cmp
add
adc
ja
pop
int3
loope
shrl
das
jecxz
mov
and
ficoms
jmp
pop
xchg
icebp
sub
or
hlt
rcrb
push
jae
test
sub
cs
sahf
fildl
dec
js
push
mov
cmc
push
mov
sub
cmp
es
or
adc
jo
fcompl
mov
inc
popf
jle
xor
lods
pusha
fcoml
sbb
pop
jle
cltd
int3
in
fbld
mov
and
push
cmp
stos
xor
cmp
mov
adcb
mov
adc
scas
popf
loopne
jmp
jp
or
cs
jne
decl
mov
dec
push
repnz
cmp
clc
daa
jb
int
icebp
adc
jb
testl
cmp
mov
in
sub
sbb
pop
bound
inc
xchg
dec
mov
add
jae
mov
cli
adc
push
jge
pop
repz
jg
loope
dec
scas
insb
push
or
xchg
xor
mov
jno,pn
adc
sbb
mov
xor
lcall
or
lahf
sub
popf
xor
and
das
lahf
in
and
push
in
mov
shrb
fnstsw
jl,pt
xchg
jne
int
and
int
mov
mov
xchg
sbb
push
insb
xlat
jg
mov
lret
les
fiaddl
repnz
xlat
xlat
sub
mov
sbb
jns
jp
xchg
and
fwait
xor
push
or
sarb
je
jo
scas
adc
out
push
sub
es
or
add
lret
cmc
aas
or
pop
je
dec
xchg
fsts
fs
xchg
pop
and
lcall
add
test
ja
out
sub
fimuls
dec
mov
stos
fidivrl
ss
mov
fists
inc
cmpsb
outsl
mov
je
mov
in
stc
pop
add
pop
inc
rol
iret
ds
push
jne
mov
mov
or
inc
je
dec
adc
adc
pop
sbb
mov
out
push
sbb
mov
jne
sahf
rcll
dec
add
into
jg
mov
addl
pop
jae
out
sbb
jmp
xchg
ds
cmpsb
popa
jne
lods
push
jo
sbb
adc
jae
inc
fidivrl
cs
cmpsl
add
dec
push
ja
jo
cltd
iret
adc
pop
mov
stos
iret
jle
dec
leave
add
and
iret
out
sub
and
dec
mov
cmp
jns
movsl
mov
mov
out
scas
sarl
cmc
pop
aam
pusha
pop
inc
adc
pop
aad
mov
mov
scas
jo
subl
inc
dec
sbb
push
fcompl
icebp
sbb
into
or
adc
lahf
mov
mov
xlat
fidivl
stc
cmp
pushf
fcomps
push
ss
or
sahf
push
ret
jg
jb
out
lds
in
fisttpl
inc
mov
lods
ds
imul
inc
leave
je
fstps
or
xchg
xlat
fcoml
aas
xchg
jg
push
cmp
fdivrl
jbe
mov
adc
gs
mov
mov
lret
pusha
pushf
shlb
rorb
jmp
sub
sbb
sbb
dec
call
jge
and
inc
lret
repnz
lock
inc
cmp
fwait
jb
jl
test
stos
xchg
mov
push
test
out
pop
fs
shll
mov
jns
mov
mov
xor
pop
push
loopne
inc
xor
cmp
fldenv
xchg
mov
repz
repnz
lcall
lcall
insb
add
scas
jge
in
int
sbb
jno
cmp
insb
sbb
jge
dec
cwtl
or
dec
adc
cli
les
flds
xor
jbe
cmc
sbb
jmp
int
bound
and
fistpl
les
pop
xchg
shufps
pop
outsb
cltd
lds
lret
push
cmpsb
lods
cli
ret
mov
inc
xor
movsb
push
sub
orb
cs
jns
xchg
nop
movsb
ficoms
or
es
fnstcw
out
push
mov
addr16
sbb
jle
lea
sti
or
je
jbe
sub
push
les
fwait
push
mov
mov
dec
popf
push
jb
lret
std
outsl
aad
pop
ljmp
mov
pop
xor
mov
mov
adc
xchg
in
imul
imul
xchg
add
sub
push
daa
push
dec
inc
push
gs
hlt
shrl
adc
sarl
push
or
push
inc
cmp
cmpsb
mov
inc
stos
leave
jmp
arpl
shl
inc
mov
loopne
out
js
pop
imul
cli
mov
or
xor
mov
repz
jbe
mov
loop
xorl
pop
pop
inc
mov
and
push
cltd
hlt
icebp
mov
ret
mov
mov
or
mov
xor
cmp
or
cmp
jno
movsb
cmpsb
lods
call
dec
repnz
mov
push
push
divb
ret
clc
hlt
out
inc
sbb
in
mov
outsb
addr16
cltd
nop
sub
nop
jnp
xchg
scas
loope
mov
pop
mov
add
xchg
mov
pop
lahf
jmp
mov
or
adcb
mov
rol
test
lret
mov
jnp
imul
imul
xor
push
jnp
cmpsl
pop
out
cmp
cld
lods
jl
fs
pop
icebp
xchg
xchg
mov
dec
xchg
jb
rorb
push
or
mov
orb
jmp
jns
into
fldcw
lahf
xchg
out
icebp
subb
pop
mov
mov
cmp
mov
sub
dec
jmp
mov
ret
aas
push
testb
inc
cmp
je
es
cltd
ja
test
pop
jle
cmc
sbb
pop
fildl
sbb
mov
xor
scas
sub
mov
std
enter
sbb
jg
dec
outsb
and
xchg
icebp
sti
sahf
js
es
cmpsl
xchg
repz
in
in
push
sub
cmc
mov
push
lcall
pop
adc
mov
div
or
pushf
pop
xor
jmp
jg
arpl
not
sub
gs
or
and
jl
jo
idiv
into
adc
es
push
sub
mov
xchg
mov
test
pop
mov
sub
lcall
sbb
leave
sbb
adc
dec
mov
mov
pop
dec
xchg
xchg
push
ret
cld
jge
repz
pop
pushf
insl
lock
cli
mov
dec
adc
iret
in
jbe
mov
jns
insl
cmp
jp
lret
mov
cli
insb
sbb
pop
mov
pop
incl
mov
imul
adc
mov
data16
test
jb
aad
out
aam
jp
dec
out
daa
or
sub
pop
ret
xchg
mov
cmpsb
stos
and
in
and
lret
or
into
add
inc
mov
pop
jge
mov
inc
mov
xor
and
xor
mov
lock
adc
mov
pop
sub
push
test
add
mov
pop
ret
loopne
dec
out
pop
push
sub
in
lfs
js
push
sbb
sahf
cmp
imul
daa
shll
dec
pop
fcoms
pop
or
xchg
mov
or
adc
jecxz
popa
push
xor
sub
jb
stos
and
pop
push
into
pop
loopne
in
mov
mov
push
push
outsb
push
push
add
data16
or
sub
inc
cwtl
mov
mov
pop
sub
sbb
gs
ja
pop
add
mov
jo
cmp
icebp
jecxz
or
jp
xchg
lcall
pop
mov
addl
mov
stos
or
mov
xor
push
inc
imul
loop
stc
imul
pop
mov
jo
lds
insb
add
pop
push
loope
and
jp
sbb
sbb
xchg
dec
add
shlb
push
lock
adc
push
xor
jmp
pop
adc
inc
icebp
mov
inc
ret
mov
push
mov
push
pop
test
imul
test
mov
enter
xor
ljmp
sbb
cli
insb
pop
sbb
push
pop
mov
pop
jae
std
fsubrl
xchg
xor
iret
xchg
sbb
out
test
adc
cmp
and
dec
imul
fwait
mov
push
fnstcw
mov
lret
push
icebp
or
aas
fs
dec
mov
or
test
mov
sub
insb
jo
inc
repz
popa
fldl
int
in
mov
ret
fisttpl
cmpsb
dec
jo
stc
iret
push
cbtw
push
fcomps
xchg
adcb
pop
ljmp
loope
cld
les
inc
pop
cmp
gs
dec
xchg
shll
into
push
and
add
shlb
add
xchg
sahf
fstps
dec
cld
mov
mov
insl
int3
test
test
mov
das
or
repz
cwtl
out
pop
add
push
xor
pop
xchg
mov
imul
imul
cmpsl
clc
push
orl
mov
out
cmp
lods
mov
pop
mov
push
sbbb
or
sahf
dec
in
clc
test
jns
sbb
std
sbb
cltd
andl
adc
sub
int
adc
xor
push
sbb
jb
add
mov
scas
repz
aam
jnp
lahf
fnsave
or
test
xchg
aam
cmpb
in
jg
xchg
sub
or
xlat
lea
cmp
dec
inc
sub
ja
jae
xor
and
mov
outsb
mov
jp
ds
push
les
or
cmp
leave
out
roll
outsb
cli
int
cmp
das
xlat
xchg
sub
add
jae
inc
and
cmpsb
test
mov
rcl
cmpsl
sbb
js
inc
lds
cli
pop
lret
rolb
fnsave
or
xor
mov
jb
cmp
jle
ljmp
and
sahf
pop
bound
movsb
and
sbb
insb
cmc
jp
cs
jl
dec
pusha
sahf
mov
je
xor
cs
aaa
dec
out
pop
mov
mov
stos
fwait
mov
pop
mov
lods
cmc
pop
mov
fdivrl
mov
idivb
pop
jnp
push
pop
daa
adc
push
and
dec
cmpsl
ljmp
in
sub
inc
cmpsb
sbb
jg
pop
add
imul
insl
ja
icebp
jbe
mov
ds
inc
sbbl
cli
ss
inc
inc
push
mov
aas
xchg
dec
ret
mov
add
dec
push
xchg
int3
shll
aas
mov
xchg
adcb
imul
cwtl
mov
cltd
mov
insl
mov
movsl
stos
scas
cmp
dec
mov
arpl
adc
fucomi
lret
inc
cmp
dec
mov
pop
mov
js
shll
idivb
adc
lods
jns
lods
adc
bound
lcall
pop
xchg
sub
mov
push
mov
ret
in
push
cs
pop
adc
pusha
rolb
stos
std
jno
lods
icebp
in
cld
imul
test
insl
ds
adc
and
xor
mov
int
and
iret
outsb
ret
push
fwait
movsb
mov
lds
cwtl
or
sub
mov
xchg
push
scas
push
xchg
lret
inc
lds
insb
fmuls
ljmp
or
push
push
test
dec
adc
data16
pop
push
cmpsl
jnp
mov
sbb
fcoml
insb
sub
std
xchg
mov
je
inc
cmp
inc
cmp
movsb
sbb
or
shrl
popa
xchg
pushf
stos
fstps
mov
out
mov
pop
push
not
or
add
fbld
adc
inc
addb
addl
cld
lods
imul
xchg
or
jmp
cwtl
hlt
loop
ljmp
jae
mov
orb
mov
das
arpl
adc
sbb
adc
mov
and
stc
in
imul
imul
mov
negb
xor
insl
add
scas
jle
pop
push
adc
out
add
lret
clc
test
hlt
sbb
mov
popf
push
or
movsl
movsb
xor
cmp
sbb
roll
push
stc
mov
arpl
mov
sbbb
jb
xchg
add
bound
cwtl
ret
lea
arpl
cmp
aad
jo
push
mov
shlb
sbb
in
mov
inc
sbb
cmp
xchg
lds
jle
cwtl
icebp
jmp
xchg
push
pushf
int3
hlt
jae
push
imul
and
dec
pop
cmp
pop
inc
scas
push
dec
cwtl
lock
jge
shll
and
inc
int
or
push
movsb
test
fs
ret
xor
xchg
pushf
popa
lcall
enter
dec
jnp
inc
pop
inc
push
pusha
mov
mov
jp
inc
cmp
sahf
out
pop
pop
mov
pop
fnstcw
mov
scas
inc
xchg
std
xchg
and
das
sbb
jmp
rcrb
call
mov
push
mov
inc
lock
push
insl
cmp
outsb
sarl
push
scas
mov
jecxz
notl
in
daa
mov
pop
daa
fucom
jb
hlt
pusha
test
bound
adc
cmp
and
ret
jo
dec
adc
sub
sub
dec
std
inc
dec
adc
enter
cmp
xor
jecxz
mov
test
je
sub
adc
push
push
mov
pop
jge
push
dec
pop
scas
sub
push
lahf
cld
jb
adcl
jae
leave
push
pop
js
dec
das
and
and
rol
push
sbb
xchg
push
sbb
test
int
loopne
fucomip
cmc
data16
cwtl
adc
jno
inc
aam
xchg
mov
js
in
fcmovne
lret
lock
hlt
mov
ljmp
popf
lcall
rcrl
pop
mov
or
xor
rol
dec
fdivs
add
mov
ret
mov
cmp
ljmp
jns
dec
popa
xor
dec
es
inc
fsubp
push
add
adc
ds
pop
iret
sub
xchg
lock
sbb
ljmp
mov
sub
lods
push
fmuls
lea
mov
cld
inc
arpl
cltd
mov
pusha
cs
dec
shl
add
andl
mov
jl,pt
fsubl
fldcw
inc
mov
mov
cmp
hlt
icebp
aaa
push
mov
cmpsb
dec
call
fst
ret
push
in
mov
push
xchg
cmc
xchg
mov
jns
insl
push
xorl
into
push
mov
jmp
xchg
out
and
pop
sarb
pavgw
jne
push
fcomps
jb
imul
leave
mov
stc
xor
popa
lods
mov
jno
in
xchg
mov
xorb
mov
and
xlat
dec
sahf
fs
out
pop
mov
mov
mov
testb
shl
and
mov
sahf
cmp
or
dec
mov
jno
dec
in
cmpsb
aad
mov
lcall
mov
sub
lret
push
mov
mov
test
fldl
pop
jle
outsl
das
mov
icebp
add
popa
push
push
pop
and
js
into
push
and
jno
fistps
fdivl
jecxz
xor
sub
in
inc
ljmp
in
cmp
shlb
jp
ret
xchg
or
ljmp
fistpl
pop
push
sbb
mov
pop
add
add
jo
rcrl
sbb
enter
push
lods
jne
dec
jns
fsubs
rclb
cmc
imul
adc
dec
in
in
and
test
in
out
or
mov
or
jp
or
mov
mov
notl
mov
push
inc
xchg
mov
scas
nop
out
int3
jno
sub
and
test
cmpsb
stc
in
cmp
or
pusha
dec
mov
hlt
ds
and
into
inc
bound
mov
add
test
adc
or
push
movsl
adc
mov
adc
int
sub
pop
fidivrs
inc
pop
and
clc
adc
and
push
jbe
cmp
cmp
lahf
divb
sbb
in
hlt
jbe
outsl
jnp
in
movsb
sti
enter
mov
and
mov
xor
xor
or
in
mov
es
xchg
xchg
and
xchg
or
inc
testb
pop
jg
and
shl
cmpsl
int
xchg
or
out
jmp
sbb
nop
outsl
js
ret
les
repnz
or
lahf
jbe
test
push
cltd
sahf
cmp
add
call
aam
sbb
sub
or
mov
add
push
mov
mov
into
sub
adc
jno
dec
ja
sahf
notl
or
sub
sub
adc
repz
lods
push
mov
xchg
push
lcall
sub
inc
lds
orb
sbb
in
push
sbb
pop
in
call
sbb
ds
mov
out
ret
sub
out
or
push
jg
out
mov
les
out
sub
jl
sbb
jnp
push
adc
add
jbe
inc
bound
test
xor
cwtl
push
jle
cmp
pop
jo
loope,pn
lods
cld
xchg
popf
mov
mov
xor
dec
add
sbb
dec
mov
inc
or
ja
pop
xchg
lods
mov
push
inc
hlt
shlb
pop
icebp
outsb
sti
and
mov
pop
rcrl
in
mov
xchg
mov
jecxz
inc
pusha
leave
pop
adc
sbbl
outsl
enter
jbe
test
xchg
sub
sbb
fldt
inc
jae
pushf
shlb
fiadds
and
lea
sub
je
and
adc
sbb
xchg
fildll
and
push
pop
xor
inc
inc
lds
aad
inc
xchg
fsts
enter
pop
aam
insb
jb
popf
and
mov
test
aad
sti
ret
and
pop
sbb
mov
xor
dec
stos
dec
and
daa
repz
adc
int
int3
test
testl
jp
fdivs
cmc
repz
les
iret
outsl
mov
es
jg
leave
ds
inc
mov
and
pop
daa
ss
pop
xchg
mov
xor
ss
daa
xor
repnz
or
inc
sar
lahf
lcall
popf
add
sarl
cmp
pop
dec
leave
jmp
cmp
jp
or
ret
cmp
xchg
mov
inc
and
nop
and
xchg
rolb
sub
fiaddl
sarb
xor
subb
pop
mov
jle
testl
aam
mov
lea
xchg
or
xchg
jae
lock
xchg
cld
pop
pop
jno
push
or
xorb
lret
cmp
inc
xchg
leave
or
enter
imul
lret
stc
cmpsl
fistl
in
sbb
fwait
pop
lret
jmp
cmp
imulb
mov
push
push
imul
stos
sub
push
shll
das
jne
int3
bound
in
in
adc
sub
lds
xchg
xor
mov
push
jecxz
loopne
std
lret
inc
stc
test
in
fneni(8087
dec
sub
mov
das
xor
mov
add
push
test
das
sahf
adcb
test
or
jnp,pn
jecxz
mov
outsl
jmp
imul
and
popf
inc
cmp
imul
sub
js
enter
testb
je
lahf
fld1
mov
dec
push
sub
or
add
sbb
push
loope
pop
and
push
rolb
nop
repnz
inc
in
arpl
push
int
lret
add
xor
leave
clc
ljmp
and
ja
mov
pop
fucom
icebp
pop
lock
push
push
adc
inc
pop
repnz
aas
fldt
call
jge
sbb
popa
fnsave
test
or
inc
and
das
data16
loope
imul
xchg
jge
sarl
add
test
jle
sbb
push
popa
scas
ret
or
xorb
es
sbb
insl
pop
imul
lcall
adc
and
cwtl
fdivr
push
js
in
mov
xor
or
and
dec
call
pop
fbstp
test
or
jle
pop
inc
ja
int3
insb
jne
mov
fstpt
or
movsl
xor
jp
popa
popf
inc
test
cld
dec
jae
es
fisttpl
lock
jmp
shr
stos
outsb
pop
arpl
push
cmpsb
jae
sub
inc
inc
xor
ret
mov
mov
jle
cmp
xchg
and
into
leave
xor
frstor
mov
pop
jp
out
dec
sbb
inc
pop
adc
pop
and
mov
jl
xchg
jae
pop
pop
jae
xchg
add
arpl
mov
mov
push
mov
into
xlat
lcall
shrb
repnz
lds
mov
jae
cmpsl
cmp
ljmp
loopne
mov
insl
sbb
popf
fcompl
xchg
out
mov
out
fwait
pop
dec
pop
fldenv
movsl
xchg
mov
divl
scas
push
cld
sub
ret
mov
jge
test
cmp
xlat
pop
dec
sbb
jnp
into
add
fildl
rcll
das
adc
mov
imul
push
in
int
add
adc
xchg
jo
adc
out
push
sub
push
pop
inc
sub
fnstcw
test
add
idiv
nop
sbb
pushf
fistpll
fbstp
outsb
int
or
xchg
cld
mov
xor
sub
sbb
fadds
push
jge
xchg
ljmp
lock
mov
mov
add
lock
jns
mov
ret
push
jmp
es
mov
das
insb
test
cmpsl
and
pop
or
mov
mov
mov
jnp
pop
mov
sub
fsubs
cmp
imul
loopne
rol
hlt
inc
fs
or
mov
insl
sti
mov
lahf
out
in
out
mov
xchg
jb
dec
add
shrl
ficoml
pop
sub
insb
scas
xchg
mov
jecxz
mov
pop
add
inc
addr16
rol
es
fsubl
mov
sub
xchg
in
push
mov
into
push
inc
add
inc
sub
and
xor
and
and
xor
leave
mov
fdivrp
insb
mov
jne
fisttpl
pop
add
cmp
sub
inc
hlt
push
cli
jne
xchg
out
inc
cs
cmp
mov
mul
ds
mov
sahf
loope
cwtl
push
iret
adc
xchg
int
cld
xchg
jle
xor
jmp
out
test
sub
cld
hlt
int
push
mov
fisttpll
jge
push
push
leave
scas
or
cs
clc
xchg
imul
mov
push
jo
xchg
imul
repnz
addb
test
std
ret
jbe
inc
shrl
cmpsb
mov
ret
mov
imul
outsl
in
adc
pop
call
lock
fldt
mov
cmpsb
test
jbe
daa
dec
jle
jecxz
jmp
in
or
sub
gs
cli
in
inc
push
sbb
imul
loopne
bound
outsb
xor
add
dec
pop
inc
push
movsl
fs
push
leave
insb
shrb
fcmovnb
pop
fcompl
xchg
mov
addb
push
lock
or
adc
jo
mov
lahf
pop
in
cwtl
loop
xor
push
cmc
daa
push
push
inc
loop
xor
xchg
mov
adc
daa
pop
inc
xchg
inc
popa
fdivrs
sub
pop
faddp
or
in
sahf
jne
sub
repz
sbb
and
call
jns
mov
cmp
out
je
dec
push
lret
add
sub
ja
iret
lea
push
sbb
pop
inc
orl
leave
or
in
movsb
ret
sti
ret
rolb
popf
ja
scas
mov
lret
push
pop
xor
pop
push
out
pop
test
push
jae
xchg
lds
mov
jbe
sbb
inc
xchg
into
sbb
xchg
adc
mov
movsl
cmp
icebp
ja
ss
cmp
and
and
cmp
mov
inc
jp
adc
mov
fs
shr
xchg
add
loope
add
cwtl
ret
imul
fdivp
lret
jmp
mov
push
mov
rorb
xor
xchg
push
stc
int
icebp
imul
loop
dec
es
int
dec
xlat
in
shlb
pop
idivb
pushf
test
rol
cmp
daa
fcmovne
adc
int3
inc
bnd
pushf
lahf
repz
outsl
push
pop
jo
and
cmp
inc
popa
pop
clc
lret
dec
dec
out
cmp
test
clc
lods
mov
mov
cmp
loop
lret
cwtl
pop
in
dec
dec
push
int
repz
pop
aas
mov
mov
lcall
js
in
gs
stos
pusha
outsb
pop
xchg
mov
call
adc
mov
jae
sbb
sbbb
in
dec
sub
in
sub
fdiv
mov
hlt
cmc
adc
ds
repnz
lret
mov
cmp
mov
aam
xchg
xor
mov
adc
cmpsb
jl
and
jecxz
sbb
test
push
mov
mov
sti
bnd
push
ds
ficomps
insl
jnp
mov
aam
and
popl
mov
aam
cmp
in
push
and
rolb
inc
sbb
iret
dec
rolb
xchg
mov
mov
jae
cli
fnstenv
fcompl
into
pushf
mul
shl
orb
mov
ljmp
push
xor
sub
dec
push
push
mov
add
cli
sti
mov
sub
inc
jp
jecxz
cltd
std
inc
xchg
shll
cwtl
adc
jge
push
cs
and
repnz
cmp
daa
inc
xchg
fistps
ja
ret
inc
imul
cmc
add
sahf
mov
in
sub
mov
push
adc
add
jg
and
xor
stos
sbb
jns
movsl
into
loope
sbb
insl
test
pop
and
add
shrb
mov
js
aaa
sub
pop
loope
jmp
add
inc
push
xor
push
lods
js
inc
sub
aam
inc
dec
lret
aad
jb
adc
repz
jo
jo
adc
mov
in
and
cmp
faddl
push
imul
jle
outsb
inc
xchg
out
xchg
popf
popa
or
nop
fyl2x
movsb
and
sarb
sbb
xor
inc
mov
and
leave
add
inc
inc
xor
xchg
sub
mov
sub
dec
jb
test
lds
aaa
sarb
ljmp
push
dec
inc
push
sub
mov
jnp
add
rcrl
sar
aaa
and
cmpsl
and
sub
add
mov
inc
mov
pop
inc
gs
push
push
mov
lcall
jecxz
jecxz
test
adc
pushf
xorl
push
mov
out
push
out
xchg
dec
repnz
xor
xor
inc
cmp
xchg
repnz
sub
negl
in
push
jne
aam
xor
inc
xor
cmp
in
pop
jle
je
out
aam
pop
mov
scas
mov
xchg
sub
xor
movsl
fnstenv
out
mov
paddw
mov
ss
and
mov
inc
xchg
push
inc
pop
mov
pop
xor
and
adc
mov
movsb
or
movsb
cmp
mov
jns
xchg
and
xor
fistps
adc
pushf
fwait
sbb
xor
push
dec
cwtl
xor
popa
mov
push
sbb
or
ljmp
adc
pop
push
rcll
ret
mov
std
xor
filds
pop
mov
out
mulb
out
or
sub
cmp
pushf
push
jno
xor
es
out
pop
mov
push
mov
icebp
add
mov
cmc
int
repnz
out
lret
arpl
xor
mull
jl
pop
sbb
das
mov
adc
stc
push
pop
adc
push
cwtl
sbb
test
or
push
test
inc
push
mov
jae
addr16
jge
cmp
mov
ret
popa
mov
gs
pop
loop
xchg
cmp
pop
shrl
cmp
jne
inc
sub
lcall
jnp
sub
push
test
push
push
dec
and
test
pop
in
hlt
xchg
sub
mov
jmp
arpl
push
pop
mov
in
fs
test
test
mov
sub
iret
mov
notb
xchg
mov
imul
fists
bound
push
xlat
inc
inc
jno
sub
jl
push
mov
xor
mov
pop
test
and
inc
mov
sub
xorl
pusha
xor
daa
icebp
int3
dec
int
add
test
inc
jns
pop
out
cmp
or
repnz
fimuls
sub
scas
lds
jg
mov
lcall
jnp
movsl
loop
popa
mov
sbb
mov
xor
pop
inc
and
pop
in
pushf
ds
js
inc
push
add
push
in
fstps
adc
jae
mov
or
and
arpl
imul
mov
jmp
push
sub
fdivl
jae
sbb
xchg
aaa
dec
sbb
cmpsl
mov
dec
lret
pop
mov
outsl
xchg
sbb
add
push
movsl
scas
hlt
arpl
bound
movsl
insb
or
lods
mov
aam
fbstp
lock
cmc
pop
inc
mov
lds
lock
cmpsb
leave
or
sarb
fwait
cmp
mov
addr16
std
dec
add
xchg
add
sti
ret
dec
int3
push
push
jmp
mov
jge
push
xchg
scas
mov
stos
sbb
lea
pop
add
push
addr16
sbb
inc
aad
popa
dec
lahf
shll
sbb
in
sarb
insl
xchg
inc
sarl
push
mov
scas
mov
int3
cmc
les
pusha
xor
in
ret
jb
and
fstpl
fsubrl
scas
ds
dec
gs
adc
ja
nop
lsl
adc
das
xor
daa
shl
sbb
jb
mov
sbb
adc
dec
jp
nop
pusha
jbe
pushf
icebp
cs
sub
mov
jmp
mov
popl
xor
mov
sbb
dec
loope
call
shrl
pop
sub
scas
mov
test
push
insb
mov
mov
orb
mov
cld
xchg
or
jnp
arpl
lcall
enter
adc
das
and
shll
in
mov
dec
jbe
add
leave
inc
fbstp
pop
ret
mov
shlb
lret
lret
mov
dec
je
repnz
pop
adc
subl
adc
xchg
out
adc
lods
scas
or
les
cmp
in
jns
push
mov
cmp
xchg
sarb
jl
sbb
or
orl
mov
aam
scas
outsl
jbe
aaa
dec
outsb
call
in
lea
mov
mov
loop
incl
lods
xor
aaa
push
mov
lret
les
addr16
mov
or
add
enter
std
daa
divl
mov
popf
and
int3
push
aad
inc
sti
dec
inc
ja
adc
hlt
jg
inc
and
scas
xchg
jns
addr16
xchg
push
mov
add
rcrl
mov
or
gs
cmp
mov
xorb
xchg
cmp
iret
orb
cmp
mov
adc
ret
mov
adc
scas
mov
sbb
xchg
xchg
jns
stos
int3
das
xchg
negb
cltd
sbb
and
adc
scas
insb
xchg
je
jno
pop
out
xchg
les
inc
lahf
mov
dec
xor
mov
xor
mov
fsts
push
pop
fisubrs
mov
mov
xor
or
push
test
je
add
add
test
test
in
aaa
rcrb
or
das
js
movsb
ljmp
add
mov
dec
fdivrs
jne
fwait
jbe
lcall
fnstenv
mov
sub
or
pushf
int
pushf
mov
ret
xchg
push
cmpsl
lds
xchg
mov
hlt
cld
into
inc
add
aaa
sub
ljmp
sahf
rolb
cli
cld
and
xchg
mov
or
test
and
insl
add
cmp
pop
fiaddl
mov
dec
mov
lods
push
cmc
pop
pop
dec
scas
sub
jno
lret
rcrb
mov
jl
scas
mov
xchg
cmpsl
push
mov
mov
dec
mov
fnstenv
cmc
mov
mov
dec
hlt
subl
jp
jp
mov
loopne
outsb
adc
adc
push
push
mov
cs
pop
notrack
loop
and
jo
lret
jo
out
mov
jno
xchg
mov
mov
inc
add
cli
jne
orb
imul
cmp
jmp
loopne
popa
es
addb
mov
insb
mov
lods
inc
mov
mov
or
jnp
test
and
jbe
dec
scas
and
fildl
jb
adc
jmp
loop
inc
jnp
lahf
and
test
popa
lock
push
sbb
inc
push
xor
inc
imul
scas
mov
push
cmc
inc
push
sbb
xchg
movsb
lods
test
iret
mov
xchg
lds
mul
mov
mov
xor
mov
sbb
add
jb
inc
or
test
xchg
ss
ds
xor
cmp
sarl
add
mov
or
pop
rcl
into
and
imul
fwait
cmpsb
out
xchg
push
pop
lds
sub
outsl
dec
sbb
cmp
mov
out
aas
inc
popf
jns
push
call
xor
sub
popf
push
subl
add
mov
fcmovnb
sbb
mov
cmc
pop
jno
sahf
adc
jecxz
inc
sbb
sbb
dec
mov
repz
repnz
repnz
repnz
sbb
xchg
mov
inc
jle
in
jno
mov
iret
jp
hlt
push
mov
insb
pusha
sub
or
scas
pop
hlt
pusha
lds
cmp
or
sbb
sbb
inc
pushf
fldenv
popf
test
mov
lcall
rorl
mov
dec
rcr
or
dec
stc
pop
cmp
mov
movb
mov
and
xor
leave
lea
or
jecxz
jbe
jb
iret
push
add
pop
cmp
and
xchg
mov
cli
aad
mov
in
fwait
mov
nop
das
adc
lods
mov
rcr
rclb
fisttpl
or
movsl
dec
iret
aaa
mov
pop
adc
mov
push
lahf
cmc
jl
mov
xlat
jge
adcb
lock
jnp
xor
dec
mov
push
xor
fxam
sub
xchg
daa
loope
es
mov
dec
fisttpl
pop
out
shlb
sub
mulb
fwait
mov
mov
cmp
or
dec
jnp
lods
inc
scas
movw
mov
mov
shrb
inc
out
popf
out
mov
xchg
mov
jnp
jno
fsubl
sarb
es
xorb
popf
ret
data16
pop
in
push
inc
stos
clc
sti
push
dec
inc
mov
fcomps
mov
or
xchg
add
push
xchg
mov
aad
and
sub
dec
pop
mov
shlb
add
fcoml
inc
or
rclb
out
outsb
cmpsl
add
pop
loope
mov
idivl
clc
lahf
adc
inc
mov
mov
scas
mov
clc
jne
cmp
insl
dec
mov
out
fistpl
mov
mov
fadd
fs
mov
pop
int3
push
cmpsl
jl
pop
cmp
inc
mov
fsts
xchg
lods
xchg
sbb
pop
gs
cmpsb
sbb
lods
das
pop
inc
mov
xor
mov
call
jns
fisttpl
fcmovbe
pushf
movsb
fldenv
aad
push
repnz
adc
jg
push
orl
jns
jp
insl
shlb
sbb
cli
fiadds
fcom
dec
and
dec
outsb
adc
mov
ds
sbb
imul
sub
mov
push
jp
cmp
roll
sti
mov
popl
push
cmpsb
dec
fldl
cmp
mov
push
pop
popa
jb
lods
jbe
inc
in
cli
add
inc
stc
jbe
dec
stos
mov
hlt
adc
jp
outsb
inc
stc
adc
pop
das
stc
jae
ss
fwait
cmp
jns
notl
xchg
ret
fsubs
mov
push
mov
out
call
xor
pop
dec
adc
push
push
cld
inc
add
pushf
sar
cwtl
clc
inc
mov
je
mov
pop
clc
adc
hlt
arpl
mov
push
insl
or
fcomp
ret
int
std
adc
jg
jmp
je
dec
aad
or
push
xchg
das
js
scas
mov
scas
repz
into
pushf
or
lock
lahf
mov
push
or
fcmovu
cmpsb
lods
adc
cmpsb
jmp
jmp
dec
decl
sbb
pop
icebp
dec
icebp
cmp
mov
js
mov
inc
movsb
jg
cmp
loopne
das
mov
and
lcall
xor
cltd
outsl
int3
mov
pop
inc
pop
pop
sbb
adc
jmp
sti
mov
pop
andb
popf
movsl
stc
fbstp
jbe
add
call
dec
mov
push
xor
repz
jae
xor
add
cli
call
andb
push
sub
sub
bnd
mov
daa
pop
jb
decl
dec
lock
ficomps
cs
in
dec
sbb
ret
mov
push
jnp
sahf
cltd
mov
leave
push
ljmp
mov
xor
jbe
sbb
dec
lods
mov
cmpl
rclb
mov
mov
rcrl
cmp
ret
mov
xor
lcall
dec
mov
inc
js
push
pop
xor
push
ds
leave
mov
adc
cmpsb
insl
pop
push
aad
dec
sub
rolb
cmp
fcomps
fwait
xorl
xor
aam
and
bound
add
mov
ja
adc
mov
bswap
xchg
inc
xchg
mov
loope
push
pop
jg
jle
int3
cmpsb
cmp
arpl
or
add
js
adc
pop
mov
fmull
mov
aad
lret
lahf
push
lods
or
jp
int
dec
enter
js
add
xor
test
insb
inc
inc
jnp
sbb
lea
test
xchg
call
in
cmpsb
movsb
mov
shr
mov
ja
in
in
sub
in
jo
lea
pop
lds
pop
in
jnp
jo
mov
cmp
mov
cs
push
stc
inc
adc
jl
clc
clc
rcl
dec
mov
cli
subl
mov
xor
addr16
clc
and
inc
mov
or
add
mov
xchg
loope
jo
inc
and
cltd
add
pop
arpl
lods
repz
mov
jl
mov
dec
xchg
mov
sbb
push
fwait
sbb
or
int
push
scas
push
in
jo
inc
icebp
aad
pop
adc
in
add
icebp
sbb
cld
and
negb
in
push
repnz
repnz
in
inc
jg
sahf
xchg
xlat
orl
dec
mov
mov
mov
and
jbe
and
roll
dec
cld
xor
pop
arpl
mov
sbb
jp
bound
cmpsb
adc
jbe
movl
sarl
mov
outsl
mov
pusha
fimuls
ja
repz
daa
sahf
aas
jnp
or
add
shrb
add
mov
pop
adc
sarb
cmp
orl
and
push
xchg
xchg
add
shll
mov
pop
sub
imul
push
fists
xor
push
lods
cmp
roll
addl
in
adc
hlt
testb
push
dec
aas
or
pushf
push
cltd
push
stc
xor
cld
mov
rcr
inc
pop
xchg
leave
push
fisubrs
inc
movsb
int3
insb
movsb
push
in
movsb
push
pop
das
pop
xor
movsb
push
mov
push
add
jmp
incb
pop
jmp
xchg
fisttps
push
push
cmp
dec
inc
sarl
jg
test
mov
adc
push
push
mov
xchg
push
cs
das
mov
int3
shr
aaa
aas
cmp
jbe
jge
ret
jo
jo
pop
ret
push
mov
inc
inc
hlt
ds
push
jae
push
adc
mov
dec
mov
mov
adc
insl
imul
inc
enter
mov
loop
shlb
ds
adc
ror
pop
repnz
sbbl
sub
test
insl
push
xor
imul
xor
cld
mov
pop
lcall
lds
or
push
jmp
aam
mov
xor
repz
or
mov
add
test
popf
pop
popf
fwait
inc
xor
push
cltd
xor
mov
leave
pop
and
inc
in
pop
or
movsl
jnp,pt
mov
icebp
sarl
sbb
aaa
repnz
fst
orl
cmpsl
mov
and
pop
mov
pop
ficompl
in
test
and
lcall
leave
xchg
movsl
lds
jbe
les
mov
cltd
push
mov
repz
lcall
pop
movsl
pushf
inc
movsl
dec
add
dec
js
mov
sbb
xor
cmp
out
mull
js
adc
jne
dec
jge
jle
into
popf
rcrl
cmp
mov
mov
jp
pusha
lcall
push
rolb
ret
test
jge
dec
sbb
or
fildll
pop
outsb
outsl
inc
fidivrl
mov
sti
cmp
mov
sarl
inc
jnp
imul
jle
cs
lret
pop
pop
or
pop
cmpsl
jbe
cmp
cmp
jg
add
dec
and
stos
pushf
xor
pop
dec
xor
bound
lods
scas
mov
loopne
inc
mov
jp
xor
je
sub
xorl
mov
mov
and
xchg
jns
xlat
loope
dec
xor
imul
jb
mov
push
jne
cmp
ficoml
adc
insb
cmp
int3
xor
fadds
push
outsb
push
cmp
lock
imul
cmp
out
jg
loope
std
repnz
add
jmp
add
bound
push
mov
mov
loopne
mov
or
rcrb
cwtl
xor
sub
push
lcall
cmp
jle
and
testl
lret
pop
icebp
fimuls
adc
xchg
inc
inc
repnz
loope
lret
lods
test
xchg
test
stos
shlb
mov
les
fisttpl
mov
ds
subl
movsb
call
sub
and
push
and
mov
aaa
icebp
jnp
lock
shll
shlb
xlat
sub
pop
dec
and
adc
js
imul
pop
int
psubusb
mov
lret
push
ss
push
lock
cmpxchg
mov
nop
jae
mov
stc
int
pusha
push
popa
inc
add
mov
stos
adc
fs
sbb
jmp
dec
lods
imul
push
addr16
es
cmp
sti
repnz
mov
movsb
subb
or
mov
push
and
sbb
jecxz
adc
inc
clc
je
jecxz
sub
pop
jmp
push
sbb
push
cs
insl
dec
jb
jge
pop
pop
test
adcb
jnp
adc
pop
pop
leave
aad
dec
imul
xor
cs
or
movsb
dec
mov
dec
or
cmp
xor
adc
mov
daa
fsubs
push
out
fisubrs
jbe
adc
fidivrs
inc
repz
mov
jb
inc
sbb
inc
repz
dec
ret
adc
push
pop
js
imul
jae
sub
std
push
jmp
push
cltd
mov
mov
mov
mov
jbe
mov
jl
int
mov
repnz
mov
mov
jl
mov
pop
and
pop
lds
cltd
iret
inc
cmp
cmp
scas
adc
ds
cli
aad
add
in
and
loope
call
hlt
inc
xchg
bound
push
in
add
xor
hlt
mov
mov
add
mov
cmp
cwtl
push
mov
dec
movsl
adc
xlat
or
or
xor
mov
jo
cmp
xchg
icebp
or
das
imul
mov
push
pop
and
lds
pop
mov
add
outsb
xlat
lods
dec
sub
adc
inc
cmp
and
inc
aam
daa
test
jbe
adc
scas
mov
mov
outsl
mov
leave
rcll
pop
rorb
sahf
test
and
pusha
fists
jae
add
negl
imul
loopne
pop
mov
insb
out
mov
int3
das
test
lea
cmpsl
repnz
jns
aas
mov
adcl
cmpsl
cmp
pop
dec
mov
stos
adc
subl
adc
inc
mov
xor
pop
mov
push
das
xchg
push
lods
inc
xor
decl
dec
inc
nop
sub
sub
and
adc
in
jne
mov
adcb
push
cld
jne
adc
daa
and
jne
pop
scas
pop
and
js
push
cmp
in
sbb
lods
insb
pop
icebp
movsl
lock
arpl
mov
pop
inc
arpl
push
or
push
adc
or
js
out
mov
ljmp
push
mov
sbb
mov
add
loop
jns
shlb
jns
inc
jmp
aas
aam
and
jbe
or
cli
mov
jo
mov
ljmp
mov
or
lret
mov
outsb
cwtl
cli
cmp
xor
ret
inc
or
test
scas
lahf
mov
inc
xor
out
mov
iret
mov
or
xchg
fisubrs
pusha
cmc
cmp
popf
or
cmpsb
sub
sub
fwait
and
in
xor
lock
lds
outsb
pop
mov
add
scas
fwait
pusha
cmp
jmp
dec
ret
hlt
push
push
ret
sub
outsb
or
xchg
xchg
lcall
enter
sbb
or
ljmp
and
xlat
rcrl
mov
test
mov
std
insb
gs
add
adc
mov
or
mov
or
test
inc
cmp
repnz
and
nop
sti
pop
jns
mov
push
push
mov
push
out
loopne
mov
sbb
scas
adc
xchg
vpsadbw
or
cmp
xor
mov
lods
dec
and
inc
lods
add
pop
add
movsb
mov
jp
add
ss
inc
jg
ret
cwtl
pushf
push
sarb
xor
push
cmp
imul
push
fwait
cltd
dec
dec
iret
outsl
shl
scas
inc
xor
test
repnz
jnp
sbb
push
and
mov
lret
inc
arpl
inc
inc
fiaddl
mov
stc
insl
fs
shlb
push
sbb
mov
add
lret
push
stos
imul
cmpsb
pop
pop
stc
cmp
fmull
outsl
fcomi
mov
pop
cmpsl
dec
xchg
shlb
loop
in
test
je
mov
lea
test
testb
and
cmpsb
mov
ficomps
xorl
lret
and
dec
push
repz
mov
enter
mov
cmp
sbb
mov
addl
fadd
mov
pop
pop
shll
mov
add
cli
iret
mov
jo
aaa
mov
leave
sti
dec
repz
and
push
sbb
mov
fisttpl
loopne
xor
dec
pop
pushl
xor
or
and
sbb
mov
adc
cmp
sub
ret
std
fsubrp
mov
xchg
arpl
jg
mov
push
loopne
dec
cmpsl
sbb
jb
inc
inc
mov
je
loopne
insb
add
std
stc
mov
jge
mov
fldl
stc
lods
mov
out
fistpl
fstl
dec
test
push
xor
mov
xchg
gs
add
dec
mov
xor
inc
mov
ss
mov
xchg
cld
pop
push
mov
jo
mov
das
pop
jns
mov
cmc
cmp
xchg
shr
inc
jne
clc
jns
inc
hlt
insl
loop
and
lahf
fwait
call
push
xchg
jns
dec
in
mov
psubusw
enter
push
pusha
mov
cmp
out
imul
or
rolb
mov
jge
dec
pop
sbb
dec
incb
addr16
movsb
add
dec
cmp
pop
inc
xor
test
sub
test
movsb
out
rorl
addl
jbe
pop
dec
sbb
mov
out
fcmovb
test
push
stos
adc
cmp
div
bound
sub
imul
push
mov
xor
push
xor
scas
jl
add
adc
push
aas
inc
pop
pop
xchg
sbb
fidivrs
mov
addb
add
ret
jae
imulb
xor
dec
add
sbb
rcrl
out
vpsllw
rcl
jb
sbb
inc
addr16
inc
stos
push
sub
jle
dec
jb
lret
rcl
je
cmp
jae
dec
mov
jl
cmp
mov
cli
jo
dec
mov
sti
clc
negl
adc
insl
push
outsl
dec
in
aad
mov
cmpsl
fcmovnu
fnstenv
fcomps
subb
movsb
out
pop
addr16
insb
mov
add
popf
mov
popa
stos
faddl
xchg
xor
xchg
xor
cmpsl
mov
xor
dec
das
adc
cmpsl
dec
fbstp
adc
int
add
inc
dec
adc
rclb
popf
add
lea
inc
cmp
test
jb
fstps
sbb
sti
ss
dec
fs
dec
push
cmp
stos
xor
shlb
popa
sbb
pop
cli
gs
xchg
stos
fadd
jecxz
imul
push
gs
pop
je
xchg
lods
mov
mov
or
das
stos
cmp
adc
adc
mov
loopne
out
setns
adc
adc
xchg
pop
and
jne
or
daa
mov
mov
lds
sub
sbbl
gs
add
mov
and
mov
and
cmp
sbb
sub
data16
sub
pop
addb
jecxz
lea
loope
loop
mov
jge
inc
pop
sub
test
mov
fcmovb
mov
test
xor
les
adc
notb
ror
adc
pop
add
insb
movups
dec
movsl
daa
shl
daa
stc
inc
push
es
dec
pop
fisubl
movsb
sub
jnp
out
mov
sub
jo
lods
jl
push
shrb
add
dec
es
adc
out
movsl
xchg
sub
mov
push
pop
push
mov
pop
jns
xchg
inc
mov
dec
pusha
clc
mov
scas
loopne
pop
jnp
jle
setno
mov
pop
xchg
xor
sub
xchg
cmp
adc
xorl
mov
mov
jno
xor
pop
mov
pop
call
test
dec
int
jne
pusha
testb
pop
jp
movsl
and
testb
cwtl
mov
or
imul
sbb
dec
sahf
lcall
in
add
xchg
jo
inc
push
dec
icebp
ret
or
in
ret
in
lock
sbb
xor
sbb
adc
mov
mov
mov
pop
inc
cmc
mov
hlt
rolb
cwtl
ucomiss
sub
push
mov
test
fisubrl
jb
fiadds
lds
cld
popf
mov
outsl
daa
mov
popf
adc
cmc
mov
sub
adc
fdivs
mov
call
jge
dec
push
pop
dec
insb
into
call
rcll
clc
push
pushf
dec
ja
cmp
fmull
and
out
inc
test
outsb
int3
pop
lcall
div
or
leavew
xchg
xchg
ficomps
ret
mov
pushf
arpl
into
rorl
js
mov
or
test
shlb
out
jmp
scas
sbb
xorb
push
adc
cltd
pushf
stos
push
jnp
sbb
addr16
jg
sub
dec
xchg
cmp
xor
lret
mov
xchg
sarb
lret
rorl
cs
xor
cltd
imul
popf
cmpsb
pop
sub
mov
dec
mov
push
divb
dec
outsl
into
sbb
shll
mov
mov
fs
orl
mov
gs
mov
push
add
or
in
or
mov
pop
sbb
xor
outsb
jecxz
dec
das
or
mov
sub
ljmp
inc
ret
pop
xor
mov
int
loope
cwtl
in
cld
cmp
sbb
rolb
or
sub
adc
or
add
inc
imul
icebp
loopne
mov
pop
ret
push
addr16
dec
int3
es
jno
insb
xchg
xor
inc
cmp
fisttpll
adcl
jne
addb
adc
xorb
pop
fdiv
cltd
mov
push
push
jmp
fcmove
dec
out
xchg
aad
sub
cmp
mov
jl
inc
push
fisttps
xlat
ss
jb
mov
lds
push
push
mov
mov
jmp
cmp
cmp
mov
imul
inc
push
pop
mov
repz
ret
and
or
rcl
mov
jp
jmp
fsubrs
pushf
stc
push
into
idivb
call
cwtl
inc
loope
movsb
push
std
xchg
xchg
cmp
fwait
adc
xchg
jo
jle
or
or
out
mov
inc
testl
push
mov
jbe
divl
sar
fmul
icebp
int3
std
cmc
pushf
xchg
add
out
pop
xchg
sub
jle
xchg
fcomi
outsb
pushf
gs
lds
cmpsb
idivb
pop
xchg
and
adc
mov
xchg
fdivr
inc
pop
xchg
cmp
fsts
push
xor
pop
cmp
or
fwait
sub
out
push
sbb
add
pop
mov
and
push
and
xlat
and
sub
sbb
mov
aas
xchg
leave
mov
cwtl
adc
push
fdivl
push
testb
imul
repnz
xchg
add
jmp
fldl
aam
xchg
add
pop
aam
jge
sbb
pop
insl
test
xor
pop
push
addr16
leave
jne
jae
andb
lcall
xchg
jmp
inc
push
ret
or
ss
insl
xor
lods
test
cmp
iret
jns
mov
bound
jnp
mul
jmp
fiaddl
xchg
ret
mov
out
cs
fldenv
cwtl
mov
enter
loope
add
cs
and
bts
mov
pop
jo
adc
and
add
adc
inc
aam
add
outsb
jo
popa
pop
cli
aam
cmp
jmp
jno
or
int
xor
insl
dec
dec
sti
arpl
imulb
mov
pop
int
ja
dec
imul
xor
or
or
insl
pop
popa
xor
dec
nop
pusha
into
repz
into
icebp
repnz
je
xor
inc
loope
mov
movsl
pop
sahf
nop
push
idivl
xor
stos
fwait
pop
je
cmp
dec
adc
testb
inc
sbb
xor
bound
push
insb
movb
pop
lock
iret
fs
xchg
call
fildl
and
call
and
inc
xchg
xchg
sti
dec
dec
mov
push
cmpsb
mov
ret
sub
shll
sahf
lds
pop
std
aas
cmp
out
fldt
pop
popa
fs
mov
std
adc
pop
sbb
call
jecxz
xchg
lock
pop
fst
dec
inc
mov
jmp
xor
pop
cmp
sar
and
sub
lcall
scas
inc
lahf
or
js
dec
jge
or
hlt
addr16
xor
inc
sbb
dec
dec
imul
xchg
xor
or
imul
jns
out
sub
cmp
scas
lret
xchg
dec
sub
lods
orl
insl
sub
add
hlt
jmp
xor
or
bound
xchg
pop
jb
jno
sub
sub
dec
and
push
aaa
fs
pop
adc
scas
pop
xchg
or
test
mov
cmp
cmp
and
idivl
shlb
fs
or
jns
xchg
dec
pusha
lock
pop
cmp
fisubrl
jo
inc
sbb
pop
push
testb
xchg
roll
out
sub
movsb
arpl
mov
mov
inc
popf
and
out
pop
xlat
and
xor
add
lods
mov
mov
ja
sbb
push
push
in
out
xor
cli
pop
pop
enter
lahf
enter
les
dec
dec
mov
sub
push
jno
adc
call
dec
js
jno
pusha
mov
flds
aaa
popf
fimuls
gs
push
pop
adc
mov
sarl
inc
inc
cmp
lds
xchg
lods
ljmp
ss
cmp
pushf
pop
repz
testl
negb
xor
in
nop
loopne
xchg
mov
repnz
iret
push
popa
lock
jp
jmp
mov
push
out
cmp
pop
in
lods
mov
pop
jne
mov
push
rolb
inc
pop
mov
fisttpll
mov
rorb
out
jecxz
fs
in
addr16
add
mov
cmpb
push
fsts
xchg
sbb
mov
inc
add
adc
or
xchg
shl
jbe
fimuls
test
es
push
ret
pop
xor
insl
arpl
ror
addr16
mov
jo
mov
sbb
mov
insl
in
push
xchg
sahf
fcmovnb
out
scas
xor
and
ficompl
jp
test
xchg
ljmp
fdivrl
mov
and
ljmp
mov
mov
xor
rcr
data16
sbb
incl
pushf
sbb
inc
push
inc
mov
loopne
lock
pop
push
xchg
fadd
jecxz
jmp
and
add
pop
adc
sbb
cmp
ss
xchg
cli
cmp
push
push
xchg
clc
cmpsb
and
sbb
sti
les
xchg
mov
jecxz
mov
loopne
jb
pop
aad
mov
in
fwait
fs
jp
cmpsb
icebp
es
call
mov
sti
xchg
mov
dec
cmp
insb
test
pop
shrl
or
xchg
mov
push
dec
repz
mov
jecxz
sbb
pop
push
clc
push
push
cmp
pop
xchg
xchg
add
ret
jno
mov
adc
jg
hlt
imul
loopne
xchg
mov
jge
mov
mov
loopne
into
out
roll
jne
and
in
pop
or
stc
lea
adc
movsl
stos
fwait
clc
sbb
pop
mov
mov
add
xor
es
stos
sub
dec
add
sarl
xchg
or
add
les
add
inc
popa
push
push
sbb
cmp
sbb
sub
add
loope
dec
jne
push
cltd
adcb
lds
push
loop
icebp
pop
lahf
lcall
sbb
enter
pushf
jp
and
or
test
sub
and
mov
and
fsubr
adc
add
or
pop
popf
cmp
ds
xor
xchg
bound
jge
addl
cmp
mov
jae
sbb
push
dec
pop
fdivrp
mov
mov
shr
out
clc
inc
pop
add
push
mov
testb
mov
sbb
adc
inc
mov
aam
pop
aad
jns
repnz
push
dec
test
adc
lea
shll
ds
xor
lahf
pop
mov
fwait
add
pop
or
dec
pop
movsl
dec
and
out
mov
sub
mov
cwtl
out
sbbl
mov
je
mov
movsb
inc
cwtl
sbb
push
mov
jb
mov
lret
or
into
sarb
dec
or
ficoml
shrl
and
jg
lods
ja
cmpsl
mov
push
xchg
cwtl
jb
dec
mov
inc
hlt
dec
pop
shlb
div
std
mov
or
xor
out
push
aad
mov
xchg
dec
addr16
push
xchg
mov
and
or
sub
inc
clc
push
jp
add
xchg
mov
dec
pop
divl
pop
jb
and
cmpsb
add
loop
jl
xor
jecxz
and
stos
mov
es
out
inc
or
or
lret
loopne,pn
push
xor
rcl
arpl
xlat
pop
pop
mov
int
lret
xchg
dec
dec
lahf
insl
jmp
fidivrl
fbstp
test
loop
push
sti
cs
or
aaa
adc
sub
cmp
aam
xor
sti
in
outsl
and
les
lods
dec
lcall
jg
xor
or
lods
pop
sbb
in
aam
shrb
insb
cmp
xlat
pop
dec
sti
xchg
pop
jbe
add
fildll
adc
sub
inc
testl
nop
add
jae
cmp
pop
sub
jecxz
psubq
ljmp
cmpsl
adc
dec
enter
push
add
lods
das
fldcw
std
mov
mov
pop
sub
inc
jg
bound
dec
mov
xor
lahf
shrb
inc
out
inc
mov
out
pop
push
sub
sbb
js
mov
sub
lods
shrb
lea
or
mov
shlb
and
dec
cmp
mov
add
push
daa
push
mov
int
mov
fs
sbb
sbb
loope
dec
pop
mov
jmp
dec
bound
test
int
ss
ret
and
das
lock
sub
mov
or
mov
dec
push
shll
sbb
and
mov
pop
mov
sub
sub
sub
mov
test
test
enter
xchg
pusha
dec
rclb
call
xlat
push
add
or
mov
dec
xchg
stc
jo
mov
rol
add
push
xchg
fmull
leave
cmp
rcll
push
fistps
sub
fsts
add
jmp
jmp
sbb
aas
cmp
adc
sbb
aam
push
or
ror
outsl
movsb
rorl
xchg
jnp
loopne
lock
xchg
dec
push
and
mov
pop
mov
or
fst
inc
jns
cltd
inc
mov
rolb
test
xlat
push
mov
pop
push
js
xchg
pop
xor
sbb
fstp
dec
inc
fcmove
jge
roll
arpl
lds
adc
mov
leave
cli
dec
dec
scas
pop
aas
push
ficompl
adc
cmp
mov
mov
mov
mov
mov
push
mov
sub
jecxz
mov
clc
fadd
dec
sub
mov
mov
inc
cmp
hlt
xor
dec
sbb
shrl
xlat
pop
xchg
inc
mov
nop
adc
daa
sbb
aas
xchg
out
and
cmp
mov
in
inc
or
mov
add
inc
sbb
mov
decb
cmp
xor
push
xchg
sbb
stos
enter
sub
jns
adc
xor
cmc
in
out
rcr
or
ds
or
xor
sbb
nop
cwtl
out
mov
xor
aam
pop
mov
fstpl
stos
push
dec
shrb
sbb
mov
jmp
mov
cmp
dec
das
imul
in
xchg
out
dec
mov
push
sub
mov
popf
scas
pop
lret
jbe
dec
shll
cmp
pop
xchg
or
add
or
dec
add
jp
lock
into
insb
sbb
js
or
gs
mov
test
inc
add
loopne,pt
cld
mov
mov
pop
cmp
out
das
rclb
push
push
mov
mov
xchg
fucomp
xchg
mov
std
add
mov
sub
adcl
adcb
xchg
mov
sub
pop
xchg
lods
push
fiadds
cwtl
inc
test
stos
fimuls
pop
add
or
ret
idivb
loop
fidivrs
jecxz
xor
inc
ss
jle
decb
pop
xor
xlat
fiaddl
inc
data16
lock
ds
add
add
cmp
sbb
mov
jns
scas
inc
loope
int
in
pop
ss
mov
dec
test
xchg
lret
or
mov
sbb
adc
es
popf
out
out
shr
scas
pminsw
mov
push
push
push
test
add
dec
jecxz
sti
fstpt
jle
sbb
rol
dec
mov
scas
cmp
lea
add
cmp
mov
shr
cmp
fs
out
aad
lcall
stos
dec
pop
imul
test
scas
subl
aaa
sbb
aaa
inc
lea
es
in
bound
call
hlt
push
add
dec
push
cltd
xchg
and
mov
xchg
ret
dec
pop
insb
popf
repnz
cwtl
jno
mov
lds
sbb
pushf
or
scas
pop
or
mov
push
lahf
push
sub
pop
std
sbb
in
mov
inc
xor
or
loopne
shlb
in
pop
push
xor
shll
pop
in
mov
ficomps
clc
call
push
adc
mov
mov
pop
xor
mov
mov
sti
ljmp
stc
cmp
movsl
out
adc
mov
rolb
lahf
addr16
dec
test
lds
sti
aam
mov
das
adc
insl
push
cld
jmp
mov
sarb
data16
faddl
and
bound
jo
subl
pushl
or
int3
ficompl
or
cmp
sbb
cltd
es
cmpsl
lret
ds
outsb
scas
shll
mov
imul
dec
jmp
lret
jo
xchg
or
sub
mov
sbb
push
ret
lods
xchg
cmp
jmp
aam
xchg
sbb
pop
pushf
cld
insb
jge
outsl
or
test
aas
xchg
sub
scas
out
neg
push
mov
outsl
fsubl
stc
push
mov
and
lods
stc
sub
mov
push
arpl
push
jbe
out
les
les
jno
or
adc
dec
and
xchg
push
es
pop
and
lret
shll
repnz
jb
loopne
mov
inc
pusha
jnp
add
dec
jp
insl
xchg
ror
add
cmpsb
push
cmp
push
dec
inc
test
data16
xchg
sbb
cwtl
jg
or
in
dec
or
lea
and
mov
lretw
xchg
clc
jnp
jae
cli
adc
mov
scas
jbe
add
enter
fsubp
and
dec
mov
inc
dec
out
aad
inc
shlb
add
aaa
push
cmp
dec
pusha
pop
int3
pop
hlt
insb
movsb
hlt
or
or
pop
xorb
lods
xchg
add
push
aam
pop
mov
lahf
dec
lcall
dec
out
int3
shl
xchg
nop
dec
into
pop
xor
inc
lea
stos
aas
adc
add
mov
mov
sub
repnz
adc
push
and
jp
stos
sbb
adc
or
andl
cmpsb
clc
mov
aas
cmp
rcrb
cmp
jg
push
xchg
lods
call
inc
xor
mov
das
shrb
inc
jle
sub
pop
and
push
push
in
push
push
int3
mov
or
loope
mov
fs
lds
ds
mov
fwait
mov
sub
push
push
or
xchg
lret
jbe
mov
pop
lret
ljmp
ja
sbb
leave
mulb
rcrl
inc
sbb
jbe
and
adc
dec
popa
mov
loop
mov
jge
cltd
fstps
cmp
lock
sub
jb
loopne
pop
adc
push
lret
imull
mov
xchg
adc
es
push
lock
push
push
mov
xchg
fsubrs
jb
dec
push
and
ds
pop
push
cmpsb
xchg
testb
inc
mov
adc
push
jae
ljmp
sub
and
xor
push
xchg
xchg
ljmp
jmp
out
jecxz
aas
sarb
pop
int3
pop
mov
loopne
sbbb
jae
leave
xlat
shlb
add
and
imul
test
call
movsl
jne
pop
push
lcall
pop
arpl
mov
arpl
shl
inc
sbb
std
lcall
loopne
mov
xchg
adc
aaa
lds
enter
mov
sti
repz
add
xor
adc
leave
xchg
or
push
jnp
out
les
mov
adc
mov
aas
bound
push
movsb
sub
daa
and
xchg
pop
mov
loopne
jmp
mov
jb
lods
outsb
in
jl
stos
mov
inc
test
or
nop
and
pop
inc
inc
cmp
mov
les
aas
dec
or
adc
test
or
add
mov
jb
loop
aas
fldenv
cmp
iret
cmp
adc
hlt
adc
in
jo
enter
push
push
inc
ret
movsl
cltd
mov
jmp
test
and
popl
lret
mov
cmc
dec
mov
adc
sbb
dec
dec
add
jnp
fwait
mov
jo
or
mov
pop
xor
sti
mov
jp
ret
stos
xchg
mov
cmp
popa
push
cld
dec
xor
sbb
adc
sbb
inc
or
push
mov
sarb
mov
mov
and
rorl
sbb
movsl
sbb
mov
popa
ja
arpl
fs
dec
jns
xor
jecxz
push
out
scas
js
mov
dec
popf
int
push
sub
jbe
flds
push
push
mov
cmp
lret
outsb
ret
pop
adc
and
jmp
pop
leave
mov
or
imul
shrl
push
fidivrs
cli
popf
pop
ficompl
into
inc
sti
dec
in
mov
or
xchg
popa
mov
inc
pop
movsl
imulb
in
xchg
mov
add
mov
dec
adc
out
or
sub
sahf
jle
mov
popa
dec
pop
shlb
inc
cli
out
out
and
inc
xor
or
xchg
pop
xchg
jo
fistpl
jge
inc
minps
gs
pop
dec
mov
in
orb
mov
imul
mov
mov
call
xor
inc
mov
cwtl
sti
mov
int
add
cwtl
mov
cmpsl
sub
andb
mov
test
lahf
fwait
addr16
aaa
push
dec
mov
pop
xlat
pop
cmp
dec
xor
mov
lahf
pop
mov
roll
jnp
push
dec
sub
push
jmp
sbb
fsubrl
insb
sbb
sbb
movsl
movsb
adc
mov
inc
and
mov
pop
inc
andl
aam
std
or
mov
ss
lret
push
push
les
mov
pop
jg
out
adc
adc
and
xor
jmp
fisttpl
adc
or
xor
aad
sbb
mov
psubd
fs
insb
push
cmp
xchg
mov
dec
mov
inc
sub
adc
sub
jp
jo
mov
sbb
jp
sbb
in
imul
add
pop
inc
or
xchg
pop
js
sbb
outsl
cmp
pushf
sti
popa
and
call
aas
stos
sub
ja
lret
test
cmpsb
mov
loope
add
add
adc
xor
daa
push
push
out
in
mov
push
ja
ljmp
mov
or
out
leave
sbb
jecxz
fucomip
icebp
loop
jbe
enter
and
mov
andb
sub
mov
xor
mov
xchg
fwait
push
fldenv
imul
in
es
test
sbb
dec
push
fsub
pushf
add
xor
aaa
or
mov
mov
jbe
pushf
cmpsl
adc
xlat
jb
outsl
fwait
and
scas
pushl
pop
repnz
mov
add
lea
fdivrs
jmp
loope
mov
call
xchg
fidivs
push
test
and
subb
inc
dec
pop
mov
sbb
mov
bound
mov
mov
scas
fwait
test
outsb
adc
xor
cmp
add
stc
sahf
in
lret
jbe
jo
movsb
inc
ds
dec
outsl
fists
pop
fs
xor
rcr
bound
dec
inc
loop
push
pop
pop
jmp
int3
xorl
sub
mov
jo
sub
outsl
jg
ret
and
mov
pop
push
jns
xchg
test
jbe
xor
jae
mov
fstpl
jmp
and
adc
add
mov
cmp
push
aaa
lcall
xor
or
adc
int3
out
mov
and
test
stc
mov
in
pop
mov
pop
sub
hlt
test
cmp
xchg
arpl
sbb
frndint
adc
mov
and
rcll
lock
mov
xchg
pop
mov
and
add
inc
push
add
rcrb
out
mov
fidivrs
sub
pop
add
lods
push
out
pop
aaa
popf
test
sub
aad
hlt
popf
jb
mov
push
cmp
js
inc
dec
mov
cmp
aaa
mov
out
dec
pop
ds
mov
in
clc
pop
mov
add
push
mov
pop
pop
int
repnz
sub
out
dec
daa
xor
adc
decb
xchg
pop
push
insb
sub
dec
or
sbb
inc
shll
cmp
hlt
inc
rcrl
cmp
sbb
stos
pop
xchg
js
hlt
push
aaa
push
in
jl
pop
inc
or
leave
dec
inc
scas
lcall
jae
scas
mov
js
test
hlt
nop
les
std
repz
xchg
mov
nop
outsb
loopne
les
out
js
test
lret
into
popf
jle
push
jecxz
add
dec
ss
sub
lock
int
mov
inc
mov
insb
aad
jle
wrmsr
fs
lahf
adc
sahf
aad
test
mov
xor
xor
mov
xchg
and
jge
clc
dec
lods
ja
jb
pusha
rcrl
insb
lock
imul
ljmp
insl
add
in
mov
inc
pop
shl
mov
gs
xor
loopne
mov
fwait
out
push
dec
fs
pop
mov
imul
xor
loope
xor
ret
cli
inc
int3
imul
sub
int3
not
push
jnp
cltd
dec
adcl
xlat
xor
test
mov
add
imul
push
lock
xor
sahf
test
inc
inc
cld
ja
sahf
mov
mov
and
jb
inc
ret
pop
sahf
aaa
mov
jb
mov
test
fidivs
jae
inc
fwait
jb
push
lods
bound
mov
xchg
movsl
add
sub
adc
mov
or
addb
push
ja
add
xor
add
idiv
cmpsl
adc
jne
add
xchg
cwtl
inc
leave
mov
push
shlb
cmc
add
ret
out
mov
adc
aas
sarl
push
xchg
fcmovbe
dec
aaa
mov
jle
lds
imulb
sub
push
scas
push
sbb
xchg
stc
in
mull
push
stos
fs
frstor
pop
cli
cmp
notb
dec
adc
cs
jecxz
push
addl
dec
mov
scas
cmp
fwait
sub
jno
sub
pop
dec
das
shl
inc
jmp
and
jns
adc
inc
xor
pop
nop
mov
iret
sarl
stos
xchg
fwait
cltd
xchg
xlat
int3
jle
cmpb
mov
lock
mov
fwait
pop
dec
pop
lods
popf
sbb
pop
pop
es
mov
mov
hlt
aad
cmp
std
aam
push
out
dec
sub
pusha
jle
loope
addr16
jmp
add
sub
jge
dec
inc
pop
jns
jbe
mov
out
mov
int3
push
cmp
xor
int
popf
adcl
mov
push
int3
mov
adc
sub
into
shll
sub
repnz
sub
aad
sbbl
jnp
xor
cmp
dec
jl
cwtl
shll
xor
filds
into
cmp
cmpsb
frstor
sbb
dec
sub
mov
fsts
pushf
ljmp
sbb
or
pop
scas
push
jge
lret
daa
addr16
rcl
pop
int
insb
incl
mov
jbe
nop
xor
xchg
mov
dec
and
xorb
or
in
jecxz
jns
mov
in
and
popf
out
jle
psrad
add
cmp
fucom
in
sub
cltd
push
xchg
jmp
mov
push
add
push
sti
iret
push
in
add
or
lcall
lret
negb
fsts
ret
push
dec
out
xchg
push
fwait
ret
stos
ja
enter
rclb
std
or
sbb
pop
fstp
pop
cmp
aam
sbb
int
ja
int3
cmp
pusha
aam
es
sub
dec
bound
ljmp
movsl
xchg
dec
mov
ja
xchg
pushf
stos
ret
shr
sub
in
jmp
inc
sbb
mov
dec
push
push
xlat
sbb
fsubrp
fcmovnb
mov
cs
std
rol
mov
sub
dec
add
mov
dec
xchg
mov
jbe
rolb
fisttps
sbb
fidivrs
xorb
mov
lea
inc
cltd
xchg
and
push
xor
rolb
popf
sbb
xchg
push
cmpl
aaa
imul
roll
daa
fucom
pop
data16
sub
into
dec
pop
subb
adc
adc
leave
sub
dec
mov
inc
mov
mov
icebp
xlat
js
leave
ss
sbb
aad
adc
sub
cld
test
movsb
lods
push
push
and
insl
mov
sahf
loope
sarb
or
inc
sub
pop
lea
pop
in
and
or
mov
jg
dec
dec
xor
pop
jmp
push
xor
out
dec
repz
outsb
jle
dec
push
push
and
push
xchg
dec
ss
lret
mov
cmpsb
add
add
xor
daa
cmp
out
daa
mov
jge
push
popf
mov
int
jno
aad
adc
pop
std
adc
add
and
sub
or
pop
or
aas
out
xchg
or
fistps
inc
ss
jmp
imul
cmp
testl
jp
dec
sub
mov
cmp
sbb
sti
mov
cmpb
push
in
jns
pop
jmp
dec
jg
cmpsb
add
cs
push
es
and
and
gs
xchg
cmp
rcrb
in
js
lods
cmp
or
inc
xor
xchg
xor
mov
fists
call
popa
lods
inc
mov
inc
pop
jns
bound
push
push
mov
xor
rcll
movsl
sbb
add
ja
fiaddl
xor
xorb
cltd
repz
dec
or
cld
aad
jbe
jns
xchg
dec
in
mov
sarb
jle
cmp
ficoms
hlt
andb
mov
mov
push
pop
enter
jmp
xor
jge
mov
pop
insb
rcll
data16
popa
and
std
pop
adc
sub
inc
push
jns
adc
xchg
enter
xchg
mov
call
fwait
sub
sbb
xchg
ja
mov
jp
cmp
jmp
inc
cmpsl
add
lret
jmp
mov
jno
idivb
inc
xchg
xchg
or
fisubrs
mov
popf
cmc
mov
inc
lods
push
mov
jle
or
imul
cli
pop
xchg
lcall
ja
lret
inc
and
xchg
push
jo
pop
xlat
xor
repnz
mov
pop
jbe
xchg
mov
add
sub
popf
or
adc
pop
lcall
jle
mov
jmp
xor
je
push
int3
gs
xor
push
dec
gs
js
adc
pop
mov
in
and
mov
mov
sub
push
fistps
adc
cltd
mov
fsubl
data16
test
sti
and
inc
pop
shll
loop
loope
roll
pusha
int3
mov
stos
and
mov
stos
pop
add
mov
mov
cs
push
add
jb
pop
jl
mov
in
aas
mov
outsl
jnp
and
dec
cltd
inc
cli
push
xchg
leave
loop
xor
dec
and
addb
lret
mov
push
dec
jb
loopne
mov
fmuls
arpl
scas
lret
or
xchg
inc
jmp
pop
pop
pop
daa
inc
insb
dec
bswap
push
mov
dec
cmp
cltd
cmp
jmp
dec
mov
inc
es
cmp
rcrb
sbb
sbb
push
into
out
jmp
fcomip
xchg
add
cmp
mov
add
inc
inc
mov
aam
arpl
mov
cmc
xchg
sbb
xlat
leave
sti
cmp
mov
add
shr
pop
xor
stos
sub
sbbb
push
stos
cltd
mov
xchg
aaa
xor
pushf
rol
invlpga
addl
shlb
mov
inc
in
icebp
cli
add
push
push
xor
test
adc
mulb
cmp
addb
shlb
loop
push
ljmp
add
outsl
call
fwait
imul
pop
testb
pop
test
pop
ds
sti
in
shr
xchg
lret
sub
imul
jle
push
jo
xchg
jmp
jp
sarb
repz
xchg
mov
fdivrl
pop
jl
out
scas
lods
cmp
or
es
jno
mov
insl
dec
mov
loopne
jne
movb
adc
js
shlb
pop
dec
fsubr
jp
push
mov
mov
out
xor
mov
jmp
mov
fs
out
add
add
push
sbb
sbbb
jp
dec
jge
cmpsl
sub
enter
xchg
xchg
push
ret
lahf
addr16
notb
testl
out
mov
inc
movsb
cld
mov
inc
pop
sub
js
cmp
fnsave
mov
mov
inc
int
jmp
shlb
es
push
cmp
stos
adc
test
inc
add
loopne
mov
loopne
ja
sub
sbb
lcall
sbb
xchg
push
std
push
imul
inc
iret
popa
lret
pop
mov
mov
ficoms
pop
add
jae
mov
jo
cmp
hlt
mov
lds
rcrb
js
in
xor
pop
fistpl
xor
and
mov
arpl
sbb
sahf
or
pushf
or
imul
pop
dec
loop
xchg
mov
lret
sti
stc
push
dec
xor
test
mov
adc
cmpsb
ja
mov
test
mov
xor
bound
addr16
mov
jno
ret
mov
imul
jbe
inc
or
int
pushf
mov
mov
hlt
rcrb
ja
jle
popa
push
pop
sub
inc
mov
pusha
pushf
and
pop
pop
and
das
sbb
push
into
std
ss
out
mov
xor
or
and
ljmp
std
js
push
movsl
pop
jae
or
arpl
jp
pop
lds
int
mov
or
mov
cmc
in
sbb
cmpsl
xor
gs
aaa
in
repnz
sbb
into
enter
or
imul
rcrb
push
fsubr
loop
cltd
fs
push
jmpw
int
lret
dec
add
mov
lds
sbbl
subl
mov
pop
loope
mov
stos
hlt
in
int
inc
cmpsl
lret
adc
pop
xor
dec
in
mov
stos
dec
test
ja
cmc
repz
frstor
cltd
adc
xlat
dec
leave
cmp
inc
cld
xchg
mov
testb
sbb
fcmovnb
dec
adc
outsl
sub
pop
in
mov
jl
enter
xchg
lods
jge
adc
sub
jnp
pop
outsb
push
lret
and
lds
lods
enter
sub
insb
push
push
std
mov
insb
pop
xchg
xchg
out
sbb
lods
xchg
inc
and
xchg
inc
pushf
mov
das
push
test
lods
pop
dec
push
test
out
inc
pop
insb
ss
lahf
adc
inc
pop
enter
hlt
imul
addr16
push
add
shlb
or
hlt
testb
xor
mov
or
fisttpl
mov
sub
jno
pop
enter
push
jl
mov
aas
push
sub
mov
inc
or
adc
ficoml
xchg
cld
cwtl
ja
and
sbb
jmp
aaa
sbbl
iret
inc
shl
lcall
push
sbb
ss
cltd
stos
fbld
bound
add
lock
mov
inc
mov
push
fbstp
das
clc
cmp
negl
mov
mov
inc
and
hlt
fcoml
testb
pop
sub
add
ss
xor
cmpsl
cmc
cli
xchg
fadd
aad
addr16
push
hlt
adc
mov
or
scas
jmp
mov
repz
insb
dec
mov
and
xlat
cli
insb
addb
inc
mov
add
lea
notl
jg
cld
sti
cmpb
mov
outsb
and
test
and
pusha
test
stos
aas
pop
mov
es
outsb
movsl
sbb
je
fldcw
add
add
mov
or
cwtl
nop
add
stos
jae
subb
xor
dec
pop
xchg
js
lret
xchg
arpl
jle
xorl
jb
inc
cmp
fmuls
ja
test
ret
sub
test
adc
and
cmpsb
pop
and
jmp
xor
test
movsl
sbb
push
loop
jo
jb
sbb
not
into
ljmp
inc
int
out
xor
and
push
shl
mulb
pop
dec
pop
ljmp
jbe
cltd
movsl
pop
stos
dec
stc
dec
andb
xor
and
mov
xor
push
movsl
pop
sti
jp
pop
pop
mov
fwait
mov
jo
cmpl
or
stc
shlb
jmp
mov
push
xor
push
sbb
sub
jmp
xor
pop
int3
mov
in
add
loopne
stos
mov
cld
inc
adc
sub
pop
aaa
sub
je
push
lcall
les
dec
sub
pop
fisttpl
iret
loope
cmp
frstor
mov
xlat
sub
lret
and
fsubl
mov
lea
xchg
hlt
xchg
xlat
xor
pop
mov
add
leave
xchg
jmp
or
push
jg
movsb
mov
in
jns
push
pop
lock
outsl
ds
ja
mov
sub
or
scas
cmp
dec
inc
int3
stc
dec
inc
xor
lods
cmp
push
sti
push
addr16
mov
fistpll
arpl
mov
mov
cmpl
movsb
xor
pop
mov
pop
cli
jno
fisubrl
jle
cmp
pop
push
lock
into
mov
icebp
lea
sub
insl
es
cmpsl
fisubl
sbb
enter
dec
mov
nop
neg
popa
or
fprem1
sbbb
pop
lret
aaa
inc
stos
dec
mov
andnps
pop
pop
ret
cmp
fldl
cmp
adc
stc
mov
xchg
jnp
mov
and
mov
jle
cmp
daa
addr16
rcrl
jo
mov
push
sbb
test
push
popf
je
add
jp
mov
addb
outsb
inc
pop
or
pop
cmp
cmp
aaa
cmp
repz
xlat
jo
popf
pop
cmc
nop
call
pop
enter
in
loop
enter
data16
or
adc
fwait
dec
mov
outsl
cmp
out
fisubrs
pop
mov
roll
leave
dec
push
mov
cmp
xor
inc
insl
enter
mov
xor
mov
jo
sub
jns
rcll
inc
mov
pop
bound
sub
jecxz
jns
ljmp
addr16
push
mov
gs
mov
cs
mov
sti
inc
cmpsb
insl
mov
iret
jmp
or
imull
ja
outsb
mov
aad
mov
sbb
jle
or
psubq
inc
adc
mov
pop
push
mov
ret
sbb
lea
std
pop
mov
xlat
jns
stc
push
cli
es
adc
or
lret
mov
dec
jg
cmc
cli
mov
in
mov
sub
mov
fnstenv
rorl
sub
sub
sub
jnp
jecxz
int
push
aaa
jns
dec
pop
mov
test
cli
fwait
xchg
pop
js
sub
mov
decl
roll
mov
sub
push
cmp
scas
repz
int
push
icebp
adc
imul
insb
pop
clc
dec
mov
pop
xchg
mov
mov
lahf
icebp
stos
mov
pop
and
dec
addps
out
push
mov
cmp
xor
adc
insl
push
xchg
dec
cmpb
sar
cltd
xor
inc
mov
imul
lds
stos
mov
cmpsb
and
fidivl
aad
and
test
push
sbb
fldt
in
pop
fcmovbe
adc
stos
out
aad
mov
and
inc
push
mov
jns
outsl
lret
in
xor
cmp
dec
dec
cmp
testb
in
pop
inc
subb
loopne
dec
push
jg
clc
add
hlt
mov
push
ljmp
stos
pop
hlt
sbb
iret
xchg
xchg
mov
add
pop
or
pop
lret
filds
fsubrs
add
lods
inc
insb
sub
inc
iret
lret
imul
and
jae
push
jns
fwait
cmp
scas
arpl
push
mov
dec
lods
movsl
fidivl
pop
lods
pushf
je
arpl
mov
repnz
int3
stos
dec
das
inc
dec
lret
sarb
out
add
push
cmc
out
stos
and
outsb
cmpsb
movsb
nop
test
lret
pop
fiaddl
dec
out
mov
clc
movsb
sbb
insl
in
add
or
xor
jns
xchg
rcrl
lret
inc
out
test
push
or
add
adc
gs
adc
push
or
fucomi
jmp
cmpsb
in
jg
dec
std
sbb
in
les
add
std
inc
js
cmp
daa
xor
daa
mov
pop
outsb
ss
cmp
push
adc
inc
adc
int3
sbb
sahf
add
jno
inc
js
mov
shll
add
xchg
test
fcmovnb
fcoms
imul
lret
add
push
xchg
add
jg
enter
cli
sbb
fists
jo
xor
cmp
repnz
rcr
xchg
sbb
roll
and
xor
fsubl
lods
sar
stos
dec
js
or
pop
cmpsl
cmc
xor
in
lret
in
pcmpeqb
lahf
popa
dec
bound
es
fwait
push
mov
xor
jns
ja
add
mov
popf
lods
daa
scas
dec
add
mov
inc
sbb
popa
pop
add
adc
cmp
mov
sti
cld
aam
int
inc
addl
push
shll
add
outsl
xchg
cwtl
clc
jbe
popa
jns
enter
xor
lods
sub
pop
jnp
pop
mov
xor
cmc
cwtl
xor
jmp
test
mov
cltd
adc
xchg
push
imul
mov
insl
mov
rcrb
scas
adc
es
pop
lods
inc
add
push
sbbl
mov
mov
jl
cmp
xchg
int3
add
inc
out
pop
pop
jecxz
pop
enter
ret
sbb
push
mov
inc
int3
xor
insb
adc
ljmp
dec
xor
push
cltd
fiadds
inc
sahf
fwait
and
push
bound
inc
out
test
add
je
subb
or
mov
push
aas
and
jnp
pop
push
cmp
push
lret
popf
dec
xchg
clc
push
jge
sub
cwtl
and
testl
cltd
jecxz
lock
cs
dec
lret
idivb
push
xor
fdivr
data16
repnz
orb
pushf
cmp
add
push
dec
jl
cmp
pop
pop
and
insl
pop
dec
mov
jmp
sub
jge
pushw
out
mov
inc
std
imul
test
cmp
inc
mov
test
adc
pop
lret
push
scas
dec
lds
push
sub
in
fsubrl
xchg
xor
ja
popa
jns
loopne
push
inc
icebp
ficoml
and
push
imul
mov
pushl
shlb
std
ljmp
js
aam
adc
cmp
lea
dec
pop
cli
aad
out
test
jae
dec
stos
fisttpll
test
aad
jb
loopne
imul
dec
push
sub
sar
in
mov
lods
cmp
ja
repz
mov
push
adc
mov
ja
lods
rcrl
xor
pushf
jle
fisttps
cmp
inc
out
lret
adc
xor
sahf
xor
jb
mov
inc
and
cmpb
fs
pop
jge
js
into
push
xchg
mov
and
lcall
daa
dec
lock
or
jae
lret
and
out
sub
mov
mov
xchg
inc
mov
insl
lcall
imul
push
sbb
jmp
mov
pop
call
cli
mov
shlb
adc
stos
adc
add
jnp
xor
aad
push
and
jo
jge
push
push
mov
mov
xor
lcall
cmpsl
mov
repz
movsb
mov
add
pop
lods
imul
or
aam
cmp
mov
cmp
sub
arpl
and
cld
mov
sub
mov
icebp
fcmovu
add
pop
inc
lahf
or
xor
sub
cli
int
ret
jecxz
sbb
adc
jecxz
cmp
fsubl
mov
jge
jo
mov
xlat
aad
push
jmp
pop
rorb
jge
les
push
sub
push
pop
mov
jp
cmpsb
mov
sti
jo
sub
test
lret
nop
dec
cmpsl
and
cmpsb
xchg
iret
or
push
mov
adc
or
test
push
xchg
fisttpll
scas
xchg
sbb
adc
push
incb
dec
rorl
add
mov
sbb
test
mov
fwait
idivl
cmp
and
mov
jbe
stc
dec
daa
ret
jle
lock
repz
in
add
mov
rclb
cwtl
cmpsb
sbb
daa
pop
pop
jbe
hlt
int
rcrb
negl
scas
jmp
xchg
out
dec
daa
add
xor
jbe
push
ds
lcall
xchg
sbb
cmp
xchg
cltd
negb
or
int3
push
scas
lods
jmp
jp
push
mov
mov
mov
adc
ret
fdivl
xor
movsb
mov
jmp
or
fistps
pop
rcrl
sahf
leave
in
repz
cmpsb
adc
std
pushf
inc
lcall
sub
lods
push
and
cmpsb
pop
cmp
adc
cmp
sar
cmp
iret
cwtl
add
sbb
movsl
or
xor
sbb
std
sub
ds
pop
outsl
das
loope
testb
push
mov
jge
test
fcomps
loop
cmp
fwait
mov
fwait
popl
xchg
mov
cmp
sti
pop
test
and
pop
aad
mov
jmp
insl
or
pop
pop
popf
lock
mov
mov
daa
dec
insb
inc
dec
cmpl
xchg
fildll
pop
inc
scas
je
mov
movsl
les
adc
loopne
sub
imul
pop
clc
cltd
pop
mov
scas
popf
inc
arpl
popa
jo
cs
imul
inc
loopne
sbb
pusha
pop
scas
jns
add
sub
stos
pop
mov
cmp
sbb
xor
rcl
jle
mov
hlt
cmp
adc
and
ret
inc
aam
aam
pop
mov
add
repnz
mov
and
es
cs
je
imul
cmpsl
sbb
add
add
fs
mov
outsb
xor
fcoms
and
pushf
push
xor
or
aas
fidivrl
fistl
enter
dec
push
xor
fisubl
dec
subb
lods
insl
mov
xchg
mov
mov
mov
sbb
jle
shrl
mov
movsl
lds
sbb
push
and
push
xorl
jb
insl
mov
in
sahf
es
jb
mov
dec
arpl
stc
rorl
sti
sti
mov
arpl
movsb
or
xchg
dec
in
lock
icebp
andb
leave
stos
mov
dec
loop
mov
outsl
hlt
mov
iret
jne
lea
fiadds
loop
dec
and
jp
rcll
mov
sbb
dec
loop
jb
leave
adc
sarl
adc
ror
mov
shl
push
lock
outsl
enter
mov
and
cld
mov
pop
mov
imull
xor
lret
ljmp
fwait
pop
mov
mov
jbe
push
cwtl
cmp
cmpsl
mov
pop
lods
push
sti
jecxz
cmpsb
pop
inc
mov
sbb
ret
mov
cmpsl
lds
jo
push
cmc
inc
cmp
push
int3
push
dec
in
xor
fists
inc
pop
push
xchg
cmp
mov
imul
lods
fst
jecxz
sbb
lret
adc
and
xorl
pop
cmp
aas
and
jne
inc
dec
dec
nop
jns
add
xchg
test
or
movsb
sahf
int3
and
test
in
rcrb
jno
mov
arpl
jae
mov
mov
jnp
mov
sub
mov
mov
aaa
lcall
pusha
pusha
movsl
les
jg
xor
lock
mov
jmp
scas
stos
sahf
pushl
mov
fdecstp
push
xor
scas
mov
dec
out
mov
sbb
mov
lods
xchg
xchg
xchg
movsl
ljmp
loopne
stos
cmp
or
arpl
rorl
jbe
jecxz
adc
sarl
enter
in
mov
dec
push
aas
mov
lret
xor
fwait
xor
pusha
sub
dec
in
jo
cmp
inc
pop
jo
andl
out
lret
pop
test
cmc
enter
pop
lods
pusha
adc
ds
xchg
lahf
inc
sarb
cld
sub
xor
ja
push
clc
inc
jge,pt
add
jg
les
std
cltd
jmp
pop
std
lock
pop
adc
dec
lcall
lcall
cmp
outsl
mov
test
push
pop
or
lret
idiv
mov
ljmp
cmp
or
or
xchg
and
add
mov
scas
data16
push
leave
xchg
inc
cmp
lret
mov
mov
les
sub
fdivrs
inc
inc
pop
test
pushf
pcmpgtd
xchg
xor
clc
add
loopne
xorb
stc
call
or
call
add
and
ret
and
mov
mov
outsb
push
cmp
sar
test
pop
cmp
sbb
js
xchg
and
into
cld
cmp
adc
adc
or
xchg
sbb
or
dec
adc
cmp
rorb
jg
outsl
in
orl
push
loopne
jo
cld
mov
push
jne
mov
test
ja
dec
jo
data16
cmp
lret
nop
or
and
out
int
fbstp
ss
and
leave
sbb
gs
pop
imul
cmp
cmpsb
add
les
push
xlat
icebp
inc
imul
popf
pop
adc
lods
lahf
adc
mov
test
mov
adc
inc
jge
adc
inc
pop
rcrl
sbb
mov
loop
repnz
bound
xchg
mov
mov
fstpt
sbb
jno
xchg
ja
cmpsl
fneni(8087
popa
xchg
scas
sbb
mov
and
out
test
int
or
push
out
mov
fsubr
jmp
sti
jnp
cmp
mov
call
ss
mov
fs
and
ljmp
int
stc
inc
mov
sub
ror
inc
imulb
push
mov
into
das
push
insl
push
sbb
stos
dec
or
subb
xor
jg
roll
pop
sbb
ficompl
sub
je
ljmp
add
push
adc
enter
testl
adc
pusha
add
xchg
lcall
rcl
ja
push
jecxz
or
jmp
into
jns
add
pop
xor
test
cmp
pop
mov
jnp
or
mov
push
ljmp
aas
inc
cmp
cmp
js
lcall
insb
pop
ja
inc
into
dec
into
scas
xchg
pop
scas
stos
sub
iret
stc
jl
dec
movsb
data16
jnp
stos
or
sub
sbb
inc
sub
in
cs
lods
jecxz
jg
push
mov
cmp
push
jecxz
cmp
sub
add
int
jo
xchg
aam
test
int3
addr16
das
fidivrs
js
mov
mov
push
push
bswap
or
inc
adc
mov
clc
stos
add
xor
repz
int
mov
dec
fs
ljmp
loop
popf
add
mov
jecxz
mov
xchg
ret
fcompl
sbb
mov
mov
aas
sets
pop
shll
loope
insl
adc
xchg
dec
mov
jecxz
inc
lock
mov
mov
fcomp
inc
in
jmp
xchg
cli
lds
xor
cld
pushf
fsubrp
add
adc
and
mov
cmp
cs
sbb
jecxz
pop
fucom
dec
sbb
das
xchg
out
fisttpll
dec
scas
mov
int3
sub
dec
fimuls
mov
js
mov
shl
lahf
rcl
pusha
jg
cmpl
push
aaa
dec
add
ljmp
shlb
jb
mov
mov
hlt
filds
push
out
movmskps
pop
mov
push
pusha
ss
int
imul
dec
addr16
mov
push
mov
pop
lock
rcl
adc
cmpsb
es
or
idivl
dec
lret
sub
mov
lcall
inc
pop
push
mov
into
or
repz
and
rol
popf
imul
mov
mov
imul
arpl
and
add
nop
pop
and
mov
pop
lret
lods
xor
mov
loopne
sub
ljmp
pop
mov
jle
add
inc
or
fstpt
popa
es
popf
lahf
jp
mov
nop
jne
push
aam
shlb
xchg
dec
xchg
out
movsb
movsl
es
dec
inc
pop
pop
push
divb
push
test
cmp
pop
ret
lods
xchg
js
mov
dec
jp
repz
xor
add
dec
fwait
icebp
mov
dec
xor
hlt
dec
mov
jle
imul
jb
cmpsl
mov
icebp
imul
test
dec
mov
arpl
addr16
and
ds
jae
xchg
add
push
cmp
std
lret
ret
mov
leave
pop
push
je
mov
xchg
in
punpcklwd
inc
xchg
xor
mov
mov
pop
sub
int
idivl
cmpsb
aad
push
mov
push
or
adc
push
inc
ja
cmp
push
pusha
mov
xchg
push
push
adcb
nop
sub
mov
int
inc
cld
out
bound
pushf
into
sbb
sub
pop
out
or
or
jecxz
lret
cmp
loopne
jbe
dec
aad
add
popa
js
sub
or
loope
rcrb
adcb
pusha
xlat
dec
xor
std
cs
and
or
mov
inc
cmp
push
hlt
jge
int
sahf
adc
mov
mov
insb
movb
icebp
lret
outsb
pop
int3
dec
arpl
push
jno
lret
test
in
popf
ja
dec
lret
popf
xor
jp
mov
filds
test
ja
pop
sbb
or
sbb
das
xlat
stos
cmp
pop
jne
add
cmpsb
inc
popf
pop
jle
jge
mov
cmpsl
add
cmpsl
mov
adc
mov
aad
cmc
fsubs
aas
mov
mov
mov
inc
movsb
adc
jl
cmp
jle
ss
int3
imul
pextrw
popa
adc
sub
ja
jae
rol
adc
jle
jno
and
pop
in
add
mov
das
mov
idivl
lods
popf
bound
test
or
loopne
jns
cmp
bnd
xchg
popf
mov
bound
inc
nop
mov
int
xor
out
or
leave
in
lcall
dec
push
cmp
add
dec
pusha
aad
sarb
loop
lcall
xor
pusha
stos
pop
daa
imul
mov
or
je
sub
cmc
cmpsb
loop
sbb
and
nop
sbb
inc
and
and
scas
sbb
lret
das
dec
adc
bound
mov
call
fmuls
cmp
lcall
out
sbb
outsb
lods
pop
fcomps
pop
or
xchg
scas
push
aas
out
add
sarb
notb
je
rcll
sbb
inc
hlt
sahf
hlt
lret
imul
inc
adc
sub
mov
fstpl
cli
mov
jp
divl
jle
cmp
sub
into
stc
aaa
sub
dec
pop
rcll
sub
popa
gs
adc
or
jecxz
jmp
pop
data16
pop
lcall
lahf
fdivrp
push
inc
mov
inc
push
test
xor
cwtl
call
jnp
lret
dec
push
xor
jns
mov
movsb
bound
outsb
loope
lea
pushl
lret
adc
cs
or
orb
scas
jmp
mov
jb
inc
fdivl
mov
dec
sbb
mov
in
xchg
cmp
pushf
shl
cld
and
in
cltd
scas
stc
sbb
pushf
jb
pop
mov
ja
or
lods
sub
cmpsb
sub
xchg
testb
outsb
jnp
loopne
lcall
pop
jge
daa
mov
data16
inc
cmpsb
mov
inc
adc
push
in
fwait
out
fistpll
xchg
mov
outsl
outsb
int3
arpl
lea
popa
lods
xchg
enter
add
push
cmp
jno
xor
sub
push
enter
add
mov
mov
fcmovnb
sbb
jbe
data16
fs
mov
adc
out
mov
xor
cmp
cld
sub
mov
jle
fcmovbe
mov
inc
repnz
cmp
ss
or
sbb
adc
out
mov
repnz
rclb
xor
hlt
mov
lret
aad
arpl
test
pop
aaa
jecxz
xchg
mov
sub
adc
testb
jnp
jge
imul
push
add
cwtl
cmpsb
outsb
push
icebp
sar
pop
sahf
shrb
divl
fmul
orb
orl
or
data16
lods
mov
mov
push
out
jns
cld
xchg
rcll
dec
shll
in
ss
lahf
pop
cmp
push
xor
imul
fwait
inc
decb
push
sbb
adc
test
mov
sbb
cltd
test
mulb
jno
pop
sbb
test
int
test
popa
xchg
imul
mov
pop
in
xchg
jl
mov
add
into
dec
fs
and
movsl
stos
xor
cwtl
stos
jmp
inc
or
js
test
lcall
adc
cmpsb
ret
jo
enter
sub
mov
es
stos
mov
and
in
pop
cmp
and
cmpsl
lret
xchg
aad
push
inc
push
in
sbb
cmp
sbb
insl
push
test
mov
sbb
sub
xor
aaa
lahf
les
enter
outsl
add
movups
push
fs
xor
or
hlt
aas
lahf
mulb
jns
fwait
push
arpl
and
cld
or
mov
movsb
mov
jnp
mov
inc
sbb
mov
adc
pop
imul
mov
pop
sbb
lods
icebp
push
int3
scas
lea
push
jne
xor
jns
in
mov
adc
adc
mulb
xlat
shlb
ss
fdivrl
inc
jge
xchg
dec
sub
std
push
aam
sub
loop
mov
popf
cmp
stos
lods
in
vcvttss2si
pop
dec
je
push
xchg
sub
mov
clc
rcrb
in
pushf
es
in
bound
mov
cltd
xor
movl
or
adc
pop
nop
and
fdivrs
pop
inc
cmp
rclb
pop
lea
inc
shrl
jecxz
pop
shrl
lock
pop
mov
in
ret
xchg
es
and
into
in
sub
loop
sub
lds
push
adc
out
js
popf
out
inc
out
mov
fcoml
xorl
xor
js
ljmp
adc
adc
push
mov
in
sbb
push
mov
stos
movl
inc
add
rorl
pop
call
or
sub
and
and
dec
shrl
stc
in
push
data16
dec
hlt
pop
shrl
pop
jo
js
jg
push
adc
mov
add
mov
sub
adc
clc
fdivrp
and
xor
jl
jo
xor
mov
inc
xor
xchg
sub
sbb
and
lea
push
sbbb
push
jp
sbb
mov
sbbl
int3
xor
movsb
mov
dec
pop
scas
dec
dec
lret
movsl
adc
cvtdq2ps
je
test
mov
sbb
je
cmp
ret
push
nop
push
sbb
adc
mov
dec
into
lods
adc
aam
push
hlt
pushf
dec
aam
jg
adc
adc
dec
fcoml
adc
dec
into
and
nop
cmp
stos
mov
movsb
sub
adc
inc
psubw
das
es
xlat
iret
pop
je
imul
xor
cmp
int3
pop
icebp
cmp
xor
inc
popf
cwtl
cwtl
xchg
dec
leave
push
mov
dec
stos
dec
sub
lods
adc
aam
insb
lahf
mov
sbb
pop
repz
enter
or
cli
fwait
mov
push
sti
movsl
addl
pop
mov
jb
add
mov
lds
mov
jp
les
stos
jno
push
mov
and
sbb
cs
adc
adc
inc
mov
andb
sbb
sti
pop
rol
popa
push
in
jae
clc
xchg
sub
mov
ret
push
lock
bnd
call
arpl
pusha
ret
mov
arpl
cld
sti
push
xchg
mulb
repnz
or
adc
gs
xor
shl
jno
bound
int
adc
jmp
push
sub
notb
or
push
sub
sbb
sbb
lret
dec
inc
mov
aam
out
das
xchg
add
ret
pop
pop
push
add
int
inc
fcmovnb
lods
xchg
test
cmp
stos
outsl
pop
xor
mov
pop
or
or
out
push
ss
in
mov
fcomps
inc
test
jge
ret
lock
jl
les
sti
push
fcoms
xchg
dec
or
mov
cmp
xchg
sahf
xor
loop
xchg
fsubs
or
mov
lret
xchg
jg
call
movsl
cmp
loopne
add
popf
outsl
inc
and
adc
in
nop
mov
sarb
and
mull
popf
cmp
int
bnd
xchg
xchg
pushf
in
pop
mov
arpl
pop
add
lea
dec
cmpsb
out
addr16
sarl
mov
inc
push
pushf
sub
mov
les
ja
jmp
adc
sub
ficompl
ljmp
fwait
add
lcall
sub
lcall
movsb
daa
xor
jl
inc
leave
push
pushl
out
psubsw
mov
jle
sbb
mov
insl
dec
ds
jle
add
mov
daa
sti
fistl
lret
xchg
lock
mov
lcall
mov
inc
imul
pop
rorl
add
fists
sub
push
push
fadd
sarb
mov
inc
sbb
cli
out
outsb
imul
mov
jb
xor
push
push
cltd
les
cmp
sbb
movsb
test
add
rclb
sbb
out
fistpl
pop
sbb
stc
ficoms
add
adc
mov
fucomip
arpl
mov
ja
push
mov
jecxz
and
lahf
nop
pop
sbb
inc
insl
dec
pop
sbb
or
jns
dec
cmp
fisubs
or
jno
pop
rcrl
mov
push
cmpsl
dec
leave
loope
dec
ds
or
push
into
xchg
or
pop
je
insb
into
insl
cmp
iret
cmpsl
cmp
sub
fnsave
pop
mov
cltd
xchg
pop
mov
ret
lods
fbld
gs
fsubs
sub
cld
jp
ds
mov
pop
subl
ja
jne
adc
jno
xchg
add
adc
movsb
leave
lock
fisubl
cld
call
insb
mov
xor
pop
adc
mov
nop
mov
into
mov
jne
and
fildll
les
or
enter
lcall
sub
repnz
adc
mov
adc
or
ds
pop
popa
cwtl
pop
mov
std
xor
fists
icebp
inc
inc
ret
xchg
outsb
add
and
in
pop
push
clc
mov
outsb
ja
cmpl
mov
mov
insl
fcompl
xchg
pop
std
inc
cmp
cmp
data16
in
repz
xor
jb
or
push
push
rcll
jno
sti
push
xchg
movsb
push
xchg
clc
sub
cwtl
dec
and
or
inc
xlat
push
push
ficompl
sarl
inc
adc
jno
jnp
jle
flds
sub
cmp
jmp
scas
sbb
cld
mov
ret
fisubrs
xchg
jns
push
xor
pop
fildll
mov
ss
or
pop
cmpb
pusha
imull
add
test
mov
or
push
jne
sub
inc
xchg
aas
pop
inc
gs
add
aaa
or
loopne
xor
or
add
lock
js
dec
testb
leave
and
insb
aas
adc
mov
fdivp
addr16
aas
shl
or
xchg
loope
js
xor
mov
mov
mov
loop
jle
popa
outsb
dec
nop
jno
lds
mov
cli
aaa
xchg
scas
shlb
iret
push
js
gs
adc
mov
aam
sub
pop
js
cmc
inc
and
dec
and
imul
adc
dec
inc
dec
xor
outsl
jle
jns
pop
fidivrl
mov
fisttpll
ss
mov
sub
xchg
mov
sahf
adc
cld
loopne
in
xchg
dec
addl
xor
popa
cmc
pop
jmp
test
jg
inc
hlt
mov
sbb
sbb
jl
fstpt
push
test
mov
dec
std
nop
adc
fs
push
jmp
popf
rorb
pop
cmp
mov
shll
push
lock
ss
mov
cld
fmull
sahf
adc
dec
popa
pushf
pop
mov
testl
mov
lods
xchg
mov
insl
repz
loope
ret
ljmp
mov
mov
mov
dec
stos
jo
cli
jecxz
call
js
hlt
popa
stos
sahf
inc
mov
and
mov
adc
xchg
js
push
negb
cmp
shlb
gs
lcall
ja
jns
cmc
lret
hlt
fsubrs
stos
xor
mov
mov
mov
xor
xchg
fistpl
inc
cmpsb
out
rolb
rcl
mov
pusha
hlt
outsl
or
imul
lds
aad
enter
mov
data16
xlat
cmpsl
mov
mov
and
addl
test
icebp
cmpsb
sub
sbb
inc
mov
lahf
je
xor
add
jecxz
mov
lcall
inc
adc
dec
aam
data16
dec
adc
lret
xchg
dec
lea
cmpb
enter
or
sbb
out
daa
mov
lds
mov
repz
xchg
and
jnp,pn
outsb
cmc
mov
fsubrs
xchg
cmp
jno
ja
and
push
jmp
add
popf
cmp
sub
cmp
xchg
icebp
mov
enter
xchg
movsb
xor
hlt
arpl
inc
inc
ljmp
or
aad
dec
xor
jle
adc
adc
int3
pop
add
sbb
dec
xorl
decb
fiadds
jb
sub
cmpb
int
or
test
rcrl
cmc
loop
cmp
lds
mov
repnz
or
stos
mov
inc
push
test
subb
loope
jns
mov
or
cmp
xor
fistl
enter
xchg
test
scas
cld
push
or
mov
cmpsl
mov
add
mov
inc
jmp
sbb
ret
and
movsb
dec
mov
push
jnp
es
xchg
mov
sub
loop
jns
mov
push
and
mov
mov
daa
into
inc
rorl
insb
ficomps
sbb
aas
mov
sbb
push
cld
inc
popa
pop
jbe
ficompl
inc
push
loope
jl
mov
popa
pop
xor
push
dec
jecxz
sub
or
mov
sarb
jns
sbb
xchg
add
mov
mov
leave
mov
sarb
bound
fsts
rcrl
adc
gs
scas
mov
sbb
shl
pop
sbb
or
jno
fdivrl
repnz
mov
repnz
das
ljmp
sub
mov
push
inc
popa
pusha
push
ss
jbe,pn
mov
dec
and
dec
int3
mov
push
outsl
pop
jns
push
push
les
jge
xchg
mov
mov
lea
xchg
push
cmp
jmp
xor
pusha
or
mov
push
pop
pop
orb
aas
cvtdq2ps
fbstp
cltd
leave
cli
cwtl
or
mov
mov
inc
and
sub
dec
inc
mov
cmp
inc
mov
mov
and
clc
mov
jge
or
fists
aas
inc
and
push
jl
jnp
xchg
mov
ret
test
or
or
jnp
mov
loopne
aas
imul
int
shrl
lcall
test
test
lahf
xchg
jge
xor
mov
fmull
pop
inc
mov
repz
shll
mov
mov
sbb
addr16
mov
subl
mov
and
and
sbb
mov
pop
add
mov
inc
mov
fistpl
mov
outsl
and
addl
imul
les
sti
rolb
add
push
fwait
dec
into
mov
mov
jno
pop
cmp
or
xchg
pop
fiadds
pop
jb
sar
in
test
push
dec
jo
shlb
jbe
jne
cmc
in
inc
dec
jno
enter
cli
lcall
fistpl
loop
mov
sti
icebp
idiv
add
arpl
shrl
xchg
jp
or
addl
bound
rcll
loopew
fcoms
pop
sbb
and
dec
inc
xchg
push
and
call
faddp
mov
xor
jno
icebp
adcb
out
cwtl
dec
rolb
dec
pop
ret
push
loope
mov
aam
add
push
jbe
pop
inc
aas
and
loope
movsb
fmull
mov
mov
clc
or
or
loop
or
xchg
mov
xlat
sub
pushf
leave
dec
push
arpl
sbb
pop
stos
inc
or
push
mov
xchg
mov
sahf
pusha
jle
cli
inc
dec
test
inc
ret
nop
lods
mov
push
dec
add
sarb
out
dec
cmp
sbb
aas
fisttpll
mov
mov
inc
push
test
sbb
mov
inc
pop
mov
adc
adc
cwtl
lea
jne
mulb
movsl
mov
fs
aad
xchg
lock
shll
pop
fcomp
jl
mov
pop
sbb
pushl
xchg
pusha
je
test
cli
test
dec
inc
dec
ljmp
inc
dec
dec
sbb
push
push
mov
scas
pop
popf
inc
mov
push
add
out
mov
leave
jecxz
out
cmpsb
scas
scas
dec
test
mov
pop
pushf
out
xor
out
xor
rcll
lods
and
pop
mov
int3
fs
push
outsb
and
gs
or
sub
lds
mov
add
and
in
out
xor
lods
fildl
xor
xchg
push
imul
scas
scas
cmc
enter
xor
data16
out
fildl
ffree
shll
or
aaa
push
sub
test
mov
or
or
subb
addb
push
jns
add
mov
jl
test
out
mov
das
pushf
and
xor
adc
js
dec
inc
in
sbb
in
jg
popa
and
push
push
push
out
outsl
icebp
outsb
pop
cmpsb
outsl
in
adc
mov
xchg
sbb
jg
adc
jecxz
sti
jne
push
add
mov
fldenv
jecxz
jg
aas
mov
addr16
push
cli
jne
aad
xor
clc
add
call
push
xchg
sarb
sahf
sbb
lret
loopne
ret
inc
adc
js
arpl
lods
add
inc
inc
push
push
nop
inc
lahf
movq
sub
or
push
enter
jge
pop
mov
pop
lcall
out
dec
mov
bnd
cltd
xchg
pop
rcll
and
fnstenv
dec
jno
jnp
pop
ds
inc
push
pusha
lahf
sub
and
inc
lahf
mov
cmp
jnp
stc
fidivrl
stos
enter
mov
lock
push
mov
sbb
sbb
mov
cld
cmp
dec
call
stc
std
mov
sub
xlat
pop
mov
stos
gs
pop
jo
or
mov
sbbl
dec
push
xchg
fs
mov
insl
fbld
lcall
jle
add
push
dec
and
dec
and
mov
push
lods
sbb
fwait
sbb
push
push
int3
and
lds
sub
and
cwtl
enter
test
inc
fisttps
fisttpl
movsl
or
mov
or
test
push
push
enter
jne
pmaxsw
mov
or
ds
scas
dec
sbb
inc
dec
mov
jmp
push
sub
pop
jno
repz
xor
rcl
xchg
inc
lahf
and
pop
in
insb
mov
and
adc
dec
cmp
arpl
mov
push
inc
arpl
inc
movb
push
in
dec
rorb
dec
decb
cmp
jmp
fstp
pop
ss
out
sbb
arpl
lcall
hlt
test
mov
lods
lds
daa
fcomi
hlt
les
and
in
sbbl
or
jmp
mov
xor
xor
into
and
sub
and
cmpsb
out
scas
rclb
int
subb
add
into
pop
outsl
notb
sbb
repz
lahf
ror
mov
loopne
das
pushf
test
call
ret
inc
aad
out
in
mov
addb
push
pop
rolb
shrb
inc
push
pmuludq
sbb
adcb
xor
mov
pop
and
lea
sub
xor
lahf
jo
fs
das
cmp
xchg
popf
mov
dec
call
fiadds
pushf
out
hlt
cltd
mov
lret
adc
psrld
push
dec
lret
popa
outsl
test
sbb
roll
jns
lret
xchg
jno
or
inc
test
jnp
push
lods
popf
shlb
push
loop
xlat
pop
scas
adc
std
jle
xor
inc
ret
inc
divl
mov
jle
xchg
shll
mov
jae
mov
cmp
lds
cltd
pop
pop
inc
psubusw
xor
test
adc
pushf
das
mov
ds
fnstsw
std
loope
mov
test
imul
mov
push
sub
subb
idivb
out
call
dec
mov
or
and
ja
popa
addr16
mov
pop
mov
jmp
mov
jno
imul
hlt
jg
mov
out
push
mov
iret
push
cmpsl
arpl
jmp
sqrtps
push
fisubrs
jae
add
sub
ds
inc
or
leave
sub
mov
mov
inc
or
jle
xor
scas
imul
mov
add
in
in
sbb
pop
adc
inc
iret
int3
lret
std
arpl
sub
push
out
fwait
push
out
and
jge
sub
jle
popf
fldt
bswap
cmp
xchg
mov
daa
clc
cmc
cld
sbb
add
sti
mov
cmpsl
popf
inc
or
xchg
test
cmp
and
imul
mov
push
push
mov
lock
sbb
ret
inc
sub
jae
and
imull
out
fwait
icebp
divb
xchg
orl
mov
inc
lahf
popa
fcmovb
adc
frstor
inc
mov
pop
fisubrl
pop
ds
xor
mov
test
jmp
or
imulb
movsb
repz
jp
imul
mov
push
scas
lea
mov
adc
shll
jle
icebp
jo
adc
jne
xchg
xchg
lcall
ja
imul
add
out
ret
ja
xlat
fdivr
rorl
pop
sub
ret
lcall
fs
sarb
adc
ret
sbb
test
outsl
outsl
mov
pop
xchg
mov
mov
incl
pop
mov
ror
sub
push
daa
cmpsb
mov
dec
mov
xor
rclb
cld
xor
mov
fwait
xchg
mov
xor
insl
jmp
bound
sub
push
jp
mov
sti
fsubl
leave
paddq
xchg
sti
decb
mov
ret
les
fldcw
outsb
push
mov
mov
jge
sbb
mov
mov
outsb
jbe
push
add
mov
adc
lcall
orb
lcall
or
fucomp
test
push
sbb
gs
pop
or
ud2
call
jmp
sbb
jno
inc
pop
dec
movsl
test
sub
pop
mov
sti
test
dec
or
inc
push
inc
ret
inc
out
insb
rol
mov
notb
pop
jle
push
jbe
movsl
mov
lds
lcall
cltd
mov
jl
mov
or
fidivrl
popa
andb
mov
push
push
icebp
aam
mov
xlat
and
into
cmp
movsb
aam
imul
mov
adc
and
mov
pop
sbb
cmpsb
cli
jno
sub
testb
ret
dec
sub
xor
mov
in
xchg
jp
cmp
dec
scas
mov
mov
xor
adc
adc
push
stc
mov
pusha
scas
repz
dec
rcll
cwtl
inc
cmp
cs
xchg
shrb
incb
pop
out
test
lret
mov
sub
insb
and
shll
adc
pop
in
mov
aam
andb
orb
je
adc
mov
pop
sbb
cmp
fwait
mov
adc
aaa
test
lret
mov
push
mov
ret
insb
cmp
xchg
or
pop
fmull
cs
cmpsb
mov
mov
jl
outsb
cmpb
gs
pop
cmpsb
cmpsl
cmp
ja
stos
test
loopne
popa
in
jnp
xor
in
bound
pop
in
or
imul
mov
jb
cmp
xchg
adcb
or
jp
add
adc
xchg
sbb
es
loop
pop
cmp
sbb
xor
mov
mov
and
imul
fimuls
cmp
roll
sbb
push
mov
jle
mov
xchg
jmp
pusha
pushf
sbb
mov
fimull
loopne
cmc
inc
ljmp
lds
lock
add
inc
pop
sbb
loope
and
daa
call
sahf
and
mov
mov
mov
outsl
jnp
mov
data16
sbb
dec
add
push
sub
sbb
pop
inc
and
setnp
movsb
test
pop
in
push
push
xor
imul
push
mov
and
fcoml
jecxz
data16
rcrb
outsl
pop
adc
aas
push
aas
and
adc
jge
mov
dec
add
pop
nop
fsts
pushf
imul
cmp
xchg
mov
je
insl
rcll
arpl
mov
adc
lds
cmp
shll
dec
sti
sarl
jmp
sub
inc
push
sbb
arpl
sub
jnp
pop
sbbl
mov
pop
enter
ss
lahf
pop
ret
data16
pusha
push
cmpl
jne
add
pop
jmp
jbe
cmp
jnp
pop
stos
jne
pop
mov
repz
movsb
push
inc
xchg
mov
or
incb
pusha
jno
enter
insb
inc
jge
dec
xchg
inc
faddl
xchg
aas
push
adc
jge
loope
jge
and
inc
jne
ret
jecxz
dec
xor
fwait
into
push
and
int3
je
sub
fbstp
mov
scas
dec
or
push
push
stos
adc
push
inc
mov
xlat
fisttps
inc
out
test
add
mov
or
in
shll
xchg
fsubrs
in
xchg
add
sbb
jecxz
movsl
dec
cmpsl
jns
mov
xor
mov
in
pop
bound
add
in
push
mov
clc
or
push
repnz
or
adc
stos
mov
mov
movsb
sbb
pop
inc
dec
in
in
out
data16
pop
push
push
mov
pop
mov
sbb
jno
mov
or
mov
rolb
clc
sub
lock
sub
dec
cli
and
aad
fcomi
aam
mov
sub
dec
push
inc
std
in
and
inc
cmc
inc
jle
jnp
inc
shl
mov
hlt
pop
arpl
arpl
loop
xchg
sbb
fstpl
ret
andb
in
popf
addl
pop
mov
cmp
cmp
daa
js
push
insl
pop
xchg
mov
call
push
js
sbb
sub
cmpsb
gs
cmpsl
fsubrs
lret
bound
jo
or
ret
mov
test
inc
popf
mov
sub
pop
fs
adc
sbb
sarb
cs
movsl
inc
push
push
fdivl
popl
fwait
xor
xchg
insb
mov
pushf
insb
mov
add
xchg
and
and
les
sbb
out
adc
lock
add
mov
sub
call
mov
sarl
movsl
cmp
addr16
mov
add
sbb
xor
outsb
inc
sti
insb
mov
btr
push
and
fucomp
push
jo
sbbl
enter
inc
pop
jge
push
repz
repz
stc
ljmp
or
daa
pop
cmpsl
jae,pt
and
push
popf
jno
and
in
xlat
fdiv
adc
gs
or
icebp
mov
popa
faddl
bound
cmpsl
sub
scas
adc
push
xorl
aad
je
pop
dec
sub
adc
adc
scas
insl
mov
push
fiadds
test
add
mov
in
xchg
into
sub
aaa
xchg
shrb
mov
push
je
sub
dec
mov
pop
lss
sub
push
jns
push
pop
pop
sub
jge
push
in
cld
stc
and
dec
bswap
jnp
xchg
or
inc
add
cmp
or
push
outsb
xlat
lds
int3
push
pop
nop
popa
sbb
pop
adc
mov
ljmp
mov
mov
scas
repz
stc
pusha
aaa
fsubl
or
cmp
xchg
test
je
pushf
xchg
mov
or
in
push
push
cmp
sahf
hlt
dec
les
push
mov
ja
iret
jl
jb
out
ds
in
xchg
hlt
pop
shll
inc
or
adc
ja
ret
lock
rclb
dec
jo
dec
fcomip
and
shl
or
mov
dec
xchg
out
ss
fwait
aaa
cmp
xor
cmp
push
mov
xor
and
pop
mov
test
mov
adc
js
lods
cmp
cmp
mov
subb
dec
loop
or
adc
scas
addl
inc
push
loop
ja
insb
or
fstl
push
or
subb
das
pop
cld
sub
sub
mov
push
mov
icebp
lahf
popa
imul
les
lea
lcall
insl
sbb
leave
mov
in
jle
push
sub
lret
push
jns
shl
pop
mov
xchg
xchg
jge
xor
lret
push
sbb
mov
sahf
lahf
xchg
inc
imulb
adc
pop
xchg
lret
dec
in
cmc
enter
cmp
mov
in
enter
push
loopne
xchg
ret
and
rolb
loop
scas
and
inc
outsb
xlat
dec
dec
out
adc
jne
push
xor
xchg
cmp
insb
adc
lods
rcrb
sahf
rorl
sub
sbb
xor
outsb
push
and
adc
jnp
sub
mov
call
pop
ss
test
cmp
mov
popa
lret
inc
rcrl
imul
stos
addr16
cmp
ret
dec
pushl
mov
clc
mov
sbb
aad
adc
push
test
out
loop
loopne
push
or
sbb
out
jge
add
sub
mov
into
int3
fisttpll
mov
xchg
mov
call
jae
enter
push
push
dec
out
cmp
test
clc
cld
mov
mov
cmpl
cltd
inc
inc
jmp
xchg
ja
test
pop
push
mov
pop
inc
movsl
fisttpll
addb
jo
push
seta
xchg
stc
or
sahf
into
mov
aam
subl
test
xchg
mov
fidivrl
out
ss
or
adc
xchg
call
aad
fld
dec
adc
in
cmc
sub
sbb
popa
test
rol
xadd
dec
mov
xor
cmpsl
jno
movsb
xchg
sub
cmp
decb
and
fwait
aaa
pushl
pop
pop
insb
push
mov
cld
pop
cli
das
mov
add
test
shlb
mov
mov
sub
dec
push
js
bound
mov
ljmp
cwtl
jne
dec
cmp
pop
fisttps
aaa
in
pop
inc
in
and
or
sbb
data16
push
dec
js
fisubrs
mov
xor
mov
and
push
idiv
add
dec
mov
cmp
sbb
jmp
fs
aas
cmc
push
movsl
ror
sub
mov
mov
inc
dec
fcomps
cmp
ja
aam
sbb
ss
lret
call
sbb
sbb
popf
arpl
rcl
mov
xor
sbb
sub
movsl
adcl
pop
test
sahf
or
mov
in
sbb
daa
in
out
lret
pop
popa
jbe
jecxz
test
cwtl
xchg
dec
fwait
jns
or
pop
int
cmp
psllq
ss
cmp
adc
jo
enter
imul
enter
stos
imul
mov
test
mov
mov
fsubp
add
lods
movsb
fmull
jb
mov
ss
dec
test
in
push
and
or
jecxz
ja
push
or
imul
imul
sbb
jecxz
cltd
sbb
push
or
sbb
dec
adc
lret
out
repz
and
cmp
or
and
push
rclb
dec
insb
inc
inc
negb
inc
mov
leave
bound
xlat
sbb
push
jg
cmp
or
mov
pop
std
dec
mov
jp
les
mov
adc
mov
push
jl
lcall
sub
loope
or
inc
pushf
lods
jmp
scas
xor
dec
push
sbb
add
outsl
jp
stc
lcall
jnp
mov
push
int3
add
repz
and
enter
roll
xor
popa
pop
or
out
pusha
mov
cmp
lods
xor
push
lahf
cmp
cli
mov
fidivs
lods
cltd
repnz
xchg
or
ja
cmp
fbstp
or
mov
xorb
or
pop
sbb
xchg
sub
mov
in
jno
data16
mov
dec
jmp
mov
not
lods
adc
fs
dec
mov
addl
aaa
push
push
sbb
mov
sbb
inc
and
insb
fldl
scas
lret
jecxz
jp
jg
scas
mov
mov
ljmp
loop
fwait
mov
pop
xchg
into
gs
or
push
outsb
loop
lcall
lods
jl
mov
cmp
dec
fwait
pop
mov
jb
leave
mov
and
inc
loope
mov
and
sub
hlt
sub
call
rdpmc
or
and
dec
add
arpl
por
mov
dec
jmp
leave
std
adc
push
inc
mov
xor
mov
sti
inc
mov
fs
mov
jno
push
out
movl
add
push
sbb
addl
dec
push
fiadds
mov
xor
cmpsb
ret
xchg
pushf
sub
loope
insl
movsl
cmp
imul
aam
dec
fs
jl
or
or
cs
fdivl
or
fwait
inc
pop
mov
push
mov
test
sbb
scas
sbb
das
jg
add
fisubrl
inc
gs
push
xor
xchg
scas
add
cmp
lods
push
arpl
scas
xlat
dec
outsb
sub
ret
mov
mov
jae
jnp
rorl
inc
je
ret
mov
repnz
xlat
inc
repz
push
scas
test
lea
shrb
add
jg
stos
decb
add
push
inc
xchg
jmp
xor
xorl
pop
int3
shll
int3
xchg
and
outsl
std
out
mov
jnp
push
pop
test
clc
mov
out
adc
adc
jecxz
inc
dec
cmp
in
push
add
jg
mov
cs
dec
ret
and
sub
xor
or
cld
movsl
mov
jb
sbbb
pop
mov
and
mov
arpl
js
jae
mov
mov
aas
jp
pusha
sub
lahf
pop
mov
lods
and
dec
aam
dec
popa
cwtl
outsl
xor
xchg
xchg
mov
adc
in
adc
cmp
mov
dec
invlpg
mov
jae
jbe
xor
mov
aad
cld
neg
idivb
or
xor
mov
jmp
out
pushf
push
popa
mov
fcoms
aam
icebp
push
xchg
lds
add
jle
sbb
fstl
shlb
mov
scas
in
lret
xchg
mov
jg
pop
ss
fcompl
jae
jae
mov
sbb
lods
inc
ja
nop
popa
andl
es
add
pushf
cli
cmp
lahf
mov
rorl
pop
dec
push
aad
inc
loope
xor
popf
loopne
pop
loope
out
cli
aad
lods
or
jnp
sbb
jle
xchg
repz
push
rcll
lret
cmp
cmp
mov
loopne
jg
out
and
leave
adc
inc
jo
xchg
mov
stos
mov
inc
pushf
pop
lret
jnp
imul
and
adc
mov
ret
inc
push
sub
dec
mov
fistps
add
popa
cmp
inc
loop
or
or
adc
or
ret
xor
leave
lods
pop
pop
sub
in
clc
jg
jg
and
addr16
int3
and
lods
jmp
pop
stos
inc
pop
shrl
lcall
cmpsb
lock
cltd
cwtl
sbb
inc
push
lock
jns
dec
xchg
es
fdivrs
adc
icebp
mov
mov
or
in
lds
cwtl
inc
nop
mov
mov
sarb
icebp
in
in
aaa
sub
pushf
mov
divb
xlat
inc
sbb
insb
pmaxub
add
sbb
xchg
movsl
movsl
fimull
xorl
inc
nop
outsb
loopne
inc
test
sub
cmp
out
fldl
sub
scas
mov
adc
pop
lods
dec
or
pop
add
xchg
imul
jl
mov
outsb
shll
aas
scas
aas
cwtl
movsl
push
ja
sbb
pop
adc
and
sub
cmp
iret
addr16
dec
pop
push
adc
test
sti
out
out
add
push
lock
fbld
pop
mov
outsb
pop
xchg
popa
orb
xchg
add
or
scas
dec
mov
aam
movsb
sbb
popa
jmp
pop
jecxz
and
les
mov
push
ss
jno
aas
mov
in
mov
es
stos
cs
arpl
aam
mov
inc
std
pop
inc
jmp
mov
pushf
imul
arpl
cmpsl
adc
dec
aaa
cmp
jbe
nop
pushf
repz
add
sub
xchg
pop
mov
mov
test
cmp
inc
and
hlt
push
fildll
mov
or
pop
adc
into
inc
mov
nop
popf
xlat
pushf
andl
xor
mov
mov
push
ret
mov
jge
addl
out
mov
or
pop
ss
sbb
lods
mov
cmp
fwait
mov
in
mov
testb
sub
fs
icebp
fstl
push
ds
ds
cld
call
mov
cmp
pop
lods
sub
pop
imul
xchg
push
push
xor
stc
ret
pop
mov
pushf
loop
add
adc
add
ret
lret
fdivrl
inc
xor
pop
jbe
cmp
stos
aas
add
mov
ret
cmp
adc
or
int
loope
sub
jg
out
xor
enter
dec
cmp
mov
lea
cmp
cld
inc
cld
aas
sti
fwait
andb
enter
mov
pushf
ret
mov
insl
xchg
dec
jp
mov
push
dec
jo
out
lcall
mov
clc
sub
xchg
xchg
xchg
jne
jnp
movnti
adc
pop
pop
sti
jl
clc
addr16
jp
inc
cmpl
cmpsl
cmp
iret
mov
jl
sub
mov
xchg
out
xorb
pop
xor
clc
adc
cwtl
sti
push
mov
and
xchg
cmpsb
outsb
test
lea
lret
xchg
cltd
push
push
cltd
rol
call
xor
mov
lcall
mov
pop
and
bound
mov
push
inc
orb
pusha
sub
cmpb
cwtl
push
arpl
adc
and
xchg
repz
add
icebp
ljmp
frstor
jle
xor
xchg
xchg
inc
adc
movsb
sbb
or
nop
movsb
aas
dec
lea
jle
mov
mov
jge
cmp
sahf
jle
ja
rcll
pop
aam
cmpb
cli
fcmovbe
imul
fs
imul
or
xor
mov
aad
cmpsl
rcll
jl
repnz
mov
dec
cmp
aaa
mov
mov
adc
das
xchg
fs
and
sbb
jle
mov
sub
or
call
dec
mov
imul
jp
mov
icebp
dec
lret
ret
pop
inc
shr
pop
ja
pop
push
or
xlat
ljmp
push
mov
push
pop
imul
inc
pop
inc
lea
or
jo
insb
sti
jae
cmpsl
ficoms
outsl
mov
in
push
pop
jo
sub
in
cmp
ss
cmp
dec
loope
cmpsb
mov
js
jge
pop
cltd
cltd
add
mov
sbb
lahf
es
mull
mov
xchg
outsl
dec
dec
lock
lock
in
test
inc
sub
jns
pop
sub
cmpsb
ljmp
xchg
loope
xor
xor
test
aaa
and
xchg
testl
xor
testb
int3
out
xchg
adc
add
jne
pop
pop
stos
pop
lret
pop
jbe
sub
push
cwtl
xchg
sbb
inc
push
cli
bound
loope
call
pushf
jb
xchg
or
add
enter
scas
sub
and
cmp
lcall
lods
fs
aas
mov
pop
xor
push
sub
add
xchg
jno
shll
testl
xlat
sbb
pop
ss
jmp
jns
push
ljmp
mov
in
and
xchg
pop
jmp
push
cmp
xor
and
sti
andnps
loopne
adc
xchg
jmp
dec
outsl
pusha
arpl
jp
cmp
mov
push
fdivrp
mov
pop
jns
frstor
test
ret
cs
cli
sub
imul
adc
insl
pop
add
cld
pop
lds
mov
lret
jae
jno
les
cltd
pop
inc
push
sbb
jge
mov
xor
outsb
and
sub
imul
dec
and
xor
jo
clc
popf
ja
loopne
pop
inc
in
or
xor
movsb
mov
aad
daa
popf
jne
jns
hlt
jmp
sub
and
mov
insl
in
and
imul
pusha
pop
jns
sbbb
insb
stc
mov
out
sti
daa
movsb
dec
cwtl
fiaddl
ret
fisttpl
jge
mov
push
out
clc
movsl
pushf
xchg
sbb
jmp
stc
out
inc
scas
jp
aas
aas
adc
push
cmpsl
lret
push
cmp
shll
iret
inc
sub
out
and
repz
sarb
and
pop
mov
out
jge
cmpsl
lods
je
mov
ficoml
push
outsl
mov
push
rcrl
dec
das
enter
jbe
or
jnp
popa
clc
adc
xor
popf
sbb
repz
pop
loop
imul
cs
sbb
ds
pusha
mov
and
mov
mov
sti
shlb
out
xchg
jmp
int
push
push
negb
xchg
popf
dec
mov
or
ljmp
xor
adc
vandps
and
stos
mov
push
stc
out
cmp
aaa
stos
fdivs
imul
std
outsl
and
or
jmp
ret
mov
sbb
jbe
sarb
jne
xorb
dec
sbb
stos
jge
lahf
or
add
decb
mov
fwait
call
aas
fbld
inc
sbb
inc
insl
pop
mov
cmp
aas
scas
mov
test
std
mov
aaa
sti
aaa
fwait
inc
gs
adc
stos
push
stos
fiaddl
arpl
pushf
mov
lea
sbb
adc
xchg
add
lods
push
fsubrs
movl
push
mov
mov
jo
shlb
inc
push
loopne
aas
insb
sbb
cs
lea
scas
pop
arpl
aad
sbb
push
xchg
movsb
jb
in
mov
push
adc
cmp
ljmp
shl
out
xor
pop
cmpb
pop
dec
jbe
movsl
mov
pop
mov
adc
enter
mov
ss
cmpsb
cmp
inc
js
ret
fisubs
test
jmp
dec
xchg
hlt
push
ss
mov
mov
pop
dec
push
sub
push
pop
and
jmp
push
cmpsb
pop
or
shll
mov
mov
jo,pt
cmpsb
jmp
addr16
push
jle
cmp
out
jno
and
push
add
imul
push
pop
mov
or
pop
repnz
fimuls
fucomip
pop
xor
mov
mov
iret
inc
cmpsb
cmpsl
mov
int3
dec
jg
push
or
stc
add
xor
add
int3
mov
inc
cmpl
scas
mov
scas
jb
adc
jae
cmc
in
cmc
and
cld
rclb
mov
fstps
dec
mov
loope
mov
test
insb
je
push
xor
mov
lea
lret
lds
sarl
jb
movsl
cmp
or
jecxz
icebp
insb
pop
aam
pushf
ljmp
mov
je
cmc
adc
push
insb
fnstsw
ljmp
call
add
jae
fstps
shlb
pop
in
mov
into
jno
mov
inc
inc
sbb
dec
xor
cmpsb
ljmp
stos
cli
jns
lods
sbb
hlt
pop
in
fidivrl
adc
arpl
loope
push
addr16
ret
and
cmp
dec
push
xchg
mov
sbb
pop
test
pop
movsb
jp
out
ds
dec
adc
imul
xchg
pop
adc
push
mov
ret
shlb
xor
add
lds
test
sahf
cmp
test
sbb
and
cmp
jge
test
setbe
stc
jnp
mov
push
xchg
pop
xchg
mull
fstpt
mov
loop
fistpll
lods
fs
xor
mov
out
cmp
scas
push
add
jae
add
jnp
orl
add
arpl
pusha
mov
sub
sbb
mov
lods
dec
les
cmpsb
cli
add
pushf
std
rclb
das
pusha
cmp
or
mov
xorb
cmpsb
xchg
test
jnp
xlat
mov
lods
fcompl
mov
and
jp
std
enter
push
cmc
jp
adc
aam
mov
nop
fisubrs
clc
cmp
mov
adc
adc
es
movsl
mov
dec
ret
int
lds
jo
xor
movsl
cmc
test
pusha
mov
sub
sbb
pop
sub
pusha
mov
fistps
pop
clc
into
jbe
mov
cmp
in
mov
mov
loope
mov
mov
xchg
loop
jle
jl
add
aad
sbb
inc
dec
xor
fwait
sti
mov
add
inc
dec
cli
mov
cs
mov
pop
jle
shlb
inc
ss
clc
mov
mov
ds
push
mov
das
shrb
inc
push
cmp
mov
lcall
ret
fcoms
xor
es
add
sbb
jle
int
jb
mov
lock
mov
cmp
cwtl
in
mov
cmpsb
fwait
dec
ja
loopne
add
sbb
mov
mov
inc
outsb
outsb
jmp
xchg
rclb
jne
in
push
aas
loope
sub
xchg
std
pop
ret
mov
fistl
cltd
xor
mov
jns
das
jae
cwtl
cmpsb
mov
cwtl
xlat
xor
jge
stos
andl
dec
push
cmp
daa
sub
and
sahf
sti
push
xor
inc
lcall
jl
and
sysenter
mov
adc
push
push
jge
loope
xchg
outsb
insl
push
xchg
push
lret
sbb
sarl
dec
or
push
imul
fimuls
out
adc
stc
sbb
fwait
aaa
add
and
dec
out
xor
cmp
mov
movsb
mov
jne
icebp
mov
imul
rcrb
cwtl
push
xchg
xlat
cmp
xchg
cmp
stc
push
movsb
mov
jae
sub
push
in
sti
pop
test
nop
dec
or
mov
or
jge
dec
xchg
in
aas
jle
pop
lret
sbb
cld
cmpsl
dec
inc
ds
fcompp
arpl
push
cmp
jns
mov
xchg
outsb
push
bound
clc
test
push
mov
test
notb
in
daa
xchg
mov
shrb
cmp
cmp
push
mov
mov
mov
loope
pushf
mov
push
and
call
jp
ret
iret
mov
adc
test
pop
cmp
xchg
pop
lret
movsb
and
sub
int3
loope
mov
cli
roll
pop
xlat
iret
or
jb
ficoms
or
testb
jle
and
pusha
outsl
aam
js
jecxz
cmpsb
jge
mov
add
adcl
sti
shlb
leave
xor
stc
in
and
in
pusha
repz
aas
push
fwait
add
test
jne
pop
dec
push
sub
imul
out
xor
stc
dec
xor
pusha
or
cmp
stos
cmpl
mov
mov
inc
push
adcb
je
xchg
mov
push
sub
mov
bound
inc
push
shl
lret
mov
or
add
add
leave
in
mov
ret
xchg
push
mov
xchg
fadds
ret
xor
adc
xor
sub
cmp
adc
loope
dec
outsl
sub
lods
jecxz
stc
ljmp
cwtl
nop
pop
mov
push
inc
xor
xchg
push
cmp
mov
lods
ret
push
lock
mov
in
ljmp
fdivrl
popa
in
call
ljmp
les
inc
leave
add
xchg
xlat
mov
sbb
jge
sub
inc
test
in
rorl
imul
fs
das
push
xchg
inc
aas
lods
mov
out
dec
xor
or
pushf
mov
jl
jb
xchg
out
adc
stos
mov
fwait
mov
push
inc
inc
mov
inc
jns
dec
rcl
popf
popf
hlt
mov
adc
pop
ret
pop
popf
mov
fstpl
clc
ret
pop
out
loope
dec
mov
dec
out
pop
push
push
int
dec
arpl
xchg
pop
xor
ljmp
pop
push
and
adc
sbb
addl
jae
cltd
shlb
addr16
subb
mov
ss
subb
jge
stc
cmp
push
les
sbb
mov
xlat
add
push
sbb
repz
or
shrl
pop
mov
xchg
sbb
icebp
test
xlat
pop
in
decl
adcb
cmp
dec
mov
add
mov
inc
adc
cmp
loop
lds
pop
pop
sbb
jb
jae
push
repz
notl
lds
jb
jge
and
add
not
stc
rclb
rcr
aaa
call
push
or
inc
add
imul
in
mov
cmc
sbb
jmp
mov
fistpl
add
sub
icebp
xor
fdiv
pop
push
push
aam
dec
bound
ret
push
adc
jmp
in
outsb
inc
jg
adc
and
mov
cltd
xor
and
inc
into
pusha
and
stos
dec
clc
add
or
adc
pop
imul
jmp
in
push
sub
fnstcw
jecxz
xchg
push
inc
xor
inc
adc
xchg
cmpsl
mov
mov
repnz
ret
iret
ds
out
inc
je
push
mov
fcoml
push
pusha
cld
pop
xor
mull
dec
sbb
mov
sahf
imul
fistl
in
cld
fisubrl
mov
fnsave
push
imul
push
or
movsl
bound
sbb
data16
jne
push
out
xchg
mov
std
outsb
xchg
or
and
cwtl
mov
and
sahf
fimuls
jae
mov
inc
cmpsl
inc
cmpsb
mov
mov
and
pop
js
std
ffreep
push
sbb
sahf
dec
adcb
leave
sbb
adc
les
xchg
cmp
add
outsb
jp
push
xor
mov
std
mov
bound
popl
bound
daa
int
mov
cmp
enter
cmp
inc
roll
popf
cmp
popf
pop
in
dec
icebp
pop
push
xchg
pop
jmp
enter
loop
mov
in
lret
data16
outsb
jp
xchg
cmp
or
test
repnz
stos
xorb
jbe
test
mov
jecxz
or
adc
dec
in
shrb
imul
xchg
fs
in
imul
movsb
int3
cmp
dec
mov
gs
rcl
pop
or
add
scas
rorl
mov
loopne
dec
sub
add
arpl
mov
enter
xor
in
or
sub
push
xor
pop
out
lcall
mov
and
lds
cmp
fiaddl
xor
bound
xor
pop
neg
pop
sbb
movsl
sub
test
cmp
test
repz
mov
ret
icebp
inc
mov
cwtl
rcrb
sti
mov
xchg
out
aam
enter
cmc
dec
mov
pop
push
sbb
inc
mov
xor
out
stos
aam
or
xor
push
aam
mov
or
test
xor
add
das
outsb
sar
pop
sbb
test
mov
bt
mov
lahf
mov
and
push
push
subl
outsl
out
and
or
xchg
shrl
lock
rclb
aad
add
adc
xor
xor
fildl
les
leave
adc
mov
outsl
inc
xchg
push
jg
xor
mov
jno
lods
daa
rcrl
jo
scas
and
jle
mov
pop
push
dec
in
mov
ds
jg
jns
int3
pop
cltd
add
movsl
shlb
lds
pop
sti
inc
subb
movsl
cmp
add
cli
mov
mov
stos
imulb
jnp
inc
or
adc
sub
lock
arpl
add
test
shrb
clc
mov
mov
add
cld
inc
mov
and
cltd
push
cmp
jmp
jne
mov
aam
mov
add
adc
inc
sub
mov
in
lcall
mov
and
xor
int3
fwait
and
stos
mov
xor
in
out
addb
mov
fistpl
push
xor
je
inc
push
xor
push
fistl
out
jg
sahf
in
rcl
insb
mov
xchg
cmp
nop
xchg
jmp
or
adc
loopne
repnz
fldt
mov
loop
andl
scas
into
cltd
inc
in
push
jl
inc
push
test
je
aad
push
leave
mov
iret
mov
out
or
pop
sub
lds
and
fst
testb
cmc
pmaddwd
aad
shl
ret
or
mov
xchg
jo
in
movsb
add
dec
js
inc
jle
pop
insb
addr16
sub
sub
sbb
stos
xchg
pop
in
push
dec
mov
fbld
sbb
iret
fdivl
jns
pop
aaa
fadds
imul
sbb
jmp
and
mov
inc
pop
sbb
sbb
lods
adcl
imul
cld
mov
inc
loop
cmpb
getsec
arpl
stos
addr16
std
jns
or
and
sbb
inc
xor
in
inc
inc
sti
cs
pop
sbb
mov
xchg
and
xchg
mov
shlb
ljmp
cmp
sbb
pop
and
in
dec
push
and
push
leave
or
and
je
add
movsl
outsb
xor
xor
xchg
in
gs
pop
popa
enter
in
das
cmp
push
push
ja
adc
xor
adc
adc
pop
aaa
aas
mov
jb
ljmp
std
inc
imul
pop
push
fdivrl
ret
pop
insl
dec
cs
ret
inc
xchg
and
out
cmpsl
adc
xor
adc
and
sub
mov
lret
int3
add
cmp
xchg
xchg
test
data16
gs
fsubrl
xor
or
fidivrl
mov
sbb
aaa
faddl
pusha
or
mov
das
into
mov
xchg
addr16
mov
sbb
push
mov
add
bound
aad
cwtl
dec
push
out
push
rorl
out
clc
xor
enter
into
in
or
into
aas
mov
repz
jle
insw
sbb
fs
jmp
cs
add
lods
pop
sbb
std
out
shr
imul
hlt
inc
shlb
ljmp
pop
fldcw
ss
loope
add
sub
pop
dec
cmp
xor
pop
out
stos
and
imul
inc
lret
mov
xchg
and
cmp
jg
aas
push
cmp
leave
cmp
int3
add
add
jae
loope
dec
cmpsl
jg
jbe
fcomps
cmc
sahf
dec
xor
ss
mov
xchg
outsb
fldcw
cwtl
enter
sub
adc
sub
dec
std
or
cli
push
and
jnp
cmp
mov
mov
sub
mov
lods
in
shll
inc
aaa
lods
pop
mov
repnz
dec
pop
movb
dec
xchg
in
ret
xor
ret
test
push
cld
repz
pop
dec
hlt
les
xchg
test
jp
jno
push
sahf
sub
jmp
sub
jae
adc
mov
or
icebp
cmp
mov
and
lahf
int
fistpl
pop
sti
cmc
mov
fsubrs
mov
mov
cmc
sub
lret
popw
stos
int
pusha
out
fldl
and
dec
lods
cmpsl
lea
lods
lea
stc
fs
pop
imul
xchg
ja
dec
mov
fld
ss
xor
leave
shll
hlt
dec
out
cld
enter
pop
adc
std
jl
adc
cmpsb
sub
sub
insb
add
xor
addr16
loopne,pn
insl
out
call
inc
or
push
sub
sub
pop
push
aad
aad
pop
sub
aas
and
dec
adc
outsb
ret
and
repnz
stc
addr16
stos
clc
jbe
ss
push
pop
fisubs
filds
je
test
imul
addb
dec
push
and
popa
xor
add
jae
mov
out
and
imul
mov
mov
pop
test
xchg
cwtl
sbbb
sub
mov
frstor
xchg
pop
lret
movsb
xor
pop
sub
mov
inc
scas
enter
jecxz
pop
push
cmp
push
sub
or
sbb
jno
pop
sahf
add
add
pop
es
mov
or
pop
cmp
rorl
shll
push
xor
adc
std
xor
shrl
roll
int
inc
cmp
das
mov
pusha
cltd
mov
jecxz
ret
sbb
imull
jb
sub
and
shrb
out
mov
xor
push
hlt
add
mov
jo
stc
and
inc
add
xor
fs
mov
dec
pop
dec
xchg
sub
pop
or
pop
sahf
sub
fiaddl
inc
sti
xchg
push
leave
filds
jecxz
add
fsubrs
or
sbb
inc
insl
cltd
xorb
jle
sub
icebp
add
lods
data16
insl
fs
subl
loope
into
inc
cmp
jb
sbb
jp
std
xchg
in
pop
int3
xchg
test
mov
xor
daa
cmp
ljmp
pop
shrb
and
popf
xlat
mov
push
dec
loop
mov
sbb
push
dec
jecxz
mov
push
push
outsl
fisubrs
inc
sbb
nop
aas
call
mov
push
push
add
jg
decl
or
ficoml
lods
std
scas
mov
cmp
flds
xchg
iret
ja
dec
xchg
add
sbb
lods
cmp
jo
cltd
pushf
jae
xchg
and
jno
xlat
out
adc
pop
cmp
xchg
mov
insl
ljmp
adc
icebp
add
mov
imull
push
subb
dec
ret
call
popf
rclb
or
and
ret
sahf
push
cmpsb
jmp
jmp
addr16
adc
mov
mov
push
loope
pop
mov
inc
ljmp
lods
jecxz
shlb
jne
js
arpl
testl
sub
or
dec
mov
stc
mov
fisubs
adc
mov
xchg
adc
mov
add
lret
pop
js
out
dec
lods
popa
add
les
jne
mov
out
nopl
sbb
insl
outsl
pop
push
jae
pop
mull
scas
ja
fwait
pop
aaa
jne
mov
pop
add
xor
enter
mov
adc
push
std
mov
sbb
jo
xor
lds
ss
mov
xchg
das
leave
cltd
clc
jb
cli
dec
lcall
add
xchg
es
insb
mov
nop
add
cmpsb
fisttpl
jno
and
in
jecxz
push
cltd
ds
push
mov
inc
enter
cwtl
lcall
inc
sub
scas
aaa
or
subl
lret
loopne
pop
ds
mov
cmp
xchg
push
in
pop
in
addr16
aam
test
inc
push
or
push
mov
inc
add
pusha
pushf
add
jne
xor
out
push
jg
inc
movsb
jno
testl
and
pop
adc
mov
cmp
pop
arpl
pop
xchg
inc
cmc
pop
or
inc
xchg
mov
andb
pusha
leave
pop
out
mov
mov
addb
lret
xchg
enter
subl
or
pop
push
imul
push
pop
sahf
pop
sahf
popa
xor
enter
dec
sub
inc
int
mov
adc
lahf
cmpsl
mov
and
push
ret
inc
cmp
push
xchg
add
stos
jp
jb
adc
pop
insb
out
imul
xor
add
add
fnstsw
sub
pop
mov
xchg
mov
dec
aas
mov
mov
jno
mov
sahf
fdiv
xchg
xchg
mov
cmp
jb
fs
rolb
stc
pop
lret
add
lock
das
mov
iret
push
lods
inc
jg
fsubrp
hlt
cmc
jnp
push
adc
pop
test
imull
popa
lods
sti
dec
lret
add
lods
mov
inc
add
sub
in
scas
lods
hlt
ljmp
xlat
lods
cmp
xor
sti
push
xchg
add
mov
push
jbe
and
arpl
pop
sub
cmp
movsl
push
rcrl
xor
fsubl
int3
sar
mov
xchg
and
push
cmpsb
in
mov
jnp
add
addr16
push
xchg
sbb
pushf
and
sub
cmpl
fistps
cmp
sbb
push
call
push
aas
mov
adc
pop
lods
adc
das
sbb
ficoms
into
xor
push
mov
sub
jp
iret
lret
in
jmp
mov
dec
cmp
scas
ror
xchg
in
mov
mov
aam
mov
pop
jb
push
dec
jns
daa
aam
outsl
mov
repnz
dec
cli
mov
cmp
jg
push
cmpsb
sbb
test
jns
xchg
mov
outsl
cwtl
pop
xchg
out
sub
ds
sbb
push
adc
mov
stos
notb
lahf
push
test
mov
mov
sub
xor
jae
lock
push
mov
imul
add
out
in
lahf
dec
enter
mov
pop
pop
cltd
xor
jmp
mov
adc
pop
into
add
sarb
ds
xor
add
jmp
jbe
dec
pmullw
xchg
jecxz
and
or
test
cmp
cli
mov
xlat
clc
arpl
andb
jecxz
addr16
push
faddl
into
int
ljmp
pop
sbb
adc
xchg
mov
ss
add
fsubrl
lahf
mov
lea
mov
dec
cmp
idivl
gs
push
jl
dec
outsl
add
inc
pop
or
inc
fcmovnbe
sahf
call
call
jo
xor
rcrl
dec
outsl
xchg
jbe
dec
int3
movsb
mov
inc
js
jmp
mov
mov
in
call
push
push
adc
dec
repnz
xor
adc
pop
xor
add
es
stos
cmp
adc
mov
insl
nop
in
xchg
rcrl
xchg
loopne
popf
imul
xchg
call
push
sbb
in
xchg
adc
dec
adc
jmp
fcompl
in
cmp
fldl
cltd
lret
fsts
push
popf
xchg
addl
lods
or
push
cltd
dec
data16
jp
fsts
test
sarl
stos
sarl
push
push
push
stos
cli
and
inc
bound
iret
lods
adc
icebp
stos
sbb
adc
sti
add
adc
jbe
imul
iret
mov
fwait
mov
in
pusha
xor
outsl
popf
xchg
leave
xchg
stc
push
lret
stos
cmp
mov
adc
mov
icebp
fwait
dec
stos
or
and
sbb
movb
fdivrs
lahf
dec
mov
shlb
test
insb
pop
sbb
addb
int
fs
xchg
nop
push
clc
mov
cwtl
mov
fiaddl
jae
loopne
mov
icebp
popa
xchg
mov
cs
xlat
xor
stc
ficomps
mov
nop
sbb
jae
pop
insb
ret
cltd
cld
jnp
mov
leave
cmpsl
lea
inc
adcl
dec
mul
cltd
loope
daa
or
pop
push
mov
in
out
pop
adc
xor
lock
cmpsb
iret
cs
test
sbb
add
dec
dec
mov
and
push
add
mov
push
xchg
push
idivb
into
xchg
cld
xor
lods
fisubs
xor
bound
adc
dec
aam
xor
js
leave
andb
scas
aam
imul
std
stos
dec
xor
fstpt
jl
xchg
lret
sti
jno
pop
jbe
shrb
push
cmp
xchg
cmpl
pop
je
das
fmulp
or
sarb
stos
sub
rcl
in
call
das
fiaddl
fwait
push
gs
push
bound
cmp
xor
dec
out
insl
push
xchg
sub
pushf
add
fnstsw
out
lret
stos
movl
xchg
ret
sub
pop
xchg
fdivrs
pop
and
xchg
int3
sbb
bound
imul
mov
cmp
mov
es
fmuls
insb
frstor
inc
call
hlt
setns
adc
stc
fsubl
add
aas
inc
popl
xlat
mov
cwtl
mov
pop
inc
nop
sbb
lahf
stc
push
jno
jge
iret
cmpb
sbb
imul
bound
repz
sbb
mov
mov
jnp
stos
or
sbb
xchg
xor
dec
xchg
int3
call
mov
and
pop
stos
inc
cwtl
add
mov
cs
xor
jecxz
cmp
cmp
xchg
mov
ja
dec
jle
aam
insl
dec
addl
lret
insl
pop
push
icebp
fwait
mov
jmp
jo
fmull
fwait
cmpl
imul
js
aaa
jle
mov
jo
ss
sti
pop
mov
fsubs
lea
add
mov
jne
mov
xchg
mov
faddl
std
nop
pop
orl
jmp
add
arpl
aad
or
cmp
in
sbb
push
cwtl
mov
jmp
arpl
popa
repz
hlt
dec
mov
stc
cld
bound
lret
data16
push
outsl
jbe
ret
jbe
nop
xlat
cmp
arpl
or
insl
movl
fbld
sub
pop
mov
clc
mov
cmpl
or
fwait
out
pop
imul
fnsave
in
mov
out
sub
cld
imul
lods
sahf
or
mov
mov
mov
jecxz
push
fs
and
xchg
or
add
jp
cli
dec
in
mov
xorb
and
test
adc
insb
cli
lret
sub
fcmovbe
and
mov
pop
adc
and
hlt
into
pop
cwtl
out
push
scas
stos
cs
jge
sub
pop
std
lret
hlt
adc
test
fmuls
sub
jp
cmpl
jg
shrb
mov
in
mov
jo
xchg
dec
mov
jne
adc
fstl
mov
xor
lcall
mov
aad
iret
sbb
insl
inc
loopne
push
and
xor
repnz
dec
sbb
cmp
xchg
jmp
and
dec
dec
loop
ficoml
mov
dec
lock
test
nop
fisubl
xchg
dec
push
addr16
lods
cmpsb
push
mov
rorl
pop
out
shlb
pop
jae
aad
pop
and
xor
lds
hlt
repz
sub
cld
in
dec
sbb
dec
push
cmp
push
movsb
out
jp
arpl
pop
push
addl
insl
rorl
sbb
mov
sbb
and
sbb
mov
cmp
pop
das
cmp
push
imul
cmp
pusha
jecxz
cli
scas
adc
add
leave
lods
clc
dec
and
add
mov
mov
ficompl
loopne
repz
test
pop
cld
ret
mov
mov
ds
repnz
out
and
xor
rcr
push
jno
mov
inc
mov
pop
sbb
mov
mov
ds
or
jne
and
xchg
pushf
cwtl
xor
mov
leave
sub
pop
sti
mov
inc
xor
push
xchg
inc
dec
jbe
int
rclb
fstp
xor
cld
push
imul
push
xchg
insl
sub
jl
mov
push
jne
iret
mov
xchg
mov
jb
cli
mov
mov
sub
jo
mov
js
and
jns
mov
and
ret
jl
inc
repnz
mov
ss
in
xchg
push
shlb
shlb
in
jge
push
in
lds
aaa
into
dec
xor
int
lods
inc
fistpll
or
movsl
test
fsubs
mov
pop
push
xor
add
add
mov
adcl
fisubs
cmp
push
aam
jne
lods
decb
stos
jno
inc
push
je
jmp
mov
test
and
jns
xchg
dec
loop
icebp
lea
mov
je
mov
lcall
ret
push
jae
mov
mov
and
insb
mov
sbb
pop
add
mov
sbb
mov
loopne
leave
arpl
cld
mov
filds
mov
insl
je
adc
mov
adc
scas
outsb
testb
sbb
or
jp
out
xchg
nop
out
and
test
dec
or
dec
mov
dec
pop
dec
push
xchg
popa
fidivrl
mov
mov
out
push
aad
cwtl
out
sub
xor
mov
ficoml
aad
nop
mov
cmc
inc
mov
data16
push
lods
es
cli
shlb
dec
mov
out
int3
or
in
stc
adc
jne
xchg
les
cmpsb
pop
adcb
test
pop
movsl
sub
or
mov
test
das
and
inc
into
aas
fsubs
stc
pop
test
ss
sub
mov
and
jo
int
inc
cmp
xor
adc
rolb
fldenv
inc
cmpsb
mov
rcrb
push
sub
xor
inc
pop
in
in
out
mov
jmp
push
sub
pop
int
push
je
pop
jae
xchg
lret
sbb
test
roll
ret
jecxz
pop
cmp
imull
pop
push
mov
shll
daa
cmp
cmp
jno
bound
cld
popa
jecxz
xchg
fsubl
les
sbbb
mov
imul
loope
xor
cmpsb
addb
add
or
shl
or
loop
pop
es
xor
sub
in
inc
jge
mov
jge
das
sub
jo
in
jne
inc
lret
mov
in
out
or
xor
cmpsl
in
mov
jns
inc
pushf
scas
cwtl
pop
lods
aas
hlt
adc
add
lods
scas
or
movsl
jmp
loope
xchg
dec
jl
or
repz
fs
mov
in
das
mov
ret
xor
sub
pop
adc
or
lds
mov
cmpsb
idivl
push
inc
inc
jp
div
daa
push
inc
adc
jae
insb
pop
xor
pop
cmp
lds
pop
cwtl
movsb
cmc
push
push
mov
je
mov
xor
add
jno
jno
mov
cmpsl
outsb
add
divb
aad
xchg
bound
les
idivb
and
or
adc
cs
dec
pop
pusha
mov
jbe
lods
aas
pop
je
jl
xchg
jnp
add
in
test
je
negl
movsb
fisttpll
movsl
adc
adc
dec
cmp
sbb
popf
test
arpl
ficompl
and
test
pop
das
pop
push
or
xchg
pop
and
loop
cmp
jo
sub
lcall
jo
cmp
repz
ret
sbb
add
jecxz
inc
and
xor
lcall
push
test
outsb
out
mov
add
insl
add
pop
int3
bound
push
rorb
mov
adc
xor
ja
sub
push
into
mov
andb
mulb
shlb
jecxz
xchg
movsl
dec
and
es
scas
les
js
subb
arpl
adc
adc
sbb
push
push
sub
inc
fisttpll
ret
add
inc
inc
and
es
jb
jbe
push
imul
adcb
and
ret
insb
lods
and
imul
jecxz
inc
mov
adc
mov
repz
jg
test
lahf
mov
movsb
mov
mov
cltd
in
cltd
xchg
in
divl
sbb
adc
dec
cwtl
lods
mov
fsubs
pusha
pop
xor
in
jns
jo
pop
into
sahf
lods
sub
xchg
push
popf
sahf
movsl
dec
dec
pop
clc
aad
testl
add
sbb
rorb
inc
or
shll
rcll
test
add
pop
sub
sub
inc
loope
dec
hlt
mov
ret
mov
aaa
lret
daa
xchg
or
sbbb
jle
dec
scas
jp
push
jge
xor
sar
dec
cmpb
add
mov
push
lret
int3
shrl
or
outsb
cmovo
loope
pop
mov
dec
in
inc
pop
jl
nop
notb
daa
out
push
arpl
insl
cmp
push
in
out
adc
les
xor
mov
adc
mov
in
call
xchg
mov
xchg
dec
sub
mov
xchg
jo
lret
mov
mov
daa
ja
repnz
faddl
call
ficompl
fbld
sbb
xor
std
scas
xchg
xchg
xor
pop
inc
and
loope
lahf
jno
les
ds
mov
sub
fisttps
adc
push
sbbb
xchg
push
into
push
lds
cmp
pop
cmp
insb
addl
and
es
pop
scas
dec
or
adc
adc
ljmp
jmp
cmpl
inc
lock
lret
stc
xchg
cmc
xor
or
in
mov
scas
cmp
push
jmp
jp
inc
ret
lea
pop
inc
xor
mov
cmp
lret
call
dec
in
mov
jle
movsb
cld
ret
sbb
jge
call
pop
fptan
stos
cs
push
popa
mov
fwait
enter
xchg
sub
movsl
scas
pop
in
push
sti
pushf
mov
hlt
loope
into
ss
push
add
pop
push
fidivrl
das
ja
or
insl
mov
mov
test
lahf
lds
cmp
sar
push
cmp
jmp
or
scas
das
pop
push
mov
pop
and
mov
inc
stc
loope
mov
mov
je
xchg
adc
jo
insb
into
ja
lods
notb
sub
pop
adc
subl
rcr
jge
lds
mov
imul
sti
jbe
shrb
scas
add
push
push
aam
xor
cmp
xchg
ds
loopne
int
pop
pop
mov
ja
jge
mov
mov
loop
arpl
fmul
mov
divl
mov
test
dec
jnp
adc
fsubrs
jne
negl
popa
not
sbb
int3
scas
sbb
das
out
adc
or
inc
mov
xchg
add
aas
je
push
leave
sbb
mov
mov
jb
mov
mov
shll
jge
mov
fcmove
sub
popf
mov
mov
cli
xchg
lea
les
jbe
cld
lahf
test
and
ror
cli
add
movsb
loop
cmp
xchg
loope
andb
mov
sbb
rcl
add
or
mov
mov
dec
jne
pop
or
mov
inc
jecxz
pop
xchg
out
xorps
add
cmpsl
jns
iret
out
dec
in
rcrl
das
into
or
fcompl
inc
mov
adcb
or
add
mov
into
outsb
xchg
into
fmulp
sahf
push
add
js
mov
mov
jle
lahf
mov
out
int3
pushf
add
gs
in
sti
push
test
mov
mov
and
inc
sbb
and
int3
push
enter
xor
call
dec
or
dec
idivl
inc
outsl
adc
int
testb
mov
jb
push
idivb
jno
in
shll
mov
insb
int
ja
mov
dec
lahf
pop
inc
mov
sbb
xchg
int
mov
fidivrl
mov
push
imul
cmove
imul
in
mov
pop
mov
and
mov
push
std
xor
mov
mov
mov
fadd
hlt
jmp
ljmp
aaa
mov
xchg
jb
aad
xchg
sub
mov
dec
sub
rorl
iret
notl
fwait
and
push
std
pop
dec
fndisi(8087
jnp
jb
out
and
fcomps
push
inc
outsl
sbb
push
mov
popf
dec
mov
decl
or
adc
or
or
jns
push
adc
and
fimull
jb
lea
and
mov
insb
mov
pop
test
adc
xchg
aad
lret
fs
add
int3
cs
out
mov
data16
jae
sbb
shll
dec
sub
cmp
outsl
lahf
pop
test
pop
pop
out
push
jle
out
out
lock
lock
stos
and
fcomp
scas
inc
sub
inc
pusha
fwait
sbb
push
sbb
popa
mov
adc
adc
hlt
xchg
sbb
inc
xor
cmp
mov
aaa
xor
rorl
push
dec
lret
push
loopne
push
inc
cmpsl
mov
jae
sti
jnp
je
data16
cmp
jp
movsl
sub
mov
mov
jae
ret
add
xchg
sbb
mov
je
mov
and
stos
leave
jne
in
addr16
xor
shll
or
push
cmp
sbb
xor
les
ret
push
xor
out
jb
adc
aam
out
jmp
into
iret
mov
add
xchg
or
ja
call
les
test
mov
mov
jmp
pop
adc
lahf
lcall
adc
sub
icebp
adc
ja
outsb
popf
in
fldcw
pop
mov
mov
mov
xchg
push
adc
mov
fs
mov
mov
in
add
cmp
jo
mov
mov
movsl
mov
fwait
divb
jle
or
cmp
or
rolb
stos
xchg
clc
lahf
mov
cld
ret
pop
xchg
sbb
xlat
cmpsl
out
loope
xchg
cwtl
aas
fmuls
in
mov
mov
pop
cmp
sub
loope
fs
scas
jbe
neg
and
pop
dec
mov
jle
dec
mov
je
inc
das
add
pop
adc
pusha
cmp
insb
lahf
dec
sbb
stos
mov
jo
int
jbe
jo
inc
gs
xchg
mov
and
movsl
aad
inc
and
out
enter
popf
push
pop
stos
and
fs
outsb
in
dec
out
and
or
sub
imul
sbb
mov
add
xor
cmpsl
mov
push
mov
cs
xor
scas
jg
inc
adcl
push
lods
pop
sub
fisttpl
ss
cmp
xchg
daa
lock
pushf
movsl
sbb
int3
incl
xchg
cltd
jb
dec
sbb
loopne
aas
rorb
mov
push
daa
dec
add
dec
mov
imul
lds
pop
je
ficomps
lock
jecxz
jo
in
leave
je
add
push
lods
lahf
popf
lcall
mov
sbb
ds
das
jns
pop
outsl
movsl
cwtl
pop
cmp
ret
sub
clc
gs
popa
fistpll
jge
sub
arpl
adc
adc
js
cmp
jp
adc
mov
pop
dec
jo
imul
sub
or
test
enter
lods
xor
push
xor
cmc
popf
les
jnp
dec
pushl
jle
xlat
xchg
stos
lds
push
scas
add
mov
adc
and
sbb
sbb
adc
stos
jp
ss
popa
or
add
mov
movsl
mov
pop
ljmp
cmc
mov
stos
sahf
fsubrl
or
test
pop
mov
jmp
jg
mov
mov
jno
cli
push
sbb
jbe
out
dec
lahf
test
pop
adc
lods
push
mov
pop
jbe
jmp
push
shlb
inc
dec
xchg
hlt
xchg
adc
mov
jmp
daa
pop
stc
pop
or
add
jle
testl
sbb
scas
inc
push
call
inc
aaa
sub
mov
push
jns
adc
mov
inc
repz
xchg
jecxz
or
test
loopne
inc
push
xor
pop
shl
ficomps
mov
int
push
or
sub
fldt
jno
add
or
xor
shl
or
adc
jle
pusha
stos
mov
adc
outsl
xor
adc
sbb
stc
js
pop
push
out
xor
loop
loopne
cmp
sub
push
or
adc
xchg
mov
or
push
scas
das
stos
push
push
jg
sahf
orb
adc
out
dec
jge
push
jmp
mov
mov
mov
ret
jae
mov
cmp
adc
dec
mov
out
rorb
arpl
mov
adc
push
gs
inc
sub
add
lods
mov
inc
xchg
notb
data16
jmp
pop
add
aam
aad
mov
sarb
fidivs
sub
daa
ja
nop
and
faddl
mov
lea
add
push
and
in
push
popa
jae
xchg
rcr
sbb
mov
mov
mov
sbb
daa
inc
jmp
mov
jge
push
int3
cmc
push
add
xor
mov
push
and
rcl
jp
cmp
repz
and
imulb
push
xor
fimuls
lds
xor
rclb
cmp
ret
sub
jb
and
jmp
icebp
jecxz
fdivrs
mov
or
mov
in
cmp
dec
push
add
xor
add
imul
or
mov
jns
int3
sub
sbb
dec
cmc
adc
fldenv
out
xchg
add
adc
fcomi
adc
mov
enter
pop
filds
andl
sarb
push
sarb
dec
add
and
stc
push
scas
lcall
jge
pop
mov
mov
lcall
or
decb
daa
aad
jns
and
push
ss
in
int
xchg
pushf
mov
into
test
dec
ret
jno
adc
push
mov
ret
add
mov
fsubr
mov
jge
cmp
mov
and
mov
lret
pop
mov
add
and
inc
add
jl
dec
jmp
xchg
and
icebp
rorl
arpl
push
jo
out
je
movsb
sahf
cld
xor
fcmovu
les
mov
inc
daa
out
in
push
pusha
adc
mov
leave
pop
push
shl
or
mov
fdiv
or
pop
dec
pop
sub
lods
js
mov
cmp
test
push
push
test
inc
hlt
mov
inc
dec
lods
test
mov
movsb
mov
xchg
push
ja
and
dec
push
pusha
mov
out
frstor
and
push
inc
mov
clc
cmp
sbb
dec
call
adc
mov
sbb
jae
dec
jae
and
and
out
fcomi
test
daa
or
pop
cltd
out
fimuls
lret
sub
cmp
pop
imul
ficoms
scas
hlt
mov
lcall
notrack
mov
adc
jb
cmp
adc
push
loopne
add
rclb
loopne
mov
popf
fucomip
and
and
inc
push
mov
in
cmovns
outsl
pop
cltd
add
bound
push
jmp
push
pop
sbb
in
push
sub
add
sub
add
jns
sbb
cmp
fs
test
add
mov
dec
daa
dec
adc
xchg
push
mov
and
repz
push
fcomps
pop
xchg
pop
or
jo
ret
fnstcw
loopne
mov
std
addl
mov
stos
fucom
xor
pop
int
rcrb
into
fldcw
pushf
lock
mov
je
mov
xor
mov
imull
std
ds
mov
pop
scas
dec
popa
push
pop
mov
sahf
data16
fcompl
and
loopne
shrl
and
int
ret
mov
int3
mov
fistps
xor
loope
fsubs
call
scas
out
lea
fistps
cltd
jb
dec
jo
mov
jbe
adc
les
fwait
sub
rorb
pusha
pop
jp
mov
pusha
sub
sti
jl
dec
cmc
mov
ret
push
sbbl
cmp
push
repz
in
cmp
push
mov
adc
mov
xchg
xchg
lahf
mov
pop
lock
clc
adc
xchg
movsl
push
imul
nop
add
imull
inc
dec
popa
hlt
mov
js
outsl
cmp
inc
dec
jae
scas
lods
adc
iret
ret
adc
or
xchg
shl
in
mov
aam
sti
pop
mov
xchg
dec
push
outsl
icebp
jns
xor
adc
out
sbb
mov
sbb
push
mov
sti
sbb
push
add
sub
mov
in
sbb
jo
das
pop
xchg
adc
pop
cmpsl
repnz
adc
mull
adc
in
cmp
lea
xchg
sub
in
aad
sahf
daa
aam
mov
or
ret
mov
push
pop
shll
cmp
and
mov
gs
inc
sub
sub
adc
lret
mov
mov
testl
fsubl
pop
loopne
xchg
pop
adc
icebp
or
jnp
xchg
pushf
stos
adc
andl
out
movsl
fldl
xor
sti
js
imul
ds
push
adc
xlat
test
or
pop
push
fwait
cmp
test
iret
fisttpll
mul
rorb
movsl
popf
mov
test
xor
insb
pop
mov
mov
mov
push
out
fsubr
xchg
xlat
popa
mov
sub
xor
push
mov
in
sbb
mov
pop
fnstsw
mov
in
popf
popa
xchg
das
js
out
pop
mov
jo
loop
adc
stc
xor
loopne
lahf
mov
sbb
mov
or
stos
jne
cmpl
add
ffreep
cwtl
sub
or
pop
test
call
pop
int3
ror
sar
movsb
sbb
sub
addl
nop
shlb
pushf
xor
fadds
dec
jge
out
cmp
push
sbb
jae
lret
leave
jae
mov
or
xchg
inc
xchg
loopne
loope
daa
addr16
mov
and
pcmpeqw
or
icebp
mov
push
bound
inc
or
aad
sar
inc
cltd
jp
movsb
jge
add
jae
mov
sub
cmp
add
into
pop
inc
cs
push
cmpsl
cmp
and
sbb
ret
jno
outsb
and
sbbb
mov
cltd
sti
mov
ja
icebp
insl
arpl
push
xor
ja
inc
mov
push
jmp
bound
add
insb
mov
sahf
ljmp
pop
mov
mov
imul
out
sti
aam
or
jp
or
and
repz
pop
loopne
mov
stos
pop
push
jle
lret
lock
nop
int
push
push
loop
mov
cmp
in
push
das
fsubrl
in
test
cmp
xchg
imul
sub
test
js
add
inc
popf
pushf
pushf
add
sar
dec
mov
mov
xorb
int3
loopne
adc
std
xor
push
or
jae
xchg
lea
mov
jp
push
mov
xor
xchg
jnp
jae
jle
jl
repnz
add
inc
roll
add
in
xchg
xor
negb
mov
fdivs
add
mov
mov
stos
cmpsb
inc
shlb
out
sti
ret
fistps
or
mov
rcrl
pushf
loope
sub
inc
mov
out
ret
cmp
andb
in
in
mov
inc
adc
xchg
cmp
out
mov
fmuls
jp
inc
pop
mov
int
rcrl
jle
mov
sub
decb
add
sub
sbb
fs
lcall
pop
int
xchg
cmp
into
or
xor
push
aaa
es
ss
cwtl
sbb
out
add
stos
in
fmull
and
dec
mov
pop
ret
popf
in
ljmp
xchg
mov
mov
loop
imul
in
iret
lods
add
sub
mov
les
adc
fcmovnb
xchg
dec
sbb
adc
rorb
int
push
pushl
mov
cmp
sub
cmp
loop
sbb
inc
cmpb
fstps
push
in
stos
pop
aad
adc
xchg
mov
dec
lods
es
cmpsb
jne
lret
mov
lahf
add
sbb
lods
sbb
xchg
aad
or
loope
into
mov
mov
dec
cltd
xchg
sbb
sub
add
mov
in
test
xor
pop
cmp
cltd
lock
jo
ja
aaa
lret
cmp
inc
adcb
divps
leave
jmp
jno
mov
inc
xor
fdivr
and
fstl
mov
push
inc
stos
das
jecxz
pop
dec
jo
push
loopne
aad
test
out
dec
pop
fcmovne
add
jae
cltd
mov
cld
call
test
mov
repnz
xchg
mov
movsl
mov
test
stos
mov
mov
cmp
inc
pop
inc
cmp
push
outsl
dec
cmpsl
jecxz
dec
xchg
push
xor
pop
bound
fldt
inc
or
jl
xor
notl
out
xchg
lock
push
aas
pop
out
test
cld
sub
notb
stos
push
jp
xchg
xchg
xchg
lock
cmpl
movsl
mov
aam
in
btc
cmp
inc
or
lahf
shlb
adc
cli
js
sub
xchg
sbb
mov
sbb
cmc
pop
stos
pop
iret
enter
sub
outsb
xchg
mov
test
loopne
inc
pop
pop
jge
pop
lahf
dec
sbb
mov
mov
insb
push
negl
mov
cmp
lret
push
inc
shrb
iret
leave
pop
mov
mov
and
sti
sub
xchg
sbb
xor
jp
jg
insb
lds
ss
pop
rorl
loop
sahf
cmp
inc
shl
out
inc
std
stos
scas
cwtl
mov
mov
inc
add
push
add
mov
and
pusha
cmp
notb
hlt
sub
adc
loop
xchg
inc
pop
pop
add
cmpxchg
mov
test
out
in
xor
push
lock
movsl
scas
ljmp
jmp
fistpl
lret
out
xlat
fdivrl
fbld
cmc
lea
adc
lock
mov
mov
dec
ds
lret
lock
lahf
adc
push
push
add
outsl
std
and
fwait
jb
stos
jle
lcall
loop
cmp
jo
push
inc
imul
movsb
mov
je
nop
cmp
xlat
mov
arpl
mov
mov
js
getsec
xor
mov
add
insl
test
or
insl
adcb
les
jmp
bound
pop
rorb
scas
push
imul
es
popf
pop
adc
out
dec
cmpsb
and
pop
rcrb
clc
xchg
cmp
sbb
or
and
pop
pushf
leave
cmp
mov
sub
aaa
insb
sub
movsb
insl
std
loope
jl
scas
jne
les
xchg
sarb
pop
addb
sub
mov
jmp
xchg
cltd
push
adc
sti
xor
lahf
xchg
jne
cwtl
and
xchg
pop
inc
cmp
stos
jns
xor
jbe
mov
push
pop
inc
dec
dec
iret
jge
push
xor
inc
test
inc
adc
or
mov
xlat
push
stos
mov
mov
out
push
shlb
adc
pop
fwait
outsb
gs
lods
clc
fnstcw
xor
adc
mov
sub
push
dec
dec
dec
in
or
imull
daa
scas
xlat
xchg
lahf
xchg
adc
adc
sub
xchg
mov
dec
mov
cmp
pop
push
pop
xchg
dec
dec
mov
enter
mov
inc
jns
stos
xchg
inc
std
divl
lcall
popf
repz
jp
cwtl
fists
push
pop
jecxz
out
pop
mov
push
mov
mov
sub
pop
in
and
mov
jl
xchg
sub
fldl
mov
mov
mov
jne
sub
cmc
shlb
fwait
comiss
orb
dec
add
mov
in
imul
in
xor
inc
jae
int
sahf
inc
push
fisubrs
dec
dec
mov
xchg
add
mov
inc
cli
test
jno
mov
ret
shrb
xor
lock
aam
lcall
nop
cld
add
or
fmull
push
addr16
add
repnz
sbb
pop
clc
adc
inc
fnstenv
xor
scas
xor
dec
inc
sub
sbb
xlat
clc
pusha
popl
icebp
bnd
and
push
push
enter
jl
popf
lock
jmp
push
popa
ja
cmp
mov
lret
push
pop
shll
ljmp
out
xor
es
adc
pop
add
and
inc
lods
mov
xor
push
clc
movsl
cli
or
sbb
fnsave
cmpb
dec
mov
mov
pop
hlt
xchg
jecxz
push
bsr
ret
aad
pop
dec
out
cmp
xchg
sbb
std
jb
mov
in
cmp
dec
pop
stc
pop
add
imul
inc
pop
ljmp
outsl
inc
mov
je
inc
lods
push
push
inc
sub
lret
mov
xchg
dec
pmaddwd
test
adc
push
xchg
lret
lret
cmp
mov
in
add
push
call
push
mov
and
adc
into
loope
mov
xchg
out
adcl
aad
ficoms
bound
cli
adc
lds
sbb
mov
mov
mov
push
adc
xchg
jne
xchg
jg
mov
repnz
cmp
push
in
loop
aas
xorl
adc
jecxz
and
jns
mov
test
sub
jns
adcb
pop
cmp
mov
shrl
in
daa
testb
push
jne
fiaddl
or
jne
inc
xchg
inc
mov
sbb
mov
jnp
lods
xor
ret
inc
repz
cmpsb
mov
push
inc
pop
in
fwait
pop
mov
adc
mov
repnz
in
pop
outsl
mov
scas
fdiv
std
repz
xchg
iret
jge
push
mov
pop
mov
xor
jbe
fs
sub
dec
lret
or
push
cs
push
jb
and
jae
shrb
divb
in
lcall
add
cmp
bound
mov
or
sahf
lahf
or
pop
and
lahf
sub
lea
jecxz
in
shlb
mov
adc
jne
lcall
movhps
cmpsb
push
jg
xchg
sub
xor
lods
and
push
push
xorl
out
insb
lcall
push
xor
sbb
pop
fs
lret
pop
adc
roll
loope
push
push
inc
jne
div
or
lds
aam
push
mov
fmul
cltd
jp
negl
icebp
inc
enter
adc
lret
shl
lret
pusha
test
jl
and
in
add
js
push
jle
xor
je
mov
ss
mov
dec
ffreep
lds
and
inc
cli
test
loop
jae
decl
int
push
shlb
out
mov
xchg
mov
add
add
dec
int3
dec
pop
xor
xchg
mov
cmpsb
sub
or
push
sbb
aas
bound
mov
js
jbe
mov
mov
test
icebp
je
jns
dec
nop
dec
test
xor
gs
daa
pop
dec
out
stc
stc
pusha
je
pop
cmpsl
jp
mov
jl
insl
rep
mov
mov
lock
mov
inc
ja
or
idivb
iret
mov
std
aaa
pushf
cltd
add
aad
pop
mov
cmp
jp
mov
mov
pop
xor
nop
adc
pop
and
xor
imull
add
les
lahf
lahf
mov
sahf
inc
adc
cmc
aaa
mov
inc
pushf
push
jmp
mov
inc
add
xchg
add
int
insl
mov
xor
loopne
aad
pop
movsb
mov
rol
adc
xor
cmp
das
aas
xchg
pushf
icebp
mov
adc
fisubrs
fidivs
mov
clc
adc
data16
decb
nop
xchg
pop
pop
push
cwtl
sub
je
movsb
mov
hlt
jns
dec
nop
dec
jns
cmpsb
mov
inc
leave
add
jmp
mov
sub
mov
and
xchg
xchg
xchg
xor
mov
mov
mov
mov
insb
sti
mov
loope
inc
push
jl
std
mov
fisubrl
cwtl
movl
add
sti
jns
mov
loop
test
lds
fldenv
out
fiadds
inc
loop
movsb
mov
or
and
sbb
lahf
cmp
xor
adc
pop
sbb
and
jecxz
outsb
loope
push
bound
dec
into
ret
lcall
out
cmpsb
sub
mov
scas
inc
pop
std
repnz
sahf
in
pushf
repnz
dec
adc
test
dec
dec
pop
mov
loop
xor
sbb
mov
pop
movsl
and
iret
rol
mov
ja
jne
test
cmp
or
lahf
daa
stc
pop
lds
js
into
stos
test
jecxz
cmp
pop
call
lds
inc
lock
cwtl
xchg
mov
jo
lahf
mov
push
aam
adc
and
or
inc
das
pop
jne
movsb
inc
pop
inc
jno
sahf
add
adcb
shlb
mov
add
inc
addb
bound
shlb
in
dec
les
in
ss
and
jmp
adc
cmp
sbb
add
pop
add
lock
sbb
xchg
fisttps
inc
repz
ds
mov
out
test
cmp
bndldx
xchg
in
inc
jb
pop
aas
stos
xorl
xchg
jl
mov
xchg
leave
stc
push
ja
cmp
int
mov
inc
lret
aam
jle
imul
xchg
xchg
pop
fdivrl
xlat
loop
jbe
in
or
xor
and
xchg
insl
stos
xchg
sbb
mov
sarb
in
and
idivb
mov
fnsave
pop
add
int
cmc
loope
dec
inc
cmpsl
cmpsb
add
ja
dec
cld
cmp
jle
push
sbb
adc
int3
cmp
inc
fcmovne
xor
xchg
cmp
addr16
inc
mov
cltd
xchg
sbb
push
jnp
pop
sub
test
mov
dec
or
jb
dec
or
ljmp
mov
xor
xchg
push
or
fsubrp
pop
leave
mov
dec
outsb
adc
mov
std
and
pop
mov
dec
inc
pop
xchg
cmp
push
adc
mov
outsb
ret
push
mov
mov
adc
lret
mov
stc
cmpsl
aas
inc
sbb
cltd
mov
mov
sub
cmp
jno
xchg
cli
mov
mov
fwait
in
shl
mov
jl
jae
inc
rcl
cmc
ss
mov
lods
mov
cmc
xor
dec
pushf
out
int
push
lods
aam
dec
jp
std
cmpsb
inc
je
dec
mov
mov
cmp
unpckhps
jle
mov
insb
cmp
adc
iret
xchg
bound
aad
jne
loopne
inc
test
or
or
mov
lock
pop
push
leave
and
fucomip
fiaddl
call
add
xor
nop
pop
or
mov
xor
xchg
out
fidivrl
fsubrl
in
jmp
or
or
xor
mov
adc
sarl
and
movsl
lret
push
sub
pop
jno
pop
jmp
push
mov
sbb
sub
mov
xor
loop
push
nop
je
hlt
pop
cwtl
or
in
or
mov
neg
and
mov
add
sbb
test
xor
shll
mov
sub
ja
mov
or
test
lret
int3
scas
iret
jl
push
sbb
add
sbb
and
lcall
andb
es
xchg
add
ja
imul
and
mov
fnstsw
push
sti
js
mov
cltd
add
sub
push
repz
pop
push
xchg
test
insl
xorb
leave
fldt
mov
lods
call
inc
jns
pop
mov
imul
mov
mov
push
dec
psubusb
mov
sbb
push
nop
push
sub
incl
push
xor
jne
int3
xorb
add
fcoms
and
cmc
pop
jecxz
aas
int
dec
xor
pop
xor
cli
int
dec
xor
addr16
fistpll
addr16
loopne
mov
pop
jmp
mov
aad
je
xchg
fwait
mov
mov
movsl
idivl
imul
sub
mov
pop
and
vpsubusb
out
lret
fstpl
lahf
pop
push
pop
shlb
or
adc
pop
fdiv
in
fs
xor
dec
gs
xchg
out
or
pop
mov
mov
adc
cmp
test
das
fsubrs
inc
shlb
mov
pop
jge
sbb
test
add
xchg
push
push
dec
test
and
or
outsb
jb,pn
aas
in
add
lahf
in
inc
cld
shl
scas
pushf
idivb
sbb
icebp
mov
mov
cwtl
sub
push
mov
dec
pop
inc
fnsetpm(287
into
or
jne
test
pop
sub
addr16
adc
cltd
enter
movsb
pop
arpl
mov
jge
out
sub
or
icebp
cli
mov
aaa
xchg
inc
pop
mov
call
pop
and
in
mov
or
loop
sub
data16
out
sbb
sbb
lahf
mov
inc
pop
mov
sub
call
aaa
mov
and
stc
pop
and
sbb
mov
mov
frstor
imul
fwait
cmpsl
dec
in
repz
les
stos
out
pop
andb
insl
pop
pusha
xchg
mov
outsb
mov
sbbb
sbb
dec
and
push
pop
jb
or
fisubl
and
cmpsb
mov
pop
sarb
shr
adc
mov
pop
mov
push
fs
xchg
test
ja
repnz
push
xchg
repz
movsb
imul
pop
imul
jmp
sub
fbld
pop
and
jp
shlw
xor
or
and
push
cmp
sub
push
xchg
testl
movsb
imul
fcmovnbe
cmp
dec
idivb
out
in
mov
push
jb
imul
dec
loope
out
add
xchg
leave
cmp
pop
push
out
push
push
int3
mov
int3
xchg
add
jb
stos
jne
loop
adcl
xchg
hlt
in
std
mov
loopne
arpl
sbbl
mov
leave
dec
pusha
mov
sbb
mov
cmc
stos
outsl
add
adc
stos
jbe
inc
fnsave
test
jno
cmpsl
mov
add
outsl
movsl
xor
cs
popa
lods
xorb
mov
das
push
mov
pop
ss
jne
call
or
cwtl
iret
dec
mov
repnz
loop
cmp
lahf
mov
mov
xor
sub
das
sub
adc
or
mov
push
hlt
int3
addr16
leave
pop
testl
aaa
mov
inc
pop
in
leave
sub
sub
xor
jl
mov
flds
enter
stc
repnz
stos
dec
mov
aam
and
lret
and
cmp
test
or
xor
jecxz
mov
mov
scas
stos
jle
in
mov
jmp
inc
idivb
push
ret
fsub
cmp
inc
lret
adc
loope
int
mov
adc
push
inc
add
ljmp
sbb
jo
inc
dec
enter
out
fldenv
pushf
popa
repnz
dec
push
xor
push
popl
jp
hlt
push
sub
jl
push
negb
or
cmp
out
mov
test
push
xchg
cmp
mov
ljmp
ret
fildll
push
jno
xor
push
cmp
mov
or
mov
xor
fisubrl
push
xor
testb
pop
xchg
push
aam
push
push
lahf
stos
pop
push
mov
dec
outsl
ljmp
notb
cld
lea
inc
loopne
rolb
adc
mov
jg
bound
cmp
pop
stc
jp
sbb
push
iret
je
aam
fwait
sbb
icebp
xor
test
push
orb
xchg
fcmovu
push
xlat
xor
cmpsl
dec
xchg
mov
push
mov
push
testl
sahf
int
fstps
cmpsb
pop
jecxz
lcall
lea
and
cmp
and
or
repnz
aas
leave
push
pop
pop
mov
adc
lret
je
mov
sbb
pop
je
fsincos
sti
sub
into
lds
adc
add
addr16
mov
adc
dec
insl
xchg
test
xor
mov
push
mov
loope
dec
push
pop
stos
loopne
lods
repnz
aaa
xor
mov
sbb
sbb
fs
xor
pusha
mov
les
sbb
mov
hlt
iret
stc
lsl
jmp
cli
ljmp
jle
int3
push
fildl
nop
push
pop
ljmp
dec
sub
pushf
mov
xchg
ljmp
or
xchg
mov
mov
cld
shlb
flds
sub
push
xchg
bound
popf
inc
sbb
andb
pop
mov
movsb
fnstcw
cmpsb
sub
push
inc
imul
dec
lds
ds
mov
xchg
ficompl
daa
std
mov
xor
lcall
rorl
jne
push
lahf
fbld
xchg
cmpsb
push
sub
inc
adc
mov
insl
call
xchg
xchg
push
and
movsl
fwait
lcall
ret
rclb
and
cmpsl
mov
insl
rep
sbbb
and
or
sbb
sbb
in
mov
lret
nop
pop
imul
jo
pop
scas
cltd
enter
jge
sub
in
stos
inc
cmp
bnd
insl
mov
out
push
adc
pusha
cmp
jge
inc
incb
aas
xchg
push
in
icebp
sbb
fidivrs
ss
jo
push
fisttpl
stc
adc
xorl
cmp
lret
scas
cmp
dec
push
xchg
sub
movb
adc
cmp
jb
mov
ficoml
jecxz
adc
mov
jge
dec
popa
cmp
cmpsb
pop
arpl
mov
shrb
mov
addr16
test
mov
cmp
jp
leave
ds
inc
sar
loop
cmpsb
pop
xchg
mov
adc
lcall
std
ss
icebp
pop
push
fistpl
stos
xchg
shll
test
daa
pop
xchg
mov
cld
cli
rolb
sahf
and
and
adc
imul
decl
fcmovbe
mov
movsb
and
xchg
aad
cmc
ss
movsb
imul
or
pushf
movsl
add
test
nop
xlat
push
cli
clc
call
jl
fcomi
stc
arpl
inc
fsubl
mov
inc
jecxz
stc
repz
pop
divb
xor
shll
pop
add
inc
push
mov
popa
mov
and
jb
mov
jmp
lods
push
scas
mov
pop
imul
nop
repnz
pop
int3
adc
mov
mov
dec
rcr
out
mov
shl
aam
mov
xor
ljmp
jns
mov
aad
mov
add
cmp
scas
pop
insl
js
push
add
sbb
add
inc
int3
push
aaa
push
sbb
mov
fsubrs
aas
rcrl
mov
call
shlb
or
mov
ret
pushl
push
adc
loopne
rcr
mov
rorb
scas
je
aad
pusha
icebp
ds
sub
shll
sub
ret
pop
mov
xor
testb
sahf
dec
ja
mov
and
fcmove
push
mov
lahf
fidivrl
pop
jecxz
imul
mov
je
mov
inc
jno
fsubs
jno
jl
insl
fwait
mov
cli
and
adc
addr16
jg
sbb
xor
aad
andb
dec
sbb
mov
mov
jae
add
repnz
dec
jmp
fiadds
xchg
iret
sbb
out
lret
adc
push
out
cmpsb
xor
pop
pop
jg
in
cmp
imul
mov
jnp
lcall
sahf
pop
jmp
adc
pop
xor
int3
mov
mov
dec
stc
and
pusha
lret
mov
lds
jecxz
scas
scas
xchg
jge
inc
dec
fsubrs
mov
shlb
sub
in
sub
dec
into
and
adc
add
mov
cs
cltd
mov
jne
push
jp
jg
ja
out
imulb
push
inc
out
pop
or
mov
sub
cmpsl
sub
mov
lods
mov
xlat
cmc
or
fcmovb
in
mov
das
sub
dec
xchg
or
aaa
out
loopne
or
bound
aad
jle
aaa
push
inc
movsl
cld
pop
incb
and
pop
xchg
loop
out
xchg
jp
sub
push
sbb
mov
sub
repnz
test
imull
insl
mov
rorb
cltd
cmpsl
shrl
cmp
or
je
fnclex
icebp
inc
outsb
mov
push
bswap
clc
jmp
inc
enter
mov
xchg
bound
jnp
pop
fsubrl
xor
xchg
repz
sub
lahf
sbb
mov
js
push
inc
mov
daa
bound
pop
enter
rcrb
pop
xor
cwtl
mov
or
iret
iret
push
repnz
cmc
mov
xlat
push
call
rclb
mov
lds
pop
inc
es
stos
cmp
fstpl
xor
inc
in
lcall
mov
pusha
mov
mov
lahf
push
adc
sbb
stc
pop
xchg
and
mov
jnp
xor
xchg
stos
test
cmpsl
lods
pop
push
pop
flds
shrl
imul
lret
mov
addl
sub
jge
flds
adc
mov
scas
jmp
ja
xor
addl
bound
adc
leave
push
push
fwait
add
add
jbe
and
push
out
fldcw
mov
loop
xor
mov
xor
dec
sbb
sub
fimuls
dec
enter
xchg
or
roll
cmp
xor
mov
mov
adcb
popa
mov
popf
pop
inc
jle
mov
dec
aaa
or
sub
fistpll
nop
fwait
or
insb
push
xchg
or
or
add
pop
insb
pop
jp
pop
rol
pop
mov
ret
arpl
ja
xchg
outsb
mov
xchg
mov
shrl
jl
cmp
in
lods
mov
lahf
ljmp
call
mov
sbb
fists
push
push
add
rcr
and
jp
push
pop
inc
xchg
arpl
push
mull
or
dec
in
add
lods
loopne
pop
lret
add
fwait
lahf
and
push
jecxz
fimuls
std
jmp
in
lods
loopne
cwtl
pop
adc
js
in
cmpsb
cmp
repz
std
cmpb
outsl
adc
or
jl
fsubrp
sbb
sub
jecxz
imul
das
test
sbb
ss
lods
and
jnp
mov
add
pushf
movsb
add
jne
push
ficompl
xor
jecxz
es
scas
test
insl
clc
in
loope
in
frstor
cmp
sbb
jge
mov
jl
jl
dec
rcrb
int3
push
jnp
scas
pop
sub
and
jne
pop
mov
pop
shll
jbe
hlt
stc
pop
jp
std
adc
inc
mov
shll
mov
adc
push
pop
xor
faddl
inc
adc
xchg
mov
pop
jge
pandn
pop
test
sub
cmpsb
cmp
fdivrl
sbb
and
sbb
cwtl
aad
push
popf
xor
data16
and
add
add
push
pop
sub
int3
insl
mov
mov
inc
xchg
mov
je
add
shlb
dec
sarb
push
xchg
fwait
pop
scas
cmpsl
insl
jbe
pop
lahf
jae
pop
sbb
scas
out
inc
add
mov
cmp
pushf
push
jo
mov
and
leave
cwtl
sbb
sbb
cmp
sub
fmuls
pop
xor
xor
pop
sahf
dec
mov
hlt
xor
jl
mov
dec
dec
inc
lcall
dec
mov
jns
pop
sbb
imul
ljmp
mov
insb
xor
inc
pusha
aaa
cmpsb
mov
xor
jp
mov
mull
popf
xor
lcall
pop
fisubrs
cmpsl
xchg
xor
or
push
aad
cmp
mov
icebp
outsb
fstl
imul
je
js
enter
mov
push
mov
shl
jge
enter
fbld
mov
test
popf
cmp
leave
mov
and
mov
push
xlat
pop
dec
mov
push
xchg
fsubrl
jno
into
shr
jl
or
pushf
iret
repz
or
int3
xor
imul
aaa
in
ss
out
jl
mov
fiadds
xchg
xor
cwtl
into
jecxz
xor
sbb
cmp
jb
mov
pop
test
inc
fmuls
jbe
rorb
adc
fsubrs
pushf
sub
out
aam
mov
push
xor
call
push
movsl
jecxz
cmp
sbb
es
xor
loop
jae
das
xchg
mov
cmpsb
aaa
xor
pop
adc
cmc
mov
jmp
xchg
mov
xchg
adc
int
cwtl
mov
add
mov
in
mov
sub
pop
cmp
lock
mov
ds
mov
or
push
cld
in
inc
push
mov
pop
inc
push
out
mov
aas
pop
imul
out
lahf
jae
lea
movsl
shll
jge
repz
mov
and
repz
xchg
xor
cmp
mov
out
xchg
jbe
std
push
sub
subl
vpslld
dec
push
pop
mov
cmc
call
or
adc
fcoml
in
dec
cwtl
jno
pop
repz
outsb
shl
xlat
imul
dec
dec
jmp
xchg
adc
jecxz
mov
addr16
fimuls
sub
xchg
pop
and
jne
sbbb
xchg
lock
mov
out
xchg
sub
push
mov
cwtl
movsl
dec
ficoml
and
repnz
cmp
ja
fstpl
call
insl
add
loop
cmp
loopne
cwtl
mov
mov
push
dec
add
push
ror
pop
or
sahf
or
outsb
push
rorl
pop
popa
pop
mov
cli
outsl
sahf
daa
hlt
int3
popf
ja
jae
repz
xor
add
cld
mov
push
pushf
loopne
sub
out
fnstcw
sbb
enter
jle
inc
roll
xchg
cmc
pop
scas
les
mov
mulb
mov
fcmovbe
fs
fdivl
jg
mov
sub
hlt
loope
dec
inc
fs
sbb
jbe
sbb
and
jae
fdivrs
fidivl
push
cmpsl
mov
or
jmp
mov
js
fimull
adc
sbb
push
push
inc
aaa
push
push
shrl
mov
imul
inc
xchg
jmp
hlt
pushf
pop
push
jmp
xor
mov
rorb
sbb
dec
scas
call
pop
mov
sub
mov
jmp
dec
mov
dec
sub
dec
pushf
pop
cmpl
pop
adc
mov
imul
sti
jge
add
fildll
aaa
sbb
cmp
xchg
xor
movsl
shll
jns
mov
mov
inc
jbe
lods
cmpsb
arpl
add
cmp
xor
insb
jno
cltd
add
inc
sbb
pop
lock
ds
xchg
cli
and
xchg
aad
gs
clc
mov
sbb
xchg
ja
jmp
push
pop
mov
scas
and
adc
cmp
sbb
shr
or
and
pop
push
out
or
in
insl
xor
imul
shlb
pop
or
pusha
jl
clc
mul
sbb
pop
adc
std
mov
movsl
test
ret
inc
or
fnstcw
mov
call
and
add
cmp
outsb
adc
incl
bound
xchg
pop
mov
inc
and
loope
cltd
lret
ds
xchg
lods
popf
bound
loope
mov
pop
fisubrs
sbb
lcall
filds
dec
cld
dec
popf
push
push
jmp
xchg
pop
out
add
leave
xchg
mov
fistps
push
lea
cltd
pop
push
test
push
ret
les
inc
push
mov
inc
jmp
notl
mov
dec
shll
sbb
push
dec
dec
push
imul
fnstenv
aam
push
xchg
adc
std
test
pop
xor
enter
inc
mov
mov
sub
mov
dec
xchg
pushf
sti
popf
sbb
aad
sbb
mov
call
sub
sbb
sub
push
iret
dec
cmp
cmc
pop
mov
mov
pop
or
jl
dec
stc
jne
pop
outsl
add
xchg
jo
dec
or
jno
rcrl
ds
and
xchg
jno,pn
iret
test
shrb
sub
ret
sub
xchg
stos
inc
and
xchg
xchg
and
and
mov
xor
adc
sub
lods
pop
cltd
sub
fcoms
fcos
clc
call
clc
pop
sti
cld
jbe
push
arpl
adc
out
pushf
loope
lock
dec
imul
sub
fbstp
cmpsb
add
jo
jb
ret
mov
sbb
rorl
push
popa
aad
movsb
push
jno
frstor
rol
fdivrs
adc
fists
or
mov
jmp
aaa
in
xor
push
aad
cltd
pusha
push
out
mov
ds
sub
pop
pop
and
mov
jno
xchg
or
xlat
mov
adc
test
popf
loope
push
adc
push
cmp
mov
sub
xor
aam
pop
cli
cmpxchg
lcall
call
movsl
mov
or
xchg
cmp
sub
xchg
cmpsl
mov
adc
cwtl
scas
shrl
pop
frndint
adcl
jb
lock
pusha
mov
adc
inc
pop
push
mov
sub
loope
inc
popa
sti
mov
xchg
jno
xlat
insl
pop
gs
movsb
inc
jge
pop
ds
mov
mov
push
adc
xchg
pop
inc
dec
mov
push
sub
outsb
orb
mov
jo
js
fcmove
sub
std
jecxz
cli
xlat
shr
shl
cwtl
pop
ljmp
xchg
push
mov
fdivp
enter
mov
imul
ret
mov
outsb
sahf
push
movsl
pusha
sub
mov
cmp
sbb
sti
mov
inc
mov
addl
cmp
push
js
push
fdivrp
aad
dec
into
jecxz
sbb
mov
xchg
push
hlt
push
or
pop
sbb
clc
mov
movups
and
mov
lods
mov
ficomps
mov
leave
lock
add
sahf
dec
imul
js
ret
push
jl
test
fucom
push
test
xchg
push
sbb
push
mov
jp
scas
outsb
xchg
mov
sub
cmc
cmp
test
cmpb
dec
and
jns
mov
aad
lock
stos
ficompl
add
into
mov
fcoms
out
add
add
sti
and
enter
hlt
cmp
fistps
ds
hlt
arpl
in
loopne
cmc
pop
loopne
sti
sbb
or
and
dec
pop
jno
push
cmp
sbb
sarb
ret
cwtl
sbb
jp
mov
daa
sub
or
dec
lods
stc
xor
pop
mov
sbb
lahf
inc
sbb
and
inc
js
pop
je
xor
test
jecxz
and
and
popf
mov
cmove
and
add
mov
jg
push
sub
imul
testl
push
cmpsb
pop
out
pmaxub
mov
push
pop
xor
fildl
test
ljmp
pop
gs
mov
push
xlat
dec
js
gs
clc
cltd
jne
adc
sub
ds
rep
gs
fsubs
fisubrs
jbe
cmp
mov
sbb
mov
mov
loope
inc
xchg
jne
rcll
add
ret
cmp
dec
xor
out
jne
jno
xor
sub
mov
loope
repz
pop
imul
test
jnp
mov
xchg
xor
mov
and
dec
repz
ret
aas
mov
cld
call
jb
inc
fbld
inc
in
aam
cmp
fbld
movb
adc
cwtl
jb
test
xor
imul
setne
andl
dec
pop
inc
mov
mov
nop
bound
cmp
and
dec
xchg
mov
ficomps
hlt
cld
outsb
pop
xchg
fwait
mov
aas
or
push
sbb
outsl
gs
pop
lods
xchg
pop
shl
fcmove
fiaddl
sar
fistpll
jge
and
pop
push
sbb
in
adc
test
syscall
pop
int
sub
aas
cmpb
cmpsb
mov
lea
push
mov
insb
push
fsubs
outsl
or
sub
adc
xchg
andb
dec
dec
pushf
sbb
xchg
loope
cmpb
lods
inc
and
mov
mov
popa
bound
xchg
sahf
push
sbb
inc
enter
rol
js
adc
test
cmpb
dec
ficoms
pop
shl
call
aas
cmp
out
mov
cltd
and
dec
bound
pushf
test
add
mov
adc
cwtl
addr16
xor
cwtl
pop
test
mov
imul
clc
es
jno
shll
inc
dec
jmp
xor
or
mov
dec
imul
push
sub
in
outsb
sysenter
mov
lods
cmp
cmp
cmp
aam
mov
into
pop
xlat
mov
mov
inc
and
lds
test
orl
jo
mov
call
shl
push
insl
orl
outsb
rclb
pusha
lods
and
push
push
out
hlt
add
jno
jecxz
scas
stc
les
sbb
addl
mov
push
push
ja
and
pop
or
out
cmp
ficoml
pop
mov
xor
insl
pop
repz
mov
pop
aaa
outsl
mov
sarl
jmp
cmp
iret
mov
sub
mov
push
cs
sbb
add
sbbl
adc
cmpsl
mov
test
and
mov
negl
hlt
in
dec
dec
rolb
test
adc
movsb
cmp
call
lods
js
stos
outsb
xlat
sub
xchg
jle
mov
jnp
repnz
cld
shlb
rcll
pop
xor
cmpsl
sbb
movsl
rcrb
and
lods
into
xchg
sub
add
push
outsb
enter
dec
jb
ficoms
shlb
outsb
xchg
into
push
push
jo
cmp
xor
les
daa
xor
into
sub
jae
cld
cmp
jbe
mov
sub
lds
pop
push
and
xor
mov
mov
inc
dec
push
scas
jne
stc
xor
cli
int
pop
adc
xor
pop
in
inc
lods
bound
cli
sub
and
das
or
arpl
xchg
xlat
aas
loop
xor
out
pop
mov
inc
push
inc
test
sti
mov
cmpsb
loope
sub
and
xchg
mov
xor
cmpsb
mov
and
jno
mov
xlat
popf
data16
cmp
push
mov
sub
subl
xor
jg
lahf
std
scas
dec
mov
je
js
aam
call
ficoml
or
aam
lock
dec
push
mov
scas
and
std
dec
divb
mov
cmp
or
pop
insb
push
mov
fistps
adc
std
sbb
outsl
jno
fsts
lods
inc
inc
sub
outsl
push
mov
cmp
mov
pop
lods
outsl
jbe
in
xchg
bound
pop
jbe
cmp
scas
mov
in
add
adc
pusha
push
filds
xchg
dec
stos
push
fsts
or
popf
xchg
jp
dec
lcall
dec
cmp
xor
mov
hlt
lcall
imul
or
icebp
aad
lcall
pop
cmc
mov
ljmp
call
add
cmp
xor
mov
xchg
mov
jo
pop
mov
jmp
insl
shrl
cmp
push
pop
cltd
ret
push
adc
mov
lds
jl
or
push
enter
cs
lods
scas
jl
xchg
pop
leave
dec
int3
xchg
or
addr16
mov
mov
inc
push
outsl
cwtl
lds
or
push
cs
lret
xchg
js
mov
pop
xchg
xchg
std
mov
lods
subl
push
push
aaa
inc
xor
cmp
aaa
and
std
add
and
mov
daa
in
adc
jge
pop
jmp
mov
in
cmp
andl
orb
sbb
dec
fnstcw
dec
mov
adc
popf
push
insl
sbb
mov
sbb
lods
enter
lods
inc
movsb
scas
and
adc
sti
cmpsl
inc
pop
inc
data16
dec
jns
pop
adc
int3
shlb
adc
inc
jl
imul
int3
in
lods
jle
dec
mov
test
dec
ret
jecxz
sub
scas
xchg
jno
movsl
push
pop
lods
inc
xchg
sub
out
mov
inc
rcl
inc
jne
jg
inc
or
and
and
or
stc
mov
ret
loope
shl
popa
sbb
enter
je
pop
movsl
ret
sub
pop
add
lock
mov
push
add
sbb
lds
push
push
pop
aaa
test
ficoml
sbbb
outsb
cmp
adc
ds
cmp
addb
into
movzbl
aam
push
in
and
inc
shll
shll
shl
pusha
leave
and
ja
pushf
int3
out
bound
popa
adc
adcl
push
xchg
jae
test
mov
in
dec
add
lcallw
jns
fs
aas
xchg
xor
dec
xchg
leave
adc
and
fsubs
int
insl
push
gs
mov
jmp
fmuls
add
sub
mov
xchg
or
cmpsl
shrl
movb
nop
push
std
push
leave
mov
or
sbb
xchg
jl
in
or
cmp
or
out
out
mov
cmc
aas
nop
mov
inc
adc
aas
jb
fbld
inc
lds
fldl
pop
or
cmpsl
xchg
sbb
add
enter
cmpb
add
pusha
dec
cwtl
push
je
adc
dec
dec
xchg
pop
inc
insl
or
insb
or
sbb
jo
push
jbe
and
sbb
inc
test
icebp
xlat
mov
sbb
fwait
enter
mov
pop
add
pusha
int
mov
push
push
das
ja
mov
dec
fiadds
push
pop
insb
dec
sub
ficoms
pop
scas
sub
add
rclb
filds
mov
add
jb
or
mov
mov
dec
subb
or
mov
mov
in
inc
rcrl
mov
int3
popa
add
xor
push
pop
mov
pop
sbb
jp
add
add
pusha
hlt
loope
mov
in
cmpsl
and
push
jge
xlat
mov
push
push
jb
add
jmp
test
mov
add
loopne
inc
adc
and
mov
roll
mov
or
fs
xchg
add
insl
cli
sub
movsl
dec
in
nop
movsb
add
or
mov
movsl
lea
or
rolb
test
lods
shlb
sub
add
notb
mov
mov
stc
loopne
test
bound
lahf
and
push
push
push
dec
mov
orl
mov
cli
jb
lret
cltd
add
popf
fs
jge
sbbl
lret
testb
push
imul
call
or
in
jbe
es
cmp
and
xchg
mov
add
mov
outsl
jbe
cmc
fnsave
xchg
fwait
push
lcall
in
aam
jb
and
adc
cwtl
in
xchg
inc
or
mov
sbb
pusha
lods
jnp
sti
pusha
in
sub
enter
repnz
enter
movsb
xchg
sbb
sarl
lret
xor
les
daa
mov
lahf
aad
sub
or
ror
mov
or
lret
mov
mov
sub
mov
pop
mov
push
cwtl
cmc
dec
inc
arpl
insl
push
adc
dec
in
mov
push
cmc
fistps
lret
js
pusha
push
divb
dec
pop
mov
push
mov
js
add
aas
fs
je
and
adcb
sbb
or
lea
jp
xchg
scas
push
push
jo
pop
mov
roll
push
idivb
leave
enter
repz
sbb
movsl
out
filds
movsb
pop
or
pushf
movsb
inc
sub
pop
fdivs
cli
jno
sub
push
dec
pop
dec
jg
dec
sti
cmp
push
ds
xor
jo
add
sub
push
xchg
dec
pop
lret
out
sbb
movsl
adc
pop
ret
mov
mov
pop
mov
cli
adc
test
pusha
stc
nop
pop
leave
sbb
lret
dec
jl
add
pop
ret
pop
jmp
jne
aam
test
xor
push
lahf
mov
jmp
stc
in
sbb
xchg
add
lahf
adc
fiadds
jne
aas
lret
fucomip
push
mov
sarl
fstpt
jg
dec
les
data16
test
lock
and
adc
fsubl
jmp
mov
add
daa
addr16
nop
mov
jae
push
xor
or
lea
rcll
adc
and
cld
pop
loope
imul
mov
inc
pop
and
inc
mov
fnop
mov
dec
sbb
mov
pop
mov
cmp
sarl
aad
adc
sub
xor
in
mov
enter
mov
js
fbld
cmc
sbb
xchg
fwait
icebp
stc
cmpl
xchg
xchg
arpl
and
idivb
lods
adc
cmp
cmp
aam
adc
jo
mov
mov
or
in
outsl
fmull
mov
shll
cmp
fsubl
mov
push
ret
fnstcw
jecxz
jae
inc
and
mov
xchg
je
js
jmp
or
icebp
js
fisttpl
dec
and
scas
xor
sbb
xchg
pop
or
mov
add
fcoml
or
sbbb
inc
mov
push
insb
nop
xor
pop
add
movsl
aas
mov
adc
in
cld
mov
xor
or
cmp
pop
call
call
cltd
rcl
je
cmp
outsb
ret
mov
sub
cmp
out
mov
fwait
out
mov
sub
pop
mov
pop
mov
jmp
fstl
testb
lret
and
jno
scas
mov
int
data16
inc
andb
cmp
rcll
cmp
sub
and
aas
ja
mov
pop
push
pop
fsts
xchg
mov
xchg
lock
setnp
xchg
rorl
icebp
sbb
aaa
fstl
fistpl
cmp
popa
lock
scas
stos
stos
adc
imul
fs
pushf
mov
or
ret
jge
in
or
mov
push
lods
push
js
sub
imul
dec
insb
jne
xor
cs
arpl
data16
mov
pop
push
lods
pop
mov
mov
sti
xchg
sarb
push
imul
aad
fucomp
sub
cmpsb
aad
jae
xchg
es
dec
mov
cmpsl
push
inc
xchg
shlb
icebp
sbb
loop
fldenv
ret
jmp
ds
icebp
iret
jnp
test
xchg
je
aas
or
cmp
cmp
push
dec
pop
xchg
push
push
out
out
cmp
jb
mov
ljmp
pushf
int
mov
or
add
outsl
add
and
hlt
iret
popf
and
add
into
ds
inc
sub
and
cmpsl
cmpsw
mov
xchg
and
rcrl
mov
cltd
pop
sbb
call
popf
cmp
mov
lock
sbb
nop
das
or
inc
in
insl
push
hlt
cmpsl
xor
ffreep
icebp
dec
loop
ss
inc
cld
dec
jbe
sub
pop
dec
adc
neg
in
cmp
pop
push
imul
push
push
insl
adc
outsl
push
mov
mov
movsl
fidivl
mov
and
xchg
scas
pushf
mov
xor
dec
rol
fimull
movsl
push
push
inc
xlat
imul
aam
call
call
and
faddl
jp
jne
adcb
clc
aam
addr16
mov
ja
sub
aad
sbb
mov
sub
lea
negl
push
xchg
notb
adc
repnz
mov
mov
inc
jle
stos
test
mov
or
fs
mov
jmp
jle
pop
imul
rcl
and
fwait
gs
or
mov
jp
push
test
fistpll
jnp
rorb
xor
xor
fstps
add
ficomps
call
lret
scas
test
loop
push
imul
aad
das
push
jmp
sub
adc
xor
adc
ss
push
ficompl
jg
jp
dec
jno
lock
inc
pop
lcall
out
in
lret
push
mov
xor
push
cmp
pushf
mov
mov
les
popa
ficoml
mov
int3
inc
xchg
aam
push
in
sbb
push
lods
inc
xchg
jge
out
pop
pop
out
jmp
xor
push
icebp
jp
sbb
test
or
jmp
nop
jns
nop
sub
cmpsb
cmc
xor
dec
dec
xor
test
outsb
ret
or
and
xchg
mov
jecxz
cli
cmc
dec
ljmp
lds
es
jle
pop
fcomip
adc
sub
decl
jle
jle
cli
mov
mov
lahf
rolb
or
fmull
mov
rdtsc
inc
and
int3
fwait
and
cld
in
popa
adc
push
mov
push
cld
popf
jbe
aad
aam
fdivs
and
inc
popa
es
xchg
bound
cmp
repz
cli
sbb
mov
ljmp
movsl
cmp
scas
fnsave
call
dec
out
in
rcrb
hlt
cmp
mov
push
inc
mov
jecxz
xor
xchg
stc
sub
mov
pop
push
inc
fidivrl
sti
or
jae
jle
adc
sti
add
cmpsb
loope
cmp
cmc
xor
dec
add
dec
adc
dec
in
andl
dec
fcmovnbe
and
cmp
in
daa
popa
mov
cltd
dec
pop
loope
out
fisttpl
push
mull
pusha
mov
arpl
fwait
arpl
sahf
mov
sbb
mov
mov
adc
loop
sub
imul
sub
pop
jp
std
out
jle
or
data16
push
jmp
in
imul
and
fists
adc
push
add
popa
outsl
lds
pop
int3
je
pop
sbb
rol
xor
dec
orb
daa
in
and
xchg
inc
imul
fwait
imul
jb
lret
mov
sbb
fcmovbe
pop
je,pn
popf
and
inc
mov
sarb
xchg
test
jl
pop
js
lods
outsb
jnp
adc
dec
dec
jmp
sbb
cmp
cmp
pop
xor
xchg
xchg
xchg
xchg
icebp
repz
sbb
sub
mov
mov
xor
js
push
jle
loop
cmpsb
dec
ds
movl
mov
jb
push
insb
imul
add
cmp
add
out
call
cs
sub
lret
push
inc
cmp
jnp
xchg
pop
push
sub
adc
jge
xor
iret
sub
sbb
jns
mov
lcall
cmpsb
fmull
je
jnp
push
add
pop
mov
sbb
loope
sub
pop
dec
mov
clc
mov
insb
sbb
jg
shl
mov
jb
aaa
fcmovnbe
mov
pushf
jo
inc
ficoms
iret
mov
push
subb
adc
push
mov
les
jb
into
xchg
and
out
rcrb
dec
std
data16
push
iret
inc
pop
jmp
xchg
jl
sbb
cmp
xchg
rclb
fucom
xchg
cmpsl
outsl
jnp
repz
in
fisubl
cmp
or
cmp
adc
stos
jbe
or
popf
jns
xorb
fucomi
rcrl
scas
popf
insl
bound
push
inc
cmp
cs
or
mov
lea
aaa
xor
mov
push
jmp
pop
mov
push
stc
arpl
mov
mov
lret
aad
es
out
sub
pop
sbb
imul
test
xchg
outsb
insb
pop
push
sub
jp
jg
ja
cli
xor
inc
push
int
dec
push
mov
iret
pop
outsl
test
xorl
je
and
aam
lock
lock
sbb
notb
push
movsl
aas
out
pop
pop
andb
mov
jmp
mov
or
and
and
mov
cmp
inc
js
xchg
sub
arpl
or
cmp
xor
aam
scas
addl
mov
xchg
repz
jg
pop
das
divl
leave
xchg
push
jbe
pop
inc
xor
loopne
sub
inc
adc
in
jg
imul
push
rep
cs
sbb
cltd
ss
jmp
sbbl
xchg
addr16
dec
xchg
sarl
in
inc
mov
or
in
jecxz
cltd
lds
imul
aad
push
pop
js
test
aam
fmull
xchg
push
mov
pop
pop
sti
mov
inc
or
fstpt
lock
stc
mov
sbb
int3
or
inc
orl
push
outsl
cmp
mov
add
mov
aad
mov
pop
sbb
jbe
test
ja
inc
ljmp
push
fsubp
in
dec
inc
insb
xchg
ret
sbb
mov
insl
push
cwtl
test
ret
mov
hlt
dec
sub
stc
iret
cld
and
aam
lcall
sti
add
aad
ja
or
std
cmp
mov
addr16
cwtl
icebp
mov
into
adc
test
js
ret
mov
jae
mov
call
jmp
lahf
out
push
jns
fisttpll
cmp
les
movsl
cltd
cmpsl
scas
in
jno
xor
dec
scas
sbb
not
jne
movsb
jbe
and
pop
sub
gs
daa
dec
xacquire
das
popf
sbb
jns
loop
stos
in
andl
or
and
int
sbbl
dec
add
mov
lret
cmpsb
clc
xor
in
adc
ds
sbb
call
pop
lds
mov
and
ja
cmpsb
jns
fisttpll
gs
enter
cld
xor
xor
mov
inc
lahf
rclb
popf
sbb
into
push
jo
rcrl
add
mov
loop
and
dec
in
pop
pop
mov
inc
adc
testb
ljmp
pop
and
inc
add
dec
aad
adc
dec
jg
stos
push
adc
mov
pop
pop
stos
mov
push
push
push
and
pop
push
stos
jne
adc
jb
ret
insb
je
mov
or
das
lods
rcll
stc
clc
test
ds
mull
lret
inc
jnp
outsl
add
cmp
in
je
dec
cltd
lret
inc
cmp
insb
cmpsb
in
and
adc
int3
mov
push
jmp
lcall
repnz
call
rol
shlb
inc
sub
sub
mov
mov
mov
test
aad
scas
add
jp
in
sbb
ret
mov
and
popf
icebp
mov
xchg
insb
test
shrb
mov
testb
xchg
xchg
pop
jg
cmp
stos
andl
add
call
cltd
adc
roll
inc
cmp
dec
das
pop
movsl
xchg
ja
fcomi
pop
xor
inc
cmpsb
sub
add
mov
jp
xor
dec
fidivrl
and
xor
mull
das
pop
mov
pop
sbb
jg
xor
fcmovnb
jne
pop
push
mov
movsb
aam
iret
sahf
adcb
adc
test
mov
cs
inc
in
les
xor
mov
sbb
repz
push
adc
mov
shlb
sbb
push
push
push
add
test
fisubrl
out
jo
fsts
es
ret
incl
and
or
inc
cmp
push
push
scas
outsb
cltd
subl
loopne
jo
push
fs
add
pop
jo
addr16
pushf
inc
push
gs
mov
adc
fs
cmp
hlt
mov
fcoml
dec
mov
dec
movsb
mov
cmp
cmp
xchg
aas
repz
jb
rcll
mov
mov
lahf
jne
or
cld
std
scas
or
decb
or
add
sbb
jle
xchg
addr16
inc
or
mov
inc
inc
add
and
test
repz
xchg
pop
sbb
or
push
cmc
mov
fwait
xchg
pushf
movsb
nop
xchg
mov
sarl
hlt
cmpsb
mov
mov
and
dec
mov
sahf
jnp
xor
push
sub
cs
mov
repz
xchg
lret
jmp
js
mov
cmpsb
cwtl
add
rcll
cmp
jle
das
shl
rolb
mov
sahf
js
fdivl
push
mov
pop
data16
in
cmp
xchg
push
sbb
pop
loop
shlb
ljmp
mov
push
pop
into
test
and
add
out
inc
ret
pusha
ret
jge
js
sbb
or
insb
addr16
mov
mov
cmp
aaa
mov
push
outsl
lds
in
mov
out
rolb
repnz
sbb
imul
daa
das
addb
sub
hlt
sub
xlat
out
lcall
push
insb
adc
rcl
loopne
shrb
adc
mov
mov
aaa
clc
loopne
loopne
or
mov
jbe
dec
loope
and
ja
mov
test
outsl
xor
aaa
xchg
test
xchg
add
pop
fsts
sub
fldt
sarl
mov
bound
sbbb
mov
aas
aad
sarb
mov
push
ficompl
insb
jmp
add
mov
arpl
popa
popf
stc
call
mov
mov
dec
mov
mov
jbe
sbb
xchg
cmpsb
ss
es
xorl
aad
into
cs
or
testb
mov
dec
ficomps
shrl
rcrb
xchg
dec
cmp
sahf
mov
jno
dec
mov
mov
pushf
sbb
lret
insb
dec
daa
mov
xchg
and
jmp
mov
int3
pop
inc
sub
pop
xor
mov
or
ljmp
dec
mov
pop
je
and
test
lods
sbb
test
stos
fucomip
mov
in
cmp
or
loop
xor
lcall
xchg
mov
jnp
mov
rol
add
cmp
rclb
fidivs
int
xchg
push
dec
cmp
push
ljmp
pop
jge
sbb
int
sbb
sbb
lcall
mov
dec
push
mov
xchg
int
arpl
insl
arpl
fwait
dec
jp
mov
cld
dec
lret
inc
dec
sub
xchg
cmp
xor
and
or
in
lods
or
gs
push
push
sahf
popa
jbe
jb
push
ds
sbb
sbb
scas
dec
and
push
sbb
fwait
sbb
clc
adc
mov
jle
cmp
mov
movsl
scas
inc
jge
mov
scas
xchg
xor
add
inc
or
jmp
xor
bound
lods
rorl
mov
out
mov
pop
mov
push
mov
inc
into
cmp
pop
push
pop
or
lret
inc
fcmovbe
xchg
andl
xor
cwtl
mov
jecxz
mov
cmp
jae,pt
dec
insl
sbb
fnsave
jbe
mov
xor
lcall
xchg
scas
push
cld
dec
stos
or
push
movsb
and
push
xchg
pushf
mov
add
ljmp
jmp
lret
vpshufhw
or
pop
lahf
jno
pop
push
movsl
add
cld
enter
or
stc
push
pop
loopne
xchg
dec
jge
mov
icebp
pop
lret
jl
icebp
ret
and
mov
mulb
ffree
xchg
xor
jge
cmpsb
cmove
mov
mov
mov
adc
xor
add
pop
add
sbb
cmp
aad
mov
xor
cwtl
xor
pop
bnd
adc
or
inc
dec
or
rclb
xlat
pop
dec
jp
mov
mov
popa
dec
or
cmp
sbb
mov
insl
xchg
scas
dec
aas
push
mov
outsb
sub
mov
xchg
push
and
add
pop
adc
jo
inc
cmpsl
xor
fcmovne
rol
lea
cs
sbb
mov
daa
iret
push
mov
outsl
mov
fsubl
and
sub
leave
stos
std
cmp
mov
xor
sub
mov
dec
xchg
xchg
mov
lds
in
jns
pop
or
aas
dec
xor
aad
pop
cmp
pop
arpl
adc
cld
adc
mov
js
push
lods
popf
jecxz
lea
push
int3
cmpl
jae
jg
test
jmp
adc
pop
cmp
xlat
lea
inc
lods
inc
mov
adc
dec
mov
add
vunpcklps
add
test
sub
sbb
pop
jg
mov
scas
sbb
test
xor
rclb
nop
push
cmp
or
cmc
inc
cli
flds
lock
mov
sbb
dec
cli
jge
popa
and
movaps
sub
call
cmp
test
xchg
fimull
loope
pop
rcrl
test
jbe
jmp
mov
cs
lods
and
lods
mov
test
mov
mov
inc
or
xchg
pop
push
adc
daa
adc
scas
fcomps
rorl
test
or
icebp
icebp
inc
fldt
rcll
stos
adc
fsubrl
push
test
scas
add
dec
ljmp
adc
xchg
jns
stos
sti
pop
jge
insl
fcomip
hlt
iret
xor
cmpsl
dec
cmpsl
in
les
push
and
inc
jl
jmp
cmp
aas
push
inc
sbb
adc
and
cld
cwtl
mov
loop
mov
rorl
push
faddl
xchg
jns
xor
mov
mov
fs
call
test
daa
ljmp
sub
mov
xchg
movsb
jl
inc
jns
jmp
add
sub
sbb
xor
dec
pop
mov
pop
pop
mov
cli
and
pop
fstp
or
mov
push
pop
pop
clc
add
sbb
sti
push
inc
mov
sub
and
adc
out
shlb
inc
pop
cmc
sbb
icebp
ljmp
mov
mov
jb
push
test
pcmpgtw
mov
lods
into
int
rcl
mov
jmp
je
mov
mov
mov
and
fwait
gs
pusha
frstor
dec
rcl
xchg
push
aaa
jns
loopne
repz
jns
xchg
jle
lds
dec
pop
push
xor
sbb
cmp
jae
inc
sub
xchg
pushf
leave
test
outsl
inc
pop
leave
mov
mov
jns
mov
je
aas
mov
out
aad
dec
jl
call
pop
inc
ja
ja
jmp
cmc
sahf
ret
loop
jo
lods
pop
pop
jg
fimull
xor
pop
xchg
jg
mov
outsb
ljmp
xchg
ret
xchg
sbb
int
loop
punpckhbw
rcl
inc
inc
mov
les
mov
ss
dec
pop
je
xchg
cld
add
sbb
loope
clc
inc
adc
sbb
inc
fdivrp
dec
mov
cmp
sbb
lret
loope
dec
cmp
lret
jb
dec
cwtl
es
mov
jo
ljmp
je
and
insl
jne
inc
and
repz
pop
mov
es
insl
aad
sbb
mov
incb
inc
jo
push
cmp
lahf
es
lock
mov
rcr
das
lret
clc
loopne
dec
cwtl
jbe
cld
aas
int3
in
push
push
sarl
mov
test
mov
scas
add
outsl
xor
test
ficoms
sub
mov
addr16
and
mov
subb
popa
ds
daa
jle
pop
in
js
sbb
mov
lcall
sbb
cmpl
into
aaa
sub
fwait
mov
mov
clc
bound
cmc
mov
or
outsl
mov
sbb
cmc
jbe
aaa
test
dec
fwait
gs
aas
cmp
test
nop
push
push
out
dec
inc
into
fwait
pop
jnp
int
mov
mov
sbbb
mov
leave
mov
cli
push
adc
imul
push
enter
or
pop
xchg
cld
sti
int
aaa
inc
scas
pop
xchg
mov
push
push
icebp
cmp
lcall
pushf
imul
mov
call
xchg
movsb
jecxz
mov
jns
loope
lods
aaa
mov
test
into
xchg
xlat
mov
mov
lods
cmp
lahf
scas
negb
push
xor
addl
popf
lods
stc
bound
dec
xlat
xor
call
in
lret
cmp
xor
push
and
cmp
inc
inc
dec
inc
cld
push
jecxz
out
xchg
aaa
fimuls
scas
xchg
stos
push
into
jg
pushf
xorb
test
and
das
outsl
sahf
push
xorb
cmp
push
outsl
cmp
fisttps
cltd
xchg
les
arpl
xor
cmp
and
xchg
mov
push
in
dec
push
sub
cmp
lahf
lea
inc
jns
out
movsl
sbbb
out
and
cld
in
ljmp
cmp
ficoms
xchg
mov
pop
pop
add
pop
lods
jecxz
xor
data16
adc
out
mov
cwtl
adc
dec
sub
cmc
movsl
or
jp
push
cmp
inc
jne
lret
lcall
dec
jg
aam
cli
ret
lret
dec
sbb
js
mov
int
in
jns
icebp
scas
adcb
or
and
dec
outsb
dec
in
push
pop
jle
dec
mov
clc
pop
mov
inc
sub
adc
xor
push
out
cmp
data16
out
mov
int
mov
int
outsb
xor
push
hlt
inc
addr16
int3
push
inc
add
or
add
mov
xchg
jbe
jo
cmp
push
mov
rorl
gs
loopne
cmp
rcrb
fwait
or
mov
ljmp
mov
or
lea
stc
ja
in
sub
push
sbb
push
push
add
cmp
add
jne
adc
dec
js
mov
ljmp
add
or
das
cmp
inc
jae
dec
out
mov
mov
adc
jmp
dec
and
out
lds
sub
mov
movb
pop
sbb
lret
xchg
stos
imul
push
jle
jns
push
jne
lahf
imul
push
and
add
jl
jl
sub
sbb
icebp
xchg
stos
daa
pop
add
in
test
addr16
dec
cmp
in
cmp
and
push
mov
inc
and
out
lods
pop
mov
addb
xor
mov
pop
pop
adcb
and
not
iret
xor
inc
cmpsb
pop
gs
fisubrs
jl
inc
mov
jp
push
lods
xchg
adc
sbb
xor
sbb
dec
adc
lret
sahf
pop
loopne
and
xchg
push
gs
xchg
daa
inc
xor
dec
sbb
in
and
insl
ds
sti
xor
inc
mov
sbb
xlat
test
mov
gs
clc
sarl
pop
pop
cmp
insl
test
ds
push
sub
cmp
mov
cmp
in
negb
mov
inc
mov
inc
js
data16
jbe
mov
sub
hlt
push
and
lea
shrl
adc
rorl
daa
orb
adc
adc
stc
xchg
adc
pop
sbb
mov
movsb
sti
out
pop
push
adcb
fxch
jnp
repnz
jle
cmp
ss
jmp
loope
jg
int3
outsb
pop
sbb
pop
ss
inc
xor
pop
xor
push
je
xor
or
ret
xor
push
inc
in
in
lods
ret
lahf
jle
mov
aad
sbb
xchg
js
xor
add
stos
cmc
push
xchg
insl
add
xchg
sub
or
mov
push
frstor
aas
and
xorb
sub
dec
mov
pop
xchg
xor
mov
adc
cmpsl
ret
scas
aas
push
mov
popa
add
shll
xor
fstp
test
outsb
popf
js
outsl
mov
mov
hlt
cmp
adc
jb
xchg
sub
loopne
inc
mov
addr16
adc
ret
test
pop
lods
mov
pop
inc
nop
mov
mov
cmpsb
xchg
mov
mov
pop
fisubs
js
iret
mov
pop
sbb
imul
mov
mov
jns
imul
push
mov
cmp
push
push
push
inc
or
js
in
fiadds
pop
loopne
arpl
call
sbb
je
cmp
outsl
cmpb
cmp
sbb
xchg
sub
testb
test
xor
repnz
hlt
mov
addr16
cmp
mov
xchg
shl
leave
arpl
jnp
aaa
dec
sbb
stc
xchg
iret
aaa
test
iret
mov
jmp
imul
ljmp
je
imul
ja
leave
repnz
imul
movsb
enter
shrl
pop
inc
imul
aas
rcll
insb
out
std
adc
shlb
and
lret
fs
add
faddp
stos
mov
xor
es
mov
fsubs
cmc
cwtl
inc
ljmp
dec
int3
arpl
xchg
inc
popf
mov
pop
pop
shlb
jne
negb
mov
inc
mov
cmp
adcb
mov
sbb
inc
rol
in
je
cmp
movsb
shll
sbb
sarl
sub
inc
test
in
mov
loop
in
out
inc
add
inc
mov
jbe
mov
adc
fsub
dec
fbstp
xor
sahf
mov
xor
in
pop
scas
orb
ret
jae
test
cs
fsub
popa
test
mov
xchg
dec
dec
pop
je
xchg
add
out
lods
jns
mov
pop
dec
das
dec
or
lea
mov
pusha
pop
iret
out
dec
addb
lea
mov
mov
adc
imul
lahf
mov
add
push
jns
rcll
or
push
mov
xchg
js
stos
lods
xchg
dec
adc
pop
leave
mov
pop
lret
xor
pop
out
aaa
jmp
pop
add
or
inc
cmpsl
mov
dec
jns
fs
lcall
xchg
push
jae
cmpsb
popf
decl
adc
repnz
popl
inc
shr
mov
mov
cmp
cmp
xor
pop
lods
lcall
popa
lock
subl
and
mov
cmp
pop
sahf
push
mov
push
xchg
mov
xchg
shrb
call
add
xor
xchg
mov
mov
rolb
pushf
cld
das
or
in
inc
or
push
push
push
cmpsl
call
outsb
lcall
sbbl
popa
pushf
lods
mov
xor
jecxz
in
sbb
jp
cmp
push
fwait
jo
repnz
aaa
incl
cmc
push
pushf
mov
inc
in
jnp
cmp
mov
lahf
jae
aad
cmp
pop
push
testb
push
adc
jns
mov
jl
outsl
push
and
add
inc
pusha
cmpl
cmp
pop
fs
dec
add
bound
add
push
inc
clc
jmp
imul
adc
sbb
inc
das
fistpl
mov
sbb
pop
mov
loopne
nopl
sbb
mov
les
fstp
movsb
imul
add
int
sub
xor
push
or
inc
fwait
lods
pop
lret
pop
add
out
stc
out
or
push
xchg
hlt
dec
and
cmp
jmp
mov
mov
lea
sub
pop
mov
lret
pop
arpl
sbb
fimull
fsubp
mov
and
fildl
mov
or
pop
cmp
jne
cmp
mov
jno
lahf
pop
xchg
es
scas
xor
ret
push
jl
in
inc
sub
pop
mov
loopne
jl
les
sub
ret
popf
add
mov
fstpl
insb
and
push
pop
ljmp
fdivrs
lret
scas
pop
sub
sbb
into
cmp
add
out
stos
push
in
mov
mov
xlat
in
inc
mov
pop
pop
push
sbb
adc
inc
cli
mov
cli
mov
leave
movsl
jmp
aam
cmp
add
or
cmp
pop
lock
sub
pushf
add
jno
pop
cld
test
mov
sbb
ret
push
in
pop
ds
gs
aam
sbb
scas
xchg
sub
fmull
lahf
scas
cmp
mov
sub
cld
std
cmp
mov
dec
or
fwait
adc
sub
push
sub
sub
ljmp
ds
hlt
fsubs
jno
rcrl
dec
dec
int3
mov
ret
sub
sbb
aaa
js
xchg
mov
fnstenv
dec
push
sub
sub
stos
dec
test
shll
movsl
in
sub
add
jl
movsb
push
movsl
sub
and
call
fisttpl
jl
mov
pop
icebp
jecxz
add
cmpsl
rcrl
es
xchg
sbbb
mov
push
in
push
lds
mov
xchg
sub
mov
and
push
mov
fwait
or
aas
xor
dec
leave
shll
sbb
ret
test
inc
imul
mov
fwait
std
cld
int
adc
nop
ds
mov
adc
loopne
mov
inc
adc
sub
lret
out
lock
adc
cmpsb
adc
je
ret
or
jns
loop
or
scas
aas
imulb
repnz
mov
cmc
jo
and
and
psubsb
push
sbb
or
push
sti
mov
push
test
inc
inc
aaa
xchg
iret
bound
ja
jo
cli
shlb
rolb
outsb
pop
add
gs
sbb
pop
ret
out
divb
push
jnp
ficomps
or
cld
xor
jno
push
adc
cmp
xor
xchg
ljmp
xchg
mov
push
xor
fnstsw
outsb
popf
sbb
jno
dec
stc
push
pop
xor
and
pop
lods
dec
cmp
ret
lods
jmp
adc
cmpsb
jae
cmc
pop
shrd
dec
fucomp
push
jmp
sub
das
das
mov
leave
leave
stos
rorb
lods
and
test
sub
xor
sahf
in
mov
loopne
data16
fdivs
mov
mov
jb
test
and
fistpll
outsb
mov
mov
push
lea
jae
mov
fucomip
aad
xchg
repnz
sub
mov
rcrl
push
cli
shr
std
fmull
ja
sub
dec
inc
mov
and
inc
cmp
cmp
fisttpl
add
dec
sbb
loop
repnz
gs
gs
lods
nop
in
out
js
out
adc
and
fs
mov
out
sahf
cwtl
lods
les
test
xor
and
mov
xchg
scas
popa
pop
out
push
sub
sbbl
mov
pop
or
sub
inc
dec
ret
aas
in
vphadddq
xor
movsb
push
dec
and
pop
pop
sahf
out
sbb
xor
inc
sbb
jge
repnz
lock
jmp
ljmp
and
cmp
jne
in
mov
daa
push
fwait
sahf
fsubr
cmpsb
pusha
xorb
aaa
mov
clc
pop
out
sub
jmp
fldt
jmp
and
imul
test
notl
lock
sbb
pop
mov
add
mov
inc
pop
je
and
sbbb
mov
mov
enter
in
cld
mov
test
pushf
cmp
add
sbb
mov
mov
push
adc
fsubrs
pop
ret
sub
and
shlb
cmp
or
sbb
and
inc
push
decb
mov
adc
icebp
jle
mov
pop
imul
rolb
les
ljmp
test
or
xor
mov
cmpsl
sub
push
xchg
out
lea
dec
lods
stos
loopne
mov
outsb
int3
mov
add
daa
or
lea
int
and
repz
pop
outsl
int3
pop
insb
xor
in
idiv
jne
jge
add
pop
push
mov
mov
dec
xor
push
ss
cmp
dec
shlb
jnp
xchg
cmp
data16
mov
cmp
mov
mov
jbe
mov
mov
test
jl,pt
cmp
sub
dec
rcrb
in
mov
daa
sbb
jmp
mov
xchg
adc
push
mov
inc
inc
jo
int
mov
mov
mov
loop
fimull
sub
mov
push
outsb
std
int3
inc
cld
pop
rorb
dec
sub
mov
pop
xor
sub
jmp
movsb
cld
cmp
jo
mov
lea
jle
clc
movsl
in
mov
cld
addr16
sti
aaa
dec
test
cld
test
push
xor
cmp
lret
push
push
jge
mov
enter
dec
mov
jno
pop
lahf
mov
mov
sbb
enter
sbb
scas
dec
scas
cmp
pusha
xchg
inc
inc
cmpsb
xchg
adc
mov
inc
push
rclb
inc
jb
in
jp
mov
out
test
gs
cs
inc
daa
sbb
cmpsl
and
add
sbb
sub
in
stos
imul
xorb
es
mov
xor
stc
xchg
push
adc
ljmp
cmpsb
cmp
and
xchg
in
inc
dec
or
jns
fwait
jne
fdiv
jl
scas
outsb
jl
lods
mov
add
roll
stos
and
mov
gs
or
sbb
jmp
jo
les
outsb
movsl
pop
jecxz
push
dec
call
adc
in
test
pop
mov
cmpsl
movsb
pop
dec
sbb
divl
fnstsw
xor
sub
push
pop
out
jg
outsl
jno
mov
cmc
cmpsb
push
dec
arpl
int3
subl
or
loop
add
sub
and
cmp
dec
inc
push
add
jge
jne
push
mov
xchg
push
jns
pop
fs
adc
popf
test
mov
lea
dec
mov
test
adc
test
inc
sub
pop
dec
nop
jns
int3
sbb
mov
xorb
mulb
sub
jae
nop
mov
inc
sub
cmpsl
inc
xchg
loope
stos
arpl
lods
lret
and
cli
dec
fwait
mov
das
xor
dec
ljmp
pop
sbbb
dec
xchg
jne
and
ret
fldenv
sti
pop
shlb
dec
dec
mov
add
js
out
cmp
ss
clc
insb
fstl
jg
fsub
aaa
aad
sbb
inc
clc
dec
dec
jnp
and
and
push
stos
dec
and
lret
stos
cmc
mov
cli
push
mul
xchg
adc
js
xor
addb
push
sub
out
mov
mov
hlt
mov
mov
pop
imul
fs
int3
aad
push
xor
repz
loopne
popf
outsb
mov
mov
cmc
rol
sbb
loope
lods
loopne
or
cmp
lock
repz
enter
mov
repnz
dec
loopne
orps
mov
or
or
out
iret
ss
ds
aam
es
out
pop
inc
icebp
push
scas
fisubl
scas
mov
jge
add
repz
addr16
xchg
jae
in
push
call
jl
mov
pop
mov
jbe
rorb
loope
leave
push
fsubrl
test
push
jo
loopne
mov
lock
push
jge
sbb
or
ljmp
xchg
rorb
insb
push
es
aam
je
dec
pop
sbb
cmp
add
or
repnz
and
lret
jno
or
jae
stos
mov
pop
jno
repz
xchg
popf
repz
inc
int3
insl
stos
jge
push
mov
xchg
xchg
and
push
adc
lahf
fcoms
rcrl
mov
dec
xchg
jb
insb
cmpsl
push
mov
insl
pop
sahf
push
jae
out
aaa
bswap
inc
cmp
jg
cmp
add
xor
dec
push
push
clc
scas
aam
add
xchg
jae
cli
dec
sub
mov
push
adcl
lcall
lock
jge
imulb
pushf
sti
jo
xchg
push
push
sub
jg
xchg
jne
mov
jbe
cli
jbe
add
xor
pop
inc
add
adc
jnp
cmp
flds
cmp
xchg
fdivrs
ret
lret
sub
stc
in
mov
cmp
dec
cltd
ja
dec
fstpt
sbb
dec
xor
into
or
mov
pusha
test
fldenv
dec
and
je
inc
scas
sub
sbbl
jae
clc
push
sub
xor
fmull
sbb
stos
mov
cmpsl
fisubrs
cmpsb
cltd
sbbl
and
sub
cmp
pop
cs
imul
in
pusha
xchg
mov
testl
xchg
fwait
test
dec
leave
sub
mov
mov
repz
jmp
imul
aad
pop
push
fsts
pop
adc
jecxz
xor
test
aaa
fsubl
xchg
stos
inc
lret
jae
push
dec
jl
add
xor
rorl
or
xchg
rorl
fdivrs
xchg
arpl
je
sbb
or
das
jmp
pop
mov
pop
bound
fs
xchg
outsb
mov
pop
lahf
push
out
imul
xchg
cmp
dec
outsb
stos
push
push
sarb
inc
scas
gs
sahf
sbb
push
rcrb
sbb
or
jmp
jg
cmpsl
loop
mov
andl
insl
stos
std
int3
cmp
xor
and
push
jb
lret
or
push
movsb
push
or
cs
cld
jl
adc
jl
outsl
dec
jmp
and
add
xchg
or
rorl
add
leave
cmp
push
or
loop
sbb
pop
sub
pop
test
movsb
push
call
sbb
test
xchg
stos
cld
stos
das
pushf
xchg
out
sbb
jp
in
xor
cwtl
frstor
sbb
mov
loope
cltd
out
inc
jb
or
lahf
and
mov
dec
pop
bswap
push
or
push
leave
dec
and
sbb
inc
sbb
cld
or
leave
subb
inc
hlt
mov
loopne
into
sbb
pop
and
das
dec
sbb
fistps
push
std
pop
xlat
dec
dec
iret
loop
mov
xlat
mov
add
pop
inc
add
and
or
daa
jbe
jbe
insb
xchg
mov
pushf
negl
push
insl
jo
sub
icebp
adc
sahf
sar
fmul
nop
push
lahf
and
arpl
ret
xor
mov
jbe
jae
outsb
sub
inc
inc
pusha
jbe
out
fisubrl
pop
cltd
adc
leave
std
pop
lret
lods
insb
ret
and
or
fcom
push
gs
stos
shrl
ljmp
idiv
clc
cltd
cmpsl
mov
push
rorl
jnp
loopne
pop
clc
push
mov
dec
mov
sub
xchg
int
fidivs
js
dec
or
cltd
jns
in
hlt
inc
push
add
pop
or
mov
jl
pop
not
pop
iret
fadd
out
popf
mov
out
xor
cmp
sbb
jmp
fbld
sbb
mov
pop
repz
inc
popa
cmc
mov
add
pop
cmp
pushf
mov
divb
add
stos
adc
bound
ret
rcrl
jae
dec
xor
xor
pop
mov
dec
xor
fcmovnu
inc
mov
push
sarl
leave
inc
xlat
out
jo
mov
inc
mov
push
jecxz
cwtl
push
shll
or
repnz
adc
jo
mov
lock
rolb
es
pop
and
ja
ljmp
push
ds
mov
rcl
int
ja
mov
pusha
and
push
cli
mov
fmull
imul
push
fstl
xchg
sarl
or
adc
shl
sbb
pop
out
in
and
sbb
and
sbb
int3
fiaddl
sbbb
xchg
imul
mov
mov
dec
mov
inc
cmpsl
scas
int3
mov
mov
sbb
or
movsb
mov
and
cmc
jb
xor
or
xchg
in
lods
cmp
lea
sti
xor
les
aad
stos
iret
inc
xor
imul
mov
fcmovu
cmc
arpl
and
adc
and
and
sti
sub
mov
and
repnz
jb
loope
mov
add
add
pop
sbb
ret
push
test
or
push
sbb
pop
shll
iret
jae
incb
pushf
jnp
in
dec
hlt
lret
push
insl
sub
push
lods
leave
leave
xor
and
repnz
mov
sarl
nop
aas
xor
fucomi
fsubrl
mov
or
into
fsubrp
push
ljmp
les
jl
push
or
sbb
ret
data16
pcmpgtd
icebp
aaa
and
imul
mov
out
inc
test
ljmp
or
cmpsb
adc
and
in
mov
lods
jg
addl
lcall
push
sub
jb
sbbl
movsb
and
hlt
cmp
into
js
aam
jnp
cmp
in
mov
inc
xchg
sbb
xchg
sub
aas
outsl
test
ljmp
push
cmpsb
add
sbb
mov
inc
out
mov
test
inc
ret
roll
sbb
dec
xchg
sbb
call
mov
sbb
fcomi
cwtl
aas
cmp
or
mov
leave
loopne
xor
xlat
and
outsb
add
arpl
std
movsl
hlt
and
cltd
inc
jecxz
inc
arpl
scas
dec
sbb
xor
add
fs
mov
ficoms
mov
lahf
push
jnp
in
jb
mov
jle
aas
mov
je
xor
xchg
sbb
cmp
insb
lods
sbb
mov
pop
and
mov
incl
and
sub
lcall
loope
fwait
in
push
frstor
std
sahf
jnp
push
jl
mov
js
js
dec
mov
jo
rorl
sbb
cltd
sbbb
pop
xor
mov
inc
int3
out
inc
int3
mov
mov
push
mov
cmp
jp,pt
xor
dec
xchg
repnz
sub
pop
lods
aaa
fwait
sarb
psubsw
pop
filds
cltd
pop
cli
inc
push
push
xchg
add
mov
cmp
mov
roll
mov
pop
pop
sti
daa
fndisi(8087
push
adcb
inc
mov
sub
sbb
xchg
pop
cmp
or
popf
cmp
lock
movsl
jae
jle
mov
clc
scas
cmp
pop
pop
outsl
xchg
inc
insb
stc
mov
lds
mov
jp
push
call
xchg
mov
mov
jecxz
cmp
adc
lea
aam
daa
mov
pushf
fdivrl
sbb
sub
mov
cmp
jp
icebp
loope
popf
xorl
int3
ja
popf
mov
in
dec
leave
jo
push
ffreep
incl
shr
push
adc
or
sub
nop
jmp
rcl
xor
lcall
add
sbb
arpl
mov
lea
movsl
add
cltd
out
rolb
popf
movsl
scas
stc
lahf
pop
mov
ret
sbb
lods
mov
jne
inc
push
mov
stos
xlat
and
sbb
mov
ss
sub
sbb
movsl
inc
int
or
int
fisubrs
cltd
notb
lcall
ret
fwait
sub
sti
mov
pusha
in
inc
mov
adc
addr16
pop
mov
fsubrs
fnstenv
dec
mov
outsl
jg
mulb
cmp
and
adc
lahf
out
push
xchg
mov
push
mov
cmp
jmp
mov
mov
dec
adc
xchg
xchg
push
xor
push
dec
ret
in
and
outsl
mov
jno
enter
fwait
push
aaa
push
mov
jp
mov
dec
push
inc
mov
std
mov
mov
in
frstor
dec
and
add
addr16
pop
shlb
add
sar
sbb
mov
stc
push
pop
pop
lret
mov
mov
mov
jle
lods
test
adc
movsl
clc
jp
out
fsubs
xchg
xchg
sub
jnp
jnp
adc
sbb
sub
ljmp
jns
repz
cltd
pop
lahf
das
cmpsl
cmpsl
arpl
inc
cmp
in
pop
mov
lahf
push
cmp
in
test
js
sbb
inc
mov
adc
cmpsb
in
decl
das
and
mov
xor
pop
ret
loop
inc
cmp
and
xor
stos
stos
ja
cltd
mov
xor
lahf
out
mov
lods
xchg
cmpsb
aas
je
sbb
push
mov
cmp
pop
aam
pop
repnz
add
das
add
xlat
outsl
inc
sub
pop
xchg
ja
insb
gs
xor
xchg
push
or
bound
ss
cmp
ret
pop
jp
inc
pushf
into
fwait
out
pop
test
shlb
test
and
shrl
loope
or
test
pop
popa
cld
out
pop
dec
jnp
test
sub
cmp
sub
jg
cmp
inc
push
int3
sbb
test
xchg
cltd
jl
mov
inc
mov
es
xchg
fnstsw
or
xor
xchg
lods
daa
sti
repnz
jo
inc
sub
inc
sbb
sahf
fsubrl
lcall
or
addr16
clc
inc
sti
adc
pop
icebp
jb
cmp
insb
fiaddl
mov
pop
sbb
mov
scas
dec
hlt
fldl
push
and
and
xchg
mov
mov
insl
insl
push
mov
xchg
leave
jnp
cwtl
mov
cmc
jg
and
xor
cmpb
push
ja
push
mov
scas
negl
jne
adc
and
dec
pop
ret
xor
mov
scas
cld
loop
loopne
stos
fists
add
push
aaa
mov
hlt
hlt
popf
mov
or
gs
dec
xchg
int3
loop
mov
flds
pop
or
pop
xchg
sbb
xor
ficoms
mov
sub
aas
stos
lods
jp
ja
stos
adc
add
fs
fadd
xlat
inc
shrl
js
sub
cwtl
mov
sub
sahf
nop
ljmp
scas
sbb
lret
fisubs
adc
push
fdivrp
les
pop
push
in
lret
sbb
pushf
sbb
mov
dec
dec
out
jecxz
fdiv
inc
in
add
mov
dec
pop
pop
pop
movsl
cmp
lods
mov
divb
call
push
jo
scas
sbb
fcmovbe
xchg
inc
lahf
jge
aas
iret
dec
out
iret
scas
pop
iret
and
test
inc
aas
in
clc
ret
sbb
sahf
inc
xchg
movsb
mul
mov
outsl
test
or
int3
leave
add
les
push
inc
daa
push
mov
push
mov
cmp
jns
aas
jmp
dec
int3
mov
stos
addr16
cmp
or
dec
inc
in
sbb
icebp
sahf
ss
jbe
pusha
lock
or
mov
inc
aad
sahf
int
mov
pushf
jmp
daa
stc
sub
mov
mov
lods
nop
mov
loop
data16
lods
pshufw
stc
or
add
pop
xchg
leave
push
mov
orl
push
dec
arpl
insb
movsl
call
or
out
fists
dec
int
push
jp
out
pop
lcall
rcll
push
mov
pop
mov
cmc
pop
inc
xchg
outsl
cmp
out
sub
aaa
popf
pop
aaa
add
and
icebp
imul
mov
push
jb
pop
inc
mov
fs
lcall
cmc
leave
sbb
mov
jmp
int3
mov
xor
xchg
sub
cmp
dec
sub
scas
fsubrs
adc
dec
rorl
add
popa
sti
cmp
push
pusha
sbb
sbb
lods
out
cwtl
sbb
into
insl
mov
aaa
leave
pop
icebp
fldenv
aad
out
pop
add
or
movsb
mov
push
pop
push
dec
std
dec
mov
rorl
or
aaa
pop
cmp
mov
pop
icebp
in
adc
std
movsl
insb
mov
sub
lock
rcrl
pusha
insl
aas
pop
and
mov
mov
jmp
cli
aaa
test
mov
shll
lahf
pop
ja
xor
paddsw
aam
pop
pop
cmp
pop
dec
and
repz
mov
sarl
test
mov
pop
add
add
lds
xor
push
push
jbe
or
cli
insl
inc
jg
mov
add
inc
adc
jnp
sub
xchg
inc
mov
into
into
in
xlat
sti
mov
loopne
loop
mov
sbb
adc
cmc
jp
adc
xchg
dec
adc
sub
mov
adc
inc
jno
push
mov
dec
add
mov
ss
sahf
push
adc
push
rcr
mov
xchg
inc
or
loop
sbb
mov
shrb
mov
gs
jbe
sti
adc
mov
adc
xor
lret
inc
imul
flds
inc
xchg
mov
ds
mov
adc
xor
gs
pushf
mov
hlt
inc
fwait
shl
in
jae
add
aaa
sub
movsl
popa
cmp
js
push
sbb
cmpsb
test
lods
jge
cmc
jno
adc
cmp
rcrl
aaa
shl
addr16
sub
jle
mov
add
rcrb
in
xchg
add
xchg
popf
add
adc
dec
pop
push
xor
sub
xlat
mov
cli
dec
xchg
les
and
or
std
lods
xor
push
aam
test
or
jl
mov
sbb
rcrl
shl
add
stos
lods
in
dec
stc
int
xor
repz
mov
mov
cmp
adc
je
leave
arpl
jle
cmp
scas
pop
adc
mov
bnd
sbb
sub
mov
cmpl
sbb
sub
push
daa
mov
pop
jbe
mov
test
pushf
subl
movsb
xlat
mul
mov
and
pop
aam
cmp
shlb
xor
subl
int
pop
fidivrs
je
jb
jge
mov
add
aad
repnz
inc
jae
nop
andb
push
push
or
insl
dec
push
xor
sbb
loop
adc
rorb
and
push
adc
sub
inc
cs
sbb
mov
shl
mov
xchg
mov
stos
repnz
out
pop
imul
gs
xchg
rcl
rcrl
popa
int
movsl
inc
negl
out
fwait
idivb
and
pop
xchg
aad
ret
fdivrs
mov
push
scas
jecxz
inc
cmp
mov
cltd
inc
pop
cmp
out
adc
repnz
cmpsl
cwtl
insb
mov
inc
data16
std
pusha
adc
test
movsl
push
adc
jp
push
inc
fisubs
enter
arpl
pop
and
xchg
cmp
cmc
pop
xchg
leave
lods
jae
mov
iret
dec
push
fsubrs
and
hlt
mov
sbb
out
adc
mov
into
mov
mov
cmpsb
out
xor
aaa
fiadds
test
ret
fisubrl
bound
mov
sub
xchg
push
ljmp
call
add
cmpsb
pop
sahf
clc
jmp
jle
std
xlat
cmpsl
push
cmp
icebp
dec
xor
in
sbb
push
popa
ljmp
xor
imul
ja
inc
pop
xor
out
lcall
repnz
out
adcb
ss
dec
cmpsb
jo
pop
je
pusha
shlb
dec
int
popf
cmp
cli
sbb
inc
sbb
arpl
lahf
cmp
mov
pop
xor
test
imul
pop
or
sub
outsb
call
insb
pop
adc
cwtl
sahf
push
pop
call
test
mov
xor
sbb
pop
sbbb
pop
shlb
jnp
lock
rol
stos
push
mov
jp
repnz
and
je
xor
xchg
je
lds
dec
mov
mov
imul
mov
sub
cmc
jecxz
aad
sbb
repnz
das
lods
shll
xchg
fsts
pushf
xchg
out
add
movsl
fwait
mov
lods
jo
xchg
adc
add
sbb
sbb
scas
and
sti
lahf
cli
xchg
push
jl
popf
inc
mov
push
cs
mov
outsl
xor
mov
cmp
fldt
jo
mov
xchg
into
adc
sub
mov
test
out
add
add
in
mov
adc
add
fsub
xchg
lret
inc
jg
sbb
dec
push
mov
negl
push
movsb
in
jns
je
arpl
mov
movsl
jno
aad
outsb
shll
out
inc
daa
mov
sbb
sub
into
ja
sub
popf
cwtl
ret
jne
insw
pop
data16
das
inc
inc
jl
nop
lods
mov
das
adc
add
xlat
mov
sbb
add
scas
icebp
das
notb
sti
cli
mov
outsl
xlat
mov
mov
sub
xchg
vucomiss
jno
lds
xchg
cli
cwtl
sahf
enter
mov
hlt
test
jnp
inc
jl
test
fwait
jle
adc
push
movsl
out
data16
cmp
inc
xadd
mov
fisttpll
dec
mov
adc
lods
inc
pop
push
shll
imul
jle
mov
pop
cltd
and
aad
orl
mov
jl
jmp
xor
jl
test
add
mov
in
or
xchg
in
call
imul
push
sub
rcll
and
mov
cmp
pop
aas
inc
outsl
fiaddl
jl
push
adc
and
jne
lret
mov
fiaddl
push
rclb
scas
les
stc
push
ss
sbb
xchg
clc
xchg
lahf
rcrb
mov
add
into
call
pop
sbb
xlat
mov
movsb
call
in
fsincos
cli
dec
pop
push
add
jge
mov
mov
mov
stc
addr16
add
in
repnz
fs
mov
in
and
cmpsb
jae
mov
clc
loop
cltd
jg
pop
push
mov
mov
xchg
stc
or
out
out
loop
add
dec
shr
mov
push
fdivl
sbb
inc
ja
test
dec
mov
rcr
aas
rorl
jbe
xchg
cmpsb
test
pop
xlat
inc
sahf
jb
mov
mov
pop
fcompp
mov
jb
mov
push
pop
repz
repz
or
mov
jmp
mov
mov
add
mov
add
lcall
mov
mov
jns
into
lock
and
mov
pop
mov
lock
lahf
std
inc
aas
test
mov
cmp
shl
mov
sarl
in
test
sbb
insb
call
jae
loop
or
scas
inc
jns
out
or
push
sbb
push
xchg
push
dec
bound
dec
test
out
out
mov
mov
or
repnz
cmp
xlat
setns
jge
add
outsl
mov
or
ljmp
adc
out
fidivs
inc
sub
mov
subl
std
pusha
or
loopne
mov
les
testl
mov
push
gs
sub
sarl
mov
pop
sub
sbb
push
lods
pop
xchg
mov
xchg
movsl
lahf
dec
shlb
push
xchg
test
mov
imul
or
mov
int
push
push
mov
lea
out
or
pop
gs
mov
and
insl
jg
lods
ljmp
mov
scas
call
bound
add
jb
mov
pop
insl
popf
in
mov
les
jmp
xor
pop
test
mov
js
stos
jns
mov
push
jecxz
lock
dec
jmp
fcomps
jmp
adc
mov
clc
stc
out
in
push
jo
or
rclb
lock
outsb
xchg
jae
mov
inc
push
loope
mov
fisubl
pop
sbb
test
div
dec
das
mov
sti
shrl
dec
repnz
push
adc
sub
jb
dec
lea
or
push
jmp
mov
dec
mov
mov
push
pop
inc
call
scas
inc
cmp
dec
out
sahf
cmp
nop
fbstp
popf
add
dec
push
loope
in
mov
lret
arpl
roll
sub
or
pop
pop
xor
in
mov
icebp
or
test
mov
xchg
mov
daa
aas
dec
mov
or
pop
mov
daa
push
xchg
jbe
rol
fists
inc
jl
movsl
mov
outsb
jbe
adc
hlt
popa
jl
fisubrl
test
mov
imul
inc
out
adc
mov
xchg
cwtl
outsl
xchg
outsb
mov
repz
push
in
mov
xchg
fisubrs
inc
es
xchg
sub
jmp
fsubl
mov
lods
rorb
int
aas
adc
xor
fs
rclb
out
sub
cltd
pop
subb
cmp
arpl
call
aas
out
fidivrs
mov
cmp
arpl
sub
add
adc
mov
pop
mov
cmp
adc
push
or
or
imulb
out
stos
cmpsb
loope
pop
xchg
xchg
and
pop
movsb
xchg
mov
arpl
push
mov
push
jge
push
mov
stos
push
insb
lds
or
ljmp
mov
xor
push
mov
dec
add
sbb
in
call
cmovs
dec
xchg
rcr
mov
push
inc
sub
sti
aad
fnstsw
dec
inc
push
imul
movsl
sub
cbtw
das
ds
lret
xchg
cmp
jp
cmp
cmpsl
sti
sub
cmp
adc
out
mov
int3
jmp
xorl
lret
stc
cmpb
push
pop
push
push
loopne
mov
daa
inc
add
jecxz
jmp
test
add
sti
xchg
xchg
out
inc
mov
popa
stos
ljmp
lods
jns
pop
insb
data16
xor
repnz
adc
pop
adc
insl
xlat
add
cmp
or
xor
push
popa
cmc
and
lret
inc
pop
scas
rcll
js
mov
sbb
mov
outsb
inc
subb
out
jne
mov
mov
imul
push
sub
test
sub
mov
stc
push
sbb
das
test
dec
inc
push
and
addr16
and
cltd
jge
hlt
add
push
leave
sbb
repnz
test
or
jo
mov
pusha
nop
gs
push
inc
push
jp
notl
sahf
mov
xchg
push
clc
sbb
insl
adc
or
test
jbe
mov
cwtl
pop
xchg
pop
and
data16
sbb
xor
popa
mov
arpl
stos
push
ja
cmp
lods
push
push
jnp
pop
or
mov
pop
sbb
mov
in
jo
adc
add
sbb
enter
arpl
hlt
push
cli
hlt
je
iret
inc
mov
pmulhw
aam
inc
jl
and
fiadds
dec
mov
mov
in
sub
ja
test
ja
cmpsl
sbb
or
imull
sub
push
and
fstps
shlb
xchg
pop
mov
repnz
aaa
mov
fimull
lds
xchg
call
cwtl
sbb
pop
cmc
adc
movsl
outsl
adc
test
out
push
mov
ss
add
cmp
iret
xor
push
insl
jno
es
out
ret
out
in
mov
jno
pop
leave
pop
ja
fnstcw
push
out
sbb
inc
lods
dec
adc
in
bound
xchg
mov
jbe
xchg
loope
add
vmaxsd
dec
inc
mov
roll
push
iret
cmp
out
movsb
repz
es
sub
push
add
leave
testl
cmp
push
repnz
push
pop
adc
inc
loopne
pop
test
cmp
imul
sbb
in
add
cmpsl
iret
sub
insl
sbb
push
clc
cwtl
push
fisttps
xchg
rcrb
xchg
pop
pop
mov
mov
jle
popf
xchg
jmp
push
and
pop
push
test
ss
mov
div
icebp
aad
jmp
in
fisttps
cs
fdivrs
mov
cmpsb
out
in
fcomps
enter
add
out
es
mov
scas
out
pop
xchg
cmpsb
call
mull
lods
inc
jecxz
ror
cmp
hlt
shrb
mov
jecxz
pop
or
rclb
push
dec
jbe
sub
sub
xchg
fcmovnu
xor
xchg
mov
ror
xor
adcl
jb
and
sahf
int
in
inc
fs
inc
clc
mov
inc
mov
add
mov
mov
std
shlb
inc
add
addb
mov
fdivr
clc
jbe
xlat
dec
sbb
mov
xchg
pop
out
icebp
mov
push
lds
inc
add
xchg
mov
rcll
push
in
dec
or
lea
nop
out
mov
push
jle
pop
popa
test
lahf
dec
cmpsb
jmp
imul
push
jecxz
dec
popf
jb
hlt
mov
dec
xor
push
out
push
push
inc
mov
aam
sub
push
mov
inc
cmp
roll
fdivr
xchg
mov
and
pop
orl
mov
in
jae
pop
out
mov
inc
xor
push
dec
push
sahf
inc
nop
and
xchg
bound
cmc
and
jge
xchg
ja
lahf
mov
inc
jbe
jae
incb
ja
push
hlt
xchg
push
cmp
mov
xor
cmp
out
cmc
ret
pop
xor
push
jge
xor
mov
sub
das
es
out
pop
xchg
fcmovu
scas
shll
mov
push
cmpsl
js
nop
or
cwtl
cld
leave
mov
mov
cmpsl
jle
push
sub
pop
or
adc
fnstenv
cwtl
or
jno
push
test
inc
out
outsl
int3
and
push
dec
cmp
mov
sahf
subl
lea
cmpsb
or
adc
mov
aaa
popf
loope
or
in
mov
hlt
mov
mov
out
stc
mov
mov
push
jp
dec
mov
mov
add
inc
mov
scas
ljmp
jnp
mov
cmp
ja
add
int3
outsb
sub
pop
jbe
and
jp
mov
mov
and
and
into
sbb
sbb
jne
insb
cmp
in
jae
mov
idivl
mov
sub
xor
mov
mov
fdivl
int
sub
outsl
jb
xchg
pop
adc
xor
mov
mov
iret
stc
jle
push
sub
add
outsl
dec
pop
dec
dec
mov
push
fdivp
pusha
mov
inc
xchg
sbb
lea
or
mov
adcb
xchg
or
pop
add
push
inc
lds
jecxz
fisttpl
inc
popa
mov
mov
call
es
dec
push
cmp
push
scas
jecxz
dec
xchg
mov
scas
jle
aad
pop
fmulp
gs
xchg
xchg
imulb
mov
in
int
addl
jge
faddl
or
scas
pop
sbb
lods
daa
pop
xchg
push
xor
bound
add
ret
rorb
cld
sub
call
jnp
mov
or
cltd
sub
popf
andl
rolb
movsb
test
cs
loope
or
in
fwait
arpl
pop
lahf
cwtl
xlat
mov
cmp
inc
dec
xchg
in
rorl
push
inc
gs
fwait
pop
nop
das
sbb
sub
leave
mov
test
loopne
fsin
xchg
jb
jge
inc
xchg
jp
cmp
adc
out
fwait
mov
fidivrl
cmp
mov
push
ja
cli
add
stc
inc
inc
adc
add
adc
pop
sub
dec
pop
cwtl
iret
and
jae
jg
xchg
shl
insb
popf
add
jae
jne
shrb
mov
rcl
sub
pop
xchg
add
icebp
push
sub
push
cmpsl
pop
sbb
rorl
lahf
dec
aam
jecxz
cmp
repnz
push
mov
fwait
xor
mov
and
test
out
dec
pushf
ds
mov
inc
jg
gs
push
cmpsl
jbe
test
addr16
jbe
outsl
cltd
jl
xor
call
mov
and
pop
cmc
inc
movsb
or
out
mov
fistpl
mov
mov
and
jge
jle
mov
in
aam
cltd
adc
mov
pop
fisubrs
and
es
mov
push
mov
cmp
mov
nop
sub
outsb
out
mov
pop
mov
pop
sbb
dec
pop
icebp
xchg
mov
mov
mov
sub
dec
test
enter
pop
dec
push
pop
icebp
pop
sbb
iret
lock
xlat
hlt
mov
cmp
out
xor
add
sub
and
arpl
push
lahf
dec
arpl
sub
jbe
daa
rol
cmpsl
xchg
push
xchg
loop
cld
xchg
pop
lret
jno
shll
cmp
push
rcrb
xor
inc
sub
mov
popa
cltd
lret
mov
ss
lock
jecxz
and
cwtl
adc
fnstenv
shll
cli
pop
cs
leave
test
inc
pop
hlt
and
xor
addr16
inc
cmc
dec
cmc
cld
dec
dec
ljmp
adcb
int3
loope
cmpb
mov
push
cmp
ret
clc
xlat
dec
mov
mov
or
lcall
push
jo
stos
or
fwait
pop
addr16
and
out
std
les
test
push
stos
mov
push
negl
outsl
pop
lea
inc
cld
dec
and
and
adc
jne
outsl
lahf
mov
out
ss
jb
ret
pop
push
ja
pop
cmp
dec
into
shrb
xor
sbb
sarb
mov
xchg
add
adc
rcl
and
loope
add
dec
fistpll
push
jmp
stc
add
movsl
fnstsw
mov
int
test
gs
mov
daa
adc
rcr
and
movsl
imul
mov
xor
mov
adc
mov
jae
xchg
sbb
inc
aaa
cmp
push
sbb
add
test
mov
jle
clc
nop
paddsb
aam
lock
jne
sar
lret
inc
inc
outsb
sub
mov
xchg
sbb
push
addb
cmpsl
js
lock
jo
inc
cmp
lcall
lock
jg
or
and
mov
clc
add
mov
jg
int
bnd
in
dec
jmp
ss
into
in
push
fstpl
sbb
or
arpl
adc
out
inc
or
fdivr
psubusw
xor
fisttps
sub
clc
push
mov
cmp
scas
sub
scas
cli
add
fwait
subb
pop
pop
inc
dec
mov
sti
sbb
sar
sbb
push
cwtl
pop
pusha
std
sub
enter
leave
cmp
test
jg
xor
mov
repnz
fwait
cmc
mov
iret
sbb
xchg
jns
cmc
ficomps
lea
cmp
pop
push
ds
int3
movl
loope
jmp
mov
rcll
cld
cmpsl
mov
mov
ss
lea
out
adc
fucomip
rorb
inc
jbe
add
mov
xchg
or
or
lret
dec
fcomps
faddl
std
jo
out
and
cltd
push
mov
xlat
push
in
jne
sbb
inc
mov
scas
daa
mov
or
int
sbb
data16
hlt
imul
lods
pop
sub
and
push
jl
dec
jl
leave
lahf
adcb
pop
cwtl
out
loope
lods
out
jo
in
dec
loop
pop
scas
jl
das
shll
inc
mov
ret
repnz
aaa
repnz
inc
cmp
jge
test
arpl
fldl
fimull
arpl
mov
lcall
mov
cmp
jl
adc
mov
xchg
in
or
arpl
adc
cmp
imul
dec
jmp
cwtl
out
icebp
mov
aas
cmpsb
in
data16
mov
fimuls
adc
dec
jbe
dec
xchg
or
push
data16
dec
test
sbb
cmp
or
js
ss
pop
call
sbb
sub
xor
out
xor
out
mov
lods
lock
mov
and
push
loope
ds
iret
jg
cmpsl
das
in
jae
pop
insl
pop
xor
and
roll
fnstenv
pop
and
dec
push
pop
xor
mov
data16
pop
push
les
inc
in
pop
sub
push
xor
mov
xchg
movsl
mov
jno
lret
mov
cmpsb
push
sub
repnz
js
ljmp
test
jbe
mov
dec
xchg
xchg
lret
insl
lods
cmpsl
imul
or
cs
ljmp
clc
xor
adc
roll
xor
jno
mov
mov
xchg
stos
pop
xor
rsqrtps
scas
inc
pop
shlb
add
add
daa
mov
mov
add
or
add
xor
pusha
das
adc
jle
mov
ret
pop
and
mov
jg
jg
push
xchg
mov
xchg
sub
jge
mov
int
pop
lcall
mov
enter
popa
loop
in
movsb
push
push
xchg
int3
lret
aad
insb
dec
inc
cmp
das
sti
jb
imul
cs
jg
and
xchg
fildl
aam
jecxz
mov
cld
adc
pop
mov
outsb
mov
lret
arpl
inc
sahf
enter
loop
aam
loope
and
cmpsb
jl
leave
ficoms
or
ret
mov
and
sahf
cltd
loopne
xor
jne
mov
jno
and
sarb
jo
add
js
repnz
ss
in
clc
ljmp
pop
adc
das
pop
jne
fisubl
jno
sarl
imul
inc
cmp
mov
add
stc
sub
test
sbb
imul
pop
sub
je
insb
test
mov
je
inc
and
jbe
add
into
add
scas
ljmp
outsl
adc
pop
or
jl
aam
pop
outsl
nop
hlt
int
dec
ss
out
mov
adcl
mov
fcmovb
xchg
jp
repnz
or
scas
xchg
push
and
out
mov
jbe
lds
dec
sbb
stc
fs
sti
adc
adc
fiadds
out
sub
mov
out
lret
xor
lods
mulb
scas
pop
cmpsl
icebp
xchg
or
pop
xchg
icebp
xlat
push
lahf
and
ret
cltd
in
fildl
pop
int
mov
es
hlt
xchg
xchg
sub
negl
gs
xor
inc
adc
sar
gs
outsl
call
ss
mov
mov
pop
shrl
insb
ficompl
cltd
cld
popf
mov
pop
push
jge
cmp
dec
mov
leave
movsl
dec
repnz
mov
aaa
cmc
mov
add
fistps
add
js
mov
ss
adcl
out
fiaddl
cmpsl
neg
jl
nop
sbb
loopne
out
inc
and
sub
cwtl
sbb
push
popa
dec
aas
sahf
mov
mov
mov
add
andl
int
xchg
add
lock
jecxz
ret
loopne
lcall
add
arpl
packuswb
push
add
out
test
inc
arpl
int
cwtl
and
push
out
fiadds
dec
dec
mov
fcmovu
in
js
rcr
fbstp
and
and
jp
ss
ret
mov
jmp
jns
mov
mov
xchg
pusha
fs
ss
int
jns
mov
add
add
pop
imul
xchg
pushf
mov
mov
xor
out
xlat
out
jge
fwait
pop
cmpsl
das
mov
cmp
test
add
jg
fldl
mov
cs
push
cmp
js,pt
ret
xchg
ljmp
mov
push
xchg
jnp
test
addr16
cmp
test
enter
adc
jbe
cmpsb
popa
sbbl
sbb
inc
les
mov
cmc
cmp
clc
cs
fnsetpm(287
or
push
sub
ds
add
mov
mov
mov
and
sti
jp
and
in
mov
add
jmp
enter
sub
mov
test
test
sbb
push
iret
mov
sbb
dec
bound
push
adc
sub
jbe
inc
jg
aaa
aas
adc
ret
testl
insl
cltd
jo
mov
xchg
mov
cmpsl
outsb
xchg
sbb
mov
aaa
clc
sub
ret
jae
pop
lods
pushf
inc
popa
cmpsb
mov
fcomps
mov
adc
mov
xchg
and
jl
pop
nop
cmp
xchg
mov
or
dec
fdiv
xchg
leave
cmpsb
pop
leave
hlt
xor
push
lea
into
mov
dec
aaa
push
xor
arpl
cmp
inc
cmpb
scas
movsl
lock
mov
xchg
mov
mov
fsts
insb
fsub
jmp
es
dec
or
movb
jnp
mov
int
mov
arpl
inc
xor
ljmp
in
jp
jl
cld
xchg
cmp
daa
out
cmp
cmp
sbbb
adc
pop
and
fsubs
jge
mov
rolb
mov
fcomps
jb
ja
jns
jg
out
cmp
divl
pop
or
lahf
ds
cltd
ds
and
stc
adcl
adc
adc
dec
inc
es
arpl
or
aam
jae
and
xchg
cmp
sub
fucomi
lock
das
jnp
mov
mov
sahf
mov
clc
pop
push
clc
mov
jl
sub
cmpb
loopne
cld
mov
je
inc
pop
mov
daa
mov
into
minps
fwait
mov
stos
add
lock
cld
cltd
gs
pop
xlat
inc
mov
push
push
addr16
or
inc
xchg
adc
inc
push
imul
out
hlt
das
dec
stos
ds
out
and
test
xchg
ret
leave
cmpsl
xchg
cmp
adc
sahf
jnp
add
sub
cltd
sub
sbb
cld
pop
jae
xor
mov
mov
adc
or
pushw
in
das
xlat
movsb
and
dec
mov
repnz
lcall
sti
popf
outsl
lods
testb
movsb
pop
lds
shll
test
sub
lcall
push
fmull
push
js
movsb
mov
je
mov
fsubl
popa
sbb
enter
cwtl
arpl
or
jl
inc
or
sub
ljmp
ret
icebp
cli
jne
cmpb
fldcw
lcall
push
cmp
sti
pop
or
test
push
or
and
dec
dec
repz
xor
mov
mov
adc
adc
sub
dec
mov
fstl
enter
push
mov
add
mov
mov
in
out
pop
jg
xor
iret
xchg
out
pop
and
xor
xor
pop
insb
arpl
cld
mov
nop
push
inc
xor
inc
push
xchg
and
iret
lods
subl
fsubrl
jmp
mov
inc
fiadds
dec
cmp
and
repnz
daa
rcll
sti
xlat
rcrb
mov
loopne
add
and
sub
stc
call
leave
pop
das
add
mov
dec
stos
xor
popl
je
mov
mov
fwait
sarl
mov
jge
loop
sub
push
and
sub
or
pushf
jl
testl
pop
cs
jo
cmp
fildl
sbb
mov
jg
loope
outsl
mov
mov
dec
add
mov
cltd
cmpsl
mov
mov
push
sub
loope
stos
xchg
test
scas
jl
push
xor
pop
ret
dec
pop
dec
cwtl
and
mov
inc
cmp
push
sub
test
cmp
pop
push
xor
mov
jge
xor
sub
mov
scas
jo
lcall
cs
sbb
mov
push
sbb
and
lods
mov
cmp
or
enter
nop
lock
outsb
aas
inc
ret
sub
loop
mov
fwait
movsb
aaa
mov
sbb
inc
mov
dec
jno
sub
ret
mov
mov
loopne
adcl
test
pop
pop
addr16
rorl
xchg
int3
sub
and
cmp
pop
cmp
test
repnz
lahf
pushf
sbb
nop
mov
es
mov
xor
fcoms
cld
dec
popa
lahf
lock
cmpsb
sub
mov
ret
push
push
or
fistl
jbe
cmc
mov
cld
out
sub
jmp
into
andl
ds
push
xchg
pop
pop
mov
or
pop
les
pop
loope
sub
loope
ljmp
arpl
imul
or
xchg
adc
mov
negb
xchg
mov
sub
fwait
js
mov
lock
in
mov
adc
fmull
inc
mov
xchg
sub
pop
xor
mov
loope
fcomps
mov
std
arpl
mov
clc
aam
mov
or
xchg
sbb
push
jnp
push
mov
add
xlat
and
outsl
or
mov
cmp
xchg
or
aad
jne
fsubrl
fadds
inc
inc
in
xchg
popf
repnz
pushf
out
sub
mov
mov
pop
cmp
pop
dec
pusha
js
mov
rolb
pop
in
xor
bound
cltd
lret
mov
cmpsl
subb
lea
lock
icebp
out
test
in
pop
cmp
fsubs
jp
pop
cli
sbb
insb
cmpl
movsl
jp
or
adc
shrl
add
dec
xchg
xchg
adc
add
test
lods
mov
hlt
stos
pushf
mov
sbb
and
mov
push
arpl
out
jne
loope
and
jno
aaa
subb
mov
inc
stos
in
loopne
jg
jb
filds
lds
fisttpl
xor
dec
jne
cmp
mov
popa
cwtd
arpl
repnz
jmp
push
sahf
sbb
sub
mov
dec
ret
or
xchg
xchg
outsl
das
lea
pop
fstpl
scas
scas
rorl
xor
repz
dec
sbb
push
mov
ret
in
add
push
dec
mul
jge
mov
pop
daa
cwtl
stos
push
popa
lock
lock
cmp
aas
shlb
adc
pop
xchg
xor
mull
addb
mov
inc
cmpb
sub
ja
jle
push
jb
jle,pt
cld
gs
sub
inc
iret
lock
enter
js
adc
push
mov
enter
adc
mov
adc
dec
insl
imul
dec
ret
dec
add
int
adc
sbb
jb
mov
fdiv
lretw
mov
jp
lret
out
mov
stos
decb
pop
clc
mov
sti
incl
lds
ja
add
fiaddl
jb
scas
ret
xchg
add
lds
rcr
rcr
shlb
ss
rorl
pop
rorl
repz
nop
stos
inc
xor
scas
mov
repz
jbe
sub
test
mov
sbb
add
loopne
stc
pusha
dec
popa
ljmp
dec
push
cs
mov
scas
cmpsb
mov
data16
scas
es
mov
mov
xor
add
icebp
fstp
pop
imul
sub
sbb
aad
push
popf
cld
addl
dec
xor
dec
push
cmp
push
mov
rcll
inc
inc
cmp
adc
xchg
xchg
mov
mov
aas
test
fs
push
adc
aaa
movsl
adc
shll
cltd
lahf
add
pop
cmp
faddl
out
test
aas
xor
push
gs
sub
loopne
push
sbb
inc
sub
loope
mov
cmpsb
and
jl
mov
sub
loope
sbb
test
jno
dec
movsl
jbe
xchg
fmull
push
out
imul
xor
fchs
das
out
jle
and
lahf
out
pop
xor
nop
loope
mov
add
adc
leave
or
cmpsb
xchg
cmp
cmp
adc
and
pop
loop
or
rcl
pop
in
sub
jle
add
lret
data16
push
pop
jmp
push
mov
ret
mov
mov
imul
jbe
lcall
lret
fstps
push
jmp
in
jae
mov
push
dec
add
jmp
inc
in
ja
fisubrl
pop
or
scas
das
stos
push
or
imul
dec
dec
xor
and
mov
hlt
fldl
cli
dec
push
sub
pop
imul
jecxz
cmp
push
cmc
jl
fwait
xchg
add
xchg
scas
std
inc
cli
xchg
mov
pop
les
scas
sub
fidivrs
jmp
test
xor
in
lock
mov
xchg
cld
mov
test
adc
dec
in
leave
movsb
sub
sbb
push
or
jo
shll
or
test
sub
ljmp
in
sub
jnp
add
sbb
std
adc
int3
out
aad
lods
test
andl
lods
shll
mov
xor
scas
loope
adc
jl
testl
jmp
add
hlt
std
dec
xor
aam
dec
inc
cld
adc
lret
cmp
stc
xchg
push
dec
jns
imul
orl
insl
dec
xchg
les
mov
aam
inc
or
mov
cmp
push
jo
adc
xchg
push
sahf
cmp
out
push
mov
xorl
scas
push
mov
mov
pop
pop
aam
or
mov
sbb
inc
push
jecxz
jg
lret
inc
js
adc
xor
cld
lods
cmp
xor
into
sub
ds
lods
push
jecxz
pusha
sbb
popa
sbbl
xor
pcmpgtb
leave
cmp
sbb
andl
popf
push
jp
cmpsb
nop
mov
cmc
out
and
or
inc
mov
push
xor
and
sbb
popa
mov
imul
add
gs
adc
mov
or
and
sub
adc
sahf
gs
push
add
ret
aad
mov
bound
out
cwtl
fwait
push
add
or
call
jl
or
or
xor
pusha
es
cmp
dec
mov
cwtl
enter
pop
dec
jns
fsts
push
jl
ds
out
out
push
sti
xchg
mov
fsubs
fwait
inc
adc
cs
dec
and
dec
dec
pushf
fiaddl
pusha
in
mov
cmp
mov
scas
gs
jo
jbe
sbb
out
pop
mov
pusha
rcll
xor
and
dec
loope
and
aad
fwait
test
or
repz
push
mov
dec
push
mov
or
mov
jg
push
rcrb
mulb
push
test
or
mov
jne
mov
fwait
and
fisttpll
inc
repnz
sub
hlt
mov
adc
into
insb
push
pop
sar
daa
jo
xlat
rclb
sbbb
xchg
adc
sahf
arpl
lahf
and
in
sbb
shlb
push
mov
jnp
mov
xor
add
std
inc
push
adc
inc
mov
fmull
mov
mov
fwait
jo
sub
js
or
inc
movsl
lcall
mov
push
cmp
or
or
and
testb
and
rcrl
mov
jg
mov
lea
aas
sub
popa
dec
ret
movsl
sarl
pushf
dec
aam
mov
pop
stos
pop
clc
push
adc
pop
mov
sub
stos
sti
and
add
stc
in
inc
ret
stos
lds
or
inc
push
jl
push
push
nop
push
pop
int3
loopnew
stc
sbb
adc
lcall
in
or
and
pop
popa
nop
lea
mov
mov
lret
ret
xor
cmp
add
arpl
push
inc
xor
xor
jne
pop
adc
cs
mov
sbb
jg
pop
rcrb
jno
ljmp
imul
mov
dec
addr16
js
mov
cmp
xor
mov
pop
aas
aad
jmp
or
jo
sbb
xor
rclb
or
insb
sbb
pop
push
adc
sub
xchg
add
cmp
add
sbb
sbb
lea
popa
xlat
icebp
shll
jl
test
mov
mov
dec
cli
aam
pop
and
cmc
add
inc
loop
es
dec
lret
add
ds
cmpl
in
jg
jne
cmove
lds
xor
cmc
jle
and
mov
sar
je
cmp
dec
cli
loopne
mov
incb
call
rcrl
icebp
pushf
shrb
dec
mov
shlb
js
pop
jl
or
dec
pushf
repnz
or
jno
call
jle
loop
leave
scas
cmp
or
adc
pusha
shll
fsts
arpl
mov
push
jae
fistpll
leave
pop
adc
enter
out
dec
sbb
movsl
xor
pop
sti
dec
mov
sub
mov
inc
lahf
popa
movsb
xchg
mov
mov
aam
mov
push
mov
movsl
test
insb
jge
icebp
ja
mov
test
sbb
mov
jo
js
xor
xchg
pop
loopne
push
out
dec
inc
mov
sub
mov
cmpsl
adc
jo
dec
xorl
loop
fwait
lods
jbe
sbb
sbb
das
pop
lods
fmull
sub
sbb
pop
std
sub
cmc
hlt
mov
mov
pop
or
test
xor
lahf
adc
mull
or
popa
jb
sub
insl
mov
fistps
xor
notb
adc
jae
ret
dec
xor
push
lea
lds
add
or
dec
push
inc
mov
inc
out
addl
nop
pusha
push
xor
push
inc
in
or
cmpsb
add
and
sub
inc
mulb
cmp
inc
aam
nop
je
pusha
dec
add
adc
jb
imul
mov
aam
cwtl
lahf
mov
pop
test
fstpl
and
and
xchg
mov
add
push
mov
pop
mov
and
xor
adc
jl
fbld
div
pusha
out
and
lret
shr
or
cltd
adcb
out
add
adc
xorb
insb
ja
jle
sub
pushf
sarb
aaa
jns
inc
aaa
push
jp
bswap
sub
movsl
loope
test
insl
xchg
enter
std
adc
call
push
lods
jbe
adc
sbb
cmp
mov
push
pop
fcoms
push
xlat
push
push
jg
movsl
cld
cmp
mov
ret
mov
insb
mov
arpl
cmp
call
inc
ljmp
in
jnp
or
mov
jecxz
in
dec
inc
jns
cmp
ja
sbb
sub
xor
popf
outsb
adc
pushf
mov
and
shl
jno
mov
push
addl
lret
xlat
adc
fnstsw
test
lahf
mov
fstl
xchg
cwtl
popf
cmp
imul
sahf
xchg
xchg
jp
lods
pusha
xor
enter
mov
mov
mov
call
movsb
test
pop
sub
pop
cltd
xor
popa
push
cli
clc
in
jmp
cltd
jbe
mov
mov
mov
insl
fimull
dec
loopne
or
cmpsl
mov
mov
test
js
loope
shll
incb
mov
mov
lret
sti
or
out
insl
sbb
mov
cmp
int
xchg
mov
push
stos
sbb
fnsave
xorb
loopne
data16
lret
push
cmp
cmp
test
cmp
xchg
out
cmpsb
mov
mov
into
out
cwtl
dec
xor
xor
cltd
pop
push
sti
add
imul
mov
loopne
call
xchg
jnp
scas
xor
fmul
dec
mov
lds
movsb
mov
inc
std
add
mov
sbb
fs
iret
mov
jo
cmp
mov
mov
sarl
ret
push
in
xor
mov
lcall
shrl
cld
inc
pop
cli
jns
cs
pop
in
xchg
sub
add
icebp
ja
or
mov
dec
int
addl
xchg
xchg
mov
mov
add
or
pusha
sub
push
hlt
jnp
enter
mov
jbe
loope
hlt
mov
shlb
sbbl
push
mov
out
loop
jns
jg
xchg
jns
push
fmulp
popf
pop
pop
pop
inc
fisttpl
mov
push
imul
adc
enter
mov
sahf
cmc
dec
or
decl
mov
cld
bswap
mov
jno
sub
arpl
mov
jns
js
js
inc
xchg
andb
arpl
mov
fsts
lods
sbb
push
xchg
add
in
out
ss
mov
or
xor
xchg
lret
mov
jo
xchg
dec
adcl
shr
jg
inc
sbb
xchg
xor
push
lods
sub
cmp
insb
jns
xchg
pop
rorb
dec
shlb
int
and
push
xlat
sti
xchg
jns
popa
flds
enter
mov
xor
dec
mov
in
sbb
test
ret
insb
insb
sub
pop
fmuls
jns
mov
mov
shrb
test
nop
cmp
ror
iret
ret
pushf
xchg
push
mov
adc
into
jno
sbb
xchg
lods
popf
leave
jl
imul
jbe
shl
xchg
loopne
xchg
mov
xor
adc
stos
test
push
out
mov
shl
xchg
roll
mov
in
dec
mov
popa
xor
sbb
fcomp
adc
movsl
pop
mov
repnz
in
aad
jae
xchg
jae
push
pop
or
fdivrl
mov
dec
outsl
aad
add
mov
add
mov
inc
xchg
jbe
xchg
xchg
aam
faddl
inc
ljmp
fwait
loop
push
pop
pop
inc
test
and
loop
mov
fisubrs
adc
adc
cltd
cmpsl
insl
and
mov
pop
pop
add
and
mov
sbb
aad
pop
jmp
add
daa
popf
mov
lea
jo
jg
scas
jb
insl
jecxz
mov
sub
mov
push
fdivl
stos
cmp
cmp
repnz
or
or
xchg
adc
aas
insl
test
mov
stc
jmp
iret
mov
push
adc
xor
shrl
mov
pop
cmp
xlat
iret
push
jmp
mov
ret
fsubl
jno
jmp
cmp
mov
jle
clc
out
movsl
sbb
out
cmp
sub
and
repnz
rorl
jnp
push
push
insb
xor
in
dec
pop
adc
lods
or
mov
js
pop
out
xor
shl
pop
or
push
mov
in
push
jmp
stos
mov
push
xor
imul
adc
adc
in
out
pop
shrb
adc
insl
pop
lds
js
rolb
xchg
mov
testb
stos
cmp
into
dec
mov
adc
popa
and
test
enter
cs
sbb
pop
mov
test
stc
fwait
test
out
adc
dec
lret
or
outsb
dec
adc
aam
mov
fst
adc
in
das
daa
repnz
jne
mov
jecxz
xor
dec
fcmovnu
loopne
jl
ret
outsl
inc
mov
or
sub
push
cli
or
and
jae
mov
stos
push
pop
mov
xchg
adc
mov
inc
pusha
movsb
imul
or
adc
or
stos
xchg
jnp
xchg
jl
lods
in
insb
dec
add
lcall
movb
int
loop
mov
sti
mov
sbb
lea
and
ja
arpl
in
jl
andb
ficoms
inc
andb
push
fcmovbe
add
int3
movsb
fldt
daa
faddl
or
xchg
or
test
sarb
lds
popa
ror
data16
divb
clc
pop
add
incl
stos
mov
inc
cmp
lea
add
pop
test
pop
jp
dec
lcall
aas
lods
xchg
outsl
xor
movsb
sub
jnp
loopne
xchg
inc
aad
aas
mov
ret
mov
add
cmpsb
clc
xchg
adc
and
push
pop
xchg
aaa
sti
iret
mov
outsb
jb
push
test
pushf
push
mov
mov
iret
adc
sbb
cli
repz
out
sub
imul
mov
adc
sahf
lds
mov
mov
mul
pusha
adc
and
lods
popa
das
add
ljmp
nop
dec
and
fs
pop
stos
or
stos
inc
mov
lea
aad
xor
je
in
sbb
pop
int3
mov
gs
mov
bound
sti
outsl
bound
push
push
es
insb
and
cmp
xor
pop
sub
xchg
insb
scas
pop
and
or
repz
sbb
stos
xchg
clc
inc
into
and
out
adc
test
out
sub
out
scas
enter
imul
addr16
mov
sub
pop
push
push
xor
imul
jae
stos
test
mov
lret
hlt
fmul
ja
xchg
paddusb
test
dec
jne
push
nop
aaa
pop
stos
xor
cmp
cld
arpl
insb
add
cmp
rol
repnz
jnp
lods
cld
xor
ficompl
pop
dec
pop
inc
pop
inc
sub
dec
fsubl
fisubrs
ret
jo
iret
mov
xchg
in
scas
or
mov
mull
pop
fidivl
les
cwtl
insl
sbb
dec
dec
sub
test
pop
mov
mov
ret
mov
cs
or
add
leave
imul
and
mov
gs
icebp
aam
outsb
xchg
push
hlt
cmp
add
in
out
insb
cmc
loope
out
outsb
ja
pop
sub
cs
and
dec
ftst
xor
inc
out
inc
pop
mov
pop
xchg
lahf
pusha
out
mov
lock
push
out
std
xor
and
lods
lds
mov
adc
push
idivl
add
roll
leave
sub
fs
adc
orb
xor
cmp
xchg
pop
dec
mov
add
mov
xchg
pop
dec
shlb
or
repnz
sti
pop
loopne
in
adc
inc
adc
pop
mov
jo
iret
in
lret
mov
mov
bound
sbb
out
cli
pop
pop
test
pop
and
or
pop
inc
aam
ja
sbb
out
jp
jmp
inc
cltd
xor
cli
mov
mov
cltd
adc
scas
movsb
pop
xchg
xchg
xchg
lock
fstpt
repz
xchg
fs
fwait
push
pop
add
pushf
mov
pop
mov
shll
pop
cmpsl
mov
sbb
sbb
cmp
push
mov
pop
pop
xor
sbbb
and
jle
dec
xorl
sub
add
test
mov
out
fs
in
rorb
popf
pop
mov
insl
pop
imul
xchg
cmc
in
jge
ljmp
enter
mov
insb
and
xchg
shll
rol
popf
or
shr
cmp
mov
mov
jl
scas
cmp
xchg
mov
lock
mov
fcoml
mov
adc
divb
dec
and
ljmp
pop
pop
insb
sbb
cmp
jle
xor
or
fwait
xchg
push
decl
mov
xchg
lock
fistps
daa
push
sbb
cld
xlat
cmp
imul
push
sub
bnd
pop
js
out
aas
fcomp
add
rcrb
jnp
jno
push
test
jnp
push
sub
arpl
lret
inc
sar
xchg
outsb
inc
xor
add
sbb
xor
int
test
add
push
neg
pushf
cmc
adc
jae
xorl
shrd
jnp
mov
aad
mov
jnp
lfs
dec
dec
cmp
inc
stos
cmp
pop
inc
pop
jns
dec
clc
adc
cmp
insl
rorl
cwtl
jbe
dec
repnz
mov
pushf
dec
or
jae
cmp
and
loope
xchg
inc
addr16
repnz
scas
cmp
adc
bound
mov
mov
mov
inc
xor
adc
outsb
cltd
mov
xchg
jge
testl
stos
mov
pop
daa
push
add
and
stc
adc
in
mov
cmp
ret
xor
fwait
sub
hlt
nop
sub
fisttps
inc
mov
cmovns
sub
pop
popa
xor
adc
adc
popf
movsl
iret
xchg
orb
push
push
test
pushl
jg
mov
cli
xor
inc
push
xlat
sub
ret
push
lret
repz
mov
push
xchg
sub
pop
mov
je
call
test
clc
and
ljmp
insl
cmp
pop
aam
or
movsb
inc
lods
mov
push
jl
cmc
fmull
test
adc
addr16
in
icebp
mov
stos
dec
sub
aaa
clc
int3
cwtl
popf
push
stos
loopne
and
cltd
pop
stos
mov
xchg
mov
xor
mov
add
faddp
add
in
mov
add
or
sbb
shrl
mov
loope
sub
add
cmp
adc
cli
mov
push
int3
xchg
outsl
inc
inc
fs
shlb
mov
mov
inc
mov
push
sub
insb
or
cmpsb
mov
mov
sbb
rcll
fldenv
mov
lock
and
pop
lcall
cmp
mov
cmp
faddl
in
movsb
sub
sbb
inc
xchg
push
push
test
pop
mov
pushl
push
dec
mov
pop
xor
push
pop
movsb
jl
call
xchg
jb
inc
add
xor
mov
rcrl
sbb
fs
push
adc
inc
sub
ss
mov
popf
sub
fimull
nop
aad
dec
xchg
pop
loopne
in
jl
rorb
push
mov
xor
jns
sbb
aas
mov
xchg
xor
jnp
testl
enter
pop
cwtl
or
cmp
jb
pop
cwtl
subb
arpl
cmp
rcrl
lods
inc
adc
xchg
xchg
xchg
in
mov
movsb
fistpll
lods
mov
mov
data16
stos
adc
fs
jbe
and
inc
xchg
fistps
xchg
push
jge
pop
mov
inc
and
les
outsb
stos
punpcklwd
dec
inc
cmp
arpl
fstpt
sbb
les
lds
adc
mov
popf
iret
insb
mov
insb
daa
in
lods
stos
mov
pop
lahf
and
lret
mov
cmp
icebp
repnz
cmc
mull
loop
mov
sti
push
movsb
and
lods
lret
lods
in
cmp
lds
or
mov
mov
and
aad
in
pop
movsb
mov
ljmp
cmp
and
mov
jns
mov
inc
es
int
inc
jbe
fdivl
xchg
push
push
push
or
push
mov
mov
das
push
rclb
mov
je
insb
push
outsl
or
and
in
dec
add
add
dec
das
mov
xchg
pop
cmp
and
or
adc
inc
shll
xchg
ret
pop
pop
loop
xor
cmpsb
cmc
pop
in
pop
das
in
jmp
sbb
xor
clc
mov
mov
dec
out
lods
or
fists
add
inc
adc
dec
push
dec
jp
movsbl
imul
and
sbb
mull
inc
mov
stos
subl
mov
orb
lcall
pop
nop
pop
mov
aam
lret
jae
xchg
mov
cmp
xor
mov
jmp
scas
nop
jle
push
cmp
add
pop
mov
movlps
das
movsl
cmp
push
push
jmp
push
add
ret
fdivr
pop
pop
xor
jno
cmp
xchg
xorb
add
jp
xor
es
aam
ljmp
xor
call
push
dec
xchg
inc
fiadds
cmp
mov
imul
fisttpl
lods
incl
push
int
popf
jo
pop
or
jecxz
fmull
cmc
push
push
pop
jne
lock
stc
and
pop
mov
xor
shrl
mov
sub
lcall
outsl
jmp
popa
xor
jle
jg
fiaddl
mov
repz
adcb
cmp
iret
push
push
sbb
lahf
inc
cmp
cs
ja
jo
pop
dec
jmp
test
roll
fsub
loopne
pop
insb
adcb
or
push
sti
push
adc
andl
or
push
dec
xor
cmpsb
gs
mull
cwtl
rorl
inc
rcrl
ljmp
int
lret
movsl
or
dec
mov
fmul
xlat
arpl
inc
int3
out
jb
mov
xor
jge
lds
loope
movsb
lods
mov
and
jp
rolb
jg
fxch
out
or
int
popa
push
inc
xchg
xor
je
adc
dec
dec
inc
mov
aaa
cmp
cmpsl
or
aaa
cmpsl
cmc
xchg
stc
out
sarl
xor
das
and
insb
xchg
stos
hlt
jge
dec
repnz
add
leave
dec
stos
or
sbb
out
fstpl
retw
mov
rorl
cmpb
popf
adc
addr16
fisttps
mov
xor
xchg
mov
shlb
out
loopne
cmc
hlt
push
mov
jo
add
or
xor
xchg
dec
rol
dec
int
mov
pop
test
mov
int3
cli
insb
mov
inc
jns
add
jg
decb
push
adc
inc
lret
sub
sub
inc
mov
push
les
mov
aas
mov
jbe
dec
shll
mov
scas
bound
xchg
ds
paddd
in
adc
jo
data16
into
adcb
dec
mov
hlt
xor
cmp
mov
aad
push
add
xchg
sub
lahf
jne
cwtl
inc
mov
sbb
add
cmpl
jle
into
mov
xchg
dec
outsb
jae
xchg
js
fsubrs
les
lock
cmp
fwait
arpl
mov
outsb
scas
sbb
lret
fwait
stc
push
mov
pop
xor
jp
or
mov
sbb
cmp
rolb
fisttpl
jg
cmpsb
mov
or
add
mov
leave
test
std
mov
fdivrs
push
nop
roll
outsl
or
movsl
push
fmuls
mov
out
xchg
and
int3
aam
cmc
cld
cmc
jg
rolb
fimull
xor
stc
jnp
mov
test
call
sub
popa
push
dec
rcr
out
mov
xchg
jo
xor
stos
shl
fists
xor
and
lods
movsb
pop
test
cltd
ret
pop
dec
in
hlt
mov
rcr
pop
cmp
cmp
cmpsb
lahf
test
jo
xchg
pop
call
xchg
pop
jmp
jl
push
nop
enter
push
mov
je
sub
adc
xlat
add
stos
outsl
arpl
push
mov
cli
push
lret
outsl
dec
outsl
out
jne
xor
sub
mov
jecxz
insb
test
xchg
sub
lea
lcall
pop
pop
mov
pop
pop
adc
push
mov
adc
rcrb
cmp
jns
or
add
dec
pop
lret
popa
cld
sub
mov
int3
add
mov
cli
mov
cwtl
out
push
push
sbb
cmpb
mov
jp
ss
or
dec
lret
cli
test
jo
cltd
inc
loope
daa
jmp
jecxz
iretw
lods
mov
inc
inc
dec
lahf
addr16
notl
jnp
sub
jecxz
hlt
or
std
xor
mov
test
loope
inc
ret
int
lret
insl
xor
es
cmp
fisubs
mov
arpl
icebp
mov
gs
sbb
movsb
int
arpl
nop
sbb
mov
int3
cwtl
inc
xchg
shl
mov
ss
xchg
aaa
scas
scas
test
add
adc
add
movsl
pusha
sbb
push
fnstenv
push
ret
into
push
fcom
mov
cmc
jg
divl
lret
shrl
movb
adc
cmc
lods
xor
fcmovb
or
pushf
pop
lds
pop
das
cmpsw
mov
ficoml
scas
leave
ds
mov
into
push
lcall
pop
pop
pop
dec
stos
arpl
mov
jmp
mov
add
adc
out
cmpb
mov
mov
stos
in
js
leave
repnz
ja
or
cltd
mov
push
dec
push
or
inc
mov
jmp
add
and
es
sarb
arpl
mov
popf
jecxz
addl
mov
add
mov
movsb
cld
cs
popa
out
jo
jns
mov
pop
sbb
int3
mov
iret
pop
add
sbb
lcall
adc
mov
inc
xor
stos
repz
mov
sbb
sbb
loop
mov
push
sahf
es
push
addb
add
sbb
jg
add
push
xorb
jmp
enter
cmp
push
shlb
xor
in
mov
fisttps
das
xchg
mov
cmp
xchg
push
lahf
cmpsb
and
mov
stc
jl
xchg
hlt
jno
jle
add
jne
pop
inc
ss
xchg
bnd
repz
ficompl
jne
xor
mov
pop
fsubrl
and
repz
fsubs
mov
aad
xchg
lods
rcl
sti
adc
xchg
rorb
lods
addl
add
sub
insb
pushw
sahf
and
in
test
dec
sub
xchg
inc
xchg
stos
jmp
out
test
cmpsb
add
bound
mov
aad
sbb
insl
add
shl
pushf
cmp
icebp
jbe
mov
mov
pop
push
adc
xor
xor
inc
and
out
cmp
push
mov
subb
jbe
pop
pop
arpl
mov
leave
jle
cmc
sub
add
dec
mov
xor
decb
sbb
mov
pop
add
xor
sarb
mov
inc
ljmp
leave
sbb
or
lret
out
ret
rcll
push
ret
push
push
addl
sub
std
das
mov
adc
in
xor
mov
shrb
ds
outsl
in
dec
inc
int
sbb
sbb
cmpsb
sbb
popa
dec
ja
mov
cmp
pop
sub
inc
xchg
jno
or
xchg
lds
sub
outsl
arpl
mov
fwait
mov
xor
jnp
nop
clc
cmpb
mov
adc
dec
xchg
pop
mov
cmpsl
stc
ss
stc
lds
inc
cmp
sub
add
sbb
cmp
pop
jb
bound
xchg
xchg
fbstp
mov
mov
dec
inc
lods
subl
adc
cwtl
js
pusha
scas
ret
add
inc
mov
dec
or
and
adc
pop
pop
ret
mov
cmp
lahf
ret
enter
bound
sub
sub
push
sbb
daa
dec
mov
shl
or
xchg
mov
cmp
cmc
sub
pop
rol
mov
xchg
out
sub
and
adc
add
int3
sub
in
mov
cmp
mov
fs
xchg
adc
fs
push
ds
in
xchg
sub
enter
add
test
into
cltd
cmpsb
xor
pop
push
sbb
add
or
push
adcl
jae
dec
xchg
push
xchg
xchg
cmp
and
sti
outsb
xor
test
push
push
outsb
fwait
xchg
fsubr
outsb
sub
iret
mov
push
xchg
mov
out
les
es
ljmp
out
mov
fiaddl
es
shlb
mov
shlb
sub
inc
jno
incl
out
fnstcw
jnp
loope
fistl
or
and
inc
jge
pushf
dec
sar
jmp
or
sbb
aas
push
pop
stos
mov
shrb
xorb
push
mov
jno
mov
mov
es
pop
mov
sarb
subl
js
xor
lcall
or
loopne
out
inc
subb
jns
das
dec
fistpl
jae
mov
and
pop
jl
in
jmp
add
outsl
cmp
add
jmp
adc
jno
stos
rcrb
aad
rorl
jmp
lock
xchg
xlat
in
jg
lcall
pop
jno
mov
rcrl
bound
pop
popf
push
or
shlb
iret
pop
arpl
test
and
sub
and
cmc
push
pop
xchg
push
aad
sub
sahf
lds
sti
outsb
jnp
and
fistps
add
sub
imul
popf
adcb
int
sub
push
loope
xor
pop
jnp
jno
dec
in
xor
repz
cvtps2pi
lahf
jmp
loop
sbb
fisubl
pop
fcoms
jo
xchg
pop
sbb
ret
int3
inc
push
movsl
jecxz
pop
rolb
shrb
push
gs
xor
ficomps
jmp
jbe
repnz
popa
iret
push
cs
roll
sar
dec
lods
lret
stos
mov
push
jecxz
and
lods
xchg
in
loop
or
cmc
fiaddl
mov
enter
dec
int3
dec
je
int
rorl
and
sar
sahf
shrl
and
fsts
fistps
int3
cmp
mov
or
repz
imul
adc
and
movsb
push
icebp
es
ss
enter
push
mov
cmp
sti
jmp
repnz
jg
cmpsb
int3
out
inc
or
cmp
and
dec
jl
mov
or
fnstcw
aas
test
inc
addr16
inc
push
test
stos
push
pushf
imul
fwait
adc
mov
call
fiaddl
cmp
fwait
push
and
outsl
fists
push
jne
adc
aas
jo
mov
stc
push
sbb
push
test
lods
push
mov
mov
ftst
push
push
or
xchg
and
insb
shrl
je
ss
shrl
scas
cmpb
mov
mov
ljmp
stos
jo
cli
pop
pop
push
nop
cld
push
sub
shll
sub
std
cmp
xchg
outsl
popf
mov
push
mov
add
jmp
data16
stc
mov
lock
xor
xor
in
lock
dec
stc
test
stos
add
add
into
fmul
shrb
fmuls
cltd
cmp
imul
sbb
push
imul
cmp
inc
movsl
sub
jl
and
sbb
std
pop
scas
stc
push
mov
push
push
cld
leave
push
jnp
imul
cmc
out
in
cmpsb
addl
int3
pop
cmp
into
mov
add
pop
push
sbb
and
fists
inc
repz
or
and
adc
cmp
leave
pop
pop
out
sti
jle
cli
mov
mov
push
xchg
adc
mov
mov
aam
or
sbb
push
sbb
adc
fstpl
popa
dec
addr16
fwait
or
dec
scas
lods
loop
or
test
push
lret
movsl
outsl
mov
jecxz
mov
insb
cli
sahf
enter
mov
xor
xor
and
pop
adc
fadds
xchg
add
push
jle
mov
subb
fcoms
leave
cmpsl
mov
arpl
push
xor
js
andb
outsl
pop
dec
xchg
inc
xchg
lahf
push
lods
hlt
fidivs
lock
lahf
in
inc
dec
shlb
jae
int3
dec
fldenv
cmp
mov
sub
cmp
mov
clc
mov
jge
data16
push
aaa
jne
mov
cld
xchg
push
pop
loop
mov
jns
fcoms
int3
dec
jno,pt
mov
xor
mov
fsubl
push
js
xor
cmp
mov
iret
in
or
mov
outsb
insl
cmpsl
ret
out
ficoml
cmp
lahf
xor
and
scas
push
pushf
pop
jmp
lods
aad
inc
add
xlat
add
fadds
jmp
xor
sbb
add
mov
aam
pop
and
lods
enter
mov
test
lods
aaa
pushf
data16
mov
add
in
popf
inc
add
pop
cs
dec
mov
not
xchg
fwait
inc
in
rclb
call
jb
xchg
xor
pushf
aaa
lahf
dec
mov
and
sbb
and
xor
daa
mov
add
lock
enter
dec
adc
fstpl
pop
fstps
lcall
jg
pop
lcall
sub
inc
xchg
sbb
aaa
dec
mov
loopne
mov
rcrb
adc
fidivs
dec
mov
xor
sbbl
mov
into
divl
mov
aad
and
fyl2xp1
push
xlat
inc
mov
imull
xchg
int3
mov
or
sub
lea
ret
sub
mov
fisubl
xor
jnp
mov
push
or
or
ret
jp
ljmp
cmpsb
sbb
xor
enter
add
aaa
rorl
sarl
xor
push
inc
sahf
push
or
jae
xchg
xor
mov
fcompl
sbb
cmp
test
shlb
fstp
test
nop
mov
stc
mov
pop
and
rcrb
lds
loope
sub
ror
ficoms
arpl
sbb
pop
sub
or
jo
scas
dec
pop
andl
inc
fst
jns
push
cmp
aaa
pop
arpl
push
repnz
adc
repnz
push
add
jno
out
mov
inc
pop
out
cmpsb
inc
cmp
shlb
nop
xor
mov
xorl
and
sahf
jno
stos
in
fsubs
jl
mov
inc
mov
in
xor
stc
lds
xchg
mov
pop
pop
mov
or
mov
enter
stos
pop
pusha
imul
data16
cmp
lcall
fs
inc
push
pushf
movsl
test
stc
movsl
pop
jnp
mov
lar
jl
mov
mov
fwait
mov
subb
ficomps
jp
sbb
insb
xor
adc
clc
add
stos
scas
push
jecxz
test
pop
mov
cld
cmp
sub
pop
jae
inc
call
ret
mov
pusha
in
mov
fdivrl
outsb
pushf
mov
daa
test
mov
dec
cli
mov
aas
sub
cmp
push
loop
out
push
data16
shlb
mov
push
xchg
addr16
mov
out
shr
push
mov
dec
push
push
inc
aam
dec
jp
push
movsl
add
mov
sub
xchg
loope
cmp
rol
aam
ret
stos
jp
xchg
outsb
pop
cld
xchg
or
xchg
mov
mov
xor
xchg
and
jb
xchg
xchg
fidivrl
out
adc
push
push
inc
pop
push
inc
in
xchg
lock
push
pop
fisubs
xor
rorl
divl
xor
js
ljmp
insl
pushl
fistpl
fldcw
jge
pop
int3
rcrl
dec
push
and
lahf
or
xchg
int3
adc
cltd
out
nop
test
mov
out
mov
js
pop
cmp
xor
stos
jge
cmpsl
and
sub
mov
xchg
dec
xor
inc
mov
dec
inc
push
jo
pusha
push
push
jmp
add
mov
in
pop
mov
adcb
jns
cmc
cmp
xchg
addr16
idivl
fidivs
je
xor
inc
fcompl
cld
or
test
dec
mov
fs
xor
mov
sbb
cwtl
insl
orb
in
mov
movsb
fwait
fwait
inc
pop
int
add
ret
push
hlt
icebp
pop
fwait
test
loopne
mov
or
leave
pushf
stos
pop
jae
mov
into
mov
cwtl
in
dec
leave
aam
cmp
pop
sti
push
xchg
test
fwait
xchg
js
sbb
add
xor
xchg
adc
inc
mov
bound
ret
push
adc
cwtl
fcoml
stos
mov
lods
inc
xor
cli
mov
inc
cmp
int3
cmp
iret
fadds
lcall
lahf
push
loop
and
mov
dec
in
mov
testl
out
sbb
and
lret
rclb
push
cmp
fs
dec
cli
xor
jb
push
pop
add
mov
cmpsb
jno
adc
jmp
fmul
imull
ljmp
sub
sub
out
pop
or
out
mov
test
dec
scas
fdiv
scas
shlb
sub
stos
adc
fcoml
cli
pop
xor
das
outsb
add
std
cmp
cmc
add
mov
enter
aaa
jmp
push
add
leave
mov
jmp
cmp
xorb
scas
daa
inc
sahf
ja
jnp
push
mov
ja
into
hlt
pushf
fs
std
cmpsl
insl
jmp
test
rcl
sbb
movsb
sub
jle
scas
data16
outsb
sbb
data16
push
mov
dec
xor
cmp
in
lea
inc
inc
jae
pop
addb
add
stc
sub
inc
jl
inc
push
mov
cmpsl
xchg
out
xchg
sarl
lods
jbe
sahf
inc
add
sub
roll
push
jle
test
mov
and
mov
adc
cli
adc
jmp
lods
stos
mov
ss
in
push
pushf
mov
insl
mov
pop
leave
push
jno
pop
inc
sti
aaa
orl
iret
cmpsb
xor
data16
mov
leave
cmp
pop
ficomps
popa
xchg
loope
push
fisubs
dec
mov
out
aad
out
mov
pop
sub
rolb
and
or
cmp
sbb
mov
mov
pusha
loope
or
lahf
ja
add
test
add
push
icebp
je
pop
lret
sar
adc
fsub
push
stos
filds
loop
dec
mov
aas
imull
and
adc
push
iret
or
fsqrt
push
mov
fdiv
out
sbb
mov
insb
mov
or
inc
dec
mov
mov
fsubl
lcall
adc
sub
mov
nop
frstor
popf
cmc
fucomp
push
iret
and
in
setl
cli
lea
sbb
fsubr
dec
fisttps
sub
xor
ljmp
test
lods
mov
pop
dec
mov
and
jmp
pop
cli
push
xchg
ret
jns
mov
outsl
lret
pushw
dec
add
mov
and
int
repnz
xchg
inc
mov
cmp
cs
es
fiadds
xchg
int
stc
or
repnz
add
pop
pop
stc
shll
xchg
pop
mov
pop
pop
xchg
out
mov
aaa
mov
int3
negl
pop
sub
xlat
cmp
shll
mov
aam
push
lock
mov
jmp
inc
jmp
push
mov
xor
and
xor
out
mov
pop
ret
in
jae
jmp
int
mov
mov
and
xor
cmp
ds
test
mov
scas
xchg
ljmp
mov
mov
sub
or
test
xor
pop
cmp
popf
sbb
fwait
inc
adc
lods
jnp
xchg
js
out
rcrl
or
jg
fs
mov
mov
cmpsb
lret
out
mov
fmul
inc
imul
xor
sti
call
and
push
adc
or
popa
outsb
sub
cmp
fbstp
scas
stos
movsl
dec
jns
cmp
mov
or
cld
pop
pop
pop
add
xor
and
and
loopne
fmuls
push
pop
pop
mov
mov
jae
subl
add
inc
ja
jne
mov
jb
shll
out
mov
mov
lds
cltd
lds
mov
cltd
or
push
xchg
jbe
or
adc
cwtl
test
pushf
cli
sbb
mov
mov
das
in
and
mov
rcrb
lock
gs
arpl
and
cmp
or
pop
mov
mov
fwait
cld
call
lods
out
addr16
ljmp
iret
sbb
imul
and
or
inc
jp
cld
push
inc
je
xchg
mov
push
fmuls
mov
arpl
dec
roll
popa
cmp
jne
push
int
mov
addr16
fldcw
fdiv
loopne
mov
push
add
paddusw
lock
lcall
pushf
test
xchg
add
clc
into
or
or
add
xor
decb
lods
movb
xor
std
test
pop
fdivs
fs
negl
test
fists
cmp
pop
imul
aam
xchg
arpl
pusha
ret
repz
dec
out
and
xchg
outsl
inc
jl
dec
adc
pop
stc
dec
and
mov
ljmp
rcll
lods
and
cld
jae
sbbb
xor
out
je
pop
fadd
and
adc
das
in
or
andb
daa
sub
inc
fdiv
adcb
add
mov
mov
sbb
in
and
daa
mov
call
mov
dec
fstps
shlb
aas
jb
jmp
mov
push
sub
call
cmpsb
and
rcrb
cmp
mov
mov
mov
inc
inc
mov
pop
mov
ja
pushf
outsl
pop
xor
loopne
add
movsb
cmpsb
mov
outsl
jmp
sbbl
jle
mov
js
pop
fisttpl
nop
fs
fldenv
shl
arpl
stos
push
loopne
es
les
in
push
in
xchg
xor
inc
orl
jp
jecxz
sbb
test
loope
lock
cmpsl
mov
add
or
loope
into
stos
cmp
xchg
push
stos
add
inc
fcompl
jae
adcl
xchg
scas
push
lods
add
sub
mov
mov
ror
push
xor
inc
cwtl
sbb
fwait
cmp
into
adc
push
push
mov
pop
adc
add
mov
sti
sub
test
mov
scas
inc
pop
ds
pslld
fisubl
dec
mov
addr16
notl
fcmovbe
inc
pop
dec
out
push
call
mov
mov
cmp
adc
jne,pt
xlat
cmp
jb
je
jp
aam
cmp
fst
or
pop
push
inc
xor
lret
mov
repnz
ja
daa
shll
cld
jmp
or
and
int
mov
bswap
fwait
imul
pop
cmpsb
jge
loope
imul
fisttps
ds
mov
ret
dec
or
push
sub
shll
mov
xor
mov
push
shrb
push
sbb
fdivrl
sbb
mov
lcall
xchg
fistl
neg
xor
imul
inc
add
adc
cmpsl
xchg
mov
and
xchg
ficoml
pop
xchg
xor
mov
out
fdivl
xchg
aas
cld
scas
jmp
and
and
mov
pop
cvtps2pd
ret
jge
pop
push
fldcw
es
lds
xchg
jmp
std
xchg
lret
popf
movsl
pop
fwait
in
fnsave
leave
test
loop
andb
pop
dec
mov
rclb
imul
fbstp
pop
js
sbb
pushf
adc
sbb
pop
roll
add
aad
rcrl
aas
sti
mov
lahf
nop
xchg
lret
loop
or
mov
jp
lret
xor
movsb
jno
hlt
out
ficompl
cmp
push
xchg
imul
lods
push
xchg
daa
sbb
es
mov
jg
repz
lds
lods
jecxz
in
inc
mov
mov
lock
lods
scas
clc
jge
jnp
pop
or
lret
dec
mov
pop
jg
leave
outsb
mov
insb
sarb
cmp
pop
outsb
stc
into
pop
push
out
sbb
xor
mov
mov
int
sbb
popf
cmp
daa
outsl
xchg
adc
fisubs
xor
stos
sub
lret
ja
cmpsb
or
outsb
les
push
fld
add
xchg
xchg
pop
or
dec
adc
out
lahf
fwait
xchg
movsb
sbb
mov
jno
inc
es
and
int3
sti
mov
adcb
mov
mov
cmp
mov
insl
rolb
std
inc
aad
pop
clc
add
xchg
xchg
adc
push
push
push
addr16
push
jle
sahf
xor
pop
fwait
xor
lock
pop
cmp
int3
les
cmpsb
hlt
fistl
hlt
fwait
sub
stos
addr16
adc
gs
mov
ljmp
loopne
inc
jle
cli
sbb
stc
xlat
sarb
jo
pop
enter
mov
addl
decl
clc
mov
xor
lds
sbb
movsl
shl
fdivrs
jecxz
popa
lods
cmp
js
inc
mov
mov
hlt
ret
test
jo
int
cmp
and
xchg
test
shll
inc
movsl
fs
add
pop
jae
lock
lret
push
sahf
scas
mov
mov
stos
sbb
out
push
adc
rcl
dec
popf
fs
jg
leave
test
xor
sti
jmp
mov
outsb
and
and
stc
mov
or
aas
push
lods
dec
fistpll
fists
fs
outsb
in
xchg
es
repnz
bound
fimuls
xor
shlb
imul
inc
shr
subl
mov
hlt
or
sahf
push
hlt
movsl
add
dec
mov
mov
arpl
fnstsw
mov
xor
frstor
repnz
adc
inc
or
fadd
aas
push
ljmp
int3
popf
pop
in
jns
pushl
inc
bound
and
and
hlt
dec
add
dec
and
dec
out
iret
cld
or
rolb
fsubr
outsb
cmp
lds
imul
mov
xchg
dec
daa
out
add
inc
fxch
out
inc
sub
xchg
ljmp
mov
outsl
cli
cli
ret
orb
movl
xchg
pop
lret
test
or
and
xor
pop
mov
xchg
jg
aaa
scas
rolb
pop
pop
add
popf
and
outsb
or
inc
ss
js
pop
jae
decb
inc
popa
push
push
add
hlt
mov
jge
or
or
jbe
leave
loope
add
mov
clc
xchg
insb
add
add
jbe
cltd
add
or
dec
and
pop
ja
rcrb
inc
or
aam
mov
pusha
orb
test
and
ret
pop
out
inc
fsubrp
popf
shrl
sbb
or
lods
movsl
inc
inc
loopne
aad
push
repnz
sbb
push
sub
adc
xchg
orb
lahf
mov
or
movsl
aas
loopne
dec
ja
out
xlat
push
imul
and
sub
sbb
ljmp
pop
lods
adcb
popa
fs
pop
mov
stc
push
pop
popf
pop
dec
clc
and
nop
je
jge
movsb
fwait
daa
and
sbb
pop
jbe
out
fsubs
push
jnp
xchg
push
pop
repz
dec
arpl
stc
pop
xor
push
adc
cld
addr16
lahf
mov
mov
adc
ljmp
mov
pop
push
pop
int3
xor
cmp
mov
shlb
mov
jle
xor
push
jle
stos
push
test
add
mov
test
mov
mov
es
xorl
cli
sti
add
das
mov
push
sub
xchg
ljmp
sub
fldenv
daa
xor
adc
mov
mov
mov
test
imul
xchg
mov
dec
cmp
pop
mov
mov
out
lea
jg
rcr
mov
xor
icebp
test
xchg
push
mov
xor
mov
adc
out
xor
and
mov
mov
xor
jb
lret
and
and
dec
shrb
xchg
and
push
imul
daa
adc
lret
sbb
lret
cmc
xor
dec
pusha
sub
xchg
fisttpl
cmp
pusha
mov
jno
sub
iret
pop
stos
xchg
jg
xorl
popf
dec
pop
into
and
or
and
aas
loop
movsl
shll
aad
cmp
push
lret
push
cmp
fsubl
or
jo
xchg
add
mov
push
add
jmp
cld
rcl
mov
icebp
ror
sbb
jg
mov
dec
into
lret
cmp
test
xchg
jbe
jo
push
inc
adc
and
or
jecxz
mov
iret
pop
sub
xor
in
cmpsb
sub
sbb
mov
ss
xor
pop
push
xor
insb
jno
and
andb
loopne
das
out
mov
mov
lahf
and
xchg
ljmp
mov
jns
push
cbtw
cmp
cmpsb
int
sbb
arpl
decb
loope
push
mov
lock
lcall
movsl
outsb
mov
shlb
sbb
aaa
mov
mov
cmpsb
and
test
xchg
xor
ss
stos
inc
pop
add
inc
and
imul
cwtl
pop
repz
sbb
sahf
test
fistpl
imul
xlat
call
push
repnz
cmc
jp
cmc
fmuls
or
stos
xor
mov
int3
dec
aas
add
mov
mov
inc
test
ja
out
aad
lods
daa
int
out
dec
sbb
xlat
add
out
xchg
aas
into
xor
adc
adc
cmpsb
aad
pop
mov
in
ret
sbb
inc
inc
cmp
in
mov
clc
xor
dec
addr16
push
xor
xchg
fmuls
or
jns
add
adc
stos
push
push
in
adc
fsubr
and
jae
pushf
loopne
xchg
push
cmp
pushf
cmp
pop
xor
fldt
mov
popf
jp
inc
test
inc
jns
scas
insb
mov
sbb
out
pushf
sbb
jnp
jne
adc
test
mov
ss
sub
bound
xor
pushf
int
cmp
in
xor
ret
inc
adc
scas
add
lods
sub
dec
cmp
addl
sub
shl
xor
pop
and
stos
movb
into
mov
dec
in
lea
pop
cs
and
shlb
sub
pusha
and
enter
inc
shrl
out
in
inc
dec
jmp
xor
clc
mov
adc
or
nop
push
mov
cltd
and
cmp
int
xor
arpl
and
cmp
call
cmc
fsubp
loopne
scas
sbb
jl
popa
jl
xchg
push
cmp
lahf
fwait
pop
adc
add
out
sub
xchg
xchg
dec
fsubrs
mov
inc
stc
andb
and
ficompl
jbe
and
sahf
lods
jae
stc
or
icebp
fistpl
mov
sub
mov
pusha
jnp
mov
push
and
or
out
fcompp
sbb
fwait
ja
gs
mov
sbb
fildll
shr
push
xor
ret
add
mov
aad
push
pop
jp
movsb
fdivrl
mov
xchg
popl
push
xchg
inc
adc
test
push
fidivl
pop
sub
cltd
fwait
and
xor
and
dec
enter
icebp
ret
loopne
shl
inc
int
mov
cmp
mov
fwait
push
cwtl
pop
hlt
dec
arpl
iret
iret
out
sub
dec
fs
jb
pop
jnp
mov
push
repz
add
push
lcall
inc
inc
enter
imulb
enter
js
dec
cmp
jne
sub
sbb
mull
jle
xor
mov
rcrb
mull
mov
jns
inc
cmpl
lock
es
inc
push
rcl
jno
les
adc
into
mov
push
dec
movsl
in
or
pop
mov
lea
je
mov
mov
test
adc
int3
cmp
and
xor
and
bswap
jp
xor
ficomps
pop
and
mov
xor
cmp
fdivs
push
lret
rol
test
rdmsr
xor
es
pop
imul
leave
jecxz
stos
adc
dec
cmc
xor
inc
fdivrp
std
pushf
xchg
shrb
cli
pop
add
mov
xor
cmp
loope
fistl
add
int
mov
jg
pop
shll
in
rcrl
shlb
cmp
test
push
pop
nop
xor
les
adc
jmp
shll
inc
and
pop
add
into
jge
cmp
xchg
popf
aam
mov
sahf
xchg
loopne
test
sbb
sub
dec
pusha
sub
sub
xor
xor
outsb
fsts
jnp
enter
and
fdivrl
imul
add
sbb
push
mov
cmc
add
mov
pusha
pop
fiaddl
gs
mov
cld
sbb
xor
scas
aaa
mov
jns
sub
mov
insl
into
add
jecxz
idivb
jle
cmp
or
repz
pop
arpl
addr16
ljmp
andb
sbb
addr16
jecxz
mov
jns
add
stc
lahf
jno
xchg
cwtl
out
pusha
mov
and
jg
jns
and
leave
sbb
in
mov
fwait
xchg
test
aam
data16
insl
mov
aaa
leave
push
push
mov
adc
into
mov
test
push
test
cs
mov
orb
mov
xor
movsl
mov
mov
cmp
cltd
call
inc
inc
pop
adc
sbb
aam
scas
cmc
or
sarb
nop
adc
lret
mov
repz
popf
stos
sub
lods
inc
sbb
xchg
cmp
popf
jge
adc
push
add
xchg
lahf
mov
fisubrl
pop
push
loope
lock
mov
sqrtps
inc
insb
pop
xchg
and
clc
rorl
in
int
mov
lret
xor
mov
call
mov
and
dec
xor
ret
cmp
movsl
xchg
imul
sub
mov
shl
arpl
mov
cmp
push
daa
ds
cltd
fisubrl
data16
out
int3
jge
in
imul
mov
in
cmc
jo
setns
dec
inc
add
sti
jnp
jne
xor
jle
mov
outsl
adc
inc
and
int3
push
dec
or
data16
pop
pop
mov
mov
insl
lea
and
loop,pn
dec
and
sbb
hlt
jmp
dec
push
jmp
rol
sbb
inc
jae
call
lahf
ret
stos
jnp
call
leave
xchg
sti
jne
mov
mov
mov
push
xchg
out
in
dec
and
stc
call
sub
jle
pop
cmpsl
adc
enter
loope
inc
movsb
outsb
cmpsl
popa
imul
inc
mov
into
cs
pop
icebp
add
test
arpl
xor
add
mov
push
inc
mov
cmp
lds
mov
popf
das
fcmovbe
mov
and
mov
fcmovnbe
lock
pop
mov
and
leave
inc
lds
adc
ds
loopne
adc
fmulp
scas
ret
cmp
push
or
sahf
mov
mov
sub
sbb
or
lock
test
lods
repnz
ret
arpl
cmp
filds
jmp
filds
pop
icebp
daa
dec
xchg
xorl
inc
xchg
mov
inc
adc
sub
into
mulb
mov
lock
sub
arpl
pop
lea
xor
ret
cltd
enter
in
mov
jg
aam
lret
out
ret
movsl
xchg
mov
jae
cmp
sbbb
fisubrl
adc
leave
mov
cmp
loopne
fxam
out
shrb
enter
mov
mov
data16
pop
stos
mov
out
rcr
pop
jle
xor
xor
jg
mov
pop
in
sub
mov
push
pop
cmp
movsb
orl
and
xchg
leave
mov
sbb
pop
js
mov
call
cmp
xchg
ret
movsl
xchg
push
sbb
adc
outsl
pop
repz
jb
int3
lret
inc
mov
sbb
push
lret
adc
addb
fdivl
fxch
and
inc
cmpsl
imul
ret
loope
fnstenv
jb
xor
out
and
jge
sbb
xor
andb
and
sub
es
test
dec
pop
mov
movsl
and
pop
shr
push
sub
out
add
xchg
gs
fs
test
movlps
mov
push
xlat
xchg
or
jecxz
pushf
mov
push
ret
xor
pop
cmp
lds
rolb
decb
push
fwait
orl
outsb
addl
adc
shll
imul
pop
inc
mov
cmc
popw
lret
pop
xchg
and
mov
inc
out
add
ret
push
cmp
sarl
icebp
cmp
dec
jo
or
addr16
cmp
pop
or
push
cmp
lock
xorl
in
cmpsl
into
dec
int
dec
cmp
jmp
mov
cmc
ds
rcr
int
add
push
mov
xorb
das
aaa
inc
ret
or
pusha
push
out
pop
adc
sub
bound
pushf
stc
pop
jae,pt
xchg
sbb
adc
and
cmp
add
sbb
add
mov
dec
aam
pop
insb
add
and
jb
mov
push
mov
test
sti
sbb
lods
xchg
sbb
pushf
mov
aam
sbb
sub
iret
mov
out
sbb
js
cmpsb
sbb
rep
jb
add
pop
pushf
in
jbe
loope
dec
and
mov
leave
rolb
xchg
mov
lret
enter
popfw
jno
adc
lret
jbe
pop
mov
or
test
xchg
test
and
mov
xchg
mov
in
dec
jne
pop
insb
inc
cli
mov
imul
adc
std
out
jae
out
test
cmc
loopne
in
das
mov
or
shr
and
jecxz
les
arpl
stos
mov
xor
sub
hlt
dec
test
adc
push
inc
sub
mov
jp
add
sub
ret
arpl
mov
push
lds
add
push
ret
les
aaa
sbb
mov
dec
sub
and
popa
add
jns
es
mov
test
lea
adcb
rclb
fstpl
inc
adc
daa
jne
mov
jge
iret
or
int3
mov
and
and
adc
js
sahf
fldpi
and
sahf
es
lods
sbb
dec
pop
mov
xor
addr16
sub
fildl
push
idivb
cmc
add
enter
push
push
jl
icebp
or
int
and
sbb
add
sub
ret
dec
lds
fisttpll
dec
mov
mov
ljmp
xchg
fldenv
lcall
jno
insl
pop
movsl
xchg
movsl
clc
sbb
and
in
mov
or
mov
pop
js
pusha
icebp
dec
xlat
in
cmpsl
jo
pop
fchs
cli
dec
inc
les
xchg
in
loop
stc
roll
stc
pop
imul
jnp
adc
shrl
mov
jle
fimull
nop
int
js
in
movsb
xlat
shl
inc
mov
sti
dec
push
movsl
loopne,pt
pop
push
add
adc
inc
lods
fwait
loopne
imul
fisubrl
mov
insl
dec
imul
dec
out
and
sub
bound
or
xor
into
js
outsb
repz
cmp
ds
paddsw
mov
dec
ret
xor
loopne
dec
fcomp
shll
cmp
subl
movsb
cli
push
push
call
xchg
das
test
mov
sbb
lret
shll
fildl
pop
adc
popl
outsb
dec
imul
jo
push
cmp
mov
outsb
ret
adc
dec
leave
dec
movsl
sbb
in
test
aas
mov
and
sub
std
adc
int3
inc
xor
inc
adc
and
mov
rcrl
adc
popf
lcall
add
aam
mov
dec
in
sbb
js
xchg
stos
fsts
popf
and
jge
cmp
sarl
fsubl
repz
sub
test
imul
push
push
push
pusha
add
fdivrs
jbe
inc
das
pop
push
mov
mov
scas
lret
or
adc
pop
mov
in
push
ss
repz
test
jae
cs
push
push
mov
shrl
fistpl
sub
sbb
pop
dec
sbb
ljmp
stos
das
cmp
adc
movsb
into
inc
and
rcrl
or
sbb
popa
push
mov
adc
push
jae
out
xchg
push
or
push
pushf
test
sbb
negl
or
inc
rcrb
outsb
cmp
mov
les
cmp
cs
xchg
mov
mov
leave
cmp
mov
mov
push
sub
sbb
insb
jecxz
les
enter
and
imul
jns
push
mov
fwait
gs
xor
mov
or
xchg
add
fucomp
nop
shlb
and
mov
xchg
jp
ds
stos
inc
int
cld
mov
mov
mov
mov
jle
inc
sarl
xor
cltd
jp
incb
xchg
pop
add
and
clc
cmpsb
jmp
xor
xor
push
int
dec
inc
bound
rcr
loop
ror
mov
call
sahf
in
into
push
dec
lods
add
cmpsl
outsb
ja
call
cmpsb
dec
bound
dec
sub
xor
cmp
and
out
leave
idivb
decb
add
lods
lcall
sahf
jp
rcr
insb
lods
jg
ds
nop
cmc
add
push
jp
add
or
mov
fidivs
add
dec
popf
add
push
pop
adc
sti
sti
cmp
ret
push
dec
xchg
rorl
or
push
mov
nop
inc
xchg
jo
or
cmp
aaa
jns,pn
jns
fstpl
adc
nop
inc
js
arpl
popf
hlt
inc
mov
mov
stc
inc
fadds
ret
ds
xchg
xchg
test
hlt
mov
dec
jg
jg
dec
icebp
insl
xor
out
pushf
fldl
scas
or
inc
aas
ja
fistps
add
es
lea
imul
cmp
aam
add
mov
inc
pop
mov
mov
jns
xchg
inc
incl
jg
js
test
jae
mov
fcoml
and
and
call
cmp
andps
add
dec
adc
add
xor
xchg
xor
fstps
in
pop
mov
jae
mov
shlb
into
jo
imul
loope
sub
jl
pop
cmp
cmp
imul
dec
inc
nop
mov
mov
addr16
repnz
popa
pop
ret
jle
push
and
fst
insl
outsb
push
js
push
stos
imul
inc
insb
cs
push
fidivs
pop
or
imul
mov
std
addb
mov
jb
jbe
inc
pop
lods
mov
testl
push
cli
loop
insl
mov
or
pop
pushf
call
dec
loopne
pushf
push
jecxz
ss
mov
shlb
daa
fisttpl
inc
dec
fsubl
cmp
int
jge
jo
jle
in
sbb
and
imul
push
jg
cmc
pop
scas
push
aad
mov
fdivrl
divl
inc
or
int3
pop
mov
iret
orb
add
dec
in
fnstenv
mov
push
mov
pop
dec
mov
fdivrp
xor
lcall
stos
and
pop
orb
cld
aas
xchg
ss
push
inc
loopne
sub
lcall
mov
and
jle
test
leave
mov
jp
imul
fidivrl
mov
inc
in
outsb
push
dec
dec
cmp
mov
mov
les
out
inc
into
pop
jecxz
sbb
hlt
jp
ja
or
loope
add
fcmovb
xlat
imulb
lods
sbb
fcoml
lret
pop
fcmove
cmp
aaa
ja
add
test
enter
sbb
mov
les
lock
mov
inc
mov
mov
pushf
into
push
iret
idiv
int
push
push
sbb
in
sub
jno
and
jne
rclb
inc
inc
xchg
jge
pop
test
inc
sub
in
fs
jo
stos
sbb
dec
mov
jb
gs
jae
stos
mov
test
inc
cli
repz
xchg
sbb
sub
mov
pop
test
sahf
jae
jae
fwait
push
jo
stc
hlt
sub
xchg
or
xchg
cmc
pop
mov
rclb
out
push
fs
cmpsl
jecxz
outsb
cmp
imul
and
sbb
mov
sbbl
out
fnstcw
jle
mov
xor
mov
push
mov
shll
jg
shll
fcmovnb
and
lea
arpl
sub
pop
mov
push
in
pusha
dec
and
cmp
or
xchg
inc
xchg
jg
xor
and
jmp
pop
idivl
pop
sbb
mov
popa
adc
push
or
push
cwtl
cmp
out
mov
fwait
stc
hlt
push
jbe
aam
pop
gs
fisubrl
push
cmc
cmp
adc
or
or
je
dec
stc
push
sub
push
shlb
incb
call
fnstsw
mov
jecxz
aad
nop
in
cld
js
and
sub
xchg
and
fs
adc
or
fsts
insb
jle
pop
and
mov
fcomps
xchg
xchg
jne
ja
or
lods
add
add
loop
scas
mov
daa
push
cli
mov
out
mov
scas
jge
or
adc
lock
movsl
mov
mov
into
cmp
mov
pop
popa
mov
dec
movsb
aad
pop
lock
mov
mov
push
inc
pop
rcrb
nop
ret
cld
leave
je
dec
scas
fidivrl
push
xchg
fwait
out
jecxz
push
ja
jl
push
fs
xchg
aad
inc
mov
aas
push
in
data16
mov
loopne
ja
jo
push
xor
push
fldenv
ljmp
dec
mov
sub
aam
leave
push
test
push
pop
inc
and
out
in
mov
aam
sbb
in
xor
aaa
mov
sub
fisubs
push
lret
enter
aad
mov
les
je
mov
dec
int
repz
or
insl
xor
xchg
xchg
mov
or
ss
lods
mov
dec
mov
and
mov
lock
and
xor
insl
push
cli
movhps
cmpsl
dec
mov
ds
test
cmp
mov
cmpsb
jns
sbb
fwait
inc
push
adc
adc
push
fsts
test
lahf
sbb
jmp
call
mov
push
jecxz
sti
jo
ror
movsb
scas
push
inc
mov
leave
not
pop
xchg
testb
clc
push
dec
or
scas
out
movsb
mov
cwtl
daa
mov
cmpsl
mov
fsubs
mov
out
fsts
insb
cmpsb
fists
test
push
aaa
arpl
popa
aas
les
in
repnz
stos
enter
mov
popf
push
loope
jne
lock
xor
mov
mov
fs
sbb
andl
mov
push
adc
jmp
scas
jae
xor
sbb
push
xlat
lea
sub
mov
inc
sbb
and
pusha
iret
nop
testb
push
jl
push
out
cmp
ret
mov
or
dec
adc
cmp
fwait
or
add
cltd
jmp
repnz
outsb
leave
sarb
cmp
js
aaa
xor
int
repnz
lods
pop
lods
icebp
mov
xor
nop
cmp
adc
adc
hlt
fistpl
fs
sub
sarl
dec
dec
dec
sbb
xor
xchg
in
cltd
or
jl
and
pop
or
and
cltd
xorl
push
es
sbb
mov
lods
movsl
mov
fbstp
insl
add
bswap
push
mov
aam
push
xchg
test
repz
sub
pop
adc
repnz
mov
popf
mov
arpl
mov
ret
sbb
dec
push
xchg
loope
movsb
push
push
rolb
xor
in
or
into
dec
xchg
mov
xchg
fcomi
jb
stos
stc
adc
and
xor
lods
out
inc
xchg
jo
outsb
ficomps
xor
imul
push
dec
sub
xchg
rol
lds
test
std
push
je
insb
xchg
loope
sbb
mov
xchg
mov
or
cld
adc
fwait
xchg
enter
je
xor
negl
push
popf
icebp
test
mov
xchg
mov
and
jae
jmp
cs
sbb
inc
add
into
ja
sub
in
sub
push
enter
xor
mov
jl
sbb
icebp
data16
daa
sbb
je
mov
mov
or
je
dec
ljmp
xor
xchg
mov
jnp
inc
les
shlb
fisubrl
cmp
fisttpll
and
lahf
int3
movsl
inc
loopne
sub
das
xchg
negl
inc
or
arpl
inc
data16
or
adc
fwait
dec
and
xchg
pop
mov
movsb
push
jmp
xor
into
loopne
pop
lods
test
fmulp
test
addr16
in
enter
clc
pop
adc
lock
sbb
adc
sti
pop
jb
inc
dec
mov
fistpl
cmp
cmpsb
sub
out
clc
push
cmpsb
lret
adc
bound
cmp
rolb
icebp
lret
dec
sub
sbb
fsub
or
or
sarb
add
in
cmpsl
mov
xchg
jmp
aaa
popf
ds
in
lea
xor
ficomps
inc
imul
outsb
daa
dec
lret
or
shlb
pop
aad
lcall
andl
outsl
loop
in
fisubrl
or
jmp
fiadds
aad
pop
jmp
scas
sbb
ret
idiv
cmp
pusha
leave
leave
sbb
inc
shl
jns
xor
shll
add
jmp
test
inc
adc
scas
jae
ja
cmp
enter
arpl
inc
mov
adc
ffree
ljmp
aaa
imul
scas
jl
add
pop
and
imul
fmulp
mov
fbld
mov
xor
scas
adc
fstps
xchg
inc
mov
gs
cltd
add
int
and
mov
subl
outsl
stc
mulb
xor
in
xchg
fcmovnb
or
jb
add
call
outsb
adcb
repz
cmp
pop
xchg
imul
insb
jle
jp
pop
cmpsl
xorl
les
ljmp
adc
movsl
outsb
cmpsl
fs
shl
xchg
push
stos
aaa
lcall
out
out
test
lret
xor
mov
cmp
lods
mov
pop
inc
out
sbb
daa
pop
test
and
stos
dec
mov
mov
enter
icebp
push
sbb
test
add
push
dec
dec
mov
pop
cmpsl
pop
popf
push
pop
and
push
jo
ja
jmp
test
jae
cwtl
pop
data16
stos
cmpl
cmp
mov
lea
test
stc
jl
dec
sub
das
lock
inc
cmp
or
pop
outsb
mov
cmpsl
adc
inc
cmpsl
arpl
fdivrl
adc
ret
jmp
pop
xchg
sbb
pushf
je
mov
dec
and
in
sarl
or
movsl
mov
xlat
sbb
xchg
in
inc
subl
mov
and
mov
mov
xchg
jb
cli
xchg
cmp
xor
inc
stc
add
fdivr
pop
jmp
and
push
and
push
mov
jecxz
clc
or
neg
adc
lret
fstps
loop
lret
dec
mov
push
call
repz
fstpl
shll
aas
mov
nop
pop
popa
push
fs
push
push
ja
sbb
add
fldenv
cltd
in
add
xlat
add
outsl
mov
jle
cwtl
adc
xlat
je
inc
test
cli
fcomip
dec
mov
adc
data16
lods
std
adc
xchg
aaa
enter
dec
mov
and
xchg
jne
ja
in
xchg
lods
jns
mov
test
cmpsl
das
in
out
stos
push
in
pop
pusha
cmp
sub
das
ja
repz
lods
shl
mov
add
xchg
dec
je
mov
mov
xor
fnstenv
push
jmp
popa
test
xchg
jl
sbb
mov
mov
jbe
xchg
orb
jnp
popa
repz
mov
mov
sbb
xchg
dec
cmc
aad
fmull
pop
loopne
mov
pusha
aad
scas
mov
pop
call
out
std
divb
test
lds
in
adc
test
dec
cmp
dec
loope
add
or
push
adc
cmpsl
outsb
scas
and
jge
in
jge
xchg
les
add
js
bound
xor
rorl
sub
sbb
inc
andl
cwtl
fildll
cmpsb
fists
lahf
outsl
mov
push
or
adc
in
jle
dec
int3
jne
insb
sub
adc
cmpsb
mov
mov
in
sbb
testb
mul
xchg
cmp
fsubr
inc
cmpsb
inc
or
xchg
sbb
ds
cmpsb
pop
int
cmp
ret
sub
bound
ja
xchg
inc
ja
in
out
sbb
inc
mov
cmp
test
inc
cmp
xor
fwait
movsb
test
or
xchg
hlt
pop
lret
nop
mov
clc
andl
icebp
jo
or
aas
ds
push
mov
icebp
mov
faddl
cmp
icebp
fiadds
push
xchg
jnp
cwtl
xchg
call
push
jbe
arpl
loopne
pmulhuw
insl
inc
mov
das
pop
rcl
std
ljmp
mov
inc
lea
mov
jecxz
lret
xchg
arpl
jnp
les
xchg
push
loop
inc
mov
out
and
push
xchg
into
sub
loope
inc
mov
jne
sbb
add
mov
jno
loope
inc
aad
sub
mov
bound
jg
lods
sbb
aad
les
and
sub
shll
roll
rclb
mov
or
loope
das
xor
push
adc
pop
push
stos
aam
mov
inc
jae
xchg
mov
adc
add
imul
add
dec
lock
pop
push
jbe
aam
and
cmp
cmp
push
mov
aas
loope
aam
lock
dec
ds
dec
xor
pop
xor
cmc
jmp
cmp
aas
pop
sbbl
shrl
aam
inc
xchg
add
repnz
repnz
outsl
xor
andl
mov
cmp
or
pop
jecxz
shlb
add
movsb
or
gs
arpl
sub
fcmovne
roll
lret
push
xlat
inc
lods
xchg
fidivrs
dec
push
push
push
push
sbb
and
sbb
add
cli
jae
fwait
jmp
js
jecxz
jno
xchg
in
fidivl
rcrb
mov
sbb
pop
push
test
mov
inc
jmp
aad
lea
cmc
inc
adc
or
add
jmp
jmp
in
mov
xchg
js
jmp
mov
aaa
sbb
enter
mov
call
mov
xchg
into
xlat
xchg
in
fldt
adc
adc
jnp
adc
xchg
push
or
nop
in
lret
lods
cmp
mov
xor
cs
test
mov
sbb
icebp
mov
sub
je
push
sbb
loopne
bound
fwait
nop
outsb
jl
jge
jae
jne
jnp
xor
mov
mov
cmp
jae
add
test
popf
add
mov
sbb
pop
leave
test
jmp
jmp
test
fsubrp
in
jnp
sbb
mov
arpl
and
loopne
out
arpl
mov
jmp
hlt
rcrb
xor
adc
in
mov
xchg
test
jo
inc
xchg
push
sahf
aad
ja
or
xor
cs
jne
fnstenv
pop
mov
or
leave
adc
jno
test
js
addl
loope
mov
das
pop
sti
call
int
mov
dec
out
sbb
xor
test
aaa
pop
stos
popa
and
movsb
adc
cmp
in
in
cmp
call
push
mov
and
cmp
aad
dec
inc
mov
push
ljmp
test
nop
mov
adc
enter
sbb
popa
hlt
sarb
mov
loope
mov
mov
adc
insb
aas
dec
dec
cmp
in
or
xor
mov
imul
sub
jmp
dec
inc
nop
lret
shrb
fsubs
mov
lret
push
sub
push
xchg
out
and
inc
js
int
mov
dec
icebp
pusha
fld1
cmp
jbe
push
icebp
cwtl
inc
sbb
mov
vandps
and
jecxz
out
mov
je
nop
loope
dec
ror
popa
mov
fsubl
sub
cmpl
cli
pop
lret
jl
in
pop
jecxz
adc
lds
xor
sbb
jl
rcl
xchg
imul
push
ret
pop
push
jmp
loopne
cmp
xlat
pop
adcb
jo
rcl
mov
sub
jp
in
push
stc
mov
sahf
adc
dec
movsb
jae
in
inc
popl
stos
jl
pop
ja
push
pusha
cmp
or
shl
and
loopne
cmp
fs
ret
cmp
mov
mov
rclb
fstpt
mov
sub
repnz
daa
bound
pusha
mov
pop
sub
pop
mov
imul
pop
insl
pop
aam
cmp
and
ficoms
pop
and
or
push
dec
add
inc
cmpsb
push
ret
push
cwtl
imul
mov
movsb
cmp
xchg
mov
lods
push
inc
out
adc
int
cmpsl
mov
shlb
mov
imul
and
in
mov
pop
lods
and
sarl
sub
push
ror
dec
dec
sahf
push
cmp
push
movl
xchg
fdivs
lret
scas
sbb
mov
cli
or
gs
test
roll
ret
or
nop
ljmp
dec
dec
jbe
fdiv
jns
in
xchg
jno
add
sbb
sbb
push
mov
test
mov
adc
and
cmp
ficoml
push
inc
sbb
in
adc
jb
clc
xchg
test
pop
repnz
test
mov
pop
xor
jno
pushf
mov
mov
lods
sbb
jmp
int
test
enter
sahf
loop
mov
xor
iret
cmp
jle
jl
push
add
add
ja
in
cmc
pop
jns
add
pusha
fsts
push
punpckhbw
or
stos
fdivl
push
out
imul
push
mov
das
jmp
fwait
inc
fs
jo
fnstenv
dec
cmpb
adc
sbb
test
mov
shlb
or
mov
shl
addl
ljmp
jbe
add
jbe
insb
movsb
cmp
pop
cmp
cmc
xor
sbb
popa
xchg
dec
inc
sbb
jg
cmp
sarb
mov
movsl
fs
stos
inc
cmp
jmp
push
pop
jle,pn
xor
hlt
lds
mov
lea
push
jo
dec
xchg
int3
and
pop
or
lds
leave
adcb
xor
fiaddl
and
mov
mov
hlt
inc
mov
sub
xchg
add
pop
negl
or
push
call
inc
stos
sub
clc
pop
sub
aad
repz
or
dec
jbe
lods
push
sbb
mov
sub
lock
mov
dec
push
dec
pop
cmp
mov
repnz
ret
dec
fistpll
xlat
jo
arpl
sbb
ret
jb
jb
cmpsb
das
inc
mov
loope
test
jmp
xchg
stc
mov
mov
sbb
ds
pop
lret
inc
fwait
es
repnz
xor
stos
stos
je
imul
or
pop
inc
push
ret
es
jmp
pop
push
repz
pop
stos
aam
mov
dec
mov
cmp
mov
call
out
incl
test
fiadds
rcr
cwtl
or
cmp
aas
jle
ret
adc
push
cmc
fs
jno
clc
xor
mov
fildll
add
cmp
out
stos
mov
gs
xor
imul
stos
adc
add
cmc
sarb
subl
ja
call
outsb
ss
outsl
jo
loopne
mov
mov
adc
ja
cwtl
fistps
std
les
cmpb
popa
insb
cmpsl
lea
sub
mov
out
in
daa
call
pop
cmp
in
push
cli
enter
ja
pop
or
std
inc
int3
fs
pop
subb
mov
insb
out
jmp
jns
push
ljmp
insl
aas
jae
lea
idiv
pop
icebp
push
inc
pushf
lea
test
sbb
enter
hlt
pusha
loop
cmc
adc
out
jmp
jge
mov
jnp
xor
push
mov
pop
imul
mov
std
mov
mov
stc
mov
mov
mov
adc
imul
ljmp
push
or
jle
mov
aaa
pop
or
cmp
popl
sbb
lahf
dec
cmp
testb
add
aam
ljmp
xor
fimull
inc
pop
mov
and
clc
out
push
mov
or
addr16
cmp
loopne
add
mov
clc
cmp
and
inc
pushf
dec
pop
sbb
addr16
mov
test
jle
xor
or
inc
iret
xor
insb
sbb
orl
sub
cmc
pop
push
xchg
xor
mov
or
push
aaa
lcall
mov
adc
inc
addr16
add
test
imul
dec
popf
push
andl
pop
andb
pushf
aaa
fists
or
mov
mov
cld
pop
lea
push
lods
loope
fildl
push
xchg
inc
cmp
shlb
iret
ret
cmp
lods
mov
in
ror
nop
mov
sbb
pop
lock
pop
ss
push
sbb
cmp
aam
jl
add
cmpl
xchg
jnp
ja
movlps
inc
fsubl
stc
int
subb
cmp
xor
sub
xchg
inc
out
shrb
aam
sub
mov
add
sti
hlt
out
add
mov
fadd
mov
pop
rorb
sub
dec
dec
cmovb
or
je
leave
push
loope
fistps
pop
or
sbbl
scas
out
fcmovb
inc
jl
push
sbb
mov
dec
stos
push
add
jmp
or
mov
fsubrp
test
dec
jb
jb
push
inc
jge
jmp
xchg
pusha
adc
adc
push
add
and
xchg
push
decl
or
mov
test
imul
push
addr16
or
notl
pusha
daa
mov
or
jbe
mov
add
add
insb
ds
inc
test
xchg
mov
lea
pop
sub
xor
fs
xor
cmpsb
mov
ljmp
mov
mov
pop
popa
pop
cmpsb
jmp
cmp
mov
mov
dec
jno
jae
jno
cmp
adc
imul
xlat
movsb
nop
lahf
mov
xchg
repz
adc
das
testb
add
mov
scas
lahf
xchg
push
mov
pop
fldl
lods
push
inc
icebp
ds
shll
imul
sub
mov
pop
mov
icebp
movsb
cs
inc
fs
scas
clc
popa
sbb
xchg
sarl
sub
sbb
fstps
push
mov
mov
cltd
aas
fnstsw
inc
fildll
and
ja
out
ljmp
out
xor
xchg
int
inc
js
sub
lds
push
out
dec
leave
movsl
out
repz
aad
or
xchg
rorl
and
test
jb
cmc
aad
cmpsl
sub
fsubrl
cmp
test
lret
mov
add
inc
std
fs
mov
pop
and
mov
mov
inc
mov
mov
test
sti
or
les
mov
into
mov
mov
loopne
pop
xchg
add
ficoml
mov
rcll
xchg
pop
repz
and
sbb
std
aaa
xchg
xchg
inc
or
into
cmp
jmp
push
iret
in
mov
iret
movsl
lods
inc
cmpsl
jle
and
dec
lds
sub
cmp
xchg
sti
cmp
jecxz
std
push
icebp
or
push
sub
nop
jl
dec
pop
out
mov
inc
imul
or
movsl
lds
mov
inc
sahf
out
dec
in
inc
lea
mov
jl
lahf
aaa
mov
movsl
xor
inc
int
fimuls
into
and
cmp
cmpsb
std
sahf
rcrl
aaa
and
adc
pop
cmp
scas
sub
sbb
inc
push
xchg
je
mov
jbe
jo
mov
push
inc
testb
imul
testb
popa
ret
and
mov
and
jg
pop
lret
or
mov
xchg
dec
sbb
push
cmp
inc
popf
inc
cmp
fists
push
test
scas
in
pop
call
xchg
out
push
pushf
cmp
repnz
cmp
mov
adc
push
in
addr16
jg
dec
jnp
enter
add
jge
ljmp
mov
sti
cmp
cmpl
pushf
cwtl
ljmp
es
jno
adc
int3
aaa
sub
push
loop
mov
stc
gs
mov
pusha
into
cmp
push
pop
inc
loopne
xor
or
pop
add
push
add
sahf
movsl
loop
addl
mov
or
aas
inc
hlt
lock
out
xor
mov
addr16
and
lock
out
mov
sub
es
lcall
sbb
push
sub
mov
jo
daa
mov
add
mov
je
sbb
dec
movsl
inc
pop
cld
push
dec
dec
imul
jp
movsb
sub
dec
pop
jo
dec
mov
sbb
cmp
in
push
test
test
cmp
add
inc
test
push
clc
adc
dec
and
mov
jno
xchg
js
rcl
in
sbb
jo
dec
hlt
fs
jle
jge
lret
movsl
movsb
dec
pop
aad
xchg
clc
add
das
daa
andl
repnz
test
add
or
sbbl
and
pushf
cmp
mov
push
xor
sarl
shll
push
xchg
adc
or
ds
in
icebp
dec
cwtl
imul
inc
cmp
xchg
inc
xor
adc
inc
lea
push
mov
pop
or
out
and
gs
test
mov
and
pop
vmread
jbe
sti
mov
cs
call
popa
cmpsb
popf
aam
das
push
pop
sbb
das
movsb
pushl
or
ror
or
sarl
mov
xor
sub
andb
or
aad
xor
pop
push
imul
fisttps
movsb
pop
idiv
push
lcall
sti
sub
leave
jecxz
sbb
sbb
and
and
sbb
pop
adc
lods
js
cwtl
lahf
test
test
dec
mov
adc
fidivrs
jno
out
mov
or
hlt
inc
orb
sub
pusha
rorl
stc
inc
in
pop
mov
cwtl
sbb
xchg
push
nop
inc
push
xor
jns
fnstenv
lahf
and
fidivs
stos
icebp
in
push
sahf
cli
mov
stc
fnstenv
hlt
push
cmc
aaa
add
scas
sbb
dec
jecxz
int
shlb
cmp
adc
push
aad
sbb
daa
stos
in
je
sahf
and
xchg
cli
mov
enter
and
or
xor
aad
aad
insl
jb
test
mov
adc
lock
ds
in
adc
xchg
xor
pop
jle
into
fwait
ret
aam
cmp
sbb
mov
push
rorl
mov
jo
out
add
cmp
cmp
add
xchg
mov
lds
das
sbb
leave
add
jns
add
pop
jnp
push
and
inc
aas
test
in
jg
fcompl
iret
or
fidivs
push
fdivs
ja
insb
xor
lods
dec
inc
xchg
daa
mov
cmc
jmp
dec
cmpsl
insl
fsubs
xor
cld
mov
imul
inc
ljmp
movsl
loop
ja
sti
ljmp
int
or
repnz
enter
out
jbe
rol
mov
xchg
fists
popa
xchg
scas
sbb
inc
adc
push
adc
sti
push
add
aas
cmpl
pushf
jno
and
cmp
push
mov
popa
jge
cmp
cltd
ljmp
insb
add
mov
dec
pop
dec
ret
jne
dec
jecxz
add
dec
cmpsl
jge
pop
test
int3
and
xchg
arpl
push
into
xchg
jo
mov
pop
inc
mov
xchg
inc
ja
xor
loope
sbb
mov
adc
pop
cmp
add
test
jge
aad
add
jmp
ljmp
jb
fucomi
loope
out
inc
fwait
pop
cmc
out
ja
mov
sub
jg
in
cmp
arpl
or
jecxz
inc
inc
push
jg
mov
adc
jecxz
lea
cmp
fisttpl
fucom
and
jge
fisttps
or
cmpl
pop
xor
jmp
pop
jnp
inc
pusha
and
xlat
xor
aad
inc
sbb
test
insl
mov
sbb
insl
popf
ja
out
out
adc
or
lock
mov
push
mov
xchg
cmp
inc
and
dec
sub
jb
mov
outsb
ficoml
mov
xchg
loope
mov
xchg
ret
ljmp
insb
pushf
and
loope
int
dec
jle
pop
mov
push
test
push
jp
mov
aad
jge
fiaddl
xchg
pop
mov
pop
hlt
mov
aad
js
mov
mov
pop
sbb
xorl
sub
outsb
jb
mov
pop
dec
mov
xchg
ja
lods
inc
xchg
out
jo
sbb
mov
lea
mov
or
into
xlat
and
or
mov
hlt
and
cmp
push
push
sahf
push
dec
push
xchg
adc
mov
pop
popa
xor
mov
push
xor
pop
inc
jbe
or
es
mov
xchg
bound
push
std
ljmp
jnp
dec
dec
add
jae
xor
xchg
mov
es
cmp
orb
fldenv
xor
adcb
fdiv
ret
inc
insb
imul
jae
ja
rcrb
mov
imul
xchg
cmp
lret
mov
jmp
fstpt
xchg
nop
push
adc
sub
mov
outsl
xor
jne
mov
xor
pop
mov
mov
dec
xchg
aaa
xchg
fstps
jmp
cli
lods
mov
jl
lods
aaa
lods
andl
pop
cwtl
sbb
cwtl
insl
push
mov
sub
add
xchg
test
mov
sub
xchg
pop
cmc
in
aaa
or
mov
ljmp
mov
mov
sti
in
mov
mov
or
stc
sbb
mov
sub
or
xor
testl
xchg
mov
push
or
out
mov
scas
cmp
in
xor
xor
je
lret
lea
pushf
xlat
push
sub
inc
and
cmp
enter
sbb
mov
test
test
xchg
ss
aam
fcmovu
jb
mov
or
stos
test
inc
std
data16
out
and
xor
xor
imul
in
jo
sub
das
cmpsl
imul
js
shll
shll
sub
jb
pop
xchg
mov
lcall
lcall
ret
sbb
movsl
inc
push
outsl
lcall
fwait
outsl
sarl
pusha
dec
fdivrs
aaa
arpl
iret
or
push
fbld
ljmp
mov
push
mov
push
xlat
sbb
xor
xchg
cli
push
lods
pop
arpl
and
imul
inc
out
aas
cmp
dec
xchg
adc
fcompl
dec
cmc
leave
inc
or
shrl
push
push
call
push
xor
rcr
and
shl
add
test
fidivrs
inc
jne
sub
ret
mov
shl
call
out
rolb
and
loopne
inc
lds
xchg
push
call
mov
dec
push
lret
cmp
sti
loopne
xor
cmpsl
in
push
lcall
subb
jns
add
clc
subb
insb
sub
ds
pop
out
sti
push
addr16
lcall
sbb
xor
inc
and
adc
inc
mov
pushf
xor
loope
in
jle
ror
dec
pop
mov
data16
cmp
jae
mov
and
std
xor
sub
jmp
inc
push
ljmp
cmpl
adc
pop
call
and
cmp
mov
add
sbb
sbb
xchg
push
xlat
out
icebp
xchg
neg
sub
sbb
pop
je
lret
cld
dec
insb
popf
je
cmp
test
jmp
insb
add
inc
and
lods
mov
or
cmpl
mov
daa
xorb
and
insb
cmp
in
jns
es
insl
pushf
jle
push
adc
and
inc
pop
push
test
aam
leave
jno
or
cld
mov
push
mov
mov
lea
mov
mov
lods
pusha
dec
jmp
pop
cmc
movsb
jns
divl
in
enter
mov
lret
mov
lods
bound
mov
xor
hlt
inc
cmp
clc
xor
sbb
jo
xchg
mov
in
push
lock
icebp
jns
rorl
ds
mov
xchg
fisubl
pop
jle
lahf
adc
xlat
sar
jecxz
xchg
mov
stc
jecxz
icebp
fwait
pop
frstor
ret
jg
dec
inc
add
mov
std
inc
add
jp
or
or
xchg
adc
orb
cmp
add
cmp
sub
cli
hlt
mov
or
lods
pop
mov
stos
push
fdivr
jmp
pop
movl
adc
addr16
icebp
and
lahf
jle
jl
rcrl
inc
movsb
sar
xchg
sti
and
mov
xchg
cmp
jp
jns
or
fnstcw
mov
cmc
and
aas
mov
inc
sub
push
pusha
xor
into
push
sub
lret
push
or
gs
repnz
inc
or
xlat
push
add
xchg
rcl
popa
rolb
mov
jl
dec
pop
bound
and
repz
jle
jne
jg
mov
sti
clc
rcl
dec
addr16
test
fcompl
jb
push
int
sbb
adc
inc
cmp
jecxz
lds
and
inc
cs
push
cmpsl
xchg
jb
mov
xorl
incb
xor
adc
into
mov
adc
mov
xchg
sbb
xor
call
dec
jno
loop
pop
out
scas
clc
push
addr16
push
adc
inc
inc
sbb
ficomps
gs
jae
in
ljmp
jo
aas
outsl
dec
xor
cmpsb
mov
xor
sub
push
test
adc
pop
jnp
call
sub
xlat
lret
sub
and
es
mov
push
mov
bound
movsl
xor
mov
and
enter
cmp
xor
fbstp
adc
in
int
data16
and
sub
imul
mov
popa
cli
pop
out
mov
mov
ror
lret
push
insb
cld
cmp
out
fisubrl
das
insb
loope
test
mov
imul
sbb
add
or
push
mov
popf
adc
test
jo
test
fildll
jbe
xor
push
cs
mov
arpl
ret
xor
jge
jno
test
lahf
fisttpll
cmp
es
fadds
pop
cmp
sbb
xchg
movsb
jl
pop
into
mov
imul
xor
mov
faddp
inc
xor
cmp
mov
mov
xchg
inc
jl
cmpb
mov
xor
xor
sub
leave
outsl
xor
test
enter
mov
sbb
fists
xor
pop
dec
adc
or
add
push
mov
les
jbe
mov
cld
lock
shrl
arpl
test
ljmp
xor
push
add
mov
sbb
imul
iret
add
xchg
xchg
mov
ljmp
adc
in
lret
aaa
jmp
cld
out
or
imulb
mov
cmpsb
sub
je
outsb
inc
pushf
jmp
jg
xchg
push
mov
or
xchg
adc
lock
call
lret
inc
inc
cmp
test
pop
inc
or
lret
cmp
push
sbb
or
mov
cmp
xchg
mov
lods
mov
jmp
nop
lods
popa
mov
or
repnz
jae
adcb
inc
in
fs
leave
rep
lahf
lds
scas
lcall
loop
xor
mov
mov
call
adc
frstor
icebp
mov
xchg
xchg
fwait
ss
ficomps
mov
out
inc
bound
fcomps
push
cmp
cmpsl
xor
sbb
mov
mov
stos
sub
add
jle
fsubp
pusha
and
or
insl
popf
data16
lret
fstps
mov
int
xchg
aaa
dec
test
xchg
scas
jnp
js
sub
hlt
std
sbb
dec
popa
xchg
fcoms
popl
hlt
xor
mov
mov
cmpsb
mov
in
dec
adc
xchg
js
adc
mulb
lods
mov
jl
xor
test
movsb
cmp
fmuls
push
mov
repnz
pop
shll
mov
xchg
mov
ret
sbb
gs
mov
sub
arpl
push
jno
xchg
lahf
in
mov
dec
xchg
dec
sub
andb
xchg
sbb
adc
xor
mov
rcrb
adc
mov
mov
jo
dec
fadds
ret
imul
and
pop
out
and
or
mov
inc
cld
or
cltd
in
cs
mov
cmp
jmp
fsubr
jae
in
cmp
add
sub
testb
pop
aam
xor
adc
lcall
or
out
fldt
cmp
mov
int
int
or
cmpsl
sub
lods
hlt
out
stc
mov
or
fldcw
jno
pop
fists
dec
lret
mov
or
cmp
std
aam
jl
xor
pusha
mov
cltd
imul
jp
inc
xchg
aam
daa
add
jo
mov
pop
jne
cmp
jae
pop
pop
push
out
aaa
xchg
xchg
xor
mov
ftst
in
jo
cmp
sahf
in
inc
outsb
mov
into
mov
push
mov
inc
and
jno
push
push
dec
push
xchg
es
pop
daa
or
xchg
call
ds
sub
ja
jecxz
mov
mov
pop
iret
sub
fimuls
adc
or
jecxz
daa
and
pushf
imul
dec
shl
lods
mov
fists
fcomps
sbb
lock
es
mov
and
add
loopne
imul
ficoml
fstpt
rol
add
aad
pop
stos
je
push
cltd
push
pop
xchg
nop
dec
mov
shl
mov
stc
notl
mov
push
out
add
ds
hlt
jl
test
sti
and
sarl
fnstenv
divb
icebp
inc
lods
fnstcw
or
jl
repz
cmp
mov
nop
push
jns
lea
dec
ret
jo
mov
sub
xchg
push
addps
pushf
dec
popf
pop
mov
push
in
jnp
pop
xchg
mov
push
iret
in
clc
das
xchg
rorb
xor
repz
mov
sbb
or
pop
testl
popl
jg
pop
sbb
xor
andb
inc
psrad
lcall
pop
sub
enter
jmp
scas
fildll
lea
jae
mov
xchg
mov
nop
movsb
scas
xchg
adc
mov
enter
jns
out
sub
enter
fidivrs
push
and
push
decb
lds
sbb
sub
ds
loope
dec
test
clc
test
mov
pop
jecxz
daa
sub
adc
shrl
test
ss
or
xor
idivl
mov
push
outsl
fcoml
rsm
dec
bound
jo
pusha
dec
mov
mov
xor
mov
stc
ret
mov
push
jecxz,pn
xchg
xchg
sbb
sbb
fsubrs
repz
add
sub
and
xor
mov
cmp
cmp
pop
push
sub
add
imul
fadds
popa
xor
dec
push
push
lret
xchg
inc
js
ret
pop
or
in
imul
popf
out
or
rolb
add
and
subb
fldenv
sbb
js
ficomps
or
or
sbb
loope
mov
add
imul
lods
fisttpl
into
cmp
inc
imul
sbb
stc
sti
repnz
xchg
fldt
dec
pushf
andl
aad
mov
lods
push
mulb
out
adc
mov
push
mov
mov
loop
sub
out
adc
out
nop
push
and
scas
test
and
mov
inc
je
push
dec
cltd
lahf
mov
ret
iret
dec
gs
ja
xchg
adc
dec
pop
mov
call
jg
ror
iret
mulps
sahf
sbb
jl
cmc
adc
dec
in
cld
jae
out
or
mov
sbbl
fcomi
dec
cmp
fldcw
sbb
xchg
jg
add
decb
out
push
or
cwtl
cs
andl
xchg
mov
movsb
loope
sbb
mov
adc
jo
ss
adc
xrelease
add
bound
pushf
fiaddl
xchg
jle
xchg
mov
dec
lds
in
je
pmaxsw
aas
push
adc
mov
clc
dec
add
adc
movsl
popf
or
aam
sbb
icebp
mov
out
sub
ss
mov
jmp
cmp
sbb
adc
int3
inc
fildl
mov
mov
cmp
inc
in
aad
xchg
pop
mov
add
rorl
out
adc
jg,pn
mov
pusha
fs
das
mov
mov
push
add
mov
mov
mov
sbb
push
mov
fwait
out
cmp
cmp
pop
mov
adc
push
or
fldt
int3
sub
or
inc
inc
fistl
test
dec
push
push
adc
pushf
out
in
pop
jae
cmp
sub
adc
stos
adc
dec
ds
push
out
adc
out
cltd
sti
mov
xor
mov
ja
jne
leave
aas
in
in
xor
and
adc
movsb
inc
idivl
scas
push
aad
pop
inc
adc
push
aad
movsl
and
aas
mov
ljmp
fildl
call
mov
fwait
pop
mov
pop
adc
fs
cltd
xchg
or
stc
and
paddsw
adc
nop
dec
or
sub
pop
push
pop
leave
add
mov
mov
fs
push
sub
xchg
in
adc
lret
data16
rcrb
add
xchg
inc
lret
mov
jl
pop
cmpsl
ret
in
test
mov
dec
inc
bound
out
add
inc
gs
inc
pop
ret
and
insl
add
ror
cli
or
pop
or
jmp
int3
out
or
scas
into
leave
outsl
iret
jl
das
mulb
cmp
adc
inc
xchg
xchg
pop
scas
cld
jno
xchg
mov
fnstenv
or
sbb
imull
daa
cli
arpl
mov
stc
inc
call
and
adc
iret
add
iret
shlb
sti
scas
lcall
or
sub
push
sub
adc
mov
cmp
test
iret
outsb
jp
pop
inc
ja
rorb
jl
adc
fwait
adc
add
nop
clc
xchg
aam
cmpsl
dec
sub
jno
and
add
cmp
push
jne
cmpsb
mov
in
jg
ss
repz
out
jno
ljmp
pop
push
push
imul
fstl
adcb
cmpsb
mov
std
cmpsb
sub
mov
pop
in
add
dec
cmp
faddl
data16
aad
test
mov
popf
out
ret
mov
sbb
in
and
pop
push
insl
mov
or
jg
lea
daa
mov
mov
mov
pop
sbbb
mov
sub
fs
inc
adc
out
scas
aad
daa
xchg
mov
sbb
adc
jno
mov
or
mov
pop
cltd
or
call
lret
das
push
push
fwait
rcrb
push
xor
gs
jae
mov
mov
enter
jg
adc
adc
clc
or
imul
inc
xor
fisubrs
or
test
movsb
cmp
pop
add
push
push
roll
test
mov
shrb
jno
jns
negb
enter
daa
and
jae
inc
loope
xor
sbb
ret
dec
lock
ss
sub
sbb
out
fdiv
dec
pop
cmpsl
xchg
inc
je
mov
and
insb
cmp
adc
xchg
mov
popf
cwtl
xor
les
add
cmp
mov
je
bnd
and
xor
mov
pop
cwtl
dec
sub
mov
into
inc
outsl
mov
mov
lret
inc
popf
inc
loope
or
push
mov
cmp
cmp
rclb
pushf
movsb
test
mov
mov
les
jecxz
push
mov
xchg
int3
sbb
add
test
sub
adc
and
ret
pop
mov
and
sub
mov
nop
adc
pushf
sub
mov
or
adc
xchg
movq
mov
jg
lods
fisubs
aad
fdivl
or
dec
sub
xchg
jbe
mov
mov
aas
mov
push
repnz
test
xor
outsb
sahf
mov
rolb
add
jle
dec
imul
or
xchg
scas
fsubrs
pop
push
enter
push
push
in
imul
jnp
cmp
movsb
mov
ror
loop
jo
mov
dec
mov
out
jle
ljmp
rclb
inc
popf
sub
xchg
xchg
test
lock
ficoml
mov
mov
xlat
bswap
jecxz
pop
faddl
data16
arpl
or
ss
les
cmp
jecxz
jnp
insb
popf
or
push
fisubl
nop
mulb
jnp
cmpsb
arpl
push
fs
jno
incl
loopne
les
cmp
lret
or
xor
outsb
es
jle
js
push
add
push
mov
addr16
cs
aaa
xchg
mov
divb
adc
sbbb
setb
inc
stc
push
sub
mov
clc
rcll
dec
scas
hlt
je
add
push
sbbl
aas
int
aam
js
mov
mov
shrb
sbb
movsl
test
cmp
inc
pop
mov
test
ret
loope
call
mov
es
mov
or
cmp
data16
jp
sub
xor
test
into
add
lcall
pop
int3
imul
test
inc
cs
mov
mov
and
imul
inc
jbe
shrl
inc
xlat
vmread
and
dec
inc
ret
repnz
cltd
pop
fs
jl
push
dec
hlt
mov
adcb
mov
inc
sti
or
jl
mov
dec
mull
mov
mov
or
pop
xchg
cmp
push
inc
push
xor
dec
aad
mov
stos
sbb
cld
cmp
mov
cmovl
popf
inc
and
mov
sub
filds
and
pusha
xchg
pop
ret
adc
iret
mov
idiv
mov
std
and
cmp
push
add
mov
push
scas
prefetchw
mov
dec
push
cltd
outsl
dec
out
add
popa
mov
jae
bound
mov
dec
adc
sbb
imul
gs
mov
adc
sbb
in
sbb
jmp
xor
adc
sti
mov
dec
dec
cmp
pushf
mov
or
mov
or
fisubrl
inc
jns
jle
ret
sahf
outsl
push
xlat
popa
push
iret
js
inc
ret
dec
jecxz
inc
pop
inc
add
movsl
sub
mov
popa
dec
stos
cmpb
push
pusha
jne
push
shll
xchg
cmc
lret
xchg
inc
push
rcll
xchg
xor
add
fs
sahf
daa
xchg
mov
cmp
fs
jge
rolb
test
adc
adcb
fdivr
cmp
ljmp
mov
mov
lock
leave
movsb
pop
fwait
icebp
in
push
imul
mov
cmpsl
jnp
dec
pushf
or
sarl
xchg
shl
ret
lock
orps
xor
pop
mov
add
rcrl
popa
xor
or
mov
xor
add
and
adc
loope
into
xchg
fmull
mull
test
filds
incb
mov
cmp
mov
and
jmp
or
in
jb
mov
les
cmp
pop
xor
insb
dec
enter
sti
imul
inc
mov
pop
jge
mov
lret
jae
movsl
inc
and
push
shll
jl
push
leave
xor
mov
lret
cmp
iret
movsl
sbb
inc
adc
flds
outsl
xchg
jle
hlt
lahf
lods
jmp
cmp
jmp
or
inc
mov
scas
popl
mov
xor
sbb
pop
aas
sahf
jno
and
push
out
add
adc
mov
mov
push
leave
push
jno
push
neg
fldln2
mov
xchg
cwtl
and
xor
in
jne
or
notb
jle
outsl
jb
ljmp
mov
jmp
jmp
cmp
cmp
enter
repnz
xchg
mov
mov
xchg
adc
adc
ja
sub
inc
fldenv
xchg
or
jbe
add
sbb
sub
repnz
icebp
xchg
sub
movsl
or
sub
jge
fsubl
xchg
pop
lock
test
rorl
inc
in
push
in
pop
stos
cmp
adc
add
and
pop
dec
sub
mov
data16
out
inc
mov
push
inc
clc
notb
in
cmp
test
push
sub
mov
xchg
xchg
icebp
lret
and
daa
jne
std
add
hlt
push
jne
cmp
adc
stos
push
addb
test
cmp
mov
fdivl
test
xor
xor
call
jge
enter
adc
nop
lock
sub
dec
or
xchg
fsts
ds
mov
mov
rorb
or
test
call
into
popa
sbb
push
add
xor
mov
outsb
cmp
push
ja
dec
or
insl
stc
xchg
repz
or
stc
dec
sbb
push
iret
xchg
mov
jns
mov
fwait
and
in
mov
mov
outsl
inc
push
mov
push
fs
add
cwtl
adc
in
sbb
jl
andb
push
sub
jmp
add
lret
fdivp
clc
cltd
push
or
es
pop
popf
mov
fcmovb
ret
addr16
in
push
xor
push
push
in
cmpb
adc
mov
push
xor
bnd
clc
push
lahf
ds
push
push
rclb
and
out
xchg
sbb
mov
jns
inc
fucom
orl
lds
iret
mov
dec
rcr
jo
xor
dec
pop
rol
repz
inc
lret
sub
cmp
mov
push
jmp
dec
std
mov
push
jmp
cmp
mov
leave
add
jg
lods
dec
pusha
or
test
nop
mov
and
faddl
sbb
push
xchg
jge
xchg
adc
hlt
push
adc
mov
es
clc
jno
jae
xor
cmc
leave
cmp
mov
dec
repnz
in
mov
jecxz
dec
push
enter
in
xor
and
push
xchg
jnp
icebp
push
push
xlat
adc
cmp
xlat
ja
jp
sub
in
into
bound
insb
sub
mov
push
mov
nop
test
jne
sarb
sbb
loopne
aaa
or
int
cmp
pop
mov
sub
cmp
mov
imul
sbb
fsubp
nop
mov
ret
dec
lcall
fucomi
les
or
dec
cmpsl
jecxz
into
xlat
mov
gs
mov
xchg
sbb
insl
mov
mov
sub
jbe
out
ds
sub
or
inc
xchg
insb
shll
test
cwtl
lods
jb
jne
sbb
ret
test
out
jbe
std
sbb
lahf
sbb
sahf
push
mov
push
jne,pn
mov
test
lods
adc
push
mov
jbe
push
inc
testl
dec
stos
lret
mov
cmp
fiaddl
adc
shll
stos
loopne
jecxz
inc
fs
stos
sbb
aad
jp
dec
dec
rclb
add
add
in
es
fs
ljmp
xchg
ljmp
cmp
arpl
lahf
arpl
nop
mov
out
out
inc
xor
mov
inc
pop
mov
lcall
xchg
jb
decb
lret
das
fldl
imul
rcr
sub
gs
mov
jg
pop
out
pushf
mov
rorb
int
pop
aaa
sub
lods
add
xchg
xchg
cmp
std
call
inc
cmp
push
mov
dec
es
out
mov
jmp
lods
testb
sub
icebp
or
aam
int3
add
mov
fimuls
or
lds
push
out
jb
addr16
in
jb
jo
scas
xchg
cld
add
shr
scas
jno
fistpll
cmp
adc
std
int
rolb
daa
sub
mov
push
fs
or
or
add
inc
push
dec
xor
insb
stos
mov
loope
xchg
jecxz
addr16
cmp
mov
and
shlb
mov
faddl
bound
pop
mov
xchg
inc
mov
shrb
shrb
mov
pop
inc
in
xor
cmpsl
loopne
rcrl
rcll
pop
mov
add
inc
xchg
ljmp
call
aad
shll
in
ljmp
add
clc
mov
fwait
mov
fdivl
mov
in
push
out
movsl
lcall
arpl
int3
out
dec
and
nop
in
movsl
mov
testb
aad
jne
shl
gs
sti
push
dec
mov
test
adc
fnstcw
mov
mov
inc
sbb
into
test
sbb
inc
sbb
lock
sub
jae
inc
jbe
outsb
aas
jp
shlb
pop
mov
pop
mov
sbb
test
aad
or
popf
mov
xchg
rcrb
sahf
push
push
cmpsl
cmpsb
cwtl
out
test
out
arpl
loopne
popa
aam
in
test
sahf
std
jb
pop
xchg
mov
js
in
loop
dec
cmp
mov
xchg
aas
and
pushf
fcomip
sbb
sbb
lock
sbb
test
insl
add
dec
movsb
xchg
jge
gs
push
push
int3
pop
xchg
daa
imull
fcomps
push
xor
data16
movsl
mov
rcrl
jns
xor
pop
and
jl
and
sti
or
imul
ret
popa
ret
jbe
js
lock
cmp
jb
nop
out
cmc
imul
gs
add
xlat
mov
mov
ljmp
scas
push
pop
in
sub
and
mov
push
test
add
add
xor
stos
std
xor
in
outsl
lods
mov
insl
mov
gs
xchg
lds
or
push
icebp
add
push
jno
mov
or
jge
in
nop
clc
fwait
pop
in
push
jmp
mov
rolb
xchg
xchg
das
sahf
adc
lods
gs
test
sub
testl
pop
add
lretw
push
lcall
jbe
sub
sub
dec
roll
xor
lret
add
mov
mov
les
test
sub
mov
test
loopne
adc
stos
outsb
lock
push
lods
in
push
fwait
cmp
sub
adc
sub
inc
cmp
ss
inc
repnz
jbe
loop
jecxz
push
dec
test
aaa
ret
fldcw
jmp
and
cmp
addb
repnz
imul
dec
inc
xor
sbb
iret
cmp
outsb
fistpl
adc
leave
and
pop
fnsave
push
test
push
es
fs
xor
cmp
dec
mov
sbb
push
fucomip
out
mov
push
adc
adc
sahf
jg
xchg
cmp
add
push
inc
push
dec
sub
mov
pop
pop
add
dec
mov
mov
push
enter
lea
mov
dec
stos
insl
jge
dec
ds
loop
mov
sbb
xor
cltd
jle
inc
das
stos
mov
dec
stos
pop
dec
and
bound
inc
addr16
lods
xchg
cmp
lcall
adc
sbb
mov
xor
mov
push
jne
sbb
popa
test
inc
add
daa
stc
mov
ja
jle
stos
mov
call
push
stos
mov
adc
pop
add
leave
bound
push
xchg
add
fstpl
xchg
xchg
sub
adc
sti
les
and
add
es
pop
dec
jecxz
add
mov
xor
adc
mov
inc
enter
or
jp
outsl
cmpps
movsb
bts
shlb
sbb
aam
orb
loopne
push
inc
dec
sub
sbb
and
sub
and
iret
inc
clc
dec
aad
in
pop
clc
mov
imul
add
cmp
repnz
repnz
mov
out
pop
ret
sub
daa
jbe
nop
push
pop
jnp
mov
pop
subb
fisubl
add
mov
in
and
icebp
pop
cmp
fbld
aaa
push
imul
test
call
insl
sub
add
adc
xchg
push
or
mov
push
cli
shll
add
repnz
shr
inc
adcb
jg
xor
popf
mov
push
dec
sbb
mov
addr16
sub
and
lret
ljmp
test
out
pop
dec
cmc
inc
pop
pushf
fisubs
xor
cld
rorb
sbb
stos
in
mov
bound
mov
movsl
leave
outsl
lahf
xchg
out
pushf
call
repz
sub
inc
mov
push
jbe
mov
lea
adc
std
lret
je
fists
add
movsl
push
ds
pop
push
cmpsl
jns
decb
push
fidivrl
and
sub
mov
mov
mov
rcrb
push
push
pop
cmp
lret
fistpl
xchg
stos
adc
repz
aad
pop
aas
jg
mov
adc
or
enter
dec
mov
sbb
push
leave
mov
fidivrs
mov
add
sub
adc
pop
in
int3
outsb
dec
push
iret
fisubs
pop
mov
or
shrl
aaa
and
cmp
mov
jl
jg
mov
xchg
add
inc
push
jmp
cwtl
fnstenv
aad
pop
pusha
out
sti
ds
mov
add
mov
movsl
fsubrs
popf
cwtl
leave
mov
aas
lock
pop
lahf
lahf
add
mov
sbb
aam
inc
dec
lcall
fstps
dec
bound
jecxz
pushf
or
xchg
ja
push
mov
xor
aad
pusha
push
fldcw
imul
push
jle
mov
cmpsl
cld
cmp
cmp
sub
je
mov
mov
ret
xor
mov
mov
push
xchg
test
lcall
adc
pop
movsl
insl
add
mov
rolb
gs
xchg
sbb
test
dec
mov
loopne
xchg
add
mov
adc
sub
pop
mov
xor
ljmp
cmpsb
mov
mov
cmp
ja,pt
or
push
fs
es
pop
fwait
push
decb
lret
fxch
mov
imul
int3
dec
rcll
in
outsb
inc
mov
fldl
lea
or
psubusw
mov
rolb
or
jo
leave
xrelease
lret
mov
out
loop
inc
pop
add
jge
ljmp
stos
pop
pop
mov
pop
fdivrl
xchg
cmpsl
arpl
or
inc
sarl
dec
fst
push
pop
popa
addl
sahf
fsubr
jge
mov
add
popf
jno
push
aad
sub
lret
lret
cwtl
push
cmp
call
pop
mov
jecxz
js
testl
push
out
ds
jp
ss
test
sbb
out
in
mov
cmp
scas
loop
xchg
call
outsb
popf
xor
les
cmp
inc
cmp
pop
lods
bound
jns
int3
and
lahf
add
add
rorl
mov
retw
inc
imull
addr16
in
sbb
hlt
lahf
stos
mov
mov
nop
xor
push
jecxz
test
add
mov
adc
add
ret
sbb
jge
cltd
ds
jo
mov
and
cltd
pusha
xchg
stos
cmc
rolb
cltd
test
imul
fwait
negb
adc
rol
lcall
insl
pusha
xchg
into
xchg
in
sub
jge
mov
jl
mov
xchg
jb
fstl
push
or
mov
pushf
and
sbb
adc
dec
or
mov
push
inc
cmp
mov
cmp
out
fsubl
int
sub
dec
push
dec
mov
fwait
or
dec
scas
pop
addb
jg
and
push
add
mov
jle
inc
lahf
inc
jnp
pop
lahf
lahf
lea
insl
dec
pop
int3
or
xor
xor
mov
xchg
jge
sub
in
push
pop
dec
jbe
fwait
sbb
mov
push
scas
mov
mov
xchg
jbe
insb
fwait
in
stos
aas
xlat
icebp
int
hlt
jge
jp
jae
xchg
ljmp
jns
jne
fcoms
sub
add
jb
loope
insb
mov
sub
add
outsl
es
adcb
push
cmp
rcrb
sub
mov
mov
stc
cmp
jle
dec
sbb
dec
test
leave
push
xor
cmp
sub
dec
cld
loop
sti
cmp
cmp
outsl
bound
and
or
sarl
inc
or
xor
pushf
pop
iret
or
jno
mov
or
js
repnz
rolb
xor
mov
pushf
or
and
add
jp
adc
cmpsb
xor
loope
mov
and
xor
xchg
pop
mov
cmp
and
push
adc
sbb
sub
lock
lcall
push
adc
shlb
push
cmp
sbb
lods
push
aam
push
push
push
outsb
xchg
loop
aam
xchg
outsb
adc
inc
dec
inc
aaa
mov
ljmp
les
mov
aas
add
std
mov
push
adc
fstps
adc
inc
mov
sub
pop
in
sbb
jl
inc
jmp
aad
sahf
stc
fisttps
push
cs
cmpl
call
out
inc
push
stos
push
neg
shrb
xor
cmpsb
jp
xorb
xor
and
inc
jnp
shr
push
xor
lods
repz
ja
jo
mov
inc
nop
insl
repz
inc
leave
push
std
pop
outsb
mov
into
push
xchg
pop
mov
jp
ret
jne,pn
loope
push
xor
jb
ficoms
in
mov
jecxz
push
jns
out
mov
mov
iret
mov
std
sbb
cmp
add
sbb
pop
clc
sub
sub
jo
sub
rcrb
dec
fwait
sbb
sub
lods
notb
aad
xor
es
xor
xor
or
js
ret
pop
paddw
push
in
repnz
out
js
ret
out
pop
xchg
xchg
mov
xor
or
clc
iret
sub
pop
mov
in
inc
lcall
push
jmp
jb
ret
int
xchg
inc
sbb
loopne
andb
aad
aam
scas
and
jno
fcomps
ret
inc
in
mov
adc
loopne
push
cmpsb
lret
cmp
aas
and
sub
adc
and
sub
and
loop
cmp
cltd
or
xor
ret
xlat
inc
std
cmp
pop
and
mov
aaa
sub
test
cmp
dec
xlat
lds
and
fdivp
test
push
dec
mov
stos
scas
idivb
xchg
ljmp
push
aas
es
test
repnz
sub
insb
adc
popa
jmp
add
sarl
test
ljmp
jae
lcall
dec
adc
fdivr
sub
sbb
jmp
shll
das
lcall
ret
fisubl
cmp
adc
jnp
push
rolb
sub
test
mov
bound
lods
push
sahf
mov
in
inc
push
sub
push
rol
mov
or
imul
mov
sbb
test
fwait
inc
dec
mov
push
pop
daa
adc
jns
and
sarb
mov
fcompl
test
aam
andb
ja
and
hlt
stc
xlat
mov
in
inc
int3
mov
insb
xor
fsubrp
mov
outsl
mov
scas
cmp
rcl
mov
and
jge
lret
mov
iret
movaps
sahf
dec
push
cmp
fs
nop
loope
jmp
xchg
jg
aaa
popf
pop
scas
push
dec
mov
jg
xchg
icebp
cld
mov
mov
add
das
mov
outsb
mov
test
xchg
clc
imul
lods
xchg
mov
movsb
ret
iret
xorl
and
popw
les
inc
dec
or
ja
enter
xor
mov
cmp
inc
sbbl
or
iret
jp
test
push
or
jnp
jg
cwtl
pop
xchg
mov
mov
test
lcall
jnp
and
xorb
iret
xor
lds
in
popf
push
push
cltd
pop
mov
leave
xor
inc
add
sti
lock
mov
dec
xchg
pop
in
mov
inc
stos
daa
nop
hlt
mov
pop
adc
inc
xor
xchg
xchg
pop
add
jmp
addb
add
inc
jp
mov
adc
js
and
stos
mov
and
adc
test
xchg
aas
mov
stos
aam
sub
adc
hlt
pushl
pop
arpl
es
rorb
aad
shll
mov
xor
mov
call
mov
popf
cmp
scas
pop
xchg
les
cltd
ds
adc
insl
xor
push
test
jp
pop
sbbl
sbb
rolb
push
pushf
fbld
cmpsl
int
fsubrl
dec
aam
or
xor
test
imul
and
sbb
movsl
mov
push
sti
addb
xor
inc
stos
and
pushf
mov
jle
ret
scas
fnsave
lret
mov
dec
loope
gs
cmp
fldl
push
idiv
mov
pop
call
dec
sub
push
fisttpll
lds
xor
mov
pop
xchg
jle
data16
enter
push
repz
lods
and
mov
sahf
add
loopne
pusha
mov
push
imul
cmpsl
inc
in
adc
cmp
pop
mov
imul
add
outsl
or
stos
inc
movsl
insl
adc
out
mov
push
je
add
sbb
out
leave
jg
dec
cltd
dec
in
pop
data16
adc
jmp
or
pusha
xchg
es
mov
neg
inc
lods
mov
iret
xchg
pushf
loop
mov
cwtl
and
cmp
and
push
cmpsl
jge
xchg
jmp
popf
insl
push
sbb
and
lret
nop
sbb
int3
lock
cmpsl
loopne
push
mov
xor
mov
dec
jle
stc
scas
fs
ret
xor
aaa
sub
pop
inc
and
out
pop
inc
movsl
push
hlt
sbb
out
jge
inc
cmp
repnz
dec
jmp
cld
dec
cld
sub
enter
or
pusha
sbb
subb
andl
out
dec
fcomi
inc
lret
ret
insl
call
mov
jnp
sbb
cmp
mov
mov
add
sbbl
lret
imul
inc
pop
adc
inc
lret
push
mov
call
inc
jne
shll
mov
pop
xchg
jmp
adc
xchg
es
or
jno
adc
fwait
jnp
xchg
enter
dec
mov
fs
iret
mov
sbb
jb
or
inc
int3
outsb
jl
arpl
cmp
fidivs
cmpsl
jno
ret
iret
in
pushf
pop
adc
aas
cmp
pushf
and
subl
popa
xchg
jne
cmp
push
sbb
inc
mov
jns
ss
pop
add
cmp
imul
dec
mov
lds
mov
xchg
ljmp
enter
pop
in
mov
fsubs
jnp,pt
inc
int3
sarl
or
nopl
hlt
lods
cli
pusha
xor
xchg
push
in
push
or
and
aad
adc
mov
jg
lret
movl
jb
jns
jmp
stc
or
lcall
or
ljmp
loope
push
pop
xchg
dec
push
mov
mov
ja
and
mov
mov
jp
xorb
or
repz
out
xor
add
jl
adc
cmp
sub
xchg
std
xchg
pop
inc
xchg
movsb
xchg
es
out
cli
aad
mov
movl
lds
and
mov
mov
pop
and
xorb
icebp
inc
or
lret
adcl
popa
shlb
mov
mov
jae
jae
sahf
insb
test
jae
cmpsl
dec
adc
fisubrl
test
aam
sbb
add
fmuls
jb
iret
hlt
pop
in
lret
mov
stc
nop
xchg
sbb
lea
mov
fwait
inc
and
dec
push
stos
cmpsb
mov
call
and
push
jb
mov
xchg
repz
rcl
cmpl
cli
add
enter
cli
push
dec
add
mov
fwait
or
mov
jae
es
lcall
and
adc
mov
or
jbe
cmp
or
add
dec
mov
and
daa
aaa
sub
aam
nop
insl
das
test
inc
jno
shll
outsl
lcall
mov
xchg
pop
add
ret
pushf
in
cmc
ds
das
pop
int
hlt
in
add
int
inc
pop
jle
xlat
fnstenv
sub
jmp
test
cmp
dec
push
call
arpl
andl
fmul
xor
std
xchg
sbb
jne
sub
push
mov
stos
sti
dec
ljmp
jge
push
out
cmp
stc
sbb
and
jno,pt
xor
popa
jecxz
std
fadds
xchg
test
testb
or
jle
rorl
test
aas
dec
pop
add
cwtl
jg
mov
pop
ds
addl
cmc
hlt
fists
orb
jne
xor
mov
and
fstpt
lcall
adc
pop
xchg
ror
out
add
int3
cs
sahf
pop
nop
or
imul
or
sub
or
aas
fnsave
mov
cltd
jae
sbb
jae
mov
mulb
lret
and
adc
data16
pusha
int
push
mov
lods
sbb
jbe
jmp
sar
fistpl
cmp
xor
leave
jl
jb
repnz
iret
push
pop
movsb
loop
arpl
push
or
xchg
ljmp
or
aad
lock
loopne
pop
sbb
dec
pop
push
pop
sbb
stos
jle
insl
jl
in
mov
sub
mov
jmp
dec
mov
test
add
sbb
adc
in
fldenv
push
or
sub
testl
das
sub
sbb
rcrl
les
rcll
loope
mov
push
cmp
sarl
jns
insl
or
xor
mov
mov
mov
mov
addr16
dec
rorb
aas
jle
xchg
movl
add
scas
jl
push
cmp
imul
cmp
push
or
pop
ljmp
mov
sbb
jl
fildll
lds
iret
repz
xchg
loop
cmp
and
mov
dec
into
gs
xor
sti
dec
inc
lods
shrl
shrl
or
test
jno
repnz
fnstsw
sti
push
add
adc
or
ds
pop
les
subl
add
aad
push
faddl
add
loope
cmp
stc
fnsave
push
add
repnz
icebp
stos
xor
out
dec
nop
sbb
and
cmp
imul
or
jecxz
mov
mov
bound
adc
repz
xchg
movsb
adc
adc
repz
add
push
dec
jecxz
loope
out
into
data16
in
add
jnp
xchg
pop
clc
mov
adc
sub
loope
sub
lcall
adc
dec
test
data16
fistps
lods
lahf
daa
mov
add
dec
pop
push
cmp
fsqrt
out
push
sbb
retw
xor
aam
sub
pushf
push
dec
loopne
adc
xchg
int3
ret
inc
loopne
push
mov
cmp
popa
hlt
std
mov
sbb
lret
cmp
xor
mov
movsb
mov
hlt
pop
sbb
js
popf
rcrb
bound
add
outsb
inc
rorl
andb
inc
aam
inc
mov
xor
push
data16
jae
jbe
mov
pop
shll
or
push
daa
cmp
cmp
out
push
dec
cmpsl
imul
xor
push
and
pop
pop
mov
jg
arpl
faddp
ficompl
movl
mov
lcall
mov
add
fidivl
inc
adc
test
inc
cmpsl
or
cwtl
fsubp
pop
clc
or
or
add
jle
movsb
sub
adc
mov
cmpsb
lcall
rclb
nop
pop
inc
aam
sbb
test
mov
test
lods
pop
sbb
mulb
jp
pop
cmp
inc
xchg
adc
dec
lods
inc
sub
add
adc
push
pushf
and
flds
jo
lahf
xor
push
lahf
xchg
fucom
xchg
pop
imul
dec
inc
xchg
mov
out
in
jg
xchg
stos
mov
insl
fcmovu
pop
xchg
hlt
jmp
pop
inc
in
pop
loopne
fldt
repz
add
call
dec
into
cmp
add
mov
js
sbb
xor
lret
and
push
test
out
outsb
cmc
in
mov
mov
pop
or
int
mov
pop
pop
xchg
lret
ficoms
jp
scas
or
loopne
mov
mov
jg
iret
out
lret
push
out
sub
sahf
fildl
ficoml
nop
test
mov
add
add
aaa
cli
cmp
out
dec
add
outsb
out
mov
rcr
or
xor
in
or
leave
adcb
sbb
add
addr16
loopne
std
sbb
push
dec
jl
je
cmp
lret
add
push
push
cltd
or
push
pop
test
pop
sti
sub
dec
sub
push
mov
cmp
mov
xor
jle
jg
popf
xor
sub
sbb
mov
and
fcmovnb
rolb
dec
mov
add
sbb
sbb
jns
fisubs
lret
sbb
jg
roll
std
push
or
add
push
fs
push
and
test
fs
jbe
inc
test
es
fistl
fsubl
mov
pusha
xlat
cmc
cmp
mov
pop
lahf
dec
jle
fucomip
mov
rcrb
frstpm(287
std
sub
mov
cmp
out
and
mov
rcrl
cmpsb
pop
sub
push
bnd
pop
outsl
adc
cmpl
mov
bound
aaa
pusha
adc
sub
test
insl
push
repnz
jp
and
hlt
push
ds
sub
or
fsubrp
push
dec
popf
data16
mov
pop
jne
int3
stc
and
test
out
clc
fwait
add
mov
cmp
ret
loope
mov
mov
fwait
pop
pop
stos
fwait
test
cs
adc
adc
fidivrl
push
mov
and
push
in
pop
dec
xchg
insl
add
add
pop
push
inc
loop
cld
dec
add
jns
mov
jns
lret
jecxz
jg
jecxz
jmp
and
shll
jbe
outsl
xorl
push
pop
and
mov
sahf
jg
ss
dec
lds
cs
adc
loope
pop
js
pop
cmc
sbb
lods
mov
lret
xchg
sbb
and
sbb
mov
test
cmpsb
add
cmp
xchg
stos
lcall
adc
leave
cmp
xchg
imul
cld
imul
orb
jns
cwtl
dec
rcl
jb
cmpl
in
rolb
mov
loopne
xor
pop
mov
insb
pop
fisubs
sbb
pop
sub
mov
mov
push
cmpsl
jns
ss
scas
loopne
inc
loope
mov
leave
pop
jecxz
fidivrs
push
inc
lahf
pop
push
xor
das
insb
nop
or
pop
jmp
loope
dec
push
or
mov
inc
enter
mov
dec
scas
in
dec
std
ds
sti
sti
inc
cmp
lock
xchg
push
test
xor
cmc
push
push
mov
jl
pop
mov
fwait
mov
cmp
sbb
jb
jg
ds
push
sbb
test
inc
xchg
inc
clc
jnp
mov
sbb
mov
xchg
shrb
sub
insb
cli
sbb
aaa
cmp
outsb
and
jle
inc
sti
pop
aaa
aad
inc
les
stos
mov
xor
add
ja
jne
push
xchg
or
push
lahf
loope
dec
repnz
xchg
cltd
mov
outsb
inc
testl
jge
outsb
mov
cmp
icebp
mov
pop
out
aad
jle
pop
or
cmovo
mov
mov
cmp
dec
ds
and
xchg
cmp
ret
mov
mov
cmp
cmc
andl
aaa
int
cmp
in
adc
inc
xchg
mov
in
mov
and
movsl
xor
xchg
cmp
push
add
and
dec
fistpl
jne
pop
mov
jno
cltd
add
sahf
xchg
dec
lcall
scas
push
xchg
cmpsl
mov
call
jmp
mov
and
arpl
inc
arpl
shr
int
ljmp
bound
push
lods
dec
sub
mov
imul
cmp
adc
mov
jae
daa
loopne
jge
mov
mov
sbb
adc
xor
push
cmp
cmp
mov
or
sahf
insb
jg
jne
adc
inc
mov
cmp
call
shl
int3
mov
fbstp
les
and
cmp
lock
leave
lcall
mov
sbb
lds
ss
adc
or
in
int
movb
sbb
in
test
inc
xchg
notl
inc
mov
mov
data16
mov
jecxz
and
inc
add
xchg
ds
inc
aam
or
inc
or
adc
jo
js
pop
inc
data16
hlt
ljmp
das
out
push
pushl
js
inc
xchg
lods
adc
scas
jno
int
inc
push
mov
mov
mov
out
imul
fsts
ret
int3
aam
ret
adc
mov
push
and
out
or
xchg
sbb
mov
movsb
jg
mov
test
mov
cmc
or
ficomps
mov
cltd
dec
pushf
test
dec
je
fcomi
mov
addr16
arpl
pop
cs
cmp
out
aas
fadds
loope
je
lods
jae
sub
mov
sub
jg
push
pop
fiadds
or
movsb
and
lret
mov
stos
cmp
sbb
xchg
pop
jl
sbb
into
test
cmpl
sub
mov
inc
dec
out
je
jecxz
sub
pop
nop
xchg
std
lret
xchg
cltd
jp
jle
sub
push
scas
add
imul
ds
stc
fisubl
mov
add
sti
sub
sahf
sbb
js
repz
pop
rcrl
push
push
pop
cmp
pop
dec
mov
imull
pusha
or
cmp
adc
xor
sub
jge
mov
ja
movsb
jecxz
lret
adc
inc
mov
fstpl
dec
dec
xchg
xchg
sub
and
mov
pop
jecxz
ljmp
iret
xchg
mov
xchg
push
mov
pop
int
push
dec
in
repz
std
sbb
sub
xchg
cvtpi2ps
mov
lret
ficoml
mov
loope
sbb
orl
scas
sarl
xchg
aaa
xlat
clc
adc
xchg
call
cmp
and
imul
aam
and
repz
mov
sbb
push
insl
bound
cs
mov
inc
or
mov
cmp
add
sub
cmp
int
mov
lret
sarl
push
adc
jmp
repnz
or
ret
mov
and
inc
push
pop
or
cmp
ret
rcll
repz
inc
loope
repnz
fs
mov
pop
mov
iret
push
lods
sbb
shrb
or
movsl
jnp
int3
repnz
push
pop
mov
inc
pusha
hlt
mov
adc
adc
inc
xchg
test
jg
xchg
push
pop
push
mov
or
aad
mov
pop
inc
notb
cltd
int3
adc
repnz
out
mov
mov
pop
popf
inc
dec
ds
mov
sub
pop
xchg
jp
les
mov
pop
sbb
cmp
mov
cmp
aas
add
aam
into
repnz
and
xorb
sbb
popa
inc
out
lret
xor
insb
out
fcmovnb
dec
fcomps
or
int
outsl
or
mov
imul
and
dec
loope
dec
in
je
push
cmp
push
in
or
push
cmpl
sbb
int
adc
push
pushf
mov
test
arpl
or
jne
cmp
fldt
test
stc
mov
sahf
ds
sbb
pushf
cwtl
xor
int
add
xor
cli
insl
imul
arpl
lea
add
cmc
push
xor
scas
jns
sub
rorb
nop
cmpsb
jmp
andl
mov
cmp
ljmp
imul
hlt
push
cltd
in
cmp
cld
sub
mov
mov
sbb
pop
cwtl
add
xchg
adc
and
daa
mov
push
pop
movsb
sbb
std
mov
inc
hlt
pusha
lret
arpl
das
movsl
jnp
std
dec
fwait
lea
popl
jae
scas
je
sub
daa
add
fadds
ja
jge
xchg
lods
rcrl
loopne
fs
or
sarb
test
push
vpunpckhdq
dec
and
fstl
into
les
mov
cmp
cmp
in
out
mov
push
add
aad
std
mov
mov
mov
push
xor
pop
stos
inc
inc
pop
jae
aas
popa
inc
fcomps
add
jg
int
mov
pop
loopne
pop
test
mov
fdivs
push
ss
out
shrl
ja
cmpsl
lods
call
dec
jb
dec
call
adc
push
dec
cmpsb
jne
sbb
leave
jg
add
jnp
and
pop
cwtl
adc
cmp
sub
stos
lret
lcall
nop
incb
and
lahf
push
shll
in
jb
shlb
cmpsl
inc
push
cmc
xor
and
lret
jno
mov
pop
or
cltd
lcall
cmpb
cmpsb
push
ljmp
xor
arpl
mov
ret
sub
mov
repz
push
cmpb
add
std
clc
out
lcall
mulb
or
dec
fcmove
fs
sbb
mov
jne
add
cmpsb
dec
inc
ret
loopne
dec
enter
ljmp
mov
or
bound
dec
cmp
and
cli
and
pop
addr16
cld
inc
mov
repz
test
cmp
movsl
mov
xor
aam
xchg
cs
add
test
pop
pushf
sbb
paddw
xchg
pop
divl
ficompl
out
nop
jno
arpl
stc
jo
repz
inc
mov
into
jnp
cmp
sbb
adc
sbb
pusha
xchg
loopne
fistl
dec
jne
scas
das
push
movsl
mov
aas
std
sub
xchg
cmp
popa
lock
push
cmp
sub
lahf
jo
jmp
mov
or
sti
xor
dec
mov
enter
test
fcmovb
sub
add
cmp
rcll
jbe
sahf
pop
mov
fbstp
dec
popf
pushf
jecxz
int3
xorb
add
mov
push
pop
mov
data16
sbb
cmpsl
mov
cmp
loop
out
pushf
mov
pop
push
push
xlat
push
icebp
or
mov
sbb
cmp
jne
sbb
out
mov
mov
and
fdivr
imul
data16
hlt
inc
sahf
lock
push
and
dec
jno
daa
iret
and
stos
mov
push
dec
pop
ret
adc
jb
fistpl
pushf
jo
push
xlat
xchg
mov
shl
aas
fnstcw
out
test
fcmovnbe
push
mov
cmp
jp
sub
pusha
jmp
sub
sbb
lret
pop
gs
fwait
dec
mov
repnz
les
loop
pop
adc
push
xchg
inc
int
pusha
sbb
mov
push
sub
mov
jmp
nop
and
jno
inc
sahf
outsb
dec
xor
movsb
pop
mov
test
or
add
push
stc
test
insb
stos
add
aam
push
xor
mov
xor
mov
xor
jne
stos
mov
je
aam
test
aas
add
fisttpll
stos
xor
adc
lods
add
push
mov
int
pop
shrl
gs
adc
mov
aad
pop
js
in
jnp
mov
push
sti
jae
imul
lods
outsb
scas
add
add
ret
mov
in
and
mov
xchg
int
lds
add
into
sbb
jb
mov
clc
or
lahf
dec
pop
xlat
ror
mov
outsb
ss
gs
pop
mov
loopne
insb
and
pop
mov
sbb
push
push
push
cmp
jmp
call
sub
cmpsb
stos
fbstp
jmp
icebp
in
cmp
mov
mov
imulb
shll
pushf
xor
jg
fiaddl
and
inc
mov
add
out
mov
sub
test
xor
test
pop
loop
ret
lret
movb
inc
and
cmpsl
or
xlat
dec
rcl
fs
lcall
mov
sub
cwtl
cltd
jns
jg
mov
mov
xlat
fdivrs
pop
pop
iret
aad
dec
sarl
push
lock
xor
shr
cmp
push
popa
adc
push
rdpmc
out
pusha
cmp
add
inc
xchg
or
stos
shrb
mov
rorl
gs
aas
enter
lods
xchg
inc
into
mov
orl
movsb
sub
test
mov
cmp
adc
mov
cld
adc
cmp
jmp
negl
cmp
xchg
in
ja
jnp
jge
fistl
pop
push
jns
dec
sub
cmp
rol
adc
cmc
xchg
jne
enter
ret
cmpsl
mov
inc
lret
mov
add
ss
add
lock
mov
xor
fsts
xchg
dec
std
mov
jecxz
mov
pop
and
mov
sbbb
jg
or
xor
call
jp
push
imul
daa
inc
call
cwtl
adc
test
rorb
fistpl
repz
jp
pop
inc
hlt
or
repnz
mov
push
xchg
shrl
add
xchg
insl
incl
xchg
push
jno
out
es
lret
and
ret
lcall
lea
arpl
into
jmp
sub
movsb
cltd
stc
cli
push
rclb
cmp
push
mul
imull
std
xlat
test
int3
sahf
jle
dec
or
dec
shrb
adc
int3
push
cmp
orb
xor
lret
sbb
lds
jne
sbb
int
and
jl
insl
inc
inc
mov
lock
test
and
sub
lahf
cmpl
cmp
cld
test
mov
xlat
insb
mov
cs
inc
notl
xchg
cmc
lret
pop
arpl
movsl
mov
dec
sub
sahf
cmp
out
rorl
or
pop
mov
int
nop
or
pop
pusha
mov
test
or
stos
loop
cs
std
test
loope
pop
sub
mov
mov
loopne
and
cmp
push
mov
pop
sbb
cmp
sub
jb
fcmovne
inc
roll
sbb
andl
fimuls
add
enter
push
fs
dec
mov
aad
jg
cltd
nop
mov
test
push
sets
add
xchg
cmpsb
lcall
push
cmp
dec
jle
push
mov
inc
xchg
fnstenv
rclb
sbb
xchg
aam
pop
and
je
clc
mov
loop
and
insb
xchg
jl
stc
into
or
outsb
icebp
addb
in
shlb
jb
subl
cmp
mov
repz
xchg
dec
cmpsl
into
or
push
mov
xor
lret
push
das
icebp
mov
repnz
mov
in
shrl
out
jo
cmp
sbbb
out
incb
call
rolb
iret
mov
loopne
mov
fstps
sarl
mov
andl
mov
mov
mov
push
ja
out
sub
test
mov
in
arpl
lcall
and
cmp
aas
adc
add
mov
popf
shl
orl
lods
ret
lret
inc
lds
jecxz
ds
fs
mov
pop
or
repz
sbb
ret
lock
push
loopne
les
outsl
test
add
jns
mov
sbb
outsb
dec
insb
shlb
xchg
and
and
loopne
scas
popa
loope
std
call
xor
and
push
call
jge
fstl
mov
cltd
fsubp
sub
cld
adc
cmpsb
jo
xchg
dec
int3
xor
mov
xchg
dec
insl
or
xchg
pop
jmp
mov
jae
or
mov
mov
adc
test
les
dec
les
add
jb
adc
in
test
push
pushf
push
out
insb
jb
jnp
mov
mov
sbb
aaa
lds
inc
pop
incb
ja
pop
in
movsl
insb
jno
pop
sahf
or
push
push
shlb
sub
out
dec
mov
mov
cltd
hlt
shrb
in
push
popf
das
jge
add
xchg
fisttpll
jmp
lock
inc
mov
jns
lret
xchg
jne
aaa
cmpsb
rorb
xor
jne
xchg
call
pop
leave
in
pop
jne
icebp
pop
dec
in
add
xor
sub
fimull
shrl
jmp
push
repnz
fistps
jmp
mov
out
pop
movsb
cmpsl
jmp
adc
push
iret
sbb
gs
out
pop
xchg
int3
sbb
fwait
aas
lds
test
sti
xchg
mov
adc
int
add
pop
inc
mov
aad
aas
xor
loop
mov
mov
cmp
insb
sbb
jg
loop
lret
aas
mov
xor
bound
test
cmpl
adc
pop
roll
push
pop
in
mov
mov
aam
sti
mov
outsb
mov
cmc
and
test
lret
or
xchg
sbb
in
mov
sub
pop
aas
pop
pop
inc
gs
jmp
and
pop
pusha
iret
or
outsl
data16
or
pop
pop
sub
adc
mov
adc
jo
out
mov
mov
push
test
inc
addr16
dec
nop
xchg
xchg
pop
rdmsr
lods
jl
push
xchg
push
je
mov
es
mov
out
addr16
mov
out
or
les
les
and
pop
inc
or
mov
in
aas
xorb
mov
jge
sahf
sub
mov
mov
pushf
cmp
pushf
mov
xchg
rol
xchg
daa
jnp
in
imul
xchg
mov
pusha
addr16
pop
xor
mov
pop
inc
jmp
jns
xchg
xchg
mov
fisubs
pop
push
cmp
sbb
jbe
sarb
push
adc
cmc
mov
es
ret
scas
and
sub
push
ficoms
shll
jb
cmpsb
cs
sub
mov
fldt
out
movsb
pop
inc
pop
mov
leave
mov
inc
add
in
mov
in
inc
mov
rol
sti
fsub
ror
orl
cli
das
lahf
xor
movsb
pop
in
lods
fstpt
xor
mov
movsl
subb
ret
imul
inc
vmwrite
cmpsl
jbe
es
mov
enter
mov
sti
xor
lahf
fadds
inc
jns
in
jecxz
in
cmp
bound
out
xor
push
push
pusha
pop
inc
test
or
push
push
call
out
xchg
bnd
das
xchg
adc
imul
mov
xchg
push
ds
sub
xchg
xchg
pop
gs
dec
aam
xor
xchg
mov
push
add
mov
jmp
es
jne
rolb
xor
mov
mov
mov
movsl
popf
sbb
sub
mov
cld
pop
lock
pushf
aaa
call
mov
mov
xor
mov
pop
sbb
adc
sub
mov
add
ljmp
cmp
xchg
cwtl
popa
jl
scas
test
jle
lods
add
addr16
imul
das
pop
mov
mov
outsl
push
popa
sarl
in
jnp
jnp
insl
adc
jne
jecxz
ja
aaa
inc
inc
clc
push
xor
xchg
sub
in
inc
mov
cwtl
pusha
repz
mov
mov
pop
sarb
mov
in
int
in
arpl
jo
sarb
push
mov
jg
scas
sub
jle
xor
add
outsb
lret
fwait
lahf
dec
in
pop
divb
dec
lock
aas
in
lds
pop
sbb
or
mov
clc
dec
jb
ljmp
jp
xchg
inc
leave
sub
and
lret
cmp
jo
fsubl
rdmsr
iret
inc
jns
pop
repnz
aam
inc
scas
mov
pop
xchg
sub
imul
iret
push
adc
mov
mov
les
adcb
mov
mov
mov
xchg
nop
mov
stc
jg
movsl
stc
xor
lret
lds
sahf
cs
mov
and
adc
push
testb
ret
xchg
lods
sarl
xchg
pushf
sbb
test
dec
mov
xor
or
cmp
adc
xor
xor
ja
sbb
push
sub
adc
fstl
cs
add
insb
mov
in
mov
adc
inc
in
stc
imul
cmp
sbb
or
dec
pushf
pop
bnd
bound
push
jno
repnz
lret
lods
imul
mov
xchg
pop
cmc
push
dec
mov
ljmp
insl
fs
mov
lret
imul
dec
sub
mov
mov
or
mov
nop
lea
xchg
and
fstps
and
std
mov
adc
jbe
add
push
mov
dec
xchg
outsl
dec
xor
fstl
hlt
popf
out
das
aad
pop
push
inc
popf
mov
shl
mov
dec
dec
sarl
lock
das
sbbb
jmp
repnz
jno
and
xchg
jge
ret
sbb
out
lcall
mov
and
fs
push
sbbb
cmc
aaa
adc
fadd
inc
sti
jl
xorl
cwtl
mov
jecxz
or
or
push
sub
imul
mov
ret
xchg
ficoms
addb
push
lret
cmc
test
mov
fwait
adc
decb
scas
ljmp
out
cmpsb
rorl
adc
in
sub
xlat
push
les
pop
orb
jecxz
popa
inc
pop
cmc
movsb
push
daa
sbb
out
push
sub
mov
sub
mov
jnp
push
dec
insb
jecxz
push
into
ja
es
fldcw
inc
call
adc
mov
sbb
xchg
and
clc
outsb
sbb
inc
mov
shr
sbb
in
xchg
or
in
add
test
in
sbb
movsb
test
outsl
scas
adc
add
pop
shl
aad
adc
add
int3
sub
pop
jecxz
mov
adc
jnp
xor
je
pop
repnz
and
sti
dec
cltd
or
push
xor
lahf
sahf
mov
loopne
insl
mov
shll
incb
shrl
movsl
mov
daa
push
pusha
fwait
imul
imull
shll
cmp
xchg
jne
mov
lods
xchg
push
mov
sbb
mov
das
in
mov
push
enter
stos
adcb
add
inc
or
jb
cld
aam
into
xor
fildll
mov
xor
shr
cmpsb
mov
jg
fistpl
mov
lock
cmpsl
insb
adc
lahf
xchg
es
int
push
cltd
test
je
push
push
push
repnz
call
sahf
addb
pop
sbb
mov
push
push
scas
movsl
add
ret
popa
lahf
cmpsb
insb
cmp
jbe
ret
adc
or
insb
xchg
push
cmpsl
inc
inc
xchg
xor
call
jb
outsb
and
or
add
sti
add
jns
ds
stc
jp
ss
cltd
shrb
pop
in
lahf
mov
js
or
cmp
test
stc
ja
in
cmpsb
fcoms
neg
sbb
cmp
hlt
and
out
mov
outsb
mov
jmp
pop
push
sub
add
pusha
jne
adc
cmp
inc
xor
sbb
stc
mov
ljmp
fcoml
mov
movsl
add
call
or
mov
cmpsb
push
in
cmp
fisubs
adc
push
insl
shlb
cwtl
dec
dec
xor
out
or
jnp
and
and
sti
cmp
push
test
mov
pop
add
push
jmp
dec
xchg
push
pop
mull
adc
mov
push
adc
mov
xchg
dec
cmpsl
outsl
nop
and
out
gs
cmp
jb
jmp
mov
cwtl
bound
xorb
inc
xor
cmp
inc
mov
adc
cmpsl
stc
stc
shll
pop
cld
stos
sub
pop
jne
sarl
rorl
xchg
lahf
or
out
xadd
js
in
imul
or
loopne
jo
int3
enter
fimuls
lea
xor
jo
nop
xchg
sub
shrb
mov
lcall
lea
jle
or
fs
insl
and
cltd
mov
stc
push
roll
push
adc
sub
xchg
cmp
push
and
fistl
icebp
fsubl
lock
mov
lahf
lods
mov
mov
push
push
xlat
or
inc
sti
adc
pop
in
arpl
dec
jp
xor
into
hlt
mov
scas
dec
faddl
cmp
add
mov
mov
ja
or
push
stos
jbe
rcrb
gs
das
ljmp
and
pop
sbb
imul
into
das
jp
push
or
and
push
cmp
xchg
movsl
das
fnstcw
inc
jp
push
sbb
add
scas
pop
pop
jge
pop
fildl
cmp
inc
inc
inc
rorb
mov
sahf
out
push
movsl
xchg
ss
xchg
jne
pop
cld
shll
sti
xchg
lret
icebp
push
je
and
aam
cld
mov
aas
ficompl
sbb
cvtps2pi
dec
das
sbb
cmp
xorb
dec
test
mov
mov
lods
lret
mov
stos
sub
stos
test
test
lcall
and
mull
push
mov
lret
and
jno
sbb
jmp
lods
sbbb
fdivl
shll
mov
imul
push
push
mov
lods
les
xchg
cmp
lods
nop
repnz
xchg
and
mov
test
loop
jns
jp
sbb
in
sub
idivl
leave
in
lock
imulb
sub
lret
pop
fnsave
out
push
pop
mov
pusha
jl
inc
into
lret
cmp
dec
movsb
adcl
xchg
das
mov
inc
adc
test
mov
adc
sub
sub
mov
dec
divl
sbb
inc
cmp
jo
cmp
sub
cmp
loop
in
ja
cmp
push
dec
add
fbld
xor
sbbl
jp
mov
push
fs
int
sbb
fstpl
sahf
adc
cmp
loopne
inc
or
mov
subl
jno
cs
mov
lret
aaa
es
mov
jge
inc
adc
adc
loopne
mov
pop
ret
bound
icebp
fnstenv
pop
jno
inc
inc
scas
pop
cwtl
int
xchg
loope
sti
mov
sbb
xor
les
sbb
adc
insb
ja
ret
aaa
imul
popa
mov
pop
dec
jae
stc
add
jnp
in
nop
cld
adc
jb
cltd
xchg
pop
sbb
mov
dec
push
outsb
jp
into
ret
push
jp,pt
lret
pop
mov
xor
movsl
cmc
jg
jmp
mov
and
jp
ja
ja
pop
push
cmp
je
ror
cs
xor
mov
xchg
ljmp
lea
and
inc
jecxz
xor
jge
stos
loope
popa
pop
js
pop
iret
pop
pop
sbb
adc
xor
sahf
mov
push
enter
jl
les
push
cli
mov
mov
mov
fwait
dec
add
in
and
mov
or
sbbl
pop
cmc
dec
aas
jmp
negl
js
cmp
nop
sahf
imul
loope
ljmp
mov
mov
push
ja
fwait
leave
out
nop
and
inc
data16
into
jmp
sbb
stos
sbb
js
cmpsb
mov
ljmp
push
pop
xor
cmc
pop
ss
ss
xchg
repnz
inc
jmp
insb
pop
dec
hlt
dec
pop
pop
movsl
test
pop
adc
fistpll
arpl
aas
lret
sbb
adc
cmpsl
test
mov
lds
xorl
loope
aam
hlt
fildll
pop
sbb
rcrl
pusha
cli
xchg
out
cltd
out
repz
sbb
fcoms
mov
mov
jge
ss
xor
popf
jecxz
pushf
ljmp
shlb
sarb
adc
jb
call
jle
leave
loope
pop
sub
aam
cmp
cmp
dec
shlb
push
xor
testl
sbb
js
dec
test
ss
cltd
push
jmp
loope
fisubl
xchg
jmp
cmp
and
test
add
stos
int3
ret
dec
movsb
stc
shr
jl
pop
scas
aad
mov
mov
jae
mov
adc
test
outsb
lds
add
mov
push
sbb
jne
in
clc
inc
sub
jecxz
or
sbb
adc
xor
xchg
adc
aam
cltd
adc
bound
cli
fs
push
and
lgs
mov
push
dec
shl
daa
sub
test
adc
pop
int
popa
xadd
dec
mov
int3
stos
jmp
shrl
sbb
inc
fcompl
sub
mov
das
push
cwtl
dec
mov
cmpsb
mov
sbb
jae
data16
aas
and
repz
cmp
pop
ds
sbb
fnstcw
ds
aad
daa
pop
pop
push
pop
xor
mov
lods
lret
leave
shr
jecxz
iret
ljmp
jno
shlb
aaa
push
sar
cmp
out
iret
dec
jbe
insl
xchg
mov
addr16
out
cs
fcomps
out
mov
xor
push
shlb
scas
mov
rorl
mov
inc
lods
insb
mov
popa
inc
pop
aam
mov
adc
arpl
mov
fcmovb
lods
xchg
je
mov
mov
xchg
dec
sbb
aas
subb
cmp
pusha
cmpsb
mov
jo
fwait
mov
jo
scas
loop
imul
and
jg
in
or
sub
dec
jl
jbe
or
lods
cmp
daa
xchg
loopne
xchg
sbb
stos
inc
stos
ja
out
mov
out
inc
or
add
fnop
xor
dec
loop
out
adc
scas
std
add
xchg
repnz
mov
xchg
mov
and
pop
icebp
sub
and
outsb
dec
pop
inc
push
mov
push
repnz
mov
mov
popf
fsubrs
sub
xor
jo
cmp
neg
mov
jnp
lds
pop
fisubrl
mov
mov
inc
or
lcall
adc
mov
xchg
sub
jle
iret
mov
pop
out
pop
movsb
adc
xchg
xchg
push
fnsave
movsl
rcll
mov
add
pop
mov
xlat
sbb
and
dec
imul
jns
test
jae
push
adc
push
bound
adc
out
or
pop
fimuls
or
ss
mov
mov
rcr
outsb
dec
ret
xor
stos
aad
xor
call
xor
dec
lcall
xor
or
or
daa
cmp
dec
xchg
sti
sbb
push
adc
movsl
aaa
jge
dec
pop
sub
fs
push
out
jge
xor
cmpsl
mov
inc
jp
push
daa
push
jg
cli
mov
push
stos
jmp
jge
call
sbb
outsb
jp
pop
ja
mov
mov
xorl
inc
inc
popa
pop
out
adc
and
pop
loopne
pop
sbb
movsl
sahf
jge
mov
les
push
in
and
dec
xchg
xor
hlt
adc
enter
hlt
int
inc
cltd
jbe
dec
or
cli
mov
in
bound
lods
xchg
int3
bnd
in
or
mov
mov
jae
xor
cmpsl
add
jp
mov
mov
xchg
pop
xchg
adc
adc
jp
ja
inc
mov
and
dec
mov
addl
push
or
ds
push
imulb
or
dec
push
xchg
les
cmp
mov
and
pusha
lods
fistps
std
mov
outsb
pop
cwtl
adc
jae
adc
xor
dec
mov
xor
repnz
dec
jnp
jno
scas
fcmovne
push
sbb
cmp
mov
push
cmp
cmp
lock
and
je
les
xor
ror
outsb
das
and
sbb
mov
mov
or
jecxz
bound
xor
pop
clc
or
das
mov
push
sub
outsb
mov
sub
xor
fsubs
cmpsl
xchg
inc
fs
mov
mov
cli
push
shlb
xchg
addr16
mov
sbb
nop
xchg
mov
outsb
or
adc
fsts
lret
jp
push
pop
jne
lods
je
out
or
call
movsb
insb
loope
push
and
fs
push
dec
mov
into
gs
mov
inc
sbb
outsl
fstl
aas
orl
add
or
movsb
inc
mov
or
xchg
mov
push
pusha
fwait
and
cwtl
push
out
fcmovnb
imul
dec
jns
aas
xchg
das
push
test
sbb
shll
test
sti
jbe
mov
xchg
rcll
fwait
push
leave
ljmp
and
jmp
push
dec
int3
out
arpl
mov
ss
cld
dec
mov
mov
mov
shll
push
mov
or
imul
push
sub
pop
push
les
cwtl
scas
pusha
lods
xchg
test
push
cmpxchg8b
leave
push
push
adc
xlat
cwtl
leave
fwait
inc
popa
xchg
jle
or
jl
shll
xor
sbb
rol
fxch
pop
fwait
sarb
imul
add
lcall
xor
fldenv
movsb
pushf
mov
repnz
sbb
push
jns
push
push
lods
dec
mov
mov
shrb
or
addr16
cwtl
dec
add
jnp
je
dec
pop
jne
enter
mov
incl
bound
ljmp
test
push
inc
xchg
mov
sub
cmpsl
pop
mov
and
hlt
mov
jl
jp
or
sbb
insb
mov
out
jne
mov
in
cmpl
pop
pop
xchg
inc
xlat
mov
push
testb
scas
adc
rolb
sbb
aad
hlt
in
mov
fildl
xchg
cmp
rcl
leave
out
xchg
mov
in
jecxz
out
jmp
jne
dec
gs
mov
dec
xchg
sub
mov
out
sbb
mov
icebp
out
mov
inc
iret
inc
aas
fstl
inc
cmc
inc
push
std
cli
mulb
mov
cmpl
sti
movsb
je
sub
lock
test
int
and
pusha
test
jbe
popa
in
adc
loop
or
cmp
sarb
pop
adc
cmpsb
xchg
jl
stos
fucom
fadds
adc
inc
add
scas
ret
mov
jp
xchg
lock
fcomps
xor
out
lret
mov
jno
adc
adc
cltd
sbb
pop
push
push
cs
insl
mov
push
ja
mull
inc
int
xor
jp
sbb
ljmp
pushf
xchg
icebp
pop
mov
fistl
or
cmp
dec
jns
bound
shrb
rcrb
xor
add
dec
lds
ret
mov
sbb
mov
mov
mov
or
adc
out
loopne
mov
jae
mov
push
push
push
xchg
mov
mov
sub
ljmp
inc
stc
fisttps
bsf
cmc
dec
mov
into
insb
es
lcall
test
in
xlat
sbb
jne
sahf
testl
xor
mov
dec
xor
pop
jl
movsb
or
popf
push
add
inc
into
pop
add
into
sub
xor
ja
in
mov
or
ds
movsl
mov
inc
inc
lds
sbb
sub
jg
push
ficomps
jns
nop
sbb
hlt
test
dec
mov
es
xchg
push
dec
imul
pop
adc
inc
mov
mov
mov
aas
loopne
lret
mov
dec
gs
dec
mov
xchg
adc
sbb
and
mov
jp
test
cs
test
ret
mov
imul
jae
int3
mov
imul
ds
lea
das
xchg
dec
fidivrl
mov
pop
test
add
dec
jmp
cwtl
aaa
inc
cmp
icebp
lods
push
mov
cmp
push
xor
out
call
je
mov
sub
mov
jb
cmp
shl
sub
cld
ds
scas
push
mov
aad
mov
mov
mov
or
jns
push
mov
iret
sbb
mov
cmp
outsl
sti
and
sbb
jmp
xorl
hlt
sbb
pop
out
stc
cmp
mov
insb
mov
fmul
add
movsb
outsl
mov
inc
js
lret
ss
fs
pop
aam
outsl
jge
stos
scas
mov
js
push
popa
mov
loopne
cmp
xlat
ja
cmp
lret
pusha
ss
js
mov
popf
pop
lahf
in
fwait
popf
inc
dec
outsl
jbe
push
sti
push
jns
mov
xor
jbe
ret
xchg
xor
or
and
xchg
jns
dec
mov
fimull
dec
and
add
jns
iret
cs
outsb
daa
mov
sub
seta
add
lea
movsl
mov
xchg
or
xorb
stc
mov
inc
scas
jl
dec
repz
cltd
mov
movsl
jl
and
ss
outsl
or
addb
cvtps2pi
lods
scas
fisubs
scas
dec
out
jecxz
mov
mov
loopne
add
mov
sbb
push
mov
jge
mov
leave
jge
inc
sub
popa
push
inc
lret
popa
pop
lcall
adc
fidivl
loop
in
sbb
cli
iret
outsl
leavew
lds
aam
fisttpl
push
insb
mov
push
add
pop
add
scas
addr16
into
ljmp
mov
sbb
lods
pop
push
mov
xor
inc
jl
popf
mov
loop
test
popa
cmpsl
imul
hlt
jmp
pop
inc
mov
loope
cmpl
add
sbb
add
aas
ret
insl
dec
or
adc
std
pop
push
les
sub
fs
mov
je
pop
and
fisttpl
cmpsl
pop
jns
sbb
fucomi
fsts
hlt
dec
insb
inc
cmpsb
xchg
jmp
in
fs
fidivs
xlat
enter
jle
dec
mov
mov
push
hlt
mov
add
or
pop
fs
pop
js
sbb
add
sbb
mov
jb
ja
stc
stc
add
xchg
xchg
adc
pop
fidivrs
add
aad
shll
pop
mov
jns
popa
dec
jle
aad
jge
add
outsb
iret
rcr
push
jmp
mov
into
adc
mov
mov
imul
push
inc
lea
sub
pop
push
xor
xor
and
and
adc
add
and
or
outsl
ret
cmp
adc
leave
lahf
sub
xlat
cli
into
xchg
lock
call
mov
pop
xor
adc
enter
dec
xor
movsb
and
or
jns
shlb
mov
add
hlt
das
scas
adc
test
add
push
inc
or
cmp
stos
fwait
arpl
mov
mov
mov
jle
pop
push
xchg
rcl
sbb
mov
cld
adc
xor
xor
push
mov
shll
adc
movl
cmp
lea
pop
fnstsw
lods
push
or
gs
push
shrb
cwtl
repz
mov
push
insl
jmp
adc
jb
fistl
insl
xchg
icebp
mov
push
jl
xchg
sti
outsl
stos
xchg
enter
jno
dec
fs
inc
xor
lock
sbb
shlb
pop
jne
enter
notb
inc
mov
push
xor
pop
test
jp
dec
dec
bound
mov
pop
or
test
jmp
mov
sub
add
rorl
xchg
enter
out
sub
pop
call
xor
sbb
into
fcomps
jae
xchg
adc
inc
mov
stos
clc
dec
scas
xor
lock
or
add
push
lcall
sbb
jo
adc
xchg
flds
int3
data16
xchg
push
fdivrp
loopne
cld
cmp
pop
je
andb
in
jl
sub
add
xchg
jae
push
addr16
ljmp
arpl
pushaw
add
cltd
sbb
in
dec
notl
test
stc
fimuls
arpl
iret
das
mov
daa
cmp
mov
push
fstpl
roll
fs
pusha
mov
mov
fnstsw
sub
icebp
push
imul
loop
push
xor
loop
pop
shl
xchg
pop
lods
shll
in
popf
xorl
and
cmpsb
mov
insb
repnz
js
into
push
outsb
xor
jns
mov
lock
xchg
cmpsb
popf
adc
adc
lea
fstps
jne
inc
imul
iret
pop
inc
aad
repnz
mov
fmuls
pop
cmpb
fisttpl
movsb
mov
xchg
pop
pop
jb
jmp
mov
and
insl
push
jle
xchg
aas
nop
add
aas
xor
pusha
push
std
or
cmc
ds
mov
xchg
daa
int
leave
lret
insb
mov
mov
mov
and
xchg
pop
push
fisttpll
cltd
dec
jp
add
aaa
jmp
test
push
adc
nop
inc
mov
sbb
sbb
aad
frstor
scas
ss
mov
imul
aad
aam
fldl
jl
jo
test
call
cli
shrl
je
jl
mov
xchg
aam
mov
imul
repz
jns
and
lods
icebp
or
pop
mov
inc
inc
push
push
xchg
js
mov
push
mov
pop
adc
call
fsubr
xchg
inc
icebp
sub
sbb
xor
mov
dec
or
fisubs
pop
push
push
bound
lds
mov
bound
mov
pop
je
shlb
and
dec
xchg
xchg
cmp
xor
or
lret
push
adc
xchg
xchg
mov
stc
hlt
push
jo
jns
mov
add
faddl
cld
roll
bound
and
rorl
jbe
or
flds
xchg
fsubrs
jae
inc
ret
inc
test
mov
xchg
dec
std
sub
scas
rorl
sbb
loop
sub
lds
pop
add
inc
jge
mov
addb
fwait
andl
and
stc
popa
mov
mov
jge
jge
in
adc
pop
movsb
cli
movsb
jbe
or
es
scas
jbe
les
es
xor
xchg
test
aas
mov
push
push
sub
cmp
hlt
in
dec
adc
adc
in
pop
jp
cli
int3
xorl
sub
fldcw
add
enter
inc
cld
lods
jecxz
jge
jecxz
fucom
dec
js
mov
fs
enter
push
add
aam
push
mov
cmp
mov
jmp
push
and
fistpll
out
mov
inc
lret
xor
xchg
mov
ror
jne
nop
pop
pop
outsl
mov
je
xchg
fcomp
sahf
xchg
dec
ss
sub
and
xchg
out
pop
out
sbb
enter
xchg
mov
jnp
xor
inc
jne
hlt
aaa
inc
mov
pusha
stos
movsb
sbbb
xor
and
ret
sar
xor
push
cmp
sbb
pop
jecxz
push
sbb
ret
jb
push
shrb
and
sbb
dec
dec
sub
jae
push
daa
push
shll
test
and
xchg
cmp
jg
dec
xchg
sbb
and
jg
adc
fwait
aad
push
fnstcw
adc
popf
rcll
jo
lods
adc
popa
sub
jp
mov
cltd
cli
out
add
cmp
fmulp
stc
or
outsb
push
mov
test
push
sbb
sub
push
mov
xchg
inc
pop
mov
outsb
xor
jp
dec
pop
and
fidivrl
bound
pop
fiadds
sub
mov
mov
filds
sbb
ret
cmp
mov
sub
stc
mov
sbb
cmp
fcoms
pop
aam
cmp
xor
insb
jb
sub
popf
mov
inc
jl
mov
dec
stc
addr16
out
clc
and
push
outsb
mov
xchg
adc
call
jno
mov
rolb
and
sub
sbb
ja
leave
pusha
fisubs
push
xchg
shll
cwtl
xor
mov
mov
jmp
fcomps
icebp
adc
insb
in
mov
pop
sbb
scas
dec
adc
push
testl
jge
xchg
ds
xor
movsl
pop
lcall
or
or
loope
sub
sahf
ljmp
mov
inc
lock
dec
adc
lret
xchg
out
dec
jl
out
xchg
call
insl
int
jae
sub
ljmp
cmc
outsb
in
xchg
pop
pop
lods
popa
mov
xlat
bound
xor
ss
fildl
cmp
out
push
rolb
cmp
ja
xor
inc
stos
push
repnz
add
mov
lock
jmp
inc
jae
loope
sub
adc
dec
sahf
aad
or
jl
add
sub
in
cmpsb
ret
ja
cmp
jne
cmp
jb
xor
clc
cld
movsl
or
add
subl
push
push
fbld
sbb
or
daa
jmp
popa
in
sbb
adc
or
aas
push
aam
push
jo
repz
sahf
sbb
mov
or
xchg
aad
movsl
xor
or
adc
roll
test
int3
nop
add
push
je
or
dec
mov
push
mov
je
orb
jnp
fwait
cmpsl
insl
cmp
inc
fisttpll
fldl
mov
daa
fmull
filds
and
cmc
sbb
hlt
out
in
pop
push
dec
bound
push
ljmp
mov
scas
std
or
fisttpl
mov
xor
hlt
sub
mov
in
cvtps2pi
lret
jecxz
pop
push
dec
and
cmp
lods
push
aad
push
jae
push
dec
andl
out
pop
test
imul
inc
adc
lds
scas
out
test
sub
xchg
lods
add
rol
lcall
inc
outsb
es
mov
or
add
int
ds
pcmpgtb
divl
cmpsl
lret
cmc
cld
in
push
jb
push
adc
rcll
pop
jns
xchg
fwait
cmp
push
dec
cli
sub
xchg
and
sub
imul
shlb
adc
push
cmp
cmp
cld
dec
xchg
sbb
pop
test
or
insl
add
out
fs
xchg
mulb
xchg
push
repnz
cmp
pop
jmp
fcmovbe
adc
in
outsb
loop
mov
or
mov
sti
iret
in
loop
mov
fists
ret
mov
xchg
das
negb
add
inc
in
add
icebp
xlat
push
push
jo
cmp
xor
jns
cli
jnp
xchg
xchg
pop
jg
and
xor
xorb
mov
cwtl
stc
pushl
sbb
cmp
je
jno
test
adc
jb
dec
jle
hlt
xor
es
lods
and
mov
jmp
mov
sbb
sbb
cmp
hlt
sarl
pushf
in
xor
push
xchg
and
dec
jp
jle
hlt
in
inc
sub
xlat
sarl
push
sbb
mov
sahf
inc
ds
pop
jle
add
adc
aaa
jnp
add
mov
sbb
in
and
fisubs
cmp
out
adc
out
add
fdivrl
mov
xchg
mov
iret
pop
in
jae
fs
pop
fsubs
sbb
out
outsl
fstps
sub
inc
xor
rolb
rorb
aad
and
mov
es
push
push
int
push
mov
lcall
insb
cmp
jge
push
arpl
push
add
push
mov
xchg
add
das
sbbb
loopne
test
mov
insl
and
and
fs
add
iret
push
sbb
cmp
and
insl
pop
insb
pusha
pop
rolb
push
cmpsb
and
int3
jge
mov
xor
pusha
insb
mov
or
mov
pop
mov
divb
pop
dec
ljmp
push
ret
cmp
push
outsb
mov
mov
mov
mov
outsl
pop
sub
xor
mov
pop
movsb
xor
xor
imul
fisubrs
call
mov
jecxz
inc
jo
or
iret
outsb
sub
cmp
lds
jecxz
inc
dec
pop
adc
xlat
aam
sub
push
iret
ss
repz
das
adc
subb
add
in
rolb
mov
cmp
and
xor
or
mov
imul
fs
fsubp
repz
jae
outsl
cltd
divl
add
mov
fdivl
nop
fmull
push
add
add
mov
stos
jge
nop
fdivrs
repz
xlat
repnz
cwtl
lods
mov
xchg
in
fmuls
push
mov
std
gs
or
insl
dec
mov
add
int3
repnz
movsl
fsts
in
cmpsl
dec
outsb
xor
dec
stos
add
or
jae
icebp
xor
aad
adc
mov
push
or
dec
cs
jno
sarb
pop
push
mov
rorb
xchg
add
add
dec
cmpsb
cwtl
add
xchg
aam
jae
sbb
das
mov
mov
int
add
add
dec
jnp
gs
mov
sub
sub
test
add
mov
jbe
xor
rcrl
xchg
adc
adcb
dec
nop
mov
fsub
mov
mov
sbb
sub
sub
sbb
std
xchg
cli
test
xor
faddl
push
push
add
push
repz
stos
mov
es
adc
movsl
cmp
sbb
mov
add
int3
out
push
lods
mov
pop
xchg
xor
jae
add
xlat
mov
jne
dec
jecxz
loope
sub
loopne
pop
insb
nop
jo
xchg
fdiv
pop
into
lret
sti
push
pop
addr16
ljmp
and
xchg
xchg
or
and
rcll
cwtl
cmpsl
jbe
popa
shrb
outsl
cmp
popf
jno
cmpsb
add
aaa
add
inc
and
in
daa
leave
xchg
scas
fisubrs
sub
jnp
mov
xchg
popf
lds
and
mov
add
mov
rorb
adc
cmp
and
clc
sub
dec
lahf
push
popf
test
dec
push
ja
sbb
sub
adc
mov
xchg
mov
mov
inc
mov
rcl
dec
mov
popa
push
jge
add
or
mov
fadds
mov
pushl
loop
dec
movsl
inc
scas
jp
mov
les
pusha
das
push
xchg
mov
mov
adc
loope
mov
test
xchg
xor
sbb
fsubrp
push
sub
int3
pop
push
shlb
orl
in
xchg
xchg
data16
add
add
jnp
mov
ljmp
push
pushf
adc
lcall
dec
imul
clc
xchg
mov
fldl
mov
es
sbb
mov
xchg
mov
bound
sti
jmp
mov
sahf
and
pop
jno
fistpll
test
outsl
loope
negl
leave
xchg
pop
xchg
aad
insl
pop
pop
popa
xchg
pusha
mov
push
cmp
test
dec
dec
mov
in
mov
push
aad
movsb
adc
orl
sbb
push
mov
mov
jb
or
sub
cmp
and
fsts
and
je
div
and
cmc
xor
mov
cmp
nop
shrb
jno
xchg
xchg
jb
insb
lcall
bound
roll
and
in
rcll
xchg
call
inc
repnz
insl
sti
mov
or
sbb
xchg
dec
outsb
jecxz
loope
add
xchg
sbb
int
shr
push
push
cwtl
testl
cmovnp
push
insl
mov
adc
ret
sbb
stos
lret
jb
arpl
jmp
and
out
std
pop
fwait
int
mov
pop
and
adcb
pop
jne
scas
movb
test
dec
hlt
dec
dec
and
mov
cmp
idivl
sbb
add
pop
cli
xchg
mov
jb
in
xor
or
xor
dec
xchg
xchg
mov
mov
xor
xchg
repz
ficomps
clc
adc
scas
sub
and
jmp
data16
insb
in
ss
std
pop
test
pop
mov
ret
daa
imul
pusha
mov
rorb
ficomps
es
mov
jle
mov
cmpsb
mov
sbb
mov
jge
lret
and
addr16
es
xchg
das
lahf
jno
or
mov
mov
ds
in
push
and
jbe
push
pushf
cmp
das
lahf
movsl
nop
int3
inc
mov
pop
test
xor
pop
lret
mov
xor
xchg
mov
rolb
xchg
mulb
xor
popf
in
pop
mov
mov
ret
orl
into
ljmp
cltd
or
cmpsl
sti
pusha
cltd
int3
cmp
sti
sahf
scas
adc
cwtl
adc
xor
sub
cmp
mov
and
outsb
sahf
test
rcrl
cli
mov
jg
mov
std
jns
and
mov
sahf
xor
cli
movsb
mov
out
ret
shrb
hlt
xchg
and
mov
cmp
push
xchg
push
inc
fisubs
dec
sbb
xchg
dec
xor
pop
jg
stos
jecxz
adc
or
mov
movsb
loope
pop
add
repz
incb
jb
dec
inc
out
or
inc
outsb
out
push
insl
jmp
add
imul
xor
sub
dec
and
sub
pop
and
mov
jbe
hlt
outsb
jo
lcall
sbb
mov
xchg
mov
push
xor
outsb
popf
es
jbe
xor
iret
mov
add
inc
mov
jmp
jmp
jne
lahf
mov
mov
xchg
xchg
clc
repnz
sbb
or
pop
out
cmc
scas
lret
pop
xchg
into
push
stos
push
movsb
jmp
jmp
xor
push
xor
push
xlat
pop
subb
dec
lcall
leave
xchg
cwtl
jmp
xchg
jnp
bound
es
outsl
sbb
subl
outsb
ja
adc
stc
popf
loop
xor
int
daa
xchg
popf
push
cmp
mov
jmp
cmp
repz
sub
mov
test
and
pop
mov
add
cmpsb
repz
rcrb
loope
arpl
es
jp
sbb
je
negl
adc
push
imul
xor
xchg
adc
push
mov
dec
lods
test
xor
adc
xchg
loop
mov
ss
adc
fisttpll
cmp
sub
and
push
imul
divb
jl
repz
cmp
rclb
sti
das
clc
aas
jne
inc
mov
icebp
out
test
jne
mov
and
insl
push
stc
push
insl
aaa
scas
pop
adc
push
xor
jno
adc
scas
sbb
and
fsts
in
repz
jle
les
std
test
sub
data16
movsb
imul
stc
mov
iret
pop
sbb
cmp
testl
jno
pop
int
pop
gs
cmp
xchg
in
jne
stc
outsb
fstpt
addr16
lds
mov
cmp
xchg
inc
rcr
lret
pusha
fldcw
adc
jns
data16
clc
cli
xlat
inc
movsb
inc
stc
fdivl
or
ret
add
push
test
xor
stos
divb
xchg
scas
sbb
lret
leave
daa
cmpb
repnz
cmp
scas
arpl
cmpsl
push
mov
inc
popa
movsb
dec
mov
testb
out
fiaddl
mov
mov
test
es
out
or
in
adc
xor
inc
sub
jnp
lock
shr
cmp
hlt
in
hlt
jo
ret
sbb
and
rolb
or
push
and
ror
ret
sbb
lds
in
in
lcall
dec
das
cmpsb
mov
js
mov
sbb
jp
popf
mov
popf
pop
test
incb
movsl
cmp
dec
inc
mov
rolb
jno
ret
push
inc
inc
ljmp
int
or
xor
daa
and
mov
and
inc
movsl
jle
or
fwait
std
int
or
ds
dec
push
xchg
mov
adc
data16
repnz
push
flds
jns
or
out
add
dec
sbb
lods
mov
add
mov
jg
rorb
movsb
cmp
iret
fbstp
inc
xchg
cmpsl
scas
inc
pop
mov
into
mov
mov
popf
adc
jge
maxps
and
xlat
inc
and
push
inc
mov
fimull
dec
mov
fxtract
inc
dec
inc
mov
scas
sub
mov
mov
cmc
mov
pop
mov
je
or
mov
loopne
sub
mov
test
mov
lcall
fs
dec
mov
out
sbbl
mov
xchg
repz
stc
enter
aam
mov
pop
stc
or
or
movb
xlat
push
test
mov
push
jae
pop
mul
scas
inc
lahf
shrl
outsb
lahf
ss
sahf
cltd
push
dec
dec
out
js
cmpsl
sbb
sbb
jb
adc
insb
or
test
inc
out
sub
clc
inc
iret
loope
int3
push
ss
add
ss
cmp
mov
lahf
lock
or
push
jne
aas
faddl
jbe
cmp
jle
cs
or
xlat
addr16
test
pop
jp
mov
jmp
scas
xchg
jbe
lds
mov
sbb
push
mov
rcll
cmpsb
cs
cli
push
adc
dec
pusha
inc
movsl
in
xor
push
test
mov
adc
inc
jb
add
jle
repnz
scas
ljmp
loop
pop
adc
xchg
mov
iret
mov
aas
das
xor
cmp
xlat
and
fstpt
out
pop
mov
push
rcll
fimuls
mov
sub
and
fcoms
cld
adc
lret
add
xchg
bound
out
outsb
aaa
ljmp
pop
cmp
or
and
jns
push
jmp
jb
mov
xchg
insl
loop
cmpsl
adc
and
jle
push
out
cmp
cwtl
stos
sbb
xor
lahf
and
inc
sbb
mov
cltd
inc
dec
jb
add
or
mov
or
xor
pop
out
in
into
nop
in
sarb
mov
les
gs
lret
das
jge
jo
in
pop
call
fmull
cmovns
popf
fdivrs
push
jle
call
int
vpcmov
mov
push
out
je
pop
ret
mov
jmp
xor
xchg
pop
dec
jns
fdivrl
mov
addr16
push
hlt
add
lock
in
in
sbbb
mov
hlt
lret
mov
lods
sbb
push
adc
xor
in
cli
leave
loop
mov
sub
fldt
cmp
mov
popa
sub
and
xchg
ljmp
outsb
dec
scas
loope
mov
mov
pop
mov
fcmovnbe
xchg
xor
push
icebp
outsb
jbe
jbe
pop
lds
jl
or
outsb
mov
cmp
jmp
js
ljmp
aaa
xor
outsl
and
loope
lret
mov
pop
out
xchg
seta
and
icebp
push
xchg
mov
mov
cmp
arpl
aaa
mov
enter
mov
inc
aam
xor
loopne
rcl
jecxz
mov
inc
scas
xchg
push
fsubs
push
stos
lock
iret
cmp
xchg
ret
cltd
fnsave
fs
lahf
push
jb
mov
cli
adc
xor
mov
jge
pop
mov
lea
cmp
out
cli
mov
loope
adc
add
movsb
iret
lods
inc
mov
clc
push
stos
movsl
gs
pop
sbb
dec
orb
icebp
bound
adc
out
mov
mov
cmp
jo
and
std
lds
or
in
mov
stos
cmp
fiaddl
or
popf
into
stc
jnp
or
int
sub
out
mov
or
add
mov
xor
jnp
lahf
inc
xchg
ljmp
xchg
das
push
adc
or
sti
pusha
mov
xchg
int3
jnp
sahf
add
inc
out
adc
or
out
mov
test
dec
test
in
or
jne
pop
inc
fidivs
jmp
int3
xorl
xlat
mov
gs
add
xor
leave
mov
cmpl
in
lcall
mov
stos
in
mov
loope
add
mov
mov
shr
jmp
pop
sub
mov
mov
inc
pusha
push
xchg
movsl
inc
or
stos
ret
cli
cmp
mov
fists
adc
pop
sarb
mov
mov
xor
xor
mov
cwtl
ret
fcomps
std
enter
xchg
ret
inc
xchg
shl
dec
push
and
pop
xlat
out
xchg
fwait
cmpsl
out
cli
inc
dec
fsts
lock
add
pop
cmp
incl
add
push
cmp
jo
movsl
scas
sub
aaa
sub
add
lret
dec
mov
adc
mov
sub
inc
lret
push
cmp
out
subl
cmp
adc
cmp
cltd
data16
push
sbb
stos
add
pop
push
rorl
push
push
xchg
mov
icebp
lret
popa
movsb
dec
sub
push
sbb
xor
fcoml
push
sbb
push
in
mov
outsl
mov
mov
es
int3
roll
or
pushf
dec
adc
and
lret
xor
popf
jno
sbb
pop
fistl
rcll
jg
nop
in
sbb
add
subb
or
out
or
in
jno
stos
loope
inc
shl
pop
push
mov
xor
rcrb
mov
jnp
jge
add
fistpll
cmpsb
mov
push
mov
lahf
mov
stos
or
adc
daa
cs
xchg
test
sub
mov
and
fisubl
pop
push
aam
xchg
fs
test
or
push
sub
sbb
sbb
jl
xor
outsb
and
mov
sub
out
inc
pop
xchg
dec
push
insl
mov
ja
sbb
cmp
gs
insl
cld
push
outsl
dec
jne
jne
or
ror
call
cmpb
repz
bound
inc
stos
and
rorb
push
jl
inc
cmp
or
xchg
movsl
or
mov
dec
rcrl
ljmp
jae
push
das
add
mov
push
and
dec
cmp
fs
pop
mov
sbb
pop
push
xchg
out
enter
lcall
in
dec
fistpl
or
cwtl
sti
out
pop
and
cmpsb
nop
inc
rclb
out
adc
pop
mov
and
xchg
or
and
fwait
sbb
js
fists
outsb
pop
mov
pusha
inc
shl
add
js
fxch
loopne
add
cmpsl
iret
rol
aaa
fistl
push
inc
cmpsb
sarl
in
push
sub
xchg
and
outsb
dec
dec
jno
cmc
sbb
xor
outsl
popa
jo
and
add
imull
mov
or
lods
aad
push
dec
xchg
mov
pop
jae
imul
aas
daa
cmp
arpl
xchg
repnz
jp
cmp
andb
pop
xchg
jbe
lock
push
pushf
cwtl
lret
lahf
jne
pop
lret
outsb
iret
out
add
dec
fninit
pop
xor
cmp
sarb
mov
jns
dec
mov
ja
fdiv
dec
or
mull
dec
pop
test
pushl
movsb
or
xchg
lock
movsb
cmp
or
mov
jg
or
in
adc
xchg
ret
jbe
or
adcl
es
mov
lcall
push
xchg
push
sarb
or
mov
inc
pop
negl
jge
mov
enter
dec
xor
sbb
sahf
outsb
pop
add
imul
and
jl
xor
inc
inc
xor
dec
inc
aam
daa
cmpsb
int
sub
insb
sub
insl
in
int
scas
adc
add
insb
mov
sub
mov
sti
xchg
int3
cmpsb
daa
lret
or
jmp
addr16
lods
add
fmuls
call
fstl
or
scas
arpl
inc
sarb
aas
fdivrl
push
jg
sti
inc
nop
sbb
lods
shll
sbb
rcl
mov
mov
or
ror
push
mov
mov
lods
cld
jnp
adc
cmp
and
jb
jmp
movb
pop
and
sti
inc
jp
fistl
sbb
mov
mov
jo
inc
push
shlb
addb
int
push
sahf
in
aaa
lods
aaa
scas
data16
jge
pushf
dec
ret
out
cli
mov
xchg
sbb
and
mov
and
sub
cmp
js
in
les
push
cltd
sbb
into
pop
xor
jne
dec
ret
and
jle
mov
test
fwait
mov
adc
popf
int3
inc
dec
scas
ja
jg
fstps
xchg
popa
add
pop
sub
rorl
and
cmp
ficomps
or
push
xor
dec
in
popf
cmp
fdivrl
fsubs
pop
pop
xchg
lds
rorb
pop
sub
movsb
mov
or
sub
js
mov
jnp
cmp
push
lcall
fmul
cmc
add
repnz
gs
xchg
inc
sbb
or
mov
loop
xor
mull
mov
mov
xor
push
insb
jae
lds
sub
jno
push
stos
xchg
fs
dec
enter
mov
aas
sti
xchg
xor
push
pop
or
sbb
in
push
fcomp
dec
nop
lret
les
jno
out
lea
sub
loope
push
push
mov
push
scas
es
xor
stos
sti
push
jo
in
ja
stos
dec
xchg
jbe
testl
jae
sbb
fstpt
test
xchg
int
shlb
jno
jmp
bound
stos
xchg
stos
mov
or
xor
loop
add
loopne
pusha
mov
icebp
ja
or
mov
sub
or
cmpl
es
xor
add
lods
dec
mov
xchg
pop
add
jge
push
mov
pop
clc
xchg
add
outsb
std
call
ficoml
pop
cmpsl
lea
aam
mov
loopne
inc
push
push
xchg
cmpsl
stos
repz
sti
jbe
ret
cmp
fmuls
jo
cmp
mov
mov
jle
dec
popf
xlat
cmp
aam
jns
loope
lret
cmp
mov
aaa
je
addr16
jl
adc
mov
mov
add
sub
jb
in
add
cmpsb
mov
fcmovbe
cltd
cli
jo
repnz
subl
sub
cwtl
xor
int
or
in
icebp
in
inc
leave
hlt
das
lods
scas
xchg
dec
push
lcall
sub
insb
out
iret
lcall
mov
imul
popa
adc
and
push
aaa
pop
repz
mov
inc
andl
fprem1
sub
addr16
outsl
mov
aam
cmp
push
sbb
ret
lret
cld
daa
fcmovnu
sub
inc
cmp
imul
mov
lcall
shlb
subb
or
dec
add
orw
jnp
loope
adc
scas
in
dec
xchg
jns
es
and
jl
jg
out
lods
jo
sahf
sahf
in
aas
pop
mov
mov
and
mov
sub
pop
inc
sbb
test
mov
out
cmpsb
sti
sti
ljmp
push
popf
cmpsb
fildl
push
in
out
cmpsb
and
jecxz
jno
hlt
or
jmp
call
dec
sbb
inc
push
and
mov
stc
std
add
sub
mov
repnz
and
pop
push
ja
fdivr
pop
lock
shll
cmp
scas
inc
shr
nop
dec
cmp
bound
push
mov
cltd
inc
jp
pop
adc
adcl
jno
cmp
jno
adc
iret
sbb
arpl
out
dec
push
cmc
gs
adc
push
jbe
inc
mov
jl
outsl
jmp
dec
add
xchg
insb
out
or
xchg
fstpl
dec
dec
mov
xor
mov
xor
out
movsl
iret
xchg
fstp
jg
enter
repnz
movsb
popf
mov
iret
cmp
xchg
sub
je
popf
in
mov
mov
pop
movb
mov
mov
roll
jmp
addr16
fwait
stc
mov
pop
es
ficomps
push
daa
andl
js
push
into
data16
push
je
jbe
adc
in
outsl
jecxz
push
jno
scas
sahf
or
fnsave
sahf
mov
popf
in
mov
inc
jge
sbb
fdiv
fstps
cwtl
aad
jno
mov
xor
mov
nop
push
fcompl
dec
pop
mov
cmpsb
in
pop
aaa
cmp
add
stc
stos
mov
ficoml
mov
in
mov
mov
test
shlb
out
xor
fsubr
popf
and
fwait
das
adc
dec
mov
les
scas
inc
and
push
outsl
testl
movsl
xlat
dec
mov
adc
mov
sti
add
pusha
dec
dec
mov
sub
lods
add
scas
xlat
cmp
std
fdivs
inc
call
or
inc
push
mov
aam
daa
dec
cmpsb
jmp
xchg
test
and
push
imul
sub
enter
or
in
dec
pop
xor
push
xchg
ds
jmp
inc
sub
cmp
mov
hlt
hlt
mov
pop
jne
push
lea
cmp
pop
inc
jb,pt
dec
xchg
jle
adc
pop
dec
in
daa
loop
stos
aaa
mov
daa
ret
fdivl
insl
repnz
stos
jne
jno
mov
nop
mov
out
pushf
pslld
inc
dec
jge
inc
push
mov
popl
sti
mov
xor
mov
dec
push
or
test
das
addl
lods
and
pusha
movsb
sub
cmp
mov
push
mov
jnp
pop
out
addl
inc
nop
movsl
int
stos
daa
in
out
pop
outsl
jo
pusha
rcrl
imull
jnp
cli
adc
mov
jb
mov
mov
hlt
pop
jnp
repnz
push
lret
jne
aaa
sahf
fimuls
stos
ljmp
ret
xor
adcl
or
test
jns
and
in
jmp
mov
int
sbb
scas
adc
sub
add
loope
and
lock
and
insb
or
cmp
push
mov
aaa
divb
jno
imul
jmp
inc
or
mov
dec
call
movsb
aad
notb
jle
test
xchg
and
cmpsb
fisubrs
adc
dec
ret
inc
fists
mov
push
mov
dec
add
mov
or
jb
mov
ficompl
mov
push
mov
lea
pushf
jns
roll
xchg
int
aam
fcmovnbe
push
popa
lods
sti
dec
aam
lea
mov
dec
xlat
mov
jne
inc
adc
test
jne
mov
jmp
mov
lret
adc
or
inc
icebp
mov
leave
outsb
lcall
cltd
lahf
push
xchg
std
sbb
push
xor
inc
sub
xor
add
inc
andb
xor
int
mov
push
mov
cmp
inc
loopne
sub
inc
dec
adc
cwtl
sarb
cwtl
mov
cmpl
loope
and
out
add
xor
in
pop
test
popf
xchg
push
lret
push
out
mov
ss
movsb
imul
stos
fwait
imul
push
cs
adcb
xchg
lahf
push
movb
jmp
call
out
pop
jge,pt
insb
lahf
sbb
rorl
add
pop
ja
inc
test
sbb
fwait
lods
fisttps
test
icebp
arpl
scas
xor
fsubrp
sahf
dec
call
ss
inc
cli
jns
jns
clc
lcall
push
xchg
jne
movsl
adc
xor
in
jp
add
icebp
inc
dec
cmpsl
push
sahf
dec
xchg
adc
mov
add
lods
insb
jg
cmp
sbb
pop
mov
mov
pop
adc
cmp
pop
sub
je
sahf
xor
push
insb
mov
pop
xchg
push
rcrb
ret
ja
sub
in
push
mov
jmp
mov
lret
lds
rclb
in
aad
mov
pop
lret
dec
subl
jb
inc
inc
int
dec
xchg
xor
xor
jno
std
rclb
mov
pop
cmpsb
adc
mov
xchg
cmp
es
cmpsl
int
mov
lods
jne
imul
mov
fcoms
fucomp
xor
push
lret
ds
mov
pop
inc
jle
imul
lahf
stc
sbb
inc
movsb
daa
hlt
stos
leave
or
iret
popa
scas
mov
aad
add
les
mov
dec
xchg
pop
mov
push
cwtl
push
aad
rolb
cmpsl
roll
out
inc
adc
and
dec
lahf
mov
push
arpl
shll
pop
aam
inc
movsl
stos
jnp
jne
call
xor
xchg
add
rcll
sbb
cmp
lds
sarb
dec
adc
sbb
mov
cmp
cmp
repnz
mov
push
ret
xor
test
cmp
ja
pop
test
mov
rcr
testl
mov
push
lahf
loop
pop
add
imul
js
mov
xor
fistl
loop
out
sub
jae
cmp
dec
jl
push
and
cmp
jmp
imul
push
les
xor
scas
icebp
adc
sarl
ds
xlat
lcall
push
out
or
mov
sub
jno
push
cld
lods
ja
movsb
pop
pop
mov
or
add
data16
nop
dec
sbbl
or
pusha
or
jmp
jnp
xor
jmp
add
iret
xchg
jne
push
mov
lock
mov
enter
repz
push
or
fnstenv
cmpsb
jnp
xor
pop
aam
cld
frstor
das
mov
fstpl
fst
data16
mov
sqrtps
iret
hlt
jecxz
dec
sub
mov
imul
in
repz
neg
xor
fdivl
add
mov
mov
and
adc
cs
mov
push
loop
mov
sarb
outsb
movsl
cmp
jbe
mov
icebp
xchg
mov
ret
orl
cmovbe
xor
call
mov
movsl
adc
in
fs
bound
int3
lea
in
adc
mov
adc
pop
xor
xchg
pop
lods
mov
xchg
cwtl
inc
cmpsl
repnz
ljmp
adc
xchg
jb
xchg
xchg
mov
mov
jae
outsb
pop
pop
xchg
push
pshufw
inc
ss
addr16
xchg
lahf
adc
lea
lods
pop
push
dec
sub
push
mov
lock
inc
dec
pop
out
shll
add
add
xor
das
cs
scas
je
nop
rcl
gs
jae
or
loop
sbb
sbb
lret
add
cmp
and
add
std
adc
xchg
xor
cmp
insl
cwtl
cmp
sub
adc
jmp
pop
dec
jl
scas
pop
hlt
bound
inc
inc
movsb
push
aas
lcall
inc
sub
pop
aas
mov
jo
mov
testb
push
fimuls
push
inc
scas
test
push
ds
mov
mov
std
adc
je
lcall
add
sti
push
pushf
div
lods
sbb
gs
mov
adc
jne
rol
push
and
inc
test
pushf
js
scas
insl
add
loope,pt
push
and
ret
push
mov
stos
mov
pop
jp
aas
xchg
xor
fisttps
cmc
pop
jmp
xor
das
dec
sarb
data16
mov
mov
nop
fwait
pop
jmp
push
into
out
dec
dec
xchg
xchg
ffreep
push
mov
int
xor
push
push
or
mov
cmpl
push
fwait
idiv
mov
cmp
jg
clc
cmpsb
aad
add
enter
pop
mov
shll
xchg
push
jae
outsl
push
popf
inc
insl
rcrb
fsubp
mov
dec
lods
out
ljmp
xchg
add
jle
dec
aas
pop
xchg
lds
data16
sahf
mov
stos
ret
sti
dec
imul
insb
hlt
jle
popa
cld
je
test
ja
xlat
push
cmp
sub
cltd
inc
imulb
icebp
xchg
in
in
ret
fisubl
push
out
sahf
mov
mov
mov
lods
cmp
add
inc
mov
in
or
sbb
dec
cmp
adc
dec
sbb
js
xchg
fs
adc
in
call
sbb
movsb
mov
jns
ljmp
xor
mov
pop
pop
insl
xor
or
sbb
nop
insl
add
push
adc
test
jo
ret
pop
jne
test
mov
bound
incb
data16
mov
mov
or
fisubrl
adc
popf
dec
mov
icebp
mov
sbb
fiadds
xor
cmp
mov
or
fldt
cmp
sbb
xchg
mov
mov
je
rorl
sub
jmp
push
popf
insb
aaa
out
mov
cmp
lock
fwait
es
rorb
cmp
add
out
shl
xor
sbb
dec
imull
mov
xor
jge
mov
adc
rclb
dec
dec
pop
shl
cwtl
mov
in
out
mov
sub
cmp
popa
mov
lret
in
or
and
mov
fldl
adc
scas
daa
xlat
xor
ret
push
cmp
mov
mov
into
and
lahf
xchg
sbb
push
add
adc
ficomps
jb
cltd
adc
icebp
fsub
cmp
mov
push
ret
fwait
ret
hlt
in
cmpsb
movsl
stos
adc
loop
fldl
mov
mov
negb
sub
jae
sub
shlb
leave
sub
add
iret
bound
adc
inc
dec
sub
cmp
pop
cmp
filds
mov
repnz
xchg
pushf
cwtl
aam
fwait
pusha
insl
cmp
xchg
xlat
ljmp
push
lds
cmp
lods
les
lea
jmp
cmpsl
sbb
add
xchg
xchg
ret
mov
inc
test
aas
jle
fnstsw
mov
fldt
adc
cmp
lahf
inc
rcl
jae
lock
mov
sbb
lock
pop
lret
frstor
lret
dec
sbb
mov
xorl
jae
aam
addr16
jns
dec
jp
dec
push
jmp
fildll
enter
cld
fisttps
sub
cmpsl
adc
imul
xchg
daa
jge
sub
test
sbb
repz
mov
in
sub
pop
mov
mov
mov
xor
pop
out
rcll
hlt
aas
loop
mov
xor
inc
cmp
stc
je
xchg
add
or
mov
push
xchg
cmp
inc
rorl
bound
out
cmpsl
stc
aaa
fcoml
inc
jmp
addr16
enter
jae
sub
and
fnsave
roll
sub
xchg
dec
fstpt
xchg
stc
inc
mov
mov
arpl
in
sub
mov
sti
cmp
mov
stc
loopne
dec
cmp
jg
mov
pop
rclb
and
push
sub
sbbb
xchg
cvttps2pi
xor
push
jnp
movsl
sbb
inc
push
fcomip
pop
imul
jmp
in
cmpsb
pop
add
orl
fs
fdivs
out
gs
loop
aas
sbb
and
xor
icebp
repz
jbe
xchg
cmp
leave
mov
xlat
mov
aaa
lods
sti
ljmp
pushf
stos
mov
negl
mov
pop
insb
rolb
ljmp
xchg
or
pusha
sbb
in
push
insb
hlt
into
dec
xchg
adc
rcll
xor
add
pushf
xor
jmp
sbb
pushf
mov
and
aas
iret
pop
enter
jl
lea
inc
adc
inc
das
jge
shrl
mov
xorb
int
add
and
stc
lea
push
pop
sahf
push
xchg
mov
dec
ss
loopne
add
sub
mov
xchg
xchg
xchg
add
lcall
add
mov
jno
out
cltd
push
rorb
mov
mov
mov
in
push
ljmp
movsb
mov
rcl
adc
sbb
nop
divb
inc
cld
sbb
jle
or
pop
cmc
daa
cmp
pop
mov
fincstp
jmp
push
sub
loopne
stc
add
or
dec
lds
sbb
push
mov
aas
sbbb
lods
into
fs
inc
mov
hlt
inc
pusha
add
or
jbe
das
xchg
mov
adc
cltd
sub
mov
es
adc
jecxz
dec
add
xor
mov
ss
mov
push
xlat
filds
repz
push
sbb
jno
xchg
lret
mov
or
sarl
les
dec
xor
inc
bswap
cltd
mov
loopne
mov
mov
or
mov
push
clc
mov
xor
add
xchg
cmp
mov
and
mov
sbb
jne
fdivrs
cmp
cmpsb
fdivrs
jg
lods
icebp
leave
adc
nop
xchg
popa
mov
outsb
sub
push
movsb
xor
mulb
out
test
dec
push
or
pop
nop
mov
add
dec
and
or
sub
mov
mov
ret
pop
pop
test
gs
sbb
sub
jle
in
or
xorl
aad
push
repnz
frstor
insl
jno
and
idivl
aaa
test
pop
ret
cs
test
lcall
or
sub
ret
scas
pop
je
lods
cltd
aam
mov
scas
add
mov
popf
sbb
jo
ret
mov
lret
mov
xchg
pushf
push
dec
loop
sub
movsl
rclb
jo
mov
adc
or
or
shl
mov
shlb
fdivr
xchg
cmp
push
jo
pop
xchg
inc
adc
mov
and
cs
lret
mov
or
xchg
imul
sbbl
mov
xchg
push
inc
out
stc
sub
jns
test
xor
andb
out
pop
lea
in
arpl
xchg
sbb
loopne
or
xor
outsb
dec
pusha
sub
psraw
rcll
or
fincstp
pop
fs
out
out
inc
enter
je
lock
imull
repnz
lds
push
cmpsb
loope
jge
jl
addl
push
jl
iret
sub
sub
in
add
pushf
dec
xchg
pushf
enter
cmp
xor
addr16
mov
xchg
sahf
rcrb
inc
test
imul
inc
loopne
movsb
or
stos
push
stos
cmp
mov
ret
mov
imul
cs
nop
stc
aaa
test
popf
inc
push
push
mov
iret
loop
push
es
push
js
or
ja
les
mov
mov
addr16
adc
fwait
addr16
scas
icebp
pusha
lret
insb
add
push
sbb
pop
clc
sbb
rorb
or
fcoml
jno
mov
in
hlt
cmc
inc
mov
jb
add
nop
and
add
push
mov
pop
sub
jmp
arpl
pop
xor
fcompl
jmp
hlt
or
inc
dec
inc
fldt
sbb
xchg
fwait
inc
ss
int3
pop
xor
lods
inc
mov
sbb
pop
insl
push
je
cmc
inc
ficomps
aam
roll
mull
adc
add
jnp
mov
imul
mov
inc
stos
xlat
imul
js
fisttpl
pop
lods
push
test
add
out
sub
sysenter
lea
push
daa
mov
fs
fmul
sub
sub
ds
insb
loop
test
adc
mov
aad
push
add
aam
stos
sub
je
jb
push
les
ljmp
shlb
pop
test
fcompl
cmp
shr
inc
mov
dec
push
rcrl
xorl
sub
js
movsb
dec
or
sub
jg
imul
fildll
mov
mov
lods
inc
inc
lcall
out
ds
test
sbb
test
dec
sbb
and
leave
mov
xchg
aas
scas
mov
leave
sub
insb
lahf
pop
add
je
and
movsb
fistps
adc
sbb
js
mov
and
pop
add
adc
lret
outsl
popa
cmp
mov
pop
lret
cltd
adc
rcrb
xor
nop
fldenv
adc
in
and
pop
pop
xchg
push
insb
adc
aam
mov
pop
inc
shl
les
sbb
outsl
inc
mov
xor
mov
fcmovnu
std
xchg
mov
xor
lods
jne
aas
push
stos
sbb
in
gs
or
xlat
push
mov
mov
inc
jl
enter
out
cmpsl
sbb
imul
movl
rcrb
loope
loop
inc
mov
int
and
in
inc
sub
leave
xchg
movsl
lds
or
lahf
adc
in
ss
inc
xor
shrl
or
add
inc
adc
jge
xor
loop
cmp
fidivrs
cmp
lock
outsl
mov
push
hlt
test
movsb
test
xor
cwtl
scas
popa
mov
xlat
aaa
push
mov
or
orl
mov
test
ss
mov
dec
push
inc
and
fnsave
cmp
test
pop
movsb
jns
pop
iret
sub
insb
mov
inc
dec
xchg
in
pushf
mov
sub
or
movsb
mov
push
sub
xlat
xlat
and
loop
add
push
jecxz
cmpl
fnstcw
movsl
xor
add
fidivs
push
push
push
or
inc
add
stos
push
mov
fcoms
xchg
shll
stc
jl
mov
mov
mov
mov
push
rolb
push
add
leave
scas
inc
loopne
data16
sub
sarl
stc
or
pop
es
in
inc
stc
dec
add
xor
lahf
std
add
outsl
cwtl
pop
xor
hlt
ret
shlb
inc
and
scas
xor
xlat
jecxz
pop
sub
jle
add
cmc
loope
lret
cmp
mov
hlt
gs
lods
fs
int3
xor
cmc
mov
stc
popf
jns
pop
and
popf
ret
imul
icebp
iret
pop
push
or
cwtl
pop
pop
outsb
push
jp
in
pop
sti
jg
pusha
call
mov
jmp
sub
mov
popl
dec
dec
sub
jno
jl
inc
bnd
hlt
mov
push
jg
lret
xor
cmpsl
push
pusha
mov
call
adc
xor
outsl
cltd
cld
adc
hlt
rcl
mov
and
roll
xor
out
adc
add
push
lods
rclb
xchg
mov
pop
shr
ljmp
iret
cmp
inc
add
push
dec
xchg
imul
and
ss
out
dec
ss
mov
je
push
scas
xchg
mov
jbe
data16
out
cmpsl
das
std
sub
jne
clc
pop
mul
mov
cmpsl
fistps
std
xchg
insb
cmc
out
mov
lds
sti
lret
in
mov
shrb
pop
pushf
push
and
mov
mov
faddl
pop
jae
mov
std
cld
and
adc
lock
xchg
mov
pop
cmpsb
movsl
push
hlt
or
out
add
push
or
lahf
cmpsl
aad
cmp
setg
or
mov
xchg
or
dec
in
mov
xor
cwtl
mov
shl
mov
sbb
cmpsl
mov
add
jns
aad
pop
movsb
mov
in
fs
hlt
push
aam
nop
fdivrs
xchg
sbb
jmp
add
sbb
sub
mov
lret
and
mov
rcrl
ja
mov
mov
sub
clc
push
xor
pop
sbb
push
test
xchg
sarl
loopne
sbb
xor
mov
mov
push
rol
enter
movsl
dec
das
das
mov
mov
insb
leave
inc
cmpsb
aaa
dec
adc
mov
cmpsb
push
aad
mov
rolb
mov
push
icebp
mov
jnp
jl
mov
arpl
mov
jp
dec
ds
fdivl
test
leave
imul
mov
push
cmpsl
andl
and
adc
or
cld
loope
xor
ret
jns
ret
mov
mov
mov
fdivs
stos
cmp
loopne
ds
scas
mov
sbb
add
cld
sub
xchg
jno
dec
add
icebp
and
iret
fnstenv
xor
inc
jmp
cmpsl
lahf
fisttpll
xor
push
stos
outsl
mov
mov
addr16
popa
pop
mov
shll
movsl
inc
sbb
mov
popa
in
pop
cmp
jl
push
arpl
dec
inc
and
test
and
aad
lds
repz
mov
loopne
in
push
pushf
or
loop
add
xor
lcall
stos
repz
loope
cli
pop
jl
fdivs
mov
ja
daa
movsb
cmpsb
repz
lods
sub
cmpsl
xor
fdivr
and
sub
testl
xor
mov
pushf
loopne,pn
out
jp
fisttpll
cs
std
mov
popf
ret
add
or
ret
pop
mov
push
cwtl
xlat
and
add
mov
push
sub
jge
xor
push
jl
pop
cli
jnp
icebp
outsb
fwait
mov
std
sub
fidivl
cmp
adc
jo
pop
pop
add
xor
ja
ret
add
mov
aas
ljmp
divb
rolb
movsl
xor
repnz
cld
bound
test
pushf
add
rclb
cmpl
jbe
push
test
test
inc
and
add
ss
push
push
je
lea
dec
enter
in
sub
push
jb
inc
add
xor
cmp
lods
jnp
push
xchg
jns
inc
fidivl
xchg
add
sub
fmull
jecxz
js
jno
fcmovnbe
xchg
push
pushf
ds
scas
adc
addb
lock
ficoml
pushf
fpatan
inc
imul
leave
pop
fs
pop
xorb
rcll
push
inc
xchg
rclb
insl
mov
pop
adc
jmp
dec
push
xorl
loop
cmp
sbb
xor
rcl
xor
adc
out
insb
mov
lock
arpl
mov
push
fistl
jo
inc
fisubrs
xchg
pop
xchg
iret
mov
mov
xchg
mov
loop
test
gs
mov
and
mov
jbe
mov
shl
in
imul
xchg
push
repnz
pop
xchg
jecxz
aam
rcr
push
shrb
call
mov
push
fwait
mov
pop
add
push
sub
jle
loope
xchg
sbb
call
loope
bnd
lret
cltd
out
mov
jns
mov
cltd
shrl
shll
or
mov
sbb
and
xor
fisubs
sub
xchg
les
xchg
xchg
sbb
stos
and
mov
mov
push
sub
insl
sub
add
shlb
lcall
testl
xlat
mov
mov
pop
xor
sub
stc
out
xchg
xchg
pop
add
sbb
xchg
sub
scas
test
jo
dec
test
testl
lea
push
jb
mov
dec
addr16
fmuls
push
mov
push
sub
fistl
push
and
cmp
lahf
add
or
into
dec
cmp
mov
daa
int
stc
fidivrl
cmp
scas
stos
mov
mov
inc
clc
outsl
dec
xchg
mov
cmp
gs
adc
push
inc
push
clc
dec
mov
aam
stc
into
das
shrl
xchg
add
sub
push
ss
fists
jl
popf
cld
ss
dec
push
ds
les
and
push
in
xor
imul
pop
mov
je
xor
loopne
sbb
jne
aad
push
clc
call
in
int
fdivrs
iret
out
sti
cmp
sbb
xor
mov
xchg
sub
outsb
jle
fwait
mov
or
fldcw
shll
subl
jg
push
or
test
xchg
cmc
aas
inc
jmp
cmc
xchg
add
clc
insb
sbb
std
or
xchg
dec
jecxz
or
test
adc
test
adc
jae
mov
adc
add
fidivl
rcrl
jg
fsubs
push
cmp
jg
xor
jle
mov
xor
jl
adc
xchg
xlat
mov
test
adc
sub
dec
iret
addr16
and
stos
pop
outsl
mov
cmc
imulb
mov
mov
ret
lock
pop
lock
loop
movsb
enter
addb
shlb
sar
movsl
test
jbe
push
pop
xchg
rcll
dec
scas
lods
stc
sub
mov
daa
lret
imul
pop
sub
jecxz
cmpsb
shl
das
xchg
inc
add
jnp
and
cmp
lahf
cmpsl
dec
mov
mov
pop
fsubrs
sub
mov
mov
xor
sub
push
scas
mov
test
js
dec
mov
lock
cmpsb
cmp
insb
mov
xchg
ficompl
cmpsl
in
and
fidivs
mov
push
push
sub
pop
movsl
das
andb
or
jle
fisttpll
jbe
cmpsb
movsb
adc
jge
call
fucomp
test
int
sub
fwait
jb
jle
inc
pop
jmp
mov
lret
repz
push
clc
arpl
bound
test
mov
in
xor
push
lret
sbb
mov
lock
adc
sbb
ret
stc
adc
sarl
aaa
jecxz
add
mov
push
xchg
or
sar
or
mov
outsb
lods
push
pop
fstl
pop
push
fwait
mov
fistl
je
lcall
and
or
mov
test
mov
aad
mov
mov
jle
lods
stos
adc
push
rolb
ja
addl
lret
inc
incl
push
sbb
xor
or
jns
or
fimuls
mov
loope
jnp
inc
enter
fistpll
mov
mov
pop
dec
out
dec
fs
nop
xchg
lcall
jle
xor
xor
inc
repnz
fs
dec
xor
insl
push
jae
adc
dec
xchg
xchg
mov
test
cld
popa
hlt
dec
bound
aaa
or
outsl
lahf
sahf
cmc
mov
sub
push
rorl
nop
outsl
sub
sbb
sti
lock
inc
stc
and
mov
mov
jo
or
push
scas
js
int
es
mov
inc
xchg
cmc
cmpsl
lock
and
insb
mov
push
adc
bnd
mov
add
ret
dec
xor
sahf
ds
pop
mov
daa
mov
repnz
lods
sub
loope
jno
iret
loopne
dec
push
sbb
jo
push
xchg
push
pop
xor
jmp
cmp
jge
inc
cmp
les
call
push
stc
das
das
iret
loop
addr16
jmp
ja
scas
aaa
test
popf
pop
jo
movsb
push
aas
inc
jmp
fstps
loop
sub
lods
cmp
and
clc
lret
divb
xchg
pop
xor
inc
pop
pop
outsb
mov
cmp
jecxz
flds
and
add
mov
push
add
repz
adc
pushf
test
scas
jmp
and
sbb
inc
flds
ja
mov
inc
out
sbb
testl
gs
pop
cmp
sbb
lcall
outsb
jne
push
cwtl
xchg
dec
out
xchg
push
or
mov
js
ss
lds
xor
pop
inc
inc
mov
fcoml
jmp
or
outsl
loop
push
pop
inc
fisttpll
dec
mov
mov
pop
mov
fsts
cmp
movl
sub
or
movsb
pop
xchg
aas
mov
jl
loope
popa
push
push
leave
out
sub
es
aas
push
mov
in
in
and
adc
in
arpl
adc
add
stos
jge
mov
push
dec
pop
cmp
lcall
rorl
push
mov
int3
loop
ret
push
test
mov
adc
js,pt
mov
add
mov
out
adc
subl
xor
gs
push
movb
scas
popf
ret
and
sbb
cmp
je
mov
out
hlt
outsl
outsb
jns
nop
rorl
lds
mov
push
xlat
lmsw
insb
lea
xchg
pop
outsb
pusha
and
ss
add
add
sbb
pop
into
lcall
dec
dec
pop
sub
xchg
pop
sbb
addl
mov
test
aad
mov
lds
dec
lret
test
dec
lret
insb
loopne
dec
and
ja
loopne
hlt
lahf
or
xchg
sarl
mov
lods
mov
push
out
pop
inc
stos
mov
fs
mov
mov
add
sbb
addb
mov
push
cld
xor
and
xchg
icebp
jbe
mov
mov
aas
std
icebp
xlat
mov
sbb
sarl
cmpsb
mov
cmp
mov
nop
mov
dec
sub
jne
outsb
in
sbb
jnp
jecxz
or
test
push
xlat
dec
out
aas
adc
out
lds
xor
cmp
bound
jecxz
call
aas
aaa
or
mov
cwtl
loop
bound
add
xchg
les
mov
pop
dec
xchg
cmp
lret
pop
and
inc
mov
adc
movsl
push
jnp
sub
sbb
addb
roll
or
push
and
xor
xchg
pop
mov
push
adc
sbb
repnz
js
and
je
add
stos
jge
sbb
sub
mov
stc
ret
adc
dec
stos
add
xor
jbe
jmp
dec
cwtl
pop
or
mov
repz
push
add
test
mov
cmp
loop
lods
scas
jge,pt
cltd
mov
pop
jl
pop
and
add
push
nop
push
nop
aaa
loop
add
cmpsl
hlt
or
pop
push
xlat
sbb
mov
adcl
push
and
or
xor
in
inc
leave
push
add
jb
pop
inc
inc
jno
cmp
dec
mov
lods
dec
push
pop
or
jnp
mov
lods
inc
ret
dec
add
mov
push
mov
adc
pop
cmp
call
or
dec
nop
icebp
jo
js
test
jb
int
cmc
sti
jae
and
cs
or
aas
mov
mov
adc
jecxz
pop
jl
addr16
xor
fidivl
arpl
enter
addr16
mov
add
popa
push
ss
aas
xor
loopne
mov
cmp
repnz
jmp
mov
cmp
cmpsl
enter
stc
inc
jge
gs
iret
push
xor
add
pop
push
jnp
mov
cwtl
aas
pop
movsb
fisttpll
iret
sbb
and
lea
add
lods
sbb
xchg
sbb
xchg
pop
addb
jg,pt
bound
add
jmp
imul
cld
inc
or
enter
jmp
push
inc
js
adc
arpl
or
call
mov
mov
sbb
mov
setns
inc
push
sbb
or
sub
push
dec
icebp
rcl
adc
xchg
jmp
jle
aam
dec
cmpsl
sarb
xchg
aam
fstl
push
fsubs
int
mov
jno
je
pop
shrl
js
xor
pop
iret
inc
leave
das
adc
sub
add
mov
orb
leave
daa
add
fisubrs
push
pop
lds
mov
outsb
ret
pop
pop
mov
les
push
mov
mov
cwtl
je
jns
dec
jbe
fdiv
cld
in
fcoml
loope
pusha
pop
movsl
mov
int
enter
je
outsl
std
icebp
into
cs
push
aaa
push
push
add
pop
imul
in
das
test
movl
inc
jae
cmpb
ret
rorb
dec
xor
cmp
inc
mov
adc
mov
mov
add
sbb
inc
inc
dec
jne
out
or
sahf
sbb
sbb
sarb
sub
jbe
sbb
mov
lea
sbb
or
sbb
sahf
adc
inc
xchg
sub
xchg
lea
cmc
jo
xor
mov
lods
nop
sub
jno
mov
jnp
fildll
leave
loopne
sub
adc
jbe
loop
pop
cs
int3
xor
aaa
insb
nop
in
gs
testb
xacquire
fucomi
jecxz
dec
int
jmp
loope
arpl
aad
sub
jb
std
jae
ficoml
adc
xchg
mov
jmp
or
inc
pushf
cltd
jge
out
pop
cmp
fstpl
icebp
incl
add
mov
and
add
mov
add
add
inc
movsl
dec
cmp
ss
or
js
inc
aas
push
mov
outsb
sbb
dec
adc
jmp
fadds
scas
rcr
subb
ljmp
cltd
mov
sub
ret
out
xor
ret
lcall
stos
add
inc
aad
orb
pop
inc
inc
sub
enter
inc
pushf
movsb
aad
mov
rcrl
push
loop
sub
push
push
arpl
ja
sbb
loop
ficompl
inc
sbb
stos
cwtl
nop
aam
repz
fwait
sub
pop
fwait
dec
cmp
out
fisubrs
fs
dec
cli
sub
daa
jns
push
mov
adc
test
aas
sti
mov
jnp
insl
jp
int
lods
popf
sbb
data16
aaa
jmp
push
mov
lock
scas
movsl
out
push
mov
cmpsl
cmp
sub
lret
push
pop
jb
and
cmp
push
notw
lret
into
xchg
loopne
cmp
aas
push
push
adc
pop
daa
jecxz
cmpsl
adc
rolb
push
popl
pop
movsl
add
sub
sub
test
or
push
mov
cmpsb
push
in
notb
movsb
insb
in
in
xchg
add
iret
stc
andl
add
ret
mov
fdivs
pop
sbb
iret
mov
mov
ret
add
call
push
in
xor
xor
and
inc
scas
pop
insb
ja
in
fsubrs
inc
add
jnp
lcall
mulb
xor
out
mov
mov
mov
fistpl
fadd
push
add
loop
jbe
ror
pop
ds
stc
push
xor
lods
mov
int3
mov
mov
fmuls
and
jne
sbb
xor
pusha
adc
mov
mov
mov
enter
leave
es
in
jne
fistpl
xor
cltd
jns
lahf
push
or
dec
push
shl
mov
xlat
addr16
pop
mov
mov
dec
pusha
push
sbb
pop
cltd
aad
lods
dec
xor
and
jmp
stos
xchg
test
xchg
and
mov
jecxz
int3
pop
mov
jg
sbb
je
add
push
xchg
inc
push
sub
aaa
and
in
mov
or
push
int3
pop
fsubrl
arpl
in
dec
dec
bound
mov
inc
push
lahf
arpl
xchg
dec
sub
jg
mov
jg
sub
and
and
sti
shr
in
jecxz
dec
jmp
adc
int
clc
xchg
scas
mov
rcll
int
scas
mov
pop
mov
push
add
mov
jo
jg
xchg
and
sbb
jnp
lret
ret
cltd
inc
cs
xchg
sti
out
es
mov
sbb
rol
mov
push
dec
cmp
popf
data16
jp
sbb
outsl
rorb
roll
in
ljmp
inc
imul
mul
mov
out
dec
mov
std
add
push
stos
adc
add
ss
sub
out
std
scas
mov
add
aaa
shlb
lret
jns
popf
es
push
mov
pop
sub
mov
or
hlt
adc
icebp
mov
cmc
lods
dec
pop
pop
hlt
sbb
xchg
push
cmp
cli
in
inc
jns
xchg
stc
xchg
pop
pusha
or
data16
sbb
pop
shll
cmpsb
daa
cmpsb
test
int3
push
lods
cmp
cltd
stos
xchg
inc
stos
mov
push
in
loop
pop
sbb
icebp
mov
std
cwtl
insb
out
jle
in
pusha
out
sbb
insl
jmp
jge
xlat
push
pushf
add
jmp
pop
test
lahf
xchg
or
fldl
mov
shrb
mov
sbb
adc
cmpsb
nop
mov
pop
loope
lcall
mov
xlat
inc
mov
das
les
ret
seto
mov
sbb
mov
add
bound
xchg
cwtl
out
pop
loop
mov
and
jo
or
out
sahf
shrl
sbb
mov
push
cmp
jmp
push
inc
lret
in
dec
iret
icebp
ja
fwait
or
mov
popf
sbb
int
add
and
sti
ret
mov
xchg
aad
test
xchg
add
pop
pop
mov
insl
leave
repnz
js
dec
cwtl
movsb
mov
out
pop
mov
push
mov
mov
sbb
gs
cmp
or
popa
pusha
stos
pop
and
das
push
cmp
lret
jno
pop
jnp
repnz
sub
scas
add
mov
sbb
add
gs
or
pop
pop
sbb
out
sbb
inc
stos
push
sub
loope
push
and
jb
sbb
rcrl
push
jmp
pop
out
ret
and
push
xchg
test
push
mov
cli
std
xchg
mov
movsl
inc
pop
sub
je
mov
mov
roll
and
mov
mov
cs
sbb
mov
in
test
enter
dec
and
pop
or
or
xchg
push
push
cmp
in
std
cltd
nop
sub
fs
push
repz
fsts
cld
xchg
dec
insl
gs
lea
jne
stos
lods
addr16
push
xchg
dec
out
dec
les
push
in
in
push
sbb
movsl
push
add
sub
xchg
or
gs
nop
int
xor
sub
adc
sbb
sbb
mov
test
xchg
mov
decb
adc
scas
adc
cmp
negb
xchg
push
testl
shll
scas
cmp
add
sarb
jno
loope
sbb
dec
das
add
jmp
icebp
xor
sub
mov
cmp
loope
mov
xchg
fwait
pop
outsb
pop
sbb
repnz
pop
pop
rclb
sbb
jmp
mov
movsl
dec
arpl
mov
mov
stos
fldenv
stos
mov
addb
pusha
cwtl
insl
lock
mov
push
sbb
push
push
mov
dec
jb
push
inc
es
and
les
adcl
mov
js
ds
lock
scas
dec
sub
pop
mov
pop
mov
xor
mov
dec
lcall
lds
leave
mov
add
cmp
clc
mov
aas
movsl
out
push
jl
shlb
roll
xchg
push
repnz
scas
outsl
cmp
cmpsl
in
cwtl
test
xchg
mov
sbb
movsb
nopl
push
mov
aaa
mov
sub
movl
mov
idivl
repz
imull
bound
sbb
psllw
addl
mov
xchg
jbe
pop
clc
nop
dec
ljmp
xchg
sbb
lds
sub
mov
ucomiss
fmuls
pop
xchg
cmp
dec
lock
movsb
add
cmc
or
insl
cmp
das
out
xchg
push
dec
add
lea
sub
into
in
mov
popa
adc
imul
push
bound
test
push
aas
and
add
jecxz
ljmp
lock
xchg
pusha
leave
mov
test
call
aaa
addr16
mov
mov
lahf
pop
and
or
mov
inc
pop
jnp
pop
mov
flds
sbb
lods
iret
lds
mov
ret
in
scas
jae
pop
pop
jnp
cmpsl
daa
lea
push
xchg
std
add
cmp
cmp
clc
cltd
xchg
mov
clc
lock
cmp
mul
insb
cmpsl
test
mov
mov
xor
cmp
sbb
aaa
inc
aas
push
xor
in
mov
fcomi
cmp
adc
push
lret
sbb
inc
cmp
mov
push
jle
cmp
fwait
xor
fldl
ret
and
xor
fucomip
sub
xor
lahf
test
imul
arpl
push
je
or
es
dec
mov
iret
add
into
adc
aas
loopne
sbb
fdivl
ret
rcll
clc
sbb
sahf
adc
arpl
push
and
cmc
movsl
lds
mov
xor
cli
jae
notb
dec
pop
add
incl
nop
and
icebp
cmova
int3
adc
inc
scas
cmc
jmp
test
sbb
dec
das
xchg
aam
mov
sbb
test
lcall
lea
sbb
mov
dec
sub
add
fisubl
xor
lcall
add
cmpsl
and
push
or
mov
add
cmp
loopne
inc
rol
dec
in
sbb
pop
mov
mov
rclb
movsb
xor
adc
dec
push
xchg
pop
pop
into
fidivrs
jmp
ja
popf
add
mov
xchg
lret
notb
jbe
mov
dec
xchg
inc
fcmovbe
roll
adc
xor
out
inc
push
sub
pop
out
mov
cmc
and
xchg
or
in
mov
jnp
lahf
jle
imul
push
es
mov
or
inc
sbb
dec
jecxz
sti
xchg
and
aam
rorb
mov
jle
dec
pusha
aaa
repz
out
adc
fwait
shl
xchg
cmp
add
lcall
out
mov
icebp
jp
push
sarl
sar
bnd
loope
inc
mov
arpl
js
cli
aam
aas
push
pop
loope
imul
pop
scas
xchg
cmp
mov
int3
mov
ljmp
lret
jg
jecxz
add
push
daa
fisubrl
call
loop
adc
adc
xor
push
sbb
inc
lret
iret
cltd
sbb
pop
xchg
pop
test
and
push
jle
mov
sub
or
stos
cmp
cmp
push
loopne
jo
ret
jecxz
xchg
push
fidivrl
imulb
sub
xchg
bound
pop
dec
jecxz
in
arpl
cmp
dec
sub
mov
rorl
cltd
cmpsb
add
daa
repnz
rorl
sub
mov
xor
push
popa
cmp
lds
xor
inc
test
lock
add
mov
push
inc
aam
scas
leave
shl
cmp
aad
mov
aad
and
sbb
mov
dec
lds
pushf
xor
xchg
xchg
stos
sub
adc
scas
loop
mov
fscale
mov
enter
mov
push
sbb
or
cmp
enter
cmpsb
mov
insb
cmpsl
adc
out
repnz
mov
mov
inc
xor
mov
dec
and
lea
xchg
call
push
xchg
xlat
pusha
pushf
lcall
inc
or
lret
sbb
movb
addl
xchg
adc
out
sub
inc
mov
inc
cltd
dec
out
inc
jl
sbb
fcmovnb
pusha
test
cmp
test
jo
pop
std
rclb
xchg
nop
sub
inc
inc
adc
pop
pop
cwtl
jne
push
cmc
test
mov
lahf
jmp
in
das
mov
pop
cmp
in
and
jno
vmwrite
or
dec
fdivrs
cs
sub
stos
adc
dec
movsl
call
stc
adc
xchg
lock
imul
push
sti
mov
mov
idivb
cmp
pop
out
jne
dec
dec
dec
insb
and
in
mov
sub
push
jge
jmp
arpl
out
push
int3
cs
scas
or
add
in
xor
mov
pop
fcmovnbe
iret
bsf
mov
test
cli
mov
inc
jecxz
in
in
in
lods
and
and
dec
mov
subl
add
pop
add
jmp
xor
pop
jbe
lret
jbe
xor
mov
jnp
xchg
cmp
hlt
insb
lods
mov
mov
movsl
jae
mov
sub
sub
test
dec
cmp
add
jno
nop
pop
dec
jbe
adc
ljmp
mov
sbb
sahf
popa
or
sti
and
rclb
repnz
pop
add
adc
ret
inc
daa
xor
add
mov
loope
inc
push
xchg
mov
test
inc
outsl
lcall
xchg
cmp
xchg
mov
mov
mov
in
lcall
and
push
stos
adc
pop
mov
out
leave
addr16
sbb
cli
jne
add
xor
jg
pop
xor
cmpsl
bound
and
push
mov
imul
notl
sub
jns
fsubrl
scas
sub
popf
iret
inc
dec
addr16
insl
mov
out
pop
pushf
sahf
ds
mov
xchg
out
mov
stc
iret
in
mov
leave
gs
incb
xor
cltd
pop
sub
lods
add
int3
gs
jne
cs
jmp
or
mov
jle
dec
mov
hlt
jnp
punpckhwd
and
pop
cmp
xor
add
jae
cmp
jg
add
lods
lea
xor
jo
stos
xchg
push
add
xchg
pop
or
jno
es
enter
jmp
lahf
cmp
cmpsb
ret
mov
jns
sbb
jns
push
arpl
ljmp
jno
iret
std
out
inc
iret
cmpsb
in
mov
and
dec
mov
sbb
or
push
and
mov
test
ret
outsl
pop
xchg
push
sbb
js
sub
loop
andl
subb
push
cs
ss
xchg
inc
jle
sbb
cmp
aaa
jno
xor
leave
push
xchg
add
mull
int3
aas
add
sbb
jg
mov
bound
outsl
lock
rorl
fildll
push
mov
and
pushl
add
mov
sbb
pop
lret
dec
loopne
int
movsl
popa
les
jnp
mov
ss
cmpb
scas
pop
mov
add
dec
test
enter
or
mov
lcall
subl
push
popa
push
jmp
cmp
jmp
and
in
dec
lock
and
aam
jp
hlt
mov
mov
cmc
lret
sbb
aam
adc
addr16
mov
les
add
mov
sub
mov
hlt
nop
sub
outsl
mov
movsb
sbb
cmp
mov
push
jnp
and
jne
pop
std
shll
mov
iret
dec
adc
push
out
adc
fwait
dec
inc
sub
xor
jne
shrl
std
xchg
pop
mov
jnp
push
jae
xchg
cmp
sub
or
jns
jmp
int3
xchg
shll
neg
push
jns
push
jae
mov
add
les
pop
fdivr
mov
fmull
dec
pop
pop
mov
aad
mov
xor
movsb
mov
call
dec
loope
les
and
ret
movsl
pop
leave
pop
pop
aas
arpl
jg
jecxz
movsb
xor
ja
dec
or
in
jae
mov
pop
pop
push
xchg
movsl
ret
int
cld
cmp
xchg
call
stos
fcoms
mov
fidivl
push
sub
imul
popf
xchg
push
and
repnz
mov
jl
js
into
iret
sub
loope
sbb
push
cmp
jb
mov
sbb
jo
xchg
mov
outsb
insl
stos
push
mov
xchg
les
mov
sbb
sub
scas
and
jge
dec
xor
test
mov
sarb
dec
jb
push
les
jae
mov
lea
sbb
sahf
jl
xchg
push
rol
cmp
mov
xor
inc
test
rcrb
sbb
sahf
adc
call
mov
js
cli
mov
lcall
movsl
lds
mov
mov
out
xor
mov
pop
mov
fwait
in
js
sub
or
jnp
inc
lahf
aad
into
pop
aas
sub
xchg
xor
outsl
inc
data16
lds
push
push
sub
or
mov
outsb
mov
adc
cli
pop
dec
outsb
cmp
cmp
testb
lret
imul
mov
sahf
data16
les
loope
cmp
jmp
stos
icebp
outsb
jno
jge
mov
pop
fnstenv
enter
imul
adcl
test
and
dec
scas
lods
fwait
in
xor
insb
jbe
dec
sbb
jo
jge
or
pop
repnz
jle
jns
sahf
ret
int
jmp
int3
jb
notl
aas
jecxz
adc
cmp
test
dec
push
mov
stos
cmp
iret
iret
pop
xorl
xor
nop
sub
pop
sbb
int3
sbb
sub
jle
sbb
jne
jae
add
dec
cli
and
loope
call
out
pop
in
shlb
stc
sbb
movsb
jmp
icebp
add
popa
popa
inc
andl
insl
out
mov
sbb
lcall
ret
ss
cmpsb
ljmp
imul
push
icebp
jnp
sbb
push
inc
flds
pop
push
ffree
leave
xchg
dec
mov
xchg
out
xlat
dec
push
push
ficoml
mov
add
inc
popl
mov
dec
aam
or
pop
lods
cld
loop
fnsave
push
add
les
add
adc
lret
or
fadds
cmp
dec
fwait
clc
cmp
js
test
bsf
mov
rolb
add
push
aaa
dec
lret
mov
or
test
outsb
lds
cmp
xchg
and
xchg
and
sbb
fadd
lods
mov
lea
test
loope
or
sbb
or
mov
sbb
ljmpw
xchg
add
bound
inc
sub
xor
mov
and
lods
inc
cmp
lds
addr16
outsl
pop
lret
imul
pushf
fsubrl
fwait
ljmp
sub
clc
mov
out
add
push
inc
xorb
fistps
dec
xor
lods
bound
int3
and
test
fadds
pop
inc
ret
cmpsl
jbe
sbb
sub
aaa
and
lret
push
or
add
sub
imul
inc
pop
mov
push
mov
sti
jne
adc
cmp
andl
dec
mov
mov
repz
bound
cmp
inc
push
adc
push
sub
out
shlb
mov
or
xor
adc
mov
push
adc
aam
sbb
lahf
fstl
out
mov
std
jbe
orl
dec
xchg
ds
outsb
adc
out
outsl
ljmp
jae
sarb
sbb
xchg
mov
push
xorl
imul
xlat
xchg
sub
inc
aam
jg
pop
xchg
push
and
jno
addr16
sub
pushf
add
adc
scas
insl
pop
xlat
adcl
in
fdivs
testb
addl
imul
ss
xchg
mov
mov
cmp
das
or
lret
mov
xchg
in
dec
call
loopne
inc
ds
cmpsl
mov
jl
leave
jns
push
jbe
and
loope
ss
vphminposuw
cli
repz
icebp
nop
loope
gs
and
sub
jo
arpl
cmp
add
mov
leave
adc
push
and
js
mov
push
lahf
dec
push
xor
roll
xor
dec
or
outsb
subl
and
inc
cmc
movl
inc
jmp
xchg
add
mov
xchg
adc
add
cld
movl
pusha
sub
out
pop
and
les
and
les
rorb
mov
in
mov
lret
jecxz
pop
add
jecxz
xor
cltd
jbe
imul
add
ds
mov
jns
lods
loope
cmp
mov
lock
pop
and
in
flds
icebp
les
mov
xchg
syscall
imul
sti
xor
icebp
mov
sbb
cmp
test
xor
jge
int3
push
sub
call
or
pop
inc
push
xchg
rcrl
ss
movsb
inc
or
xor
mov
cmp
and
in
loop
mov
mov
bound
xchg
repnz
xchg
inc
int
gs
mov
sahf
scas
fisubrl
nop
xor
or
and
fnstenv
leave
push
pop
mov
mov
bound
lods
mov
add
cmc
cltd
cmpsl
mulb
xor
lods
cmp
inc
mov
aaa
mov
cwtl
movd
or
jbe
rcr
and
sahf
loopne
fmull
ss
inc
push
sbb
push
cmpsl
std
mov
rol
stos
aas
pop
in
pop
test
pop
shr
popl
shl
push
cmp
push
ds
scas
in
lret
sbb
imul
sub
adc
bound
and
jae
fidivs
or
dec
inc
ljmp
lods
or
repnz
xchg
mov
shlb
jne
loope
daa
lret
dec
fwait
lea
movb
mov
int
orl
aas
push
dec
cmp
xchg
lcall
popf
jns
scas
or
mov
and
test
push
sbb
inc
pop
aam
pop
iret
push
dec
dec
dec
xor
aam
movsb
xrelease
lret
xchg
sub
sub
xor
test
cld
inc
and
sbb
xchg
or
mov
adc
out
mov
pusha
sbb
mov
mov
xlat
cwtl
out
insb
dec
nop
stos
jnp
pop
cmp
adc
fsubrl
xor
push
hlt
mov
mov
dec
sbb
cwtl
inc
sbb
repz
aam
inc
aas
pop
and
imul
call
fadds
int3
push
pop
pop
xchg
mov
jo
popf
jmp
fwait
mov
mov
mov
pop
arpl
cmpsl
inc
dec
xor
jno
bound
mov
inc
lcall
pop
push
faddl
loopne
fs
sbb
cmpsb
push
out
sub
fisubs
cmpsb
stc
sahf
pop
scas
mov
or
push
outsb
jecxz,pt
gs
jnp
les
inc
mov
and
stos
out
addr16
es
inc
pop
xor
loope
mov
mov
test
jle
nop
mov
mov
sbb
adc
cmp
je
jnp
mov
aaa
lods
subb
scas
jo
out
movsl
cmp
in
sub
jae
dec
out
mov
xor
mov
and
fucomip
mov
loop
push
cmp
add
test
xor
mov
fadds
mov
jg
push
pop
loopne
scas
mov
dec
mov
cmp
fs
add
lret
and
lods
cs
test
sarb
add
cmpsl
idivb
lret
loop
outsb
dec
shll
cmpsl
pushf
and
and
into
sbb
lahf
sub
or
lods
mov
test
ror
jns
pop
inc
shr
mov
fldt
or
call
inc
das
mov
sub
mov
dec
or
and
xor
stc
cwtl
test
cmc
loopne
add
fldcw
stc
stos
add
or
cmp
add
xchg
roll
cmp
fdivl
xchg
jns
xchg
cmp
xchg
daa
mov
add
out
jb
jbe
sub
lcall
jecxz
popf
inc
inc
outsb
inc
jl
sbb
dec
mov
pop
movsl
in
in
es
in
rcrb
mov
jns
aam
not
dec
mov
popa
enter
lds
loope
flds
cmpsb
shl
mov
fstl
add
mov
cwtl
push
scas
call
insb
mov
repnz
push
pop
mov
add
push
cwtl
out
jbe
mov
les
popa
movsb
andl
mov
lcall
inc
jp
lcall
mov
std
push
test
mov
xchg
mov
dec
adc
insl
ret
xchg
mov
xchg
je
sbb
in
jae,pn
rolb
cld
xchg
in
shlb
dec
jnp
gs
xor
xchg
out
inc
inc
fstps
sub
xor
mov
mov
jbe
xchg
adc
lds
pop
adc
xlat
mov
or
and
mov
sbb
inc
loop
lods
nop
xor
push
sub
loopne
jecxz
lahf
lods
xchg
cmc
ficoms
dec
xchg
fidivrs
in
mov
mov
inc
xor
push
pop
cwtl
shrl
mov
pop
out
or
jnp
sub
in
jge
les
out
out
es
call
rcr
data16
and
repz
stos
je
mov
pop
lea
and
mov
mov
test
push
inc
or
pop
out
stos
fs
shlb
out
mov
dec
les
push
ljmp
addr16
push
mov
jmp
cli
mov
xchg
mov
push
lret
dec
jge
pop
ret
shll
xor
insb
imul
and
jne
lea
cmp
loop
xchg
mov
lds
in
push
stos
mov
jb
nop
adc
xor
sub
out
sub
mov
js
cld
in
ljmp
mov
mov
or
add
and
shrb
aad
dec
cwtl
push
sbb
mov
hlt
mov
inc
loopne
xchg
loop
mov
rcl
pop
mov
jecxz
loop
pop
add
std
xchg
imul
cmpb
insb
jecxz
mov
inc
xchg
loopne
mov
cmp
jg
lods
adc
jle
pop
pop
cltd
xchg
push
out
mov
test
repnz
add
mov
adc
add
arpl
sbb
test
sbb
inc
stc
nop
jbe
pop
adc
xchg
inc
int3
mov
movsl
sbb
je
ljmp
mov
sub
inc
dec
int
xchg
xchg
and
and
push
add
xor
cwtl
stc
stos
mov
inc
jae
add
dec
and
movsl
push
testl
mov
js
sub
movsb
adcl
and
ljmp
cli
push
test
test
ljmp
or
pop
lock
push
add
rcrb
mov
push
das
or
xchg
xchg
push
fiadds
mov
or
test
jns
dec
shll
pop
ja
xor
imul
xchg
inc
cmp
pop
push
cs
xchg
jp
jecxz
pop
mov
mov
cmpsl
xlat
sbb
dec
push
mov
sub
ja
add
sahf
mov
test
dec
sbb
aaa
jo
mov
fdivl
xchg
hlt
lock
push
outsl
cmpl
hlt
das
jge
inc
addl
mov
sub
push
xchg
mov
pop
jle
xor
cwtl
shlb
dec
or
pop
add
loop
cmc
mov
xchg
adc
dec
sub
daa
cmp
jno
das
inc
add
popf
adc
fs
adc
orb
xor
mov
cmp
gs
ret
jecxz
out
popa
mov
out
in
lret
shll
fisttpl
mov
jge
adc
out
or
shll
push
movsl
outsb
pop
loope
xchg
in
call
sbb
not
sub
popa
rep
xchg
cmp
enter
mov
jl
enter
and
cs
mov
mov
cmp
cwtl
pop
lds
sbb
sbb
mov
pop
jl
push
and
mov
sbb
fildl
xchg
mov
negb
sbb
inc
push
xchg
jno
aad
xor
jp
movsb
sub
push
inc
or
lods
sahf
jg
inc
ret
int
cld
pop
loopne
mov
add
xchg
outsl
fcoms
popa
fiadds
xchg
adc
seto
and
add
xor
movsl
xchg
arpl
push
and
cli
mov
jecxz
js
outsl
xor
movl
in
sub
push
xor
and
and
jmp
fcoml
enter
jecxz
sub
repnz
push
in
sarb
into
and
inc
std
mov
push
repz
jle
or
cmp
jae
out
andl
inc
add
addr16
scas
pop
fisttps
xlat
test
xchg
sti
jo
sub
xor
pop
fistl
push
adc
and
xchg
iret
in
jecxz
push
je
or
int
iret
js
addr16
push
outsl
das
dec
lock
std
sbb
stc
orb
popa
pop
ds
jl
cmpb
mov
adc
out
mov
js
inc
jp
sbb
mov
lods
mov
stc
dec
xchg
xor
fwait
pop
jp
je
inc
movaps
adc
jp
mov
jo
cmp
mov
cmpsb
xchg
imul
xchg
or
out
mov
pushf
fcmovu
lods
pop
enter
mov
movsb
stos
add
scas
dec
cli
leave
or
push
mov
ficompl
mov
and
mov
ljmp
pop
cwtl
daa
mov
cmpsb
cmp
int3
push
mov
fidivl
pop
push
dec
jns
out
addl
aam
clc
xchg
pop
jmp
das
xchg
jle
loop
mov
adc
jne
mov
and
ret
stos
adc
stos
std
ror
jno
and
repnz
aaa
jb
je
movsb
sbb
dec
cmc
stos
out
js
or
sarl
rcrb
insl
mov
mov
and
mov
adc
and
ds
jno
push
dec
nop
sub
jnp
mov
adc
aad
adc
clc
lock
or
pop
cmp
push
xor
notl
mov
jg
sbb
test
ja
jb
adc
aaa
adc
jae
hlt
fcomps
dec
xchg
dec
dec
arpl
sub
xchg
aas
cmp
popf
arpl
mov
ficoms
repnz
xlat
icebp
fwait
or
ss
insb
jmp
ret
dec
faddl
and
insb
adc
cmp
fstpt
insb
in
aas
fistpll
pop
cld
andl
ss
pop
cmpb
ret
or
aad
mov
mov
push
sub
nop
add
ret
jle
shll
lahf
mov
pushf
lods
jp
sbbl
addl
dec
cmp
out
cmpsl
sub
add
push
mov
push
scas
repz
in
shrb
pop
jnp
pop
xchg
icebp
imul
mov
aas
add
call
sbb
sbb
loopne
lods
xchg
add
add
xchg
popl
pop
xor
cltd
jp
loop
mov
std
in
or
adc
adc
xchg
or
sub
cs
cmpsl
imul
cmc
pop
aam
stc
cwtl
sbb
inc
dec
sub
in
les
sbbl
or
test
xor
cwtl
or
stc
or
adc
lock
jne
xor
mov
dec
xor
stc
push
jbe
dec
stos
cmp
mov
je
jg
push
mov
xchg
jge
cmp
inc
out
adc
add
leave
add
cmp
test
adc
xor
cmp
sub
scas
mov
lock
xchg
daa
sbb
mov
ja
fcomi
jmp
mov
xchg
shl
jmp
int3
shlb
call
push
push
ret
cli
cmp
jbe
out
mov
push
sub
cld
pop
push
and
inc
mov
lret
out
stos
lahf
stos
lds
fdivl
ss
repnz
dec
rclb
popa
out
jle
adc
mov
imul
imul
loopne
jg
sbb
jp
js
out
or
pop
jp
aad
mulb
subl
adc
pop
xchg
or
stos
xor
repnz
lcall
cmpsb
dec
rcl
xchg
addb
ja
mov
push
pusha
sub
cld
stos
mov
scas
inc
adc
outsb
dec
lret
jb
and
repz
pop
sbb
adc
sbb
mov
rep
movsb
inc
push
stos
lock
inc
mov
jb
fldl
xchg
pop
insl
adc
bound
addr16
cmp
push
dec
pop
cltd
push
popf
pop
adc
das
mov
push
subl
mov
loope
jae
cmp
cmpsl
test
mov
mov
das
insl
pop
jp
int
movsl
mov
push
je
aas
xchg
addb
sbb
fisttpll
jmp
movsb
mov
std
jae
inc
testl
push
sbb
push
not
add
xor
je
js
scas
xor
cmp
stos
sub
lahf
inc
mov
inc
adcl
sbb
cwtl
adc
test
idiv
jmp
clc
gs
mov
lahf
int3
out
stos
clc
pop
cmpsl
daa
gs
js
icebp
jecxz
stos
fcoml
outsl
ds
jb
insb
lret
repz
roll
lret
jle
mov
adc
xchg
jl
jecxz
inc
pop
movsw
pop
out
mov
inc
sub
inc
mov
jmp
mov
dec
out
testl
adc
push
in
fimuls
sbb
mov
loopne
or
cmpsl
stc
cltd
mov
mov
iret
icebp
aam
fwait
dec
add
enterw
or
mov
sub
bound
loopne
and
and
xchg
fbstp
loopne
imul
adc
mov
out
clc
mov
xor
jg
push
pushf
lock
mov
loopne
aad
imul
test
leave
mov
adc
cs
or
and
cmp
xor
icebp
jge
pop
out
xor
pop
notl
loope
in
stc
lds
sbb
mov
mov
loop
jnp
xchg
add
lret
ja
or
cltd
stc
insl
or
xchg
dec
cwtl
mov
jmp
cmp
pusha
popa
sub
jne
or
ret
in
out
sub
out
int3
push
stos
hlt
dec
or
hlt
pop
pushf
test
jge
int3
sub
jb
mov
hlt
adc
jle
inc
hlt
inc
xor
ljmp
push
les
scas
xchg
and
dec
dec
and
sbb
pop
mov
test
ficomps
fldenv
cld
jle
mov
push
xchg
test
adc
jmp
mov
jg
jl
push
mov
aam
pop
push
or
js
mov
insb
in
test
js
notl
dec
mov
push
dec
test
adc
negb
enter
nop
andl
call
test
sbb
xchg
and
mov
out
mulb
xor
push
mov
jb
pop
mov
in
sbb
inc
shr
icebp
mov
andl
roll
scas
jge
fldenv
or
shll
push
push
mov
insl
imul
pushf
outsb
sub
dec
idivb
add
dec
stc
pop
dec
gs
xor
or
icebp
repz
in
inc
leave
mov
sbb
jmp
and
divb
mov
xchg
mov
push
outsb
lock
idiv
enter
in
out
mov
filds
jge
sar
sahf
orl
data16
jnp
xor
mov
call
mov
icebp
imul
jns
imul
mov
test
and
clc
mov
sbb
ss
sbb
pop
xchg
pop
dec
sahf
adc
inc
push
call
xchg
sub
daa
cmp
sti
push
inc
inc
lock
mov
fcompl
dec
sub
in
pop
fisubl
shl
insb
cs
shl
or
push
test
jo
arpl
jne
dec
addr16
xchg
lret
mov
jecxz
pusha
xchg
clc
inc
jbe
ljmp
repnz
insb
mov
mov
and
pop
and
jae
push
mov
jle
and
push
cmpsb
es
sub
popa
or
xchg
mov
test
lods
and
adc
inc
cld
sbb
add
sbb
pop
mov
addr16
cmp
cmpsl
xchg
sub
movsl
push
stc
dec
dec
rcrl
cld
sbbl
cmpsb
addb
jbe
mov
sti
pop
cld
in
mov
andb
jno
fisubrs
push
inc
mov
nop
scas
pop
jp
loop
mov
int3
scas
or
out
pop
sbb
shr
lret
and
mov
fldenv
movsb
mov
outsl
pop
ss
loop
and
xchg
shrb
and
push
pop
mov
mov
es
xchg
lea
hlt
fwait
and
jmp
inc
push
xchg
xchg
xor
addb
inc
inc
inc
outsb
ja
fidivl
jbe
fwait
jecxz
out
iret
inc
mov
cmp
dec
xor
pop
lds
aaa
dec
mov
mov
mov
jge
out
icebp
test
add
aad
cmp
jnp
xchg
adcb
fldenv
push
cmp
mov
sbb
jl
stos
inc
dec
pop
cmp
dec
inc
inc
cld
in
mov
and
pop
fnstsw
shrb
dec
shl
jne
mov
jp
movb
mov
mov
push
gs
les
sbb
jle
cmp
pushf
or
int
fadds
int
clc
xor
mov
sub
movsb
pop
lahf
pop
jo
adc
lds
in
mov
cmp
pusha
outsl
das
outsl
add
js
arpl
xorl
popf
or
fwait
xchg
outsb
push
dec
cmc
fsubrs
adc
push
cmc
cmc
sub
dec
mov
add
stos
cmc
pusha
lret
std
xchg
mov
movsb
jb
repnz
sub
lods
pop
xor
jg
jae
push
cmp
xor
sti
jae
dec
xchg
je
pop
dec
out
ja
dec
shrl
ret
lea
rcrl
mov
ljmp
pop
notb
lock
outsl
shll
rcrb
add
outsl
xor
jo
in
lods
mov
mov
sbb
clc
icebp
add
sub
loop
inc
dec
jbe
pop
inc
imul
or
cld
ftst
jae
out
in
sbb
mov
add
add
xor
jns
inc
data16
rcll
push
jmp
test
lods
mov
arpl
sub
mov
insb
cmp
push
bnd
lock
dec
test
xchg
cmp
jno
pop
arpl
rcll
bswap
divb
rcll
dec
arpl
mul
sbb
push
mov
inc
das
cli
cmp
push
xlat
loop
pop
imul
stos
shl
outsl
or
je
mov
and
or
int
stos
cltd
mov
daa
jecxz
scas
jbe
test
push
jmp
popf
lret
cmp
sbb
aad
pop
sbb
aaa
mov
cwtl
scas
jl
mov
dec
js
dec
add
in
sbb
cmc
push
les
lret
mov
jb
adc
gs
sar
push
dec
add
push
arpl
sub
js
cwtl
orb
adc
jg
and
out
inc
dec
adc
sub
testl
and
pop
dec
inc
ja
pop
pop
add
push
rcrl
scas
stos
js
adc
jmp
mov
std
xchg
lock
mov
cs
cmp
pop
bnd
std
inc
cmp
dec
mov
adc
jbe
pop
stc
sub
js
or
push
sub
sub
add
mov
bound
xchg
mov
sub
fldenv
inc
pop
xchg
lret
mov
push
pop
hlt
xchg
push
test
outsb
jns
mov
inc
pop
xor
shlb
pusha
cmp
lret
xor
aad
mov
pop
xchg
mov
popl
rcll
stos
mov
xlat
adc
mov
mov
repnz
pop
sub
lahf
out
pushf
rorl
nop
jle
popf
int
lret
in
jge
mov
jle
sbb
popf
mov
cmp
push
incl
push
push
scas
mov
repz
test
ss
cld
leave
pushf
pop
jge
ja
popa
xchg
clc
leave
sub
ds
movsw
out
scas
rep
cmp
int
adc
aas
cmpsl
inc
dec
cltd
jne
push
sbb
lcall
rclb
fs
sub
push
aam
daa
lods
out
mov
sub
push
and
sub
aas
stos
mov
push
xor
loopne
and
mov
jmp
inc
sbb
into
lcall
and
or
mov
push
inc
mov
loope
inc
cltd
stc
mov
sub
jp
jne
out
dec
nop
sbbb
lods
pop
aaa
lret
mov
sub
inc
sub
dec
sub
mov
jne
in
int3
xchg
mov
or
dec
dec
lret
jne
push
jecxz
lahf
jmp
cmp
test
xchg
push
or
inc
adc
fwait
mov
es
fsts
jmp
adc
mov
lcall
ljmp
dec
push
les
xlat
mov
out
rorl
outsb
xchg
lret
inc
out
loop
rolb
bnd
jne
aam
out
cltd
cmpb
inc
clc
stc
int3
fistpll
mov
jo
and
sti
jecxz
rol
jbe
mov
xchg
fsubrl
idivb
mov
xchg
sbb
pop
jge
pop
enter
mov
dec
decb
movsb
cld
sub
cli
fnstenv
or
pop
dec
cmpsb
xchg
test
test
add
sub
pop
fiadds
out
and
orl
cmpsb
inc
pop
inc
cmp
mov
cmp
jbe
jp
adc
shl
insl
lret
xchg
mov
mov
xchg
jp
ljmp
arpl
mov
cli
les
xor
xlat
in
ljmp
stos
adc
scas
and
mov
or
xor
sub
inc
int
mov
leave
xchg
clc
movsl
inc
repnz
add
inc
gs
dec
xchg
idiv
cmp
xchg
inc
mov
dec
push
lds
xchg
cs
push
nop
ja
push
xchg
cli
adc
loope
into
test
cs
xlat
dec
or
lea
sub
add
adc
dec
inc
loope
add
pop
loope
jmp
xor
in
fistpl
out
sbb
cmp
test
cld
movsl
add
out
lock
lock
loopne
pop
stc
and
inc
mov
sub
pop
mov
fwait
test
aaa
test
mov
test
cmp
adc
mov
leave
jp
ss
push
rcll
mov
aas
and
test
jmp
adc
repz
mov
jne
dec
cli
sbb
cmc
daa
cmp
int3
push
ss
test
mov
nop
ja
add
clc
imul
and
push
loope
push
mov
ret
xorb
fisubrs
fcompl
xchg
pop
mov
cmp
sub
lret
jb
bound
sub
push
dec
add
xchg
and
frstor
pop
mov
or
sub
lahf
clc
adc
mov
add
adc
popf
daa
lods
pushf
out
sbb
jns
or
fistpll
mov
xchg
ret
testl
es
adc
dec
mov
mov
bound
pusha
out
push
dec
inc
push
adc
into
or
sbb
dec
fadd
fists
push
mov
loopne
inc
push
dec
jnp
stos
test
sub
es
jle
pop
nop
lods
jb
jmp
adc
shrl
loopne
and
dec
jle
inc
rolb
push
js
and
pop
mov
xor
cmp
cmpl
lds
add
mov
jg
xchg
mov
pop
out
sub
or
xor
cmpl
out
ds
call
call
fdivs
jae
insb
adc
xchg
adcl
add
test
pop
push
pop
inc
and
inc
or
add
lcall
fs
dec
imulb
fstpl
andb
sbb
xchg
loopne
loope
jb
pop
daa
notb
clc
subl
add
pusha
adc
and
adc
addb
imul
js
xchg
mov
in
rorl
jecxz
mov
push
xor
stos
sbb
push
push
notb
cmpsb
shlb
sbb
pop
nop
push
lret
sbb
cli
inc
and
call
pop
ja
jne
and
mov
stos
mov
fistps
sub
jne
lahf
insl
rcrl
adc
pop
loop
ss
xchg
stc
cmpb
notl
leave
inc
jmp
mov
push
shrl
mov
addl
xor
insl
pop
mov
bnd
jmp
adc
fidivl
jnp
adc
push
in
fstpl
inc
xor
xor
jb
popf
andb
cld
into
aad
sbb
cmp
jno
add
ljmp
loope
mov
xchg
sbb
imul
push
mov
mov
aam
aam
mov
inc
test
data16
mov
rcrb
mov
add
insl
int
inc
xor
ljmp
aas
mov
jb
inc
lea
int3
pop
rcll
mov
std
cmp
cmp
dec
sbb
mov
add
sbb
cmp
sbb
jle
insb
cli
xchg
rclb
pusha
and
mov
fadd
mov
fsubl
sarb
sbb
lahf
outsl
dec
insl
add
lods
dec
fldl2e
sahf
in
pop
mov
inc
in
xchg
popa
adc
sub
lcall
jbe
cmp
lea
or
outsl
imul
test
push
pop
pop
pop
or
repnz
add
mov
sbb
pop
jne
xchg
fisttps
lods
adc
sub
iret
mov
and
and
xchg
add
adc
xchg
and
cmp
pop
loop
push
mov
xchg
lods
data16
sbb
cmp
push
sub
mov
orb
or
mov
push
mov
mov
aaa
dec
data16
add
lret
inc
push
add
pop
mov
mov
add
or
adc
out
les
sbb
push
jge
dec
test
or
out
and
xchg
es
outsb
inc
cwtl
enter
ficompl
adc
lcall
jl
mov
aad
push
push
mov
dec
in
push
sar
std
adc
pop
push
adc
adc
mov
in
mov
inc
inc
dec
loop
test
fcomps
test
jmp
mov
les
shll
arpl
mov
xor
imul
or
loop
test
stos
arpl
mov
adc
pop
test
loope
std
movsb
mov
in
cmpsl
in
lea
arpl
jl
cmpsl
fnstcw
les
xorl
movl
cmp
icebp
jecxz
dec
fs
inc
xor
test
or
jl
aam
push
gs
add
jns
fadds
cmpsb
pop
mov
movsl
sbb
pusha
in
sbb
dec
mov
jle
add
inc
sub
ret
inc
and
mov
sahf
pop
enter
sbb
fmul
in
shlb
je
fcmovbe
outsb
inc
xchg
dec
cmp
jae
imul
dec
or
add
cmpsl
dec
ds
lahf
mov
enter
sbb
jg
arpl
mov
pop
paddw
xchg
jno
scas
adc
lds
loope
xchg
aam
and
hlt
cmpsb
mov
neg
push
mov
fdivs
icebp
push
sub
pop
xchg
fbld
sub
test
pusha
sahf
push
aad
stos
xor
aam
call
or
dec
bound
in
adc
stc
push
mov
mov
insb
add
mov
mov
sub
sub
test
xchg
lahf
cmp
jmp
int3
cmpsb
in
nop
sbb
clc
lds
jno
in
cmp
or
dec
cmp
enter
jg
pop
sbb
mov
add
cltd
rcll
add
fisubrs
loope
adc
mov
leave
lods
mov
dec
lods
xor
fst
mov
mov
sbb
mov
xchg
lcall
jl
or
arpl
inc
push
xor
dec
lods
inc
xlat
mov
inc
adc
sub
inc
pop
and
and
sub
in
push
mov
sub
pop
push
lock
xor
divb
dec
js
dec
or
aad
stc
lea
leave
lret
jne
mov
add
cmp
cmp
sbb
mov
xchg
arpl
push
pushf
push
leave
imul
rcrl
ds
jecxz
mov
push
or
movsl
movsb
sub
inc
push
imul
mov
add
sbb
sarl
insl
jae
stos
je
ljmp
shl
cmp
mov
mov
mov
push
dec
cli
ret
mov
idivb
test
orb
scas
insb
xchg
loop
stc
jo
push
aad
cli
jns
mov
or
and
dec
loopne
bound
xor
ja
bound
inc
ficompl
xchg
rcrb
xor
cmpsl
test
stc
push
sbb
push
sbbb
inc
xchg
jge
popf
adc
jmp
lods
nop
insb
mov
pop
lods
push
shlb
cltd
adc
in
ret
fs
sbb
adcb
xorl
add
jge
loopne
int
inc
ret
test
add
dec
arpl
in
or
and
aas
push
inc
pop
test
aaa
aam
sahf
cmp
add
hlt
cmp
cwtl
add
cmpsl
ficompl
dec
adc
aaa
imul
lret
fwait
jbe
push
and
xor
pop
push
cltd
jg
xchg
xchg
inc
mov
bound
mov
loop
sti
sub
push
fnstenv
mov
arpl
mov
dec
push
fcoml
orb
inc
out
iret
movsb
jp
hlt
add
xchg
push
aaa
adc
push
mov
std
xor
dec
enter
push
ss
add
xchg
pop
test
cli
lret
xchg
into
and
and
dec
mov
sub
pop
mov
mov
stc
cmp
and
movsb
mov
out
enter
jbe
repnz
inc
aaa
je
call
xchg
call
inc
in
push
sbb
pop
pop
pusha
cmpsl
inc
lods
mov
pop
and
pop
mov
inc
push
add
addr16
out
jge
and
daa
xchg
lock
xor
add
out
pop
push
shll
notb
inc
aad
xor
cwtl
mov
mov
mov
dec
mov
paddd
or
ja
mov
bound
sahf
push
lcall
push
fdivrs
or
jecxz
jge
outsl
clc
or
sub
or
out
jns
add
push
data16
dec
push
rcll
cmpl
push
scas
fstps
sub
dec
ja
rorl
ja
dec
xor
add
mov
into
xchg
aam
mulb
fisttpll
cs
insl
jae
lahf
pop
dec
dec
dec
fsts
mov
call
loope
sub
push
or
pop
dec
and
fcomi
mov
cmp
push
pop
cmp
lahf
jge
push
and
mov
inc
mov
rorl
sub
filds
stos
lcall
sbb
stos
and
cmp
cmp
cmp
andl
paddq
lods
mov
fucomi
sbb
movsb
inc
add
pop
mov
cmp
adc
and
push
jo
fildll
pop
dec
into
scas
dec
loope
xlat
out
fcom
dec
jecxz
scas
leave
adc
add
xor
out
movsl
js
pop
in
cmpsl
mov
push
jae
inc
insl
mov
mov
lcall
push
inc
dec
aas
fmul
dec
sbb
insl
cmp
sub
mov
mov
enter
mov
rcr
adc
jg
push
loopne
xor
add
fs
leave
adc
jne
insl
dec
lds
adc
gs
jmp
ds
shll
adcb
out
jb
mov
pop
int
insl
ljmp
adc
ret
neg
add
stos
fisttps
mov
repz
push
das
push
lods
jbe
xchg
std
pop
add
mov
pop
lret
xchg
das
aam
enter
jge
xor
dec
roll
cmp
scas
pop
dec
fisttpll
ss
fxch
jl
pushl
push
aad
pop
mov
sti
jns
iret
cwtl
stos
mov
or
std
ljmp
into
sbb
inc
std
adcl
cmc
add
repz
in
mov
testb
mov
fucomp
xor
cmp
push
xor
adc
cltd
cmpb
jl
xchg
mov
stc
or
jnp
stc
enter
mov
xchg
sbb
mov
push
jecxz
sub
outsb
cmp
rcrl
cltd
arpl
pop
cmp
xchg
int
mov
xchg
js
int
mov
sbb
sub
sub
inc
push
adc
out
dec
inc
nop
push
sub
cs
and
pop
mov
leave
hlt
int
loope
or
xlat
xchg
loope
sub
inc
pop
jb
and
mov
add
int
push
int3
ret
jmp
jecxz
xchg
cmp
test
es
push
sbb
repnz
iret
jl
repnz
push
gs
in
push
cmpsb
fimuls
stc
sub
mov
push
mov
mov
lret
sahf
hlt
cmp
mov
int
testl
jmp
and
mov
loope
jnp
daa
and
cld
mov
lea
or
popf
adc
cmp
mov
xor
push
and
pop
push
xor
inc
mov
smsw
jnp
jle
mov
mov
fs
xchg
xor
mov
sbb
xor
push
cmpsb
stc
mov
out
cs
xor
fstpt
jns
test
fldenv
sbbl
sbb
sub
addr16
jle
push
subl
mov
xor
mov
mov
add
jo
sub
negl
loope
mov
adc
clc
jne
testb
pop
mov
sbb
dec
aad
ror
das
push
pop
and
xor
adc
ficomps
ljmp
xor
adc
in
sub
mov
and
fldt
xchg
aaa
mov
sahf
xor
cmpsl
sbb
adc
adc
movsb
enter
ljmp
pop
imul
jmp
add
stc
test
stos
mov
mov
out
adc
mov
cmp
dec
sub
jb
cmp
cwtl
aad
inc
cmp
sti
stos
adc
push
push
std
fcoms
mov
xlat
fiaddl
rcrb
stc
popa
jne
xor
mov
and
jl
outsb
add
scas
jae
jg
in
mov
cmc
test
pusha
jle
fmuls
daa
cmp
pop
std
mov
cmp
scas
ss
int3
mov
inc
and
push
xor
adc
mov
movaps
sahf
ds
cmp
in
xor
or
sub
pop
or
shlb
sub
or
push
cltd
aam
fsubp
push
cmp
mov
mov
sbb
xchg
leave
jp
loopne
jb
sahf
add
mov
jae
leave
int
lahf
gs
jno
mov
dec
sbb
xor
jge
jle
add
xor
scas
or
and
sub
add
pop
adcb
jmp
js
cmpsb
std
stos
cmp
test
js
xchg
fistpl
rcrl
add
push
stos
fisttpll
xchg
cmp
mov
rorl
inc
mov
out
sub
push
int
sbb
leave
push
clc
sahf
jg
stos
xchg
inc
mov
in
push
jp
lds
add
xrelease
mov
xchg
lods
jle
cwtl
sbb
into
fldl
inc
mov
xchg
or
jecxz
sub
nop
ljmp
mov
pushf
ret
fcmovne
sbbl
lock
js
sub
jnp
daa
out
lahf
pop
inc
add
lret
insl
xchg
out
push
hlt
adc
inc
loopne
cmp
jae
es
and
inc
enter
xor
pop
cmp
inc
push
push
outsl
xchg
loop
push
addr16
scas
int
std
rcl
mov
push
in
test
rcll
pop
add
push
cmp
sub
jb
push
inc
jbe
test
movsb
dec
sti
xchg
xor
insb
inc
lods
adc
sbb
pop
ret
mov
sarl
or
icebp
sub
pop
cld
pop
cmp
jnp
jecxz
sarl
andl
sub
sub
jg
push
add
subl
int3
ds
and
fadds
stos
enter
movsl
sub
data16
popl
sbb
push
lret
cmc
inc
leave
in
imul
xchg
jnp
sbb
mov
inc
mov
lahf
iret
jae
adc
dec
cs
and
inc
insb
jl
jb
xchg
loope
and
stos
push
pop
pop
enter
movsb
in
mov
outsl
cmpsb
mov
adc
sub
xlat
test
lods
insb
out
subb
test
push
insb
inc
shrb
xchg
xlat
inc
sbb
mov
mov
lock
inc
ret
or
shlb
or
sbb
fidivl
dec
lret
jb
fsubrl
je
into
add
int
push
cmp
jle
xlat
xor
add
or
xor
icebp
or
orl
sub
insl
jae
add
paddd
unpckhps
fsubrl
xchg
decb
ja
add
sbb
and
xchg
jbe
lahf
xor
nop
cmpsb
add
push
rcr
mov
sbb
insl
lret
js
fidivs
xchg
fldenv
cs
stos
add
pushf
cmp
jg
cmp
or
pusha
xlat
cmpb
lds
out
mov
pusha
mov
pop
or
sub
and
push
mov
pushf
pop
insb
loop
test
sbb
sbb
call
shlb
cmp
cmp
sar
xor
gs
sbb
jmp
dec
mov
bound
cmc
xor
push
inc
sbb
sub
into
and
fnstenv
sbb
aaa
adc
test
pop
jl
cmpsl
popa
mov
je
arpl
lods
stc
and
mov
orb
mov
mov
iret
ds
add
adc
daa
mov
data16
mov
sub
xchg
test
cmp
inc
mov
adc
push
adc
pop
outsb
inc
testb
mov
movsl
out
sub
cmpsb
jp
clc
std
add
ficompl
sbbl
orl
enter
cli
movsl
mov
mov
or
cmp
lcall
sub
ja
icebp
cmp
inc
adc
mov
jnp
cmp
add
fldl
adc
and
xlat
pop
cmp
imul
notl
jmp
lods
and
cwtl
sarb
dec
jo
lods
lcall
and
popa
pushf
sahf
js
into
psllw
rclb
mov
or
sti
subb
xor
xor
cmp
stc
cmp
add
fstps
out
test
scas
sub
adc
sbb
inc
cmp
into
or
lcall
inc
sahf
movsl
sbb
jne
movups
test
jo
rcl
test
bound
repnz
sub
cmp
fmulp
mov
pop
xor
pop
mov
dec
test
pusha
insl
divb
xor
loope
dec
jns
cmp
mov
rclb
in
jg
mov
jge
xor
jg
cmp
pop
loop
scas
stos
cltd
push
pop
sbb
inc
push
fmuls
mov
not
loope
mov
andl
mov
mov
aas
or
add
daa
adc
mov
stc
icebp
add
push
push
mov
arpl
pop
inc
pop
shrl
popa
repnz
jb
jnp
cmp
inc
cltd
inc
lea
cwtl
cli
mov
push
xchg
add
and
mov
xor
mov
mov
inc
jmp
add
cld
repz
jno,pn
imul
insl
xchg
add
or
into
popa
sbb
data16
jo
in
pop
sbb
insb
ret
pushf
inc
mov
fldcw
and
xor
xchg
dec
je
clc
xor
mov
out
add
test
and
mov
cmp
push
fwait
arpl
push
popa
lods
loope
mov
fs
sub
rorb
or
gs
ffree
pop
xchg
ja
mov
jae
gs
push
scas
cmp
mov
dec
int
std
mov
jl
mov
mov
icebp
mov
das
pop
in
jb
icebp
dec
cmp
inc
push
pop
ret
push
add
test
movsl
xchg
out
or
mov
movsb
mov
adc
adcl
push
mov
pop
sub
mov
pop
fcmovnb
push
aam
dec
insl
insl
push
lods
mov
mov
pop
mov
cld
push
scas
sub
sar
cmpsb
jo
fisubs
cwtl
push
fidivrl
test
inc
shl
lods
push
pop
mov
fs
adc
in
pop
jae
clc
adc
and
cltd
testl
aaa
add
lds
push
int3
fldl
sbb
lock
or
aad
or
xchg
mov
cmpb
jae
std
jns
adc
pop
aas
rcl
sahf
imul
cmp
bound
pop
addr16
out
cmc
fldenv
out
add
jae
icebp
popf
add
cs
inc
pop
out
dec
pop
out
cmp
cwtl
pop
push
push
ss
mov
call
add
inc
int3
cmp
jmp
movsb
push
push
sub
roll
add
xchg
pop
decb
mov
jb
popf
add
loop
cmpl
movsl
and
nop
outsb
mov
gs
push
stos
push
fcoms
push
scas
push
jb
popa
sub
iret
ds
clc
cmp
adc
mov
cmp
xor
add
or
mov
sbb
fimull
push
in
lds
pushf
or
inc
mov
adc
push
and
xchg
and
fisubrs
shl
fistpll
pop
inc
mov
lahf
test
cmc
pop
dec
mov
fsubrs
or
sbb
adc
ljmp
stos
jns
and
cmp
xlat
mov
nop
shl
jb
test
test
fbld
sbb
js
test
lea
jno
lret
sbb
divl
mov
dec
or
xor
aad
shll
pop
mov
bound
mov
andb
sahf
mov
pushf
sahf
fiaddl
jo
jmp
xor
andl
mov
stc
daa
dec
fistpll
daa
popf
xor
add
movsb
xchg
add
scas
mov
pop
movsb
adc
adc
lods
sbb
mov
jae
mov
incl
cmp
inc
and
cmp
inc
jnp
scas
loopne
dec
lock
pusha
sbb
mov
idivb
mov
xor
outsb
or
test
pop
addr16
xchg
jbe
push
dec
aad
jae
inc
lds
and
jle
sbb
imulb
mov
mov
shlb
sbbb
xor
insl
jmp
jl
scas
pop
sbb
sbb
xor
xchg
fldl
sbbl
scas
std
mov
xor
pop
mov
push
jno
xor
push
xor
sub
push
scas
lods
dec
cmp
outsb
dec
and
push
data16
dec
adc
pop
adc
jbe
jg
lea
mov
dec
mov
push
out
pop
lea
dec
push
int
inc
pop
mov
test
test
pop
pushf
xchg
xor
adc
or
repz
test
out
lret
fwait
xor
fisttpll
aam
gs
out
mov
fistps
mov
push
dec
ret
nop
and
pop
cmp
xchg
dec
or
mov
int3
jns
cmp
sub
hlt
mov
outsb
and
imul
inc
mov
test
cld
stos
jne
and
dec
les
js
insb
cmp
xchg
or
sbb
lea
mov
fsubrl
mov
jbe
dec
jnp
imul
push
sbbb
pop
scas
sarl
jno
lock
adc
popf
mov
sub
jle
rcrb
ret
or
mov
push
lahf
lcall
jbe
xor
adc
sahf
test
push
subl
loopne
pop
inc
ffree
mov
gs
xchg
pop
pop
pop
cli
xchg
stos
jno
jns
ja
push
call
jns
sub
ja
cmp
push
adc
stos
cs
mov
or
repz
daa
mov
mov
mull
push
repnz
cmc
clc
mov
test
sbb
stc
xor
fs
test
dec
fwait
and
iret
ss
mov
mov
test
jle
jb
jns
mov
into
pop
cwtl
dec
add
dec
stos
test
cmc
jmp
jo
jne
xchg
iret
fiadds
test
add
and
jle
jmp
mov
dec
rclb
lea
mov
adc
sbb
lods
sub
popf
fmulp
hlt
push
data16
in
je
mov
in
icebp
divl
test
stos
mov
vbroadcasti32x2
loop
adc
sub
cs
sub
adc
into
and
push
push
in
mov
les
sbb
cmp
jo
add
arpl
jne
push
js
fs
loope
pop
push
mov
mov
xchg
fsubrs
mov
push
mov
orb
adc
and
jge
xor
cltd
fsts
cltd
add
leave
or
xchg
out
sub
jmp
xor
cmp
orb
cmpsb
pop
cmp
out
push
push
adc
stc
aas
mov
or
aaa
jae
xor
loop
adc
sbb
dec
call
ficompl
xlat
xchg
addr16
cli
mov
out
cld
ja
cmp
or
adc
xchg
and
cmpsb
mov
pop
xor
push
test
mov
scas
xchg
imul
lret
inc
out
insl
lret
lret
aam
or
xor
rorb
aaa
or
sbb
aas
dec
sbb
testb
xchg
rorb
push
jns
test
lods
cs
pop
mov
mov
and
outsb
sbb
jge
out
sahf
in
or
mov
adc
daa
cmc
das
pop
sub
addl
pop
lds
jnp
sub
pop
cltd
int
ds
jg
pop
pop
cli
shlb
mov
dec
insl
mov
fdivr
mov
push
pop
xchg
inc
mov
and
jle
xchg
jmp
and
imul
inc
lea
ja
mov
fcmovbe
pop
out
push
mov
dec
jns
inc
jae
add
jecxz
mov
xor
loopne
pop
sbb
mov
inc
pushf
sarb
test
and
fsubs
cmpsb
shrl
aas
ja
mov
xchg
jno
xchg
popf
aaa
cmpsb
iret
xchg
scas
clc
fstp
test
decl
adc
fidivl
inc
jmp
pop
cmp
jbe
fldenv
mov
mov
and
test
push
mov
cmc
lds
xor
inc
in
repnz
push
shll
jnp
jbe
xchg
repz
fistpll
xchg
mov
add
xor
popf
mov
fwait
cmp
add
sti
nop
or
mov
inc
sub
dec
fdivs
push
movsb
ret
into
stos
in
push
jl
nop
sub
pop
test
aas
pop
cs
add
mov
jbe
mov
dec
enter
iret
push
mov
loopne
dec
rcrb
sub
std
out
mov
fldcw
lret
adc
sbb
fcmovb
sub
sbb
fnstsw
add
mov
jno
push
dec
shrl
push
xchg
inc
movsl
movsl
dec
jecxz
aam
mov
xor
les
loope
jp
lcall
call
jae
les
sub
xchg
push
add
sub
clc
push
pushl
orl
rclb
push
ljmp
add
xchg
fs
mov
ja
inc
cwtl
push
pop
dec
cmp
push
dec
ret
sbb
jge
dec
push
in
lahf
ret
xchg
add
cli
dec
adc
cmp
lcall
movsl
lds
pop
rcl
mov
pop
push
add
iret
or
das
loope
pop
xor
arpl
xchg
jmp
fisubrs
dec
or
and
sbb
inc
sub
mov
ret
repnz
cmpsl
jle
lahf
and
or
xchg
xchg
jmp
rcll
jmp
mov
cltd
repnz
insb
sub
xor
pop
shl
and
mov
jmp
scas
mov
pop
inc
push
pop
out
xor
push
icebp
std
icebp
repnz
lods
push
mov
and
jge,pn
mov
and
das
cmp
test
cmc
lock
sbb
movsl
push
dec
ficoms
inc
xlat
dec
ret
adc
xor
notb
adc
push
outsl
jmp
add
xchg
sub
leave
inc
pop
int3
movsb
pop
dec
es
xchg
or
push
test
sbb
pop
fsubs
jle
test
ljmp
cmc
sahf
inc
lock
adc
pop
sbb
push
sbb
movsl
popfw
pop
dec
shrl
fstps
push
push
mov
je
sbb
add
fbld
repnz
add
arpl
jne
cli
int3
pop
fs
mov
xchg
mov
adc
jnp
dec
aad
mov
sub
repnz
push
out
fs
jnp
je
repz
lcall
dec
dec
sub
jle
into
sbb
sti
inc
cmc
inc
pop
pop
pop
in
into
jo
mov
sar
popf
scas
jae
inc
sub
dec
es
mov
mov
push
mov
in
add
imul
notb
ret
jmp
pusha
mov
mov
cwtl
sbb
or
daa
outsb
mov
push
pop
mov
mov
mov
fcmovnbe
mov
ja
inc
negl
sbb
jb
pop
fdivl
adc
fstpl
cmp
das
fildll
inc
jle
sbb
call
xchg
cli
jge
xchg
push
push
sarb
ds
inc
pop
inc
call
icebp
mov
jo
iret
testb
orb
mov
lcall
adc
jl
sub
pop
rcrl
cmp
mov
sbb
jge
outsl
mov
or
mov
or
pop
xor
pop
pop
or
jb
xchg
lret
test
pop
mov
push
pop
mov
ss
mov
rcrl
dec
outsl
adc
fs
pop
lock
loopne,pt
out
insl
jmp
arpl
and
psrld
out
sub
inc
outsb
scas
sahf
cmc
jecxz
fcomps
test
adc
jo
add
add
mov
and
dec
mov
xor
sbb
stos
xor
out
aam
test
dec
fnstsw
adc
xor
mov
or
fwait
and
sub
dec
shlb
pop
cmp
out
cmp
shrd
jge
imull
jmp
sbb
or
repnz
mov
add
notl
fcmovb
dec
adc
jge
xchg
lret
xchg
mov
fxch
dec
pop
cld
ret
loopne
shll
mov
out
or
adc
mov
addr16
pop
shr
push
adc
fisttps
mov
mov
sbb
imull
inc
std
shrl
add
sub
aas
imul
cmpsl
repz
pop
aaa
inc
pushf
enter
sub
jecxz
adc
jae
push
pop
lret
ja
or
xchg
mov
cmp
jns
pushf
fidivrl
ret
movsb
inc
aad
loopne
sbb
jb
popf
push
inc
insb
out
xor
adc
mov
and
adc
adc
pop
cmp
push
notb
rorl
sub
movsl
clc
ret
cwtl
outsb
outsl
sbb
xor
pop
mov
pushf
loope
mov
mov
jae
push
push
and
cmpsl
ret
div
sub
popa
loop
push
mov
sbb
fwait
sbb
mov
sbb
insl
notl
jne
sbb
out
xor
jmp
and
icebp
and
inc
cmp
gs
inc
cli
xor
data16
hlt
inc
adc
cmpb
pop
lods
push
in
xchg
sbb
mov
and
inc
sbb
ljmp
aad
pop
push
ljmp
mov
enter
mov
jnp
imul
ret
or
mov
inc
fsubl
fdivrs
ljmp
push
fst
xchg
mov
repnz
mov
mov
insl
mov
adc
xchg
popf
repnz
jg
sahf
testl
jge
stos
jne
dec
fs
fists
mov
int
aaa
enter
orl
stos
test
add
test
scas
cmp
fimull
jb
sahf
mov
cwtl
bound
push
lcall
xor
push
mov
lret
subl
repz
lods
mov
call
add
add
adc
dec
pushl
jge
or
xchg
jecxz
test
popf
xchg
mov
mov
lock
mov
and
jmp
sbb
mov
push
mov
xchg
add
mov
jbe
scas
clc
hlt
push
inc
iret
stc
mov
inc
adc
mov
dec
sbb
addr16
adcl
adc
loop
repnz
cmpsb
mov
mov
addb
in
or
scas
add
jle
add
or
jb
mov
mov
jbe
jns
push
cmc
pop
mov
ret
inc
out
lods
aam
push
mov
lahf
lock
shrb
decb
int
rolb
cmp
sahf
mov
cwtl
adc
jbe
shl
lock
aaa
sub
fcmovne
ds
xchg
out
jg
mov
bsf
mov
js
jne
clc
dec
fsubrl
lods
jmp
push
add
sbb
xchg
adc
daa
jb
xlat
dec
pop
mov
or
icebp
insl
rol
jmp
dec
test
in
aam
clc
aas
push
popf
hlt
xchg
xor
jg
push
adc
int
or
lret
and
add
clc
xchg
outsb
jo
cmp
pop
xchg
dec
vunpcklpd
rclb
insb
add
outsl
jo
adc
dec
inc
adc
and
bound
xor
les
mov
xchg
mov
or
movsl
and
and
mov
scas
sbb
jle
jo
sti
xor
xchg
or
add
mov
mov
cmp
stos
test
mov
cltd
sub
and
fwait
sub
pushf
xchg
and
clc
and
dec
flds
jp
fwait
test
ja
dec
mov
orb
insl
lret
or
and
out
jg
sbb
movsbl
ret
lea
push
and
dec
out
jp
add
sub
mov
cmc
inc
pop
mov
test
add
pop
adc
das
pop
xor
dec
pop
ret
xor
adc
sarl
sub
lea
dec
mov
push
lock
out
jbe
pop
cmp
and
sahf
mov
xor
ret
and
push
call
dec
xor
das
shll
inc
testl
pushf
xchg
out
xor
movsb
mov
adcl
stc
push
iret
and
dec
jecxz
and
inc
push
popa
rcll
jmp
add
out
outsl
out
adc
mov
popf
cltd
lahf
xchg
cmpsl
sti
outsl
lock
data16
test
les
negb
fstl
pop
mov
int3
insb
stos
xchg
mov
mov
dec
add
xchg
push
push
mov
arpl
sbb
stc
imul
adc
xor
and
jo
inc
ret
sub
cmp
xchg
imul
mov
cmc
mov
in
adc
pop
jno
inc
icebp
cwtl
ret
jnp
push
sbb
xorl
or
repnz
cmp
add
test
jo
sbb
mov
lcall
jnp
cmpxchg
xlat
imul
aad
or
inc
ljmp
add
mov
cmp
sub
add
shll
lret
test
dec
inc
in
pop
and
adc
xchg
push
or
inc
popl
scas
push
push
les
mov
call
loopne
or
bound
xchg
dec
pop
stos
mov
pop
testl
std
stc
addr16
cmpsb
es
mov
pop
mov
cwtl
vpandn
mov
add
aad
inc
shlb
and
jno
adc
push
ljmp
andl
in
pushf
aam
ret
icebp
dec
hlt
sbb
icebp
cmc
loope
aam
inc
push
push
sub
inc
sahf
xchg
sbb
adc
loopne
fisttpll
outsl
popf
cwtl
int
lock
mov
loope
jae
mov
fnstsw
scas
push
pop
inc
in
fwait
jnp
incb
push
addl
cmp
or
sub
lods
lods
mov
cltd
sub
mov
lret
inc
outsl
jns
cmp
inc
xor
inc
push
pop
inc
xor
pop
or
std
loope
rorl
inc
dec
jp
xchg
sbb
repz
loope
xor
pop
xchg
test
and
in
stos
test
dec
sbb
out
adc
shrl
lahf
fwait
std
mov
jbe
jl
add
ds
lahf
roll
xchg
jbe
sbb
test
js
push
fidivl
sbb
stos
sar
sbb
and
pop
hlt
dec
imul
add
dec
fld
das
enter
mov
test
out
test
mov
adc
sbb
sbb
push
stos
shl
xchg
jle
cmp
mov
mov
cmp
cmc
pop
outsb
add
mov
jne
shll
popf
lds
cmp
pop
push
idivb
cltd
dec
adc
sahf
push
pop
jle
mov
insb
or
ja
negb
xchg
push
rol
or
data16
loope
pushf
push
pop
gs
push
and
les
inc
jp
inc
push
inc
or
rcrb
js
jbe
push
fistl
popf
xchg
and
push
pop
aas
push
fisubs
xchg
cmp
xor
push
push
jle
push
mov
mov
stc
xchg
lods
out
push
mov
xlat
mov
es
lahf
andl
mov
sbb
add
lods
xchg
mov
jnp
sbb
or
adc
inc
jg
pusha
pop
inc
sbb
mov
test
cmp
xchg
in
out
cmp
mov
movsl
outsl
and
pop
in
jb
sub
dec
bound
dec
adc
imul
pop
insl
sahf
repz
sbb
sub
stos
inc
inc
bound
and
call
pop
daa
repnz
xchg
mov
cmp
cmp
and
stos
adc
loope
popa
lods
mov
xor
popf
popf
out
mov
mov
fldcw
jae
imul
hlt
cmp
jo
adc
xchg
push
mov
loope
lds
mov
lods
jbe
rorl
lea
repnz
mov
mov
imull
hlt
fidivl
mov
loop,pt
pop
repnz
insl
nop
mov
and
adc
push
sub
inc
retw
outsb
mov
mov
or
add
shll
dec
inc
sub
movsb
aaa
add
sub
push
fnstcw
inc
cltd
das
push
in
popa
mov
push
pop
out
mov
or
or
sbb
add
or
int
mov
mov
cmp
aam
clc
dec
jno
fucomp
push
xor
shrb
notb
jge
filds
stos
dec
or
lock
jnp
mov
lea
xchg
movl
jl
cmp
cmp
cs
rcrb
sahf
mov
out
adc
add
push
shlb
in
popf
xorb
dec
or
xor
test
lret
popa
cmp
int
into
push
adc
add
jle
test
mov
and
or
mov
xor
adc
inc
leave
rcr
cld
cmc
xorb
lahf
xchg
adc
lret
inc
xor
mov
push
and
cmpsb
je
ds
add
test
mov
in
shl
js
nop
test
cli
sbbb
insl
xchg
notl
call
jp
loopne
iret
mov
loop
daa
and
movb
icebp
into
mov
outsb
lock
andl
in
jmp
nop
adc
mov
in
cld
jge
mov
call
lods
push
cmp
mov
inc
shll
das
fsubs
jmp
leave
inc
cmp
sub
xor
inc
xlat
leave
int
lahf
mov
mul
jns
and
repz
dec
ret
cmp
lods
jns
cltd
inc
imul
inc
sub
fidivs
push
sbb
out
mov
rcrl
cmp
sbb
call
or
stos
add
mov
mov
cmpsb
scas
mov
sub
pop
ret
xchg
push
repnz
sti
cld
pop
push
lds
popa
lea
jae
in
lcall
cmp
and
imul
dec
dec
arpl
arpl
jmp
sbb
int
movsl
roll
mov
push
lret
int
pminsw
mov
movsb
pop
and
ret
cmovg
roll
subb
andb
roll
mov
ss
sub
xor
scas
add
sub
xor
mov
push
test
mov
aas
mov
mov
fwait
and
pop
in
inc
pop
sahf
xor
psllw
imul
mov
stos
inc
inc
movsl
imul
mov
push
xor
stos
xor
or
call
push
scas
notb
mov
mov
mov
in
inc
push
jne
mov
jo
int
pop
inc
popa
pop
test
mov
movsl
lret
sub
scas
mov
xor
mov
fwait
lds
and
dec
xchg
cltd
mov
mov
stos
pushf
lock
cmp
push
ret
fmulp
xor
stc
mov
call
dec
mov
shrb
mov
roll
xor
lea
dec
pop
cmp
fimuls
add
and
decb
mov
push
dec
cmp
mov
and
dec
dec
mov
push
outsb
jge
incl
push
cmpsb
aad
pop
xchg
shrl
aas
data16
ds
cmpsl
lods
adc
or
xchg
lock
pop
loope
test
jae,pt
scas
in
out
and
sub
or
shrl
into
jp
dec
sub
sbb
jno
or
jb
dec
sub
sub
nop
push
mov
int
test
xor
lahf
sbb
imul
mov
ljmp
or
loopne
mov
fisubrl
mov
ds
imul
xor
push
adc
and
xchg
in
rclb
into
inc
pop
inc
mov
push
xchg
ret
adc
jbe
xchg
gs
loop
jnp
std
hlt
mov
cli
mov
sbb
xchg
addr16
and
repnz
cmp
mov
xchg
adc
dec
sbb
int3
push
shll
loop
adc
testb
mov
inc
test
imul
into
into
lret
int3
subl
pop
push
pop
out
inc
mov
jne,pt
dec
sbb
push
adcb
inc
pop
nop
xchg
out
adc
mov
push
orb
xor
xchg
lret
mov
sbb
shll
dec
adc
inc
add
lcall
lcall
mov
cltd
or
jae
into
nop
adc
cmp
out
adc
enter
sbb
or
pushf
rorl
lds
add
cmpsl
pusha
ljmp
enter
mov
inc
pop
insl
xor
cltd
testl
in
lret
push
sti
add
call
imul
add
push
outsb
mul
push
hlt
push
insb
outsb
test
mov
xchg
idiv
ret
cltd
and
subl
cli
sub
outsb
add
hlt
aam
or
xor
adc
sub
add
daa
sub
add
push
jp
je
jb
sbb
mov
xchg
xchg
lods
mov
in
pop
jb
aam
xchg
dec
in
sqrtps
fcoml
out
xlat
jecxz
fisubl
psubusb
call
jle
lods
stos
dec
sbb
jg
cmc
jno
imulb
cmpsb
xorl
sbb
xlat
xchg
jp
pop
stos
test
je,pn
and
jns
mov
mov
mov
xor
pop
push
xorb
mov
push
jge
mov
outsl
dec
cmpsl
pop
clc
sti
cmpsl
mov
jb
xchg
fisubrl
dec
neg
popf
scas
xchg
xchg
inc
mov
in
pop
pop
sahf
mov
add
inc
cmpsb
xor
cmp
or
outsl
cmpl
pop
in
xchg
ror
stc
pop
mov
sub
or
mov
scas
incb
mov
icebp
inc
jp
mov
movsl
rcl
xor
add
mov
fs
push
push
pop
cmp
cmpsl
push
into
clc
outsl
ffree
push
popf
pop
xchg
push
or
mov
push
and
and
test
cld
rcl
cmp
lcall
cmpsb
sbbb
cmpl
cld
insb
cmp
fcmovu
aaa
add
cli
stc
xor
pop
imul
inc
mov
call
or
mov
cmpb
leave
movsl
xchg
arpl
mov
sub
popf
shrb
into
scas
rorb
sub
push
mov
jbe
lds
pop
xchg
sbb
lds
cmp
into
scas
js
pop
sarb
jns
jbe
cld
lret
jmp
pusha
dec
xor
inc
enter
arpl
outsl
adcl
mov
aam
mov
push
ja
pop
lods
xchg
cs
adc
fwait
icebp
jl
gs
test
aaa
mov
cwtl
call
fcomip
add
dec
out
negb
pop
adc
insl
xor
add
popa
mov
dec
mov
loopne
mov
iret
mov
out
dec
fwait
hlt
fcomps
inc
stc
mov
movsl
int3
testb
adc
mov
and
enter
mov
dec
cld
dec
outsb
xor
mov
hlt
iret
decw
das
mov
mov
ja
int
js
pop
lret
jno
inc
push
pop
in
outsl
pusha
in
inc
xor
les
es
fiaddl
pop
push
js
inc
fucomp
mov
outsl
pop
dec
push
mov
jno
vpunpckhdq
cmpsl
in
notb
js
adc
cmp
push
xchg
ret
dec
adc
cli
cmp
push
mov
xchg
divb
or
push
incl
es
test
mov
jno
xor
cltd
adc
bound
lods
shlb
fsubrs
xchg
and
mov
fldcw
cmp
pop
aam
ret
rclb
mov
inc
mov
popf
out
sbb
sub
shrl
sbb
mov
dec
scas
sub
fiaddl
dec
aam
arpl
and
fs
mov
push
in
scas
dec
cmc
bound
or
adc
arpl
and
inc
in
ret
ds
or
and
pop
mov
out
jno
in
in
adc
fdivrp
hlt
mov
inc
adc
dec
pop
push
lret
lahf
xor
enter
and
in
pop
movsb
push
fwait
movsl
ror
jnp
js
scas
in
jae
dec
xor
notb
daa
xor
insl
mov
xchg
sub
loope
lahf
insb
jno
sahf
cmc
jb
in
divb
xlat
jg
arpl
sahf
mov
outsb
jge
dec
sub
test
test
cmp
pop
mov
popf
sarb
sbb
dec
jbe
gs
or
data16
mov
push
sti
lds
cmp
iret
addr16
push
lret
mov
pusha
ror
scas
sbb
stos
pop
addl
lahf
ret
and
imul
stos
hlt
mov
push
pop
leave
push
xor
sub
cmpsb
pop
sbb
stc
mov
pop
mov
aad
cmp
lcall
jge
in
not
inc
iret
in
mov
clc
sbb
mov
out
iret
jno
jae
xchg
or
mov
sub
add
add
pushf
insl
xchg
stos
ja
enter
sti
or
inc
pop
imul
pop
sub
in
xor
hlt
arpl
cmp
push
lahf
sbb
iret
mov
testl
sub
out
outsb
sbb
sub
leave
imul
push
movsl
lock
faddl
hlt
in
mov
and
mov
adc
pop
loope
je
dec
jae
dec
sbb
int
pusha
jo
mov
js
jb
push
xlat
mov
push
test
sbb
sahf
inc
fsubrs
pop
shr
adc
scas
jae
ret
jecxz
cld
hlt
cmp
add
push
or
stc
es
jp
repz
std
pop
inc
pop
loope
pmaxub
cmp
adcl
xchg
jl
mov
addr16
aad
xchg
pop
adc
daa
mov
incb
sub
shl
xor
push
insb
data16
sahf
lret
push
inc
orw
mov
fs
mov
popa
mov
jae
jmp
ja
sub
imul
mov
outsb
jle
shll
enter
fcmovnu
mov
pop
insl
jmp
adc
repz
nop
mov
or
js
cmp
roll
sbb
rorl
fisubs
loope
pushl
or
mov
iret
ret
int
add
ds
xchg
hlt
repnz
mov
imulb
and
std
gs
xchg
mov
cwtl
lds
sahf
ret
mov
xor
xchg
adc
jns,pt
dec
xor
sti
jne
adc
sub
mov
push
ss
sbb
test
sub
mov
adc
xchg
and
shrb
jne
addr16
xchg
stc
mov
sub
js
in
mov
stc
iret
lcall
cmpsl
sub
push
daa
icebp
sahf
inc
movsb
xchg
dec
call
add
cmpl
xor
push
pop
daa
mov
ljmp
addr16
adc
mov
pop
xchg
das
shrl
push
jb
sub
sub
hlt
dec
inc
push
mov
mov
ud0
adc
mov
in
pop
mov
movsl
icebp
cld
cld
lcall
pop
jge
inc
mov
adc
jne
sti
jne
adc
dec
xchg
xlat
push
mov
movsb
enter
test
rclb
dec
add
add
dec
cmp
daa
jno
mov
sahf
lods
inc
mov
add
inc
cmp
out
cvtdq2ps
sub
scas
les
mov
mov
mov
sbb
adc
mov
lret
popa
fimuls
ljmp
loope
mov
sub
mov
repnz
cmc
int
pop
dec
dec
add
jnp
xchg
inc
das
es
mov
ret
cmp
xchg
sbb
sbb
outsb
or
pusha
xchg
mov
cld
fisttpll
repz
inc
mov
push
divb
sbb
mov
test
mov
pop
rcrl
in
ja
fsts
xor
aaa
test
mov
or
jne
dec
popa
es
sub
test
push
pop
sub
dec
sarl
cmpsl
pop
nop
cmp
pop
icebp
xchg
jmp
mov
repnz
shlb
jg
lret
fildll
ja
add
sbb
and
inc
adcl
in
outsb
cli
add
dec
pop
popf
aaa
lret
mulb
out
push
push
mov
push
pop
push
push
loop
mov
mov
clc
into
leave
mov
loope
out
mov
adc
jb
mov
ficoms
ds
in
sti
jle
jnp
mov
rclb
jo
roll
aas
dec
mov
mov
lods
adc
sub
adc
inc
or
repz
into
xchg
sub
std
adc
sbbl
ja
popl
mov
cwtl
shrb
dec
ss
stos
popa
mov
into
dec
fadds
stos
movsl
push
mov
inc
dec
mov
call
stos
in
jo
test
and
test
push
xchg
dec
loope
sub
test
cmp
icebp
cmp
ja
out
out
inc
mov
call
add
mov
rcrb
dec
xor
mov
pop
fnstcw
lcall
mov
lahf
inc
jne
sbb
dec
and
mov
mov
in
hlt
xor
push
mov
call
rcrb
sub
es
data16
cld
iret
push
rcll
cltd
xchg
adc
inc
and
imul
cmp
xor
orb
adcb
pusha
sub
pop
dec
outsb
cmp
mov
lret
stos
lcall
aas
ljmp
mov
inc
push
push
out
shll
je
xor
loop
push
decb
mov
adc
sbb
lahf
pop
push
shrl
xchg
sbb
fists
mov
and
inc
cltd
out
push
mov
cmc
rcr
push
fsubrp
push
lock
outsb
jbe
mov
cmc
mov
les
jmp
add
insl
and
jl
mov
jns
mov
mov
push
push
mov
int
sbb
dec
aam
aad
sbb
jle
pop
jno
cmp
pushf
xor
jbe
mov
lods
sti
xchg
pop
cmp
rcll
divb
mov
cld
dec
adc
mov
repnz
add
xor
shlb
sti
sbb
jmp
daa
pop
rcl
sbb
mov
popa
sub
sti
lcall
xchg
test
loope
dec
jnp
sbb
pop
sahf
std
xchg
push
and
xor
xchg
sub
lock
notl
cmp
enter
fcmovbe
inc
add
jp
xlat
aam
add
cli
popf
mov
push
sub
jns
add
les
sub
mov
jge
xchg
ljmp
and
dec
ja
mov
inc
sub
lods
jae
in
xor
aad
in
xchg
or
mov
in
add
inc
shlb
pop
les
mov
mov
in
scas
xor
adc
xor
dec
pop
iret
xchg
jb
out
and
loope
ret
mov
xchg
outsl
es
xlat
and
sub
sbb
mov
shll
jnp
adc
outsl
jmp
sub
gs
int3
cmp
mov
push
int3
nop
pusha
jg
cltd
push
sbb
xchg
in
push
pop
xor
inc
push
jecxz
shll
fdivl
rolb
dec
subb
and
mov
out
mov
insl
fs
pushf
cmp
scas
dec
movq
fists
lea
fwait
jge
cmpsb
movb
jne
push
mov
shl
pop
mov
mov
mov
xchg
insl
pusha
out
push
scas
fwait
stc
sahf
add
pop
jmp
xorb
negl
fistpl
mov
lcall
loop
mov
lret
adc
jmp
dec
adcl
add
mov
lea
jecxz
jp
lret
andb
aad
jecxz
nop
add
les
mov
ss
out
xor
sbb
add
dec
add
adc
shlb
adc
dec
