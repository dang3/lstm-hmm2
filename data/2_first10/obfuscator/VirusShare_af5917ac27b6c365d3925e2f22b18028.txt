pop
lret
push
mov
pop
sbb
les
jg
test
in
pop
add
daa
or
add
or
inc
pop
or
mov
out
imul
js
sub
pop
push
cmp
xchg
sti
or
cmpsl
mov
add
loope
into
dec
xchg
inc
rcr
adc
imul
iret
aam
shrl
ja
mov
out
mov
loope
outsl
sbb
arpl
dec
or
mov
sbb
dec
repz
and
lock
xchg
lcall
out
in
mov
sbb
subl
add
scas
lea
push
jns
pop
jnp
mov
lods
inc
add
push
jns
cli
mov
insb
or
fistpl
lea
stos
push
mov
je
repnz
and
ficoml
jp
and
fimull
and
add
adcb
not
setg
stos
seto
pushf
mov
mov
lea
pusha
pushf
push
push
lea
call
pushf
pusha
jmp
mov
int3
xchg
out
orb
jo
adc
jb
jg
outsb
push
mov
xor
xlat
inc
addr16
mov
inc
pop
jno
push
fwait
mov
shlb
mov
lds
dec
ds
adc
out
daa
cmpb
test
iret
cli
mov
cwtl
in
ret
iret
mov
loopne
das
jl
inc
hlt
aad
outsl
sbb
in
cwtl
dec
dec
rcrl
pop
push
lahf
jge
sahf
clc
fmulp
mov
cmp
push
mov
lods
lcall
dec
imul
mov
cmpsl
xchg
inc
test
mov
fs
jne
rol
mov
ror
test
cmc
sub
not
jmp
lea
jae
sar
ror
bt
mov
xchg
or
setns
lea
mov
btc
mov
stc
bt
xor
jmp
mov
jge
adc
cwtl
push
push
xlat
mov
cmpsl
cld
leave
pop
daa
push
je
hlt
stos
xchg
imul
jae
jp
nop
divb
fs
pushf
sbb
out
xor
and
cmpsl
fsubrp
inc
scas
test
aaa
push
pop
xor
fcompl
mov
cmp
pop
xlat
subl
leave
lahf
jns
and
mov
rorl
jp
sar
adc
push
in
mov
int3
mov
adc
push
jl
add
push
pop
iret
mov
aas
xchg
mov
mov
mov
inc
lcall
jae
jg
test
mov
addr16
dec
roll
aaa
mov
enter
ds
add
xchg
loop
ja
test
mov
or
or
xchg
stos
testl
shll
test
lahf
rcrl
icebp
pop
cmc
cmc
cmc
imul
cmp
cmp
add
pushf
lea
jmp
push
lea
je
cmp
sub
stc
test
stc
cmp
jmp
stc
bt
test
movw
call
push
int3
xor
xchg
insl
cmp
rorb
xor
add
mov
cwtl
jo
aad
test
push
lea
loop
jmp
sub
imulb
fbld
ss
popa
int3
push
fistpl
fdivs
ds
popf
jae
push
mov
inc
push
test
xchg
outsb
inc
xchg
xor
loopne
jnp
sub
iret
fcompl
call
mov
imul
stos
adcl
sub
push
mov
filds
pop
or
mov
dec
imul
test
xorl
pop
mov
sub
ret
xchg
push
mov
inc
xchg
aad
ljmp
frstor
push
int3
sti
mov
in
xchg
fidivl
jg
jno
jmp
mov
icebp
adc
mov
or
mov
add
xor
leave
xor
fiaddl
cmpsb
icebp
mov
xor
inc
sbb
mov
cmp
aam
test
imul
iret
lds
frstor
add
xchg
test
inc
xchg
out
inc
adc
inc
push
inc
xor
jne
push
sub
fnstcw
xlat
lods
jbe
mov
mov
lods
into
and
jecxz
sub
jg
pop
rcrl
inc
adc
cmpsb
jecxz
imul
fists
adc
pop
sub
aad
subb
mov
and
push
push
fmull
sub
ret
mov
add
idivb
jg
rclb
mov
jmp
mov
xchg
rcll
pop
xor
movsl
shl
jl
add
adc
jo
adc
xor
aaa
stc
sub
push
orb
mov
das
and
and
xor
push
push
mov
add
or
inc
test
push
fnstsw
scas
fbld
xor
aas
mov
cmc
cmp
jae
fsts
popf
hlt
lahf
jo
or
mov
in
sbb
shrb
add
dec
cs
inc
dec
std
outsb
popa
xor
int3
enter
jp
and
das
fdivrl
vmread
dec
jl
subl
pop
or
pop
mov
fs
ffree
out
ljmp
daa
mov
shl
shll
repz
xchg
pusha
xor
jecxz
mov
xor
xor
test
adc
push
and
int3
popf
insb
inc
sbb
and
std
sub
adc
sub
daa
stos
dec
test
insb
sbb
jns
adc
cmp
roll
jns
jnp
inc
je
scas
or
inc
lods
or
lea
addb
negb
pop
mov
movsb
xchg
nop
clc
inc
lods
pop
nop
push
int3
fidivs
sbb
ljmp
xor
add
push
mov
jbe
test
pusha
jne
sub
int
inc
mov
out
lods
rorl
sahf
scas
icebp
in
sub
cmp
fdivl
mov
adc
cmp
pusha
stc
cmp
call
lock
aaa
adc
into
xchg
addb
std
add
add
jnp
mov
mov
and
out
mov
iret
pushf
lds
jnp
insl
idivb
or
xchg
aaa
int
jge
cmp
jle
adc
insl
mov
push
lcall
cld
les
fs
cmp
push
mov
mov
xor
pop
rorl
add
fcmovbe
add
xor
mov
jmp
call
data16
or
adc
das
cli
int
jl
and
mov
inc
cltd
sub
push
pop
xchg
push
mov
ret
push
mov
xor
push
ficoms
pop
cpuid
jmp
add
and
cld
rcll
pop
movsb
aam
sub
mov
inc
mov
test
scas
adc
jbe
cmp
es
mov
mov
arpl
lea
movsb
fstps
sarb
xlat
inc
mov
adc
push
jle
pop
fildll
adc
test
in
mov
lock
push
jecxz
adcl
fisubs
xchg
mov
rcll
adc
push
sub
cwtl
outsb
inc
sbb
cltd
jnp
inc
xchg
dec
subb
dec
push
or
adc
mov
aas
mov
into
mov
inc
mov
es
jle
push
mov
cmp
roll
lret
scas
jb
fnsave
lcall
or
data16
and
pop
cmpsl
sbb
mov
lds
loope
jl
pop
sbb
out
mov
lcall
inc
or
stos
pusha
or
mov
or
and
int
jmp
sahf
xchg
dec
xchg
dec
jae
shll
test
mov
fbld
ret
mov
pop
xorl
pop
sub
aas
add
mov
lds
aad
xor
cmp
jno
ret
push
scas
mov
mov
jb
ds
push
push
mov
dec
adc
sbb
mov
push
pop
cltd
das
orl
push
push
push
andb
loopne
pushf
sub
jmp
push
movl
jmp
insb
in
cmp
push
fisubrs
xlat
lods
jg
xchg
sub
inc
scas
fmull
or
inc
cmp
repnz
jge
mov
fwait
inc
inc
jmp
insb
negb
aad
rclb
stos
xor
push
add
sub
jmp
cli
mov
in
sbbl
mov
stos
iret
xchg
jnp
int
dec
adc
cmp
shll
les
int
dec
dec
cld
xor
jno
xor
sbb
push
outsb
add
lret
insb
adc
sbb
popf
push
push
dec
sbb
imul
xor
and
dec
movsl
dec
fsubrl
lock
sbb
or
mov
inc
popf
outsl
ss
enter
pop
loope
test
dec
fdivp
ret
sub
add
inc
and
push
push
pushl
ret
outsl
std
push
cmp
ss
fistpll
mov
pop
jne
dec
iret
jl
jae
je
adc
and
out
inc
aaa
xor
add
cmp
ja
inc
testl
lret
jns
push
jecxz
mov
push
jae
stc
loope
incl
jle
mov
pushf
faddl
jmp
mov
rcll
orb
out
pop
addr16
jle
mov
cmp
fildll
lcall
cltd
dec
out
or
dec
cmpl
pop
int3
sub
pop
in
inc
sbb
xchg
dec
jns
call
and
insb
fstpl
xchg
jnp
pop
push
inc
dec
call
into
mov
ds
cmpps
nop
out
adc
ds
and
loop
jns
push
or
sub
mov
dec
sbb
jno
push
mov
aam
iret
push
mov
jb
fisttps
gs
mov
cmp
xchg
repz
xchg
js
push
or
ret
sbb
inc
call
jmp
aas
int3
idivl
adc
sbb
scas
xchg
std
shlb
arpl
mov
iret
sub
jp
xchg
in
mov
mov
das
mov
jmp
out
insl
jns
and
jae
sbb
rclb
jp
jecxz
cmpsb
enter
adc
nop
rorb
adc
jp
xchg
mov
mov
mov
sbb
fiadds
ret
mov
inc
sbb
rcrl
lcall
push
adc
sahf
into
or
out
and
add
dec
fldenv
idiv
in
cli
and
dec
and
jmp
maxps
iret
mov
dec
cld
cmp
push
cmpsl
or
lods
jmp
mov
sub
in
dec
or
pop
adc
and
rol
xchg
and
add
fsubrs
jl
mov
xor
mov
push
jmp
sti
loopne
out
je
xchg
in
jle
xor
enter
lock
icebp
push
lods
jmp
cld
das
mov
jmp
pop
lcall
pand
rorl
cmpsl
dec
mov
pop
nop
cmp
leave
test
dec
mov
addl
push
mov
orb
rcrb
iret
add
fs
and
add
push
xorl
movsb
pop
lcall
std
stc
xchg
cmpsl
enter
stc
push
and
mov
enter
sbb
cmpsl
inc
dec
sbb
mov
pop
xor
fsubrs
cmpsl
push
notb
mov
sub
dec
and
fsubs
add
lods
add
std
or
adc
pop
rorl
call
sub
mov
jb
jp
cs
adc
xor
shlb
mov
xchg
imul
imul
inc
inc
dec
xor
cs
insb
add
test
pushf
pushfw
popw
pushf
setb
clc
mov
stc
ror
push
test
not
call
jmp
mov
pushf
lea
jmp
mov
adc
push
lea
jae
call
add
push
gs
insb
outsl
jae
dec
gs
lea
call
jmp
jmp
push
pusha
movl
pushl
mov
pusha
push
movl
push
lea
jmp
xchg
push
pop
aas
adc
ja
pop
in
mov
repnz
rorb
inc
std
add
leave
in
mov
stos
pop
nop
aas
jb
fimuls
or
imulb
xor
arpl
leave
mov
pop
mov
jns
cltd
mov
and
push
fcompl
jecxz
bound
stc
lret
lahf
push
xor
inc
xchg
push
aas
adc
mov
rcrb
cmp
jns
dec
cmpsb
aad
add
push
jo
jmp
sahf
ret
mov
mov
xchg
mov
and
dec
or
jnp
loop
cmp
mov
mov
insl
mov
out
mov
mov
bound
in
jp
xor
sti
dec
xchg
jb
fwait
js
sub
ret
cs
cmp
lcall
ds
xor
fisubl
les
je
dec
das
pushf
insl
cli
jl
out
sbb
fistpll
cs
icebp
icebp
xor
movsl
add
fldl
mov
push
jb
inc
jno
cmpsl
fcomip
stc
test
jg
test
scas
addr16
mov
lret
das
andb
mov
stc
add
ret
icebp
sbbb
jbe
sti
jp
push
sbb
mov
test
push
and
leave
xchg
bound
lds
jnp,pt
jl
ds
test
mov
ret
stos
dec
dec
jl
pop
orb
sub
fsub
mov
xorb
popa
jle
mov
mov
inc
xchg
enter
xor
fwait
jl
sahf
pop
cmp
lret
add
mov
inc
jbe
lods
cltd
loop
lret
aas
sub
cmp
jbe
out
rcrl
adc
dec
ret
pushf
lret
xor
add
mov
mov
call
js
cmc
mov
and
jne
push
dec
shld
xor
clc
or
mov
inc
pusha
add
rcl
mov
call
mov
lea
jae
ja
pusha
cmp
push
call
aaa
lock
add
sahf
ja
sub
ret
mov
ja
in
pop
inc
imul
lods
xor
stos
call
mov
icebp
cli
stos
aad
add
ljmp
jae
sub
or
add
sub
loope
pop
sarb
ds
in
lock
and
mov
or
or
jl
and
sub
int3
sahf
mov
mov
mov
pushf
push
inc
mov
pusha
not
mov
call
mov
jb
aas
lock
mov
jb
xor
dec
lea
jb
add
mov
jb
stos
add
inc
cmp
add
aaa
or
test
inc
adc
mov
imull
fiaddl
loop
out
int
aad
and
cmpsb
scas
repz
orb
adc
ljmp
daa
xchg
pop
movsl
repnz
fsubrs
int3
popf
xchg
inc
mov
mov
adc
mov
add
movl
and
jne
btc
pushf
test
stc
mov
bt
bt
mov
add
cmc
call
loope
jge
adc
gs
lret
adc
inc
mov
mov
xchg
test
cmp
cmp
aam
clc
dec
les
sbb
jge
xorl
adc
push
lret
and
shl
push
cmp
mov
jb
clc
cmpsl
shll
js
testb
int3
xor
and
cmp
push
ret
or
dec
or
add
pop
xchg
xlat
and
dec
mov
or
jecxz
mov
push
leave
insl
sti
loop
mov
bound
cmp
push
mov
jg
mov
sarl
das
add
sub
dec
jg
sahf
jge
cvtps2pd
ss
ljmp
pop
lret
mov
xchg
arpl
psubsb
aad
ret
add
fidivs
add
mov
cmp
push
out
xchg
enter
aad
adc
and
jne
inc
les
ja
ss
test
ja
movsb
mov
add
sub
jo
dec
cmp
nop
inc
jno
mov
and
pushf
popf
mov
notb
or
movsb
jmp
pop
jmp
mov
or
ja
sub
loopne
mov
xor
das
test
adc
fs
call
push
lea
jae
cmc
call
dec
inc
inc
inc
xor
cs
insb
add
test
pushf
pusha
stos
pushf
push
lea
jmp
call
or
int3
add
add
test
dec
pop
fisubrl
stc
sub
jb
out
mov
jb
hlt
and
loop
inc
aaa
lea
insb
mov
mov
aas
jle
neg
or
fs
mov
lahf
fldcw
xchg
inc
jl
and
and
es
or
inc
fisubrs
mov
sbb
add
xchg
ds
les
rorb
or
cld
push
mov
stc
mov
jne
call
test
mov
in
and
push
data16
jmp
add
push
das
or
scas
jle
sbb
stos
outsb
xor
lret
sarl
or
push
ret
push
cltd
add
sahf
jne
int
gs
cmpsb
pop
xchg
insl
ljmp
lods
adc
jno
dec
sub
sbb
mov
and
inc
roll
imul
bound
add
mov
pop
xor
aad
out
sub
nop
out
sub
clc
test
cmp
call
movb
lea
je
push
pusha
call
lds
and
jo
or
mov
popa
das
cld
xchg
stos
arpl
adc
push
xor
sub
jmp
jl
fdivl
xchg
cmp
jb
mov
cmpsl
bound
out
and
jo
jnp
shl
pop
clc
mov
pop
popf
stos
imul
cmp
sbb
gs
mov
inc
xchg
lret
dec
imul
or
insb
fisubrs
dec
clc
dec
pop
call
dec
lret
push
xchg
mov
inc
push
sti
aad
push
or
movsb
xchg
jns
lods
movsl
aam
mov
mov
add
int3
sbb
daa
clc
ret
mov
out
rcrl
test
and
pusha
cmp
arpl
cs
cltd
adc
data16
cld
lods
es
sahf
orb
xor
es
adc
rcll
dec
mov
mov
ret
filds
and
or
sbb
test
add
xor
popf
popa
es
cwtl
outsl
inc
or
mov
lcall
adc
enter
pop
adc
xor
test
pop
cs
int
js
andl
pop
cmc
inc
sub
dec
add
sbb
jle
lahf
dec
cmp
sub
out
pop
mov
push
callw
jo
sbb
outsb
loopne
push
aad
pop
mov
and
arpl
mull
xchg
scas
add
pusha
push
fistps
lret
xchg
fmull
lahf
imul
pusha
loopne
ret
dec
jbe
or
popf
data16
push
xor
fnstenv
vunpckhpd
pop
and
test
xchg
shll
lods
pop
adc
repz
fwait
arpl
push
fisubl
stos
xchg
and
inc
jecxz
jp
fwait
adc
pop
roll
jg
jg
adc
cmpsb
inc
cmp
lock
jb
sub
dec
xor
push
iret
sbb
cli
push
push
adc
fisubrs
inc
addr16
xchg
sti
xchg
popa
and
loopne
push
jae
sbb
int3
test
mov
mov
stos
mov
aas
sbb
add
add
mov
mov
add
jne
and
pushf
mov
call
pushl
movl
pushf
call
lea
jbe
pushf
lea
je
cmp
pushf
add
cmc
jmp
adc
call
xor
sub
stc
shrl
fldcw
and
jmp
mulb
or
daa
sub
pop
sub
aaa
cli
inc
nop
aad
push
xchg
inc
aaa
shll
enter
std
ja
push
leave
in
jg
or
push
jp
pop
or
test
leave
cmp
lcall
test
xor
add
mov
cld
xor
daa
out
aas
sbb
dec
pop
cli
int3
xchg
push
xchg
mov
cmp
fldenv
sub
add
pushl
call
lea
jne
lahf
movsbw
movzbw
movb
call
lea
je
stc
call
jbe
loope
adc
adc
mov
popa
aaa
adc
mov
push
stos
sbbl
imul
mov
mov
jl
ret
sub
jg
jbe
aad
mov
mov
movsb
jns
data16
sbb
dec
xchg
adc
cltd
lea
push
lahf
sub
les
push
jg
jns
xchg
arpl
adc
stos
jne
sbb
jmp
imul
xchg
jo
pushf
pusha
call
pusha
lea
jne
add
dec
sub
pusha
sub
movzbw
mov
rcr
rcr
and
add
add
rol
test
sbb
mov
cmc
test
pusha
lea
je
stc
jmp
mov
aaa
or
pop
xor
xchg
pop
xor
out
lcall
std
aaa
sti
inc
add
add
test
pop
push
imul
lea
das
cmpsl
jge
xor
sbb
pusha
or
mov
stos
ja
es
or
icebp
add
mov
fstpt
test
xchg
lret
das
xor
pop
into
out
xchg
jae
cmp
lret
les
pop
xor
mov
mov
jge
push
add
movl
cmp
push
jmp
adc
in
repz
movsb
jne
or
lcall
ja
sub
mov
mov
mov
jb
mov
mov
ret
cs
cwtl
dec
andb
test
mov
mov
int
popa
cld
add
sub
sub
aaa
int
cmp
or
dec
movsl
push
shrl
int
imul
cwtl
inc
mov
xor
popf
stc
xlat
mov
pop
pop
jmp
jg
sbb
fiaddl
pop
lea
mov
jmp
or
test
push
sbb
aad
test
std
stc
dec
xchg
jmp
imul
fsubrl
enter
pop
orl
je
mov
mov
out
test
call
push
pop
xor
mov
imul
push
ret
test
scas
adc
xchg
rolb
mov
fsubr
sar
jmp
push
mov
pusha
call
loope
xchg
or
mov
lret
dec
sbb
xor
mov
mov
or
popa
cmp
mov
repnz
rcll
mov
aas
mulb
push
mov
mov
mov
mov
mov
add
test
and
jb
scas
adcl
push
sub
mov
mov
cmp
jnp
ret
mov
call
sub
pushf
mov
pusha
cmpb
pushf
movb
lea
jne
aad
aaa
cmc
sub
shrd
sar
bts
mov
ror
add
not
pushf
or
xor
mov
jmp
and
int3
in
sbb
mov
push
sbb
mov
arpl
pop
loope
xchg
leave
sbb
jmp
dec
mov
and
mov
sarb
aad
cltd
in
mov
adc
push
ret
cld
ret
stos
pop
test
mov
adc
andb
into
test
dec
jb
mov
pmaxsw
jnp
or
push
xchg
add
sub
pop
mov
xor
sbb
mov
loop
jno
mov
mov
scas
orb
inc
jo
fnstcw
in
and
sub
or
imul
pop
out
add
imul
test
sub
jecxz
xchg
pop
sub
fldt
pop
adc
in
cmp
aam
jae
sub
stos
mov
call
and
data16
inc
or
dec
shl
cltd
and
mov
mov
aam
loope
ljmp
hlt
repnz
ja
mov
mov
jge
in
out
in
mov
shlb
mov
sbb
je
or
int3
fiaddl
shll
adcl
aam
stc
nop
sbb
lcall
or
int3
push
jle
xor
dec
test
aas
mov
lret
xchg
pop
orl
jge
lods
jl
inc
stos
mov
rcl
loopne
jae
mov
xor
in
mov
test
or
fdivs
mov
movw
movsbl
mov
mov
pushf
pushf
pushf
pushl
ret
jmp
aas
ret
cld
or
int3
sub
stos
sbbb
fistpl
add
push
in
fstl
mov
gs
mov
jb
andb
or
and
mov
mov
test
or
lcall
sbb
repz
sbb
push
or
bound
fidivrl
out
ret
pop
pop
ljmp
neg
xor
bt
cmp
repnz
mov
lea
jne
neg
movsbw
lea
shr
mov
or
push
pushf
neg
sub
call
cmp
test
jmp
jmp
jp
xor
adc
push
sub
iret
mov
cmpsl
sbb
ss
clc
loop
repnz
fdivrl
push
dec
pushf
dec
jl
fwait
outsb
jnp
inc
insl
dec
push
jg
jge
hlt
ficoms
lock
sbb
sbb
xchg
mov
add
add
jne
sbb
mov
xor
jge
lods
in
cmp
dec
inc
jecxz
in
push
dec
mov
int3
xchg
jge
cltd
repz
add
pop
je
or
imul
sub
fnstenv
ret
lds
mov
mov
cmp
adc
push
sbb
inc
sbb
mov
jne
popa
dec
mov
daa
pop
fwait
loope
push
sbb
cli
test
daa
stc
push
es
lcall
jo
xchg
mov
les
cs
stos
fst
add
adc
dec
test
iret
test
mov
fstps
leave
add
daa
cmp
in
iret
mov
mov
clc
mov
dec
xchg
into
aam
rclb
xchg
mov
sub
into
or
daa
lock
pushf
xchg
sub
rorl
mov
insb
inc
adc
adc
fst
call
push
and
sbb
fisttps
adc
roll
jne
sbb
inc
pop
mov
sbb
xorb
xor
mov
test
bound
xor
pop
scas
in
pop
cld
adc
mov
jo
daa
hlt
loopne
xor
jo
rcrl
cld
fldl
insb
andl
mov
in
mov
inc
mov
or
mov
lea
jae
bsf
jmp
pusha
pushf
movb
lea
jbe
movzbw
call
inc
bt
movw
cmc
ror
pusha
mov
call
arpl
adc
jmp
adc
xor
loope,pn
shll
out
sbb
add
out
cmp
es
adc
mov
sub
loopne
aam
rorl
inc
jecxz
cli
sub
inc
idiv
lods
fcoms
icebp
xorb
pop
jg
mov
loopne
cmp
cmp
imul
lahf
es
fstps
in
push
into
fwait
jae
sub
loopne
xorb
jmp
ret
sbb
push
bsf
shld
push
aam
shl
mov
bts
sub
clc
push
not
push
pushf
cmc
mov
movsbw
lahf
daa
mov
bts
cmc
push
lahf
mov
sbb
mov
stc
test
pusha
test
push
push
call
test
pushf
jmp
js
ljmp
test
aam
jp
sbb
fwait
das
mov
mov
ja
xor
mov
jle
outsl
outsl
jge
arpl
adc
movsl
add
mov
jne
jge
imul
or
in
mov
xor
cmp
in
push
xchg
mov
into
lods
jnp
ljmp
and
sub
sahf
in
xchg
inc
xor
icebp
adcl
inc
adc
mov
and
movsb
pusha
xor
and
add
lret
add
add
add
add
iret
bound
add
add
add
add
addb
add
sub
add
add
add
add
add
sub
add
add
add
add
add
add
add
sahf
pop
add
add
add
add
add
add
add
add
add
addb
add
add
addb
add
out
push
add
add
add
jbe
add
insl
add
sub
add
pop
add
add
add
xorb
dec
shl
call
cmp
lods
adc
mov
dec
adc
mov
pop
ss
sub
fwait
out
xor
out
iret
notb
push
add
stos
out
ljmp
daa
cld
ret
or
push
sub
not
movsl
imul
xor
jl
call
sbb
imul
dec
sbb
and
leave
adc
xor
aaa
sbb
push
cmp
inc
sbb
sarb
mov
shrl
in
mov
cmp
sbb
addr16
pusha
fmuls
sbb
cmp
push
out
pop
and
xor
pop
mov
enter
adc
sarl
cmp
in
push
mov
lea
pop
in
icebp
outsl
xor
push
jecxz
xor
jo
cmpsl
jns
pop
out
test
add
aam
rolb
ja
arpl
std
adc
or
mov
into
test
dec
lahf
imul
xor
cmp
push
sub
repz
sub
push
movsl
in
ljmp
daa
out
roll
jg
and
aam
jp
adc
arpl
outsl
mov
adc
xchg
addr16
movsb
outsb
aas
sbb
fbld
outsb
sbb
nop
popa
ret
inc
cmp
insl
push
cmp
or
cmc
enter
int3
loope
adc
div
insb
push
fiaddl
pop
push
inc
sub
ficompl
xchg
orb
jo
sbb
inc
jbe
shl
dec
jge
ss
mov
push
cmp
push
aam
lret
push
cltd
lahf
mov
sbb
dec
mov
pop
imul
aas
mov
mov
cmp
loopne
adcl
mov
cmp
fmuls
loope
adc
inc
push
out
mov
loop
jbe
sbb
xor
push
jb
inc
adcb
lret
inc
shrb
stos
popf
es
arpl
and
mov
push
dec
add
xchg
sbb
les
cmp
sub
push
mov
mov
push
ja
out
fistpll
ja
sub
dec
sahf
cmpsl
enter
sbb
cld
mov
out
mov
data16
or
or
or
or
lds
sti
mov
aas
and
bt
clc
sub
mov
clc
stc
ror
push
movb
pushl
sub
movw
lea
jl
push
lea
call
push
call
mov
jg
jge
sbb
je
or
jle
cld
jl
bound
add
inc
or
dec
adc
cmp
scas
mov
mov
addr16
push
inc
fnstenv
jns
cmpsl
sarw
movb
cmp
jns
xchg
icebp
jbe
popa
push
sub
cmp
jno
jmp
mov
cld
mov
outsl
data16
imul
sub
in
mov
inc
dec
push
and
xor
in
adc
or
mov
data16
call
or
jo
data16
dec
xor
movsl
fnstcw
loopne
or
pop
in
cmp
lock
mov
pop
jbe
push
movsl
adc
and
xor
fildll
fiaddl
data16
cmp
out
lock
mov
pop
ss
jns
dec
jle
jecxz
test
cwtl
clc
xchg
jb
inc
flds
test
js
add
pop
mov
inc
sbb
cwtl
in
or
add
mov
jnp
cmp
xor
imul
mov
push
dec
lahf
add
push
jbe
push
push
adc
scas
lods
arpl
fs
fstp
test
cmp
cmp
je
scas
insb
jmp
add
cmc
sbb
mov
xchg
adc
cmc
xchg
dec
xchg
mov
nop
popa
std
dec
jmp
lahf
cmc
sub
loop
loope
ret
or
cld
mov
imul
sub
lret
sbb
scas
cmpsb
outsl
dec
gs
or
aam
dec
inc
sub
sbb
fldcw
pop
adc
daa
sub
aas
pop
lods
add
push
loope
scas
pop
jno
cmp
mov
cmp
imul
lock
adc
sub
sbb
out
push
test
jg
and
stc
fimuls
test
jnp
in
imul
pop
jae
das
in
pop
dec
mov
cmp
clc
sub
sbb
aam
daa
pop
mov
lods
push
push
cmc
js
inc
adc
scas
gs
filds
or
push
mov
sub
insb
pop
dec
shlb
mov
pop
imul
mov
mov
leave
test
leave
nop
jo
dec
pop
je
int3
and
push
dec
adc
insl
imul
push
dec
mov
lock
push
shr
mov
pop
shl
sub
sub
cmp
pop
in
xchg
dec
xchg
or
xor
insb
mov
jnp
sub
push
in
or
out
mov
add
jge
push
out
push
bound
mov
in
ficomps
pushf
test
lods
cmc
cmp
ficompl
mov
mov
movsb
lea
leave
scas
xchg
sbb
push
outsb
mov
inc
mov
imul
out
jle
shll
imul
scas
int3
mov
ljmp
iret
xor
out
xor
cld
lahf
push
mov
cmpsl
addb
inc
and
sbb
imul
lret
sbb
pop
cmc
pop
outsl
jne
sub
lea
ja
mov
lds
jge
mov
mov
push
sub
pop
pop
mov
dec
push
into
in
loop
imul
xchg
mov
pushf
pop
and
xor
cwtl
inc
popf
jl
and
xchg
jo
scas
outsb
adc
incb
insb
scas
xchg
mov
lea
adc
daa
iret
in
ret
daa
std
cmp
imul
sahf
xor
out
insb
rclb
ja
lds
mov
in
lret
fisubl
arpl
lcall
mov
jo
popf
sub
jl
arpl
push
stc
mov
pop
imul
pop
mov
or
xchg
inc
out
sub
sbb
pop
mov
lea
sbb
xor
add
out
xor
xchg
pop
shll
popa
cmpsb
jo
mov
in
repnz
mov
inc
fwait
dec
lea
fildll
push
xchg
pop
push
inc
inc
insl
mov
enter
cmpsb
mov
jnp
mov
jns
faddl
xchg
xchg
mov
cmp
in
jge
lock
jo
mov
pop
mov
mov
fwait
jge
in
push
jg
add
inc
fistl
pop
addb
cmp
dec
lea
mov
std
pop
hlt
sbb
loop
jne
and
or
int3
ret
ret
mov
xor
and
insl
pop
xchg
insl
and
ucomiss
loopne
sbb
or
pop
xor
jbe
sub
in
or
hlt
and
repnz
imul
dec
in
in
gs
pop
or
sub
je
cmp
cmp
imulb
lea
jge
sub
insl
fstps
xor
push
xor
cmp
jo
jns
subl
or
pop
xor
fs
mov
jne
imul
sub
xor
sub
js
dec
or
xor
rol
in
in
in
sub
sub
clc
sub
inc
xor
adc
hlt
inc
or
jbe
sub
insb
sub
sub
pop
je
sub
gs
xor
jno
pop
insl
cmp
aam
or
rcrl
call
sbb
pop
or
jb
inc
gs
hlt
loopne
and
in
popa
sub
popa
stos
jg
lods
lea
xor
arpl
roll
insl
hlt
call
rorb
and
pop
fdivl
push
and
test
dec
lea
leave
sbb
jb
test
leave
test
shll
xor
test
insb
sub
rcr
jno
pop
in
inc
inc
cmp
sub
mov
in
adc
dec
bnd
mov
xor
or
mov
lock
fcoml
xchg
not
add
imul
insb
push
push
jle
popf
cmp
push
fstps
or
cmp
aaa
jb
cmp
pop
push
sti
and
push
xor
sbb
push
mov
or
jb
inc
jl
mov
jo
fwait
sbb
in
repz
mov
lock
add
test
adc
insb
mov
repz
insb
jnp
jnp
jp
mov
aam
dec
test
int3
je
jecxz
psllq
xchg
push
push
xlat
jno
xor
testl
sbb
push
fs
mov
cmpsb
lods
xchg
dec
jb
arpl
int3
clc
jno
pop
mov
inc
xchg
and
in
and
cli
pop
push
fsts
mov
pop
adc
cmp
xchg
out
sarl
or
lea
jl
push
cmp
mov
mov
loop
xor
repnz
loopne
je
cwtl
fnstcw
dec
arpl
sti
mov
pusha
dec
je
jge
pop
jmp
lea
outsl
sti
shll
insb
lods
scas
jp
test
fadds
xlat
dec
cmc
xor
fisubrl
and
je
inc
test
jno
mov
sarb
mov
sbb
lock
add
push
mov
adc
idivl
jp
xor
aad
loopne
movswl
and
mov
pop
push
insl
scas
int
pop
stos
inc
mov
push
mov
into
stc
push
cmp
and
inc
inc
mov
cmc
adc
jg
adc
sub
orb
std
lret
pop
imul
into
jmp
mov
pop
and
int
cmp
cli
push
aad
cmpsl
or
xchg
sarl
shr
or
outsb
cmc
or
or
xor
inc
jge
mov
sahf
popa
push
jle
jns
adc
inc
insb
cmp
out
arpl
movsl
push
jg
or
mov
mov
ficompl
push
pop
leave
push
dec
out
ja
loop
jns
mov
leave
rcrb
pushf
das
mov
pop
subb
jbe
test
adc
out
aas
int3
mov
inc
fwait
or
stos
addb
xchg
outsb
enter
and
xchg
jmp
fcomi
adc
mov
mov
sbb
test
scas
mov
leave
mov
test
mov
aam
sbb
loopne
push
in
pop
sbb
shlb
icebp
mov
stos
jne
mov
lcall
test
mov
repnz
dec
je
or
fldcw
and
lahf
inc
mov
sub
adc
insb
push
xor
mov
leave
dec
jl
jnp
pop
push
out
insb
jns
in
gs
sbb
push
sub
das
in
xchg
roll
iret
call
in
adc
loope
mov
sub
int3
sub
push
xor
push
lea
insl
adc
push
cs
out
hlt
adc
xor
push
fadds
shlb
jmp
adc
pushf
shlb
in
sbb
pop
in
lods
cmpsl
jmp
push
fnsave
and
sbb
mov
lods
sub
cmc
inc
inc
add
cmp
cmp
lea
popa
cmp
sti
jo
and
push
jle
mov
or
and
imul
in
xchg
jne
mov
hlt
cwtl
bound
in
jle
popa
ficomps
xor
lea
mov
push
push
insb
hlt
mov
sub
in
mov
and
and
adc
adcl
js
jns
iret
dec
mov
xchg
mov
inc
xor
mov
mov
and
mov
mov
mov
jno
and
pop
xchg
dec
adc
addb
dec
sub
pop
lds
sbbl
ds
and
leave
aaa
pop
jmp
insl
and
andb
mov
jg
faddl
cmp
push
lahf
mov
pop
test
aas
repnz
xchg
bswap
pop
pop
sbb
aas
mov
sub
lret
xor
ret
jns
cmp
and
cs
lea
arpl
in
in
xor
hlt
popf
cmp
inc
mov
sbb
add
cmovns
cmpsb
arpl
dec
jno
push
mov
stos
push
push
rorl
mov
or
and
xor
imul
mov
mov
js
or
xor
rorb
mov
mov
cmc
mov
or
xor
and
inc
ret
mov
imul
lea
insb
in
subb
repnz
push
call
inc
mov
shrb
loope
out
lahf
add
cmp
mov
icebp
xchg
fdivl
inc
lea
add
cs
jbe
dec
hlt
jp
jno
mov
mov
in
clc
dec
add
insb
data16
xor
jae
or
pop
or
cwtl
lock
jecxz
and
insb
xor
fs
cmpb
aas
mov
jno
test
mov
mov
xor
xor
dec
jb
orl
xchg
jecxz
inc
test
in
rcrb
clc
shlb
mov
mul
insb
je
and
je
hlt
jbe
xrelease
call
inc
jno
jp
iret
sub
sti
insb
js
mov
scas
movsl
xor
mov
loope
adc
push
aad
mov
int
jecxz
imul
inc
push
mov
push
cwtl
pushf
jmp
push
aam
mov
push
inc
daa
pushf
push
fbld
js
xchg
test
insb
lods
jmp
arpl
inc
das
jo
loopne
fwait
mov
sub
mov
xor
xor
rclb
adc
ja
push
mov
xchg
push
sti
ja
dec
jae
jle
insl
xor
mov
add
jae
pop
popf
cmc
mov
pusha
adc
mov
mov
jmp
push
imul
imul
lods
mov
or
cs
pop
sarb
test
mov
push
jmp
dec
push
sbb
loopne
mov
int3
xchg
add
movsb
inc
out
add
movsl
lret
add
cli
cld
std
mov
mov
shr
nop
icebp
adc
and
push
or
xor
jno
in
inc
ljmp
jno
or
addl
sbb
push
insb
add
dec
loopne
outsl
inc
adc
or
push
imul
pop
mov
pop
insb
mov
xor
mov
cmp
mov
out
mov
and
jae
sbb
rcl
mov
daa
out
les
lods
cmp
sbb
xchg
adc
test
loop
shll
test
test
movsb
adc
imul
insb
and
in
insb
in
pop
mov
arpl
ja
cmp
andb
movsl
xor
xor
and
dec
xchg
xor
insb
adc
je
mov
cwtl
out
adc
movd
cld
iret
mov
daa
call
xor
bound
or
jmp
xor
lea
push
inc
xchg
loopne
out
mov
lret
insl
jmp
adc
inc
popf
or
and
fsubr
xchg
inc
sub
in
add
scas
cltd
mov
mov
outsb
cmc
mov
pushf
inc
adc
push
filds
out
loop
pop
or
xor
pop
mov
enter
cmp
jmp
jae
mov
sub
gs
jl
pop
or
addr16
cmp
repnz
jge
test
mov
xlat
jmp
movsb
insb
sub
mov
outsl
pop
icebp
addb
fldcw
and
mov
jl
dec
adc
xchg
sahf
test
or
aad
pushf
push
push
mov
xor
test
lock
test
inc
dec
aaa
mov
push
das
mov
and
pop
jae
xchg
cmpsl
mov
add
fs
je
or
or
jb
fcoms
pushf
add
jae
or
div
push
mov
loop
sub
and
ljmpw
sbb
and
stos
roll
sub
push
movsb
mov
and
in
pop
scas
out
add
sbbl
lock
and
mov
pop
mov
in
hlt
jle
cmp
in
mov
jp
cmp
out
les
jb
dec
imul
dec
and
push
add
in
mov
shrb
jl
call
arpl
movsl
mov
adc
jnp
out
pop
cmp
cmp
mov
mov
and
outsb
testb
icebp
or
bsr
xchg
and
mov
adcb
xchg
out
je
adc
inc
add
jg
popa
lods
cmpsb
popf
les
and
add
add
lods
mov
call
mov
lods
je
pop
push
lea
test
jno
cmp
ljmp
in
jno
and
mov
popa
sbb
sbb
lods
mov
lods
mov
cmp
stos
adc
lret
jno
xchg
mov
xchg
jg
jecxz
jl
sbb
lds
int3
popa
repnz
adc
push
nop
rcrb
add
inc
call
les
imul
xor
cmpsb
lea
imul
sub
jmp
dec
fisttpll
jb
or
dec
cmp
mov
cwtl
jmp
mov
inc
mov
mov
and
add
fyl2xp1
lods
and
sahf
int
jle
hlt
dec
rclb
aam
sub
pop
sbb
repz
test
inc
repz
adc
push
lock
jge
ficoms
pusha
lret
lret
fsubrp
sub
inc
test
xchg
push
pop
lret
shrb
imul
jns
dec
adc
jge
daa
sub
push
mov
into
sbb
mov
sbb
cmp
sbb
leave
or
inc
cmp
lods
cmpsb
and
jo
lock
andb
fsubl
or
das
add
mov
jnp
mov
dec
dec
in
roll
aad
mov
fcmovnu
scas
aaa
dec
stos
in
insl
inc
fisubrl
cmc
lcall
push
jge
mov
jp
sub
dec
sub
jg
movsl
popa
inc
mov
jo
movsb
ja
decl
outsl
imul
arpl
inc
scas
je
lds
stos
dec
push
popf
jb
cmp
lcall
inc
or
adc
dec
lea
cmc
ja
and
je
sbb
int3
shrl
mov
sbb
jb
pop
test
and
jno
mov
mov
push
mov
fwait
push
jmp
inc
sbb
addb
addr16
push
movsb
leave
inc
addr16
fcom
mov
bnd
xchg
gs
xchg
in
insl
or
inc
push
mov
adc
pop
mov
jmp
and
dec
aad
cmp
and
inc
or
arpl
pop
fsts
jle
ret
repz
mov
sbb
and
mov
pinsrw
sub
daa
stos
xor
aam
insl
push
flds
or
in
pop
int3
inc
mov
cmpb
adc
cmp
jle
push
jb
in
mov
and
push
xchg
shll
in
lea
xlat
dec
xor
js
fs
pop
cmc
dec
mov
jno
or
sbb
imul
nop
mov
test
insb
xchg
lret
pushf
pop
and
mov
mov
test
xor
rcll
jo
sbb
jmp
mov
lahf
out
std
dec
xor
in
push
sbb
pushf
cmc
sub
xchg
adc
mov
jb
jno
inc
pop
add
lea
daa
fadds
mov
or
testb
mov
movsb
dec
lea
in
jle
sbbl
lea
dec
lock
ret
xor
subl
std
dec
and
popa
into
push
xchg
mov
mov
cmp
and
les
gs
pop
mov
dec
out
fwait
sbb
or
xlat
imul
pop
mov
or
adc
jg
test
push
movsb
lahf
loope
jns
push
lcall
js
pushf
sbb
inc
mov
add
fs
mov
cmp
sahf
mov
in
sub
lds
int3
inc
sub
mov
or
outsb
or
and
shll
and
aam
inc
mov
mov
call
jl
or
jmp
and
ljmp
ret
nop
push
sbb
pop
sbbl
fdivp
into
fdivrl
mov
jae
jg,pn
insb
lods
dec
sub
push
dec
dec
int3
mov
or
jp
sbb
aam
shlb
in
icebp
pop
fcmovnu
sarl
lods
pop
push
arpl
in
jg
insb
cmpb
outsl
icebp
nop
decb
jge
adc
sub
xchg
and
jle
pop
push
mov
gs
sbb
jmp
pushf
aad
dec
mov
sahf
insl
stos
cmc
js
sahf
dec
add
dec
jge
mov
cmpsb
mov
scas
das
shll
bound
rolb
inc
pop
and
adc
or
mov
insb
lea
mov
cmp
movsb
xor
adc
mov
mov
push
jg
sbb
or
push
dec
adc
in
in
pop
xchg
cmc
ljmp
sub
sub
hlt
mov
movsb
and
inc
mov
lret
stos
inc
jp
data16
fadd
dec
xor
pop
clc
loopne
adc
in
jns
popa
mov
arpl
inc
push
es
push
roll
leave
or
dec
and
pop
and
jmpw
ret
outsb
fwait
or
arpl
sbb
hlt
jp
mov
dec
jge
stc
or
mov
pop
and
xchg
dec
jns
outsl
dec
shl
pop
popf
sahf
leave
lds
les
movsl
ljmp
jl
jnp
bound
imul
inc
movsl
push
lock
out
xchg
mov
adc
sub
pop
adc
adc
test
inc
sbb
jle
movsl
mov
lds
pusha
jge
mov
sbb
imul
jno
jo
mov
insb
push
jl
shl
popa
mov
jo
mov
dec
rcl
jl
je
clc
shll
dec
push
gs
mov
fidivl
scas
inc
leave
inc
stc
imul
fldcw
xchg
mov
mov
xor
arpl
test
push
mov
mov
sbb
shlb
add
icebp
mov
push
jnp
sub
xchg
sti
sbb
pop
in
mov
arpl
mov
jecxz
xchg
dec
push
cmp
xor
add
pop
xorl
sbb
insb
ror
in
push
out
es
push
mov
lret
rol
out
mov
mov
leave
jnp
int
aam
test
test
test
xchg
jb
push
movsl
shll
insl
in
imul
cwtl
xor
and
and
mov
stos
xlat
xchg
add
push
inc
jge
xor
into
andb
inc
pop
je
inc
je
js
mov
flds
arpl
and
popf
mov
mov
push
jl
xchg
imul
dec
cmpsl
gs
mov
push
sub
push
insb
xchg
dec
in
mov
inc
mov
xor
add
sbb
dec
xchg
stos
push
loop
in
inc
imul
mov
test
add
push
lock
test
dec
xor
pop
mov
add
mov
jl
lahf
andb
push
jge
jmp
lods
push
pop
hlt
mov
or
dec
fxam
adc
push
repz
insl
bound
aam
adcb
xchg
inc
fninit
bound
inc
mov
mov
lods
js
and
jge
icebp
mov
mov
aad
in
sub
fs
or
loope
in
mov
pop
insl
dec
dec
iret
ds
js
lcall
fisttpll
test
push
or
mov
mov
testl
das
ss
jb
jle
out
lds
ficompl
inc
jno
push
jae
mov
sbb
mov
arpl
in
dec
hlt
fwait
add
stos
pop
cmpsb
push
mov
mov
in
push
push
sbb
sbbb
dec
dec
sub
addl
inc
pop
mov
shlb
das
sahf
hlt
insl
leave
mov
lea
nop
jno
jae
mov
jmp
jge
aas
jl
ret
xchg
dec
adc
jnp
or
lock
hlt
jnp
repnz
jg
jbe
inc
mov
lahf
xchg
pop
imul
xor
shlb
mov
lcall
jo
repz
xchg
inc
jno
data16
mov
ljmp
xchg
push
jae
and
add
outsb
jge
stc
out
mov
cmp
pop
call
dec
jno
sub
mov
ficomps
or
xchg
dec
cld
pop
rcrb
mov
int
jle
insb
cmpsb
dec
in
rol
or
in
insl
jg
mov
icebp
adcb
dec
cltd
jl
sub
xor
outsl
and
jmp
popa
mov
mov
pop
pop
stos
popa
sbb
lods
sbb
push
outsl
sub
insb
xlat
cld
sub
dec
testb
in
jne
xchg
int
jecxz
mov
movsb
dec
lea
das
andps
insb
loop
pop
lds
jp
lea
mov
xchg
arpl
jo
cmp
mov
das
pop
out
dec
sub
and
loope
icebp
or
mov
fwait
lea
enter
data16
mov
inc
lcall
lods
xchg
cmpsl
xor
shll
enter
fmul
sahf
in
insb
mov
inc
xor
xrelease
std
loop
sub
in
scas
or
sbb
loope
in
fwait
shr
dec
xor
sbb
xlat
int
push
xchg
push
dec
test
push
jecxz
arpl
push
push
dec
cmp
sub
cmp
xor
mov
adc
repnz
icebp
xor
xor
push
or
je
and
push
int3
cmpsl
mov
sbb
movsl
and
mov
sub
mov
out
in
xchg
cmp
sbb
fstps
inc
in
xchg
loope
jmp
loopne
sub
push
cmp
filds
mov
adc
sti
xor
mov
outsb
in
mov
mov
and
xor
cmp
and
fs
shll
outsl
push
cmp
out
sbb
inc
cmpb
adc
sahf
dec
sub
dec
inc
mov
call
popf
scas
or
jb
mov
mov
sub
notl
mov
lods
mov
mov
pop
leave
inc
cmp
imul
jb
ja
cmc
mov
jl
cwtl
sbb
test
in
sub
push
clc
or
jno
test
mov
mov
sbb
in
add
pop
or
jno
stos
or
test
int
test
sub
ja
cmpsb
popa
mov
insl
inc
mov
mov
mov
sub
sbb
mov
sti
dec
mov
cltd
not
mov
ficoms
imul
dec
call
outsb
mov
mov
ja
mov
cmc
jns
pop
pop
mov
dec
jns
push
fldcw
cmp
icebp
jne
and
xchg
push
insl
popa
lods
jb
arpl
in
call
xchg
pop
adc
jecxz
mov
jns
xchg
jp
daa
jg
roll
xor
das
or
fdivl
loope
movhps
and
jecxz
push
mov
in
test
mov
or
lea
movsl
push
or
add
lock
lock
xchg
mov
mov
stos
jo
inc
jb
mov
hlt
jl
pop
or
lods
and
jns
scas
adc
fdivs
inc
lcall
fdivl
dec
pop
iret
xchg
iret
jne
hlt
pushf
xchg
loope
inc
orb
loope
stos
inc
add
leave
out
lea
jae
mov
lea
push
sbb
push
jle
ja
hlt
jg
data16
hlt
mov
mov
cmpl
loopne
xor
cmc
mov
outsl
mov
cmpl
rorb
or
and
pop
jae
lea
sub
mov
inc
xor
jp
xor
in
mov
lcall
mov
std
pop
push
rclb
push
mov
repnz
fmul
mov
lret
push
ss
push
xor
jne
push
sbb
inc
adc
mov
test
mov
xor
jno
and
mov
gs
int3
mov
add
or
xor
out
mov
in
jo
sub
mov
out
xor
repz
inc
push
jbe
sbb
sbb
ljmp
aam
mov
mov
push
out
cld
lret
inc
inc
mov
mov
sub
inc
out
inc
xchg
pop
xor
mov
out
mov
mov
jmp
sbb
inc
lods
push
or
outsb
insb
push
mov
or
fs
xchg
loop
aam
adc
insl
out
outsl
xchg
aaa
fistpll
ljmp
jle
cmpl
popa
sbb
orb
scas
xchg
repnz
movsb
xchg
or
xor
in
divb
and
scas
pop
insb
xlat
pop
cmc
or
jge
mov
jp
xlat
sub
mov
and
dec
les
lret
cmp
jle
dec
adc
jp
les
pop
inc
test
sar
push
into
fdivrp
gs
push
jmp
mov
dec
test
mov
and
lea
and
jle
sahf
mov
sbb
movsl
mov
popf
in
lahf
dec
mov
jns
lods
pop
dec
iret
adc
jg
cmp
lock
jno
movsl
fldln2
and
cld
fwait
adc
cmpsl
outsl
mov
addr16
mov
inc
jle
call
loope
jae
mov
in
sahf
arpl
pop
int
loop
stc
lea
sub
sahf
fwait
and
fs
lcall
sbb
hlt
adc
mov
sub
mov
inc
push
sbb
test
mov
jo
jg
pop
sbb
jl
mov
ret
mov
arpl
inc
rcll
adc
mov
add
mov
jl
mov
xchg
es
push
insb
push
push
adc
push
fmull
jnp
xor
jge
aas
mov
add
inc
sub
and
pushf
mov
sub
adc
adc
xchg
ljmp
popf
fcoml
loope
adc
sub
mov
mov
mov
fmull
aaa
push
add
out
test
test
sbb
push
cmp
out
lcall
aad
lretw
lds
xchg
jns
cmp
sub
or
sbb
imul
inc
pushf
ljmp
mov
sub
hlt
dec
fnstenv
mov
iret
sbb
or
xlat
cmpl
mov
adc
jg
or
addr16
and
dec
stc
inc
pop
pop
or
sub
sarb
les
lret
out
adc
add
imul
sub
test
js
fstpl
cltd
mov
jl
cld
cld
outsb
push
push
mov
imul
enter
addl
mov
push
loopne
loop
sbb
xor
leave
pop
imul
in
mov
pop
shll
cs
push
pop
mov
cld
insl
dec
or
push
and
nop
jo
in
push
cmp
insb
jne
clc
outsl
ljmp
cli
and
cmpsl
imulb
les
je
pop
cltd
outsl
cltd
mov
push
clc
out
int
xor
jo
add
popa
jne
xor
les
pop
bound
lods
fs
adc
jne
les
scas
push
mov
jmp
popf
insl
test
sbb
imul
mov
xlat
arpl
das
mov
in
pop
jne
mov
jl
dec
insb
jbe
push
test
insl
bound
insl
aaa
addb
cli
bnd
clc
test
mov
rcll
cmp
dec
stos
jbe
xchg
pop
dec
fs
lcall
and
stc
pop
jg
push
sbb
cld
inc
call
jne
mov
adc
push
jne
iret
ja
arpl
xor
orb
jl
mov
outsb
daa
mov
jne
je
in
std
inc
lret
lcall
jb
and
fwait
and
mov
ret
push
enter
xor
fs
xor
jne
mov
dec
hlt
addr16
jno
mov
adc
sbb
mov
inc
jne
out
pop
gs
dec
inc
jne
aaa
rcll
fcmovu
inc
gs
imull
out
gs
fnstcw
adc
jge
inc
or
int3
pop
adc
dec
mov
fnstcw
sarl
mov
in
mov
pop
in
dec
lret
xor
sub
fisttpll
cmpsb
ja
xchg
movsb
and
imul
outsl
or
mov
dec
sbb
call
je
xchg
lock
gs
sbb
push
je
mov
cmp
push
repnz
mov
fidivs
jge
cli
lods
push
sbb
lea
mov
insl
sbb
movsb
pop
hlt
pop
xchg
push
or
mov
shlb
adc
ljmp
test
cmp
jl
cli
popa
add
je
lahf
adc
push
lock
hlt
in
test
frstor
bound
xchg
lea
aad
xchg
fists
stos
mov
imul
bound
sarb
or
mov
mov
mov
xchg
int
mov
enter
dec
push
bound
xchg
or
insb
mov
push
jge,pn
sbb
adc
xor
fdivrl
dec
jae
jmp
push
mov
cli
jae
add
add
add
adc
jne
xlat
mov
in
iret
addl
jae
mov
pop
mov
jmp
shl
pop
outsb
and
cmp
insb
cltd
imul
sbb
mov
lret
jnp
mov
dec
int
stos
xchg
je
ret
jmp
fiadds
push
fdivrl
fsubs
and
sub
sbb
or
loopne
aad
movsl
xchg
je
sub
call
push
repnz
dec
mov
add
cwtl
je
or
out
loope
mov
je
lock
in
cwtl
addr16
sbb
aaa
lods
fsubr
jle
jne
ret
pop
adc
cmp
gs
in
inc
pop
pop
test
jae
rolb
jp
mov
outsl
push
test
aam
push
pop
xor
jb
xor
inc
jmp
cmp
mov
jne
mov
loop
inc
test
imul
xchg
and
int
add
xchg
in
mov
je
shr
xor
hlt
adc
shlb
jge
add
cmp
daa
in
call
movsl
push
push
and
test
out
out
gs
fmull
push
and
xchg
push
fidivs
das
push
dec
in
in
xchg
adc
mov
test
xor
mov
outsl
outsl
icebp
push
dec
shrl
fidivrl
mov
add
mov
call
add
lret
jb
dec
pop
xchg
dec
sbb
dec
imul
sbb
sub
jno
out
loop
jne
xchg
jmp
add
mov
jnp
sub
or
inc
loopne
outsl
dec
jb
jmp
cmp
sub
pop
repnz
hlt
test
jl
push
popa
adc
aam
and
dec
or
dec
nop
in
mov
xchg
shll
jae
or
pushf
sbb
cmp
loop
mov
jbe
sub
xchg
insb
dec
inc
sub
insl
test
je
in
lahf
ret
sti
jmp
dec
jno
pop
stos
int3
ss
out
imul
push
pop
int
cmc
or
xchg
test
cmp
rcll
cmp
xor
sbb
pop
push
ret
xchg
cmp
fidivrs
xor
pop
inc
pusha
hlt
stos
xchg
dec
sti
jno
lea
lcall
rcl
xorl
mov
lock
xor
enter
test
xor
inc
jg
jp
stos
sub
sub
sbb
pop
jmp
mov
repz
cwtl
inc
push
lret
sahf
push
fsts
add
xor
clc
dec
outsb
outsl
and
mov
lods
pop
jle
in
fs
add
pop
mov
mov
lea
clc
daa
ja
jne
pop
inc
imulb
inc
inc
cmp
daa
cmovno
push
lret
insb
jnp
call
inc
std
insl
adc
pop
leave
es
shll
je
mov
ror
and
loop
xor
sbbl
and
mov
push
mov
enter
mov
or
shr
mov
aaa
or
jno
push
aas
jne
pop
cmp
mov
jnp
pop
fcompl
mov
cs
push
fucomip
and
mov
bound
add
ret
insb
mov
push
sub
insb
call
xchg
xchg
movsl
aaa
lea
adc
scas
outsb
lahf
mov
adc
mov
push
ret
sahf
jns
lds
jb
sub
cmpsl
dec
and
mov
inc
in
lahf
inc
movsb
xchg
popa
xor
bound
ljmp
lock
mov
sub
std
imul
mov
ss
dec
jl
arpl
push
inc
jl
sbb
mov
lahf
call
pop
int
jg
sub
enter
xchg
mov
jl
dec
xchg
pop
sar
dec
repnz
je
pop
int
jmp
adc
rcrb
mov
pop
and
sub
adc
mov
dec
push
adc
mov
mov
adc
xchg
dec
xor
cmp
lahf
and
dec
push
in
mov
adc
stc
mov
pop
fsubs
movsl
pop
mov
sbb
dec
out
aad
or
aaa
repz
mov
cmc
mov
inc
sub
insl
and
jp
jb
jecxz
aaa
rcrl
pop
jae
lea
outsl
jbe
pushf
fwait
imul
push
loop
push
pop
rcr
in
fsubs
and
mov
push
insl
shl
repnz
jne
out
jae
inc
jno
in
mov
clc
pushf
mov
xor
shrl
mov
xor
aam
inc
mov
push
int3
in
mov
add
imul
sahf
in
jno
mov
scas
and
add
dec
pushf
out
sti
sbb
cmp
rorb
test
inc
cli
mov
mov
mov
and
insl
decb
sub
cmpsl
mov
sbb
adc
sub
mov
imul
out
jg
in
xor
pop
in
fcoml
lea
or
push
mov
xchg
inc
cmp
into
ret
clc
fdivr
repz
cmp
in
and
loope
xchg
add
scas
or
cwtl
mov
sahf
mov
enter
js
adc
add
or
aas
les
or
mov
adc
add
repnz
mov
es
adc
adc
jo
jo
iret
in
push
gs
aas
and
inc
or
xor
arpl
dec
xchg
lds
in
into
iret
or
adc
loope
pop
dec
push
dec
jnp
pop
stos
repz
dec
sbb
push
fistl
loop
inc
rclb
fidivs
in
aaa
adc
sub
fbstp
jge
leave
dec
or
cmp
pop
lea
inc
mov
push
fidivs
dec
lds
lcall
jno
jno
aad
pop
adc
stos
add
pop
aam
popa
xlat
pop
in
lds
xor
or
cmp
ja
int3
cmp
dec
xor
ret
into
je
cltd
or
jmp
adc
imul
mov
and
cmc
out
mov
mov
adc
ret
sub
vpmulhuw
les
sti
pop
and
fst
scas
enter
xchg
dec
dec
push
pusha
insl
in
mov
adc
jno
aad
fistl
pop
test
imul
lea
daa
cs
std
xchg
lret
ret
fucomi
adc
enter
jge
or
sbb
mov
mov
sbb
sub
movsb
fdivr
xor
xchg
sbb
cmp
sub
repnz
in
sarb
sbb
jno
data16
lock
in
cltd
cmc
inc
and
push
cli
push
xlat
mov
or
jle
or
inc
repnz
sub
lret
mov
sub
inc
dec
dec
pop
xchg
in
movsb
fistl
mov
jnp
sub
mov
jmp
imul
popf
sbb
mov
push
scas
mov
les
cwtl
adc
dec
xor
add
xchg
pop
mov
out
gs
pop
in
jno
add
and
cmp
aad
adc
sub
adc
push
cmc
xchg
or
nop
addl
mov
imul
andb
sbb
add
dec
push
push
enter
sub
xchg
adc
insl
dec
fldcw
and
xor
cmc
imul
and
je
shl
adc
insl
loop
out
lea
sub
push
mov
jecxz
aaa
dec
ss
mov
sub
cmpsb
xchg
arpl
lcall
push
rorb
ljmp
push
cmp
pop
mov
pop
pop
adc
push
sahf
jno
xor
into
stos
xchg
aas
lret
out
mov
adcb
adc
bound
jo
in
aam
dec
in
xor
jno
dec
insb
lea
sbb
movsb
pop
out
sub
jae
repnz
adc
loope
nop
aam
push
cmp
cmp
cmpsl
je
push
or
xor
adc
dec
push
jg
push
out
icebp
inc
xor
loop
insl
sub
inc
mov
pop
popa
and
movsb
mov
jo
cmpsl
mov
xchg
mov
or
adc
mov
stos
push
and
mov
imul
loope
mov
sarb
mov
scas
les
fld
rcll
fnstenv
movsl
sbb
mov
je
sarb
gs
pushf
cmp
jo
in
lds
mov
rcrl
pop
pop
pop
loop
in
outsl
jg
mov
notl
hlt
pop
imul
mov
dec
cli
pop
jmp
mov
adc
push
arpl
icebp
enter
sub
jmp
mov
ljmp
pop
lods
notb
dec
and
jno
xchg
je
cmp
mov
and
int
cli
gs
dec
imul
add
sub
push
int
cmc
pusha
inc
fs
sbb
push
fidivrs
sbb
mov
call
push
add
outsb
popf
stos
mov
shld
jmp
repz
push
popa
pop
in
and
jmp
xor
cmp
loope
mov
data16
popa
pop
in
and
in
dec
push
cmpsl
mov
test
dec
inc
fidivrl
cli
push
cltd
repz
insb
outsb
in
icebp
imul
cltd
sbb
xor
xor
mov
cmp
sub
dec
daa
je
loop
test
add
ss
popa
enter
add
in
mov
or
sub
add
movsl
push
xor
test
mov
push
pop
adc
mov
dec
call
adc
leave
gs
dec
aad
dec
mov
jmp
or
dec
xor
es
sub
adc
pop
fidivs
push
test
hlt
sti
int
or
push
mov
std
xor
dec
dec
jbe
jo
mov
lock
lods
scas
dec
outsl
pop
in
mov
cmp
mov
pop
int3
cwtl
xor
mov
scas
xor
xor
jns
push
int
sub
lods
shl
mov
shll
cmpsb
sub
popf
pop
lea
aam
lea
sbb
rolb
jne
icebp
xchg
pop
lea
ret
mov
popf
sub
sahf
insb
pop
pusha
mov
daa
adc
xor
adc
test
fstpl
lock
adc
dec
jo
sbb
out
sbb
inc
and
into
aad
dec
mov
xchg
xorl
or
js
pop
adc
flds
jbe
sbb
shll
ss
jo
mov
and
loop
or
hlt
inc
loope
fnstcw
pop
push
sbb
std
inc
xor
movsl
imul
cmp
jo
mov
xor
aam
movzbl
xor
add
dec
clc
mov
dec
cmc
pop
mov
addr16
sub
fsubs
mov
push
cld
out
pop
into
pushf
or
mov
and
je
fnstsw
mov
bnd
fnstenv
add
in
in
cmpsb
or
xor
mov
enter
push
mov
dec
lods
in
or
jmp
pop
add
outsl
shll
cmp
mov
xchg
and
and
cwtl
stos
xor
pop
sbb
push
out
dec
inc
sbb
jns
or
je
rorb
shll
dec
dec
pop
push
fistpll
pop
mov
std
jne
test
repz
push
sti
in
lock
push
out
insl
in
divb
pop
xor
sub
das
mov
mov
mov
lcall
dec
fnstenv
or
jno
adc
sub
pop
lea
in
shrl
fstps
in
sbb
mov
xor
popf
out
out
int
adc
and
repnz
notl
adc
lods
outsl
inc
adc
pop
mov
sahf
fimull
pop
mov
xor
push
push
faddp
insl
pusha
test
insl
jle
push
pop
fsubp
popa
sub
fstpt
and
icebp
jae
or
xchg
push
fnsave
decb
out
data16
ss
push
dec
sub
arpl
sbbl
sahf
imul
push
mov
pusha
xor
adc
lods
xchg
mov
bound
xor
xadd
adcl
inc
jmp
or
nop
stos
sbb
mov
test
sub
push
fnstenv
test
sbb
cs
flds
cmp
adc
xor
add
lock
lea
stc
xchg
xchg
aad
popa
jbe
out
fstps
jae
dec
jecxz
lret
fnstenv
scas
mov
push
int
sahf
mov
fldenv
stos
daa
pop
mov
push
sub
push
jae
mov
popa
mov
mov
sub
and
or
pop
ljmp
mov
fwait
lds
leave
jmp
or
cli
fidivl
inc
and
pusha
xchg
popf
rorl
fmulp
jne
popa
jnp
mov
or
dec
cs
gs
sub
or
lret
lods
xchg
movsl
movsb
mov
and
imull
cld
cs
inc
dec
jbe
jnp
jmp
fstps
shrb
mov
jmp
and
pop
call
inc
movsl
js
sbb
xchg
fistps
movsb
adc
ss
dec
mov
jge
push
fisubs
fcomip
push
or
jl
sub
sbb
insb
mov
test
inc
arpl
add
cmpsl
sahf
cmp
inc
pushf
push
dec
jno
xchg
add
fildll
push
inc
adc
jg
dec
lret
and
jp
mov
push
pop
ret
and
fldt
arpl
jo
fldenv
inc
cmp
or
jl
insb
in
shlb
cltd
in
lcall
sub
in
jno
add
inc
stos
push
out
loop
jo
scas
jo
inc
ret
in
rol
daa
mov
pop
pusha
xchg
xor
jmp
int
push
jno
jns
xchg
pop
gs
out
xchg
xor
ds
jp
inc
inc
call
mov
orl
lods
test
sub
or
mov
out
jb
bound
lods
sbb
inc
and
pop
adc
push
es
xor
lods
das
sbb
xor
movsl
movsl
lea
insb
sub
fnstcw
mov
adc
mov
jmp
adc
int
add
mov
fstl
adc
pop
xchg
pop
mov
inc
mov
enter
or
dec
inc
imul
mov
push
xor
cmp
repnz
dec
stos
jle
test
xor
sbb
jl
xor
call
and
fdiv
inc
jge
push
mov
push
fucompp
cmp
inc
arpl
or
push
push
sbb
into
pusha
jmp
in
sbb
bound
jecxz
xor
ljmp
push
inc
clc
pop
sti
pop
inc
rcll
je
and
xor
jmp
add
arpl
and
mov
lods
sbb
cmp
and
inc
fiaddl
lret
adc
jl
je
aad
inc
inc
jns
outsl
sbb
mov
int
sarl
js
adc
xor
cmc
inc
in
xchg
xchg
mov
mov
or
add
xor
hlt
scas
add
jmp
iret
jns
bound
fld1
xchg
lea
jnp
in
in
dec
daa
fmulp
mov
lea
jnp
mov
aas
xchg
popa
movsb
shrb
ljmp
and
and
sbb
mov
mov
sub
jae
jmp
or
jge,pt
pop
lea
aad
xor
aam
in
cltd
xchg
push
jnp
inc
stos
or
sub
leave
aad
cmp
dec
push
mov
cmp
adc
dec
adc
mov
das
aam
cmp
bsr
cmp
jo
cmp
adc
iret
in
sub
stos
dec
and
out
mov
fs
mov
add
hlt
add
inc
or
fimuls
mov
stos
lea
les
arpl
mov
ss
jno
in
mov
and
cmp
cmp
jno
mov
dec
daa
jecxz
cs
sub
cmp
mov
lahf
cmp
dec
pop
outsl
je
popf
xchg
xor
test
adc
mull
sub
adc
lea
and
outsb
adc
mov
fmul
cmovne
adc
in
dec
out
sub
out
clc
push
fisubrs
divl
fs
xchg
or
icebp
movsb
mov
sbb
cli
sbbl
mov
rclb
and
mov
cmp
je
shll
sti
add
rcl
and
in
sub
call
inc
in
scas
std
pop
lock
pop
fistpl
add
les
movsb
lret
dec
add
dec
fs
sbb
and
ret
sbb
mov
push
popl
pop
adc
jg
repnz
sub
loope
mov
xor
cwtl
in
fwait
andb
mov
jno
cmp
stos
push
in
lods
ftst
push
adc
outsb
inc
cli
inc
or
arpl
dec
je
inc
mov
xlat
out
iret
jo
push
fwait
fdiv
outsb
cld
movsl
cwtl
mov
inc
pop
push
jno
fdivl
and
sub
jb
xor
inc
pop
push
cmpsl
insl
pop
iret
push
in
cmp
insb
dec
mov
or
shlb
es
fldl
or
push
mov
push
je
push
cmp
or
pop
xor
or
cli
adc
das
jnp
mov
in
push
pushf
leave
mov
sub
and
lock
jbe
add
gs
pop
mov
xor
jb
testb
or
lea
xchg
jno
mov
mov
das
sbb
jmp
inc
xor
sub
lods
arpl
xor
leave
or
decl
out
and
jle
adc
push
mov
add
cmp
rcrb
repnz
adc
push
pop
hlt
mov
sub
arpl
shrl
inc
dec
pop
leave
or
bound
cmp
or
in
jnp
or
push
sbb
and
jne
jnp
mov
rcl
pusha
cmp
cmp
gs
xchg
movsl
sbb
and
sbb
jb
call
aam
mov
out
inc
sub
loop
xor
xor
in
mov
sbb
jne
or
in
mov
inc
inc
xor
lea
fildl
hlt
in
scas
inc
shll
repz
jns
cli
push
fsubl
icebp
test
jae
scas
jno
in
mov
jle
call
xor
cmpsl
xor
sbb
lret
adc
insl
lock
inc
arpl
repz
adc
inc
jmp
push
sbb
mov
sub
push
push
push
adc
in
insb
inc
and
mov
sub
addr16
stc
ret
imul
aam
push
xchg
hlt
pop
imul
ljmp
xchg
add
dec
jmp
into
pop
arpl
xchg
and
mov
add
xchg
sbb
rcrb
mov
pop
lods
andb
daa
nop
jmp
fdivl
dec
xor
mov
imul
mov
sahf
mov
inc
repnz
cmp
dec
test
loop
mov
in
or
lea
aad
in
jmp
loop
xchg
inc
xor
xor
arpl
xchg
fadds
jno
sub
lahf
jl
adc
or
adc
fistl
inc
jl
adc
add
fidivrl
pop
sbb
fstl
xor
loop
xor
insl
test
inc
arpl
lea
call
les
out
out
fdecstp
lock
sub
out
arpl
mov
aas
std
or
sub
jae
or
inc
aaa
push
outsb
mov
lds
lea
test
inc
inc
or
or
outsb
add
out
mov
outsb
mov
insl
sti
fcom
repz
les
pop
or
jne
jmp
mov
aad
cmp
jl
xor
xchg
in
xor
sub
mov
out
outsl
mov
lcall
sbb
adc
popa
inc
or
orb
cmc
push
mov
mov
add
xchg
mov
out
in
cld
jno
lahf
pop
mull
and
and
and
jnp
xor
push
je
sbb
jae
dec
call
clc
repnz
das
sbb
and
lea
outsl
movsl
mov
mov
pop
mov
sbb
push
in
xchg
xchg
insb
xchg
rep
in
jp
in
sub
addr16
bound
fistl
sbb
mov
fwait
and
js
xor
fsubl
or
jae
cmpsl
insb
shlb
cmpsl
test
bound
cwtl
cmc
out
popa
mov
xor
loope
stc
aas
repnz
les
or
cltd
fists
in
gs
xor
mov
aaa
insl
mov
in
sub
bound
add
fdivr
insb
int3
mov
movb
lea
and
aaa
sub
mov
les
xor
sbb
lcall
mov
inc
mov
ror
push
add
jmp
and
data16
xchg
push
arpl
pop
mov
hlt
jb
les
call
retw
jecxz
adc
dec
xor
sbb
cmc
mov
dec
mov
mov
testb
sbb
fists
lret
jl
test
leave
adc
sbbb
dec
dec
mov
loop
inc
push
adc
xchg
aas
and
arpl
insb
repnz
inc
das
bound
jecxz
jge
sub
sbb
rol
sbb
pop
or
xor
xor
sbb
xor
cmpsb
and
mov
or
adc
lods
dec
jnp
push
jge
xlat
push
rol
pop
and
fdivrs
enter
pop
inc
xchg
in
push
into
fistl
dec
push
xchg
adc
ret
das
outsb
sub
push
push
xor
jbe,pt
pop
pop
sbb
push
int3
int
sbb
out
sub
xchg
or
jns
fisubrs
out
mov
icebp
mov
in
insb
shlb
stos
mov
mov
and
dec
jno
je
sbb
popa
push
stos
push
aad
sahf
pop
xor
out
push
insb
std
fsubr
sbb
sbb
cld
push
test
mov
inc
dec
add
repnz
jae
and
xlat
mov
dec
mov
pop
mov
xor
shll
and
test
lret
outsb
stc
inc
dec
adc
and
bound
sbb
loope
sub
xlat
cmp
lods
sub
mov
call
push
cmc
jae
insl
insl
movsb
or
push
sbb
and
sub
mulb
loope
pop
int3
sbb
push
aad
jecxz
hlt
adc
pop
sub
es
jb
push
hlt
popa
insb
cmpsb
in
sbb
xchg
mov
cmpsl
jp
gs
scas
pop
sbb
xor
add
xor
sbb
outsb
out
pop
andl
movsb
xchg
in
dec
imul
lock
mov
lea
in
gs
rcl
gs
sbb
ret
pushf
or
leave
mov
cmp
aaa
push
xor
jno
dec
popa
repz
dec
pop
jo
pop
mov
jno
xchg
cs
xchg
jae
andl
in
and
mov
mov
inc
xchg
bsf
imul
je
sub
sub
out
and
jo
fwait
jg
fmulp
pop
push
dec
int
lea
iret
add
addr16
lret
inc
std
mov
jg
jmp
cmp
push
inc
insl
dec
mov
jb
adc
cmp
movsl
add
inc
call
mov
xor
sub
sti
cli
jae
push
cmp
in
inc
jmp
stc
pop
dec
add
fsubrs
mov
les
push
stos
popf
outsl
jmp
scas
inc
pop
pop
sub
pop
pop
inc
repz
mov
imul
push
add
xor
insl
cmp
test
aad
mov
pop
inc
es
das
xchg
bound
lock
negl
loope
push
mov
cmpsb
mov
mov
mov
push
xchg
pop
inc
loopne
loopne
mov
fnstenv
pop
sub
xor
rclb
adc
dec
je
cmp
dec
js
or
push
adc
mov
idivb
loopne
cmp
and
fstpt
sti
dec
test
hlt
jo
mov
push
in
lahf
roll
andl
bound
stos
outsl
cld
or
jle
dec
je
jae
xchg
and
fmuls
or
xor
fidivs
mov
call
loop
loope
mov
push
adc
daa
cmp
orb
in
jno
inc
jo
inc
lret
or
out
add
leave
test
jno
xor
pop
dec
sbb
loopne
inc
ljmp
pop
push
pushf
pop
rclb
xor
pop
and
sbb
loop
fstp
dec
mov
pop
mov
push
jns
push
or
jmp
push
inc
pushf
jae
mov
mov
scas
xchg
mov
fwait
xor
mov
mov
add
xchg
in
cmp
and
mov
shrb
push
icebp
adc
jne
scas
mov
fisttps
addr16
fsubl
pop
jmp
lea
hlt
or
push
lea
nop
movsb
pushf
stos
in
mov
jmp
movsl
repz
fnsave
lea
mov
mov
pop
mov
lahf
cli
push
out
iret
ret
fldt
clc
mov
mov
mov
add
lods
mov
inc
inc
mov
xor
scas
cwtl
outsb
push
ja
das
dec
out
pusha
mov
js
fcompl
jp
das
jae
aad
int3
rorb
pop
and
sbb
cmp
mov
pop
push
sbb
cli
add
ret
clc
or
movsb
lahf
push
dec
test
jns
xor
add
rcll
fisubrs
in
ljmp
out
pushf
mov
imul
mov
add
lret
aaa
dec
sub
lds
xor
sbb
out
in
jl
fwait
mov
and
mov
and
pop
jae
ja
int3
jns
inc
loope
mov
pop
ja
pop
arpl
mov
ret
dec
movl
jge
inc
add
pop
adc
mov
mov
mov
add
ffreep
xor
sti
cld
int
dec
pop
mov
mov
mov
xchg
push
pop
xor
mov
sbb
sub
addr16
add
mov
je
xor
lds
sarl
daa
jmp
arpl
bound
in
les
push
inc
mov
lret
imull
aas
popa
jo
in
sub
rcrl
pop
loopne
stos
jb
lea
jns
or
fdivrp
and
popf
rorb
int3
jl
xchg
jo
mov
jo
shr
andl
or
pop
in
pop
or
ror
push
and
mov
pushf
lret
inc
or
mov
sbb
mov
popa
cmp
hlt
in
pushf
xor
lea
aad
mov
jno
enter
in
call
mov
lds
dec
pop
pop
ret
or
and
ret
mov
xlat
cmpsb
xor
xchg
mov
pop
imull
nop
inc
push
in
stc
inc
ficoml
cmpsl
ret
mov
lea
stc
xor
push
das
xchg
jne
imul
xchg
cmp
mov
mov
out
add
and
jae
in
aaa
popf
xor
pop
add
cmp
mov
hlt
inc
ffreep
or
mov
out
arpl
inc
jbe
clc
and
in
cmp
mov
movsb
aas
sbb
hlt
pop
fucomip
push
mov
faddl
in
mov
or
andl
fs
sbb
jno
in
loopne
pop
shlb
in
das
mov
push
mov
sub
mov
das
scas
int
leave
hlt
test
jmp
pop
decb
stos
adc
xor
mull
jno
fsts
insb
leave
lea
cli
aad
dec
lret
adc
and
inc
je
mov
cmp
pop
xchg
fiaddl
sub
mov
lods
add
sub
jns
frstor
mov
aaa
sub
fimuls
inc
add
lea
jb
and
popa
jb
je
jmp
sub
jno
dec
rolb
bound
mov
rorb
arpl
cli
jno
xchg
psubsb
aam
add
dec
adc
and
lods
mov
mov
push
inc
loop
sub
repnz
lods
sub
nop
hlt
je
cmpsb
addr16
std
lcall
ss
lock
imul
cmp
mov
adc
cmp
repz
jl
dec
sbb
pop
mov
mov
sub
lods
inc
push
lds
xor
icebp
xchg
jae
je
jge
movsl
pop
cmp
js
lea
loop
cmc
hlt
mov
jnp
mov
jle
dec
jno
stc
push
scas
mov
xor
dec
or
push
das
daa
dec
mov
mov
fadds
aad
inc
dec
dec
das
cmpl
xor
push
mov
cmp
dec
aas
sbb
stos
mov
mov
inc
sbb
cmp
in
cmpsl
jle
sub
cmc
or
int
and
nop
in
pop
adc
and
fld
stos
mov
sub
mov
bound
dec
push
pop
sub
mov
jmp
mov
sub
and
inc
leave
sbb
and
push
mov
insb
lea
stc
jo
cmp
sti
daa
insl
movsb
or
jae
or
shrl
repz
out
mov
out
xchg
addr16
dec
mov
mov
pop
cmpsb
dec
es
xor
stc
jecxz
inc
push
call
adc
sub
mov
dec
inc
xchg
out
leave
fdivrp
rcrl
cltd
mov
push
mov
mov
dec
adc
std
and
arpl
cmp
cmp
or
jnp
sub
sbb
adc
jno
jge
dec
fists
dec
repnz
aam
mov
jno
lea
mov
xchg
pop
inc
out
sub
xlat
push
cmp
sbb
jmp
in
xor
and
je
dec
pop
mov
mov
ja
std
cwtl
inc
in
sbb
xchg
xor
xor
cmp
inc
dec
inc
jle
mov
gs
shl
loope
mov
mov
hlt
in
jmp
and
out
pop
jne
and
jns
mov
lahf
icebp
daa
pop
dec
pop
mov
fsubl
int
jle
add
dec
mov
xchg
pop
or
fisttpl
in
call
adc
xchg
loope
mov
dec
loop
insl
mov
sbb
in
push
lods
mov
inc
xor
fdecstp
sti
lock
lods
ficoml
pop
xchg
jae
sarb
pop
test
repnz
xchg
or
adc
imull
stc
xlat
stos
dec
push
aaa
mov
sub
daa
mov
dec
in
inc
jne
popa
cwtl
pop
clc
mov
xchg
sbb
pushf
test
mov
and
push
pop
pop
pop
sub
shll
fidivs
js
jmp
xchg
push
jns
mov
pop
fadd
dec
jb
cli
jecxz
aam
cli
jo
in
mov
sbb
pop
ret
ss
sub
adc
xor
push
dec
cmpsb
xor
dec
cmp
mov
mov
inc
xor
and
cmc
cwtl
lods
fwait
pop
dec
sub
mov
imul
hlt
push
xor
xchg
les
lods
addr16
sub
lods
in
mov
sbbb
testb
movzbl
push
in
mov
xchg
jae
mov
inc
out
cwtl
je
mov
jnp
or
ljmp
pop
fnstcw
xor
adc
outsl
jle
push
push
in
bound
pop
inc
sub
repnz
lahf
sub
pusha
push
into
push
stos
insb
lods
in
jmp
jno
mov
sahf
repnz
iret
imul
mov
add
xor
cmpsb
lcall
xor
mov
test
jb
rorb
or
cmp
mov
lea
push
mov
sbb
push
pop
cmp
repz
int3
mov
outsl
mov
daa
shl
mov
scas
fldcw
js
lea
and
out
sbb
sub
aam
push
xlat
mov
imul
push
or
repz
pop
sbb
push
cmc
mov
bound
rol
rolb
mov
fcoml
arpl
sbb
jl
popf
stos
sub
lods
rorl
push
fidivrs
jno
mov
sub
scas
and
mov
cmp
push
insl
lea
je
fstpl
push
jecxz
add
dec
ljmp
jns
aaa
xor
mov
repz
xchg
fisttps
arpl
mov
inc
adc
push
lock
xchg
jae
enter
mov
mov
outsb
fmull
or
ja
repz
add
jne
test
mov
mov
mov
xor
lock
sub
sbb
flds
pop
pop
push
je
lods
cmc
inc
in
xor
inc
sahf
jno
repz
insl
bound
js
pop
sub
sub
call
fcmove
mov
dec
lods
inc
push
mov
lods
push
xor
sub
inc
adc
sub
adc
mov
pop
insb
imul
and
jg
mov
iret
lods
popa
add
loop
sbbl
jo
and
sbb
imul
loop
fistpll
shlb
mov
es
pop
inc
das
sub
popa
mov
lock
das
shll
fmuls
lock
jge
loope
or
dec
mov
jle
pushf
sarl
mov
in
pushf
or
sbb
jne
jg
mov
shll
leave
ror
dec
push
mov
pop
xchg
arpl
and
sbb
sub
mov
xor
lea
int
and
mov
lahf
mov
xor
push
out
xor
aaa
jno
les
jl
mov
sub
sub
idivl
sub
jno
cmp
shr
xchg
adc
in
outsb
jp
jne
addr16
mov
pop
data16
push
adc
inc
mov
sub
repnz
daa
pop
cmp
adc
gs
add
jmp
in
lods
int3
dec
mov
rorb
adc
cmp
rorl
push
xchg
adc
fs
lcall
int3
and
bound
push
loopne
push
stos
addr16
fwait
int
xchg
cltd
in
mov
imul
sub
sbb
fwait
sub
and
in
push
dec
xchg
les
xchg
and
inc
mov
jb
or
int
in
jg
jmp
mov
cli
cmpsb
mov
mov
int
jae
insb
pusha
pop
lea
test
stc
jne
or
mov
or
iret
jns
pop
xor
das
pop
adc
jnp
scas
sub
loop
jl
dec
lcall
jge
jmp
lea
out
xchg
mov
lahf
imul
add
andb
dec
dec
xchg
lods
sbb
and
adc
sarb
mov
dec
mov
adc
repz
frndint
jo
loopne
lds
dec
add
fsts
xor
test
aam
lea
call
mov
inc
sub
ret
mov
addb
push
and
sub
daa
insb
std
mov
adcb
pop
push
pop
xor
mov
scas
sub
cmp
les
xor
popa
mov
sbb
insb
ficomps
nop
ja
imul
aas
ficomps
and
pusha
xchg
push
repnz
ljmp
inc
call
cwtl
jno
lds
loopne
hlt
sub
in
dec
imul
incl
and
add
out
jecxz
outsl
mov
cld
pop
lods
out
loope
cltd
dec
adc
out
sub
inc
or
sub
insb
sub
sbb
jb,pn
mov
push
or
jb
inc
mov
das
pop
xor
loop
and
xchg
xchg
mov
stos
dec
data16
stos
shll
xor
xchg
jnp
lock
rcrb
sbb
add
jne
shr
mov
shr
mov
cmp
push
cmp
scas
mov
pushf
pop
xchg
jb
mov
xor
imul
test
mov
and
mov
or
pop
mov
aaa
clc
push
adc
lock
and
inc
mov
cwtl
sub
adc
iret
mov
mov
outsb
jmp
jmp
jo
jle
sub
inc
xor
inc
and
sbb
pusha
lcall
out
mov
aad
repz
lret
inc
mov
xor
mov
fildll
out
daa
pop
and
dec
sub
clc
dec
hlt
and
or
pop
leave
mov
xchg
or
cmp
pusha
jns
in
jno
lods
out
mov
fstps
lea
fists
push
and
je
call
pushf
rorl
push
mov
aas
dec
lods
aad
xchg
mov
movsl
mov
movsl
jmp
xchg
or
data16
cmp
ret
mov
mov
push
xor
out
dec
lock
sbb
mov
mov
mov
jne
das
data16
mov
jb
mov
cmp
mov
hlt
ficomps
sub
pop
push
pop
cmp
arpl
inc
jae
out
ds
in
xor
sub
pop
into
push
mov
dec
sbb
dec
roll
or
arpl
mov
push
dec
xchg
push
mov
fcomps
lea
sub
and
insl
hlt
in
mov
jno
data16
bound
sub
dec
push
push
push
xchg
cld
jae
shl
mov
pop
ret
mov
push
xlat
pop
pop
lea
cmc
wrmsr
daa
inc
call
inc
inc
inc
test
push
sahf
or
test
cwtl
inc
add
pop
pop
add
dec
push
push
pushf
fists
sub
out
and
sbb
ret
and
mov
daa
aaa
sarl
arpl
scas
std
fimuls
inc
inc
and
pop
adc
jno
cmp
cmpsl
lret
mov
clc
mov
lea
stc
xchg
pop
sub
mov
add
adc
into
mov
scas
cli
loop
sub
clc
mov
in
mov
cmp
arpl
sub
es
pushf
cltd
inc
and
lea
dec
insl
icebp
and
xorb
das
mov
dec
aad
std
sub
dec
in
jp
sahf
pop
sbb
in
inc
aad
dec
push
inc
sbb
test
aam
lea
dec
stos
add
lods
in
imul
or
pop
mov
movsl
lea
test
jbe
xor
fldlg2
lds
mov
repnz
lret
or
mov
scas
jle
fsubrl
jae
inc
cmpsb
and
stos
dec
imul
mov
cmp
insl
lods
inc
or
xor
hlt
mov
pushf
lcall
push
adc
push
inc
mov
mov
arpl
xor
je
mov
mov
fimull
pushf
popa
addr16
mov
aad
and
imul
mov
loop
inc
std
jle
out
inc
popf
and
cmp
lods
sub
add
jnp
mov
cld
jae
or
and
insb
inc
lea
int3
xor
popf
add
mov
cmp
jmp
popf
ds
rol
mov
inc
pop
push
in
cmp
and
out
sub
mov
int3
xchg
or
loope
dec
in
cmc
fimull
sahf
aad
sub
and
push
sub
push
addr16
out
insb
dec
xor
std
aam
sbb
insb
inc
and
mov
insl
adc
bound
dec
test
mov
pop
add
shrb
out
in
addl
std
push
mov
xor
shlb
dec
dec
stos
xchg
setb
aaa
aam
mov
dec
cmp
fwait
bound
mov
dec
xchg
and
adc
sub
ds
imull
mov
dec
shrl
cmp
test
ljmp
test
mov
jecxz
xor
movsl
xor
jne
popf
and
mov
inc
lret
clc
pop
adc
cwtl
repnz
xlat
insb
out
sbb
mov
rorb
fnstenv
push
jns
xor
outsb
es
in
insb
in
and
cmc
in
dec
gs
daa
ja
pop
mov
stos
in
bound
ljmp
cmp
gs
pop
outsl
sub
push
ret
or
std
arpl
pop
insb
enter
or
insl
loop
nop
mov
addr16
mov
mov
sbb
lds
adc
jno
push
loop
dec
inc
mov
jb
leave
rcrb
jne
or
arpl
mov
dec
inc
pop
jl
dec
movsb
decb
pop
sub
xor
lret
clc
shll
inc
and
mov
imul
sti
dec
add
cmc
pop
cli
add
test
adc
adc
dec
fwait
bound
xchg
sbbl
xor
mov
mov
out
rorl
and
jno
mov
and
fsub
sahf
mov
add
je
fwait
sbb
or
test
pushl
cwtl
ja
lods
popa
ds
je
std
insb
xor
aam
mov
dec
or
push
fmul
repnz
loopne
mov
mov
bound
pop
dec
fadds
or
pop
push
ja
rsqrtps
cmc
jp
lea
cmp
sub
cmp
rorl
clc
cmp
sbb
push
xchg
test
cs
mov
xor
jmp
sub
das
insb
or
pop
repz
dec
sub
das
idivl
inc
push
sbb
xchg
jl
lret
arpl
jmp
mov
mov
addr16
dec
les
pop
mov
dec
jg
jae
leave
jl
adc
add
inc
mov
and
icebp
jno
movsl
out
popf
xchg
gs
test
sahf
int
cli
xor
jne
inc
sbb
test
sti
lret
jge
in
mov
and
mov
test
add
int
in
lea
cmp
push
bound
inc
push
dec
jne
hlt
push
sub
mov
sbbb
xchg
movsl
fcmovu
outsl
add
jns
push
jle
push
outsb
push
scas
sub
sub
inc
test
xor
dec
pop
jne
mov
xchg
jecxz
scas
or
mov
mov
ljmp
int3
jnp
je
popa
shl
lea
push
mov
mov
cmp
sbb
jnp
jb
cld
or
andl
cmp
into
xchg
scas
lods
sub
jne
add
test
xor
jnp
jne
jle
test
jne
mov
add
jne
pop
cwtl
aad
mov
iret
jne
jecxz
fsubr
and
push
lea
sahf
pop
sti
pop
aam
mov
sub
add
cmp
xor
jmp
mov
in
int3
aam
push
jne
lds
adc
dec
jne
add
adc
and
aam
cmpl
push
dec
jne
stc
sbb
into
mov
mov
lea
lods
scas
pop
add
xchg
jb
jne
loope
jl
add
mov
incl
mov
sbb
mov
jne
mov
push
repz
inc
and
push
push
rorl
jb
enter
xor
gs
bound
mov
push
cmpsb
fcmovnu
clc
or
movsl
outsb
sub
mov
jne
push
sbb
cmp
lret
and
jne
scas
mov
push
and
addr16
lret
push
loope
mov
pop
add
in
push
sub
dec
push
jae
orl
outsl
pop
push
nop
lods
stos
sbb
sub
das
jne
xlat
jns
leave
xor
mov
adc
and
mov
fdivr
lods
das
push
shll
add
data16
loopne
and
jno
pusha
or
je
cmp
xchg
xchg
sub
jp
and
xchg
loop
push
inc
inc
pusha
pop
jne
cltd
popa
daa
insb
in
jmp
jne
xlat
out
stc
lret
jne
inc
aas
pop
mov
sub
sub
push
aaa
aad
hlt
nop
ror
enter
xlat
jb
imull
mov
xchg
cmc
mov
in
jg
pop
cmp
aam
iret
pushf
or
jmp
movsl
outsb
pop
push
xor
lahf
sub
orb
jbe
cltd
pop
mov
and
aad
inc
jne
mov
loop
stos
std
ret
sbb
add
std
push
jne
push
hlt
cmp
xchg
jne
sbb
mov
jae
push
push
nop
adc
cmp
stc
jne
mov
xor
outsb
sti
inc
jne
popf
in
mov
adcl
mov
jne
jl
jns
and
xchg
jne
into
clc
idivb
iret
push
cmp
adc
adc
xor
xchg
lret
jno
out
sbb
cwtl
lods
lock
push
stc
js
pop
mov
sub
mov
push
jmp
test
popf
jp
outsl
mov
pop
add
jb
xchg
arpl
outsb
pop
inc
pop
cs
add
sub
in
mov
adc
jb
xor
imul
adc
push
scas
xchg
imul
lods
cmpsb
hlt
js,pt
push
aad
or
pop
sbb
jno
mov
add
cmp
mov
xchg
cs
xchg
jnp
and
insb
dec
and
lock
pop
jno
pop
push
or
mov
sti
repnz
push
movsb
cwtl
add
mov
fcom
jns
daa
lods
fsubrs
mov
xor
in
and
ret
in
pop
jl
mov
dec
jmp
jae
jo
sbb
loope
out
imul
leave
and
jnp
and
insb
jge
xchg
in
and
pop
mov
inc
push
push
sbb
jecxz
popf
and
loop
arpl
lock
cmp
cmp
jl
imul
flds
stos
test
cmc
mov
xor
xchg
dec
push
fisttpl
aam
cli
jbe
movsb
and
or
pop
in
sub
mov
inc
cwtl
insl
push
jmp
xchg
shlb
mov
lahf
ret
jne
jmp
cld
mov
mov
xchg
jae
popf
pop
mov
aaa
and
pop
enter
ljmp
xchg
jnp
pop
and
in
gs
shrb
pop
aas
adc
mov
in
outsl
fmuls
stc
and
dec
cmp
adc
and
test
sub
std
shl
xchg
add
leave
movsw
xchg
dec
lea
cmpsl
jmp
in
mov
pop
xchg
aad
adc
sbb
sub
mov
xchg
adc
out
ret
arpl
out
jg
jns
jb
inc
mov
inc
ficoml
or
adc
bound
sub
jecxz
pop
je
sbb
xchg
das
and
mov
or
inc
in
sub
pop
aam
mov
lahf
xlat
mov
cli
imul
xchg
inc
cmc
jno
lea
or
addl
mov
fldl
or
sub
in
int3
dec
addr16
in
adc
lea
push
mov
in
jns
lock
mov
leave
dec
enter
mov
lds
xor
pop
in
popa
and
icebp
in
scas
mov
dec
cmp
loop
mov
sub
stos
je
xor
jg
adc
rcrl
mov
xor
jb
mov
sti
jmp
xor
sbb
rorb
push
ret
adc
cmp
shrb
mov
mov
add
inc
push
push
adc
enter
inc
outsb
or
in
cmp
movsl
jg
mov
or
sub
jno
push
por
sub
or
adc
cmpsb
jmp
pop
xchg
int
push
inc
and
xchg
daa
aam
scas
loop
jmp
sbb
imul
rol
dec
insl
shll
mov
hlt
sbb
xchg
aad
mov
sbb
repnz
stc
aas
addl
stc
jmp
jo
jp
pop
cmpsl
popa
mov
je
jne
dec
pop
jo
mov
sub
leave
jae
pop
mov
fnstenv
in
mov
repnz
pop
shll
jg
fld
inc
lock
aam
cmp
enter
add
lret
cmp
xor
addl
fildl
std
in
inc
jle
xor
adc
ret
xor
xchg
in
call
std
lods
mov
xchg
aad
idiv
adc
nop
add
daa
sbb
push
ds
ss
test
sbb
mov
shll
ret
sbb
stc
lea
jno
mov
loopne
jo
out
jbe
in
enter
sbb
popa
xchg
mov
mov
push
mov
mov
jne
mov
mov
in
or
jae
in
mov
imul
pop
imul
popf
aas
lahf
inc
adc
cld
add
lret
in
fbld
repz
push
jb
shr
push
js
sbb
push
and
inc
xlat
adc
ds
movsl
lock
jl
and
or
lea
and
sbb
clc
loope
add
push
mov
arpl
aas
inc
inc
mov
inc
pop
xor
inc
add
int3
int3
push
dec
and
adc
push
xchg
jl
jb
iret
fstpt
mov
and
lret
push
in
cmp
mov
fxam
dec
test
movzbl
mov
in
mov
imul
cmp
rcrb
xor
repnz
std
mov
in
or
jno
iret
aam
in
fldcw
mov
push
and
dec
sbb
dec
cmpsb
loop
and
push
je
add
aas
xorb
out
or
clc
or
jno
stos
push
cmp
pop
jg
dec
xor
sub
adcb
mov
and
out
sti
adc
push
loop
cmp
push
mov
stos
xor
push
fnstenv
roll
lods
out
fldcw
mov
out
ljmp
lea
movb
inc
and
movsl
or
add
cmp
push
inc
cmp
lea
mov
and
rorl
push
in
sbb
into
inc
movsl
mov
data16
mov
stc
push
stos
add
adc
pushf
jno
pop
adc
sub
xor
scas
mov
sahf
xor
push
push
mov
mov
add
sub
jmp
mov
push
addb
es
jnp
xor
mov
sub
xor
sahf
dec
pop
mov
sub
sbb
dec
cli
jecxz
sub
pop
aad
sbb
and
mov
jle
lods
xor
adc
dec
inc
stc
xchg
ja
mov
arpl
adc
dec
xchg
popa
mov
in
ret
rcrb
mov
add
adc
jl
pop
push
in
ficomps
inc
xor
inc
cmp
jg
xor
ss
mov
and
xchg
push
pop
dec
xorl
jne
adc
mov
dec
mov
nop
sbb
mov
pop
test
pushl
mov
addb
push
je
mull
cmp
cli
pop
jle
dec
xor
jne
fisttpl
mov
push
dec
bound
bound
jl
fsubl
fimull
cs
sub
mov
sti
aas
stos
daa
mov
mov
scas
dec
in
inc
test
shlb
lahf
jle
out
insb
clc
mov
dec
test
pop
cld
sub
cmpsl
rorb
popa
data16
in
ficomps
jb
mov
lahf
je
push
mov
lds
repnz
test
xchg
or
dec
pop
popf
lret
sub
mov
cmc
shl
out
aam
fdivs
and
movsb
sti
xor
jp
es
cmp
bnd
decl
imul
call
mov
dec
popf
cmp
imul
dec
mov
pop
rolb
bound
jae
add
loopne
js
lret
cmpsb
push
dec
dec
cmp
jle
nop
scas
mov
daa
jno
sub
mov
jns
push
jo
cmp
mov
arpl
lock
ret
insl
sbb
sahf
mov
test
dec
lods
ja
xor
loope
mov
lea
stos
mov
fists
sub
div
jno
in
pop
divb
andl
test
fimull
and
mov
imul
aam
enter
and
daa
mul
dec
hlt
xchg
jno
dec
sub
mov
mov
add
sbb
iretw
mov
ret
mov
pop
orl
gs
mov
test
add
clc
sub
inc
clc
cli
mov
pop
mov
xor
mov
add
sub
adc
adc
dec
jp
js
mov
rol
les
insb
dec
mov
std
xor
sub
jmp
jg
scas
jnp
jp
xor
jbe
xor
sub
cs
sub
xchg
inc
mov
mov
adc
mov
jnp
pop
in
cmp
sub
inc
pop
imul
mov
pop
aaa
mov
lea
xchg
ret
or
popa
push
mov
out
cmpsb
inc
xor
mov
enter
fs
jecxz
lea
dec
xchg
mov
aaa
pop
xor
sar
jnp
imul
cs
cmp
xor
and
jmp
stos
shl
testb
icebp
ljmp
test
mov
inc
add
outsb
mov
dec
jne
imul
push
in
icebp
repnz
mov
pop
data16
iret
mov
mov
divl
es
xchg
cli
sub
push
jge
arpl
fwait
push
pop
jne
xlat
stos
add
xorl
cwtl
push
jno
in
mov
dec
pop
adc
call
and
and
sub
sub
inc
sahf
mov
daa
xchg
xchg
inc
fldenvs
adc
lret
fs
pop
sbb
inc
sub
and
fmuls
imull
sarl
fucomp
push
shlb
shl
mov
add
sub
rcr
jecxz
and
lods
sub
inc
xchg
dec
dec
add
inc
adc
int3
lods
pop
insl
and
out
push
jb
out
cltd
jno
sub
jge
cmp
push
xchg
xor
fxch
sbb
test
and
mov
pop
mov
jbe
aam
pop
xchg
jb
mov
imul
int
cwtl
mov
and
inc
jno
gs
stos
adc
mov
je
lret
mov
rorb
gs
pushf
pop
sub
sub
cmc
mov
xchg
lret
adc
mov
adc
fldlg2
pushf
lea
loop
adc
inc
nop
fstps
pushf
in
je
mov
lods
adc
adc
push
mov
test
pop
push
mov
mov
cs
xchg
jns
lea
les
sarb
mov
test
test
pop
clc
mov
sub
pop
mov
ret
pop
fstpl
dec
jp
inc
push
cmp
and
test
or
das
add
adc
pop
jecxz
mov
lea
jge
jmp
mov
mov
bound
sbb
shl
lea
xchg
and
loop
add
aam
js
sub
pop
and
jl
inc
adc
insb
lret
ljmp
cmp
call
test
or
adc
les
cld
cli
mov
or
insb
lea
ss
pop
mov
xor
cmpb
sti
into
push
push
mov
ja
jno
jns
movsb
xchg
pop
push
adc
dec
mov
hlt
inc
xchg
xor
fsubrs
dec
ja
movsl
mov
cmp
sub
cmp
enter
not
pop
jle
sub
mov
xchg
lods
jl
and
mov
fisubs
xchg
sarl
mov
and
sarl
shlb
outsl
xchg
in
scas
jge
push
aad
test
int3
or
jnp
inc
xchg
rcrb
inc
push
sti
xor
push
inc
repz
jp
jl
cmpb
jmp
mov
lea
mov
xchg
dec
mov
scas
mov
hlt
jne
xor
dec
mov
or
dec
push
lret
mov
dec
xlat
dec
insb
imul
shll
cli
pushf
push
gs
fistps
adc
adc
and
into
movsb
mov
mov
mov
cmp
fdivs
pop
leave
hlt
shrb
lods
mov
push
adc
and
push
dec
xlat
inc
popa
stos
sbb
mov
pop
jne
test
xchg
call
inc
rcll
jae
add
jle
scas
xor
adc
leave
xchg
arpl
addr16
inc
stos
ljmp
cwtl
stc
jl
jne
insl
daa
xor
push
bound
jno
xchg
movsl
dec
pusha
sub
lock
jne
fs
sbb
push
mov
das
iret
shlb
mov
push
scas
jne
xchg
jo
outsb
xchg
mov
leave
repnz
pop
mov
js
mov
sub
and
dec
jo
mov
andb
dec
pop
jno
cmp
push
push
xchg
out
adc
push
into
mov
je
jecxz
fdivl
inc
addb
cltd
add
loop
dec
pop
in
mov
mov
icebp
lock
pop
or
jb
imulb
outsb
pop
mov
and
lds
dec
inc
repnz
sbb
jnp
sbb
fadds
sbb
mov
adc
test
xchg
and
lret
xor
hlt
or
lea
pushf
repz
cmp
cmp
adc
add
mov
lods
inc
es
push
dec
xchg
bound
test
leave
mov
and
insl
popa
jno
jo
in
sti
add
dec
in
dec
or
and
insb
cmc
popf
add
aaa
jg
pop
stos
in
cmp
sbb
test
flds
mov
or
lea
add
jmp
adc
mov
rcrl
enter
and
push
mov
pop
xor
jnp
lods
mov
clc
popf
or
loop
mov
decb
lods
add
dec
stc
cmp
insl
loope
outsl
imul
shll
xlat
adc
insl
aad
and
jo
fdivrl
mov
mov
pxor
push
dec
aaa
hlt
sbb
pop
xchg
bound
sbb
inc
add
mov
stc
lods
cmpsb
mov
xor
popa
xchg
adc
loopne
outsb
movsl
jno
scas
mov
add
mov
or
mov
insb
mov
jnp
stos
inc
mov
std
insl
cmp
jne
bound
or
loopne
jo
xor
rorl
dec
sbb
outsb
pop
sbb
out
pop
mov
adc
fs
cmp
jecxz
insb
fisubl
sbb
add
mov
mov
hlt
fidivl
je
or
mov
aad
push
add
xchg
adc
imul
gs
int3
adc
adc
adcl
inc
iret
adc
stc
add
cmp
aas
push
movsb
mov
outsb
aad
push
pop
jbe
sub
call
lcall
inc
testb
jmp
in
push
mov
mov
pop
dec
jae
cwtl
loop
clc
xchg
xor
cld
xor
sbb
mov
jo
emms
inc
mov
inc
inc
sub
leave
ljmp
xchg
out
dec
sub
pushf
fcmovu
mov
shll
jo
shll
push
repz
or
mov
or
data16
fistpll
mov
mov
mov
daa
cli
movsl
dec
mov
jae
mov
sub
sbb
clc
daa
lods
movsb
out
cmp
xor
and
popa
sub
inc
sbb
jp
adc
mov
fildll
add
mov
mov
lds
or
cld
adc
flds
pop
out
jge
mov
je
add
shrb
stc
les
xchg
dec
xor
decl
xor
in
xlat
iret
stos
cmp
adc
dec
fadd
dec
repz
fistpl
dec
pop
push
jno
loopne
mov
aam
movsl
in
outsb
outsb
mov
lock
sub
or
mov
lock
or
aad
mov
nop
push
or
mov
adc
xor
call
adc
insb
push
sub
cmpsl
pop
add
inc
pushf
mov
into
cmpsl
mov
aad
stc
arpl
xor
into
aaa
add
inc
rorb
jecxz
mov
imul
dec
js
xchg
mov
leave
xlat
fdivl
pop
mov
popf
sbb
push
dec
idivl
pop
dec
xor
inc
daa
sub
sbb
arpl
mov
dec
xchg
or
sub
jns
rcrb
sarb
addl
inc
lea
cmc
pop
lods
mov
adc
mov
lea
mov
add
hlt
and
enter
xchg
pop
mov
or
bound
call
mov
pop
jbe
or
and
iret
push
sti
push
sbb
xor
pop
inc
shr
xchg
je
adc
pop
jb
adc
mov
into
mov
outsl
jb
lea
jl
push
push
ds
jg
dec
enter
xchg
cmp
or
stos
ljmp
or
loopne
xor
loope
cmp
icebp
ret
aam
fmull
add
add
lods
sub
add
int3
movsb
popa
push
insl
push
fwait
rorb
outsl
aad
mov
stc
pop
imul
mov
sbb
subl
or
and
dec
mov
mov
mov
or
jl
jne
mov
dec
inc
xchg
xchg
scas
add
jae
sub
testb
jae
xor
cs
in
inc
adc
popf
repnz
push
xor
repz
stc
mov
inc
push
mov
xchg
test
mov
push
lea
into
add
cmp
jecxz
sub
out
fstps
cmp
inc
mov
mov
adc
mov
aas
and
jae
mov
and
in
add
push
pop
fistl
sbb
jl
push
ljmp
std
stos
add
imul
sbbb
dec
jno
push
mov
mov
sti
inc
enter
dec
gs
jbe
xor
les
mov
idivb
pop
lea
pop
pop
ret
in
xchg
hlt
pop
inc
fisubl
sub
inc
fmull
jg
mov
add
mov
rcrl
popf
call
push
fistpll
jno
in
inc
pushf
sbb
fmul
bound
pop
in
add
test
cli
jle
sub
das
sub
insb
loop
pop
divl
sbb
adc
lock
cmp
out
subl
out
push
inc
jo
mov
daa
sbb
mov
ficomps
test
gs
sarl
jecxz
stc
fnsave
add
xchg
mov
mov
cli
push
cmp
push
and
clc
lea
in
les
movsl
add
pop
xor
and
push
js
repnz
fsubrs
lea
fistps
inc
shlb
jno
aas
sbb
movsl
loop
fsubp
sarb
iret
jle
xor
or
mov
cmpsb
cmp
mov
adc
rorl
rcrb
xchg
pop
mov
cmp
xchg
mov
imul
mov
jge
lock
sahf
jno
sbb
xchg
or
lahf
fstps
push
mov
adc
jo
mov
xchg
fsubr
ljmp
scas
cmp
stos
jmp
lods
sbbb
lahf
arpl
int
sti
dec
add
push
lods
and
mov
lea
lds
aaa
and
call
pushf
jg
imul
jb
jle
lea
lds
jg
push
fsubrl
push
hlt
cmp
and
loopne
and
jo
scas
fwait
jle
xor
stos
sbb
inc
push
shll
ror
jne
inc
test
push
and
dec
cwtl
jg
sbb
pop
sbb
mov
mov
stos
fldt
mov
add
loopne
or
decb
mov
je
or
loopne
fistpll
pop
cmp
and
sbb
lods
std
xor
mov
sbb
fisubrl
aad
lea
addr16
xchg
push
xchg
int
mov
out
mov
pop
xchg
enter
xorb
andl
jns
adc
sub
nop
insb
pop
iret
je
pop
adc
imul
rcr
clc
or
mov
mov
mov
adc
fnstenv
push
inc
mov
mov
jge
rcll
mov
jecxz
frstor
sub
lahf
out
mov
push
jb
jg
fiaddl
loop
or
mov
push
sub
mov
inc
insl
bound
adc
mov
insb
mov
movsb
xor
push
cmp
sbb
cmpsb
insb
ss
jno
fisttpl
fs
out
mov
sub
les
mov
adc
add
rorl
ds
ret
fldt
lds
mov
cmpsl
addr16
xor
pcmpgtd
mov
imul
ja
xor
mov
and
fs
lret
lea
and
lock
and
sub
push
repnz
into
pop
fsubrl
sub
fs
in
mov
test
mov
lds
jp
jge
out
push
int
movsb
sub
inc
loope
in
mov
push
mov
in
inc
or
push
fwait
call
lea
in
sbb
push
imul
and
and
pop
aaa
scas
jmp
arpl
pop
jg
int3
push
fsub
jo
out
aas
test
jp
pop
jg
outsb
or
sbb
xor
das
enter
and
ret
jg
cmp
pop
mov
cmc
lea
jb
dec
ljmp
pop
shrl
and
push
cmp
sbb
sbb
inc
insb
ja
rcll
insl
into
jo
mov
stos
xlat
sbbb
dec
mov
lock
lea
cmp
enter
mov
popf
dec
fmuls
repnz
push
mov
popf
jmp
push
mov
mov
dec
gs
test
iret
incb
addr16
lock
ret
mov
pushf
push
and
push
or
sbb
mov
mov
inc
mov
xchg
outsl
xor
jg
lods
xorl
mov
and
mov
insl
or
rcl
push
jno
xchg
or
push
xchg
or
sub
add
fidivl
divl
ss
scas
frstor
sub
push
loopne
enter
lea
scas
mov
imul
pop
insb
cwtl
je
jae
int3
push
xor
je
test
mov
outsl
jo
repnz
aaa
dec
jecxz
push
mov
mov
mov
mov
dec
jge
arpl
pop
leave
push
fcmovb
rcl
xchg
cmp
adc
mov
insb
daa
xchg
scas
inc
mov
rorl
or
lahf
popa
inc
out
pop
test
mov
xlat
pop
xor
pop
test
ret
xor
and
dec
sarb
adc
xor
fcompl
and
bound
dec
mov
cmp
cmp
fwait
ja
dec
gs
fcmovbe
outsb
jnp
fmull
int
es
loopne
ljmp
jbe
stos
xor
inc
pop
adc
xor
jl
jno
jnp,pn
jmp
and
push
movsb
repz
push
in
movlhps
aam
lods
inc
xor
and
jns
xor
mov
sbb
cmpsl
jmp
in
inc
mov
aam
cmp
pop
ret
pop
arpl
arpl
cmp
lods
cmpsb
es
in
insl
cmovge
fs
or
and
mov
arpl
mov
push
push
jmp
jae
jnp
out
in
cmp
cwtl
sbb
push
sbb
mov
jecxz
and
xor
ficomps
fsubrl
pop
mov
mov
mov
into
jb
xor
mov
in
js
jp
repnz
dec
leave
fxtract
je
arpl
mov
pop
xor
and
hlt
gs
cmc
mov
xchg
push
popa
repz
popf
test
jp
push
add
leave
in
push
add
add
adc
xor
lods
fmul
adc
cwtl
fwait
mov
in
je
lods
or
jg,pn
and
pop
mov
outsb
loop
and
sbb
ret
cmpsb
bound
decl
mov
mov
test
cmp
jns
test
mov
mov
xlat
cs
mov
add
inc
adc
gs
jnp
mov
add
xchg
xchg
in
or
sbb
mov
pop
enter
mov
adc
fimuls
hlt
sub
sbb
popf
fiadds
sbb
pop
dec
gs
mov
pop
pop
fsubrs
shlb
imul
hlt
fucomp
loopne
popl
data16
lret
and
lahf
fisttpll
pop
adc
mov
add
adc
jno
mov
popa
in
lods
in
cmpsl
in
push
mov
sbb
dec
clc
leave
xor
dec
cwtl
orb
loopne
lea
outsb
jmp
imul
insb
xchg
add
dec
and
sub
je
jno
les
pop
mov
push
inc
or
sub
mov
mov
sub
and
orl
jg
jle
sbb
add
icebp
shl
jo
insb
int3
repz
sbb
mov
jo
testb
rorb
loope
rorl
cmp
add
ret
sbb
or
mov
cmp
pop
jge
push
push
insl
fs
notl
jmp
cld
xor
mov
fs
and
push
cmpb
ret
push
xchg
mov
cli
push
add
call
shrb
movsb
dec
insl
rcl
bound
adc
jg
in
sbb
imul
aad
imul
loop
daa
stos
adc
mov
lahf
popf
jo
data16
xchg
jge
arpl
push
pusha
lods
mov
ljmp
xor
in
jbe
and
pop
or
fs
mov
sub
pop
mov
in
popa
mov
mov
dec
push
lock
pop
cwtl
mov
les
pop
test
leave
leave
mov
xor
addb
shrl
jne
fstl
in
je
jp
data16
sub
cmp
ficompl
insl
xlat
je
jl
mov
add
and
imul
mov
lahf
lock
popf
in
into
arpl
inc
jmp
and
aad
pop
scas
addl
icebp
mov
push
jo
sbb
lock
enter
dec
shll
sbb
sub
pop
mov
and
lock
loope
shlb
shll
hlt
sub
and
lea
sbb
rcrb
imul
mov
in
sbb
pop
repnz
out
add
stos
inc
call
in
in
ficomps
push
add
add
out
mov
mov
sbb
pop
jo
popa
jno
repnz
add
mov
ljmp
movl
sbbl
xchg
lret
cmp
and
pusha
mov
mov
sub
jmp
dec
notb
mov
mov
hlt
jge
fsubl
cld
jae
or
sbb
ds
xchg
jnp
out
mov
lcall
xchg
clc
jo
shlb
mov
lret
fstps
rcll
mov
adc
lea
pop
sti
sub
call
mov
jnp
sub
or
aam
aas
xchg
mov
jp
pushf
arpl
test
fadds
adc
mov
sub
jle
cwtl
inc
cmp
push
xor
sub
sub
sub
rolb
dec
push
lea
xor
sub
arpl
mov
dec
fs
icebp
or
lods
fnsave
fdivs
je
addr16
test
add
in
push
sbb
push
rclb
adc
movsb
xchg
jae
data16
ja
je
pmaxub
test
mov
and
pop
movsl
je
in
inc
mov
or
sub
and
rorb
leave
jmp
pop
icebp
loopne
ds
xor
pop
cwtl
xor
mov
xor
mov
cmc
sub
sahf
and
inc
fcoms
nop
stos
clc
adc
xchg
es
adc
sbbl
cmc
js
cmp
adcl
inc
sahf
push
out
movsb
push
pop
fcmove
ret
pop
std
aad
pop
imul
cmpl
stc
clc
push
in
mov
outsl
loope
dec
xchg
inc
jae
stc
cmp
gs
ja
fincstp
sub
dec
imul
js
lods
jmp
jno
lods
xchg
in
and
leave
imul
rolb
mov
mov
popa
rcr
mov
mov
xor
rolb
test
cmp
and
or
sbb
leave
pop
loopne
cmp
jecxz
push
hlt
invlpg
pushf
or
fildl
sub
cmp
dec
jle
sub
adc
mov
cli
repz
rcrb
lock
lock
in
xor
xor
cmc
cltd
fsubrl
xchg
lret
sbb
jge
lock
cwtl
add
mov
movsb
adc
mov
test
mov
dec
daa
jae
sub
mov
flds
jmp
in
mov
cmp
jns
jge
pop
call
xchg
xchg
cltd
jne
mov
insb
imul
mov
push
imul
sbb
aas
cmp
lret
fistpl
fmull
in
push
scas
mov
xchg
mov
call
in
jo
and
arpl
popa
mov
hlt
daa
jnp
jp
divb
mov
orb
sub
inc
jb
fwait
jmp
dec
jno
mov
jmp
mov
pop
cwtl
fs
mov
lea
push
add
fists
jnp
bound
xor
and
sbb
mov
shlb
test
pop
push
int3
mov
jmp
xchg
popa
stc
fisttps
cmp
sub
sub
out
add
aam
mov
test
daa
out
add
inc
jb
mov
insb
fxch
inc
sbb
in
sbb
push
mov
pop
and
repz
push
xor
pop
negl
js
fucom
mov
mov
pusha
jno
imul
inc
pop
mov
cmpsl
pop
cld
mov
mov
subb
aas
out
inc
hlt
filds
mov
sub
lods
pop
mov
fldenv
mov
clc
push
repnz
pop
adc
sbb
mov
out
sti
das
and
mov
les
mov
sbb
pop
mov
and
mov
insl
fcomp
pop
outsl
mov
pop
iret
and
scas
cli
dec
inc
testl
es
int3
mov
pop
enter
cmpps
pop
in
mov
or
adc
mov
jmp
ficoms
dec
pop
mov
mov
js
xchg
pop
jno
cli
push
je
aaa
or
xchg
pop
mov
stc
jb
pop
jg
les
decb
ret
jbe
xor
mov
ret
xchg
sbb
in
rclb
xchg
mov
adc
pop
repnz
push
shl
add
xorb
ret
loop
cmc
shlb
in
push
loopne
rorl
jecxz
cmp
pusha
pop
hlt
test
or
jns
jp
mov
add
add
mov
sar
orb
mov
inc
cld
rclb
pop
or
lcall
leave
push
insl
mov
imul
add
or
jb
adc
and
cmp
ret
xchg
insl
dec
mov
xor
and
jne
sbb
std
xorb
sub
fisttpl
xchg
mov
fmull
fs
ret
fdivr
mov
jae
push
xchg
mov
push
je
and
int3
in
and
fiaddl
sbb
jmp
mov
jno
fsubrl
and
movsb
mov
iret
bound
and
lret
iret
push
data16
mov
sbb
mov
int3
jmp
dec
dec
jl
push
lea
push
adc
ret
lret
add
clc
js
mov
xchg
push
dec
sahf
je
sub
int
inc
lret
mov
sub
add
es
jecxz
sub
ret
mov
data16
je
popf
movsl
je
dec
push
fldcw
shlb
lock
ds
and
or
dec
lea
pop
adc
push
mov
mov
hlt
or
in
fbld
std
fstl
cli
push
cmp
fs
repnz
or
idivb
syscall
mov
dec
or
cmp
mov
pop
arpl
in
mov
mov
mov
lea
movsl
in
dec
mov
push
xor
push
jl
lea
and
dec
pop
lret
add
jmp
push
push
add
insl
imulb
dec
xchg
mulb
inc
push
inc
stos
movsb
dec
shrb
mov
jo
clc
xchg
mov
dec
les
lret
rcrl
mov
mov
dec
sub
pop
aas
and
xor
daa
pop
fdiv
mov
imul
xchg
lea
rcrl
dec
bound
cs
imul
lods
hlt
addb
cmp
fiaddl
rorl
sbb
or
repnz
inc
pop
daa
inc
and
sar
movsb
fdivl
pop
cmc
cmp
lds
movsl
and
push
repnz
pop
cmpsb
or
repnz
inc
and
sbb
in
stos
test
sub
or
jecxz
xchg
push
push
cmpsb
in
loop
test
or
mov
inc
mov
imul
scas
into
pushf
mov
bound
xchg
and
pop
mov
mov
dec
mov
mov
xor
les
dec
jns
aam
loop
jb
fmuls
jae
sub
daa
jl
dec
stos
xchg
pusha
into
push
mov
mov
out
add
repnz
in
cmc
mov
jae
mov
mov
adc
mov
inc
fs
push
in
sar
mov
lret
jmp
push
mov
pop
xchg
xor
pop
push
test
sbb
les
or
xchg
fcmovnb
xor
sub
cmpsb
push
mov
int
jecxz
cmpsb
addr16
pop
pop
inc
jl
jno
mov
xor
sub
or
mov
xchg
xor
ret
in
aad
dec
dec
lods
jno
xor
xchg
cltd
sbb
jnp
popf
fiaddl
mov
inc
imul
mov
mov
cmpsl
shrl
push
push
shrl
lret
stos
adc
in
pop
add
movsl
xor
mov
cmp
add
fldt
xor
push
fstpl
rorb
dec
in
sbb
jno
lea
movsb
push
testb
in
loop
repnz
or
sbb
dec
mov
and
outsl
mov
rclb
aad
and
out
shl
sbb
std
fists
loop
pop
fidivrl
and
lret
xchg
fcoml
dec
test
inc
adc
orl
and
dec
sbb
jmp
insl
or
push
mov
or
mov
push
pop
jl
mov
orl
xchg
dec
push
mov
lahf
cmc
adc
adc
jno
mov
cwtl
mov
push
fildl
pop
jno
jne
mov
es
pop
xchg
xchg
aad
or
cli
xchg
mov
call
push
es
sub
or
fldenv
sub
sub
daa
lea
ret
inc
inc
jecxz
mov
icebp
inc
mov
cmpsb
aad
insl
push
mov
adc
adc
jno
xchg
stc
mov
fsubl
jo
in
shrb
or
loopne
mov
sbb
jl
lret
je
js
push
hlt
push
pop
mov
rol
gs
pop
rorl
xchg
movsl
pop
lea
xchg
mov
shlb
mov
std
mov
push
dec
mov
push
int3
insl
cmc
jge
adc
lds
sbb
stc
subb
jmp
mov
pop
mov
movsl
aas
loope
notb
mov
xchg
imul
sbb
mov
jns
je
ds
pop
fcoms
add
rorl
sbb
imul
in
sbb
outsb
and
enter
and
mov
leave
movsb
lret
popa
gs
push
xchg
pop
and
and
push
cmp
cmpb
xor
loope
dec
hlt
das
mov
xchg
sbb
inc
mov
jnp
and
and
xor
loop
ja
ja
jno
fidivl
push
mov
sub
sbb
ss
mov
push
jae
cmpsl
fcompl
mov
xor
stos
pop
rcrb
test
in
out
and
lea
or
adc
mov
loop
pop
pushf
inc
insb
jmp
sbb
mov
movb
in
inc
pushf
jno
mov
push
in
sub
jae
mov
adc
sbb
add
ja
dec
mov
clc
sbb
lea
out
scas
sbb
sub
dec
loopne
push
lcall
int3
sub
mov
inc
enter
or
shrl
or
mov
push
lds
fadds
mov
xchg
jb
and
mov
sbb
mov
jns
xchg
jb
push
or
fldenv
cli
xor
dec
mov
dec
or
daa
rolb
or
push
adc
nop
pop
and
add
cmp
inc
sbb
mov
pop
lods
jb
push
lods
imul
mov
or
popf
mov
fnstenv
inc
xlat
cs
and
dec
and
dec
dec
aaa
mov
xchg
mov
jmp
jae
mov
sub
test
imul
cmp
leave
adc
sbb
lea
pop
aas
movsl
cmpsl
mov
in
aas
ds
int
dec
sbb
sbb
pop
in
inc
jno
mov
push
jnp
icebp
adc
das
in
jae
jmp
cli
insb
pop
clc
mov
insb
cmp
pop
scas
imul
movsb
cmc
jne
push
mov
dec
shll
sbb
xor
loope
popa
add
inc
sbbb
jo
scas
aaa
mov
sti
popa
mov
mov
xor
cmpsl
dec
add
and
lret
and
daa
cwtl
mov
jg
je
scas
mov
nop
pop
cmp
add
loop
sub
fs
xor
fisttpll
and
rorl
lea
int3
loope
inc
xchg
push
sub
pusha
push
add
push
push
xchg
aas
push
repz
shll
flds
pop
sub
mov
adcb
testb
loopne
pop
and
decl
lods
jle
in
push
mov
dec
push
mov
xor
outsb
js
jo
push
mov
outsl
mov
mov
add
icebp
out
mov
nopl
movsb
mov
cmpsl
adc
mov
mov
adc
sbb
xchg
out
jle
bound
mov
andb
inc
adc
scas
in
dec
lea
lods
jnp
daa
and
lods
push
mov
jle
subl
stos
xor
and
clc
fiadds
mov
jb
mov
or
std
mov
lds
jno
push
jo
mov
sarl
sub
imul
mov
sub
addr16
ffree
ljmp
jno
mov
mov
es
push
int
jecxz
push
movsl
mov
and
pop
mov
negl
mov
daa
jno
fnstenv
add
inc
fsubr
lods
std
test
in
sub
mov
cmpsl
fdivr
loopne
mov
in
mov
hlt
or
imul
push
lret
sbb
jge
outsl
aas
jle
jecxz
sub
sbb
loopne
stos
insb
mov
push
arpl
and
sbb
push
imul
jne
loope
jnp
xlat
inc
xor
popf
xchg
je
mov
or
or
ret
pop
and
dec
mov
in
or
imul
push
inc
sub
dec
sbb
sub
inc
out
cmpl
and
xor
or
xchg
add
and
iret
sub
add
cmp
mov
inc
clc
popf
aad
mov
lahf
out
lret
mov
mov
imul
mov
ss
jae
lret
add
mov
sahf
fdiv
inc
outsl
dec
rclb
sbb
xstore-rng
adc
pop
jbe
pop
dec
insb
pop
sahf
je
jne
test
mov
xchg
dec
push
inc
pop
ret
mov
negb
lahf
and
adcb
cmpsb
sub
test
iret
nop
fs
fstpl
lcall
pop
in
pop
outsb
int3
sbbb
mov
iret
aaa
rcl
jne
jmp
ret
repnz
popf
lds
lock
mov
xchg
insb
pop
pop
insb
mov
jae
xchg
or
mov
ds
lcall
fwait
sub
adc
push
loope
pop
xchg
or
in
into
mov
xchg
sub
inc
lods
pop
clc
cmp
int
cmpsb
shr
sti
jg
lods
add
aam
lahf
inc
xor
inc
push
xor
sub
ljmp
or
sarb
or
jae
xchg
movsl
xor
dec
mov
mov
scas
shll
imul
lahf
sbb
jns
rcl
inc
adc
inc
enter
test
jnp
insb
mov
xchg
bound
ss
scas
or
sarb
test
jp
movsb
pop
mov
mov
jge
sti
inc
push
pop
sbb
sub
mov
popa
jne
test
sub
in
loope
add
fdivrs
negb
dec
mov
pusha
shrl
xchg
pop
sub
lock
cmpsb
push
ret
xchg
xor
xchg
subb
int
repnz
push
daa
aam
or
sub
je
out
hlt
push
lods
mov
mov
int3
ret
xchg
pop
xor
push
lods
inc
or
push
pop
or
loope,pt
pushf
in
into
popf
lret
enter
inc
pop
loop
arpl
ja
dec
or
rorl
lea
mov
or
mov
sub
sub
cmp
pop
aas
cmpsb
xchg
inc
inc
lds
mov
gs
data16
inc
jmp
les
cltd
mov
jo
inc
clc
or
imul
lret
adc
sti
ret
jge
push
and
sub
pop
dec
dec
and
lds
pop
push
xor
xchg
divb
mov
mov
outsl
out
repnz
cld
and
js
sti
cmc
pop
mov
cmpsb
xor
dec
ret
pop
xor
pop
ret
cmp
mov
sbb
fcomip
out
cli
lock
jp
cmpb
mov
in
xor
mov
ljmp
dec
adc
adc
sub
push
jmp
mov
push
into
lea
pushf
dec
popa
sub
adc
inc
and
jmp
add
push
loop
bnd
cli
call
mov
decb
divb
or
mov
insb
jmp
mov
imul
pop
cwtl
arpl
insl
movsl
mov
jecxz
fcoms
mov
ret
bound
pusha
xchg
push
sbb
jb
fstps
and
xchg
popf
push
clc
lahf
clc
push
sub
jo
dec
lret
xlat
inc
mov
in
add
pop
cmc
imul
das
push
push
inc
xchg
dec
sbb
jo
ficoms
or
dec
in
jl
sbb
pop
push
mov
and
fcompl
mov
lea
ds
pushf
imul
mov
jp
addr16
fldl
bound
mov
jb
out
fmull
mov
lea
pop
out
sub
cmp
dec
insl
or
es
insb
mov
shl
and
push
rclb
cld
cmp
in
jne
mov
mov
sub
cmp
mov
mov
sub
mov
loope
sbb
fdiv
pop
and
mov
xchg
xchg
cmp
jp
cmc
cs
adc
xor
push
iret
sbb
pop
aad
hlt
jmp
in
push
dec
jb
cmpsl
inc
and
jg
lock
cwtl
or
add
xor
jo
fsts
sbb
pop
pushl
xor
adc
repnz
mov
and
sub
in
mov
data16
test
loop
iret
movl
mov
in
lds
mov
cmp
rorb
imul
loope
mov
sub
jmp
arpl
mov
xchg
push
dec
fdivl
or
inc
pop
and
jbe
mov
xchg
push
cmp
adc
in
push
loope
je
sbb
sub
mov
mov
mov
repz
xor
ret
sbb
in
test
mov
or
movsl
jl
out
xchg
shll
in
xor
jle
aad
sbb
mov
sbb
mov
frstor
pop
xor
sub
xor
aad
fsubs
fdivrs
sub
add
js
arpl
js
pop
pop
cmp
arpl
xchg
sbb
push
sbb
movsb
sub
cmp
test
push
push
das
dec
mov
or
das
in
scas
loop
pop
mov
mov
into
test
mov
pop
jno
ds
mov
push
pushf
pop
lock
xchg
add
ficomps
shl
mov
les
jmp
mov
loope
addl
icebp
and
push
mov
push
mov
and
imul
push
mov
add
xchg
fildll
or
inc
in
popa
and
in
arpl
mov
jmp
lahf
inc
cmp
loop
js
cmp
sub
lods
mov
lods
insb
fldl
pop
push
outsb
push
in
jmp
in
xor
stc
sub
rcll
ja
es
jp
fnstcw
enter
lods
mov
out
das
mov
xor
push
hlt
mov
roll
jo
ficompl
cmpl
cmpsl
cld
lds
cmc
mov
je
jns
pop
imul
rcrl
sbb
mov
nop
pop
inc
popa
shrl
sub
cmc
mov
imul
in
push
jno
stc
rclb
lahf
cwtl
jg
lock
push
repnz
stos
mov
and
pop
inc
xchg
xor
lea
bound
ljmp
fwait
repnz
cwtl
mov
mov
ja
mov
popa
jae
dec
sbb
shlb
hlt
add
adc
fldt
nop
cmp
xchg
nop
fimull
cs
scas
lds
in
sub
lahf
mov
and
bound
cmp
das
in
mov
pushf
xchg
data16
das
rcr
pop
out
add
shrb
call
mov
imul
xchg
mov
and
insl
out
rorl
sub
notl
xchg
pop
or
xor
jno
push
loope
sub
lret
push
int
and
and
fcoms
and
add
sub
or
loop
push
ljmp
fldl
jmp
and
push
or
push
in
xor
mov
ja
das
jo
mov
push
lock
iret
xchg
sub
arpl
jno
test
mov
pop
pop
in
mov
lea
pop
inc
adc
sbb
push
jecxz
js
jg
xorl
pop
or
sub
pop
pop
mov
mov
sub
jae
pop
lds
icebp
mov
inc
pop
sub
push
outsb
in
jno
sub
xchg
sub
add
cs
push
xchg
inc
xor
cmp
fwait
ljmp
cmp
shll
sub
lods
fdivrl
loope
enter
testl
je
and
cmp
std
nop
cmc
xor
daa
inc
push
or
jne
imul
test
jae
jbe
aad
fucomip
insl
jbe
gs
jne
or
mov
cltd
aas
push
shlb
subb
mov
pop
xchg
sbb
push
jbe
lret
jle
mov
bound
orb
pop
fbstp
mov
sbb
jle
adc
arpl
nop
dec
das
callw
sub
jl
into
lahf
int
test
sub
adc
mov
push
push
or
push
dec
sbbb
popa
xchg
mov
lea
clc
mov
push
sahf
xchg
int
jae
arpl
sbb
test
out
sbb
aad
enter
push
add
lods
leave
or
jl
mov
push
and
xchg
inc
sahf
pop
jo
push
xor
adc
lea
popa
cmpsl
mov
inc
cli
jnp
inc
inc
lods
mov
dec
rcrb
cmc
jno
mov
cmp
dec
inc
and
inc
sub
out
aaa
leave
xor
sub
movsl
add
push
sub
fwait
mov
jecxz
push
xchg
cmc
aam
loop
adc
push
and
mov
lock
push
mov
adc
xorl
jno
js
aad
or
add
xchg
dec
sti
loop
cmpsl
testl
mov
fsub
cmpsb
mov
aam
nop
mov
inc
jmp
ficomps
insb
mov
in
popf
std
dec
sti
sbb
or
mov
xor
movsb
aaa
jae
jno
rcrb
ror
mov
fildll
test
imul
hlt
xor
mov
lret
dec
xor
jae
sbb
push
mov
dec
mov
xchg
adc
or
or
pop
pop
push
mov
jae
pop
mov
push
add
jecxz
xorl
jbe
clc
arpl
cmpsb
imul
mov
and
jbe
add
add
arpl
adc
popa
imul
xchg
mov
divb
push
xor
orl
cli
mov
cmc
pop
sahf
and
and
orl
jl
pop
xor
mov
lcall
and
insl
imul
sbb
sub
push
jmp
pusha
lea
cmp
pop
dec
dec
xor
or
test
cli
xchg
pop
je
fdivs
fisttpl
lock
cs
jo
idivl
jno
push
dec
dec
push
dec
add
xor
xorl
lock
pop
mov
scas
lods
filds
andb
jne
aam
cmpsl
push
ret
je
pxor
sub
and
push
test
clc
xor
lods
popf
or
je
hlt
icebp
dec
fcmovnbe
and
add
sahf
lea
mov
imul
mov
out
jnp
or
ds
test
mov
jae
ss
add
pop
pop
mov
add
push
sub
lds
dec
dec
in
xor
xor
jo
jg
loopw
mov
je
inc
fisttpl
push
adc
adc
xchg
mov
inc
jo
push
cwtl
rorb
icebp
sti
movsl
add
xlat
xchg
mov
or
jno
pop
lea
out
xchg
aas
rolb
or
push
adc
mov
les
aas
pop
jle
addr16
or
arpl
stos
jg
dec
cmp
push
push
popf
movsl
or
inc
rcrb
sbb
sbb
int
aad
sub
cwtl
insl
jns
inc
in
push
mov
push
imulb
cmp
movsb
call
dec
mov
lea
sbb
rorl
fists
push
dec
pop
add
jmp
cmc
imul
or
mov
push
ret
inc
jne
adc
and
xor
shrl
jecxz
xor
push
movsl
mov
mov
or
jns
fists
cmpsl
outsb
pop
in
sbbl
adc
cmp
lret
fs
out
fstps
lods
mov
sub
mov
sbb
add
jae
jle
test
dec
sbb
sbbb
adc
pop
outsl
jno
es
stos
and
jo
movsl
push
and
mov
test
inc
es
mov
xor
into
cli
jbe
push
mov
ror
insb
sbb
pop
cmpl
inc
lock
test
into
in
out
in
ljmp
addr16
pop
popa
in
sbb
xchg
enter
mov
into
cs
xchg
loop
pop
xlat
mov
jecxz
mov
in
mov
sub
push
insl
xchg
mov
xchg
nop
dec
jmp
icebp
popf
dec
icebp
test
jl
dec
add
or
jle
cmp
dec
in
push
leave
jg
or
jo
mov
xchg
adc
pop
push
jl
sub
dec
jg
or
test
push
in
sti
push
inc
mull
ret
repnz
je
mov
gs
dec
jmp
test
popf
sbb
pause
inc
cli
dec
jo
push
mov
loope
std
cld
mov
sub
and
push
sahf
fcompl
daa
aad
mov
sahf
mulb
jl
divb
mov
lahf
ja
call
jae
mov
pop
adc
fldt
gs
dec
idivb
sbb
cmp
fisttps
test
and
xor
fadds
addb
cli
test
ja
imul
imul
hlt
jmp
cmp
pop
xchg
add
mov
cmp
imulb
and
loop
jne
sbb
pop
sbb
ret
vpor
add
mov
insl
je
mov
test
push
outsl
push
sub
in
bound
popa
mov
dec
sbb
arpl
mov
mov
and
in
arpl
shlb
insl
adc
shl
or
lret
cmc
mov
xchg
sbb
hlt
fcmove
jg
sub
xor
lds
loope
std
xchg
ljmp
ljmp
xchg
xor
ret
sbb
and
popa
push
negl
sub
xchg
jb
enter
jl
nop
inc
inc
cmp
movsl
and
push
and
mov
lods
test
jne
xchg
repnz
mov
call
ja
xor
inc
das
jge
lahf
sub
dec
lods
scas
lods
inc
scas
bound
jo
clc
xchg
lods
pop
dec
pop
xor
je
out
fsts
jbe
lock
and
dec
xor
or
xchg
sub
sub
sbb
sub
jo
cli
nop
les
std
dec
std
inc
sbb
test
hlt
xchg
nop
aaa
in
frstor
es
jno
jmp
stos
call
andl
sar
lock
in
sub
jg
push
cli
sub
les
mov
sbb
pop
push
ret
jle
in
xor
xlat
bound
sahf
cltd
cmp
sbb
repnz
testb
dec
dec
daa
sub
mov
fmull
cmpsl
jl
pop
mov
orl
mov
sahf
nop
out
sbb
loope
xorb
xchg
add
mov
enter
test
mov
mov
inc
lea
sbb
inc
cmp
cmp
dec
pop
mov
adc
in
jl
aaa
arpl
mov
push
das
out
and
es
xchg
inc
adc
movsl
out
insb
aad
mov
arpl
inc
loopne
dec
push
push
cmc
test
hlt
mov
jo
jae
ret
dec
inc
enter
jns
push
js
roll
inc
popf
clc
inc
cmp
stos
out
or
dec
mov
bound
push
xor
in
in
imul
rep
sub
sub
enter
push
outsl
push
adc
adc
dec
ja
xor
jg
jno
push
ds
fbld
inc
cmp
inc
lahf
jno
in
daa
xor
sahf
ja
enter
popa
and
lret
out
dec
mov
mov
dec
cmp
movsb
mov
and
mov
adc
mov
insl
lret
cs
mov
xchg
mov
push
and
push
and
sbb
xchg
xchg
lret
cmp
jno
jle
addb
shll
xor
or
sbb
and
sbb
ror
add
into
pop
into
dec
mov
mov
ss
or
and
or
add
and
popa
xchg
sub
addr16
adc
aad
fbstp
mov
and
repnz
ret
lahf
test
int3
into
pushf
jl
mov
add
inc
adc
hlt
dec
jns
push
mov
adc
jecxz
mov
ljmp
or
mov
xchg
into
or
cmp
xchg
sti
add
sti
jae
mov
inc
inc
cmp
iret
mov
push
sub
lea
adc
int
push
mov
jno
inc
sbb
adc
push
jle
imul
or
lea
mov
push
filds
pusha
xor
inc
dec
aam
jnp
sub
or
imul
imul
gs
das
enter
mov
lahf
lods
mov
jae
and
mov
xchg
inc
push
in
add
loopne
gs
add
stos
sub
push
add
sbb
pop
insl
outsl
pop
arpl
jae
cmpsb
hlt
add
adc
rolb
cli
lcall
pop
insb
lea
ds
nop
push
pop
adc
mov
in
dec
in
or
sbb
out
pop
dec
cld
lea
pop
adcl
es
sub
inc
fucomp
movsb
cmp
repz
adc
sbbl
mov
bound
pop
jne
lds
test
push
mov
leave
int3
push
repnz
clc
push
jne
jae
and
pop
mov
sub
clc
push
push
imulb
adc
pop
je
or
and
mov
mov
aam
mov
dec
fidivs
bound
cld
jmp
outsb
test
jb
bound
das
icebp
mov
daa
sub
pop
popa
fbld
clc
shlb
push
fstl
daa
add
sub
sbb
notb
sub
js
out
lock
popf
sub
and
mov
jge
mov
es
loop
imul
lahf
inc
adc
inc
sub
sub
mov
pop
and
aam
xchg
rcr
xor
data16
and
and
sbb
js
stos
jg
dec
and
les
sbb
jne
loop
cmp
ljmp
push
imul
or
outsb
ja
push
shrl
push
lock
movsb
ljmp
sub
xchg
sbb
fadd
sub
in
sub
inc
imul
dec
pop
stc
mov
jne
lods
add
xor
out
bound
leave
pop
sbb
xrelease
lods
dec
mov
in
dec
lds
push
sahf
mov
push
mov
movsl
push
and
into
jbe
dec
sbb
xchg
sbb
fimull
subb
fisttpll
xlat
xchg
sbb
sub
xchg
repnz
out
xor
push
xchg
ds
mov
dec
sbb
insb
sbb
roll
js
inc
ret
inc
dec
inc
daa
aad
or
repnz
jecxz
lea
mov
aaa
lea
movsl
dec
and
fucomp
movsb
or
mov
jae
mov
adc
jge
sbb
jecxz
mov
xchg
stc
shl
dec
pop
mov
cmpsb
sbb
jecxz
loope
in
and
imul
mov
pop
add
push
pop
es
icebp
sar
daa
test
mov
dec
jnp
mov
stc
inc
idivl
jl
and
loop
loop
fists
xchg
loopne
xchg
out
xchg
dec
dec
pop
enter
or
rorl
repnz
insl
mov
test
mov
lds
out
and
push
out
pop
enter
mov
in
fldcw
inc
movsl
js
jae
movsb
fistl
xor
and
pop
mov
mov
cmc
pop
dec
mov
mov
adc
xor
jbe
mov
and
mov
cmp
ds
das
dec
fisttps
mov
dec
push
sub
sbb
adc
push
lea
xchg
lret
add
pop
insb
cmp
mov
negb
std
xchg
aad
inc
xchg
in
cltd
cmp
fadds
dec
pop
insb
pusha
dec
dec
jb
or
lock
out
pop
pop
mov
daa
hlt
xchg
test
add
fcomps
roll
add
aam
and
jg
cmp
cmc
shrb
gs
dec
push
loop
test
inc
xor
sbb
leave
hlt
icebp
sub
loope
int
shll
push
mov
mov
xor
cltd
shrl
shl
push
jmp
daa
add
mov
std
insl
cmc
mov
or
and
mov
and
pop
out
cmp
sar
out
pushf
jle
adc
xor
xchg
stos
push
xor
dec
cmc
cld
imul
mov
in
rorb
inc
andb
in
add
loopne
xchg
mov
push
dec
xor
jmp
lea
rorb
call
or
mov
mov
inc
in
out
push
shll
sar
cmc
dec
mov
dec
jecxz,pt
lret
ds
mov
imul
test
pop
jb
xlat
in
aam
sub
imul
test
jnp
jl
sub
call
inc
sub
test
xor
adc
js
faddp
mov
dec
mov
lret
imul
jecxz
pop
and
dec
sbb
pop
rcrl
mov
movl
mov
fisubs
add
cld
mov
or
mov
and
mov
xor
lock
jno
xor
or
popf
jb
xchg
pop
jmp
adc
inc
insb
cltd
enter
mov
daa
push
fmulp
in
add
out
jge
push
insb
sbb
sbb
push
mov
inc
add
sbb
fdivrs
push
xor
aaa
movsl
xor
cmpsb
repnz
les
jo
sub
add
dec
jns
mov
test
sbb
xor
mov
dec
lds
sbb
lea
pop
mov
lret
adc
sti
adc
sub
fmull
icebp
roll
mov
sbb
int3
inc
outsl
movzwl
or
repnz
lahf
lds
inc
lret
nop
dec
shll
dec
pop
jnp
mov
stos
or
jecxz
std
cmp
jae
pop
dec
xor
cmp
mov
or
xor
add
int
xor
push
jge
flds
or
sbb
iret
sub
gs
into
xchg
jns
sarb
add
cmp
lods
and
fdivrs
lret
cs
mov
ja
in
sbb
xchg
loopew
mov
jbe
stos
mov
pop
mov
sahf
pop
lea
sub
in
xchg
push
pusha
fadds
fisttpll
or
mov
cmp
adc
sbb
lods
sarl
push
pop
rol
sti
sub
frstor
mov
call
mov
adc
inc
arpl
cmp
push
xor
jg
hlt
or
sbb
sahf
sub
sbb
sbb
insb
mov
cmp
inc
pop
xchg
cmp
fsts
inc
jb
mov
sbb
decb
inc
insb
jns
lea
ret
jge
xchg
jae
or
mov
dec
mov
push
sub
cmp
xor
jnp
add
sbb
adc
add
sbb
repz
mov
jl
sbb
fists
mov
lock
jg
testl
jns
outsl
icebp
dec
pop
inc
cmp
mov
lea
push
sbb
mov
xor
mov
daa
iret
sbb
pop
sbb
mov
mov
and
pop
lea
dec
test
mov
adc
dec
pop
fnstcw
lea
xchg
and
ljmp
or
mov
inc
ja
adc
fsubrl
dec
xchg
rcrb
call
lahf
hlt
mov
jns
push
xchg
mov
xor
add
in
jno
push
notb
mov
les
shlb
insl
gs
out
jp
stos
push
or
pop
dec
int3
insb
xchg
movsl
mov
and
fwait
or
sub
mov
inc
fisubrl
mov
or
daa
mov
inc
adc
sbb
mov
clc
mov
mov
add
rcrb
jp
xor
je
in
popa
sbb
and
fnsetpm(287
adc
and
lea
cmp
ss
nop
or
and
add
jo
cmp
fnstcw
xor
es
sub
adc
movsb
push
fistpll
jae
in
mov
mov
mov
jno
insb
int3
dec
pop
jno
loopne
push
sarl
dec
pop
adc
or
add
push
popf
cmp
add
xor
pop
mov
notb
loop
lods
or
testl
or
xchg
xor
scas
push
jns
insb
and
add
daa
in
icebp
xchg
xor
js
inc
inc
sbb
lcall
mov
fwait
adc
aaa
sbb
mov
testb
push
or
pop
mov
pop
xchg
lock
adc
xor
mov
mov
ret
movsb
lea
insb
out
fistpl
fnstcw
mov
push
mov
in
insl
sbb
movsl
andl
fadds
pop
xor
pop
jb
add
jno
int
arpl
fbld
sub
icebp
xor
out
and
fs
loop
cmc
loope
sub
outsl
call
in
int3
push
int3
push
cmp
in
pop
ret
xor
lods
xchg
mov
mov
mov
nop
adc
inc
dec
ss
out
shl
stc
dec
xchg
jl
icebp
sti
jnp
adc
inc
dec
mov
or
mov
mov
aaa
or
fwait
sbb
jl
mov
dec
mov
jg
jnp
mov
mov
outsl
in
lret
outsb
push
jne
mov
push
fnsave
lock
push
loop
push
mov
shl
repnz
mov
push
pusha
fistpl
arpl
in
xor
mov
movsb
mov
dec
pop
xchg
fsubr
mov
nop
pusha
dec
inc
nop
sti
daa
push
xor
pop
movsl
cmpsl
jmp
mov
mov
push
sub
aas
jmp
mov
xor
loop
push
sbb
and
icebp
push
sub
jg
sbb
fprem
bound
pop
into
lcall
inc
in
hlt
mov
lea
dec
lods
enter
pop
inc
stos
bound
popa
and
and
and
sbb
pop
es
in
jne
shlb
mov
jo
gs
ljmp
stos
cmp
sub
mov
js
aaa
xchg
fnstenv
ret
and
shlb
stc
mov
xchg
adc
cmp
mov
cmp
pop
add
dec
fbstp
popf
leave
jecxz
dec
je
fisubs
and
push
inc
inc
jecxz
dec
bound
addr16
test
jo
mov
xchg
cmp
ljmp
mov
ljmp
xorb
cmp
dec
jbe
mov
inc
cmp
jae
jecxz
jnp
sbb
cmp
out
add
jg
mov
lcall
ret
call
mov
in
subl
inc
jp
xchg
dec
pop
or
popf
and
fwait
push
lock
cmp
dec
sbb
push
icebp
sbb
mov
out
or
sbb
mov
push
aad
pop
dec
inc
pushf
cmc
in
sarl
xchg
aaa
mov
mov
inc
js
pop
cli
incb
lcall
out
jo
insl
cmp
mov
adc
ss
mov
inc
je
mov
adc
negb
imul
aad
inc
lea
jnp
and
xor
aas
arpl
leave
inc
ficomps
loop
stc
das
das
push
loop
xchg
call
insl
adc
mov
mov
in
jle
aam
les
cmc
jg
add
dec
pusha
into
stc
xchg
cs
cmp
jle
in
xchg
mov
loope
add
jecxz
adc
mov
push
ljmp
sub
mov
xchg
mov
xor
sbb
test
pop
push
adc
test
mov
mov
fdivl
xor
cltd
hlt
in
sbb
mov
call
lods
sarl
mov
lea
repz
sbb
jne
sbb
dec
inc
mov
es
shl
gs
and
sarb
pop
pop
mov
push
push
add
aad
fcom
jns
add
push
pop
cmp
add
fucomi
add
lahf
mov
xor
xchg
sbbb
pop
ljmp
push
jne
dec
movsb
fs
and
iret
or
mov
mov
mov
push
insl
push
xor
fistps
dec
adc
fcomps
test
fwait
xor
sbb
and
adc
inc
and
repnz
arpl
das
js
daa
call
in
ja
push
jne
mov
pop
pusha
mov
int
ss
mov
pop
push
mov
add
or
sbb
sti
pop
mov
jle
mov
jae
sub
cmp
inc
repnz
xor
pop
sub
mov
fcomps
and
mov
adc
sahf
mov
or
loop
dec
pop
sbb
lock
lret
sbb
repz
mov
dec
xor
jo
addb
adc
fldcw
daa
mov
std
xor
add
jb
jg
push
rclb
enter
lea
incb
frstor
xor
xor
xor
test
int
dec
loopne
jb
adc
lock
xchg
das
lea
clc
scas
mov
fwait
push
jp
xchg
and
aas
push
and
cmp
jle
test
mov
adc
adc
loop
inc
mov
cmp
pop
add
in
mov
jne
lds
jge
insb
dec
jnp
repz
and
cli
xchg
jp
mov
xchg
rclb
pop
mov
stc
mov
pop
cmp
cwtl
dec
or
lea
in
ss
shlb
jg
lods
add
xor
hlt
mov
popf
scas
mov
pop
jge
or
mul
mov
mov
lret
and
or
mov
in
xchg
add
stos
mov
mov
in
cmp
jns
shll
mov
testb
pop
faddl
inc
faddp
inc
call
sbb
shlb
lahf
ljmp
add
imul
pop
lea
adc
into
sahf
jo
and
jge
icebp
push
lea
ja
mov
mov
jmp
stos
jno
pop
xor
jno
insl
cmp
daa
pushl
sub
mov
pop
dec
cs
imul
jo
cltd
fwait
mov
int
cmp
push
sub
pop
mov
in
imul
xor
lods
into
sub
in
stos
mov
xchg
jmp
adc
jb
mov
icebp
jp
outsb
or
and
insb
mov
or
movsl
mov
jg
fcomip
lea
dec
sar
dec
cmp
xor
hlt
or
dec
jmp
cs
clc
push
loop
stc
lds
std
add
mov
lods
les
pop
sbb
xchg
imul
and
push
inc
dec
hlt
in
or
aam
orb
loop
cmp
pop
out
fs
pusha
movsl
lret
jle
pop
lea
cmp
iret
daa
and
jl
inc
jno
push
mov
jae
loopne
pusha
add
out
sbb
jae
iret
bound
or
mov
lahf
and
xchg
sbb
ds
hlt
adc
pop
lea
mov
inc
inc
repz
scas
and
lea
ret
pop
mov
cmp
mov
iret
jae
mov
mov
or
push
stos
mov
sub
pushf
and
sub
dec
fbstp
gs
movl
cmp
je
or
add
lea
and
mov
and
inc
mov
push
addr16
fsubrp
dec
ret
cmpl
mov
lock
push
or
out
imul
jmp
decl
adc
loopne
movsl
mov
cmp
mov
xchg
mov
in
test
shll
mov
fwait
mov
mov
pop
cmpsb
cmc
gs
pop
cltd
inc
xchg
cli
or
mov
xchg
cmp
gs
mov
adc
js
mov
icebp
and
mov
push
jo
mov
mov
gs
mov
fs
mov
loopne
and
push
pop
or
jmp
dec
cmc
mov
popf
adc
aaa
daa
out
in
xlat
xor
lods
cwtl
out
ds
in
fincstp
movsb
jb
mov
addb
xchg
mov
jns
clc
push
sarb
jl
xlat
dec
dec
mov
aaa
cmpsb
mov
in
dec
xlat
or
out
push
ret
xchg
cmp
cwtl
mov
jmp
aad
faddl
inc
pop
stos
ret
sub
fdivrl
outsb
jmp
les
adc
jns
ret
and
push
das
fs
mov
fwait
sbb
arpl
mov
jb
sub
das
or
jo
jmp
jg
and
lods
xor
mov
pop
and
mov
and
aaa
push
in
outsl
mov
lcall
mov
push
sbb
adc
jnp
std
neg
hlt
bound
sarl
sub
dec
scas
mov
scas
pop
cli
mov
sbb
ja
movsl
aad
out
bound
lahf
pop
xchg
clc
pop
mov
sbb
mov
or
daa
push
push
loopne
lods
nop
cmp
xchg
repnz
adc
into
dec
fstpl
jge
dec
mov
fdivr
sub
fidivrs
pop
in
jae
adc
stos
jmp
pop
and
add
or
mov
adc
sbb
popf
dec
jg
insb
mov
or
jne
in
fstps
mov
incl
popf
mov
pop
sarb
mov
in
sbb
dec
dec
adc
and
pop
or
dec
in
cmp
push
mov
loop
xor
adc
insl
mov
or
lea
mov
dec
mov
jb
imul
cmp
jne
movsl
lea
out
test
push
lea
push
shl
outsb
adc
adc
in
jne
jb
dec
jns
or
or
ja
push
pop
cmp
loop
inc
arpl
add
out
gs
adc
loop
and
shr
pop
jb
xor
xorb
ret
cld
push
jmp
mov
fwait
push
insb
movl
sub
vpabsw
hlt
adc
add
iret
mov
and
jecxz
popa
stos
or
pop
leave
sub
lods
pushf
cltd
loopne
insb
iret
in
jb
push
in
nop
mov
leave
adc
call
sbb
adc
pop
push
mov
inc
jno
mov
addr16
in
call
push
mov
ljmp
dec
pop
inc
sub
inc
clc
out
xchg
out
jae
or
add
mov
and
repnz
cmp
in
or
dec
mov
sahf
mov
ss
ljmp
lea
sbb
sbb
jl
mov
and
js
sti
inc
mov
rcl
jbe
int
cmp
lock
test
cltd
mov
insb
or
mov
mov
push
ljmp
inc
push
add
outsb
xor
rcr
imul
stc
add
popl
ret
xor
cmp
pop
mov
pop
call
adcl
and
dec
insl
mov
adc
pop
shll
fwait
lods
pusha
das
pushf
mov
ret
mov
adc
sarl
pusha
loop
xor
jae
test
je
inc
fnsave
fnsave
hlt
fwait
aad
mov
dec
sub
gs
imul
fwait
ds
dec
cmp
sub
out
mov
push
add
push
push
sti
mov
mov
fcompl
jo
push
pushf
jb
push
ja
js
xor
mov
pop
mov
ret
aas
jne
mov
mov
push
mov
add
outsl
xorb
sub
pop
pushf
cmp
pop
jne
sti
ljmp
nop
pop
push
test
jge
jmp
lret
fcoms
jl
sub
outsl
mov
mov
xor
sub
cld
cli
dec
daa
jno
lods
in
sub
push
scas
mov
xor
sahf
pop
int3
mov
inc
cmpsl
adc
lahf
mov
mov
bndstx
enter
mov
dec
pop
aam
cli
inc
or
das
or
push
jns
hlt
or
adc
mov
pop
loopw
sub
inc
test
test
out
pop
adc
fcmovbe
and
jne
xchg
jae
dec
jbe
movsb
push
popa
xor
xor
cwtl
jae
or
js
test
push
add
dec
mov
cmc
mov
adc
aaa
xor
inc
fcomps
mov
int3
in
jmp
inc
repz
cmpsl
loop
and
ja
dec
or
and
negb
loope
mov
or
xchg
jle
adc
mov
mov
mov
stos
stos
and
jno
adc
and
mov
sbb
lea
clc
clc
decb
lret
dec
add
xor
jno
mov
arpl
nop
xorb
or
add
cmp
inc
lods
or
int
cwtl
sub
sbb
xchg
std
push
dec
nop
sub
push
xor
mov
and
imul
pop
into
push
stc
inc
andb
mov
out
sti
es
jnp
mov
movsb
inc
pop
dec
addl
outsl
lea
dec
mov
lds
mov
inc
mov
adc
mov
jmp
imul
xchg
cmp
add
pop
bound
int3
repnz
cmpsl
lret
push
adc
push
mov
mov
ret
inc
in
loope
add
mov
clc
std
lods
add
popa
jp
cltd
xchg
and
mov
imul
mov
popa
sbb
push
inc
leave
dec
ljmp
fsub
das
fistps
pop
or
testb
ljmp
mov
dec
mov
mov
mov
scas
or
loop
mov
gs
enter
push
pop
and
cs
in
add
dec
pop
push
lods
sbb
or
xchg
imul
arpl
loopne
cwtl
inc
gs
ljmp
xlat
and
jmp
mov
ds
pushf
out
das
in
mov
cmpsb
mov
mov
or
lods
inc
mov
xor
sub
mov
jnp
shrb
loope
mov
sbb
or
cld
add
mov
cwtl
aas
sub
loope
push
aam
out
call
and
pushf
mov
mov
jg
mov
icebp
xchg
push
jmp
out
in
mov
xchg
inc
xor
jbe
fisubrs
aad
dec
sub
inc
gs
sub
gs
inc
add
sti
mov
arpl
push
scas
adc
jbe
lcall
test
shll
add
xor
lahf
adc
fwait
movsb
int
clc
and
pop
jle
sarb
jecxz
jg
hlt
xchg
jmp
daa
js
mov
add
adc
aam
push
fcomp
xor
mov
lea
mov
mov
or
mov
xchg
lcall
arpl
cwtl
mov
jae
mov
inc
add
adc
rcrb
mov
loope
rcll
push
push
cld
add
jecxz
mov
xchg
je
orb
popa
push
js
je
jb
pop
mov
cld
mov
xchg
dec
mov
inc
clc
mov
aad
testb
call
cmp
in
cmp
adc
fildll
mov
mov
adc
jb
xchg
sub
enter
data16
and
es
lea
jnp
pop
adc
fldt
clc
inc
ret
xor
xlat
mov
lods
jo
jae
mov
mov
push
jbe
mov
es
fidivs
or
ss
mov
pop
jo
mov
rcrl
loopne
xchg
sbb
mov
pusha
in
xchg
es
mov
mov
xorb
fsub
ljmp
movsb
cmp
stos
rcll
enter
mov
mov
xor
std
int
jl
dec
pop
pop
bnd
sahf
or
push
sahf
pushl
in
mov
loopne
jmp
xor
ds
out
mov
mov
scas
inc
sub
sbbl
cmp
es
enter
mov
mov
rolb
jl
push
and
bound
outsl
pop
imul
or
adc
pop
and
sbb
mov
mov
and
cmp
mov
and
cmp
fildl
xchg
sub
jl
adc
push
jno
js
adc
leave
inc
fmull
or
das
bnd
push
stos
ficoms
in
push
ljmp
loop
lods
mov
cltd
xlat
mov
mov
adc
dec
inc
xchg
push
fiadds
sub
sbbl
sub
insl
icebp
push
add
mov
pushf
mov
mov
pushf
and
mov
adc
iret
mov
fsubs
clc
ja
jle
push
popf
in
jno
mull
push
adc
mov
popa
lods
and
hlt
fdivrl
fcmovb
or
dec
or
imul
push
jno
jns
adc
mov
jo
mov
in
and
or
jp
insb
jge
pop
inc
enter
add
mov
in
jne
cmpsl
xchg
sbb
cmp
push
sub
add
nop
dec
hlt
icebp
mov
inc
and
push
sbb
adc
xchg
mov
dec
sbb
sete
push
pusha
jno
or
xor
adc
xor
bound
pop
xchg
xor
cwtl
lods
mov
jo
mov
test
std
xor
inc
jb
jbe
rclb
leave
shlb
mov
mov
or
push
subl
jno
sub
inc
lea
aam
push
sbb
adc
das
push
fstps
icebp
cmc
dec
and
shll
push
insl
repz
popa
stc
xchg
mov
in
jecxz
out
in
mov
inc
jns
cmpsb
and
lea
arpl
out
filds
in
ret
pusha
ss
ljmp
mov
sub
adc
push
or
and
cmp
sbb
adc
cmp
and
dec
pop
fldenv
test
adc
stc
push
insb
lock
pop
pop
push
inc
call
or
dec
fisttpll
cmp
aad
jge
jno
push
adc
xorl
in
mov
out
cmp
lock
loope
movsb
ds
mov
fists
cmp
shrb
mov
inc
xchg
pop
or
dec
cld
sbb
inc
imul
xor
rol
adc
xchg
inc
push
or
imul
xor
dec
push
loop
sub
lods
mov
mov
mov
int
mov
mov
sub
mov
jb
mov
ja
psraw
int3
lcall
inc
int3
sbb
push
jno
fdivl
aad
mov
pop
jmp
sbb
xor
inc
out
pop
jmp
dec
insb
insl
lea
pop
repnz
xor
jne
jmp
adc
cmpsb
iret
adc
sub
dec
mov
and
inc
or
push
xor
arpl
pop
xchg
in
roll
addb
loop
xchg
in
pop
and
arpl
js
mov
arpl
icebp
adc
mov
and
jp
dec
push
sti
in
dec
mov
mov
mov
hlt
or
daa
sbb
xor
in
sub
popf
pop
mov
lret
xchg
and
and
mov
add
jns
arpl
sub
and
lock
xchg
shl
pop
lahf
pusha
insb
fstpt
test
and
mov
jb
xor
sbb
dec
inc
jno
mov
loope
mov
mov
cmpsb
xor
lock
adc
fwait
iret
daa
and
mov
in
jge
push
jno
imull
push
or
test
pusha
dec
lret
pop
mov
call
je
in
fidivl
fcoms
iret
xchg
mov
cld
mov
sbb
inc
push
inc
insl
add
sti
cmp
loope
and
cmp
lret
mov
daa
je
mov
xor
enter
stc
fst
pop
cmp
mov
xchg
push
and
jmp
out
cwtl
push
xor
pop
lea
xchg
jbe
dec
xor
jne
out
data16
mov
movsb
sbb
jmp
mov
mov
lods
addr16
je
fs
xor
testl
or
push
loope
and
inc
jge
fbstp
mov
adc
push
xchg
pop
je
dec
pop
or
sarb
or
sahf
daa
clc
lds
and
out
xchg
loopne
mov
loope
cmpsl
mov
adc
xor
negb
add
push
dec
pushf
sbb
inc
jg
sbb
insb
mov
push
cld
stos
push
adc
xchg
mov
mov
xor
js
push
lea
xor
std
mov
cmp
gs
xor
push
jg
in
cli
out
jmp
cltd
dec
pop
data16
lahf
mov
fcomip
jns
mov
lret
rcrb
jo
dec
push
and
out
pusha
in
mov
push
jl
push
jg
mov
cltd
mov
pusha
mov
ficoml
mov
fwait
lods
pop
mov
dec
fidivrl
xor
rcrl
lods
stos
hlt
scas
aas
cmpsb
mov
mov
fnstsw
daa
lret
popa
es
outsl
fistpl
cmp
mov
and
jb
cmp
pop
fsubrl
sbb
pop
stos
shlb
je
lock
mov
gs
inc
jae
adc
shlb
lea
and
push
sub
call
xchg
fsubr
dec
push
jno
push
imul
outsl
icebp
xchg
aas
rolb
jg
or
mov
xor
sbb
out
test
fisubrs
lods
and
lock
mov
out
or
adc
icebp
loope
cmp
sbb
jae
ljmp
xchg
dec
fsubrl
mov
jb
out
out
adc
add
jle
dec
jge
mov
notb
dec
movsb
cmpsl
adc
in
xchg
adc
insl
lahf
inc
mov
test
jne
add
push
lea
sahf
pushf
enter
sub
icebp
je
cmp
mov
in
jb
in
and
sub
mov
xor
ljmp
inc
inc
xor
repnz
in
and
sbb
insb
xor
mov
cli
xlat
arpl
sub
hlt
or
jmp
lock
mov
jnp
inc
lahf
daa
jnp
lea
mov
xchg
mov
or
ja
scas
and
xchg
sub
movsb
add
lds
arpl
cmc
sti
pause
addr16
and
pop
sub
outsl
dec
inc
push
xchg
dec
xchg
add
cli
out
mov
xchg
push
and
xor
call
push
addr16
add
adc
lret
popa
push
xlat
cmp
jl
xchg
fistpll
enter
sarb
shlb
sahf
cmp
test
mov
aaa
mov
repz
jno
push
jb
fstp
inc
cmp
xchg
lds
push
xor
ja
pop
sbb
inc
inc
jb
adc
dec
imul
push
popl
pop
sbb
inc
pop
outsl
lret
ljmp
add
lock
fwait
movl
mov
push
iret
add
in
pop
or
fdivrs
rcrl
outsl
cmp
pop
push
inc
aam
lea
lock
das
push
jmp
mov
xchg
or
and
push
dec
push
js
or
jl
cmp
jnp
or
outsb
sahf
sub
mov
sub
mov
pop
xlat
jnp
pop
add
add
or
fimull
cmp
add
sbb
repnz
cmp
push
mov
inc
add
xor
add
dec
movsb
repz
ja
xor
sbb
add
je
fcmovb
xchg
mov
repnz
push
in
jl
jecxz
xchg
adc
or
pop
push
bound
mov
or
add
jb
mov
mov
je
add
xor
push
imul
adc
f2xm1
lods
push
sbb
aas
jne
xor
sub
or
xchg
sbb
mov
daa
loope
movsl
xor
popa
or
cmp
xor
in
pop
xor
cltd
xor
sbb
inc
clc
jae
sbbb
or
mov
push
call
popa
jle
in
arpl
xchg
mov
out
out
jno
xchg
sub
or
or
pop
mov
add
adc
adc
iret
dec
jae
pop
mov
pop
push
js
scas
xchg
mov
lea
cmp
cli
pushl
es
in
mov
dec
repnz
cmp
inc
push
inc
mov
push
rcll
adc
jp
push
loop
jecxz,pt
add
mov
inc
clc
jae
push
adc
sti
push
js
sahf
shr
cmp
lods
sub
loope
mov
or
xchg
pop
mov
push
fistl
dec
cmp
popa
lds
loope
ja
in
mov
adc
in
xchg
in
mov
daa
ljmp
aad
sarl
scas
mov
in
push
cmpsl
int
iret
fdivl
insb
lret
and
in
clc
les
lret
adc
jmp
add
in
arpl
jno
lea
je
inc
jb
or
lock
jbe
lds
jmp
ficoml
mov
stos
sti
roll
jp
js
es
push
mov
mov
fildll
sbb
dec
or
dec
je
and
sbb
test
jno
xlat
mov
fdivs
insb
mov
scas
rcrl
or
mov
jo
jmp
and
add
mov
in
xchg
dec
loope
inc
loop
enter
lods
jp
rcrb
sub
popa
push
xchg
enter
es
ret
pop
nop
xchg
in
enter
pop
adc
ljmp
repz
roll
and
test
pop
or
xchg
pushf
nop
adc
push
mov
cmp
sbb
in
sti
mov
enter
test
fwait
dec
pop
push
lea
cmpsb
xchg
int
je
adc
sbb
aad
push
mov
jl
jb
cmp
fs
adc
out
pop
sub
jg
mov
adc
js
imul
push
fsubl
lods
imul
std
mov
nop
shl
int3
jae
jmp
cmp
jge
mov
nop
popa
test
icebp
xlat
and
lock
fbstp
ret
mov
jle
lea
in
test
push
iret
add
insb
jp
mov
fsub
jg
cld
sub
call
or
push
or
in
sbb
scas
loopne
mov
xor
mov
lea
jae
lds
lods
ja
mov
cmp
or
clc
icebp
out
int3
bound
leave
jmp
fcmovne
push
pop
inc
or
xchg
push
inc
ret
into
imul
mov
inc
testb
pop
adc
sbb
mov
loop
push
lret
lds
adc
aad
out
or
xor
aas
jno
stos
pop
push
mov
dec
rcll
mov
pop
scas
out
lods
mov
adc
push
mov
sub
addb
bound
sbb
inc
xchg
add
movhps
add
xor
movsl
and
fldt
xor
mov
jbe
divl
pusha
sub
movl
xchg
vpaddw
test
in
out
dec
xor
enter
xor
imul
inc
inc
inc
out
and
push
mov
or
in
xchg
test
lock
and
gs
xchg
stos
popa
pop
mov
xchg
xchg
xchg
cld
nop
and
stos
dec
fiaddl
ror
mov
mov
and
cmc
lds
stos
push
rorb
mov
push
lea
or
sti
cmp
jmp
jg
jecxz
cmc
leave
mov
pop
jo
sbb
shlb
cmp
or
sbb
loopne
ss
fprem1
cmp
mov
fdivrl
xor
mov
es
in
js
in
out
dec
sti
mov
repz
in
xchg
and
push
js
ja
push
lea
adc
fld
cltd
xor
jge
fiadds
jo
or
addl
stc
pop
int3
lret
mov
xchg
ret
aam
in
pop
ret
hlt
adc
lea
xorl
or
adc
in
push
int3
shlb
pop
mov
push
dec
pop
cmp
stos
orb
jge
xchg
push
sbb
adc
loop
movsl
jmp
add
mov
negl
dec
out
jo
sbb
dec
sar
mov
lods
mov
cmpb
mov
add
add
mov
fisttps
push
in
jmp
add
add
ror
jb
mov
jmp
adc
add
sti
push
xchg
out
xchg
pop
xor
pop
xor
dec
bound
inc
and
lahf
jo
std
data16
jp
shrb
xchg
xchg
or
outsb
out
push
mov
pop
ss
in
loopne
lret
int3
xor
mov
push
jb
test
out
cmpsb
xchg
xlat
dec
fsubrp
enter
insb
movsl
mov
inc
push
inc
or
cltd
in
push
pop
lret
inc
xor
mov
fsubr
push
mov
dec
lcall
sub
rcrb
sbb
inc
and
out
test
call
mov
mov
hlt
test
cmp
sub
inc
fistpll
aad
ret
jne
jle
mov
leave
xor
and
jnp
jecxz
xchg
push
lahf
fnstcw
lea
imul
or
dec
ficoml
pop
sbb
add
stc
pop
inc
and
pop
cwtl
rclb
imul
dec
dec
mov
or
pop
loop
jbe
pop
dec
cltd
xor
pop
ds
movsb
cmp
sub
jns
dec
mov
sub
call
mov
xchg
jle
dec
imul
or
jno
mov
mov
ja
imul
lods
sub
pop
in
lret
pushf
mov
pop
inc
cmpsb
jne
push
xlat
mov
mov
sbbl
jecxz
insb
clc
pop
sbb
xor
lret
xor
hlt
jae
les
out
cmpsb
and
clc
sbb
insb
out
add
xor
ffreep
inc
and
or
lea
mov
mov
std
rcr
xchg
sub
inc
in
xchg
jb
pand
or
cmp
enter
mov
fdivs
lret
xchg
jle
jnp
mov
jl
mov
dec
sbb
mov
lds
pop
sti
inc
ljmp
fistps
push
arpl
sub
icebp
adc
inc
fistpll
mov
push
or
loope
push
sub
xor
adc
jno
fsub
jp
hlt
xor
or
jmp
adcl
cmpsb
jno
lock
sub
mov
jmp
popf
aad
out
cmp
sub
mov
cwtl
jge
imul
je
add
enter
outsl
cmc
call
push
cs
movsl
in
push
cmp
cmpsl
xor
mov
insb
inc
ss
pop
jno
test
sarb
lds
mov
mov
mov
mov
xor
xor
jne
cld
aad
and
fdivp
lods
cs
hlt
popf
jmp
std
xchg
jnp
repz
arpl
je
test
lea
mov
jnp
in
jge
rcrl
shrl
jnp
jne
in
push
call
jp
pop
out
arpl
push
mov
xchg
jns
mov
repnz
fidivrs
dec
ret
leave
inc
loopne
or
jge
in
mov
negl
stos
leave
pop
rcll
mov
mov
and
mov
jb
mov
fucomi
push
iret
int
jp
sub
cmp
mov
xchg
sahf
sub
out
imul
add
pop
imul
mov
adc
lds
inc
adc
ret
in
push
mov
sub
je
sti
add
inc
ret
ret
jae
dec
nop
insb
push
and
out
hlt
outsl
scas
data16
ret
faddp
xchg
add
xor
adcb
aam
mov
int
std
or
mov
dec
clc
sub
popf
shlb
in
out
sub
and
xchg
push
lods
sbb
jae
popa
adc
sub
js
ds
inc
dec
jo
popa
add
mov
sub
mov
jbe
dec
out
pop
jae
or
stc
movsb
subb
idiv
pop
push
pushf
int
arpl
push
je
loop
and
adc
fcmovu
xchg
sub
inc
add
adc
mov
dec
subb
pop
xor
enter
cli
shr
push
sbb
pop
shll
repnz
fldcw
xor
push
inc
sub
lods
push
outsb
lods
mov
push
mov
add
jno
ret
sub
ljmp
xchg
out
pop
push
inc
pop
sub
je
leave
adc
and
and
sbbb
loope
jns
cmc
dec
cmp
fmuls
out
cmp
mov
mov
cli
lea
pop
std
push
adc
pusha
jg
xchg
dec
sub
repnz
cld
lahf
rclb
mov
in
pushf
xchg
mov
mov
stos
lret
cmp
add
cmp
push
and
adc
pop
push
cmc
lock
add
pop
xorl
addr16
push
sbb
fildll
pop
jp
shr
add
inc
mov
jp
loopne
cmpsb
fldl
jo
mov
dec
inc
sbbl
jae
pop
cwtl
push
cwtl
pop
mov
mov
mov
imul
aad
and
jno
int
int3
and
cmp
jmp
sahf
add
iret
mov
adc
and
mov
mov
and
dec
add
mov
push
je
mov
pop
push
call
fcoms
mov
mov
fcompl
or
jb
xor
cmp
pop
pusha
push
push
mov
lods
push
lds
pop
lock
mov
inc
cmp
adc
pop
adcl
cmc
imul
int3
das
mov
pop
xlat
inc
ret
and
ret
divb
sub
fsubrl
jg
mov
jae
and
into
in
mov
sub
or
arpl
je
push
ljmp
jecxz
imul
aam
imul
pop
xchg
outsb
enter
fisubs
daa
rcll
mull
sbb
repz
xchg
je
lock
add
sub
into
xor
mov
xchg
es
dec
pop
add
aad
inc
in
sub
mov
aad
insl
or
xor
add
lea
mov
pop
fimull
mov
scas
jle
mov
mov
mov
hlt
cmp
or
jmp
sub
rol
nop
cmp
sbb
mov
sbb
sub
pop
sub
lods
pusha
lds
and
jl
push
sbb
popf
dec
mov
mov
lock
out
push
xchg
pop
leave
fstpl
hlt
leave
or
jb
jb
dec
ds
and
xchg
xor
test
mov
test
jo
repnz
jge
stc
cmp
stos
xchg
daa
and
leave
mov
into
jne
sub
sbb
je
ljmp
stc
pusha
pandn
sub
add
xor
test
repz
jp
or
rorb
sahf
pop
inc
mov
iret
add
aad
xor
enter
pop
inc
jge,pt
lds
or
push
icebp
mov
movsl
mov
popa
pop
jo
repnz
out
mov
mov
lcall
in
dec
jnp
leave
lods
adc
mov
stos
sbb
ret
add
mov
test
sar
loopne
out
dec
pushf
ret
inc
gs
sbb
popa
shlb
adc
bsr
in
mov
mov
aam
jbe
mov
inc
push
xlat
push
jo
sub
mov
orl
jo
lret
mov
cmpsl
in
iret
mov
sarl
dec
out
add
jnp
sar
pop
xchg
adc
jl
repnz
xchg
sub
sub
xchg
je
sbb
lea
rcrl
lahf
movsb
and
xchg
dec
push
push
inc
notl
ss
mov
and
sti
inc
sub
push
loope
insb
and
mov
xchg
xchg
mov
in
idivb
or
and
pusha
pushf
stos
jmp
arpl
sub
das
mov
jmp
aam
or
jmp
cld
mov
rcll
mov
dec
mov
mov
xor
movsl
xchg
hlt
ja
add
mov
sub
mov
xchg
fnstcw
js
jae
repz
sub
int
lahf
jns
dec
or
and
or
push
addr16
lock
mov
int
lock
iret
scas
xor
push
mov
dec
shl
push
inc
cmp
and
jno
insb
sub
mov
sahf
int
lahf
movsl
mov
sub
loopne
fucomp
ss
xchg
outsb
xor
imulb
jns
or
cwtl
loop
movsb
mov
cmp
pop
mov
inc
lds
mov
into
cwtl
and
bound
test
jp
daa
in
ret
push
data16
xchg
out
mov
jno
cmp
imul
xchg
dec
push
xchg
pop
filds
jle
push
mov
push
inc
cmpsl
fstsw
cmp
out
aas
or
mov
inc
cmp
enter
mov
in
fs
je
iret
out
mov
fcomps
scas
dec
fidivl
push
jo
push
bnd
sahf
push
pop
xchg
dec
nop
mov
adc
cmc
scas
hlt
sbb
push
das
hlt
mov
inc
jmp
loope
mov
mov
and
je
inc
mov
shlb
push
and
sbb
out
rcll
push
and
sbb
movsl
mov
mov
jae
int
lods
flds
adc
sbb
lods
fdivrl
out
lock
and
daa
rclb
adc
mov
sahf
jecxz
push
push
lea
out
xchg
and
test
mov
icebp
adc
and
push
xchg
cmp
in
or
push
push
fdivrl
outsb
xorl
adc
inc
cmp
arpl
dec
push
aaa
aaa
in
sub
std
lret
xchg
xchg
and
into
push
cmp
mov
inc
imul
insb
pop
pop
adc
or
insb
rcr
mov
loop
lea
or
aaa
push
dec
mov
mov
add
pop
mov
sub
cltd
mov
in
sub
mov
lea
or
outsb
jp
dec
mov
bound
xor
jo
lods
mov
and
je
imul
and
mov
sbb
lea
mov
inc
cltd
and
popf
insl
jl
es
push
nop
push
sbb
ss
push
insl
add
mov
sbb
lahf
sti
fadd
xor
cmp
div
xorb
in
fwait
push
insb
mov
xor
leave
lds
mov
push
jnp
jmp
sbb
jg
loop
mov
into
dec
sbb
sub
insl
inc
or
popf
dec
insb
idivb
mov
fdivrs
aas
dec
testb
and
push
insb
adc
bound
ss
out
adc
xchg
jmp
mov
loop
fld
mov
sub
in
aaa
xor
subl
jnp
xor
sbb
or
mov
xchg
mov
fistl
idiv
pop
adc
sub
jno
mov
jnp
fsts
test
hlt
into
lahf
arpl
shll
pop
mov
mov
test
sbbb
inc
sahf
jnp
loope
es
pop
test
je
jae
out
cmp
sub
xchg
adc
popa
loop
test
test
fcompl
mov
imul
push
bound
dec
sub
mull
jno
data16
sub
popa
pop
jne
dec
push
into
lea
std
stos
jecxz
adc
ss
push
pop
in
imul
fists
mov
mov
pop
pushf
xor
inc
push
adc
or
or
adc
add
mov
shlb
mov
insb
fdivs
leave
jg
sub
xchg
pop
ret
adc
mov
out
and
ret
mov
test
movsb
adc
int3
mov
insl
xchg
and
adc
in
cmp
mov
mov
jle
jge
dec
xor
aad
add
in
mov
xchg
addr16
test
sbb
std
int
lea
xchg
popa
inc
dec
popf
jno
and
cmp
add
ljmp
gs
push
xor
pop
loope
pop
ret
mov
lea
pop
je
push
and
lods
mov
pop
stc
sbb
fs
sub
jle
sbb
nop
push
les
mov
cmpsb
and
fdivrl
push
shl
pop
push
jo
test
in
sbb
push
mov
mov
inc
movsb
push
daa
mov
insb
mov
jno
in
xchg
mov
movsb
js
std
faddl
jno
imul
add
lods
sti
ret
sahf
dec
test
jecxz
bnd
add
loope
sub
and
out
or
arpl
scas
ja
popa
xchg
lret
jmp
pop
sbb
or
sar
or
mov
sub
popf
mov
and
dec
out
or
and
xor
mov
mov
push
mov
orb
push
or
xchg
sub
in
imul
arpl
int
lahf
push
nop
adc
jae
ljmp
stc
popa
add
push
dec
sahf
fisubs
lock
imul
dec
push
scas
push
pop
testb
fs
push
dec
sbb
lds
dec
bound
shl
jno
fisubrl
xchg
hlt
imul
mov
sahf
insb
stos
mov
lret
ss
pop
sbb
loopne
dec
pop
mov
lret
mov
adc
icebp
fcoml
out
in
popl
int
inc
dec
and
in
loop
mov
inc
in
dec
test
in
sbb
and
aas
dec
mov
jg
mov
repz
loop
and
test
idivb
stos
inc
nop
enter
stc
and
lods
jae
jle
xor
mul
or
mov
lret
shrb
lock
push
in
fistl
and
sub
push
jae
xor
iret
sub
adc
adc
loopne
ret
dec
mov
je
jb
mov
scas
scas
push
mov
cmc
push
jecxz
test
in
mov
mov
mov
inc
stos
clc
xchg
xchg
lods
bound
mov
mov
pop
fisubrl
movb
stos
mov
in
fwait
aaa
outsb
jns
test
xor
add
roll
sbb
stos
loop
ror
cmp
shlb
or
jae
jnp
mov
sbb
cld
mov
loopne
adc
in
insb
cmp
sbb
cld
xor
and
in
pop
lret
mov
or
mov
pop
loop
mov
inc
jge
lods
xchg
push
adc
pop
sub
xor
fwait
dec
or
jmp
cmpl
leave
pop
aad
in
loop
dec
add
or
imul
stos
cmovnp
inc
adc
and
add
or
mov
jmp
in
fcoml
dec
xor
icebp
mov
rorb
es
inc
fisttps
das
pop
xor
pop
loop
adc
cs
loope
fisubrl
je
in
xor
push
lds
push
pushf
mov
fsubl
push
fidivl
mov
popa
ja
pop
pop
inc
jmp
insl
aad
sub
leave
lea
mov
bsf
nop
cmpb
mov
leave
cmpsl
stc
fisubs
lods
cmp
stos
test
not
xchg
in
shl
rcll
sbb
mov
cld
dec
xchg
xchg
jo
push
imulb
mov
sub
jecxz
jp
jns
or
jge,pn
inc
jbe
jl
cmp
adc
cmp
fiadds
push
dec
repnz
and
out
inc
lods
mov
mov
and
in
jne
or
push
xchg
adc
dec
mov
fnstenv
je
dec
leave
lcall
adc
and
xor
mov
pop
clc
rcrl
jno
scas
cmp
or
and
lods
xchg
dec
ret
and
inc
inc
xor
sbb
jmp
xchg
push
or
push
cmc
fwait
or
sub
xchg
shlb
stos
mov
jnp
adc
mov
lea
adc
lods
mov
xor
imul
call
pushf
adc
lret
inc
sbb
push
inc
fs
test
sub
mov
fists
jnp
jecxz
shr
xor
jge
rolb
mov
mov
iret
xchg
jae
imul
jmp
fldenv
push
push
shlb
or
aam
adc
mov
inc
pop
cmp
adc
or
and
aaa
or
mov
ja
shl
sub
out
fiadds
rcrb
mov
dec
rorb
sub
or
mov
xchg
push
mov
loope
fidivs
stos
movsl
push
xor
testl
and
sbb
icebp
lea
arpl
popl
ficompl
data16
adc
or
scas
es
pop
popa
push
out
scas
adc
sti
lods
jno
daa
pop
loop
or
and
add
shrl
insb
lock
mov
or
imul
cmp
cmpsb
in
mov
mov
cmp
bound
and
jae
fsubrl
cld
hlt
or
sbb
sbb
call
gs
test
jmp
bound
and
arpl
or
leave
mov
loope
fucom
in
inc
data16
mov
stos
test
sbb
inc
pop
mov
mov
mov
ja
rorb
fisttps
in
push
rorl
mov
daa
sbb
push
cmp
xchg
arpl
xchg
dec
mov
push
gs
shlb
lret
std
repnz
jmp
in
daa
push
icebp
inc
lods
adc
mov
mov
fnsave
addl
in
bound
sarb
push
adc
in
or
adc
or
rcrl
push
mov
xchg
add
sahf
fcoml
xlat
es
adc
ljmp
mov
push
cwtl
sub
daa
fldt
icebp
popa
jnp
dec
xor
add
push
pop
push
in
lret
inc
mov
or
xor
mov
mov
xchg
test
loope
or
sub
sub
outsb
inc
imul
in
xchg
mov
xor
adc
shlb
lahf
xchg
add
pushf
push
add
push
xchg
clc
adc
cmp
dec
jl
stc
sub
push
xor
xchg
xor
xor
jl
push
movsb
inc
push
jle
mov
or
jno
jns
fistpl
stc
pop
test
pop
adc
mov
imul
movsl
je
repnz
fstl
lods
add
adc
jp
lea
cltd
cs
pop
push
aas
push
inc
movsb
push
jae
cmp
aas
push
leave
jbe
xchg
lret
dec
mov
adc
xor
sbb
in
imul
xchg
icebp
mov
movsl
pop
or
cltd
jle
jo
add
orl
lods
pop
in
pop
cmc
push
pushf
mov
pop
jnp
insl
dec
fldenv
sub
adc
das
inc
in
fwait
sub
mov
roll
sub
mov
sub
cmpsb
mov
xchg
push
enter
pusha
insl
mov
hlt
aaa
xchg
adc
ficoms
loopne
sbb
inc
mov
das
inc
push
aam
ss
gs
cltd
mov
mov
mov
adc
mov
mov
idivb
ljmp
pop
pop
add
mov
call
adc
push
mov
dec
outsb
popa
push
mov
xor
shrl
loopne
dec
sbb
out
lea
stos
in
push
in
mov
out
lods
je
shlb
dec
fucomi
inc
ret
cmp
sti
or
std
jg
pop
ja
flds
push
cmp
push
shrl
mov
mov
adc
sbb
jne
or
fildll
push
or
adc
gs
mov
scas
add
ret
jno
xor
shl
insl
mov
bndstx
loopne
ja
jecxz
jmp
out
mov
addb
mov
pop
xor
sti
jbe
or
loop
in
into
jle
in
xchg
pop
ret
mov
mov
xor
cs
xor
mov
and
jle
add
dec
rolb
jne
adcb
lcall
data16
hlt
add
outsl
loope
lods
aaa
xor
mov
dec
in
aad
sbb
lock
inc
inc
sbbl
add
mov
mov
mov
pop
mov
inc
sbb
or
fisttps
sbb
dec
repz
out
aad
sbb
arpl
jae
push
jmp
popf
xor
adc
pop
cwtl
pop
xchg
outsb
imul
inc
aas
pushf
mov
sub
xchg
mov
mov
das
sbb
sub
js
rcll
ja
cmpl
loope
xor
mov
call
jae
and
inc
pop
inc
in
or
daa
dec
notl
shlb
pop
jns
es
push
fnstenv
fimull
sbb
pop
pop
add
jmp
inc
stos
idivl
jg
jne
notb
aas
push
out
daa
hlt
cmpsl
out
insb
pop
and
xchg
jne
mov
loop
jnp
jne
sub
add
test
jne
lods
sbb
fldl
loop
or
or
sub
leave
cmp
jo
sub
lds
cmp
out
mov
sub
mov
xor
push
jb
gs
inc
mov
mov
add
sub
cmp
adc
jg
outsl
in
repz
cmp
ljmp
jne
mov
addr16
mov
jne
movsl
shlb
sbb
and
add
cmpsl
mov
jno
or
inc
xchg
push
mov
fwait
in
cs
push
pop
jae
shlb
lods
popa
das
push
dec
xchg
idivb
in
notl
mov
shrb
push
xor
adc
cmp
add
aam
pop
lcall
das
outsb
pop
movsb
cmc
or
inc
mov
bsr
arpl
repnz
icebp
and
and
int
out
insl
js
jb
sahf
mov
lods
sub
adc
jg
pop
inc
sbb
adc
lods
rcrb
mov
and
sub
push
std
sahf
cltd
xor
in
dec
neg
mov
lea
scas
in
clc
insb
cltd
movsb
pop
and
das
jno
ljmp
fsubrp
test
sub
mov
cwtl
imul
add
mov
in
push
sub
into
or
jp
lea
call
or
push
jae
dec
insl
jae
pop
loopne
jbe
sub
fwait
xchg
hlt
mov
mov
stos
pop
mov
bound
mov
cld
push
add
sbb
or
fsubp
or
sahf
jae
sub
mov
and
and
inc
or
or
xchg
popa
pop
adc
xchg
add
imul
jno
fmull
in
inc
lcall
dec
into
jle
lahf
dec
pop
rcr
sbb
das
mov
fsubl
daa
icebp
imul
sbb
xor
mov
jo
out
add
test
inc
mov
inc
lret
popf
rcl
cmpsb
js
push
lea
dec
push
jo
push
lea
cmp
fcompl
add
dec
pop
stc
inc
mov
fldenv
xor
push
and
xchg
sbb
push
mov
fisttps
lcall
aaa
mov
pop
ja
test
lods
and
push
xchg
cmpsb
dec
jmp
mov
sbb
jle
arpl
cmp
or
push
cmp
pop
lock
sti
pavgb
nop
stc
leave
imul
mov
mov
lea
dec
jb
jo
push
pop
xlat
jbe
xchg
repnz
pop
cmc
push
arpl
fildl
add
shr
sub
cmp
pushf
dec
xchg
pop
icebp
imul
rcl
shrl
jo
scas
and
mov
and
mov
jp
jb
jmp
movsl
stos
xor
testb
mov
mov
mov
sbb
lea
loop
jae
ljmp
ret
sbb
inc
mov
and
or
fs
sbb
insb
fdiv
lea
mov
push
mov
inc
mov
and
pop
stos
mov
jne
ret
adc
jmp
jbe
daa
pop
mov
mov
jg
inc
loope
testl
lahf
and
push
xchg
or
inc
mov
movsb
sub
mov
cmp
sbb
inc
cmc
fisttpll
orl
push
leave
cli
mov
popa
sub
std
sub
fadds
jecxz
pusha
mov
mov
insl
movsb
add
pop
sub
popf
fildll
mov
sbb
cmp
sarb
test
push
call
daa
in
jle
sub
and
test
frstor
sub
cmp
loop
insb
addr16
or
xchg
mov
dec
xor
andl
xchg
lods
testl
out
leave
movsl
fmulp
adc
sbb
mov
out
jns
ret
aaa
rcrb
cwtl
mov
jg
popf
pop
mov
orl
sub
push
cmc
and
jle
cmp
lahf
out
adc
outsb
in
adc
lret
loope
int
cmp
fcomi
cmc
aaa
lock
pop
test
lds
rcrb
add
mov
orb
pop
in
xchg
lea
inc
lods
imul
popl
mov
pop
aaa
hlt
aas
jp
fcoms
fstl
or
sti
fcomps
lds
push
shl
cmc
lds
mov
cmp
xor
add
imul
cmp
mov
mov
sti
das
xchg
lahf
add
insb
mov
or
mov
out
test
push
sub
int
bound
add
cmc
loop
push
test
lahf
pop
jns
mov
mov
je
mov
repz
test
cmc
outsb
popa
aas
xchg
enter
xchg
ja
mov
aaa
jae
inc
pop
and
js
insb
in
push
je
xchg
pusha
push
dec
pop
shrl
les
inc
xor
pop
fwait
xchg
shrb
mov
imul
sub
xchg
ficompl
fisubrs
imul
or
cmpsb
xchg
jno
mov
xchg
push
or
out
lea
push
and
xchg
faddl
mov
call
lds
jmp
ljmp
xlat
mov
aam
fists
loope
mov
fwait
xchg
pop
fimuls
movsb
and
out
xchg
mov
sub
aad
mov
and
cmp
and
lods
lret
rcrl
cmp
inc
je
mov
in
mov
xchg
mov
pop
xor
decb
cmp
adc
adc
popa
push
dec
mov
mov
mov
pop
mov
sbb
punpckhdq
sub
add
rol
in
les
mov
jno
int3
frstpm(287
cmp
or
sub
daa
lea
xor
aad
add
push
xor
out
lea
add
setae
and
fisttpll
rorl
xchg
push
cwtl
mov
pop
jno
add
push
cmp
mov
xchg
xchg
lret
or
push
in
js
jmp
mov
mov
or
test
popf
and
and
int3
into
xor
sub
aam
jne
pop
or
in
bound
lcall
dec
notl
lea
push
jp
in
std
inc
pop
fcoms
add
jmp
nop
inc
mov
mov
cmp
mov
out
sbb
faddl
xor
sub
jns
mov
fstps
insb
sbb
cld
jb
fmuls
xchg
int
ret
sbb
push
dec
pop
sbb
mov
sub
scas
sti
bound
mov
bound
xor
cmp
loop
ss
int
pop
mov
mov
fwait
outsl
icebp
test
data16
loopne
xlat
shl
sbb
xor
daa
adc
add
mov
push
push
lea
jae
sub
add
ljmp
repnz
jp
dec
lcall
cltd
loop
push
or
ret
mov
mov
ret
hlt
inc
addb
add
mov
dec
or
mov
mov
mov
mov
roll
nop
pop
ljmp
dec
push
pop
dec
je
dec
test
je
jle
push
dec
je
cltd
hlt
es
cwtl
scas
jle
rorb
sti
enter
mov
ret
ret
aaa
fsubl
mov
inc
daa
aad
aam
jno
push
sti
arpl
mov
scas
mov
jg
sbb
cmp
cmp
in
pop
fiadds
lcall
dec
xchg
leave
inc
pop
fdivrl
test
sar
jnp
xchg
xor
ficomps
imul
repnz
outsb
std
mov
nop
pop
pushf
pop
dec
movl
data16
ds
jne
test
jge
in
mov
and
nop
adc
das
or
iret
and
test
cli
fcoms
ror
stos
fwait
call
sbb
dec
jbe
mov
aad
jg
scas
scas
jnp
pop
les
xor
sbb
imul
shl
jmp
push
pop
fidivl
mov
or
push
or
shr
mov
bound
imul
aam
xchg
mov
sub
sti
push
pop
xchg
shl
call
jno
push
xchg
out
inc
ja
push
inc
fdivl
cli
shll
mov
jle
sahf
adc
fcmove
or
push
loopne
fdivs
pop
push
fnstcw
imul
sub
push
cwtl
and
sar
out
jp
mov
mov
fwait
sbb
jo
mov
pop
popa
test
mov
sti
mov
sbb
lock
hlt
mov
inc
inc
dec
and
gs
mov
fisttpll
hlt
popf
mov
adc
and
pop
cmp
push
cmp
pop
push
cwtl
sahf
js
loopne
and
xchg
mov
enter
insb
fld
lea
ljmp
and
xchg
testl
add
int3
std
add
ja
sbb
mov
jmp
jl
push
hlt
cmp
xchg
push
mov
jmp
adc
mov
hlt
and
xchg
bound
xchg
jno
test
mov
mov
loop
iret
xlat
jmp
scas
and
out
push
sbb
dec
cmp
rcrb
xor
xchg
icebp
mov
enter
pop
fs
push
ja
cli
ret
test
dec
or
dec
adc
out
jo
mov
rcl
and
and
data16
gs
or
mov
jb
jl
addr16
xchg
mull
mov
and
fmul
sbb
shl
pushf
xchg
push
ja
mov
mov
xchg
imul
fwait
pusha
mov
jns
loop
sub
hlt
lahf
sbb
shrb
lods
outsb
push
leave
hlt
xlat
adc
fisttpl
pop
inc
lods
repz
fistpl
inc
xchg
push
imul
mov
pop
scas
outsl
push
lea
cli
popa
insb
in
cmp
filds
call
cmp
inc
mov
pop
insl
jle
jle
das
fldt
xchg
cmpsl
bound
jo
and
mov
arpl
inc
loop
in
mov
pop
sahf
cmc
sub
sub
outsl
aaa
mov
repz
cmp
push
lods
xchg
sbbb
dec
icebp
orb
or
xchg
adc
test
sbb
push
fadds
pop
dec
cltd
dec
xor
cwtl
jo
sbb
cs
mov
mov
pop
jbe
pop
pop
mov
mov
lods
cmc
or
cmp
mov
test
dec
and
insl
xor
out
push
bnd
add
cmc
lea
push
imul
jle
mov
pop
pop
sbb
jae
xchg
hlt
in
imul
daa
push
icebp
mov
mov
pop
sub
mov
loopne
jbe
dec
rcr
js
inc
movsb
push
dec
mov
cli
sbb
in
jmp
out
or
rclb
gs
jae
cmp
mov
cmp
icebp
ds
dec
outsb
push
mov
ss
inc
addr16
pushl
popa
sbb
xchg
jb
mov
cmpl
in
mov
inc
rcll
gs
sub
insb
xor
and
sti
rcr
lods
popa
and
or
fs
addr16
jle
insb
mov
push
mov
jl
add
push
std
into
jle
jle
lea
imul
pop
sbb
scas
aas
push
mov
mov
gs
pop
or
pop
xchg
shlb
and
pop
idivb
xchg
dec
push
or
push
pop
inc
call
aad
mov
insl
insl
and
and
bound
push
push
dec
fwait
and
dec
in
and
or
mov
mov
mov
movsl
imul
mov
dec
or
lea
stos
mov
mov
lea
stos
sbbb
xor
mov
pop
push
js
scas
sub
cs
pop
je
ret
out
jae
stos
test
fs
jo
repnz
mov
stos
lds
aad
mov
inc
cmp
push
add
insb
pop
and
lea
insl
jno
fisttps
pop
inc
movsb
pushf
sbb
adc
push
daa
pop
lods
mov
mov
mov
mov
lret
iret
repz
xchg
loop
and
xchg
lret
xchg
in
sub
mov
call
daa
mov
movsb
scas
and
fsts
and
push
mov
pop
or
stos
repnz
mov
jmp
jae
imul
jle
ljmp
test
sub
push
jae
and
jo
outsl
iret
xchg
inc
and
test
imul
mov
cwtl
xor
or
daa
mov
or
mov
xchg
cmpsb
sarl
xorl
xor
jb
mov
jns
call
std
xchg
sbb
dec
dec
pop
js
jl
ja
in
pop
push
dec
dec
gs
sbb
jnp
cmp
add
int
jno
lret
inc
pop
mov
sub
and
jmp
xchg
repnz
int3
pop
insl
add
testl
ja
rcr
fisttpll
dec
or
mov
pop
xchg
divb
int
fsts
fsubl
cmp
sbb
jge
and
pop
push
bound
in
or
loopne
cli
pop
add
jle
loopne
mov
pop
xchg
dec
inc
and
jno
jae
bound
push
jmp
lods
jp
mov
lods
push
mov
mov
clc
sub
pop
adc
pop
in
lea
jmp
and
mov
lret
sub
in
jge
xchg
lahf
mov
loop
xor
mov
xchg
ds
lods
adc
daa
mov
xchg
mov
mov
add
inc
mov
imul
dec
test
inc
lea
jmp
push
sub
mov
and
fs
not
add
js
lcall
mov
jno
scas
int
fcmovu
clc
mov
pop
ss
xor
and
jbe
pop
popa
test
hlt
lea
sbb
bound
movsb
add
pop
jns
sub
lods
fsts
or
adc
and
mov
or
mov
insb
sub
dec
hlt
out
sub
or
push
add
and
cmp
testb
jnp
sub
in
pop
and
and
add
adc
aam
mov
mov
js
icebp
in
popf
mov
xchg
in
xchg
fidivl
push
lcall
jge
in
lgs
push
arpl
cmp
mov
mov
sarl
out
jo
and
add
inc
inc
scas
and
xchg
and
aas
jno
test
int
data16
mov
stos
sub
jmp
cwtl
int
mov
daa
lahf
loope
pop
and
pop
jnp
push
xor
insb
ja
sub
add
movsl
dec
sbb
mov
xor
jb
ljmp
movsb
push
and
pop
fs
xor
popa
adc
xor
pop
mov
adc
pop
jns
cmpsb
lea
lods
jno
xchg
gs
ret
inc
jp
add
push
loopne
aam
jne
or
loope
stc
daa
cli
sbb
test
cmp
stos
pop
lea
int
das
push
dec
fidivs
pop
pop
mov
inc
loopne
lea
jo
cld
test
xor
xchg
mov
data16
mov
test
popa
outsl
dec
data16
repz
lahf
fimull
adc
imul
push
fptan
jecxz
fnstcw
lahf
mov
pusha
cs
push
int3
dec
jnp
loop
fstpt
ret
xor
sete
jnp
jno
xorb
sub
mov
ret
xor
ljmp
ja
sub
js
xor
push
push
xchg
adc
cmp
jb
lea
mov
inc
lcall
xchg
iret
fnstcw
mov
mov
cs
cmp
sub
push
fisubl
mov
decl
cmc
push
xor
call
xor
mov
mov
data16
rcr
pop
mov
pop
jno
inc
aam
jle
xchg
xchg
adc
adc
idivb
push
je
mov
or
xchg
cwtl
ss
data16
cmpsb
out
cltd
adc
sbb
sub
cmp
push
mov
mov
and
rcr
cwtl
popa
inc
mov
jbe
and
cmp
mov
jns
insl
add
movsl
cltd
or
dec
lcall
movsl
sbb
mov
mov
or
gs
or
sub
sub
rcrb
mov
mov
sbb
hlt
fnsave
inc
fs
lea
loopne
xchg
addr16
jo
sahf
or
pop
fsub
out
push
cmp
push
loope
imulb
fstl
push
xchg
lret
mov
sbb
pop
test
or
xor
mov
cmp
or
mov
cmp
push
sbb
or
sbb
xchg
icebp
shrl
push
lods
aad
or
mov
push
incl
out
ja
hlt
aaa
push
mov
mov
loop
fdivp
stos
lea
xchg
push
mov
mov
push
push
jg
xchg
pop
mov
movsl
int
out
push
insl
je
mov
dec
lock
out
push
mov
into
push
call
cwtl
cmp
sti
je
stos
sbb
nop
mov
pop
inc
int
bound
pop
loopne
jne
out
pop
aaa
in
mov
cld
mov
or
mov
push
stos
sub
lods
add
and
aam
movsb
push
sbb
and
sbb
lods
inc
mov
inc
jle
push
lahf
xor
xchg
xchg
sub
xor
lods
jmp
leave
and
call
mov
out
mov
gs
fldt
push
cld
mov
div
repnz
jnp
or
cs
pop
sub
loope
int3
ficoms
daa
sub
add
xchg
jmp
jae
inc
mov
in
pop
loopne
push
sub
outsb
out
lahf
std
jl
loop
mov
popf
je
mov
repnz
mov
push
jmp
lds
jno
in
mov
add
in
sbb
jne
inc
pop
repz
cli
loopne
lea
subb
or
jb
jecxz
adc
xor
mov
arpl
mov
sbb
pop
and
xchg
bound
xorl
lods
push
loop
cmp
lea
xor
in
scas
push
fildl
jmp
lds
or
mov
cmc
cld
mov
aaa
data16
adc
cmp
adc
ficoms
dec
test
fistpl
daa
insl
jl
push
pop
stc
mov
inc
jae
nop
std
push
sub
dec
adc
mov
lcall
lock
sbb
insl
dec
popa
pop
adc
notb
push
lret
inc
lock
jae
je
insl
mov
mov
mov
and
adc
loope
fistps
mov
out
cmp
push
jmp
mov
cmp
sbb
xchg
cmp
lea
add
ds
lods
shrb
lods
sbb
outsl
pop
sub
mov
movsb
or
mov
js
sub
adc
and
and
mov
xlat
inc
les
xor
push
leave
jae
sbb
pushf
shlb
repz
loopne
pop
call
mulb
cmc
hlt
outsb
adc
cld
cmc
icebp
lock
push
out
mov
and
add
pop
mov
in
jb
cltd
sbb
outsb
xchg
mov
cmpsl
rorb
popf
sub
jne
test
rorb
mov
jae
movsb
mov
int3
xchg
mov
xchg
lock
in
mov
dec
pop
repnz
outsl
sub
fwait
pop
outsb
ret
inc
and
adc
pop
lds
mov
push
jle
pop
jl
sub
lcall
lea
adc
mov
shlb
fistpl
jecxz
hlt
outsb
cmp
jae
jbe
or
fs
fxam
insb
scas
and
mov
xor
mov
fistps
mov
test
loop
insb
cld
mov
bound
fsubs
jno
aas
leave
push
insl
jge
outsb
jmp
xchg
sub
xchg
jno
lea
std
dec
mov
test
jnp
mov
stos
arpl
mov
jle
pusha
mov
jno
shll
bound
div
mov
jb
out
inc
mov
and
add
jne
add
and
pushl
notl
jno
test
fldt
push
int3
repz
xchg
imul
cmp
adc
pop
and
in
scas
push
mov
mov
outsb
test
notl
repnz
lods
and
shlb
push
jo
push
aaa
pop
jnp
rorb
arpl
pop
sahf
sub
inc
int
sbb
dec
icebp
in
pop
lcall
sbb
aad
mov
adc
and
fnsave
and
in
xor
mov
pop
in
ss
es
xor
lea
test
fstl
xor
adc
gs
push
jmp
adc
cli
adc
repnz
push
mov
xor
je
lahf
jmp
or
add
cld
pop
adc
sbbb
jp
inc
sbb
xor
lcall
mov
int3
stc
push
and
jne
push
cwtl
roll
adc
test
popa
int
cmc
mov
xor
push
xchg
popa
xchg
out
test
or
mov
in
popf
push
adc
and
cmp
and
in
in
push
gs
insl
in
adc
cmp
jmp
ljmp
outsb
or
outsb
test
and
mov
arpl
aam
or
repnz
clc
insb
adc
into
push
or
sbb
int3
popf
call
lret
mov
xchg
call
pop
dec
dec
or
enter
inc
mov
add
mov
out
jp
fnstenv
jecxz
loopne
push
pop
sub
sub
adc
icebp
mov
iret
std
add
and
dec
xchg
and
cmp
pop
daa
dec
and
push
sbb
or
repnz
pop
loopne
sbb
mov
les
jne
dec
bound
in
outsl
fwait
mov
inc
cs
push
ret
mov
dec
or
adc
arpl
mov
xor
rcll
pop
lea
std
xor
cmp
mov
cmp
insl
repnz
repz
pop
jno
push
cmp
sahf
jge
add
sarb
jne
cmp
add
dec
in
ss
pop
xchg
xor
cltd
lods
mov
ss
lock
mov
jnp
mov
cli
cmc
enter
mov
loope
xchg
out
jno
pop
and
test
data16
sahf
and
lods
mov
and
push
and
jae
push
sub
outsl
jecxz
leave
jae
lods
xor
mov
mov
out
push
lea
jg
out
outsl
insb
ja
or
sahf
les
and
xchg
addr16
dec
sbb
sbb
sbbl
test
dec
xorl
sub
jge
mov
lock
fs
hlt
or
mov
mov
and
jnp
lods
xchg
xchg
rorb
mov
or
xchg
in
je
sub
mov
push
stos
insl
mov
fimull
cmp
sbb
lret
in
cli
push
xlat
mov
xchg
xor
mov
hlt
test
sub
cmp
rorl
inc
mov
lea
bound
pop
mov
aas
ret
out
in
jbe
and
sub
shll
xor
cli
mov
and
mov
icebp
jo
lret
add
xchg
and
mov
sub
xchg
mov
push
out
and
daa
imul
pop
jbe
mov
push
loope
hlt
push
or
push
jns
in
flds
int
in
in
movsb
inc
dec
jns
lds
mov
inc
pop
and
cmc
mov
popa
es
jp
pop
ljmp
clc
jecxz
movsl
in
fistl
sbb
mov
pop
out
sbb
jb
les
or
sub
inc
fidivl
push
xchg
in
jno
mov
cmpsb
iret
dec
lcall
in
xor
idivl
test
adc
mov
ds
push
fidivs
xorl
mov
mov
js
sub
popf
rolb
xchg
xlat
pushf
mov
je
and
push
or
mov
repz
popf
mov
lret
xchg
mov
lea
add
xor
cmc
sahf
jle
sbb
arpl
nop
movsl
dec
sbb
and
call
testb
push
push
sub
xor
mov
lock
mov
dec
cmp
bound
je
xor
js
pop
jns
and
xchg
and
cltd
cmc
icebp
lock
loopne
push
cli
dec
mov
imull
sbb
test
cmp
mov
jae
add
enter
or
dec
aas
in
cmp
push
dec
add
push
lret
mov
jae
fwait
sahf
sbb
dec
ja
jge
push
sub
push
test
loop,pt
and
xor
jae
mov
cmp
iret
and
and
sub
push
jp
and
cmp
mov
loop
shrb
mov
daa
jbe
cmc
mov
lock
and
scas
pusha
inc
leave
xchg
mov
mov
dec
divl
adc
shlb
sub
jb
sub
fcmove
outsl
lock
movsb
leave
aaa
test
imul
mov
or
xor
lret
loopne
inc
pushf
insl
mov
jb
xchg
negb
pop
addr16
jle
inc
sbb
xor
cltd
adc
mov
jb
add
seta
mov
push
in
lea
repnz
lret
inc
push
cli
pushf
push
rcrl
call
popf
mov
push
jo
into
out
add
mov
push
in
cmc
bound
in
mov
sti
out
adc
mov
aam
add
loop
pushf
adc
sbb
push
lods
mov
imul
xor
lret
pop
ljmp
adc
or
int
and
daa
push
mov
aad
pop
sub
mov
cmp
add
push
or
daa
sbb
xchg
sbb
jbe
lods
and
sbbb
shll
sbb
mov
scas
lret
iret
adc
je
pop
inc
pop
or
xor
mov
and
int3
sub
insb
mov
sarb
xorb
out
inc
orb
adc
fs
sti
rclb
ret
cmpsb
push
pop
shr
xor
jno
pop
inc
insb
mov
push
xchg
xchg
inc
sub
ljmp
jle
js
mov
and
in
jne
mov
cwtl
dec
sub
les
in
sti
cmp
xchg
cwtl
out
xchg
push
pop
cltd
arpl
jp
lret
xchg
mov
fmull
iret
clc
xlat
cmp
push
pusha
mov
movsl
cmp
pop
sub
movsb
or
push
idivl
lret
adc
andl
push
dec
and
and
into
push
call
outsl
pop
dec
lea
lock
movsb
or
lea
outsl
xchg
xor
or
out
icebp
sbb
bound
in
and
mov
pusha
fstps
rcll
sub
push
insl
push
jo
insb
insb
dec
sbb
in
ret
add
lea
shrl
adc
or
sbb
outsl
test
xor
inc
subb
jb
pop
sbb
jecxz
jne
or
lea
mov
push
lods
push
jmp
dec
outsl
xor
and
lock
hlt
and
or
mov
xchg
iret
stos
divb
push
ror
fisubl
sub
inc
sbb
jl
fsubl
push
bound
mov
pop
arpl
pop
dec
shrl
mov
fldl
js
subb
and
daa
push
xchg
push
cmpsl
or
inc
sbb
stc
les
and
jns
hlt
mov
iret
xchg
pop
mov
pop
mov
mov
bnd
pop
fs
in
dec
in
dec
and
push
inc
and
out
mov
dec
and
xchg
push
sarb
or
add
sub
test
test
pop
aad
iret
lcall
dec
sub
push
shlb
fists
in
add
adc
mov
pop
out
inc
cmp
jecxz
je
mov
push
cs
xchg
aam
pop
popa
sub
dec
cmp
scas
sub
mull
push
jge
cmp
mov
outsb
mov
fst
jecxz
lahf
jo
outsb
add
jae
jb
mov
mov
iret
push
jae
lea
stc
cwtl
jl
pop
flds
pop
outsl
add
and
xlat
or
fbstp
sub
in
lret
dec
and
push
xor
mov
jg
or
scas
dec
add
xchg
addr16
pop
or
fwait
nop
cmp
mov
sbb
mov
loope
mov
rclb
cmp
adc
adc
or
test
test
sti
or
mov
push
jmp
push
pop
jl
fists
mulb
mov
cli
les
ss
mov
xchg
push
cmp
add
outsl
sub
mov
push
push
adc
cmpsl
push
xchg
adc
ret
lret
in
or
mov
lret
repnz
loopne
pop
or
mov
or
je
mov
lahf
out
sar
outsl
repnz
push
xchg
jge
cmp
iret
js
xchg
mov
sub
dec
lods
xchg
in
cs
pop
sbb
push
fnstcw
sahf
sub
mov
fnstenv
inc
cmp
dec
filds
clc
aam
test
shlb
inc
jno
xor
adc
jae
cltd
roll
ror
jno
hlt
dec
sbb
adc
jmp
inc
sbbb
xchg
dec
sbb
int
inc
lret
add
arpl
sbb
jle
lds
dec
ljmp
das
adc
aaa
loope
test
mov
dec
sub
push
push
jmp
jnp
dec
mov
push
hlt
popa
pop
out
push
xchg
jae
jne
and
add
dec
and
xchg
sub
push
push
sbb
pusha
cmp
cmpsl
or
scas
mov
mov
push
mov
sbb
mov
ret
cmp
sbb
mov
xchg
nop
mov
mov
pop
mov
andl
addb
mov
addr16
xor
shl
mov
scas
test
pop
push
mov
jnp
movsl
pop
mov
data16
sahf
sbb
mov
arpl
mov
adc
bound
jl
push
dec
dec
in
scas
mov
sahf
sbb
jno
add
je
push
loopne
xorb
mov
and
or
outsl
lods
or
ss
jnp
fstpt
mov
inc
and
cmc
cmp
es
push
ret
div
push
mov
cmp
push
das
mov
stos
push
add
insb
and
cmp
aad
sbb
xchg
cwtl
add
stos
rclb
pop
cmc
es
inc
fldcw
adc
and
daa
les
mov
lcall
jo
dec
js
xlat
pop
xor
sub
push
lea
add
enter
popf
lock
jne
mov
mov
inc
lea
mov
inc
ljmp
and
test
lods
clc
hlt
iret
mov
add
push
enter
mov
cltd
shl
mov
in
mov
pop
dec
cmc
loope
loopne
aam
gs
pusha
pop
enter
cmpsb
inc
imul
loopne
jno
sbb
inc
popa
mov
mov
dec
mov
lret
shlb
push
inc
and
mov
in
dec
adc
pop
cmpsl
stos
jne
mov
loopne
and
enter
imul
jmp
and
dec
xor
gs
data16
jp
rcr
xor
insl
out
pop
fists
xor
scas
add
sbb
out
iret
in
xchg
cmpsl
push
ljmp
scas
jne
daa
jno
outsl
movsl
and
fimull
mov
mov
xchg
imul
pop
push
lea
movsb
rcll
cs
cmpsb
inc
fdivl
push
jp
mov
mov
push
fwait
aam
dec
add
pop
movsb
and
dec
shlb
lret
jmp
or
out
dec
mov
inc
adc
sub
xchg
cmc
mov
dec
mov
lret
enter
dec
and
int3
inc
popaw
sbb
gs
decb
arpl
dec
and
and
data16
add
sbb
popf
cmpxchg
fs
faddp
gs
mov
jo
movl
inc
mov
add
and
in
jge
xor
fidivs
ret
int3
insl
jg
or
push
and
jle
mov
inc
xor
sub
mov
arpl
inc
ja
lcall
or
mov
adc
dec
pop
in
imul
into
and
cld
insb
out
cwtl
jmp
add
test
xor
in
push
dec
orb
jmp
push
ficoms
outsl
and
repnz
jb
cmp
jno
jae
negl
sahf
das
fstp
xor
pop
inc
shll
std
jne
pop
ljmp
insl
cmpsb
fimull
addr16
leave
add
jge
movsb
push
jnp
int3
sti
hlt
sbb
shll
xor
adc
aad
jne
mov
shll
fstpl
ss
push
cwtl
ljmp
leave
sahf
adc
je
mov
out
pop
ret
je
push
shll
mov
pop
popa
sbb
lods
push
jno
sub
into
sub
push
andl
or
nop
aam
mov
lock
in
push
ja
es
scas
mov
cltd
fidivrs
jne
ss
je
insl
jne
adc
in
adc
jne
mov
pop
inc
push
jbe
sub
int3
leave
jns
shll
cmp
mov
jae
inc
fsts
frstor
popa
divl
shl
sbb
jne
arpl
les
ja
lahf
mov
popa
add
jne
jecxz
push
inc
shll
adc
jnp
adc
sub
add
xor
or
imul
iret
mov
lret
or
shll
clc
xchg
dec
xor
mov
push
push
or
xorl
inc
aas
inc
xlat
jne
add
mov
jne
xchg
imulb
addr16
inc
repz
push
mov
in
mov
call
or
mull
inc
jge
decl
and
jge
loope
jb
nop
pop
or
insb
jg
pop
js
or
faddl
pop
xor
out
dec
imul
sub
xchg
loop
mov
jg
rolb
inc
xor
in
aaa
in
jne
adc
popa
shrl
test
js
jne
sbb
mov
stos
stc
hlt
jne
lods
jnp
insb
jae
jne
push
push
jmp
addr16
stos
jne
inc
jmp
pcmpeqw
fcoms
loopne
mov
mulb
jne
xor
ljmp
jb
hlt
push
sbb
lea
push
mov
lret
pop
xchg
cmp
jne
aas
movsb
jge
fdivl
cmp
adc
mov
idivb
push
xor
jne
jp
call
push
frstor
pushf
orl
jecxz
inc
xchg
pop
jne
rcrb
imulb
mov
inc
rol
in
jecxz
add
push
in
jne
jp
pop
xchg
inc
jb
lds
les
out
push
sbb
imul
bound
flds
mov
sub
cs
in
or
test
and
xorb
mov
push
shll
cmp
das
mov
mov
mov
jne
in
shll
out
xchg
mov
jne
js
fadd
mov
repnz
repz
hlt
shrl
add
into
mov
dec
testb
cmp
adc
jb
stos
bound
movsb
fisttpl
outsb
aam
mulb
xchg
or
sar
pop
jne
lock
imul
sbb
addr16
xchg
pop
xchg
mov
cmc
outsl
ret
sub
add
jae
outsb
rorl
pop
adc
mov
icebp
dec
jnp
jecxz
pop
addr16
pop
shll
lea
xor
jne
stos
int
insb
sbb
jne
mov
divb
sti
mov
mov
andb
xorl
arpl
mov
add
js
sbb
push
jecxz
mov
xor
and
jne
lcall
outsb
popf
mov
sbb
pop
jnp
lret
lods
lock
push
sbb
jns
jge
mov
mov
pop
aad
fstps
movsl
lcall
cmp
scas
jne
test
rcrb
clc
jne
iret
adc
shll
jne
enter
sub
daa
popw
stos
cs
hlt
or
outsb
rorl
xchg
sbb
add
xor
inc
dec
cwtl
jb
notl
jmp
fdiv
cmpsl
sub
clc
dec
sub
add
inc
push
inc
sub
pop
mov
pop
cmc
push
inc
jne
push
xchg
lcall
jne
jge
ljmp
dec
pop
scas
xchg
xchg
roll
jbe
add
int3
jle
xchg
dec
cltd
xor
dec
and
fcmovnu
test
mov
jne
mov
jae
jne
and
sub
mov
xchg
test
sub
popf
push
cmp
hlt
push
in
inc
jne
sub
adc
loope
jne
xchg
bound
call
jne
mov
sub
stc
sub
xchg
pop
mov
jne
cmp
lods
adcl
sbb
mov
jae
mov
pop
mov
insl
jne
cmp
mov
jp
call
pop
xchg
inc
pop
test
cli
sub
repnz
cmp
and
inc
fidivs
inc
pop
into
pop
scas
jmp
push
mov
jge
push
fidivrs
stos
pop
scas
mov
fidivl
aad
sbb
adc
or
outsb
mov
or
adc
jne
test
adcl
popf
mov
jns
add
ja
ljmp
sti
xchg
push
jne
sub
imul
test
mov
paddusb
mov
repz
mov
mov
jne
js
pop
out
xchg
lds
je
sbb
sub
mov
add
das
xrelease
jno
jae
mov
pop
std
stos
jne
js
loopne
dec
aaa
fs
pushf
cmp
xchg
imulb
jne
inc
jge
jmp
sti
popa
jne
addl
adc
sti
pushl
enter
push
call
xchg
xchg
sar
aaa
scas
insb
jne
ret
idivl
iret
jne
gs
cmp
sub
or
mov
lret
popf
lret
cmp
push
jne
adc
pop
sub
shlb
sub
lahf
andb
jne
loopne
in
test
dec
cmp
fnstcw
test
or
out
pop
jne
mov
jne
xorl
cmpsb
shll
jl
hlt
dec
xor
jne
mov
aaa
or
push
cwtl
and
mov
and
les
imull
inc
push
addr16
repz
and
in
scas
cmp
sti
mov
pop
je
mov
enter
mov
fwait
jne
test
rorl
push
jmp
out
mov
fildll
aam
insb
hlt
jle
pop
jne
cs
xor
jne
pop
push
nop
xchg
aas
test
pop
jae
mov
mov
ljmp
std
fbstp
xchg
or
popa
testl
and
push
jmp
pop
jne
arpl
test
fs
mov
call
stc
mov
adc
mov
daa
jne
mov
xchg
xchg
pop
addb
mov
mov
mov
repz
or
lret
cwtl
bound
idivb
fisubrs
imul
jne
cld
jmp
xchg
cmp
pop
lock
jge
call
pop
lcall
je
mov
xchg
lret
andl
mov
xor
out
in
out
adc
stos
sbb
jne
les
push
jne
xchg
popa
mov
leave
stc
adc
sub
repnz
jne
and
aas
aad
loopne
jne
cmp
add
jp
cli
jne
mov
push
gs
insl
push
mov
cmp
xchg
inc
xchg
push
aas
jb
mov
in
mov
jno
sub
adc
jne
inc
or
popa
jne
sub
lea
fcom
shlb
notl
int
push
cmp
jb
mov
cs
std
cwtl
je
mov
jns
lahf
add
pop
stc
adc
cld
jne
jo
mov
jne
jp
daa
out
out
push
scas
jns
inc
xchg
xor
mov
jne,pn
rcrb
mov
mov
pop
jb
xchg
enter
mov
test
jne
mov
adc
stos
jne
adc
pop
mov
daa
jne
ds
dec
cld
xor
add
lods
les
and
push
mulb
sub
mov
xor
notl
in
mov
push
insb
xor
add
add
push
mov
pop
xchg
lcall
lods
sub
addr16
add
jl
popa
aas
sbb
fsts
scas
arpl
xchg
outsb
and
pop
data16
jno
sub
or
stos
stc
dec
xchg
or
mov
in
pop
jmp
loop
inc
pop
dec
sub
lods
lods
dec
cwtl
test
xor
in
stos
pop
sub
inc
orb
xor
mov
mov
sbb
pop
mov
int3
sbb
mov
shll
jb
inc
mov
jmp
fcompl
pop
mov
cwtl
data16
fnstsw
jmp
lea
scas
push
dec
mov
add
data16
mov
jp
jno
dec
addr16
sub
mov
mov
lea
fwait
cmp
data16
inc
loop
shll
subl
mov
sahf
aas
aad
andl
adc
mov
mov
movsb
xchg
pop
dec
mov
jle
addr16
jmp
ja
xchg
inc
mov
inc
sbb
lods
addl
je
jmp
adc
pop
icebp
out
out
mov
imul
mov
pop
xor
fldcw
lea
das
lds
daa
rorb
cmp
mov
sbb
jns
xchg
xchg
mov
sub
imul
test
or
sub
mov
dec
mov
mov
sub
jbe
in
inc
lea
dec
popa
xor
pop
cmp
js
sarb
in
add
in
or
pop
inc
out
dec
jae
lahf
or
out
repnz
lock
repnz
shlb
ljmp
jg
mov
std
add
jge
jecxz
pop
sub
loop
loopne
mov
inc
fisttps
xor
push
mov
stos
fsubp
sbb
lcall
shl
jo
popa
daa
dec
ds
push
adc
pop
or
nop
cli
lret
xchg
push
xchg
push
icebp
ret
popa
mov
out
mov
push
mov
int3
hlt
inc
subl
lcall
out
in
jb
mov
push
jmp
out
insl
xor
lock
and
inc
mov
push
pop
stc
pop
adc
in
xor
sbb
xchg
jns
popf
idivl
pusha
push
lret
icebp
decb
cmp
xor
jge
inc
mov
jo
jae
mov
mov
bound
in
pop
push
lea
jbe
or
test
fcmovbe
pop
dec
jp
jb
push
int3
mov
xor
mov
ret
xorl
divl
lock
lock
frstor
jb
adc
pusha
fwait
inc
pop
mov
mov
xchg
cltd
fs
xchg
or
shld
pop
xor
jg
adc
in
rclb
sti
pop
inc
add
ja
or
xor
sar
mov
sub
in
xor
push
jecxz
fstl
add
sti
sub
in
inc
mov
push
jno
sahf
sub
jecxz
dec
insl
pop
sub
mov
inc
jne,pt
mov
adc
xor
jg
insb
adc
fildl
sub
pmaxub
leave
jbe
mov
in
insb
ss
repz
fdivs
xlat
mov
mov
fstl
adcl
jae
push
icebp
pop
mov
in
enter
rclb
cmc
sbb
rorb
mov
es
jb
xor
mov
lods
add
mov
inc
lea
xchg
pop
push
das
push
int3
lods
mov
ret
sbb
popa
in
mov
ja
mov
sets
xor
mov
mov
fsubrs
dec
or
arpl
adc
push
fistpll
jmp
sub
in
fistpl
adc
fnstcw
sarl
jno,pt
hlt
mov
lock
lock
jge
pushf
out
adc
lcall
mov
shl
xor
sbb
xor
pop
dec
sub
arpl
cmp
sub
jnp
sub
filds
rcrl
hlt
cmp
dec
pop
jmp
pop
lea
jbe
xchg
inc
fdivrl
mov
in
sbb
sub
pop
sub
xchg
or
jmp
ljmp
push
in
push
add
aam
bound
adc
inc
mov
lock
xchg
and
stc
test
lock
push
inc
xchg
fsubl
xchg
push
push
mov
ja
jae
push
dec
out
dec
insl
pop
mov
ja
cmp
sbb
mov
call
dec
mov
cmp
pop
jns
cmp
lock
call
xchg
ljmp
aad
sbb
jmp
lods
adc
xor
push
stc
sbb
stc
mov
dec
push
nopl
mov
popf
mov
push
sub
test
jg
and
lds
in
mov
mov
jno
jnp
xchg
inc
jno
loop
pop
test
jp
mov
cmp
or
sub
xchg
mov
or
mov
daa
or
repz
fdivrp
stos
dec
adcb
bound
adc
push
jmp
sub
pop
inc
mov
insb
call
js
fldcw
and
lret
jle
mov
mov
mov
push
addr16
pop
push
fsubrl
inc
aam
loope
xchg
pop
push
stc
pop
insb
mov
xchg
jo
xlat
and
push
dec
ja
mov
and
add
sbb
jno
xchg
sbbl
sub
repz
imul
sbb
adc
jge
sub
int3
ficoms
pop
shrl
fldcw
dec
mov
push
lds
lea
hlt
pushf
in
fsubl
inc
dec
xor
aaa
int3
stc
jo
xchg
movsl
jmp
leave
adc
jnp
enter
in
jge
xchg
in
sbb
add
cmp
shr
push
jo
pmulhuw
sahf
fisttpl
sbb
and
sub
dec
fcmove
sbb
mov
jle
lea
cltd
and
push
mov
add
add
cmpsb
xor
out
jns
push
int3
and
mov
xchg
mov
fildll
add
in
jl
stos
jl
push
mov
xchg
xor
insb
clc
sbb
mov
xor
in
lods
ja
push
cmpsl
push
adc
push
and
jp
outsb
loop
outsb
in
adc
pop
adc
dec
dec
cltd
dec
std
in
cmpsl
lods
mov
pop
mov
mov
cld
jno
stc
loopne
pop
sub
and
in
sbb
or
or
sub
xor
int
cmc
scas
arpl
cwtl
andl
repz
dec
pop
loope
sub
mov
scas
lods
test
mov
cli
pop
jp
xor
mov
popa
sub
jecxz
inc
cmp
xor
push
shl
out
lods
mov
ffreep
push
jle
mov
lcall
idivb
mov
das
jg
insl
lods
sbb
push
mov
out
sub
xor
scas
in
lret
ja
add
cmpsl
lea
adc
pop
xchg
jmp
loop
or
roll
sbb
jne
scas
mov
or
mov
outsl
jne
pop
shl
add
call
nop
jo
int
xor
jne
mov
idivb
in
push
lock
cmp
je
daa
mov
mov
adc
scas
mov
imul
mov
jge
arpl
in
mov
jp
sbb
lds
inc
mov
out
inc
xchg
mov
sar
dec
sub
inc
pusha
sub
imul
mov
push
push
fisubl
loope
mov
xchg
cmpsl
rorl
fcoms
mul
or
adc
popa
lret
xchg
jmp
xor
dec
in
add
sub
xor
sub
or
adc
xchg
sbb
insb
sub
mov
sbb
mov
push
pop
jmp
lea
fwait
or
mov
inc
arpl
dec
and
sbb
push
mov
inc
in
iret
jne
fdivr
gs
mov
insl
daa
call
aaa
les
ficompl
das
arpl
mov
hlt
enter
out
jnp
xor
sarl
sbb
xchg
xchg
pushf
jbe
push
fcmovbe
popa
add
mov
ja
js
movsb
mov
mov
fiaddl
dec
mov
dec
in
or
loop
ja
fimuls
jp
pop
push
les
in
adc
pop
lds
mov
fwait
sub
jns
fidivrs
aam
mov
jnp
push
adc
pop
aad
cmp
sbb
shl
cmp
leave
pusha
pop
int
gs
out
pop
dec
mov
lods
jmp
cmp
xchg
sahf
jno
fstpt
hlt
das
lea
mov
in
push
cwtl
mov
dec
hlt
inc
xchg
neg
mov
bound
stc
xor
loop
dec
test
jle
arpl
daa
iret
mov
mov
call
adc
pop
andl
test
ja
sbb
and
out
cmp
mov
push
mov
sarb
imul
sub
xchg
addr16
dec
repz
push
cmp
addr16
adc
stos
call
imul
in
sahf
xlat
mov
mov
in
mov
pop
pop
nop
mov
jge
sbb
sub
dec
data16
inc
in
mov
shl
pop
push
sub
mov
sbb
inc
adc
loope
push
adc
fisubrl
and
sar
rcrl
inc
popa
mov
in
sbb
mov
sub
jnp
ret
mov
arpl
pop
jle
add
add
dec
gs
jo
lahf
out
or
imul
pop
dec
lods
lock
and
inc
lret
nop
imul
arpl
lock
xlat
jne
or
mov
out
lea
mov
loop
cmp
add
xor
mov
jl
jo
in
jne
sub
adc
jle
or
loopne
movsl
or
mov
pop
pop
hlt
dec
arpl
mov
xchg
std
adc
imul
cmpsb
sbb
pop
sub
mov
fistpl
sahf
aam
push
dec
cwtl
aaa
xchg
sti
adc
mov
shr
mov
jns
and
inc
xchg
push
dec
pop
push
xchg
push
cltd
sbb
inc
jbe
adc
push
repz
lret
xchg
or
imul
lret
cmc
or
aaa
loop
imul
cli
jns
in
js
jg
ret
arpl
addr16
jle
xor
out
mov
insb
mov
fdivrl
loop
movsb
adcl
aaa
jae
cmc
sub
cmp
mov
decl
test
stos
jmp
or
ret
popf
xor
insl
push
mov
mov
lods
add
sbb
rclb
leave
cmpsl
fstps
icebp
fsub
insb
and
sub
xor
sbb
insl
pop
lock
pop
lock
movsl
add
jecxz
sub
ss
ret
movsb
jo
xor
push
push
jmp
inc
xchg
pop
addl
or
sbb
xchg
notl
in
mov
mov
cltd
or
cmp
push
and
out
pop
lea
sub
xor
or
xchg
jns
push
add
xor
repnz
sbb
popf
ja
xor
lods
repz
outsl
iret
jp
sbb
sub
enter
fsubl
add
jo
xchg
lea
and
loopne
mov
xchg
xchg
dec
lret
mov
adc
ret
rcrb
in
jno
sbb
jno
in
out
and
std
ja
ret
jp
insb
jnp
dec
daa
xchg
adc
push
fidivl
repz
fisubrs
imul
sub
sar
sub
mov
mov
cli
fsubrl
pop
sbbl
push
cmpsl
pushf
sbb
rol
sub
popa
xor
stc
adc
mov
negl
cmp
mov
mov
jmp
shll
pop
outsb
shlb
xor
xchg
lds
and
mov
jo
xchg
xchg
lock
sub
loop
or
aam
inc
sub
js
out
imul
in
stos
idivb
insb
mov
sbb
cs
mov
add
mov
es
into
loopne
je
xchg
aad
ljmp
pop
lahf
in
push
jb
jnp
xchg
arpl
or
inc
mov
lea
xor
inc
inc
pop
and
ljmp
and
mov
sbb
or
mov
xchg
decb
add
push
xor
lods
jae
lods
dec
sti
and
out
call
push
add
xor
mov
std
dec
cs
sbb
cmp
push
imul
jae
xchg
adc
lret
or
mov
and
sub
ja
cld
lea
test
shll
or
sub
pop
jbe
mov
mov
js
mov
pop
ret
daa
jmp
and
hlt
inc
xchg
scas
dec
pop
repnz
nop
movsl
push
cmp
je
adc
daa
inc
xor
call
sub
adc
and
sub
flds
mov
mov
movsl
inc
pop
call
test
jno
pop
lahf
jg
mov
faddl
lods
push
rolb
in
test
adc
dec
pop
mov
jno
mov
push
mov
sbb
adc
and
mov
pop
loop
je
mov
sub
mov
aaa
stos
jbe
or
mov
add
xor
mov
sbb
mov
aaa
adc
call
or
jg
rcll
inc
xchg
cmc
nop
adc
mov
inc
jne
dec
cwtl
pop
loopne
outsl
sub
ret
out
aad
pop
in
mov
xchg
mov
push
ret
out
xchg
outsl
pop
ret
jge
stos
insb
rcrl
push
and
cmp
fisubs
loop
in
pop
or
mov
es
jbe
in
inc
imul
insb
in
pop
mov
jbe
add
test
cmpsl
test
mov
cld
sbb
cmc
and
ss
jno
loope
mov
mov
and
jp
dec
test
dec
xor
loopne
in
nop
push
je
adc
out
in
stos
testb
push
pop
pop
cmpsb
lock
loop
pushf
cwtl
adc
add
dec
or
repz
xchg
int3
imul
test
push
or
push
xchg
dec
jns
shl
xor
imul
je
ljmp
cs
mov
jg
sbb
addr16
fildl
mov
or
sar
incl
scas
sub
jns
repnz
jne
or
imul
push
inc
lods
shl
nop
insl
pop
popa
pop
aam
mov
into
pop
inc
and
pusha
xchg
sahf
sub
jno
jb
push
lds
imul
les
ret
es
aam
add
das
push
test
dec
mov
loop
jo
ret
enter
fnstcw
sahf
arpl
out
push
loop
test
pop
push
or
and
lea
xchg
sub
outsl
or
jbe
repnz
psubd
test
mov
adc
sbb
push
lret
jge
pop
ja
ret
movsb
testl
push
xchg
mov
or
jp
inc
and
rolb
push
test
imul
mov
inc
sub
jb
pop
mov
incb
add
es
sti
cmp
jno
jnp
mov
mov
jae
aad
clc
sbb
pop
and
xorb
leave
inc
add
dec
faddl
lahf
insb
or
dec
push
cmp
push
stc
mov
inc
pop
mov
push
lods
jge
mov
je
push
or
sub
cmp
scas
insb
imul
shr
xor
bound
mov
test
push
fstpl
or
stos
mov
inc
in
repnz
add
std
pop
adc
xchg
dec
insb
adcb
dec
fdivrl
xor
movsl
gs
inc
fs
mull
jbe
adc
mov
xchg
pop
ja
insb
loope
pop
fcompl
jmp
push
cmp
fincstp
leave
push
sarl
xchg
sub
lods
adc
mov
notl
adc
rcrb
mov
xor
and
inc
cmp
imul
jg
push
sbb
jle
iret
sbb
das
jo
sbb
ja
push
pop
fs
outsl
dec
dec
arpl
or
testl
repz
push
jge
daa
rolb
mov
testb
inc
add
imul
loopne
leave
mov
pop
push
cmp
jae,pn
lea
bound
and
mov
sbb
pop
cmp
mov
ljmp
mov
out
lret
mov
sbb
mov
lahf
dec
scas
adc
bound
fbld
fst
add
aam
inc
rcl
cmp
dec
cmp
pop
fsts
xorl
cli
sub
movsl
lods
fwait
adc
dec
pop
xchg
xchg
test
jo
dec
incl
inc
add
fsub
hlt
hlt
push
pop
aam
push
push
and
jl
jo
bound
mov
les
loop
sahf
fs
push
loopne
testl
dec
test
mov
jo
mov
ja
adc
push
inc
lea
mov
add
sar
repnz
xor
int3
notb
scas
xchg
sti
inc
sub
push
sbb
and
push
xlat
sbb
dec
movsl
cmc
mov
in
insl
xchg
adc
hlt
sarb
xor
sbb
lea
shlb
mov
mov
sbb
enter
inc
or
mov
imul
mov
arpl
ss
xchg
mov
stos
ja
adc
mov
and
je
cli
jmp
add
pop
mov
push
adc
iret
xor
cmp
out
or
adc
test
inc
daa
clc
in
mov
bound
movsb
rcrb
and
sub
into
vmulps
jno
stos
push
in
mov
sub
push
test
test
sbb
in
adc
in
mov
cltd
loop
xor
movl
ja
into
sub
add
add
scas
insb
mov
and
jbe
adc
cmp
stos
repz
iret
cmp
and
sbb
xor
jle
jl
pusha
lahf
leave
dec
lods
pop
scas
lea
adc
mov
jp
loopne
out
aam
mov
stos
sbb
into
xor
lds
iret
jae
stc
aad
fimuls
dec
sbb
in
fldenv
inc
je
mov
lcall
mov
xchg
sahf
hlt
cmp
lds
cmpsb
push
int
divl
push
jmp
loop
bound
daa
aam
adc
lahf
push
scas
jno
and
or
shr
es
pop
mov
xor
fstp
bound
data16
pop
int
out
leave
into
inc
adc
mov
ffreep
cmp
insl
inc
sub
insb
dec
push
add
sub
mov
stc
cmp
clc
dec
loopne
add
fidivl
fcomps
adc
cmc
sub
or
in
and
adc
daa
cwtl
or
cmpsl
dec
loopne
fisubrl
les
nop
or
jns
or
jmp
sbb
test
jp
jbe
xor
loope
dec
in
rcl
fsubrl
push
lahf
xchg
aam
pop
shld
daa
scas
pop
lret
push
xor
test
scas
pushf
les
pop
imul
or
test
das
hlt
mov
repnz
hlt
bound
mov
dec
outsl
or
loop
jbe
into
cmpsb
and
sbb
push
and
pop
lods
lds
into
das
lds
ror
pusha
pop
mov
push
pop
out
xor
out
and
push
add
insb
sub
push
out
sub
lods
and
into
rolb
or
int3
sub
xchg
mov
sub
fists
xchg
sub
xor
in
inc
adc
imul
out
adc
aam
data16
dec
push
mov
and
das
lods
popf
sub
in
inc
adc
dec
or
aad
and
insb
inc
divl
mov
jne
jmp
push
pop
mov
jae
out
dec
movsb
scas
adc
jecxz
mov
aaa
xchg
and
push
and
bound
out
call
fbld
mov
fldcw
sub
jno
and
sub
push
lahf
jg
lea
inc
in
ret
adc
mov
adc
andb
jecxz
or
inc
popf
test
popf
sbb
ds
jbe
xor
xchg
push
sbb
or
mov
es
push
sub
or
sub
fcomip
cmpl
scas
mov
pop
int3
icebp
stc
dec
jnp
xor
push
imul
decb
jns
pop
lea
push
orb
lahf
jp
jne
jg
jle
mov
jne
sub
add
lods
ds
jae
adc
mov
mulb
roll
pop
push
test
mov
dec
scas
lock
ret
or
mov
es
andl
inc
add
mov
fadds
push
insb
in
jae
mov
arpl
outsl
shll
add
sahf
xchg
pop
fisubs
and
cs
data16
leave
jge
movsl
mov
aad
pop
imul
sbb
jl
mov
cmpsb
or
mov
cmp
inc
sbb
dec
gs
xchg
sub
lds
jno
fmull
add
adc
std
and
jmp
call
push
mov
mov
data16
in
fwait
sbb
adc
out
pop
pop
push
and
je
mov
mov
push
xchg
movsb
add
xorl
not
pop
xor
cmpsl
xchg
insl
pushf
scas
adcl
clc
imul
test
and
jle
imull
loop
dec
mov
jle
jp
pop
push
in
cli
and
jl
dec
or
fcoml
outsb
pop
jns
xchg
filds
fdivl
scas
push
js
pushf
ret
xor
pusha
jns
sbb
xor
shll
imul
rcl
arpl
test
or
jecxz
jmp
out
mov
pop
les
push
repnz
clc
es
cmp
ja
ja
out
inc
lea
rolb
mov
sbb
lods
push
popf
dec
test
lea
in
inc
adc
sahf
mov
sbb
mov
sahf
inc
jns
pusha
push
push
les
fisubrs
in
cli
aad
mov
sub
add
jb
adc
push
push
sub
cmp
cs
sub
int
lahf
pusha
aam
pop
mov
sbb
loop
and
or
pop
les
xchg
sahf
sbb
enter
cmpb
leave
scas
mov
imul
jmp
lahf
jl
mov
fs
outsl
fdivrl
push
dec
mov
dec
xchg
mov
mov
mov
and
xchg
aad
xor
es
inc
movsb
mov
popf
out
mov
inc
jae
jbe
pop
push
mov
insb
mov
rcrl
aaa
in
jle
add
imul
outsb
inc
arpl
jmp
lahf
mov
mov
imul
xorb
js
mov
cmp
pop
cwtl
push
and
jecxz
insb
push
das
rorl
orb
ret
sti
mov
push
push
xor
popa
insl
add
adc
lds
sahf
or
fsubrl
cmpsb
jl
std
dec
and
and
lods
xor
mov
aad
daa
sbb
in
jg
sub
in
out
mov
je
in
insb
cli
adc
mov
xchg
sti
cmp
xchg
inc
push
sti
int3
outsl
mov
mov
sbb
mov
mov
into
frstor
es
mov
push
fcmovne
lods
xor
adc
aam
mov
lret
mov
mov
out
negl
cmp
cmp
ss
aam
xchg
mov
pusha
inc
notb
arpl
adc
fmuls
mov
mov
outsb
arpl
mov
jns
lods
cmp
cmc
ficomps
and
mov
sub
outsb
imul
or
push
sub
fwait
ja
aas
mov
jbe
ret
jl
push
and
insb
cmp
je
dec
sub
mov
movsl
enter
das
pop
mov
in
pop
les
daa
pop
jecxz
test
repnz
repz
scas
xor
sahf
mov
push
inc
fmulp
data16
fadds
gs
dec
adc
xchg
icebp
sbb
pop
push
test
fmuls
and
sar
or
sbb
leave
bound
lock
stos
fstpl
xchg
hlt
sbb
in
mov
movsl
mov
jbe
repz
cmp
jmp
jb
out
or
mov
lea
scas
sbb
stc
outsb
sahf
sub
mov
pop
inc
lock
shlb
or
pop
imul
lea
add
mov
je
push
mov
lea
sahf
loopne
mov
pop
scas
lret
stos
cmp
sub
cmpsl
mov
enter
sub
cmp
cmp
cwtl
jo
test
inc
pop
sti
ret
jnp
insl
fisttpl
mov
mov
andb
out
dec
andb
push
sbb
imul
xor
insb
call
xor
push
clc
adc
add
pop
pusha
pop
and
mov
mov
test
test
xchg
pop
inc
ds
cmp
sbb
jge
movsb
jne
out
xchg
jmp
addr16
jmp
push
inc
lgs
lcall
cld
fidivrs
push
push
fwait
push
lea
jl
pop
sbb
lods
adc
xor
jmp
dec
add
bound
hlt
adc
loope
repnz
das
mov
add
fsubrs
mov
stos
mov
bound
jb
sbb
jns
pop
and
push
mov
faddp
loop
and
ret
lods
pop
mov
xor
in
add
dec
pop
xchg
cs
das
pop
add
aam
jge
mov
dec
leave
xor
adc
stos
push
cmp
pop
sbb
mov
and
rcll
fwait
inc
mov
outsb
xchg
dec
lea
loop
pop
mov
sbb
pop
xchg
bound
and
pop
jl
fs
inc
adc
popf
pushf
pop
mov
test
pop
xchg
jecxz
lea
aam
dec
push
or
dec
cmc
pop
xchg
lret
in
or
push
orl
mov
jae
mov
inc
cmp
les
lret
xor
lea
out
add
das
in
imul
sbb
or
fsts
xor
loop
sti
push
pop
in
mov
enter
hlt
stc
das
jne
push
cmp
xor
cld
pop
out
lods
add
push
xorl
fnsave
pop
in
mov
rcll
jo
jecxz
pop
out
jns
adc
jmp
fxtract
sbb
mov
dec
push
jb
push
mov
cmpxchg
lock
rcrl
jno
mov
xor
push
pop
fwait
adc
mov
repnz
stos
mov
cwtl
ss
hlt
rcll
jne
ljmp
sbb
mov
inc
sub
dec
cmc
jno
testb
sub
je
cmp
mov
pop
mov
popf
lret
or
mov
push
jno
int3
jp
lret
int
mov
sahf
nop
inc
xchg
mov
mov
je
mov
aas
push
inc
xchg
ficompl
xor
ja
pop
jp
xchg
sbb
inc
xlat
pop
sbb
pop
out
or
dec
and
iret
dec
xchg
and
adc
imul
jae
in
aam
shl
xor
ret
pop
gs
adc
stc
int
sti
loopne
mov
loopne
rclb
jae
xor
paddusb
sti
xorb
loop
jno
mov
xorb
sbb
imul
push
es
xor
insb
push
out
js
mov
test
lea
mov
mov
in
add
xlat
mov
cmp
sub
enter
mov
out
outsl
jmp
xchg
popf
jns
daa
test
sti
inc
out
inc
or
int
aas
inc
cmpsb
ss
add
mov
hlt
popf
push
sbb
mov
addr16
push
sbb
adc
pop
xchg
loope
jmp
sti
adc
jno
vpsubsw
hlt
test
adc
cmpsb
repnz
mov
sub
cld
pop
in
inc
and
inc
fisttps
lea
pop
testl
or
rcll
xlat
xor
xchg
dec
enter
jge
shr
cmp
int
arpl
inc
xor
mov
push
xchg
or
stos
insl
jnp
pop
mov
and
pushf
xchg
mov
or
into
insb
jbe
notb
jbe
xor
fisttps
push
xor
add
jmp
mov
mov
xchg
sysenter
push
jecxz
pop
push
xchg
mov
cmp
or
xor
leave
mov
mov
das
hlt
or
loope
inc
insb
mov
into
lret
mov
lock
mov
jne
xchg
or
cli
jmp
mov
hlt
mov
mov
inc
rcrb
jge
xor
jge
stos
adc
mov
jo
cs
jo
fs
xor
sbb
js
mov
enter
jle
ret
mov
jo
ror
push
fdivrs
pop
cmp
dec
je
popf
jmp
and
lahf
cmp
data16
fidivs
mov
fwait
clc
jnp
sub
adc
mov
lahf
std
xchg
xchg
push
lcall
sbb
mov
lea
fdivrl
sbb
repz
lcall
pop
jae
lret
and
push
pop
cli
fwait
adc
push
mov
mov
loopne
inc
adc
push
je
push
shll
test
outsl
mov
mov
mov
jmp
test
ss
loop
jb
imul
daa
sub
out
arpl
lds
jnp
cmpsb
stos
insb
bound
xor
insl
fmul
in
lea
xor
enter
jmp
icebp
pop
movsb
lahf
pop
adc
adc
scas
movsb
mov
mov
mov
push
xchg
pop
test
hlt
dec
in
mov
in
dec
mov
xchg
out
jle
mov
aad
or
sub
or
movsl
lea
rorb
repz
add
gs
popa
call
cmpsb
in
adc
add
enter
pop
inc
sbb
mov
clc
or
xchg
jg
mov
xor
in
pop
fcom
inc
iret
hlt
imul
mov
sub
inc
pop
sti
push
enter
sub
shll
sub
repz
mov
cmp
shl
sbb
test
data16
cmp
in
ret
jnp
mov
mov
lea
fildll
pop
lret
cld
or
pop
imul
std
mov
mov
sbb
lods
and
sahf
mov
std
into
or
popf
arpl
cmp
js
pop
jg
sub
popa
mov
xchg
inc
jmp
inc
stos
bound
iret
inc
sub
or
cmp
call
fwait
pop
addr16
repnz
add
or
xchg
inc
inc
out
xorl
add
lea
xchg
in
jecxz
cmc
sahf
ja
pop
mov
fdivr
mov
xchg
loope
scas
mov
inc
lret
or
mov
pop
insb
das
jp
icebp
or
in
push
push
jae
lret
dec
adc
adc
popa
xor
lea
sbb
push
push
cmc
or
lret
mov
pop
mov
rcll
in
or
mov
test
push
aaa
xor
push
stc
rclb
push
mov
push
cld
jl
and
pop
or
test
mov
imul
mov
pop
lea
xor
or
xor
pop
shll
test
test
cmp
or
adcl
pusha
pop
mov
push
sbb
add
inc
cmc
xchg
int
xchg
imul
push
ret
adcl
scas
rclb
nop
pushf
cmp
cmpsb
mov
fnstenv
movsl
in
das
ja
popaw
adc
and
and
cmc
mov
xchg
cmp
test
jno
loopne
in
popa
lea
add
popa
inc
dec
das
mov
pop
jns
sbb
jbe
jb
inc
lcall
imul
push
jne
cmp
data16
jle
outsb
out
test
les
mov
pop
cli
inc
imul
inc
push
fucomp
dec
in
nop
jne
or
mov
dec
jg
inc
or
and
fstpt
mov
jmp
ljmp
dec
and
js
jo
and
jne
push
add
sub
dec
incl
loope
lea
fldt
enter
push
lcall
cwtl
mov
fs
jl
sbb
cmp
test
mov
hlt
shrb
rcll
jae
test
mov
jle
movsl
pushf
or
imul
jle
sub
imul
hlt
leave
mov
mov
lock
xor
aas
dec
insl
pop
jae
aad
pusha
mov
pop
cltd
cmp
sub
inc
ret
lods
mov
mov
imul
lods
and
or
jmp
and
ss
dec
pop
int
mov
test
addb
and
sub
loop
ja
cli
mov
dec
loop
scas
xor
mov
shrb
clc
xchg
xchg
xor
mov
sbbb
int
test
mov
dec
sti
sbb
sarl
je
jb
sbb
push
insl
mov
daa
inc
xor
mov
jmp
and
xchg
in
in
mov
dec
xchg
test
adc
or
in
lahf
inc
mov
cmpb
lods
lahf
add
jbe
xchg
adc
insl
cmp
out
lods
sub
pushf
stos
cmp
mov
add
mov
pusha
ret
push
in
lret
imul
hlt
push
jno
jmp
je
or
imul
sub
jbe
jns
hlt
dec
repnz
mov
lods
jle
test
popf
mov
push
lret
aaa
cmp
jg
daa
and
das
in
push
pop
lea
sbb
push
mov
mov
jae
and
mov
pop
icebp
ret
popa
xchg
int3
dec
push
and
dec
push
lcall
push
aad
jle
cmp
mov
test
push
outsb
and
mov
lcall
push
and
shl
fidivl
mov
mov
dec
or
jecxz
icebp
xor
mov
daa
sti
mov
stc
pop
imul
leave
sub
mov
jecxz
cmp
mov
inc
cwtl
mov
imul
inc
pop
mov
xchg
push
push
out
mov
pop
pop
xorl
mov
jnp
scas
push
and
popa
add
data16
out
mov
pop
xlat
push
je
xor
stc
xchg
mov
out
add
out
xchg
cltd
jbe
and
arpl
xlat
dec
sub
lahf
and
dec
mov
je
sbb
fwait
and
out
push
inc
dec
add
es
sub
cmp
mov
jnp
rcrb
je
push
in
jbe
popf
std
jecxz
popa
dec
popf
xchg
xorb
xchg
rcr
xor
les
mov
mov
and
mov
fsubl
sbb
sub
fwait
sub
test
or
mov
push
arpl
mov
movsl
xchg
jo
mov
mov
sbb
subl
cmc
cmp
loop
lds
cmc
dec
push
mov
sub
inc
cmp
in
push
xchg
bound
adc
add
fdivr
jae
jl
insb
lea
xchg
in
dec
lahf
sahf
mov
mov
mov
fsubr
loop
loope
sbb
add
inc
mov
dec
xorl
or
mov
pop
lods
dec
pop
dec
or
inc
adc
push
pop
jne
mov
arpl
adc
mov
pop
xchg
dec
out
and
das
aas
rolb
lcall
leave
jae
jbe
pop
std
cmpsb
outsl
setno
cmp
leave
mov
mov
lock
fistps
mov
testb
jge
mov
outsb
or
rcll
lea
xchg
xchg
xchg
add
pop
dec
cmp
outsl
mov
movsl
lods
inc
addb
or
lock
sbb
pop
mov
xchg
ja
and
push
jmp
sahf
push
push
sub
sbb
xchg
fwait
cmp
test
cmp
mov
push
mov
in
sub
mov
int
scas
lods
mov
pop
mov
or
and
xorl
gs
push
push
pop
push
xlat
popf
aas
adc
and
int3
arpl
insl
xchg
xchg
lahf
popa
mov
jg
sahf
mov
imul
fcomps
lret
sub
rorl
and
push
mov
dec
sbb
je
lahf
in
fwait
in
xchg
jg
and
test
and
lcall
ret
and
js
idivl
or
xchg
add
imul
mov
pushf
aad
xchg
addl
lret
aas
sbbl
lea
or
imull
mov
fiaddl
mov
bound
loop
cld
dec
es
in
add
or
mov
mov
jae
jmp
test
and
xchg
xchg
and
sub
rclb
cli
dec
pop
lods
sub
lds
inc
dec
add
push
in
aas
mov
jle
mov
cmp
xorl
pop
xchg
fcmovnbe
push
jne
fdivrl
paddsw
aas
fstl
pop
jns
dec
out
push
pop
mov
and
bound
push
pushf
out
loop
adc
rcrl
lea
mov
je
pop
dec
fdivl
jne
enter
nop
add
clc
daa
sub
and
pushf
jne
cltd
push
pusha
fstl
dec
lock
cmp
stos
jb
jae
and
rorb
mov
outsl
into
add
out
jne
lret
xchg
lods
mov
movsl
xor
insb
lds
arpl
fmull
and
fldenv
jae
ss
pop
addb
push
inc
xchg
in
shrb
scas
jns
adc
inc
cwtl
cmpsl
lock
mov
mov
pop
hlt
lea
fsubs
popa
in
mov
cmp
mov
mov
lods
mov
lea
adc
and
mov
jnp
lret
cmp
jae
mov
movsb
mov
pop
xchg
fiaddl
or
pop
push
fwait
inc
loope
leave
ljmp
xor
in
sub
adc
sbb
dec
mov
adc
mov
loop
adc
loopne
push
adc
es
gs
in
dec
xor
add
xchg
jge
dec
add
imul
arpl
cmp
test
xchg
in
and
pop
es
sbb
and
sub
xchg
ret
xchg
xchg
sbb
adc
mov
data16
add
mov
repnz
dec
cli
lahf
js
ss
test
xor
pop
es
lods
push
xor
push
fbld
mov
aaa
ret
xor
fbstp
sbb
xchg
in
cmp
shll
xchg
daa
pop
xchg
xchg
shll
sub
hlt
push
aad
fucom
lock
nop
les
js
in
hlt
sahf
sub
or
lcall
sbb
ficomps
cmpsb
icebp
sbb
movsb
mov
mov
nop
stos
icebp
pop
jmp
mov
imul
mov
jns
xor
loopne
cmp
xor
idivb
js
negl
xlat
xchg
insb
mov
test
fisttpll
ret
divl
xchg
lea
fdivrs
test
orb
leave
icebp
je
aaa
bound
add
mov
jmp
xchg
dec
shr
out
imul
loopne
repz
in
and
push
xor
mov
jbe
push
loop
fistl
fsubs
outsb
push
dec
mov
inc
iret
movsb
in
inc
pusha
mov
sbb
mulb
adc
push
int
push
jae
std
adc
insl
stc
aas
push
js
adc
or
cld
xor
pop
rorl
sti
xor
sbb
sbb
data16
pop
pop
aad
jl
cmp
cmp
adc
mov
dec
in
test
mov
lret
mov
popw
lea
xchg
fwait
cmpb
enter
in
sbb
inc
add
insl
rcrl
inc
mov
xchg
or
movsb
in
sahf
mov
push
imul
insl
das
stc
ret
dec
jnp
inc
jmp
jecxz
xchg
pop
sub
push
popa
push
stos
idivb
into
push
mov
mov
movsl
cld
sahf
sub
dec
fldcw
add
mov
sbb
inc
lea
add
in
jg
je
push
add
and
mov
sbb
ljmp
inc
mov
test
inc
pop
iret
xor
aaa
out
or
sbbb
jmp
in
lea
sub
out
movsl
fs
xor
inc
fimull
ror
xorb
cmc
and
ss
enter
nop
lret
sub
dec
lea
fimuls
push
inc
push
inc
hlt
je
insb
jno
fsubl
repz
add
in
and
sub
negl
and
pop
mov
rclb
fdivl
lea
add
clc
sub
pop
jae
add
jle
cmpsb
adc
or
dec
and
pusha
mov
mov
outsl
mov
dec
adc
xorl
mov
mov
js
and
add
pop
mov
sub
sub
cmp
and
xor
and
stos
cmp
xchg
lock
xor
shrl
mull
sub
xchg
dec
or
int
lea
in
push
xchg
push
cwtl
push
sbb
jae
or
out
clc
pop
leave
js
adc
and
ss
out
dec
subb
mov
dec
mov
lcall
rol
xchg
push
mov
mov
cmp
loopne
jno
icebp
xchg
jp
ss
daa
or
daa
jno
addr16
mov
pop
popa
fdivrl
mov
mov
inc
mov
xor
cwtl
sbb
std
adc
mov
imul
or
outsl
test
jo
ljmp
out
push
jb
fwait
mov
loop
inc
lock
andl
jge
scas
and
sub
xchg
loopne
add
stc
jo
and
push
dec
jns
dec
mov
ja
xchg
and
dec
adc
shl
push
aaa
cli
mov
jge
inc
sahf
gs
daa
sbbl
call
loop
cmp
orb
and
shlb
jle
hlt
push
push
jb
cmp
push
shl
jo
mov
xchg
pop
int3
into
hlt
repz
testb
adc
dec
sbb
mov
xor
loop
cltd
insl
hlt
or
sar
sub
sub
and
aaa
pop
jo
push
mov
stc
rcrl
inc
inc
pop
mov
test
mov
mov
jge
jno
cli
shl
shl
mov
xor
xor
test
jnp
add
jmp
shr
sub
dec
xor
movsb
xchg
cmovs
in
mov
data16
mov
xchg
xor
fcoms
xor
and
andl
mov
fs
and
pop
sub
inc
insl
enter
ret
jne
mov
jno
sub
or
pushf
lea
dec
xor
jmp
mov
ja
pusha
xorl
js
cmpsl
and
ss
xor
cmp
push
lret
inc
adc
test
in
xlat
and
data16
jno
rcll
pop
filds
aaa
shl
dec
dec
sahf
cvttps2pi
and
shlb
cmp
in
or
lret
lods
gs
cmp
cli
inc
in
cmp
dec
inc
mov
movsl
mov
divb
pop
mov
add
push
cmp
mov
push
sub
mov
lret
icebp
sbb
add
not
imulb
aam
mov
lea
in
lods
faddl
mov
xor
subb
and
bound
mov
aas
test
push
cs
cs
push
xchg
aas
lret
es
fdiv
lret
jnp
sub
or
xlat
leave
shlb
push
repnz
repz
add
pop
jmp
mov
pop
push
pop
mov
in
sbb
enter
inc
lret
sbbl
xchg
dec
movsl
lds
xchg
aas
dec
aam
and
pop
push
inc
xchg
sub
xor
filds
out
adc
in
fadds
in
jle
pop
mov
sub
das
lock
pop
clc
inc
repz
jmp
adc
cmp
and
js
fisubrl
jbe
jecxz
sbb
lock
jbe
fisubl
out
mov
pop
push
in
mov
adc
movsl
ret
imul
jae
xor
pop
je
stos
and
cmp
pop
jmp
pop
stc
arpl
repnz
xor
mov
and
dec
test
and
push
jp
dec
sub
xchg
sbb
xchg
jns
jae
call
mov
sbb
loop
or
test
adc
mov
mov
movsl
adc
xchg
iret
iret
pop
and
mov
push
xor
popa
ja
inc
sahf
es
dec
fisttpll
mov
lods
push
fwait
cmp
mov
scas
push
sbb
call
ficoml
adc
cli
jns
jecxz
imul
aas
pop
das
cld
pushf
pop
adc
movsb
les
xchg
mov
and
mov
imulb
cmp
push
pop
mov
cmc
mov
in
shll
fistps
sub
sbb
add
and
int
repnz
pop
lea
test
in
or
mov
loop
xor
clc
ja
mov
pop
mov
inc
push
movsl
in
push
imul
inc
xor
jle
jg
pop
xchg
push
and
lea
mov
dec
sbb
orb
out
fbstp
xchg
cmpsb
ja
jb
or
sub
inc
sub
in
xlat
jno
lea
rcl
cmp
mov
and
inc
daa
xor
add
dec
enter
jnp
cli
icebp
data16
fwait
pop
out
inc
xor
hlt
push
mov
mov
loope
xor
mov
sbb
sbb
jnp
pop
inc
and
pop
mov
out
or
shl
orb
leave
lret
mov
or
ret
adc
lret
sub
hlt
fstpt
mov
or
loope
sarl
les
out
jge
das
stos
mov
sahf
adc
adc
mov
in
inc
dec
das
xor
in
push
sub
sub
or
jo
mov
cmp
scas
push
fcomip
ds
jmp
jg
dec
xorb
mov
and
add
and
sub
arpl
mov
pop
pop
jne
sbb
mov
and
popf
xchg
je
subb
je
and
mov
ljmp
xorl
in
rcll
push
rcrb
sub
std
jle
mov
lsl
mov
mov
inc
inc
cmp
iret
nop
cmp
lcall
mov
inc
push
call
mov
sbb
pop
in
das
lcall
imul
jo
scas
std
arpl
test
cli
xor
mov
sub
in
fldln2
and
xor
jg
loope
stc
push
popf
iret
iret
mov
js
call
rorl
dec
flds
jp
iret
mov
pop
jns
rcrl
push
enter
ja
lcall
add
add
sub
add
or
pop
xchg
pop
fcomps
jp
dec
cld
jae
outsb
mov
sbb
je
testl
mov
out
stc
lock
in
jmp
sbb
scas
out
sbb
push
sbb
mov
enter
sbb
test
mov
insl
sbb
push
test
mov
fucomi
insb
jle
mov
mov
mov
les
lods
fstl
mov
test
dec
orl
lea
and
lahf
loopne
lds
in
in
add
jl
mov
add
shl
push
push
test
jno
cmpsl
cmp
and
dec
in
dec
inc
cmp
mov
inc
ss
pop
xchg
fld
addr16
push
scas
popa
push
sbb
sub
sub
mov
pop
mov
test
cmpsb
cmp
push
pop
imul
adc
loope
cmp
and
nop
sub
les
xlat
gs
add
cwtl
inc
shr
ljmp
or
jmp
xchg
cmp
movsl
add
or
inc
jne
pop
sahf
and
pop
adc
xchg
jno
push
xchg
sbbl
leave
and
inc
clc
sub
push
jmp
jnp
jne
sub
fbld
stos
out
mov
mov
ljmp
add
mov
clc
sub
jge
jmp
pop
sub
sub
or
push
clc
shrb
mov
push
xor
loop
push
ja
repnz
inc
fs
sub
inc
xor
and
mov
mov
mov
xor
out
mov
xchg
dec
adc
sub
rcll
out
call
jo
shl
mov
ja
jb
pop
mov
loopne
aam
test
icebp
push
jl
dec
xlat
insb
iret
je
dec
mov
std
jb
sbb
les
decl
or
or
jg
shlb
loope
loop
mov
mov
xchg
popa
xchg
das
pop
xor
jp
sub
ret
mov
fadds
fcoms
pop
ret
mov
jmp
cmp
stc
js
sahf
lods
push
fwait
pop
fbld
jbe
ljmp
and
pop
xchg
jmp
xchg
mov
pop
in
sbb
adc
int3
mov
cli
or
adc
add
adc
pop
push
lahf
mov
jae
sbb
push
hlt
imul
sub
mov
or
nop
movsb
or
sub
dec
xchg
jmp
jp
xor
popa
mov
jno
ja
loop
icebp
fcompp
adc
in
push
adc
and
mov
lods
pslld
cwtl
or
jae
rolb
push
jmp
sti
jae
inc
test
pop
pop
or
add
or
mov
pop
pop
sti
aaa
push
sub
sti
pop
stos
mov
repnz
std
jne
pop
cmc
in
pusha
jb
or
sub
lds
push
jmp
push
les
stc
int3
mov
rorb
xor
mov
ss
pop
jge
cmp
mov
mov
inc
ds
sub
fsubl
loope
and
xor
add
mov
fwait
ljmp
fisttps
pop
hlt
add
cmp
xor
mov
in
or
cltd
pop
out
in
sbb
inc
inc
bound
xchg
add
or
sbb
es
xchg
sub
mov
inc
roll
xchg
and
jno
mov
fldcw
xchg
in
stos
cmp
in
insl
fistpl
pop
push
mov
outsl
mov
push
insl
dec
mov
push
sbb
rcrb
adc
push
or
cmpsl
test
fsubrl
xor
in
cmp
mov
dec
cmp
sti
fsubr
sti
je
mov
dec
mov
jg
outsl
mov
sti
cmp
es
lret
jl
adc
and
in
test
pop
xchg
dec
insb
repnz
inc
jnp
mov
push
mov
test
sbb
add
mov
mov
inc
cmp
lea
pusha
inc
movsb
lds
popa
add
jno
iret
lcall
mov
pop
push
pop
iret
push
xor
arpl
lods
dec
mov
shlb
ficoml
lea
push
fsubs
stos
jns
jmp
sub
out
xor
hlt
adc
pop
mov
aad
mov
and
loop
cltd
loopne
mov
inc
jo
aaa
fucompp
stos
mov
push
rorl
xchg
imul
mov
ud0
loope
mov
push
inc
xor
repz
rolb
cwtl
and
jae
aaa
repnz
xchg
push
int3
push
arpl
pushf
lea
sbb
fbstp
stc
mov
pop
xor
push
inc
push
aaa
imul
xchg
mov
xor
dec
sbb
rorl
xchg
pop
cmpsl
cmp
cmp
jecxz
lods
fs
adc
sub
nop
xor
add
mov
dec
in
and
lds
and
lods
in
inc
jp
mov
inc
mov
push
lock
out
test
popf
sbb
mov
and
cmpsb
insb
push
mov
data16
mov
dec
mov
lahf
push
mov
fbld
pushf
add
movsl
arpl
mov
ja
or
fsubs
aam
lods
pop
loop
or
mov
xlat
xchg
insl
les
mov
inc
std
push
mov
jmp
icebp
mov
call
push
sub
mov
mov
sub
jns
mov
xor
lret
ja
hlt
arpl
icebp
in
arpl
dec
mov
inc
in
mov
dec
fildl
cmc
sbb
push
adc
test
dec
in
std
scas
stos
andl
lds
push
push
sub
es
adc
adc
dec
jbe
xchg
inc
mov
inc
lret
adc
and
adc
push
mov
notl
or
sub
dec
pop
or
fidivl
sti
dec
call
call
lret
inc
sub
hlt
or
add
jbe
jp
mov
fsubr
mov
daa
inc
mov
divb
pop
push
dec
sbb
jg
mov
inc
data16
test
call
mov
xchg
imul
and
iret
shrl
mov
sbb
in
mov
fs
movsl
push
leave
jo
push
sub
call
ljmp
cmpsb
inc
cltd
mov
scas
sub
mov
mov
popa
pop
loope
jmp
stc
mov
cmc
mov
xchg
xor
mov
jmp
adc
adc
jnp
addr16
inc
popa
lret
xor
mov
lock
dec
jmp
cltd
inc
scas
pop
sub
sahf
test
adc
test
push
rcr
loop
divl
cmp
lcall
cltd
cmp
mov
push
loopne
ss
jmp
insb
and
rorb
je
xchg
mov
or
shrl
arpl
mov
and
mov
loope
jns
push
sbb
add
mov
jns
aam
stc
ret
ss
jae
fisttpl
insl
dec
push
out
mov
dec
outsl
stos
mov
and
pop
or
shl
sbb
rdtsc
mov
jl
sub
xor
inc
inc
ret
test
nop
mov
pop
add
fs
mov
mov
shl
jecxz
pop
fsubl
daa
pop
jo
mov
lds
loope
inc
test
adc
int3
andb
fbstp
mov
xor
mov
aam
fstl
sub
mov
sbb
inc
ja
repnz
lea
nop
mov
push
jb
mov
jge
jle
dec
fcompl
push
add
inc
sbb
mov
dec
mov
mov
sahf
mov
mov
movsb
mov
cltd
bound
mov
mov
xor
jne
mov
es
in
mov
pop
int3
mov
and
mov
jns
xchg
idiv
xor
jne
push
or
mov
shll
shll
inc
movsb
sbb
lcall
out
ljmp
push
jmp
sub
push
or
push
dec
daa
lcall
cmpsl
push
rolb
xchg
inc
popf
push
mov
lret
fcoml
fld
push
hlt
shll
fistps
or
sarb
adc
neg
fs
sbb
icebp
je
hlt
jecxz
mov
sarl
mov
mov
push
mov
dec
jp
iret
pop
inc
enter
in
mov
add
in
sub
xlat
stc
jmp
xchg
mov
xchg
inc
xlat
jno
push
dec
cmpsl
cwtl
test
cmp
xor
mov
mov
pop
es
mov
jae
dec
mov
inc
inc
xor
pop
pop
mov
xchg
aad
movsl
loopne
pop
push
push
inc
cld
fwait
push
push
xlat
loop
add
mov
je
push
pop
cltd
stos
mov
lcall
std
push
jno
cltd
push
and
cmp
cmpsb
sub
clc
sbb
jo
mov
xlat
movsl
xchg
pop
or
pop
and
fs
push
adc
jae
fdivrl
mov
ss
push
pushf
and
push
in
jp
fildl
insb
out
xchg
and
push
jle
xor
bnd
adc
cwtl
xor
or
push
sub
push
jb
mov
mov
aaa
repz
movzbl
out
jp
cmc
icebp
mov
in
jae
adc
insb
inc
fidivs
push
pop
pushf
adcl
adc
jne
ljmp
sub
nop
xchg
push
stos
popa
dec
andb
mov
stos
popf
lea
js
ret
or
movsl
add
push
add
adc
xor
mov
int
sub
add
dec
jb
jecxz
xchg
cmc
jb
xorb
xor
outsb
cmp
test
into
mov
lea
loopne
insl
lcall
cmp
cmpl
gs
pop
jo
inc
cmp
xchg
xchg
out
inc
gs
in
mov
and
mov
jecxz
vsqrtss
into
lods
mov
call
dec
outsb
or
and
cmp
xlat
sbb
dec
adc
cmp
sbb
enter
sbb
mov
sub
notb
nop
xchg
dec
enter
jl
push
decb
sbb
loop
dec
pop
jl
xor
inc
inc
fadds
and
mov
xchg
sbb
jo
outsb
leave
jo
lahf
sub
ret
push
bnd
or
dec
push
adc
push
lret
lods
dec
mov
inc
inc
fisttps
xor
xor
xor
outsl
fildl
jmp
insl
lea
jge
xchg
and
int
rclb
sbb
add
mov
aad
push
pop
dec
into
inc
jb
fidivs
pop
repz
in
imul
sub
xor
sub
push
data16
push
sarl
insb
dec
cld
jl
dec
sahf
outsb
fwait
in
jbe
sbbl
nop
add
push
pop
in
decl
repz
lds
bound
sub
pop
int3
dec
push
inc
lret
ret
sub
xchg
xor
add
and
or
jno
mov
mov
dec
jl
and
mov
insl
lret
mov
push
hlt
jmp
pop
loope
mov
pop
hlt
data16
mov
pop
jecxz
nop
mov
or
xchg
cwtl
in
fldcw
loope
aam
pushf
add
addl
rorb
cmpsl
mov
lcall
imul
pop
or
ja
xchg
aaa
loopne
shlb
dec
imul
or
loopne
adc
mov
jno
dec
ret
jne
repnz
lahf
popf
jo
rcl
lods
push
pop
sub
xchg
into
xor
dec
add
andb
aam
pop
insb
xchg
adc
ljmp
add
test
mov
inc
pop
push
hlt
scas
fidivs
fwait
ljmp
xor
dec
mov
insb
and
push
stc
movsl
mov
jle
xor
fnsave
jl
loopne
mov
and
jae
outsl
xor
outsb
enter
jmp
aad
push
mov
out
sbb
cmp
pop
xchg
sbb
in
sub
jecxz
dec
cmp
jns
loop
adc
mov
das
inc
arpl
ja
pop
mov
mov
gs
addr16
mov
dec
stc
out
xlat
fstps
fisubrl
pop
and
fcomps
mov
test
add
and
in
inc
mov
push
js
inc
inc
mov
and
jns
mov
ja
push
mov
push
push
pop
pop
adc
lods
lods
inc
xor
xor
and
jb
subb
daa
xor
jns
fadd
mov
push
cmp
sbb
xchg
lds
aam
xchg
adc
dec
mov
add
or
mov
sbbl
scas
clc
jg
cltd
test
sbb
or
and
int3
inc
test
mov
sub
mov
inc
dec
pop
out
negb
mov
jae
mov
aas
mov
or
mov
push
gs
cmc
pushf
mov
ret
mov
sub
xlat
fcoml
mov
xorl
sahf
push
nop
mov
lock
lods
cmp
adc
insl
and
dec
in
pop
mov
test
out
leave
push
lea
shll
fbstp
and
imul
in
and
inc
cmc
rorb
jg
adc
mov
ja
jb
loopne
jae
xchg
bound
adc
sarb
mov
jne
jg
push
fwait
xlat
sbb
jl
lds
in
jp
pop
cwtl
xchg
movsb
repz
jo
xor
jg
test
adc
insb
cmp
mov
inc
inc
push
push
and
jecxz
xchg
dec
xor
lock
es
in
sub
or
ficompl
sti
jo
dec
movsl
inc
sub
sahf
out
sti
add
and
aaa
stos
popa
and
popf
xor
movsl
arpl
mov
xor
out
sbb
mov
js
xchg
fstl
push
adc
jle
xchg
push
xor
jecxz
cmp
adc
sub
fstpl
inc
cmpsb
js
jnp
and
xorb
add
cs
push
sub
xor
out
js
xor
pop
pop
jae
cmc
inc
xchg
ljmp
das
mov
jmp
and
xchg
xor
pop
and
pop
dec
dec
repnz
lret
jae
cmp
and
test
adc
sarl
jnp
inc
ss
rclb
das
aad
sub
jl
ljmp
mov
or
sbb
xchg
fcompl
jb
adc
je
and
dec
inc
gs
aaa
adc
in
mov
icebp
test
xor
sub
repnz
aas
sti
jae
jp
aad
cmpsl
sbb
mov
pop
popf
insl
mov
mov
mov
mov
in
test
mov
and
push
sub
cmp
xor
or
loop
or
pop
inc
pop
push
out
dec
mov
xchg
jns
fstpt
lret
aaa
aaa
dec
pop
pushf
nop
lock
or
xor
mov
pop
add
mov
mov
push
pop
jle
mov
jmp
in
clc
lcall
adc
loope
pop
mov
fdivr
icebp
mov
add
or
xor
aas
orb
dec
pop
cmpsb
push
hlt
mov
mov
out
jb
cwtl
cmpsl
es
add
clc
leave
dec
push
and
lea
in
je
jne
dec
or
push
ljmp
test
mov
pop
push
aas
and
xchg
adc
test
push
cld
or
lret
or
lea
lahf
out
mull
cmc
xchg
fcmovnb
sub
pop
dec
fwait
cltd
int
xor
mov
dec
jmp
insl
mov
ret
popa
mov
js
adc
push
in
in
pusha
in
ret
sbb
sbb
sahf
iret
sti
xor
dec
mov
loopne
xor
mov
and
mov
mov
sub
fwait
ret
fdivl
push
in
mov
push
ficoml
cmc
sub
add
fsubr
jae
sbb
mov
mov
pop
add
lret
aam
gs
test
rcrl
adc
mov
sbb
push
mov
adc
or
adc
imul
ret
xchg
es
out
pushf
lea
pop
pusha
or
lret
loop
imul
dec
mov
jmp
repnz
sbb
push
cmp
push
jno
sbb
add
push
jno
mov
mov
and
js
movsl
fwait
data16
inc
stc
adc
icebp
mov
push
fmull
aad
inc
rcl
stc
sub
inc
in
push
xchg
je
mov
ss
lock
aad
popf
lock
lock
call
xor
jno
mov
push
xor
pop
jno
insb
or
outsb
mov
imul
imul
scas
jecxz
fidivrl
shrb
ret
pop
pusha
xor
or
add
pop
repnz
xchg
sub
mov
cmp
arpl
cltd
loop
lods
repnz
nop
fidivrs
ret
lcall
dec
mov
pop
fnstcw
pop
das
popa
inc
ja
inc
out
dec
or
sbb
rcrl
xor
xchg
lea
clc
in
or
sbb
push
adc
jg
cmp
in
push
dec
mov
cs
mov
sbb
add
into
adc
mov
mov
test
pusha
adc
ret
test
in
sub
loope
aam
cmc
nop
pop
ret
mov
lea
and
jmp
ret
or
mov
arpl
fists
mov
jle
and
rcrb
adc
sub
ficoml
dec
mov
push
jbe
xor
sub
mov
jnp
pushl
movsb
fisubrl
add
push
jle
imul
fisubs
jg
sahf
pop
sbb
add
daa
push
in
pop
test
ss
and
sbb
mov
std
jmp
cmpsl
push
add
sbb
in
call
sub
shl
inc
jmp
mov
push
adc
xor
rcll
pop
adc
jmp
xor
iret
imul
pop
adc
repz
inc
dec
imul
negl
pop
hlt
andb
loop
ret
mov
frstors
mov
pop
jns
add
insl
mov
stos
mov
repnz
and
inc
dec
sbb
loop
sbb
inc
sub
lock
outsl
iret
insb
sub
out
ficoml
and
push
mov
sti
xor
push
sub
stos
int3
ret
jno
lea
addb
fadd
or
cmp
rep
repnz
and
sub
xor
xor
bnd
fcomps
and
mov
push
rcrb
ret
cmp
ficoml
mov
adc
xchg
mov
int3
outsb
dec
popf
xchg
leave
cmp
mov
mov
loope
dec
pop
inc
lret
daa
mov
mov
xchg
xor
xorl
sub
or
push
or
mov
test
xlat
rcr
sbb
or
pop
mov
mov
push
sahf
mov
aas
mov
mov
clc
out
adc
pop
mov
xchg
test
sub
push
pop
pop
sub
cmp
push
jo
enter
add
ficompl
sub
jmp
mov
lock
cmp
hlt
or
sbb
sub
or
test
aaa
mov
xor
mov
aad
icebp
loopne
das
xchg
adcl
mov
dec
dec
cmp
ljmp
popa
test
pop
xchg
xor
xchg
call
xchg
test
clc
xchg
icebp
lret
into
idiv
mov
js
xor
mov
dec
or
repnz
addr16
mov
popf
jo
or
andb
sub
inc
loopne
jnp
sub
fdiv
mov
aaa
icebp
or
inc
sbb
or
mov
imul
in
mov
mov
push
je
mov
push
mov
lahf
mov
mov
mov
cmp
arpl
push
stos
jae
dec
out
jo
and
shrl
mov
jne
jmp
inc
push
pusha
fcomps
jmp
in
mov
mov
iret
sub
popa
call
mov
repz
rcrb
pop
xor
loope
scas
dec
push
xchg
mov
or
mov
xorl
aam
pop
xor
jecxz
pop
fisubl
lock
jae
ja
sub
jl
push
pop
in
leave
xor
sub
repz
cmpsb
cmp
loopne
mov
xor
mov
dec
sbb
inc
add
in
cmp
jecxz
jno
adc
jno
fs
stos
gs
loopne
push
incl
mov
lods
lahf
xor
mov
mov
xorb
xor
fists
gs
mov
mov
pusha
add
xor
ffree
leave
mov
in
sub
lods
and
or
jns
mov
loope
dec
inc
xchg
and
imul
mov
xchg
pop
and
lret
pop
mov
shll
mov
dec
stos
adc
and
ss
lcall
pop
in
pop
xchg
sub
in
xchg
mov
aam
mov
xor
xor
push
ja
or
xchg
loope
sarb
fcmovbe
cmc
mov
movsb
inc
enter
int
pop
mov
mov
push
stc
and
outsb
and
fcompl
xor
mov
and
call
or
mov
xor
jnp
jae
addl
nop
pushf
sub
pop
rol
jb
jg
test
push
ds
jnp
sub
xchg
and
in
in
adc
mov
pop
mov
mov
test
adc
dec
push
sub
sbb
fs
rcll
add
lea
gs
dec
dec
out
mov
lea
lock
ret
scas
icebp
fcomi
push
test
jno
and
mov
xor
push
jl
push
jp
pop
jne
fcoms
fnstenv
sbb
dec
xchg
insl
lea
cli
dec
scas
arpl
mov
xchg
sbb
and
push
mov
out
scas
aam
loop
sub
sbb
push
aad
mov
cli
pop
mov
insb
fisttpl
sub
imul
out
adcl
jp
out
repnz
sbb
inc
popa
cmc
insl
mov
test
mov
cwtl
or
push
pop
adc
and
inc
ja
arpl
sub
adc
or
and
jo
aad
jae
mov
push
add
xchg
insb
and
mov
ljmp
push
lods
sbb
and
dec
pop
dec
mov
inc
arpl
and
repnz
cmp
add
insb
int
sub
dec
dec
or
push
cmp
pop
ja
cmp
or
add
lcall
sub
xchg
stc
inc
push
dec
xor
mov
ljmp
mov
xor
test
fdiv
out
push
call
enter
lods
lea
int
inc
out
push
fsubr
fiaddl
gs
cmpsb
out
jno
popa
imul
lret
lds
xorb
push
mov
mov
jns
data16
loop
or
std
add
mov
aam
push
daa
mov
outsl
mov
lret
mov
sbb
aaa
dec
xchg
cmpsb
loope
inc
inc
adc
lds
mov
mov
mov
mov
js
mov
mov
out
negb
and
shll
sbb
ss
jecxz
mov
sahf
arpl
add
fs
inc
movsb
in
inc
test
xor
out
bound
jmp
enter
xchg
insb
cwtl
or
mov
mulb
pop
lcall
jl
jge
fisubrs
dec
mov
pop
lea
aaa
inc
mov
mov
add
sub
test
cmc
mov
in
stos
sti
movsl
pushf
lea
mov
inc
and
mov
pop
or
adc
fptan
cli
jnp
cltd
daa
xchg
pop
lea
popf
or
push
inc
cmp
mov
shrl
pop
mov
jno
shll
mov
or
lret
pop
lods
or
fcmovnb
test
pop
mov
mov
jbe
test
and
aaa
lock
inc
mov
jbe
pop
adc
lcall
sti
loopne
xor
loop
mov
mov
fwait
xor
jns
les
push
mov
lret
jbe
jle
jp
loopne
add
push
xor
lea
sahf
hlt
mov
sbb
mov
mov
nop
push
mov
adc
inc
xchg
pop
aaa
or
stos
add
scas
cwtl
push
les
in
nop
xchg
repz
mov
fnstenv
bnd
mov
jo
push
mov
iret
mov
mov
and
outsl
jnp
shrl
inc
test
mov
mov
add
pop
xchg
jnp
stos
xor
mov
es
jne
jmp
jo
or
push
arpl
mov
sbb
dec
push
imul
adc
pop
dec
add
push
out
jbe
dec
adc
mov
add
xlat
xchg
aam
fdivs
loopne
cmp
or
and
lret
mov
jle
mov
ja
iret
dec
and
lock
into
je
mov
sbb
jae
lea
sub
insb
data16
jg
inc
sbb
lods
push
pop
test
jne
sti
mov
in
sbb
pushf
movsb
jnp
push
adc
cmpsb
mov
xor
jae
pop
mov
hlt
xor
mov
mov
clc
arpl
leave
push
lret
push
movsb
je
mov
out
lods
sahf
fsts
mov
shlb
jg
mov
cmc
add
dec
mov
lock
pop
add
outsb
push
sub
cmc
je
fld1
lea
lods
pop
in
movsb
xor
sub
int3
imul
mov
es
mov
push
mov
imul
add
and
xchg
loope
push
movsl
leave
xorb
frstor
popa
fimull
aaa
outsl
fnstsw
mov
fsts
xor
dec
addr16
sub
iret
imul
sub
paddb
sub
sub
testl
jne
jmp
jae
bound
in
pusha
stos
jae
insb
xchg
dec
out
pop
mov
dec
and
std
dec
popf
adc
ljmp
movsl
mov
fdivl
aam
and
ss
xchg
pop
cld
outsb
xchg
bound
ja
hlt
loopne
cli
je
movsb
loop
in
data16
cli
adc
pop
add
mov
pop
rcl
insb
pop
mov
lcall
dec
arpl
imul
fs
mov
fucomi
push
pop
into
or
mov
lods
xor
js
add
bound
and
iret
popf
faddl
or
dec
xchg
mov
xor
aam
inc
imul
jb
fisubs
je
mov
mov
adc
bound
inc
push
es
in
sub
stos
lods
xor
sub
dec
imul
sub
jecxz
xchg
popf
xor
mov
add
pop
jmp
cmp
stc
insb
orl
push
cld
cmc
jmp
mov
ja
mov
insb
lods
or
pop
rorb
cltd
inc
jmp
xchg
xchg
sbb
mov
inc
sarl
loopne
enter
dec
xchg
or
cmp
loop
jl
fidivs
mov
std
loopne
or
pop
dec
add
jg
mov
mov
cwtl
aaa
mov
and
stc
loop
or
and
mov
fbld
ror
mov
pop
pop
add
popf
dec
test
dec
ret
dec
stos
mov
mov
xchg
lods
or
jp
faddl
sbbb
push
cmpsb
mov
or
add
mov
jne
jnp
adc
pop
and
ret
stos
movb
push
add
pusha
mov
sub
sub
adc
adc
mov
pop
pop
cli
je
sub
aas
and
mov
pop
das
push
jle
js
mov
fs
imul
dec
sub
jg
xor
test
ja
int3
mov
dec
and
test
rolb
xor
sub
xor
mov
enter
fsub
in
push
inc
in
imul
lcall
stc
inc
repnz
jg
inc
sti
sbb
xor
cs
mov
test
ret
xor
pop
pop
mov
gs
cwtl
hlt
pop
dec
mov
repz
inc
lahf
es
sete
mov
xor
xlat
sub
movsl
xchg
mov
lret
pop
or
jp
cmc
call
jb
push
cmpsb
clc
sub
cmp
popa
int
jno
call
cmp
push
insb
mov
inc
rcl
jnp
mov
scas
lods
insb
and
xchg
loope
cmp
xchg
xor
lahf
enter
popa
dec
inc
push
fs
sbb
call
mov
adc
ljmp
loopne
testb
cmp
xor
es
dec
pop
adc
pop
sub
fcomp
jp
mov
popf
lcall
leave
cmp
jge
lods
fstps
cmp
mov
mov
jne
or
xchg
or
or
fdivs
mov
adc
dec
je
out
sub
iret
cmp
mulb
mov
jecxz
adc
insb
push
lea
fbstp
xor
test
mov
or
mov
sti
rcl
ret
es
loopne
xchg
mov
test
loopne
pop
cmp
scas
jle
mov
cmp
or
xchg
dec
jo
sbbb
sub
push
push
xor
pop
jns
mov
inc
test
cmp
mov
jae
fbstp
les
xchg
xchg
pop
push
fs
cmc
insb
adc
fsubrl
dec
data16
mov
cmp
dec
inc
and
adc
insb
mov
cmpsl
mull
cmp
je
jns
enter
mov
sub
xor
jnp
or
nop
sub
in
mov
je
adc
outsb
pop
mov
mov
frstor
mov
fists
ss
sub
xchg
pop
imul
out
push
popf
and
jmp
mov
ja
dec
cltd
addr16
in
jl
shll
shlb
jmp
adc
daa
pop
repnz
xor
push
push
subb
lcall
pop
es
ja
dec
mov
mov
push
pop
int3
out
and
pop
mov
pop
adc
pop
jae
or
and
lahf
adc
jg
ja
sub
inc
pop
ja
imul
xor
cld
and
pop
mov
jno
out
mov
pop
lods
mov
es
and
ret
fistps
out
push
imul
hlt
pop
or
pop
in
data16
pop
sub
loop
xchg
insb
notb
and
je
iret
fsubr
mov
pop
gs
lock
lds
aam
fwait
jns
cld
mov
cmpsb
mov
push
imul
movl
daa
jmp
adc
and
dec
out
dec
mov
jne
add
scas
mov
outsb
sbb
and
enter
mov
and
push
fidivrl
aaa
jle
leavew
xor
fsubl
push
popa
dec
in
add
adc
mov
call
mov
lahf
push
jb
loopne
pop
sub
jp
mov
fistpll
dec
lret
sub
jnp
mov
add
pop
and
pop
int
dec
out
mov
dec
fstl
stos
ss
sbb
xchg
inc
lea
jmp
adc
fdivrl
popa
pop
jae
fadds
lock
das
ret
jp
jo
sbbb
cmc
xchg
rorl
xor
sub
jne
cmp
add
xchg
lcall
cmp
pop
in
xchg
ljmp
inc
xchg
adc
or
ss
cwtl
mov
push
adc
lds
dec
imul
sbb
sbb
sub
mov
or
dec
or
pop
dec
lds
mov
or
lds
dec
lret
std
cld
lods
dec
adc
push
sarb
jbe
mov
jns
fsubs
or
dec
inc
adc
dec
mov
lods
pop
sub
insb
mov
incl
pop
imul
pop
fstps
leave
jbe
mov
and
inc
fcoml
adc
iret
sbb
sti
int
inc
pop
xchg
lods
arpl
or
add
lret
loop
adc
mov
xor
loopne
mov
mov
mov
test
shlb
or
rol
sahf
xor
test
jb
test
loope
mov
push
cmp
loopne
adc
lea
mov
lret
jo
fisubrl
jo
xor
push
push
push
outsl
test
lock
cmp
arpl
jge
mov
xor
adc
mov
dec
sub
sub
call
lea
pop
xchg
fs
sbb
lret
bound
add
and
je
into
loopne
aam
xor
pusha
pop
and
xchg
mov
dec
add
test
stc
sub
push
loop
and
mov
mov
imul
mov
pusha
inc
xlat
fisttpl
rcll
or
adc
sbb
std
subb
in
mov
mov
cmp
in
mov
push
push
mov
jno
out
sbb
mov
iret
push
je
scas
imul
or
and
fcompl
mov
jge
insb
mov
xor
lea
and
lods
ja
pop
aas
int3
push
jo
iret
jae
mov
dec
and
bound
adc
cmp
xchg
xchg
or
insb
mov
xor
jae
cmp
pushf
or
orl
fstpl
cmp
mov
inc
outsb
scas
or
dec
les
mov
xchg
jl
rorb
push
mov
and
inc
mov
lea
in
jno
pop
fstps
and
data16
lret
xor
loop
movsl
in
out
mov
xchg
adc
pop
lahf
fistpl
mov
sbb
adc
cmp
adc
int3
or
lcall
shlb
je
pop
jp
cli
imul
cmc
lea
pop
add
fisubrl
mov
mov
push
mov
mov
out
mov
cvtps2pi
insl
xor
movsl
mov
lods
cwtl
fwait
shl
and
add
xor
sbb
push
push
cmp
into
dec
notl
mov
jae
push
fstps
aaa
jl
xor
insl
fucompp
jne
insb
sahf
shll
das
and
aaa
dec
test
sub
in
insb
mul
lea
sbb
ss
enter
imul
addr16
call
xchg
jnp
scas
pop
adc
shlb
into
fdivs
pop
sahf
mov
pop
frstor
mov
data16
jbe
jne
lds
mov
mov
and
orl
lcall
cltd
pop
jae
cmp
and
mov
mov
addr16
jmp
negb
insb
sbb
adc
js
pushf
adcb
adc
nop
ljmp
mov
and
ss
adcl
add
and
sub
add
mov
xchg
imul
mov
push
test
push
adc
dec
insb
js
fisubs
mov
mov
hlt
inc
lea
sub
pop
mov
push
rolb
popa
call
test
push
cs
lea
jecxz
loop
shl
gs
xor
sub
sbb
push
jne
int3
in
arpl
or
lock
in
xchg
dec
and
sbb
nop
mov
or
jb
lods
pop
lea
mov
add
mov
loop
sahf
mov
add
push
xchg
test
out
ja
cmc
pop
stc
mov
in
icebp
bound
nop
adc
popa
xor
inc
dec
xor
in
in
fs
jne
testb
mov
xor
cmp
inc
aas
sub
jp
and
insb
imul
cmovp
inc
or
aad
push
fldcw
xchg
stos
je
data16
mov
push
and
sbb
shlb
add
cmp
xor
es
repnz
mov
lds
repz
cmp
and
pop
imul
fnsave
loop,pn
mov
in
and
lea
and
mov
pop
pop
movsb
testl
xor
mov
jns
mov
sbb
fiadds
inc
lcall
sub
sub
lcall
rcr
mov
rorb
mov
sub
or
push
rorb
sbb
pop
in
cli
aaa
jl
cmc
jp
stos
mov
iret
enter
xchg
push
cld
inc
sbb
ja
repz
int3
loopne
or
push
movsb
xor
sbb
lods
aad
dec
xchg
push
jno
outsw
fisubrl
pusha
ret
push
fiadds
xor
mov
movl
adc
lock
in
loop
mov
popf
cmpsl
cmp
idivl
adc
pop
mov
scas
aas
jo
fcmovnu
inc
xchg
hlt
insb
and
mov
daa
mov
mov
dec
cwtl
push
lret
adc
push
push
fcoml
sub
mov
aaa
cmpb
and
std
push
lds
stos
jno
sahf
cmpsb
enter
testb
and
mov
xor
jnp
ret
or
mov
lock
xor
std
jp
mov
leave
inc
pop
jl
mov
inc
fidivl
adc
xor
pop
out
mov
dec
jp
cs
fs
test
and
or
rcrb
ret
pop
sub
leave
clc
lods
sbb
inc
xor
fwait
xor
in
scas
mov
adc
stos
inc
popa
int3
outsl
sub
pop
clc
mov
pop
test
mov
inc
xor
sbb
lds
push
jns
jno
int
mov
imul
je
jmp
lea
das
cli
or
jo
lahf
sub
ds
pushl
mov
clc
mov
mov
arpl
dec
or
mov
loopne
in
loope
cmp
dec
or
dec
in
bound
mov
cmp
pop
out
int3
movsl
and
repnz
jae
xor
test
jecxz
fld
pop
pop
push
pop
hlt
repnz
cmp
js
out
mov
cwtl
inc
inc
loope
pushf
dec
mul
testl
idivb
std
push
in
add
mov
push
cmp
jmp
cmp
mov
or
mov
or
test
pop
inc
call
clc
jp
cmp
cwtl
inc
testb
xor
pushf
mov
lcall
jo
pop
xchg
push
jae
nop
push
popl
sub
pop
cmp
mov
fwait
int
sub
shrl
das
ja
dec
mov
pushw
jno
add
mov
xchg
xor
out
add
test
imul
cltd
or
adc
lea
cmp
in
dec
cmc
inc
loopne
sarl
or
addl
mov
movsl
popf
cmp
imul
mull
aad
fs
inc
js
and
mov
xchg
sub
jp
outsl
mov
in
mov
xor
adc
and
xchg
stos
ss
add
inc
fnsave
sbb
xor
jno
pop
imul
stos
stos
cwtl
or
dec
dec
cmp
stos
in
xor
dec
jg
xchg
rclb
dec
out
mov
sbb
aad
ret
movsb
mov
pop
ljmp
arpl
push
pop
mov
or
rorl
stos
dec
pop
in
mov
data16
aad
xorb
int3
adc
pop
xor
xor
lea
scas
icebp
into
in
sbb
int
out
or
ret
jle
cld
test
shll
xchg
test
cmp
xchg
in
rclb
pop
push
ret
lret
xor
jg
aaa
test
call
xchg
test
mov
jbe
fs
xchg
dec
dec
jb
imul
roll
outsl
test
lods
add
jle
mov
stos
insb
cmp
outsl
popf
push
jb
lods
cmp
rcll
xor
or
das
mov
lock
or
push
scas
jne
stos
pop
pushl
mov
cmpsl
iret
loop
pop
test
into
arpl
das
mov
je
icebp
xchg
mov
pop
jmp
sbb
fwait
ret
sub
and
add
iret
mov
ss
cltd
dec
and
jae
outsl
sbb
push
outsl
int
ljmp
mov
fmull
xorb
xchg
aaa
xlat
sahf
arpl
es
adc
and
push
ss
or
sub
mov
dec
xchg
sbb
mov
repnz
and
pop
pmuludq
aas
dec
das
sub
cmp
mov
xchg
lret
lods
mov
pop
or
xchg
push
stos
pop
push
clc
pop
sub
vhsubps
jae
lret
inc
jnp
mov
mov
lock
or
xlat
push
mov
mov
and
icebp
mov
pop
clc
xor
mov
cmc
in
cmp
std
pushf
loop
mov
cmp
xor
popf
push
hlt
sbb
mov
orl
sbb
sub
push
dec
dec
je
jno
arpl
pop
lds
aaa
and
and
mov
imul
pop
cmpb
xchg
xor
in
cwtl
and
pop
pop
test
shrl
cltd
xor
sbb
es
jae
lea
dec
mov
sarb
xor
inc
push
push
mov
int
push
lea
mov
lret
and
xlat
mov
xor
pop
jge
or
and
mov
dec
mov
xchg
mov
adc
inc
gs
hlt
xchg
faddp
insb
mov
dec
in
jne
popf
add
es
lods
insb
push
ror
sub
mov
jae
leave
pop
dec
xchg
mov
arpl
fucomi
enter
into
sarb
push
mov
sub
and
jb
push
dec
sub
repnz
mov
fdivrs
push
lret
xlat
push
push
lock
adc
mov
dec
pop
and
mov
adc
subb
out
dec
push
rcll
sbb
mov
test
sub
pusha
jl
das
jns
fstp
test
or
pop
jp
les
push
pop
jge
push
pop
divl
add
xchg
fbstp
add
pushf
mov
fs
je
sbb
jge
and
cmp
out
jo
outsl
adc
push
inc
mov
sti
jmp
cwtl
pop
inc
xlat
int
and
mov
test
push
mov
and
enter
jno
mov
in
out
sti
stc
push
fadds
sub
xor
fwait
xchg
arpl
sbb
xchg
fldcw
mov
lret
or
incb
popf
sub
push
xchg
arpl
mov
je
mov
pop
jno
jne
out
adc
fdivrl
sbb
jo
push
xor
mov
mov
and
arpl
lods
and
or
fs
lahf
cmp
mov
push
scas
ss
xor
sub
jae
jae
loope
mov
pop
adc
inc
divps
test
xchg
add
imul
jl
push
mov
data16
jnp
mov
fwait
cld
movsb
shll
mov
xlat
jno
dec
dec
js
inc
gs
jb
cwtl
sub
das
pop
xchg
lret
push
mov
mov
cmp
dec
pop
repnz
mov
arpl
dec
pop
xor
lahf
mov
fsubrl
test
or
adc
sar
adc
add
outsb
or
add
mov
sbb
cmp
jo
push
test
push
sub
popa
push
mov
aas
cld
cmp
or
xchg
out
adc
lret
scas
cld
inc
sub
fsubrl
in
int3
outsb
insb
dec
flds
lret
out
dec
sbb
call
push
xchg
int3
scas
push
push
js
call
mov
movsl
dec
addr16
mov
add
or
arpl
dec
scas
ss
dec
sub
imul
int3
cmp
mov
dec
sbb
dec
outsb
xchg
sbb
xchg
or
aad
mov
insb
js
push
js
scas
mov
jge
push
inc
sbb
mov
dec
insl
adc
or
mov
dec
and
loop
push
adc
xor
sbb
push
dec
jmp
jnp
jmp
mov
jne
and
mov
jns
in
cltd
fcoms
xchg
mov
mov
pop
pop
mov
xchg
loop
sub
xlat
ljmp
pop
pop
jmp
sbb
enter
dec
pop
push
testb
in
mov
and
icebp
aaa
sahf
dec
loop
xchg
push
sub
pop
xchg
push
or
dec
js
pop
mov
cmp
mov
push
imul
int3
fsubs
hlt
mov
arpl
loop
mov
jae
mov
pop
sub
pop
or
dec
push
out
mov
mov
jp
fwait
dec
shr
sbb
mov
sub
fildll
pusha
mov
jno
pop
sub
add
fstpl
fsub
cmp
aas
adc
insl
push
mov
or
mov
in
mov
add
and
leave
bnd
lahf
add
jae
outsb
cmpsb
shl
and
int3
loopne
add
out
adc
sub
movsb
lods
push
in
loopne
ja
pop
dec
push
fwait
push
sub
loopne
mov
adc
and
inc
pop
xor
popf
and
inc
sarl
inc
mov
mov
js
call
inc
xor
cmp
or
jnp
jmp
xor
enter
and
ficoms
movb
in
push
filds
sbb
hlt
rcl
aam
jg
insb
jge
movsl
add
and
hlt
lahf
dec
cmpsl
hlt
fistps
fidivs
scas
cmp
jo
sti
sarl
add
imul
add
pop
scas
mov
mov
es
fbld
pop
mov
and
arpl
movsb
das
push
scas
loope
jno
outsl
shll
ret
adc
mov
movsb
sahf
push
ljmp
outsb
jno
xchg
into
mov
test
add
jp
cmc
repnz
cmpsb
repnz
pop
cltd
adc
je
aas
insb
jno
cmp
das
leave
adc
mov
mov
testl
pushf
test
mov
fistpl
and
in
sub
filds
push
sub
cltd
sti
int
cmc
lock
bound
inc
js
and
fmuls
xchg
push
or
pop
movsb
mov
inc
iret
rclb
and
or
push
in
aaa
push
insb
mov
aad
imul
iret
adc
inc
adc
rol
jo
jle
in
push
inc
jo
jmp
dec
clc
ret
loop
loopne
fwait
inc
jnp
and
int
xchg
add
sbb
xchg
loopne
pop
lea
inc
lret
mov
call
pusha
fbld
pushf
insb
adc
loop
jae,pn
scas
fs
and
xor
lea
jbe
lahf
push
adc
sub
ljmp
lea
inc
cmc
mov
and
adc
dec
jmp
call
lds
mov
lret
mov
pop
mov
les
xor
cmp
ljmp
or
push
push
out
mov
fimuls
push
lcall
out
ljmp
hlt
inc
push
mov
mov
jne
es
shlb
rcrb
pop
lea
sub
test
popa
or
mov
in
or
arpl
mov
add
add
loopne
insb
push
and
adc
sbb
je
fisubrl
xchg
inc
mov
mov
js
and
mov
jno
add
and
mov
xchg
or
ds
lahf
pop
sbb
xlat
mov
add
pop
jmp
adc
xor
cli
adc
jnp
test
clc
mov
inc
fdiv
adc
push
mov
lds
sbb
fmull
xorl
in
and
cmp
in
sub
lods
jl
xor
pop
mov
mov
add
leave
mov
hlt
or
rcrl
fst
and
jl
sbb
pop
loop
rorb
adc
scas
stc
adc
sarl
sti
inc
divl
jl
movsb
shr
jno
fildll
jecxz
jns
out
mov
lds
xor
into
lods
scas
lret
xor
and
loop
mov
popf
inc
movsb
push
movsl
xchg
int3
loop
push
jge
bound
aad
lret
pop
sbb
ficoms
or
shrb
push
jp
xor
mov
inc
sub
pop
xchg
xor
mov
daa
lret
loop
adc
daa
ljmp
mov
mov
mov
outsb
and
sti
cli
mov
lret
sbb
or
iret
jno
lcall
in
mov
std
outsb
outsl
lea
and
mov
dec
ja
cmp
bound
xchg
inc
push
inc
ss
hlt
ja
adc
jg
test
dec
fmull
sub
fwait
push
mull
push
mov
dec
popa
leave
sbb
add
xor
inc
cmp
mov
loope
mov
test
dec
mov
out
xchg
mov
mov
inc
cmpsb
cmp
inc
fildll
jg
lock
sbbl
sbb
mov
add
push
sub
loope
dec
aam
shl
int3
inc
sbb
dec
js
dec
lea
mov
cmp
xchg
cmp
nop
sub
arpl
bound
push
mov
cmp
repnz
dec
mov
out
cmpsl
cmpsb
sub
test
lds
sbb
jle
sub
push
scas
and
jns
xchg
mov
notl
adc
sbb
lret
mov
push
mov
push
ss
icebp
mov
jge
push
push
fsubs
in
mov
in
ljmp
xchg
arpl
jb
stos
add
ss
pushf
adc
insl
in
adc
sbb
sub
in
xchg
or
ss
push
sbb
sbb
loopne
dec
dec
fsts
out
imul
cmpsl
daa
test
cmpl
mov
push
je
lea
pusha
leave
mov
mov
or
in
lea
jno
jmp
sbb
adc
mov
mov
aad
movsl
mov
xchg
lcall
out
fstpl
or
cwtl
test
mov
push
jb
adc
and
in
push
gs
rolb
popf
loop
mov
filds
shll
imulb
sub
add
mov
mov
imul
mov
hlt
or
fmull
lret
outsb
fs
or
insb
mov
pop
push
icebp
bound
sub
bound
mov
insb
adc
xchg
sbbb
insb
popa
fists
xchg
int
xchg
mov
sub
or
sbbb
xchg
sti
sub
xchg
push
cmpsb
mov
fnstcw
insl
stos
sbb
and
lods
push
lea
in
fldenvs
xor
insb
pop
dec
cmp
xchg
in
cld
inc
addr16
fmul
pop
fs
pop
icebp
jnp
mov
pop
fisubs
mov
leave
outsb
push
std
xchg
in
rcr
ljmp
sbb
pop
and
ret
push
movsb
cmp
js
lcall
repnz
movsb
sub
jg
mov
aam
mov
gs
imul
adc
testb
loop
mov
dec
arpl
jmp
sbb
adc
cmp
sbb
sub
jle
dec
dec
int3
inc
imul
mov
dec
cld
aam
fcomps
dec
aaa
lret
jge
push
jae
push
cli
xchg
sbb
sub
test
ror
add
inc
lea
jb
testl
movsb
cmp
sbb
jae
sub
mov
mov
cmp
sbb
ret
sub
hlt
lock
nop
jle
xchg
mov
and
xchg
jmp
cmp
dec
stos
dec
mov
sahf
add
inc
test
pop
iret
mov
setl
out
and
mov
scas
adc
negl
iret
daa
insb
cmp
push
fbstp
or
clc
sbb
push
inc
rcll
or
xor
daa
jge
pop
sbb
pop
mov
push
iret
fdivrl
pop
push
ret
out
lea
add
into
dec
push
xchg
push
push
in
filds
mov
lahf
nop
sub
sub
jns
sub
cmp
pop
gs
cmc
cmpsl
mov
iret
cmp
pop
xchg
jo
inc
mov
cmp
fcmove
outsb
or
and
and
push
dec
dec
mov
pop
aam
icebp
dec
nop
aad
mov
sub
xlat
push
mov
sbb
cmp
mov
and
sbb
je
arpl
jnp
daa
pop
ficompl
mov
inc
loop
out
repnz
sub
push
not
cs
cmp
and
jbe
mov
aaa
xchg
aam
mov
ss
insl
test
in
cwtl
jle
mov
das
in
insl
sarb
mov
sub
lahf
shll
lock
je
jmp
out
adc
test
push
fmul
incl
jae
push
hlt
fnsave
sub
flds
cmpsl
sti
test
pop
dec
repz
ret
sub
lret
repnz
aad
divl
xor
mov
imul
jns
mov
jmp
pop
je
leave
or
lahf
ja
mov
cmp
ss
xor
arpl
dec
mov
lahf
push
jno
testb
adc
mov
and
sbb
jb
fld
lods
lea
cld
mov
dec
decl
call
jns
cltd
lock
lret
jl
ljmp
loopne
xor
loop
pop
addl
fnsave
aam
sbb
stos
frstor
or
fisubl
mov
lret
nop
inc
sbb
rorl
testl
sbb
xlat
cltd
push
jg
mov
jle
lods
aaa
pop
push
daa
in
push
xchg
push
sbb
loopne
aam
loop
xchg
cli
sub
push
jmp
addl
sub
in
lcall
lock
cs
push
lea
xchg
rcrb
push
test
sahf
loopne
rcrl
sti
fistps
lds
sbb
and
sub
xor
mov
scas
inc
in
or
mov
xor
mov
popf
push
shlb
pop
xchg
xchg
dec
and
sbb
jbe
sbb
or
les
push
aam
shlb
cwtl
pop
jle
and
shlb
lea
xor
sub
rcr
xorl
int3
movsl
push
enter
mov
mov
int
mov
sub
sub
das
add
pop
and
cmc
repnz
xchg
arpl
cmpl
pop
mov
fdivrs
and
je
cmpsb
xor
out
insl
fldenv
jnp
test
inc
cs
or
dec
sahf
loopne
mov
push
mov
dec
or
in
and
push
ss
jnp
cmp
sub
dec
inc
not
popf
imul
lret
dec
mov
mov
cld
fwait
inc
outsb
push
cmpsl
adc
sahf
sbb
pop
sbb
lea
repnz
in
and
mov
sbb
sbb
xchg
lahf
pop
sbb
inc
cs
dec
jno
mov
inc
shll
pop
aad
jl
xlat
fstps
and
movsb
xchg
enter
test
jae
jg
cli
pop
fsubrl
or
xchg
jb
and
sbb
cmp
pop
xchg
test
adc
stc
fwait
mov
xchg
jmp
enter
in
fidivl
push
int
xchg
mov
push
jmp
xchg
les
lret
pop
inc
leave
jb
andb
push
mov
lcall
mov
aaa
lea
jno
clc
call
imul
cmpsl
in
subl
pop
inc
lcall
movsl
fucomi
fstps
cli
sbb
mov
sbb
out
ja
jo
arpl
dec
adc
rolb
or
sub
into
test
adc
xor
shll
js
mov
shrl
dec
push
imul
arpl
and
inc
loope
cmp
and
xchg
mov
pop
in
cmpsl
iret
rcll
inc
sbb
and
je
and
mov
jmp
popa
push
pop
lea
pushf
insb
lcall
pop
inc
mov
pop
pop
ljmp
mov
insl
fisubs
outsl
mov
pushf
fistpl
mov
add
stos
add
iret
pushf
negb
call
stos
out
sub
mov
shr
inc
pop
int3
and
addr16
int
mov
ror
and
mov
in
scas
xchg
icebp
add
pop
and
das
sub
lcall
xor
ds
cmp
in
mov
sbb
push
jle
movsl
mov
xor
and
adc
popa
mov
mov
adc
aam
mov
lock
in
jmp
lahf
enter
stos
inc
imul
call
mov
jb
lods
ja
pop
rcrb
in
mov
and
arpl
push
jmp
jnp
lock
jmp
pop
gs
xor
dec
push
fldl
dec
push
addl
test
jo
dec
sub
lods
dec
jne
out
jo
addr16
mov
les
mov
fisttpl
hlt
sbb
push
sbb
dec
mov
test
xor
andb
pop
stos
pop
push
or
sbb
cmp
cmp
cmpsl
fidivrs
rorl
popa
push
std
mov
in
mov
mov
pop
adc
xor
jnp
gs
test
insl
popf
out
cmp
outsb
hlt
inc
cli
sbb
adc
jno
pop
sub
adc
in
shrl
cmpb
push
xchg
jge
fldl
cmp
push
dec
mov
mov
fs
decl
daa
fs
jo
jmp
xor
mov
addr16
jb
xor
lret
daa
xor
mov
bound
xchg
jns
push
neg
addl
pop
imul
cmp
push
stos
mov
add
loopne
dec
adc
repnz
in
jmp
sbb
inc
mov
push
popa
dec
stc
imul
pop
xchg
inc
int
test
pop
bound
jp
in
f2xm1
push
loope
daa
sub
movsl
dec
and
aas
inc
dec
aad
lahf
and
cltd
sbb
xchg
in
jp
jl
js
outsl
arpl
pop
movsl
xchg
ficoml
dec
mov
test
mov
add
shrl
lret
aad
out
sar
pusha
xor
pop
push
xor
and
mov
inc
daa
mov
xor
push
pusha
call
je
cmp
cmp
dec
mov
cmp
out
shl
jl
aam
pop
adc
adc
sub
popf
inc
xor
imul
mov
cmp
bound
sbb
ret
scas
sub
push
ret
and
sahf
test
mov
rcr
fsubrs
dec
loop
push
fsubp
mov
loop
mov
in
and
fldenv
bound
in
inc
jge
popf
lds
mov
loopne
in
or
xchg
pop
add
leave
loope
mov
add
notb
mov
in
add
movsb
and
in
jecxz
or
inc
lods
cmc
mov
sahf
and
addr16
sub
test
lret
jl
outsb
inc
xchg
jae
sbb
and
aas
cmp
adc
sarl
clc
add
fldenv
cmp
push
mov
cli
mov
push
dec
inc
pop
jle
mov
arpl
ja
jns
in
jno
cmpsl
inc
pop
lea
pusha
jmp
pop
push
divl
and
cmpb
xor
out
pushf
add
fcoml
cwtl
dec
jmp
pusha
xor
cmp
fdivs
jmp
cmpsl
mov
sahf
dec
pop
and
in
fwait
sub
inc
and
dec
fnsave
xor
mov
lret
push
stc
jns
xlat
mov
ss
ja
icebp
push
popa
cmp
or
andl
sbb
mov
inc
imul
pop
cwtl
sar
shlb
std
cmp
lea
int3
mov
icebp
outsl
sbb
push
ljmp
jmp
into
jo
xorl
mov
fisttpll
movsb
and
dec
call
mov
ret
les
cmc
pop
adc
jno
xchg
inc
stos
leave
xor
mov
mov
lds
cmp
jno
or
testb
es
sbb
in
dec
or
mov
sbb
lcall
lret
mov
sub
ljmp
call
sbb
push
or
fbstp
pop
push
in
adc
add
or
dec
mov
sbb
movsl
cmp
push
mov
or
repz
jae
mov
xor
xor
mov
dec
xor
in
push
movsl
mov
mov
add
mov
push
leave
test
fwait
in
mov
arpl
mov
xor
jns
adc
xor
lods
mov
xchg
sarb
mov
pop
pop
mov
sarb
call
pop
fcomp
nop
enter
popa
pop
cwtl
adc
nop
bound
dec
fldcw
xlat
jmp
loop
clc
pop
or
popa
loop
mov
pop
rorl
dec
fdivs
arpl
or
lods
test
outsb
ret
addr16
fimuls
xchg
test
mov
lock
jae
sbb
cmc
jo
sbb
push
fs
jmp
jno,pt
sub
xchg
sbb
xor
push
xchg
ja
jmp
imul
pop
jne
push
ret
jg
jns
or
cli
aas
bound
pop
lcall
cld
adc
lea
inc
push
add
hlt
xchg
shlb
add
inc
cli
mov
xor
pop
mov
je
mov
cmc
mov
push
in
fdivrs
loope
fmull
lea
push
add
lods
in
mov
subl
mov
lods
shll
mov
loop
jae
sbb
add
xor
popl
stos
inc
lods
pusha
js
cmp
in
rolb
add
dec
inc
shll
jo
push
add
sbb
sub
sbb
xchg
ror
lcall
repz
pop
lea
and
push
inc
bound
scas
cmc
insb
inc
lea
xor
sub
pop
jge
push
fs
in
adc
dec
jns
lds
enter
lahf
sbb
dec
aad
std
jns
mov
out
xchg
sbb
mov
jge
fwait
cmp
imul
js
arpl
ja
or
mov
rcrl
cmp
xor
mov
lods
scas
in
loope
or
pop
cmp
xor
test
mov
mov
mov
loope
jo
dec
cmp
inc
lea
mov
push
loope
lret
rcrl
push
pop
push
sub
insb
jp
jmp
call
mov
aas
lea
decb
stc
jge
push
mov
test
mov
repnz
rolb
sub
cmpsb
or
fisubs
popl
sbb
adc
sub
popf
or
cmpl
and
icebp
in
mov
lods
and
sbbb
jae
test
in
jo
jb
add
mov
ret
or
js
in
lret
push
outsb
repnz
mov
inc
xor
and
sub
adc
test
inc
adc
mov
xchg
pop
int
lea
add
sbb
arpl
add
mov
mov
mull
cmp
adc
loop
lret
int3
jae
jns
popa
jb
outsb
insb
mov
and
imul
arpl
jno
mov
daa
adc
bnd
or
clc
fnsave
dec
cmpsb
ficompl
xchg
pop
rorl
bound
cmp
push
movsb
jmp
push
or
xchg
add
daa
xlat
das
fldenv
add
jo
inc
mov
mov
push
sub
xchg
jmp
pop
lcall
imul
jle
loop
neg
sub
add
sbb
jae
mov
xchg
pop
lret
test
sbb
push
adc
fs
add
push
jne
mov
push
mov
arpl
jp
out
lods
xchg
orb
shlb
cmp
and
loope
scas
dec
lods
push
insl
jno
or
sbbl
mov
loopne
mov
outsl
xchg
mov
lods
dec
jp
test
add
adc
pushl
pop
and
xor
xchg
mov
leave
in
call
or
mov
xchg
mov
push
movsb
push
insb
test
sub
pushf
call
mov
xchg
jmp
and
sub
std
testl
fsubs
add
data16
ret
sbb
lds
adc
into
test
mov
dec
or
mov
bound
sub
sbb
test
popa
outsb
imul
and
stos
fldenv
xchg
sbb
subl
or
lds
in
jnp
xchg
pop
call
lea
jg
lock
push
mov
in
and
sbbl
inc
jae
adc
out
jns
int3
dec
mov
jbe
mov
hlt
jb
test
push
jbe
adc
into
xor
mov
scas
arpl
je
and
fs
cmpl
insb
loop
sbb
fildll
push
push
stos
js
notl
jnp
notl
lahf
call
jl
aas
scas
aaa
fsubrl
inc
aad
loope
lcall
push
push
imul
sbb
sbb
enter
mov
ja
mov
jmp
inc
lods
pusha
iret
xchg
dec
dec
jno
out
mov
sub
fcomp
fstpl
fs
in
fistps
pop
mov
hlt
int
pop
xchg
lock
push
gs
sbb
fdivs
jbe
in
dec
add
adc
xor
sub
and
sub
out
mov
xchg
scas
in
pop
outsb
sub
cli
dec
mov
lock
mov
mov
scas
and
lret
xor
add
add
sbb
loope
mov
push
cmp
lea
cmpsl
xor
jbe
jg
imul
mov
jae
mov
and
inc
outsl
or
pop
adc
lods
test
pop
lea
loope
je
push
iret
adc
mov
mul
and
fisttps
xchg
negl
dec
mov
scas
pop
fmulp
adc
insl
mov
dec
sbb
xor
and
jecxz
stos
ljmp
push
repz
pop
adc
sub
pop
cli
push
xchg
sbb
imul
fsubs
adc
and
loop
lret
mov
xchg
sbb
mov
movsb
arpl
pop
cltd
rcr
shlb
lcall
into
call
fistpl
mov
jbe
mov
jge
loop
outsb
jmp
sub
adc
mov
jno
and
lods
loop
jecxz
push
clc
cmp
or
insl
mov
flds
jnp
dec
adc
mov
imul
push
loopne
dec
push
scas
in
jne
cmpsl
call
aas
fcomip
dec
push
movsb
sub
xor
es
mov
mov
jno
imull
sbb
repz
push
jbe
pop
pop
insl
rolb
shll
shll
push
mov
jno
inc
jns
in
or
and
and
pop
sti
fildll
sbbb
fdivl
and
je
sbbl
ret
sar
mov
clc
in
cwtl
ret
imul
insb
mov
shlb
dec
adcb
sbb
push
dec
arpl
cmp
std
in
pop
xor
mov
call
cld
adc
mov
dec
cmpsb
mov
push
pop
cli
adc
push
out
decl
nop
cmp
dec
nop
dec
sahf
icebp
push
mov
pop
pop
lea
jae
mov
mov
or
pop
stc
or
and
pop
and
mov
dec
and
jo
cld
loopne
and
test
lahf
jecxz
sar
jnp
dec
in
adcb
lret
or
mov
insb
pusha
mov
in
loop
dec
fisttps
icebp
pop
subb
shrl
lret
rcrb
push
rcll
mov
scas
sarl
jae
inc
gs
lcall
int
fadds
dec
mov
cmp
outsl
shll
push
mov
pushf
dec
mov
mov
or
daa
mov
out
adc
sbb
dec
or
cld
jb
nop
cmp
lret
mov
je
xor
popa
lods
ds
jae
jle
data16
fdivrl
gs
pop
sub
xchg
sbb
cmp
pop
js
inc
in
add
std
call
xchg
or
mov
lea
mov
dec
mov
jg
sub
xorb
into
lret
dec
pushf
push
dec
dec
xor
push
jmp
xchg
push
enter
stc
les
fidivl
push
dec
lahf
add
mov
jno
mov
jno
sub
imul
xchg
pusha
unpckhps
inc
cmp
dec
mov
test
hlt
lea
es
mov
lods
mov
shll
in
mov
dec
xchg
out
enter
and
lods
and
insl
rcl
jp
insb
testb
cmpsl
arpl
in
mov
sbb
jns
fmull
xchg
daa
mov
lods
xchg
fdivrl
adc
bound
dec
or
and
push
mov
or
psrlw
pop
dec
and
decl
test
jb
test
mov
fildl
inc
fcmovb
push
xlat
cmp
sub
pinsrw
adc
push
mov
loope
adc
mov
aaa
inc
mov
cmc
push
mov
hlt
popa
sub
in
jo
mov
mov
xor
fimuls
jl
imul
adc
xor
cmpsl
sub
faddl
and
jb
push
je
out
pop
enter
fists
sbb
push
loope
roll
insb
and
or
rcl
insb
mov
arpl
enter
rorl
mov
and
dec
pop
shl
out
mov
cmpsl
sub
xchg
sub
or
pop
arpl
in
push
sbbb
pop
mov
push
pusha
cld
push
inc
sub
inc
xchg
je
inc
inc
and
mov
jge
cmc
push
data16
ds
cmp
lods
jne
movsl
cld
xchg
mov
inc
fwait
xor
sbb
jb
in
mov
jmp
test
mov
fsubrs
roll
sbb
and
or
loopne
mov
cmpsb
in
mov
lahf
jbe
sahf
mov
loop
push
jl
mov
out
movsl
jp
push
mov
cmp
jb
xor
mov
pop
loopne
pop
sub
icebp
mov
push
mov
jmp
call
xchg
push
mov
movsl
mov
jg
loope
sub
fidivs
and
or
mov
sub
cs
pop
out
add
or
xor
cwtl
sub
test
adc
mov
jmp
pop
xorb
ja
push
repz
in
psubw
repz
pop
sbb
inc
repnz
xchg
arpl
jnp
mov
mov
lods
pop
stos
dec
hlt
cs
jecxz
dec
jp
inc
push
rolb
je
push
lret
out
lock
push
inc
xchg
nop
vminpd
mov
cmc
cltd
sub
inc
sbb
pop
mov
gs
xchg
mov
loope
movsb
cwtl
sarl
lea
in
jmp
out
jne
imul
cmp
push
imul
loope
int3
ss
xchg
cmp
cmp
sbb
arpl
xchg
cltd
or
call
inc
out
jae
leave
mov
xchg
mov
jg
adc
mov
lods
popa
js
mul
dec
subb
pop
sbbb
or
sbb
or
mov
mov
sub
mov
mov
mov
push
cmp
dec
adc
jnp
inc
mov
imul
cli
xor
movsb
inc
xchg
cwtl
mov
fbld
push
mov
aam
data16
repnz
mov
sbb
test
pop
das
or
imull
cmpsb
sti
sbb
jg
and
out
je
pop
nop
pop
inc
mov
insl
xchg
sti
sub
pop
ljmp
aaa
and
idivl
jne
iret
add
insb
mov
inc
mov
inc
mov
jae
aas
test
mov
push
cmp
insl
icebp
jl
stc
pop
stc
push
testb
mov
enter
out
and
sbb
xchg
pop
jnp
push
lahf
push
push
dec
in
or
movsb
insl
sub
xor
fxch
call
bound
jg
and
lret
fisttpl
push
jb
add
xor
jae
loop
xor
test
adc
stos
subl
pop
sub
in
sbb
pop
daa
enter
push
insl
inc
scas
rolb
jno
mov
out
add
jmp
gs
arpl
inc
dec
in
shl
arpl
scas
jb
mov
shl
ficoml
sub
fcompl
mov
xchg
shlb
inc
ss
stos
jo
xor
mov
cmp
stos
and
xchg
mov
xchg
dec
and
int3
ja
lds
repz
or
clc
mov
lea
test
repz
outsl
pop
fcompl
push
in
jle
xor
mov
xchg
movsb
int
adc
adc
sub
movsl
loope
aad
pushf
mov
jp
cs
mov
mov
cmp
pop
je
test
mov
jge
push
xchg
mov
mov
xchg
aaa
test
pop
inc
loopne
xchg
mov
and
sarl
in
ret
mulb
pop
fwait
jmp
repnz
add
xor
xor
inc
lods
sub
mov
stos
mov
mov
mov
inc
inc
test
push
xchg
scas
mov
test
insb
lea
fstpl
adc
sub
add
jg
xchg
lea
mov
scas
adc
dec
mov
jb
sub
jnp
repz
inc
out
cmpsl
sub
in
loopne
fdivr
mov
mov
pushf
imul
dec
insb
jae
add
je
add
and
dec
repnz
mov
jae
sub
mov
aaa
pop
bound
xchg
loopne
stos
and
int3
inc
je
inc
push
push
dec
inc
lock
mov
inc
bndstx
dec
adcl
dec
inc
lods
inc
insl
dec
addl
in
dec
mov
mov
pushl
mov
es
pop
xchg
lcall
xchg
dec
fnstcw
test
xor
jg
scas
mov
sbb
js
es
add
xor
add
cld
pop
gs
xchg
sub
jb
xor
and
int
into
movsb
and
pushf
outsb
and
pop
daa
and
sub
jae
mov
cld
sub
jp
or
push
ret
sbb
in
and
mov
lret
add
ja
mov
adc
inc
mov
imul
lea
imul
insb
xchg
into
pop
jnp
loope
shl
cmpsl
loope
fmull
inc
and
fxch
cmp
bnd
jle
pop
dec
lahf
insl
xchg
jae
jmp
xchg
sbb
or
add
popl
sub
xchg
jae
inc
xchg
mov
pop
cmpsb
pop
rcl
enter
pop
je
movsl
cmp
dec
fnstenvs
aad
je
jbe
lea
jle
mov
mov
mov
xchg
and
int3
pushl
std
push
or
push
sub
jge
cmpsl
data16
jo
in
aaa
jg
or
je
stc
fmul
ljmp
xchg
int
jmp
movsl
aaa
dec
stos
sub
dec
dec
pushf
jbe
es
mov
scas
dec
mov
dec
lahf
in
jae
xor
jae
pushl
xchg
sub
dec
mov
mov
mov
mov
jmp
xor
lea
divl
lahf
testb
mov
stos
xlat
mov
cmp
lret
cmp
mov
push
and
sub
sbb
xchg
es
or
mov
clc
in
adc
dec
jno
test
dec
repz
mov
xor
fs
sbb
push
sbb
loopne
rcl
lea
xor
sbbb
push
mov
xchg
mov
sbb
jo
or
int
flds
je
jbe
mov
mov
in
fdivr
leave
stos
insb
nop
andb
sub
jg
data16
mov
jp
jmp
data16
adc
jnp
lods
mov
or
pusha
inc
shlb
std
lea
pop
js
sar
cmp
push
sub
repnz
and
and
je
es
sbb
sub
sti
int
or
lea
pop
add
dec
pop
movsb
dec
iret
fisubl
push
bound
imulb
dec
mov
sub
icebp
es
lods
fimull
or
movsl
inc
adc
push
int3
add
add
mov
je
les
cmc
push
push
pop
dec
adc
movsl
das
mov
out
mov
data16
lds
sar
pop
lret
and
push
push
inc
test
jl
jnp
out
pusha
je
nop
lods
add
xor
pop
mov
xchg
bound
sti
addb
aam
cmpsl
popa
and
in
lret
xor
int
mov
fldpi
lea
inc
add
pop
xchg
enter
lret
leave
addr16
ret
cmpsb
dec
xlat
and
jo
push
movsb
push
nop
cmp
rcrl
xchg
lret
stos
leave
pop
repnz
call
mov
add
roll
arpl
xor
and
rcll
mov
daa
pop
mov
adc
jle
jne
jmp
sbb
mov
sbbb
jae
jne
sub
scas
add
add
rorb
sub
subl
mov
or
mov
adc
subl
daa
out
lods
in
mov
mov
and
inc
dec
fdivrl
dec
sbbb
mov
loop,pt
cmc
in
bound
mov
and
cmp
fst
mov
mov
push
leave
mov
xor
out
mov
dec
icebp
sahf
add
repnz
jle
mov
push
or
insl
sub
push
enter
bound
adc
icebp
sub
push
mov
mov
lods
mov
pop
mov
cmpsl
pop
xchg
xor
jo
aas
mov
cmp
push
add
imul
or
hlt
pop
iret
or
mov
cltd
sbb
lods
inc
mov
xor
cmp
mov
sbb
or
push
and
and
mov
and
clc
aaa
xorb
icebp
shr
xor
sar
push
lret
aad
cltd
sub
dec
inc
insb
xchg
jmp
jnp
jle
xchg
jmp
iret
cwtl
mov
jl
push
xor
dec
and
pop
adc
fcoms
xor
sbb
popa
mov
lods
pusha
xchg
lea
popf
mov
arpl
adc
mov
test
push
jb
inc
shrb
jnp
out
mov
fcomi
adc
andl
test
ljmp
and
cmp
fs
insl
add
rcll
insb
mov
nop
sbb
rcrb
push
imul
sbb
jl
fcoms
and
xor
adc
rorb
jae
loopne
mov
xor
and
sahf
loopne
cmp
test
shrl
inc
lods
sbb
jb
stos
lea
loop
loop
mov
out
test
lods
mov
pop
je
clc
or
sbb
popf
dec
mov
and
mov
pop
inc
and
jl
inc
das
and
mov
jmp
fidivl
jns
jns
out
mov
mov
or
call
lock
or
push
and
shll
test
adc
pop
icebp
inc
mov
aad
cli
je
rorb
pop
pop
mov
stos
lds
hlt
out
mov
repz
test
insb
and
jmp
cmp
test
jmp
pusha
xchg
mov
imul
int3
pop
and
daa
pop
in
cld
decl
fwait
push
mov
fwait
jae
sbb
loope
nop
add
adc
jno
xchg
pop
movsb
lret
adc
pop
aam
mov
jmp
fistl
inc
outsb
or
and
mov
aas
xchg
add
sub
ja
sub
and
cmp
jae
flds
lds
fiaddl
push
or
cld
stos
pop
mov
imul
push
pop
jae
inc
push
fbld
add
imul
mov
pop
xor
rorl
push
in
mov
js
lahf
in
aad
xchg
inc
sub
xchg
or
push
cltd
pop
sub
std
xor
mov
jns
fistpll
mov
pop
mov
add
and
stos
inc
dec
out
inc
mov
jmp
repnz
jg
pop
dec
adc
pop
mov
notb
or
pushf
mov
data16
movsl
sbb
push
lock
push
rcl
stc
sbb
hlt
mov
lea
sbb
sbbb
cli
test
fisubrl
in
out
xchg
mov
lds
cmp
rorl
xchg
xlat
jecxz
push
dec
ja
lret
aam
xchg
lods
and
inc
aas
add
pop
push
add
and
cmp
mov
js
pusha
add
xor
adc
xchg
jb
xor
or
outsb
adc
fst
add
rclb
mov
xlat
add
xor
jns
xor
out
jp
mov
fisttpll
adc
pop
test
sub
insl
divl
or
mov
pop
ficoms
cmp
clc
stc
cmp
jne
sbb
ret
sub
mov
shlb
mov
jg
jecxz
rcll
jae
jl
leave
jg
icebp
cli
mov
push
roll
jecxz
dec
mov
xor
lods
mov
test
sub
pop
push
sub
and
sbb
push
xor
subb
mov
pop
pop
xchg
lea
sub
xor
pop
and
movsl
dec
add
cli
jge
fdivr
gs
in
ljmp
les
mov
cltd
shrl
mov
sbb
out
cwtl
fists
dec
fldenv
fadd
pop
jbe
test
jg
push
inc
mov
or
loop
mov
pop
arpl
test
loopne
mov
or
jg
mov
pop
imul
sub
xchg
mov
pop
adc
dec
and
stos
dec
daa
leave
xchg
repnz
inc
loope
sti
mov
inc
testb
push
fs
pop
in
mov
int
test
lock
push
loop
xchg
adc
test
lret
fimuls
jae
sbb
neg
pop
inc
push
add
in
sbb
mov
cltd
cmpsb
add
ret
push
and
test
call
ja
sub
mov
sarb
shl
out
xchg
in
mov
in
jg
in
cltd
sbb
bound
jb
mov
hlt
push
popf
pop
push
fdivl
push
adc
in
or
mov
arpl
sbb
and
jbe
in
addr16
xor
in
sub
faddl
je
xor
dec
inc
lea
daa
push
and
hlt
inc
mov
dec
lret
in
mov
mov
inc
nop
mov
add
mov
test
jp
mov
out
loop
and
push
mov
dec
test
mov
jo
fisttps
mov
lahf
sbb
adc
jg
cmp
call
pop
and
sahf
pop
dec
insl
es
inc
cmp
dec
sarb
inc
jl
loop
mov
out
jecxz
ljmp
cmp
adc
push
push
xchg
jge
dec
fcomps
cltd
aam
or
adc
je
pushf
and
or
rcrl
out
outsl
das
adc
adc
pusha
testb
fldcw
mov
pop
stos
mov
mov
sub
dec
cmp
cmc
dec
shrb
sub
pop
xor
addl
jmp
lcall
dec
and
fidivrl
push
cmc
jge
add
and
sti
sbb
xor
add
and
jne
in
sbb
jmp
popa
mov
mov
push
repnz
cltd
mov
out
shl
lret
mov
mov
jae
fldenv
mov
hlt
xor
cmp
icebp
cmpsl
xchg
jmp
push
xchg
std
push
pop
fadd
aad
xchg
in
mov
test
ret
scas
push
inc
mov
push
jns
xor
dec
push
and
mov
sbb
arpl
dec
int3
cmpsl
ret
xor
sub
ret
adc
repnz
cwtl
imul
adc
xor
hlt
in
pushf
xchg
lahf
and
pop
dec
mov
sarb
popa
inc
jle
mov
fidivl
int
xchg
fstl
or
mov
call
lods
adc
fwait
paddw
jp
frstor
dec
or
arpl
fstps
mov
dec
stos
pop
sahf
hlt
lea
and
pop
jle
in
fidivl
cmp
inc
je
xchg
xcrypt-ctr
cmpsl
pop
daa
popa
jnp
mov
or
mov
lock
jo
jg
mov
sub
mov
daa
inc
xchg
rcll
js
cmpb
mov
push
into
shr
inc
push
loop
or
cmp
inc
or
jbe
xor
xchg
lahf
push
pop
xchg
sub
std
sbb
loope
test
mov
add
call
rcrl
xor
cmp
into
mov
enter
arpl
cmp
movsb
repnz
flds
fdivrl
insl
adc
dec
ja
add
xor
push
and
lock
pop
xchg
mov
mov
sar
mov
lret
mov
not
cmp
movsb
inc
add
dec
mov
xor
mov
jns
in
mov
push
lea
test
sbb
push
fildl
pop
dec
pop
ret
pop
xor
inc
mov
mov
mov
mov
jnp
movsb
aam
jnp
jbe
lea
mov
xchg
jbe
cmp
add
cmp
and
loop
sub
addr16
fstp
frndint
pop
les
ljmp
mov
or
pop
cmp
rcll
xchg
inc
mov
and
mov
rolb
dec
push
xor
int
push
loopne
jmp
jb
cmp
popf
scas
lock
add
cmp
testb
es
xor
pusha
inc
clc
mov
movsl
inc
daa
stc
stos
scas
inc
cmp
mov
repnz
mov
mov
fucomi
jno
sub
cmp
rol
xchg
neg
call
les
mov
int
sti
dec
iret
pusha
xor
je
sbb
push
and
inc
mov
sub
push
xchg
jo
mov
movsl
mov
mov
mov
sub
dec
jo
lea
lods
mov
insb
cmc
popf
loop
cmp
xor
lods
popa
lcall
ja
or
sbb
mov
in
out
or
jge
aaa
lea
cli
mul
sub
xchg
jle,pt
int3
jmp
dec
cmp
xor
or
mov
les
push
fimuls
jmp
mov
xchg
es
jmp
adc
sbb
jo
and
xchg
fmuls
dec
jno
rcll
inc
stos
arpl
push
cltd
iret
insb
aaa
jl
enter
stos
xchg
shlb
xor
mov
lea
fmull
dec
mov
test
add
pop
insb
ret
xchg
imul
sub
mov
adc
iret
jb
popf
push
lea
jae
mov
sbb
mov
mov
xorb
push
add
aas
cmp
push
insb
lea
xor
xchg
push
mov
sbbl
test
and
lods
stos
xchg
pop
insl
xchg
pop
push
rol
je
pop
int3
cmp
sub
lods
pop
test
pop
lea
ret
cmpb
mov
std
aaa
jns
mov
lea
nop
in
lods
call
enter
xchg
jp
add
arpl
insl
sahf
dec
and
jnp
pop
out
fs
or
mov
mov
fdivrs
hlt
popa
cwtl
and
lea
orl
ss
scas
mov
cmc
pop
mul
ret
cmpsb
gs
jbe
cmp
jg
pop
lfs
in
jae
xchg
push
in
ss
mov
sbb
pop
sub
imul
inc
xor
pop
jnp
ja
fildl
push
mov
mov
pop
pop
loop
mov
add
and
add
push
xchg
sbb
inc
and
mov
adc
and
jl
xor
ja
pop
xor
xor
mov
fs
bound
mov
lods
mov
fadds
lods
and
jo
mov
and
je
aas
cwtl
stc
mov
lods
ret
sub
add
cmc
pop
xchg
pop
lret
out
xor
inc
pop
ljmp
mov
add
scas
or
mov
mov
mov
rorl
add
popa
sbb
int3
std
gs
icebp
int
lea
and
adc
cmpsl
lcall
ret
xor
pop
xor
aad
or
mov
rorb
loope
in
push
iret
stos
pushf
and
fcmovne
lcall
pop
push
call
outsl
jno
pop
cltd
sti
adc
or
pop
mov
inc
cmp
sbb
and
fdivrs
lret
cmp
or
push
pop
and
jmp
mov
cld
inc
imul
data16
repnz
xor
rorl
push
ja
gs
cmp
inc
cmp
sub
imul
xor
xchg
gs
addr16
push
add
repnz
lods
pop
add
jno
movsb
jae
aam
xchg
clc
push
in
fwait
jge
fnstenv
sbb
xor
in
rclb
gs
lea
jno
jecxz
xor
ret
inc
sbb
in
sub
insl
mov
mov
and
xor
or
mov
addl
inc
pusha
jle
push
xchg
adcl
mov
add
out
ficoms
mov
es
aas
mov
push
or
jle
enter
or
sti
lods
icebp
sub
push
outsb
enter
ja
adc
test
outsb
mov
dec
fstpl
movsb
imul
mov
repnz
mov
sti
dec
ja
or
imul
dec
push
mov
loope
mov
insl
push
or
sarb
rcl
rol
in
sahf
es
sub
ljmp
shlb
jno
cld
in
jo
mov
cmpsl
outsb
inc
popf
sbb
movsb
lret
jno
test
scas
sbb
xor
adc
sti
sbb
ret
hlt
adc
or
mov
iret
cmp
ret
fsubl
loop
mov
push
enter
scas
jg
leave
scas
icebp
jae
int
pop
pop
adc
shlb
pop
or
and
iret
pop
mov
insb
xlat
mov
mov
fdivp
aaa
jbe
cmpsl
jmp
in
lea
les
or
adc
cmp
mov
sbb
inc
cmp
cmp
pop
sarl
shl
in
and
loop
xor
out
adc
inc
addl
xchg
sub
dec
insb
adc
cmc
xor
es
pop
lcall
fnstenv
rcll
fbld
lcall
and
mov
mov
loope
adc
call
and
loop
subl
das
xlat
sbb
mov
std
pop
push
into
loope
rol
in
dec
lcall
int3
fdiv
pop
lea
dec
aas
sub
sbb
mov
push
daa
repz
xchg
dec
int
aam
sub
jge
jg
and
jae
in
or
add
push
pop
in
jnp
push
mov
and
arpl
and
mov
jb
loop
cmpl
dec
lds
in
aas
pop
xchg
adc
in
orb
mov
xor
ret
adc
sbb
dec
sub
clc
leave
jno
movnti
loop
in
xor
fsubrl
addb
movsb
test
push
mov
outsb
pop
push
scas
jge
enter
cmp
imul
in
push
cmp
ja
add
test
testl
xchg
jb
iret
adc
loope
xor
divb
xor
mov
int3
stc
pop
out
adc
data16
mov
sbb
adc
decl
incb
pop
stc
aam
add
cmp
leave
ds
out
lock
mov
inc
xchg
popf
cmp
sub
xor
outsb
mov
movsb
lods
inc
push
es
mov
push
push
orl
out
outsb
push
fsubrl
lods
push
test
fwait
inc
xchg
pop
xor
jo
sub
scas
mov
xor
mov
in
sbb
push
dec
outsb
flds
fwait
xchg
test
dec
es
adc
adc
and
sbb
mov
sub
jne
jno
sbb
pop
rorb
jns
mov
sub
bound
in
mov
lea
sahf
push
ja
dec
and
fisttpl
push
add
and
fs
ss
mov
xchg
sub
das
movsb
adc
jle
jp
inc
xor
and
cmp
sub
mov
lahf
sub
stos
adcl
cmc
rep
ja
or
fsts
xor
int
mov
int3
popf
push
sbb
push
push
add
lods
xchg
and
lods
pop
test
pop
es
mov
xor
jns
xor
and
pop
stc
pop
mov
mov
add
sbbb
xor
fsubl
test
in
sbb
outsl
mov
lea
aam
mov
xor
pop
mov
movsb
loop
adc
std
js
in
cwtl
aad
mov
jmp
dec
movsl
and
loopne
push
imul
jle
cmp
cld
mov
stos
xor
test
push
repnz
and
mov
mov
jae
jle
push
mov
gs
lret
lcall
adc
and
dec
sub
lea
mov
sub
aam
xchg
sub
sbb
or
jl
sub
cmpsl
xor
dec
out
sbb
cmp
adc
push
sbb
mov
lods
adc
adc
push
bound
ja
inc
xchg
nop
mov
dec
push
mov
inc
mov
orb
jb
mov
or
push
ffree
shll
jbe
or
add
movsl
and
pop
pop
mov
imul
and
arpl
or
mov
mov
ffree
adc
sbb
mull
mov
jl
mov
dec
xchg
xor
cmp
dec
and
cltd
mov
ret
dec
popa
sbb
sti
loope
mov
mov
add
mov
test
xchg
cmp
mov
dec
lea
push
pop
stc
adc
mov
jmp
fisubrl
add
push
in
out
ficoms
pop
in
mov
test
xor
push
adc
mov
xlat
loope
mov
int
mov
add
inc
inc
xchg
pushf
ss
gs
and
sbb
and
fdivrs
dec
lock
aam
imul
dec
in
cmpsb
cli
scas
mov
imul
xorb
test
inc
jb
fs
aad
out
jg
and
fadds
xchg
in
lret
fists
sbb
or
dec
rcr
push
and
lock
ret
pop
cmp
mov
popa
fadd
push
popa
pop
out
xchg
nop
xor
mov
jo
loop
xor
fsubl
or
cmc
and
jne
out
and
or
sarl
and
mov
mov
test
mov
lea
xor
hlt
sub
lahf
dec
pop
mov
mov
add
fidivs
and
pushf
push
sub
imul
jno
mov
mov
push
sbb
inc
inc
sub
and
inc
in
inc
rorb
xor
in
scas
data16
pushf
daa
lret
inc
repnz
and
pop
dec
in
mov
scas
and
sub
sbb
jg
xchg
int3
in
xchg
fildl
and
adc
loope
mov
gs
lods
sub
xchg
ja
adc
sub
dec
sub
fldenv
adc
bound
fcoml
adc
adc
enter
pop
data16
ljmp
and
vandnps
mov
xor
sahf
xchg
pop
filds
cmp
ljmp
clc
dec
push
ret
push
add
fdivs
mov
mov
sbb
ds
xor
stos
cmc
and
mov
jecxz
push
or
in
pop
lcall
add
mov
pop
or
adc
mov
rcrb
mov
mov
push
and
int
fmuls
cmpb
mov
loop
push
jo
imul
rolb
sbb
xchg
ljmp
outsb
or
adcb
xacquire
sub
cmp
adc
jge
inc
cmpsb
fidivrs
push
sub
js
arpl
arpl
ret
bound
pop
mov
push
xor
jle
out
sbb
or
cmp
push
gs
or
scas
dec
sbb
mov
or
mov
negl
pushf
jno
lea
std
jb
xor
movsb
inc
pop
sub
sbb
push
outsb
and
or
lods
js
jmp
sarb
jb
fs
icebp
negb
and
mov
jle
mov
push
lcall
pop
sarb
adcl
inc
lock
dec
add
popf
dec
or
loopne
orl
bound
data16
js
cmc
push
ror
xchg
or
rcr
xchg
insb
loop
pop
arpl
cmp
icebp
rcr
pop
inc
fimuls
in
insb
mov
mov
mov
or
addr16
sub
fmull
orl
mov
in
loop
pusha
sbb
and
push
xor
lea
loope
push
mov
mov
and
in
mov
test
or
in
pusha
stc
cwtl
pop
mov
and
sarb
loop
adc
enter
inc
inc
cmpsl
lret
cmp
cmpsb
ret
cmp
or
leave
mov
scas
ret
mov
pop
cmpsb
xor
pop
jle
lods
pusha
sub
push
jl
rorb
outsl
outsl
lea
psraw
pop
pop
push
pop
mov
cmp
jg
adc
mov
cmp
out
std
jg
in
lcall
mov
or
std
cs
xchg
repnz
mov
push
add
pop
psubb
mov
test
mov
add
inc
movsl
shll
xor
in
popa
add
shll
sbb
dec
push
jae
repz
push
stos
dec
pop
and
jnp
mov
in
repnz
mov
cmp
xchg
jl
add
loop
outsl
sarl
jne
sub
mov
inc
sbb
pop
mov
jae
cs
xor
mov
xabort
jne
nop
je
daa
jne
popf
push
in
pop
push
cmpsb
hlt
xchg
movsb
jno
pusha
cmp
adc
xlat
cmp
jb
xor
jns
mov
sub
test
mov
lcall
lea
add
fnstcw
fidivs
inc
dec
leave
sub
push
ret
loope
push
fldt
jle
movsl
mov
mov
push
sbb
jno
mov
inc
cld
mov
sub
aad
lea
mov
ror
mov
push
lds
addl
rorl
popa
cli
sbb
mov
aad
pop
out
out
loop
jmp
in
data16
inc
leave
pop
shlb
sub
xchg
clc
sub
sbb
mov
jbe
and
pushw
shr
scas
cltd
into
dec
int
mov
js
pusha
in
sbb
fdivs
cwtl
mov
dec
push
cmp
pop
insb
pop
mov
xchg
addr16
push
xchg
sub
xor
xchg
inc
xchg
je
das
mov
jmp
fbld
and
smsw
lahf
inc
fistps
enter
ja
and
pop
adc
or
insb
mov
inc
sbb
xor
fimuls
or
add
sub
bound
scas
mov
rorb
imul
jnp
jno
loopne
cltd
cli
jp
subb
pop
and
int
cli
dec
shll
clc
jp
clc
adc
inc
mov
xchg
jne
mov
pop
and
shrl
mov
inc
fincstp
sbb
inc
push
loop
in
pop
les
pop
add
sahf
xor
mov
into
inc
fs
sbb
and
lods
sbb
jmp
movb
mov
cwtl
ss
adc
cmpsl
add
lea
dec
jb
icebp
push
shlb
add
das
outsl
cmc
sub
popa
push
sti
xor
sub
je
add
xor
sub
shll
jne
repnz
xor
mov
fdivp
out
out
popa
jle
sbb
jae
mov
adc
out
fwait
push
scas
inc
in
dec
leave
jae
leave
shll
sub
out
cmpsb
dec
xor
xorl
cmp
sub
outsl
je
in
loopne
inc
xchg
lea
jg
out
shll
je
loop
adc
sarl
lods
jae
ja
pop
in
pop
pop
xchg
sub
fsubrl
sbb
iret
sbb
das
cmp
sbb
or
ret
lock
repnz
sub
lret
test
lret
aam
add
push
cmc
call
dec
sbb
xor
lret
lods
jmp
inc
in
or
cli
mov
bndstx
or
test
dec
lods
aam
stos
lahf
ja
loop
adc
das
xchg
pop
gs
pop
mov
fsubr
adc
pop
daa
mov
jbe
daa
insl
lds
or
aam
scas
push
mov
jnp
pop
jo
and
cmpsb
in
in
nop
xor
pop
inc
ja
sub
lods
sti
xchg
jns
jbe
outsb
pop
mov
cmp
mov
and
lahf
cmp
lea
in
dec
rorl
inc
cltd
jae
sbb
jb
pop
dec
xor
lret
and
into
sarl
cmp
jecxz
out
mov
dec
push
adc
mov
xchg
sub
stos
mov
into
jecxz
test
fisubl
es
xor
shll
push
mov
icebp
xchg
pop
jp
inc
iret
dec
pushf
push
cmp
pop
inc
and
mov
stos
xchg
lahf
addl
mov
mov
adc
rolb
jns
push
sbb
lcall
out
xor
outsb
mov
rorb
mov
cmp
lcall
fwait
test
ja
xchg
pop
push
cmp
jae
jmp
lods
leave
cmp
xchg
inc
insl
mov
inc
cmp
xchg
jne
add
mov
mov
xchg
lds
stc
or
and
cmpsl
xor
pop
orl
cmp
push
inc
in
cmp
adc
lods
in
pushf
jl
jmp
dec
jns
mov
mov
mov
dec
lea
cmp
jnp
test
addr16
adc
dec
inc
push
insl
adc
shrl
jae
arpl
int
mov
dec
mov
push
push
shlb
xchg
mov
out
pop
lcall
mov
mov
fistpl
cmp
movsl
fidivl
inc
inc
cmp
adc
adcl
push
movsb
in
push
or
adc
pushf
jbe
repnz
cwtl
xor
mov
jo
mov
mov
loopne
fdivl
push
add
mov
inc
je
into
mov
and
push
imul
or
sub
inc
cmp
dec
mov
push
inc
dec
adc
adc
rol
data16
push
push
and
pop
icebp
or
jo
push
icebp
push
shll
mov
dec
cld
jns
mov
and
adc
xor
imul
xchg
je
or
mov
arpl
adc
stc
lcall
mov
stos
mov
mov
mov
jmp
push
pushf
ds
popf
arpl
es
or
mov
std
lret
dec
add
jl
pop
fabs
jecxz
mov
nop
cmp
mov
imul
push
repnz
in
divb
inc
bound
cli
push
fwait
cmpsb
and
pop
lea
xor
and
cmc
jo
scas
sub
mov
lret
andb
subl
mov
mov
popa
rclb
jo
lods
shll
clc
mov
mov
mov
mov
mov
movsl
movsl
mov
into
ret
push
push
xchg
or
jg
rcrb
fldl
cmp
dec
test
sub
inc
and
push
fisubrl
or
inc
or
call
ja
loopne
lret
sub
mov
mov
cmp
adc
push
push
push
inc
and
jno
jno
test
pop
filds
mov
in
or
add
adc
ja
xor
or
and
or
pop
lea
or
inc
bnd
in
es
inc
mov
pop
ljmp
push
inc
and
pop
jb
xchg
cmpsb
adc
xchg
pop
or
mov
xor
add
shlb
push
jno
stos
mov
and
lock
lret
movsl
movsb
add
insl
in
pop
outsl
push
bound
lahf
fimull
add
aad
xchg
jecxz
mov
sub
in
sub
jmp
int3
lock
cmp
xor
das
dec
pop
imul
aaa
sub
and
push
sahf
pop
mov
hlt
pop
lea
ror
sub
sub
pop
add
or
pop
movsl
pop
sub
pop
popa
and
xlat
or
cmp
mov
dec
shrl
hlt
push
loopne
je
lea
fiadds
push
mov
xchg
cmp
jns
adc
sub
and
fstps
add
insb
hlt
mov
lds
push
mov
pop
jecxz
jbe
imul
mov
adc
xor
outsb
fistps
arpl
lcall
dec
and
inc
in
ljmp
or
mov
jmp
push
pop
loope
daa
je
cmp
test
cs
xor
sbb
sub
mov
std
mov
adc
and
inc
movsb
out
pop
in
aad
insb
adc
stc
jge
xchg
dec
mov
in
in
scas
jmp
aam
insl
add
stos
insl
cmp
and
mov
out
ja
icebp
mov
in
pop
test
outsb
xor
and
ljmp
lea
and
or
movsb
mov
or
pop
and
adcb
xchg
les
call
loope
mov
adc
sub
pop
push
xchg
mov
add
xchg
mov
xchg
push
xor
fistps
xchg
and
and
inc
pop
add
adc
mov
add
pushf
lcall
xor
mov
push
push
call
movsb
repnz
adcl
add
mov
inc
inc
pushf
rcll
or
lods
popa
jno
dec
cmp
sub
sub
sbb
frstor
aaa
push
pop
dec
mov
xchg
filds
cld
push
or
xorb
sub
mov
push
fwait
je
mov
hlt
add
ret
push
pop
insb
or
mov
mov
sub
xor
je
jae
out
cmc
out
sbb
jne
fcmovb
adc
dec
push
push
pop
stos
sub
jns
and
xor
add
loope
mov
call
test
hlt
cmp
xor
out
pushf
mov
push
fs
mov
test
jp
inc
adc
fcmovnbe
clc
xor
cmpsb
dec
loope
lea
stos
rol
mulb
mov
je
out
jae
adc
js
loop
push
insl
imul
repz
mov
dec
jo
int3
dec
scas
pop
fsubs
movsl
mov
add
data16
scas
mov
pop
lock
rcl
cmp
mov
xchg
mov
aad
movsl
repz
sbb
mov
lds
push
movsb
add
data16
mov
stc
add
mov
addr16
daa
sbb
sti
sub
mov
arpl
scas
imul
jle
sarl
enter
jae
dec
push
imul
jno
notb
mov
shr
or
inc
insb
jg
movsb
icebp
pusha
stc
jb
inc
loope
sti
mov
jns
lods
push
fs
in
bound
test
leave
bound
nop
jl
mov
and
pop
loop
sbb
imul
fs
negb
and
or
jb
cmovo
cmp
lea
mov
pop
stc
mulb
or
jg
or
scas
sub
mov
jmp
and
in
xchg
jmp
outsb
push
cmc
push
or
in
test
or
xlat
mov
mov
sub
mov
lcall
test
mov
adc
fcoms
xor
add
call
jns
push
mov
icebp
dec
xor
mov
push
or
rcl
cmp
cli
dec
das
pushf
add
std
ljmp
jmp
mov
jmp
aad
cwtl
jmp
mov
dec
xor
pop
pop
sti
jl
hlt
lods
mov
outsb
inc
xchg
imul
cmc
lea
bound
mov
mov
xchg
pop
rcl
loope
xor
jp
mov
ss
and
dec
shrl
dec
mov
push
add
jp
mov
fistl
roll
cmp
mov
jl
movl
jmp
rep
cmc
sub
fnsave
xor
in
divb
xchg
mov
fistpll
jb
push
dec
xor
jle
xchg
stos
cwtl
push
add
lahf
repnz
aad
and
cli
jae
mov
push
lods
lds
ljmp
cmp
mov
push
adc
shll
movsl
push
jnp
cmp
aas
enter
push
jae
arpl
ret
jle
xor
aad
inc
loope
or
fwait
jae
sar
in
push
movsb
stos
roll
jmp
pop
and
xor
stc
push
faddl
loope
in
push
lea
imul
add
jb
sub
mov
bnd
leave
push
cmp
cmp
fnstenv
pop
dec
je
mov
mov
bound
pop
scas
sar
icebp
hlt
add
push
shrl
mov
xchg
push
mov
imul
mov
mov
mov
shll
push
and
push
sbb
cmc
jle
inc
into
sub
movsl
imul
divb
or
adc
sbb
rcrb
std
outsl
les
cmp
inc
fidivs
ret
mov
adc
jns
jmp
xorb
xor
fcomps
dec
outsb
testl
jle
sbb
jp
out
or
js
pushf
rep
dec
lea
in
loop
and
dec
xchg
jbe
inc
mov
xor
mov
mov
in
inc
add
xor
and
test
pop
outsl
jle
call
inc
dec
loope
minps
jno
vmovntps
xchg
scas
push
inc
mov
dec
adc
popa
in
lods
aad
dec
mov
or
out
fstps
or
scas
mov
mov
adc
sub
mov
and
mov
imulb
mov
dec
sbb
pop
fidivrl
xor
pushf
ljmp
fdivs
jns
gs
in
imul
fdivrs
out
sub
dec
fcompl
insb
xchg
mov
in
cmpsb
push
xchg
dec
xchg
stos
popa
sub
int
out
push
dec
mov
inc
sahf
pop
jge
aas
add
sub
push
bound
scas
inc
lds
pop
loopne
arpl
jmp
and
je
jmp
and
cmp
je
sub
mov
or
jo
mov
mov
jnp
and
or
pusha
stc
mov
cli
jns
push
pushf
aam
pop
popf
pop
adc
outsb
outsl
and
movsl
sarl
mov
insl
hlt
test
pop
push
and
add
push
sub
stos
push
or
push
rol
mov
jno
cmpsb
push
icebp
pop
daa
mov
mov
sti
xor
imulb
mov
jne
and
sbb
daa
mov
test
sub
mov
stos
push
repnz
jg
outsl
inc
push
enter
aaa
aas
dec
repnz
cs
jne
mov
mov
in
or
mov
mov
in
pop
movlps
arpl
mov
push
bound
outsl
xor
sbb
je
adc
mov
push
jnp
inc
xor
mov
sahf
add
movsb
in
and
pop
jo
jmp
cltd
or
movsb
test
int3
push
lea
jo
mov
rorl
call
idivl
jnp
xor
lea
and
sbb
or
aad
data16
mov
dec
gs
xchg
push
push
sbb
mov
pop
jg
movb
add
push
xchg
out
inc
xchg
fwait
mov
sbb
pop
push
call
adc
stc
jmp
sub
pop
cmp
loope
lods
cmpsl
cmp
adc
mov
sbb
in
or
jae
add
jg
sbb
fimuls
repnz
sbb
sahf
mov
push
rol
in
insb
pop
sarl
and
adc
arpl
outsb
lea
cmp
xor
xor
out
mov
sub
loop
push
xchg
jle
insl
mov
fs
pop
loopne
loop
test
xor
or
sub
and
push
mov
adc
mov
fildl
loope
jne
out
pop
shll
loope
xchg
and
push
insb
or
xchg
adc
adc
adc
mov
dec
mov
sbb
jmp
ds
int
mov
xor
pop
adc
enter
cwtl
repz
stos
mov
sbb
xor
enter
test
and
xchg
test
lea
fidivl
and
or
ja
pop
test
into
mov
cli
fcomps
fidivs
push
sbb
into
dec
lods
arpl
push
imul
in
gs
sbb
lock
xor
into
lods
movzbl
xchg
out
lods
and
in
out
test
pop
inc
and
push
je
gs
ja
and
outsb
mov
rorb
sarb
cmp
ja
les
sahf
xor
or
xchg
lods
int
xor
cmp
mov
sub
xor
orb
mov
aaa
add
sbb
cmp
or
into
mov
js
add
fsubrp
mov
dec
sub
dec
dec
push
out
into
pop
outsl
sub
push
ds
cmp
ret
aas
sbb
das
mov
adc
jb
das
lock
jle
or
adc
or
sub
jle
xchg
in
xor
jo
jp
mov
lock
aam
and
or
push
sbb
shrb
mov
dec
dec
lds
pop
fucomi
pushf
push
jae
idivb
ret
adc
push
jmp
inc
and
mov
adc
icebp
daa
mov
inc
icebp
shrb
test
pop
and
mov
dec
mov
insl
jno
jae
hlt
jne
mov
enter
arpl
leave
andb
lods
jno
fs
hlt
bound
jae
jo
and
loopne
adc
test
ja
or
xor
add
mov
loop,pt
adc
sbb
mov
call
inc
dec
jae
mov
jae
je
lret
cmpsl
sub
mov
cmc
stos
aam
lea
and
sbb
dec
lock
sub
cmpsb
addb
mov
outsb
mov
loopne
push
fsub
inc
push
dec
mov
shlb
lahf
jae
mov
or
sbb
popa
mov
imul
arpl
sbb
xor
in
dec
xchg
sahf
arpl
jmp
jns
insb
xchg
pop
or
jle
xchg
and
jne
cmc
jg
xor
push
dec
cmpsl
xor
push
and
pop
ljmp
lock
test
js
jae
adc
push
and
jl
arpl
and
inc
inc
xor
ss
insb
imul
fimuls
sub
sbb
inc
xor
push
xchg
push
pop
aas
bound
ja
mov
add
icebp
pop
in
loop
dec
fsubrs
or
scas
divb
fmull
pop
adc
add
std
inc
pop
and
or
cmp
cs
inc
add
daa
adc
dec
loope
mov
in
pop
xor
sbb
mov
push
lea
aas
jne
pushf
cli
xchg
mov
fisttpl
or
arpl
gs
push
mov
add
es
mov
ja
adc
jmp
xchg
movsb
dec
aad
inc
jle
sbb
or
es
and
nop
outsl
push
sbb
bound
in
sarl
mov
mov
xor
or
dec
jle
add
pop
outsl
cmp
mov
fdivrs
popa
repnz
fs
lods
in
nop
subl
dec
push
push
es
in
adc
loop
mov
sub
jecxz
in
jmp
add
fisttps
ljmp
xor
mov
ja
es
mov
jb
mov
xchg
movl
or
imul
repz
mov
mov
mov
sbbl
lods
out
mov
aam
or
inc
std
imul
je
or
lea
icebp
lcall
incb
pop
fs
push
jns
jmp
leave
scas
rcll
mov
fidivrs
fildll
lar
nop
pusha
mov
or
rorb
xchg
adc
or
ficompl
cltd
sti
sub
cs
shrl
mov
dec
adc
mov
ret
stc
ficoms
lret
pop
add
mov
orb
jmp
inc
dec
dec
and
negb
loope
add
fnsave
stos
push
bound
dec
cmpsl
sub
sbb
jnp
in
imul
sbb
and
push
mov
test
lret
add
rcll
in
xor
test
lds
jmp
add
sar
daa
xchg
and
mov
xor
ffree
lock
ret
jge
inc
in
pusha
xor
int3
jno
mov
rorl
mov
jl
sub
aad
rcll
jae
pop
les
repnz
loope
pop
pop
xchg
scas
xchg
xor
mov
cld
inc
or
das
jp
popf
insl
cwtl
sti
mov
je
stos
cmpsl
or
push
addb
mov
xor
insb
jno
ds
jns
cmp
outsl
ss
int
arpl
stos
mov
rcll
push
je
pop
pop
adc
sbb
cs
and
enter
cmp
lock
dec
jp
mov
pop
jno
js
call
mov
pop
mov
nop
and
lret
mov
jnp
addb
jne
xchg
lret
and
fldl
insl
pop
ret
mov
inc
clc
stc
cmp
pop
sarb
clc
mov
hlt
lea
aas
bound
je
aas
adc
inc
loope
lahf
dec
sbb
push
rorl
jno
push
pop
ret
lea
test
imull
jb
dec
int
mov
mov
ficomps
mov
in
mov
sahf
xchg
xor
lea
mov
jmp
aam
jae
test
je
rorl
mov
enter
cmc
lea
mov
or
js
insl
loop
xor
popa
jmp
imull
adc
push
pop
test
xor
inc
in
test
mov
mov
and
mov
xchg
push
sbb
insb
xlat
test
pop
xchg
lea
mov
and
push
in
jg
mov
daa
mov
sbbb
scas
jno
lods
testl
mov
sarb
add
insb
mov
jle
mov
dec
pop
jmp
push
push
aad
pushf
mov
in
shl
mov
xchg
sub
lods
push
imul
pop
aam
ss
add
lret
pop
cmc
fcomps
and
cld
push
sti
arpl
dec
cmp
mov
mov
aad
and
ret
pop
pop
hlt
jp
hlt
stc
jae
xor
pop
adc
mul
imul
daa
andb
lods
aas
cmpsl
lahf
mov
fstps
outsl
mov
sbb
sub
insb
sub
mov
push
in
scas
add
in
push
and
cmpl
mov
inc
jge
jmp
sbb
pop
lea
pop
in
das
inc
push
sbb
sub
push
mov
call
xor
mov
xchg
adc
insl
mov
pushf
out
mov
subb
push
lods
mov
scas
clc
stos
iret
popa
xchg
std
jp
cs
mov
pop
rol
leave
loop
and
dec
lret
aas
cli
stos
pop
pusha
cmp
adc
je
imul
jmp
pushw
pmovmskb
and
sub
add
rcl
add
adc
aad
cmp
push
insl
jl
ret
mov
inc
cmp
jae
test
cwtl
mov
and
pop
aad
lcall
lock
mov
fstpl
in
pop
repnz
dec
jle
inc
pop
mov
stos
adc
cmpsl
ss
in
dec
or
mov
mov
lods
mov
icebp
shlb
add
adc
fcoml
xor
mov
cmpsl
pop
in
adc
adc
cmp
je
push
sub
adc
movzbl
and
cmpsb
adc
jp
inc
stos
mov
je
push
int
lea
jnp
xor
pop
cmpsb
fsub
sub
shlb
lock
mov
add
insb
into
and
sub
sbb
ja
jmp
movsb
jmp
stc
in
rcrb
rolb
pop
rcrb
lea
xchg
int3
out
push
cmp
dec
adc
dec
in
dec
add
jae
cmp
sahf
or
pop
adc
sbb
mov
push
or
mov
add
outsb
and
pop
mov
xchg
movsb
je
stc
cmp
push
outsb
lret
and
insb
aaa
into
pop
ss
flds
pop
in
pop
sbb
mov
shlb
push
add
hlt
lret
cltd
cmp
mov
inc
popa
mov
xchg
and
fwait
mov
mov
pop
repz
sti
out
mov
add
push
js
or
test
rorb
dec
imul
les
inc
cmp
loop
fcomip
and
popf
jns
mov
or
inc
cwtl
popa
imul
scas
add
jae
adc
jle
cmp
sub
or
add
push
js
mov
sahf
pushf
inc
push
jg
neg
mov
jae
mov
inc
pop
bound
mov
push
mov
sahf
cmp
push
mov
jmp
and
outsl
push
sub
mov
sbb
mov
icebp
adc
rorl
xor
call
mov
sub
pop
stc
pop
and
adc
mov
ss
repnz
test
int3
enter
xchg
in
gs
pop
mov
jo
enter
cmp
call
scas
adc
adc
sub
push
push
jb
sub
jnp
jp
or
test
mov
sahf
mov
adc
in
xor
gs
mov
cli
movsb
or
mov
stos
sarb
jbe
sarl
xchg
inc
pop
mov
insb
mov
jb
mov
bound
mov
out
stc
std
push
lock
pop
jnp
push
and
push
lret
mov
mov
adc
pusha
mov
mov
shll
and
cld
jp
xchg
lods
sub
inc
inc
je
lds
js
sbb
lret
inc
out
jge
pop
int3
jge
jp
das
push
jo
mov
shlb
les
sahf
adc
jno
push
pop
jp
mov
adc
mov
jns
js
jo
mov
jno,pt
xorb
push
aad
mov
mov
cmpsb
push
leave
test
add
pop
adc
and
call
jb
call
adc
mov
or
icebp
mov
mov
and
outsl
jmp
pop
pusha
sub
int
sahf
jecxz
mov
cmp
mov
ljmp
out
jge
pop
sti
cmp
mov
jae
or
inc
mov
pop
jo
or
mov
mov
repnz
xor
add
xchg
in
hlt
mov
xchg
mov
movsl
in
jnp
pop
xor
push
nop
aam
ret
jne
movsl
fsubrl
mov
mov
jno
sbb
mov
cld
lret
xor
gs
in
mov
cld
push
mov
fbstp
xchg
xor
add
shrb
mov
adcl
xor
scas
sub
pop
sub
lods
adc
lods
pop
stc
mov
adc
xchg
add
popa
dec
mov
dec
push
shll
add
dec
dec
dec
xor
out
xchg
pop
std
sub
es
mov
pop
jnp
mov
sbb
cmpsl
jle
sub
js
cmp
mov
cltd
mov
lret
imull
test
or
imul
mov
push
into
je
lea
sub
mov
in
mov
lods
jo
push
sbb
cli
jb
arpl
sub
push
lret
push
jo
sub
jne
mov
bound
xchg
push
jmp
rcr
cmpsb
and
push
cwtl
mov
arpl
arpl
sbb
sbb
mov
push
arpl
inc
jb
shl
popa
add
mov
int
mov
pop
pop
push
mov
push
ljmp
jl,pt
push
aas
push
adc
rcrb
push
popl
stos
xor
gs
ja
jne
ret
or
mov
hlt
jg
push
test
mov
sti
jge
or
and
dec
push
xor
lret
rcl
lds
or
jmp
rolb
addr16
fsin
rcll
lods
or
rclb
jp
dec
or
jae
mov
push
popa
mov
in
movsl
sbb
cmp
nop
lods
lods
jno
lea
aad
jmp
into
rcr
fwait
dec
inc
add
lea
inc
repz
push
aad
lea
inc
add
xor
pop
test
mov
sahf
xchg
push
ljmp
in
jns
sub
in
xchg
jnp
push
xor
jl
mov
scas
fdivrl
lcall
push
into
sbb
lock
dec
call
pop
popa
adc
pop
adc
out
push
insl
mov
dec
in
sub
push
insb
add
cmpsb
push
inc
mov
lcall
js
hlt
scas
xor
adc
cld
lods
cmp
sbb
pop
jno
mov
rcr
insl
sub
mov
and
icebp
push
fsubr
and
pop
mov
mov
testl
mov
or
leave
cmpsb
repnz
xchg
and
dec
dec
sbb
cmp
or
mov
sub
mov
popf
sub
lahf
pop
fs
leave
inc
cmp
shlb
sbb
push
in
mov
outsl
xor
clc
lret
addb
mov
cmpsl
dec
outsb
in
mov
cmp
fldcw
and
jnp
jg
insb
push
pop
jmp
inc
mov
insb
into
in
ss
mov
fcmovnu
jecxz
scas
mov
lea
pusha
add
cltd
sub
ret
pop
dec
jbe
enter
or
dec
clc
cmp
xor
sbb
mov
xlat
inc
fbstp
mov
dec
aad
mov
faddp
jne
inc
jb
ret
adc
lret
test
dec
test
mov
fcompl
jl
jp
mov
enter
mov
sbb
push
lahf
out
xor
mov
push
mov
push
icebp
movsl
pop
sti
cmc
sarl
in
add
mov
fsubrp
hlt
dec
iret
sbb
mov
lea
shl
xchg
rcr
js
in
push
sti
sub
mov
adc
ret
xor
sbb
ficoms
aaa
push
jmp
inc
insb
inc
gs
adc
ficoms
sti
ja
gs
icebp
pop
push
orl
stos
mov
mov
lock
xchg
push
js
push
daa
xor
mov
mov
notl
add
xor
mov
les
sub
addr16
mov
pop
test
push
fbld
call
test
ret
mov
fisubs
lret
cmp
sub
aam
or
loope
loope
orl
inc
cmpl
in
cmc
pop
out
push
inc
jp
inc
in
int3
xchg
add
fldenv
pop
inc
or
js
jo
mov
rclb
pop
xor
push
add
xchg
mov
add
lods
push
and
aaa
lahf
int
add
js
mov
mov
inc
mov
mov
sti
mov
mov
and
or
das
pop
in
icebp
or
stc
mov
in
out
nop
lea
xchg
jno
mov
lcall
or
daa
jb
or
xchg
xor
xor
adc
imul
loop
jns
sbb
fdivrs
ss
cwtl
hlt
dec
mov
pop
jb
aaa
call
jo
lea
and
jmp
push
das
push
sbb
jge
arpl
cmp
hlt
mov
mov
in
popa
mov
pop
test
int3
not
sbb
fwait
lock
push
add
mov
sbb
gs
shll
fisttpll
pop
and
sbb
xchg
shrl
dec
loop
stc
add
rol
lods
nop
xchg
mov
push
push
push
cld
push
jnp
and
das
jo
sub
test
push
xor
push
xor
popf
and
push
int
cmp
dec
inc
sahf
add
cmp
push
enter
jge
mov
in
adc
stc
aad
shrb
or
xor
sti
rcr
jb
fwait
popa
scas
in
xchg
mov
xor
and
adcb
lret
data16
test
pop
ret
cmp
rcrl
stos
les
dec
jecxz
or
in
jp
int3
fnstsw
cmc
push
or
adc
std
jno
lret
adc
testl
imul
repnz
pop
or
cld
lea
test
int3
js
mov
mov
push
and
cli
push
fcmovnu
inc
sbb
or
mov
xchg
pop
xor
lea
es
push
and
push
out
stos
pop
and
sub
cmp
pop
and
mov
cld
movsb
jae
popa
push
js
fcoml
je
fnsave
popa
mov
sub
jmp
sahf
loop
sbb
dec
sbb
jp
lds
aam
dec
test
inc
sahf
cmp
xchg
pop
mov
add
sub
ficoms
lea
xor
out
out
enter
dec
cmpb
push
lea
mov
repnz
inc
mov
inc
hlt
outsb
movsl
jns
enter
xchg
pop
mov
or
mov
jno
sahf
popa
jns
mov
stos
jo
dec
and
add
sar
xor
cmp
jp
dec
out
sti
ret
inc
fistpll
sbb
in
cld
mov
neg
jne
and
push
into
insb
fdivrl
inc
mov
jge
aaa
out
or
lods
xlat
mov
fwait
pop
nop
rolb
cld
or
sub
sbb
daa
or
cmpsl
sub
sub
and
imul
cmpsb
inc
and
push
movsb
dec
es
jns
scas
jno
lds
jle
jg
jo
rclb
lahf
mov
adc
adc
bound
jae
push
ret
jbe
dec
addr16
lea
arpl
dec
cli
push
cmpsl
push
aad
in
loopne
fistpl
cmp
test
or
icebp
and
pop
lds
lcall
add
insb
lea
aas
xchg
mov
hlt
imul
xchg
mov
mov
xchg
test
in
aaa
js
jno
pushf
cmp
mov
icebp
dec
enter
stos
repnz
out
into
mov
shl
mov
lahf
mov
push
and
jne
mov
mov
test
mov
cwtl
mov
ljmp
pushf
fstpt
jg
and
mov
mov
imul
sub
in
sbb
bound
lea
les
mov
divb
lret
mov
adc
adc
sub
lds
or
pop
xchg
and
mov
int3
in
dec
out
cwtl
sbb
pop
xor
inc
in
mov
scas
ffreep
and
or
lds
movsl
xor
adc
ja
lock
clc
ja
es
or
bnd
insb
stos
lret
sub
sub
or
out
mov
inc
insl
inc
push
in
arpl
jge
pop
jno
mov
out
insb
mov
ja
shrb
jae
lahf
cmp
mov
out
mov
xor
not
jp
ljmp
xchg
push
leave
arpl
xor
aas
out
adc
lods
mov
mov
or
enter
mov
ljmp
adc
pop
inc
mov
dec
mov
jle
cmp
sub
push
jo
adc
push
xchg
cmc
mov
push
sahf
sub
sub
lods
in
sub
and
aad
or
adc
pop
xor
int
out
xor
inc
mov
movb
out
aad
lahf
insb
and
inc
lcall
std
push
loopne
mov
add
cltd
fistpll
push
dec
js
sahf
push
fiadds
aad
mov
les
cmc
in
leave
in
cmp
fwait
lds
and
or
icebp
sub
icebp
jp
call
sub
movsb
hlt
adc
xchg
or
mov
mov
iret
dec
jno
mov
daa
mov
push
push
mov
push
pop
cmc
insl
jmp
dec
sti
aaa
pop
shlb
js
test
lea
daa
jl
pop
stos
ret
mov
ret
mov
into
sbb
jno
leave
push
sub
leave
cmp
insl
sub
clc
imul
in
inc
fistps
xlat
insl
jecxz
mov
std
fsts
and
mov
and
jl
inc
mov
lods
dec
out
mov
add
aas
adc
sarb
and
push
fs
or
pusha
jno
stos
sub
xor
jno
lcall
lea
push
jns
lea
pop
mov
jmp
lcall
pop
mov
ret
dec
xor
pop
push
in
dec
xchg
and
test
aad
hlt
jo
test
lahf
adc
call
pop
cmp
stos
add
in
jne
mov
xor
icebp
xchg
cmp
popa
jg
pop
in
xlat
stos
jo
in
aad
icebp
mov
insb
gs
pop
stc
push
fsubs
dec
dec
mov
jg
add
fisubs
adc
pop
xchg
jae
mov
ss
cmpsl
jae
fistps
mov
dec
add
ja
or
push
xchg
cmp
mov
in
mov
adc
arpl
aad
repz
cmp
popa
xchg
mov
ret
mov
out
jo
inc
xor
cmp
scas
xor
daa
adc
loope
push
xor
mov
std
sub
test
xchg
arpl
pop
sub
xor
lods
int
pop
push
scas
daa
xchg
mov
and
fs
inc
push
mov
int3
xchg
in
cli
je
lods
popa
xchg
fidivrl
std
iret
hlt
jmp
cmp
lods
sarl
mov
repnz
loope
repnz
jo
mov
and
cmp
add
lcall
lea
scas
jne
lret
lods
jmp
xchg
fdivs
leave
daa
xor
pop
hlt
pop
and
pop
inc
popf
inc
inc
cmp
out
jl,pt
push
hlt
lods
xlat
lea
or
sbb
ja
int
js
insb
mov
xchg
add
push
jo
push
or
mov
lea
sub
sbb
dec
xchg
ja
mov
cs
inc
lea
cltd
mov
mov
jns
and
ret
sbb
data16
jp
mov
or
xchg
sub
xchg
or
fcomps
dec
fistpl
jecxz
aad
jae
or
add
push
cwtl
js
mov
mov
and
mov
in
loop
stos
mov
pop
cmp
and
push
icebp
inc
lret
das
fisubl
int3
popf
mov
push
loope
add
int
in
mov
aaa
add
mov
and
je
loop
ljmp
in
cmc
or
or
lea
push
add
loope
je
fildll
jmp
loopne
inc
xor
nop
cld
xor
insb
cmpsl
jbe,pn
or
scas
imul
cld
cmc
daa
xor
add
xchg
jo
pop
data16
addl
inc
cmp
jae
jge,pn
cmc
mov
mov
imul
and
and
fimull
ja
dec
or
in
xor
jae
mov
in
pop
xor
gs
cmp
adc
jp
mov
mov
jae
fsubl
inc
dec
dec
jbe
addr16
adc
mov
adc
bound
and
push
jo
xlat
aad
add
pop
or
es
mov
mov
lahf
outsl
jb
ret
mov
mov
push
jp
jo
pop
and
dec
rcrb
fnstcw
fisubrs
in
sub
or
pop
fsubl
fiaddl
jecxz
in
arpl
sub
jg
cmp
loop
insb
fs
dec
cmpl
xor
push
ja
pop
idivl
js
pop
aad
imul
inc
jecxz
mov
push
or
adc
mov
and
fisttpll
ljmp
in
mov
cmp
and
jecxz
fidivs
pop
in
mov
addps
out
jecxz
cmp
scas
cmp
into
mov
test
pushf
mov
gs
call
push
nop
xchg
in
cmp
jae
xorb
push
mov
mov
loopne
push
fwait
and
mov
mov
inc
dec
lock
stc
cmp
sub
cmp
test
add
mov
aaa
lods
mov
adc
data16
enter
fisttpl
mov
push
mov
bound
and
dec
sbb
mov
inc
cmpsl
jns
adcl
xlat
lea
pop
pop
xor
and
popa
rclb
xchg
loop
fdivl
adc
jnp
popa
lret
sbb
xchg
inc
xchg
gs
cld
push
and
xlat
arpl
dec
mov
fimuls
inc
subl
adc
adc
cmp
lret
mov
xchg
mov
add
jmp
xor
lds
jo
push
aad
cmpsb
or
adc
mov
dec
push
cltd
stos
sbb
pop
out
dec
jbe
push
mov
jle
and
popa
push
cmpsb
pop
sub
cmp
mov
arpl
mov
and
fmuls
sub
fwait
push
les
lods
loopne
arpl
divl
sbb
sar
dec
rclb
cmp
jno
cmc
fstps
jnp
sbb
mov
in
loop
inc
push
cmp
mov
fistps
jae
ret
add
aam
loope
rorl
cmp
stc
shrb
or
sahf
outsb
sub
add
insb
pop
mov
push
notb
xor
and
outsl
pop
btc
popa
cwtl
add
arpl
idivb
dec
call
pop
loop
enter
and
push
jno
pop
xor
mov
addr16
mov
jns
pop
add
test
dec
out
jge
or
clc
xchg
xchg
lds
xchg
cwtl
outsb
and
enter
iret
cmpsl
inc
mov
popa
jg
adc
movsb
stc
jmp
test
adc
add
ljmp
jp
mov
test
aaa
mov
loope
nop
repnz
iret
ja
push
mov
js
imul
and
push
push
gs
push
xchg
testb
push
xor
fstpl
dec
xchg
iret
push
shlb
adc
xor
xor
fsts
pop
dec
iret
push
xor
mov
xchg
mov
fwait
loop
enter
mov
test
mov
dec
xchg
xlat
sub
xchg
and
pop
insl
mov
popf
jmp
push
daa
shrb
iret
jge
lods
inc
sub
jl
scas
test
je
pusha
daa
cmp
xor
lret
dec
inc
mov
cmp
sub
lahf
mov
sarb
inc
sbb
pushf
pop
insl
push
test
repnz
or
in
pop
loop
xor
mov
pop
iret
das
dec
repnz
push
sub
or
sub
lea
or
test
mov
and
addr16
pop
rolb
inc
and
fdivrs
out
lahf
leave
lock
mov
sub
ljmp
testl
push
inc
roll
mov
adc
jae
inc
or
and
sub
leave
cmp
xchg
and
mov
ss
pop
and
dec
jp
jnp
leave
inc
in
jp
xorb
or
cmp
xchg
iret
nop
insb
mov
sbb
jmp
jmp
pop
cld
pop
pop
jmp
mov
or
and
inc
in
jge
xchg
mov
pop
push
ret
scas
mov
mov
popf
pushf
and
pusha
sub
repz
jne
or
pop
jl
jno
sbb
jl
lahf
dec
lods
sub
icebp
and
adc
cld
inc
xchg
lret
cmovl
add
cmp
test
push
std
sbb
in
sbb
sahf
xchg
sbb
scas
xlat
gs
scas
dec
pusha
in
ret
icebp
pop
fdivrp
popf
inc
imul
mov
sub
clc
test
mov
lea
add
xor
jo
adc
imul
jmp
adc
adc
daa
pop
xor
aam
xor
lds
insl
push
mov
arpl
mov
jnp
jmp
arpl
lret
inc
add
mov
push
rclb
push
cmp
loope
test
jmp
pop
mov
push
in
jg
xor
and
lds
sub
inc
and
mov
sbb
and
sub
sub
mov
inc
jmp
dec
xor
divl
mov
outsl
push
int3
mov
pop
lods
jno
sahf
pop
addl
and
pop
push
dec
mov
or
mov
andb
call
sbb
call
insl
push
cli
aaa
adcb
jbe
xor
jp
fdivrs
pop
das
mov
outsb
cwtl
inc
lret
or
pop
mov
jae
bound
iret
jecxz
js
pushf
mov
stc
cmpl
in
xchg
adc
jns
jae
test
and
adc
in
fsubs
insb
sub
fistpl
fistpl
sub
nop
fsubs
sbb
lea
jge
in
insb
mov
add
sbb
int3
loopne
insb
lea
xchg
cmpsb
mov
mov
outsb
jnp
sub
fsubs
add
test
fiadds
xchg
mov
lea
out
mov
call
imul
mov
leave
push
in
push
jae
inc
sub
inc
push
aad
int
imul
xor
mov
mov
or
adc
inc
call
sub
xchg
sbb
mov
or
xor
sbb
mov
repnz
and
clc
imul
xor
repnz
loopne
loop
mov
pop
mov
dec
shlb
pusha
outsl
or
and
test
adc
cmp
call
aam
fisubrl
jae
pop
mov
dec
aaa
adcl
in
adc
mov
cmp
jg
jae
lds
shr
sub
icebp
cmpsl
adc
mov
jno
sarb
and
imul
and
call
jae
out
data16
in
jle
pop
mov
adc
jl
jl
fxch
push
xor
add
shr
leave
mov
shll
jge
lds
sahf
sbb
fdivp
test
popf
and
bound
mov
leave
ret
inc
pusha
std
add
inc
mov
xchg
outsl
leave
jns
adc
insl
xchg
sahf
mov
icebp
inc
mov
xor
xor
cmp
jnp
mov
sub
cmp
mov
rclb
cwtl
test
ret
lret
jbe
mov
stos
sub
mov
mov
cli
dec
xchg
jg
fs
sbb
push
inc
jae
gs
jecxz
cwtl
nop
imul
loopne
dec
dec
cmp
mov
adc
push
inc
push
adc
repnz
xchg
sahf
aas
pop
sub
xchg
je
sti
out
mov
push
xlat
movsb
imul
adc
lahf
loop
jp
lret
dec
jo
stos
mov
jno
push
lock
in
push
jge
rol
aad
mov
inc
pop
jbe
push
insb
imul
arpl
push
loope
loopne
cmp
sub
loope
mov
pop
in
mov
rclb
inc
mov
aad
dec
cltd
in
pop
xchg
lea
popf
out
cld
stos
pop
jne
or
cmp
arpl
sub
push
pop
sbb
push
xor
fistps
sub
and
or
sti
popf
cmp
loope
inc
dec
lahf
sti
call
push
mov
sub
pop
inc
jmp
add
fstpt
sub
jge
in
inc
lea
loope
inc
and
add
xchg
popa
sub
gs
dec
adc
mov
dec
and
sub
lods
dec
lods
insb
ss
xchg
push
loope
out
push
movl
sbb
popf
lahf
xor
lods
fwait
dec
daa
daa
pop
mov
outsb
cs
bnd
addb
push
xor
xor
push
scas
mov
cmp
lods
loop
mov
jl
mov
fldenv
xor
pop
mulb
daa
sub
int
mov
mov
addr16
inc
add
pop
mov
push
outsl
and
adc
lahf
jae
repz
and
jmp
test
jae
pop
mov
cmp
lea
push
jge
mov
cld
fidivrs
lret
js
repnz
movsb
xchg
repz
xchg
fldt
imul
mov
adc
outsb
or
lea
in
int
adc
lea
xchg
mov
mov
aaa
stos
push
pusha
xor
mov
loop
test
or
xchg
push
mov
or
int
sbb
dec
jmp
mov
or
jo
xchg
shll
mov
fnstenv
bound
mov
leave
push
js
out
shll
lea
dec
jne
shl
mov
mov
jmp
jb
popa
xchg
push
out
test
cmp
inc
adc
sbb
sub
loop
dec
lahf
adc
icebp
test
sub
loop
xchg
fldz
sbb
mov
popa
jb
in
sbb
es
loope
xor
daa
arpl
lds
jle
repnz
insl
sbb
sbb
xchg
fadd
fistpll
add
mov
jnp
pop
int
std
inc
pop
loop
xchg
cltd
push
dec
push
xor
nop
stos
and
push
jge
popa
cmpsb
loopne
mov
movsb
repnz
mov
jno
mov
lea
loope
in
lds
loope
jno
es
data16
and
push
popa
mov
xchg
xchg
cmp
in
icebp
xchg
cmc
aas
mov
lahf
roll
sbb
in
adc
adc
daa
jb
aad
inc
xchg
test
bound
icebp
cmp
xor
ficoml
fisttps
dec
insb
mov
shl
push
adc
lods
lret
cltd
pop
push
dec
sarl
xor
xchg
out
inc
mov
mov
xor
mov
in
std
fabs
fstpl
or
dec
jp
xor
rcrl
sub
lea
iret
jno
imul
in
jg
es
inc
sbbl
pop
loop
shrb
mov
mov
pop
jp
add
mov
push
in
xchg
xor
add
jno
mov
outsl
dec
nop
push
dec
jb
mov
cmpsb
loop
ja,pt
arpl
sbb
mov
orb
xchg
fbld
inc
movsb
add
cmpsb
mov
push
fdivl
inc
mov
adc
xorl
hlt
test
mov
arpl
fadd
lock
and
pop
fdivs
dec
stc
gs
sub
int3
scas
orb
cmp
xor
jno
push
cli
addr16
nop
add
inc
testl
ds
dec
out
jp
adc
inc
bound
xor
test
inc
js
push
add
xchg
push
mov
or
out
mov
aad
je
fsubl
dec
jp
mov
inc
popa
adc
inc
insb
mov
inc
std
pop
out
cmc
xor
pop
cmp
mov
popa
mov
in
and
cwtl
and
pop
xlat
scas
pop
imulb
or
aaa
subl
movsl
mov
dec
sub
push
ret
scas
mov
fmull
mov
aam
xchg
or
sbb
dec
aam
addb
push
stc
in
fidivrs
mov
dec
es
xlat
pop
inc
insb
adc
xchg
mov
cmp
mov
push
fcoms
jmp
call
sbb
cmc
push
orb
pop
loope
fstl
sub
dec
fcoml
xchg
mov
add
cs
mov
sub
pop
popa
jo
insl
sbb
cmc
das
mov
inc
imul
test
imul
push
and
and
jo
adc
mov
adc
xchg
fidivl
int3
adc
mov
repnz
adc
ss
push
sbb
cmp
fsubl
push
xchg
dec
jb
fnstenvs
push
dec
movsb
fwait
jo
test
and
or
mov
divb
lea
in
bound
pop
or
push
jo
std
scas
jnp
int
lret
mov
xchg
dec
pmulhw
cmpsl
imul
jmp
movq
and
shll
shll
sub
into
aas
pop
jno
mov
loope
mov
sbb
jb
ss
mov
and
mov
xor
adc
insb
addr16
repz
cmpsl
out
cmp
inc
aad
fsubrs
push
xor
jl
sub
adc
mov
and
push
cmp
adcl
and
mov
push
addb
mov
add
cmp
push
add
mov
jb
sbb
dec
push
jb
adc
sub
loop
sbb
gs
dec
and
inc
xor
inc
jb
mov
jno
cmovle
mov
pusha
sub
arpl
sbb
sbb
iret
sbb
dec
stos
inc
jnp
mov
dec
dec
stc
aad
push
mov
sarb
out
lock
shlb
pop
aaa
sbb
lock
inc
push
pusha
fcmovbe
pop
cwtl
push
shlb
imul
popa
add
pusha
rcrl
xor
les
xor
aas
or
mov
out
leave
mov
scas
push
test
out
loop
jmp
inc
mov
or
sbb
or
jmp
add
and
sti
into
dec
and
cmpsb
mov
jl
sti
mov
mov
fldt
in
cmp
adc
push
jmp
or
pop
nop
ss
fdivrl
fwait
mov
mov
leave
call
arpl
in
jge
data16
pop
mov
scas
fadds
out
test
mov
add
adc
in
popf
mov
hlt
dec
das
cmp
sub
in
mov
mov
inc
add
int3
xlat
aam
mov
lahf
mov
push
and
icebp
cld
mov
movsb
decl
and
pop
insb
inc
adc
dec
xchg
int3
je
mov
jnp
sarl
or
insl
lods
negl
outsb
pop
scas
arpl
lods
enter
in
aad
mov
divb
lea
shrb
je
add
dec
test
fdivrl
imul
mov
jp
dec
stc
aam
sbb
aaa
rclb
mov
jge
in
cwtl
movsb
movsl
jno
ss
movsl
adc
xchg
add
jbe
jp
fistps
loop
ja
jmp
bnd
mov
je
mov
hlt
arpl
js
mov
mov
or
fmull
jnp
cmp
mov
loopne
mov
dec
or
sbb
and
pop
and
incb
mov
repnz
pop
cmpsb
arpl
shlb
div
lahf
fbld
punpckhdq
rorb
nop
sub
dec
or
jo
sub
call
std
in
or
faddl
push
shll
aad
or
js
adc
mov
addr16
popa
pushf
jmp
movsl
loope
ret
push
in
dec
test
clc
push
add
ret
int3
outsb
mov
and
dec
lods
mov
data16
imul
pushf
or
ficoml
and
out
sbb
fucomp
mov
jbe
mov
mov
sbb
cmpsl
mov
in
js
arpl
dec
lods
push
pop
and
cmp
mov
pop
jbe
and
dec
pop
lcall
shl
mov
add
adc
cmp
dec
arpl
dec
fwait
jae
push
xchg
add
ficomps
or
lcall
roll
popa
dec
xor
jae
sub
jae
or
jle
xchg
mov
xlat
repnz
adc
pop
in
jl
in
jae
push
ja
and
in
jns
pop
loop
mov
jo
jp
in
data16
adc
mov
jmp
push
lods
inc
in
lret
xchg
xchg
rcll
inc
stos
inc
int3
stos
mov
popf
xchg
mov
or
loope
lods
lret
mov
cmp
insb
mov
repnz
shrb
in
cmpsb
inc
sub
pop
and
scas
gs
loop
stos
rclb
jbe
jbe,pt
mov
sub
xor
mov
test
lret
imull
icebp
aaa
xor
xchg
sbb
int3
sbb
sbb
lea
hlt
imul
add
dec
cmpsb
sbb
lock
outsl
arpl
push
xlat
pop
sbb
jno
aaa
lcall
dec
pop
adc
mov
lds
call
dec
dec
std
ret
mov
lock
ja
mov
pushl
inc
ret
cli
lret
nop
inc
pusha
repz
out
dec
push
sbb
push
push
pop
inc
xor
xor
cltd
div
js
movsl
xchg
js
pusha
jo
test
sub
mulb
sub
add
cmpsl
xchg
mov
and
testl
cltd
dec
pusha
and
sbb
mov
or
mov
or
faddl
mov
lock
addl
mov
js
popf
inc
arpl
fstpt
arpl
lea
fcoml
fists
fmuls
pop
and
adc
out
lahf
jle
sub
mov
push
repnz
cwtl
xor
repnz
js
imul
dec
jns
adc
add
lock
adc
and
adc
xorl
cmp
sbb
popf
adc
and
jg
into
shr
je
jo
insb
aam
push
jns
out
mov
xchg
mov
mov
xor
stos
lea
lods
call
inc
xchg
outsl
cmp
mov
sbb
mov
or
das
push
mov
cmpsl
mov
xor
inc
sarb
in
int3
leave
divl
imul
jg
lret
in
cmp
add
jge
mov
mov
fisubl
push
mov
mov
test
les
cs
cmp
xlat
arpl
aad
xchg
inc
in
popa
fsubrs
movsb
outsl
mov
push
push
fildl
insb
movsl
add
xor
push
mov
lds
stc
cmp
xlat
fldcw
mov
xor
loopne
cmpsb
lods
insb
pop
movnti
popf
lretw
mov
sub
xor
loopne
lods
jb
rcll
bnd
jmp
mov
pop
push
fsub
out
xor
jg
fsubrl
sarl
in
out
fs
push
jns
adc
orl
mov
sub
stos
ja
adc
jle
mov
mov
test
adc
jo
repz
push
fbstp
push
mov
mov
test
mov
pop
cld
ficomps
adc
mov
adc
add
jnp
xchg
pop
lea
mov
lret
jge
lods
call
movsb
rclb
and
call
in
and
pop
inc
ret
bound
nop
and
add
push
cmp
fnstenv
lcall
lods
daa
pop
in
pop
stos
jae
mov
shlb
movsl
insb
jae
adc
nop
push
fiadds
add
xor
in
jnp
andb
insl
jns
es
insb
cmc
fdivl
addr16
pushf
lds
and
popf
fmull
loop
inc
and
push
dec
mov
mov
mov
imul
sub
in
jle
xchg
push
ja
stos
cwtl
lds
lea
ljmp
cmc
cmp
and
lds
jmp
aaa
push
jo
shll
aad
push
lock
jae
test
xchg
icebp
or
insb
push
sbb
push
or
mov
rcll
imul
cmc
data16
xor
lods
ljmp
pop
add
mov
and
pop
jl
leave
jbe
hlt
add
and
sbb
insb
mov
fdivl
out
sub
sub
pop
ja
lea
push
and
adc
js
fcmovb
jns
push
stc
inc
push
test
mov
mov
sti
outsl
je
cwtl
mov
cmp
ss
jmp
xchg
push
xchg
mov
lea
pop
movsl
dec
js
out
insl
xchg
inc
and
mov
dec
mov
mov
jle
hlt
aaa
adc
int3
shl
scas
mov
inc
fbld
ja
mov
adc
and
lods
xchg
out
dec
push
fsubs
js
jne
in
adc
push
mov
push
out
inc
outsl
add
loope
icebp
imul
sbb
icebp
push
jmp
xchg
daa
sarl
scas
test
or
jno
fcomip
dec
sbbl
mov
filds
jne
fwait
mov
loopne
xchg
pop
cwtl
movsb
add
push
mov
inc
in
cmp
pop
xchg
in
scas
loop
mov
shr
xor
lods
popf
fwait
xor
push
and
test
ss
call
mov
fnsave
xor
js
mov
sub
bound
shlb
cmp
sub
push
xor
push
push
dec
in
inc
pop
adc
sbb
pop
pop
cmc
shrl
mov
icebp
mov
mov
lods
xchg
inc
in
push
and
pop
inc
add
mov
shl
xchg
lcall
or
mov
lds
dec
fcomip
pop
xchg
sub
cwtl
jns
mov
or
xor
push
pop
mov
test
push
fisubrl
pop
or
sub
test
inc
pop
stos
les
icebp
ljmp
mov
push
xchg
or
mov
pop
inc
jne
or
jns
push
pop
xor
sub
xorl
inc
pop
and
adc
or
mov
divb
mov
mov
es
lock
add
add
xor
sbb
inc
fildl
xchg
cmp
cmp
mov
and
jbe
inc
adc
insb
jp
and
into
cltd
mov
lret
sub
adc
mov
mov
popa
add
dec
jno
fbld
jo
and
pop
je
pop
mov
test
in
xor
jns
push
xchg
sti
and
xlat
sbb
xor
xlat
sub
jmp
mov
inc
repz
jo
mov
mov
in
xor
cmc
mov
xchg
xchg
xchg
xlat
ds
mov
xchg
scas
push
lds
and
mov
shll
and
stos
add
xor
sahf
dec
aad
mov
lods
or
lods
push
es
sub
lock
out
mov
outsl
std
add
xchg
insb
pop
cli
fldz
hlt
push
pop
test
push
outsl
outsl
add
loope
scas
lds
and
fisubrl
scas
or
lods
mov
xchg
add
and
movsb
ss
jae
lods
mov
xchg
jae
jge
test
fistps
dec
rclb
or
lret
mov
stos
dec
ljmp
shufps
dec
jae
lea
jmp
hlt
imul
es
fs
sub
jge
and
cmp
jp
mov
imulb
push
inc
jns
jmp
xchg
or
mov
call
dec
pop
pop
lea
dec
push
ja
push
lcall
dec
cmp
fdivrl
movsl
testl
bound
xchg
call
push
push
sub
push
fsubp
movsl
dec
clc
ja
in
fisubrl
pop
in
adc
xor
nop
bound
inc
mov
sub
insl
jns
lock
je
xchg
in
fistps
mov
loopne
mov
es
fcomip
lret
hlt
jnp
cmpsb
int
pushf
dec
imul
jo
lea
jae
xchg
les
shlb
test
cmp
add
mov
icebp
addb
lret
mov
arpl
enter
mov
loop
pop
test
fwait
cmp
adc
mov
xchg
xchg
lock
insb
mov
jge
inc
jb
loop
push
inc
pop
pop
in
in
adc
je
das
hlt
push
push
sar
iret
sbb
sbbb
mov
xor
and
outsl
out
das
mov
lds
movsl
test
mov
mov
push
out
insb
sahf
pop
pop
lea
dec
and
fwait
lret
movsb
jg
cmp
pushf
lret
outsl
notb
pop
sbbb
int3
pop
push
push
rcrl
add
inc
mov
lods
xor
and
push
in
in
and
loop
dec
adc
pop
mov
inc
mov
add
in
and
sub
dec
mov
xchg
lret
scas
xchg
stc
fsubl
mov
xchg
add
sbb
and
mov
loope
repz
test
push
inc
push
cmpsb
jne
es
les
xor
cmp
lcall
push
or
pop
out
cwtl
test
sbbl
in
inc
in
mov
or
jge
push
mov
jmp
cmp
outsb
inc
mov
lret
sbb
mov
mov
sbb
mov
push
and
cmpl
xor
lods
xor
mov
rol
sub
enter
movsl
in
hlt
xor
mov
or
sbb
jmp
cltd
sbb
scas
sbb
test
arpl
sub
lahf
out
repnz
repz
mov
mov
mov
pop
jno
add
dec
cmc
nop
js
mov
add
rcll
adc
hlt
or
mov
lret
mov
dec
fcomi
push
fwait
mov
dec
push
fmull
stos
hlt
push
fstl
inc
sbbb
idivb
mov
repz
adc
sahf
mov
imul
stos
push
fdivr
addr16
js
das
int
mov
mov
cmp
loop
aaa
pop
adc
mov
mov
stc
das
mov
inc
push
shrl
repz
lea
bound
pcmpeqw
in
mov
sti
ja
imul
dec
mov
mov
or
dec
sahf
popa
jne
sar
push
arpl
inc
pushf
or
and
push
mov
ret
loopne
xchg
and
mov
in
popa
imul
jmp
and
sub
ja
bound
cmp
mov
lods
mov
repnz
mov
mov
add
push
shrb
pusha
lods
cmpsb
sahf
cmpsl
cmp
ja
das
shr
jl
inc
jmp
inc
stc
mov
dec
sub
icebp
lret
jae
lea
pop
cmp
scas
popf
data16
adc
jbe
imul
push
push
aam
jne
jl
or
mov
add
mov
sbb
imul
xor
or
movsl
xchg
dec
idivl
xor
jge
pop
push
loop
push
filds
adc
or
adc
pop
cmc
xor
mov
lea
rcll
idiv
inc
inc
rolb
test
rcrl
sub
fcompl
adc
push
in
jmp
mov
xchg
andnps
insb
mov
gs
inc
aam
mov
jl
fistpl
xchg
lret
jns
xchg
sbb
and
enter
sahf
xchg
arpl
lods
roll
mov
push
test
pop
fxch
add
mov
std
mov
and
je
fs
push
pop
mov
pop
push
cltd
pop
cmc
push
mov
lea
mov
movsl
mov
ljmp
iret
ret
mov
shl
inc
stos
add
int
push
mov
pop
mov
and
test
adc
push
and
pop
xor
and
cltd
std
loopne
push
push
pop
lods
push
push
lcall
mov
outsl
bswap
push
adc
sbb
js
cmp
iret
mov
mov
sub
mov
or
movsl
xor
out
fnsave
mov
sub
push
fwait
mov
cli
popf
cmp
mov
incl
stos
incl
imul
pop
daa
lahf
mov
popa
push
mov
xor
ret
jle
das
sub
loopne
lds
imul
mov
mov
add
fistpl
sub
lret
pushf
pop
inc
notl
mov
mov
and
int
mov
add
adc
mov
lea
xchg
fsts
std
and
pop
fistps
mov
int3
jmp
jl
je
callw
push
sbb
fnstenv
dec
or
mov
xchg
sbb
insl
jns
pop
outsl
lea
adcl
jne
fxam
ss
adc
fsubrs
mov
mov
xor
vmaxsd
or
loop
jg
xor
inc
mov
pop
cmpxchg
in
loope
daa
test
mov
and
insl
stos
movl
in
pop
movsl
insb
dec
and
lret
sahf
aaa
mov
push
jl
mov
mov
mov
xchg
call
mov
push
or
enter
mov
push
cmc
cmp
in
std
pop
es
insl
out
adc
adc
push
pop
mov
xor
xor
mov
cld
lods
arpl
sbb
fimull
mov
or
mov
push
inc
in
inc
ja
loopne
lods
jb
movsb
sti
scas
in
mov
shl
faddl
mov
jp
in
push
sbb
jae
inc
pop
lea
int
dec
jl
in
or
rcl
lock
mov
je
sub
xchg
mov
mov
inc
push
mov
cltd
sbb
adc
in
pop
ss
lret
mov
xchg
rep
int3
std
jle
in
mov
pop
jae
mov
xchg
adc
jo
mov
cli
in
or
insl
fwait
out
aaa
dec
lods
dec
das
push
adc
aad
or
push
mov
add
pop
sbb
pusha
mov
xchg
and
movsl
insb
out
jae
push
cmp
push
push
js
hlt
jmp
fnstsw
in
adc
jae
adc
mov
jle
cwtl
push
inc
cmp
fsts
in
mov
stos
mov
lea
cli
out
jbe
mov
inc
movsb
sub
lea
add
daa
mov
out
mov
ljmp
adc
jg
or
fadds
inc
sbb
inc
insb
jo
loope
jbe
xchg
xorl
pop
pop
or
ljmp
je
hlt
cmc
jg
push
lahf
mov
mov
out
movsb
jo
inc
cmp
iret
inc
loopne
or
insl
cmp
lea
fstpt
cmp
sub
dec
lock
test
pop
loopne
jne
or
rorb
jnp
dec
loope
xchg
in
in
dec
inc
adcl
jne
pop
or
lret
sti
insb
cmc
lret
pop
mov
mov
mov
lret
fwait
je
fisubl
push
movsb
out
xor
fidivs
gs
jp
sub
fldl
add
xor
imul
popa
mov
sbb
pop
push
aad
mov
or
es
push
xchg
int
sbb
scas
adc
adc
jae
movsb
movsl
mov
int3
xor
cmp
stos
rorb
and
push
mov
pop
hlt
lcall
xchg
jl
inc
mov
lods
pop
aaa
sub
pop
ss
add
or
lods
testl
pop
call
xchg
mov
movsb
test
mov
sub
sub
aas
test
pop
xor
es
mov
int3
cmp
js
jbe
dec
adc
cmpsl
repnz
pop
xor
outsb
xor
dec
jge
outsl
jp
outsl
popa
imul
mov
add
add
pop
pop
push
cltd
push
sbb
sub
daa
lea
sbb
js
lods
xor
lock
dec
push
sti
cs
dec
cwtl
les
cltd
and
insb
xchg
mov
cmp
mov
sbb
lahf
cmp
mov
mov
and
js
jae
loope
pusha
jae
push
lret
sbb
dec
pop
mov
pop
mov
scas
xchg
jl
inc
hlt
dec
dec
lods
loope
roll
mov
jp
cltd
popa
jp
vpunpckhqdq
fadd
mov
and
fwait
push
in
imul
clc
mov
dec
xorl
pop
jbe
lods
adc
push
test
cmpl
sub
jmp
or
mov
inc
push
fwait
sub
repnz
or
mov
cmp
jle
mov
ficomps
test
gs
adc
pop
stos
fxch
mov
fcompl
inc
adc
mov
jb
fsubrl
rorb
ja
xor
xor
hlt
outsb
inc
fdivs
push
fnstcw
cmp
in
add
mov
jp
sub
ror
notl
inc
repz
add
scas
cmp
and
adc
movsl
lahf
inc
or
mov
andb
push
and
jmp
aaa
outsl
cmpl
push
cmp
hlt
js
mov
sbb
aas
or
jae
in
sub
mov
pop
loop
mov
xchg
rorb
sbb
and
sub
mov
pop
mov
jbe
lahf
fcoms
cmpsl
out
out
push
ja
xchg
fstps
cmp
jle
filds
jle
enter
movsb
stc
imul
and
js
and
sbb
push
fwait
mov
or
nop
rcrl
cmp
dec
dec
ds
hlt
dec
fimuls
in
scas
pop
add
out
sarb
sub
adc
subb
gs
ja
lea
xorl
mov
mov
jae
push
subl
adc
adc
cmc
imul
cmp
push
lods
popa
xchg
mov
mov
dec
adc
jle
push
fst
fucomi
inc
dec
pop
xlat
sub
pop
inc
jnp
pop
int3
jae
mov
push
sbb
jns
out
sbb
adc
int
ja
jg
xchg
push
jnp
push
jecxz
sub
mull
jmp
outsl
inc
jno
mov
repnz
notl
insb
adc
push
das
dec
push
cli
shlb
lea
ret
jmp
adc
pop
pop
inc
inc
push
je
mov
bound
xorl
mov
rcrb
andb
je
inc
pop
push
pop
shlb
push
mov
sub
fucomi
sub
ret
sbb
aas
inc
and
mov
cwtl
mov
xchg
es
inc
push
mov
pop
stc
lea
dec
inc
inc
sub
jge
xchg
lret
pop
mov
je,pt
js
lea
xor
sub
jecxz
int
mov
sbb
and
or
pop
adc
fdivs
pop
lret
popf
add
jno
xchg
iret
xor
dec
lret
push
sahf
and
pop
jmp
mov
mov
jbe
xor
cld
mov
imul
cmp
xor
sahf
stos
cmp
pop
mov
shrl
rcll
dec
xchg
ja
mov
sti
cmc
imul
push
add
fbld
lods
sub
jl
pusha
inc
loop
pop
shl
xchg
fidivl
pop
xor
rclb
lock
xorb
and
dec
jns
xchg
fisubrl
dec
arpl
fwait
pushl
sub
inc
mov
xor
aad
xchg
enter
adc
movsb
add
arpl
adc
lea
mov
hlt
jo
pushf
pop
xchg
cmp
dec
sub
decl
out
movb
movl
inc
cmp
sub
test
xchg
inc
pop
imulb
xor
in
sub
jle
inc
pushf
jae
jge
sti
push
jmp
jg
into
cwtl
inc
dec
adc
loope
outsb
outsb
and
mov
shl
rcll
aaa
dec
stos
pop
inc
stc
repnz
mov
mov
imul
test
pop
icebp
out
lea
push
fcoms
push
xor
mull
aas
inc
push
in
and
mov
out
and
outsl
xchg
add
inc
popf
leave
test
std
out
repnz
enter
fwait
inc
std
xchg
imul
dec
xor
in
push
je
or
push
push
movsb
jo
rcrb
mov
push
stos
dec
and
add
push
imul
insb
fsubr
pop
lods
test
dec
xor
and
mov
and
push
loop
dec
xchg
cli
stos
insb
lea
outsl
pop
scas
fistps
dec
cmp
fnsave
popa
fisubl
loopne
test
push
or
jmp
dec
adc
sti
in
mov
fstpt
jae
jb
sub
cmp
jecxz
push
movsb
aaa
rcll
mov
cld
mov
adc
fsubrs
mov
dec
out
je
repnz
sbb
xor
adc
jle
sahf
cmp
mov
movsl
inc
adc
mov
insl
lret
or
add
fsubs
scas
scas
shrl
movsl
lods
out
jae
or
sbb
insl
subb
xchg
rorb
cmp
repz
in
insb
xchg
arpl
mov
jbe
loope
sbb
pusha
jno
rcrb
test
shlb
out
ljmp
movsl
push
mov
mov
or
pop
bound
int
xchg
ja
jle
sub
gs
out
and
jle
mov
lea
lods
ret
jmp
fadds
inc
xchg
cmp
nop
cmp
mov
out
ret
mov
sbb
mov
sub
adc
mov
jo
in
add
cmp
loopne
fcomps
xchg
or
je
incl
loop
call
mov
mov
mov
lret
daa
jg
lea
insb
sbb
sahf
xor
fimuls
jne
addr16
lea
mov
out
xor
jns
lock
mov
xchg
xor
inc
mov
jle
pop
adc
ret
repnz
xorl
pop
dec
data16
je
push
test
bound
jne
jg
adc
daa
push
mov
out
pop
lods
ss
loopne
pusha
aas
push
sub
xor
mov
ja
jg
fdivl
insb
js
cmc
scas
push
add
lea
push
mov
sub
sbb
iret
inc
popf
pop
or
mov
out
xlat
dec
mov
sub
mov
cmp
dec
mov
xor
mov
dec
popa
in
dec
aam
cmp
mov
cltd
mov
leave
fnstcw
xchg
lea
adc
or
iret
out
push
sbbl
inc
mov
rcrb
inc
outsb
arpl
int
outsb
xchg
add
bound
loope
mov
xchg
jno
lea
jecxz
lcall
std
push
js
mov
add
je
call
sbb
push
inc
in
ss
filds
adc
mov
or
lods
push
call
mov
cwtl
movl
mov
pop
push
xchg
inc
push
inc
mov
es
xchg
clc
bound
loopne
fs
gs
inc
push
mov
frstor
lret
in
aas
mov
scas
sbb
scas
ds
mov
out
lock
cwtl
pop
mul
xor
or
xchg
das
pop
outsl
inc
cmp
rclb
test
fistps
mov
les
adc
push
jns,pt
pop
adc
adc
xchg
pop
xor
xchg
shlb
test
jl
sub
das
push
lods
xor
std
jmp
sbb
and
enter
repnz
imul
pop
jg
test
test
mov
lahf
out
adc
aaa
jl
stos
jbe
dec
das
or
in
arpl
mov
sbb
jmp
clc
cmp
lods
dec
cmp
inc
sub
lret
adc
ss
or
subl
fabs
and
lret
mov
pop
cwtl
and
sbb
inc
test
mov
testb
dec
inc
mov
inc
insl
pop
push
push
dec
push
adc
aam
lahf
or
jno
add
roll
mov
mov
insb
mov
dec
enter
mov
and
add
les
sbb
inc
xchg
mov
inc
inc
aas
xor
cwtl
pop
insl
sub
jae
sbb
repz
in
mov
mov
mov
ret
mov
adc
rclb
fwait
jg
fildl
pop
ud2
je
mov
fbld
mov
mov
sbb
xorb
and
movl
popa
mov
sub
repnz
sbb
arpl
imul
mov
lea
loopne
xchg
mov
sbb
jno
hlt
lea
dec
stc
das
in
fisubrl
xor
fsubrl
rcr
or
dec
data16
loopne
gs
cmp
mov
cmc
push
pop
mov
aaa
cmc
clc
or
lock
popa
mov
add
jb
jecxz
fwait
sbb
or
ret
sahf
dec
stos
stc
fstpt
pop
mov
das
jnp
das
inc
loope
adc
je
pop
idiv
int3
xlat
push
daa
cmp
fimuls
sbb
cmp
adc
push
dec
jns
shlb
push
lods
in
inc
rep
mov
mov
test
bound
pop
iret
and
into
and
addr16
mov
ja
outsl
js
jnp
int
jno
and
adc
lea
mov
sbb
and
mov
out
mov
adc
andl
mov
test
je
mov
jmp
int
repnz
daa
aad
pcmpeqw
or
jmp
or
mov
int3
jge
jmp
add
mov
lret
push
inc
push
lods
stos
push
mov
dec
aaa
inc
int3
sbbb
mov
adc
sub
and
mov
int
mov
call
loop
or
mov
sub
add
jae
push
or
sbb
clc
cld
icebp
sbb
out
cmpl
ss
pop
int3
aas
addr16
mov
xchg
xor
cmp
arpl
in
in
lea
pop
and
push
gs
or
rclb
in
xchg
in
in
lcall
pop
jae
xchg
adc
je
lcall
mov
mov
and
test
inc
mov
sub
jle
jae
or
mov
cmp
mov
lea
add
pushf
mov
xorb
lds
xor
cmp
ret
int
mov
addr16
jae
hlt
sub
push
and
and
push
popa
mov
lea
xchg
xor
outsb
and
f2xm1
gs
mov
sbb
loopne
sub
push
ret
inc
inc
cmp
and
or
sbb
aas
add
mov
mov
push
pushf
fldt
inc
mull
inc
scas
pop
lock
in
and
add
loope
aaa
ret
xorb
mov
pop
mov
negb
stos
adcl
in
roll
data16
fstl
cs
das
mov
inc
pop
mov
xor
repnz
cwtl
sub
pusha
loope
fstpl
xchg
mov
inc
pop
pop
pop
sub
movsl
cmp
add
jb
push
xor
popf
pop
enter
out
xor
dec
xchg
xor
clc
es
push
data16
mov
pop
mov
sbb
mov
and
lret
mov
mov
aad
out
adc
add
sub
xchg
push
inc
fwait
and
push
sti
imul
aam
inc
xor
mov
dec
push
outsb
inc
jg
sarl
cmp
ret
cmp
cmp
jbe
xor
pop
arpl
push
jno
push
sbb
xchg
xor
enter
cmp
rcll
es
pop
aam
mov
mov
push
outsl
mov
lea
shlb
mov
sbb
fnsave
mov
push
cltd
in
add
pop
jb
int
xchg
daa
sub
ljmp
sbb
aaa
pop
out
jnp
inc
inc
nop
inc
cmpl
adc
cmp
push
cmp
xor
js
pop
fadd
fadds
sub
mov
dec
stos
or
loope
lret
enter
outsb
dec
sbb
push
repz
mov
repnz
and
adc
cli
or
xchg
mov
dec
out
add
ss
addr16
stos
push
lcall
add
mov
adc
pop
mov
outsb
mov
testb
push
mov
popa
into
sarb
dec
push
test
cmpsb
fadds
imul
and
xor
mov
jmp
mov
je
push
cmp
mov
test
mov
push
mov
pop
mov
std
xchg
push
jmp
dec
jl
jecxz
mov
cmp
icebp
lods
in
mov
jge
filds
pop
push
lds
popa
sar
cltd
pop
xor
jae
sbb
inc
loop
cltd
lea
dec
je
push
inc
mov
or
adc
push
fiadds
ret
xor
inc
in
lea
xchg
xchg
fildll
js
cmpsb
lahf
ljmp
daa
icebp
add
push
rclb
enter
mov
loop
cld
xor
lea
or
sub
call
lretw
push
inc
mov
stos
shr
js
ret
dec
inc
ret
out
je
mov
loopne
xchg
jno
fcompl
push
sbb
xchg
mov
xchg
add
mov
sbbb
cmp
mov
push
ror
inc
insb
lds
arpl
adc
cmc
push
sub
in
pop
aas
xchg
xor
adc
pop
lea
test
jne
or
dec
mov
pop
adc
cwtl
mov
repnz
aaa
mov
insb
mov
add
jl
mov
and
and
cmpsl
mov
and
repz
or
insb
out
neg
sub
loopne
repnz
repz
sbb
cmp
xor
jg
push
push
lret
gs
inc
imul
add
xor
loop
push
sbb
mov
pop
mov
xchg
mov
repnz
add
mul
addr16
mov
fisubs
and
pop
testl
fcoms
stc
sbb
dec
xchg
testl
loop
jge
mov
test
icebp
cli
xlat
pop
out
xchg
pop
jae
ficompl
lcall
jnp
add
das
and
cmpsb
adc
mov
add
mov
lahf
pop
enter
push
xor
jno
mov
add
pop
mov
mov
mov
addb
addr16
out
cmp
out
sub
or
sub
xchg
arpl
lock
xchg
je
sbb
popa
pop
cli
xchg
jo
mov
push
mov
in
xchg
push
or
cwtl
and
push
inc
push
insl
mov
scas
inc
repz
lea
or
and
dec
or
jnp
pushf
inc
jno
jbe
adc
push
daa
test
mov
sbb
adc
mov
lock
sub
addr16
and
mov
jae
pop
sub
leave
in
push
scas
popf
stos
fisubrs
xor
pop
dec
loop
mov
movsb
rcl
std
imul
xor
mov
dec
stos
dec
lea
and
and
clc
int3
xchg
pop
outsb
rcrl
popa
dec
popa
fnstcw
test
or
sar
xor
pop
or
inc
sarb
stos
stos
push
and
dec
lea
shr
push
cmc
fldenv
mov
leave
pop
sub
frstor
jl
sbb
repz
pop
sti
or
mov
lea
imul
fisubrs
and
mov
mov
insb
aas
cmp
sub
mov
icebp
pushf
das
mov
sbb
jns
inc
into
insl
sti
incb
cli
out
sahf
aad
lods
mov
or
outsl
push
je
pop
insb
mov
xchg
in
cmp
add
shll
inc
pop
jp
scas
icebp
scas
pop
mov
or
mov
jno
mov
movsl
imul
inc
into
and
outsl
mov
pop
inc
pop
mov
stos
mov
cmc
pop
pop
je
fstl
popa
mov
pop
cli
fildll
movsb
fbld
jo
push
xchg
fstps
cld
mov
mov
hlt
paddsw
movsb
adc
mov
and
dec
sub
jmp
pop
shr
loop
cwtl
dec
cmc
rcrl
repnz
gs
mov
or
and
and
push
in
int
loop
sbb
push
pop
fdivs
das
ja
icebp
or
in
ret
push
sbb
cmpsl
mov
mov
loop
stc
xor
je
and
mov
dec
cmc
je
clc
dec
in
dec
and
lea
inc
or
mov
ret
push
add
ret
and
inc
sbb
mov
lods
pop
or
sub
mov
mov
sub
sbb
xchg
sbb
adc
or
rcrl
fs
stc
cltd
xor
in
aas
pcmpeqd
push
inc
rorb
jo
lock
flds
fcomps
aam
mov
adc
lock
fdivs
mov
leave
or
mov
and
and
sub
rcl
aaa
aad
and
daa
add
xchg
insb
mov
addr16
and
dec
lret
pop
cli
xor
fisttps
adc
fcmovu
jnp
loope
sbb
hlt
mov
icebp
in
mov
push
pop
xor
or
push
cmpb
dec
enter
mov
or
mov
loope
xchg
and
js
jmp
mov
jne
sub
scas
sub
jl
clc
pop
and
jp
in
xchg
cmp
mov
inc
mov
push
mov
mov
mov
orb
sub
je
sbb
adc
dec
push
push
sub
js
lea
adc
cwtl
sbb
je
data16
or
mov
mul
stos
xor
insl
fbld
sbbb
cltd
cmc
jno
pop
jb
call
mov
sbb
xor
lods
fisubrs
push
in
mov
or
push
jmp
jecxz
test
cmc
pop
sub
and
js
add
sub
mov
out
fsubrp
jne
xor
dec
imul
and
enter
pop
test
xchg
les
out
dec
push
fldenv
mov
fcmovb
jns
jb
mov
add
hlt
mov
jb
rolb
mov
xor
dec
lock
dec
fnstcw
movsb
mov
pusha
ret
in
jl
push
push
mov
jl
cltd
jae
loopne
inc
sub
mov
ficomps
mov
adc
stc
or
dec
lret
repnz
test
gs
mulb
adc
fbld
mov
or
daa
mov
sub
jl
adc
in
jbe
fs
mov
data16
xchg
mov
scas
in
jns
or
in
jno
add
sub
sbb
xor
push
mov
cltd
fstps
mov
dec
pop
jl
shl
pushf
adc
adc
stc
adc
cwtl
and
dec
mov
mov
out
dec
andb
imulb
pop
jmp
sbb
jns
rol
cmp
mov
add
dec
aaa
pop
mov
mov
repnz
pop
jno
push
inc
mov
lcall
mov
mov
sahf
test
and
mov
in
shr
pop
sbbl
rclb
mull
dec
data16
sti
je
push
xchg
pop
inc
cmp
xchg
push
cli
push
sub
or
sarb
mov
movsb
and
jno
or
mov
pop
sahf
in
popa
sti
stos
lods
cli
xor
xor
mov
xchg
mov
pop
lea
sub
push
push
scas
sti
sbb
js
adc
pop
out
ja
inc
ja
jae
xchg
shlb
mov
sub
fiadds
pop
or
or
xor
mov
sub
sub
out
pop
loope
jmp
hlt
or
fistpll
push
dec
mov
imul
cmp
je
iret
leave
inc
iret
xor
sub
lret
cltd
jne
sub
repnz
imul
push
test
mov
ds
and
shll
testb
push
jge
xor
pop
mov
pop
cmp
in
test
aaa
cmovle
aam
xor
and
add
mov
jbe
cmc
pop
hlt
icebp
fucom
push
pop
and
ja
out
movsl
insb
adc
sarb
push
mov
addb
mov
sbb
jns
mov
jb
shl
pop
pushf
stc
and
lea
add
adc
cmp
movsb
rcrl
sub
lret
pop
jo
aas
jnp
repnz
mov
cmp
imul
push
bound
jge
aad
xchg
lock
xlat
pop
fcoms
and
fildl
inc
xchg
int3
push
sub
mov
flds
inc
push
jno
and
or
cwtl
rolb
xor
mov
cmp
mov
movsl
ss
in
mov
ja
inc
mov
mov
jmp
aaa
mov
rcll
sub
push
repnz
into
sub
or
arpl
fs
inc
pop
push
lahf
stc
fidivrl
jl
pusha
jo
ja
shl
and
xchg
push
mov
lods
adc
lret
lea
int
in
push
inc
stos
mov
or
notb
xor
fidivrs
sub
or
jg
or
jp
in
mov
dec
orb
aaa
lret
mov
pop
push
jno
pop
and
lcall
sahf
ja
adc
jno
and
inc
sbb
mov
lea
or
jge
test
push
cmc
mov
xchg
jns
test
std
mov
lock
lods
outsb
and
or
fchs
and
xor
aam
jo
push
movsl
mov
adc
inc
pop
xchg
popa
mov
ljmp
sar
rcrl
dec
fistps
jg
mov
inc
cmpb
lds
popa
hlt
mov
stc
mov
mov
in
push
shrb
push
xor
shlb
dec
dec
loop
xor
add
or
pusha
pusha
lods
xchg
mov
mov
mov
mov
and
mov
aas
xor
leave
gs
sub
fs
negb
mov
loopne
jp
and
cmc
ja
cmp
pop
or
xlat
jbe
push
fbld
inc
and
push
cmp
dec
es
dec
nop
fnsave
insb
dec
or
dec
dec
shll
add
sub
adc
jmp
aad
fisttps
loopne
or
fimuls
insl
out
dec
insb
push
add
loopne
subb
cmp
sub
adc
stos
mov
push
and
inc
sbb
and
lods
into
fldenv
shrb
adc
mov
or
dec
je
fidivrl
jmp
xor
lods
shl
jle
fsubr
dec
xor
je
icebp
jb
lods
sbb
in
les
push
xor
and
add
mov
cmpsl
cmp
xor
and
nop
in
push
or
cli
data16
leave
outsl
repnz
lods
arpl
jo
sarl
add
loop
aad
fstpt
inc
and
dec
in
je
out
lods
inc
loope
shrb
mov
xchg
lea
ret
sbb
scas
pop
fistps
rcl
lods
cmp
cmp
cmp
add
sbb
jb
sarb
mov
mov
in
lock
imul
adcl
xor
clc
sbb
xor
inc
dec
jmp
flds
sub
cmpb
je
ja
in
arpl
fnstcw
cltd
add
sbb
test
aaa
dec
cwtl
rcr
imul
xor
adc
inc
lea
js
scas
xor
in
testl
xchg
sahf
and
cmp
dec
adc
notl
mov
bound
mov
hlt
loop
fisubrs
stc
popa
mov
pop
mov
dec
push
cmp
xchg
lahf
shlb
jnp
imul
fwait
sbb
pop
sbb
xchg
addr16
adc
push
adc
loope
movsl
nop
dec
push
push
testb
or
adc
fucomip
mov
aam
daa
fcoms
test
and
mov
adc
out
sub
sub
add
xor
lea
repnz
inc
pop
xchg
and
lds
xlat
inc
mov
adc
add
jns
or
inc
xor
sub
push
sbb
lea
push
sub
cwtl
and
aad
mov
out
or
in
inc
popa
fs
jp
pop
popf
mov
loopne
sub
test
and
js
cli
jae
repnz
int
loop
out
ret
push
jg
mov
or
inc
pop
adc
ret
xor
mov
hlt
xor
adc
aam
and
stc
fs
call
fiaddl
push
data16
fidivl
sbbl
icebp
sub
mov
lea
sub
shrl
pop
stos
sbb
lcall
shrb
mov
test
js
loope
mov
adc
xor
push
bound
int
lcall
arpl
setp
pop
rcl
outsl
and
data16
loop
cli
sbb
mov
jno
inc
movsl
fsubr
mov
call
movsl
mov
mov
or
and
pusha
mov
mov
lea
add
roll
pop
leave
or
movsb
lret
in
loop
jae
mov
lea
imul
pop
mov
jmp
inc
jb
add
mulb
jp
push
jne
arpl
lret
cmp
add
or
mov
bnd
addr16
adc
adcb
jp
fistl
enter
and
inc
jg
daa
and
mov
loopne
pop
inc
sbb
int3
add
pop
popa
xor
mov
mull
dec
jmp
in
xchg
adcl
daa
push
aad
push
les
xchg
sub
repnz
jmp
xchg
in
push
xchg
frstor
or
adc
pop
icebp
mov
dec
jp
in
inc
inc
loop
mov
ret
xchg
repnz
sub
and
shrl
loopne
mov
xor
sbb
push
arpl
fs
imul
shrb
adc
dec
nop
mov
aad
fiaddl
ss
sub
imul
and
sub
push
mov
stc
in
dec
mov
hlt
sub
dec
inc
push
call
movsl
pop
fsubrs
rcll
push
es
jmp
cmp
mov
insb
lea
into
push
ja
add
arpl
mov
mov
mov
sbb
mov
cmp
in
inc
sub
loop
imul
notl
mov
jne
fadds
pop
and
sub
fsubrs
flds
xchg
inc
shlb
sub
repnz
xor
add
outsb
xchg
int
add
mov
inc
mov
inc
mov
decl
insb
inc
pop
inc
mov
divl
xor
jne
mov
pop
cwtl
in
pop
mov
addl
xor
stos
daa
sbbl
jg
inc
dec
adc
lea
ret
std
jl
xchg
ret
mov
dec
into
fimull
les
mov
movsb
dec
pop
movsb
add
test
sbb
push
movsb
push
xorb
jbe
cwtl
cmp
add
mov
sbb
xchg
pop
pop
repnz
sti
xor
lea
cmp
pushf
pop
sub
inc
add
xchg
or
fldl
jno
aad
xchg
sahf
gs
fstpt
iret
cmpsb
cwtl
push
sbb
mov
adc
xor
int
sub
clc
xchg
lods
adc
push
add
jmp
adc
cmc
je
lods
fisubrs
dec
mov
cmc
adc
lea
in
into
or
dec
sti
std
jb
inc
jp
insl
mov
out
xchg
lea
daa
enter
in
jmp
repnz
sub
lock
lret
inc
xor
and
ljmp
push
fsts
in
mov
inc
xchg
sti
aam
ret
inc
sbb
jge
cmpsb
in
es
mov
jae
scas
push
push
mov
clc
xchg
lods
push
cmc
mov
pushf
add
sbb
mov
fsubp
je
jg
mov
xor
loopne
jmp
das
mov
fcomps
mov
movsl
ljmp
aaa
lret
pop
sbb
sti
or
inc
jl
mov
addr16
inc
in
iret
mov
jno
test
add
out
adc
jmp
imul
xor
sbb
pop
jecxz
mov
and
clc
jle
push
sub
lretw
ret
nop
xlat
mov
scas
jmp
lret
cmp
fwait
or
push
push
test
fsub
xor
jp
sbb
xchg
push
mov
aam
fmull
cmc
sbb
push
inc
and
orb
sub
mov
movsl
das
cmp
and
jo
push
or
dec
mov
mov
xchg
pop
xchg
adc
push
call
lret
ror
dec
fsubr
imul
pop
sub
xchg
scas
mov
dec
popa
mov
shll
and
pop
addr16
push
movsl
add
outsb
out
cmc
out
jne
sahf
out
mov
jle
adc
mov
lds
and
jne
dec
or
int3
insl
push
sbb
add
push
dec
lds
mov
cmpsb
dec
in
xor
ja
insl
pop
xor
mov
xchg
mov
cmpsl
jg
jae
arpl
notb
lds
call
outsb
iret
jg
outsl
movb
pop
xorb
ss
pop
stc
cs
fbstp
mov
adc
or
and
cmpsl
or
mov
mov
mov
mov
in
mov
enter
out
cwtl
dec
mov
inc
sbb
das
pushf
daa
imul
loopne
in
xchg
xor
mov
mov
xor
fcmovu
xchg
dec
dec
dec
mov
push
adc
mov
sub
sbb
pcmpgtd
mov
adc
sub
mov
ret
out
xchg
repz
mov
in
mov
lea
jle
xchg
in
sbb
mov
lods
push
jbe
hlt
mov
jmp
lea
sub
imull
scas
pusha
movsl
sbb
rol
sahf
into
add
rcl
xchg
push
mov
push
fldenv
stc
or
sub
dec
jo
pop
insb
je
or
jne
fdivp
xor
int
stc
cs
pop
popa
mov
pop
imul
rcr
sub
jno
fdivs
jb,pn
pop
lahf
je
or
flds
push
call
dec
mov
and
hlt
movsb
testb
aad
mov
in
pop
lcall
cmpsl
dec
mov
out
adc
iret
mov
pop
mov
or
loope
popf
in
inc
ret
dec
push
xchg
lods
sbb
orl
dec
xor
push
lret
lock
in
jae
push
adc
sahf
add
push
mov
lcall
mov
cs
fisttpl
jmp
or
mov
push
jbe
fwait
xchg
sub
mov
ja
negb
push
mov
cmp
popf
jo
push
or
adcb
pop
mov
in
inc
jbe
and
sbb
inc
mov
dec
and
test
sbb
fsubrs
pop
and
fsubrl
dec
cmp
lock
movsl
stos
or
fcomps
mov
daa
ja
push
popf
sub
insb
pop
dec
daa
in
push
mov
xchg
cmpsl
mov
outsl
inc
add
lret
mov
xor
xlat
dec
sbbl
test
pop
imul
je
mov
fbld
in
pusha
int
sbb
and
and
nop
outsb
push
cli
loopne
cmpsl
int3
call
popf
dec
and
pushf
sbb
pop
imul
lea
icebp
hlt
lock
add
mov
mov
mov
inc
sub
pop
jl
xor
loop
lea
mov
xchg
push
test
fwait
mov
js
push
gs
or
fwait
lea
dec
cmp
mov
dec
and
scas
orl
jb
orb
adc
dec
sbb
jns
inc
dec
or
mov
sub
mov
rcrl
mov
mov
cli
popf
jp
and
adc
pop
pop
adc
pop
mov
mov
jmp
push
fistpl
out
fistpl
rorl
lea
pop
test
dec
pop
dec
notl
enter
in
push
and
cmp
or
adc
mov
lret
and
pop
sbb
mov
fmuls
xchg
in
sub
jno
xor
std
sub
sarl
cmp
adc
push
ss
into
and
ret
jbe
adc
enter
scas
and
outsl
and
sahf
lret
adcb
push
mov
shlb
mov
lea
testl
push
ret
cld
loopne
mov
in
mov
mov
sbb
ja
or
xchg
shrl
xor
mov
or
in
and
and
popa
xor
mov
xor
sub
jo
mov
mov
mov
pop
popa
aam
mulb
push
jb
adc
xchg
mov
xor
xchg
arpl
sbbl
xor
mov
mov
test
clc
cmp
movsl
aad
cmpsb
push
stos
jae
mov
mov
rcrl
inc
lods
lods
js
push
lcall
or
xchg
mov
xlat
bound
xchg
test
movsl
sbbl
stc
xor
mov
loopne
inc
mov
icebp
mov
lods
ljmp
outsl
imul
ja
pop
mov
jo
cmp
aas
cmpsl
ret
and
xchg
inc
mov
dec
outsl
aas
lret
xchg
xor
fcoml
in
outsb
enter
push
ret
dec
clc
or
or
icebp
sbb
push
popf
in
sbb
dec
inc
push
cmp
lret
inc
inc
and
stc
inc
ret
mov
rol
jo
and
and
ret
adc
adc
and
scas
add
mov
sbbb
pop
sbb
aaa
lods
pop
mov
pop
jo
js
stos
ficoml
sub
gs
iret
push
mov
dec
repnz
add
lea
mov
cs
cmpsb
sub
sahf
pop
leave
enter
imul
or
xchg
inc
iret
cmp
pop
movsl
xor
adc
or
in
push
push
dec
jne
lods
jp
push
adc
pop
mov
es
pop
push
repnz
in
and
cmc
icebp
jne
dec
push
daa
jb
sub
into
sub
push
shl
add
jne
fists
cmp
in
cltd
pop
mov
dec
fadds
jae
lea
pop
cld
shl
add
stos
sbb
loopne
mov
fisubs
movsl
add
out
add
lods
fistl
mov
popa
mov
xor
out
sbb
aas
pop
mov
add
or
and
pusha
xor
repnz
ljmp
out
pop
fbstp
pop
and
xor
mov
sbb
pop
dec
add
and
stc
ja
mov
addr16
pop
jns
mov
stos
insb
mov
mov
mov
adc
lcall
dec
and
ds
imul
xchg
fcomi
push
pushf
mov
push
mov
push
xchg
loopne
mov
shl
jae
jne
mov
int
and
shl
jno
lea
xor
sti
cmpsb
fdivl
mov
imul
leave
cmc
pop
mov
mov
ret
lahf
jp
sahf
mov
dec
push
push
adc
outsl
in
add
repnz
adc
mov
push
mov
lcall
sti
push
lods
push
adc
test
popf
loop
pop
mov
adc
loopne
inc
in
les
sahf
popa
add
or
sbb
arpl
cwtl
mov
cmp
lds
stc
stos
decb
fimuls
sbb
pop
lea
push
push
adc
int3
mov
subb
and
std
test
nop
dec
pop
jne
xchg
add
jbe
sub
cmp
cmp
inc
insl
mov
stc
stos
xchg
cmpl
pop
dec
xchg
and
rclb
cmc
push
imul
mov
mov
rclb
mov
xchg
xor
and
mov
mov
in
inc
test
sbbl
rcl
inc
and
xchg
mov
fisttps
sub
or
jp
mov
push
inc
sbb
adc
push
mov
jns
jecxz
dec
mov
out
mov
sub
push
lock
mov
sbb
xchg
jle
jae
jb
add
clc
xlat
shrb
push
mov
sarb
out
xchg
test
pop
in
jmp
in
lods
xor
jmp
lret
cwtl
cmp
adc
mov
sbb
adc
sub
sbb
mov
clc
cmpsl
sub
or
popa
mov
aas
lea
inc
cmc
jbe
adc
fnsave
add
jae
mov
pop
in
xor
cmp
pop
mov
sbb
xorb
andl
jno
int
pusha
stos
mov
mov
gs
xlat
pop
in
bound
adc
xorl
fs
sbb
mov
insl
inc
mov
pop
xor
push
push
test
cmp
and
or
popa
jge
push
fnstcw
add
dec
mov
pop
sub
out
pop
pop
jecxz
stos
in
ds
ficoms
mov
lret
sahf
outsb
xor
or
arpl
xchg
mov
mov
mov
mov
dec
mov
mov
neg
xchg
sbb
sub
insb
sub
or
inc
mov
aad
push
sub
jo
add
jo
jg
jns
jne
in
ja
sbb
sub
inc
mov
stos
lods
inc
or
mov
cli
ljmp
iret
jecxz
xchg
lea
fwait
jae
mov
lods
push
mov
push
mov
sarb
mov
and
pop
mov
sub
xchg
pop
fdivr
call
in
push
dec
lret
sahf
xchg
lods
ret
jbe
mov
nop
push
push
ret
mov
mov
mov
int3
add
pusha
mov
cmp
jbe
int3
push
add
sub
enter
sahf
mov
jg
mov
ds
push
xlat
sub
jg
cli
lock
lock
insl
lahf
dec
sar
orl
leave
fwait
push
push
fdivs
pusha
xchg
cmp
into
adcl
lock
repz
jne
fwait
jb
mov
arpl
pop
outsb
push
push
in
push
mov
dec
mov
xor
mov
add
sub
jnp
test
dec
or
pop
cmp
fcmovnbe
out
orl
mov
push
sbb
pop
int
je
fwait
addr16
das
mov
pop
and
add
sbb
imul
mov
gs
fincstp
mov
fstps
inc
pop
insl
test
loop
push
xor
daa
xor
or
mov
daa
pop
outsl
ja
jmp
sub
cmp
lea
daa
xchg
jno
add
mov
scas
cmp
mov
jo
stos
jbe
test
hlt
sbb
and
lea
in
stc
fdivrl
cmp
mov
jo
mov
pop
dec
mov
xchg
and
and
mull
dec
test
mov
mov
sbb
dec
mov
and
inc
mov
and
add
loope
shlb
jnp
leave
mov
pop
xor
movb
divl
inc
testl
data16
in
stos
pop
rorb
in
fadds
mov
sub
pop
decl
mov
loopne
pop
jp
scas
inc
aad
outsl
in
loop
or
dec
mov
enter
js
insl
sub
popa
ss
loopne
iret
aad
test
ja
push
scas
jns
repnz
test
xchg
sbb
imul
xchg
jecxz
dec
popa
das
adc
dec
and
stos
push
jnp
fwait
sahf
jns
jl
in
das
or
subb
fbstp
sub
lea
lret
pop
mov
cli
sub
mov
sbb
cltd
or
in
pop
pop
pop
sub
push
lock
mov
inc
jo
das
arpl
daa
pusha
push
es
rorb
sbb
push
out
ret
into
mov
jmp
pop
out
adc
fisttpll
sahf
push
repz
jnp
dec
jb
mov
xor
xchg
push
lea
mov
mov
mov
shll
lock
aam
je
stc
jae
dec
sbb
fnsave
test
test
fcompl
xor
pop
fsubrs
sub
cmp
add
inc
or
test
adcl
mov
xchg
dec
jg
fstps
adc
outsl
inc
xchg
insl
pop
fists
adc
stos
jns
sbb
pop
sbb
aam
xor
rclb
lret
arpl
cmpb
std
add
mov
mov
add
mov
mov
pop
out
jl
xor
fwait
mov
mov
sub
aam
iret
fdivl
std
sbb
lods
mov
sub
sbb
pushf
push
jae
int
mov
xchg
lea
mov
das
add
dec
test
lret
in
out
jnp
mov
mov
push
inc
out
push
mov
arpl
xlat
repz
je
ss
jecxz
inc
lret
and
cmp
aad
es
cmp
aam
pop
arpl
in
mov
cmp
mov
jg
bound
mov
pop
inc
sub
push
sbb
out
cmp
es
imul
imul
gs
xor
sahf
mov
leave
hlt
int
out
leave
lea
or
fldenv
and
ljmp
sub
inc
mov
stos
push
mov
mov
push
insb
rep
aam
rclb
sub
mov
popf
leave
movsl
xchg
add
ficomps
call
mov
nop
cmp
movsl
cltd
xchg
arpl
hlt
mov
jns
or
pop
xchg
hlt
cmc
adc
fwait
cmpsb
jmp
hlt
and
jo
adc
and
xchg
cli
int
mov
push
mov
xor
sbb
rclb
or
pusha
int
gs
pop
std
sub
sub
dec
and
pop
lods
cli
mov
and
inc
loope
mov
fimuls
test
or
or
xchg
arpl
int
mov
mov
inc
gs
push
imul
mov
clc
leave
sub
pop
fimull
push
and
jg
fisttpll
in
jns
inc
ret
outsl
loop
mov
lods
in
aaa
jb
mov
negl
fs
cltd
arpl
jp
cmp
aam
ds
shrb
adc
add
arpl
sbb
jns
mov
jle
data16
data16
adcb
push
es
mov
shlb
and
loopne
adc
inc
aad
iret
jmp
sub
cmpsl
xchg
mov
or
das
inc
lea
repz
cli
dec
ret
fcmovu
cmp
imul
mov
jbe
cld
hlt
sbb
shr
sbb
jae
pop
testl
inc
outsb
inc
mov
mov
add
addr16
popf
adc
mov
sub
and
out
sub
pop
dec
xchg
pop
adc
test
jp
jne
and
aam
xor
loop
shl
push
popf
jl
push
push
mov
cltd
add
ss
scas
leave
adc
mov
and
int
popa
xor
pusha
repnz
fldcw
int3
hlt
outsb
inc
mov
ja
push
dec
ror
es
adc
push
bound
dec
ror
arpl
out
and
cmpsb
push
push
mov
int3
mov
arpl
or
shl
xor
fucom
jecxz
leave
mov
mov
clc
mov
or
ljmp
fisttpll
pop
lea
and
mov
outsb
mov
lret
adc
adc
dec
xor
js
repnz
inc
cwtl
jl
lds
ja
rcrb
int
mov
xor
imul
repnz
js
outsl
daa
push
pushl
or
lods
adc
pop
push
subl
fisubrl
daa
mov
ret
and
adc
ja
sbbl
xorl
push
cmp
mov
ss
xor
mov
das
mov
sti
mov
jne
clc
dec
xchg
out
xor
aaa
jg
push
adc
int
push
subb
pop
xchg
push
sub
jge
jno
and
repnz
and
cmpl
ja
fnstcw
inc
pop
jp
cmp
or
mov
or
mov
test
cld
mov
test
pop
fisubrs
or
mov
loope
jo
cmc
mov
jl
jmp
clc
das
push
dec
stc
in
add
jcxz
jno
enter
dec
ljmp
inc
mov
mov
jae
popa
sbb
and
inc
pop
or
inc
mov
and
fidivrs
sub
adc
cmp
mov
adc
and
movl
lahf
jge
push
jp
js
dec
or
test
xlat
lret
xchg
in
inc
xor
cmp
jecxz
jecxz
bound
cwtl
stos
imul
sub
pop
jmp
sub
mov
fstps
inc
icebp
lea
in
inc
mov
pop
mov
and
test
mov
xor
insl
sub
mov
in
xor
into
push
nop
push
clc
nop
adc
jle
ljmp
mov
daa
adcb
inc
sbb
addb
jne
or
mov
add
imul
and
push
sahf
mov
iret
mov
sarl
insb
icebp
cmc
gs
pushf
dec
fisttps
mov
mov
lds
ss
cmp
ja
pop
add
cld
test
add
add
add
xchg
mov
in
fdivl
sahf
jno
fimull
pop
outsl
cmp
loop
and
adc
movzbl
aaa
jne
add
loopne
mov
addr16
aad
ds
lods
sahf
cmp
in
aad
inc
call
dec
xchg
gs
movsl
add
cld
and
ret
lods
jmp
clc
inc
sub
jmp
cltd
mov
mov
movsl
mov
cmp
pop
cwtl
stos
aam
jnp
jle
push
insl
lea
mov
xchg
xchg
ds
sbb
inc
rol
push
sarl
negl
fnstcw
fistpl
loop
imul
dec
fisubrs
lret
rcr
out
gs
aaa
dec
xchg
xor
je
lods
lea
jno
dec
add
data16
or
je
test
and
cmp
sbb
jbe
mov
ja
loop
ja
sub
in
mov
in
hlt
and
pop
mov
push
daa
jo
and
das
sbb
insb
jns
jno
push
pop
outsl
into
push
push
dec
std
jl
in
and
mov
push
adc
xor
sbb
inc
mov
cwtl
fnstsw
push
movsb
mov
mov
inc
mov
mov
sbb
inc
sub
test
out
sub
outsl
jne
mov
fdivrl
scas
pop
mov
fwait
mov
cmpsl
int3
push
fidivl
aam
inc
mov
stos
mov
icebp
dec
pop
sub
lret
lods
cltd
int3
lods
mov
jbe
jg
push
cli
mov
pop
xchg
scas
sbb
push
add
push
cltd
insb
scas
sbb
push
inc
int
adc
mov
iret
mov
mov
or
cmc
lcall
jno
inc
jg
or
fsubrl
hlt
jp
pop
int3
mov
mov
add
imul
mov
jb
loop
scas
xchg
fcomps
mov
sahf
loopne
daa
insl
lret
fstl
mov
xchg
xor
mov
fidivs
xor
jnp
add
and
lahf
insb
lea
mov
mov
jnp
dec
mov
push
and
and
icebp
xchg
or
mov
insb
fildl
push
enter
jae
xchg
dec
ja
fldcw
jmp
and
mov
leave
mov
jp
xchg
mov
mov
ret
jl
pushf
pop
hlt
mov
mov
lods
popf
popa
sbb
mov
push
cld
ja
mov
cmc
aas
jl
enter
lods
adc
cltd
test
or
jg
push
jne
es
or
mov
dec
jmp
dec
push
loope
dec
fisttps
cwtl
fists
call
sbb
mov
mov
xorl
push
xor
add
cs
sbb
sub
movsl
inc
jle
dec
pop
dec
cmp
int3
test
rorb
in
test
jae
xor
out
out
cld
andb
mov
in
cmc
stos
xorb
sub
leave
in
cmpsb
outsl
inc
int
out
bound
xchg
mov
xor
cmp
sbb
sbb
xchg
and
sbb
test
jp
scas
jo
lret
jns
xor
sbb
mov
sti
mov
inc
or
mov
mov
jmp
push
mov
add
popa
sti
jae
pop
je
test
jo
lea
cmp
inc
fldenv
jg
xor
sub
xor
movsl
inc
in
inc
jb
xor
jmp
push
test
leave
inc
ficomps
push
leave
aaa
xor
in
outsl
or
inc
and
cmpl
in
inc
test
mov
xchg
sbb
daa
leave
iret
mov
js
lcall
fcoms
jne
imul
out
lods
dec
xor
jmp
push
mov
enter
push
xchg
setb
fimuls
aas
pop
int
push
cmpsb
jle
movsb
push
and
lret
enter
xor
js
sub
lds
loope
mov
push
fdivl
or
cmp
mov
sbb
pop
xor
scas
sbb
and
mov
mov
int3
les
cmc
sarl
sub
lea
dec
pop
mov
sbb
dec
stos
dec
js
dec
add
mov
lods
pop
pop
fsubrl
or
mov
pop
pushf
fwait
aaa
jne
jmp
jo
jae
orl
clc
cmpsl
lods
mov
and
sbb
mov
mov
mov
inc
push
jmp
add
test
cmc
or
inc
jmp
sbb
lods
jne
or
pusha
test
cmp
lcall
mov
ljmp
ret
push
shlb
push
xchg
pop
adc
subl
mov
ja
and
or
out
ds
test
or
stos
pop
mov
xchg
mov
imul
into
jmp
pop
mov
jno
pop
daa
mov
xlat
lods
inc
sub
or
pushf
sti
push
cmpsl
dec
pop
insl
aas
jmp
lds
gs
divb
cmc
push
jbe
mov
sub
push
lahf
mov
cmpsl
or
and
jbe
mov
ss
lods
sahf
nop
bound
lret
mov
loop
in
add
sub
out
and
hlt
loop
jmp
push
imul
lods
xor
loop
mov
cmc
add
mov
or
arpl
mov
cmp
inc
sub
xchg
nop
fimuls
je
pop
andb
in
xchg
andb
jo
cmp
push
push
js
jns
in
jno
in
mov
sbb
in
xchg
cmp
mov
les
sahf
rcl
sbb
movsb
repnz
je
test
pop
add
outsl
loop
mov
adc
test
xchg
jae
sub
aam
lret
cmpsb
inc
dec
incl
arpl
push
sub
jmp
cwtl
sbb
xor
idivl
mov
sub
jecxz
jne
fiadds
movsb
jmp
or
pop
and
hlt
mov
mov
push
movsb
test
adc
mov
adc
mov
lea
test
mov
sbb
mov
je
xchg
aaa
jb
inc
mov
pop
fdivs
and
shll
jae
xchg
jp
sub
aaa
sub
push
and
jne
inc
or
sarb
and
leave
js
pop
mov
add
xor
inc
cmp
adc
arpl
jl
sub
cmc
push
cmp
mov
int3
ja
push
cmp
and
dec
dec
jecxz
xlat
bound
pop
cld
aad
mov
pop
mov
adc
and
mul
imul
push
fsubs
dec
lret
cmp
fsubrl
mov
ds
mov
fs
loop
and
mov
rcl
cs
xlat
into
pop
mov
sahf
jge
push
int3
jmp
call
daa
ja
adc
mov
dec
pop
jb
pusha
inc
adc
mov
aad
adc
mov
lock
and
mov
inc
xor
bound
fists
dec
adc
arpl
shll
push
mov
mov
sub
hlt
mov
pop
mov
sub
cwtl
js
mov
pop
and
mov
repnz
sbb
shlb
adc
orb
jnp
addr16
lea
and
mov
sub
sbb
mov
adc
enter
lret
pop
loope
mov
aam
jbe
mov
dec
inc
and
repnz
sub
pop
sbb
adc
stos
mov
xor
cmpsl
mov
mov
mov
insb
jno
adc
in
fldl
jmp
dec
pop
push
enter
cwtl
and
je
or
orb
ja
or
adc
mov
lea
lods
loopne
xor
lock
mov
jecxz
inc
insb
fnstcw
mov
jae
sub
pop
cmc
xchg
std
lahf
dec
stc
shlb
shl
in
and
cmp
test
push
ret
cwtl
xchg
lds
pop
repnz
mov
subl
mov
iret
jp
cmp
divl
or
add
ret
and
jge
xchg
sbb
repz
mov
pop
js
xchg
mov
push
jnp
push
dec
fiaddl
arpl
jp
imul
dec
cmp
or
add
cwtl
hlt
sub
dec
hlt
aas
ds
clc
in
sub
ja
in
add
xchg
add
jmp
int
pop
and
push
mov
or
dec
pop
movsl
jns
mov
sub
arpl
mov
sbb
stos
sub
rcll
sub
lret
lods
stos
and
loope
divb
faddl
add
xor
mov
xchg
out
and
stc
or
push
lea
lea
pop
fistpl
dec
cltd
lock
or
and
addb
pop
xor
xchg
stos
jbe
pop
xor
jle
icebp
adc
push
stos
inc
in
mov
and
cmp
xchg
aad
mov
sbb
push
dec
gs
and
loopne
jnp
inc
xchg
jbe
scas
and
repz
jne
or
add
aaa
cmp
mov
int3
jo
push
fcoml
std
pop
std
sbb
popf
loop
stc
arpl
jae
cmp
test
sub
jge
mov
cmp
imul
aaa
push
lret
mov
mov
faddl
rclb
add
insb
dec
mov
xor
mov
rcl
mov
inc
mov
lahf
pop
jmp
dec
mov
pop
std
xor
shrb
push
jo
les
mov
or
push
aam
ja
test
and
add
clc
test
lea
jl
into
sbb
mov
loop
xor
xchg
ret
fsub
cwtl
test
dec
int3
jne
jmp
inc
sub
ret
sbb
mov
dec
aas
add
aam
dec
test
es
mov
mov
inc
mov
sub
xor
mov
push
fs
loope
imul
fcompl
loope
movsl
jae
inc
icebp
popf
cld
insb
in
and
dec
stos
and
inc
mov
daa
int3
push
cmp
mov
sbb
inc
mov
mov
cmpsl
in
xor
fnstcw
pop
es
xor
jae
fs
dec
mov
addb
xchg
fs
push
lahf
or
mov
pop
sbbb
lret
pop
xor
mov
pop
out
and
test
lret
je
mov
sub
adc
push
addr16
and
mov
test
in
mov
fsub
xchg
or
cld
mov
pop
sub
adc
sbb
loop
mov
rol
popf
es
and
xchg
push
lcall
test
cmp
cmp
dec
xchg
xor
imul
lods
or
das
jmp
sbb
adc
adc
out
xlat
sbb
js
add
mov
inc
adc
xor
jle
xor
mov
or
dec
fstps
pop
inc
inc
mov
in
dec
mov
mov
out
jo
in
stc
mov
popa
lock
mov
mov
pop
mov
xchg
testl
fldl2t
lret
out
jae
inc
out
rcrl
leave
pop
and
fsubl
mov
push
jmp
fnclex
or
cmp
mov
lods
imul
and
outsb
or
imul
repz
fdivr
popf
fxch
xor
out
dec
insb
jecxz
pop
leave
ljmp
mov
imul
movsl
cmpsb
roll
sub
mov
inc
dec
xor
test
add
arpl
xor
movsl
add
lea
test
fcomps
mov
sub
loop
push
rcll
inc
adc
ror
inc
mov
jno
lcall
ljmp
mov
sti
adcl
mov
fs
out
mov
lret
and
ja
cmp
in
mov
xchg
mov
or
adc
cmp
mov
in
push
mov
jmp
jno
fcoml
insl
loope
xor
bound
add
aaa
mov
lea
add
pop
je
adc
and
out
aad
xor
jl
gs
test
push
mov
inc
cmp
and
nop
or
ja
int3
imul
mov
adc
movq
cmp
movl
sbb
or
mov
call
addr16
inc
shrb
test
mov
sbb
mov
dec
test
pop
inc
clc
xor
sbb
iret
adc
and
loopne
inc
cmp
lea
mov
in
mov
fdivr
jne
mov
pop
in
xchg
mov
in
jnp
daa
sti
lods
jl
jno
lock
aas
xlat
adc
inc
mov
outsb
lret
pop
arpl
mov
adc
dec
dec
call
pop
divb
stos
mov
mov
and
test
popf
push
dec
or
mov
pop
xor
push
sbb
pop
cmp
jecxz
sahf
enter
push
mov
icebp
clc
mov
sub
jg
cmp
sub
mov
out
xchg
popf
mov
dec
mov
pop
jmp
pushf
js
ljmp
mov
and
js
daa
sbb
or
imul
loope
sub
xchg
subl
popa
out
shrl
cmp
mov
movsb
mov
dec
dec
das
lret
jle
pop
mov
jecxz
xchg
mov
sbb
test
in
sahf
jbe
or
arpl
das
idiv
push
loope
push
arpl
add
sub
mov
jns
js
fsub
and
sbb
cmp
in
arpl
cmpsl
mov
mov
iret
fadds
data16
pop
or
or
stos
xchg
dec
data16
push
frstor
test
mov
dec
dec
adc
in
pusha
lods
push
jl
pop
dec
dec
mov
push
test
mov
sub
test
jecxz
mov
pop
xor
xor
mov
ljmp
mov
sbb
or
dec
daa
or
lea
lcall
enter
dec
dec
aaa
inc
out
daa
out
test
pop
daa
sub
fdivrs
das
pop
mov
in
ret
push
jne
or
mov
stos
loope
mov
js
pop
jl
mull
loop
dec
js
adc
mov
and
adc
outsl
or
pop
cmp
pop
sub
mov
idiv
inc
out
pop
in
cmovge
adc
pop
and
push
dec
jecxz
adc
imul
iret
xchg
jmp
pusha
xchg
fcmovb
test
call
inc
push
inc
and
std
stc
shlb
push
jl
sbb
sub
sbb
jne
pop
idivb
sbb
mov
jge
test
sbb
pop
push
test
mov
cmp
loop
cld
lds
call
mov
int3
icebp
dec
cmp
sti
out
aas
sbb
loopne
loope
dec
test
out
sbb
adc
shl
pop
arpl
pop
cwtl
js
adc
stos
imul
xchg
in
mov
mov
jge
jo
lcall
jecxz
adc
sbb
pop
dec
and
push
push
bound
out
mov
movsl
cmp
mov
xor
loopne
aas
lret
push
lahf
add
mov
or
sbb
jnp
nop
scas
mov
mov
js
out
fcoms
fldl
in
lock
sub
mov
pop
push
daa
cmpsb
lea
fnsave
push
and
sbb
cltd
pop
xchg
ret
sub
jne
cmp
movsl
mov
iret
xor
jbe
dec
push
into
mov
insb
lock
xchg
repnz
loop
pusha
mov
mov
adc
cmc
jne
movzbl
lea
pop
popa
ret
out
sub
and
pop
mov
fistl
xor
in
dec
or
jmp
mov
push
sahf
mov
adc
and
loopne
pop
inc
dec
mov
loop
and
scas
xchg
cs
inc
sbb
lock
movsl
outsl
dec
clc
movsl
sbb
push
lods
lea
inc
adc
or
ret
enter
popa
fsubr
ja
mov
gs
xor
fidivrl
aaa
cmpb
imul
and
or
lods
pop
daa
shlb
jecxz
jne
jmp
or
fcomip
pop
push
mov
hlt
cli
hlt
popf
nop
xlat
mov
push
shlb
dec
push
icebp
pop
add
mov
push
lret
bnd
mov
xor
arpl
daa
inc
sbb
mov
test
imul
in
dec
bswap
jg
push
outsl
stos
jne
xorb
push
shl
push
cs
adc
mov
adc
in
cmpsl
fwait
movsl
insb
test
inc
popa
mov
push
xchg
xchg
cmp
insb
pop
dec
jae
dec
insl
and
dec
mov
mov
popf
pop
lea
mov
lret
sbb
mov
loop
loope
and
and
mov
jmp
mov
in
and
fbld
je
bound
sbb
push
jge
xor
fwait
bound
push
scas
jae
mov
cwtl
es
cmp
fwait
inc
insb
daa
or
lock
in
in
mov
mov
popa
or
dec
and
mov
inc
sbb
std
xor
movsb
adc
cmp
mov
ret
jb
dec
mov
lahf
jae
or
lds
imul
adc
mov
adc
mov
jae
or
add
adc
repz
jmp
xchg
mov
rorb
adc
sub
and
xlat
popa
xchg
xor
dec
bound
inc
lods
fisttps
inc
test
lea
hlt
iret
push
and
sub
mov
add
out
mov
jne
or
bound
in
in
popf
pop
addr16
rorb
ljmp
jmp
inc
sub
push
in
popl
ja
push
jl
xchg
fcmovnb
cld
mov
xor
andl
add
cli
dec
push
xchg
push
push
cmp
and
cmpsb
dec
dec
jbe
iret
test
push
ret
dec
add
xlat
lods
xlat
js
sbb
xchg
mov
and
mov
shr
xor
sbb
push
mov
adc
cmp
ds
dec
sbb
and
fcmovb
test
mov
or
sbb
sarl
jmp
add
call
icebp
rorl
mov
xchg
dec
xorb
call
lret
sbb
cmpb
ja
mov
dec
cli
das
push
mov
jbe
fcompl
xor
orl
cmc
sub
push
rcr
add
loope
imul
test
and
xor
jg
sbb
js
call
push
inc
push
xchg
rorl
jp
and
les
gs
daa
sub
sbb
enter
or
pop
inc
xchg
pop
and
jnp
pop
cmp
push
fidivs
in
dec
add
ja
repz
mov
sbb
jmp
arpl
bnd
adcl
divps
xor
push
mov
arpl
mov
fs
inc
jmp
adc
jo
jno
lret
orl
mov
xor
cmc
stos
mov
or
mov
mov
les
std
sub
jno
add
gs
jnp
mov
cs
mov
notl
xchg
mov
call
scas
xor
xchg
call
jns
enter
xor
jl
lods
lds
movsb
nop
xor
pop
or
repnz
or
lock
les
lret
xor
cmc
out
jbe
fistps
test
cmp
sub
fwait
sbb
mov
lcall
adc
dec
push
jmp
insb
pop
lea
std
les
rcll
dec
xor
mov
or
dec
mov
or
mulb
jns
push
pop
stos
mov
shll
mov
jp
jmp
mov
mov
mov
and
out
gs
inc
mov
stc
lahf
movsb
jo
and
in
lahf
dec
inc
aaa
iret
adc
stc
test
xor
in
dec
std
or
ja
loop
mov
popa
xor
les
scas
lea
ds
cmpsl
lret
mov
imull
mov
loopne
addr16
mov
pop
fdivrl
in
arpl
inc
add
filds
inc
fsubr
adc
mov
mov
ret
mov
mov
jl
hlt
test
movsb
jae
sbb
lods
cli
lcall
enter
mov
mov
pop
pop
shll
repz
xorl
insl
cmp
movsl
fisubrl
call
lret
fisttpll
mov
lods
cli
xor
das
adc
dec
lock
jp
js
jb
cmp
aaa
push
inc
fnstcw
pop
push
xchg
jae
sahf
pusha
into
add
push
sub
sub
sbb
stos
push
sbb
push
rcl
icebp
out
xor
xor
xchg
aad
xor
push
xorl
or
pop
jae
mov
fnstcw
xor
sbb
mov
je
xor
cltd
dec
hlt
faddl
int
jecxz
inc
mov
push
stos
jl
int3
cmp
cmp
ja
pop
scas
call
dec
pop
daa
call
les
xchg
into
dec
xor
cmc
push
daa
je
inc
pop
sbb
cmp
push
sub
lahf
jle
repz
gs
xor
mov
imul
push
hlt
lcall
push
cmp
xlat
mov
stos
ret
inc
xor
fsts
ss
dec
fisubs
rorl
aam
fwait
lcall
sub
fsubl
lahf
das
arpl
dec
popa
mov
cmp
xor
mov
add
xor
mov
xor
popa
mov
mov
push
mov
or
and
lea
cmpsb
mov
stc
repz
cmp
fs
stc
pop
loop
pusha
repz
push
adc
test
inc
or
jle
push
mov
mov
sbb
mov
sub
pop
push
dec
jge
in
mov
push
mov
mov
and
sbb
xor
or
jb
mov
xchg
es
adc
cmovae
sbb
inc
es
xchg
pop
and
shrb
cwtl
inc
les
push
ret
xchg
je
arpl
scas
push
push
lret
nop
inc
push
sbb
mov
push
cmp
and
push
xchg
fsts
pop
adc
stos
jbe
mov
jl
mov
adc
and
std
push
push
push
and
fmuls
mov
sbb
dec
lods
cmp
cmpsb
pop
or
and
xor
sbb
mov
jbe
ret
addr16
daa
mov
cs
or
aas
cmpb
push
jecxz
push
mov
and
roll
movb
jmp
jge
fldpi
sbb
in
ret
sbb
in
or
mov
loopne
addl
movsl
int
mov
cmp
stc
inc
inc
popa
xchg
je
sub
fstps
mov
dec
into
lock
lods
je
inc
mov
pop
into
jg
jae
lahf
idiv
cli
jo
dec
mov
push
data16
sbb
and
jne
cmpsb
mov
fistps
adc
nop
jno
data16
in
into
push
jno
rorl
or
push
push
movsb
icebp
sub
adc
rclb
aam
imul
and
inc
je
insl
nop
push
lcall
mov
imul
andl
cmp
jb
arpl
in
mov
adc
xchg
cmp
jb
out
dec
sbb
leave
inc
insb
mov
insl
loopne
jo
stc
in
mov
shl
in
addl
fnsave
push
es
cmovs
pop
repz
sbb
xor
subb
push
ret
jo
lea
insl
outsb
stos
jmp
ljmp
pop
mov
bound
lea
sbb
push
test
sbb
fldcw
in
dec
callw
sbb
jae
and
dec
aam
arpl
loope
popa
divb
ror
jb
xchg
pop
lods
aad
push
sti
mov
add
lcall
shlb
add
rorl
insl
imull
or
dec
fisubrl
push
push
push
pop
iret
icebp
mov
mov
add
sbb
or
icebp
shll
enter
test
js
mov
mov
and
or
fidivrl
xor
in
xchg
sbb
arpl
inc
fnstenv
mov
mov
fadds
int3
in
mov
xchg
adc
sub
lock
data16
mov
repz
fldt
cmp
and
inc
and
popa
push
xchg
mov
loop
outsl
fistps
fs
cmp
arpl
mov
sub
cmpsl
cwtl
cmp
aaa
stos
sbb
inc
fbstp
push
and
mov
cmc
jae
pop
mov
push
ret
ljmp
fsub
adc
inc
test
xor
inc
and
pushf
cli
sub
lea
in
inc
lods
imul
push
and
fdivrl
xchg
movsb
cmp
and
fidivs
or
push
lods
testb
and
hlt
fsubl
in
repz
mov
mov
mov
rolb
mov
or
and
add
cmpb
mov
sub
std
pop
ret
and
cmc
test
pushf
fwait
push
add
cmpsb
cmpl
inc
in
push
push
int
arpl
mov
fsubs
call
pushf
and
pop
mov
out
mov
add
jo
push
pop
adc
ja
aad
mov
mov
pop
or
mov
jb
aad
dec
sub
push
pop
aam
cmp
pop
sahf
mov
sbb
ja
int
fnstenv
xor
nop
lds
aad
imul
in
add
cld
jmp
and
sbb
in
jb
popa
mov
push
push
sahf
mov
and
aas
leave
sub
sbb
gs
aaa
jns
cmc
rcll
int3
cli
aam
xchg
punpckhbw
subl
add
fistpll
sub
loopne
mov
insb
bound
xchg
jmp
or
sub
lea
js
xor
adc
inc
fdivrl
mov
or
out
cmp
mov
lahf
out
mov
shrl
mov
fwait
add
and
test
jae
fildll
adc
loop
loop
or
mull
mov
lret
ja
bound
daa
mov
inc
pop
sbb
fistl
flds
ret
xor
mov
fwait
xchg
push
push
loopne
push
lea
and
and
das
stos
pop
mov
cmpsl
sub
mov
mov
mov
divb
addr16
adc
dec
repnz
fwait
enter
push
arpl
jl
mov
test
pop
or
fs
mov
cmp
inc
xchg
lahf
movsl
jnp
data16
fisubs
leave
bound
sub
fwait
sub
out
xchg
push
push
push
je
jl
addr16
or
andl
mov
xor
cltd
sub
fwait
cmc
and
mov
dec
push
add
lods
scas
mov
xchg
pop
fists
sub
xor
cmp
je
aam
orl
repnz
addr16
sahf
rol
push
push
shll
sub
shl
popa
xor
xchg
push
fistps
repnz
call
mov
dec
shll
dec
xor
es
mov
mov
dec
mov
fxch
daa
not
aaa
or
lea
aaa
inc
or
mov
jg
repnz
adc
xor
dec
addb
xor
jo
mov
sahf
mov
into
pop
sub
rorl
in
add
jne
or
lea
mov
xchg
test
fs
inc
hlt
test
clc
repz
aam
mov
ja
nop
adc
mov
and
mov
jmp
addr16
xchg
jae
mov
mov
mov
or
xor
test
push
scas
data16
movzbl
jmp
mov
xor
hlt
mov
shll
mov
add
dec
sub
cwtl
jnp
out
sarl
pop
pop
test
inc
popa
mov
and
xchg
test
outsb
scas
lock
lret
test
xchg
xor
loop
insb
das
movl
fistpll
stos
xor
roll
ret
mov
mov
stos
sarb
or
pusha
push
inc
shrl
xor
hlt
nop
popa
and
pop
popf
pop
fs
stos
xlat
pop
cltd
aas
dec
jge
sub
adc
xchg
adc
lds
mov
sub
mov
mov
mov
test
mov
jle
mov
push
test
push
out
rcll
mov
and
pop
or
jb
push
xor
push
pop
lea
or
js
adc
mov
or
dec
jge
loope
dec
loop
leave
jg
mov
mov
in
jo
jno
xchg
mov
mov
mov
xor
mov
pop
popa
dec
ret
mov
inc
xor
push
jg
int
out
out
test
mov
movsb
inc
cmp
cltd
xor
ja
div
jg
dec
inc
mov
stos
bound
cmp
dec
and
inc
data16
jae
mov
shlb
push
cmpsb
and
insb
sub
push
jno
pop
cmp
sbb
aam
pop
adcl
mov
mov
xchg
rol
idivb
loopne
mov
icebp
jae
mov
cmp
cmc
int
dec
popa
sahf
sbb
xor
push
sub
fadds
push
test
arpl
fnsave
into
push
sub
leave
sub
sub
lea
jae
adc
fdivs
cmp
pushl
cmpsb
and
or
ret
loop
inc
pusha
ret
gs
mov
mov
push
dec
dec
xchg
xchg
cmp
mov
insb
fbstp
ret
in
pop
jnp
popa
shrl
adc
jp
and
out
sbb
xor
jbe
jmp
jle
sarl
inc
jg
xor
dec
sbb
push
imul
rcrb
jbe
mov
out
rcl
jne
jmp
gs
repnz
mov
pop
sbb
add
bound
push
loopne
lea
pop
enter
sarl
repnz
inc
fcoms
test
pop
jg
sbb
out
rorb
je
and
jle
nop
add
and
xor
dec
and
cmp
add
inc
shrb
mov
or
and
xor
lcall
int
mov
xchg
pop
add
mov
dec
fsubs
mov
in
loope
sbbl
lahf
and
and
decl
cmc
push
dec
mov
xchg
adc
out
push
xor
mov
lods
add
fnstenv
mov
fdivr
popa
cmp
test
scas
loop
xchg
pop
clc
icebp
hlt
inc
out
cmc
fmul
test
decl
add
or
cltd
scas
imul
dec
inc
loop
xlat
mov
xor
jmp
sub
or
push
push
lea
data16
mov
aad
dec
push
mov
loop
xchg
jns
dec
push
daa
fwait
mull
cmp
js
frstor
into
or
jno
sti
mov
mov
push
in
push
xor
sbb
mov
adc
cli
add
rcrl
mov
sbb
imul
add
clc
pop
mov
lods
mov
pop
stos
xor
imulb
fbld
dec
mov
push
inc
in
dec
or
ss
adc
adc
add
es
mov
test
daa
mov
lea
push
jns
adc
jbe
dec
mov
lock
adc
je
into
and
rorl
fmul
lods
mov
and
jno
push
jg
repnz
push
jb
sub
rclb
cmpsl
pop
mov
scas
inc
sarl
fidivs
sbb
ss
inc
lods
jne
lds
inc
and
sbb
adc
mov
or
or
or
sub
jle
rcll
mov
jo
fnstcw
bound
in
roll
dec
mov
push
adc
jp
ret
imul
xlat
xor
cmp
call
aas
insl
das
addr16
sub
inc
jg
sub
mov
xor
adc
push
icebp
shrl
pop
ja
adc
mov
pop
xor
push
cmpsl
or
add
inc
push
lea
adc
pop
jmp
sbb
inc
mov
sub
arpl
cld
in
and
cwtl
sub
daa
ret
dec
dec
sub
xchg
push
xchg
mov
cmpsb
je
test
add
cwtl
inc
insb
ffreep
xor
movsb
mov
push
cli
push
push
iret
dec
fldenv
js
sbb
mov
jmp
cmc
in
cli
inc
push
stc
insb
and
pop
into
je
popf
insb
jmp
push
scas
rcll
in
push
outsl
aam
lea
or
pop
lea
and
xchg
sbb
push
scas
pop
test
jno
inc
orb
xor
mov
jo
jge
pop
add
popl
lods
xorl
rol
cmc
lahf
lds
fists
das
repz
inc
pop
add
pop
dec
jno
outsl
add
lea
push
movsl
inc
js
gs
sub
sub
lock
mov
mov
or
push
fdivl
xor
fnstsw
imulb
cli
mov
xor
mov
mov
sub
adc
or
mov
mov
pop
sub
push
sti
sub
xor
sub
cmp
sahf
or
cli
jmp
xchg
or
adc
mov
dec
cmc
clc
xor
mov
xchg
into
mov
dec
mov
adc
fistpll
arpl
push
or
or
mov
jno
push
fcompl
or
negl
jno
push
mov
xchg
cli
mov
arpl
ficoml
mov
in
mov
and
add
insl
adc
popa
inc
mov
stos
enter
mov
outsl
insb
adc
out
sahf
sbb
sbb
mov
mov
js
inc
data16
pusha
jns
jge
test
xchg
or
fcoms
movl
and
mov
mov
rorl
dec
and
jno
mov
test
jbe
or
bound
sarl
or
jae
fnstenv
pop
fildl
push
cmpsl
pop
bound
xor
lea
cmp
xchg
or
arpl
mov
data16
int
mov
aad
xchg
push
xor
xchg
js
inc
mov
xorb
das
sbb
stc
mov
stc
pushf
aaa
loop
lds
dec
sbb
dec
push
mov
jp
jge
lret
imul
and
jl
push
popa
mov
fnstcw
leave
insb
ror
addb
adc
push
mov
inc
inc
lret
dec
frstor
int
ljmp
sub
rcr
sarb
push
dec
rolb
pusha
divl
xchg
movl
hlt
and
mov
mov
dec
dec
lea
or
push
mov
jno
in
xor
movsb
and
push
fists
jmp
dec
or
mov
aaa
loop
mov
cmp
mov
clc
lcall
into
jbe
add
jl
mov
dec
mov
or
je
bound
lahf
arpl
lret
cwtl
fcmovu
repz
divl
dec
nop
shlb
sub
in
mov
cs
in
adc
stos
jg
insb
movsl
mov
fists
push
lret
outsb
popl
mov
sbb
xorl
xor
and
adc
pop
ds
lods
cmp
push
dec
xor
mov
fwait
jae
mov
mov
mov
dec
pop
add
out
inc
shl
fucom
popa
push
mov
adcl
mov
insb
ss
jae
aad
xlat
or
shr
pop
test
movsb
cmc
fbld
mov
or
push
and
cld
and
imulb
pop
inc
movsl
mov
mov
adc
mov
es
stc
test
in
dec
adc
fcmovu
jg
xor
dec
in
iret
ret
imul
scas
and
push
jge
lds
fnstsw
inc
mov
push
aaa
ja
out
mov
adc
sbb
and
stos
dec
les
int
sarb
push
inc
jp
jmp
shlb
testl
add
adc
sbb
repz
lcall
insl
and
mov
lea
or
leave
icebp
xor
clc
cmp
pop
mov
dec
mov
movsb
push
movsb
data16
out
jns
fxch
xlat
jno
cmc
push
mov
sub
sbbl
mov
pop
daa
jge
loop
xchg
mov
clc
pop
cmp
lds
push
jl
cmp
dec
jno
pop
lahf
in
jp
dec
sbb
insb
leave
ret
inc
jle
inc
mov
rcll
gs
stc
fsubl
add
push
xlat
adc
and
mov
mov
insb
roll
shlb
out
push
cmp
lahf
lods
shlb
hlt
ja
leave
mov
mov
inc
sbb
cwtl
pop
mov
popf
rcl
movl
cmc
in
cmp
jmp
fcomps
aam
mov
lret
mov
fstps
in
and
arpl
or
mov
mov
incb
sbb
jns
jp
out
lea
and
lods
sbb
rclb
jno
int
sbb
xchg
in
repnz
aam
inc
mov
sbb
fsubrl
call
rorb
fldenv
mov
push
in
arpl
fwait
insb
orl
sub
dec
in
mov
subb
mov
adc
hlt
dec
mov
mov
test
ret
bound
xlat
push
sbb
and
xor
mov
loop
lock
cs
dec
popa
push
daa
sbb
mov
push
scas
mov
sub
jmp
inc
cmc
adc
enter
xor
cld
repnz
in
fwait
and
jp
mov
and
mov
xchg
fwait
jns
imul
jb
cmp
cmc
adc
mov
call
jecxz
popf
lea
pop
dec
or
xlat
loope
popf
in
test
push
xchg
gs
xor
jbe
cmp
ds
cmpsb
call
jmp
outsl
aaa
enter
je
xchg
mov
movsb
mov
push
lea
xchg
mov
unpckhps
push
lea
sbb
hlt
or
jmp
dec
cmp
cmp
rorl
fistl
popf
mov
adc
jp
and
xor
push
mov
mov
daa
jno
mov
fdivs
jmp
pop
mov
xor
mov
adc
out
jle
andb
push
mov
push
dec
cmpb
inc
push
jnp
std
lea
jmp
notb
ljmp
lret
mov
sahf
in
testl
jns
adc
rorb
push
sbbb
dec
mov
jne
jno
test
orb
push
push
push
lahf
popa
mov
xchg
xor
mov
dec
orb
inc
in
fcoms
in
gs
dec
in
cmp
orb
xlat
in
nop
jbe
mov
or
dec
jae
aas
pop
in
andl
enter
les
lods
push
mov
jae
add
cmp
imul
lsl
jl
mov
mov
insb
lea
inc
fnsave
mov
aaa
mov
push
je
pop
adc
rorb
inc
rclb
xchg
adc
imul
faddl
mov
push
adc
push
mov
jae
adc
clc
mov
or
sti
mov
inc
mov
adc
aad
sbb
push
in
cwtl
bnd
xorb
mov
cmpl
lcall
adc
and
xor
stc
pop
adc
stc
sbb
outsl
cmpsl
dec
in
xor
and
test
arpl
inc
pop
repz
sbb
jp
fidivrs
fistps
lods
sbb
push
ja
cmp
leave
xchg
xor
dec
imul
cltd
sub
movsb
jae
sub
enter
pop
jae
popa
sbb
sahf
or
pop
inc
mov
cwtl
cmp
add
cltd
add
fldenv
sub
pop
cmp
jno
in
cmp
mov
mov
sbb
inc
ljmp
imulb
jb
jmp
pop
inc
pop
repz
aam
mov
insl
jmp
xchg
push
cmpsl
mov
sahf
rcl
imul
push
jo
out
xchg
push
xchg
mov
mov
pop
jo
fnstcw
lcall
xchg
push
je
xchg
imul
inc
neg
divb
sahf
cmp
adc
int3
pop
xor
inc
or
sbb
jge
and
popf
testb
dec
push
pop
outsb
repz
jns
int3
jno
test
sahf
loopne
sub
xor
push
mov
jne
test
pop
iret
fnsave
sub
and
cmp
mov
xchg
call
fdivrl
mov
dec
pushf
in
shl
xor
push
ror
xor
mov
dec
popa
cs
lret
jae
mov
sub
out
jne
sub
pop
in
loopne
adc
xor
inc
push
mov
pop
mov
jo
test
jg
shl
dec
nop
dec
mov
jb
sub
adc
inc
shl
pop
add
xor
clc
mov
mov
fsubp
mov
and
je
aaa
mov
lods
sahf
jo
and
push
aaa
jp
dec
stc
sub
sub
lcall
in
lret
sarl
lret
mov
js
cwtl
nop
dec
sti
xchg
sbb
push
lods
loop
shll
pop
pop
mov
stos
mov
sub
mov
mov
imul
jg
or
ja
jno
in
test
cwtl
mov
and
leave
popa
sub
cmp
and
in
mov
insl
and
sub
gs
lret
nop
sub
shr
es
mov
arpl
xchg
scas
pop
and
and
dec
push
sub
test
pop
adc
inc
sub
mov
or
sub
inc
xlat
sarb
inc
call
jmp
in
es
jb
mov
push
mov
jge
push
mov
jns
in
mov
pop
int
clc
js
jl
lea
iret
mov
fidivs
jno
enter
sub
sub
clc
or
dec
push
and
stos
adc
adc
cmp
and
push
leave
inc
mov
stos
xchg
movsl
sub
inc
xchg
jo
ja
orb
lods
sbb
std
fcomps
jbe
xchg
int3
stc
mov
outsl
cmp
in
out
adc
arpl
rcrl
sbb
xchg
mov
mov
xchg
sub
inc
adc
or
sbb
push
push
mov
lock
popa
xchg
dec
adc
mov
fisubs
add
scas
pop
mov
pop
movsl
add
clc
cli
daa
mov
out
ljmp
jne
add
mov
inc
xor
out
out
int
push
add
jb
mov
jno
mov
xchg
or
add
shl
jnp
jae
fildll
xlat
mov
es
leave
xchg
cs
in
lock
shll
daa
xorl
mov
repnz
mov
or
das
fisubrs
sbb
jo
mov
lea
lret
and
call
sub
lret
test
mov
mov
xchg
cmp
push
dec
in
dec
adcl
mov
ljmp
out
sub
incb
cmp
jecxz
xor
add
mov
inc
sbb
hlt
mov
adc
jae
aad
jbe
mov
dec
lods
jo
push
arpl
shrl
icebp
js
popf
jl
addr16
mov
push
jle
xchg
inc
cmpsl
dec
add
fisttpll
inc
or
cli
inc
jge
pop
rolb
ja
mov
adc
daa
and
aad
sub
sbb
xchg
aaa
mov
sbb
mov
cltd
leave
jae
ss
add
repnz
add
pop
cmpsb
ret
or
lods
inc
sbb
mov
lahf
push
mov
cmpsb
xor
sahf
jno
addb
sti
fistpl
mov
les
loopne
push
iret
das
cmp
aas
repz
mov
adc
flds
push
sbb
fisubl
movsl
mov
jo
lea
mov
loope
jae
ss
pusha
shll
imul
or
add
inc
pop
fstl
xor
sub
dec
sbb
scas
das
mov
push
lahf
jp
mov
push
movsb
into
dec
ss
mov
xor
mov
mov
dec
adc
fisubrl
inc
enter
in
add
nop
push
pop
enter
ret
nop
lock
mov
iret
bound
es
inc
mov
mov
fwait
cwtl
or
mov
fcoms
fxch
xor
fdivs
jo
fcmovu
leave
jge
jmp
dec
mov
mov
hlt
push
add
pop
xor
add
cvtpi2ps
imul
or
aaa
xchg
dec
mov
ljmp
and
fs
xor
and
and
out
sahf
aam
add
jbe
popf
mov
mov
mov
adc
mov
stos
lret
sub
jg
add
inc
fdivl
insb
ja
adc
add
orb
clc
jno
scas
in
test
xlat
xor
frstor
test
add
jo
and
push
mov
dec
pop
and
or
into
dec
push
nop
stos
int
cmp
loope
in
mov
decb
xor
push
data16
mov
test
fadds
pop
xor
mov
icebp
xor
add
ljmp
jne
and
sub
mov
pop
lea
mov
jge
xchg
ret
or
and
add
inc
inc
notl
loopne
push
lods
js
adc
cmp
pop
sarl
data16
ja
fidivrs
add
mov
daa
lea
aam
leave
loop
gs
mov
mov
sub
adc
mov
adc
push
test
cwtl
push
dec
mov
mov
loop
adc
dec
or
lods
loop
mov
sti
pop
xorl
pop
mov
icebp
push
aad
fbstp
lea
sbb
inc
sbb
adc
xor
iret
inc
loop
and
add
fisttps
and
flds
jb
jge
leave
rol
jae
ficomps
inc
pusha
mov
pop
sbb
mov
je
fsubs
cs
inc
sub
xchg
jl
int
inc
jns
push
inc
push
jecxz
stos
jbe
rorb
jae
xor
pushf
mov
fld
jg
or
fnstcw
jle
mov
adc
popf
cmp
push
mov
std
cmp
sti
frndint
mov
addb
and
push
in
mov
sbb
pop
sub
outsb
pop
lds
pop
add
inc
enter
ljmp
gs
mov
mov
shlb
mov
adc
imull
lea
into
imul
push
in
jno
ds
aad
jecxz
in
jmp
hlt
or
fstpl
adc
rolb
std
jp
jne
stos
push
jp
repnz
fcompl
and
cmp
scas
data16
mov
xlat
jne
mov
imul
les
pop
and
enter
je
cmpsl
or
or
dec
andb
arpl
int3
sub
inc
jge
ret
andl
dec
push
pop
dec
pop
adc
push
and
je
std
jns
mov
repnz
pop
aaa
lret
push
push
imul
enter
pop
insl
mov
xchg
rclb
rclb
ss
in
mov
add
mov
jne
nop
sbb
mov
mov
sub
cld
or
sbb
fdivl
in
push
sbb
mov
pop
cli
dec
scas
pop
lret
pop
push
push
xlat
or
insl
and
cmc
popa
xor
setg
mov
jnp
xor
test
daa
fld
loope
fmull
jecxz
and
out
sub
mov
inc
shl
cmpsb
in
les
jae
sbb
mov
push
push
dec
dec
popa
ljmp
test
sbb
outsl
iret
sarb
arpl
aad
mov
or
scas
daa
sub
mul
fisttpll
out
adc
aad
daa
nop
xchg
test
mov
ret
dec
mov
jb
stc
filds
push
pop
mov
arpl
xchg
sub
jae
mov
mov
mov
inc
iret
int3
and
rcrl
imul
je
in
sahf
jmp
jg
pop
ficomps
movsl
ret
mov
shlb
xchg
hlt
rorb
pop
and
jne
mov
mov
aam
lods
pusha
call
sbb
mov
into
mov
ljmp
xchg
lods
xchg
or
mov
out
mov
mov
mov
outsb
and
popa
pop
push
inc
scas
and
jb
fidivrl
shrb
sub
sub
js
inc
cmp
fadds
imul
jle
or
or
xchg
mov
add
pop
mov
divl
lock
ret
xchg
enter
std
daa
cmc
pop
mov
jo
mov
es
pop
pop
pop
inc
js
cmp
mov
mov
std
sbbl
outsb
sub
jge
cmpsb
shl
jecxz
mov
mov
mov
fildl
out
cli
int
fists
dec
int
push
icebp
sti
data16
rcrb
push
cwtl
gs
push
mov
mov
and
cs
inc
inc
and
pop
cmp
imul
enter
gs
sub
in
sarl
arpl
dec
jl
jo
xor
jg
fsts
lods
in
lea
leave
pop
fnstenv
test
mov
shrl
inc
popa
lea
push
lods
insl
mov
es
push
or
shll
pop
push
cltd
lcall
ljmp
fbld
jbe
ja
jp
in
mov
mov
mov
outsb
or
jo
jg
sub
xchg
inc
sub
dec
fdiv
lea
stos
idiv
orl
xchg
mov
pop
gs
pop
or
cltd
mov
lds
jnp
dec
fstl
or
mov
xor
lret
push
jae
jnp
xchg
rclb
data16
dec
fmull
mov
hlt
int3
push
lea
aad
in
mull
dec
mov
jl
lods
in
arpl
icebp
in
imul
inc
filds
jae
out
pop
lock
xchg
mov
dec
ja
ret
adc
xor
fiaddl
cli
out
adc
xor
outsl
sbb
jo
movsb
pop
fisttpl
jno
ret
outsl
push
cmc
aas
or
ss
push
adc
clc
pushl
push
push
or
cld
adc
inc
sbb
xor
pop
loopne
jno
add
fs
jge
sbb
in
inc
mov
jbe
jae
mov
adc
inc
push
test
bound
adc
fists
inc
mov
pop
popa
mov
das
jmp
stc
or
mov
fists
sahf
test
fnstenv
in
jbe
sub
pop
and
arpl
mov
aad
mov
dec
repnz
add
insl
loop
inc
mov
mov
cmp
es
rcll
les
push
insb
xchg
loop
and
cmp
xor
or
or
or
mov
in
push
bound
push
mov
adc
clc
in
sahf
sbb
ja
pop
lods
arpl
push
lea
fistl
cmp
jecxz
in
pop
jno
or
jle
pop
je
jmp
and
xchg
cwtl
jle
cmp
inc
mov
inc
jp
ja
fidivrs
out
xor
push
xor
sbb
cmc
test
hlt
lea
push
std
les
mov
push
jno
flds
into
sbb
jbe
lods
daa
sarl
loope
mov
lret
push
bound
scas
mov
add
mov
mov
cld
jl
sub
or
ja
mov
and
dec
insb
xor
adc
data16
mov
add
hlt
jbe
add
out
jbe
jno
mov
arpl
insl
mov
rorb
arpl
or
xchg
dec
bnd
sub
xor
sub
pop
pop
mov
ja
dec
sbb
add
or
pop
adc
rcrb
sub
cmp
lods
and
xor
fadds
mov
call
push
fistpl
das
outsl
mov
jae
inc
lods
dec
shll
mov
xchg
out
pop
in
leave
loop
jmp
cmc
mov
dec
hlt
ret
sbb
sbb
fs
mov
cmc
mov
pop
lock
mov
cmc
into
add
cmc
xlat
or
dec
fistpll
insl
lcall
leave
ficomps
push
into
in
lahf
mov
jo
fwait
jle
dec
outsl
popf
imul
xchg
test
pop
fcompl
rcll
fldl
loope
nopl
jmp
cmpsl
loopne
cmp
xchg
adc
adc
mov
rcll
les
hlt
jae
arpl
xor
mov
cmpsb
outsl
lea
xor
or
jb
cltd
fbld
mov
or
in
ret
mov
cmp
and
jmp
inc
xor
in
arpl
in
jbe
sbb
pop
lods
bound
pop
loopne
pop
aas
jp
pop
sti
rcr
jb
or
jg
pop
in
sbb
inc
and
lock
xor
into
mov
rorl
sub
pop
sarb
repnz
rorl
adc
mov
push
loope
cmp
repz
dec
mov
push
push
inc
lea
arpl
adc
add
jns
adc
adc
ds
jl
adc
nop
outsl
jae
fnstcw
sbb
insb
inc
ficoms
mov
cmp
inc
pop
int3
push
mov
inc
movsb
mov
leave
and
sub
push
mov
fs
mov
mov
jo
xchg
decl
ja
jne
sub
pop
incb
mov
int
out
shl
arpl
mov
jmp
mov
pop
inc
jecxz
adcb
jmp
nop
leave
mov
hlt
fcmovnb
mov
lock
and
sarb
jno
shll
lods
gs
inc
fnstenv
jnp
mov
insb
add
add
cmpsb
pop
sti
out
mov
push
pop
mov
jmp
fnstenv
inc
test
scas
cmpsl
sub
setns
and
stc
push
push
mov
sarl
mov
mov
adc
dec
lods
or
loop
dec
pop
adc
lcall
cltd
imul
jl
inc
and
sahf
xor
jmp
xor
pop
inc
push
repz
shr
enter
add
mov
cmc
pop
jle
imulb
clc
lahf
xchg
repnz
mov
sub
enter
sub
push
frstor
pop
lea
lds
in
jmp
clc
mov
mov
sub
or
mov
adc
imulb
bound
mov
not
ja
sbb
scas
mov
test
jns
adc
cli
sarl
inc
ret
in
fldenv
lea
or
cli
push
dec
lds
dec
adc
push
xchg
fcmovu
inc
popa
insl
jge
or
fdiv
rclb
adc
inc
dec
dec
pop
dec
stos
enter
jo
push
test
es
inc
int
out
push
jmp
int3
pop
or
sub
shll
push
add
push
lcall
dec
lea
and
jge
shl
jno
cmc
push
sub
lods
outsl
xor
mov
cltd
push
mov
popa
pop
mov
shrl
inc
lret
fsubrs
dec
jle
hlt
pop
sbb
mov
dec
ds
mov
sbb
lods
mov
inc
in
xchg
ja
sub
xchg
cli
adc
lret
and
dec
out
or
sub
psrlw
int
loop
xchg
leave
mov
adc
out
mov
mov
or
rorb
push
in
iret
cmpsl
adc
testb
roll
jno
roll
ja
lds
adc
cmpl
and
pop
inc
cwtl
adc
in
das
pusha
add
push
pop
int
add
mov
es
iret
mov
dec
dec
fs
rcrb
xchg
fldl
jae
sub
mov
push
repz
lret
loope
lock
xchg
pop
es
jl
decb
lods
sti
mov
lods
add
loope
xlat
dec
inc
sub
lea
xchg
in
mov
mov
xor
push
stc
and
lock
jb
jmp
mov
adc
sbb
xchg
lcall
adc
inc
or
sbb
in
int3
fwait
sbb
mov
lock
mov
mov
pop
movsl
xor
xchg
pop
inc
out
sub
stc
insl
hlt
cwtl
cmc
or
push
push
dec
cli
pop
fiaddl
sbb
or
nop
mov
ja
or
test
ret
adc
pop
bound
leave
sub
aad
push
es
jecxz
lea
xchg
jns
test
popf
mov
in
jp
aas
dec
dec
flds
dec
xor
lea
lea
mov
xor
sub
sti
mov
fisubrs
adc
jp
adc
movsb
and
add
sti
mov
sbb
sub
inc
insl
or
arpl
cmp
fstps
in
gs
pop
push
sub
lods
cmp
pop
lock
repnz
in
mov
aaa
cwtl
jns
test
and
out
test
and
sbb
xchg
add
and
and
pushf
xchg
inc
push
cmp
and
pop
lods
xchg
mov
xchg
adc
mov
add
push
mov
sub
in
or
dec
lds
pop
and
popa
lods
ret
sbb
in
mov
test
clc
add
mov
ret
call
daa
mov
jmp
shll
xor
jne
sub
mov
movsl
add
xor
and
cltd
or
inc
mov
pushf
dec
push
xchg
je
jno
dec
dec
pop
inc
scas
int3
out
jno
int3
imul
fstpl
pop
sub
dec
fcomps
insb
out
inc
xchg
pushf
push
lds
mov
add
xor
lock
popa
mov
push
dec
lods
jl
dec
aas
movsl
and
add
jnp
xchg
mov
mov
xlat
sarb
in
int3
pop
mov
bsr
jmp
call
xor
adc
std
mov
xchg
inc
or
dec
addl
inc
pop
hlt
shrb
push
fwait
xchg
ss
out
loop
bound
jp
jnp
icebp
or
or
insl
sarb
leave
sub
imul
fs
in
add
shll
mov
in
lods
or
pop
in
repnz
mov
adc
xor
cld
bound
aaa
or
call
push
mov
leave
xchg
cmp
xchg
aad
daa
cmp
mov
fcoms
in
pop
jae
adc
pop
lea
pop
inc
mov
fwait
into
stc
rcrl
popa
jle
loopne
dec
addr16
imul
mov
push
in
jmp
push
int
loope
or
sbb
fists
aas
out
push
xchg
push
movsl
insb
dec
dec
movsl
mov
jmp
ret
out
icebp
dec
xor
je
add
push
sti
mov
iret
mov
jne
arpl
hlt
mov
in
outsl
test
sbb
imul
out
jne
cmp
int
mov
adc
adc
add
mov
jp
scas
rorb
out
sbb
cmp
pop
leave
mov
in
or
sti
dec
push
negb
jg
lret
pop
jns
adc
inc
mov
mov
xor
loopne
and
jb
xor
aam
mov
push
fcomps
subb
out
stos
mov
adc
aad
sarl
xchg
fmul
push
or
div
repnz
mov
lcall
es
pop
les
inc
popa
push
and
lret
push
popf
jno
lds
fldenv
loope
mov
xchg
inc
rorb
inc
xor
mov
cwtl
pop
xor
in
fbld
sti
leave
pop
addr16
movsb
lahf
and
mov
scas
repnz
loop
loope
mov
ja
popa
adc
enter
fs
jb
adc
ss
mov
ret
sub
cmp
sub
mov
and
adc
movsl
mov
cmp
mov
test
ficomps
push
test
adc
in
xor
pop
fstp
sub
mov
insl
fistpll
hlt
les
jnp
into
in
es
jae
cwtl
and
insb
inc
lea
pop
in
jmp
mov
call
rolb
jbe
dec
gs
sub
sbb
out
loopne
mov
fwait
push
mov
loop
cmpsb
jno
fldlg2
cmp
dec
shl
rolb
decl
sub
mov
xchg
outsl
iret
fdivr
pop
push
push
lods
xchg
sub
jmp
test
push
arpl
sbb
push
sbb
inc
je
mov
lds
nop
sti
jge
or
adc
sub
adc
mov
sub
xchg
in
jne
or
lea
xchg
jae
mov
bound
dec
sub
xchg
stc
push
dec
and
mov
cs
mov
scas
stos
and
xchg
inc
ret
dec
push
pop
and
es
loope
adc
sub
pusha
push
mov
sbb
or
in
test
dec
je
lret
les
insl
mov
push
mov
hlt
mov
pop
rcrb
pop
jbe
dec
inc
jnp
shll
push
in
sahf
in
data16
pop
mov
and
or
pop
inc
mov
add
cmpsb
pop
sub
jecxz
repnz
push
adc
mov
jae
adc
loopne
mov
lea
lds
dec
sub
imull
or
ljmp
add
cli
dec
cwtl
cmpsb
es
sbb
jle
roll
insb
mov
pop
fwait
fwait
inc
movsb
out
jg
xor
scas
mov
cmp
cmpsl
sahf
fcompl
xor
pop
test
lds
mov
mov
dec
pop
test
mov
lock
bnd
enter
loop
ljmp
jb
cmp
insl
out
jno
out
dec
mov
jne
push
jl
shl
pop
inc
push
lret
in
cmpl
addr16
adc
push
sbb
in
insb
jo
lock
xor
cmp
or
cmp
in
mov
sahf
mov
push
shr
insl
push
dec
das
jne
push
xor
arpl
xchg
or
nop
jne
push
xor
inc
outsl
movsb
xor
adcb
aam
iret
add
jno
jne
popf
lret
jecxz
push
or
jne
cmpsl
fisttpl
mov
push
mov
clc
inc
sahf
mov
loope
test
cmpb
pop
sub
xor
lds
mov
cmp
mov
xlat
stc
and
pop
std
mov
or
cli
stc
fwait
test
or
fnsave
dec
sub
add
loopne
popa
cmp
in
lret
jo
cmpsl
mov
aad
pop
jecxz
push
lock
mov
sub
adc
jno
insl
xchg
and
sti
add
jp
and
mov
sub
xor
push
push
lret
xchg
test
jmp
test
sub
into
mov
jmp
in
inc
and
fbld
addr16
je
movsl
xor
imul
pop
xchg
pushf
cwtl
bound
test
shlb
add
add
push
pushf
dec
int3
dec
orl
jnp
test
jne
or
mov
jae
mov
cmp
mov
scas
and
mov
inc
mov
pop
jle
stc
clc
pop
and
push
cs
inc
cltd
pushf
loopne
push
fiadds
shll
mov
cmp
xlat
iret
pop
push
mov
sbb
lret
js
mov
push
das
adc
loop
push
or
jl
je
jmp
out
adc
mov
mov
sbb
push
mov
in
and
out
loop
inc
and
add
je
mov
jae
inc
pop
xchg
in
call
mov
cs
pop
dec
push
jg
test
cli
das
aad
xor
mov
out
dec
sub
movsl
jmp
xor
mov
mov
aaa
lret
inc
pop
and
fistps
mov
lock
in
test
aad
mov
push
mov
mov
daa
add
in
cld
xchg
sarl
inc
push
dec
scas
or
outsb
shlb
inc
stc
insb
push
inc
add
pushf
imul
jb
sbb
fcomps
inc
cmp
jnp
daa
mov
aas
outsl
push
outsb
js
fiaddl
pop
rcrb
push
ja
cmp
fldenv
mov
jecxz
mov
jecxz
push
lea
sbb
push
jg
inc
scas
je
loopne
mov
test
les
fistps
and
inc
push
ja
mov
ljmp
jg
popa
dec
mov
lahf
repz
jp
fdivrl
and
fists
mov
fstl
out
aad
mov
lcall
mov
dec
mov
xor
jmp
and
loop
pop
pop
push
inc
mov
pop
in
test
mov
xchg
mov
stc
mov
xor
cmp
push
enter
loop
add
mov
add
bnd
stc
xchg
xchg
xor
and
xchg
lret
loop
sub
or
dec
les
inc
in
mov
fstps
ja
lret
out
out
dec
pop
mov
ret
sub
lea
and
sbb
mov
leave
xlat
icebp
inc
int
jns
mov
cmp
lret
flds
popa
insl
and
daa
adc
lea
js
ljmp
jb
fisttps
xor
and
in
mov
mov
in
arpl
adc
sbb
js
push
inc
mov
mov
jmp
xor
frstor
cmp
fsubs
mov
shll
sti
sbb
cld
inc
xor
lds
in
pop
test
fs
xor
fdivl
incl
mov
fs
xor
and
dec
jbe
test
mov
ret
lret
mov
stos
out
aad
jge
repnz
shl
cmp
es
dec
sarb
data16
or
pop
add
and
ljmp
and
int3
sbb
mov
jns
adc
inc
cmpsb
dec
ret
push
loop
out
adc
pop
xchg
ja
mov
and
sbb
imul
xor
or
lea
ret
mov
in
std
das
mov
and
ret
mov
es
lea
xchg
fidivrl
in
adc
sub
cwtl
add
cmp
pop
mov
pushf
mov
icebp
sub
aam
inc
rcrb
pop
gs
aad
popf
mov
xchg
xor
fiadds
xchg
inc
das
outsb
and
jg
jmp
sbb
mov
or
hlt
sar
cltd
sbb
mov
xchg
mov
int3
push
data16
dec
mov
push
cmp
repnz
cmp
in
lock
mov
cli
push
xor
nop
xchg
pop
push
int
sbb
shlb
add
push
inc
jp
jg
or
xor
and
in
dec
sahf
xchg
xchg
xorb
adcb
adc
cmp
lahf
push
adc
test
mov
cld
rorb
arpl
xchg
jmp
movsb
pushl
or
sbb
mov
or
mov
add
cmpsl
pusha
loope
add
popf
cmpl
mov
shlb
in
lea
adc
sti
mov
jge
bound
movsl
cmpsb
imul
mov
jl
cmp
loopne
push
jp
dec
pushf
call
pop
mov
mov
iret
push
mov
cmp
ret
movsb
mov
cmp
pop
xchg
push
mov
addr16
std
xlat
es
xor
xor
push
mov
pop
outsb
les
cmp
btr
out
insb
push
in
push
jne
ret
push
out
or
mov
adc
inc
jg
xor
mov
fisubs
mov
and
aas
jecxz
das
xchg
ljmp
rorl
jecxz
jne
std
inc
pop
mov
in
sub
pop
and
mov
mov
push
dec
mov
cmp
loopne
sbb
filds
and
pop
lcall
fsubl
outsl
mov
xor
lea
subl
or
repnz
jp
filds
pop
xchg
addr16
cmp
push
or
fstpl
movsl
xor
and
mov
scas
sbb
jno
ficompl
push
pop
push
mov
push
sub
arpl
and
pop
in
inc
xchg
sbb
in
pop
jg
mov
gs
call
fadds
pop
pop
clc
adc
jae
out
notl
les
std
dec
push
insl
inc
mov
sbb
add
mov
xchg
test
lea
imul
sbb
cmpsb
sub
orb
adc
jmp
loope
ret
jbe
and
mov
mov
and
out
iret
push
sub
icebp
or
int3
mov
cmp
sub
imul
xchg
mov
sub
and
arpl
lret
ret
lret
or
dec
addb
jbe
dec
lods
cld
jmp
mov
rolb
arpl
aad
mov
pop
xchg
jno
mov
fnstenv
pop
hlt
dec
stc
lods
shl
sbb
jne
or
ja
mov
xor
xchg
sub
aam
mov
adc
jmp
push
push
mov
dec
mov
lds
addr16
and
dec
xor
enter
adc
fistpll
or
mov
and
in
cmpsb
cmpl
xchg
icebp
in
mov
pop
jbe
mov
int3
or
mov
xchg
mov
inc
sbb
pop
pop
mov
mov
fimull
cmpb
out
dec
push
cmpsb
shl
fdivl
popa
icebp
test
sub
cmp
daa
sub
xor
mov
fidivrs
push
je
ret
sbb
in
js
hlt
pop
mov
inc
ret
lods
mov
dec
js
dec
imul
hlt
mov
and
add
cmp
push
mov
test
or
inc
je
push
inc
pop
sub
mov
das
fdiv
xchg
push
pop
loopne
jmp
adc
fcompl
cltd
shlb
adc
lahf
mov
adc
cmp
idivl
cmp
bound
jle
in
gs
loope
in
gs
pop
mov
mov
ljmp
add
dec
loope
adc
ror
imul
je
dec
rorb
lea
int3
es
stos
sub
lea
lock
inc
inc
mov
mov
mov
xchg
out
mov
dec
mov
jnp
popf
mov
pop
jae
push
pop
xchg
add
in
or
mov
pop
out
mov
xchg
and
sub
push
add
lods
outsl
xchg
shr
mov
mov
push
jmp
inc
push
sbb
cmp
fcomip
or
mov
inc
nop
sub
sbb
outsb
js
sbb
loop
jbe
sbb
call
jp
and
or
push
int3
shl
adc
aad
sbb
pop
pop
fidivs
or
jp
test
push
js
cmpsb
outsb
inc
and
pop
dec
and
dec
adc
jne
insl
sub
inc
in
sub
iret
icebp
jno
mov
jp
stc
pop
inc
lea
and
jnp
mov
sub
and
push
jle
mov
stos
and
sbb
cltd
enter
push
cli
or
fcompl
clc
repnz
inc
in
mov
cld
stos
xchg
fcomps
push
shrb
shlb
sarl
insl
or
out
xchg
int3
pop
mov
adc
and
insl
rcr
inc
or
shrb
icebp
repnz
mov
jae
jmp
jp
and
xor
inc
or
mov
lea
loopne
stos
aam
mov
icebp
std
shrb
pop
jle
test
mov
das
and
adc
popf
sub
in
daa
jle
push
icebp
push
mov
fists
loopne
je
testb
adc
sahf
bound
in
mov
pop
cmp
push
les
mov
cmp
pop
in
xor
jb
out
popf
and
ss
in
cmp
add
daa
js
fistpll
loope
jl
mov
pop
pusha
lea
sub
clc
mov
lea
push
and
xor
mov
fisttpl
cmp
dec
rclb
mov
jns
pop
ret
jnp
mov
lea
mov
xchg
mov
rorb
repnz
and
movsb
mov
mov
or
pushf
pop
pop
fcoml
cli
insl
push
sbb
in
cmpsb
outsl
scas
loope
mov
pop
repz
sbb
mov
mov
into
fcmovnu
mov
pop
adc
xor
xor
in
mov
jns
insb
mov
cmpsl
xchg
inc
jl
jne
mov
mov
inc
roll
sar
repnz
mov
test
jne
icebp
inc
lcall
call
cmpb
repz
fidivrs
movb
negb
lea
into
or
push
out
test
inc
cs
and
lea
cmpl
repz
pop
bound
sub
pusha
stc
xchg
push
pop
fdivp
push
fildl
out
mov
imulb
pop
loop
call
das
in
mov
push
and
aad
mov
ss
mov
or
push
mov
cmpsl
pop
lea
mov
out
js
pop
pop
sbb
jnp
xchg
mov
into
fisubl
int
ja
outsb
xorb
sub
int
sar
push
fsts
daa
jne
lods
and
pop
sub
push
and
cld
aas
insl
call
lods
test
call
dec
daa
mov
stos
fdivs
jb
je
iret
js
mov
sahf
or
push
movsl
in
test
jae
sbb
pop
arpl
cmc
xchg
hlt
and
jno
outsl
or
and
inc
std
sub
sub
or
loope
dec
sub
out
push
pop
shlb
gs
cmp
jns
cmpl
sarl
or
je
sbbb
idiv
out
adc
lahf
imul
push
adc
loop
pop
in
rolb
insl
xchg
mov
mov
xchg
arpl
lcall
sbb
bound
imul
mov
les
adc
arpl
pop
sbb
repnz
in
std
dec
arpl
addr16
cld
inc
push
inc
lods
jae
js
jo
mov
jmp
jg
inc
scas
or
dec
push
jno
mov
enter
pusha
arpl
mov
je
jns
loope
in
adc
mov
mov
sub
stos
imulb
push
shrl
cld
xchg
pop
dec
pop
mov
xchg
sub
sbb
sub
add
push
fs
push
and
jns
popa
mov
out
xchg
testb
shrb
pop
cltd
mov
pop
xor
movsl
pop
push
or
jmp
in
mov
jb
loope
fldenv
ljmp
repnz
aam
cld
xor
inc
fisttpll
and
orl
sbb
mov
gs
int
dec
and
sbb
cltd
xor
mov
inc
mov
mov
lea
add
push
cmp
xchg
fadds
and
pop
fnstcw
jecxz
and
fdivs
mov
xchg
das
pop
loope
mov
popa
jae
jmp
push
xchg
fdivs
jae
lods
mov
xchg
lods
inc
cmp
adc
cmp
shrl
dec
nop
or
add
imul
lods
xor
jmp
push
ffreep
movsl
mov
xchg
xchg
dec
in
sub
cmpsb
lea
dec
push
bnd
in
pop
cmp
inc
ret
jmp
mov
and
mov
repz
xor
and
stos
lds
lea
inc
add
mov
sbb
fdivrs
rcrb
ss
bound
mov
call
inc
sbbl
fisubrs
insb
ja
xchg
scas
mov
dec
jae
jne
fiaddl
lea
bound
dec
in
mov
dec
jg
stos
pop
mov
and
mov
pop
lock
mov
nop
out
cmp
mov
adc
mov
pop
rorl
loopne
addr16
movsl
push
leave
ja
or
imull
jo
lock
lods
mov
in
push
aad
sbb
sub
lea
and
adc
mov
push
clc
mov
cld
lods
jne
stc
test
inc
sbb
int3
inc
bound
push
mov
pop
pushf
inc
movsl
cmpsl
mov
pop
loope
jbe
pop
bound
prefetch
jp
jo
adc
jmp
loop
in
push
xchg
jmp
mov
mov
dec
test
mov
jnp
mov
loop
cwtl
icebp
mov
pop
pop
xchg
inc
lock
and
pusha
clc
lret
scas
and
xchg
out
adc
mov
call
dec
loope
mov
push
fdivl
mov
inc
popa
pusha
add
jle
add
lea
rclb
lods
pop
repz
dec
lret
in
mov
mov
xor
mov
xlat
sub
or
fiadds
insb
je
scas
inc
dec
jae
sbb
and
daa
lret
bound
jmp
and
xchg
xor
loop
scas
pop
xchg
or
stos
push
nop
cmpsl
lods
xor
mov
js
movsl
sub
jns
rol
movsl
jmp
push
cmp
pop
aam
mov
iret
sbb
in
outsb
test
rclb
mov
jnp
cli
je
lea
sahf
jns
xchg
daa
aam
dec
jmp
xchg
lahf
popf
push
lea
in
mov
movsb
adc
enter
dec
jmp
xchg
sub
test
inc
and
push
out
enter
ljmp
sub
movsb
mull
push
fnstcw
lcall
jl
mov
repnz
push
jno
cmp
div
jmp
sarb
sub
xchg
xchg
mov
js
jno
nop
jo
incb
stc
add
push
testl
lret
imul
inc
adc
dec
lods
jo
xchg
or
or
inc
jg
push
jns
cmpsl
test
call
sub
shl
xchg
loop
mov
pop
movsl
mov
adc
int
dec
sub
cmpsl
jmp
int
hlt
or
lret
pop
incl
push
lret
or
mov
scas
mov
add
mov
js
inc
or
and
xor
xor
push
cmp
inc
mov
push
ljmp
jae
movsb
xlat
daa
rol
xorb
pop
fcoml
int
and
cmp
sbb
repz
push
gs
iret
test
scas
insb
cmp
rclb
mov
cmp
ret
in
loopne
mov
test
mov
aad
mov
dec
and
xor
and
mov
ds
xor
add
mov
pop
and
pop
movsl
cmp
fld
dec
outsl
cmc
push
repnz
fstps
fs
xchg
push
jl
pop
ja
outsl
inc
adc
jo
push
xchg
xchg
nop
jmp
lds
dec
lods
ja
xor
xchg
in
lea
punpckldq
mov
cmp
jnp
and
push
mov
mov
push
in
scas
xor
xchg
cmp
cs
scas
mov
in
test
imul
dec
inc
or
push
cmc
ljmp
xorb
mov
js
jg
adc
ret
ret
jmp
jno
loope
jge
arpl
rorl
dec
stc
call
loope
jp
iret
mov
xchg
dec
pushf
je
out
ror
push
jle
les
xor
fwait
jmp
jge
notl
cmp
sub
dec
adcl
pop
jns
mov
inc
xor
mov
xchg
insb
out
in
mov
mov
outsb
or
xor
aad
jmp
enter
jg
js
stos
push
js
mov
fcoml
and
call
inc
ja
jbe
ficoml
gs
mov
mov
mov
scas
mov
sub
mov
in
sub
cmp
testb
mov
mov
push
dec
ja
divb
mov
mov
mov
push
sub
jmp
gs
xor
mov
fstps
or
xor
inc
mov
xor
out
cmpsl
jb
pop
pop
inc
mov
sub
fiaddl
dec
test
xor
adc
adc
xchg
rcrb
push
push
aam
insl
dec
icebp
adc
fdivs
dec
es
ficompl
lds
pop
outsl
sti
dec
or
mov
addl
sti
sub
fsubrl
mov
rcrb
stos
movsl
and
mov
popf
iret
inc
mov
shlb
mov
jno
mov
jno
inc
pop
sbb
psllw
mov
sub
and
inc
loop
repnz
sub
and
mov
adc
mov
aas
or
mov
imul
pop
lea
rcrb
stos
and
sbb
sbb
sarb
xchg
xchg
and
xchg
mov
arpl
jecxz
mov
inc
dec
xor
arpl
sbb
into
sub
sub
imul
and
jne
popa
rol
push
jno
mov
mov
fstpl
stos
cmp
testl
scas
pop
fdivr
out
or
and
xchg
mov
sub
mov
add
jb
cmp
and
clc
and
inc
pop
cwtl
and
jbe
pop
arpl
loop
mov
push
jecxz
andl
inc
mov
add
pop
jo
es
jge
out
cmp
push
cmpsb
push
fcomps
shl
repz
jge
inc
int
mov
hlt
in
pop
shrl
xlat
leave
out
fsubp
pop
rcrl
inc
sbb
sub
adcb
xchg
dec
sub
cltd
cmp
inc
jle
sub
lock
jg
imul
aad
hlt
test
jg
movsl
xchg
or
inc
bound
faddl
mov
filds
jbe
or
xchg
stc
xchg
shrb
shr
mov
and
fcompl
sbb
and
negb
cmp
and
dec
cmc
jo
ja
sbb
rolb
dec
dec
repnz
jg
mov
mov
into
mov
push
mov
mov
insb
fcom
or
pop
and
sti
rcr
faddl
leave
imul
daa
leave
pop
mov
or
jne
or
mov
cmp
dec
lcall
jne
and
fidivs
and
push
pop
ss
mov
rol
push
stc
push
aas
or
mov
xor
pop
push
out
ja
push
pop
and
cwtl
jecxz
fisttpl
fnstenv
mov
orl
pop
push
in
jp
outsb
and
cli
rcl
xchg
inc
cmp
dec
imul
mov
sbb
hlt
repz
lahf
add
cmp
xchg
test
and
addl
int
fcoms
dec
test
insl
out
repnz
and
jns
loopne
dec
jle
and
arpl
mov
fisttpl
xchg
rcll
push
int
sbb
cmp
push
insb
in
xchg
nop
jge
add
and
and
das
icebp
rol
insb
movsb
call
xor
jp
jnp
jo
mov
std
imul
pop
mov
mov
jo
pop
adc
pushf
daa
mov
and
jl
cmpsl
cmc
or
mov
outsb
xchg
and
adc
jno
test
je
and
ret
mov
xor
jecxz
inc
outsb
or
sahf
sub
add
or
fwait
hlt
xchg
pusha
mov
push
push
mov
int
cmpsb
lea
decb
xor
adc
outsl
pop
lods
inc
inc
adc
add
xor
je
movsl
cmp
cmpsl
sub
decb
cmp
jp
aas
and
mov
lea
fnstenv
outsb
mov
jg
and
push
push
xorl
push
nop
adc
inc
aas
ds
and
ja
sub
jae
sub
lods
bound
xor
sbb
rcl
les
cmpsl
fucomip
inc
mov
lea
aad
mov
mov
mov
pushf
popa
or
add
in
negb
ljmp
push
sub
adc
scas
jne
mov
cmp
xor
or
mov
pop
incl
dec
in
roll
les
insl
jp
adc
mov
cmp
orb
lahf
xchg
add
xchg
gs
sbb
and
xor
sbb
mov
jecxz
add
outsl
sbb
lea
fs
mov
sarl
sub
int
jo
mov
call
add
xchg
mov
cmpsl
push
stos
cmc
test
add
popf
imul
xor
in
outsb
sahf
jnp
jo
pushf
ret
or
jge
pop
in
push
mov
mov
cmp
sub
adc
mov
lcall
xor
push
xor
mov
sub
daa
mov
in
jns
adc
mov
mov
ret
lock
and
test
xor
add
cmp
iret
fisubl
cmpsb
jecxz
add
mov
jne
bound
cmc
sub
push
push
push
daa
adc
repz
lahf
out
in
inc
lods
mov
mov
loop
insl
sub
jecxz
pop
fdivs
push
add
mov
dec
adc
push
adc
mov
movsl
andb
push
mov
push
sar
mov
insl
mov
out
sahf
flds
pop
pop
je
bnd
fwait
inc
xor
loop
outsb
mov
arpl
je
xor
cltd
scas
mov
insb
cmp
movsl
dec
push
adc
in
mov
addb
ss
cmp
jl
jae
jne
sahf
sub
adc
jno
cmpsb
or
fnsave
pop
lea
pushf
aas
cmp
jle
stc
lret
sub
jg
and
jecxz
cmp
sbb
or
mov
adc
jl
leave
in
jae
fildll
mov
jmp
dec
int3
test
js
bound
inc
xor
icebp
dec
andl
gs
adc
imul
or
inc
sbb
lea
and
rclb
jae
sbb
mov
dec
lea
xor
lea
in
movsl
push
lcall
dec
fidivl
lods
add
mov
dec
jns
nop
shlb
mov
and
mov
mov
or
or
in
jl
jo
pop
push
mov
movsb
in
scas
lea
or
pop
mov
std
gs
adc
cmpsb
lock
jle
dec
xor
pushf
push
outsb
ret
hlt
pop
xchg
jg
dec
icebp
mov
repz
andb
add
jno
test
sbb
pop
sbb
in
or
and
fdivp
xlat
iret
gs
mov
test
nop
sbb
mov
scas
mov
popa
test
lea
add
sbb
nop
rcrl
insl
leave
pop
dec
imul
push
aaa
bound
sub
or
in
fidivs
and
movsl
xchg
mov
xchg
xor
lea
sub
xor
jp
int3
fsubrs
das
mov
adc
arpl
sti
ljmp
rcrb
psrlw
test
rorl
push
or
mov
mov
sahf
lahf
jp
in
xor
insb
or
iret
mov
mov
dec
adc
jmp
adc
add
cmp
jecxz
add
sbb
addb
arpl
xlat
mov
cwtl
bound
inc
jnp
mov
pop
ja
add
mov
jae
adc
cltd
push
push
pop
add
jle
xor
xchg
frstor
push
ja
lret
pop
sahf
sub
inc
xor
sti
lea
xor
mov
divl
mov
in
callw
and
dec
sbb
cmpsl
push
dec
cltd
dec
fdivrs
lock
mov
cmp
ljmp
lods
sbb
jns
mov
cmpsl
mov
scas
mov
arpl
adc
mov
icebp
add
in
push
lods
gs
popf
fs
in
ficomps
rol
jl
xor
or
imul
movsl
inc
xchg
adc
jmp
daa
and
mov
dec
push
xor
and
push
mov
fisttpll
cltd
test
mov
in
push
insl
pop
lea
aad
test
xchg
imul
push
mov
mov
leave
lock
mov
dec
xor
loope
dec
xchg
lea
bound
push
inc
lret
jl
dec
rolb
inc
bound
data16
jmp
jg
xchg
mov
test
pop
je
push
inc
push
mov
dec
pop
xor
test
sub
insb
jbe
sub
rcrl
rolb
add
mov
in
xor
imul
call
jg
pop
and
xor
mov
cmc
mov
scas
mov
sub
lahf
mov
pop
mov
mov
push
sbb
jae
mov
push
jge
stos
sbb
hlt
in
popa
or
je
mov
push
cmp
cli
cmp
add
dec
fsubrs
pushf
pop
cli
mov
lods
lea
ret
in
insl
stc
xor
cli
repnz
int
jns
xor
push
lods
cmp
jg
xor
movsl
mov
mov
pop
lock
test
cmp
push
loop
and
int
sub
push
pop
mov
adc
inc
testl
fsubs
push
push
xchg
jno
es
push
ret
adc
dec
mov
out
inc
jns
lcall
leave
xor
push
push
imul
push
push
add
leave
sti
sahf
sahf
xlat
jbe
lea
add
iret
hlt
dec
and
repnz
jbe
and
push
sbb
fmuls
btl
xor
je,pt
xchg
and
mov
jo
pop
mov
jp
jnp
aad
jo
jl
lods
in
jb
or
dec
in
push
jge
xor
jg
adc
sub
xor
dec
arpl
cmpsl
sarb
xor
mov
test
and
in
rcrl
lock
mov
pop
ud1
pushf
shrl
into
sub
lea
aaa
xor
add
jb
xchg
ret
push
mov
clc
jb
and
ret
aad
lcall
inc
mov
sub
add
push
shlb
addr16
or
jns
jo
add
cmp
data16
push
add
push
fwait
and
dec
pop
sub
mov
mov
xor
sub
ljmp
mov
cmpsl
push
ret
dec
gs
dec
pop
test
sub
mov
adc
sahf
inc
mov
xchg
mov
mov
gs
xchg
cmp
or
and
dec
jmp
xchg
adc
dec
mov
aad
icebp
aad
iret
pop
or
leave
cmp
inc
sub
imul
sarl
jmp
jecxz
push
jb
sub
addr16
cmpsb
out
xchg
mov
jmp
and
dec
insb
jl
push
jns
xor
arpl
jmp
jbe
cmpsb
xor
rolb
xor
and
imul
push
mov
jl
stos
jmp
shll
and
mov
fsub
mov
jo
mov
ret
int
test
pop
mov
daa
sbb
dec
inc
push
cmp
jmp
and
gs
gs
mov
or
icebp
push
dec
ljmp
jo,pt
jbe
inc
cmc
mov
dec
lea
inc
loopne
pusha
inc
lods
mov
mov
movsb
push
lock
jbe
jns
gs
clc
arpl
sub
mov
jge
xchg
or
dec
pushl
or
adc
sbb
push
push
cld
mov
gs
imul
jne
les
jge
push
xor
lahf
mov
mov
lea
xor
in
xchg
cmp
cmpsb
daa
and
add
adc
or
lds
add
adc
jno
fwait
pop
and
dec
in
lea
sarb
xchg
aam
rclb
daa
pop
jmp
in
and
jg
adc
ret
cmp
and
dec
mov
iret
mov
pop
fsubrl
ss
xchg
das
sbb
enter
insb
gs
sub
add
aas
inc
fstpl
out
testb
jmp
es
in
mov
insb
jg
push
add
and
push
shll
cmp
out
fstp
sti
in
inc
jecxz
nop
mov
push
addl
mov
ja
mov
and
subb
rolb
push
fs
xor
inc
ret
sub
push
aad
dec
out
and
cmp
mov
jbe
popf
lea
lahf
ret
ljmp
ja
cmpsl
pop
in
sub
push
jno
idivb
in
data16
rcrb
jno
xorl
sub
repnz
inc
pop
dec
inc
cmp
out
lods
shl
lods
jmp
xchg
in
sti
mov
lret
push
fbld
sahf
in
adc
mov
je
test
rcl
fdiv
scas
xor
imulb
mov
fsubrl
fwait
xlat
adc
and
popa
daa
add
mov
sbb
sbb
jnp
pop
fcoms
clc
xor
or
sahf
xchg
in
push
rcrb
pop
adc
and
push
fidivl
push
jbe
ret
xchg
push
push
popa
fiadds
jns
add
andl
stos
or
fdiv
xor
fldenv
fcomps
dec
lret
adc
mov
and
stos
test
cmpsb
or
mov
sbb
jns
cmp
push
xchg
sbb
dec
es
hlt
lods
mov
clc
lret
xor
jns
push
jmp
push
icebp
ljmp
andb
mov
insl
lods
jp
pushf
popf
push
and
xor
pusha
mov
int
inc
fwait
sub
dec
out
xor
ja
loop
arpl
mov
jge
jp
sti
in
xchg
push
scas
sub
cld
pop
shll
insb
pop
mov
lahf
gs
in
sub
sbb
es
or
les
out
add
mov
pop
testl
out
int3
sbbl
icebp
in
test
mov
arpl
sub
out
ficomps
push
xchg
push
in
mov
int3
cmpsl
testl
add
xchg
xor
inc
rclb
scas
nop
mov
adc
movsb
push
push
mov
dec
cmp
lds
sbb
pop
outsl
mov
dec
cltd
xchg
dec
sti
push
jg
jae
pop
lea
js
lds
fsubr
xchg
pop
icebp
jae
dec
or
xchg
out
pushf
jmp
add
push
inc
rolb
adc
sahf
add
jbe
adc
mov
inc
dec
mov
jne
mov
add
xor
inc
in
and
or
testl
sub
shll
adc
rcrb
movsb
dec
bound
sub
and
ficoml
inc
jae
and
or
mov
mov
sub
inc
loop
sub
sub
xor
inc
repz
in
or
lock
add
arpl
lret
mov
fisubrs
loop
imul
ss
sbb
movsb
in
js
mov
cli
ja
mov
in
jae
dec
test
mov
jecxz
mov
aas
push
fs
add
gs
fwait
sbb
lds
ja
jecxz
inc
inc
shll
push
adc
inc
and
cli
sarb
lea
adc
stos
jg
mov
sbb
push
push
pushf
jge
fsubr
xor
sbb
jecxz
or
cli
outsl
fcoms
mov
lcall
and
in
add
sti
mov
fadd
and
mov
add
adc
in
call
pop
xor
testl
and
jg
adcl
loope
popa
insl
inc
sub
loope
loopne
bound
jns
in
and
dec
nop
xor
adc
roll
xor
imull
jb
mov
outsb
adc
jg
testl
into
hlt
fisttps
pop
push
xorl
imul
jg
pop
pop
jnp
and
inc
sub
ljmp
outsl
lods
aaa
adc
jno
in
push
cmp
xor
sub
cmc
jns
push
dec
sti
jecxz
call
jno
and
in
xlat
mov
mov
icebp
vunpckhps
mov
in
fistl
pop
flds
sbbb
arpl
in
popa
or
sarl
pop
push
sub
mov
sbb
lret
inc
or
cmp
scas
dec
jg
xchg
out
xor
dec
jle
pop
add
jno
or
jg
cmc
in
fidivs
cltd
mov
fists
mov
je
or
mov
sbbb
push
movsl
enter
mov
pop
push
leave
sub
mov
cmp
dec
jnp
adc
mov
dec
dec
sbb
mov
out
push
mov
and
fisttps
ret
cmp
and
scas
mov
and
lea
insb
cmp
and
mov
or
add
gs
rclb
das
bound
mov
mov
or
mov
pop
cli
hlt
ja
loopne
bound
movsb
mov
push
test
scas
in
jp
shrb
inc
jns
cmpsl
dec
ret
jnp
leave
mov
sbb
arpl
out
mov
gs
and
cmp
icebp
icebp
lea
sahf
dec
lret
sub
ja
xor
inc
jo
fimull
and
adc
pop
mov
mov
arpl
repnz
sbb
mov
mov
jmp
pop
jmp
adc
jno
jle
mov
mov
dec
aaa
pop
andb
int
mov
in
inc
testb
es
cli
data16
or
xorb
sbb
adc
leave
sub
xor
add
pop
push
je
in
push
fbstp
push
mov
jnp
push
xor
inc
sbb
gs
sarl
sub
push
ss
aam
sbb
or
hlt
dec
jmp
sub
in
lea
mov
imul
mov
sbb
add
ret
push
call
and
inc
cmpsl
repnz
aas
std
sbb
add
pop
gs
imull
aas
push
mov
cwtl
adc
mov
pushf
push
call
jcxz
cmpsb
mov
cli
movsb
fisubrl
dec
out
scas
outsb
aas
lea
insb
test
jmp
cwtl
jl
dec
incl
cli
int
bound
arpl
dec
and
gs
into
mov
dec
sbb
inc
imul
xor
lods
dec
push
dec
fisubrs
mov
subl
xor
in
loop
and
jle
stos
aad
mov
cmp
bound
xor
xchg
xchg
pop
adc
sub
cwtl
sub
lds
adc
hlt
cltd
xor
push
repnz
sbb
shl
testl
add
xchg
lea
int3
sub
or
push
and
ljmp
iret
xchg
push
jae
mul
push
leave
mov
add
insb
in
and
cmpsl
lds
sub
cmpsb
gs
xchg
lea
push
xor
push
cmc
mov
inc
push
mov
movsl
push
add
mov
das
je
sub
insb
xor
sub
js
pop
sub
das
xchg
out
dec
loope
mov
jo
mov
aas
ficoms
arpl
cmp
jo
push
ja
fcomip
out
jnp
aad
ss
mov
pop
mov
dec
or
pop
add
jnp,pt
mov
loop
aaa
mov
cmp
sarb
lea
xchg
adc
in
jl
movsl
daa
jns
es
ljmp
jg
popa
bswap
and
test
outsb
adc
xor
xchg
sub
out
adc
cwtl
mov
xchg
out
or
and
xor
insb
jle
lahf
in
xor
jb
in
or
dec
iret
xor
mov
gs
ja
fisubrs
fnstsw
mov
arpl
pop
cmp
movsb
repnz
mov
push
push
test
sbb
pop
sub
mov
sahf
pop
movsl
mov
in
cmpsl
mov
rclb
xor
add
outsb
mov
push
arpl
and
stc
sub
mov
or
mov
pop
ds
pusha
xchg
arpl
mov
js
pop
pop
lcall
push
popf
ret
xchg
inc
pop
insb
orb
cwtl
js
scas
and
lahf
insb
nop
mov
xchg
add
jae
dec
add
test
xchg
lea
aad
xor
add
rolb
into
ds
inc
shrb
xchg
or
push
ljmp
idivl
aaa
sbb
sar
pop
adc
mov
fcompl
adc
lock
lret
mov
test
push
aaa
pushf
dec
or
loop
mov
ficompl
add
mov
pop
jbe
xor
loopne
inc
rorb
bswap
bound
inc
sub
mov
adc
lea
mov
pop
lock
jns
cli
loop
dec
jge
movsb
sbb
int3
pop
not
xchg
add
adc
loop
pop
inc
pop
inc
xchg
lcall
out
pushf
cmp
je
movsb
sbb
push
into
xchg
leave
push
xchg
ffreep
ja
insb
push
rolb
lret
ror
xchg
insb
insl
add
sbb
xor
pop
push
jnp
xor
sub
test
in
rclb
cmp
jp
or
jb
ljmp
mov
sbb
or
insb
out
xchg
test
bound
sub
pop
sbb
mov
movsl
int3
daa
arpl
or
dec
lea
jg
repz
call
push
sarb
insb
inc
xor
leave
test
cmp
mov
mov
adc
in
bound
sbb
and
fisubrs
dec
scas
push
xchg
push
adc
inc
xor
aam
test
pop
dec
add
push
in
arpl
in
fucomip
addl
jno
xchg
inc
divb
out
adc
and
popa
mov
lcall
pop
daa
rcrb
notb
sub
loope
jae
mov
pusha
mov
data16
rclb
add
mov
pushf
mov
xor
mov
pop
jmp
mov
insl
mov
mov
cwtl
bound
negb
fistps
in
nopl
xor
mov
push
add
ljmp
shrl
sub
push
adc
push
lea
jg
xor
scas
mov
ret
scas
and
ja
test
arpl
add
imul
adc
mov
pop
cmc
add
and
and
dec
in
cmpsb
stc
mov
les
add
sub
sub
in
xchg
fistpl
sbb
pop
mov
add
mov
je
xor
and
dec
adc
mov
cmc
sub
cld
inc
cmp
imul
or
dec
xchg
fdivl
bound
loop
xor
xchg
nop
sbb
pop
pop
notl
lds
push
hlt
loop
orb
dec
cmp
adc
imul
cmc
xchg
mov
sahf
int3
aaa
lahf
xchg
xor
sub
xor
push
jecxz
pop
fdivrs
daa
sbb
xor
int
inc
mov
lea
dec
mov
sub
ret
rorb
jp
mov
mov
pmulhw
lea
out
cmc
mov
in
mov
pop
mov
lea
js
frstor
pushf
fsubrs
je
outsl
push
mov
pop
pop
out
xchg
sub
rol
mov
lods
jno
loope
adc
sti
mov
inc
in
cmpsl
xor
add
test
mov
dec
pop
daa
cmp
in
push
repnz
les
je
push
out
das
fidivs
push
lret
push
cld
pop
push
std
imul
xchg
in
mov
push
flds
jns
fdivl
cmc
lods
cmc
inc
add
push
push
aam
jbe
int3
add
jnp
sub
adc
test
mov
pop
xor
outsl
inc
enter
mov
fcoms
inc
mov
dec
xchg
fldlg2
movsb
sbb
in
adc
sub
mov
addr16
test
xor
loope
repz
dec
or
cmc
push
inc
sbb
fstps
subl
mov
inc
in
imul
xchg
lds
sbb
mov
dec
dec
sub
repz
add
addb
adc
popa
push
call
insl
fwait
stc
sti
and
cmp
pop
pop
mov
sub
inc
pop
mov
insb
scas
lock
lret
xor
mov
lret
icebp
je
ret
addr16
mov
push
dec
push
sub
push
out
test
test
bound
ja
adc
hlt
lea
sub
test
jmp
mov
mov
out
xchg
add
mov
pop
mov
in
out
test
or
cs
scas
sbb
je
push
nop
in
dec
and
outsl
add
and
mov
mov
std
adc
enter
push
shlb
adc
jle
sbb
or
loop
mov
dec
je
inc
loop
sub
jmp
mov
sub
sub
pusha
jae
aas
stc
jne
or
arpl
dec
orb
icebp
lods
pop
xchg
cmp
lea
std
ret
jnp
push
xor
arpl
aam
cmovnp
mov
jb
call
dec
xor
test
sti
in
cmp
arpl
xchg
ljmp
rcll
int
mov
or
add
lret
dec
cmp
cmpsl
xor
inc
push
push
mov
mov
lods
dec
popf
inc
sub
sbb
mov
pop
gs
xchg
cltd
mov
es
shr
cmp
push
pop
adc
jmp
inc
loop
mov
cmp
negl
and
lahf
rorb
dec
daa
fsts
dec
imul
xor
pop
dec
xchg
and
mov
lods
dec
dec
mov
lds
inc
pop
dec
sbb
dec
insb
xor
arpl
enter
repnz
mov
addr16
sbb
push
push
xor
push
lods
int
incl
jo
add
or
in
xchg
jno
xchg
out
jo
scas
pop
jbe
sbb
ret
xchg
testb
je
ljmp
adc
sahf
adc
jg
ja
sub
xchg
cmc
rorl
inc
xor
sub
lret
insl
sbb
int3
xlat
push
lea
in
aad
mov
cmpb
sub
loope
out
movsl
xor
shl
lea
add
push
mov
pop
mov
ljmp
and
insb
sub
push
add
push
lock
or
jl
rorl
adc
jae
xor
insb
fidivl
addr16
xchg
int3
push
call
inc
push
xor
mov
popl
cmp
sub
jo
orl
insl
fcompl
and
ja
sub
fidivl
jno
xchg
jmp
mov
pop
xor
jl
cmpsl
repnz
dec
stos
jmp
das
jae
cmp
xor
rcl
mov
hlt
mov
test
out
or
sbb
repnz
pop
fyl2xp1
loopne
loope
xchg
pop
pop
inc
test
out
lahf
push
and
bound
in
popa
inc
or
addl
mov
xor
add
and
mov
inc
cmpsb
sbb
es
and
adc
sbb
sbb
jg
dec
cltd
arpl
loope
fdivrp
fcomi
sub
bound
mov
rcll
push
lds
cmp
pop
cmc
dec
or
adc
data16
or
stc
and
dec
xchg
dec
popf
sub
mov
mov
lods
dec
xor
lds
fstpt
xchg
inc
imull
xor
or
pusha
lea
add
fwait
xorps
lahf
mov
xchg
adc
xchg
aad
test
loop
pop
pop
jne
inc
loope
inc
es
sarb
test
mov
and
sarl
push
loopne
into
mov
in
jno
testb
pop
pop
mov
and
nop
inc
dec
inc
fwait
dec
icebp
jo
lea
ss
repz
dec
jae
or
add
mov
adc
out
cld
mov
push
mov
andb
lea
aaa
mov
xchg
push
dec
rol
jne
lds
dec
fiadds
mov
clc
mov
adc
lods
lret
lods
sbb
and
mov
sub
mov
sbb
jmp
lods
stc
jno
add
in
xchg
mov
adc
inc
ret
mov
bswap
dec
and
xchg
in
fdivl
jbe
stos
hlt
push
jecxz
pop
sub
movsl
cmc
add
mov
in
sahf
adc
fwait
or
and
add
call
inc
sub
jnp
and
dec
bound
xor
loope
jns
jg
mov
sbb
pop
or
pop
in
dec
mov
lods
mov
aaa
xor
ficoms
sahf
dec
xor
mov
lea
mov
movsb
pop
xor
shr
adc
add
je
add
js,pn
in
imul
mov
xor
lcall
shrb
mov
leave
push
mov
or
cmpsl
cmpl
push
in
scas
fwait
dec
fstpl
pop
sub
outsl
scas
mov
dec
sbb
push
lahf
jnp
loope
add
cmp
imul
lds
inc
lea
dec
fistl
adc
adc
in
add
and
test
mull
ret
sub
ja
xor
bound
push
mov
int
sbb
and
in
jle
ret
popf
aad
or
sub
repz
xchg
xor
mov
std
and
inc
cltd
inc
sub
xchg
pop
push
lcall
pop
mov
push
inc
push
pop
lea
fildl
out
mov
push
xchg
mov
jnp
mov
repnz
mov
iret
adc
in
jbe,pt
cmc
mov
xchg
repz
imul
pop
shll
mov
stc
sub
mov
mov
dec
adc
add
repnz
and
iret
outsl
test
lods
sbb
jns
mov
jge
in
sub
fistl
adc
mov
mov
xchg
fmull
aad
hlt
movsl
adc
cld
and
pop
pop
repz
and
ret
pop
mov
rol
addr16
mov
pop
jmp
sbb
adc
pop
xchg
aam
out
loop
imul
je
sahf
fcompl
outsl
sbb
icebp
rcll
or
les
movsb
scas
sbb
sti
push
inc
xlat
pop
add
in
pushf
xchg
inc
mov
or
scas
add
push
push
scas
in
mov
adcl
stos
lret
loop
jbe
outsb
push
xor
jmp
pop
xor
and
mov
lea
cmc
inc
rolb
sub
push
rcrl
aam
mov
xchg
adc
push
lods
or
mov
pushf
dec
lds
jo
sub
pop
inc
jo
lea
inc
jg
adc
mov
push
pop
inc
sub
inc
movsb
mov
jmp
gs
cld
mov
sub
ja
rclb
xchg
data16
cmc
das
mov
dec
xor
xchg
lea
jae
sbb
out
fdivrp
sbb
mov
add
out
rolb
gs
scas
or
aas
adc
adc
js
cmp
je
mov
dec
mov
out
inc
in
das
sub
imul
hlt
push
orb
and
cli
mov
and
jl
data16
js
ss
loop
les
cmp
mov
cmpb
test
orb
push
xchg
arpl
leave
mov
in
xlat
lea
sub
lods
lea
es
lods
idivl
stos
inc
subl
loopne
das
and
icebp
orl
sub
mov
xor
lds
dec
sbb
stos
clc
adc
mov
sub
inc
aad
push
aad
push
pop
sbb
mov
xor
fsubs
adc
in
in
mov
dec
mov
inc
push
jmp
incl
sti
test
es
arpl
push
aam
cwtl
mov
pop
leave
scas
push
mov
add
in
movsb
jb
push
std
stc
sbb
insb
daa
and
sbb
mov
shrb
jecxz
int
xor
loopne
push
dec
pop
mov
out
into
mov
cmp
push
adc
adc
cmp
mov
xor
addl
sub
mov
mov
lahf
sub
stos
popa
faddl
cmpsb
push
mov
fidivl
bound
ret
scas
arpl
sub
adc
mov
mov
and
cwtl
loop
xlat
jp
pop
adc
mov
insb
dec
jae
fsub
popa
mov
dec
mov
push
mov
stos
mov
nop
or
mov
hlt
cld
rcrl
add
xchg
sub
push
jecxz
scas
xchg
in
sbb
insb
adc
mov
icebp
pushf
nop
aad
jnp
fidivrs
sbb
push
push
hlt
add
repnz
popa
pop
ja
xor
out
mov
xchg
loopne
arpl
xor
jmp
push
adcl
repnz
repz
data16
cmc
push
or
push
mov
jmp
mov
inc
stos
cmc
adc
jmp
lods
pop
cmpl
jl
insb
xchg
fiaddl
sbb
outsl
lea
enter
cmp
mov
lds
repz
xor
dec
clc
or
movsl
jge
pop
je
mov
imul
lmsw
ljmp
imul
cli
shll
xor
add
inc
cs
mull
add
je
or
in
jp
sub
dec
hlt
mov
mov
lods
sbb
inc
push
add
jmp
xor
out
js
arpl
das
xchg
mov
and
mov
daa
leave
sbb
and
adc
jnp
pusha
sbbl
mov
and
jns
xchg
popa
or
dec
pop
stos
mov
cld
out
popf
inc
mov
into
loopne
jp
jns
inc
mov
popf
in
mov
cmc
dec
repnz
mov
fdivs
or
jnp
lods
sub
pop
cmp
jno
add
push
daa
js
pop
adc
mov
movsl
jle
jno
xchg
mov
fdivp
push
test
cmp
sahf
cmp
add
mov
and
pop
or
notb
pop
xor
movsb
dec
sbb
repz
fnstcw
sbb
in
push
pop
aad
sub
adc
mov
jae
loop
loop
xchg
and
mov
inc
out
lea
xor
scas
imul
iret
arpl
test
mov
jnp
adc
jns
daa
and
sub
mov
inc
mov
mov
cld
cmp
test
lods
adc
and
loop
adc
fldl
ljmpw
mov
mov
cmp
dec
pop
clc
enter
mov
out
sub
inc
loopne
sarl
jo
js
lcall
cmpsb
fs
popf
dec
push
dec
subb
push
inc
push
add
or
jbe
or
stc
xchg
icebp
or
adc
jno
pop
mov
mov
movsb
xchg
lea
sub
dec
push
repnz
xor
xchg
neg
sbb
sub
mov
cltd
add
insb
lea
shll
and
xchg
in
xchg
pop
lahf
mov
ljmp
xchg
add
xchg
les
add
adcb
or
jno
mov
cmp
and
sarl
add
lret
out
pop
cmp
push
pusha
add
jb
pop
dec
loopne
pushf
iret
sub
mov
lods
xchg
pop
cmp
mov
push
mov
dec
push
ja
adc
xchg
clc
std
push
and
xchg
lds
xlat
adc
jns
icebp
fisubrl
sub
loopne
mov
inc
hlt
cmovne
add
inc
dec
or
pop
ret
push
and
insb
xor
add
fnstenv
mov
ja
fmull
lea
pop
cld
sub
adc
cs
cmp
sub
ret
inc
xchg
inc
dec
fld1
mov
sub
dec
and
mov
push
decb
cmpsl
lcall
rcr
jmp
je
dec
sub
xlat
xor
pop
xchg
ret
cmp
cwtl
jg
jne
fdivs
mov
lea
aaa
sub
and
loopne
ja
ds
xor
and
dec
mov
inc
lret
mov
into
aad
in
inc
lcall
xor
lods
inc
push
add
push
mov
mov
mov
xchg
flds
sub
in
adc
fimull
add
push
test
lea
mov
fcom
mov
pop
ja
adc
and
notb
fmuls
jbe
cwtl
popa
push
repz
fdiv
sbb
nop
pop
jle
sub
sub
push
js
mov
pop
lock
rolb
add
sub
outsb
ror
out
sbb
enter
push
lock
popa
push
js
loopne
jno
ss
fdivrl
in
ja
jno
mov
jno
mov
insb
std
push
sbb
in
testl
or
xchg
jp
loop
xchg
jge
lods
fsts
test
sbb
mov
push
pop
pop
pop
shlb
push
pop
xchg
or
pop
mov
mov
mov
stos
aam
xor
mov
es
lea
dec
movl
inc
repz
fdivrs
outsb
decb
mov
ret
mov
divl
stc
and
jo
sbb
and
lock
mov
leave
jne
enter
pop
jo
adc
dec
add
je
push
daa
jp
pop
lea
int
push
mov
call
inc
mov
lea
dec
mov
dec
xchg
pop
mov
cmp
stos
lahf
adc
dec
and
call
movsl
push
fisubs
pop
lea
int3
bound
or
xchg
loop
imul
add
filds
dec
or
pop
dec
pop
mov
push
sub
in
jno,pn
arpl
or
insb
roll
adc
mov
rcrl
push
mov
add
jp
xlat
inc
repz
xchg
stos
lss
sbb
je
or
xlat
divl
xor
push
push
int3
ljmp
mov
out
mov
push
dec
cmp
inc
notb
push
icebp
inc
aaa
adc
pop
lret
inc
xor
outsb
cmp
leave
adc
sub
ficompl
lds
loop
jmp
fcompl
push
xor
mov
cmp
pop
add
mov
pushf
inc
inc
sub
lds
pushf
scas
arpl
mov
fdivrl
out
insl
hlt
pusha
fstps
lock
popa
lret
adc
dec
push
xchg
inc
add
das
lret
movsb
lahf
in
lea
sbb
fcoml
mov
arpl
cli
out
inc
or
scas
dec
pushf
xchg
cli
iret
sbb
lods
or
pop
xor
stos
in
fsubr
push
sarl
push
jecxz
push
mov
inc
push
xchg
pop
lods
or
test
dec
push
pusha
mov
fldenv
jle
or
push
adc
cwtl
jb
cmp
jg
sbb
loop
xor
popa
pop
loope
in
pop
pop
sub
gs
jb
mov
jecxz
int
jecxz
int3
mov
loopne
pop
or
dec
inc
xor
mov
gs
cltd
push
lea
lea
push
das
int
mov
leave
xor
je
mov
sbb
add
inc
and
ja
bound
push
jb
xor
push
in
stos
in
insl
adc
or
lea
stos
lahf
leave
push
cmp
insb
mov
adc
js
adc
fidivrs
ret
or
cltd
out
mov
sub
xor
jns
in
xor
imul
inc
adc
sub
jle
dec
push
mov
js
popl
fdivp
xlat
or
sub
xchg
sahf
mov
fcmove
mov
shll
sahf
and
dec
sbb
sub
fsubs
sbb
or
adc
and
out
push
in
jo
push
div
cs
in
scas
push
das
mov
insb
cmpsl
bound
test
dec
inc
mov
stc
dec
cmp
fsubrl
sbb
sar
lock
or
cmpsl
lods
inc
push
mov
jmp
scas
mov
pop
testb
out
rol
gs
cmc
add
and
sub
movsb
lock
sub
sbb
fcomip
sub
and
fnstenv
rcll
xchg
les
fbld
fidivs
mov
mov
pop
add
jecxz
sbb
testl
jo
fs
sub
add
stos
decl
xchg
sub
movsl
mov
jg
sti
inc
lea
cwtl
inc
addr16
xchg
push
and
and
das
lods
enter
loope
jl
pop
jae
or
cwtl
loop
jae
in
dec
clc
mov
shll
cmpsl
mov
push
or
fcompl
pop
sub
in
jmp
jg
sbb
mov
xor
mov
or
hlt
outsb
adc
push
rorb
jbe
inc
mov
jmp
popf
fmul
dec
ret
push
dec
mov
aam
dec
jg
lods
movsl
xor
mov
dec
xchg
daa
idivl
jo
repz
xchg
fs
jno
and
add
sbb
testl
mov
jns
jg
sub
jno
andb
jne
imul
add
ja
divl
testl
mov
cmp
ljmp
subb
push
fcompl
repnz
or
fmull
movsl
in
pop
jns
mov
cmc
mov
lcall
mov
dec
jge
dec
repnz
add
decb
jmp
cmp
mov
and
js
inc
bound
mov
sub
adc
stos
push
arpl
xchg
jb
lods
jecxz
lret
test
push
xor
lock
mov
pop
jmp
insb
bound
sti
lods
mov
dec
adc
mov
inc
test
adc
popa
push
adc
arpl
mov
pop
lea
add
cmp
push
jae
hlt
cmpsb
cmp
lret
shrb
pop
cltd
ds
add
loopne
clc
push
jno
pop
sbb
sbb
arpl
ret
pop
xor
in
add
push
pushf
cmp
push
pop
sbb
mov
insb
xor
push
and
mov
cmp
icebp
int3
pushf
push
fdivrl
mov
xor
fistps
cmc
aad
add
inc
pop
outsb
cmp
mov
sub
sub
leave
sbb
sub
push
out
lret
shrl
stos
loopne
lock
xor
lods
mov
mov
xchg
out
in
mov
inc
fistpl
xor
idivl
cmp
jbe
cwtl
insb
popf
sbb
mov
dec
jno
add
filds
aaa
fwait
pushl
loop
and
gs
daa
aam
sub
arpl
or
dec
sbb
sub
mov
sub
imul
adc
stc
sbb
ljmp
movsb
hlt
in
test
lret
add
sbb
nop
push
stc
xchg
lcall
sbb
inc
sahf
xchg
xchg
mov
std
push
pop
mov
push
cs
sbb
xchg
and
lock
mov
andb
jmp
clc
int
adcb
jecxz
ljmp
adc
orl
rcl
push
out
shl
mov
inc
ja
jo
iret
test
lret
mov
flds
jo
lea
cmp
fwait
pusha
mov
js
mov
pop
into
lods
jno
mov
loopne
sarl
xor
fbld
in
cmpb
out
mov
jp
ja
test
xchg
jge
loope
xor
lret
iret
pop
jae
adc
xchg
jo
int
xor
addr16
stos
aad
or
inc
dec
cmp
inc
pop
push
and
jne
dec
jmp
mov
lret
nop
bound
aas
sub
add
jecxz
je
dec
in
mov
int3
push
cli
lds
adc
mov
iret
sub
pop
mov
xchg
pop
or
or
xor
enter
addr16
or
imul
inc
mov
iret
push
loope
cmp
mov
sub
mov
ret
and
cmp
fisttps
pop
inc
pop
call
aad
js
push
mov
cmovnp
fabs
sbb
lock
jg
xchg
cmp
hlt
pop
mov
jno
scas
fwait
movsl
mov
in
lea
rcr
or
daa
or
jns
arpl
ljmp
xchg
and
hlt
pop
push
xchg
sahf
int3
xchg
std
scas
jo
and
mov
aas
sti
pop
pop
push
jle
xchg
push
xor
or
push
sbb
jae
mov
ds
add
fdivrs
test
xchg
jnp
cmp
flds
lea
mov
call
mov
insb
gs
adc
scas
mov
mov
imul
and
int3
xchg
popa
mov
inc
fbstp
in
shr
test
pop
mov
xor
pop
mov
ror
out
popa
adc
stc
pop
insb
hlt
negl
sub
pop
xor
adc
lock
lea
mov
xor
das
pop
pop
out
adc
lock
jnp
mov
xorl
jmp
lret
das
push
les
pop
dec
mov
xor
push
inc
mov
xor
fiadds
dec
and
or
loope
out
shll
mov
mov
or
out
xlat
aaa
pop
ljmp
add
inc
js
add
dec
sbb
test
jmp
jnp
rcll
adc
adc
inc
jno
and
and
adc
push
or
rol
dec
aam
mov
in
jle
jno
test
or
in
sub
jmp
jl
or
xor
jecxz
pop
hlt
cmp
sub
cmp
xor
cltd
shlb
loopne
jb
jnp
pushf
rcr
mov
sbb
xor
imul
xor
outsl
xchg
pop
xchg
or
cmp
push
mov
push
xchg
ja
inc
enter
inc
dec
dec
in
xorl
inc
cmp
mov
cmp
loop
fsubrs
xchg
lret
int
hlt
or
cmp
mov
pop
data16
insb
jbe
inc
jne
or
and
in
cmp
mov
je
jmp
fisttps
int
mov
and
sti
jge
ffreep
out
cmpsl
jg
mov
lods
mov
incl
std
adc
ja
xlat
pushf
outsl
lea
dec
add
icebp
in
or
in
jno
aad
out
rorl
jbe
fstpt
sub
pop
arpl
jns
filds
in
cmp
jp
xchg
push
in
ret
mov
shrb
sbb
cmp
or
ja
dec
cli
popa
jb
ljmp
push
bound
and
push
adc
pop
out
xchg
mov
or
ret
outsb
in
jp
inc
adc
jp
pop
and
cmp
daa
mov
sub
jo
call
cmpl
sbb
jmp
xchg
stos
incl
lahf
push
add
cmc
mov
fdivr
cs
ret
repz
lea
in
jl
ja
or
jne
pop
std
xor
cli
cmpl
lea
pop
and
jo
sub
das
hlt
add
push
pop
jno
lods
scas
mov
or
mov
mov
shll
xor
icebp
add
and
mov
sub
filds
pushf
rolb
cmp
add
mov
arpl
jb
jns
cmpsl
mov
div
dec
fbld
dec
sub
lcall
push
mov
mov
in
or
cltd
push
lds
inc
es
mov
cmpl
push
fwait
mov
jmp
lds
or
or
inc
pushf
test
mov
sahf
xor
lds
lds
sub
in
pop
cmp
push
jmp
push
jnp
cltd
cmp
leave
ret
cmp
add
push
test
lea
shrb
jmp
test
xchg
mov
mov
mov
subl
push
stos
je
jmp
jo
mov
or
in
push
lods
mov
xor
and
in
cmpsl
lahf
xor
xchg
lods
adc
mov
jne
pop
test
pop
stc
pop
test
adc
sahf
mov
out
loope
lock
insb
dec
sbb
and
mov
lea
xor
mov
stc
dec
in
stos
lock
xchg
jns
in
insl
jae
icebp
loope
out
inc
or
pop
fcoms
aas
inc
push
pusha
dec
jmp
jae
divl
movsl
in
scas
loop
jge
orb
lret
inc
fisubl
jl
imul
cmp
mov
fs
mov
incb
cwtl
xor
xor
add
push
mov
and
cld
js
sbb
sbb
in
jns
repz
pop
xor
ret
dec
pop
lods
mov
mov
js
mov
data16
int
movsl
mov
mov
mov
pop
mov
add
bound
sbb
loop
push
push
rcrb
jp
imul
mov
xchg
mov
lret
insb
jg
mov
mov
lods
or
xchg
pop
jns
fcoms
push
es
in
fisttpl
lods
leave
mov
in
stc
in
ljmp
shl
test
mov
mov
aad
popa
pop
stc
mov
pushf
ja
push
mov
lock
pop
mov
pusha
or
pop
rcll
in
jmp
mov
inc
push
bound
aad
pop
repz
push
sub
cmp
es
icebp
xlat
fidivl
imul
sti
cmp
mov
out
decb
sbb
lea
xor
cmpl
mov
inc
dec
aaa
mov
arpl
mov
push
loopne
hlt
pop
scas
or
lcall
adc
mov
lcall
sub
push
dec
mov
dec
sub
cmpsl
cltd
push
xor
mov
mov
mov
dec
sub
subl
es
xchg
gs
cmp
sbb
loope
fcomps
movsb
lret
movsl
sbb
mov
mov
fsubs
ja
adc
and
pop
aad
mov
inc
cwtl
mov
xchg
and
pushf
arpl
push
roll
dec
pushf
in
ret
mov
insl
dec
ret
popa
insb
pop
pop
fcompl
sub
mov
daa
add
inc
mov
jnp
sub
int
sub
shl
and
sbb
mov
dec
in
cltd
jg
push
jl
jno
insb
rol
cmp
mov
lock
push
in
pop
jb
and
imul
in
imul
pop
gs
mov
mov
xorl
inc
mov
mov
and
lea
mov
mov
lods
ret
dec
ficompl
jo,pt
mov
mov
mull
sbb
sbb
xchg
movsb
cmp
dec
push
or
and
or
shll
jmp
xor
sub
test
hlt
arpl
dec
outsb
sbb
and
lcall
xor
icebp
jo
pop
xchg
jo
xor
dec
jae
lods
dec
aas
jae
xor
imul
jae
ret
ja
xchg
loopne
testl
cmp
aas
mov
sbb
std
add
mov
mov
nopl
adc
popf
xchg
lahf
add
lds
dec
mov
push
in
cmc
jns
mov
scas
xor
adc
cmpsl
jae
pop
sub
mulb
mov
jmp
adc
aad
js
push
cli
leave
xchg
cwtl
sub
add
pop
aas
dec
and
insl
gs
jae
loop
push
jge
dec
loope
xchg
in
pop
pop
aad
jbe
in
aas
dec
sbb
hlt
add
arpl
adc
test
push
ljmp
mov
std
mov
or
sub
dec
push
sbb
inc
std
jp
fldl
mov
imul
repz
aad
loope
mov
mov
pop
inc
int3
mov
push
adcl
inc
or
das
mov
lods
jne
xor
or
adc
mov
mov
fldl
arpl
jnp
push
sub
mov
or
lret
cmp
sahf
mov
and
add
stos
push
and
mov
inc
sub
cli
outsl
into
jns
sbb
scas
or
push
inc
popa
addb
sbb
jo
stos
mov
mov
call
cmc
fdivrl
iret
pop
mov
fists
adc
subl
or
lcall
and
and
ljmp
or
lock
insb
cmc
jmp
rorb
test
dec
push
arpl
in
fwait
inc
inc
shrb
lcall
push
add
pushf
mov
mov
dec
jae
adc
pop
stc
add
rcrb
or
dec
pop
addl
sbb
fwait
nop
cmp
fs
and
mov
and
mov
cmp
adc
sub
les
mov
int3
imul
mov
jecxz
jl
sub
push
fidivrs
lahf
test
cli
dec
int
and
jne
cmp
lcall
mov
inc
aaa
stos
insb
push
jbe
scas
push
jnp
cwtl
lea
sti
add
in
sbb
dec
mov
imul
push
xor
add
rclb
jnp
lods
sar
adc
in
dec
cli
push
inc
cmc
ss
cmc
and
daa
gs
mov
call
or
lcall
push
xchg
lret
in
mov
sbb
gs
mov
jno
rolb
sbb
dec
adc
push
jns
nopl
mov
dec
mov
mov
je
gs
aas
mov
adc
jg
imul
xchg
mov
lea
jp
jmp
jns
cmc
mov
in
sbb
mov
loop
xor
sahf
data16
adc
lret
shrl
inc
stc
addr16
jp
lock
jnp
push
leave
dec
hlt
loop
inc
mov
and
lea
loope
dec
dec
jl
xchg
mov
rcll
inc
dec
dec
pop
aas
lods
pop
jg
inc
push
push
fcompl
sbb
shlb
lock
mov
jns
xchg
sub
mov
test
cmc
push
mov
jmp
dec
pop
mov
xor
mov
push
jge
xchg
mov
mov
lods
repnz
mov
cmp
fptan
xchg
sbb
mov
pop
stos
push
fistpl
push
push
shll
shlb
and
scas
adc
push
jl
js
xor
lea
inc
push
loop
shlb
push
mov
imul
fiadds
mov
shrl
int
lahf
push
dec
rorl
and
imul
aam
fstp
pop
shlb
push
or
xor
orb
ss
pop
je
and
dec
jge
sahf
fstps
mov
fadds
mov
push
stc
pop
scas
and
loopne
sbbl
add
test
jo
testl
insb
mov
lahf
pop
mov
arpl
das
pop
aaa
loop
pop
xacquire
and
mov
in
cmp
xorl
cmpsb
enter
data16
scas
mov
shll
arpl
jge
push
pop
aaa
insb
or
add
lods
push
and
sbb
fs
lea
shrl
sub
cwtl
aaa
mov
pop
pop
dec
mov
inc
push
mov
push
jecxz
jmp
push
inc
sbb
repnz
repnz
and
xchg
inc
test
jae
push
ficompl
xor
imul
xor
mov
std
jns
loop
pop
adc
lahf
inc
adcb
inc
clc
mov
popa
out
or
pop
sub
repz
jae
or
cli
fcmovb
and
in
mov
into
ss
notl
and
in
push
mov
outsb
imul
shlb
jae
insb
dec
pop
jae
push
sarl
mov
xchg
ficoml
sub
mov
cmp
fwait
dec
cmp
sbb
enter
aad
cmp
adc
add
sbb
pop
jns
jne
jg
sbb
add
es
xchg
sbbl
scas
lea
popf
mov
or
out
pop
jg
cmpl
mov
iret
xor
dec
adc
gs
mov
push
dec
sub
es
push
or
pop
adc
mov
fisubl
mov
outsl
push
sti
cs
int3
pop
jmp
pop
push
pop
mov
pushl
cmpsl
mov
sbb
fs
shll
das
xor
dec
lds
sbb
lret
imul
adc
test
push
in
mov
mov
insl
clc
lock
ret
jae
mov
pop
and
lahf
push
add
jmp
push
js
pop
lea
inc
mov
sbb
mov
movsb
imul
and
xchg
add
jmp
mov
mov
mov
shl
pop
sub
arpl
mov
add
mov
mov
mov
arpl
mov
test
push
lret
bound
mov
in
push
and
loop
lods
pop
jl
push
mov
add
jg
lea
and
enter
and
push
sub
fcoms
ret
imul
in
or
rolb
xchg
add
lds
insb
jne
and
dec
std
shrb
and
lock
pop
fisubs
es
pop
jne
jp
mov
xor
mov
mov
pop
adc
xor
pshufw
jge
xchg
mov
lock
int3
iret
inc
dec
or
jno
ret
sbb
negl
and
and
jmp
enter
jo
inc
sbb
mov
jecxz
mov
pushf
daa
ja
jnp
push
in
adc
adc
stos
inc
cmpb
xor
sub
lret
xor
jl
cmp
mov
mov
mov
movsb
mov
int3
loop
or
mov
cmp
or
pop
jae
adc
lahf
jecxz
inc
dec
inc
jl
sbb
mov
shrb
in
in
insl
push
sbb
mov
sbb
fs
jmp
imull
mov
xorb
mov
lea
adc
repz
fs
rcll
subb
mov
imul
jbe
sbb
fmuls
cmp
xor
xchg
repnz
dec
aaa
movsl
shll
sahf
loop
divl
cmp
push
sbb
mov
or
adc
jo
cmp
mov
ja
xor
pop
lea
in
imul
jmp
bound
fbstp
movb
and
pop
sub
inc
dec
cmp
sti
cli
push
xor
insl
and
mov
add
mov
pop
sbb
mov
xchg
fwait
pop
rcrb
leave
xlat
rcr
into
shrl
pop
loop
cmpsb
jns
pop
adc
xchg
jnp
lea
and
les
aam
orl
lret
loopne
mov
cmpsl
fimuls
or
into
dec
mov
sbb
mov
cld
test
pop
cmp
jns
mov
out
xchg
add
mov
lods
andl
add
xor
sub
mov
jbe
pop
stos
xchg
add
sub
enter
fwait
jl
in
cltd
push
arpl
lock
mov
lods
xlat
adcb
popa
dec
or
add
ret
jecxz
cli
mov
and
out
dec
mov
rcl
sub
mov
mov
rcl
mov
xchg
or
adc
mov
pop
pop
xchg
inc
repz
mov
jns
sub
dec
fidivs
xor
enter
mov
sbb
pushf
fildl
pop
or
and
mov
daa
aam
mov
cmp
pusha
pop
mov
inc
aaa
adc
pop
push
call
or
insl
aas
ror
push
pop
mov
add
jne
or
dec
and
mov
jae
jle
aaa
push
test
cmpsl
ljmp
lea
pop
addb
fildl
fwait
lds
cwtl
hlt
adc
cmp
xchg
mov
pop
popf
jae
or
and
xchg
and
adc
push
int
andb
and
sar
decl
xchg
mov
mov
jo
mov
inc
je
push
insb
sti
outsl
push
push
ljmp
cmpb
pop
mov
cmp
fsubrl
xchg
mov
mov
xor
push
cmp
addr16
inc
in
jo
arpl
adc
or
ljmp
shll
sbbb
mov
dec
insb
mov
cmpsb
dec
cltd
xchg
outsl
insb
and
inc
dec
fincstp
push
cli
mov
sbbb
pop
cmp
in
sbb
mov
es
xchg
outsb
leave
mov
pop
cmp
imul
imul
push
in
bound
push
in
js
scas
dec
xor
dec
mov
into
mov
mov
shlb
jecxz
inc
popa
mov
imul
js
xchg
mov
hlt
sub
std
add
jns
or
push
out
clc
maxps
mov
mov
inc
std
sub
ficoml
xor
sub
into
xor
jl
push
push
mov
dec
adc
dec
out
mov
inc
jnp
test
jno
scas
mov
adc
cmpl
push
dec
out
mov
push
jns
or
mov
cli
dec
notb
dec
lret
xor
fwait
xchg
jb
push
insb
movsl
push
jae
fsub
xchg
es
pop
into
cld
cld
and
mov
data16
test
push
cmc
popf
or
or
loope
mov
iret
shrl
xchg
mov
js
pop
lea
std
sub
and
pop
push
add
lea
scas
xor
xor
jns
lods
arpl
add
loopne
arpl
mov
movsl
stos
hlt
xlat
pop
in
mov
add
pop
insb
jo
test
sbb
pop
cmp
add
lods
out
lret
iret
arpl
cmp
int
mov
jno
arpl
js
outsb
or
cwtl
fistpl
icebp
and
imulb
loop
mov
or
jg
or
xor
push
cltd
and
shrb
frstor
rolb
mov
push
push
inc
lods
mov
cmp
stos
jp
xor
insl
in
sbb
lret
sbb
xor
cmp
pushf
int3
sbb
in
push
fwait
add
jmp
ljmp
inc
jne
mov
jae
lret
mov
clc
sbb
mov
sbb
outsl
arpl
and
lea
repnz
fstps
add
insl
inc
pop
mov
aas
push
movsb
cli
push
repnz
dec
mov
dec
adc
loop
jne
hlt
jo
pop
mov
dec
add
cli
cmp
add
ja
xor
aas
jae
push
aad
rcl
or
imul
push
or
cwtl
gs
mov
jo
dec
cmpsb
pop
das
push
or
adc
sub
mov
push
mov
sbb
in
ret
push
jecxz
sbb
call
rcrl
notl
sbb
cmp
outsl
mov
mov
mov
int3
pop
inc
in
out
divl
pushf
dec
ret
insl
sub
sbb
xor
xchg
out
lea
sbb
test
ret
mov
jge
jno
mov
add
jmp
fnstenv
push
mov
inc
hlt
aas
mov
outsb
or
and
testb
sub
or
ret
int
jae
fwait
mov
popa
hlt
ja
scas
inc
and
sub
pop
cmp
adc
and
jg
adc
lods
adc
dec
sbbb
icebp
push
faddp
arpl
mov
adc
hlt
es
cmp
into
inc
mov
aad
repz
xchg
and
and
out
jo
daa
ljmp
pop
movsb
insb
nop
out
push
pop
pop
add
mov
shl
xlat
je
and
iret
jnp
mov
inc
dec
shlb
and
out
push
mov
dec
pop
adc
cmp
mov
mov
xor
xor
ja
mov
jle
xchg
add
fistpll
push
ret
pop
adc
push
inc
and
sbbb
icebp
int
jae
bound
mov
inc
mov
add
xchg
iret
push
lods
jno
repnz
movsb
jb
add
push
sbb
hlt
or
aad
dec
mov
enter
arpl
popf
mov
pop
push
mov
movsb
xor
mov
pusha
fcmovnu
stos
sbb
mov
sbbl
lea
mov
push
scas
stc
sbb
jp
daa
shll
hlt
dec
ljmp
loop
mov
out
arpl
mov
repz
je
mov
in
adc
js
fimuls
lock
loop
in
inc
dec
push
dec
inc
xorb
mov
jp
cwtl
sub
pop
stos
xor
add
mov
jmp
test
push
mov
outsb
ja
jnp
xchg
shrl
insb
pusha
pop
lea
jle
add
add
xor
int
rolb
jecxz
mov
arpl
push
sbb
pushf
stos
jle
inc
sub
fildl
popf
lds
enter
pop
notl
int
dec
jae
pop
mov
push
das
mov
pop
jecxz
xor
mov
dec
neg
jecxz
outsl
stc
xor
sbb
and
xchg
jecxz
push
and
stos
int
repnz
jmp
cli
or
adc
add
and
movsl
ljmp
mov
fdiv
or
pop
js
rol
insb
fs
mul
lahf
leave
xchg
lahf
dec
push
data16
sbb
push
fldt
clc
adc
popa
arpl
pop
lea
jmp
enter
jne
rolb
jecxz
movzbl
dec
adc
sbb
and
aaa
jmp
stos
push
adc
lods
adc
cmp
les
push
inc
mov
rorb
xchg
fisubrs
jmp
aam
inc
adc
js
dec
lods
pushf
aaa
outsl
scas
enter
pop
sub
sbb
lret
stc
popa
pop
sbb
loop
add
in
loop
mov
mov
mov
popf
sub
lea
push
fstps
inc
mov
mov
pop
insl
test
sub
insb
insl
jle
and
sub
jo
add
inc
xor
sbbl
pop
sub
mov
dec
push
in
repz
inc
pushf
das
and
jb
inc
lock
loop
add
movsb
test
mov
aad
rorb
dec
je
dec
jno
out
add
mov
adc
jmp
cmp
jno
ret
adc
orl
std
pop
test
dec
mov
jg
push
xchg
xchg
jmp
es
jns
in
in
mov
mov
xor
push
xor
dec
arpl
call
fidivrs
stc
inc
mov
pusha
lea
fisttpll
mov
mov
gs
aaa
in
shlb
xor
shrl
mov
rcr
fidivrl
push
jnp
gs
aad
mov
mov
fwait
sub
std
jnp
stos
insl
mull
jb
jle
in
insb
data16
arpl
sbb
daa
shrb
cmp
sti
std
je
int
adcl
add
dec
pop
arpl
xor
add
mov
es
mov
and
jg
and
inc
push
jo
in
fdivs
imul
daa
xor
push
xchg
insb
sbb
jle
stos
mov
daa
mov
sbb
aas
dec
lret
lock
js
mov
xlat
xchg
jle
inc
cmp
xchg
inc
sbb
insl
mov
insb
fsts
and
dec
enter
xor
sarb
adc
dec
sahf
mov
push
mov
imul
testl
jmp
mov
pop
in
jg
xchg
mov
sub
aam
jns
add
scas
in
loop
fistps
push
std
inc
into
stos
out
stos
or
pushf
enter
pop
pop
add
mov
mov
jmp
xchg
cli
movsb
fsubrl
xchg
repz
call
pop
out
mov
or
dec
enter
pop
add
lret
repnz
mov
test
sbb
dec
dec
repnz
cmp
sbb
loopne
daa
aam
jmp
mov
push
ds
add
loope
jg
pop
jl
xchg
push
fwait
mov
and
call
sub
lods
test
mov
enter
cmp
lea
je
or
add
sub
push
incl
cmp
mov
xor
gs
or
mov
mov
ret
mulb
adc
adc
cwtl
adcl
push
rorb
andl
xchg
jno
subl
jb
lret
outsb
sbbb
pop
shll
out
inc
mov
aaa
mov
sub
jge
mov
fsts
ret
mov
cmc
mov
inc
jne
icebp
inc
insb
mov
fmuls
push
sub
cld
xchg
or
sub
scas
mov
pop
and
fsubrl
dec
test
icebp
sub
cmp
cmc
and
lret
inc
push
adc
shlb
das
xchg
push
cmpsl
and
or
jecxz
clc
ja
ja
call
jno
sbb
enter
iret
repz
mov
mov
adcb
xchg
leave
movsb
daa
mov
fdivs
decl
fimuls
andl
cwtl
pop
scas
aad
jae
and
subl
gs
dec
and
test
xor
jns
cmc
fwait
mov
pop
outsl
hlt
inc
sahf
pop
add
outsl
fsubs
lahf
imul
mov
mov
idivl
jo
lea
test
mov
jecxz
sub
in
pop
and
loope
bound
push
decb
xor
stos
mov
xor
clc
sbb
fiaddl
push
scas
xor
jp
or
mov
mov
dec
stos
shlb
in
in
cmp
iret
mov
mov
fidivs
addb
daa
push
dec
dec
sahf
lret
adc
je
push
in
out
add
icebp
cmp
rcr
das
stos
xchg
mov
push
fnstenv
add
sub
popf
in
mov
lods
pop
outsb
push
adcl
sahf
mov
in
pop
jo
cmpsb
push
sub
mov
mov
add
cwtl
movsb
push
jne
jmp
pop
sub
in
mov
sub
mov
mov
jmp
das
fidivl
add
dec
adc
insb
mov
xor
pushf
cmpsl
sahf
ljmp
push
push
or
pop
imul
cmp
imul
add
insl
push
or
sub
and
mov
sbb
add
std
hlt
or
mov
fnstenv
or
addr16
aaa
test
lea
aad
sub
xor
mov
int3
movsb
insl
div
lret
xchg
stos
sti
push
xchg
subb
jbe
data16
xchg
inc
sahf
popf
fs
faddl
sub
mov
loop
sub
and
push
outsl
mov
scas
mov
mov
popa
xor
and
and
shlb
sub
sbb
xor
shll
xor
push
mov
jno
shll
imul
rol
outsl
int
nop
hlt
cltd
fiadds
arpl
scas
cmp
movsb
iret
fisttpl
push
inc
loop
push
clc
jecxz
jecxz
and
in
sub
cwtl
sub
lea
stos
sub
movsl
lods
or
or
movsl
cmp
push
mov
cwtl
in
pop
add
popa
lret
lods
jecxz
dec
inc
jae
jne
fwait
xor
push
adc
pop
pop
xchg
sub
mov
dec
sbb
insb
mov
clc
mov
lods
insl
mov
mov
dec
dec
jle
mov
leave
inc
mov
dec
adc
or
xbegin
clc
sbb
sub
mov
das
in
ficoml
pop
pop
enter
hlt
or
mov
out
dec
idiv
mov
notl
loope
xlat
daa
insl
mov
add
je
fsubl
ljmp
fstps
push
mov
pop
pop
outsb
mov
test
lea
insb
sbb
mov
call
xchg
push
add
enterw
mov
jnp
mov
out
popa
movsl
add
arpl
stc
pop
cmp
lock
out
sub
ret
pop
and
dec
inc
mov
or
gs
xorb
ret
push
lcall
lret
or
or
rcrb
adc
aaa
lods
test
push
les
fucomi
sub
mov
js
lods
gs
cmp
mov
and
js
mov
sub
ret
push
popf
sub
cmp
es
mov
imul
test
sbb
rolb
xlat
and
std
push
int3
cltd
cli
or
xchg
mov
adc
iret
lret
pop
pop
psubsb
mov
int
xor
aad
addl
in
out
jnp
fildll
pop
lea
jns
push
pop
cli
mov
ret
dec
or
bound
leave
dec
imul
jno
mov
mov
shrb
cs
loop
push
sub
mov
push
movsb
inc
shlb
jecxz
push
push
bound
cmp
lahf
xor
cmpsb
in
push
mov
movsl
dec
in
mov
jp
aad
jns
aad
sbb
xchg
jecxz
dec
in
add
push
divl
jae
pop
xor
sub
and
jae
push
fldenv
jl
into
xchg
cmp
int3
lcall
rolb
or
pop
cwtl
push
rcll
imul
inc
lock
insb
fyl2xp1
sti
jnp
xchg
loopne
mov
das
inc
cli
sbb
dec
inc
jnp
cwtl
int3
dec
in
mov
addr16
movzwl
add
pop
daa
test
push
ljmp
test
cwtl
dec
sbb
std
fsubr
mov
je
mov
add
fnsaves
movsl
js
and
shrb
test
mov
test
cmpsl
mov
cmc
je
rcll
push
xchg
xchg
in
imul
lea
sub
mov
test
mov
aad
or
sbb
sbb
mov
mov
adc
lea
or
sub
ja
leave
loope
cmc
xor
int
push
lods
fcomps
pop
dec
mov
dec
subl
jmp
pushf
mov
bnd
mov
cltd
testl
jg
pop
arpl
repnz
mov
gs
sub
fsubs
scas
add
cmc
or
jp
jne
or
push
mov
adc
cwtl
mov
stos
sub
sbb
shll
pop
pop
push
lcall
movsl
mov
hlt
lret
jb
mov
xchg
dec
add
int3
xor
sbb
cwtl
push
in
in
cli
xor
arpl
mov
mov
loope
mov
test
mov
and
or
inc
inc
js
fsubrl
sub
sbb
jmp
mov
jo
xor
mov
sbb
mov
lea
xor
imul
mov
lret
mull
popf
ja
push
lock
arpl
xchg
inc
pop
add
adc
sti
jl
popf
push
imul
jl
add
jecxz
ja
sahf
incb
fstpl
insb
mov
add
sub
je
push
mov
scas
mov
in
jnp
das
faddp
xor
pushf
cmc
cli
or
pop
inc
xchg
iret
mov
sub
and
cmp
insl
shlb
rcrb
push
jecxz
jle
testb
sbbl
mov
dec
mov
sub
xor
xor
and
xchg
and
shrl
add
lock
mov
dec
sub
add
xor
add
test
dec
dec
shlb
faddl
mov
es
push
fsubrl
dec
shrb
sbb
jae
mov
clc
mov
mov
in
jp
icebp
and
aas
mov
push
mov
or
shl
jge
int3
cmp
cmp
lds
push
mov
lret
add
xor
mov
pop
jb
bnd
fwait
mov
push
ret
loope
mov
movb
jp
movsl
dec
repnz
roll
and
jg
sbb
or
imul
iret
rcrl
sbb
xor
xor
lret
movsl
mov
and
push
cmp
mov
mov
mov
push
sub
xor
repnz
stc
test
mov
adc
xor
repnz
call
xchg
push
je
mov
xor
xchg
jg
and
pop
or
call
inc
pusha
int3
mov
insb
roll
lock
mov
scas
pop
mov
loop
cmp
cmp
sub
mov
sahf
sub
adc
xor
ret
push
aas
sub
jmp
imul
loope
loope
fisttpll
iret
mov
cmpl
push
cmp
pop
outsb
or
or
jle
sub
imul
sub
cmp
jb
mov
inc
in
ficoms
push
and
adc
fdivrs
xor
mov
sbb
leave
lds
jge
dec
ljmp
pop
dec
inc
lods
mov
stos
ja
and
andb
pusha
js
mov
and
xorb
dec
ja
imul
pop
sbb
xor
imul
xlat
out
add
mov
sbb
in
and
jmp
and
adc
lahf
ret
mov
pop
sub
rclb
inc
cmp
add
lret
outsb
jp
xor
aam
sbb
sbb
pushf
gs
addr16
or
mov
out
mov
in
int3
popa
fistps
sbb
dec
mov
push
sbb
loope
pusha
bound
xchg
and
fwait
adc
test
in
add
cwtl
and
jo
mov
ja
sahf
or
pop
lcall
hlt
cmp
jge
inc
scas
sub
movsb
les
adc
dec
xchg
mov
dec
cmp
dec
movsl
and
and
into
insl
xlat
stos
out
outsb
xor
fnstenv
dec
cmpsl
mov
sub
in
lods
mov
outsl
dec
jo
addb
mov
mov
and
ljmp
hlt
mov
outsb
movsl
pushl
pop
movl
mov
frstor
jne
loopne
inc
stos
ljmp
pop
stc
add
xor
push
xchg
push
mov
in
jecxz
sub
and
jne
fidivl
mov
jb
je
loopne
ficomps
xor
int3
mov
shr
lods
int
sarl
lds
xor
jno
lret
dec
cmpsb
lods
insb
test
sbbl
add
dec
std
mov
sub
pop
push
popf
ja
pop
js
xor
jbe
incl
jae
std
dec
xor
imull
ss
mov
adcb
enter
test
pop
and
inc
fwait
inc
outsb
and
cmp
pop
subb
addl
cmpl
mov
incb
icebp
out
and
push
jb
ljmp
mov
leave
xor
or
test
mov
int
adc
dec
gs
dec
stc
xchg
movsb
mov
mov
sbb
push
sahf
add
mov
cmp
sbb
jg
mov
dec
sete
imul
xchg
push
loopne
daa
int3
orl
pusha
ror
insb
cld
outsl
or
aad
mov
sbb
negb
insb
ficoms
and
daa
fidivrs
je
sbb
push
js
arpl
sub
stc
mov
and
clc
pop
pop
ljmp
xor
lods
sahf
dec
pop
lea
jnp
aad
jl
xchg
inc
mov
jae
pop
mov
les
in
inc
add
dec
jmp
es
gs
lea
in
push
sahf
sub
loope
push
jmp
in
fisttps
mov
aam
cs
jmp
sub
fwait
loope
scas
lea
ret
daa
rcrb
test
adc
mov
daa
movb
jo
stos
mov
arpl
xor
imul
lcall
xchg
sub
push
mov
out
xor
xor
or
int
xchg
aam
fnstcw
fbstp
mov
mov
xchg
and
or
das
or
fsubs
inc
or
enter
movsl
mov
fs
je
lahf
jmp
js
inc
das
pushf
adc
into
push
jle
sub
jnp
lcall
fildll
and
orl
cmpsb
push
fistpl
mov
data16
inc
aam
sub
aas
outsb
and
ret
or
pop
mov
les
jecxz
sub
jne
pop
js
or
imul
test
shr
adc
bnd
fldt
push
sub
mov
cmpsl
mov
out
pop
out
flds
jge
insb
jo
adc
push
repnz
repnz
unpckhps
push
or
ds
repz
lods
js
and
sub
sub
ljmp
out
mov
and
add
leave
scas
loopne
inc
mov
fistpl
pushl
pop
mov
loopne
sbb
pop
aas
pop
inc
in
scas
pusha
mov
fs
cmp
movsl
ret
ret
sbb
negl
dec
mov
mov
dec
lea
mov
jmp
insb
mov
arpl
mov
repz
cmp
ja
adc
sbb
jp
or
int
movsl
push
pop
and
std
adc
clc
les
imul
aas
call
popf
sbb
daa
cmp
adc
incb
inc
imul
imul
in
or
filds
and
in
shr
test
and
mov
es
movb
push
and
xor
adc
ds
inc
inc
add
mov
push
in
insb
arpl
repnz
lea
stos
insb
pushf
aaa
dec
inc
loopne
mov
rcl
push
call
out
shlb
nop
sub
fldcw
gs
jl
sub
aad
data16
mov
ljmp
les
call
xor
push
xor
les
sub
or
mov
xorb
gs
inc
inc
sti
inc
jecxz
push
mov
add
xchg
cld
add
stc
not
cltd
jl
notl
mov
hlt
xor
stos
ret
mov
mov
jg
loope
outsl
fisubrl
xchg
sub
pop
sarb
mov
mov
jl
jno
mov
nop
xchg
sbb
repnz
or
adc
xor
inc
mov
and
jecxz
faddl
jmp
pop
out
clc
mov
in
sub
dec
inc
fisubl
popf
fs
pop
or
sub
mov
sbb
repnz
fbstp
push
or
push
xor
insl
xchg
xchg
ficoml
rol
push
xor
sbb
inc
pusha
lret
out
es
pop
push
mov
adc
sub
shll
ss
out
addr16
mov
fnsave
xor
dec
jae
mov
inc
lahf
jae
sbb
shr
cwtl
fcomi
mov
enter
enter
sahf
iret
adcb
lahf
or
sbb
aam
sub
outsb
inc
loopne
jo
imul
dec
jecxz
js
insl
scas
sub
mov
test
inc
xor
or
sub
imul
lret
dec
in
mov
dec
pop
lds
imul
xor
in
jg
push
enter
js
push
jne
andb
jbe
jl
repnz
mov
mov
xor
jbe
out
mov
jp
call
cltd
daa
dec
and
shrl
jo
aas
cwtl
sub
shl
cmp
jns
stos
xchg
movsl
int3
cmp
mov
or
pop
aam
pop
pop
add
dec
in
mov
sbb
jne
jb
or
int
cltd
ljmp
ljmp
mov
mov
mov
dec
push
movsl
sub
xor
xor
loopne
xchg
idivb
insl
gs
in
jl
mov
orb
test
xor
imul
mov
in
insb
pop
mov
xor
pop
repz
fwait
xchg
add
hlt
aaa
gs
or
and
ret
shlb
and
insl
rcrl
sbbb
xor
sub
hlt
js
ljmp
pop
xor
fwait
sbb
dec
lahf
adc
or
loopne
mov
outsl
mov
icebp
push
mov
in
in
and
lock
push
ljmp
dec
imul
add
lret
pushf
arpl
adc
andb
lret
adc
aam
lds
push
cld
inc
shl
ja
scas
jecxz
test
jmp
adc
mov
and
xor
jae
pop
xchg
scas
or
imul
pop
or
add
das
aam
jmp
and
pushf
jge
popf
movsl
ficoml
movsb
mov
pop
adc
aad
mov
mov
aas
mov
xchg
rcrl
inc
mov
lock
aaa
xchg
or
or
in
inc
out
repnz
call
mov
jae
adc
push
pminsw
clc
das
pop
arpl
insb
int3
or
arpl
mov
ss
dec
sbb
dec
test
mov
repnz
sub
popa
xor
rcr
es
mov
sub
adc
inc
lret
enter
loop
aad
mov
sub
sahf
mov
jo
sub
dec
pushf
mov
jl
sbb
arpl
xor
mov
xchg
mov
mov
imull
jo
mov
clc
shlb
iret
stos
mov
fiadds
sbb
andb
mov
jb
cmp
sbb
lock
mov
aad
mov
push
shl
lcall
add
movsb
pop
mov
lea
shrl
and
test
xor
push
mov
inc
adc
roll
adc
jno
mov
ja
fidivrs
dec
mov
test
insb
mov
divb
sbb
lret
insl
pop
mov
adc
movsb
ja
push
xchg
ret
pop
xchg
hlt
and
ret
cmp
scas
and
ja
fsubs
inc
jns
das
cmp
sbb
in
xchg
mov
jmp
xchg
das
leave
aaa
scas
xchg
nop
push
frstor
cli
insb
xlat
jp
jae
dec
mov
hlt
sahf
scas
decb
sub
arpl
mov
xchg
out
xlat
inc
sub
cmp
es
fbld
adc
mov
adc
or
std
xor
pop
inc
in
xor
inc
imul
fs
loop
xor
and
ljmp
sarb
and
sub
repz
add
xor
fs
loope
adc
dec
decb
cmp
es
mov
jb
mov
cld
inc
mov
lea
add
or
dec
fildll
pop
cmp
js
bound
lret
lods
adc
mov
or
jl
scas
cmp
xor
adc
movsl
push
xchg
insb
sub
mov
pusha
adc
icebp
push
popf
cli
repz
push
pop
insb
js
xor
inc
and
bound
mov
jb
popl
mov
fisttpl
loope
push
repz
push
pop
popa
movsb
dec
mov
or
inc
sub
jnp
add
or
adc
dec
jmp
cwtl
push
push
sbb
movzbl
pop
andb
adc
stos
dec
sbb
lds
mov
ljmp
mov
lcall
xor
fisubs
mov
repnz
sbb
test
cmp
mov
inc
push
mov
cmp
js
inc
cmp
mov
lods
loope
pushf
in
xchg
sbb
mov
pop
dec
aad
in
fmuls
pop
sbb
loopne
aas
mov
mov
jmp
dec
pusha
inc
xor
gs
mov
mov
adc
repz
ret
int
cmpsl
lods
lea
mulb
out
sbb
xchg
cmc
lahf
sti
je
mov
add
aad
js
insl
cwtl
and
pop
mov
mov
jb
jae
jecxz
mov
sti
lock
mov
bound
lock
cmp
aas
fcoml
lea
cld
scas
mov
xchg
fistps
pop
ja
mov
push
mov
push
dec
jns
test
stos
sti
sbb
dec
pop
mov
inc
or
outsb
xor
and
push
je
and
mov
dec
in
jg
jo
fistl
adc
rolb
insb
test
mov
in
sub
mov
dec
fcmovnu
bound
mov
and
iret
sahf
adc
fnstenv
push
inc
ljmp
sub
cmp
pop
sub
xchg
lods
lods
repz
adc
or
lcall
fdivrl
cwtl
adc
inc
mov
pop
iret
mov
subl
popf
mov
mov
mov
add
arpl
jo
xchg
pop
bound
mov
sub
jo
push
cmp
std
jno
scas
push
cmp
xor
addr16
rorl
ss
cmpsl
sbbb
je
mov
fdiv
dec
and
lea
and
leave
xor
les
shlb
jb
jmp
sub
xchg
jno
mov
mov
enter
bound
aam
pop
sub
test
in
stos
hlt
insb
and
ss
dec
sbb
sahf
mov
inc
jle
int3
mov
mov
jmp
icebp
out
das
loope
push
jp
inc
push
push
mov
or
gs
popa
xchg
shlb
and
sub
jns
loop
in
jne
mov
loopne
je
mov
sbb
loop
cltd
pop
xor
jns
mov
pop
test
jp
jge
xchg
inc
lcall
pop
loop
jbe
cwtl
mov
inc
shr
pop
or
ret
scas
mov
lret
adc
adc
mov
sub
xchg
mov
lea
xchg
mov
add
fistpll
mov
push
mov
and
and
pop
jmp
mov
mov
xchg
fistps
repnz
cmp
pop
mov
adc
mov
enter
adc
pushf
pusha
insb
fstps
sub
inc
mov
xchg
jecxz
lret
pop
cs
dec
sbb
or
jns
inc
xor
push
out
dec
sbb
call
xchg
mov
dec
mov
nop
cmpsl
pop
adc
xchg
std
mov
int
loope
out
cmp
push
insl
adc
stc
int3
dec
jbe
arpl
jne
inc
xchg
pusha
movsl
ret
out
in
mov
lea
cmp
add
outsb
xor
lret
xor
dec
mov
in
xorb
xchg
and
lahf
rcl
insb
daa
aam
adc
xlat
sbbl
mov
int
outsb
or
mov
fidivrs
pop
mov
aad
fisttps
pop
fwait
scas
dec
push
jmp
push
cmp
dec
scas
aad
xor
movsl
stos
out
cmpsb
mov
add
enter
or
in
push
and
pop
popf
in
mov
fbstp
sub
psrad
out
in
sbb
arpl
rcr
lret
and
bound
adc
mov
arpl
pop
jae
xchg
cmpsb
aad
xchg
mov
inc
aam
enter
pop
ds
in
loop
out
repz
gs
or
dec
push
xor
pop
aad
repnz
mov
fcompl
bound
mov
sub
xchg
add
bound
nop
pusha
sub
adc
push
adc
js
and
and
rorb
cmp
mov
sbb
popa
xchg
in
jne
jmp
leave
and
jge
fdivrl
addr16
jbe
and
inc
out
jmp
shlb
mulb
jne
js
jo
imul
je
in
inc
push
and
lock
shrb
cmp
mov
push
popl
xchg
push
jae
add
add
lock
mov
mov
xorl
and
bnd
mov
mov
adc
and
in
dec
adc
jo
xchg
sub
xor
jo
adc
push
gs
ja
mov
shrb
xor
xchg
test
jnp
iret
and
in
push
insl
insb
add
push
test
jne
and
jge
fcompl
xchg
push
mov
aaa
clc
fwait
lret
push
popa
and
or
test
add
inc
add
loopne
mov
std
mov
sub
sbb
dec
gs
es
pop
cmc
jecxz
shll
inc
add
pop
stc
pop
mov
and
xor
leave
lcall
pop
movsl
and
idivl
push
pop
dec
cwtl
or
in
outsb
sub
xchg
dec
lret
daa
inc
cmp
jae
leave
adc
shll
ficoms
je
stc
adcl
jnp
jp
std
xchg
mov
fdivrs
rorl
mov
aaa
enter
push
add
dec
mov
sub
hlt
jmp
mov
lret
mov
add
shr
mov
mov
out
dec
push
repz
movsb
pop
mov
cltd
jp
rcl
mov
add
cmp
mov
daa
mov
jne
lods
mov
jecxz
frstor
ret
push
sbb
call
sahf
adc
out
xor
mov
xor
and
std
mov
and
popf
or
into
insl
sub
jo
enter
loop
enter
in
pop
xchg
sub
xor
jmp
push
pushf
loop
mov
lock
push
shlb
add
outsl
xor
dec
mov
push
jp
jl
fdivs
ret
insb
mov
push
movsb
pop
cmc
movsb
in
xchg
jg
sti
mov
hlt
icebp
lods
cmc
test
mov
xchg
fsubl
mov
js
aaa
lea
xchg
ss
sbb
stos
fcmovnbe
mov
sbb
pushf
jb
adcb
out
or
inc
mov
shl
mov
ret
fsub
adc
pop
mov
gs
xchg
push
cmp
in
arpl
in
xor
jno
jecxz
cmp
sub
mov
mov
mov
lea
shlb
mov
pop
add
stos
fs
jno
sub
pop
cltd
push
insb
cli
js
mov
sti
cmc
in
outsb
sub
and
pop
popa
or
push
in
mov
sub
xchg
sarl
pop
bound
xchg
mov
ja
xor
test
in
pop
add
lea
neg
hlt
hlt
insl
push
cmpb
pop
or
lea
je
popf
sub
mov
pop
not
xor
fldt
loopne
mov
shll
inc
adc
pop
sbb
mov
aad
mov
icebp
cmc
dec
cld
or
stos
mov
arpl
add
mov
stos
push
xchg
pop
push
gs
in
pop
lcall
stos
pop
mov
or
xchg
pop
lds
jno
mov
xchg
lea
stos
or
ljmp
hlt
push
adc
add
adc
push
cmp
xchg
js
mov
hlt
cltd
mov
cmp
loop
push
incl
pop
dec
inc
pop
orl
xchg
and
xchg
sbb
out
jmp
mov
cmpsb
pop
in
lret
mov
xchg
jecxz
fstp
rcrb
repnz
mov
mov
sahf
mov
and
jb
inc
dec
mov
loope
imul
aad
mov
xor
xchg
cmp
call
in
out
jmp
in
jmp
aaa
mov
mov
fstps
insb
fcmovb
inc
lcall
pop
mov
jecxz
outsw
and
push
in
mov
sbb
ret
sbb
mov
pop
scas
inc
dec
and
rcll
lods
outsb
mov
mov
mov
mov
mov
lods
jmp
andb
inc
loopne
aad
mov
das
sti
xchg
mov
rcrb
sbb
pop
lahf
aad
cmpsb
or
ret
mov
loop
testl
push
mov
xor
shrb
dec
jle
cld
subb
out
out
insb
out
cmp
ja
jle
xchg
nop
pop
or
jno
into
sbb
adc
push
xor
add
mov
mov
and
aaa
mov
shl
and
push
stos
daa
cwtl
dec
cld
call
xor
cli
mov
adc
and
fistps
and
lret
xor
js
and
cmp
jnp
addr16
repnz
stc
stos
sbb
jg
sub
std
cli
mov
fsubp
inc
lea
addb
stc
cmp
sbb
mov
pop
adc
mov
clc
mov
out
je
jg
add
ljmp
pushf
jae
lret
jmp
sti
stos
leave
sti
push
sbb
sub
out
inc
xchg
cmpb
in
es
test
out
cmp
xor
jae
lods
sbb
push
push
mov
loope
repnz
aad
ljmp
add
sbb
add
fidivs
movsl
fistpll
shl
cmp
fisubs
xchg
pop
add
enter
mov
or
mov
dec
cmpsb
jmp
adc
dec
cmp
or
lcall
fbld
repnz
lods
xor
sbb
popf
imul
js
xor
push
push
testb
or
arpl
icebp
add
sarb
adc
fimuls
push
mov
fstp
jmp
xor
mov
loope
pushf
dec
xor
ja
cmp
loopne
inc
ss
xchg
xchg
inc
sbb
mov
lret
sub
movsl
insb
mov
and
lea
cltd
jae
icebp
sub
fs
push
lret
add
ficoml
mov
or
lea
dec
arpl
sbb
mov
sub
nop
xor
sub
xchg
idivl
sub
sub
add
push
mov
mov
mov
pop
jns
push
insb
inc
push
pop
int
hlt
inc
iret
sbb
sbb
rolb
sub
jne
fcomps
pop
jo
ss
shll
dec
adc
lock
lock
mov
enter
int3
jmp
dec
fisubrs
out
xchg
dec
xor
and
xor
inc
in
loopne
mov
enter
sbb
daa
pop
push
and
and
push
rcrb
inc
add
pop
rcl
push
pop
popa
push
xlat
aaa
add
in
in
xor
push
lret
iret
std
inc
in
daa
push
adc
imul
push
and
popa
call
push
push
adc
lea
loopne
sbb
mov
incl
pop
dec
or
loopne
arpl
data16
icebp
inc
sub
lea
hlt
xchg
adc
xlat
les
mov
mov
and
inc
jb
fdivs
loope
cmp
imul
mov
push
lret
gs
jno
les
stos
cmpsl
sbb
call
sahf
fistl
lahf
mov
pop
sti
in
dec
adc
push
lods
xchg
sub
in
sub
shrb
sub
ret
arpl
xchg
fdivl
or
lea
pop
hlt
mov
mov
imul
int3
inc
and
jnp
lea
fbld
in
pop
push
shr
pop
pop
movsl
aam
jne
shll
dec
enter
xor
push
add
jnp
insl
daa
sbb
ret
push
das
fcoms
fisubrs
mov
xchg
push
sbb
sbb
and
js
inc
or
add
xchg
into
addr16
jns
mov
xchg
xchg
and
fiaddl
sub
jo
or
mov
mov
andb
jmp
push
cmpsl
adc
push
xor
xchg
push
int
mov
out
fadds
fs
cmpsb
adc
aam
mov
jmp
xchg
sub
lahf
mov
je
imull
clc
mov
xchg
or
leave
repnz
lea
mov
mov
mov
mov
jle
jb
mov
sahf
pop
xchg
test
fimull
stos
sbb
fldcw
mov
mov
dec
xchg
dec
pusha
leave
sbb
insb
sub
pushf
pop
inc
test
xor
adc
loope
daa
jle
adc
fistpll
cmpsb
adc
mov
icebp
fwait
int3
jo
in
jp
push
lods
and
mov
aad
ss
dec
sub
arpl
mov
mov
addr16
hlt
ljmp
in
mov
into
cmp
cltd
mov
dec
ljmp
mov
ja
cli
nop
jmp
pop
pusha
jle
xor
pop
aad
in
in
jmp
mov
adc
mov
fldcw
pop
or
out
xchg
and
lea
lock
out
cmp
decb
aad
popf
pop
pcmpeqd
arpl
sub
scas
insl
cmp
jae
jo
mov
sub
repnz
jae
jb
fs
bswap
add
xor
jne
loope
jmp
outsl
lods
mov
dec
mov
call
inc
int3
in
out
xchg
test
ja
pop
dec
and
adcb
iret
sbb
and
sbb
mov
mov
sti
fistps
push
jp
fs
inc
sub
in
dec
sub
dec
loop
xchg
mov
dec
aad
xchg
nop
pop
dec
data16
mov
push
push
out
inc
stc
jnp
and
sahf
sti
xor
lea
sub
iret
ds
adc
cli
add
imul
negb
and
pop
sbb
imul
add
jno
add
fnstsw
divl
pop
jae
or
push
add
xchg
inc
sbb
in
js
lret
lea
push
loopne
loope,pt
or
pop
fwait
int
arpl
inc
fdivs
dec
sub
mov
out
ljmp
ja
out
bound
movsb
int3
js
shll
lea
add
lcall
aas
sarl
xchg
loop
shll
addb
sub
jnp
add
js
sub
xlat
insl
sub
xor
in
cwtl
insb
lock
aad
mov
and
imul
mov
jmp
push
push
and
xchg
call
ljmp
scas
push
sti
jle
sub
lea
mov
sbb
cmc
sbb
push
pop
sub
cmp
lods
in
lea
aaa
cmp
mov
insl
xchg
jbe
mov
and
daa
mov
pmullw
insb
jno
pushf
icebp
ljmp
push
es
je
jbe
repz
loope
mov
sbb
loop
mov
xchg
cmp
mov
add
sub
mov
add
fbld
dec
push
mov
jae
fisttpl
jns
push
enter
mov
pusha
xchg
cmp
jmp
pushf
loope
and
leave
fmuls
loope
call
add
mov
out
stos
pop
lea
jo
sbb
in
add
ljmp
fwait
mov
jnp
fcom
xorl
push
and
pop
jmp
cmp
adc
push
dec
push
mov
gs
pop
in
xchg
pop
mov
aam
dec
test
mov
pop
xor
fisttps
adc
sub
mov
sbb
daa
sbb
jmp
popf
icebp
cmp
xchg
aam
lea
imull
push
adc
jno
in
cmp
gs
repz
jg
jb
xorb
xor
mov
dec
push
mov
push
gs
dec
add
arpl
outsb
sarb
push
jno
mov
pop
jp
movsb
mov
bnd
sarb
jp
add
lret
nop
stc
jl
cmp
lods
adc
add
dec
push
flds
pop
mov
outsb
push
adc
push
xor
mov
loope
gs
ret
adc
in
jo
mov
hlt
scas
test
js
sbb
xor
cld
lds
ds
pop
push
es
daa
xor
in
mov
pop
and
mov
mov
pop
and
iret
jmp
dec
sbb
mov
idivl
movsb
xor
xor
out
lahf
push
mov
xchg
xor
inc
jg
mov
mov
icebp
popa
enter
push
in
and
lea
or
cmpsl
inc
xor
sbb
mov
and
fwait
adc
dec
push
jp
jp
lea
mov
mov
sbb
mov
pop
mull
lds
mov
inc
xchg
lret
xchg
js
sub
mov
mov
cli
add
sub
mov
mov
sub
mov
xchg
jb
lea
insb
lahf
mov
xchg
dec
pop
pop
add
jns
and
loope
pop
insb
daa
pop
lret
jnp
aam
or
xor
icebp
inc
xorl
sbb
cltd
and
in
jbe
push
or
pop
lea
cmpsl
leave
pop
cmpsb
jno
and
rclb
adc
je
fcomps
out
sbb
lret
push
jle
stos
cli
xor
in
ljmp
sahf
stos
xor
mov
scas
push
jmp
cmc
mov
xorb
push
xor
sahf
inc
mov
ljmp
aas
mov
mov
jg
orb
inc
mov
push
or
pop
jle
or
mov
rcr
dec
sub
xor
inc
in
arpl
xchg
xchg
insb
jo
int3
rorl
push
jmp
int3
in
jge
push
push
sub
loop
cmp
nop
and
and
jmp
fiadds
addr16
mov
dec
test
xchg
int3
mov
filds
mov
jae
jno
push
mov
call
out
cld
les
inc
mov
xchg
adc
call
mov
jl
test
scas
popf
pop
out
lods
lea
jge
cmp
outsl
mov
sti
sbb
mov
mov
add
jge
clc
cli
xor
mov
xchg
add
lcall
movsl
popa
es
mov
mov
add
leave
push
mov
sub
mov
lds
or
pop
sub
lcall
push
push
sub
or
bound
popl
subl
jmp
repnz
out
pop
or
xor
shrl
popa
insb
xchg
std
push
jmp
and
mov
addr16
sti
pop
add
mov
loopne
jbe
xchg
popf
aam
xor
push
fsubl
pop
jns
cmc
mov
js
dec
xor
int
mov
inc
sub
push
lds
pop
shrb
std
add
push
icebp
shll
adc
xchg
adc
or
xchg
adc
cmpb
mov
and
or
mov
inc
xchg
in
insl
inc
negb
push
add
mov
adc
jno
hlt
js
sar
loope
sub
jecxz
mov
dec
push
jbe
jge
or
sub
and
push
push
push
pushf
and
dec
out
ja
inc
add
sub
mov
mov
lock
pop
or
jl
cs
adc
pop
sbb
mov
hlt
movl
add
bound
xor
sub
inc
mov
in
or
push
jns
lods
cwtl
mov
push
mov
xor
inc
push
popf
add
adc
mov
fnstenv
idivb
insl
push
in
movsl
dec
mov
mov
add
test
stos
test
ret
mov
pop
gs
jnp
push
call
and
sbb
mov
cmp
push
mov
or
cld
arpl
adc
jbe
jne
fcmove
test
bound
inc
xor
lcall
mov
xorl
jle
cmpsb
loopne
push
mov
inc
push
scas
push
mov
inc
push
int
xor
shlb
gs
icebp
pusha
push
loop
test
bound
call
cmp
repz
jge
cwtl
xor
xchg
sub
sbb
dec
es
push
in
xchg
arpl
pop
cltd
push
add
cmc
sub
leave
sub
pushf
shlb
pop
mov
scas
stc
insb
iret
cwtl
add
mov
jecxz
mov
sub
fnstenv
sub
ja
mov
push
add
mov
cs
mov
and
pmulhrw
inc
jmp
ds
inc
adc
fisubs
mov
test
or
scas
in
jle
cmp
xor
xor
imul
cmpsl
pop
scas
jne
fadds
es
gs
and
shrb
call
mov
mov
outsb
dec
imul
out
xchg
jns
xorb
mov
inc
js
push
or
outsl
mov
movsb
sbb
inc
mov
sub
fdivrp
and
aam
push
or
mov
fcoml
or
xor
sbb
mov
prefetchwt1
pop
dec
cmpsb
loopne
js
pushf
mov
or
iret
and
je
jp
push
sub
xchg
ret
push
out
filds
bound
and
test
dec
mov
into
mov
mov
mov
js
sub
insb
cmp
push
bnd
nop
ficoms
mov
cld
and
orb
mov
jg
fcomip
daa
data16
lods
xor
cmp
mov
fcomps
lcall
mov
leave
xor
cmp
mov
mov
loop
xchg
cmpsl
enter
mov
xchg
push
dec
jbe
inc
std
and
in
mov
inc
movsb
bound
sbb
scas
jne
sbbl
decl
dec
jae
push
cmp
mov
loopne
inc
cmp
js
pop
nop
ljmp
fdivr
les
andl
pop
incl
jne
and
scas
scas
popa
mov
mov
shl
mov
adc
mov
mov
add
inc
arpl
inc
inc
aam
push
data16
or
inc
and
sub
int
push
xor
sbb
mov
push
inc
stos
add
std
lods
andb
insb
jne
nop
fcompl
mov
adc
mov
dec
mov
in
xor
sbb
add
pop
ret
arpl
cmp
push
out
aaa
mov
mov
sbb
das
xchg
out
sub
std
insb
sbb
loope
add
pusha
mov
dec
inc
insl
xchg
aas
xor
dec
add
pop
mov
mov
adc
fiadds
call
popa
loope
in
in
js
aad
mov
mov
mov
adcl
jns
loopne
dec
push
fcomps
cwtl
or
push
fbld
cwtl
or
push
push
jmp
cmp
outsl
jae
pop
imul
fldcw
jno
pop
in
mov
stos
icebp
mov
int3
std
mov
jge
lahf
dec
lea
xor
jbe
dec
movsb
lret
jo
mov
inc
std
mov
iret
fwait
scas
insb
repz
ljmp
out
dec
aad
clc
out
add
in
daa
sbb
cmp
dec
or
in
arpl
sub
mov
lods
bound
mov
push
cmpl
nop
imul
aas
aaa
or
in
je
and
fsubs
or
pop
cmp
dec
push
dec
xchg
xchg
int3
int
loop
in
sbb
inc
sbb
call
out
dec
dec
and
mov
jp
dec
mov
leave
jae
lea
jg
es
mov
pop
mov
stos
sbb
ret
sbb
subl
frstor
fimull
dec
or
mov
jo
enter
push
stos
ret
mov
jmp
dec
jecxz
popf
mov
and
scas
sub
inc
mov
inc
scas
mov
adc
and
cmpb
sub
clc
xor
mov
mov
fistpl
inc
fsts
cmp
lods
mov
or
inc
ror
add
imul
cmp
lcall
sbb
popa
add
pop
mov
xchg
lds
ret
mov
cmp
insl
cmp
outsb
push
pop
sbb
and
sbbl
insl
pop
icebp
in
xchg
or
push
push
mov
sub
cmp
inc
ljmp
bound
mov
sub
popa
xchg
arpl
stc
jp
iret
lds
pop
and
jg
shll
push
sub
mov
nop
mov
ret
sahf
lahf
int
repnz
mov
das
mov
ja
xor
and
pop
xor
jle
stc
lock
je
dec
int
push
xchg
pop
and
je
push
push
push
mov
pop
repnz
clc
mov
and
xchg
jp
sahf
orl
fmul
hlt
mov
push
sub
inc
ja
mov
jecxz
mov
lret
xor
jmp
divl
jns
mov
pop
ss
cmp
stc
push
jae
or
lock
push
jecxz
mov
insb
insb
push
rcll
sahf
test
jbe
cs
adc
jmp
jbe
xchg
imull
pop
pop
insl
or
dec
or
daa
or
fildll
int3
dec
pop
and
jl
in
push
lcall
sahf
lods
add
orb
mov
mov
xor
mov
push
inc
jmp
dec
pusha
sahf
hlt
jge
xchg
sbb
fdivrs
cs
inc
pop
outsl
pop
inc
in
add
xor
inc
sahf
lods
jbe
and
dec
daa
or
js
in
pop
push
inc
push
sub
arpl
push
or
mov
nop
xchg
mov
mov
enter
pop
adc
imul
fisubrs
lods
ds
mov
lock
pop
and
imul
leave
loopne
dec
xchg
push
in
pusha
inc
push
sub
push
mov
dec
stos
fwait
or
sub
cmpb
mov
push
call
or
jg
clc
sbb
jno
xchg
ja
sbb
scas
icebp
lods
fistpll
push
sbb
rol
pop
sahf
ss
fiadds
leave
inc
in
and
outsl
jo
mov
das
cltd
jle
sbb
inc
or
idiv
or
dec
xor
lock
xor
shl
cmp
lea
pop
bound
jno
and
sub
and
cmp
xchg
mov
jl
out
imul
pop
adc
sub
pop
daa
push
sbb
pushf
sti
icebp
push
iret
pop
pop
jg
aad
cmpsb
loope
imul
fdivrs
xchg
repz
add
shrl
das
out
out
dec
add
lea
ret
dec
adc
mov
mov
mov
bound
add
jb
mov
sub
mov
ret
icebp
sbb
cmp
adc
sbb
push
xor
sbb
push
mov
cmp
pop
fisubs
aam
pop
and
push
fwait
push
arpl
xchg
adc
jge
dec
out
pop
jno
mov
xor
inc
lea
sub
sub
sbb
rorl
push
mov
cmp
lea
fstps
ret
jl
fdivrs
shlb
sub
sti
push
mov
pop
mov
sub
add
mov
sub
or
mov
ja
fmulp
test
in
or
mov
sbb
dec
mov
push
cmp
clc
data16
popf
cmp
mov
push
outsb
pop
leave
out
xchg
pop
mov
aam
in
popa
jae
and
mov
ret
pop
iret
xchg
mov
ja
or
sbb
loop
and
adc
rcrb
jmp
int3
adc
cld
dec
lret
pop
pusha
imul
test
pushf
adc
scas
mov
test
sbb
or
sub
xorl
pop
movsb
sub
clc
aad
popa
data16
xchg
in
cmp
xor
sahf
jnp
stc
pop
cli
pop
xlat
loop
inc
and
ja
and
inc
or
sbb
shlb
stos
les
aad
or
xchg
mov
push
and
inc
scas
cltd
lods
dec
sbb
ret
mov
in
fsts
mov
aas
pop
mov
rclb
mov
mov
inc
ss
push
fsubl
mov
in
jge
loope
lea
and
mov
in
jns
lea
and
arpl
cmp
mull
xchg
adc
fisubs
mov
lret
mov
aad
imul
icebp
add
and
xlat
fstpl
shrl
repnz
mov
cmpsb
inc
xor
rclb
or
roll
stos
int
jmp
int
loop
lods
dec
push
jmp
push
jge
jns
es
mov
mov
inc
sub
enter
add
cmpb
push
ret
add
fldl
xor
and
daa
bound
jl
push
icebp
jecxz
xchg
xchg
outsl
or
das
sbb
popa
inc
scas
jno
mov
dec
lret
jnp
push
inc
call
mov
icebp
fisubrl
lods
les
cwtl
push
fs
jns
or
jne
in
cwtl
mov
lock
icebp
mov
mov
xchg
cmp
dec
mov
mov
push
mov
jnp
inc
lds
rcrl
mov
mov
add
test
xor
mov
cli
jo
sar
repz
repnz
mov
in
xchg
in
cld
mov
inc
fnstenvs
xor
cmpsl
add
push
insl
mov
int3
push
and
stos
cld
sarl
test
sbb
and
mov
ss
inc
mov
or
inc
ret
adc
xor
mov
mov
add
jns
fbstp
mov
mov
test
or
jg
xor
stc
or
insb
lret
sub
sbb
in
pushf
gs
or
cltd
mov
cmc
mov
dec
shll
cli
adcl
push
aas
pop
fnsave
dec
mov
arpl
movsb
lods
pop
mov
in
jno
adc
lea
mov
mov
in
out
data16
dec
pop
popa
jbe
fidivl
pop
mov
lret
sbb
lods
jecxz
xorl
mov
icebp
rorb
call
lea
stos
mov
stos
push
and
pop
sub
pop
and
cmpsl
mov
lea
xor
cmp
or
in
in
sub
sahf
inc
xor
fistl
xor
jl
test
jo
sub
jbe
mov
sbb
mov
or
push
orb
sub
mov
sub
nop
add
ss
jecxz
imulb
dec
stc
inc
popf
movsb
mov
stos
hlt
push
or
cmp
pop
pop
mov
mov
ret
imul
and
loop
imul
push
or
xchg
and
jge
hlt
sbb
xor
mov
push
add
mov
std
push
push
rcrb
jg
mov
lcall
movsl
outsb
loope
xchg
mov
mov
call
lea
cmp
fmull
push
jbe
ret
popf
mov
cmpsw
mov
inc
sbb
jmp
pushf
sbbl
dec
push
shll
in
xchg
or
dec
sbb
imul
mov
xchg
mov
and
loop
sarb
testb
lret
and
fcmovbe
popa
pop
cmc
sbb
mov
mov
loopne
cmp
cmp
arpl
outsb
or
sahf
pop
outsl
lock
jmp
aad
sub
mov
jp
adc
divb
incl
and
lods
int3
les
mov
mov
mov
in
in
mov
and
xchg
insl
jl
jno
xchg
or
data16
add
leave
add
enter
ret
xor
and
int3
stc
out
mov
and
jge
addr16
insl
inc
push
in
add
sbb
push
push
sub
mov
push
inc
xchg
test
and
ret
rcrl
xchg
push
cmp
xchg
jo
in
xchg
movsl
pop
insl
shlb
sbb
ret
adc
inc
push
js
sbb
sub
aad
lea
dec
fnsave
mov
push
push
jbe
push
cmc
in
cmpsl
cmpb
add
rcrb
and
fucomip
mov
mov
imul
or
mov
shl
dec
lcall
loopne
mov
push
scas
mov
in
ljmp
lock
mov
xor
insb
clc
sahf
and
iret
insb
ljmp
int
sbb
out
mov
in
xlat
and
hlt
dec
pusha
arpl
xadd
or
negl
in
xchg
xrelease
mov
mov
data16
push
jle
fistpll
scas
sbb
xor
daa
jge
sub
inc
dec
and
daa
not
or
or
xchg
jae
add
mov
test
in
outsl
scas
pop
lea
leave
sub
or
adc
cmp
push
je
push
or
imul
mov
enter
mov
xor
push
loope
push
sbb
rol
call
fs
std
inc
arpl
inc
mov
imul
xor
cmc
mov
clc
loope
xchg
aad
jl
icebp
hlt
xchg
aad
xor
add
mov
mov
xchg
daa
mov
add
jo
lea
jmp
loop
repnz
mov
xchg
fldl
and
jge
arpl
je
ret
mov
push
mov
jne
mov
push
pop
aad
xor
jle
jbe
mov
add
pop
arpl
adc
inc
test
out
xor
mov
lock
lock
test
cltd
push
bswap
shll
mull
lea
jns
mov
int3
scas
mov
mov
test
bound
lds
jno
insb
or
std
daa
jne
and
nop
mov
xor
xchg
fnstenv
lea
or
dec
loop
sub
jle
and
sub
pusha
mov
cmp
ret
arpl
imul
jmp
je
out
addr16
popf
ljmp
pop
xchg
lock
mov
or
ljmp
shl
inc
dec
in
mov
js
jae
jbe
adc
jp
mov
outsl
cmc
lock
notl
bound
cltd
cltd
or
xchg
lea
or
mov
pop
mov
cli
pop
loope
add
and
mov
sbb
shr
lods
pop
mov
pop
jnp
fs
fistpll
bound
and
mov
cmpsl
mov
xor
mov
or
lods
mov
out
test
lea
push
fdivs
xchg
es
mov
shlb
fs
mov
das
xor
jae
pop
add
insb
push
lret
or
pop
sbb
jmp
jns
int3
adc
lea
iret
sarl
dec
in
aad
fdivl
cmp
dec
adc
mov
adc
or
mov
or
shr
jno
jmp
jne
sbb
data16
mov
iret
ds
jne
mov
mov
or
sub
jo
push
mov
outsl
lea
jnp
and
adc
int3
mov
push
mov
out
and
popf
pop
lret
sarl
add
out
or
incl
dec
sub
add
shlb
pop
mov
loop
repz
cmp
leave
rorb
mov
ljmp
or
push
les
sti
sub
sbb
add
or
mov
cmp
idivb
scas
arpl
lea
jecxz
ds
in
pushf
repz
pop
adc
xor
pop
and
imul
pop
mov
push
push
test
mov
stos
sub
imul
fnsave
xlat
mov
nop
int
lods
in
call
xchg
cmp
push
jge
xchg
cmc
or
popf
xchg
inc
data16
jge
and
mov
sub
in
or
es
sbb
and
sbb
lea
popf
call
adc
xchg
fnop
xchg
dec
iret
test
inc
imul
or
lret
cli
scas
dec
aas
lods
adc
inc
xor
test
cmp
popa
je
or
ja
ret
push
out
call
and
insb
pop
cld
das
and
dec
push
scas
jp
xorb
adc
lea
fs
out
nop
adc
sub
cmp
xchg
data16
or
dec
jp
mov
pxor
fiaddl
mov
pusha
mov
stos
jo
push
mov
aam
mov
test
ret
daa
push
jno
mov
in
loope
adc
pop
testl
shll
push
push
iret
push
cmp
and
pop
data16
pop
cmp
pop
gs
and
fcompl
js
push
or
push
lea
jp
mov
sti
in
xchg
add
and
aaa
sahf
movzbl
jl
jae
fnstenv
adc
add
pop
jmp
sub
arpl
cli
add
dec
sbb
sub
loope
pusha
hlt
stc
sbb
sysenter
push
dec
repnz
lea
sub
fldenv
pop
jmp
into
push
xchg
lods
xchg
xchg
xchg
inc
mov
lods
mov
nop
adc
cmpsb
ljmp
adc
cwtd
mov
jmp
pop
jg
fcoml
xchg
jo
lea
in
bound
add
jno
pop
ss
xchg
inc
fdivs
in
pop
pop
adc
in
add
xchg
push
jecxz
dec
push
adc
outsl
or
pop
lock
inc
pop
push
xor
data16
je
aam
adc
lret
ret
stos
hlt
sub
stos
sti
mov
mov
xlat
fadd
addl
fsubl
xchg
xor
adc
out
dec
pop
add
insl
pushf
xor
mov
outsl
idivb
sub
inc
fsts
scas
lea
lahf
fdivl
lods
xchg
xor
mov
xchg
movsl
xlat
das
jmp
rcrl
or
lea
push
jge
mov
push
add
outsl
cmp
std
sbb
mov
clc
adc
aas
lret
fmull
es
faddl
mov
sub
fbstp
testb
fsts
mov
mov
xor
cmp
es
and
aam
or
pop
adc
fdivrs
lock
sti
mov
shlb
repnz
mov
movsb
lcall
and
je
inc
cmp
inc
mov
insb
repz
aaa
or
push
pop
cmp
bound
data16
sub
test
push
cmp
mov
insb
mov
ficompl
hlt
fs
das
sbb
hlt
pop
sub
pushf
loope
std
cmpsb
pop
je
dec
xorb
inc
aaa
lea
daa
int3
shrl
aad
ret
clc
in
dec
test
sar
arpl
pop
mov
imulb
subl
addb
adc
std
mov
shrl
and
aas
jge
jmp
mov
les
enter
lods
out
sbb
ja
test
dec
xor
fistps
lods
mov
mov
and
ja,pn
loop
sahf
cli
int3
xor
xchg
push
lds
sbb
jnp
and
cmp
dec
add
loop
cmc
mov
outsb
xor
scas
std
pop
daa
adc
adc
fisubrs
mov
adc
imul
jae
sti
ljmp
outsb
adc
sub
stos
jo
mov
jp
insb
vminpd
fnstcw
or
rorl
dec
push
xchg
jle
frndint
mov
or
mul
jmp
xchg
das
cmp
pop
mov
shlb
and
jle
mov
push
enter
push
lahf
bound
xchg
or
or
push
mov
mov
and
xorl
sbb
add
notb
mov
ret
jmp
shlb
popf
ja
dec
jg
xchg
add
mov
je
notb
jbe
sbb
sbb
dec
stc
fidivrl
testb
adc
sub
call
mov
ret
dec
fsubrs
push
dec
imul
cmpsl
inc
xchg
or
cmp
and
mov
add
sub
xor
mov
jne
int3
imul
lea
add
hlt
pushf
xor
mov
das
push
fdivs
adc
mov
ljmp
mov
cmp
push
mov
cmp
stos
mov
pop
xchg
and
loopnew
push
xor
lods
sub
xchg
gs
sub
sbb
out
jle
mov
andb
iret
scas
outsl
in
lea
mov
rol
and
mov
out
pop
mov
mov
cmp
test
pop
sti
out
sbb
sub
sbb
pop
test
hlt
sahf
mov
pop
imul
sub
cmp
mull
or
js
xchg
mov
test
popa
adc
inc
sbb
mov
mov
out
sub
lock
lret
je
adc
mov
sub
dec
mov
mov
iret
in
xchg
aad
shl
into
gs
xchg
dec
sub
cmp
or
jg
push
dec
xchg
insb
and
inc
mov
inc
jnp
push
popa
sahf
js
insb
rorb
mov
dec
adc
into
pop
in
sub
xor
popl
insl
jp
in
cmpsb
in
inc
xor
ss
mov
push
mov
and
out
pusha
pop
push
xor
pop
mov
movsl
arpl
and
push
repz
and
jle
inc
sub
fdivrs
gs
std
mov
fimuls
inc
rolb
mov
out
ds
cmp
sbb
jl
rcrb
shll
mov
cmp
and
rcrl
test
sti
in
pop
mov
lea
mov
push
pop
out
sbb
push
dec
mov
pop
cltd
jo
not
or
iret
in
mov
gs
cmc
ficoml
inc
push
dec
cmc
lea
ja
mov
mov
cmp
lret
inc
sub
mov
subb
ficoms
ret
mov
jle
lods
xor
mov
lea
in
inc
mov
pushf
xor
mov
xchg
aad
xor
sbb
inc
sub
js
mov
hlt
aad
pop
inc
pop
jmp
pop
imul
out
and
pop
mov
sub
test
mov
or
xlat
add
out
xor
and
sbbl
scas
jb
cmc
into
fcoms
je
mov
jnp
xorl
mov
mov
sub
inc
loop
pop
mov
mov
xchg
pop
ret
shlb
xchg
adc
outsl
cs
jmp
sbb
mov
add
dec
jmp
push
sub
mov
test
mov
test
popf
jp
sti
sub
cmp
loop
and
lds
mov
dec
sbb
popf
add
rclb
mov
mov
gs
or
adc
jne
dec
jle
bound
lret
fcom
push
cmp
lods
lcall
lds
data16
dec
sbb
fisttpl
arpl
fs
and
or
jle
dec
stos
jae
mov
shll
mov
mov
lods
inc
mov
cmp
test
dec
subb
les
xor
mov
loopne
adc
mov
mov
sbb
xor
cwtl
sbb
sub
pop
xor
dec
clc
fisubrs
mov
fsubp
push
orb
cmp
inc
mov
or
and
cli
rolb
mov
dec
push
lds
cs
push
add
push
xchg
rcll
std
add
adc
jno
mov
scas
sub
int3
mov
push
push
cltd
inc
fnstenv
sbb
xor
int3
jae
mov
inc
add
outsl
jno
push
adc
or
or
stc
mov
mov
loop
and
mov
jae
pop
jl
dec
sub
xor
adc
add
dec
xchg
fdiv
dec
and
sarb
cli
loope
mov
mov
and
mov
data16
lea
mov
add
sub
lea
mov
sbb
orb
pushf
stos
cli
dec
insb
and
dec
test
sbb
test
pop
add
icebp
shlb
and
pushf
adc
clc
adc
sti
in
sbb
pop
dec
mov
stc
testl
sbb
mov
cmp
cmc
mov
mov
cmp
push
sub
jge
mov
sub
fbld
je
push
jo
lea
imul
jns
fisubs
rorb
ror
pop
pop
lea
mov
and
mov
pusha
push
add
mov
stos
popa
jae
or
and
sti
fcomip
lea
pop
adc
fdivs
loop
cmp
push
and
cmp
rorl
adc
outsl
rorl
mov
ud1
into
sahf
xorb
push
adc
fwait
insb
shlb
test
loop
fcomps
sub
inc
ljmp
jmp
cli
or
ljmp
aad
push
sub
sub
cmpsb
ret
int3
and
ds
div
mov
cmp
sbbl
repz
jge
push
xor
mov
cmp
stc
test
sub
push
push
dec
xor
ret
xor
in
addl
loop
and
mov
iret
sbb
xor
mov
push
leave
fldl
je
add
fidivl
xor
in
aaa
cli
dec
cmp
cli
fcoms
adc
cmpsl
sub
je
xor
adc
and
je
cli
enter
or
mov
cmpsl
pop
movsb
and
jmp
jns
stos
and
fld
xchg
dec
adc
repnz
adc
cmp
mov
jp
mov
mov
push
mov
xchg
xor
loope
cmpsb
fsubrl
loope
mov
stos
sbb
repz
or
xor
insl
shl
sub
push
mov
test
sbb
xchg
cmc
xchg
mov
out
insl
push
mov
and
jnp
xchg
faddp
movsl
mov
xchg
pop
and
leave
sahf
push
xor
mov
shl
imul
fdivrl
sbb
fstpt
daa
xchg
shlb
out
xchg
bndldx
insl
rolb
popa
addb
mov
push
and
sahf
daa
nop
movsb
adc
loop
nop
pop
xchg
inc
lods
xchg
loop
push
dec
mov
in
add
add
mov
mov
shl
cltd
in
and
mov
xlat
xor
icebp
in
fnstsw
adc
xor
adc
push
mov
loop
ljmp
jns
ret
add
pop
sbb
cwtl
idivb
or
inc
stos
jmp
in
and
ret
cmp
adc
mov
ret
sbb
insb
arpl
jnp
adc
sbb
repnz
shlb
mov
sub
imul
aaa
fimull
mov
sbb
jnp
jg
shll
fdiv
dec
ret
inc
fstpt
cmp
sahf
pushf
xchg
ret
aaa
add
push
xchg
mov
imul
lock
negl
data16
jl
popf
popa
mov
das
mov
int3
push
mov
repz
sub
jge
and
cmp
jae
aam
sub
pop
inc
jns
fisubrs
imul
or
inc
aam
lret
push
cmc
lea
and
jmp
dec
push
test
sbb
ret
sbb
divl
and
mov
and
loopne
cld
xor
lds
out
xchg
popa
nop
stc
scas
sbb
mov
icebp
loope
push
pop
aad
imul
data16
push
imul
cmp
jg
adc
mov
out
push
shrb
jno
fs
adcb
fdivr
push
pop
pop
pop
rol
int
adc
add
adc
sahf
and
lahf
mov
sbb
repz
dec
fsts
insl
mov
xchg
mov
stos
add
or
inc
inc
mov
sub
bound
mov
dec
or
sbb
pop
call
sbb
loop
sub
mov
xchg
mov
mov
clc
pop
scas
mov
scas
xlat
inc
clc
movsl
out
dec
jno
je
in
test
inc
mov
in
cli
and
cwtl
and
insb
xor
sahf
xor
dec
bound
push
inc
pop
or
mov
mov
test
lea
sub
std
sub
xor
mov
nop
and
and
adc
lds
stos
icebp
sub
lcall
xchg
mov
xor
or
iret
pop
cld
cmc
push
mov
not
loope
stos
arpl
lea
ja
adc
cmp
stos
out
mov
sub
std
push
arpl
sbb
mov
cmp
sbbb
gs
loop
adc
mov
jg
fldenv
not
sub
in
xchg
mov
std
add
jp
shll
je
arpl
popa
dec
push
cmpsl
fadds
es
flds
filds
int3
loopne
mov
sbb
and
adc
pop
sbbl
dec
add
bound
movsb
mov
fwait
mov
pop
mov
adc
icebp
or
or
xchg
fdivl
pop
frstor
push
mov
lret
lret
shrl
dec
cmp
scas
sub
jmp
sahf
add
dec
in
push
jae
roll
inc
bound
in
jg
dec
sub
hlt
sbb
mov
jne
jo
mov
sub
xchg
push
push
lock
jae
pop
dec
mov
cmc
popf
in
mov
xchg
dec
xor
adc
dec
loope
div
mov
mov
cmp
xchg
mov
xorb
fstps
mov
add
mov
jp
icebp
dec
lea
sub
mov
sub
rcrl
mov
push
and
add
arpl
push
add
movsl
shl
clc
mov
popf
xchg
fcomi
jbe
icebp
repnz
outsl
pop
jns
in
sbb
rcll
inc
sbbl
stos
pop
mov
mov
rclb
adc
mov
dec
jae
mov
pop
sub
cld
les
sub
dec
sarb
popa
adc
rolb
sbb
dec
mov
jmp
xor
cmp
imul
xor
adc
lods
pusha
cmc
out
pop
cmp
je
jmp
jae
mov
xor
mov
fbstp
xchg
shll
into
pop
inc
lret
mov
fs
in
sub
dec
repnz
test
push
jo
mov
mov
mov
and
mov
push
adc
jnp
subb
loop
mov
xchg
xor
movsl
fbld
call
mov
ret
pop
dec
mov
mov
jg
inc
dec
loop
mov
in
jp
mov
test
xchg
adc
cmc
pushf
pop
inc
mov
sbb
testb
push
and
repz
mov
xor
into
inc
jmp
mov
hlt
arpl
out
es
mov
jg
sub
sub
loopne
mov
fmuls
cmp
pushf
add
cmc
xchg
cli
lea
es
cmp
add
jecxz
cmp
push
fcoml
jnp
cwtl
push
and
hlt
dec
test
mov
dec
sbb
sub
test
decl
mov
loopne
repz
icebp
cs
subl
rcll
mov
aas
bswap
dec
cmpsb
test
pop
pushf
rclb
lea
addr16
test
js
jno
pop
fistl
std
dec
insb
mov
rcl
andb
xchg
dec
test
arpl
sub
dec
leave
mov
in
add
imul
jbe
shlb
rcrb
lret
inc
pop
or
stos
mov
ds
clc
and
cmpsl
pop
popa
pop
mov
cmp
and
jg
and
pop
push
addr16
int3
aam
icebp
jge
mov
dec
popa
sbb
sub
mov
mov
jne
popa
rcl
imul
pop
jns
loop
push
stos
jl
adc
push
push
pop
sbb
inc
jp
xchg
cmp
pop
lret
lock
push
pop
jmp
test
pop
mov
mov
cmc
push
fwait
jle
or
dec
in
mov
bound
insl
xchg
mov
mov
push
jp
sub
loopne
adc
imul
xor
mov
das
mov
shl
dec
mov
or
add
jo
pop
mov
push
sub
xor
and
jnp
arpl
clc
aam
adc
fnstenv
rorl
mov
ret
cli
in
xchg
int
push
sarl
push
jl
sbb
sub
mov
call
bound
jp
push
repnz
cli
lret
xorl
int3
adc
jne
or
xchg
addb
outsl
add
dec
and
cli
rorl
cmp
jl
jb
pop
cs
or
mov
mov
jl
adc
mov
push
xlat
push
insb
rorb
aam
and
insl
repnz
inc
sbb
xchg
mov
cs
loope
push
dec
arpl
loopne
outsl
stos
popa
fldcw
jmp
js
adc
mov
push
mov
cmp
push
and
in
punpcklbw
xchg
into
es
jp
jnp
hlt
mov
add
mov
cwtl
sub
dec
subl
movsb
outsl
arpl
int3
add
pop
shrb
sbb
call
xor
roll
iret
aam
out
loop
push
mov
sub
lahf
loop
xorb
mov
sbb
shr
test
push
dec
or
cmp
mov
stc
das
mov
mov
ret
xchg
fbld
pop
pop
ficompl
daa
out
mov
loopne
sub
mov
jle
js
sbb
and
mov
mov
xor
in
inc
fmull
outsb
pop
lret
or
or
jp
sub
adc
hlt
in
pop
cmp
push
inc
in
push
hlt
lock
mov
je
mov
in
pop
out
inc
lret
es
sbb
insl
jmp
sub
cmpsb
addr16
test
aaa
out
in
mov
loopne
ja
aaa
popa
and
fcomps
pop
imul
xchg
inc
movsl
daa
pop
cmp
or
cwtl
add
das
sbb
repz
push
lock
push
enter
cmp
mov
aad
fdiv
stos
call
gs
das
push
cld
dec
jae
or
xor
dec
and
hlt
jb
mov
mov
lret
fcompl
sbb
mov
adc
cmp
cmp
je
jb
sahf
mov
dec
xor
into
cmp
jnp
sti
pop
push
push
ret
jae
rcl
pop
rep
lods
inc
aaa
mov
and
inc
and
jle
sarl
bound
pop
insb
mov
sar
clc
xchg
jns
mov
mov
enter
pop
icebp
sub
bound
adc
out
xor
mov
jge
jmp
pop
lret
fiadds
mov
insb
dec
mov
lock
jbe
sbb
mov
es
enter
dec
ljmp
sub
push
fcomi
jns
sub
es
dec
orb
loope
and
cmp
arpl
cmpsb
bound
mov
ret
int
push
xlat
mov
and
push
in
into
not
int3
in
decl
or
jmp
fimull
mov
jl
cmp
mov
sbb
jo
repz
es
add
xor
fnstsw
sbb
mov
lcall
fstpt
rolb
enter
insb
lea
jbe
sbb
sub
inc
jb
inc
bound
loope
inc
int
or
xchg
popa
lret
push
pop
nop
cmp
mov
gs
adc
xchg
pop
add
mov
lods
inc
inc
xchg
and
lods
add
fyl2x
push
sbb
into
imul
pop
andl
cmpsb
shlb
fsubrl
mov
aaa
test
xor
hlt
icebp
mov
cltd
scas
mov
jns
shlb
shlb
cmp
xchg
pushf
jl
mov
add
ret
mov
sbb
cmp
lods
stos
shr
stc
inc
mov
stos
jne
push
and
loope
add
call
sub
pop
dec
test
jno
mov
pop
xchg
mov
inc
aaa
xor
cmp
in
add
pop
fildl
ficomps
push
and
std
nop
ficomps
insb
mov
xchg
mov
lds
dec
push
push
in
mov
ret
mov
mov
lock
pop
mov
mov
jmp
dec
testl
push
ret
mov
jmp
mov
fadds
faddl
faddl
push
pusha
mov
dec
or
stos
les
adc
test
pop
xor
fcoms
ret
cli
cli
add
and
adc
nop
add
popf
xchg
and
pop
xor
dec
inc
lret
dec
jecxz
insb
sub
bound
push
jno
int
dec
lea
sbb
pop
orb
cltd
hlt
loopne
mov
mov
and
js
mov
adc
add
js
ss
lea
xchg
push
out
jmp
xor
inc
dec
xchg
fs
and
mov
mov
push
ficoms
cli
sbb
mov
aas
mov
push
movsb
subb
lods
push
nop
inc
arpl
jg
insl
test
cltd
das
mov
xor
inc
xchg
cmp
jae
xchg
pushf
sub
in
loope
mov
fldenv
sbb
ret
sub
in
lret
sbb
inc
rorl
mov
jae
and
xor
setne
jge
and
in
adc
loope
jecxz
lods
or
cmp
xchg
mov
std
ret
mov
fadd
push
lea
mov
inc
mov
inc
mov
jns
mov
lcall
or
jo
aam
push
sub
adc
xor
arpl
scas
dec
sbb
push
xchg
or
mov
xor
out
add
jp
jae
data16
lds
mov
fistps
or
and
js
or
pop
aad
shlb
cli
stos
jb
fistps
arpl
jl
xor
cmc
cwtl
mov
sub
jecxz
in
xor
jmp
loopne
dec
mov
nop
jno,pt
sub
dec
mov
js
pop
ja
push
add
leave
andb
dec
js
add
or
push
fldenv
lods
adc
fs
hlt
imul
in
dec
dec
stos
fnstenvs
xor
xchg
je
push
dec
das
dec
jns
and
jnp
add
cmp
or
mov
cmpsb
add
sbb
inc
je
adc
sub
insb
dec
and
ds
dec
jmp
in
add
insl
movl
call
sbb
pop
sbb
mov
lods
xor
dec
addr16
gs
out
pushl
sbb
hlt
stos
mov
xchg
mov
sti
leave
push
repnz
int
cld
cwtl
sbb
jo
mov
shl
adc
pop
mov
rol
in
in
push
insb
sbb
xor
and
repnz
xchg
and
mov
into
sbb
cmp
out
inc
ss
loope
pushf
mov
mov
lahf
testl
dec
js
push
out
cmpsw
ja
mov
dec
inc
fistpll
xor
xchg
fnstcw
adc
insl
cmc
adc
pop
sti
sarl
pop
jns
sbb
sub
sbb
dec
mov
ficompl
and
push
sbb
daa
adc
adc
nop
jmp
lahf
push
outsl
jg
testb
addl
loop
mov
mov
adc
pop
enter
cmc
rolb
or
jp
lods
cmpsb
imul
sbb
dec
out
lds
mov
push
jb
ret
push
rol
enter
in
cmpsl
dec
and
les
mov
sti
aam
cmp
mov
xchg
cmp
sub
push
stos
dec
add
pop
jg
xor
out
dec
data16
movsb
xchg
roll
mov
push
add
or
repnz
add
aad
pop
sbb
aad
popa
sub
je
mov
adc
dec
and
xchg
mov
xor
mov
or
jg
fwait
inc
jno
mov
add
sub
push
sub
push
imul
ret
lea
enter
xor
call
jae
arpl
hlt
inc
cli
and
or
jbe
in
fcoml
pop
mov
hlt
pop
adc
push
inc
sub
data16
lods
and
or
mov
clc
insl
xor
cmp
in
mov
pop
jge
fistpl
mov
roll
jno
icebp
lcall
jmp
or
cltd
or
dec
mov
mov
sbb
test
mov
imul
stos
pushf
jae
repz
out
mov
in
sub
inc
cwtl
fisubrl
sbb
clc
pop
sbb
adc
sbb
mov
mov
xor
sub
or
push
pop
and
dec
insb
dec
add
cmp
out
xchg
push
jno
int3
ja
or
loope
cmp
or
lea
negb
add
cld
rorb
int3
sbb
fsubrs
lahf
or
cltd
in
hlt
outsb
or
pop
mov
jle
loope
ret
adc
jp
fstl
adc
xor
fmuls
aam
add
leave
aaa
aam
mov
arpl
dec
mov
insl
sub
mov
in
sahf
mov
push
push
cmpsl
faddp
mov
sub
test
lret
cmp
sbb
dec
sbb
jns
adc
jne
int3
shl
sub
and
xchg
mov
push
dec
add
and
or
loop
cli
test
ret
lea
pop
ror
test
mov
or
push
cltd
jge
sub
jo
lret
sub
lahf
dec
sbb
inc
pop
ljmp
sbb
push
add
pop
mov
mov
outsl
push
pop
sub
jns
cmp
add
adc
movsb
pushf
jge
add
loope
mov
dec
loope
test
mov
lea
rorl
push
sub
adc
scas
lods
xor
jbe
loopne
std
xor
mov
sarl
inc
xchg
imul
mov
jg
out
insl
repz
in
pop
mov
sar
push
dec
nop
cmp
sbb
inc
or
popf
mov
jl
mov
xchg
popa
adc
popa
mov
pop
mov
lret
inc
into
aaa
pop
lret
in
fimull
cwtl
and
js
mov
push
mov
daa
leave
movsb
mov
sub
push
inc
xchg
popa
or
mov
xor
mov
and
hlt
lcall
fistpl
dec
rep
cmp
mov
mov
je
jle
out
ja
pop
sub
in
push
push
je
lock
mov
sub
or
or
sbb
xor
add
xor
cmp
dec
push
jg
mov
sbb
mov
out
pusha
in
pop
sti
daa
mov
mov
fdivs
xchg
mov
sbb
lock
ret
mov
sub
mov
dec
inc
in
push
xor
ret
add
mov
ret
lea
push
mov
int
dec
mov
mov
je
in
mov
int3
xchg
loopne
xor
push
sbb
lea
dec
sbb
test
fistpll
pop
fdivp
jmp
inc
out
imul
push
dec
pop
pop
lods
xor
fisttpll
push
cld
scas
sub
cmp
inc
out
xor
cmp
xor
push
insb
lea
lret
xor
dec
fdivl
sbb
ss
insb
mov
sbb
cltd
cwtl
pop
cmp
adc
insl
mov
or
cld
push
dec
push
add
adc
mov
dec
add
in
dec
xor
test
pop
jnp
mov
call
lods
in
dec
cmp
xor
test
cmp
xchg
inc
lea
ja
bound
inc
xchg
cwtl
mov
xlat
icebp
popa
and
sahf
fisubrs
ss
cwtl
mov
adc
insb
and
dec
mov
mov
or
fbld
sti
or
pop
enter
mov
or
imul
hlt
lock
mulb
sahf
shlb
xchg
sub
jns
jecxz
mov
xchg
lea
insb
stos
xor
and
jmp
sbb
jecxz
inc
xchg
and
mov
lcall
ss
jl
leave
inc
xor
aaa
pop
and
xchg
push
push
xor
aad
inc
lods
cmp
bound
sbb
imul
sar
aad
into
pop
fnstsw
add
pop
xor
mov
cmp
cwtl
xor
push
jns
jbe
pushf
lea
das
jne
int3
sub
ret
scas
mov
imul
adc
adc
cmpsl
fimull
aad
bound
gs
clc
cmp
ss
aaa
mov
sbb
xor
pusha
and
ljmp
arpl
sbb
or
push
lds
int
adc
sbb
sbb
es
or
rcrb
into
movsl
enter
xchg
loope
mov
jno
sub
int3
inc
lock
jnp
dec
and
dec
andl
xchg
mov
inc
jo
lea
rcrb
mov
and
aas
xchg
dec
repz
out
clc
notl
add
ret
loop
xchg
push
sub
mov
negl
cmp
pop
sti
and
adc
jno
outsl
mov
gs
in
jae
loop
mov
mov
pop
test
rcll
sub
jmp
jae
test
pop
insb
scas
mov
call
sbb
or
mov
ret
addr16
jbe
pop
bound
sahf
nop
shlb
ret
cmp
jge
mov
repnz
lea
inc
and
xor
repnz
mov
clc
jns
scas
cmp
add
mov
cmp
or
push
xor
mov
test
js
inc
mov
push
mov
in
push
xor
scas
adc
adcb
lea
aas
je
call
shlb
loope
repz
pop
dec
mov
mov
in
jp
cmp
mulb
fistps
pushf
inc
sub
arpl
icebp
jnp
mov
jo
mov
mov
jne
jnp
scas
loopne
int3
in
sti
xor
in
dec
rorb
call
add
enter
and
out
pop
sub
push
enter
push
fnstenv
mov
addr16
testl
mov
inc
inc
sub
adc
pop
mov
jns
fbstp
aaa
jge
insb
mov
mov
imul
in
scas
lea
jmp
dec
push
lds
add
push
jnp
hlt
nop
dec
push
or
sti
mov
xor
cmpsb
and
insb
mov
jge
fistpll
insb
insl
enter
js
add
add
xor
inc
sbb
jno
pushf
arpl
xor
js
je
push
adc
push
rorb
adc
pop
pop
lods
xor
hlt
sbb
int3
repz
mov
mov
out
sub
repz
jne
adc
push
out
iret
xor
aad
pop
lea
enter
dec
xor
les
jp
dec
arpl
imul
push
jb
dec
lock
aam
clc
jb
pop
ljmp
pop
ja
xchg
test
xchg
fldt
push
mov
loopne
mov
and
mov
jge
pop
mov
das
push
imul
rcr
mov
xchg
dec
cmpsl
cmp
pop
xchg
mov
dec
data16
lods
mov
inc
bswap
jl
flds
maxps
test
into
ja
loop
test
pop
pop
shlb
out
nop
sbb
rcrb
jg
int3
repnz
xchg
xor
or
aad
pop
bound
lret
call
mov
aas
sbb
fisubrs
pop
xor
sbb
push
rcrb
iret
ljmp
scas
sbb
leave
movsb
fs
popa
in
and
mov
test
push
dec
ss
adc
pop
pop
pop
mov
repz
mov
ljmp
and
fidivs
stos
xchg
scas
cmp
mov
or
mov
push
sbb
pop
mov
adc
dec
mov
pop
cltd
cmp
mov
add
fcmovbe
sub
arpl
ret
pop
mov
xor
jne
mov
imul
pop
mov
ja
not
cmp
cld
add
cmp
cmp
jmp
mov
adc
hlt
lret
push
push
lea
ljmp
hlt
jnp
dec
sub
rcrb
cmp
push
or
pop
stc
scas
cmpsb
cmc
jmp
daa
ss
mov
jne
sub
and
mov
sbb
call
dec
ret
out
shlb
insl
pop
push
outsb
and
jns
or
and
sub
jne
sbb
dec
or
lea
mov
repz
outsb
or
bound
in
mov
aam
cli
out
inc
subb
push
mov
daa
lea
xchg
jne
outsl
in
insl
mov
ljmpw
adc
sub
jns
and
stos
jbe
gs
cmp
pop
xor
fcmovbe
and
int3
sbb
jbe
filds
push
jae
mov
dec
adc
lds
scas
sub
jns
adc
bound
mov
push
cs
pop
fmull
rcl
insb
fnstcw
lock
jb
push
adc
mov
and
sarb
shlb
xor
aaa
je
outsb
leave
jo
mov
and
inc
loopne
in
fs
or
fmuls
cld
pushf
inc
mov
xlat
daa
xor
dec
jmp
sub
and
pop
idivl
push
popa
lret
push
test
ret
push
pop
call
nop
lcall
and
icebp
push
add
js
push
xchg
push
inc
push
out
mull
jmp
sarb
adc
ds
lret
ret
fidivs
bound
sub
pop
js
sub
incb
fdivrl
lret
in
gs
movsb
insl
pop
daa
xchg
xchg
push
sbb
xor
fists
cmp
test
sub
and
cmp
popa
xchg
ja
push
mov
mov
mov
mov
fs
push
idivb
cmc
sub
loop
fnstenv
daa
inc
mov
movsl
arpl
ret
dec
mov
cli
sub
pop
dec
sub
sbb
xor
andl
adc
push
dec
rorl
sub
ds
pop
lock
mov
test
cmp
mov
and
mov
int3
lret
cltd
aam
in
inc
enter
fsubl
icebp
insb
or
push
xor
pop
test
xor
cmc
into
cmp
sti
xor
mov
sbbb
in
frstor
sub
imul
xchg
enter
repz
gs
mov
adc
imul
cmp
and
in
in
movsl
rclb
mov
repz
jbe
dec
cs
mov
call
test
sub
mov
push
insl
lea
jge
sbb
sub
or
scas
lods
arpl
js
jb
cmp
sub
mov
fistpll
ss
xchg
jl
sbb
lds
sbb
aam
in
dec
jmp
fimull
mov
arpl
and
inc
repz
xchg
mov
std
outsl
pop
jge
cmc
cmp
nopl
rclb
jge
fdivrs
lea
or
jp
hlt
data16
push
push
jne
popa
enter
or
fidivrl
insb
in
push
or
ljmp
jmp
ja
mov
cld
or
int3
mov
pop
out
les
fidivrs
cmp
xchg
aad
mov
out
pop
cmp
push
jo
adc
cmc
aam
aaa
lea
xor
dec
xlat
mov
jae
aam
sub
push
jl
or
aaa
test
test
je
mov
sahf
inc
ret
adc
or
push
mov
rclb
lock
adc
aad
jns
call
mov
and
dec
ret
imul
sbb
xchg
pushf
mov
mov
data16
int3
lret
loop
inc
add
imul
les
ret
lret
mov
xor
shl
stos
in
inc
ljmp
cmp
in
xor
cmp
popa
ljmp
iret
xor
and
cld
aad
sbb
jge
in
aam
or
aad
movsb
jo
mov
and
sarb
sarl
and
jmp
xchg
les
cmp
and
cmpsb
dec
jno
xlat
push
roll
lahf
push
dec
inc
push
inc
leave
sbb
and
es
mov
jae
sbb
dec
outsb
test
mov
jno
ds
gs
les
push
xor
jbe
push
or
push
sti
testl
xor
cmp
add
cmp
mov
mul
leave
pop
les
add
outsl
scas
push
pop
in
test
ss
dec
fldcw
enter
popa
shr
inc
pop
imul
insl
orl
fistpll
dec
loop
push
cmp
movsb
add
sub
xchg
cmc
stos
ficompl
push
loope
cmp
cmp
sarl
jl
lea
xor
push
xor
jnp
in
push
and
xor
cwtl
jmp
mov
pop
mov
cltd
data16
pop
ffree
movsl
add
inc
xorl
sbb
arpl
adc
xor
jne
shlb
imul
push
repz
or
xchg
mov
and
mov
lea
clc
aad
push
pop
xchg
das
jno
ljmp
mov
cs
lahf
repnz
cmp
jle
pop
loopne
and
enter
dec
lods
push
pop
into
push
das
sbb
sub
fwait
jne
test
pop
sbb
es
aaa
mov
and
xchg
adc
mov
mov
fdivp
ficoml
jae
inc
fstps
int3
ret
mov
test
adc
pop
pop
push
cmp
lea
std
outsb
lods
or
mov
leave
mov
or
outsl
cwtl
nop
xchg
inc
cltd
push
outsb
mov
lods
mov
frstor
cmp
xchg
add
or
jnp
xchg
xor
xor
mul
xchg
sbb
add
gs
jg
jo
inc
mov
imull
inc
cltd
cmp
imul
jge
scas
pop
sbb
movl
bound
xlat
sbb
repnz
pop
out
paddusw
jae
repnz
jecxz
dec
sub
jl
jbe
scas
movsb
std
mov
dec
mov
xchg
lea
jnp
jl
leave
dec
xlat
mov
or
jle
mov
hlt
aad
mov
sub
lahf
sub
pop
jno
cmc
adc
mov
in
adc
cmp
or
stos
push
daa
push
adc
mov
fs
mov
sub
mov
lcall
jge,pt
sub
sub
sub
jo
cmp
out
mov
push
insl
pop
mov
xchg
adc
inc
adc
push
outsb
xchg
push
lret
lea
push
or
daa
ret
loop
clc
push
in
mov
mov
mov
adc
sub
inc
movsb
pop
xchg
loopne
or
and
fld
lret
dec
push
xor
and
or
jmp
pop
cmp
push
inc
adc
dec
loop
jg
xor
lahf
mov
push
mov
push
and
adc
inc
jbe
sub
es
lahf
jmp
insb
repnz
cwtl
inc
mov
sub
dec
mov
adc
gs
incl
hlt
lds
pop
sti
adc
rcrb
cmc
push
mov
ja
ficoms
xor
ja
rclb
jg
lret
jae
mull
push
xor
out
pop
jno
mov
mov
and
lea
subl
jg
mov
xchg
aas
out
cmpsl
and
add
xchg
or
aad
jge
pop
popf
pop
arpl
jb
xchg
fisubs
movsl
pop
push
and
in
arpl
fnstsw
popa
iret
jp
jmp
and
mov
int
adc
push
xor
popa
mov
push
test
xor
mov
dec
adc
cwtl
jbe
push
xor
lahf
nop
das
sub
jl
call
or
popa
or
xor
inc
or
add
lods
jle
fbstp
or
xlat
push
sbb
lret
out
popa
mov
mov
jmp
stos
rcll
in
sahf
aam
mov
lock
cmpsb
mov
xor
mov
fldcw
ds
add
pop
pop
enter
sti
aaa
pushf
sub
in
jge
jmp
or
sub
aaa
loop
scas
loop
adc
and
inc
leave
imul
mov
sub
movsb
test
xchg
in
imul
adc
pop
add
jmp
insb
mov
lea
sbb
or
pushl
jne
pop
mov
sbb
ss
js
rcr
rcll
pop
pushl
repnz
lahf
aaa
mov
xor
xor
or
adc
stc
cmp
shlb
ja
mov
shl
pop
cld
lea
sbb
push
incb
std
and
adc
xchg
int3
xchg
test
ret
sbb
je
call
sbb
xchg
pop
lcall
bound
fcmovu
push
cmp
inc
outsb
jge
adc
cmp
jle
shll
insb
and
mov
pusha
push
cli
out
das
pop
push
std
or
jnp
lods
mov
mov
xor
mov
xchg
push
and
pop
mov
ja
icebp
in
mov
pop
addr16
and
movsb
xchg
inc
sub
test
pop
iret
test
jg
jo
loopne
xor
or
xchg
xor
mov
pop
in
mov
adc
in
mov
sti
hlt
fstpl
mov
jb
insb
cltd
and
out
ficoml
push
jno
dec
sbb
shr
sub
outsl
int
cmp
aad
pop
jg
pop
pop
cltd
dec
mov
shl
leave
sbb
fwait
lods
or
add
xchg
test
inc
test
das
jl
shll
jb
call
js
add
call
insb
xlat
or
mov
xchg
pop
lods
repnz
push
xchg
pop
mov
test
daa
dec
sub
jo
xchg
xor
xor
jmp
sbb
sub
lods
cmc
dec
fs
adc
sahf
leave
cmp
dec
das
xchg
push
and
or
movsb
mov
cmp
lea
aas
xchg
jle
roll
push
or
add
test
or
sub
dec
repnz
testl
xchg
ret
rcrl
filds
icebp
jle
dec
push
dec
aam
rcrb
hlt
adcl
sbb
insl
pop
mov
fisttpl
aad
mov
push
xchg
das
jg
pop
sub
daa
lret
add
into
and
lret
or
mov
sbb
jmp
xor
pop
and
addr16
imul
insb
or
mov
sbb
enter
pop
andl
add
aaa
imul
adc
addr16
or
sub
mov
repnz
and
xor
insb
shrl
sbb
daa
sbb
mov
pop
mov
aam
mov
and
jno
add
xor
insb
mov
sub
add
bound
push
xor
mov
mov
inc
mov
adc
sbb
out
adc
pop
push
xchg
aad
dec
test
mov
adc
dec
loop
inc
mov
arpl
jno
pop
icebp
data16
sub
adc
jno
add
sbb
sub
insb
repnz
lock
pop
mov
imul
and
mov
out
push
lret
pushf
inc
xchg
jle
les
pop
add
sub
mov
loopne
enter
sub
xor
jns
cs
inc
and
icebp
xor
push
xor
cmpsl
cwtl
test
jo
cmp
mov
sbb
sub
dec
inc
fdivrp
pop
add
rolb
mov
inc
lods
dec
xor
in
push
jo
int
sub
add
dec
fidivs
pop
sub
push
rclb
arpl
mov
jnp
loop
xorb
push
xchg
sub
mov
mov
ja
scas
rclb
in
pop
mov
dec
sbb
cmp
pop
or
and
and
cmp
and
adc
aam
or
or
sbb
push
mov
jl
sub
jno
andb
jecxz
lret
in
testl
xchg
pop
cmp
jge
ror
imul
movsb
pop
and
orb
jle
arpl
lods
jle
xor
je
xchg
push
call
adc
mov
fdivrs
cmc
outsl
jbe
mov
pusha
inc
push
cmp
repz
mov
jo
lea
aad
mov
pop
mov
jp
ficoml
mov
lock
movsl
xchg
mov
cwtl
cwtl
xchg
insb
mov
lcall
je
sub
jnp
inc
cmpsb
mov
jo
cmp
daa
xor
or
into
jbe
aaa
sub
in
popa
imul
fisubrs
gs
cmc
sub
into
and
data16
or
push
popa
lea
ljmp
aas
pop
pop
jnp
cmp
lea
repnz
dec
and
and
and
or
loop
and
inc
in
push
aam
loop
imul
mov
lret
dec
movsb
inc
pop
mov
mov
mov
arpl
pop
or
sar
mov
or
inc
jmp
popf
in
iret
sbb
add
pushl
jno
mov
inc
mov
mov
mov
ficoml
fidivs
jecxz
and
fdivp
fcompl
call
js
add
pop
pushf
pop
jmp
or
add
icebp
popa
data16
jns
mov
enter
stc
xor
jne
mov
dec
xor
jne
js
test
cmp
adcb
fstl
std
into
mov
mov
dec
es
inc
mov
cmp
mov
hlt
cmpsl
jae
outsl
xor
in
loop
imul
push
add
loope
fwait
cmp
cmp
hlt
cmp
sbb
mov
mov
fistpl
imul
push
nop
cli
mov
xor
cmpsl
xorb
cmc
or
int
insl
outsb
jns
shlb
ficompl
ret
inc
jno
and
mov
mov
outsl
inc
mov
mov
xor
push
leave
call
in
xor
cmpsl
xor
jge
and
mov
dec
test
mov
inc
and
cmp
pop
pop
push
jns
mov
movsl
lret
mov
movsb
daa
push
jns
sarb
adc
xchg
int
test
fldenv
mov
push
mov
pop
gs
and
in
jno
fscale
divb
mov
mov
mov
gs
mov
xor
pop
add
or
out
sbb
imul
arpl
mov
sub
inc
and
stc
icebp
dec
sbb
xlat
sbb
add
lds
jge
push
testl
dec
fmuls
jbe
push
in
addb
add
and
stos
xchg
mov
xorl
scas
mov
inc
pushf
ja
in
gs
cmpl
std
sub
sub
and
pop
mov
adc
pop
mov
pop
push
nop
jns
ljmp
and
jno
xchg
xchg
push
sbb
or
adc
ja
and
fldcw
addr16
data16
in
call
push
add
jne
lds
push
out
sbb
pop
outsb
in
sti
mov
push
pop
inc
pop
or
enter
and
or
mov
push
in
fstps
in
loopne
or
xor
jne
sub
and
ss
imulb
add
push
push
jne
xchg
dec
jb
popa
data16
push
adc
in
add
popf
sub
fisttpll
je
push
push
and
jl
rcr
dec
pop
mov
lea
jae
mov
in
movsb
xchg
out
lea
aam
pop
sbb
xor
and
jno
sbb
xchg
into
jg
cmpsb
mov
in
pushf
adc
mov
ret
insl
mov
hlt
jmp
inc
mov
sub
loope
pop
mov
mov
mov
pop
data16
nop
lock
and
sti
subl
push
clc
adc
dec
pcmpeqb
sub
mov
fwait
lahf
dec
lret
push
xchg
bound
inc
imul
in
cmp
cmc
cmpsl
mov
in
loop
push
leave
or
xor
inc
ds
xor
jae
jmp
xor
enter
sahf
enter
int3
pop
pop
jns
out
mov
pop
sbb
mov
hlt
push
jmp
test
xor
lea
aam
pop
ret
repz
xchg
jno
add
and
andl
in
out
mov
push
add
inc
test
and
push
mov
jle
cli
jns
ficomps
ret
aad
sub
add
sub
or
jns
and
jge
jge
mov
dec
xlat
and
pop
loopne
jmp
addl
cmp
outsl
mov
mov
arpl
ret
ljmp
mov
int3
loop
cwtl
lret
sub
push
adc
aas
repz
push
sub
mov
xchg
ret
cmpsl
insl
lods
jmp
push
xor
out
pop
fistpl
fstps
shll
jge
movsl
mov
xchg
mov
adc
mov
inc
movsb
adc
cmp
inc
mov
jmp
and
pop
or
adc
xor
notl
jns
imul
rcll
cmc
push
mov
inc
int
inc
nop
ficomps
pop
cmpsb
hlt
or
adc
cmp
push
mov
daa
ret
mov
xchg
xchg
sbb
sub
mov
cmp
jp
arpl
mov
push
jle
jnp
popa
cmpsl
in
scas
add
addr16
pusha
sub
clc
lods
mov
jle
pop
xchg
sub
loop
sub
add
sub
add
daa
out
jbe
lahf
repz
out
pop
test
adc
pop
push
arpl
pop
lock
pop
sti
fistps
mov
lea
mov
scas
loopne
add
pop
fldenv
js
lods
loope
addr16
pushl
xor
adc
enter
mov
mov
inc
pushf
adc
sub
mov
cld
push
sbb
and
icebp
sbb
sub
mov
enter
les
mov
lea
or
push
mov
inc
mov
xchg
fwait
mov
cli
xchg
mov
cmp
jnp
or
inc
ds
cmp
mov
in
arpl
cmp
mov
mov
cmp
mov
dec
pop
pop
nop
mov
jg
mov
sti
mov
adc
ds
sbb
xchg
pop
ret
int
testl
mov
lea
or
pop
inc
xor
loope
loop
insb
stc
pop
into
or
pop
mov
pop
mov
xor
test
imul
lea
shll
movsb
inc
rcl
addl
mov
dec
jne
inc
mov
add
sub
loope
ret
sti
aam
out
dec
add
push
pop
outsl
add
push
sub
lea
or
scas
lret
jp
pop
js
in
insb
xchg
jg
fnstcw
out
or
lret
je
loop
mov
mov
sti
pop
xchg
mov
cmpb
sbb
cli
xchg
sbb
xchg
lock
add
sahf
stos
jmp
pop
adc
sub
inc
frstor
insl
mov
insb
jmp
cmp
insl
push
xchg
mov
lock
add
popf
lods
loope
sub
xor
inc
in
fldenv
inc
fisttpll
mov
add
inc
sahf
rcl
and
bound
inc
dec
mov
or
ret
out
adc
fidivrl
test
xchg
mov
ss
pop
ret
lcall
xor
popf
pop
mov
sub
mov
push
leave
fs
adc
mov
test
adc
sbb
sub
in
push
loop
push
imull
lods
sbb
fdivrs
sarb
xchg
fadds
inc
jle
not
das
adc
pushf
xor
sub
xchg
ret
loope
cmp
les
stos
ja
dec
scas
jmp
std
cltd
addr16
xor
mov
stos
jns
jo
xor
mov
rorl
dec
movsb
jb
or
sbb
xchg
sbb
push
dec
mov
add
xchg
data16
jl
jae
inc
loopne
clc
ss
sbbl
mov
mov
lods
mov
sbb
push
mov
arpl
sbb
mov
pop
xor
in
xchg
or
sahf
lea
das
fldenv
lock
mov
dec
mov
mov
jno
or
movsl
jno
repnz
into
sub
lret
sbb
xor
in
lahf
xchg
add
shrl
cwtl
addr16
cmp
test
sarl
out
dec
push
lret
mov
push
sbb
mov
dec
in
fisubrl
pop
xchg
or
xor
test
sbb
jae
fstl
add
imul
xor
loop
xchg
push
cld
cltd
pop
and
roll
incl
pop
addr16
pushf
mov
jbe
test
mov
adc
mov
icebp
call
aas
sbb
dec
adc
ficomps
test
ss
or
scas
xchg
popf
pop
jbe
out
loope
inc
fldt
xor
js
xchg
into
mov
addb
sbb
cmc
ljmp
ret
cmp
jmp
insb
in
pop
xchg
sbb
mov
jle
push
fdivrs
mov
add
aam
pop
in
jle
cmp
or
dec
inc
insb
mov
sub
lock
adc
mov
scas
js
fs
mov
and
stos
pop
pop
xor
xchg
lea
bound
xor
or
push
repnz
or
or
ja
in
in
mov
fbstp
pop
mov
arpl
ja
cwtl
or
push
push
imul
ficompl
mov
xor
push
fisubs
dec
dec
arpl
adc
jbe
inc
imul
xchg
repnz
jecxz
and
inc
xor
fstpt
jae
lds
lahf
shrb
ret
add
and
mov
push
pop
cli
mov
jb
jno
and
push
xchg
lea
pop
mov
jns
je
lcall
add
imul
dec
ss
insb
and
mov
mov
jne
cmp
push
fbld
xchg
inc
jnp
lock
test
fldcw
lea
ss
insb
add
adc
cmp
add
jb
push
dec
xor
add
xchg
push
push
sahf
cmp
cmp
sub
dec
test
jecxz
test
lret
mov
xor
shrl
cwtl
lcall
lea
push
lret
xor
sbb
outsl
in
mov
mov
sub
pop
rclb
add
sbb
jns
or
pop
and
mov
jae
cmp
inc
scas
push
cmc
xchg
sub
jp
movb
insl
test
xor
mov
dec
xchg
stos
pop
sub
fcom
mov
insb
or
idivb
iret
xor
xchg
daa
push
pop
insb
lahf
pop
cli
clc
sub
stc
pop
aad
mov
in
cmp
pop
lea
inc
dec
jo
cmp
jns
mov
leave
fisttpl
xchg
int3
sbb
mov
mov
movsb
icebp
les
ja
mov
pop
imul
mov
pop
ds
or
adc
notb
mov
push
std
xchg
xor
and
cmp
mov
add
loop
push
add
push
shll
shrl
push
jne
cmc
jns
std
xchg
push
bound
cmp
mov
sbb
inc
jne
xlat
inc
mov
sti
xorb
mov
mov
push
lea
dec
fldz
sbb
or
stc
gs
lret
sub
push
data16
gs
pop
dec
shr
sub
jno
mov
hlt
fidivs
js
inc
sbbl
sub
sub
pop
out
jecxz
icebp
mov
cli
aad
int3
push
push
xchg
test
into
stos
add
bnd
sbb
fidivl
dec
or
push
sub
sbb
lahf
or
js
cmpsl
loop
or
add
xchg
mov
lahf
mull
inc
inc
xor
aad
popa
or
sub
lahf
lods
aaa
dec
jns
sub
sbb
mov
mov
xor
cmpsb
ret
in
mov
push
push
inc
jg
insb
call
int
jle
stos
jb
test
dec
mov
push
add
aas
in
xchg
jge
pushf
into
push
icebp
sarb
jae
jbe
test
lea
or
xchg
bound
xor
ficompl
out
insb
push
adc
dec
push
push
xor
xor
pop
addr16
inc
insb
fisttpl
add
push
scas
mov
adcl
cmpsb
jmp
jne
sbbb
mov
cld
or
in
bound
enter
adc
mov
mov
ret
movsl
arpl
xchg
xchg
push
arpl
into
in
aas
in
push
in
out
lock
es
mov
sbb
fwait
ja
pusha
out
popf
icebp
xchg
call
mov
mov
lock
jecxz
push
mov
and
sub
cmc
in
or
dec
push
test
call
dec
faddl
icebp
inc
mov
fadd
push
jmp
pop
and
insb
and
sub
shl
push
push
aam
lea
mov
sub
xorl
push
inc
enter
add
or
dec
xchg
jmp
imul
mov
xchg
dec
mov
jmp
cmpl
pop
mov
push
loope
and
fbstp
fs
push
adc
lods
jb
popa
pop
pop
pop
push
movsl
hlt
pop
push
lods
add
lods
test
ljmp
fisubrs
jle
or
enter
xor
sbb
pop
icebp
xor
mov
add
nop
loop
lock
arpl
mov
movsb
insb
insb
cmc
inc
push
les
jns
loop
lret
idivb
jp
add
in
mov
sti
push
cmpsl
jno
sbb
and
push
adc
sar
jne
push
lret
lea
das
js
das
add
das
xchg
sbb
fsubs
xchg
mov
in
lods
notb
adc
das
and
push
scas
or
dec
jmp
imul
dec
testl
inc
out
test
pop
cmp
outsb
pop
out
push
mov
fimuls
and
jecxz
inc
shr
in
gs
push
add
jg
lret
adc
add
cmp
add
arpl
and
lea
repnz
imul
jns
shll
mov
popf
cmp
dec
xchg
mov
dec
mov
fldt
push
stos
insl
repnz
jge
xchg
cmp
xchg
mov
lret
jmp
xor
roll
dec
movsl
hlt
xor
stos
mov
pop
ret
vminps
xchg
xchg
push
arpl
movl
ss
in
jmp
lock
aad
out
mov
rorl
movsl
push
pusha
je
mov
inc
es
fstl
mov
sahf
inc
and
fistpll
jb
scas
mov
aaa
movsb
in
fisttpll
mov
cmpsb
sti
pop
das
mov
stos
cltd
adc
insl
cmp
repnz
and
fnstcw
mov
adc
adc
sub
xchg
pop
leave
lret
ret
mov
push
push
push
popa
orb
xor
iret
jo
test
sub
mov
js
pushf
cli
mov
loope
fs
jns
fcmovnbe
insb
sbb
icebp
and
push
mov
mov
jge
xor
and
sbb
test
ret
mov
push
and
sub
adc
adc
mov
sbb
mov
icebp
xor
sub
testb
lea
xchg
shr
pop
and
xor
sub
sahf
cmp
inc
push
ljmp
or
repnz
mov
xchg
pop
mov
adc
test
lret
adc
cmp
imul
inc
cmp
lds
aam
inc
xchg
outsl
test
fstpl
daa
lock
cmp
pusha
arpl
xor
cmp
std
mov
sub
in
lea
loopne
or
mov
jns
adcb
push
push
sbb
jns
jge
push
jp
inc
mov
jmp
and
xor
adc
dec
mov
cwtl
or
push
in
imul
or
xchg
mov
pop
or
int3
mov
xor
pop
lea
xor
xor
or
sahf
inc
insb
mov
sti
enter
imul
jno
aaa
mov
and
mov
mov
lea
jae
repz
cld
xchg
rcrl
mov
pop
lock
xor
out
adc
lea
in
mov
mov
in
enter
cmp
adc
push
loopne
push
mov
mov
pop
test
push
aad
push
dec
dec
aam
rorl
loopne
daa
sub
mov
nop
mov
and
lods
js
sub
int
cmc
roll
xchg
inc
stos
dec
es
jle
loop
mov
lea
shrb
ret
orl
in
pop
repnz
out
mov
fisttps
rolb
lods
movzbl
outsl
int3
pop
push
movsb
fadd
xchg
fstps
pop
mov
and
xorb
jp
movsb
inc
xchg
cld
sbb
pushf
pop
idivl
lock
mov
push
sub
scas
mov
mov
dec
rolb
inc
sub
xchg
repz
pop
sub
rorl
xrelease
adc
sub
jnp
sub
pop
outsl
fstps
jg
imul
pop
pop
rcll
add
mov
inc
call
lea
fldcw
fmul
xor
jb
bound
bnd
cltd
pusha
out
mov
cmpsl
jmp
sbb
rcll
out
cmp
bound
push
int3
mov
aad
mov
adc
pop
scas
and
cmp
inc
add
stos
sbb
xor
lret
movsl
pop
cld
mov
pushf
insl
sbb
jo
rclb
xchg
sahf
lock
or
sbb
sub
sub
mov
aas
cld
mov
mov
daa
sbb
dec
dec
dec
push
cltd
ja
dec
jbe
pop
outsl
call
or
jle
mov
sub
xchg
bound
mov
add
sbb
insl
jmp
mov
push
jbe
xchg
lea
ret
in
push
shll
xor
or
popa
sbbb
icebp
xchg
jl
dec
mov
pop
fisubs
outsl
xchg
cmpl
daa
mov
repnz
lea
jno
rorl
sahf
fucom
sarl
arpl
jae
or
in
xchg
or
fbld
shl
into
orb
add
xor
cs
fldcw
xchg
add
adc
and
jae
data16
push
jns
mov
cld
dec
cld
push
sub
jne
or
adc
sub
test
mov
imul
test
ss
sub
push
stos
in
movsl
or
or
jb
jl
sbb
add
mov
ja
xor
or
cmc
and
iret
pop
push
adc
xchg
and
pop
out
pop
push
out
push
addr16
jno
leave
xor
mov
daa
test
std
or
mov
adc
lds
lret
out
sub
rol
jae
mov
cltd
lock
rolb
xor
popf
adcb
outsl
iret
and
sbb
or
jl
loop
mov
cli
fsubs
dec
or
iret
inc
stos
hlt
xchg
or
scas
jp
xor
mov
jmp
lret
daa
xchg
subl
jnp
mov
andb
push
sbb
fidivrs
dec
lods
cs
js
filds
mov
sub
pop
pop
leave
fidivl
xor
ja
lock
and
inc
or
es
test
shlb
mov
push
or
clc
in
or
ret
fcoml
clc
scas
mov
and
fcomi
ret
inc
mov
sub
lret
in
or
pop
loope
out
stos
data16
pop
mov
pusha
jp
add
movsb
or
idivl
mov
mov
push
cmc
cwtl
imul
or
push
jl
jne
dec
xor
and
std
test
sub
push
mov
mov
adc
je
sbb
jbe
rolb
cmp
dec
sub
fldt
cs
jmp
outsl
add
jp
test
sub
iret
ret
sti
js
fsubrl
mov
aaa
in
mov
mov
flds
mov
and
mov
mov
adc
and
pop
out
into
jmp
push
and
jp
sub
and
xor
jl
or
mov
or
inc
cld
rolb
inc
movsb
imul
ja
loop
xchg
mov
jo
ss
lods
mov
mov
stc
fs
mov
lea
in
imul
into
push
mov
sub
and
popf
aas
lahf
xorl
jae
mov
in
out
push
mov
pop
dec
ljmp
out
mov
nop
pop
ss
in
or
loope
loop
sub
lret
mov
lcall
lea
arpl
test
orl
sbb
pop
add
outsl
movsl
call
sbb
mov
mov
arpl
lea
add
movsl
sbb
mov
gs
aas
js
loop
lods
adc
push
push
sbb
add
loope
cmp
and
xor
js
icebp
inc
and
xor
scas
xchg
mov
mov
ja
mov
rep
sar
xor
mov
in
pop
and
mov
gs
fidivs
adc
add
add
lret
fsubrp
popf
cmp
lret
dec
jno
dec
fldl
mov
push
lcall
mov
cmp
dec
jnp
and
or
fdivs
push
test
popa
mov
cmpsb
rorb
pop
xor
mov
arpl
enter
arpl
cmc
and
cmp
xchg
in
jb
sub
fstl
sub
mov
adc
inc
out
dec
popf
movzbl
xor
loopne
sub
icebp
mov
add
lods
loope
sbb
cli
es
loop
out
popf
subb
scas
fldl
push
das
fabs
ja
adc
lea
aam
jge
dec
sub
pop
lds
popl
mov
insl
fidivs
out
and
test
mov
push
pop
call
sub
xchg
and
mov
xchg
cmc
jl
mov
pshufw
js
pushf
cmp
inc
imul
pushf
pop
out
mov
clc
lahf
sub
loopne
out
push
dec
xchg
lea
lea
mov
mov
lock
imul
xchg
mov
repz
pop
push
jle
pop
adcl
pop
inc
sbb
mov
or
push
cmp
loopne
jno
pusha
fcompl
xchg
mov
jmp
roll
outsl
sbb
mov
pop
push
mov
hlt
int3
dec
push
shll
jne
mov
and
mov
jne
ss
cmp
inc
jne
mov
jp
push
repnz
imul
cmpsb
fisttpl
inc
push
lds
outsb
add
jne
mov
fwait
mov
andb
aas
test
imulb
add
xor
push
or
ljmp
out
fdivl
jne
add
dec
mov
int3
xchg
mov
sbb
jb
mov
cmp
das
fdivr
popf
add
mov
xchg
mov
aaa
jge
mov
jne
pop
leave
xchg
out
jne
jmp
mov
push
jno
or
lock
cmp
mov
push
fnsave
sub
mov
test
cmp
jne
mov
jns
pop
mov
or
adc
outsb
in
xor
jne
fwait
dec
mov
push
push
data16
arpl
push
movsl
pop
lret
idivb
mov
pushf
pop
xchg
dec
fimull
js
jo
mov
lock
mov
mov
ss
inc
cmp
sbb
out
hlt
mov
mov
sub
jne
shll
dec
jne
push
fcompl
push
adc
jne
nop
rorl
imul
popa
jns
data16
jne
shrl
jmp
add
xorl
mov
or
jb
jne
xlat
rcll
pop
xor
sahf
in
mov
data16
js
popf
adc
xchg
idivb
and
lahf
ja
xor
mov
fistpl
jb
sub
lods
outsb
and
mov
mov
jne
push
and
iret
xchg
adc
outsl
inc
sbb
jne
cmpsb
pop
dec
or
fs
dec
sti
and
jne
subb
jo
adc
jbe
loope
ret
sub
push
test
data16
jns
int
pop
sbb
mov
adc
push
clc
mov
push
js
or
mov
icebp
outsl
fisubl
std
jne
into
sub
sahf
add
icebp
jle
mov
cmp
xor
xchg
jne
mov
mull
dec
int3
jnp
pusha
mov
push
cmc
push
fidivl
cmp
jne
in
mov
mov
cld
xor
sbb
mov
jp
addr16
jo
add
jns
pusha
rorl
cwtl
dec
add
jl
test
add
outsl
hlt
or
inc
les
ljmp
mov
push
inc
lock
int3
hlt
stos
jnp
imul
mov
aad
push
jp
push
insb
dec
push
xor
jp
pop
jb
sbb
xchg
mov
cmp
outsb
jecxz
and
pop
data16
or
dec
jne,pn
jno
or
push
xor
jne
mov
pop
sbb
adc
stos
xchg
xor
pop
and
fiadds
ja
or
jp
sbb
loopne
jne
dec
repnz
call
out
push
cmp
mov
insb
ficomps
repz
leave
popf
pop
cmpps
push
ret
sti
out
jb
mov
test
jae
repnz
lcall
ss
in
pusha
xchg
jo
hlt
jno
sbb
add
outsl
shrl
popa
dec
pushf
sub
mov
stc
iret
addr16
sbb
inc
inc
orb
test
in
in
mov
cs
ret
call
shrb
aaa
gs
outsb
and
inc
dec
mov
jg
mov
mov
sbb
test
in
cmp
ret
popa
pop
repnz
pushl
mov
push
arpl
sbb
aad
cltd
pop
adc
rcl
cmp
imul
inc
dec
sahf
movsl
gs
fcmovnu
test
adc
add
pop
mov
pop
jnp
adc
mov
sti
add
lea
dec
andl
insl
stos
mov
lea
inc
fsubrl
call
loope
push
test
aaa
lea
loope
sub
adc
sub
clc
cmpsb
dec
xor
dec
inc
mov
adc
adc
hlt
movsl
cmc
inc
es
mov
jne
adc
repz
mov
shr
pop
or
clc
test
xor
cmp
mov
fisttpl
hlt
out
pop
and
sbb
inc
in
cmpsb
in
adc
sub
in
enter
in
and
mov
lock
std
inc
cmpsb
inc
sub
jno
jae
lret
jo
inc
push
in
push
cmp
mov
gs
mov
and
mov
imul
aad
addr16
push
orb
cwtl
cmp
ret
movsb
add
sbb
pop
push
xor
out
fcoms
test
lock
pop
and
jge
sub
pop
sahf
repz
dec
jnp
lret
pop
daa
ret
int3
sub
cmpsb
cmp
js
out
and
leave
adc
adcl
pop
mov
fs
sub
jge
clc
adc
inc
ja
push
xchg
hlt
leave
adc
xchg
test
pop
popa
push
shll
cmpsb
nop
imul
adc
int
popf
hlt
cmp
mov
lahf
sahf
sti
pop
pop
js
mov
test
cld
ret
mov
add
pop
jb
hlt
jge
aad
out
mov
and
retw
loopne
repnz
inc
sub
and
mov
mov
scas
testb
arpl
cmc
rcrl
mov
push
xchg
inc
jge
int
sahf
insl
xor
push
jle
adc
pop
pop
jno
es
sub
fistpl
push
movb
push
jae
or
fxch
sahf
out
adc
stc
jno
push
test
cmc
and
push
dec
imul
push
cmp
sub
pop
dec
fsubrl
cld
mov
lcall
shll
pop
add
movsl
cld
xchg
cmp
dec
mov
adc
fwait
jmp
test
mov
call
hlt
push
mov
out
out
mov
mov
and
xor
es
add
mov
popf
lods
movsl
lret
xchg
xchg
je
lock
pop
jne
add
adc
in
dec
scas
repz
mov
mov
jge
adc
ret
stos
stos
pop
rcrl
outsb
pop
and
add
pop
jp
mov
es
stos
pop
hlt
push
loopne
pop
lcallw
sub
es
in
push
add
sub
xchg
std
lcall
jno
cmc
call
pop
cmp
lcall
mov
pop
imul
data16
add
sbb
test
dec
pop
xor
mov
adc
popa
push
pop
mov
xchg
rclb
adc
pop
mov
mov
movsl
or
popa
jae
adc
push
cmp
adc
stc
in
loop
jno
push
sbbl
sarb
test
gs
or
in
xor
je
mov
rclb
enter
pop
les
mov
sub
or
push
insl
mov
lods
sbb
push
scas
sub
mov
hlt
jbe
xor
scas
cmp
add
cmp
inc
and
xor
mov
int
sub
xchg
inc
sub
test
insl
cli
or
mov
mov
jle
test
cmpsl
std
andb
push
sbb
jb
leave
jns
pushf
les
mov
pop
push
cld
jns
in
test
lds
mov
adc
pop
in
ret
push
push
imul
inc
sub
add
mov
pop
push
pop
inc
ljmp
std
jg
dec
pop
clc
cltd
xor
sbb
add
pop
repz
cmp
gs
fwait
push
sub
dec
ds
push
pop
shl
mov
in
sub
pop
or
push
aaa
rolb
shr
xor
hlt
xchg
stos
lret
mov
imul
cmp
es
fstps
jle
or
jge
xchg
ljmp
lcall
push
fsubrs
mov
sub
movsb
aam
or
xor
sbb
inc
dec
inc
lock
pop
stc
sbb
inc
mov
sbb
push
adc
andl
in
cmc
in
mov
cltd
xchg
cs
loope
lock
xchg
adc
inc
movsb
mov
cmp
xchg
xor
adc
push
or
je
and
sarb
popa
jne
xchg
in
mov
or
fneni(8087
and
popf
sub
dec
lods
inc
out
cmp
push
int
outsl
in
ds
std
imul
and
sbb
shlb
insl
lock
xchg
je
and
cmpsl
popa
in
sub
jns
dec
pop
test
pop
sbb
test
xchg
int3
xchg
sub
xor
xor
test
pop
inc
outsb
xchg
sub
fsubl
scas
int
push
pop
lahf
imul
inc
inc
test
test
mov
xor
sbb
dec
jl
cmp
sub
testl
pushf
push
push
popa
imul
dec
xchg
push
fldcw
ror
cmc
cmp
shr
stc
cmp
xor
inc
test
dec
mov
inc
mov
std
sbb
xor
outsl
mov
jnp
dec
jno
test
sub
sub
jl
popa
inc
dec
outsl
add
test
dec
loop
sub
or
xor
imul
pop
cmpsb
pop
in
jns
cltd
int3
testl
insl
inc
popf
cmc
std
jne
sub
adc
mov
push
rolb
jg
pop
jno
mov
daa
xchg
jno
int
test
xchg
pop
call
aas
sbbb
je
pop
mov
dec
mov
sub
mov
inc
mov
shll
sub
aad
cmpsb
insb
mov
aad
xchg
adc
and
cmp
dec
gs
popa
mov
jg
movsb
flds
inc
popl
xor
jns
push
and
cli
pop
mov
inc
cld
es
xor
stos
dec
std
cmc
jne
ljmp
and
test
jmp
push
testb
xchg
negb
rcll
pop
imul
dec
gs
adc
hlt
xor
test
lahf
in
fldcw
imul
inc
rcl
loop
aas
mov
gs
imul
jno
mov
in
cwtl
xor
gs
outsl
pop
call
sub
xor
flds
ljmp
imul
xchg
pushf
jb
stos
test
sub
xchg
pushf
mov
divl
test
popa
mov
inc
aad
sub
jno
jns
repz
jecxz
insb
sub
stc
sbb
sbb
xor
cs
imul
jecxz
mov
xor
push
cmp
leave
pop
or
adc
insb
scas
inc
add
shll
xchg
and
lods
imul
popa
sbb
jge
pusha
sub
jb
sub
sar
or
or
pop
sub
out
mov
cld
andl
dec
or
mov
mov
aas
mov
sbb
bound
lea
xor
push
sub
inc
testl
fidivrl
sahf
out
xor
hlt
pop
fneni(8087
outsl
cmpsb
pop
lods
iret
in
dec
mov
aas
fildl
push
cmp
push
and
dec
sub
sbb
jnp
pop
mov
sub
mov
cld
mov
pop
sarl
jmp
dec
mov
fmull
loopne
pushf
outsl
je
adc
jge
fisubrs
xor
mov
mov
test
popf
lock
sub
mov
dec
pop
test
jno
or
lret
inc
jge
dec
repnz
clc
lock
mov
mov
pop
les
cld
mov
xchg
mov
loope
xor
int
lods
int
int3
popf
sbb
mov
jno
mov
mov
push
push
lock
loop
outsb
mov
in
int
mov
test
adc
inc
test
cmp
rcll
inc
push
fstl
jb
cli
push
cmp
push
test
scas
adc
sbb
sub
mov
mov
xor
loopne
jge
xchg
xor
adc
out
mov
cwtl
je
mov
pop
pcmpgtb
jae
add
pop
mov
fdecstp
adc
pop
call
repnz
fidivs
jmp
push
xchg
adc
and
inc
std
cmp
mov
dec
cmp
imul
sub
test
sahf
sysexit
lock
movsl
jbe
jo
inc
pushf
sbb
pop
jnp
ret
fsts
adc
std
es
mov
aaa
pop
xchg
jb
movsl
jl
mov
call
cmp
ljmp
imul
adc
add
push
lods
int
pop
test
pop
lock
cmpsb
mov
popa
inc
push
mov
addr16
fidivs
call
shrl
icebp
push
adc
gs
insb
sub
lds
xor
mov
push
gs
sbb
sbb
enter
dec
shlb
popf
call
test
cmp
inc
xor
jo
sub
dec
jl
loopne
xor
pop
and
aas
mov
lds
xchg
add
sbb
jne
push
xchg
test
in
pop
lock
ffree
cmp
push
lcall
pop
push
mov
out
xchg
inc
or
mov
rcrb
mov
insl
xchg
sbb
imul
xor
hlt
xor
xor
pop
loop
sub
sub
pop
je
stos
movsl
into
sahf
adc
fcmovu
dec
jae
ds
je
stos
andb
pop
mov
adcl
int
popa
cmp
pop
cs
dec
arpl
inc
jb
add
or
pop
hlt
mov
fxtract
repz
cs
mov
mov
repnz
sub
add
mov
inc
mov
mov
cmp
lods
outsl
addb
pushf
push
hlt
clc
cmpsb
dec
aaa
mov
cmp
insl
ds
adc
inc
adc
aam
inc
mov
test
ret
push
hlt
and
xor
andb
in
push
aas
mov
mov
sub
and
out
adc
mov
cmc
cmpsb
lods
jns
or
pop
out
push
add
data16
stc
pop
xor
jb
xchg
cmp
jl
outsb
cltd
push
cmc
gs
cmp
negb
jg
dec
mov
mov
push
sbb
movsb
in
xor
adc
jae
push
cmpsl
cmpsl
inc
jp
lcall
push
aam
push
mov
insb
inc
sub
mov
or
push
sahf
inc
out
fcompl
loop
mov
xchg
bound
mov
jne
add
test
iret
sub
hlt
out
pop
rclb
es
pop
sub
and
xchg
jecxz
ds
cld
mov
aad
mov
inc
lret
xor
nop
imul
dec
int
push
shl
cld
movsl
dec
gs
and
pop
outsb
in
mov
add
aaa
hlt
test
movsl
push
sub
sub
fdiv
test
ss
shll
test
scas
mov
push
aad
sbb
es
inc
loop
sbb
sub
mov
add
imul
fs
in
dec
adc
into
mov
mov
flds
fwait
mov
pusha
and
pop
popf
gs
sub
or
std
sarl
xchg
inc
jecxz
movhps
push
test
inc
sub
sbb
js
mov
xor
test
movsl
popa
push
mov
outsl
and
pop
test
or
hlt
popa
aaa
loopne
out
fs
addr16
pushf
subb
inc
cmpl
xor
fdivp
xor
xchg
push
sub
and
subb
fildll
out
and
insl
insl
xchg
in
repnz
lods
int
jl
sub
jnp
pop
in
mov
rep
out
mov
jge
push
jge
mov
mov
in
push
lods
push
out
cmp
adc
xor
jno
test
rcr
mov
jl
pop
arpl
mov
or
mov
shl
and
in
pop
int
add
arpl
xchg
cli
inc
jnp
std
jmp
adc
xor
repz
xchg
std
or
cmpl
jle
push
mov
and
jno
inc
add
je
xor
mov
repnz
dec
adc
int
test
inc
lcall
out
inc
inc
jbe
pop
imul
adc
sbb
sub
and
fwait
or
cld
sub
inc
sbb
dec
in
adc
lods
ja
inc
inc
mov
mov
fdiv
pushf
insb
pop
mov
fwait
xlat
sub
cmpsb
add
test
mov
out
jae
jp
push
xorl
adc
int3
test
jno
ljmp
ror
xor
cmp
enter
jns
inc
pop
jno
sbb
push
or
pop
rolb
sbb
in
jns
cld
mov
loopne
jle
out
jl
hlt
ljmp
pop
jbe
pop
inc
or
movsl
sbb
add
xor
gs
xchg
insl
sub
data16
push
rcrb
outsl
cmpsb
repz
dec
xchg
xchg
stc
jns
pop
lahf
jmp
hlt
pop
or
jmp
test
adc
outsl
lahf
es
pop
dec
xchg
adc
and
popf
cmp
mov
dec
and
shl
hlt
push
jns
sub
pop
pavgw
mov
inc
adc
aad
aam
stos
mov
pop
mov
test
pop
sbb
lret
lret
in
fdivr
test
mov
hlt
mov
xchg
jnp
sub
dec
and
scas
push
jnp
cld
xchg
repnz
mov
xchg
popf
out
dec
push
stos
nop
adc
or
insb
test
insb
test
leave
or
fwait
pop
adc
xchg
repz
incl
arpl
xorl
dec
in
popa
clc
test
dec
jns
setl
push
mov
rep
test
loopne
xor
test
jmp
movsl
shl
cmp
lret
add
dec
in
ja
dec
jno
cmp
mov
adc
pop
fsubp
data16
fisubl
cmpb
push
and
adc
or
pop
inc
sub
adc
lock
int
mov
inc
cmpsl
mov
hlt
sub
mov
leave
pop
push
mov
xor
mov
in
dec
gs
sarl
bound
adc
or
jge
xor
ret
mov
insl
pop
mov
bound
xor
adc
in
mov
lods
sti
push
add
hlt
test
xor
jae
cmp
and
mov
rolb
mov
rcrb
sbb
daa
sahf
push
in
fimull
fidivs
in
out
adc
cld
jl
adc
xchg
jecxz
pop
sbb
sub
xor
in
insl
pop
pop
pop
addr16
das
imul
insl
push
jmp
push
shl
inc
ljmp
outsb
xchg
add
sub
bound
sub
sbb
mov
cltd
or
mov
cwtl
insl
sbb
outsb
mov
imul
add
inc
push
lock
sub
mov
outsl
aam
out
stos
adc
std
lahf
rorb
inc
in
jl
mov
lods
jae
adc
orb
cmc
dec
xchg
and
and
sub
hlt
mov
daa
sub
rcr
xchg
xchg
pop
push
jno
xor
push
mov
call
mov
loop
es
jg
addr16
lds
addr16
es
and
xor
mov
or
sbb
cld
insl
aad
js
lahf
jns
das
pop
in
cltd
inc
sub
cld
push
rorl
dec
jo
mov
cmpsb
adc
inc
inc
or
xor
cmp
pop
sarl
std
adc
in
xchg
ret
mov
movsl
and
push
lods
lock
call
aad
clc
lea
popa
insb
xor
inc
iret
push
cmp
ljmp
mov
jbe
xor
lds
inc
hlt
leave
push
mov
loope
sub
nop
mov
andb
fists
mov
pop
xchg
mov
xlat
sub
insb
adc
insl
push
inc
pop
mov
gs
pop
mov
jnp
sbb
inc
mov
push
xor
mov
test
jge
jnp
mov
inc
cld
hlt
inc
pop
ljmp
mov
inc
movsb
pop
mov
sub
adc
std
loopne
jns
in
sar
test
stos
inc
mov
pushf
pop
mov
insb
faddp
jns
shrl
cltd
ror
adc
pop
and
popa
pop
cmp
xor
cltd
and
inc
call
shlb
test
inc
pop
xchg
jle
xor
add
cld
sub
inc
push
jmp
mov
aam
sub
mov
cmpsl
arpl
fdivl
loop
push
xchg
lods
cmpsb
enter
adc
sub
aas
and
cmc
cmp
hlt
and
xchg
adc
sub
cmc
pop
inc
push
shrb
mov
and
mov
aaa
lgs
insb
push
std
lock
and
jge
lret
fdivs
cld
inc
and
fildl
stc
cld
sub
lds
in
fdiv
or
addl
pushf
cmpsl
pop
lcall
mov
sbb
cmp
outsl
insb
xchg
adc
cld
dec
inc
dec
or
stos
fcoms
jo
sub
movsb
sbb
push
mov
pop
sbb
dec
cs
in
jns
pop
xor
or
lock
mov
popa
test
cmc
or
add
movsl
repz
push
cmp
call
mov
jl
sub
mov
pushf
xchg
jge
dec
or
test
or
je
or
int
and
out
pop
into
xor
dec
stos
and
sbb
dec
fsubs
inc
xor
std
ds
pop
jno
orl
leave
sbb
sbb
dec
imul
inc
in
mov
scas
inc
mov
and
jns
sahf
adc
jmp
fxam
xor
or
nop
mov
sbb
cmc
repz
dec
xor
xchg
push
add
pusha
ljmp
in
add
std
push
pop
in
push
pushl
and
jo
inc
jl
ror
add
fidivl
inc
orl
push
fbstp
mov
fnstenv
es
arpl
xor
mov
hlt
and
pop
out
add
ja
scas
add
inc
add
mov
icebp
out
and
or
mov
mov
lret
mov
imul
in
mov
lcall
add
xor
and
push
add
mov
and
adcl
pop
xchg
fnstcw
dec
xor
mov
imul
popf
outsb
push
sbb
pop
push
lahf
adc
cmp
adc
xchg
fistpll
push
or
pop
xchg
mov
dec
mov
cwtl
int3
stos
mov
ret
mov
dec
pop
dec
in
sub
out
mov
dec
xchg
or
push
push
imul
fstpl
enter
or
movsl
iret
jno
and
inc
pop
mov
sbb
mov
sahf
xor
xor
lea
je
mov
and
mov
stos
in
xchg
adc
ljmp
pop
int
adc
inc
or
in
call
or
xor
mov
add
loopne
loope
mov
lret
add
and
shrb
jae
inc
stos
addr16
subl
mov
cmp
test
std
iret
jne
or
jno
jecxz
mov
push
notb
jbe
mov
shrb
loopne
jecxz
out
xchg
sbb
push
mov
sbb
mov
mov
push
pop
hlt
outsb
hlt
push
pop
mov
aad
adc
enter
popa
mov
sbbl
cmpsb
cmc
inc
cmp
jno
mov
jl
je
push
test
ja
pop
inc
in
dec
push
xchg
enter
filds
lret
aad
je
idivb
inc
jbe
je
ja
mov
jne
jmp
dec
inc
in
or
xor
fldcw
and
mov
jp
or
int3
lahf
hlt
outsl
out
cwtl
xchg
cmp
sub
shlb
iret
loop
push
jns
icebp
mov
xchg
mov
jmp
add
inc
push
insl
pop
push
fs
cmp
scas
imull
pop
mov
sub
push
int3
cs
clc
les
add
mov
xchg
jns
scas
jmp
dec
testb
shl
les
gs
jmp
jge
fnstcw
leave
mov
fimull
jle
jmp
out
dec
int3
ret
mov
mov
adc
pop
fxch
shl
stc
sub
sub
ja
jae
cwtl
lods
lds
xor
xor
hlt
dec
or
in
sbb
sub
dec
and
scas
lea
and
subb
mov
or
and
aaa
and
sub
xchg
fidivs
and
sbb
or
imul
cmp
ljmp
ret
je
push
mov
cld
sub
pop
cli
addr16
mull
ja
jne
stos
adc
into
loope
loop
push
sub
mov
dec
in
js
insb
arpl
xor
jmp
pop
fisttpl
std
mull
jge
sbb
mov
push
pop
xor
dec
dec
jmp
out
fcoml
jp
sbb
popa
cmovle
lret
mov
jns
nop
pop
pop
mov
call
mov
repz
push
push
mov
add
jecxz
mov
shr
fdivrl
pop
sub
stos
mov
jns
xchg
lret
pop
mov
sub
out
jo
mov
jbe
sbb
push
cmc
push
mov
loop
fbstp
sbb
dec
push
and
leave
mov
fdivl
push
mov
sub
aad
mov
out
bound
inc
test
filds
fstl
dec
repnz
stc
lea
and
pusha
mov
mov
rcrl
pop
xchg
inc
xchg
in
sub
shrb
cmpsl
jne
mov
dec
or
adc
adcb
je
pop
dec
or
aaa
test
fcomip
testb
sarb
mov
sbb
xorb
loopne
arpl
call
pop
jns
cmc
setb
sub
repnz
je
faddl
push
push
mov
push
sbb
stc
lds
pop
rcrb
mov
push
sub
stos
push
repnz
jecxz
js
popa
pop
mov
cs
mov
fwait
std
pop
push
mov
cltd
aad
shrb
or
testl
jmp
fadd
xor
popf
mov
pop
and
pop
movsl
std
xchg
jnp
insl
mov
lahf
jl
jge
jbe
mov
fwait
outsb
ss
and
jmp
jl
and
lock
xchg
xchg
pop
stc
xor
jbe
cmp
xchg
mov
roll
sbb
mov
addr16
cld
cmp
int
stos
mov
into
mov
data16
lea
bound
jp
pusha
decb
in
pop
pop
mov
sbb
and
pop
lret
mov
cmp
jecxz
test
fsub
sti
xor
and
adc
movsl
jae
add
or
out
jmp
jl
inc
ja
pusha
dec
aas
mov
fdivrl
clc
jno
mov
or
xchg
pop
pop
cmpl
pop
mov
jbe
jl
repz
mov
mov
mov
and
aas
fabs
fsubp
cmp
push
xchg
xchg
inc
lds
ja
in
ja
scas
mov
pusha
dec
rorl
es
mov
sahf
insb
mov
sub
add
sub
jmp
sbb
jo
iret
and
adc
mov
scas
jp
mov
nop
mov
enter
jne
sbb
loop
movsl
mov
clc
insb
or
inc
test
ficoms
mov
movsb
jge
outsl
stc
jl
scas
icebp
ja
imul
and
mov
sbb
or
fwait
adc
push
sub
adc
sub
sub
fisttpl
lea
push
repnz
cmpsb
loopne
insb
mov
cmp
hlt
mov
gs
jnp
xor
psrld
push
push
inc
movsl
sub
scas
imul
cltd
add
fdivl
fisttps
xor
sahf
leave
jae
mov
jb
dec
cmp
sbb
pop
fwait
cld
pop
jmp
inc
loope
pushf
mov
lea
sbb
pop
sbb
in
iret
mov
fistpl
call
fistps
int
orl
es
jno
adc
jno
jnp
es
push
jg
or
pop
push
cmpsl
in
and
mov
rclb
push
ret
movsl
push
dec
icebp
dec
popf
fnstenv
mov
aam
adc
das
pop
fildll
jmp
lea
xor
adc
cmpl
push
mov
sub
in
push
outsl
and
jns
add
ss
mov
loope
dec
cmpsb
pop
or
int3
sbb
in
movsb
jle
xchg
mov
out
enter
in
leave
in
adc
add
push
loopne
xor
add
testb
in
mov
ja
notl
pop
jecxz
loopne
jp
and
mov
call
lods
xor
mov
testb
jecxz
test
inc
dec
cli
sbb
iret
lret
je
or
inc
jg
adc
shll
or
or
and
pop
xchg
insl
mov
shl
data16
pop
lds
cmp
lods
adc
faddl
les
sbbl
sbb
jno
inc
sub
jae
jo
xor
repnz
and
pop
mov
jge
xchg
inc
xchg
mov
xchg
loope
xchg
movsl
or
cmpsl
xor
mov
lcall
and
loop
sbb
addr16
lea
test
pushf
orl
sub
push
sbb
scas
lcall
cmp
mov
ret
out
fidivs
lods
je
mov
pop
repnz
push
testb
js
dec
push
cmc
outsb
jge
or
push
enter
push
mov
push
mov
mov
ja
scas
or
sub
mov
movb
jnp
gs
arpl
loopne
fdivrs
shl
sub
mov
mov
scas
jecxz
pusha
lcall
mov
xor
push
cmpsl
inc
les
rorl
ja
cmp
bound
pop
sub
adc
add
cld
fidivl
and
lock
push
sbb
and
ret
enter
jno
stos
insb
lret
lods
cmp
mov
in
out
mov
push
xlat
ja
pop
movsl
mov
insl
pop
hlt
mov
add
or
js
pop
imul
cwtl
out
mov
or
xchg
xor
xor
jmp
bound
sub
testl
sbb
push
loopne
aad
jmp
aaa
mov
sti
sbb
mov
fidivrl
or
sbb
xchg
lods
int
and
xchg
in
je
popa
loop
pop
xor
sbb
ret
jb
xor
push
pop
dec
add
mov
shlb
mov
sbb
imul
out
or
mov
imul
sbb
mov
fldenv
inc
sarb
sbb
std
arpl
dec
arpl
fistl
pushl
roll
gs
or
sub
xchg
rep
hlt
jle
fndisi(8087
mov
adc
arpl
loope
test
out
ss
lds
pop
push
pop
push
pop
pop
mov
push
jp
or
and
xor
das
mov
mov
faddl
push
xchg
shrb
nop
sti
cmpb
js
es
das
sbb
jno
icebp
pop
sub
jb
loop
rol
xor
shr
mov
in
add
stos
lea
inc
scas
jmp
mov
imull
lods
push
pop
inc
imul
cmp
adc
movsb
leave
sti
sub
movl
jg
push
rolb
call
mov
insl
enter
movb
cwtl
sbb
pop
adc
cmp
jp
scas
loope
pop
mov
push
out
movsb
fdivs
dec
add
mov
pop
imul
jno
fwait
jge
fucomi
or
or
xor
mov
pusha
bound
jp
in
xor
and
test
data16
outsl
or
and
mov
scas
jo
repz
addl
xchg
sbb
out
es
jge
ficoms
pop
into
js
pop
mov
lret
fadd
subl
sarl
push
cltd
jno
push
popa
ret
mov
lods
sbb
pop
cld
or
cld
jae
mov
into
add
adc
in
jb
pop
xchg
mov
imul
pop
bound
enter
es
jg
adc
sbb
jp
dec
and
pop
jle
stos
mov
aad
leave
sbb
or
cmp
shrl
xchg
mov
sti
xor
mov
leave
inc
lahf
lcall
push
div
and
inc
adc
ds
daa
jge
loopne
fmull
test
aas
fnstenv
in
lcall
xchg
xlat
adc
test
jne
mov
mov
fcomps
mov
orb
sub
jae
cmc
and
outsl
push
pop
mov
ret
stc
imul
jg
pop
and
lods
add
and
sbb
inc
pslld
push
xor
jno
lea
mov
test
xchg
fcompl
mov
repnz
inc
cmp
sbb
sub
mov
cmpsb
cli
test
mov
icebp
adc
and
and
sti
mov
pop
in
jne
or
mov
mov
out
xor
sbb
inc
dec
mov
xchg
or
push
adc
mov
arpl
add
loop
stc
add
push
sub
add
dec
sti
jne
inc
rcrb
mov
inc
mov
jecxz
and
add
popf
mov
popf
pop
das
imul
aas
bound
add
je
stos
data16
cmp
faddl
xor
sub
pop
fs
inc
mov
pop
xchg
sbb
ret
sbb
jl
inc
fimuls
idivb
adc
inc
fnstcw
or
pop
jg
cmc
fnstcw
or
jnp
inc
push
mov
mov
push
xor
jns
cmc
imul
rol
in
sub
pop
cmp
lret
pushf
jb
sub
into
push
ljmp
fsubl
repnz
in
xchg
xor
and
insb
jg
push
inc
in
fs
cmp
sub
inc
dec
outsb
prefetch
or
mov
xor
adc
icebp
and
sbb
gs
xor
into
out
cwtl
call
js
arpl
mov
push
sbb
mov
add
in
xchg
adc
sarb
insb
in
nop
adc
std
mov
popf
inc
mov
dec
test
push
adc
test
mov
jno
fnstsw
leave
and
in
sti
ret
dec
or
hlt
adc
ja
or
subl
and
pop
jnp
loope
mov
dec
dec
sub
push
stc
or
cli
xchg
and
lcall
jecxz
sti
test
push
test
push
pushl
aam
hlt
popf
gs
aaa
sub
jnp
jmp
in
cmp
ja
sub
inc
stc
xor
shlb
addb
in
gs
mov
sbb
mov
pushf
dec
adc
sbb
cltd
jns
push
or
rorl
hlt
cmc
lock
pop
lods
sbb
cmp
jae
mov
add
push
pushl
ja
loop
or
nop
cmp
jo
lret
mov
mov
aam
call
dec
mov
int3
pop
sahf
add
cmc
mov
mov
movnti
adc
in
lea
mov
jb
inc
lcall
mov
xchg
adc
into
test
sub
pop
lea
loopne
arpl
push
in
es
jno
dec
lret
jnp
rorl
cwtl
push
xor
pop
outsl
mov
mov
je
test
adc
inc
mov
stos
mov
insb
testl
std
push
adc
sbb
mov
mov
adc
mov
adc
enter
movzwl
push
scas
movsb
repz
cltd
icebp
call
dec
out
sub
loopne
arpl
pop
jmp
and
call
dec
mov
lahf
pop
lods
push
notl
popf
testl
cmp
jns
gs
repnz
push
fidivrs
xchg
and
les
pushf
pusha
mov
push
fbld
adc
into
jmp
pop
jle
in
xor
adc
jmp
aas
add
in
mov
dec
mov
mov
jbe
mov
orl
insb
and
movsl
inc
xor
jg
sub
mov
jecxz
in
fsts
std
sub
repz
lods
add
ret
jne
jmp
push
pop
mov
mov
lea
cmp
jbe
jo
movsb
aaa
xor
inc
add
sbb
xlat
pushf
pop
pop
xchg
fsubl
in
popf
fsubrl
adc
gs
jo
xor
jns
cmc
adcb
sbb
sbb
jnp
out
cwtl
push
mov
mov
add
lds
jbe
rclb
cltd
mov
lods
lds
xlat
sub
sub
in
or
stc
repz
out
lea
sbb
mov
pop
fists
mov
lock
icebp
int3
fnsave
out
mov
clc
push
repnz
lahf
loope
mov
sub
xor
xchg
xor
mov
xchg
pop
sbb
xor
or
inc
dec
xchg
pop
clc
dec
xor
push
fsubs
or
movsl
in
outsl
mov
lock
gs
sub
sub
test
lock
repz
jmp
testl
inc
sub
lea
push
inc
mov
push
or
and
mov
cmp
call
loopne
fmull
lcall
andl
jmp
add
lock
gs
jg
jne
pop
lcall
pop
pop
hlt
sbb
adc
or
dec
inc
gs
sbb
mov
popf
fdivl
call
mov
aam
icebp
push
je
divl
inc
pop
mov
add
sbb
arpl
fs
idivb
mov
ja
and
out
out
xor
mov
jge
loope
sub
inc
aaa
jno
fabs
andb
jbe
push
int3
fwait
jmp
xchg
stos
test
adc
mov
lock
and
sbb
jnp
dec
or
call
mov
mov
jge
cmp
sub
adc
push
repnz
in
sub
out
jns
dec
and
sub
pop
xorb
js
loope
and
mov
cwtl
push
dec
inc
add
ss
dec
lea
aad
xchg
inc
stos
imul
and
mov
jne
cmp
insb
inc
sti
loopne
push
fwait
adc
in
push
iret
pop
dec
loop
xor
mov
in
xlat
pop
jns
cltd
mov
aaa
shll
shl
xor
jo
icebp
pop
mov
add
mov
cmpsl
lock
or
xchg
jne
std
cmc
pop
fistps
sbb
or
sbb
addl
test
and
cli
lea
lea
jae
or
jle
ljmp
jbe
mov
loope
imull
inc
push
mov
xchg
pop
dec
mov
xchg
jge
ja
scas
sahf
xor
in
push
push
and
inc
aas
jge
sbb
xor
xor
push
pop
je
scas
inc
jmp
fstp
andb
leave
xchg
xchg
cmpsb
mov
ret
xchg
in
dec
int
shlb
negl
adc
jne
cld
push
stos
or
leave
popa
mov
into
dec
js
fdivs
test
cmp
mov
arpl
cli
dec
addb
jp
sbb
dec
adc
loope
out
jecxz
dec
sahf
mov
and
and
push
adc
xchg
imul
sbb
xchg
frstor
cmp
in
xchg
jae
leave
or
mov
fisubrl
jnp
pop
ljmp
and
push
sarb
ret
push
gs
inc
sbb
inc
push
cwtl
push
clc
js
jl
sub
jecxz
or
roll
mov
and
add
lods
rorb
rep
jmp
sbb
jl
push
xchg
jne
jp
mov
sub
loopne
mov
pop
shr
jp
js
mov
push
jg
add
fcomip
pushf
xlat
jno
call
popa
shl
inc
add
lea
aam
and
adc
fistps
in
xor
lea
in
in
das
add
pop
test
pusha
push
shl
inc
jo
sahf
ret
decl
jmp
arpl
jns
mov
mov
mov
sbb
or
mov
sub
pop
pop
jnp
or
loop
adc
scas
ja
or
cmp
push
loop
leave
cmc
xchg
cmp
icebp
pop
mov
outsl
shlb
scas
cli
dec
mov
aad
xor
adc
pop
outsb
sub
insl
icebp
aad
pop
and
sub
jb
jbe
sub
loopne
loop
or
dec
in
or
xchg
and
mov
fldl
outsb
and
add
jmp
inc
pop
in
div
outsb
cmp
inc
pop
xchg
mov
xchg
jne
cld
mov
loope
pop
daa
add
ret
test
and
xor
or
mov
lcall
in
xchg
lea
in
mov
lea
stos
call
out
cli
jge
hlt
jmp
and
cmpsl
in
push
andl
mov
or
scas
jg
mov
adc
mov
mov
pop
mov
cld
jp
mov
jmp
add
mov
sbb
daa
adc
in
dec
xchg
rol
sub
xorb
daa
push
push
mov
dec
cmc
fwait
sbb
scas
aaa
mov
cld
jmp
mov
mov
or
lods
icebp
or
xor
rcl
and
sub
pop
inc
shrl
jmp
fcoms
jo
in
insl
call
in
adc
rcll
out
movsl
jg
xchg
mov
insl
hlt
call
loop
or
fcomps
loop
scas
pop
fdivrs
in
shl
dec
push
out
sbb
lcall
js
stos
fnstsw
fists
xchg
mov
xchg
icebp
mov
mov
cmp
arpl
fidivs
pop
cli
mov
movsb
xorl
xchg
xor
dec
inc
dec
mov
sbb
mov
pop
ja
lea
mov
add
enter
mov
leave
mov
xor
mov
pop
jne
repz
fidivl
cmc
in
mov
ds
cmpsl
in
sub
insb
xor
push
add
repnz
jmp
mov
xlat
xor
ss
popf
mov
in
pop
clc
cmp
add
test
pop
pop
dec
mov
ss
push
lcall
mov
fwait
mov
mov
stos
stos
mov
mov
dec
cmp
enter
mov
push
cwtl
dec
sub
inc
ret
and
adc
sub
test
and
pop
mov
and
mov
gs
outsb
or
aam
js
mov
je
and
xlat
mov
push
lea
xor
test
push
mov
push
repz
fxch
mov
js
sahf
icebp
push
lret
sbbb
pop
mov
lods
out
je
xor
imul
shrl
loopne
rclb
jp
lret
mov
lods
sbb
stc
aam
mov
xchg
xor
mov
int
cmc
mov
rol
mov
ficoml
movsb
test
enter
push
or
xor
lea
sub
fisubs
in
scas
in
jg
sarb
popf
loope
inc
je
adc
mov
mov
andl
mov
adc
mov
out
lret
imulb
xchg
orl
ficoms
mov
cmp
lret
dec
out
fistps
fcomp
fdivrl
jmp
adc
leave
fs
or
inc
hlt
inc
push
insb
mov
mov
jle
jge
lahf
jmp
dec
mull
repz
insb
mov
hlt
inc
mov
add
inc
rorl
lea
loop
mov
jle
lcall
mov
icebp
sbb
idivl
movsl
xor
in
mov
adc
ss
mov
notl
or
aaa
test
adc
sbb
add
adc
pop
pop
xchg
loop
loopne
bound
out
addl
sarl
mov
into
out
xchg
popa
das
jne
out
mov
mov
or
test
fldt
out
mov
pop
and
sbb
popf
sti
pop
mov
inc
or
jo
mov
push
in
pop
mov
or
jae
or
cwtl
add
imul
push
inc
andl
outsb
cmp
into
pop
shll
xor
adc
call
dec
add
ret
stos
fnop
jbe
adc
inc
negl
and
mov
sahf
les
mov
pop
mov
jns
mov
shlb
pop
sbb
mov
pop
hlt
pop
cwtl
popf
push
imul
xor
lret
cmp
div
in
mov
aad
loop
lock
cmp
and
xchg
push
inc
or
test
xor
pusha
dec
xchg
enter
in
xchg
xor
dec
jae
shl
out
imul
or
mov
fcmovnu
sahf
sti
test
dec
mov
shlb
push
jnp
sub
mov
xchg
jl
mov
scas
fnsave
imul
jne
or
jne
push
divb
jno
sbb
inc
insl
outsb
jno
pop
jecxz
into
mov
jne
fxch
stc
cli
dec
nop
test
daa
das
adcb
and
sbb
mov
sbbb
add
jne
jb
subl
fidivs
xor
arpl
jmp
repnz
aad
pop
pop
mov
and
mov
jae
scas
xor
fcomps
push
mov
ss
jae
out
sbb
lret
push
mov
and
mov
mov
in
lock
lea
mov
dec
daa
pop
loop
outsb
cmp
shrl
scas
fsin
sub
js
sub
repnz
sub
sbb
cmc
jmp
cmp
dec
std
sbb
leave
jnp
and
and
mov
stc
bound
or
icebp
or
sub
add
pop
in
test
stos
test
and
rcl
sbb
dec
sbb
push
mov
arpl
addr16
leave
mov
rcll
enter
addl
fcompl
mov
in
push
lods
fsts
mov
mov
or
add
aad
mov
pop
ss
and
mov
je
test
jnp
push
sbb
in
aaa
sbb
jbe
mov
mov
push
rolb
inc
or
sbb
xchg
push
cli
jns
ljmp
mov
xor
icebp
dec
push
pop
repz
cmpsl
push
xlat
push
jp
rorl
xor
add
jg
test
sarl
insb
jnp
sbbl
test
lcall
subl
pop
xor
mov
dec
jg
mov
ret
insl
cwtl
sub
enter
dec
pop
icebp
jmp
flds
imul
je
inc
xchg
xor
jecxz
arpl
fs
je
in
push
or
pop
das
ret
dec
jae
pop
inc
xchg
sub
cmp
dec
mov
fistpl
sbb
xchg
cmc
or
sub
mov
xorl
xchg
jbe
jno
cld
into
shlb
jp
xor
in
adc
bound
jge
loopne
hlt
jae
icebp
push
mov
es
bound
std
jmp
sbb
adc
mov
push
pop
lea
aam
jnp
push
popa
pop
mov
and
in
mov
xor
inc
inc
dec
cmp
dec
ret
pop
sbb
std
stos
or
hlt
push
cmpsl
aas
pop
ret
jno
leave
push
xchg
xor
imul
sub
lods
fisubrs
inc
test
loop
fists
hlt
push
cmp
xor
stos
sbb
sub
mov
mov
cmp
vmulpd
inc
cltd
jle
adc
sbb
pop
jno,pt
push
fnstenv
xor
sub
call
outsl
pop
mov
adc
out
xor
subb
add
or
arpl
inc
sub
push
adc
sub
dec
mov
xor
pop
xorl
mov
cld
aad
mov
cmc
hlt
out
jbe
mov
adc
sbb
test
mov
lock
fisttpl
int3
mov
cwtl
ficoms
daa
jo
mov
dec
in
andb
adc
es
je
or
and
fdivrs
mov
clc
jg
ret
add
ret
ret
imul
xor
popf
jmp
lahf
inc
mov
or
pop
and
fcoms
fcomip
mov
or
push
xor
ret
pop
icebp
lret
pop
test
cmp
nop
add
test
adc
jp
mov
fcoms
inc
shll
mov
cmc
pop
rorl
das
mov
pop
dec
and
or
xchg
daa
cli
jo
cmp
ret
mov
cs
clc
pop
or
out
jecxz
fcoms
push
inc
insb
mov
lea
sbb
jge
addr16
lds
push
jno
sub
hlt
and
es
and
popa
xor
xchg
into
adc
pop
push
iret
daa
push
pop
cmpsl
xchg
nop
pcmpgtd
push
mov
mov
pop
adc
out
test
mov
mov
je
scas
cmp
mov
jl
test
test
fcomps
dec
adc
xor
sub
or
sub
rorb
std
push
cwtl
and
xor
mov
xor
xchg
ja
es
push
mov
xchg
mov
insb
callw
lods
or
imul
sbb
mov
mov
mov
mov
or
shll
sarl
pop
test
mov
in
adc
filds
imul
sbb
rcrb
and
das
adc
push
sub
fistpll
iret
sbb
rcll
dec
out
insb
xchg
in
stc
xchg
fldcw
mov
into
imul
sti
cmpsl
rclb
and
hlt
mov
daa
cld
pop
xor
lock
dec
in
arpl
sub
dec
aaa
ret
xchg
dec
fsts
or
insb
repz
les
lods
repnz
arpl
push
dec
orb
pop
jle
mov
sbb
sub
inc
jnp
dec
adc
test
xchg
pop
jne
hlt
push
pop
mov
mov
inc
and
inc
jmp
nop
and
push
jecxz
dec
push
pop
pop
mov
cmp
lret
in
cmp
and
mov
out
cmp
repnz
mov
mov
xor
repnz
xor
shlb
lods
mov
in
bound
lret
xchg
push
adc
pop
mov
pop
out
popa
jne
cltd
pop
sub
es
lea
xlat
stos
fdivrl
xor
loop
out
jl
sbb
mov
adc
addr16
xor
add
mov
push
sbb
and
outsb
fcoml
lock
lods
orb
push
mov
rcrl
ss
fists
dec
jo
fs
xchg
rclb
push
sbb
mov
cmpsl
mov
call
arpl
mov
mov
hlt
jae
aad
inc
jecxz
enter
sub
in
jb
cwtl
adc
push
inc
cmovne
inc
xor
sub
in
pop
in
adc
jns
imulb
xchg
and
inc
lods
inc
or
mov
add
fstp
sub
xchg
pop
jl
xor
dec
lea
leave
js
in
imul
jae
mov
fisubrs
jb
sub
pop
jmp
stc
lret
cmpps
outsl
jnp
mov
mov
out
je
xchg
inc
xor
adc
bound
sub
ss
pop
repz
jge
popa
inc
pop
and
xlat
or
fimuls
int3
insb
jmp
and
dec
ficoml
and
adc
jnp
sub
and
push
inc
pushf
imul
out
rclb
jp
adc
cmp
lea
xchg
mov
hlt
inc
dec
ja
xchg
jmp
adc
jo
arpl
jg
jo
cltd
jns
pop
and
in
std
push
add
inc
mov
out
mov
pop
popf
call
ds
test
add
mov
and
jo
rcr
xchg
fdivl
lcall
daa
decl
jmp
adc
sub
mov
lea
daa
in
pop
jns
mov
adc
arpl
mov
or
test
push
scas
jl
jmp
inc
and
fildl
lahf
and
pushl
outsb
je
dec
add
cmpl
out
cmp
test
into
cwtl
mov
xor
leave
jecxz
ja
in
cmp
dec
add
mov
pop
jle
scas
xchg
mov
dec
or
addl
mov
mov
jbe
aaa
pop
sti
ss
xor
lea
test
mov
je
dec
xlat
pop
imulb
shlb
je
xor
push
loope
pop
mov
pop
mov
lret
sub
js
push
loop
cld
jns
and
cmpsb
xor
insb
in
add
das
std
xchg
addb
mov
je
enter
mov
sub
cmp
call
in
jno
mov
cwtl
rorl
and
in
mov
mov
and
lea
jbe
cmp
inc
je
mov
adc
xchg
jb
mov
and
arpl
fdivrl
pop
enter
cli
and
or
movsl
data16
sti
imul
add
hlt
ja
push
out
rolb
or
ja
bound
push
inc
insl
testb
in
cmp
test
push
lods
lret
cmp
les
nop
xchg
lods
movsl
ret
mov
push
std
push
push
into
jae
or
addb
cmpsb
push
test
push
hlt
movsb
loope
pop
sub
sub
mov
cmp
xchg
sub
gs
ds
adc
inc
dec
hlt
mov
sbb
cmc
push
pop
sub
jnp
insl
test
dec
rorl
push
jbe
mov
lea
idivb
jns
mov
or
xor
sub
loop
loopne
xchg
xor
sub
and
pop
scas
cmpsb
inc
push
repnz
mov
push
xchg
das
mov
xchg
pop
sbb
jo
scas
mov
push
in
fisttps
iret
xchg
aaa
idiv
test
loop
mov
scas
mov
sbb
fistpl
mov
dec
cmp
xchg
in
subb
and
push
orl
js
lds
rclb
xor
addl
mov
push
adc
or
lds
cmp
mov
mov
and
push
insl
pop
mov
loop
pop
mov
fldcw
es
cld
clc
fdivs
iret
cmp
pop
xor
jge
and
popf
andb
sbb
mov
gs
dec
movsb
push
insl
mov
sar
sbb
or
setne
mov
xor
cwtl
daa
loop
sub
out
stc
jge
enter
xchg
adc
and
jmp
sub
mov
jmp
movl
rcrb
pop
mov
jle
in
xchg
nop
pop
cmp
daa
sub
lock
sbb
xor
inc
and
sub
fldcw
cli
ret
push
push
shrb
dec
sahf
loop
lods
dec
jno
inc
rcrl
mov
add
int
rcr
pop
mov
mov
icebp
js
or
push
xchg
xor
mov
sub
stos
xchg
pop
jno
adc
out
mov
add
cmp
push
mov
inc
sti
insb
lea
ja
sub
imul
dec
sub
mov
or
enter
jo
faddl
push
xchg
and
jp
xchg
dec
push
dec
imul
sbb
mov
jmp
inc
in
push
bound
mov
jns
xor
repnz
pop
cmpsl
and
js
rcll
shll
movsb
insb
insl
xchg
mov
stc
push
addl
jns
or
and
out
cwtl
sahf
js
sbb
dec
jge
into
por
pop
xlat
lea
cltd
hlt
dec
dec
adc
inc
mov
popa
adc
test
cmp
outsl
xchg
mov
add
add
mov
push
rcrl
lret
mov
and
data16
mov
sbb
lea
loop,pn
dec
cmp
mov
dec
and
sub
pusha
insl
movsb
test
sub
fmul
push
or
push
sbb
mov
int
jge
and
lds
fmull
loop
add
xchg
stos
jbe
jnp
xor
sbb
jg
xlat
pop
ss
mov
push
and
icebp
fwait
lret
rorb
xor
push
decl
fsts
and
mov
and
pop
scas
dec
and
fstps
sub
lret
rorb
push
push
icebp
push
pop
rcrl
notb
pusha
in
enter
xor
jle
je
loop
lds
and
cmc
mov
in
bound
mov
xor
push
mov
xchg
and
ret
mov
lods
insb
or
xor
xchg
and
inc
jo
pop
sub
cwtl
or
call
jle
push
cmp
push
adc
pop
shlb
push
pop
dec
scas
push
mov
in
push
push
cmpsb
sub
mov
cltd
je
or
dec
mov
push
sub
sub
insb
cmp
jle
sbb
lock
aad
pop
sbb
mov
aas
sbb
lret
push
dec
sub
dec
sbb
jl
fisttpl
inc
test
xorl
mov
jecxz
in
outsb
jns
push
lea
cld
adc
mov
lahf
sub
and
dec
jne
push
loop
mov
xchg
add
stos
mov
mov
push
addr16
mov
jne
pop
stc
add
nop
les
push
add
jno
xor
fsin
cmp
lock
or
loopne
add
test
jb
lcall
jne
iret
shll
loope
stos
pop
cmp
xor
sub
jle
sbb
rcl
and
sub
cs
xor
lea
sub
aam
ja
mov
pop
inc
adc
enter
dec
in
and
or
sbb
sbb
jl
mov
mov
sbb
faddl
mov
shr
hlt
data16
fbld
or
lea
mov
call
call
mov
mov
and
add
outsb
sbb
bound
xor
ror
ss
mov
jecxz
lret
repz
sbb
dec
jne
out
pusha
add
xchg
subb
ljmp
es
js
inc
pop
in
ds
shlb
jg
cmp
hlt
dec
jbe
sbb
cmpsl
add
xor
push
rorl
int
xchg
dec
mov
sbb
adc
popa
or
jno
xor
in
ficoms
inc
sti
aaa
and
xor
xlat
and
andl
aaa
sub
xchg
fwait
cmc
jno
divb
shrb
lea
imul
pop
sahf
in
loop
cmp
mov
ljmp
push
fsubrs
and
sbb
aad
das
lret
jo
dec
call
mov
mov
daa
mov
add
lods
loop
mov
je
xchg
xchg
test
inc
jle
pushf
sub
adc
pop
test
mov
dec
mull
stc
or
fadds
js
and
int
lahf
mov
in
mov
or
pop
xchg
add
mov
ja
pushf
lock
mov
xor
and
iret
inc
push
pop
pushf
sub
shlb
rcr
push
jl
mov
mov
shlb
or
mov
sbbb
sbb
mov
mov
pop
setbe
rorb
notb
cwtl
mov
jae
push
jle
mov
into
sbb
mov
pop
outsl
outsb
and
in
ficompl
js
insb
sahf
lcall
pop
sbb
pop
out
rol
jp
dec
or
pop
enter
mov
jno
je
int3
push
adc
mov
push
mov
mov
ljmp
ret
dec
inc
cmc
sub
push
stos
xchg
call
sub
lea
inc
sbb
pop
and
adc
push
pop
popa
push
lea
incl
cs
mov
mov
mov
adc
xchg
dec
push
push
in
xchg
or
pushw
jecxz
lea
mov
push
mov
lods
sbb
push
filds
or
and
sbb
push
and
fstps
cmp
push
sti
scas
jo
daa
xchg
out
cmp
xchg
lret
push
lret
gs
xor
es
jo
fdivs
xor
and
sahf
test
shrl
add
in
inc
xor
pop
dec
sbb
je
xor
addl
push
or
movsl
stc
daa
insb
push
testl
push
push
jecxz
mov
mov
pop
mov
mov
xchg
adc
add
mov
lods
or
je
jns
jp
call
pop
xor
mov
xor
mov
mov
outsl
cmpb
neg
pop
nop
xchg
sub
rclb
xchg
dec
pusha
jl
ljmp
icebp
outsl
mov
repnz
fsubl
fdivrl
mov
push
cmc
and
pop
lea
dec
fisttps
sti
jge
sub
cmp
push
stos
andb
adc
jbe
popa
inc
test
arpl
leave
fwait
imul
fs
in
cmp
inc
push
pop
fnstenv
mov
daa
das
cmpsb
fdivrl
xor
adc
loop
adc
lret
mov
mov
and
pushf
and
imul
pop
sti
out
mov
xchg
or
pop
mov
out
jns
jmp
std
mov
xorl
ret
mov
xor
stc
add
mov
scas
mov
int3
addr16
pop
dec
xor
in
xchg
ljmp
aam
sbb
inc
popf
add
mov
pop
push
sbb
xchg
arpl
in
push
mov
inc
dec
jg
pop
mov
and
testl
xor
jns
popf
xchg
imul
dec
es
mov
test
iret
sbb
pop
stos
inc
jo
cli
push
mov
dec
and
sub
xchg
leave
mov
es
les
repz
lods
push
cmp
xchg
in
fmull
adc
data16
adc
lcall
out
mov
hlt
pop
lea
bound
jae
aas
add
mov
mov
mov
icebp
add
aaa
push
and
mov
ror
jmp
shr
scas
xchg
daa
icebp
in
in
jne
mov
arpl
mov
and
xchg
arpl
mov
lea
stos
and
pop
mov
cld
and
icebp
arpl
movsl
ss
in
or
jmp
adc
daa
jno
cmp
push
in
leave
sub
sub
mov
mov
and
push
cmpsb
rcr
das
pop
jo
test
mov
adc
jbe
lea
jecxz
lods
test
jne
fsubl
dec
mov
test
adc
dec
mov
jns
mov
arpl
inc
addl
pop
mov
sbb
jae
loope
sub
adc
fs
cltd
mov
and
ds
xchg
lret
rcrl
or
mov
lea
popa
cwtl
sub
mov
lock
sbb
cmp
dec
sbb
hlt
sub
les
mov
xchg
outsl
aad
jl
inc
xor
bound
mov
loopne
jo
ret
ljmp
lahf
cmp
push
sub
xchg
arpl
add
xchg
aad
and
iret
cmp
push
adc
data16
dec
and
mov
aad
sbb
outsl
jns
lea
and
cltd
gs
add
xor
and
fs
inc
hlt
pop
pop
mov
dec
cmp
sbb
call
in
jle
dec
mov
push
std
outsb
into
sbb
push
adc
dec
scas
loop
and
stos
emms
stc
push
push
mov
push
adc
sub
mov
mov
insb
add
mov
xchg
out
mov
cwtl
push
stos
or
sbb
addr16
enter
sbb
std
mov
add
xchg
jle
pop
push
push
nop
rclb
inc
push
jnp
daa
inc
xor
popf
mov
sub
fmul
shlb
dec
or
imul
out
shl
sub
cmp
cli
jae
and
pop
xlat
jg
sub
mov
add
cmp
push
jno
or
push
sar
aam
ret
or
divl
in
xchg
fcmovb
mov
popl
ret
and
add
mov
orb
popf
push
xor
sbbb
cmpsb
and
in
jb
inc
in
push
mov
cltd
or
mov
and
lret
ss
jno
subb
push
arpl
je
and
sti
push
mov
arpl
out
pop
mov
mov
fldenv
icebp
jg
sbb
rcrb
inc
push
xlat
divb
xor
test
mov
add
xor
mov
sub
xor
dec
jp
cmpsl
pushf
xorl
mov
addr16
push
cmp
push
xor
push
sub
aad
xlat
xor
int3
shll
inc
mov
mov
aaa
lods
ljmp
arpl
and
and
jp
popf
mov
in
aam
lea
dec
shrb
adc
cli
adc
hlt
insb
cmc
push
scas
rclb
or
in
enter
xchg
imul
aam
jbe
xor
inc
scas
popa
stos
bound
lock
rclb
jle
jp
and
lea
add
xchg
int
in
sbbl
dec
dec
pop
pop
mov
out
mov
inc
add
icebp
fildll
push
mov
jb
pop
in
fmulp
iret
add
repnz
loop
hlt
or
xchg
scas
sbb
ja
enterw
cmp
cmp
sarl
mov
xor
fucomp
adc
loopne
sub
std
xchg
out
mov
mov
sub
fucomi
rclb
in
sbb
cltd
pop
adc
cmp
flds
lock
ficoms
mov
stos
mov
sbb
fsubs
lret
into
mov
in
mov
mov
pop
mov
mov
loope
lds
push
gs
lods
lea
aas
in
xchg
lea
mov
loopne
xchg
xorl
adc
lea
dec
mov
and
mov
jae
pop
adc
inc
fimuls
lea
mov
push
lea
andb
test
fstp
mov
rcll
and
or
jmp
fldenv
arpl
or
daa
bound
rorl
cli
leave
mov
xor
xor
pop
inc
testl
sbb
lea
inc
scas
mov
mov
test
pop
mov
jno
jl
jo
xchg
fidivs
jge
mov
jg
jp
push
mov
rcrl
adc
insb
xchg
nop
loope
ljmp
test
movsb
int
rclb
jo
push
pop
xchg
and
negb
sbb
test
mov
fs
cmp
cmpsb
into
sub
sub
mov
stos
lea
pop
sub
dec
movsl
jb
test
ja
add
ret
jecxz
fistpl
jb
inc
lods
dec
shlb
xorb
mov
jmp
sbb
lret
adc
fidivrs
arpl
aam
pushf
xchg
loopne
roll
call
and
int3
les
and
mov
aam
and
push
xor
add
inc
adc
popf
stos
push
push
ljmp
test
cltd
inc
lret
xor
mov
mov
push
push
xorb
mov
xchg
ja
sub
insl
adc
rcr
inc
data16
push
adc
lea
mov
cmp
jmp
aas
xchg
jae
out
push
fs
fildll
sbb
cs
mov
lea
push
sub
xchg
mov
sub
mov
cmp
mov
pop
imul
push
repz
cmc
xor
jo
hlt
lret
shlb
jl
stc
xchg
repz
xchg
bound
sbb
jp
adc
jle
push
push
mov
lods
sar
or
adc
mov
fisubs
mov
inc
mov
cmpsl
mov
mov
sbb
pop
test
cmpsb
sar
xor
jecxz
mov
push
popa
push
inc
and
cmc
mov
xor
push
xchg
push
arpl
dec
mov
mov
imul
or
pushf
mov
dec
lea
sub
jno
inc
add
jo
mov
scas
pop
mov
mov
ljmp
shll
push
insb
xchg
mov
clc
arpl
add
es
xchg
mov
ret
sahf
xor
mov
xchg
daa
inc
enter
arpl
adc
inc
mov
imul
mov
xor
inc
jmp
xor
jecxz
mov
int
test
ret
jg
pop
mov
xchg
inc
inc
and
lret
popa
in
jl
push
sub
repnz
stos
out
xor
repnz
sbb
jmp
mov
fsin
push
and
xor
scas
inc
or
inc
inc
inc
jno
push
add
push
adc
adc
xor
out
in
pop
mov
or
aas
hlt
int
add
sbb
and
incb
or
xor
out
aam
loop
and
orl
mov
pop
push
push
mov
push
dec
lret
jno
jne
sbb
or
aad
out
loop
aad
and
pop
adc
hlt
adc
fucom
add
in
cmp
mov
jns,pn
in
sub
push
js
or
inc
mov
faddl
cmc
mov
mov
sub
fstpt
inc
rcrb
jnp
insb
fadds
lret
ds
jae
mov
cmp
push
xor
insb
xchg
adc
jge
arpl
fsubl
mov
jmp
mov
sbb
es
sti
or
xchg
xor
jg
dec
insl
adc
dec
and
mulb
idivb
pop
lea
inc
data16
mov
or
xor
mov
adc
pop
sbb
sub
testb
fmulp
int3
mov
xchg
iret
pop
cmpsb
imul
test
subl
and
adc
sar
dec
dec
repnz
cmp
jge
cltd
div
and
mov
loope
fbstp
push
mov
mov
loop
insb
add
push
xchg
add
pop
popf
push
in
orb
sbb
mov
jmp
add
adc
or
icebp
pop
jp
andb
mov
lcall
cmc
sub
jns
push
jmp
leave
sbb
or
adc
xchg
call
jae
sbb
in
iret
add
jmp
xlat
sub
sub
xchg
dec
mov
or
mov
xchg
or
dec
test
inc
push
xchg
std
lods
xchg
jl
adc
in
test
jno
sarl
in
clc
dec
mov
sub
mov
pop
decb
sub
sbb
push
adc
pop
dec
push
popl
adc
pop
push
mov
sahf
and
stos
mov
xor
cmp
aas
cmp
shll
icebp
sahf
cli
push
mov
jg
mov
loopne
stc
ds
addb
and
rcrl
repz
dec
mov
pop
xor
insw
mov
cmpsl
jne
fnsave
sbb
cmp
adc
jno
into
pop
shll
pusha
pop
out
jno
lea
cltd
inc
push
and
sbb
lock
out
mov
lea
sbb
lret
cmc
es
push
mov
outsl
jmp
cmp
inc
add
jge
mov
mov
xor
rorl
das
hlt
mov
push
cmp
andb
xor
fstpt
jno
jg
lods
test
iret
stos
dec
pop
adc
insb
inc
insl
mov
in
and
lea
mov
fiadds
xor
movsb
cmc
push
lret
xor
ja
loope
inc
mov
jae
jo
in
enter
stc
loop
and
push
fs
and
push
add
lahf
sbb
jmp
sub
push
in
scas
jns
jo
adc
lea
add
mov
gs
pusha
jp
lret
addl
fisubrl
ret
fbld
movsb
add
push
push
notb
movsl
clc
pop
pop
jmp
mov
dec
mov
jmp
cld
mov
ljmp
push
popf
subl
clc
stos
shll
popa
push
lds
mov
adc
loopne
call
loop
pop
rol
dec
jg
imull
xor
rcl
fucomp
hlt
pop
incb
mov
lea
in
or
in
js
jle
inc
mov
pop
and
or
mov
pop
dec
pop
std
aad
iret
cmp
cmpb
mov
les
dec
inc
push
and
xor
in
push
insl
jecxz
ret
mov
sahf
out
mov
push
int
shlb
sub
call
stos
ss
or
les
mov
sbb
pop
lds
and
xor
mov
into
add
data16
pushf
fnsave
push
mov
test
insb
cmpsl
pushf
and
dec
mov
lock
cld
xchg
testb
sbb
cmp
mov
mov
sub
subl
imul
inc
sbb
jns
pop
cwtl
test
or
mov
andb
iret
pop
adc
or
pop
inc
out
cmp
int
ljmp
adc
inc
lock
insb
js
push
cmp
xor
in
fiaddl
xchg
mov
cwtl
ja
or
pop
cwtl
and
push
mov
cwtl
mov
jbe
ret
cs
jl
loope
movsl
adc
lea
and
mov
cmpsl
xor
lret
js
arpl
mov
call
or
or
jl
int3
fsts
push
pop
fidivrs
sub
dec
sub
pop
sub
jmp
sub
lock
sbb
bound
sub
aad
pop
negl
ss
out
insl
sarb
mov
mov
or
add
sub
out
cld
mov
xchg
sub
sub
mov
aaa
jl
fwait
xchg
add
mov
sub
imul
mov
scas
push
push
lcall
insb
pop
sbbl
cltd
lods
inc
lods
jb
push
sub
lret
fcomip
push
mov
js
dec
jnp
mov
repnz
data16
cmpsb
cld
jae
adc
sub
movsl
and
mov
and
sbb
adc
les
scas
orb
roll
jae
mov
arpl
pop
jbe
das
daa
int
inc
jg
lahf
xchg
aam
lea
lret
and
and
xchg
pop
pop
fbld
nop
test
inc
fdivr
inc
mov
adc
cld
cmp
adc
jle
jae
inc
sbb
popa
int
es
jne
or
orl
inc
push
jo
mov
mov
aaa
sub
cmc
incl
xchg
dec
ja
jmp
mov
mov
add
adc
mov
add
aam
xor
or
cli
add
cli
cmp
jae
sbb
or
xchg
shll
push
test
gs
bound
imull
mov
enter
pop
inc
inc
cmp
insb
pop
stc
fstpt
mov
loope
jecxz
lods
mov
lgs
xlat
inc
hlt
jnp
jmp
dec
add
out
xchg
and
lods
aas
push
jae
jle
add
push
fchs
inc
in
xor
inc
mov
sahf
sub
or
aam
push
cmp
mov
mov
sbb
fnstenv
adc
sbb
aad
dec
cmpsl
movsb
adc
push
inc
addr16
bsr
pop
ret
jmp
adc
int3
fcomps
not
mov
stos
pop
loope
pop
inc
mov
mov
push
pop
aaa
lock
mov
aaa
insb
pop
add
punpcklwd
push
movsl
push
leave
push
xorl
jle
clc
push
shrb
in
fwait
jb
jg
pop
jae
in
sub
shl
add
mov
pop
and
subl
mov
or
pop
fsub
pop
loopne
dec
xor
lret
push
in
xchg
int3
mov
jno
mov
lods
mov
pop
imul
in
fdivrp
bnd
lret
mov
cmp
push
mov
dec
out
push
cwtl
scas
dec
shl
pop
xchg
mov
outsb
inc
mov
sub
or
loop
gs
adc
xchg
jae
and
cltd
mov
lods
dec
out
xorl
in
verw
outsl
mov
repnz
clc
dec
mov
sarb
jo
xchg
xor
add
out
dec
inc
js
cmp
jl
loopne
mov
push
test
js
or
xor
mov
jecxz
push
icebp
shrb
add
out
lret
fwait
sbb
icebp
sti
ficompl
lret
fbstp
aam
in
fdivr
out
sub
dec
adc
sbb
and
dec
ret
in
and
es
mov
jp
mov
dec
xchg
in
or
std
aaa
into
leave
mov
jge
outsb
iret
aad
pop
rcl
jecxz
jae
adc
sub
out
pushf
sbb
adc
fldcw
out
add
pop
xor
add
xchg
frstor
loope
stc
push
dec
jmp
dec
jb
xchg
cmp
adc
add
int3
pop
fisttpl
sbb
push
xor
sub
adc
cmc
hlt
xor
es
mov
lock
sub
mulps
icebp
lea
in
xchg
movsb
in
ljmp
xor
xchg
dec
callw
add
xchg
js
cmpsb
loope
je
mov
mov
ficomps
outsb
or
and
xor
sarl
lea
push
push
xchg
daa
inc
mov
stos
ds
pop
jge
jmp
sbb
xlat
jo
or
dec
pusha
repz
push
rcl
dec
cltd
sbb
inc
outsb
in
and
in
dec
jle
insb
fldenv
mov
push
arpl
push
nop
in
ja
test
mov
in
mov
xchg
and
lahf
lret
sahf
and
inc
jo
ret
pop
lods
sbb
filds
pop
movsb
bound
cmp
jg
and
or
jbe
dec
in
in
loopne
mov
rorl
fstp
cmpl
and
es
es
cmp
pop
enter
daa
inc
xor
in
cmpsl
inc
fbstp
and
mov
out
in
add
inc
xor
js
sbb
nop
and
push
mov
fcomps
out
cmp
iret
shl
add
mov
and
mov
mov
jp
or
stos
in
adc
sub
xor
mov
jno
mov
jnp
add
mov
aaa
jecxz
xchg
lods
lcall
mov
enter
das
push
popf
jo
mov
push
jp
dec
data16
insb
fnstcw
xchg
xchg
testb
or
scas
mov
sbb
dec
adc
sti
xor
icebp
outsb
dec
and
das
cmp
jg
scas
in
pop
sub
fistps
mov
push
xor
neg
scas
pusha
data16
loope
in
and
int3
pop
sbb
xchg
les
dec
or
stos
push
mov
icebp
xor
mov
sub
mov
inc
dec
shll
cmp
movsl
ret
cltd
mov
cmc
insl
lea
sbb
rclb
arpl
out
inc
push
test
jns
cmp
push
stos
fyl2xp1
pushf
imul
push
mov
pop
xchg
loope
jbe
stos
js
icebp
inc
jns
sub
lods
or
dec
add
sub
xchg
fcmovnbe
outsl
pop
mov
sbb
fstps
and
xor
mov
in
mov
sub
jecxz
cmp
int3
pop
psubusw
add
mov
pxor
mov
mov
sub
leave
add
outsl
mov
or
pop
lea
add
jg
mov
mov
lret
stos
or
jl
inc
pop
pop
lods
adc
jecxz
push
jmp
adc
and
inc
and
mov
pop
fldenv
stc
sbb
lea
xor
ljmp
fidivl
dec
mov
xchg
pushf
insb
loopne
and
stos
test
xchg
push
fists
cwtl
cmp
inc
push
mov
lock
dec
sub
pop
pop
shl
add
daa
jl
pop
dec
and
jl
sub
lods
xchg
testl
dec
xchg
sbb
int3
gs
xchg
std
lret
pusha
xchg
mov
adc
dec
jno
dec
mov
popa
arpl
push
cs
mov
int3
sbb
xchg
add
dec
mov
sahf
loopne
sbb
fmull
dec
lea
and
cmp
push
cmp
out
cmp
push
orl
arpl
push
mov
stos
mulb
adc
in
insl
sbb
mov
mov
fwait
sbb
out
add
add
sbb
jno
stos
pop
in
pop
mov
xor
shr
out
and
and
daa
pop
pusha
pop
stos
mov
sub
jp
jns
fistps
push
mov
mov
in
test
jo
popa
mov
mov
push
mov
add
int
gs
fmuls
sahf
and
loopne
lahf
pop
in
adc
out
push
in
jnp
in
out
fwait
xor
jne
jmp
call
jmp
xchg
sbb
cli
outsl
mov
bound
fdivr
jecxz
inc
aam
mov
jo
mov
shrl
stos
cmp
mov
pop
push
popa
scas
jbe
mov
outsb
add
sub
gs
and
dec
sahf
lea
hlt
and
mov
inc
or
test
adc
mov
mov
add
sahf
insb
jne
or
dec
testl
mov
push
inc
out
mov
mov
pop
xchg
xlat
imul
notl
sbb
mov
xor
jae
dec
ljmp
mov
adc
sti
ss
pop
jmp
jno
aam
jmp
cli
shrl
mov
mov
jbe
add
int
in
sarl
in
negb
shll
or
sbb
jno
test
je
cmp
in
cmp
dec
pop
push
push
sub
xor
inc
mov
or
pop
cli
jmp
cltd
sbb
push
in
or
imul
push
rorb
in
mov
and
and
test
out
dec
sti
por
push
stos
adc
cltd
mov
std
sbb
sub
sbb
or
test
mov
pop
mov
dec
arpl
xor
inc
dec
xchg
jle
sbb
adc
jecxz
xchg
lea
popa
repnz
aad
adc
fcomp
push
sbb
push
bound
fildl
pop
movsl
jg
or
rcrl
rolb
sub
push
ja
cmc
xor
leave
stos
and
dec
jmp
lea
push
cli
mov
test
sbbl
in
push
mov
subb
mov
addps
push
into
xor
adc
int
sbb
add
mov
mov
mov
clc
adc
std
jb
add
jae
mov
test
cli
shlb
shll
dec
or
popa
dec
icebp
cmp
imul
sbbl
pop
push
sbb
add
inc
and
subl
mov
xor
dec
add
ret
push
mov
cmp
in
lea
cmp
sub
icebp
inc
int
sti
xor
inc
es
jg
push
jmp
inc
incb
ja
rcl
aad
push
add
js
jno
mov
pop
shrl
adc
lcall
popa
in
dec
xor
add
jmp
cmc
stos
out
mov
or
int
or
lret
mov
dec
inc
jp
arpl
jnp
adc
call
cmp
repz
scas
add
gs
lock
sub
jge
sbbl
sub
js
push
sub
pop
jae
pop
mov
sub
push
adc
lea
mov
and
mov
mov
in
adc
lods
lea
jecxz
push
xchg
xchg
loope
fsubr
or
scas
mov
mov
mov
push
stos
cmpl
ret
loope
jns
mov
or
sub
icebp
in
push
mov
adc
clc
imul
dec
pop
clc
repz
inc
jp
dec
inc
repnz
mov
mov
xchg
cli
add
fcomp
jmp
xlat
xor
sbb
in
sbb
insl
loope
xchg
add
loope,pt
pop
arpl
xorb
mov
cmp
in
dec
mov
decb
sbb
push
pop
and
jmp
xor
inc
shll
mov
or
pop
push
fdivrs
lock
mov
lea
push
mov
xorl
pop
and
pushf
ret
mov
aam
imul
cmp
add
movsl
sub
leave
push
and
pop
int
pop
in
jmp
sahf
in
out
lods
in
pushf
inc
imul
pop
daa
xchg
ljmp
sub
vdivps
push
mov
out
fs
push
adc
daa
pop
mov
cld
in
dec
movsb
subb
aas
enter
std
addr16
loopne
out
and
stc
fcoms
xchg
add
ficomps
add
dec
xor
fidivrs
lea
bound
sbb
les
arpl
arpl
dec
das
clc
dec
stc
std
sub
js
cmp
dec
out
stos
inc
fwait
or
icebp
mov
and
fstpt
xchg
lock
hlt
mov
push
adc
int
and
lea
mov
arpl
xchg
imul
or
cmpsw
fbld
jbe
es
dec
xor
push
sbb
xchg
ret
sar
and
loop
fbstp
adc
shl
sbbl
and
cli
add
or
jl
sub
rcrl
jns
pop
fdivp
pop
sar
fdivrs
mov
movsb
imulb
stos
push
jo
or
pusha
or
dec
mov
mov
enter
popf
pop
fnstenv
xchg
push
mov
xor
movsb
pop
sub
push
ljmp
sti
sbbl
pop
cmp
dec
ja
sub
inc
jnp
fisttps
xorb
cld
xchg
push
popa
lods
xor
adc
mov
mov
xchg
xor
sub
pop
sarl
int3
and
hlt
in
fbld
mov
adc
inc
jnp
lret
mov
or
pushf
mov
ja
out
adc
das
and
enter
mov
ja
out
cmp
cmpsl
xchg
inc
lods
adc
pop
inc
jl
push
arpl
xor
rol
and
push
jno
negb
data16
jmp
pop
imul
push
inc
adc
jle
in
jo
dec
pop
lea
aam
push
stc
je
xchg
daa
pop
sti
adc
jmp
cmpps
stos
fwait
mov
dec
dec
nop
popf
clc
push
or
jbe
pop
mov
and
inc
sbb
adc
mov
clc
dec
and
roll
pop
sarb
ret
push
test
mov
mov
adc
stos
rorb
arpl
and
sbb
lahf
push
jo
sbb
fmuls
repnz
mov
push
push
cmp
pushf
hlt
fnstsw
shlb
enter
and
fstpt
mov
mov
rolb
push
adc
sar
sbb
push
mov
popa
pop
mull
xchg
test
stc
inc
and
repz
add
mulb
fwait
in
cmpsb
loop
out
bound
cmp
insl
jns
ja
or
jge
or
add
fnsave
and
addr16
pop
adc
insb
mov
mov
fwait
lea
dec
sub
cmp
inc
je
push
inc
arpl
sub
addr16
fsubrl
mov
lock
add
lea
out
insb
push
jl
pop
mov
xchg
int
jecxz
shlb
push
in
mov
add
test
pop
inc
fdivl
es
mov
test
mov
shl
push
inc
movsl
jmp
insl
dec
jmp
repnz
push
pushf
sub
icebp
push
js
test
inc
movsl
daa
mov
dec
clc
movsl
lret
mov
pop
adc
or
xor
in
in
fwait
rcrb
pop
pop
in
mov
jo
xchg
push
xor
enter
push
int3
cwtl
jle
popa
xor
pop
mov
fsubs
in
dec
xchg
add
test
fwait
minps
pop
stos
dec
dec
bound
daa
and
insb
sahf
push
add
pop
cmp
push
mov
push
and
movsb
nop
into
or
lds
in
xor
mov
je
or
in
push
loop
or
dec
int3
loop
hlt
fldl
add
dec
cmc
inc
fsubrl
mov
std
dec
imulb
mov
inc
shrl
je
dec
js
jmp
mov
mov
or
jg
mov
push
dec
out
popa
jo
sarb
pop
pop
popf
in
add
popa
jmp
fisubrl
pop
sub
dec
insb
mov
cmp
push
xchg
xchg
sbb
hlt
enter
add
sub
mov
or
ds
or
fmul
inc
jno
mov
jp
out
mov
inc
dec
pop
testb
jo
arpl
mov
lahf
add
scas
stos
stos
and
or
movsb
push
xor
lods
js
dec
outsb
inc
and
loope
mov
sbb
pop
push
test
dec
test
enter
adc
ret
dec
in
pop
stc
out
or
pop
pop
out
fstpl
fidivl
test
enter
jge
data16
mov
mov
fincstp
fmuls
dec
lock
cs
in
cwtl
aad
stc
mov
mov
dec
pop
lds
ret
subb
push
adc
or
jae
hlt
cmp
and
in
inc
push
std
jae
aam
jge
in
inc
dec
mov
xchg
cmp
popf
and
xchg
lret
fisubrl
aas
ljmp
imul
arpl
sub
mov
lea
jle
jmp
sahf
shrb
scas
push
dec
mov
repnz
jns
mov
repnz
inc
cmc
xchg
mov
pop
insl
je
mov
or
sbb
repz
in
jg
xor
mov
fsubl
mov
js
enter
pop
inc
sbb
jae
adc
lock
lods
push
jae
mov
push
stos
nop
add
mov
int
pop
push
test
js
inc
lea
xchg
push
xchg
pop
jne
out
iret
mov
push
jp
jno
sub
daa
jb
pop
adc
and
cmp
pop
sbb
adc
mov
rep
pusha
pop
jb
push
jne
push
lock
ja
imul
fldt
adc
jle
pop
sbb
lret
xor
mov
pop
and
in
xchg
or
jbe
xorb
xchg
mov
lea
jmp
inc
and
lahf
in
aad
jae
or
xor
mov
mov
mov
dec
stos
inc
fcoml
int3
push
mov
inc
arpl
movsl
mov
insl
std
les
mov
mov
mov
fwait
lret
loope
dec
dec
push
add
add
hlt
mov
mov
test
push
stos
dec
add
sub
icebp
stc
ss
mov
in
adc
hlt
es
mov
in
outsb
and
add
nop
dec
test
scas
sahf
loop
jbe
and
lea
repz
xchg
fucomi
mov
fmul
jae
mov
add
xor
in
dec
jg
clc
fadds
imul
mov
and
bound
aad
mov
sub
lock
jnp
push
xchg
mov
mov
dec
aam
adc
daa
jns
sub
sbb
pop
push
push
cmp
xchg
cmp
xchg
test
push
push
pusha
ror
dec
push
js
fsubrp
push
lods
sub
in
stc
inc
loope
pop
test
push
les
jle
jmp
movsl
or
inc
xchg
fsubrs
lds
mov
jae
mov
mov
and
lret
outsb
in
bound
pop
cltd
sub
std
cli
into
aam
sub
dec
mov
jb
test
into
loopne
pop
jcxz
pop
test
pop
fdivs
pop
jge
fistps
lcall
mov
push
xor
cvtpi2ps
cmpsl
fs
push
jmp
mov
lahf
pop
loop
mov
outsb
das
lock
add
mov
test
add
pushf
pop
mov
and
xor
xchg
lods
mov
mov
outsb
aad
arpl
pop
add
in
add
adc
mov
cmpsl
cs
mov
loope
aaa
push
sti
popf
lods
cmpsb
push
cmp
outsl
dec
adc
mov
movsb
fistpll
push
and
test
push
jp
xor
or
adc
jbe
loopne
jl
cwtl
pop
push
call
rorl
fstl
cld
jae
xchg
icebp
scas
sbb
mov
dec
mov
mov
pop
jmp
inc
daa
lea
cmc
popf
fsubr
rol
push
stos
inc
cwtl
popl
inc
jge
pop
in
imul
adc
repz
mov
pop
xor
sub
fstpt
push
sahf
ret
popa
sub
ds
cltd
shlb
pushl
xor
xor
mov
sub
inc
lret
ret
arpl
adc
adc
out
push
lahf
flds
loop
mov
sbb
mov
in
sbb
lret
or
shll
sbbb
rcrb
das
lea
mov
xchg
mov
dec
sbb
and
mov
mov
out
lds
push
mov
cli
in
sbb
mov
dec
insb
inc
outsl
mov
insl
gs
popa
mov
or
sahf
sub
mov
loope
cmp
sbb
jo
sahf
sbb
xchg
bound
addr16
pusha
lea
stos
mov
insb
test
subl
data16
into
mov
cmpsl
mov
mov
inc
or
adc
jnp
or
shl
inc
out
sub
jecxz
mov
or
xor
popl
mov
ja
test
insb
lea
in
dec
jnp
in
mov
sbb
imul
in
jno
xchg
adc
in
mov
in
dec
mov
and
jnp
push
orb
das
loopne
shll
mov
sub
xchg
jnp
mov
adc
mov
xor
fmuls
sahf
mov
fnstcw
mov
mov
sub
test
inc
pop
out
mov
mov
mov
mov
xlat
jbe
gs
int
ret
enter
and
and
adc
add
divb
pop
mov
or
mov
std
pop
sahf
mov
int3
mov
jl
stc
mov
lret
mov
pushf
xor
inc
adc
loope
dec
xchg
fnstenv
push
cmc
jnp
ljmp
dec
sub
mov
mov
or
test
xor
and
sub
out
mov
add
inc
mov
fwait
fs
xor
sbb
inc
or
or
inc
clc
or
pop
sahf
add
push
jb
mov
fs
sbb
aas
mov
lret
jne
xlat
fwait
mov
fstps
shll
add
sub
push
jmp
jle
pop
and
cmpsb
rorl
jl
in
outsl
or
mov
mov
shlb
gs
shrl
cmp
dec
dec
sbb
lahf
sbb
imul
pop
push
in
sub
sub
dec
mov
push
cld
sbb
fcoml
mov
mov
jnp
aad
mov
inc
push
push
loop
das
out
push
dec
lcall
xchg
cmp
fld
ljmp
fnstcw
sbb
std
mov
clc
push
jb
sub
mul
mov
adc
cld
fidivs
adc
pop
hlt
loop
mov
inc
or
loop
in
sysexit
pop
and
or
sub
mov
push
pop
pop
lods
sub
jl
lods
in
mov
lock
in
adc
aaa
loope
jl
insb
and
arpl
cmc
pop
rorl
loop
mov
push
in
mov
cmc
jns
sbb
sbb
sbb
cmc
gs
mov
packsswb
shlb
adc
inc
in
or
cmp
call
jns
repnz
insb
dec
mov
iret
adc
fwait
in
fdivl
test
out
sub
jo
ja
in
adc
js
stos
push
push
stc
fs
or
insl
fisubs
sub
dec
in
adc
mov
dec
adc
cmpl
sbb
fdivs
cmp
xchg
repnz
ja
pop
push
lds
loope
jno
mov
pop
in
push
loop
loope
mov
int
insl
sub
pusha
pop
rcr
or
mov
movsl
imulb
aaa
lret
mov
enter
jg
dec
movsl
pop
jle
dec
add
pop
dec
int
in
fbstp
negl
test
dec
daa
and
repnz
xchg
into
pop
jno
mov
mov
rorl
add
shrl
insb
xor
ja
out
dec
fnstenv
xchg
lea
call
mov
cwtl
and
xor
push
ja
lea
es
in
cmc
push
push
mov
push
mov
cmpsl
out
mov
loop
es
or
and
imull
cmp
in
stc
pop
xchg
arpl
sub
lea
not
or
jo
mov
pop
cs
scas
mov
dec
mov
data16
add
in
mov
cmp
sub
xor
add
arpl
popf
jo
dec
shrb
arpl
rcl
in
sub
daa
sbb
dec
add
adc
push
in
out
das
push
mov
mov
push
sbbl
jl
inc
cmp
clc
cmp
or
mov
sub
nop
daa
jp
inc
jbe
js
pop
sub
enter
sub
sahf
enter
rcr
xchg
cmp
sbb
cmp
sbb
inc
addr16
sbb
pop
cmp
adc
call
addr16
loope
xchg
and
xor
ja
pop
jno
mov
pop
loope
sbb
add
imul
ss
out
mov
lea
sub
je
push
mov
fucomip
dec
mov
mov
push
push
add
repz
stos
movsl
jne
inc
shlb
or
cmp
loope
mov
xchg
in
pop
loope
mov
dec
filds
jne
ret
pop
aam
ljmp
mov
das
cld
dec
mov
or
repnz
lods
cmp
test
and
cltd
xchg
mov
stos
arpl
sbb
push
lret
in
jno
sub
jecxz
ret
addr16
pushf
jbe
cmp
sbb
cmp
jmp
ret
gs
rorb
pop
rcl
sub
jp
js
xor
xchg
lods
sub
adc
cmpsb
jmp
subl
in
out
test
fdiv
gs
faddl
sbb
and
xor
add
scas
gs
sbb
int
std
mov
js
mov
hlt
mov
mov
sub
and
int
popa
leave
test
test
mov
push
insb
stos
bound
mov
jnp
test
iret
add
ja
add
outsl
lea
fwait
popa
mov
es
mov
inc
pop
jns
loope
push
ret
rcll
xor
dec
fstps
loop
into
pusha
mov
push
in
inc
adc
fcoms
add
inc
sub
popa
clc
jmp
push
outsl
lahf
pop
sub
fsubs
mov
sub
lcall
fists
stos
mov
mov
lret
es
frstor
push
jmp
es
adc
sub
insl
sub
lods
add
les
or
in
cltd
cmp
outsl
hlt
and
lahf
push
adc
clc
mov
mov
aaa
push
imul
in
push
xchg
and
loop
cmp
pop
pop
xchg
scas
gs
sbb
daa
js
enter
repnz
jmp
adc
add
mov
xor
int
sbb
in
lea
cmc
mov
ds
ljmp
scas
pop
xor
sbb
inc
add
dec
pop
out
outsl
int3
movsb
arpl
pop
enter
jmp
xor
xchg
xchg
xchg
jb
cmpsb
lea
xor
insb
inc
mov
mov
gs
dec
stos
divl
mov
fistl
fldenv
jg
in
fnsaves
pop
shlb
test
mov
mov
mov
lods
pop
mov
aad
jno
dec
mov
inc
pop
inc
sbb
pop
dec
in
pop
and
xor
xor
adc
add
dec
mov
jo
lea
inc
adc
mov
sub
mov
loop
and
lea
cwtl
dec
sbb
cmp
dec
outsb
arpl
push
das
xor
adc
or
lods
lcall
inc
xchg
sbb
sub
insl
dec
and
mov
testl
imul
mov
xor
lods
mov
insb
inc
push
adc
jo
inc
dec
pusha
cmc
and
je
movsb
data16
cmc
sub
fcomi
lea
mov
loop
jle
fwait
stc
test
dec
jb
arpl
or
jno
adc
ss
test
imul
xlat
mov
imul
std
jge
iret
sahf
and
jbe
and
gs
cmpl
sti
lods
sbb
add
add
cmp
cmc
enter
or
xchg
push
lods
add
inc
or
mov
mov
sub
rorb
inc
out
orl
xor
mov
lock
cli
sub
ret
lods
gs
loopne
aad
adc
popa
xor
adc
shrb
and
popa
jb
push
and
xor
or
sub
popa
mov
jmp
adcl
lahf
cmc
mov
or
add
cld
xchg
xchg
adc
aas
xor
xchg
js
pop
adc
xlat
mov
or
and
adc
fisttps
rcll
insl
and
hlt
jne
cmp
adc
aaa
lret
jne
jecxz
in
stos
in
jnp
adc
dec
aaa
cmp
mov
inc
lret
cmpb
insb
and
in
ss
lea
fnstsw
gs
cmpl
xchg
mov
aaa
push
pop
ret
or
cmpsl
mov
mov
out
js
ret
pop
and
cmp
xor
push
or
fnstcw
rcrb
adc
lret
lea
hlt
ret
and
rorl
bound
jmp
sbb
lods
jo
sahf
mov
xor
mov
jp
jns
and
rclb
xor
dec
ja
mov
jmp
gs
shl
lods
out
mov
mov
iret
arpl
push
sahf
add
mov
jmp
dec
stc
jp
mov
or
mov
adc
imul
jmp
mov
jne
jge
mov
adcl
in
dec
lahf
jecxz
add
xorl
std
inc
inc
loop
incl
ja
je
add
add
xor
pop
cmp
xchg
mov
push
leave
adc
jae
fidivl
mov
stc
pop
push
pop
mov
cltd
mov
mov
sub
or
call
mov
loop
inc
sbb
or
in
cmp
xchg
cmp
lea
fnsave
imull
gs
xor
sarl
cmp
mov
inc
xor
and
loop
mov
pop
mov
hlt
jmp
outsb
pop
mov
call
adc
dec
push
jmp
adc
cmp
mov
sbb
scas
add
sti
bound
daa
sbb
loope
and
xlat
hlt
sub
mov
int3
jno
into
loopne
mov
sub
adc
adc
cmc
sbb
mov
cmp
cmpsl
lock
shlb
mov
and
mulps
out
repz
fdivr
iret
fldenv
cmpl
sbb
push
sub
mov
and
repnz
xacquire
push
pushf
decb
add
push
push
mov
lret
fdivl
xchg
push
loopne
dec
cmc
mov
imul
mov
cs
dec
mov
shll
mov
loope
jge
fidivrs
jns
gs
cmp
push
addr16
mov
unpckhps
push
mov
sub
shl
jb
fstpl
mov
adc
push
xchg
inc
mov
pop
ret
loop
and
divb
mov
into
fdivs
xchg
cmp
dec
int3
shrb
pop
cmpsl
jo
ret
push
movsb
or
jl
pusha
pop
mov
sbb
add
adc
js
out
and
popa
pop
imul
sbb
test
mov
js
dec
cld
adc
mov
dec
cmp
fldenv
push
push
test
pop
cwtl
mov
inc
add
push
pop
enter
dec
jp
lock
repz
or
xchg
push
sbb
xor
cmc
insb
and
pop
fdivrs
out
sbb
ss
out
movsb
sbb
lea
jnp
adcl
jmp
mov
shl
into
stc
fimull
sbb
insb
mov
push
jb
das
add
push
test
xor
lods
lea
mov
es
lock
jle
insb
test
lods
je
data16
outsb
loope
adc
mov
pop
fs
dec
movsb
and
movsl
jb
mov
lods
pop
sub
fstpl
or
xor
es
inc
xor
ds
lret
enter
mov
mov
movsb
push
lds
lea
sub
pushf
sahf
int3
ficoml
lcall
fldcw
inc
pop
imul
cli
mov
hlt
or
ret
adc
loopne
inc
js
push
js
enter
lock
hlt
sbb
stc
lods
aaa
sbb
and
cli
adcl
fadds
push
in
lcall
pop
enter
mov
push
and
push
adc
out
fistl
outsl
mov
jnp
and
mov
dec
xchg
and
lahf
push
push
lock
mov
xchg
inc
movsb
cmp
mov
je
mov
mov
sbb
fwait
test
jne
or
decb
push
jb
mov
jno
adc
insb
mov
xchg
adc
mov
dec
mov
push
mov
loope
dec
bound
mov
push
sbb
mov
and
fsubp
adc
in
adc
insb
mov
mov
loope
pop
dec
enter
std
xchg
dec
mov
rol
jecxz
mov
sbb
ja
fstpl
inc
pop
cmp
xor
jno
adc
test
in
mov
clc
jns
add
rorb
jo
mov
sub
push
mov
xor
dec
subb
cmpsl
arpl
inc
inc
adc
inc
jle
adc
aad
stc
mov
lret
push
fucomi
xor
dec
test
sub
mov
inc
xor
in
and
push
cmp
push
out
and
mov
hlt
jno
xor
cmp
inc
mov
cltd
mov
hlt
scas
inc
je
sub
xchg
mov
pop
mov
jmp
lea
xchg
inc
xchg
xor
hlt
jmp
int3
imul
outsl
push
out
sbb
in
ficomps
call
dec
or
in
push
adcb
mov
xchg
sbb
mov
in
xor
sarb
mov
dec
arpl
push
mov
pop
xchg
ss
stos
adc
mov
inc
and
sbb
pop
mov
push
lret
outsb
xor
or
adc
pop
xchg
mov
scas
lods
scas
and
add
add
daa
push
pop
xchg
mov
cli
shl
or
inc
cli
repz
fwait
js
popf
enter
aas
icebp
clc
jnp
adc
dec
pop
in
js
cmpsl
pop
loope
fiadds
mov
jns
mov
cmp
mov
mov
fdivr
stc
jno
sahf
xor
mov
dec
repz
sbb
loop
push
mov
mov
mov
xchg
mov
ret
insl
mov
and
sub
in
inc
jmp
sub
jmp
mov
sbb
and
adc
lock
lea
pop
mov
insb
inc
xchg
jnp
ret
lahf
xor
fldl2t
xchg
mov
add
scas
out
fistps
fimuls
rcll
dec
imul
inc
cli
push
test
mov
mov
rolb
add
lret
in
sub
dec
lds
lods
add
xorl
jmp
push
sbb
addr16
lea
cmpsb
popf
mov
jno
cmp
loopne
lods
sub
jge
sub
push
test
in
clc
mov
lods
jno
or
mov
jb
lret
push
test
mov
mov
adc
ss
hlt
out
jo
push
cld
in
les
sbb
lea
adc
gs
xor
daa
dec
xor
pop
sub
jb
pop
pop
adc
mov
insb
rcll
xchg
mov
push
cld
ds
or
arpl
add
adc
cmp
popa
or
or
aaa
popf
js
xor
dec
add
insb
push
adc
push
inc
sub
sbb
shlb
cmp
or
pop
mov
movsb
xor
push
sbb
bnd
push
push
mov
jno
and
sub
pop
sub
dec
cmpsb
mov
cs
or
push
mov
push
scas
push
arpl
xchg
lret
cmp
inc
mov
push
jae
int3
or
ret
inc
mov
rolb
xor
jg
pop
mulb
jno
pop
das
jnp
add
fs
je
adc
movsl
add
xor
push
push
lcall
jg
mov
call
daa
inc
push
divl
and
sub
mov
mov
dec
adc
dec
gs
jns
pop
add
push
add
jbe
dec
sub
out
arpl
sbb
lock
in
pop
sbb
mov
add
mov
enter
mov
dec
shrb
jmp
loop
push
jl
or
test
jg
inc
lret
push
lea
inc
mov
push
push
and
sub
fisubrs
loopne
stos
sbb
xchg
jmp
pop
or
lret
adc
pop
fistpll
pushf
adc
adc
mov
jae
push
das
push
fwait
sahf
pavgb
shr
and
or
mov
push
jmp
mov
into
adc
cmpsb
jmp
scas
sub
xchg
adc
xor
les
rcrb
test
inc
sub
xor
mov
das
push
adc
data16
mov
iret
mov
push
cmpsb
aad
jnp
pop
addr16
arpl
push
cwtl
insb
nop
mov
pop
jp
or
fnstenv
sub
insb
fsubl
shll
xorb
inc
dec
xor
xchg
pop
int
clc
and
faddl
cmp
jg
jmp
sbb
jg
xchg
or
cs
cmp
subl
dec
fcoms
jecxz
out
push
jl
jbe
jnp
pop
cmp
jp
cli
cld
jge
movsb
jnp
and
jbe
xchg
push
dec
sub
adc
mov
bound
aad
je
jecxz
jge
push
pop
insl
adc
iret
cmp
jns
xor
sub
add
pop
cwtl
xchg
negb
dec
or
cmpsb
mov
fldt
frstor
push
adc
pop
dec
xchg
stos
push
mov
mov
dec
jb
xlat
pop
or
rcll
cmovno
out
repnz
push
enter
mov
add
push
dec
popf
arpl
inc
push
mov
bound
fstpl
pop
aaa
pop
loope
xor
lock
cli
push
push
cmp
add
jmp
repnz
imul
push
sti
ljmp
pop
popf
mov
xchg
pushf
push
out
mov
lcall
fnstcw
jae
xchg
and
pop
lods
ds
pop
js
push
mov
in
mov
mov
mov
jmp
push
sbb
mov
negb
in
pop
push
push
and
loop
pusha
data16
xor
push
add
mov
mov
movsl
mov
in
cmp
dec
push
xor
xchg
push
je
lahf
and
popa
cmpsb
xchg
add
push
setb
lds
clc
add
pop
lea
inc
lahf
xor
push
test
xchg
jp
in
jb
outsb
and
scas
or
fxch
jle
lea
cmp
adc
pop
rcll
sub
xor
mov
sbb
movsb
and
inc
xchg
fwait
push
popf
jbe
cmp
cmp
sbb
push
jb
clc
ljmp
in
pop
ret
enter
fs
mov
sbb
in
mov
xor
cmp
jbe
repnz
pop
bound
sub
pushf
inc
fsts
ror
pushf
xchg
jp
push
jbe
daa
hlt
sahf
test
fsts
jp
in
push
jne
pop
daa
or
int3
hlt
and
faddl
repz
loope
ss
negb
addr16
movl
roll
fistps
addl
mov
xor
xor
sbb
jmp
lods
push
int3
daa
mov
jg
ds
loop
sahf
nop
or
sarb
popa
cmp
in
clc
xchg
sbb
or
adc
dec
je
sbb
std
add
test
mov
add
and
mov
push
sub
bnd
cmp
sbb
pop
xor
out
mov
repnz
js
fwait
fwait
lret
add
jns
loop
mov
adc
inc
add
pop
add
and
mov
push
sbb
or
popa
leave
dec
jno
rol
mov
dec
mov
repnz
jns
push
rolb
pop
jo
icebp
sub
int
out
push
repnz
inc
in
test
movsb
sbb
out
testb
or
inc
cltd
push
stos
cltd
shrl
mov
cmpl
cmpl
push
mov
cmp
cmp
jno
fdivs
stos
and
mov
sub
loope
inc
dec
out
xor
mov
xchg
pop
sbb
mov
cs
sbb
xor
shl
push
jne
in
mov
add
movsb
dec
or
lods
jecxz
xchg
jae
xchg
js
lret
pop
test
std
mov
pop
hlt
or
mov
sbb
mov
hlt
test
jmp
pushf
hlt
out
adc
mov
pop
rorl
xor
pop
mov
mov
adc
in
sahf
aaa
inc
ja
mov
test
rorl
arpl
push
jae
clc
pusha
inc
pop
or
movsb
lds
push
mov
dec
data16
lock
mov
sub
fsubr
out
adc
fsts
loopne
push
adc
fiaddl
add
pop
inc
out
cmp
movsl
adc
ja
mov
mov
mov
enter
jmp
hlt
mov
adcb
ss
dec
sbb
jle
add
jge
push
call
cmp
and
hlt
push
addb
arpl
sbb
jne
push
push
les
cmp
jnp
test
testl
insl
or
imul
push
int3
pop
adc
mov
or
sbb
inc
jae
jp
dec
add
mov
or
mov
mov
rcrb
pop
push
adc
jecxz
icebp
in
jno
in
cmp
sub
out
int3
and
xchg
xchg
xor
ja
xchg
lock
leave
test
xchg
cmp
enter
ret
mov
pop
dec
xchg
inc
punpcklwd
and
adc
sbb
rcrl
mov
std
xor
imul
fbstp
and
es
lea
mov
cs
or
xchg
std
mov
dec
sub
cmp
hlt
js
adc
dec
dec
xor
clc
addb
mov
lds
jb
inc
ja
fnstenv
jnp
in
cmpsb
jno
fcmovnb
push
xchg
aam
mov
lods
xlat
xchg
inc
lds
inc
mov
mov
push
add
lock
lret
sub
loop
data16
mov
in
dec
rol
in
cwtl
jbe
xor
bound
jle
jp
xchg
adc
test
hlt
xchg
les
push
stos
xor
enter
inc
jo
jmp
and
sahf
mov
mov
lahf
sub
pop
pop
sbb
and
dec
mov
cltd
out
xchg
cmc
fwait
adc
js
push
fistpll
mov
dec
xchg
mov
ja
sbb
arpl
ds
mov
inc
mov
js
aaa
jo
insb
push
push
aad
inc
inc
popa
mov
out
lods
add
mov
int
push
jg
xor
xor
lret
shlb
jae
mov
mov
lcall
rorb
pop
push
bnd
clc
stc
psubusb
in
sub
xor
mov
or
mov
leave
jl
lea
repnz
mov
xor
cwtl
and
bound
mov
inc
sbb
cs
cmp
jge
mov
or
sbb
imul
cltd
shl
sbbl
mov
in
pusha
test
cs
lret
lea
int
adc
in
cmpsl
loop
jge
pop
and
xchg
pop
sahf
movsb
sbb
outsb
test
push
inc
out
and
jg
sbb
ja
in
leave
sbb
pop
popa
mov
int
cwtl
ficomps
js
jae
jns
shlb
pop
mov
xor
xchg
pop
pop
cli
ret
push
adc
push
sahf
fldt
mov
mov
pop
movsb
pop
or
xchg
mov
xlat
test
rorb
or
sub
dec
ds
sbb
cmp
sbb
sub
mov
mov
into
insb
push
and
nop
shrl
lcall
data16
sbb
popa
or
add
test
adc
jno
fistl
shl
sar
std
out
shrb
dec
js
ret
scas
popa
jg
loope
jno
lea
mov
sahf
loopne
filds
mov
movsb
jecxz
mov
sub
or
je
pop
jmp
jnp
popa
mov
and
inc
pop
test
mov
pop
inc
icebp
and
leave
xor
ss
add
push
and
lods
lods
mov
push
sbb
add
es
mov
add
hlt
mov
mov
test
or
mov
mov
pop
xor
stc
jmp
push
fisttpl
clc
call
push
cmc
inc
into
mov
aas
or
rcr
aam
jns
jmp
jle
stos
jns
fimull
dec
negb
movb
xlat
mov
push
lea
jb
mov
mov
hlt
adc
push
subb
push
lock
loope
in
mov
sbb
and
fwait
inc
push
pushf
inc
in
enter
jmp
shll
fsubl
out
or
pop
inc
and
repz
lea
dec
mov
shll
or
xor
ffreep
cltd
into
lock
data16
lret
and
or
repnz
jns
dec
test
rclb
bnd
bound
ret
sbb
and
sbb
insl
xor
mov
repz
xchg
mov
fwait
xor
adc
sbb
movsl
add
jle
movsb
or
pop
int3
xor
mov
roll
enter
pop
loope
sub
adc
arpl
aad
mov
xchg
xor
adc
mov
movsb
cmp
iret
sbb
lret
dec
lds
bound
lock
add
in
in
mov
jo
inc
dec
mov
push
nop
inc
insl
sbb
mov
loopne
les
jo
fnstcw
push
je
xchg
into
xchg
roll
pop
mov
icebp
pop
inc
call
inc
sub
cmp
xor
mov
jo
xchg
xchg
mov
daa
dec
lock
cwtl
jnp
jg
sub
dec
jnp
adc
dec
imul
and
xchg
cmp
lret
mov
pop
fnsave
lea
xor
roll
test
xchg
jle
dec
sbb
lods
gs
or
enter
sub
mov
lret
mov
cld
in
out
les
hlt
pop
shll
cwtl
push
adc
loop
movsb
fwait
out
not
and
sti
and
push
jecxz
and
pop
mull
fwait
add
arpl
jae
jle
lcall
cmp
push
mov
cmp
mov
add
add
mov
inc
cwtl
jg
sahf
inc
loopne
cmp
das
xor
sub
xchg
push
cmp
push
add
bound
ror
int3
mov
sbb
inc
mov
ds
insb
mov
push
cmp
xor
lea
stos
mov
mov
add
test
sub
in
stos
xor
add
lods
scas
movsl
cmp
popa
jo
imul
sbb
into
int
mov
loop
dec
jecxz
movsl
or
andl
leave
push
jno
imul
push
sbb
not
pop
in
mov
sbb
aad
aam
mov
sahf
stos
out
stc
xor
lock
dec
in
call
repnz
movsb
fisttps
outsb
push
sahf
push
in
negl
jne
je
mov
inc
sti
rcr
ret
mov
lea
leave
js
xchg
std
pop
jge
ja
inc
sub
js
lcall
or
jae
movsl
adc
push
jle
inc
mov
jno
rol
clc
stos
sub
pop
je
jmp
mov
dec
into
std
daa
jge
jg
xchg
testb
inc
jmp
jb
mov
out
xchg
cmp
xchg
mov
jge
in
dec
mov
sbb
gs
inc
dec
leave
push
fidivs
cmp
je
je
sbb
xchg
adc
xor
ljmp
sbb
lock
loop
shlb
nop
mov
fcomp
mov
sub
mov
lock
imul
inc
mov
xchg
fstl
lods
jbe
pop
mov
sub
inc
jle
aad
sbb
mov
mov
dec
neg
pop
mov
dec
mov
mov
and
popa
xlat
orl
unpcklps
mov
mov
jo
dec
pop
push
loope
jp
pop
jnp
pop
xor
lret
and
sbb
xchg
cmpb
and
or
out
mov
inc
push
leave
cmpsb
mov
sub
sahf
adc
add
jnp
ret
or
mov
sub
xchg
pop
dec
aam
scas
mov
fdivl
lcall
cmp
lahf
filds
xor
or
mov
inc
gs
or
popf
xchg
ljmp
mov
mov
loope
popa
sti
lea
jb
mov
adc
pop
leave
fsts
test
mov
xor
inc
jae
xchg
push
push
std
sahf
fstl
adc
in
lods
lret
lcall
in
dec
and
sbb
ss
loopne
out
test
cli
push
push
repnz
mov
in
sub
mov
jns,pn
xor
xchg
pop
pop
push
sbb
xchg
lds
mov
stos
xor
jno
insl
and
rcrl
sbb
mov
mov
xor
pop
xor
scas
rcrl
add
lock
sbb
pop
jno
pop
aad
jbe
stos
fmull
jno
jb
les
aam
fstpl
in
lea
mov
test
mov
or
push
jp
add
andl
stc
dec
sub
cmp
jns
rcr
fs
and
outsl
popa
sub
outsb
push
rolb
incl
in
stc
or
test
add
cmc
imul
aas
sub
cmpsb
dec
fmuls
fadd
mov
lahf
mov
bound
lea
hlt
mov
das
dec
jns
push
out
clc
psrlq
push
sbb
iret
mov
mov
ljmp
and
loop
pop
push
xchg
orl
inc
xor
aaa
dec
mov
dec
shlb
in
sub
mov
clc
xor
mov
push
sub
movsl
add
cmp
sbb
sahf
cmc
cmp
mov
add
clc
sar
push
cmp
xor
xchg
jg
sbb
sbb
mov
mov
iret
ret
adc
adc
sub
fistl
mov
xor
fists
inc
pop
jno
push
das
mov
pop
mov
rorb
inc
lea
add
repz
popa
xlat
daa
mov
repz
jo
mov
cltd
jae
pushf
and
out
enter
icebp
iret
push
push
mov
sub
lea
mov
inc
aaa
jo
mov
or
in
ret
aaa
in
jg
push
and
mov
mov
xor
dec
jl
loopne
movsb
fimuls
jge
mov
les
ljmp
dec
neg
test
data16
xor
inc
jle
adc
shrb
sbb
fildll
jnp
xchg
xchg
xchg
ss
jg
fstpt
jnp
dec
xor
push
adcb
and
cltd
popa
sti
jg
ss
adc
lcall
inc
test
jo
and
and
jge
or
sahf
sbb
popa
mov
insl
or
adc
fisttps
jbe
pop
mov
mov
shrb
cmc
lods
notl
xlat
sub
adc
xchg
mov
cmpsb
gs
sub
jne
and
clc
xor
adc
cmpsl
or
cmp
sbb
and
adc
insb
aad
mov
fidivrl
lret
and
cwtl
nop
sti
mov
out
push
sub
jl
sbb
mov
jns
and
test
add
xlat
add
push
sub
ret
shl
dec
inc
mov
int
push
mov
out
sub
sbb
mov
mov
pop
adc
call
in
insb
mov
dec
push
sub
movsb
or
outsb
push
inc
shrl
push
aad
hlt
mov
dec
mov
mov
int3
push
pop
xor
xorl
and
inc
and
add
xchg
in
or
xchg
xchg
dec
fstl
push
adc
stos
jnp
divps
sub
jnp
mov
popf
pusha
test
push
or
mov
push
or
dec
add
inc
test
fadds
aas
cmpsb
dec
std
daa
test
sub
mov
imul
cmc
sub
push
in
loopne
imull
cmp
jge
fcomip
pop
pop
gs
jae
xor
add
lock
pop
icebp
sbb
or
or
adcl
imul
sbb
jmp
jge
loop
dec
xchg
mov
shll
push
adc
xor
lock
xchg
das
fists
out
fcoml
and
out
sbbb
cmpsl
and
sti
jns
shll
inc
je
mov
and
in
sub
cltd
push
xor
mov
jmp
xor
loopne
icebp
sub
jle
lea
pop
pop
sbb
lods
push
mov
loop
inc
pop
pop
imul
sub
mov
dec
mov
pusha
leave
pop
mov
xchg
mov
jle
lods
test
sbb
xchg
sahf
fistps
hlt
loopne
sub
iret
gs
cmp
shlb
mov
sub
jge
lret
mov
pop
pop
decb
pop
outsl
xchg
das
popa
popa
mov
stos
mov
mov
jnp
and
mov
insb
outsb
lods
bnd
sbb
arpl
cmp
cltd
xchg
xlat
mov
adc
jae
mov
js
mov
cmpsl
jmp
ret
mov
inc
dec
pop
rcll
aam
cs
dec
jp
test
or
outsb
jg
lods
add
xor
mov
es
cmc
mov
push
fwait
in
jmp
adc
adc
les
or
dec
stc
scas
repnz
cmp
mov
rorl
sbb
in
lods
push
jge
lock
fsubl
and
not
out
fiadds
je
push
lret
cmp
or
jle
xor
jle
dec
orl
shrb
cld
inc
lret
lcall
imul
inc
or
adc
add
push
jle
mul
cmc
jmp
in
outsb
and
jg,pt
xor
jo
jbe
pop
fbld
xchg
in
leave
and
mov
mov
fdivp
sub
mov
hlt
jno
dec
cmp
or
aam
xchg
das
inc
out
cmp
sbbb
loopne
pop
mov
mov
inc
pop
aas
pop
and
push
and
dec
sahf
push
mov
dec
push
jmp
mov
or
sub
ret
test
inc
and
dec
xchg
jmp
sub
daa
jle
pop
sbb
add
mov
pop
pushf
mov
bound
addr16
dec
hlt
pop
xchg
xchg
pusha
xchg
lock
mov
mov
pop
fnstcw
ss
aad
xchg
std
or
fs
xor
dec
jns
arpl
loope
xor
add
mov
and
mul
mov
sbb
icebp
in
rorb
sbb
test
ret
xor
jne
lock
out
jmp
fcmovb
lahf
pop
add
xor
mov
loope
mov
pop
icebp
lea
cld
pop
data16
jecxz
rorl
sbb
int3
inc
sbb
hlt
lock
mov
push
add
xor
sub
test
in
lea
inc
popa
sub
imul
loop
xor
ja
hlt
mov
sbb
xor
mov
sub
fsubl
sub
sub
pop
push
push
in
xchg
mov
out
adc
jge
mov
cmpsl
sahf
sbb
cmp
int3
hlt
outsl
mov
pop
jno
xlat
stos
jae
mov
push
ja
sbb
mov
push
and
test
mov
aaa
cltd
call
push
push
and
xchg
adc
jo
inc
fstpl
sbb
sub
mov
adc
lds
lea
pop
jmp
popa
sub
arpl
in
stc
std
push
movsb
fcmovne
arpl
insb
mov
adc
popf
mov
add
mov
lahf
xor
dec
out
sbb
xlat
ror
mov
fiaddl
mov
shrl
mov
adc
mov
and
xchg
sub
push
sti
add
lahf
push
push
dec
in
mov
and
pop
aad
arpl
dec
pop
xchg
mov
mov
push
pushf
push
cmp
add
push
xchg
cmp
pop
add
pop
mov
sbb
jmp
test
sub
bound
in
mov
mov
xor
arpl
mov
mov
mov
xor
sub
pop
scas
jge
outsl
rclb
adc
inc
outsb
or
jno
cltd
cld
push
sbb
mov
int3
fisubrs
push
and
aam
mov
cmp
adc
aaa
rorb
ror
jmp
mov
push
xor
mov
dec
add
xchg
xor
push
sub
jl
sub
sbb
les
cld
dec
fistpll
jno
pop
ficoms
sbb
mov
mov
andb
pop
cmp
ret
out
push
scas
mov
adcb
xchg
dec
mov
or
dec
mov
xchg
dec
fbld
mov
fsts
scas
cwtl
sub
push
dec
mov
vpcmpgtd
mov
pop
mov
jmp
cld
fistpl
jmp
jns
cs
dec
or
sub
pop
mov
aad
xor
push
push
mov
xor
scas
mov
outsb
or
pop
xchg
insb
xchg
xor
or
dec
xor
pop
sub
mov
pop
pop
sbb
mov
mov
pop
xor
adc
lods
stos
push
add
insb
mov
adc
xchg
jno
icebp
push
xchg
repz
sub
dec
sahf
loopne
fmuls
sub
push
pop
push
sbb
sti
insl
loope
jbe
pop
sub
or
in
mov
mov
jb
adc
bnd
dec
mov
daa
and
cmp
and
ret
bound
aas
pop
aaa
jo
or
pushf
out
cs
jp
mov
and
pop
pop
ret
inc
adcl
push
loop
pop
add
fisttpll
xchg
mov
cld
dec
out
clc
xchg
gs
sub
sbb
bound
adc
std
adc
pop
jb
mov
jae
iret
xor
and
and
mov
leave
enter
daa
stos
movb
mov
imul
dec
ljmp
gs
sub
push
bnd
aaa
stos
xchg
xor
nop
cmp
sub
fldt
gs
stc
mov
pop
mov
sbb
rorl
arpl
lea
aam
wrmsr
or
add
mov
pop
adc
ja
mov
les
lea
xlat
dec
sbb
loop
andl
and
fcoml
cmc
movsl
fincstp
mov
xchg
jp
sti
dec
int3
xchg
popa
adc
movsl
dec
cmp
lea
fs
jl
inc
leave
push
gs
dec
sub
mov
lret
jns
test
mov
pushf
aas
inc
sahf
pop
xlat
insl
inc
sub
mov
ds
push
pop
pop
mov
das
mov
jae
mov
jnp
pop
jne
imul
in
sub
jbe
lret
stos
and
xor
jle
xor
nop
inc
inc
shl
jo
mov
call
add
fnstenv
cmp
sub
hlt
or
mov
mov
push
pop
mov
jge
dec
push
in
mov
sub
mov
push
call
loope
imul
or
cmp
rclb
js
pop
lret
fld
das
xchg
adc
in
pop
testb
jo
das
jp
cmpb
lods
dec
dec
push
imull
mov
sbb
push
jne
dec
push
stos
jns
mov
mov
adc
jns
sbb
stos
sub
dec
subb
enter
mov
and
sbb
and
lahf
inc
mov
fistpll
push
mov
mov
pop
bound
xchg
ljmp
xchg
xchg
sub
int
lods
and
inc
test
mov
mov
lods
out
mov
addr16
lea
sbb
pop
sub
pop
mov
xchg
testl
and
adc
ja
pop
lret
or
in
arpl
cmc
sbb
mov
ss
pop
xchg
fmull
insl
adc
pop
sub
jns
cmp
cmc
in
mov
fyl2x
dec
bound
icebp
adc
loop
push
pushf
dec
shll
es
movmskps
and
mov
ret
inc
mov
or
dec
lret
pushf
pop
push
lret
mov
in
shl
mov
mov
addr16
mov
sub
stc
pushf
popf
insl
int
inc
xor
mov
imul
mov
lea
pusha
mov
cmc
outsl
xchg
sub
imul
test
fmuls
je
mov
das
dec
cmp
fyl2xp1
fildl
mov
repnz
push
xchg
loop
push
adc
inc
pop
call
xchg
in
stc
xchg
jnp
xchg
add
jb
arpl
adc
das
dec
fildll
lock
ljmp
pop
push
add
mov
cltd
stos
mov
xchg
push
and
lea
inc
pop
pop
fcomps
xchg
push
arpl
push
mov
insb
push
orb
mov
movsl
xor
sbb
jae
aam
scas
push
sub
sbb
bound
xor
push
add
gs
scas
dec
hlt
jmp
dec
push
jecxz
rorb
pop
xchg
insl
fisttpll
dec
cmp
int
pop
xor
lds
xchg
mov
sbb
sub
sbb
test
xor
adc
jo
jmp
aam
lret
mov
push
in
xor
or
mov
mov
ss
add
stos
mov
mov
mov
int3
jbe
pop
mov
xor
bound
mov
fsts
imul
add
xor
pop
pop
cvtpi2ps
fwait
and
mov
les
jle
lcall
jae
xorl
and
mov
in
xchg
mov
add
pop
insl
mov
sbb
loopne
sub
add
or
jns
sahf
adc
or
jge
inc
clc
clc
adc
hlt
mov
jns
pushf
jp
ljmp
lea
ret
mov
or
push
jle
sahf
je
mov
aas
pop
lcall
movsl
lds
xor
rcll
not
popa
in
js
xchg
mov
push
and
adc
jmp
fistps
push
loop
jl
arpl
pushf
imul
cwtl
repz
popf
mov
pushf
fsubs
jle
pop
lods
adc
adc
xor
js
mov
push
push
xchg
and
cli
adc
pop
or
xchg
pop
ds
test
and
push
stos
dec
or
ret
sbb
inc
mov
pop
add
addr16
into
sbb
loop
je
dec
lods
adcl
dec
mov
lock
ret
mov
sarl
and
mov
inc
pop
lds
fwait
bound
mov
int3
fstpl
insb
aad
popa
xchg
xor
in
lea
and
aad
ljmp
mov
lods
std
test
daa
adc
and
dec
add
dec
sub
push
loop
xchg
push
push
xlat
cmpsl
dec
inc
mov
sar
mov
mov
and
in
inc
test
inc
or
pop
in
xchg
hlt
mov
jnp
gs
dec
addl
sub
jae
cmp
outsb
mov
faddl
loope
mov
icebp
fsub
fbld
push
iret
je
mov
notl
dec
repnz
dec
stc
adc
iret
lock
xchg
jne
das
xlat
in
movb
das
sbb
jno
std
and
aaa
add
mov
enter
leave
jp
mov
xchg
fs
aam
int
loop
in
insl
movsb
adc
loopne
aam
xchg
sub
out
insl
insl
cmp
dec
int
pop
jno
or
push
jl
pop
mov
icebp
insl
and
xchg
outsb
or
repnz
pop
mov
push
push
pop
push
xchg
push
addr16
lock
repnz
cmp
xor
and
mov
xorb
aam
sbb
pop
jns
std
push
fstl
inc
mov
mov
add
cli
arpl
aad
jne
jae
add
ficomps
adc
sti
stc
sbb
add
xchg
pop
fsubrl
and
sub
mov
loope
test
pop
repz
sti
cmp
addr16
dec
push
dec
mov
pop
jp
or
jp
loope
mov
repz
pushf
sub
cli
xchg
pop
xchg
sub
dec
and
in
xor
push
stos
adc
fidivrs
sub
addb
xor
out
xor
or
push
pop
mov
mov
cli
mov
jmp
inc
push
pop
adc
lahf
mov
gs
in
jno
int
shll
test
rorb
das
inc
push
sub
stos
call
call
lcall
xor
scas
push
xor
cmp
push
push
jno
out
fnsave
jmp
enter
push
xchg
mov
mov
rcrl
filds
adc
lock
outsl
jae
fidivrl
mov
sbb
mov
ret
lea
lea
sbb
leave
push
dec
dec
push
std
loopne
lea
push
push
mov
and
arpl
pop
mov
in
inc
lahf
mov
insb
add
mov
inc
dec
sub
xchg
fsubrl
add
sub
sub
psubw
shrl
push
mov
lods
push
sub
test
fildll
adc
mov
test
outsl
mov
shlb
je
and
iret
pushf
and
daa
cmp
adc
push
jno
rorl
enter
lods
cltd
in
rorl
push
test
push
sub
ja
out
imul
mov
scas
lret
jnp
add
repz
mov
fadds
outsl
popa
cmc
js
es
in
test
or
push
pusha
mov
test
aaa
or
lods
mov
jb
xchg
je
arpl
or
dec
or
push
lahf
nop
xor
mov
dec
pushf
mov
lahf
into
data16
insb
mov
add
jns
dec
or
and
std
mov
pop
and
mov
jns
and
and
sub
and
push
lea
push
fstpt
jle
cmp
xor
cmc
push
lea
aam
data16
scas
xor
mov
mov
or
inc
mov
add
mov
cli
jns
cwtl
icebp
or
sub
mov
iret
dec
dec
mov
push
mov
bound
sbb
loope
jbe
and
sub
xor
stc
sub
insl
lds
dec
mov
push
xor
arpl
sarl
cs
in
das
xchg
loop
cwtl
int3
mov
js
adc
adc
cmp
mov
cmp
test
inc
mov
adc
testb
jo
insl
lea
sbb
pop
cmp
mov
sti
mov
pop
cld
insl
insb
pop
fistpll
lret
arpl
jp
rcrl
cmp
mov
dec
imul
adc
outsl
insl
mov
inc
mov
jbe
shrb
fnsave
push
mov
mov
aad
les
lock
xchg
repz
leave
jecxz
jnp
inc
jmp
je
ss
js
fwait
inc
add
mov
outsl
mov
push
rdtsc
mov
and
scas
xchg
daa
in
in
mov
loope
lea
cwtl
pushf
subb
pop
pop
add
jae
xchg
mov
sbb
jle
push
mov
test
and
jp
pop
insl
lret
dec
dec
xorl
pop
cltd
mov
pop
xor
jecxz
jle
mov
ret
leave
xlat
icebp
int
sbb
int
mov
aad
mov
push
fildll
mov
cltd
mov
mov
or
and
rcrb
mov
sub
stos
fucomp
cli
pop
mov
jbe
pusha
cmp
dec
jno
mov
xchg
jp
mov
div
xchg
pop
rcl
imul
cmp
fidivl
adc
and
jno
or
ret
fnsave
jo
mov
loopne
movsb
jae
pop
sub
push
dec
xchg
insb
jb
lods
push
pop
fstps
leave
cwtl
xchg
sub
pop
mov
push
xor
push
xchg
adc
xchg
jae
dec
lea
jp
add
push
repnz
clc
mull
inc
shrl
xor
adc
jo
adc
jge
loop
lods
ret
jge
sbb
mov
dec
xor
daa
aas
xor
xchg
mov
sbb
mov
inc
in
inc
hlt
jle
push
ret
in
mov
pushf
aaa
test
xchg
rcrb
insb
lods
jg
jns
je
lea
fbstp
andb
iret
mov
push
fst
lret
adc
jg
gs
inc
dec
loop
popa
in
and
pop
inc
sbb
iret
mov
in
addl
adc
sub
jge
in
data16
jae
fcmovnu
or
dec
ljmp
insb
push
mov
bound
fmul
call
daa
push
and
or
ss
mov
push
test
clc
cmp
lods
lea
dec
movsb
fmuls
lea
mov
imul
fistpll
add
loopne
xchg
xchg
mov
shlb
jmp
cltd
push
int
fwait
test
xchg
sbb
add
jmp
adcl
xor
or
sbb
xor
mov
and
adcb
jns
push
mov
mov
lea
ret
add
clc
in
stos
adc
ja
fcoml
lea
aad
jmp
data16
fwait
push
lds
push
jae
rorl
out
ss
ret
sub
or
mov
mov
mulb
mov
mov
push
out
neg
lea
sbb
pop
out
mov
mov
inc
dec
shrl
pop
sbb
fcmovne
pop
xchg
insb
push
mov
sahf
loop
push
xchg
out
dec
out
or
and
jmp
and
pop
addr16
notl
xor
imul
aaa
lcall
jnp
add
cmp
mov
lret
xor
lahf
and
adcl
loope
xlat
insb
xchg
out
xchg
rorl
xchg
or
adc
pushf
pop
and
cs
add
jp
imulb
fstpl
pop
in
push
mov
vsubps
pusha
mov
xchg
stos
and
sbb
data16
daa
lds
jno
faddl
lea
shlb
dec
repnz
mov
cwtl
lods
pop
fsubs
lods
push
adc
aad
rcl
lods
adcb
xchg
sub
lods
adc
adcb
jl
repz
outsl
stos
jp
fs
lods
pop
stc
add
push
lods
in
cli
mov
jnp
stc
pop
cmp
jb
pop
jp
into
add
mov
hlt
xorl
jo
jp
pop
push
xchg
dec
add
add
xchg
adc
js
xor
pushf
imul
ret
inc
xor
push
faddp
xor
ds
lods
cmp
add
inc
cltd
mov
arpl
std
sub
insb
rol
dec
mov
mov
dec
sub
mov
sub
dec
insb
mov
aaa
icebp
or
adc
pop
dec
js
jnp
jmp
insb
mov
jg
xchg
std
loop
jno
dec
js
mov
cwtl
sub
sbb
hlt
jle
fldl
adc
movsl
adc
cli
adc
movb
mov
sbb
mov
imul
ds
and
adc
mov
mov
xchg
mov
mov
mov
out
mov
xchg
insl
xchg
mov
in
aad
in
mov
xchg
outsb
jmp
cli
add
mov
fistpl
mulb
fildll
addb
push
out
mov
jnp
adc
or
outsb
mov
pusha
out
mov
adc
pop
scas
dec
push
dec
neg
push
jle
jge
sti
inc
int
inc
inc
aas
and
adc
jp
jbe
int3
push
popf
lcall
mov
test
xchg
sarl
jb
add
cli
cs
mov
add
shlb
pop
jp
lret
lret
jb
lds
cmpb
enter
in
sarl
mov
inc
pop
mov
or
ror
add
jae
mov
xorb
out
xchg
adc
dec
push
popf
inc
dec
ljmp
out
or
mov
test
sbb
or
sbb
and
mov
ljmp
movsb
std
mov
mov
add
rclb
pop
and
xor
xchg
dec
push
lea
push
movb
lods
rorb
int
fistpll
insb
cs
stc
mov
mov
fwait
loopne
mov
xchg
jnp
inc
shll
jae
pop
fisubl
push
cmpsb
xchg
mov
jnp
adc
pop
jecxz
cld
dec
aad
enter
push
jmp
in
xor
mov
clc
lahf
dec
push
aam
xor
sub
int3
rcll
mov
fsubrl
cmp
or
fdivrs
add
testw
icebp
pop
leave
xchg
add
iret
mov
imul
data16
mov
mov
add
in
xchg
movsb
mov
and
inc
sbb
and
push
aaa
in
cli
sub
shrb
repnz
sbb
jge
pop
pop
shlb
call
and
inc
lock
xchg
add
cmp
stos
mov
iret
lret
dec
aaa
and
sbb
push
fistl
dec
sbb
dec
sub
add
lea
dec
icebp
pop
cmp
test
mov
das
lods
inc
sahf
lret
pop
lea
shrb
lock
loop
cmp
mov
movsl
cli
xor
lock
movsl
xchg
inc
lods
fisttpl
je
fs
dec
adc
fs
lret
lock
mov
mov
mov
mov
mov
xchg
xor
dec
push
in
jnp
and
popa
and
sub
and
mov
loope
xor
scas
stos
jb
or
lahf
aam
pop
mulb
test
ja
cli
jae
cmpb
pop
mov
xor
sub
push
gs
mov
arpl
inc
jl
push
shll
jbe
stc
dec
mov
test
cmc
mov
ss
adc
jb
lahf
insb
mov
loope
push
in
in
js
mov
lret
in
cltd
jle,pn
xchg
or
fistps
push
cs
sub
mov
mov
xchg
cmp
shll
jno
imul
and
and
cmp
mov
inc
fisttps
lea
test
sbb
xchg
jnp
inc
js
pop
je
inc
mov
sahf
mov
fsubrs
leave
jno
mov
cli
daa
insb
mov
and
push
sahf
mul
xor
cmp
mov
fldenv
and
inc
push
and
mov
test
subl
sbb
and
adc
dec
jno
cld
dec
mov
mov
mov
add
mov
jle
dec
jae
mov
jno
mov
icebp
fstp
enter
sub
lcall
jbe
fldpi
pop
in
lds
test
jo
imul
test
loope
js
dec
gs
push
lds
push
xchg
xor
xchg
mov
das
cmc
pop
cmc
arpl
pop
and
xchg
movsl
inc
and
inc
mov
imul
push
mov
sbb
hlt
jmp
shl
pop
fidivs
xlat
mov
mov
jnp
popa
cld
dec
outsb
jmp
sub
jmp
hlt
xor
mov
aam
jbe
adc
das
mov
xor
sbb
xchg
cmp
insb
and
out
xor
sub
cltd
add
call
lds
imul
icebp
dec
decb
dec
and
lcall
repz
sub
test
mov
xlat
packsswb
mov
std
mov
insb
mov
xchg
call
adc
mov
jl
sbb
push
stc
jnp
inc
dec
and
jl
adc
add
int
notl
loopne
push
in
popa
mov
inc
jmp
and
mov
jb
ss
ja
fisttps
mov
add
push
sbb
push
mov
nop
cwtl
xchg
lret
stos
stc
add
mov
in
xchg
out
stc
imul
xor
pop
adc
or
mov
lea
xchg
aad
or
in
sub
ret
add
xchg
push
pusha
sbb
cwtl
ret
pop
mov
stos
cwtl
xor
xor
mov
jno
das
addr16
cmp
add
adc
push
pop
inc
push
imul
add
jge
mov
lret
in
dec
imul
mov
in
push
iret
lds
cmpsl
push
rcl
fdivl
scas
in
push
pop
popf
mov
lcall
pop
inc
push
dec
nop
sub
pop
repnz
mov
xchg
push
mov
orl
mov
je
push
das
int3
mov
or
mov
inc
xchg
mov
push
mov
pop
sbbl
sbb
jno
sti
xchg
sbb
popa
popa
pop
and
xor
bound
pop
out
loop
jbe
xchg
xchg
mov
test
lds
xchg
enter
test
dec
add
and
sub
jne
mov
out
dec
pop
sub
bound
dec
and
in
dec
push
daa
lcall
inc
xchg
hlt
stc
jge
xor
xor
lcall
sbb
mov
xor
inc
inc
imul
pop
jb
xor
push
mov
imul
inc
xor
in
pushf
call
mov
test
out
adc
jae
cwtl
negb
imul
push
movsb
inc
movsl
jno
rorb
in
stos
icebp
rolb
push
push
out
push
xchg
gs
mov
aad
aam
out
dec
jnp
mov
lock
ja
jp
xchg
sub
in
popf
or
add
push
or
mov
xchg
nop
movsl
sbb
imul
fnstcw
adc
jne
lahf
sbb
xor
fmulp
rcl
and
or
mov
js
call
in
xchg
jb
xor
adc
mov
mov
icebp
xchg
push
push
insb
int
push
mov
dec
cltd
adc
inc
mov
add
sbb
mov
mov
popf
xchg
pop
sbb
mov
cs
add
and
push
arpl
adc
int
cmpb
cld
adc
jmp
in
rol
je
subl
repnz
mov
popa
inc
hlt
and
jle
cs
mov
testl
sbb
adc
repnz
lcall
outsl
push
in
movsb
inc
fadd
and
in
bound
pushf
lret
cmp
adc
push
jnp
pop
mov
mov
mov
add
jae
mov
push
rcll
dec
sbb
mov
add
shrl
fwait
movsl
mov
pop
loope
je
inc
clc
ret
rep
in
outsb
mov
dec
sub
pop
or
pop
lahf
pop
mov
inc
ljmp
in
xchg
stos
cmpsb
in
jns
pop
in
popf
jl
push
and
xchg
dec
and
pop
mov
jg
pop
dec
jb
cli
or
fnstcw
pop
mov
mov
mov
sbb
jne
or
dec
lea
addr16
shr
sarb
pop
les
push
pop
and
arpl
imul
sub
push
sbbl
aad
repnz
jns
dec
and
insb
imul
sub
add
ds
je
jl
cmc
out
mov
hlt
sub
incl
mov
pop
push
adc
cmc
imul
inc
out
jp
ret
sub
mov
clc
test
push
mov
mov
adc
sub
cwtl
xor
ljmp
add
add
xor
sahf
push
stos
sarl
ret
mov
sub
or
insl
imul
mov
mov
jno
ret
jno
in
xchg
je
jge
sbb
stos
mov
xor
xchg
adc
lea
outsl
loope
mov
adc
popf
adc
sub
stos
hlt
push
fnstenv
sti
insb
lock
arpl
jno
pop
fiaddl
jnp
mov
inc
ret
lahf
add
fs
mov
xchg
enter
sbb
insl
movsl
iret
push
loope
mov
or
aad
jecxz
mov
fsts
loope
adc
add
push
insb
or
clc
call
fistpll
icebp
imul
in
dec
mov
jns
insb
cmp
sub
or
in
jnp
mov
xor
sarl
hlt
or
rcl
fcoms
mov
adc
sahf
lea
pop
jecxz
push
xor
aas
xchg
shll
push
dec
cmp
sub
pop
sub
jp
cs
jbe
clc
mov
or
sub
inc
pushl
push
adc
inc
mov
lahf
ja
or
push
adc
inc
xchg
sub
fldenv
fidivs
bound
sti
jecxz
jp
push
push
mov
outsl
mov
in
mov
dec
inc
movsb
ljmp
push
adc
fnstcw
mov
shll
cmc
repz
cmp
and
outsl
mov
cli
mov
xlat
push
cmp
sbb
xor
hlt
sbb
cmp
push
cmc
int3
adc
fisttps
popf
imul
push
mov
xor
mov
xchg
adc
not
nop
ja
mov
xchg
popa
test
sbb
sub
adc
mov
addr16
cmp
out
int3
xchg
ss
pop
push
jl
dec
inc
mov
andl
cwtl
dec
nop
pusha
ljmp
sahf
ja
xor
and
and
fmull
mov
mov
xchg
call
dec
dec
sbb
add
pushf
push
mov
aad
mov
pop
dec
nop
mov
stos
mov
jno
jg
mov
pop
insl
adc
nop
or
out
in
sarl
xchg
jo
or
mov
mov
add
mov
pop
push
sbb
mov
call
xchg
push
sub
jns
xor
cmpl
adc
add
icebp
data16
repz
cmp
movsb
cmc
or
fwait
pop
insb
data16
add
loope
daa
lcall
mov
xor
mov
iret
xor
or
cmp
push
jne
jp
shlb
mov
test
iret
arpl
call
fwait
sbb
rclb
mov
int
mov
and
xchg
fwait
jmp
jae
mov
push
mov
mov
es
addr16
jmp
ret
imul
rclb
jecxz
push
enter
data16
push
negl
xor
and
test
sbb
mov
mov
rorl
mov
inc
cld
add
leave
push
je
rol
ja
out
hlt
pop
aad
dec
aaa
mov
repnz
mov
jb
push
adc
inc
mov
hlt
fiadds
aad
fidivrl
push
pop
xlat
mov
aad
inc
fstpl
xor
mov
mov
jne
mov
bound
mov
pusha
ljmp
sub
test
and
sbb
mov
push
cmp
fdivrl
sub
dec
mov
fwait
xor
add
inc
cmpsl
fwait
and
cld
aas
pop
pushw
xchg
xchg
out
in
mov
lea
sbb
sub
inc
pop
or
insl
mov
mov
dec
imul
lds
dec
push
xchg
roll
cmp
add
mov
orl
je
adcl
and
or
xchg
mov
or
jo
popf
cltd
or
pop
jp
mov
in
sbb
xchg
and
lcall
mov
in
aaa
mov
push
and
mov
stos
lcall
mov
in
mov
adc
push
or
rol
mov
adc
lods
aaa
daa
mov
jne
mov
enter
mov
movsl
mov
xorb
cmovle
sbb
rclb
mov
out
jnp
adc
idivl
pushw
or
int3
fyl2x
cmp
xchg
psubusb
cmp
test
sub
jns
in
xor
pop
add
adc
mov
popa
mov
andl
bound
pop
leave
pop
fadd
dec
or
push
or
inc
out
in
or
dec
into
mov
jl
jae
fnstcw
pushf
leave
ja
push
insb
mov
mov
repnz
out
mov
insl
xor
jb
rcl
adc
mov
aam
adc
fistl
adc
mov
jmp
testl
jns,pt
mov
mov
and
push
push
mov
stos
ret
xchg
inc
popf
lea
stos
xor
cmc
fimuls
clc
into
cltd
clc
xchg
stos
neg
push
jo
popa
lea
jl
es
add
repz
jns
imul
sti
push
js
xchg
mov
push
and
xchg
mov
sub
decb
and
or
fsubl
mov
pop
xor
and
outsb
and
cmpsl
roll
arpl
mull
cwtl
xchg
push
xchg
ja
xlat
dec
sbb
stc
out
setl
mov
in
mov
jnp
cltd
std
sbb
and
add
movsb
xor
test
orb
es
pop
fmulp
dec
jo
aas
hlt
dec
dec
add
fnstcw
and
cmc
mov
sub
adc
test
xchg
adc
mov
inc
dec
and
shrb
push
arpl
add
cmp
decl
add
lods
add
cmp
mov
lahf
mov
sbb
ret
out
sbb
int
mov
psrlw
adc
and
pop
je
push
gs
inc
fnstcw
mov
aas
mov
lcall
lret
and
inc
mov
lea
inc
xor
mov
mov
jo
push
jecxz
mov
add
in
lcall
ret
and
sbb
fiadds
push
icebp
fstpl
mov
ret
in
jne
pop
lea
subl
incl
lea
sub
movsb
xchg
dec
or
pop
repnz
mov
test
lea
adc
ljmp
out
sarl
imul
aad
inc
xchg
pop
mov
mov
pop
ror
or
lock
adc
mov
arpl
add
adc
add
add
sub
mov
cmp
jmp
sbbb
aad
adc
decb
inc
push
sub
movsl
sub
inc
push
sub
aas
xor
sub
mov
sub
jle
test
and
push
lea
jae
into
clc
mov
mov
lock
pop
pop
movsl
mov
xchg
insb
xchg
or
dec
add
push
mov
cmc
inc
daa
lea
and
icebp
dec
add
faddl
stos
pop
sbbb
adc
int3
fwait
out
cmp
or
cmp
int
in
sub
pop
mov
ret
sbb
push
dec
sbb
push
mov
xchg
test
jp
inc
hlt
loopne
mov
xchg
loop
dec
mov
xor
inc
sbb
push
xor
out
mov
add
popa
shrl
jp
mov
pop
pusha
sarb
mov
mov
lods
int
repnz
add
jns
std
std
lahf
outsl
push
aaa
lea
adc
test
jno
aad
imul
incb
aaa
and
mov
mov
cmc
sbb
stos
pop
jno
mov
push
mov
adc
inc
jns
mov
jne
xchg
fiadds
or
adc
inc
mov
loop
sahf
ljmp
push
and
mov
stos
testb
push
cmp
mov
inc
add
pusha
and
mov
push
or
jnp
dec
orl
and
cli
pop
lea
xor
jnp
in
and
movsb
gs
lock
xchg
add
add
mov
xchg
stos
and
fildll
dec
in
shrl
jne
loope
daa
clc
sub
mov
jmp
xor
adc
aaa
or
loopne
push
adc
ret
push
cmp
xor
insl
and
movsb
daa
or
addr16
sub
mov
cmp
and
jae
outsl
ja
push
je
jmp
rolb
jno
loopne
lret
in
adc
push
pop
orb
sarl
and
shll
loopne
jno
fcompl
in
mov
adc
push
ljmp
scas
sbb
inc
cmp
mov
mov
test
jmp
push
rorb
loopne
lret
mov
or
jp
mov
inc
inc
repnz
insb
or
test
aam
pop
jg
mov
lods
mov
push
xor
aaa
pop
push
cmp
and
and
push
sbb
ret
xlat
pushl
mov
lret
es
pop
push
mov
mov
in
shlb
jns
call
push
xchg
fdivrl
fildll
mov
insb
repz
aaa
mov
mov
popa
lea
repnz
fsts
in
shl
jae
or
cwtl
mov
pusha
fistps
push
xor
in
orb
jb
adc
push
lea
pop
adc
fsubl
lods
sbb
sbb
sub
pop
lock
push
sbb
inc
xchg
lock
mov
add
adc
mov
shrb
mov
sub
dec
sti
or
sbb
push
pop
ret
popa
lods
in
push
gs
je
sbb
daa
jg
bound
or
iret
jbe
dec
jecxz
mov
in
dec
pop
push
fwait
jnp
pop
and
shrb
dec
push
sub
inc
mov
notb
push
push
pop
mov
mov
xor
jp
fistpll
jno
jmp
jge
lea
es
jnp
bound
lret
fsubrl
ljmp
subl
adc
call
ret
int3
lods
fldenv
loopne
fdivl
cs
lock
sub
sbb
mov
inc
cmc
hlt
pop
pop
ss
call
or
movsb
jae
sbb
sub
in
ret
insb
loope
jge
arpl
pop
dec
and
push
insl
push
or
mov
jl
adc
movsb
add
in
addr16
leave
loope
lret
cmpsb
mov
or
push
pushf
js
xorb
dec
push
mov
pop
add
push
lret
adc
adc
xor
xchg
pop
push
js
push
mov
pop
popa
lds
in
pop
pop
push
aam
roll
or
mov
movsl
mov
fildl
jne
or
and
sub
cmp
inc
arpl
inc
mov
aad
cmpsb
lea
pop
test
call
cmp
cmc
mov
js,pt
sub
leave
mov
into
das
add
xchg
or
push
fcoms
lea
out
push
cli
sbb
loope
cld
xchg
cmc
jg
jge
cmp
arpl
mov
cmp
loop
and
mov
lahf
mov
fimull
or
xchg
pop
or
scas
jno
mov
jns
push
popf
xor
rclb
mov
je
fldt
ss
repz
sub
mov
iret
sbb
jmp
sub
movsl
pop
out
pop
xchg
ss
lret
fs
fdivrl
ret
and
sub
pop
sbbl
out
mov
jle
xchg
lret
sti
mov
xchg
js
inc
mov
ret
enter
repz
mov
cmp
mov
mov
mov
xchg
mov
sub
sbb
jmp
sbb
mov
dec
testb
mov
pop
sti
and
add
add
dec
sbb
push
jge
es
mov
xchg
cwtl
lea
adc
cmp
or
sbb
mov
and
xchg
ja
int
hlt
xchg
mov
popf
xchg
into
inc
mov
pop
and
xchg
test
data16
pop
inc
loop
in
jne
cmp
mov
ret
jb
fisttpl
sub
push
xchg
inc
int
pop
add
adc
pop
pop
or
sbb
mov
popf
test
push
in
fcomp
mov
pop
bound
push
xchg
testl
add
mov
js
push
lock
jp
sub
pop
xor
aaa
inc
xlat
pop
push
sbb
es
and
sub
inc
es
xor
push
arpl
mov
vcvtsi2sdl
push
enter
jno
jae
pop
in
into
push
jne
xchg
or
jne
jge
xor
push
pop
mov
jne
lcall
mov
xlat
adc
aaa
iret
push
jb
and
das
pop
push
jecxz
xchg
lret
jmp
adc
dec
and
dec
inc
lods
jne
or
sub
int
mov
ja
pop
jmp
test
in
adc
fildll
shlb
jle
xchg
leave
rcl
imul
pop
mov
sbb
dec
std
pop
test
dec
mov
icebp
xchg
sub
dec
mov
jae
xchg
imul
and
pop
ja
enter
cmc
test
pop
inc
shrl
movzbl
arpl
outsl
movl
jecxz
mov
lahf
jbe
gs
movb
jae
subb
fstpt
sub
or
mov
push
out
lea
xchg
push
cli
in
mov
fcoml
in
iret
xchg
int
push
dec
sub
mov
xchg
pop
popa
mov
pop
pop
outsl
out
in
inc
mov
xchg
in
arpl
loop
iret
dec
insl
jb
ja
cli
dec
and
mov
mov
je
jge
sarl
mov
hlt
jmp
mov
mov
and
pop
cmc
mov
leave
xor
fdivl
lahf
inc
and
xchg
addr16
enter
and
aas
fildl
sbb
dec
and
inc
fisubrl
inc
adc
imul
push
fs
cmpsb
outsb
jmp
mov
pop
in
fdivr
inc
cs
or
arpl
lods
cmp
dec
or
sahf
daa
mov
fimuls
rcrb
out
xchg
pop
push
out
repnz
sub
shrl
mov
xor
xchg
jns
jno,pt
xchg
enter
xchg
jbe
test
adc
insb
std
popa
jge
xor
and
mov
shll
in
jo
aaa
dec
xchg
int3
lods
jl
rorl
mov
sbb
jnp
sbb
cmpsb
cwtl
nop
jle
in
std
or
and
dec
or
mov
clc
dec
jae
gs
pop
in
pop
cwtl
out
or
add
dec
repnz
lock
test
iret
lea
shll
xor
mov
insl
mov
jbe,pn
ljmp
mov
xchg
sub
cli
or
inc
je
add
int
cmp
xchg
mov
mov
or
jns
sbb
mov
jl
sub
mov
leave
jbe
lea
cld
mov
push
lock
testb
imul
in
push
pop
hlt
or
loope
lret
jge
pop
dec
and
pop
sub
mov
js
loopne
mov
lods
sub
push
adc
repnz
gs
mov
pop
cltd
fcmove
jbe
mov
xor
insb
mov
test
xor
pop
stos
fmulp
add
clc
and
test
sbb
out
pop
ja
xchg
inc
mov
sbb
aaa
dec
lds
adc
pop
dec
cld
js
sbb
and
iret
stc
getsec
pop
mov
jp
ds
pop
and
arpl
enter
sbb
cmp
subb
dec
jbe
mov
stc
mov
js
loope
jns
jne
rorb
aad
test
xchg
inc
xchg
and
dec
jb
push
sarl
aas
add
sub
and
pop
add
fdivrl
xchg
fisubrs
sub
jae
sbb
pop
gs
sub
cmp
jno
jle
jl
xor
and
xchg
lahf
pop
aad
fisubrl
and
jl
icebp
jns
mov
or
fisttps
dec
lret
cmp
xor
lea
adc
aam
pop
mov
lock
in
lret
enter
mov
inc
or
jge
pop
inc
fisubrs
shll
test
adc
lret
sub
inc
popf
jl
scas
inc
loope
add
xor
cmpsb
push
sbb
aas
pop
mov
icebp
enter
ret
das
scas
sub
push
rclb
cld
pop
xchg
mov
jbe
ss
stos
in
xchg
cmp
and
dec
mov
sbbb
fsubrs
inc
push
sub
inc
mov
pop
loop
jp
mov
js
mov
sti
jns
dec
std
pop
jecxz
jp
lods
adc
arpl
stos
es
cmp
cmp
loope
es
or
mov
fldcw
dec
lock
cmc
cmp
cmp
stos
notb
dec
mov
fisttpll
sub
push
js
inc
pop
xchg
sar
or
mov
mov
jb
xchg
in
popa
jae
mov
push
mov
negl
push
gs
and
mov
and
les
popa
or
xchg
popa
adc
jns
push
scas
ljmp
sub
xchg
push
pop
jle
jno
aad
pop
sub
in
mov
dec
jno
imul
jnp
mov
pushl
jle
mov
fsubrl
into
fs
movsb
push
and
pop
xchg
lahf
js
cmpsl
mov
lods
inc
jae
sub
test
sub
inc
int
cld
repnz
rclb
sbb
mov
add
loopne
popf
or
loop
fists
subl
pop
or
add
addr16
insb
push
mov
daa
jno
movsb
js
inc
mov
lret
cmp
mov
gs
sub
inc
dec
std
insb
and
add
xlat
data16
mov
repz
imul
or
ljmp
mov
ja
cmp
or
push
push
mov
sbb
cs
cmp
call
pop
sahf
das
inc
sar
je
jnp
xchg
xchg
lcall
pop
imul
mov
mov
xchg
xchg
out
lahf
clc
jge
loop
mull
std
insb
mov
dec
jl
arpl
lea
sub
sub
mov
rorl
cmp
add
or
mov
sub
js
insb
mov
ja
mov
pop
mov
int
cmp
mov
sub
lock
mov
sbb
fidivl
mov
mov
cld
sub
jno
in
shlb
or
sbb
sub
xchg
pushf
mov
pop
adc
xchg
dec
dec
lret
dec
aad
scas
mov
jns
adc
lahf
jle
mov
push
lcall
xchg
mov
int3
mov
sahf
imul
jbe
loop
jns
aad
cmc
mov
mov
fmulp
ret
popa
and
repz
stos
insl
sahf
fs
sbb
or
xchg
aam
mov
sub
cmp
mov
jg
lret
mov
int
jne
cwtl
in
inc
fdivrl
sbb
pop
xchg
cmp
stos
push
jl
inc
add
lcall
sbb
sti
jge
mov
mov
rcrb
daa
push
stos
int
sbb
insl
in
rclb
jbe
push
aad
lcall
push
dec
in
incb
and
movsl
rcr
sub
mov
xor
insb
jnp
ss
lds
cltd
fldt
jb
incb
ljmp
jle
fwait
adcl
faddl
push
jge
push
and
and
ret
fwait
stos
int
gs
fists
push
daa
sub
in
jp
sub
insb
jmp
or
push
subl
hlt
mov
mov
in
push
pop
fists
aad
fdivrs
add
lods
add
push
adc
stos
add
imul
cli
and
dec
mov
fistpl
orl
jno
scas
mov
lock
hlt
es
xchg
filds
lods
inc
aam
adc
insb
es
loope
jmp
filds
ss
test
lret
out
mov
jnp
jg
xor
or
add
popf
js
jmp
in
scas
mov
lcall
jae
pop
jp
cmp
inc
dec
dec
cmc
lcall
jmp
scas
jne
jge
mov
aad
jns
sbb
jno
lea
decl
subl
cwtl
cld
sbb
jnp
lea
xchg
jle
lahf
and
sbb
xor
mov
mov
rclb
out
imul
jp
insl
stc
aam
sbb
lods
xor
xor
dec
in
push
jo
sbb
call
sub
dec
inc
stos
jae
jmp
adc
pop
sbb
dec
add
out
adc
outsl
push
pop
clc
outsl
insl
js
inc
scas
cwtl
imul
lods
sub
pop
test
mov
sbb
push
js
jnp
xor
inc
jp
addl
insb
xchg
mov
sbb
lods
push
fdivs
dec
add
xchg
dec
mov
xorl
fs
shrb
mov
inc
scas
xor
fstpl
mov
add
cmc
mov
fmull
adc
sub
mov
push
sub
push
stos
mov
int
xchg
lea
jle
xor
cltd
add
cwtl
test
test
std
je
call
mov
sbb
mov
adc
push
insl
data16
fistpll
mov
out
dec
sqrtps
in
jmp
insw
jbe
test
aam
adc
pusha
in
mov
pop
pop
lret
inc
fidivl
loope,pt
jb
insl
int
ficoms
or
sub
test
push
mov
push
push
fcompl
insb
mov
lea
add
imul
movsb
jb
lret
outsl
gs
add
cmc
hlt
sub
inc
test
cwtl
xor
out
push
mov
sahf
pushf
sbb
shlb
pop
xor
cmc
dec
adc
idiv
xchg
inc
xchg
addr16
es
pop
aad
and
movsl
insb
cmp
jg
push
mov
leave
orb
xor
mov
xor
inc
push
repz
out
hlt
fadds
insb
jbe
jo
add
icebp
lea
and
popa
or
pop
lock
adc
xor
insl
adc
sbb
bound
fmull
xchg
aam
cmp
js
inc
es
push
stos
xor
fdivl
fildll
pop
sub
cltd
inc
jb
jnp
mov
pop
or
xor
das
inc
ja
dec
xchg
xchg
fisttps
das
cwtl
mov
fldcw
jecxz
xor
mov
stos
repnz
push
add
add
repnz
adc
jne
or
pop
jmp
daa
mov
in
fidivrs
pop
xlat
mov
xor
lahf
aaa
mov
mov
test
and
and
fcomps
xchg
das
mov
in
ja
mov
sahf
aad
negb
adc
movsw
jmp
rorl
aam
bound
add
adc
arpl
pop
orb
pop
inc
fcomp
or
movsb
out
push
imul
sub
fdivrl
pop
mov
inc
push
sub
mov
mov
cmp
cmc
cld
bound
scas
int
sub
out
fbld
xchg
mov
jecxz
ds
in
mov
lock
sub
add
xchg
and
cmpb
out
scas
cmc
xchg
loopne
repnz
ss
xchg
inc
or
xchg
lahf
mov
adc
sbb
call
mov
pop
cmpsb
test
test
push
daa
in
pop
cmp
leave
mov
les
dec
data16
popa
mov
mov
daa
pop
push
imul
xor
ret
push
stos
sbb
sub
gs
in
cmp
aad
in
jle
in
mov
push
xchg
das
push
cs
sub
add
push
sbb
leave
leave
and
enter
push
mov
scas
pusha
arpl
mov
ret
je
mov
push
mov
and
movsl
ret
je
cmp
jno
push
dec
mov
lods
hlt
loope
test
xchg
loop
dec
jae
xchg
and
insb
cmpl
mov
out
xchg
sub
clc
mov
scas
push
std
mov
pop
ljmp
pop
inc
pop
je
push
sti
int
mov
es
frstor
cmc
rcl
pop
icebp
cmp
dec
push
std
inc
dec
inc
adc
test
test
xor
into
lret
sub
fincstp
dec
sbb
cs
push
loop,pt
decb
cld
inc
div
pop
imul
int3
popf
iret
mov
and
xchg
aas
cli
js
lods
xlat
jno
mov
push
mov
push
and
not
repz
mov
sbb
test
sbb
mov
sub
loop
fs
repz
pop
movsl
and
lea
add
dec
cs
push
into
sbb
cmp
in
push
mov
add
jnp
in
stos
push
lret
jo
loopne
and
daa
sub
cltd
call
fcmovbe
int
iret
js
pop
inc
mov
jns
xchg
lea
dec
repnz
insb
lods
and
lea
mov
pop
popf
xchg
jg
stos
scas
scas
hlt
sbb
cmc
xchg
xchg
pop
push
sbb
arpl
mov
test
ja
cmp
fistps
gs
popf
lea
cld
iret
add
fisttpll
mov
pop
jge
sub
jl
xchg
shl
loopne
jmp
push
addl
lea
xorb
mov
repz
cmp
leave
jp
pop
sub
in
adc
into
dec
jecxz
or
add
or
test
adc
add
and
bound
ljmp
rorb
mov
gs
cld
outsl
push
xchg
lcall
xor
in
jmp
orl
fcoml
pop
mov
leave
cld
pop
prefetchnta
xor
xchg
cmpsb
or
cwtl
and
jno
das
inc
sbb
lret
fbld
in
add
andb
test
sub
jne
insl
cmpsl
in
xchg
outsb
int
jmp
xchg
pop
imul
push
int
fnsave
push
sub
adc
int3
aam
pop
aad
out
jne
dec
test
pop
and
fldl
mov
or
cmp
mov
or
mov
push
jbe
sub
mov
jge
out
cld
cmp
jno
mov
dec
adc
mulb
in
mov
xorb
sub
mov
xchg
incl
push
dec
js,pt
jle
fnstsw
pusha
in
pop
cmp
imul
or
lea
push
and
nop
testl
scas
and
test
sbb
mov
xor
jne
mov
sub
cmc
push
mov
mov
xor
inc
adc
jl
lock
jp,pt
insl
mov
insb
sti
xchg
inc
jne
cmpsb
inc
pop
push
mov
and
and
repnz
push
test
cltd
out
sub
sbb
push
fdivp
gs
ds
xor
loope
cmc
and
dec
or
xchg
push
jge
arpl
mov
or
inc
subl
pop
in
xlat
pop
mov
int3
jbe
and
inc
pop
out
adc
jmp
cs
sbb
movsl
lods
and
jo
push
movsb
shll
das
push
and
inc
loopne
cwtl
fsubp
imul
xor
and
dec
das
cmpsb
sahf
pop
xchg
jnp
outsl
jp
inc
mov
aam
sub
inc
mov
jne,pn
fdivs
push
mov
and
xchg
mov
and
cltd
mov
ja
roll
jl
icebp
ret
cmp
jns
pop
jae
push
leave
in
clc
mov
ds
pop
subb
andb
or
jnp
popa
or
sub
pop
mov
lock
push
xor
inc
in
ret
scas
dec
sarb
hlt
and
sbbb
test
jge
shll
repnz
mov
rcrb
lods
lds
jo
adc
bound
stos
push
dec
imull
xor
int3
xchg
xor
lcall
iret
movsl
inc
in
push
ficomps
jmp
pop
cmp
cmp
push
jle
out
insl
hlt
xchg
pop
imul
cmp
mov
or
mov
cmp
inc
orb
mov
stc
pop
mov
popf
pop
pop
push
aad
mov
lock
aaa
xchg
aaa
into
sub
jmp
out
aad
outsb
cmp
and
mov
js
sbb
lods
push
xor
dec
outsb
cmp
fsubs
out
lods
sahf
dec
xchg
inc
in
ja
mov
ret
adc
aad
pushf
jno
lea
pop
ja
xchg
cmp
hlt
popa
out
cwtl
loop
sub
mov
mov
add
cmc
mov
aaa
push
adc
pop
push
pop
scas
out
xor
les
pop
inc
aam
mov
mov
hlt
sub
push
out
mov
cmp
lcall
lock
aad
test
add
fldl2e
insb
dec
fs
loop
push
pop
hlt
fmull
int3
dec
add
jnp
or
xchg
mov
push
iret
comiss
pushl
imul
add
mov
jns
mov
cwtl
jbe
outsl
sbb
xor
daa
test
xor
lret
fdivl
int
pop
mov
push
scas
mov
push
in
pop
notl
inc
mov
xrelease
pop
pop
adc
jg
and
mov
sub
xor
bswap
mov
cwtl
cmc
call
test
rclb
repnz
add
cmpsb
mov
inc
cwtl
scas
jecxz
xchg
pop
cwtl
pop
sarb
das
lock
pop
pop
ret
test
xchg
or
pop
in
stos
xchg
mov
jne
mov
mov
push
jl
test
in
test
and
mov
in
pusha
and
mov
dec
lods
adc
and
outsb
orb
lahf
push
leave
push
es
arpl
cvtps2pd
loopne
sub
mov
jp
cmp
icebp
hlt
jnp
adcb
in
inc
lock
outsl
lea
mov
inc
adc
lds
and
fs
and
mov
cwtl
sub
sub
test
cmp
lret
mov
pushf
pop
cmp
negl
repnz
dec
mov
fcompl
or
repnz
push
and
and
gs
into
fbstp
repz
add
vmulpd
xor
inc
cmp
or
and
xchg
or
mov
aad
cmp
js
arpl
imul
shrb
cwtl
dec
shll
gs
es
jg
bound
fldcw
jp
mov
inc
pop
ja
test
fildll
fsubrs
movsl
test
cmpsb
mov
in
iret
or
or
setae
sti
mov
dec
pop
mov
ret
cli
js
inc
push
ss
sbb
test
adc
imul
jmp
mov
les
sarl
loop
in
sub
adc
loopw,pn
stos
push
insb
rsqrtps
inc
dec
mov
mov
add
cmp
fists
test
data16
movsl
lcall
flds
dec
cmp
or
aad
rcrb
bound
enter
cmpsl
out
hlt
fstps
in
jae
mov
fsubs
mov
out
and
imulb
shrb
arpl
cltd
xchg
and
dec
js
fistl
inc
lret
lret
sub
mov
in
fcomi
nop
es
pop
in
cmp
fnstcw
push
fisubrs
mov
not
pop
icebp
mov
sti
cmpl
mov
inc
lea
mov
add
and
stos
jmp
dec
mov
xchg
jecxz
jae
inc
outsb
mov
adc
rclb
in
mov
mov
add
loope
lret
xchg
dec
push
in
sbb
fs
xor
pop
dec
fists
es
add
pop
lahf
popa
mov
ret
jge
push
lret
mov
das
push
and
cmp
jmp
shrl
jns
cmpsb
subb
mov
ss
mov
pop
mov
mov
adc
push
stos
nop
add
sbb
rorl
insl
call
dec
mov
dec
cmpsl
fdivrl
pop
insl
and
divl
and
sub
in
add
movsl
gs
in
jp
pop
push
jno
ret
loope
push
pushf
sbb
dec
js
sbb
mov
loop
dec
mov
or
push
je
push
and
adc
and
mov
sub
dec
sub
stos
lea
mov
jp
int
lret
jbe
and
ljmp
ja
mov
xchg
cli
dec
pop
sahf
sbb
outsb
pop
sub
mov
jne
mov
jmp
pop
and
dec
js
loope
stc
arpl
bswap
gs
imulb
push
cmpsb
sbb
inc
stos
adc
call
insl
insb
hlt
adc
and
inc
xchg
cmp
sub
gs
push
pop
adc
pop
mov
pop
adc
jne
loope
mov
pop
outsl
imul
dec
or
pop
in
lahf
repnz
mov
shlb
jmp
cmp
mov
lods
lea
repnz
and
lcall
mov
insl
xor
pop
in
sbb
sbb
mov
add
mov
mov
push
in
imul
inc
add
fstpt
fs
fnstenv
sub
in
xchg
sub
push
xchg
inc
orl
aam
push
or
pusha
aad
in
lahf
jbe
je
push
insl
push
fsubl
xor
push
in
adcl
movsl
out
fpatan
push
repnz
xchg
adc
arpl
adc
loopne
add
data16
movsl
dec
jb
in
daa
push
aam
xchg
mov
sahf
dec
cltd
adc
add
popa
dec
movsb
sub
imul
shr
add
xchg
jno
sbb
les
cltd
pop
in
loop
push
mov
dec
and
xchg
aad
repnz
mov
mov
add
push
fsubs
mov
adc
orl
es
cld
jns
inc
fldcw
or
hlt
cli
add
and
das
lods
frstor
aas
mov
dec
outsb
lods
cmp
dec
out
push
mov
ret
loopne
sbb
mov
xor
sbb
roll
sbb
or
adc
stos
dec
push
lahf
cld
jno
cmp
jae
xor
es
dec
or
stc
lea
inc
jp
xor
ljmp
gs
sbb
fistpl
xor
insl
dec
sbb
leave
and
insl
sbb
cmp
mov
add
int
dec
xor
push
pop
bound
pop
sbb
adc
pop
mov
dec
cltd
cwtl
and
daa
xor
sarl
dec
xor
jbe
sub
mov
add
int3
sbb
out
jae
adc
sub
sbb
andb
pop
dec
das
sbb
lock
ds
loopne
adc
repz
pop
mov
inc
adc
dec
pop
cmp
lret
out
and
daa
leave
sbb
enter
mov
push
sbb
xchg
test
jnp
loopne
jno
insb
adc
jnp
sahf
std
mov
mov
in
or
std
fisttpl
jecxz
gs
in
jo
aam
adc
jnp
leave
je
fsubr
adc
fimuls
fwait
mov
jge
lock
xchg
pop
insl
push
mov
imul
outsb
data16
mov
ja
sub
mov
lock
dec
movsl
rcr
movsl
inc
dec
push
mov
aad
sbb
mov
or
xchg
stos
test
adc
or
and
lods
jbe
rcrl
xor
insb
cmp
inc
pop
ret
mov
call
icebp
aad
jg
daa
flds
jnp
cld
push
scas
push
fcomps
insl
sub
insb
cmc
movsb
sahf
and
je
mov
xchg
push
loopne
mov
shlb
dec
xchg
lahf
daa
leave
mov
cmp
fwait
ljmp
das
arpl
aam
dec
lea
push
and
add
xchg
or
and
rcrb
dec
popa
jns
push
loopne
sub
cli
lea
inc
jae
mov
sub
mov
jnp
sahf
mov
and
jmp
xchg
sbb
sbb
in
sub
mov
adc
sbb
pop
dec
jmp
dec
push
jmp
test
or
aad
mov
cmpsb
jnp
xchg
in
push
lock
jo
stos
stc
mov
or
add
jae
pop
std
adc
std
js
sub
jge
roll
mov
xor
adc
test
js
gs
xlat
inc
in
lock
lret
mov
jne
mov
jle
les
cs
fs
dec
push
jecxz
jg
es
add
xchg
mov
inc
sub
and
and
lret
xchg
jmp
add
flds
mov
test
cli
rcr
lock
mov
xor
ds
sbb
mov
pop
mov
fdivl
data16
pusha
inc
scas
aad
or
aas
jmp
std
fldcw
or
jl
or
and
sub
shrl
xor
faddl
push
mov
int3
push
cwtl
pop
push
pop
fbstp
insl
jmp
cmc
mov
mov
pop
inc
pop
sarb
pop
mov
pop
push
dec
icebp
loop
in
jle
js
add
outsl
clc
sbb
jns
sub
and
mov
pop
mov
jnp
out
xchg
shl
adc
sbb
push
sahf
xor
out
xchg
iret
and
push
add
xchg
mov
pop
push
inc
jns
movsb
icebp
sbb
cld
inc
jmp
and
and
int
repz
shrl
cmpsb
add
test
push
push
enter
loop
insl
push
adc
ljmp
imul
xchg
popf
imul
push
sbb
sbb
adc
mov
lcall
shrb
xor
sbb
sahf
loop
jnp
stc
call
jae
imul
mov
imul
std
cmc
in
mov
mov
lea
int3
jle
neg
mov
fimuls
dec
stc
sub
pop
in
jae
mov
and
pop
sbb
cmp
adc
repz
ljmp
jne
or
mov
in
movsl
xor
push
pop
repz
or
addr16
test
lea
pop
mov
xor
pop
mov
pop
mov
js
mov
and
into
insl
inc
jmp
incl
push
pop
arpl
mov
cmpl
rclb
ret
inc
cltd
and
lea
xor
and
test
call
and
push
mov
pop
in
lahf
jno
out
push
sbb
dec
push
jo
loop
xor
mov
lcall
fistpl
jae
xlat
iret
or
and
mov
jae,pt
and
dec
push
mov
lods
lods
lahf
xchg
aaa
rcll
sub
loop
movsb
xor
not
aam
movsb
push
jmp
push
jg
sub
std
addr16
pop
mov
sbb
xorl
idivl
cltd
or
adc
iret
mov
decl
movsl
pop
scas
rclb
in
jmp
inc
aaa
push
jg
and
jbe
xor
push
adc
sub
mov
in
sub
dec
aam
popf
in
orb
test
in
dec
loopne
jp
xor
notb
and
or
loope
fwait
call
mov
roll
lock
lods
sbb
push
in
jns
lret
add
out
adc
mov
sbb
aad
xor
ret
xor
int
in
and
in
sbb
aad
jb
lahf
sbb
sbb
lods
push
xor
dec
call
popf
fsubs
mov
push
bound
cmp
jno
adc
ret
ljmp
loop
jno
dec
aad
mov
in
jp
fwait
mov
int3
mov
lea
ja
adc
lahf
xchg
lds
cli
sub
fisubrl
pop
xchg
movsl
addr16
test
scas
lret
insl
push
jnp
pop
and
sub
shrl
sbb
fmull
ffree
inc
sbb
aaa
rcl
mov
mov
pushf
inc
paddw
pop
lds
pusha
mov
mov
in
ljmp
popa
ret
mov
adc
mov
push
sub
lcall
jmp
sbb
mov
pop
fnstcw
js
scas
dec
mov
sub
jp
xchg
jno
mov
mov
add
popf
aad
lea
pop
sbb
adc
clc
fildll
movsl
inc
inc
inc
lock
xlat
sbb
sti
sbb
sarb
cmc
push
mov
and
insl
jmp
xor
mov
lods
add
stc
rorl
je
outsb
jns
in
dec
mov
sbb
xchg
xorb
enter
std
arpl
adc
jno
imul
pop
cmp
xchg
ss
lret
cmp
cmp
mov
aad
push
mov
ja
sub
xor
pop
mov
xor
jnp
mov
xchg
or
stc
xor
xchg
mov
std
dec
mov
cmpsl
fcompl
mov
in
dec
lock
jmp
xchg
gs
int
in
jb
jns
fisubrs
sub
pop
or
cmp
andl
gs
imul
test
out
mov
mov
in
cmc
scas
js
test
ds
jmp
in
lret
lods
cmp
adc
pop
adc
andl
lea
repz
loop
inc
out
std
in
shll
mov
shlb
jp
mov
fcoml
push
and
out
sbb
nop
shl
aam
mov
gs
fs
xchg
je
arpl
pop
movsl
xchg
jo
adc
inc
fidivrl
add
jmp
jne
lods
xor
or
push
out
shlb
mov
fcoml
dec
loop
sub
outsb
lods
pop
out
les
jmp
sbb
or
mov
push
or
stos
jmp
cltd
insb
adc
mov
hlt
push
sarb
jno
push
or
pop
sub
push
xor
scas
mov
cld
mov
stos
ds
lods
andl
outsb
fildll
xchg
mov
ret
cmp
adc
leave
jg
outsl
pop
repz
aas
dec
sbb
jb
sti
mov
imul
int
lahf
aam
sub
pop
pop
and
inc
je
or
or
push
sahf
sbb
sbb
adc
repnz
jg
loop
xchg
cmpsl
lcall
sub
mov
mov
lea
sbb
xchg
mov
mov
insb
mov
cld
xchg
inc
jl
sub
fsubr
imull
sbb
inc
insl
and
outsb
loope
int
sub
add
mov
subb
xchg
in
lds
and
and
jno
jbe
test
dec
sarl
pop
mov
neg
jl
fisubrs
or
jmp
dec
adc
repnz
stc
xor
rcll
fsubp
mov
in
cmpsl
shrb
sbb
out
sub
add
lods
pop
and
and
clc
mov
sbb
adc
sub
or
insb
ljmp
out
jl
adc
imul
mov
call
out
xor
shll
adc
mov
xor
sahf
sbb
loop
jbe
movsb
inc
cmc
scas
lods
fwait
aaa
jg
daa
jp
or
jg
imul
mov
jl,pn
bound
ret
inc
shlb
push
enter
icebp
in
sub
mov
jmp
mov
pop
in
pop
jmp
add
ss
push
not
hlt
mov
push
movsb
xorl
aas
and
repz
and
cs
dec
bound
or
mov
mov
mov
test
xor
or
jg
in
loopnew
push
loop
sbb
cld
cwtl
pop
adc
sub
push
stos
xchg
outsl
ljmp
pop
outsb
add
pop
lods
ss
and
xchg
push
aam
daa
sahf
inc
stos
fldenv
inc
lret
das
mov
dec
adc
enter
arpl
mov
mov
add
icebp
lock
or
mov
and
inc
inc
inc
add
repnz
jle
sbb
adc
jb
cmpsb
pop
iret
mov
jecxz
jno
pop
pop
scas
xor
insb
pushf
loop
in
sub
inc
and
jg
pop
stc
sub
repnz
inc
adcb
arpl
mov
loopne
fs
cld
push
jnp
rolb
adc
loope
pop
hlt
mov
es
lret
mov
ja
bound
sbb
pshufw
dec
mov
in
jmp
push
into
or
xchg
mov
xor
xchg
int
pop
stos
imul
xchg
call
test
push
xchg
or
jg
pop
inc
js
cltd
xor
scas
in
ret
push
mov
data16
sbbl
dec
and
inc
adc
push
insl
subl
call
sti
push
xor
hlt
pop
jno
xor
cwtl
mov
fldt
jl
xchg
fcoms
rcll
jo
mov
add
inc
lds
fcomps
adc
in
and
int
mov
mov
sahf
inc
fsubl
std
out
insl
shlb
jb
inc
sbb
or
test
mov
adc
leave
mov
je
test
aad
outsl
mov
js
push
mov
shlb
sbb
pop
jnp
enter
mov
lds
dec
or
xor
lahf
jecxz
out
mov
or
mov
adc
loop
cwtl
mov
mov
xchg
hlt
xor
pop
dec
int
lret
or
adc
and
insl
jp
les
hlt
mov
adc
mov
jle
pop
mov
lret
fwait
sub
push
es
pop
mov
cmp
in
cmc
push
gs
daa
jg
mov
sub
sub
imul
jae
out
sahf
sbb
jp
lret
sahf
adc
jmp
sbb
mov
je
push
push
cmp
popa
cmp
mov
lea
aaa
rcrl
sub
leave
gs
aad
pop
adc
test
ds
lods
xor
es
enter
pop
rorb
pop
cmp
popa
mov
mov
mov
push
lea
lods
filds
cs
out
cmp
subl
jo
mov
fstl
pop
add
ret
jp
fs
mov
xor
stos
and
sub
push
and
cmc
ss
mov
xlat
sub
mov
movsb
cmpsl
push
inc
pop
in
cmp
les
into
jae
pop
push
daa
movsl
cmp
inc
xchg
fwait
mov
push
mov
ds
push
lds
arpl
lods
mov
dec
mov
sarb
mov
sub
movsl
incl
inc
lea
cvtps2pd
stos
inc
sbb
js
je
dec
xorl
outsb
push
or
xchg
jns
cli
adc
sub
push
inc
cwtl
sbb
cmp
imulb
sbbb
test
and
mov
xchg
dec
pop
lret
fistpl
inc
adc
inc
sbb
cmpsb
scas
call
jg
bound
les
leave
mov
adc
dec
bnd
dec
icebp
dec
and
mov
jle
fldl
in
scas
dec
push
jnp
mov
imul
lods
pop
pop
or
call
mov
sahf
into
push
or
ja
adc
in
bound
jns
sub
fcomp
jo
notl
mov
lods
or
lods
loop
mov
cltd
jbe
or
pop
push
and
xor
into
es
ret
pop
xlat
mov
je
out
cmp
mov
bound
fmul
xlat
push
std
push
aaa
or
sub
insb
or
push
xor
inc
cli
mov
cmp
fiadds
orb
roll
adc
aam
lods
fadds
xchg
sbb
cmp
imull
inc
cmp
das
add
sbb
add
daa
sub
mov
and
popl
dec
ja
push
and
cmpsb
inc
lret
inc
jno
inc
or
cltd
int
rol
jmp
lea
scas
jge
loope
jno
push
xchg
std
out
shr
mov
test
cmp
fwait
mov
pusha
lret
jbe
pop
jg
or
jl
ljmp
popf
call
dec
mov
dec
jns
jmp
sbb
stos
add
add
sbb
pop
rcl
gs
jg
dec
fidivrs
and
je
sarl
mov
lret
push
repnz
sar
out
bound
in
shlb
cmpsl
hlt
pop
xor
lahf
out
jle
cmpsl
neg
leave
outsl
inc
leave
outsb
jl
call
mov
mov
xchg
int3
bound
addr16
rorl
cmp
in
shl
xor
jno
adc
imul
inc
sbb
mov
ja
xlat
dec
shlb
sbb
lds
xor
mov
aas
rolb
or
and
fildll
jbe
xchg
pop
xlat
into
in
in
sub
mov
lods
ja
sbb
nop
pop
xchg
sbb
xchg
stos
dec
jp
loop
aas
jo
mov
sub
and
xchg
mov
mov
xchg
popf
push
lea
xchg
bound
sub
xchg
mov
insb
pop
js
daa
push
mov
adc
aad
in
push
mov
aas
push
jno
js
arpl
mov
movntps
test
dec
jb
mov
out
cwtl
dec
imul
xlat
sub
or
xor
lahf
jae
mov
sub
aad
sbb
movsb
and
mov
xchg
cmp
int
dec
into
mov
sub
lock
sbbb
mov
test
push
ja
mov
sub
dec
mov
fdivrs
or
adc
daa
loope
cs
or
idivb
sub
fisubrs
cmp
xor
dec
cmp
fsubr
mov
movsl
je
sbb
inc
popf
bound
lea
lock
inc
xchg
imul
inc
gs
lock
adc
inc
sub
insl
push
lahf
fsts
movsl
out
jne
or
shll
mov
xchg
pop
dec
fimuls
ja
in
shrl
mov
mov
jp
jae
mov
xor
adc
scas
loop
pop
cli
leave
gs
lret
loopne
sub
mov
std
loopne
iret
loop
dec
movsb
lea
aas
je
xlat
incb
xor
aaa
mov
mov
jg
sbb
ja
lods
rorl
fildll
popa
movsb
add
push
adc
adc
jnp
xor
inc
sbb
dec
call
sti
xchg
dec
cmp
mov
adc
jecxz
push
push
stos
adc
sti
mov
bound
and
notb
cmpsl
decl
pop
imul
rcll
addl
push
mov
cmpsl
jbe
stos
jno
push
mov
push
lods
mull
js
fcoml
and
adc
cwtl
mov
hlt
mov
mov
insl
or
adc
fldt
push
mov
push
sub
jl
cmp
mov
mov
pop
mov
xchg
clc
xchg
mov
xchg
arpl
es
out
pusha
ja
sub
clc
stc
inc
imul
mov
std
jp
mov
xchg
inc
outsl
int3
jge
xor
pop
rclb
lea
pop
xor
fnstenv
adc
mov
cwtl
loope
dec
movsb
stc
mov
inc
push
mov
sbb
lret
mov
and
stos
adcb
int3
mov
test
lods
cmpsl
dec
xor
adc
lea
cmp
in
sub
sahf
mov
cmp
adc
cld
push
outsb
ss
enter
and
xchg
xchg
out
outsb
inc
mov
jmp
xchg
stos
stc
push
inc
das
shrl
mov
pushl
sub
xor
and
cmp
xchg
adc
in
dec
dec
ja
and
mov
stos
push
inc
pop
and
es
outsb
mov
and
rolb
dec
sub
addl
or
pop
int
mov
stc
movsb
shlb
or
fidivs
xchg
dec
bnd
icebp
dec
jae
pushf
ss
leave
cmp
data16
rclb
xchg
test
sbb
enter
into
cmp
jae
test
adc
or
data16
ja
das
test
jno
popa
adc
ds
ss
push
arpl
xchg
or
ficoms
inc
and
stos
jne
add
lea
int3
mov
bound
repnz
dec
mov
loop
or
add
jne
push
sbb
cmpsb
or
mov
stc
sbb
xor
js
pusha
fidivs
fsubs
push
xor
mov
ss
dec
insb
xchg
and
push
pop
lods
js
cmp
shr
and
loop
jg
lds
jns
push
dec
outsb
nopl
add
cltd
pop
pop
adc
lds
sbb
xchg
sbb
or
rcrb
lret
repz
sub
pop
ss
inc
shlb
mov
or
inc
dec
pop
fadds
and
mov
hlt
push
xchg
bound
sbb
in
and
lea
mov
repz
mov
and
fsub
imul
push
push
outsl
sub
ljmp
push
mov
sbb
jbe
sub
cmpsl
aas
lea
shlb
loope
movsl
jbe
adc
xor
sti
pop
vpshufhw
mov
mov
dec
jl
mov
shll
into
loope
addr16
mov
ret
rolb
sbb
repz
mov
sarb
xchg
addr16
sub
pop
push
mov
je
and
sbb
jno
pop
mov
out
aam
scas
jno
fadds
insl
mov
loope
shrb
sbb
fdivrl
daa
xor
or
adc
add
mov
mov
or
or
mov
adc
pop
or
sahf
and
sahf
lods
and
mov
shll
inc
mov
aam
and
mov
call
and
pop
mov
shr
inc
in
call
fnsave
push
mov
mov
xorb
daa
orl
or
mov
bound
pop
int
jae
sti
call
pop
loope
in
push
jmp
pop
jp
cmc
push
lock
dec
mov
and
push
pop
lea
jae
orb
je
repnz
shr
xor
rcll
xchg
enter
fcompl
imul
and
mov
bound
je
jecxz
cli
push
mov
jno
mov
sbb
push
cmp
pop
mov
mov
xchg
repnz
adc
adc
flds
sbb
aam
enter
cmc
jecxz
dec
jno
mov
sbbb
call
add
fidivrl
inc
lock
stc
arpl
out
push
daa
nop
cmp
jp
in
mov
jecxz
popf
js
jb
jge
add
mov
xor
jle
xchg
jbe
dec
in
push
or
mov
mov
lcall
xor
inc
inc
dec
fsubl
add
cmp
sub
cmpsb
mov
lods
loop,pt
daa
hlt
pop
cmc
cmpsb
pushl
xor
mov
push
push
adc
push
and
shll
jo
lahf
lret
lea
xor
mov
cmp
or
push
add
fists
jmp
subl
mov
hlt
jns
adc
decl
sub
movsb
ljmp
or
lea
inc
sub
adc
mov
lahf
rorl
pop
inc
jno
shll
and
mov
mov
sbb
xor
xchg
dec
notb
push
xchg
sub
mov
add
dec
rolb
push
sub
stc
adc
pop
outsb
pop
insl
push
push
or
es
jmp
inc
or
adc
movsb
sbb
pop
arpl
lods
mov
cmpsl
sahf
insb
adc
lahf
and
or
push
inc
mov
xchg
pop
pop
mov
xor
dec
test
ja
das
and
popa
mov
mov
nop
rorl
mov
andb
adc
addr16
mov
pop
lods
dec
push
subl
addr16
mov
pop
mov
or
cmp
das
pop
jns
pop
jns
mov
mov
jns
cwtl
mov
and
icebp
fs
and
cmc
sbbb
xchg
pop
frstpm(287
inc
loopne
cmp
sub
mov
sti
pop
mov
arpl
ret
loop
mov
ss
mov
jmp
inc
or
jecxz
imul
shlb
sub
mov
ja
pandn
mov
int
int
jmp
subl
mov
mov
cld
call
lret
and
clc
daa
push
xor
push
test
mov
push
gs
fyl2xp1
das
pop
xlat
mov
add
movsb
orl
and
or
outsb
cmp
sahf
mov
pop
mov
mov
or
sbb
loopne
mov
jbe
xor
push
into
pop
testb
int3
rorl
jne
fwait
sbb
scas
aad
mov
inc
push
mov
shr
push
cmc
push
into
cmp
shrl
dec
jg
jno
jle
mov
aam
fdiv
into
jnp
mov
js
or
stos
sub
sub
clc
fisttpll
mov
insl
sbb
insb
jo
pushl
imul
add
adc
mov
cwtl
cmpsl
pushf
push
pusha
sbb
and
and
or
xlat
aam
sub
mov
mov
sarl
jl
mov
popa
sbb
sbb
cmc
in
loop
js
sti
ret
out
bnd
aaa
icebp
lahf
jp
dec
push
cli
dec
add
inc
in
jp
cmp
push
mov
xchg
js
mov
shll
mov
int
xlat
push
fistpll
cmp
popa
adc
push
mov
mov
fidivs
mov
inc
orb
sub
lea
js
xlat
orb
push
rcr
sbb
cwtl
xor
lea
mov
fidivrs
adc
or
imul
cmp
lea
mov
mov
loope
daa
pop
push
mov
out
data16
mov
mov
movl
dec
xor
loopne
pop
mov
repz
xor
hlt
das
cmp
rorl
ds
mov
push
and
and
popa
repz
call
jne
cmp
pushf
out
mov
inc
push
in
inc
mov
std
sbb
cmp
mov
cs
cmc
xor
push
pop
or
scas
mov
imul
test
addb
mov
pushf
inc
rcl
add
cmp
repz
mov
cli
imul
dec
push
mov
sahf
frstor
inc
int3
dec
in
jno
pop
insb
mov
or
in
jecxz
movsl
pop
dec
sbb
arpl
loop
jmp
orl
popf
xchg
mov
xchg
mov
dec
dec
lea
ja
scas
dec
sti
or
jnp
xchg
and
fbstp
or
inc
mov
jp
je
pop
or
cmp
fdivl
pop
cmp
pusha
pop
dec
rcrl
mov
dec
push
gs
pop
adc
adc
insl
rcrl
lods
xlat
or
cmpsl
outsl
mov
mov
xchg
and
inc
in
aaa
enter
jae
pop
mov
pop
push
jns
rcrb
test
or
sub
xor
inc
fnsaves
sub
shrl
mov
andl
int
pop
sub
lahf
mov
repnz
shrb
inc
xchg
pop
xchg
jne
test
lret
aam
sti
pusha
jmp
int3
pushf
pop
mov
inc
dec
inc
fwait
rcrb
ret
and
add
jns
push
mov
pop
mov
inc
dec
dec
mov
jnp
bound
fldlg2
out
out
and
inc
sbb
sbb
push
js
push
fidivrl
dec
lea
lock
cli
sbb
insl
push
loop
xchg
jg
push
jo
popa
push
or
push
out
mov
rolb
mov
mov
pop
sub
test
enter
data16
inc
mov
xchg
js
aas
lahf
shrb
add
enter
mov
inc
jnp
stc
mov
dec
push
and
and
pop
insb
lea
jnp
shrl
loope
mov
dec
xor
mov
sti
mov
and
mov
lods
and
ss
into
adc
imul
jmp
and
testb
orl
or
adc
sahf
xor
and
lods
jo
roll
mull
adc
sbb
fldl
cmp
xchg
push
xor
fwait
xchg
xor
int3
xchg
pop
dec
loop
andb
cwtl
xor
insl
push
insb
fdivrl
mov
pop
daa
mov
cmpsl
mov
scas
sbb
sub
or
add
push
jmp
cmp
inc
hlt
mov
pop
or
push
xchg
or
insb
push
push
jnp
pushf
ss
repz
jae
dec
arpl
gs
jo
push
adcb
int3
pop
enter
jns
dec
les
add
jns
add
and
cs
pop
ficompl
adc
xchg
fldcw
jge
pop
cmp
int3
daa
mov
dec
lea
or
mov
movsl
xor
gs
mov
daa
adc
and
shrb
jae
lret
jb
xorl
roll
test
xchg
jge
inc
jmp
setne
or
loop
in
mov
ds
lods
std
inc
mov
and
inc
or
scas
or
fwait
addr16
sub
orl
or
add
pop
push
stos
add
insl
lea
jae
into
inc
bound
or
xor
pushf
pop
icebp
fldl
pop
push
dec
lea
and
mov
pop
mov
andb
xchg
xor
sub
stc
enter
jg
pop
andb
mov
je
fsub
inc
mov
fisubrs
dec
rorb
lds
shll
pop
jns
or
push
es
and
fbstp
push
pushl
bound
add
cmovs
and
mov
push
or
scas
pop
sub
ret
inc
iret
xchg
in
in
aaa
fsubr
repz
addb
fucomip
mov
jns
rcrb
mov
fcmovnbe
pop
mov
or
int3
xchg
das
div
xor
push
cwtl
popf
call
cmc
or
imul
ret
sub
jo
push
jg
adc
mov
xor
ror
arpl
jp
or
sbb
pop
jbe
int
loope
jae
int3
fnclex
outsb
sbb
sbb
or
lock
jnp
shrb
shl
sbb
jae
jle
js
shlb
dec
js
dec
in
mov
scas
cmp
add
mov
repnz
inc
iret
inc
in
insb
add
xchg
ljmp
mov
sahf
call
mov
test
inc
iret
outsl
inc
and
xor
lods
lods
push
fdivr
sub
lock
pop
cmp
add
inc
call
loop
rorl
lea
jno
mov
push
imul
xor
adc
in
or
test
push
sbb
and
ret
mov
jmp
sub
stc
loop
mov
and
aad
dec
aaa
xchg
shr
aad
je
iret
pop
call
int
aam
cmpsl
inc
or
dec
scas
push
in
dec
sahf
xor
icebp
shll
dec
fsub
mov
or
xchg
mov
inc
icebp
repnz
adc
arpl
and
out
stos
mov
lahf
pop
fldenv
ret
adc
lock
sub
pop
arpl
push
or
add
cli
mov
loope
push
mov
adcb
mov
sub
xor
mov
rcr
sbb
or
cltd
daa
or
or
call
and
cmc
les
mov
scas
inc
push
fistl
lahf
mov
lods
test
jne
pop
test
cmp
inc
xrelease
jmp
cbtw
sub
in
pop
and
test
or
mov
hlt
out
push
testl
ds
jne
inc
shrb
data16
add
xor
pop
test
push
xor
jns
mov
sub
cmpsb
xorl
out
mov
pop
mov
test
imul
mov
jo
in
ja
xor
fsubrp
mov
mov
and
into
and
push
fistps
push
aam
out
jg
push
push
stos
in
inc
pop
jne
ds
jae
or
int3
cmpsl
sbb
sbb
cmpsb
sbbl
xchg
out
push
mov
rorb
push
sub
rorl
and
sbb
arpl
ljmp
mov
sbb
jnp
insb
imul
insb
push
dec
xchg
fs
je
jle
mov
or
pop
pop
inc
pop
dec
cmp
mov
inc
ljmp
pushf
and
xor
test
arpl
jno
mov
and
lea
add
push
call
cmp
dec
test
xor
jae
fiadds
sbb
cmp
cmc
mov
jl
inc
push
jns
movntq
pop
adc
or
xlat
repz
aam
lahf
and
dec
lret
or
cmp
push
inc
shll
sub
xchg
inc
in
and
hlt
insl
movsb
or
jl
jae
pop
sub
mov
ljmp
aad
mov
aaa
jae
xchg
sub
and
mov
push
inc
push
xor
icebp
fmull
leave
xor
fidivl
aaa
cmp
pushf
and
mov
xor
movl
sbb
imulw
call
in
inc
enter
ja
lods
and
lods
stc
mov
dec
in
xchg
insb
xor
mov
gs
jge
repz
fsubrl
jle
sub
divl
or
ja
push
subb
push
rep
in
outsl
andl
dec
repnz
push
mov
cmp
mov
jecxz
mov
es
clc
jp
leave
and
jle
xor
mov
add
mov
cmc
js
cwtl
adc
jb
sub
pop
icebp
push
lods
jbe
lahf
xchg
or
jne
and
gs
idivb
andb
xlat
push
iret
jp
push
push
pop
sub
mov
adc
xorb
test
cmc
pop
adc
push
mov
sbb
add
outsl
and
divl
xchg
gs
mov
gs
enter
sbb
stos
daa
xchg
inc
mov
ret
loopne
scas
fwait
test
aaa
mov
or
stc
or
push
push
clc
mov
fimuls
jne
mov
mov
cli
sahf
xchg
pop
mov
xchg
push
fucomp
mov
xchg
pusha
mov
mov
popa
xor
arpl
adc
daa
add
mov
mull
fucom
dec
call
jmp
push
sub
sti
aad
mov
mov
pop
mov
xor
fnstsw
sahf
sub
cli
adc
loopne
fdivl
loopne
sbb
sub
inc
xor
faddl
je
jle
xchg
mov
mov
es
xor
xor
outsb
push
loope
jnp
adc
xor
xorl
mov
popf
xlat
test
lea
jp
dec
clc
popa
aad
push
mov
les
xchg
lds
jl
jo
rorb
lods
repz
outsl
lods
mov
sbb
js
sbb
sti
aam
arpl
and
cmpb
push
pop
bound
and
test
mov
push
mov
xchg
jns
xchg
out
pop
in
faddl
cmp
hlt
jecxz
push
mov
cmp
and
lahf
cs
pop
leave
leave
mov
bound
jg
leave
repnz
fdivr
aad
movsb
daa
push
aad
sahf
nop
and
mov
cwtl
adc
fsubrl
lcall
shlb
and
scas
dec
je
das
jl
pushf
jns
inc
xor
neg
or
inc
insb
xchg
mov
outsb
pop
and
pop
mov
inc
lea
or
xchg
add
and
in
sbb
lods
das
clc
push
xchg
mov
inc
lret
inc
jmp
push
pushf
jo
pop
fisubrl
insb
repz
mov
push
push
cmp
mov
decl
jp
xchg
add
sbb
dec
and
push
scas
les
inc
mov
adc
std
in
lds
jnp
inc
and
push
adc
or
or
ret
lea
sub
adc
sahf
mov
adc
fdivrs
dec
and
inc
arpl
movb
pop
test
mov
clc
adc
sbb
mov
and
xchg
mov
jp
clc
shrb
push
int
dec
lods
sbb
add
adc
push
mov
push
insl
rorl
and
filds
hlt
jp
lds
adc
xchg
pop
ja
jp
icebp
dec
jnp
call
stc
sub
cmp
int
add
xor
subb
stc
das
clc
ret
mov
push
push
fnstcw
mov
mov
lahf
aas
adc
pop
inc
roll
sub
cmc
ja
push
ret
lret
pop
pop
inc
adc
imul
cmp
test
fsubl
or
jp
insl
lret
int
je
jg
sbb
stos
cmp
xchg
mov
jb
lcall
das
enter
icebp
ret
in
fiaddl
dec
mov
cltd
push
inc
out
pop
outsb
xchg
push
and
aad
pop
sbb
inc
test
push
mov
int
mov
or
and
mov
lcall
cmp
mov
sbb
fadd
dec
mov
pop
mov
or
pop
lea
jb
cld
in
xchg
adc
jae
mov
sbb
inc
jp
add
sbb
or
scas
in
les
pop
pop
je
int3
hlt
int
mov
jae
push
loop
push
xor
mov
mov
bound
mov
scas
dec
or
dec
lods
push
les
pop
jbe
fadds
lahf
mov
dec
and
dec
dec
xor
xchg
mov
add
add
mov
push
mov
ja
int
arpl
jns
cltd
jg
mov
popa
lret
shlb
push
sbb
mov
out
movsl
fistpll
insb
xchg
inc
mov
push
or
mov
dec
cmp
fisubl
icebp
pop
mov
fsubrl
cli
adc
ret
hlt
aaa
jmp
jnp
pop
test
movsl
mov
add
inc
mov
fwait
xor
pop
das
inc
dec
xlat
push
xchg
jno
or
in
cmp
sbb
test
and
in
push
push
lahf
and
or
arpl
lret
sbb
or
mov
dec
xchg
je
enter
add
xor
or
cmc
jns
clc
fisubrs
or
pop
mov
mov
stc
adc
or
mov
mov
and
cld
jp
cmp
cmp
or
push
jmp
ja
mov
xlat
mov
hlt
mov
jg
inc
lea
inc
or
ret
pusha
fcomip
loopne
mov
mov
inc
mov
lret
pop
sub
sbb
push
ror
jns
lahf
jp
and
repnz
sbb
adc
adc
mov
pop
mov
popf
mov
das
sbb
out
add
mov
and
adcl
daa
jno
xchg
mov
call
cmpsl
mov
ja
mov
push
clc
mov
insl
pop
mov
mov
adc
jmp
sahf
adc
fs
mov
xor
out
cmpsb
push
ja
fisttps
dec
test
adc
andl
and
mull
sub
popa
clc
js
shll
mov
mov
outsb
inc
mov
xor
aas
lret
and
sub
adc
add
addr16
mov
dec
scas
cmp
ret
and
adc
jbe
cld
in
js
xor
sub
mov
push
test
and
xchg
nop
lock
jne
outsb
mov
in
lea
daa
pop
xchg
testl
pop
sbb
jns
dec
dec
push
xor
lods
lahf
loopne
xchg
repnz
stc
sub
mov
add
sub
dec
leave
jb
sub
inc
lret
je
leave
xor
data16
push
inc
pop
or
cld
out
sub
imul
pop
mov
jno
jne
inc
cwtl
inc
popl
cmp
repz
add
out
xlat
outsb
xchg
xor
pop
cwtl
movsb
xlat
lea
ss
inc
imul
or
bnd
inc
out
int
shrb
adc
adcl
lods
push
add
add
int3
inc
xchg
push
roll
lods
stos
movsl
dec
inc
add
add
out
gs
and
lods
int
pop
popa
cmp
push
stos
cmp
add
add
adc
out
aas
inc
or
xor
add
add
fsubs
aas
jge
sbb
pop
pop
cmp
js
push
cmp
cmp
lods
jmp
add
fsubrs
pop
ljmp
push
mov
push
add
sub
lods
xor
pop
dec
inc
xor
out
lods
mov
mov
outsb
aas
push
fdivr
int3
arpl
cmp
fmuls
jno
ret
lods
add
repnz
fs
sub
stos
pop
aad
in
addr16
inc
scas
xor
fstl
addr16
inc
add
mov
daa
mov
rep
cmp
addr16
cmp
cmp
cmp
mov
cld
lds
pop
or
daa
or
fsubs
cmp
js
push
inc
or
xchg
aam
aas
fdivs
pop
jmp
push
ds
arpl
cmp
add
add
cmc
inc
cmp
mov
lods
lret
aaa
add
add
outsb
sub
dec
jle
sub
lret
in
inc
ds
sbb
inc
push
in
aas
in
rorl
push
mov
cmpsl
lods
aad
cmp
sub
aaa
pop
rcr
scas
outsb
cmp
mov
shrl
xor
dec
xchg
add
inc
cmp
loop
jae
sbb
or
push
out
daa
mov
dec
ds
mov
loop
adc
aam
cmp
lods
mov
jbe
push
aaa
orb
pop
xchg
loopne
or
faddl
adc
lods
shlb
pop
arpl
ret
ret
push
inc
push
xchg
sti
mov
sbb
cmp
fsts
sarl
lcall
cmp
cmp
push
popa
subl
out
mov
stos
movsb
pushf
pushf
adcl
push
inc
pop
inc
add
xchg
je
inc
icebp
inc
lods
jl
and
repnz
les
pop
cmp
stc
lods
mov
cmp
inc
ja
subb
pop
jmp
xchg
cmp
rorb
fdivrp
inc
xchg
mov
addr16
je
and
sbb
xchg
mov
ds
sbb
jns
sbb
mov
fdivrl
mov
imul
cld
xor
arpl
inc
insb
arpl
aad
aad
cmp
cmp
cmp
rcr
mov
push
jae
push
lods
mov
scas
jl
inc
aaa
scas
loop
adc
hlt
push
push
clc
fwait
inc
jnp
pop
ret
cld
sub
and
sub
scas
lods
leave
outsb
inc
cmp
adc
shl
inc
and
fistl
xchg
icebp
fildl
test
jp
in
inc
sub
negl
inc
jne
lea
inc
cmp
adc
lods
inc
xor
sbb
jg
cmp
jb
cmp
xchg
aad
cmp
xchg
testb
subb
and
xchg
push
dec
aaa
push
lods
ret
mov
outsb
sbb
call
inc
sbb
daa
addr16
pop
sub
lods
out
pop
cmp
dec
jecxz
lahf
adc
cmp
lods
mov
inc
cmp
fdivrs
scas
cmp
xor
insb
and
inc
add
add
cmpsb
dec
inc
inc
fsubl
inc
pop
fdivrs
lret
and
xchg
push
fs
fdivrs
aas
rorb
xor
cmp
out
in
aaa
push
sbb
test
sub
or
add
pop
in
bound
fdivrl
xor
cli
inc
enter
mov
mov
das
push
mov
push
xor
fldcw
adc
fcmovne
sbbl
imul
dec
mov
jmp
inc
mov
xchg
push
and
inc
out
sub
xor
xchg
les
pop
cmp
shll
aas
jae
sub
mov
cmp
xchg
or
jae
cmp
aas
xor
sub
xor
out
lods
mov
push
hlt
xor
daa
ret
mov
mov
jle
arpl
out
enter
dec
out
push
lret
dec
mov
lods
sub
hlt
arpl
cmp
add
xor
xor
fwait
mov
xchg
fistpll
mov
aam
push
inc
shrb
xor
lds
cmp
cmp
pop
aad
pop
push
cld
xchg
cmp
roll
bnd
imul
dec
dec
cmp
jg
mov
addr16
xor
lret
out
jo
fldenv
inc
sub
lock
cmp
dec
popf
gs
inc
dec
inc
add
and
inc
add
pop
and
inc
sub
gs
mov
sbb
cmp
cmp
xor
cmp
in
aaa
movsb
xchg
cwtl
dec
ss
arpl
rcr
add
xchg
inc
adc
mov
icebp
inc
push
cmp
or
notl
jo
dec
lods
nop
ds
fisttpll
aam
jle
loopne
jecxz
aad
cmp
sbb
sub
mov
test
inc
mov
push
aas
cmpsl
mov
fsubrs
jp
mov
popf
cmp
pop
cmp
inc
sub
cmp
dec
movsl
fisubrs
adc
or
aas
arpl
add
jmp
mov
out
pop
cmp
cwtl
or
or
outsl
cmp
daa
stos
jmp
rol
pop
test
sbb
push
test
inc
clc
sub
adc
mov
stos
lea
aas
sub
shrb
cmp
push
fwait
cmc
and
lods
outsl
cmp
push
jl
popa
adc
push
sbb
pop
pop
ss
lods
movsb
in
add
pop
push
xor
aad
outsb
inc
and
inc
pop
bound
daa
mov
into
out
dec
fldcw
rclb
movsl
leave
or
xchg
fs
pop
cmp
clc
mov
pop
addr16
sbb
call
gs
and
inc
push
loop
and
mov
addr16
inc
adc
sbb
in
inc
push
xchg
adc
in
sbbl
lret
out
dec
cmp
push
push
mov
cmp
add
sub
leave
adc
cmp
xchg
mov
pop
cmp
in
inc
cmp
xor
lods
mov
mov
hlt
push
inc
jl
cmpl
aas
test
mov
es
and
lret
fmuls
cmp
dec
lods
xor
jnp
in
aaa
xchg
mov
jge
push
clc
ja
adc
test
fwait
pop
sub
pop
int3
jne
fnstcw
lahf
inc
aad
xor
aam
jp
xor
cmp
js
repnz
pop
cmc
loope
xchg
in
xor
lods
sub
in
push
jge
popa
and
clc
cmp
mov
addr16
inc
push
daa
sahf
out
mov
inc
jmp
mov
dec
aas
in
xchg
cmp
jns
pop
cmp
call
fistl
and
adc
xchg
cmp
xor
cmp
loop
mov
inc
test
gs
pop
jecxz
aad
aas
jns
and
mov
cmp
rcr
pop
lahf
in
in
outsb
mov
xor
inc
cmp
roll
lret
leave
add
lods
imul
jb
addl
fldcw
inc
pop
inc
in
movsb
cs
adc
xor
cmp
lea
cmp
jg
or
and
dec
aaa
mov
rcrl
sub
mov
ja
mov
add
jge
ret
mov
sbb
insb
sub
aad
xchg
cmp
add
add
pop
cld
aaa
pushf
ficomps
xor
dec
mov
aam
cltd
filds
inc
inc
ljmp
inc
cmp
cs
int3
xchg
mov
aas
cmpsl
jae
popa
cmp
inc
dec
adc
pop
scas
ficomps
pop
sbb
flds
xor
inc
in
xor
ljmp
push
ds
in
cmp
nop
cmp
outsb
push
mov
cmp
sbbl
jle
sbb
lds
push
add
movsl
jae
inc
mov
inc
xchg
xchg
adc
and
cmp
push
and
add
out
movb
cltd
sbb
dec
out
in
xchg
das
sub
loop
add
inc
mov
jae
adcb
or
inc
jbe
mov
fisubrs
adc
outsb
mov
cs
jne
arpl
dec
cmp
adc
mov
mov
cmp
shll
imull
adc
push
inc
shl
lahf
in
cmp
out
lea
dec
jne
push
sbb
fcomip
pop
aaa
addr16
ljmp
popa
dec
out
sbb
addr16
daa
shr
inc
mov
sbb
data16
xor
aam
fcompl
cmp
arpl
pop
xor
cmp
mov
lret
cmp
ljmp
inc
push
aad
jno
sub
xchg
fs
lahf
je
xor
sbb
xor
lret
pop
and
xchg
add
xor
pusha
mov
cltd
xlat
subl
dec
dec
loop
enter
das
adc
movsb
rcrb
sbb
int3
jecxz
iret
roll
mov
imul
inc
or
push
inc
cmp
mov
and
loopne
push
cmp
pop
fsubrs
cmp
cmp
xchg
outsb
push
cmp
aaa
jl
sahf
inc
cld
pop
repnz
in
pop
inc
fidivrs
fmuls
xlat
jbe
mov
pop
aas
into
push
ss
push
cmp
daa
popf
in
loop
pop
mov
pop
sub
push
out
cmp
push
ss
cmp
cmp
inc
mov
gs
sub
imul
inc
sub
negb
pop
pusha
xchg
dec
pop
adc
in
push
mov
sbb
fdivrs
adc
lods
cmp
test
cmp
cmp
dec
jecxz
bound
mov
pop
inc
sbb
inc
in
xor
movsl
dec
inc
fstpl
aas
add
jbe
cld
movsl
or
fsubr
pop
test
xchg
push
fsubrl
ss
pop
ficomps
fnsave
inc
sub
fsubl
or
mov
lods
in
inc
outsb
je
dec
ds
aam
movsl
cmp
xchg
lods
lea
cmp
push
cmp
cmp
xor
inc
cmp
xchg
push
ficomps
inc
lock
lcall
out
mov
dec
mov
pop
pop
ds
repz
out
mov
sbb
cli
xchg
xchg
mov
cmp
int
xchg
pop
sub
ss
stc
rcll
mov
mov
xor
xor
fwait
push
or
cmp
lcall
aas
scas
mov
bound
push
daa
mov
fidivrs
dec
ret
push
jbe
out
push
cli
push
lret
cmc
sub
aaa
lods
jae
fs
adc
cmp
pop
out
mov
jnp
mov
lea
jne
test
mov
add
repz
jecxz
rorl
cmp
push
pop
cmp
call
outsb
adc
test
ss
inc
pop
cltd
adc
lds
inc
mov
loop
in
andl
jb
inc
adc
in
aad
aas
mov
popf
cmp
jge
xor
rcl
cmp
mov
mov
aad
cmp
dec
or
mov
fiaddl
out
pop
inc
adc
lods
and
push
out
pop
push
ds
and
or
iret
shrb
loopne
mov
loop
clc
push
aad
in
mov
inc
scas
lods
out
pop
ficoml
test
leave
pop
aas
mov
fsts
dec
in
imul
out
xorb
cmp
lods
pop
clc
adc
ss
lock
insl
xor
pusha
inc
ljmp
inc
dec
inc
sub
je
inc
icebp
aas
push
movsb
mov
fwait
test
stc
loop
outsb
cmpsl
cmp
push
aam
pop
cmpb
pop
sbb
out
dec
inc
sub
mov
cmp
inc
in
fs
push
cmp
movsl
push
cmp
and
dec
mov
xchg
aaa
inc
stos
adc
ret
mov
loop
adc
inc
fcoms
or
int
lods
push
stc
pop
addr16
daa
dec
cmp
and
cmp
ja
das
aad
cmp
and
jo
lock
pop
aaa
push
lret
int
mov
inc
xor
xchg
fstpt
and
inc
addr16
jle
push
inc
cwtl
aas
inc
pop
fsubl
rolb
ss
cmp
out
mov
adc
cmp
lods
dec
cmp
mov
cmp
or
test
hlt
ret
clc
xchg
test
mov
lock
ja
pop
add
aad
sbb
inc
add
out
jb
loope
test
out
in
sub
lret
jb
sub
add
popf
aad
cmp
fisttpl
pop
aaa
cwtl
fucom
roll
inc
inc
inc
pop
inc
mov
or
aas
icebp
xor
pushf
adcl
mov
cmp
cltd
mov
mov
pop
cmp
jecxz
rorl
inc
ss
pop
insl
xor
inc
xchg
lods
xor
ret
lock
repnz
aaa
and
mov
add
jge
xor
outsb
mov
sbb
mov
cmp
cmp
mov
repz
in
gs
jns
inc
rcr
jno
inc
movl
push
or
in
dec
jge
xlat
cmp
add
sub
hlt
pop
je
xchg
hlt
gs
push
xor
pop
repz
adc
ret
lahf
and
pop
in
push
movsl
mov
ds
xchg
js
mov
and
sub
sub
aaa
jae
xor
in
xor
stos
arpl
popf
jge
xchg
mov
inc
xchg
aas
add
lods
pop
les
aad
cmp
xchg
jns
in
and
cmp
push
cmp
add
and
call
xchg
bound
mov
inc
bound
out
and
mov
xor
mov
and
xchg
repnz
push
sbb
je
cmp
lods
jle
sbb
ss
in
fs
sub
add
xchg
cld
push
leave
inc
lods
inc
and
lods
daa
fwait
hlt
mov
xor
sbb
in
jae
cmp
sar
pop
lds
mov
push
iret
movsl
ret
loopne
adc
inc
push
sbb
lock
bound
adc
inc
ljmp
inc
in
loop
movsl
testb
bound
aas
and
ret
cmpsb
ret
dec
stc
leave
testl
loop
les
xlat
push
dec
cmp
out
sub
add
inc
add
sbb
jo
pop
out
push
inc
fcomps
loop
dec
add
jno
mov
movsl
sub
xchg
insl
adc
outsb
mov
dec
jmp
imul
hlt
pop
pushf
in
inc
insb
rorl
xor
xchg
inc
call
pop
addr16
ds
daa
sub
sahf
mov
cmp
nop
cmp
ret
pop
pop
inc
cmp
fdivrs
aaa
cmp
int
loopne
mov
jecxz
jno
inc
sub
arpl
adc
fdivrs
add
aas
pop
sbb
rcll
inc
cmp
lods
sahf
movsb
ja
fidivrl
push
shrb
rcll
in
repz
popf
add
jp
sti
pop
push
addr16
insl
inc
push
loope
movsl
add
mov
cltd
jle,pt
aas
mov
aam
jge
pop
cmp
adc
rolb
sub
repnz
aad
mov
xchg
out
jge
in
inc
mul
dec
or
mov
mov
inc
hlt
jecxz
rcll
stos
test
add
push
push
aas
cld
lods
lea
fidivs
cs
cmp
lock
loopne
lahf
divb
jge
fildl
mov
ret
fsubl
push
in
inc
mov
or
push
addr16
mov
loop
adc
aas
add
sahf
fimuls
int3
mov
in
cmp
inc
dec
out
push
pop
dec
xor
inc
jecxz
sarb
pop
in
mov
clc
sbb
aaa
cmp
cmp
push
ljmp
jo
rcll
fcomps
sub
hlt
mov
sub
loop
mov
repz
lock
add
adc
inc
loop
sub
add
add
add
jno
cmp
cmp
mov
dec
xchg
outsb
jns
fnsave
daa
xor
ss
test
leave
dec
push
adc
push
inc
sbb
in
lods
test
leave
cmp
sub
cmp
sbb
ds
pop
xor
out
pop
cmp
push
xchg
cmp
lock
mov
push
hlt
push
inc
push
and
addr16
inc
shrb
cmc
adc
cmp
adc
and
dec
js
xchg
mov
fwait
movsb
xchg
pushf
pop
add
lods
idivl
add
repnz
jle
lea
in
cmp
xchg
adc
cmp
and
jmp
call
xor
aad
add
pop
imul
and
ffreep
sub
and
mov
push
je
pop
cmp
pop
and
leave
lock
dec
mov
lock
loope
dec
loopne
test
pop
inc
mov
xchg
add
in
rcl
shll
call
out
adc
movsb
push
dec
inc
fildll
andl
mov
in
mov
insb
cmp
cli
insb
push
aaa
fisubl
bound
inc
mov
aaa
dec
test
jbe
cmp
dec
pop
arpl
adc
sub
mov
lds
sub
hlt
sub
mov
imul
push
icebp
xchg
cli
mov
arpl
jo
in
sub
sub
fisubs
and
pop
sbb
sti
push
inc
mov
roll
cmp
and
sbb
pop
mov
imulb
sub
movsl
sub
pop
cs
fucomp
push
inc
in
dec
out
or
push
sbb
cs
dec
jo
je
xchg
mov
imul
and
dec
test
dec
lds
aaa
es
push
clc
adc
xchg
adc
mov
pop
inc
or
addr16
daa
and
adc
aam
adc
mov
add
mov
shr
pop
dec
push
sbb
hlt
push
mov
sbb
sub
lods
lods
xchg
in
lock
inc
sub
push
adc
lods
dec
inc
add
bound
inc
sub
cmp
add
add
test
fadds
cmp
stos
mov
repnz
jbe
inc
dec
aaa
and
or
les
pop
push
loopne
daa
fidivs
test
outsl
inc
push
xchg
popf
mov
push
adc
aam
movsl
or
fwait
pop
cmp
pushf
cmp
aaa
cs
mov
inc
hlt
xor
lds
mov
arpl
daa
xchg
repnz
inc
dec
xchg
shll
and
mov
xor
icebp
cmp
cmp
cmp
shlb
lock
arpl
pop
cmp
pushf
push
fdivp
inc
mov
jecxz
inc
aas
aaa
sti
cmp
repz
cli
loop
pop
pop
in
sbb
out
add
dec
jmp
xor
lods
arpl
addr16
outsl
inc
gs
shlb
xchg
jmp
cli
push
out
pop
or
fcmovnu
mov
xor
cmp
fucomi
bound
test
lock
push
mov
push
in
dec
inc
lds
mov
cmp
daa
fucomp
gs
in
aas
mov
movl
add
lcall
pushf
in
cmp
or
lret
and
orl
nop
adc
push
adc
lea
mov
arpl
shll
adc
lock
test
or
insl
xor
sub
xchg
sbb
jecxz
shrl
push
data16
pusha
fistl
in
imul
xchg
lea
mov
add
add
iret
arpl
xchg
xchg
push
in
fsub
lea
out
inc
ja
cmc
cmp
pop
outsl
cmp
adc
cmp
daa
mov
add
lds
sub
mov
mov
inc
shlb
repnz
inc
xor
mov
inc
lret
push
mov
mov
in
inc
jb
pop
cmp
jecxz
shll
cmpb
xor
adc
outsl
xor
ret
lods
pop
aaa
sbb
hlt
cmp
ss
jl
push
in
xor
out
cmp
inc
push
out
xchg
xchg
sub
aas
movsb
inc
sub
outsb
imul
arpl
pop
cmp
mov
add
mov
sub
push
icebp
xchg
mov
xlat
lds
pop
fs
push
fcom
jo
inc
xor
leave
je
cmp
mov
sub
fidivs
cmp
leave
lret
dec
xor
repz
in
outsb
push
push
test
pop
cmp
clc
sbb
cmp
inc
loopne
or
mov
cltd
in
cmp
xchg
movsb
lea
cmp
mov
adc
cmc
cmp
movsb
mov
pop
cmp
inc
pop
iret
fbld
fdivl
arpl
xchg
fldt
loopne
cmpsb
mov
test
daa
cli
mov
mov
and
add
je
cmp
push
ss
inc
in
inc
pop
pop
inc
sub
push
je
inc
or
lods
jge
push
sbb
cmpl
and
push
incb
jecxz
ret
cmpsl
rcrl
fdivs
cmp
push
cmp
push
addr16
mov
rcr
push
sar
rol
jmp
cmp
push
lea
ja
push
clc
imul
movb
bt
add
pushf
movb
lea
jmp
xchg
and
int3
lea
fbstp
mov
out
fimuls
mov
lock
and
mov
mov
cmp
mov
pop
xchg
dec
sub
ret
adc
std
mov
inc
loop
cmpsb
pusha
shlb
and
imul
jmp
clc
jmp
outsl
jb
mov
inc
push
cli
shlb
enter
mov
scas
push
jmp
add
sbb
movsl
jo
sbb
scas
adcb
sbb
xchg
ret
loope
sub
pop
out
ja
and
lods
and
xchg
movsl
inc
imull
mov
mov
rclb
inc
jmp
imul
pop
add
jge
loope
sub
cs
jp
inc
or
dec
mov
xor
adc
iret
lock
test
test
loopne
or
stos
adcl
cmpb
add
mov
inc
add
bts
shld
mov
cmc
pusha
test
pushf
pushf
lea
je
rcl
btr
add
shl
dec
neg
adc
mov
pushf
add
test
mov
movb
stc
mov
add
stc
mov
pushl
call
pusha
lea
call
call
jmp
stc
call
cld
test
and
les
enter
subb
stos
icebp
imul
adc
shll
inc
cmpl
dec
push
aad
repz
adc
and
clc
sub
sahf
hlt
dec
shr
loop
mov
mov
pop
aaa
adc
mov
pop
xor
aas
lcall
lcall
aas
adc
mov
dec
xchg
pop
lock
mulb
mov
jo
mov
cmp
repnz
pop
lock
or
pop
adc
arpl
push
inc
aaa
sbb
cmc
lods
fimull
sbb
or
out
xor
mov
mov
sbb
push
cmpsb
int3
adc
jp
es
ret
inc
sbb
and
fistpll
sbb
int3
and
push
fsubs
jle
and
into
xlat
jno
push
mov
cmp
setg
test
mov
sbb
add
sbb
fcoml
pop
repnz
xchg
not
out
fs
lcall
call
add
jl
xchg
mov
add
bnd
fisubrs
int3
cmpsl
hlt
inc
orl
sbb
mov
aam
xchg
jnp
xchg
fbstp
cs
je
push
add
cwtl
fs
enter
mov
dec
sbb
lcall
ss
mov
out
psrad
push
push
leave
inc
inc
jb
in
push
inc
js
into
xor
push
inc
cmp
inc
xchg
mov
out
push
out
fildl
xor
or
mov
ljmp
mov
fisubs
add
into
or
sub
mov
inc
push
loop
xchg
sub
and
or
cmp
jecxz
js
cs
mov
enter
cmc
mov
lds
mov
xchg
inc
loope
or
jo
mov
mov
mov
add
or
aas
lock
roll
popa
fucomp
lods
jge
xor
pop
or
ds
pop
and
dec
lods
scas
jo
mov
sbbb
sub
fdivrl
push
mov
push
sbb
mov
pop
das
add
ret
cmp
cmp
xlat
lret
adc
out
sbbb
mov
dec
fstps
daa
nop
rcr
add
shll
cmpsb
aaa
pusha
inc
fwait
dec
jnp
mov
nop
psrld
fwait
mov
adc
loop
loop
sub
push
sbb
vpaddsw
jnp
and
and
xchg
insl
inc
adc
test
bnd
pop
imul
inc
call
movl
call
into
cmp
cs
mov
cwtl
insl
cmp
and
mov
out
jno
repnz
aas
iret
push
loop
jbe
jns
add
out
lods
loope
add
mov
adc
xor
xchg
xchg
cmpsl
movsl
mov
movsb
or
or
jo
mov
xchg
jb
mov
test
fsubrl
mov
ljmp
pop
test
jl
add
sti
rcr
mov
bt
stc
bt
cmpb
jmp
dec
xlat
loopne
cs
dec
sbbb
enter
sbb
and
xor
scas
add
dec
pop
aam
es
fsubrs
pop
lcall
jge
out
pop
sub
shrl
rcll
pop
pop
pushw
xor
add
dec
or
and
add
xchg
pop
xor
rcrb
dec
imul
nop
fists
int3
cs
scas
loopne
mov
adc
out
loope
pushw
xor
add
dec
iret
xchg
rcll
xor
shrl
mov
and
xlat
mov
cmpsl
icebp
jns
inc
scas
xchg
add
std
or
cmp
mov
push
movsl
clc
xor
pop
pop
cmpsl
jnp
out
mov
mov
bswap
shll
jmp
xlat
sbb
movsb
loop
pop
xchg
subl
adc
fucomi
call
add
push
dec
xchg
fildll
dec
es
shlb
das
test
fcmovb
inc
and
jl
fs
call
call
and
sbb
test
shlb
lods
fmull
ret
cld
ljmp
mov
leave
and
sub
dec
dec
int3
mov
push
inc
incl
sub
out
stos
enter
xor
bound
cmp
cmp
idivb
insb
xor
dec
nop
sbb
scas
or
es
pop
or
add
lea
jp
leave
jns
sub
fidivrl
stc
xchg
mov
inc
adc
mov
ror
cmp
jns
cltd
iret
cs
mov
xlat
mov
push
cs
lcall
cmp
comiss
jno
arpl
xor
xchg
jp
imul
push
lock
inc
repnz
mov
sbb
add
js
popf
mov
lcall
add
and
inc
pop
or
nop
mov
dec
adc
adc
mov
pop
lret
fimull
or
loope
clc
nop
pop
sub
ret
xor
enter
je
insl
fdivs
xchg
and
roll
aam
or
mov
inc
xor
leave
push
scas
mov
inc
sbb
clc
push
jo
popf
fcoms
pop
in
and
push
cs
sbb
push
sbb
mov
push
adc
test
pop
xor
loope
in
and
cwtl
pusha
pushf
lea
jbe
jae
jmp
cmp
add
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
mov
pushf
pushf
pushf
pushl
ret
sub
inc
add
setge
mov
mov
cmc
shr
pusha
mov
cmc
pushf
bt
test
repnz
push
lea
jae
jne
movzbl
pusha
movb
setae
jmp
int
insl
shrl
int3
mov
inc
sbb
mov
fsubs
cmc
push
cmp
push
jge
push
xor
in
sar
sub
dec
mov
push
int3
cli
jo
lock
push
inc
mov
arpl
xor
aas
jg
pop
cld
xor
pop
xchg
icebp
adc
xchg
push
xor
add
and
je
adc
and
inc
fldt
out
mov
shrb
mov
arpl
or
shrb
lahf
fs
xor
lea
ja
pusha
jmp
das
sahf
mov
cs
clc
sub
mov
jb
jo
testl
and
fsubs
or
mov
push
and
dec
aas
repnz
insb
mov
dec
fcomps
cmp
push
outsb
jg
adc
shl
repnz
pop
and
lds
leave
pop
in
mov
into
pop
shrb
int3
mov
mov
pop
sub
int3
push
fbstp
lock
in
and
push
lret
and
sbb
je
insl
int
hlt
adc
xchg
mov
cmp
hlt
xor
sub
int3
mov
sbb
lret
outsb
jmp
mov
jp
fsubs
hlt
add
ss
or
cmp
aas
adc
mov
pop
push
xchg
sub
or
lock
sbb
lea
jae
cmc
xor
jmp
cmp
lea
lea
not
call
sbb
xlat
shrb
int3
adc
lock
pop
sub
aas
adc
inc
lock
jp
lods
das
cmc
and
pop
or
jns
adc
addr16
pop
sbb
and
addr16
ret
xor
mov
movsb
dec
add
imul
jmp
pop
aas
or
shl
shld
ffree
inc
es
ds
fcoml
int3
imul
dec
jmp
pop
sub
into
popf
outsb
dec
sbb
ret
mov
sahf
push
mov
mov
shrl
int3
push
fs
data16
push
das
cli
inc
mov
jnp
dec
cli
inc
lret
outsb
cmp
test
addr16
fsubs
out
mov
lock
push
xor
mov
push
in
inc
dec
push
cs
add
mov
out
pop
in
cmp
jmp
in
mov
sbb
dec
mov
mov
adc
iret
negb
adc
inc
cli
es
cmp
dec
imul
xchg
fwait
add
loopne
dec
add
sti
xor
sbbb
and
roll
cmpsl
mov
repz
mov
loopne
push
pop
sbb
sti
mov
cmpsb
jmp
sbb
js
xchg
mov
rol
mov
std
push
mov
icebp
cltd
mov
push
fsubs
cmc
lea
adc
mov
pop
cmp
cmpsb
cli
imul
mov
cs
xorb
xchg
repz
lahf
jae
enter
inc
sub
movsl
fdivrs
stc
lods
xlat
sahf
jmp
aam
and
jmp
sbbb
lock
test
lods
or
push
or
out
and
push
sbb
cld
jecxz
inc
jns
lahf
adc
pop
mov
or
shl
imul
popf
lods
iret
sahf
nop
and
xlat
inc
mov
arpl
dec
daa
xor
sbb
add
aaa
push
lock
aam
insb
cmp
inc
sbb
scas
fdiv
adc
repnz
adcl
clc
sbb
xor
in
movsb
out
movsl
rcll
cli
mov
adc
and
addr16
pop
fidivrs
push
push
mov
and
daa
push
loope
sub
adc
mov
in
ja
adc
inc
addl
pop
loop
sti
push
xchg
sbb
and
lret
movsl
js
adc
arpl
or
add
pop
fsub
aad
int3
inc
jae
or
mov
cmpsl
jge
js
repnz
or
clc
xor
out
dec
push
aas
cmc
mov
enter
fcomps
push
std
pop
mov
mov
popa
add
mov
scas
or
outsb
mov
dec
jns
jnp
mov
fadds
insl
lret
ret
loopne
cs
inc
hlt
sbb
frstor
stos
int3
pop
jno
dec
sbb
scas
jge
pushf
fs
into
mov
mov
test
lcall
jmp
leave
pop
arpl
cs
idivb
into
lcall
aam
xchg
repz
cmc
jle
mov
scas
xor
insb
cmpsl
pop
jno
xchg
andl
add
seto
pop
and
out
pop
insb
mov
fdivr
sub
or
and
xor
es
cwtl
or
sbb
push
lahf
clc
or
inc
pop
in
xchg
mov
dec
adc
mov
dec
sbb
pandn
aaa
nop
stc
call
inc
int
cs
sbb
es
int
jbe
and
mov
dec
adc
enter
xchg
jnp
es
xor
cmp
adcb
jp
addr16
rorl
imul
adc
mov
push
add
fldt
shll
imull
push
loop,pt
inc
xchg
mov
outsb
mov
mov
fildll
sbb
add
pusha
es
and
mov
loopne
xchg
mov
mov
stc
incl
add
adc
sti
stc
mov
stc
and
xor
clc
sub
movzbw
rcl
cmc
jmp
push
jmp
call
mov
lea
ja
inc
jmp
popa
into
rcl
int3
sub
in
mov
lret
xchg
xor
sub
in
inc
jbe
mov
enter
nop
data16
xchg
adc
in
xchg
mov
push
cmp
mov
jp
jns
push
fcmovnu
mov
fcmove
or
adc
sub
mov
mov
outsb
cmpsl
insl
in
mov
lock
pop
mov
dec
cwtl
pop
fwait
pop
mov
push
stos
mov
sub
aam
das
pop
adcb
pop
and
mov
cmc
icebp
enter
or
cmc
pusha
cmp
mov
jmp
mov
int3
nop
lds
lret
mov
lods
push
fwait
mov
bound
dec
xchg
mov
or
xchg
jp
xchg
enter
xor
call
and
cmpsb
lods
loop
jp
mov
popa
aam
mov
sbb
mov
es
sahf
sub
in
sahf
xchg
repz
dec
sbb
inc
pop
call
test
loop
push
sbb
cmp
repz
enter
sbb
mov
pop
aaa
pop
dec
cmc
ds
pop
pop
xor
sahf
push
scas
mov
out
and
ds
clc
mov
xchg
das
inc
icebp
sub
pop
ror
add
lods
sahf
push
adc
loopne
movb
mov
ds
shll
inc
push
xchg
mov
or
inc
xchg
inc
insl
std
loope
cwtl
xor
mov
mov
rcrl
cmpsb
adcl
in
fdivl
call
test
int3
mov
mov
ljmp
pop
subb
scas
frstor
loopne
mov
out
cmp
fidivrl
xchg
pop
mov
out
les
mov
xlat
movsl
jns
adc
mov
pop
dec
mov
xchg
and
push
push
leave
rcr
int3
sub
dec
lahf
je
sbb
mov
fimuls
dec
sbb
shlb
mov
cli
lret
inc
mov
add
inc
jbe
repnz
cmp
imul
in
movsb
ja
cli
jp
jb
mov
cwtl
ds
and
negl
loope
sbb
insl
jmp
cmp
lret
mov
jbe
inc
iret
fs
popf
je
adc
scas
test
clc
enter
xchg
stc
fs
int3
mov
rcll
xor
scas
lret
push
mov
push
gs
subl
test
push
push
shlb
cltd
cwtl
sbb
call
rorb
sbb
adc
xor
sbb
mov
jl
sub
lds
fiaddl
icebp
jne
push
call
test
add
pushf
pusha
pushf
lea
jmp
call
sub
cmc
and
ret
xchg
popa
cmp
adc
and
pop
out
fs
add
aad
mov
mov
nop
cmp
sahf
out
jecxz
enter
mov
adc
inc
and
mov
into
mov
in
inc
cmpsb
repnz
ret
int
push
fldt
int3
xchg
rcll
xchg
stc
les
insb
sbb
push
mov
adc
nop
mov
xor
cs
add
mov
std
mov
pop
mov
add
pop
mov
xor
repnz
aaa
xchg
pop
mov
lock
inc
cwtl
cmpsl
enter
cmp
xlat
sbb
cs
lods
jp
and
aad
jp
bound
add
in
movsl
rcrl
loopne
lea
call
pusha
jmp
jle
test
bt
cmp
push
pusha
pusha
lea
jae
rcr
mov
btr
shr
shl
clc
mov
bswap
mov
pushf
sub
clc
pushf
clc
repnz
call
idivl
fldt
int3
icebp
and
into
stos
jl
adc
lds
inc
call
in
lret
cmp
ret
icebp
sub
fwait
sbb
nop
ret
mov
pop
inc
jb
repnz
sub
cmp
inc
jg
push
movsl
sbb
adc
loopne
ret
cmp
aas
adc
sbb
out
pushw
or
out
xor
ljmp
aaa
sbb
arpl
lea
fbstp
aam
sbb
and
scas
jle
cmp
pushl
call
pusha
clc
movb
add
push
bt
movb
cmp
lea
jb
pusha
lea
jb
pusha
cmp
call
es
aam
cs
adc
orl
dec
sbb
pusha
jmp
outsl
dec
daa
flds
fldt
xchg
in
mov
jo
lods
inc
add
movsb
xlat
or
fcompl
jo
xor
sbb
dec
roll
jl
cmp
cld
inc
or
pop
mov
lods
push
jae
ret
aaa
adc
repz
pop
lock
lcall
jb
xchg
or
inc
out
pushf
or
dec
int3
mov
sbb
sub
shrl
ljmp
cmpsl
or
sarl
sbb
dec
or
rclb
xlat
ljmp
aad
xor
cld
jno
orl
xor
jecxz
test
mov
xchg
loopne
add
leave
push
jmp
dec
ret
lret
int3
pop
push
cs
popf
jb
sbb
sbb
dec
in
ljmp
push
push
mov
ja
nop
cmpsl
lcall
mov
loope
mov
cmp
es
add
adc
movb
xor
push
test
adc
fists
lods
lds
lods
lret
jmp
adc
push
je
addl
loopne
test
clc
lds
movsb
scas
rcl
add
mov
lea
je
call
stos
sub
xchg
xchg
push
lods
stos
lret
out
outsl
das
je
das
cmp
and
test
push
sar
lock
fdivs
cmp
cli
adc
and
mov
lret
fs
sub
sub
into
adc
mov
aas
xor
clc
jp
ljmp
pushf
rol
enter
and
ret
or
push
les
enter
inc
lret
jmp
xor
ss
and
in
xchg
div
jl
cmovg
push
stc
and
repz
cmpsl
sub
sbb
xor
call
test
cmp
jmp
mov
sbb
sti
leave
xchg
pop
sub
or
adc
popf
in
jns
cs
mov
cmpsb
ja
pand
jle,pt
push
out
in
xlat
push
outsl
sahf
sbb
shlb
push
and
rorb
mov
inc
adc
sahf
out
mov
lods
cmc
xchg
cwtl
mov
xchg
add
sbb
xchg
mov
mov
xchg
leave
jmp
int
out
mov
pop
xchg
insl
les
std
ds
push
aaa
jne
dec
cmp
sbb
pop
lods
jge
push
sbb
inc
mov
mov
and
out
cs
xor
sub
mov
mov
cwtl
jb
fstl
lock
xchg
out
xor
mov
xchg
sub
sbb
pop
out
cmp
ja
cltd
ret
mov
push
rolb
push
in
in
add
sbb
ljmp
jno
or
test
cmp
xor
ret
xchg
fs
or
mov
mov
mov
push
sub
cs
cwtl
shrl
mov
in
jmp
in
pusha
pop
inc
jge
cmp
out
cmp
imul
nop
pop
push
cmp
adc
ljmp
daa
iret
in
mov
ret
adc
les
mov
mov
jl
ljmp
or
push
in
mov
xchg
xor
out
inc
jae
pop
aaa
movsb
push
repz
bound
mov
cltd
sahf
jge
das
dec
sbb
sbb
lods
mov
shrb
mov
test
push
adc
lret
stos
sub
pop
das
stc
inc
xlat
pop
pop
pop
mov
mov
cmpsl
push
test
and
push
sbb
enter
mov
xor
movb
call
stc
mov
repz
stos
jp
and
cmp
push
ss
jbe
add
pop
xlat
push
nop
test
cmp
pop
xor
dec
add
cmp
mov
xchg
arpl
mov
mov
cmpsb
vpunpckhbw
pop
rolb
lods
jo
jecxz
out
mov
or
adc
ss
jmp
jp
mov
imul
fidivl
and
int3
ss
les
mov
aas
inc
imulb
inc
push
add
jmp
xor
sbb
sub
mov
sub
mov
movsl
fcmovbe
push
stos
lds
pop
mov
push
jbe
jle
inc
ljmp
daa
sbb
and
or
pop
ss
cmpsb
sbbl
ret
xor
cmpsb
push
or
mov
test
add
pushf
cmp
jmp
push
test
clc
bsf
mov
pusha
call
bt
shr
pusha
test
cmp
movb
pusha
call
test
call
movl
xlat
lods
jns
adc
mov
fisubs
aas
test
ja,pt
lret
pop
inc
nop
inc
jle
pop
iret
pop
jno
push
xchg
cmp
mov
cli
jo
dec
mov
jbe
sub
jo
fisttpll
dec
es
mov
mov
loope
jp
out
pushl
nop
mul
out
popa
movsb
sbb
xor
wrmsr
outsb
movsl
adc
das
add
scas
jg
adc
mov
hlt
inc
mov
adcl
push
push
dec
dec
dec
cs
push
push
add
xchg
mov
sub
fidivl
xchg
data16
out
inc
stc
daa
or
stc
inc
cmp
repnz
lock
repnz
and
lcall
cmp
mov
add
cmp
sbb
ljmp
push
cmpsl
aad
rcrl
xchg
aas
inc
push
jo
fwait
or
dec
sub
add
addr16
aad
out
mov
outsl
mov
aad
jg
es
iret
fistpl
test
push
xchg
mov
and
int3
fs
fmuls
mov
and
sub
mov
push
push
lcall
addr16
out
punpcklbw
dec
xchg
sahf
shlb
fdivs
test
enter
cwtl
ja
push
pop
sub
addr16
inc
adc
into
ds
dec
imul
mov
xor
out
in
leave
push
xchg
lods
xchg
out
js
add
and
iret
sbb
mov
add
xchg
jb
pop
aas
inc
gs
adc
cli
dec
fcmovne
cmc
inc
pop
mov
dec
sbb
pop
movsl
insb
push
mov
pop
sti
inc
stos
xor
mov
shlb
arpl
jo
btr
mov
jb
out
sub
and
shlb
in
inc
xor
inc
outsb
cli
dec
jg
mov
cmpsl
inc
stos
dec
sbb
out
mov
iret
movsl
jno
add
movsb
jl
sub
mov
scas
out
or
lea
jne
jmp
lea
jb
cmp
cmp
push
lea
jae
rol
shr
mov
pushf
bswap
movsbw
sar
mov
rcl
rcl
mov
cmc
jmp
bt
pushf
cmp
call
das
movsb
mov
cs
repnz
in
mov
int
jge
xor
push
out
jg
cmp
adc
repz
push
xlat
cmpps
pop
test
gs
loope
jecxz
xor
insl
or
push
lahf
imul
and
jge
rolb
jmp
ljmp
gs
pop
xchg
fiadds
push
fdivrp
test
outsb
inc
sbb
mov
inc
adc
mov
jns
push
jmp
and
inc
call
push
call
xchg
sbb
subl
popf
imul
pusha
inc
inc
mov
nop
jb
stos
adc
iret
outsb
inc
xchg
mov
xchg
pop
outsl
sbb
out
in
enter
ss
dec
add
or
dec
mov
inc
jne
in
push
daa
scas
icebp
add
out
cmp
nop
push
loopne
or
mov
push
ljmp
cmpsb
js
mov
xor
mov
sbb
or
xchg
addr16
pop
sub
dec
mov
inc
xor
mov
mov
pop
pop
pop
movsl
mov
cltd
adc
rclb
jae
outsb
movsb
sbb
pop
sub
cmp
xor
add
pop
xchg
adc
pop
dec
into
jl
std
mov
ja
ret
cmp
pop
rcr
insb
sub
xor
aas
mov
mov
aas
sbb
and
std
lea
push
or
mov
add
cmc
stc
stc
cmc
test
call
orl
je
outsb
inc
push
test
xlat
movsl
push
and
inc
imulb
in
sub
sti
dec
cmp
mov
mov
push
sub
jnp
xchg
frstor
lahf
inc
fsts
adcl
pop
sub
fsubr
divb
cmp
pushl
xor
cmp
pusha
call
pushf
pushf
movl
pusha
mov
pushf
pushf
pushf
push
pushl
ret
arpl
fs
xor
cs
insb
add
jbe
and
int3
call
pop
sbb
lcall
inc
pop
push
dec
das
fwait
xor
mov
mov
xchg
dec
mov
icebp
scas
pop
xchg
adc
xor
mov
sar
push
or
push
xchg
fistpl
bound
pop
push
pop
and
les
in
lcall
sub
push
and
ficoms
lahf
outsl
aad
push
sub
cs
xorb
jp
cmp
cmp
lret
dec
push
daa
in
xor
not
fucomp
mov
call
stos
mov
cwtl
push
add
pop
jmp
movsb
xor
outsl
mov
aaa
jne
xchg
add
out
out
adc
ret
add
inc
jp
dec
sbb
leave
js
pop
push
in
fcoml
pushf
adc
adc
push
cmpsl
outsl
ss
scas
sbbl
mov
pop
das
xchg
lea
je
call
in
jns
cs
mov
stos
test
or
test
inc
or
mov
inc
push
dec
subb
and
xchg
jp
out
push
push
dec
fbstp
fcoms
mov
ret
cmp
mov
dec
cmpb
scas
add
dec
sti
das
lock
inc
push
loop
cmpb
fcomps
imul
pop
or
lock
push
jae
stos
push
sub
sub
aam
jbe
sbb
flds
inc
jno
mov
movzwl
shrd
movzbl
mov
bt
jmp
add
jmp
add
add
add
add
add
add
mov
add
insl
add
add
add
add
add
pop
add
mov
add
insl
add
add
add
add
add
mov
add
outsb
add
add
add
add
add
add
mov
add
outsb
add
add
add
add
add
mov
add
outsb
add
add
add
add
add
mov
add
outsb
add
add
add
add
add
mov
add
outsb
add
add
add
add
add
mov
add
outsb
add
add
add
add
add
test
inc
mov
add
outsb
add
add
add
add
add
sub
add
outsb
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
add
add
add
add
add
sub
add
add
add
add
add
add
mov
add
lods
cmc
jmp
jmp
int3
mov
mov
push
and
lea
out
leave
movsb
notb
ss
movl
and
dec
cli
mov
mov
fcmovnu
mov
xchg
syscall
inc
orl
shrb
or
xlat
scas
les
sub
inc
jp
xchg
xchg
out
mov
jne,pn
sahf
jg
xlat
ljmp
and
shll
repz
jne
sbb
sahf
scas
pop
fcompl
jle
push
inc
xlat
pop
ret
jno
sbb
cmc
lcall
int
push
or
mov
fdivrs
cmpsl
push
cmp
dec
xchg
fildll
cs
or
or
lods
jg
sbb
mov
dec
pop
mov
cmp
mov
mov
stos
xchg
jp
icebp
test
fwait
lcall
and
mov
int
pop
iret
xchg
mov
cmc
xchg
dec
scas
add
jnp
sub
out
insb
mov
mov
dec
int3
out
ljmp
pmulhw
sbb
enter
and
mov
sub
fistps
cmc
sub
pushf
pusha
call
mov
int3
mov
mov
int
imul
cmp
push
std
push
inc
jne
cmp
push
jnp
xorb
xchg
int
sti
sub
popf
and
cmp
mov
les
and
inc
loop
jb
lea
and
pop
scas
aad
sbb
push
jle
clc
bound
dec
xchg
push
adc
inc
inc
outsl
cmp
push
loopne
or
movsb
ja
sbb
lret
test
addb
mov
inc
call
sub
sbb
repz
call
mov
std
mov
daa
in
inc
adc
lcall
jbe
fstps
dec
or
xchg
inc
jne
adc
jle
sbb
lock
mov
les
inc
and
sub
dec
cwtl
mov
out
jnp
loop
adc
scas
lea
pop
xlat
pushf
outsl
addb
jge
rorl
mov
jl
cs
lods
jecxz
xchg
imul
repnz
repz
lods
adc
sub
aad
into
inc
mov
xchg
in
mov
dec
int3
jle
out
sahf
scas
xchg
mov
dec
push
mov
jbe
dec
inc
push
add
fimuls
fidivs
xor
scas
jp
inc
in
sub
xorl
push
lea
call
push
call
es
sub
int3
sbb
out
lea
or
stos
jb
add
outsb
cmp
scas
jecxz
ret
add
cmp
pop
xchg
pop
negb
add
outsb
cli
jp
pop
adc
push
push
stos
int3
fists
cmp
shrb
hlt
or
xor
rcr
std
scas
sbb
fsave
push
pop
sbb
stc
jns
push
dec
xlat
and
divl
ja
das
push
xlat
lods
jle
and
les
loopne
cmpsl
clc
aad
test
adc
push
pop
in
movsb
jbe
and
rclb
cmp
sbb
inc
and
jle
clc
jns
push
pop
adc
mov
add
aam
inc
push
ret
daa
clc
mov
scas
adcb
leave
lcall
inc
cmpsb
or
pop
ret
std
sub
and
int
jp
and
enter
ds
dec
add
jle
mov
ret
dec
std
dec
pop
mov
xor
pop
xchg
movsl
xor
adc
push
out
and
cmpsb
dec
pop
rcrl
cmp
sbb
lea
push
sbb
iret
pop
xor
add
fimuls
mov
mov
adc
push
sub
pushf
loopne
pop
sub
mov
mov
xor
inc
adc
mov
imul
ja
popf
leave
adc
testl
sub
int3
xorb
test
in
mov
cmc
cmp
inc
inc
adc
in
es
int
dec
pop
pop
outsb
sbb
jl
cmp
push
xchg
popa
mov
or
push
ret
push
mov
into
or
out
xchg
dec
add
sbb
inc
jge
icebp
add
dec
out
ljmp
ret
mov
mov
inc
push
cmpsb
call
jmp
les
xchg
sub
inc
adc
mov
stos
test
sub
int
mov
leave
repz
mov
xor
shrl
sahf
lock
add
push
test
mov
icebp
ficoml
rcrl
xor
pop
enter
jae
push
or
push
or
in
rorb
sbb
pop
sub
adc
xor
and
lea
into
inc
mov
test
pop
jnp
sbb
shll
out
add
aam
je
and
rcll
rorb
jno
in
jne
outsb
sub
add
push
xchg
add
gs
jbe
imul
mov
jne
insl
xor
adc
or
fimull
jo
lock
imul
or
cmc
push
jno
orl
lods
insb
insl
fdivrl
adc
mov
adc
adc
ds
or
push
xchg
std
add
inc
or
imul
sub
xor
mov
pop
je
add
sub
and
test
jno
mov
sub
sbb
bound
mov
sub
sub
popa
adc
xor
push
push
imul
xor
aaa
lock
and
adc
test
cld
lea
fs
popfw
or
add
xor
outsl
lods
inc
adc
fsubs
in
test
loopne
cmp
or
and
and
jns
xchg
pop
and
jg
gs
pop
scas
add
lcall
testl
gs
push
inc
shlb
lret
and
push
stc
cs
xor
lock
fs
inc
ljmp
xchg
inc
and
mov
loopne
adc
lock
dec
dec
gs
dec
jbe
sub
adc
push
test
clc
adc
pushaw
das
mov
pop
xchg
jo
xchg
das
and
ss
pop
daa
je
xor
rcll
inc
inc
pop
jno
lds
inc
adc
cmp
dec
or
ja
adc
out
xor
mov
and
hlt
jae
je
jo
mov
pop
pop
mov
jp
sbb
arpl
push
sarl
xor
fs
lods
push
inc
adc
fildll
addr16
mov
mov
cmpl
sbb
inc
xor
or
iret
in
in
push
out
inc
outsb
inc
mov
jno
mov
pusha
cltd
sbb
icebp
imul
movsl
jb
ja
mov
jmp
mov
push
imul
bound
cltd
test
dec
pop
jno
xchg
push
sarb
loopne
imul
pop
push
jge
adcl
push
jno
outsb
cld
jae
cmp
outsl
shlb
mov
shr
and
popa
iret
loop
dec
sbb
and
je
sbb
pop
lods
push
and
rorl
sar
punpckhwd
sub
pusha
xchg
fwait
loopne
outsb
or
and
cmp
jns
hlt
in
outsb
shlb
mov
sbb
inc
mov
loop
test
sub
or
inc
insl
inc
mov
xor
inc
imul
cmp
add
inc
shll
mov
jnp
aas
lock
test
repz
sbb
mov
and
fwait
setg
pop
mov
xchg
data16
lret
push
inc
ss
jl
cli
mov
xchg
add
shr
push
sbb
mov
je
insl
repnz
pop
dec
sub
cld
xchg
add
pop
lea
inc
aam
imul
pop
jb
fimuls
xchg
sti
aaa
xor
insb
imul
lods
jbe
jnp
in
inc
out
fmulp
push
mov
cmp
jecxz
popa
insl
and
aam
sub
ret
fildl
mov
shll
cmc
ja
adc
mov
mov
imul
dec
int3
je
add
je
mov
jecxz
pop
xor
inc
js
jmp
in
cmp
xchg
sub
xchg
xor
lea
sub
hlt
iret
loopne
sub
pusha
js
and
pop
adc
loop
in
lds
outsb
adc
or
test
push
std
mov
sub
xor
in
adc
push
xlat
jns
cltd
or
leave
pop
arpl
scas
dec
pop
sub
in
push
push
imul
in
in
popa
aam
sub
push
mov
jmp
pop
cmp
cmp
and
and
mov
insl
add
negl
jb
inc
wbinvd
dec
movsl
push
insl
in
pop
loopne
fisubl
scas
jo
mov
fs
das
sbb
xchg
and
leave
outsb
ret
sub
jne
add
xchg
imul
adc
test
sub
jmp
testb
xchg
cmc
xchg
cmc
xchg
mov
push
pop
sub
movsb
stc
cmp
mov
data16
dec
xchg
jmp
dec
fsubs
push
sub
dec
stc
call
sbb
outsb
outsl
pop
jb
stos
xor
test
lret
imul
or
imul
push
out
gs
cmp
and
dec
jp
adc
xor
sbb
mov
fxch
mov
in
jmp
mov
mov
les
out
gs
xor
mov
mov
aam
pop
lea
and
mov
jnp
in
jae
mov
roll
cld
mov
adc
push
xor
cmp
stos
fstl
push
leave
ss
cwtl
sub
je
insl
and
xchg
add
jae
jp
and
std
jo
inc
add
jns
arpl
out
outsl
push
insl
mov
data16
push
xor
sub
outsl
jb
lea
mov
into
cmp
in
imul
or
scas
lods
mov
xor
inc
add
add
fidivl
out
test
sbbl
jb
sbb
iret
ljmp
sahf
pop
mov
push
test
xchg
dec
imul
mov
aad
xor
xchg
cs
push
dec
sub
and
dec
mov
stc
adc
iret
js
xorl
pop
repz
mov
inc
push
or
gs
jl
outsb
and
int
movups
in
inc
adc
rclb
adc
or
push
stos
stos
sbb
dec
dec
popa
push
dec
lea
sub
leave
lahf
fsubl
jmp
dec
icebp
lcall
fs
sub
fisubl
xchg
jno
cmp
int3
xor
in
pop
and
push
pop
fsts
in
sti
push
and
jle
cli
cmp
xor
bound
les
pop
pop
xor
fs
das
arpl
or
inc
push
and
pop
ljmp
xor
popa
pusha
sbb
repnz
xor
dec
jmp
addr16
and
insl
mov
add
mov
scas
jo
dec
movsb
je
cmp
gs
or
in
outsl
mov
xchg
push
push
popa
mov
sbb
sub
and
shll
mov
push
inc
inc
xor
mov
jo
push
iret
mov
rorl
inc
pop
aad
mov
out
mov
in
inc
out
imul
lcall
popa
mov
imul
aam
jns
stc
cmpsb
dec
jns
test
lods
rorl
push
mov
xchg
fidivrs
dec
fcomps
aam
imul
lcall
or
pop
add
pusha
in
push
imul
cmc
jnp
or
add
icebp
mov
adc
jnp
aam
aad
in
mov
sub
jmp
pop
decb
in
or
into
out
adc
mov
in
sbb
movsl
mull
test
in
mov
dec
je
cmp
jb
punpckhwd
push
adc
mov
jnp
aaa
push
jb
lds
jmp
sbb
stos
repz
jmp
std
imul
inc
jae
sub
lods
movsb
lea
inc
pop
jno
and
adc
in
in
rol
imul
leave
xchg
shl
movsl
repz
arpl
movsb
negl
je
lds
jp
jae
mov
pop
imul
inc
mov
int
daa
in
xchg
jb
repz
ja
and
and
sub
inc
xchg
cmp
outsl
sub
adc
and
lds
or
les
je
int
das
fdivl
scas
scas
pop
cmp
add
scas
push
lea
dec
jb
xchg
dec
insl
movsl
cld
out
popf
inc
jg
jb
icebp
jo
push
push
adc
test
push
add
dec
inc
adc
inc
fldt
pop
repz
ja
scas
sbb
dec
arpl
cmc
pop
or
mov
out
adc
fisubrs
movsl
jmp
push
pop
mull
test
or
stc
pop
int3
dec
mov
lahf
xor
push
pop
xorl
jmp
notl
cmp
test
lods
xchg
cmp
push
mov
and
scas
enter
push
test
push
mov
subl
out
xor
dec
dec
icebp
in
inc
dec
adc
aaa
lea
dec
cmc
jp
paddd
dec
icebp
mov
mov
imul
mov
nop
push
inc
pusha
imul
gs
push
jae
pop
cmp
bound
pop
xor
std
ja
jp
pop
js
jno
push
pop
push
xor
ret
add
bound
pop
test
sbb
cmp
cmc
divb
dec
les
mov
aad
rep
int3
mov
in
mov
insb
outsb
fs
shlb
data16
lods
xlat
leave
test
jmp
lock
aad
mov
cmpsl
insb
addb
mov
sti
popf
dec
add
sti
dec
push
je
xor
jb
push
sub
push
jae
scas
add
or
inc
pop
jae
test
fs
xchg
mov
fldenv
ds
aaa
imul
gs
push
and
mov
xor
push
loopne
lcall
clc
adc
jae
fs
in
dec
push
push
push
jmp
lea
jle
inc
cs
movsl
adc
test
frstor
cmp
fcomip
sbb
sub
andl
insl
or
push
jmp
sbb
sbb
mov
imul
sbb
push
lahf
pop
data16
fldt
in
sbb
fwait
imul
pop
test
jmp
cmp
addr16
sbb
xchg
repz
jg
lods
pop
mov
imul
mov
jmp
test
repz
dec
and
mov
in
pop
cltd
push
je
pop
sbb
sub
shl
mov
imul
out
mov
or
mov
jae
loop
shrb
fwait
rcl
add
shll
sbb
mov
popa
push
movsl
dec
lds
fldenv
out
add
jmp
loopne
xchg
inc
mull
testb
je
lods
icebp
sub
icebp
push
cmp
mov
cmpsl
xchg
jns
jp
imul
mov
out
pop
fldl
cmp
sahf
lahf
fsubrl
pop
outsl
mov
mov
push
sarb
mov
add
flds
sbb
mov
rcll
jge
mov
dec
pop
ror
and
xor
push
pop
imul
jmp
sub
and
mov
push
cmp
sbb
lret
sub
pop
jnp
push
xor
aas
gs
leave
test
mov
inc
pop
dec
sarl
jns
inc
inc
xchg
test
leave
pop
repnz
sbb
push
lea
adc
insl
dec
xchg
shll
fisubs
mov
div
mov
push
fistps
mov
jg
jae
in
insb
mov
jmp
sub
dec
jo
inc
and
int3
cmp
adc
insb
outsb
int3
jb
jg
imul
cltd
insb
dec
movsl
cmp
xor
pop
notl
lea
rol
xchg
adc
cmp
push
insb
add
pop
push
je
ljmp
divb
cli
in
aaa
pop
lret
pop
in
fadds
push
clc
jae
jae
push
vhsubpd
ficoms
ss
je
cmp
test
add
test
and
and
test
dec
popa
lea
cmp
sbb
roll
aam
sbb
pop
xor
int
xchg
stos
ss
and
inc
cmc
aas
gs
dec
jb
xor
adcb
mov
popf
in
xchg
mov
cmp
dec
dec
out
mov
mov
jmp
pop
dec
imul
dec
mov
pop
jg
in
aad
inc
inc
aam
mov
movsb
adc
js
cwtl
push
lret
repnz
jae
dec
mov
push
mov
insl
jmp
jp
ja
mov
pusha
mull
dec
insl
ss
pop
sbb
xchg
aam
popa
dec
iret
adc
lahf
inc
inc
xchg
insb
push
in
push
mov
in
pop
daa
jbe
gs
repnz
pop
rorl
icebp
into
dec
lods
or
cmp
lods
jb
aam
dec
mov
xor
addr16
ss
mov
fwait
cwtl
push
mov
data16
inc
movsl
dec
pop
insb
adc
dec
sahf
pop
cmp
inc
addr16
insb
mov
in
mov
mov
mov
imul
sbbl
bound
mov
push
test
jge
mov
jmp
mov
out
mov
jns
cmp
pop
jnp
push
sbb
outsl
cmp
notl
arpl
stos
in
jo
jae
int3
lahf
loop
pusha
adc
int3
pop
push
sub
mov
popf
icebp
pop
lcall
inc
add
outsl
ljmp
fs
jo
leave
popf
stos
test
pusha
lods
pop
xor
cmp
push
lds
movsl
dec
cmp
movsl
insl
icebp
pop
lods
add
mov
lods
push
and
subps
iret
aad
movsl
inc
xor
inc
add
in
adc
movsl
and
lds
add
in
orb
fwait
mov
dec
jnp
pusha
jno
aam
loop
xchg
jo
cmp
jns
adc
hlt
push
push
fdivl
mov
jp
jmp
leave
cmp
mov
fsubrl
icebp
imul
xor
notl
push
cmc
and
sub
jno
imul
add
push
mov
pop
pop
dec
popa
inc
mov
sbb
clc
iret
stos
popl
mov
inc
in
scas
jmp
call
outsl
add
jne
pop
cmp
negl
push
movsl
xor
push
mov
jne
lahf
in
data16
fs
inc
lods
popf
mov
mov
lea
outsb
or
aad
adc
mov
xchg
outsl
in
push
adc
sub
jle
bound
inc
mov
jl
cld
dec
adc
in
repz
jb
add
clc
add
pop
scas
test
mov
loop
gs
insb
pop
mov
add
sub
gs
add
and
insb
popa
repnz
nop
clc
fldt
ficomps
repz
sbbb
loopne
out
fcompl
adc
add
jg
daa
das
dec
out
fildl
and
out
dec
xor
imul
mov
loopne
in
sbb
mov
lds
psrlq
dec
or
outsb
out
out
das
imul
dec
les
sahf
mov
push
outsl
inc
mov
push
push
push
cs
hlt
or
jae
das
pop
push
leave
ja
popa
dec
pop
push
xor
imul
adc
push
push
vandnps
aad
ret
ljmp
mov
and
mov
cmp
cmp
sbb
outsl
pmaddwd
jno
sahf
scas
icebp
mov
jge
clc
daa
cwtl
and
sub
xor
dec
cmc
push
jae
mov
cmp
inc
stos
and
in
xchg
rol
adc
jmp
xor
jae
adc
cmp
jo
or
mov
add
mov
or
xor
jae
test
lcall
popa
jmp
insl
and
xchg
fs
adc
int3
popa
ret
sahf
add
data16
adc
xor
orb
add
pop
les
pop
in
sbb
inc
gs
jae
jmp
pop
adc
ds
sub
dec
and
mov
mov
stc
inc
sbb
leave
cwtl
cmp
lods
mov
std
ljmp
popa
adc
cltd
push
outsl
movsb
push
lret
xlat
in
pop
movsl
push
in
sub
and
push
and
sbb
push
add
inc
insb
xor
lret
popa
in
jnp
aam
mov
data16
repz
jae
jmp
pop
fwait
jbe
jg
pop
mov
cmp
nop
pop
add
mov
jo
push
lahf
mov
sbb
ljmp
sbb
test
jno
jge
lahf
and
xchg
xor
mov
movsl
cmp
cmpb
jle
xchg
and
nop
lea
xchg
mov
mov
mov
jle
insl
pop
loop
popa
sub
imul
lds
ja
mov
insl
fdivrs
fmuls
div
in
sbb
adc
insl
rorl
sub
adc
add
mov
adc
add
xor
push
in
pushf
popa
insl
add
mov
xor
add
and
mov
arpl
inc
sub
cmc
xor
aas
rorl
push
clc
scas
cmc
sub
pushf
lahf
pushf
mov
movsl
jb
arpl
movsb
mov
mov
je
sahf
repnz
cmc
lods
dec
data16
jle
stos
add
and
cld
loop
sub
cli
clc
jne
cmpsl
mov
jae
dec
jmp
insl
jb
cmp
add
daa
fwait
pusha
sub
sbbb
pop
addr16
mov
daa
push
xchg
mov
pop
jno
pop
ja
jne
add
ljmp
and
sub
mov
jae
ret
pop
inc
xor
cmp
js
imul
inc
in
cmp
test
lods
mov
jmp
movsl
gs
or
arpl
dec
lret
push
lods
leave
adc
shll
stc
jp
movsb
stos
dec
add
pusha
scas
mov
sub
lgs
mov
mov
jnp
out
or
es
stos
bound
xchg
mov
popa
and
inc
gs
les
xor
ljmp
repz
je
mov
jae
loop
leave
pop
icebp
mov
xchg
mov
test
mov
push
scas
aad
shrl
mov
mov
push
lea
repz
scas
mov
xor
xchg
ret
or
push
arpl
ds
sub
in
hlt
addr16
add
daa
out
sub
jo
rcl
or
or
lcall
push
das
hlt
jp
pop
add
dec
mov
push
push
xor
cld
aad
negl
add
lods
push
sub
adc
push
jno
dec
jnp
inc
push
insb
call
cmp
push
jmp
dec
popf
and
test
adc
mov
jns
jb
popf
divb
cld
sub
dec
xchg
test
ja
cwtl
xor
dec
pop
add
mov
sub
push
fs
jmp
les
mov
sbb
inc
jg
inc
test
xor
iret
dec
inc
dec
mov
nop
push
rep
clc
sub
cli
out
cmp
popa
imul
in
mov
ret
cli
push
ja
jno
leave
and
and
std
pop
xchg
pop
push
push
adc
popf
push
xor
out
inc
mov
jns
sub
das
cld
xor
inc
xchg
jl
pop
data16
mov
popf
mov
test
or
mov
pushf
xchg
dec
je
hlt
jbe
add
cmp
lods
jo
jnp
pop
cltd
fldcw
fs
andl
pop
jae
mov
or
pop
push
push
imul
imul
inc
shlb
dec
mov
in
push
hlt
adcl
aad
int3
push
xchg
xor
jno
lods
pop
out
insl
mov
inc
mov
xor
cmp
push
mov
push
fs
ljmp
cld
enter
cli
jae
mov
jne
leave
pop
inc
insl
cld
out
out
sub
ss
or
aam
test
daa
adc
adc
sbb
and
mov
cmpl
dec
out
cmpsl
sbb
loopne
cld
cmp
cmc
sbb
aas
sahf
outsb
out
push
adcl
adc
xor
push
jns
xor
int
enter
xchg
mov
ds
cld
mov
mov
pop
lret
cmp
lods
cs
pop
jne
testl
jne
and
jmp
clc
jne
lods
cmp
cli
mov
jp
test
xor
inc
or
pop
jns
mov
xchg
test
cmc
xchg
xor
dec
cmp
cli
jne
lret
jge
gs
mov
cli
jnp
sbb
lds
xor
cmpb
sub
loope
cmpsb
cmp
shl
outsb
cltd
popf
aaa
mov
in
iret
aad
xchg
cli
shrb
imul
lods
sub
jecxz
cmp
ret
jb
and
loop
jne
test
push
mov
shr
ss
mov
in
jl
push
jge
dec
mov
lods
adc
fbstp
ljmp
push
test
hlt
adc
stos
sti
outsb
mov
mov
data16
movsb
mov
sti
jno
xchg
jb
outsb
add
je
xchg
cmp
jnp
push
test
ss
xor
jae
mov
jnp
push
xor
orl
mov
push
dec
cltd
xor
les
and
and
jle
xchg
cmp
cld
stos
sarl
mov
subb
xchg
aam
mov
mov
sub
push
outsb
inc
ss
mov
shr
pusha
sbb
xchg
and
das
and
xor
outsb
add
adc
adc
xor
mov
and
and
or
pop
dec
or
sbb
je
xchg
ficompl
and
push
mov
add
addr16
xor
das
xchg
sub
in
cmp
and
sub
gs
je
fdivs
sub
andl
popf
sbb
xor
xchg
adc
mov
jl
in
sbb
pop
in
pcmpgtd
cmp
iret
cmp
mov
lea
in
xlat
pop
sbb
adc
fdivs
mov
gs
pop
sub
bound
add
fildll
push
and
enter
mov
popf
inc
hlt
mov
clc
subb
push
nop
in
movsl
lods
xchg
loop
mov
mov
cltd
xlat
mov
mov
mov
jp
push
mov
pop
add
jge
jge
imul
shlb
mov
out
aas
push
ja
cli
je
outsb
lea
in
popf
call
out
arpl
fs
sbb
jecxz
push
sub
mov
cmc
jmp
mov
popf
enter
in
cld
mov
cs
dec
addr16
pop
shrb
add
mov
dec
xor
inc
imul
out
adc
pop
jmp
sbbl
rolb
sub
mov
int3
and
popf
fstl
punpcklbw
pop
in
mov
push
sbb
test
adc
xchg
repz
daa
inc
repz
cmpsb
incl
insl
repz
out
push
imul
pop
mov
jmp
dec
push
lea
adc
push
lds
push
ficoms
jae
jmp
movsl
movsl
pushf
sbb
and
scas
jae
shufps
jg
divl
imulb
mov
sub
lcall
in
mov
enter
jmp
cmp
shll
cmpsl
sahf
adc
xor
cld
pop
jno
lds
add
insb
jle
pop
sub
adc
jo
push
test
mov
adc
mov
pop
jl
loopne
pop
or
pop
dec
test
aaa
repz
cmp
je
add
test
push
mov
inc
outsl
dec
inc
pop
push
gs
push
xchg
dec
jno
and
arpl
outsl
pop
pop
loope
mov
add
mov
incl
lea
sbb
and
and
adc
outsl
pop
addl
pop
in
pop
push
or
scas
xor
jno
mov
repnz
cmc
outsb
mov
je
push
loope
push
mov
insl
ret
cmc
and
lea
xor
xor
aad
jmp
jbe
jge
int
push
inc
fincstp
sub
jae
lea
sbb
sbb
outsb
je
or
stos
xchg
jnp
mov
pusha
popa
xchg
inc
pop
pop
push
rcrb
adc
int3
fsubl
xchg
push
mov
or
xchg
sub
jno
sbb
add
lahf
loopne
dec
or
and
in
cmpsb
je
jmp
je
cmp
xchg
imul
data16
jbe
je
repz
adc
popa
lds
inc
pop
pop
lods
fisubl
xchg
pop
add
enter
and
xchg
dec
sbb
xchg
sbb
ljmp
xchg
add
adc
bound
cmp
xor
pop
jns
jecxz
xor
push
jbe
out
clc
popa
xor
mov
cmc
cmp
jnp
jae
add
lea
dec
xchg
xchg
sub
xor
jns,pn
lea
or
repz
in
mov
mov
imul
adc
pusha
and
ja
mov
in
test
add
jae
mov
std
pop
loop
in
in
dec
inc
addr16
push
pusha
pusha
pop
enter
dec
lea
mov
mov
outsl
push
push
jne
push
jno
cs
jae
repz
lea
mov
je
scas
das
sbb
dec
mov
in
repnz
mov
iret
jbe
ss
push
dec
roll
pop
push
add
insl
or
add
je
add
mov
cmpsl
xor
insl
xchg
aam
test
sbb
jo
add
in
mov
je
mov
xchg
xchg
fbstp
mov
and
fldl
pop
adc
fbstp
in
mov
negl
movsl
or
sub
in
movsl
fstl
mov
ret
lds
loopne
cmp
sbb
in
mov
insl
dec
jecxz
cld
sbb
out
repz
xor
push
leave
mov
sbb
in
mov
dec
shrb
popf
or
jns
push
adc
dec
push
stc
ds
mov
in
add
jge
xchg
insl
jecxz
int
int
scas
xor
or
insl
stos
xor
push
push
cmp
popa
popf
adc
add
and
pop
push
pop
and
outsb
stc
imul
sub
fdivl
mov
sub
pop
out
imul
fidivs
repz
inc
push
fdivrs
inc
aaa
repnz
arpl
fildll
mov
sti
fists
mov
sub
add
jb
stos
adc
fwait
jae
sbb
mov
inc
andl
lods
pop
outsl
test
mov
imul
push
repnz
int
insb
std
pusha
fs
dec
jo
push
mov
mov
daa
imul
jae
aas
mov
and
fidivs
dec
fs
cmp
inc
das
bound
push
mov
mov
pop
inc
and
dec
lds
lods
add
lods
adcb
push
push
pop
push
sahf
push
pop
push
cmpsl
push
arpl
push
addr16
fwait
push
imul
outsl
arpl
stos
in
and
lea
sub
ret
aas
push
out
gs
xor
test
dec
inc
cmp
insl
sub
dec
jmp
sbb
dec
cmp
pop
add
pop
repz
ja
push
in
popf
popf
icebp
xchg
pop
lea
cmp
xor
popa
fbstp
pop
bound
dec
adc
subl
nop
push
inc
lea
dec
aam
fcmovnu
adc
cmp
cld
dec
xchg
int
cli
dec
insb
repz
push
add
cmp
add
xorl
inc
push
jp
insl
fcoms
and
lahf
mov
mov
mov
int
pop
sub
popf
push
xor
out
push
jb
and
notl
popa
mov
add
lea
aam
push
js
scas
into
inc
lahf
cmp
mov
cs
add
sub
dec
cmp
negb
sub
or
add
add
inc
fs
insl
push
out
pusha
and
mov
stc
mov
divb
jo
pushf
push
imul
lock
pop
sub
push
pusha
xor
and
sbb
test
adc
cmp
mov
fstpl
cmp
imul
lea
imul
pusha
and
outsb
popa
cmp
leave
sbb
sub
andl
cmp
adc
jo
mov
je
cmp
xor
dec
cmpsl
test
xor
jmp
xlat
loopne
ja
lods
cmp
mov
je
lea
or
hlt
xor
add
ret
push
aaa
dec
sub
ret
pop
daa
imul
outsb
cmpsb
les
pop
imul
mov
and
outsb
mov
mov
cld
in
imul
popf
sub
cmp
jno
push
movsl
xchg
pop
ljmp
inc
pushf
and
pop
inc
xor
loop
movsb
and
xlat
imul
and
popf
pop
mov
fcoml
push
popa
jbe
pop
outsl
clc
push
sub
icebp
pushf
sbb
pop
xor
cmc
sub
push
repz
push
mov
xchg
fsubrl
or
sbb
jecxz
sub
xor
jbe
aad
push
call
imul
mov
adc
pop
push
sub
loop
test
sbb
sub
xor
in
mov
int
hlt
sti
adc
pop
pop
repz
dec
loop
outsl
popf
mov
push
mov
add
push
arpl
sbb
sbb
jmp
mov
jae
addr16
push
push
mov
or
xchg
sub
mov
mov
pop
cmp
push
loope
adc
test
test
in
pop
lea
test
add
mov
fcmovbe
pop
loopne
cmpl
sbb
jmp
ja
arpl
or
repz
push
insb
adc
enter
push
insb
pop
scas
movsb
and
jne
jge
clc
test
add
jmp
jmp
mov
push
lahf
push
aam
pop
scas
jb
dec
addr16
and
jge
mulb
adc
fdivrl
xor
sbb
int3
xor
or
in
sub
sti
aas
mov
pop
and
sub
xor
pop
testb
xchg
or
hlt
mov
push
and
xchg
sub
dec
sbb
scas
aaa
xor
push
push
mov
scas
in
and
sbb
inc
aaa
arpl
ret
scas
xor
hlt
or
stc
idivl
decb
aad
test
inc
fdivs
xchg
mov
sbb
addr16
xchg
mov
mov
cwtl
stos
dec
dec
mov
push
inc
pushf
and
mov
mov
in
jge
stos
test
jecxz
jge
fwait
imull
lock
mov
jmp
lds
pop
cli
fidivrl
mov
aaa
clc
lcall
lea
mov
dec
pop
cwtl
jb
push
mov
sbb
stos
pop
and
stc
jae
sub
jp
imul
xchg
mov
rolb
aad
push
and
imul
test
cmc
jb
ud2
jb
mov
movsb
sbb
mov
adc
xor
dec
and
cmp
adc
inc
sbb
repz
addr16
push
mov
pop
cmp
xchg
jns
cmp
imul
repnz
push
jno
in
sahf
cmc
in
add
je
movsb
sbb
mov
pop
arpl
in
mov
and
xor
mov
cmp
or
lds
insl
xor
scas
mov
cmc
xorl
sbb
data16
std
push
decb
and
jae
and
dec
bound
xor
xchg
test
nop
mov
stos
jb
outsb
scas
lret
xor
xor
aaa
cmp
sbb
xchg
rcll
mov
mov
mov
das
inc
test
mov
cmp
test
jb
push
fistpl
loopne
mov
mov
add
pop
stos
mov
or
inc
je
sub
popa
lock
imul
jb
cmp
add
push
jns
ret
pop
sub
test
les
jb
sub
mov
cmp
pop
inc
xorl
faddl
imul
call
pop
scas
cld
ret
imul
lea
loope
sbb
outsb
sbb
xchg
mov
cmp
movsl
ret
pop
inc
or
mov
push
inc
dec
movsl
pushl
je
and
push
push
push
sbb
lock
scas
cmp
aam
mov
jbe
popa
push
dec
push
cmp
outsl
pop
cmp
gs
xchg
mov
pop
outsl
add
pusha
mov
push
adc
or
pusha
sbb
lea
lods
pop
inc
sahf
cmp
jae
jne
sub
inc
cmp
and
js
sti
xchg
shll
dec
aad
bound
xchg
pop
sbb
insl
xor
xor
movsl
in
clc
mov
popa
insl
call
sbb
sub
pop
cmp
insb
stc
push
dec
mov
mov
lods
jp
cmpsb
stos
mov
inc
mov
out
bound
jnp
sbb
pop
add
push
xor
inc
hlt
jns
dec
clc
dec
loope
stc
dec
jne
notb
test
fwait
mov
xor
sub
inc
int
and
dec
push
and
in
in
sub
in
xor
out
xor
shr
es
jns
lcall
das
mov
mulb
and
gs
stos
cmp
xor
mov
sbb
cld
mov
pop
in
lock
sub
fcomi
sub
push
repz
jge
add
sti
insb
subl
repnz
hlt
aas
add
insb
mov
pop
fistpll
mov
inc
mov
sub
pop
cmp
sbb
inc
and
shll
loop
push
inc
cmp
push
shll
pop
lea
loop
jg
sbb
mov
jmp
addr16
and
sbb
add
test
lock
pushf
or
or
pop
les
and
and
add
adc
in
int
xor
out
mov
xor
adc
pop
pop
cmp
mov
fwait
cwtl
and
insb
in
je
out
in
xchg
je
shll
mov
sbb
leave
sarb
inc
in
jae
iret
push
in
mov
jbe
int
jb
bound
jno
imul
sysexit
push
jo
inc
movsb
lea
push
mov
in
inc
add
outsl
push
pushf
xor
pop
call
sbb
insb
mov
sub
cmp
and
inc
scas
lea
mov
stc
dec
in
outsb
sub
std
mov
jae
inc
jbe
jecxz
dec
test
jge
push
push
dec
jb
sbb
in
ja
and
pop
pop
inc
and
cs
inc
sub
dec
and
rcrl
scas
pop
jb
add
popf
in
je
lods
jb
lcall
adcl
xchg
push
dec
sbb
mov
jae
ljmp
add
clc
out
loope
pop
scas
scas
shll
cmp
testl
adc
cmp
adc
repz
shrb
push
mov
mov
xchg
push
xchg
sub
fs
lds
and
mov
mov
xchg
popa
push
sub
outsl
insl
outsl
imul
inc
and
adc
aam
sub
mov
dec
mov
cmp
testl
pushf
dec
push
bnd
ret
aad
outsb
jbe
insb
je
lds
add
jp,pn
jl
xchg
fs
dec
and
push
sub
sbb
mov
gs
mov
or
cmc
cmpsl
imull
jmp
in
jl
test
xor
mov
cmpl
jns
bound
dec
jno
push
lahf
push
addb
and
pop
add
xor
jno
pop
lock
aad
fs
push
outsl
jno
mov
ja
lock
lock
jmp
pop
mov
imul
cmp
decb
cmp
xor
arpl
clc
insl
outsl
push
push
jns
mov
inc
jge
insl
jno
mov
divb
and
jmp
jbe
adc
sub
imul
imul
sub
imul
imul
imul
push
push
arpl
jno
mov
sbbb
lret
cmp
jne
and
fs
jp
or
imul
or
stos
or
push
arpl
sub
push
das
adc
pusha
sbb
inc
jae
xchg
cmp
ret
sti
inc
push
in
aaa
mov
push
sbb
bound
mov
cs
insl
sub
icebp
popa
adc
mov
and
jle
sti
out
sub
je
push
popa
ljmp
and
adc
stc
inc
in
xor
lock
shlb
arpl
pop
xchg
jnp
push
mov
mov
xor
addr16
es
cmp
popa
pop
loopne
insl
jbe
jo
adc
ret
dec
xor
movsl
jl
or
mov
je,pn
cmp
jae
add
and
fsubrl
popa
popa
adc
int3
pop
xor
in
lds
sarb
cmp
orl
adc
imul
sbb
mov
sbb
mov
loop
mov
pop
insb
lods
inc
add
sahf
jle
lcall
jle
and
inc
scas
cmpsb
je
inc
pop
pushf
sbbb
arpl
add
jg
xchg
jecxz
rcrb
dec
add
mov
clc
pop
jae
xchg
mov
jle
adc
mov
addb
add
arpl
in
movsl
std
pop
in
test
jnp
jns
lods
js
push
pop
int
lea
mov
shl
test
repnz
jp
add
insb
jp
jo
mov
lods
add
push
pop
add
sarl
pop
popf
add
insl
stc
outsb
lds
cmpsl
xor
outsl
pop
sub
mov
mov
sub
inc
out
addr16
xchg
push
lods
push
cmp
mov
aas
leave
mov
and
jl
in
push
orl
jle
std
outsb
cmp
mov
cmp
dec
push
insl
and
je
cmp
xchg
cmp
push
fsub
fcompl
mov
cmp
mov
cmpsb
dec
and
jmp
adc
int
mov
xchg
sbb
jecxz
push
jp
cltd
push
mov
test
sbb
push
jb
imul
notb
movsl
in
out
inc
lods
pop
lret
lcall
arpl
or
in
mov
pop
sbb
cmpsl
sarb
popa
push
push
xchg
and
ljmp
mov
aam
mov
scas
pop
imul
mov
xorl
loop
or
sbb
inc
jg
mov
lds
test
sub
mov
or
pop
sahf
jge
nop
mov
repz
xchg
xchg
mull
cmp
fildl
xor
pop
fwait
mov
ja
inc
xor
jb
or
jns
or
cmp
movsl
cmp
pop
fwait
mulb
shlb
adc
out
sub
addl
and
outsl
ja
sti
fisubrs
cmpsb
loope
fcoms
rclb
jo
jmp
dec
arpl
jns
and
idivb
jl
or
rcrl
shll
fwait
jo
inc
test
push
sub
sbb
xor
fdivrs
addr16
imul
push
test
imul
inc
or
jge
es
test
add
bound
fs
add
outsb
adc
popf
incl
test
mov
xor
popa
sub
in
stos
xorl
xchg
shlb
and
int
pop
or
out
mov
mov
imul
shrb
cmc
test
int3
aam
in
aaa
outsb
add
jo
insb
test
jmp
insl
lea
mov
addb
fldt
out
aas
sahf
sbb
cld
or
push
and
loopne
aam
adc
xchg
xchg
pop
add
cmp
gs
ss
push
outsb
jno
add
in
nop
call
xchg
js
subl
out
stc
inc
inc
mov
jno
mov
pop
int
push
jo
sbb
mov
and
filds
mov
dec
xchg
pop
or
ja
add
xchg
jo
pop
lea
rorl
lea
sar
and
mov
out
sbbl
aas
cmp
pop
inc
hlt
cmp
cld
je
data16
dec
shll
sub
lea
mov
push
lea
subb
insb
inc
sub
dec
ja
jmp
add
cld
add
lret
in
xchg
outsb
or
ds
cmp
inc
in
dec
xor
out
xor
push
sub
cmp
lods
cmp
pop
lret
cs
daa
arpl
arpl
sti
data16
rcll
aaa
dec
pop
dec
inc
and
and
negl
scas
lock
cs
icebp
mov
sub
sub
ret
pop
xor
xchg
in
icebp
cli
enter
int
repnz
adc
outsb
mov
inc
or
inc
add
mov
jne
cs
add
push
pop
push
and
daa
stc
or
popa
sub
mov
jmp
scas
xor
pop
rorb
cltd
sub
sub
lea
cmp
outsl
push
xorl
adc
push
sbb
push
jns
popa
sub
icebp
ljmp
dec
mov
jmp
push
sub
dec
pusha
mov
or
das
mov
jno
inc
insl
xor
dec
mov
lcall
es
push
and
cmp
jo
movl
icebp
lcall
jl
fdivrp
subb
imul
jge
shrl
jnp
fimull
mov
dec
add
pop
cmp
mov
push
das
mov
aad
sub
add
push
mov
lcall
pop
add
in
sarb
add
xor
or
pop
aas
cmp
adcb
or
aas
in
add
es
inc
out
xchg
mov
or
add
adc
add
and
sub
movlps
fwait
add
pop
sarb
push
push
or
push
dec
sti
or
imul
cmp
xchg
shrb
jne
add
out
cmp
push
mov
cmp
ja
inc
arpl
sub
mov
xlat
pop
aas
mov
jne
aam
pop
dec
aam
rclb
imul
push
scas
mov
and
fildll
in
inc
or
sub
lock
cwtl
dec
jmp
lods
into
jns
adc
popa
dec
insl
imul
ficoms
fists
cmp
hlt
jmp
sbb
pop
xchg
and
les
dec
insl
push
xchg
adc
jo
cmp
imul
mov
aam
iret
loope
sti
inc
cmp
inc
push
les
je
mov
in
cltd
pop
insl
xchg
xchg
loopne
fisubs
jae
imul
or
jae
push
jno
mov
add
fwait
and
xchg
arpl
loope
outsl
fsubl
mov
mov
rcll
mov
test
sbb
mov
insb
lahf
popa
and
gs
mov
push
dec
cmpsb
add
jae
hlt
or
mov
xor
pop
js
subl
adc
jmp
ret
add
pop
and
mov
into
sub
clc
shlb
pop
scas
jg
lods
mov
out
xor
popa
sub
jnp
ljmp
xchg
inc
das
push
mov
inc
je
pop
jb
sbb
xor
je
hlt
stos
xchg
in
pop
inc
xor
pushf
xchg
ss
cli
je
xchg
popa
stos
and
jae
or
push
adc
stos
or
je
cmp
insl
dec
add
orb
jo
jno
cmp
scas
dec
inc
icebp
and
ds
xor
scas
je
jae
cmp
xchg
jmp
rdtsc
icebp
cltd
gs
pushf
ret
pop
shl
jno
mov
scas
gs
cmp
mov
adc
das
mov
push
xchg
inc
push
jg
hlt
in
pop
out
jb
repz
add
xchg
ss
push
add
ss
mov
jp
data16
mov
ret
bound
bound
stos
movb
push
ret
sub
jns
in
popa
xor
outsb
lds
bound
xor
sbb
rclb
add
inc
dec
sub
xor
dec
cs
subb
jg
mov
inc
in
add
les
shlb
push
cmpsl
jnp
add
pop
pop
popa
movsb
imul
mov
add
enter
cld
add
fldl
insl
lret
scas
lea
xchg
fwait
outsb
in
andl
mov
pop
or
cmp
jmp
mov
rcrb
dec
mov
push
xor
sti
cwtl
repnz
mov
js
jmp
and
mov
daa
xchg
lods
ja
nop
shrl
xchg
scas
mov
push
xchg
ljmp
or
xor
xchg
loope
cmc
dec
adc
movsl
fwait
xor
mov
mov
popl
mov
jle
sbb
mov
mov
mov
cwtl
mov
mov
pop
xchg
insl
mov
xor
cltd
inc
in
mov
pushf
mov
inc
push
lahf
shl
ja
and
in
jg
rolb
les
cmp
ja
sub
popf
xchg
mov
and
push
icebp
cmpsb
lods
lods
mov
mov
mov
jno
in
xor
aad
inc
mov
inc
and
push
lds
xchg
popa
subl
or
je
fldl
ror
xchg
popa
gs
pop
mov
fildl
xchg
cmc
test
xor
shll
mov
daa
shlb
jns
push
push
mov
and
pop
and
std
xor
imul
cld
push
dec
std
lods
ret
stc
lds
jge
push
repz
jmp
jo
mov
ljmp
inc
ret
popa
pop
push
lods
sbb
das
mov
mov
ret
push
dec
bound
cmp
call
xor
xor
lea
into
xor
push
pusha
cmp
xchg
cmp
add
mov
psraw
fistps
std
jb
push
lea
movsl
std
pusha
push
mov
cmpsl
fs
add
mov
push
fs
xor
test
enter
dec
push
dec
rolb
pop
mov
xchg
mov
add
scas
xchg
and
xchg
ljmp
xor
lock
lea
aas
repz
pop
jns
insl
mov
scas
pop
sbb
imul
and
push
inc
lock
sbb
inc
cli
push
shl
pop
pop
nop
mov
add
rorb
fbstp
sbb
or
es
mul
outsb
add
push
and
pop
movsb
stos
das
dec
push
push
pop
and
sbb
xor
dec
adc
pusha
dec
lods
aad
aam
push
sub
pusha
jg
sbb
je
aam
or
call
push
lret
iret
jle
sub
je
add
and
sbb
add
adc
jge
jns
addr16
mov
mov
or
in
sbb
add
push
adc
test
push
fmull
popa
in
ret
add
or
lock
gs
and
adc
fs
push
outsb
pop
xor
das
gs
xor
push
insl
xor
jecxz
xor
ud2
daa
arpl
push
test
xchg
xor
cld
imul
and
xor
xchg
pop
xchg
sub
nop
sbbb
fs
push
adc
push
and
pop
paddq
outsb
cmp
dec
pusha
dec
xchg
insw
insl
push
sub
aad
mov
mov
int3
int
xor
je
gs
and
pop
jbe
or
jg
aaa
xlat
sti
fdivrl
repnz
xchg
addr16
xor
and
and
or
scas
xor
in
dec
push
mov
hlt
push
inc
sti
and
dec
rep
mov
xchg
addr16
and
stos
daa
mov
imul
inc
and
int
in
outsl
imul
sub
sub
jno
jbe
fsts
sahf
mov
inc
ljmp
insl
sub
lock
push
insl
mov
jge
add
aad
lock
into
pop
test
in
lods
adcb
pop
jle
jge,pn
jl
jnp
jp
jns
js
ja
ja
xchg
pop
xchg
out
xchg
push
xchg
in
lods
nop
xchg
popl
mov
mov
in
lods
mov
movsl
pop
movsb
out
mov
lods
mov
cmp
pop
pushf
out
fwait
push
lcall
add
out
mov
mov
mov
mov
scas
add
out
stos
push
stos
in
lods
test
cmpsl
add
out
ret
push
ret
lods
rclb
pop
mov
mov
xchg
mov
mov
aad
aam
rcll
in
lods
rclb
int
int3
out
lret
ds
mov
mov
mov
mov
movsb
loopne
pop
mov
lcall
addr16
jns
xchg
inc
jbe
mov
adc
add
pop
mov
jae
gs
mov
lea
adc
adc
sbb
in
sbb
test
imul
movaps
or
dec
add
jae
dec
mov
mov
xor
pop
mov
hlt
pop
sbb
paddq
aaa
jno
adc
repnz
popf
mov
inc
gs
push
arpl
or
xor
sub
addr16
in
sbb
jne
xor
or
xor
and
in
sbb
jne
and
push
adc
push
xor
sbb
imul
jae
or
decl
fsts
sbb
imul
ret
sbbl
sar
pop
or
jo
add
sbb
and
sub
pop
mov
test
sbb
popa
or
repnz
sbb
insl
and
sbb
in
test
sbb
mov
ljmp
icebp
dec
lds
pushf
lds
nop
inc
jl
sbb
sub
add
aam
sbb
push
mov
dec
or
out
aad
xor
adc
cmp
push
adc
out
mov
dec
xor
or
scas
in
push
sbbb
xor
add
or
sbb
push
add
or
mov
pop
adc
push
inc
xor
dec
lods
shll
das
adc
push
sub
lods
dec
in
pushf
in
andl
mov
add
add
in
sbb
mov
sahf
push
cmovge
adc
ret
insl
mov
and
mov
ror
fdiv
pop
adc
adc
inc
dec
lods
xchg
mov
inc
ds
jno
ljmp
jge
cmp
or
fs
mov
and
jne
xor
or
fdivl
sub
and
add
adc
adc
mov
add
jno
test
and
and
jecxz
pop
rcrl
mov
popa
je
jmp
ret
dec
push
test
insb
xor
or
add
std
push
cmc
and
gs
out
pop
lcall
imul
xchg
xor
mov
xchg
repz
shrb
in
cmp
ljmp
sub
or
and
xchg
in
pop
add
lahf
push
or
xor
xlat
xchg
cli
jbe
pushf
mov
hlt
shlb
movd
je
outsl
bound
es
mov
jno
ret
je
mov
jne
dec
scas
cmp
jbe
mov
pop
adc
mov
inc
lods
mov
incl
pop
mov
imul
movsl
in
fsubrl
es
lods
cmp
repnz
arpl
pop
mov
cli
pushl
push
fdivr
add
in
pop
jbe
std
xor
jmp
add
xchg
inc
cmp
sub
mov
in
mov
filds
punpckhbw
into
add
ss
pop
adc
xor
insb
push
insb
mul
pop
mov
outsl
mov
movsb
jae
mov
pop
jbe
and
push
negb
stos
bound
jb
add
outsl
sahf
dec
movsl
sbb
es
xor
test
pop
fdiv
repnz
jns
sub
jecxz
lcall
sub
fs
sub
xor
insl
ljmp
jno
loop
mov
out
bound
in
mov
movsl
push
je
and
lahf
xor
rcrb
scas
lea
lods
scas
mov
clc
outsb
hlt
inc
push
jbe
adc
xor
mov
daa
dec
sub
cmpsl
arpl
xor
fildl
out
rolb
fldl
and
sub
outsl
jno
dec
pop
jl
mov
hlt
add
addr16
dec
xor
and
aaa
lds
imul
gs
adc
insl
lods
pop
ja
add
sub
mov
pmulhuw
lods
in
jae
std
addr16
lea
xor
in
outsl
pop
mov
imul
inc
mov
mov
adc
cmp
jb
outsb
in
pop
pop
dec
add
xor
movsb
cmp
inc
jne
mov
jno
sub
jnp
pop
in
jb
mov
lods
and
add
sbb
jae
gs
jecxz
dec
pushf
inc
sbb
xor
jbe
mov
inc
in
xchg
es
shrb
cmovne
imul
jbe
daa
xor
or
shll
pushf
clc
push
jae
cmp
pmaddwd
outsb
data16
dec
arpl
dec
out
aas
cmc
adc
mov
or
or
sub
popf
pusha
mov
mov
push
mov
dec
fidivl
xchg
daa
fidivrl
xchg
pop
cltd
jl
pop
jl
cmp
popf
lock
outsl
inc
popf
je
ficoml
mov
jae
jno
mov
mov
mov
mov
sbb
xor
jno
xchg
xchg
xor
cmpsb
push
push
andl
lock
pop
mov
rcl
repz
jae
xor
and
movsl
sti
in
ja
dec
cs
jge
negb
mov
push
dec
and
inc
adc
dec
sbb
ret
popf
dec
mov
inc
sub
aas
ficomps
fildll
js
insb
aam
cmp
leave
lea
jp
xor
sbb
lea
mov
sbb
and
mov
dec
mov
loop
and
cmp
xlat
lea
sahf
stc
adc
mov
xor
pusha
rorl
lea
pushf
aam
jno
dec
mov
sub
out
gs
xchg
popf
fs
pop
in
lock
xor
jno
pop
add
adc
enter
das
adc
add
jbe
int
xor
loopne
icebp
jg
push
and
mov
js
mov
outsl
scas
cmp
pop
sahf
xor
adc
repnz
pop
lods
sub
pmaddwd
add
sub
lcall
js
push
bound
loope
mov
jne
ficomps
pop
sub
scas
jb
dec
push
and
jge
push
lods
jb
mov
sbb
popa
movsl
xor
imul
adc
dec
in
dec
jp
mov
lds
jae
jnp
jae
push
lock
adc
inc
mov
loope
inc
cltd
sahf
pop
mov
icebp
jge
lods
insb
in
mov
jae
ss
test
push
mov
xchg
arpl
push
pop
mov
std
sahf
push
icebp
cld
inc
jmp
push
stos
xchg
ret
ret
vrsqrtps
arpl
int3
frstor
inc
cmp
pop
sub
mov
xchg
sbb
mov
jno
pop
mov
and
pop
mov
dec
in
dec
clc
fdivrs
jge
cltd
mov
pop
add
add
and
aaa
rcrb
cmp
popf
shl
mov
and
hlt
jmp
loopne
mov
leave
xor
add
loope
push
insb
add
jecxz
mov
xor
or
or
dec
pop
int
test
fucom
push
xor
xchg
loopne
adc
lods
inc
es
in
pop
in
sub
hlt
rorb
aaa
sub
push
ret
and
push
inc
cmp
cmp
outsl
es
or
push
lahf
jp
xchg
das
jnp
dec
mov
imul
insb
test
pop
ss
dec
xlat
idivl
out
sbb
jecxz
mov
call
pop
and
adc
cmpsb
xchg
clc
fldcw
jg
mov
and
popa
xor
call
jo
bound
dec
cwtl
nop
and
jne
out
call
lret
jle
jge
rcl
or
pop
sbbl
mov
pop
in
sub
je
and
or
pop
pop
xor
gs
xchg
or
xchg
scas
xchg
daa
or
test
mov
insb
dec
lods
in
sahf
jno
and
xor
lea
push
xor
add
cmp
icebp
lods
das
int3
sbb
dec
mov
jle
lahf
icebp
pushf
inc
aad
orb
xchg
loop
sbb
push
in
inc
sahf
or
or
mov
dec
mov
das
jbe
cli
sbb
cmp
push
dec
movsl
add
add
lock
das
loope
popa
imul
push
ljmp
mov
lods
mov
xor
push
sub
lahf
jle
movsb
sub
inc
in
cmpsl
loop
mov
pop
push
jmp
leave
and
xor
ljmpw
mov
jbe,pn
mov
or
jbe
bound
jl
icebp
icebp
lcall
mov
addb
ret
popa
cmpsl
popf
arpl
jnp
filds
sub
cmp
sbb
jo
rcl
enter
push
movsl
inc
or
je
xor
ja
jns
lea
scas
jno
xchg
cmp
cli
mov
mov
xor
xchg
add
bnd
or
xchg
ret
cmc
add
pop
cs
pop
jbe
enter
push
adc
sbbb
mov
push
ficoml
das
inc
loopne
sub
adc
jns
shll
jge
push
outsl
xor
push
push
cmp
sub
sub
dec
fdiv
push
mov
fisubrl
imul
xor
dec
inc
cltd
leave
outsl
inc
dec
jns
imul
push
stos
leave
mov
cld
cmp
inc
dec
dec
mov
dec
cltd
fldl
popf
cli
mov
loope
pop
sbb
sub
lahf
lcall
xchg
stos
nop
repnz
movsb
or
pushf
imul
iret
inc
popa
repz
test
ds
pop
mov
xlat
mov
pusha
mov
cmp
jb
inc
add
mov
ljmp
dec
outsl
mov
mov
and
sbb
cmpl
xchg
push
mov
pop
lret
add
icebp
stos
push
xchg
push
xchg
in
mov
fldenv
sub
and
add
jmp
fstps
jno
push
cmp
pop
cltd
pop
inc
lret
insb
sbb
push
gs
bound
jmp
in
sbb
pop
push
push
es
iret
dec
andl
inc
add
lea
sahf
adc
mov
sub
lret
insl
cld
js
jmp
cltd
adc
xor
xchg
lods
daa
lea
pop
ja
push
imul
test
mov
or
into
ret
pop
add
or
daa
jecxz
filds
xchg
jl
test
add
bound
and
push
shufps
loope
pop
or
shlb
mov
inc
and
sub
mov
mov
scas
sub
imul
jns
in
add
jns
lahf
sbb
cli
jbe
imulb
dec
jo
fistps
repz
cltd
mov
xor
scas
inc
dec
xchg
adc
es
jl
mov
xor
orl
loopne
ret
jl
add
idivl
cwtl
cmp
andb
outsb
daa
mov
cmc
ljmp
and
dec
cmp
mov
push
mov
add
pop
pusha
lock
hlt
mov
dec
repz
jae
mov
or
subl
in
shl
loop
lds
jnp
mov
ljmp
ret
sbb
push
push
mov
mov
ret
jne
aad
dec
mov
jle
add
cmp
in
imul
and
sbb
or
aad
dec
mov
fdiv
and
lea
out
movsb
xchg
imul
inc
pop
jge
add
lds
mov
push
repz
cmp
es
dec
xor
dec
adc
cmp
icebp
fwait
mov
popf
jp
stos
mov
sub
dec
jp
jne
cmp
das
mov
loope
cmp
mov
dec
mov
mov
mov
outsl
out
sub
pop
stc
scas
adc
lcall
loope
arpl
mov
roll
mov
jg
insl
add
jne
out
pop
imul
outsl
lds
cli
fwait
mov
xchg
mov
loop
in
xchg
mov
jle
aad
outsb
mov
jae
bound
sub
cmp
jne
testl
sbb
mov
aad
sub
repnz
ljmp
adcb
mov
bound
add
loopne
jge
stc
jcxz
jae
addr16
dec
push
push
dec
sub
gs
jae
jb
loopne
push
mov
stc
jns
mov
div
inc
jae
pop
inc
pop
lea
sub
dec
insl
sub
mov
mov
inc
sahf
fdivl
dec
sbb
imul
inc
mov
cmp
divb
pop
pop
push
fsubr
bound
imul
adc
push
adc
ds
push
insl
sub
daa
das
daa
xor
leave
insl
mov
push
pop
stc
lahf
pop
pop
popa
dec
lret
fsubr
xor
inc
hlt
push
imul
js
pop
dec
inc
pop
daa
pop
lret
hlt
aaa
sub
ljmp
pop
addb
xor
add
xchg
jge
insl
in
mov
xor
lret
outsb
xor
dec
and
scas
push
mov
jmp
cmp
std
pop
std
dec
rorl
popf
jno
imull
mov
mov
filds
pop
sub
add
jo
in
push
aad
loopne
mov
jae
sbb
lods
sub
in
xchg
popa
xor
add
add
div
mov
in
pop
xlat
lds
xchg
jp
sti
sub
lea
jle
ret
fiadds
fs
insl
pop
adcl
out
fsubr
sub
jmp
imul
xor
push
sarl
dec
push
mov
xor
imul
imul
mov
xor
mov
cmpl
dec
xor
mov
pop
add
dec
dec
dec
mov
jo,pn
fimull
dec
dec
inc
pop
push
jo
dec
jnp
ss
mov
jo
push
gs
dec
in
dec
sahf
add
xor
mov
pop
enter
ret
int
int
inc
sub
mov
cmpl
insl
in
mov
inc
in
xor
add
movd
outsl
adc
pop
movsl
xchg
insb
cmc
neg
pop
lea
fcompl
scas
xor
or
dec
xchg
or
gs
imul
jge
pushf
xchg
jecxz
lea
movsl
mov
clc
popf
aaa
ficompl
xor
jne
add
fistpl
pop
xchg
add
jmp
jae
xor
adc
jno
xchg
pshufd
dec
jmp
jb
mov
pop
ljmp
mov
mov
aaa
sahf
mov
imul
outsb
arpl
dec
hlt
clc
jbe
inc
xchg
push
scas
xor
push
cmp
mov
push
les
adc
dec
popa
mov
push
push
loopne
push
imul
jns
pop
insl
in
mov
cltd
sbb
inc
push
jae
shrl
xchg
xchg
mov
lea
gs
pop
pop
fsubs
jno
aad
push
inc
sti
repnz
je
insl
insb
jbe
adc
clc
push
mov
dec
pop
xor
test
mov
sub
jo
mov
inc
and
jnp
pop
dec
repnz
imul
mov
jmp
xchg
mov
push
add
cmpsb
push
inc
push
sub
data16
lods
jno
mov
push
aad
push
pushf
xor
sub
dec
lods
scas
outsb
xor
hlt
xor
insb
push
mov
cltd
arpl
lea
jns
mov
iret
push
dec
mov
ficompl
in
dec
roll
xacquire
hlt
jbe
fcompl
je
dec
aad
clc
popf
dec
mov
adc
insl
das
js
int
push
imul
jne
cmp
add
and
je
out
lods
sub
inc
inc
in
movsl
movsl
leave
repz
in
push
pop
dec
shr
je
jae
xchg
into
inc
je
xchg
mov
imul
mov
outsl
lds
out
mov
xor
push
loop
pop
push
push
jno
push
rcll
jl
cmp
add
fwait
push
fldcw
dec
mov
in
jns
daa
xor
orl
mov
sbb
jae
add
pop
sarl
mov
insl
jmp
ja
sub
jl
in
inc
xor
inc
add
jno
je
aad
adc
enter
pop
mov
decb
out
push
in
jns
in
push
push
sub
push
ficoml
sub
rorl
das
pushf
movsl
dec
lods
into
xor
mov
sbb
outsl
cwtl
xor
sub
xor
mov
mov
sbb
fs
cltd
ret
inc
pop
mov
imul
loope
dec
in
fs
out
adc
imul
imul
insb
xor
insb
jb
and
mov
inc
hlt
cmp
mov
outsl
jb
pop
xor
lahf
mov
mov
popf
inc
adc
jecxz
pop
fisubrl
pop
test
push
xor
stos
sbb
sub
mov
outsl
imul
test
mov
ja
btc
xor
xor
popf
dec
rorl
dec
jns
jge
aam
mov
imul
mov
push
xchg
jb
sub
pushf
push
mov
mov
lea
adc
push
mov
cmc
add
mov
jnp
cmp
and
negl
jno
outsl
mov
fst
leave
jne
ja
data16
les
sti
dec
dec
out
repz
sub
push
jp
pop
add
scas
imull
xor
adc
aad
mulb
mov
inc
jb
sub
sub
cmpsl
sub
mov
iret
jb
jle
or
or
jmp
mov
pop
cltd
orl
xor
js
inc
adc
push
mov
clc
push
cmp
or
jp
jne
fmul
imul
lret
insl
dec
or
lea
outsl
lods
notl
shlb
insl
subl
mov
popa
insl
shrl
xor
jne
cmc
jl
cmp
clc
jp
mov
insl
imul
push
bound
mov
test
out
lea
inc
jno
cmp
sub
cmp
adc
popf
int3
dec
sub
mov
jo
mov
scas
mov
xchg
jae
stos
pop
jo
rclb
sbb
sub
jae
ljmp
and
xchg
in
sub
push
jge
adc
add
pusha
pop
dec
jae
mov
in
jge
je
pushf
dec
pop
andl
and
push
sub
xor
mov
arpl
jge
push
test
cmp
mov
loopne
jo
sub
mov
lods
gs
xchg
sub
mov
adc
enter
imull
mov
dec
loop
mov
jmp
iret
arpl
pop
fucomp
imul
sbb
inc
fsubrl
addr16
shlb
frstor
push
sbb
push
jecxz
xchg
xchg
xor
xor
jge
push
lea
imul
adc
je
lds
and
roll
sbb
mov
push
loopne
repnz
cmc
dec
mov
mov
outsl
cmp
add
xor
or
cld
add
adc
imul
xchg
and
loope
pushf
adc
movsb
add
jg
dec
xchg
and
leave
inc
imul
adc
movsl
sarb
leave
std
dec
jmp
jns
out
and
pop
dec
rorb
iret
cmp
lods
in
fsubr
or
mov
call
adc
jmp
mov
bound
repz
pop
dec
mov
inc
xchg
sub
xor
cmp
mov
popa
daa
pop
data16
call
in
jmp
push
insb
imul
jb
jb
adc
das
inc
push
dec
or
mov
sbb
push
inc
jno
ret
jmp
out
mov
adc
xor
sbb
mov
sub
ljmp
rclb
insb
pusha
lea
pop
dec
cld
les
repnz
imul
nop
sbbb
xchg
push
mov
xor
xchg
pop
pop
fs
pop
xor
inc
mull
mov
in
push
mov
xor
sbb
mov
cmp
shl
lock
rcll
push
mov
pusha
ret
push
add
dec
hlt
cmp
or
lea
push
je
sub
lds
shl
xchg
push
pop
dec
mov
pop
xchg
int
sti
movsl
jl
jge
std
out
movsb
or
pop
pop
subb
xor
testl
sub
xchg
ret
xor
pop
sub
aad
pop
sbb
mov
jae
subl
gs
hlt
arpl
insl
pop
inc
insl
xchg
bound
outsl
ljmp
sub
data16
adc
add
lea
or
jg
arpl
jp
cmp
or
ja
sub
lods
arpl
sbb
aam
dec
fisubrs
pop
xor
out
sar
xchg
sub
in
cld
sbb
sub
out
jmp
jns
dec
dec
pop
mov
jbe
icebp
adc
and
push
out
add
jmp
imul
insl
insl
insb
xor
imul
jo
test
xor
fs
pop
je
pop
jae
push
mov
cmp
ret
fs
in
pop
imul
notb
mov
push
push
jne
sub
mov
jmp
adc
test
cmp
xchg
lods
adc
inc
push
es
jmp
lea
shll
dec
ficompl
dec
out
in
lock
cmpsb
dec
add
pop
inc
mov
inc
subl
inc
sbb
sti
rcll
into
rolb
jno
aad
lods
pop
dec
and
cmp
movsl
push
gs
adc
lods
jmp
pop
popf
sub
or
adc
cmp
insl
mov
daa
pop
lea
ds
sub
dec
in
leave
pop
icebp
in
xlat
push
in
mov
in
push
fnsave
insl
add
push
mov
sbb
arpl
xchg
mov
mov
xlat
bound
or
lret
push
xor
inc
mov
sub
repnz
add
imul
outsb
pop
aam
mov
mov
imul
push
bound
pop
lods
mov
and
ljmp
mov
pop
pop
dec
mov
pop
das
call
pop
lahf
cmp
imul
je
pop
jb
xchg
inc
mov
inc
cmp
add
sub
mov
mov
mov
outsl
jns
imul
xchg
push
xlat
idivb
imul
add
in
mov
jl
push
push
fs
sub
aam
imul
mov
imul
je
popa
call
and
scas
jae
lret
aad
xor
popa
ret
and
in
cli
pop
jb
mov
xchg
insl
int
xor
inc
and
add
dec
add
mov
mov
jne
dec
mov
gs
mov
jg
adc
in
or
or
xlat
test
push
ss
jae
je
mov
jae
cmpsl
add
scas
stos
or
xor
add
loopne
and
data16
and
enter
push
pop
inc
aam
inc
sub
ds
fsubs
mov
aam
popa
sbb
lock
push
mov
mov
mov
jge
lods
jp
data16
int3
in
push
rcrl
popa
mov
xor
lea
sub
adc
mov
pop
fdivl
es
clc
push
insl
add
fisubrs
cmp
push
lods
or
and
push
inc
push
cs
jne
dec
xor
pusha
add
push
clc
icebp
in
icebp
mov
jmp
addr16
jl
lock
lea
xor
mov
insb
arpl
in
in
icebp
pop
dec
and
add
jle
in
pop
in
pop
mov
push
loope
fwait
jge
adc
in
xchg
jbe
das
test
push
mov
fldenv
stos
js
cmc
xor
inc
and
insl
nop
sbb
xor
add
lods
jge
pop
mov
movsl
icebp
and
aad
pop
mov
mov
loop
outsb
subl
stos
xchg
jmp
scas
xorb
cmp
sub
ficompl
cmp
jns
inc
loopne
mov
in
push
cmp
outsb
cld
dec
int3
jno
cmp
push
adcl
mov
push
sbb
insb
lahf
adc
jle
into
jmp
leave
adc
dec
lea
pop
inc
jg
mov
call
inc
lods
ljmp
inc
lea
mov
xor
and
sbb
ljmp
imul
mov
fsubrl
cmp
jge
hlt
arpl
pop
scas
insl
in
jae
push
in
pop
or
inc
sub
lcall
nop
sub
sub
sub
sub
lahf
jecxz
cli
pusha
mov
out
jmp
int
xor
pop
pop
lret
int
dec
in
pop
inc
push
pop
shlb
je
add
in
adc
test
aaa
sub
inc
imulb
in
push
sbb
test
nop
imul
sbb
cmp
clc
ja
aam
outsl
mov
jno
push
add
cmp
lcall
leave
out
call
jbe
xchg
dec
mov
pop
ja
movsb
imul
xchg
mov
gs
pop
test
pop
and
cld
pop
addr16
jge
test
mov
xor
jb
or
bound
pop
sbb
jb
jb
jmp
cmp
call
and
lea
in
mov
and
sub
push
mov
push
repz
dec
mov
ds
negb
or
stc
fs
insb
xchg
dec
bound
jmp
pop
jg
sub
inc
xor
cmp
push
arpl
cmp
jp
notl
pop
test
icebp
push
lods
jl
repz
dec
jecxz
arpl
mov
or
repz
add
bound
xchg
mov
fs
ljmp
sbb
ds
cld
loope
imul
dec
outsl
xchg
lret
cmp
ss
push
scas
lahf
xlat
cmp
push
lods
shld
ja
jns
mov
push
lretw
push
inc
or
int3
pop
cmc
test
add
mov
shlb
pop
or
inc
dec
jmp
and
push
gs
movsb
dec
pusha
ss
mov
mov
insl
aam
sub
cmp
sub
push
fmuls
inc
xor
inc
ljmp
js
pop
lods
pop
mov
subl
out
cmpsl
lock
lret
ret
adc
add
sbb
push
adc
and
jle
lea
or
xor
adcl
cli
repz
test
push
repz
xor
test
lea
ja
inc
jge
add
pop
decl
insb
or
jo
sub
dec
push
mov
mov
nopl
cmp
pop
cmc
cmp
repz
outsl
adc
popf
loopne
jg
dec
add
sub
mov
adc
jo
pop
jp
hlt
cmp
ret
gs
xor
mov
and
shrb
fidivrl
in
out
rcll
insb
addr16
lds
add
pop
test
sub
es
push
jne
shrl
enter
cltd
rcrl
push
mov
and
dec
gs
popf
pop
xor
fldt
lock
sub
and
popa
repnz
jle
sbb
popf
inc
std
das
aam
cmc
lret
loopne
pop
pop
xor
mov
movsl
lods
adc
inc
enter
push
push
es
push
loop
lcall
mov
gs
mov
dec
xor
or
push
hlt
fs
repz
imul
inc
lahf
dec
in
jl
mov
cmpsl
imul
shll
popa
scas
fdivrs
and
push
insl
imul
mov
out
add
mov
inc
sbb
jb
dec
dec
adc
xor
fcoms
push
repz
in
pop
and
imul
in
stc
and
push
cld
jl
out
adc
jl
insl
cmp
psraw
insl
lock
push
je
repz
xor
push
sub
sub
and
arpl
sub
and
hlt
pusha
imul
mov
sub
sub
mov
les
jmp
fdivl
add
pop
aad
imul
jmp
sbb
rorl
cmp
xchg
lret
test
mov
pop
stos
pop
sbb
xorps
xor
in
dec
add
dec
cld
adcl
dec
cwtl
loop
xchg
xor
add
enter
mov
push
pop
incl
outsb
mov
lods
xchg
xchg
int
test
aam
inc
jo
insl
mov
mov
push
ljmp
add
mov
out
stos
in
test
xlat
jns
fldl
sbb
push
mov
jbe
rolb
xchg
ss
and
mulb
mov
adc
imul
arpl
adc
pop
lahf
gs
arpl
push
in
or
test
out
loopne
lock
xchg
push
aaa
mov
mov
gs
jns
mull
gs
inc
lods
inc
into
or
cwtl
adc
mov
xchg
lds
mov
daa
and
mov
dec
dec
lea
lcall
rcr
hlt
inc
mov
push
or
lods
jg
shl
inc
xlat
sub
mov
sub
adc
fs
push
test
xchg
in
cmp
iret
add
mov
push
js
bound
push
jo
lock
xchg
insl
in
outsl
push
mov
leave
mov
lea
daa
mov
sub
dec
lea
vpxor
insl
add
insl
call
int
pop
or
lcall
mov
imulb
push
fidivrs
sub
push
jb
test
and
out
cmpsl
insl
lea
mov
mov
dec
sarl
sub
xor
jbe
in
shrl
push
jecxz
cltd
xchg
dec
in
jno
ljmp
jae
lock
ret
jg
in
test
sbb
cs
adc
repnz
dec
mov
sub
or
pushf
int
add
jne
cmp
jno
xchg
adc
or
sbb
sub
mov
scas
add
pop
jno
add
mov
cmp
push
mov
sub
repnz
shlb
into
jge
xchg
inc
in
das
insl
mov
inc
mov
jmp
scas
mov
insb
scas
gs
jns
jge
insl
and
cmc
repnz
lds
dec
sbbb
inc
hlt
push
ljmp
fcomps
push
jecxz
and
nop
cmpsl
ret
pop
pusha
es
gs
mulb
inc
mov
test
xchg
enter
fs
jmp
fs
test
std
or
ret
xchg
fidivl
loope
jb
dec
jns
lods
or
jmp
leave
adcl
sub
repnz
mov
mov
bound
push
xor
mov
mov
pop
and
xchg
insl
pop
out
and
insl
sbb
jno
add
mov
xor
jb
imul
mov
gs
imul
mov
ss
xor
loop
or
dec
mov
hlt
or
in
add
and
into
insl
push
or
lods
repnz
mov
aaa
jle
daa
jge
push
jp
and
test
out
xor
cltd
pop
jno
add
fcoml
xor
xchg
sub
pop
add
mov
test
adc
insb
dec
shlb
jge
xor
ret
sbb
fdivl
push
xchg
lock
xor
mov
sub
xor
jge
popf
pusha
xchg
dec
push
gs
test
test
fchs
sbb
and
or
arpl
hlt
aaa
clc
jae
inc
imul
cmp
add
mov
aam
jns
ljmp
int3
sub
loope
je
repz
push
pop
icebp
cmp
int
push
leave
out
xor
cld
jnp
adcl
data16
mov
jge
mov
lods
ljmp
cmpsb
lret
call
pusha
push
mov
shll
mov
je
inc
insb
loope
mov
jae
sub
aam
cmp
jbe
cmp
pop
arpl
rclb
rorb
mov
repz
imul
in
and
sub
inc
mov
orl
lret
inc
sub
imul
jae
mov
repnz
mov
dec
or
push
adc
ljmp
mov
into
test
adc
mov
pop
jmp
popa
adc
jbe
leave
mov
jnp,pt
mov
test
xor
push
shr
subl
cmp
cmp
pop
pop
mov
sti
scas
xchg
faddp
adc
in
xor
pop
notb
loop
pushf
cmp
repz
add
mov
movsb
mov
pminsw
das
inc
fsubrs
jge
xchg
lret
stos
cmpsb
mov
mov
loope
scas
inc
push
jge
lahf
adc
lock
xor
xchg
sbb
int
hlt
cld
jg
das
mov
jge
insb
and
in
and
adc
std
jl
leave
pop
hlt
inc
lcall
xor
jge
outsl
divl
cmp
sub
addr16
ss
push
and
mov
fs
rorb
scas
mov
insb
jmp
movsl
in
xor
mov
sbb
push
ljmp
ret
movsb
xor
andl
dec
movsl
ja
stos
add
sub
pop
add
dec
add
cmp
gs
push
dec
inc
loop
jg
or
ret
sub
xchg
add
push
movsl
mov
cmp
mov
mov
and
sub
fsts
sub
jecxz
mov
jmp
loopne
repz
repz
aam
cmp
jge
jecxz
mov
mov
test
subl
pop
insl
xchg
aam
aaa
in
out
sarb
subb
pop
clc
xchg
mov
in
xchg
lea
jecxz
adc
jo
insl
call
xor
pop
or
jle
sub
mulb
jno
xchg
fwait
addb
jp
xor
subl
aas
add
sbb
and
cmp
jecxz
xchg
dec
inc
jns
jns
icebp
fs
in
dec
adc
mov
push
lock
push
lds
or
jo
outsl
jae
jno
insl
insb
gs
imul
fsin
daa
jbe
jo
ror
stos
adc
lds
mov
and
lds
pop
leave
insb
aaa
ds
xor
cmp
sti
popa
fdiv
sub
aaa
xor
lods
push
xchg
xchg
push
xor
jge
pop
nop
sbb
imul
stc
mov
mov
data16
mov
sahf
ja
leave
adc
add
fstpl
push
xchg
pushf
ja
fwait
push
jmp
imul
outsl
lea
xor
lea
enter
mov
mov
dec
ljmp
gs
push
push
ds
jb
int
aam
sub
jmp
pop
adcl
and
xor
inc
fucom
pop
loopne
arpl
fcompl
push
aad
shr
in
jae
call
mov
fs
fstps
jecxz
pop
and
xchg
sub
dec
call
out
lock
in
mov
dec
add
adc
push
js
outsb
outsb
movsl
repz
adc
pop
sub
add
mov
lods
jl
cmpl
and
mov
inc
mov
cmp
loopne
gs
adc
mov
lods
cmp
dec
inc
dec
icebp
repz
shl
mov
dec
mov
aas
inc
cmc
xchg
ljmp
mov
xchg
xor
pop
mov
push
mov
popf
inc
hlt
mov
fbstp
push
sarl
in
insl
test
cmpsb
in
loopne
ret
scas
out
mov
cmp
gs
sub
hlt
stc
xchg
push
pop
xor
or
xor
mov
clc
push
in
stc
jae
mov
in
cmp
sub
popa
pop
aam
jo
xor
jp
fisubl
in
das
loopne
xchg
popa
hlt
insb
lea
nop
and
in
insb
test
out
imul
popa
dec
les
jbe
mov
loopne
and
add
in
adc
pop
addl
insb
push
insl
and
xor
jne
je
gs
push
imul
cmc
fwait
mov
das
push
jno
fbstp
popa
mov
or
xorl
test
mov
mov
pmuludq
cld
subl
aad
popa
mov
sti
jb
sub
idiv
mov
inc
cmc
xchg
sub
add
je
hlt
std
jo
sub
lods
ja
ja
fnstenv
jae
mov
loopne
sub
push
pop
xor
int
inc
xlat
add
mov
push
loop
lahf
cld
sub
or
inc
lods
push
pop
outsb
movb
cmp
jg
lock
cmp
xor
data16
pop
dec
jecxz
int
rolb
pop
test
mov
inc
jge
mov
loope
enter
jp
push
int
int
out
or
xor
pop
scas
xor
sub
stc
lcall
push
pop
rcll
mov
cmp
js
sbb
lea
pop
cmc
and
sbb
clc
mov
push
inc
jl
imul
loopne
sbb
mov
imul
ret
std
dec
movsl
inc
dec
idivb
xorb
and
sbb
push
push
push
aas
jbe
sub
and
imul
inc
clc
cli
mov
lods
push
notl
loop
daa
sub
push
pop
leave
lock
adc
mov
or
push
cmpsb
ja
xor
xor
push
pop
cmp
cmp
imul
mov
scas
push
loope
push
fstpl
mov
popl
push
pop
cmp
ljmp
xor
push
out
jb
sub
lods
test
pop
ret
push
cmp
push
push
nop
fs
call
sbb
testb
or
imul
rcll
mov
mov
inc
aad
jmp
orl
dec
dec
sbb
flds
add
icebp
jmp
adcl
sub
mov
rorl
imul
js
scas
sub
lods
mov
icebp
adc
cltd
cmpsl
jno
sbb
push
dec
lret
inc
inc
lret
sbb
lea
jmp
dec
daa
mov
xor
dec
filds
in
cwtl
cs
push
insl
or
outsl
xor
xchg
adc
sub
data16
push
in
pushf
inc
add
fcomps
mov
sub
in
dec
jge
dec
push
lahf
push
jp
dec
xchg
mov
mov
outsb
or
xor
lods
pop
sbb
int
sbb
mov
jno
mov
and
mov
fs
adc
fs
movsl
sbb
shll
adc
lea
repnz
pusha
sbbb
add
fsts
push
sbbl
jne
dec
popf
add
in
aaa
xor
ret
lret
push
test
int
add
dec
stc
imul
jae
lods
and
jge
inc
ljmp
in
inc
inc
cmp
loop
popf
jne
push
mov
add
jo
scas
jo
ljmp
popa
xor
in
je
lret
lret
sbb
imul
pop
punpcklbw
nop
std
aam
jb
mov
inc
jae
mov
lea
cmc
inc
mov
aaa
xor
stc
push
arpl
arpl
enter
fsts
sub
sbb
sub
cmp
cwtl
fcompl
das
les
inc
pop
add
loope
dec
in
pop
dec
loop
and
sbb
movsb
jmp
in
jae
xor
sub
jmp
pop
frstor
aam
jnp
jle
mov
orl
cmp
cmp
jo
mov
push
lds
cwtl
outsb
pop
sub
or
iret
push
movsl
or
loope
rcrl
cmp
and
ljmp
sub
and
sub
or
jl
or
gs
xor
out
sub
lds
mov
pop
push
outsl
jbe
mov
stc
int
sub
sbb
popa
mov
dec
icebp
and
sub
out
loop
mov
mov
adc
jge
push
mov
int
xor
pop
gs
xchg
xor
dec
mov
xor
bnd
inc
mov
repz
sub
orb
lock
mov
icebp
int3
ds
jae
fs
pop
mov
sub
mov
mov
xorl
push
mov
and
dec
mov
dec
test
imul
mov
xor
in
or
gs
and
in
adc
mov
push
and
pop
and
mov
int3
insl
icebp
mov
sub
jge
push
adc
insl
lods
in
repz
outsb
int
add
sbbb
dec
adc
cs
push
gs
mov
xor
cmp
lods
ficoml
mov
push
adc
push
add
lret
data16
stc
add
adc
mov
lret
out
pop
xchg
dec
add
pop
xor
and
add
and
mov
xor
scas
js
test
adc
scas
negl
loope
mov
adc
js
movsl
sbb
adc
or
jno
in
adc
shrb
add
push
push
adc
fnstsw
gs
push
and
or
negl
int
mov
sub
xor
clc
xor
shll
add
ds
sub
sub
push
mov
adc
jns
xchg
icebp
or
cmp
push
jns
push
mov
xchg
mov
popa
dec
sbb
pop
xor
addr16
sbb
mov
repnz
mov
xor
arpl
inc
clc
arpl
jns
jo
sbb
dec
and
cmp
andl
pop
jnp
cmp
orb
ret
nop
pop
jno
sub
xor
inc
mov
cmpsl
sbb
push
rclb
outsl
pop
imul
ficomps
jnp
cld
je
or
or
add
notb
bound
cld
xor
dec
mov
test
jae
xor
imul
xchg
and
ljmp
in
mov
dec
dec
jmp
insl
mov
push
xor
lret
mov
stos
xchg
add
inc
adc
lea
psrad
call
daa
xchg
rcrl
xor
mov
daa
imulb
stc
les
mov
outsb
psrld
in
ja
outsl
inc
mov
test
popa
scas
in
jbe
sbb
push
lock
lret
dec
dec
add
addl
outsb
mov
ljmp
or
pop
leave
xor
sbb
mov
ret
sub
insl
into
mul
negl
cmpsb
and
jmp
rcl
dec
jae
nop
insb
pop
sbb
mov
lret
or
jno
mov
xchg
sbb
add
and
int
lods
inc
inc
and
popa
mov
and
dec
cmc
jp
add
pop
mov
pop
in
xor
push
and
shld
and
mov
rcrb
mov
pop
pop
scas
das
imul
xor
aam
or
lea
gs
daa
or
movsb
add
insl
jg
inc
add
push
in
test
insl
les
fwait
sbb
or
sahf
cli
shrl
pop
pop
mov
push
scas
and
insb
popa
insl
mov
adc
mov
and
push
pushf
shll
out
imul
pop
and
dec
gs
call
addr16
jecxz
stc
addr16
test
push
xor
jle
mov
xchg
int3
data16
loop
inc
bound
pop
loop
mov
jp
les
mov
je
sbb
push
inc
add
insl
lock
aad
stc
fmuls
mov
inc
sub
mov
xor
cmp
xor
mov
sti
cmp
jnp
push
xor
jns
push
pusha
jge
outsb
push
nop
push
lds
push
cmp
sbb
xor
dec
and
and
scas
dec
cmp
addl
repnz
add
lods
sub
repnz
push
and
lods
adc
mov
jnp
mov
out
pop
jae
outsl
dec
pop
repnz
pop
sub
pop
insl
insb
js
int
jp
inc
mov
pusha
lods
cmc
jl
sub
pop
icebp
sbb
pop
lret
pop
jp
ja
outsb
jb,pt
lcall
cmc
ss
push
push
xchg
jae
subb
jbe
popf
out
inc
fwait
cltd
lock
mov
out
in
imul
rcll
inc
lcall
mov
faddp
push
add
in
xchg
mov
enter
fldt
aam
mov
xchg
lahf
sbb
pop
arpl
test
dec
fs
push
popa
mov
pop
fs
ret
fs
insl
sub
xor
imul
clc
in
xchg
push
push
xor
cmp
jae
dec
push
push
xor
leave
push
lds
loopne
int
clc
in
aad
adc
inc
xor
xor
in
arpl
push
hlt
sub
in
add
dec
cltd
xor
adc
xchg
sub
in
aaa
push
je
xor
inc
xor
cmp
in
lahf
inc
cmp
arpl
cmp
pop
sub
adc
int
adc
mov
adc
in
xchg
pop
sub
mov
popa
sub
pop
xchg
imul
sub
imul
pop
fs
or
jns
mov
push
jge
pop
sbb
subl
sub
insl
xchg
lea
hlt
cmp
xchg
sub
and
push
inc
imul
cmp
test
lods
push
in
inc
imul
imul
adc
pop
in
cmp
inc
cmp
fdivl
push
sub
adc
cs
add
int
inc
ret
pop
mov
mov
lock
jmp
add
repz
xor
push
outsb
in
addl
mov
sub
dec
mov
pusha
xor
ljmp
lret
stos
ljmp
mov
imul
std
pusha
push
pusha
ret
adc
push
es
mov
cmp
push
push
fs
inc
jle
pusha
fldenv
fdiv
xor
in
call
fs
clc
lock
les
test
dec
notl
fdivr
push
inc
cmp
dec
jae
add
sub
repz
je
add
lea
aam
sub
push
pusha
push
popa
loopne
cmpsb
mov
add
movsl
mov
mov
dec
add
out
push
out
dec
fld1
cmp
xor
or
cmp
into
or
xchg
je
mov
add
andl
mov
jle
mov
pop
jmp
test
mov
ret
or
in
and
repnz
pop
hlt
xchg
jb
sub
xorl
dec
sub
pop
je
mov
in
je
cmp
and
jae
xchg
inc
xor
mov
and
or
push
pushf
sub
adc
aad
add
outsl
das
mov
in
je
jno
mov
lea
jne
cmpsb
pop
pop
xor
call
pushf
je
xchg
scas
xchg
inc
jae
cmp
loopne
sbb
and
stos
xor
xchg
mov
add
sub
pop
jge
iret
dec
and
xlat
mov
into
add
push
mov
sub
adc
sub
push
in
jmp
gs
scas
lea
clc
in
jo
cmp
fmull
cmp
out
mov
loopne
mov
iret
jns
insl
lods
add
popa
insb
jmp
icebp
mov
lock
aad
outsb
je
and
imul
dec
dec
jno
jne
inc
repz
negl
add
cmpsl
mov
imul
repz
mov
popa
pop
mov
mov
inc
pop
ljmp
insl
push
inc
addr16
fnsave
inc
xor
add
xlat
imul
jb
jbe
xor
mov
pop
jp
push
cld
in
insb
imul
cmp
jbe,pn
dec
jns
jnp
add
push
add
inc
arpl
add
cli
inc
dec
xor
je
sbb
popa
mov
and
xor
lods
addr16
das
cmp
scas
sub
lea
or
loopne
sbb
clc
int3
daa
ja
in
cli
les
pop
mov
push
stc
fs
push
popf
std
adc
mov
in
inc
test
es
sbb
sub
in
fldcw
sti
in
sub
fldcw
outsl
daa
mov
rorl
int
add
inc
xchg
push
mov
arpl
xchg
xor
test
pushf
mov
mov
mov
stos
sbb
mov
mov
jno
cmp
dec
cmp
mov
scas
jb
jb
pop
xorl
or
int
in
scas
pop
adc
xchg
mov
and
test
loope
mov
cmpsl
mov
push
fwait
pop
ja
inc
decb
pop
push
outsb
fwait
insl
jmp
cmc
xor
imul
mov
insl
pop
in
push
xor
cltd
jle
ja
enter
push
jle
dec
sbb
adc
mov
push
xor
scas
aad
cld
add
lock
out
mov
sub
push
icebp
repz
sahf
jge
add
jmp
inc
rcl
xor
and
jo
fcoms
mov
je
add
cmp
mov
push
mov
mov
fnstcw
mov
pop
enter
sbb
adc
dec
mov
into
pop
jno
cmp
dec
and
gs
insb
mov
movsl
into
mov
insb
insl
fdivr
cmp
aam
pop
sbb
cwtl
aad
sbb
inc
jb
jno
jp
test
push
cmc
icebp
lods
mulb
lods
aas
sub
out
jle
adc
testl
mov
iret
in
dec
xchg
mov
or
dec
xor
in
int
cmp
das
leave
lock
and
addr16
leave
repz
cmp
out
adc
insl
insl
add
mov
inc
sub
cltd
xor
stc
popa
push
jno
fs
pop
pop
js
pop
and
jne
lea
mov
inc
dec
shl
in
lods
imul
sub
xchg
mov
lock
aas
pop
sti
popa
push
or
fcoms
hlt
mov
cmp
sbb
push
add
shll
out
xchg
add
inc
mov
xor
aam
leave
scas
icebp
and
fidivrs
out
mov
fs
mov
insb
pop
push
iret
movsl
popf
cmp
call
or
fadds
loopne
popf
jge
iret
or
sbb
add
add
dec
push
jge
dec
xchg
jbe
xchg
ss
jo
sbbb
jmp
insl
add
xchg
push
push
gs
xor
gs
push
sar
mov
dec
push
dec
gs
icebp
in
in
gs
push
pop
mov
repz
mov
xchg
dec
icebp
fistps
adc
jl
insl
or
push
out
imul
pop
xchg
sbb
icebp
in
xchg
outsb
sbb
pxor
add
int
imul
insl
in
jge
sbb
roll
and
add
js
add
in
lods
out
std
gs
push
negb
aad
addr16
adc
push
pushf
lods
gs
data16
jle
rcrl
std
adc
pusha
and
and
inc
imul
and
lods
sbb
cltd
cmp
pop
push
mov
popf
repnz
rol
add
xor
inc
rcrl
push
out
mov
push
clc
gs
add
mov
mov
imul
insl
inc
out
xor
inc
test
jb
movsl
xchg
dec
mov
xor
inc
popf
pop
xor
push
mov
cltd
lods
in
xor
push
lret
imul
loope
xchg
lcall
cwtl
xchg
in
fcoms
popf
push
clc
and
out
push
xor
xor
push
cmp
subl
inc
xor
leave
lock
in
in
mov
repnz
push
test
popa
lea
push
or
adc
add
dec
clc
pop
mov
imul
pop
and
add
daa
mov
add
xor
adc
and
adc
mov
pop
insl
jnp
mov
pop
sub
arpl
push
fcoml
xor
in
es
inc
sbb
or
add
out
out
and
fcomi
nop
and
gs
lret
aad
pop
std
push
out
rcrl
repz
sub
je
pop
push
insl
sub
adc
insl
sub
jo
mov
sahf
test
pop
jmp
into
mov
fmuls
push
push
addps
dec
insb
xor
mov
mov
or
insl
push
mov
cmp
inc
or
fs
bound
insb
sub
cmc
outsl
aad
adc
pop
insl
leave
sub
jno
dec
push
xor
insb
arpl
xor
popa
dec
push
sub
mov
sbb
lock
sub
pop
add
lock
je
xor
pop
xchg
xchg
leave
pop
and
sbb
jns
sarb
adc
lea
lods
pusha
and
cwtl
nop
jb
loopne
sub
adc
xchg
pop
inc
out
adc
lds
dec
aaa
xor
push
cmovp
adc
xor
or
cld
out
std
pusha
data16
test
loope
adc
imul
mov
out
adc
mov
adc
adc
adc
or
xchg
popa
dec
add
add
adc
or
clc
sub
inc
or
jmp
pop
shlb
f2xm1
jns
adc
cltd
adc
cltd
cmp
out
add
cwtl
adc
xchg
loop
pop
aaa
adc
shrl
clc
lock
fdiv
stc
sub
sub
outsb
push
gs
jl
mov
adc
mov
and
xchg
int
xchg
ret
outsl
lea
mov
or
jo
mov
inc
sub
andl
xor
push
rcrl
aam
not
mov
loopne
and
sbb
in
stos
xchg
and
push
lahf
fsave
push
dec
popa
pop
lret
fs
adc
adc
gs
push
aam
adc
test
loope
mov
adc
push
movsb
pop
add
mov
push
popa
mull
pop
in
test
in
cmpsl
adc
adc
push
inc
sbb
push
adc
gs
jge
push
sbb
sbb
cmp
test
push
dec
cwtl
sbb
inc
mov
psllw
cmp
hlt
idivl
rorb
jo
push
add
dec
mov
dec
jge
ja
mov
sub
xor
push
insl
addr16
ss
fs
mov
xor
aas
orl
aaa
xchg
sbb
cmp
pusha
lock
push
sub
xor
push
pop
es
mov
and
sub
mov
inc
dec
insl
inc
int3
dec
adcl
mov
dec
push
sub
insl
adc
adc
les
dec
xor
fwait
sbb
xchg
xor
aam
sub
xchg
adc
shll
mov
cmp
pop
push
mov
out
in
and
clc
push
rcll
fs
dec
or
push
ljmp
fs
adc
pop
gs
and
sbb
in
pop
test
addr16
mov
enter
or
cltd
fstp
lods
jge
cmc
mov
xor
arpl
and
sbb
and
mov
mov
cmovle
push
imul
xor
ficoms
movsb
push
sarb
jl
lods
dec
add
bound
mov
mov
mov
movsb
push
pop
jp
or
in
out
jns
jo
and
lea
xor
movsl
xor
lock
xor
push
repz
xor
hlt
ljmp
sbb
or
cmc
mov
test
popa
loope
dec
pop
cmp
repz
sub
mov
stc
xchg
adc
dec
pop
aas
orl
push
push
pusha
enter
aaa
pushf
xchg
add
sub
popa
cmp
push
inc
notl
lret
mov
icebp
outsl
in
call
and
sbb
movsl
dec
mov
sbb
cmc
mov
jns
add
push
icebp
inc
jmp
outsl
jg
je
fists
pusha
shll
out
jns
pushf
adc
xchg
imul
xchg
loope
repnz
add
push
mov
fdivrl
mov
aam
mov
xor
push
mov
insl
dec
cwtl
and
scas
inc
scas
cmp
push
jmp
add
mov
dec
in
jmp
lods
popa
xor
ret
cmp
push
jae
and
lock
xchg
sar
push
cs
jns
shrb
repz
std
popa
sub
inc
sub
movsb
icebp
and
call
inc
arpl
adc
xor
rorb
and
lcall
clc
or
and
sbb
ja
add
jmp
push
xor
dec
mov
sahf
je
je
data16
xorl
xor
dec
sbb
adc
dec
je
imul
sbb
jnp
add
insb
lcall
in
push
mov
dec
mov
xor
int3
mov
mov
mov
ss
mov
outsl
jle
into
push
clc
add
pop
sbb
aad
push
cltd
in
jmp
int
sub
rcll
jb
in
rcr
xor
xor
mov
or
push
ljmp
in
xlat
mov
in
jp
fs
ljmp
sbbl
pop
repz
xchg
or
xor
add
inc
cs
add
jge
idivl
ljmp
sbb
xor
arpl
xchg
and
fwait
inc
mov
mov
int
rcll
adc
push
in
push
jmp
aaa
ret
xor
loope
shrb
jne
nop
js
jmp
jb
push
dec
in
fcomi
mov
test
jb
jbe
dec
xchg
inc
xchg
push
lahf
dec
cmp
in
imul
jle
push
pop
lock
loop
insl
insl
js
pop
jo
sbb
bound
iret
cmp
dec
push
xor
scas
xor
sub
or
es
scas
adc
mov
lcall
mov
jle
in
xlat
mov
mov
mov
aas
adc
dec
dec
outsl
ror
arpl
jnp
data16
das
cmp
or
cltd
pop
mov
adc
xor
and
sahf
notb
testb
aam
cmp
stc
fsubrl
mov
jle
ja
push
insl
cmp
cmp
outsb
jle
jge
mov
clc
and
daa
pop
xchg
icebp
pop
aam
cmp
push
enter
or
mov
outsl
divl
mov
pop
xor
bound
fs
mov
mov
leave
pop
mov
test
insb
mov
ret
fsubrp
bound
cltd
les
xor
push
jne
mov
sbb
in
mov
in
pop
push
sbb
nop
int
stos
jl
sbb
and
popa
aaa
xchg
aad
repnz
xor
lea
shrl
scas
scas
inc
pop
push
lds
test
clc
repnz
sbb
lds
lds
in
jae
rcrb
adc
sbb
xchg
sub
mov
imulb
pop
out
scas
gs
xor
rolb
icebp
int
cs
loope
icebp
lods
dec
adc
and
push
in
and
je
repnz
add
call
stc
cmpsb
cmc
add
movsb
inc
lea
add
jmp
fstl
xchg
hlt
adcl
or
lea
lock
repz
jnp
pop
ljmp
pop
in
mov
lea
push
out
mov
popa
arpl
ds
inc
ja
inc
sub
xlat
lods
insb
lret
in
push
mov
add
dec
sub
packsswb
push
adc
jno
sub
pop
and
jno
dec
adc
push
inc
mov
and
cmp
loope
push
sub
xor
or
nop
lea
test
das
pusha
call
xchg
mov
and
pushf
bound
aas
cwtl
adc
adcl
inc
hlt
out
jle
fwait
mov
pushf
rolb
into
sbb
fcmove
fbld
mov
xor
icebp
mov
xor
push
rolb
insl
lret
movsb
jp
negb
cmp
cmp
mov
or
popa
mov
push
sbb
xchg
loopne
push
push
das
ss
punpcklbw
and
lock
inc
data16
int3
in
insb
adcl
push
gs
mov
out
jp
mov
xorl
add
in
test
sahf
int
fnsave
lea
insl
push
mov
lea
pop
in
in
ljmp
sarl
push
sbb
mov
add
push
mov
cld
mov
dec
stos
loopne
out
sub
out
icebp
jns
pusha
push
add
jb
lock
bound
mov
ss
gs
je
icebp
mov
in
dec
add
xor
push
repz
xchg
call
shrl
jno
arpl
sub
push
out
pop
mov
pop
fwait
sub
out
insb
jnp
fsubs
push
lret
je
mov
dec
push
pop
adc
cmc
push
out
inc
pushf
bound
mov
xlat
push
and
xor
pop
mov
cmp
sub
loop
lds
jl
fs
xchg
leave
lea
in
imul
sub
xor
das
int
push
movnti
inc
js
inc
ljmp
adc
sbb
ret
and
mov
aad
mov
in
in
rcll
fsts
jno
ds
in
in
icebp
int3
push
rcrl
mov
lea
sbb
xchg
loopne
cmpsl
lret
sub
and
pop
aaa
jecxz
in
pop
sarl
push
adc
mov
daa
mov
and
in
cld
push
and
mov
add
ret
out
roll
pop
int
es
pushw
push
dec
ljmp
stos
add
xchg
add
in
mov
les
test
leave
xchg
adc
add
insl
mov
push
rclb
or
bound
std
xchg
sub
sbb
push
push
pop
xchg
and
adc
pop
jo
loopne
cli
and
nop
outsb
add
sbb
dec
cltd
lods
mov
es
pusha
aam
adc
ficoms
popa
loopne
mov
imul
lock
out
sub
mov
xchg
fiadds
popa
cltd
cmp
push
dec
test
cmp
push
jge
dec
dec
stos
dec
pop
repnz
lea
dec
push
xor
dec
push
xor
orl
fst
mov
push
imul
in
push
icebp
xor
add
in
adc
gs
test
pop
dec
insb
xor
shl
sub
push
pushf
insl
mov
or
out
in
in
data16
sti
repnz
popa
and
bound
adc
sarl
lock
fwait
xchg
push
aam
loope
dec
pop
push
daa
mov
loope
andb
ret
adc
aas
push
test
xor
insl
pop
pop
jecxz
ficompl
and
ljmp
cmpsl
dec
dec
cld
and
xor
dec
or
arpl
pop
sti
daa
cmc
add
xorl
cmc
add
aas
and
inc
repnz
pop
and
repnz
jp
arpl
test
fs
mov
out
lods
push
es
lea
sti
jno
cmp
push
pop
xor
loope
mov
and
call
imul
pop
pop
jge
fsubrl
arpl
popf
arpl
add
outsb
arpl
xor
inc
xchg
mov
cmp
jecxz
inc
lods
add
pushf
mov
inc
xchg
rclb
lds
and
arpl
lds
inc
push
and
arpl
in
repz
arpl
int
das
neg
inc
pop
daa
and
shl
dec
dec
idivl
inc
mov
arpl
add
xchg
jmp
cmc
lods
mov
arpl
lea
iret
add
mov
push
dec
xor
dec
in
pop
cmp
arpl
dec
adc
jge
jo
icebp
sub
leave
xchg
push
test
out
int
xor
sub
inc
xor
xor
xchg
inc
mov
ds
jne
xor
in
pop
stos
negl
pushl
outsb
in
fsubrl
adc
gs
push
mov
outsl
jno
rcrl
sti
mov
jo
scas
mov
jg
push
and
imulb
inc
dec
sub
imul
enter
dec
lret
push
xchg
inc
add
mov
or
sbb
cwtl
mov
jno
cli
pop
outsb
out
mov
cmp
fldt
mov
sbb
lods
jge
lea
adc
int
rorl
out
mov
jge
ss
xchg
push
mov
pop
sbb
das
push
gs
in
xchg
dec
lea
fwait
xchg
or
xor
add
push
arpl
add
xor
insl
pop
and
adc
or
pop
add
outsb
mov
or
and
mov
adc
repnz
add
popa
cmc
xor
js
scas
jl
adc
iret
call
dec
inc
das
es
xor
jecxz
std
leave
stos
test
push
in
mov
mov
adc
add
cmpsl
in
cmpsb
and
or
xor
dec
adc
mov
mov
cmp
mov
insl
xor
add
push
das
sub
pop
aam
push
xor
popa
jo
pop
push
inc
sbb
xor
push
jns
aad
xlat
adcb
jp
cmc
mov
mulb
lcall
mov
insb
sahf
mov
loope
lods
in
das
in
xlat
shl
lret
outsl
add
mov
insl
pop
out
mov
insl
addr16
in
inc
lock
enter
mov
cmp
pop
jns
mov
sub
push
cmp
clc
adc
loope
dec
sub
jle
movsl
dec
ja
les
scas
fsub
repnz
pusha
mov
arpl
add
push
add
xor
push
in
adc
xor
leave
xor
xor
les
mov
push
sbb
push
int
xor
std
inc
dec
mov
fnstcw
or
push
lcall
nop
adc
sub
lea
js
fs
inc
inc
jno
lret
repnz
sbb
push
pop
mov
mov
or
adc
adc
cmc
aad
cmc
imul
data16
and
fwait
sub
xor
push
jb
fdivrl
jo
loope
fnstsw
pop
inc
movb
add
sub
cvtps2pi
rcr
pop
sub
lret
and
mov
packsswb
popa
daa
pop
lret
les
jp
jmp
mov
push
rolb
sbb
or
cli
sbb
push
jae
sti
jno
push
movsl
enter
je
aas
gs
in
xor
xor
xor
push
sahf
adc
test
shl
dec
jmp
xor
aas
cmp
call
and
daa
inc
out
xchg
xor
push
aaa
andl
inc
adc
in
outsl
dec
jbe
imul
scas
dec
mov
scas
shrb
sbb
mov
repz
in
xchg
jp
inc
enter
sub
div
stos
repnz
les
fnstenv
pop
mov
leave
fsub
push
dec
jns
std
mov
adcl
mov
cmp
out
inc
inc
push
xchg
xor
inc
mov
enter
dec
mov
fucomip
mov
xor
sbb
insb
lcall
shrl
jecxz
pop
mull
inc
jo
sahf
jbe
pop
aam
jg
xchg
loopne
imul
insl
inc
lahf
iret
aad
xchg
pop
fs
sub
add
data16
xorb
xor
fdivl
sub
call
ljmp
in
mov
fadd
sbb
fdivrl
mov
sub
int
jmp
sub
inc
inc
imul
sub
and
xor
dec
cmc
xor
gs
mov
popa
test
sub
mov
mov
insl
mov
adc
add
jo
push
arpl
lret
clc
and
rorl
mov
pop
scas
out
sbb
push
test
lea
inc
xor
pop
xor
pop
xor
push
shlb
add
sbb
add
pop
pop
nop
js
jecxz
daa
dec
add
lods
adc
popa
push
mov
sub
in
lods
xor
jg
nop
mov
cmp
sub
dec
int3
sub
mov
push
adc
arpl
in
adc
push
push
jae
pusha
js
jae
push
in
call
ss
imul
insl
mov
jge
mov
cwtl
lods
out
sub
je
std
sub
mov
call
rolb
pop
push
das
xchg
adc
push
mov
in
in
mov
mov
cld
add
fcompl
in
gs
in
inc
pushl
movsl
inc
adc
sbb
lock
iret
cmp
ss
jp
mov
pop
out
push
in
in
loop
jecxz
loopne
loope
fsubp
fists
in
lods
fistl
fcomps
out
push
hlt
jbe
call
ret
cmp
push
out
sub
scas
sub
push
es
bound
xchg
jp
lea
loope
lea
fmull
jno
sub
ret
imul
stc
clc
mov
insl
jnp
fistps
scas
pop
bound
js
add
test
ja
inc
mov
xor
cmp
negb
movsb
cmp
aad
scas
lea
mov
call
jns
inc
repz
sub
add
dec
pop
in
mov
mov
je
add
push
repnz
cmp
sbb
clc
dec
lds
imul
movsb
insb
mov
cmp
dec
pop
std
gs
push
inc
lcall
stos
pop
imul
clc
push
push
or
jne
por
xchg
cmp
ja
mov
pop
add
jmp
jno
push
aad
mov
xchg
cmp
pop
ds
cmp
out
icebp
jg
outsb
mov
sahf
and
jmp
cmp
ret
repnz
add
and
inc
jmp
push
cli
outsb
ja
and
add
push
mov
movsb
jmp
add
and
ja
cld
jno
and
add
dec
pop
jg
arpl
mov
jnp
pop
push
or
pop
iret
es
cmp
ds
aas
xchg
arpl
pop
xchg
cmc
jnp
hlt
add
stc
stos
cmp
insl
imull
mov
add
jg
inc
jbe
shl
lahf
sub
insl
pop
in
test
jl
pop
in
out
shrl
mulb
aas
fs
out
jbe
cmp
pop
and
push
mov
scas
mov
aad
rcpps
leave
cmp
add
sbb
mov
push
xorb
xor
test
mov
mov
jle
adc
cmp
cltd
jmp
sub
in
dec
roll
loopne
rorb
xor
fisubrs
cmp
std
xor
push
inc
push
shlb
xor
pop
ljmp
jae
push
andl
cmp
xor
mulb
nop
lea
xlat
ficoms
imul
pop
push
clc
cli
stos
jg
xlat
mov
insb
paddsb
push
mov
mov
dec
cmc
xchg
mov
pop
pop
mov
pusha
push
pushf
loopne
jns
jb
lret
jno
les
cld
dec
pop
sub
jb
js
stos
test
arpl
cmp
imul
outsl
in
jbe
inc
test
cmpsb
insb
imul
cmc
orl
add
jno
scas
push
mov
insl
adc
jno
scas
repnz
aas
xlat
and
gs
add
out
int3
cmp
mov
push
pop
in
push
cmp
lcall
rep
sub
cwtl
xor
dec
sub
jae
cmp
packuswb
imul
adc
jo
push
push
push
fs
jno
pop
outsb
stos
jb
add
in
and
cmc
stc
jno
pop
push
imul
push
fldcw
scas
sub
in
jae
pushf
pop
push
fisubrl
dec
inc
mov
and
xor
pop
ret
mov
dec
mov
sub
pusha
cli
jecxz
pop
xor
insb
xor
and
in
cld
popa
dec
jecxz
mov
in
mov
cmp
les
mov
out
sbb
jp
xchg
xor
in
cmp
push
mov
sub
adc
cmp
add
xor
lcall
lahf
mov
je
lods
sbb
add
enter
ds
insl
lcall
add
pop
in
bound
fisttps
std
sub
xor
enter
dec
jp
xchg
pushf
add
lret
mov
sarl
sub
pop
addr16
pushf
mov
in
push
lods
stc
xor
daa
fildll
xor
pushf
cmp
sub
mov
push
xor
jmp
sub
dec
mov
jmp
mov
test
in
fnstenv
add
jne
fdivrs
mov
mulb
jecxz
cmpsb
push
dec
sbb
cs
daa
sub
out
cmp
jno
dec
jae
adc
sahf
popa
jne
in
in
or
xor
pusha
or
adc
add
push
push
dec
test
subl
add
push
in
sbb
xchg
push
add
sbb
mov
in
lock
les
fs
in
pop
sbb
lds
add
adc
pop
sbb
hlt
xor
or
add
add
pusha
adc
in
sbb
add
imul
pusha
xchg
sbb
xor
mov
sub
adc
outsb
push
or
push
push
fnstcw
gs
sbb
rcll
roll
cmc
mov
insb
or
inc
cmp
push
push
dec
adc
mov
sbb
gs
adc
insb
jno
pop
push
add
insl
in
fstp
pop
jae
fnstcw
fdivrl
int3
popa
call
adc
inc
xor
jae
outsb
fldenv
icebp
cmpb
add
inc
data16
dec
test
add
adc
sti
sbb
inc
fnstenv
and
push
pusha
cmp
fwait
ds
adc
push
leave
pop
test
loope
in
imul
int3
mov
pop
lret
sbbb
lock
insl
in
call
ret
fs
shlb
adc
std
pop
cmpsl
or
fistpll
jb
gs
lds
or
sub
movsl
insb
push
or
fs
or
and
repnz
std
shll
int
or
push
insl
and
push
popf
outsb
mov
lret
or
test
push
lods
sub
xor
xor
and
sbb
dec
push
icebp
jno
or
inc
loop
testl
mov
ret
insb
gs
inc
xor
mov
sarl
xor
sub
inc
inc
mov
cltd
and
or
mov
test
stos
lods
sbb
in
jns
shlb
outsb
into
fs
je
lods
loope
dec
hlt
pop
add
testb
in
inc
pop
ficoms
loopne
lock
insb
xor
lock
outsb
and
lcall
and
mov
adc
and
push
pop
adc
adcl
push
fdivr
sar
cmp
sub
add
push
mov
mov
mov
xlat
loopne
pop
bound
leave
lahf
movsl
clc
lock
testb
popa
push
lock
mov
mov
clc
cltd
jl
pop
or
stos
or
clc
mov
mov
fldcw
sub
jno
push
adc
fisttpl
and
fisttpll
dec
clc
pop
xor
notb
call
insb
shrl
mov
lods
xor
jecxz
lcall
nop
mov
xchg
imul
inc
fmulp
hlt
in
repz
popf
mov
sbb
ficompl
lret
popf
add
mov
inc
pop
cli
and
dec
mov
fs
popa
xor
psubsw
icebp
in
arpl
mov
out
mov
out
or
repnz
mov
jnp
daa
mov
xchg
dec
mov
fidivl
fistl
int
pop
dec
fnstcw
pop
loop
popf
sub
clc
jg
aaa
add
adc
cmpl
test
xor
test
fcompl
xchg
aam
fisttpl
repnz
js
jns
mov
movsl
jnp
jl
jge
jle
jg
andb
mov
test
push
or
push
mov
push
loopne
aad
test
test
lods
insb
sbb
and
ljmp
xor
adc
and
aam
pop
loop
ja
pop
hlt
in
jno
mov
xor
loopne
in
mov
push
jae
popf
fnstenv
push
push
sbb
mov
hlt
push
add
add
fcomps
inc
mov
imul
add
int
cltd
dec
xchg
cmc
pop
push
jl
and
imul
cmp
push
jae
jecxz
cmc
inc
adcl
fs
ficoms
insl
push
in
enter
imul
xor
stc
dec
lock
xchg
dec
movsb
mov
mov
std
es
mov
dec
mov
test
imul
sbb
dec
cli
fwait
add
add
push
das
inc
lcall
fsubrs
ss
jge
aad
mov
pop
push
xor
pop
xchg
cmp
pusha
mov
shll
stc
lods
pusha
xor
out
gs
pop
pop
mov
xchg
scas
sbb
sbb
add
das
add
xchg
mov
and
sbb
push
movsb
jecxz
dec
mov
mov
imul
jno
sub
lcall
ljmp
icebp
inc
sbb
pushl
popa
lds
insl
ret
or
lea
sub
xor
cltd
rcrb
int3
mov
mov
pop
pushf
clc
sbb
jmp
popf
dec
jmp
ja
cmp
xor
fwait
or
pop
xorb
lret
scas
das
gs
mov
enter
pop
repz
das
arpl
push
cs
mov
clc
pusha
pop
xor
xor
lret
jbe
sub
mov
pop
shll
imul
cmp
sahf
mov
lret
in
xor
sub
stos
jg
push
rcll
negl
jo
inc
mov
jno
das
sub
pushf
and
jecxz
rolb
sub
js
inc
fsubs
ret
inc
in
imul
pusha
mov
inc
loop
cld
add
push
sub
push
in
mov
dec
mov
test
enter
xchg
aam
mov
arpl
jbe
inc
cmpsb
test
loopne,pn
xor
and
add
add
sub
outsb
call
and
fsubs
or
inc
xor
mov
bound
jmp
ljmp
jae
in
mov
call
and
mov
aam
aaa
jmp
xor
aaa
xchg
xchg
in
dec
out
mov
decb
add
jg
push
lock
push
pop
pop
mov
scas
sbb
lret
inc
dec
xchg
mov
xor
out
dec
nop
cmpsb
adc
ja
pop
pop
jns
sub
out
cs
gs
ror
inc
and
mov
rcll
and
lock
sbb
sub
aam
daa
pop
push
ljmp
fsubrs
push
pop
xchg
and
hlt
cld
jno
adc
push
lea
push
push
das
jl
xchg
add
and
mov
lods
lea
push
shll
sub
mov
pusha
insb
mov
rorl
xor
lea
je
mov
jbe
icebp
add
xchg
push
insl
push
cmp
cmp
mov
sbb
dec
test
dec
into
xor
lds
insl
add
or
cwtl
or
arpl
movsb
push
cmp
xchg
push
pushf
arpl
lods
mov
cmp
push
addb
push
insb
mov
lea
jo
insl
mov
aaa
arpl
xor
lahf
stos
lods
insb
jb
jbe
insl
adc
pop
dec
aad
lods
mov
xchg
jae
jmp
xor
bnd
les
fisttpll
mov
fwait
mov
mov
xchg
fnstsw
xor
into
jle
mov
pop
repnz
loopne
mov
shrl
out
scas
push
mov
push
sbb
cmp
pop
shr
lds
pop
mov
xchg
out
jmp
mov
push
clc
fbld
mulb
stos
icebp
daa
lods
jge
push
mov
jl
mov
in
fsubs
jnp
inc
jo
int
jb
and
aad
bound
decl
jno
cmp
sbb
add
lods
dec
ret
mov
jnp
mov
lods
jmp
nop
insl
and
ret
cmp
add
push
dec
sbb
movsl
jno
jbe
jno
xchg
dec
push
popa
or
imulb
std
jl
fnstenv
es
inc
loop
adc
dec
in
imul
xchg
call
loop
fisubrs
lahf
mov
outsl
lea
mov
lods
cmp
testb
jecxz
sub
and
dec
lea
loop
pop
push
ljmp
dec
js
mull
frstor
sub
add
pop
loopne
or
lcall
in
fs
insb
fdivl
xchg
in
add
pop
and
mov
popa
pusha
rcrb
fisttps
mov
push
mov
pop
iret
sub
xchg
mov
pushf
leave
push
inc
mov
pop
or
mov
and
dec
or
mov
in
mov
sbb
test
cmp
adc
into
push
cmp
cld
push
je
push
notb
add
fistps
add
outsl
xchg
dec
mov
test
lods
cmp
push
cli
cmpsl
ret
into
adc
push
dec
shll
push
loope
jmp
lea
pop
aam
in
jecxz
mov
push
xlat
sbb
les
cmp
add
sbb
xlat
loop
fisubs
cld
sub
jnp
roll
xchg
and
gs
icebp
push
das
insb
add
xchg
fsubs
jp
cmp
push
push
mov
lahf
loopne
and
push
xchg
addr16
or
push
jge
fs
sbb
in
sbb
insb
in
addr16
or
int
lock
pop
push
loope
inc
mov
rcll
or
xchg
inc
ret
pop
cmp
jns
fidivs
cwtl
gs
int3
rorl
adc
scas
lods
popf
rorl
in
xchg
ljmp
pusha
fisubs
ljmp
adc
ds
cli
test
ljmp
call
fwait
pusha
and
lods
pop
lods
mov
fbld
mov
mov
or
scas
push
lods
xor
sub
popa
push
lcall
bound
outsb
and
stc
pop
cmpsb
sbb
idiv
or
mov
out
cmp
loope
push
in
dec
or
lods
cld
xor
sbb
dec
sub
add
mov
je
add
insl
push
adc
mov
inc
cmp
test
je
scas
push
inc
mov
rorb
mov
cli
xchg
lea
pmulhuw
adc
std
test
xor
mov
jbe
push
imul
lret
inc
lods
jmp
icebp
pop
cmp
adc
mov
pop
inc
popa
jl
aam
lret
insl
andl
inc
cmp
mov
pusha
movsl
cmpsb
lea
addr16
xor
pop
and
xor
ret
cld
xor
ljmp
mov
cmc
outsl
push
imul
fsubp
add
bound
push
mov
popf
in
dec
mull
es
arpl
lret
adc
pop
stc
sbb
fiadds
je
scas
sbb
dec
popa
and
hlt
mov
je
gs
add
sarl
shl
add
or
insb
mov
sbb
lods
xchg
lods
bound
shlb
jns
ror
fstl
inc
xchg
es
rclb
fnstenv
push
xchg
or
cmpsb
popa
push
push
push
arpl
dec
pop
cmp
push
push
push
inc
lret
push
xchg
and
mov
movsb
sbb
add
insl
push
inc
mov
fstpt
xchg
insb
std
ja
adc
outsl
arpl
mov
dec
cld
xlat
sub
push
repnz
stc
inc
out
pop
call
lcall
inc
call
shrl
js
insb
push
fs
jge
xchg
sbb
cmpsl
sbb
cmpsb
fxch
cmp
add
inc
adc
cmpsl
and
pop
inc
daa
es
cli
fucompp
movb
sarb
push
ffree
or
add
dec
mov
push
adc
lahf
inc
push
push
shrb
mov
js
scas
int3
gs
sti
test
dec
cmp
in
out
gs
xor
or
fcompl
lret
sub
mov
movl
gs
add
and
pop
movsl
cltd
jecxz
insl
rcrl
gs
adc
jns
movsl
lods
in
xor
inc
ret
enter
xchg
push
xchg
test
add
lds
jmp
test
scas
and
xchg
dec
sahf
out
je
out
mov
xor
mov
ss
mov
dec
leave
fs
cmp
mov
inc
daa
sbb
pop
mov
divl
dec
popf
xor
in
lcall
aaa
je
movsl
adc
enter
gs
movsb
add
pusha
sbb
xchg
inc
xchg
mov
cmp
arpl
cmp
rorb
push
lds
out
lock
loopne
sbb
xchg
dec
shll
sbb
push
sub
inc
icebp
in
out
fildll
cmc
jecxz
mov
jmp
dec
fsubrs
addr16
sahf
sub
cmp
xchg
jp
in
sbb
subb
dec
mov
push
rcrl
data16
push
stc
pop
test
iret
stos
cmpsl
in
stc
inc
fwait
les
loope
in
mov
xor
lods
push
data16
aam
les
cmp
test
sahf
fs
push
xchg
mov
fildl
roll
cld
repnz
jo
repz
test
sbb
sbb
iret
clc
pop
insl
imul
cmp
pop
and
push
pop
stos
aam
fadd
ljmp
mov
dec
jg
scas
imul
stos
sbb
insl
shlb
imul
cmpsl
mov
call
mov
or
rol
or
arpl
shl
jle
outsb
dec
faddl
cmpsl
lods
push
popa
mov
adc
test
pop
cmp
dec
sub
push
lret
jl
push
inc
add
dec
fimull
cmp
js
loop
lcall
imul
insb
std
aad
in
leave
ret
pop
insb
jmp
xchg
push
and
xchg
adc
das
ret
jge
into
push
cld
pop
ret
pop
in
ljmp
loopne
imul
dec
lea
sub
mov
popa
mov
leave
dec
mov
test
jecxz
pusha
jle
lock
mov
lret
xor
rcrb
loopne
bound
cltd
adc
aaa
pop
rcll
cmp
push
shrb
popf
dec
xor
push
push
jns
cmp
notl
xchg
outsl
imul
icebp
loopne
clc
mov
jb
sub
fiadds
shlb
mov
loope
les
xlat
clc
xchg
insb
xchg
sub
into
jl
adc
sti
lock
add
aas
jmp
ja
sbb
xor
rcrb
sub
scas
jo
add
mov
ljmp
adc
hlt
rcll
aam
orb
pop
cmp
jb
xor
jge
arpl
bound
mov
mov
jmp
dec
sbb
lea
js
out
mov
hlt
cmp
add
imul
shll
mov
insl
mov
insl
mov
push
mov
and
pop
push
nop
pop
push
dec
bound
xor
sbb
push
dec
in
cmpsb
scas
ret
push
ret
scas
xor
xchg
imul
sub
push
pop
insl
cld
jle
mov
xor
xchg
repz
or
pop
in
inc
lea
or
ljmp
pop
jb
outsl
jg
cld
xor
hlt
daa
imul
jo
pop
xchg
pop
movsl
inc
outsl
push
lock
dec
insb
dec
and
jmp
mov
push
mov
mov
xchg
xor
pop
mov
fwait
cwtl
inc
and
in
fdivs
rcrl
xchg
sub
fcomp
ss
int3
cmpsl
push
std
popa
mov
cmp
stos
pop
shlb
insb
xchg
dec
ja
outsl
jae
data16
sbb
movsb
sub
leave
in
cvtdq2ps
in
adc
loop
jns
sbb
sub
in
popf
popf
jns
xor
xchg
hlt
or
dec
cmc
dec
push
sub
xchg
loop
xor
xor
mov
popa
mov
xor
push
mov
dec
fs
sbb
cld
mov
ret
adcl
xchg
fisubrs
stos
jb
gs
push
push
jns
dec
ja
or
and
popa
popa
jl
jge
in
icebp
cmpsb
push
inc
sti
mov
sub
addl
pop
and
int
insl
or
jbe
jl
and
mov
pop
sub
inc
ja
sbb
cmp
in
aas
popf
inc
jmp
loop
cltd
shll
imul
sbbb
imul
das
popa
push
or
inc
scas
add
flds
jne
jo
add
pop
sbb
in
and
xor
je
pop
push
push
xchg
xorb
idivb
ljmp
dec
jns
jge
sbbb
cwtl
andl
mov
push
inc
push
popa
mov
aad
pop
pusha
cmp
and
daa
and
or
xchg
mov
jae
popa
das
mov
out
lods
fstps
ror
sub
sbb
fs
pop
ds
sub
sub
jecxz
cmpsb
mov
popf
adc
outsb
stos
ja
lods
mov
add
and
sub
ja,pt
or
xor
cmp
sub
cmpsl
pop
push
push
cwtl
pop
or
and
ljmp
bound
shlb
in
icebp
pop
sub
subl
and
push
jecxz
mov
lea
aaa
arpl
add
xchg
test
notl
imul
neg
sub
mov
imul
dec
ljmp
ror
test
ds
in
clc
cwtl
push
xor
mull
mov
jl
movsb
lea
int3
das
mov
clc
push
daa
insl
lahf
icebp
test
xchg
in
push
lea
sbb
xlat
and
imul
mov
xor
scas
sub
jge
fs
inc
dec
in
clc
fiadds
jle
adc
sbb
mov
cmc
mov
jb
xor
aam
ja
das
add
andl
mov
stos
shrl
mov
pop
mov
push
fsub
aam
adc
mov
nop
je
xor
aas
mov
sub
push
pushf
mov
mov
cld
push
and
fdivrs
arpl
stos
inc
mov
mov
ret
je
mul
cmpsl
and
push
cmp
cld
lret
stos
insl
xor
js
and
jno
inc
ds
cmp
xchg
dec
add
xor
daa
xlat
insb
aad
mov
lahf
pop
fs
cmp
repz
dec
cmp
sub
es
jb
pop
mov
bound
idiv
adc
jmp
push
xor
mov
xchg
xchg
add
sbb
sub
xor
mov
add
and
add
push
push
xor
sarl
bound
test
pop
dec
push
lds
dec
jnp
dec
lea
nop
scas
shl
insb
std
mov
js
leave
cli
fcmovnbe
stos
leave
xchg
jnp
in
push
daa
lret
lahf
sarl
sti
jbe
push
cmp
testb
lea
xchg
lea
sbb
fbstp
jb
cmp
insl
pop
sub
hlt
fcomp
and
test
inc
arpl
dec
lock
ja
repnz
ljmp
jnp
xor
or
pop
ljmp
xor
dec
insb
mull
cmp
shlb
inc
in
and
sub
insl
sbb
iret
xchg
and
push
cwtl
test
lret
xor
jno
mov
ss
ljmp
xchg
sbb
out
into
neg
xchg
adcl
inc
mov
mov
xor
mov
sub
sub
push
xchg
mov
fcomps
and
and
insb
sub
jecxz
jnp,pt
stos
pmulhw
mov
movsb
cs
insl
das
mulb
ja
jnp
jne
cltd
add
xchg
cmp
pop
mov
jl
test
mov
aam
cmc
push
mov
sbb
mov
mov
mov
aam
push
mov
jmp
aaa
into
ja
in
push
test
xchg
adc
xchg
dec
jg
pop
test
lret
in
push
mov
push
gs
aaa
mov
in
jae
pop
push
mov
arpl
mov
mov
cmp
sub
call
imul
lods
hlt
xor
push
pop
dec
jl
adc
xor
js
sub
jge
mov
fs
out
cmpl
cmp
fimuls
aam
jge
push
lds
in
and
test
xor
sti
imul
insl
dec
jle
jg
dec
insb
cmp
jb
jb
mov
lea
lock
mov
ss
push
hlt
psllq
imul
popf
xlat
imul
outsl
jb
insl
mov
gs
cmpsl
jge
pop
addl
ss
imul
jo
inc
sbb
push
pop
mov
cmp
cld
pop
sub
dec
subl
ljmp
sbb
test
push
lahf
sub
add
imul
cld
jo
cmc
mov
sbb
or
cmp
out
jb
jp
pop
sbb
sahf
xlat
mov
cltd
sbb
aam
and
push
mov
loopne
inc
push
arpl
in
insb
inc
sbb
lret
pop
and
sbb
or
adc
insb
mov
sub
rorb
mov
cmp
jno
jb
hlt
in
dec
cmp
sti
insl
ret
gs
leave
and
mov
push
and
push
xchg
loop
push
xor
scas
push
fnsave
add
es
jg
rcr
addr16
loope
es
inc
rclb
imul
dec
mov
outsl
aad
pop
insb
imul
mov
pop
dec
mov
cmpsb
in
imul
test
daa
sub
dec
gs
in
jne
and
pop
or
add
cmp
adc
or
push
pop
xor
pop
pop
mov
mov
inc
in
daa
in
dec
xor
repz
loope
dec
cmp
loopne
mov
pop
adc
or
jmp
das
call
sub
inc
add
sub
mov
xchg
jmp
cld
cs
scas
xor
daa
popa
int
mov
jno
lds
xchg
jns
jmp
leave
scas
dec
or
loop
xchg
mov
cli
mov
repnz
add
outsb
out
jno
lea
xor
pop
mov
cmc
pop
scas
sbb
sub
insl
pop
int3
lock
insb
test
or
hlt
scas
rcrb
iret
scas
inc
das
out
dec
jae
sbb
sti
insl
or
xor
mulb
sbb
sub
cmp
ja
sbb
subl
mov
jae
jae
test
test
cmp
ret
inc
cld
mov
daa
inc
mov
aam
lret
in
daa
inc
in
outsl
dec
int3
outsl
aaa
pop
mov
jp
lahf
xorl
std
jnp
ja,pt
pop
int3
jle
fildll
mov
je
incl
adc
pop
cmp
cltd
or
clc
bound
add
out
dec
cmp
imul
ret
dec
lods
aam
push
inc
test
mov
and
cmp
add
push
ret
popl
popf
push
lock
push
xchg
and
xor
outsl
in
jge
and
gs
pop
aad
push
mov
xchg
hlt
dec
into
add
or
adc
dec
push
dec
in
test
fadds
xchg
sahf
sbb
push
cmpsl
xchg
in
adc
mov
clc
inc
in
adc
addr16
rcl
sbb
arpl
adc
int
lock
pop
mov
cmc
push
das
mov
xor
jns
gs
sbb
sub
insb
mov
das
push
xlat
hlt
es
sbbl
popa
aam
bsf
xor
xchg
mov
into
adc
repnz
outsb
pop
xchg
mov
popf
mov
gs
insb
pop
add
and
nop
xchg
mov
sub
rcll
pop
lea
cmp
jno
jbe
jns
push
add
movsb
lods
lcall
inc
add
push
test
push
aaa
lods
pop
into
clc
dec
adc
cmp
lds
gs
out
pop
int
scas
xor
stos
xchg
jecxz
cmc
jae
and
inc
xor
jae
mov
jb
les
insl
jno
mov
dec
sub
and
sub
mov
stos
adc
or
andl
pusha
rclb
lahf
pop
fists
data16
mov
gs
pusha
scas
jno
mov
bound
xor
stos
mov
ljmp
adc
add
shlb
sub
lahf
dec
addb
and
outsb
test
inc
cmp
fs
sti
cmp
and
inc
and
cmp
dec
cmp
jae
ret
pop
or
dec
daa
nop
xchg
dec
loopne
dec
pop
or
adc
in
stos
sti
fwait
xchg
dec
inc
jno
int
push
cmp
push
fldl
pop
imul
push
insl
dec
push
out
sahf
bound
test
insl
cwtl
lcall
xorb
shrb
icebp
test
push
xor
xor
xchg
addl
adc
and
popa
pop
push
push
xor
xor
sub
jnp
mov
inc
mov
adc
lret
dec
aad
les
dec
add
push
scas
pop
sti
and
jecxz
clc
inc
mov
aam
sbb
das
ret
data16
add
cmp
and
addr16
inc
push
sub
test
inc
sbb
dec
cmp
or
gs
rorl
popa
rcll
dec
pop
xchg
mov
roll
dec
mov
dec
arpl
pop
mov
inc
xor
xchg
mov
mov
mov
mov
jg
jno
data16
jbe
add
mov
jae
inc
ss
push
xchg
cmp
stc
sub
cmp
push
push
add
les
push
sbb
mov
lods
pop
jns
ljmp
inc
push
enter
dec
ja
xlat
mov
in
mov
pop
insb
fnsave
in
dec
jge
pop
mov
xchg
dec
xor
or
cmp
jmp
sbb
imul
lea
ret
cmp
neg
cmp
stos
adc
jb
scas
cmp
mov
subb
lret
in
pop
shll
insb
lcall
leave
mov
lea
sub
mov
mov
out
inc
lock
in
mov
fcompl
sbb
in
mov
mov
shll
div
jecxz
jnp
push
dec
ljmp
pop
adc
jg
xor
ja
call
stos
sbb
cmpsb
sub
push
stc
sub
adc
in
dec
mov
pop
jno
dec
jb
jl
pusha
addr16
dec
cmp
push
mov
jbe
imul
pop
add
arpl
cmp
or
cmpsb
ror
mov
xchg
cmp
sarl
jmp
lcall
push
sub
loopne
imul
and
arpl
jl
jno
lea
mov
nop
test
not
mull
leave
lret
add
dec
iret
xor
push
adc
jbe
pushf
mov
cmpsb
sub
jo
lock
inc
dec
arpl
enter
leave
sbb
pop
repnz
daa
jle
push
sub
js
test
imul
xor
cmp
pop
mov
cmp
shld
movsb
push
sbb
bts
pop
add
jle
fistl
pop
pop
pop
cmpsb
mov
stos
jno
and
jae
je
insb
push
repz
test
int
mov
mov
lea
mov
add
inc
cmp
and
jmp
xchg
stos
into
inc
mov
lret
lcall
call
jecxz
push
pop
gs
adc
mov
pop
sub
dec
shll
dec
inc
add
fdivrp
push
popf
pop
fldln2
and
insl
cmpsb
or
inc
push
mov
sub
jge
mov
jo
or
popa
add
movsl
pop
and
add
jge
sub
push
cmc
xchg
jae
icebp
push
mov
push
xor
stos
jbe
push
loope
push
cmc
mov
sbb
nop
imul
lea
out
fstps
ret
sbb
dec
lock
mov
pop
ficomps
iret
jnp
pop
mov
dec
lock
gs
dec
adc
mov
pusha
movaps
xchg
jl
pop
mov
mov
in
add
xchg
lea
fisttpll
loop
jo
add
subb
out
lods
jno
ljmp
add
mov
lods
sub
loope
popa
push
rep
mov
cmpl
and
lcall
xor
pusha
ljmp
popf
adc
icebp
insl
mov
stc
pushf
cmp
fmuls
jns
and
mov
and
jle
xchg
in
push
fwait
jmp
addr16
push
push
and
cltd
and
in
add
xchg
sub
or
jg
dec
pop
add
push
cmp
xor
je
data16
ffree
mov
add
xor
inc
addr16
imulb
mov
pop
es
ljmp
orl
pop
jae
xchg
cmp
daa
jae
xor
xlat
in
ljmp
and
mov
add
pop
fdiv
int3
jl
xchg
xchg
pop
aas
test
dec
std
adc
xor
push
stc
inc
sub
pop
gs
pusha
mov
push
cli
mov
test
mov
popa
or
mov
sub
mov
push
popa
shrl
clc
mov
push
out
mov
mov
out
xor
leave
dec
mov
lock
test
jns
in
dec
inc
je
pop
pop
push
stos
mov
shrb
dec
xor
dec
add
in
push
xor
xor
popa
mov
icebp
out
shl
lock
lahf
adc
jg
xchg
mov
mov
loop
sbb
fsts
push
push
xchg
cmp
xorl
pop
out
and
dec
nop
mov
mov
jp
cmp
sub
ss
push
push
jae
in
cld
dec
popf
stc
and
fwait
iret
inc
dec
lea
push
scas
sbb
insl
mov
dec
test
call
lods
bound
insb
arpl
dec
mov
es
cmc
int
mov
insl
mov
push
pop
xor
push
pop
sbb
mov
xchg
add
es
add
dec
mov
popa
sbb
clc
ljmp
adc
cmc
push
das
pop
push
jno
insl
xchg
pushf
pop
repz
in
in
test
scas
in
lods
insl
mov
push
push
inc
mov
imul
sahf
repz
addr16
jp
cmp
and
popa
mov
and
fs
push
mov
filds
out
xlat
jo
ljmp
and
data16
lods
sub
jno
push
or
insb
fxam
lret
push
mov
je
or
push
flds
arpl
popa
andl
pop
adc
sub
mov
inc
cli
mov
addb
jge
dec
in
push
in
insl
pushf
in
in
in
in
imul
add
aas
xchg
fdivr
fcoml
shlb
add
shl
inc
inc
push
dec
xchg
sub
push
push
aas
mov
stc
xchg
mov
push
fadds
arpl
push
mov
mov
outsl
in
pusha
fstps
or
lret
push
jne
or
cmp
bound
pop
jecxz
mov
aas
out
inc
data16
cld
adc
stc
sub
adc
lahf
into
mov
or
sbb
aad
fwait
xor
std
test
jb
test
in
pop
ficompl
mov
data16
jg
sbb
push
imul
or
push
into
sar
stc
xor
clc
jnp
fisttpll
pusha
dec
repnz
or
fs
dec
or
lea
add
push
aam
idivb
pop
cltd
pop
ljmp
jno
cltd
inc
xchg
gs
mov
xchg
pop
lea
fimuls
pop
out
push
push
cltd
push
jb
xor
and
xchg
cmp
mov
ficomps
cld
bound
or
aam
xchg
jecxz
add
mov
ss
adcl
sub
fstl
sub
or
outsb
inc
inc
ret
fidivrs
jge
lea
xchg
xchg
lods
push
jp
lods
imul
inc
add
out
stos
cmpsb
rcrb
cs
or
fs
mov
sti
add
mov
addr16
cmp
fbld
sbb
hlt
cmp
xor
pop
adc
enter
sub
sbb
push
out
cmpsl
jle
scas
sub
xor
and
cwtl
dec
mov
lret
sti
lret
jns
frstor
pop
inc
scas
daa
call
popf
jmp
ret
add
fisttpl
test
insl
pop
mov
adc
into
sub
and
roll
aam
dec
xor
mov
in
mov
hlt
cld
rorl
or
xor
mov
cwtl
push
addr16
and
xchg
inc
cmp
aaa
out
es
cmpsb
mov
iret
std
push
pop
cmpsb
cs
mov
stc
mov
lret
psubusb
push
jle
pop
and
int
repnz
sub
mov
movsl
push
bound
call
movsl
cli
xchg
insl
sbb
lret
sub
jmp
mov
dec
push
and
sahf
movb
jg
mov
cmpsl
jmp
push
jne
mov
dec
icebp
and
cmpb
imul
add
inc
outsl
icebp
jmp
out
or
mov
pop
and
jge
into
cwtl
dec
inc
cmpsl
jnp
sub
adc
xchg
mov
cs
icebp
lock
mov
repnz
ja
pop
or
sub
pop
mov
out
aam
and
fwait
sbb
xchg
xchg
addl
bound
mov
xchg
mov
and
and
inc
add
aam
rorl
testl
jge
pop
out
xor
xchg
repz
xchg
pmulhuw
xor
in
add
push
jns
sub
adc
in
push
or
sub
dec
xchg
aad
push
bound
mov
mov
je
test
or
jp
sahf
sbb
int3
push
ret
in
sbb
dec
push
fistpll
shlb
daa
pop
imul
add
sarb
push
in
add
loope
das
push
xchg
pusha
sti
jns
gs
push
cwtl
in
push
inc
in
lock
jb
mov
dec
das
inc
cli
sub
int
sub
shll
mov
push
dec
mov
arpl
dec
in
in
test
fcmovne
ror
ret
mov
dec
mov
adc
enter
sahf
pop
push
inc
jle
sub
hlt
sbb
jp
xor
pop
imul
inc
push
and
leave
push
adc
xchg
push
push
xor
inc
jne
jo
mov
fisubrl
mov
sbb
icebp
ds
fidivs
lods
loop
dec
cmpsb
imul
inc
movsb
sbb
rcrl
ljmp
outsb
jno
push
lea
mov
jns
cltd
cmp
pop
fdivrs
jg
xor
enter
daa
ja
pop
xchg
sub
push
ljmp
jp
xor
arpl
je
test
aas
pop
lea
popa
jg
xsave
fdivr
jns
xchg
lretw
lcall
inc
adc
into
and
mov
lahf
and
mov
xchg
inc
pop
sub
mov
xor
mov
jg
das
dec
xlat
xchg
enter
sbb
or
test
xchg
mov
arpl
jno
jae
add
inc
push
mov
movsb
icebp
arpl
xchg
out
test
sub
adc
add
jmp
dec
jns
mov
notl
pop
loope
mov
dec
inc
mov
mov
mov
ret
adc
loop
enter
arpl
xchg
es
add
xor
lods
aad
addr16
mov
arpl
jae
dec
mov
int3
xorl
scas
or
aad
ss
les
mov
ds
push
jl
stos
adc
mov
inc
pop
inc
test
mov
repz
mov
sbb
pop
adc
repnz
xchg
ja
aaa
push
leave
fwait
pop
lods
scas
das
sub
lahf
lahf
pop
dec
jecxz
mov
es
leave
xchg
test
xchg
or
in
movsl
fsubl
sbb
mov
mov
insl
repz
jns
cmp
jb
mov
lretw
sub
pop
jle
insb
sbb
popa
sub
imul
mov
inc
cld
sbb
lahf
push
and
cmp
loope
dec
or
mov
in
xchg
stc
dec
push
shll
mov
mov
sbb
or
jae
imull
pop
push
rclb
fs
bound
insb
dec
xor
and
adc
gs
out
xlat
arpl
push
mov
cmp
lea
push
fidivrs
icebp
inc
es
mov
cmp
mov
insl
into
lock
sbb
cmpsl
push
jp
nop
cmpl
pop
jnp
sub
pop
adc
inc
push
lock
lods
idivl
and
push
mov
fs
mov
loope
pop
lods
jmp
cmpl
fsub
out
xchg
add
sub
test
mov
sbb
sub
test
mov
fisttpll
sub
sahf
frstor
stc
mov
subl
test
mov
pop
ret
push
cwtl
mov
jnp
mov
jl
push
or
dec
sahf
xchg
sbb
dec
popa
cmpl
mov
jg
rcrl
mov
push
push
xchg
sti
add
cwtl
ja
sub
test
pusha
sbb
jge
mov
xchg
pushf
inc
lahf
push
xor
add
jg
push
imul
dec
repnz
push
push
ja
jmp
lods
xor
push
and
mov
dec
mov
into
addr16
subb
in
mov
push
not
jecxz
insl
mov
pop
sub
rorl
cltd
push
cld
sub
imul
sub
sub
jge
cmp
aaa
push
aaa
xor
xor
lods
and
push
sub
push
aas
fs
stc
and
out
pop
lahf
int3
idivl
pop
int
and
andb
arpl
and
aaa
adc
repnz
add
cmp
movsl
dec
inc
inc
mov
imul
push
fmuls
xchg
inc
es
pop
xor
insb
adc
int
cmc
mov
push
mov
fldl2t
pop
mull
push
xchg
mov
push
lea
push
rorb
lea
jge
jns
inc
inc
movsb
pop
in
fimuls
loop
rclb
lods
xchg
and
push
mov
mov
punpcklbw
cltd
bound
rorl
push
ljmp
and
insb
pop
push
cmp
xchg
daa
jge
xchg
loope
push
stos
push
movlps
out
test
loope
xor
xchg
roll
inc
js
rcr
test
ret
push
add
mov
cld
adc
push
cmp
xor
mov
ffree
jb
mov
cltd
add
pop
and
in
fwait
mov
in
test
ds
xor
inc
xchg
fcom
push
stos
dec
lods
sbb
popa
push
fcompl
leave
inc
and
mov
adc
aad
lahf
xor
dec
sub
je
pop
out
shl
sar
sbb
and
out
push
pop
xchg
adc
bnd
mov
adc
dec
fs
xor
add
mov
pop
sub
jno
stos
xor
in
push
lds
lcall
sub
jge
addr16
je
pop
lock
fnsave
push
jg
xchg
mov
inc
fbstp
lods
mov
orl
mov
mov
pusha
lock
mov
mov
in
cs
shll
leave
nop
xchg
dec
dec
fsub
push
push
mov
or
lock
jmp
sbbb
mov
mov
loop
lret
mov
and
jle
imul
out
sub
stos
jmp
int
out
lods
testl
shrb
xchg
mov
pushf
test
push
clc
jbe
sbb
xchg
pop
push
pop
popf
lock
scas
gs
push
leave
fdivl
cs
jb
or
dec
xchg
fcoml
sub
fbstp
movsb
add
adcl
mull
xor
int
xchg
add
jge
inc
cmc
mov
push
cwtl
bound
ret
jb
cmp
xor
das
dec
outsb
push
mov
xchg
lahf
mov
add
andb
jecxz
mov
fs
pop
lods
outsb
pop
mov
mov
push
iret
ret
popa
fsincos
mov
sub
popl
es
add
fldl
push
in
cmp
lret
ja
fldcw
add
and
lock
lahf
push
icebp
mov
hlt
push
xor
add
pushf
cmp
or
ja
mov
xchg
repnz
ja
mov
inc
and
in
popa
push
cltd
jle
rorl
gs
das
jns
cli
or
call
aas
jle
rcrb
inc
repz
outsl
and
ret
clc
fs
push
in
aam
and
fadds
loopne
fs
sahf
cmp
aad
insb
in
cs
mov
insb
or
or
push
xor
sub
fsubl
lds
lock
sti
mov
adc
pop
inc
insl
sub
dec
shll
je
mov
add
mov
repz
adc
xor
cltd
sbb
pop
ss
cli
mov
jns
or
mov
pop
lds
jns
dec
insl
xchg
stc
and
sbb
unpcklps
pop
idivl
popa
pop
gs
pop
loop
inc
adc
in
pop
jae
pop
js
aad
push
xor
mov
repnz
mov
xchg
daa
sub
jno
cmp
adc
xor
pushf
add
imul
clc
cmp
out
hlt
in
ljmp
sub
push
xor
dec
cwtl
shl
dec
fisttps
in
jg
pop
mov
push
dec
fs
aas
out
inc
loopne
jo
push
pop
dec
sbb
insl
loop
scas
mov
add
call
rolb
call
sbb
mov
test
les
ret
hlt
lahf
pop
je
pop
paddq
push
das
pop
sub
arpl
jecxz
decl
shrl
pop
gs
sarb
in
popf
outsl
int
dec
cmovo
sub
gs
push
and
dec
insl
dec
ret
cmp
cmpsb
jecxz
and
sub
popa
push
pop
aas
lea
pushl
jns
test
mov
mov
call
rcll
bound
jbe
mov
push
jmp
ljmp
popf
or
push
lea
les
jae
sub
dec
xchg
push
icebp
stc
fwait
mov
add
push
fisubrl
dec
into
movsb
and
in
int
cmp
add
data16
mov
in
inc
jno
loopne
push
roll
lock
push
sbb
or
adc
add
push
add
sarb
jg
sbb
fwait
arpl
mov
rcrl
sbb
add
mov
push
ja
dec
fdivl
xchg
lock
push
jbe
jne
jp
cmp
pusha
dec
xor
xlat
dec
xchg
jno
dec
aas
cmp
push
mov
enter
push
in
sbb
mov
xor
push
mov
xor
and
xchg
popa
aam
arpl
mov
in
imul
hlt
sbb
inc
test
insl
inc
subl
lods
addb
jge
inc
inc
mull
imul
push
xor
je
mov
test
aaa
rorb
adc
pop
ret
outsl
cmp
sub
fwait
pop
lret
xchg
jbe
jns
sub
test
push
sbb
int
aaa
subb
jl
mov
cmp
xor
cltd
rcr
adc
scas
pop
mov
adc
ljmp
int
gs
xchg
or
jp
sbb
add
dec
and
in
inc
call
loopne
arpl
ljmp
mov
and
sub
cmp
stos
mov
push
mov
repnz
xor
addr16
rolb
clc
call
mov
mov
lds
sub
or
bound
ret
popf
fucomip
stc
and
dec
cmp
mov
push
insl
jge
mov
mov
add
imul
aas
inc
sbb
sar
lret
mov
pop
xchg
and
xor
lea
xor
fisubrs
push
cltd
lret
fists
cmovo
jmp
lods
jecxz
stc
jno
add
in
sti
sbb
pop
lret
fsub
lods
inc
mov
pop
mov
cmp
add
push
and
ja
or
lods
adc
lret
imul
push
mov
sub
sbb
mov
xchg
pop
sub
push
pusha
mov
enter
mov
mov
mov
jle
cmpsb
stos
sbbl
arpl
mov
jno
jle
lret
mov
test
addr16
adc
in
cmp
sub
push
addb
sub
push
mov
push
test
sub
mov
mov
push
es
gs
ja
in
pop
fsubr
cmc
xchg
pusha
dec
push
inc
push
push
lcall
or
dec
jmp
nop
push
xchg
pusha
cmp
xor
mov
push
rorb
repz
lock
je
adc
jo
out
wrmsr
bound
popf
jg
hlt
sub
sbb
xor
and
push
fld1
push
in
iret
aaa
rcl
shufps
inc
and
push
adc
xor
addl
inc
out
xor
jl
call
lock
ret
cmp
sbb
mov
lahf
jne
xor
xor
add
gs
or
dec
fisubl
jbe
mov
ja
and
mov
push
mov
lods
test
int
fsubl
rcll
jnp
hlt
dec
adc
std
add
dec
jge
paddsb
sbb
scas
cmpsl
out
pop
out
sub
inc
cmp
pop
insb
xor
push
push
mov
or
aad
mov
insl
sub
cli
adc
call
add
imul
adc
cmp
dec
int
adc
and
mov
jg
dec
adc
jbe
jns
test
in
mov
cmc
lods
arpl
jb
test
push
roll
mov
fucomi
popf
mov
mov
adcb
jge
shlb
sub
sub
sub
fnstenv
cmp
or
push
adc
inc
cmp
or
xor
push
loope
imul
or
inc
or
es
and
test
jnp
imul
pop
dec
pop
aad
shr
js
movsb
lea
gs
movsl
xor
mov
cltd
outsl
testb
jo
insl
cmp
push
shrl
leave
in
lock
in
insb
call
sub
shll
mov
test
and
jns
lea
pop
mov
shrl
adc
jno
imul
jb
xchg
dec
push
push
jbe
sbb
lods
sub
dec
xor
sub
gs
cs
insl
divl
nop
out
insl
out
ja
clc
jge
fisubs
ret
jb
push
inc
pop
sbb
cmp
pop
adc
scas
mov
gs
inc
out
jno
hlt
push
and
xor
lock
jno
enter
mov
sbb
mov
push
mov
xor
and
xchg
lods
inc
push
sub
sbb
push
mov
jmp
daa
push
gs
sub
cmp
mov
pop
cmp
sbb
into
lds
ret
hlt
testb
fcoms
cltd
unpckhps
test
cmp
lahf
jns
dec
mov
aam
mov
sbb
xor
sti
sub
mov
je
icebp
jg
fs
stc
popf
popa
add
cmp
mov
fsubrp
fdivrl
gs
push
test
xor
je
mov
adc
dec
mov
or
cmp
xor
jp
mov
mov
je
add
or
xorb
cs
ret
push
dec
cmpsl
cmc
in
pop
dec
cmp
pushf
movsb
cld
les
push
fdiv
and
xor
and
pop
popf
sub
cmp
inc
in
lods
mov
or
pusha
sbb
idivb
clc
pop
scas
inc
xor
pop
stos
jns
int
fistl
mov
push
add
mov
dec
xor
mov
fs
push
pop
adc
fsts
push
add
mov
cmp
psubd
nop
pop
sbbb
jbe
imul
mov
adc
sbb
outsb
scas
xor
or
add
adc
imul
dec
sub
test
push
loope
mov
int
lods
imul
scas
in
pop
push
sub
call
loope
cmc
adc
stos
pop
insl
popa
dec
xor
push
test
push
sub
test
popf
in
ja
and
cmpsl
or
cwtl
mov
gs
jb
cmc
out
mov
leave
push
scas
fcmovne
push
mov
das
scas
fucomp
adc
mov
and
jnp
mov
pop
mov
into
mov
xor
push
and
mov
dec
xor
call
out
stos
gs
or
sahf
inc
lds
pop
sub
stos
popa
sbb
iret
fsubl
mov
test
stos
mov
xor
jmp
cs
jle
push
das
inc
jle
lds
sub
adc
xchg
in
xchg
push
data16
push
or
cmpsl
xor
out
fsubp
subl
call
fbld
jo
mov
cwtl
mov
push
dec
mov
test
std
clc
pop
in
xor
xor
gs
mov
fs
dec
add
mov
arpl
mov
xchg
dec
sub
outsl
imul
sbb
and
gs
in
inc
movsb
in
push
sub
in
in
xchg
in
mov
insl
jle
roll
js
and
mov
les
sbb
lods
mov
mov
adc
push
ljmp
inc
push
xor
push
xchg
adc
imul
jo
push
or
mov
outsb
test
shll
sbb
xor
clc
xor
popa
mov
xorl
gs
imul
inc
mov
leave
data16
gs
fs
mov
and
mov
sbb
popa
xchg
or
sub
xchg
lods
arpl
insb
gs
call
test
popa
je
pusha
jb
shll
imulb
sub
gs
popf
pop
mov
add
mov
jb
gs
mov
push
bound
popa
inc
inc
cmp
sbb
pusha
mov
ja
xchg
outsb
ss
mov
cmpsl
inc
aad
mov
or
stc
test
dec
sub
lock
mov
sbbb
popa
lods
push
sbb
xor
lods
in
test
mov
jbe
and
mov
or
sti
imul
mov
cmp
mov
sbb
pop
mov
pop
in
jns
mov
test
mov
insl
xor
mov
xor
scas
adc
push
pop
push
add
mov
and
adc
inc
hlt
cld
int3
and
push
stc
and
mov
and
sahf
aad
fisubrs
shll
push
inc
fs
sbb
aad
shr
sub
cmp
mov
rclb
xor
and
inc
jg
mov
inc
les
push
gs
ret
jp
adc
jl
in
and
test
pop
aad
or
movsb
sub
subl
shll
push
lcall
xchg
push
and
enter
outsb
arpl
dec
push
cmp
and
cmp
jecxz
mov
orb
mov
adc
push
out
lea
jmp
and
mov
add
rclb
push
imul
int
xor
mov
jl
xchg
jno
addr16
xchg
sub
cmp
push
call
bound
push
mov
xor
mov
call
xor
xchg
loopne
ljmp
int
xor
add
xor
jecxz
in
and
adc
aam
iret
xchg
mov
push
ret
xorl
call
daa
stc
dec
xor
cs
fnstcw
cmp
xchg
gs
fldenv
cmp
fdivrl
jecxz
clc
push
in
mov
push
push
adc
fmuls
cmpsb
or
push
ret
fidivl
insl
loop
clc
xor
int
xor
mov
jg
jns
cmpl
push
in
add
xor
push
outsl
out
cltd
xor
cmp
sub
fs
fs
xorb
fldcw
addr16
pop
gs
leave
in
test
mov
mov
mov
dec
jle
ret
cmp
test
rcl
fisubl
xchg
test
fimull
xchg
mov
mov
aaa
loopne
fmull
jnp
mov
popa
add
lret
ss
insl
push
faddl
mov
std
arpl
ja
push
dec
mov
imul
xor
xlat
das
mov
gs
lods
push
jmp
filds
sbb
push
cli
pop
push
and
sub
or
push
push
cmp
int3
rcrb
dec
cs
fs
pop
push
gs
clc
rcrl
mov
lods
push
mov
sbb
movsb
pop
gs
int3
int
out
rcrl
inc
out
movsb
and
cmpsb
sbb
lock
mov
lcall
adc
sbb
sub
xchg
xchg
aaa
push
mov
push
aas
int
mov
shl
and
mov
mov
sub
adc
jns
xor
int
xor
mov
xchg
sbb
adc
cmp
stos
sbb
sbb
jne
mov
jecxz
push
cli
lods
xchg
jp
pop
pop
divl
xor
sbb
loop
sbb
mov
std
push
insl
jg
shlb
lods
push
sub
loop
test
mov
bound
loop
inc
push
and
xchg
xor
cs
mov
pop
cmp
into
mov
adc
pop
dec
out
jmp
cmp
mov
cmp
out
mov
dec
ljmp
clc
and
ds
dec
sarl
xor
mov
testl
cmp
aad
xchg
sbb
inc
shlb
loop
push
mov
out
call
gs
pop
xchg
mull
pop
shll
sub
mov
sbb
out
subl
inc
mov
mov
push
out
inc
and
rorl
in
add
in
pop
sbb
adc
jg
push
scas
jmp
mov
cmpsb
mov
sub
push
addr16
loopne
rcll
aad
gs
imul
int
sub
out
jnp
loopw
mov
pushf
in
lea
pusha
int3
imul
pop
push
hlt
xchg
dec
sub
gs
popf
mov
push
mov
cs
sbb
dec
movsl
lods
insb
and
push
inc
jge
cs
call
push
push
mov
jmp
outsb
and
mov
sub
push
insl
test
push
lods
je
pushl
insb
test
pop
jno
out
mov
inc
cmp
push
and
sub
pop
mov
inc
inc
int3
jle
inc
xchg
xor
fs
jns
pop
sahf
pop
lcall
pushf
gs
dec
stos
movsl
inc
mov
lds
in
inc
arpl
mov
imul
pop
mov
leave
push
cmp
push
push
stc
push
imul
bound
or
insl
inc
and
dec
pop
int
data16
inc
pop
sub
hlt
sub
insl
add
imul
mov
insl
pop
push
jg
ret
enter
dec
xchg
outsl
inc
mov
outsb
adc
or
data16
jb
sub
popa
mov
fsubrl
dec
cmp
pop
test
insl
mov
or
call
or
std
pop
or
mov
inc
lea
jno
ret
fsubr
lcall
inc
out
cmc
xchg
stc
xchg
xor
aas
imul
push
jno
hlt
ds
fldt
cmc
inc
mov
hlt
sub
inc
dec
fdivs
lea
jae
mov
mov
sub
insl
popa
cmp
dec
imul
dec
dec
fs
in
fisubl
push
adc
jb
mov
outsb
ds
cmp
mov
out
js
aad
dec
push
ss
xlat
in
push
xchg
addr16
xchg
lock
jo
dec
dec
cmp
pusha
outsl
repnz
jno
cmc
gs
int
mov
jo
insl
dec
push
and
adc
inc
outsl
popa
pop
pusha
out
or
push
dec
outsb
sbb
imul
in
jmp
rcrl
sahf
out
mov
mov
cmp
inc
pop
out
es
and
lock
xor
sbb
jno
xor
jo
gs
add
lcall
cmp
mov
clc
gs
in
outsb
les
mov
movsl
gs
push
fs
push
popa
push
loop
push
dec
aam
jae
jae
iret
jb
dec
addl
push
in
mov
dec
push
pop
or
fcomps
mov
jl
cmp
xor
pop
popf
cmp
add
push
lds
or
insb
popa
in
lcall
ljmp
test
push
sub
pop
jae
repz
ss
imul
call
push
arpl
pop
sbb
pop
jecxz
in
movsl
push
jae
je
imul
jb
arpl
jo
lea
inc
mov
and
xor
imul
inc
add
jnp
test
repnz
fists
push
arpl
cmp
jg
jbe
mul
ss
adc
in
movsl
pop
fldt
mov
and
invd
repnz
fnsave
pop
icebp
in
stc
lock
push
and
outsl
in
loop
test
popa
lods
pop
inc
outsl
clc
iret
dec
xor
xchg
pop
jnp
jno
lods
push
outsb
dec
lods
sub
insl
iret
push
sub
stc
xchg
mov
pop
push
pusha
sbb
data16
mov
xor
jns
pushf
test
icebp
add
orl
or
mov
sbb
cmp
popf
mov
mov
lea
addr16
sbb
xor
xchg
inc
lods
dec
rcl
cltd
sub
pushf
xchg
push
dec
and
mov
stc
mov
aam
addr16
or
imul
stos
ja
popf
xor
mov
add
cmp
in
pop
mov
pushf
cmp
xchg
in
or
sbb
sub
adc
jmp
dec
in
lods
jg
sbb
pop
pop
sbb
sub
adc
mov
pop
mov
cmp
addl
or
xor
cwtl
sub
pop
mov
inc
pop
cld
insl
in
xchg
cmp
jbe
sub
xor
lret
xor
insl
in
aam
jnp
aam
mov
pop
push
pop
xor
push
test
push
xor
fstpl
jae
push
xor
cs
push
add
push
xor
mov
lods
cmp
xchg
in
jmp
in
lea
xor
daa
cmc
push
cmpsl
push
scas
in
pop
clc
add
iret
lods
sub
mov
lods
push
rol
sbb
in
inc
sub
ljmp
popa
pop
lods
mov
sti
jae
mov
xor
movsl
mov
lcall
mulb
hlt
jg
jmp
and
andl
pop
lahf
push
jecxz
lock
sub
sahf
rcrl
jge
into
ja
notb
sbb
dec
dec
jge
mov
orl
jge
sbb
stc
inc
jne
sub
in
ret
push
jmp
in
loopne
sti
xor
xchg
in
loopne
adc
xchg
leave
loopne
xor
shr
cld
xor
aad
cmc
leave
fs
push
xchg
add
push
or
imul
arpl
popf
pusha
pop
fcoml
jg
xchg
rcrb
movsb
pop
push
pop
push
xor
movsl
jmp
negl
mov
add
sbb
mov
gs
push
adc
xor
jmp
or
in
sahf
xchg
mov
mov
cmp
lods
outsl
mov
jb
mov
push
ljmp
in
sub
xchg
fdivrs
xor
adc
addr16
imul
sub
mov
ret
mov
jo
jge
xchg
push
jb
inc
jl
jnp
push
jb
cmc
scas
cmp
sbb
xchg
sbbl
jae
test
aad
inc
loope
int
xor
or
js
aad
pop
adc
addb
inc
scas
mov
or
cmpsl
in
push
pop
jae
pop
fildl
xor
aad
fidivrs
sbb
movsl
mov
and
addl
mov
push
jmp
aaa
pop
and
mov
sub
mov
push
lods
dec
mov
inc
pop
xor
cmp
ret
xor
lods
sub
push
and
sbb
mov
test
sbb
jge
mov
mov
inc
dec
adc
pop
aas
pop
adc
aam
loopne
test
add
cld
aaa
xchg
aam
dec
rcll
xor
or
dec
jg
ret
adc
arpl
test
jns
push
adc
push
jbe
das
loopne
fsubr
and
push
rcl
inc
xor
negl
decb
inc
cltd
fs
jo
leave
xchg
aaa
mov
mov
xchg
leave
ljmp
add
bound
mov
pop
and
pop
sbb
mov
mov
xchg
mov
lods
clc
das
test
mov
and
fs
xchg
mov
test
sub
mov
stos
arpl
or
repz
push
not
cmp
jno
inc
repz
lods
insl
sub
je
in
gs
in
mov
and
pop
jge
jmp
dec
andb
inc
jns
inc
lea
shll
push
inc
insb
das
xor
and
insl
sbb
fimull
and
lds
xor
fbld
arpl
jmp
int3
push
mov
clc
loopne
call
out
and
jae
les
xor
shlb
sub
arpl
xchg
xchg
pop
in
adc
xor
lods
popa
xor
jnp
push
popf
inc
mov
adc
xor
lods
xor
push
std
inc
movl
popa
mov
adc
adc
cmp
arpl
push
push
sub
or
or
in
or
push
push
sub
cld
sub
xor
push
addr16
lret
xchg
mov
sub
and
hlt
and
mov
and
mov
xor
gs
jp
or
and
jns
xchg
jnp
push
push
mov
and
sub
es
xor
jl
sbb
repnz
popf
hlt
or
xchg
xor
outsl
out
jbe
fbld
es
push
cld
jmp
cmp
scas
cmp
es
popf
xchg
js
push
testb
repnz
xorb
push
dec
mov
in
inc
lea
sub
add
inc
inc
jg
inc
sbbb
mov
insb
les
jp
dec
out
shlb
lods
mov
push
mov
std
aad
scas
xor
and
repz
add
xor
dec
inc
pop
inc
fs
in
jae
cmp
in
daa
sub
addr16
in
push
gs
xor
jb
in
push
sub
cmp
aam
mov
out
test
adc
lock
ljmp
js
lock
cmp
das
insl
paddb
imul
push
bound
lea
lods
insb
jns
jno
mov
push
insl
mov
aad
mov
lret
add
fsubs
loopne
lea
outsb
pusha
loopne
daa
mov
pop
int
mov
push
test
push
jl
xchg
insl
sub
inc
mov
inc
sbb
xorl
das
push
fs
insl
and
int3
cwtl
and
dec
xor
imul
cs
adc
mov
cmp
cwtl
and
push
and
lcall
std
push
push
out
sub
mov
adcl
push
jmp
jg
xor
mov
jge
fdivs
insl
xor
jmp
gs
adc
fisubrs
jno
in
fsubrs
pop
jmp
jle
jmp
or
out
gs
jae
cmp
mov
jb
push
dec
je
add
xor
xlat
push
lods
and
repz
arpl
rcrb
push
ja
or
push
sbb
dec
gs
jle
aam
xchg
dec
jb
push
insb
gs
insl
pop
repnz
adc
cmp
lcall
add
inc
or
aaa
lds
or
dec
push
mov
test
insb
jno
adc
pop
imul
aaa
sahf
jne
outsb
jmp
gs
sub
addr16
lods
push
inc
popa
lahf
jg
mov
mov
repz
dec
adc
mov
cltd
lahf
popf
jns
into
jno
xor
jge
pusha
fst
push
leave
dec
sahf
jmp
mov
mov
gs
and
hlt
xor
cmpsl
and
xchg
xorb
pop
sahf
jp
mov
jle
mov
roll
dec
mov
xor
das
jnp
adc
xchg
inc
mov
lahf
dec
inc
fmul
mov
adc
lds
adc
jb
mov
arpl
inc
inc
add
adc
in
adcl
sbb
imul
and
leave
sbb
mov
in
mov
or
add
leave
cld
icebp
lahf
xor
mov
in
mov
call
mov
clc
lock
pop
fwait
pop
mov
xorb
adc
loopne
jb
jmp
in
repz
jne
sbb
mov
mov
xchg
push
std
pop
aas
lret
insl
mov
mov
fisttps
xchg
fnstsw
jp
push
xchg
inc
leave
in
icebp
lahf
xor
mov
in
mov
add
add
leave
or
mov
in
mov
and
and
jnp
sbb
lock
xor
stc
dec
push
daa
jp
stc
lcall
dec
das
adc
xor
inc
dec
lock
cmp
pop
push
xlat
push
mov
inc
mov
push
xchg
sbb
lds
in
leave
push
xchg
loope
lods
or
sbb
in
and
push
add
lahf
xor
adc
add
sub
imul
scas
imul
insb
sbb
test
xchg
dec
mov
jecxz
push
mov
adc
lea
pop
cmp
xor
and
jns
xchg
out
movsb
fs
mov
add
push
sub
imul
mov
and
cltd
xchg
adc
stc
fdivs
push
das
and
dec
pop
or
sbb
pop
add
dec
pushf
adc
xor
pop
sti
pop
inc
push
add
mov
lcall
popf
stc
xor
adc
add
imul
scas
jmp
les
imul
scas
and
fsubs
lahf
mov
and
pop
outsl
int3
scas
daa
hlt
mov
movsb
mov
pop
cmp
add
mov
pop
jmp
jno
push
fcompl
daa
das
insl
rorb
insl
jae
pop
stos
mov
cmp
jno
mov
imul
lock
rorb
adc
lock
sbb
daa
imul
jmp
push
stos
mov
stos
insl
push
and
insl
insl
out
jo
and
repz
sub
lret
pop
add
mov
or
icebp
push
sub
dec
mov
fs
in
xchg
pop
test
lods
dec
pop
stos
dec
pop
adc
cmp
out
ret
lods
fs
sub
ret
jno
dec
rcl
adc
jmp
inc
jmp
fs
shlb
in
insb
repz
roll
dec
pop
mov
jmp
cli
out
and
ljmp
push
push
ret
xor
addr16
and
lock
or
mov
jno
fwait
dec
aaa
adc
bound
adc
hlt
mov
negb
addr16
mov
stc
mov
insl
nop
std
clc
push
dec
ret
outsl
mov
pop
stos
lret
pop
pop
imul
xor
arpl
dec
jmp
cmp
ds
aam
imul
mov
pop
imul
fs
pop
in
insl
nop
push
inc
sub
sub
out
sub
sub
mov
cs
push
shl
mov
gs
mov
out
push
int
icebp
xchg
popa
or
arpl
fldcw
add
sub
and
in
nop
cmp
int
lcall
insl
loope
pusha
push
mov
pop
xor
pop
xchg
aam
and
pop
lods
pop
pop
xor
and
add
pop
add
mov
je
mov
ret
test
rolb
sub
loope
add
jmp
or
push
inc
jmp
mov
fnsave
pusha
pop
and
or
imul
pop
daa
and
mov
push
or
imul
sti
xor
in
in
mov
xor
popa
mov
lock
and
hlt
xor
xchg
add
xor
add
add
push
push
gs
jno
push
pop
repnz
inc
imul
hlt
in
add
bnd
push
loop
mov
sub
inc
sbb
lret
mov
mov
add
push
xchg
aad
ja
lcall
repnz
lret
lcall
rorl
add
or
or
mov
test
scas
lock
sahf
or
inc
xor
jge
outsl
jb
addr16
xor
inc
jne
loope
stos
lods
and
sbb
lods
pop
xchg
adc
sbb
popa
aaa
jb
icebp
inc
adc
inc
sbb
sub
push
jns
icebp
adc
inc
out
jnp
and
in
push
mov
lods
inc
std
dec
and
loopne
in
adcl
out
lea
dec
xor
cmp
ficoms
int
jecxz
ja
adc
sbb
int
arpl
leave
fs
jnp
xchg
add
and
add
lock
mov
out
inc
dec
mov
xor
push
cmpsb
mov
jl
insl
mov
jns
repz
dec
in
fnsave
mov
cltd
hlt
adc
mov
daa
addl
xchg
loope
xchg
arpl
inc
xor
movsl
xchg
push
pop
or
push
inc
cmp
jecxz
stos
or
andl
insl
cmp
test
in
iret
xchg
lahf
add
jbe
or
nop
jae
mov
jbe
fcompl
and
adc
mov
mov
xchg
mov
ficomps
push
fisttpll
daa
mov
jnp
out
push
dec
mov
ficomps
mov
sbb
movsb
sub
stos
fbld
cmp
mov
sub
shll
ja
shr
sbb
lcall
and
shrl
cs
sbb
push
mov
and
gs
jl
popf
adc
and
std
sarb
pop
xchg
bound
aas
mov
sub
cli
in
aad
rcl
lahf
dec
into
jge
ja
in
jb
enter
hlt
popa
loope
add
fiaddl
insl
or
xor
sub
loopne
mov
cmp
loopne
sub
imul
mov
das
lock
push
xor
inc
insl
inc
inc
aas
xchg
test
pop
jl
imul
addr16
dec
mov
cld
in
gs
outsb
ljmp
add
sbb
cmp
mov
mov
out
mov
add
loop
mov
je
test
out
pop
cs
test
pop
addr16
ljmp
xorb
dec
sub
test
mov
jb
fmull
ss
les
cli
stos
fnstsw
cmp
mulb
scas
and
or
in
pop
lahf
int
add
xchg
cmpsb
cmp
stos
in
js
lods
jp
push
add
mov
sub
pop
cmc
pop
mov
adc
fisttps
add
je
outsl
std
bound
inc
arpl
dec
shll
dec
test
and
lea
js
pop
push
and
aam
in
push
sbb
lods
fs
arpl
push
cmp
insl
lea
xor
xor
jmp
push
insl
mull
jbe
mov
jns
in
mov
pop
push
cmpb
addr16
jp
sarl
jno
repz
popa
lahf
cmp
ret
xchg
push
in
dec
mov
addr16
sbb
push
pop
adc
jbe
call
xor
push
pop
les
imul
sahf
jnp
arpl
nop
sub
ret
push
cmp
daa
or
gs
stos
cmp
and
push
push
push
mov
aam
fdivrl
lea
mov
addl
adcl
push
stos
in
in
outsl
mov
cs
mov
sbb
insl
loop
mov
add
outsl
fidivrs
xchg
es
jno
jae
or
xor
jle
cs
dec
adc
mov
mov
pop
sbb
push
xor
inc
xor
pop
and
icebp
inc
ss
stos
adc
inc
mov
adc
in
dec
stos
or
daa
adc
or
jl
xor
add
adc
sub
cld
lock
in
cmp
clc
push
shlb
xor
shlb
jecxz
call
gs
dec
pop
imul
call
popa
xor
lods
and
loopne
mov
fsubl
lods
sbb
flds
jge
adc
push
in
lods
shll
cs
adc
or
cmp
imul
mov
jge
add
push
icebp
gs
mov
xor
hlt
out
and
clc
stos
mov
cld
out
push
mov
lods
loopne
mov
pop
in
movsl
push
dec
in
lods
test
in
inc
lods
cmp
imul
in
push
and
imul
xchg
add
out
cs
push
bound
roll
js
out
lds
in
lods
leave
adc
int
in
mov
jno
inc
shlb
mov
mov
out
mov
jg
mov
imul
in
sub
movsl
imul
test
adc
jo
mov
scas
subb
ret
add
popf
int
pop
outsl
pop
outsb
push
scas
pop
notl
xor
cmpsl
push
imul
les
addr16
gs
xor
ja
sbb
xchg
xchg
sub
mov
push
jno
sbb
out
sbb
subb
mov
lret
orl
imul
sbb
test
ljmp
ret
adcl
ds
lock
add
dec
cld
test
mov
addb
movsb
dec
fstps
dec
jbe
test
out
dec
mov
addb
loope
sbb
cld
icebp
xor
sbb
ret
adc
xlat
xchg
dec
rcrl
imul
pop
lcall
pushf
jno
push
mov
rolb
out
push
aas
pop
and
sub
xor
subl
add
leave
sbb
aad
inc
sbb
dec
test
dec
jl
and
push
test
or
insl
lcall
sbb
test
and
jl
ljmp
daa
fldcw
add
sbb
cmp
daa
add
adc
adc
xchg
mov
xchg
xchg
ljmp
fcom
ljmp
and
sarb
jno
loop
pop
gs
xchg
int
push
cld
imulb
xor
cs
clc
idiv
or
scas
sarl
movsl
into
add
cmp
out
and
ja
push
push
add
insl
clc
negl
imul
push
imul
adc
mull
notl
mov
movsl
fs
cs
arpl
xchg
push
inc
fidivrs
xor
dec
adc
dec
sbb
popa
leave
outsl
jg
xor
adc
dec
or
decl
test
dec
roll
scas
lea
fsubs
test
rolb
pop
add
jbe
and
shlb
insl
test
dec
mov
pop
cmc
jmp
popa
and
pop
mov
jle
gs
aam
je
insl
bound
inc
fnstenv
cmpsl
push
ret
push
add
lods
sbb
iret
push
mov
ljmp
nop
push
gs
shrb
xchg
enter
dec
stos
push
pop
repz
sbb
xchg
pop
cmp
push
mov
fiadds
mov
cmp
inc
cmp
out
sahf
hlt
sub
out
xchg
jae
mov
xchg
and
lods
sbb
push
adc
inc
pop
mov
bound
sbb
loopne
ljmp
ss
sbb
jbe
and
xchg
push
nop
ja
fsubs
pop
sub
pop
add
sbb
push
cmp
les
sbb
add
int3
aaa
cld
enter
adc
dec
iret
insl
pusha
mov
arpl
imul
mov
and
and
in
imul
xor
cmp
mov
cli
inc
in
jbe
in
adc
das
adc
jbe
dec
aad
fcmovbe
rol
jne
out
fs
ret
ljmp
ljmp
je
push
lret
loopne
cmp
dec
cmpsl
and
fidivs
lea
shr
push
or
dec
jg
sti
xor
popa
sub
gs
mov
gs
sub
movl
sub
clc
loope
test
pusha
add
shll
aad
pop
lcall
cltd
mov
pop
int
lret
insb
xor
mov
xor
jbe
imul
outsb
xlat
pusha
shrl
push
insl
sub
test
gs
into
push
mov
xchg
insb
shll
hlt
pop
push
lock
fcomip
in
insb
loopne
sbb
xor
mov
pop
pop
loope
add
icebp
mov
je
jae
popf
jb
movsb
mov
cwtl
dec
sub
inc
add
pop
xchg
push
pop
lea
movsl
push
pop
mov
xor
sbb
mov
fistps
dec
jns
pop
int
jo
aad
push
fs
mov
orb
mov
sub
ja
add
dec
cmp
mov
push
fs
mov
outsl
xor
je
cmc
mov
outsb
test
sbb
lds
mov
lea
jae
jge
mov
subb
sub
call
in
push
or
repz
in
movsl
cmp
pop
insl
in
xor
push
out
das
aad
xchg
in
mov
sub
xor
arpl
js
sti
data16
cmp
js
addr16
addr16
fwait
rcll
loop
xchg
ficomps
ja
mov
inc
sbbb
leave
lahf
std
mov
dec
popa
sub
add
int
addr16
sahf
jp
lahf
jmp
lds
imul
pop
dec
imul
icebp
dec
fisttpl
inc
das
loope
sbb
mov
imul
fadd
clc
pop
jnp
aad
xchg
add
cmc
sub
leave
xchg
imul
insl
push
jmp
out
xor
sub
inc
push
movsb
popa
faddl
or
add
les
dec
jle
sbb
sub
insl
repz
cmc
cld
add
arpl
mov
bsf
dec
je
mov
cs
jb
and
test
xchg
dec
jns
xchg
cmpb
dec
insb
in
inc
cld
lret
add
jbe
pop
fstpt
insl
sub
cs
jbe
lock
xchg
inc
xchg
sbb
jmp
pop
lahf
push
mov
pop
mov
pop
push
xor
lds
out
xor
outsb
ret
repz
xor
pop
repz
popa
add
shll
gs
je
loop
mov
stos
fisubrs
mov
jae
jo
add
mov
pop
mov
sub
in
sbb
mov
sub
gs
mov
stos
mov
xor
mov
es
jge
dec
leave
lahf
pushf
int
gs
cltd
cmp
pusha
dec
pop
in
xor
xor
repnz
push
xchg
movsl
sbb
jl
mov
pop
mov
in
aaa
cld
pop
sbb
and
rorb
fsin
xor
jge
sub
loop
mov
shrb
mov
stos
mov
jb
cmp
bound
je
loop
dec
out
popf
pop
jae
push
sub
and
push
in
jae
data16
imul
je
cmpsl
inc
rorl
adc
arpl
push
out
notb
leave
call
sub
leave
testb
notl
add
andl
sbb
ja
mov
dec
push
push
sub
outsl
hlt
cmp
call
imul
lret
inc
enter
cwtl
pop
mov
dec
popa
popa
xchg
mov
push
test
push
jl
xchg
sub
adc
lods
jmp
add
dec
gs
cmp
test
rclb
jle
idivl
ljmp
sub
loope
cmp
jae
and
ss
mov
ja
lods
lods
add
push
popf
xchg
and
push
in
addl
jecxz
test
jle
ret
aad
pop
movsl
cld
fsubrp
add
sarb
mov
xor
xchg
js,pn
xchg
fs
ret
test
jge
in
ss
test
cmpsb
push
mov
lea
xor
in
lds
outsb
pushf
int
repnz
fbld
movsb
cmp
push
cmp
clc
insb
or
and
in
xchg
loopne
and
aad
adc
sbb
mov
movsl
xor
cld
shrl
add
in
and
icebp
xor
xor
fs
fs
pop
movsl
subl
fdiv
xor
add
stos
gs
sbb
popa
xchg
xor
or
movsl
insl
inc
faddl
icebp
sub
bound
daa
push
mov
jmp
psllq
outsb
test
mov
loopne
cmp
push
jp
add
push
orl
sbb
cmpb
jp
xchg
push
xor
pop
insb
cmp
sub
je
jmp
mov
scas
cmp
movsb
into
and
test
cmpsl
sbb
arpl
inc
xlat
aad
xchg
add
lock
pop
lret
ret
inc
sbb
jne
test
insl
fdivs
xchg
and
xchg
add
xchg
into
mov
xor
test
pop
imul
mov
outsb
pop
cld
xchg
daa
adc
sub
daa
add
out
and
daa
xor
add
pop
xor
xchg
and
sub
sub
lea
and
lahf
outsl
bound
dec
sbb
or
sub
gs
int
pop
cmp
push
xlat
xor
adc
pop
das
aad
leave
mov
dec
shr
gs
mov
out
sbb
je
addr16
jle
pop
popa
inc
sub
call
dec
in
gs
arpl
ja
je
cmp
mov
scas
xor
cmp
push
mov
popa
lret
sbb
dec
imul
dec
dec
icebp
fstpl
xchg
fwait
sbb
dec
icebp
fistpl
and
shll
outsb
insl
push
mov
and
push
mov
addr16
mov
iret
stos
and
mov
shll
ret
adc
dec
cli
inc
sub
clc
cmpsb
mov
inc
arpl
pusha
aad
pusha
xor
sub
loopne
sub
dec
fwait
inc
jb
icebp
lods
add
insl
outsl
stos
dec
mov
jmp
jbe
sub
gs
sbb
xchg
inc
xor
add
jno
test
cld
mov
lods
in
cld
push
icebp
jae
outsb
aam
jmp
jmp
dec
cmp
dec
scas
inc
shl
or
fwait
int
cli
dec
cmc
sti
sub
clc
add
mov
or
and
and
adc
lea
jecxz
jb
jae,pn
insb
sub
jno
data16
jmp
enter
sbbb
and
pop
in
and
in
jae
bound
rolb
in
and
lea
fs
outsb
push
jnp
stc
int
inc
sub
sar
dec
push
sbb
fmulp
cmpsl
ljmp
leave
pop
xor
ficoms
xor
dec
out
push
sbb
int
rorl
mov
or
pop
push
rcl
push
outsl
pop
stos
outsl
fsubs
test
jp
xchg
or
cmp
mov
aam
lods
out
aad
divb
cmp
lock
pop
rorl
daa
mov
push
xchg
iret
xor
dec
js,pn
and
mov
js
xor
push
gs
mov
push
arpl
sti
pop
call
enter
std
aam
insl
mov
lock
repnz
mov
call
insl
lock
xchg
push
mov
shrb
popa
mov
iret
out
mov
sarb
push
cltd
and
mov
insb
mov
adc
add
jns
xchg
outsb
loopne
shll
cmp
and
mov
pop
xor
mov
xchg
dec
mov
jge
roll
les
xchg
rcrb
or
nop
fs
aad
rcl
push
popa
sahf
mov
pop
lea
jge
mov
xchg
and
or
sbb
xchg
push
aam
aad
adc
xchg
dec
fcomi
sub
push
pop
sbb
insb
pop
lcall
dec
push
icebp
sbb
push
jl
cmpsb
xchg
mov
bound
push
sub
pushf
mov
insl
outsb
jno
pushf
dec
pop
mov
adc
repz
dec
aam
xchg
or
iret
pushf
jae
outsb
jno
xchg
dec
lea
xchg
jg
nop
mov
jle
jg
jno
jo
das
outsl
push
outsb
gs
push
in
inc
std
stc
scas
in
xchg
insb
mov
mov
cmpsb
mov
cmp
push
jns
lea
push
imul
cltd
xor
jb
jmp
pop
in
lock
jo
loopne
bound
sbb
push
dec
xor
fsubrs
xor
cmp
out
jmp
je
popa
mov
jbe
mov
inc
push
and
loopne
adc
daa
das
out
mov
movsb
xchg
rolb
aas
outsb
fs
lds
inc
jmp
arpl
jbe
cwtl
cmp
xor
cmp
in
ja
push
daa
add
xchg
clc
push
dec
sbb
ret
dec
negb
xor
sbb
gs
in
push
dec
mov
add
sbb
ja
add
rcrb
cmc
mov
sbb
call
push
loopne
inc
pop
lods
jb
les
xor
lea
fnstsw
imul
push
pop
insl
inc
inc
in
out
in
scas
jae
arpl
leave
decb
lock
icebp
push
imul
push
xchg
iret
mov
lods
pop
jmp
adc
lds
dec
xor
lods
xor
push
and
xor
in
cmc
xor
insb
xor
xchg
pop
adc
outsl
sub
int3
push
fiaddl
push
fs
pusha
lods
fldenv
gs
add
jmp
pop
jmp
pop
shlb
inc
out
cld
or
shlb
inc
push
xchg
sti
mov
lea
push
fwait
inc
rolb
push
jle
xchg
jno
aam
lock
fcmove
rorb
sti
insl
push
adcl
insl
push
jle
xchg
insl
mov
pop
push
push
pop
imul
push
pusha
or
fsubrs
adc
insl
sub
aas
into
in
push
cld
jl
in
fs
adc
jge
jge
jge
fisttpl
or
push
inc
adc
sbb
jmp
adc
push
lods
repz
push
jns
hlt
lea
pop
adcb
rcll
scas
lea
shll
sub
lea
insl
inc
sbb
out
xor
ja
repnz
loop
fldz
xor
xchg
push
aaa
cs
lods
es
das
cmp
lods
inc
sub
xchg
jno
insl
imul
out
std
clc
data16
pushf
jg,pn
lods
jg
gs
int
mov
out
xor
mov
jno
mov
in
push
imul
in
adc
and
out
sub
iret
cmpsl
and
cld
rep
jno
insl
lods
in
or
push
push
jle
adc
call
addb
andb
adcb
ja
pop
mov
rorl
xlat
call
aaa
cs
lods
push
pop
das
fisubl
pop
mov
aam
subl
mov
cmp
out
cmpl
mov
call
dec
sbbl
push
inc
mov
scas
xorb
xchg
in
push
cmp
xor
push
xchg
or
xor
lds
jmp
out
addb
pushf
mov
insl
pop
call
in
mov
mov
cmpl
or
ret
push
inc
cmpsb
cmpsl
sub
pop
imul
xorl
mov
dec
stos
test
mov
mov
lods
push
filds
call
and
ss
cmpsb
cmpsl
inc
addb
movsl
nop
push
call
test
push
mov
pusha
insb
ret
inc
not
icebp
xchg
popf
clc
divl
test
cltd
lahf
push
sbb
lods
sub
cmp
lods
dec
mov
inc
mov
xchg
pop
mov
xchg
mov
xchg
fiaddl
xor
inc
popa
adc
pop
mov
pusha
sbb
or
push
xchg
sbb
inc
rclb
mov
push
aaa
adc
cmp
adc
cmp
mov
in
or
into
scas
fistl
xadd
jp
sarl
sbb
or
enter
jp
icebp
imul
orl
push
jge
mov
add
mov
jmp
mov
add
mov
pop
test
out
xor
jecxz
mov
fbld
and
outsb
cmp
cmp
pop
lret
cmp
mov
scas
addr16
xchg
cltd
push
je
in
lods
sti
xchg
stos
sub
mov
xor
xchg
adc
cmp
or
pop
and
sbb
mov
imul
es
mov
add
popa
pop
in
sbb
mov
push
and
pop
dec
dec
xchg
sub
pop
mov
mov
lods
mov
add
lret
pop
loope
pushf
int
inc
movsb
mov
mov
int3
in
jmp
mov
cli
adc
mov
sbb
stos
pop
or
in
rolb
nop
inc
stos
in
in
cmpsl
xor
add
lea
jne
pop
popa
push
jle
fsts
mov
mov
lods
mov
mov
add
in
mov
fidivl
into
pop
jbe
jmp
repnz
xchg
sub
cmp
adc
jno
gs
imul
mov
popl
mov
test
and
cmp
pop
mov
aad
sbb
push
push
or
test
ds
dec
icebp
adc
imul
das
in
mov
xchg
nop
out
mov
mov
nop
xchg
fsts
aaa
fs
out
mov
cs
lods
fs
ja
fisttpll
jbe
jmp
xchg
pop
shr
iret
xchg
cmp
xchg
mov
xchg
pusha
insl
add
xor
or
std
pop
push
jmp
push
jp
pusha
insb
mov
xchg
movsb
aad
rclb
xchg
mov
xchg
cmp
add
rcrl
cmp
roll
movsb
fcompl
dec
xchg
lods
fsts
adcb
mov
out
cmp
inc
fisttpl
in
xchg
cmp
pop
mov
xchg
cld
or
jmp
sbb
sub
imul
dec
fs
les
pop
call
cmp
xchg
mov
xchg
pusha
push
xchg
pop
xor
insl
xlat
pop
lea
dec
fs
in
xchg
pop
lock
and
in
leave
inc
out
dec
and
cld
or
mov
add
clc
sbb
lock
xchg
cld
cmpsb
test
mov
int
test
xchg
enter
cld
add
pop
add
xor
clc
sub
in
leave
dec
out
push
and
cld
or
icebp
or
or
mov
push
rclb
xchg
pop
cmp
xchg
pushf
inc
adc
push
pop
clc
orb
stos
push
imul
pop
leave
test
or
sub
outsl
cltd
nop
adc
dec
or
jo
mov
ret
dec
stos
pop
adc
mov
outsl
lahf
shl
dec
cmpsl
xor
sbb
pushf
mov
mov
push
push
movsb
or
insl
jp
notl
inc
cwtl
jmp
xchg
push
and
in
into
fsubl
test
fistpll
mov
scas
xchg
mov
scas
repnz
jge
pop
push
mov
test
mov
sbb
cmp
pop
enter
stos
jge
cs
call
test
out
jae
or
add
inc
in
outsb
daa
fs
dec
rorb
xor
mov
and
cs
and
xchg
outsl
arpl
mov
int
scas
adc
aaa
pop
lock
mov
int3
xchg
out
mov
push
insl
leave
inc
pop
lods
xor
sbb
pusha
lret
mov
lret
sub
leave
icebp
in
enter
fsts
inc
dec
sub
js
popa
lret
inc
in
cli
sub
outsb
push
xchg
test
outsb
inc
mov
mov
movsl
pusha
sub
test
dec
out
dec
mov
or
mov
adc
daa
mov
xor
jmp
xchg
outsb
jmp
lret
or
out
jbe
xchg
aaa
jle
inc
jae
add
lods
xor
idivb
ja
inc
outsb
movsl
lock
dec
jb
mov
incl
or
scas
jbe
xor
sbb
aad
sub
inc
push
repz
mov
mov
icebp
in
outsb
dec
sub
mov
ljmp
orl
sahf
push
iret
fists
sub
mov
test
xchg
jle
hlt
repz
outsl
sub
in
or
cmp
stos
mov
jae
sub
or
je
fwait
inc
subb
pushf
sub
movb
iret
imul
jg
jmp
int
xchg
lahf
jb
movsb
in
and
jle
test
insl
add
add
out
push
subl
mov
mov
mov
push
in
imulb
loope
push
xor
mov
pop
gs
fs
sub
mov
and
push
add
or
jns
pop
in
mov
sub
stos
add
imul
inc
add
and
fcompl
js
inc
orl
int
mov
mov
xor
jmp
icebp
mov
inc
add
mov
inc
pop
mov
enter
orl
lea
dec
in
and
pop
mov
mov
cmc
js
pop
dec
add
shrb
or
xchg
in
xchg
mov
stos
js
jle
jl
fcmovne
xchg
iret
movsl
fsubrs
test
push
pop
test
cld
int
cmpsl
lock
jb
push
insb
insl
xor
clc
push
movsl
mov
mov
add
inc
in
int
sbb
jae
shlb
push
mov
mov
xor
dec
stos
into
pop
test
xchg
sbb
xchg
fnstenv
dec
addr16
sub
xchg
xor
lea
mov
insb
je
xchg
in
inc
cmpsb
in
sarb
and
inc
mov
test
in
xchg
ror
in
mov
add
add
and
jg
sbb
dec
push
lret
lahf
ljmp
mov
sbb
pop
push
push
xchg
xchg
adc
push
lcall
popf
hlt
ja
loopne
inc
andl
xlat
lcall
ljmp
jmp
loopne
mov
dec
jl
imul
mov
je
jne
sub
jnp
leave
dec
add
push
ss
adc
jmp
inc
scas
lea
fcmove
cmc
lahf
sbb
mov
movsl
loope
sbbl
mov
in
pop
or
sbb
cmp
push
xchg
outsl
mov
pop
jb
js
aas
pop
es
mov
xor
sub
repnz
out
dec
xor
mov
push
sub
pop
dec
adc
insl
jae
jecxz
pop
or
sub
jae
sub
test
inc
insl
and
jae
jno
daa
cmc
jo
cmp
cmp
jno
test
add
iret
rol
sub
rorb
insl
mov
pop
je
aas
arpl
out
jmp
popa
xor
jno
gs
xchg
mov
pop
dec
imul
jo
push
cltd
mov
out
xorl
arpl
out
mov
rcrb
pop
mov
lret
bound
sub
in
jae
pop
fstl
rolb
push
inc
arpl
inc
or
lea
xor
test
dec
arpl
inc
mov
jnp
imul
push
jae
or
sub
push
jno
loopne
iret
and
ret
dec
outsl
sbb
jae
pop
testl
xchg
ja
and
add
pop
andl
mov
int
inc
jae
test
andl
xchg
add
in
gs
call
dec
pushl
inc
insl
mov
push
pop
and
pop
sarl
jo
gs
inc
adc
jns
push
mov
pop
sar
mov
dec
imul
dec
add
je
shll
lret
dec
mov
lret
cmpsl
call
and
in
and
pushf
push
and
adc
xchg
push
fcomip
fisubrs
cwtl
fstpt
jl
fnstsw
dec
cmpsl
pop
pop
lea
dec
sub
je
sub
jmp
push
jb
ljmp
cmp
je
push
jmp
push
js
jno
cmp
test
subl
cmp
jbe
jo
cmp
cmp
je
outsl
xor
xchg
cmp
cld
cmpb
jl
push
data16
sub
ljmp
mov
loopne
xchg
mov
add
in
ss
mov
pop
js
fs
xchg
push
xchg
aas
add
cs
cld
out
in
lods
jbe
ds
xchg
push
cs
cmp
cmp
push
push
cmp
xor
cmp
test
cmp
fs
sbb
mov
repz
mov
dec
out
fmul
loope
cmp
or
push
pop
add
leave
push
mov
inc
stos
aas
xor
xor
aam
arpl
pop
and
mov
dec
xchg
lea
mov
mov
pushf
jp
xor
pop
ja
cmc
or
inc
aam
inc
roll
lock
fsubrl
xor
push
xchg
movsb
inc
insl
dec
pop
popa
xchg
rcrb
xchg
or
and
add
jle
in
jne
stc
sub
sbb
add
pop
in
iret
aaa
jbe
fbld
push
sbb
mov
out
in
xchg
in
mov
sbb
fwait
mov
or
mov
in
fwait
out
inc
lcall
call
call
pusha
xchg
call
mov
and
xchg
stc
call
inc
lcall
inc
inc
add
ja
jb
int
xor
ret
leave
roll
insl
cmp
loopne
jl
and
leave
push
mov
pop
push
mov
nop
rorl
cmp
jle
inc
jmp
lret
xor
loopne
sub
test
mov
mov
dec
xor
push
lcall
dec
mov
sbb
push
lock
mov
and
rep
lea
inc
sub
xchg
daa
jb
and
fcompl
push
and
movsl
fs
inc
fidivs
pop
or
jg
clc
xor
pop
mov
scas
add
push
gs
add
pop
vandnpd
push
scas
ja
sarl
aaa
popf
into
in
or
inc
out
stos
push
cmp
imul
add
jmp
xchg
scas
inc
xchg
xor
mov
sub
int
movsl
xor
int3
cmpsl
call
popa
or
loope
mov
testl
or
and
inc
xchg
shll
lahf
incb
xor
in
dec
js
sahf
jb
mov
xchg
xor
pop
pusha
shrl
jmp
mov
push
icebp
in
pop
jp
push
loop
jge
imul
gs
xchg
mov
arpl
mov
neg
aaa
scas
jb
jbe
icebp
jge
inc
sbb
mov
aad
ss
mov
fistpl
int3
mov
pop
lahf
in
arpl
es
xchg
add
ficomps
bound
mov
insl
test
lock
xor
test
push
fs
push
insl
add
scas
int
adc
insb
movsl
sub
insb
test
in
cltd
xchg
test
and
or
push
fsts
aas
jae
jle
sbb
aas
xchg
fs
test
imul
xor
xor
aaa
mov
push
gs
cmp
push
lods
pop
push
decb
leave
add
push
or
sub
test
cmp
addl
push
jns
xor
xchg
hlt
fisttps
add
mov
test
xor
sbb
lds
lds
xor
mov
lock
icebp
mov
push
in
loopne
or
sub
ja
sbb
dec
sbb
imul
inc
push
pop
bound
jl
lret
jge
nop
mov
insl
mov
hlt
int3
fs
sbb
pop
sti
xor
pop
cltd
push
js
out
inc
xchg
mov
mov
pop
jae
dec
in
push
dec
or
cld
sbb
push
repz
popa
mov
int
push
jle
std
lock
lea
pop
movsl
ss
inc
or
pop
test
in
and
scas
lret
xchg
push
hlt
clc
popa
jb
mov
in
lds
mov
stos
sbb
jle
js
aam
jbe
lret
pusha
add
icebp
push
int
sub
leave
adcb
ja
cmp
pop
imul
in
sub
or
cmpsb
fwait
ljmp
cmp
das
or
loope
aad
bound
shll
cltd
add
ret
xchg
ror
leave
cmp
shlb
push
imul
xor
dec
mov
push
arpl
ds
inc
cmp
push
in
sbb
clc
rclb
addb
sub
jmp
lret
xchg
aaa
insb
insb
and
popf
xor
mov
xchg
movsl
inc
push
lds
movsl
imul
rcll
jno
sbb
in
xchg
arpl
test
xchg
mov
insl
xchg
mov
jne
or
adc
sub
pop
imul
sub
xor
insb
lock
and
cltd
inc
cltd
inc
test
out
call
out
push
leave
inc
lahf
dec
sbb
fwait
push
xchg
mov
dec
push
test
mov
xor
xchg
xor
ljmp
mov
clc
jmp
push
xchg
out
xor
rolb
xchg
data16
lea
cmpsb
js
std
gs
insb
mov
xor
jae
addr16
shlb
jecxz
pop
clc
mov
mov
inc
xor
sahf
popa
xor
lcall
xor
add
stos
lods
mov
pop
cwtl
cmpsl
mov
xchg
scas
imul
xor
jmp
or
stc
xchg
add
data16
pop
in
outsl
pop
imul
addr16
xchg
in
dec
lods
pusha
jmp
xchg
mov
fcompl
xchg
xchg
ds
or
xor
jo
jnp
inc
add
pop
cs
mov
pop
push
cld
xor
add
lock
fistpl
mov
pusha
hlt
es
imul
shll
pop
lods
pop
adc
pop
out
jp
inc
pop
in
es
icebp
mov
stos
repz
insb
add
jmp
add
add
sub
mov
insb
add
ss
addr16
jb
push
mov
mov
ljmp
pop
sub
lea
in
sarl
in
mov
les
pop
push
pop
xor
pop
icebp
fs
ret
pop
fs
popf
add
dec
in
sbb
inc
movsl
sbb
push
test
popa
jbe
daa
out
cs
shl
movsb
xor
repnz
xor
sbb
jmp
dec
popa
gs
in
mov
mov
mov
scas
xor
pop
inc
das
dec
repnz
jno
cmp
xor
sti
push
sub
mov
inc
push
arpl
jno
pop
dec
or
jmp
add
or
test
cpuid
gs
lds
mov
cmp
push
jns
push
insl
lock
mov
arpl
add
icebp
and
nop
xor
or
push
add
popf
sbb
or
icebp
pop
adc
sub
lret
insl
data16
pop
imul
out
loope
test
mov
jo
or
add
repnz
imul
push
gs
adc
daa
jno
cmp
jb
push
aas
das
push
push
insl
fs
cwtl
adc
test
xor
arpl
xchg
and
lods
cmp
pop
jmp
sbb
xor
push
xor
imul
jge
fdivl
popa
loope
in
in
pop
pop
pop
jo
addr16
je
imul
gs
jb
jno
cli
lock
xor
outsl
lock
outsb
xor
mov
push
insb
gs
imul
push
imul
lods
xor
data16
jge
mov
imul
adc
add
jno
dec
xor
loop
jbe
rcr
iret
pop
cs
cld
lock
or
mov
pop
push
in
dec
addl
out
movsl
jnp
lds
xor
inc
sbb
call
pop
fstpl
popa
fwait
adc
push
xor
adc
push
sub
mov
pushf
mov
push
lods
scas
mov
xorl
push
scas
fimull
jmp
aas
xchg
sbb
push
ret
scas
test
fisubrs
xchg
pushf
mov
push
stos
scas
aas
xchg
sbb
xor
je
out
arpl
sbb
cmp
adc
adc
adc
sbb
push
or
loop
cmpsl
mov
popa
push
iret
pop
and
sbb
and
fisubs
je
sub
loope
jcxz
daa
pop
adc
addr16
sub
pop
sub
sbb
sub
fisubrs
insb
sub
fwait
pop
adc
loope
loopw
and
loop
adc
jecxz
jnp
lock
in
mov
sub
imul
sbb
sub
cmpl
xor
test
mov
xchg
add
pop
mov
mov
shrl
movsl
pusha
nop
mov
in
xchg
inc
insb
and
insb
sub
cs
add
add
mov
push
lea
pusha
shrl
jl
lods
pusha
or
mov
pop
or
andb
push
outsb
and
inc
pop
bound
imul
or
gs
xchg
leave
xor
xchg
out
in
cmp
cwtl
int3
dec
adc
xlat
xor
xchg
stos
mov
call
jb
xor
add
adc
sbb
mov
stc
fsubs
mov
js
pop
adc
adc
or
sbb
lea
cmc
jno
xor
push
mov
push
lea
jecxz
add
inc
xchg
mov
pop
loope
stos
sub
push
mov
movsl
data16
mov
or
lcall
cmc
outsl
cmpl
mov
movsb
shll
push
mov
pusha
mov
sub
aam
sbb
ds
call
inc
or
jmp
sbb
lea
jl
xchg
or
push
in
sbb
jp
out
insl
popa
bnd
fs
pushf
mov
imul
push
lods
insl
popa
imull
fs
mov
fs
insb
dec
pop
push
testl
dec
pop
inc
arpl
jb
sub
pop
add
sub
and
sub
adc
pop
imul
outsl
data16
popa
jle
mov
sub
fwait
int
or
cmpsb
mov
jle
sahf
gs
jl
pop
push
ja
mov
pusha
in
das
or
cmp
ss
push
popa
shll
add
movsl
mov
pop
push
sub
jno
jmp
cmpsb
adc
jmp
sarl
int3
push
popa
inc
icebp
and
outsb
icebp
cwtl
xor
push
inc
inc
inc
mov
mov
pop
xor
dec
pop
dec
stos
in
rcrb
fchs
pop
stos
rolb
push
mov
jae
jnp
mov
pop
mov
rclb
pop
and
cmpsl
xlat
xchg
in
mov
sub
mov
popa
insb
int
cmp
dec
push
sbb
push
fs
leave
lcall
aaa
push
fisttps
in
cmc
xor
pusha
test
sti
jle
imul
jl
insb
inc
les
fwait
movsb
sbb
xchg
push
xchg
pop
shlb
push
cs
cmp
dec
shll
repnz
dec
ds
popa
mov
dec
inc
test
dec
or
std
add
sbbl
cmpsl
repnz
jno
popa
and
cmp
pop
popa
sbb
jae
sbb
bound
pop
loopne
pop
dec
stc
push
cmp
popa
test
loopne
sbb
imul
jb
adcb
lea
adcl
in
fs
pop
sub
xchg
sysenter
iret
push
popa
dec
jg
mov
mov
cli
push
inc
aam
pop
push
pop
dec
push
in
ljmp
and
pop
xor
or
xor
sbb
push
imul
ficoml
inc
pop
popf
outsb
mov
adc
sub
cmpl
fidivrl
sub
mov
pop
mov
push
push
rcll
lret
fwait
insb
mov
das
popa
dec
push
fisubrs
ds
jecxz
loope
mov
dec
sbb
mov
and
test
shll
daa
push
fidivs
cmpsb
movsb
leave
mov
insb
sub
pop
rolb
sbb
jmp
sbbb
inc
push
dec
mov
jmp
packsswb
jmp
pop
sub
mov
out
and
fsubp
push
iret
out
push
jmp
faddl
sub
addr16
push
ljmp
cmpsb
movsb
lret
pop
xchg
popa
lea
scas
gs
xchg
fs
push
push
xor
in
xor
andl
dec
fnsave
stos
add
mov
iret
dec
std
aaa
js
gs
and
xchg
dec
popf
call
inc
loop
lods
dec
mov
push
pop
repz
push
sub
jge
jno
mov
jp
mov
outsb
rcll
gs
inc
sbb
insl
jb
mov
sub
mov
movsb
cli
jmp
push
push
jl
fs
lret
and
pop
xor
scas
jmp
push
sarl
mov
insb
scas
pop
jne
push
and
sub
cs
pop
sbb
xor
and
mov
jnp
adc
js
jbe
loope
repnz
insb
andb
int3
shll
xor
pop
pop
repz
mov
push
xor
insb
sub
jae
fs
mov
xor
insl
mov
xchg
jp
movsb
dec
mov
jmp
xor
mov
fsqrt
push
pop
jmpw
adc
inc
in
test
aad
repnz
xchg
sbb
in
push
insl
add
adc
roll
dec
fs
add
movsl
call
fsubr
int3
xor
dec
xchg
stos
popa
int
mov
mov
or
cmp
inc
cld
lea
and
insl
sub
stos
pusha
jl
xchg
fs
pop
pop
lea
pop
and
and
and
xchg
cli
fnstenv
movsb
xchg
stos
ss
jb
mov
or
loopne
mov
ss
shlb
lods
and
ja
sbb
pushf
mov
out
pop
xchg
dec
cld
js
fwait
pop
movsl
loopne
dec
push
dec
mov
imul
imul
push
lock
inc
test
out
sbb
out
push
imul
push
jno
out
cmp
dec
jg
mov
mov
pop
shlb
outsb
push
push
in
repz
insb
lock
jle
mov
test
rorl
fcos
stos
bound
mov
push
push
lods
pop
xor
pop
icebp
push
popf
loop
sub
stc
insl
sub
lcall
pop
sbb
jae
les
pop
loope
in
push
sbb
push
or
mov
mov
jp
mov
xor
jmp
sbb
addl
pop
dec
mov
adc
dec
pusha
out
movb
clc
outsb
dec
xchg
jno
fnstenv
dec
inc
xor
test
add
jae
popa
xor
cmc
bound
cwtl
rcll
sbb
sub
fcoms
xor
cmpsb
jmp
xor
xchg
fs
jnp
les
inc
loop
inc
push
xchg
dec
push
pushf
in
xchg
push
cmp
xchg
lock
pusha
or
mov
xor
inc
cmp
inc
push
mov
and
cwtl
xchg
jp
adc
cltd
lahf
div
sub
push
in
add
xchg
push
in
xchg
stos
add
adc
mov
dec
sbb
add
cltd
fdivrs
push
lea
orb
jp
enter
inc
lahf
cmp
cmp
add
sub
imul
nop
sub
dec
cmp
sbb
xchg
jno
push
jno
jno
in
jno
mov
imul
in
mov
push
pop
dec
dec
ret
gs
fsts
out
sub
lock
push
pushf
cwtl
xchg
adc
dec
cltd
pop
cmp
inc
inc
inc
fs
inc
pop
cltd
jmp
sub
push
lods
and
aas
pop
dec
test
jbe
jo
jo
in
jo
xor
stos
jle
and
es
ja
mov
pop
shll
jns
sub
mov
push
lods
dec
cmp
push
cmp
sub
adc
movsl
sub
pusha
icebp
sub
fcoms
scas
pop
cmp
cmp
dec
addb
fstpl
push
outsl
movsb
outsl
imul
jge
inc
cs
aad
mov
insb
in
jecxz
mov
popa
lcall
sbb
mov
jmp
cmpsl
adc
push
xchg
xchg
xor
cmpsl
pop
sub
mov
jmp
inc
sub
xchg
lods
xor
mov
inc
call
jbe
jno
outsb
stos
xchg
in
outsb
add
outsb
shrl
das
stos
clc
mov
mov
dec
mov
or
jecxz
pushf
movsl
push
stos
in
into
pop
mov
movsl
xchg
ffreep
movsb
insb
mov
push
testl
sub
and
lods
dec
pop
mov
push
lret
es
cld
insl
std
jo
in
fs
loopne
push
sbb
in
sbb
stc
adc
adc
sbb
and
push
loop
sbb
add
inc
in
popa
xor
pop
int
ljmp
out
push
push
sbb
pop
pop
imul
imul
xchg
gs
into
repnz
imul
inc
fsub
mov
and
mov
je
out
shll
daa
int
lea
xchg
or
cltd
xor
jo
mov
sub
inc
cmc
mov
insb
gs
or
xchg
pop
sbb
dec
movsl
push
push
mov
xchg
fsub
mov
mov
jmp
jecxz
xchg
push
push
push
cli
or
pop
mov
adc
pop
rcll
mov
xchg
mov
sub
js
inc
test
pusha
out
sahf
test
inc
cmpsl
adc
xor
dec
sub
nop
popa
ret
push
in
stos
adc
sbb
adc
mov
xor
loopne
sbb
adc
mov
jp
mov
add
cmp
sbb
push
mov
std
sbb
xor
xchg
inc
pop
movsb
lahf
mov
dec
stos
xchg
adc
mull
jb
pop
imul
jp
cmpsl
inc
sub
gs
ja
out
fs
jmp
push
imul
pop
sbb
imul
sbb
xchg
xor
jmp
jmp
mov
js
inc
gs
jp
xor
sbbb
lea
sbb
dec
imul
jmp
pop
fwait
xor
popa
fwait
loop
test
jge
in
xchg
arpl
cltd
imul
repz
insb
push
mov
call
into
pusha
pop
ret
sub
in
cmp
loop
pop
xchg
mov
push
jns
adc
sub
adcl
cmp
popf
rcll
sbb
push
xchg
and
in
mov
enter
xchg
shll
in
push
and
imul
outsl
dec
xlat
mov
inc
push
push
push
push
gs
fistpl
push
cmp
xor
mov
insl
jns
rcr
sub
push
in
loopne
lods
and
fistps
out
xor
push
jno
sub
mov
pop
push
fstpl
ret
mov
xchg
dec
push
sub
stc
lods
pop
mov
inc
aas
push
inc
clc
cmp
dec
lds
idivl
enter
inc
and
aam
xchg
dec
mov
aam
mov
int3
mov
int3
jo
xchg
xor
push
jo
jo
lret
sbb
lods
pop
sub
adc
xchg
cs
sub
insb
push
mov
push
out
fistps
jge
fmull
rcl
pusha
lahf
pop
arpl
adc
popa
ret
xor
in
outsl
loope
outsl
lea
xor
mov
bound
out
inc
imul
dec
push
cmp
push
movsl
movsb
flds
mov
mov
popa
in
mov
cmp
notl
aaa
and
clc
sub
daa
fwait
xor
outsb
pop
outsb
int
loopne
and
orl
movsb
dec
mov
enter
lret
add
push
inc
sbb
pop
push
dec
in
push
inc
dec
sub
mov
not
fidivs
fwait
or
and
and
cmp
icebp
daa
add
repz
out
clc
fcoml
mov
lahf
mov
gs
sbb
xor
xor
lods
popf
movsl
sub
xor
in
popf
adc
pop
sub
sub
sarl
push
sbb
aad
mov
movsl
push
jge
out
in
adc
mov
push
sbbb
push
adc
pop
xor
fistl
jae
pop
add
push
ret
movsl
daa
enter
pop
das
mov
pop
lea
enter
daa
mov
or
adc
cltd
pusha
jno
mov
push
add
push
js
hlt
xorb
cmp
pop
out
in
add
mov
sub
xchg
cld
fdivrl
adc
jecxz
cmp
add
xchg
and
jp
hlt
xor
dec
lock
stos
in
mov
mov
hlt
negl
push
xor
pop
pop
notl
in
cmp
ljmp
repz
jno
pop
sbb
test
inc
push
sub
xor
adcl
push
scas
jo
sbb
adc
mov
imul
arpl
clc
adc
xor
flds
mov
xchg
jle
add
mov
cmp
mov
push
mov
mov
xor
xor
cmp
xor
sti
in
mov
mov
dec
jle
jnp
dec
xchg
dec
push
pop
das
xchg
push
arpl
mov
pop
xchg
cltd
inc
push
mov
insl
aaa
roll
imul
pushf
mov
cmpsl
sbb
sub
mov
cmc
dec
popa
xchg
sbb
fs
lock
dec
xchg
sbb
cwtl
test
and
mov
in
mov
movsl
pop
pop
xor
stos
and
cltd
sbb
pop
je
sbb
pop
dec
jmp
jns
or
xchg
xchg
loopne
pop
sbb
dec
scas
push
mov
pusha
adc
daa
sahf
popf
stc
mov
scas
xlat
js
dec
mov
push
or
lea
movsl
insl
push
in
or
lds
mov
dec
and
mov
popa
add
dec
lods
pop
pushf
mov
insb
jmp
lea
out
or
xchg
mov
pop
mov
xor
jns
in
push
fs
stc
pop
push
stos
in
inc
imul
and
or
aas
ljmp
je
insl
movsb
pop
lea
or
int
add
push
pusha
repz
mov
pop
push
pusha
xor
fcoms
dec
inc
fadds
shlb
lret
pop
xor
mov
and
lret
mov
shlb
add
mov
add
ljmp
lods
sub
insl
mov
gs
movsb
insl
or
enter
mov
iret
testl
pop
adc
add
lea
xchg
jbe
stos
cli
repz
push
es
adc
sti
cli
ret
mov
in
mov
lcall
mov
or
jle
ficoms
inc
pop
xchg
jmp
in
jne
and
daa
xchg
outsb
sti
add
ja
xchg
loopne
xchg
dec
in
adcl
push
hlt
xor
scas
xchg
adc
mov
xor
dec
sbb
pop
add
sbb
mov
cmp
dec
add
xor
push
das
arpl
fs
je
fcoms
and
cmpsl
mov
xchg
pop
pop
jmp
repnz
mov
xchg
mov
dec
xor
popa
lds
fwait
inc
call
sub
arpl
dec
mov
xor
aaa
mov
imul
gs
or
or
fstpt
cld
add
jno
xchg
sti
adc
ds
inc
add
add
aad
ja
adc
lret
jne
out
inc
mov
gs
dec
das
ljmp
pop
ljmp
int
mov
mov
test
sub
outsl
sub
xor
mov
xor
and
in
inc
lcall
enter
and
gs
pop
pop
xor
outsl
arpl
dec
inc
inc
jno
sbb
and
cltd
mov
scas
test
add
insl
in
and
rcl
sub
dec
adc
insb
data16
addr16
aas
lea
sub
pop
aas
fst
test
imul
rorl
dec
inc
sbb
std
jae
jb
jp
add
int3
mov
sub
adc
ja
andb
scas
movsb
fs
nop
jb
mov
push
ljmp
in
les
shl
aaa
arpl
xchg
push
sub
stos
and
dec
sbbl
out
dec
lea
pop
adc
xchg
arpl
pop
add
pop
or
sub
cmp
loopne
add
in
xchg
mov
mov
add
out
mov
dec
loopne
dec
jge
xchg
sub
fists
pop
and
sbb
jns
xor
mov
jo
mov
ret
mov
push
xchg
roll
aas
lods
adc
lret
bound
enter
stos
cmc
dec
adc
loope
xchg
rclb
ljmp
jmp
lea
out
xchg
leave
in
xor
into
out
dec
cmpl
das
rcrl
test
fnstcw
pop
out
es
mov
dec
loopne
xor
or
insb
push
pop
sbbl
xor
icebp
cmpsl
orl
sbb
push
dec
cmpw
out
jae
mov
cmovge
sbb
in
jnp
inc
bound
cs
xor
inc
in
xor
bound
mov
cmpsb
fiaddl
leave
aam
adc
xchg
add
mov
shl
xor
mov
sbb
push
cltd
in
fwait
jge
xor
gs
jge
imul
popf
ljmp
pop
idivl
bound
push
add
jmp
out
arpl
pushf
push
mov
out
js
lods
mov
cmp
and
sub
lock
outsl
arpl
or
fwait
jb
inc
sub
stos
fwait
pushf
mov
mov
adcb
insl
push
cmp
mov
xchg
cmpsb
and
mov
je
jb
cmc
xchg
ja
shlb
push
testb
in
les
pop
pop
icebp
in
icebp
daa
jno
bound
jno
gs
mov
pusha
mov
outsb
bound
pop
xor
imul
js
pop
jmp
stc
jb
repz
xor
int
inc
not
lods
rolb
adc
in
in
pop
xor
xor
or
fistps
push
lahf
int3
aam
sahf
sbb
dec
popf
mov
imul
in
imul
jp
inc
or
and
pushf
imul
je
cli
icebp
mov
popf
cmpsb
adc
mov
fidivrl
data16
sub
insl
jo
or
fs
movsl
push
or
lods
pop
add
jno
daa
add
xor
imul
add
stos
jae
shl
icebp
arpl
or
imul
xchg
add
mov
xlat
jns
loop
sub
xchg
ficompl
roll
xchg
or
sbb
lds
jg
psubb
sub
sub
sbb
cltd
add
cmc
sbb
ljmp
adc
jns
push
loop
jns
cmp
loopne
loop
ret
aaa
in
cmp
xchg
xor
pop
inc
pop
gs
clc
movl
sbb
pop
or
in
sti
adc
jb
jb
icebp
jnp
ja
mov
fisttps
bound
dec
jecxz
dec
push
cmp
prefetchw
pop
insl
pop
insl
out
mov
inc
cmc
rolb
push
int
fnsave
jno
aad
pop
pop
data16
ds
fistpll
xchg
jg
js
insl
sbbb
mov
push
lock
es
hlt
cmp
inc
in
xchg
movsl
xor
push
mov
mov
push
add
sbb
insl
pop
int
iret
clc
mov
inc
or
xchg
shlb
push
popa
sbb
bsr
insb
popa
xor
cld
xor
mov
fs
imul
fisttpll
rcr
and
movsl
mov
push
insl
ljmp
out
test
ret
sbb
xchg
push
gs
sub
popa
sub
incl
outsl
push
add
xchg
add
or
arpl
cli
sub
dec
dec
push
xor
in
mov
aaa
scas
insl
popa
lahf
inc
icebp
cmp
xlat
push
sbb
mov
outsb
jb
and
inc
scas
in
gs
imul
scas
lock
xchg
pop
pop
jmp
addl
lods
add
insl
push
imul
cmp
sbb
insl
mov
mov
push
jmp
in
insl
and
mov
or
lds
or
std
push
mov
nop
mov
jae
scas
jbe
xor
mov
insl
push
cld
add
pop
jl
jo
or
and
insl
mov
push
imul
cmpsl
mov
xor
scas
popa
pop
push
cmp
and
xor
cmp
jno
icebp
mov
andl
cmp
jge
cmp
lods
xor
lods
sub
lods
and
sbb
adcl
or
leave
add
cmp
adc
cli
stos
loopne
fisttps
jg
out
lock
lods
ljmp
call
lods
ljmp
stos
inc
popa
pop
xor
fucomi
cmp
scas
das
xchg
xor
jecxz
test
push
lea
xchg
dec
cmc
mov
push
dec
xor
lcall
xor
add
insl
mov
jno
xor
jmp
cmp
xor
dec
popa
aas
dec
sub
loopne
into
in
xchg
insl
xchg
sbb
and
adc
mov
imul
jecxz
sahf
inc
dec
sbb
leave
or
inc
add
lret
in
aaa
inc
insb
gs
jbe
push
stc
dec
jno
inc
repz
repnz
mov
shlb
out
sub
lods
pop
fldt
and
mov
fcmovbe
mov
leave
jno
xor
pop
lahf
scas
jnp
add
les
shlb
loopne
scas
aaa
lods
insl
daa
in
scas
mov
pop
cli
mov
stos
pop
mov
insb
dec
shlb
mov
add
pop
jp
std
in
stc
ret
ss
iret
jecxz
movsb
inc
test
add
fsubr
pop
xor
js
mov
cli
pop
mov
in
xchg
dec
or
and
ret
mov
lret
push
dec
test
in
addr16
test
or
ret
sbb
xorl
push
cld
insl
pop
jns
icebp
add
push
or
inc
movsl
mov
daa
push
add
fistpl
xor
sbb
jae
cmp
sbbl
loope
push
jg
sbb
pop
adc
shrb
push
clc
aaa
xchg
aam
cwtl
mov
and
cmp
rcrb
and
xchg
push
fdivs
stos
popa
mov
jg
cmp
inc
flds
int
in
mov
or
scas
sbb
insb
popa
ss
in
jno
adc
stos
inc
nop
sbb
imul
rcrl
lds
dec
fildl
loopne
loope
push
xor
add
jne
icebp
adc
inc
shl
mov
inc
test
clc
cld
adc
stos
ret
repnz
scas
xchg
cmc
out
dec
or
dec
arpl
inc
rep
sbb
cmp
dec
pop
inc
sub
scas
dec
or
dec
bound
ljmp
std
out
repnz
sub
adc
addr16
cmp
popf
xchg
jmp
xlat
or
adc
in
jno
ljmp
dec
sahf
push
adc
mov
repz
inc
mov
push
mov
or
stos
adc
push
and
test
dec
and
adc
xchg
push
imul
adc
pop
xor
stos
and
xchg
push
insl
mov
adc
inc
sbb
push
pop
insl
cmpsl
lea
push
adc
aam
adc
out
insb
jecxz
add
mov
sbb
xchg
lret
jae
mov
or
mov
xor
push
xor
add
push
pushf
add
aaa
sbb
cmpsl
mov
xor
jecxz
ficompl
adc
inc
mov
in
push
sbb
mov
push
das
loope
mov
gs
fstpl
aam
mov
mov
test
jl
xor
lods
out
cmp
sahf
in
adc
xchg
mov
popa
mov
arpl
out
loope
loopne
repnz
pushl
mov
xchg
or
jns
fisttpll
mov
push
fsubrl
and
xchg
sub
jge
jnp
add
in
inc
xchg
pushf
jno
subl
mov
mov
adc
out
jl
sub
test
cltd
push
inc
add
lea
pop
movsl
jecxz
dec
xchg
lods
scas
pop
out
xor
cmp
jmp
sbb
jecxz
dec
push
fidivs
lods
scas
popa
and
popf
adc
stos
mov
test
shr
scas
sub
pop
add
jbe
imul
pop
int3
push
jp
dec
rorl
sub
hlt
inc
hlt
push
mov
cwtl
into
mov
xchg
inc
and
jno
add
mov
adcl
jmp
fs
adc
add
in
push
or
lods
jae
leave
fisubs
add
data16
xorl
cmp
xor
xor
xor
ss
push
lock
xchg
cmp
or
enter
pop
ficoml
cmova
push
sub
push
mov
or
adc
push
imul
push
in
mov
xor
and
jnp
aad
or
in
jno
into
data16
xorl
ret
in
cmp
in
pop
lret
xchg
adc
bound
enter
pop
push
insl
pushf
call
aad
add
imul
sub
out
lret
mov
sti
sub
scas
test
dec
jp
neg
push
enter
in
and
inc
jb
jno
sub
test
pop
inc
adc
adc
sub
pop
push
cmp
arpl
or
cmp
jge
out
cltd
jo
int3
sbb
shrl
sub
mov
aaa
sbb
cvtps2pd
scas
rcll
fistpll
loope
push
push
and
repnz
lods
int
pop
shlb
mov
xor
ret
orl
out
jno
mov
lahf
inc
and
fcomps
gs
cmp
stos
mov
push
xor
movb
jecxz
lods
shl
stc
jmp
pop
jno
pop
jmp
inc
ret
sub
xchg
icebp
ja
sbb
push
ja
mov
xor
mov
cmp
pop
sbb
mov
sub
outsl
pushl
sub
int3
mov
xchg
ja
pop
std
cmp
jae
xor
jp
and
loopne
add
in
sub
leave
adc
lcallw
fidivl
mov
out
insl
lods
add
outsb
push
adc
je
pop
push
push
hlt
popf
std
push
mov
jno
xchg
lea
ret
sbb
xchg
loopne
add
add
mov
mov
mul
pop
jno
outsl
mov
xchg
ja
push
clc
push
mov
push
pop
and
xor
jmp
and
mov
sub
jmp
pusha
mov
lods
adc
push
xchg
lds
jae
ljmp
or
insb
cmc
mov
add
enter
pop
inc
xchg
addr16
aas
int3
push
jmp
xor
clc
xor
jnp
xor
push
dec
loope
sbb
insl
or
dec
push
sub
inc
addr16
or
loop
jp
sbb
inc
gs
in
ja
sbb
xchg
gs
push
sub
rcr
ja
push
push
xchg
aad
insb
out
js
pushf
xchg
adc
nop
push
push
xor
stos
and
push
mov
add
test
sbb
add
add
jae
cld
std
cli
in
aaa
gs
xor
xor
cs
sub
daa
es
and
pop
push
sbb
hlt
inc
inc
inc
inc
inc
in
pop
ds
jne
in
or
push
push
mov
inc
ljmp
add
insb
shll
insl
movsl
inc
dec
je
fdivrl
insl
jne
in
or
mov
fbld
pushf
adc
data16
xor
test
cmpsb
popa
repnz
scas
js
pop
push
adc
add
xchg
mov
adc
js
hlt
xchg
pop
fs
das
xor
int
and
in
xor
sub
inc
xor
subb
addr16
ss
jmp
cmp
cltd
push
inc
lods
push
pop
rcrb
arpl
xor
ret
mov
xchg
mov
push
or
adc
or
insl
out
and
f2xm1
inc
mov
inc
or
xor
mov
dec
clc
jge
cmc
test
mov
add
mov
dec
xor
rcrb
out
clc
xor
sub
push
mov
outsl
mov
fisttps
xchg
jp
add
push
and
aaa
xor
pop
or
lea
xchg
adc
movl
lock
xchg
sub
jbe
scas
out
cmp
int
insb
and
loop
fildll
add
inc
imul
push
pushf
add
gs
test
or
mov
in
pop
scas
ja
pop
das
push
gs
ja
scas
inc
stos
ja
adc
lds
lods
dec
mov
inc
push
inc
gs
mov
xchg
cmp
cmp
fs
fisubrl
push
lods
push
jo
mov
push
add
sbb
mov
rorl
insl
scas
lock
hlt
adc
mov
push
insb
insl
lock
jmp
imul
xor
cld
arpl
gs
andl
pop
orl
dec
jle
cltd
xor
push
imul
pop
lods
dec
cld
push
jns
adc
cmp
pop
jmp
das
jp
inc
push
push
stos
jp
xor
jmp
fisubs
jo
fs
loop
out
jp
inc
adc
or
in
sub
shll
pop
push
sub
imulb
inc
xchg
roll
pop
insw
inc
movb
imul
push
pop
xchg
jl
fs
insl
push
push
jnp
dec
cmp
icebp
xor
adc
xor
cmp
xor
addr16
xor
test
jl
xor
ror
jge
movsl
xchg
push
mov
or
orb
mov
xor
mov
and
jno
add
ja
push
sub
inc
arpl
sub
dec
not
adc
mov
adc
dec
out
jmp
fs
add
jp
popf
adc
das
das
sub
add
mov
enter
jb
cwtl
imul
imul
data16
mov
lock
cmp
leave
xchg
jle
and
imul
mov
and
push
add
ja
call
xor
mov
add
mov
add
pop
das
mov
xchg
add
add
cltd
push
jno
adc
jns
outsl
dec
fs
xchg
insb
imul
mov
push
add
inc
mov
xor
cmp
jo
rorl
sahf
xlat
ret
in
sub
pop
cli
mov
push
push
add
xchg
outsb
jo
add
lock
and
lcall
pop
mov
pop
cwtl
jne
or
pop
jo
data16
adcb
fs
outsb
pop
jo
mov
ja
xchg
pop
jo
das
push
inc
int
cmpsb
ja
push
jo
loope
ds
ja
mov
hlt
or
jmp
insb
sarb
cs
cmp
jo
sbb
lock
aad
jo
fs
sbb
in
dec
add
jo
fs
inc
insb
addr16
cmp
das
js
test
cmp
xor
das
iret
gs
js
xor
shrl
js
jae
mov
cvtdq2ps
push
jg
or
js
aad
xor
ret
mov
lock
adc
scas
cmp
pop
dec
mov
lock
scas
fldl
lret
cmpl
xor
pop
lahf
lock
je
repz
popa
ret
jae
lock
jns
lea
popf
jns
mov
lods
jp
mov
lock
xlat
jns
hlt
xchg
lock
stc
jns
cmc
or
lock
je
out
push
cmp
sub
add
lock
pop
xchg
mov
jp
mov
xchg
lock
xor
hlt
jle
jae
pop
push
lock
ljmp
fidivrs
dec
loop
ljmp
jno
push
cli
movsb
arpl
push
mov
sbb
bound
or
push
cmp
test
shll
cmp
xor
clc
sub
mov
clc
lock
dec
and
xchg
sub
lock
jnp
xor
mov
jnp
sub
mov
push
clc
xlat
jnp
mov
fimull
in
negl
in
imul
mov
xor
popa
inc
xchg
fdivl
xchg
pop
dec
in
jno
gs
mov
movsl
mov
add
ret
nop
fstpl
xchg
jl
xor
rcll
insl
mov
pop
in
imul
leave
mov
xor
jl
mov
bound
pop
lcall
push
icebp
jl
lock
mov
add
dec
xor
hlt
adc
xor
sbb
inc
in
loopne
adc
push
and
aad
mov
lock
xchg
lds
adc
lock
adc
test
xchg
xor
je
stc
addl
sbb
xlat
jge
push
lcall
lock
jge
and
dec
ja
in
sbb
aad
popa
xor
shl
cmp
daa
lock
cmp
and
lock
inc
sub
inc
cmpl
adc
popf
jle
mov
sahf
dec
adc
mov
or
mov
fisubrs
jle
aaa
xor
gs
mov
pop
das
inc
in
add
add
movsl
mov
jmp
cli
pop
dec
mov
insl
movsb
cmc
movsb
loopne
push
mov
cmp
inc
jmp
imul
insl
jge
in
cmpsb
xor
sbb
out
jnp
and
cld
negl
lds
cld
inc
sub
pop
cmpb
adc
push
shl
test
das
ss
test
hlt
out
cld
gs
adc
xor
adc
in
dec
loopne
sub
pop
sbb
addr16
lret
adc
adc
in
fldcw
pusha
aad
mov
pop
daa
enter
jbe
ds
popa
lock
dec
push
jbe
in
and
sub
sbb
xlat
sbb
sbb
add
and
fbstp
fisttps
push
pop
pusha
xchg
icebp
loop
mov
or
and
jecxz
insl
arpl
and
pop
notl
sub
push
cwtl
dec
xchg
test
cmp
and
push
pop
adc
insl
jno
or
xor
inc
dec
xor
lds
pop
push
cmp
sbb
scas
cmp
stos
outsl
jae
aas
xor
in
sub
and
les
addr16
sahf
lods
ja
std
bound
xor
out
push
mov
jnp
jp
scas
or
pop
aas
lock
outsl
add
xor
sub
adc
inc
push
jp
xor
mov
shlb
lock
lock
cmp
ss
lock
dec
dec
push
and
lock
rorb
add
insl
and
popa
mov
push
cmp
lock
shr
lock
pop
pusha
insl
xor
dec
sub
lock
xor
lock
shrl
or
inc
bound
jecxz
mov
jp
or
sarl
cld
sbb
stc
pop
fsubl
add
mull
inc
pop
fbstp
pop
add
or
inc
add
and
add
aam
sub
and
cmp
shr
xor
lods
popa
xorl
add
sub
add
dec
add
rcrl
push
push
int
test
ja
inc
dec
mov
or
sbb
add
jecxz
add
inc
xor
std
ss
scas
dec
jl
mov
dec
push
pop
fildll
jnp
mov
push
int3
or
mov
inc
icebp
shll
icebp
lock
and
lock
cmp
shll
rolb
pusha
lock
rolb
lock
and
lock
pushf
fldt
in
dec
sbb
dec
dec
in
pop
sbb
xchg
loope
in
shlb
imul
pop
jmp
and
out
js
sub
and
insl
loopne
mov
movsl
inc
inc
gs
mov
inc
imul
imul
inc
push
das
inc
sub
insl
mov
in
movsl
mov
pop
adc
dec
inc
cs
loope
mov
movsl
xor
sub
lahf
mov
push
cld
mov
dec
inc
push
xor
sub
mov
fcom
or
inc
popa
mov
mov
mov
ss
movsb
sub
mov
xlat
clc
mov
lds
dec
rcrl
sbb
insb
pop
dec
int
insl
lret
rcll
ficoml
gs
andb
roll
dec
sub
pop
icebp
jns
roll
sarl
sarb
sar
xor
mov
ljmp
and
xchg
inc
fistpll
roll
popf
sbb
pusha
aam
test
rorl
pusha
sbb
shll
dec
pop
xchg
cmp
xorb
or
fiadds
fdivrp
pop
stos
push
sti
xor
movl
lret
mov
adc
mov
gs
lret
sbb
mov
inc
dec
dec
cmp
addr16
loope
mov
cs
prefetch
or
pop
mov
popa
sarb
push
pop
jns
cmp
xchg
cli
mov
inc
adc
mov
and
inc
aas
icebp
lods
jno
add
dec
xor
lock
dec
movsb
xor
inc
stc
lods
pop
fistpll
ret
mov
fmulp
pop
out
jecxz
inc
loope
in
lods
popa
pop
test
stos
fsubs
bndstx
in
daa
pop
dec
push
cs
stos
sub
pop
cmp
lods
inc
pusha
fcoml
cmp
sub
mov
sbb
lea
pusha
in
shl
mov
push
in
mov
xor
es
jg
xor
gs
xor
ss
sbb
xor
lock
mov
loopne
pop
out
insl
add
stc
push
inc
js
and
sub
dec
fsubr
sahf
jns
adc
push
sbb
jno
mov
or
dec
xlat
adc
sub
adc
cmp
in
push
pop
loop
push
add
enter
je
cmp
pop
ret
pop
gs
loope
leave
push
test
mov
xor
dec
mov
xchg
sbb
stos
dec
lahf
sub
push
push
mov
jno
jmp
insl
je
add
pop
gs
fdivp
jnp
cmp
fidivs
ljmp
mov
mov
adc
cmp
jl
cld
sub
insl
inc
in
fisubs
movsl
dec
mov
jmp
fildl
sub
pop
cmpb
popa
lahf
sub
mov
dec
movsl
mov
add
xchg
lds
rep
leave
inc
lods
xchg
jp
cmp
pop
and
jbe
adc
jo
rcrb
or
mov
movsl
jmp
imul
jle
and
pop
insb
pop
cld
pop
mov
or
arpl
js
jno
jp
aas
mov
dec
xchg
push
xchg
add
xor
jmp
push
push
xor
jno
sub
loopne
aas
push
mov
cmp
and
imul
jle
cld
das
imul
call
addr16
es
dec
lock
pop
ss
xchg
push
add
bound
or
lock
inc
addr16
outsb
gs
mov
adc
xchg
cmp
cmp
bound
in
in
addr16
push
xor
adc
pop
mov
pop
out
sbb
insl
insb
cmc
pop
push
dec
sbbl
ja
jne
inc
cmc
scas
rolb
aad
push
lods
jmp
dec
sbb
popa
xchg
push
and
and
mov
insl
sub
push
jge
aam
xchg
dec
pusha
pop
cmc
mov
sub
lds
inc
mov
mov
cmp
dec
and
ret
inc
pusha
fs
in
pop
stc
in
int
call
pop
xor
sub
pop
mov
imul
cli
nop
inc
cmp
mov
and
cmp
push
nop
ljmp
xchg
xor
in
push
cmp
out
mov
mov
dec
es
add
pop
pusha
out
nop
insl
sub
aaa
mov
push
push
shrl
inc
fildl
scas
scas
int
ljmp
cmp
add
cmpsl
push
aam
arpl
mov
dec
fwait
adc
rol
mov
push
in
and
jecxz
jnp
push
cs
push
fs
xor
fildl
pusha
cmp
pop
shrl
bound
inc
pop
xor
sub
divl
push
lods
xor
test
stos
push
pushf
dec
imul
popa
loopne
int
icebp
xor
pop
mov
or
lea
rorl
pop
in
insl
adc
mov
dec
adc
mov
sub
pusha
dec
mov
fmuls
xlat
and
pop
push
rcrl
in
xor
add
out
sbb
inc
xor
cmp
arpl
cmp
dec
cmp
and
rorl
xlat
lock
dec
daa
dec
sub
cmp
lahf
pusha
sbb
addr16
jo
pop
ret
and
xchg
sbb
fs
outsl
pop
pop
out
std
inc
imul
lods
push
add
mov
mov
js
int3
inc
pop
fists
jp
cld
sarl
mov
xchg
outsl
sub
inc
dec
xchg
jo
pop
data16
aas
arpl
dec
push
cmp
arpl
in
sub
mov
sub
pop
leave
push
out
dec
rclb
negb
and
and
rclb
pop
cmp
xor
pop
mov
gs
push
ret
xor
push
pusha
push
in
int
call
out
dec
aad
dec
push
adc
cmp
fildl
nop
gs
dec
fnstsw
shlb
repz
ret
xlat
mov
popa
and
in
mov
cmpsb
push
in
xor
push
xor
mov
loope
in
fcoms
dec
inc
das
sub
addl
imul
sub
sub
jo
mov
cmp
mov
jb
adc
jmp
icebp
aam
std
jge
and
sbbb
into
push
and
jge
jbe
lea
xor
inc
fs
xor
data16
fs
dec
mov
aam
outsb
insl
pop
stc
in
int
call
and
cmp
pusha
jns
fbld
lea
xor
jp
icebp
xor
popa
pop
xchg
sub
pop
js
push
push
mov
add
inc
insb
pop
jg
mov
ljmp
and
mov
jns
mov
jge
arpl
popa
dec
es
xor
mov
andl
dec
and
inc
cmpsb
mov
inc
in
mov
mov
sbb
test
popa
stc
in
int
call
jb
sbb
xor
int3
sbb
and
xor
pop
push
adc
das
mov
sbb
xor
outsl
fs
push
cmp
pop
fs
std
pop
imul
mov
aaa
lods
push
and
pop
inc
and
push
mov
fisubl
pop
sub
ljmp
mov
push
cmp
sbb
sub
xor
in
pusha
lahf
loopne
xchg
xor
test
js
nop
cmp
lods
inc
add
call
cmp
addr16
icebp
sub
inc
sub
and
cmp
cmpw
pop
fisubrs
xor
loopne
int
icebp
sub
mov
and
dec
shrl
pop
subw
mov
in
sbb
in
cmp
cli
add
add
jge
shl
shll
movsl
xor
mov
iret
imul
dec
das
enter
push
dec
pop
xlat
push
popa
pop
das
popa
xor
sub
imul
or
jo
pop
sbb
mov
push
fstps
dec
sbb
and
outsl
mov
aaa
lods
pop
and
addr16
arpl
dec
shrl
pop
pop
ret
sub
int3
sbb
push
addr16
imul
xor
push
adc
dec
sbb
loopne
lea
xor
pop
adc
es
and
out
inc
shrb
lods
sub
push
pop
add
add
shll
cs
pop
cltd
lods
xchg
xor
pop
xor
sub
inc
dec
clc
sub
or
add
enter
out
cmpb
cmp
pop
fiadds
shl
pop
ret
inc
stc
pop
cmp
pop
jl
insl
push
sub
sub
sub
and
push
loope
sarl
and
xor
xchg
jb
aaa
lods
test
inc
xor
stc
jecxz
push
insb
aad
xchg
in
pushl
and
push
insl
sub
daa
pop
and
popa
in
fsubrs
fsubl
sbb
ljmp
xchg
pusha
cmpsb
repnz
pop
push
mov
mov
aaa
popf
lea
insl
and
push
aas
inc
mov
inc
or
test
popa
push
mov
inc
fs
popf
push
xor
push
jmp
cmpl
mov
add
addr16
mov
xchg
in
inc
test
out
test
imul
test
push
xor
jecxz
jns
mov
jns
push
jg
mov
jns
popa
sarl
stc
test
addr16
lahf
in
call
adc
dec
mov
jns
test
adc
imul
xchg
pop
and
gs
aad
jecxz
test
clc
insb
int
lds
je
xchg
push
fs
xchg
scas
sub
gs
ljmp
mov
jle
popf
or
mov
push
xchg
ja
ret
cwtl
mov
push
ja
mov
lods
push
sahf
aas
cwtl
xor
sub
mov
mov
xchg
add
mov
scas
inc
pop
adc
jmp
lea
cmp
add
gs
or
mov
mov
cmp
and
imul
sub
pop
cld
imul
or
js
inc
gs
cmp
lods
aad
insl
repz
sbb
stos
xor
insb
dec
mov
cmp
das
pop
push
outsb
dec
movsb
bound
aas
lods
pop
data16
sbb
popa
and
pop
inc
ljmp
add
stos
adc
data16
shlb
aas
ret
pop
xor
mov
stos
loope
loope
pop
insl
dec
ja
enter
pop
je
insl
movl
test
push
cld
add
lcall
gs
xor
add
ret
ss
loop
xchg
rcll
push
insb
ljmp
arpl
pop
imul
fwait
imul
popa
sub
icebp
cmp
out
push
idivl
mov
pop
lret
inc
cmpsb
jp
xor
dec
in
popa
pop
xchg
popa
sbbb
pop
xchg
pop
jle
jecxz
lods
ja
sbb
imul
lret
push
int3
cli
into
xor
pop
in
shrl
lahf
aam
fsub
insl
mov
lcall
push
cld
and
push
cld
add
sbb
dec
lcall
arpl
inc
mov
insb
jnp
es
mov
adc
sbb
pop
cmp
inc
or
std
call
xchg
in
gs
lods
loop
sahf
cmpsb
int3
xchg
les
aaa
mov
add
mov
inc
nop
push
mov
cmpsl
out
fs
stos
jae
inc
test
push
cld
add
gs
js
imul
in
popa
pop
sub
cmpsl
test
scas
sahf
or
pop
pusha
arpl
stos
pop
shl
push
ss
cmp
cmpsb
inc
call
cmpsl
push
push
arpl
das
sub
imul
popa
jmp
mov
in
inc
inc
leave
test
push
cld
and
testl
mov
cmp
lret
xchg
aam
stos
pop
pop
xor
sarl
jno
sbb
xchg
push
mov
popa
xlat
push
pop
arpl
inc
jns
push
outsb
popf
xor
repz
add
mov
cli
inc
in
sub
stc
imul
add
mov
in
and
les
jge
outsl
push
cltd
fidivl
sbb
fidivl
mov
ficoml
out
cs
xchg
out
push
repnz
fdivs
test
or
xchg
repnz
dec
mov
add
lock
add
push
repnz
int3
lds
push
cld
cmp
fs
jl
push
clc
stc
xor
xchg
fistpll
sub
inc
imul
inc
int
mov
les
in
inc
nop
cmp
mov
aad
adc
push
scas
sub
xor
imul
into
mov
cmp
mov
outsl
ret
push
faddl
add
int3
fldcw
xchg
icebp
imul
insl
cmp
rorl
xor
int
xorb
cmp
mov
adc
mov
imul
in
shll
inc
lods
fs
push
mov
add
in
mov
lea
add
int
mov
repz
lods
push
and
scas
xor
loop
sub
outsl
fstpl
jno
inc
subl
aad
or
cltd
push
jno
mov
pop
sub
or
push
in
xchg
addr16
ljmp
xor
in
mov
jno
imul
sub
push
popf
daa
xor
fstps
arpl
lahf
insl
addb
or
xchg
out
add
adc
cld
xor
cmp
lock
je
jle
jae
call
mov
jbe
in
gs
leave
mov
shll
je
mov
fs
je
mov
cld
add
xor
inc
rorb
push
and
imul
pop
repnz
sbb
popf
aad
arpl
or
mov
push
push
push
or
daa
in
call
popf
sub
je
sub
arpl
cwtl
std
in
sub
or
repnz
sbb
inc
clc
fs
push
mov
fidivrs
imul
popf
imul
lods
jns
aas
dec
mov
outsb
xor
paddsw
arpl
in
push
or
or
in
push
arpl
push
add
or
stos
mov
cmp
cmp
mull
addr16
and
or
lret
push
jne
pop
test
xchg
sbb
cmp
xor
sbb
test
int
xchg
cmp
cli
lock
adc
insb
ljmp
mov
test
divl
insl
pop
cmpsb
jns
cmp
dec
inc
xchg
mov
jecxz
push
pop
in
jae
cmp
flds
mov
xor
cmpsb
pop
xor
sub
sub
out
test
fwait
repnz
mov
and
sbb
sbb
out
test
adc
inc
xchg
mov
lock
test
cmpsl
jns
mov
xchg
fdivrl
lahf
or
ja
insb
mov
push
mov
lock
repnz
push
movw
jge
rcr
push
outsb
pusha
in
inc
enter
inc
jne
in
add
pusha
or
sbb
xor
lods
loope
mov
xor
xor
imul
inc
sub
imul
cltd
clc
cmp
xor
xorb
aad
imul
fs
sub
pop
movsl
adc
aaa
movsl
sub
pop
jge
pop
icebp
imul
mov
pop
ret
pusha
and
shrl
push
lds
or
push
mov
shll
jl
xor
cmp
arpl
xor
pop
outsb
cmp
aam
jae
mov
insl
push
pop
movsl
in
xor
jbe
sub
sbb
dec
sbb
sub
or
in
das
or
incb
mov
aaa
ret
sbb
sub
xor
popa
cmc
or
sub
push
xor
in
cld
push
dec
xor
dec
jns
sub
mov
xchg
inc
lods
popa
lock
insl
in
mov
insl
call
and
mov
mov
gs
jmp
add
and
jb
and
add
call
lods
and
loop
xor
cmpsl
sub
fs
mov
out
xor
and
xor
popa
dec
and
cmp
dec
aam
in
add
pop
jne
xor
bound
aam
fsub
aaa
fldcw
movsb
mov
jg
xor
inc
push
push
xchg
inc
push
pop
inc
out
or
dec
outsb
add
pop
ret
popa
bound
loopne
push
gs
cmpsb
popa
mov
jbe
mov
jbe
push
mov
add
pushf
in
dec
loope
arpl
add
mov
mov
cmc
addr16
mov
out
shrb
pop
mov
enter
cmp
or
and
lods
mov
into
xchg
xor
pop
sahf
cmc
mov
dec
push
clc
push
int3
das
add
mov
insl
and
ror
dec
jae
in
push
popa
xor
cmpsl
rclb
pop
cmpsl
inc
rcrb
jb
fstl
pop
fwait
inc
pushf
pop
arpl
pop
push
subl
dec
push
jle
xor
xchg
ds
push
sub
cmp
inc
adc
pop
push
pop
and
subl
mov
adcl
sub
and
dec
sub
and
repnz
xchg
divb
sbb
rol
cmpsl
cmp
andb
stos
pop
xor
cmp
inc
pop
andb
jp
ds
push
pop
push
pop
or
in
sarb
xor
adcb
pop
outsb
loope
fs
dec
inc
rcrl
xlat
xorb
shr
pop
and
pop
loop
inc
sti
adcb
dec
cwtl
mov
push
inc
xor
inc
cmp
xor
cli
fsubrl
adc
add
dec
adcb
dec
or
adc
adcb
cmp
rcr
jo
gs
popa
inc
mov
and
subl
movsl
int3
andb
xorb
shr
pop
and
popa
loop
inc
sti
adcb
inc
cwtl
xchg
dec
sbb
mov
lcall
or
cli
and
int3
adcb
cmp
inc
pop
mov
in
xchg
adc
adcb
inc
lret
jo
sub
pop
pop
and
adcl
test
fimuls
insl
shr
pop
and
imul
lods
pop
loop
lcall
hlt
jo
shrb
adcl
dec
add
test
add
dec
test
xor
cmp
mov
push
inc
dec
test
sbb
rorl
xchg
mov
rolb
mov
adc
cmpsl
and
addb
addb
iret
lahf
aad
pop
movsl
mov
aas
adc
dec
clc
out
sub
jecxz
adcb
lds
mov
mov
dec
pusha
aad
fs
orb
rolb
mov
dec
pop
sub
sub
popl
xor
imul
lahf
int
insb
fisubl
pop
push
jg
sub
lods
adc
mov
ror
frstor
jl
pop
add
pop
jecxz
repnz
jl
pop
add
mov
dec
pusha
iret
leave
pop
sbb
jl
dec
int3
jl
pop
mov
mov
mov
loop
push
sub
test
sub
mov
jl
scas
sub
sbbb
sub
lcall
xor
arpl
mov
std
dec
aam
jge
gs
gs
xchg
mov
push
jge
popa
pop
call
scas
lods
mov
or
dec
jge
dec
dec
jge
sbb
int3
jge
sbb
sub
xlat
push
adc
jae
rorb
pop
pop
dec
stos
jge
das
loop
sarl
xor
dec
ret
add
test
in
lret
mov
call
dec
xchg
mov
aam
sbb
push
vunpckhps
push
xor
adc
jl
push
sub
in
sti
xorl
incb
mov
adc
cmp
mov
ficomps
insb
push
arpl
mov
std
dec
sti
mov
jno
arpl
imul
add
push
or
fistps
dec
jge
leave
jge
test
mov
mov
and
jge
sbb
push
es
mov
cltd
mov
call
and
jmp
ss
repnz
leave
ljmp
jle
aas
jl
mov
jae
sbb
int
fistpll
andl
mov
idivl
mov
gs
mov
lea
jl
jno
mov
mov
and
push
xchg
jnp
test
pop
mov
add
xchg
ja
fdivrl
jmp
mov
inc
rorl
test
out
orl
jp
fdivrl
jg
push
push
jl
fs
enter
xchg
xchg
aas
in
dec
inc
jl
push
sub
out
cmp
fsubr
inc
jecxz
fs
xchg
enter
push
gs
imul
mov
jl
push
sub
repnz
pop
xor
mov
cmc
add
jbe
push
sub
mov
mov
rcll
mov
mov
add
push
sbb
mov
mov
sbb
and
jl
adc
ret
sbb
jl
inc
divb
jmp
mov
jg
add
mov
mov
ret
cmp
fsubrl
jecxz
arpl
mov
mov
or
push
hlt
jl
inc
mov
repnz
pop
iret
sahf
push
in
jge
call
adc
xor
pop
jge
and
inc
xor
pop
jg
push
fdivrl
fnstcw
fistpll
sbb
roll
mov
push
inc
mov
outsl
sbb
int
jl
inc
divb
xchg
lds
jg
rcl
lret
int3
adc
jo
fdivl
mov
add
push
cli
insl
push
mov
mov
mov
movsb
mov
in
lods
inc
jge
inc
divb
mov
shrl
mov
jno
lret
pop
mov
jge
cltd
mov
mov
mov
xchg
jo
popf
xor
mov
fidivl
test
push
lea
mov
sbb
jg
addl
ljmp
arpl
jl
sbb
xchg
adc
inc
xor
jl
xchg
sbb
mov
scas
cmpsb
adcl
imul
adc
xchg
jo
test
fs
ror
mov
jge
gs
pop
xor
lret
inc
add
jge
pop
fbstp
mov
jae
lret
insb
and
mov
push
lods
sbb
push
adc
pop
pop
adc
jl
out
push
mov
mov
push
adc
and
inc
cmp
mov
mov
pinsrw
mov
insl
pusha
std
scas
ret
push
push
pop
jge
dec
jl
xor
and
xchg
repnz
and
loop
adc
sbb
adc
mov
aaa
dec
stos
push
and
repnz
mov
push
jne
mov
pop
sbb
sahf
xor
hlt
lahf
stc
push
fwait
mov
adc
cld
movsb
push
pop
xchg
es
and
in
or
insl
mov
lret
push
test
add
jae
fsubrl
adc
cld
pop
clc
out
xor
repz
fdivl
fs
hlt
pop
ss
out
pop
cs
mov
fsub
in
in
call
stc
push
push
insl
cmp
dec
in
cmp
lea
push
stos
inc
das
fcoml
andb
imul
das
aad
roll
flds
das
int
leave
sbbb
insl
mov
mov
in
in
sarl
dec
notb
jns
push
mov
jae
jnp
cmp
push
stos
push
in
mov
mov
mov
sub
call
das
lods
push
test
mov
in
pop
fstps
jae
mov
ds
lea
xor
loop
dec
adcl
mov
movsw
push
add
dec
js
lea
inc
clc
cmp
mov
lock
popa
mov
jge
int3
push
call
jae
pop
jno
jmp
hlt
xor
push
pop
jns
pop
adc
xchg
test
cmc
mov
enter
sbb
jmp
popf
scas
xor
cmp
xor
xchg
stos
sub
in
aas
shlb
mov
dec
mov
inc
test
cmp
test
pusha
gs
fstpt
xor
in
cmpsl
mov
xchg
jb
fsubl
je
and
xor
pop
add
push
imul
popa
and
cmp
cmpsl
mov
and
dec
idivb
loop
cld
out
insb
clc
pop
jns
jp
gs
pop
loopne
scas
mov
add
popa
fdiv
xchg
ja
cltd
dec
lock
daa
jno
inc
inc
insl
inc
cmp
hlt
add
push
sbb
out
lock
daa
push
and
out
in
dec
xchg
adc
aaa
adc
loopne
inc
in
push
pushf
sbb
data16
cli
push
fcoms
dec
add
outsb
cs
or
or
pop
cmp
pop
add
add
add
jle
out
adc
jo
jne
sbb
mov
outsb
mov
dec
dec
fistl
jne
pop
cwtl
push
add
je
in
or
jne
popf
mov
pusha
addr16
jbe
pop
push
dec
inc
xchg
jno
fs
sbb
sub
out
repz
jb
out
adc
lock
push
in
jno
es
insl
call
cs
std
ror
add
lds
fsubl
lds
dec
lock
sub
inc
hlt
repz
add
sbb
add
outsl
cmp
popa
jmp
in
mov
dec
xor
lea
loope
insl
icebp
inc
push
fistps
and
xor
and
dec
pusha
sbb
repz
pop
adc
lea
lret
pop
pop
or
outsl
or
push
test
dec
lea
test
adc
outsl
cld
lea
fs
dec
inc
pop
lahf
and
adc
bound
mov
xchg
fsubr
xor
inc
insl
inc
inc
inc
in
cltd
gs
popf
adc
orl
movsl
cmp
out
push
clc
rdtsc
call
push
jmp
sub
push
xchg
rcll
popf
gs
mov
ss
sbb
cmc
sbb
jge
hlt
adc
cmc
adc
jge
hlt
or
cmc
or
jge
hlt
add
cmc
add
jge
hlt
cld
push
or
dec
cmc
clc
cmp
popf
mov
mov
mov
sub
mulb
cmp
gs
ficoml
lock
xor
lock
dec
aad
sbb
notb
mov
sbb
loopne
jle
imul
pop
arpl
call
lea
sti
out
repnz
or
xor
jge
mov
daa
mov
xor
gs
jns
jno
inc
fldenv
pop
insl
add
daa
sbbb
jnp
mov
imul
and
in
adc
dec
jne
push
adc
and
fmull
or
sahf
xor
lret
jns
ret
in
sbb
nop
test
mov
mov
roll
mov
sub
push
addl
add
outsb
sbb
cmp
popl
fs
dec
rcll
pop
arpl
and
test
inc
orl
mov
xlat
addr16
fnstenv
add
and
ljmp
fcoms
jno
rorb
push
shrl
fwait
inc
popa
push
xor
pop
ret
gs
mov
fcomps
adc
xor
mov
daa
xor
pop
cmp
call
movsl
mov
shrl
ror
cmpsl
or
jo
aad
inc
inc
in
loope
jp
or
xor
gs
jnp
hlt
push
gs
lret
pop
jmp
loope
jge
hlt
xchg
popa
dec
lods
popa
and
pop
push
daa
movsb
hlt
xor
ret
sub
pop
hlt
xchg
mov
sahf
push
pop
mov
add
hlt
push
and
loope
cmpsb
jmp
hlt
add
dec
dec
hlt
pop
xor
pop
icebp
sbb
and
sbb
push
out
fidivl
mov
sahf
mov
inc
pop
gs
imul
sahf
mov
inc
pop
gs
push
dec
addb
insl
inc
stc
clc
push
inc
dec
movsb
cmp
insl
ret
jb
and
and
cli
hlt
cmc
test
shlb
andl
push
xor
push
pop
mov
xor
pop
bound
mov
xor
adc
insb
dec
or
inc
aad
fcom
sbb
and
sub
jl
jg
pop
xchg
lods
push
dec
pop
dec
rcll
lods
gs
push
inc
push
dec
ljmp
pop
dec
pop
and
fisubrl
cltd
mov
mov
mov
or
insb
popf
push
xor
push
aad
clc
enter
push
dec
or
insb
popf
push
xor
push
shl
clc
enter
push
pop
je
xchg
xor
je
cltd
loop
cmp
jnp,pt
outsb
sbb
mov
xor
jns
mov
mov
in
outsb
sbb
pop
mov
stos
push
hlt
push
in
jns
add
push
in
clc
push
add
push
in
jns
add
mov
adc
pop
push
mov
xchg
lahf
loopne
or
mov
pop
cmp
adc
insb
pop
push
xor
jp
push
pop
andb
mov
or
aaa
hlt
xor
stc
mov
gs
mov
mov
xor
mov
lods
add
mov
jne
mov
in
xor
adc
adc
mov
and
xchg
inc
push
inc
sub
lret
dec
xor
orl
push
mov
arpl
inc
mov
cmc
mov
jo
and
popf
lea
fidivl
cmp
mov
mov
cmpl
inc
into
push
gs
mov
std
push
push
xor
pop
andl
sub
pop
adc
pop
dec
dec
lock
sub
xchg
cmp
dec
cmp
das
adc
stos
daa
mov
mov
lret
pop
adc
push
mov
adc
std
cld
and
xchg
xor
mov
adc
lea
or
or
mov
into
sbbl
xchg
sub
mov
gs
and
add
mov
out
xchg
ret
mov
sbb
rorb
test
call
mov
push
mov
jp
sub
jbe
dec
dec
stos
add
adc
xor
jp
lahf
mov
cli
jnp
cmp
cltd
mov
rorl
popa
gs
xchg
jp
or
jno
xchg
jp
xor
xchg
and
xor
jle
jp
mov
je
das
gs
mov
sbb
and
es
sub
xchg
jp
cmp
jecxz
add
dec
lods
cmp
lods
xor
jg
push
jno
in
lods
cmpl
cmc
push
gs
add
jl
test
xor
sub
push
add
inc
in
mov
cmp
pop
xor
or
loopne
push
adc
xor
jo
adc
or
ss
mov
andl
sub
std
lds
mov
adc
call
aaa
or
or
pop
xor
jae
sahf
add
stos
lret
add
sbb
adc
orl
fstl
push
movsl
aaa
inc
iret
sub
xor
lock
icebp
test
mov
and
imul
push
ljmp
lea
dec
fs
rorl
push
fisttpll
inc
sub
dec
lret
in
cmp
xchg
jmp
insl
inc
cmp
inc
push
inc
inc
mov
int3
pop
lea
ds
pop
vmwrite
lcall
movsl
pop
loopne
sti
mov
adc
gs
sub
and
lods
stos
pushf
je
in
xor
pop
mov
jle
jb
jg
imul
in
popa
in
jae
faddl
push
imul
and
or
pop
jns
and
xchg
and
xor
mov
mov
cmc
mov
dec
arpl
lea
jb
popa
sbb
test
into
popa
add
push
aam
sub
mov
stos
pop
xor
or
cmp
xor
addb
frstor
popa
xor
mov
xor
je
pop
mov
test
cli
mov
add
pop
mov
mov
push
dec
test
stc
test
mov
rcrb
jnp
lods
arpl
xlat
push
dec
cmc
xchg
mov
push
icebp
mov
outsb
repnz
pop
mov
dec
lock
adc
iret
test
mov
pushf
adc
xchg
lret
mov
mov
pusha
je
fcmovbe
dec
in
and
push
sub
lahf
cltd
es
sbb
popf
jmp
lea
push
sub
xor
aam
ds
cmp
sub
icebp
and
jnp
pop
sbb
fs
aam
adc
divl
mov
subb
arpl
out
push
jl
and
adc
pop
fucom
ljmp
adc
sub
dec
andb
and
jmp
pop
and
xchg
adc
pop
and
fs
push
dec
sub
mov
sbb
sub
jmp
add
jno
adc
push
jnp
cmp
sub
sbb
data16
jno
fwait
js
lret
cmp
movsl
ficoms
fsubrl
dec
pusha
xchg
jmp
pop
inc
std
cltd
gs
neg
xor
rcl
sbb
sbb
mov
or
adc
add
inc
pop
das
hlt
push
aam
mov
rol
adc
inc
ror
mov
mov
lock
test
stos
in
insl
out
cmpsl
and
adc
dec
lahf
insb
jmp
loope
push
or
sub
imul
adc
imul
push
sub
lea
add
lcall
adc
sub
out
xchg
or
dec
inc
jle
dec
loopne
or
insl
in
and
or
jle
dec
icebp
sub
sbb
sub
loopnew
jno
pop
add
jo
jo
xor
stc
insl
jno
add
jnp
arpl
add
ja
mov
dec
je
pop
repz
and
das
ret
xchg
sbb
mov
push
outsb
mov
aad
mov
outsl
sar
add
int
popf
jle
adc
data16
xorb
jnp
mov
popa
je
inc
lock
jge
add
cs
clc
push
dec
cmp
xchg
push
pop
arpl
cmp
gs
aad
pusha
jno
loop
sbb
inc
repz
ret
insb
push
mov
mov
dec
jbe
popf
icebp
lcall
in
pop
pop
or
subl
sub
lods
pop
outsl
repnz
sub
in
xor
repz
pop
push
and
lret
mov
mov
sbb
xlat
pushf
xchg
push
cmp
inc
push
xor
xor
inc
shll
sti
in
and
ret
jno
movsl
push
push
insl
mov
xchg
jae
jae
sti
mov
add
imul
add
xor
in
mov
in
das
pop
inc
rcr
imul
xor
mov
mov
dec
jmp
arpl
imul
xor
sbb
gs
in
lods
pop
ljmp
pop
and
adc
popa
repz
jae
add
icebp
jbe
pusha
orl
jno
push
repz
negl
icebp
cli
mov
cmc
push
mov
shrl
call
jno
dec
jecxz
loopne
or
pop
fstl
xor
jno
mov
loopne
outsl
repz
add
sbb
adc
insb
fcoms
jb
dec
pop
and
and
cld
jge
loopne
add
outsl
sbb
jbe
adc
ja
aas
cmp
sub
mov
push
xor
popf
dec
cmp
mov
aas
sub
movsb
notl
cmp
punpckhwd
and
inc
dec
push
lods
out
out
cmc
es
stos
mov
xor
std
push
cmp
xor
aaa
cmp
into
inc
icebp
xchg
mov
mov
xor
negb
adc
in
jbe
iret
mov
xchg
popa
outsl
sub
fisttps
lock
dec
test
push
sti
xor
popa
mov
test
sti
bound
je
stc
jo
popf
mov
outsb
mov
jo
add
inc
xor
jae
push
lea
adc
pop
sbb
xor
inc
shll
aaa
popf
shlb
mov
aam
cmp
cld
xor
fwait
pop
mov
sub
fistps
in
and
mov
fs
dec
movsl
mov
fprem1
imul
inc
push
movnti
push
cmp
push
push
inc
mov
jl
nop
repnz
xor
mov
add
mov
clc
addr16
scas
mov
out
inc
jo
dec
mov
imul
out
clc
insb
jmp
fnstcw
clc
scas
sub
pusha
lret
enter
and
cld
xor
out
lea
adc
inc
add
shlb
repnz
hlt
leave
incb
jmp
out
sub
out
cs
cli
addr16
clc
adc
cmpsb
add
pop
push
mov
fimull
leave
in
das
stos
in
sbb
pop
subl
sub
mov
pop
mov
jb
sbb
scas
mov
stos
loope
repnz
sub
fisubrs
call
cltd
dec
and
mov
sub
and
in
popa
jbe
cwtl
sbb
push
ds
fsub
sbb
test
pusha
ss
hlt
xchg
out
adcb
and
lret
arpl
arpl
xor
cmp
jae
inc
idivl
mov
xor
icebp
lea
andb
insb
scas
je
scas
imul
adc
lods
add
mov
pop
xchg
cmp
add
pushl
or
and
test
sbb
stos
imul
jbe
stc
dec
lods
xor
inc
imul
jno
imul
pop
mov
sub
notb
addr16
repz
pusha
sbb
dec
and
outsb
sub
inc
xlat
pop
dec
pop
or
sti
test
data16
cltd
out
mov
xchg
sub
popa
mov
insl
cmp
jno
push
add
fs
dec
sub
inc
negb
testb
into
insl
mov
mov
sbb
pop
push
in
jmp
stc
insb
sub
mov
mov
lods
in
imul
jmp
jle
mov
add
je
mov
push
es
movsb
and
jno
mov
sub
adc
fcoms
fs
cmp
imul
popa
movsb
dec
mov
mov
ljmp
mov
xor
pop
pop
gs
out
int3
je
sub
dec
mov
sub
aad
ljmp
dec
pop
cmpsb
jmp
divb
in
je
inc
sub
and
sub
inc
xor
xchg
inc
sub
fs
sub
adc
loop
jbe
lret
sub
mov
mov
jno
sub
dec
inc
push
push
jmp
sahf
int3
jge
js
cmp
pop
xor
jo
mov
mov
outsl
push
inc
or
test
jecxz
push
xchg
loope
jle
mov
jb
jmp
jecxz
mov
mov
dec
dec
pop
mov
cmc
mov
push
mov
mov
push
out
loop
xor
dec
jl
and
push
pop
sub
int3
push
push
sub
cmp
pop
bound
jg
dec
add
jae
test
mov
sbb
repz
jge
and
dec
push
mov
ljmp
clc
arpl
pop
js
loop
and
sub
adc
jmp
arpl
add
pop
push
pop
sub
mov
insb
inc
scas
test
xor
mov
call
aam
sbb
push
inc
xchg
add
cmp
and
inc
dec
dec
push
in
and
frstor
into
dec
dec
sbb
pop
lcall
or
das
xor
stos
lods
sbb
test
rcll
into
cmp
ret
or
jnp
insl
pop
cs
push
insl
es
xlat
xchg
jge
sbb
sarb
inc
mov
ljmp
in
pusha
outsb
adc
pop
imul
fmul
loopne
or
scas
sub
psubusb
movsl
xchg
insb
pushf
xchg
popa
frstor
lods
xchg
inc
cmpsb
inc
dec
sti
jb
or
dec
pop
je
cmp
push
negl
popa
sbb
nop
xor
pop
dec
push
push
xchg
sahf
and
inc
pop
popf
add
fnsave
mov
aas
in
rcrb
lods
lret
and
loope
push
repnz
jbe
sub
imul
outsb
outsb
jb
add
and
dec
add
mov
icebp
adc
add
sbb
ret
mov
lea
or
inc
push
mov
fnsave
jbe
push
or
sub
cmc
sub
jbe
lock
adc
mov
cli
cmpsb
xor
jge
pop
addr16
popa
je
and
pushf
push
or
xor
in
mov
cwtl
popf
mov
push
stos
notb
rolb
sahf
push
gs
leave
gs
xchg
pop
std
rcr
cmp
cli
fistpl
gs
test
cmp
jnp
xor
dec
idivb
jnp
or
fmull
jmp
shll
je
jno
jge
add
dec
imul
push
data16
push
pop
sbb
push
js
jb
jl
cmc
ja
movsb
jp
inc
xor
xchg
push
clc
inc
push
xor
int3
arpl
imul
and
movsb
in
pop
loopne
pop
js
and
cmp
insb
jmp
repz
xchg
repnz
push
jno
ret
or
pop
cmp
cmp
mov
mov
sub
call
je
push
and
sub
cmp
ljmp
xchg
sub
inc
in
fs
ret
add
xor
mov
es
and
inc
pop
xor
in
sub
xor
push
add
out
in
insl
add
lahf
pop
mov
dec
notl
jb
mov
jecxz
xchg
dec
add
add
insb
in
sub
lods
fcomip
out
insl
jno
jb
aaa
xor
pop
jecxz
push
adc
imul
jmp
ret
and
loope
ret
popa
push
lea
pushl
jnp
cmpsl
fbstp
lods
jg
dec
push
sbb
and
jle
or
mov
repz
mov
inc
mov
pusha
pop
lock
and
fdivl
push
jnp
pop
mov
das
xchg
add
or
lock
cmp
outsb
gs
mov
in
test
sti
cmp
hlt
mov
inc
imul
fs
popa
icebp
cld
icebp
jecxz
jns
movsb
sub
cs
cli
insb
xor
jo
or
sbb
add
and
outsl
adc
mov
xchg
pop
and
mov
jecxz
scas
stos
fdiv
sbb
sbb
in
ja
arpl
mov
gs
pop
mov
dec
or
fwait
jg
lcall
sbbb
mov
cmp
jb
fucomi
cmp
cmc
mov
jae
pop
pop
mov
cld
cmp
in
add
mov
xchg
jae
push
add
stos
in
repz
out
add
adc
inc
stc
in
jbe
pop
insl
out
push
test
loop
sbb
clc
repz
mov
pop
pop
idivl
cmp
inc
in
lods
push
xchg
pop
add
imul
mov
dec
and
jmp
jno
jp
pop
mov
subb
inc
sub
pop
mov
push
sbbb
insb
cmc
gs
out
pop
in
push
mov
imul
popa
iret
es
push
and
mov
int
and
xorb
push
shrl
test
das
cmp
add
mov
movsl
cmc
scas
notl
int3
cwtl
add
sti
ljmp
add
mov
jnp
and
push
jo
in
and
arpl
jb
jp
push
mov
vpmullw
cmc
xor
cmp
add
outsl
or
jbe
or
dec
add
movsb
ss
xchg
xorl
cli
cmp
add
movsl
push
xchg
jp
scas
push
fcoml
push
add
sbb
adc
jae
aas
sub
mov
insb
daa
pxor
mov
push
sub
dec
xor
jmp
repz
test
and
mov
imul
addr16
push
lret
jns
and
or
xchg
pop
cmp
cmpl
xchg
bound
imul
jmp
add
test
jb
lock
stc
loop
fistpll
mov
fldcw
lea
lock
mov
ljmp
push
js
push
ja
inc
or
fnstenv
lock
inc
and
icebp
adc
scas
daa
and
out
inc
icebp
mov
jns
inc
movsl
in
cmp
or
pop
jecxz
popf
movb
clc
imul
rcl
lods
jl
dec
push
insl
pop
in
push
fdivrs
adc
insl
cmpps
or
xlat
xor
adc
out
aas
and
xchg
test
popa
cmc
jg
pop
leave
dec
mov
loopne
imul
icebp
xor
in
sbb
jp
fstpl
arpl
fs
ficoms
dec
dec
repnz
inc
jg
negl
stc
js
sub
cmp
jecxz
push
and
dec
pushf
es
xchg
imul
int3
cmpsb
gs
dec
xor
inc
inc
inc
jno
xor
lock
test
ss
dec
xor
daa
and
std
cmpsl
mov
cmp
and
cmpsb
mov
and
lock
adc
mov
add
mov
lahf
fistpll
out
imul
shll
pop
push
fimull
sbb
lds
ret
mov
icebp
pusha
ljmp
mov
inc
gs
in
fsubrl
popa
data16
and
pop
sbb
jmp
jno
cmp
mov
movsl
inc
pop
outsl
mov
data16
jge
cmpsb
in
lods
pop
pop
and
dec
insb
cmp
xor
je
mov
xchg
je
iret
adc
jg
cmp
or
cmp
and
cmpsl
in
test
sub
pop
shlb
mov
test
jno
js
fisubrs
or
adc
jmp
mov
ds
pushf
mov
pusha
popa
imul
sbb
cmp
dec
mov
fsubr
ljmp
bound
jno
push
aaa
and
arpl
push
push
pop
push
mov
lock
push
sub
out
add
sub
xor
cld
cmpsb
mov
ja
js
mov
cmp
ja
dec
cmp
dec
je
outsl
iret
jae
fwait
jnp
in
mov
mov
inc
mov
cld
pop
add
aam
rorl
mov
bound
cld
adc
add
adc
push
pop
in
enter
jno
xor
call
push
je
add
pop
sub
cmc
jl
rorl
mov
mov
and
lods
arpl
ror
xchg
leave
or
and
cmp
dec
or
adc
cld
adcb
sub
jae
sbb
insb
pushl
fs
add
sbb
or
jno
push
add
adc
add
stos
addl
and
lods
cmpsl
jns
mov
xchg
mov
lcall
sub
cld
or
ret
ljmp
mov
pusha
dec
sarb
xor
mov
cmpsl
mov
pop
icebp
xor
mov
pop
inc
ret
shrl
lods
mov
and
cmp
out
aaa
jns
sbb
js
add
clc
and
test
xchg
pop
pop
pop
imul
mov
jno
imul
hlt
bound
sub
imul
inc
popa
outsb
cmp
xor
sarl
outsl
or
inc
movsb
lock
pushf
sarl
jnp
imull
sub
jl
push
pop
mov
daa
push
xchg
cmp
cmp
mov
and
mov
xor
pusha
cmpsl
addr16
lock
pop
and
pop
xor
sub
sti
push
xor
mov
lods
xor
add
scas
into
sbb
xor
pop
shrb
insb
call
and
mov
jl
insb
repz
push
ds
jb
mov
scas
aas
push
jno
popa
mov
imulb
add
dec
scas
std
dec
loope
insb
add
pop
and
cbtw
out
stos
inc
lea
mov
jae
sub
call
andl
add
jo
or
xchg
insl
mov
bound
popa
mov
ljmp
mov
adc
insb
addb
ffreep
test
insl
sti
adc
pop
cmp
pop
dec
lahf
mov
xchg
in
mov
dec
add
aam
cmp
sub
outsl
jbe
lods
mov
xor
aam
mov
repnz
cltd
jl
dec
lcall
idivb
jle
xchg
dec
ja
inc
cmpsl
pop
aad
movsl
popa
and
jle
jge
sub
mov
bound
adc
and
outsl
pop
je
sarb
mov
inc
stc
dec
scas
aas
add
test
push
mov
or
in
int3
insb
add
arpl
mov
sub
xchg
mov
imul
bound
insb
cmp
pop
outsl
sbb
cmp
push
insb
scas
jb
js
mov
insl
or
push
and
dec
dec
in
inc
or
ret
cmp
cmp
loope
jb
inc
sub
jae
out
xchg
jle
jmp
jb
gs
sti
test
adcl
xorb
add
andl
jg
enter
insl
push
les
jge
fldl
jl
jns
lods
insb
push
or
xor
shlb
sahf
jmp
xor
jno
jae
push
in
push
add
in
push
movsb
mov
adc
add
rcrl
and
arpl
outsb
ret
ljmp
lods
repz
insl
outsb
add
and
shlb
push
sub
xor
xor
mov
ljmp
test
jle
addr16
jmp
lea
dec
fistl
jecxz
ret
jge
cmp
inc
les
pop
add
ss
lcall
mov
xorb
jb
sub
test
sbbb
jnp
jb
insl
and
aad
dec
repz
push
imul
pop
xor
or
repz
lds
push
and
dec
roll
stos
dec
xchg
popa
incb
outsl
dec
jg
sbb
loope
xchg
dec
xor
in
adc
or
adc
hlt
fs
arpl
in
enter
mov
push
xlat
adcb
mov
mov
shll
imul
daa
fstl
sub
pop
cmp
es
loopne
push
fimull
and
gs
pop
add
sub
shl
push
rcl
xor
add
lret
gs
fimuls
shlb
push
repnz
jno
inc
cmp
in
in
inc
xchg
jmp
mov
mov
push
in
inc
aas
dec
push
pop
xor
push
xor
daa
inc
xchg
adc
xchg
cmp
jmp
or
xor
push
push
cmp
loop
imul
in
jge
ss
repnz
pop
call
inc
jmp
arpl
insb
in
popa
pop
repz
ss
sarl
cs
and
pusha
sub
pop
fucomp
jno
fstpt
insl
add
inc
push
ljmp
mov
sub
mov
ljmp
push
sbb
sub
push
sbb
dec
mov
cmp
and
jb
repnz
pushf
mov
mov
mov
imul
loopne
ss
mov
dec
pop
addr16
xor
outsl
lods
jno
imul
inc
ja
push
inc
sub
fs
dec
jbe
pop
leave
fidivs
push
loop
pushl
and
and
jno
sub
mov
sub
jecxz
mov
pop
xor
jmp
lods
sub
fsubrs
outsb
push
gs
imul
das
dec
lods
push
sbb
mov
mov
hlt
sub
push
rcrb
sub
xor
and
je
jmp
arpl
sub
inc
push
xlat
dec
inc
sbb
mov
daa
bnd
pop
adc
jge
lock
xor
lock
cmp
mov
xor
imul
xchg
pushf
iret
lcall
popa
push
push
jb
push
or
cmp
pop
pop
jb
dec
cld
add
sbb
leave
mov
test
mov
xchg
and
sahf
jbe
in
and
gs
ds
push
ret
std
jno
inc
cmp
popf
popa
mov
cmp
jo
mov
mov
outsl
add
outsb
addr16
mov
push
daa
pop
popa
mov
jge
push
insb
xor
hlt
arpl
les
movsb
mull
js
pop
xchg
jb
mov
testl
outsl
push
mov
int
cld
sbb
mov
arpl
lods
xor
mov
aam
pop
stos
mov
mov
icebp
sbb
testb
inc
pop
cmc
addl
mov
inc
sbb
or
ret
fildll
sbb
mov
ds
popf
insl
imul
add
iret
push
cmc
call
bnd
shlb
sub
cmc
push
je
jmp
insb
mov
xchg
xchg
sahf
xor
inc
lock
jo
adc
pop
push
not
fsubs
adc
call
in
sub
gs
insb
adc
mov
sti
adc
mov
cmp
cmpsl
decl
in
lods
adc
push
bound
into
loope
jb
minps
or
gs
addr16
psrlq
outsb
fsubrl
push
sbb
lds
pop
scas
bound
and
add
nop
jmp
popf
rclb
xor
mov
inc
push
shlb
jmp
test
and
repnz
add
into
in
add
cmp
fisubl
jmp
mov
repz
mov
sub
aad
repnz
jmp
jecxz
lds
dec
add
insl
pop
insl
and
mov
push
xchg
loop
mov
dec
inc
arpl
popa
aad
scas
add
test
cltd
insl
push
xor
lock
mov
inc
push
dec
andl
push
dec
push
sub
add
repnz
sub
push
fcoms
jne
addl
pop
iret
iret
loope
or
mov
mov
in
loope
cmp
rolb
ret
subb
outsb
cmp
lcall
lock
sbb
lahf
sar
pushf
repz
aad
icebp
stos
int3
dec
inc
jl
cs
sub
pop
popa
jge
mov
and
jo
ret
outsb
pop
push
and
imull
and
jo
push
jb
adc
push
inc
js
jbe
mov
aas
or
mov
loop
inc
jecxz
xor
add
push
cmp
das
out
mov
inc
mov
rclb
adc
hlt
xchg
sub
lock
jmp
in
out
push
and
dec
push
push
repnz
clc
sub
jns
push
lock
out
in
xchg
insb
or
push
and
outsl
or
and
xor
push
mov
int3
and
xor
ss
jmp
add
xchg
in
sti
pop
inc
loop
shl
sub
push
insb
sub
inc
xchg
inc
test
push
mov
mov
push
pusha
dec
or
push
mov
sub
shl
ss
jo
or
cmp
aaa
test
jns
xor
hlt
in
leave
adc
adc
stc
arpl
das
sbb
pop
insb
push
jb
add
popa
sub
push
ret
mov
dec
mov
jb
int3
popa
or
or
adc
shll
dec
aam
mov
addb
push
and
ljmp
test
int3
pusha
push
pop
insl
and
loop
push
shll
iret
arpl
gs
push
movsl
cmp
lods
push
out
leave
data16
sub
fisttpl
ljmp
sub
dec
subb
jmp
add
popa
dec
push
sbb
cmp
jb
sbb
inc
xchg
and
xor
lock
xchg
push
push
cld
jbe
sub
mov
pop
loope
sbbb
das
lea
scas
push
add
push
inc
mov
sbb
pop
mov
ret
mov
sbb
clc
mov
cmp
lret
sbb
sbb
xor
mov
add
test
dec
sbb
mov
inc
mov
insb
lods
or
jp
imul
sbb
pop
adc
xor
insl
jmp
lods
scas
dec
and
pop
movsl
in
imul
add
xchg
pop
cmp
inc
insl
ljmp
fisttpll
insb
mov
ret
or
imul
and
sub
cmp
fldcw
pop
aam
dec
pop
dec
cmp
mov
inc
dec
mov
mov
inc
pushf
jmp
mov
and
sbb
push
mov
xchg
push
adc
push
lea
xor
fbld
pushf
cs
push
push
jge
fcomps
cmp
jb
or
sub
loope
and
pop
jl
dec
pop
fnsave
insl
jae
rolb
sub
ja
mov
jnp
sub
cmp
push
inc
push
mov
fs
scas
cld
dec
je
dec
mov
fbstp
in
inc
inc
mov
inc
shl
xchg
sti
cmp
pop
stc
dec
jge
xchg
aad
push
dec
mov
sub
or
test
adc
inc
xor
shl
aam
sub
push
xor
arpl
test
cmp
lea
imul
inc
mov
xor
push
sub
sub
jl
push
sbb
jb
cmp
hlt
fs
mov
or
sub
sahf
pop
inc
inc
push
add
jno
in
pop
fmull
sbb
fadds
adc
xor
xor
xchg
test
cmpsl
mov
repnz
icebp
mov
and
sbb
aam
adc
lods
repnz
cltd
mov
bnd
cmp
jl
shrl
add
push
fdivl
notb
dec
and
mov
push
or
iret
and
push
jne
scas
jecxz
in
in
test
pop
and
lea
xchg
sbbl
pop
pop
lods
dec
xor
aam
dec
scas
and
jle
dec
scas
xor
and
cmpsb
xor
jae
data16
rclb
pop
hlt
loope
dec
mov
repz
add
mov
cmp
mov
cmp
mov
dec
jp
jmp
das
xor
cmpsl
jo
sbb
stos
in
push
scas
or
add
pop
dec
xor
cmp
gs
cmp
add
mov
pop
inc
pop
add
jmp
jnp
arpl
adc
jg
dec
sub
push
mov
in
mov
imul
decl
cmp
or
jmp
in
pop
cmp
lea
scas
fucompp
xor
daa
outsl
inc
pop
add
dec
das
je,pn
inc
mov
add
jmp
cmc
mov
popa
cmp
pop
mov
aam
icebp
orl
divl
cmp
push
jbe
xor
mov
jae
sbbl
jno
je
insb
or
js
jl
fidivl
push
daa
mov
in
pop
mov
ljmp
mov
arpl
addr16
push
inc
les
cmp
push
or
and
js
sub
or
jns
aaa
xor
or
cmp
pusha
jno
dec
movsl
mov
std
jb
add
mov
jae
push
cmp
cmc
lea
in
push
sub
and
inc
imul
jb
cmc
cltd
push
jae
in
or
inc
xchg
and
lea
jp
into
push
pop
or
orl
in
jge
mov
mov
cld
jmp
repz
pop
test
inc
incb
cmp
mov
xor
jbe
sbb
fsts
xchg
rcrl
scas
adc
cmp
jp
and
add
ss
outsl
sbb
dec
xor
movsl
xor
mov
fsubr
imul
dec
in
je
mov
mov
mov
test
loopne
test
jmp
cltd
xor
test
mov
push
dec
add
mov
jb
int
dec
mov
fistl
mov
push
jb
pushf
xchg
jmp
mulb
add
mov
cmp
notb
aam
es
mov
arpl
packuswb
imul
jae
aam
jmp
pop
cmp
out
subl
inc
fisubrs
pop
cs
sbb
sub
inc
pop
insl
dec
out
in
popa
popa
xor
and
cmpsb
cmc
jns
lea
xor
and
or
mov
in
mov
xchg
arpl
mov
cmc
or
dec
mov
xchg
xchg
je
sub
jge
cmp
mov
shrl
push
sub
sarb
jns
cmpsl
inc
lea
push
jns
xchg
cltd
gs
sub
mov
add
mov
lds
filds
or
mov
insb
ljmp
in
shll
lods
in
insb
mov
imul
inc
repnz
push
pop
push
negb
mov
pop
imul
inc
fidivs
xor
jae
adc
orl
iret
int3
lock
xor
cmpsb
imul
xchg
jge
popa
mov
ret
dec
dec
cmp
fdivrs
xchg
stos
ljmp
adc
insb
icebp
addl
adc
stos
sub
test
dec
jo
dec
sbb
dec
add
sub
sub
pop
push
push
aam
cmp
mov
imul
cmp
insb
mov
ja
lds
and
lea
addl
out
and
or
scas
mov
jno
sub
dec
movsb
movsb
sbb
xor
pop
lods
aad
mov
lea
in
and
push
cmc
add
jo
rorl
jno
push
sbb
stos
mov
cmp
push
sub
push
add
test
push
ljmp
adc
sbb
ret
loopne
sbbl
pop
test
ficompl
or
push
adc
in
sub
int3
jno
imul
sub
mov
aam
xchg
cmpsl
out
ret
gs
out
sub
sub
mov
inc
mov
aad
insl
sub
enter
repz
sub
lods
sbb
hlt
mov
gs
movsl
dec
je
xorl
cmp
repnz
pop
pop
mov
dec
mov
inc
mov
mov
inc
xor
in
cmp
cmp
push
sbb
nop
or
inc
out
inc
sub
cmp
in
in
cmp
aas
sbb
out
cmp
shll
in
dec
cld
enter
pop
or
push
test
repnz
xchg
xor
xor
cmpsl
test
dec
insb
xor
imul
in
jb
jl
or
scas
loopne
repz
push
pop
pop
push
dec
pop
das
popf
cmp
adc
pop
add
arpl
sbb
dec
jb
push
rcll
scas
inc
sarb
and
iret
sub
fisttps
inc
imul
mov
je
clc
inc
inc
lds
ds
movsl
cltd
movsl
popa
mov
orb
je
jnp
jle
repz
xor
sahf
push
outsl
cltd
sbb
pop
pop
test
mov
sti
push
je
imul
pop
ds
dec
cmpsl
sbb
scas
incb
jne
xor
ljmp
jmp
movsb
sahf
mov
arpl
ror
dec
xchg
cwtl
inc
push
das
inc
hlt
daa
cmp
mov
xor
push
pop
or
test
cwtl
push
test
jb
xchg
std
dec
shrl
dec
push
arpl
js
dec
add
pop
bound
nop
push
jl
test
push
fwait
roll
shl
rclb
xor
inc
adc
in
inc
std
and
xor
and
sbb
or
clc
xor
movsl
in
inc
imul
adc
push
xor
imul
inc
pushf
cltd
sub
fisttps
and
sbb
outsl
jge
repnz
idivl
or
adc
cld
jno
lods
mov
sub
movsl
cmp
jae
js
inc
sbb
loop
sub
jl
add
repz
mov
test
jl
loopne
or
and
or
jo
stc
push
mov
dec
mov
push
xor
xor
cmp
add
mov
push
or
lea
daa
stos
jecxz
or
fimuls
scas
mov
xor
add
inc
mov
dec
push
dec
push
jmp
pop
push
xor
pop
jnp
cmc
xor
call
shr
xor
or
in
jmp
mov
mov
cmc
sbb
ds
xchg
pop
popa
insb
cmp
pop
lods
imul
rorb
aaa
cmc
dec
in
ret
stos
imul
xor
mov
mov
dec
repnz
call
aaa
push
jno
jno
inc
je
jg
call
popa
in
es
dec
mov
andl
stos
adc
aam
vmwrite
lea
lea
movsl
add
push
ljmp
cmp
das
aaa
pop
inc
popa
pop
pushl
aam
or
or
pop
sub
data16
pop
adcl
aam
push
fldcw
out
addr16
and
call
das
mov
lods
loopne
popl
movsb
push
cmp
mov
sub
arpl
mov
jno
mov
push
push
push
jae
data16
and
scas
xor
sbb
cwtl
in
pop
xor
ret
cmp
enter
push
in
dec
xchg
rclb
jle
pop
xor
push
xor
jno
stc
outsl
jmp
aad
push
inc
paddsw
mov
testl
imul
notl
inc
mov
pop
fadds
mov
jmp
dec
incl
mov
and
sub
loopne
mov
lods
jnp
shll
jp
xorl
push
in
in
mov
mov
jecxz
fstpt
adc
jno
les
sbb
loop
mov
mov
fdivl
adc
sbb
inc
jg
rcrb
push
rep
aaa
aaa
jae
popa
pop
xor
dec
repz
dec
push
jae
push
idivl
push
in
dec
or
sbb
in
mov
bound
lock
out
negl
jbe
repz
jns
cli
repnz
xchg
sub
out
pop
jnp
stos
insb
jno
mov
cmp
jmp
dec
je
mov
cmp
incb
mov
aad
push
ja
sub
jno
dec
cltd
add
fildll
fldcw
sbb
inc
lahf
jg
imul
xor
movsl
mov
ret
cmp
mov
jle
mov
cld
aas
jmp
notl
dec
imul
fdivs
and
or
mov
lahf
popa
cli
pop
ljmp
ja
or
popf
xchg
mov
push
sbb
popf
popf
lahf
xchg
ret
xchg
in
xor
adc
jecxz
cmpsl
daa
aam
adc
push
hlt
inc
scas
scas
enter
push
and
push
and
loopne
inc
popf
mov
jg
stc
cmp
in
lea
dec
daa
inc
outsl
push
in
rcll
scas
pop
dec
mov
pop
xor
in
idivb
jae
test
and
mov
mov
insb
fmuls
aaa
push
jge
jecxz
xor
mov
cmp
push
gs
cmp
jno
pushf
cwtl
cmp
mov
repz
cmp
mov
dec
sub
bound
ja
sahf
lahf
pushl
sub
jp
lods
push
stc
insb
iret
inc
out
loopne
jmp
jecxz
cwtl
sbb
movsl
loopne
call
jecxz
lods
mov
fwait
add
push
cmp
and
mov
jp
dec
stc
or
imul
jae
sbb
and
stos
ljmp
inc
imul
in
mov
pop
push
xor
in
lret
mov
icebp
imul
mov
lahf
xor
cmp
fadds
repz
popa
mov
test
fcmovnb
sti
jmp
cmpxchg
in
rorl
pop
fildll
xchg
pop
sbb
out
push
mov
jno
pusha
ss
ljmp
sub
and
mov
adc
fldenv
loopne
out
xchg
xor
das
ficomps
cmpsl
sub
add
scas
insb
push
shl
push
jmp
cmp
fisubrs
lock
xor
xor
hlt
mov
cmp
imull
popa
cmc
mov
not
pop
xor
fucom
xchg
mov
cmpsl
push
outsl
pop
and
fsubp
jne
mulb
dec
iret
out
sbb
icebp
mov
fistpl
pop
dec
lcall
shlb
sub
test
jae
push
imul
mov
jle
jno
outsl
dec
lahf
mov
pop
aas
pop
cmp
sarb
test
jge
popa
imul
imulb
dec
cmpsb
cmp
in
and
mov
call
out
add
int3
xor
mov
int
mov
insl
jmp
and
ljmp
sub
xor
pop
sbb
jl
cmp
rorb
mov
and
dec
outsl
inc
mov
leave
fcomi
cmp
and
bound
aaa
rol
xor
xor
and
adc
cmp
in
popa
js
mov
cmc
out
movsb
pop
mov
mov
pop
xorl
imul
mov
dec
fsub
mov
xor
lahf
lcall
jno
dec
pusha
mov
test
iret
push
xchg
xor
pop
bnd
mov
adc
mov
mov
or
mov
pop
pop
xchg
pop
and
imul
ds
sti
je
in
sbb
pop
lods
mov
push
in
add
push
dec
in
mov
xor
add
push
test
out
xchg
inc
lcall
xchg
addl
push
jl
add
in
cltd
jl
dec
lret
cmpsl
jge
enter
mov
pop
lea
jge
jl
ret
dec
dec
inc
sub
shrl
inc
jg
std
mov
sbb
psllq
lds
pop
sub
in
mov
popa
xor
jecxz
cmp
sahf
cmp
push
cmp
imul
movsl
loopne
pushf
cmc
cmp
cmpsl
ja
pusha
ja
push
lea
cmpl
sub
pop
in
mov
push
and
addr16
ljmp
movsb
and
or
mov
jnp
push
in
jecxz
repz
aam
push
lar
subb
xchg
xor
arpl
pop
pop
into
in
push
jge
sub
xchg
inc
leave
jno
xchg
push
insl
insl
dec
hlt
pop
jns
xchg
jns
push
inc
mov
cmp
adc
add
pop
testl
ljmp
dec
pop
or
mov
xchg
sti
xor
push
fnstenv
mov
push
sbb
fdivrl
jbe
mov
pop
push
dec
mov
mov
je
push
xor
xor
pop
jns
sub
mov
push
jge
in
insb
pop
dec
pusha
int3
inc
jecxz
adc
pop
popa
add
jp
stos
jnp
cmp
jge
in
in
in
repz
pop
and
stc
jo
sbb
xchg
and
xor
dec
mov
lea
fs
lahf
dec
xchg
int3
and
imul
nop
and
push
vminsd
or
mov
insb
mov
setno
jb
pop
sub
mov
jle
sahf
pushl
pop
cvtps2pi
insl
inc
pop
sbb
popa
int3
xor
pop
sbb
arpl
int3
dec
fcmovne
mov
sbb
popa
std
repnz
arpl
lret
push
pop
loop
in
and
and
jecxz
inc
dec
add
push
sub
lods
cmp
or
pop
ja
adc
jecxz
inc
jb
ljmp
add
push
push
mov
mov
lock
bound
xchg
lods
loopne
loop
fucomi
dec
inc
mov
mov
aas
xchg
or
push
icebp
jbe
data16
rorb
add
outsb
jmp
std
fsubl
xchg
push
pop
inc
popf
pop
data16
jge
cli
icebp
dec
repz
fistps
mov
jns
mov
pop
stos
mov
xchg
filds
lds
mov
jmp
es
mov
add
hlt
add
jmp
fiadds
lock
jp
mov
je
add
mov
jno
insl
push
pop
aas
add
cmp
push
mov
jmp
fldl
leave
fadds
xchg
mov
push
fs
fisubs
push
adc
mov
add
mov
mov
mov
insb
mov
js
aad
mov
xor
lea
jle
adcl
arpl
jl
bound
push
addr16
movsl
sbb
push
cmp
aad
dec
mov
inc
popa
add
gs
es
mov
pop
push
and
sbb
pop
imul
cmp
xor
xor
mov
mov
cmc
jnp
imul
outsb
pop
pop
pop
lds
adc
cmp
xor
shrb
mov
jge
rclb
lock
inc
or
rcrl
sbb
pop
fsubrl
mov
mov
xchg
leave
mov
pop
stos
sbb
loopne
jg
cli
adc
mov
xchg
mov
in
lret
arpl
xchg
aad
mov
dec
cmc
orl
ss
lcall
call
jmp
bound
out
push
imul
or
sbb
jb
loope
outsl
pop
mov
leave
and
xchg
add
inc
pop
imul
icebp
lods
mull
scas
out
nop
dec
pop
loop
pushf
es
add
jmp
mov
mov
sbb
mov
mov
sbb
popl
jbe
mov
xor
daa
cmc
ja
xlat
out
fcomps
lock
mov
frstor
xchg
or
mov
clc
fnsave
js
sahf
ds
xor
xchg
loop
fdivrs
push
cli
mov
jl
and
and
ljmp
ja
jmp
sbb
ja
add
cld
add
xor
cmpsb
push
ss
mov
add
inc
lock
jg
imul
mov
aad
repnz
jns
cmp
adc
and
add
movl
add
loop
xor
in
jbe
mov
sbb
adc
insb
xchg
mov
push
pop
mov
test
jns
dec
mov
mov
dec
pop
imul
inc
stos
movsb
jbe
je
mov
shlb
xchg
sub
add
test
xor
jns
shr
and
rcr
jecxz
outsb
insl
mov
cmp
mov
mov
dec
fdivp
cs
insl
clc
push
ljmp
lfs
sbb
xor
dec
sti
xor
xor
popa
mov
fldcw
arpl
cmp
movsl
in
jmp
loop
push
add
sarl
mov
add
pop
or
lods
and
in
imul
mov
push
and
sub
or
in
je
xor
jle
dec
aaa
lods
xchg
and
ljmp
jae
fs
ljmp
sub
xchg
loopne
xchg
dec
mov
mov
push
inc
pop
lods
lods
xor
out
mov
jnp
lods
mov
and
and
call
mov
or
aaa
cmc
or
into
das
pushf
ljmp
dec
sahf
scas
imul
pop
outsl
repz
add
ja
or
push
sub
pusha
push
test
in
imul
enter
fcoms
cmp
mov
or
jmp
jmp
movsl
mov
imul
adc
sar
bound
inc
and
mov
repz
pop
andl
xchg
je
jb
jb
cmc
jp
cmp
cld
and
xchg
addb
arpl
pop
mov
gs
mov
cmpsl
loop
dec
mov
gs
add
mov
pop
jb
adc
repz
scas
lods
add
xchg
mov
xchg
push
sahf
leave
daa
cmc
js
pusha
xchg
push
mov
mov
jle
xchg
daa
jle
lret
pop
leave
mov
mov
gs
pop
pop
jno
push
jo
outsl
dec
outsb
icebp
gs
shrl
imul
and
imul
dec
lock
repz
gs
push
call
mov
repz
push
sub
mov
mov
lcall
ret
jb
popf
xor
sbb
mov
das
shll
xor
outsb
and
imul
jp
imul
gs
cwtl
sbb
adc
into
mov
mov
push
mulb
jmp
loope
pop
mov
xor
sub
shufps
movb
lahf
jp
and
mov
cwtl
loopne
outsl
dec
push
jo
jb
jo
popa
cmc
mov
imul
subb
incb
or
stos
lock
pop
xchg
pop
div
movsl
mov
mov
or
in
cld
popa
and
push
icebp
mov
je
scas
jmp
ss
imul
push
rolb
jb
movsb
repz
popa
aas
stos
push
mov
inc
icebp
xor
jbe
pop
mov
ret
fwait
cmp
imul
mov
fdivl
add
call
mov
iret
push
imul
pop
dec
mov
jo
mov
add
xchg
mov
jae
inc
rolb
xchg
sub
pushf
mov
outsb
push
jmp
ret
xor
sub
shll
cmp
repz
out
xor
imul
insl
cmpl
fisubl
sub
in
insb
add
dec
lock
insl
xchg
xchg
imul
popa
push
stos
jno
mov
insl
lahf
or
pop
inc
nop
adc
xchg
pop
cmc
cmp
loopne
insl
fsubr
rcll
mov
adc
mov
shll
popa
fcoms
xchg
xchg
pop
scas
lea
xor
iret
jo
mov
test
and
fstl
pop
fcmovb
add
mov
insl
push
popa
cmp
jb
push
popa
fnsave
or
jne
stos
inc
and
dec
add
pop
je
jae
insl
movsb
mov
mov
lods
mov
popf
mov
xchg
pushf
cwtl
xchg
bound
sbbl
outsl
movsb
push
clc
mov
mov
jns
loop
aam
jno
xchg
outsb
aaa
jb
scas
mov
xchg
add
rclb
inc
mov
aam
jmp
in
gs
xor
xchg
inc
jo
sub
pop
dec
ja
in
jno
and
lea
push
pop
push
xor
jle
scas
sub
and
sahf
lea
andl
dec
ljmp
cmc
add
inc
cmp
leave
push
stos
les
iret
cltd
insl
jo
es
pop
insl
imul
add
push
pop
insl
sbb
or
sbb
mov
mov
loop
and
jmp
pop
lret
aam
test
sbb
sbb
call
pop
popa
inc
daa
xchg
cmp
andl
in
in
subl
xchg
push
push
xchg
imul
popa
cmp
imul
arpl
dec
and
mov
gs
addr16
mov
adc
pop
das
xlat
movsl
cmp
lret
repnz
inc
fs
inc
add
aam
pop
in
mov
das
imul
in
mov
outsl
and
and
xchg
or
dec
adc
dec
rcrl
dec
ljmp
lock
cmp
xchg
lcall
mov
test
cmpsl
jbe
addl
mov
add
sbb
cmpsl
lds
jae
popf
das
repz
orb
mov
push
sbb
in
in
insl
xchg
cmc
sub
or
push
popa
inc
loopne
sarl
sbb
dec
xor
xchg
shll
aad
xor
jmp
data16
ljmp
insb
xor
js
in
and
jbe
jns
popf
or
mov
in
les
fstps
dec
cmp
dec
test
pop
movsl
les
sbb
mov
imul
lods
les
push
mov
add
int
mov
gs
dec
xchg
aad
mov
push
push
hlt
mov
out
xorb
dec
cmp
pop
je
les
xchg
add
mov
shll
inc
jno
les
mov
lods
sbb
jecxz
je
ret
dec
ljmp
bound
out
cmp
mov
cmpsl
cltd
fiaddl
sbb
pusha
lret
pusha
out
mov
pusha
xlat
jmp
xchg
sbbl
mov
mov
arpl
pop
subl
cmp
jp,pn
divl
dec
adc
xor
les
je
sub
cmpl
sub
iret
icebp
hlt
pop
popf
in
sahf
fs
lret
sub
xor
mov
mov
push
repz
push
push
addl
leave
aad
lea
inc
out
mov
cmp
out
xor
push
adc
lock
push
repnz
xchg
stc
or
repz
mov
push
push
inc
push
jg
xor
in
inc
pusha
sub
outsb
popa
sbb
cld
es
mov
sub
inc
xor
jno
ret
xchg
mov
dec
push
leave
outsl
xorl
xor
iret
in
jns
inc
push
shll
push
sub
jo
rep
ja
int3
add
imul
adc
xchg
mov
sbb
jns
hlt
dec
movsb
jge
xchg
movsl
mov
pop
add
data16
jb
xor
ljmp
xor
cmp
add
jne
mov
xchg
jno
insl
aam
ds
inc
sti
outsb
push
dec
loop
sbb
fdivl
lea
sub
inc
in
gs
out
xlat
pop
das
xor
test
iret
xor
adc
in
push
ljmp
push
insl
aad
loop
adc
xor
or
jno
mov
sbb
adc
mov
push
cmc
push
jmp
cs
cmpb
cmc
push
add
lock
in
cwtl
out
pop
mov
push
in
test
pusha
repz
add
pushf
mov
jo
scas
mov
imul
sbb
sub
hlt
cmp
ja
loope
xor
mov
call
sarb
ret
jnp
lods
test
call
mov
lret
cli
add
in
les
push
icebp
popa
sub
test
mov
xor
lods
dec
mov
jb
pop
jg
jno
jno,pn
pushf
push
pusha
aam
lea
aad
ljmp
repz
into
pop
adc
cmp
xor
push
push
hlt
sub
add
sub
cmpsb
push
push
jno
loop
das
dec
adc
das
cmp
jge
insl
leave
cmp
ds
ss
out
adc
push
and
iret
scas
outsb
je
jl
sub
pop
repnz
xor
pop
jg
sarb
inc
insb
in
ficoms
js
sub
lahf
xor
or
fnstsw
jns
mov
popf
xor
dec
addl
xchg
push
mov
mov
sub
push
sub
insl
add
insb
dec
mov
inc
jp
mov
dec
inc
addr16
push
sub
shl
inc
aam
xchg
icebp
adc
add
dec
cwtl
inc
xor
push
test
popf
mov
xor
xchg
call
jo
inc
mov
icebp
bound
push
scas
insl
inc
in
arpl
xor
movsb
clc
jg
aam
dec
push
mov
jbe
pop
arpl
repz
testb
mov
inc
inc
dec
loopne
xor
xchg
das
lock
lods
lock
in
jno
xor
pop
fs
loop
ja
jbe
clc
push
inc
push
js
cld
cmp
ljmp
lock
enter
push
xorl
std
push
mov
fimuls
or
jle
int3
es
loop
xchg
leave
pop
add
gs
les
jb
push
push
jle
jns
push
jnp
lahf
push
sub
jae
je
icebp
cmc
repz
lock
jp
push
mov
cmp
stos
pusha
pop
insl
jbe
and
shr
fcomps
add
jl
int3
fwait
cmp
pusha
sub
lock
jne
dec
add
mov
add
lds
movsb
sbb
xchg
shlb
cmp
out
pop
scas
jp
icebp
or
cs
mov
test
pop
xchg
ret
mov
push
insl
xchg
jge
repz
mov
ljmp
adc
pop
into
inc
mov
jae
sub
push
jb
sub
jns
and
scas
out
xor
and
mov
pop
jge
shll
cmp
or
test
adc
fs
mov
repnz
jle
fisttpl
lcall
popa
daa
add
jle
pop
mov
daa
insl
es
dec
xor
jg
mov
sbb
call
mov
or
sbb
test
adc
mov
sbb
je
cmp
insl
cld
std
mov
imul
sahf
int3
popf
fs
sub
or
sub
les
xor
enter
repnz
sti
aad
test
push
decb
push
lea
popa
mov
outsb
and
pusha
lock
pop
xor
out
push
lock
stc
in
mov
addr16
mov
jnp
jge
sub
lea
mov
lods
xor
push
fs
call
jge
clc
xchg
enter
outsl
cmpsl
mull
cmp
lock
pop
fs
jnp
push
test
pushl
sub
cmp
add
and
cld
pusha
dec
ds
cltd
in
dec
aam
insb
sub
gs
mov
dec
push
push
loope
sarl
popf
arpl
add
push
cltd
pop
mov
and
sbb
leave
sub
push
push
mov
das
mov
outsb
and
sub
sbb
sbb
out
push
jl
mov
sbb
pop
inc
inc
mov
ja
add
dec
arpl
insl
cmpsb
popa
add
ljmp
pop
mov
mov
xor
mov
mov
mov
jno
fldenv
jg
push
push
or
addr16
push
fwait
cltd
adc
in
outsl
in
inc
lock
mov
pop
push
into
outsl
test
lods
incb
std
ret
clc
ss
aaa
jb
fbld
sbb
mov
pop
fistps
mov
xor
inc
mov
jae
dec
stos
add
mov
xchg
into
insl
js,pn
out
in
cmp
add
repz
sub
jbe
jnp
cmp
cs
enter
movsb
cmp
push
popa
jns
sbb
add
addr16
xor
lock
dec
xor
dec
jg
out
adc
push
dec
cmp
stos
cmp
stc
mov
mov
sub
inc
xor
mov
cwtl
sub
mov
xor
loopne
mov
pushf
xor
divb
mov
pop
cld
sub
fstpt
mov
cmpsb
int3
cld
icebp
xchg
in
scas
mov
clc
rorb
xchg
xor
aas
inc
out
cmp
rorb
xor
or
xchg
mov
inc
lds
cmp
jmp
mov
push
imul
mov
subl
inc
les
push
cmp
push
repz
test
sub
sub
lea
jnp
lock
aad
cmp
dec
mov
push
pusha
inc
insl
loopne
sbb
mov
sub
lea
jl
scas
mov
jno
xchg
outsb
dec
or
outsb
xchg
cmp
sbb
push
and
rcll
gs
popa
jmp
mov
inc
daa
adc
pop
shr
inc
sub
das
fdivrl
add
gs
sbb
and
mov
inc
cmp
mov
pop
inc
lods
inc
pop
std
sub
jl
inc
jle
mov
mov
add
pop
dec
sub
insl
sti
hlt
fwait
imul
sub
or
aad
out
pushf
repnz
jle
mov
test
shll
ds
icebp
cmp
mov
push
pop
lahf
mov
inc
inc
jle
dec
push
daa
and
xor
pop
stos
js
cld
lcall
shlb
sarb
test
sub
cld
fdiv
xor
dec
fidivs
dec
cld
gs
icebp
imul
mov
ss
mov
sub
inc
and
icebp
inc
sub
adc
and
mov
xor
push
sbb
hlt
mov
stos
mov
in
add
mov
sbb
lods
inc
fldcw
pop
pop
sub
dec
jns
mov
or
pushl
repnz
aas
imul
das
mov
mov
enter
mov
pop
loope
movsl
sbb
lds
das
mov
or
push
or
push
gs
repnz
in
daa
jp
mov
jmp
fsubs
lea
fwait
dec
jge
sub
sub
stos
or
sub
nop
arpl
jb
pop
xor
loope
in
mov
mov
mov
cld
jb
jecxz
push
adc
sub
mov
adc
sub
xor
mov
cs
sub
les
stos
jb
loope
js
and
jmp
dec
scas
pop
data16
loop
pop
or
fcoml
adc
out
or
shll
push
mov
jecxz
in
in
jno
loop
mov
xor
movsb
ja
mov
add
addr16
outsl
imul
push
push
lret
repnz
and
mov
sbb
sub
add
repnz
lods
pushl
xchg
jp
pop
call
out
jnp
pop
cmpsl
sub
cld
inc
push
sub
rcrl
adc
test
sbb
insl
dec
out
xchg
xor
dec
xor
in
lods
popf
xchg
rcrl
jmp
push
popf
in
leave
mov
mov
lea
inc
mov
mov
pusha
jmp
je
testb
das
addb
popf
mov
inc
mov
cs
in
push
xor
push
cmc
pop
sub
lcall
mov
rclb
xchg
lea
mov
imul
mov
sub
mov
adc
icebp
daa
add
jno
cmp
push
mov
cmpsb
xchg
imul
sub
xor
mov
jno
dec
push
xor
imul
sarl
fists
push
loop
jno
arpl
xor
fildll
stc
mov
push
sbb
push
stos
push
cltd
jge
jns
jg
push
jle
cmp
movsl
cmpsl
imul
je
push
pop
cmp
xorl
pop
imul
mov
mov
push
sbbb
xor
sub
xchg
xchg
hlt
xor
cmp
lcall
shr
ljmp
imul
ret
inc
add
pop
add
mov
xchg
pop
push
cmc
pop
insb
or
add
cld
loop
out
jo
outsl
je
cvtps2pd
outsb
and
repnz
test
hlt
stc
add
xor
dec
jo
push
sub
sub
push
fs
orl
push
jecxz
mov
scas
sbbl
xor
in
push
out
stos
clc
ret
mov
sbb
lahf
xor
lock
mov
in
mov
push
dec
in
aaa
jp
mov
in
inc
push
test
sahf
in
lock
gs
push
in
popf
lods
sbb
in
loope
jb
mov
nop
int
rolb
sub
push
pushf
ret
aam
cmp
jmp
push
lea
out
std
jg
add
popa
cli
or
xlat
adc
inc
cs
aam
xchg
jno
mov
je
sti
ss
daa
add
push
mov
or
and
rcrl
shrl
sbb
sbb
les
mov
ja
dec
or
mov
in
hlt
insl
pop
mov
pop
and
push
icebp
popa
mov
inc
sub
xor
lods
push
mov
lds
test
das
loopne
addr16
mov
dec
icebp
pushf
sub
fs
out
test
pop
cmp
insl
arpl
orb
or
sbb
mov
xchg
lock
sbb
aam
push
jnp
fs
xchg
lods
inc
mov
push
sub
mov
aam
xor
addl
lret
inc
lahf
xchg
fsubrs
lock
cmp
jecxz
test
jns
mov
add
push
and
sub
fidivrl
in
push
insl
pop
sahf
sbb
insl
dec
inc
xchg
inc
push
sbb
sub
push
dec
mov
pop
push
test
in
fdivrl
mov
mov
add
pusha
into
stos
cmp
xchg
and
ret
mov
xlat
ds
lods
add
mov
xorl
daa
xchg
push
xor
and
daa
push
mov
dec
fwait
adc
pop
test
dec
insb
mov
xor
mov
pop
shlb
popf
pop
jl
dec
fisubrs
sbb
fsubl
test
jb
xchg
repnz
adcl
das
std
or
xor
pop
fisubrs
cltd
xchg
daa
jo
cltd
add
dec
in
add
int
fstpt
dec
mov
andnps
dec
push
clc
cld
jno
and
fcompl
cmc
xchg
jnp
shrl
dec
cld
ss
fwait
js
push
bound
mov
sub
nop
xchg
and
cwtl
xchg
sbb
bnd
mov
scas
imul
sub
mov
cmp
mov
imul
xchg
sub
xlat
jge
dec
adcl
sub
sub
pop
cld
stos
pop
xor
cld
je
mov
fists
mov
or
mov
lret
push
dec
add
jnp
add
cltd
add
in
out
pop
icebp
insb
push
jmp
cmpsl
test
or
icebp
push
mov
scas
push
pop
sbb
movsb
test
mov
cmc
jns
enter
pop
pcmpgtw
dec
xchg
call
sbb
sub
sub
xchg
cltd
inc
and
je
push
shl
daa
fs
pop
xchg
push
add
lret
out
mov
push
pop
xchg
bound
dec
dec
mov
mov
out
xor
jne
jae
mov
cmp
mov
int3
xor
add
fsubrs
scas
dec
repz
sbb
cli
pop
test
mov
rcrl
movsb
mov
inc
and
addr16
iret
sub
loop
in
pop
mov
xchg
mov
shrl
mov
cmpsb
or
or
inc
inc
pop
mov
sbb
inc
dec
and
and
das
sub
dec
pop
movsl
in
std
imul
scas
push
lock
pop
loopne
lock
fisttpl
dec
addb
je
shlb
pop
or
fucomi
in
loop
les
call
jp
movsb
or
jno
inc
aas
sbb
test
pusha
cmp
sub
sub
mov
in
push
jbe
jns
rorl
and
fidivl
inc
sub
cmp
fldl
mov
and
int
push
mov
cld
xchg
xchg
popa
mov
xor
dec
xchg
jg
popa
sub
jg
int
cmpl
mov
lods
push
jp
inc
inc
add
lock
hlt
clc
pop
lret
insb
movl
ja
shlb
adc
aaa
test
inc
lcall
aas
sbb
sarb
pop
test
testb
push
inc
push
sbb
add
mov
adc
cmp
notb
pop
outsl
mov
cmp
push
movsl
in
unpcklps
adc
add
pop
push
popf
fstps
arpl
xor
and
lcall
jmp
pushf
mov
test
adc
push
in
rorl
jge
mov
mov
pop
addr16
test
imul
arpl
vpaddusb
sbb
in
das
imul
and
mov
sbb
cwtl
sub
cmpsb
popl
adc
pop
mov
ror
cltd
jge
xor
sbb
mov
cmp
inc
roll
rcll
shll
arpl
lock
jge
fists
nop
outsl
jmp
hlt
ret
or
aam
ljmp
adc
pop
or
cs
lods
sub
call
xorl
fistps
ja
das
hlt
fsubrl
jp
into
xor
icebp
jle
xchg
jae
cld
pop
mov
imul
xor
imul
pop
arpl
insl
loop
or
pop
int3
rorl
xor
in
dec
cmp
dec
sub
loop
lods
inc
lds
jp
shlb
and
mov
enter
push
ss
push
lds
mov
nop
fcmovnu
jo
add
cmp
andb
repz
adc
ljmp
loop
sbb
insl
fdivrl
and
test
in
xlat
pop
add
imul
xor
sbb
shr
xor
sub
popa
xchg
leave
cld
jno
lock
ja
bound
push
ret
mov
mov
mov
gs
adc
pop
xor
or
mulb
push
xor
cs
lea
jmp
js
or
in
xor
xchg
repnz
repz
cmc
mov
push
int3
sahf
in
lods
test
inc
sub
xchg
inc
outsl
ja
sti
frstor
mov
add
rol
jns
addr16
pop
out
lods
and
sub
stos
mov
pop
xor
fdivs
into
daa
add
in
mov
and
dec
imul
xchg
mov
arpl
dec
arpl
add
xchg
xchg
popf
pop
cltd
test
sbb
mov
fs
and
pushf
enter
bound
cmpsb
dec
mov
in
mov
or
xor
arpl
out
inc
popa
cmp
lods
imul
dec
test
dec
xchg
lock
push
or
push
sub
out
gs
icebp
xor
mov
add
push
mov
add
icebp
xor
lods
outsb
xchg
xor
and
dec
leave
fsubl
dec
adc
xchg
mov
mov
insl
data16
insl
gs
in
xchg
mov
fs
or
inc
cmpsl
lods
sbb
pop
push
sub
fstps
pop
or
xor
in
pop
or
mov
push
popf
xchg
lea
push
sbb
fistps
push
or
sahf
or
sub
jns
mov
scas
mov
push
mov
dec
fdivr
imul
push
sub
adc
xor
fbstp
mov
inc
daa
pop
clc
push
das
pop
jmp
mov
jb
jle
lds
or
jne
daa
add
and
lcall
rcrb
add
mov
or
mov
lcall
xor
cmp
and
addl
fbstp
into
gs
out
dec
and
xlat
adc
xor
out
aas
insl
jp
sub
dec
xchg
xchg
pushl
ja
mov
lods
lret
je
call
lock
dec
mov
insb
xor
pop
imul
jl
icebp
data16
dec
mov
push
jnp
xchg
pop
rcll
sbb
mov
jns
ret
jne
ljmp
movsl
out
mov
imul
repz
xor
fs
repnz
xor
mov
mov
fsubr
jle
jnp
sbb
mov
sbb
mov
mov
data16
ret
add
pop
aam
cmp
jmp
jle
cmp
test
andl
bound
test
inc
in
insl
test
add
pop
mov
jno
mov
imul
or
or
mov
sbb
mov
adc
imul
push
pusha
test
popa
in
imul
cmp
movsb
inc
jnp
notb
fisttpl
mov
jns
xor
jns
stos
sbb
push
ljmp
nop
lahf
xor
bound
cld
pusha
or
sbb
dec
lods
cmp
mov
push
nop
sbb
shlb
cmp
lea
movsl
push
cs
insl
xor
push
in
pop
adc
dec
inc
ds
movsb
mov
insl
int
add
sub
add
lds
fucom
pusha
push
pop
dec
leave
loopne
clc
pop
sti
fucom
insl
sub
sbb
push
push
jle
clc
scas
jmp
cmp
jmp
mov
push
pop
xchg
pop
pusha
fs
stc
jno
je
pop
mov
or
or
leave
lds
inc
sbb
adc
in
bound
rolb
pop
or
inc
and
pop
pop
shlb
ret
lcall
xor
lahf
int3
in
cmp
lock
dec
xor
cmp
pop
push
add
loop
mov
mov
ds
jmp
cmpsl
divb
les
popf
sbb
ss
dec
lret
pop
int
test
imul
sbb
outsb
or
dec
pop
push
inc
xor
push
fwait
lock
test
sbb
sbb
add
jmp
in
push
fisubrs
add
push
das
insl
xor
cmp
movsb
dec
xchg
jno
mov
adc
fs
insb
loop
mov
xor
and
push
adc
mov
ljmp
lock
adc
dec
mov
jne
addr16
in
cwtl
adc
push
inc
xchg
push
push
call
push
aad
je
and
or
sub
ror
mov
cmp
sbb
push
mov
adc
je
mov
out
cmpsb
xor
push
call
jb
addr16
mov
pop
dec
pop
imul
cmc
dec
insb
js
and
out
pop
inc
mov
push
xor
int3
pop
sub
lret
push
and
jo
xlat
push
sbb
pop
add
adc
icebp
ljmp
call
add
insl
cld
inc
es
xor
hlt
pop
dec
sbb
push
push
mov
outsl
mov
xor
inc
push
ds
inc
xor
das
scas
xchg
push
inc
mov
aas
sbb
dec
imul
xor
mov
and
ret
mov
xchg
mov
lahf
into
jl
mov
repnz
les
jne
xchg
add
add
add
mov
andl
jle
lret
stos
jbe
shlb
cwtl
mov
ja
loopne
out
aam
ret
rorb
out
push
test
sahf
mov
mov
shrl
and
aad
inc
inc
add
adc
or
xor
and
test
test
inc
xchg
xchg
adc
call
mov
xor
add
jns
cmpsb
pop
mov
lret
sbb
sbb
roll
mov
test
mov
lods
mov
adc
rorl
push
shrb
push
data16
lock
dec
mov
arpl
xor
imul
data16
imul
insb
add
xlat
push
adc
outsl
int
leave
lds
jnp
mov
popa
js
mov
andl
fpatan
jae
arpl
cmpsb
insb
jo
lret
mov
jecxz
fistpl
add
pop
out
add
add
insb
push
sub
xor
inc
cld
insl
imul
cli
shrl
pop
in
scas
jns
mov
xchg
inc
mov
xchg
sub
sti
jno
test
insl
mov
ja
inc
and
push
insb
pop
addr16
dec
push
fidivs
hlt
bound
popa
aas
bound
jb
pop
push
in
push
lea
movb
add
jge
popa
stc
es
push
imul
pop
dec
push
hlt
fwait
popa
jbe
std
icebp
mov
inc
into
fcompl
jge
call
mov
and
hlt
pop
sbb
fs
jge
test
imul
cmp
ds
test
int
imul
ret
push
hlt
movsl
into
jge
test
imul
cmp
test
adc
cmp
push
mov
ljmp
daa
daa
or
xor
mov
lea
xchg
add
push
rcr
mov
jmp
dec
dec
jno
es
dec
pop
das
sbb
fs
outsl
cmc
lea
push
cld
inc
imul
cmp
insl
ret
cmp
push
push
mov
stc
icebp
ss
adc
jo
icebp
cmp
les
orl
jge
xchg
push
jno
loop
ror
popa
adc
hlt
aam
jo
icebp
cmp
test
push
xor
gs
cwtl
shrb
jo
xchg
mov
pop
or
sub
adc
hlt
icebp
ss
adc
mov
imul
sbb
hlt
lods
cltd
in
rorl
mov
imul
cs
lods
mull
and
leave
jno
and
pop
rorl
arpl
mov
imul
loope
fsubrp
cltd
pop
movsb
lock
aam
call
iret
imul
cs
push
hlt
gs
and
adc
dec
pop
subb
cmp
sbb
fwait
inc
push
pop
mov
test
ficoms
fldt
jae
add
mov
test
xor
mov
jbe
std
fnsave
push
and
dec
pop
xchg
sbb
pop
out
jb
movsl
mov
test
aad
xchg
xor
inc
aad
outsb
pop
movsl
push
std
icebp
mov
inc
into
fcompl
movsl
call
test
mov
inc
imul
cmp
push
hlt
aam
outsl
div
cmp
test
push
mov
cld
hlt
nop
lods
lock
pop
or
and
leave
push
hlt
rorl
push
icebp
cmp
ret
or
fwait
inc
jge
call
xchg
push
and
ret
push
hlt
in
outsb
mov
xlat
adc
sbb
imul
in
mov
mov
add
mov
cmp
hlt
pop
inc
imul
push
push
hlt
mov
aas
dec
dec
mov
imul
cmp
mov
or
mov
dec
imul
hlt
fnstenv
test
fstpl
subb
cmp
inc
mov
sti
xor
mov
xchg
dec
imul
jp
es
fcompl
mov
imul
in
in
mov
sbb
arpl
pusha
jg
xorb
ds
popa
sub
pop
sti
popa
hlt
lods
aam
xchg
mov
mov
lahf
mov
add
mov
imul
int
cmp
sub
mov
xchg
inc
fidivs
cmp
cmp
enter
andb
add
or
lds
pop
jp
inc
and
ja
jge
xor
addr16
or
aam
mov
andl
jmp
mov
push
and
and
mov
xchg
lock
mov
pop
pop
adc
adc
add
sbb
sbb
lahf
mov
lds
iret
stos
xchg
mov
lea
ror
jne,pn
enter
adc
inc
in
jl
xor
mov
lds
out
mov
inc
push
cmp
ret
cmp
clc
fs
clc
xor
popa
rcrb
daa
or
flds
dec
fsubl
call
mov
fnstenv
pop
adc
cmp
push
adc
xchg
and
out
in
gs
add
lods
jno
dec
mov
in
and
lret
js
xor
mov
or
sbb
pop
sub
pushf
mov
aas
or
push
sbb
and
pop
sub
mov
and
push
fldt
imul
sbb
daa
insb
mov
movsl
test
and
xlat
out
or
gs
enter
push
movsl
int3
mov
sbb
dec
or
cmpsb
out
push
pop
push
clc
push
fistl
dec
add
ret
inc
insb
inc
insb
cmpsl
insl
xchg
sub
mov
imul
pop
outsl
scas
int3
mov
push
pop
loope
xor
mov
xor
mov
push
ljmp
loop
arpl
pop
in
mov
sub
sti
insb
mov
mov
popa
mov
adc
pop
sub
lret
test
ds
inc
add
adc
insl
pop
test
js
push
stos
shlb
les
shrl
movsl
mov
ja
sub
stos
jl
lods
cmpsb
mov
fldl
mov
sarl
lods
jge
addr16
mov
mov
mov
test
in
outsb
add
adc
imul
add
shrl
cmp
jbe
pop
mov
jl
adc
ret
mov
test
hlt
test
mov
cltd
mov
mov
testb
ret
das
les
fwait
in
pop
out
and
inc
sub
scas
das
call
fdiv
xchg
in
xchg
fs
sbb
add
jae
out
jno
xor
insl
mov
xor
insl
out
insl
aas
jmp
out
gs
in
push
in
push
test
mov
push
movsl
and
inc
add
mov
push
lds
xor
inc
mov
sub
repz
jmp
and
icebp
in
cmp
mov
lock
adc
pop
imul
hlt
inc
jbe
push
gs
popa
sub
hlt
scas
mov
inc
movsl
in
mov
mov
mov
jne
add
icebp
in
out
sbb
inc
mov
mov
movsl
mov
jb
jo
dec
mov
dec
mov
into
jmp
xor
adc
daa
xlat
movsb
push
inc
jmp
or
mov
in
mov
xchg
mov
movsb
push
cli
lods
and
xchg
xchg
or
addl
negl
xchg
gs
imul
cld
into
les
ds
test
insb
ljmp
sub
add
call
ds
aas
into
push
adc
dec
icebp
icebp
in
mov
in
imul
push
scas
insl
mov
adc
mov
insl
dec
add
pop
outsl
mov
adc
dec
je
test
leave
testb
jb
js
jg
mov
add
sbb
ss
xor
imul
insl
or
shr
inc
movsl
add
or
aam
push
and
arpl
loopne
imul
and
sbb
push
aaa
and
and
insl
mov
test
jge
mov
call
sub
xor
outsb
out
lock
dec
fidivs
sub
pop
outsb
or
je
out
ror
cmpl
xor
into
fcoml
mov
and
mov
test
jge
mov
imul
int
popa
imul
jbe
div
mov
add
pop
xlat
adc
mov
xchg
push
and
dec
pop
xor
arpl
jo
add
xor
lock
arpl
jmp
nop
fcmovb
rcl
add
jno
xchg
push
pop
xor
cmpsb
test
adc
ret
and
je
lock
in
push
add
pop
and
pushw
lods
inc
sbb
jg
and
add
xor
xor
cs
ficomps
pop
mov
pop
dec
or
gs
hlt
movl
ret
inc
pop
and
aas
int3
inc
pop
add
mov
cmpsb
mov
mov
xor
sbb
push
mov
test
push
or
mov
mov
aam
and
push
insb
mov
jb
pop
insl
push
mov
pop
mov
call
sbb
dec
mov
add
xlat
xchg
es
mov
lret
xchg
mov
dec
mov
ret
push
sbb
push
add
dec
mov
and
pop
lock
mov
cltd
push
cld
sbb
imul
les
repz
popf
push
imul
and
leave
push
mov
dec
jge
xchg
loopne
mov
or
add
mov
loope
insl
cmp
stc
jecxz
orl
dec
add
lods
aam
xchg
testb
xlat
push
nop
clc
mov
movsl
mov
mov
ror
rclb
stos
scas
fwait
dec
pop
pop
inc
addr16
aad
pop
pop
mov
sbb
ja
in
xor
test
add
pop
push
repz
push
idivb
sub
imul
pop
mov
jae
fisubl
loop
daa
insb
popa
cmp
fsubr
push
push
add
lods
lret
mov
jns
rcrl
pop
mov
mov
icebp
inc
mov
xchg
cmp
jae
ljmp
inc
cwtl
ja
mov
xor
sarl
shll
jge
stos
mov
mov
push
popa
push
push
mov
rclb
sub
popf
movsl
adc
pop
and
xchg
jl
xor
dec
cmp
inc
or
add
repnz
mov
insb
push
add
jge
jge
ret
jnp
push
inc
and
pop
xor
rcrl
jae
clc
in
scas
pop
inc
fsubl
imul
aam
imul
popa
push
or
into
dec
adc
lock
dec
test
lock
sbb
repnz
jns
gs
clc
xor
or
addr16
cmp
mov
xor
xor
ja
and
sub
push
out
dec
imull
je
fnstenv
jb
push
insb
xchg
fidivs
pop
xchg
push
cmpsl
xor
insl
aaa
in
push
xor
in
out
scas
push
ja
aas
in
push
xchg
push
pop
daa
out
in
mov
jg
inc
fidivl
sub
push
jl
lods
mov
pop
mov
aam
enter
imul
popa
gs
imul
mov
rcll
rcrl
xor
pop
test
and
icebp
sbbb
test
gs
gs
jo
jge
jno
pop
pop
movsl
push
int
insl
fcoms
pop
inc
fsts
gs
mov
push
das
cmp
mov
push
xchg
pop
sub
push
hlt
lods
jno
das
sbb
xor
add
xor
lock
in
xor
loopne
aad
xor
push
shll
mov
inc
das
lds
cmp
pop
popf
call
repz
test
xchg
inc
jno
adc
jne
cmp
hlt
movsl
jae
das
pop
push
push
clc
xor
dec
push
cmp
xor
xor
xor
and
xor
push
adc
mov
cmp
fdivl
push
shll
mov
cmp
sub
jge
repz
xchg
cmp
insl
adc
cmp
or
out
in
pop
jb
mov
cmp
xor
xor
sbb
fs
and
and
cmp
out
xor
arpl
dec
push
aam
call
daa
rcr
fcmovnbe
into
pop
pusha
gs
in
hlt
ss
push
jo
push
data16
or
sbb
mov
call
or
decl
or
or
jae
data16
add
rclb
push
pop
push
mov
aas
punpckldq
pop
pop
xor
and
push
dec
inc
imul
sub
adc
and
insb
in
roll
enter
cmp
imul
shll
and
scas
add
inc
das
push
insb
xor
and
fdivs
push
in
inc
daa
lds
aas
lock
or
pop
adc
or
push
adc
add
insb
in
rorl
push
gs
incl
pop
lods
insb
lods
pop
push
push
mov
cmp
fdivl
sub
or
insb
out
pop
dec
sub
mov
push
roll
leave
dec
jno
pop
repnz
fidivl
push
aam
inc
data16
jp
insb
and
aam
mov
pusha
insb
in
aad
cmp
pop
xchg
inc
inc
inc
call
jp
sahf
mov
insb
pop
pop
xor
inc
in
shrb
in
dec
sbb
push
sbb
imul
mov
stos
scas
sahf
or
and
push
js
mov
jle
in
add
arpl
inc
add
sub
pop
cmc
jnp
jae
inc
testl
xor
jle
mov
repz
lcall
push
outsl
lock
dec
leave
jb
mov
push
or
popa
or
dec
mov
cmp
push
outsl
cli
hlt
jbe
xchg
testl
cmp
xor
dec
fs
insl
pop
lock
arpl
in
insl
sub
lea
cmp
jg
mov
lock
out
jo
sub
jno
add
add
cmp
mov
add
inc
inc
addl
movsb
in
cmpb
incb
lea
xor
push
adc
in
sbb
push
repz
xor
add
aaa
mov
inc
xor
dec
xchg
insl
imul
push
mov
pushf
pop
ret
dec
addl
outsl
push
jae
repnz
add
mov
imul
or
dec
mov
xchg
in
jge
out
adc
xor
dec
add
sbb
gs
push
repz
adcb
lea
les
movsb
xchg
add
push
jmp
pop
cmpl
pop
and
insl
pop
rcrl
or
imull
int3
push
mov
mov
push
arpl
xor
in
and
sqrtps
sub
xor
xchg
int
sub
adc
test
pop
arpl
inc
adc
push
cmp
aam
push
arpl
aas
imul
gs
shrb
inc
imul
repnz
or
xchg
popa
push
and
push
mov
call
mov
loop
xor
lock
add
push
rcll
cmp
xor
fs
sbb
inc
mov
inc
cld
andl
inc
imul
addr16
push
in
movsl
pop
iret
in
js
push
gs
xor
sbb
cmc
push
bound
push
aas
push
pop
or
sbb
jmp
pop
mov
jbe
xor
mov
shll
inc
das
pop
dec
jno
popf
mulb
insl
test
inc
lahf
xchg
pop
mov
ret
movb
imul
push
mov
lea
into
shl
adc
push
cmp
mov
insl
push
in
imul
adc
push
out
shl
mov
jle
imul
arpl
push
and
ljmp
in
int3
adc
push
loopne
cld
notl
xchg
or
in
test
cld
scas
xchg
xchg
pop
adc
mov
adc
pop
in
addr16
and
and
fwait
pusha
insl
call
adc
xor
in
pusha
insl
xor
push
insb
xchg
scas
sbb
mov
pop
and
lds
sbb
jns
andps
imul
ror
xor
push
ret
aam
sub
add
add
mov
test
sub
mov
mov
dec
and
lea
dec
add
xchg
mov
sarb
aaa
mov
popf
pop
icebp
insb
push
fcoml
and
popa
sub
adc
mov
lret
gs
cwtl
pop
rcl
jl
test
pop
or
repnz
arpl
sbb
dec
mov
push
pop
mov
popf
outsl
xchg
or
inc
mov
xor
jmp
sbb
lock
push
inc
stos
repnz
inc
into
inc
loopne
pusha
ss
shl
push
fstl
ljmp
add
pop
cmpl
push
inc
std
lods
lods
push
icebp
lods
stc
inc
mov
lret
xor
sbbl
lock
pop
push
addr16
or
pop
out
xor
cs
inc
pop
ja
imul
xor
sbb
push
fldt
cltd
xor
insb
inc
in
sub
push
add
push
int3
xor
sbb
pop
mov
or
iret
pop
sbb
push
ret
fstpl
push
stos
adc
push
dec
sub
xor
push
movsl
and
pushf
mov
dec
push
adc
ds
insl
and
pop
pop
mov
push
cltd
iret
pop
sbb
adc
pop
sbb
dec
les
icebp
dec
dec
adc
push
dec
mov
add
add
adc
cmpsl
inc
dec
pop
fistps
sbb
inc
xchg
cmp
inc
lock
icebp
bound
inc
add
sub
xor
jbe
xor
fcompl
push
inc
sbb
sub
pusha
xchg
push
add
sub
push
adc
push
sti
icebp
gs
add
sub
and
xchg
aaa
loope
pop
fwait
arpl
je
ret
lds
les
scas
push
mov
inc
cmp
imul
dec
and
jg
cmp
jle
ret
in
mov
mov
popa
dec
loopne
call
pop
jo
mov
jbe
aas
fadd
xorb
pop
xor
leave
adcb
cmp
das
pop
fs
in
test
dec
leave
pop
push
cmp
frstor
int
mov
mov
enter
in
xor
push
pop
sub
in
mov
mov
jmp
movl
cmp
out
xor
pop
insl
sbb
push
jnp
movsl
hlt
mov
xor
mov
and
mov
sbb
push
adc
out
xor
pusha
in
push
sbb
push
addr16
jp
icebp
pop
dec
sbb
sbb
test
sbb
ss
or
pop
pop
gs
arpl
nop
and
jnp
and
insl
ret
or
imul
insb
cwtl
data16
add
jbe
fnstenv
fisubs
adcl
and
lods
lock
outsb
rorl
mov
mov
mov
sbb
adc
jbe,pt
insb
xchg
lds
in
push
cmp
sub
in
add
push
andb
sub
inc
sbbl
mov
pop
add
sub
mov
sub
mov
sbb
hlt
mov
mov
cwtl
dec
shlb
ret
add
inc
iret
imul
cli
pop
or
push
popa
fisubrs
or
imul
jno
in
xor
inc
push
pushf
jecxz
inc
push
arpl
cltd
test
push
sub
push
and
pop
and
fwait
sub
leave
cmp
leave
insl
es
sbb
int
xor
pop
push
in
sti
pushf
xchg
and
gs
xor
or
push
cmp
pop
push
iret
mov
fnsave
jns
dec
leave
mov
ret
gs
shrl
insl
pushf
pusha
xlat
sub
xor
inc
lcall
pop
jle
xorl
sbb
mov
das
fldl
pop
mov
ret
insl
in
iret
push
mov
push
xchg
push
or
push
shll
shlb
imul
push
popa
or
pop
add
loopne
or
mov
and
insb
sbb
xor
push
leave
mov
gs
and
pop
gs
cmp
jns
imul
cmp
popf
cmp
scas
xor
aam
cmp
sarl
dec
add
cmp
idivb
pop
sbb
and
jno
lock
sbb
pop
arpl
jno
inc
out
arpl
fldcw
lock
popa
fld
push
jno
aad
mov
inc
xor
subl
xor
insl
aad
jo
test
push
mov
push
mov
insl
addr16
xchg
push
add
or
cmp
inc
gs
xchg
push
sbb
xchg
push
pushf
out
mov
jp
xlat
outsb
jge
out
add
mov
pop
mul
push
imul
sti
xchg
push
pop
hlt
jns
rep
sub
es
out
push
mov
xlat
psubw
clc
add
adc
stc
cltd
cld
dec
and
push
xor
repz
push
pop
lods
sbb
mov
cmp
addr16
pop
stos
jno
popf
add
fcoml
xchg
dec
fdiv
xor
arpl
inc
les
pop
in
push
loopne
sbb
dec
jno
and
sub
pop
dec
adc
sar
push
xchg
scas
sbbb
fistpl
pusha
test
and
clc
pop
jno
popa
insl
dec
and
imul
xlat
add
das
pop
push
or
mov
rcrl
mov
arpl
ja
mov
shrl
pop
jle
cmp
mov
insl
ljmp
gs
bnd
shlb
mov
iretw
push
ja
xchg
push
adc
vpshab
cwtl
in
and
or
iret
pop
sbb
subb
inc
push
lcall
push
inc
dec
push
lcall
xchg
push
arpl
pop
mov
bound
inc
sbb
icebp
enter
bound
push
fstpl
pop
ds
dec
popa
inc
popa
in
cmp
bound
cmp
aam
imul
mov
les
xor
and
dec
popa
inc
out
inc
lods
inc
xchg
inc
cmp
out
inc
dec
in
in
aas
sbb
sahf
add
cmp
pop
movsl
cltd
nop
lea
xor
inc
inc
inc
cltd
in
xchg
xchg
push
pushf
cmp
xor
aam
cmp
inc
nop
es
pop
gs
int
das
inc
push
inc
or
aas
pusha
loop
push
pop
lock
dec
pop
in
mov
in
sarb
sub
out
xor
inc
pop
and
sbb
popf
push
idivb
mov
add
test
fstps
insb
rorl
mov
jno
sub
gs
popa
and
xchg
and
sub
lds
and
imul
xor
cmp
xor
dec
pop
cmp
out
jge
in
je
jl
mov
sub
fs
gs
aad
xor
in
adc
clc
imulb
jmp
insb
xor
lock
and
scas
push
int
test
cld
push
jge
xor
in
sbb
rcll
mov
enter
lods
pop
fsubl
inc
push
pop
push
hlt
or
and
insb
mov
jae
push
imul
jns
jno
xor
cmpsl
imul
cmp
es
shrl
xor
xor
push
xor
pop
or
insb
xchg
push
les
mov
je
clc
mov
mov
rorl
movsl
xor
ja
gs
je
xorb
cs
or
push
rcl
sub
pop
inc
add
stos
jge
or
and
adc
adc
arpl
pop
rcll
push
pop
ss
cld
push
push
js
dec
jp
cmc
enter
push
xor
push
mov
xor
mov
mov
inc
pop
add
loop
and
push
mov
pop
or
inc
mov
cmp
xlat
stos
sti
push
inc
nop
ljmp
aas
sub
fidivs
cmpl
pushf
out
or
mov
mov
call
and
jle
inc
jg
sub
stos
loopne
xchg
add
mov
push
sub
mov
dec
orb
or
aam
incb
or
add
imul
adc
or
cltd
imul
push
xchg
push
jmp
cmp
cmpsl
aad
idivb
pushf
jecxz
sbb
or
jo,pn
or
xor
jno
pushf
outsb
dec
pop
in
ret
ds
notl
scas
add
mov
es
and
inc
sbb
mov
mov
int
out
push
lcall
sbb
mov
sbb
test
cmc
sti
mov
ss
cmp
cmpb
and
sub
lret
or
outsb
push
fisttps
jnp
adc
adc
add
dec
push
adc
out
mov
es
xchg
inc
push
faddp
cmp
mov
mov
mov
cld
ljmp
xchg
push
cmp
sub
test
bt
pushf
jmp
xor
hlt
sub
dec
adcb
cwtl
cmp
aad
js
lea
insl
adc
xlat
sahf
outsb
push
pop
xor
jbe
xor
mov
lahf
outsb
dec
sbb
hlt
scas
daa
cmp
xor
repz
fidivrl
movsb
and
or
idivl
pop
fs
out
sbb
mov
dec
push
dec
push
pop
scas
jl
adc
adcl
pop
sub
ret
test
or
fstl
fs
jne
call
sti
jb
hlt
sub
repz
xchg
gs
adc
stos
jns
push
in
mov
jno
adc
jnp
mov
jecxz
icebp
nop
in
mov
jae
insl
mov
inc
aas
imul
insb
adc
fstp
pushf
push
xchg
and
incl
adc
outsl
les
sti
jle
or
subb
cmpsl
add
gs
push
xchg
fisubrl
test
sti
adc
pop
hlt
aam
je
sub
cmp
cmp
pop
jo
test
sub
bt
push
movzbw
pushl
lea
pushl
mov
sub
pushl
bt
pusha
pushf
pushl
popl
push
stc
cmp
pushf
push
movb
lea
ja
pushf
pusha
adc
sub
seta
bsr
sar
add
add
stc
mov
or
cmp
not
mov
mov
pusha
cmp
repnz
jmp
add
dec
insl
popa
addr16
imul
fs
arpl
shlb
mov
dec
sbb
mov
ret
cld
das
xlat
or
stos
test
nop
cmp
lods
stos
jmp
in
xchg
xlat
dec
cmp
mov
push
orl
scas
jae
mov
fldenv
hlt
mov
jge
inc
adc
mov
sub
sub
push
cld
and
sub
lds
mov
pop
imul
imul
cmp
fs
in
imulb
dec
jge
adc
dec
pop
fisubrs
push
dec
push
cmp
and
int3
mov
xchg
jp
add
loop
jp
mov
sub
jae
mov
out
out
lods
cmp
ficoms
shl
push
popf
repz
movsb
cmp
outsb
inc
lock
pushf
mov
xor
sti
roll
mov
les
ficoml
mov
in
jo
sub
mov
xor
cmp
iret
popf
in
add
dec
jg
shrl
or
cmc
cmpl
jb
lcall
lock
xchg
js
pop
adc
mov
xor
fs
mov
push
lea
or
cmp
cmpsb
lret
pop
and
loopne
dec
xor
add
insl
nop
js
movsl
jbe
and
mov
fs
mov
fisttpll
push
push
lret
sub
es
cmp
push
and
ret
fwait
jb
pop
xor
subb
cmp
adc
sbb
shlb
insb
mov
pop
pop
pop
mov
test
pop
xlat
push
xchg
cmp
and
flds
push
dec
add
jmp
mov
jcxz
xchg
push
inc
xchg
or
jle
repnz
xchg
mov
sbb
jnp,pn
lcall
cmp
loop
mov
mov
das
cmpb
push
movb
push
lea
jne
rcl
cmc
movzbw
sub
test
not
aam
mov
dec
shl
mov
add
rcr
not
mov
pushf
pusha
pushf
cmp
test
pushf
call
jnp
xor
sub
js
jb
pop
out
jge
pop
call
dec
dec
or
arpl
or
mov
loope
pop
imul
in
sub
sub
adc
dec
out
ss
cmpsl
insb
or
int3
clc
mov
mov
sbbl
inc
pushf
test
inc
shll
sub
mov
daa
jmp
xchg
cmp
or
inc
imulb
mov
sub
stc
ror
stc
pushf
stc
jmp
std
jae
clc
sub
adcl
sub
fdivs
pop
repz
dec
xchg
rorl
xchg
jp
test
lods
sbb
lcall
mov
push
sbb
sub
xor
sbb
cmp
out
cmp
lock
inc
stos
stos
xor
xchg
mov
pusha
pop
add
fidivrs
cmp
cmpsl
jnp
adc
out
dec
xor
push
xchg
pop
jmp
lea
jne
xor
rol
sub
aad
clc
ror
aam
mov
ror
bt
mov
inc
add
and
setp
pusha
rcl
mov
call
cmp
adc
fisubl
shrb
rcrb
or
orl
jns
cmc
cs
mov
jl
daa
jmp
ja
fs
pop
pop
clc
and
jge
popl
jbe
hlt
daa
popa
orb
and
repnz
rorb
test
mov
arpl
sti
xchg
pop
lods
and
subl
jecxz
shll
cmp
lea
subl
or
mov
jo
adc
mov
xlat
insb
inc
rcll
push
mov
pusha
lea
call
pusha
cmc
sub
movb
pushf
lea
jne
jmp
cmc
add
pushf
lea
jmp
jb
cmp
mov
rcrl
lcall
faddp
and
push
mov
fcoms
das
out
cmpl
mov
fcoms
mov
cmpsb
ret
cltd
jnp
mov
mov
add
out
xchg
add
xchg
aas
out
fldl
pop
mov
adc
lods
stc
in
imull
mull
jne
adc
and
xchg
imul
add
mov
dec
inc
dec
dec
xor
cs
insb
add
push
popa
std
sub
enter
popa
cmp
pushf
insb
inc
pavgw
pop
xchg
push
sub
nop
push
lock
std
inc
and
add
pop
les
sbb
pop
mov
sub
or
or
test
xchg
sbb
push
movsl
pop
xlat
cmp
and
icebp
fs
lds
lret
push
sbb
sbb
cmp
test
xchg
adc
mov
cmp
call
lea
jne
push
stos
pushl
lea
jmp
jmp
cmp
sti
xor
movsb
jp
adc
test
ds
out
pop
or
ss
and
je
xadd
ffree
push
push
cli
and
adcb
scas
test
loope
push
dec
inc
pandn
aam
push
filds
push
rclb
jge
lcall
mov
xchg
pushf
push
enter
jecxz
imul
jns
xchg
or
mov
cli
das
mov
decb
xchg
xor
stos
jp
push
loop
mov
lcall
cs
cmp
xor
mov
ret
push
and
push
pusha
ss
orl
in
in
and
mov
jg
dec
sbb
mov
jge
int
push
dec
push
sbb
gs
fstp
scas
das
insb
mov
pushf
push
and
jo
mov
daa
and
lret
mov
inc
mov
lcall
mov
xlat
ret
mov
fidivs
adc
out
ret
push
cmp
cmp
push
mov
cmc
add
cmp
push
pop
or
xor
pop
insb
xlat
cmpsb
push
movsb
int3
imul
into
sub
imul
pushf
jmp
ljmp
iret
add
or
sub
sub
dec
loopne
adc
sub
repz
ss
push
adc
xchg
sbb
adcb
outsb
in
mov
inc
jg
out
and
mov
xchg
dec
add
pop
ja
pop
lahf
int3
push
add
push
shrl
in
sbb
xchg
cmp
lcall
test
mov
xchg
movsb
ljmp
dec
test
dec
rorl
mov
mov
call
xchg
outsb
inc
push
out
mov
dec
daa
xor
dec
inc
in
mulb
inc
lock
mov
lea
jae
pushf
rcr
pop
rol
mov
pushf
mov
cmp
cmc
mov
bt
pusha
clc
sub
test
repnz
pushf
push
jmp
movzwl
dec
pusha
mov
push
bt
test
mov
add
test
cmc
stc
mov
test
call
lea
ja
stc
stc
push
mov
imul
bt
mov
clc
pusha
add
push
pushl
push
lea
jmp
lcall
lds
test
scas
jg
stos
adc
jne
dec
push
arpl
xchg
jp
ds
inc
pop
aaa
sbb
iret
test
iret
sti
push
pop
aam
mov
mov
sbb
mov
scas
shld
inc
js
sub
pop
insl
hlt
pop
xchg
sbb
jl
jns
xlat
push
lods
aad
imul
rcll
ja
xchg
mov
pusha
orl
ret
xchg
xadd
btr
neg
shld
mov
sub
not
mov
cmp
movb
stc
xchg
jmp
ljmp
fsubs
les
cmpsb
mov
or
cmc
fiadds
mov
call
ds
jnp
js
sbb
test
movsb
frstor
jo
rcr
daa
gs
xchg
shlb
or
ficoms
in
test
xlat
or
or
cmp
sub
adc
lds
jo
xchg
int
enter
fsubr
or
mov
xor
fldt
stos
mov
pop
mov
mov
jecxz
inc
and
movb
pushl
ret
ja
call
push
sub
ja
test
add
stc
jmp
add
add
sub
and
sbb
mov
pop
sub
ret
xchg
pop
das
push
in
outsb
filds
mov
je
addr16
xchg
clc
lods
xchg
pop
pop
inc
push
jnp
pop
aad
ljmp
dec
std
sub
pushf
pop
int3
dec
add
mov
push
outsl
ss
mov
maskmovq
testl
and
cmc
data16
and
mov
in
std
push
inc
cmpsb
mov
push
mov
pop
jne
loope
mov
ja
and
mov
add
mov
sub
lods
cmpb
pusha
pushf
jmp
jb
jmp
insl
aas
adc
mov
lods
xchg
and
loopne
pushf
and
mov
dec
adc
rcl
pop
add
mov
std
xchg
sarl
add
shl
test
or
icebp
scas
xorl
aad
test
addr16
sti
sub
loope
mov
lock
xor
pop
lcall
jnp
repnz
cmp
stos
mov
cld
shrb
out
adc
cmp
in
jle
sub
stos
fsubrl
mov
inc
sbb
les
or
in
cmp
das
test
testl
int
inc
call
xor
sbb
add
inc
jecxz
xchg
imul
mov
sub
aad
lahf
mov
pop
and
pop
or
push
push
add
or
xor
int3
xor
sbb
or
std
sbb
clc
stos
fbld
add
xor
xlat
pusha
jl
scas
cmpsl
enter
aad
sbb
push
ficompl
fidivl
iret
xlat
pop
xor
dec
dec
jge
mov
test
mov
lea
jmp
add
ja
jbe
dec
jne
inc
gs
jne
inc
gs
add
lds
push
mov
bt
push
pushf
mov
add
add
mov
clc
stc
mov
cmp
call
frstor
ret
flds
mov
push
dec
filds
jmp
dec
add
dec
push
std
inc
test
stos
jnp
sub
aam
gs
mov
out
je
push
aas
insl
pushf
lret
mov
mov
jnp
push
cltd
mov
ja
pushf
inc
push
sub
fildll
nop
or
inc
mov
cli
and
sbb
sahf
xor
mov
imul
ret
xor
adc
mov
stos
xchg
test
orb
insl
pop
xchg
add
hlt
sbb
addr16
outsb
inc
sbb
inc
imul
jnp
mov
aam
leave
frstor
cltd
mov
mov
aad
fcmovne
arpl
daa
daa
jg,pt
fcomps
xchg
loop
mov
or
xchg
int
xor
rclb
cli
and
mov
pop
out
jg
call
mov
jge
sbb
mov
into
stos
lahf
dec
dec
mov
in
mov
lds
cmpsb
fsubrl
js
sub
lret
mov
jge
pusha
inc
test
and
jmp
lret
pop
jnp
lcall
jg
outsb
fs
arpl
daa
sbb
adc
or
test
inc
adc
mov
inc
cmpsb
mov
xchg
icebp
rclb
jmp
ret
lds
es
and
mov
ljmp
stos
jecxz
dec
aaa
movsl
test
mov
sbb
push
inc
fldl
fdivs
daa
mov
mov
xor
push
pop
je
sbb
mov
jmp
adc
in
orl
in
jns
popa
and
jmp
pop
push
pop
inc
xchg
cmp
ljmp
cmc
fildl
jns
sub
push
stos
sbbl
pop
and
idiv
cmp
es
add
xchg
rorb
les
movsl
test
push
and
xchg
jo
push
lahf
jmp
push
call
ja
cmp
sub
jp
enter
jne
mov
arpl
sarl
push
push
sbb
rep
and
outsl
add
mov
jmp
add
add
dec
add
cmp
mov
nop
in
mov
int
add
aaa
sbb
fldl
dec
adc
scas
adcb
mov
adc
gs
adc
push
les
adc
inc
mov
fbstp
ss
in
jecxz
mov
lods
add
clc
lret
mov
icebp
cmp
adc
fucomp
ss
pop
jae
daa
std
mov
in
mov
cld
shlb
iret
push
dec
cmpsb
ss
cmp
shr
dec
or
fists
sub
lods
fildll
leave
popf
jne
adc
xor
daa
push
sbb
mov
hlt
sti
jp
andb
daa
jbe
xor
sti
mov
inc
xor
add
mov
in
es
inc
sarl
mov
adc
or
ss
mov
out
popa
push
mov
sbb
imull
or
sub
pop
lea
add
mul
adc
or
jo
loope
icebp
inc
cmc
mov
lds
mov
pusha
das
lcall
add
cmp
movsl
jns
sbb
les
vcvttsd2si
and
cmp
cmc
ret
xor
leave
xchg
ds
addr16
in
shll
test
repnz
and
fs
pop
mov
inc
fsubrp
and
dec
jmp
adc
sub
imul
jecxz,pt
das
xorl
out
mov
in
fcoml
sub
fdivr
lret
jne
cltd
mov
push
lea
shll
in
push
push
lods
js
sbb
ret
sub
into
xor
adc
mov
int3
mov
lods
jge
sbb
sbb
ret
insl
inc
out
dec
jnp
jns
stc
daa
divb
cmpsb
nop
cmp
jg
sbb
xlat
bound
push
mov
adc
mov
xorb
fisubrl
mov
xor
push
cmpsb
or
cmp
movsl
xchg
pushf
mov
adc
xor
push
loop
dec
cmc
mov
inc
mov
hlt
mov
rcll
fsubp
xchg
les
stc
add
dec
jo
outsb
push
jb
outsb
je
jb
add
movsl
faddp
sub
or
std
int
outsl
inc
adc
mov
pop
sbb
jnp
pop
mov
sbb
stos
sub
push
mov
jnp
adc
pop
mov
and
jo
pop
xor
mov
xchg
mov
arpl
les
sbb
aaa
adc
rorl
xchg
lahf
daa
loopne
das
popf
dec
ja
lcall
push
xor
cs
insb
add
into
popl
add
push
aas
stc
decl
int3
jp
lea
or
cmpsl
jae
adc
push
in
push
dec
daa
mov
push
faddl
int
test
cmp
mov
test
adc
ljmp
cld
mov
add
imul
hlt
or
dec
das
mov
mov
xchg
or
xchg
push
pop
fstpt
or
or
lods
jge
and
fisubrl
fimull
adc
and
stc
pushf
pusha
stc
add
lea
stc
add
call
mov
pusha
not
setb
lea
movl
jmp
ret
cmp
sub
xchg
int3
cmpsl
adcl
pop
fsubrs
xlat
mov
sahf
in
mov
xchg
pushf
aaa
xchg
jp
xchg
sarb
push
sti
mov
mov
sub
dec
insb
inc
xor
imul
or
unpckhps
push
mov
loope
jl
jb
mov
mov
cwtl
xor
xorl
jecxz
into
sbb
adc
dec
and
mov
fnstenv
mov
sarb
fcmovnb
aaa
mov
xor
sbb
xchg
bound
lock
cmp
scas
fmuls
pop
fstl
call
xchg
jle
popf
shll
popf
mov
scas
shll
in
ljmp
and
adc
jns
sub
leave
icebp
jnp
pop
push
or
addr16
sarb
das
push
shl
imul
imul
push
push
jmp
mov
push
xchg
mov
int
fwait
arpl
pop
js
xchg
fistps
pop
in
scas
cld
jp
leave
sbb
int
data16
mov
fs
xchg
pusha
sbb
lock
sub
push
jg
sub
mov
out
xchg
adc
xchg
jmp
mov
orl
push
fcompl
mov
mov
imul
nop
insb
scas
adc
add
fmuls
popl
xchg
orb
xor
in
fldt
ljmp
push
lods
sti
out
roll
jo
mov
pop
inc
sub
jg
mov
insl
mov
ror
xor
cmpsl
hlt
mov
lea
ja
push
clc
clc
bt
imul
pushf
stc
add
mov
lea
jmp
add
insb
jae
jb
insl
jo
inc
add
int3
insl
fwait
jo
push
lock
push
sub
push
fcmovnu
push
fidivrl
loope
cld
loop
xor
loope
out
inc
pop
add
pop
or
sub
xchg
xor
ret
ljmp
mov
push
sbb
cli
mov
sub
loop
dec
std
pop
push
pop
cmp
cli
push
xor
aam
mov
adc
cmp
xchg
data16
dec
fwait
fs
sbbl
and
add
push
cmc
mov
add
pusha
pushl
push
pushf
lea
jmp
pusha
inc
call
sti
test
and
iret
mov
mov
or
pop
or
fisttpll
dec
jns
xor
mov
aam
stc
add
pop
fnstsw
shrl
pushf
dec
push
inc
movsb
push
inc
pop
sahf
adc
xor
pop
sbb
ficomps
in
mov
add
jp
add
rorl
into
mov
test
out
adc
push
push
cs
lahf
je
adc
scas
sbbb
dec
mov
xor
add
fs
clc
push
sub
cmc
bt
cmp
pushf
pushl
popl
stc
test
call
inc
mov
int
int3
add
push
shll
lahf
jne
sbb
inc
iret
add
ljmp
subb
pop
dec
jb
sub
mov
aaa
in
jo
repz
ds
pop
sti
xchg
vpsrad
hlt
test
rcrb
aam
mov
mov
out
xchg
lods
cmpsl
jp
xor
mov
in
xchg
lea
cld
push
clc
inc
aam
push
pop
movsb
inc
add
xchg
aad
repz
adcb
into
testl
arpl
mov
sub
mov
sbb
test
dec
sbb
jg
fcoml
dec
cmp
ds
sbb
pop
cs
or
adc
cmp
jle
mov
das
gs
outsl
inc
add
sarl
nop
enter
lods
int
mov
pop
adc
sub
js
pop
and
fucomp
push
jge
dec
cmp
pop
pop
ss
lcall
in
pop
and
shll
cmp
rcrl
mov
jl
mov
sub
iret
push
movsb
jae
sbb
rclb
nop
xchg
cli
mov
adc
jo
scas
jnp
std
arpl
call
outsl
pop
mov
and
popa
push
xchg
add
push
push
xorb
pushf
dec
push
dec
lcall
shr
addl
or
adc
loop
pminub
mov
pop
cmp
cmp
hlt
mov
mov
or
sub
pusha
mov
add
movsl
jne
sbb
stos
jo
test
and
test
fsubl
mov
dec
cwtl
xor
mov
mov
ret
sub
xor
jmp
xchg
mov
mov
inc
inc
js
mov
ds
daa
xchg
pushf
mov
push
add
lahf
push
ror
xor
xchg
push
mov
or
cmpsl
ja
adc
cltd
addr16
sbb
jbe
pop
or
movb
mov
sub
repnz
jmp
adc
stos
ljmp
or
inc
dec
jge
incb
into
lcall
pop
movsb
out
cmp
pop
xor
pushf
mov
cmp
jmp
fistps
std
sub
jo
iret
cld
aaa
push
jbe
mov
into
cmp
cmp
push
call
adc
stos
jae
out
cs
cmpsb
shrb
mov
mov
scas
fwait
sti
lret
jae
pop
cld
push
mov
loop
das
push
pop
and
lret
ds
movsb
jp
arpl
mov
call
popa
popa
ljmp
pop
sub
pop
sub
mov
pop
mov
negb
daa
in
push
mov
xlat
jp
rep
jge
pop
sub
push
adc
call
push
mov
decb
mov
les
sar
jae
insl
push
clc
imulb
xlat
clc
xor
xchg
sbb
ljmp
mov
popa
push
adc
push
jmp
ljmp
pavgw
mov
push
and
inc
mov
fiadds
jns
in
movsb
loope
addr16
test
pop
out
dec
push
daa
hlt
cmc
cmp
rorl
lret
pop
in
mov
xor
mov
in
rclb
insl
lret
adc
jns
jb
xchg
sub
mov
mov
shll
cli
in
mov
mov
frstor
bt
test
pushf
lea
je
bt
test
call
movl
pushf
mov
pusha
mov
pushf
movb
pushl
ret
cmp
cld
shrl
sub
xchg
pop
idivb
push
adc
add
adc
stos
repz
xchg
mov
rcrb
mov
loopne
rcll
push
sbb
jl
loopne,pn
jp
stc
daa
shrl
inc
in
in
sbb
or
pop
in
push
test
jb
push
cmpsb
out
xchg
imul
rolb
orl
mov
push
das
pop
shll
ljmp
cmp
sub
movsb
fsubs
xchg
in
jg
cmp
jg
inc
or
lcall
push
cltd
loope
popa
mov
and
adc
aas
jne
aas
or
mov
dec
bound
dec
movsl
mov
cwtl
ret
cmp
add
push
mov
jne
cwtl
mov
mov
add
cmpsb
sbbb
ret
nop
bound
sbb
aas
ljmp
and
cmp
stc
lcall
int3
push
inc
pmullw
mov
pop
cmp
repz
out
fwait
inc
jne
jo
pop
aam
rorl
push
cmp
and
mov
cmpsl
ficompl
bound
adc
data16
ljmp
pop
insb
inc
jmp
xchg
pop
adc
push
dec
pop
dec
add
jmp
xchg
arpl
add
stos
jne
sub
fildll
add
testb
add
dec
call
xchg
jne
stc
inc
mov
jne
movsb
mov
jne
stos
sahf
cli
inc
and
mov
mov
jb
mov
add
jne
imul
das
dec
fbld
stc
cli
mov
or
cmc
xorb
in
push
aaa
arpl
sbb
inc
mov
test
or
imul
stos
enter
add
and
lret
iret
insb
jnp
xor
testb
ja
pop
jbe
sbb
in
sub
shll
cld
inc
xor
push
jnp
stos
lods
xchg
pop
cmp
outsb
repz
cmp
loop
push
fidivrs
jnp
jne
lods
pop
outsb
mov
or
mov
fstps
mov
repnz
lret
dec
adc
cmp
adc
in
or
xlat
add
je
jnp
or
mov
cmp
xchg
bound
push
jne
dec
adc
mov
dec
daa
or
jecxz
out
pop
add
xchg
mov
cmpsb
cmp
xchg
xchg
hlt
cmpl
pushf
decl
insl
in
and
inc
mov
or
inc
es
orl
xor
push
jne
bound
mov
pop
loop
jne
ds
gs
jne
outsb
pop
sub
hlt
sbb
cmp
jnp
jge
hlt
fdivr
jae
lock
push
movsb
jns
jne
push
dec
or
sbb
pop
xor
pop
jne
cltd
sbb
test
jae
sub
cmp
aam
mov
repnz
push
loopne
cltd
arpl
sbb
aad
adc
js
fnstenv
arpl
or
xchg
ljmp
inc
repnz
out
push
imul
jne
mov
and
rclb
fs
jne
jmp
sti
mov
and
xchg
xor
cmpsb
jge
cmpsl
adc
inc
in
xor
pop
imul
aaa
fwait
jne
orl
leave
mov
rclb
mov
adc
and
pushf
out
dec
push
test
mov
cmp
sub
jb
inc
or
fnstenv
aaa
pop
repz
cli
adc
sub
xchg
inc
cmp
pop
jne
decl
mov
movsb
pop
jne
dec
cli
sub
adc
push
pop
outsb
in
xchg
push
inc
fcmove
cmp
add
xchg
xor
das
ficoms
mov
sub
jp
int
and
hlt
daa
hlt
js
inc
jmp
jne
out
pop
dec
insl
dec
fdivs
adc
sub
es
mov
cmp
leave
fwait
and
repnz
mov
or
push
aaa
mov
jne
mov
cwtl
push
xor
xchg
loopne
sub
sub
das
jne
xchg
inc
ja
add
jne
jg
lret
pop
pop
cmp
inc
fcoml
pop
jne
cmp
xchg
xor
addl
test
jnp
pop
cmpsb
je
fsubrs
repnz
icebp
addr16
add
aam
cmp
sub
mov
xor
mulb
push
jno
jl
mov
sbb
sub
jne
test
mov
jne
jecxz
mov
jne
fs
xor
pop
jne
add
dec
sbbb
jne
div
hlt
xchg
pop
andl
cld
mov
pop
pop
ret
es
jne
cmp
sti
jne
xchg
mov
mov
and
mov
movsl
lds
jne
loopne
test
push
sub
orb
add
icebp
cmp
repnz
enter
jae
or
inc
fsubs
xor
mov
ja
jb
sar
addr16
jne
jae
js
jne
mov
jno
arpl
nop
enter
aaa
mov
aam
inc
mov
leave
inc
inc
ret
cmp
inc
jne
imul
je
shll
aaa
add
outsb
xchg
mov
push
das
into
cs
sub
pop
jne
ret
mov
jae
jmp
cmp
cld
xchg
rcrb
outsb
mov
mov
jnp
inc
outsb
cmp
jne
push
insb
add
ljmp
fwait
hlt
xchg
sub
pop
and
cmp
add
shlb
in
out
insb
movsl
fisubs
jne
mov
sub
cmp
xchg
into
mov
test
xchg
outsl
xchg
aad
fidivrl
inc
jne
jno
sbb
sub
bound
jmp
aad
mov
jne
das
enter
je
imull
dec
jl
cmp
mov
adc
shll
xlat
je
or
repz
dec
in
leave
imul
fucomip
lods
or
sub
dec
loopne
push
push
mov
jbe
cwtl
jns
sub
fcoml
mov
xchg
sti
std
jbe
pop
fwait
popa
bound
sbb
hlt
mov
mov
jne
std
bound
jne
sti
sub
addr16
cmpxchg
insl
jae
loop
outsb
or
xor
xor
push
sub
andb
sub
sarb
xor
ds
mov
orb
push
popa
rcl
xor
push
loop
cli
jne
iret
jno
sbb
mov
es
push
jne
addb
jne
cs
pop
es
push
jo
mov
outsb
rcrb
cmp
je
flds
inc
add
jle
sub
dec
jmp
add
xor
mov
xchg
outsb
mov
fwait
jne
add
ficoms
jnp
insb
hlt
cld
push
es
adc
fsubrl
jne
adc
or
dec
push
cli
fiaddl
jne
repz
jne
std
push
loopne
fs
push
jne
mov
bnd
xchg
or
sub
jne
xor
nop
push
addr16
xchg
xlat
ljmp
imul
mov
pop
cmp
loopne
push
insb
fldcw
pop
inc
mov
adc
mov
in
rcll
or
stos
out
and
push
push
mov
push
icebp
jae
roll
ds
jne
xlat
and
mov
xchg
sbb
clc
mov
sub
jae
xor
sub
add
jne
sbbb
bound
fbstp
push
loope
dec
mov
adc
push
mov
pop
imul
imul
orb
je
nop
data16
das
pop
xchg
outsl
sbb
jecxz
inc
lods
jne
or
cmp
stos
clc
or
inc
pop
popa
hlt
mov
xchg
mov
es
in
adc
lret
sahf
hlt
or
mov
fwait
xchg
pop
ss
ljmp
out
jmp
jne
cmp
jp
push
and
sub
cmp
fmul
jp
je
std
mov
or
movsb
loope
sbb
clc
lahf
insl
in
jle
aad
loope
xchg
sbb
jmp
jae
ja
cmp
scas
insb
xchg
adc
mov
mov
sbb
lcall
xchg
xlat
dec
imull
inc
in
fs
jne
push
push
sahf
xor
xchg
cmp
add
outsb
stos
add
jl
add
adc
addl
add
mov
addb
inc
in
iret
xchg
aad
mov
cmc
jb
std
outsb
adc
or
xor
inc
cli
pusha
xchg
and
xchg
cld
adc
push
adc
inc
xchg
jbe
sub
jne
mov
in
data16
push
xchg
cmp
loop
jnp
add
add
popa
aas
push
cmp
bswap
gs
test
movb
gs
jne
push
subl
dec
gs
hlt
jmp
mov
add
aaa
aam
hlt
pop
cmp
and
sub
lret
xorb
jae
sti
aad
pusha
xchg
js
data16
pop
lea
mov
mov
pop
dec
xor
movsl
sub
aad
ja
mov
xor
pop
or
push
fcmovb
sub
jne
inc
lret
pop
repnz
sub
xchg
jno
insb
push
fdivl
and
fisubrs
xchg
iret
jne
cmp
pushf
push
xorb
je
sub
daa
mov
je
jb
pop
xor
je
jno
xor
mov
shll
push
gs
cmp
lods
es
mov
jb
inc
insb
imul
gs
arpl
pop
sub
xor
and
icebp
sub
je
add
adc
inc
inc
inc
cmp
or
xchg
popa
push
adc
cmpsl
and
ss
dec
add
js
add
add
add
adc
pop
test
or
mov
imulb
imul
or
scas
xor
pop
pop
out
mov
cld
inc
inc
or
add
std
pop
and
loope
inc
aaa
sub
push
mov
cs
fildl
push
je
or
push
mov
out
das
leave
or
in
xor
int
cmp
sbb
inc
inc
je
fs
lahf
xor
insl
adc
xor
icebp
sti
je
inc
xor
cmp
popa
and
inc
fsubrl
movsl
in
jge
jae
test
in
jno
insl
hlt
jno
movsl
shl
out
je
xor
dec
cwtl
es
mov
in
dec
movsl
icebp
lods
inc
lock
in
jo
push
xchg
out
fs
popa
aad
jg
xchg
in
jb
imul
cmp
xor
inc
loop
call
in
cmc
je
es
push
pop
hlt
sub
popa
insl
insl
mov
movsb
cmp
or
mov
movsb
lds
test
movsb
in
mov
fs
gs
xchg
adc
pop
xlat
in
inc
scas
add
push
jb
sti
add
jo
test
dec
jne
in
in
and
add
dec
mov
in
inc
cmp
std
cmpsl
popa
ljmp
dec
push
js
je
in
aaa
in
adc
cmovae
mov
mov
mov
ja
adc
ss
repz
inc
hlt
cmpsb
shrb
mov
into
xchg
fnsave
sub
inc
and
adc
xor
jae
push
jae
add
test
xchg
test
test
repz
inc
adc
pop
push
adc
and
inc
or
gs
les
lds
sbb
cmc
outsl
dec
sbb
es
cli
pop
in
and
aad
mov
push
frstor
in
lds
sub
mov
adc
imul
jmp
lds
gs
aaa
das
aas
out
cmp
inc
sbb
inc
cmp
xor
fnsave
xor
mov
mov
mov
adc
jno
movups
cmp
inc
inc
add
jp
out
cli
lods
sub
push
cmpsb
aas
cltd
shrl
push
inc
adc
das
push
insl
test
mov
in
and
add
sbbb
lds
xchg
dec
cmpb
xor
xor
stos
cmp
add
inc
cmp
pop
scas
popf
inc
xor
iret
in
mov
int
pop
sub
int
in
sub
pop
aad
fs
aas
xor
push
push
xchg
push
jg
cmp
mov
cs
cltd
stos
pop
js
cwtl
cld
ret
pushf
dec
sahf
jle
int
test
mov
das
dec
insl
xor
push
or
fs
push
cmp
ds
inc
xlat
pop
jl
adc
xor
testb
xor
jge
test
mov
xor
movsb
mov
or
cmp
xor
mov
adc
scas
addr16
out
out
inc
xor
jle
jns
mov
test
scas
adc
insb
xchg
xor
xor
pop
inc
inc
xor
jmp
cmp
mov
cmpb
ret
mov
xchg
mov
xor
xchg
scas
imul
xor
aas
cmp
sub
outsb
xor
xlat
popl
jae
push
xchg
mov
xchg
test
mov
or
movsl
jno
or
cltd
jns
sub
pop
xor
divl
in
cmc
insl
mov
sub
clc
fsubr
movsl
sub
lret
in
enter
add
xor
aam
icebp
cmp
and
mov
je
movsb
push
add
mov
push
xor
jge
je
lock
cmp
in
clc
insl
jecxz
mov
sub
sub
and
addr16
xor
mov
lds
pop
inc
adc
cmp
inc
add
test
jae
pop
sbb
test
sbbl
cmp
insb
jbe
sub
out
popa
ret
cmp
mov
adc
xchg
add
ds
xchg
adc
and
xchg
lock
jmp
push
je
push
insb
fisubrs
lds
dec
hlt
lret
mov
jle
sbb
jle
cmp
dec
inc
adc
jge
jge
out
mov
dec
insb
adc
sub
pop
cs
inc
mov
shrl
insl
pop
in
hlt
pusha
pop
and
mov
push
imul
push
ret
mov
inc
mov
in
push
gs
fwait
mov
or
pop
adc
adc
mov
xchg
pusha
push
popa
cltd
xor
cmpb
push
hlt
and
sub
jl
and
orl
stos
je
sbb
and
roll
jge
pop
aam
je
and
mov
rcl
or
pop
add
mov
or
les
xorl
add
push
cld
aas
mov
xchg
sub
orl
cltd
pusha
je
mov
enter
mov
or
jnp
xchg
jns
mov
and
add
add
les
insb
adc
adc
ds
in
mov
and
xchg
loopne
push
in
mov
xchg
push
adc
xchg
xor
pop
cmp
lahf
xchg
push
shr
jo
aam
test
push
adc
xorb
addl
dec
add
shrb
insl
adc
or
mov
mov
or
adc
mov
mov
popa
pushf
aad
or
push
aad
push
fldenv
popa
mov
lods
push
gs
les
or
add
pushf
mov
in
int
and
and
xchg
ret
mov
jmp
inc
xor
outsl
mov
insb
and
add
pop
adc
mov
dec
cmp
pusha
popa
in
enter
and
test
dec
lcall
or
imul
call
xchg
sub
ret
sbbl
jecxz
cld
sahf
sarl
dec
subb
add
enter
dec
jl
jle
jo
and
mov
jle
bound
sub
cmp
pop
pop
adc
or
jb
in
add
push
jge
mov
stos
clc
push
dec
add
jbe
leave
mov
jb
push
inc
jl
in
call
inc
popa
ljmp
pop
cmp
pusha
je
ret
mov
movsl
test
jno
sub
clts
jp
mov
mov
pop
push
adc
add
addr16
jnp
popa
mov
xlat
jno
mov
pop
cltd
das
cmp
jno
push
shlb
mov
imul
jo
add
mov
popa
je
sarl
dec
mov
xor
cmp
sub
arpl
dec
movsl
push
adc
and
mov
xchg
pop
adc
and
lods
mov
lahf
and
shll
mov
jns
mov
int
mov
scas
mov
cmp
inc
aas
xchg
inc
lahf
jb
call
sub
mov
sbb
mov
mov
lods
stos
mov
jb
xchg
inc
call
icebp
and
hlt
mov
outsb
lods
stos
scas
mov
notb
and
loop
mov
or
inc
jecxz
into
jne
mov
mov
lahf
scas
test
mov
stos
movsl
scas
jmp
sub
mov
sbb
lds
mov
movsb
mov
mov
mov
mov
scas
lds
loop
inc
repz
cmp
cmp
fdivr
cld
inc
push
js
mov
sub
pextrw
dec
push
push
push
inc
pop
dec
es
xchg
xlat
mov
inc
outsb
inc
cmp
mov
jle
push
lock
fidivl
push
inc
pop
jecxz
sbb
add
fwait
dec
lods
int
call
shl
xchg
jge
ret
mov
cltd
xchg
ss
inc
push
icebp
add
idivb
cmp
mov
movsl
inc
add
sub
movq
push
and
cmp
inc
cmp
xchg
mov
mov
out
mov
or
push
arpl
push
add
xor
add
ss
jnp
lods
mov
xchg
jb
mov
mov
mov
rcrl
addr16
int
sbb
add
adc
mov
adc
int3
jecxz
aad
mov
adc
test
push
bound
or
adc
testb
xor
leave
and
ret
xor
sbb
call
or
in
xor
jne
adc
int3
popf
push
cld
xorl
clc
sarb
adc
add
adc
pop
or
push
sub
xor
mov
and
aad
insl
inc
icebp
adc
sbb
inc
sbb
xchg
aad
jne
adc
adc
femms
or
or
add
aad
mov
std
cli
push
xor
pop
dec
dec
dec
dec
xor
dec
pop
test
adc
and
testb
mov
pop
std
and
and
xchg
mov
push
and
outsl
inc
bound
dec
arpl
bound
jno
mov
add
inc
push
sarl
mov
int3
iret
sbbl
stc
clc
adc
sbb
mov
sub
gs
outsb
outsl
sub
sub
jbe
je
jae
outsl
fisubrs
ds
js
mov
mov
cmp
insl
dec
in
push
arpl
aaa
subb
clc
dec
pop
xchg
cmc
test
xchg
inc
xor
sub
or
arpl
aas
cs
fnsave
sub
loop
pop
addr16
cwtl
and
insl
aas
ret
jo
fs
pop
sub
xor
gs
popa
pop
add
outsb
dec
vpcmpeqb
in
lds
jae
sub
mov
shll
fs
adc
mov
jae
mov
or
jb
push
push
dec
mov
popf
sub
inc
lock
outsl
sahf
pop
xchg
js
mov
mov
arpl
outsb
dec
gs
push
sub
sub
mov
push
orl
in
lds
mov
gs
cmp
and
adc
iret
mov
data16
lret
push
ficoml
push
dec
mov
jb
das
push
lcall
sahf
push
mov
mov
adc
inc
scas
jmp
lods
mov
adc
inc
mov
in
movsl
mov
xlat
and
aam
xor
jno
jbe
das
movsl
popa
mov
loopne
xchg
gs
aad
push
jl
and
insb
pusha
clc
lea
xchg
and
scas
sub
dec
jl
lret
push
lods
sbb
xor
je
sbb
inc
hlt
in
mov
sub
shrl
push
sbb
push
push
movsl
adc
cs
shrb
dec
push
xorl
dec
pop
and
je
jecxz
mov
inc
cld
gs
aad
jo
insl
scas
rorl
lock
push
push
in
jl
push
int
inc
je
in
sbb
jno
pop
mulps
push
add
jae
jge
sub
aaa
push
jb
mov
daa
and
test
dec
lahf
int3
cmp
cmc
mov
push
idiv
gs
inc
fisubs
in
mov
push
and
gs
mov
and
xor
and
xor
cmp
outsb
adc
push
sub
adc
daa
adc
add
jg
imul
cli
or
push
inc
cmp
lods
or
cmp
cmp
push
and
mov
dec
cmp
and
adc
scas
and
xor
jnp
iret
sbb
cmp
jle
lret
pop
inc
sbb
ds
inc
mov
cmp
push
cmp
std
sbbb
or
xor
add
or
or
lcall
and
mov
andl
cmp
stos
push
repnz
nop
fs
fildll
movsb
and
mov
ds
lret
out
sbb
push
jne
int
lea
lahf
cmpsl
jg
in
shll
xor
and
clc
outsb
andl
xchg
fwait
cmpsb
xchg
je
mov
movsl
mov
mov
imul
pop
daa
mov
bound
call
lods
add
mov
mov
arpl
in
xchg
mov
push
cltd
wrmsr
iret
mov
outsb
leave
push
test
xor
int
inc
inc
pusha
cmp
ret
mov
les
xor
ucomiss
push
inc
inc
divb
cld
cli
add
xor
add
inc
inc
inc
or
lret
xor
clc
and
fwait
inc
pop
scas
add
clc
and
imul
out
sbb
push
push
sub
push
push
mov
sub
inc
xchg
int
into
xor
mov
rcrb
aas
fldenv
mov
push
sub
cmp
stc
adc
add
jo
test
pop
cmpsb
fwait
dec
mov
adc
ss
lea
shrl
addr16
mov
mov
scas
orl
out
jne
push
mov
xchg
ss
inc
xor
cld
push
mov
inc
fbstp
idivb
jp
jne
lret
push
cmpsl
test
in
mov
stos
and
inc
imul
sub
inc
mov
mov
cmp
insb
or
sub
data16
push
inc
cli
sbb
cmp
sbb
adc
aas
adc
push
std
lds
sub
js
int3
dec
xchg
jno
jmp
lds
stc
inc
xor
sub
sub
sbb
pop
jne
push
mov
pop
loopne
adc
jb
xor
outsl
pop
icebp
push
insl
push
sbb
in
loopne
hlt
add
or
je
jno
or
sub
inc
jb
std
mov
in
push
in
imul
movsb
xor
insb
in
popa
arpl
aaa
jno
pop
psadbw
insb
xor
shr
pop
push
cmc
pop
testl
and
adcb
xor
ret
ds
rcr
imul
insb
lods
insb
insl
in
push
jae
cmpsl
inc
adc
out
je
push
les
push
jae
push
arpl
loopne
pop
push
insl
in
pop
dec
insl
inc
dec
insl
roll
mov
scas
in
insb
ds
lret
cmp
cmp
push
insb
scas
push
arpl
xor
fsubr
lea
jae
push
mov
cmp
in
push
nop
push
push
cmp
or
in
andb
sbb
mov
insl
ss
sub
push
xor
add
add
int
lods
insb
and
movsb
inc
sub
xor
pop
sub
xor
in
or
inc
push
inc
push
inc
xor
sbb
sahf
dec
std
xor
jae
outsl
dec
jae
xor
insl
jno
ret
aaa
pop
popa
xorps
hlt
cmp
sahf
or
dec
push
scas
in
int
jae
jo
push
xor
ret
addr16
in
pop
imul
cs
nop
insl
sti
out
pop
dec
ss
sub
add
xlat
fsubp
sbb
addr16
jb
call
fcomps
add
mov
loopne
mov
insb
into
cli
jb
mov
pop
add
add
adc
je
xlat
or
aad
pop
stos
aam
data16
pop
insb
std
mov
int
movsl
lret
adc
sub
lods
push
outsl
stos
lods
add
insb
stc
je
sbb
mov
aas
cld
loope
jg
aad
imul
insl
pop
mov
mov
sub
mov
or
push
ret
cld
mov
dec
adc
aam
jns
insl
loope
gs
sbb
inc
les
dec
repnz
mov
aaa
ret
mov
int
in
pop
enter
mov
mov
mov
cltd
mov
loop
out
je
fsubrp
xor
lret
ret
xor
lret
out
shrl
call
out
int
push
inc
mov
in
cmc
lahf
ret
mov
ficomps
fwait
mov
add
cltd
fmull
mov
fstpt
outsl
fldenv
push
hlt
insl
icebp
outsl
mov
mov
test
xchg
mov
scas
sub
subl
mov
lds
cltd
jnp
cltd
inc
add
cmpsl
inc
lods
in
lahf
lds
cmp
scas
shll
lods
into
cmc
xchg
stos
mov
stos
leave
mov
test
sub
rol
pop
movsl
mov
mov
lahf
mov
leave
addr16
ret
in
mov
popf
imul
cltd
scas
jmp
scas
aaa
dec
xchg
cmpsl
insl
mov
sbb
lahf
outsl
orl
pushf
push
mov
pusha
je
lea
pop
xor
add
adc
ds
dec
jne
or
icebp
cmp
in
jae
cmp
push
adc
and
jl
icebp
mov
cmp
inc
push
push
scas
jge
cmp
jb
dec
cmp
outsl
lea
and
sbb
inc
push
inc
fldt
popa
pop
push
cmp
sub
out
fs
jb
and
or
mov
push
inc
push
push
jne
bound
add
jne
inc
push
jb
pop
addr16
loopne
imul
sbb
inc
push
icebp
in
jae
xor
hlt
sbb
aam
and
add
pop
sti
ljmp
pop
sub
mov
arpl
std
pop
fisttpll
and
adc
outsb
aad
pusha
sub
adc
nop
add
in
adc
and
mov
ds
sub
jecxz
iret
jno
mov
xor
xchg
jno
insl
gs
jbe
and
adc
loope
call
xor
scas
jge
popa
je
bound
pop
pop
mov
ds
dec
outsb
in
adc
push
cmp
or
outsl
lret
pop
into
clc
and
arpl
push
xlat
pop
push
pop
hlt
sub
cmc
sbb
and
mov
iret
inc
push
shrl
ret
mov
imul
loope
xchg
mov
fisttpll
scas
fimull
jb
aad
push
push
mov
test
iret
call
aad
in
mul
xor
lods
test
push
test
outsb
jb
out
hlt
jo
enter
outsl
lods
push
shll
scas
insl
sbb
sbb
repz
xchg
lret
mov
xchg
insb
mov
imul
insb
or
add
jae
add
pop
imul
popf
repnz
icebp
xor
out
mov
in
loope
in
xorl
jns
aad
xor
insb
adc
insl
push
je
sarb
arpl
pop
fs
imul
and
in
push
mov
les
je
mov
add
in
cltd
mov
mov
fucomp
xor
in
mov
jno
mov
popf
aaa
aas
lcall
sbb
push
mov
sahf
insb
insl
pushf
scas
mov
push
nop
stos
arpl
mov
inc
mov
outsb
mov
pop
adc
sahf
sub
pushf
adc
push
cmc
mov
test
mov
mov
sbbb
jle
in
add
lea
stc
jmp
jb
addb
push
mov
int
aad
adc
jb
pusha
push
push
push
dec
fbstp
arpl
jg
pop
sbb
bound
repz
mov
clc
adc
dec
dec
sbb
push
xor
or
pop
call
adc
out
repz
sbb
mov
decl
call
push
push
and
sbb
repz
std
sti
lock
jmp
sbb
outsb
push
inc
iret
std
repz
frstor
addr16
or
dec
repz
push
js
jge
es
je
testl
sub
push
out
repnz
pop
sti
aaa
lods
sub
lods
cmpsb
push
jae
cmp
imul
lea
je
clc
sub
je
or
pop
imul
scas
xor
adc
das
add
jb
add
mul
pop
ret
aas
dec
push
push
xor
imul
imul
inc
rcrb
xor
push
push
push
push
mov
push
xor
pop
mull
repz
lcall
outsl
push
aaa
xor
fs
jno
xchg
xor
fisubs
rcl
inc
xchg
and
cld
add
adc
jno
or
inc
or
adc
xchg
add
jmp
cmc
sti
call
jb
inc
dec
jmp
insb
push
xor
sarb
push
aas
mov
outsb
and
dec
pop
sarb
arpl
lock
pusha
pop
cli
insl
mov
pop
gs
dec
addr16
fnsave
jmp
push
adc
in
out
push
cmc
stc
or
dec
gs
lock
jecxz
jmp
add
paddsb
add
and
xchg
loopne
mov
mov
mov
imull
repz
push
shrb
hlt
lock
mov
dec
push
push
cmpsb
in
arpl
or
pop
push
pop
xor
push
lock
mov
loopne
popa
idiv
pop
push
xchg
imul
push
xchg
adc
hlt
dec
pop
pop
xchg
dec
jae
xor
insb
pop
push
pop
adc
dec
xchg
imul
fs
push
iret
repnz
sub
pop
outsb
add
add
add
cmc
testl
jmp
in
jecxz
dec
pop
imul
xor
in
pop
push
sbb
clc
jb
insb
or
add
adc
mov
icebp
dec
stc
in
sub
hlt
push
pop
push
push
je
push
pop
sub
jecxz
inc
gs
sub
mov
pop
or
loopne
push
data16
push
or
in
movsb
jb
cmpsl
jge
cmpsl
test
out
data16
lock
ja
shufps
pop
clc
fsts
in
push
jbe
outsb
ja
data16
imull
push
imul
jbe
ljmp
divl
pop
gs
pop
inc
test
insb
mov
test
mov
xchg
gs
jae
xchg
mov
rcll
lret
jae
lea
orb
scas
mov
push
inc
cmc
fldt
mov
mov
clc
jae
inc
enter
pushf
mov
pop
lock
or
jns
jne
mov
stos
loope
rorl
push
xchg
cmpsl
sub
or
repz
pop
mov
mov
insb
sbb
mov
inc
nop
sub
and
jecxz
or
repnz
or
daa
and
jmp
xchg
inc
fcomps
mov
fwait
mov
and
repz
adc
push
push
xor
mov
enter
std
lods
sub
or
hlt
mov
lods
fmuls
loope
or
lahf
push
outsl
mov
push
sub
insb
jae
filds
and
mov
jmp
cli
xchg
xor
jae
je
scas
pop
rcll
test
fdivrl
dec
ss
inc
into
mov
sub
hlt
pop
fwait
mov
mov
push
mov
sbb
outsl
mov
push
lock
jg
inc
push
dec
pop
movsl
push
mov
xchg
insb
stos
orl
roll
movsb
sbb
push
pop
add
fmulp
inc
mov
movsb
mov
repz
jl
mov
xchg
nop
stos
lock
int
sub
jecxz
mov
loope
lea
rcll
mov
test
lods
ficoms
bound
dec
arpl
xchg
pusha
lods
xlat
pop
pop
jbe
xchg
test
jae
mov
imul
repnz
push
movsb
mov
sub
sahf
sub
mov
jl
mov
jg
pop
roll
popf
stos
pop
add
orb
add
in
push
sbb
add
mov
stos
loope
mov
mov
xchg
arpl
lds
lret
insb
mov
fildll
sbb
enter
outsb
arpl
cmp
sub
into
xor
imul
popa
jbe
fisubl
pop
fists
xor
movsl
lret
mov
adc
popf
sarl
push
adc
data16
outsb
cmp
movsl
xchg
sarl
sbb
jle
xchg
movsl
std
fcmovnu
shll
outsb
inc
jns
jg
roll
push
roll
insb
ret
mov
xor
mov
cli
sbb
shrl
lahf
outsb
icebp
mov
push
xor
bound
pop
push
mov
mov
cmc
enter
stos
xchg
xchg
enter
adc
fstpl
or
jmp
enter
mov
sbb
mov
jb
insb
rclb
shrl
arpl
outsl
pop
popa
push
mov
push
in
jo
insl
pop
jl
in
mov
push
mov
mov
in
in
lcall
outsl
jns
lock
xlat
mov
mov
insb
and
pusha
inc
js
into
sbb
xor
imul
mov
pop
mov
arpl
rcrl
xchg
das
in
std
jb
fnstenv
cmp
in
sub
push
adc
test
std
and
xchg
lret
inc
scas
dec
in
insb
jb
sbb
sub
in
push
std
jge
mov
sub
int
xor
inc
push
adc
lret
and
fwait
scas
add
lock
dec
pop
test
or
in
xchg
out
outsl
in
arpl
cmpsl
out
data16
fsts
jecxz
loop
loop
jecxz
inc
mov
jno
pop
shl
dec
lret
dec
xchg
push
mov
out
xchg
jo
nop
jno
cmc
xchg
enter
mov
mov
xchg
loope
aaa
pop
gs
or
jae
pop
push
sub
dec
mov
lock
pop
sub
fisubl
or
fcomi
xchg
das
sbb
jae
sub
pop
test
adc
mov
cli
mov
les
testl
inc
adc
xor
mov
jno
adc
and
adc
pop
or
sbb
loop
fisubrl
pop
xor
sub
xor
sub
xor
or
int3
dec
das
mov
stos
sub
jae
sub
pop
imul
and
mov
inc
mov
push
test
test
pop
mov
imul
outsl
inc
ds
mov
iret
insb
adc
sub
push
ficomps
and
pop
mov
mov
scas
les
adc
in
in
repz
or
inc
dec
jnp
cmp
fwait
mov
dec
rol
xchg
adc
lods
hlt
adc
xlat
adc
and
xor
int3
pop
add
add
add
pop
daa
mov
lods
lret
callw
mov
dec
insb
sbb
nop
stos
adc
jb
sbb
movsl
int3
daa
add
scas
and
or
cli
push
fucomip
inc
daa
adc
dec
popa
test
mov
cmp
inc
xchg
testl
push
mov
jmp
sub
sbb
dec
xor
imul
das
jb
push
mov
rol
xchg
sbb
aas
push
mov
mov
test
imul
push
mov
or
mov
pop
cmp
and
int
mov
sbb
jb
xchg
fstpl
lods
sahf
pusha
js
ficoml
test
mov
loopne
fsubr
cmp
repz
xchg
ret
or
jnp
das
mov
mov
pusha
xchg
sahf
jg
push
push
ds
adc
sbb
clc
loop
ret
ljmp
loop
loopne
push
xchg
movsb
js
jp
bound
cmp
in
sub
sbb
ficomps
cmpsl
test
jb
psllq
lcall
movsl
cmp
push
loop
lret
inc
int
adc
inc
adc
mov
inc
jle
xor
decb
stos
inc
or
in
or
icebp
test
dec
test
fs
movsb
inc
xchg
and
pop
shrl
or
sbb
mov
pop
sub
xchg
adc
cmpsb
sarl
mov
and
jb
loopne
jae
mov
sbb
lods
int3
adc
stc
sarl
movsb
rclb
inc
loopne
loopne
mov
jne
add
js
pusha
mov
sbb
aad
sbb
mov
push
fwait
push
cwtl
int3
xchg
pop
iret
lods
scas
test
shlb
lret
and
and
and
jbe
or
stc
lods
int3
adc
stc
sbb
xor
shrb
sarl
pop
sarl
test
sbb
gs
adc
jg
mov
iret
notb
insb
cmp
iret
push
push
inc
jb
rolb
sbb
arpl
insl
jb
pop
mov
cmp
aaa
pop
dec
jbe
mov
sbb
mov
addr16
arpl
mov
mull
sub
fdivrl
loopne
jno
dec
enter
push
dec
jno
cltd
push
lea
add
adc
pop
sub
or
ss
movsl
je
push
cmpsb
push
inc
jne
mov
mov
clc
xchg
lcall
sbb
or
int
in
and
das
cmp
mov
mov
jp
out
insl
jns
notb
pop
outsb
leave
les
andb
and
gs
cltd
out
cs
popf
out
mov
in
or
mov
ljmp
cli
hlt
in
sub
imul
mov
mov
dec
shll
andl
sbb
packsswb
sbb
mov
push
sub
les
cld
insl
divb
cmp
adc
mov
cmc
in
inc
sbb
pop
inc
ljmp
ds
dec
jne
stos
dec
xor
dec
sbb
nop
addr16
mov
jge
imul
xchg
incb
fisubrs
ret
fwait
jbe
shll
inc
divl
xchg
xchg
test
jnp
jo
jb
shrb
cmp
arpl
inc
mov
push
movsb
dec
sbb
jge
xchg
jge
test
sti
pusha
mov
popa
outsb
xchg
mov
jbe
inc
mov
lds
ss
xchg
and
jp
outsl
fidivl
xchg
out
lcall
mov
cltd
sub
jne
aam
scas
test
jne
sbb
lahf
lods
addb
cmp
and
out
std
jecxz
jne
rol
mov
ljmp
sbb
je
dec
inc
add
pop
pop
andl
testb
push
pop
pop
arpl
ja
aaa
push
lret
in
mov
adc
fs
cmpsl
dec
xor
xor
imul
lret
mov
mov
xchg
add
test
push
push
push
push
xchg
jne
sub
sub
push
mov
repnz
mov
int3
push
cmp
dec
fs
push
hlt
mov
mov
int
xchg
out
outsl
and
mov
jno
jle
outsl
xor
gs
outsl
inc
addl
mov
stos
daa
jne
out
xchg
nop
ret
mov
call
test
fistl
or
jne
inc
out
cmp
es
push
adc
in
lods
cmp
outsb
push
sarb
adc
mov
mov
lcall
or
adc
loop
cmc
ljmp
pusha
inc
add
jne
out
jecxz
fcmovnbe
mov
fxch
mov
cltd
xchg
mov
jmp
adc
sar
outsb
xchg
dec
add
jb
lods
jl
faddp
stos
or
sti
movsl
xchg
enter
mov
sahf
sub
lret
push
call
aad
adc
or
enter
jne
jge
stos
xchg
jne
mov
xorl
cli
push
dec
jnp
into
loopne
sahf
loope
cmpsb
nop
dec
mov
xor
lret
stos
fnstsw
push
mov
xchg
or
lret
mov
cmpsl
mov
cmpsb
lea
sahf
jb
lods
xchg
sbbl
outsb
mov
fimull
adc
mov
mov
jg
jecxz
popf
ret
fisubl
int
inc
mov
addr16
jns
xchg
stos
movsl
mov
shrd
mov
cmpsb
mov
inc
sub
outsl
lea
mov
inc
js
cmp
scas
inc
add
lea
inc
jle
ljmp
xchg
stos
add
xchg
pop
aas
mov
jp
cmpb
or
outsl
nop
cmc
movsb
push
mov
and
jns
ja
xchg
js
negl
outsl
xorb
jl
jnp
jns
ja
nop
jb
addb
xchg
sub
adc
jg
sub
add
es
sub
shlb
jne
out
jo
in
lods
xor
jno
shl
xor
loopne
je
xor
test
popf
lods
add
shrb
je
sub
shll
je
popa
outsb
xor
xlat
test
insl
jno
ficoml
ja
inc
add
es
jb
xor
fidivs
lock
jno
sti
les
inc
cld
jne
xchg
daa
push
dec
push
or
test
xor
xchg
lock
sub
and
jne
fmuls
fcompl
lds
pop
xor
repnz
pop
das
out
inc
mov
jnp
movsl
push
and
mov
outsl
push
xor
or
jne
xchg
imul
subl
dec
in
push
lods
pop
xor
test
mov
out
imul
shl
xchg
jge
outsl
push
sub
add
in
data16
jb
pop
pusha
leave
cltd
subl
pusha
stos
testl
arpl
pusha
test
pop
mov
and
mov
loope
mov
loopne
mov
fnstenv
dec
stos
loop
mov
in
mov
xchg
les
xcrypt-ecb
cmpsl
dec
mov
fnstcw
dec
mov
in
rcl
mov
out
rolb
cmpsl
rcr
cmpsb
cli
daa
fldl
dec
in
out
in
loop
mov
fmull
into
push
fisttps
xchg
mov
sbb
xchg
cmpsb
scas
mov
lds
sbb
ror
sti
mov
fists
sahf
addb
mov
add
sarl
mov
lcall
popf
dec
mov
daa
pop
and
push
adcb
adc
in
adc
add
sbb
mov
xchg
ja
xor
jae
jno
insl
mov
push
xor
jae
jno
insl
mov
xor
jae
jno
insl
in
in
push
repz
jae
jno
insl
or
push
adc
jae
jno
insl
es
sub
lret
cld
outsb
sahf
div
pop
repnz
xor
inc
inc
jbe
add
cmp
pop
ds
pushaw
inc
xchg
pop
xor
xor
fisubl
aam
jge
sbb
repnz
popa
sarb
pop
pop
xor
pop
cmp
cmp
es
or
dec
aam
test
dec
jne
cmp
mov
push
jne
jno
push
into
or
xor
ss
and
lock
fs
jo
sub
bound
aam
sub
inc
and
jne
pop
nop
push
lods
fistl
jne
sarb
scas
cmc
outsl
lds
adc
hlt
push
jb
and
je
popf
fistl
icebp
adcl
adc
outsb
dec
insb
call
gs
mov
sub
dec
aad
aam
xor
fisttpl
int
pop
popa
insl
incb
mov
jmp
sarb
push
pop
fdiv
jmp
subl
mov
or
pop
cmc
jo
adc
xchg
or
mov
jne
clc
scas
mov
cmp
test
dec
mov
jne
popf
outsb
dec
pushf
insl
inc
lcall
xchg
inc
jne
gs
scas
arpl
pop
cmp
cmp
pop
xor
pop
cmp
push
xor
jne
mov
xor
aaa
push
mov
mov
and
shrb
mov
cld
ret
and
mov
clc
mov
mov
hlt
ljmp
std
mov
rorb
lahf
stos
ret
sti
jmp
or
xchg
lcall
insl
ret
push
into
xor
jae
jno
insl
icebp
notl
xor
dec
rcll
sub
outsb
in
jg
cli
icebp
out
out
in
xchg
fs
push
outsl
in
out
pusha
insb
insb
and
add
mov
dec
cmpsl
je
bnd
dec
inc
mov
inc
xor
aad
outsb
popa
jne
dec
inc
inc
pop
pop
dec
xor
enter
push
gs
jne
xor
mov
je
das
xor
xchg
push
sub
push
push
push
jb
mov
mov
jo
popa
imul
xchg
nop
enter
jae
lock
leave
dec
cmp
in
out
adc
scas
cmp
cli
jno
fimuls
loopne
ljmp
dec
cmp
inc
and
aam
inc
ror
jge
sbb
inc
in
xor
jne
aam
mov
add
test
leave
test
mov
divl
repz
cmpsb
mov
cmpsl
or
push
add
mov
pop
fucomi
fdivl
rcl
cld
in
in
outsb
hlt
out
and
bound
mov
lea
pop
add
sbb
or
movlhps
sbb
adc
sbb
sbb
push
mov
pop
jne
dec
pop
cmp
negb
cmp
cmp
pusha
insl
scas
imul
out
outsb
jae
push
jb
jo
aaa
je
stos
outsl
jge
mov
push
cmp
add
std
std
jo
outsb
testb
push
jb
fisubrl
lock
pop
loope
jne
shll
std
imul
pop
addr16
push
int3
mov
out
pusha
dec
lret
test
lds
aam
lods
aas
rcrb
rcrb
push
xor
push
das
lds
pop
mov
and
sub
dec
jne
dec
and
sbb
adc
mov
pop
inc
or
je
cltd
xor
xchg
sub
or
pop
xor
hlt
jns
mov
push
pusha
fs
icebp
cmp
jmp
pop
jno
out
out
xor
push
arpl
in
pop
sbb
jb
dec
push
jmp
je
ss
push
popa
int3
icebp
mov
lea
sbb
sbb
out
std
jne
sub
cmp
insb
inc
and
aas
inc
push
jl
and
jne
movsb
xor
inc
dec
push
sahf
push
daa
movsl
das
xor
stos
inc
dec
sub
in
sub
insl
and
jne
lds
inc
outsb
pop
clc
sub
pop
jne
imul
sbb
add
outsl
push
or
out
jecxz
inc
in
js
int
hlt
ds
std
insb
pusha
mov
mov
les
outsl
aad
in
mov
sub
not
addl
push
sub
in
daa
ficoml
add
ss
loopne
jno
dec
pop
cmp
fidivrl
pushf
cld
call
mov
insl
or
and
xor
jae
cmpsl
rcrl
jae
cmp
adcb
dec
fs
mov
shll
movsl
push
sbb
fldl
fidivrs
lahf
mov
cltd
jecxz
adc
je
pop
push
xchg
faddp
inc
jbe
ret
stos
scas
xor
mov
jo
pop
cmp
jbe
cli
add
lea
es
dec
dec
sbb
push
cmp
dec
cs
pop
adc
fisubrs
jb
je
insl
xchg
arpl
into
adc
and
js
and
fmulp
dec
lahf
jge
roll
mov
add
lea
xor
int3
or
pushf
ficomps
lahf
xchg
stos
ret
scas
xor
fwait
pop
push
aaa
pushl
xchg
shll
lret
fidivs
jb
cs
sub
aaa
fidivs
out
pop
mov
push
push
push
push
in
dec
mulb
sub
xor
enter
push
xor
test
insl
lods
aam
jp
and
mov
in
xchg
xor
dec
mov
out
sub
cmp
jl
je
loopne
call
and
mov
pop
inc
dec
out
cltd
in
push
out
xor
jg
lods
mov
scas
nop
mov
fisttpll
fsubs
loope
out
dec
test
pusha
test
cmpsb
pop
mov
inc
jle
jle
mov
inc
insb
jmp
int3
out
xor
ljmp
push
dec
nop
mov
jb
xlat
mov
jae
cli
rorl
lcall
outsl
je
inc
fisttpl
adc
jb
test
cmp
or
int
xor
cmp
clc
pushf
movsl
push
mov
clc
and
insb
add
or
je
movb
call
and
jno
cmc
jns
mov
scas
mov
xor
mov
arpl
jae
xor
je
lods
mov
cmp
scas
fdivrl
test
push
inc
mov
movsb
add
cmpsl
inc
and
cmp
push
scas
outsb
je
scas
pop
pop
pop
daa
or
push
push
jns
inc
cmpsl
loopne
jns
shl
pop
lahf
das
jno
sbb
lock
mov
popf
addr16
daa
lcall
and
dec
and
jno
cli
mov
mov
pop
popa
cmp
xor
movsb
xchg
mov
cmp
cwtl
gs
mov
add
cmpsl
insl
insl
inc
push
insb
push
push
inc
pop
push
popa
jo
testb
in
fchs
cmpsl
jge
insl
xchg
jns
fnstenv
in
dec
lret
adc
cmp
ds
je
or
dec
dec
les
out
cmp
lea
stos
push
out
pop
insl
insb
pop
imul
pop
popa
pop
pop
jno
pop
arpl
jno
push
or
add
sarb
repz
xchg
jno
test
jno
enter
inc
pop
xor
cmp
push
sbb
pop
mov
adc
mov
sub
xchg
xor
popl
push
aaa
xchg
or
jb
insl
pop
push
ja
bound
pop
pop
push
dec
jno
icebp
pop
insl
push
push
dec
dec
out
hlt
pop
iret
jno
lea
cmpsl
loop
sti
fidivrl
popa
lds
mov
jno
fxch
cmp
xor
xor
popa
pop
cmp
es
xor
sub
cmp
stos
fsts
add
push
push
xor
inc
cmp
or
jb
push
dec
cmp
xchg
jno
shrb
push
push
xchg
and
jno
scas
lcall
gs
add
sub
xor
hlt
insb
inc
and
dec
sub
inc
sbb
sbb
adc
pop
xor
insl
xor
mov
xor
add
out
push
hlt
and
jne
test
sbb
pop
popa
imul
sub
pop
pop
xchg
inc
and
adc
hlt
icebp
sbb
cmc
adc
or
movsl
cmp
hlt
mov
and
hlt
pop
das
xor
popa
cmp
xchg
jae
jae
sbb
jno
sbb
jno
dec
insb
pop
pop
dec
imul
pop
add
inc
imul
push
jno
or
or
insl
sbb
insl
sub
test
hlt
dec
int
pusha
xor
subl
push
or
sbb
inc
xor
push
clc
or
insl
adc
hlt
add
jno
test
insl
iret
mov
aam
dec
gs
mov
stos
dec
jne,pn
das
sbb
repz
hlt
ds
test
xor
in
imul
xor
imul
push
or
cld
xor
hlt
sbb
cmp
cmp
lret
loop
andl
insl
cltd
xor
pop
push
scas
sbb
push
stos
and
or
pop
inc
pop
add
gs
dec
sub
sub
cs
push
sub
and
hlt
out
inc
bound
jo
or
cld
jns
or
push
insl
pop
popa
xor
sbb
mov
rolb
fimuls
je
call
xor
push
insl
mov
sbb
push
cmp
jae
or
mov
mul
xchg
in
repnz
aas
sbb
fdivp
sbb
xchg
in
xor
stos
cmpsl
imul
pop
jmp
fnstenv
pop
pop
and
inc
pop
hlt
sbb
lock
mov
pop
cmpsl
enter
ljmp
out
push
testl
mov
pop
inc
mov
cs
fs
dec
inc
cmc
int
xor
dec
sub
xchg
imul
jns
pop
inc
pop
clc
cmp
in
jbe
mov
sti
lahf
scas
in
add
jno
push
pop
push
pop
fistps
ljmp
in
fisttpl
call
inc
add
insl
add
jno
loopne
and
or
sub
pop
cmp
nop
icebp
int
hlt
cmp
sub
xor
icebp
fidivs
lret
jno
jno
insl
and
cmp
hlt
lahf
shrb
insb
cmp
insl
xchg
sub
movsl
jmp
addb
insl
sub
popf
in
lahf
insl
pop
in
movsl
adc
aas
sub
clc
arpl
xchg
into
jne
imul
addr16
js,pt
pushf
insl
push
scas
mov
hlt
mov
cltd
clc
pop
shlb
addb
je,pn
lock
adc
in
xchg
in
outsb
pop
mov
out
xchg
in
jb
call
xchg
test
mov
add
test
xor
pop
jbe
adc
sub
imul
sbb
or
push
pop
lea
and
scas
stos
xchg
mov
pop
in
adc
sub
rcrb
aad
mov
mov
das
je
mov
adc
dec
ja
jg
inc
push
gs
jae
in
cmp
push
movb
jo
imul
jmp
testb
andl
jae
outsb
mov
dec
mov
cmp
inc
mov
in
mov
push
jns
adc
rcrb
push
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
sbb
and
mov
and
mov
mov
jne
mov
lahf
mov
jno
aam
jno
pop
test
sbb
xor
outsl
adc
cmp
insl
xchg
push
int
jno
mov
xor
adc
nop
jnp
int
pop
subl
jae
jno
push
or
jae
mov
dec
cmp
movsb
xor
outsb
adc
jns
jnp
or
mov
sub
jae
stos
inc
int
jno
ljmp
lds
jae
jno
dec
lds
jge
lea
or
adc
inc
dec
jno
mov
jno
and
shll
xor
and
sbb
sub
jle
push
inc
ret
dec
gs
dec
cltd
jno
sarb
pop
icebp
jno
cs
xor
jno
push
adc
adc
jnp
mov
xchg
inc
pop
orb
cltd
inc
scas
jae
lea
out
adc
in
scas
mov
andl
pop
scas
xor
and
mov
jne
insl
test
pop
dec
fwait
mov
imul
imul
mov
xchg
mov
mov
jno
dec
jne
leave
xor
lahf
push
jne
loopne
pusha
jno
sbb
jne
push
jne
xchg
inc
fcompl
fwait
sub
hlt
dec
mov
dec
shlb
popa
inc
jne
push
xchg
loope
mov
jne
and
popf
movsb
dec
pop
jno
aaa
jne
gs
jno
push
gs
mov
xchg
dec
pop
or
jno
lret
shlb
loopne
jno
and
std
cmp
or
xor
jno
imul
sub
or
xchg
jno
sbb
popa
shlb
loopne
call
jno
fdivl
and
jno
shlb
or
lret
sbb
test
dec
pop
xchg
mov
ljmp
popf
xchg
and
jno
loope
dec
jns
jno
enter
xchg
mov
ljmp
and
xor
movsl
jno
es
jno
mov
dec
xor
lahf
jl
mov
push
fs
outsb
lock
adc
inc
pop
out
add
out
xchg
icebp
repz
insl
rolb
sub
or
inc
jno
xchg
push
data16
scas
clc
mov
jno
rep
lea
and
xchg
aad
insl
cmp
lea
pop
mov
divl
jno
pop
lea
jle
cmc
mov
arpl
jae
push
hlt
mov
xchg
dec
mov
das
mov
lock
stos
js
and
sahf
dec
and
hlt
popa
xchg
les
out
sbb
push
sub
out
rolb
mov
jge
pop
les
xlat
in
xchg
push
xchg
pop
fisttpl
insb
jnp
divb
std
mov
gs
negl
adc
inc
outsl
pop
dec
aaa
outsl
adc
stos
adc
adc
packsswb
push
or
push
or
or
in
pop
arpl
push
add
add
add
xor
in
jmp
push
std
sub
clc
xor
imul
mull
push
cmc
es
mov
je
jae
xor
jg
insb
fwait
jo
int
ljmp
xor
fs
push
mov
imul
lds
pop
arpl
pop
jae
pop
jae
push
jae
push
jae
push
outsl
cltd
insb
push
lret
push
inc
or
dec
jae
dec
outsl
xchg
insb
push
dec
push
testl
dec
push
push
dec
or
outsl
xchg
xor
pushf
outsb
arpl
dec
mov
pop
enter
insl
inc
data16
xlat
or
sub
push
push
das
je
ja
lahf
dec
mov
das
test
rep
imul
push
adc
pop
int
filds
jp
add
mov
or
popa
inc
sub
xchg
adc
cmp
jae
dec
je
cli
outsl
je
insb
out
loope
sti
gs
int3
inc
mov
dec
cmc
mov
inc
mov
insl
push
int
orl
je
and
mov
mov
mov
jo
shlb
clc
dec
push
mov
mov
pusha
pusha
rcrl
sub
cmp
sbb
dec
addr16
adc
push
push
imul
test
dec
into
test
mov
shl
jecxz
push
ja
pop
jne
lods
cmpsl
mov
into
mov
mov
mov
fs
inc
dec
adc
mov
shr
xchg
jmp
sub
mov
rcrl
ret
stos
mov
cmp
dec
scas
mov
mov
mulb
inc
inc
xchg
sbb
rcl
xor
loop
cs
xchg
adc
sub
je
lea
bound
dec
dec
stos
cmpsl
clc
rorl
inc
in
dec
push
jge
cs
in
jb
inc
inc
inc
pushl
inc
cmpsb
fsubp
dec
push
pusha
adcb
fcomps
add
inc
or
inc
inc
push
push
inc
xor
mov
in
inc
pop
testl
fiadds
iret
mov
mov
lcall
shr
xor
mov
mov
data16
les
pusha
xor
mov
les
ror
in
aad
xor
mov
leave
movsl
jge
mov
pop
mov
in
mov
ret
shrl
movsl
and
js
test
or
pop
ljmp
pop
dec
mov
insl
lock
mov
stos
push
xchg
test
pop
out
mov
push
mov
adc
and
ror
xchg
adc
push
jno
pop
add
or
and
sarb
push
imul
jae
cmp
addl
cs
test
dec
xor
pop
icebp
push
cmp
push
jge
movsl
jae
cmpsb
jb
outsl
leave
mov
je
addr16
cmp
jno
inc
inc
jae
cld
add
inc
cli
pop
jno
jb
mov
movsb
aam
mov
jno
lods
mov
loopne
inc
inc
das
insb
or
sbbl
cmc
ljmp
cmp
sub
push
shll
sbb
lods
xor
and
sti
lock
sub
and
es
popf
mov
das
out
ja
insl
push
jns
push
jge
inc
test
jg
mov
cmp
inc
sub
sbb
jge
call
movsl
dec
dec
out
sbb
insb
sub
or
push
int3
dec
sahf
jmp
inc
jecxz
pop
inc
loopne
sahf
in
cltd
dec
add
cs
inc
es
mov
mov
adc
xchg
stos
jge
pop
xchg
in
in
pop
out
push
push
jbe
adc
clc
movsl
push
movsb
gs
xchg
inc
popa
xor
scas
cmpl
mov
mov
cmp
push
pusha
fcoml
icebp
cli
imul
jbe
pop
loope,pn
insb
clc
cmp
ljmp
aas
les
or
arpl
in
jae
cmpsl
sub
or
sbb
sub
push
shrl
jmp
stos
jae
mov
outsb
mov
sub
aad
mov
lods
cmpsb
dec
jnp
mov
sub
and
mov
push
push
callw
popa
mov
xchg
in
test
scas
movsb
je
orl
push
dec
nop
cli
jge
pop
mov
andl
dec
push
test
push
mov
andl
aam
sub
cmp
push
subl
pushf
mov
stos
pushf
stos
jl
sub
adcb
das
xchg
jnp
push
icebp
out
push
cmpsb
lea
les
inc
in
lret
in
xchg
dec
dec
out
and
fidivl
cli
nop
xchg
cmpsb
jne
mov
jg
imul
jle
mov
repz
fnstcw
in
popa
push
lods
shll
jae
pop
call
daa
jb
dec
cmpsl
xchg
lods
pop
mov
jno
mov
xchg
jmp
mov
cmp
or
sbb
mov
fadd
cmp
jnp
ljmp
pop
push
sbb
gs
movsl
fsubrp
sar
add
dec
mov
jg
mov
mov
mov
xchg
push
mov
inc
in
pop
push
sti
ss
insl
mul
popa
sub
sub
scas
lock
in
push
loop
xchg
dec
sub
ret
inc
insb
cmp
add
orb
mov
popa
arpl
jbe
mov
mov
icebp
cld
sbb
xor
je
outsl
subl
sbb
lods
pop
test
divb
outsb
cmc
mov
clc
xor
dec
icebp
mov
xorb
inc
jae
shlb
pushf
andl
in
aaa
mull
into
pop
xor
out
mov
xchg
ret
lahf
cmpsl
sbb
in
xchg
gs
mov
add
mov
sbb
inc
sarl
mov
mov
imul
lahf
fcompl
lods
push
stos
add
pop
ror
imul
sahf
mov
mov
inc
mov
lahf
mov
shrb
mov
fstpl
inc
lods
mov
cld
in
scas
je
mov
mov
sar
bound
sbb
inc
imul
shlb
iret
mov
fwait
inc
push
xchg
in
cmpsb
jp
into
stos
lock
mov
sub
and
sti
repz
testl
pop
mov
xchg
stos
inc
mov
push
dec
mov
xor
movsl
mov
xchg
mov
cltd
mov
pushf
test
pushf
mov
sbb
mov
pop
sbb
cmp
ror
popf
and
pop
sti
jge
loop
mov
mov
mov
mov
cltd
arpl
dec
cmpsl
rcrl
lods
scas
arpl
test
addr16
cmpsb
xchg
outsl
movsb
aam
xchg
call
cmp
adc
roll
or
mov
repnz
cmp
lea
xor
lds
cmpsl
push
lret
push
outsb
mov
ss
jmp
mov
lods
cmp
xlat
xchg
ljmp
inc
push
in
jae
xchg
ret
data16
fdivrl
out
push
sub
popa
push
loope,pn
push
mov
cmp
dec
out
and
sbb
mov
pop
mov
cld
and
mov
sbb
je
cmpsb
mov
mov
rcrl
inc
xchg
fsubrs
xor
add
cli
inc
je
xor
adc
jecxz
jns
xor
jb
mov
xor
mov
xor
shlb
or
add
xchg
cmpsl
mov
int
ret
sahf
push
loop
mov
pop
shll
fimuls
push
xor
or
xorb
cmp
push
fidivrs
and
ljmp
mov
rcl
ret
das
test
fwait
scas
inc
push
arpl
mov
jmp
xor
fildll
sub
dec
and
aas
aad
into
push
bsr
loope
push
dec
aas
aam
lods
pop
insb
mov
das
or
std
rcll
sarl
cmp
mov
mov
clc
mov
jge
jae
je
xlat
popa
daa
sub
cltd
pop
andb
xor
adc
pop
stos
shlb
sbb
jmp
inc
insb
insb
inc
outsb
jb
imul
cwtl
gs
sub
sub
cs
add
rcrl
adc
inc
js
scas
rcl
fidivs
adc
lcall
mov
pop
cli
inc
insl
loop
mov
sub
jle
mov
push
imul
stc
inc
in
push
jno
jno
jae
lret
adc
lods
push
jge
push
push
out
outsl
pop
mov
mov
mov
mov
xor
add
push
fstps
xchg
mov
and
outsb
dec
mov
data16
stos
cmpsl
test
add
outsb
pushf
jmp
pushl
js
adc
pop
in
pop
push
aam
loopne
fdivr
aaa
js
leave
cs
inc
aaa
test
iret
xor
pop
mov
jmp
xorl
decl
mov
in
lahf
orb
dec
push
jecxz
lods
aas
push
in
pop
sbb
adc
pop
xor
addr16
sub
cmpsl
xchg
and
mov
outsb
jecxz
int
and
cmpsb
int
out
gs
mov
cmpsb
dec
negb
xchg
outsl
sub
iret
add
les
xchg
nop
pop
lea
push
xor
jae
movsb
cltd
jbe
xchg
xchg
cs
outsl
push
xor
push
and
sbb
outsb
out
xorb
cmpsl
aad
outsl
xor
dec
in
pop
outsb
mov
cli
addr16
xor
imull
add
inc
push
stc
call
je
cmp
hlt
push
fldl
dec
jno
mov
cli
or
cld
adc
and
inc
js
test
shrl
dec
fldcw
xor
jno
and
lock
cld
gs
hlt
enter
loope
divb
ret
xor
gs
sti
push
sti
ret
ljmp
inc
jl,pn
fs
je
mov
imul
cld
adc
mov
ret
jo
or
repnz
loopne
push
adc
pushf
push
fs
jae
aaa
xor
in
icebp
push
xor
inc
popa
stos
mov
test
inc
dec
push
hlt
inc
and
in
add
mov
dec
or
stc
inc
cs
pop
ja
out
hlt
shlb
shlb
cld
adc
fsubrl
push
push
push
dec
add
pop
ret
push
push
aad
dec
pop
xor
mov
xor
je
pop
in
inc
loopne
pusha
pop
mov
aam
jp
cmp
insl
arpl
xor
pop
pop
dec
hlt
lods
faddl
jns
pop
hlt
insl
test
test
in
xchg
mov
js
imul
lods
incl
jne
mov
xchg
incl
mov
xorl
pop
lock
inc
outsb
pop
xor
jbe
popa
jl
fs
xorb
adc
xchg
xor
mov
pusha
pop
fs
push
std
and
lds
pop
mov
jecxz
test
stos
lds
loopne
in
test
jge
cld
in
pop
xchg
test
mov
jg
pop
and
xchg
jge
jne
lods
lods
bound
jnp
jne
jae
out
fldenv
test
loopne
pop
lods
jno
xor
hlt
xor
cld
push
dec
in
jae
insl
js
jge
xor
fsubrl
sbb
jae
cmp
gs
jns
jne
jb
clc
gs
jl
sub
out
and
aad
xchg
test
inc
adc
mov
insl
inc
jo
adc
inc
mov
movsb
mov
jne
jno
je
push
push
inc
pop
movsl
aam
pop
enter
cmpsl
hlt
icebp
test
or
pop
dec
adc
bound
enter
shlb
pop
dec
and
gs
mov
hlt
push
jo
add
mov
aad
lods
and
test
pop
jge
and
movsl
xchg
mov
jo
in
repnz
xchg
push
ss
outsl
lods
jge
xor
in
lock
inc
aaa
bound
hlt
test
test
sbb
pop
push
pop
outsb
andl
in
test
adc
jmp
es
jne
aad
push
mov
test
clc
push
in
test
stos
mov
nop
cmp
lock
insl
aaa
pop
adc
aad
jge
xor
xchg
xor
inc
cld
lea
hlt
and
mov
or
jge
mov
ljmp
jb
insl
mov
or
mov
push
ss
insb
aaa
hlt
test
mov
inc
cs
lods
insl
in
das
jne
shrl
int
pop
inc
add
shl
fs
xor
inc
xor
or
cmp
jns
jmp
imulb
adc
jge
in
mov
cmp
sub
vandnps
insl
add
xor
mov
pop
fsubl
push
cli
into
hlt
mov
or
pop
push
inc
jns
les
mov
sti
fsubrl
ss
insl
lds
jae
lds
divb
pop
push
stc
cmp
mov
test
insl
in
dec
fs
fcomps
jns
in
mov
add
xchg
cld
inc
repz
add
mov
jge
or
popf
xchg
or
data16
inc
xchg
xor
test
push
jp
mov
call
inc
xchg
imul
sub
xchg
push
adc
sub
push
xor
adc
out
in
cmpsb
push
loop
call
imul
in
sti
fiadds
in
pop
fs
pop
add
enter
shll
shrb
cmp
cs
test
mov
fcmovbe
imul
or
xor
push
imul
into
js
in
xor
stos
push
rcr
xchg
and
mov
rorb
mov
push
mov
dec
dec
movsl
scas
mov
jle
mov
mov
xor
xor
leave
inc
mov
test
sub
nop
push
cmp
gs
aam
mov
adc
mov
lret
push
mov
inc
and
test
bound
xor
push
xor
xor
sbb
mov
xor
sub
insb
and
lock
test
sbb
push
jle
add
adc
mov
inc
push
adc
hlt
inc
notb
inc
inc
adc
cmp
lock
sbb
xor
fsts
mov
imul
xchg
push
jp
mov
jns
mov
dec
inc
add
xor
mov
loope
xor
popa
mov
mov
dec
repnz
repnz
sbb
vshufpd
mov
in
inc
push
jmp
in
imul
push
ljmp
and
in
sub
cmp
xchg
fdivl
xor
hlt
lcall
mov
shlb
push
inc
enter
jle
outsl
popa
dec
inc
std
subb
or
lock
aam
adc
dec
mov
push
insl
gs
lods
pop
and
adc
insl
mov
jo
insl
insl
jmp
out
insb
or
aad
test
jno
adc
pop
push
jno
push
xor
pop
hlt
dec
inc
pop
je
fs
lds
out
call
in
add
in
gs
cld
dec
inc
cs
push
in
mov
push
pushf
fdivr
aad
daa
xor
xor
in
arpl
inc
xor
lea
pop
inc
out
clc
jae
movsl
pop
cmc
jno
inc
adc
loope
fst
in
sub
add
jecxz
sub
pop
popf
aad
rcrl
lds
das
jmp
or
xor
pop
icebp
scas
jne
or
dec
xchg
aaa
cwtl
adc
jge
xor
jecxz
jno
mov
lret
push
jne
insb
mov
add
or
sub
add
out
jmp
mov
aad
gs
add
inc
xor
aad
push
mov
bound
shlb
aad
cmp
mov
sub
fcoms
gs
in
mov
lods
lea
out
in
jl
pop
inc
out
icebp
xor
insl
push
sbbb
add
sbb
sub
add
pop
cmp
jno
pop
push
dec
outsl
jno
mov
outsb
fnsave
movsl
loop
fdiv
xchg
insl
sub
in
mov
pop
mov
in
rorb
insl
inc
in
xor
push
ljmp
ret
mov
stos
push
cmc
loopne
pop
ljmp
pop
aam
sub
sbb
push
lds
add
push
mov
test
cltd
pop
faddl
xchg
jge
test
cld
test
popf
xchg
gs
cmp
insb
cld
and
ljmp
test
in
mov
mov
sbb
lock
pusha
adc
lods
mov
jmp
gs
bound
xchg
xchg
jno
or
jne
push
test
cmp
xor
inc
jmp
mov
xor
movsl
lds
xor
lds
add
test
in
cli
xor
popf
add
insl
inc
xchg
inc
addb
faddl
inc
mov
inc
jno
adc
imul
cmp
jbe
insl
and
hlt
jmp
cltd
inc
mov
cmp
inc
push
dec
sbb
popf
in
fidivrs
xchg
popf
in
test
cmp
push
push
pushf
nop
or
mov
call
push
sbb
hlt
paddb
cmp
bound
aad
sub
in
test
mov
mov
xchg
leave
mov
inc
push
fnsave
pop
push
xchg
xor
pop
in
xor
jge
mov
and
nop
arpl
dec
cld
mov
inc
mov
gs
mov
lret
mov
js
aad
xor
hlt
jns
dec
in
in
movsl
push
jecxz
cld
gs
sub
cmp
dec
pop
cwtl
dec
dec
pop
sbb
pop
sub
cmp
xor
rolb
xor
push
loopne
pop
ret
daa
inc
loopne
leave
es
dec
pop
push
and
mov
mov
push
loopne
jno
dec
push
in
dec
pop
in
cs
sub
subl
in
push
dec
cmp
and
cmp
push
and
add
xor
gs
in
gs
mov
xor
adc
lds
xor
mov
fcmovnu
jne
mov
cmpsb
outsb
call
out
jecxz
mov
pop
cltd
jo
cmovb
adc
mov
hlt
jl
cmp
movsb
xchg
adc
mov
ss
pop
cmp
xchg
scas
sub
ds
je
stos
inc
mov
outsl
xor
xlat
cmp
ss
movsl
dec
mov
ret
adc
push
add
cs
cli
lock
jne
dec
push
mov
xchg
and
pop
lods
aaa
shlb
ss
rcrl
inc
in
push
xor
aas
aad
xor
pop
adc
sbb
cmp
push
in
push
in
shll
mov
jae
jno
push
add
roll
push
sub
push
pop
xchg
in
xchg
xor
insl
and
lock
das
xor
push
xor
inc
je
lds
shrb
pop
movsl
add
test
es
xor
and
inc
xor
ss
faddl
xlat
mov
xchg
lret
movsl
and
xchg
xor
mov
lock
and
dec
sub
lds
hlt
sbb
lea
xor
mov
test
mov
inc
pop
loop
sbb
rcll
add
mov
xor
and
neg
hlt
bound
aaa
mov
jb
push
push
push
xchg
add
jb
sub
fsubs
inc
pop
aaa
xor
ljmp
xor
mov
xor
jg
gs
cmp
roll
mov
gs
push
idivb
stc
mov
notb
dec
pop
in
xor
aas
imul
insl
xor
jmp
mov
sbb
pop
insb
push
arpl
sub
lcall
pop
in
push
push
dec
xor
in
push
arpl
popa
int3
in
in
outsl
lcall
pop
in
bound
xchg
cmp
inc
dec
in
push
dec
inc
ficoms
fstl
push
arpl
inc
sub
inc
sub
lds
insb
dec
sbb
arpl
push
aas
sub
aaa
xor
and
loopne
xor
in
hlt
push
push
fsts
jbe
js
xor
xchg
arpl
ja
jns
jge
test
xchg
mov
hlt
jno
hlt
leave
xor
and
sub
inc
rclb
fs
pop
push
sti
jns
adc
push
cmc
pop
lds
push
adc
divl
arpl
and
gs
cmp
xor
and
ds
xchg
or
call
mov
mov
out
mov
add
xchg
mov
test
xchg
jg
stos
push
sub
cmp
or
sbb
into
mov
push
mov
sti
cli
and
jne
lret
and
movsb
jne
inc
test
cmp
outsb
mov
andb
jbe
xor
sub
jne
out
mov
push
xchg
gs
dec
mov
push
xchg
bound
inc
xchg
aad
in
and
rclb
jecxz
and
push
push
insl
lods
cmp
inc
subl
scas
jle,pt
sub
xor
add
sub
mov
jne
push
xchg
popa
mov
lcall
fdivl
rcll
loopne
lret
jne
into
push
fistps
jae
inc
jne
cmpsl
aaa
ja
mov
jne
push
xor
jne
out
mov
cmc
xor
jne
jmp
xchg
arpl
inc
xchg
push
xchg
fs
dec
mov
rcll
loop
and
pop
xlat
pop
aam
in
and
or
sbb
cmp
outsl
scas
aas
jg
lods
cmp
jl
mov
sub
mov
mov
jne
icebp
xor
add
pop
jne
dec
pop
lahf
dec
mov
push
nop
pusha
mov
sbb
pmaxub
int3
or
jno
rclb
loope
lret
shlb
add
dec
xor
xorb
cmp
add
push
sub
inc
cmp
int
sub
inc
shl
rcl
sbb
jge
xor
jge
or
cmp
sbb
gs
faddp
add
cs
xchg
or
xlat
xor
xchg
inc
aad
sub
out
adc
sub
stos
aad
adc
push
xor
jae
push
mov
in
inc
hlt
in
pop
jae
add
mov
cmp
xchg
xchg
xchg
jb
xor
mov
gs
xchg
push
das
leave
dec
lea
push
cmp
dec
insl
mov
das
clc
and
or
fdiv
aad
pop
mov
idiv
jge
lahf
adc
add
jo
add
int
lds
movsl
mov
in
add
clc
or
xchg
es
xchg
inc
lock
pop
push
xor
inc
xor
mov
js
test
in
and
or
dec
movsl
mov
insl
push
ret
insl
aad
dec
pushf
in
stc
pop
push
push
add
jb
or
ss
cmp
and
dec
jne
push
pop
cltd
jge
ja
je
dec
lea
fs
add
cmp
in
movsl
movsl
fptan
push
push
aad
cmpsb
and
xchg
or
pop
leave
sbb
aaa
and
jge
sub
cmp
jmp
test
adc
push
sub
out
adc
fbld
push
xor
test
xor
xor
jae
arpl
lret
pop
sbb
iret
dec
lock
in
pop
or
dec
cltd
jmp
pop
roll
shl
push
in
loop
mov
push
mov
sbb
arpl
fstps
inc
xchg
movsb
mov
cmp
clc
mov
aad
xchg
gs
movsl
inc
jne
add
lods
dec
jne
or
popf
cmp
jno
xor
xchg
popa
loopne
mov
subl
leave
or
cmp
clc
jns
repnz
xchg
arpl
and
subl
stos
dec
jne
or
cmp
cli
jnp
out
das
scas
dec
jne
jg
aas
jne
jg
out
cmpsl
inc
jne
pop
xchg
pop
xchg
aaa
jne
divb
cmc
xor
push
jne
adc
fs
movsb
inc
jne
add
insb
in
sub
dec
jne
or
pop
fstpl
cmp
mov
xor
nop
pusha
loope
mov
subb
test
jne
or
cmp
stc
js
repz
xchg
and
subb
stos
dec
jne
or
cmp
sti
jp
out
cs
dec
jne
push
mov
push
sahf
jne,pt
jle
out
cmpsb
inc
jne
push
xchg
push
xchg
ss
mov
jne
hlt
mov
and
adc
jne
test
lock
and
mov
inc
add
subl
jne
popf
dec
or
jne
jge
sub
test
cltd
dec
or
mov
clc
jne
jns
xor
mov
and
in
push
adc
xchg
inc
add
les
and
mov
inc
add
subb
pop
sbb
fstpl
std
jne
jl
sub
test
sbb
cwtl
dec
or
mov
stc
jne
js
xor
mov
and
mov
inc
add
subl
scas
pop
pop
jne
lahf
dec
bswap
aas
decb
jg
jne
stos
pop
sbb
fwait
jne
or
mov
cli
mov
out
push
pop
xlat
xchg
jne
pop
movl
mov
and
mov
xchg
inc
add
xorb
out
scas
pop
push
fistps
mov
mov
jmp
pop
sbb
lcall
sti
mov
out
push
push
xchg
je
push
movb
gs
inc
xor
in
aad
mov
xchg
test
push
inc
xor
adc
cmc
in
aam
mov
xchg
test
jne
inc
xor
adc
repnz
rol
mov
xchg
xorl
push
inc
xor
adc
repz
rol
mov
xchg
xorb
push
inc
xor
adc
lock
rol
mov
xchg
xorl
and
add
loope
rol
mov
nop
subb
dec
aas
das
pop
paddd
fidivs
mov
outsb
pop
jne
ds
push
out
fbstp
mov
insl
pop
jne
cmp
in
fdivl
mov
insb
pop
jne
cmp
sbb
std
in
fnsave
mov
imul
cmp
sbb
cli
ljmp
mov
pop
jne
cmp
sbb
sti
jmp
jne
mov
imul
or
call
test
pop
jne
cmp
sbb
stc
jmp
test
mov
push
jne
aaa
daa
pop
pop
mul
xlat
jne
mov
xchg
xchg
push
jne
ss
push
mul
je
mov
xchg
xchg
inc
adc
gs
sub
push
cmp
inc
lea
and
fsubrs
and
cltd
xor
int
xor
subb
sub
je
dec
sub
gs
adc
xor
dec
xor
sub
and
or
mov
insb
xchg
test
das
xor
jno
xor
dec
fwait
insl
adc
sub
xor
push
and
xor
sub
xchg
sub
lret
and
and
or
jno
cmp
mov
lcall
mov
mov
cmp
inc
pop
in
add
lret
sub
stos
insw
adc
adc
xchg
das
cmp
cmp
inc
fs
push
dec
add
push
mov
adc
mov
push
xor
test
inc
mov
xor
xor
cmp
pushf
add
cwtl
cmp
cmp
or
js
add
fiadds
decl
addr16
mov
mov
jnp
jne
or
shlb
adc
inc
in
lcall
push
scas
mov
fisttps
sub
imulb
dec
mov
in
cmp
jne
push
lds
sub
xchg
xor
lock
mov
xchg
cwtl
or
xchg
subl
mov
int
adc
jl
js
jne
adc
sbb
pop
or
xor
data16
mov
jmp
cmp
gs
xchg
jne
adc
shll
mov
push
imul
int
inc
or
ret
xor
data16
leave
xchg
aad
inc
add
xchg
jne
cmpsb
push
movsb
jb
leave
inc
pushf
dec
cmp
xchg
and
xchg
sahf
jne
pop
adc
mov
add
ret
loope
jb
data16
dec
insl
jne
jo
ret
pushf
imul
inc
fs
or
mov
jne
movswl
xor
outsl
jne
lcall
jb
mov
test
mov
mov
inc
mov
lods
outsb
cld
inc
jl
shl
jne
insb
ficomps
addr16
mov
jne
or
or
jne
je
adc
adc
adc
pop
popf
inc
adc
daa
out
aad
mov
outsl
jnp
jne
je
mov
insl
repnz
jne
data16
mov
jmp
jne
mov
adc
dec
fwait
pusha
adc
call
jp
adc
sub
jmp
jne
xchg
inc
mov
imul
mov
movsb
sarl
lahf
mov
jne
pushf
pop
inc
das
in
push
enter
adc
xor
pop
jb
push
sub
jne
clc
push
and
dec
gs
imul
insb
mov
xchg
adc
addr16
xchg
pop
fsubrl
dec
push
and
jne
scas
pop
cmp
sbb
push
sbb
mov
push
repz
fstpt
imul
mov
hlt
fsubs
lcall
arpl
xchg
lock
aaa
or
push
cmpsb
addr16
fdivs
jecxz
mov
les
outsb
stc
xor
insl
jne
or
mov
jne
sbb
adc
push
adc
add
or
or
jne
mov
in
sbb
fwait
gs
pop
xchg
mov
out
fdivrl
addr16
mul
movsb
aam
jne
popf
cmp
test
push
mov
iret
cwtl
outsl
shlb
jne
ret
sub
sub
imul
sub
adc
mov
out
and
push
int
out
inc
std
jne
or
call
jne
ud1
mov
xchg
or
test
mov
inc
jne
jo
mov
mov
jne
loop
rorl
ret
into
jbe
mov
cmpsb
movsl
jne
jmp
pushf
dec
pop
xchg
ss
jne
fimull
adc
add
or
cmp
hlt
ss
addr16
push
outsb
pop
add
jne
repnz
mov
sti
cmp
mov
mov
clc
push
xchg
lcall
xchg
popf
test
ret
pop
repz
push
test
pop
mov
sbb
jg
pop
inc
push
mov
mov
testb
cmp
sbb
je
xor
adc
jge
jecxz
adc
mov
pop
cld
xchg
imul
mov
jno
daa
mov
jb
adc
push
jne
jle
adc
jne
lcall
jne
cltd
sbb
jb
test
popf
and
xlat
mov
mov
rolb
mov
std
stos
jne
ret
rol
push
jo
aas
movsl
jp
outsl
sahf
test
push
xchg
and
inc
cli
cmpps
pop
or
jne
ds
rcl
imul
sbb
xchg
gs
mov
shlb
outsb
sbb
outsl
fmull
rcrb
imul
loop
fdivl
in
push
add
adc
cmp
jno
jge
push
je
std
add
or
sub
push
addb
or
pop
adc
adc
in
and
insl
clc
stos
imul
push
add
jmp
mov
sub
cmp
and
adc
repz
shrb
lock
inc
je
je
pushf
jae
push
jb
jno
jo
mov
je
movsb
dec
loopne
shrl
mov
in
inc
in
inc
adc
cmc
push
mov
nop
leave
cmp
xor
in
jno
ds
scas
insl
insb
xor
in
pop
arpl
inc
sub
mov
int
in
xchg
cmpsl
lea
leave
cli
loopne
mov
push
add
mov
or
xor
cmp
mov
jge
stc
fdivs
adc
cld
inc
das
jp
adc
and
adc
out
inc
jnp
js
pop
movsl
ljmp
in
mov
pushf
sbb
lcall
in
jl
sbbl
test
gs
jno
lret
imul
cs
xor
jne
cmpl
mov
adc
pop
leave
inc
ljmp
pop
jge
dec
pop
dec
aad
addr16
pop
cmp
xchg
jae
push
mov
shlb
es
repnz
cs
loopne
pop
lods
adc
inc
call
inc
adc
aaa
and
lds
out
aaa
push
push
inc
fs
in
pop
js
in
movsl
inc
mov
clc
adc
mov
inc
adc
aaa
push
and
test
cs
inc
cs
mov
and
cmp
mov
gs
and
aaa
add
mov
insl
hlt
das
out
pop
dec
bound
int
push
insl
cs
imul
pop
fisubrl
data16
mov
xor
lods
js
mov
xchg
mov
shll
jno
cs
inc
cs
or
pusha
mov
pop
xor
sahf
dec
dec
shl
in
push
push
and
pop
in
insl
xchg
sbb
movsl
rcrb
data16
jmp
dec
insl
call
jmp
out
sbb
dec
rcl
in
mov
inc
popa
in
or
iret
ss
test
push
insl
add
cmp
jbe
dec
ldmxcsr
pop
cltd
das
stos
addr16
push
push
fsubrl
xchg
push
mov
hlt
mov
jecxz
outsb
cmp
and
je
ja
sub
cli
adc
xor
std
add
sbb
xchg
pop
gs
stc
pop
gs
push
push
scas
call
xchg
in
arpl
push
push
cmc
mov
adc
insb
mov
lock
inc
arpl
movb
pop
fs
dec
fidivs
or
in
push
dec
inc
jecxz
insb
pop
sub
inc
cld
rcrb
popf
mov
push
mov
lock
adc
add
add
adc
xor
adc
ljmp
or
je
popf
xor
fiadds
mov
sub
sbb
inc
xor
je
sti
jb
push
inc
sub
jns
fstl
sbb
pcmpgtb
dec
clc
sub
cmp
ss
imulb
dec
push
push
cmp
xor
pop
mov
fnstenv
ljmp
in
cld
pop
sbb
mov
inc
std
mov
loopne
mov
xchg
mov
xchg
insb
dec
movsl
xchg
pop
andb
mov
mov
mov
push
test
in
packsswb
push
and
jge
lea
jne
adc
adc
push
mov
mov
sbb
sub
jmp
arpl
sub
push
clc
dec
and
mov
ljmp
add
adc
daa
dec
sbb
das
inc
push
cmp
xchg
push
push
clc
jno
add
add
and
push
ret
adc
lea
into
imul
and
icebp
ljmp
movsl
das
lds
dec
xchg
push
imul
push
decl
aaa
dec
add
or
and
sbb
in
pusha
inc
aad
inc
push
push
sbb
cld
addl
and
add
add
jno
dec
xchg
xor
mov
popf
in
xor
inc
in
push
cmp
jnp
into
pushf
je
fwait
jae
push
mov
ds
cltd
push
mov
pop
cwtl
sbb
lds
insl
pusha
arpl
sub
fwait
ds
jmp
dec
in
and
push
in
insl
xchg
xchg
mov
sub
mov
call
in
push
in
in
aad
inc
mov
ret
gs
movsb
insl
int
test
insl
popa
mov
mov
mov
insb
cmc
es
gs
jns
cmpsl
dec
gs
out
in
sbb
xchg
in
push
push
fisttps
xchg
aad
repnz
sub
rorb
adc
inc
in
minps
mov
je
insl
mov
add
arpl
loope
icebp
clc
sub
in
xor
fcoml
roll
inc
repnz
xchg
fwait
stc
fadds
inc
js
lods
sbb
cltd
outsb
sub
push
push
adc
add
imul
or
movsb
push
push
insl
in
sub
insl
push
push
insb
sub
adc
out
in
mov
jge
lea
dec
add
hlt
sub
xor
inc
pop
xor
inc
push
in
jns
out
xchg
ds
fildl
inc
gs
stc
xor
dec
xchg
insl
sub
in
je
pop
in
inc
enter
std
arpl
inc
pusha
jns
shl
xchg
ret
clc
outsl
in
mov
repnz
sbb
fisttps
push
movsb
lret
jo
dec
inc
gs
lret
pop
adc
test
and
jno
clc
inc
in
fmul
repnz
pop
test
xor
dec
pop
lods
pop
and
test
std
mov
call
leave
ret
xor
insb
cld
or
int3
rcrb
inc
popa
lcall
xor
xor
pop
or
adc
dec
inc
push
sub
sub
das
pusha
adc
adc
push
push
or
cmp
cmp
adc
lahf
push
pop
or
lods
xor
add
or
repnz
pop
xor
insb
push
aad
or
or
or
gs
inc
insb
sbb
jnp
imul
arpl
and
xor
inc
inc
mulb
and
push
and
sub
stos
movsl
in
mov
jno
call
aam
int3
push
push
int
and
popa
cmp
jle
popa
and
or
jmp
sub
stc
neg
sub
xchg
add
cld
insb
jge
sub
pop
inc
xor
push
dec
or
sub
pop
cmp
out
mov
arpl
je
clc
setne
pop
loopne
js
xor
imull
adc
adc
adc
stos
xchg
inc
and
cli
sbb
push
jl
sbb
fidivl
lret
cld
cmpsl
adc
xor
add
push
cmp
sub
push
jge
flds
and
xorb
test
cmp
add
add
test
xor
sub
movsl
pop
or
adc
sub
js
sub
mov
mov
js
and
hlt
je
pop
incl
lods
xchg
in
mov
fst
pop
adc
je
cmc
addl
inc
push
fidivs
fildl
in
xor
loop
rcll
jl
adc
cmpsb
xor
push
cld
or
jge
int
dec
pop
xchg
sub
xor
inc
jns
loope
adc
pop
add
pop
es
insl
mov
pop
jb
insl
in
push
xor
adc
lds
outsb
jno
jno
imul
cltd
bound
leave
icebp
sub
negl
inc
subl
test
sub
fldpi
popf
and
push
cmp
out
add
sub
jge
les
sub
xchg
mov
fcompl
dec
jno
xor
inc
outsb
popa
push
sub
fldpi
scas
orb
adc
rcrl
sbb
aaa
fdivs
loope
or
push
sub
pusha
jl
xchg
pop
int3
mov
sbbl
pusha
sub
clc
scas
out
clc
lahf
jl
pop
xchg
sub
sbb
aad
pop
jmp
inc
int3
in
cmp
sub
and
dec
dec
call
push
sbb
mov
add
out
inc
lret
int
dec
clc
repnz
push
je
aaa
dec
sbb
xchg
ret
aam
loopne
cld
jns
in
fstps
or
insl
andl
aad
dec
sbb
xchg
aad
xor
sbb
push
sub
lds
lds
jb
add
add
rclb
shr
adc
fwait
test
fisubs
push
jbe
xchg
lods
push
pop
push
and
and
jle
mov
rol
cmp
fbstp
mov
xor
push
adc
sbb
dec
cmpsb
insl
mov
push
gs
cld
xor
jo
or
in
fcompl
pop
cld
mov
lods
pop
lcall
inc
out
in
int
xchg
and
mov
cmc
xor
adc
pop
jo
mov
in
add
sarl
or
and
push
adc
pop
outsl
data16
xlat
movsl
or
adc
xor
or
das
ja
ljmp
popa
paddsb
sbb
cmpl
scas
mov
add
inc
gs
xchg
lds
mov
jns
push
insb
addb
push
or
sbb
or
les
pop
push
cmp
lret
xor
dec
mov
mov
ja
insb
nop
scas
mov
hlt
test
cmp
je
add
pop
js
mov
pop
pop
aad
push
unpckhps
je
add
fcmove
push
xchg
lds
push
fcoms
adc
xor
jmp
adc
adc
adc
sub
pop
ret
cmp
adc
sbb
test
xchg
add
jae
sub
aad
arpl
adc
test
and
push
push
pop
mov
arpl
incl
fdivl
mov
mov
mov
movsl
or
xlat
sub
mov
mov
mov
push
jae
jno
pop
mov
jno
lods
push
movb
lahf
and
pop
in
and
adc
jns
insl
popf
add
mov
lcall
inc
loopne
push
or
test
xchg
rcll
pop
jb
stc
and
sti
cmp
dec
and
cmp
push
and
es
leave
cmp
and
in
jp
xchg
rolb
insl
push
test
popf
jmp
loopne
xor
and
push
fsts
or
dec
push
das
xor
lock
movl
dec
xchg
xor
xor
sub
lods
dec
clc
push
xor
sub
gs
inc
insl
cmp
push
xor
movsl
jb
pop
fs
sub
loop
fldl
ret
std
mov
movsbl
inc
jmp
in
gs
pop
shrb
push
add
mov
fsubl
adc
fcoms
push
xchg
pop
mov
scas
cmp
repz
inc
xor
ljmp
movsl
iret
pusha
jnp
imul
and
mov
xlat
les
sbb
pop
pop
push
sub
scas
sub
imulb
mov
ss
mov
scas
adc
es
lods
fs
and
adc
imul
inc
cld
insl
iret
add
ds
push
push
or
lahf
es
dec
inc
mov
pop
adc
inc
jge
in
dec
sbbl
xchg
xor
aad
daa
cmp
fsub
add
lock
jge
test
neg
frstpm(287
insb
mov
jns
xorb
dec
xor
mov
cs
daa
cs
xor
mov
adc
dec
xor
inc
mov
dec
aaa
fldt
push
imul
pop
xor
mov
and
dec
and
and
roll
fcomps
lea
xchg
bound
clc
cmc
imul
sub
pop
xlat
inc
fdivr
xor
xchg
call
aam
gs
insb
fldcw
push
in
insb
dec
adc
inc
and
add
dec
sub
jmp
pop
fstl
mov
xor
mov
and
sbb
add
popa
xchg
clc
add
sbb
popa
subl
sub
or
and
xor
pop
stc
jbe
daa
push
cmp
inc
pop
testb
adc
insl
dec
jl
mov
push
pop
jmp
testb
scas
fmulp
nop
push
pushf
push
push
jbe
pop
in
imul
xor
aad
aam
int
xchg
sub
cmp
std
add
push
cmp
inc
fimull
aad
add
cmc
roll
cmp
xchg
sub
push
inc
sbb
sub
lret
insb
inc
xor
sbbl
sbb
out
in
dec
or
data16
and
xor
mov
and
aam
std
sub
popa
imul
addr16
xor
or
lock
jo
xchg
dec
lock
add
jb
push
push
sub
jb
inc
jle
sub
insl
xor
xor
jb
or
enter
test
imul
pop
and
pusha
fisttps
inc
movsl
inc
in
les
adc
sub
inc
jns
inc
adc
orl
push
movsb
adc
sub
std
mov
push
call
or
and
sub
rorb
add
imul
fs
and
insl
shr
cmp
gs
push
add
fcompl
imul
popa
cltd
imul
ja
push
push
sub
xor
fsubl
daa
push
and
xor
inc
in
sti
pop
mov
inc
adc
xchg
add
cmp
push
xchg
xor
and
arpl
movsl
lcall
dec
sub
aas
inc
inc
inc
cmp
in
adc
popa
fistl
les
stc
iret
jl
cli
leave
pop
jae
das
push
cmp
dec
pop
mov
adc
addr16
rorb
cmc
pop
decl
cmp
jns
cmp
adcl
cmp
out
fcompl
ret
or
push
cmp
dec
inc
into
adc
cld
test
inc
ret
outsb
outsb
jbe
xchg
in
mov
cmp
jge
add
imul
lea
dec
lods
cmp
repnz
in
lret
push
fs
rorb
ljmp
push
inc
mov
xor
shr
xor
or
add
mov
rolb
ljmp
xor
or
add
push
dec
cmp
add
dec
add
adc
psubsb
repz
mov
out
and
in
sub
mov
fstl
pop
xchg
pop
xor
iret
and
mov
sbb
shrl
pop
inc
jl
pop
push
push
and
add
cmp
inc
and
mov
or
fs
xor
jns
dec
cs
add
addr16
cwtl
xchg
fcompl
push
pop
pop
mov
roll
divl
mov
push
rcrl
xor
negl
mov
push
xor
mov
std
pop
in
inc
bswap
pop
daa
cld
pop
pusha
jo
push
adc
pop
or
mov
loop
cltd
or
or
push
sub
por
and
cmp
sbb
and
pop
or
fistpll
popf
add
fimuls
inc
insl
xor
xor
js
sub
or
insl
xor
icebp
mov
insl
imul
jmp
repnz
mov
mov
in
decb
sub
xchg
fists
inc
xchg
fsubs
dec
dec
das
jecxz
add
enter
xchg
scas
adc
mov
pop
mov
vmovupd
nop
test
xchg
loopne
je
jmp
cltd
jno
lods
jae
xor
jnp
push
addr16
outsb
jp
pop
push
out
mov
cmp
or
xchg
cld
xchg
jb
xor
xchg
scas
data16
jo
xchg
popf
lock
add
aaa
jo
dec
pushf
lock
xchg
in
jge
sub
imul
outsb
pop
or
jmp
jmp
in
jnp
je
insl
loopne
push
insb
pop
das
fsub
or
add
std
push
imul
fsubp
push
insb
fnstenv
shlb
jb
sbb
pop
sub
sub
and
popa
aam
push
lcall
mov
jbe
imul
add
adc
xor
lock
dec
addr16
in
imul
inc
push
and
xor
mov
test
xchg
pop
xor
and
pop
je
popa
mov
das
pop
xchg
insb
push
gs
ret
faddp
sarl
lahf
jne
pop
outsb
pop
pop
je
hlt
cmc
insb
jge
inc
xor
inc
pusha
imul
xchg
jg
mov
int
mov
jno
hlt
das
je
push
adc
jae
daa
pop
gs
dec
xor
scas
bound
jnp
jl
sbb
dec
adc
imul
xchg
gs
xor
push
movsl
in
mov
scas
insl
in
movsl
test
mov
inc
inc
lds
in
pop
shrl
cmp
fcomps
cld
lea
popa
in
cmpsb
cmp
and
and
stc
jae
xchg
frstor
subl
mov
ljmp
ljmp
adc
push
mov
xor
and
test
and
inc
popa
aad
aad
jge
int
xchg
mov
or
jae
push
frstor
daa
and
push
adc
popa
stos
movsl
and
lds
cmc
xor
xor
or
jmp
push
pop
call
popa
stos
push
and
or
sub
or
cmp
popa
loopne
in
jns
ljmp
pop
xor
add
and
mov
xor
iret
popa
clc
mov
jmp
sbb
popa
and
xchg
stc
outsb
sub
inc
popa
femms
xor
imul
aam
insb
xor
in
lock
in
cmp
lds
mov
or
out
dec
out
clc
push
pop
out
xor
popa
stos
in
jge
push
and
sbb
popa
loopne
mov
mov
xchg
mov
int
jge
out
xor
lea
xchg
and
in
add
xor
cmp
notb
sbb
cld
sbb
popa
ljmp
mov
and
popf
gs
add
sub
xor
adc
jo
faddl
sbb
in
jmp
lea
hlt
sbb
loop
mov
xor
loopne
and
cld
stc
jae
in
frstor
fistps
xchg
adc
inc
lods
add
sbb
outsl
pop
xchg
cld
movsl
and
test
add
xor
and
and
in
jae
aad
popa
inc
daa
and
xchg
movsl
xor
sbb
pop
loopne
shll
jb
inc
loopne
sbb
popa
aad
or
hlt
and
popa
adc
jmp
and
popa
popf
daa
and
fs
loope
imul
popa
adc
xor
pop
add
insl
mov
or
popa
inc
daa
sbb
and
sbb
popa
adc
faddp
fs
dec
popa
loopne
sbb
in
xor
and
sbb
stc
outsb
sub
push
popa
int
cmpsb
jne
fistpll
xorl
inc
popa
lods
xchg
cmpsb
push
jmp
lods
jb
in
shrl
popa
adc
fsubs
mov
xchg
and
popa
cmpsb
dec
loop
sub
inc
mov
sub
jo
sub
je
or
inc
cmp
dec
cld
popa
iret
popa
dec
rolb
add
iret
popa
push
and
popf
fsubl
iret
in
xchg
fnsave
and
add
fidivl
fstl
add
in
vandnps
fldl
dec
out
mov
or
popa
mov
xchg
cs
movsl
xor
mov
fistpl
inc
jae
xor
fidivs
das
fildl
in
popa
inc
sbbl
sbb
popa
and
ficompl
stc
loopne
cmp
cmpsl
fdivl
cld
adc
inc
popa
in
sbbb
fisttpll
xor
and
jge
insl
xchg
push
fsts
xor
popa
and
out
icebp
add
in
or
inc
popa
push
nop
xchg
jne
push
mov
popa
lea
cmp
fadds
xor
adc
cld
and
popa
cmpsb
cld
jecxz
test
lods
or
cmp
in
test
pop
lock
std
jae
push
frstor
lea
test
jne
aam
push
insb
sub
jne
in
lea
popa
int
mov
or
jge
xlat
jecxz
add
sbb
popa
and
les
pop
lock
sub
and
push
xor
and
and
popf
subl
pop
push
adc
pusha
dec
popa
shrl
popa
adc
sbb
cmp
cld
popa
sub
aaa
out
sbb
push
sub
xor
in
push
xor
roll
fidivs
xchg
mov
or
in
adc
add
outsl
dec
hlt
adc
fsubrl
xor
jb
hlt
mov
jg
fisttps
aad
jp
sub
mov
dec
or
outsb
fs
rcrl
in
aad
push
or
push
aas
gs
push
jno
fmull
addb
inc
cld
aam
lds
in
sysret
daa
aad
test
jge
mov
aad
das
xchg
addl
gs
and
push
test
sarb
adc
cmc
pop
hlt
xor
or
andl
aaa
xor
mov
pop
dec
add
cmp
inc
pop
lods
in
faddl
jb
adc
cmp
ret
and
aam
shrl
mov
clc
in
insl
fs
mov
rcll
rcrb
scas
pop
ljmp
inc
dec
cmpsl
cmp
and
outsl
and
or
or
jmp
xor
xchg
mov
insl
das
iret
xchg
movsl
fstl
aad
test
jbe
jne
rcrl
dec
lods
push
hlt
mov
cmp
cld
cmp
das
cmp
cmp
das
dec
jmp
stos
sarb
in
push
insb
and
xchg
dec
xchg
fs
mov
sub
add
fdivr
adc
pop
lods
hlt
aad
cld
in
insl
gs
aad
dec
in
pop
push
int
mov
in
das
int
mov
in
fldcw
cld
dec
lahf
xor
and
push
xchg
scas
jp
inc
jge
dec
scas
sbb
push
pop
dec
movsl
cmp
sub
xor
xor
dec
adc
dec
add
sbb
hlt
nop
in
inc
insl
jecxz
add
int3
dec
shrl
in
pop
lea
hlt
and
pop
int
mov
insl
iret
insl
push
test
or
push
dec
mov
xor
pop
push
xor
insl
pop
out
pop
jb
or
add
cs
dec
out
dec
in
push
outsb
and
insl
dec
int
xlat
ret
add
sbb
lods
movsl
mov
sbb
test
insb
sub
dec
sbb
scas
push
in
scas
inc
ljmp
fstpl
sub
iret
cmp
lods
lret
hlt
dec
in
add
in
xchg
dec
dec
lock
std
adc
in
popf
das
lret
scas
jne
leave
mov
ljmp
cltd
pop
dec
cmp
adc
je
dec
sub
out
arpl
sbb
sub
test
inc
cld
mov
mov
dec
pusha
mov
leave
pop
insl
dec
mov
in
in
inc
enter
and
xlat
mov
or
lea
push
loope
inc
enter
insl
test
xor
in
dec
popa
xchg
jne
sub
in
insl
cltd
cs
stos
hlt
in
nop
in
add
in
insl
fcompl
out
loope
sub
in
mov
lods
jmp
xchg
add
dec
fstl
pusha
dec
lea
movb
xor
sub
imul
cltd
push
add
dec
loopne
lds
lods
lds
in
add
mull
popa
lds
push
movsl
mov
adc
in
mov
pop
insl
test
push
cmp
dec
test
enter
inc
les
out
sub
popf
xchg
cs
lods
in
imul
les
push
lods
mov
movsb
inc
insl
xchg
fstpl
sub
in
outsl
arpl
outsb
xor
ret
gs
add
add
lods
icebp
mov
inc
pusha
mov
les
mov
gs
jmp
cmp
and
mov
sub
add
add
arpl
ds
stos
lea
stos
inc
gs
ljmp
pop
ljmp
ret
arpl
lock
ret
mov
xchg
sbb
inc
sbb
hlt
dec
lahf
xor
jae
jmp
fisubs
hlt
aam
faddl
test
and
dec
adc
test
test
in
insl
pop
lock
push
inc
sub
ljmp
sub
inc
insl
sbb
hlt
adc
sti
insl
fsubr
ljmp
int
lods
xchg
cs
lods
sub
xchg
sub
jle
roll
bound
rcrb
inc
adc
adc
adc
mov
adc
sub
iret
cmp
fisubs
push
aam
imul
push
push
mov
push
in
dec
movsl
dec
adc
insl
mov
mov
push
push
inc
xchg
and
cld
push
push
add
in
mov
jmp
aad
sub
out
movsl
fcomp
jne
mov
jp
sbb
adc
inc
out
arpl
test
popf
jne
test
pop
dec
inc
gs
insl
lods
xor
fnsave
in
mov
xor
mov
pop
add
in
add
sbb
lds
leave
movsl
mov
in
and
push
gs
inc
add
sbb
inc
iret
mov
dec
cmp
jne
sbb
pop
xor
mov
rorb
aad
jae
lods
rorb
lds
pop
lods
xchg
aad
and
pop
add
and
xor
adc
inc
cmp
push
and
aam
push
add
scas
repnz
das
adc
push
xlat
in
scas
leave
in
scas
insl
cld
mov
in
scas
lahf
in
scas
xchg
in
scas
andl
pushf
gs
push
pop
xor
in
gs
jge
fs
das
xor
in
bound
push
popa
sub
divb
pop
call
push
pop
sub
mov
pop
arpl
in
push
xchg
push
jns
push
imul
lock
out
gs
xchg
rolb
dec
lods
push
in
insl
mov
inc
xlat
push
push
out
push
push
loopne
hlt
scas
shr
scas
mov
scas
test
scas
in
scas
jg
mov
cmp
inc
push
xchg
inc
inc
xchg
inc
cmp
sbb
scas
add
scas
repnz
scas
in
scas
xlat
in
scas
leave
in
scas
mov
scas
lahf
in
scas
xchg
in
scas
sub
insl
cmp
in
scas
dec
in
ret
fs
xchg
daa
and
aam
mov
adc
mov
mov
mov
pop
in
xchg
jge
fdivrl
imul
cmp
push
xor
popf
push
dec
rcr
das
mov
lds
dec
dec
adc
movsl
add
pop
lea
and
imul
call
popa
inc
insl
cmpsb
cmp
jmp
mov
mov
cmp
xchg
in
sbb
jb
hlt
and
sub
leave
lds
mov
in
mov
xor
xchg
pop
xor
push
mull
gs
cmp
pop
sub
out
arpl
cld
inc
pusha
push
leave
mov
test
jne
lods
das
cmp
jle
pop
mov
and
xor
sbb
push
sub
add
push
arpl
in
in
jecxz
popa
push
fisubrl
adc
push
gs
dec
push
add
stos
xor
test
cmp
jne
outsl
aaa
and
xlat
fs
push
pop
push
xor
xor
das
push
pop
cmc
pop
pop
sub
ljmp
xchg
inc
out
xchg
inc
out
movsb
jne
or
or
stos
movsl
in
popf
add
pop
jl
in
ss
lds
mov
push
ss
inc
call
es
dec
sbb
adc
xor
insl
push
out
sub
pop
xchg
push
int
cli
pop
and
out
mov
dec
sbb
sbb
add
jb
sub
pop
push
push
in
xor
jne
mov
popa
and
push
adc
in
cmp
pop
out
cmp
dec
jmp
jne
xor
mov
das
inc
ret
movsl
fimuls
mov
mov
cmp
pop
das
add
arpl
ds
xor
in
mov
test
xchg
aad
int
and
insl
stos
mov
adc
xchg
nop
mov
in
and
xor
push
out
in
mov
lods
jmp
mov
mov
insb
jge
das
test
add
sub
ljmp
cld
dec
int
inc
test
mov
dec
mov
mov
popa
and
hlt
add
xor
in
add
mov
insl
fsubrl
sbb
aad
jg
push
xor
push
push
pop
inc
xor
mov
xor
insl
xlat
dec
sub
and
add
pop
lock
xor
pop
dec
stos
aad
std
hlt
sbb
mov
xchg
lods
add
out
imul
test
test
cmp
xor
dec
dec
leave
adc
inc
adc
sub
sub
in
mov
push
mov
jmp
xor
scas
push
in
sbb
xor
adc
jmp
call
lods
xchg
xor
sub
push
sbb
stos
or
insl
cld
mov
jne
adc
lods
xchg
test
dec
loopne
sbb
aam
xlat
lods
dec
sbb
mov
pop
dec
xchg
xor
adc
das
jne,pn
dec
sbb
pop
cmpsl
push
lds
push
xor
and
xlat
or
mov
stos
lods
stos
sbb
pop
xor
adc
add
in
push
iret
stos
cmp
xorl
in
ss
xor
das
test
xchg
push
in
sub
cmp
adc
xor
mov
lock
push
push
cs
add
sbb
xor
repnz
cld
mov
lahf
pop
push
inc
test
insl
fs
push
aam
nop
or
in
stos
iret
jge
aad
cmp
lods
pop
lods
xchg
xchg
jae
test
insl
xchg
fnstcw
push
sub
xchg
dec
or
dec
and
je
in
mov
lds
mov
cmpsb
add
push
dec
std
test
in
and
out
leave
gs
dec
xchg
pop
sub
cmp
repnz
or
xchg
inc
clc
cmp
dec
xor
arpl
inc
inc
insb
movsl
lods
jecxz
adc
mov
cmpxchg
aad
scas
clc
in
scas
out
jmp
dec
cld
loop
cld
fcomp
or
dec
inc
test
mov
mov
mov
sbbb
das
cmp
cmp
push
pop
pop
jbe
push
jbe
dec
jbe
jbe,pt
xor
sub
sbb
sbb
inc
pop
jns
cmc
jns
call
adc
jns
enter
push
fs
xor
push
push
pushf
sub
push
xor
dec
push
jo
jno
sub
pop
xor
in
dec
arpl
sub
xor
in
inc
arpl
push
inc
sub
add
mov
pop
icebp
in
xchg
cld
call
les
test
test
test
cmp
fs
out
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
arpl
pop
test
out
lock
sub
fs
mov
dec
dec
lea
xor
xchg
adc
mov
jmp
aad
fsubrp
add
lods
cmp
mov
dec
movsl
dec
adc
pop
mov
add
pop
lods
inc
std
or
in
lods
add
in
xchg
pop
lods
mov
pop
push
inc
push
push
test
je
and
adc
outsl
es
test
test
sbb
inc
das
cmp
das
cmp
cmp
das
cmp
cmp
das
cmp
das
cmp
das
cmp
das
dec
aad
loopne
cmp
mov
sbb
sub
xchg
in
push
mov
dec
jge
ljmp
lods
scas
pop
jmp
in
in
cmp
cld
mov
lods
insl
adc
lret
cmp
pop
sub
gs
int
sbb
sub
popf
jmp
lods
dec
xchg
or
add
test
sbb
gs
pop
mov
adc
insl
dec
cmp
arpl
xor
sub
pop
push
sub
iret
xor
rorl
add
insl
lods
in
pop
cld
fnstenv
xor
insl
cmp
add
sub
and
jge
hlt
xchg
push
and
push
mov
push
push
inc
in
cltd
xchg
das
xchg
andl
imul
cld
mov
pushf
pop
push
in
fsubrl
leave
in
mov
int
leave
test
hlt
push
jge
sbb
cld
shll
arpl
jne
or
xor
fwait
xchg
sub
in
sub
sbb
out
add
in
xchg
dec
stos
in
xor
je
fnsave
mov
xchg
sub
sti
repnz
gs
arpl
out
leave
xor
hlt
xor
xor
sub
aam
popa
fcoml
xchg
push
push
pop
dec
jne
hlt
popf
icebp
xchg
adc
jnp
lods
jae
lock
in
jp
xor
int3
dec
cld
call
hlt
xor
mov
push
sbb
add
push
movsl
jno
in
cltd
fcoml
cmp
cli
leave
push
add
std
mov
cmpl
push
lock
enter
aam
enter
cmp
inc
push
xchg
in
popa
add
xor
loop
test
les
lea
in
mov
xchg
xchg
loope
ljmp
call
negl
and
int
push
dec
and
push
mov
xchg
adc
cld
test
gs
mov
rcrl
int
popf
xchg
cltd
push
xor
xchg
mov
dec
leave
hlt
out
in
mov
mov
aad
xchg
xchg
fxtract
mov
sbb
pop
addr16
jge
push
pop
call
push
xchg
add
dec
and
sbb
hlt
mov
push
jno
lds
mov
pop
lea
or
stos
or
dec
xchg
jmp
pop
xchg
std
jne
inc
lahf
and
lods
hlt
xchg
cs
addl
hlt
out
in
or
aad
mov
xchg
pop
push
mov
cmp
jb
adc
ret
mov
adc
dec
ret
mov
in
lods
imul
xor
add
pop
cld
sahf
gs
sub
in
pop
shrl
lds
cmp
arpl
mov
and
xor
xchg
pop
icebp
mov
xchg
mov
xchg
add
popf
xchg
adc
lret
stos
jne
xchg
pop
lea
sbb
insl
sbb
adc
sbb
add
or
xor
mov
outsb
push
xor
pusha
push
fsubl
xlat
push
mov
fistpl
gs
clc
or
sbb
xlat
std
push
cld
out
fistps
xchg
sbb
shr
add
xlat
les
cmp
add
xchg
inc
mov
jo
fcomp
lods
bound
inc
xchg
inc
cmp
sbb
inc
push
xchg
mov
push
hlt
sbb
dec
gs
sbb
aad
lret
cmp
cmp
push
pop
popl
dec
sbb
lods
insl
adc
cmp
xor
call
jne
cmp
push
cld
in
push
xchg
std
in
dec
fs
mov
inc
loope,pt
hlt
stos
popf
mov
xchg
pop
jl
lods
dec
cld
sub
cld
pop
fcomps
jmp
cmp
and
in
insl
jmp
inc
enter
inc
sbb
adc
lods
mov
insl
lods
movsb
in
push
cltd
xor
shlb
mov
push
mov
sub
lea
fs
arpl
shll
cmp
pop
mul
cs
int
cmpsb
lds
jne
or
in
push
push
test
pop
xchg
popf
ds
jle
mov
push
and
std
add
xchg
hlt
pop
inc
mov
pop
fcoml
sbb
popa
imul
int
lods
movsl
xchg
jb
push
xor
xchg
pusha
in
test
pop
jne
mov
arpl
das
xchg
jne
mov
addr16
leave
inc
ljmp
cmpsb
fs
dec
sub
sbb
pop
pop
insl
add
mov
test
test
test
test
test
jmp
dec
in
mov
stos
out
lahf
push
xchg
in
lods
jle
jo
rcll
mov
dec
call
aaa
call
and
cs
push
imul
xor
in
pop
fmulp
gs
sbb
lods
mov
mov
stos
in
inc
xor
xchg
push
fnstenv
mov
insl
xor
dec
jne
jmp
jmp
jmp
xchg
or
in
in
xor
and
or
movsl
dec
xchg
xchg
sub
in
xchg
push
cmp
xor
add
push
xchg
mov
inc
insl
or
push
add
sbb
jne
dec
lahf
push
mov
ds
stos
popf
in
std
sbb
adc
les
cmp
dec
mov
push
adc
rcrb
and
adc
in
add
push
cld
hlt
jne
test
and
adc
push
xchg
int
lea
sbb
ret
aad
movsl
test
push
adc
inc
pop
dec
sub
movsl
insl
stos
and
dec
adc
insl
add
sub
adc
insl
aad
xor
lds
movsl
dec
lods
mov
xchg
xchg
push
adc
das
adcl
cmp
cmp
or
std
in
je
int
gs
aad
sbb
insb
cmp
lods
imul
in
xorl
movsl
iret
insl
xor
inc
mov
cmp
push
ljmp
gs
sbb
xor
and
in
push
jb
or
in
call
and
fcoml
xor
iret
insl
and
jo
test
lods
sbbl
jne
jecxz
push
hlt
push
add
faddl
pop
xor
stos
lods
in
push
inc
push
scas
jne
dec
sbb
pop
push
pop
sub
add
mov
in
out
arpl
jne
pusha
push
cltd
mov
mov
cmp
mov
sub
test
out
outsl
or
pop
inc
fnstenv
sub
fisubrs
jg
mov
or
xchg
lods
in
roll
rcll
sub
mov
mov
push
in
xchg
fs
fs
and
or
out
fs
pop
call
cmp
pop
hlt
stos
hlt
dec
sbb
aad
cmp
jb
adc
loopne
insl
cmpsb
test
jne
or
pop
popa
inc
shrl
cmp
xchg
cs
sub
ret
sub
icebp
add
xor
in
cltd
and
in
stos
mov
in
dec
stos
mov
lahf
xchg
push
pop
test
push
pop
jl
gs
cld
mov
jl
in
out
gs
add
les
sub
test
dec
hlt
dec
adc
insl
push
jge
jp
mov
push
insl
in
lods
adcb
push
pop
mov
jnp
fs
or
dec
pop
shlb
inc
leave
xor
outsb
xor
mov
das
imul
pop
adc
push
jno
cld
jo
cmp
aad
mov
sbb
jns
repnz
xlat
or
mov
popf
sbb
cld
adc
pop
xchg
or
icebp
iret
pop
and
sbb
stc
mov
int
adc
test
and
mov
das
or
mov
inc
cmp
sub
push
outsb
sub
xchg
xor
sub
or
xor
lds
out
int
dec
hlt
jmp
bound
lds
in
mov
sbb
cmp
cmp
popf
push
or
pop
lods
push
test
or
testl
sub
js
and
or
or
fpatan
shrl
fdivrl
pop
mov
xchg
jne
dec
leave
xchg
out
in
mov
gs
push
out
in
mov
mov
in
jmp
cmp
sub
ljmp
lds
lea
movsl
xchg
jae
test
jge
lds
push
adc
adc
inc
iret
insl
and
and
pop
xchg
pop
insl
adc
adc
pushf
out
push
test
cld
hlt
push
fnstenv
repnz
aad
adc
loope
dec
leave
mov
lds
stos
lea
jge
xchg
push
jb
mov
gs
dec
push
push
inc
push
push
cmp
jne
in
mov
mov
pop
ret
add
lods
jb
test
sbb
rcll
stos
leave
xor
mov
push
dec
adc
sub
insb
inc
sbb
mov
mov
push
aad
sbb
sbb
cmp
and
sub
push
adc
xchg
cmp
xchg
mov
adc
push
xchg
std
fsubrl
loope
cmp
mov
jge
push
and
scas
dec
sbb
gs
mov
pusha
frstor
in
in
push
xor
cltd
xor
pushf
adc
pop
and
xchg
pop
sub
and
hlt
mov
data16
adc
in
mov
insl
test
test
cmp
inc
in
inc
lods
movsl
stos
or
fldenv
sbb
fldcw
in
push
iret
insl
fwait
pop
lods
in
aad
sbb
fdiv
add
sub
dec
popa
jge
stos
insl
xlat
hlt
push
jns
mov
outsl
inc
xor
add
sbb
jecxz
add
sub
push
mov
pop
outsb
in
lea
jp
xchg
xchg
and
adc
adc
dec
or
and
cmp
aad
scas
or
push
hlt
in
xchg
push
in
sbb
in
mov
xchg
lea
lds
mov
add
movsl
bound
shrb
and
cld
or
test
add
jne
dec
lods
inc
aad
cld
cmp
push
add
inc
pop
adc
insb
and
push
inc
sbb
add
jne
push
cmp
add
dec
push
cld
insb
add
pop
dec
ret
mov
lds
lods
push
xchg
std
xchg
imul
aad
into
stos
fld
push
dec
imul
add
jne
imul
and
xchg
push
add
in
dec
push
add
in
xchg
mov
test
or
jl
pop
lods
test
push
test
scas
xor
lods
or
mov
xor
cmpsb
shlb
push
or
mov
mov
fs
xlat
jne
push
imul
mov
imul
imul
lods
cld
pop
xor
inc
push
xchg
pop
xor
fs
push
mov
imul
cmp
adcl
faddl
repz
lods
add
push
jge
jb
les
dec
addr16
sub
addl
insl
adc
ljmp
hlt
clc
in
jmp
in
cs
in
mov
addr16
add
xchg
mov
mov
inc
lcallw
popf
xchg
and
ja
jne
xor
lods
fsubl
jae
movsl
in
sbb
jge
cmp
xchg
mull
mov
ret
jge
enter
movsl
insl
rorl
pop
or
inc
dec
xchg
cs
push
or
popa
jne
lods
xchg
adc
gs
or
lods
loope
mov
dec
cmp
nop
jmp
arpl
loope
in
mov
dec
cld
lds
hlt
insl
push
fs
and
dec
lods
sub
dec
mov
xor
cmpsl
or
jne
sbb
movsl
lea
push
sub
cs
popf
std
test
test
aad
scas
jne
arpl
out
pop
call
in
stc
mov
pop
int
xchg
inc
add
sub
or
loope
push
dec
test
cltd
and
or
test
mov
add
push
das
and
push
hlt
std
movsl
pop
mov
in
mov
cld
mov
push
fs
cld
in
ss
jb
gs
pop
push
sbb
and
fs
or
in
in
pop
inc
inc
adc
sar
jno
xorl
and
dec
sbb
push
lods
jo
popf
test
push
cld
sub
fcmove
inc
cld
int
sub
insl
xor
es
xor
lds
dec
lods
lods
cmp
movsl
xchg
push
fnstenv
inc
adc
pop
xchg
jns
das
inc
test
addr16
sbb
hlt
std
cmp
sub
movsl
std
adc
add
das
pop
xchg
in
push
das
sub
add
faddl
sbbl
dec
fsts
adc
pop
lock
bound
cmp
fstps
jmp
pop
hlt
pop
pushf
jge
pop
fcompl
pop
pop
gs
pop
mov
xor
and
icebp
sub
cmp
jge
into
push
pop
xchg
gs
rcrl
out
movsb
out
movsl
ja
or
out
sub
mov
gs
sbb
movsl
out
jl
push
sub
fs
pop
mov
pop
scas
and
pop
test
push
fdivr
in
pop
jb
mov
dec
lods
fnop
loop
daa
cmp
lea
xchg
fs
out
xchg
and
jge
mov
sub
test
xchg
lea
lock
pop
pop
dec
xchg
mov
push
adcl
or
pop
xchg
dec
push
push
inc
xchg
and
cld
push
push
sbb
or
jb
lods
std
hlt
popa
xchg
hlt
xor
in
movsb
pop
pop
in
shll
lods
jae
and
xor
mov
out
movsl
mov
pop
xor
fs
mov
dec
mov
and
sub
jne
push
mov
test
enter
add
popf
inc
ret
fnstcw
es
fs
push
mov
inc
mov
mov
mov
mov
orl
je
sub
arpl
and
mov
sbb
hlt
mov
mov
mov
mov
insl
push
cltd
jns,pn
jno
test
or
push
or
and
pop
fdivr
les
pop
push
out
dec
in
lea
lods
jge
xor
xchg
fs
mov
mov
mov
mov
mov
mov
push
cltd
xor
subl
dec
lahf
xor
mov
dec
adc
or
test
jg
xchg
inc
cld
xor
sub
jne,pn
cmp
clc
jmp
das
dec
ret
in
mov
push
mov
xchg
std
mov
jmp
push
sti
insl
cmp
aaa
mov
cmp
cmpsb
sub
or
add
adcb
push
int
cs
in
fwait
movsl
add
pop
mov
hlt
adc
jp
jne
dec
movsl
push
inc
in
xor
in
mov
push
add
leave
in
lods
rcll
cs
push
movsl
in
xchg
or
int
popf
dec
ss
jge
sbb
adc
aad
or
cmc
aad
pop
in
pop
movsl
sbb
cmc
in
mov
inc
insl
sub
test
hlt
push
std
or
out
jb
das
dec
xchg
call
rorb
shl
mov
je
in
lea
int
mov
loopne
sbb
push
dec
add
inc
dec
scas
xor
orl
in
push
fdivl
lds
xchg
dec
adc
pop
push
bnd
cld
jecxz
pop
bound
dec
push
jmp
push
xlat
dec
push
push
inc
dec
sbb
xlat
xor
xchg
xlat
and
sbb
xlat
or
cli
dec
test
fucomp
fs
or
pop
popa
push
nop
in
sub
imul
imul
imul
gs
pop
sub
add
xor
aad
lea
int
ret
lods
lods
xchg
mov
pop
ja
push
imul
dec
push
cmpsb
gs
cltd
xchg
je
and
iret
pop
cmp
in
jge
rcrb
cs
push
lea
dec
frstor
xor
dec
pop
inc
inc
repz
dec
adc
add
hlt
sub
jne
in
mov
outsb
bound
jge
dec
push
call
loopne
aas
pop
cmp
pop
stos
adc
cmpsb
xor
sub
popf
push
cmc
push
pop
push
in
push
cs
xor
stos
aad
lahf
xor
popf
add
loop
add
ficomps
insl
lock
lods
dec
lahf
cs
push
jae
add
popa
cmp
ret
aad
je
lds
push
lock
inc
inc
pop
dec
cmp
push
insl
inc
jns
push
inc
add
mov
inc
ds
adc
in
into
hlt
jl
push
jae
pop
in
mov
push
lds
movsl
inc
out
insl
pop
inc
cltd
and
lods
mov
inc
adc
inc
stos
or
int
fcompl
mov
add
test
pop
inc
lods
sub
or
jne
inc
pop
jmp
push
dec
pop
add
das
faddl
cmpl
lea
aam
xor
xor
insl
and
call
push
jmp
cmp
jmp
jne
add
xchg
cmp
and
in
nop
dec
or
mov
mov
pushw
pop
je
and
rcll
test
add
outsb
hlt
sbb
add
mov
mov
jl
lret
jne
adc
pop
je
orb
lea
jge
push
test
add
call
mov
fiadds
jp
xchg
pop
jne
lds
cli
and
jne
push
mov
xchg
lock
jne
xchg
aas
lods
xor
je
mov
push
mov
stos
mov
lods
jne
adc
add
movsl
stos
push
xor
out
dec
jne
jno
int
pop
pushf
lea
dec
pop
movsb
sbb
add
add
mov
jne
or
sub
fs
push
and
cmc
jne
js
in
mov
rcl
xchg
les
add
pop
xor
cmpsb
sbb
faddl
push
mov
and
add
mov
cltd
loopne
inc
sub
es
call
xchg
xchg
incb
add
sub
push
out
push
out
rcrb
stc
mov
sbb
push
sub
cmp
insb
push
push
xor
insl
xchg
fwait
push
test
outsl
imul
insl
mov
dec
xchg
pop
sbb
lods
insb
das
fsubl
aad
shrl
xor
jnp
and
and
popa
xor
in
cmp
sub
loopne
iret
mov
push
add
xor
lods
insb
dec
in
push
aaa
ds
push
or
ret
insb
ret
dec
popf
adc
mov
xchg
test
ja
imul
add
adc
insb
dec
sub
jae
adc
cmp
fwait
and
dec
scas
xor
lds
fxam
in
lock
pop
in
adc
push
mov
xchg
insb
xor
iret
push
fisubrs
add
inc
arpl
sub
fldl
push
ret
sub
repnz
adc
and
xor
xor
in
mulb
push
fldcw
fwait
xor
cmc
dec
arpl
push
xor
add
hlt
out
fsubl
push
shrl
xor
xor
in
imul
sbb
sub
shll
cmpsl
in
xchg
arpl
pop
sub
in
sbb
push
cld
sub
int
shll
insl
pop
in
imul
and
push
clc
sub
leave
xor
lock
mov
lret
insb
xor
xor
arpl
in
push
or
inc
arpl
xor
insl
xchg
in
push
mov
ret
shr
in
arpl
push
or
push
cmp
dec
pop
jmp
xor
lahf
push
mov
rcr
in
call
sub
xor
aas
push
in
pop
arpl
jg
jno
sub
mov
aad
in
add
push
pop
sub
inc
xor
in
jno
xchg
jae
push
stos
sub
out
xor
sbb
sub
sub
jg
push
xchg
xor
xor
or
dec
emms
mov
or
mov
hlt
inc
lods
insb
inc
in
push
xor
insl
in
dec
arpl
xor
jae
je
in
inc
arpl
inc
sub
xor
in
jb
bound
sub
push
jo
push
add
fs
insb
jno
aam
rclb
inc
sbb
loopne
arpl
add
xchg
or
inc
pop
aad
fucomp
insb
add
push
pop
outsb
add
inc
sbb
in
push
imul
xor
leave
push
fldcw
adc
and
push
popa
sub
fs
push
lods
xor
fsubr
call
push
xchg
xor
inc
in
dec
arpl
imul
es
xchg
in
push
stos
xor
frstor
pop
arpl
push
sub
push
xor
xor
arpl
in
push
add
adc
in
dec
arpl
jae
test
or
insb
mov
xor
out
clc
arpl
push
and
push
xor
xor
arpl
in
push
in
xor
add
adc
ror
mov
iret
aaa
or
add
sub
cmpsl
xor
imul
sbb
cmp
inc
popa
in
jno
subl
sub
shll
fsubrp
in
cld
arpl
push
sbb
dec
xor
jmp
xor
popf
push
scas
xor
repnz
add
mov
pusha
inc
call
push
adc
push
out
xlat
in
mov
sub
imul
in
inc
arpl
in
ss
fmul
sbb
push
shll
shrl
cmp
sub
and
in
push
sub
jae
cmp
push
inc
sbb
gs
push
add
push
pop
fisubs
fbld
lods
insb
ficoms
cmp
arpl
add
push
inc
fsts
lock
outsl
xor
imul
out
lods
insb
frstpm(287
je
loopne
std
mov
icebp
adc
xchg
movsl
in
mov
gs
imul
fcomp
mov
and
shr
imul
aad
mov
jge
movsl
ret
arpl
psubusw
push
xchg
sar
aaa
mov
push
outsb
ret
outsb
cmpsl
dec
divl
cmp
ja
addr16
fcoms
pop
jp
jno
add
inc
shlb
popa
cmp
add
pop
cmpb
and
sub
xor
sub
push
insl
repnz
inc
fnstenv
jae
sub
aam
pop
jb
iret
dec
stc
scas
hlt
nop
hlt
pop
jne
mov
push
je
ficoml
push
xlat
add
pop
push
inc
insl
push
insb
mov
cmp
hlt
loopne
int3
sub
sbb
xor
je
push
negl
je
pop
movsl
sub
and
push
push
hlt
js
xor
and
mov
into
or
leave
outsl
outsl
push
fistl
and
in
add
xor
mov
xor
xchg
mov
push
xchg
scas
mov
out
mov
push
call
sbb
jae
xchg
scas
push
dec
popa
jne
ds
fisubl
or
sub
pop
outsb
mov
pop
jne
sbb
jne
jbe
mov
pop
inc
mov
jo
cwtl
testl
jne
gs
hlt
dec
ficoml
aaa
lea
cmc
pop
inc
test
int
dec
sbb
imul
aad
scas
fs
cmp
mov
pop
gs
hlt
ja
lods
xor
mov
xor
lahf
xorb
stos
mov
dec
leave
fadds
mov
mov
dec
cltd
xchg
test
and
jg
pop
add
adc
adc
xor
outsl
or
push
mov
jne
xchg
add
fwait
inc
and
sbb
stos
mov
push
in
lods
jne
xor
and
es
inc
decb
push
aaa
jne
mov
dec
rcl
add
push
inc
es
sbb
lods
orl
into
add
xlat
jne
inc
mov
pop
jb
xor
sti
cmpsb
jne
push
scas
dec
xchg
js
je
add
mov
mov
pcmpeqw
repnz
sbb
mov
dec
add
sbb
pop
cmp
pop
in
pop
inc
push
pusha
out
mov
pop
cli
xor
rcl
and
jno
mov
jecxz
sti
pop
jbe
int3
sub
sub
repz
jae
jmp
pop
addr16
push
push
rorb
jne
cmpsb
cmp
mov
pusha
jne
sbb
lods
sbb
js
lock
into
jne
mov
stos
cmp
xchg
or
xor
int3
ljmp
push
int
fisubrs
dec
jge
xor
adc
push
jne
mov
jne
add
xor
jno
pop
xor
inc
shr
adc
or
mov
dec
loopne
sbb
mov
jne
jbe
pop
pop
stc
sbb
cmp
mov
add
xchg
mov
in
push
je
ljmp
out
fistpll
faddp
scas
push
jne
repnz
lret
sub
adc
cmp
mov
adc
mov
xadd
mov
je
test
cmc
pop
pop
into
insb
arpl
in
mov
dec
mov
sub
gs
jne
fistps
fistl
push
push
mov
dec
popf
sbb
insl
stos
mov
inc
jne
jae
lods
mov
jo
movsb
insl
adc
push
inc
jne
in
jge
aam
or
in
aad
test
ss
jae
jecxz
cmpsl
adc
outsb
inc
jne
xor
push
pop
cmp
sub
pop
out
into
or
inc
fsubp
stc
bound
clc
addr16
cmp
inc
iret
cmp
jb
xchg
mov
je
pop
repz
into
jp
je
popf
mov
jne
push
mov
or
cmc
mov
ja
arpl
into
push
jae
sbb
dec
xchg
xor
jl
call
scas
mov
jno
mov
inc
clc
mov
imul
bound
inc
mov
lods
jnp
cmpsb
test
in
inc
pop
push
cmp
pop
pop
outsb
mov
and
xchg
xor
mov
ret
data16
lret
jmp
stc
je
and
out
dec
sub
hlt
out
fistpll
push
push
xchg
sub
das
je
mov
popf
mov
int3
iret
ret
dec
sub
pop
xchg
out
imul
adc
shlb
push
xchg
out
sub
scas
and
outsb
inc
inc
mov
sbb
popa
sbb
sub
xor
push
cmp
xchg
jne
aam
hlt
dec
cmc
ljmp
pop
lret
aaa
sbb
cld
aam
ret
adc
arpl
stos
push
leave
ss
cmc
fwait
add
mov
hlt
pop
jge
inc
decl
clc
lods
imul
lcall
or
pop
xchg
sbbb
out
pop
imul
mov
test
in
cmc
out
jb
push
adc
xchg
je
cwtl
std
or
notl
movsb
aad
push
push
xchg
je
pop
mov
incb
jne
das
xor
inc
add
mov
ljmp
mov
add
hlt
cmp
loop
inc
outsl
leave
sbb
imul
stc
mov
cmp
cmc
xchg
fnstenv
rcrl
sbb
push
sub
das
aad
movsb
scas
jne
xchg
push
inc
sub
push
xor
scas
outsl
bound
fstps
mov
push
insb
mov
addr16
cmc
in
lret
pop
pop
and
fwait
stc
sbb
into
jne
imul
xchg
lock
push
nop
adc
loopne
jne
rcrl
ja
popa
sbb
test
pushf
je
cmpsl
mov
mov
lods
jne
aam
cmpsb
xchg
sub
jne
and
adc
jl
jne
jle
aaa
enter
xchg
outsb
inc
hlt
loopne
or
nop
mov
add
sub
mov
mov
inc
aas
pop
xchg
scas
mov
jg
out
pop
mov
or
pop
stos
jne
and
inc
mov
fsubl
mov
mov
jo
dec
push
adc
jne
popa
push
or
cmp
mov
sbb
jnp
pop
dec
daa
mov
add
das
ret
cmpxchg
add
cltd
push
mov
and
and
popa
mov
fstpl
aas
out
cmp
mov
inc
cmp
dec
addr16
cmp
jbe
lahf
adc
mov
xchg
mov
jb
push
popa
repz
cmp
dec
imul
xchg
adc
adc
adc
je
dec
mov
sub
fdivs
pop
add
mov
and
dec
inc
bswap
jae
test
push
mov
mov
lea
aaa
rol
mov
pop
xor
xor
sbb
ss
ss
mov
hlt
xchg
rorl
dec
inc
cmpl
outsl
shrl
jl
xor
std
push
xchg
mov
sbb
dec
mov
ds
hlt
push
push
and
jne
sti
cld
aam
adc
jne
and
and
unpckhps
inc
adc
out
test
xorb
jne
xor
sbb
out
int
cmp
mov
xor
leave
mov
movsb
xlat
mov
pop
imul
cmp
xor
sub
icebp
and
jne
xchg
mov
and
fs
pop
mov
pop
jne
push
stos
cwtl
sub
imul
clc
push
pop
mov
mov
jne
mov
rorb
pop
ficoml
adc
xchg
sub
popa
daa
sub
in
inc
and
jno
mov
in
mov
je
mov
xor
add
mov
cmp
hlt
popa
mov
shlb
repnz
xor
and
pushf
cmp
mov
jne
fdivrp
repz
clc
sbb
mov
jne
loopne
ret
flds
mov
jne
ror
das
adcl
mov
testb
sahf
out
call
clc
int
xchg
out
lea
inc
inc
cmc
adc
mov
idivb
movsb
loopne
or
sbb
fnsave
dec
and
pop
outsb
movsb
test
inc
push
mov
sub
lods
and
insb
jae
sub
and
pop
rorb
js
mov
cld
jae
sarl
lret
notb
mov
call
xor
ljmp
jg
fstps
push
lds
outsb
popa
or
bound
jb
inc
push
enter
add
push
outsb
clc
cmp
add
cmp
hlt
push
mov
and
movsl
lahf
clc
sbb
or
push
and
mov
cmp
es
mov
je
mov
lock
xor
mov
lods
sub
jne
pop
pop
jecxz
pop
pop
add
pop
pusha
jne
fmull
mov
cmp
jge
int
outsb
jno
xchg
and
jne
mov
andl
mov
push
xor
xor
add
ret
cmp
dec
in
add
negl
sarb
shll
dec
jl
es
cmp
cmc
mulb
mov
jno
jnp
into
sbb
gs
movsb
sbb
and
mov
jnp
es
sub
lea
xor
push
cld
je
int
mov
sbb
push
mov
je
stos
aas
ja
or
jbe
dec
popf
lods
jno
mov
jb
sbb
sbb
std
sub
fmuls
subb
lea
cld
sti
xchg
adc
xor
pop
ja
mul
mov
push
pop
cld
cmc
and
pop
std
hlt
jecxz
lds
push
add
je
sbb
faddl
adc
xor
mov
xor
jne
stos
xchg
test
frstor
pop
movsl
mov
lret
xor
jne
jmp
mov
pop
jne
lods
dec
ss
adc
sbb
push
gs
jne
fdivrs
mov
dec
out
jne
outsl
ljmp
mov
lahf
nop
and
and
jne
dec
dec
inc
in
sar
loopne
mov
call
jne
pop
test
and
popa
pop
inc
dec
jle
dec
jne
in
fdivs
ret
outsb
or
xchg
outsb
faddl
dec
lea
and
mov
xor
adcb
sub
mov
push
fmull
je
fwait
and
jmp
or
jne
pop
out
imul
mov
sbb
adc
out
loop
jne
push
and
cmp
push
lds
add
jne
jno
pop
and
jne
add
mov
jne
dec
cmp
fnstcw
sbb
addr16
and
scas
jne
sbbb
jae
pop
xor
xor
push
aam
je
dec
inc
jo
and
push
sbb
data16
mov
mov
xchg
push
jne
shrl
outsb
adc
jne
jbe
divl
dec
push
mov
test
inc
sub
xchg
jne
inc
icebp
cltd
mov
or
dec
ja
xchg
xchg
adc
xor
sbb
fistps
lds
cltd
xchg
enter
movsb
jne
stos
int3
sti
in
sub
fmull
jne
js
shlb
shrl
inc
push
bound
push
das
in
and
sub
je
cmp
cmc
push
xor
mov
je
aas
mov
pop
jmp
clc
sub
jl
adc
sub
enter
push
sbb
xchg
xchg
jecxz
aaa
out
push
xchg
sub
loopne
add
xor
fs
ds
clc
xor
xacquire
icebp
leave
aam
nop
add
mov
filds
mov
adc
sub
jmp
fsubrl
adc
sbb
out
cld
outsb
xchg
mov
lods
rorb
stc
mov
cltd
mov
jne
sub
cmp
or
jb
and
mov
hlt
and
fsub
imul
mov
lock
mov
jl
mov
es
jp
sbb
fdiv
test
loop
outsb
or
lret
movsb
and
test
popa
mov
adc
cmp
jo
dec
xchg
lds
insl
or
mov
adc
lods
cmp
ret
jne
lock
sbb
je
fs
in
rcl
stos
mov
inc
ds
jne
loopne
push
in
js
rcll
cltd
testb
dec
mov
xlat
in
ficompl
mov
mov
popa
aad
dec
je
sarb
mov
xor
hlt
dec
xchg
jne
or
jnp
inc
inc
and
jne
inc
adc
jp
outsl
or
repnz
push
jne
cmpsl
das
sbb
jnp
cmp
jb
fstpl
out
sbb
loopne
push
daa
jae
sub
xchg
movsb
in
jl
lds
add
gs
out
aas
push
adc
push
inc
mov
loopne
repz
jne
cmc
mov
dec
jno
push
push
mov
jne
fstpl
sbb
jne
pop
inc
mov
xor
hlt
ds
out
out
ret
jne
mov
sbb
jne
mov
inc
xchg
iret
addr16
sti
xchg
sub
cmp
data16
add
les
and
in
mov
pop
or
cmp
cmp
aad
mov
popf
jae
int
cmpl
je
ja
lcall
and
xchg
jmp
adc
adc
xorl
aaa
xchg
adc
scas
pop
ffree
dec
jae
xor
mov
rorb
adc
in
clc
in
aaa
sti
es
sbb
xchg
sbb
ret
push
mov
sub
je
inc
jmp
xchg
pop
adc
movsb
mov
hlt
sbb
pusha
jne
jmp
sarl
inc
xchg
test
pop
jno
pop
push
cltd
inc
jns
jne
aam
xor
gs
ss
adc
imul
loop
xchg
fidivrl
jae
scas
pop
loopne
sub
mov
sbb
inc
xor
pop
push
jne
add
mov
jne
push
leave
xchg
lret
add
xchg
dec
add
rcll
cmp
hlt
insb
push
sub
xor
jns
fnsave
stos
push
stc
shrb
push
xchg
mov
cmp
cld
push
jl
mov
test
testl
in
jne
cmp
icebp
ljmp
xchg
jne
fcmovnu
mov
sub
mov
mov
mov
add
aad
dec
imulb
sahf
and
test
push
shl
push
ljmp
imul
es
rolb
jmp
scas
and
sbb
add
cmp
or
sti
sub
mov
popf
mov
and
notb
int3
adc
sbb
mov
jne
paddsb
test
jbe
inc
loop
call
jmp
jns
inc
fdivrs
pop
or
push
aad
or
punpcklwd
ljmp
inc
mov
or
andb
cld
out
xor
sub
push
rorb
sahf
or
jbe
mov
ss
pop
xor
adc
lds
adc
cmp
fisttpll
leave
mov
mov
pusha
lea
xchg
add
inc
jmp
pop
cmp
jne
les
loop
sub
mov
into
jne
pop
aam
jo
testl
xchg
push
add
js
push
add
xchg
adc
iret
testl
or
loope
outsl
and
jae
popa
dec
sub
cmpsb
adc
shrb
sbb
cltd
mov
cs
ds
rcrb
lods
dec
pushl
sbb
data16
hlt
push
xchg
movl
lods
out
leave
ss
sbb
jne
dec
or
jne
mov
ret
repz
pop
mov
jne
or
test
int
jne
push
add
jo
xchg
test
std
add
push
movsb
pop
dec
inc
nop
inc
inc
jge
xchg
loope
lcall
jns
fdivs
imul
inc
in
mov
fistps
int3
jne
cltd
pusha
scas
enter
in
jne
aad
push
imulb
dec
cmp
jne
lcall
sbb
aas
jne
cmp
lea
enter
and
mov
or
dec
mov
cwtl
out
jp
shll
repz
xchg
sarl
jne
pop
xchg
cmp
lods
xchg
ss
dec
mov
dec
mov
mov
js
pushf
jo
inc
jne
pop
ja
jns
in
mov
mov
jne
pop
inc
cli
adc
gs
add
jae
mov
ret
and
pop
enter
xor
pop
lret
out
mov
repnz
mov
jb
inc
pop
mov
push
jp
and
lea
outsl
je
jl
add
lock
arpl
cwtl
xor
ret
ljmp
arpl
cmp
jne
mov
jb
add
mov
push
jne
out
inc
mov
mov
shrl
pop
ljmp
int
jp
mov
pop
jne
add
pop
shll
mov
push
push
add
jne
mov
pop
mov
loopne
add
movsb
jbe
adc
dec
sub
mov
addl
mov
pop
std
xchg
push
sub
sub
jl
jmp
jnp
push
arpl
in
xor
dec
lea
lcall
push
es
mov
xor
sbb
xchg
pop
and
jne
int3
cmp
pusha
cld
cmp
mov
ds
xchg
jno
xchg
sti
lea
pop
xchg
add
and
or
shll
dec
xor
out
jb
cld
sub
int
pop
leave
inc
pop
cmc
push
mov
dec
mov
in
mov
imul
xchg
and
xchg
cmp
shlb
loopne
lea
push
sbb
cmp
pushl
adc
lcall
sti
fsubrl
clc
fmuls
xchg
jne
into
scas
mov
push
inc
add
loop
cmpsb
dec
addb
lea
insb
sub
xchg
push
jb
out
mov
mov
sbb
jb
ficoml
adc
jne
mov
fbstp
lods
push
mov
pop
push
int
jge
inc
adc
ljmp
inc
nop
jno
xchg
cmp
int
mov
and
jno
xchg
fnstenv
inc
xchg
sbb
jae
jns
mov
adc
pop
outsb
jo
repnz
sbb
cltd
pop
sub
out
xchg
je
adc
dec
pop
ja
lods
mov
fs
sub
stos
sbbb
lret
repnz
jb
xchg
arpl
lret
adc
subl
xor
ja
add
out
mov
jl
pushf
loopne
test
enter
mov
push
hlt
in
loopne
xchg
mov
mov
addr16
divl
aaa
mov
xchg
loope
jno
sbb
lock
jne
shlb
push
sbb
sbb
pop
aaa
call
dec
aad
mov
xor
fidivs
insl
stos
imul
jae
adcb
jne
das
dec
mov
lcall
getsec
sahf
and
mov
outsb
das
xlat
xor
addb
outsl
add
mov
add
mov
insb
divl
push
add
cmpsb
addr16
loop
pop
xor
mov
inc
mov
lret
adc
mov
jg
jge
loopne
xor
inc
out
xchg
ja
ss
push
imul
push
cmp
pop
test
mov
pop
frstor
mov
pop
lahf
sbb
inc
sbb
mov
xchg
popa
fistps
call
repnz
daa
jmp
mov
out
add
and
xchg
xchg
or
ss
and
pop
subb
scas
into
inc
daa
test
ds
jo
pop
ret
xchg
ss
mov
hlt
xor
pop
lods
daa
add
push
ljmp
fwait
jne
pop
cld
std
pusha
dec
jle
inc
mov
lret
inc
fnstcw
jne
in
and
sub
jo
hlt
mov
nop
mov
movsb
inc
test
jmp
inc
mov
add
push
frstor
jnp
jg
jge
or
psrlw
iret
sub
push
add
sbb
dec
jo
and
stos
shl
div
push
aaa
sub
sbb
fldcw
int
fidivs
sub
xchg
adc
mov
arpl
mov
adcb
ja
test
mov
aaa
cmp
nop
loopne
xor
mulb
aas
into
std
cmc
jg
inc
lds
test
sub
rcrl
xor
mov
jne
mov
cmp
inc
in
sbb
out
inc
pop
daa
dec
jne
lret
out
pop
dec
mov
adc
cli
inc
jg
jne
fstpt
xchg
sbb
sbb
jno
adc
popf
sub
jmp
sub
daa
ret
add
jb
je
xchg
lea
sub
pop
nop
inc
push
mov
insb
fldcw
divl
pmaddwd
addl
aas
push
and
stc
add
adc
sub
or
jbe
xchg
das
push
jo
xlat
hlt
int
or
test
xchg
lret
sbb
in
fwait
adc
and
ret
mov
int
push
xchg
cmp
aaa
sbb
jb
ds
rcl
cmpb
pop
pop
test
lds
mov
mov
int3
std
aas
add
lret
outsl
icebp
daa
jne
mov
test
pop
or
mov
enter
stc
stc
cmc
in
jne
repnz
jne
mov
out
jb
sub
hlt
movsb
sub
jg
cld
mov
xchg
hlt
jg
mov
popf
push
adc
in
sub
out
xlat
cli
mov
add
out
int
mov
mov
sbb
insb
aaa
inc
adc
xlat
ret
sub
pop
push
jmp
xor
fistpl
cli
jne
xor
jne
adc
std
jg
adcl
ljmp
nop
addr16
dec
int3
popl
pop
je
adc
insl
dec
jbe
cmp
and
cwtl
addr16
pop
xlat
inc
jne
cltd
loop
fnsave
sarl
loopne
insb
mov
jge
jp
std
xor
lret
push
push
mov
imul
clts
mov
mov
cmp
dec
hlt
push
lock
jns
sahf
scas
pop
ret
jle
jne
stos
cmpsb
xor
push
or
cmp
adc
push
dec
cmp
jne
inc
test
insb
popl
push
outsb
mov
stos
pop
ret
leave
popf
add
mov
insl
jne
push
in
mov
mov
fldl
adc
outsl
imul
test
mov
jo
mov
push
sbb
je
orb
dec
push
loope
jne
lahf
aaa
push
lret
cwtl
insb
pop
outsl
jge
xor
mov
mov
fstps
mov
daa
jne
dec
popa
jp
cmp
loop
jne
mov
mov
push
arpl
cs
fildll
js
lcall
mulb
mov
inc
aad
push
add
je
cmpsb
add
lea
inc
loop
jns
je
cs
cld
pop
jge
push
pushf
push
push
xor
mov
in
lea
and
cmc
xchg
jne
cli
mov
ficomps
add
outsb
js
sub
insb
pop
das
adc
aas
lret
mov
mov
pushf
adc
jge
dec
pop
ret
cld
add
mov
hlt
dec
call
loope
mov
hlt
outsb
out
test
pop
sti
shrb
movsl
push
addb
dec
or
mov
mov
xor
je
adc
adc
es
adc
ss
jne
fcmovu
cmp
fbld
fiadds
jne
cmp
pushf
inc
jae
push
lcall
add
sti
stos
out
jno
pop
outsl
dec
xchg
jle
and
repnz
mov
jge
pop
cmpsb
outsb
out
push
mov
dec
shlb
inc
hlt
xchg
rorl
hlt
push
divl
out
fdivr
mov
inc
mov
xchg
je
mov
pop
xchg
mov
inc
aaa
js
adc
jne
aad
insb
sahf
sub
xor
iret
push
repz
and
popf
pop
sub
aad
arpl
push
pop
cmp
shll
sbb
adc
je
int
stos
repz
cmp
hlt
pop
icebp
ret
data16
mov
fcom
loope
mov
movsl
mov
jae
and
inc
imul
enter
xchg
mov
out
pop
mov
lcall
imul
jne
shl
repnz
in
jae
push
not
add
in
push
lods
adc
jns
imul
inc
jecxz
fmull
faddl
test
mov
outsb
test
int
out
inc
lds
jne
cmp
bound
jmp
call
dec
jb
mov
inc
jns
hlt
mov
jmp
je
js
mov
mov
cmc
aam
mov
ds
fwait
pop
adc
jb
sarl
dec
hlt
loopne
pop
insb
loope
pop
out
addr16
jo
leave
jne
mov
insb
jmp
mov
xor
adc
sbb
cwtl
leave
div
dec
push
movsl
cmp
je
lahf
andl
xchg
inc
push
imul
insb
icebp
inc
out
jne
lret
mov
testl
sbb
mov
movsl
das
jne
pop
xor
rcll
jne
loopne
test
add
inc
mull
dec
xor
imul
unpckhps
jne
or
ja
je
sub
in
pop
pop
or
push
and
jb
push
pop
add
nop
iret
mov
jne
jnp
rorb
outsb
lret
xor
adc
mov
push
dec
jb
jp
mov
xchg
in
add
push
imul
mov
mov
outsb
push
sbb
les
pop
faddl
sbb
adc
jbe
push
mov
cmp
popa
mov
jne
adc
xchg
jecxz
mov
or
leave
and
incb
dec
popa
push
cmpsl
and
int3
jne
mov
repnz
dec
lds
popf
dec
shll
jmp
leave
xor
or
push
in
adc
add
hlt
je
jne
cwtl
pop
add
mov
rcl
push
pop
movsl
leave
call
sbb
and
cmp
pop
xor
mov
out
adc
or
nop
dec
mov
adc
xchg
test
mov
add
sbb
cmpsl
or
repnz
push
movsl
jno
imul
sahf
adc
pop
sub
xchg
cmp
xchg
pop
jg
dec
jmp
mov
lods
jno
adc
or
lret
jecxz
cmp
sbb
inc
mov
push
ret
and
imul
jne
test
fs
daa
aaa
xchg
imul
xor
mov
dec
std
test
dec
jne
xchg
dec
imull
sub
inc
and
movsl
notl
jns
inc
dec
mov
jb
fstps
pop
mov
or
pop
xchg
inc
fwait
adc
icebp
outsb
loope
jne
cwtl
ret
add
iret
inc
jne
gs
shr
out
insb
aad
movsb
pop
insb
sbb
mov
cmp
lahf
inc
and
jne
add
call
jae
xchg
pop
fidivs
jl
leave
cmp
and
testb
inc
imul
sbb
mov
mov
xchg
push
jno
out
les
jp
in
aad
pop
xorl
dec
out
inc
stos
rcrl
mov
mov
jmp
inc
jne
mov
push
mov
leave
sbb
popf
popa
cmp
ficomps
mov
in
jne
mov
inc
sti
jne
or
iret
cmp
enter
repnz
stos
loope
xchg
nop
mov
jmp
push
cmp
imul
jbe
push
test
jno
leave
xchg
je
mov
xor
je
inc
movsb
int3
loopne
mov
mov
add
mov
test
lea
jbe
je
xchg
leave
insl
jg
add
add
mov
ret
out
jne
fwait
addr16
xchg
outsb
cwtl
sub
add
jne
mov
aad
mov
jbe
jmp
lock
daa
dec
rorb
jne
test
xor
cmp
push
mov
push
sarl
xchg
inc
mov
cmp
mov
mov
fcomps
and
lahf
sub
cmp
xor
jne
andb
cmp
and
out
out
jae
mov
hlt
jne
mov
dec
mov
insb
imull
loop
ret
pop
sahf
insb
jp
ret
adcb
jne
popa
push
jnp
cli
inc
inc
je
adc
data16
je
jmp
sbb
jl
mov
jne
in
mov
push
test
sbb
fistpll
sti
or
add
popa
hlt
mov
mov
aam
stc
jns
push
mov
ss
in
lret
hlt
add
sbbb
enter
adc
xor
dec
mov
sub
daa
jno
and
gs
jne
test
pop
jae
sbb
movsb
xor
xor
arpl
mov
int
jne
lret
push
cmp
or
jne
lea
pop
cwtl
sub
push
das
push
fisubrl
jle
inc
xor
jne
lods
out
mov
loopne
cmp
add
adc
xor
jecxz
iret
add
jnp
cmp
sub
lcall
cmp
pop
pop
ds
add
fisttps
call
xchg
pop
inc
sbb
jo
imul
cmp
xor
inc
adc
cmp
jne
subb
aam
xor
add
sbb
mov
out
adcl
outsb
sub
fs
pop
add
int3
fadds
shlb
scas
sbbl
adc
sti
dec
and
dec
data16
stc
cmp
or
jecxz
ljmp
xor
lock
lock
daa
push
and
pushf
mov
iret
xchg
adc
arpl
cmp
and
xchg
popa
andl
enter
decb
mov
in
mov
xchg
fildll
and
lret
and
pop
xor
shlb
js
cld
add
xchg
data16
fwait
sub
or
popf
arpl
or
mov
dec
sbb
test
pop
xchg
xlat
xchg
mov
fwait
ja
inc
imul
les
pushf
ja
xchg
arpl
cmp
lods
inc
and
orb
jp
and
out
sbb
push
lahf
sbb
sub
ret
xchg
push
or
ret
and
int3
cltd
clc
call
int3
aad
jecxz
js
and
mov
fdivp
sub
ret
scas
xchg
dec
add
call
lods
idivb
das
arpl
or
nop
sbb
rolb
inc
out
sbb
sub
jp
sub
mov
jnp
es
int
jb
sbb
in
cmpsb
mov
lods
jl
test
pusha
push
mov
jmp
movl
pushl
lea
jmp
inc
push
shl
bswap
pushf
dec
xchg
and
shr
push
test
pushf
mov
movzbw
mov
setb
adc
setns
mov
add
sub
lea
call
adc
lcall
mov
fnsave
pop
scas
hlt
lret
xchg
gs
mov
or
sub
sbb
into
clc
scas
adc
or
sarl
out
inc
stos
test
add
add
sub
push
xor
xor
aaa
fdivr
jae
lret
xchg
imulb
mov
or
js
sahf
jb
and
movsb
adcb
les
jg
std
movl
sub
pop
das
or
mov
mov
stos
rorb
xor
ja
sub
rclb
fidivl
sub
inc
loop
push
mov
mov
outsl
push
lcall
ljmp
and
adc
sbb
idivl
pop
mov
jl
mov
xor
loope
jecxz
pop
outsl
mov
lret
lahf
je
sbb
into
mov
push
mov
fildl
push
sbb
sahf
fstps
adc
stos
jns
or
mov
bound
std
loopne
stos
int
mov
sti
xchg
lahf
push
xchg
lret
and
popa
adc
push
jge
add
loopne
mov
test
call
add
sar
sub
add
dec
loope
and
pop
sub
test
mov
cwtl
push
cwtl
inc
out
into
mov
cmp
jb
aad
pop
das
adcl
les
mov
xchg
mov
popf
shrl
add
aaa
mov
sti
pushf
sub
sbb
les
pop
sbb
adc
and
mov
sbb
xor
pop
sub
or
dec
jbe
xchg
pop
les
cmp
jl
loop
push
scas
ja
cmpsl
cmp
dec
add
mov
pop
xor
xchg
fmuls
clc
push
aaa
pop
out
nop
movsb
sub
push
es
sbb
mov
fldt
jp
xchg
lds
fstps
popa
jb
sub
je
and
ret
cmp
inc
pop
push
cltd
and
adc
and
sub
je
enter
nop
push
jecxz
xlat
and
mulb
and
mov
inc
jae
or
dec
inc
jge
push
mov
aas
dec
aam
pop
test
fstps
loopne
ret
mov
fwait
jno
adc
xor
mov
jl
stc
lret
movsb
not
mov
pushl
jmp
clc
pushl
popl
stc
cmp
pushf
lea
ja
setnp
rcl
adc
sub
cmc
cmc
btr
add
inc
mov
shl
mov
cmc
xor
mov
test
pusha
cmc
cmp
repnz
push
call
sbb
cmp
shll
xlat
lahf
outsl
dec
push
insl
aad
lods
fistl
push
lds
loop
loop
sarl
push
lahf
push
scas
popf
fsubrp
test
and
daa
cld
cmp
mov
mov
loopne
mov
or
jmp
dec
cmpsb
inc
imul
hlt
push
lea
jae
pusha
sub
pushl
pusha
pushf
lea
call
push
jmp
lcall
xchg
arpl
add
lods
adcb
mov
xchg
lods
sub
jl
stos
jno
pop
mov
mov
lods
cmp
and
ljmp
daa
mov
les
mov
lret
test
dec
ds
mov
push
push
and
sahf
sub
clc
enter
not
mov
sub
push
ss
or
and
out
stos
pop
andb
fildll
jp
push
arpl
pop
cltd
shlb
ret
sbb
sbb
inc
test
cmp
sbbl
sub
mov
adc
movsbl
dec
and
inc
je
mov
and
mov
lods
imul
dec
icebp
popa
push
call
je
mov
sbb
imul
jno
jmp
sbb
jbe
outsl
or
sahf
add
cmp
outsb
mov
in
xor
stc
ss
iret
mov
or
or
push
ficompl
jns
push
icebp
in
mov
fwait
je
dec
pop
dec
dec
cmp
in
gs
jo
sub
data16
insl
in
pop
aam
cmp
pop
sahf
pop
jbe
movsl
sbb
imul
or
test
int3
dec
sub
mov
xchg
mov
repz
inc
cwtl
dec
out
push
cs
lock
cmp
fwait
outsl
out
adc
push
arpl
jb
ret
dec
dec
cmp
in
push
fldcw
push
repz
cmp
fs
mov
in
loop
mov
or
inc
movsb
jno
fidivl
xor
fmuls
mov
mov
inc
and
dec
cmp
roll
imul
into
in
mov
insb
pop
mov
inc
lcall
ja
pop
test
pop
push
insb
imul
xor
dec
jno
out
lods
add
jb
cld
sub
jo
mov
mov
jle
mov
add
ljmp
in
add
ja
imulb
movsl
repz
inc
mov
mov
int3
rol
in
cmc
add
es
movsb
xchg
mov
push
fstpt
add
gs
jae
test
xor
dec
mov
in
ja
js
jns
mov
cmp
xor
hlt
jmp
xor
xchg
jne
jmp
repz
jno
lea
jae
je
dec
in
outsb
mov
jns
ljmp
jmp
sbb
push
popa
and
xchg
cwtl
inc
sbb
push
scas
lock
stos
jnp
pop
cltd
enter
sub
into
adc
subl
cltd
mov
cmp
jg
in
insl
icebp
push
and
add
xchg
repnz
pusha
sub
push
dec
pop
xor
clc
gs
ds
jnp
in
xchg
mov
addr16
jno
mov
stc
inc
out
in
and
sbb
xchg
jecxz
rorl
lds
aas
pop
pop
lock
jno
lahf
pusha
in
mov
loopne
addl
or
and
jns
push
test
sbb
imul
and
das
adcl
add
aad
mov
add
shll
shll
das
pop
adc
test
inc
push
inc
ret
rorl
int
je
mov
cs
mov
int
das
inc
and
dec
mov
lods
xchg
lods
push
xchg
data16
popa
dec
or
cld
in
jns
pop
mov
push
enter
scas
jge
ds
cmpsl
jns
test
push
enter
xor
cltd
into
movsl
push
mov
jbe
inc
ret
cmp
lea
sbb
popf
in
xor
jmp
add
push
test
loopne
push
or
xchg
jns
insl
pop
sbbl
cmp
push
jae
movsl
push
loope
dec
push
pop
push
sbb
shr
jo
test
cmp
adc
test
dec
and
popf
sbb
push
cmp
dec
mov
repz
shll
and
jns
insl
xor
push
push
sbb
add
jmp
and
push
fwait
sub
jge
cmp
mov
xrelease
jge
mov
adc
inc
cmp
pop
fisubrs
inc
cmpsb
pop
movsb
lock
push
add
sbb
inc
push
and
or
inc
jp
push
push
inc
cltd
ja
out
xchg
inc
adcl
or
iret
cmc
and
popa
insl
dec
sbb
jl
xor
fadd
ds
xor
jl
divb
mov
sub
in
jmp
movsb
cmpsb
popa
sub
testl
outsl
cmp
pop
add
or
xor
lds
imul
sbb
pushf
sub
sahf
incb
jb
sub
dec
adc
in
cmc
jmp
sbb
sahf
and
push
and
jmp
arpl
in
mov
mov
fs
dec
adc
pop
fcomi
and
hlt
and
push
and
loope
es
loope
flds
or
push
jbe
inc
out
xorl
jb
jmp
sub
arpl
xor
jmp
push
idivl
and
mov
mov
test
and
inc
push
pop
mov
push
and
inc
test
sub
jge
pushl
and
xor
cmp
cmpsl
jae
sbb
in
or
xor
ljmp
and
inc
inc
inc
pushf
outsb
lcall
out
fdivs
stc
adc
lea
insl
imul
jmp
cmp
jb
lock
push
mov
in
popf
lea
jle
xor
pop
and
sub
call
dec
adc
sbb
push
les
mov
clc
stos
test
push
sbb
mov
mov
ss
dec
lock
adc
je
or
call
jb
sub
icebp
popf
jbe
jno
lds
in
push
pop
inc
mov
push
gs
dec
and
daa
inc
add
cmp
mov
inc
cld
les
inc
mov
mov
mov
loop
and
mov
and
mov
inc
cmp
sarl
sbb
popa
or
fs
inc
lods
jns
addr16
pop
adc
jp
clc
popl
push
push
sub
insl
icebp
mov
xor
hlt
cmp
int
sub
insb
push
jnp
cmpsb
pop
xor
cld
outsb
ds
cmp
je
mov
cmp
mov
lea
xor
xchg
pop
push
dec
data16
xor
movsl
insl
xchg
aas
fsubl
movsb
xor
popa
ljmp
sbb
stc
dec
lock
enter
cmc
push
mov
bound
in
cmp
push
xchg
mov
std
outsb
nop
push
fucomi
inc
mov
fs
dec
dec
lahf
insl
mov
stc
iret
out
es
mov
lea
fmuls
jle
dec
inc
xchg
clc
stos
mov
or
adc
cmp
or
outsl
gs
sbb
jecxz
and
mov
pop
daa
loopne
fstl
mov
pop
js
rclb
sbb
shlb
inc
push
push
xor
pop
insl
jge
inc
inc
push
or
mov
lock
out
in
xchg
fs
push
adc
xor
test
sbb
mov
imul
adc
pop
mov
jbe
xchg
insl
mov
and
push
insl
nop
sarb
pop
dec
xor
cmc
adc
clc
movsb
cmp
sub
push
sbb
mov
inc
testb
les
dec
pop
test
pop
push
xchg
xor
jns
les
out
push
aas
jbe
add
push
out
insb
pop
cmp
cli
sbb
cmc
mov
ja
dec
xchg
iret
dec
sbb
adc
lock
ljmp
push
pop
aam
jbe
clc
addb
jno
jnp
push
inc
sub
inc
shrl
imul
mov
mov
lea
xchg
jp
cld
iret
sbb
decl
inc
out
in
dec
xor
push
out
mov
and
mov
sub
dec
dec
call
lea
das
rcr
aam
lea
je
sbb
adc
mov
and
cmp
mov
push
fmuls
insl
push
dec
pop
dec
xor
dec
xchg
repnz
adc
outsl
and
dec
push
xchg
adc
cmp
out
xchg
or
mov
dec
pop
fisubrs
je
pop
pop
sahf
sbb
dec
add
int3
in
mov
xchg
push
sbb
dec
push
xor
fimull
push
jno
lcall
cmpsb
pusha
pop
ljmp
xchg
inc
mov
push
fildl
inc
in
xor
mov
inc
lea
jl
inc
fbld
pop
rorl
std
daa
into
pop
cs
adc
pop
daa
popa
movsl
pop
loop
or
es
cmp
imul
repnz
lods
add
lods
dec
xor
lods
std
xor
xchg
jns
aam
jp
pop
and
loop
mov
mov
fs
push
aad
mov
in
cs
neg
inc
lock
popa
jge
cmp
xchg
dec
push
call
dec
jge
and
push
and
insl
mov
into
hlt
sarl
add
mov
and
out
stos
faddl
cmp
cmp
lods
push
xchg
pop
sti
xor
push
sti
rcll
push
adc
push
adc
inc
add
test
xchg
mov
mov
icebp
cmp
mov
mov
iret
movsl
or
les
mov
push
pushf
filds
cmpsb
pop
out
and
inc
out
fdiv
ficompl
and
popf
das
xchg
mov
lods
and
fucom
mov
rcr
push
inc
insb
popf
pop
testb
mov
popf
mov
stc
mov
or
addr16
sub
dec
jmp
jecxz
daa
cmp
popl
push
cmc
jl
mov
jbe
mov
pop
xor
pushf
jae
lea
mov
dec
jbe
fsubrp
repnz
insl
loop
aam
popf
push
in
inc
push
ss
sbb
popf
out
test
mov
lea
jae
xor
and
nop
or
addr16
sub
or
popa
sub
pusha
lret
and
inc
cwtl
mov
mov
dec
jge
in
mov
dec
mov
push
xchg
in
imul
mov
popf
sahf
test
repnz
test
sub
push
clc
pop
jmp
push
arpl
ljmp
dec
adc
push
leave
and
inc
sbb
sub
inc
inc
cmp
mov
scas
js
inc
pushf
xor
inc
movsb
dec
xchg
int
xor
lcall
popa
test
push
std
pop
xchg
insl
push
imul
mov
add
xlat
dec
inc
lahf
and
fdiv
enter
jbe
or
cmp
sub
cmp
xor
push
aas
push
cmp
cs
xor
jg
push
fmull
pop
mov
mov
add
mov
cltd
mov
int
fildl
jge
lea
inc
adc
loopne
lret
cmp
loop
je
shll
stos
mov
xor
push
aas
mull
icebp
sbb
pop
and
je
push
sbb
fisttps
test
pop
imul
lock
das
pop
push
dec
jge
adc
pop
pusha
and
mov
insl
mulps
mov
sbb
and
lds
lea
insb
push
cmp
test
push
imul
inc
mov
or
pop
int3
push
ret
shl
jg
fbstp
push
in
or
pop
fsubs
xlat
fsts
insl
add
jb
in
inc
in
pcmpeqw
subl
and
lods
jae
jno
xor
stc
pop
icebp
cmpsb
insl
xchg
cltd
push
sbb
or
lock
and
pop
add
loope
lahf
mov
cltd
xchg
pop
inc
dec
enter
fistps
ljmp
mov
mov
push
inc
icebp
xchg
inc
iret
mov
mov
xchg
and
cmp
fdivr
push
pop
out
pop
aas
push
sub
loop
fucomi
sbb
mov
push
mov
inc
and
pusha
or
sbb
add
xor
popa
in
in
cmc
pop
xor
jecxz
cmp
sbb
repz
sbb
cmp
ds
jns
mov
out
mov
fs
push
insl
inc
aad
sbb
int
outsb
push
jb
xchg
xchg
xor
in
xor
outsl
test
and
pop
stos
insb
pop
orl
fs
outsl
sbb
sbb
sbb
mov
xchg
inc
aas
pop
push
xorb
bound
fwait
in
lock
inc
push
mov
push
jge
mov
mov
les
dec
jno
popa
sub
push
push
rcrl
in
std
jb
and
repz
out
fsub
sbb
jmp
dec
mov
or
sti
xchg
mov
xchg
lret
out
aaa
push
leave
fnstcw
mov
and
movsl
jns
out
jmp
outsl
out
aam
pop
data16
stc
int
icebp
movsb
negl
sbb
pop
xor
fs
pusha
lret
xchg
mov
ss
adc
insl
jmp
or
xchg
nop
mov
stc
lock
ss
rdmsr
mov
sub
jnp
int
push
jbe
jge
jmp
repnz
stc
cmp
jge
icebp
movsb
jo
lock
arpl
arpl
into
stc
mov
or
push
out
jge
fs
mov
call
js
icebp
gs
mov
aaa
stc
fs
data16
mov
jl
push
xchg
mov
bound
addr16
addr16
push
xor
mov
mov
lock
push
xorl
xor
in
out
notb
imul
mov
push
lret
push
fs
push
xchg
insl
sbb
lock
imul
test
imul
into
stc
scas
mov
gs
jns
out
mov
insb
xchg
js
fildll
xchg
add
testb
push
and
push
insl
out
notb
outsb
or
mov
jnp
cmpsb
loopne
jns
das
outsl
dec
pop
stc
test
insl
mov
js
outsb
out
movsl
push
ja
jl
sbb
lock
insb
ret
pop
xor
jno
loope
stc
jnp
roll
popa
aam
jb
ret
mov
push
in
ja
mov
xorb
fdivs
cld
das
jae
jge
cltd
adc
fs
js
insl
loopne
notb
je
test
and
xchg
xor
js
fistl
ljmp
sub
scas
aad
insl
clc
and
stc
in
lahf
xchg
lahf
gs
cmpsl
adc
push
xor
or
pmovmskb
hlt
test
or
test
dec
lcall
push
cmp
movsb
cli
or
in
cmpb
push
in
push
sbb
sbb
data16
sub
jno
xor
inc
sub
xchg
jl
mov
xor
mov
jmp
and
cmp
ja,pt
dec
test
mov
lds
addr16
lods
fldt
test
dec
adc
fimuls
xchg
mov
pop
into
jl
xchg
fbstp
xlat
shlb
adc
js
dec
dec
clc
inc
bound
lahf
jg
in
scas
cs
inc
in
jo
inc
aas
mov
sbb
aas
ljmp
test
jns
cmpl
mov
jb
movsl
sbb
fdivrs
call
test
repnz
loopne
in
ret
jecxz
shll
popf
dec
add
sti
scas
jae
jae
inc
push
cmp
mov
push
xchg
in
mov
test
jp
mov
loope
mov
jp
dec
pusha
mov
movsl
repz
insl
add
test
mov
fstpt
das
lea
sbb
dec
mov
data16
cltd
ss
scas
jnp
popf
jae
test
sbb
mov
inc
lea
jp
test
jnp
mov
sub
mov
jnp,pn
mov
in
xchg
push
insl
lahf
mov
popf
mov
lret
jl
dec
popf
pop
add
mul
add
xchg
stos
mov
out
adc
jl
pop
aam
push
in
xorl
xlat
out
push
pop
movsl
jge
lcall
cltd
push
cmpsb
add
shrl
sbb
lock
icebp
jge
ret
mov
jge
in
cmp
mov
movsb
shll
push
dec
cli
push
cmp
lahf
jle
mov
outsb
fstpl
inc
test
lea
jge
js
aad
in
jle
mov
cli
out
adc
adc
mov
xor
mov
cld
dec
jle
nop
or
jmp
loope
cmpb
popf
xor
cmp
mov
jg
mov
fbld
test
inc
cmpsl
das
fcoms
imul
popf
sub
hlt
insb
lock
pop
mov
push
push
test
cmp
inc
sbb
push
in
movsl
mov
add
inc
js
xor
cli
sti
cwtl
xchg
mov
mov
ljmp
rolb
mov
and
dec
outsl
and
in
sub
pop
lea
fildl
fildll
je
mov
adc
pop
cwtl
test
inc
int3
add
mov
cmp
gs
roll
push
mov
fidivs
push
adcb
in
xchg
adcl
or
fisubs
adc
shrl
fs
arpl
mov
pop
popa
cltd
lcall
and
fidivl
xor
push
inc
jmp
ja
xchg
push
aad
and
push
dec
rcl
das
pop
push
gs
push
popf
dec
adcl
mov
xor
jge
xchg
mov
subb
dec
push
mov
mov
dec
adc
imul
enter
out
adcb
push
xor
cmp
mov
mov
push
jo
add
mov
adcl
insl
imul
push
mov
scas
lods
dec
pop
imul
imul
lret
push
or
xor
push
std
dec
pop
aam
test
popa
adc
addl
jecxz
or
in
rcrl
xor
sbbl
je
pop
std
es
sbb
mov
loope
pop
push
out
in
orl
movsb
adcl
dec
in
push
das
add
inc
jbe
xchg
pop
dec
iret
xor
jnp
into
xchg
insl
cmpsb
xchg
jmp
pop
outsl
mov
rcr
fidivl
sahf
sub
xchg
jb
sub
test
dec
dec
or
adcl
iret
in
lret
pusha
xchg
xchg
rorl
push
mov
jns
jmp
push
inc
adc
dec
inc
out
xchg
aad
in
insl
jp
dec
xchg
mov
leave
pop
aam
mov
cmp
fimuls
ror
push
sub
or
orl
lock
push
rorb
popa
fcomps
sbb
into
and
mov
lock
jns
mov
dec
pop
sbb
push
push
adc
mov
das
cmp
lret
cmp
push
notb
add
cmp
sbb
cli
fs
mov
cwtl
sbb
sub
pop
mov
jbe
push
cmp
insl
or
pop
or
dec
ret
inc
lods
test
loope
cmp
jo
mov
lock
push
dec
nop
imul
rclb
in
orl
or
cmp
out
clc
sub
and
test
out
fisubrs
mov
lret
bound
adc
ret
and
and
pop
and
xchg
movsb
xchg
dec
fisttpl
cltd
shl
lock
mov
fistl
xor
cmp
add
inc
orl
mov
outsb
jecxz
clc
push
test
notb
sbb
adc
pusha
in
and
gs
mov
pop
xor
and
push
jns
stos
aam
jns
stos
pusha
mov
mov
aam
jns
cmp
add
imul
sbb
gs
das
mov
push
insl
aad
cs
rcrl
or
sbb
in
inc
clc
xor
jg
stos
pop
and
fidivs
and
jge
mov
out
jge
iret
jecxz
andb
int3
xchg
sbbl
adc
icebp
xor
lock
xchg
xor
lahf
mov
xchg
les
pop
xchg
repz
aad
rclb
mov
mov
mov
adc
sbb
lret
xor
sub
mov
sbb
sti
jbe
push
inc
insl
jns
xor
cld
inc
xor
xor
lock
or
repz
pop
mov
xchg
adc
loopne
rcll
adc
xchg
sub
out
movsb
loopne
in
jno
sub
adc
push
jecxz
mov
mov
arpl
dec
adc
mov
xchg
mov
mov
in
pop
xchg
or
mov
xchg
cmp
xchg
sub
add
xchg
xchg
or
repnz
inc
ljmp
inc
int3
pop
and
push
sarb
adc
xor
arpl
in
and
cmpl
xor
outsl
fcoml
rorb
add
and
in
xor
je
inc
outsb
mov
shrb
sub
repz
outsl
je
add
mov
adc
les
pop
jno
data16
shr
jbe
inc
cmc
adc
pop
int
mov
push
push
pop
stc
insl
imul
xchg
lcall
jae
insb
and
out
xor
aam
sub
pop
stc
and
jmp
jg
sahf
lret
loop
sbb
pop
push
push
and
xor
aad
push
icebp
adc
stos
inc
mov
test
daa
xchg
dec
cmp
rorl
loope
scas
icebp
out
jno
xorb
in
lock
ljmp
push
in
lock
dec
ja
imul
jge
xchg
xchg
imul
xchg
insl
cli
test
push
jge
and
adcb
xor
xchg
mov
jmp
xor
xor
xchg
std
and
sbb
cmc
out
and
aas
les
or
vpermil2ps
xchg
push
loopne
dec
lret
xorb
add
in
xchg
int
push
fistl
and
xchg
pop
xchg
pop
xchg
pop
xchg
mov
or
insb
and
push
xchg
nop
int
ss
xor
cwtl
inc
cltd
adc
mov
mov
dec
gs
cwtl
leave
push
das
cwtl
int
mov
jns
imul
pop
mov
sub
ljmp
mov
cltd
ljmp
xor
xchg
push
aas
mov
repnz
jbe
inc
imul
and
xchg
or
ret
sub
inc
lock
mov
xor
mov
mov
jmp
xchg
dec
mov
lcall
mov
gs
xor
mov
add
inc
sub
sbb
mov
jae
cmpsb
mov
aas
cmp
mov
jns
aam
and
cmp
cmp
add
inc
iret
dec
jae
aam
sbbl
lock
stc
in
insl
cmp
insl
inc
sub
fwait
adc
xor
int
out
imul
ret
addr16
ja
mov
lods
add
sub
sbb
ss
jmp
clc
in
mov
sub
sub
jbe
movsl
das
push
jl
fidivs
jns
add
mulb
xchg
xor
test
add
push
mov
ja
iret
repz
pushf
insb
icebp
push
push
loopne
xchg
out
test
cmp
inc
mov
xor
mov
loopne
jg
loop
pop
addl
mov
je
in
push
int
xchg
inc
ret
cmpsl
xchg
popa
popf
sahf
dec
mov
sahf
aas
adc
xchg
ret
imul
jl
push
sbb
xor
cmp
sbb
push
cmp
sbb
mov
dec
out
xor
cltd
dec
and
sub
push
mov
lahf
adc
fs
cs
insl
icebp
mov
push
test
pop
ljmp
mov
lahf
inc
pop
dec
inc
jmp
push
push
dec
sub
clc
xor
je
xor
adc
fwait
mov
outsl
fdivr
push
ja
fmuls
pop
ds
pusha
insb
push
scas
mov
pop
repnz
and
cmpsb
cvtps2pd
and
pusha
mov
dec
xchg
cmp
mov
dec
mov
pop
dec
inc
inc
insl
adc
repz
dec
movsb
pop
xor
je
insl
cltd
pop
push
cmp
jb
xchg
jg
xor
out
jo
sub
xor
out
je
jp
or
xchg
in
pop
xchg
mov
dec
loope
add
imul
imul
dec
xchg
fisttpl
mov
jecxz
loopne
push
ret
jns
jge
out
sbb
lret
popf
xor
sti
mov
mov
jo
push
adc
push
pusha
cmp
dec
mov
add
in
std
gs
xrelease
jns
mov
adc
dec
out
jp
test
or
pop
cmpsl
add
insl
enter
ret
mov
xor
xor
push
aas
clc
jp
pop
shr
mov
rolb
mov
jmp
fiaddl
lea
sub
push
xor
push
adc
or
xchg
mov
push
mov
fildl
inc
into
mov
pop
and
mov
add
inc
and
cld
mov
inc
ret
pop
arpl
lea
jp
bt
mov
sbb
lahf
push
and
pop
mov
xor
sub
lds
scas
icebp
stos
lods
fs
sbbl
sbb
cmp
or
out
in
ret
add
nop
push
outsb
mov
inc
das
mov
push
test
movsb
call
or
je
aad
arpl
gs
sti
jge
das
sub
std
insl
jge
je
out
les
jge
sub
dec
icebp
xchg
pushf
jb
fs
dec
ficompl
push
dec
ss
adcl
jl
push
in
cs
daa
stos
pop
inc
mov
aam
xor
mov
xor
push
in
lods
cmpsb
and
pop
xor
mov
xor
push
in
cmpsb
test
and
dec
cmp
pop
xchg
mov
ja
push
das
das
inc
les
arpl
and
sub
xchg
mov
insb
cmpsl
lahf
jmp
test
cs
sbb
hlt
mov
xsaveopt
xor
in
movsb
lea
dec
pop
jo
mov
adc
adc
inc
out
es
out
cmp
dec
xor
push
decb
jb
test
mov
test
jo
lret
pop
sub
push
jns
in
test
add
pop
push
push
sub
push
test
loope
nop
push
pop
test
cmpsl
fmul
pop
xchg
ja
loopne
jmp
add
insl
int
popf
pop
and
xor
scas
push
and
push
in
and
popa
inc
gs
aad
or
mov
aad
adc
out
and
push
mov
push
mov
push
in
push
push
dec
out
lea
popf
pop
jl
shll
stos
popa
pop
daa
mov
xor
xor
out
fs
sub
popa
pop
ret
push
dec
sbb
or
xor
loopne
rol
movsl
cltd
add
push
push
in
lods
mov
scas
fs
jle
jecxz
repz
stos
add
icebp
pop
push
gs
jl
in
ja
xchg
shrl
mov
shll
adc
sub
sub
lock
es
rorb
or
out
xor
jbe
in
into
xor
jns
add
pop
sbb
lea
clc
lods
icebp
cmp
fs
in
jae
stos
lock
push
dec
inc
inc
lahf
jecxz
sbb
jmp
sub
ljmp
add
sarb
inc
lret
lods
push
lods
out
aam
lods
imul
xchg
push
adc
loop
adc
lods
inc
shlb
xchg
pop
rcll
push
inc
fs
pop
ffreep
nop
subl
scas
adc
dec
jp
cwtl
in
xchg
in
loopne
inc
jl
push
fldl
popa
mov
repnz
inc
cmp
pop
push
fs
jmp
icebp
nop
jo
ds
fs
pop
fidivl
lods
cmp
int
scas
sbb
xor
cwtl
cld
bound
cmp
movsl
add
arpl
inc
sub
scas
ljmp
push
in
add
arpl
fsubl
repz
cmpsb
jge
dec
scas
test
inc
cmpsl
je
gs
xlat
popf
insl
ret
mov
jmp
and
mov
cwtl
push
push
gs
rol
inc
scas
pop
sub
leave
cmc
sbb
sub
adc
std
fwait
cwtl
sub
dec
xor
aad
and
sti
iret
push
inc
cmpsl
das
leave
push
push
shrb
mov
gs
xor
mov
xor
mov
mov
mov
mov
lock
mov
push
mov
inc
xchg
scas
push
lods
test
pop
popf
mov
out
int
pop
sub
jo
dec
mov
dec
adc
pop
cmpsl
dec
aas
loope
jns
dec
mov
push
jge
sbb
push
mov
sbb
push
mov
xor
mov
mov
jge
cmp
enter
in
bound
push
pop
jne
gs
xchg
enter
imul
or
or
mov
sbb
sub
xor
mov
adc
cmp
data16
cmp
mov
push
fs
bound
fsub
xchg
ror
insl
pop
or
pop
xchg
xchg
in
xorb
xchg
lods
imulb
jno
loope
lods
inc
xor
jno,pn
inc
adc
jo
push
mov
push
sub
cmp
cmp
lea
xchg
aaa
mov
adc
mov
ss
mov
mov
out
mov
cs
adc
les
mov
sub
jbe
jo
test
pop
in
mov
add
jl
xchg
sbb
mov
loopne
stc
stos
mov
imul
stc
xchg
push
cld
pop
lea
mov
add
and
jle
dec
jecxz
lock
call
cmp
add
sti
mov
nop
fcmovb
mov
mov
mov
cmpl
mov
cmpsl
popa
sub
push
mov
push
stos
cltd
push
sbb
ja
push
mov
jae
mov
cltd
jo
int
notb
jle
fs
mov
and
and
add
loopne
loope
fdiv
or
fisttpll
hlt
sbb
in
jno
sahf
mov
sub
pusha
xchg
mov
fs
or
mov
jo
ljmp
leave
cmpb
mov
int
fstpt
cs
pop
je
cmpsb
jle
aam
int3
jne
mov
push
mov
adc
mov
and
js
xor
pop
adc
mov
dec
stc
mov
pop
rcll
mov
test
shl
in
pop
xchg
push
mov
inc
xor
pop
mov
clc
pusha
in
cmpsb
roll
sar
adc
cmp
sbb
dec
rcrl
ret
pushf
ret
push
roll
fadd
mov
insl
dec
sti
pop
jnp
out
insl
ret
ret
out
push
enter
ret
inc
xchg
pop
adc
pusha
in
push
lock
pop
ret
notb
sbb
and
jmp
test
icebp
adc
push
test
scas
xchg
in
call
faddp
cmp
lds
push
jns
lahf
inc
inc
lds
mov
lds
xchg
pop
filds
ret
icebp
adc
movb
pop
pop
cmp
mov
jo
push
lods
jno
pop
cmpsb
cltd
adc
mov
outsb
push
adc
sub
dec
xchg
rol
rcrb
ljmp
aad
scas
sti
xor
inc
mov
sbbl
test
cmp
leave
push
das
gs
push
dec
xor
pop
sbb
lret
lret
fs
stos
cltd
sub
xor
aad
filds
inc
insl
cltd
dec
sub
and
add
and
xor
insb
loope
and
sub
jg
jno
dec
push
mov
shrb
gs
nop
push
adc
push
inc
insl
xchg
testb
lret
adc
adc
aam
mov
and
movsb
cld
leave
out
out
cmpsl
cwtl
xchg
cmp
adc
das
testb
push
leave
lahf
push
leave
pop
push
stc
leave
lahf
inc
ret
pop
add
daa
adc
jno
mov
lret
aaa
or
ljmp
ja
or
cwtl
aam
lret
inc
jle
fnsave
xchg
push
sub
popf
dec
xchg
out
in
aad
or
add
push
bswap
sub
inc
mov
add
cmc
pop
pop
sbb
int3
cld
movsb
sub
js
les
add
push
sti
dec
popf
jecxz
out
movsl
dec
or
mov
xchg
add
cmp
lcall
xor
inc
int3
push
fists
sbb
mov
sbb
fbld
sbbb
push
int
push
mov
gs
dec
xchg
xchg
stc
int
push
lods
lds
pushf
test
int
dec
cli
cmc
inc
ret
xlat
rclb
dec
push
inc
ror
sbb
dec
jae
test
sbb
push
lds
into
xor
mov
pop
inc
cmc
mov
inc
add
mov
stos
insb
pop
lea
stos
pusha
fwait
cli
adc
addr16
into
test
mov
addr16
into
mov
iret
mov
cmp
flds
iret
fs
iret
mov
xchg
sbb
pop
iret
rclb
adc
fucomi
sbb
push
in
inc
sub
fidivrl
shrb
inc
sub
outsb
lea
jbe
xchg
jmp
and
call
push
loope
jl
pmaxsw
fdivs
nop
sbb
jns
adc
inc
rolb
xor
pop
scas
adc
push
pop
push
push
cmp
jbe
dec
lret
push
fistps
or
mov
and
inc
shrb
lock
roll
jp
lds
inc
sbb
ss
pop
or
rorl
xchg
push
mov
shlb
shlb
out
leave
repnz
fs
fisubrl
hlt
jnp
cmpsb
in
add
enter
test
xorl
aas
test
or
gs
shlb
lods
xor
aam
or
shl
push
in
icebp
rcrl
push
psrlq
mov
sarl
cmp
sbb
adc
sub
mov
add
push
les
mov
lret
aam
xor
andl
mov
aaa
push
cmp
insl
xchg
push
test
fistps
les
in
add
sub
and
and
movsb
and
mov
insl
xor
push
xchg
je
aam
and
iret
inc
das
mov
aas
loop
test
adc
sbb
mov
xlat
in
mov
xchg
xchg
loope
sbb
mov
sbb
insb
js
add
and
shll
and
mov
xor
daa
lods
mov
jg
aam
adc
add
push
lret
sub
in
push
pop
hlt
ljmp
in
xchg
adc
sbb
bnd
not
psrad
fmuls
mov
lock
or
pop
sbb
push
xorb
mov
push
out
lods
xchg
enter
sbb
sub
mov
clc
mull
adc
int3
into
lahf
push
cs
fnstcw
mov
sar
xchg
movb
cmp
mov
insb
pop
fldcw
pop
pop
mov
jae
fldenv
mov
stos
xchg
lods
lret
fimull
push
loope
out
call
out
gs
push
ljmp
adc
in
fsubp
push
cltd
sbb
imul
xor
lods
fucomi
stos
push
pop
aad
jns
clc
roll
cmpsb
sbb
pushf
and
xchg
pop
jl
imul
sbb
xchg
jl
es
pop
xor
rolb
mov
xchg
mov
int3
test
cmp
bound
fucom
mov
or
adc
orb
pushf
mov
and
decl
add
adc
test
push
movsb
jb
rclb
mov
dec
sbb
ffree
sub
xchg
xchg
loope
push
jo
push
sub
xorl
and
subb
in
cltd
jl
dec
and
in
mov
iret
and
and
rorl
mov
mov
in
lods
lret
pop
xor
xchg
es
popa
test
push
xor
jl
adc
pusha
in
mov
xor
in
mov
add
sub
jno
adc
lds
xchg
push
or
and
push
les
or
in
pop
popf
rorl
pop
add
pop
and
mov
or
scas
in
enter
pusha
in
mov
pop
push
rorl
add
sbb
push
mov
in
sbb
cld
in
push
data16
adc
dec
push
imul
add
cwtl
idivb
inc
lds
loope
adc
adc
push
jns
shl
push
add
adc
inc
push
or
xchg
and
xor
push
cmp
les
push
imul
loope
fs
in
xchg
xor
les
fisubs
fldenv
pop
int3
xchg
pop
fs
cmp
adc
pop
pusha
in
mov
movsl
lahf
adc
fs
pop
and
jecxz
adc
repz
and
out
lods
icebp
xor
inc
push
or
inc
cmp
inc
and
push
dec
add
pop
sbb
aam
adc
js
dec
push
and
scas
loop
cmp
and
lret
cmp
out
inc
push
add
inc
cmp
and
push
inc
add
pop
sbb
aam
adc
stos
dec
cmp
adc
movsl
in
inc
mov
lea
xchg
lea
in
cmp
daa
inc
pop
lea
loopne
lret
mov
inc
into
xor
jae
scas
xchg
and
les
sbb
repz
jecxz
inc
pop
in
in
pop
mov
sbb
movsl
aas
in
in
fstl
add
mov
jae
or
mov
jnp
mov
sbb
gs
sub
mov
dec
popf
bswap
popf
lea
sbb
sub
mov
daa
popf
or
cmp
pop
rol
test
cmp
xchg
out
leave
andb
ja
js
or
loop
fcomps
mov
out
cmp
mov
sub
push
pop
mov
in
ret
xor
out
lock
icebp
mov
pop
or
out
testb
pusha
insl
das
leave
adc
sbb
sub
out
adc
test
cmp
pop
push
test
fcoms
push
sub
cmp
mov
xor
test
cmp
jecxz
out
xlat
mov
mov
mov
or
leave
sbb
out
shlb
in
lahf
xchg
out
and
clc
push
xchg
sbb
add
sbb
inc
sbb
cmpsl
pop
xor
cltd
sbbl
mov
push
clc
push
shrb
jecxz
push
inc
in
cltd
sub
jnp
push
jmp
push
lock
dec
insl
pushf
push
and
xchg
pop
push
cltd
call
fs
xchg
jecxz
dec
mov
push
call
imul
pop
stos
push
fistps
leave
fs
mov
incb
call
test
adc
sbb
test
imul
lods
daa
mov
aam
dec
fs
int
js
insl
icebp
mov
fmuls
lret
fs
xlat
mov
cld
and
jmp
xchg
push
out
cld
int3
and
pop
mov
add
ljmp
ljmp
jae
sbb
in
icebp
in
adc
pop
push
xchg
sbb
in
in
dec
in
and
stc
sbb
fistps
push
stos
in
adc
and
insl
jle
and
sbb
pop
das
cmp
lods
xor
std
push
mov
in
pop
ja
out
fadds
loopne
mov
aam
cmp
call
cwtl
lcall
test
dec
stc
loopne
fcomps
xchg
pop
push
cmp
gs
mov
jecxz
insb
xchg
and
stos
jge
jmp
push
add
sbb
push
sbb
add
jg
pusha
adc
cmp
lods
out
ds
sub
adc
aaa
push
into
and
mov
popf
pop
push
dec
out
and
clc
stos
inc
add
pushl
mov
or
shl
push
sarl
int
mov
dec
xor
cmpsb
pushf
add
mov
arpl
lock
lock
dec
pushf
sub
lock
push
pop
push
stos
xchg
push
mov
pop
lcall
ret
lock
mov
into
faddl
mov
and
sub
jmp
repz
xor
sub
xor
cld
test
out
lahf
insb
inc
sub
aam
out
repnz
cld
cmp
inc
movsl
outsl
repnz
cld
jb
icebp
xchg
xor
mov
lret
rorl
lahf
push
stc
cmc
notb
in
pop
cmc
jge
sub
insb
sub
cmc
sbb
and
pop
in
dec
sub
sbb
push
pop
hlt
xchg
push
hlt
mov
adc
negl
xchg
sub
insl
fdivp
pop
ja
jmp
in
dec
testl
test
out
adc
inc
xor
das
pop
out
neg
loop
lcall
sahf
insl
aas
testb
in
pop
idivb
popf
outsl
div
push
gs
jg
lods
notl
mov
xchg
stc
add
stos
test
xchg
test
ja
adc
lea
jge
ret
jge
out
fisttps
cs
jns
js
push
movsb
jb
aaa
mov
gs
leave
push
das
stc
mov
xchg
mov
push
sbb
imul
stc
mov
iret
popa
leave
test
test
cmpsb
add
clc
daa
mov
es
dec
daa
mov
mov
dec
xchg
bound
sbb
lahf
sub
jp
iret
pop
sbb
mov
inc
js
push
enter
sub
xor
shl
pop
fs
mov
pop
inc
sub
imul
lds
enter
push
sub
mov
iret
push
dec
gs
cli
leave
scas
das
cli
jmp
add
cmp
ljmp
cmpsb
xor
out
mov
sub
or
adc
push
gs
jg
sub
xor
rep
test
test
ljmp
lock
push
jp
jne
sub
rcrb
xor
cs
push
cmp
and
sub
jp
iret
xor
mov
mov
leave
sub
jp
iret
test
int
icebp
mov
or
push
icebp
sbb
jl
jg
xor
ret
pop
pop
fs
fistl
outsl
sub
imul
push
mov
movsl
mov
gs
fsubr
leave
push
movsl
adc
lods
iret
rcrb
xor
xchg
sub
ret
push
push
iret
and
push
jle
fwait
push
icebp
mov
iret
push
jbe
and
rorl
rsqrtps
push
sub
xor
ret
adc
and
fistl
popa
sub
lods
sub
mov
fcoms
mov
cmp
cmp
arpl
add
add
nop
cmp
insl
mov
cmpsb
dec
out
sahf
test
cs
in
out
add
push
dec
ret
movsl
in
divb
adc
cmp
mov
rorb
xor
jg
pop
popf
pop
pop
outsl
mov
xor
xor
lret
mov
jg
fiaddl
sbb
xchg
jae
pop
or
lea
cmp
xchg
dec
add
ds
incb
add
dec
adc
inc
xor
aam
insb
rorb
popa
ds
repnz
in
xchg
add
push
cmpsb
add
movsl
mov
jp
ss
sub
and
inc
insl
divb
xchg
sub
ret
cmp
jg
and
sbb
outsb
cmp
aas
movsl
lods
test
aas
push
mov
xor
loop
movsl
shll
test
add
xlat
shll
inc
movsl
mov
cmp
jno
cmp
test
add
ljmp
xor
cmp
clc
sbb
cmpsb
and
xchg
fiaddl
in
adc
or
inc
pop
mov
cmc
popf
pop
push
xchg
xchg
cltd
inc
xchg
cmp
or
xor
xchg
pop
repnz
sub
in
cltd
popa
jno
aam
out
inc
xchg
test
mov
orb
cmp
adc
sarb
pop
ljmp
mov
imul
dec
sub
add
out
gs
dec
movsl
fisubrl
cmp
movsl
stos
fs
test
sbb
shll
in
imul
dec
and
daa
mov
movsb
push
dec
fs
int
push
xor
movsl
sub
aas
or
push
fs
xchg
cmc
cmp
xor
pop
in
pushf
cmp
add
in
pop
pop
push
sbb
and
movsl
lods
lahf
in
mov
or
push
cmp
out
cld
sbb
icebp
es
loopne
push
enter
or
mov
or
lock
cmp
ds
xor
les
jge
push
jmp
in
adcb
mov
push
jge
imul
gs
in
xchg
cmp
adc
mov
lea
or
dec
movsl
and
stos
aam
inc
pop
mov
or
shll
or
in
pop
icebp
and
roll
les
or
adc
mov
or
mov
inc
inc
loopne
push
gs
inc
aam
inc
pop
mov
or
or
or
sbb
pop
icebp
pop
cmp
adc
push
clc
in
add
mov
push
mov
or
jge
or
nop
or
push
mov
cmp
movsl
iret
jge
inc
mov
or
insb
or
filds
xor
or
inc
popa
push
insb
inc
pop
std
rcll
push
jp
and
pop
stos
pusha
fistps
fistps
loopne
loopne
or
test
add
push
pop
pushf
lods
pop
xchg
push
cwtl
cmp
movsl
and
inc
pop
or
jmp
push
or
xor
push
out
cld
push
push
out
lahf
insb
push
inc
loope
xchg
mov
push
cld
jg
jmp
xchg
push
inc
paddb
dec
in
sbb
cli
mov
xor
cmp
enter
xchg
dec
pop
sub
out
call
fsubrs
jne
adc
xchg
loope
pop
in
sbb
adc
push
das
adc
mov
dec
adc
pop
insl
xchg
adc
addr16
pusha
insl
scas
adc
push
ret
add
adc
adc
and
jg
push
adc
outsb
adc
cld
es
out
dec
mov
mov
insl
adc
jge
pop
adc
jns
popf
aas
adc
adc
in
push
adc
inc
pop
mov
mov
dec
jg
je
and
iret
adc
cs
in
or
cltd
ficomps
push
dec
and
sub
in
and
fstps
add
push
and
lock
xor
and
mov
pop
dec
enter
fs
es
inc
mov
dec
rorl
loope
fs
test
gs
inc
mov
pop
mov
or
stos
inc
pop
dec
fdivrp
and
scas
push
pop
push
rcll
mov
mov
faddp
mov
and
das
adc
rorl
push
inc
mov
adc
and
addr16
dec
or
movsb
inc
cltd
ficomps
push
pop
and
mov
movsb
mov
inc
add
sbb
and
sub
in
push
fwait
and
cmpsl
mov
dec
pushf
jbe
jns
pop
dec
sbbb
ficoms
test
dec
cmp
cmp
dec
popa
push
outsb
push
gs
add
lahf
xchg
lcall
out
gs
add
mov
dec
push
fsts
mov
mov
icebp
in
mov
lea
dec
insl
cltd
cmc
xchg
imul
jne
sbb
lahf
test
lea
push
mov
sbb
mov
push
fidivrl
mov
sbb
sub
mov
sbb
pop
jns
xchg
faddp
adc
or
xor
jns
arpl
imul
test
ret
sub
jg
shrl
mov
test
movsl
pop
popf
pop
mov
and
mov
mov
jae
cmp
movsb
imul
mov
dec
adc
sub
sbb
sbbl
mov
push
push
stos
clc
xchg
mov
in
adc
push
xor
mov
inc
mov
pop
xchg
adc
push
dec
xchg
sbbb
cld
inc
les
imul
sbb
rolb
xchg
and
cmp
fidivs
test
mov
jb
jnp
mov
push
popa
push
push
xor
in
xor
decb
xchg
faddp
rcll
mov
jl
sbb
out
dec
rcrb
fisubs
add
inc
push
imul
movsl
push
push
test
sbb
xor
jnp
in
adc
insb
mov
ds
in
lcall
dec
sbb
adc
out
jb
and
or
mov
pop
in
mov
dec
lods
fmuls
cld
xor
rclb
add
push
cld
pushf
pop
icebp
adc
dec
mov
jae
sbbl
sub
icebp
xlat
jp
sti
mov
and
cld
scas
and
xchg
jo
pop
sub
cli
and
adc
and
test
jge
dec
cs
in
jge
data16
sub
push
jo
popf
mov
rorb
xchg
data16
xchg
out
inc
adc
push
xchg
in
mov
and
mov
push
fstp
xor
and
ss
in
dec
and
xor
sbb
and
push
ja
lahf
push
jecxz
divb
out
push
inc
and
call
out
insl
adc
andb
xor
push
js
xor
add
pop
lea
inc
add
jecxz
dec
push
hlt
adc
nop
enter
sbb
andl
and
inc
pop
or
add
inc
arpl
pop
dec
add
pop
pop
shlb
and
sbb
stos
arpl
inc
sbb
sbb
or
and
inc
cs
sbb
ljmp
lock
aam
test
xor
aam
and
dec
jb
and
lea
daa
test
push
mov
daa
or
andb
mov
daa
push
cmpsl
clc
movsl
mov
sub
dec
xor
xor
cmpsb
xchg
sub
scas
sbb
adc
ljmp
popa
dec
sbb
leave
aam
pop
mov
bound
pop
popa
xchg
lock
pop
dec
gs
leave
imull
sub
sub
fs
sub
inc
pop
pop
aam
sub
pop
bound
sbb
xlat
inc
aam
sub
inc
sub
sub
aaa
mov
lahf
fs
jns
mov
cmp
pop
xor
int
imulb
jg
in
aaa
xchg
popa
pusha
jg
fldcw
pop
push
in
sub
test
fs
sub
jnp
dec
dec
inc
jecxz
jg
dec
sub
adc
cmp
jae
popa
push
lea
popa
cwtl
push
inc
test
jle
aas
and
jmp
add
jmp
pop
dec
adc
xchg
das
sarb
sub
mov
adc
test
dec
lea
mov
daa
mov
adc
adc
xor
popa
or
repnz
jo
sbb
stc
mov
cli
mov
add
add
sub
push
in
ds
mov
push
mov
cs
leave
mov
adc
cmpsb
pop
int
movsb
sub
mov
leave
gs
lret
shrl
fisubl
addl
insl
add
mov
lret
gs
cs
fs
pushf
jge
cs
adc
das
mov
push
das
and
mov
adc
out
in
lock
into
mov
fisubrs
push
pop
sbb
notb
sbb
sbbl
das
push
repz
pop
jnp
mov
and
mov
les
imul
push
subl
pop
ficomps
push
mov
pop
lock
jmp
test
xor
xor
dec
xor
andl
insl
jp
mov
add
sbb
fnstenv
std
test
pop
xor
divb
mov
lods
sub
loope
xor
pusha
in
jb
push
in
in
push
cmpsb
xor
mov
aam
inc
insb
out
xor
insl
push
imul
and
cmpsb
jns
xchg
mov
xor
xlat
push
xor
push
push
std
movsl
insl
push
push
test
sbb
int3
xor
push
xor
dec
mov
mov
or
push
xor
xchg
shrb
xor
es
insl
test
int
jge
popa
jns
push
fldt
dec
and
lret
das
xchg
dec
cmc
and
xchg
lret
jmp
gs
test
cmp
enter
aas
sub
xor
dec
xor
xor
sub
ss
imul
mov
jecxz
stos
clc
mov
xor
or
loop
outsb
mov
jno
fnsave
push
mov
push
adc
push
imull
dec
lods
sbb
add
sbb
ss
das
ss
or
ss
test
xor
sbb
insb
subb
sbb
out
mov
aaa
jecxz
scas
scas
push
fdivrs
and
enter
out
aaa
out
insb
pop
je
and
xchg
cld
or
out
xchg
aaa
notb
aaa
test
fsubs
testl
jecxz
stos
and
jge
aam
cmp
mov
arpl
cmp
gs
cmp
cmp
data16
cmp
cmp
les
dec
decb
out
gs
test
sub
inc
jecxz
or
and
dec
lods
dec
sbb
movsl
add
ret
jnp
ja
imul
insl
push
sbb
sbb
jnp
pop
sbb
pop
push
jl
loopne
test
paddsb
jmp
cmp
push
sbb
jb
or
test
mov
mov
sub
in
mov
xor
mov
xor
aad
add
jns
sub
dec
mov
xchg
jge
lock
pop
and
jle
mov
loop
lret
mov
sbb
and
dec
cld
insl
cmp
jle
gs
cmp
fdivr
sar
stc
jmp
xchg
adc
xor
imull
cs
dec
lock
int
into
xchg
mov
mov
xor
push
pop
cmp
and
add
icebp
pop
jge
add
test
mov
cmpsl
mov
das
jns
xchg
sbb
in
rcrl
mov
in
dec
sub
pop
gs
in
lea
cmp
out
cs
lods
add
imul
and
mov
pop
popl
lret
cmp
xchg
add
xor
cmp
cmp
cmp
xchg
mov
mov
into
cmp
mov
sbb
xor
cmp
out
jl
mov
adc
sub
and
inc
dec
ss
push
cmp
andb
push
mov
jp
pop
mov
imul
sub
ds
pop
in
xchg
fdivrs
push
push
sti
and
pop
mov
out
ds
in
das
ds
jns
mov
rcrl
sbb
xlat
popf
inc
sahf
fisubs
mov
outsb
mov
dec
frstor
pop
mov
push
fs
loope
or
pop
dec
lock
imul
xor
aas
pop
mov
mov
xor
push
push
jno
fistps
in
jl
subb
popf
mov
leave
push
push
or
lock
js
push
call
push
and
outsb
jb
push
xorb
scas
fistpll
movsl
xor
xor
mov
test
and
pop
and
dec
pop
inc
mov
cmp
aaa
mov
jp
dec
gs
gs
cwtl
pop
xor
adc
mov
lahf
popa
xor
lods
aam
pop
imul
cmp
ret
adc
std
mov
outsl
xchg
pop
test
iret
cmpsb
pusha
adc
mov
js
fadd
insl
sub
xchg
ss
lahf
das
inc
in
dec
xor
jo
push
bound
pop
xor
icebp
mov
inc
push
adc
push
gs
dec
jmp
jno
add
je
testb
inc
pushf
cmp
push
mov
mov
fiaddl
mov
or
in
push
add
push
icebp
mov
cli
push
dec
movsb
push
test
inc
in
mov
rolb
in
faddl
das
inc
push
jge
xchg
sub
in
xor
arpl
push
push
dec
insl
enter
dec
mov
mov
aas
ret
iret
add
cli
lods
ret
pushf
inc
insl
bnd
aas
xor
push
xor
xchg
xor
lods
outsb
lods
jbe
scas
pop
push
cmpsl
leave
pop
popf
inc
ljmp
jns
mov
fs
jge
nop
pop
pushf
jge
mov
inc
xchg
cltd
aam
inc
or
jmp
div
xchg
jb
mov
pop
xchg
adc
idivb
sbb
or
mov
dec
nop
jbe
pop
dec
cld
sub
mov
jae
jl
imul
jge
lods
push
and
movsl
data16
orb
adc
lds
mov
out
divb
cmc
scas
push
dec
pop
push
sbb
xchg
dec
out
jmp
cmp
out
das
dec
dec
mov
add
push
cmovp
scas
mov
pop
add
sbb
insb
cmp
add
pop
pop
arpl
cmpsl
or
idivl
jne
dec
xor
aam
xor
enter
inc
cmp
xlat
gs
xchg
dec
ret
and
dec
mov
dec
pop
icebp
stc
gs
mov
out
aas
dec
insl
add
ret
mov
ret
push
stc
xor
dec
mov
repz
stos
gs
adc
dec
ffreep
xor
in
pop
jp
cmp
pusha
jns
ret
pop
push
movsl
dec
fbld
cmpsb
mov
dec
inc
ret
mov
sub
push
stc
xor
ret
mov
adc
bound
lods
xor
fisttpl
push
stc
xor
dec
mov
or
pop
inc
test
adc
push
add
xchg
int
push
xchg
test
imul
xor
mov
xchg
add
daa
xchg
push
fistl
loop
imul
lock
or
push
push
shr
add
into
adcb
rcrl
inc
xor
push
cmp
lods
stc
and
push
jp
sub
add
xchg
push
xor
icebp
pop
les
in
xchg
push
jecxz
adc
mov
mov
in
and
and
push
ret
xor
fwait
jmp
jecxz
dec
cmpsl
out
leave
pop
jmp
xchg
push
push
adc
insl
ficoms
jp
mov
push
xor
pop
aam
push
pop
push
dec
adc
cmp
insl
shrl
stos
push
icebp
jl
pop
jecxz
cltd
push
jecxz
fistl
push
movsl
jecxz
add
push
push
xor
dec
psubsw
outsb
mov
aam
push
pop
push
out
imul
or
push
push
jle
add
push
jecxz
es
adc
xor
fildll
mov
or
push
or
in
mov
xchg
inc
iret
leave
xorl
jmp
add
dec
mov
push
fbstp
aad
fldenv
mov
out
inc
shll
add
pop
add
mov
push
ja
dec
mov
mov
cmp
in
sbb
xchg
gs
mov
rorl
loope
mov
negb
testl
push
test
push
loope
mov
mov
mov
in
sub
insl
inc
push
or
xor
and
in
std
in
mov
aas
mov
loop
dec
pop
rclb
aad
push
call
jmp
add
insb
jmp
std
int
mov
and
pop
aam
pop
pop
add
xchg
add
jmp
in
pop
mov
add
aam
pop
sti
dec
cmp
stos
iret
pop
jmp
arpl
mov
xchg
movsb
iret
mov
dec
pop
lcall
jl
xchg
movl
ja
and
pop
sub
dec
mov
pop
jle
outsl
addr16
or
inc
pop
lock
lcall
stos
and
ljmp
pop
test
mov
mov
pushf
cltd
jl
pop
out
ficompl
mov
pop
push
sbb
out
pop
or
int3
leave
lock
imul
pop
pop
mov
in
movsl
aaa
int
jl
clc
imull
cmp
dec
sahf
pop
and
addr16
outsl
mov
inc
scas
gs
mov
in
add
pop
add
push
xchg
dec
add
mov
jp
mov
sbb
add
cmp
test
in
sub
mov
cmp
pop
xor
jae
mov
pop
xchg
jae
in
sbb
sbb
daa
cld
mov
sbb
insl
jno
in
mov
loope
fsubr
ljmp
sub
sub
mov
xchg
pusha
in
jbe
test
int3
addr16
out
ret
pusha
push
mov
test
fs
ffreep
jecxz
xchg
iret
pop
inc
xchg
dec
scas
mov
insl
dec
xor
mov
in
fstps
xchg
dec
push
pop
popa
mov
mov
jmp
jbe
fisttpl
adc
aaa
mov
jle
iret
lea
lods
jns
mov
xor
inc
mov
sub
jmp
and
pushf
or
sbb
mov
aaa
push
fucomi
std
lahf
or
in
les
or
std
add
xor
arpl
aaa
jns
push
popf
stc
in
out
adc
lock
pop
and
loope
mov
push
mov
adc
repnz
jle
xlat
jp
push
and
jae
sub
mov
push
mov
push
out
out
gs
or
aas
loope
sub
ss
subl
add
and
ficoms
adc
out
in
mov
call
popa
cwtl
sub
insl
ror
adc
sbb
gs
test
adc
push
or
gs
jg
pop
mov
xor
sub
popf
jg
icebp
xchg
mov
test
shlb
in
out
xor
jae
in
cmp
scas
pop
push
aam
add
cmp
imulb
or
imul
cmpsl
out
insl
scas
sbb
jo
test
push
and
aam
lahf
addr16
sbb
fwait
jno
or
push
push
xor
in
push
xor
rcr
pop
push
mov
mov
dec
test
cmpsl
cwtl
das
scas
jmp
xchg
xchg
mov
push
lea
adc
outsb
ss
sbb
sub
push
shl
pop
pop
repz
insl
sub
xor
outsl
xor
imul
or
mov
push
xchg
out
or
movsb
mov
pop
xchg
push
dec
xor
subl
test
sti
orl
pop
lret
push
aas
jbe
arpl
xchg
sahf
imul
mov
mov
push
aam
imul
nop
adcl
add
push
push
orb
mov
or
xchg
xchg
clc
loop
add
push
arpl
cwtl
ds
adc
sbb
insb
cmp
enter
push
sub
ss
gs
ja
int
enter
mov
push
stos
sub
jle
cltd
dec
in
add
daa
xchg
xchg
call
mov
insl
jge
int
sub
add
lret
xor
push
lret
outsb
xchg
lret
int3
outsb
js
shr
in
outsb
xchg
xchg
pop
mov
pop
mov
fadds
das
ja
lret
pop
xor
lods
les
pop
xchg
call
rclb
cltd
mov
sub
mov
or
mov
aas
add
outsl
sbb
sub
loope
arpl
repnz
ja
ret
push
cmp
outsl
popa
popa
sub
sub
stos
sub
mov
shrb
or
pushf
dec
adc
fs
cmp
dec
jge
xor
xorb
jns
cli
out
movzwl
mov
jo
xor
stos
sub
sbb
sub
dec
jo
cmp
test
dec
jo
filds
push
push
idivb
cmpsl
mov
scas
sbbb
sbb
jno
sbb
jno
test
mov
jb
fs
jb
gs
das
jb
pop
jb
in
mov
adc
cmp
jb
outsb
jb
cld
mov
out
shll
loop
out
imul
jb
daa
push
mov
fs
jae
mov
lods
add
aam
mov
mov
mov
lods
je
mov
mov
jns
in
rorb
icebp
gs
ret
sbb
imul
dec
push
icebp
gs
ret
addr16
xor
jp
lods
push
sbb
dec
push
icebp
in
rorl
xor
imul
dec
inc
icebp
in
sarl
and
pop
mov
mov
jns
lcall
mov
cmp
rcll
sbb
addl
and
inc
mov
test
ljmp
mov
jbe
pop
loope
test
shrl
inc
gs
insl
imul
jge
jno
xor
lods
popa
fldt
repz
je
xchg
hlt
lcall
add
jo
aam
repz
outsl
out
fidivs
sub
jnp
adc
push
mov
cmp
lods
jbe
jmp
push
imul
jae
mov
loope
repz
pop
sub
ret
dec
mov
add
jae
xchg
push
roll
cmp
imull
pop
in
insl
mov
inc
xor
pop
add
test
cmc
outsl
jno
stos
mov
in
filds
insb
xor
aas
shrb
mov
in
in
je
pop
inc
sbb
imul
xchg
lods
lahf
xchg
call
xor
and
test
repz
fnsave
pop
sbb
hlt
gs
jo
jle
lds
pop
sahf
ror
add
push
aad
xor
push
or
add
insb
adc
adc
jns
scas
xor
and
dec
pop
xchg
push
xchg
lea
aas
jl
loope
push
fsubrs
addr16
rcl
sbb
movsl
push
loope
pop
sbb
aam
jmp
push
sub
popa
loop
dec
gs
popa
xchg
push
in
in
xor
ljmp
div
dec
add
push
push
mov
jne
add
pop
mov
pop
sbb
add
mov
adc
arpl
push
sub
insb
out
push
test
imul
lock
jno
cmc
inc
add
lock
lock
das
push
mov
jae
je
in
push
lock
cwtl
mov
cmp
and
jmp
push
adc
mov
jmp
lret
ds
scas
mov
nop
mov
xor
outsb
and
mov
aas
pop
xor
scas
stc
fmull
divb
loope
je
push
sahf
inc
in
fs
add
sub
jae
cli
outsl
xchg
lds
fstpl
jae
jo
inc
addr16
arpl
cmp
cmpsl
int3
xor
jno
dec
sub
mov
sub
and
jae
mov
lea
pop
mov
dec
cmc
dec
das
in
imul
jbe
idivl
pop
hlt
mov
or
push
jge
xchg
dec
fldcw
shll
jbe
xor
adc
cmp
sub
mov
popa
and
xchg
adc
push
in
add
jbe
cmp
stos
int
rorb
lea
xor
in
je
and
and
push
loope
pop
scas
outsb
adc
push
daa
popa
repnz
leave
out
or
nop
mov
xchg
pop
and
imul
cmp
inc
out
mov
and
add
ret
lret
dec
imul
mov
cmp
pop
sub
fs
dec
loop
and
mov
stos
clc
sub
scas
push
push
in
in
and
sbb
adc
cli
rol
xor
pop
cltd
pusha
lds
in
fucomip
jae
add
mov
cwtl
or
xchg
inc
imul
fs
fs
sub
mov
sbb
movsl
movsl
shl
bound
push
lock
data16
pop
push
jae
jo
jmp
adc
mull
add
push
lods
lea
repnz
cmp
hlt
ss
add
hlt
cs
lock
dec
xchg
inc
pop
add
cmp
outsl
pop
and
arpl
sbb
popa
cltd
dec
imul
pusha
leave
or
in
cmp
ljmp
add
outsl
repz
hlt
mov
call
insb
mov
xchg
jmp
outsb
dec
scas
and
test
outsb
and
lahf
or
jmp
cmp
xor
sub
es
jmp
gs
cmpsb
and
dec
xor
out
aad
adc
in
bound
sub
loop
or
in
jno
add
xchg
jae
mov
push
insl
aad
ja
dec
scas
arpl
xor
push
mov
xchg
fxch
sbb
popa
lods
pop
pop
push
xchg
jle
pop
jg
push
test
cld
insl
cmp
add
xchg
jb
rorl
push
pop
popf
push
lea
sbb
test
outsl
pusha
xor
jg
mov
testl
scas
pop
mov
sbb
adc
dec
fdivl
adc
std
sub
setno
mov
frstor
sbb
gs
adc
push
jno
jno
sub
inc
jno
ja
ds
cmp
loopne
jae
inc
and
inc
popa
repz
jo
pop
mov
xor
jg
in
ljmp
bnd
outsl
push
cmp
jb
lea
loop
pop
cmpsb
add
pop
inc
add
xor
repz
and
out
sub
stc
and
push
jmp
xchg
jno
lods
repnz
test
ficomps
stc
jo
ljmp
gs
jne
popa
push
icebp
mov
addr16
jg
jno
imul
jnp
and
mov
mov
mov
imul
insl
sbb
push
movsb
and
and
xchg
xor
dec
in
mov
add
xor
and
pop
in
cmp
push
js
or
imul
xor
in
inc
sub
mov
pop
inc
lcall
sub
push
test
pop
repz
sahf
add
insb
scas
clc
outsl
xor
pop
dec
test
push
xor
pop
inc
imull
xchg
add
stc
mov
popf
push
sub
sub
out
ret
push
sbb
push
lods
repnz
out
sahf
cmp
or
dec
mov
inc
sbb
add
stos
dec
popa
enter
dec
fwait
xor
push
add
xor
movsl
or
dec
cld
push
inc
iret
in
mov
jg
xchg
push
insb
ljmp
jno
mov
lock
jbe
push
pop
in
xor
sbb
lods
or
ss
gs
push
sarl
push
je
mov
jnp
pop
dec
push
sub
in
and
shll
mov
pop
adc
push
push
inc
mov
sbb
lds
push
jo
jb
out
stos
ret
lds
sub
jo
add
and
inc
and
imul
lock
pop
adc
imul
mov
insl
mov
mov
dec
xor
je
mov
adc
add
sti
mov
stc
adc
sbb
mov
dec
out
popa
push
cs
and
cwtl
gs
jmp
sub
cmp
sbb
jmp
or
in
ds
loop
scas
mov
push
inc
adc
xor
push
shlb
ror
ds
jge
sub
scas
je
inc
mov
loop
dec
lds
dec
arpl
pusha
add
or
mov
clc
jb
in
outsl
scas
das
jno
gs
mov
mov
and
dec
pop
in
add
addr16
xor
fucom
outsb
je
xor
bound
inc
out
das
insl
or
cmpsl
aam
ret
cmp
lock
add
lahf
jae
xchg
xchg
xchg
add
lret
iret
xor
jbe
jae
xor
and
push
in
in
insb
push
jno
sub
inc
jae
and
xchg
cwtl
pop
lea
inc
pop
mov
outsl
cltd
or
loopne
pop
push
stos
jns
or
or
pop
lock
add
mov
fsubl
dec
ljmp
cwtl
and
mov
sub
pusha
pop
dec
dec
loopne
lahf
icebp
ljmp
pop
inc
xchg
int
stos
sub
push
sub
pushf
out
movsb
mov
sbb
adc
jge
sub
mov
popa
in
cmp
jmp
pop
rclb
adc
push
leave
push
adc
je
push
dec
into
pop
fisubl
in
in
jno
fildll
adc
pop
mov
je
pop
xor
inc
lods
ljmp
outsl
xor
push
jo
cmp
inc
fiaddl
push
in
and
and
inc
ss
inc
lea
mov
cmp
mov
dec
cwtl
lods
and
pop
dec
stos
inc
dec
push
dec
sub
jno
push
icebp
lods
les
imul
popa
rcr
jb
mov
aas
mov
xor
mov
push
outsl
pusha
mov
fnstenv
outsl
gs
cmp
sub
xchg
adc
data16
mov
sub
pop
lock
add
push
out
lods
test
xorb
add
icebp
jg
out
push
insl
mov
gs
dec
sub
cmp
jmp
pop
int3
gs
scas
inc
push
and
dec
inc
cmpsb
jb
dec
arpl
callw
cmp
pop
jb
jne
pop
and
fisubrs
nop
xor
test
pushf
subb
ds
test
jge
jle
outsb
xor
jae
mov
jb
dec
xor
jge
pop
ljmp
mov
jb
in
pop
sub
xor
dec
por
mov
or
push
and
and
jae
push
xor
je
out
push
pushf
mov
or
sub
fcmovbe
sahf
mov
sbb
or
push
push
stos
jbe
loop
xor
insb
out
xor
xor
popf
lea
sbb
int3
adc
xor
popa
and
sbbb
jns
cmp
imul
mov
mov
lods
movsl
or
in
push
cmp
test
and
mov
data16
sub
xor
fldcw
mov
hlt
pusha
gs
mov
or
sub
and
repnz
jp
orb
xlat
push
aas
and
insl
mov
insb
mov
dec
sub
mov
push
jg
arpl
mov
cmp
imul
outsb
stc
loopne
xchg
pop
pop
lods
mov
lock
dec
cld
or
push
push
mov
in
mov
xchg
movsb
push
addb
je
fimull
pop
insb
sub
fidivl
pop
and
jne
mov
pop
cmc
sub
je
push
popf
cwtl
loopne
loope
repz
mov
sar
in
cmp
imul
mov
push
lea
fldcw
cmc
jbe
mov
pop
cvttps2pi
and
popa
jmp
inc
mov
jmp
push
mov
sahf
bnd
dec
sbb
mov
orb
cmp
std
dec
je
fs
xor
jno
std
imul
lea
pop
rcr
insl
push
insb
scas
xor
mov
dec
mov
mov
sub
enter
dec
int3
cmpsl
ljmp
das
popfw
sub
mov
xchg
or
push
pop
xchg
lret
mov
notb
cmovne
push
in
mov
in
jb
pop
add
lea
xor
mov
sbb
push
nop
xchg
test
pop
dec
faddl
push
lahf
mov
je
imul
pop
xor
sbb
clc
adc
push
lea
cmp
mov
jno
mov
adc
dec
sbb
cmp
lahf
push
xor
push
inc
xor
in
dec
outsb
int3
movsb
loopne
pop
pop
jno
sub
scas
ljmp
jo
movsl
sub
mov
xor
mov
inc
sbb
jnp
ret
scas
push
add
push
aaa
push
je
push
outsb
clc
stos
add
mov
or
mov
adc
cwtl
insl
xchg
jno
mov
imul
add
push
popf
stc
loop
lods
fstpl
divb
stos
mov
and
dec
xchg
out
jmp
mov
dec
cmc
xor
mov
push
pop
shlb
repnz
out
sbbb
push
mov
rep
jbe
xchg
and
in
inc
in
jae
sbb
jmp
push
icebp
mov
negb
add
in
inc
mov
inc
data16
out
mov
insb
jo
mov
xlat
cld
inc
and
arpl
push
xor
and
and
es
imul
and
cli
sbb
outsb
gs
inc
and
add
push
push
xor
icebp
cmp
xchg
lods
inc
jg
xor
adc
sbb
inc
cs
test
dec
add
mov
and
adc
mov
mov
add
imul
cmp
xchg
addr16
fs
imul
xchg
ficoms
clc
popa
les
push
in
sbb
jmp
fcoms
movsb
add
fimuls
inc
mov
cmpsl
jno
add
push
call
clc
arpl
and
in
js
sub
jb
xor
cs
and
stos
cmp
stos
add
dec
cld
scas
sub
push
daa
lods
inc
into
fisttpl
inc
das
das
fmull
addr16
push
xor
fs
push
lea
les
loope
push
and
movsb
mov
jnp
es
out
out
call
arpl
mov
insl
fcoml
sub
std
xchg
mov
pushl
loope
pop
mov
jle
mov
inc
jae
push
lods
sub
sub
cmpsb
scas
jecxz
sub
push
jb
jnp
jae
aaa
in
mov
cmc
dec
jae
add
loope
lods
inc
sbb
xor
sub
leave
adc
mov
nop
in
jge
push
adc
push
sub
sbb
push
push
repnz
hlt
add
or
insl
xor
test
or
sub
gs
jmp
in
lea
lods
xchg
imul
push
loopne
pop
loope
loope
lock
lock
push
adcl
gs
jb
fwait
push
int
lock
mov
pop
in
outsb
xor
pop
lock
sbb
jge
mov
pop
gs
scas
sbb
popa
xchg
push
push
outsl
xchg
enter
movsl
push
dec
in
stc
sub
xchg
push
fdivl
lea
sub
lock
mov
mov
adc
sub
push
push
test
shll
daa
add
cmp
arpl
std
inc
or
push
cmpsb
loop
fiaddl
dec
or
and
popa
mov
roll
loop
xor
mov
push
and
sbb
mov
jmp
jnp
sbb
sub
and
xchg
inc
mov
jno
lods
imull
sub
pusha
movsl
enter
fstpt
cwtl
aas
jp
adc
subl
pop
jno
mov
icebp
jae
mov
jno
ds
or
xor
dec
xchg
dec
sti
and
dec
xlat
pop
lahf
popa
mov
in
jno
test
push
or
adc
insl
js
mov
mov
dec
into
sahf
push
lret
inc
add
xchg
inc
dec
cmp
push
iret
pop
sub
aam
mov
jo
mov
and
arpl
xor
mov
mov
adc
lret
loope
or
xor
sub
shlb
popa
sbb
cwtl
dec
int3
xchg
xor
sub
jge
es
ds
hlt
jp
cmp
aaa
pop
jno
push
fsts
imulb
and
pop
and
push
in
jmp
sarl
addb
push
ret
pop
adc
adcl
in
stos
jno
xor
mov
dec
ficomps
xchg
add
lods
dec
pop
xchg
and
and
jne
inc
mov
cmp
dec
jns
add
dec
imul
inc
in
push
xor
xor
xchg
call
xchg
out
lock
adc
jno
dec
out
inc
jbe
cmp
jo
jle
push
jmp
mov
fcomps
adc
adc
sub
inc
in
jo
dec
sub
jb
pop
sbb
xor
mov
inc
lret
insl
outsl
push
jge
imul
cmp
xor
adc
lods
repnz
xor
cmp
je
lods
hlt
arpl
or
push
loopne
dec
mov
mov
xchg
cmp
sbb
hlt
pop
add
sbb
and
fdivs
mov
xchg
jb
icebp
cmp
pop
cmc
cmpsb
pop
mov
and
push
cmpsl
pusha
jbe
push
fimuls
dec
push
cltd
add
mov
inc
push
push
test
xor
addb
cli
or
aas
cmp
sub
xor
dec
icebp
mov
dec
cmc
in
dec
sbb
jecxz
fcomi
or
pushf
sub
or
sub
loop
ljmp
popf
js
xor
xlat
aam
popa
jae
fs
adc
add
add
fwait
push
add
into
clc
xchg
mul
fcmovnu
sbb
popa
movsl
lea
sub
fldt
mov
push
scas
and
mov
sbb
push
aad
jg
sub
dec
add
insl
aam
sbb
imul
jmp
popf
jecxz
jmp
stos
cs
push
lcall
into
in
cmc
jno
ja
jmp
xlat
jo
in
stc
xchg
insl
lock
lds
xchg
movsl
and
lea
cli
call
cmp
insl
dec
repnz
imul
xor
and
ja
in
fistpll
jb
jmpw
bound
add
push
sbb
ljmp
pusha
icebp
aaa
xor
popa
sbb
bound
push
call
cmp
pop
fcomps
jne
dec
jmp
insl
int3
xorl
popa
sub
dec
dec
repnz
movsb
sbbb
sub
xor
jo
mov
sub
and
dec
test
mov
jb
push
je
pop
gs
xor
pop
dec
jns
arpl
popf
fcoml
xor
int
ret
imul
fdivrl
ret
cmpsb
mov
sub
mov
call
ss
add
and
loop
scas
es
xchg
cwtl
push
push
cmp
fs
ret
cmp
and
push
push
jg
shrb
aas
and
and
pop
mov
insb
xor
add
add
ds
lods
pop
mov
push
out
dec
fldcw
dec
xchg
pop
iret
sar
jo
fs
mov
fmul
test
and
into
mov
icebp
add
enter
lcall
or
mov
add
cmp
pop
adc
int3
popl
gs
dec
pop
xor
shlb
insb
scas
mov
hlt
das
mov
xchg
in
jb
mov
aad
jle
lahf
cmc
push
fucomi
jno
pop
and
or
pop
vmovntps
jno
pop
add
ss
fwait
adc
and
jns
popf
mov
inc
dec
jno
outsb
push
outsl
xchg
lods
jo
inc
mov
pop
loope
sub
in
je
loop
inc
cltd
jmp
imul
mov
lea
faddp
inc
sub
jns
xlat
pop
dec
xchg
pop
out
and
sbb
test
xor
adc
pop
inc
mov
mov
lock
xor
sub
jo
sub
mov
dec
sbb
pop
dec
cmp
sub
popa
xchg
push
or
fldenv
outsb
xor
cmp
shrb
or
fisttpl
shll
ds
adc
inc
push
ret
insb
pop
arpl
aad
pop
jmp
imul
test
and
pop
cmpsl
insl
sub
loop
jno
mov
push
push
xchg
fs
shll
loopne
repz
mov
pop
pop
sub
jno
popf
lock
and
push
add
pop
and
outsb
and
bound
insb
stos
das
icebp
lea
pop
mov
lahf
or
cmpsl
cltd
fs
pop
cwtl
daa
and
xchg
pop
in
lods
jne
pusha
push
cmp
push
jmp
addb
inc
cmpsl
rcrl
outsb
shrl
jmp
push
and
cs
scas
pop
or
pop
xor
lret
push
lcall
or
or
pop
add
dec
scas
jno
mov
js
sarl
xchg
add
adc
stc
sub
mov
pop
jns
xor
scas
or
and
fdivrp
loop
rcrl
pusha
repz
clc
pop
mov
stos
cmc
outsb
lea
sbb
dec
or
hlt
inc
sbb
adc
push
dec
in
inc
push
lret
mov
cmc
fimuls
xor
test
xor
and
pop
fs
ljmp
sbbb
setg
test
fistpl
xor
aam
jae
std
inc
lock
inc
add
sub
xor
and
jb
xor
jns
in
loopne,pn
jp
push
out
pop
and
push
fwait
ljmp
pop
and
out
lea
in
pusha
pop
cmp
call
jae
push
jl
sub
daa
iret
push
mov
push
mov
or
int
in
jge
sahf
test
cld
popa
lea
arpl
in
insl
sub
pop
inc
cmp
lahf
out
data16
push
dec
mov
sbb
in
daa
lods
xlat
subb
int
dec
push
jae
dec
mov
daa
xor
mov
mov
sbb
cmp
push
jg
into
add
cmp
sahf
inc
movsl
movb
dec
xor
push
cmp
addl
xchg
pop
mov
fs
pop
sub
rcll
and
jae
shll
addr16
jge
rcll
pop
adc
add
adc
sub
testb
inc
insb
mov
jp
out
leave
and
ds
xor
cmp
adc
popa
add
shlb
inc
dec
push
sub
dec
clc
sbb
or
xor
and
inc
fcompl
inc
or
jne
pop
das
lock
or
or
lret
fstpt
adc
sbb
lock
int
in
jno
cmpsl
and
push
cmc
jge
das
and
movsb
mov
scas
outsl
sub
cs
shlb
lock
into
outsl
pop
dec
sbb
pop
in
mov
and
adc
loope
fsubl
aas
shll
test
fnstenv
sub
in
dec
sub
stos
dec
loop
xor
iret
adc
mov
fcompl
xor
inc
jg
jbe
pop
sub
jg
sbb
outsb
cmp
pop
movsb
sbb
push
inc
push
es
lods
push
fstpt
push
in
test
insb
jmp
lahf
mov
inc
mov
sbb
pop
daa
and
mov
mov
push
orl
mov
jnp
or
xor
repz
fwait
sub
jo
push
cli
shlb
fnstcw
cwtl
push
add
add
mov
mov
push
jae
pop
jmp
push
pop
lret
out
push
mov
pop
in
in
or
movsl
sbb
movsl
les
push
pop
loope
and
loopne
mov
lret
xor
test
dec
in
out
jae
or
mov
pop
jbe
fistpl
jmp
arpl
adc
xor
sub
jae
lcall
inc
outsl
push
mov
or
aas
movsb
icebp
mov
cli
jno
in
mov
push
insl
repz
xor
or
syscall
and
scas
in
lea
xor
mov
mov
and
push
sti
leave
data16
push
dec
inc
pop
jge
push
das
pop
insl
in
dec
jl
add
jmp
pop
insb
lret
mov
cli
push
lea
jmp
sub
mov
xchg
mov
jno
stos
je
shr
inc
cs
or
cld
mov
push
pop
mov
aad
push
addr16
fcomps
xor
jge
xlat
pop
popf
push
jecxz
xor
pop
fnop
cli
cmp
xor
inc
imul
push
faddp
popa
loop
push
mov
clc
lods
add
sbb
pop
stc
jbe
enter
push
lret
mov
int3
mov
int3
cmp
mov
lea
cmp
ss
push
mov
add
push
out
jb
ljmp
add
adc
adc
cwtl
pop
push
jg
mov
imul
es
repnz
scas
xchg
lret
lret
jp
push
push
pusha
lea
gs
movsl
test
mov
xor
sbb
push
mov
jg
movsl
mov
repz
and
inc
sbb
lahf
pop
call
outsb
jae
push
xor
insl
insb
lods
scas
pushf
mov
cld
dec
adc
mov
outsl
gs
imul
fsubp
pushf
mov
mov
fmuls
xor
push
sbb
insb
aam
adc
sbb
je
add
cmc
jbe
or
cli
aam
cmp
add
dec
in
insb
popa
sub
addr16
cmp
je
pusha
shll
insb
jl
push
outsb
insb
icebp
divb
scas
add
adc
ja
in
or
jg
subb
inc
jae
jl
shlb
jmp
xlat
addr16
sbb
pop
ss
sbb
imul
aam
fdivs
sbbb
and
inc
repz
mov
loope
lock
shll
outsb
fimuls
movsl
jmp
outsb
add
add
iret
stc
imul
cmp
push
add
push
push
xchg
jmp
or
adc
xor
shrb
mov
mov
repnz
sbb
lock
mov
repz
lods
add
mov
or
insl
sub
jecxz
pushf
jmp
add
pop
mov
sti
and
rcrb
adc
lods
sub
mov
inc
loop
add
xchg
push
pop
mov
sub
lret
xor
mov
inc
bound
xchg
add
push
hlt
jge
decl
ficomps
add
scas
push
dec
scas
repz
mov
jge
xchg
inc
into
icebp
xor
pop
jbe
dec
jo
inc
outsb
insl
mov
push
push
fdivl
sahf
xor
pop
push
aaa
xchg
data16
mov
imul
add
insl
fidivs
in
inc
jae
inc
ss
fwait
adc
jecxz
xchg
sbb
or
jae
pop
ljmp
jmp
sub
negb
sti
and
sbb
in
pop
cmp
sbb
je
inc
add
push
jl
lea
outsl
lock
arpl
xchg
popf
cmp
or
sbb
xor
dec
mov
jp
out
push
out
mov
xchg
pop
imul
gs
rcrl
out
sub
imul
movsl
int
pop
aaa
imul
aad
mov
data16
lea
pop
push
in
pop
push
repz
pop
imul
mov
xor
mov
js
lock
daa
dec
dec
jmp
push
stc
jae
mov
sub
icebp
lcall
adc
push
fidivrl
daa
int
dec
or
add
data16
xor
imul
push
stos
in
pushf
push
test
orl
sbb
push
pop
enter
sbb
xor
dec
push
sbb
shrb
lea
xchg
lds
pusha
inc
iret
out
jecxz
jge
xchg
ja
jge
mov
loop
lods
cmp
mov
stos
into
dec
sbb
cmp
orl
int3
mov
or
mov
mov
call
ret
or
xor
movsl
repnz
mov
xchg
mov
outsb
sbb
ljmp
cs
inc
jmp
in
adc
out
jl
xchg
loop
sti
rcrl
ljmp
pop
xchg
dec
in
xor
cmp
fucomi
dec
movsl
test
test
pop
sub
stc
inc
repz
nop
mov
dec
dec
lock
nop
jl
sbb
sub
lock
imull
hlt
push
mov
pushl
sti
test
loopne
push
add
xor
mov
push
adc
dec
or
shrl
and
imul
cmp
push
xor
lods
popa
leave
add
pushf
pop
popa
sbb
ds
add
loopne
sub
js
scas
jb
dec
dec
xchg
jl
xor
outsl
in
push
hlt
sbb
cmp
gs
incl
and
bound
mov
lock
and
xor
scas
int
or
lea
pusha
insl
or
frstor
idivb
xchg
inc
jno
mov
inc
jo
popa
cld
repnz
es
imul
push
sti
adc
dec
leave
aaa
int3
sbb
lods
pop
bound
adc
lahf
std
inc
in
sub
push
cmp
fs
add
push
mov
shrl
gs
mov
cmp
push
mov
mov
xor
js
mov
int
dec
add
into
jnp
mov
jb
sahf
lods
repnz
xor
inc
cld
push
popa
mov
imul
inc
stc
inc
sub
push
push
push
and
insl
stos
mov
or
or
jb
add
push
xor
inc
fildll
push
xchg
pop
push
dec
aam
jecxz
lods
fmull
xor
icebp
cltd
push
push
cli
mov
jnp
mov
sbb
aam
adc
add
sub
lea
aam
push
mov
jns
cmp
or
repnz
and
lods
aaa
dec
cmpsl
aaa
movsb
cmp
scas
push
fwait
xor
sub
gs
mov
mov
pushf
push
sbb
dec
inc
arpl
and
dec
dec
xchg
leave
mov
cmpsb
pop
shll
jg
pop
imul
pop
jge
shrb
cmp
jns
mov
xor
pushw
in
ds
js
jno
sarl
add
outsb
pop
adc
push
push
mov
imul
xor
inc
in
adc
xor
and
aad
mov
fistpll
sti
rolb
loop
pop
mov
fsubrs
jno
mov
imul
fs
or
xor
imul
enter
jae
and
mov
pusha
dec
jp
inc
inc
sub
xchg
sub
push
xor
scas
in
cmp
inc
in
sbb
or
adc
or
xor
jge
add
push
lea
addr16
aas
pop
jae
or
js
cmpsb
pop
popa
test
in
in
enter
cmp
movsl
xchg
aad
and
clc
imul
imul
test
fisubl
cmp
inc
jno
dec
and
popa
aam
loop
clc
jle
pop
cmc
mov
add
aad
int3
push
adc
and
loope
inc
icebp
jp
dec
fdivs
mov
out
daa
or
lea
push
and
lods
js
popa
inc
push
rorl
push
add
sbb
lea
daa
sub
inc
add
lods
cmp
dec
push
hlt
int
sahf
pop
iret
movsl
xor
icebp
insb
out
pop
push
pop
push
mov
cld
and
mov
sbb
pop
sub
xchg
jp
jno
push
repz
lret
xchg
out
jb
bnd
mov
push
sahf
and
mov
hlt
stc
cltd
sub
or
dec
ss
lahf
ja
jbe
pop
push
dec
jbe
int3
mov
fcmovbe
in
rclb
xor
push
cld
hlt
jno
cmp
lea
add
push
stos
mov
in
mov
dec
add
xor
mov
mov
sbb
jmp
roll
sbb
jbe
lods
and
jmp
adc
sbb
imul
dec
gs
jae
dec
dec
cmp
push
pop
pop
push
push
data16
test
xor
dec
arpl
add
cmp
ja
stos
push
dec
adc
std
jge
sbb
arpl
outsb
cmp
ljmp
call
mov
pop
push
mov
mov
shll
int3
push
gs
shl
test
test
pop
movsb
cmp
sbb
fsts
imul
subb
js
stos
inc
mov
push
push
dec
gs
das
daa
popa
xlat
xlat
insb
scas
cs
in
sbb
fbld
sbb
in
scas
or
cmp
xor
fidivl
mov
pop
mov
popl
and
pop
and
add
jno
inc
inc
cmp
fs
mov
pop
mov
sar
popa
mov
sub
mov
imul
xchg
cwtl
arpl
andl
or
ss
leave
xor
adc
jbe
sub
enter
jp
in
add
mov
and
pop
shll
popa
movsb
xor
or
mov
scas
lret
insl
mov
daa
sbb
bnd
enter
cs
js
ja
push
loope
ret
ror
in
push
jae
scas
xor
xor
cmpsb
or
sub
imul
pop
je
add
sti
mov
jnp
mov
mov
jns
mov
jl
outsl
int3
add
sbb
popf
cmp
dec
ds
mov
leave
mov
aas
add
adc
in
sub
mov
cli
stos
inc
mov
xor
fistps
sbb
mov
add
fs
jnp
sbb
dec
rcrl
dec
imul
xor
aas
imul
xor
nop
xchg
jge
jno
and
clc
pop
inc
jbe
popa
scas
das
push
insl
lods
xchg
or
and
scas
lods
cmp
clc
inc
sbb
dec
pop
dec
lods
outsl
inc
gs
push
cmp
xor
push
sub
adc
push
and
lea
lret
cmpsb
add
cmp
mov
push
pop
arpl
mov
popa
in
and
out
jl
dec
leave
jns
jbe
mov
lea
aas
fcomps
aaa
dec
mov
popw
icebp
fsubp
inc
faddl
stos
pop
fstps
jmp
inc
cltd
pop
lods
jl
data16
jns
pop
out
and
cmp
sub
out
divb
test
jl
dec
ljmp
adc
push
dec
push
aas
jae
push
dec
and
dec
gs
mov
inc
mov
jmp
xorl
push
inc
push
popa
int
xor
lock
cmp
xor
rcr
jae
xchg
dec
scas
sbb
out
xor
setne
jae
mov
fs
sub
and
pop
and
and
lods
sbb
mov
sub
cmc
xor
loop
stos
lea
sub
cmp
sub
lcall
into
push
imul
adc
sbb
sahf
cmp
pop
push
cmp
adc
mov
push
aam
xchg
sub
inc
dec
leave
lret
adc
ljmp
inc
xor
inc
cmp
lock
pop
test
lods
xor
in
ljmp
out
insl
sbbl
movsl
push
xor
sub
xor
mov
cmp
cmp
aaa
sbb
in
and
jae
xchg
cmp
rcl
mov
push
jl
and
mov
rclb
mov
sbb
and
mov
cld
fistps
scas
adc
push
xor
cmp
shlb
dec
mov
pusha
lea
adc
lods
pop
movsl
sbb
fwait
imul
mov
cmc
xchg
outsb
cmp
testl
bound
sub
in
popa
xor
add
fdivl
in
daa
cmp
hlt
add
dec
push
and
sub
add
and
enter
adc
xchg
outsl
das
adc
test
divl
data16
shll
dec
testb
mov
xor
xor
jo
imul
es
push
aad
xor
inc
aam
jae
push
jno
push
gs
dec
or
add
lea
pop
js
test
mov
hlt
lret
int3
fs
push
out
push
push
and
push
xor
lock
push
imul
xor
mov
mov
shr
fisubrl
mov
ljmp
add
sbb
sub
in
fsubs
dec
jb
seta
jge
xchg
mov
sub
sub
jae
sbb
jle
cmp
dec
insl
imul
xor
cmp
out
cmpsb
inc
and
jbe
push
cld
jne
arpl
daa
clc
mov
test
daa
aaa
push
push
insb
sahf
lock
sbb
mov
inc
loop
imul
mov
or
movsb
push
xlat
movsl
sbb
enter
inc
xchg
sub
inc
xor
int3
lods
lea
les
and
mov
jmp
dec
add
mov
loopne
imul
cwtl
daa
sahf
mov
mov
xlat
adc
push
sbb
xchg
outsl
pop
mov
push
and
test
xchg
fisubs
inc
sbb
xchg
add
data16
and
push
mov
or
in
xchg
out
xor
outsl
jb
loop
les
outsb
mov
lods
icebp
lahf
xor
pop
mov
insl
mov
pop
sbb
lret
jne
loope
and
test
inc
lcall
jo
imul
aam
daa
xor
and
aaa
inc
mov
sub
adc
sarl
add
sub
mov
add
repz
into
xor
popf
mov
fs
mov
push
mov
in
sub
gs
adc
dec
xor
sub
in
es
sbb
mov
jae
insl
out
insb
cmp
insl
cwtl
call
sbb
pop
notl
clc
sub
scas
sub
jmp
jae
movsb
cmp
shll
or
fildll
clc
push
movsl
push
mov
adc
dec
mov
lea
pop
xchg
mov
sub
je
mov
ljmp
shrb
ret
push
xchg
leave
dec
sbb
ss
hlt
mov
dec
out
sub
arpl
sbbb
add
dec
xchg
outsl
jae
in
lods
mov
popa
out
cmpsl
inc
mov
xchg
fcomi
gs
scas
out
add
push
jmp
clc
push
je
xor
cmpsl
mov
dec
in
xlat
push
jns
sub
push
sbb
mov
xorb
push
jmp
add
jb
lea
dec
movsl
stos
icebp
insl
cmp
add
sbb
arpl
jmp
mov
push
or
pop
xlat
imul
out
and
mov
and
add
inc
lds
jmp
je
lea
in
pop
sub
pop
push
aas
xor
in
fs
aas
push
adc
sbb
pop
sbb
test
imul
jo
add
test
mov
jb
lcall
repz
sbb
lea
loopne
jle
sbb
cld
adc
cmp
xchg
mov
imul
mov
enter
lods
and
sbb
mov
lock
daa
or
sub
xor
stc
shrl
xor
xor
mov
mov
push
cmp
add
adc
iret
shlb
sub
inc
aaa
mov
pop
add
pop
test
lahf
push
aaa
mov
add
jno
cld
and
gs
sbb
sbb
das
mov
push
imul
jle
mov
and
mov
xchg
sub
out
add
clc
mov
add
test
add
daa
mov
and
xor
lock
sub
pop
push
popl
stc
push
jmp
pop
popa
jae
push
aam
lock
mov
pop
or
add
dec
lock
in
out
pushf
mov
imul
jmp
lock
mov
cmp
mov
jno
jg
push
test
out
sub
sub
push
xchg
ret
hlt
jbe
ss
sub
les
add
fsqrt
push
and
ljmp
stos
push
loopne
dec
jno
mov
fucomi
jmp
pop
sub
inc
ficomps
mov
movsl
sbb
stos
lock
in
scas
sbb
gs
mov
dec
push
jmp
movb
push
in
jbe
fwait
jns
clc
cmpsl
or
mov
movsb
fists
lea
loopne
mov
movsl
jb
leave
loope
jecxz
mov
test
cmp
lock
mov
pop
adc
orl
push
fdivrl
repz
sarl
jle
std
fs
dec
mov
popf
enter
sbb
addr16
loope
imul
push
pop
fbstp
sub
scas
push
cmp
xor
ret
pop
adc
fcomi
fisubl
dec
sbb
mov
fwait
cmp
add
push
xchg
adc
fnstenv
mov
add
jae
cmpsl
and
xchg
cs
jp
cmp
in
imul
pop
imul
xor
je
and
push
xchg
xor
pop
sub
adc
adc
cld
inc
fwait
stos
push
push
adc
loope
dec
jl
add
mov
in
jns
out
add
jl
pop
movsb
scas
clc
and
into
xor
push
shr
out
in
ss
dec
prefetchw
or
jmp
and
inc
add
mov
loope
out
in
rcll
xor
or
xchg
aas
sbb
inc
push
pop
dec
adc
loopne
pop
mov
shlb
inc
cmpsl
push
lea
cs
loopne
insl
or
dec
subl
repz
orb
add
popf
cmpb
orl
push
pop
lods
fsubl
mov
mull
mov
xchg
in
fiaddl
pop
in
insb
test
fnstenv
sub
mov
xchg
ja
push
fdiv
aaa
arpl
lock
dec
xlat
push
loopne
pusha
xor
out
mov
pop
psllq
jns
push
or
push
cmp
cld
enter
hlt
fisubrs
xchg
add
cmp
pop
mov
jg
lock
gs
dec
imul
pop
xor
adc
fsts
ds
cs
push
mov
call
push
xchg
cmp
daa
cltd
fisubl
shl
sbb
pop
or
jbe
les
cmp
push
mov
fmuls
imul
and
xchg
jb
test
dec
pop
or
push
xor
ss
jae
inc
addr16
jmp
gs
xchg
aas
add
gs
push
cmc
sbb
add
jne
and
hlt
es
add
fs
stos
loope
xor
hlt
cmpl
in
shlb
out
je
fmul
push
loopne
rcr
dec
daa
jno
loopne
lea
das
aaa
stos
out
in
cmpl
xor
ds
sub
jo
add
xor
movsl
inc
adcl
repz
push
jmp
jmp
xor
test
push
xchg
out
das
cmp
adc
mov
push
daa
mov
stc
jne
mov
and
jo
sbb
addb
xchg
les
cmp
fdiv
je
fstl
insl
mov
stc
ret
lock
sbb
cmp
pusha
imulb
sub
jg
fs
xchg
test
sbb
mul
clc
cmc
lea
outsb
dec
in
xor
outsb
dec
and
mov
xchg
das
out
mov
add
mov
mov
pop
sub
clc
pusha
mov
mulb
xor
data16
in
jae
lea
push
adc
loopne
mov
std
inc
test
ds
push
and
shll
mov
sub
call
jbe
outsb
mov
lods
ret
push
pop
lea
insl
add
push
push
sbb
stos
test
out
rol
push
cmpsl
pusha
push
mov
ret
fsubrs
and
jne
data16
lods
ja
push
xor
test
mov
test
dec
lea
add
cld
stos
call
push
loopne
inc
add
push
ja
movsl
loop
and
sti
xor
es
aam
leave
sub
mov
xchg
in
enter
inc
adc
mov
lret
xchg
or
or
fcomps
rorb
out
lea
shlb
dec
pusha
imul
mov
mov
push
fsubl
leave
imul
jmp
pop
daa
jb
mov
xchg
in
iret
or
out
int3
loope
inc
out
push
push
lea
out
jmp
imul
aad
and
mov
loop
sbb
hlt
mov
cmpsb
jbe
pop
fs
test
shrl
xabort
cmp
xor
sar
cs
mov
push
and
ljmp
and
imul
mov
cmp
andl
out
cmp
push
out
dec
hlt
jb
lea
outsb
and
ret
pushl
into
insb
jl
sarl
xor
jnp
insl
in
leave
outsb
push
lea
iret
mov
pop
imul
les
mov
loopne
cmpsb
lods
mov
test
shll
stc
cmp
insl
adc
dec
adc
mov
add
popa
sub
das
cmp
dec
arpl
mov
cmp
jnp
mov
add
xor
xlat
dec
sbbl
jbe
sbb
loopne
mov
mov
in
sti
pusha
dec
sub
call
faddl
outsb
mulb
fiaddl
xor
loope
arpl
jecxz
pop
repnz
inc
mov
jno
adc
inc
xchg
lea
inc
ret
add
cli
sbb
or
cmp
cmp
lea
push
adc
and
dec
jns
inc
mov
add
xchg
pop
sub
jle
pop
pushf
repnz
movsl
outsb
dec
test
dec
sub
mov
das
xchg
popa
push
xchg
shl
dec
or
in
pop
mov
or
les
fsubrl
or
inc
push
xor
and
mov
es
pop
add
jno
repz
sbb
push
les
jmp
mov
xor
mov
imul
outsb
loopew
xchg
insl
dec
pop
dec
pop
sub
sbb
sbb
xor
push
repz
sub
add
in
popa
lea
inc
repz
add
lahf
inc
push
and
or
mov
pop
cmpsb
sub
inc
pop
ret
jp
or
xchg
push
sub
jno
scas
ja
jl
fstl
movsb
add
dec
in
arpl
push
mov
inc
push
ds
and
add
ficompl
jo
or
movsb
cmpl
pusha
in
sbb
popf
jle
cmc
push
out
nop
dec
xchg
out
std
fisubs
and
mov
fldln2
jns
inc
sbb
fimull
cmpsl
dec
inc
xchg
lret
push
nop
push
imull
jae
inc
icebp
data16
scas
dec
pop
mov
call
cmp
push
xlat
popa
push
aam
push
adc
fisttpll
or
pop
add
arpl
enter
xchg
mov
sahf
mov
std
mov
and
enter
xchg
addb
adc
call
add
imul
ljmp
jge
jmp
fdiv
clc
repnz
pop
sub
imul
stc
xorb
shr
insl
push
test
xor
mov
add
jge
and
insl
das
jno
lahf
xor
jae
jae
insb
outsl
je
aad
repnz
pop
insl
xchg
les
pavgb
adc
push
sbb
lret
sti
jmp
cld
adc
jnp
and
push
mov
lods
push
dec
adc
mov
je
pusha
lock
push
or
arpl
mov
dec
dec
and
sub
nop
pop
insb
push
testb
mov
aas
push
das
add
mov
jecxz
mov
imul
rcr
pop
lea
cmp
test
dec
stc
sub
insb
ds
repz
ret
mov
xor
mov
inc
lods
push
lds
cwtl
adc
cmpsl
and
mov
mov
sub
inc
lea
inc
je
dec
mov
adc
xchg
hlt
jmp
jle
dec
jmp
pop
push
push
push
or
add
and
aam
in
push
std
sbb
jg
sub
shrl
jl
add
jp
test
xchg
and
pushl
jb
stos
pop
xor
xorb
lds
jo
icebp
cmpsl
imul
outsw
clc
in
insl
testb
xchg
xchg
insb
lock
scas
push
jnp
jg
imul
xor
cmp
arpl
aad
and
arpl
mov
xchg
outsb
mov
pop
jmp
pop
mov
sbb
movsl
mov
mov
jae
cmp
pop
jl
andb
jno
jbe
int3
negl
arpl
mov
dec
dec
movsb
dec
adc
imul
in
rcrb
popf
gs
rorb
test
add
stos
mov
pop
popa
cli
dec
ret
inc
outsb
mov
int3
mov
arpl
insl
mov
out
pop
ss
adc
aas
clc
outsb
cli
jae
jmp
shlb
push
pop
inc
xor
hlt
add
xor
fldenv
addr16
xor
jmp
into
pop
mov
dec
add
mov
loope
adc
mov
xlat
add
dec
mov
jg
push
gs
aad
mov
arpl
sbb
and
xchg
into
aad
imul
and
inc
popa
pop
int
in
xor
repnz
hlt
lret
xor
dec
cwtl
loope
lret
mov
lret
popf
xor
lea
fs
cmp
adc
push
pop
repnz
or
lea
adcl
jno
xor
xlat
pop
in
and
pop
dec
add
xor
fnstcw
ljmp
sbb
cmc
sbb
insb
mov
adc
lock
ljmp
loope
add
dec
fistpl
lea
rclb
cmp
mov
rclb
vmovntps
cmp
ljmp
gs
push
jmp
inc
adc
popa
and
in
add
test
dec
insb
jnp
sub
je
jg,pt
mov
push
xor
ret
faddl
cmc
loopne
xor
push
clc
fisubrs
push
or
shrb
dec
mov
xchg
outsb
sbb
or
add
xor
mov
inc
sahf
cltd
outsb
stc
arpl
pop
sbb
sbb
dec
daa
sub
repz
push
arpl
dec
out
test
cmc
and
aas
push
jl
pop
xor
nop
mov
hlt
ret
fs
imul
pop
insl
iret
mov
lock
jmp
scas
xor
aas
xor
sbb
inc
iret
mov
xor
jg
pop
call
mull
mov
pop
es
cmp
pop
jb
in
pop
repz
sbb
pop
adc
add
sub
dec
fldl
dec
mov
lods
in
arpl
adcl
push
insb
mov
insb
mov
mov
ljmp
jbe
xor
inc
jb
jl
sub
and
push
popf
pop
adc
and
test
push
out
hlt
movsb
test
aam
faddl
pop
lock
out
xor
push
loopne
adc
push
lea
insb
pop
and
dec
add
or
test
pop
mov
and
and
mov
mov
xchg
std
xchg
fbld
adc
jno
insl
test
inc
rol
cld
je
dec
and
jl
neg
jle
rolb
int
adc
push
push
push
dec
cmc
mov
std
add
das
inc
xor
adc
leave
lods
ror
cmpsl
push
sub
or
push
pop
xchg
mov
fisubs
push
sub
sub
cmovg
sahf
addb
dec
sub
andb
imul
filds
lcall
insl
mov
xor
jmp
dec
int3
movsb
gs
inc
xchg
push
add
cmp
and
pushf
xchg
add
xchg
and
xchg
in
pop
xor
mov
sbb
aaa
stos
xchg
pusha
out
mov
stos
inc
loope
test
popa
sub
testl
int3
cmpsb
or
repz
add
popf
fldenvs
jno
and
sahf
mov
push
or
jo
aam
mov
pop
sub
out
sub
out
pop
cmp
pop
in
xchg
popa
xchg
data16
popa
cmp
lea
test
pop
dec
jmp
ja
in
sbb
sub
cmp
std
and
int3
or
aas
mov
push
in
imulb
push
pop
jp
mov
popa
shlb
sbb
pop
lea
jb
xor
sub
sarl
das
and
sbb
das
adc
or
lock
pop
sub
mov
mov
int
sbb
insl
push
jge
pop
sbbl
add
mov
das
sbb
push
xchg
adc
pop
inc
xor
jb,pn
sbb
mov
rcrl
cmp
push
int
and
gs
insb
push
push
imul
mov
test
xor
dec
movsb
lret
int
das
pop
xchg
repnz
das
pop
xchg
sbb
inc
xchg
aas
inc
data16
and
add
out
inc
and
and
mov
sbb
pop
ljmp
int3
lods
jmp
cld
shlb
xor
dec
fsubrl
rcl
add
in
pop
mov
inc
movsl
mov
xchg
dec
jmp
add
xchg
sbb
in
fmuls
mov
mov
mov
fadds
shrb
leave
inc
in
and
sub
mov
pop
and
jmp
or
lret
jae
and
push
xor
xor
pop
pop
in
mov
pop
pop
dec
daa
cs
pop
loop
les
test
ss
aam
mov
xor
fisttpl
push
sbb
cmp
adc
push
aad
ljmp
push
in
in
lret
sub
push
pop
icebp
divb
cmp
sub
jmp
pop
mov
adc
jp
movsb
mov
in
push
xchg
push
sub
hlt
push
scas
add
jnp
jp
daa
lea
das
inc
push
mov
pushf
pop
arpl
sub
sub
mov
pusha
jecxz
or
jns
or
push
dec
jmp
dec
pop
or
mov
adc
inc
das
imul
jg
xor
lods
pop
pop
push
bound
test
popf
in
out
imul
push
mov
jns
or
pop
enter
in
cpuid
dec
das
xor
pop
sbb
pop
mov
test
rcrb
std
cld
push
cltd
xchg
outsb
mov
pop
xor
pop
pop
sub
lods
adcb
jle
pop
addl
mov
jp
push
outsb
push
push
sbb
lock
pop
std
or
mov
fidivl
push
jno
xor
jmp
movsl
push
stos
push
pop
pop
pmuludq
jp
cmc
es
sbb
xchg
jg
or
xchg
dec
and
notl
stc
pop
push
aas
inc
sub
jle,pn
lea
fistps
mov
adc
lret
pop
scas
pop
sub
sub
dec
adc
and
lea
out
testb
fisubrl
addb
lock
das
fnstenv
popf
sub
sbb
arpl
jo
in
mov
cld
sub
pop
repz
inc
mov
or
jmp
cmp
lea
shll
in
push
sbb
pop
jmp
pop
ficompl
loop
lock
and
pop
cld
and
xchg
add
les
stos
add
jo
cmp
cld
out
in
in
mov
andb
sar
dec
xchg
notb
sbb
insl
jae
add
add
stos
pop
test
lods
cmp
lret
adc
ret
pop
push
pop
push
sbb
popa
sub
repz
and
push
push
pop
ja
out
call
sub
orl
fwait
cs
pusha
into
loope
es
in
pop
jle
xor
cmp
push
lea
lods
xchg
inc
pusha
daa
ljmp
or
mov
xor
call
popf
aad
cmp
mov
inc
jns
dec
ja
aad
lea
ret
imul
je
mov
pop
daa
push
lods
shll
test
icebp
or
push
push
int
adc
or
movsl
push
icebp
cmp
adc
mov
and
pop
in
and
adc
cmpsb
cmp
sbb
sub
mov
xor
call
mov
in
sub
push
in
in
divb
arpl
push
mov
ss
js
imul
bswap
inc
repz
cltd
adc
jmp
jnp
xor
sar
push
xor
in
add
cmp
or
into
pop
add
sub
and
mov
xor
ss
pop
xor
fldlg2
xor
arpl
mov
int3
xor
pop
subl
js
addr16
mov
fmull
push
fsts
std
int
push
leave
jl
pop
sub
mov
insb
xchg
push
xorb
mov
pusha
in
push
xor
clc
in
jmp
sub
fs
push
inc
xor
sbb
or
dec
mov
push
sub
in
loop
dec
push
imul
std
sub
jnp
imul
mov
js
loopne,pn
arpl
cs
push
jp
addr16
lea
aad
gs
jae
inc
das
cmp
xor
cmp
ret
xorl
mov
shr
lock
shll
lea
clc
scas
sub
dec
push
mov
in
rcrl
sub
rcrl
dec
sub
jmp
out
pop
gs
and
lods
xor
push
add
lods
and
mov
and
gs
xor
fs
int3
push
test
dec
daa
push
and
xchg
test
cmp
add
fsts
mov
cmp
daa
into
bound
movsl
add
add
jae
stos
mov
sbb
std
mov
lea
ljmp
aas
in
repz
push
lds
fs
mov
and
arpl
hlt
add
pop
jb
xor
scas
outsb
adc
cmp
mov
mov
mov
inc
int3
dec
stos
adc
gs
mov
and
add
xchg
aas
sbb
aam
sub
cmp
push
add
cmp
lret
imul
addb
cmp
mov
jo
in
fnsave
jno
repz
movl
push
mov
jmp
and
adc
mov
test
inc
popa
or
push
rcll
je
mov
add
fdivs
in
test
lgs
mov
jp
rorl
xorb
int3
and
sub
rolb
movsb
push
outsb
testl
fs
jae
fcompl
push
lea
arpl
sbb
or
gs
xchg
roll
out
dec
test
mov
je
ret
mov
and
imul
je
mull
clc
fwait
inc
xchg
lcall
sub
in
stos
out
loope
cld
in
faddp
sub
xchg
gs
sbb
mov
inc
lods
dec
sbb
inc
or
insb
lods
dec
and
cli
lahf
lds
and
leave
adc
pop
fdivl
xor
jae
int3
or
popf
imul
mov
out
lds
mov
adc
pusha
outsb
sub
mov
neg
xor
dec
in
test
cwtl
pop
js
les
lret
dec
fwait
loop,pt
test
adc
in
dec
cmp
cmp
push
xor
sub
stos
cmp
sbb
test
orb
sbb
aaa
rcrl
mov
sub
add
push
sbb
arpl
pop
insl
in
fcoml
sub
je
dec
icebp
fnstcw
cmpsl
leave
cld
call
insl
lea
adc
insb
clc
mull
add
fbstp
sbb
sbb
idiv
pusha
or
push
test
test
inc
outsl
cmp
cld
notb
setp
add
test
cwtl
test
xchg
pop
mov
lret
fnsave
es
lods
mov
lea
inc
pop
pop
jmp
lahf
test
in
lcall
daa
pop
idiv
jmp
test
or
sbb
mov
add
add
leave
fsts
ss
iret
lds
or
and
fs
jb
fistpl
adc
cli
push
int
pop
fstps
adc
or
cli
stos
cmpsl
push
or
xor
jmp
and
jb
call
xchg
mov
add
out
or
pop
cmp
push
out
fcompl
and
cmpsb
or
decb
pop
hlt
adc
cmp
jbe
pusha
lds
insb
js
mov
mov
pop
dec
xchg
push
jmp
in
push
inc
and
lea
pop
mov
or
sbb
sub
in
jb
mov
std
xchg
fisubrl
add
and
sahf
cmp
xor
stos
mov
and
xor
sbb
into
popf
add
pop
and
and
sub
ret
dec
addr16
imul
repz
pop
loop
fs
int
loope
push
sub
pop
ret
je
lea
in
jns
xorb
arpl
jecxz
jne
rcr
adc
xor
movsb
movsl
jl
push
xor
rol
scas
cmp
mov
iret
lret
and
leave
or
xor
mov
push
loopne
loop
ffree
jno
stc
jo
leave
daa
in
dec
inc
inc
ss
outsl
push
dec
sub
jae
psubq
pop
sub
out
bound
and
mov
insb
push
pop
pop
fildll
bound
imul
dec
popf
or
push
xor
lds
std
mov
frstor
sbb
and
push
mov
mov
push
push
cld
and
add
je
lea
xchg
or
mov
pushf
mov
gs
cmp
add
ljmp
dec
je
cmp
aad
lea
ds
mov
mov
leave
jge
mov
sub
jmp
and
adc
jb
pop
lods
sbb
shll
pop
add
repnz
fs
adc
das
loopne
popf
push
jmp
sbb
adc
or
pop
add
pushf
mov
divb
cmp
andl
into
push
cmp
shll
jmp
mov
and
mov
dec
jnp
leave
pop
aas
mov
xchg
mov
loopne
mov
mov
xchg
and
mov
fsubl
inc
fisttps
push
dec
push
cmp
dec
mov
lea
mov
call
sbb
lods
jo
push
lret
icebp
xor
mov
push
push
push
cmp
mov
jno
lea
ror
xchg
xor
mov
test
movsb
out
and
pusha
insb
mov
gs
xchg
insl
inc
or
sbb
cmp
sbb
mov
in
andb
jge
push
push
add
mov
lea
popa
fs
mov
xor
test
outsl
adc
icebp
pop
xchg
pop
aam
push
cs
pop
sub
dec
xchg
adc
cmp
add
sub
sbb
or
jo
pop
and
adc
push
out
aad
mov
je
bound
outsb
std
sahf
pusha
mov
push
jo
and
or
cmpsl
mov
std
imul
gs
dec
mov
test
dec
sbb
push
aas
aad
xor
push
cmp
dec
xchg
and
sar
jecxz
popa
jne
arpl
push
daa
or
cmp
jbe
or
shlb
xor
mov
inc
cvtpi2ps
xor
dec
cmp
dec
and
in
cmp
sub
sub
jb
push
inc
xchg
push
xchg
mov
out
jb
ljmp
stc
in
xor
mov
mov
sbb
and
mov
or
shr
jo
shll
rcll
jb
xchg
sub
mov
lea
adc
outsb
stos
fisttpl
sbb
adc
mov
and
outsl
cmc
mov
push
rolb
add
insb
jns
clc
jne
outsl
push
cmc
inc
xchg
dec
dec
inc
movsl
outsb
jmp
pop
push
xchg
sbb
jb
arpl
andl
clc
push
inc
test
mulb
lock
pop
fimuls
push
scas
insl
sbb
mov
push
mov
pop
jmp
push
andb
sub
int
aad
arpl
or
cmpsb
and
and
dec
je
cmpsl
sbb
sub
mov
xor
js
test
push
inc
mov
inc
enter
dec
je
inc
mov
xor
mov
pushf
jge
lds
jnp
inc
mov
sbb
fucomip
xchg
or
out
cmpsb
push
sbb
jb
addb
out
inc
rorb
insl
inc
fldcw
fstpl
dec
adc
fisubrl
mov
inc
xor
adc
lods
xchg
lea
and
movsl
sub
cli
xchg
or
mov
push
sub
aaa
fstl
inc
mov
pop
jno
outsl
insl
sub
pop
inc
sbb
push
mov
push
cmp
fs
dec
dec
imul
sbb
cmp
sbb
ja
jmp
xchg
daa
jae
movsb
loope
xor
and
dec
pusha
insb
cmc
mov
sbb
jo
sbb
addr16
xor
jno
stc
pop
cmc
out
jge
inc
fwait
test
push
and
jmp
fwait
incl
stos
iret
sub
cmp
sbb
out
cmp
xor
jbe
jae
push
insb
insl
xor
adc
cmp
xor
mov
outsb
mov
mov
mov
clc
and
pop
inc
decb
pop
lods
movsb
in
jae
push
lcall
arpl
test
and
pop
mov
jmp
fs
adc
pop
xchg
loope
jl
xor
icebp
pop
inc
inc
sub
and
jle
pop
lods
push
repnz
cmc
jbe
pop
sti
xchg
push
cli
and
adc
mov
mov
dec
sahf
push
fs
cmp
fnstcw
hlt
dec
insl
inc
lea
shll
imul
jbe
xor
insl
outsl
or
jae
and
add
mov
jl
aam
sub
bound
cli
ja
das
adc
push
dec
in
add
cmpsl
or
loope
jmp
push
cmc
sarb
cmp
aad
mov
pushf
ja
add
push
jb
faddl
inc
cmp
stc
sub
ret
lods
cmp
lds
add
scas
dec
scas
pop
jmp
gs
jno
inc
and
inc
subl
jno
ret
push
jmp
sbb
sub
enter
decb
gs
leave
orl
inc
lahf
xor
add
pop
inc
repnz
in
fdivrp
psubb
mov
mov
or
inc
rorb
add
mov
push
icebp
or
test
and
xchg
mov
ss
xlat
dec
sub
test
inc
int
insl
lea
pop
pushf
mov
mov
jle
movsb
jnp
xchg
jp
jb
gs
pusha
stos
jle
arpl
push
jecxz
shlb
push
add
dec
sub
in
in
and
pop
icebp
sub
mov
divb
pop
pop
pop
pop
push
popa
adc
jmp
inc
stc
popa
sbb
jmp
push
adc
shll
inc
repz
xor
jno
out
ja
pop
jecxz
inc
push
sti
push
sub
stos
sub
pop
mov
leave
cmp
cwtl
lods
in
jo
add
insl
pusha
xor
lea
popa
jae
outsb
lea
lock
lea
xchg
pop
icebp
xor
mov
cmpsl
mov
gs
jae
mov
sub
xor
dec
sbb
pop
push
push
jo
js
popf
xor
cs
insl
outsl
sbb
jo
mov
xlat
arpl
imul
data16
enter
inc
or
mov
daa
je
mov
and
xchg
outsb
xor
adc
stc
lea
xor
mov
inc
test
into
pop
sbb
arpl
pop
jnp
push
es
xchg
test
imul
insl
in
in
pop
jp
mov
popa
mov
js
leave
push
and
mov
clc
in
sbb
jmp
mov
xchg
mov
dec
fnstcw
push
fwait
adc
clc
lea
xchg
cld
jno
cmpsb
in
iret
sbb
sub
xor
cmpl
sbb
jg
or
mov
push
je
enter
mov
imul
fbld
aad
dec
insl
jo
jnp
xor
cmp
and
repnz
add
lods
fs
shrl
mov
jmp
aaa
jae
fsts
loop
jge
mov
ret
adc
outsl
movsl
dec
test
push
add
js
add
jg
xchg
mov
push
sub
xchg
lea
shrb
push
sbb
fldt
sbb
pop
xor
fistps
js
lret
bound
mov
inc
icebp
xor
dec
pop
sub
xor
jge
repnz
fadds
cwtl
cmpsb
lds
xchg
inc
mov
rorb
std
pop
in
out
pop
pop
aam
mov
pop
sub
shll
sbbb
sub
or
icebp
cmp
pop
in
xchg
in
adc
insb
test
xchg
insl
and
sbb
sbb
aas
pushf
decl
dec
cmc
lea
imul
adc
in
inc
pop
shl
adc
in
and
mov
lcall
test
dec
loope
inc
jge
fcomip
jae
dec
bound
sbb
in
xor
ret
push
lock
rorb
shll
or
mov
and
outsl
jo
cmp
call
lods
cmp
inc
pop
push
inc
loope
cltd
movsl
jge
dec
loope
mov
popa
mov
int3
jecxz
mov
dec
ret
std
xchg
testl
xchg
int
xor
sub
inc
xor
mov
outsl
hlt
push
and
cld
jmp
loope
repz
inc
sub
fcoml
popa
or
xor
sbb
sbb
add
inc
add
fs
mov
push
out
ds
xor
cmp
cwtl
lret
adc
jb
or
or
inc
int
ret
popa
fs
repz
ss
in
in
mov
insb
mov
dec
aad
push
ret
in
adc
adc
arpl
mov
jne
or
sub
jbe
sbb
cltd
shlb
das
fdivs
adc
insl
pop
mov
aam
dec
enter
or
inc
movsl
outsl
hlt
jl
incl
mov
inc
int
lods
dec
test
lahf
cltd
adc
and
cli
inc
test
sub
in
lea
xor
push
pop
repnz
lods
fldl
inc
push
loope
lods
sub
icebp
inc
aas
or
sub
pop
das
pop
call
test
js
loope
pop
es
stos
leave
inc
leave
cld
sbb
xor
cmpsl
jge
leave
and
push
scas
push
xchg
push
loopne
dec
rcll
gs
mov
sub
pop
push
pop
mov
jbe
aaa
push
push
mov
jbe
aaa
imul
addr16
movsb
jle
xor
loope
fs
nop
or
sub
das
mov
jecxz
fs
mov
and
pop
cmp
or
cmpsl
in
fstps
imul
dec
add
ret
and
sbb
es
enter
and
or
bound
dec
xor
xchg
cltd
jp
ret
sbb
add
pop
cmpsb
in
daa
clc
sub
jb
stos
mov
sbb
jns
push
jb
test
call
xor
and
aad
lods
jecxz
frstor
mov
push
lahf
in
jmp
xor
sub
mov
sub
sti
insb
push
jns
xor
pop
pop
adc
popa
jae
pop
jmp
in
pop
xchg
jl
jb
movsl
jno
hlt
stos
xchg
mov
sub
xchg
and
js
mov
inc
push
jno
insl
insb
mov
test
inc
pop
imul
das
in
arpl
imul
xor
mov
and
call
push
and
pop
test
push
jno
push
inc
rcll
and
bswap
or
fidivs
pop
adc
out
decl
jg
xor
pusha
daa
mov
and
jge
mov
fcomp
sbb
cltd
movsb
or
loope
test
cmp
dec
jg
inc
es
mov
jmp
pop
xorb
push
jmp
jno
push
mov
mov
mov
in
insb
fisubs
lret
mov
or
xchg
je
scas
adc
xchg
pop
or
and
sub
and
inc
imul
aam
lret
pop
dec
mov
sub
sbb
frndint
mov
ljmp
mov
pushf
push
mov
or
pop
and
int3
ss
sub
sbb
mov
lahf
xor
sub
sub
in
adc
stos
push
das
push
xchg
and
jl
sbb
insb
push
jno
cmpsl
jo
arpl
lods
mov
test
mov
sub
cmp
fld
push
xor
xchg
mov
jno
inc
xchg
bound
mov
jge
xchg
daa
pop
jecxz
lea
push
adc
pop
in
roll
pusha
mov
insb
mov
and
cmp
hlt
lahf
pop
dec
sbb
adc
insb
push
ja
jg
adc
stos
push
repz
push
lods
dec
push
cmp
lods
xchg
fidivl
out
mov
or
mov
or
cli
mov
fcomp
mov
adc
test
adc
pop
fwait
aaa
push
xor
dec
sti
xor
inc
sbb
aaa
push
sbb
mov
inc
dec
scas
dec
je
mov
lret
mov
rcll
idivb
jmp
mov
dec
test
ds
add
pop
scas
stos
pop
and
aaa
jno
scas
test
enter
adc
push
hlt
xchg
mov
insb
xor
xchg
and
adc
fiaddl
inc
sub
hlt
sbb
adc
mov
adc
jp
hlt
inc
mov
cli
xor
lcall
aad
loopne
fsubr
xor
aad
fcomip
adc
inc
dec
stc
cmp
and
inc
lcall
adc
dec
daa
jmp
movsb
je
sub
pop
gs
lea
pop
mov
addr16
imul
aad
lea
push
adc
jno
movsb
push
jl
andl
lock
jne
ss
jo
fdivs
insl
shrb
ja
test
hlt
cmp
cld
loop
clc
cmp
mov
push
dec
push
clc
shll
cld
addb
syscall
dec
lea
inc
lods
test
xor
or
pop
jge
fldl
arpl
cmp
pop
jp
adc
pusha
adc
push
test
xchg
jecxz
mov
out
jp
mov
lock
psubq
jmp
cmp
aam
mov
in
cld
pop
std
loop
inc
mov
outsb
popa
incl
mov
xchg
stos
movsl
mov
add
ljmp
fstpl
push
popa
sub
insb
cmp
and
adc
xchg
xor
and
jno
outsl
test
js
lahf
adc
cs
pop
xchg
mov
push
sub
pop
pop
cmpl
sbb
in
and
push
push
adc
sub
cs
arpl
adc
fists
lods
insb
push
in
push
xor
in
sbb
pusha
jg
movb
lea
jl
and
xorl
mov
addl
jmp
push
push
and
and
sbb
insl
movsb
cltd
and
int
icebp
xor
cmp
mov
int
imul
pop
push
inc
jbe
movsb
or
ret
stos
add
xchg
push
or
adc
mov
insl
push
push
cmp
stos
push
lret
and
fnsave
add
nop
mov
jne
and
jno
or
inc
sub
mov
loope
mov
movsl
xor
and
mov
in
push
mov
push
dec
xchg
xchg
in
insl
adc
jecxz
cs
insl
push
in
insl
xor
cmp
and
filds
ljmp
fistps
push
fdivr
mov
sbb
push
jg
rcr
bound
xchg
lods
jl
out
inc
dec
imul
jg
out
lock
fs
dec
xchg
insb
int3
cmp
push
insl
push
jmp
sub
add
add
test
sub
adc
imul
jb
sub
jo
jmp
insl
outsl
cmpb
int
dec
cmp
push
sub
in
jle
sbb
lea
mov
xor
inc
jo
ja
hlt
jge
and
sub
scas
add
movsb
sahf
rcr
and
popa
cmp
int
jae
push
dec
ret
push
pop
iret
xor
mov
imul
mov
rcr
mov
cmpsl
imul
sbbb
sub
lds
in
call
lods
stc
dec
mov
push
dec
sti
sahf
scas
insb
sbb
adc
adc
popa
xchg
notl
mov
ficoms
xor
and
push
sbb
or
imul
mov
ffree
in
aas
jns
popa
gs
out
cld
or
hlt
add
add
sub
es
movsl
xor
or
xor
cmp
jne
dec
cmp
icebp
loop
jo
je,pn
jmp
jo
pusha
pop
xor
and
cmc
in
ss
pop
cwtl
sbb
adcl
and
cld
pop
cld
sbb
push
insb
les
in
dec
jg
mov
lds
pop
mov
jae
or
popf
xlat
xchg
jmp
jl
aaa
icebp
sbb
jne
das
dec
push
sbb
mov
aas
xorb
shlb
cmc
mov
lret
push
aad
xchg
pop
insl
lea
fcmovnbe
pop
dec
outsb
adc
les
dec
in
xor
lea
sub
lds
xor
adc
outsl
movb
sub
cld
push
add
push
inc
push
push
jge
fmul
xor
mov
xor
push
dec
xor
and
cmp
stc
pop
lea
stos
out
add
testl
dec
and
fistps
or
sub
mov
dec
aas
pop
loop
jp
push
shll
add
add
sub
inc
jb
imul
xor
xchg
std
inc
fisubrl
divl
jbe
push
popa
and
and
mov
sbb
jnp
sub
cwtl
cmp
push
in
fdivl
push
out
fucomip
orl
call
loopne
in
mov
ficoms
sbb
movsb
jge
mov
es
aaa
and
xor
dec
jne
jb
je
or
hlt
stc
adc
fnstenv
adc
dec
iret
ds
adc
out
cs
jae
call
push
pushf
adc
adc
dec
test
mov
cld
iret
popa
sbb
pop
les
lea
cld
sub
xchg
sbb
test
and
insl
das
pop
int3
and
pusha
les
fildl
and
dec
cmc
push
and
es
jp
je
push
incb
xlat
jnp
lea
xor
xor
cmc
les
push
and
daa
jmp
lea
dec
cltd
movsb
sub
pushf
daa
inc
and
shlb
sub
mov
jno
int3
cmc
jo
icebp
inc
pushf
sub
and
pop
insl
dec
inc
mov
and
push
push
jns
dec
and
cwtl
xchg
and
xor
inc
shll
lret
xorb
pop
add
jae
in
daa
ret
and
pop
add
fistpl
jno
je
clc
jmp
adc
sub
movsb
icebp
dec
or
aaa
mov
push
andl
add
call
dec
mov
and
jmp
and
or
or
test
pop
je
pop
push
pop
arpl
jmp
std
sbb
aad
insl
and
adc
xorb
push
push
push
mov
jns
push
jp
adc
sub
out
es
lds
test
aad
add
lea
mov
mov
je
jne
int
lahf
adc
fcomps
jecxz
sub
aaa
adc
icebp
xor
neg
push
sarl
xorb
rcll
xor
jno
xlat
lock
push
mov
das
rcr
lds
orb
pop
jmp
hlt
nop
add
loopne
adc
xorl
je
mov
popa
data16
inc
imulb
push
add
mov
insb
imulb
inc
xor
je
sub
test
stos
sahf
popf
mov
les
add
sbb
icebp
imul
xchg
pop
jle
cmpsb
enter
popa
jo
cmp
mov
test
jecxz
pop
mov
mov
sub
insb
sbb
add
sbb
das
call
fidivrs
arpl
sub
sahf
mov
test
mov
lds
sti
jno
push
sbb
or
xchg
insl
push
pushf
jae
jge
cltd
mov
imul
xchg
dec
arpl
pop
jecxz
cld
stos
addl
enter
popf
sahf
lea
sub
daa
cld
fistps
adc
lahf
ds
popa
and
adc
fcmovnu
sbb
ss
push
add
jl
test
inc
xorb
sbb
popa
enter
adc
or
nop
iret
jae
lea
and
or
rcrl
xor
in
sbb
push
pop
ret
iret
sub
jae
mov
pop
mov
push
cmp
jns
and
and
mov
test
icebp
jbe
fists
inc
leave
dec
aas
cld
test
lods
dec
jns
dec
xor
loop
cmpsl
inc
xor
jno
cmc
mov
into
fcmovnb
push
pop
nop
gs
inc
sub
jae
cmp
cmp
test
inc
xlat
and
xor
mov
xor
jo
cmp
and
in
inc
mov
add
int
scas
pop
inc
cmc
mov
ja
mov
test
pop
arpl
push
fcomp
cs
repnz
movsb
mov
push
mov
sub
and
add
xor
push
jecxz
pop
mov
sub
adc
sti
mov
pop
imul
jmp
leave
pop
ds
arpl
mov
jae
jmp
ja
dec
out
xchg
mov
outsl
inc
mov
mov
push
hlt
lea
in
sbb
addr16
push
int3
out
and
loopne
lods
stos
inc
push
and
inc
mov
aam
inc
fdivrp
mov
jge
fwait
repz
movsb
mov
and
test
dec
xor
mov
mov
mov
adc
ds
cmp
test
fs
loope
dec
jnp
insb
aam
or
xor
pop
xlat
out
gs
popf
fwait
sub
inc
pop
fwait
inc
mov
mov
outsl
in
out
xchg
cs
lods
popa
mov
stos
sub
pop
pop
ficoml
movsl
dec
in
jb
push
pop
fbld
adc
or
inc
adc
shr
and
dec
add
dec
in
push
push
psraw
ljmp
scas
and
sbb
push
adc
shlb
pushf
or
add
je
fwait
dec
cmpsb
outsb
loop
cwtl
ds
sub
dec
dec
test
mov
pop
les
mov
pop
pop
lret
inc
orl
and
movsb
pop
ss
cmpsl
and
pop
in
testl
xor
add
pop
sub
and
or
mov
fsubrl
test
sbb
sbb
lock
cli
mov
sub
outsl
adc
or
inc
cmp
popf
dec
jge
out
fsubl
xor
fldln2
jb
xchg
js
or
sbb
mov
push
cmpsl
pop
mov
addr16
pop
mov
xor
fwait
int
icebp
movsl
mov
or
shll
sbb
ret
outsb
movsb
adc
out
jno
jg
call
aad
jnp
repz
loope
iret
pusha
popa
jo
movsl
dec
lock
scas
adc
lahf
jo
mov
push
sbb
xchg
mov
sub
lods
push
loop
xor
icebp
in
fdivs
repz
jae
orb
int
out
lea
movsl
mov
pop
sahf
and
xor
dec
testl
inc
xor
and
push
xchg
cmc
out
orl
mov
sub
inc
inc
mov
popf
mov
cmpl
push
divl
cli
arpl
ds
cmp
mov
sarb
inc
fisubl
push
fs
pusha
mov
imul
jo
or
les
popa
or
je
js
aam
cld
push
jbe
inc
push
jnp
pop
fsubs
mov
cmp
pop
daa
sub
sti
xchg
addl
or
inc
fisttps
jp
dec
jo
pop
bndstx
daa
mov
pop
pop
imul
push
out
dec
sub
ljmp
cmp
es
add
std
rcrl
sub
xchg
ss
in
js
cmpsb
scas
aad
rep
jo
xor
mulb
push
lret
mov
mov
aaa
cmp
movsl
popa
pop
in
push
jmp
scas
jns
je
push
insl
sbb
aas
adc
aad
and
mov
adc
inc
push
addr16
mov
xor
sar
arpl
mov
or
stc
and
leave
mov
mov
sahf
adc
dec
scas
je
pop
mov
lret
call
jae
imul
mov
dec
ftst
aas
cs
xor
sub
or
push
hlt
shrb
es
outsl
push
rol
leave
adc
sub
popa
cmp
mov
jmp
sub
and
mov
out
in
pusha
pop
sub
pop
adc
and
daa
mov
jb
pop
jns
in
jecxz
movsl
fcoml
loope
hlt
enter
lea
imul
ss
add
mov
xor
xor
mov
sarb
lea
cmp
enter
popa
xor
add
notl
imulb
pushf
jae
xor
and
cli
or
movsl
push
mov
pushf
or
fwait
dec
stc
xchg
in
mov
push
nop
jne
lahf
outsb
pop
push
and
jl
pop
mov
lret
lock
push
sbb
pop
dec
insl
pop
out
xor
adc
testb
inc
lahf
outsb
roll
jno
lahf
outsb
adc
pop
inc
pop
inc
jb
mov
push
xchg
stos
lea
mov
out
dec
jge
iret
dec
loope
cmc
in
arpl
int3
test
push
mov
jno
insl
jnp
in
pop
mov
fs
jns
shll
xchg
mov
jae
dec
pop
gs
inc
icebp
mov
aaa
push
inc
add
data16
sub
das
das
clc
sub
sub
outsl
fcoml
jl
inc
cli
sub
pop
cld
std
inc
inc
jo
push
test
and
jmp
lods
sub
aad
aaa
scas
and
sbb
data16
in
lea
in
push
mov
mov
out
push
or
stc
pop
fldlg2
gs
test
arpl
pop
xor
cmp
in
ret
push
testl
insb
xor
pop
push
pushf
aaa
push
xchg
repz
dec
gs
sbb
adc
das
adc
cmpsl
or
and
std
or
or
dec
sbb
cmp
out
loop
ja
adc
in
in
mov
gs
lods
fcoml
in
out
lock
sti
scas
stos
push
into
adc
sbbl
in
lods
and
test
adc
xchg
pop
jmp
arpl
popa
lea
sub
das
and
das
sbb
or
into
popf
jmp
jb
lcall
sbb
in
mov
jnp
or
xor
mov
in
push
mov
and
lods
mov
xor
and
scas
push
shll
pushf
out
stc
loope
sub
loop
insl
insl
pop
xor
pop
ja
cmc
in
or
ret
pop
or
jmp
adc
fs
jo
insb
lea
jg
and
int
cmp
and
cs
sti
in
xchg
aad
adc
lods
out
xor
sbb
xor
push
adc
outsb
ss
fldt
fs
pop
push
mov
adc
cmc
xor
or
dec
imul
mov
xor
dec
lock
aad
test
sbb
or
pop
dec
sub
mov
jmp
outsb
or
dec
inc
popf
mov
mov
add
sub
mov
roll
fnstcw
inc
ss
mov
rorb
pop
jno
or
repz
and
out
scas
fcom
adc
push
sbb
jo
mov
mov
xchg
push
loopne
sub
sbb
nop
cmp
or
mov
data16
fmull
mov
add
add
pop
loope
movsb
fs
cvtps2pi
push
repz
movsb
in
xchg
pusha
ret
jo
add
xchg
lahf
sub
mov
pop
pop
arpl
xchg
add
mov
lret
shll
div
enter
cli
aam
and
bound
enter
pop
dec
sbb
sbb
mov
mov
in
leave
or
push
add
dec
add
adc
push
arpl
test
mov
ud1
popa
sub
repnz
stc
mov
loopne
rcl
jbe
mov
iret
fbstp
ror
dec
sbb
adc
pop
fists
int3
xor
test
pop
jno
sub
loopne
int3
dec
cmp
aad
mov
add
add
fs
lea
add
insb
rorl
cld
int3
movl
stc
aam
or
sub
in
sub
test
or
les
shlb
fs
into
cltd
je
sbb
pop
or
les
or
lea
or
inc
jnp
adc
int3
cmp
int3
push
pushf
push
je
movsb
sbb
xor
sbb
push
inc
adc
jbe
sbb
inc
xchg
and
adc
and
cmp
push
push
mov
stos
mov
cs
insl
popa
xor
mov
pop
xor
xchg
pop
das
xor
adc
add
loop
pop
mov
icebp
in
stc
cmp
and
leave
nop
ret
call
push
mov
fdivl
out
loopne
ljmp
lods
pop
mov
aaa
adc
sub
lea
scas
jb
push
pop
lea
or
xchg
leave
adc
mov
divb
test
leave
ljmp
jb
dec
push
shlb
leave
pop
outsb
lea
aad
jno
or
in
lods
mov
mov
fstps
inc
and
lea
mov
out
pop
jge
lea
push
sbb
sub
insb
lea
adc
aaa
mov
mov
mov
clc
scas
gs
aam
outsl
cmpl
xchg
adc
lahf
outsb
mov
jp
adc
jmp
in
lods
xor
mov
aaa
in
call
or
push
xchg
sbb
ficoml
push
jo
dec
mov
fiaddl
mov
push
bnd
arpl
sbb
in
cmp
popf
repz
ss
shrb
loope
dec
jp
repz
xorl
and
sbbl
sub
adc
jnp
imul
xor
loope
xor
in
jecxz
dec
jnp
xor
fidivrl
imul
std
insl
shlb
xchg
push
insb
pusha
jnp
jne
call
cmp
pop
mov
adc
xor
inc
mov
fcmovu
pop
dec
cmp
xor
lods
aam
jo
stos
mov
in
pop
jbe
clc
inc
das
jo
pop
mov
cmp
cmp
repnz
imul
int3
push
lds
or
stc
pop
pop
out
fsubs
iret
sbb
pop
adc
add
adc
or
in
rcrl
push
test
or
push
sub
hlt
xchg
sbb
push
pop
push
scas
test
jmp
push
xor
outsb
icebp
in
jns
sbb
xchg
xchg
insl
shlb
push
out
xor
aam
mov
scas
pop
in
jb
in
push
pop
pushf
add
inc
mov
dec
pop
insb
and
mov
and
xchg
pop
mov
xchg
and
int
repz
push
cmp
xchg
adc
daa
das
and
inc
gs
push
and
dec
sbb
test
add
sub
and
fs
mov
inc
les
cmp
cli
cs
shl
in
fidivrl
push
push
shl
roll
push
sar
loopne
add
sub
jmp
in
test
or
call
das
mov
imul
xor
lea
add
test
out
aaa
and
imul
pop
mov
out
mov
out
lock
scas
fstpl
add
dec
jne
xchg
jns
xchg
cmp
aam
jmp
pop
lea
or
pop
cmp
add
mov
push
fmuls
mov
xchg
fsub
add
sbb
fdivp
inc
xchg
dec
je
dec
jb
push
insb
stc
xor
lahf
in
inc
dec
cmc
out
enter
popa
dec
sbb
jae
inc
test
sbb
in
adc
in
push
js
dec
xor
xor
push
ficomps
leave
push
addl
daa
stos
jne
adc
xor
pop
dec
fcoml
enter
push
adc
andb
xor
mov
cltd
adc
in
push
adc
movsb
mov
adc
cs
out
cs
xchg
insl
lahf
inc
cltd
sub
sub
cmp
aam
sub
add
xor
dec
dec
xor
xor
std
xor
inc
adc
out
mov
lret
mov
dec
mov
adc
and
sbb
es
pusha
mov
lds
mov
jns
sub
mov
stos
and
gs
inc
mov
adc
push
sub
popf
add
out
int
es
mov
push
jp
outsl
loop
cmc
adc
jno
outsl
insl
daa
push
outsl
sbb
jb
daa
pop
arpl
sub
in
push
xchg
outsl
fldcw
adc
inc
dec
push
pop
jb
fs
out
rcrl
pop
inc
mov
push
xor
push
sub
push
movsb
psubusb
push
test
arpl
xchg
out
mov
mov
xor
in
adc
fldenv
cmp
sub
xchg
push
sub
or
popf
lret
mov
jmp
inc
rcr
aad
or
jno
test
arpl
dec
push
dec
and
xchg
mov
jno
mov
mov
push
sub
test
pop
outsb
lret
ret
inc
push
adc
and
loopne
sub
mov
das
mov
gs
imul
and
lahf
popf
in
adc
push
xchg
pop
push
adc
inc
orl
call
gs
gs
inc
fs
add
xor
push
inc
sub
cltd
rorl
mov
sahf
xor
mov
push
gs
imul
fsubrl
cmpsb
daa
mov
rorl
xor
sarl
popl
cmp
in
pop
jb
sub
rcrb
das
stos
dec
lret
push
stos
and
push
fistps
insl
xor
xor
pop
ret
pop
sbb
pushf
push
push
mov
add
xor
xchg
add
insl
dec
ljmp
fdivrl
shll
sbb
sub
push
xor
xchg
push
sbb
shll
sub
add
pop
sbb
or
jecxz
insb
aaa
jb
pop
xchg
cs
pop
xor
lods
or
cld
out
inc
xor
sbb
add
cmp
pusha
jb
in
cmp
sbb
jnp
jnp
mov
lcall
stos
aas
xor
sub
inc
inc
mov
cmpl
out
pop
push
into
push
sub
iret
mov
pop
add
es
push
insb
ss
es
ret
pop
out
cmpsl
mov
scas
push
loop
mov
das
cltd
sub
mov
fdivr
lods
in
xor
add
cmp
dec
arpl
cmc
jp
addr16
popa
pop
mov
in
jb
jo
cmc
outsb
repz
lock
outsl
cmc
cmpsb
shl
loop
adc
cltd
pop
daa
push
ret
jmp
cmp
into
arpl
or
inc
xchg
mov
and
jp
out
xor
clc
lret
insb
pop
xlat
jle
dec
adc
out
push
insb
pop
adc
sub
add
push
daa
pop
mov
dec
arpl
mov
jb
out
fwait
pop
cmc
xchg
or
loope
lea
sub
xor
lock
test
mov
lea
sub
jae
mov
sub
jno
ss
cmp
push
test
sti
xor
cmovge
fdivrl
push
imul
inc
mov
fcoml
mov
cmp
dec
test
clc
lds
lods
repz
addr16
mov
loope
outsl
add
daa
sub
cld
int3
insb
ficompl
and
lahf
xor
xor
adc
fldenv
sub
gs
xchg
fs
mull
ret
push
ror
push
gs
inc
xchg
cmc
mov
mov
fdiv
dec
ljmp
sub
subl
xchg
or
pop
mov
cs
add
pop
test
push
enter
cmp
mov
in
arpl
cmp
pop
cmp
pop
test
scas
pop
mov
pop
mov
mov
inc
inc
push
add
push
jmp
aam
jmp
stos
mov
pop
iret
les
popf
mov
mov
outsb
sbb
mov
je
in
pop
data16
fldenv
imul
imul
icebp
int3
sub
push
push
xor
push
xchg
xor
sub
add
and
lea
pushf
dec
or
xor
lea
and
mov
fwait
insl
dec
pop
push
sbb
insl
in
push
sub
in
xor
cs
xorl
push
aam
pop
xor
ljmp
in
aad
ss
pop
jno
aam
in
xor
sarl
adc
push
ljmp
push
xlat
ss
gs
push
lods
aas
into
sbb
pop
mov
repnz
and
shrb
std
sub
xor
clc
xor
and
loopne
xor
fs
mov
dec
jae
gs
nop
out
or
inc
or
fldenv
sbb
rolb
pop
stc
push
mov
and
jb
xchg
aam
fnstcw
xor
movsb
add
jno
das
dec
and
push
roll
inc
sbb
adc
ret
outsl
xor
clc
and
push
cwtl
popa
lds
shrb
xlat
lea
bound
pop
cmp
add
in
push
jmp
cwtl
mov
int3
cmp
lods
in
mov
lea
and
mov
arpl
cmpsl
fbld
and
adc
mov
jae
dec
cmp
pop
add
clc
mov
imul
inc
pop
cmp
insb
gs
push
mov
arpl
sbb
mov
js
iret
lea
arpl
loopne
lea
test
hlt
or
sbb
sub
faddl
shrl
hlt
xchg
sub
mov
pop
lock
and
add
clc
add
mov
sbb
sub
stos
xchg
inc
in
sbb
shl
aad
and
jns
xchg
jge
and
mov
push
inc
pop
jo
std
xor
dec
and
into
adc
insb
pop
lea
sti
in
sub
pop
sub
xor
gs
pop
and
mov
jmp
cmpsb
inc
and
adc
add
sub
pop
psubb
push
loopne
imul
pop
inc
dec
repz
inc
xor
hlt
xor
es
xchg
or
xor
data16
call
dec
dec
inc
dec
in
lock
insb
and
out
repz
add
push
rcrb
fnstenv
int
pop
xor
pushf
dec
sub
sub
iret
sub
je
push
or
mov
sub
jb
or
pusha
xor
cmp
sub
ret
fs
lea
jp
insl
mov
xchg
int
imul
adc
fmulp
insl
push
out
test
cmp
popa
mov
popa
cmc
mov
loop
hlt
lcall
insl
add
push
push
cmp
cmp
cmp
sub
xor
push
mov
cmp
xor
in
cmp
xor
mov
roll
or
dec
dec
jno
out
adc
das
cmc
lret
in
repnz
mov
out
lods
clc
cmpsb
adc
mov
sbb
cli
dec
lock
insl
pop
sub
xor
testb
stc
and
dec
push
and
fisubl
push
fidivl
bound
loopne
sub
add
in
xchg
and
jae,pn
mov
gs
dec
xchg
aam
xchg
sbb
xchg
xchg
cmp
rcrl
in
and
xor
push
popf
add
push
push
scas
idiv
arpl
dec
fs
xchg
jge
xor
hlt
jno
fsubs
jge
movsl
je
xchg
dec
inc
inc
mov
adc
fs
inc
inc
loopne
lock
aam
leave
add
popa
nop
cs
ljmp
push
mov
add
dec
sub
inc
jg
mov
pop
aad
popa
or
sub
mov
inc
add
push
push
test
vmovd
and
sti
lock
sub
aad
inc
cmp
das
clc
pop
call
pop
jge
adc
xor
faddp
ds
cmpb
icebp
mov
push
wbinvd
adc
mov
gs
cmp
mov
inc
push
outsl
out
jno
or
roll
mov
fdivl
hlt
in
je
push
bound
out
dec
mov
rclb
cmp
fcmovu
daa
lods
inc
pop
andl
fstpt
push
mov
inc
lods
shrl
pop
mov
aam
push
xchg
mov
in
das
dec
add
lret
sarb
mov
je
xor
adc
es
and
push
pushl
fnstenv
insl
out
cli
xor
imul
inc
mov
inc
and
mov
frstor
popa
xor
pop
and
mov
lea
adc
cltd
mov
insl
add
cld
cs
adc
and
or
jnp
inc
ss
adc
lods
ficomps
jno
fsubl
xchg
add
and
call
les
insb
inc
int
cmpsl
ljmp
test
push
outsb
popa
lea
fwait
xchg
outsl
lea
mov
loopne
pop
mov
in
clc
rorl
shrl
ds
inc
sub
rorl
popa
mov
dec
outsb
out
push
sub
cmp
into
sbb
xchg
dec
jmp
or
cld
push
lds
inc
lock
bound
push
pop
pop
mov
ljmp
aam
dec
cmp
xor
pop
mov
into
in
mov
ja
xor
xchg
stos
and
xchg
dec
rolb
xor
idivb
mov
cmp
sub
outsb
jns
into
subl
clc
into
mov
inc
movsl
gs
jmp
repnz
sub
rcll
imul
push
int3
leave
mov
or
or
in
cmp
mov
xor
out
xor
pop
in
out
xchg
in
jg
scas
or
push
mov
sub
pop
shll
movsl
jae
insl
rcrl
insl
mov
sbb
cmpsb
mov
pop
inc
mov
gs
jno
and
stos
movsl
std
inc
xchg
ret
xlat
sahf
mov
or
ljmp
adcl
xchg
lahf
sub
xor
lock
lea
cltd
cs
test
or
ja
push
and
or
pop
insb
mov
mov
mov
adc
dec
cwtl
sub
mov
jge
xchg
outsl
mov
mov
inc
sarl
pop
sub
gs
lock
dec
push
shll
cmp
inc
dec
xor
mov
pop
and
or
sbb
mov
leave
sub
popf
jmp
mov
and
pop
mov
int3
addr16
daa
stos
sub
pop
nop
loope
and
add
dec
stc
push
imul
jnp
jns
mov
test
mov
push
lcall
mov
imul
into
addr16
sbb
repnz
loope
test
or
nop
jecxz
inc
insl
adc
push
loopne
fildl
pop
mov
xor
cmp
dec
or
test
and
xchg
insl
fs
je
loopne
out
mov
or
jge
push
cmpsb
xor
xchg
lret
pushf
je
int3
inc
xor
mov
je
inc
clc
mov
test
pop
loop
jb
add
outsb
cmp
or
out
arpl
pop
mov
loop
adcb
in
and
inc
iret
daa
and
mov
sbb
imul
aas
decb
mov
gs
insl
repz
jl
in
inc
jbe
jb
clc
gs
push
jmp
mov
imul
jno
xor
nop
repnz
test
pop
adc
sbb
enter
gs
subl
bound
and
mov
add
dec
movsl
pop
stc
ljmp
imul
mov
sub
ljmp
je
or
adc
inc
cmp
mov
or
out
or
push
mov
cmp
test
fnstcw
aad
fs
in
fnstenv
dec
mov
dec
inc
lret
push
mov
xchg
mov
mov
punpcklbw
pop
inc
sbb
xor
pop
push
mov
adc
mov
inc
and
xchg
sub
dec
push
cmpsb
and
mov
aaa
jno
cmpsl
push
subl
in
xchg
and
inc
jmp
mov
cmpsb
xor
adc
mov
or
push
aad
in
push
sub
pusha
and
sarb
ficomps
daa
and
out
pop
dec
pop
cmp
mov
call
xor
and
into
mov
pop
adc
icebp
push
fbld
clc
xor
pusha
enter
and
aas
mov
icebp
dec
imul
lock
and
daa
insb
sbb
sub
cli
fdivrs
xchg
dec
cli
call
add
pop
mov
sti
sub
clc
xchg
dec
mov
in
mov
jecxz
add
je
push
cli
and
mov
jge
ficompl
push
push
lcall
jecxz
sub
mov
jno
inc
ret
jp
push
jmp
movsl
cmp
fbld
je
add
fstpt
xlat
xor
add
and
cmp
insl
rclb
gs
dec
and
add
push
rcrl
decl
lods
push
dec
xchg
loope
iret
and
mov
push
inc
pop
push
mov
dec
push
xor
mov
jp
mov
or
mov
cli
cltd
xor
push
push
shrb
daa
pop
adc
and
push
mov
and
dec
sahf
sub
sub
xchg
pop
outsl
jbe
mov
lea
out
sub
mov
ljmp
mov
inc
mov
push
popa
fdivrl
out
jno
sbb
lods
insb
sub
addr16
mov
mov
cmp
and
sbb
sbb
insb
cld
pop
int3
sbbb
pop
add
loopne
mov
mov
and
popf
stos
fnstsw
xchg
jl
in
cmp
les
imul
mov
push
mov
roll
call
ss
push
mov
mov
out
hlt
mov
fdivl
in
int3
push
stc
mov
push
inc
std
inc
out
jns
pop
or
and
mov
adc
push
ds
idivb
insl
sbb
cmp
adc
aam
cmp
mov
mov
in
pop
xor
clc
jmp
inc
call
arpl
sub
or
fs
iret
mov
push
in
inc
lods
mov
enter
shlb
jo
sub
xor
scas
jo
ljmp
popa
push
sbb
adc
arpl
fs
cld
lock
push
in
roll
adc
cmp
insl
fdiv
and
push
aad
rcll
leave
in
lds
rcll
push
jle
mov
pop
lods
pop
test
bound
movsl
in
shlb
cltd
rorl
xchg
movsb
and
int3
cmp
jo
test
jg
jge
sbb
cmp
inc
dec
es
dec
aas
js
out
pop
dec
inc
adc
add
repnz
xor
pop
dec
xor
lds
jns
ds
movsb
jmp
mov
push
jae
lods
sub
push
add
aam
inc
pop
jbe
ret
repnz
sbb
push
imul
std
jno
push
mov
sbb
add
add
into
in
repnz
sbb
lret
scas
push
push
pop
cmp
mov
testl
fildll
fcompl
scas
inc
dec
pop
in
or
mov
shll
in
sub
outsl
fildll
out
sub
test
mov
mov
push
mov
sub
movsb
pop
xchg
inc
jno
cmp
lret
xor
cmp
gs
pop
imul
inc
ss
sbb
add
popa
jo
push
lods
clc
dec
lds
sbbl
xor
cld
inc
adc
xchg
pop
mov
push
addr16
insl
dec
add
test
jno
cmpsl
decb
mov
cmp
loope
mov
int
cmp
cmp
push
mov
mov
insl
push
xor
jne
popf
rcrb
lea
hlt
outsb
push
gs
lcall
lock
nop
sti
ret
jmp
jmp
pop
cmpsb
and
jbe
sti
insb
gs
add
jle
fisubs
rorb
out
pop
cltd
pop
mov
punpckhdq
inc
inc
adc
jmp
stos
push
cmp
jno
adc
fimuls
movsl
arpl
pop
outsl
ret
mov
jns
push
test
xchg
add
fcmovnbe
sbb
or
sbb
push
lods
and
pop
xor
ljmp
int3
dec
push
jns
pop
in
stos
mov
popf
outsb
lea
push
jge
and
fwait
mov
xchg
adc
and
push
in
loope
int3
testb
test
inc
inc
addr16
dec
cmpsl
sub
add
push
lods
push
dec
sbb
push
xchg
pop
jb
pop
jl
pop
into
dec
movsb
pop
jecxz
mov
daa
dec
and
lret
push
in
fxch
lods
dec
lea
mov
scas
gs
adc
jmp
xchg
xor
daa
adc
movl
vsubsd
roll
mov
and
pop
aad
dec
or
mov
mov
pop
out
in
pop
stos
andl
and
sub
pop
add
mov
aaa
and
mov
in
add
sbb
adc
or
fdivs
sbb
mov
insb
xlat
mov
cmp
lock
test
jecxz
insl
rolb
inc
sub
shll
int3
xchg
xchg
sahf
xchg
mov
cld
inc
lahf
out
out
mov
jle
inc
xorb
jmp
cmp
mov
ja
and
leave
in
jno
inc
or
bound
mov
add
les
subl
cwtl
in
mov
fs
dec
mov
mov
inc
ljmp
mov
pop
je
mov
je
pop
fstpl
es
jl
jecxz
adc
dec
lea
sub
popf
js
mov
jo
and
push
cmpsb
cmp
scas
add
dec
mov
sub
adc
dec
cmp
lret
cltd
fs
mov
lret
dec
xor
fcmovnbe
gs
add
cmp
ret
and
jb
notb
dec
push
insb
std
fs
mov
test
loope
pop
dec
mov
mov
fbstp
sahf
icebp
sub
cltd
stc
jo
shr
push
repnz
sbb
push
std
mov
push
xchg
roll
mov
dec
jae
and
and
je
jae
test
and
test
add
rcr
jae
jae
jecxz
std
adc
jmp
add
push
in
pop
insb
inc
mov
push
js
pop
ljmp
nop
xor
add
sahf
jmp
imulb
es
xchg
push
cmp
in
out
pop
xor
or
xor
add
popa
lock
pop
sbb
lea
push
aad
fbld
outsb
push
ror
xor
jno
lret
sbb
mov
mov
adc
cmp
inc
lock
fisubrs
lea
ja
sub
or
mov
f2xm1
lea
adc
fidivs
xchg
cmp
bound
jo
pop
mov
bound
jnp
sbb
sbb
pusha
dec
jo
insb
mov
mov
push
dec
stos
xchg
pop
mov
sbb
cmp
insb
lods
jge
jnp
inc
pop
mov
and
dec
adc
jnp
jb
lahf
push
cmp
and
pop
insl
je
cmp
sbb
inc
pushf
pop
mov
add
aam
stos
sub
pop
test
insb
add
adc
and
pop
mov
pop
xchg
adc
loop
push
out
std
in
add
cmc
pop
fadds
dec
das
loop
pop
push
insl
call
xlat
lret
dec
push
push
sbb
mov
xor
popa
test
push
pop
fimull
mov
mov
push
imul
sub
mov
mov
cmp
ror
fisubrs
lea
loop
cmp
cli
mov
aam
aaa
mov
push
sahf
push
in
cmpsb
dec
jnp
fnstsw
mov
sub
lds
pop
pop
add
ret
insb
jno
dec
dec
clc
mov
and
sub
mov
dec
xor
std
test
lcall
push
out
cwtl
push
gs
mov
pusha
shlb
push
cmp
pop
push
outsb
xor
movsb
in
mov
fdivl
push
mov
stc
pop
xor
or
popf
aam
cltd
insl
xchg
lock
outsb
pusha
xor
pop
test
and
gs
fs
jno
xor
imul
pop
aam
pop
pop
sub
push
pop
dec
dec
push
dec
jo
int3
gs
sub
cmp
xor
sub
cmp
daa
pop
and
jo
and
in
adc
adc
or
add
mov
imul
hlt
gs
dec
in
loopne
ljmp
inc
sub
inc
adc
sub
aad
shll
in
leave
adc
inc
ret
sub
fwait
push
xchg
in
dec
adc
inc
xchg
push
test
es
jo
push
sbb
roll
lods
push
test
call
lock
in
mov
test
fs
jns
xchg
and
pop
jae
das
stc
jno
insl
xor
fs
inc
popa
imul
fs
in
dec
adc
inc
fs
insl
cmp
xor
xor
adc
lock
push
adc
lret
push
in
in
or
add
pop
cli
out
xor
push
hlt
gs
in
mov
adc
pop
xchg
push
loopne
fsubrl
call
in
in
int
leave
push
lds
shr
mov
inc
sar
leave
andl
mov
xor
sbb
out
sbb
stc
cmpsl
mov
aam
xor
lret
push
push
jae
jle
jno
aad
call
iret
xor
test
sub
scas
push
mov
clc
aad
pop
sahf
xchg
in
add
push
xchg
idivl
out
in
insb
pop
push
stos
push
mov
add
mov
adc
fisttps
fisubrs
and
dec
es
xlat
inc
inc
mov
pop
push
jnp
frstor
arpl
push
loope
mov
stos
repnz
in
xorb
xor
fs
or
and
fcoml
leave
das
xor
xor
mov
shrb
push
sbb
mov
inc
mov
push
stc
push
xchg
inc
xor
xchg
insb
in
cwtl
loopne
loope
in
jno
rcrb
xor
in
icebp
mov
xchg
sub
arpl
mov
xor
xor
popa
repnz
enter
pop
repz
push
xorb
xor
cmc
mov
xchg
gs
and
imul
aad
cld
pop
fnstenv
je
add
pop
mov
arpl
repnz
mov
push
push
jecxz
dec
scas
pop
or
mov
push
outsb
jbe
push
push
in
or
push
jle
fidivs
jecxz
pop
or
sub
xor
add
add
shr
pop
outsl
sbb
pop
push
decb
fdiv
ljmp
jmp
pop
sbb
lret
sbb
jae
enter
sbb
xor
in
add
stos
loopne
pop
fs
cld
pop
push
mov
pop
mov
xchg
bound
mov
mov
sar
and
sub
inc
ds
arpl
pop
mov
popa
xor
dec
dec
cs
inc
mov
and
mov
add
inc
sub
pop
xchg
movsl
pop
jge
into
add
push
sbb
aaa
add
pop
and
pop
lahf
xor
mov
mov
jo
out
jmp
adc
add
popa
push
arpl
jmp
cmpsl
loopne
lret
push
inc
arpl
or
pushf
lds
mov
jmp
sub
pop
test
sti
inc
add
and
loope
lea
cmc
lret
jp
or
and
inc
lret
out
push
mov
ret
popa
push
popf
and
loopne
inc
pop
arpl
sbb
jb
out
push
sub
cld
cli
xchg
mov
mov
int
arpl
leave
cld
das
inc
int
xor
jl
les
add
pop
add
xchg
insl
mulb
xchg
les
test
inc
push
push
or
outsl
sbb
cwtl
out
je
jns
fs
shlb
push
dec
jmp
fnstcw
and
mov
aam
xor
in
aaa
daa
and
ret
dec
push
dec
adc
add
insl
push
lea
add
pop
mov
jbe
mov
fs
negl
shll
stc
outsl
mov
loop
mov
test
addb
mov
insl
in
push
pop
cli
hlt
adc
icebp
cmp
sub
mov
icebp
mov
jmp
insl
add
daa
lds
jno
pop
gs
mov
lret
ja
add
push
xor
or
outsl
rcrl
pop
push
out
das
sub
or
dec
popf
xor
loopne
sbb
sub
stos
jne
js
or
mov
into
sbb
fs
js
test
adc
inc
mov
outsl
xor
stos
dec
das
mov
neg
in
mov
mov
sub
and
dec
das
adc
push
sub
pop
sub
sub
aam
dec
xchg
sti
cmp
xor
xor
and
loopne
fcoml
cmc
push
pop
ret
mov
xlat
cmp
cmp
adc
clc
push
xchg
cmp
popa
xor
lock
cmp
clc
push
in
push
test
cmp
jae
sub
xchg
xor
mov
mov
fcomps
loop
and
adc
andl
call
sbb
gs
add
lret
mov
and
adc
add
icebp
mov
xor
outsb
mov
jg
mov
movsl
pop
vmovhps
bound
push
inc
xchg
push
je
xor
in
gs
js
jl
and
jg
pop
jno
lea
lds
add
fisttps
jle
aad
dec
gs
jg
jp
arpl
mov
jl
lds
jp
add
xor
sahf
in
pushf
sahf
or
ret
ret
pop
test
and
add
imul
xor
or
sub
push
adc
and
push
pusha
mov
jb
les
test
les
shlb
test
fs
out
pop
jmp
cmp
and
jbe
jns
cmp
push
sar
jns
les
imul
cld
bnd
subb
dec
adc
lret
fnstsw
sbb
xorl
lock
xchg
fs
and
pusha
mov
fs
fst
sbb
loope
and
in
and
fadds
mov
cmp
lea
out
rorl
push
pop
and
mov
pop
cmp
jl
into
ja
int3
ja
test
inc
mov
add
adc
jp
pop
push
mov
roll
aad
int
loopne
sub
aad
daa
sub
xor
sbb
mov
push
mov
jle
bound
mov
xor
xchg
lock
mov
out
clc
sub
cmpsl
movsl
test
and
sti
out
in
push
xor
movsl
adc
xchg
dec
jecxz
adc
subl
dec
pop
xor
leave
cmpsb
sub
adcl
jno
clc
xchg
xor
adc
movb
adc
xchg
pop
mov
divl
repnz
adc
scas
adc
adc
pop
lock
fidivrs
dec
jno
out
movd
pusha
test
add
xchg
test
jnp
push
mov
push
popa
scas
adc
lea
xor
add
dec
xlat
and
out
and
xor
and
pushf
adc
imul
dec
imul
jge
inc
xor
adc
push
push
mov
movsb
and
mov
rclb
inc
sbbb
dec
push
add
pop
cmp
cmp
movsb
push
xor
insl
adc
inc
pop
push
lea
xor
pop
mov
inc
and
xor
jge
les
push
sbb
subb
mov
cli
push
jmp
gs
cmp
add
lods
add
and
pand
xchg
sbb
sub
out
repnz
jne
mov
loop
ret
fadd
outsb
jecxz
cmp
pop
pop
enter
rcrb
mov
ds
jle
and
imul
mov
cli
in
jbe
xchg
shlb
mov
jg
mov
fs
into
push
jns
mov
sub
or
mov
xor
fcmovnu
fildll
mov
mov
xlat
cltd
push
loopne
es
mov
mov
xor
dec
icebp
neg
or
pop
rclb
movsl
lods
ljmp
xor
push
or
jg
pop
sub
inc
mov
xor
or
jnp
out
mov
sti
xchg
inc
popa
mov
aas
sbb
je
pop
fistpll
pop
gs
xor
shlb
imul
in
sub
pop
mov
into
test
mov
int
mov
sbb
mov
or
mov
and
addr16
xor
sbb
std
sbb
xchg
add
lahf
gs
push
add
or
or
push
dec
pushl
outsl
repnz
and
movsl
xor
sbb
and
movsl
gs
stos
push
and
mov
adc
lcall
pop
out
scas
mov
scas
dec
mov
imul
or
and
loopne
push
inc
fwait
loopne
and
iret
xchg
movsb
push
adc
mov
cmp
in
add
sub
lods
cmp
sbb
mov
cmp
jnp
pop
addr16
jo
mov
jp
dec
in
jb
fs
call
lret
dec
mov
dec
cli
jl
jae
imul
stos
jl
in
add
sbb
mov
pop
jno
pop
cmp
and
insb
insl
cmc
mov
insl
shlb
pop
mov
push
jns
lcall
fsubrs
pop
and
add
pusha
aad
sub
add
sarb
pop
pop
push
pop
in
xchg
andl
push
add
nop
insl
and
jbe
repz
xor
clc
mov
fs
test
and
xor
or
ret
sti
rclb
xchg
xchg
push
testl
cld
int
sbbb
push
scas
icebp
add
pusha
test
cltd
in
mov
cmp
inc
seto
inc
popa
pop
lods
pop
sbb
popf
or
cmpl
mov
cmp
add
outsl
mov
cs
mov
gs
arpl
into
imul
sbb
pop
pop
in
mov
testb
add
arpl
and
xchg
bound
jge
pop
fiaddl
sbb
stc
inc
mov
pop
add
ret
jmp
mov
ret
jno
jb
mov
sbb
push
adc
gs
fs
and
sahf
mov
push
insl
xchg
sahf
dec
hlt
cmc
lret
imul
or
xor
les
ds
dec
subb
xchg
cli
adc
aas
lods
lret
fstpt
outsb
aam
dec
xor
mov
outsb
imul
jb
dec
cmpsl
sbb
push
and
mov
add
int
push
flds
in
nop
idivb
sub
pop
gs
xor
sub
adc
adc
pop
and
pop
sbb
and
pop
dec
lret
sbb
xchg
add
xor
pop
dec
ljmp
cmpsb
or
imul
into
jno
cmp
fdivs
int3
jl
jle
xor
and
sbb
mov
push
aas
or
aam
or
fists
dec
sbb
jno
push
in
push
mov
insb
inc
add
leave
mov
dec
cmpsl
je
repnz
insl
imulb
loope
xor
in
mov
or
jno
ja
lea
sub
push
ds
clc
jne
jmp
mov
ret
gs
mov
dec
out
and
aam
insl
add
sub
out
jne
and
cmp
or
cmp
fstpl
mov
scas
sub
inc
ljmp
sub
xor
lea
ret
sub
and
sub
lock
pop
push
cmc
pop
mov
jae
dec
mov
adc
lods
je
lret
fwait
or
xchg
in
ljmp
cmp
lods
fisttpll
sbb
pop
push
mov
jbe
push
pop
mov
sub
cmc
xor
dec
stos
jecxz
in
mov
stos
sub
movsl
les
repz
and
lods
push
dec
ret
negb
xchg
or
pop
ja
popa
push
cmp
insb
jecxz
push
lret
movsb
in
insl
sbb
and
or
lret
sub
loopne
and
movsb
clc
in
popa
xor
lds
adc
inc
jg
pop
sbb
or
sub
mov
daa
imul
je
clc
pop
or
mov
sbb
sbb
repz
leave
or
push
in
imul
mov
and
dec
sti
mov
gs
mov
jae
cmp
jle
popa
cmp
and
mov
jl
sbb
stc
mov
dec
stos
and
jg
cltd
add
popa
mov
and
stos
arpl
push
mov
push
les
test
fidivl
movsl
insb
hlt
mov
xchg
and
lods
push
es
and
cmpb
gs
andl
inc
nop
add
push
jge
mov
xor
and
insl
cmpsl
iret
mov
sbb
xchg
clc
add
mov
mov
mov
push
and
push
fcoml
xor
xor
sbb
pop
rolb
dec
add
pop
imul
lcall
jmp
aas
mov
call
ljmpw
mov
jmp
dec
stc
push
mov
jg
int3
ds
sub
test
or
je
sbb
xchg
jge
jbe
divb
lock
dec
cmp
push
sub
loop
scas
test
test
pop
push
inc
or
and
mov
jge
xchg
call
fwait
push
je
xor
popa
outsb
jb
out
nop
fs
dec
cmp
inc
and
out
cmp
lods
dec
cmp
add
stc
jno
push
rol
das
in
xor
stc
addr16
cmp
jge
hlt
dec
mov
cli
sub
movsl
or
inc
clc
sbb
pop
sub
fists
cmp
pop
inc
pop
adc
mov
std
insl
clc
cmp
inc
pop
cmp
sti
pop
jp
mov
andw
pop
mov
ret
test
test
js
mov
ret
cmpsb
test
add
dec
gs
adc
mov
or
leave
xchg
adc
cs
sub
aad
push
mov
mov
test
xor
pusha
jle
fwait
inc
pop
outsl
add
cmpb
push
add
scas
pop
push
lcall
fstl
jae
idivb
lea
les
jb
call
cmpsb
jbe
xor
xlat
cmp
mov
xor
mov
push
pushf
sar
aad
pop
imul
lods
inc
pop
pop
movsb
inc
sbb
dec
bound
add
insl
adc
adc
push
loopne
mov
jbe
jmp
pop
stc
nop
xlat
call
push
pop
and
jg
repnz
outsb
testl
and
and
pop
mov
scas
in
and
vmptrst
repz
push
lods
imul
mov
mov
rolb
pop
jp
int3
fs
jmp
adc
loop
push
ljmp
mov
sti
push
jg
adc
mov
mov
ja
bnd
add
cmc
stos
mov
inc
and
push
mov
push
fbld
mull
jae
or
repnz
es
call
cmp
shll
dec
cmp
imul
jmp
stc
nop
xchg
loopne
push
xor
aaa
not
cmp
movsb
dec
insb
pushf
jmp
mov
pop
xchg
fs
and
cmp
xor
add
bound
daa
mov
das
cmpsl
sbb
adc
hlt
icebp
jno
xchg
mov
pop
sub
fmull
dec
fistl
addr16
or
es
cs
je
data16
or
test
lea
mov
repz
mov
xor
or
pop
sub
jmp
ss
cmp
jge
inc
int3
adc
sub
xor
sub
cmpsl
add
stos
mov
insl
sub
aaa
push
sub
xor
xor
nop
lods
in
cmp
dec
mov
xorl
scas
mov
icebp
gs
inc
and
push
sahf
jbe
jle
jecxz
pusha
and
and
push
das
mov
addr16
enter
dec
pop
mov
fwait
sub
decl
out
adc
cmc
dec
std
shlb
jbe
push
push
cmp
xorb
pushf
repz
test
test
xor
test
test
gs
das
dec
mov
mov
add
jle
scas
push
testb
int3
jp
outsl
sbb
or
clc
adc
pop
jno
pop
jae
mov
sub
push
js
mov
out
movsb
dec
bound
dec
lret
into
js
push
pusha
and
mov
xor
call
call
inc
fwait
scas
sub
xor
dec
fistps
jmp
mov
insb
popa
add
push
aad
mov
push
cmp
push
push
pop
inc
popa
std
jmp
fisubs
insb
xor
fldcw
sub
cld
xchg
sub
imul
repnz
and
mov
xor
mov
jne
outsb
dec
movsb
jmp
cli
mov
cmpsl
dec
fwait
push
mov
push
mov
push
mov
mov
xor
and
test
or
or
shl
xor
stos
repz
iret
jmp
into
xor
jge
mov
aad
mov
cmc
sub
jp
icebp
cmp
leave
jne
xchg
outsl
cmp
xor
arpl
out
and
adc
push
xor
and
push
jmp
xor
loope
lahf
pop
mov
inc
repnz
mov
and
push
push
pop
outsb
cmp
mov
cmp
and
pop
jnp
mov
adc
addr16
mov
loope
inc
shrl
xor
pop
inc
or
dec
sahf
outsb
dec
lods
adc
outsb
pusha
insl
jae
push
imul
mov
inc
jmp
repnz
out
pushf
inc
in
push
and
sbb
jg
jecxz
jp
mov
imul
faddl
xchg
mov
hlt
pop
shl
fisttps
inc
mov
and
inc
outsl
sar
and
sub
shl
dec
mov
in
and
in
pop
testl
mov
sub
cmc
add
imul
test
ret
pop
pusha
jmp
push
es
and
mov
rol
jns
in
sbb
sbb
arpl
in
or
das
pop
hlt
xchg
sahf
mov
data16
xor
push
shlb
pop
xchg
cwtl
rcl
xor
outsb
popa
jg
jno
stc
pop
and
int3
test
lahf
push
add
insb
add
insl
std
jecxz
mov
sub
cli
xchg
scas
cmp
stos
lea
pop
test
adc
dec
hlt
pop
xchg
lea
das
les
inc
call
sub
xor
sbb
es
xor
sahf
inc
filds
cltd
inc
mov
das
push
stc
je
push
push
fildl
int
sub
incb
mov
es
lea
push
mov
mov
es
jmp
popa
loope
gs
data16
sbb
rcrb
xchg
iret
or
lds
lcall
sub
maskmovq
divl
imul
inc
push
push
out
inc
jp
inc
adc
shrl
imul
cmp
aaa
stos
pop
insl
cli
and
jmp
icebp
push
js
call
mov
sub
and
mov
in
xor
jge
addr16
jp
jae
scas
jno
add
and
xor
push
and
sbb
mov
insl
in
mov
xor
inc
mov
inc
aas
xchg
test
pop
popa
test
dec
popf
dec
outsl
mov
push
mov
sbb
bound
shrb
jmp
lea
outsb
mov
xor
rol
lds
jno
push
sbb
nop
int
fdivrs
jp
das
iret
or
in
fstpl
in
das
and
cs
scas
fsubs
hlt
mov
mulb
push
ss
in
cmpsl
xchg
in
ficoml
sbb
push
add
push
sub
or
mov
inc
jbe
imul
mov
jne
lock
or
mov
out
mov
in
out
imul
xor
dec
imul
adc
je
xor
jmp
insl
das
and
xchg
adc
sahf
mov
mov
repz
mov
das
flds
pop
out
movsl
dec
pop
faddl
inc
jns
and
jno
cltd
mov
lods
outsl
push
test
add
out
push
imul
adc
pop
scas
out
jno
push
push
xlat
push
fnstcw
cli
cmp
mov
lods
dec
inc
mov
cmp
sbb
xor
lock
cmp
call
mov
xchg
pop
push
out
lock
addr16
xor
sbb
cli
je
outsl
dec
dec
mov
jge
xor
shll
cmp
xor
lods
cmp
xor
lea
add
pop
adc
add
lods
fnstenv
and
das
pop
push
inc
ss
adc
jbe
mov
or
dec
mov
and
outsl
test
imul
loopne
and
pop
fldpi
push
ljmp
and
loopne
fdivrp
adc
mov
lods
pop
test
xlat
mov
push
xchg
jo
sbbl
sbb
xor
shlb
sub
inc
sbbl
gs
add
sarb
pushf
in
outsl
fcompl
call
outsl
gs
sbb
and
pop
pop
imul
cmp
dec
push
mov
fistps
das
or
mov
cmp
xchg
leave
lds
pop
mov
jl
jae
mov
repz
insl
addb
mov
fists
repz
lods
xchg
sbb
shl
sbb
add
fs
cmp
xor
pop
je
std
push
xchg
pop
out
push
in
xor
jge
out
in
mov
xor
fmul
into
out
fisubrs
imul
fwait
adc
jg
test
and
das
mov
add
jae
or
stc
push
adc
dec
sbb
mov
aam
mov
lea
cmp
leave
ret
sbb
rcll
test
jmp
les
mov
in
dec
push
add
imul
cs
mov
femms
mov
adc
sub
arpl
fstps
dec
pop
hlt
push
in
in
clc
nop
in
dec
adc
out
add
ret
cmpl
fldcw
gs
stc
lds
imul
lcall
xor
lods
stos
adc
imul
in
lods
arpl
adc
imul
popf
inc
lea
mov
and
push
dec
in
stos
imul
push
mov
add
mov
xchg
mov
pop
mov
cs
push
outsb
in
lods
push
xchg
outsl
add
gs
ljmp
loopne
push
push
push
hlt
arpl
jmp
inc
lea
lock
or
es
rcr
adc
push
fdivp
and
gs
out
jae
in
xor
out
movsl
pmullw
je
ss
and
int
sbb
mov
add
dec
mov
add
icebp
mov
jno
lock
dec
and
cmp
cmc
pop
jno
push
sub
jmp
push
and
xor
pushf
ds
inc
pushf
jmp
inc
scas
aad
sub
lea
xchg
mov
movsl
and
js,pn
in
add
daa
mov
sarb
movsb
sbb
adc
add
push
sbb
or
xchg
mov
repnz
gs
repnz
pop
cmc
js
dec
add
jb
pop
movsb
mov
icebp
pop
xchg
push
jge
addr16
out
adc
xchg
lds
bound
enter
or
sub
inc
fs
jmp
and
push
mov
dec
jmp
dec
push
xor
inc
scas
add
push
pop
dec
in
mov
imul
mov
movsb
jnp
sub
icebp
loopne
dec
fucomip
add
or
cmp
and
mov
outsl
xchg
mov
cmp
lcall
daa
mov
jl
sbb
insb
mov
cmp
movsb
je
or
xor
lea
xor
jmp
push
jecxz
inc
jns
dec
ja
adc
lea
cmpsl
into
dec
insb
inc
cmp
insb
jb
lea
xchg
negl
mov
scas
mov
mov
inc
mov
and
dec
mov
scas
pop
lods
mov
mov
ret
dec
mov
shlb
sub
jnp
mov
sub
pop
push
sub
or
sub
cmp
push
and
pop
sub
push
and
loop
sbb
cs
out
in
and
sbb
fs
or
pop
bound
and
bound
mov
xor
bound
nop
in
adc
xor
mov
or
or
dec
add
sbb
cltd
das
iret
pop
xor
arpl
scas
push
dec
jmp
mov
scas
or
or
push
cmpsb
dec
daa
and
out
out
cmpsb
sub
mov
insb
cltd
cmpsl
and
movsl
arpl
cs
dec
test
cmp
scas
clc
out
fadds
in
icebp
inc
and
dec
dec
dec
push
inc
xchg
in
test
insb
pop
xor
in
sub
xchg
inc
pop
imulb
cmp
push
add
mov
sbb
ljmp
gs
and
and
cmp
mov
jbe
adc
jb
inc
cmc
scas
pop
push
push
mov
rcr
fbld
insl
push
pop
cmp
pusha
dec
push
and
mov
mov
mov
insl
fisttpl
xchg
aas
push
pop
popf
insb
or
jae
dec
int
sbb
jl
cmp
and
mov
repnz
sub
into
sub
ret
cmp
xor
testb
cmp
mov
mov
push
sub
lea
popf
gs
in
mov
aad
movsb
and
pop
or
clc
in
sub
mov
icebp
inc
ljmp
lret
clc
fisubrl
ss
jo
out
xchg
rorl
xchg
sub
add
and
push
push
push
dec
scas
in
sahf
shr
sbb
rclb
insl
sub
dec
out
imul
sbb
mov
sbb
dec
lods
xor
adc
addr16
data16
imul
xor
orl
mov
sbb
cmp
xor
out
push
lods
adc
and
mov
cmp
mov
es
popa
pop
sub
push
pop
cli
push
mov
jge
push
lock
jmp
sub
fcompl
sub
dec
aas
xor
jo
or
mov
adcb
pop
fisttps
bound
imul
test
mov
xchg
sti
inc
pop
es
pushf
rcll
je
les
les
popa
mov
sbb
incl
out
mov
inc
lcall
in
sbb
jbe
enter
lods
leave
or
in
repnz
add
cmc
scas
adc
xor
xor
adc
testl
cmp
add
push
sub
mov
fistl
stos
pop
test
lock
cmpsb
inc
jmp
xor
inc
pusha
popf
cmp
movsl
hlt
and
pop
insl
popf
scas
outsl
sbb
sub
shl
push
andl
gs
add
mov
icebp
in
pop
add
sub
out
arpl
push
in
cmp
addr16
fistl
push
jge
cmp
hlt
jo
add
push
add
xchg
push
push
imulb
outsl
hlt
jmp
add
jno
bound
iret
popa
into
repnz
xor
pushf
jb
scas
adc
add
icebp
popa
lea
pop
in
mov
rorl
push
dec
inc
push
loopne
jno
fidivl
lea
sub
out
add
sub
jb
out
sub
cs
xor
sub
jae
jne
jns
lods
inc
xor
arpl
push
popa
out
mov
push
inc
fistpl
notb
dec
push
rcr
test
aas
test
sub
xor
andl
hlt
nop
push
sub
mov
inc
lods
adc
push
inc
jnp
mov
pop
cmp
add
fldcw
pusha
aad
inc
shl
in
mov
mov
inc
dec
ljmp
imul
mov
fs
not
pop
pop
arpl
jb
jne
push
out
inc
mov
cmc
xchg
mov
xor
popf
popa
jmpw
gs
in
mov
mov
cmp
cld
and
cmp
insl
jbe
cld
mov
adc
les
wbinvd
stc
sbb
push
mov
cmc
lock
roll
cwtl
sbb
and
cltd
pop
insb
xorl
mov
push
cmp
lods
rcrb
int
sub
add
cmp
call
cwtl
ss
in
mov
jp
pop
popa
cmc
mov
xchg
idivl
lret
bound
or
push
test
icebp
dec
add
jb
fld
add
lahf
int
aam
fistpl
shl
cmp
outsl
xchg
jp
cmp
pop
popa
in
loope
xor
cli
pop
popa
in
icebp
gs
stc
dec
jmp
int3
mov
pop
and
ret
cmp
pop
imul
or
jnp
add
cmp
es
mul
jge
dec
jl
and
and
push
ds
lea
scas
outsl
mov
and
insl
lahf
outsl
xchg
das
scas
mov
insb
pop
nop
int3
fs
sar
les
sub
xor
ret
lahf
pop
cmp
insl
shl
xchg
dec
mov
or
jl
aam
in
fadds
push
clc
cmp
mov
sbb
inc
scas
ret
xchg
xchg
shlb
pop
shrl
arpl
test
sub
insb
push
shlb
stc
xor
into
in
lea
jb
gs
into
pop
xor
dec
inc
subb
add
int
lret
push
mov
int3
fs
lret
push
pop
xor
mov
lret
sub
pop
imul
jl
mov
mov
xchg
pop
fs
push
insb
sbb
push
cmc
loope
mov
fdivrl
xchg
mov
adc
into
mov
dec
jne
fwait
adc
call
out
add
fists
ret
mov
push
repnz
cs
std
sbb
inc
mov
lahf
and
out
mov
jge
fisttpll
or
cs
inc
insl
outsb
xorb
mov
scas
adc
ja
outsb
dec
ret
mov
mov
inc
or
in
and
mov
mov
dec
xor
mov
punpcklwd
loop
mov
mov
fisubrs
lods
cltd
push
xchg
pop
je
lret
lds
dec
push
orl
adc
inc
lock
rclb
shrb
popa
jle
sbb
fistps
ficoml
pusha
repz
sub
lds
pop
ret
or
imul
pusha
and
xchg
inc
or
loop
or
out
sahf
pop
aad
out
shlb
call
in
add
xor
mov
mov
cmp
out
leave
jb
jmp
jmp
or
and
sub
mov
push
pop
xchg
push
and
in
dec
bound
std
adc
and
sbb
xor
mov
mov
jmp
fwait
mov
mov
lea
lods
outsl
movl
add
repz
or
hlt
sahf
mov
scas
xchg
add
pop
mov
popf
jne
mov
xor
cmp
adc
jae
shrl
xor
sub
fadds
aaa
and
in
push
inc
or
out
mov
outsl
jbe
dec
bound
and
dec
je
push
push
sbb
jmp
xchg
and
jae
imul
jmp
mov
iret
dec
test
jbe
repnz
into
mov
jnp
loop
cmc
inc
aam
adc
pop
pop
add
jecxz
push
es
jno
mov
iret
shll
and
fcmovu
stos
cmp
popa
xchg
in
into
movsl
inc
mov
pop
fs
add
inc
lea
pop
aam
push
and
push
repnz
xor
xchg
jnp
in
xor
test
add
sub
outsb
shlb
lea
jno
outsb
mov
xchg
std
cmc
test
jno
sti
call
jle
pop
call
pop
imul
test
cmpb
xchg
xlat
cmc
mov
mov
jmp
in
add
pop
dec
jnp
jns
outsb
dec
xchg
inc
popf
pop
dec
ljmp
jb
shlb
jne
mov
dec
and
push
mov
lods
aad
into
cmp
push
lea
data16
jmp
je
sbb
cmpsb
cmp
jge
push
clc
cmpl
scas
pop
gs
pusha
cmp
push
arpl
xor
shl
adc
mov
push
roll
rcr
movsb
push
or
hlt
test
xchg
mov
test
in
mov
and
pop
inc
imul
cmpsb
mulb
adc
gs
mov
loope
push
int
arpl
pop
out
xor
and
add
jp
out
insl
jbe
pushf
outsb
push
lods
adc
inc
and
mov
cmp
and
mov
pop
sub
sbb
inc
jmp
pusha
and
shlb
negb
lea
and
push
aaa
ret
mov
int3
inc
cmp
jno
ficomps
leave
sub
mov
mov
cli
xchg
xchg
aas
clc
notl
mov
pop
or
fs
aaa
or
add
xchg
pop
inc
push
and
data16
in
jp
xor
ja
out
xor
loopne
shrl
mov
dec
mov
cmp
stc
inc
add
xchg
pop
lea
fdivr
xchg
push
in
xor
push
cltd
dec
into
xor
movsl
dec
test
push
jmp
in
or
fs
jle
lret
and
adc
aam
mov
movsl
stc
repz
push
pop
in
js
cmpsl
ja
rcr
dec
and
insb
mov
sahf
xchg
fists
lds
lea
mov
jecxz
xchg
xor
insl
dec
xor
push
bound
rorl
adc
stos
loopne
sbb
pop
and
scas
out
insb
cmp
gs
sub
sub
lds
hlt
lods
push
popf
xchg
fdivr
mov
pop
call
xor
in
rcrb
push
out
inc
push
pop
jg
cmp
add
hlt
insl
iret
adc
cmc
test
movsb
lahf
cld
insl
addr16
shll
push
ret
mov
push
sub
imul
or
and
cmp
loopne
js
in
pop
lods
arpl
sub
and
test
inc
test
mov
imul
cs
and
adc
stc
divl
sub
pop
daa
mov
clc
dec
lods
lcall
int3
push
push
pop
repz
cmp
shlb
dec
inc
and
in
movsl
push
cmp
lock
and
imul
sub
dec
dec
sub
nop
push
xor
xor
inc
pop
mov
xchg
or
push
pop
rcl
in
sub
or
sub
ret
cld
inc
add
sbb
jle
ss
push
ret
jge
cmp
lcall
jg
stos
mov
ja
andnps
and
bound
gs
stos
loope
cmp
mov
or
mov
insl
shlb
lcall
xor
mov
dec
outsb
fdivl
xor
aaa
jp
cwtl
pop
and
xchg
jno
fs
popa
mov
fs
mov
and
jp
or
mov
mov
insl
mov
js
loope
add
mov
xchg
mov
scas
xchg
and
imul
pop
daa
scas
mov
imul
lcall
push
push
orb
dec
test
dec
mov
adc
sub
std
arpl
pop
movsl
dec
lea
ret
jg
idivb
mov
pop
jmp
or
mov
sub
and
mov
lcall
mov
cmp
adc
jo
scas
pop
jb
idivb
imul
dec
jecxz
push
sbb
adc
push
pop
and
in
push
or
push
lds
add
cltd
out
sub
inc
jnp
int
mov
cmc
jbe
loop
arpl
stos
sub
gs
ja
imul
in
nop
push
push
dec
jo
sbb
cmp
and
dec
fs
leave
xchg
pop
movsl
ret
insl
dec
pop
cs
movsb
jmp
lods
dec
sub
inc
sub
stc
scas
and
dec
pushf
jl
arpl
ja
pop
lock
jmp
sub
push
clc
movsb
in
inc
popa
xor
jmp
in
ror
dec
out
mov
sbb
and
je
and
sub
scas
pop
xchg
stos
das
pop
lea
psubsw
arpl
movsl
jo
add
push
popa
push
push
imul
add
dec
jge
pop
pop
test
adc
aas
lock
lods
xor
jno
outsb
mov
xchg
loop
sbb
lea
pop
sub
or
inc
add
add
mov
lea
int
stc
sub
pop
cld
cmpsb
das
das
xor
dec
jmp
mov
rorb
xchg
scas
pop
pop
fs
and
lods
xchg
test
stc
xlat
mov
lret
inc
jno
xor
lods
dec
cli
mov
cmp
sbb
xorl
inc
jns
jne
stos
jg
pop
mov
mov
out
pop
mov
lret
je
cmp
xchg
in
xor
es
jg
sub
lods
mov
cmpsb
push
fwait
outsb
dec
in
ljmp
and
inc
pop
ljmp
mov
jg
mov
xchg
mov
leave
loopne
outsb
in
movsl
mov
adc
adc
add
and
dec
jmp
shlb
adc
push
lods
gs
adc
inc
and
jno
push
mov
adc
mov
out
divl
loopne
sbb
and
into
jns
stos
mul
dec
sbb
in
add
sbb
sub
cmp
cmp
mov
in
repnz
arpl
inc
mov
sti
ljmp
add
sub
aas
das
in
cmp
and
movb
sub
pop
add
pushf
pop
cs
pushf
mov
insb
xchg
into
pushf
jge
outsl
sbb
pushf
test
and
push
xchg
arpl
xchg
fcom
cli
mov
lock
xchg
ficomps
add
mov
sub
test
cld
hlt
out
es
and
push
lock
and
pop
jmp
divl
pop
pop
loopne
arpl
notb
outsb
in
test
dec
lods
mov
test
pop
mov
mov
popf
std
jg,pn
lcall
mov
popa
pop
push
int
je
add
movsl
mov
stos
ljmp
mov
mov
popa
je
cmp
jmp
dec
hlt
fcomi
mov
scas
jo
fisubl
cli
mov
sbb
push
mov
repz
add
jp
int
or
push
mov
xor
stc
imul
ljmp
pusha
push
sub
jne
mov
jb
fwait
in
flds
mov
dec
fs
lods
mov
aam
fwait
daa
and
pop
test
bound
enter
xor
pop
popa
ljmp
mov
testl
xchg
xlat
push
jmp
xchg
std
sbb
push
mov
loop
push
cmp
movsl
sub
push
sub
mov
jbe
lret
imul
pop
jl
jbe
lock
icebp
jno
aas
mov
push
xorl
mov
ret
xlat
pushl
lds
sbb
repz
cmp
pop
add
insl
insb
cli
lea
movsl
test
or
imulb
or
sti
frstor
push
adc
je
jmp
out
insl
in
mov
pop
cli
inc
mov
jns
mov
mov
dec
add
jg
adc
inc
inc
mov
push
imul
cmp
push
push
and
lret
movsb
ret
arpl
bound
sbb
repz
mov
ret
mov
add
inc
pop
jmp
xchg
sub
or
arpl
dec
les
insl
pop
in
pop
push
sbb
andb
arpl
outsb
cltd
mov
enter
cwtl
mov
adc
lcall
jecxz
cmp
insl
aad
mov
gs
inc
and
or
int
dec
aaa
or
or
je
dec
ljmp
aaa
insl
lret
in
add
mov
addr16
test
pop
hlt
dec
push
fbld
das
nop
inc
push
daa
lock
sub
shr
rcrb
popf
mov
mov
mov
jbe
adc
sbb
cmp
in
add
xor
cltd
inc
inc
repz
outsl
int
inc
arpl
ja
mov
and
dec
popa
inc
adc
inc
pop
aam
adc
cmp
or
insb
js
mov
inc
adc
js
dec
mov
mov
icebp
xor
adc
lds
add
fildll
mov
out
decl
xor
push
push
orl
jbe
xor
in
jmp
lods
jno
in
lret
dec
mov
rcrl
cld
shl
add
adc
sbb
mov
sbb
mulb
test
fdivrp
repnz
popf
sbb
xor
push
dec
js
cmpsl
repnz
repz
xchg
fistps
inc
addl
cld
or
add
pop
addb
pop
inc
mov
insb
xchg
push
inc
jne
fs
mov
lahf
cmp
lock
jbe
mov
jo
add
xchg
add
adc
xorl
imul
sub
cmp
cmp
pop
mov
loope
outsl
lods
jbe
nop
stos
test
imulb
push
pop
aas
adc
ljmp
inc
xchg
adc
add
push
pop
and
dec
lods
imul
std
mov
test
sbb
popa
test
or
push
dec
mov
pop
adc
imul
pusha
in
mov
xor
dec
in
das
push
xchg
lea
fisttps
and
adc
fnstcw
and
and
xor
bound
pop
and
jecxz
jae
xchg
ror
pop
add
mov
add
dec
and
lods
jae
imul
hlt
jl
sub
mov
push
push
testl
rcrb
cld
push
sbb
and
stc
dec
inc
sbb
inc
mov
xor
movsl
lods
jmp
xor
jge
sbb
sub
push
xchg
cmpsb
mov
scas
addr16
dec
in
jno
cwtl
les
jns
mov
or
ret
jb
push
int3
cmpb
inc
mov
js
mov
add
and
push
inc
mov
mov
mov
lret
fistpll
inc
sbb
jg
pop
adc
insb
inc
or
inc
cmp
inc
jg
std
out
adc
and
cltd
shll
daa
inc
loopne
out
push
notl
mov
or
inc
adc
hlt
pop
mov
sbb
rcrb
loop
stc
popa
jnp
mov
jo
ret
xor
es
pushf
push
cmp
aas
movsl
and
sub
xchg
mov
int
lock
adc
or
pop
cltd
rcrb
mov
add
fistpll
push
mov
mov
sbb
lds
js
data16
push
add
sub
pop
loop
jae
outsb
pop
jecxz
jnp
and
inc
fs
or
and
nop
adc
sbb
daa
nop
ja
mov
add
aad
fld1
flds
ret
xorl
outsl
xchg
cmp
pop
inc
negb
inc
mov
mov
pop
mov
add
push
push
dec
movsl
inc
in
hlt
je
push
add
pop
je
dec
icebp
sbb
push
nop
movl
loope
inc
mov
pop
inc
pop
in
or
aaa
pop
enter
sub
clc
push
xor
jb
mov
neg
sub
and
neg
push
pop
fcomps
ror
incb
add
push
fucomip
loop
fstpt
gs
jae
aad
jno
rcll
and
xor
xlat
xchg
jmp
and
push
mov
fstpl
gs
mov
daa
or
or
jns
jo
dec
call
lds
mov
cltd
cltd
in
jmp
sub
inc
fists
sahf
lret
and
loop
mov
lea
int
jecxz
mov
inc
jmp
sbb
push
inc
shlb
adc
pop
mov
sbb
push
cmp
and
loope
push
popa
add
pop
ljmp
shlb
dec
lcall
sub
loopne,pt
ljmp
repz
xchg
lock
sar
add
xchg
loopne
mov
jae
pop
fwait
stc
bts
sbb
jno
fisttpll
repz
and
lock
sbb
ret
mov
cmp
pop
adc
pushf
stc
insb
jnp
call
insb
repz
sub
xor
pop
sbb
cmc
js
mov
clc
lret
push
prefetchnta
fstl
inc
in
arpl
and
cmp
or
add
dec
jg
jae
and
or
jge
loop
fbld
inc
scas
jae,pt
out
lea
iret
repnz
sbb
movsb
jl
and
fcmovbe
and
in
in
fidivl
or
out
hlt
lea
push
out
arpl
push
xor
movb
dec
inc
pop
mov
nop
xchg
lds
inc
sub
sbb
push
mov
mov
pop
adc
cmp
sbb
sub
stc
xor
out
sub
cli
shrl
push
add
and
xchg
cmp
popa
push
scas
jo
push
push
fstp
in
dec
sbb
pop
pop
imul
jge
jb
outsb
inc
icebp
jbe
int3
cmpsb
fsubrp
dec
mov
mov
addr16
les
lea
inc
sbb
int
or
cmpsl
pop
and
push
dec
or
in
push
mov
or
mov
jge
loopne
jno
dec
mov
orb
add
mov
add
scas
arpl
pop
jno
outsl
lea
mov
into
or
xchg
sahf
pop
test
stos
cld
inc
dec
outsl
seta
xchg
sar
insb
and
clc
in
add
jmp
mov
lds
fisttpll
sub
jno
dec
xchg
dec
outsb
inc
cmc
adc
daa
sbbl
jmp
ds
cmpsl
xchg
mov
stos
dec
mov
inc
add
stc
insl
mov
push
imul
dec
sub
add
lea
jbe
hlt
push
ds
add
hlt
cmp
mov
adc
adc
add
sub
jmp
pop
mov
jmp
jge
inc
inc
adc
rorb
pop
xchg
call
repnz
xchg
pop
push
or
sbb
jg
shlb
xor
packssdw
cmp
mov
jmp
das
icebp
outsl
mov
repz
and
and
test
fsubl
test
sahf
pop
fisttpll
aad
push
push
in
inc
in
enter
sub
mov
mull
cmpsl
loop
jle
and
lds
add
fidivrl
int
dec
in
popf
xor
pop
jmp
lahf
lods
push
push
cmp
mov
data16
push
imul
mov
add
mul
rolb
push
dec
add
fdivr
ret
jne
sub
in
push
or
shll
pusha
push
inc
pop
jle
arpl
mov
sbb
bound
inc
jbe
xchg
push
and
add
ds
gs
push
cmp
je
push
insb
add
scas
push
mov
in
stos
mov
xchg
insb
xor
repz
sub
cs
mov
repnz
mov
insl
push
shl
ja
sub
mov
in
push
jns
pop
push
jecxz
inc
lcall
aad
hlt
and
adc
cmp
inc
xchg
pop
aam
dec
rcll
dec
xchg
imul
repz
mov
jno
ljmp
sti
data16
rcr
push
repz
mov
iret
rorb
mov
xchg
nop
arpl
shrb
mov
adc
xchg
cmp
and
fcoml
in
adc
lea
cmp
insl
ljmp
je
jnp
inc
mov
cmp
cld
rol
test
push
push
mov
or
popa
test
adc
leave
xor
dec
mov
mov
mov
sbb
cli
pushf
dec
jge
test
xor
cmp
cli
leavew
push
lods
xor
xor
jne
js
xlat
pop
dec
mov
xchg
push
xchg
mov
das
dec
xor
daa
sbb
negb
cltd
push
xchg
mov
jae
pusha
mov
cltd
pop
je
repnz
pop
mov
loope
aad
and
adc
cmc
mov
xor
cmp
ds
adcl
insl
inc
iret
pop
ficoml
push
sbb
push
lahf
sahf
das
insb
aad
lock
jb
dec
in
mov
push
and
imul
jo
fnstenv
cmp
lods
das
stos
jge
test
lods
dec
int3
int
xor
stc
test
mov
tzmsk
in
ret
adc
sbb
popf
xor
loop
adc
stc
xor
fimuls
and
mov
inc
gs
sbb
mov
inc
sub
or
sbb
ficoml
jne
xchg
addr16
pushf
out
rcl
dec
mov
lcall
mov
adc
xchg
stos
outsb
mov
in
call
dec
popf
or
jns
dec
and
daa
in
andl
fsubs
out
mulb
mov
mov
out
push
pusha
xor
or
hlt
arpl
inc
xchg
xchg
test
in
mov
push
in
sbb
movsb
dec
aaa
pop
shlb
ja
fwait
lock
lahf
fs
jae
sbb
orl
pop
mov
sub
test
sub
loope
or
pop
xor
repz
dec
es
and
sub
jle
cmpsl
pop
insb
clc
jle
mov
lock
lea
jmp
add
in
inc
pop
jecxz
xor
add
cltd
jns
jb
je
arpl
shr
push
xor
popf
inc
pop
adc
in
push
mov
test
daa
xlat
xor
inc
jbe
xor
add
push
in
dec
decb
mov
cmp
cmp
loopne
push
cld
jbe
mov
mov
and
pop
rorb
pop
in
ljmp
pop
dec
jnp
sub
mov
mov
test
pop
mov
cmpsl
out
jg
jle
fmul
mov
xor
xor
fists
mov
loope
ret
movsl
lret
and
std
inc
call
sahf
jno
and
mov
jmp
jnp
adcl
jg
sti
inc
xchg
ficoml
inc
sub
mov
jecxz
cmc
in
push
push
mov
dec
in
xlat
in
pop
or
pop
inc
inc
push
pop
test
sub
and
xchg
aas
dec
push
mulb
aaa
mov
inc
sbb
cmc
insl
daa
pushf
inc
cmp
cli
mov
insl
negb
scas
jne
imul
arpl
popa
nop
mov
and
lds
mov
cmp
lret
mov
clc
or
xor
sub
ret
cltd
daa
cmp
aaa
andb
push
lcall
popa
int3
imul
adc
sub
lock
mov
int3
loopne
sbb
xchg
dec
sbb
mov
cs
jge
mov
push
out
out
pop
in
sub
mov
lock
jge
xchg
je
xchg
fisubrl
ljmp
ret
hlt
or
arpl
mov
stc
sub
adc
stos
imul
push
loopne
mov
pop
jle
daa
mov
xor
dec
sub
xor
std
cmp
loop
mov
stc
rcl
add
and
insb
pop
jbe
pop
xchg
imul
lock
cmp
sbb
lock
push
aaa
adc
aad
sbb
popa
jle
ds
push
and
jbe
js
enter
dec
stc
scas
gs
pop
xchg
ds
jne
jno
push
sub
push
add
ljmp
ljmp
ljmp
call
mov
cs
sbb
xor
test
int
lahf
pop
jmp
mov
out
cmp
shl
adc
sbb
into
mov
adc
jnp
test
cwtl
jecxz
mov
scas
ja
mov
and
gs
movsb
das
sub
dec
andl
cltd
mov
lods
insb
shl
push
jg
pop
mov
add
jb
jo
sbb
sbb
sahf
xchg
dec
in
pusha
sub
pop
repnz
jbe
fisubl
sbb
dec
hlt
xor
mov
and
sbb
adc
lods
sti
inc
sbb
xor
jp
popf
inc
sub
and
push
int
in
sub
push
pop
and
jp
fwait
aaa
jle
dec
add
push
arpl
add
jb
ljmp
mov
and
xchg
insb
jmp
xchg
mov
inc
mov
mov
dec
pusha
movsb
lea
pop
adc
popa
xor
outsl
and
cmc
int3
sbb
pop
andl
dec
ss
ljmp
or
out
pop
ret
pusha
add
rorb
repz
dec
jmp
aam
xlat
fcoms
or
mov
and
shlb
in
std
pushf
into
pop
mov
add
jno
arpl
mov
jl
imul
or
mov
out
or
clc
seta
push
jp
sti
outsb
push
add
aad
in
dec
pop
popa
push
cmc
cmp
das
xchg
mov
pop
jae
bound
mov
mov
dec
xchg
inc
cmp
push
dec
push
in
adc
popa
jp
imul
dec
add
xor
push
jo
pushf
mov
bnd
push
mov
pusha
divl
mov
and
std
inc
rcr
mov
push
stc
pop
pop
jae
jnp
or
aad
xchg
pop
divb
xor
sbb
and
popa
jbe
pop
imul
in
enter
cmp
js
sub
insl
cmp
push
adc
std
jmp
xor
ret
mov
inc
aam
or
cmp
in
xchg
pop
push
jg
test
pop
aad
icebp
hlt
in
outsl
scas
dec
xor
mov
int
repnz
bound
es
out
sbb
repnz
jmp
or
dec
push
dec
jae
repz
push
and
call
mov
mov
mov
sub
sbb
inc
pop
icebp
pop
mov
popa
add
xor
fstp
mov
mov
jmp
aas
xor
sbb
cld
xchg
jbe
sub
pushf
pop
pop
insb
push
arpl
push
jp
clc
xchg
pop
xchg
in
pop
xchg
cmc
add
dec
jl
dec
push
pop
push
mov
sarl
push
sbb
repz
clc
add
hlt
mov
pop
ljmp
mov
movsb
sbb
dec
xor
imul
sub
sbb
pop
fwait
lret
test
push
xchg
inc
or
jge
into
xchg
mov
pop
jbe
ja
ljmp
push
ficompl
fwait
add
data16
imul
inc
jb
and
adc
loopne
in
or
data16
testl
sub
jae
in
in
pop
xchg
insl
loopne
loope
xchg
or
insl
cld
mov
in
dec
ret
adc
add
loope
pop
cmp
mov
inc
insb
enter
inc
pop
cmp
insb
lods
loop
xor
aas
jne
cmc
imulb
jb
and
test
and
repnz
lea
xlat
psrlq
dec
jg
jg
lock
inc
sbb
pop
jmp
insb
cmp
jbe
dec
jp
movsb
cmpsl
shl
adc
insb
clc
movsb
sahf
push
and
loop
decl
fs
cmp
lret
rorb
pop
sub
cmp
jne
fdivrs
int
imul
or
xor
insl
xchg
jne
jle
icebp
mov
movsb
sub
cmp
dec
cmp
xor
mov
mov
in
or
ficoml
mov
shll
aad
xor
cmp
inc
loop
fldl
testb
fidivs
insl
mov
stc
xor
mov
xlat
icebp
jmp
jo
arpl
insl
inc
xchg
and
push
out
ffreep
xchg
leave
mov
mov
sub
or
dec
mov
addr16
sub
jg
and
into
test
stc
testb
xchg
shl
jno
cmp
cmp
mov
xor
xor
out
ljmp
mov
push
jg
xor
call
push
in
insb
js
das
xor
dec
xchg
in
pop
xor
adc
sbb
and
dec
mov
mov
dec
jg
in
sub
push
sbb
push
or
pop
sub
pop
aam
inc
movsl
sbb
cli
xchg
inc
add
imul
push
xchg
add
push
adcb
sub
jae
jb
nop
test
outsl
outsb
scas
xchg
jno
je
pop
jmp
xor
in
push
shll
mov
movsl
fdivrl
ljmp
lock
adc
lods
jp
inc
fstp
sbb
stc
outsb
mov
xor
enter
add
lret
mov
stos
jecxz
addr16
jae
faddl
sbb
dec
insl
dec
and
in
sub
xor
push
and
or
mov
mov
js
mov
lods
inc
add
insl
lea
jecxz
pop
push
outsl
and
xor
lcall
xchg
addr16
loope
mov
pop
and
sbbb
jge
daa
punpckhdq
sub
fsubrl
rcll
push
fildl
add
mov
cmp
movsl
shrl
mov
cld
jno
stos
pop
xor
ja
sbb
push
imul
or
call
or
pop
or
jb
cld
xor
movsb
imul
jl
xor
fdivs
popa
mov
mov
cs
inc
test
es
dec
idivb
adc
scas
icebp
pop
lea
pop
pop
sub
pop
add
push
lds
add
imul
out
int
icebp
push
mov
andl
das
push
sti
sub
in
xor
push
data16
xlat
jae
imul
aad
out
dec
mov
push
xor
mov
cld
in
push
in
jae
inc
sub
test
ret
cmp
notl
push
imul
mov
insl
cmpsb
das
loopne
xlat
dec
imul
insl
jno
and
insl
pusha
cmp
shrl
push
outsl
mov
sub
insb
leave
pushf
pop
imull
xchg
sub
lods
cmc
out
loope
into
sub
addb
cmpsl
icebp
lea
orl
pop
and
stos
lea
into
les
decl
shrb
add
push
adc
mov
imul
repnz
ficoml
call
daa
scas
jmp
mov
pop
roll
mov
sti
je
insl
cmp
add
repnz
repz
jnp
xchg
mov
xor
jbe
lret
loop
push
jl
insl
adc
rclb
pusha
sub
jo
jmp
mov
sub
and
pop
jno
inc
imul
xor
lods
testb
rclb
inc
adc
cmp
add
lret
insl
cmc
arpl
jecxz
aaa
es
arpl
jg
sub
inc
aad
jmp
xor
pop
pop
push
iret
push
mov
or
jns
jmp
sarb
add
cmp
inc
pop
xchg
fadds
pop
sbb
pop
bound
notl
xchg
xchg
sub
pop
cmp
mov
mov
repz
dec
sbb
and
sub
and
xchg
add
xchg
mov
push
mov
cwtl
mov
in
mov
mov
loope
shl
push
stc
pop
mov
and
xlat
cli
xor
adc
or
popa
pop
rcll
fdivrl
xor
incl
in
aam
loop
fmull
push
popa
sbb
push
aam
jg
dec
xchg
xlat
push
jno
pop
mov
sbb
mov
int3
fistps
test
xor
movsl
lods
arpl
cmp
lea
imul
and
sub
mov
mov
mov
in
jmp
das
sbb
mov
or
sbb
out
sahf
sub
xor
mov
bound
mov
push
add
inc
push
fst
pavgw
pop
pop
cmp
andb
mov
aam
jecxz
xchg
pop
js
mov
push
fstps
push
add
cmpsl
les
dec
mov
mov
push
cmp
jl
outsl
imull
or
add
mov
shlb
shr
push
es
dec
movsb
mov
in
ret
jae
xor
add
imul
imul
daa
arpl
pop
inc
daa
shrb
sbb
push
fldcw
out
gs
in
out
xor
ds
fs
xchg
cmp
jmp
xor
inc
jb
dec
in
lret
sbb
jne
arpl
xchg
jbe
xchg
add
pop
ret
mov
mov
test
jbe
lods
xchg
das
mul
adc
jge
push
mov
jo
push
cltd
insb
insl
movsb
dec
xchg
push
loope
gs
mov
js
stc
jnp
mov
jmp
imul
bound
xor
mov
mov
sub
repnz
insb
dec
push
xchg
and
and
cli
push
xor
lock
jg
cmpsb
sahf
lods
pop
add
push
enter
xchg
pop
bound
pop
inc
fisttps
sbb
inc
movsl
insb
test
repnz
mov
data16
jmp
ds
es
mov
testl
scas
or
je
stos
mov
hlt
je
and
mov
jp
mov
insb
and
sbb
call
xor
bound
pusha
in
pop
fdivrl
and
es
xor
dec
and
inc
mov
rcrb
sub
push
test
scas
and
popa
lea
fldl
xchg
dec
jecxz
and
mov
ds
subl
push
shll
cmc
push
loop
fsubrp
push
insb
loopne
push
jnp
ljmp
out
mov
loop
mov
jae
push
sub
xchg
jecxz
push
lcall
push
imul
mov
in
add
lods
inc
ret
inc
sub
inc
lods
jo
mov
xlat
inc
ficomps
insl
push
clc
xchg
xchg
ja
insl
in
adc
sbb
and
sub
inc
outsb
leave
xchg
stos
rcrl
mov
inc
loopne
cmp
dec
sbb
pop
ja
ret
jge
into
dec
jg
rorl
push
sub
mov
pop
gs
adc
xor
cmp
lahf
jmp
mov
inc
mov
ret
insb
mul
sub
dec
mov
ja
popa
cmp
in
adc
jecxz
inc
popf
push
gs
mov
pop
jp
psubusb
mov
out
jnp
arpl
ja
js
sbb
sbb
inc
mov
cmp
dec
mov
pop
pop
cmp
sbb
inc
daa
arpl
test
sub
push
lahf
mov
orl
fs
jmp
imul
pop
and
or
adc
negl
mov
mov
pusha
jne
incb
xchg
fsubrl
out
dec
enter
ret
imul
ret
mov
inc
fstl
test
rorl
mov
cmp
jmp
and
insb
lods
jae
xor
xor
in
xchg
js
xor
popa
test
jae
mov
lea
mov
or
lods
mov
insl
push
aas
jmp
jns
mov
add
ss
xor
roll
mov
lcall
push
sbb
sub
xchg
push
cmp
js
xchg
les
jns
stos
int3
insl
int3
xchg
insb
xor
sbb
outsl
mov
sbb
pop
into
add
xor
in
mov
pusha
sti
and
dec
cs
cmp
xchg
and
aad
cmp
xor
adc
fsubs
cmpps
fbstp
pop
xor
or
pop
pop
scas
xchg
xchg
es
xorl
xorl
movb
int3
mov
mov
mov
popa
popa
cmpxchg8b
jg
in
jmp
mov
cmc
mov
push
loope
push
inc
push
mov
lock
in
lock
lock
cmpsb
mov
call
and
jp
sbb
and
pop
xchg
lock
es
xchg
in
leave
xchg
fisttpll
mov
xor
sub
xor
push
mov
scas
daa
xchg
in
loope
shlb
dec
sbb
add
addl
sub
cmp
stos
push
cmp
cmp
aaa
int3
pushf
inc
xor
jmp
rcr
sbb
in
in
add
movsl
or
bound
in
rorl
cmp
loope
xor
jmp
and
dec
frstor
dec
in
test
push
pushf
jo
cmp
and
rcl
dec
icebp
sub
test
clc
outsb
push
gs
mov
fsubs
test
fdivrs
sbb
int
sbb
add
test
dec
sub
sub
adc
mov
rcl
sub
in
inc
add
and
jecxz
fmuls
ljmp
mov
aad
repz
lock
jns
addr16
in
push
sbb
adc
adc
xor
mov
xor
pop
inc
xor
std
fadds
lret
push
push
jno
and
inc
lcall
mov
sbb
sub
mov
push
push
insb
out
jg
inc
push
mov
divb
xor
outsb
cmpsl
arpl
xchg
xor
in
fsubrl
sub
dec
addr16
fwait
test
inc
lock
rorl
xchg
clc
jns
lea
cmp
mov
mov
popa
rclb
in
pop
mov
push
and
in
and
hlt
ds
arpl
push
xchg
sub
or
mov
lcall
insl
dec
in
push
pop
xor
push
out
add
cmp
je
outsl
hlt
decl
arpl
xor
cmc
jb
xchg
mov
and
outsl
icebp
ljmp
push
inc
outsl
fs
cmp
mov
cwtl
clc
jae
jmp
xor
pushf
cmc
call
call
dec
or
out
icebp
push
lea
jbe
popa
lea
xor
in
and
adc
arpl
lea
sub
cld
push
sbb
sub
pop
test
sub
jns
ljmp
sbb
scas
outsl
push
xor
inc
hlt
pop
lds
inc
mulb
test
add
xor
stos
clc
xchg
pusha
cmp
lret
mov
pop
xchg
insb
rorb
stc
adc
outsl
cmpb
gs
das
insl
adc
pusha
in
pop
push
jb
jo
jbe
inc
cmc
mov
test
inc
inc
outsl
inc
hlt
cmp
cwtl
mov
push
or
in
pop
testb
gs
data16
and
outsl
in
out
xor
lea
std
outsl
lret
jecxz
jne
popf
pop
fcomps
mov
outsl
cmp
int
cli
ljmp
mov
outsl
fcoms
inc
lds
jle
dec
adc
push
push
push
sbb
pop
out
repnz
mov
jmp
mov
popa
hlt
and
dec
lock
das
inc
js
dec
push
jae
cmp
adc
fs
or
add
push
mov
mov
gs
les
clc
and
xchg
dec
mov
push
inc
mov
notl
aam
out
jecxz
cmp
in
cmp
sub
in
push
mov
jo
dec
out
call
jmp
mov
jae
divb
in
hlt
ret
ja
fcomps
lret
mov
outsl
push
popa
scas
push
xor
gs
inc
mov
sbb
lds
imul
mov
fcomps
fsubrp
xor
push
dec
fcoms
pop
pushl
mov
push
inc
add
jmp
aad
mov
test
sub
sbb
cli
ret
or
or
cmpsb
add
in
sahf
dec
sbb
cld
xchg
lahf
pop
in
mov
test
push
dec
push
cmc
pushf
lock
and
xor
ret
dec
pop
in
mov
mov
jns
or
sarl
inc
and
jae
lea
in
mov
lods
cmp
leave
sub
ss
cmp
push
stc
pop
cwtl
bound
bound
mov
shrb
popf
movsl
sti
das
outsl
xchg
sub
xor
ficoml
das
dec
jns
mov
mov
pop
repz
mov
cmp
inc
scas
mov
ret
cmc
pop
and
adc
mov
call
mov
and
cwtl
lods
push
pushf
adc
xchg
negb
out
sub
fildll
lcall
dec
add
idiv
ja
leave
fnstenv
mov
and
push
call
roll
xchg
add
loopne
and
test
inc
mov
mov
fs
out
jge
arpl
mov
and
inc
adc
adcb
sbb
out
in
fbld
xlat
hlt
pop
or
out
or
ret
adc
arpl
js
ret
jp
aad
sub
push
pop
add
adc
xor
push
and
fstps
dec
cmp
jae
jmp
loop
pop
mov
mov
loopne
and
sub
and
call
arpl
hlt
xchg
imul
lea
and
bound
xchg
mov
sbbb
in
out
cmp
int
dec
push
push
es
dec
pop
je
rcrl
pop
es
pop
jl
insb
lea
imull
insl
mov
jno
push
add
mov
and
clc
in
xor
hlt
cmc
cmp
xchg
sbb
loope
fxch
inc
pop
mov
mov
adc
and
sbb
shlb
pop
pop
push
divb
inc
rcrb
cmp
fsubrl
ds
cltd
rclb
movsl
aam
dec
or
push
cmc
mov
je
je
push
outsl
push
push
dec
out
bound
mov
out
push
sub
repnz
or
dec
inc
mov
lcall
arpl
pop
bound
cmc
sub
jae
out
xchg
test
cmp
xor
mov
jo
pop
or
pop
imul
mov
pop
cmp
or
stos
add
dec
mov
cmp
xor
fidivrl
xor
je
jo
inc
or
inc
outsb
dec
push
dec
gs
push
imul
hlt
or
negl
jae
dec
jnp
or
or
cmpb
sub
mov
add
outsl
pop
iret
mov
cmp
out
stos
cmp
divl
cmp
push
int3
mov
push
jno
mov
mov
outsl
movsb
andb
push
sbb
mov
jb
xchg
jmp
cwtl
adc
xor
fs
loopne
ss
out
add
jae
repz
lods
jge
out
push
or
mov
in
inc
insb
test
fsubrs
popa
add
sbb
lock
xor
cltd
out
fisubs
pusha
pop
add
jns
aas
xor
insl
inc
sub
push
aaa
cld
inc
out
test
xchg
push
adc
lods
pop
inc
es
testl
stos
jo
lea
mov
addr16
add
popa
pop
jno
dec
stos
jecxz
arpl
popa
jmp
dec
movsb
cmp
xor
adc
mov
jp
xchg
fldcw
aas
out
inc
inc
popa
pop
out
fs
js
jbe
loopne
lcall
cmp
test
or
ljmp
sar
lea
push
mov
sub
sbb
test
and
jno
or
test
xchg
sbb
dec
sbb
jmp
push
scas
mov
fwait
sub
cmp
xorb
ret
js
fs
push
mov
test
mov
xchg
dec
cmp
das
or
sbbb
mov
jno
out
cmpl
je
or
dec
mov
fstpt
stos
adc
push
in
xchg
sbb
dec
shr
pop
add
imul
sarb
mov
in
mov
xor
pop
lea
dec
outsb
mov
xor
inc
mov
loop
mov
jnp
xor
jl,pt
dec
sbb
or
and
jae
outsl
mov
jg
mulb
test
jno
add
jo
xor
fs
dec
cmpsb
lret
adc
insl
mov
sub
xchg
jb
ds
jbe
cmp
jl
jbe
pop
xor
jns
jmp
leave
ja
xor
and
sbb
sub
cmp
mov
les
mov
xchg
adc
aaa
cli
mov
inc
or
pop
in
add
cmpsb
pop
push
push
xor
and
push
jb
sahf
lcall
loopne
xchg
push
jae
daa
aaa
in
dec
dec
jle
xor
out
and
xor
ljmp
xorb
lahf
mov
push
dec
in
pop
je
in
cmp
icebp
lea
dec
inc
sbb
dec
cmp
push
push
icebp
stos
test
pop
movsl
sbb
lea
sti
mov
pusha
js
push
cli
addb
imul
jno
je
push
mov
pop
hlt
xor
jbe
jb
or
xor
sbb
mov
popa
testb
inc
sub
add
mov
pop
xchg
pop
pop
dec
add
xor
outsl
call
push
or
loop
int
scas
mov
dec
jge
mov
fsub
stc
mov
push
mov
mov
jbe
cmp
push
lods
mov
mov
inc
push
adc
dec
cmp
inc
dec
add
les
aaa
mov
iret
pop
fnstsw
jno
add
outsb
mov
jno
pop
xchg
mov
mov
mov
sbb
sahf
addl
or
and
xor
push
and
add
aaa
or
or
push
add
cmp
and
and
rorb
inc
push
or
es
pop
ficomps
test
dec
out
pop
test
or
in
or
daa
xor
cmpl
shr
pop
cld
imul
pop
rcl
push
gs
lea
sub
push
mov
mov
sub
pop
cmp
sbb
mov
mov
sub
cwtl
test
dec
cmp
pusha
loope
loop
sbb
xor
jns
pop
inc
mov
mov
lea
testb
das
inc
xor
fnstcw
ss
jns
aam
cmp
test
xchg
xchg
pop
push
mov
movl
out
mov
adc
pop
add
andl
rorb
lods
sbb
fs
lock
pop
or
fldt
jno
cmp
imul
insb
cmc
mull
push
xorb
imul
out
push
rclb
push
pop
imul
arpl
push
lret
in
push
adcb
push
xor
test
in
enter
mov
test
mov
into
adc
in
aaa
out
lock
hlt
fs
call
xchg
jp
dec
push
sub
lcall
pop
sub
cltd
push
pop
sub
arpl
sub
in
mov
in
pop
mov
add
cmc
dec
or
or
xchg
add
bound
daa
in
lock
cmp
scas
dec
jae
jecxz
xor
adc
lods
ficoms
push
add
out
in
loope
insl
fsubrp
xor
push
hlt
push
push
fwait
scas
sub
lods
movsb
jnp
xor
lds
sbb
ror
add
mov
mov
lods
out
xor
in
test
cltd
jb
outsl
pusha
insb
xor
in
push
arpl
push
scas
sub
jns
cmp
es
iret
arpl
in
gs
push
xor
in
adc
gs
cmp
mov
or
scas
icebp
mov
mov
or
mov
mov
add
fdivl
xor
sbb
xor
xor
or
outsl
movsl
add
and
jb,pn
push
add
mov
push
or
int
xor
in
and
and
push
ret
rolb
pop
leave
xor
lods
daa
test
movsb
int
add
pushf
mov
jl
xor
push
scas
icebp
push
push
add
dec
mov
loop
outsl
gs
addl
test
dec
jae
rorl
stos
arpl
out
std
jb
popa
jle
pusha
mov
push
imul
pop
movsl
data16
cmp
addr16
stc
arpl
push
push
dec
inc
lds
in
mov
lret
pusha
loop
add
xchg
rcll
push
scas
mov
in
or
sbb
aam
sub
testl
xchg
cld
loope
lock
movsb
or
adc
pop
arpl
lock
outsb
in
bound
jo
imul
pop
jno
cs
gs
int
es
add
jne
aaa
fistl
mov
adc
daa
add
mov
pop
and
test
ja
add
dec
fistpl
out
bound
stos
sub
adc
xchg
in
aad
imul
sbb
sbb
and
lock
ret
icebp
adc
adc
lcall
pop
nop
push
sbb
adc
inc
out
push
cmp
jecxz
adc
lret
push
fdivl
pop
imul
sub
mov
mov
jbe
pop
cwtl
and
stos
shrb
and
push
cwtl
sbb
out
push
ja
das
and
adc
insl
repz
outsl
lock
sbb
push
pop
jp
push
in
xchg
outsl
cld
aaa
imul
mov
lea
in
pop
xchg
jno
insl
lea
mov
scas
inc
fsubr
rclb
ljmp
cs
sarl
xor
cmpsb
mov
sub
in
xchg
fs
mov
addr16
test
and
inc
imul
imul
mov
fdivrl
pop
repz
js
push
xchg
les
dec
adc
jne
out
lahf
sub
inc
jbe
sub
or
jb
leave
pop
shll
mov
sub
dec
pop
sbb
adc
pop
and
dec
or
inc
sub
ja
mov
call
mov
adcb
outsb
mov
shrb
jo
fdivrs
push
pmaxsw
mov
dec
pop
scas
out
mov
sarb
imul
imul
imul
xor
dec
lea
lds
leave
stos
xchg
outsl
in
lods
shl
outsl
pop
and
pop
bound
dec
xor
fxam
adc
gs
mov
hlt
lahf
popf
hlt
sub
cwtl
fs
jno
xchg
inc
testl
and
outsl
icebp
loopne
imul
adc
out
sub
ret
jb
or
and
mov
cwtl
and
arpl
add
lods
loop
out
lock
aam
adc
daa
lret
sub
mov
js
mov
dec
dec
xor
imul
and
fidivrs
push
mov
insl
in
test
out
mov
cmp
in
scas
sbb
lds
popf
iret
mov
clc
and
add
popa
mov
xchg
out
jbe
and
push
test
cmp
lock
rcr
mov
mov
imul
aad
and
inc
pushl
xor
mov
stos
pop
gs
add
dec
repz
sbb
aaa
hlt
pop
lea
sbb
test
push
fistps
in
in
pop
mov
mov
rcr
mov
lods
insl
pop
mov
scas
jge
mov
push
dec
and
sub
pop
fbld
aaa
add
pop
cli
scas
mov
adc
outsl
xor
and
rcll
jb
cmp
xor
ss
dec
jb
cmp
ss
jo
push
cmp
add
cmp
in
mov
ficomps
mov
sbb
adc
insb
pop
call
sahf
mov
mov
mov
lret
insb
mov
insl
or
xchg
push
std
and
or
adc
mov
aaa
ja
repz
xor
out
les
adc
adc
sub
scas
bound
inc
or
sub
in
outsb
jecxz
jp
push
pop
hlt
mov
mov
loop
repz
inc
xchg
pop
push
les
push
and
push
in
fcmovbe
out
icebp
jl
push
lea
adc
fucom
popf
push
xor
js
dec
mov
dec
add
aad
pushf
push
add
stos
insb
stos
mov
mov
dec
test
push
lds
loopne
sub
inc
pop
bound
and
dec
jl
lea
pop
push
jmp
cmp
outsb
lods
sub
lock
mov
jae
jns
xchg
shll
lea
jmp
cmpsl
scas
jae
cmc
pushl
add
pop
pop
in
add
xchg
subb
mov
mov
sbb
sub
aaa
arpl
xchg
xor
or
jno
mov
and
push
jl
push
mov
lea
scas
jno
aaa
fistpl
cmp
ja
xor
xor
jno
pop
cmp
inc
mov
push
push
xor
pusha
cmp
mov
loop
cmp
daa
push
ljmp
sub
insl
in
push
dec
pop
and
pop
and
and
and
mov
xchg
jb
mov
inc
sub
jae
jge
dec
mov
insb
dec
adc
sbb
mov
inc
jno
jno
scas
xchg
outsl
and
rorl
sbb
imul
in
sbb
xor
rorb
pop
mov
xlat
cmp
stc
jae
and
sub
sbb
aaa
mov
imul
mov
xor
or
arpl
mov
adc
mov
ss
scas
adc
mov
push
popa
fidivs
ror
insb
in
dec
sbbb
jns
mov
cs
mov
sbb
mov
movsl
xchg
xor
flds
enter
inc
jno
dec
push
jo
mov
ret
dec
mov
addl
xchg
inc
sub
mov
and
dec
add
pop
cs
adc
jmp
clc
mov
repnz
insl
test
aaa
inc
subl
mov
pop
sbb
push
cld
mov
fimull
mov
inc
shrb
repz
inc
sub
pop
notl
cmp
sub
mov
bound
cmpsb
into
imull
insb
ljmp
mov
movsl
and
mov
int
lahf
mov
adc
inc
jg
sbb
mov
lea
pop
mulb
in
xchg
jno
lock
in
outsb
inc
fistps
fistpl
icebp
into
mov
jbe
leave
cmc
fsubrp
mov
cltd
sbb
aad
xchg
jge
adc
cmpsl
mov
cs
jns
add
mov
jmp
sbb
in
ret
pop
xchg
lods
cmp
cmpsl
jnp
fldenv
or
lret
repz
enter
sti
inc
inc
insb
xor
fnstsw
in
pop
mov
inc
mov
pop
sub
xchg
enter
sub
in
out
or
add
mov
js
xchg
lods
mov
and
repz
loope
add
gs
push
jae
loope
push
xor
clc
lret
add
pop
xor
loop
std
out
js
pop
movsb
das
cmp
jge
mov
inc
pop
push
inc
push
xor
push
mov
scas
dec
out
mov
pop
imul
jne
pop
fisttps
xor
push
ss
out
fs
pop
jmp
mov
repz
ret
mov
icebp
lods
rolb
das
xor
and
dec
jnp
test
out
in
clc
and
xchg
and
mov
and
and
dec
loopne
jg
mov
push
pop
bnd
fnstenv
push
jb
xorl
cmpsl
and
push
xchg
sahf
dec
inc
cmc
jno
sbb
ljmp
or
add
fwait
mull
mov
pop
dec
clc
mov
test
insb
mov
jae
movsl
mull
insl
test
movsb
ja
or
outsl
inc
pusha
notb
lcall
test
sub
adc
push
ds
inc
jo
xor
inc
scas
pop
jbe
mov
jno
movsb
mov
sbbb
and
dec
sub
jne
jb
fldl
dec
jno
arpl
stos
filds
inc
mov
add
scas
sbb
fstl
jns
add
sub
sub
jmp
mov
push
lret
sbb
adc
insl
xlat
inc
dec
sbb
cmp
int
and
push
ja
nop
test
push
xor
and
add
xor
and
lds
lea
rcrb
sbb
xor
mov
mov
movsb
sbb
pop
outsb
fstl
mov
mov
sbb
cmp
in
daa
push
scas
jo
push
clc
push
aaa
mov
sub
jne
pmaddwd
xchg
lea
push
ret
push
daa
repnz
cmp
and
aaa
loop
xchg
xor
and
xor
mov
in
leave
arpl
mov
adc
or
xor
test
popa
mov
pop
jb
lea
in
jno
jne
push
fldcw
shl
sbb
mov
mov
jae
fisttps
sbb
pop
push
in
jbe
mov
push
leave
loope
out
inc
pop
in
and
mov
sbb
push
push
notb
inc
jbe
mov
test
repnz
xor
adc
popf
mov
sbb
mov
inc
push
cmp
pop
es
fwait
insl
mov
inc
jae
insl
push
pop
jne
mov
dec
rclb
jmp
mov
xchg
movsl
bound
mov
pop
shrb
fidivs
pushf
cmp
inc
pop
jl
push
repz
gs
popa
scas
imul
inc
xchg
push
movsl
pop
in
icebp
shlb
sub
sbb
fsubs
adc
pop
int3
fs
test
adc
inc
sub
push
cmp
sbbl
mov
int
lock
cmpsl
jo
das
mov
dec
push
outsl
xchg
movsl
aad
inc
scas
lret
rolb
out
xor
out
pop
add
and
mov
gs
push
out
adc
daa
jp
dec
jmp
jbe
mov
dec
addr16
cmp
sti
fildl
dec
cmp
cs
inc
ss
jle
ror
mov
pop
xor
call
popa
sahf
aad
xchg
inc
test
sbb
push
jle
jmp
jmp
jno
repz
leave
imul
popa
call
or
sbb
pop
decl
jb
and
popa
cmp
mov
dec
in
mov
xchg
dec
add
jo
xchg
testb
inc
jecxz
xchg
sub
and
lret
inc
cmp
loop
add
mov
lods
mov
push
fs
lret
aad
jp
or
in
and
movsb
inc
cmp
dec
sub
iret
int3
dec
roll
mov
add
shlb
sbb
mov
arpl
addr16
sbb
xchg
les
in
sub
inc
daa
test
insl
jp
mov
sbb
dec
pop
or
in
and
dec
std
loopne
mov
and
test
jp
push
push
and
popa
pushf
cwtl
in
mov
sub
xchg
cmp
adc
cmp
scas
cmp
pop
push
sub
sub
ret
inc
je
xchg
popf
or
push
pop
pop
lock
xchg
sbb
pop
and
jne
xchg
pushf
jnp
outsl
add
inc
xor
sub
repz
adc
xor
push
mov
adc
sbb
fcmovnu
in
movsb
jae
mov
iret
adc
mov
fwait
sub
jno
imul
in
call
jno
xchg
ret
jbe
mov
popa
psllw
mov
aaa
rcrl
ljmp
insb
jno
movsb
xchg
mov
pushf
or
pop
jbe
or
hlt
push
xorb
xchg
cli
aam
adc
jmp
inc
test
outsl
jmp
movsb
and
xchg
inc
mov
push
loopne
mov
js
mov
dec
bswap
and
mov
dec
imul
push
outsl
xor
sbb
push
mov
xchg
pop
fldenv
icebp
mov
cmp
push
gs
and
jno
pop
popa
insl
fimuls
mov
sub
dec
xor
cmp
jae
call
in
loopne
pop
dec
sub
xor
fidivrs
call
lret
insl
dec
hlt
fisubs
xor
pushf
out
ror
fs
sbb
jp
pop
push
inc
leave
xor
xor
add
push
mov
cwtl
lods
js
aad
adc
stos
aad
inc
push
in
les
mov
pop
rolb
mov
mov
cmc
pushf
movsb
in
ret
jno
lea
sahf
cld
call
fiaddl
out
jno
pop
and
mov
ja
adc
jno
jl
adc
push
nop
sbbb
push
pop
rcrb
xor
mov
inc
adcl
insl
and
ja
mov
pop
lock
push
add
lock
daa
in
xor
pop
mov
add
jns
xor
out
decl
xor
mov
cmp
push
xchg
enter
lods
push
cld
sbb
lea
dec
sbb
popa
je
lea
push
out
pusha
clc
jae
add
daa
cmp
xchg
out
icebp
lret
pop
rcr
rcr
mov
mov
rorl
mov
daa
repnz
mov
out
dec
sub
mov
xchg
sahf
popf
lock
dec
and
push
jecxz
sbb
mov
adc
fistpll
hlt
and
ja
sbb
cmp
push
cmp
lcall
jle
in
pop
shlb
aas
pop
and
arpl
pop
or
pop
das
call
xor
ljmp
popa
cmp
sbb
pushf
test
cli
cmpsl
insl
mov
pop
jg
jno
cltd
cmpsl
adc
lret
cmp
rorl
rorl
fdivrs
sub
das
out
arpl
push
push
mov
lods
insl
cmp
cmp
loopne
jno
sub
je
imul
jge
mov
xchg
mov
sbb
sbb
jg
cmp
es
sub
leave
lock
and
xchg
xchg
aaa
jno
fs
punpcklwd
fs
stc
lock
dec
jns
add
in
in
insb
fs
push
sbb
inc
or
out
jbe
mov
xchg
stc
adc
mov
adc
jg
inc
cmp
pop
cmp
xchg
xor
shll
sub
mov
adc
xor
xor
mov
ds
call
lds
je
push
daa
repz
scas
lock
stc
xchg
and
aaa
push
mov
in
js
jns
jnp
mov
add
lahf
push
pop
arpl
and
sub
jne
addr16
add
inc
data16
xchg
lock
lods
xchg
daa
std
or
enter
js
fs
dec
ret
jge
pop
push
cmp
cmc
lds
cld
and
lea
imul
mov
fdivrs
jno
les
adc
and
mov
add
and
sbb
inc
aaa
adc
lret
sti
rclb
mov
test
paddsb
mov
dec
cli
sbb
add
sub
sbb
insl
lea
inc
scas
inc
sbbl
inc
sbb
incl
pop
sbb
in
mov
pop
aas
in
sub
subb
push
sub
gs
jae
outsl
mov
testb
loopne
xor
in
inc
jl
sti
sbb
and
cmp
cltd
sbbl
jmp
aad
cmp
inc
fs
loop
adc
pop
insl
ss
pusha
fistps
pop
stos
xlat
jg
mov
dec
mov
lods
pop
xor
xchg
int
jmp
and
adc
sub
adc
stos
adc
jmp
mov
cmp
fmull
ret
dec
and
in
mov
and
int
rorl
nop
out
sbb
mov
xor
and
int
pop
xchg
adc
stc
pusha
mov
pop
jmp
repnz
or
imul
cs
inc
loop
popa
dec
adc
mov
cld
mov
ja
push
out
imul
sbb
jo
jle
popa
lods
into
xchg
das
jg
std
jno
and
mov
mov
or
sahf
cmpsl
sub
rcrl
pop
gs
mov
jg
jns
sbb
int
sbb
add
cmpsb
icebp
sub
andb
jnp
std
aad
inc
dec
into
push
ja
aad
adc
aam
imul
arpl
loopne
add
xor
pop
push
pop
jnp
sahf
push
movsb
push
cmp
stc
test
xor
iret
mov
xchg
in
rorl
jnp
loopne
int3
out
icebp
mov
push
pop
popf
fs
or
clc
int
test
out
enter
jp
jl
sub
ds
sbb
jmp
lds
xor
xchg
adc
adc
adc
inc
jno
ret
mov
mov
outsb
fdiv
mov
in
adc
and
bound
repz
imul
add
lcall
jo
mov
adc
int3
pop
bound
or
arpl
mov
test
insl
cs
sub
ja
or
insb
add
jno
lea
sub
out
stos
push
fbld
inc
pop
cltd
arpl
js
fisttpl
and
lea
in
push
sub
hlt
sbb
les
dec
ret
xor
std
sub
fs
mov
stos
xor
lods
insb
cld
out
clc
scas
jo
add
mov
mov
imul
gs
sbb
cmp
add
mov
ret
jns
or
push
pop
mov
pop
stos
and
jo
pop
pop
jae
outsl
in
mov
loope
test
pop
roll
inc
stos
sub
jmp
cld
lock
and
push
push
daa
dec
push
mov
lock
mov
or
adc
mov
push
xor
in
fcomps
cld
fs
add
add
ret
or
lock
dec
or
adcl
and
andb
jno
les
daa
in
lods
pop
stos
mov
jmp
dec
cmpsl
dec
insb
xor
in
sub
jbe
dec
mov
mov
xor
mov
push
addb
and
ja
loopne
mov
jno
in
cld
add
pop
les
jno
fs
movsl
push
add
xor
cmp
fiadds
outsb
xchg
in
and
sbb
data16
out
movsl
pop
shll
pop
jo
inc
push
cmp
dec
pop
push
pop
jmp
cltd
mov
inc
and
mov
pop
dec
imul
push
jmp
icebp
lods
in
shll
popf
pop
pusha
mov
xchg
test
hlt
jmp
cli
call
call
or
pop
adc
xchg
jno
jmp
sbb
ljmp
jl
pop
cmp
sub
mov
jle
mov
add
xchg
jo
and
cltd
neg
lods
sbb
jle
lock
lret
ret
jmp
push
and
std
inc
int
fdivrl
sub
mov
cmp
pop
std
add
or
rcl
add
add
mov
ss
outsl
dec
int
in
cwtl
aam
jmp
and
and
cmc
adc
int
push
ljmp
call
in
push
jl
in
lcallw
xchg
push
aam
and
xor
xor
mov
stc
xchg
leave
loope
mov
add
sub
inc
pop
mov
xchg
bound
xor
icebp
and
mov
xor
divl
xor
pop
loop
mov
cwtl
jb
add
jae
inc
and
xchg
push
cltd
adc
xchg
jle
sub
xor
inc
sbb
mov
add
loopne
sub
push
sub
mov
jns
les
fsub
sti
bnd
xchg
mov
push
pop
jb
dec
cmpsl
pop
icebp
adc
lea
pop
mov
fldenv
push
ja
js
jl
out
dec
insl
jae
std
push
gs
das
aad
insb
push
pop
mov
xor
push
imul
mov
js
ljmp
or
cli
xor
ds
cmp
cmp
outsb
mov
movsl
out
pusha
fnsave
loope
mov
arpl
out
insl
and
pop
pop
sbb
sbb
flds
imul
and
push
roll
xchg
pop
sub
mov
in
cs
test
push
insl
das
aas
mov
in
and
add
sub
roll
xchg
notb
inc
pop
scas
xor
jnp
imul
jo
mov
push
nop
popa
push
out
inc
js
xchg
jno
outsb
dec
jl
insb
push
aam
jmp
pop
or
xor
push
imul
adc
fisttps
mov
dec
out
dec
dec
icebp
lret
push
xchg
adc
fistpl
jp
cs
xchg
sub
push
sub
and
dec
nop
xchg
hlt
inc
imul
add
push
and
xchg
ds
xor
jno
mov
xor
in
movsl
cmp
jnp
hlt
push
icebp
insb
sub
xor
mov
pushf
repz
clc
adc
imul
jne
callw
ja
xchg
sbb
ljmp
fwait
jmp
dec
das
inc
scas
inc
stc
out
insl
jnp
es
inc
repz
ja
js
fstpt
dec
popa
cli
out
cltd
ficomps
fdivrl
push
mov
push
mov
stos
popa
ljmp
push
push
push
sahf
leave
pop
pop
mulb
or
xor
daa
mov
jecxz
filds
insb
cs
shr
pop
jae
cltd
jmp
sub
pop
jmp
add
daa
out
dec
das
fcoms
scas
and
movsb
shll
lcall
or
add
jle
xor
mov
cs
pop
fsubrs
adc
clc
in
pop
sbb
push
mov
sbb
fcmovnbe
bound
jbe
push
leave
lods
pop
inc
daa
xchg
inc
pop
lock
mull
pop
jle
xchg
pop
in
pop
sahf
push
lods
pop
gs
cmp
in
test
test
pop
in
test
push
test
das
xchg
xor
fstl
cmc
jno
dec
cli
jne
push
sbb
add
pop
inc
jle
jb
stos
cmpsb
lret
inc
in
fnsave
sbb
inc
adc
mov
push
cli
push
ja
das
imul
bound
pop
push
addr16
sbb
testb
insb
adc
cld
ljmp
lds
jae
push
add
xor
lea
lods
popa
or
dec
test
jl
es
push
push
std
imul
int3
push
jbe
ficompl
jae
sahf
jo
aas
mov
pop
movsl
jb
sahf
add
dec
aam
jbe
shlb
xchg
vmovaps
push
inc
xor
popa
inc
add
sahf
xor
sub
outsb
push
loope
loop
in
les
mov
or
cwtl
arpl
mov
lret
push
les
gs
shll
xchg
add
das
ja
xor
rclb
push
xchg
and
push
addr16
and
inc
das
pop
jns
data16
arpl
push
add
gs
inc
js
push
test
pop
gs
insb
mov
mov
subb
sub
leave
mov
scas
or
enter
push
xor
inc
loope
xor
dec
mov
ds
jae
inc
out
mov
jbe
add
xor
shr
outsl
inc
test
push
mov
out
add
hlt
sub
jo
mov
mov
gs
xor
push
adc
repz
in
cmp
cmpsb
movsl
or
and
hlt
dec
push
pop
fsubrl
int3
lgdtl
bound
push
hlt
mov
mov
sub
dec
test
fsubr
jne
test
loop
repnz
shll
pusha
and
cmp
and
push
lahf
subb
add
stos
and
out
cmp
xor
in
cmp
insl
dec
es
insl
jbe
xor
movsl
lods
cmp
dec
addr16
pop
data16
inc
hlt
mov
mov
movzbl
int3
dec
nop
cmp
push
mov
lret
insb
sub
stc
sub
jns
je
mov
gs
bound
arpl
jno
push
stos
pusha
lea
adc
and
xchg
push
insl
call
rclb
insl
lea
pusha
lcall
popa
outsl
mov
mov
movsb
jne
mov
outsl
jmp
int
cmp
lret
push
dec
mov
pop
cmp
lds
out
out
mov
rclb
into
and
xor
popa
add
test
outsl
sub
notl
dec
and
push
arpl
andb
mov
jno
mov
insb
sbb
je
xor
gs
mov
in
mov
push
addr16
push
fildll
jl
xor
sbb
lea
xor
pop
daa
add
xchg
insb
jo
lea
mov
rorb
scas
inc
xchg
pop
cmp
mov
ljmp
pop
add
jmp
arpl
lock
shlb
sub
dec
les
subl
lea
lcall
xchg
fsts
das
insl
add
push
cmp
popa
fs
sbb
add
daa
aaa
mov
dec
sbb
out
loopne
push
mov
xor
xchg
xchg
arpl
jns
sarb
push
xor
sub
mov
push
cmp
in
mov
cmc
xchg
je
mov
filds
fs
movsb
push
cli
and
mov
popa
insl
cmp
xor
pop
shl
lea
dec
sbb
sbb
push
ret
aas
push
cltd
xor
jnp
adc
sub
popa
jl
in
mov
lds
mov
xor
bound
aaa
cltd
jnp
xchg
pusha
movl
add
das
or
adc
xor
sub
xchg
push
jb
bound
pop
leave
cltd
sub
xor
xor
mov
mov
loopne
xor
add
pusha
dec
lea
inc
push
pop
jl
in
pop
int
data16
push
xlat
push
adc
test
fldl
pop
arpl
jb
add
mov
dec
jge
test
add
add
push
dec
scas
jle
cld
push
movsb
test
movsl
cmp
jae
xor
std
rol
pop
fcmove
adcb
and
int3
dec
cmp
cmp
adc
jge
mov
testb
loope
fisttps
dec
dec
cmpl
dec
idiv
push
scas
andl
lods
sbbb
lcall
push
rcl
dec
adc
push
dec
ja
aad
fs
adc
movsl
pop
lea
cmp
jno
and
push
leave
sub
sub
mov
das
push
mov
and
and
jmp
jmp
cmp
or
in
cmpsb
pop
jno
pop
or
and
and
sbb
call
shll
push
frstpm(287
adc
dec
sarb
ret
mov
push
mov
inc
bound
pop
aaa
adc
pushf
and
arpl
jbe
jne
mov
sub
jno
test
jb
dec
aam
mov
loope
add
dec
pop
dec
xor
loope
add
incb
push
pop
pop
and
xchg
push
and
jecxz
jb
lea
loope
mov
enter
mov
add
sarl
es
lret
xchg
and
mov
pop
push
nop
imul
adc
jo
jo
in
pop
add
sub
push
stc
aad
dec
and
lea
rcrb
or
mulb
xchg
shll
jl
jb
ljmp
in
pop
in
push
sbb
or
mov
dec
int
xor
adc
mov
jae
push
das
sub
scas
hlt
shlb
insl
shl
cmpl
pop
dec
jecxz
xchg
gs
mov
lds
cwtl
loop
fisubrl
and
and
xchg
sbb
push
fisttpl
std
add
out
and
add
cmp
add
in
lret
and
mov
push
cmp
mov
gs
cli
in
jnp
mov
sbb
mulb
daa
xor
or
repnz
xchg
inc
xchg
xor
popa
push
in
sub
push
pop
mov
dec
cmp
push
dec
scas
cmc
imul
insb
stos
mov
push
test
xor
jno
es
gs
ret
pop
loopne
arpl
xor
xor
xor
cmc
cmp
repz
lock
mov
imul
dec
or
push
test
lods
je
sbb
fbstp
jnp
iret
push
lahf
dec
insl
and
out
pop
xor
sti
fwait
rcrb
daa
stos
xchg
rcrb
imul
ret
imul
sbb
rol
sub
pop
rcrl
and
mov
cmp
ds
push
movsl
or
pop
mov
mov
lret
mov
dec
lock
and
jno
out
mov
fs
lret
adc
stc
xchg
cmp
gs
imul
mov
out
sub
mov
pop
push
arpl
jbe
cmp
in
mov
test
fisttpll
xor
mov
sbb
scas
dec
repnz
cmc
add
sbb
mov
and
and
idivb
lds
push
lea
pop
xor
fcmovb
pushf
xchg
insb
lahf
pop
cltd
push
iret
push
call
jmp
inc
ds
popf
scas
orl
je
fisubrl
pop
fs
and
mov
inc
xor
out
push
xchg
jae
sub
insl
push
in
dec
mov
popf
sbbl
fs
mov
pop
outsl
and
dec
lods
cmc
add
and
decl
add
mov
insl
lock
je
gs
mov
movsl
repz
jno
dec
insb
outsl
in
push
mov
in
mov
iret
sub
cmp
mov
and
mov
fsubs
imul
add
mov
or
cld
lods
dec
outsl
adc
pop
xchg
mov
cmp
popf
andl
mov
pop
pop
inc
xchg
or
mov
add
orl
fs
push
push
es
outsl
roll
repnz
jb
pusha
mov
outsl
pushl
jmp
aaa
cltd
fldcw
cmp
dec
cmc
movsl
or
mov
mov
ret
bound
movsb
or
jno
in
cltd
push
cmp
fst
test
xchg
popa
jmp
cmp
lret
lea
popa
dec
gs
add
sub
rcll
pop
xor
lods
pop
imul
fcmovu
adcl
jg
or
imul
adc
fsubl
rolb
xor
or
push
addr16
in
dec
push
and
push
icebp
lea
insl
popa
imul
repz
and
pop
aas
rcr
incl
in
jbe
imul
and
pop
push
sbb
push
int3
hlt
push
insl
or
mov
adc
mov
bts
xor
push
inc
sbb
pop
iret
imul
loope
into
inc
xor
outsb
push
lea
iret
xchg
insl
mov
sub
aaa
sub
dec
sarl
sbb
stos
ret
sub
sbb
jbe
cmp
xor
movsl
sub
popl
adc
sub
arpl
pusha
arpl
imul
into
clc
js
xor
movsl
insb
int
add
push
test
pop
insl
aam
or
into
popa
mov
bound
jbe
aaa
sbb
mov
push
insb
cs
fs
js
mov
daa
jno
jmp
sbb
insl
jnp
mov
xchg
xor
xchg
dec
cmc
dec
mov
xchg
sahf
inc
test
in
add
dec
bound
pop
test
dec
mov
jo
movsl
fmull
test
mov
mov
in
cli
cli
test
jl
mov
dec
xchg
repnz
movsl
pop
inc
shrb
inc
or
push
sub
pop
add
mov
sahf
push
clc
cwtl
push
pusha
mov
sahf
xchg
adc
push
or
mov
and
pop
sub
cmpsl
xor
lods
push
jmp
xorw
mov
outsl
and
mov
jmp
pop
push
and
push
cmp
imul
loop
stos
test
add
fnsave
outsl
in
int
and
jnp
nop
cs
and
xor
pop
test
outsl
xchg
pmaddwd
dec
push
jne
out
out
inc
cwtl
jae
iret
sub
insl
call
psllq
add
push
scas
movsl
pushf
dec
pop
or
add
icebp
outsl
cmc
cmpsl
mov
and
inc
in
xor
add
popa
lret
cmpb
mov
in
lods
mov
fiaddl
pop
adcl
mov
std
jne
outsl
push
add
outsl
clc
bound
dec
aaa
popa
imulb
outsb
pop
mov
stc
jo
mov
outsl
adcb
inc
clc
imul
xchg
pop
cli
mov
daa
jns
dec
outsb
push
in
add
sub
in
in
outsb
stc
push
dec
pop
imull
mov
inc
in
jge
ljmp
mov
ljmp
or
push
aas
bound
push
std
jo
jb
lods
jns
add
push
and
mov
sbb
in
jg
pop
popa
jo
pop
shl
outsb
cmp
sub
insb
int3
mov
insl
imul
hlt
cmp
cld
je
sub
dec
ljmp
ja
push
cmp
dec
out
or
insb
clc
xor
arpl
pop
lds
imul
xchg
mov
and
xchg
mov
addb
xchg
pop
xor
movsb
xchg
hlt
xchg
mull
cltd
in
sbb
jns
int
inc
dec
lea
xchg
rcrb
and
mov
dec
mov
lea
mov
sbb
xchg
lods
icebp
jg
xchg
in
aaa
cltd
add
jb
sub
dec
pusha
dec
mov
adc
push
push
popa
shr
mov
mov
push
add
outsl
in
lea
push
mov
jmp
sub
js
cltd
pop
lods
fwait
sbb
add
adc
sbb
es
in
popf
pop
xchg
or
pop
sbb
negb
jb
jae
fnstenv
popf
xchg
sub
fs
lret
pop
jge
lret
lcall
adc
mov
xchg
out
pop
repnz
insb
lea
add
xor
lret
fstl
cli
int
xchg
lods
popa
jno
lea
outsl
lret
jns
mov
push
lahf
jl
sbb
clc
or
pop
fsubs
lret
call
jle
sub
call
insb
je
imul
cltd
sbb
leave
notb
inc
push
aad
push
shrl
imul
inc
mov
in
inc
aad
mov
adc
xor
imul
imul
in
lea
adc
scas
nop
fcomp
sub
ss
mov
fs
lea
lods
jae
mov
movsl
in
pop
aad
cli
iret
push
adc
sbb
sbbl
push
popf
roll
lods
dec
sbb
add
push
adc
sarb
pop
push
adc
ss
xchg
or
dec
mov
fsubrp
or
pop
mov
pop
rol
pop
out
es
pop
add
inc
sbb
in
movsb
js
push
push
push
es
sub
or
notb
insl
je
lock
inc
ljmp
xor
ret
data16
sbbl
add
xor
and
dec
test
add
jmp
push
jae
fnsave
cld
in
xor
icebp
mov
mov
push
movsb
dec
into
sub
adc
jae
xchg
push
mov
mov
lods
int
xchg
cmp
jl
cmp
cmp
cmp
xchg
add
fnstsw
arpl
push
mov
xor
dec
mov
ja
cmpsl
lret
arpl
inc
jg
pusha
xchg
pop
add
mov
cltd
fcmovne
and
loopne
imul
push
bound
xchg
lcall
gs
int3
sbbl
dec
xor
stos
imul
insb
imul
xor
movsl
mov
xor
inc
add
daa
inc
sbb
imul
jae
xor
fldl
cwtl
mov
mov
outsb
repz
mov
sbb
xchg
xchg
sub
push
adc
gs
in
pop
xor
mov
mov
mov
ret
int
gs
movsb
cmp
int3
dec
imulb
lock
push
daa
and
push
pop
mov
lods
add
or
cltd
push
data16
fwait
insl
push
popa
out
xor
les
sbb
pmulhuw
push
xor
adc
or
mulb
mov
inc
test
push
inc
sbb
arpl
and
mov
icebp
mov
inc
push
sbb
in
jp
mulb
pop
loope
push
xchg
and
mulb
cmp
clc
mov
popf
jmp
push
xor
mov
aad
pop
rolb
mov
push
mov
xchg
jb
and
mov
inc
fidivl
arpl
dec
aam
push
es
jle
jae
pop
lea
pop
push
jl
or
cmp
sahf
and
mov
aas
pop
adc
add
scas
pop
icebp
inc
movl
dec
hlt
outsl
movsb
rcr
sbb
push
stos
inc
ljmp
add
sbb
pop
test
jo
shll
pop
lret
into
jae
ret
and
call
stc
and
and
sbb
pop
jno
repz
jae
cmp
clc
cwtl
adc
popf
mov
sub
mov
jle
sub
mov
aam
mov
pop
cmp
lea
ja
push
push
into
movl
imul
jbe
jno
xchg
divl
hlt
in
xor
pop
shl
adc
or
in
or
nop
xor
rep
and
testb
insl
push
xor
and
push
out
cmp
jb
outsl
insb
in
xor
cmpl
sbb
sbb
cld
enter
hlt
loopne
inc
jp
stos
clc
arpl
add
sub
cmp
adc
xor
aas
sahf
lcall
push
pop
pop
cwtl
sub
or
ljmp
insl
mov
fwait
xchg
icebp
popf
pop
stc
movsb
add
insl
addb
add
lret
subb
mov
repnz
or
lea
mov
fmuls
sub
sub
mov
lret
push
inc
inc
clc
data16
and
stc
outsb
jmp
adc
mov
into
movsl
mov
xor
dec
ficomps
cmp
dec
es
popf
enter
iret
inc
imul
push
pop
and
das
jmp
mov
mov
mov
add
mov
imul
imul
push
outsl
insl
cld
xor
sub
lcall
sub
inc
add
stc
pop
or
arpl
pop
comiss
fcomip
fwait
mov
dec
inc
and
call
fiaddl
sub
xorb
adc
mov
aad
sbbb
mov
data16
fbstp
negb
jbe
xchg
mov
xchg
jmp
lds
push
dec
jp
in
xchg
xor
push
xor
jo
in
and
and
inc
add
loope
fnstcw
xor
dec
cmpsb
incl
fdivl
push
jns
xchg
pop
mov
pop
iret
in
jbe
inc
and
pop
cmp
cmpsl
imul
pop
notl
sub
and
in
mov
lret
int3
sbb
fdivr
fidivrl
shlb
ljmp
call
pop
xor
mov
push
imul
popa
iret
fs
jno
pop
mov
pop
icebp
and
inc
or
mov
add
push
aas
or
xchg
adc
and
mov
xor
sub
stos
push
sub
jl
out
mov
push
gs
push
scas
sub
lret
loop
ds
inc
cmp
mov
lret
lret
rcrb
movsb
jge
data16
ljmp
jnp
sarb
aaa
push
mov
aas
gs
add
and
loop
pop
jae
jg
jbe
or
add
pop
ljmp
aad
lea
adc
mov
shll
imul
stc
clc
lock
xchg
push
mov
mov
popa
or
dec
xor
add
lock
leave
loope
jne
add
lds
push
add
dec
insb
inc
imul
imull
xor
xor
insl
arpl
shrb
pop
add
push
add
jno
push
jae
jo
sbb
jl
xchg
in
cmc
cmpsl
mov
sqrtps
hlt
pusha
xchg
sub
or
mov
repnz
xor
mov
addl
jle
cwtl
jae
add
inc
xchg
lock
bnd
mov
imul
adc
cmp
repz
xchg
insb
testl
test
cli
hlt
lret
cmp
xorl
add
imul
add
xor
iret
jno
mov
stos
int3
cwtl
adc
pop
ljmp
into
xor
inc
arpl
cld
rclb
push
hlt
fnsave
add
inc
mov
jo
or
or
std
cs
mov
filds
cmp
pop
sbb
movq
mov
jno
data16
xor
pop
and
pop
in
sub
testl
and
in
xor
and
inc
sub
arpl
subb
mov
gs
push
repz
inc
xor
cmp
cmp
inc
jge
shll
inc
xchg
dec
dec
lea
imull
mov
jbe
push
popf
pop
sub
push
push
sub
hlt
shr
xor
outsl
cmp
mov
imul
lret
icebp
pop
pusha
test
arpl
aaa
pop
cmp
add
sbb
mov
xor
and
inc
test
push
int
sti
pusha
ljmp
aad
xchg
adc
cmp
insl
lret
and
xor
in
aam
jge
xor
shlb
lds
fnsave
fbstp
xchg
push
lods
jo
repnz
jbe
jle
outsb
mov
in
inc
push
and
mov
mov
adc
push
push
mov
xor
jecxz
inc
sub
mov
test
mov
loopne
cmc
mov
sbb
mov
insl
iret
xchg
dec
or
scas
movsb
jno
lea
aad
and
insb
jl
hlt
add
xor
pop
jne
mov
outsl
mov
and
and
insl
push
push
outsb
clc
mov
sub
pop
lea
inc
inc
in
rcll
xchg
lcall
adc
loopne
loope
rolb
or
push
dec
lcall
sbb
and
dec
jge
cmc
jno
icebp
xlat
fidivs
lock
in
ljmp
jg
sbb
adc
enter
add
inc
popf
cmp
aas
fs
push
dec
fdivs
mov
jae
popa
out
xor
out
xor
out
xor
out
xor
xor
lock
mov
clc
ret
jnp
in
pop
bound
cmp
push
jbe
push
repnz
stc
push
hlt
xchg
lea
outsl
mov
movsb
ret
es
inc
jge
mov
add
scas
dec
cli
pop
mov
movsb
fcompl
mov
push
lods
pop
jmp
jb
gs
jb
or
in
add
mov
ss
loop
sbb
enter
cmc
inc
mov
dec
mov
pop
les
inc
fsubrp
aas
je
lcall
int
jmp
mov
sti
stc
sbb
sti
push
pop
dec
fs
push
fcmovne
push
cmp
dec
adc
pop
push
add
loope
sbb
adcb
sub
sbb
sbb
add
adc
mov
lea
rcr
mov
popa
andb
xor
rorl
adc
sub
jae
pushf
scas
push
lods
pop
pop
and
dec
icebp
or
ret
imul
mov
and
add
dec
mov
outsl
aam
rcr
mov
mov
add
inc
push
and
fiadds
cs
push
fcomip
mov
mov
nop
pop
and
and
into
or
mov
sub
test
jbe
adc
and
cmpsb
in
cmc
data16
fbld
enter
aam
or
push
lret
cmp
in
hlt
orb
pop
xor
subl
cmpsb
imul
shrl
and
push
mov
or
scas
insl
add
dec
jno
cmp
cs
jg
and
fwait
adcb
test
push
std
insl
std
sub
lods
xor
xor
sub
and
push
pop
xchg
out
pop
in
pop
push
pop
jno
jmp
mov
pop
das
cmc
ja
or
jns
sbb
mov
push
jbe
in
inc
jge
out
cs
adc
push
out
xor
sub
test
push
sbb
mov
mov
gs
mov
jae
movsl
out
mov
add
xor
push
ljmp
test
addr16
mov
ljmp
pusha
pushf
lcall
and
outsl
sub
mov
imul
cs
jns
repz
push
xchg
mov
sbb
in
cmp
inc
dec
inc
enter
adc
cmp
add
data16
mov
in
xor
sub
inc
xor
dec
mov
xor
pop
xor
jge
adc
gs
or
out
shr
stos
mov
stc
cltd
xor
dec
mov
push
mov
data16
hlt
mov
bound
sbb
repz
dec
ljmp
popa
mov
out
popa
cmp
and
sub
cmpsl
popa
mov
and
out
mov
cmpsb
jecxz
shll
or
daa
pop
mov
shr
imul
imul
es
je,pn
add
pop
jmp
mov
test
or
add
outsl
cli
aas
js
lock
and
loope
das
dec
scas
lret
jle
rcl
divb
jecxz
fsubr
loope
dec
and
sub
xorb
push
mov
jo
js
add
addr16
dec
dec
stos
xchg
inc
imul
pushl
or
add
mov
dec
dec
jle
sub
and
push
loope
mov
dec
or
ret
xchg
outsl
sarl
lret
jmp
sub
sub
loope
xor
xchg
adcl
and
pop
sub
loope
lods
push
ljmp
cmp
outsl
sub
repz
inc
jmp
pop
cmovl
pop
fs
sbb
lds
add
and
jae
jae
arpl
dec
in
imul
cmp
push
xor
inc
jb
popa
xor
inc
lret
imul
lcall
lea
outsl
dec
addb
fucomp
insl
cmc
and
icebp
mov
add
jmp
mov
add
jb
fistps
inc
jge
in
push
mov
nop
dec
sub
lea
sbb
sbb
test
movsl
push
aad
mov
and
cmp
scas
daa
les
sub
sbb
pop
gs
xor
or
ret
sub
xor
xchg
xchg
scas
pushf
into
shrb
pop
pushf
cmp
outsb
insb
pop
push
scas
daa
cmp
lret
aas
cmp
mov
fdivrs
loopne
addr16
popa
adcb
push
mov
push
pop
fadds
pop
xchg
fstpl
int
push
daa
xor
cmp
mov
cmp
pushf
dec
popf
pop
mov
sahf
incb
pushf
jmp
jo
hlt
or
xor
scas
mov
cmp
ret
test
cmp
push
cli
out
mov
mov
popf
stos
test
inc
out
mov
pop
pop
test
cmp
sahf
pop
mov
cmp
cmove
push
fisttpll
or
dec
and
gs
xor
push
sbb
in
push
pop
mov
aad
pusha
xor
in
inc
pop
test
loop
mov
xchg
sbb
inc
rol
push
icebp
mov
xchg
inc
lcall
insb
notl
out
out
xor
pop
outsl
ja
adc
sub
pushf
adc
mov
js
cmpsl
jmp
mov
inc
je
mov
cmp
add
pop
loopne
mov
test
mov
sarl
inc
sub
daa
add
pop
aaa
bound
sub
jp
movsl
lea
pop
xchg
mov
stos
and
sub
inc
in
in
sub
lret
aad
movsl
in
inc
push
push
mov
mov
sub
and
push
cmp
dec
dec
mov
aaa
dec
fstps
pop
inc
add
test
hlt
outsb
adc
mov
and
or
cmp
dec
mov
inc
into
inc
lahf
add
jmp
sbbb
sub
ffreep
mov
mov
lea
mov
shrb
sub
out
cltd
mov
rcrb
push
stc
insb
xchg
fs
lods
divb
in
jb
mov
cmp
sahf
inc
push
movsl
sbb
and
add
push
adc
aaa
scas
popa
cwtl
in
sbb
jb
in
xchg
mov
lds
dec
pop
pushf
mov
dec
inc
je
push
stc
imul
mov
insb
mov
or
in
inc
push
sbb
jno
jo
pop
or
leave
test
mov
lea
mov
das
popa
mov
sub
mov
xor
sti
daa
jecxz
mov
std
cmp
jmp
adc
jo
mov
inc
pop
mov
cwtl
out
adc
push
jbe
pop
out
xor
stc
addr16
dec
daa
or
dec
dec
clc
push
pop
adc
inc
mov
mov
or
in
gs
into
jl
push
or
push
mov
punpckhbw
xor
push
or
in
data16
add
sbb
and
dec
testl
xor
sub
adc
mov
fists
sbbl
and
add
adc
jo
addr16
mov
push
pop
stc
xor
ja
inc
cmpsl
xor
sarb
xchg
add
adc
lods
jg
add
sar
jb
ret
push
sbb
push
or
clc
xor
mov
jb
add
cmpsl
push
imul
cs
xlat
insb
gs
out
add
mov
cmpb
push
in
rcr
cmp
mov
mov
lahf
shll
push
shl
mov
lea
data16
int3
sub
pop
inc
les
add
adc
lock
push
pop
and
jl
ja
xchg
lea
push
cmp
inc
popa
sub
jae
jno
imul
mov
lods
dec
negl
mov
jge
xchg
imul
mov
adc
xchg
xchg
dec
dec
testb
outsb
lods
ss
sub
push
fisttpll
insb
jae
enter
loope
push
xor
into
add
mov
movntps
das
cli
fiadds
divb
dec
and
push
popa
and
in
and
icebp
mov
outsb
stc
ror
decl
sub
or
hlt
add
cmc
outsb
scas
xor
pop
dec
sbb
push
repnz
pop
testl
push
add
push
xchg
inc
xchg
out
jb
lods
or
and
mov
and
lods
xchg
imul
cwtl
bndldx
adc
or
sub
push
and
add
push
jge
sub
jae
loop
loope
jp
outsl
sub
and
sbb
xchg
dec
xor
push
mov
sbb
push
imul
mov
jne
xchg
mov
pop
xchg
outsl
daa
mov
mov
add
push
ror
xor
mov
ja
fsubrl
iret
add
or
xor
jae
callw
fdivp
es
adcl
aad
add
xor
sub
shl
je
or
add
sbb
int3
sbb
data16
aad
ds
sub
dec
jo
jnp
in
pop
pop
mov
ret
jecxz
xchg
adc
insb
jo
jmp
dec
stos
jl
fbld
dec
stos
stc
cmp
xchg
testl
mov
lods
cli
sbb
aad
scas
movsb
or
cs
adc
adc
add
loopne
call
fs
and
imul
fstps
mov
paddsb
test
pushf
out
js
sbb
sub
andl
xchg
xchg
pop
push
bound
jmp
call
shl
hlt
scas
jl
add
imul
xchg
sub
inc
pop
dec
int
pushf
sub
inc
icebp
jg
fdivl
insl
xchg
sbb
pop
mov
scas
outsb
ja
fisubrl
loope
loopne
rclb
pop
pop
and
xlat
add
push
stos
cltd
add
jmp
cmp
pop
dec
xor
mov
adc
dec
mov
xchg
fbstp
push
int3
sbb
lea
push
movl
shll
in
mov
ret
int
cmpsb
cmpsl
fwait
pop
add
aaa
in
sbb
push
dec
adc
cmp
xor
jnp
adc
aas
je
in
filds
arpl
push
cld
push
mov
jns
call
jo
mov
outsl
xor
xchg
pop
aam
in
push
shrb
es
popa
sub
mov
jb
popf
out
cmp
loopne
jns
adc
inc
push
lahf
and
in
mov
mov
subb
mov
xchg
fucomp
xor
pop
or
ret
push
movsb
mov
cmp
pop
pushf
aaa
push
add
sbb
shl
jg
out
cmpsl
inc
cmp
in
pusha
movsb
pop
and
pop
mov
and
scas
fmul
arpl
rorb
rolb
adc
lea
inc
add
hlt
or
jge
sub
sub
fdivrp
aaa
and
call
in
push
js
stos
icebp
dec
enter
pop
outsb
mov
pop
mov
jge
push
aam
push
push
outsb
inc
cmp
lea
into
out
in
pop
cltd
jl
sub
loopne
repnz
pusha
shll
inc
jns
cld
pop
hlt
mov
loop
push
jo
rolb
sub
push
jae
dec
lods
hlt
mov
or
into
in
push
jecxz
pop
lret
repnz
pusha
inc
iret
inc
cli
pop
xchg
jae
test
jle
jmp
aam
adc
leave
sub
fmull
xchg
mov
scas
push
test
cmp
add
rcrl
ja
mov
mov
aas
loope
add
and
in
cmp
insl
mov
and
sub
pop
repz
test
push
insb
sti
jo
dec
insl
aam
gs
jo
test
xor
arpl
fisubrs
inc
gs
int3
insl
mov
dec
fnsetpm(287
gs
xor
je
jmp
pop
push
xor
cmp
test
fs
pop
dec
add
add
mov
xchg
cmp
push
ret
dec
or
pop
outsb
xor
dec
popf
enter
aad
int
in
flds
bound
out
dec
ljmp
in
jbe
adc
out
decl
fldenv
test
jg
jbe
hlt
dec
std
popa
mov
sbb
pop
call
mov
jmp
inc
mov
sbb
leave
push
push
das
xchg
mov
adcl
cmp
out
and
adc
es
push
sbb
cmc
incl
push
jg
stos
fisubl
push
fmuls
or
stc
mov
shrl
xchg
mov
test
pop
inc
xor
mov
pop
mov
insl
scas
jge
mov
andb
test
aaa
sbb
mov
pop
xor
out
add
popa
loopne
fsubrl
das
popa
scas
out
sbb
ljmp
inc
add
out
jo
divb
sbb
sbb
clc
and
movsb
mov
dec
fidivl
xor
dec
lret
add
xor
adc
pusha
hlt
sbb
arpl
mov
lock
dec
push
out
sub
in
hlt
gs
adc
jl
arpl
pop
lea
pop
push
add
xorb
lds
test
adc
lea
add
gs
fwait
mov
shrl
mov
add
imul
cwtl
lret
cmp
test
mov
in
inc
pop
jno
dec
sbb
jo
out
cmc
ret
lock
inc
and
fwait
cmp
std
jae
jo
lcall
jg
jo
lea
imul
pushf
out
imul
cmpsb
push
push
mov
pushf
cmp
dec
int3
pushf
flds
adc
int
xchg
cli
sub
sti
adc
inc
add
pop
or
push
pop
xor
jp
lock
sub
fs
popa
div
push
mov
mov
arpl
in
add
adc
mov
lock
ja
adc
dec
bound
imul
mov
popf
dec
in
pusha
push
xchg
xor
orb
xor
lods
sub
adc
jo
cmc
sub
or
sbb
test
xor
add
or
add
lea
lahf
std
dec
mov
cwtl
push
cltd
pop
vmovaps
fstl
jmp
mov
mov
lods
divb
pop
pop
or
arpl
pushf
mov
movsb
cli
cmc
fldl
sbb
cmp
addr16
es
jl
faddl
popa
push
loope
insl
loop
mov
shll
dec
push
rcrl
loope
outsb
out
mov
and
arpl
stos
adcl
mov
aaa
repz
or
pop
and
and
sbb
adc
xchg
stos
pusha
add
cmp
nop
hlt
xor
cmc
out
insb
pop
icebp
fs
push
adc
stc
rcrl
push
rcll
add
sub
and
lds
fists
mov
xchg
lock
and
or
jno
call
aam
mov
xor
lock
sbb
cmp
shl
arpl
aaa
and
divl
mov
sahf
inc
mov
es
lret
out
sub
lods
inc
mov
repnz
call
pop
or
xor
pop
and
sbb
jg
xor
mov
push
or
or
push
sti
xchg
daa
xor
cmc
xchg
sub
jbe
xor
lahf
in
jecxz
in
in
and
inc
ret
jno
pop
and
and
mov
fs
lock
adc
insl
sbb
mov
icebp
adc
mov
sbbb
and
lea
mov
sub
notb
and
fisubl
or
lea
and
inc
mov
pop
add
jno
mov
push
inc
popf
out
jns
sub
mov
dec
jbe
das
mov
xchg
int
mov
mov
mov
divl
mov
mov
cmc
push
lea
scas
sub
mov
test
loope
pusha
add
xchg
jbe
push
bound
and
adc
cmp
add
dec
jmp
lahf
xchg
xor
jge
fwait
dec
mov
inc
dec
mov
rcll
das
or
pop
push
dec
adc
push
or
sub
pusha
aas
xor
dec
mov
add
push
jns
lret
sub
push
fldl
mov
fdivrl
xchg
jae
jecxz
push
push
aaa
popa
adc
jno
xchg
add
xlat
lock
cmp
or
in
cmp
fsubs
xchg
enter
push
push
inc
or
out
push
cmp
out
dec
inc
cmp
xor
stc
cwtl
add
dec
cmpsb
push
push
jns
adcb
outsb
xor
popf
clc
mov
mov
stc
dec
or
roll
andl
inc
lods
in
or
push
scas
add
jmp
sub
pop
shll
stos
inc
mov
loopne
fdivr
jns
add
and
fistps
pusha
sti
xchg
pop
testb
and
mov
or
mov
pop
sbb
and
pop
insb
xchg
mov
jnp
fstl
and
mov
std
es
mov
adc
or
imul
shll
adc
cld
dec
sub
popa
and
xor
ss
mov
dec
aaa
jg
insl
pop
sbb
pushf
mov
add
sbb
sub
add
push
inc
or
data16
add
in
mul
mov
or
xchg
xchg
push
mov
mov
cmp
pusha
imul
dec
add
fildl
push
push
stos
in
data16
icebp
xor
inc
cmp
cld
arpl
inc
or
lods
cmpb
dec
dec
andb
push
xor
call
push
pop
inc
loope
mov
push
stos
or
shlb
popf
popf
or
mov
jae
addl
inc
sub
dec
mov
into
xor
and
and
adc
aaa
xchg
add
sbb
sbb
out
jmp
lret
mov
or
imul
push
cli
and
xchg
pop
pop
adc
cmp
pop
loopne
pop
imul
push
xchg
cltd
inc
aad
dec
ficomps
int3
int3
add
sarl
xchg
fucom
shlb
or
sbb
in
cmp
and
pop
hlt
movb
pop
jno
dec
jmp
int
dec
pop
cmp
negl
and
scas
pop
mov
mov
pop
add
adc
push
jge
je
bound
cld
sbb
lods
arpl
push
push
sbb
into
and
fcoms
xchg
popa
push
lret
sub
and
and
addb
stos
push
pop
out
and
jnp
and
nop
scas
mov
mov
add
and
scas
pop
dec
movsb
jge
mov
or
mov
mov
sbbb
mov
pop
aam
cmp
pop
dec
xor
jl
ljmp
inc
and
jae
mov
dec
push
repnz
lea
add
insl
adc
es
testl
pusha
lock
call
and
leave
or
sahf
sbb
fistpl
jmp
xchg
dec
psrlq
scas
jnp
ret
add
outsb
lods
add
sub
shl
loopne
push
mov
push
pushf
aam
mov
push
sub
dec
or
dec
push
and
pop
movsl
sub
inc
inc
add
jecxz
mov
adc
sbb
cmp
add
xchg
pop
and
sbb
mov
push
jge
loopne
mov
ss
pop
xor
pushl
insl
adc
inc
stos
test
mov
mov
movq
jle
jnp
pop
cmc
xchg
jae
add
jno
inc
popf
inc
lret
mov
mov
inc
push
mov
lret
jae
aaa
mov
lods
fnsave
daa
jo
sbb
pusha
loope
dec
sbb
and
dec
xchg
xchg
arpl
roll
inc
stc
insb
inc
jmp
xor
push
cmp
js
pop
push
mov
daa
mov
mov
aaa
fists
xor
mov
and
ljmp
js
adc
arpl
in
fmuls
mov
xor
and
gs
add
push
dec
and
add
sub
or
sub
shll
and
dec
and
mov
shll
cltd
adc
push
and
inc
movl
push
lock
xor
imul
in
imul
jae
in
lcall
std
cld
je
outsb
or
mov
fiadds
mov
mull
sahf
jecxz
arpl
jae
rolb
push
pop
add
insl
or
int
aam
and
ljmp
mov
jns
push
rcll
or
adc
cmpsl
pop
adc
push
pop
movsl
dec
mov
jo
sub
gs
add
imul
les
daa
je
mov
mov
sub
pushf
sti
hlt
add
movsl
imul
out
iret
jbe
mov
scas
mov
insl
outsb
add
push
lcall
outsb
andl
clc
call
ds
sub
lds
jmp
popa
lea
in
mov
push
lods
jmp
lods
inc
and
daa
xor
add
rorl
and
add
push
mov
xchg
ret
adc
gs
push
jg
mov
adc
fs
js,pn
loopne
push
mov
xor
xchg
sti
push
imul
inc
add
dec
sub
outsl
cmpb
pop
mul
add
jb
pop
in
fdiv
loope
pop
push
lea
repnz
xlat
or
push
or
jb
and
sar
mov
mov
xor
cmp
cwtl
push
push
mov
inc
lcall
add
or
jp
dec
jg
fcmovnu
and
pop
fsubp
lock
push
xchg
push
inc
push
loope
push
inc
jo
cmp
gs
mov
scas
push
mov
in
nop
stc
cmp
push
dec
and
add
mov
aas
lret
jns
loop
sub
scas
xchg
popa
push
and
and
or
sub
adc
and
xchg
sub
js
xchg
xchg
push
imul
jmp
sub
jo
popf
cwtl
ljmp
mov
jmp
mov
cmp
sub
popa
icebp
mov
and
pop
in
and
das
and
mov
cld
mulb
dec
xor
lods
xchg
xchg
and
shr
leave
push
xchg
cltd
pop
cwtl
pushf
push
dec
sub
mov
js
xor
xor
lret
arpl
push
insl
xchg
fnstenv
sub
adc
mov
leave
push
mov
cs
mov
call
jg
ret
push
mov
jge
jle
pop
xorb
data16
jns
js
mov
jno
cmpsb
hlt
loop
imul
adc
pushf
mov
imul
int
dec
mov
sbb
push
and
aad
aaa
pop
add
fbstp
cmp
inc
movb
jl
popa
into
mov
sub
push
xor
outsb
loope
cmp
in
push
xchg
lcall
out
pop
and
cmp
jmp
cmp
lock
jb
out
and
cmp
inc
jb
pop
jno
inc
push
aaa
imul
lret
adc
gs
dec
outsb
hlt
std
jb
dec
leave
and
hlt
jno
test
dec
scas
jecxz
jo
in
dec
and
add
data16
jae
insl
fs
lea
sahf
pop
jno
call
outsl
sub
data16
and
ret
lock
cwtl
mov
bound
lret
pop
xchg
test
dec
add
dec
outsb
pop
xor
call
mov
fisttps
sub
in
imul
sbb
sbb
push
and
or
add
xor
push
sub
mov
push
repz
lahf
mov
xor
mov
add
push
jno
pop
faddl
pop
cmp
sahf
into
fcoms
test
cltd
dec
sarb
mov
and
inc
test
xchg
pop
mov
insb
ret
dec
sahf
lret
jmp
or
push
shrb
ds
loopne
sub
mov
cmc
xchg
repz
mov
sub
addb
pop
mov
mov
stc
or
shl
int
jno
jo
mov
scas
stos
nop
inc
add
out
enter
jo
pusha
and
fs
ja
insl
inc
jo
inc
loope
pop
dec
add
dec
cmc
cmpsl
pop
xchg
pop
mov
cmp
mov
push
cli
js
and
inc
mov
adc
xchg
movsb
dec
orl
mov
cmp
inc
jnp
add
and
jbe
push
out
aam
add
or
mov
je
sbb
inc
jns
push
aaa
popf
imul
lock
pop
lea
stc
mov
push
mov
daa
leave
sub
les
jno
pop
and
dec
out
data16
dec
push
pop
stos
loopne
mov
or
and
jl
icebp
xor
nop
or
pop
jo
push
push
sbb
pop
sahf
outsl
aam
add
adc
lret
jns
in
ret
in
sbb
add
sbb
negb
ljmp
cmp
jno
arpl
lods
push
clc
pop
repz
pop
mov
xchg
pop
jns
sub
pop
cld
jno
ja
imul
xor
cmpsl
inc
jge
sub
nop
inc
inc
mov
pop
jmp
pushf
push
pop
pop
cmp
or
sarl
aad
aas
and
stos
sbb
lds
insb
sbb
sub
lods
mov
lret
push
jo
sub
jbe
lcall
xor
ljmp
cmp
mov
mov
sub
and
adc
adc
test
subl
add
and
xchg
pop
repz
and
xor
or
push
xor
int3
cmpsb
daa
cli
xchg
lcall
ss
fcoms
jb
jle
es
mov
ja
inc
add
xor
je
popa
jmp
movsb
xchg
mov
je
sahf
jmp
aas
jo
mov
ret
add
ficompl
hlt
das
addr16
xchg
rcrl
out
out
out
or
int
ror
inc
out
push
xor
dec
cli
sahf
adc
add
outsl
inc
dec
rcl
arpl
aaa
popf
add
xor
mov
add
sub
adc
push
pop
xor
aaa
mov
xor
sub
or
sub
int3
push
xor
sbb
pushf
dec
cmc
mov
test
and
mov
mov
stc
pop
mov
das
test
sbb
push
ljmp
dec
divb
sti
and
and
mov
movsb
xor
addr16
in
xor
imul
mov
lds
xchg
in
xchg
xchg
bnd
outsb
cltd
pusha
add
inc
push
in
loop
push
mov
cmc
push
fdivs
lret
mov
add
test
mov
hlt
pop
dec
sbb
loope
mov
js
mov
lds
sbb
mov
sarb
and
pop
xchg
imul
test
xor
cwtl
pop
add
mov
stc
pop
jle
repz
fdivs
push
pop
cld
sbb
dec
adc
add
aad
sbb
mov
pop
jle
repz
mov
add
shl
or
xlat
in
cmp
xor
xor
les
pop
add
gs
push
and
xchg
or
sub
lea
fstl
lahf
sbb
and
mov
push
xchg
mov
loop
bt
jb
push
lret
mov
bound
lds
test
mulb
jo
cmpsb
xchg
popa
adc
ret
jmp
add
sbb
or
sbbl
mov
insb
mov
je
inc
add
cmp
rcrl
fmul
jae
aad
adc
outsb
adc
bound
ds
shll
les
xor
add
mov
icebp
sub
inc
ss
dec
mov
push
fbstp
lods
jge
dec
push
cmp
pop
push
imul
pop
pusha
and
shll
xchg
cmp
lock
ret
dec
xchg
lods
xor
xor
sbb
ret
cmp
stos
scas
push
dec
insl
repnz
inc
lret
ret
inc
and
icebp
and
inc
adc
lods
add
push
test
andb
mov
inc
lock
xor
and
movsb
daa
imul
jnp
jb
mov
test
inc
push
stc
pop
fsubl
in
sbb
movsb
jb
and
divl
xor
adc
jno
lea
and
jne
outsl
pop
sub
sbb
lock
mov
scas
and
and
outsb
lea
cmp
fcomp
or
mov
mov
mov
xor
xchg
xor
outsl
mov
orl
sub
bound
xchg
jb
gs
in
pop
add
xchg
xor
popf
mov
pop
sbb
cs
in
int3
insb
int
in
dec
cmp
xlat
out
das
dec
mov
and
mov
cmp
enter
xchg
add
cltd
insb
and
sub
incl
cmpb
add
cmpsl
inc
pop
xchg
inc
icebp
das
fwait
pop
jmp
pop
inc
or
ljmp
adc
dec
and
in
in
das
ret
stc
dec
sbb
in
std
mov
jg
mov
and
xchg
xchg
mov
xor
jne
divb
dec
push
loope
or
outsl
notb
jmp
scas
outsb
xlat
dec
leave
add
popa
gs
pop
arpl
imul
lds
fisubs
or
outsb
fstps
and
dec
rorb
add
push
pushf
out
test
insl
pop
fisubl
insl
das
sub
mov
inc
push
push
pushf
stc
jnp
nop
mov
das
daa
push
push
daa
dec
leave
test
lods
in
or
pop
mov
int3
jae
sub
pusha
repz
in
push
xor
pop
ja
xlat
lahf
jmp
call
jns
mov
repnz
aad
movsb
inc
aaa
pop
shll
inc
jb
cwtl
sysenter
push
bound
in
in
cmp
mov
test
scas
mov
add
mov
insl
jecxz
in
jge
add
aas
es
mov
insl
cmpsb
lea
inc
in
ficomps
clc
jmp
loopne
mov
inc
popf
dec
ret
sbb
inc
xor
push
sbb
fdivl
push
sbb
es
mov
dec
push
fisttps
push
fxtract
push
aaa
and
cmp
add
ss
out
fucomip
mov
mov
add
es
movq
mov
sub
add
addr16
je
lea
gs
shl
jbe
cmc
dec
stc
cmp
fndisi(8087
std
inc
mov
jno
xor
leave
popa
in
sub
ret
adc
jmp
add
stos
push
lea
inc
fbld
xor
cmp
push
in
mov
pushf
or
loopne
xor
fcompl
dec
in
push
and
and
push
mov
jae
mov
lea
jbe,pt
or
jmp
adc
and
sbb
push
jge
or
sub
adc
push
add
sbb
test
test
xor
push
scas
pop
sub
pop
xor
add
push
inc
inc
add
arpl
mov
push
mov
cmpsb
xchg
adc
add
pop
insl
testl
in
adc
xchg
stc
loope
xor
mov
lret
addr16
ss
stc
xorb
jge,pn
add
addr16
insl
divb
in
imul
fs
jmp
pop
pop
test
cmp
mov
movq
mov
aam
popa
cli
mov
addr16
pusha
pop
bnd
nop
pop
sbb
imul
fldenv
bnd
adc
or
add
mov
rorb
cmp
aad
out
call
dec
xchg
jae
jno
lea
in
out
and
repnz
in
dec
daa
add
add
add
mov
rcrb
push
sub
dec
sub
adc
in
mov
imul
int
stos
pop
icebp
lea
add
and
mov
pop
insb
loope
test
cmp
fstpl
sub
lcall
fnstsw
insb
dec
scas
push
mov
daa
push
nop
push
jae
sub
mov
mov
sarl
sbb
data16
inc
fbld
pop
jmp
lock
and
and
popf
pusha
xor
sbb
sarb
shll
scas
adc
pusha
data16
imul
pusha
clc
xchg
in
jae
jb
cmp
adc
mov
pop
cmp
out
hlt
xor
or
sti
into
adc
add
mov
push
rcll
sbb
push
lods
mov
push
movd
adc
cmpsl
jae
cli
jbe
pop
jge
or
stc
add
pusha
xchg
cwtl
lods
in
and
mov
iret
cmp
push
and
jne
push
popf
sub
add
xchg
scas
jno
xor
clc
rcrb
lods
push
xor
test
clc
imul
cmp
bound
mov
fs
push
cmp
cli
fmull
and
int
pop
add
pop
jno
jnp
mov
cltd
mov
movsb
leave
js
cmp
loopne
sbb
inc
adc
hlt
loope
fs
cmp
mov
or
daa
mov
push
mov
xor
call
loop
dec
mov
repz
mov
dec
test
xor
shrl
fcompl
push
gs
leave
sbb
movsl
sbbl
push
xor
fmul
in
sbb
stos
cmp
in
jo
scas
sub
cmp
jge
repnz
push
mov
in
fisttps
int
jmp
dec
sub
ss
fsubs
adc
popa
dec
push
cs
xor
je
push
mov
mov
les
push
sbb
dec
nop
loop
lcall
mov
shll
xor
test
gs
in
sbb
hlt
jmp
jecxz
xor
xchg
sub
fs
jge
pop
jnp
popf
cmp
mov
mov
js
fstp
cmp
mov
test
pop
movsl
repz
sub
jl
xor
pusha
and
in
lret
jo
push
jbe
ret
jb
mov
lock
sub
mov
lret
and
test
jmp
idivb
sub
inc
sbb
rcll
les
mov
loop
and
lock
fmuls
jbe
int3
out
xchg
subb
push
or
adc
pop
add
mov
ja
popa
movsl
lods
sbb
cmpsb
and
leave
adc
jle
ja
push
mov
mov
pop
mov
dec
jge
fistpl
nop
cmc
rcll
in
mov
fnstsw
xor
mov
insb
ljmp
or
push
sbb
jae
imul
add
jo
rorl
mov
and
pop
fwait
mov
mov
xchg
movsl
and
call
popa
jge
sbb
out
les
mov
insb
stos
dec
rcrb
dec
lods
sub
movsl
popf
lods
arpl
popa
fidivl
aad
and
ljmp
xor
ss
movsl
mov
push
aad
ljmp
xchg
repnz
pop
mov
or
cs
push
or
mov
push
jae
in
repnz
in
or
and
fistps
test
fdiv
push
in
dec
scas
js
sbb
imul
ucomiss
dec
dec
mov
xor
stos
outsl
insl
dec
mov
imul
repnz
je
mov
lea
pop
insb
mov
sbb
or
mov
in
jge
push
jbe
push
cmp
popa
push
mov
xchg
dec
je
lcall
adc
add
add
rcll
jle
push
mov
lds
aaa
dec
cli
lea
addl
pop
pop
or
sub
mov
stos
pop
lea
fsubr
add
sarb
and
in
push
cmp
push
test
fnop
cltd
jl
sub
push
and
push
popa
call
jnp
loope
imul
dec
sub
call
ret
or
fnsave
mov
and
pop
pop
or
in
repz
imul
test
out
je
mov
inc
sbbb
in
lods
and
push
dec
mulb
clc
xchg
sub
sub
sub
sti
mov
inc
push
pop
mov
je
sub
pop
mov
lods
sti
dec
ret
sub
insl
dec
sub
dec
and
cmpsl
and
or
push
dec
fwait
mov
inc
xor
push
jno
ja
add
lea
inc
dec
popf
jns
and
add
repz
inc
divb
jo
jmp
cmp
and
ret
daa
cmp
repnz
pop
fsubr
movl
dec
dec
and
xor
pop
shrb
into
stc
test
vpmacssdd
outsl
arpl
cmp
cmc
loope
bound
cwtl
sub
xchg
cmp
push
fucom
cmpsb
push
dec
or
dec
mov
mov
push
adc
lds
pop
push
cmpsb
imul
jge
and
test
shlb
sbb
inc
insl
and
rsm
movsb
aam
mov
cmp
add
pop
mov
insl
fs
ja
popa
inc
jb
cmp
push
nop
push
fistps
dec
xchg
into
sub
sbb
push
or
push
add
testb
and
repz
jae
in
inc
addr16
or
dec
enter
jno
jp
push
inc
mov
lcall
cwtl
cmpsb
nop
movsl
inc
fists
dec
pop
stos
xor
sbb
cmp
aad
and
xor
gs
xor
push
dec
in
cmp
shlb
jo
test
cld
cmp
sub
pop
out
dec
sbb
inc
add
dec
int
push
divb
fbld
jmp
push
jns
push
push
mov
adc
inc
and
inc
outsb
jmp
xor
xor
pop
stos
push
jae
push
icebp
jg
xchg
mov
push
adc
xor
mov
mov
daa
pop
hlt
xchg
je
in
mov
repz
jns
mov
imul
out
and
and
push
icebp
mov
xor
push
mov
jle
repz
je
dec
insb
sub
and
adc
push
ret
xor
mov
push
loope
add
cmp
push
shrb
dec
jbe
push
xorb
call
mov
arpl
add
jp
jecxz
fistps
jmp
jbe
jno
inc
loop
mov
jno
xor
pop
repz
repnz
and
orb
jecxz
and
arpl
push
cld
cmp
sbb
js
jo
inc
jns
clc
lret
inc
lret
mov
movsb
lods
aas
mov
rcrl
mov
sub
and
and
or
push
dec
sub
push
push
or
jle
mov
push
xadd
sub
dec
inc
dec
int
rorl
and
ds
and
push
and
ja
popa
mov
lods
mov
incl
lea
jmp
jno
repnz
repnz
mov
scas
add
ds
daa
push
and
sbb
mov
in
add
cld
pop
jg
and
fildll
int3
repz
jns
and
or
push
add
comiss
lea
add
in
sbb
and
call
dec
mov
adc
xchg
cwtl
jl
aad
jecxz
pop
and
push
mov
and
dec
fwait
and
lds
lock
add
dec
mov
ss
pop
inc
xor
sub
cmp
jns
dec
repz
mov
mov
js
sub
fs
popa
das
adc
test
jae
pop
mov
pop
jl
rol
scas
dec
adcb
out
fs
jno
fsubrl
das
dec
lock
dec
inc
cmp
sub
or
loopne
addb
and
xor
jno
lea
dec
xor
jns
mov
push
cmp
fs
cmp
shl
and
jnp
push
aaa
mov
sub
and
loop
out
push
int
test
mov
in
das
mov
sbb
adc
jo
in
daa
jno
cmpsb
insl
sub
aaa
mov
mov
or
daa
and
test
mov
lock
sarl
insl
xchg
adc
and
decb
test
pop
lahf
movsl
push
lea
dec
push
mov
jle
sbb
pop
xchg
sub
arpl
add
inc
xchg
xchg
movsl
js
fwait
negl
jno
jg
add
dec
mov
mov
cltd
and
inc
fnsave
sti
and
lret
aas
jo
jge
mov
sbb
bound
jo
fiaddl
xor
jns
pop
xor
add
lcall
sbb
js
mov
sub
mov
sar
ficoml
fnsave
loope
insl
loop
shlb
or
bound
dec
adc
mov
loope
xor
mov
cmp
push
xor
push
incl
movsl
push
lods
sbb
xchg
ret
cmc
jno
xchg
dec
dec
add
lret
mov
out
sti
pop
push
xor
pop
inc
mov
push
mov
jo
xchg
or
cmpsb
jo
jbe
inc
orb
test
push
jmp
ds
add
ja
ret
lea
cmpl
mov
in
mov
rorl
sbb
jmp
movsb
aad
incl
or
sbb
mov
cli
bound
in
cmp
insb
sbb
enter
pop
push
push
sbb
pop
mov
fs
push
scas
mov
push
mov
mov
outsb
mov
mov
leave
mov
adc
out
out
pop
pop
ja
sub
mov
es
ss
test
jg
imul
mov
gs
xor
lods
mov
shlb
push
cmpsb
inc
inc
sbb
sub
pop
sub
imul
pop
xor
lcall
dec
mov
imul
ret
mov
pop
popf
in
xchg
pop
ss
xor
inc
cmp
inc
gs
lea
in
clc
cmp
adc
shlb
in
testl
popa
push
insl
imull
push
jmp
sub
jno
jnp
dec
inc
pop
imul
test
iret
push
jno
xor
cltd
jmp
fdivrl
dec
jno
lret
movsb
je
add
popf
in
popa
and
out
lea
rcll
int3
jbe
push
pop
jge
stos
in
adc
push
pop
mov
jecxz
mov
mov
mov
aas
mov
and
cmp
daa
jnp
insl
push
pushf
cmpsl
inc
jo
dec
xor
jne
adc
pop
pop
das
jo
and
cmp
push
idivb
and
cltd
push
test
popa
and
in
sub
push
sub
jbe
and
test
sub
jecxz
bound
loop
dec
out
xchg
push
jae
jno
xor
xor
stos
add
push
inc
outsl
ljmp
addr16
movb
jns
lock
in
xor
jecxz
addr16
xor
push
cmp
push
xchg
pop
pop
pop
sahf
popf
pop
popl
inc
cvtps2pd
imul
fisubrs
mov
pop
push
in
mov
ret
fisubs
push
in
daa
gs
xor
lcall
aad
and
inc
lea
and
mov
mov
push
sbb
push
jae
xchg
xor
pop
cld
jle
hlt
in
or
inc
lcall
pop
fistl
fmull
push
pop
scas
mov
jle
push
dec
xchg
out
jecxz
xor
xchg
mov
bound
cmp
movb
hlt
pop
xchg
cmp
popa
pop
push
addl
jp
cs
int
mov
and
cmp
or
and
mov
xor
mov
sub
dec
dec
call
ja
pushf
rorb
xchg
neg
js
test
xor
cwtl
popa
and
inc
mov
push
dec
ret
pop
adc
setle
loope
mov
imul
repz
fadds
pop
or
test
push
fistps
sahf
in
mov
pop
sub
or
cmc
inc
add
std
add
js
add
enter
scas
dec
in
and
add
mov
aas
push
cmp
mov
cmp
lds
cmp
dec
and
or
cmp
rol
xchg
sbb
outsb
addr16
iret
cmp
and
lods
pop
or
addr16
push
pop
ret
pop
pop
aaa
ret
cmpsl
inc
pop
xor
imul
push
and
lea
mov
rol
ficoms
and
in
dec
push
mov
and
xchg
sbb
push
sti
adc
jl
lea
imul
andl
stos
shrb
pushf
jb
xor
es
bound
aas
es
repnz
add
adc
or
inc
pop
clc
lret
cs
fdivs
popa
fiadds
pop
pop
xlat
jle
push
mov
dec
jo
fdivrs
mov
sbb
mov
aaa
outsl
popa
jae
jno
ret
xchg
in
js
stos
push
andb
insb
sahf
jl
adc
leave
lret
xor
test
push
or
cmpsb
push
cmc
or
sub
add
adc
lea
dec
dec
aas
push
in
or
cmp
mov
inc
sub
lock
or
and
ret
push
add
sub
pop
leave
ds
jge
ja
loope
pop
rcrb
dec
test
out
and
lock
mov
pop
scas
adc
es
mov
imul
mov
dec
add
js
add
jno
repnz
mov
not
add
fucomi
je
sbb
cmp
jb
xor
inc
out
push
push
sub
sub
jns
mov
push
inc
repz
pop
loope
daa
push
mov
jbe
scas
or
jge
mov
push
dec
clc
push
mov
lea
dec
push
add
movsl
imul
loope
inc
cmp
push
inc
and
mov
loope
adc
pop
insb
inc
mov
js
mov
mov
arpl
arpl
rcrb
inc
shrb
dec
out
pop
mov
jo
inc
cmpsb
in
jno
pop
pop
push
jnp
test
sahf
out
dec
inc
mov
xchg
mov
aad
pop
hlt
rorb
jno
lea
fs
push
popa
pop
stc
inc
mov
out
fs
inc
or
jo
test
dec
stc
cmp
dec
in
enter
push
xor
xor
or
cli
insb
lea
loop
outsl
nop
adc
mov
pop
pusha
in
dec
loopne
mov
imul
mov
rolb
mov
xor
lods
pop
jg
outsb
cmp
je
scas
cs
jp
cmpsb
test
pop
inc
push
dec
pushf
inc
xchg
pop
push
push
xor
push
mov
mov
xor
inc
pop
arpl
imul
sbb
jnp
sub
arpl
subb
jb
daa
mov
nop
dec
jno
pop
loopne
arpl
arpl
data16
push
scas
outsl
aaa
in
dec
scas
jmp
sbb
add
sub
jp
movsl
leave
jo
jae
je
push
and
add
and
adc
int
xor
dec
jae
adc
mov
push
rclb
push
mov
in
xchg
aas
shlb
lock
inc
gs
test
push
xchg
fsubrl
or
mul
je
push
repnz
andb
jge
addr16
lea
ret
sbb
dec
lret
xchg
cmp
mov
jbe
dec
cmpb
into
gs
hlt
jp
imul
cmpb
jae
and
sbb
icebp
cmpsl
aaa
inc
gs
mov
mov
dec
gs
iret
ret
les
or
insb
callw
lds
gs
jnp
add
mov
sub
insb
mov
xor
sbb
rcrb
xchg
sbb
inc
movsb
cmp
jae
xor
jno
lods
xor
dec
inc
pop
adcl
insl
add
sub
dec
imul
cmp
sub
sub
add
inc
imul
jo
popa
lea
test
out
in
cmp
bound
imul
inc
sub
xor
inc
insl
xchg
cltd
xor
outsb
pop
xchg
or
xlat
add
xchg
pop
loop
loope
add
add
nop
jmp
mov
jl
ret
out
or
push
out
sahf
std
mov
xchg
mov
rcrb
in
cmc
les
push
test
rol
sbb
call
ret
and
pop
rolb
insl
movb
push
inc
arpl
inc
lcall
sbb
push
xor
push
sub
int
sbb
imul
cmpb
xchg
dec
push
cmc
xchg
jg
adc
inc
mov
dec
push
jbe
jae
movsl
or
xor
out
pop
data16
stc
clc
fisubl
mov
cmpsb
mov
pop
jno
dec
and
and
lahf
dec
dec
cld
dec
mov
pop
ret
std
nop
cmc
push
gs
stc
scas
addl
jge
push
ljmp
mov
imul
loopne
xchg
add
dec
mov
out
test
mov
cmp
stc
push
mov
pusha
pop
and
push
scas
jmp
and
cmp
add
mov
adc
test
adc
jp
sbb
test
jno
andb
movsl
enter
movsb
mov
and
shlb
lahf
fnsave
je
daa
call
stos
out
inc
sub
xor
push
cmc
lret
add
les
and
in
add
sub
clc
scas
dec
cwtl
mov
mov
imul
iret
jo
dec
imull
sti
and
sbb
xchg
adc
dec
cld
out
pop
mov
jb
pop
lea
push
xchg
insl
popf
mov
xor
ror
insb
lods
pop
lods
lcall
cmp
xor
dec
cmp
clc
jecxz
gs
dec
mov
and
mov
add
pop
sbb
xor
stos
insb
test
sbb
repnz
jo
pop
xchg
test
jno
dec
mov
mov
pop
or
sub
rol
mov
jmp
push
ds
shld
test
xlat
out
imul
xchg
mov
testl
popf
add
fildl
push
push
scas
out
in
inc
push
add
fdivl
xor
hlt
mov
mov
adc
mov
adc
popf
cmc
gs
cltd
sub
inc
popa
scas
dec
outsl
jo
push
sub
into
fs
push
imul
sbb
dec
rep
mov
cmc
movsl
mov
fnsave
pusha
roll
jno
mov
mov
add
js
aad
jl
enter
and
out
xchg
dec
mov
arpl
mov
fsubs
or
jl
dec
fstl
cmp
sbb
add
cmp
scas
std
cwtl
mov
js
mov
push
je
sti
push
inc
aaa
popa
insl
jecxz
cmp
lea
pushf
sbb
adc
lea
lahf
das
xor
leave
xor
dec
jp
pusha
sub
out
jge
jge
loope
push
bound
pop
dec
sub
and
insl
std
xchg
je
cli
shlb
push
lcall
stos
dec
in
xor
popf
pusha
push
insl
fs
test
mov
jno
mov
ja
divb
cmpsl
data16
mov
and
loopne
mov
xor
testl
dec
xlat
lock
push
stos
negl
mov
imul
mov
xchg
pop
cld
notl
aaa
idiv
lcall
int3
add
cmc
addr16
aaa
int3
add
fs
sub
lods
ja
jnp
pushf
add
jnp
xchg
push
xorps
gs
movsl
imul
ljmp
outsl
nop
jle
push
sahf
lea
add
lods
xchg
push
pop
popa
pop
lret
subl
jnp
jle
cmc
subb
inc
into
jns
andb
sarl
cmpb
and
imul
fdivs
dec
cmp
push
movsl
and
add
push
inc
inc
and
cmc
jno
push
push
in
mov
js
fiaddl
add
aas
dec
push
insl
bound
xor
sub
insl
movsl
dec
sahf
cmp
popa
sub
mov
push
fstps
push
loope
aaa
rclb
sbb
loop
pop
mov
lock
pushf
xor
sub
inc
dec
cmpsb
or
movsl
and
mov
mov
lret
cmp
lea
sbb
dec
in
jle
loopne
subb
fadd
sub
jo
loopne
imul
adc
or
pop
mov
cs
mov
mov
movsb
std
sub
xchg
imul
xor
sbb
popa
in
loop
push
and
inc
xor
std
daa
mov
shll
int
loop
jns
sbb
addr16
xchg
or
xor
test
mov
test
and
jl
leave
jmp
cmp
jg
int
in
repz
out
push
mov
xchg
dec
jg
sub
jbe
add
lret
xlat
or
push
in
xor
push
popa
sub
mov
inc
mov
gs
inc
cld
mov
aas
jl
pop
mov
pop
popf
mov
insl
inc
and
jnp
dec
xorl
and
in
or
andl
mov
stos
xor
test
and
mov
lret
or
insl
push
jp
inc
imul
sub
popf
sub
jb
stc
insb
test
add
mulb
fdivs
popf
cmpb
jne
sbb
daa
iret
in
pop
pop
mov
in
xor
cld
add
leave
dec
fadds
or
sbb
push
aaa
popa
lea
cmp
call
dec
xchg
inc
xorl
inc
mov
repz
push
sub
mov
push
mov
hlt
inc
add
data16
sbb
mov
lret
xchg
call
loopne
cmp
data16
icebp
in
pop
push
cmp
push
cmp
lods
out
mov
imul
in
cltd
pop
xor
inc
mov
aaa
push
pushf
xor
push
mov
xchg
inc
mov
and
aam
sahf
xchg
in
cmp
pop
clc
mov
add
push
bound
jae
inc
iret
jmp
jno
int
cmp
xlat
pop
cli
pushf
mov
std
ss
mov
dec
lea
fildl
cmp
jb
xchg
jno
loopne
sbbb
sub
adc
pop
adc
add
adc
loope
mov
xchg
aad
mov
fldl2t
out
and
xor
jbe
rcrb
fidivl
mov
dec
test
out
mov
stc
jle
in
faddl
pop
mov
das
xorl
pop
lods
pop
pop
pop
outsl
push
outsl
add
gs
dec
cmc
mov
dec
mov
clc
icebp
adc
nop
and
sub
lea
add
movsb
sub
inc
jmp
in
enter
data16
mov
fdivrl
sbb
imul
sub
dec
xor
mov
jae
divl
sbb
movsb
dec
out
stos
ljmp
mov
xchg
gs
punpckhwd
sbbb
jbe
shlb
popf
mov
shl
jo
mov
data16
popa
dec
and
fbld
or
push
stc
push
dec
push
lods
movsb
in
cltd
sti
movsb
sarl
sub
orl
sub
jge
fildll
mov
cs
stc
dec
jb
repz
scas
dec
mov
xor
pop
jno
insb
jns
jp
das
ja
sub
xchg
dec
jmp
ja
cmpsb
mov
fsubl
mov
xor
insl
push
js
aas
gs
outsl
dec
test
lcall
nop
push
sbbb
adc
push
dec
iret
pop
inc
jge
mov
xchg
push
xchg
test
dec
ja
sub
add
addr16
scas
cmc
sete
hlt
dec
jno
rep
ja
add
bound
in
stc
scas
adc
nop
mov
adc
lock
jb
call
jecxz
in
in
sti
loop
fldenv
int
icebp
mov
hlt
push
leave
ret
fwait
sub
cltd
rclb
fsubrl
jg,pn
je
ljmp
jp
dec
pop
xor
ja
push
scas
sbb
idivb
mov
cmpsl
shll
daa
cmpsb
bound
bound
xchg
in
dec
imul
in
xor
jb
dec
xchg
cmpsl
insl
popa
xor
cmpsl
add
and
testl
inc
cltd
repnz
dec
jp
fcomps
mov
arpl
push
cmp
pop
repz
add
cvttps2pi
xchg
shrd
scas
jno
push
out
lret
sub
arpl
jecxz
gs
outsb
data16
mov
cmp
out
push
mov
clc
or
add
jb
and
aam
lea
fdivrl
and
pop
mov
gs
inc
xor
push
push
mov
movsb
in
cmp
sti
fcoms
mov
dec
pop
iret
sbb
adc
lock
and
sbb
xchg
call
fistpll
bound
pop
lret
mov
dec
dec
insb
jle
test
cmc
inc
sbb
jno
jb
sub
inc
js
add
das
lcall
inc
notb
fiadds
daa
or
scas
cld
ljmp
adc
clc
cli
mov
adc
pop
jae
jae
push
and
es
inc
xlat
jae
icebp
sbb
pop
push
js
fsubrl
and
shll
or
pop
push
fisttps
jnp
aad
cld
sub
lret
neg
jle
xor
push
lea
je
mov
xor
and
mov
mov
add
dec
sbb
mov
xor
and
stc
dec
arpl
dec
adc
push
cmp
imul
or
ja
add
jp
aam
mov
add
xchg
rcrb
and
xor
jae
jno
jne
scas
xor
jnp
lods
outsl
cmp
adc
nop
lahf
frstor
outsl
sub
pushw
pop
xchg
mov
mov
pop
and
or
loopne
icebp
mov
mov
push
out
mov
mov
mov
mov
pop
sbb
shl
dec
cmpsl
in
push
addr16
or
cmp
sbb
in
adc
xor
jmp
inc
sbb
xor
xlat
adc
inc
dec
in
int
push
fsubr
in
lods
loopne
lds
jo
in
inc
in
insl
lret
or
sbb
adc
sbb
cmp
mov
jmp
lea
insl
pop
cs
sti
out
rcrl
mov
jnp
sub
fwait
sub
or
scas
cmpsl
and
movsl
xchg
je
icebp
mov
gs
cwtl
pop
cwtl
xchg
lcall
pop
insl
pop
cld
dec
repz
outsl
add
mov
jmp
cmpsb
outsl
loope
add
repz
sbb
dec
gs
lds
inc
and
lahf
lahf
mov
xchg
sub
shrl
imul
movsl
push
popa
inc
sbb
jmp
xchg
xor
sub
dec
sub
fcoms
push
inc
loope
hlt
mov
adc
insb
sub
insb
js
movsl
pop
rcll
pop
dec
pop
gs
push
pop
pop
add
lods
mov
jle
stc
ficoms
cmp
and
hlt
and
in
loopne
push
lock
mov
imul
push
jne
mov
and
imul
xor
in
add
insb
cmc
ss
add
test
rclb
sbb
in
inc
pop
popa
xor
movsb
push
add
out
or
movsb
push
pop
dec
cmpsb
sbb
js
clc
dec
cmpsb
pop
pop
dec
insl
mov
jb
mov
imul
repnz
mov
rclb
gs
dec
xor
std
std
sub
cmp
fiadds
xchg
sub
and
push
test
fwait
pop
stc
shrb
fwait
xor
xor
push
mov
push
hlt
inc
mov
scas
mov
jge
xor
mov
into
jbe
ss
movsl
dec
sbb
icebp
jb
push
push
adc
mov
and
lea
mov
xchg
insb
insb
jle
cmc
sub
sbb
addr16
mov
lea
xchg
pop
mov
das
pop
fimuls
jnp
into
sub
scas
mov
inc
outsb
pop
cmp
movsl
pop
cli
jg
xchg
xor
jmp
lret
jo
scas
add
xor
in
cld
add
mov
push
mov
pop
add
test
mov
loop
aaa
shrb
adc
lcall
lahf
lods
sub
sahf
shlb
adc
push
cmpxchg
in
mov
pop
push
ret
and
cmp
push
adc
add
xchg
cld
mov
pop
pop
xchg
in
inc
mov
dec
negb
int3
add
and
add
jp
test
xchg
pop
and
sub
gs
and
nop
clc
xlat
adc
inc
imul
pop
xor
mov
faddl
pop
lods
insl
in
cli
in
addr16
jno
repz
lock
jnp
adc
aaa
int
loopne
insb
cmp
insl
push
inc
dec
mov
imul
daa
adc
mov
mov
in
sbb
push
jle
outsl
out
mov
addr16
cmp
jno
test
inc
lods
pop
and
in
popa
jo
cmp
fnsave
repz
inc
mov
push
dec
mov
mov
xlat
lds
push
int
call
dec
jmp
and
pop
jae
xor
insl
cmc
imul
jl
popa
out
pop
adc
add
sub
pusha
push
dec
jbe
jae
arpl
fisttpll
push
push
int
gs
jno
lods
insb
repz
ljmp
insb
hlt
inc
mov
pusha
inc
add
mov
call
clc
mov
and
popa
push
imul
adc
cmp
xlat
fnstenv
shll
fs
dec
sub
adc
pusha
sub
jbe
out
lods
fcompl
push
mov
adc
pop
xchg
jmp
aas
aam
jmp
lds
cwtl
rorl
repnz
hlt
xor
mov
arpl
fidivs
sbb
add
mov
int3
andb
rcrb
xchg
shll
jns
stos
and
shll
scas
aaa
dec
arpl
xchg
jo
jb
cmp
pusha
pop
insb
leave
outsb
movsb
jg
add
mov
movsl
dec
rcrb
je
adc
popa
push
mov
sbb
insb
adc
pop
mov
clc
xor
lods
clc
mov
mov
jno
jns
jno
outsl
insl
jno
ljmp
add
in
fdivs
jno
movsb
insb
dec
mov
pop
fdivp
je
int
sbb
add
lock
mov
in
jo,pn
pop
mov
test
test
in
in
imull
fisubs
pop
cli
xchg
cmp
stos
dec
xor
outsl
scas
inc
xor
addr16
insl
mov
pop
outsb
lods
hlt
xchg
test
jl
add
inc
lds
mov
das
clc
fadds
mov
cli
nop
xor
xor
push
out
push
and
ror
addr16
jge
out
arpl
push
popf
adc
inc
das
imul
or
leave
xor
bound
lods
lea
ss
imul
fs
ljmp
lea
mov
cld
xchg
addr16
mov
cmp
and
lods
loope
mov
insb
jns
icebp
pop
lods
incb
pop
mov
adc
dec
stos
xor
pop
push
push
shrl
shr
lret
cmp
ret
lods
cs
mov
scas
hlt
divl
inc
add
jecxz
sbb
imul
out
sub
jecxz
imul
test
ds
popf
sub
push
daa
pop
fnsave
push
dec
push
sub
test
es
aas
notl
movsb
sub
ds
int
inc
in
imul
push
lret
push
jg
push
icebp
testl
push
push
pop
xor
test
dec
nop
ljmp
xchg
testl
add
sbb
inc
inc
pop
test
or
xor
xchg
sub
lods
nop
push
lods
mov
push
add
dec
in
xor
or
imul
cmp
and
insl
iret
add
scas
xor
lahf
out
jb
jge
test
or
cmp
imul
dec
iret
mov
sub
inc
sbb
inc
add
fs
or
lahf
jns
cmc
mov
icebp
mov
hlt
outsb
popf
mov
jle
inc
push
sub
hlt
mov
imul
add
lret
jl
scas
push
push
or
sub
outsl
loop
jo
push
push
mov
mov
cmp
vpxor
jo
pop
xor
sub
dec
scas
xor
mov
pop
push
mov
mov
js
mov
add
fcompp
popa
mov
xor
adc
xor
popa
pop
cmp
cmp
xor
imul
out
jae
je,pn
push
leave
jmp
dec
push
sub
push
into
dec
sbb
cmp
jb
xor
inc
or
inc
mov
jb
jmp
mov
xrelease
popf
sbb
jmp
jp
cli
add
push
xchg
pop
les
mov
lea
pop
sbb
arpl
cld
or
adc
push
jmp
insb
xor
or
or
lods
out
dec
xor
jmp
pushf
cmc
and
sub
sub
cmpsb
fidivs
push
fistl
and
sbb
outsb
lods
mov
xchg
jae
mov
inc
aaa
add
int3
pop
mov
rcrl
sub
sbb
fsubr
mov
adc
cmc
movsl
jae
popa
into
fdivr
shlb
loopne
xchg
int3
stc
sbb
push
push
and
or
inc
addl
addr16
cli
out
imul
sub
xor
call
test
xchg
dec
pop
mov
and
ret
insb
mov
stos
add
imul
in
jno
add
mov
sub
jle
ftst
add
repz
fildll
xor
dec
imul
sbb
sub
and
inc
in
sub
pushf
xor
divl
lea
jg
mov
jo
data16
jbe
pop
cmp
add
inc
or
pop
addr16
and
pop
add
stos
or
sbb
ja
inc
mov
test
pop
xchg
xor
repnz
icebp
decl
inc
mov
movsl
adc
loopne
and
callw
xchg
mov
iret
dec
bound
jge
mov
pop
enter
dec
push
mov
and
jno
mov
cmpsl
stc
mov
jae
scas
jmp
mov
dec
in
repz
adcl
or
add
jno
lds
and
jo
push
dec
stos
xchg
loop
in
dec
cmp
aam
xchg
fs
inc
cmp
pop
sub
in
arpl
push
inc
subb
daa
and
orl
and
jle
mov
jns
adc
int3
dec
adc
and
jno
stos
repnz
lret
push
cld
xor
push
xor
sub
jl
xor
pusha
add
repz
sahf
in
pop
pop
jno
clc
jae
cmpsl
addr16
cmc
sbb
scas
loop
cli
clc
push
in
lcall
clc
cmc
cmp
sub
mov
or
scas
in
add
and
xchg
pop
or
and
sub
sbb
pop
in
adc
cld
adc
cld
stos
ret
push
das
xor
jge
bound
pop
in
sti
cmpb
jbe
aad
mov
push
test
sbb
xchg
inc
sbb
jl
outsb
imul
int3
sbb
lea
cld
insl
sub
mov
jle
push
movsb
mov
leavew
add
imul
sbb
rorb
push
jns
and
xchg
ljmp
jmp
inc
gs
insb
sbb
lret
test
lea
push
jp
lods
pop
sbb
sbb
and
aaa
jb
pop
pop
repnz
lahf
mov
push
jo
jns
je
jmp
sub
mov
popa
insl
mov
imul
imul
fwait
arpl
and
or
pop
leave
cmp
or
aas
push
call
icebp
insb
xor
ljmp
jno
cltd
insl
lea
jp
push
sahf
inc
adc
pop
sbb
aam
jmp
lret
in
push
xchg
sub
inc
sbb
movsl
and
into
icebp
sbb
test
hlt
cli
imul
mov
ljmp
stos
xor
cmpsl
push
push
rcl
pop
cmp
test
adc
mov
leave
repz
imul
add
jb
lret
in
sbb
xor
test
sti
lock
ret
and
mov
or
test
jnp
sarb
pop
or
cmp
xchg
inc
icebp
mov
pop
movsb
cwtl
sti
jl
sbb
mov
nop
leave
insl
rclb
mov
idivl
rol
mov
push
mov
inc
clc
cmpsl
pusha
bound
in
jp
es
or
mov
dec
add
push
lea
fists
mov
lahf
cld
hlt
or
add
pop
mov
je
jb
jmp
mov
es
mov
inc
out
inc
or
sbb
inc
int3
icebp
pop
lret
mov
fdivrp
clc
arpl
aad
movsb
shl
popa
stos
sub
das
lret
push
test
mov
lea
or
jnp
mov
xor
fldcw
subb
and
push
int
sbb
addl
mov
cmp
into
imul
jo
out
repnz
ret
movsl
repz
nop
jb
lahf
mov
bound
sahf
xchg
pushf
xchg
cs
enter
add
lea
cmpsl
flds
sub
lds
int3
cld
test
inc
iret
pop
ljmp
je
loopne
test
inc
stos
mov
mov
or
pop
addr16
and
lock
xor
inc
mov
loop
sbb
push
lcall
lods
nop
iret
add
dec
add
pop
shr
ret
or
push
cmp
add
cmc
jbe
je
dec
cmpsb
or
stos
add
repz
aam
sub
pop
pop
pop
sub
push
in
push
icebp
into
sbb
lea
cld
push
das
adc
fisubl
fbld
repz
cld
lods
pusha
and
adc
pop
imulb
mov
fbstp
lods
in
jmp
cmp
nop
ja
pop
insl
add
bound
hlt
push
inc
jo
or
pop
adc
rolb
sbb
and
mov
fbstp
cmp
out
push
clc
loope
cmp
sub
pop
cmp
repnz
cmp
lock
insl
test
sub
cmp
xchg
sub
dec
rcll
xor
pop
jae
cmp
and
das
and
shrl
notb
dec
dec
xor
dec
ljmp
jge
and
sub
jl
inc
fcmovnbe
adc
rcrl
ljmp
hlt
or
mov
adc
jno
lock
ds
dec
jge
sbb
jae
inc
sbb
ljmp
mov
ds
cmp
xchg
push
arpl
notb
jmp
cmp
dec
subl
imul
daa
outsl
inc
mov
fcmovnb
jg
cltd
inc
sbb
adc
in
and
mov
xchg
jo
shlb
mov
pop
push
dec
sbb
movsb
aaa
push
fldcw
inc
shll
arpl
cmc
xor
inc
lods
cmp
scas
fadds
loope
dec
fwait
add
mov
cld
dec
push
lods
lcall
dec
test
sahf
jo
arpl
out
mov
pop
repnz
shlb
jge
sbb
movsb
mov
std
bound
enter
adc
sbb
xor
sub
lret
pop
xlat
leave
mov
or
jbe
stos
push
adcl
insb
inc
sub
lea
pop
mov
aam
fildll
arpl
icebp
mov
or
loop
cmpsb
clc
test
divb
sahf
repz
jmp
or
jp
ja
mov
push
mov
sub
stc
pushl
fldt
sub
and
mov
adc
jae
lahf
fistps
mul
cmp
out
fwait
movsl
inc
ss
sub
push
push
shll
out
mov
andl
xsaveopt
popa
arpl
mov
mov
mov
movsb
inc
shlb
inc
dec
add
arpl
insl
in
arpl
mov
jae
jno
cmp
call
dec
add
mov
or
jle
inc
and
push
popf
xor
inc
and
lods
pop
pop
repz
pop
outsl
les
xor
bound
pop
push
and
sub
cld
repnz
and
and
add
adc
lret
pushl
test
lcall
pop
dec
les
dec
dec
popa
mov
xchg
inc
es
stc
dec
hlt
clc
adc
push
subb
gs
das
fbstp
xorb
cmp
loop
pop
lock
in
add
ljmp
and
lea
mov
dec
int
cmp
fidivl
jno
push
or
dec
cmp
divb
stos
pop
sub
pop
inc
lods
or
nop
sub
daa
sti
imulb
sub
enter
push
push
dec
mov
adc
push
inc
inc
stc
push
sub
iret
dec
mov
sahf
stos
push
jo
outsb
arpl
and
in
rorb
mov
mov
cs
lea
lock
sahf
ret
scas
adc
xor
insb
xor
pusha
in
inc
push
sbb
lods
stc
adc
and
sti
push
shl
stc
daa
and
pop
adc
xchg
insl
pop
push
pop
sub
mov
pop
pop
call
sbb
xor
ss
in
icebp
push
pop
decl
sti
stc
sub
pop
adc
xchg
adc
inc
sbb
insb
stc
repz
popa
push
add
lods
std
movhps
jns
dec
xor
ljmp
adc
mov
xor
mov
pop
xor
pop
sahf
dec
outsl
pop
and
lea
inc
jl
jo
cli
in
inc
and
scas
inc
inc
je
mov
pop
push
pop
fbld
sub
push
dec
mov
fisubrs
dec
imul
fbld
xchg
mov
lods
call
and
ja
pop
push
imul
ljmp
inc
pop
imul
mov
ja
and
add
mov
adc
inc
push
popa
into
xor
mov
adc
popa
mov
mov
orb
cmp
pop
jmp
ja
shlb
sbb
push
push
lods
gs
inc
adc
sbb
jno
stc
and
or
pop
pop
scas
cmp
jmp
in
orl
data16
sub
insb
arpl
insb
and
pop
in
adc
daa
sbb
je
roll
adc
adc
lds
sarl
pop
fbld
xchg
cmp
and
icebp
cltd
stos
jbe
cmp
xor
sbb
mov
pop
push
and
adc
cs
shrl
add
dec
add
cld
out
push
test
andl
mov
and
int
jno
andl
in
cs
mov
pusha
and
lahf
inc
aam
movb
in
cmc
lea
enter
push
lods
test
adc
lret
jno
in
xor
ljmp
mov
xor
lahf
rolb
dec
sub
test
push
dec
and
cmp
sbb
push
xor
xchg
xor
lea
cmp
pop
out
repnz
lea
inc
sbb
sub
lods
sub
add
push
push
push
jae
add
add
lods
icebp
push
xchg
gs
sub
jmp
push
jo
gs
xor
sub
push
jbe
sbb
loopne
jno
cmp
test
sbb
sub
jae
jmp
scas
hlt
lds
xchg
cmp
push
scas
push
idivl
scas
outsl
into
icebp
sub
inc
or
dec
jno
xlat
add
outsl
jl
xor
insb
or
in
sub
adcb
xor
lods
leave
xor
and
movsl
adc
sub
in
out
stos
xchg
dec
insb
popa
jbe
imul
jmp
std
adc
cltd
movsb
or
sbb
add
roll
sar
and
mov
adc
and
adc
mov
push
ret
popf
push
xor
jmp
mov
jmp
or
inc
sbb
cmc
mov
adcl
out
xchg
and
jbe
loope
outsl
sub
mov
pushf
out
mov
call
pop
jae
lods
xor
jb,pn
lock
sbb
mov
or
fs
or
cmp
imul
dec
or
pop
test
imul
in
and
mov
nop
jp
add
jo
mov
pop
shr
iret
loopne
insb
adc
inc
mov
push
mov
scas
push
insb
jo
pop
push
insb
sub
sub
mov
shlb
ret
je
fadd
imul
mov
stos
dec
rcl
pop
add
js
icebp
pop
adc
popf
push
dec
add
repnz
jmp
mov
call
dec
sti
cmpsb
add
xlat
les
sub
mov
fstpl
inc
imul
dec
js
out
push
adc
cltd
and
dec
lods
ds
leave
lcall
pop
cmp
push
pop
xor
push
adc
ss
aad
jno
orb
push
imul
mov
cmp
movsl
or
push
mov
jp
mov
fildll
pop
push
jge
sub
stc
jo
or
pop
mov
add
jmp
and
dec
leave
pushf
xor
pusha
xor
rolb
insb
xchg
jb
lds
popa
dec
lods
sub
in
roll
lods
shl
ss
sbb
xor
cmc
jbe
xor
and
loop
add
insl
cmp
lret
push
mov
jbe
mov
fcompl
fdivr
in
push
jb
cmpsl
mov
test
push
xor
leave
imul
arpl
test
insb
mov
ja
lods
inc
sbb
gs
test
je
jecxz
cld
aas
in
pop
loop
js
dec
ret
cmp
adc
adc
clc
ds
sub
pop
xchg
jecxz
addr16
jbe
clc
lret
bound
push
xor
sarb
and
jnp
xor
pop
push
xchg
addr16
pop
and
out
cltd
mov
aas
imul
dec
pop
lea
push
hlt
data16
jecxz
fbstp
mov
mov
in
adc
ja
xchg
xor
xchg
cmc
sub
xlat
xchg
xor
out
popa
mov
push
jae
bound
and
inc
push
adc
xor
lea
xchg
hlt
xchg
pop
push
dec
gs
lock
pop
jns
dec
test
or
je
fstps
das
inc
xchg
pop
in
mov
cld
push
xchg
add
imul
push
mov
insb
imul
in
push
inc
dec
push
cmpsb
mov
aad
jmp
imul
inc
in
sub
pop
out
lret
cmp
call
clc
pop
push
je
cltd
ja
popa
pop
add
or
in
lea
pop
arpl
push
into
or
imul
dec
ljmp
mov
in
push
pop
test
push
or
jp
out
test
ja
hlt
and
shlb
imul
xchg
mov
sub
ss
push
mov
cmp
dec
and
add
insl
jbe
insb
sahf
jmp
rorl
insb
pop
jecxz
add
adcb
iret
shll
or
stos
enter
inc
je
and
imul
dec
or
dec
ja
xchg
mov
and
dec
andps
and
xchg
loop
fdivs
std
stos
push
add
test
pop
fdivrs
or
stos
lea
push
js
imul
nop
mov
mov
filds
dec
sbb
mov
push
lea
jl
sbb
inc
mov
mov
negb
push
jno
sub
xor
lock
sbb
jno
clc
inc
test
in
cld
rcl
jl
and
mov
faddl
adc
into
andl
add
pop
and
xchg
loopne
sti
sub
sbb
sbb
dec
repnz
push
push
dec
cltd
and
jmp
dec
inc
xor
jl
shll
cld
xchg
push
sub
mov
adc
adc
fbld
pop
dec
stc
xlat
pop
jbe
call
stc
jge
out
pop
xor
and
or
inc
imull
add
jecxz
xor
push
xchg
mov
bound
lea
cld
sbb
push
jae
call
ss
sbb
insl
mov
cmc
jl
and
pop
dec
aaa
pop
jmp
stos
clc
inc
loopne
pushf
stos
movsb
push
int
pop
sub
popa
fldt
aas
mov
and
idivl
mov
and
adc
lea
adc
jmp
ja
pop
lock
inc
jo
insl
in
mov
dec
pop
imul
and
xor
popf
scas
cmp
and
adc
out
cltd
fnstcw
and
sub
xchg
push
ficoml
dec
mov
mov
pop
in
je
cmp
outsl
jae
dec
jle
loopne
out
insb
fmuls
add
test
fabs
movsb
pop
lea
xor
mull
sbbb
push
mov
test
stos
gs
jle
jl
int
push
and
xchg
insb
fidivrs
pop
sub
test
pop
mov
and
cltd
push
in
push
shr
popa
mov
dec
mov
adc
cmp
lods
push
scas
je
sub
ljmp
or
pop
imul
insb
lea
mov
sub
popa
dec
test
pop
or
ja
dec
loope
jae
mov
or
mov
mov
and
inc
shrl
push
cltd
fbld
push
out
arpl
lret
fwait
pop
idivl
addr16
jecxz
push
dec
jl
fmulp
cmp
filds
pop
cli
xlat
adc
popa
adc
data16
sbb
mov
mov
lret
imul
cmp
ss
jo
xchg
jle
inc
jno
aas
cmovg
movsl
sbb
outsb
mov
xor
jno
data16
rcrl
sbb
sti
sub
outsl
in
jo
lret
jno
je
jo
sbb
test
push
orb
repz
pop
jb
add
push
call
or
xorl
add
push
sbb
xor
and
out
pop
mov
and
dec
sub
popa
and
push
mov
jo
lea
sub
lea
in
mov
das
pop
push
fdivl
out
jno
aad
push
pop
insl
lea
pop
popa
gs
hlt
cld
ljmp
or
out
jno
lea
push
jae
push
fiaddl
popa
xor
popa
gs
xchg
imul
fs
lea
add
outsb
cmp
lods
je
lea
mov
in
and
test
shr
add
in
fstps
jae
shl
pop
inc
mov
scas
pop
inc
xor
mov
sbb
lock
clc
sub
adc
lahf
inc
add
es
gs
lock
jno
lea
dec
push
inc
insl
roll
insl
inc
lea
lea
and
dec
in
xchg
inc
and
jge
sub
jge
xchg
inc
int
mov
int
lea
xchg
int
lea
lea
xchg
aad
lea
xchg
rcll
rcll
sub
jge
xchg
imul
lea
push
xchg
gs
mov
je
push
push
fcoml
cld
push
lea
lea
lea
jno
xchg
stos
inc
jmp
jno
xchg
lcall
inc
arpl
or
imulb
fsubrl
mov
pusha
mov
xchg
pop
and
dec
mov
dec
sub
xor
inc
aad
mov
aad
dec
loope
loopne
jmp
inc
dec
cmc
out
in
mov
push
lock
repnz
xchg
ljmp
cvtps2pi
mov
rcrl
sub
adc
loopne
adc
sbb
xor
sbb
push
xchg
jb
punpcklbw
dec
shll
adc
inc
dec
or
gs
dec
leave
sbb
gs
pop
pop
lret
gs
cld
sbb
and
gs
punpcklbw
xchg
fs
mulb
xor
int3
xor
aaa
bswap
sub
cmp
xor
adc
mov
sub
fdivrl
mov
add
push
adc
adc
rclb
add
dec
roll
loop
leave
lcall
mov
nop
mov
push
sub
mov
xorb
enter
cld
pop
lea
imul
outsl
inc
push
xchg
or
call
imul
ret
dec
pop
popa
mov
adc
or
lea
sti
and
jbe
dec
jmp
adc
lods
lea
push
sbb
push
mov
cmp
je
xchg
mov
jecxz
xchg
and
push
push
jge
stos
pop
add
dec
scas
leave
push
mov
les
and
ret
cmp
inc
push
mov
cwtl
orl
adc
inc
mov
mov
pop
mov
push
jno
stc
sub
lods
pop
in
pop
je
lea
cs
or
or
xchg
adcb
push
or
mov
xor
lea
sbb
xchg
shrb
repz
and
push
ja
lock
pop
loop
arpl
fcoms
cmpb
mov
shrb
in
and
mov
outsl
je
addr16
repz
xchg
mov
popf
xor
ret
jno
cmp
lret
sub
xor
xor
jo
add
xor
adc
sbb
repnz
je
das
aad
inc
aam
fistl
inc
and
mov
push
inc
jg
popa
xchg
cmp
pop
xchg
daa
pop
lret
pushf
or
add
sar
insb
and
push
adc
adc
adc
sbb
std
es
or
push
aam
push
jmp
test
or
rcrl
shl
mov
ficompl
loop
movsb
and
lret
mov
adc
dec
imul
fisubrl
inc
push
popf
pop
mov
dec
lret
adc
mov
stos
aaa
imull
and
sbb
pop
ret
xchg
andb
in
sub
lret
loop
aam
fwait
pop
pusha
into
or
xor
push
fs
test
push
gs
sbb
jmp
scas
rorb
popa
js
xchg
push
popa
pop
or
addr16
mov
jle
adc
stos
loope
adc
test
loop
lea
test
xchg
jg
cmp
mov
ss
xor
aaa
test
clc
adc
loope
lea
sub
loopne
cld
cli
adc
imul
cld
add
fs
or
jp
ja
lods
pusha
pop
jo
adc
cmp
mov
xchg
or
fwait
sbb
pusha
popa
or
in
dec
lea
xor
jne
repz
inc
sbb
xor
ja
cmp
pop
outsl
leave
imull
dec
gs
pop
iret
mov
jnp
cmp
adc
dec
mov
jbe
mov
push
or
dec
cmp
mov
jae
pop
cmp
sbb
jnp
dec
xor
out
stos
movsl
inc
sbb
and
orb
mov
outsb
mov
nop
mov
mov
mov
pushl
cs
sbb
cld
popa
fdivl
inc
imul
pusha
mov
pusha
cmp
inc
cmp
ljmp
movb
push
movsb
cmpsl
dec
cmpsb
rolb
mov
sbb
sub
xor
mov
lret
mov
jae
das
inc
sub
add
pop
inc
inc
lods
sub
lods
daa
data16
push
insl
mov
sbb
repz
pop
xlat
push
sub
xchg
fidivs
sbb
fdivrs
mov
cmp
repnz
mov
dec
jp
stc
or
sub
jmp
in
dec
sub
xor
xchg
aad
jmp
popf
sbb
jb
or
int3
jae
cmp
mov
xor
jbe
add
jae
divb
icebp
lcall
add
and
sub
and
dec
movsb
scas
ljmp
jno
mov
movsb
fcoms
push
xchg
imul
sbb
sub
sti
sub
notl
jae
xor
sbbl
mov
xor
bound
and
xchg
or
jo
je
inc
jmp
test
sbb
arpl
popa
rorl
daa
or
mov
icebp
add
stos
push
popa
jno
jno
lods
imul
gs
scas
push
cmc
xchg
pop
dec
dec
les
daa
insl
mov
pushf
iret
loopne
out
ja
in
inc
inc
sahf
and
imul
dec
in
cmp
pop
fsts
shll
lock
pushf
xchg
icebp
mov
pusha
pop
ss
xchg
fs
stc
mull
push
repz
test
xor
sbb
out
pop
jne
mull
lea
cmp
add
add
in
jle
iret
or
push
mov
fidivrs
lods
stos
cmp
pop
lock
add
and
mov
addr16
fisubrl
mov
mov
popf
sub
inc
loope
gs
clc
mov
insl
lea
cmp
sbb
arpl
out
xor
into
and
pop
lahf
mov
sti
shrl
aad
pushf
add
xor
jle
inc
xor
add
jg
push
nop
es
sti
insl
outsl
jmp
push
or
add
enter
ficoml
aaa
mov
imul
push
push
or
orb
xor
or
xchg
fwait
ds
sub
inc
mov
pop
rorl
add
cmp
mov
cmpl
jno
push
ljmp
jbe
bound
outsl
lea
bound
ja
inc
ja
inc
dec
clc
nop
sub
mov
pushf
cs
mov
mov
adc
sbb
popf
mov
hlt
xchg
aam
or
mov
adc
xchg
push
cmp
scas
jb
fsubs
mov
cmpsl
call
mull
lods
xchg
scas
sbb
cwtl
js
lea
cmp
and
popa
adc
add
pop
jo
leave
dec
imul
pop
insb
jge
dec
mov
sub
pop
bound
imul
pop
pop
cmp
inc
jp
adc
inc
imul
pop
ljmp
cmpsb
addr16
shrl
mov
xor
sbb
je
clc
arpl
lea
push
outsl
and
push
stc
pop
inc
jns
cltd
jbe
and
cmp
popa
jp
int
and
mov
jl
jg
mov
fs
cmp
sub
decb
insl
imul
es
pop
mov
mov
xchg
xor
cli
push
xor
out
idiv
shll
adc
pop
xchg
cmc
mov
inc
mov
addr16
cmpsl
dec
mov
and
out
jecxz
fxam
jb
adc
jne
sbb
and
js
pop
insl
cld
cmp
cmp
das
sbb
pop
mov
lret
cmpl
mov
outsl
in
imul
sbb
scas
cmp
mov
jns
mov
xor
lea
scas
pop
dec
dec
imul
cmp
mov
cmp
pop
sub
and
inc
insb
lea
jb
popf
sub
jb
add
pop
add
aam
pop
bound
xor
ljmp
in
je
iret
push
outsl
and
shll
pop
jae
mov
push
fs
sub
inc
and
mov
xor
jmp
jnp
fwait
lock
add
hlt
hlt
lea
mov
dec
mov
gs
inc
loopne
mov
push
lcall
leave
mov
je
jb
or
sbb
hlt
mov
jecxz
pop
mov
test
insb
xchg
inc
movsl
loop
mov
aam
dec
cmp
xchg
mov
cmpsb
outsl
outsl
cmp
add
mov
dec
xchg
mov
cli
cli
inc
std
inc
js
add
out
pop
gs
sub
dec
adc
push
icebp
pop
mov
pop
and
adc
xchg
mov
out
daa
pslld
push
sti
xor
repnz
out
sub
pop
insb
lea
and
dec
jle
int
pop
bound
jnp
xor
push
jle,pn
add
imul
insb
fdivr
packsswb
test
and
mov
xor
dec
stc
lds
das
popa
je
push
push
mov
dec
lock
pop
scas
insl
popa
push
mov
xor
dec
cmp
clc
pushf
scas
outsb
arpl
pop
jno
shll
dec
and
add
jb
cmpsb
mov
mov
cld
aaa
and
imul
lret
dec
pop
xchg
pop
and
dec
enter
xor
das
xchg
cmp
data16
and
sbb
cs
in
mov
or
push
mov
add
aam
cmp
mov
add
lock
loope
jno
sbb
push
pop
jno
clc
insl
out
gs
inc
cvtps2pi
jae
popa
loop
jle
mov
dec
ljmp
add
mov
loop
and
sbb
dec
sbb
cld
dec
shll
jg
int
mov
daa
repz
popa
repz
push
ds
sti
or
dec
mov
cmp
aam
movsl
bound
lea
cmp
xor
jnp
sub
jg
mov
xchg
adc
adc
outsl
or
and
imul
lea
andl
movsl
cmp
jnp
imul
jnp
mov
sub
shll
test
test
fstl
cltd
rcll
mov
push
dec
mov
add
push
fs
add
mov
lcall
cmpsb
jl
in
and
ret
mov
insl
mov
and
fwait
test
outsl
add
inc
imul
jb
xchg
add
cmp
imulb
xchg
push
dec
push
mov
dec
negb
dec
popf
pop
and
inc
insl
and
adc
and
mov
mov
jecxz
jno
cmp
fcmove
clc
dec
lods
or
scas
cmp
imul
bound
mov
insb
fsubp
and
sub
pop
cmpsl
push
imul
mov
mov
pop
repnz
adc
leave
adc
pop
insl
jle
mov
loope
shrl
and
mov
xor
xor
in
loope
sub
xor
dec
fisubl
or
mov
mov
ja
imul
push
and
xchg
lods
daa
movsb
cmp
into
cmp
dec
pushf
cwtl
insb
sbb
mov
scas
jp
into
icebp
mov
cs
sub
dec
jmp
aad
mov
sarl
aas
jae
sub
adcl
inc
fs
data16
dec
insl
or
jg
shlb
fs
mov
xchg
sub
add
int3
xor
jo
scas
sbb
dec
jnp
adc
mov
add
sbb
and
cmp
clc
iret
ja
or
pop
enterw
outsb
sbb
insb
stos
popa
jns
jge
and
outsb
push
icebp
shlb
push
xorl
or
fs
xchg
shlb
mov
int
mov
aas
add
loopne
and
push
pop
pop
movl
push
push
xorl
sub
adc
pop
rcrl
jp
push
sub
out
mov
and
mov
loopne
popa
push
repz
stos
bound
je
mov
andb
adc
jb
psrld
add
aad
xchg
scas
push
jge
xlat
add
mov
sbb
js
inc
push
andb
mov
dec
inc
push
inc
sahf
insl
or
idivb
je
add
and
push
push
jmp
hlt
mov
pop
or
shrl
add
sbb
jnp
xchg
mov
and
add
fldt
dec
imul
jo
insl
pop
or
addr16
push
cld
add
addr16
in
repnz
cwtl
sti
mov
xchg
xor
leave
mov
popf
mov
loop
inc
testb
jno
in
fcompl
push
das
xor
mov
sub
rorl
lea
adc
mov
push
imul
jp
lock
insb
clc
mov
lret
in
pop
and
sub
addb
fsubrs
xchg
daa
stos
and
xor
int3
mov
in
mov
lahf
nop
pop
xor
icebp
in
clc
jo
aaa
lret
xor
and
jmp
inc
pop
cmp
lea
sbb
shr
dec
insl
test
xor
and
sub
inc
in
pop
push
inc
adc
push
ror
movsb
dec
outsl
lret
jmp
call
jl
and
les
pop
pop
pop
js
inc
dec
fimuls
pop
push
sbb
shlb
push
adc
popa
lea
pop
fcoms
jo
mov
pusha
fdivr
inc
popf
out
and
sti
test
push
mov
in
add
arpl
dec
orl
and
fildl
icebp
int3
cmp
xor
popa
popa
hlt
jnp
int
inc
and
arpl
push
femms
call
inc
xor
ret
inc
enter
int3
xchg
pop
jmp
or
xchg
add
jge
xchg
jl
arpl
or
sbb
adc
test
push
and
cmp
hlt
bound
fidivl
aam
inc
mov
gs
iret
aad
cmc
mov
cmc
mov
and
fisttpll
fistl
sbb
mov
mov
xchg
stos
lcall
mov
jp
jno
pop
push
mov
sub
or
adc
mov
jo
repz
es
lahf
mov
push
push
jae
out
push
pop
outsb
cmp
lcall
cld
lods
mov
notl
push
lret
add
push
gs
ljmp
add
inc
loope
sahf
jns
jle
lea
xor
mov
outsl
mov
js
sbb
imul
mov
out
sub
inc
fdiv
push
pop
pop
cmpl
clc
push
inc
or
repnz
divb
mov
inc
addl
cmp
mov
xchg
pop
fstpl
jl
in
pop
sub
sbb
loope
inc
loop
push
lcall
scas
or
and
sbb
mov
mov
pop
push
cld
movsb
push
or
pop
pop
pop
push
int3
movsl
cmc
sub
cmp
hlt
pop
sbb
rcl
fcompl
xor
or
lret
fsubrl
jns
loopne
gs
push
outsl
and
in
gs
cs
insb
jae
mov
loope
in
mov
add
bound
push
add
loopne
adc
push
add
jae
inc
mov
and
sbb
adc
punpckldq
jno
jecxz
sbb
push
mulb
push
mov
cmpsl
cmpsb
imul
sub
pop
ljmp
and
lret
test
pushf
dec
pushf
es
push
lcall
pop
les
push
test
jmp
popa
icebp
mov
sub
gs
add
inc
add
dec
or
scas
sbb
xchg
sahf
cmpsb
cmp
push
pop
pop
mov
pop
andb
cli
movsl
xor
xor
popa
add
popa
nop
out
sub
mov
and
jge
lock
push
lahf
arpl
or
movsl
in
push
push
clc
xor
adc
pusha
jo
mov
mov
or
test
fst
stos
dec
repnz
lds
and
leave
adc
and
inc
out
cmpl
cli
push
sub
cmpsb
lea
sub
push
in
cmp
pop
sub
vmaxpd
mov
push
mov
push
stos
lahf
jnp
jbe
mov
in
je
jbe
lock
dec
add
jmp
sub
outsb
loopne
rcl
jno
pusha
pop
xchg
jmp
clc
cmp
mov
icebp
stos
add
repz
mov
or
mov
in
push
add
dec
dec
xchg
pop
pusha
fdivr
adc
sbb
call
adc
sub
sbb
and
into
push
test
cli
push
lods
pop
sbb
dec
arpl
sbb
jg
negb
outsb
dec
popa
fidivrs
jle
fs
call
popa
cli
fcoms
cmpsb
in
jmp
jno
nopl
in
pop
sub
popa
and
push
insl
mov
fnstenv
mov
cli
inc
into
call
aam
dec
xchg
loop
adc
cli
jb
dec
cli
xchg
pop
repnz
mov
sub
jns
pop
and
jb
leave
pop
add
adc
pop
dec
notb
enter
jmp
inc
filds
jb
and
fcompl
je
outsb
xor
sbb
cld
arpl
rcrb
and
dec
mov
sbb
pop
fists
jae
iret
mov
adc
jl
xlat
and
inc
ret
and
shr
arpl
int3
dec
aad
ljmp
jmp
aad
mov
dec
and
dec
aaa
ja
fldl
gs
dec
jmp
add
pop
stos
arpl
push
sub
arpl
aad
xchg
xor
adc
clc
fldenv
sbb
and
icebp
jo
adc
adc
jge
nop
cmp
sub
inc
outsb
and
xchg
or
in
icebp
loope
shr
or
xchg
cmp
or
mov
xchg
adc
pop
aam
xor
je
mov
add
in
insl
push
outsl
lea
sbb
xor
sub
mov
stos
loop
dec
xchg
adc
test
idivl
cmp
xor
dec
push
sub
loope
testb
pop
adc
or
pop
pusha
into
sbb
pop
rcr
shll
fsubl
xchg
pop
fsubl
push
adc
lea
jle
lea
cmc
and
pop
in
gs
ljmp
and
insb
ret
imul
pop
hlt
jae
ds
movsl
pop
mov
lea
push
and
lea
sub
adc
or
adc
sub
hlt
pop
dec
in
xchg
lea
jbe
andl
push
in
lods
sti
mov
xchg
insb
repz
sub
push
rcr
lock
fldl
cmp
mov
cmp
mov
jecxz
pop
pop
in
and
mov
and
outsb
fcoml
sti
dec
mov
and
pop
mov
gs
lea
mov
das
mov
mov
notl
cld
sahf
test
jb
out
jno
xor
xor
and
adc
negb
cmpsl
xchg
cmp
cmpl
xor
jle
jns
sbbl
dec
scas
dec
ja
nop
pop
and
sbb
xchg
shl
sahf
xor
mov
push
mov
andb
push
fsubrl
adc
fcmovb
mov
repnz
popf
in
pop
movsb
in
sbb
in
push
fdivrp
ret
sub
aas
inc
popa
sub
jbe
aad
sbb
loope
jnp
or
shrl
arpl
add
rcll
popa
dec
mov
cmpsb
cli
mov
mov
bound
pop
mov
mov
jb
mov
sbb
dec
jmp
mov
xlat
data16
mov
sub
repnz
clc
xor
das
enter
popa
call
pop
ljmp
mov
jb
and
hlt
insb
lea
xor
leave
rcr
xor
fstpt
cmpsl
and
insl
shll
fildll
dec
loop
test
xor
loop
xchg
dec
and
lds
xor
sub
jle
and
andl
shlb
scas
mov
movsl
jp
aad
scas
test
cmp
mov
insb
and
sub
fidivs
xchg
ret
int3
gs
insl
test
daa
insb
and
lahf
jle
and
insb
xchg
or
gs
or
ljmp
inc
icebp
jae
fildll
mov
cmp
jle
add
jmp
mov
insb
xor
pop
mov
mov
loopne
cli
dec
andl
and
jae
iret
aaa
cli
adc
push
test
xor
sar
imul
popa
stc
or
pop
push
push
ret
xor
cmp
loope
mov
cmp
cmp
sub
adc
add
notb
inc
xor
push
sbb
jns
mov
stc
insl
dec
mov
mov
fisubs
cmp
add
adc
inc
or
jecxz
dec
xor
imul
sub
xor
mov
insb
and
cmp
pop
xchg
fxam
cmp
mov
mov
adc
push
xor
mov
push
inc
and
scas
xchg
lret
push
and
ffree
fucomip
in
and
push
mov
and
inc
adc
xadd
das
icebp
mov
adc
fs
dec
lret
dec
idiv
or
pop
call
adc
mov
cmp
movsl
mov
add
xor
mov
xor
pop
fcomi
push
ret
jae
outsl
xor
mov
fisttpll
fcoms
push
mov
sbb
push
mov
jle
inc
cld
cmp
and
cmp
pop
bound
enter
pop
lods
xchg
dec
icebp
scas
ljmp
rol
push
dec
push
insl
jae
hlt
push
add
sti
in
clc
mov
imul
es
cmp
sub
in
sbb
pop
loopne
adc
push
add
pop
jl
adc
or
push
push
cmp
das
cltd
and
adc
dec
pop
rorb
js
movsb
cmp
stos
sub
cmp
xor
sub
xlat
push
in
ret
push
inc
int3
jns
adc
loope
adc
lret
loope
dec
sbb
dec
fdivrl
xor
jmp
hlt
data16
add
push
xchg
sqrtps
mov
or
adc
pushf
jns
jmp
push
test
ficomps
add
fsubr
sub
lea
push
sub
call
xor
daa
add
sbb
popf
stos
fcompl
js
and
and
lret
mov
push
mov
and
insb
xor
cld
jno
mov
or
cld
pop
lock
push
out
fmulp
sub
fisubl
test
jecxz
dec
scas
cltd
dec
ds
sub
push
into
jp
dec
cld
or
icebp
dec
in
loope
loop
adc
xor
and
xchg
je
stos
insl
push
and
push
xor
jge
es
in
mov
cmp
cwtl
stc
xorl
in
dec
cmp
out
shl
xchg
cmp
dec
mov
xor
sbb
adc
sub
mov
pop
mov
das
das
ret
out
aaa
and
mov
xchg
mov
nop
push
xor
push
dec
and
and
inc
lcall
loop
lods
jle
mov
lock
cmc
push
ret
out
mov
jmp
mov
or
xchg
adc
rolb
lea
adc
mov
push
mov
pop
pop
add
in
xchg
dec
sub
jg
push
gs
loop
mov
pop
mov
add
jb
pop
mov
imul
cmp
int
mov
dec
sbb
adc
inc
mov
pop
fwait
and
dec
arpl
and
clc
outsb
test
and
mov
cmp
push
in
aad
lds
insb
or
xchg
or
push
decl
adc
adc
mov
dec
ret
mov
lods
mov
lock
fdivrl
hlt
jg
daa
loope
dec
dec
popl
or
lock
cld
mov
xor
insb
push
das
aas
lds
mov
pop
adc
ret
leave
adc
sub
insl
and
xor
sbb
mov
jno
ror
fisubrs
and
mov
xchg
lock
or
mov
push
outsb
clc
rclb
push
adc
mov
sbb
cmp
je
insl
sbb
lock
and
aad
jle
or
push
jl
sub
hlt
das
add
lock
lea
sub
out
inc
in
dec
in
push
mov
xor
xchg
inc
add
clc
insb
and
and
jl
push
and
mov
data16
je
mov
push
repz
sahf
fnstenv
nop
repnz
mov
add
inc
arpl
sub
push
lret
lods
fs
xor
cld
es
lds
inc
push
jns
ret
inc
repnz
push
mov
and
repnz
push
and
dec
mov
inc
push
ret
mov
pop
daa
dec
mov
and
call
lret
pop
inc
pusha
pop
or
or
mov
mov
jle
mov
mov
adc
pop
aad
loope
fstps
pusha
xchg
dec
xor
das
sbb
fdiv
adc
adc
xor
cld
adc
sub
sbb
and
push
inc
shlb
repnz
lock
nop
sbb
movsb
lods
xor
scas
shll
push
dec
jns
or
cmpl
adc
ds
push
fs
jo
add
stc
out
inc
adc
and
fimuls
out
test
in
pushf
sbb
mov
mov
test
and
stos
sbb
ljmp
popa
mov
mov
dec
and
insl
mov
pop
movsb
sbb
add
stos
fisttpll
hlt
jno
lea
push
je
aaa
bound
inc
popf
cld
dec
loop
insb
mov
subb
sti
mov
fimuls
shrb
loop
xor
inc
mov
push
pop
inc
inc
mov
fs
mov
lea
out
xchg
pushf
in
add
sbb
aad
fs
lea
lods
pusha
jo
push
xor
jae
pop
loopne
sub
fs
std
in
xor
pop
jmp
dec
sarl
sub
cmp
dec
iret
in
pop
in
mov
xor
mov
fisubs
or
push
ror
lds
add
add
shrl
xor
rclb
fwait
insb
gs
movsb
inc
pop
imul
sub
pop
dec
mov
and
and
push
testb
jecxz
dec
aam
cmp
loope
adc
adc
das
push
push
push
fwait
out
xchg
dec
adc
and
dec
jecxz
adcl
xchg
mov
inc
xchg
xchg
cmc
and
les
test
and
lock
nop
jne
into
and
scas
dec
fmuls
stos
fiadds
dec
mov
sub
imul
movsb
mov
xchg
lea
sub
dec
sahf
xchg
je
rclb
sub
cwtl
pop
sub
fbld
xor
push
test
pop
dec
cmc
pusha
insb
in
cli
fidivrl
sbb
ds
stos
inc
fildll
pop
xor
mov
mov
and
loope
lods
leave
cmpl
lea
mov
cmp
inc
jl
or
cmp
cmp
icebp
or
xor
ffreep
in
jmp
xor
aad
jb
mov
add
jge
shl
sub
or
cmp
les
add
xor
and
fwait
popf
rcrl
mov
pusha
pop
imul
mov
dec
xor
fwait
add
jno
sbb
fstl
mov
shll
push
and
mov
and
or
aam
outsb
insb
mov
into
lea
pop
dec
and
mov
int3
xchg
js
sub
ds
shrl
in
push
or
clc
setne
pop
out
lret
cmp
outsb
out
in
sbb
jo
mov
insb
push
lret
push
jne
xor
sbb
dec
cwtl
icebp
add
mov
sub
and
push
cmp
xor
mov
and
push
inc
jnp
gs
ficoms
or
pop
lock
sub
inc
xchg
sub
daa
and
cmp
sub
sub
sahf
sub
dec
pushf
rcll
jbe
push
scas
mov
push
mov
loop
push
js
inc
rcrb
mov
out
iret
jns
or
pop
popf
dec
fwait
xor
push
pushf
mov
and
imul
push
adc
sub
lcall
dec
sub
fistpl
push
aas
lods
push
mov
push
jmp
add
xchg
sub
lea
sbb
fldl
dec
push
xchg
icebp
and
insb
dec
outsl
stos
je
in
lds
movsb
cmp
inc
and
je
add
mov
iret
negl
dec
inc
push
test
shlb
xchg
call
js
mov
hlt
add
xchg
stos
jae
cmp
cmc
ret
imul
add
mov
rol
jb
outsb
cmp
pop
aad
sub
sbb
insl
popf
lods
bound
sub
adc
pop
pop
cmp
das
dec
xor
insl
movsb
lods
cmc
push
das
xor
in
pop
aaa
sub
rcrb
mov
pop
fldt
sub
fdivs
mov
in
repz
cmc
mov
xlat
mov
xor
xor
push
adc
push
inc
in
sub
out
loopne
xlat
divl
xchg
mov
and
repz
mov
dec
pop
movsl
les
mov
jns
jno
pop
xchg
pop
rol
sbb
or
sub
push
jnp
in
fwait
mov
das
sub
jbe
sub
cmp
jecxz
mov
out
mov
and
rorb
sub
push
push
stos
adc
popf
cmp
sbb
scas
mov
cmp
and
and
lock
fisttpl
add
jb
in
fistpl
sub
ja
xor
cltd
cmpsb
das
lods
pop
lahf
bound
pop
cmpsl
or
in
mov
jo
jmp
ljmp
xor
scas
arpl
inc
cmp
shrl
jnp
jg
add
and
ljmp
lret
int
loop
pop
and
push
movsl
mov
or
popa
imul
or
add
dec
loope
ljmp
cwtl
icebp
insl
shlb
es
xchg
mov
xor
sub
cmp
push
fmulp
insb
pop
push
mov
pop
inc
xor
or
js
stos
push
dec
popa
cwtl
xor
lds
lret
fnstsw
or
inc
mov
lret
lods
lods
leave
mov
xchg
mov
lds
xchg
xor
shrl
push
cmp
lods
daa
lods
sub
inc
or
sti
dec
lock
stos
repnz
mov
fs
push
dec
pop
jl
inc
lcall
cmp
inc
es
in
fidivl
jne
stos
add
lds
pop
mov
outsb
mov
pop
cmc
add
loop
mov
test
xchg
adc
sbb
sbb
lock
sbb
mov
mov
xchg
sub
test
push
push
push
push
pop
and
idivl
dec
add
lds
nop
sub
lcall
stc
mov
or
out
jbe
in
push
pop
xor
stos
pop
sub
stos
lea
fmull
jb
push
mov
or
sub
inc
shrl
hlt
jg
sub
push
aad
jno
cmpsb
inc
cli
sub
adc
jecxz
xor
scas
scas
or
xchg
bound
in
mov
cltd
les
mov
pop
xchg
leave
int
mov
scas
jo
stc
dec
shll
push
popf
inc
xchg
push
xchg
adc
mov
fs
jae
jmp
mov
mov
ds
out
mov
dec
push
lea
and
jg
stc
inc
adc
dec
mov
adc
mull
cmpl
and
test
adc
outsl
shrb
sub
cmpsb
test
stos
jno
es
push
clc
in
lahf
in
push
cmp
push
adc
mov
divl
lods
sbb
sub
movsl
and
mov
cmp
cmpsl
popa
inc
call
jge
dec
into
pop
lods
xor
les
lods
push
cld
or
cltd
xor
jecxz
dec
mov
sbb
push
jge
sahf
push
sar
add
and
jo
push
fisttps
mov
push
bnd
out
cltd
and
ss
loope
dec
pushf
dec
aam
inc
adc
leave
and
hlt
stc
gs
lahf
or
cli
lock
leave
int
faddp
add
lock
fadds
xor
stos
movsb
cmp
repz
jbe
sub
sbb
cmpsb
cmp
xor
xor
xchg
loopne
push
push
dec
outsl
call
and
lahf
dec
add
hlt
or
ja
and
pushf
shll
leave
mov
inc
push
test
lock
xor
bound
pushf
lea
movsl
les
adcl
cmp
fwait
and
xchg
pop
lahf
sub
jle
popf
jnp
push
pop
leave
mov
bound
jbe
adc
dec
cs
icebp
dec
arpl
sub
stos
pop
push
fists
jge
iret
fdivrl
addb
mov
cmpsb
in
cmp
mov
call
adc
push
stc
fimuls
mov
in
dec
mov
sbbb
mov
jne
pop
arpl
or
in
adc
ficomps
fdiv
repnz
inc
or
cmp
jl
pusha
xchg
mov
test
lea
dec
jnp
jl
cwtl
xor
pop
push
in
insb
mov
push
sub
je
pop
lods
mov
mov
mov
pop
outsb
cwtl
shl
adc
cmc
in
pop
lea
push
pop
push
adc
add
scas
rcll
cld
or
jnp
in
cmp
mov
int
mov
inc
enter
push
fidivs
pushf
in
mov
js
or
mov
out
xchg
cmp
fists
daa
popa
and
and
nop
lock
das
mov
jge
push
mov
pop
push
popa
cmp
xor
jbe
pop
lret
scas
stc
lock
ljmp
jl
xor
fcmove
inc
cmp
fwait
mov
js
insb
in
push
sub
loopne
mov
mov
mov
clc
xchg
lret
dec
cmp
and
mov
movsl
push
ljmp
mov
adc
cltd
lods
scas
aad
movsl
lds
xor
xchg
or
in
jb
movsb
sub
mov
test
clc
test
lea
hlt
sub
cmpsb
int
cmp
popa
jb
xor
lahf
cmp
insl
mov
dec
stc
pop
xor
stos
movsb
add
xor
mov
pop
xor
cs
testl
mov
xchg
pop
loop
pop
pushf
das
in
hlt
scas
clc
jmp
mov
cld
ss
je
cmpl
jo
in
shrl
je
push
sub
sub
fidivrs
pop
shrl
call
movsb
push
xor
pop
sbb
jp
push
popa
push
in
push
xor
cmp
sti
shl
dec
push
adc
clc
sbb
ficoms
ficoms
arpl
mov
pushf
adc
mov
lods
sub
jmp
cli
add
rclb
inc
stos
nop
add
and
bound
test
icebp
pop
divb
iret
push
push
add
shll
mov
addl
in
cmc
mov
mov
mov
scas
mov
push
mov
mov
insl
scas
test
outsb
sub
xor
dec
mulb
loopne
mov
cwtl
call
pop
adc
dec
ret
repnz
dec
imul
outsl
rorb
lea
enter
xchg
or
scas
mov
xchg
push
in
inc
repz
add
rorl
cmpsb
clc
push
mov
mov
mov
shrb
or
bound
leave
push
mov
lret
dec
jge
mov
lea
mov
fxch
or
shl
push
jmp
xchg
sbb
insb
addb
addl
inc
sbb
sti
imulb
sub
imul
cmc
js
pop
filds
outsb
lods
add
mov
or
or
inc
fst
hlt
cmp
in
ljmp
stc
imul
data16
addr16
pop
pop
cmc
loop
and
pop
mov
in
push
push
scas
std
jb
je
adc
jbe
call
xchg
popl
sbb
cmp
mov
sbb
inc
sahf
mov
sbbl
jnp
lret
dec
dec
dec
loop
aam
lea
fldpi
and
push
xchg
sub
sub
fsub
fldt
push
aaa
outsb
loop
push
cli
inc
and
and
repz
jl
frstor
sub
xchg
jb
xor
ja
test
mov
popf
fbstp
movsb
add
xor
xchg
sub
push
xor
call
jo
aad
sbb
inc
dec
push
jb
and
push
inc
jbe
adc
stos
dec
mov
inc
push
popa
and
sub
dec
lea
popf
idiv
and
cmpsl
fcoms
add
pop
scas
je
icebp
divb
inc
inc
adc
insb
dec
shrb
sub
dec
stos
or
imull
stc
add
mov
lea
mov
dec
and
mov
xchg
repz
mov
lea
mov
or
push
xor
xchg
loop
add
dec
dec
fs
imul
mov
shlb
into
jnp
negl
cmp
sbb
pop
out
pop
das
testb
pop
add
pop
imul
pop
ss
imul
cltd
adc
mov
test
fwait
push
icebp
sbb
dec
pop
push
gs
dec
outsb
dec
das
insl
pushl
orl
icebp
mov
inc
addb
das
insl
hlt
push
sub
or
stos
adc
popa
out
push
xor
push
popa
jg
mov
ret
push
cmc
test
push
test
aaa
dec
or
scas
push
daa
inc
push
mov
add
clc
and
or
add
and
loopne
out
outsl
lea
std
fimuls
fistps
lea
imul
and
shll
add
sbb
in
cmc
and
cmpsl
jle
test
loope
popa
dec
push
pop
dec
je
arpl
fcoml
xchg
mov
add
popf
and
push
decb
fs
outsl
sub
sub
inc
mov
or
cmp
add
loop
pop
insb
jmp
adc
push
and
cmp
inc
sbb
lods
sbb
adc
and
inc
mov
or
mov
in
add
insb
pop
lock
sti
pop
cmp
lods
pop
dec
fnstenv
cmp
lods
jge
imul
lahf
sub
dec
sahf
add
int
dec
movsl
and
and
in
push
cmp
jl
ret
xor
push
push
aam
jae
push
in
push
inc
in
push
pop
mov
dec
imul
sub
jle
out
push
repnz
sub
push
dec
fs
xchg
dec
dec
adc
jb
iret
fisubs
fldl
push
mov
xchg
inc
sahf
add
sbb
sub
ret
push
mov
pop
dec
outsb
nop
pop
test
insb
sbb
or
sbbl
insl
dec
push
fwait
call
aaa
mov
push
clc
mov
popf
pushf
pop
in
add
cmpsb
xor
adc
push
pop
repnz
lret
out
and
pop
or
int3
or
pop
dec
insb
jmp
jmp
daa
pop
cli
push
leave
aas
fwait
xor
mov
sbb
pop
mov
mov
jno
mov
cmp
inc
js
mov
call
andl
clc
ret
mov
mov
aaa
push
inc
jbe
pop
xor
dec
pop
and
scas
les
divb
cmp
jl
ret
ds
insb
pop
add
gs
js
jb
or
and
pushf
es
stos
push
insb
mov
push
pop
add
and
xchg
dec
dec
jns
inc
cmp
sbb
and
stos
sub
jmp
xor
xchg
and
popa
lea
mov
jge
cltd
mov
mov
es
lea
sub
mov
shrb
fcomps
in
lods
push
aas
lds
and
ljmp
int
or
mov
inc
cmc
lods
lds
dec
mov
push
in
aad
fcompl
lcall
ljmp
clc
jno
pop
pop
jo
push
cmp
pusha
xor
in
and
lea
sti
xor
fld
je
sbb
and
lods
cmp
insb
in
cmp
out
out
fists
shlb
insl
inc
jmp
add
mov
push
cmpsb
lea
jno
and
push
data16
call
dec
or
pop
sbb
int
jmp
xchg
popf
adc
xor
or
rcrb
sub
in
pop
test
inc
fdivrl
push
ret
lahf
lret
mov
adc
fists
and
sbb
xchg
addr16
ret
pop
addr16
je
add
out
jbe
sub
insl
and
mov
xlat
or
aad
fbstp
mov
push
stc
pop
push
mov
push
sbb
inc
jnp
test
insb
cmp
dec
add
sbb
fstpl
popf
popa
and
push
push
adc
xor
fsts
xor
pop
pop
and
pushl
xor
adc
gs
fs
mov
repnz
pushf
and
das
or
adc
jp
pop
std
push
add
push
and
adc
jg
lret
dec
sub
in
pop
cmp
ffree
dec
jo
inc
or
mov
push
push
add
dec
add
scas
push
jb
lds
dec
mov
testb
popa
adc
xchg
xchg
mov
mov
inc
inc
test
pop
jecxz
jbe
cmp
inc
dec
cmpsb
loope
stos
out
sub
sub
in
imul
inc
ss
pop
mov
push
popa
xchg
add
rorl
loop
or
pop
dec
xor
in
inc
mov
inc
imul
inc
lds
mov
lds
in
or
sbb
cmpsb
enter
inc
insb
lea
add
xor
jns
aam
fdivrl
or
add
xchg
aam
adc
in
jb
or
sbb
fwait
insl
sub
scas
into
add
and
mov
es
add
in
pop
lea
mov
add
xchg
gs
adc
daa
push
and
sub
push
rcll
jbe
lock
rcrl
loope
cs
in
dec
xor
cmpsl
fbld
cmp
push
dec
or
pusha
call
fucomi
dec
adc
adc
add
clc
repz
in
mov
adc
jae
or
cli
arpl
jo
pop
rcrl
mov
push
ja
scas
arpl
push
inc
lods
mov
aas
push
mov
xchg
inc
inc
jbe
mov
jbe
icebp
inc
add
cs
jo
insb
ret
scas
imul
rcr
das
pop
sbb
xchg
hlt
inc
mov
push
icebp
mov
push
adc
xchg
inc
pop
iret
dec
test
insl
mov
and
sub
test
test
in
popf
arpl
je
aam
and
push
imul
mov
mov
es
movsl
push
aad
fcomp
mov
aad
push
addr16
insb
add
cld
push
stc
sti
in
into
pop
push
pop
movsl
sbb
adc
xor
lea
ror
xchg
ret
and
cs
pop
sub
push
mov
loopne
push
fiadds
movsl
pop
mov
je
inc
pop
jnp
jl
lock
inc
add
loope
xor
inc
dec
inc
mov
out
dec
and
pop
adc
mov
inc
sbb
leave
inc
lods
int
stos
xor
mov
pop
mov
in
sub
mov
dec
hlt
or
sub
lea
in
dec
dec
pop
cmp
jmp
sbb
cmpsb
and
mov
mov
inc
cmp
popa
stc
dec
push
mov
mov
mov
xchg
bound
mov
subb
xor
xchg
jg
fs
shlb
test
push
lods
mov
cmc
cwtl
in
cmp
jae
stc
mov
clc
mov
add
cmp
jecxz
jl
add
jmp
in
pop
lock
jp
in
mov
cwtl
add
mov
ficoml
jb
pop
lea
sbb
mov
jp
mov
xor
mov
fs
sub
add
arpl
and
imul
testl
cmc
push
js
jb
jnp
outsb
push
cmpl
add
dec
lret
dec
pop
in
aad
data16
dec
mov
lea
dec
jecxz
adc
xor
inc
inc
sub
xchg
out
jno
daa
sub
jae
sub
jno
andb
out
cmp
insb
das
xor
sub
in
xor
movsb
leave
in
sub
cmp
xor
out
sahf
jbe
shrl
in
or
insb
sub
jmp
mov
jmp
and
call
loope
pop
inc
push
ja
inc
daa
addb
xchg
inc
imul
push
jge
arpl
mov
mov
shr
dec
pop
adc
loop
cltd
add
push
mov
popf
inc
jle
in
in
push
cmpsl
inc
shll
inc
add
inc
lods
or
push
and
xor
loopne
xor
xor
fxch
add
rcll
add
fdivrl
jo
and
mov
dec
push
cmp
sbb
pop
push
dec
mov
pop
insb
add
cmp
fcompl
mov
jg
in
scas
sub
dec
lods
push
cmpsb
mov
dec
stos
sub
jne
mov
xchg
xchg
cmp
adc
adc
das
sub
push
pusha
fidivs
push
insl
and
push
pop
and
mov
mov
sti
sub
push
lret
js
cmpsl
mov
sub
adc
imul
dec
fs
jae
push
loope
jl
outsl
push
dec
xor
cmpsl
mov
jb
jo
outsb
push
je
insl
jle
jge
push
imul
dec
sub
mov
push
arpl
cmp
inc
fdivrp
lods
ss
add
ret
cmp
stos
jae
jl
bound
nop
push
pop
sbb
jae
and
mov
sub
mov
jno
push
mov
out
loopne
js
or
pop
sbb
dec
add
test
mov
scas
and
mov
and
lea
and
sti
dec
pop
and
or
stos
insb
pop
popl
icebp
test
jnp
push
cmp
adc
inc
jmp
dec
addr16
inc
in
mov
fucom
cwtl
pop
in
stc
cmp
mov
in
dec
js
call
push
cmp
xor
fdivrs
push
callw
dec
push
dec
iret
push
mov
pop
fcmovb
loope
pop
insb
jnp
pop
shlb
lret
adc
lock
xchg
arpl
xchg
and
mov
or
jl
fnsave
out
mov
push
shll
cmc
popf
iret
mov
scas
mov
ret
push
in
sbb
leave
fcmovu
inc
xchg
sub
popa
push
jns
sbb
out
orl
ljmp
js
mov
dec
jp
lods
insb
stc
sub
inc
pop
and
xchg
gs
mov
push
push
mov
sub
jmp
inc
jno
rcll
adc
adc
inc
sub
xor
cltd
xor
sub
mov
mov
test
imul
je
jge
inc
cmp
and
pusha
shlb
arpl
jmp
stos
mov
xor
jbe
insl
jnp
popf
sbb
mov
clc
out
and
loope
arpl
scas
imul
sub
pop
or
pop
in
faddl
dec
in
loop
in
adc
sub
pop
push
insl
sub
movl
cmp
test
pop
clc
decl
sub
push
mov
rol
pop
cmpsl
sub
out
pop
outsl
stos
push
sub
fisubrs
dec
iret
daa
xchg
xchg
loop
push
nop
mov
das
xchg
jae
lea
xor
cmp
ret
cs
sub
and
dec
mov
ljmp
and
jl
icebp
lea
popa
mov
cmp
cmp
mov
pop
sub
push
mov
sub
jne
mov
mov
dec
pop
inc
ret
jge
in
scas
shll
je
jg
push
adc
fdivs
cmp
in
and
pop
cmp
out
cmp
fstpt
in
das
pop
inc
fs
push
mov
popf
pop
xchg
add
xor
adc
lret
cmp
dec
dec
sub
jmp
testl
pop
stos
out
jl
mov
sub
inc
inc
xchg
adc
fcoms
clc
xchg
pushf
inc
je
stc
outsl
jle
xor
jns
loop
and
in
pop
dec
add
fnsave
push
push
xor
xor
inc
decb
fsubrs
xor
xor
je
jae
call
adc
or
and
and
inc
add
adc
mov
mov
arpl
inc
mov
adc
shll
aaa
jns
xchg
dec
dec
xor
inc
mov
popf
adc
out
sub
sarl
xor
xor
pop
pop
outsl
mov
xor
orb
add
lsl
xor
pop
aaa
aas
fdivl
dec
dec
inc
jecxz
lods
add
xor
push
cmp
push
xchg
dec
imull
ss
subl
jbe
inc
xor
jae
sbb
mov
mov
push
push
pop
daa
sbb
jg
xchg
adc
mov
mov
pop
loopne
or
popa
lock
and
fcoml
mov
ja
push
fnsave
mov
outsl
push
arpl
pusha
lods
inc
jno
mov
adc
fstl
jmp
push
icebp
mov
imul
cmp
imul
sub
push
dec
pop
pushl
stc
aam
sbb
in
cli
bound
shll
xchg
mov
int
jecxz
push
push
adc
adc
dec
sar
jecxz
test
lods
xor
in
sbb
in
lock
shll
out
sti
xor
mov
jno
out
jbe
bound
stc
stc
pop
xlat
daa
add
js
mov
jb
jle
pushf
sbb
inc
ss
fldl
push
pop
sahf
fsubrl
sbb
mov
jecxz
lods
daa
jle
mov
je
lea
jae
fdivs
cmp
adc
push
adc
pop
sti
sbb
or
and
test
subl
cmp
test
out
push
lods
push
and
mov
xor
idivl
bound
std
jns
jmp
add
andb
insl
or
and
imul
test
cmp
inc
cmp
cmp
dec
clc
imul
jns
imull
cli
mov
sbb
jnp
dec
je
inc
mov
testb
repz
mov
cmovp
xchg
cmp
dec
xchg
and
pop
dec
loopne
xor
jp
int
sti
faddl
test
in
jo
mov
cld
fsubrs
add
pop
iret
leave
clc
push
jo
sbb
push
and
fldenv
adc
lea
sub
sbb
test
popa
movsb
pop
dec
cld
shrb
or
mov
dec
sbb
cmpb
outsl
push
pop
shrb
mov
stos
and
sub
push
push
and
lock
dec
xlat
and
shll
mov
adc
fsubs
cltd
mov
loop
mov
stos
inc
pop
mov
inc
cmp
jae
push
dec
jle
shll
in
or
inc
mov
sbb
push
sub
leave
jne
jecxz
in
add
ds
mov
cmp
pushl
or
sub
leave
dec
mov
gs
fs
mov
mov
cli
dec
xchg
repz
arpl
lea
inc
aaa
push
push
xchg
mov
fldenv
xor
sub
es
arpl
js
mov
pop
std
in
pop
fdivrs
testl
iret
out
fdivrl
push
push
stos
ret
imul
pop
xor
lods
and
test
mov
push
pop
jno
and
dec
scas
jge
adc
mov
and
jle
pop
aam
sbb
orl
adc
mov
mov
andl
dec
into
pop
jg
or
stos
sbb
dec
rorl
add
int3
xchg
push
inc
inc
movsl
dec
adc
lea
icebp
push
mov
int
cld
push
jge
adc
dec
and
sbb
jle
push
lds
test
lahf
pop
mov
mov
rorl
es
inc
xor
pop
cmp
leave
sub
adc
jbe
sub
mov
rcrb
sub
adc
mov
sbb
lret
push
hlt
loop
cmc
into
add
in
jae
arpl
jecxz
and
push
lret
popf
pushf
pop
enter
dec
jmp
popf
mov
dec
mov
repz
jnp
cmp
xor
sub
xor
imul
mov
aaa
jnp
test
push
mov
insl
dec
mov
pop
cmp
add
push
lock
das
jnp
incb
ds
imul
dec
pop
jno
and
push
dec
iret
in
popa
or
push
in
imul
insl
and
inc
sbb
and
sub
cmp
testl
in
mov
jns
dec
and
popa
outsb
fists
or
clc
clc
sbb
jno
mov
rol
aad
pop
mov
jge
and
add
dec
mov
and
cltd
xor
xor
rcl
les
adc
and
pop
or
fstpt
fistps
pop
sub
or
push
push
cmp
pop
sbb
lods
pop
xor
push
push
xchg
xchg
sbb
push
shlb
or
cmpsb
or
xor
sahf
mov
push
call
pop
sbb
loope
stc
dec
push
mov
cld
dec
insl
lock
dec
shrb
lcall
ja
sbb
jne
cmp
inc
sarl
or
neg
push
xor
xchg
scas
out
lods
add
push
fstl
sarl
xchg
mov
xchg
imul
mov
test
aad
in
mov
outsl
mov
scas
not
sub
jmp
inc
pop
sbb
sub
lahf
fsubrs
fwait
add
sbb
jb
add
daa
in
cmp
and
adc
push
data16
pop
jnp
jno
sub
cmp
adc
jno
les
aaa
jg
push
and
in
xchg
fildl
or
xor
sbb
stc
ds
mov
arpl
in
pop
hlt
jp
add
repnz
mov
add
leave
xchg
xchg
cmc
mov
pop
in
pop
xor
pop
sbb
mov
imul
push
jo
mov
gs
scas
jo
dec
adc
stc
add
stos
adc
sub
or
lret
dec
mov
push
push
jns
shlb
out
stos
or
fsubs
xchg
xor
adc
ds
mov
add
mov
bound
daa
push
aam
mov
out
mov
and
pop
lea
mov
cs
mov
fs
push
push
cmp
movsl
mov
imul
cmp
lds
push
xor
or
fisttps
popa
pop
adcl
pop
add
std
and
xchg
or
das
mov
dec
xor
pop
and
push
inc
jne
popf
fwait
jle
test
jmp
in
pop
mov
cmp
les
mov
cmp
ror
les
aaa
testl
inc
pop
mov
add
push
inc
xor
and
arpl
in
xchg
or
hlt
xchg
push
and
push
pop
xorl
test
push
imulb
mov
cmc
je
xor
or
js
imul
je
push
pop
xchg
movb
jmp
and
push
jb
inc
mov
aas
inc
sbb
push
jle
fs
stc
in
pop
leave
int
or
add
pop
idivl
addl
sub
pop
sbb
lea
inc
mov
cmp
pushf
incb
jecxz
fs
clc
in
mov
icebp
mov
lods
or
movhlps
shr
hlt
mov
subl
subb
movsl
pop
add
inc
mov
mov
mov
and
sub
dec
repnz
dec
loopne
fildll
xchg
loop
sub
sub
popf
mov
popa
dec
xor
dec
loop
pop
add
scas
inc
cs
xor
movsb
subl
fnstsw
pop
rcrl
sub
int
das
and
or
cmp
dec
cld
and
clc
iret
inc
fidivs
fs
sub
arpl
outsl
enter
pop
dec
add
pop
and
push
xchg
xchg
jg
dec
lret
je
xor
mov
jno
mov
lods
loopne
cmp
xor
fmulp
dec
das
outsl
insl
adcl
fcmovnu
jno
popa
aam
push
xchg
mov
arpl
cmpsl
xlat
sbb
je
sbb
lret
inc
adc
imul
pop
in
in
mov
incl
and
daa
jae
out
arpl
dec
pushf
stos
testb
lret
and
lret
add
jp
add
mov
add
and
push
les
mov
mov
mov
pop
add
pop
rolb
push
mov
add
and
fcompp
xor
fsubl
arpl
mov
test
jae
dec
movsl
dec
dec
or
xchg
jno
mov
out
insl
mov
mov
xor
fs
adc
and
mov
mov
jne
mov
mov
loop
pop
jno
enter
and
sub
adc
xchg
jno
scas
inc
pushf
fildl
cs
sbb
add
inc
and
cld
dec
jge
pop
arpl
rcll
mov
not
sub
repnz
in
xor
and
cwtl
or
imul
jge
rclb
or
push
sub
pusha
jmp
lcall
mov
xor
aas
jne
xor
rclb
inc
iret
enter
mov
mov
cmp
jbe
scas
sahf
pop
mov
jl
subb
jbe
aaa
push
push
je
sbb
sbb
mov
gs
addb
pop
push
push
in
fstps
or
aad
adc
or
add
jmp
imull
es
test
xor
jp
int3
adc
and
das
mov
divl
cmp
jno
cmp
jae
pop
divl
arpl
sbb
xor
arpl
and
clc
xchg
into
std
mov
jp
xchg
mov
and
sub
jno
clc
insl
jmp
stc
imul
jno
stc
ss
mov
mov
in
js
xor
pop
js
xor
movsl
out
dec
test
les
push
sbb
adc
and
xchg
inc
dec
sub
mov
mov
popa
dec
dec
sub
pushf
pop
xchg
mull
mov
ds
dec
test
lods
cmp
movsb
clc
push
lods
cli
int3
fldt
lea
ss
test
orb
sub
dec
sti
mov
and
push
cmp
sub
push
fcomps
xchg
and
jb
xor
aad
cwtl
add
dec
ja
ret
sbb
fistpl
or
or
dec
stos
fs
loopne
gs
cltd
ds
xchg
jle
dec
jmp
jg
es
popf
pop
push
push
scas
and
or
inc
and
repz
adc
insb
xor
dec
lods
jbe
test
xchg
popa
cmp
sti
ss
jge
or
cmp
sub
mov
js
pop
cli
adc
sub
ja
scas
sub
pop
ret
and
sub
pop
addb
jb
mov
das
sub
mov
stc
into
inc
mov
pop
pop
sbb
xchg
pushf
lea
nop
or
dec
push
test
sar
lock
push
pop
and
stos
movsl
pop
and
ret
loopne
fistl
jge
sbb
rorb
pusha
and
test
ljmp
adc
imul
and
out
je
xchg
fucom
cmpsb
sub
cmpsl
cmp
fbld
jp
dec
mov
push
xor
les
sub
fs
add
iret
inc
add
dec
rcll
mov
xchg
mov
xlat
jno
jae
push
ljmp
mov
decb
jns
mov
xor
sbb
pop
in
mov
cwtl
mov
lea
lret
outsb
xor
mov
xchg
notl
mov
pop
incb
loopne
sub
ds
xor
clc
bound
jb
cmp
cltd
jno
xchg
and
loopne
frstor
sub
lea
loopne
xor
mov
jmp
dec
pushf
cmpsb
xor
mov
and
iret
xor
jae
xor
out
lret
ret
arpl
jmp
cmp
push
mov
std
adc
cwtl
aaa
jne
or
adc
icebp
jae
xor
mov
outsl
inc
sti
sbb
scas
inc
mov
xchg
test
sub
out
adc
pop
pop
and
loopne
xor
mov
fbstp
and
jno
push
inc
mov
lods
mov
cmp
add
insl
xor
cmp
sbbb
pop
mov
jmp
jno
push
cmp
adc
push
adc
lahf
jg
or
mov
cmp
aam
jb
jns
jno
jp
jo
jnp
test
sbb
fs
push
jle
insb
push
jg
imul
push
andl
sub
addr16
xchg
mov
test
int
test
imulb
pop
imul
push
outsb
jbe
cmp
adc
push
and
cltd
push
sahf
jno
push
xor
push
enter
inc
push
inc
sub
sarb
mov
and
in
cmp
cmp
mov
lods
push
daa
pop
xchg
loop
lods
cs
mov
xchg
dec
jbe
lds
jmp
mov
lea
mov
dec
andb
test
aam
dec
aam
in
iret
push
dec
rcrl
push
pop
or
movsb
sbb
dec
cld
pop
sbb
lret
sub
lahf
and
and
aad
loopne
dec
int3
pop
gs
shlb
pushf
jno
jmp
sbb
call
mov
inc
mov
insw
sub
xchg
pop
mov
mov
movsl
jb
sbb
inc
xchg
push
dec
and
pop
aad
mov
cmp
sahf
push
loopne
xchg
inc
dec
out
push
sub
push
in
repnz
inc
jbe
jmp
fsub
add
xchg
popf
cltd
push
and
sub
jg
add
hlt
mulb
sub
xchg
jne
xor
mov
mov
sub
pop
fdivrs
cmp
cmp
push
xchg
out
into
xchg
in
insb
sub
imul
fisttpll
pop
daa
inc
xchg
add
pop
shll
popa
bound
popa
je
ja
insl
mov
jae
mov
aad
mov
and
lods
xchg
int3
aad
insl
lea
rcrb
and
cmp
xchg
pop
xchg
jb
push
jl
nop
inc
and
adc
pop
pop
andb
and
add
movsl
sub
in
jnp
fistps
mov
ret
adc
pop
lods
mov
pop
mov
negb
pop
cmp
pop
push
xchg
arpl
ljmp
mov
sub
mov
sbb
inc
in
cmpsl
in
pop
stos
inc
adc
jmp
loop
add
xchg
mov
xchg
cmp
cwtl
sub
in
je
repz
pop
movsb
push
repnz
fstpl
scas
xchg
inc
or
or
push
and
bound
push
mov
inc
into
pop
add
dec
mov
xchg
sub
inc
repnz
pop
xchg
xchg
xor
sub
push
jns
frstor
shlb
in
and
jecxz
insl
mov
sub
and
outsl
adc
and
gs
stos
and
inc
jbe
xor
imul
pop
jns
in
sbb
sbb
xor
add
cltd
add
sub
dec
ja
dec
pop
xchg
sbb
stos
aad
fs
cs
mov
lcall
pop
insl
das
mov
mov
sub
sub
and
icebp
cltd
adc
mov
lock
and
orb
and
mov
lret
call
inc
pop
jle
xchg
shlb
jge
aad
repnz
lret
adc
ret
push
sbb
dec
push
insb
push
je
adc
scas
cmp
jbe
lock
gs
lcall
push
adc
imul
addb
mov
fbstp
cmp
jmp
lahf
in
stc
xchg
inc
inc
xor
lahf
loopne
lea
es
mov
pop
rcr
scas
jnp
shl
inc
push
xchg
adc
js
ljmp
sarl
out
add
pushf
push
test
xchg
pop
es
jmp
jg
int3
aad
or
inc
mov
jmpw
fcom
mov
pop
movsb
test
or
js
xchg
daa
repnz
xor
sbb
ret
shrb
and
sbb
std
insl
in
outsb
and
outsb
in
inc
lret
push
sahf
sbb
dec
cmpb
adc
in
and
push
dec
cmp
xchg
aad
dec
movsl
jno
dec
scas
je
sub
xor
aad
mov
xchg
and
ret
cld
loop
jo
flds
outsl
scas
leave
divb
test
cld
xchg
cli
int
ljmp
mov
xchg
ret
jno
or
leave
dec
loopne
aaa
mov
addr16
xor
mov
push
dec
and
mov
out
je
push
pop
movsl
lret
lock
xchg
lock
xchg
pop
or
adc
and
shlb
sub
and
insb
dec
fs
and
or
pop
ja
in
mov
mov
inc
xchg
lods
pop
divb
addr16
movsl
or
jae
mov
insb
and
xor
adc
cmp
cltd
in
ret
sub
bound
aas
repnz
jo
ja
pusha
inc
rorb
divl
jl
loop
jle
popa
mov
insb
and
sbb
mov
ret
inc
xor
add
pop
lret
test
xor
icebp
imul
cmp
and
in
add
pop
je
pop
sub
icebp
push
call
mov
aam
push
in
lock
das
sbb
cld
adc
jnp
movsl
add
jo
shrl
ljmp
test
jmp
lret
xor
dec
jo
mov
enter
lret
xor
adc
mov
test
ds
lods
sub
shll
jno
imul
xor
test
sub
ja
insb
out
pop
insb
mov
push
insb
jns
xor
dec
sub
sub
sbb
push
mov
sbb
jns
sbb
lret
sbb
popa
mov
lods
aad
sti
push
leave
pusha
insl
lret
adc
addr16
nop
std
jp
imul
sub
or
lcall
shl
and
jp
push
xchg
bound
pop
fstpl
xor
out
mov
jae
cld
sub
scas
add
fst
cmp
xor
fildll
sbb
dec
ror
sbb
add
lret
push
aad
icebp
leave
hlt
imul
pop
dec
jge
sub
jge
int3
stc
insl
ret
xor
popf
mov
push
push
inc
out
fwait
pop
pop
adc
fwait
and
and
inc
ds
lret
insl
mov
ficomps
les
lods
aas
int3
adc
and
add
test
jnp
pop
subl
jnp
fwait
add
push
test
sub
lret
xchg
or
xchg
js
or
adc
mov
out
dec
daa
fdivrs
cmp
addl
stos
aam
gs
xchg
or
pop
das
mov
xchg
outsl
cmp
or
dec
pop
cltd
stos
sub
sti
and
push
xlat
lods
dec
cmp
fs
dec
pop
xor
ds
stc
and
aad
jmp
arpl
mov
mov
stc
in
mov
mov
dec
pop
sub
sub
data16
les
sub
cmpsb
or
mov
stc
adc
pushf
sub
fsubrl
mov
and
test
test
mov
call
bound
cmc
lea
mov
gs
inc
imul
sub
arpl
mov
out
mov
dec
in
mov
stc
pop
repnz
test
dec
adc
sbb
mov
pop
mov
loopne
jmp
mov
movsb
fidivs
insl
je
outsl
imul
cltd
push
pop
gs
outsl
mov
pop
mov
xor
repnz
add
and
xor
xchg
int3
xchg
fistpll
sub
cwtl
dec
icebp
daa
push
pop
jae
lea
sub
pop
cmp
pop
fnstsw
test
leave
and
push
push
push
push
movsb
sbb
and
sbb
out
adc
sub
jg
lods
xor
sbb
sub
mov
vpcmpeqb
jmp
xor
jl
jb
outsl
xor
lock
push
mov
int
dec
pop
nop
pop
fnstenv
hlt
cwtl
data16
sbb
and
xchg
test
push
mov
push
sub
jmp
mov
dec
fidivrs
loop
popa
popa
mov
lods
pusha
or
cmp
sbb
jbe
dec
movsl
loope
push
pop
data16
out
xor
stos
xor
hlt
repz
shrl
movsb
cmpsb
popa
arpl
adc
movsl
mov
xchg
lock
xor
insl
sub
dec
cltd
bound
lods
inc
push
gs
adc
cmp
and
sub
sub
xchg
inc
mov
popa
sub
sub
loop
mov
fwait
or
stc
push
subb
call
or
cwtl
loopne,pn
rorl
loopne
jo
cmpsl
popa
sahf
daa
mov
and
out
sahf
xchg
cwtl
sbb
sub
mov
mov
xor
adc
loopne
adc
dec
adc
nop
adc
bswap
in
loop
inc
ficoms
push
push
mov
xor
insl
ljmp
pusha
push
in
push
insl
in
lea
imul
push
xchg
adc
imul
mov
loope
test
sbbl
sbb
pop
push
jbe
adc
ror
sub
sti
int3
dec
popa
ret
jl
jge
jnp
sub
ret
mov
add
and
pushf
inc
in
loopnew
sbb
rcrl
data16
lea
mov
scas
and
jecxz
test
sub
dec
fwait
imul
hlt
fisubs
and
xor
fcompl
jge
inc
xor
cmp
inc
sub
mov
popl
xor
shl
clc
pop
add
push
add
in
and
mov
scas
add
mov
push
test
imul
movntps
imul
cmpsb
adc
stc
or
jmp
repz
jno
aaa
sub
add
mov
stos
mov
in
pop
cmp
inc
fwait
push
sub
adc
adc
nop
mov
fisubrl
jg
testb
xchg
pop
xor
xor
scas
dec
repnz
mov
icebp
sahf
inc
sub
popa
imul
pop
pop
in
daa
insl
lret
js
xchg
dec
push
push
dec
push
inc
xor
dec
dec
fnsave
inc
inc
push
sbb
aas
sub
arpl
jno
mov
cwtl
daa
in
popf
out
xor
dec
data16
loopne
xchg
jae
cld
clc
jmp
mov
std
pop
and
xchg
sub
divb
popa
dec
dec
add
inc
inc
ret
xchg
lock
push
jnp
jmp
mov
test
push
dec
nop
daa
stos
xor
pop
and
inc
add
jne
out
repnz
sub
mov
repz
shll
stc
out
mov
stos
fiadds
jbe
in
xor
add
inc
push
dec
dec
arpl
andb
mov
add
mov
mov
ret
les
or
into
inc
lea
jbe
adc
or
int3
insb
fistps
nop
pop
adc
insl
dec
push
stc
mull
jb
daa
je
inc
fwait
mov
sbb
gs
fldenv
dec
jl
hlt
ds
xchg
icebp
lahf
test
bound
scas
and
ds
jge
mov
sbb
sbb
add
and
jae
jmp
xchg
dec
fdiv
inc
cmp
push
and
adc
dec
repnz
cmp
lock
pushf
push
xor
push
ja
fcomps
popa
mov
and
add
or
jne
inc
mov
mov
negl
sub
xchg
dec
subb
ret
sub
into
add
movsb
arpl
lods
push
push
shll
int3
push
mov
add
xor
dec
arpl
add
inc
push
jb
in
push
test
in
xor
push
shrb
call
pusha
sub
mov
movsl
aam
push
repz
jb
adc
jno
push
shrl
mov
lea
aaa
cmp
ljmp
insl
mov
cld
push
mov
movaps
push
scas
sub
jnp
inc
jl
fisttps
sahf
mov
imul
gs
aaa
sahf
std
aas
in
jb
js
push
arpl
nop
and
mov
adc
pop
in
insb
in
incl
outsl
loope
cmpsb
fisubrs
das
mov
arpl
xor
sub
mov
xchg
and
fldcw
data16
dec
pop
fimuls
xchg
xlat
movsl
lods
pop
push
push
scas
add
out
or
ja
lock
loop
inc
jle
test
pop
mov
popa
lea
mov
push
xorl
shr
vpshad
dec
icebp
sahf
push
gs
repz
jge
out
imul
sub
fmuls
popa
push
insb
imul
jno
stc
repnz
mov
cltd
cmp
mov
jnp
xor
jno
jl
out
sbb
adcl
pop
ljmp
xor
popf
repnz
push
out
por
adc
cmp
add
repz
adc
inc
push
pop
outsb
cmp
and
outsb
inc
mov
cs
inc
cld
pop
and
clc
insl
andl
mull
pop
lret
push
out
cwtl
gs
outsb
popf
push
lret
imul
sbb
mov
orl
outsb
pop
cltd
dec
dec
cmpsl
adc
xor
push
jmp
xchg
sub
aaa
rclb
ja
fs
shll
add
out
cmp
outsl
mov
or
mov
jle
jb
iret
icebp
pop
inc
inc
pop
and
dec
adc
xor
arpl
sub
ljmp
add
xlat
mov
pop
jle
add
fbld
lods
pop
pop
lds
pop
outsb
clc
cmp
dec
mov
mov
xor
popf
xor
ret
add
push
arpl
insb
daa
insb
jae
fistpll
mulb
adc
sub
cmp
insb
add
in
lods
xor
in
sti
popa
jmp
roll
xchg
push
pop
dec
scas
xor
sbb
repz
jae
fs
jno
push
cli
jecxz
pop
hlt
or
daa
and
arpl
cmp
stos
dec
bound
icebp
orb
xor
or
outsl
mov
mov
call
mov
stos
mov
sbb
lods
adc
int
icebp
mov
adc
inc
movsl
insl
insl
icebp
fs
in
mov
das
push
push
int3
fsubr
call
loopne
insl
xor
adc
xor
add
fsubrp
jge
xchg
adcl
pop
inc
xchg
iret
call
add
in
aam
dec
inc
inc
cmp
xor
cmp
jae
pop
pop
cmp
lods
pop
xchg
aam
adc
or
sbb
cmp
cmp
add
cli
ljmp
jno
aaa
imul
insb
mov
push
jmp
stc
mov
jmp
clc
cltd
mov
pop
and
lods
sarl
dec
loopne
out
jnp
push
fsubl
insb
ja
push
out
imul
lret
lods
clc
jne
sub
xchg
pop
jno
pushf
push
push
pop
imul
out
jmp
lock
or
hlt
xchg
add
hlt
dec
add
adc
es
sbb
xchg
jno
filds
dec
js
jno
lea
les
pop
push
faddl
cmpsb
loope
ds
dec
xlat
es
lcall
cmp
ljmp
ljmp
cli
hlt
add
fdivrl
int3
gs
cmpsl
dec
and
cwtl
repnz
pop
push
inc
push
dec
sahf
jecxz
sub
push
dec
sub
jo
fwait
inc
aam
sbb
mov
xor
fldenv
shrb
mov
jg
cmpsb
dec
insl
rcl
gs
insl
xchg
push
filds
movsl
fwait
xor
sub
push
data16
js
aam
ja
jne
lahf
lds
call
xor
jns
into
mov
cmp
pop
add
cmpl
insl
data16
jae
push
repz
mov
jecxz
push
add
jbe
repz
mov
dec
mov
xchg
xchg
add
mov
inc
mov
dec
test
cmpb
mov
cmpsb
push
cmp
inc
xchg
out
mov
stc
cmp
sub
inc
xor
mov
arpl
test
insl
add
and
into
jns
xor
mull
mov
dec
adc
push
jg
lahf
push
mov
and
aad
scas
mov
das
mov
inc
pop
sbbl
cmp
in
cli
add
loope
shrl
js
pushf
mov
dec
sub
jnp
or
mov
xchg
pop
ja
dec
sahf
popa
lret
in
cmp
in
gs
inc
xchg
sbb
add
stos
inc
mov
xchg
sbb
jno
insb
xor
push
stos
xor
jecxz
insl
int
imul
je
aas
xchg
pop
or
push
jne
jo
das
insl
dec
add
sbbl
dec
cmp
jno
sub
push
insb
in
int
push
xchg
in
mov
sbb
jmp
repnz
sub
xchg
dec
sub
in
xchg
pop
mov
and
xchg
cmp
cmc
pop
xorl
adc
mov
push
gs
adc
ljmp
fldl
inc
push
mov
arpl
js
test
adc
jmp
push
data16
dec
mov
popa
add
mov
lods
inc
bnd
mov
pop
mov
inc
imul
pushf
sahf
push
pop
and
xor
fbstp
sbb
add
inc
or
sbb
mov
pop
andl
mov
or
jae
and
out
jns
sub
cmp
rcr
ljmp
mov
mulb
loope
cmp
inc
out
cmp
add
or
test
repnz
jmp
xchg
shll
jae
mov
pop
aad
rorb
imul
scas
mov
test
aam
mov
clc
mov
mov
pusha
dec
cmp
sub
jno
in
mov
psadbw
sub
or
in
mov
decb
rorl
popa
lds
ja
mov
mov
pop
movl
lahf
xchg
out
inc
sub
mov
inc
add
mov
xor
cmpsb
stos
and
cmp
dec
adc
addr16
jae
xor
lret
in
scas
ret
xor
aaa
test
push
push
dec
arpl
mov
ljmp
xlat
aam
dec
inc
les
add
and
bound
push
wbinvd
lret
pusha
loop
mov
dec
mov
mov
jmp
into
pusha
and
jbe
lret
rorl
mov
mov
jmp
inc
jnp
pop
lea
mov
xor
jmp
cmpsb
xchg
xor
in
popa
jae
push
dec
ret
js
dec
xor
out
in
das
or
cli
imul
sub
pop
icebp
jmp
lcall
mul
mov
and
push
scas
jno
in
jp
je
pop
daa
and
push
inc
mov
mov
sbb
movl
inc
jnp
loopne
push
leave
sub
sub
fwait
in
mov
jg
cmp
clc
aaa
dec
push
and
aad
sub
test
scas
lods
adc
add
add
scas
mov
imul
jo
mov
jg
adcb
aas
push
in
cmp
xor
arpl
cmp
mov
xchg
mov
loopne
test
mov
inc
dec
and
imulb
dec
gs
js
dec
sahf
jp
arpl
mov
xor
test
popa
fisubs
loop
sub
mov
mov
sbb
add
add
cmp
lods
inc
hlt
dec
pop
ja
mov
xchg
inc
xor
pop
pop
push
les
dec
es
sbb
nop
mov
push
das
loopne
and
in
xor
and
pop
cmp
mov
jno
mov
mov
and
jg
test
sbbl
jno
les
xor
cmpsl
sub
inc
movsb
jg
call
cwtl
test
xor
fsub
in
mov
mov
lahf
dec
int
jmp
in
jmp
bswap
roll
pop
shll
frstor
inc
sub
clc
data16
adc
or
arpl
pop
into
div
pop
jbe
push
sbb
pop
gs
jns
dec
mov
push
inc
and
aad
push
mov
jecxz
mov
push
imul
mov
imul
sub
sbb
test
mov
out
dec
aas
jbe
ret
mov
lds
cmc
mov
les
ficomps
shll
js
fwait
lock
and
imul
cmp
xchg
mov
mov
bound
push
fiaddl
imul
out
and
dec
ljmp
lret
arpl
jge
test
cmp
data16
xor
pop
pusha
mov
and
jno
repz
push
and
push
cmp
gs
jae
add
cmpsb
mov
add
rcrb
gs
cmp
mov
insl
in
inc
pop
test
icebp
outsl
jbe
shll
mov
cmpsb
stc
repnz
loopne
push
call
or
jbe
pop
jge
jno
fwait
test
jp
inc
shl
mov
scas
fs
inc
lea
pop
scas
pop
cmpsl
sub
in
dec
push
push
cmc
sarl
pop
sub
scas
push
fists
cmc
int
mov
push
jl
flds
adc
inc
fldt
xor
lret
inc
xor
mov
je
add
xchg
loopne
cmpsl
pop
jb
sub
movsl
sbb
jl
adc
xorb
jmp
out
out
arpl
insb
jge
xchg
cmp
das
ret
cmp
pop
iret
daa
ret
jmp
fs
and
fucomp
and
fcomps
test
call
pop
xor
inc
xor
mov
ror
adc
insb
add
mov
fcomp
roll
and
jg
dec
jge
dec
and
clc
cli
popa
outsb
mov
sub
outsl
imul
mov
es
sub
and
and
sub
fcomps
xor
jl
nop
pop
add
xor
xchg
sub
adc
in
xor
push
pop
push
lds
cmc
sub
jnp
xor
shll
and
dec
jge
push
call
jnp
lock
push
insl
pop
loopne
rcrl
insb
fisubs
repnz
lcall
lock
sub
sub
mov
pop
inc
pop
add
out
lds
scas
pop
inc
dec
add
and
lea
pop
or
test
sbb
dec
nop
push
cmpsl
aam
cmp
call
and
mov
mov
jge
imul
or
mov
data16
and
adc
xchg
dec
setnp
aaa
or
les
mov
mov
sub
aaa
dec
cmp
mov
pop
in
dec
or
pushf
jmp
test
int
dec
out
push
cs
repnz
push
gs
es
sub
jmp
xchg
jb
lds
sub
test
add
bound
hlt
inc
test
ja
stos
adc
sub
lahf
repnz
pcmpeqd
jae
negb
icebp
add
mulb
inc
xorb
subb
push
sub
stc
pusha
mov
cmp
xor
dec
sub
pusha
in
inc
jecxz
push
or
sbb
popa
push
sub
call
cmpsl
jo
pushf
xchg
test
pop
outsb
call
test
sti
dec
lret
in
cmc
xor
lods
dec
and
jno
pop
and
lods
or
and
sub
xor
inc
lds
test
fistl
js
add
push
add
repnz
pushf
mov
jle
lahf
sub
loope
popf
es
fsubrl
xor
idivb
aam
lods
imul
xchg
dec
shlb
push
push
iret
fsubl
repz
es
dec
idiv
jb
push
daa
das
xor
sbb
imul
movl
ja
or
mov
add
int
mov
cmpsl
mov
xchg
add
and
pop
xor
cmp
sub
adc
mov
popa
and
jns
sbb
gs
je
inc
jno
daa
mov
lret
mov
and
subb
pop
dec
loop
push
inc
lods
push
loopne
sub
and
dec
xor
repz
cmp
rolb
xchg
roll
out
pop
adc
inc
fadds
arpl
push
sbb
push
es
add
or
push
lock
sub
xchg
inc
sub
jnp
lcall
pop
xchg
in
and
gs
push
mov
ror
jg
or
movsl
sbb
int3
pop
aaa
jge
outsl
scas
inc
sub
or
mov
imulb
mov
cld
sub
stos
and
mov
test
pop
sub
loop
mov
fs
xchg
imul
lret
adc
xor
dec
mov
ftst
ljmp
scas
push
movsl
push
fcomps
adc
mov
mov
daa
gs
lea
fistps
mov
push
xor
das
xchg
lret
mov
stos
mull
pusha
cmp
nop
dec
inc
xor
jecxz
or
stc
sbb
aam
scas
sub
loopne
xor
mov
cmp
xor
cmp
jno
sub
inc
sbb
pop
sub
iret
mov
push
imul
loope
xchg
mov
add
pcmpgtw
jns
or
pop
stc
in
xor
xchg
xor
loop
add
stc
cmp
lea
movsb
repz
nop
outsb
aaa
lret
fsubp
insb
lock
inc
repnz
mov
xor
inc
lret
or
jne
in
xor
enter
adc
pop
in
lret
rorl
adc
sub
mov
pop
fisttps
pop
dec
push
sbb
out
dec
sarl
lret
cvtps2pi
mov
jmp
adc
push
jmp
fs
mov
jb
xor
das
jae
xor
mov
dec
push
lcall
jno
jmp
popa
jmp
pop
negl
inc
and
orl
sbb
pop
movsb
aam
xor
jns
sub
aas
test
cmpsl
adc
adc
ret
jae
divl
data16
popa
mov
cmc
in
sub
push
inc
push
pop
jbe
ss
movhps
pop
cmp
mov
in
adc
pusha
inc
dec
lods
inc
aad
movsb
push
xchg
sub
mov
add
sub
dec
adc
mov
je
inc
iret
insl
sub
pop
cwtl
sub
insl
insb
imul
lret
pop
roll
aaa
jle
adc
aas
adc
jae
test
roll
cld
cmp
imul
sahf
dec
cld
mov
je
and
inc
push
xchg
pop
rcr
pop
or
inc
mov
lea
arpl
xchg
cwtl
mov
sub
test
in
mov
in
mov
dec
cltd
add
out
and
sbb
xor
repz
in
outsl
inc
sub
xor
in
clc
gs
stos
into
dec
loop
adc
sub
shld
aam
sub
jmp
sbb
jb
repz
popa
outsl
movsb
ret
outsl
fcomps
add
push
xchg
out
mov
fdivl
ljmp
add
shll
es
push
or
lods
push
push
xchg
and
jns
pop
test
xorb
mov
mov
std
and
pop
jle
cmp
hlt
mov
pop
cmp
sub
xchg
inc
loope
adc
or
sbb
push
and
insl
dec
push
and
cmp
test
ss
ret
addr16
fiadds
fidivl
inc
test
pop
add
add
cltd
pop
es
xor
inc
lea
shrb
mov
mov
sahf
sbb
jmp
loopne
pop
xor
xchg
xchg
dec
pop
inc
sub
in
or
or
pop
pop
lods
push
cs
or
xor
ja
lods
in
sbb
and
add
xchg
fucomp
fbld
push
ret
add
aas
stc
adc
pop
lock
mov
insl
mov
cmp
sub
dec
inc
nop
das
pop
xor
add
push
inc
jmp
fcmovnbe
popa
insb
stc
gs
add
mov
inc
cmp
pop
dec
add
outsb
push
data16
fcoml
jbe
iret
sahf
fs
adc
cltd
xor
inc
cmp
gs
in
push
iret
mov
mov
repnz
imul
add
nop
lret
idivb
rclb
sub
cs
sbbb
insb
iret
add
xchg
leave
shl
loopne
fs
pop
mov
test
and
cmp
lea
mov
dec
adc
jge
bound
sub
mov
in
xor
stc
pop
cmpb
stos
addl
xor
orb
or
add
mov
repnz
icebp
adc
daa
gs
js
cmp
mov
xor
fldt
jae
cmp
pushf
sbb
mov
shl
add
xor
repz
jns
outsb
lea
popf
pop
jno
lret
ja
xorl
fs
sub
jno
dec
mov
or
dec
jle
or
decb
mov
push
mov
inc
mov
das
divl
pusha
cmp
xchg
test
lea
pop
repnz
btr
out
in
cli
mov
popf
cli
push
insb
and
mov
xor
mov
push
lahf
add
pop
shl
fidivl
shrl
pop
cmpsl
or
mov
lret
cld
rcrb
xor
cli
es
sub
int
lds
cmc
cld
data16
jmp
jmp
jmp
fwait
mov
dec
add
lea
test
sub
push
outsl
daa
dec
nop
out
mov
jb
loop
inc
xor
aaa
add
mov
jg
je
jns
arpl
mov
dec
jae
push
mov
sarb
scas
adc
cmp
imul
out
sub
jge
movsl
fs
pusha
addr16
lods
xor
xchg
fnstcw
add
cmp
mov
in
inc
inc
and
fnstcw
insb
push
pushl
hlt
sub
mov
punpckhwd
dec
test
jge
sbb
leave
insl
jle
push
pop
and
je
pop
loop
pop
push
lahf
insl
or
dec
stc
fiaddl
mov
sbb
gs
mov
lds
filds
inc
rcl
sub
fldcw
sub
xor
xor
push
sub
fdivl
mov
xor
jecxz
in
sbb
ret
sahf
insb
or
cmc
movsb
cmp
inc
sbb
jg
xor
aaa
xchg
add
mov
mov
jbe
gs
sbb
and
setne
mov
xchg
shll
loopne
scas
loop
roll
in
mov
jecxz
rolb
pop
push
shlb
push
mov
pop
mov
jmp
pusha
repnz
sub
sub
arpl
dec
pop
in
push
outsb
inc
pop
mov
aad
outsl
jo
pop
xchg
lods
movsb
pop
xor
sub
jmp
aad
idivl
add
out
mov
loope
jnp
pop
mov
push
sub
cmpsl
out
jns
cmpsb
insb
loop
in
add
push
sbb
push
outsl
pop
mov
fldl
ss
mov
push
sbb
or
scas
lds
das
adc
pop
in
sbb
dec
shll
daa
xchg
gs
jl
in
icebp
or
push
mov
sbb
outsl
hlt
push
and
jl
jno
notb
pusha
outsb
jmp
bound
pop
sub
pop
adc
or
adc
sub
mov
imul
mov
jl
and
out
cmpsb
repz
scas
jae
sub
cltd
lea
mov
or
xor
dec
sub
stos
popa
jp
mov
mov
fbstp
faddp
clc
hlt
push
sub
mov
enter
dec
daa
adc
aas
jge
fdivl
push
adc
popa
cmpsl
ret
sbb
cmp
or
in
sub
xchg
cwtl
je
lods
fisttpll
xchg
popa
insw
sbb
lahf
test
jne
mov
pushf
in
xlat
cmp
movl
add
cmp
scas
into
stc
stos
or
dec
xor
cld
pop
fwait
dec
adc
mov
int
jbe
lods
dec
mov
push
and
daa
fistpll
inc
pop
push
popa
push
les
mov
mov
inc
jle
mov
lds
out
xor
in
out
cmp
into
pop
pop
ljmp
sbb
pop
sbb
pop
or
pop
ja
push
sarl
cmp
imul
out
pop
stos
xchg
pushf
xor
mov
sbb
fisttps
scas
xor
int3
inc
pushf
inc
mov
push
cmp
add
dec
push
in
and
and
imul
pop
nop
xor
mov
cmp
scas
insb
repz
shrl
pop
call
and
in
divb
cmpsb
pop
pop
mov
dec
and
push
arpl
mov
add
gs
rcll
movsb
aas
mov
inc
movsl
push
cmp
xor
les
sub
sub
hlt
inc
test
lea
jg
lds
gs
addl
sbb
pop
mov
test
int
and
dec
xor
pop
daa
fcmove
push
iret
pop
addr16
sbb
popf
mov
popa
inc
scas
xor
mov
mov
push
popa
add
mov
and
movl
gs
push
sbb
mov
sub
push
out
adc
mov
jb
push
ret
outsl
psraw
xor
push
cmp
cld
push
or
jae
loope
push
push
xchg
jmp
or
lea
std
sub
jmp
jae
dec
push
sbb
aas
lea
insl
mov
call
inc
cmp
rol
push
jae
mov
lods
xor
inc
out
mov
xor
in
add
mov
daa
daa
je
jecxz
jb
subl
mov
mov
rorl
dec
sub
jno
cwtl
sub
pop
push
jb
fsubrs
cmc
divl
adc
xor
sbb
dec
dec
mov
cmpsb
or
cmpsb
clc
fcomps
lods
out
or
jbe
push
lods
mov
jge
sti
sub
scas
es
mull
mov
int3
popa
xor
and
popf
cs
or
add
dec
sahf
sbb
ficomps
aaa
mov
push
inc
movsl
lcall
mulb
dec
fsubs
dec
cs
sub
leave
sub
fwait
pop
sub
push
es
insb
push
imul
mov
add
cmpsb
or
cmp
aad
jno
or
js
rcll
fs
movsl
mov
cmp
enter
push
roll
popa
fadds
xor
push
loop
mov
and
push
push
in
das
mov
mov
or
or
dec
arpl
arpl
push
sub
andl
pusha
lock
fcomi
dec
jbe
stos
push
ja
sbb
dec
clc
jb
imul
pop
mov
xorb
insb
cld
inc
add
imul
cmp
les
loopne
inc
and
insb
in
lahf
xor
mov
jmp
lret
shlb
jae
sarb
lods
addr16
in
xor
call
dec
roll
inc
mov
inc
scas
adc
jb
and
mov
in
sbb
dec
add
sbb
in
fdivl
jno
outsl
shl
mov
cwtl
mov
shlb
subl
inc
mov
push
jo
add
fisttps
push
cmp
cmp
mov
movb
loopne
push
lret
xor
or
insl
jns
adc
mov
movsb
aad
dec
or
dec
sbb
push
lahf
jbe
sub
xchg
mov
xchg
push
lds
outsb
push
inc
in
pop
jl
repz
mov
insl
dec
enter
push
push
sbb
roll
std
xor
sbb
jle
xor
push
or
mov
and
jb
jge
push
fisubl
push
pop
inc
jb
cmc
cmpsl
dec
push
daa
icebp
jg
int
fnstenv
jbe
imul
adc
mov
sbb
sub
xchg
mov
adc
jg
ja
and
in
mov
fiadds
xchg
push
pop
ja
sub
test
inc
adc
shlb
and
pop
out
leave
lea
rolb
icebp
push
out
mov
add
into
jl
les
int3
dec
dec
outsl
xchg
fldl
add
mov
mov
std
adc
and
inc
dec
out
jb
or
jns
inc
rorb
jge
adc
add
shrb
lea
hlt
mov
repnz
or
adc
testb
cmp
adc
stos
popa
and
gs
sarb
sub
inc
dec
daa
mov
jne
imul
loopne
adc
pop
in
sub
pop
lods
sub
dec
cmp
cmp
js
pop
outsb
iret
pop
fnop
dec
pushf
and
inc
push
loopne
xchg
pop
fildl
xchg
push
xor
cs
and
stos
pop
mov
mov
pop
in
mov
mov
dec
data16
out
movsl
push
jl
jns
test
imul
or
enter
ds
dec
lret
cmp
mov
mov
cli
jns
repz
pop
repz
push
push
int
insb
popa
lcall
bound
je
cmpb
rcll
sbb
insl
adc
mov
cs
scas
cmc
sub
sbb
adc
call
push
shl
popf
lods
mov
gs
stos
arpl
data16
pusha
dec
in
xor
inc
and
lods
push
test
dec
push
adcb
push
stc
clc
push
cltd
sbb
and
xor
and
std
cmp
fwait
movsb
push
cmpsl
jg
jnp
add
add
ror
add
pop
outsl
xchg
push
pop
xor
in
pop
jno
les
push
lock
rorl
sub
push
jp
fwait
cmp
pop
lock
mov
cmp
aaa
gs
out
fbstp
int3
adcb
adc
stos
sub
xor
stc
pop
push
jg
or
jno
dec
pop
adc
mov
outsb
pop
imull
adc
mov
aas
lcall
push
sbb
mov
push
jg
jg
icebp
rorb
lods
out
inc
imul
lcall
testl
cmc
stc
fwait
cld
push
dec
movsb
jnp
inc
jb
in
icebp
sarl
and
push
ds
xor
jb
mov
pop
lods
gs
pop
or
lock
pop
pop
pop
xor
sub
imul
negl
and
pop
inc
and
pop
push
inc
shll
xor
cwtl
fdivrs
repnz
fsts
mov
xor
inc
std
inc
insl
insb
sbb
sub
mov
adc
dec
lods
xor
mov
cmp
adc
dec
mov
push
sub
ffreep
sub
jno
scas
hlt
and
cld
adc
movsb
call
adcb
pop
js
add
int
sbb
and
add
xor
or
pop
pusha
insl
aaa
pushf
clc
pop
jge
pop
cmpsl
sub
mov
push
lock
mov
popa
stos
lret
mov
adc
imul
add
xchg
insl
imul
xor
dec
sbbb
arpl
mov
cltd
jae
add
leave
stc
jae
fmull
sbb
push
mov
fimull
xchg
jge
push
jo
lea
cmpl
shlb
loop
dec
sub
int3
das
and
pop
lahf
pop
pop
bound
vphsubwd
jmp
push
xchg
rcrl
push
aam
inc
xor
jnp
push
jnp
pop
cmp
pusha
jecxz
gs
xchg
das
dec
dec
inc
sbb
outsl
pop
cmc
mov
sub
je
jge
sarb
test
cld
mov
dec
repz
pop
cmp
cmp
jmp
sub
adc
and
mov
adcl
mov
cmc
sarl
in
pop
shl
cmpl
test
or
push
out
cmp
addr16
lds
cmp
add
push
scas
push
lahf
imul
movsl
insl
mov
mov
lret
outsb
fsts
daa
lds
and
mov
mov
clc
insb
aaa
push
insb
ret
dec
mov
push
inc
pop
in
dec
nop
mov
jmp
cmp
stos
jmp
ljmp
inc
adc
imul
pusha
repz
iret
sub
jecxz
shrb
and
iret
add
pop
loop
and
enter
mov
int
icebp
aam
rcll
in
dec
cli
dec
rolb
mov
mov
sbb
dec
orl
lahf
insb
adc
mov
aas
gs
adc
jnp
dec
mov
sub
push
aas
cmpsl
test
fwait
push
lds
in
test
sub
inc
mov
mov
xor
arpl
sub
lods
mov
xor
and
mov
fldcw
jmp
aam
and
daa
test
lahf
int
pushf
es
push
int3
sbb
inc
sub
sbbl
pop
mov
sub
inc
icebp
push
ljmp
pusha
lock
lea
fstl
cmp
sub
out
daa
sbb
out
mov
and
pop
daa
adc
movsb
jg
in
push
sbb
loopne
in
jno
dec
pop
or
mov
out
in
jae
lock
je
push
push
or
sub
jge
pushf
mov
inc
repnz
pop
icebp
push
inc
sti
inc
inc
and
imulb
adc
xlat
stc
inc
mov
loopne
inc
jle
mov
jmp
jl
push
inc
les
cmp
out
enter
popf
xchg
mov
pop
jo
and
sbb
mov
and
mov
dec
mov
adcb
xor
pop
jo
add
mov
sbbb
out
test
mov
and
cmpsb
loopne
out
imul
test
icebp
cmpsl
lahf
xchg
pop
push
in
mov
xchg
in
cltd
fistps
in
and
in
sbb
inc
sbb
outsl
xchg
jecxz
pop
int3
mov
hlt
stos
lret
sbb
adc
movsl
inc
push
mov
iret
and
arpl
sub
call
pop
sbb
mov
mov
incl
sbb
and
sub
inc
add
inc
add
or
fists
inc
sbb
and
outsl
sub
push
ljmp
lds
pop
mov
or
out
cli
jmp
in
hlt
push
imul
and
fptan
imul
mov
sbb
loopne
loope
xchg
lods
pop
or
lea
sub
and
mov
ffree
imul
dec
jns
cltd
xor
and
stos
lret
pop
pop
jmp
lretw
and
gs
sub
jno
mov
ljmp
mov
lea
fbstp
push
ds
das
stc
add
mov
push
in
mov
pop
lcall
arpl
pop
imul
sti
add
enter
popa
cmp
lahf
or
pop
popa
je
sub
out
push
jae
xor
gs
push
cmc
jb
xor
add
cmp
decb
adc
add
inc
xor
outsl
arpl
pop
cmp
insl
add
push
and
mov
add
repz
loope
stos
xor
adc
xor
cmp
mov
mov
push
push
aaa
cltd
repnz
insl
mov
out
mov
lock
out
ret
jle
ljmp
mov
mov
pop
mov
xor
andb
sbb
sub
sub
imul
sti
xor
xlat
dec
in
ret
add
push
or
mov
rolb
cwtl
sub
pop
push
cld
adc
ficompl
inc
loopne
sub
push
push
data16
dec
add
cmpsl
mov
jecxz
fstl
loope
shlb
xor
jo
in
and
xor
inc
lcall
jbe
int
inc
les
or
add
shrb
gs
sub
cmc
jo
out
xorl
dec
mov
data16
sub
pop
xor
jbe
sub
inc
push
loopne
hlt
dec
xor
xchg
pop
jg
and
push
je
mov
push
std
and
xor
push
in
and
icebp
popa
lods
jmp
inc
call
pop
mov
ljmp
xor
inc
lea
push
jbe
jmp
shrl
add
xor
pop
hlt
xor
mov
fdivl
mov
mov
sarb
push
mov
pop
xchg
mov
ljmp
in
push
in
pop
das
xor
mov
sbb
and
imul
in
fucom
push
sub
adc
outsb
out
and
push
and
add
loopne
je
push
mov
cmp
push
dec
jnp
push
mov
pop
je
mov
je
jae
cltd
pop
fisttpll
bound
dec
jno
jle
je
int
add
sbb
in
sbb
std
out
mov
mov
push
add
lods
mov
sbb
xchg
dec
cltd
out
add
lods
mov
in
popf
mov
push
imul
sbb
inc
pop
cmp
adc
out
insb
lcall
or
in
mov
dec
les
cmp
add
xchg
pusha
and
lea
pop
push
pop
mov
dec
cwtl
clc
mov
adc
mov
pop
jno
pop
lea
imul
dec
movsb
clc
lods
dec
popa
sti
ficoml
jecxz
test
and
imul
push
into
arpl
lea
jae
sbb
xor
gs
shll
lods
or
and
arpl
int3
sbb
rol
gs
icebp
call
dec
rorl
icebp
rorb
and
jo
in
or
mov
add
and
push
and
repz
mov
aas
loop
jg
lahf
mov
movsl
push
das
push
ja
jecxz
mov
pop
out
popf
dec
popa
fists
cmpsb
lods
movsl
mov
xchg
jo
in
fsubs
or
adc
repz
add
rolb
cmp
ljmp
loopne
push
nop
popa
mov
sahf
adc
test
popf
lods
std
imul
adc
hlt
adc
lea
pop
add
and
xchg
mov
cmp
fldcw
jp
adc
fldlg2
js
dec
lods
insb
popa
in
pop
or
bound
gs
arpl
aas
pop
ljmp
and
mov
test
fmul
ds
lds
mov
pop
addr16
ret
lds
dec
mov
scas
mov
mov
xchg
lcall
loopne
and
push
pop
or
inc
cs
pop
mov
xchg
in
repnz
jl
bound
push
mov
imul
rcrl
pop
mov
or
iret
cmp
ror
ret
imul
cltd
iret
ds
push
cmp
add
movsb
push
inc
outsl
jge
outsb
callw
ds
js
xchg
out
jp
mov
xchg
sbb
popa
or
mov
cmp
rclb
mov
inc
sub
mov
pushf
aad
pop
gs
add
jmp
jmp
adc
lods
or
sbb
dec
fadds
add
jmp
mov
push
xor
push
hlt
sbb
loope
xor
ljmp
pop
jmp
cltd
or
movsl
clc
outsb
insl
cld
cltd
jmp
jne
cmp
add
sahf
lahf
mov
mov
or
in
dec
add
cmp
xlat
dec
test
or
or
int3
arpl
stc
push
pop
cmp
sbb
sbb
and
ret
movsb
inc
ret
or
outsl
cli
int3
mov
pushf
scas
xor
xchg
icebp
inc
fildll
sbb
in
insl
in
xor
mov
js
ja
sub
fwait
jo
ljmp
jmp
pop
adc
popa
lret
pop
aaa
xor
jae
mov
and
loopne
clc
and
or
bound
add
inc
movsb
and
dec
cld
subl
jb
lds
pop
xor
scas
xor
out
adc
jmp
pusha
push
out
dec
movsl
hlt
test
je
std
aam
pusha
inc
es
mov
stos
inc
sub
cmc
mov
insb
sub
loope
bound
cmp
mov
jge
jb
mov
sub
jecxz
popa
nop
push
mov
lea
sub
pop
cmp
repnz
cmpsb
cmp
cwtl
add
in
jnp
outsl
negl
out
cmpsl
mov
dec
add
lea
inc
adc
jle
xor
scas
in
jle
xchg
lods
shrl
dec
lea
jg
mov
xor
push
dec
in
mov
cmc
sub
fwait
icebp
insb
stos
dec
xor
mov
test
hlt
add
jmp
add
or
jo
icebp
push
mov
inc
lock
mov
sub
stos
scas
jae
add
xor
scas
mov
cmp
dec
and
xor
repnz
cmp
push
cmpsb
xchg
xchg
jnp
stos
sbb
push
insl
adc
jb
ret
pop
dec
je
push
shl
push
jno
out
mov
pop
int
pop
push
sub
or
mov
fisttpl
dec
test
imul
mov
xchg
aaa
test
aad
sub
or
push
pop
jb
mov
mov
jle
movsb
faddl
gs
pop
pop
xor
adc
mov
sub
xchg
jo
negb
ss
xor
pop
or
push
insl
dec
scas
cmp
mov
xor
and
lcall
and
xor
xor
pop
subl
and
fistpl
dec
inc
insb
loope
hlt
adcl
pop
lret
cmp
movsb
es
les
daa
pcmpgtw
popa
mov
fnstsw
mov
xor
out
push
lret
push
mov
test
xchg
dec
in
das
aad
scas
imul
pop
sbb
imul
dec
out
leave
jg
repnz
and
outsl
xchg
cmc
scas
pop
and
adc
notb
jge
jns
cmp
sub
and
and
scas
rol
cmc
ja
popf
xchg
imul
imul
sub
dec
cmp
in
cwtl
pop
sahf
gs
in
lods
jmp
inc
pop
push
adc
test
cmp
add
dec
cmc
add
xor
xor
int3
xor
sbb
inc
in
inc
cmc
mov
pop
dec
push
ss
xor
rclb
inc
shlb
lods
sarl
cmpsl
sub
cwtl
adc
and
ret
insb
xor
xchg
fs
and
loope
mov
push
push
dec
inc
lods
or
imul
adc
setg
cmp
jp
or
mul
fst
cmp
fwait
inc
pop
pop
xor
les
add
lock
decb
aad
push
jbe
pop
xor
pop
mov
and
add
jb
sbb
insl
test
dec
movsl
rcl
dec
out
in
or
jns
ret
inc
push
ljmp
test
les
sub
int3
leave
mov
push
pop
add
aam
das
popa
mov
or
mov
cwtl
les
mov
lret
mov
push
add
pop
movsb
add
and
mov
sti
aaa
rcrb
sub
xchg
imull
inc
and
xchg
mov
sub
jb
loopne
loop
in
imul
push
sbb
sbb
jo
lea
hlt
lret
popf
adc
jle
imul
mov
ljmp
inc
add
js
pop
inc
dec
mov
pop
xchg
lds
jb
test
pop
jmp
xor
aam
cmpsl
dec
stos
push
out
mov
repnz
xchg
pop
js
dec
mov
and
push
mov
in
insl
and
andl
movsb
sub
pop
add
dec
add
or
xchg
mov
and
test
shrl
jg
pop
in
push
mov
mov
push
data16
add
sbb
xchg
jae
inc
add
pop
inc
in
and
sub
pushf
mov
in
pop
sarb
pop
inc
movl
mov
fmuls
inc
in
xor
pop
test
xchg
or
pop
xchg
sbb
add
rcr
fs
mov
sbb
leave
je
imul
sti
sbb
repz
pop
jae
aam
lods
lahf
push
cmp
pop
lcall
flds
das
fcoml
xor
dec
jecxz
mov
xchg
mov
xor
xchg
inc
icebp
sub
pop
and
jg
mov
sbb
jb
inc
pushf
cmc
popa
jmp
loope
js
jae
lods
xor
cs
mov
pop
in
dec
lea
cli
and
and
sarb
imul
or
cld
pop
jo
das
clc
jb
ret
adc
dec
pop
xor
pop
inc
xor
push
fstl
mov
push
mull
xchg
ds
add
gs
test
xchg
mov
lea
out
pop
mov
xor
jno
arpl
outsb
sub
xchg
insl
inc
jae
aam
lods
enter
outsl
pusha
hlt
pushf
fdivl
and
mov
pop
mov
pusha
icebp
push
aam
pop
jb
dec
aam
int3
xor
pop
mov
aad
jmp
mov
jp
xchg
and
adc
shrl
addr16
push
and
scas
sub
inc
xor
push
lahf
icebp
cmc
mov
je
cmpsb
inc
sbb
imul
mov
mov
mov
mov
leave
inc
push
xor
int3
dec
dec
cs
cli
dec
adc
clc
pop
les
popl
adc
imul
lds
xchg
cmp
adc
dec
aam
and
outsb
out
pop
add
push
or
sbb
movsl
inc
hlt
das
cmp
dec
pusha
dec
mov
jmp
in
cmc
aam
push
mov
call
inc
inc
push
push
push
cmp
leave
repnz
data16
and
jmp
pop
lret
mov
scas
xor
cmpsl
mov
je
lea
jno
jns
mov
in
lahf
out
adc
int
push
and
cmp
sbb
sbb
mov
and
movsl
xor
lea
inc
cld
xor
jmp
jns
mov
push
adc
cmpsl
cs
repz
cmpsb
push
lods
fxch
lods
cmc
add
lea
scas
push
dec
jmp
mov
mov
jmp
push
fisubrl
adc
cld
xchg
add
loop
aas
pop
std
xchg
jg
cmc
lahf
popa
shl
mov
mov
test
add
dec
popa
clc
arpl
sub
insb
jno
xchg
mov
in
xchg
mov
sbbb
and
repnz
push
inc
insl
cmc
add
jno
gs
add
push
inc
inc
in
inc
imul
fadd
inc
lods
imulb
and
push
icebp
or
cmp
push
mov
xor
call
cltd
mov
xchg
xchg
call
push
pop
sub
bound
lea
popa
stos
mov
dec
push
pusha
mov
push
push
popa
test
loopne
js
push
mov
mov
or
lods
dec
push
mov
mov
mov
arpl
pop
add
outsl
in
sub
pop
pop
divl
xlat
pop
mov
nop
movsl
dec
jmp
in
sbb
imul
sub
and
sbb
mov
imul
das
push
dec
bound
ja
push
daa
adcl
sbb
in
rorl
adc
sbb
gs
xor
imul
ret
hlt
xor
dec
jl
sbb
and
inc
lret
push
jnp
scas
sub
jns
jae
cmp
xor
xrelease
xor
lock
jbe
iret
insl
push
or
pushf
sbb
pop
imul
movsl
lods
fists
mov
jle
xchg
stos
push
mov
adc
mov
push
jb
outsl
gs
rorl
sahf
div
pop
lea
jmp
jb
outsb
gs
mov
movsb
shrb
sahf
adc
pop
mov
outsb
dec
popa
inc
xchg
imul
jp
jle
push
push
sahf
and
jb
mov
fldenv
lcall
pop
data16
xchg
fs
jb
aaa
fwait
push
cmp
clc
popf
xor
das
push
xchg
cmpsl
mov
mov
mov
jnp
rcl
adc
insb
fwait
jle
fnstcw
inc
cmpsb
inc
js
sbb
mov
lock
sub
mov
xlat
gs
cld
dec
jb
lods
clc
push
shrl
push
inc
xlat
mov
mov
dec
scas
out
xor
imul
in
mov
das
push
inc
int
push
fs
movsl
mov
cmp
insl
je
das
js
xchg
xlat
xchg
cmp
mov
adc
movsl
xlat
loope
pushf
dec
mov
popf
fdiv
or
sahf
roll
pop
jb
jnp
orl
js
xor
aaa
xor
xor
repz
mov
and
mov
les
jbe
in
data16
stos
out
xor
flds
in
pop
mov
pop
xlat
scas
rcrl
xlat
loopne
cmpsb
xlat
test
inc
int3
pop
and
gs
in
pop
outsb
push
test
pushf
movsl
lret
lcall
jno
add
js
popa
jno
and
inc
jle
jp
loop
mov
mov
sbb
iret
lock
sub
cmp
mov
in
push
xorb
push
insl
shrl
sbb
inc
mov
test
jo
adc
adc
jg
push
insb
lods
pop
jge
cld
push
in
imul
popf
push
andl
les
ret
insl
pop
cmc
insb
outsb
aam
jb
cs
cltd
add
repnz
mov
sbb
dec
lock
mov
mov
mov
hlt
mov
scas
mov
lea
cs
xor
mov
jb
gs
lahf
mov
cld
rol
stc
sbb
ret
insl
mov
bound
scas
push
cvtps2pi
nopl
and
xor
pop
push
insb
andl
adc
sbb
in
daa
stos
icebp
cmc
aam
xchg
int3
test
arpl
clc
xchg
mov
pop
jb
push
lods
jp
mov
shrb
mov
adc
jp
xor
add
fnstcw
ret
and
jmp
cmp
push
jnp
inc
gs
ds
pop
gs
xor
shl
clc
sub
push
notb
movsb
jno
push
push
mov
lock
and
iret
je
pop
mov
xor
and
push
aaa
sub
lods
pop
adc
bound
xchg
int3
xchg
insl
out
iret
stos
dec
popf
pop
cs
iret
movsl
imul
gs
scas
jge
xchg
jns
cmc
insb
bound
scas
dec
jp
xchg
cmp
movsb
jno
jae
push
lock
push
mov
call
stos
popf
iret
rcrl
outsb
ljmp
push
jp
loop
jmp
dec
pop
mov
cmpsb
dec
lods
das
push
shll
cmp
jbe
sub
sub
rorl
mov
jg
sub
push
pusha
jecxz
push
shlb
mov
mov
rcrb
fmuls
lds
aaa
int
repnz
jp
sahf
xchg
dec
adc
movsl
int3
gs
imul
dec
add
in
arpl
inc
sub
mov
or
pop
insb
jno
ss
and
inc
lea
int3
fists
cmp
outsb
ljmp
test
stos
in
push
adc
xchg
pop
jge
outsb
ljmp
lcall
add
shr
pop
fs
push
and
in
stos
inc
outsl
and
jno
scas
neg
dec
jp
jne
lock
xchg
push
dec
mov
lcall
dec
aam
xor
mov
fstl
inc
pusha
sahf
push
inc
mov
push
xchg
arpl
js
inc
repz
rorb
jo
jo
in
jno
iret
cld
push
mov
xchg
and
pushf
bound
mov
data16
aaa
outsb
nop
arpl
lcall
adc
aas
hlt
lock
shrl
push
xor
arpl
lea
cmp
jecxz
sub
sub
and
pop
leave
mov
xchg
repz
mov
xchg
lods
ss
inc
das
pop
adcb
push
dec
xor
outsl
loop
sub
loopne
dec
lea
jbe
xor
cmc
imul
adc
xchg
stos
inc
stos
pop
push
jecxz
push
loopne
rol
xor
xchg
mov
xchg
push
dec
push
fbld
int
mov
jae
mov
sbb
or
and
cmpl
mov
dec
or
dec
or
imul
add
dec
inc
sub
stc
addl
decl
pusha
or
daa
add
xor
movsb
sbb
icebp
xor
add
lods
dec
adc
adc
or
push
fnstenv
push
pop
mov
arpl
popa
or
ja
and
stos
dec
add
cmp
fstps
inc
fstpl
aaa
frstor
jo
add
rolb
fs
daa
insb
xchg
pop
adc
add
cmp
and
jae
push
pop
mov
jl
sub
or
flds
push
pop
in
cmpsl
in
stos
dec
and
mov
sahf
dec
arpl
jl
fisttpll
nop
sti
adc
fxam
mov
add
dec
lods
xor
mov
lea
arpl
push
sub
xor
sbb
push
test
lcall
lods
dec
sbb
rolb
fwait
jo
push
jl
imulb
inc
pop
cli
cmpsl
add
push
imul
mov
dec
cmpsb
mov
lret
jae
pop
in
pop
sub
movb
movsb
push
fbld
dec
scas
jae
loopne
lret
push
sub
sub
push
cmpsb
addr16
jne
ja
mov
adc
mov
pushf
mov
mov
aaa
stos
mov
shll
dec
sub
add
in
and
mov
insl
nop
gs
insl
or
out
or
arpl
jae
sahf
add
mov
in
adcl
jg
mov
leave
jae
je
jb
xchg
ss
test
jo
mov
and
sbb
aaa
jbe
or
or
push
sarb
jbe
jns
mov
sbb
push
dec
add
jno
stos
mov
push
ljmp
outsb
mov
ja
fisttpl
sub
fisubrl
or
push
in
mov
jns
push
and
sbb
jp
leave
outsb
icebp
stos
es
adc
xor
pop
insb
adc
in
mov
xchg
sub
int
andl
inc
test
nop
loopne
dec
stos
lea
lahf
push
in
inc
add
sbb
outsl
movsb
mov
pop
adc
test
mov
add
mov
std
xchg
ljmp
jmp
jns
into
cmpb
lea
add
test
repnz
mov
sbb
scas
ficompl
test
aaa
mov
gs
push
inc
push
jmp
xchg
fiadds
dec
imul
adc
outsb
mov
loopne
fiaddl
fwait
sub
loope
jecxz
push
ud2
and
adc
imul
inc
xchg
mov
pushf
test
ss
scas
ja
dec
inc
pop
xor
cmp
cmp
add
pop
push
jb
lea
sbb
enter
mov
mov
and
out
sbb
dec
insl
inc
dec
adc
push
xor
lret
pop
hlt
lret
xchg
and
pop
data16
xor
fwait
movsb
xor
adc
mov
cmpsl
icebp
movsl
jmp
gs
in
push
mov
sub
mov
inc
in
and
jns
and
popa
loope
inc
dec
test
push
push
aas
insl
push
pop
shr
xor
mov
add
dec
inc
lock
mov
and
pop
add
fldl
push
out
dec
aam
xor
sbb
andb
test
xor
arpl
and
jp
pop
cmc
mov
mov
sbb
pop
js
subl
in
icebp
jg
dec
testb
insb
insl
and
mov
insb
ljmp
std
cmp
push
es
xor
stc
jb
arpl
sbb
mov
and
push
jno
push
and
mov
xlat
adc
cltd
out
int
jmp
clc
sub
gs
icebp
or
add
dec
sahf
scas
mov
popf
sbb
jns
inc
and
stc
divb
jno
mov
push
fdivrl
insl
mov
jno
sbb
aad
gs
xor
mov
lea
sub
and
shll
aas
lock
pushf
push
xchg
jbe
pop
mov
data16
aam
mov
mov
adc
stc
sub
dec
daa
jmp
in
out
out
fstpl
inc
jnp
lret
lahf
dec
mov
fdivr
es
test
inc
sbbl
xor
pop
jb
inc
jbe
and
repz
dec
dec
addl
xchg
out
test
jae
jl
in
push
xor
adc
xchg
jl
mov
xchg
and
pop
sbb
dec
or
out
movsl
loop
loope
pop
mov
sbb
and
pushf
lods
jno
lea
xchg
mov
pop
ljmp
jl
cltd
xor
loope
std
or
jae
mov
sub
xchg
xchg
es
fcompl
xchg
pop
negb
lea
push
rorb
std
and
ds
stc
cmp
push
mov
in
loop
jae
gs
dec
mov
pop
and
xchg
pusha
xchg
dec
dec
xchg
inc
aam
fsubs
cmp
push
jle
stc
gs
jl
hlt
mov
imul
stos
xor
pop
daa
push
inc
ret
mov
add
mov
sub
paddusw
ret
jl
aad
mov
aad
ret
sub
pusha
mov
sbb
sub
mov
in
and
mov
sub
in
jmpw
je
mov
lahf
cmpsl
jo
clc
dec
and
bound
mov
xchg
mov
lods
neg
sub
push
jmp
call
out
mov
xchg
jo
repz
jb
fwait
sti
js
mov
ljmp
push
mov
div
in
daa
ja
pop
mov
js
xor
pop
movsl
and
inc
push
sbb
push
mov
mov
ja
icebp
mov
arpl
sbb
out
in
xor
in
and
inc
out
cmp
cmp
mov
dec
add
dec
or
dec
inc
mov
popf
dec
cmpb
testb
rcrl
mov
xchg
cmp
dec
mov
jb
mov
push
les
inc
shll
jmp
call
dec
and
or
out
lods
stc
dec
pop
out
inc
adc
pop
loopne
xchg
filds
xor
sbb
and
testb
or
cwtl
repz
mov
sahf
fsubl
addr16
sbb
jbe
pop
or
mov
xor
xchg
leave
mov
test
sub
lea
pop
jno
fstpl
ss
xchg
icebp
add
pop
out
cmp
mov
mov
loopne
in
mov
and
mov
in
push
and
sub
sbb
adcl
lock
das
pop
and
imul
or
lret
xchg
in
insb
xor
cmp
addr16
je
dec
xorb
scas
repnz
loope
and
and
inc
stos
and
add
sbb
inc
or
or
mov
sbb
mov
cmpsl
sub
adc
in
jmp
inc
popa
je
mov
jae
xlat
gs
lock
jb
out
cmp
out
jno
shrb
jo
pop
mov
or
mov
outsl
arpl
push
xchg
jae
jbe
dec
pop
xor
push
insl
and
lods
cld
xchg
insb
xor
cmp
xchg
xor
in
test
adc
inc
subl
push
shl
addr16
notb
pop
jle
gs
daa
push
pop
xor
mov
loopne
lods
arpl
push
inc
ret
movsl
cmp
arpl
pop
push
imul
in
sub
or
pop
pop
inc
lds
lea
ja
aaa
movb
lea
jns
hlt
imul
dec
gs
mov
lods
cmp
push
mov
sahf
sub
dec
jle
insb
jmp
in
arpl
jle
popa
or
and
and
out
dec
decb
xor
push
dec
in
sub
sub
aas
in
in
je
and
pop
mov
and
push
jg
cmp
mov
test
jnp
mov
jae
pop
lods
mov
roll
imul
mov
in
mov
cld
aas
aaa
shll
push
xor
shrd
and
pop
push
pusha
xor
dec
xor
clc
sbb
inc
loopne
gs
lods
push
adc
push
out
push
jnp
insl
sub
pop
push
cmc
push
scas
lock
or
sub
test
cmp
pop
lret
inc
jg
imul
je,pn
sbbl
push
push
sbb
push
inc
das
inc
mov
mov
and
inc
jge
jo
pop
and
lea
pop
cmp
gs
lea
fsubrl
dec
push
lds
je
sbb
int3
xchg
shll
and
cmc
stos
add
sbb
pop
aam
pop
jmp
mov
and
jns
push
mov
js
enter
icebp
gs
jmp
jno
push
mov
mov
pop
shrb
bound
or
mov
pop
lret
or
and
jmp
movb
push
or
fsubl
inc
pop
icebp
pop
jmp
pop
xor
out
adc
xor
scas
pop
inc
fistl
mov
inc
iret
xchg
mov
cmp
and
cmp
bound
xlat
xor
pusha
mov
mov
add
and
ret
ja
inc
pop
data16
push
sbb
popa
pusha
cmpb
sbb
sbb
sub
outsb
test
outsl
cli
or
sbb
push
mov
push
dec
jmp
lock
jae
inc
inc
sbb
xor
sbb
mov
arpl
and
inc
xchg
mov
inc
mov
out
dec
inc
imul
sub
and
xchg
jbe
and
out
cmpl
shr
shll
xor
and
movsl
dec
cwtl
pop
jno
lea
popf
imul
push
pop
pop
andb
jns
pop
and
mov
xor
leave
pushf
mov
notb
jb
push
push
dec
lods
add
cmp
icebp
mov
inc
xor
xor
mov
stc
cwtl
add
mov
xchg
jmp
mov
xchg
pop
imul
lea
cmp
addr16
movsl
mov
or
cwtl
xchg
cmp
in
gs
xlat
jb
pop
add
bound
lret
imul
xlat
sub
mov
aaa
shlb
mov
test
lock
or
faddl
pinsrw
and
mov
push
or
sbb
pop
push
cmp
xor
lods
rcrl
xor
inc
xchg
mov
inc
xor
leave
in
jmp
lock
jnp
xor
shrb
pop
testl
dec
jns
bound
outsl
cmp
fbstp
adc
sbb
xchg
jae
or
pop
dec
cli
inc
rolb
fs
push
or
mov
lock
stos
in
or
xchg
aas
imul
mov
cmpsb
inc
or
sahf
ret
add
lock
sbb
push
pop
jge
sbbl
push
ret
push
popa
ja
xor
jge
sbbl
xlat
fnstenv
xor
adc
shr
lock
in
pusha
leave
xor
loop
subl
popf
mov
lods
push
pop
gs
lds
add
mov
in
xchg
dec
pusha
ds
aas
leave
push
popa
jge
push
mov
jno
push
xchg
out
jns
xchg
dec
mov
mov
scas
daa
xchg
cltd
adc
mov
inc
push
and
add
add
jae
in
insb
jbe
or
xor
sbb
mov
mov
push
xor
out
xor
sti
and
out
push
mov
aad
daa
mov
jno
wrmsr
sub
in
arpl
out
mov
push
push
gs
jb
lret
inc
push
mov
shll
inc
test
dec
add
adc
movsl
shll
sbb
shlb
out
xor
pop
add
xchg
lock
popa
lea
clc
dec
pop
outsl
punpcklbw
sub
inc
out
loopne
jl
mov
fs
cltd
sub
mov
add
cmp
test
sub
xor
adc
xchg
les
out
shll
lea
jmp
cld
xlat
xor
mov
test
sub
sub
inc
adcl
pop
and
into
add
jno
adc
sub
mov
mov
xor
sbb
pop
lret
and
inc
mov
cmc
orb
push
pop
mov
outsb
mov
scas
xor
outsl
jb
pop
dec
roll
sub
jbe
icebp
adc
push
push
movsl
or
lea
rcl
loop
mov
sub
cmc
mov
ljmp
scas
push
push
daa
and
inc
frstor
es
dec
gs
xor
in
daa
call
imul
lret
cmp
jl
and
arpl
sbb
xor
and
adc
aam
and
call
aad
pop
into
pop
idiv
icebp
sub
roll
sbb
adc
clc
sub
and
repz
xchg
sarl
adc
add
movsl
and
cmp
lea
pop
pop
mov
es
fs
jnp
dec
or
in
xor
lock
cmp
adc
stos
dec
push
mov
add
fnstsw
jae
xor
add
repnz
xchg
out
mov
and
and
outsb
stc
jno
jae
xor
push
jle
subb
rorl
push
pop
or
std
mov
sbb
sahf
fdivs
shrb
xor
cmpsl
in
lods
adc
and
cltd
imul
sbbl
bound
mov
and
jmp
lret
dec
mov
pop
sub
and
dec
add
mov
in
mov
pop
sbb
inc
icebp
jl
pop
les
inc
xchg
push
dec
scas
adc
insl
xchg
dec
push
insl
mov
shlb
push
in
arpl
out
je,pn
sahf
jbe
push
xor
pop
xor
ficoms
movsl
jge
fwait
leave
pop
arpl
cmp
sub
stc
dec
addb
mov
ljmp
push
sub
xor
pop
pop
std
pop
cmp
pop
outsl
adc
jae
mov
mov
icebp
add
iret
adc
aam
adc
mov
inc
lods
push
mov
jne
in
out
or
nop/reserved
in
xchg
push
pop
cld
push
iret
icebp
pop
in
lock
and
out
pop
sti
xor
les
xor
das
push
dec
loope
rcll
imul
loop
and
adc
dec
push
ficoms
jnp
cmp
push
imul
jmp
sub
xor
shrl
in
dec
jmp
mov
add
dec
aam
mov
jns
loopne
nop
sub
adc
shll
cld
mov
repnz
popf
inc
dec
mov
aaa
fisttps
cmp
negb
in
lret
gs
mov
pop
jo
adc
adc
and
ja
inc
sub
les
or
xor
adc
fstl
and
movsl
adc
mov
xchg
xor
cmp
fadd
imul
pop
stc
into
add
loope
or
mov
push
or
mov
sbb
sub
cld
hlt
dec
xor
lret
sbb
and
pushl
popf
jno
cmp
jl
out
push
push
xchg
aaa
arpl
cmp
repz
jb
push
popa
in
icebp
leave
ljmp
push
pop
mov
push
lea
xchg
or
gs
ja
test
imul
lods
sti
jbe
loope
cmp
shll
call
xor
int
push
dec
push
adcl
mov
insb
inc
inc
or
insb
cld
inc
pop
in
insb
ficoms
sub
adc
jno
ficomps
lods
insb
push
in
push
sub
cmp
pop
arpl
lods
loop
mov
mov
push
lea
pop
sbb
sbb
jp
je
into
jb
mov
repnz
outsl
fs
inc
push
push
dec
xor
mov
push
aam
pop
arpl
pusha
add
xor
and
in
cmp
call
cmp
jbe
cmp
jo
jb
mov
fidivrl
jo
xor
leave
mov
out
jno
dec
int
sbb
inc
in
outsl
cmc
cmp
push
in
gs
push
xchg
jns
xlat
cld
scas
lods
and
xor
dec
lea
adc
in
stos
sub
mov
sbb
pusha
sub
jmp
push
xor
xor
cli
mov
in
jae
stc
pop
popa
lea
out
and
test
mov
and
les
jns
add
sub
fsubrl
testl
popa
aam
in
gs
addr16
cmpsb
pop
push
xchg
cmp
lahf
cmp
in
fs
or
mov
test
out
adc
and
inc
jbe
mov
inc
jno
xchg
cmpl
jbe
jb
or
sub
ret
xor
pop
add
fdivs
clc
push
mov
dec
sbb
in
inc
sub
mov
adc
bound
sbb
sbb
rorb
pop
push
and
cmc
dec
mov
jno
sti
gs
pop
push
and
mov
xlat
in
inc
or
std
xor
out
mov
dec
loopne
mov
pop
clc
je
aaa
pop
mov
loop
test
mov
mov
add
xor
popa
cmc
pop
pop
and
xchg
fnsave
int3
mov
jae
movsb
ror
sbb
ljmp
add
push
xorl
push
adc
loope
movsb
inc
and
lea
pusha
jg
mov
jns
lods
cmc
add
pushf
pop
mov
add
shr
sub
ljmp
mov
or
pop
sbb
push
mov
or
mov
xor
jle
ja
fisttps
adc
mov
pop
sub
loop
inc
js
ficomps
adc
lcall
pop
in
ds
push
or
push
or
ljmp
cmc
popa
jb
pop
dec
or
sub
pop
icebp
cmp
inc
dec
cmp
push
inc
mov
sub
and
inc
pop
mov
inc
adc
xor
outsb
xor
push
icebp
push
fs
in
push
subl
xchg
and
aas
sub
lea
fdiv
lock
pop
popf
pop
iret
xor
dec
jno
in
cltd
push
push
xor
rcll
lock
xchg
sub
sub
fdiv
xlat
cld
bnd
adc
in
popa
lea
xchg
sub
je
dec
and
in
cwtl
xor
rcrb
mov
shll
xchg
in
fcompl
aam
in
fwait
ret
hlt
out
rol
add
fidivs
sbb
jmp
cmpsb
push
sarl
xor
jbe
cmpsb
adc
jae
cmp
les
mov
mov
xor
push
push
filds
sub
mov
jae
movl
xchg
xor
ja
mov
imul
lret
dec
fwait
lahf
dec
xor
push
imul
outsb
push
bound
ss
or
lods
add
jmp
imul
ds
fldt
data16
dec
outsb
imul
sbb
push
pop
sahf
pusha
push
and
gs
inc
inc
push
sub
fists
rorl
andb
out
ficompl
lret
add
add
scas
data16
stos
jmp
xchg
jns
dec
in
cltd
push
jns
cs
lea
fwait
int
mov
js
adc
pop
addr16
adc
or
sbb
dec
movsb
shl
fsubl
testb
stc
sub
jnp
je
pop
outsb
push
in
fcmovu
add
into
testb
cltd
inc
and
jl
sub
adc
sarb
lea
xchg
jmp
lea
mov
dec
and
test
repnz
ja
test
sbb
test
clc
bound
loopne
sbb
inc
push
insl
xlat
cmp
pop
mov
fdiv
jae
sahf
xchg
and
cmp
mov
sti
addr16
std
mov
push
xor
notl
mov
rcrl
and
jae
jb
cmp
add
jmp
mov
incl
stc
jo
rorb
in
dec
lds
and
sbbl
jno
push
call
loope
add
and
and
popa
or
loopne
fimull
aam
fidivs
inc
imul
movsl
sub
cwtl
sbb
mov
mov
ret
and
dec
shrl
ja
mov
xor
mov
xchg
rcrb
out
test
sarb
daa
inc
and
outsl
push
popa
xchg
subl
in
rcr
sahf
or
jmp
adc
pop
jbe
xchg
ja
dec
jecxz
jo
adc
dec
mov
pop
outsb
inc
decl
fisttpl
jae,pn
andl
lds
test
push
daa
pushf
fs
jge
repz
sub
pop
cmp
add
repz
xchg
xor
test
jbe
in
xor
add
sub
jnp
and
dec
loope
push
fstpl
pop
in
pop
push
push
cs
push
imul
jno
cmp
in
je
lea
sbb
cmc
xor
mov
aaa
repnz
fnstenv
cltd
arpl
push
cmpsl
pop
mov
sbb
cmc
mov
lcall
inc
mov
data16
xchg
xchg
xor
fmull
in
sub
jmp
andb
call
adc
test
push
xor
cmp
in
clc
mov
cwtl
xor
bound
inc
ja
imull
pop
minps
fdivs
insb
out
test
pop
sub
data16
out
mov
push
icebp
mov
fmuls
ljmp
xchg
loop
mov
popa
lea
pop
and
test
out
dec
jle
movsb
loop
sbb
lods
adc
sbb
mov
dec
in
jle
cmp
shrl
arpl
adc
data16
pusha
repz
ja
insb
add
jae
jne
lea
pop
cmpsl
sub
add
mov
jo
inc
fbstp
sub
xchg
mov
pop
and
jns
test
mov
and
testb
mull
out
xchg
sbb
nop
ss
add
dec
into
cli
xchg
pop
mov
sub
popa
pop
sahf
cmp
stos
adc
sbb
jbe
cmp
pop
inc
jmp
ja
mov
dec
cmpsb
jmp
int3
jmp
jne
scas
push
lea
fcompl
inc
hlt
jbe
fistps
test
xor
jmp
es
es
clc
mov
loopne
fdiv
and
out
mov
call
sub
sub
jns
inc
imul
push
loope
push
sbb
popa
std
fmuls
sub
add
push
and
in
std
insl
sub
push
mov
pop
add
add
aam
call
cmc
sbb
jg
sbb
jb
aas
add
and
lods
sti
inc
dec
or
cmp
lea
jae
jbe
mov
outsb
pop
repnz
clc
test
sbb
sbb
cwtl
sbb
inc
mov
push
cmp
scas
pushf
jne
jae
xor
jmp
ret
test
cmp
scas
in
jno
cld
test
call
add
sbb
jmp
mov
loopne
cmp
lock
int
mov
and
sub
gs
ds
mov
jno
ficomps
mov
fcomps
jmp
xor
testl
adc
mov
pop
sub
fdivrl
fisubl
bound
sub
add
out
gs
test
in
lahf
or
call
in
aad
das
xor
les
add
inc
xor
loope
mov
xchg
fcompl
xor
push
xchg
xor
loopne
sbb
bound
xchg
ja
pop
inc
mov
shrb
gs
movsl
push
sbb
bound
xor
fdivl
lods
xlat
mull
daa
mov
clc
cli
aaa
in
jmp
aas
xor
in
and
lea
fcmovnbe
mov
inc
ret
inc
mov
dec
pop
lock
mov
lea
test
or
lds
pusha
pop
notl
hlt
jmp
xor
outsb
and
pop
dec
mov
sub
fdivrl
scas
outsl
int
inc
xchg
int3
ss
adc
insl
stos
pushl
cmp
imul
or
pushl
fsubs
sbb
arpl
pop
gs
jecxz
in
in
pop
lds
and
or
arpl
int3
xchg
sbb
mov
mov
add
inc
inc
and
sbb
inc
int
pop
insl
push
adc
or
insb
mov
cmp
lret
cmpb
pop
cmp
lods
das
lods
sbb
jbe
xor
or
fsts
jbe
cmp
mov
test
mov
inc
push
clc
mov
cwtl
imul
mov
test
push
ss
and
imul
popa
push
mov
mov
adc
add
fucom
je
and
push
xchg
test
or
test
push
addr16
shll
adc
ss
pop
shlb
cs
insl
inc
add
jg
or
dec
sbb
loope
pusha
test
inc
push
inc
sbb
movsl
xchg
add
test
sub
mulb
iret
dec
push
sbb
in
cmp
jnp
inc
mov
ffree
and
push
xor
and
adc
sbb
sbb
andl
rorb
cmp
pop
repz
pmulhw
int
mov
orb
jae
mov
or
daa
test
inc
rcrl
rorl
push
test
insb
add
cli
js
inc
cmp
push
mov
sub
daa
pop
jg
bound
je
and
sub
fcoms
in
popa
ljmp
mov
jg
imul
sti
push
repnz
mov
cld
dec
divl
lock
jb
mov
je
push
add
je,pn
outsb
jg
mov
jae
xor
cmpsb
lds
cmp
hlt
lret
adc
clc
int
orb
adc
jmp
pop
xchg
push
mov
popf
dec
mov
cmp
and
xchg
lods
mov
mov
outsb
test
cs
jbe
pop
mov
jle
xor
dec
mov
sbb
sbb
pop
popa
add
aas
jo
fwait
and
aad
pop
mov
jo
cwtl
dec
adc
lret
movsl
cmovns
incw
sbb
inc
div
sbb
jno
jb
xchg
jnp
adc
stos
and
das
add
dec
movsl
mov
data16
adc
cmp
movsl
pop
inc
dec
movsb
int3
in
dec
shr
dec
in
push
mov
dec
sub
mov
fwait
jae
pop
sub
and
ret
movsl
clc
xchg
jns
jmp
and
leave
daa
push
out
push
mov
pop
lods
jno
mov
push
dec
add
fs
aad
lea
les
ja
mov
and
leave
gs
jno
cmpb
xchg
shlb
stos
outsl
addr16
pop
insl
sbb
push
mov
mov
mov
and
arpl
into
sub
mov
mov
mov
cld
cli
stc
in
aad
dec
sbb
dec
cs
flds
sub
push
xchg
dec
inc
xor
add
inc
inc
bound
rclb
aad
push
xrelease
push
daa
xor
sbb
cmp
leave
shl
pop
fsubp
xor
int
push
filds
imul
push
pusha
and
inc
je
and
or
adc
fcoml
inc
out
push
cmp
cmpsb
shll
in
in
adcl
mov
inc
and
stos
xor
inc
jmp
fistl
adc
aaa
andl
lea
cmp
std
shrb
mov
jge
icebp
xor
aas
sahf
fidivrs
mov
xor
sti
cmpsl
sbb
mov
mov
xor
pop
xor
call
cmc
scas
insl
pop
dec
or
ss
scas
mov
mov
orl
popa
xor
cmp
test
or
mov
int
insb
or
mov
mov
and
lret
dec
lea
icebp
adcb
adc
xchg
xchg
xchg
imul
insl
cmpsl
lock
in
leave
scas
or
mov
push
and
cmp
int
cmc
or
xlat
mov
roll
popa
jmp
pop
adc
insb
imul
stos
mov
mov
rcr
scas
mov
mov
fsub
cmp
jp
outsb
movsb
insl
call
adc
mov
xchg
shl
sub
popa
push
cmc
inc
popa
jae
xlat
stos
sbb
aad
pop
push
mov
xor
jo
popa
movsl
mov
xchg
stos
dec
ret
inc
mov
xchg
lahf
xor
mov
mov
add
cmp
and
ja
lods
stc
enter
hlt
gs
into
mov
pop
sub
xchg
shll
jl
xor
andl
dec
lea
bound
mov
sub
cwtl
or
jo
loopne
xor
and
push
and
jb
xchg
mov
int
xchg
jge
addr16
daa
mov
popf
clc
testb
push
mov
popa
jb
dec
dec
pop
push
mov
push
xor
pushf
jg
lea
test
add
insl
insb
mulb
jp
ret
mov
mov
adcl
push
jno
lret
lock
or
mov
cmpsl
push
lods
inc
dec
mov
and
pushf
in
cmp
xchg
sub
xor
orb
and
or
rol
dec
pop
daa
cmp
stos
jbe
add
in
ljmp
insl
xchg
gs
sahf
mov
sbb
aam
pop
subl
in
scas
mov
movsl
repnz
rcr
add
push
lds
in
outsb
filds
mov
addb
icebp
dec
lock
sbb
mov
jno
mov
leave
stos
jae
ret
mov
mov
rcrl
sub
lds
pusha
jne
sub
icebp
or
cvtps2pd
xchg
out
jae
jecxz
add
xchg
call
jbe
push
cmp
fcomp
lret
cmp
je
ret
and
into
xor
or
leave
xor
popa
lea
dec
pop
adc
inc
std
aam
pop
or
inc
cmp
adc
add
add
inc
jmp
ljmp
pusha
loopne
pop
aam
icebp
mov
pushaw
lock
aaa
sbb
arpl
jge
sbb
sub
sbb
fisttpll
sbb
inc
fnsave
xchg
cmpl
cmc
jp
push
stos
jno
andb
inc
dec
leave
rclb
pushf
leave
popa
call
lods
scas
cmpps
das
cmpsb
push
jae
lea
stos
pop
push
xchg
cmp
push
dec
xor
xor
push
repz
repnz
sub
jns
jnp
mov
daa
mov
rorb
and
xor
adc
rcl
xor
xchg
cmc
lock
aad
pop
or
addr16
inc
lock
xchg
jge
lahf
mov
cmp
push
ja
jl
ffree
dec
xor
xchg
clc
in
pop
loop
test
pop
xchg
cmp
pushf
inc
sar
imul
lret
mov
or
and
jmp
call
jl
push
jae
cmp
xor
rclb
dec
out
and
lock
add
js
cmp
push
jae
xor
insb
mov
cmp
rcrl
in
in
hlt
mov
aad
fidivs
shl
adc
dec
aas
in
daa
clc
in
bound
jb
jecxz
inc
cmpl
fcom
cmp
dec
mov
cmp
popa
scas
adc
ret
pop
mov
stos
pop
ret
jmp
inc
push
pusha
pop
add
xlat
popf
push
mov
cmp
push
stos
push
mov
adc
push
pop
lock
das
and
outsb
bnd
sbb
push
pop
loope
fs
gs
inc
dec
and
sbb
pop
xchg
lret
std
rcll
out
adc
mov
jns
xchg
scas
jo
test
inc
mov
xor
gs
jmp
jns
scas
movsl
popa
pop
dec
sbb
fcoml
icebp
in
mov
cmp
popa
sbb
jge
sbb
adc
loope
sbb
push
pop
sbb
sbb
rcll
sub
lret
pushf
and
push
aad
aam
int
test
mov
xor
inc
adc
mov
dec
in
jbe
ljmp
dec
idivl
lods
sbb
data16
lcall
iret
pop
outsb
xor
pop
dec
add
arpl
test
in
arpl
jg
or
jmp
xorb
or
out
xor
cmp
dec
and
xchg
dec
scas
das
cmp
fst
adc
incb
xor
sub
adc
xor
in
daa
xor
xchg
addr16
daa
das
iret
dec
movsb
sbb
arpl
movsb
dec
stc
outsb
add
mov
sub
sub
jns
adc
or
shll
int3
dec
icebp
add
jae
xchg
and
lret
aaa
repnz
repnz
aam
idivb
psubb
jp
shrb
testb
sbb
call
insl
and
jno
and
mov
fwait
sbb
add
xchg
sub
fidivs
fdiv
lret
push
dec
pop
lcall
icebp
or
loope
or
lods
pop
jmp
and
or
jmp
cltd
inc
rcrl
insl
fs
cmp
mov
pop
outsl
fs
div
dec
cmpsb
pop
xor
ljmp
mov
arpl
adc
insb
inc
stos
popa
mov
test
xor
and
adc
test
sub
lods
cs
inc
rclb
mov
add
mov
lea
cmp
fwait
cmp
mov
or
dec
cltd
out
push
sbb
jno
add
sbb
inc
adc
add
push
daa
call
inc
enter
clc
sub
test
adc
and
inc
lds
lods
adc
add
imul
cli
or
push
and
push
adc
addr16
push
push
dec
fmuls
add
or
sahf
mov
mov
push
dec
js
test
cmp
cmp
repnz
sub
das
xor
pop
jbe
jmp
mov
out
push
and
adc
push
loop
jp
fldl
push
pop
or
push
movsl
xchg
mov
cmp
pmaddwd
pop
fisubl
push
in
push
orl
mov
and
push
inc
jo
pop
popf
jge
mov
add
int
js
dec
lock
cltd
int3
arpl
fsubl
cmp
fsubrl
mov
cli
cmp
mov
fdivrl
imul
jbe
lcall
adc
dec
add
popa
insl
nopl
adc
lahf
sub
test
mov
and
daa
not
adc
jg
adc
dec
push
and
mov
and
dec
push
add
pop
outsl
mov
rorb
mov
test
popf
xor
jb
mov
and
mov
data16
in
icebp
in
sbb
inc
pop
jp
movsl
pop
sub
out
test
or
add
push
icebp
shl
cmc
sub
cmp
and
aad
mov
add
sub
mov
imul
addb
push
xor
add
insb
cmp
xor
repz
mov
jae
push
daa
pop
cmp
sbb
jae
pop
std
sbb
mov
dec
test
push
xor
push
out
les
pop
aaa
in
popf
mov
push
xchg
push
push
sti
xchg
add
dec
or
push
icebp
dec
daa
lret
in
jge
push
cmpsb
ja,pt
add
sti
or
lret
pop
mov
or
pop
call
bound
push
inc
loopne
mov
int3
xchg
loop
js
adc
cmp
fistpl
sbb
adc
fbld
imul
fs
ret
jo
lea
xchg
add
js
add
mov
sbb
fisubs
xor
pop
mov
push
sbbb
sub
and
clc
adc
and
or
ja
rorb
cmp
add
push
inc
jmp
ficompl
pop
jno
dec
movsb
jb
lret
sub
mov
loope
add
fsubl
clc
arpl
push
fwait
sarl
dec
mov
add
mov
inc
nop
and
out
cmpsb
inc
ret
xor
pop
add
rorl
pop
lea
lods
mov
pop
add
cs
and
test
sub
sub
les
jae
loop
sub
lods
push
add
add
outsb
jnp
push
add
jg
rorl
jbe
arpl
inc
push
mov
cs
sbb
cmp
lea
cmp
stc
bound
cld
xor
data16
mov
scas
cmp
cmpsl
xchg
mov
into
daa
in
jne
stos
arpl
out
inc
adc
mov
notb
js
sub
or
mov
imul
push
std
xor
sbb
inc
xchg
pop
push
xor
insb
imul
and
repz
into
cmc
sbb
inc
dec
add
gs
add
dec
cltd
and
mov
push
adcb
inc
xor
popa
and
out
pop
in
jno
insl
dec
jbe
dec
mov
xorl
test
push
jb
dec
push
pop
clc
stos
ds
push
dec
add
fs
ret
andl
sbb
mov
clc
cli
idivl
aam
add
mov
repnz
cld
jne
popa
jb
xchg
dec
test
icebp
push
sub
xor
xchg
cmp
mov
xor
out
cmpsb
adc
insl
jge
fnstsw
aas
mov
leave
lock
testb
and
cltd
jo
xor
pop
add
and
lock
lea
add
dec
fsubp
pop
sahf
adc
and
dec
pop
cmp
movsl
inc
push
in
sbb
dec
jbe
pop
pop
data16
fsubr
test
inc
adc
sbb
lods
pop
pop
pusha
mov
or
je
mov
jae
add
pop
sub
js
in
jmp
or
cmpb
xchg
jmp
loopne
loopne
loop
jae
adc
jo
mov
daa
cmp
mov
scas
das
xor
cld
xchg
outsb
call
das
xor
filds
xor
jns
push
orl
ror
lock
mov
sbb
xchg
lret
nop
ss
mov
fsubrs
xor
ficomps
data16
cmp
test
out
lods
mov
mov
push
inc
imul
add
sarb
xchg
imulb
sbb
call
scas
jno
imul
mov
imul
rorb
es
leave
in
shlb
adc
ds
adc
movsl
aaa
push
xor
jbe
mov
and
and
and
or
jo
push
imul
xchg
sbb
xchg
sbb
insb
nop
or
xor
jbe
icebp
out
or
lret
jp
stos
mov
jl
rclb
pop
addr16
leave
movsl
xor
arpl
inc
xchg
pop
movsl
fsubl
insl
orl
add
bound
lret
out
loopne
int
push
test
popa
mov
sbb
cmp
mov
jns
adc
loop
ret
sub
inc
lret
loope
mov
push
jb
or
je
pop
gs
aam
adc
insl
fldcw
stos
sbb
ffreep
mov
hlt
in
cmp
adc
add
push
cmp
mov
jo
cmp
icebp
das
and
or
add
andb
push
mov
sbb
cmp
aas
fnsave
jecxz
xchg
divb
jl
push
orb
mov
and
aaa
push
std
repz
push
call
out
ror
inc
ljmp
imul
xor
repz
dec
xchg
ds
sbb
fimuls
xchg
popf
add
inc
jnp
test
xor
lock
mov
xchg
js
mov
jbe
out
inc
shlb
push
pop
cmp
fdiv
arpl
xchg
jb
add
mov
adc
out
xchg
cmp
add
int
lock
movsl
and
aaa
movsl
mov
fildl
ret
fs
shrl
cli
lea
dec
sbb
movsb
insb
push
and
pop
outsl
xchg
in
fsubrs
imul
lret
psubsw
pop
aad
mov
inc
pop
mov
repnz
lock
sbb
notb
or
cmp
fs
shll
xor
les
fisubs
push
mov
clc
ret
call
add
aaa
jl
stos
std
or
push
insl
sub
or
lea
std
sub
inc
mov
dec
mov
and
mov
dec
lea
shld
xor
mov
add
mov
add
imul
test
dec
lds
outsl
add
pop
inc
pop
inc
cmp
iret
imul
jecxz
pop
dec
xor
xor
pop
and
add
sub
fisttps
repnz
out
inc
dec
jae
daa
ja
sub
jmp
cld
lret
gs
fistl
jp
leave
ret
mov
sbb
hlt
dec
or
js
loopne
pop
push
inc
or
mov
test
fisubs
add
xor
xor
adc
sub
mov
or
rcrb
mov
repz
mov
shll
xchg
push
sarl
ficomps
ret
lods
add
sti
or
daa
and
sbb
dec
imul
jge
or
pop
sbb
in
inc
and
rcrb
lahf
dec
aam
lods
out
pusha
sbb
and
sahf
test
jge
sub
lea
fcoms
cmp
xor
pop
or
mov
fs
dec
stos
sbb
lods
mov
es
rorl
mov
insl
dec
mov
push
add
and
icebp
das
push
push
sub
add
pop
lea
inc
repnz
outsb
add
ljmp
inc
femms
xchg
arpl
sub
das
add
icebp
loop
and
pop
xchg
adc
jecxz
test
xchg
mov
lock
add
jg
xor
test
dec
cmp
jle
ret
lock
mov
push
in
test
insb
sti
mov
sbb
mov
imul
arpl
push
std
sbb
test
push
dec
mov
xor
push
xorb
cs
es
aad
dec
jae
movsb
ljmp
cwtl
loopne
jae
movsl
ljmp
jbe
test
repnz
hlt
insl
mov
insl
push
movsb
fistps
insb
movsl
mov
jmp
mov
in
gs
xor
scas
sub
jb
cmc
iret
push
inc
pusha
dec
popa
loopne
push
pop
jno
xor
cmpsb
mov
adc
shll
arpl
sub
das
xor
lods
inc
inc
xor
pop
clc
xchg
mov
xor
gs
sub
push
ficoml
in
push
jecxz
scas
inc
stos
loop
insb
xlat
popa
and
pop
insb
xor
and
lock
jle
std
imulb
pop
lods
or
popa
mov
sub
arpl
mov
xchg
icebp
insl
sbb
jl
insl
or
rclb
nop
lock
mov
jmp
pop
clc
rcrb
push
fistps
ds
pop
jl
mov
inc
dec
sub
mov
int
subb
shrb
and
loopne
and
and
cmp
sub
cld
mov
add
or
daa
xchg
jne
inc
lcall
jno
insl
arpl
jbe
pop
loop
ret
popa
push
movsl
je
push
addr16
bound
mov
bound
jbe
in
mov
das
imul
push
scas
xor
insl
outsl
popa
ret
mov
mov
pop
int
mov
inc
push
lds
sbb
in
adc
sbb
ss
das
push
insl
lret
lods
lods
rclb
fiadds
xchg
xchg
dec
inc
ss
sbb
ret
cmp
mov
inc
cmp
fucomi
cmp
xor
push
rcll
sbb
lret
lret
popa
mov
jmp
xchg
mov
dec
scas
jo
mov
popa
imul
or
mov
inc
mov
data16
or
shll
mov
pop
popa
addr16
lods
jmp
out
inc
fs
int3
cs
inc
inc
popl
scas
sub
or
or
adc
pop
in
fstpl
jbe
addr16
je
jp
pop
jno
push
mov
out
pop
mov
shlb
outsb
or
cmpsl
or
outsl
in
outsl
bound
jge
pop
xchg
jno
hlt
insb
add
lods
ljmp
push
imul
imul
mov
jo
in
testb
mov
ja
push
xor
pop
pop
or
bound
jb
addr16
dec
jae
mov
pop
xor
dec
sbb
sbb
push
and
icebp
inc
in
mov
add
mov
popa
xchg
adc
xor
jnp
lret
dec
add
pop
cmp
out
jl
leave
pop
dec
mov
fdivrp
xor
gs
cmp
shl
push
outsl
jge
cltd
cli
ja
jne
cmp
inc
js
fiadds
outsl
sub
das
adc
pop
inc
pop
sbb
popa
adc
dec
out
or
fisttps
hlt
xor
fsubs
cmc
imul
pushf
adc
add
inc
mov
aad
inc
mov
repnz
cmpsb
icebp
cmp
adc
lods
cld
lcall
popa
pop
sub
push
scas
push
rcrb
rorl
icebp
popf
dec
scas
fistps
adcb
lds
idiv
or
sbb
inc
cmc
das
xor
jbe
lret
fabs
mov
pop
stos
fldt
insl
xchg
insl
imul
push
mov
sub
aad
ljmp
jge
js
inc
insl
and
fwait
jo
test
mov
push
insl
fwait
add
cltd
aam
movsb
clc
mov
pop
int
insl
mov
push
leave
lret
arpl
in
lods
test
inc
cmp
mov
or
inc
popa
cmp
sub
lock
clc
scas
pop
call
aas
ret
gs
repnz
mov
lret
sub
leave
in
pop
push
das
int
pushl
mov
mov
push
mov
or
into
lret
and
pop
mov
sub
pushl
in
scas
outsb
test
adc
shll
cmc
push
data16
jo
xor
push
sbb
mov
lret
xorb
sub
jecxz
cld
data16
fistl
adc
mov
mov
hlt
push
mov
and
add
test
xor
xor
cld
lods
addr16
jb
in
jo
lret
daa
nop
ja
es
popa
out
pop
pop
cmc
cs
push
idivb
scas
xor
rcll
in
popa
xchg
lock
jae
mov
outsl
mov
sub
je
bound
xchg
or
xchg
adc
pop
mov
loop
decl
sub
xchg
outsb
push
dec
dec
push
pop
cmp
lret
sub
push
scas
jae
scas
cmp
xor
push
cld
loop
add
and
pusha
jp
jbe
xor
aad
jg
sbb
cmp
test
and
lea
or
addb
testl
in
fstpt
stos
mov
inc
lods
jo
push
stc
dec
lea
out
xchg
jnp
inc
int
adc
jb
add
push
add
loope
sbb
jne
dec
insb
adc
sti
or
push
leave
mov
pop
jg
xchg
adc
xchg
insl
and
into
add
xchg
packuswb
test
mov
outsl
xor
xchg
xchg
hlt
sbb
mov
jb
mov
incb
call
push
inc
or
out
lea
push
mov
dec
push
and
sub
ret
fisubrl
xor
cmp
jbe
or
ret
popf
pop
push
xchg
hlt
cltd
mov
pop
sub
xchg
push
pushl
jl
jae
xchg
bound
jge
cmc
mov
jl
dec
pusha
push
dec
pop
stos
mov
lea
rcr
adcb
mov
add
pop
fs
jg
mov
pop
mov
push
imul
repnz
imul
repnz
icebp
andl
pop
subps
and
gs
je
xor
mov
int
xchg
mov
out
sub
insl
jmp
push
and
aam
mov
sub
and
xor
xlat
push
sbb
dec
ficomps
arpl
mov
ret
int
jl
mov
inc
outsl
cmp
out
push
jae
sahf
cmpsb
and
nop
xlat
adc
cmp
arpl
sub
notb
jno
add
mov
and
mov
jb
minps
out
aam
pop
push
xchg
fisttpl
sbb
lea
dec
sbb
ljmp
in
and
adc
xchg
xchg
dec
out
loop
fs
and
add
dec
fbld
data16
sahf
sub
mov
mov
les
fmuls
mov
mov
in
xor
andb
mov
mov
insl
ret
sub
xor
out
push
mov
mov
xor
insl
add
and
xchg
call
das
pop
lret
hlt
adcl
repz
bound
and
mov
aas
push
add
cs
push
xor
inc
add
xor
cmp
jno
push
lock
jl
push
shrb
and
xor
lock
dec
or
ja
push
dec
mov
jb
adc
daa
call
sbbb
push
gs
clc
jecxz
mov
xor
test
mov
pmulhuw
inc
fldln2
xor
popa
and
jp
lods
dec
and
popf
ljmp
adc
sub
fdivs
xchg
out
test
push
rcrb
adc
mov
cmp
ret
xor
test
cmc
aas
pop
ljmp
mov
arpl
mov
fs
mov
cmp
pop
inc
divl
pop
negb
cmp
cmp
or
into
mulb
sbb
ret
lcall
mov
mov
jmp
jns
sbb
xor
int3
pavgb
sub
sub
movsl
imul
leave
popa
in
addr16
push
jne
repz
and
popf
clc
enter
dec
cld
lock
leave
pop
fisttpll
in
and
pusha
push
lea
xlat
aaa
push
and
es
push
fs
outsl
es
outsb
inc
dec
daa
pop
cmovbe
mov
mov
push
jae
faddl
not
inc
push
je
imul
out
or
gs
stos
or
mov
xor
pop
scas
aam
adc
rol
insl
xor
inc
movsl
sbb
scas
mov
popf
into
pop
mov
out
out
subb
inc
mov
dec
stos
sar
rorl
lock
jb
adc
pushf
rcr
adc
mov
shl
inc
ja
adc
outsb
mov
leave
das
sbb
movsl
clc
adc
gs
xor
je
repz
outsb
loopne
pop
jne
test
aas
jmp
xchg
push
mov
addl
dec
int3
subb
jo
test
lret
mov
sbb
loopne
jmp
outsb
ret
jno
and
out
add
mov
inc
mov
cmp
loope
shl
mov
jbe
and
push
jl
icebp
fnstenv
push
pop
sbb
mov
cmp
add
and
jg
push
loopne
pop
je
daa
ljmp
cmp
sbb
sbb
add
cmp
incb
add
inc
pop
add
in
dec
push
cmp
sbb
dec
mov
cmp
dec
cmc
or
repz
sbb
into
cwtl
dec
std
lock
in
pop
sub
mov
push
mov
push
xlat
or
es
in
and
sbbl
int
imul
loopne
xor
add
dec
inc
test
dec
jno
addr16
xor
xor
fcmovnbe
pop
dec
jb
imul
add
inc
arpl
insl
sarb
clc
mov
pop
insl
or
out
add
lods
in
jne
gs
loope
push
into
jbe
decl
dec
push
or
popa
add
push
pusha
and
shll
test
dec
mov
loope,pn
int
xor
lret
sbb
data16
jb
sub
mov
imul
dec
dec
in
fwait
sbb
imul
add
ds
ljmp
popa
cs
mov
in
repz
cmp
or
and
imull
ljmp
lods
pop
xor
pop
sub
mov
pop
popa
lods
sbb
fstl
je
add
test
fistps
mov
pop
jae
lahf
sub
push
and
inc
pop
pcmpgtd
lods
pop
xchg
adc
pop
leave
inc
aaa
jae
in
jecxz
add
add
dec
push
cld
sbb
repz
push
push
dec
push
jns
je
movsl
and
int3
cmp
push
mov
ljmp
jb
adc
push
rolb
lods
dec
adc
call
add
dec
adc
aas
subl
in
into
and
xor
cmc
mov
sbb
and
pop
add
int
ffreep
push
sbb
aam
cmp
repz
and
xchg
inc
dec
add
cmpl
dec
mov
mov
imul
pushf
dec
inc
mov
cltd
lcall
shrl
in
sub
lahf
xor
fwait
les
mov
jnp
sub
lock
pusha
adc
jns
in
pop
adc
in
pop
adc
mov
lods
xor
mov
dec
add
mov
fmul
xor
mov
mov
fimuls
push
dec
pushaw
pop
adc
test
and
inc
sub
imul
les
rcll
jbe
adc
ficompl
push
adc
push
xor
adcb
cmp
xor
mov
pusha
hlt
hlt
ljmp
pop
nop
sbb
jo
xor
mov
ja
push
nop
out
sub
popa
and
and
adc
mov
js
icebp
daa
inc
test
jbe
mov
or
sbb
xchg
out
mov
and
data16
stos
ret
pop
int3
dec
mov
stc
jnp
inc
arpl
aas
jmp
adc
test
out
cmp
insl
cmc
in
jmp
call
jae
cs
push
scas
shrb
outsl
outsb
mov
jno
cmp
and
in
sub
mov
loop
add
push
in
adc
aaa
insl
fsubp
and
ljmp
jns
pop
xor
out
push
xchg
pop
xor
sbb
or
sbb
jns
jle
aad
in
lods
xor
adc
adc
int
jle
lock
cmpl
pop
xor
cmp
movsl
bound
flds
dec
push
pop
jns
rcrl
sbb
cmp
or
xchg
or
jbe
sub
stc
xor
cmc
in
int3
push
popf
xor
in
in
mov
sub
les
xor
gs
dec
in
and
je
xorl
jno
jo
out
outsb
xchg
sub
insb
imul
xor
aaa
shll
test
int3
or
repz
pop
popa
mov
sahf
add
cmp
sbb
out
jmp
dec
cmpsl
ret
jo
sbb
mov
dec
cltd
int3
decl
xchg
xor
push
std
and
pop
in
in
sbbl
push
scas
out
push
push
bound
cmp
dec
or
and
daa
in
xor
and
or
add
xor
repz
icebp
mov
sbb
movsl
out
jae
inc
mul
loopne,pt
arpl
fwait
cmc
adc
lds
popa
hlt
pop
outsb
daa
jb
lods
dec
jnp
xor
lahf
pop
in
data16
js
pop
add
icebp
mov
pop
xlat
push
dec
xorb
pop
push
sbb
aad
xor
sub
cmp
sub
pop
iret
ljmp
cld
add
cwtl
dec
pop
push
daa
and
xor
roll
inc
and
aaa
push
jge
and
adc
addr16
addr16
xor
in
push
fs
jmp
cmp
mov
adc
fcoml
adc
dec
mov
arpl
loop
arpl
aaa
rorl
in
jnp
inc
sub
cmpsl
imul
mov
jno
inc
movsb
popf
xor
popf
cmpsl
lret
ror
loopne
je
sub
mov
movsl
repz
data16
add
dec
xor
sbb
insl
cmp
pop
into
inc
push
imul
inc
sub
orl
add
pusha
pop
pushf
and
push
notl
pop
gs
push
and
loop
bound
lock
mov
pop
push
push
inc
ret
mulb
pusha
push
pop
es
push
push
adc
and
jo
push
dec
sahf
imul
jo
outsb
jle
ljmp
es
lea
inc
xor
push
dec
rolb
xor
sbb
je
arpl
movsb
add
arpl
jle
cwtl
cmp
cld
pop
xor
in
daa
in
in
pushf
cmp
popf
imull
mov
in
in
pop
pushf
inc
push
pop
push
xchg
movsl
xor
jmp
jb
jg
or
mov
cmc
repz
fidivs
sub
fnstenv
sub
in
ljmp
mov
cmp
push
push
push
and
mov
dec
aaa
clc
sub
mov
jno
sub
lock
push
call
push
ljmp
push
sbb
sub
xor
stc
sub
xchg
repnz
in
out
pop
repz
and
xchg
fidivrl
sbb
repnz
in
insb
cmpsb
push
pop
out
pop
mov
mov
mov
popa
jnp
shrl
pop
mov
sti
adc
mov
push
or
les
popa
bound
sbb
ljmp
add
sbb
mov
movsl
loop
jns
hlt
dec
addr16
das
mov
lods
xor
mov
sub
gs
filds
ljmp
jae
sbb
xor
cmp
xlat
sbb
xchg
push
out
add
pushw
fcomps
and
flds
out
dec
arpl
mov
jp
in
loopne
inc
xchg
push
inc
pop
cmp
std
test
sahf
std
hlt
dec
xor
out
in
in
inc
ss
fbld
mov
repz
cltd
and
ret
push
cmp
pop
push
roll
sub
bound
push
push
sub
adc
std
push
push
pop
movsl
rcll
pop
push
daa
sub
dec
xor
int
xchg
call
cmp
aas
adc
daa
sub
xor
inc
sub
or
rclb
out
adc
pop
mov
dec
xor
sub
xor
push
in
fsubrp
jb
in
sub
xor
adc
ja
dec
divb
jecxz
jns
dec
pop
dec
loop
adc
push
nop
xor
adcl
inc
sbb
xchg
xchg
inc
in
mov
out
inc
pop
sbb
and
cmp
pop
pop
clc
cmpsl
jnp
adc
movsb
sbb
add
lea
jae
push
dec
int
ret
stos
outsb
imulb
out
nop
ret
and
lds
dec
jmp
cmpsl
pop
dec
stos
xor
arpl
je
lds
pop
imul
ss
movb
int3
inc
out
jg
flds
push
cmp
gs
dec
inc
push
push
sub
and
stc
xor
sub
je
repz
ljmp
imul
out
lods
sub
push
pushf
xor
sbb
je
inc
in
lcall
lcall
mov
mov
ret
sbb
repz
fs
dec
clc
and
clc
xchg
dec
arpl
mov
call
lods
add
arpl
lret
ljmp
stos
and
push
push
adc
inc
and
inc
mov
xor
out
mov
movsb
push
sub
jo
mov
js
outsl
jb
dec
mov
adc
dec
movsl
lock
daa
jl
icebp
pop
das
jo
repz
lahf
xchg
cmp
xor
data16
mov
sub
add
std
or
mov
sahf
notl
and
add
mov
filds
imul
pushf
push
sbb
jp
xchg
and
dec
orb
push
adc
mov
mov
mov
sub
andl
xchg
fs
mov
loopne
xlat
dec
or
sbb
sub
xor
in
push
icebp
popa
mov
std
rclb
ss
sub
movsb
lods
adc
pop
gs
mov
xor
loop
imul
add
pop
push
jl
gs
sbb
fstp
scas
dec
sbb
divl
or
jae
mov
loopne
push
clc
push
sbb
jno
add
sub
jmp
out
and
jmp
mov
jbe
xor
jmp
popa
and
scas
add
pop
xchg
pop
repnz
xchg
adc
in
jecxz
stc
imul
and
std
gs
sub
lods
adc
aam
lcall
bound
or
in
idivl
xchg
loopne
lods
shll
fnstcw
and
outsb
gs
aad
imul
xor
pop
lds
push
xor
rcll
test
lock
xchg
iret
push
in
in
daa
dec
imul
push
cmp
lahf
ds
fistpll
shll
and
sbb
lock
fnstenv
push
cmp
add
divb
fcom
lret
add
sub
add
imul
imul
push
dec
loopne
fs
pop
rorb
xor
jbe
nop
cli
shlb
lea
mov
scas
add
addl
in
inc
pop
add
mov
fisttpll
lcall
pop
cmp
insl
add
mov
in
sub
and
repz
sub
ret
or
test
arpl
mov
scas
cmp
jmp
cwtl
cwtl
fs
dec
repz
movsb
xchg
inc
add
push
jae
out
hlt
mov
mov
sbb
sub
mov
dec
test
dec
popf
mov
add
pop
dec
in
mov
jb
in
sub
gs
cmpsb
sbb
fsubrp
insl
dec
in
xchg
mov
mov
and
scas
xchg
mov
daa
iret
movsl
in
push
pop
xor
inc
sbb
loopne
xor
jno
add
jmp
adc
test
add
xor
imul
jmp
in
gs
lret
outsl
adc
add
and
push
push
shrb
mov
sub
fwait
and
int
adc
jbe
in
insb
push
cmp
cmpl
fldcw
xor
ljmp
jbe
pop
js
add
cld
ret
sbb
jmp
push
fcoml
andl
dec
jnp
push
mov
adc
ja
addr16
mov
xchg
mov
add
cmp
adc
inc
in
aad
xchg
and
lret
adc
sub
popa
popa
mov
outsb
inc
add
int
push
lea
push
xchg
pushf
push
je
jp
jg
lds
fidivs
sbb
bound
outsl
in
xor
lods
push
pop
orb
dec
push
imul
popa
push
daa
push
lods
iret
sub
inc
loopne
dec
adc
xor
fsubl
push
inc
jg
push
in
lock
mov
bound
loop
jns
pop
movsb
pop
dec
gs
inc
inc
xor
xchg
sub
push
push
push
pop
pop
lds
pop
outsb
dec
or
lret
jge
pop
bound
add
and
in
clc
outsb
mov
stos
jle
ja
fcomip
lret
ds
add
jg
or
aaa
cmc
adc
das
dec
jne
sub
mov
cmp
in
mov
neg
pop
nop
mov
arpl
cmc
mov
sbb
and
gs
and
push
lds
jmp
sub
mov
test
jmp
dec
dec
sub
lea
xor
pop
cmp
dec
pushf
jge
das
mov
inc
dec
jmp
lock
xchg
push
insl
loop
gs
ret
and
loop
mov
out
jmp
sahf
xor
mov
cmp
mov
arpl
mov
outsb
add
pop
cmp
into
andl
sub
push
movsb
pop
push
loopne
or
and
cld
shl
cs
cmp
pop
pop
jo
imul
es
mov
std
jae
int3
mov
push
shll
negb
jp
sub
icebp
popa
lock
xchg
aas
sbb
mov
popf
lock
jb
pop
mov
out
pop
insl
dec
jge
popf
movsl
add
dec
pop
test
jno
pop
cmp
imul
loopne
std
xor
imul
push
and
ds
imul
push
cmp
push
lret
push
aad
ljmp
fists
adc
pop
subl
sub
mov
mov
popa
jp
jns
lcall
cmpsb
dec
movsb
dec
mov
andl
mov
fninit
negl
and
outsl
mov
mov
jbe
inc
and
je
and
das
inc
xor
popa
mov
sbb
ljmp
push
aaa
lods
pushf
add
insb
jmp
pop
dec
lods
popf
and
push
lods
cwtl
test
insb
lahf
cmp
push
push
ret
mov
add
movsb
jp
sbb
icebp
xchg
lcall
lea
or
mov
imul
push
sbb
lcall
fldt
out
inc
sbb
ds
pop
xchg
push
das
pop
dec
mov
out
lret
push
ret
xchg
in
pop
jno
jb
loope
ss
ret
in
inc
std
push
test
testl
xorb
sbb
mov
repz
cmp
dec
and
clc
inc
mov
push
cmp
dec
pop
inc
add
push
sbb
insl
and
mov
lret
mov
cmp
or
in
mov
fs
cmc
lods
lea
sub
inc
scas
call
lcall
push
shrl
shl
aad
mov
jecxz
in
inc
insl
pop
daa
std
cmpb
and
mov
jg
stc
push
out
es
and
das
jno
and
testl
adc
int3
aad
mov
out
cmp
pop
popa
das
imulb
sbb
lods
jns
push
sub
addr16
mov
pop
je,pn
popa
je
push
push
dec
imul
mov
dec
repnz
cmc
dec
jmp
insb
movsb
decl
lret
xchg
xor
mov
mov
add
pushf
pop
add
xor
popa
icebp
iret
inc
xor
jno
psubq
xor
jae
mov
cmc
inc
pop
xchg
push
jno
pop
push
mov
and
insl
fisttps
xor
push
adc
xor
jle
and
jo
in
jge
stc
out
xorl
sbbl
cmp
negl
inc
pusha
xlat
inc
pop
inc
lea
movsb
nop
jb
mov
outsb
jb
jo
clc
pushf
in
xor
adc
lea
dec
fisubs
daa
inc
push
jno
enter
mov
adc
popf
dec
push
xchg
lock
inc
test
fdivs
cmp
dec
fsubs
and
xor
mov
insl
add
sbb
mov
push
push
ror
fcompl
mov
cmp
jb
adc
jno
outsl
lret
fildll
or
cld
lds
add
cmpsb
mov
aaa
push
loopne
and
cmp
sub
insb
popf
mov
leave
insb
adc
sub
adc
in
mov
insb
xorb
sub
add
sbb
xlat
or
sub
push
repnz
cmp
push
mov
dec
jae
and
mov
jmp
ljmp
xor
adc
leave
xchg
ficoms
insb
inc
cmp
mov
dec
outsb
inc
imul
lcall
jmp
call
leave
fsubrl
cmp
ljmp
loopne
pop
push
inc
gs
call
cmp
jge
lock
fs
push
les
loopne
xlat
cmp
jns
sbb
mov
in
sti
imul
outsl
sub
and
gs
jo
mov
add
adc
push
fdivrl
stos
inc
xor
mov
filds
push
lods
mov
fildll
movsl
insl
or
inc
or
sbb
imul
jb
and
negl
repnz
lods
pop
jmp
in
sub
or
stos
xchg
or
xor
out
and
aam
jmp
aad
aad
imul
andl
cmp
or
inc
je
pop
push
es
aas
mov
xchg
xchg
dec
mov
das
aad
insl
outsb
rcll
mov
or
mov
dec
cli
gs
jae
sbb
xor
or
or
jge
mov
mov
out
pop
mov
int
push
jo
add
push
xor
and
xor
shl
mov
jbe
shll
lcall
pop
shlb
ljmp
sahf
loope
cmp
test
gs
imul
sbb
sbb
rcrl
inc
sarb
jecxz
jb
scas
pop
cmp
inc
xorb
mov
imul
sub
lock
inc
xor
xor
or
adc
popaw
jmp
aaa
ljmp
arpl
lock
out
andb
push
std
xor
lods
in
ljmp
out
leave
push
bound
push
jo
pop
mov
or
mov
mov
push
sbb
sub
pop
in
pop
sub
mov
adc
sub
sub
aas
mov
dec
dec
out
sbb
pop
adc
sbb
outsl
jp
shlb
push
adc
dec
inc
popa
push
insl
aas
call
mov
mov
inc
iret
out
lods
sbb
mov
xor
test
sahf
inc
and
inc
add
lods
push
jo
mov
mov
pop
cs
jnp
pop
popa
subl
push
loop
jbe
dec
stos
clc
fimuls
mov
xor
js
push
lds
sub
inc
xchg
adc
and
sbb
inc
rclb
mov
jbe
imul
jmp
shlb
mov
mov
cmp
in
int
test
cmc
mov
popa
in
notb
cli
jg
cs
or
fimuls
jmp
into
push
xchg
roll
sarl
lret
aaa
mov
mov
and
adc
movsb
add
lret
pop
lret
gs
lds
in
jno
leave
gs
inc
mov
imul
pop
add
pop
xor
dec
and
push
push
xlat
shll
je
jb
les
mulb
inc
xchg
in
add
mov
mov
or
aaa
dec
cli
jns
cmp
jae
or
imul
or
cmpl
mov
cmpsb
mov
push
jmp
mov
pop
mov
les
and
pop
and
ret
xor
jge,pn
dec
xlat
in
mov
insl
stos
push
and
adc
push
pop
clc
lods
rcll
lock
adc
pop
push
xor
jmp
pop
pop
xchg
cmp
loope
xlat
push
dec
cmp
cmp
mov
pop
cmp
fnsave
fistps
dec
repz
cmc
lods
pop
jmp
fbld
loopne
xor
jge
popf
in
pop
js
imul
xor
fst
xor
and
shr
pop
popa
movsl
and
scas
sub
jns
sub
inc
push
mov
dec
jnp
rolb
dec
jno
or
jne
cmpsb
add
mov
add
dec
inc
jge
push
add
in
and
jae
add
lock
ret
dec
rcrb
outsl
xor
insl
inc
pop
inc
sbb
pusha
es
cmp
push
push
push
push
adc
imulb
push
jg
pop
idivb
lret
sub
jge
inc
out
dec
jmp
xor
add
jmp
mov
lods
sti
xor
pop
jno
sbb
je
imul
cmp
into
daa
xor
xchg
mov
mov
cmp
iret
ljmp
jle
xchg
or
jnp
sbb
xor
test
or
push
xchg
xor
test
mov
imul
push
cmp
inc
cmp
jg
push
repz
in
add
pop
jns
add
outsl
pop
inc
lods
pop
rcr
push
icebp
cmp
cmc
fimuls
cmp
sub
cmp
sbb
adcb
mov
push
sub
adcl
in
loopne
jge
callw
cmpsl
push
sbb
lahf
lds
or
inc
fwait
xor
hlt
jmp
jbe
cmp
cs
out
inc
mov
js
fbld
and
and
cmp
data16
or
lahf
push
test
mov
pop
cmp
add
pop
orb
mov
cmp
dec
insl
xor
lods
mov
icebp
rorl
add
scas
cmp
add
lea
stc
data16
icebp
xchg
ja
movsl
aam
iret
fsubl
sub
xor
fidivrs
cli
and
bnd
add
imul
bound
inc
mov
sub
mov
sub
adc
int
sbb
push
xlat
adc
fnstsw
data16
add
and
jb
xor
aas
adc
inc
pop
inc
mov
std
xchg
mov
sub
jmp
xchg
add
push
les
inc
inc
inc
insb
cmp
sbb
les
or
pusha
mov
push
mov
pop
out
xor
fisttpl
push
int
mov
test
pop
add
ljmp
adcb
mov
test
dec
mov
xor
xor
or
addr16
mov
add
test
push
mov
add
push
mov
sbb
fs
push
jns
cmp
inc
pop
adc
sbb
sub
inc
or
push
mov
sub
fisttps
icebp
daa
inc
lods
or
xor
lds
mov
lea
push
sbb
xor
cmc
ficomps
popa
pop
insl
lods
xlat
xchg
imul
jge
out
and
mov
fwait
jge
or
andl
push
pop
ja
jge
das
cmp
cmpsl
pop
gs
rcrb
and
in
inc
ss
or
test
ds
stc
and
pop
sub
adcb
xorb
clc
loopne
fwait
add
mov
insb
dec
in
cmp
push
jle
mull
and
movsl
or
test
in
int
daa
dec
cmp
lds
mov
inc
mov
add
push
push
push
dec
aas
mov
mov
xor
adc
lcall
add
push
sub
pop
jno
aam
clc
pushf
inc
cli
add
push
jns
repnz
or
repnz
jecxz
pushf
and
roll
dec
pop
sub
mov
jmp
jo
test
mov
jb
push
pop
or
iret
push
mov
rorb
test
popa
cmpb
dec
hlt
cmpsl
mov
scas
hlt
mov
sub
mov
adc
dec
shlb
lods
cmc
pop
push
xor
dec
dec
in
gs
cmp
sub
jle
push
loop
inc
and
mov
test
gs
out
in
int
gs
stc
jecxz
mov
hlt
outsl
pop
mov
popa
scas
imul
pusha
mov
gs
lcall
dec
repz
inc
mov
fs
int
stc
sub
cmp
and
jae
cmp
pop
imul
mov
xor
jns
jecxz
cmp
jmp
outsb
loop
push
daa
jg
jecxz
dec
pop
and
push
gs
pop
mov
pop
mov
push
ficompl
inc
lock
jmp
enter
pop
mov
in
insl
inc
loopne
adc
aad
mov
repz
sub
xor
inc
out
dec
or
push
xchg
idivb
clc
dec
mov
push
mov
inc
dec
repnz
shlb
fadd
adc
clc
mov
cmp
sarl
push
lahf
mov
pop
sub
dec
das
testb
stos
cmp
sbb
in
gs
jne
push
and
and
jbe
sti
out
cmp
xor
es
sbb
push
sbb
inc
js
sub
or
lods
addl
jle
call
inc
mov
cld
dec
pop
jecxz
sub
push
outsl
mov
cli
xchg
ja
adc
cmp
jp
jmp
cmpsl
inc
lret
push
aam
mov
out
cmc
jp
xor
ret
ficoml
das
xor
in
popa
or
jo
dec
and
mov
ljmp
push
cltd
sar
adc
sahf
icebp
mov
pop
inc
aam
push
and
popf
and
das
push
jecxz
push
js
addr16
negb
inc
rcrb
inc
pop
arpl
and
loope
repz
jae
sub
mov
mov
lods
dec
clc
jo
push
mov
popa
xor
sbb
xor
or
fsubrl
or
clc
ror
jo
pop
arpl
adc
shl
out
jns
and
jbe
push
loope
jno
out
jp
cmp
scas
jno
sahf
mov
aaa
inc
cmp
inc
xor
icebp
jmp
insb
fbstp
faddl
aad
fbld
jae
sub
xor
pusha
je
mov
mov
cmc
movsb
jmp
outsl
mov
xor
scas
mov
sub
mov
mov
shlb
dec
clc
mov
add
mov
mov
movsb
and
jmp
pop
inc
clc
or
lods
sbb
gs
mov
inc
pushf
js
inc
lods
jge
repnz
stc
mov
dec
inc
lods
popf
xor
loopne
sbb
xor
sahf
push
jge
mov
insb
jp
push
and
jae
inc
es
inc
mov
push
stos
inc
mov
fists
in
and
in
sti
sub
pop
jecxz
or
fmul
std
clc
arpl
dec
push
loopne
fldcw
sub
shll
lret
pop
mov
ret
daa
ret
or
cmp
pop
mov
in
int
pop
sub
xor
xchg
cmp
or
lock
pop
imul
push
and
mov
adc
imul
std
int3
data16
insb
or
das
int3
mov
test
movsb
aam
pop
dec
jb
push
subb
pop
stc
rep
mov
xlat
fwait
ja
das
xchg
or
cmp
inc
push
sahf
push
adc
rol
sub
lock
incl
jp
imul
fdivrs
call
add
pop
mov
pop
jns
sub
into
jp
aam
inc
jno,pn
je
push
loopne
les
scas
pop
lods
jne
pop
pop
mov
xlat
adc
mov
cltd
aaa
out
lahf
lret
insb
sahf
out
mov
daa
mov
jo
push
push
pop
add
fisubrl
jno
into
push
and
into
movsl
sub
loop
mov
adc
imul
data16
push
mov
hlt
sub
sub
xor
out
dec
psllq
cld
adc
out
adc
add
in
push
sti
in
arpl
push
jno
or
out
repz
in
stos
repz
push
jmp
mov
in
dec
jae
mulb
push
std
je
incb
pop
mov
sub
jno
pop
xor
out
jo
popa
pop
xor
cmp
rolb
aad
sbb
adc
mov
mov
fwait
adc
xchg
aad
sub
mov
in
pushf
div
rcr
jae
daa
jmp
xor
jb
add
inc
mov
call
leave
and
push
aad
sar
mov
mov
lods
call
jbe
xchg
jo
es
fdivr
test
mov
rol
cwtl
dec
or
in
mov
push
adc
js
cmp
push
push
pop
cmc
and
sbb
mov
pushf
mov
dec
aas
inc
and
sub
test
lock
jae
mov
dec
stc
cmp
insl
insb
iret
clc
push
mov
mov
dec
mov
inc
je
icebp
jg
jne
dec
daa
hlt
add
mov
and
jg
insb
jmp
sub
imul
mov
push
jmp
add
sbb
xor
mov
mov
enter
xor
packsswb
push
push
scas
arpl
push
gs
push
push
xor
cmp
jns
movsb
push
fisttpll
inc
out
stc
adc
fs
dec
sbb
dec
xor
or
jno
testb
loope
push
es
mov
out
or
das
mov
mov
lret
sub
jns
adc
fs
dec
mov
jl
out
outsb
data16
shll
ja
test
sub
push
inc
cmc
mov
outsl
in
aas
cmp
in
sbb
sub
pushf
in
mov
jp
fstps
lea
mul
rclb
fcomps
add
fmull
and
shll
inc
cmp
push
loop
xor
pop
mov
pop
arpl
inc
mov
dec
dec
in
inc
mov
pop
adc
push
bound
jae
jae
push
add
fnsave
pop
psadbw
dec
mov
jae
xor
lock
dec
cmp
pop
jle
into
dec
pmulhuw
ljmp
push
addb
int
push
jle
mov
clc
fdivr
std
int
mov
jnp
imul
faddl
inc
jno
incb
xor
pop
xor
clc
out
push
xchg
mov
xchg
insl
lret
out
xor
cmp
xchg
mov
hlt
ja
out
in
push
jbe
pop
push
pusha
repz
sub
in
in
fsts
pop
mov
les
outsb
push
sbb
jb
lret
mov
mov
loopne
and
and
and
iret
mov
clc
mov
cli
jl
cmp
lods
inc
cmp
ret
or
notl
push
push
bound
add
sahf
icebp
adc
bound
sub
arpl
jle
jle
and
movl
out
ja
repz
jnp
sahf
dec
gs
iret
adc
push
xchg
xor
jl
dec
or
dec
scas
es
mov
loopne
or
mov
fs
out
jnp
pop
lods
fbld
cmc
pop
cmp
int
mov
gs
andb
xor
inc
pop
cmp
int3
mov
fxch
dec
insb
mov
movsl
inc
mov
repnz
imul
jmp
mov
loop
mov
jp
mov
lds
imul
test
dec
inc
fwait
scas
cmc
das
xor
jnp
idivb
ljmp
mov
dec
inc
imul
cmp
inc
lock
fcoml
push
jno
punpckldq
fdivl
cmp
pop
movsb
xchg
das
sbb
mov
jmp
hlt
cmp
dec
loopne
inc
push
in
add
cltd
adc
pop
jb
push
dec
push
dec
js
inc
jbe
sbb
out
jl
jnp
shr
leave
iret
push
data16
xchg
mov
scas
mov
mov
lods
loopne
mull
mov
hlt
jnp
repnz
sahf
pop
leave
fs
mov
jo
gs
test
jae
xchg
mov
popa
xor
jno
sub
dec
imul
in
imul
xor
add
xchg
dec
cmp
gs
pop
push
das
and
adc
xor
subl
add
xor
fldenv
pop
js
or
jnp
out
dec
and
adc
mov
push
movsl
pop
push
jmpw
lods
mov
cmp
shll
popa
or
mov
xorl
sbb
cli
test
ljmp
mov
push
dec
in
dec
xchg
cmp
pop
cltd
jnp
pop
jmp
jbe
sbb
lock
jae
leave
xlat
lahf
mov
ss
jp
push
lods
ror
dec
arpl
sub
out
xorl
mov
pop
gs
jp
fcomps
ds
add
enter
xor
scas
cmp
lcall
mov
insl
push
or
mov
imul
mov
dec
xchg
js
dec
lods
in
out
ja
cmpsb
in
nop
arpl
sub
cmpb
cmp
xor
cltd
pop
ret
dec
adc
dec
add
ret
das
cmp
sub
pop
js
aaa
xor
xor
mov
test
mov
sub
jge
sbb
adcb
push
pop
mov
loop
xor
cmc
or
mov
sahf
scas
idivl
push
ss
rcll
push
xor
stos
push
sub
ret
pop
sub
sub
dec
xchg
fisttpll
mov
aad
jns
ret
out
pushf
ss
xor
repz
xlat
pusha
ss
loopne
xchg
insl
in
fsubl
mov
leave
pop
mov
data16
mov
jmp
sbb
and
dec
add
stc
cld
sbbl
ja
push
xor
push
mov
sub
xor
xlat
xor
jle
dec
call
mov
inc
dec
adc
jmp
xchg
push
es
scas
sub
push
mov
or
loop
jbe
mov
jp
pop
scas
inc
gs
sub
jnp
cmp
pop
sub
push
mov
push
or
mov
mov
mov
inc
and
repnz
xlat
mov
es
add
cmp
iret
pop
xchg
jns
sbb
sahf
nop
pop
insb
xor
sbb
insl
dec
es
lock
sub
test
jl
xor
dec
adc
addr16
int3
and
fs
jl
loop
lret
push
inc
jns
or
push
stc
pop
jb
sbb
sub
sub
testl
aad
bound
push
pop
popa
das
imulb
leave
jns
test
dec
add
sbb
and
sub
mov
push
lea
inc
cmp
shrl
outsb
loopne
xor
jnp
bound
jbe
jecxz
mov
dec
cld
cmp
ljmp
mov
insb
ljmp
arpl
sub
xchg
fcomp
shlb
das
push
push
je
and
scas
stc
push
pop
sub
push
daa
mov
dec
dec
ss
xor
xchg
mov
jp
imul
sub
push
dec
cmp
pop
jb
dec
mov
jecxz
loop
inc
sub
je
ja
push
call
xor
xor
inc
inc
lods
mov
je
das
or
fisttpl
mov
icebp
in
dec
ja
in
xchg
pop
cmp
and
sbb
mov
push
rcrl
jno
add
jb
fisubl
cmp
mov
js
popa
jge
enter
add
push
int
jnp
push
mov
cmp
xor
mov
push
xchg
enter
jge
mov
ret
pop
xor
sub
mov
push
dec
jl
daa
jmp
in
or
mov
ljmp
push
or
sub
push
xorb
dec
fwait
shl
xor
out
mov
dec
ret
and
xchg
cmp
dec
add
sbb
mov
leave
sub
pop
jl
out
adc
fstps
daa
cmp
and
inc
pop
pop
sahf
arpl
xor
pop
pop
sahf
dec
push
xchg
fs
ret
sub
mov
fnsave
cmpsl
and
mov
xchg
mov
cld
mov
inc
movsl
es
jb
mov
scas
xchg
es
adc
jmp
cltd
push
mov
mov
mov
mov
xor
in
es
xchg
push
lcall
xorl
cmp
mov
mov
mov
sub
add
into
xchg
pop
sbb
arpl
mov
cli
je
pop
push
mov
jmp
jnp
inc
pop
or
add
arpl
mov
xor
fimull
stos
push
ja
cmp
into
loopne
mov
clc
call
and
cmp
or
popa
sbb
jne
divl
pop
jnp
clc
movlps
sub
addr16
loopne
xor
push
sbb
movsl
leave
dec
hlt
gs
test
xor
scas
test
frstor
push
jmp
outsl
xorb
cld
adc
xchg
adc
pop
pop
or
push
sti
daa
xlat
push
pop
out
fsub
popf
mull
jmp
push
mov
jmp
lods
add
out
fsubr
xor
and
sub
cld
popf
imulb
loope
xchg
test
out
adc
add
inc
fsubs
dec
lock
loopne
add
pop
add
push
mov
bound
lahf
and
fs
popf
push
outsb
push
aad
out
movsl
adc
sbb
call
popa
add
add
shl
sbb
in
mov
cwtl
in
mov
lods
pop
mov
push
cmp
xor
in
icebp
popa
xchg
outsb
inc
vextracti64x2
fcmovnb
loop
sbb
xchg
pop
adc
xor
jmp
insl
mov
xchg
push
pushf
bound
and
or
xor
arpl
dec
cmc
mov
mov
icebp
popa
cmp
add
xor
imul
cli
fs
testl
inc
xchg
popa
sbb
inc
rorb
sbb
xor
sub
jns
xchg
mov
sbb
inc
inc
sbb
sbb
push
notb
insb
jnp
push
stos
sbb
jb
call
jae
add
dec
and
in
jae
and
and
xor
xchg
mov
ret
lock
ja
sbb
and
push
cmpsl
dec
or
out
jp
jbe
xchg
lods
sahf
xchg
push
aas
pop
fcomip
js
sbb
inc
inc
pop
mov
stos
inc
leave
nop
iret
dec
pop
mov
subb
push
stos
adc
cmp
mov
and
inc
sub
loopne
daa
addl
out
dec
scas
push
sbb
icebp
lret
int
push
pop
add
fimull
jb
aad
pop
fidivrs
sub
jp
repnz
push
ficomps
sub
fmul
adc
cli
loope
and
add
pusha
mov
inc
jbe
cmpsl
sbb
insl
ljmp
es
outsl
sub
mov
jecxz
shlb
movsl
cltd
add
xor
lahf
dec
clc
enter
fimull
push
sub
add
arpl
push
pop
call
inc
popa
cmp
fs
je
aas
rorl
in
test
aad
cli
dec
ds
fs
dec
cmp
and
push
popa
orl
push
push
xchg
mov
cmp
ljmp
mov
shrb
mov
jecxz
mov
cmp
mov
sub
bnd
pop
std
sbb
into
out
push
mov
mov
je
lret
sub
cmp
in
pop
bnd
or
mov
stos
sahf
clc
xchg
xchg
cmp
imul
scas
ljmp
mov
aad
jnp
push
lahf
pop
jb
sub
mov
lcall
jge
pop
pop
pop
popa
addl
dec
mov
dec
movsb
into
insb
in
into
xor
and
mov
mov
in
sub
ljmp
popf
data16
out
loopne
or
pop
scas
jns
adc
lcall
ficomps
lods
icebp
add
dec
ja
push
fadd
fstp
out
rolb
mov
sbb
lea
xchg
push
fbstp
sub
movsl
pusha
insb
jg
jbe
sbb
push
add
and
add
inc
and
xor
fwait
in
arpl
push
pop
mov
sub
push
pop
cmp
cmpsl
dec
call
xchg
and
into
adc
sub
dec
lds
adc
and
dec
popa
jmp
insb
pop
popf
push
dec
rcll
lea
cmp
pop
push
ljmp
in
sub
loope
into
jle
movl
out
popa
fdivs
adc
xor
add
sub
sbb
inc
lock
int
push
cmp
jge
out
fildl
pop
enter
add
andl
inc
out
pop
lret
sbb
sbb
xchg
lods
shlb
mov
push
inc
jb
add
or
mov
and
sbb
mov
out
pop
daa
test
dec
mov
mov
adc
outsb
jmp
fs
je
jae
mov
jle
nop
data16
sti
mov
js
jmp
inc
or
jbe
andl
arpl
pop
into
enter
ret
mov
sti
pop
sarb
dec
lea
mov
ds
pop
dec
pusha
arpl
push
inc
test
xlat
mov
ss
repnz
cmp
xor
popa
insl
add
faddp
adc
hlt
mov
test
dec
fadd
or
cld
mov
movsl
icebp
movsb
add
pop
clc
pop
outsb
jb
pop
sub
mov
dec
shrl
aaa
xor
add
sub
mov
or
push
into
ret
cltd
cmp
testb
pop
sbb
cwtl
push
mov
and
aaa
in
add
and
cmpsb
mov
outsl
dec
push
mov
mov
lods
adc
add
cmp
adc
lret
dec
pop
mov
test
mov
inc
jge
pop
es
sbb
sbb
out
rolb
add
addl
mov
imul
xchg
lock
jae
push
xor
add
sub
mov
sbb
int
sbb
pushf
addr16
jno
and
sub
testb
cs
adc
inc
sbb
adc
cmp
xor
out
dec
xchg
cld
push
sub
mov
mov
aas
mov
lock
xchg
outsb
push
call
sbb
adc
int3
out
scas
call
mov
je
sub
and
repnz
xchg
ret
fcomi
loop
xchg
dec
sub
and
mov
or
repz
je
cmpsl
jecxz
jge
jmp
add
or
xor
dec
jl
bound
in
clc
scas
push
push
sbb
lret
push
dec
stos
data16
or
int3
cmpsb
and
bound
sahf
nop
in
insl
sub
scas
push
mov
add
jl
add
das
dec
stos
mov
outsb
out
cltd
pop
enter
add
mov
and
imul
xor
cmp
pop
dec
out
jns
out
aaa
mov
inc
outsl
pop
outsl
daa
outsb
leave
aad
mov
mov
test
push
dec
dec
dec
rclb
push
pop
nop
pop
push
sub
sbbb
xlat
xchg
lcall
cmc
mov
stc
out
arpl
movsl
xor
jns
sub
pop
mov
scas
in
dec
ret
jle
fmuls
shrd
cmp
mov
push
cmp
jge
mov
xlat
outsl
push
hlt
ljmp
imul
dec
jl
sub
mov
imul
cmp
jge
addr16
sbb
lcall
bound
pop
mov
mov
addr16
movsl
mov
les
into
jmp
aaa
hlt
lods
cwtl
cmc
mov
lods
loop
jp
popa
sbb
cmp
or
cld
push
mov
cwtl
adc
in
jno
jns
add
fwait
movsl
push
add
ja
cli
bound
xchg
jmp
mov
insb
sub
jno
jae
fsubl
pop
mov
insl
in
mov
repz
outsb
push
xchg
sbb
mov
mov
fiaddl
inc
dec
xor
lods
add
fsubr
and
sbb
pop
cld
out
cs
add
ffree
loop
and
sbb
aam
ret
cmp
sahf
jecxz
or
repz
add
sahf
push
xchg
mov
sahf
cmp
mov
daa
insl
push
fcomip
icebp
jbe
push
push
inc
hlt
xchg
xor
dec
xor
dec
inc
xchg
dec
sbb
ds
imul
inc
pop
cmc
xchg
in
cmpsb
mov
and
xor
das
imul
jns
jno
add
dec
pop
cmc
daa
mov
ljmp
es
stos
mov
aad
xor
xchg
cmp
rorl
bound
stc
shrl
inc
xchg
sbb
sub
adc
mov
loopne
clc
sbb
dec
xor
push
dec
and
mov
dec
sbb
xor
inc
pop
jmp
dec
xchg
jecxz
ds
out
fadds
fidivs
xchg
dec
and
pop
dec
out
mov
sbb
call
es
ret
loope
cmc
cmp
inc
in
iret
cmp
jecxz
je
hlt
and
lods
sbb
addr16
and
mov
lret
jl
stos
ret
mov
xor
in
and
je
pop
lock
dec
dec
js
push
sub
in
cmp
sbb
adc
mov
shrl
push
ret
and
and
sbb
push
add
sti
sbb
xchg
sbb
sbb
mov
xor
jno
aad
sbb
shrl
sbb
mov
inc
pusha
jb
es
addl
adc
cmp
iret
repz
sub
ret
dec
adc
fisttps
popf
and
push
sbb
dec
test
movsb
test
xchg
adc
push
sub
push
adc
sbb
cmpb
lds
mov
jge
mov
dec
push
push
add
loopne
in
mov
jge
add
stos
pop
push
test
in
adc
and
jno
cs
push
mov
in
pop
inc
fucomip
mov
data16
or
pop
inc
bound
pop
popa
rolb
xor
pop
push
in
test
sar
dec
lahf
and
in
jl
inc
push
push
xor
clc
mov
stos
in
inc
lock
stos
sub
mov
fimuls
jge
inc
pusha
ja
add
jno
adc
sbb
xchg
lods
rolb
stos
sub
fdiv
xor
aam
dec
mov
mov
sbb
call
cmp
sbb
jg
jmp
xor
adc
push
and
arpl
sbb
sar
cltd
outsl
jecxz
mov
gs
pop
imulb
in
jmp
jb
sbb
mov
adc
and
sub
cmp
push
gs
mov
dec
sbbb
std
mov
jmp
and
scas
mov
fdivl
adc
pop
enter
inc
lea
lods
cmp
mov
sbb
push
mov
xor
addr16
jb
push
and
dec
lahf
mov
xchg
stc
and
sbb
sbb
outsl
in
icebp
jbe
mov
sahf
lcall
gs
shlb
push
inc
mov
scas
lret
daa
mov
repz
dec
sub
test
inc
mov
call
jmp
push
fstps
dec
das
lock
sub
icebp
mov
fmuls
or
movsl
or
jne
jb
cmp
je
xchg
dec
dec
testb
cmpsb
cmpsb
arpl
mov
ret
push
xor
loope
mov
mov
negb
jnp
push
notb
add
and
and
jp
xor
int
or
push
push
mov
out
or
cmp
jp
loopne
leave
loop
adc
add
mov
es
clc
push
mov
jno
cmp
fsqrt
xor
idivb
or
imul
xchg
push
add
hlt
int
push
fsubl
outsb
pop
add
jns
test
cmpsb
or
popf
insl
mov
dec
pop
sbb
inc
jg
pop
or
or
popa
push
push
xchg
and
mov
decb
push
in
pop
cs
push
jmp
bound
pop
test
lret
and
shll
arpl
int
sub
sub
or
int3
lcall
iret
jle
mov
push
xchg
int3
fucomp
cmc
sbb
xor
outsl
dec
jle
push
repnz
add
in
ret
pop
mov
hlt
jmp
add
stc
or
and
mov
add
ret
sub
inc
adc
fs
sub
movsl
pop
ds
sub
popf
in
pop
and
xor
and
rclb
sub
sbb
in
fistps
dec
ljmp
call
bound
push
roll
call
mov
insb
cmp
in
dec
jno
mov
push
out
xchg
mov
pop
ljmp
mov
pop
dec
mov
cmp
insl
insl
test
shl
fadds
test
xor
cld
shlb
out
hlt
dec
pop
sbb
and
dec
pop
in
fs
add
and
dec
push
jmp
dec
mov
movsb
pop
add
dec
lock
jb
leave
inc
push
addr16
mov
pop
sbb
and
stc
jae
mov
sar
jo
add
inc
mov
outsl
addr16
pop
xor
and
loop
outsb
ret
jge
or
xor
adc
lods
rep
sbb
jae
bound
les
in
pop
pop
icebp
cmp
push
push
pop
push
xchg
test
push
test
pop
or
test
push
stc
cli
xor
mov
xchg
add
dec
mov
fs
push
sbb
aaa
ret
jno
pusha
jg
es
push
pop
stc
rorl
daa
in
mov
sbb
inc
mov
aas
pop
arpl
daa
push
mov
push
sub
movsl
xor
test
push
sbb
add
jo
shlb
in
daa
mov
xchg
test
imul
xor
jb
push
add
aad
in
out
mov
inc
popa
jae
insb
ss
loop
cwtl
xchg
mov
in
add
cld
add
stc
push
imul
adc
cmp
push
mov
push
fnsave
push
xor
mov
shlb
in
rcrl
mov
cmc
mov
jno
fiadds
xchg
add
loop
pop
xchg
insb
mov
jge
js
pop
jno
add
loopne
xor
xor
mov
leave
imul
sbb
mov
pop
jbe
mov
mov
enter
inc
mov
pop
dec
lds
xchg
cmc
mov
mov
movsl
adc
popa
cmc
scas
rorl
pop
mov
mov
mov
or
xchg
nop
jl
stos
mov
stc
ret
sub
es
movsb
and
mov
sbb
in
pusha
jnp
idivl
push
test
std
jp
nop
test
test
push
in
mov
mov
lret
repz
loopne
push
out
dec
insb
out
movsb
inc
dec
cmp
push
lahf
or
sub
imul
push
in
dec
icebp
lcall
rolb
cmp
jnp
push
push
mov
pop
and
jb
pop
mov
loope
movsb
push
cmp
jae
in
and
xchg
pop
test
mov
in
divl
dec
clc
cmp
sbb
popf
sbb
cmp
daa
fimull
sahf
cmpsl
inc
pop
jbe
fistl
movsb
clc
dec
mov
loop
jnp
jbe
addr16
dec
fnstcw
and
pop
and
rorb
out
and
xchg
jae
or
inc
dec
lds
mov
mov
push
imul
scas
icebp
jbe
jae
ljmp
add
jg
insb
je
fwait
std
adcl
jbe
jmp
mov
jns
sahf
int
mov
add
and
flds
ljmp
mov
roll
lea
mov
sbbb
adc
add
test
or
test
or
sub
test
je
inc
jecxz
push
jnp
xchg
test
sub
sarl
addr16
lods
xor
in
jmp
movsl
cmp
xor
cld
rep
xor
movsb
jge
push
stos
shrl
jecxz
cmp
pop
push
jno
mov
push
lahf
stos
loop
mov
insl
xor
call
mov
imul
xchg
fsubrs
push
fsubrs
outsb
fwait
dec
sbb
xor
aaa
push
dec
xchg
sbb
jecxz
cmp
fs
sub
shlb
sub
je
mov
mov
adc
imul
fidivs
int3
push
mov
adc
cld
add
cli
add
xor
inc
inc
add
ss
mov
andl
in
aas
mov
notl
lea
inc
stos
mov
push
push
and
and
lea
in
sbb
mov
popa
xchg
pop
inc
push
pop
std
gs
popa
and
push
add
jnp
cmp
stos
xor
jb
sub
or
dec
mov
xlat
lds
dec
shrl
add
mov
add
inc
mov
and
mov
fucompp
adc
frstor
push
jle
arpl
cmp
das
rcrb
mov
sbb
mov
xchg
and
in
mov
mov
fs
lods
pop
dec
mul
xchg
cmp
cmc
rorl
sub
std
pushf
pop
dec
and
enter
xchg
adc
les
xchg
stos
and
xchg
rcl
push
bound
sahf
in
adc
dec
xor
dec
cmpsb
mov
jb
xor
push
pop
sti
imul
sub
pop
jns
pop
mov
mov
pop
aam
in
subl
pop
lds
push
jbe
cli
and
js
and
xor
repnz
out
or
and
dec
inc
cmp
out
roll
push
bound
imul
repnz
inc
and
mov
rcrb
or
push
lret
loop
fs
bound
xor
mov
shll
test
xor
jb
stos
cmp
jecxz
je
mov
jge
lret
les
mov
lds
sbb
jp
subps
imul
subb
js
addr16
lds
jmp
or
xchg
and
loope
aad
cmp
cmp
jg
add
ficompl
hlt
inc
rclb
fdivrl
ljmp
inc
jp
push
int
fisubs
pop
loopne
imul
outsb
mov
imul
sub
daa
sbb
add
adc
orb
pusha
mov
push
push
fildl
rolb
jmp
pop
pop
daa
dec
cmp
insl
loopne
fsubp
dec
in
xchg
sub
add
je
gs
clc
dec
bound
cs
shll
push
xchg
cmp
sbb
dec
lods
dec
cmp
scas
nop
aad
dec
rcrb
mov
dec
arpl
xor
fisubl
lret
sub
cmp
sbb
and
cmp
insb
jp
dec
icebp
mov
jae
adc
jl
imul
inc
jbe
jbe
pop
icebp
cmp
jnp
dec
adc
outsb
sar
sbb
push
push
sar
xor
xorb
jecxz
and
push
call
pop
jecxz
icebp
jmp
ja
cwtl
sub
pop
jb
fcom
sub
rorb
icebp
xor
sbbl
int3
mov
jae
loop
imull
jp
aam
aam
inc
fadds
jno
mov
mov
jl
imul
imul
insb
inc
xchg
cmp
dec
jecxz
stc
adc
insb
xor
test
push
add
sub
inc
rcrl
cwtl
fstps
ljmp
pop
adc
push
and
cmp
jb
rcr
stos
outsl
push
lock
ljmp
nop
sbb
filds
or
add
and
add
lock
sbb
dec
sub
jmp
mov
repz
test
and
dec
cmpsb
push
dec
adc
sub
mov
push
sub
xchg
add
mov
adc
inc
jle
xor
into
mov
xor
jnp,pn
clc
mov
notl
es
mov
cmp
scas
and
jge
sub
mov
enter
lahf
int
rorl
insb
pop
mov
bnd
xor
sub
pop
push
push
pop
pop
adc
jl
inc
insl
add
je
mov
pop
mov
clc
ret
mov
jbe
adc
xor
aad
xlat
lock
push
jp
add
fisttpll
sbb
jb
movsb
xchg
dec
xchg
add
sarl
xchg
cmpsl
xchg
loop
mov
and
push
dec
stos
sarb
dec
jns
or
in
ja
pop
rcll
enter
dec
mov
inc
mov
jecxz
xor
sub
mov
add
arpl
jp
adc
cs
iret
negb
sbb
pop
jb
icebp
mov
cmp
lods
or
outsl
xor
mov
outsl
cmp
sbb
addr16
pcmpeqd
xchg
push
cmpsb
mov
gs
mov
in
repz
lods
lret
pushf
daa
xchg
add
stos
and
or
pop
sti
push
adc
jg
sub
add
out
cltd
sub
lods
and
pop
dec
in
out
mov
ss
fdivs
mov
mov
loop
or
daa
out
jp
pop
repz
push
mov
arpl
scas
add
and
fs
add
add
pop
lods
cs
push
lea
data16
cmp
pop
ja
leave
mov
mov
mov
decb
mov
cmc
mov
je
sub
data16
push
std
push
push
leave
dec
cli
scas
call
xor
xor
sub
js
jbe
add
roll
jmp
xchg
jo
mov
repnz
jae
sub
pop
and
in
arpl
mov
and
adc
ljmp
pushf
out
movsl
sbb
mov
push
popa
mov
push
xchg
xchg
insb
pop
xchg
ljmp
lret
call
jno
jmp
arpl
aad
cmpsl
mov
dec
add
mov
push
xchg
ret
or
scas
mov
mov
mov
mov
and
inc
aam
dec
into
sti
imul
imul
lock
cmc
mov
nop
jae
jmp
push
icebp
and
rorb
enter
jnp
push
adc
xchg
cmp
popa
add
cmp
movsb
ja
icebp
lcall
adc
in
hlt
in
jecxz
pop
cmp
mov
cmpsb
pop
pusha
shlb
mov
adc
inc
push
mov
mov
aas
movsb
movsl
dec
movsb
mov
dec
mov
dec
push
cmp
push
int
imul
cmp
dec
jle
out
mov
jge
sub
cwtl
outsl
mov
jbe
mov
mov
outsb
cmp
into
mov
in
addb
push
inc
mov
test
pop
adc
fsts
push
loope
addb
shll
outsb
push
in
cmpsl
mov
jge
imul
jmp
dec
negb
or
lods
push
imul
jae
stos
and
mov
fs
lret
stos
mov
enter
push
inc
or
cmc
clc
cmpsb
ja
lods
adc
repz
push
push
shlb
dec
cmp
inc
xor
push
clc
mov
dec
stos
add
push
jae
push
mov
mov
jo
cmp
xchg
imul
inc
inc
sub
fdivs
popa
insl
cli
lahf
adc
mov
push
les
aad
lock
xor
mov
aad
ljmp
mov
xor
dec
dec
insl
popa
gs
jl
pop
outsl
scas
jb
scas
popf
addr16
arpl
adc
push
stc
fisubrs
jmp
jge
jno
jo
or
add
cmp
adc
popf
bound
iret
dec
dec
mov
inc
daa
out
in
cld
mov
cwtl
fstpt
mov
das
mov
pop
pop
mov
pop
sub
xor
add
mov
jo
jae
or
fdivs
jl
dec
sbb
inc
xor
dec
add
or
jae
pop
xrelease
testb
in
ret
popa
pop
sub
arpl
mov
lea
ds
pop
push
gs
or
cmc
jae
jmp
loope
fildl
cmpsb
cmp
fwait
std
lret
jmp
sbb
cmp
pop
jns
add
add
xchg
fs
pop
loope
pop
sub
data16
notb
inc
add
add
lods
nop
add
and
sub
inc
aam
jb
imul
sub
xchg
lods
mov
sbb
fldt
aam
and
ret
sqrtps
sbb
cld
data16
sub
inc
or
mov
int3
add
xchg
pushf
imul
stos
pop
popa
inc
out
mov
cmp
dec
stos
sbb
adc
dec
cbtw
ja
and
and
loopne
or
pop
sbb
cmc
repz
in
scas
adc
mov
dec
jge
mov
lock
jnp
push
sbb
xchg
imull
imulb
jb
iret
ss
and
mov
push
push
ljmp
in
adc
out
or
push
add
sbb
sbb
inc
fs
mov
jmp
bound
aad
jb
xchg
lahf
mov
paddsw
lock
pop
std
mov
nop
mov
adc
sahf
insl
lods
jae,pn
dec
imul
or
fisubrs
ret
insl
jno,pn
dec
mov
aam
into
inc
bound
inc
dec
or
jle
or
pop
inc
inc
jb
movsb
sub
imul
ja
stos
int
into
dec
fdivp
insl
cmova
pop
cmp
pop
bound
pop
in
jno
push
or
ljmp
daa
mov
push
loop
cwtl
daa
adc
in
scas
js
jnp
cmp
scas
adc
es
fistps
test
outsl
loope
sub
mov
cld
fistpl
push
push
pop
jg
mov
das
adc
imul
daa
popa
leave
adc
out
dec
push
mov
push
cmp
add
sub
fdivr
jp
scas
push
cmp
rclb
int3
mov
xchg
xor
into
mov
xor
movsb
adc
pop
aad
inc
and
push
push
add
orl
cmp
clc
sub
outsb
pop
jae
jmpw
lods
cli
push
out
or
cmp
push
xor
xchg
jae
jb
jmp
popf
xchg
mov
lods
pop
inc
cmp
dec
sbb
div
mov
loopne
out
das
repz
clc
jle
cltd
mov
lahf
mov
leave
dec
xlat
xchg
dec
jle
inc
mov
not
sub
pop
or
aad
cmpsl
inc
sbb
clc
jmp
pop
cld
addr16
in
pop
das
lahf
lds
and
mov
aaa
cs
adc
cmp
pop
sub
pop
icebp
pop
mov
jle
pop
ja
sub
xor
movsb
mov
push
sarb
lock
repnz
lock
push
popa
jb
in
mull
lock
jmp
xor
stos
pop
push
cmc
push
cs
mov
jge
mov
aam
mov
int3
mov
rol
inc
je
xor
sub
outsb
cmp
std
mov
js
cs
ret
imul
jno
icebp
lods
inc
jo
xchg
icebp
stc
pop
gs
dec
imul
testl
push
fistl
movsl
in
cmpsb
movsb
cltd
scas
sti
shrb
jb
adcl
lahf
div
add
imul
out
in
in
push
scas
arpl
ret
int3
jo
rclb
xor
sarl
aad
or
popa
push
dec
cli
sub
dec
jo
idivb
clc
in
shrb
shlb
sub
in
sbb
fcmovnb
add
push
sahf
pusha
pop
push
cwtl
out
jl
cwtl
stos
mov
dec
outsb
in
mov
mov
mov
jno
subb
jecxz
dec
mov
scas
or
mov
fwait
repnz
mov
loop
pop
xor
insb
cmp
add
imul
cmp
fs
fcoml
fs
sub
sub
jmp
lock
shll
jae
sub
cmpb
nop
sub
addb
sub
adc
icebp
or
mov
or
mov
popa
rolb
jge
jle
and
ret
gs
jecxz
pop
lock
rol
int3
in
push
cmp
lea
notl
addl
div
add
jmp
jge
mov
into
pop
pop
popa
rcl
fs
cli
xchg
popa
jns
pushf
pop
or
sub
mov
or
mov
jmp
sub
imull
mov
adc
and
sub
es
add
inc
sub
pop
inc
add
xor
popa
jb
mov
or
cmpsl
xor
dec
dec
imul
jns
mov
ljmp
in
jae
push
enter
and
iret
dec
mov
in
gs
inc
mov
jae
out
clc
inc
push
sub
loop
mov
and
bound
xchg
cwtl
fnstenv
call
cmp
jns
cltd
repz
and
icebp
lea
sbb
lods
pop
sub
pop
out
add
xchg
xchg
push
cmp
mov
arpl
dec
clc
scas
xor
or
and
or
or
adc
inc
call
mov
adc
lods
mov
sub
add
daa
nop
adc
test
es
orb
sub
dec
or
ss
sub
rcrb
xchg
jmp
adc
push
and
fbstp
sub
xor
cmp
fbld
mov
fcomp
cmc
push
push
pushf
fistps
mov
ds
pusha
mov
pop
daa
add
inc
push
cmp
mov
loop
sahf
or
in
push
mov
hlt
jg
sub
mov
pop
push
or
xor
notl
out
jns
push
dec
dec
mov
outsl
aaa
jl
sbb
and
jecxz
jp
mov
call
and
in
pop
aaa
stc
shll
pop
and
push
rorb
les
fildll
es
cmp
xchg
sbbb
shlb
cmp
add
pop
xlat
imul
mov
imul
daa
adc
lea
imul
int3
into
pop
jno
push
mov
dec
js
xchg
mov
and
cli
mov
sub
push
push
and
lds
or
add
push
adc
sub
xchg
pop
or
lods
inc
into
dec
or
popa
push
cmp
mov
jmp
xor
inc
push
pop
jge
in
push
js
ljmp
push
lcall
movsl
xchg
dec
daa
shl
divb
cmp
dec
icebp
jg
mov
inc
jb
xor
cmpsl
xor
or
movsb
sub
mov
jge
sub
int
sub
in
xchg
jns
and
scas
and
enter
sub
push
sub
fisubl
roll
and
xchg
stos
nop
xor
not
inc
aaa
cmpsl
inc
mov
jns
mov
repz
mov
daa
jbe
pushf
jb
add
jae
sub
jp
stc
xchg
nop
out
push
movsl
les
negb
jb
cmpsl
cld
sbb
or
mov
repnz
xchg
push
and
and
mov
std
rolb
inc
sbb
loope
call
sub
je
je
mov
xchg
testl
pushl
std
gs
loop
push
xchg
enter
add
fcomps
inc
cmp
in
push
mov
insl
pop
xchg
cmp
push
xor
pop
mov
jl
mov
pop
jmp
push
inc
mov
sbb
add
int
pop
add
push
cmpsb
xor
mov
mov
jns
mov
ds
lahf
and
pop
inc
incb
popa
jbe
popf
icebp
lods
imull
push
dec
jmp
jbe
ds
mov
sub
xor
cmpsl
adc
mov
scas
repz
imul
push
pop
sub
jnp
mov
mov
addb
pop
shlb
add
cmp
lea
push
ljmp
hlt
adc
cmc
ja
daa
mulb
stos
sub
and
int
push
test
sbb
daa
cmp
dec
xabort
sub
loope
jecxz
xor
mov
push
int
lock
ss
jecxz
cmp
mov
daa
add
or
dec
daa
mov
and
sbb
add
sub
push
xchg
cld
cs
push
adc
ja
icebp
lret
lds
sarb
and
test
out
push
sar
xor
pop
sub
sbb
ljmp
sub
jae
test
repnz
push
psrld
adc
add
movsl
in
mov
add
push
and
pop
shrb
mov
sub
ror
xor
out
in
arpl
movsl
mov
les
cmp
inc
orb
inc
sbb
aam
xor
movsl
fs
pop
gs
cmpsl
fidivs
ror
lods
xchg
sbb
jne
daa
mov
ja
pop
inc
sub
add
push
out
xchg
xor
fwait
xor
pop
inc
nop
mov
lret
xor
outsb
fcomip
das
push
push
test
lahf
xlat
adc
mov
shlb
cmp
xchg
pop
insb
shll
mov
movsb
mov
addb
or
xchg
xchg
mov
nop
mov
xchg
jp
xor
pop
les
pushf
sti
sbb
mulb
jle
lahf
lods
andb
push
jmp
cmp
and
mov
dec
insl
mov
or
and
in
movsb
dec
pushf
fiaddl
or
movsb
test
pop
sub
inc
dec
sub
push
test
pop
pop
adcb
pusha
jb
stos
das
es
xchg
pop
adc
in
insl
xor
int3
add
dec
ljmp
jbe
dec
xchg
inc
sub
fcomip
cwtl
push
mov
xlat
mov
popa
mov
out
inc
std
add
testb
fcoms
push
cmp
jae
and
push
bound
inc
sbb
aaa
imul
shrb
and
pop
mov
inc
xchg
in
inc
and
mov
sub
les
and
lahf
mov
push
inc
mov
mov
stc
aaa
pop
lock
xchg
and
fsubrl
clc
fisubrs
insl
stc
mov
dec
stc
lock
icebp
dec
stos
push
mov
xor
es
jne
fld
sbb
jnp
sets
adc
outsl
jmp
loop
cmp
fistpl
xchg
nop
push
lods
fidivrs
in
push
pop
fpatan
ss
loop
adc
cmp
das
inc
cmp
gs
pop
mov
sub
push
inc
cmp
jb
xor
movsb
dec
sub
add
mov
and
and
add
loope
inc
pop
xor
mov
sub
inc
jp
gs
xchg
mov
inc
adc
adc
xor
icebp
push
xchg
mov
nop
add
hlt
aad
out
icebp
rcrl
sahf
xor
cmp
mov
repz
cli
repz
push
je
cmp
jl
adc
int3
test
cmpsl
sarl
decb
and
mov
ja
iret
inc
bound
push
inc
inc
das
jnp
sti
test
xchg
sbb
ret
or
pop
bound
xor
in
ds
and
lds
and
dec
fwait
data16
xchg
xchg
js
push
cmp
sbb
inc
cmp
sar
test
or
xor
das
inc
ss
jmp
loopne
inc
push
sub
dec
divb
je
xor
dec
cmpsb
int
loope
sub
sbb
shll
or
adc
aam
inc
or
xor
fisubrl
and
and
inc
xchg
push
outsl
popf
mov
push
ljmp
jge
add
push
cmpsb
enter
repz
test
dec
mov
and
add
xor
pop
jns
fsubr
adc
popa
or
insl
imul
push
data16
bnd
push
sahf
lods
sti
mov
popa
imulb
shr
xchg
inc
jecxz
mov
jb
roll
mov
imul
cs
in
sub
xchg
jmp
popf
sti
mov
pop
pop
jl
mov
neg
ret
push
sub
mov
add
ljmp
popf
out
popa
fnstsw
xor
ja,pt
lds
test
sub
jl
push
loopne
push
xor
in
scas
adc
sub
cld
cs
cmp
cmp
pop
nop
pop
sti
adc
and
arpl
jp
les
icebp
xor
jg
pop
fwait
roll
cmp
adc
push
insb
shll
inc
push
dec
adc
xor
sub
shrl
adc
adc
into
gs
aaa
push
push
jb
sahf
push
jae
rolb
push
lods
outsl
xor
jl
aad
xor
lock
push
mov
fisubs
std
in
and
push
mov
outsl
jmp
sbb
mov
paddd
pop
shlb
ss
xor
xchg
pop
dec
mov
add
jmp
pushf
pop
aas
scas
js
fstl
mov
jge
imul
in
xor
pop
add
out
cmp
outsb
dec
scas
add
stos
int
mov
aaa
sbb
inc
lds
mov
ret
ret
and
movsl
dec
ret
mov
push
in
movb
out
ss
sbb
inc
adc
adcl
push
jb
nop
jns
arpl
gs
imul
aam
fidivl
gs
jg
xor
add
dec
and
xchg
jbe
adc
imul
ret
jb
insl
jb
ja
mov
cwtl
jmp
in
jge
inc
push
arpl
jl
jbe
fmul
or
ret
incb
stos
push
in
popa
sub
arpl
hlt
cmp
or
out
int3
inc
adc
jo
int
ss
fidivrs
movsl
fimull
dec
outsl
popa
or
and
sub
lahf
inc
push
cwtl
add
inc
cld
xchg
mov
cmpsl
xor
inc
popa
fdivrl
aaa
pop
sbb
or
leave
pop
xlat
mov
popa
jo
push
cld
push
jle
cmp
pop
dec
sbb
push
push
mov
cmp
pop
push
in
or
push
jp
rcl
mov
dec
pusha
in
sbb
dec
push
aad
mov
mov
shl
icebp
mov
push
dec
std
loopne
jecxz
dec
popa
adc
jns
cmp
sbb
movsb
shrl
xor
das
adc
adc
int
ss
sbb
mov
pop
mov
out
pop
pop
popa
push
inc
xchg
imul
sahf
shll
rorl
add
xchg
cmc
jb
mov
dec
in
add
outsb
jae
jb
mov
cmc
outsl
jne
mov
fbld
insl
jb
scas
jg
popa
gs
dec
movsl
mov
pop
cwtl
sti
repnz
arpl
sarl
or
jl
aas
jg
jmp
push
cli
cmp
sub
push
xchg
xchg
popa
sbb
cltd
or
js
dec
popa
hlt
inc
imulb
shr
mov
or
fs
popf
fmul
mov
or
aad
fcmovnb
push
pop
inc
sub
xchg
lcall
push
in
cmp
popa
jae
xor
adc
pop
mov
or
cmp
mov
insl
call
into
ret
out
push
cmpb
add
in
in
adc
push
popa
cmc
mov
adc
arpl
pop
sub
lahf
out
in
pop
shll
and
jmp
jge
cmp
scas
dec
in
cwtl
adc
dec
sub
loop
fwait
ss
sbb
lret
or
and
gs
mov
and
les
push
cmp
test
scas
adc
imul
adc
mov
insl
push
jnp
subl
mov
test
inc
inc
cmp
pop
ss
sub
mov
lds
adc
sub
jecxz
cmp
dec
dec
and
or
popf
stos
pop
and
xor
cmp
jg
jecxz
sub
aaa
xchg
imul
dec
push
gs
add
in
add
dec
cmp
imul
fwait
xor
push
mov
xchg
inc
mov
add
je
ja
stos
jmp
xor
jle
mov
pop
js
outsl
arpl
mov
dec
sahf
mov
inc
mov
mov
xlat
imul
test
jle
xor
push
push
xor
lahf
shll
fnstsw
jmp
and
adc
loope
xchg
sub
ficomps
ja
aad
fldl
aaa
pop
inc
bound
xchg
mov
inc
jno
push
push
orb
sbb
out
fdivrl
jp
mov
outsl
cmp
pusha
push
jmp
inc
jb
sbb
mov
out
mov
leave
mov
inc
sbb
jge
stc
arpl
sbb
jecxz
insl
xchg
shrl
lea
imul
imul
fcoml
insb
dec
pop
and
das
inc
dec
xor
pop
inc
stos
in
inc
scas
jbe
sbb
repz
fbstp
pop
cmp
xchg
sbb
inc
push
push
mov
and
add
push
sti
loopne
and
mov
rcll
sbb
loope
sub
inc
out
addr16
cmpsl
into
mov
cmp
pop
gs
mov
orl
add
dec
sub
popa
dec
inc
in
push
inc
push
or
jb
jno
jo
outsl
jo
mov
mov
mov
dec
stos
mov
mov
jl
imul
arpl
pop
sbb
sub
cs
cmp
pop
dec
jl
pusha
pop
dec
pop
cltd
roll
pushf
pusha
pop
bound
or
cmp
icebp
inc
mov
pushf
bound
outsl
imul
jmp
push
pushf
insl
imul
lock
loop
sub
pop
xor
movsb
xchg
push
jbe
repz
popa
sbb
mov
pop
xchg
nop
xor
mov
ficoml
mov
leave
shrb
jp
adc
adc
stc
in
sbb
insl
jno
mov
leave
push
mov
dec
dec
es
sub
xor
push
jnp
shrb
clc
and
stos
dec
ljmp
js
inc
xchg
nop
shlb
inc
sub
xchg
sbb
rcr
mov
cmp
inc
movsl
mov
cmpsb
and
dec
in
dec
mov
inc
fdivrl
mov
inc
fcomps
push
lock
pop
ret
jecxz
outsl
xor
imul
outsl
push
adc
gs
push
inc
or
lcall
pop
call
cmc
adc
imul
xor
mov
lds
inc
adc
push
popa
add
lods
call
pushf
stos
add
leave
sub
adc
push
mov
pop
cmpsl
das
cli
pushf
sub
cs
cmc
mov
mov
push
inc
sub
ret
insl
cwtl
jns
sub
jnp
mov
push
cmp
ret
sub
addb
pusha
popa
dec
push
inc
clc
popa
or
sub
fdivrl
enter
mov
sub
rorl
aam
ds
in
lods
pop
adc
lret
or
icebp
push
xchg
loopne
lret
dec
rol
rorl
pop
gs
popa
dec
iret
mov
mov
fisubl
rcrl
clc
cwtl
pusha
lret
xor
dec
pop
push
shr
mov
adcl
sbb
jns
shll
les
cmp
mov
daa
in
rcrl
fs
sbb
dec
xor
aas
cmp
pop
das
fstps
adc
mov
stc
adc
xor
enter
outsl
cmpsb
dec
inc
xchg
es
mov
in
mov
jmp
pop
or
lret
shrb
aam
maxps
ja
lret
addr16
rcrb
or
loope
aas
push
mov
mov
mov
add
sbb
and
lods
pop
mov
pop
aad
lret
jae
sbb
jno
test
adc
inc
out
cmp
mov
outsb
das
std
pop
mov
add
imul
into
mov
pop
outsl
lea
cmp
repnz
popa
sbb
jae
pop
jecxz
nop
dec
pop
rcrl
and
clc
and
imul
jnp
pop
xchg
fistl
rorl
pop
icebp
cmp
sbb
ret
aad
push
data16
cmovs
rorl
push
and
scas
cltd
adc
pop
inc
cltd
cmp
sub
test
jno
lock
pushl
sbb
sub
js
lds
adc
pop
push
bound
inc
add
imul
xchg
loope
add
adc
pop
rolb
pushf
imul
xor
out
cmpsl
fisubrs
mov
aad
inc
pop
sub
outsb
sbb
hlt
jmp
and
fwait
mov
jae
movsb
xchg
jmp
jb
jmp
push
inc
xchg
pop
addr16
stos
add
scas
mov
mov
jmp
inc
ja
incb
das
insb
lods
xlat
adc
popa
sbb
xchg
movsb
mov
subl
mov
xor
pop
jnp
sub
lahf
xchg
subb
jb
outsl
jno
repnz
stc
pop
pop
xor
mov
xchg
add
dec
mov
outsl
or
ret
cli
push
mov
test
inc
dec
jno
loop
xor
hlt
shlb
mov
sub
cld
sbb
xor
push
sub
jne
jmp
scas
jo
mov
jnp
and
push
dec
leave
add
and
sub
daa
or
cmpsl
icebp
mov
out
ja
in
mov
adc
inc
ss
jge
int3
bound
test
adcb
fisttps
xchg
mov
cmpsl
add
pop
jno
sbbl
pop
push
xchg
pop
add
dec
or
lods
and
cmp
inc
in
sub
xchg
repnz
dec
frstor
lods
push
dec
cld
imul
xchg
xor
pusha
xor
xor
mov
cs
popa
inc
in
std
mov
mov
fldl
iret
sub
outsb
roll
inc
sbb
mov
sub
aaa
push
outsl
fdiv
cwtl
ljmp
mov
jmp
imul
in
inc
into
es
loope
lret
pop
push
mov
jno
jl
xlat
inc
pop
stos
mov
dec
outsl
jbe
test
add
pusha
imul
mov
jge
sbb
das
imul
xchg
adc
daa
jae
xor
daa
sub
sub
lret
mov
add
aad
sub
insb
test
jnp
fs
and
xchg
and
insl
pop
mov
rcrl
push
sbb
pushf
repz
fcoms
bound
push
arpl
mov
inc
mov
xlat
or
cs
adcb
imul
jle
arpl
xor
outsl
pusha
mov
sbb
sbb
push
daa
ror
outsb
push
jb
xchg
jp
lea
mov
inc
in
pop
frstor
sbb
add
jmp
adc
aaa
dec
andl
fldenv
dec
rolb
jo
push
xchg
dec
pusha
or
out
push
frstor
push
les
fs
mov
push
dec
mov
imul
insb
in
inc
movsl
sbb
sbb
dec
sub
pop
outsb
lret
adc
adc
cmp
or
jae
sub
sub
ja
jnp
mov
xor
cwtl
xor
rorl
mov
mov
ficoms
and
je
in
cmovno
fsubs
cmpl
inc
sub
fwait
jecxz
int3
imul
pop
mov
pop
fwait
dec
dec
or
dec
imul
ss
insl
xor
cmp
popa
pop
aaa
mov
sarl
adc
pop
sbb
push
sarb
je,pn
dec
sbb
ss
jecxz
push
lods
mov
sbb
push
push
xor
fistps
sub
push
jb
ljmp
in
jno
xor
aam
mov
dec
in
pop
sbb
lret
jbe
rclb
or
imul
jo
inc
mov
ret
aad
js
in
loop
dec
and
movsl
jae
xchg
xchg
mov
sub
outsl
mov
std
adc
push
fidivs
adc
and
cwtl
cmp
imul
leave
mov
xor
cld
mov
aas
mov
in
pop
inc
lea
sub
adc
xor
push
clc
jnp
and
mov
data16
out
push
subb
mov
push
pop
stos
fsubl
lock
sub
push
pop
or
and
fists
dec
xor
aad
pop
in
in
mov
jmp
inc
sar
cltd
push
lock
mov
jb
test
mov
mov
jbe
sahf
xor
xchg
in
dec
jl
push
adc
arpl
sub
mov
scas
popa
mov
xor
arpl
sub
sbb
mov
fdivrs
add
mov
sub
and
sub
aam
jle
cs
pop
cwtl
pop
ret
es
lods
or
push
push
imul
gs
inc
pop
popa
insl
push
out
xor
out
xor
push
xlat
push
hlt
xchg
cmpsl
inc
cltd
mov
sub
mov
or
pop
jmp
and
inc
sbb
imul
cwtl
out
or
fildll
dec
out
push
out
lock
or
mov
fimuls
imul
lods
outsb
inc
mov
dec
mov
pop
rolb
jge
jp
dec
outsb
mov
pusha
push
ljmp
pusha
xor
xor
pop
es
icebp
lock
pop
inc
in
jae
xchg
leave
sub
in
adcb
mov
and
inc
push
inc
test
fcoms
push
cwtl
mov
ret
out
pop
aaa
dec
xor
xchg
fstps
sbb
test
xor
and
mov
mov
std
cmp
insb
push
stos
jnp
inc
or
xchg
popf
jge
shrl
rcll
sbb
int3
and
mov
cs
push
push
xor
popa
mov
hlt
jl
push
dec
lcall
and
in
bound
mov
daa
out
adc
cmp
int
in
inc
fcomi
sub
mov
addr16
push
and
mov
sub
leave
mov
mov
jno
mov
add
mov
cmpsl
sahf
gs
mov
pop
sbb
push
pusha
repnz
or
bound
adc
inc
jbe
ret
pop
insb
popa
add
mov
data16
popf
mov
repnz
add
stos
daa
sbb
cmp
sbb
repnz
ljmp
sbb
arpl
mov
xor
mov
bound
jmp
outsl
jecxz
pusha
xchg
pop
inc
scas
sbb
in
cmp
loope
in
add
or
test
mov
add
gs
scas
xor
je
pop
adc
sti
adc
inc
jnp
pop
mov
cmp
sub
and
in
repz
sub
and
add
xor
in
mov
add
sub
in
sahf
adc
jmp
pop
clc
mov
repz
jae
daa
and
inc
lods
inc
gs
and
cmp
arpl
in
repnz
xor
dec
ret
push
pop
in
loop
insl
mov
xchg
arpl
and
sbb
rorb
and
dec
mov
out
and
push
hlt
xchg
orl
lods
or
inc
in
ljmp
mov
imul
call
pop
jae
repnz
movsl
popa
ror
clc
rolb
push
xor
jge
test
scas
in
push
incb
mov
shrl
xor
lds
cmc
test
imul
sbb
adc
shlb
adc
scas
jmp
pop
jge
rep
int
fistpll
lret
mov
imul
xor
dec
or
stc
aas
aad
movsb
jo
leave
insl
cmp
jecxz
fdivl
jge
inc
out
out
xchg
pop
adc
cmp
ficoms
sub
push
loopne
sub
jbe
jno
in
adc
push
jnp
jbe
and
out
dec
icebp
mov
push
shll
dec
movsl
jmp
xor
mov
or
stos
lock
pop
rclb
cs
in
cmp
call
lods
insb
int
mov
test
bound
test
xchg
insb
xchg
je
movsb
jae
jb
jno
popa
dec
jo
ja
imulb
insl
int3
movsl
roll
movb
cld
repnz
add
shlb
arpl
jno
pushf
jae
ss
sarl
das
jbe
sub
and
lods
pop
imul
bound
adc
push
test
cmp
fisttpl
aaa
aas
out
dec
and
mov
ret
cmp
mov
scas
lods
mov
call
ja
mov
in
xor
test
and
popa
pop
push
cmp
pop
and
gs
sahf
mov
mov
pop
or
mov
popa
dec
test
xor
andb
lea
and
imul
test
pop
inc
lock
mov
mov
dec
cli
and
add
and
lock
outsb
add
pop
shlb
sbb
sbb
addr16
sbb
lea
jecxz
fbstp
sahf
adc
out
add
aam
and
lods
mov
sbbl
cmp
insb
adc
dec
out
icebp
in
lods
clc
jl
imul
jbe
mov
out
shrl
xor
lods
dec
sbb
imul
fcompl
mov
clc
stc
not
pop
push
int
jmp
and
pop
lea
adc
push
mov
sbb
and
inc
lea
not
mov
dec
lods
es
cld
mov
movb
xchg
cwtl
sti
scas
pop
out
add
mov
test
and
imul
pop
dec
pop
and
jno
lea
sbb
add
push
movsl
cmp
call
in
push
sub
xchg
cmpsb
in
push
xor
cmp
add
arpl
in
mov
cmp
imull
arpl
xor
aas
xor
cmp
jns
fs
daa
push
outsb
push
ss
stc
or
push
iret
sub
arpl
adc
mov
xchg
or
cmc
out
mov
sub
dec
in
sub
push
mov
lahf
in
mov
cmp
cmp
dec
arpl
sbb
push
fnstenv
mov
cmc
or
shll
adc
dec
adc
push
jge
mov
fimull
in
cmc
cmp
in
arpl
and
out
mov
push
gs
dec
cmc
leave
in
mov
xor
mov
bound
lret
pop
sub
out
or
jnp
lcall
dec
sub
jl
push
cmp
xor
pop
das
sbb
inc
jae
push
arpl
jno
cld
cmc
sbb
pop
pop
push
and
or
clc
roll
cmp
addr16
hlt
jl
imul
loopne
fcoml
leave
sbb
addr16
rcll
call
lock
cld
cs
icebp
adc
pop
mov
jge
xor
mov
pop
test
jns
sub
gs
inc
push
cld
mov
adc
push
mov
sahf
mov
jbe
cmp
push
jecxz
into
in
push
jp
cmp
xor
adc
xchg
cld
sub
imul
adcl
and
arpl
sbb
mov
cmc
inc
mov
int
dec
dec
mov
and
aad
push
subb
je
fsubrs
imul
xor
add
jle
jge
and
jle
add
push
lock
sbb
mov
insl
jo
cs
push
arpl
addr16
add
in
cwtl
loop
pushl
test
movsb
imul
sbb
sub
dec
mov
outsb
idivb
cmp
sahf
push
pop
jle
insl
xchg
jl
popa
loopne
stos
pop
sahf
stos
lock
and
lea
sbb
test
push
jb
mov
xor
jnp
int
hlt
and
xchg
push
aas
lea
adc
in
mov
ret
jb
shrl
aaa
insb
lea
idivb
adc
insl
dec
lock
xor
pop
mov
arpl
lds
and
inc
mov
jnp
mov
in
cltd
mov
js
cmc
mov
loopne
dec
sbb
and
lds
lods
lods
outsl
pop
jne
jno
cs
scas
je
xor
add
jno
add
and
lods
push
inc
add
or
lods
and
and
xor
cmp
out
sub
fstpl
pop
pop
ljmp
mov
je
insl
mov
push
jg
jl
pop
adc
hlt
aas
lods
jo
lds
xchg
outsl
xor
add
push
pop
xchg
push
js
gs
xchg
or
adc
or
dec
xrelease
ficoml
lret
mov
or
sbb
imul
sbb
lods
pop
into
lcall
jp
xor
das
clc
dec
pop
pop
lds
or
loopne
pop
outsl
pop
lea
dec
sub
mov
mov
fmulp
popf
xor
popf
out
popa
sbb
lods
frstor
fs
cmp
dec
outsb
and
mov
pop
fwait
js
lds
lods
test
jne
adc
out
cld
in
in
lods
je
dec
js
mov
jb
push
and
mov
in
cmp
pop
cs
std
xor
xchg
and
mov
sti
dec
and
push
inc
inc
add
and
lods
xchg
pop
sbb
shlb
cmpsb
out
dec
jb
in
lods
push
daa
lods
int3
in
jmp
incl
subl
lods
jo
cmp
mov
sbb
xrelease
int3
fcompl
jmp
push
jge
out
shl
jmp
movsl
add
and
or
cwtl
in
push
push
cmp
mov
aas
aam
or
into
and
and
sbb
xor
insb
dec
gs
and
mov
mov
enter
movsl
sbb
push
loopne
jb
and
mov
daa
enter
xor
inc
lock
jmp
call
and
mov
movsl
outsb
bound
push
sub
push
in
push
adc
jmp
mov
lea
jno
xchg
insb
imul
fbstp
imul
faddl
out
lea
pop
sbb
push
sub
push
and
jp
jno
xor
imul
push
nop
inc
jnp
pop
loopne
ja
popf
loop
dec
xchg
pop
mov
push
jge
in
cld
stos
loope
cmp
jbe
nop
adc
insb
repnz
stos
push
icebp
rcrl
ja
les
popa
outsb
xor
add
inc
or
and
jns
fsubrl
lea
mov
dec
push
sub
adc
xchg
stos
inc
stc
scas
pop
pusha
dec
cmpsb
sbb
pop
mov
xor
bound
adc
and
add
imul
mov
movsb
inc
pop
imul
mov
inc
addr16
dec
cmp
gs
mov
in
jl
jecxz
push
add
sub
xor
or
dec
fistpl
movsb
and
das
jno
arpl
xchg
pop
outsl
push
push
push
divl
repnz
xchg
insb
gs
xchg
pushf
movsl
xor
mov
call
pop
xchg
fadds
mov
jle
pop
jno
sub
sub
add
pop
pop
jle
adc
mov
jno
jmp
outsl
cmc
fisubs
aas
jae
test
bound
inc
in
cmp
mov
inc
jbe
push
jmp
aaa
fbld
mov
lea
shrb
outsl
pop
sub
test
lea
sidtl
and
mov
mov
push
loop
dec
pop
dec
mov
sub
dec
push
sbb
and
pusha
mov
lret
ret
sub
or
mov
mov
nop
fcoml
cmp
inc
adc
mov
testl
int
call
pop
fists
int3
ds
jb
ret
repz
or
arpl
adc
add
mov
mov
push
repnz
and
jo
lea
push
mov
jbe
gs
ljmp
push
sub
movsb
clc
jae
push
fisttps
mov
imull
push
pushf
ds
aam
sbb
orb
test
ret
xchg
jnp
dec
jl
jge
sbb
pop
imul
inc
jno
jl
lods
stc
pop
stos
pusha
pushf
sbb
daa
xchg
mov
inc
push
jns
das
or
addl
and
mov
shrl
push
and
xor
sub
or
jno
push
push
pop
adc
inc
lret
push
cmp
mov
imull
movsl
mov
into
sbb
cmp
and
cmp
les
aam
sbbb
mov
xor
add
mov
inc
cmp
mov
sbb
lods
mov
int
popa
mov
imul
cmp
sub
sub
test
cmp
clc
push
pop
leave
aas
mov
sbb
inc
cli
add
push
push
sbb
fidivrs
stmxcsr
js
in
and
mov
xchg
xchg
or
fsubl
lret
sbb
mov
sbb
xor
mov
xor
and
xor
jmp
mov
sbb
lds
data16
stc
mov
mov
sub
cwtl
ljmp
pop
xchg
mov
and
inc
xor
add
aaa
loopne
sbb
pop
jge
dec
in
jno
lea
iret
and
das
or
mov
or
push
in
inc
and
cli
push
adc
sbb
inc
out
xchg
mul
jae
cmc
or
es
add
jae
ret
fld
mov
stos
ret
push
gs
push
pop
xor
pop
fstl
xor
sbb
cmpsl
in
cmp
xchg
jae
icebp
jbe
orb
cmpsb
jb
stc
adcl
in
icebp
mov
fisttpl
push
scas
xor
loop
pusha
jp
ret
xchg
mov
inc
call
fistpll
gs
adc
out
dec
cs
mov
dec
dec
pop
mov
inc
bound
pop
mov
syscall
pop
enter
jo
data16
mov
loopne
add
cltd
pop
xlat
mov
shlb
jge
stc
mov
jae
adc
testb
lahf
cld
mov
jnp
inc
loope
mov
jbe
aam
push
cmp
cmp
dec
add
sbb
cmp
lcall
and
sub
insl
cmp
push
xchg
enter
jp
inc
xor
xchg
cmp
pop
pop
xor
mov
dec
sbb
fstl
pop
jno
call
cmp
int
movsb
cmp
dec
sub
dec
insb
pop
dec
mov
pop
outsl
in
jo
mov
dec
sbb
adc
pop
add
jae
adc
mov
mov
addb
push
insb
inc
data16
scas
cmp
push
lcall
daa
push
pop
fucom
sub
jp
push
jmp
inc
push
sub
and
sub
sbb
jp
leave
scas
out
pop
pop
sbb
xor
xchg
pop
adcb
xchg
lea
inc
cmc
jl
push
jbe
stos
pop
jecxz
adcl
dec
adcl
jb
cmp
mov
in
outsl
jnp
mov
sub
js
cld
adc
sbb
lret
pushf
adc
xchg
or
dec
jg
cmpsb
push
add
call
dec
stc
mov
lods
pop
mov
dec
popf
xchg
movsb
push
and
addr16
dec
das
data16
mov
in
xor
je
cmp
lods
and
pop
or
pop
je
loopne
cmp
imul
movsl
in
dec
lahf
mov
scas
and
popf
call
sub
push
and
and
mull
mov
scas
data16
lret
xor
xchg
das
mov
sbb
pop
xor
adc
das
pop
jns
ljmp
imul
stc
and
mov
add
addr16
insl
imulb
shlb
arpl
xchg
xchg
and
leave
pop
and
or
lea
mov
dec
mov
xor
scas
jg
shrb
mov
in
cwtl
jp
gs
cmc
test
adc
mul
imul
lret
test
rorb
mov
notb
and
lret
xchg
cmp
cli
ret
repnz
mov
or
lods
inc
mov
aam
sub
js
sub
in
sub
pop
pushf
and
mov
add
mov
jecxz
inc
jns
lret
xor
lret
mov
jl
popa
cmp
fcoml
ja
mul
mov
xor
ret
insb
sbb
enter
hlt
mov
movb
bound
mov
pop
data16
adc
pop
add
push
pop
sti
icebp
push
sahf
test
xor
ffreep
rorl
sbb
bnd
xor
mov
dec
sti
sub
fimull
jmp
cmovns
pop
movb
and
ja
xor
pop
mov
cmp
inc
dec
dec
jbe
in
xor
cmc
xor
lahf
and
out
add
vmread
sub
add
mov
jp
fldenv
add
adc
lret
movsb
lds
jno
stos
and
popa
jae
hlt
push
lds
das
mov
and
and
pop
fimuls
scas
imul
push
xor
int3
cmp
jmp
xor
sbb
roll
scas
fstpl
mov
es
jns
sub
scas
cwtl
popa
movsl
pop
xchg
push
aad
mov
mov
cmp
add
movups
repz
pop
sbb
pop
jno
push
jl
gs
inc
cmp
verw
jbe
insl
add
mov
das
rcrl
inc
stc
xchg
shll
pop
inc
mov
push
stc
or
adc
mov
push
daa
pop
push
and
addr16
addr16
movsl
gs
adc
ss
insl
pop
jge
and
nop
loopne
sbb
idivb
popa
mov
cmp
pop
and
inc
shll
pop
pop
cmp
pop
xchg
jns
adc
jno
adc
inc
xor
stos
imul
in
fdivr
loope
ljmp
jmp
and
mov
ret
cmp
pop
cmp
scas
jg
adc
pop
test
xchg
push
mov
ja
adc
enter
loope
xsaveopt
sub
outsl
insb
insl
stos
xor
inc
addr16
fs
ljmp
pop
pop
and
pop
adc
push
add
push
jae
jno
insl
inc
pusha
inc
mov
xchg
rorl
sbb
aas
and
imul
or
fcoml
pop
and
and
dec
mov
pop
pop
stc
pop
inc
xchg
js
pop
movsb
ds
aas
daa
xor
mov
es
jno
bound
push
aam
in
daa
insl
xor
lods
sub
lods
push
mov
jecxz
shrl
scas
jo
cmpsl
call
and
mov
mov
sub
arpl
mov
jnp
jmp
cmp
mov
inc
fidivl
mov
push
xor
stc
mov
mov
mov
sub
mov
dec
or
fisubl
mov
pop
out
loop
cmp
addr16
sbb
in
inc
xchg
shlb
xchg
psadbw
popa
add
repz
jmp
shl
sbb
and
pop
movsl
inc
in
pop
nop
cmp
add
sti
shr
jb
cmp
gs
stos
testl
cs
sarb
lcall
xchg
push
loope
insb
push
pushaw
fdivp
mov
ja
xchg
add
push
and
push
pop
push
int
insl
in
mov
mov
mov
shrb
imul
add
fbld
pop
cmp
pusha
jmp
mov
mov
shlb
subl
mov
inc
gs
fwait
jnp
cld
mov
pop
sbb
int3
sbb
mov
inc
js
lea
mov
gs
arpl
mov
xchg
sub
jmp
mov
mov
lock
mov
call
mov
cli
jno
insl
pop
js
ret
insb
ljmp
push
mov
lahf
or
stos
pop
and
cltd
mov
dec
cli
push
xor
and
and
xchg
dec
mov
fsubs
adc
sarb
in
xchg
sbb
cmp
pop
mov
push
lahf
lock
pop
addr16
pop
pcmpeqb
adc
popf
std
jno
mov
cmc
jp
pop
divb
sbb
sub
add
sahf
pop
int3
sub
lret
jg
dec
shlb
or
inc
xor
out
jmp
or
and
mov
and
stos
dec
push
pop
cs
ror
js
and
testb
adc
add
sbb
cmp
cli
test
cmpsb
mov
adc
stc
das
pop
arpl
data16
sub
dec
ss
cmp
inc
xorb
hlt
or
jge
cmpsl
add
cli
mov
add
bound
sbb
mov
lea
clc
test
leave
xchg
shll
mov
xchg
jp
jmp
fwait
jae
movsb
push
int
and
cwtl
pusha
ds
push
jno
dec
fnstsw
push
mov
and
dec
pusha
insl
inc
xlat
sbb
push
dec
push
imul
adc
mov
sbb
add
add
clc
dec
xor
pop
pop
pop
add
cmp
sub
sub
jbe
sbb
push
xchg
push
push
in
push
dec
adc
add
iret
pop
add
cmp
notb
mov
in
or
xchg
xchg
adc
js
push
add
or
or
jnp
sbb
xchg
xor
lds
orb
jno
ss
out
rol
cltd
sbb
nop
adc
push
fs
push
rcl
xchg
lods
xchg
xlat
jnp
sahf
adc
dec
iret
dec
in
fisubl
movsb
ficompl
je
sbb
shlb
sbb
ja
mov
mov
fcoml
lahf
sti
mov
dec
jno
sub
call
lods
stc
adc
pop
cld
mov
negb
xor
pusha
movsl
mov
fisubrs
cmp
ja
and
add
imul
mov
pop
call
mov
int3
aas
pop
sti
inc
clc
fimull
mov
mov
push
imul
loop
cmc
fcompl
sub
pop
sbb
cltd
repnz
in
jl
dec
popa
and
and
outsb
pop
jno
imull
xor
jns
in
sbb
add
xchg
ds
xor
cmp
popf
xlat
repz
jmp
pop
lock
das
ss
and
xor
ds
adc
mov
xchg
adc
repz
pop
inc
les
cmc
xchg
inc
cmpb
clc
xchg
push
sahf
repnz
add
test
pop
movsl
inc
les
ja
test
int
jecxz
dec
jb
cmp
jmp
xchg
fistl
add
inc
mov
aaa
push
imul
inc
loop
mov
mov
mov
mov
out
loope
inc
lea
inc
xor
jg
inc
add
loope
loop
jg
pop
jbe
xlat
sarb
je
mov
pop
sbb
popf
mov
cmc
xchg
pop
shrl
mov
or
jg
int
or
mov
int
dec
in
imul
sarb
ds
xchg
out
push
lret
fdivrp
push
aad
sub
imul
das
cmp
ds
push
cs
jge
arpl
clc
lods
adc
mov
cmpsl
data16
sub
mov
xchg
ja
xlat
aaa
imul
leave
bound
inc
das
das
push
addr16
inc
push
adc
jmp
and
adc
imul
xor
cmp
adc
pop
inc
fldl
sub
shlb
sbb
lahf
pop
mov
mov
pushf
imul
xchg
sub
pop
mov
add
pusha
in
add
insl
xchg
or
fsubrs
add
scas
push
lea
sbb
push
addr16
sub
jmp
pop
dec
lods
popl
fidivs
cmpsb
and
ret
lods
shrb
sbb
gs
rolb
push
sub
aad
dec
xchg
loope
out
in
mov
loopne
sub
aaa
sbb
loope
popf
leave
or
push
mov
cmp
mov
xor
cmp
sub
sbb
add
pop
test
adc
push
ret
insl
jns,pn
xchg
imul
es
jnp
lea
ja
daa
add
sbb
mov
lock
jbe
inc
and
popa
insl
push
dec
je
lods
dec
enter
and
dec
stc
dec
cltd
dec
cmp
pop
pushf
dec
and
repnz
daa
pop
lods
xchg
adc
sub
cmp
and
sub
dec
lods
xor
rorb
pop
pop
and
xchg
or
insl
iret
pop
addb
and
mov
dec
sbb
das
je
push
xor
ja
jns
jg
loope
mov
jg
inc
pop
sbb
cmp
rolb
lock
mov
insl
jb
insl
adc
fs
mov
xchg
rcrl
xchg
xchg
imul
fldenv
insb
in
orl
xor
xor
and
dec
push
and
xor
push
gs
adc
daa
mov
jl
in
mov
fildll
and
lods
fwait
add
stos
push
xor
jns
scas
js
stos
loopne
mov
outsl
sub
add
mov
incl
mov
push
xchg
aas
sub
das
push
sahf
pop
sub
or
shrb
int
rorl
adc
movsl
out
xor
xor
addr16
scas
cld
pop
sub
aaa
arpl
sbb
cltd
push
stc
mov
ja
push
mov
push
pop
cltd
sbb
fistpl
aam
pop
dec
dec
pop
or
inc
popf
mov
cmp
lahf
add
mov
test
pushf
mov
sub
mov
arpl
fs
and
mov
outsl
aaa
and
loop
xor
outsl
outsb
data16
popf
xor
cmp
add
jecxz
fs
in
or
fs
inc
and
mov
in
stos
cmp
test
push
sbb
stos
cltd
pusha
xor
je
fisttps
jo
loopne
pop
cwtl
xor
fistl
or
cmp
add
gs
fldl
adc
xchg
scas
push
mov
pop
cs
shlb
pop
mov
xorb
inc
dec
and
jns
mov
and
lock
cmp
sub
out
inc
cwtl
gs
dec
test
push
frstor
insl
mov
push
mov
inc
test
out
mov
sub
mov
and
adc
xor
lds
mov
daa
inc
mov
in
popa
sbb
mov
cmpsl
pusha
je
imul
lods
jb
das
pushl
cmc
popa
mov
inc
cs
xlat
insb
divl
xchg
and
xchg
inc
insb
sbb
pop
and
pop
test
mov
repnz
popf
test
push
clc
add
inc
imul
cmp
out
inc
aas
arpl
loop
inc
pop
icebp
lcall
pushf
stc
pop
and
inc
xor
aad
jb
stos
vandnpd
in
add
sbb
mov
jmp
and
testl
push
lret
sub
dec
sbb
arpl
shll
sbb
stc
in
dec
adc
inc
sbb
sbb
jmp
insb
jl
imul
sub
stos
clc
stc
and
arpl
inc
jecxz
inc
cld
movsb
rcrb
test
jae
test
or
and
push
mov
or
fstpt
xchg
mov
imul
inc
jbe
jecxz
sbb
lods
jnp
adc
cmp
dec
mov
add
dec
mov
mov
jmp
rep
mov
xor
dec
push
fidivrs
in
mov
cmp
xchg
xchg
sbb
popf
aam
test
adc
ljmp
not
xor
dec
xor
out
jge
mov
dec
add
push
or
xchg
mov
or
popa
mov
and
jb
out
incb
xlat
loope
add
test
fs
push
cmp
jno
add
pop
clc
cmp
jmp
xor
loopne
push
imul
scas
insl
aad
fwait
call
movsb
xchg
mov
sbb
lret
sub
in
xor
jb
jns
xor
pop
pop
dec
test
push
cmp
jnp
out
sub
xor
jg
push
jl
sbbl
dec
std
popa
jmp
nop
faddp
mov
movsb
xor
lock
pop
test
pop
sarl
dec
lret
test
aaa
int
pop
push
out
lods
test
pop
lock
adc
gs
xor
jmp
push
mov
lea
xor
fdivs
pop
test
pop
and
xor
hlt
xchg
jb
mov
pop
jl
mov
aad
into
aas
mov
jae
movsb
jns
fcompl
xor
add
into
jns
imul
xor
pop
mov
mov
xor
notb
sub
mov
repz
sub
push
daa
lods
out
call
icebp
push
adc
scas
push
mov
xor
fildll
push
lea
pushf
ja
fs
push
add
outsb
cmp
cmp
jmp
popa
fisttpll
and
pop
mov
fidivrl
mov
and
bound
rcrb
sub
js
or
movsb
or
idivb
xor
fdivrs
mov
add
daa
jge
in
sub
aad
mov
pop
mov
decb
push
cmpsb
add
jnp
loope
aam
add
lcall
jge
hlt
outsb
notb
or
cmp
gs
xor
lock
enter
cmp
cld
notb
stc
lods
mov
test
dec
mov
lcall
dec
or
xor
jge
sbb
mov
sub
daa
pop
jae
aas
dec
and
jno
sub
icebp
arpl
scas
pop
jo
cs
push
inc
lcall
das
cmpsb
fs
lods
insl
jb
pop
cld
adc
fs
push
dec
sbb
insb
shlb
sbb
scas
rcrl
repnz
mov
sbb
inc
mov
ret
and
adc
inc
stos
popf
movsb
test
push
in
fwait
sbb
dec
push
enter
pop
loopne
fsubr
xor
push
shl
lods
mov
mov
lods
out
xor
push
cs
adc
in
lods
cltd
xchg
loopne
stos
imul
mov
addr16
cmc
dec
adc
test
adc
insb
lock
out
pop
and
sub
jmp
repnz
into
gs
and
jnp
ficomps
mov
adc
icebp
mov
sub
dec
dec
pop
test
dec
idivl
stc
shl
xor
mov
push
pop
dec
add
jae
rcll
outsl
jb
adc
and
notl
insb
sub
pusha
xor
fwait
sub
mov
push
test
bound
and
fildll
cmp
aam
sub
stc
insl
mov
add
sbb
out
dec
js
cmp
mov
mov
inc
mov
or
lea
push
xor
jno
gs
clc
enter
lret
pusha
pusha
cmp
cwtl
or
fnsave
push
push
mov
mov
mov
or
daa
sub
xor
mov
xchg
insl
dec
xchg
xor
jb
mov
xor
mov
outsl
or
fwait
jno
push
mov
mov
push
mov
movsl
movsl
out
loop
dec
popa
fisubrs
mov
fnstcw
dec
out
dec
aas
and
loop
cmp
testb
xchg
add
xchg
and
insb
arpl
jmp
pop
add
nop
sbb
or
sub
sbb
dec
mov
adc
mov
push
in
xor
insl
and
imul
and
pop
loop
pop
xchg
cwtl
dec
gs
cwtl
cmpsb
scas
jp
insb
scas
testl
xor
sahf
shll
jmp
inc
sbb
inc
add
and
jb
into
test
adc
dec
bound
test
lea
pop
lock
test
xor
and
mov
xchg
test
mov
fdivrl
loope
cmp
jns
mov
push
push
movsl
add
stos
shrl
sbb
insb
cmp
lods
fadds
lea
ror
mov
and
push
andb
adc
and
stos
or
add
outsl
xor
inc
test
and
addr16
jae
jecxz
faddl
es
cwtl
add
ja
or
xchg
subl
filds
loope
dec
imul
ret
add
mov
mov
fidivrs
push
mov
sahf
add
xor
and
push
lock
rorl
dec
faddl
and
dec
out
sub
lds
ss
lea
in
pop
inc
push
insl
scas
pop
jecxz
sahf
jno
cmc
push
add
push
push
sbbb
in
push
xor
mov
stc
jnp
inc
addr16
rorb
mov
or
addr16
fidivrs
mov
sarb
shlb
fistpll
push
arpl
xor
or
push
cmp
mov
stos
mov
neg
mov
sbb
jno
add
out
bound
les
dec
ljmp
lock
imul
inc
cmp
movsb
arpl
idiv
aam
inc
or
jnp
or
js
decb
arpl
notb
mov
dec
add
adc
shlb
inc
xor
daa
movsl
shll
inc
rcll
fisubrl
or
loop
inc
gs
and
sbb
mov
sub
ret
push
cmpsl
inc
add
or
dec
outsb
mov
lret
xchg
nop
fmulp
lods
into
push
adcl
jb
lahf
push
inc
imul
mov
cmpsb
jns
sbb
sbb
xchg
movsl
aam
cmp
mov
out
inc
sub
paddsw
and
jmp
cmp
shrl
or
inc
in
push
push
adc
push
sbb
sub
xor
pusha
out
test
jl
rorb
inc
inc
add
add
sbb
push
adc
push
sar
rorl
sub
or
in
cltd
and
dec
out
push
loopne
movsl
xor
in
mov
pusha
rcr
and
aad
shll
int
inc
inc
lock
push
mov
rol
push
dec
roll
out
xor
arpl
fs
in
lods
dec
jle
gs
in
test
ss
mov
popf
inc
in
cltd
in
adc
xor
hlt
rclb
inc
pop
insl
insb
gs
and
outsb
dec
shl
and
sub
xchg
mov
mov
pop
popa
es
push
loop
and
imul
aad
popf
dec
jmp
test
sub
sub
pusha
insb
pop
stc
orps
das
mov
jp
pop
jmp
sub
jno
push
cwtl
out
or
sbb
dec
icebp
add
cmp
lcall
jl
shlb
cmc
mov
sub
mov
xlat
in
movsl
inc
xor
shlb
insl
push
jbe
adc
pop
mov
push
adc
add
or
andnps
repz
jns
cs
or
repnz
aam
xor
iret
prefetch
pop
lea
push
pop
lahf
rorb
adc
jle
ljmp
test
dec
xlat
fisttps
xchg
xchg
xor
xchg
in
cld
xlat
clc
push
js
cmc
fbld
pop
sub
jae
and
rcrb
das
cmp
lds
xchg
test
cld
sbb
xor
sub
or
adc
xor
popa
pop
xchg
icebp
xor
negb
sub
add
sbb
sub
xor
cli
mov
mov
call
cmpsb
or
dec
aad
mov
mov
pop
and
and
and
push
adc
mov
push
mov
cmpsb
and
sub
iret
adc
or
push
push
xor
in
push
sbb
dec
shrb
pop
imul
jbe
pop
add
push
insb
lea
mov
sbb
jmp
pop
decb
and
dec
and
int
adcb
sub
inc
lea
mov
cmc
test
dec
fmull
cmpl
test
test
dec
xchg
popf
sbb
jg
fwait
sub
add
mov
mov
mov
mov
pop
mov
mov
dec
mov
fcompl
test
cmpsl
sub
inc
sbb
and
sub
nop
dec
dec
push
out
jl
jo
fisttpl
outsl
and
mov
divl
mov
lock
icebp
lahf
inc
je
arpl
outsl
push
adc
and
popa
mov
pop
imul
push
test
sub
stos
negb
lea
jns
fstl
movsl
inc
xor
pmaxsw
sub
mov
and
sbb
je
add
cld
loop
fisubrl
jb
clc
pop
mov
js
in
cmc
jae
int
inc
dec
add
push
outsl
jae
rorb
loope
inc
mov
dec
xchg
cmpsb
test
jne
fmul
dec
mov
and
stos
jno
arpl
lea
adc
bound
dec
inc
sub
sbb
out
xchg
outsl
mov
ds
pop
xchg
in
neg
int
rolb
jmp
mov
enter
and
push
add
ljmp
imul
xchg
lret
push
push
inc
xor
adc
jb
jg
rcl
push
xor
inc
enter
daa
mov
gs
repz
aaa
es
push
dec
xor
xor
repnz
sub
or
into
xchg
jno
bound
inc
push
pop
push
sub
push
sub
jge
fcomip
andb
mov
and
sub
xor
xchg
outsl
notb
lret
mov
sbb
adc
out
insb
pop
out
in
cli
dec
push
inc
bnd
mov
sub
lods
pop
lahf
xor
lea
mov
xor
mov
jge
lcall
in
negb
sbb
add
lock
and
sub
sahf
and
cs
xor
dec
jmp
or
xchg
mov
into
repnz
por
adc
sub
adc
or
pop
xor
jne
dec
lods
jl
fadds
pop
dec
jne
add
arpl
data16
fists
xor
and
mov
aas
xor
cmp
add
add
adc
jp
mov
sarl
aad
sub
cld
jns
jnp
or
inc
cmp
pop
gs
movsb
mov
or
lea
cmp
push
daa
adc
push
imulb
and
dec
jl
fwait
xchg
cmpsb
in
fdivs
sar
jo
jmp
jecxz
inc
xor
and
add
sbb
push
pop
jno
and
mov
outsl
push
or
and
pop
mov
sub
cmc
mov
add
jmp
sbb
pop
xor
push
pop
leave
or
rolb
and
cmp
xor
mov
and
dec
add
lahf
arpl
clc
adc
sbb
mov
cwtl
xor
lea
push
lds
inc
xchg
enter
mov
push
inc
push
lea
ljmp
inc
add
imul
dec
into
outsb
mov
pop
insb
add
cmc
fnstcw
inc
aad
lea
cmp
mov
insl
stos
aad
fnstenv
push
test
push
pop
mov
xor
inc
add
jp
dec
add
push
lea
jl
cli
dec
enter
add
mov
sub
aaa
push
xor
pop
push
ja
inc
sub
loop
xchg
pop
add
add
push
add
cwtl
shl
divl
push
sbb
jns
in
dec
adc
cmp
adc
dec
inc
push
add
inc
popa
jb
scas
jnp
les
fs
mov
pop
mov
and
push
clc
sub
bound
add
lcall
pop
das
add
cmp
push
and
sbb
pop
push
rcll
insb
roll
movsb
push
and
arpl
pop
sub
adc
insl
xor
adc
jge
enter
adc
mov
push
push
adc
movsb
dec
mov
scas
sahf
jle
and
push
shlb
dec
push
mov
mov
sbb
push
popf
mov
sbb
popa
pop
in
inc
adc
out
xchg
das
out
daa
sub
push
xor
test
push
shlb
pop
les
cmp
gs
xor
xchg
fisubl
mov
inc
hlt
ret
repnz
dec
or
lret
jl
mov
or
popa
mov
loop
and
cmc
sbb
or
push
add
je
pop
fnstenv
mov
daa
dec
sub
pop
dec
mov
pop
cld
push
and
jecxz
push
sub
inc
xchg
push
cmp
mov
pop
xchg
inc
sbb
mov
and
data16
sub
pop
cmc
aad
dec
and
imul
or
je
add
jae
push
and
rcl
arpl
xor
jae
xchg
ffree
jmp
jbe
cmp
popa
insb
repnz
sti
push
mov
bound
mov
or
in
testb
push
insl
ret
gs
or
push
cmp
gs
cmp
push
sub
iret
jb
cwtl
add
lock
iret
mov
popf
cmp
ficompl
outsb
stos
int3
or
jmp
add
pop
gs
dec
cmp
mov
fcoms
mov
pop
popa
sarb
cmp
testb
sub
addr16
fdivrl
or
sbb
and
adc
jge
mov
insl
mov
lcall
xor
repnz
mov
xor
or
imul
push
insl
add
sbb
fcomps
cli
pop
fldenv
js
loop
fs
jae
inc
sub
loope
arpl
js
loop
daa
data16
and
xchg
imul
mov
or
mov
sbb
pop
push
in
inc
adc
mov
or
mov
fmuls
or
xchg
movsb
int
add
in
in
daa
lods
add
xor
mov
cmp
insb
shlb
jmp
mov
mov
pop
adc
inc
lcall
dec
insl
shlb
cwtl
ljmp
dec
or
pop
jae
or
rcll
and
cmc
insl
fstl
add
and
rcrl
cmp
adc
je
jle
pop
mov
out
inc
ret
inc
push
push
in
xor
out
xchg
fisubs
sbb
enter
out
inc
push
sbb
imul
sbb
aad
add
in
icebp
inc
test
xor
pop
lahf
sti
das
jns
mov
lock
xor
or
scas
add
jne
stc
imul
popf
sbb
push
sub
dec
je
pop
xor
inc
push
and
fwait
cltd
mov
mov
xlat
mov
mov
jo
inc
mov
out
mov
jnp
rcl
outsl
test
adc
pop
mov
es
test
jecxz
outsl
sub
loopne
mov
mov
lcall
xor
lea
mull
xor
outsb
xchg
in
xchg
andb
xor
insb
testl
or
fstl
dec
add
arpl
aad
popf
aad
sub
xor
lahf
or
jo
data16
rcr
into
inc
fdivs
mov
hlt
fisubrs
cmp
push
inc
mov
or
js
pop
sbb
add
pop
test
hlt
or
add
test
inc
mov
stos
add
fadds
out
pop
and
xchg
cmp
inc
popf
je
pop
in
push
movsl
sub
in
dec
mov
cmp
mov
dec
or
shlb
pop
in
out
lds
iret
sub
in
and
cmpsl
aaa
fisttpl
dec
scas
pushf
mov
loope
shrl
aaa
out
sti
hlt
sub
xlat
test
arpl
push
push
pushf
cwtl
jecxz
dec
rcr
cmp
fwait
cmp
xchg
pop
movsl
repnz
test
js
imul
mov
enter
shlb
mov
add
jne
std
daa
dec
mov
and
int
dec
and
jae
and
clc
in
or
out
movsl
or
inc
add
lods
lods
outsl
add
or
data16
inc
jg
inc
xchg
add
jge
shrb
ds
call
inc
fdivrl
xchg
gs
addr16
mov
jge
nopl
mov
test
adc
mov
mov
faddp
mov
jge
lcall
out
popf
jb
loope
fisubs
pop
add
enter
call
cltd
lds
cmp
jbe
bound
lcall
fs
in
out
aaa
mov
aad
dec
lods
pop
xor
mov
xor
outsl
lods
dec
cmpsl
inc
adc
adc
in
out
cmc
pop
lea
clc
pop
mov
lea
fmull
imull
fwait
lea
jmp
mov
rorl
stos
cmpsl
sub
stos
mov
push
pop
in
cmpsb
out
bound
psadbw
push
cld
mov
mov
jle
jbe
les
out
xor
fbstp
in
push
mov
push
pop
or
in
adc
xor
insb
adc
pop
cmp
lahf
lahf
mov
imul
push
jae
arpl
jno
xchg
rorb
mov
rcrl
pop
cwtl
gs
jp
cmp
dec
repz
xchg
sbb
inc
fistpll
xchg
out
xor
xor
popf
cli
hlt
loop
and
loope
jmp
rcll
outsb
jno
push
jns
push
test
and
cmp
insl
je
daa
enter
mov
pop
xchg
sbb
sbb
pop
imul
out
add
pop
pop
sub
les
xor
xchg
add
jns
push
repz
and
sub
dec
test
fs
add
icebp
loope
bound
push
dec
insb
cmp
xlat
jb
sti
popf
pop
sbb
pop
dec
sub
cmp
in
push
subb
stc
in
mov
add
jmp
aaa
mov
insb
loopne
mov
adc
xor
popf
jle
pop
sub
dec
out
xchg
dec
push
add
fcoml
lea
and
dec
pop
repz
sub
lret
test
call
mov
mov
adc
dec
or
bound
inc
dec
movsb
bound
repnz
push
shrd
inc
das
lods
jno
loopne
mov
xor
adcl
or
sahf
push
scas
jecxz
test
dec
mov
pop
add
repz
aam
jae
mov
fimull
mov
xlat
cltd
mov
outsb
xor
movsl
jle
inc
mov
dec
jno
aad
negl
inc
xor
add
sub
aad
lods
pop
into
xor
loopne
and
mov
xorb
repnz
cmp
out
mov
cli
push
in
push
jl
stc
push
dec
dec
sbb
rcll
push
mov
leave
xor
sub
roll
cmp
ficoms
lds
add
adc
mov
push
pop
fistpll
mov
or
and
lods
sub
fisttps
xor
push
js
xor
out
and
inc
push
popa
mov
inc
arpl
bound
mov
pop
jmp
pop
inc
add
jg
jae
clc
and
bound
dec
cmp
ds
push
jno
adc
into
sub
mov
imul
and
push
popa
push
rclb
out
loopne
imul
pop
testl
push
mov
imul
fs
sub
loopne
push
jl
or
pop
xchg
push
jno
js
clc
fcomps
sub
jp
mov
stos
sbb
jge
negb
sbb
repnz
jbe
shr
pop
xor
fs
push
in
scas
outsb
mov
fnstsw
outsb
nop
adc
jb
sbb
mov
sti
in
xor
jbe
cmc
mov
cmc
imul
pop
pop
out
pushf
mov
jbe
lods
cltd
pop
les
pop
lea
das
setg
xlat
jmp
pop
jns
punpckhwd
cmp
minps
sub
mov
pushf
sbb
push
in
and
pop
outsl
cwtl
das
adc
adc
lock
push
xchg
ja
fimuls
sar
or
inc
dec
jno
lea
xchg
sub
dec
es
mov
das
scas
es
cmp
subl
sub
pop
adc
mov
imul
lea
add
lods
pusha
push
mov
sub
and
lea
sbb
add
rcl
rep
je
std
adc
out
xchg
je
add
mov
mov
fcompl
xor
and
mov
movsl
mov
push
loope
out
scas
sub
nop
psubsb
add
cli
hlt
out
cmpsl
lret
pop
adc
sbb
loop
mov
aaa
insb
jae
fnstcw
sub
adc
rcr
bndstx
inc
sub
nop
ljmp
enter
and
daa
sub
mov
and
sub
pop
xor
adc
and
cli
fstpt
sub
mov
and
inc
inc
hlt
ret
jnp
lret
sub
or
push
mov
mov
int
adc
sub
inc
xor
fidivrs
jno
mov
lods
inc
repz
cwtl
mov
pop
xorb
mov
add
test
scas
push
adc
sub
ret
and
mov
sub
mov
stos
out
fisubl
jp
push
popa
lock
iret
int
lea
jnp
pop
jle
xchg
repz
mov
or
xor
and
mov
insl
jecxz
outsb
and
and
scas
repz
push
add
and
stc
cmc
and
pop
in
js
sbb
adc
cs
push
cmp
xor
dec
dec
sbbl
imul
sub
out
lods
jl
push
push
jae
sbb
add
stc
insl
xor
pop
inc
xor
addr16
loop
jge
mov
jno
popa
mov
fwait
repnz
scas
xor
aaa
add
insl
cmp
gs
cltd
insb
movb
jmp
test
cmp
stc
jns
add
outsl
cmpsb
sub
push
mov
adc
and
push
mov
sbb
cmp
mov
jo
cltd
pop
adc
mov
inc
cmp
movsl
or
push
mov
cmpsl
sti
dec
sti
stos
or
jae
test
sbb
xchg
pushf
dec
mov
mov
enter
sbb
sub
je
lods
pop
inc
xor
int
vandnps
push
mov
outsl
cmp
add
sarb
push
mov
xchg
xor
repz
sbbb
iret
lea
sub
pushf
scas
cli
int
daa
je
test
or
push
and
inc
shll
mov
aaa
mov
pusha
inc
xor
jo
outsb
pop
inc
xor
mov
and
cmc
mov
dec
cwtl
aam
xor
or
xor
push
sub
push
lea
mov
xor
push
push
pop
adc
int
dec
les
or
scas
lods
xor
popf
jne
lods
scas
mov
in
mov
shrl
jge
mov
iret
movsl
adc
dec
sub
mov
call
dec
jae
inc
inc
jae
inc
inc
ret
lds
dec
push
adc
add
es
jmp
ja
sbb
inc
les
adc
inc
xor
sub
xor
push
adc
adc
inc
and
add
pop
andb
repnz
jl
add
hlt
repz
outsl
rcrb
adc
xchg
jmp
add
sub
movsb
stos
ja
sbb
push
or
add
xchg
xlat
sbb
adc
bound
adc
testl
xchg
jo
xlat
sub
xor
jbe
fcoms
das
rorb
aas
outsb
pshufw
inc
mov
mov
inc
mov
jae
pop
add
dec
jae
fs
dec
ja
repnz
pushf
xor
arpl
pop
sbb
arpl
icebp
jp
pop
addr16
push
sub
xchg
or
test
sbb
sbb
jno
xchg
out
sub
lret
inc
mov
movsb
lea
faddl
mov
icebp
pop
or
push
inc
xchg
lea
mov
push
rcll
les
js
or
repz
jae
push
sbb
insl
popa
jb
fisttps
jns
rorl
jb
xor
imul
imul
lods
fucomip
push
popa
fwait
pop
popa
mov
neg
pop
cmp
dec
push
out
test
xchg
add
mov
in
repz
out
xlat
and
cmp
adc
mov
aam
in
lods
repz
sub
dec
in
in
sbb
jmp
add
add
ret
cwtl
push
jns
popa
gs
mov
pusha
xchg
push
das
es
test
call
insb
mov
sahf
es
mov
and
cmp
enter
js
xor
sbb
mov
jmp
outsb
mov
loope
mov
je
outsl
add
mov
aam
test
pop
ljmp
loop
inc
add
jb
idivb
inc
pop
xor
jge
aaa
insl
je
dec
mov
in
imul
xorb
outsb
scas
xor
gs
inc
lock
es
mov
push
bound
and
mov
and
and
testl
or
and
lock
popf
in
sub
cmp
xor
pop
cmp
cmp
pop
cmp
outsb
std
or
push
sbb
lea
and
lods
dec
nop
jae
mov
divl
pop
dec
aaa
shll
adc
jae
in
mov
cmp
inc
or
cmp
in
sub
xlat
push
test
mov
cmp
ficoms
and
gs
mov
les
in
mov
jl
or
mov
xchg
adc
dec
push
sbb
in
xor
rcr
add
fdivs
scas
or
or
jno
mov
in
ss
sub
push
daa
jns
aam
and
push
ficomps
lods
test
add
sub
inc
add
mov
push
hlt
and
dec
ret
movsl
imull
xchg
sarl
movsb
mov
mov
or
ljmp
gs
aas
daa
mov
cmc
aam
rorl
inc
bound
loope
pop
pop
cltd
repz
cmp
xor
stos
mov
cli
mov
add
pop
nop
out
or
insb
jb
jl
sarb
push
pop
decb
jno
inc
aam
pop
es
and
mov
inc
scas
inc
push
gs
adc
fsubs
jmp
insb
cmc
mov
sub
loop
adc
xchg
lea
test
sub
scas
or
jge
and
push
cmp
jp
out
cmp
lret
adc
fsts
or
cmp
ss
int
lahf
test
jle
ret
das
scas
xchg
pop
pop
xchg
mov
and
xor
arpl
imul
imul
dec
mov
std
gs
jo
stos
inc
pop
sub
imull
xor
or
xlat
lcall
test
xchg
and
push
push
pop
sub
push
or
test
fwait
pop
xchg
lea
mov
pop
and
lcall
and
imul
out
movaps
lods
push
aas
js
subl
jle
int
cmpsl
push
fldt
fadds
fisubl
lds
jbe
jo
push
lahf
out
pop
jno
and
or
mov
scas
insl
movl
xchg
inc
movsb
lock
js
test
mov
push
call
jbe
mov
into
mov
and
imul
js
ljmp
popf
mov
push
pop
test
outsb
clc
jnp
xchg
int
aad
in
pop
ror
fldcw
dec
gs
dec
hlt
cli
sahf
jo
push
daa
mov
add
sub
stc
xchg
pop
enter
lahf
call
fisubs
dec
or
movsl
cmp
cmp
or
cwtl
lret
add
cmc
insl
les
jno
mov
adc
cs
scas
jno
push
adc
jmp
push
sbb
xchg
out
test
clc
aad
dec
or
adc
inc
cwtl
add
gs
fbstp
popf
xor
cmp
or
xor
xor
sbb
add
sbb
jge
in
cwtl
jl
lds
inc
lea
aas
adc
cld
mov
cmpl
jbe
mov
lcall
sub
jp
cs
jg
mov
in
dec
pop
cwtl
xor
stos
test
sti
xchg
mov
add
pop
or
sub
pop
or
icebp
fnstcw
cli
sbb
and
loopne
or
in
cmc
jnp
inc
pusha
jo
andb
adcb
or
dec
and
les
jb
fisttps
pop
mov
mov
xor
and
push
xchg
sbb
mov
aam
bound
adcb
jo
dec
and
dec
repnz
pop
jb
or
and
xor
push
and
mov
adcb
push
imul
or
ds
lods
xor
add
mov
inc
addr16
and
inc
int
leave
xor
sbb
sbb
outsb
adc
push
and
cmp
xchg
xor
loop
loope
inc
in
cli
fdivrs
fmulp
int3
sbb
popa
xor
sub
push
mov
xor
jae
nop
mov
add
jb
jbe
lea
andl
arpl
or
cld
daa
or
mov
lcall
fsts
push
push
test
scas
push
inc
push
jmp
pop
jle
out
es
mov
mov
ret
and
and
push
incl
aam
call
in
std
cli
pop
dec
fbstp
sti
and
not
jl
jecxz
cld
in
dec
lea
xor
dec
and
rorb
add
mov
mov
sbb
bound
mov
lods
stos
hlt
aad
das
sbb
stc
sbb
insb
and
sbb
push
pop
addl
dec
push
std
add
mov
xchg
mov
test
jecxz
mov
dec
cli
fwait
scas
hlt
cmp
or
dec
and
in
pusha
cmp
and
je
sahf
test
in
shl
inc
iret
pop
and
xchg
or
push
cld
or
das
xor
sub
lods
push
sub
and
ficompl
and
dec
out
es
xchg
das
jno
test
out
inc
or
adc
insl
sbbl
or
inc
lcall
fdivp
inc
mov
jecxz
inc
or
dec
push
sbb
dec
or
arpl
icebp
mov
shlb
mov
jo
inc
out
dec
imul
pop
aaa
jb
subb
sbb
jno
push
ljmp
lret
pop
rorl
sbb
and
shlb
sbb
inc
pop
fists
test
mov
icebp
jmp
cmp
pop
jg
push
lea
add
xor
jg
daa
mov
jae
outsl
inc
imul
hlt
pop
adc
mov
aas
mov
fs
test
sbb
or
lret
push
in
push
push
mov
out
dec
add
in
or
add
loopne
push
pop
stc
add
sub
popl
das
cmp
lods
cmp
daa
mov
je
outsl
inc
adc
into
mov
mov
pop
mov
into
test
adc
or
mov
gs
cmp
fchs
pusha
dec
pop
fsts
loopne
jecxz
insb
insb
and
outsl
insb
jne
scas
sub
mov
loope
add
iret
decb
xchg
fs
es
lret
sub
push
push
inc
xor
shrl
out
stos
mov
mov
mov
push
jno
int
in
out
cmp
or
adc
push
daa
push
push
cltd
dec
fisubl
addr16
mov
popa
pop
mov
lds
ret
lret
adc
fcompl
repz
push
mov
test
xor
push
subl
js
mov
loope
mov
or
pop
sub
mov
jbe
mov
mov
arpl
mov
and
arpl
je
push
in
xchg
mov
and
mov
xchg
mov
adc
divb
addr16
cwtl
pop
fisttpl
pop
divb
call
mov
lock
push
mov
lock
xchg
loop
mov
xor
adc
icebp
jg
fsubr
daa
sbb
js
push
and
and
push
or
pop
loopne
inc
push
ds
pop
mov
inc
sub
cli
push
fildl
rolb
mov
push
in
push
push
daa
in
sub
push
and
xor
mov
aad
pop
cwtl
mov
or
xor
inc
and
adc
cmp
xor
xchg
nop
jae
mov
bound
add
xor
lock
clc
inc
jge
dec
push
int
push
push
adc
fwait
movsl
std
dec
divb
mov
lea
push
inc
andl
lret
jae
lods
add
lds
sub
ret
in
fmull
lods
inc
fsubs
loope
xor
jge
and
mov
lea
pop
lea
stos
pop
sbb
sub
lahf
fimull
adc
cmp
in
mov
push
xor
outsl
xor
das
or
out
dec
call
sub
ljmp
pop
mov
jp
sub
aad
cld
int
and
xchg
cld
sub
imul
sub
push
aas
in
pop
jg
sub
ss
test
cs
sbb
imul
gs
int
mov
arpl
iret
push
sbb
sub
jno
xor
cs
call
fbstp
pop
inc
dec
mov
mov
mov
sbb
cmp
add
dec
inc
sbb
lods
mov
sbb
xor
mov
jl
dec
pop
popa
inc
or
jl
sbb
pop
lock
pop
lcall
clc
add
cmp
sbb
stos
mov
ss
pop
insl
aad
aam
adc
sbb
sbb
rolb
dec
mov
lock
fistl
je
loop
aas
mov
xor
subl
inc
xor
push
dec
popa
outsb
sub
in
arpl
insb
cmp
popa
cmp
and
sbb
add
dec
pop
inc
push
lea
insl
gs
mov
lds
xor
jno
push
lea
fisubrl
pop
xor
mov
loop
push
mov
bound
inc
sub
mov
jb
js
test
mov
out
push
mov
or
sbb
mov
pop
icebp
pop
mov
sub
or
or
mov
xor
sbb
std
xor
fnsave
loop
xchg
push
xor
push
pop
mov
pop
pop
outsb
pop
push
sub
subb
inc
aaa
in
pop
pop
push
icebp
xchg
repz
es
popa
mov
push
iret
inc
mov
and
jg
pop
sub
push
inc
in
sbb
fmuls
mov
es
sti
or
addl
cmp
xchg
outsb
lea
jmp
shl
or
adc
arpl
dec
mov
addr16
and
jnp
popa
xchg
mov
les
imul
mov
jae
pop
mov
lret
push
sbb
or
jmp
shrl
pop
inc
mov
dec
stos
cmpsl
lods
inc
es
sbb
mov
mov
jge
mov
jno
mov
pop
mov
mov
enter
call
pop
mov
sbb
dec
jmp
pop
and
jmp
sbb
aaa
adc
fisttps
js
mov
dec
mov
psrlq
lock
movb
jle
push
test
imul
dec
adc
lcall
adc
and
rclb
int3
adc
ja
mov
scas
add
mov
jle
gs
sahf
sbb
add
add
scas
mov
addr16
lret
gs
fstpl
enter
inc
jecxz
incb
outsb
inc
sbb
mov
ljmp
jae
pop
inc
mov
cld
mov
inc
and
into
rcll
sbb
pop
pusha
imul
popf
xchg
inc
into
push
test
and
and
in
mov
cmc
leave
inc
nop
mov
rcr
pop
mov
and
xchg
jbe
jne
push
pop
inc
js
cmpl
dec
lds
or
fstpl
xor
test
insb
imul
add
test
dec
mov
mov
test
cmp
in
outsl
mov
pushf
pop
je
cmp
loope
sbb
jbe
pop
fdivrp
cmp
cmp
xlat
cld
sbb
mov
xor
daa
sub
mov
divl
pop
xchg
mov
lds
sarl
mov
sub
cmp
in
or
inc
movsl
das
jno
sahf
pop
and
dec
xchg
icebp
add
iret
sub
iret
pushf
cmp
jmp
test
mov
sbb
in
dec
addb
sub
ja
hlt
jle
pop
jg
sbb
cmp
loopne
add
daa
add
bound
dec
and
lods
cltd
jo
mov
xchg
pop
cmpl
je
pop
gs
pop
idiv
cmp
cmpsl
sbb
inc
bound
jns
iret
jno
sub
or
jbe
repnz
push
inc
pop
loopne
fbld
jno
in
rorb
addr16
push
xchg
lret
mov
push
sub
inc
xchg
sub
add
fs
ja
leave
and
jae
jno
ret
adcb
rorl
and
je
popa
xor
adc
adc
jmp
mov
xlat
mov
fstpl
arpl
dec
or
add
bound
seta
adc
push
sub
lds
js
push
lcall
xor
push
xor
sub
sbb
push
popf
outsb
dec
cli
adc
sub
in
lock
xor
or
pop
jle
in
xor
adc
xchg
add
push
mov
sbb
arpl
jno
ficoml
lea
pop
lret
test
add
mov
inc
ror
out
dec
loop
inc
cmp
pop
or
or
pop
gs
stos
and
aad
in
or
fwait
jg
dec
sbb
mov
clc
xor
mov
pop
push
inc
int
lock
mov
lea
sub
xchg
dec
inc
or
outsl
rorl
push
and
ret
cmp
pop
push
sub
push
jb
pop
gs
push
gs
dec
outsb
pop
sub
ds
fsubs
push
pop
xor
push
inc
cmpsb
push
dec
popa
jae
xchg
stos
xor
inc
aaa
enter
or
jp
push
and
inc
or
dec
mov
push
repnz
mov
and
dec
adc
push
sbb
roll
and
mov
and
pop
and
pop
push
push
and
addr16
cmc
push
in
adc
xorl
pushf
repz
jmp
sbb
pop
jecxz
imul
jmp
div
mov
push
cs
mov
xlat
and
xchg
das
ja
and
stos
stos
xchg
ljmp
jl
lcall
pop
imul
mov
fadds
popf
mov
mov
adc
loop
jmp
gs
lcall
mov
push
jnp
ret
in
in
inc
cwtl
addr16
cld
xor
imul
push
inc
ret
sbb
and
and
pop
scas
xor
jmp
cltd
pusha
or
sahf
pushf
dec
outsl
sub
or
inc
push
icebp
cmc
test
adc
mov
imul
fnstenv
mov
push
scas
mov
repz
push
mov
data16
arpl
push
xchg
movl
jae
jmp
sub
insl
xor
out
in
pop
mov
jmp
push
add
push
push
rorb
iret
mov
cmp
lahf
test
aaa
movb
lock
push
pop
in
and
jno
and
shll
and
lds
add
hlt
ss
or
pop
and
cpuid
andb
pop
fnstsw
lret
loope
jne
je
xor
lock
into
pop
push
xor
push
aaa
int
das
shlb
and
in
push
sbb
add
inc
mov
and
ret
mov
mov
jg
into
jnp
jae
add
sbb
sbb
pop
adc
inc
int3
stc
movsb
out
in
push
push
pop
and
dec
lock
loopne
in
jge
arpl
push
test
jge
or
out
mov
jmp
xor
cmp
pop
sbb
and
xor
dec
jge
fwait
or
mov
inc
dec
popf
push
das
or
jno
sub
fmuls
jno
and
int
add
adc
and
sbb
xor
jae
das
xor
mov
jbe
shll
inc
dec
sub
xchg
pop
pop
jle
sub
insl
test
dec
sbb
js,pt
call
sarl
test
lock
lret
fnsave
movsl
xchg
sahf
mov
adc
fbstp
movsl
dec
sub
arpl
sub
stos
mov
rclb
lea
incb
adc
imul
sub
pop
into
sub
cltd
std
test
sub
lahf
xchg
sub
movsl
adc
stos
mov
lea
or
and
jo
jb
mov
xor
das
and
movsl
lock
and
inc
addr16
repz
inc
xor
or
dec
je
cmc
jl
jecxz
shl
mov
or
push
cmp
call
das
sub
sbb
mov
gs
lods
in
fdivs
notb
faddl
jno
imul
popa
imulb
outsb
pop
dec
jnp
pop
pop
pop
push
mov
adcl
jb
insl
jl
mov
insb
jmp
clc
jae
jnp
test
sbb
pop
fcompl
scas
mov
das
sahf
lret
hlt
and
jmp
sbb
and
daa
imull
xor
movsb
jno
outsl
subb
pop
test
mov
iret
mov
imul
xchg
mov
sbb
int
insl
outsb
sbb
mov
jg
std
fsubs
aas
lds
adc
cmp
das
dec
sarl
xor
jl
cmp
lea
hlt
aam
push
xchg
lea
outsl
mov
mov
mov
xchg
gs
xor
sub
pop
or
insl
mov
cs
aam
inc
dec
sahf
sub
add
jns
outsb
pop
divl
xor
stc
cmp
or
repnz
scas
jnp
jbe
es
and
xorb
fs
mov
js
cmp
push
imul
cmp
cmp
push
addl
je
and
shlb
jmp
xchg
pop
sbb
add
outsb
pop
gs
fdivs
lcall
pop
aad
pushf
aas
add
icebp
mov
addb
dec
add
dec
stos
lea
sbb
adc
xor
fs
mov
mov
pushf
adc
outsb
test
dec
jle
cli
bound
jne
test
pop
repz
je
imul
xchg
in
xor
cld
rcrb
dec
sbb
lds
pop
jmp
out
gs
pusha
jecxz
push
mov
push
xchg
push
cmp
xchg
push
push
jge
test
inc
cmp
xchg
push
or
xor
pop
add
mov
ret
jmp
and
mov
lea
pop
bound
popa
popa
in
add
lods
sbb
popa
and
inc
orb
scas
and
std
add
lock
push
je
add
fisubrs
dec
add
je
dec
scas
repz
adc
in
mov
jo
insb
scas
xor
icebp
xor
pop
jbe
sub
and
andl
push
mov
pop
push
mov
add
jle
mov
in
leave
jns
fistps
and
ja
in
pop
fistps
hlt
and
testb
ljmp
jl
mov
dec
inc
pop
pop
xchg
popa
testb
adc
sub
daa
lods
dec
popa
filds
nop
loopne
adc
push
gs
idivb
repz
lret
inc
add
mov
jae
jb
mov
popa
mov
mov
adc
push
mov
cmp
js
dec
push
pushf
push
add
mov
mov
push
xchg
xor
or
jno
lea
int
sbb
sbb
jo
push
bound
mov
push
or
cmp
jmp
sbb
fwait
movsb
mov
xor
push
sbb
adc
dec
mov
mov
cwtl
js
dec
mov
mov
aad
mov
or
dec
mov
fsubr
add
dec
repz
cmp
mov
pop
jae
mov
xchg
loope
inc
rcrl
fistpll
jge
xlat
mov
push
jne
aad
xchg
outsb
in
in
sub
push
stos
arpl
fs
outsl
adc
or
cmp
in
jb
inc
and
push
cld
int3
outsl
clc
pop
xchg
mov
sarl
call
out
xchg
add
lods
ror
je
xor
mov
pop
aaa
ljmp
dec
inc
out
sbb
add
mov
jbe
in
sbb
out
adc
xor
lods
xor
adc
sub
arpl
mov
arpl
cld
jmp
clc
cmp
xor
mov
popf
pop
lds
and
repz
sub
rcl
iret
sub
scas
into
in
test
divl
popl
addr16
sti
popa
cmpl
imul
mov
push
sbb
push
pop
sub
mov
jbe
push
mov
lea
sbb
jp
in
repz
popf
jmp
lcall
ljmp
add
add
push
mov
scas
imul
aas
mov
sub
mov
xor
lods
mov
ljmp
push
sub
sub
add
mov
cmp
sbb
in
add
push
cwtl
cmpl
in
repz
std
mov
fwait
addr16
mov
cli
adc
ret
add
repz
push
insl
add
xchg
cmp
aam
pushf
inc
xor
stos
sbb
jmp
call
repnz
lods
pop
scas
sbb
mov
loopne
fstl
gs
outsl
negb
mov
sub
pop
pop
sub
int
ljmp
inc
push
popa
movsl
xchg
cli
dec
orb
dec
push
das
pop
inc
or
inc
stc
fwait
xchg
sbb
jae
push
jb
jmp
pop
data16
out
leave
inc
dec
cmp
out
scas
sahf
push
imul
imul
jnp
lea
addr16
insl
push
mov
jmp
adc
dec
movsb
lea
je
jne
xchg
mov
andb
cltd
push
ljmp
jno
clc
sub
leave
jnp
push
add
data16
das
sbb
leave
jbe
adc
inc
mov
insb
daa
pop
and
mov
fsub
xchg
arpl
pop
rorb
push
shrl
xor
dec
dec
pop
mov
xor
push
dec
sbb
pop
mov
push
das
fs
inc
mov
dec
push
push
cmp
mov
test
push
jecxz
aas
stos
out
dec
push
add
ss
addr16
pcmpgtw
pop
jnp
cli
lods
xchg
imul
in
maxps
lock
je
divl
push
jb
lods
jno
push
or
jno
mov
sbb
jno
movb
pop
push
stc
outsl
push
mov
rcll
cli
arpl
leave
or
inc
fwait
and
jb
inc
faddl
pop
cmp
fsubrl
dec
add
pop
popf
push
inc
pop
in
mov
jle
imul
jmp
pop
push
add
and
lock
imul
lods
imul
scas
or
mov
jnp
or
lods
hlt
loop
mov
or
sbb
jnp
sbb
inc
pop
add
gs
mov
iret
iret
enter
gs
jae
scas
outsb
in
imul
int
push
and
jne
jge
cmp
xor
dec
in
in
lea
repnz
pop
movsl
pop
call
push
jle
fnsave
jnp
shll
push
negb
test
je
in
pushf
xor
dec
lahf
add
sub
sub
cld
xor
and
push
mov
adc
cwtl
rorl
adc
mov
xor
or
adc
inc
adc
push
cs
icebp
xlat
sub
jp
cmc
js
mov
repnz
das
loopne
pop
lods
lods
pop
and
mov
fimuls
in
loope
cmp
or
push
loop
data16
sub
ficomps
loop
test
xchg
xchg
mov
or
fsubl
mov
cmp
idiv
cmpsb
jl
adc
ss
dec
jge
xchg
stos
mov
mov
jmp
insl
add
dec
sub
push
sub
decb
inc
adc
fwait
lods
jle
xchg
in
imul
jae
mov
outsb
dec
lahf
mov
sbb
ret
sahf
jecxz
test
lods
push
popa
out
cmp
add
sub
push
ds
idivb
repnz
cmp
dec
pop
cld
fwait
stos
dec
stos
push
clc
dec
dec
popa
fildl
jns
lcall
movsl
data16
mov
pop
sbb
pushf
or
xor
jp
mov
fnsave
or
or
pusha
dec
xchg
icebp
inc
adc
test
sbb
xor
or
sub
mov
jb
and
pop
adc
test
bound
dec
dec
scas
inc
push
cmpsl
mov
std
scas
out
mov
sahf
xor
pusha
iret
outsl
sub
lret
arpl
fisubl
insb
dec
in
call
push
xor
pop
cmc
cwtl
inc
shrl
mov
jb
dec
sub
frstor
adc
lock
cmp
insl
inc
adc
movl
call
and
add
hlt
popf
ret
and
std
fimuls
adc
cmp
popa
pop
cmc
mov
inc
jae
add
insl
inc
outsl
into
push
loop
and
mov
sahf
arpl
popa
adc
and
mov
and
popf
adc
add
cmp
xor
cmp
push
and
sbb
push
or
sti
in
movsl
dec
and
into
cmpsl
sbb
xchg
movsl
mov
in
xor
adc
shrb
push
dec
bound
mov
cmp
sahf
shlb
lret
sub
or
mov
ljmp
mov
sub
fwait
aam
or
xchg
xchg
addr16
scas
adc
mov
popf
dec
xchg
orb
frstor
lret
data16
stc
negl
sbb
jmp
je
lea
imul
pop
loope
adc
jno
clc
addr16
push
or
mov
mov
dec
pop
outsb
mov
ret
adc
pop
jmp
icebp
gs
outsb
aaa
iret
jge
repz
mov
sbb
test
add
push
dec
insl
inc
icebp
call
dec
sub
stos
and
stos
dec
outsb
lahf
inc
test
icebp
in
pop
aaa
or
aaa
mov
pop
loopne
stc
sub
sub
ja
push
testb
popa
lock
hlt
data16
notb
pop
std
xor
lods
aad
jb
jb
jecxz
aaa
dec
ror
add
pop
cmp
ss
jno
lret
sub
test
jns
mov
ds
lods
xor
dec
push
leave
or
dec
mulb
das
add
scas
cmp
cmpsb
cmpl
dec
js
sbb
xchg
ja
outsl
es
das
dec
cmpsb
jo
mov
outsl
loop
imul
sub
jo
mov
inc
ljmp
mov
dec
jle
cmp
out
sbb
test
jle
sbb
push
rorb
leave
popa
jno
jle
sub
lea
xchg
outsb
enter
sub
xor
cmp
push
in
xor
loop
push
gs
rolb
stos
dec
loopne
mov
loope
pop
fiaddl
aad
inc
ret
dec
lods
and
arpl
aad
call
icebp
dec
cmc
mov
fists
jl
pop
push
push
inc
inc
pop
xor
arpl
xchg
jo
cmp
jo
movsb
xchg
pop
int3
mov
push
jbe
cltd
jo
int3
bound
sub
mov
negb
hlt
stos
mov
lds
popa
xor
mov
mov
mov
test
cld
addr16
jge
push
add
in
xchg
pop
cmc
jl
cmp
pop
jle
mov
outsb
mov
lock
and
mov
xchg
gs
in
repnz
mov
sbbl
ja
pop
jmp
mov
ffreep
lods
sbb
push
insl
xchg
inc
orb
push
stos
inc
cmp
jle
jb
ficomps
loop
fsubrl
push
push
jp
sbb
movsb
clc
popa
shr
sbb
mov
movsl
and
push
mov
scas
sahf
test
loop
stos
sbb
pop
push
fdivl
push
xor
repnz
mov
stc
mov
xor
cmc
pop
ds
sub
pusha
popl
daa
inc
mov
mov
jge
or
xor
sbb
push
mov
adc
mov
xor
inc
dec
nop
hlt
insl
sub
adc
and
pop
cmp
or
and
sub
lock
pop
mov
pop
add
adc
pop
data16
sahf
xchg
imul
mov
pop
lods
lock
xchg
xor
adc
test
xor
push
pop
add
lret
mov
rolb
lret
test
mov
adc
lcall
xor
dec
xor
sub
repz
test
xchg
mov
inc
mov
aam
sbb
and
jb
loope
inc
or
pop
mov
popa
xchg
clc
push
lock
mov
lock
dec
jle
adc
add
imul
rcll
push
sub
std
xor
test
lea
andl
cltd
adc
lea
mov
stc
outsl
sbb
push
out
loope
jge
fildll
lahf
nop
adc
pop
repz
and
xchg
pop
mov
out
sub
mov
inc
xor
mov
xchg
int3
jle
cltd
fbstp
test
lock
xchg
fistpll
add
cmc
hlt
dec
mov
ficomps
int
cmp
inc
loope
push
arpl
cwtl
cltd
repnz
rcl
scas
loopne
dec
je
sub
sysret
ficompl
repz
add
xor
xor
dec
mov
mov
dec
add
clc
push
scas
adc
inc
adc
in
pop
and
test
or
xlat
hlt
jle
jae
bound
scas
hlt
sbb
inc
mov
xor
ret
dec
sbb
in
hlt
std
xor
cltd
loop
mov
xchg
dec
repnz
jle
fs
sbb
push
scas
pop
mov
aad
ret
mov
imul
pop
rorl
call
in
mov
ret
repz
inc
popa
repz
mov
test
iret
shll
adc
and
dec
push
dec
loope
ret
jecxz
adc
inc
daa
push
xlat
dec
insl
mov
into
rorb
and
leave
mov
jl
insl
and
repnz
mov
es
inc
neg
int3
mov
pop
sahf
push
pop
loopne
mov
fstp
subl
stos
mov
inc
mov
push
push
enter
sub
fists
lock
insl
add
sbb
pop
pop
xchg
adc
lret
stc
or
sbb
cltd
xchg
pop
mov
lahf
push
cmp
adc
fdivrs
adc
aas
sub
bound
add
push
loopne
lret
sub
hlt
insb
jae
cmp
std
in
fcoms
daa
sbb
in
push
out
in
fneni(8087
and
in
cmp
stos
test
in
lock
sbb
call
in
push
lret
mov
fs
out
in
aas
jae
lock
ja
push
sbb
addr16
test
dec
and
xchg
dec
jge
dec
add
outsl
lea
in
ss
rclb
mov
das
and
and
sub
and
sub
jl
inc
in
testb
out
or
adc
fnstcw
loopne
mov
fisttps
mov
lea
movsb
in
inc
sbb
iret
dec
sbb
in
fisubrs
sub
cmp
aaa
rcrb
in
ljmp
repnz
rclb
and
in
jnp
pop
fldl
out
lock
lret
xor
popa
mov
adc
xlat
xor
ret
rclb
push
mov
cmp
in
inc
popa
bound
testb
mov
rcll
push
sbb
loopne
sbb
adc
aam
xor
push
iret
push
and
sbb
xor
loopne
adc
cmp
and
sahf
mov
push
fs
dec
adc
into
sub
dec
sub
rorl
bound
xor
xor
rcr
push
push
inc
inc
fistpl
hlt
clc
lea
inc
mov
lock
jmp
sar
adc
fld
jle,pt
pop
xor
scas
or
dec
mov
pop
pop
inc
or
arpl
jns
add
aas
jnp
push
mov
movsb
out
pop
icebp
dec
aam
fnstcw
mov
jp
pop
sbb
ljmp
and
ds
jo
push
inc
adc
jae
jno
inc
adcl
pusha
arpl
shll
aad
and
pop
les
add
push
add
bound
add
out
push
jmp
push
xor
push
jmp
fcoml
jbe
cmp
xorl
cmp
cmpsl
and
dec
and
xor
jbe
push
shll
sbb
cmp
push
je
test
sub
gs
por
push
in
lahf
test
push
jmp
inc
call
std
mov
imul
dec
in
jns
inc
sub
mov
adcl
xor
cmp
dec
sahf
jge
xor
ja
xor
push
in
and
mov
mov
fdivrs
imul
faddl
add
push
mov
repz
and
data16
notl
sbb
movsb
adc
in
sub
lret
sbb
and
imul
in
fucom
push
sub
adc
outsb
out
cmp
push
int3
cmp
je
push
push
inc
insl
cs
shll
jae
shrb
hlt
ljmp
sub
dec
mov
rcll
test
cmp
lret
sbb
arpl
dec
sbb
dec
addr16
daa
adc
push
push
and
insl
jecxz
inc
dec
sub
and
push
jmp
daa
or
xor
call
loopne
dec
xor
stc
std
les
and
pop
cmp
fnstenv
pop
gs
lods
jge
xchg
shlb
dec
test
cmp
stc
pop
out
mov
repz
mov
testl
pop
push
outsl
jae
add
cmp
dec
add
jle
sbb
dec
add
test
push
gs
popa
push
pop
mulps
ljmp
mov
jmp
xchg
outsb
loope
cmp
mov
push
cmp
dec
aaa
mov
mov
imul
dec
xor
or
and
sub
jb
jnp
sbb
jns
iret
sub
cmp
aam
data16
enter
hlt
ljmp
dec
xor
xor
and
ljmp
sub
in
cmc
push
add
fs
scas
xor
mov
pop
adc
stos
add
xor
jne
jmp
mov
and
and
aad
pop
cs
fwait
jae
shrl
imul
cmp
pop
adc
insl
dec
mov
pop
daa
push
pop
imul
xchg
pop
stc
xor
sub
shll
sub
lods
inc
test
or
imul
orl
sub
sub
mov
inc
ljmp
xchg
jae
cmc
xchg
jbe
ja
and
xor
in
outsl
dec
mov
and
mov
mov
adc
cmpsb
jmp
sub
xlat
loopne
sub
or
and
je
es
cld
pushf
int
jmp
jne
daa
add
arpl
sub
hlt
stos
jbe
push
bound
insb
dec
mov
fwait
jo
sub
dec
or
lods
or
sub
lret
lods
rcl
fimull
lods
repnz
pushl
mov
stos
push
mov
dec
es
and
lods
mov
xchg
jb
lcall
mov
cmp
pop
dec
dec
shrb
mov
add
pop
sti
das
nop
and
je
add
mov
mov
xchg
xchg
gs
stos
fmuls
stos
mov
add
mov
push
xor
cpuid
gs
push
movsb
push
hlt
mov
stos
popf
daa
in
xchg
push
mov
mov
inc
sahf
inc
gs
das
ss
dec
mov
lods
or
adc
pop
sub
dec
rcrl
fs
popa
fsubl
pop
inc
arpl
dec
fstpl
cmc
mov
pop
jecxz
aas
push
je
inc
sub
jns
push
cmp
adc
and
xchg
cmp
mov
lods
fcoml
mov
fsts
pop
lods
jbe
loop
aas
sub
pop
popa
adc
xor
aas
mov
inc
ljmp
xchg
daa
jae
movsl
repz
pop
je
ret
jae
cmp
pop
stos
test
gs
loop
xor
push
imul
push
imul
and
loop
sbb
arpl
je
std
jb
sub
cmp
lods
push
adc
mov
jns
push
xchg
cmp
adc
divb
repz
gs
lock
mov
aas
mov
into
dec
lahf
and
out
jo
jg
cmp
push
cld
imul
dec
xor
adc
and
orb
jb
jp
cld
or
lcall
dec
bound
mov
insb
dec
lock
lret
xchg
sub
pop
scas
mov
inc
pop
je
cld
mov
inc
cmp
movsl
add
clc
mov
scas
adc
or
mov
dec
int
mov
in
inc
mov
pop
cmp
outsb
popl
cwtl
mov
pop
in
fiadds
imul
sub
and
jmp
pop
add
aaa
repz
das
dec
adc
stc
cmpsl
das
jae
or
pop
scas
movsb
add
jl
inc
into
fsubl
test
xor
addr16
add
divb
cmpsb
imul
jmp
scas
mov
icebp
push
test
js
jmp
stos
jmp
popf
and
stos
cmc
jl
fstl
wrmsr
addr16
insl
out
sub
mov
scas
pop
fcompl
sbb
jge
das
pop
test
lods
popa
cmp
div
mov
xor
jecxz
fstpt
push
dec
jp
popf
and
test
mov
sub
dec
jno
fimull
insl
jb,pt
js
testb
inc
lea
lods
popa
pop
mov
pushf
fstpl
int3
ljmp
sub
push
cltd
std
mov
in
repz
sub
lods
mov
jmp
add
testb
arpl
pusha
fisubl
mov
cmp
aas
pop
and
xor
test
fcomps
sub
cmp
ljmp
ficoms
sbb
call
std
cmp
lods
pusha
adc
pop
mov
pusha
stos
mov
adc
push
imul
mov
jno
mov
mov
push
jbe,pn
dec
or
push
xchg
int
and
adc
cmpsl
and
rcrl
loop
push
shrl
fidivrl
sub
mov
inc
mov
jg
insl
cli
jno
lea
jae
rcrb
inc
cmp
pusha
and
sub
lea
mov
scas
icebp
push
dec
jp
loop
int3
in
inc
jbe
add
out
scas
insb
ficomps
int
cs
sbb
insl
xor
rorb
jb
les
jecxz
out
xchg
and
sbb
nop
popa
lea
stc
fcmovne
inc
stc
sahf
push
movsl
and
and
sbb
jae
push
loopne
mov
in
mov
clc
xor
xor
aad
mov
std
add
shl
jno
dec
mov
sub
imul
jbe
inc
pop
pusha
pop
and
bound
ljmp
les
adc
sti
imul
push
in
cmc
lock
stc
popa
cmp
inc
mov
xchg
sbb
out
je
cld
jnp
jmp
push
mov
mov
jg
lock
add
push
dec
outsb
dec
mov
incl
lods
and
notb
lcall
lea
sbb
test
dec
mov
add
xchg
loop
push
hlt
gs
inc
out
dec
mov
mov
test
and
aad
scas
xor
xor
sbb
cmc
push
mov
dec
scas
sub
aaa
inc
pop
dec
dec
subl
movsl
popf
inc
inc
sbb
int
add
cltd
sub
pop
pop
and
mov
repz
pop
and
gs
jne
add
inc
in
jb
fcompl
dec
cmp
push
jbe
jb
lods
add
push
lea
sub
sbb
jp
mov
mov
addr16
dec
pop
jae
aam
sub
sarb
xchg
push
dec
pop
and
xchg
add
sysenter
xchg
hlt
rorb
jb
mov
icebp
insl
jno
in
imul
mov
shlb
test
loope
mov
lods
clc
je
mov
push
sub
rcrl
scas
outsb
mov
leave
or
mov
jb
mov
lea
loop
insl
in
ljmp
outsl
stc
xchg
fdivrl
push
pop
add
inc
inc
add
cmp
mov
fidivs
dec
or
nop
js
add
testl
dec
pop
std
subl
loope
mov
in
jecxz
cmp
aaa
in
je
dec
sti
xorl
mov
jp
dec
adc
dec
xor
lea
andl
cmp
in
inc
cmp
jmp
pop
or
mov
gs
imul
add
or
push
in
xchg
and
movsl
mov
or
sahf
test
pop
pop
and
lds
ja
out
xor
stos
add
cmp
and
push
ret
gs
mov
xor
lret
push
jmp
sub
insl
popa
in
cmp
aam
fisubl
and
mov
in
lock
jl
push
lds
and
pop
insl
pop
mov
roll
sub
jae
pop
repnz
repz
jbe
and
adc
cmp
cmpsl
and
mov
loop
outsl
push
and
cmp
xor
icebp
cmpsb
inc
and
ja
out
add
and
sub
push
lods
pop
xchg
test
fstl
pop
gs
inc
jno
das
je
enter
xchg
jbe
pop
sub
or
rorb
shrl
cmp
imul
inc
mov
push
call
sub
mov
add
or
into
out
fstpl
jb
add
jnp
pusha
and
push
mov
adc
jl
sbb
leave
xchg
clc
repnz
repnz
sub
sub
mov
addr16
sahf
in
dec
jae
xor
lods
jo
mov
ds
push
enter
das
and
movsl
dec
jp
fwait
push
sub
pop
jo
mov
imul
bound
mov
push
xchg
push
pop
mov
add
push
ds
ret
cmp
fmuls
pusha
jae
xor
xor
lods
fwait
in
pop
xchg
sub
cmp
sti
lods
in
adc
pop
sub
push
gs
lahf
sbbl
or
leave
push
push
lahf
sub
insb
cmp
xchg
pop
push
jno
fcomip
dec
mull
push
fcomi
cmp
hlt
icebp
movsl
mov
lock
aad
inc
out
les
jbe
icebp
pop
leave
subl
jl
fdivrs
xor
add
sub
and
dec
or
sbb
sbb
dec
cmp
enter
call
jbe
test
gs
fisubrs
xor
xor
sub
aam
stos
lods
cwtl
add
int
repz
sbb
loopne
mov
mov
pop
xor
frstor
sub
popf
mov
fwait
cmp
inc
push
push
aam
push
pop
out
push
movsl
sbb
xchg
dec
ljmp
mov
sbbl
xlat
pop
push
xor
pop
adc
stos
jbe
pop
push
mov
in
push
shlb
sub
xor
add
outsb
mov
mov
xor
stc
in
xchg
outsb
adcl
xor
cmp
push
pop
dec
bound
je
cmpsl
jbe
push
jae
stc
sahf
mov
add
xor
in
sub
jnp
mov
or
mov
jns
mov
cmp
imul
pop
les
cmp
cmp
call
pushf
dec
and
jns
jecxz
sbb
lods
jl
jl
fbld
icebp
mov
insb
jmp
hlt
test
stc
pop
mov
bound
jmp
iret
and
aam
sahf
mov
push
sub
mov
lods
lea
xor
cmp
je
sahf
mov
xor
jmp
hlt
mov
insb
lahf
jb
stos
hlt
mov
cmp
aaa
hlt
mov
push
fstpl
jbe
add
jle
sub
decb
xor
add
push
jecxz
cs
push
jge
or
scas
dec
jno
sahf
outsl
cltd
mov
lahf
insl
mov
push
addr16
xor
and
inc
or
pop
jp
or
push
das
insb
popa
dec
adc
out
or
cmp
pop
repnz
or
addr16
xor
lds
mov
push
sti
addl
outsl
jnp
push
insl
inc
cmp
insl
lea
mov
sub
call
dec
dec
cmp
imul
fnsave
jno
xor
xchg
dec
fnsave
nop
lock
mov
loop
popl
and
xor
loop
popa
mov
stos
xor
movsb
pop
bound
mov
mov
jg
dec
inc
fbstp
jmp
lods
fidivl
sbb
mov
lods
in
xchg
imul
mov
loop
or
js
push
mov
lcall
xor
mov
lea
cmp
cmp
mov
inc
pop
inc
ja
jmp
jb
pop
arpl
mov
loope
jge
inc
push
push
and
mov
in
cmp
pop
inc
and
push
repz
hlt
sbb
or
in
mulb
jge
and
int
sti
faddl
mov
imul
jns
stos
sub
popa
stc
and
in
pop
scas
rcll
dec
iret
jbe
xor
push
mov
rclb
filds
in
imul
add
faddp
loop
dec
sbb
sbb
arpl
movsb
inc
inc
inc
mov
pop
sti
sub
movsb
int3
xor
lods
in
dec
mov
add
shll
sbb
in
cmp
dec
lea
in
fdiv
hlt
sbb
push
or
inc
in
pop
insl
test
lods
test
bound
repnz
adc
mov
pusha
xor
jmp
data16
call
pop
xlat
xchg
sub
leave
jge
jnp
mov
push
fisttpl
dec
lods
cmc
insl
xor
and
adc
ficomps
in
add
mov
add
int3
icebp
test
lds
push
test
leave
xor
scas
je
dec
jmp
jae
xchg
xchg
hlt
in
lock
repz
lahf
adc
xor
push
mov
pushf
sti
push
jmp
pop
stos
lea
sti
int
mov
loop
gs
push
and
daa
sbb
push
mov
sarb
sar
mov
jb
lods
sub
sbbl
or
lret
jmp
jb
je
sbb
push
arpl
or
leave
arpl
in
push
inc
xor
clc
and
and
inc
inc
outsl
mov
sarb
fstps
mov
test
xorl
lret
push
das
and
and
outsb
push
rcll
xchg
call
pop
into
sbb
dec
mov
or
lcall
xor
sub
arpl
lods
push
push
or
or
push
mov
hlt
outsl
push
lds
dec
gs
add
inc
je,pn
and
mov
push
pusha
jb
movsl
xor
bound
scas
insb
leave
cs
pcmpgtw
and
or
fs
aaa
push
inc
out
outsl
jns
push
lods
xchg
mov
fistpll
jb
jmp
cmp
jno
addr16
push
adc
rcr
inc
popf
or
and
arpl
test
mov
add
stos
int
dec
mov
lods
xchg
insl
daa
gs
pop
inc
xor
in
aam
pop
lea
push
icebp
cmpsl
es
cmp
mov
adc
imul
test
add
jo
xchg
je
and
lea
stc
jae
das
inc
sub
sub
aaa
xchg
bound
push
jmp
mov
shr
lods
mov
push
push
ljmp
and
cmp
lcall
dec
and
jecxz
sub
push
dec
adc
cmpsl
ds
push
out
std
pop
enter
inc
scas
addr16
and
enter
daa
push
movsl
cmpsb
pop
push
pop
mov
aad
in
pop
push
gs
xchg
sbb
test
imul
pop
jmp
lea
arpl
test
xchg
mov
lahf
aaa
insl
mov
in
dec
mov
lret
inc
sub
xchg
sub
insl
jge
mov
scas
daa
mov
sbb
lock
decb
add
fistpll
popf
adc
int3
push
lods
insl
xchg
lods
mov
cmp
lock
ret
iret
ljmp
and
sub
enter
xor
xor
and
lods
cmp
shll
cmp
imul
mov
lds
mov
test
addr16
iret
dec
test
roll
pop
add
fsubr
pop
cmp
hlt
sbb
rcrl
mov
sub
int
xor
push
push
ficoms
pop
idivl
data16
dec
fdivl
ret
es
js
shlb
adc
shl
xorl
dec
xor
int3
rclb
pop
jp,pt
nop
rcll
xor
inc
jns
mov
aad
rclb
and
mov
out
aaa
lret
jo
inc
inc
lods
push
insb
mov
gs
sub
push
xor
repnz
out
jae
sti
adc
fdivrp
mov
lods
adc
dec
cmpl
mov
jg
dec
mov
mov
cmp
bound
int3
loop
mov
sub
lret
shlb
lods
std
testb
jle
xor
adc
fsubp
add
lds
fsubl
loope
fmulp
push
pop
push
push
or
outsl
lret
sbb
fdivr
adc
in
lcall
aad
mov
mov
imul
xchg
push
sahf
dec
popa
stc
insl
repz
push
lods
ret
sub
sub
inc
es
adc
xchg
mov
daa
add
in
mov
shl
movsb
orb
inc
cmp
ret
es
aaa
in
in
sahf
sbb
pop
xchg
xlat
jno
and
push
fistpll
and
xchg
or
mov
sbb
out
outsl
mov
shrb
push
mov
leave
movsl
inc
inc
hlt
lcall
push
xchg
sbb
pop
int3
push
frstor
jae
hlt
fdiv
pop
xlat
stc
fs
mov
xor
mul
sub
aad
jmp
stos
insl
imul
sub
sub
aaa
in
fnstenv
jbe
xchg
push
cmp
inc
shl
notb
aaa
sbb
fsubl
das
das
add
in
arpl
insl
insl
daa
fisubrs
cmp
arpl
push
inc
jo
push
sub
icebp
filds
movb
jle
ret
cmpsl
push
gs
adc
insb
mov
jo
and
mov
fcoml
cmp
cld
outsl
rorb
xor
and
xchg
repz
mov
pop
aam
inc
xchg
push
push
clc
jg
xlat
cmpl
sub
push
lret
adc
push
enter
jb
cmp
hlt
gs
sbb
mov
fnsave
pop
sub
xchg
shrl
mov
gs
inc
dec
insl
pop
movsl
cmpsb
jae
cmp
repnz
test
mov
push
popf
mov
xor
jnp
nop
sbb
clc
int3
push
push
ret
sub
cmp
adc
dec
and
into
out
aad
std
and
bound
rcll
jo
bound
adc
movsl
and
inc
sar
sbbl
lds
jle
mov
xchg
lea
xchg
and
daa
shll
sbb
adc
insl
push
sub
mov
cld
xchg
jb
xor
adc
or
aad
sub
mov
rol
push
in
cmp
insl
jmp
gs
pop
mov
mov
push
fwait
jae
add
push
dec
cmpsl
or
push
pop
dec
daa
sub
inc
lock
outsl
mov
sbb
xor
push
cmpsb
fsubrl
std
inc
xor
sub
sbb
mov
dec
insl
daa
push
roll
jo
rcrb
and
call
daa
add
sub
test
cmp
pop
add
sub
and
pop
dec
jge
fldenv
loopne
and
lea
test
and
push
jecxz
popa
sub
in
mov
pop
jmp
cmp
mov
cmp
lea
pop
hlt
xchg
dec
sub
rcrb
add
shlb
lea
add
lods
and
sub
fsubrl
mov
shl
lea
jp
add
inc
inc
cmpsl
sub
and
test
bound
aaa
pop
push
xchg
mov
loopne
fsubrl
jmpw
out
imul
mov
inc
mov
vunpckhps
xlat
daa
popa
mov
jg
pop
loopne
push
test
insb
and
push
push
imul
push
xchg
call
shlb
adc
aad
push
mov
mov
repnz
mov
clc
push
pop
sarb
dec
popf
mov
sub
pop
ja
call
inc
enter
movsb
daa
pop
shll
repnz
lea
mov
jmp
cmp
lret
bound
or
in
das
fs
sbb
repnz
xchg
test
push
cwtl
imul
sub
xchg
dec
xchg
sbb
push
je
cs
lods
stos
js
dec
outsb
clc
scas
mov
lock
push
out
xchg
add
popf
xchg
or
push
mov
mov
or
inc
push
imul
and
mov
insl
lret
sub
popf
cmpb
cmp
adc
or
jmp
and
shrb
fwait
shlb
hlt
inc
xchg
cmp
push
movsl
ret
xchg
in
pop
imul
mov
ds
push
adc
aam
in
cmc
mov
jmp
push
loopne
sbb
jmp
mov
mov
roll
jmp
push
repz
mov
mov
cli
ja
mov
sub
nop
sbb
sub
sbb
imul
loop
fisttps
scas
movsl
fwait
sahf
mov
xor
out
test
out
repz
gs
lods
idiv
ret
int3
sub
mov
fidivrs
and
outsl
adc
les
push
and
xchg
fisttpl
cli
xchg
xor
sub
xchg
sbb
push
and
int3
mov
daa
repz
mov
insb
sbb
je
popa
push
ficomps
shll
fldenv
mov
cwtl
cmc
fdivrp
cli
jnp
mov
mov
popf
cwtl
mov
ja
mov
lods
inc
loop
mov
int3
jbe
mov
inc
movsl
jns
mov
push
rep
add
jecxz
mov
mov
jle
aas
fadds
nop
push
into
push
ret
int3
leave
or
mov
lret
test
mov
push
mov
xor
add
cmp
rcll
inc
mov
push
cmpsl
je
bnd
scas
gs
pop
and
lods
lea
lret
ret
je
xchg
enter
mov
jnp
pop
shl
push
dec
push
mov
cmp
cli
repz
dec
and
loop
add
shrb
pop
push
mov
hlt
xor
cmp
cmpl
es
mov
in
sbb
jnp
lcall
mov
xchg
adc
shll
ja
int3
mov
mov
inc
in
xor
jle
stos
in
mov
mov
jnp
push
ret
jno
add
jno
popa
and
jb
mov
rcll
mov
pop
call
in
and
sbb
or
inc
mov
xchg
fsubrl
mov
add
dec
loop
adc
mov
daa
popa
mov
cmp
lea
inc
jecxz
push
dec
fldt
inc
addr16
inc
in
xor
and
js
jo
lea
pop
add
insl
inc
fwait
adc
insl
push
sbb
xlat
aad
outsl
rcrl
pop
leave
rclb
sub
dec
in
lods
mov
fwait
jb
pop
mov
rorb
pop
push
mov
lea
push
xlat
mov
jmp
jmp
shr
sahf
sub
push
nop
xchg
insb
push
sahf
pushf
imul
xor
or
jo
push
dec
and
gs
test
mov
xor
jmp
and
inc
popa
jle
int
pop
xor
xorl
inc
or
lock
add
mov
addr16
dec
pop
gs
rcll
icebp
imul
lods
rcll
imul
mov
push
xor
shll
mov
aas
test
in
and
shll
fldt
int3
mov
sub
test
ds
or
cwtl
pushf
push
sarl
push
lods
push
cmpsb
adc
mov
gs
in
mov
cs
in
push
arpl
ret
push
ret
int
push
inc
test
adc
or
or
lods
add
xor
in
xchg
and
es
jl
in
in
daa
and
pop
sbb
push
mov
mov
js
inc
mov
out
rorl
cmp
mov
lret
lds
xor
ret
mov
mov
pop
gs
cmpsb
out
adc
das
pop
push
push
loopne
mov
lret
sbb
out
and
das
adc
dec
fldl2e
inc
imul
jp
jmp
mov
cld
lea
xchg
les
data16
or
ret
in
cld
in
es
gs
shlb
cwtl
pop
pop
cmc
mov
push
sub
pushf
out
inc
dec
xor
mov
xor
call
je
fs
push
inc
popa
jae
pop
call
insl
mov
xor
orb
call
lods
dec
jns
enter
int3
scas
push
push
jo
call
inc
dec
jno
lock
and
or
into
out
inc
xor
mov
daa
test
xorl
lret
xchg
add
push
push
xchg
jmp
sti
in
gs
sub
xchg
jp
push
popa
out
xchg
ds
xor
aas
sbb
xchg
dec
pop
stos
fists
sbb
pop
lea
dec
or
mov
pop
addr16
imul
arpl
cmpsl
sub
daa
insb
jp
pop
lea
movsb
aas
data16
inc
in
add
repz
outsl
test
daa
dec
sbb
pop
pop
xor
mov
pop
push
mov
add
lcall
scas
stos
inc
jb
adc
mov
movsb
mov
mov
cmp
sub
add
mov
dec
push
dec
push
add
and
push
pusha
insl
mov
test
stos
pop
enter
or
sbb
add
gs
test
dec
in
add
push
jbe
js
dec
pop
push
inc
xchg
inc
jmp
rcr
push
lods
pop
push
jg
fcomip
jno
and
sahf
sbb
rol
add
fiadds
lret
lret
out
stc
xchg
decb
pop
outsl
inc
fists
leave
inc
cmc
stos
adc
testb
mov
pop
push
mov
es
ja
std
push
cmp
dec
xchg
sub
xor
js
cwtl
mov
add
push
cmpsb
je
sub
aaa
popa
stos
sbb
sub
hlt
xor
adc
pop
sub
in
sbb
outsl
inc
sbb
mov
repz
test
or
je
and
push
popa
rcrl
rcr
mov
gs
stos
push
pop
gs
insl
leave
call
daa
inc
and
cmp
ljmp
jp
mov
idivb
pop
in
dec
mov
loop
ja
clc
adc
mov
sub
rdtsc
push
sub
lods
movsl
lcall
adc
cwtl
push
xchg
dec
add
or
jmp
mov
and
stos
insb
add
loopne
mov
jmp
mov
les
push
rol
sbb
inc
or
adc
sbb
cmpsb
and
xchg
enter
jl
push
sub
mov
dec
push
adc
pop
adc
push
jae
jae
das
and
push
repz
data16
out
xor
and
mov
xor
add
xor
inc
mov
push
jp
xor
jo
jbe
stos
or
test
and
bnd
or
and
and
fs
push
pop
bound
xchg
sub
repz
imul
and
dec
adc
and
pop
es
je
test
icebp
cmp
loop
lods
sbb
fbld
repnz
repnz
pop
add
in
mull
lock
sbb
loope
ud0
and
pop
push
xor
aad
pop
pop
in
in
jae
add
cmc
inc
add
fs
mov
gs
mov
and
add
mov
xor
pop
repnz
notl
pop
stc
pop
add
pop
or
and
popf
push
sbb
insl
push
cltd
icebp
or
push
cmp
sbb
mov
jno
sub
mov
adc
dec
shl
push
shll
popf
aas
lret
loop
and
push
clc
adc
mov
xor
mov
scas
cli
in
pop
sub
sbb
movsb
xor
mov
or
fisttpll
insl
xchg
push
xor
mov
xor
push
in
inc
push
mov
movsl
fs
push
in
mov
sbb
bound
outsl
pop
sbb
pop
add
sar
mov
push
jb
dec
sbb
cmp
into
pop
adc
sub
push
xor
dec
daa
add
cs
push
dec
mov
mov
mov
imul
ret
pop
lahf
push
dec
mov
outsb
test
in
adc
jno
inc
mov
or
mov
push
jecxz
bound
xlat
xor
pop
mov
or
int3
scas
shl
mov
std
std
mov
ds
push
xor
mov
mov
xor
xlat
inc
push
xchg
mov
stos
outsl
push
cmp
push
pmulhw
in
push
push
xorl
icebp
xchg
adc
jecxz
sbb
cmpsb
cmp
sahf
dec
addr16
sti
adc
xchg
cmp
ljmp
pop
stc
xor
shl
jno
int
decl
lods
ds
dec
xor
rorl
out
xchg
and
arpl
in
in
inc
in
dec
js
cmc
push
leave
in
ja
lahf
aam
lds
jge
fsts
mov
xor
ficomps
xor
lods
in
adc
push
mov
mov
xchg
mov
jmp
loopne
sub
inc
jno
cmp
xchg
add
cwtl
fnstenv
push
jge
shl
rcrb
inc
cmp
inc
inc
mov
stos
mov
fdiv
and
inc
icebp
jo
imul
mov
push
push
adc
pushf
push
mov
push
imul
pop
mov
mov
mov
das
adc
bound
cmp
stc
mov
les
mov
int3
sub
sub
pop
popa
aas
xor
in
xchg
ljmp
sub
fwait
enter
fs
out
pop
jbe
rcpps
mov
enter
rcl
xor
roll
insl
mov
orl
pop
je
add
pushf
cmpsl
xor
fs
cvtpi2ps
fcompl
jnp
mov
rcrl
inc
aaa
mov
dec
arpl
add
arpl
popa
repnz
out
xchg
or
push
adc
mov
jns
push
push
jno
sub
aam
push
test
jae
push
dec
push
jno
sub
movsb
xor
xor
arpl
push
mov
mov
push
push
fiadds
push
jecxz
outsb
push
push
sub
daa
pop
dec
sbb
es
popa
das
xor
icebp
out
push
fcompl
rcrl
xor
inc
aad
gs
daa
pop
dec
push
sub
icebp
daa
add
sub
sti
mov
fiadds
pop
arpl
pop
cmova
and
pop
inc
and
mov
push
imul
xor
or
and
push
or
mov
add
or
pop
shr
loopne
arpl
add
clc
rcrb
pop
push
push
xor
dec
push
fstps
push
jp
mov
jbe
mov
loop
loopne
dec
test
leave
fxch
mov
push
lds
pusha
push
dec
jns
xor
pusha
pop
xor
test
and
add
inc
rorl
xchg
lods
xchg
and
in
mov
sub
pop
in
jns
icebp
das
pop
xchg
cmp
jno
imul
push
jnp
cmp
cld
xchg
pusha
push
and
inc
insb
jmp
in
cmp
arpl
fnstenv
cs
out
popa
pushf
pusha
out
sub
jge
adc
or
notb
lahf
xchg
mov
sub
pop
dec
xor
xor
jg
insb
dec
jno
sub
mov
jns
xor
fldt
cltd
xor
in
inc
arpl
push
mov
dec
loop
aad
lods
cli
push
pop
jne
adc
and
mov
jge
shll
and
xor
aaa
jb
push
out
pushf
jo
jno
fs
lea
fcom
test
out
jg
pop
outsl
lea
jae
dec
pop
outsb
push
lea
adc
mov
dec
out
xor
cli
cmp
mov
push
sti
jno
fsubl
mov
xor
arpl
or
push
xor
dec
scas
ss
lea
in
cmp
and
mov
push
cmpsl
dec
fwait
mov
test
inc
mov
daa
push
leave
inc
jp
loop
cmp
mov
dec
and
imul
out
dec
insb
insl
iret
bound
frstor
imul
jmp
mov
dec
jae
movsb
je
mov
dec
mov
fs
fwait
cmpb
mov
lods
ss
and
jge
sbb
mov
je
and
sbb
sub
pop
add
mov
push
popa
jle
jmp
pop
insb
push
sub
subb
js
mov
enter
mov
xlat
in
xor
out
and
xor
int3
pop
xor
pushf
call
jbe
shl
jae
push
sub
cwtl
in
out
gs
lea
mov
and
imul
scas
pusha
lods
lret
lock
imul
in
fistpll
xor
or
push
and
sub
lea
add
fcos
adc
imul
mov
xchg
mov
push
and
icebp
xchg
cmp
into
test
cwtl
jle
push
dec
mov
mov
in
inc
push
es
pop
cli
popf
inc
icebp
cmp
or
mov
cwtl
in
lea
xor
movsl
int3
cli
fst
inc
xchg
inc
jo
mov
gs
pop
roll
jecxz
addb
rorl
aas
bound
mov
xchg
lds
in
dec
xor
sbb
pop
sbb
pop
imul
loop
jp
repz
cmp
or
sub
pop
cmpsb
int3
fisubrl
loop
fistl
rcrl
in
insl
negb
imul
lahf
icebp
popf
jl
out
sbbb
or
push
call
mov
xor
pop
and
loope
sbb
push
pop
shl
out
inc
test
xor
or
push
icebp
sbb
inc
mov
cld
outsb
aam
mov
jle
sbb
dec
sbb
xor
mov
aaa
std
sbb
mov
add
push
enter
hlt
ret
pusha
jb
cmp
pop
icebp
pop
lock
in
jl
pop
aam
cltd
mov
cmc
mov
push
sub
dec
jmp
adc
cmpsb
or
jg
icebp
lods
xchg
fwait
dec
pop
sub
push
and
bound
lock
sub
cmp
push
test
push
xor
and
cltd
mov
xor
std
push
es
jecxz
mov
xchg
xchg
icebp
lock
addr16
popa
pop
xchg
fsubs
rclb
dec
lods
stc
adc
mov
jae
outsl
das
lock
test
jle
pop
dec
add
bound
sub
arpl
inc
aam
test
xor
xchg
pushf
dec
loop
mov
in
cmp
mov
daa
jns
lock
lea
rolb
push
cs
mov
pop
pusha
ja
dec
pop
adc
mov
pop
shrl
pushf
test
pop
stc
pop
or
ret
std
cmpsl
push
stos
mov
repz
sbb
fwait
gs
pushf
xchg
movsb
arpl
inc
xor
pop
icebp
jno
ds
jecxz
add
xor
insb
es
jmp
cld
dec
clc
adc
push
mov
add
push
push
addr16
imul
decb
jbe
and
sbb
push
add
ss
push
pop
cs
jb
jge
sti
jmp
js
shl
pop
mov
xor
push
arpl
ds
add
sub
xor
lods
into
push
sub
fcoms
xor
and
or
std
stos
iret
insl
ss
pop
lcall
xor
lods
gs
or
mov
cmc
xchg
ja
push
cmp
pop
sbb
sbb
or
jno
lea
xor
fmuls
in
mov
test
push
arpl
and
and
aaa
dec
jae
cwtl
push
xor
sbb
xor
xor
mov
cmpb
roll
lds
pop
lret
mov
not
pop
xchg
arpl
lret
xchg
lea
push
jno
leave
sbb
into
add
clc
fadds
push
pop
mov
push
stc
popl
lods
pop
adc
xchg
cmp
loope
jb
sbb
add
sub
imul
xchg
and
mov
rorl
fistpll
push
push
loope
mov
stos
sbb
subl
sbb
aam
mov
cld
push
in
push
mov
cmp
sub
pop
lods
in
dec
jmp
inc
mov
fwait
and
lods
popa
bound
jmp
sbb
add
dec
push
push
mov
fistps
shr
mov
addr16
and
inc
cmp
test
int3
int3
pop
push
scas
or
jle
int3
nop
subl
push
push
push
loopne
and
adc
mov
or
pop
pop
xchg
add
into
pop
js
mov
xor
jo
pop
sbb
lods
dec
scas
orb
xor
jns
mov
mov
mov
push
cmpl
jnp
push
and
hlt
sbb
mov
jp
mov
std
dec
dec
rcll
enter
sub
hlt
and
or
mov
sbb
dec
and
inc
xor
test
lods
testl
add
mov
mov
repnz
dec
dec
sbb
scas
jno
push
push
popa
or
lods
add
sub
jno
sub
add
popa
lahf
xchg
pusha
push
mov
xor
cmp
pop
jle
fimull
sub
lds
jmp
pop
pop
mov
dec
add
push
sbb
xchg
test
push
int3
out
fwait
jns
jo
mov
adc
sahf
popa
mov
xorl
push
jge
lret
popa
call
repnz
xlat
imul
js
dec
js
icebp
and
dec
jmp
sub
stc
dec
or
imul
imul
sub
stos
sub
and
fnsave
mov
pop
lret
shlb
loop
scas
stc
nop
sub
insl
push
push
test
sub
mov
icebp
mov
dec
fidivrs
sub
aas
jmp
mov
xor
loopne
ds
stos
mov
push
xor
repnz
sub
notl
inc
scas
test
xchg
add
loope
ja
mov
inc
popa
push
cmp
in
insl
mov
in
dec
js,pt
hlt
popa
lea
push
ret
outsb
cmp
fdivrl
mov
push
jecxz
stos
add
ss
int
dec
repnz
jae
sub
icebp
out
lods
add
sbb
mov
je
adc
popa
cmp
int
sbb
xorb
out
int
icebp
push
push
mov
in
insl
and
xor
jae
stos
pop
xor
into
jae
mov
jae
xchg
sub
push
jnp
jecxz
dec
imul
outsb
jno
addr16
dec
fldl
fs
jae
sbb
in
sub
repz
lea
push
lahf
xchg
pop
mov
push
xchg
std
nop
xchg
and
insb
xor
in
mov
xchg
add
inc
push
icebp
jg
scas
pop
mov
js
data16
push
loopne
cmc
sub
sub
icebp
jnp
negb
lea
jge
imul
push
lahf
ret
mov
cs
shll
not
dec
sbb
pop
mov
and
fwait
inc
test
enter
add
or
dec
xchg
sarb
xor
pop
jmp
or
popa
movsb
movsl
int3
enter
jmp
xchg
mov
movsl
sub
mov
daa
mov
push
movsb
adc
add
out
or
jbe
mov
xchg
adc
ljmp
push
je
movsb
push
lods
push
cmp
loope
mov
out
pop
insb
rcl
nop
adc
hlt
movsl
jle
pop
mov
mov
jecxz
lret
in
mov
fnstenv
jp
or
test
adc
inc
insl
int
jae
lcall
mov
arpl
cld
xchg
sti
das
inc
xor
mov
adc
mov
movsb
add
jb
push
lea
bound
aad
lret
insl
mull
arpl
lret
arpl
jbe
addl
mov
in
and
sti
das
andl
shlb
insb
lea
shl
mov
adc
push
shlb
shl
jle
arpl
mov
xor
es
shlb
arpl
fcoml
mov
push
adc
and
or
pop
popa
insl
popl
in
inc
jae
sub
push
into
adc
subb
push
movsl
xchg
outsl
shlb
repnz
jae
push
pushf
ja
cmp
xor
lods
jns
insl
jge
jae
mov
jbe
sub
push
fidivs
xor
pop
in
cmp
and
pop
push
mov
outsl
scas
jb
dec
dec
inc
js
dec
add
pop
push
sbb
cmp
stc
gs
xor
inc
insb
mov
stc
pop
cmpsl
pop
repnz
and
aam
dec
int
rcll
mov
pop
pusha
filds
hlt
sub
sub
cmp
sbb
jbe
push
fbstp
and
cltd
lcall
sahf
cmp
mov
lods
push
stc
mov
enter
sbb
push
test
jmp
xlat
push
mov
mov
incl
js
pop
sub
inc
mov
mov
cmp
jb
push
mov
lods
push
push
push
pop
inc
xor
fdivs
mov
dec
add
push
popf
xor
sub
popaw
push
and
and
push
sub
movsl
int
xor
push
push
push
xor
mov
sub
push
xchg
pop
push
dec
and
jecxz
lods
fcoml
xor
out
mov
cmpsb
call
add
cmpsl
jecxz
push
movsb
jp
in
jnp
fcoms
shll
jmp
jo
leave
ja
push
lret
arpl
cmp
jo
leave
push
sub
pop
add
loop
push
ljmp
data16
cmpsb
testb
popa
cmp
dec
fimull
push
rolb
cmp
test
test
push
xchg
xor
stos
xchg
ss
loopne
xor
and
mov
insl
xor
xchg
mov
ficomps
jno
cmp
lea
xor
mov
and
push
aam
adcl
xchg
adc
decl
test
in
sbbl
add
arpl
lock
addb
xor
xor
pop
imul
lods
les
neg
aad
mov
cmc
mov
sub
roll
out
push
gs
jg
add
add
add
mov
bound
imul
loope
dec
jp
and
push
or
cli
outsb
or
pop
inc
dec
xchg
cmp
pop
push
out
push
push
mov
jmp
mov
jl
push
cmp
std
lea
je
push
push
dec
push
in
and
pop
das
inc
jns
rep
jo
ja
xor
mov
les
gs
aad
movsb
lcall
out
and
mov
aaa
sub
sti
int3
push
scas
arpl
mov
outsb
inc
out
pop
cmpsl
arpl
sub
jo
xor
mov
shrb
cs
xchg
jp
clc
repnz
test
jge
xlat
mov
je
adc
lcall
cmp
inc
test
std
xchg
push
or
fs
push
xchg
pop
add
mov
rol
dec
pop
dec
dec
mov
rcrl
cmp
lea
jo
in
je
adc
call
outsl
pop
pop
sub
out
cmp
push
and
mov
test
movb
jae
add
dec
pushl
aad
test
dec
icebp
imul
push
divb
stc
aas
push
push
push
insb
lret
jo
dec
jb
sbb
dec
ret
xchg
insl
andl
call
call
inc
ds
pop
mov
or
and
push
jno
in
dec
ffreep
out
test
inc
pop
mov
mov
xor
jno
cs
icebp
fs
dec
add
pop
jae
mov
rclb
xor
xor
lret
shll
ds
popa
inc
test
ds
jmp
mov
and
enter
xor
xor
fstl
cli
test
inc
jnp
inc
mov
jge
mov
jno
add
dec
lock
dec
insb
sti
rcr
dec
pop
add
jnp
arpl
int3
cmp
pop
in
dec
bound
or
push
arpl
cld
inc
and
cwtl
popa
dec
ja
enter
inc
fistl
lea
je
sub
sbb
lcall
insl
insl
adc
add
out
mov
xor
dec
and
lock
push
and
insb
dec
or
pusha
pop
cmp
sbb
mov
cmp
dec
int
jle
ret
fucomip
int
pop
jmp
mov
hlt
test
xor
popa
and
jl
push
jae
dec
sub
stc
or
pop
cmc
pop
out
or
sub
xchg
cmp
jp
cld
ja
lock
and
pop
pop
or
fs
arpl
repz
jae
push
dec
and
jno
scas
ss
fdivs
inc
jle
lods
xchg
pop
test
xor
int
in
jmp
notl
rorl
pop
push
pop
adc
pop
ret
loop
jb
add
mov
push
mov
lods
daa
or
cmp
sub
repnz
das
aas
mov
inc
in
sbb
les
mov
scas
inc
xor
push
fsubr
xchg
or
loope
lea
mov
in
arpl
inc
xchg
push
dec
loopne
lds
jge
stc
pop
loope
dec
pop
push
test
xchg
cs
or
popa
jl
xchg
lahf
lds
inc
push
lret
popa
aam
je
les
jecxz
gs
sub
out
in
adc
xor
jmp
mov
lock
test
fcompl
sub
and
inc
xchg
and
add
test
sbb
dec
shlb
push
daa
and
mov
imul
iret
xchg
inc
and
xchg
bound
fisubrs
aad
imul
push
sub
or
mov
aaa
xor
mov
lock
mov
bndldx
test
mov
pop
insl
inc
xchg
arpl
dec
inc
mov
cld
mov
cmp
push
cmp
fisttpl
sbb
cmp
jne
lea
xor
int
xchg
popa
lock
mov
inc
scas
jle
and
and
xor
mov
sub
mov
cmp
jne
cmp
dec
lods
push
outsb
in
repz
lret
in
in
stos
sbb
insl
test
test
jbe
or
cwtl
ficomps
arpl
mov
das
into
arpl
lock
xor
inc
jl
xor
lea
and
inc
inc
insl
cmp
adc
cmp
jns
roll
dec
test
gs
mov
insl
js
test
scas
bound
xor
insb
cmpsl
testb
mov
in
hlt
ljmp
outsb
hlt
jl
add
cmpsl
sbb
dec
shlb
sahf
sahf
loop
xor
movsl
or
out
and
in
adcb
xor
push
stc
and
fnstenv
jae
ret
js
loopne
loop
push
je
insl
jbe
lahf
in
arpl
aas
or
dec
jae
fs
sub
test
fs
je
jns
and
sub
pop
or
lcall
push
leave
std
popa
insl
pop
imul
cmp
add
fldenv
push
dec
pop
xchg
cmp
pop
or
xchg
outsb
es
xor
dec
mov
dec
mov
cmp
xor
xchg
dec
jae,pn
cmp
rcll
jns
ja
xor
jae
fsts
les
adc
loope
xor
jle
dec
xor
gs
pop
imul
in
add
scas
stos
inc
clc
and
xchg
mov
and
test
cs
lea
je
inc
push
mov
cli
mov
mov
daa
add
testb
dec
in
dec
mov
stc
jnp
jge
mov
pmaxsw
arpl
or
jbe
pop
jb
mov
push
mov
mov
jge
add
aam
sbb
cmp
imul
movsl
push
jae
repnz
push
je
lock
imul
push
aad
xor
sti
lock
push
cmpsb
add
aad
or
inc
xor
adc
jl
push
ljmp
lods
add
insl
imul
sub
andb
lea
jno
mov
and
mov
xor
inc
sub
out
pop
or
inc
arpl
or
test
outsl
and
xchg
xchg
sbb
scas
pushf
push
pop
mov
lret
xchg
mov
jae
movsl
gs
icebp
lods
push
mov
mov
pop
movsb
mov
and
ljmp
add
test
sahf
std
js
lea
push
push
mov
mov
mov
dec
insb
cmp
lret
js
xor
cmp
gs
xchg
xchg
ss
repz
add
je
pop
hlt
xor
push
pop
jge
arpl
arpl
and
cmp
movsb
jg
je
push
push
jmp
fwait
push
ficomps
pop
pop
sub
test
mov
je
jnp
xchg
jno
aam
pop
sti
iret
adc
mov
repz
or
inc
loop
stc
int3
movb
or
jg
sub
pop
mov
lret
adc
push
je
cmp
scas
outsb
inc
push
pusha
fldl
jg
sbb
mov
xchg
push
dec
sub
add
sbb
push
cwtl
cmpsb
push
arpl
add
jmp
rorl
mov
jbe
hlt
xor
shrl
jno
push
pop
pop
pop
nop
mov
stos
jb
dec
or
mov
add
fldenv
lea
fisubs
das
repnz
ret
dec
push
cmp
cmp
inc
mov
pop
sarb
ljmp
je
lods
out
fmuls
sub
xor
jle
jno
mov
push
dec
xor
mov
cmp
fsubs
in
cmp
loope
push
lods
cmpsl
inc
ss
and
xchg
inc
adc
xor
in
aad
and
jge
mov
sbb
mov
aam
scas
insl
mov
sti
das
popa
outsl
xor
pop
sbb
jne
mov
jmp
fidivrl
rorb
dec
xchg
in
mov
sub
jns
dec
xor
sub
mov
inc
adc
inc
test
cmp
test
mov
sbb
in
shrl
insl
and
aas
sbb
xchg
popa
inc
dec
je
jp
xor
sbb
aad
mov
daa
push
outsb
cmovbe
jb
jb
inc
lods
es
nop
jge
inc
popw
pop
pop
inc
mov
popa
adc
pop
sub
cld
jle
or
call
xchg
pop
pop
push
stc
scas
mov
enter
fisubrs
xchg
xorb
mov
pop
mov
pop
pop
fxch
sub
addr16
lret
pop
mov
pop
dec
jno
imul
dec
and
lea
jmp
lret
lea
or
mov
xchg
dec
jno
lock
jmp
int3
dec
push
popa
dec
jno
sbb
loopne
push
adc
nop
mov
pop
push
stc
adc
push
je
xlat
mov
call
cld
or
push
sbbb
and
fisttpl
mov
jae
xor
scas
leave
out
inc
mov
adc
push
sbb
mov
push
adc
enter
scas
pop
add
pop
sbb
push
fs
insl
push
loop
xorl
inc
data16
inc
xor
mov
or
push
sbbl
pop
mov
pop
movsl
aam
pop
cmp
pop
xor
xchg
mov
adc
or
icebp
repnz
mov
outsb
pushf
stc
cmp
mov
pop
sub
push
inc
inc
mov
scas
and
bound
jb
roll
in
jo
movsl
push
in
insb
lock
je
test
dec
push
sub
cli
fs
dec
inc
or
cmpl
lds
push
movq
mov
and
ljmp
sti
xor
stos
filds
loopne
sub
jg
popf
pop
mov
shlb
dec
aaa
sub
mov
lock
or
push
jnp
int
and
adc
pop
cmp
ds
or
mov
std
stos
push
adc
inc
jbe
dec
dec
ljmp
jns
sub
xchg
mov
outsb
or
adc
ss
loopne
insl
and
pop
inc
push
std
xor
cwtl
repnz
pop
mov
int
pusha
xchg
ret
popa
push
jmp
mov
jg
xor
lods
pushf
hlt
xchg
sbb
push
jnp
sub
loop
outsb
je
mov
pop
xchg
adc
and
sbb
mov
xor
imul
push
loop
push
and
push
xchg
jle
mov
ja
sbb
out
imul
in
mov
fcoml
ja
ja
stos
push
cwtl
scas
adc
inc
xlat
pop
jg
push
xor
sub
lahf
and
and
outsb
push
outsl
jnp
int
andb
push
sub
cli
adc
pop
in
sub
in
jg
jno
add
pop
fsts
mov
jne
cmpsb
xor
enter
pop
jb
push
dec
bound
push
pop
loopne
push
roll
pushf
cmp
in
inc
jg
inc
push
bound
mov
fistl
dec
jo
jae
or
jns
pop
leave
fistl
aad
mov
xorb
mov
lods
jne
cmp
push
mov
imul
fdivrs
cmp
mov
popa
inc
ljmp
add
outsb
adc
sbb
adc
scas
adc
loop
sub
insb
flds
pop
es
testl
dec
cmc
into
je
push
add
clc
jbe
push
scas
inc
aad
jl
ret
dec
fsts
sbb
arpl
flds
movsl
dec
dec
mov
movsb
movsl
shll
sti
insl
pop
mov
inc
stos
bound
fbld
lret
loopne
jnp
sbb
sbb
jp
popa
dec
xchg
pop
mov
pop
into
sahf
fistl
cmp
fcmovu
rorb
or
sub
cmp
sub
dec
inc
call
gs
pop
adc
xchg
cmpsl
add
pop
xchg
test
xchg
add
js
dec
and
xor
lock
jmp
pop
pop
mov
into
test
sub
lds
fwait
rclb
mov
mov
jo
ds
out
cmp
test
or
inc
imul
adc
scas
add
push
pushf
sbb
and
push
lods
enter
inc
in
jmp
cmp
xchg
lock
or
into
jno
movsl
repnz
xchg
sub
popf
pop
cmp
mov
jae
jmp
ds
ja
xchg
mov
jp
jge
ljmp
divl
mov
push
imul
cmp
aad
cmp
in
pop
add
mov
push
add
add
adc
std
xor
ret
jmp
fists
dec
and
loopne
shr
sbb
stos
sbb
dec
scas
outsb
loope
xor
mov
or
js
mov
gs
mov
mov
push
dec
cmp
outsl
cmp
repnz
ljmp
adc
add
xchg
lcall
ret
outsl
je,pt
xor
push
clc
push
movsb
mov
test
bound
imul
movsl
dec
jbe
lret
inc
testb
push
sbb
sbb
add
inc
repnz
mov
add
jge
loop
or
mov
xor
outsb
fimuls
sub
jp
jmp
jno
jp
add
mov
sbb
or
arpl
jb
leave
push
in
and
std
and
push
lods
sahf
push
pushf
rclb
jno
push
jae
lea
lock
jno
gs
ror
enter
sti
add
adc
scas
das
imul
xor
mov
dec
or
or
pop
sbb
addb
add
jae
and
pop
cli
or
jnp
inc
sbb
push
cli
add
sub
and
je
sarl
neg
mov
inc
sub
loope
arpl
or
adc
dec
cmp
and
xor
or
fwait
fs
inc
cmp
pusha
xchg
cmp
push
mov
lret
sbb
shl
ljmp
push
lcall
insl
gs
je
pop
sti
addr16
jbe
popf
xor
dec
sub
movsl
and
or
push
js
inc
movsl
jno
aam
insb
lods
in
xor
adc
fndisi(8087
and
mov
xor
out
pop
adc
test
xlat
push
rcrl
and
sbb
jbe
rcll
jecxz
sbb
into
cmp
inc
insb
jno
adc
hlt
les
pop
or
ret
push
scas
int3
mov
mov
pop
lret
sub
dec
jl
int
rcll
pop
push
insb
push
pusha
mov
not
fmull
and
adc
lea
jg
ficoml
icebp
dec
sub
or
jae
sub
add
dec
push
push
je
xchg
js
daa
dec
xor
aam
xor
imul
dec
jmp
mov
and
mov
xor
loopne
cmp
addr16
leave
cmpsb
test
sbb
outsb
sbb
lahf
cmp
icebp
push
sbb
sbb
xor
jbe
push
shll
inc
jle
jl
nop
adc
dec
jg
and
sbb
jecxz
lea
push
pop
scas
test
pop
dec
dec
sbb
pop
cmp
ss
xor
daa
sub
mov
lret
xor
push
xchg
sbb
fucom
pop
pop
mov
mov
and
stos
das
mov
adc
in
mov
mov
cmp
jmp
dec
icebp
loopne
mov
cmp
insb
jb
sub
xor
bound
mov
and
mov
repnz
dec
mov
adc
arpl
sub
cmovns
aad
out
dec
lret
or
je
mov
in
dec
inc
fsubs
push
push
push
mov
popf
mov
push
sbb
pop
pop
fs
mov
xchg
add
stos
pop
sbb
cmp
xchg
add
icebp
sbb
inc
cmp
and
test
xor
mov
mov
jge
push
in
clc
bound
stc
outsl
loope
pop
iret
pop
enter
das
popa
mov
jge
inc
pop
xor
and
inc
pop
in
outsb
mov
test
dec
or
shrl
sbb
enter
int
inc
test
movsl
ljmp
mov
sbb
xchg
and
jno
xor
fmull
cmc
push
mulb
inc
dec
add
pop
imul
pop
push
sub
push
inc
dec
inc
lock
testl
mov
mov
push
call
mov
out
pop
push
stos
dec
and
add
jmp
jns
aam
fs
pop
scas
stc
repnz
mov
mov
mov
int
xchg
or
push
fists
stos
jb
in
cs
in
pusha
xor
rolb
push
xor
adc
sbb
je
insb
ljmp
hlt
es
cmpsl
adc
lret
mov
push
xchg
lea
lea
outsb
jae
xor
aam
inc
test
jle
ret
xor
jmp
and
mov
push
fwait
or
and
lea
cld
xchg
je
subb
add
loop
dec
lods
sbb
lret
xor
out
jno
lods
outsl
pop
in
cs
xor
into
insl
push
inc
push
insl
add
shlb
add
rclb
pop
push
in
or
sub
jnp,pt
jne
ljmp
jl
insl
push
jle
jmp
jno
inc
gs
fistps
or
cmp
rep
div
add
outsb
fildll
dec
add
lods
mov
negl
nop
jb
insb
jno
addr16
cmp
pop
push
adc
ljmp
loope
xor
outsl
icebp
outsb
xchg
and
in
insb
icebp
fs
imul
in
inc
inc
sbb
adc
icebp
dec
push
mov
pop
mov
dec
jae
push
sub
and
xor
xor
xchg
arpl
gs
mov
xor
inc
in
cltd
rorb
clc
pop
xchg
add
stc
xchg
mov
popf
repnz
cmp
adc
and
xor
aaa
imul
jae
aam
dec
popa
dec
and
gs
jle
rorl
ret
movsb
iret
cmp
xor
in
pop
arpl
push
mov
mov
das
pop
adc
loopne
pop
cltd
push
xchg
inc
in
je
jae
jbe
jb
test
pop
call
add
mov
aad
jle
mov
ljmp
add
stos
in
in
xor
push
xor
dec
xchg
out
dec
out
daa
xor
cmp
and
jle
call
insl
lea
popa
inc
mov
xor
or
mov
insb
push
scas
pop
mov
mov
push
or
test
faddl
imul
movsl
add
cmc
xor
aad
jg
and
pop
lds
push
in
shll
popa
mov
in
arpl
and
sbb
pop
mov
in
insl
inc
jmp
mov
insl
addr16
fmulp
jo
out
jb
insb
push
push
jmp
xchg
out
lret
sahf
push
jno
or
daa
cmp
inc
in
orl
int3
adc
bound
test
and
push
push
xchg
mov
popa
jmp
dec
push
in
dec
jmp
data16
sti
in
or
in
add
mov
dec
lfs
xchg
push
mov
and
lahf
fistpl
or
fstpl
imul
paddq
xor
mov
in
ds
cwtl
or
add
je
lea
jle
subl
jmp
add
push
inc
mov
popf
cmp
mov
jo
pop
add
inc
push
and
lea
or
stc
outsl
mov
dec
push
cmp
in
pop
pop
add
mov
pop
lea
das
cli
push
pop
and
dec
mov
sbb
je
and
arpl
or
sbb
cmp
push
or
dec
aaa
mov
cwtl
sbb
sub
xor
sub
mov
test
testb
scas
mov
jo
or
and
lods
sbb
push
or
jbe
mov
and
subb
inc
popa
pop
sbb
cmp
inc
sbb
add
cmp
test
cmp
or
or
jge
in
hlt
ss
dec
addr16
jg
push
rolb
mov
push
insl
add
push
je
cmp
lods
jb
sub
cmp
sbb
popa
repnz
sub
pop
cmp
daa
pop
jnp
mov
in
pop
insl
test
lock
jno
out
imull
jmp
outsb
jge
pop
lods
rorl
jl
mov
repz
hlt
lret
rcl
aas
adc
adc
dec
pop
xchg
jmp
mov
and
adc
imul
add
stos
and
mov
call
insb
aad
bnd
popa
aad
and
insb
pop
mov
shll
and
das
pop
bound
fs
loopne
dec
or
sub
insl
add
xor
and
into
add
std
lcall
mov
fisttpll
fidivs
dec
pop
sbb
ja
dec
mov
jg
jno
out
add
stos
cmp
fisttpll
lods
fs
std
pop
adc
imul
add
shrl
outsl
cmp
mov
push
pop
pop
addl
or
pop
mov
ss
sbb
xor
iret
pop
incl
mov
sti
out
je
jb
and
inc
arpl
mov
test
jmp
sub
jns
sub
or
inc
sbb
rol
inc
cmp
loop
mov
scas
pop
jbe
pop
inc
add
imul
sti
add
and
jnp
pop
lahf
mov
xor
inc
movsb
sub
outsb
clc
cwtl
xchg
jmp
fisttps
test
adc
outsb
mov
or
push
push
jmp
mov
xchg
mov
add
mov
xchg
pop
or
lods
or
pop
clc
scas
or
adcl
mov
xchg
aaa
and
jge
in
pop
or
inc
fcoms
mov
xor
pop
scas
dec
popa
cmpsl
cmpl
mov
mov
and
dec
lcall
push
jns
out
jb
cmp
pop
aad
add
adc
cmp
ja
addr16
stos
scas
sti
dec
mov
jo
or
lahf
inc
jmp
pop
jp
xchg
arpl
jno
sbb
repnz
inc
outsb
ds
pop
scas
aad
and
stos
jns
outsl
les
scas
lea
bound
push
insl
popa
imul
shl
inc
jns
popf
insl
inc
jb
cld
ljmp
pop
xchg
lods
jmp
add
add
gs
popa
xor
insb
ja
dec
adc
and
lea
mov
bound
jb
mov
inc
xorl
cwtl
xor
mov
inc
dec
and
jnp
and
sub
inc
mov
stos
dec
filds
outsb
clc
jb
insl
insl
cmp
mov
jbe
cmp
xor
or
pop
ljmp
mov
xchg
mov
jno
inc
mov
shlb
sbb
cmp
arpl
jo
in
icebp
test
scas
or
inc
xchg
sbb
or
lea
sub
jns
xor
jmp
bound
scas
xor
and
stos
or
add
dec
cmp
sbb
loopew
aam
mov
cld
pop
sub
sub
dec
push
sarb
shrl
adc
cmc
cmp
dec
mov
jmp
mov
aas
jo
mov
mov
sub
shl
gs
mov
ja
inc
mov
sbb
lret
fimull
xor
ljmp
jp
stc
push
in
sub
or
les
xor
and
insl
and
adc
cs
pop
xor
adc
insb
push
imul
inc
xchg
movsl
and
mov
adc
inc
mov
popf
outsl
ja
sub
push
and
cltd
sbb
aas
test
inc
scas
test
jle
sbb
gs
pushf
std
add
and
stos
test
aam
mov
inc
jno
or
or
popa
dec
jg
jmp
lcall
and
adcb
pushf
in
mov
xchg
das
cmpb
xor
sub
lock
or
adc
mov
bound
add
cwtl
and
mov
mov
or
xchg
adc
es
dec
push
imul
and
daa
insl
test
inc
rcll
xor
push
in
jae
lret
daa
inc
push
xchg
es
icebp
loopne
cmp
jno
int3
stc
sbb
sarl
leave
in
cmp
pop
pop
andl
dec
push
sbb
bound
idivb
inc
orl
jmp
push
cmp
or
pshufw
repz
stos
stos
push
jb
rcll
popf
mov
mov
cld
xchg
inc
mov
and
sbb
and
outsb
notb
movsl
pusha
mov
xor
pop
lahf
inc
addr16
pusha
arpl
and
fwait
inc
mov
rolb
inc
sarl
lods
int
sub
xor
jno
fiadds
rcr
and
cmp
loopne
std
addl
stos
lock
dec
add
xchg
and
and
into
cs
insb
icebp
xor
pop
push
mov
mov
js
mov
add
sub
push
inc
testb
or
inc
in
jmp
pop
mov
mov
sub
or
sub
xchg
jmp
xchg
je
pop
aaa
nop
ljmp
inc
roll
push
mov
push
or
insl
int
icebp
divl
dec
jbe
and
inc
dec
lret
popa
lock
in
and
pop
push
jecxz
mov
das
ret
push
es
aaa
stc
dec
jae
lea
xchg
pop
xchg
sub
or
push
daa
xor
test
mov
xor
arpl
movlps
push
int
mov
mov
mov
cmp
inc
cmpb
repnz
xor
in
ds
xor
push
cmp
mov
jno
outsb
xchg
inc
inc
mov
mov
sub
fadds
pop
xor
packsswb
movsb
pop
leave
cmp
sbb
cmp
push
lcall
gs
adc
pop
pushf
mov
cmc
mov
addl
gs
sbb
outsb
adc
mov
gs
push
mov
and
mov
jbe
push
add
xchg
and
repnz
mov
sahf
ret
addr16
in
inc
in
mov
iret
fs
xor
stos
fldcw
shr
aad
dec
mov
jmp
call
mov
addl
pusha
lock
inc
in
and
aam
data16
cmp
xrelease
jle
stc
addr16
cli
outsb
cmp
cmp
loop
imul
lret
pop
or
or
adc
popa
in
repz
mov
push
and
in
test
cltd
xor
jns
loopne
cld
jo
in
adc
mov
lds
stos
sahf
xor
ret
sbb
int
adc
mov
pop
insl
arpl
outsl
iret
jmp
add
jo
and
ja
sub
mov
idivl
inc
dec
mov
and
inc
jg
mov
adcl
pop
push
fadds
mov
mov
cli
insb
sub
into
add
movsb
rcl
lods
xchg
xor
fmuls
cmp
loope
call
decb
sbb
dec
clc
movsl
push
incb
stos
and
cmp
jno
push
fwait
push
sbb
ret
push
insl
arpl
xor
in
xchg
push
bound
das
mov
dec
test
shlb
pop
aaa
add
cmpsb
aaa
clc
scas
xchg
mov
mov
lret
sub
shll
jmp
sub
cmpsl
jb
sbb
arpl
jl
je
outsl
in
and
int
mov
mov
movsl
pop
push
fisttps
mov
and
nop
out
mov
loopne
scas
dec
mov
adc
imul
mov
or
cmp
mov
ror
xor
leave
mov
xchg
pushf
sbb
lds
pop
lds
pushf
or
pop
loopne
mov
je
filds
cmc
pop
xchg
adcb
lcall
imul
dec
jae
out
in
xor
xor
arpl
repnz
or
pminub
mov
daa
aam
in
mov
imul
pop
sti
mov
cmp
sub
ljmp
jmp
jmp
adc
dec
and
das
pop
sbb
xor
dec
push
add
pop
daa
xchg
dec
mov
xchg
mov
dec
inc
movsb
ja
add
adc
dec
mov
sub
jl
xor
mov
loop
jge
aad
or
push
cmpsl
or
shl
arpl
bound
inc
loop
sub
and
mov
xor
cmpl
loop
adc
pop
jns
rcll
jo
and
in
lahf
gs
repnz
push
xchg
mov
and
inc
pop
xor
mov
push
xchg
adc
js
test
lcall
fincstp
adc
jns
mov
popa
push
mov
cmp
mov
insb
lea
or
idivb
gs
pop
ljmp
sbb
pop
mov
ffreep
sbb
aad
imulb
scas
test
jns
stos
fadds
daa
popa
mov
sbb
pop
push
cmpl
leave
mov
sub
test
push
je
pop
mov
pop
jge
cs
cltd
push
and
sbb
jb
xlat
aam
mov
insb
adc
arpl
pop
and
lcall
and
cmc
push
mov
push
push
test
sbb
inc
roll
int
in
das
in
and
sbb
mov
out
cmpsb
loop
sbb
popf
mov
in
sbb
xchg
mov
jmp
lahf
sub
enter
pop
les
xor
add
add
xor
sbb
es
lds
xorb
ret
cmp
imul
pop
pop
dec
xor
xchg
push
aam
mov
sbb
ljmp
addr16
push
cltd
rolb
fisubrs
and
test
arpl
sub
cmp
pop
jne
cmp
pop
lock
shl
sbb
dec
or
push
jne
jmp
push
xchg
je
xchg
push
inc
gs
xchg
sbb
fyl2x
lea
subl
xor
jmp
movsb
xor
idivb
shll
pushl
lea
insl
push
imul
xchg
and
add
jge
and
dec
xor
pop
xchg
mov
push
pop
mov
mov
insb
xor
sub
insl
gs
push
imul
pop
xchg
pop
in
lods
stc
loop
jle
cli
mov
popf
sbb
push
pop
popf
inc
mov
mov
insb
sbb
hlt
repnz
data16
jbe
lahf
xchg
lock
sbb
popa
push
std
pop
gs
fsubl
mov
and
adc
jl
or
outsl
fdiv
inc
loope
xchg
mov
pushf
dec
sub
sti
pop
iret
outsl
pop
insl
repnz
push
xchg
out
add
cltd
push
loop
push
test
inc
hlt
and
insb
mov
repnz
mov
pop
mov
sbb
movsb
xchg
xchg
lods
inc
lea
lret
mov
loope
xchg
loopne
cmp
gs
xchg
mov
jl
xchg
lock
push
ljmp
xor
arpl
or
add
inc
cmp
mov
add
inc
sub
pop
jbe
cmp
cwtl
imul
add
jns
jg
shlb
aam
dec
pop
in
pusha
push
mov
scas
xchg
adc
jnp
fs
loop
sub
xchg
out
push
insb
xor
repz
sti
cltd
das
nop
xchg
fisubs
aad
pop
enter
imul
cli
inc
int3
push
push
xchg
mov
in
clc
sti
xchg
mov
sub
push
loop
cmp
ds
push
add
and
xor
and
xor
adc
fbstp
aaa
xor
mov
lea
xor
jmp
or
pop
mov
leave
rcrl
sahf
repnz
bound
and
shlb
loopne
inc
cmp
xor
int
jmp
cmp
dec
hlt
lea
push
aad
push
xor
mov
pop
push
mov
test
adc
adcl
cwtl
pop
xor
pop
xor
push
jmp
dec
out
ret
sub
mov
lcall
arpl
fisttpl
sub
in
in
xor
test
mov
mov
cmp
divb
push
popf
int
and
lods
int
in
popa
add
enter
adc
pop
push
les
jae
icebp
into
outsl
push
decb
pop
lock
aas
jmp
push
addr16
mov
lods
addr16
ss
jno
inc
test
dec
popf
popf
test
lea
flds
hlt
mov
mov
into
push
inc
fs
mov
loope
mov
mov
push
push
mov
insb
add
insl
fmul
test
gs
iret
jge
push
jae
daa
ja
in
pop
mov
bsr
xchg
jg
insb
sbb
dec
and
inc
bound
mov
out
gs
cs
xor
daa
insb
add
hlt
shll
aaa
pop
popa
xor
loope
mov
xchg
test
pop
arpl
jg
xchg
adc
add
in
mov
test
dec
je
lea
sub
push
mov
cmpsl
dec
int
sub
lods
xchg
je
test
arpl
or
fsubrl
dec
inc
mov
psllq
xchg
notl
xchg
paddsw
cltd
cmpsb
xchg
xchg
sub
jle
push
lock
gs
jp
mov
ret
and
pushf
out
sbb
dec
and
sarb
sub
and
fldenv
test
lahf
pop
lcall
pop
xor
iret
rorb
push
insl
adc
inc
fstpl
fwait
sbb
arpl
sbb
scas
jne
lea
je
mov
push
rclb
insb
xchg
or
sbb
insb
push
sub
push
jno
aam
push
mov
push
mov
imul
push
inc
and
push
pop
out
notb
aaa
cltd
ret
or
out
in
and
sbb
inc
mov
icebp
in
pop
mov
shl
or
loope
lods
lock
mov
sarl
rolb
mov
jecxz
adc
add
dec
xchg
jne
add
jecxz
cmp
aam
loope
in
pusha
and
imulb
fists
mov
insl
insl
mov
mov
mov
in
lock
xchg
test
sbbl
pop
xor
popf
mov
in
cltd
adc
xchg
sbb
push
sar
int
in
inc
xor
insl
xchg
test
rclb
call
mov
pop
push
xchg
push
sbb
ret
das
insb
scas
mov
mov
lods
sti
sbb
xor
paddsw
in
lcall
bound
push
fisttpl
popa
sbb
popf
fwait
cmpsb
das
cmpsl
mov
xor
cmpb
pop
out
xchg
aad
pop
shrb
jle
clc
imul
cmpsb
leave
push
fmulp
jge
cmp
in
cmp
cmpsl
cli
cli
imul
jge
fmull
push
in
xchg
jnp
push
pop
mov
lods
ret
mov
popa
pop
push
shl
jmp
addb
loope
push
jge
xchg
inc
xchg
sub
ja
int3
pop
dec
mov
fmull
ljmp
pop
add
push
cwtl
mov
add
and
push
xor
leave
mov
inc
pop
movsl
lahf
addr16
xchg
pop
pop
shlb
cmc
inc
xchg
sbb
data16
or
dec
sbb
das
gs
out
xor
cmp
aad
lods
fwait
mov
inc
cli
je
hlt
dec
bound
aaa
dec
mov
sub
movsb
gs
mov
cmp
push
inc
gs
mov
mov
cmp
push
adc
xor
mov
xor
shl
hlt
fwait
mov
inc
fisttpll
pop
ret
sub
pop
adc
xchg
push
in
xor
cltd
push
mov
push
daa
xchg
lds
add
cmp
stos
lods
xor
inc
js
sbb
popa
and
je
testl
push
dec
dec
jg
scas
and
loope
out
cmc
in
add
mov
iret
aad
mov
test
fsubrl
mov
test
lea
in
in
aaa
test
popa
std
jo
das
test
pop
pop
push
test
incb
and
mov
and
popa
and
xorb
add
mov
xorl
push
repnz
xchg
ja
cmp
loop
sub
andb
dec
shll
ja
inc
jnp
cmp
cmp
jb
pop
aad
and
sub
sbb
daa
test
cmp
ret
dec
outsl
cs
inc
mov
je
popa
and
leave
sub
dec
movl
fcomp
cs
jbe
jmp
jno
mov
insl
out
xlat
in
pop
es
adc
xor
sbb
mov
mov
adc
popf
ja
mov
sub
dec
call
shll
sbb
adc
push
imul
sub
add
shlb
xchg
cltd
out
mov
or
mov
or
jecxz
pop
dec
jge
lret
test
xsaveopt
dec
ret
gs
insl
fdivrs
inc
push
pop
lea
and
fisubs
test
push
add
cmpsl
pop
fdivs
sub
mov
mov
pop
or
testl
push
push
ret
dec
mulw
or
clc
dec
arpl
jnp
mov
pop
add
adc
mov
mov
repz
jbe
arpl
add
push
adc
pop
sub
gs
bnd
cmp
in
mov
fnstsw
pop
jmp
pushf
popa
test
inc
imul
pushf
cmp
das
rorl
lock
imul
adc
jmp
add
daa
sbb
xor
gs
arpl
cmp
and
outsl
faddl
lock
adc
and
push
jne
imul
mov
mov
gs
ja
pop
inc
daa
dec
cmp
mov
cs
shll
loop
jp
add
je
rcrl
je
mov
jb
sub
imul
daa
rcrl
dec
mov
push
mov
cmp
pusha
pop
pop
pop
mull
lock
cmp
dec
jg
movsb
test
xchg
mov
mov
and
xchg
test
in
push
in
int
xor
pop
mov
jnp
sub
out
cli
inc
fadds
lahf
movsb
add
dec
aad
pop
lea
ja
or
or
pop
add
daa
subb
or
hlt
push
in
sub
testb
mov
xchg
and
stc
loop
add
push
pop
or
andb
outsb
sti
jl
rcl
enter
stos
push
jecxz
test
test
int
xor
cmpl
mov
aam
mov
xor
das
and
sbb
inc
xor
xor
inc
in
push
imul
loop
fs
lea
mov
push
and
jl
and
gs
lods
lret
lds
add
jg
or
outsb
out
xchg
arpl
mov
data16
mov
lret
lock
lret
stos
hlt
sub
shrb
shr
push
xchg
fs
pop
movsb
test
add
leave
inc
imul
in
push
push
movsb
mov
add
sar
outsl
lods
int
sub
inc
mov
or
shlb
fdivr
inc
mov
fs
aam
dec
sbb
and
ja
pop
movsb
into
orl
imul
sbb
je
loopne
xor
fcomps
xchg
lods
sub
scas
pop
sub
idiv
jae
repnz
das
insl
dec
add
push
in
add
jmp
loop
sbb
ret
test
mov
xor
ljmp
ss
fidivs
cmp
xchg
jb
dec
and
cmc
bound
or
inc
into
inc
icebp
jbe
push
jne
sub
es
inc
lret
jle
or
or
jb
cmp
shl
mov
and
sbb
ret
cltd
mov
aam
test
sub
or
xchg
inc
adc
mov
dec
stos
inc
inc
out
insl
jmp
fwait
lea
scas
or
mov
xchg
jnp
dec
das
jns
inc
sbb
pop
xlat
pop
adc
inc
daa
sub
fcmovnu
pop
adc
jge
ljmp
add
icebp
jae
dec
mov
fsubrs
int3
addr16
insb
push
aad
pushl
jae
shlb
jmp
test
jno
ficompl
js
aas
mov
dec
inc
addr16
loope
xchg
aad
sub
shl
arpl
and
in
pop
lahf
ljmp
jns
inc
jp
sub
xor
popa
cltd
ljmp
push
gs
dec
ljmp
ljmp
mov
imul
mov
and
subb
adc
pop
or
push
jbe
inc
xchg
scas
outsl
ljmp
cmp
lret
and
stos
xchg
int
xor
push
dec
xchg
pop
pop
jecxz
fs
sub
sub
ja
add
xchg
mov
and
push
outsl
add
cmp
je
xor
lcall
xchg
insl
cmpsb
ret
mov
sub
addr16
jns
mov
inc
mov
in
call
dec
ds
divl
sti
xor
xor
addl
sbb
insl
leave
pop
ret
cs
mov
rcrl
push
repz
add
push
and
imul
ss
fsubl
sub
out
xlat
sbb
lea
clc
sub
add
vpsubb
push
xchg
int3
sbb
cld
hlt
xorl
sahf
outsb
stos
testl
pop
inc
inc
mull
adc
xor
mulb
sar
inc
mov
test
cld
cmc
enter
loopne
fiadds
push
and
cs
mov
dec
aad
lret
mov
push
cmpl
inc
cs
mov
add
push
in
inc
gs
cmp
push
lea
arpl
inc
push
scas
je
inc
jecxz
adc
add
call
filds
sub
clc
insb
push
sahf
popa
pop
cmc
mov
in
adc
xor
icebp
ja
and
xor
or
pop
push
dec
jl
int
dec
xor
stc
xchg
and
cmp
mov
not
dec
aaa
in
in
cmc
sbb
push
dec
clc
popa
jmp
cltd
pop
push
fdivs
in
scas
jb
xor
mov
inc
popa
aas
adc
data16
push
sub
jno
out
pop
test
repz
test
inc
lcall
push
pop
adc
and
mov
pop
and
xlat
mov
adc
insl
out
push
sub
insb
sti
sbb
inc
in
arpl
jge
add
mov
adc
xchg
popa
and
ljmp
loop
add
sbb
inc
daa
in
movsb
loop
test
ret
lcall
push
add
inc
and
sub
out
mov
cmp
dec
pop
hlt
push
fldcw
add
dec
xchg
popa
icebp
dec
xor
pop
and
orb
js
insl
popf
mov
mov
pop
mov
insl
daa
lock
scas
mov
inc
in
push
orb
test
adc
add
inc
xor
mov
or
adc
inc
pop
sti
mov
ljmp
shll
and
dec
push
in
mov
xchg
in
bound
ljmp
cltd
bound
push
inc
lret
add
addr16
add
pop
imul
in
insl
out
mov
loope
sub
stos
scas
push
add
sbb
xor
push
fnsave
into
pop
aad
push
xor
sub
mov
mov
es
nopl
xorl
pushl
push
sahf
jae
cli
enter
push
lock
inc
aad
mov
jns
add
mov
sbb
fwait
sbb
enter
fwait
popa
ds
sbb
xchg
cmc
mov
mov
sub
pusha
lock
and
cmc
mov
dec
loopne
mov
dec
xchg
ljmp
outsl
xlat
call
add
arpl
call
ret
and
cmp
push
icebp
imul
rol
push
push
xor
inc
cld
mov
dec
cli
cmp
je
pop
cmc
pop
stc
cmp
jo
popa
bound
inc
out
dec
daa
jns
pop
pop
and
fnstcw
xor
and
xchg
jmp
insl
bound
cmp
xor
in
pop
rorl
call
adc
pushf
clc
loope
cltd
rorl
imul
movsl
mov
clc
pusha
push
mov
addr16
fdivl
mov
scas
xor
out
fistpl
adc
add
inc
cmp
pop
add
adc
xchg
inc
imulb
mov
lret
test
lret
jns
xchg
stos
push
rcl
sub
aaa
sbb
shlb
jnp
out
adc
jmp
out
and
imul
dec
rcll
inc
das
popa
push
leave
out
sbb
insl
movsl
out
xor
cmc
push
add
push
in
dec
adc
push
daa
lret
lahf
inc
repnz
cmp
in
out
mov
loope
or
and
inc
ficoms
movsb
xchg
mov
mov
mov
popf
ljmp
shl
xchg
lret
insb
shlb
inc
out
cmc
sbb
jae
pop
das
dec
push
adc
adc
fidivs
das
imul
leave
fwait
dec
lock
push
xor
stos
jmp
movsl
mov
das
lock
lock
sub
sbb
js
call
xor
push
lea
shl
push
add
adc
add
jl
ror
cmc
mov
dec
xor
aam
rclb
bound
fwait
outsl
test
jle
mov
dec
jne
mov
ja
int3
adc
ret
decl
cmp
add
dec
int3
jno
mov
dec
test
test
xor
stc
dec
mov
clc
pop
and
add
insb
and
mov
inc
mov
mov
mov
adc
jp
lahf
xor
or
or
push
popf
in
jecxz
fmull
xchg
jl
inc
vpavgb
loope
aaa
adcb
in
pop
push
cmp
mov
or
movsb
inc
and
xchg
lea
sbb
lock
jae
jg
xor
out
inc
lock
jmp
out
arpl
ljmp
test
in
in
mov
psubusb
push
pop
and
cmp
sub
push
adc
cmpb
mov
out
stos
icebp
and
cmp
das
into
lods
inc
xchg
in
into
add
adc
or
into
stc
outsb
inc
out
shll
inc
into
adc
aad
pusha
push
push
jb
push
or
clc
xor
or
cmc
loopne
xor
shrl
cmp
adc
popa
and
mov
adc
push
cmp
insb
dec
bound
fistps
add
shl
add
pop
adc
cmp
cmp
stos
shl
or
lods
aad
adc
lods
lods
add
xchg
iret
jg
lea
xchg
and
imul
dec
shrb
popa
or
xor
dec
mov
gs
mov
in
fucomi
popa
cld
dec
cmp
fsub
sbb
and
pop
jl
mov
jno
xchg
mov
or
out
dec
leave
bound
lods
jno
mov
pushf
mulb
sbb
aaa
repz
add
add
mov
mov
les
ja
daa
imul
cmp
jecxz
jp
mov
pop
push
fdivp
cmp
dec
add
sub
jmp
sarl
pop
dec
sbb
jns
lcall
mov
jl
and
mov
sbb
add
jbe
mov
jp
pop
dec
mov
bound
arpl
rorl
lea
push
popa
lods
cmpsb
imul
fmull
std
clc
mov
pop
in
cmp
daa
iret
stos
bound
lret
icebp
rep
outsl
nop
sub
lds
jae
out
mov
pusha
outsl
addr16
xor
jbe
fcmovnb
test
and
adc
sub
add
xor
andb
mov
jmp
xchg
insl
mov
mov
pushl
dec
xchg
lods
and
stos
imulb
test
sub
int3
pop
sbb
insb
pop
repz
popa
loope
pusha
mov
stos
sti
aad
rorb
pop
test
adc
nop
sti
or
enter
push
jbe
aas
stos
fimull
xchg
test
jbe
insl
mov
lret
push
inc
scas
jo
int
xchg
jbe
hlt
stos
push
test
daa
push
jp
push
push
aaa
sbb
mov
enter
pop
lea
cwtl
imul
and
sub
mov
rcr
paddb
sarb
idivb
pusha
in
mov
pusha
outsl
add
and
jns
mov
push
sbb
dec
hlt
insb
push
mov
gs
icebp
gs
jne
lea
jns
mov
es
xchg
cld
push
es
fistps
shrl
fstl
shrb
cmp
ret
jns
adc
aas
and
fwait
sub
sti
or
mov
test
repz
add
xor
jp
rcl
lret
sbb
ljmp
cmp
jne
negl
sub
mov
sbb
int3
push
cmp
cmc
insb
mov
jle
push
pop
mov
mov
sub
xor
dec
sar
ja
into
fbld
lret
cmpsl
xor
mov
cmp
mov
lods
xchg
add
mov
add
addr16
mov
cs
in
out
lahf
pop
pop
dec
adc
and
fmull
jno
adc
add
inc
fxch
fidivs
les
fwait
repnz
add
pusha
mov
and
cmc
cltd
lea
add
dec
inc
jmp
ljmp
or
xchg
mov
ss
dec
mov
notb
pop
and
lods
push
int
mov
mov
insl
add
out
lods
or
mov
pop
xor
ss
sub
add
jle
mov
cmp
jecxz
xor
dec
add
pop
jg
xchg
sub
sub
popl
dec
repz
adc
addr16
enter
lods
add
and
std
pop
dec
mov
mov
jb
mov
ss
outsb
shll
xor
cmp
inc
push
add
mov
or
dec
jge
rol
repnz
das
daa
jnp
inc
or
push
gs
pop
push
sub
jp
nop
or
add
push
bound
or
jg
jmp
imul
jmp
cltd
popf
inc
push
sbb
test
inc
push
and
fisubs
test
mov
or
xor
testl
mov
xlat
dec
jne
and
movl
aas
xor
or
dec
pop
push
sub
lods
imul
js
push
lock
sbb
mov
mov
divl
lret
mov
and
xor
das
inc
daa
inc
sar
je
mov
push
dec
scas
sti
push
cld
sti
shlb
repnz
mov
dec
sbbb
in
loope
in
add
fistpll
adc
and
cmp
lock
dec
test
jl
cmp
sbb
and
ret
xor
push
dec
mov
and
mov
xchg
adc
push
shll
sub
push
shlb
xor
jmp
xchg
negl
sub
hlt
mov
push
ret
or
push
pop
rorl
aam
sbb
sbb
mov
repz
imulb
xor
push
and
and
mov
jae
mov
xor
stc
leave
inc
mov
pop
ljmp
out
sub
xor
mov
in
imul
jne
xor
leave
in
xor
xchg
lods
fwait
cli
loop
lods
dec
add
dec
add
insb
data16
testb
add
jnp
mov
ja
inc
mov
mov
push
add
mov
loop
mov
dec
aad
icebp
test
jnp
in
mov
mov
movsb
cmp
icebp
and
imul
sbb
push
fcomip
xchg
popa
test
shll
mov
mov
lret
xor
cmpsl
add
cmp
dec
insl
jecxz
sub
test
xchg
int3
shrl
jns
int3
pop
cltd
push
aad
adc
add
mov
jge
call
pop
das
inc
xchg
xchg
cmp
dec
jge
jmp
ret
push
jne
int
mov
das
jle
hlt
in
jno
jne
int
mov
lods
add
pop
push
sub
mov
xchg
pop
cmpsb
mov
pop
pop
or
pop
daa
mov
data16
mov
sahf
add
mov
xor
pusha
inc
dec
jp
arpl
aaa
in
jg
pop
data16
loopne
and
pop
lea
into
test
pop
mov
or
pushf
sub
stos
ret
mov
cmp
push
dec
sub
push
cmp
sub
gs
push
xor
aaa
mov
repnz
push
xchg
sub
jnp
and
mov
cli
subb
sbb
mov
andb
push
movsb
addr16
vmwrite
testl
enter
daa
movsb
in
stc
nop
pusha
jp
ds
dec
out
cmp
fistpl
push
insb
icebp
aad
push
adc
cmp
lahf
cmc
xor
push
shr
inc
das
dec
push
push
loope
and
mov
imul
add
add
pop
fs
push
add
sbbl
add
push
pop
dec
out
gs
sbb
sub
pop
iret
xchg
cli
xor
mov
xchg
adc
push
les
add
push
daa
mov
std
fildll
in
and
iret
mov
data16
cltd
jnp
addr16
test
push
cltd
jno
call
sub
add
into
outsl
xor
les
sub
test
cmp
mov
fdivrs
or
sub
popf
pop
mov
cmp
insl
sub
sahf
insl
jae
fs
jo
jno
cmp
add
pop
mov
mov
and
jns
int
shrb
data16
push
subb
dec
push
in
dec
fistl
jle
mulb
outsl
or
cld
scas
clc
push
imulb
das
dec
mov
pop
in
data16
push
adc
mov
sbb
push
cwtl
xor
add
jb
aas
cli
xor
dec
sarl
rcll
mov
gs
mov
pop
imul
adc
and
xor
pop
pop
push
fs
insl
test
xor
dec
in
push
in
inc
push
imul
inc
cmp
cmp
fs
insl
jge
adc
out
xor
movsl
out
xor
mov
out
xor
and
xchg
lock
mov
gs
in
mov
in
lods
or
mov
mov
add
cmpsb
fs
arpl
lock
push
hlt
xor
push
shlb
in
adc
sub
adc
sub
push
aad
loopne
fcoml
movsb
fldenv
fs
insl
in
jbe
shr
gs
lock
push
hlt
gs
lods
lds
test
rcll
dec
dec
je
xor
mov
in
or
bnd
jb
sub
push
mov
lods
arpl
pop
imul
mov
xor
in
cltd
adc
sub
inc
bound
inc
test
push
jmp
sub
mov
push
and
in
xor
lds
insl
pusha
jae
lea
jno
imul
jno
insl
cmpl
push
lahf
insb
fwait
dec
orl
dec
push
and
lods
in
popf
xor
inc
push
in
cmp
movsl
insl
cmp
xor
movsl
lock
push
mov
sub
sahf
fs
in
lds
and
push
inc
inc
sbb
push
cmp
jnp
adc
pop
or
popa
hlt
gs
or
push
add
mov
jno
ljmp
mov
jb
data16
jmp
ljmp
mov
cwtl
push
aaa
divl
push
add
mov
sub
add
jmp
out
test
pop
push
mov
in
sbb
popf
mov
inc
mov
aad
stos
xchg
arpl
in
clc
mov
and
xor
std
test
jne
inc
jge
loope
movsl
scas
sbb
int
stos
dec
xchg
mov
xor
mov
push
mov
and
enter
and
into
inc
push
jmp
cli
stos
lods
lea
mov
gs
pop
out
gs
into
and
pop
mov
in
out
jg
jmp
into
jp
mov
rorl
or
es
mov
loopne
insl
jae
mov
mov
fmulp
mov
icebp
mov
cmp
insb
test
mov
aas
pop
mov
outsl
push
adc
iret
mov
push
je
inc
cmp
das
in
lahf
in
xchg
pop
push
aad
mov
pushf
fadds
lret
loopne
xchg
sub
xchg
fdivr
int
ss
jecxz
pop
pop
nop
push
jmp
aad
jecxz
xchg
and
jb
mov
fisttpll
pop
sbb
xor
lods
fcomip
jo
jge
in
orb
leave
pop
xchg
cltd
lea
push
gs
pop
lret
inc
jecxz
das
pop
gs
loope
jmp
jge
enter
and
shll
xor
rolb
sub
mov
xor
xor
jbe
pushl
test
mov
out
cmpsb
fisttpl
push
dec
insl
cmpsl
call
dec
test
jmp
cmp
dec
dec
xor
in
loope
sub
pop
es
in
sub
je
mov
sub
repz
jno
mov
in
pop
and
xlat
test
movsl
push
add
inc
and
ret
imul
imul
lock
fsubrl
or
daa
aad
mov
dec
lods
dec
in
push
aas
fadd
shl
xor
xor
or
jns
cmc
shll
push
fs
lods
cmp
jo
inc
in
outsb
jle
sbb
or
mov
mov
cmpsb
movsbl
inc
mov
dec
frstor
jb
mov
xor
inc
mov
repz
push
xchg
testl
aam
xor
jno
jmp
mov
push
pop
cmp
sahf
push
lds
adc
pop
xor
divl
mov
and
inc
xchg
sub
outsb
adc
adc
pop
in
arpl
scas
pop
push
xchg
mov
mov
mov
pop
mov
movsl
xchg
pop
or
popa
mov
cmp
xchg
sahf
faddl
outsb
jl
int
into
xchg
cmpsb
imul
jg
dec
rcll
pop
push
popa
pushf
jge
dec
insb
lret
mov
addr16
inc
push
cld
mov
pushf
xchg
push
xchg
inc
out
and
cmp
xorb
and
and
adcb
lods
popf
dec
dec
or
scas
clc
pop
pop
stc
insl
inc
push
dec
in
mov
ja
movsb
bound
inc
popf
stos
inc
cmpsb
push
sbb
pop
xor
aad
sub
or
and
pop
sbb
cmc
fscale
xor
push
sarl
push
decb
insl
pop
clc
or
xchg
pusha
pop
loop
jg
je
xor
jo
aaa
std
push
xor
fidivrs
xchg
and
jge
bound
lcall
out
in
jl
xchg
mov
pushf
sbb
push
movsl
fbld
loop
addr16
and
jno
cli
dec
pop
sbb
mov
push
xchg
gs
sub
out
jb
callw
jmp
mov
xor
dec
fimuls
xor
cmp
and
push
sahf
inc
jb
clc
mov
cmp
xor
arpl
cwtl
push
add
xor
xchg
stos
mov
out
loopne
xor
cmp
sbb
test
xor
jb
xchg
add
out
ss
sub
push
xchg
fs
fwait
dec
mov
and
insb
sub
rcr
mov
imul
push
push
or
pop
xchg
lcall
fstl
loope
adc
popf
loope
hlt
test
adc
sub
push
loop
xor
stc
sbb
popa
xor
pop
imul
dec
add
push
lea
add
or
and
mov
mov
sbbb
ss
pop
in
or
dec
rcrb
mul
movsb
mov
xor
adc
push
fcompl
sub
sbb
je
pop
pop
push
push
jge
dec
mov
push
ljmp
dec
std
popa
push
test
push
push
and
xor
dec
dec
loopne
add
cwtl
xchg
out
aad
push
stc
imul
sbb
cld
lods
mov
leave
lea
lea
push
lds
loop
das
insl
xorb
mov
insb
add
push
and
loopne
outsl
jne
sbb
aad
or
pop
push
jae
int
in
imulb
out
lock
push
mov
mov
js
push
pushf
mov
mov
jle
add
mov
lcall
jnp
dec
mov
into
add
or
lret
mov
insb
xor
jno
and
sub
inc
bound
sbb
std
daa
in
dec
and
ficomps
inc
cmp
stos
sbb
sub
xorl
pop
pop
push
inc
fs
adc
jg
sbb
sbbb
inc
push
and
test
mov
xchg
mov
lcall
popf
in
and
in
pop
test
pop
mov
mov
pop
out
pop
jmp
nop
lods
insl
jmp
nop
callw
jns
gs
jecxz
filds
not
fsubrs
pop
mov
insb
mov
out
mov
out
js
sti
test
in
dec
mov
and
cmp
sub
sahf
lods
push
imul
pop
in
stos
inc
push
pop
sbb
insl
fucomi
dec
paddsw
jb
testb
xor
cmc
add
pushf
sbb
outsl
xor
sub
fdivs
loope
jmp
or
or
movsl
pop
movsl
adc
orl
jmp
dec
push
and
push
pop
int
ficoms
inc
mov
mov
inc
loope
xchg
dec
gs
fidivl
and
scas
xor
sbb
insl
bswap
dec
loope
cmp
xor
push
pusha
xor
or
imul
pop
dec
lahf
in
cmpsl
mov
adc
das
xor
imul
ret
bound
jg
lock
and
jo
outsb
pop
add
and
lahf
push
jmp
cld
in
push
fcomps
xchg
cmp
jp
xor
xor
inc
and
jmp
dec
lahf
lret
in
jae
xor
xchg
jo
adc
adc
insl
icebp
push
test
xor
cmp
movsb
lock
mov
jp
roll
cmp
adc
sub
lods
jae
unpcklps
adc
pop
jb
pushl
push
jmp
in
ljmp
imul
hlt
imul
xor
repnz
dec
mov
test
dec
lea
imul
cltd
pop
cmp
ljmp
lea
pop
jno
add
cwtl
jo
push
and
mov
push
dec
fmull
cmc
mov
sub
and
outsl
push
and
jno
xor
jp
inc
and
push
lea
pop
inc
hlt
xlat
inc
xchg
pop
cmpsb
pop
jno
jge
jae
sahf
repz
pushf
std
fistpl
sbb
cmp
adc
lret
mov
repnz
sbb
xchg
jp
sub
std
add
lods
mov
iret
cmp
jge
and
subl
lock
jmp
jo
fs
sbb
push
jno
icebp
popa
leave
push
push
jno
jno
sub
fs
gs
xchg
daa
ljmp
leave
mov
arpl
cltd
repnz
je
cmp
repnz
jbe
shrb
pop
outsl
xor
jb
mov
pop
je
jb
hlt
and
mov
data16
and
cmp
in
mov
callw
das
xor
cmp
pop
daa
cmp
ret
ficoms
xor
andl
mov
imul
sub
or
cmp
cmpsl
test
jmp
cmp
jmp
les
loope
stc
xor
xorps
hlt
ljmp
jae
or
or
mov
scas
fbstp
scas
and
cmp
xchg
ficompl
jnp
jmp
xor
sahf
sbb
dec
sub
sbb
hlt
and
add
and
mov
pop
ja
push
imul
mov
dec
push
xchg
mov
inc
ss
and
pop
cs
int
test
push
sub
out
push
mov
lret
lods
mov
sub
bound
dec
das
popf
sub
jb
mov
cltd
sub
cmp
sub
mov
in
sub
sub
cmc
cmpl
cs
sub
loop
push
leave
mull
dec
sub
xor
fsubrs
pop
push
arpl
hlt
xor
mov
cmp
push
push
push
pop
das
fisubs
xchg
lea
or
lcall
push
pop
idivl
stc
popa
cmp
lea
sbb
bound
or
lock
jge
lea
les
cld
sub
cli
add
adc
and
mov
pop
repz
cmc
aas
add
xchg
xor
xlat
imul
push
mov
iret
out
mov
add
test
cwtl
inc
push
mov
testl
loop
lods
arpl
mov
xlat
jno
aas
lea
nop
pusha
mov
in
xor
adc
cmp
call
inc
xchg
pop
out
xor
jo
xor
call
addl
pop
or
repz
add
sbb
lds
xor
fs
loope
fs
cmc
mov
loopne
pop
movsl
bound
pop
pmaddwd
insb
clc
dec
add
push
je
imull
ja
pop
je
ja
repnz
mov
outsb
dec
jg
push
jb
inc
pop
mov
adc
sbb
icebp
mov
mov
jl
pop
popa
sbb
gs
pop
aam
ret
jae
and
mov
adc
imul
movb
adc
cmp
sub
decb
popa
jge
in
adc
pop
dec
scas
in
fistps
test
xor
imul
das
icebp
cmp
push
pop
jo
mov
xchg
push
repz
jb
insb
dec
or
or
inc
popa
fstl
jle
ja
cli
movaps
cmpsb
or
jae
outsb
imul
cld
xor
jne
or
mov
fisubrs
ljmp
or
jae
icebp
lods
cltd
push
stc
jae
xchg
push
gs
sub
mov
pop
sbb
int3
cmp
pop
fbstp
cltd
pop
int
and
iret
push
and
arpl
in
repnz
pusha
push
pop
insl
cwtl
inc
jo
push
out
int3
adc
dec
pushf
mov
jbe
xlat
test
pop
push
cmc
scas
push
lea
jecxz
icebp
and
jg
scas
cmp
aad
pop
sti
jmp
jmp
outsb
mov
add
jmp
ljmp
mov
aaa
addl
out
ss
jge
aaa
jmp
inc
cwtl
aad
test
jmp
push
jo
int
jmp
scas
push
and
ret
mov
sbb
stos
jle
and
popf
inc
push
mov
test
push
orl
inc
mov
jb
cmp
inc
popa
jno
and
aaa
push
ja
mov
scas
stos
jns
fsubl
pop
in
mov
movsb
lods
add
int
push
sarl
push
adc
mov
mov
cltd
jbe
adc
nop
push
mov
cmp
clc
je
das
hlt
test
cmpsb
mov
lods
cmp
pop
jmp
outsl
mov
popf
push
test
in
adc
outsl
insl
mov
loop
jle
sbb
inc
imul
or
xlat
mov
loop
adc
jg
xor
jo
lea
add
pushf
cmc
push
call
push
in
pop
xchg
sub
adc
jno
xor
lods
sub
pop
pop
inc
cwtl
gs
pusha
insb
add
test
out
jno
popf
xchg
cmc
xchg
xchg
mov
jmp
in
out
in
push
sbb
adc
int
int3
bound
lock
stc
jne
cmp
insl
add
in
adc
xor
push
pop
js
adc
insb
push
xchg
repnz
mov
enter
inc
sub
add
dec
lea
push
fs
cmc
push
xchg
bound
fs
dec
imul
test
jge
test
je
sub
into
nop
sub
cmpsl
or
lods
imul
jo
sub
clc
xor
lods
mov
add
push
xchg
jp
dec
xchg
out
cmpl
cltd
subl
pop
jge,pn
inc
out
mov
adc
in
addl
jns
cmpsb
and
inc
insb
ret
stc
imul
sti
lock
gs
out
hlt
sahf
xor
jo
outsb
dec
test
add
repnz
outsb
and
jle
imull
or
clc
call
int3
arpl
cltd
sbb
dec
inc
ret
dec
aas
aas
xor
bound
add
pop
outsl
pop
jae
add
cmpsb
imul
add
pop
bound
ljmp
xor
int
in
pop
insl
add
imul
je
mov
cmp
push
lods
in
sub
cmp
arpl
adc
cwtl
or
push
pusha
idivl
push
js
xor
inc
mov
xor
mov
fdivl
or
test
push
mov
mov
push
pusha
hlt
adc
bound
cli
fmuls
cmp
lods
mov
cmp
imul
and
xor
daa
pop
psubq
mov
sub
in
int3
xchg
mov
popa
nop
scas
outsb
inc
hlt
movsb
sbb
int3
cli
scas
movsl
and
rcrl
sbb
pop
add
notb
sbb
jge
cld
mov
out
cmpsb
sub
out
test
arpl
lea
push
mov
push
mov
scas
outsl
mov
cltd
push
xlat
jno
cmp
ds
ss
or
mov
in
and
in
and
dec
push
dec
sbb
xchg
stos
add
push
mov
mov
movsb
pop
xor
imul
loope
add
and
daa
frstor
xor
andl
mov
daa
sub
pusha
sub
gs
fildll
mov
imul
notb
lahf
xchg
xor
pop
int
push
xor
fildl
and
inc
pop
aad
data16
add
jno
jns
repnz
xor
test
jmp
cmp
add
pop
xrelease
arpl
inc
in
push
jbe
lahf
cmp
add
or
push
daa
or
repnz
pop
dec
or
pop
or
jmp
inc
jl
mov
pop
das
push
imul
fldcw
scas
jo
dec
fsubrl
or
sbb
xchg
pusha
repnz
jb
dec
mov
lds
pop
imul
pop
lea
dec
cltd
aam
sahf
jge
stc
or
das
cmp
clc
adc
xor
nop
and
sbb
popa
nop
pusha
push
fisttpll
sub
xor
cmp
inc
in
arpl
sub
hlt
data16
mov
clc
sbb
in
sbb
inc
pop
cs
mov
lahf
xlat
imul
pop
mov
add
mov
inc
jg
cmp
dec
add
out
pop
and
aam
test
movsb
push
cltd
push
in
inc
add
lds
push
lock
cwtl
loop
jmp
test
jae
pop
sub
dec
sub
sub
jns
push
dec
or
pop
data16
adc
jge
push
in
mov
push
js
sub
sub
mov
push
push
jno
xchg
mov
call
mov
xor
sub
inc
pop
sarb
pop
xchg
je
les
jae
inc
cs
fsubrl
cmp
xchg
sbb
push
or
rcrb
mov
xchg
xor
sub
pop
fbstp
xor
testl
cmp
arpl
xor
callw
sub
cld
aad
pop
or
jbe
add
imul
add
push
xchg
adc
sbb
jns
pop
lea
lods
rep
xor
add
insl
ja
in
fsubl
in
add
insb
and
xchg
xor
insb
xor
daa
push
stc
xor
pcmpeqd
lock
adc
mov
xor
subb
jno
mov
xor
gs
test
fs
add
out
pop
push
popa
imul
insl
push
add
cmp
fcoml
lock
aaa
mov
imul
lods
sub
in
pop
mov
popa
shrl
fs
jle
cwtl
stc
fs
fucomi
std
idivl
loopne
lock
mov
mov
pop
mov
and
pusha
jbe
insl
mov
pop
pop
shrb
add
jp
dec
leave
mov
dec
pop
fdivl
inc
mov
push
stc
lds
jmp
repnz
cld
ficompl
mov
push
mov
push
push
mov
sti
mov
push
movsb
sbb
push
mov
pop
sbb
push
jg
imul
test
pop
pusha
push
add
pop
push
mov
jle
jo
add
push
repz
jb
dec
icebp
inc
es
dec
sbb
or
addr16
addb
inc
or
mov
pop
dec
pop
adc
cwtl
in
mov
ret
sub
adc
sbb
mov
cli
imul
xor
mov
xor
push
and
outsl
in
enter
roll
popa
cmp
imul
jge
scas
cmp
roll
dec
ja
pop
gs
rcll
hlt
cld
dec
jae
add
sub
push
jl
pop
insb
push
mov
push
xor
jle
xchg
repz
popa
loopne
push
jmp
dec
adc
outsb
or
jno
jp
dec
pop
bound
inc
in
mov
dec
mov
sbb
push
sub
shll
mov
inc
xchg
cmp
fcomp
add
xchg
lods
sbb
lret
mov
jo
sub
in
je
daa
mov
push
mov
push
pop
bound
mov
stos
sbb
movsb
dec
pop
dec
fldt
arpl
popa
mov
mov
push
loope
loopne
fnstenv
jno
dec
loope
pop
lea
clc
imul
bound
inc
mov
and
add
mov
mov
add
out
mov
push
pop
ljmp
pop
jmp
in
out
and
pop
and
enter
movb
sbb
std
xor
cmp
jmp
mov
scas
pop
dec
roll
mov
or
add
repz
xchg
sbb
in
xchg
xor
popf
push
jno
or
jns
popa
adc
popa
and
test
testl
pop
sbb
loope
jo
or
push
lods
imul
sbb
sbb
xchg
mov
int3
lock
mov
scas
inc
jae
inc
adc
lahf
pop
mov
je
mov
cmc
xor
mov
jo
stc
fs
add
in
lods
aaa
pop
clc
xor
out
into
adc
loope
movsb
fadd
add
fnsave
scas
imul
sbb
stos
scas
outsl
and
pop
lock
cmc
lods
sub
cmp
outsl
cmp
sub
test
or
sub
test
and
ss
mov
jae
sahf
add
clc
sub
lock
pop
lods
push
push
sti
sub
mov
rcrb
mov
inc
pop
insb
push
or
jbe
and
mov
push
sub
xchg
jle
push
es
add
push
sbbb
pop
jae
call
lcall
sbb
or
mov
insb
cmc
cmp
jle
lret
sub
dec
jmp
or
add
or
dec
jno
lcall
inc
sub
int3
jne
hlt
cmp
sbb
sbbb
pop
mov
push
inc
orb
ficompl
mov
or
stc
jne
hlt
cmp
add
dec
mov
cli
movsl
pop
stos
divb
add
clc
stc
jb
repz
cmp
ljmp
and
scas
adc
lea
xchg
sbb
pop
lea
lods
pop
and
sbbl
pop
jno
sub
jo
jae
mov
dec
mov
and
sbb
xchg
push
or
popf
lock
pop
dec
inc
rorl
loop
adc
cld
dec
xchg
or
sbb
jo
pop
dec
push
sbb
push
sub
push
pop
mov
imul
cld
fcoml
out
push
hlt
adc
nop
fisttpl
push
pop
rcr
cli
mov
lock
fs
sti
aas
fimull
es
fisubrl
xchg
pop
or
pop
pop
lahf
mov
push
test
sbb
cmp
pop
mov
sbb
arpl
push
mov
movsl
dec
pop
sti
cmp
cmp
mov
lret
stc
push
cli
cs
in
lods
jae
sub
fs
in
cmpsb
iret
push
scas
pop
mov
or
mov
or
les
ds
ljmp
orb
sbbb
pop
jp
rcll
test
mov
xor
in
scas
or
subl
add
arpl
popa
pop
test
and
jno
inc
or
sub
push
cmp
ret
pop
fsubl
mov
or
xor
test
leave
loope
test
stos
push
addr16
in
fistpl
test
jl
xchg
or
pop
or
inc
stc
add
je
cmc
fs
std
dec
cmpsl
xor
mov
and
jle
cmp
xchg
mov
xchg
repz
je
dec
lret
in
das
cmp
inc
and
imul
push
push
mov
add
popa
mov
jnp
std
mov
je
cltd
sub
jle
sub
mov
pop
bound
xchg
jae
fisubrl
imulb
es
leave
adc
pop
xchg
mov
push
pusha
pop
addr16
jae
mov
cld
lea
inc
sub
nopl
faddl
xchg
xor
lea
lock
leave
sbb
xchg
stos
push
popa
pusha
loop
lods
test
imul
push
push
or
inc
pop
push
ror
aaa
sub
lock
push
pop
jno
pop
xor
push
pop
ljmp
push
xchg
incl
sub
adc
lea
arpl
jl
dec
push
clc
dec
jge
pop
cmpsb
enter
in
push
das
mov
jl
pusha
out
jge
dec
iret
stos
sbb
filds
add
jmp
scas
in
pop
push
cld
dec
fwait
daa
sbb
jbe
insl
in
or
mov
xor
inc
je
inc
dec
push
dec
xor
and
and
sahf
in
push
mul
imul
dec
mov
inc
test
in
insl
mov
jbe
mov
xor
sbb
sbb
jns
sub
cmp
std
xor
pop
xor
jno
daa
sbb
xor
and
mov
or
push
dec
push
xchg
dec
dec
insb
or
or
movsb
jo
scas
push
or
fs
jb
je
int
call
cltd
mov
jmp
mov
xor
clc
sbb
push
cmp
add
sub
and
inc
rcrb
daa
outsl
jp
in
push
cmp
gs
push
hlt
cmp
inc
test
outsb
lea
xor
cmp
fs
fisttpll
mov
scas
lea
jnp
mov
add
sbb
mov
add
popa
repz
push
push
in
aad
cmp
inc
add
dec
mov
xchg
push
bound
mov
pop
mov
ror
push
pop
mov
jae
imul
repz
sub
lea
push
push
and
imul
int3
aam
push
push
adc
loopne
or
cwtl
adc
cs
and
xor
into
mov
push
sbb
and
push
clc
ds
cmp
and
adc
cmp
dec
jno
push
insl
pop
int3
push
popf
loopne
cmc
xchg
insl
jg
enter
xor
test
dec
cmp
fidivs
push
jge
mov
je
aad
mov
gs
jae
push
adc
pop
andb
fnop
dec
mov
and
mov
mov
jo
add
xchg
mov
dec
lcall
jge
dec
mov
and
push
or
xchg
adc
hlt
jmp
pop
aas
arpl
push
mov
add
inc
imul
out
lret
insb
std
fs
sub
xor
push
push
xchg
push
leave
lcall
or
or
in
jnp
cli
push
mov
cmpsl
jnp
lods
jle
insb
ljmp
xor
es
mov
sub
xchg
cs
jg
aam
gs
push
jl
mov
and
aad
icebp
ds
mov
sbb
addr16
sbb
sbb
sti
insb
pop
sub
adc
jns
or
inc
inc
dec
inc
push
xor
lret
aam
das
xor
data16
out
and
out
and
scas
mov
repz
sub
sub
dec
out
or
and
mov
mov
pop
and
aam
xor
push
cmp
mov
cvtps2pd
cs
imul
push
or
add
inc
add
or
push
clc
adc
sbb
adc
sbb
jmp
and
pop
xor
pop
and
out
insl
ljmp
jno
push
imul
mov
add
loop
push
les
mov
push
jae
scas
sbb
jno
sbb
jb
mov
in
xor
mov
cltd
xchg
jno
push
insl
mov
and
shrb
jl
adc
jg
lods
stos
push
movsb
mov
repz
push
inc
fldcw
loopne
cmp
cld
mov
dec
push
push
movsl
cmp
dec
xchg
outsl
and
push
pop
int
arpl
cmp
rcrl
cld
and
je
popa
cmc
pop
jae
pop
aad
les
testb
inc
inc
das
pop
push
mov
inc
test
jmp
jmp
scas
pop
or
dec
pop
hlt
push
and
outsl
mov
add
mov
or
and
and
cltd
js
ss
daa
adc
mov
das
test
imul
insl
pop
repz
mov
and
fadds
mov
scas
adc
push
mov
in
sbb
pop
sub
jle
test
enter
dec
sbb
push
mov
mov
lods
test
popa
add
and
xlat
push
adc
and
cmp
inc
movsl
stc
repz
bound
adc
push
rol
jmp
mov
cs
mov
push
insb
jnp
shll
adc
dec
data16
pop
lods
popf
scas
outsl
subl
or
fs
scas
mov
in
es
ljmp
lods
int3
push
imul
int
xor
nop
pop
punpcklbw
jl
icebp
leave
imul
pop
and
out
in
imul
mov
bound
sbb
imul
cmp
outsb
std
out
pop
push
add
xchg
enter
push
inc
mov
add
insl
inc
and
adc
jecxz
dec
jbe
and
std
mov
xchg
jmp
jo
je
sub
inc
push
adc
sbb
mov
imul
sub
cld
ljmp
jl
dec
in
cmp
or
mov
xor
xlat
mov
push
pop
lea
jnp
dec
je
lea
sbb
cli
imul
notl
inc
fmull
sbb
xlat
pusha
pop
add
in
std
ret
add
in
lock
ja
or
out
clc
lea
xlat
or
lods
repz
sbb
or
add
repnz
fisubs
and
mov
mov
cmp
imul
es
call
dec
test
int
je
pop
imul
or
mov
outsb
pop
inc
fcmovne
nop
and
or
dec
xor
leave
fistps
das
test
out
rclb
and
xchg
mov
add
or
jbe
or
test
dec
mov
les
and
scas
push
mov
mov
icebp
aas
pop
das
dec
cmp
jbe
mov
adc
adc
pop
insl
or
sub
stos
push
add
or
out
sub
call
xlat
lock
sub
mov
lahf
sub
aaa
jno
mov
sbb
push
pop
jbe
jbe
mov
cli
cmpsb
out
mov
mov
int
gs
lea
leave
sahf
jmp
adc
xchg
and
xchg
mov
dec
lock
jg
pop
dec
push
mov
outsb
pop
imul
mov
inc
and
icebp
scas
bound
cmp
dec
xchg
dec
xor
lds
mov
sbbb
sub
push
fs
jg
inc
outsl
and
std
xchg
push
inc
push
sar
jbe
ffreep
js
jmp
addr16
andl
ja
data16
idiv
sub
popa
and
jno
or
mov
mov
dec
ficomps
cmp
into
and
inc
and
xor
imul
out
aad
push
movsl
add
jg
dec
cmp
xor
movsl
sub
pop
dec
xor
in
mov
push
push
roll
and
mov
adc
pusha
mov
ss
jae
xchg
lock
adc
adc
add
sbb
cli
daa
jo
insl
je
lea
inc
lret
arpl
jbe
repz
mov
les
mov
into
dec
or
leave
dec
mov
pop
hlt
gs
sub
stos
lods
rcll
dec
push
imul
mov
stos
pop
inc
aas
xchg
and
cmpsl
xor
ret
pop
fists
insl
stos
sbb
decb
popa
lods
and
mov
shll
mov
mov
push
push
mov
fs
push
in
xor
adc
add
daa
mov
mov
in
loope
jne
jno
mov
or
push
push
jns
xor
xor
fidivrs
cmc
les
call
push
lods
jle
jo
repz
jecxz
xor
adc
mov
bound
sbb
cmp
inc
xlat
hlt
push
jo
push
orb
pop
add
imul
adc
shl
pop
loopne
fstpl
loopne
es
lea
data16
push
loopne
ret
insb
push
adc
out
dec
sbb
lods
mov
shll
shlb
test
data16
jecxz
inc
cmp
mov
shr
xchg
xor
dec
xchg
jp
in
push
cld
ss
fidivs
inc
lahf
pop
std
je
dec
or
sbb
dec
cmp
mov
fldt
push
and
test
lods
push
cmpsl
fadds
pop
mov
mov
rcpps
orl
cmc
or
test
das
or
add
pop
dec
jo
imul
pop
jb
std
inc
cmc
idivb
mov
mov
mov
jo
jno
add
hlt
nop
pop
iret
xlat
pop
arpl
scas
pop
xor
rcrl
pop
imul
sub
call
pushf
les
in
out
and
jge
es
push
and
push
add
and
pop
repz
int3
ss
call
ja
sbb
or
mov
cmp
es
sub
cld
lods
cld
and
cmp
inc
shl
shlb
mov
jae
lods
mov
push
outsb
into
or
mov
push
cli
jge
mov
pop
call
fcoms
aaa
scas
int
push
add
add
dec
stc
adc
jns
loop
mov
xchg
jle
popa
daa
sbb
sbb
inc
repnz
gs
cwtl
cmp
push
gs
push
fsub
sbb
xchg
xlat
xor
insl
and
pop
loop
pop
test
sub
pop
mov
lea
cmpsb
cmp
dec
bound
test
xor
fldt
adc
xchg
cmp
push
es
mov
pop
loop
mov
imul
and
ja
dec
or
cmc
insl
lcall
push
mov
lret
push
xor
push
sub
dec
sub
and
xchg
add
cmc
movsb
sbb
push
cld
aas
shrb
jno
pop
mov
in
push
jae
shrl
outsl
sub
inc
cmp
inc
inc
push
pop
or
outsb
aad
mulb
cmpsb
loopne
mov
jo
aaa
in
popa
insl
imul
xor
adc
cmp
xor
jbe
and
sub
inc
fisubl
movsl
movsb
repz
sub
mov
decl
aas
movsl
in
repz
inc
ja
push
sub
test
pop
pop
push
add
mulps
xchg
add
inc
iret
loopne
lods
pop
imul
mov
mov
and
ss
lods
test
in
adc
cwtl
adc
mov
sti
push
lods
push
jmp
inc
xor
mov
or
repnz
cmp
in
push
mov
out
or
out
mov
xor
ljmp
jecxz
aaa
push
into
and
jge
sbb
mov
dec
inc
jne
xor
lret
inc
push
das
dec
pop
pop
jb
mov
bound
sub
sbb
adc
lods
fnsave
cmp
mov
adc
xor
xchg
test
or
in
std
pop
add
inc
in
xchg
adc
or
int3
xchg
in
or
jg
sti
and
push
dec
inc
popa
or
rcrb
aaa
dec
gs
inc
lea
xor
sub
pop
movsl
sbb
ja
add
push
or
xchg
int
sbb
or
xchg
movsb
sbb
ror
mov
and
lret
jmp
fnop
pop
sub
fs
xchg
push
mov
hlt
sbb
dec
icebp
xlat
xchg
sar
add
int3
movsb
sbb
cmp
and
test
test
add
sub
cmp
pop
add
add
adc
xor
push
aam
clc
incb
dec
xchg
scas
ja
lcall
cmc
sti
and
ds
and
repz
mov
and
inc
loop
test
dec
adc
arpl
xorl
and
cli
dec
pop
mov
cltd
mov
xor
sub
idivb
sbb
push
xchg
clc
je
shl
gs
dec
pop
or
xor
add
lock
leave
cmp
pop
loope
loop
sbb
lahf
dec
and
gs
mov
insl
iret
movsl
mov
or
cmp
mov
mov
inc
xchg
inc
ret
hlt
shr
repnz
loop
test
sbb
ffree
ss
mov
mov
arpl
fstl
xchg
mov
push
in
push
loop
sub
loopne
push
notb
aaa
loopne
add
notb
nop
mov
out
or
xchg
sub
loope
xchg
jbe
call
ds
jo
ljmp
pop
push
jno
xchg
push
insl
push
and
mov
inc
sbb
imul
pop
xchg
hlt
stc
cltd
pop
inc
add
cwtl
inc
cmpb
lods
jnp
testb
jge
call
xor
inc
pop
lahf
fcomps
push
jg
jae
sbb
orl
xor
out
adcb
out
je
imul
xor
cmp
ficoms
jmp
adc
pop
dec
addl
dec
incb
je
scas
mov
jno
lods
sub
loopne
push
xchg
adc
add
dec
sahf
and
dec
push
jmp
gs
cmp
in
push
mov
movsb
inc
test
in
jae
cmp
pop
dec
jno
call
cmp
outsb
inc
jmp
mov
add
scas
jmp
insl
jns
jge
orl
sbb
and
popf
rcr
dec
test
push
sub
movsl
mov
jg
mov
push
aam
out
int3
js
pop
fcoms
mov
insl
stos
xchg
sub
pop
aas
pop
repnz
pop
mov
jae
std
fbstp
je
add
pop
jecxz
pop
inc
mov
pop
pop
es
add
repz
hlt
sub
dec
mov
dec
mov
fsubl
sbb
enter
push
loop
insl
and
mov
add
nop
push
cmp
gs
pusha
fisubl
add
mov
add
repnz
dec
adc
xchg
mov
int
in
and
push
push
aam
dec
jmp
lods
push
cmp
test
hlt
out
cli
sti
mov
sub
dec
ja
mov
or
adc
push
popf
out
hlt
sbb
outsb
ljmp
data16
mov
jb
mov
insl
popa
xor
push
outsl
in
into
adc
or
pop
lea
xchg
sbb
test
ffreep
aam
pop
cmp
inc
mov
cmc
sbb
sub
inc
loope
pusha
pop
push
mov
sub
cmp
fcomi
loopne
lcall
sbb
pushf
and
jns
adc
sbb
arpl
xchg
sbbb
rcll
push
loope
fcom
mov
xchg
loopne
push
xchg
or
add
pop
in
arpl
aaa
imul
sahf
and
dec
or
inc
inc
gs
gs
sbb
inc
mov
fld
add
and
sti
rcll
pop
adcb
dec
add
lea
mov
hlt
push
aaa
xor
arpl
fnstenv
and
inc
in
sbb
sbb
and
testl
pop
pop
cmp
dec
push
loop
in
mov
sub
push
sub
cmc
pop
xlat
push
bound
lods
add
xchg
or
push
pop
push
ja
sti
ror
inc
popa
inc
clc
cmp
pusha
mov
gs
sbb
hlt
sbb
in
out
in
stos
xchg
pop
shrl
jns
add
pop
mov
loopne
sub
stos
repnz
mov
cmp
insl
mov
into
bound
in
sbb
xchg
sarb
test
arpl
ljmp
mov
insb
add
cmc
ret
push
push
loopne
aam
sub
and
gs
fcomps
pop
push
in
js
inc
push
sub
cmp
aam
stc
push
xor
dec
inc
sub
mov
mov
imul
add
fwait
inc
add
and
movsl
mov
jns
mov
xchg
add
add
mulb
insl
push
repnz
shrb
xchg
jg
rorl
bound
add
rcrb
cmovl
cs
pop
pop
pop
enter
jmp
data16
xor
imul
pop
jno
cmc
lods
sbb
mov
fsubr
xor
or
cmp
push
add
pop
xor
mov
pop
push
add
test
imul
dec
imul
dec
insb
outsb
outsl
push
jb
imul
pop
popa
adc
pop
addr16
dec
sub
mov
stc
lods
lods
dec
and
mov
gs
ljmp
lahf
mov
fs
sub
push
jnp
loopne
or
or
jno
xor
xchg
inc
pop
cmp
mov
int3
jg
cltd
adc
in
inc
lcall
mov
popa
lea
pop
mov
outsl
jno
repz
test
xlat
insb
sub
outsl
xor
gs
imul
loop
mov
mov
mov
sti
xor
popa
aam
in
outsb
cmp
testb
pop
clc
pop
add
jbe
push
iret
mov
adc
cmp
lds
fisubl
cmp
insl
mov
or
gs
cmp
add
pushf
or
push
imul
fwait
adc
jp
jnp
and
inc
insl
add
xor
push
sbb
lock
aam
ss
gs
push
int
pusha
in
bound
out
fdiv
pop
mov
xor
adc
add
mov
insb
cli
sub
fsubrl
fmull
stc
adc
dec
pop
and
in
into
or
jmp
pop
xor
and
xor
std
jmp
daa
js
arpl
cmp
add
cmc
cwtl
inc
loope
jmp
xor
ljmp
js
or
insl
mov
je
dec
insl
test
pushf
jno
in
inc
jmp
and
push
stos
iret
pop
adc
repnz
outsb
xor
jecxz
out
xor
push
pop
sub
jae
push
inc
rorb
outsb
adc
push
xor
sbbl
into
into
fmuls
das
jnp
ret
add
add
mov
push
cltd
lret
movsl
ljmp
jge
push
loopne
in
pop
and
dec
xor
mov
les
mov
add
ror
popa
lea
test
adc
mov
push
adc
fs
in
dec
and
aaa
fdivrs
stos
inc
insb
test
xor
mov
daa
xor
xchg
adc
jo
sbb
enter
stc
xchg
sub
add
pop
cs
stc
inc
or
inc
or
sbb
or
scas
xchg
dec
lea
ficoms
out
out
das
lea
inc
cmpsb
sar
test
test
adcl
mov
lock
and
lods
mov
mov
jbe
cmpsl
pop
pop
cmc
dec
scas
mov
loopne
ret
lods
dec
clc
fisttpll
or
push
jne
repz
arpl
pop
sub
sub
or
imul
and
pop
out
fdivl
sbb
sbb
push
aaa
jno
jae
js
test
cwtl
in
mov
idivb
xchg
push
loop
ret
rcrb
mov
add
int
ss
push
loop
pop
jmp
rolb
jno
or
scas
mov
loope
mov
and
into
pop
lcall
imul
lret
add
inc
mov
mov
inc
int3
lods
dec
mov
add
or
ss
scas
test
sub
test
inc
sbb
ljmp
mov
add
inc
add
lods
popf
lock
lock
cltd
rcrb
dec
or
xor
pop
and
jl
outsl
xor
dec
roll
mov
xor
push
dec
scas
dec
das
xor
in
or
xor
in
in
es
movsl
xor
or
jmp
push
dec
xor
xchg
pop
ljmp
adc
adc
xor
mov
mov
inc
frstor
sub
and
je
popa
jns
in
ss
arpl
in
or
xorps
insb
stos
xchg
push
jge
dec
mov
add
lds
fisttpl
sub
push
add
add
and
hlt
push
add
ljmp
insb
dec
dec
movb
jno
sub
sbb
fildll
loopne
mov
or
cmpsb
sub
lds
xor
in
mov
xchg
pop
pop
xor
push
xchg
push
push
adc
add
leave
sbb
xchg
sub
aas
fdivs
ljmp
push
dec
ja
pop
inc
lds
and
mov
outsb
adc
sarb
mov
sub
xor
mov
dec
fnstsw
hlt
cmp
out
xchg
int
rorl
cmpsb
adc
sub
cmp
cmp
adc
outsl
lcall
cmp
push
add
inc
rol
mov
les
jbe
pop
out
loop
pop
cmc
fucomi
outsl
sbb
xchg
add
sub
xor
dec
mov
mov
mov
xor
testb
ljmp
out
psraw
ja
int
sbb
pop
jno
sbb
ja
cmp
daa
lods
xor
cmpsl
pop
lods
dec
and
and
jp
lock
mov
mov
cmpsl
or
mov
das
popa
adc
push
sub
dec
pop
cmp
push
mov
xor
cmpsb
xchg
jmp
inc
hlt
je
mov
pop
jno
and
sub
push
xor
xlat
mov
pop
xor
je
ror
dec
outsb
ret
pop
sub
inc
inc
leave
pop
iret
add
in
test
std
sbb
sbb
insl
push
movsl
add
push
jae
es
ja
ss
jp
mov
jmp
jno
iret
je
mov
inc
std
or
jo
rep
stc
mov
imul
jno
xchg
sbb
pop
xor
mov
arpl
sub
out
mov
cmc
adcl
cmc
mov
gs
jge
test
insl
jae
sub
popa
mov
lea
cmp
aam
pop
cmp
insl
arpl
jae
adc
push
js
test
stc
inc
dec
loopne
enter
or
push
ret
call
mov
ret
out
inc
cmp
push
dec
test
xor
mov
jae
pop
push
das
jno
mov
das
inc
pop
add
xor
or
nop
mov
xchg
cmpsb
jae
int3
add
cmpsl
pop
insl
sub
lea
xor
int3
jae
jo
test
xor
lahf
popf
add
popa
xchg
cltd
mov
pop
push
insb
cmp
or
inc
xlat
or
jae
imul
outsb
mov
daa
stos
and
fwait
mov
dec
gs
dec
push
push
push
outsb
cmp
outsl
xor
insl
subb
push
inc
jp
inc
hlt
sub
popa
pop
clc
pop
push
pop
or
fadds
mov
jmp
pop
jno
das
imul
jb
adc
pop
jmp
cmp
iret
lods
mull
repz
imul
cld
sub
pop
jbe
mov
aaa
dec
cmp
mov
sti
fldcw
push
fldl
inc
imul
cmp
cmp
push
call
mov
sub
lret
dec
test
push
or
xor
das
aam
xor
fs
push
mov
mov
gs
xchg
cmp
sbb
adcl
lcall
testb
insb
dec
jo
je
or
mov
data16
out
es
scas
sbb
hlt
sti
push
cmp
inc
sub
push
fisubrs
js
stc
push
cltd
jno
insb
hlt
xchg
mov
test
int
xor
lock
imull
mov
jle
fistpl
test
outsb
dec
scas
add
sub
sbb
push
mov
and
add
ficoms
clc
pop
loope
lret
xor
jl
push
sti
xor
in
insl
xor
xor
stos
mov
jmp
pop
inc
hlt
shl
jb
sub
sub
rorl
xchg
push
insb
lea
jbe
sub
pop
cmp
xor
test
sbb
or
sahf
setae
shll
sub
cld
push
shl
jl
decl
and
or
rcrb
test
arpl
ja
ss
xchg
imul
outsl
adc
sbb
mov
out
aad
and
mov
mov
insl
test
jno
push
dec
mov
xor
imul
loop
ja
movsb
out
inc
pusha
inc
pop
xchg
cltd
imul
pop
outsb
mov
dec
adcl
lcall
arpl
cmpsb
pop
xor
pop
cmp
subl
mov
inc
push
jae
sub
push
xor
out
sub
jle
outsb
pop
in
sarb
pop
or
pop
push
jns
iret
test
das
lock
mov
mov
push
ds
arpl
mov
ja
loop
andl
jle
jmp
push
mov
push
sub
sbb
xor
dec
stos
cwtl
aaa
repnz
dec
repz
xchg
mov
pop
pop
insl
test
or
outsb
cmpsb
lret
addr16
push
xor
adcl
fisubs
dec
mov
jp
lea
add
mov
mov
dec
stos
imul
pop
sarl
pusha
and
inc
sarb
add
or
adc
jns
push
gs
xor
outsl
push
js
lods
fiaddl
pop
sbb
lcall
xchg
xchg
push
imul
scas
ret
decl
stos
xor
cwtl
mov
shl
jns
icebp
cmp
inc
push
pop
xor
adc
popf
imull
loope
push
fsubl
add
cmp
pop
xor
dec
jnp
enter
mov
subb
loopne
loop
pop
sub
je
xchg
mov
shl
cld
pop
pop
repnz
sbb
popa
aam
jle
mov
fcom
data16
loop
inc
pop
add
ljmp
lock
jmpw
jmp
leave
xor
sub
sbb
std
jno
insb
push
mov
repz
fwait
or
imul
push
sub
push
jb
cmc
sbbl
jbe
notb
in
or
jo
jbe
lock
mov
out
mov
shrl
bnd
jecxz
shll
inc
repz
movsl
sub
adc
jb
insb
jg
sub
imul
ljmp
jno,pn
jns
push
cmp
mov
jno
add
and
in
ret
cmp
test
pop
mov
mov
jae
out
add
fsubrs
xchg
cmc
mov
pop
pop
inc
lods
imul
outsl
push
insl
dec
push
jns
outsl
dec
mov
inc
dec
outsl
inc
in
inc
mov
or
roll
outsl
add
cmp
imul
sbb
mov
mov
push
imul
sub
sarb
iret
in
ficompl
repnz
clc
outsl
repnz
out
jmp
cmp
aaa
cs
mov
sbb
shrl
lds
inc
adc
dec
test
pop
decb
mov
imul
sbb
popf
xlat
push
mov
jp
or
jo
cmp
and
mov
mov
fmul
xchg
jnp
dec
cmp
aas
mov
dec
loop
push
cs
xor
inc
ja
dec
mov
mov
push
lods
imul
jnp
add
iret
mov
inc
cmp
fiadds
push
lea
loop
pop
cmp
xor
testb
mov
inc
bnd
pop
insl
push
jmp
push
gs
jecxz
jp
lods
rol
or
mov
jbe
imul
cmp
xor
lods
mov
xor
mov
jg
dec
int
subb
call
bound
aam
xor
in
cmpsb
sub
jns
xor
insl
lods
pop
xor
dec
pop
jo
fs
fs
or
js
fcoml
and
mov
cmp
xor
out
sbb
test
insb
sub
pop
and
mov
bound
jmp
insb
cmpb
lods
popf
fs
imul
imul
ja
xor
dec
jo
jmp
insb
call
add
pop
in
cmp
pusha
imul
stos
push
dec
add
lahf
mov
cli
add
pop
dec
scas
fs
pop
xchg
xchg
cmp
outsl
in
das
insl
jbe
pop
push
xor
fsubrl
imul
jge
adc
test
add
or
icebp
insl
add
mov
jno
jo
lcall
outsb
jae
dec
das
test
dec
scas
popa
adc
cmpsl
gs
gs
stos
add
pop
icebp
dec
jae
xor
add
jl
dec
inc
push
es
sub
adc
fs
pop
mov
repz
sahf
push
sbb
ljmp
sbb
loope
ficoml
push
pusha
mov
inc
cmp
std
inc
add
adc
out
xor
shlb
cmp
aam
jecxz
addr16
js
int
jmp
push
xor
inc
mov
es
jno
sub
xchg
lods
inc
jmp
stc
bound
sub
jp
outsb
jl
jmp
mov
sub
xor
daa
into
aad
popa
decl
cmp
shll
cld
movsl
lock
pop
pop
mov
enter
fldl
addr16
pusha
stos
jecxz
test
mov
push
std
cld
ja
arpl
xchg
mov
sti
adc
ja
cmp
addr16
pminsw
inc
in
jo
pop
and
jle
lods
negl
pop
dec
gs
inc
js
mov
in
call
xor
push
sbb
cmpb
scas
inc
loop
xchg
lods
mov
mov
and
rcrb
mov
mov
mov
push
imul
dec
cmpsl
push
out
dec
leave
push
test
lock
outsb
outsl
es
xor
mov
xor
lock
divps
les
and
fmull
xor
xchg
les
inc
jle
loopne
stc
xor
mov
jl
push
mov
add
lea
std
leave
add
outsl
mov
lods
sub
jl
scas
sub
imul
xor
sbb
dec
xchg
std
in
lret
pop
in
pop
mov
loope
dec
adc
dec
ret
call
mov
adc
dec
insl
stc
das
stc
dec
mov
mov
jg
mov
imulb
mov
fnstsw
popa
popa
rcr
jmp
es
stos
lods
inc
sbb
in
cmp
push
lcall
in
rclb
ret
jae
outsl
je
fadds
jg
cwtl
inc
lahf
jmp
or
bound
cmp
sbb
imul
test
insb
in
das
outsb
xor
mov
pop
fisubrs
pop
and
in
dec
jb
divb
dec
xor
mov
push
test
shrb
lea
add
ljmp
icebp
mov
add
cs
in
aas
xchg
push
push
push
fs
insl
pusha
lock
inc
cld
stos
mov
gs
mov
insl
imul
incl
scas
movsl
or
testl
inc
outsl
aaa
cmc
dec
jb
insl
sbb
gs
je
imul
xor
mov
addb
xchg
sub
pop
mov
insb
scas
or
insb
dec
jle
cwtl
mov
mov
fildll
pop
jmp
aas
pop
pop
or
inc
dec
in
roll
bound
mov
or
pop
icebp
out
push
jae
cltd
pop
pushl
adc
mov
fdivrl
add
push
gs
cli
adc
pusha
jno
cmp
xor
sahf
popf
in
add
es
out
repnz
loop
insl
movsl
rorl
push
dec
fs
mov
dec
xor
xor
pop
lea
cmp
daa
js
and
dec
repnz
dec
push
fcomip
rcrb
mull
add
popf
inc
sbb
insb
es
push
pop
sub
mov
pop
mov
jge
popa
pushf
insb
lahf
fs
inc
in
in
and
pop
in
je
pop
or
shrl
mov
cmpsl
imul
in
inc
fs
push
loope
in
jno
mov
std
aaa
xor
lods
pop
inc
xchg
dec
sub
jnp
das
push
xchg
and
and
imul
and
jnp
roll
add
mov
add
sub
cli
ret
mov
mov
push
orb
sub
lods
filds
sub
int
xchg
pop
bound
in
lds
push
bound
push
les
pop
xchg
sub
or
sub
sub
mov
out
insb
pop
add
popf
aad
pop
fdivrs
out
call
xchg
lock
das
adcl
fdivs
fnsave
enter
insl
push
bound
mov
hlt
sub
cld
pop
xchg
fadds
lahf
pop
ss
mov
sbb
es
aam
adc
dec
popa
mov
mov
cs
imul
arpl
inc
xchg
cmp
movsl
jmp
and
faddl
adc
mov
shrd
ffree
movsb
cld
sub
movsb
data16
pop
mov
clc
addr16
pop
xlat
push
xor
aaa
add
outsb
pop
pop
lea
lods
fiadds
or
pusha
mov
mov
cmp
cmp
mov
lahf
or
sub
xchg
bound
jmp
jl
in
mulb
scas
mov
stc
pop
or
push
sbb
das
cltd
sub
popa
mov
inc
xchg
adcb
mov
fcomps
push
fstpl
out
arpl
into
sbb
shlb
lock
mov
ret
sbb
push
stos
mov
loopnew
push
xor
mov
jb
push
pop
call
in
sub
repz
test
inc
loope
mov
gs
fs
mov
mov
and
pop
xor
shlb
pop
pop
push
mov
dec
inc
jo
inc
xor
pushf
add
dec
ljmp
and
fnstcw
movsl
xor
mov
sbb
xor
inc
mov
popa
xchg
inc
sbb
mov
sub
out
add
lea
push
ss
cmp
orl
xchg
mov
sbb
fadd
popa
and
push
in
jb
inc
arpl
dec
adc
arpl
mov
sbb
mov
insl
adc
call
add
lds
js
in
int
jmp
popa
leave
push
test
ss
aam
shll
jae
bound
lods
xchg
mov
push
dec
push
jmp
adc
stc
cmp
cmc
insl
negl
je
lea
push
not
cmpsb
cs
sub
call
push
pop
xor
int3
rcrl
jg
push
andb
xchg
push
jno
adc
insb
pushf
out
sub
cmc
jns
rorl
sbbb
psllw
add
push
cmp
dec
mov
push
out
outsb
repnz
sbb
mov
jecxz
inc
fiadds
cmp
xor
inc
xchg
mov
mov
dec
adc
push
sarb
pop
insl
mov
push
gs
cmp
pop
insb
andb
cmc
xchg
push
and
outsl
push
adc
jne
add
test
push
xor
mov
adc
call
jl
je
arpl
jecxz
adc
mov
adc
imul
jle
pop
cwtl
popf
loop
popa
inc
pop
add
lea
cld
and
or
outsb
jle
pop
hlt
repz
add
dec
jns
fdiv
test
sub
mov
add
lcall
sub
aam
test
mov
nop
dec
sub
push
push
icebp
outsl
dec
lock
mov
out
jno
push
xor
pop
fcom
aam
mov
jns
mov
xchg
fcmovu
add
pop
cltd
push
mov
pop
xchg
enter
pop
mov
pop
jns
mov
inc
pop
jb
and
inc
popf
lcall
inc
inc
test
dec
jp
xor
push
pop
mov
icebp
fcomps
mov
jmp
nop
outsl
mov
xor
mov
pop
aas
mulb
xlat
mov
rcll
add
ds
push
mov
les
xor
movsl
popa
xchg
xor
inc
sbb
repnz
or
mov
xor
sub
lcall
mov
xor
sbb
in
xor
stc
dec
mov
pop
out
xor
push
imul
or
mov
pop
inc
adc
aam
sub
inc
mov
cs
cltd
adc
dec
sub
arpl
fs
inc
and
mov
xor
jge
je
cmp
push
or
push
mov
dec
mov
push
es
jb
jle
test
imul
cs
jno
fldcw
jle
jmp
sbb
push
sub
in
out
pop
xor
or
aas
sbb
cli
sar
addr16
loope
mov
aas
or
push
dec
gs
in
push
or
push
inc
adc
clc
ljmp
cltd
notl
push
fwait
xlat
and
push
xchg
dec
and
lcall
jae
jge
push
jg
pop
push
add
lea
stc
in
enter
adcl
hlt
test
jns
or
sbb
inc
and
jle
leave
sub
out
inc
aas
dec
adc
gs
sbb
mov
movsl
push
movsb
add
add
cmpsb
xor
cmp
bound
ljmp
mov
sbb
std
jl
jno
adc
or
push
mov
outsl
add
mov
push
dec
addr16
add
fdiv
lret
mov
jl
pop
in
xor
sub
add
sbb
aas
push
adc
mov
repnz
subb
push
jmp
jno
sti
lret
scas
pop
dec
jl
in
sub
aas
lods
add
xorb
cmp
leave
clc
pop
insb
sbb
clc
adc
add
mov
in
arpl
jno
out
push
and
mov
pop
mov
cmp
push
hlt
cmp
cmp
pushw
and
loopne
int3
or
pop
mov
je
adc
orb
sub
adc
jb
shlb
push
adc
ljmp
sbb
push
pop
pop
outsb
mov
push
fistl
sub
jecxz
clc
outsl
repnz
orb
adc
js
pop
cmp
inc
or
and
pop
shl
fisttps
jns
out
pop
and
push
aam
imulb
popa
push
inc
push
and
fs
aas
cli
shrl
mov
test
test
sbb
fisubrl
cmpsl
xor
aam
mov
icebp
fldenv
inc
pop
and
lea
out
fimuls
jge
inc
sub
sarb
xchg
add
movsb
push
pop
imul
sbbl
jno
repz
sub
pop
shl
ja
and
pop
test
call
jns
push
test
in
dec
fisttpll
jge
xlat
push
popf
mov
xor
inc
movsl
and
xor
push
jbe
cld
ror
mov
or
test
pop
xor
scas
mov
push
cmpsb
in
test
sub
and
repz
or
cltd
data16
and
sbb
xor
fwait
imul
popa
sub
test
sbb
xor
pop
push
mov
push
repnz
push
call
push
inc
cmp
or
push
pop
cmpl
push
call
fldt
jns
cmp
mov
dec
icebp
add
daa
jmp
sub
addr16
outsb
jo
sub
popa
imul
or
mov
sub
in
inc
enter
cmp
imul
lods
in
mov
push
int
orl
sub
xchg
inc
sbb
lcall
outsl
xchg
cmp
in
add
orb
add
jae
sub
mov
mov
repz
push
dec
mov
test
inc
push
pop
xor
add
ja
hlt
dec
jmp
dec
ret
fldenv
loopne
mov
inc
jns
pop
push
jbe
arpl
jo
inc
cli
imul
dec
std
jno
int3
add
jnp
fdivrs
jmp
mov
mov
insb
in
test
scas
outsl
xor
or
sbb
daa
xor
sti
mov
je
data16
mov
mov
sub
std
lock
ljmp
jb
mov
cmp
xchg
stc
xchg
adc
xor
push
jae
and
jl
cmp
mov
in
cs
dec
ds
dec
jmp
mov
add
dec
inc
lcall
cld
sub
cmp
mov
xor
fisubrl
inc
mov
repz
mov
bound
popf
lea
lods
push
or
dec
sti
sbb
and
push
pop
and
push
in
dec
loop
fldl
sub
pop
imul
dec
pop
fucomp
test
imul
mov
lea
dec
outsb
pop
jb
bound
ret
jle
xor
mov
fwait
mov
insb
mov
mov
push
or
mov
in
popa
les
fs
dec
das
icebp
ud1
adc
add
xor
push
inc
jle
xchg
repz
and
imul
cld
xchg
dec
mov
xchg
clc
addr16
loopne
fadd
mov
pop
mov
push
push
pop
test
sub
adc
aaa
hlt
cmc
xchg
pop
jno
pop
ljmp
adc
rolb
mov
movsl
in
and
sbb
outsl
test
shlb
js
rcrb
or
pop
out
rcrb
icebp
dec
sbb
mov
lret
rorl
sbb
dec
les
ret
xchg
hlt
pop
pop
or
pop
push
mov
mov
fnsave
jge
fnsave
pop
mov
jg
inc
fldcw
insl
add
hlt
cmp
xor
jbe
or
jmp
insb
or
test
mov
and
call
lock
repnz
sbb
out
jns
pop
rcrb
adc
gs
push
js
mov
pop
jge
mov
mov
in
jb
hlt
xchg
fidivrl
imul
mov
push
jmp
jae
das
je
jg
pop
jne
add
hlt
and
jmp
jg
adc
xor
insl
popa
mov
xor
out
xor
ljmp
ljmp
fs
add
aam
ja
push
jg
out
bound
pusha
inc
xor
sbb
loopne
pop
mov
dec
pop
pop
sub
loope
pusha
add
lods
icebp
sbb
jmp
push
lock
shlb
repz
int
loop
rorl
pop
pop
gs
xchg
pop
inc
jnp
push
jg
mov
jle
test
test
mov
popa
cmp
mov
pushf
cmp
imul
pop
xor
movsb
add
scas
and
insl
out
outsb
call
daa
fucomi
scas
es
pushf
fwait
xchg
repz
jg
lds
and
div
imul
imul
ljmp
push
mov
mov
es
daa
mov
iret
les
jl
fs
in
jmp
push
test
xchg
dec
and
sub
fs
gs
mov
cld
and
and
push
insb
movsb
jb
push
fdiv
lahf
das
jecxz
mov
dec
add
lds
sti
xchg
jl
test
mov
or
scas
mov
jno
mov
xchg
xchg
hlt
adc
fs
sbb
mov
movsb
adc
cmp
je
vphaddwd
rcrl
test
dec
in
repz
iret
ret
in
push
das
loopne
cs
dec
call
adc
insb
xor
dec
xor
ljmp
out
push
lea
test
jge
arpl
out
jmp
adc
jge
imul
test
insb
call
push
pop
mov
in
xlat
pop
imul
sarl
dec
jmp
clc
cmp
fxtract
push
out
imul
pop
jns
adc
jae
jle
sub
test
in
jl
dec
xor
pop
repnz
adc
jb
cmp
es
mov
int3
shrl
imulb
sub
sub
add
xor
xchg
xor
sbb
jb
sbb
hlt
adc
in
push
cltd
xor
pop
sbb
pop
inc
in
popa
mov
inc
in
imul
loope
call
insb
dec
in
and
movsl
mov
xor
lock
mov
bound
test
data16
testl
insl
add
and
dec
xor
sub
push
push
add
jb
jns
scas
je
dec
das
jle
repz
xor
xchg
mov
aaa
movsl
ret
xor
cmc
es
std
xchg
dec
pop
gs
arpl
repz
insb
mov
jno
push
cmp
outsl
das
icebp
jbe
ss
add
lcall
xchg
ljmp
insl
test
nop
add
pop
jnp
jl
xor
mov
movsl
mov
jns
push
orl
pop
jp
mov
outsl
lea
xchg
stos
movsl
sbb
stos
pop
andl
adc
dec
mov
xchg
lock
and
mov
cmp
imul
pop
add
mov
sub
and
xorl
pop
xor
add
and
sbb
adc
or
mov
dec
fadds
bound
popa
cmpsb
mov
jae
mov
std
add
dec
add
std
pop
push
mov
out
into
lods
fprem
das
pop
push
push
std
shrb
adc
jno
or
gs
or
inc
jge
dec
cli
xor
pushf
jle
lds
fdivs
lret
and
mov
das
outsl
push
cs
repz
rorl
add
and
xchg
nop
add
push
cmp
add
sbb
arpl
jp
mov
cmp
or
jnp
pop
adc
pop
in
pop
repz
jno
lods
mov
jmp
ss
mov
and
jno
xchg
je
cmc
add
out
jecxz
imul
ret
imul
dec
mov
push
addr16
push
and
imul
les
ja
negl
xor
cmp
mov
in
aam
imull
dec
aad
cmp
jmp
jb
cmp
pop
in
stc
shl
insb
test
fs
push
aas
cmp
cs
xchg
imul
and
lock
inc
pop
popf
inc
fidivs
cmp
negb
mov
xchg
dec
cli
xchg
outsl
popa
popf
lea
pop
in
push
push
cltd
pop
mov
movsb
loope
daa
sbb
inc
xor
aam
in
cmp
push
push
cmp
inc
mov
or
jb
imul
call
fcompl
dec
xchg
sbb
cmp
jmp
and
mov
jmp
dec
push
pop
and
pusha
dec
pop
xor
inc
pop
cmp
pop
out
mov
jb
in
sub
dec
push
push
notl
imul
out
rorl
repnz
sbb
jmp
data16
test
jae
gs
in
cmc
sbb
inc
mov
jg
out
sub
mov
vmovddup
in
pop
lods
push
pop
mov
adc
and
sbb
dec
inc
repz
in
daa
xor
cmp
and
leave
fs
adc
inc
mov
push
stc
orl
jge
jmp
aad
jnp
inc
adc
dec
pop
in
inc
xor
into
pop
push
cmc
bound
sarl
mov
pusha
pop
jo
jno
addr16
push
pop
mov
cmp
mov
mov
mov
ja
lds
rclb
sbb
orl
jb
push
xor
jnp
jne
clc
movsb
pop
mov
lods
loope
fwait
hlt
cmp
jo
xor
clc
pop
ljmp
pop
cmp
dec
push
jge
pop
aad
rorb
or
aad
pusha
or
mov
stc
push
push
ficomps
dec
insl
push
aad
xchg
push
popa
and
pop
add
fs
xchg
rorb
jmp
jmp
adc
scas
inc
loopne
arpl
dec
rcrl
push
add
and
xorl
add
and
sub
test
movl
roll
aam
shlb
imul
in
in
sub
mov
imul
mov
fbstp
std
sub
imul
lahf
push
in
sbb
sub
pop
lea
rcrb
sub
jno
xchg
leave
sti
hlt
scas
data16
xor
je
insl
imul
lret
cld
push
and
jmp
mov
popa
mov
push
mov
popf
mov
mov
test
inc
adc
xor
jl
rolb
pop
pop
xchg
dec
cmp
add
mov
mov
lea
jle,pn
movsl
pop
ljmp
sbb
cmp
xchg
cmp
fbstp
std
ja
mov
push
dec
mov
popa
push
xchg
inc
pop
jno
add
out
pop
call
jg
adc
clc
sbb
imul
and
lea
xchg
hlt
mov
les
ret
mov
frstor
push
pop
push
xor
jnp
bnd
push
mov
or
movsl
adc
je,pt
mov
lock
scas
xchg
icebp
lcall
cmp
leave
sbb
and
and
add
pop
movsb
jb
data16
jecxz
std
mov
iret
insb
mov
sbb
jp
xor
dec
cmc
ret
lea
add
in
push
jae
rcr
sbb
xor
iret
popa
inc
arpl
inc
jg
xor
je
int
fsts
imul
fstpl
insb
fdivr
mov
pop
cld
inc
shl
mov
mov
jb
mov
sub
xor
in
add
inc
and
hlt
xor
mov
push
mov
insl
push
sbb
push
into
ljmp
addl
mov
popa
jnp
push
das
cmp
mov
push
jno
xor
push
and
orl
xchg
add
test
push
xchg
add
pop
xchg
mov
xor
or
mov
or
mov
outsl
and
xchg
das
fbstp
add
clc
imul
adc
push
jmp
not
pusha
ja
dec
jge
jl
data16
pop
mov
push
add
jle
incl
jns
xor
mov
ljmp
stos
jae
pop
xor
mov
push
jp
pop
sar
inc
pop
inc
into
popa
popf
call
jbe
lahf
pop
rorl
lods
xor
int3
cs
push
xchg
std
iret
jne
ljmp
fcoms
insb
mov
push
push
lret
pop
mov
lods
fistpll
xchg
hlt
xchg
jl
test
jbe
aad
cmpsb
scas
xor
jno
xchg
cmp
insb
add
xchg
int
mov
pop
push
jmp
push
sbb
daa
jmp
jns
cmp
cmp
dec
sub
mov
push
inc
dec
inc
stc
cltd
push
dec
outsl
pop
mov
ret
lret
add
jns
cwtl
inc
or
lods
jbe
jae
xor
pushf
es
cmp
jae
call
jns
push
ja
cmovo
add
popf
outsl
push
mov
fs
inc
mov
outsl
jge
out
pushf
add
je
inc
dec
arpl
clc
adc
add
jbe
movsb
icebp
jg
dec
imul
mov
mov
clc
shrb
sub
sbb
outsl
divb
dec
and
mov
jp
mov
enter
jecxz
cli
or
out
mov
popf
outsb
or
xor
ret
stos
in
sbb
jb
xchg
jmp
inc
pop
das
xchg
nop
jmp
mov
fbld
mov
sbb
mov
jb
sub
sub
and
push
xor
loope
push
push
or
sub
cmp
push
cmp
fnstsw
mov
shll
ds
in
imul
dec
cmc
lods
ljmp
sub
repz
sub
sbb
arpl
jp
inc
insl
jb
aam
gs
pop
push
push
repz
popa
imul
sub
jae
mov
and
sub
pop
in
shrl
push
sub
add
sub
sbb
push
mov
push
pop
imul
rcr
dec
pop
or
shrl
and
inc
lock
mov
sbb
pop
jno
lea
xchg
inc
bound
push
dec
jbe
lock
or
int3
mov
jae
lods
xor
add
enter
pop
dec
mov
mov
jg
and
out
inc
testl
inc
dec
mov
sub
mov
int
test
cmp
add
les
outsb
cmp
mov
pop
add
cld
call
inc
cli
jecxz
lahf
jecxz
out
lahf
in
mov
inc
stos
pop
insl
mov
loope
insb
and
out
int
sarl
or
ljmp
inc
ret
in
and
dec
test
and
pop
in
push
orl
mov
lcall
sub
test
insb
or
jecxz
cli
outsb
xchg
add
adc
mov
xor
scas
outsl
push
inc
inc
xor
addr16
out
or
inc
jb
jbe
insb
or
jb
sub
sub
push
adc
and
mov
mov
bound
sub
mov
leave
in
push
jo
lea
adc
jns
mov
jmp
jge
mov
add
rorl
lds
nop
xchg
lret
popf
ja
inc
jmp
dec
out
and
jmp
cmp
scas
icebp
iret
push
push
jb
and
mov
pop
pop
jo
mov
push
popa
pop
xor
sbb
mov
ret
je
movsl
cmp
jbe
popa
push
lcall
sub
and
xchg
xor
gs
jecxz,pn
mov
push
insl
jle
ljmp
andl
add
lock
sub
jno
lea
cmp
imul
mov
icebp
and
fs
push
lret
mov
imul
sub
andl
jge
mov
cltd
fsubrs
inc
sub
in
push
fmull
mov
xchg
stc
jo
sub
mov
movsb
call
jp
sbb
adc
sub
cmpsl
cmp
jmp
out
ds
jg
mov
movsb
jge
mov
imul
xchg
fcoms
xlat
pop
jb
cmp
lock
push
pop
enter
mov
xor
leave
adc
mov
sub
push
aad
xchg
jmp
cld
adc
adc
es
loope
cmp
lds
lods
mov
and
data16
sbb
outsb
xchg
inc
loopne
dec
jmp
or
scas
and
mov
push
out
int
cli
repnz
stc
xchg
xchg
xor
movsl
sbbl
and
xor
sbb
dec
cmp
dec
add
repz
imul
sbb
xor
cs
sbb
adc
fisubrs
sub
arpl
fincstp
xchg
cmp
insb
mov
into
aaa
test
loope
add
adc
pop
pop
dec
and
or
sub
cmpsb
dec
test
inc
inc
in
lcall
sub
shlb
or
fs
int
lock
shlb
inc
aad
in
dec
test
mov
adc
shrl
imul
movsb
and
jnp
and
in
loop
xchg
push
fs
adc
mov
popf
cmp
sbbl
pop
mov
dec
insl
push
dec
add
mov
push
inc
push
inc
add
imul
lahf
push
push
jae
pop
rcrl
pop
outsb
aaa
pop
iret
shl
lea
xor
pusha
jnp
sub
push
outsl
xchg
lret
cwtl
rorb
pop
fistl
push
pop
xor
or
out
xor
lock
popf
add
or
jno
adc
xchg
addr16
jmp
sbb
mov
fldcw
les
insl
stc
jecxz
in
cwtl
ja
mov
je
push
mov
jle
incb
or
inc
fs
arpl
popf
insl
dec
scas
std
in
imul
adc
movsb
lahf
xchg
mov
lea
mov
cmp
sbb
mov
sbb
imul
add
test
xchg
add
in
xor
divb
call
dec
dec
mov
pop
mov
dec
push
sub
xor
pop
xor
pop
shlb
rorl
and
pop
in
stos
sbb
and
cmp
fmull
xchg
jo
cs
movsb
call
mov
and
xor
inc
in
arpl
dec
iret
sbb
nopl
sti
and
inc
and
dec
sbb
sub
dec
shlb
add
shl
xor
add
add
rcr
mov
les
sti
pop
mov
loope
cmp
xchg
lods
cmpsl
jmp
pop
repz
mov
lds
fistps
add
cs
xor
pop
xchg
lods
jb
xchg
push
jae
jno
out
xchg
es
pushaw
mov
mov
iret
jo
ror
repz
xlat
mov
mov
dec
push
push
xor
scas
jno
adc
repz
in
movsb
dec
gs
push
popf
loop
push
add
ja
mov
push
mov
fwait
xchg
stos
repnz
dec
sbb
mov
imul
sbb
cmpsl
cld
add
sub
arpl
repnz
mov
jl
and
push
lock
mov
cli
insl
push
pop
xchg
pop
xor
in
insl
push
in
xchg
arpl
fs
arpl
aam
mov
mov
jmp
inc
push
or
sub
xor
pop
dec
mov
push
out
daa
mov
lret
ja
je
add
popa
jb
shrb
bound
and
jo
jnp
jge
jg
subl
arpl
sbb
jae
je
add
sbb
adc
sub
jns
lods
shll
xor
fcmovnb
add
sti
sub
jns
jge
call
sti
shr
movsl
jg
adc
cmp
imul
jno
outsb
xor
and
scas
pop
sbb
icebp
xlat
imul
cmp
sar
adc
cmp
xchg
fs
int3
push
pop
jmp
jge
dec
cwtl
xchg
push
pop
jno
leave
imul
pop
ret
mov
mov
pop
test
or
rcll
mov
lods
stos
and
test
and
popa
xor
mov
xchg
jmp
add
pop
jge
dec
adc
in
stos
adc
hlt
xchg
lea
popa
xchg
fdivrs
mov
push
mov
dec
jae
repnz
xor
adc
lods
add
push
pusha
gs
data16
sub
mov
mov
pop
js
ja
lret
in
sub
lea
pop
aaa
jmp
imul
dec
test
lock
dec
test
add
jns
lea
jns
movsl
xchg
mov
fistpl
ja
pop
cmpsb
jg
jno
lods
inc
pop
rolb
lea
lock
sub
pop
xor
sbb
mov
arpl
and
push
sbb
outsb
and
pop
pop
push
or
xor
out
xor
mov
call
mov
jae
pop
stc
push
cmp
in
imulb
ds
sub
lock
scas
mov
adc
subb
arpl
aam
fs
cmp
pushw
push
test
scas
ret
or
dec
xchg
add
cmp
repz
out
pop
push
in
and
popf
js
rcrb
inc
cmpsb
mov
shll
shr
fldenv
push
call
mov
repz
push
test
lock
sbb
xchg
cld
lock
add
int
insb
movsl
sub
addr16
icebp
pop
sarl
sbb
dec
lods
insb
inc
in
push
xor
sub
in
push
popa
lret
rclb
hlt
inc
push
leave
and
add
or
and
or
lcall
insb
and
into
adc
mov
sub
sub
push
inc
push
and
sub
mov
stos
dec
push
jge
push
stos
inc
jo
xchg
hlt
shrb
pop
mov
mov
push
add
pop
das
or
push
aaa
ds
pop
in
sub
bound
ret
pop
pop
sub
sbb
repz
int
fcomps
bound
int3
or
pop
mov
stc
mov
out
hlt
imul
ljmp
rol
insl
fsubrs
aam
pop
mov
gs
roll
clc
sub
mulb
and
cmp
cmp
loopne
cmp
dec
das
cmp
test
push
sahf
mov
movsl
scas
jnp
lods
pop
ret
sub
and
imul
add
and
enter
jnp
mov
out
xchg
xchg
jb
jl
movsb
dec
movsl
inc
add
sbb
outsb
gs
stos
adc
or
pop
outsl
or
mov
notl
ret
adc
jo
jmp
fcmove
xchg
xor
or
or
sbb
clc
xchg
cli
gs
movsb
popa
ljmp
data16
loope
in
sub
mov
inc
xor
sbb
mov
pop
out
bound
gs
fdivs
pop
mov
ja
push
js
jns
ret
sbb
in
insl
icebp
adc
mov
pop
jge
mov
mov
push
cmpl
stc
jno
int3
jbe
or
data16
and
cs
pop
aaa
cmp
daa
cmpsl
pop
push
andl
les
xchg
loopne
ror
pop
dec
or
dec
loopne
jnp
push
mov
xor
test
mov
jae
inc
sub
mov
or
cwtl
mov
cmp
add
cwtl
xchg
fbld
int3
mov
dec
pushf
xchg
xor
pop
or
or
fs
push
inc
mov
push
cmp
ret
push
mov
push
sbb
cltd
jle
std
and
sub
cli
dec
cli
push
daa
push
test
inc
or
dec
inc
call
lea
cmp
insb
mov
pushf
xchg
outsl
xchg
dec
push
cs
pop
mov
imul
push
pop
aad
jl
bound
sub
mov
jge
jecxz
inc
stc
mov
mov
sarl
dec
shl
pop
outsl
cmp
mov
add
push
test
jo
fdivrs
insl
insl
xchg
xchg
cmp
push
lods
mov
daa
pushf
lahf
daa
dec
sub
xchg
rcll
push
stos
das
aam
cmp
dec
inc
push
jae
and
dec
mov
inc
dec
mov
mov
jp
int
fistl
insl
or
outsl
dec
cmp
jle
data16
pop
aam
jb
imul
fisttpll
das
jno
test
jge
push
fs
push
or
das
in
int
jle
add
icebp
add
sub
lods
test
idiv
push
sbb
mov
push
sbb
cld
xor
das
and
pop
mov
sahf
mov
and
cmp
insl
pop
push
fldt
mov
push
jbe
daa
popa
in
pop
jno
pop
ja
inc
addr16
fwait
or
jno
lea
inc
mov
cwtl
mov
mov
dec
pop
rcll
dec
push
jl
popa
pop
sbb
fs
push
inc
adc
movsl
jbe
mov
rolb
dec
in
add
jo
xor
cmp
jns
daa
call
and
in
add
cmp
push
sbb
movsb
subl
xchg
lret
es
in
mov
std
jbe
pop
pop
add
dec
push
faddl
push
add
jo
push
pop
push
fcmovnu
jmp
popa
int
cmp
cmc
call
in
and
insb
pop
xchg
mov
cli
xchg
and
sub
fs
lock
add
aas
push
add
mov
push
xor
push
out
mov
sbb
inc
jge
push
lods
lock
int
lea
dec
jmp
loopne
mov
mov
mov
and
shl
sbb
fdiv
or
fld
mov
xor
push
and
sbb
leave
in
outsl
and
das
dec
xor
mov
mov
sub
enter
fwait
dec
out
sbb
cmc
or
pop
fcom
fs
mov
mov
inc
scas
je
and
stos
in
pop
jb
adc
jno
and
les
lock
daa
sub
add
outsl
cs
xchg
jae
stc
push
imulb
push
push
pop
jle
iret
imul
lcall
inc
mov
inc
aam
loope
add
mov
push
loope
ret
pop
mov
hlt
inc
or
inc
mov
xor
sbb
add
inc
cmpsl
stc
sub
pop
and
lds
imul
cmp
dec
push
push
cmp
inc
mov
add
lods
or
je
test
cmc
movsb
popa
pushf
mov
jae
insl
dec
dec
cmpsl
outsb
insl
fwait
je
addr16
and
xlat
add
mov
mov
sbb
in
and
push
shll
ret
cmpl
inc
pop
aad
lea
pop
mov
and
and
je
outsb
sub
mov
int
mov
mov
sbb
inc
xchg
lahf
pop
mov
dec
push
pop
lea
pop
outsb
jno
push
add
jecxz
dec
sub
fidivs
inc
call
popa
jb
cmp
push
daa
std
pop
dec
shl
loopne
addr16
popa
pop
mov
sub
gs
sub
push
push
mov
xor
mov
movsl
sub
xchg
aad
mov
pop
mov
xor
call
testl
lea
ljmp
sbb
jbe
cmp
pop
lret
data16
pop
jbe
sbb
xchg
je
push
cmp
xor
mov
popa
insl
lea
lock
repnz
sub
add
sub
aaa
jmp
aam
and
movsl
sub
pop
and
mov
popa
rclb
sub
adc
fistpl
cwtl
sbb
ja
dec
sub
pop
jae
push
push
int3
mov
out
push
aaa
mov
je
and
cs
xor
mov
negl
sub
pop
xchg
fs
pop
adcb
jge
pop
adc
lahf
push
div
cmp
iret
rol
out
lahf
jns
jmp
mov
xor
insb
incb
xor
cmpsb
ljmp
cmp
add
mov
insl
cmp
aaa
mov
xor
jbe
lahf
dec
sbb
dec
push
add
and
bound
and
mov
cmp
xor
xor
mov
xor
jbe
dec
pop
imul
subl
fdiv
sub
jae
xchg
out
in
push
cmp
add
mov
push
push
push
scas
out
inc
jns
dec
or
addr16
inc
jo
adc
out
cld
sub
or
push
sub
jo
mov
cwtl
xor
mov
xor
sbb
add
add
insb
pop
push
xor
sbb
pop
dec
ss
and
dec
add
mov
gs
iret
jl
insb
cwtl
addr16
les
pop
cwtl
pop
mov
mov
push
lret
dec
outsl
sbb
and
dec
les
bound
ss
sub
jo
lock
sub
push
outsl
dec
mov
pusha
icebp
in
leave
pop
push
fs
shl
sbb
xchg
cs
nop
nop
inc
rcl
sub
ds
mov
pcmpgtw
fldenv
cmp
xchg
incb
stos
inc
pop
xchg
mov
pop
xchg
lock
repz
pop
in
imul
arpl
mov
mov
or
xor
mov
cmp
gs
xor
lods
in
insl
repz
or
dec
mov
sub
adc
dec
dec
sub
arpl
pop
mov
fcomip
inc
imul
negb
int
dec
mov
les
push
nop
lea
les
insb
sub
dec
jmp
inc
xor
popa
aam
or
jbe
or
pop
pop
push
mov
cmp
pop
or
pop
loopne
pop
xor
jno
int
or
push
ss
sbb
gs
int3
pop
pop
xchg
and
arpl
movb
movsl
or
cmp
mov
push
sub
pop
jmp
test
bound
xchg
inc
xor
dec
or
in
xor
stos
jge
aam
dec
insl
inc
out
jno
lcall
push
and
repz
fs
push
push
or
mov
es
pop
ss
sub
lods
add
add
mov
mov
push
xchg
hlt
jns
ljmp
std
scas
push
push
mov
rcrl
push
mov
sbb
aaa
pushf
orb
outsb
pop
mov
mov
xchg
mov
jo
mov
jl
mov
mov
gs
js
fists
ret
jecxz
call
jnp
xor
cmp
hlt
in
or
sbb
les
ja
xor
xor
pop
dec
jmp
lea
adc
not
jmp
inc
ret
in
ss
notl
pusha
inc
mov
cmpsb
cmp
call
popf
push
inc
mov
in
or
movsb
jge
adc
dec
and
in
jno
icebp
inc
mov
xchg
mull
or
sub
jns
dec
insb
je
xchg
mov
cmp
daa
sti
or
push
sti
dec
lock
ja
sub
jle
sbb
dec
nop
push
xchg
xchg
add
sub
dec
insl
mov
sbb
sub
rcrl
imul
xchg
jnp
sti
enter
inc
mov
cwtl
cmp
dec
rclb
inc
ret
in
jb
push
jmp
jns
pop
mov
push
jo
pop
dec
clc
stos
mov
pop
and
lea
outsl
mov
mov
jae
jo
dec
mov
add
out
call
jo
es
push
push
out
sub
cmp
stc
add
loop
imul
inc
xchg
mov
cld
js
movsb
sbb
push
in
std
sub
cmp
add
and
arpl
repnz
xor
je
jmp
cld
mov
gs
sahf
int3
mov
iret
xorb
movsl
insl
data16
xchg
popa
mov
push
pop
pop
inc
inc
por
sub
jno
xchg
popa
mov
cmp
arpl
aas
imul
xchg
mov
fadds
lock
stos
in
jo
scas
insb
inc
data16
pop
jb
dec
push
mov
ljmp
popa
and
repz
insl
sbb
js
sub
je
sub
jno
out
testl
aaa
insb
iret
jae
jb
stc
adc
hlt
ljmp
cmp
decb
ret
jg
je
scas
rcpps
cwtl
pop
jge
xchg
les
sbb
mov
mov
or
in
push
jge
inc
xchg
mov
dec
test
jae
cmp
jle
jns
or
outsb
test
xor
cmp
outsb
or
mov
das
cmp
test
sbb
push
incl
lea
test
aad
imul
jl
cmp
pusha
xor
and
inc
mov
popa
fs
lods
imul
in
fnstsw
adc
loope
rcrl
and
mov
mov
xchg
xor
pop
pusha
jo
mov
pop
add
ljmp
fistpll
push
cmc
mov
cmc
adc
hlt
icebp
push
xchg
sbb
xor
pop
jae
mov
clc
in
and
lret
in
push
pop
lods
out
mov
stc
xchg
xchg
andl
insl
cmpl
loopne
imul
out
pop
xor
call
and
ret
loope
cld
loope
pop
bnd
pushf
dec
xchg
mov
ja
inc
jnp
scas
insb
jmp
and
push
and
dec
incb
aaa
mov
push
addr16
jno
mov
aam
jo
addr16
push
rorb
adc
std
mov
cmp
shlb
repz
sub
shrl
adc
xor
dec
imul
mov
imul
mov
dec
add
leave
mov
loop
cmpsl
add
cli
adc
or
test
ja
push
int3
jl
inc
ljmp
js
ss
add
inc
aam
adc
dec
rorl
mov
addr16
pop
imul
pop
pop
jb
push
addr16
xor
insl
push
fs
sub
mov
mov
push
shll
gs
jo
sub
and
pop
je
arpl
pop
pop
clc
and
jo
push
mov
inc
jb
sub
lock
lea
jmp
imul
jbe
lods
jnp
aam
xor
push
enter
push
icebp
rorl
lret
xor
movsl
push
push
sbb
inc
in
xor
or
push
pop
mov
push
push
xor
push
pop
push
orb
ja
xor
push
jns
stos
sbb
xchg
or
sbb
pop
mov
bound
mov
adc
and
adc
pop
lahf
aas
imul
xor
mov
aad
push
ljmp
mov
pop
xchg
icebp
jl
jecxz
sbb
out
dec
mov
mov
sub
inc
adc
bound
es
pop
xchg
sub
fbstp
call
or
pop
cwtl
sbb
js
cs
push
loopne
push
test
fildl
add
stc
shrl
push
push
cli
and
mov
das
cmpsb
jge
push
daa
push
xor
insl
pop
push
dec
pushf
jbe
mov
mov
cmp
es
nop
jge
dec
push
pop
xlat
stos
lcall
pop
xor
rolb
cmc
pop
and
imul
dec
pop
fs
arpl
repnz
es
jg
sub
mov
mov
sti
pop
cmp
pop
mov
int
sbb
push
xrelease
xor
adc
pushw
repnz
inc
gs
cli
lods
push
jne
add
ljmp
xor
pop
hlt
jl
test
imul
imul
push
jns
push
jmp
jo
hlt
cmp
mov
dec
sti
in
ficoms
dec
jp
ja
cmp
push
push
insb
lea
notb
outsb
lahf
ljmp
lods
repnz
lahf
push
pop
and
sub
pop
jp
sub
mov
rcrb
cmp
adc
xor
sbb
jbe
daa
int3
pop
mov
xchg
pop
lods
adc
popa
xor
mov
push
and
xor
pop
js
inc
mov
orb
es
jl
push
call
testl
pop
cmp
loope
or
push
aas
jae
scas
or
into
mov
popa
sbb
xchg
push
gs
mov
sub
push
xor
cmp
lock
jg
jb
jno
insl
push
xlat
and
notb
jmp
lods
or
mov
jae
divb
fsts
push
insl
ljmp
fdivl
cmp
les
dec
popa
push
mov
xchg
jecxz
xchg
push
je
inc
mov
loope
xchg
pop
mov
insl
aam
loopne,pn
lods
sub
mov
subl
call
cmpsl
or
sahf
lock
jno
das
lret
lods
fldenv
out
clc
sub
popa
pop
insl
in
and
imul
mov
icebp
mov
shll
inc
mov
clc
fidivs
pop
cwtl
mov
lock
repz
push
pop
hlt
imull
sbb
cld
test
push
aam
push
adc
shrb
xchg
add
push
roll
jg
inc
lcall
lcall
push
pop
dec
pop
or
push
divl
push
lea
cs
mov
jb
jg
jae
hlt
push
out
outsb
ljmp
lds
subl
xchg
inc
xchg
je
addr16
pop
dec
call
mov
imul
xchg
adc
imul
and
fucomp
fsubr
xchg
lock
mov
pop
or
hlt
ss
ja
jb
jae
add
adc
jmp
pop
mov
stc
outsl
xor
mov
sub
outsb
dec
popa
out
mov
xor
fsubrl
pop
cmp
sub
xlat
gs
inc
pop
pop
test
std
test
jnp
mov
jno
mov
xor
lods
das
inc
insb
xlat
stc
pop
ds
lea
shll
pop
push
mov
dec
jge
cmpsl
lock
shrl
jmp
repz
or
inc
adc
jl
cmp
daa
and
nop
scas
adc
mov
arpl
icebp
mov
add
jb
stos
push
cmp
jno
fcomip
and
adc
mov
xor
xchg
cmp
pop
cltd
das
sbb
imulb
fimull
gs
cmc
xor
cmp
imul
cmp
dec
icebp
lock
cmp
shl
gs
cmp
out
out
xor
cmp
insl
outsb
in
ljmp
sub
in
push
in
loope
das
and
rol
das
and
cmp
sahf
popa
pop
mov
cmp
jecxz
xor
push
inc
bound
insb
and
sub
outsl
mov
add
mov
inc
add
ljmp
jmp
ljmp
xor
fwait
lahf
mov
push
lret
gs
in
fs
aaa
div
das
xchg
gs
xor
imul
ss
outsl
xchg
jnp
adc
jno
mov
test
mov
insl
outsb
inc
fldenv
arpl
cmp
je
js
push
xchg
mov
xchg
mov
mov
sbb
sub
jns
fisttps
and
xlat
jne
cmp
and
xchg
xchg
sub
sbb
hlt
adc
loopne
and
arpl
cmp
in
cltd
leave
fcomps
push
aas
sub
inc
sbb
aaa
scas
jno
jb
add
jbe
out
shlb
imul
add
mov
sbb
mov
sbb
add
pop
div
je
lock
aam
dec
xor
ja
cmp
dec
and
pusha
xor
aad
cmp
jge
out
pushf
dec
in
mov
jno
and
imul
sahf
ret
xchg
fwait
dec
lea
js
and
ljmp
test
fistl
popa
sti
addr16
push
pop
iret
into
es
mov
inc
dec
sbbl
hlt
cmp
push
and
push
dec
scas
sbb
jbe
and
je
das
xor
mov
push
push
dec
xor
cmp
push
ret
ss
pop
in
push
das
test
mov
arpl
jb
inc
ret
sub
jbe
lahf
push
pop
push
cmp
ljmp
cmpsl
test
xor
and
jae
std
and
hlt
das
sbb
jno
xor
dec
jg
je
fcomip
xor
push
pop
push
push
jmp
movsb
cld
imul
mov
loopne
jg
jno
mov
mov
xor
scas
outsl
sbb
ret
dec
aam
jno
das
int
repz
xchg
test
jmp
jmp
cmp
and
outsl
dec
push
pop
pop
push
data16
jb
dec
jno
mov
ds
sbbb
lods
insb
jb
dec
mov
mov
mov
aam
insb
scas
or
and
lea
repz
int3
add
mov
sub
clc
push
jge
jne
dec
lea
jg
dec
pop
xor
mov
inc
or
test
bound
imul
icebp
push
lock
xor
and
orl
jmp
bound
jge
pop
xor
cmp
lds
push
mov
inc
inc
lods
mov
lahf
adc
and
sub
and
daa
addr16
jno
adcb
inc
sbb
sub
sub
pop
daa
and
iret
test
out
scas
inc
add
add
adc
cmp
jge
jo
jg
xchg
aas
lahf
cmpsl
xor
cmpsb
sbb
inc
in
pushf
pop
in
adc
aad
jle
pop
sbb
xlat
jg
repz
sub
hlt
imul
into
xor
jo
ljmp
pop
lods
addr16
popa
jmp
test
push
scas
add
cli
sbb
das
jo
aam
dec
stc
cmp
push
mov
popf
fwait
cmp
movsl
stc
add
and
ret
pop
scas
gs
ret
cmp
in
jge
ret
mov
push
ficompl
and
lea
repz
lock
dec
jmp
add
adc
xor
mov
push
cmc
mov
stos
xchg
int
daa
xor
mov
shll
imulb
ret
test
mov
ljmp
jge
push
lea
shlb
jle
jl
push
or
pop
fildll
and
jbe
xor
pop
lock
das
xor
jle
sbb
test
repz
cmp
jbe
inc
outsb
add
icebp
mov
jo
jg
lds
cmc
jae
xorb
cli
mov
push
cli
pusha
pop
xchg
imul
daa
fbstp
data16
inc
imul
mov
xor
jae
jb
fbstp
loop
lock
ja
fidivrl
pop
imul
rcrb
add
outsb
sbb
test
icebp
test
xchg
loop
aam
jne
lea
iret
mov
xchg
sbb
xor
repz
adc
and
push
push
sub
addr16
fcomps
fcmovnbe
jb
ss
xor
cs
orb
test
push
ss
pop
jne
in
pop
rcrl
xor
xchg
or
mov
dec
and
repz
jns
or
dec
scas
sti
inc
cmp
sub
jns
pop
sub
jle
cli
lods
pop
in
mov
add
das
je
out
mov
dec
mov
sub
mov
and
leave
shlb
imul
in
shrl
xor
gs
and
mov
jb
repnz
movsl
xor
fcomps
mov
je
adc
insl
aad
divl
dec
push
in
jno
cmp
or
xor
or
bt
sub
adc
push
jno
hlt
aad
cmp
aad
fwait
mov
pop
and
nop
cmp
add
inc
or
daa
mov
fbstp
nop
inc
repnz
hlt
cmp
lea
pop
mov
cmp
rorl
sub
arpl
jge
fsub
shl
push
outsl
sbb
in
cld
inc
in
loope
xchg
add
data16
add
xchg
xor
popf
sbb
in
add
js
mov
incl
add
or
sar
push
fwait
out
add
insl
xor
adc
imul
andl
push
cmp
movsl
adc
push
or
pop
push
mov
add
sbb
dec
sbb
pop
lock
mov
cmp
ss
xor
pop
dec
add
jb
fdivp
pop
data16
pop
rcrb
or
xor
mov
jnp
mov
imul
shll
xor
bound
gs
push
popa
dec
or
bound
je
mov
popf
call
cmp
pop
inc
and
xor
repz
jb
xor
mov
mov
aas
cld
adc
jmp
dec
les
mov
push
xor
jge
popa
shll
xlat
hlt
in
je
dec
xor
rorl
dec
mov
cmp
inc
popa
lods
test
ss
addb
pop
outsb
insb
cmc
shrb
push
or
int
rcrb
divl
mov
lahf
mov
test
xor
cltd
add
pop
ja
cltd
push
jbe
pop
sbb
idivb
lods
mov
aad
and
ljmp
jp
idiv
aad
add
and
gs
lods
imul
sahf
adc
mov
in
sbb
adc
dec
sbb
jmp
or
push
push
inc
cmp
ljmp
mov
mov
push
push
cmp
orb
mov
or
and
push
divb
fildll
stos
into
jmp
push
je
aas
cmp
int
push
inc
imul
mov
sub
jnp
inc
cmp
push
fs
pop
jg
daa
cwtl
lock
fs
add
inc
aad
ret
inc
jo
add
xor
pop
mov
fwait
and
jns
sub
movsb
sti
sub
repnz
aas
popf
pop
push
mov
dec
and
loopne
dec
or
icebp
lds
mov
or
outsb
mov
movsl
push
stos
repz
or
xchg
xor
popa
ja
in
lea
mov
inc
pop
and
js
push
popa
mov
test
hlt
and
jb
aad
jae
adc
jmp
add
ljmp
jmp
arpl
bnd
mov
or
adc
movsl
jb
lods
in
imul
and
lods
in
bound
push
xor
cs
pop
jno
std
pop
jo
lcall
adc
fs
mov
cmp
addr16
lods
inc
imul
rcrl
cmp
ja
push
mov
addl
pushl
pop
dec
pop
mov
add
sub
icebp
daa
loope
bound
cmp
add
xchg
pop
rcrb
scas
push
hlt
adc
jp
pop
jb
sti
jp
adc
and
or
movsl
lret
sbb
inc
inc
xor
mov
pushf
inc
xor
divb
insl
pop
dec
loop
push
inc
sbb
cmc
xchg
jno
dec
js
stc
dec
adc
imul
aad
clc
jb
in
mov
fwait
sbb
mov
sub
outsb
push
jns
lret
push
ja
push
aam
popa
gs
and
jnp
fidivrs
mov
pop
sub
fnstenv
bound
imul
movsl
hlt
add
ja
sbb
sbb
out
lea
pusha
shll
and
pop
mov
daa
xor
gs
pop
inc
push
push
adc
daa
xor
mov
pop
ss
xor
stos
jae
sahf
xor
dec
imul
fisubl
jb
pop
dec
gs
push
dec
pop
push
jl
mov
icebp
add
mov
sub
push
test
inc
insl
cmp
adc
jnp
or
pop
jbe
leave
push
xchg
test
pop
pop
jg
xor
in
add
or
add
mov
mov
jg
jb
xchg
mov
mov
daa
cmp
pop
sbb
push
mov
add
cmc
jae
pushf
mov
sub
ficompl
sub
mov
xor
imul
imul
inc
inc
pop
sub
daa
xor
cmpsb
icebp
dec
sbb
addr16
xchg
adc
push
add
mov
mov
nop
sbb
fcomps
data16
out
sub
jno
gs
mov
popa
xor
fwait
call
into
mov
cmp
pop
ljmp
xchg
popa
push
cld
mov
push
fisttpll
pop
out
pop
cltd
push
cli
adc
push
popl
test
mov
or
iret
divb
lcall
push
outsl
mov
add
sarl
es
jno
hlt
cli
addr16
jo
lahf
test
sbb
mov
cmpsb
jae
mov
mov
btcl
fidivs
enter
cmp
aam
nop
in
loope
mov
lds
jb
aam
jmp
add
xchg
push
inc
data16
cld
out
div
mov
jb
repz
gs
push
lret
mov
cmp
dec
push
enter
add
mov
pop
and
ljmp
jecxz
and
sarb
arpl
jg
mov
fmuls
lret
shrl
mov
insl
lock
imul
xor
insb
cmp
es
and
push
mov
rol
hlt
mov
pop
push
notl
ror
or
add
lret
push
push
pop
jno
inc
orl
xchg
mov
mov
mov
mov
mov
mov
cmp
les
cmp
in
jmp
sbb
mov
dec
sub
cwtl
pushf
add
jno
dec
push
pop
arpl
outsl
pushf
adc
insl
mov
sub
ljmp
inc
adc
jo
xor
lods
and
shlb
test
mov
jbe
fildll
outsl
push
mov
shll
push
xchg
sti
push
xchg
imul
mov
mov
movsb
hlt
popa
insl
xor
je
fs
mov
outsl
cmp
push
push
movsl
repz
push
mov
xor
adc
lea
sub
popa
pop
adcl
mov
add
rorl
push
push
sbb
dec
insl
add
push
xchg
popa
jmp
pop
add
dec
adc
mov
gs
cltd
pop
or
push
std
xlat
inc
mov
adc
mov
add
jb
incb
in
cmp
ret
pop
inc
mov
add
mov
call
cmp
popa
add
and
push
sub
adc
addr16
add
neg
lods
insb
cmp
xor
add
sub
push
lock
push
lods
xor
insl
mov
add
pop
cmp
gs
mov
jge
inc
dec
mov
cmp
add
mov
mov
adc
dec
sbb
jno
pusha
adc
cwtl
scas
pop
cmc
fwait
gs
das
pop
sahf
xor
popa
and
fmuls
stos
std
fdivs
orl
adc
sub
bound
jmp
movsl
cmp
dec
or
inc
pop
and
push
mov
adc
mov
push
sub
sbbb
test
mov
dec
fnstenv
jns
rcll
mov
out
jo
repz
sub
cmp
xchg
dec
or
es
adc
dec
outsb
in
pop
or
sbb
pop
pop
sbbl
aas
jb
add
push
cli
dec
insb
adc
jb
testb
lea
icebp
imul
insl
test
fisttps
adc
add
fcomps
lahf
cmc
mov
fisubrl
pop
push
or
xlat
fimull
jnp
fstp
pop
jno
lahf
loop
jo
and
lea
pusha
push
mov
bound
addr16
lods
add
rcrb
jno
push
imul
repz
stos
in
in
sub
xchg
dec
aam
in
xchg
fadds
mov
movsb
push
stos
repz
sbb
stos
push
jp
cltd
pop
dec
dec
ds
repz
idiv
aas
popl
pop
mov
jp,pn
mov
jb
cmpsb
cmc
js
stos
jo
pusha
ja
imul
mov
jle
hlt
repz
gs
leave
push
xchg
dec
jno
xor
push
pop
insb
std
js
push
pusha
xor
push
lds
enter
mov
inc
xchg
stos
jmp
push
mov
cmp
cmp
jb
mov
mov
xchg
imul
jb
stos
in
cmpsb
mov
aaa
gs
jns
jb
in
jae
in
cmc
push
xchg
mov
mov
stc
jno
push
std
repz
hlt
repnz
sub
mov
repz
jo
xchg
push
mov
les
pop
aad
in
std
sub
sbbl
add
gs
xor
or
cwtl
outsb
aaa
xor
repz
add
cmp
test
mov
cmp
xorb
in
in
jle
jae
xchg
sbb
into
mov
xchg
stos
pop
mov
pop
outsl
insb
mov
je
mov
addr16
jp
test
jb
insl
imul
in
pop
outsl
icebp
push
pop
or
aam
bound
adc
dec
mov
inc
push
stos
sub
insb
jb
sbb
cmp
xlat
and
ss
mov
ret
je
sbb
popa
lock
mov
jno
add
mov
stos
sbb
jg
add
cwtl
popa
adc
bnd
lds
pop
data16
test
pusha
and
xchg
push
xor
inc
in
in
cmc
jl
lea
dec
cmp
xor
lock
imul
push
or
fisttpll
pop
jle
dec
sub
push
cmp
xlat
add
pop
jo
ja
lret
int
imul
push
mov
jge
loop
fmull
pop
cmpb
inc
in
pushf
das
out
push
fmul
fcompl
jae,pt
les
jmp
jmp
js
cmpsl
jp
stc
sbb
call
xor
add
cmp
mov
xor
andl
paddsw
and
push
dec
mov
adc
sti
data16
shrl
jae
xchg
sub
push
insl
xor
scas
in
out
pop
mov
test
pop
inc
ss
leave
loop
sarb
lret
and
ljmp
pop
arpl
sub
mov
cwtl
xchg
mov
rcrl
aad
aas
xchg
add
sbb
leave
iret
fs
movsl
pop
xlat
movups
and
mov
in
push
fildll
pop
pop
mov
sub
dec
shll
enter
pop
movsb
lahf
cmp
lea
loopne
xor
sbb
std
jecxz
adc
adc
pop
lea
popf
lcall
push
push
dec
adc
adc
cmp
xchg
test
dec
jmp
mov
xor
test
cld
cmp
ljmp
mov
fcmovnbe
gs
xor
outsl
test
insb
lods
mov
cmp
addr16
movsl
pop
jo
sub
pslld
hlt
sbb
add
fsubrl
ja
xchg
jae
cmc
stc
imul
dec
movsl
pop
ret
arpl
push
adc
loope
jge
add
lods
sub
outsl
cltd
pop
rcll
jl
bound
jo
sbb
xchg
jno
daa
sbb
push
or
pop
pop
cmp
dec
imul
mov
xchg
bound
inc
add
adc
sub
inc
lods
mov
cmp
jg
adc
xchg
movsb
adc
arpl
test
imul
mov
xchg
bound
bound
pop
int3
adc
xchg
add
loopne
pop
rcll
mov
dec
mov
data16
cmc
xchg
rcrl
mov
stc
ja
cmp
pop
lcall
cwtl
mov
movsb
lods
push
dec
sbb
stc
sub
push
outsb
jns
or
addl
jmp
pop
sub
and
sbb
js
gs
repz
mov
and
arpl
and
adc
rolb
add
mov
mov
inc
mov
sub
pusha
outsl
add
adcl
jmp
xlat
sti
xchg
sbb
jno
loope
int
xlat
push
aaa
das
cmp
rolb
outsb
movsb
lea
sub
insb
xor
sub
mov
test
test
jl
sub
push
pop
scas
icebp
add
je
lods
mov
push
push
pop
ja
adc
add
aad
and
ljmp
cmp
pop
sbbl
outsl
in
icebp
add
mov
sti
por
xor
imul
enter
and
js
enter
lea
dec
mov
mov
mov
push
jno
cwtl
jo
inc
aas
mov
add
push
dec
inc
gs
add
xor
lock
arpl
inc
sub
pop
jns
jmp
sub
sti
in
mov
inc
push
gs
repnz
cltd
sti
ljmp
and
addr16
jg
divb
out
dec
push
pop
fldcw
mov
shl
push
push
insb
aas
add
mov
mov
mov
andl
fwait
popf
addb
imul
lea
xor
insb
push
jg
or
push
popa
bound
or
insb
jno
push
jb
repz
mov
dec
addr16
jo
add
jl
hlt
es
hlt
mov
inc
inc
add
push
aas
add
cmp
adc
mov
jb
aas
subb
push
scas
add
dec
pop
lret
dec
lea
popf
in
mov
wrmsr
pop
shrb
fs
std
lds
jns
rolb
sbb
adc
popa
je
add
insl
sub
xchg
or
in
lcall
dec
fiaddl
push
mov
aam
lock
clc
ss
icebp
cmpsl
push
and
movsl
sbb
mov
insb
test
sarb
arpl
int
pop
es
bswap
imul
int3
fwait
lods
test
cmp
pop
imul
pop
out
sbb
prefetchw
cmp
aam
mov
dec
push
aam
and
pop
in
pop
xor
imul
jg
out
insl
lods
js
cmp
pop
lds
cld
xor
dec
fldenv
rcrb
lock
gs
stos
daa
stos
stos
rcrl
jle
or
dec
imul
ss
icebp
cld
push
call
lods
pop
movsb
xchg
push
pop
popa
scas
pop
dec
stos
shl
test
sbb
xchg
pop
das
xchg
hlt
pop
icebp
rcll
or
call
pop
mov
dec
dec
test
test
shll
test
mov
pop
cmp
push
cltd
jp
shll
bound
mov
popa
cld
lock
imul
rclb
gs
test
stos
cmpsl
rcrl
push
cltd
cmp
pop
das
mov
dec
imul
ss
icebp
cld
push
call
pop
icebp
cmpl
popa
fwait
pop
dec
cmpsl
shl
cmpsb
ret
cmpsl
pop
mov
movsb
pop
das
xchg
loopne
icebp
rcll
xor
cld
in
ljmp
sbb
adc
cmp
dec
fnsave
dec
inc
bound
dec
sbb
pop
push
cmp
inc
lea
lods
or
mov
cmp
shll
scas
lcall
popf
mov
gs
sub
scas
xchg
push
sub
cwtl
push
or
dec
cwtl
lock
pop
pushf
cmp
cmp
xchg
xchg
push
pop
aaa
icebp
inc
gs
ja
lret
stos
ja
xchg
shlb
clc
mov
xor
or
push
push
clc
popf
xor
xchg
dec
ja
in
lea
mov
jge
sbb
jbe
leave
pusha
dec
and
mov
int3
cmc
jo
icebp
repz
rorl
hlt
mov
lock
add
sub
jbe
ret
imul
inc
push
pop
push
xor
mov
icebp
aas
sub
dec
daa
adc
mov
cmp
jns
cmc
xchg
aad
dec
popf
dec
call
pop
adc
sbb
shrb
push
popa
pop
jns
cmpsb
cmp
xchg
jno
clc
cmpb
call
gs
jge
hlt
dec
cwtl
popf
mov
jle
mov
aam
insl
cmp
dec
pop
cmp
push
inc
mov
sbb
sbb
lods
lods
ss
mov
push
cmc
dec
push
add
sbb
pushf
xchg
dec
shrl
popf
movsb
les
popf
and
push
repz
fs
fstpl
lea
aam
jge
addr16
shl
inc
adc
add
push
imul
lods
inc
jge
cwtl
test
lock
cltd
push
mov
pop
cmp
lea
or
lea
xlat
inc
out
adc
jno
mov
out
enter
sbb
sbb
and
push
fcompl
pop
inc
mov
in
stos
add
lea
sbb
ja
mov
std
jmp
stos
jae
stc
jmp
ljmp
pop
cmp
and
shl
shrl
mov
cmp
rclb
outsl
in
and
mov
lods
xorb
jp
mov
mov
and
out
cmc
inc
imul
pop
pop
imul
popa
mov
pop
ret
gs
cmp
sahf
sub
outsl
pop
repz
movsl
push
mov
add
sbb
push
fisubs
fs
inc
idiv
pop
test
stos
test
test
mov
add
imul
or
iret
aaa
xlat
mov
ja
push
sub
push
aas
and
mulb
dec
pop
test
in
dec
into
xor
xor
pop
sbb
enter
mov
push
dec
pop
lods
pop
mov
jle
ja
mov
push
sub
aas
outsb
daa
hlt
push
pusha
outsb
out
js
cmp
pop
xchg
dec
repz
add
fs
push
scas
pop
inc
aaa
and
push
out
add
jnp
lahf
pop
dec
add
push
add
shlb
andl
add
fisttpll
mov
outsl
jge
xor
aam
mov
pop
je
loopne
jns
or
pop
cli
sbb
sbb
rcrb
mov
adc
lret
cmp
mov
jbe
mov
lock
cmc
lock
sub
in
and
ds
pop
bound
mov
aas
dec
jns
cmp
dec
ja
out
pop
in
movsl
sub
aaa
in
push
clc
pop
xor
ss
lahf
addr16
mov
jge
popa
sbb
dec
push
fistpl
das
jns
jmp
decb
jns
lea
cmp
jno
test
clc
add
fsub
movsl
pop
ss
jmp
in
adc
push
ljmp
jle
out
imul
xchg
sub
push
in
jecxz
shr
sub
dec
cmp
scas
jecxz
mov
inc
dec
inc
pop
stc
enter
dec
mov
jge
sbb
xor
jb
push
popf
and
fldln2
pop
imul
or
and
push
push
pop
sbb
dec
mov
mov
cmp
cmp
cmp
sahf
pop
lock
pop
dec
movsb
cmovbe
cmp
jge
xor
mov
outsb
jp
filds
mov
push
sub
pop
push
jmp
jmp
xor
jnp
mov
push
pop
scas
add
movsb
mov
push
sti
mov
outsb
dec
xchg
loopne
bound
mov
jne
outsl
jmp
adc
mov
mov
xor
mov
mov
mov
daa
push
mov
cmp
dec
ret
push
push
pop
adc
idiv
mov
imul
push
js
jb
jns
imul
mov
pop
adc
adc
or
push
or
adc
sarb
dec
subb
scas
add
std
inc
loopne
insb
repz
jae,pn
push
daa
int
mov
push
mov
jo
jecxz
pop
aaa
add
lea
jg
jno
stos
push
and
push
inc
dec
pop
aam
or
loopne
fsubrs
jne
lea
jb
pop
test
aaa
jg
and
add
xchg
jno
cld
popa
arpl
nop
mov
pop
mov
push
and
pop
pop
mov
icebp
add
push
mov
pop
dec
push
pop
or
std
sti
ficoms
loope
mov
outsb
imul
xor
inc
test
mov
pop
cmp
xor
and
push
mov
mov
push
mov
sub
add
jp
popa
lret
pop
mov
push
cld
or
push
out
jmp
ja
js
fs
sbb
xchg
rclb
and
dec
inc
add
and
xchg
gs
cmp
pop
lcall
test
test
pop
dec
pushf
loop
push
xchg
mov
in
jns
cmp
idiv
jnp
add
decl
gs
rcr
gs
xor
aaa
xor
sub
notb
in
sbb
je
stos
cmpsb
pop
xchg
sub
push
cmp
aaa
notl
gs
cmp
push
and
inc
fistps
xor
ror
push
jb
mov
ja
sub
add
imul
out
test
enter
push
test
cs
ret
mov
lock
out
xchg
jae
int
xor
adc
mov
xor
jns
sbb
hlt
in
test
jge
es
clc
xor
stc
fstl
daa
gs
or
outsl
hlt
notl
insl
test
or
xor
mov
mov
mov
popa
mov
stc
mov
xor
movsl
clc
add
hlt
adc
ljmp
js
pop
daa
jno
out
xor
test
dec
js
imul
push
sub
int
pushw
imul
addr16
add
fsubrs
push
enter
icebp
mov
iret
mov
rorl
movb
jbe
shl
jo
incl
cmp
mov
int
aam
xor
or
jne
js
rcrb
xchg
flds
and
aad
ds
inc
test
scas
jl
addl
mov
dec
xchg
push
mov
repnz
jp
pop
arpl
cmp
fs
push
push
dec
xchg
mov
lea
gs
sar
stos
cmp
add
fldl
xor
sbb
dec
das
jno
pop
rorb
in
out
cltd
add
push
and
lock
sub
push
cmc
and
jae
inc
aad
push
pop
cs
pop
push
mov
push
shrb
mov
popf
lea
xor
pop
sti
xchg
xor
add
push
stc
sbb
cmp
push
push
mov
sub
jg
and
push
mov
sub
or
xor
push
mov
rorl
xor
cltd
cltd
mov
icebp
mulb
jns
lret
ljmp
iret
test
std
xchg
push
lock
push
hlt
add
dec
dec
repz
popa
mov
pop
mov
int
addr16
fcom
fidivrs
mov
dec
leave
jmp
pop
imul
inc
imul
jl
stos
xor
mov
sbb
inc
data16
or
subb
not
xabort
shr
data16
inc
xchg
sbb
push
mov
pop
test
xor
jae
inc
dec
jns
loope
arpl
aam
fidivs
xor
fwait
pop
push
xchg
fdivl
and
xor
cmp
bt
xchg
popa
es
test
add
out
jmp
inc
dec
jmp
push
xor
inc
stos
insl
pop
pop
mov
inc
pop
mov
pop
add
pusha
lea
adc
aad
inc
cmc
idivl
arpl
push
or
jl
aam
mov
push
stos
outsl
push
lret
cmp
xor
out
ucomiss
dec
mov
fldl
xchg
sbb
sbb
mov
jge
pop
mov
lods
addl
jecxz
in
or
lret
push
jp
mov
cmp
xchg
in
push
cld
inc
mov
mov
jno
scas
lret
push
scas
push
imul
mov
jno
and
mov
adc
loopne
in
sub
fmull
movsl
mulb
pop
arpl
imul
shlb
test
test
imulb
lret
push
jge
jo
add
ret
pop
push
out
pop
adc
inc
mov
hlt
mov
xor
xor
std
and
pop
stos
arpl
mov
pop
cld
sub
fistps
sahf
jb
jecxz
jns
arpl
sahf
cwtl
push
lods
sub
jg
outsb
pop
push
rcll
outsl
jge
inc
mov
mov
inc
sbb
jae
lods
sarb
imul
push
lahf
popa
addr16
cmpsb
push
nop
xchg
pop
sbb
xchg
cwtl
mov
in
cmp
pop
mov
pop
enter
leave
sbb
imul
mov
and
lods
sbb
loope
xchg
push
xor
mov
test
adc
in
adc
xchg
insl
jns
lock
lea
int3
mov
jae
lock
imul
lret
cmp
aaa
fistps
xor
xchg
cmp
jae
mov
dec
test
arpl
xchg
dec
pop
sahf
out
ljmp
jno
push
or
xchg
aas
icebp
mov
in
movsl
movsb
xchg
pushl
outsl
popa
ljmp
adc
int
ret
movsl
or
stos
push
lods
or
call
dec
push
mov
jp
cmp
sbb
and
pop
inc
aaa
lea
lds
insl
in
pop
push
mov
xor
adc
cmp
fs
fs
jo
push
loopne
cmp
popa
mulb
fsubrl
mov
aam
and
pop
out
xlat
jae
je
mov
int3
xor
inc
lahf
repnz
mov
lea
aam
sti
lods
inc
xchg
bound
and
or
xor
xchg
sbb
xor
jae
jmp
sbb
push
jle
cwtl
test
lret
popl
and
arpl
add
mov
xor
or
or
iret
sub
add
jle
inc
jg
push
stc
pop
aaa
ret
cmp
push
inc
xor
aas
pop
push
aaa
jo
jno
out
mov
mov
fisubrl
aad
das
aas
fs
repnz
rcrl
xchg
inc
arpl
lcall
rcrl
stos
xchg
or
jecxz
les
fldenv
jno
mov
jmp
jae
fldl
pop
gs
xor
icebp
scas
mov
arpl
in
push
dec
jb
pop
jmp
pusha
cmp
test
imul
or
mov
and
loope
lods
mov
adc
popf
jmp
xor
pop
sbb
lods
lcall
test
xor
push
loop
jmp
push
outsb
rcrb
in
pop
dec
jge
xchg
and
dec
push
or
gs
push
mov
dec
mov
in
insl
push
push
lods
inc
popa
in
fisttpll
imul
gs
popa
js
imul
mov
jno
cwtl
in
psrld
cmp
je
adc
repz
inc
pop
out
xor
and
fs
pop
xor
mov
mov
je
jmp
and
jbe
rcrb
dec
and
aad
jge
jne
popa
mov
lds
mov
xor
push
push
repz
out
xchg
std
mov
xchg
cmpsb
or
lods
jno
fisubs
je
fisttpl
sub
addr16
pop
adc
inc
adc
inc
jmp
subl
hlt
cmp
imul
jno
repz
jb
aad
jmp
jge
insl
inc
add
push
push
add
mov
stos
les
jae
jle
push
sbb
xor
add
repnz
pop
mov
push
mov
mov
outsl
push
sbb
fwait
add
push
dec
mov
sub
sub
jno
call
and
imul
shll
add
add
push
mov
jno
push
mov
sub
cmp
jae
inc
dec
movsb
in
outsl
cmp
lahf
push
mov
cmpsl
popa
popa
add
add
xor
xor
jle
push
add
mov
add
in
inc
xchg
and
xchg
lret
push
push
pop
rorl
xor
mov
cmpsb
jo
in
daa
dec
imul
add
xorl
or
mov
jno
push
loopne
pop
adc
mov
fsubrl
push
add
and
sub
mov
pop
add
hlt
stc
xchg
bnd
adc
popa
xor
idiv
pop
and
in
lods
dec
dec
pop
lods
push
mov
inc
mov
mov
cld
sub
test
call
testb
cltd
rcl
pop
dec
pop
lea
mov
data16
imul
and
lahf
push
sub
insb
and
jecxz
jb
repz
das
fwait
sbb
xor
xchg
pushf
hlt
std
xchg
int
repz
nop
cld
inc
insb
pop
or
dec
jmp
bound
gs
shl
jl
pop
mov
inc
jg
jmp
inc
xorl
out
dec
cmp
sub
mov
sub
daa
std
lret
ja
ljmp
imul
push
arpl
jae
or
scas
inc
frstor
les
in
cmp
jp
cmp
xchg
popa
ficoms
faddl
cli
sti
and
dec
dec
insl
jae
pop
repz
test
jno
add
stc
addr16
bound
and
repnz
add
imul
lea
imul
pop
push
fdivl
add
cmpsb
or
cmpsl
imul
mov
popa
fcompl
jns
add
jmp
js
xor
aas
xor
push
popl
sbb
add
fs
sti
insl
xor
mov
push
xchg
lea
push
sbb
fwait
test
ja
fcomip
lcall
call
pop
iret
or
dec
inc
jnp
and
mov
xchg
xchg
shr
push
ds
pop
add
xchg
mov
push
jb
sbbb
lock
adc
push
push
je
push
add
inc
jbe
adc
sub
mov
cmpsl
add
push
or
stos
push
stc
hlt
divb
xchg
cs
mov
xor
jl
in
imul
test
pop
scas
aaa
ja
daa
repz
notb
pop
rorl
mov
jmp
out
push
cmp
repnz
dec
test
loopne
pop
clc
cmp
mov
in
xor
add
mov
mov
es
pusha
push
dec
repnz
ret
out
or
xor
inc
dec
out
aas
ret
mov
cs
stc
mov
pop
insl
arpl
jbe
lods
insl
lret
clc
sbb
mov
iret
mov
and
ds
mov
jno
xor
dec
mov
adc
mov
sti
push
dec
scas
mov
cmc
cmpsl
mov
push
in
clc
jo
mov
dec
push
push
adc
sti
rcrl
and
out
inc
insb
ds
jge
std
pop
push
imul
arpl
inc
ja
add
je
inc
sub
aad
adc
jmp
in
pop
cmp
mov
rcl
outsb
push
inc
add
jmp
fidivl
push
dec
ror
pop
xor
jo
in
and
bound
iret
mov
ficoms
sub
inc
aaa
jae
or
jbe
das
inc
sub
insb
shl
ss
sbb
in
das
add
pop
shll
add
hlt
push
and
add
cmp
adc
test
inc
daa
push
push
scas
xchg
idiv
jno
jo
fcomi
repz
and
sarb
loop
xchg
pop
not
inc
adc
push
and
fdivrl
pop
sbb
fcomi
lods
jle
insl
mov
push
sub
jp
pop
mov
jb
std
imul
data16
xor
ljmp
push
add
repnz
cmp
addr16
mov
cmpb
data16
xor
xchg
sub
lea
popa
jo
sub
and
jge
lock
mov
sub
arpl
cmpsl
out
mov
das
xor
lock
out
daa
hlt
add
cld
jno
mov
mov
pop
mov
shrb
bound
gs
inc
clc
jae
jmp
add
push
data16
icebp
loope
bnd
cmp
cmp
adc
and
insl
out
out
dec
icebp
bound
pushf
lahf
lock
mov
ss
out
outsl
es
sbb
jmp
fcoml
dec
push
add
and
sub
xor
push
dec
arpl
pop
clc
push
fldenv
in
andb
loopne
in
insb
adc
in
adc
inc
gs
cmpsl
je
jge
sbb
push
cltd
add
inc
jno
ljmp
push
adcw
xor
hlt
das
or
dec
cmp
add
call
daa
bound
sub
push
xchg
cmpsb
sub
xsha1
cmpsb
dec
mov
sbb
sub
sub
inc
cwtl
es
sub
fdivs
inc
adc
inc
add
push
pop
or
fimuls
lret
mov
xor
jmpw
cmp
mov
sbb
rorb
push
bound
dec
pop
xchg
xor
xchg
aaa
rolb
dec
pop
push
loop
outsl
inc
add
push
xlat
or
add
cli
jmp
xor
in
xchg
outsl
decl
xchg
push
out
xchg
popl
imul
sti
sub
sti
mov
jp
add
pop
adc
or
aam
cmp
adc
cmpsl
xor
jmp
xor
adc
cmp
in
sub
jns
jmp
movsl
loope
bound
jbe
and
mov
mov
or
and
xlat
sbb
xor
imul
icebp
cmpsl
add
mov
popa
xchg
mov
pop
jb
or
mov
mov
aad
cmp
arpl
adc
call
negb
insl
mov
in
outsl
aam
sbb
aam
jmp
inc
jmp
testb
inc
popa
jbe
push
daa
cwtl
mov
sbb
mov
mov
fdivs
xor
inc
inc
sub
xchg
push
pop
clc
xchg
movsl
push
in
inc
loopne,pn
rorl
mov
cmp
add
out
add
cs
cmc
outsb
add
cmc
mov
rorb
mov
lea
ja
leave
add
sbb
sub
outsl
nop
addb
inc
into
xor
out
inc
mov
sbb
subl
lds
mov
shlb
pop
push
push
fisubl
in
inc
outsl
add
mov
add
pop
clc
in
jmp
mov
cli
insb
jmp
scas
dec
flds
mov
or
cmpsl
in
add
jb
xchg
cli
stos
and
jmp
lret
and
adc
mov
test
adc
out
dec
cmp
adc
rclb
inc
repz
xchg
push
push
lock
hlt
das
std
pop
jbe
aad
jmp
cmp
and
stos
xchg
imul
mov
sbb
inc
rolb
imul
xchg
clc
out
rcrb
jg
scas
stos
outsl
cmp
popa
add
insb
jns
je
mov
inc
push
mov
popl
add
sub
pushf
addr16
push
ret
in
pop
xchg
push
mov
mov
cmpsl
cmp
test
mov
outsl
sbb
lods
sahf
cld
hlt
mov
pop
gs
push
fdivrl
xor
pop
dec
jbe
jp
andnps
push
mov
push
ret
jbe
mov
jle
rol
cmp
and
repz
jb
scas
dec
scas
repz
xchg
imul
cmp
out
hlt
stos
clc
pop
cmp
push
pusha
and
scas
jnp
xchg
inc
and
fs
lods
das
pop
daa
outsl
int
pop
dec
sub
push
je
add
outsb
xchg
mov
and
and
fisttpll
cmc
int3
cld
aad
iret
cmp
jge
add
mov
xor
in
and
dec
push
push
mov
je
or
jbe
inc
imul
cltd
inc
ret
mov
ljmp
addb
jle
xchg
jmp
jae
cmp
sahf
jae
sbb
cmp
sbb
push
in
mov
pop
lret
scas
push
xchg
in
pop
adc
pop
cmp
and
icebp
mov
ret
icebp
push
hlt
in
sub
ja
mov
fs
xor
fcomps
push
or
jne
jns
lahf
in
cmp
mov
mov
ds
cmp
jge
pop
cmp
sub
bound
imul
cmp
jb
mov
js
adc
push
jbe
mov
in
sbb
inc
and
or
or
sub
and
inc
lret
jg
daa
add
push
sub
fucom
pop
xor
test
in
mov
jno
in
stos
xor
je
dec
out
insb
pop
repz
into
inc
pop
outsb
ljmp
sbb
hlt
aaa
icebp
out
hlt
bnd
addb
ljmp
cmp
sbb
mov
mov
aaa
add
sub
push
push
shl
mov
shl
cmp
repnz
jo
aad
jb
xor
cld
mov
inc
add
jg
testl
pop
test
insl
push
stc
xor
mov
sbb
push
hlt
inc
in
sub
mov
mov
mov
bound
or
inc
push
test
jb
cwtl
into
in
pop
in
mov
xor
aam
pop
pop
jae
or
dec
push
stos
push
shrb
pop
out
fsubrl
insb
arpl
xor
cs
cmp
popa
jmp
arpl
in
jae
mov
das
xchg
push
dec
jb
jae
repz
and
cld
mov
add
sub
jb
pop
sbbl
or
jle
movsl
decl
xor
dec
dec
mov
popa
cmp
in
fistpll
hlt
cmp
lock
mov
xor
lret
fsubrl
dec
mov
xor
or
outsl
push
data16
enter
sub
in
sub
sbb
loope
negb
imul
inc
mov
outsl
movsl
or
repnz
daa
outsb
jo
jnp
xor
fcompl
mov
popa
adc
stc
mov
cs
jp
clc
adc
cld
notl
test
and
xchg
xchg
inc
mov
lock
sbb
xor
jno
out
mov
xchg
fbstp
xchg
sub
inc
push
xor
in
popf
inc
cltd
inc
xor
mov
fbstp
add
fsubrs
and
ljmp
bswap
lods
add
or
push
insb
jno
loopne
je
jmp
hlt
mulb
repnz
jae
std
xor
cltd
push
outsb
xchg
push
mov
jmpw
aaa
push
jle
mov
adc
inc
mov
jge
xor
movsl
mov
xor
popa
xor
mov
pop
lret
cmp
mov
sub
adc
pop
mov
jae
repnz
scas
xchg
call
popf
insb
out
dec
cmpsb
iret
outsb
aas
add
divb
addr16
xchg
xor
mov
pop
jg
push
loope
xchg
or
call
lock
fcmovb
std
sub
and
mov
add
or
pop
fs
adc
or
push
sub
fisubrs
dec
movsb
arpl
sbb
and
inc
lea
arpl
lock
add
insb
or
push
jno
movd
inc
lret
mov
repnz
add
push
dec
xchg
jo
cmp
insl
js
pop
sub
icebp
inc
insb
jno
mov
pop
dec
xor
mov
pop
daa
icebp
mov
psllq
xor
xor
jecxz
xor
mov
idivl
xor
outsl
in
pop
je
movsl
std
in
loop
inc
call
ljmp
jb
sarb
test
imulb
xor
sbb
jp
imul
jns
scas
sarb
jb
lea
sbb
out
lods
pop
test
inc
mov
inc
mov
inc
insl
adc
jmp
jns
dec
dec
hlt
jge
sbb
lea
mov
dec
cmp
mov
aam
imul
and
lea
push
mov
mov
push
fisubrl
divb
addr16
push
bound
sbb
sbb
lea
arpl
inc
clc
movsl
and
jge
or
xor
sub
xchg
in
aam
jge
loopne
cmp
rorl
jecxz
push
jne
ret
push
and
sbb
test
insb
imul
sub
loop
aas
leave
dec
sbb
dec
ja
push
fs
pop
ss
pop
sub
lcall
bound
adc
nop
jo
xchg
lret
pop
or
dec
and
roll
dec
lds
ret
je
enter
mov
pop
dec
mov
jno
test
stos
pop
push
lea
popl
xchg
shr
xchg
leave
mov
mov
int
jge
insl
int3
aaa
outsb
pusha
xchg
mov
add
ljmp
adc
cltd
jae
in
sahf
mov
inc
push
insl
cmp
in
iret
ret
dec
sub
rcll
xor
pop
insl
mov
sub
gs
cmp
in
adc
jo
add
cmp
sbb
xor
aaa
add
xor
adcb
sahf
jb
fisttpll
imul
insl
mov
xchg
and
mov
xchg
notl
clc
add
mov
xchg
mov
xor
aad
xchg
mov
outsl
pop
fs
add
nop
movsl
sub
test
inc
push
loop
outsl
push
jle
rol
cmp
adc
lods
ja
push
xchg
aam
cltd
inc
ffree
loope
pop
dec
fists
mov
pop
pop
add
gs
jge
js
push
pop
loope
and
sbb
mov
mov
aad
lcall
idivb
ds
test
dec
pop
shrl
sub
sbb
hlt
js
pop
mov
inc
push
scas
je
jae,pt
lods
mov
loop
jns
and
scas
add
shrl
mov
insl
push
jg
cmc
jae
push
push
sub
je
lea
jnp
outsl
test
jg
mov
insb
inc
dec
loope
arpl
mov
test
in
sub
mov
popf
add
imul
inc
cmp
orl
xor
outsb
or
stos
sbb
lea
mov
inc
loope
add
inc
mov
repz
pop
dec
lea
es
movsl
stos
pusha
sbb
mulb
lea
xchg
das
iret
ljmp
dec
popf
cli
sub
es
adc
add
gs
repnz
jge
aaa
jecxz
in
cmp
jl
adc
push
mov
mov
xor
cmp
addr16
fs
enter
leave
jno
fldenv
in
insb
jge
gs
out
pop
push
jl
sarb
inc
pop
pop
mov
mov
aaa
pop
outsb
int3
push
div
nop
stos
cmp
push
int
mov
dec
sti
pop
or
push
das
or
ds
ret
and
lret
mov
negb
adc
mov
and
pop
xor
bound
mov
lret
cmc
int3
push
mov
xchg
xchg
sub
push
pop
aam
jne
jmp
mov
add
jno
sub
cmpsl
aaa
adc
dec
into
addr16
ja
popa
clc
dec
dec
dec
sub
and
data16
outsl
scas
bound
push
mov
cmp
sbb
rclb
popa
xchg
lea
daa
lock
int3
call
push
inc
and
jg
dec
push
jnp
mov
sub
jo
pop
pop
mov
shr
xor
push
cmp
jne
jl
add
bswap
sub
inc
inc
ror
aaa
dec
sbb
and
loop
imull
addr16
sbb
inc
decl
js
adc
push
movsl
stos
jbe
adc
cmp
cmp
pop
xor
outsb
jmp
aad
jg
cmp
push
pop
dec
add
push
adc
mov
into
mov
test
mov
inc
fchs
mov
pop
jbe
inc
pop
popa
xor
fisttpl
xchg
aas
je
add
lds
das
cmp
clc
call
movsb
and
popa
sub
inc
sbb
pusha
mov
repz
push
mov
mov
insl
shrl
push
mov
cli
pop
sub
pop
add
insb
ret
test
and
jno
mov
in
push
ret
xor
sub
out
popa
or
pop
mov
mov
xchg
jnp
shl
stc
lods
mov
mov
mov
cmc
fstl
adc
mov
in
loopne
xchg
jle
mov
es
arpl
xchg
repnz
in
adc
cmpsl
lds
loopne
mov
popa
hlt
pop
imul
add
dec
outsl
jmp
sub
je
jnp
cmpsb
loope
repnz
rcl
call
test
mov
cmc
es
sub
mov
push
jmp
imul
pop
outsb
add
je
das
cs
cltd
incl
cli
adc
popf
es
xor
add
test
arpl
mov
repnz
jle
pushf
mov
leave
mov
xchg
jmp
js
test
inc
inc
jmp
inc
in
push
pop
fwait
mov
aad
add
or
test
movsl
std
dec
xor
push
scas
and
fs
adc
call
cmp
mov
xchg
sbb
cmp
addr16
into
mov
or
out
inc
enter
pushf
xor
ret
lret
mov
ret
sub
xor
mov
hlt
rcl
sbb
cmp
jno
cmc
loope
mov
mov
fcompl
imul
dec
push
xchg
insb
sar
sbb
fwait
imul
mov
mov
mov
call
push
push
jle
std
lea
imul
cld
or
das
or
sbb
dec
jb
arpl
pop
adc
push
fdivl
pop
stos
insb
lea
push
subl
jbe
jp
mov
sub
xor
ljmp
je
cltd
jbe
pop
cmp
arpl
cmp
push
xor
daa
negl
pop
addr16
or
and
subl
lods
add
popf
dec
imul
adc
movsl
xchg
inc
mov
or
dec
sbb
out
notrack
insl
insb
test
std
mov
cld
stc
outsl
cld
sub
mov
stc
test
xchg
in
sub
lret
ljmp
sar
mov
mov
jp
cmp
cmp
mov
sbb
out
lods
je
cmpsb
hlt
stos
inc
repz
ja
pop
repnz
dec
fsubs
sbb
imul
dec
mul
mov
add
push
fsts
addr16
mov
arpl
adcl
cmpsb
clts
push
out
lret
sar
and
arpl
in
adc
jno
out
or
inc
idivb
mov
jae
mov
out
out
mov
adc
aam
mov
jg
push
xor
hlt
int
je
cli
popf
bound
rorb
aad
dec
add
and
push
push
cmp
jns
sub
into
push
inc
cmp
cmovo
out
mov
jno
sbbl
sub
or
in
or
jmp
lds
pop
add
pop
shr
push
cmovl
push
jle
aad
pop
in
outsl
aam
das
es
gs
xchg
sahf
in
push
scas
mov
adcl
mov
sbb
cmp
scas
outsl
adc
pop
dec
add
jo
sub
dec
ljmp
leave
and
xlat
call
push
pop
in
ret
insl
inc
insb
fsub
aad
pop
add
dec
rorl
hlt
sarl
jecxz
push
aad
sub
test
push
cmp
and
push
and
ror
shrb
xchg
imul
das
adc
mov
mov
mov
fsubs
or
jp
jno
jae
cld
stc
mov
push
pusha
fisubs
xchg
out
bound
push
push
sahf
jecxz
pop
into
jnp
popa
mov
mov
ljmp
cs
mov
push
cmpl
hlt
ss
sub
xchg
gs
jmp
fisttpll
mov
fcoml
in
enter
je
fs
or
jp
add
jae
inc
pop
daa
inc
pop
push
inc
cmp
inc
fsubs
and
adcb
fistl
cmp
and
and
xor
cmp
jo
sbb
dec
sbb
mov
or
mov
fdivl
lret
fnstenv
imul
stc
arpl
lds
add
cmp
cs
into
push
inc
ja
cmp
stos
outsb
cmp
add
sbb
add
cmp
aas
cmp
add
mov
insl
mov
mov
inc
adc
subl
jmp
push
mov
mov
stc
test
aaa
daa
add
xor
mov
xchg
mov
rorl
aam
arpl
daa
js
and
push
pop
xor
push
nop
inc
sub
sbb
shl
adc
cmp
push
push
add
jmp
lods
or
inc
dec
sbb
mov
adc
flds
stos
icebp
movsb
add
and
loopne
xor
in
xor
push
sbb
jne
lahf
mov
stc
lods
loope
mov
jmp
mov
xor
inc
enter
mov
mov
xlat
mov
add
sub
sarl
loopne
push
divl
pop
xchg
xor
insb
out
loop
mov
push
iret
dec
adc
fdivrl
push
outsl
loop
adc
es
adc
xor
pop
cmpsb
xchg
xchg
dec
icebp
xchg
in
sub
aaa
add
sbb
sub
sub
aad
push
and
push
fstps
scas
sbb
mov
andl
mov
jae
daa
fisubs
or
sbb
push
add
jo
stc
and
jb
pop
pop
push
cmp
clc
daa
imul
and
and
xor
fs
nop
loope
test
push
push
xchg
dec
aas
imul
mov
push
popa
jbe
cmp
push
mov
mov
inc
movsb
inc
negb
add
mov
ret
out
add
imul
pop
cmp
push
gs
mov
jb
outsb
ss
jbe
daa
and
fwait
xorb
xor
and
clc
push
movsl
pop
xchg
gs
push
sbb
jae
xchg
aam
das
inc
add
popf
sbb
sub
aad
rclb
push
cltd
inc
mov
orb
jle
cmp
imul
sbb
xor
pushl
mov
jp
push
or
adc
pop
mov
stos
and
or
scas
push
push
xchg
inc
and
lds
pop
std
xor
test
or
pop
jg
sbb
scas
adc
pop
das
testl
lock
sub
fcomps
shlb
inc
sub
leave
inc
idivb
arpl
fnstenv
lret
push
push
test
jnp
sbb
ljmp
outsb
lea
es
push
cld
insb
mov
mov
jb
and
mov
jb
add
lcall
push
js
pusha
push
fcoms
insb
outsl
lea
ss
cld
push
je
and
inc
mov
xchg
rorl
cmp
cmp
mov
aam
lods
cmp
dec
mov
loop
pop
shlb
ret
cld
clc
dec
cmp
pop
adc
cld
add
mov
jp
fdivl
pop
xor
inc
leave
inc
xchg
inc
fisttpll
jns
adc
push
pop
mov
mov
pop
mov
test
cmp
dec
cmp
mov
jo
lock
icebp
int
mov
hlt
adc
xorb
mov
cli
in
xchg
or
mov
mov
jmp
and
das
pmaddwd
jp
repnz
call
push
xor
mov
stos
bound
popa
gs
ret
cmp
mov
mov
ret
mov
dec
jmp
jmp
cld
ljmp
scas
dec
ljmp
in
sbb
arpl
mov
cmp
pop
jno
gs
mov
outsb
jmp
aas
scas
push
inc
jo
sbb
push
jmp
adc
and
das
in
bound
and
cmp
fadds
jo
movsl
std
stc
popa
dec
mov
pop
dec
in
inc
add
loop
push
push
cltd
dec
sub
es
faddp
xor
scas
cmp
outsl
inc
jno
scas
int
hlt
daa
mov
mov
dec
imul
in
je
lret
adc
mov
icebp
popa
data16
int
cmpsl
ljmp
xchg
push
xor
jbe
push
lods
fldt
aad
add
xor
jg
arpl
pop
scas
jb
xor
ficompl
arpl
inc
ljmp
pusha
inc
imul
arpl
es
pusha
outsb
jg
and
sbb
pop
out
data16
in
xor
dec
cmp
mov
push
es
lods
incl
mov
fnstcw
test
jo
lock
mov
jecxz
dec
repnz
add
int
jae
test
out
push
xchg
mov
ja
arpl
int
les
adc
xchg
iret
dec
pop
call
hlt
push
jmp
insl
push
ja
sub
das
int3
add
push
adc
sbb
xchg
push
cmc
ja
dec
pop
and
gs
insb
shl
outsb
push
std
lods
cmp
add
push
std
inc
movd
add
sub
mov
ret
pop
sub
insb
stc
in
inc
jmp
push
mov
aas
jno
jbe
lods
cmp
dec
mov
push
sbb
pushf
sub
pop
push
mov
fisubl
mov
adc
xchg
or
sahf
outsb
dec
in
and
and
shlb
and
push
add
jns
mov
arpl
xchg
sbb
scas
pop
movsl
push
push
out
xor
push
push
push
data16
push
push
jno
lret
popf
dec
gs
mov
push
fisttps
test
jmp
popa
cmc
lods
adc
pop
in
push
xorl
pop
jo
dec
jb
dec
imul
cmpsl
outsb
and
jns
insl
cmc
pop
mov
push
mov
rcrb
dec
pop
jns
ljmp
popa
test
inc
je
lods
jmp
stos
aaa
rcl
popa
clc
test
dec
sub
or
push
mov
lock
add
mov
jb
scas
clc
push
popa
stos
lds
fwait
stc
shll
sahf
loope
data16
mov
sarb
sub
cwtl
call
sbb
and
mov
push
and
cmpsb
mov
ljmp
push
mov
into
lock
arpl
push
fldcw
inc
lock
popa
dec
fsubl
push
insb
xor
cmp
ja
in
roll
pop
push
out
gs
test
scas
xor
jmp
xchg
mov
fldenv
das
std
jno
xor
fnstsw
imul
outsl
ret
insl
arpl
pop
leave
cmp
mov
imul
lds
dec
lea
dec
lea
lea
dec
and
int3
push
scas
hlt
clc
push
mov
and
sub
jp
jmp
sbb
pop
mov
mov
dec
inc
sbb
call
pushf
add
xchg
fidivs
lods
pop
xchg
jb
xchg
stc
jl
jge
out
lret
xchg
shrb
jmp
and
enter
inc
sub
sbb
pop
push
or
inc
popf
xchg
pop
push
mov
xor
dec
inc
xchg
sub
sub
repz
push
adc
jns
add
jo
cmp
in
data16
imul
sbb
jle
xchg
ja
arpl
repz
mov
push
sub
mov
dec
in
or
arpl
stos
pop
in
push
ljmp
mov
jo
adc
mov
sti
iret
lea
ret
push
xchg
ror
pusha
arpl
in
jp
popw
call
ljmp
pop
adc
int3
mov
push
pop
fisubrs
fidivs
divb
ret
xchg
loopne
mov
sub
push
jns
lahf
lds
jb
movsb
cmp
test
xor
xchg
arpl
sub
sbb
and
movsb
xchg
xchg
mov
mov
fs
cmc
and
xchg
push
ja
mov
mov
xchg
je
xchg
jg
scas
cli
lods
cld
dec
mov
mov
inc
sub
test
or
xor
addr16
out
mov
sub
push
ds
loopne
pusha
mov
jbe
pop
pop
and
pop
sub
addr16
movsb
gs
shlb
mov
dec
outsb
outsb
lea
sub
and
pop
aam
mov
ret
mov
inc
pop
pop
and
push
jge
adc
call
jmp
adc
inc
rolb
loope
ret
ficoms
rolb
pop
pop
out
loope
aam
push
mov
inc
inc
jo
cmp
loopne
sbb
pop
out
dec
inc
lock
sbbb
xchg
mov
ljmp
adc
in
shrb
jle
scas
lea
sub
test
push
test
addr16
or
es
mov
pop
mov
cli
test
dec
mov
xchg
pop
dec
adc
addr16
bound
aaa
push
popa
mov
int
adc
stos
push
sbb
jmp
lods
cs
add
in
push
push
test
push
xchg
pop
inc
jbe
jae
sbb
adc
popa
or
sbb
pop
mov
stc
and
xchg
stos
lock
popf
push
testl
repz
push
out
int3
insl
hlt
adc
or
out
jmp
add
lret
sub
dec
adc
xor
push
add
lods
add
jle
ds
and
scas
es
push
in
out
mov
outsl
lods
dec
das
ja
sbb
xchg
inc
mov
push
add
jno
adc
mov
xchg
das
dec
push
push
sub
lret
mov
leave
xchg
es
lea
inc
push
jl
in
dec
pop
mov
enter
inc
popf
xor
cmp
cwtl
in
xor
push
adc
adc
lods
sub
es
insb
pusha
arpl
xor
aam
popa
repz
push
xchg
mov
pop
addr16
je
rclb
pop
loopne
jo
or
inc
scas
leave
popa
cs
add
aam
data16
arpl
lahf
and
rcrb
mov
out
push
imul
and
das
ss
iret
mov
movsb
test
jecxz
mov
jns,pn
jb
aam
hlt
inc
adc
push
xor
pop
aaa
pop
lds
movsl
stos
pop
sub
mov
jg
aam
lds
mov
lock
lds
fs
or
pop
inc
loopne
pop
lea
sub
push
xor
inc
lds
ret
adc
adcl
testl
lods
mov
sub
adc
scas
jb
minps
popf
adcb
int
ss
ret
lods
or
lods
mov
fists
leave
push
jne
add
mov
outsb
test
divl
mov
daa
sbb
and
pusha
sbb
dec
pusha
jb
inc
in
roll
dec
dec
cltd
fists
xchg
insl
jle
push
pop
jns
xor
push
and
push
mov
lds
fwait
in
mov
pop
push
popa
outsb
xor
dec
mov
push
in
shrb
xchg
fs
insl
xor
adcb
push
push
bound
gs
cmc
das
popa
cmp
xor
lods
fists
data16
sbb
ds
test
pop
push
or
cmovnp
bound
or
or
xor
xor
cmovae
arpl
popa
jbe
pusha
loop
and
je
jo
pop
jb
dec
push
mov
adc
pop
cmp
insl
add
dec
pusha
gs
dec
bound
arpl
addr16
push
ljmp
hlt
mov
sbb
cmpsl
ficoml
push
push
mov
lahf
addl
arpl
xor
sti
adc
loop
ds
push
daa
pop
cmp
stos
callw
jg
lods
xchg
out
aad
stos
notb
add
fsubl
jg
push
testl
inc
dec
inc
xchg
outsl
push
outsl
or
jns
les
aaa
jo
ret
mov
mov
xchg
cld
stc
imul
xchg
or
out
jge
repz
icebp
loope
aas
out
xor
mov
nop
sti
pushf
mov
mov
cmc
outsl
mov
repz
jl
outsb
jb
movsl
lock
aad
push
fstpl
jle
mov
xchg
cmp
pop
mull
jmp
dec
ss
cli
mov
pop
imul
adc
cmp
insl
jmp
mov
jle
mov
repz
outsb
and
cmp
cmp
icebp
cmc
test
bound
stc
imul
fsubl
lret
dec
add
pop
dec
js
arpl
in
mov
int3
dec
test
int3
mov
addr16
push
xor
push
jo
mov
lret
imul
aam
inc
lahf
lods
dec
xchg
or
leave
ret
subb
push
fdivl
mov
inc
rcll
inc
dec
insl
je
cld
xchg
fistps
dec
mov
pop
inc
pop
lea
data16
and
push
ljmp
hlt
adc
push
jge
pop
addr16
jl
xor
in
in
jl
cmp
insl
imul
in
pusha
xor
arpl
dec
push
push
and
cli
divb
cmp
sub
add
mov
xor
dec
sub
pusha
xchg
inc
cld
dec
jl
test
lea
cld
pop
fists
sbb
dec
pop
rorb
mov
dec
fists
cmp
push
sub
in
push
loop
cmp
lea
repz
cmpsb
inc
cwtl
push
jbe
mov
sub
fldt
xlat
test
add
push
pop
mov
les
insb
jp
cld
mov
cmp
xchg
dec
stc
and
hlt
in
outsb
add
xor
inc
pop
inc
ret
lock
cmpsl
popa
xor
push
gs
add
hlt
push
jbe
test
dec
imul
pop
pop
adc
cwtl
je
hlt
mov
adc
lret
cmpsb
xor
xor
adc
jno
scas
into
inc
arpl
cwtl
iret
inc
sub
lock
incl
pop
stc
push
bound
addr16
jno
es
mov
push
divl
xlat
int3
or
dec
int3
sarl
leave
xor
xor
aad
call
repz
outsb
pop
int3
movsl
popa
jb
push
push
inc
push
rol
shrb
jo
popa
dec
fs
insl
pop
shl
dec
lcall
lock
imul
stc
and
addr16
fs
jo
pop
arpl
pusha
pop
daa
mov
jge
dec
pop
push
lret
sahf
push
mov
sub
movsl
push
insw
mov
popa
push
aas
pop
rolb
aaa
add
or
lods
mov
icebp
xor
mov
mulb
sbb
clc
mov
jg
inc
je
jb
gs
imul
insl
gs
outsb
stos
fcoms
loop
cmc
or
mov
and
mov
mov
push
std
mov
lods
fs
leave
mov
lahf
pop
push
pop
scas
pop
xchg
sbb
je
cmpsb
in
ja
sub
popa
mov
or
fdivs
scas
gs
sbb
imul
pop
sti
push
icebp
ljmp
je
push
jle
loop
gs
stos
and
lods
pop
sbb
jbe
arpl
dec
or
jge
std
insl
imul
mov
imul
testl
inc
sub
inc
fists
mov
adc
subb
adc
jbe
xchg
test
cmp
jb
fs
inc
fisubs
mov
push
dec
clc
cmpl
rcrl
xor
pop
sub
pop
jmp
sbb
and
mov
lea
cld
pop
sub
imul
push
mov
insb
mov
les
loopne
mov
push
je
cmpsb
mov
ffree
adc
popa
pop
mov
shr
or
sbb
cmpsl
mov
push
xor
subl
mov
mov
stc
and
movsb
sbb
push
push
cld
xor
mov
mov
jo
lods
imul
fwait
dec
or
and
stc
sub
mov
in
inc
je
outsl
sub
and
js
ret
adc
jae
dec
jno
lods
gs
push
and
dec
xchg
cmpsl
sub
push
sbb
fcomps
pop
lret
cltd
jecxz
imul
xchg
mov
pop
lahf
aad
lods
dec
push
cmpsl
lcall
outsb
lret
or
and
pop
fs
xchg
cltd
faddl
cmp
outsl
sub
xchg
clc
pushw
mov
push
dec
scas
add
gs
test
lahf
repz
sub
xchg
jmp
push
pop
ljmp
pushf
fildl
hlt
sbb
add
fwait
adc
shll
inc
mov
sahf
xchg
or
jp
mov
mov
out
inc
jg
and
bound
sbb
jmp
popa
ja
sbb
in
dec
mov
stos
insl
in
insl
and
dec
add
ja
push
sub
pusha
imul
cmp
popf
divl
dec
in
fsubs
cmp
bound
adc
and
and
clc
cmp
dec
rcrb
sub
dec
fldenv
or
popa
roll
jb
xor
pop
push
push
imul
jle
push
jae
orb
mov
cmp
fbstp
jle
pop
lods
les
dec
inc
cmp
test
int
arpl
arpl
mov
push
imul
add
roll
or
fsubrl
loop
sbb
mov
pop
mov
add
push
clc
loop
mov
stos
mov
loop
dec
imul
and
rolb
xchg
mov
divb
outsl
inc
icebp
lcall
enter
mov
add
add
or
in
gs
mov
push
call
arpl
cmp
push
out
outsb
jne
mov
inc
pop
jbe
clc
jno
arpl
lds
addb
jno
dec
cmp
lcall
sub
pop
in
dec
mov
or
pop
jge
sbb
rcrb
inc
lea
sub
call
jmp
jno
dec
mov
push
sub
notb
mov
add
cmp
adc
outsl
mov
outsb
mull
lods
mov
mov
stos
pop
cld
inc
arpl
lods
es
sub
hlt
stc
sub
insb
scas
add
add
push
add
mov
inc
xchg
jmp
push
in
add
mov
sbb
punpckhwd
sub
xor
mov
pusha
adc
cwtl
xor
test
sti
xchg
mov
cmp
pop
jmp
jb
jne
mov
push
push
imul
arpl
xor
sub
xchg
push
push
fldt
xor
inc
gs
sbb
jae
iret
cmp
push
sub
dec
jbe
xor
pop
outsl
pop
pop
mov
add
or
test
adc
fcoml
sarb
cmp
adc
and
pop
bound
xor
cmc
sub
stos
cmp
aad
es
icebp
js
mov
gs
incb
dec
xchg
xchg
popf
sbb
popf
xchg
jmp
loopne
pop
lock
stos
subb
jns
sub
lods
inc
fists
sbb
jle
push
push
pop
arpl
jns
mov
icebp
push
mov
daa
sbb
jl
xor
jecxz
adc
dec
cmc
call
add
cltd
and
lock
jno
in
push
push
cmp
xor
test
push
push
jbe
jo
push
bound
popa
jo
xor
pop
push
outsl
mov
test
popa
cmp
pop
dec
fistps
icebp
lea
and
inc
daa
mov
pop
aaa
dec
addr16
jge
sbb
jae
into
sub
dec
xlat
fcoms
sbb
add
sub
mov
cwtl
and
mov
or
adc
sbb
jmp
inc
imul
xor
sbb
jae
push
aaa
pop
stos
cmp
jbe
ljmp
sbb
insb
push
insl
add
stos
dec
sub
stc
icebp
out
rclb
inc
movb
mov
insl
pop
pop
and
xchg
dec
inc
out
xchg
mov
pop
rcll
movsb
or
push
and
mov
mov
jb
jge
cltd
and
cld
xor
pop
lcall
repz
mov
loope
sbb
sbb
add
add
xchg
sub
add
dec
cli
xor
insb
je
popa
js
std
push
cli
lods
dec
popf
mov
repz
pop
or
gs
sub
pop
repz
inc
scas
pop
inc
mov
popf
pop
clc
sbb
adc
ss
pusha
mov
mov
stos
and
mov
pop
lds
ret
sub
insl
lea
mov
mov
aad
sbb
shl
sbb
add
xor
andb
outsl
xor
jae
lock
das
dec
push
add
insb
xor
cmpsb
mov
jb
dec
mov
push
jmp
pop
pop
out
pushl
inc
sub
ja
inc
clc
imul
pop
dec
inc
cmp
ret
jnp
dec
notb
add
mov
jae
ffree
or
sbbl
pushf
push
arpl
aad
rcrl
clc
jo
test
sub
clc
and
push
fucomp
inc
imul
jb
mov
out
and
mulb
adc
inc
adc
outsl
mov
push
jns
xor
push
insb
lahf
sub
sbb
aad
loopne
shrb
mov
mov
out
js
pusha
lds
push
mulb
faddp
push
ret
stos
jmp
out
mov
insl
cld
push
scas
fistpll
rorl
pop
add
dec
push
enter
adc
jge
dec
cmpl
dec
push
sbb
add
xchg
adc
dec
sbbb
fs
les
xor
push
cmc
mov
arpl
mov
mov
add
rcrb
arpl
es
call
xor
lods
xchg
arpl
pop
push
push
lret
mov
stos
ret
xchg
test
jo
repz
push
lret
or
in
mov
bound
addr16
imull
sbb
js
add
xor
pop
add
aas
fwait
jbe
lcall
jecxz
repz
int
in
pop
push
insl
cmc
push
imul
adc
enter
jmp
xchg
xchg
in
into
pop
add
mov
in
jge
pop
pop
xchg
stos
cmp
jl
cmc
ja
and
mov
mov
ficomps
mov
sarl
icebp
call
test
cmp
or
cmp
int
pusha
hlt
jb
mov
xchg
or
incb
mov
out
shlb
pop
fistl
add
xorl
adc
jnp
into
mov
push
imul
jb
stos
popa
xchg
imul
jb
mov
cmp
mov
bound
gs
jmp
scas
push
sbb
dec
mov
jge
mov
mov
mov
pop
xchg
inc
cmp
push
movsl
je
xchg
xchg
mov
stc
pop
shrl
and
scas
stos
scas
jp
rolb
mov
adc
fucom
jno
pusha
fists
movsl
out
mov
insl
push
xchg
push
in
cmp
outsl
out
jae
xor
loop
mov
gs
add
jg
and
lods
push
ja
sub
in
fisubs
dec
lods
fdivrs
dec
mov
pop
add
mov
stos
aas
push
jno
imul
xor
inc
sbb
pop
pop
paddq
out
mov
iret
and
add
jns
sbb
ror
pop
icebp
lcall
push
xchg
and
dec
cmp
add
pop
jae
stc
movsb
sbb
push
mov
cmp
fsubr
insl
movsl
push
and
adcl
dec
std
icebp
lret
es
add
fcompp
xchg
ja
dec
dec
mov
in
jns
fcoms
dec
pop
test
sbb
pop
adc
pop
rorl
add
add
lods
outsb
daa
jns
push
lea
dec
outsb
sbb
gs
inc
cmpsb
sahf
lret
jecxz
imul
fsubrl
or
sti
icebp
in
pusha
jns
adc
stos
inc
addr16
jle
arpl
pop
cmpsl
pop
cmp
ljmp
pop
or
dec
push
mov
es
sub
imul
mov
mov
mov
mov
repz
mov
jno
sbb
insb
bound
push
arpl
je
fisttpll
sub
dec
adc
mov
fst
pushf
xlat
imul
jmp
xchg
gs
lcall
gs
shrb
cmp
les
and
push
jno
and
leave
xor
aas
push
dec
clc
icebp
xchg
sub
mov
dec
setge
cmp
mov
adc
aam
mov
cmc
xor
test
insl
pop
data16
leave
sub
test
mov
and
arpl
add
pop
and
jo
push
loop
jecxz
pop
adc
lahf
fmuls
in
or
outsl
fdivl
xlat
fs
mov
add
xor
mov
dec
fbstp
pop
ss
fadds
inc
cld
jae
inc
mov
pop
adc
outsl
cmp
ja
insb
dec
jno
popa
xor
nop
fs
jbe
inc
cmp
push
movsb
mov
in
pop
jecxz
inc
jno
xchg
ficoms
call
xor
push
loopne
sbb
cli
sbb
xor
ds
shll
inc
loope
sub
dec
lods
repz
fisubrl
hlt
std
and
lods
imul
lea
mov
repz
imul
stos
push
adc
fists
push
jmp
in
jg
je
enter
mov
stos
cwtl
adc
xor
and
cmp
pop
and
mov
popa
mov
mov
push
repnz
push
lock
mov
adcl
insl
in
xor
bound
fmuls
fst
aad
sub
jnp
daa
xchg
subl
jmp
add
movsb
cmpsl
mov
mov
rcr
cwtl
sub
xlat
stos
or
xchg
nop
pop
outsl
lock
and
xor
mov
out
pop
xchg
fldl
add
mov
lea
inc
popa
cld
int
cmpsl
jb
imul
ss
push
push
js
xchg
call
jno
mov
xchg
jns
or
js
pop
and
pop
lcall
pop
insl
xor
pop
testb
js
or
or
cld
in
bound
mov
lds
xor
inc
and
insl
and
push
rcr
addr16
jl
lea
push
dec
jae
xor
inc
cli
int3
mov
movsl
cmp
std
adc
add
mov
add
leave
lock
mov
gs
and
int
push
inc
xchg
xchg
inc
and
jbe
mov
jb
mov
icebp
movups
xor
xor
jno
xor
sbb
jp
lods
jmp
cmp
in
sbb
scas
psllw
in
nop
push
xor
mov
sub
xchg
xchg
mov
jne
xor
mov
push
fsubl
insl
pop
inc
scas
mov
push
icebp
pop
pop
insl
jb
hlt
jno
inc
mov
pop
fldt
mov
cltd
inc
ss
jge
les
jbe
dec
xor
sbb
ffreep
xchg
in
lret
push
dec
jnp
or
push
push
dec
adc
or
shll
jo
out
mov
mov
fs
outsl
jne
xchg
mov
jmp
and
mov
mov
sub
into
push
adc
daa
push
inc
and
or
shll
cmp
bound
data16
jle
dec
lret
adc
add
jne
cmc
stc
jnp
ss
add
xchg
das
push
pop
dec
cmp
mov
mov
mov
jnp
add
dec
fstl
test
xchg
movsb
push
xor
add
test
repz
jp
xchg
push
insl
and
addr16
inc
js
les
xor
xchg
cmc
push
jno
push
daa
aas
in
dec
es
rcll
aaa
mulb
ret
mov
movb
arpl
or
mov
cmpsb
dec
xchg
insb
loope
ljmp
dec
jp
stos
mov
pop
jno
or
popa
mov
sub
jl
jmp
cmp
outsl
push
sub
cld
je
pcmpeqd
mov
mov
dec
sub
sub
jge
iret
adc
imul
push
pushf
lcall
jo
mov
fcmovu
arpl
sub
cmp
sub
mov
mov
imul
mov
jge
mov
stos
cmc
mov
lds
push
jmp
insl
bound
mov
imull
js
mov
shr
xorl
mov
scas
sub
testl
pop
fimuls
sbb
testl
aas
mov
sbb
mov
and
pop
cmp
xor
and
add
sub
outsl
mov
in
fdivrl
leave
imul
mov
jg
xlat
sub
scas
insb
dec
insl
jbe
jbe
sub
into
arpl
pop
mov
jns
mov
pop
lea
loop
fbld
aam
andl
arpl
neg
adc
mov
js
sbb
hlt
xor
jp
mov
push
dec
notl
movsb
add
int
out
mov
cmpsb
clc
cltd
arpl
xor
dec
jle
sub
sub
icebp
ja
test
mov
jmp
mov
test
adc
add
xor
ror
mov
mov
mov
loopne
scas
mov
cld
and
gs
adcl
jmp
inc
into
dec
add
xor
push
repz
jae
xchg
push
mov
jle
bound
dec
and
adc
or
dec
or
sti
xchg
and
mov
mov
stc
loopne
out
mov
addl
fldenv
jns
push
fs
push
push
mov
cld
inc
pushl
xchg
outsb
repz
dec
jmp
jle
mov
inc
fmull
subl
icebp
add
es
and
sub
test
popa
pop
and
gs
sub
adc
aaa
out
call
push
push
mov
push
dec
and
or
pop
inc
pop
xor
mov
or
and
nopl
push
clc
push
xorl
cmpsl
call
mov
add
push
subl
fcoml
pop
shlb
je
jg
arpl
pushf
aaa
inc
and
jbe
das
fs
loop
cmp
out
and
icebp
push
shl
jnp
cmp
fstpl
movsl
dec
lods
inc
mov
lds
push
sub
inc
mov
les
push
pop
sub
shr
ds
push
leave
scas
pushf
inc
movsl
mov
in
in
ds
jp
cmc
xor
cmp
int
mov
mov
inc
stos
push
cmpsb
imul
outsb
jl
jge
cmp
mov
dec
push
lods
pop
lcall
mov
test
lock
cmp
popa
jno
out
imul
test
sub
flds
pop
mov
jb
pushf
sub
movsb
fsubs
scas
mov
jg
vmwrite
inc
dec
mov
popf
push
mov
adc
imul
in
les
adc
cmp
mov
mov
repnz
push
cli
push
xchg
gs
xor
inc
imul
in
mov
jle,pt
cmp
pop
lahf
push
xchg
ret
shlb
insb
mov
mov
push
movsl
inc
lea
aam
imul
jge
push
cmp
scas
imul
sbb
mov
and
out
xchg
jns
mov
pop
testb
or
dec
sbb
ror
aad
mov
imull
xor
outsl
je
imul
dec
in
lods
mov
or
shlb
shl
and
jb
sbb
xchg
shlb
jp
push
mov
sub
das
in
faddl
fwait
xchg
daa
mov
stos
or
dec
inc
lock
xor
jg
lods
push
xor
lret
insb
lcall
shrd
and
mov
dec
or
out
lock
test
push
cs
jns
lods
jo
dec
lcall
xchg
dec
push
mov
add
jecxz
arpl
imul
insl
fadds
in
imul
dec
clc
rcrl
icebp
cmp
int
stc
outsl
out
push
fbstp
mov
insl
nop
or
sbb
xchg
gs
sbb
ljmp
inc
ss
push
mov
fmuls
loope
add
pop
cmc
iret
mov
push
imul
ret
notb
test
xchg
je
jmp
or
mov
nop
dec
mov
or
mov
popa
add
clc
mov
sbb
fcoms
add
mov
or
fldln2
and
and
cld
lods
and
push
andl
jbe
sti
icebp
xor
fstps
sbb
and
jb
pop
push
in
push
in
ds
rorb
les
pop
cs
mov
shr
aaa
stc
leave
mull
aaa
insl
mov
inc
pop
addr16
mov
mov
flds
add
mov
stc
and
xor
jbe
push
clc
inc
enter
push
inc
push
and
pop
pop
cmp
pop
jo
jg
add
lods
jo
sti
inc
in
adc
mov
popa
subb
mov
sub
add
pop
addr16
inc
and
cmp
movsb
mov
popf
arpl
je
mov
pop
mov
pop
xchg
mov
repz
mulb
pop
inc
test
cmpl
lea
cmp
dec
add
mov
insl
and
pop
cwtl
cmp
imul
push
mov
xchg
aam
push
int3
in
mov
jbe
clc
cmc
lods
in
sub
js
je
inc
push
inc
sbb
jne
pop
cmpsl
xor
sbb
pusha
jle
dec
mov
pop
shlb
xor
pushf
push
mov
dec
rcrl
fbstp
mov
xor
cmpsl
das
or
xchg
sub
ret
insl
je
mov
dec
ret
dec
lods
in
cmpsb
gs
fs
jmp
and
push
cmp
popa
das
adc
jo
xchg
pushf
mov
jmp
es
and
loop
rcrb
shll
outsl
lahf
aam
inc
jmp
mov
mov
in
in
outsl
nop
pop
dec
in
jns
sbb
xchg
xor
out
jg
insb
aas
lea
in
jmp
pop
lea
jae
mov
repnz
push
aaa
mov
je
pop
icebp
mov
pop
mov
shlb
bound
ja
cs
mov
lahf
jmp
pushw
mov
outsb
mov
rolb
fsubrp
mov
insb
and
std
insb
stc
inc
jl
push
data16
mov
stc
cmpsb
aas
test
dec
insl
push
and
aam
mov
movsb
cmp
je
and
add
dec
add
dec
xor
cld
roll
sarl
clc
and
stc
xorl
dec
mov
mov
mov
out
das
xor
mov
lock
adc
mov
sti
pop
in
and
aam
adcb
dec
pop
push
scas
dec
adc
inc
cld
inc
or
loopne
fcmovu
sarb
fdivs
sub
pop
jb
mov
jle
ja
rclb
xchg
adc
outsl
mov
mov
jge
push
int3
sub
lret
push
fs
in
mov
fwait
bound
lea
mov
cmp
dec
lock
out
jg
mov
repnz
push
adc
jge
cmp
lcall
add
cmp
jl
lock
mov
cmp
neg
mov
repnz
dec
adc
pusha
arpl
pop
in
jb
cmp
shll
cmp
jp
outsl
inc
add
in
or
ds
cmp
cld
dec
sub
clc
xchg
sub
push
lret
loope
inc
cmpsl
scas
jb
xor
inc
cmc
testb
dec
and
out
gs
inc
sub
div
pop
das
add
jge
in
ja
repz
jno
pop
sub
jae
outsb
insb
adc
cmp
aas
or
scas
dec
mov
mov
out
add
and
int3
xor
gs
mov
insl
ficomps
in
dec
movsl
and
ljmp
loop
je
inc
movsl
jmp
cltd
int
arpl
and
mov
addr16
push
in
in
cmpsb
loopne
cmp
add
add
adc
dec
cmpsb
adc
imul
arpl
fnstcw
jno
dec
insb
sbb
mov
pop
loope
cmp
ss
lock
and
pop
stc
sub
es
stc
lcall
jns
fwait
xor
test
fs
mov
cmp
adcb
insl
jmp
fnstenv
outsl
cwtl
addr16
pop
push
and
mov
jo
dec
lret
movsb
xor
pop
mov
pop
mov
fwait
push
cmc
mov
fists
outsl
imul
lret
pop
mov
push
mov
jnp
xchg
pop
clc
popa
mov
imul
push
lds
in
push
sbb
idivl
sbb
cmp
mov
mov
int3
sti
sub
nop
jbe
sti
or
adcb
inc
loopne
adc
inc
jmp
lods
sub
xchg
and
aam
subb
ja
adc
push
or
call
movsl
jle
movsb
adc
cmp
add
aas
pop
dec
sub
add
fdiv
sub
lods
out
xor
xchg
out
and
testb
jecxz
add
test
jge
inc
and
cmp
sbb
cmc
inc
sub
jge
lock
sbb
mov
sub
add
in
gs
push
pop
add
push
idivl
out
lret
cpuid
pop
repnz
popa
jecxz
dec
jmp
adc
enter
jb
dec
jbe
xchg
pushf
or
dec
adc
pop
cmpsl
jp
scas
adc
int
in
out
gs
insl
insl
cmp
lcall
cs
ljmp
cmp
out
leave
mov
sbb
sub
inc
and
outsl
pop
in
or
jns
xor
gs
xchg
sbb
out
cmpsl
pusha
jo
add
xchg
cmp
shrl
shrb
hlt
push
pop
insb
out
gs
xlat
push
xorl
idiv
popa
fs
jno
push
out
es
fbstp
jno
jge
addr16
lea
outsb
push
addl
andb
loop
push
jl
mov
xor
lahf
push
divl
sub
or
push
push
popf
and
jecxz
sbb
jbe
sarl
nop
jmp
cmpsb
call
dec
xchg
je
clc
push
scas
fadds
in
outsb
in
pop
into
push
and
jno
ret
or
sub
push
sti
mov
insl
and
and
ss
jbe
cld
cmpsl
scas
adc
jb
ja
loope
fists
ret
adc
xchg
rcrl
cmpsl
in
or
xchg
jb
ds
adc
flds
gs
dec
popa
add
loop
adc
insb
rcrb
addr16
ret
adc
lods
mov
jae
jmp
add
test
iret
add
fists
arpl
in
and
test
data16
mov
lcall
lods
ds
dec
shrl
and
repnz
flds
movsl
ss
sbb
lea
fs
cmp
push
in
and
sub
inc
mov
sub
mov
inc
bound
daa
cmc
or
rolb
ss
ret
mov
movsb
mov
int3
push
lods
int
inc
adc
jbe
adc
in
or
xor
push
insl
pop
imul
mov
xchg
and
bound
sbb
xor
pusha
lcall
push
aas
mov
mov
insl
pop
and
mov
add
cmpl
rol
jmp
arpl
xchg
mov
loop
loopne
xor
lods
inc
mov
dec
imul
jmp
lods
es
sbbl
arpl
jle
mov
arpl
push
mov
insl
cmp
cmp
mov
xor
shrl
add
add
push
outsb
notl
dec
in
out
into
sub
out
mov
cltd
clc
adc
or
push
xchg
fs
xchg
xor
addr16
data16
jae
fsubrl
or
pop
fs
dec
sub
rorb
adc
mov
pop
push
mov
ljmp
mov
and
cmpsl
je
jno
scas
jae
inc
mov
push
and
lea
push
outsl
pop
mov
cwtl
xchg
push
sub
popf
es
clc
inc
fildll
pop
in
pop
inc
lret
notb
aam
icebp
push
fiaddl
cmp
add
lea
push
mov
repz
aas
ds
insl
loop
stos
or
loop
jnp
and
shl
js
or
lahf
add
aam
cmp
inc
jmp
push
xchg
mov
cmpsl
mov
icebp
call
dec
dec
shrl
or
mov
ja
lret
jno
adc
scas
mov
test
mov
cli
xor
mov
mov
je
test
add
or
stc
dec
pop
pop
adc
push
cmp
sub
pop
inc
push
xor
mov
jp
adc
and
int3
lods
mov
rorb
push
xor
fs
pop
shl
das
push
push
loopne
push
in
hlt
xor
scas
cli
popa
and
imul
insl
sti
gs
arpl
push
mov
or
gs
jg
sub
adc
lea
dec
xor
adc
push
xor
ljmp
adc
dec
pop
bound
fimuls
cli
inc
push
lock
mov
adc
inc
push
lock
repz
pop
sbb
jae
fs
push
scas
repnz
mov
subb
sahf
xor
mov
pop
inc
dec
sub
icebp
lea
jbe
xchg
jecxz
jo
stos
sbb
pop
int
fiadds
dec
cmpsb
ds
data16
leave
lods
sti
icebp
fpatan
movb
js
push
popa
imul
mov
in
jo
jge
sub
test
mov
dec
jns
inc
inc
and
push
outsl
adc
loope
mov
psubq
mov
or
sbb
mov
and
and
jo
das
outsl
insl
ss
mov
jmp
addr16
lahf
pushf
arpl
and
in
jno
daa
push
xchg
imul
adc
jge
imul
sub
mov
fbld
or
gs
add
push
inc
daa
sbb
push
call
popa
inc
inc
arpl
pop
sub
subb
cwtl
push
js
push
xchg
push
fcmovnu
aas
and
mov
ljmp
jge
inc
mov
inc
xor
or
pop
rorl
bound
out
cmp
and
loop
je
sbbl
subps
jno
cltd
sbb
xchg
roll
inc
test
xor
stos
ss
push
sub
insl
pop
jle
cli
dec
nop
fisubs
daa
jnp
loop
leave
inc
in
jo
jae
in
decb
and
inc
aas
dec
popf
cmp
cltd
dec
xchg
inc
or
sub
jle
sbb
jge
rcrl
push
ljmp
push
or
std
rorl
adc
dec
inc
icebp
xor
lcall
faddp
mov
pop
mov
es
pop
insb
imul
gs
lods
clc
test
jmp
mov
es
fidivrs
xchg
int
addr16
lea
push
pop
cmp
ss
dec
stc
scas
insl
insb
jmp
mov
push
cmp
sbb
pop
xchg
int3
orl
popf
test
add
xor
xlat
ljmp
out
xorb
lods
dec
adc
cltd
daa
pushl
jo
cmpsl
pop
jno
ss
js
sbb
pop
lock
sbb
and
sub
jae
or
shrl
jno
pop
ljmp
pop
mov
fsubrs
out
enter
adc
xor
lret
cmpb
out
jae
push
stc
sub
dec
xor
mov
adc
je
stc
outsb
push
jmp
ret
xor
les
sbb
mov
fyl2xp1
lods
shll
jp
add
mov
ss
popf
test
sbb
imul
adc
test
inc
notl
pop
in
add
sbb
push
and
fisttpl
dec
std
and
bound
popa
dec
sub
cs
push
xor
insl
dec
fldenv
cltd
cmp
das
xor
xor
adc
popf
popa
inc
jecxz
dec
or
xchg
adc
push
daa
in
lods
and
sub
jnp
jge
dec
leave
insl
xor
jae
insb
xor
cmp
mov
gs
dec
mov
cmp
cmp
push
icebp
or
testb
data16
in
imul
and
arpl
adc
add
push
xor
pop
xchg
adc
push
inc
je
addr16
stos
jb
test
and
nop
scas
imul
repnz
sub
and
jp
adc
or
bound
in
insl
dec
jp
mov
jecxz
sbb
outsl
cmp
cmp
and
imul
sbb
lods
inc
pop
pop
test
push
lcall
pop
xchg
imul
mov
bound
add
cld
mov
fsub
jne
divb
push
pop
sub
dec
testl
jmp
jle
pop
jbe
std
jecxz
add
repz
inc
in
cmp
jl
dec
mov
fucom
xchg
pop
pusha
sbb
lea
pop
repz
cmp
repz
bound
pop
nop
in
imulb
pop
leave
ds
sbb
lods
pop
xchg
inc
fcoml
jb
gs
lods
xchg
mov
inc
lods
ja
ret
sahf
pop
pop
inc
mov
lds
lea
daa
pusha
mov
enter
incb
into
dec
dec
push
jae
dec
test
adc
xchg
fsubs
push
in
push
clc
dec
sub
dec
push
lea
movsl
pop
pusha
icebp
rclb
addr16
inc
jg
ja
xchg
jb
sub
pop
popa
pop
sub
fbstp
pop
mov
cmp
stos
lea
outsl
cmp
ficomps
push
mov
jbe
mov
dec
inc
cmpsb
movsl
loopne
jbe
loope
aad
push
aad
xor
ds
into
cld
jae
and
arpl
and
xchg
xchg
popa
mov
jmp
shl
jle
add
sarb
add
pop
int3
inc
xor
faddl
cmp
hlt
cmp
imul
loopne
and
jb
int
mov
fnstenv
dec
in
jg
lea
test
ffreep
jae,pt
insl
jle
in
insb
push
dec
test
push
inc
mov
scas
add
mov
lahf
jbe
test
jg
ljmp
dec
sub
push
pop
test
xchg
sub
jp
sub
xchg
sub
sbb
and
loopne
inc
dec
pop
add
mov
nop
fwait
or
int3
push
mov
mov
push
ss
lods
jle
lock
pop
stos
dec
inc
adc
pop
notl
imul
imul
popf
insl
pop
lea
lods
insb
pop
shl
in
aaa
mov
imul
mov
lods
add
bound
push
mov
lea
arpl
into
and
call
sub
clc
jo
and
jecxz
insb
push
gs
inc
jge
hlt
rol
mov
sbb
daa
xchg
stc
adc
sub
loopne
push
or
in
lea
push
aam
in
pop
scas
pop
insb
outsb
mov
cmp
in
or
jae
lock
pushf
push
cmc
and
js
and
push
adc
inc
in
loopne
les
lods
mov
pop
mov
mov
gs
lds
sub
enter
insl
sbb
in
nopl
icebp
arpl
jno
sub
hlt
ds
in
dec
sub
loopne
sahf
aad
mov
sub
arpl
test
xchg
sahf
lds
jle
je
cmp
in
outsl
push
mov
fcomi
inc
and
cmpsb
jae
std
jno
pushf
insl
insl
hlt
pop
mov
jno
and
pop
xchg
imul
nop
and
sub
jecxz
imul
pop
gs
push
icebp
push
cmp
addr16
dec
inc
lea
lcall
lods
adc
or
lret
push
sbb
dec
daa
mov
cld
mov
inc
js
fs
test
insl
and
pop
stos
add
je
xchg
jae
cld
mov
add
push
xchg
ret
test
negl
div
mov
movsl
test
or
mov
sahf
mov
inc
jae
add
orl
sub
leave
push
cmpsl
sbb
and
and
clc
arpl
test
xchg
xchg
mov
mov
sub
jnp
push
test
or
mov
loope
sub
mov
cmpsb
jnp
mov
imul
fs
xchg
xor
sarl
xchg
adc
push
jle
pop
negl
or
mov
mov
pop
int
push
inc
loop
leave
lods
in
loopne
ja
mov
dec
mov
xor
int
imul
addr16
cmpsl
sbb
xchg
fbstp
iret
sub
xor
sub
sub
mov
sbb
es
pop
iret
push
je
hlt
rcr
push
daa
add
push
movsl
stos
sbb
mov
sbb
cld
fiadds
push
scas
or
push
xchg
xchg
dec
push
scas
stc
in
stos
sahf
dec
test
or
push
negb
mov
xor
jns
fs
pop
repnz
dec
lods
sub
dec
cmp
jns
add
adc
lahf
sub
lcall
nop
int
sub
jl
call
mov
mov
inc
push
jmp
and
inc
insl
inc
dec
push
add
aam
sbb
jl,pn
mov
jmp
lods
dec
add
arpl
pop
aaa
sti
sbb
hlt
or
insb
add
jge
inc
jb
loopne
sub
sbb
ja
jb
dec
cs
xchg
lahf
mov
xor
imulb
arpl
xor
mov
jo
xchg
xor
in
aam
push
aaa
outsl
std
cmp
mov
dec
jg,pn
mov
insl
cmp
bound
icebp
into
stc
xor
jecxz
insl
xor
and
push
jns
in
leave
pop
mov
pop
push
sub
or
and
dec
jl
dec
movsl
jmp
call
fisubrl
bound
movsl
push
gs
in
in
lret
shll
pop
in
out
cmpsb
shl
inc
das
inc
pop
lea
inc
xchg
and
mov
test
stc
out
push
adc
mov
notl
pop
popa
xor
les
das
imul
pop
ss
insb
dec
mov
pop
pop
push
adc
xor
xor
push
das
pop
pop
test
sbb
pop
call
movsb
xchg
btc
pop
out
push
divl
movsb
xchg
ror
mov
or
lods
rcrl
shl
cmp
lea
rolb
push
inc
pop
dec
scas
mov
ja
pop
push
jge
in
mov
inc
lods
popa
movsb
cmp
dec
divb
pop
mov
cmp
sub
cld
popa
push
sbb
cmp
fwait
sub
int
lock
pop
cmp
push
dec
jnp
cltd
lock
lret
and
pop
aas
jae
roll
sub
mov
jno
cmp
ret
mov
orl
shll
jnp
lahf
push
sbb
jbe
sahf
add
and
adc
inc
xor
test
lea
repz
bnd
aaa
add
xor
cltd
mov
lcall
sbb
mov
testb
mov
rcr
xor
scas
cwtl
les
jmp
mov
xlat
xchg
inc
dec
insl
add
mov
xor
add
pop
inc
mov
jo
subl
out
arpl
xor
add
data16
imul
jg
daa
cmpb
xor
fs
imul
inc
and
lahf
outsb
jns,pt
in
movsl
in
fdiv
mov
outsl
cmp
xor
idivb
xor
fcoms
push
push
lea
cmp
and
pop
pop
push
fists
pop
dec
dec
sbb
mov
in
pop
pop
lahf
jmp
mov
pop
dec
ljmp
and
and
jo
sbb
rol
mov
fsub
popa
out
iret
int3
jl
pop
push
pop
sti
cmc
cli
jmp
lock
inc
lahf
daa
dec
xor
aas
iret
inc
iret
rolb
xchg
dec
iret
and
aad
mov
mov
into
das
lock
aaa
lret
push
pushf
jl
sbb
aas
mov
mov
push
pusha
mov
popa
in
or
stos
outsb
or
mov
dec
jmp
roll
cmp
and
mov
into
mov
aad
inc
mov
add
and
xor
mov
ss
or
outsl
xor
addb
in
add
jg
push
add
repz
dec
popa
fdivrp
jb
cmp
mov
arpl
aam
insl
ss
xchg
dec
call
ljmp
jg
lods
mov
sub
adc
jns
sub
imul
pop
jae
rcll
stos
daa
test
clc
in
sub
xchg
lock
push
out
pop
pushf
ja
aam
adc
mov
je
pop
cmp
sub
icebp
mov
lea
push
pop
mov
add
cmp
in
fs
jno
cs
cmp
test
dec
es
xor
xor
mov
jmp
ss
xor
dec
mov
and
stos
adc
and
leave
fsubrl
testb
adc
fwait
in
add
jae
int
ffreep
xor
add
movsb
jp
mov
sub
cmp
mov
mov
sub
pop
and
inc
mov
pop
push
cmp
int3
mov
push
push
lret
faddl
js
loopne
and
mov
add
je
in
or
outsb
aam
lea
mov
fs
cmp
lock
add
pop
bound
inc
addb
push
sbb
mov
fdivrl
test
mov
or
or
subl
scas
data16
call
hlt
repz
jbe
ret
push
ficoms
cmp
pop
lock
lds
adcl
jae
je
mov
xor
les
in
call
push
fisttpl
pusha
sub
lahf
mov
outsl
push
mov
xchg
in
fisubl
std
ret
stc
sbb
lahf
es
jo,pn
imul
mov
repnz
daa
add
push
lea
or
pop
sub
ljmp
inc
or
sub
divb
xlat
lea
fwait
or
cs
cmpl
push
je
dec
jle
or
ror
bnd
xor
sub
pop
jg
outsb
cltd
jp
fdivl
repz
xorl
push
arpl
cmp
xchg
loope
outsl
jbe
push
sbb
testl
or
cmp
mov
xchg
add
in
data16
add
adc
subb
in
mov
push
push
in
fs
in
and
gs
dec
insl
xchg
inc
dec
insb
mov
in
add
add
push
pop
cmpsl
inc
jle
rorb
insb
mov
mov
mov
pop
xchg
es
imull
sub
dec
inc
outsb
shr
mov
gs
fs
jae
cmp
push
scas
xor
push
aam
popa
add
push
scas
jl
or
inc
mov
repz
xor
jno
hlt
mov
rorl
xor
and
or
cmp
cltd
test
and
push
cmpsl
test
inc
scas
sbb
cmpl
imul
outsl
imull
arpl
cmp
inc
sbb
pop
setle
fcmovbe
push
add
sbb
fs
pusha
inc
pusha
dec
jo
push
mov
aad
iret
loope
in
idivb
lds
push
stc
xchg
dec
sub
push
int3
fcoml
repnz
loop
imul
xlat
shlb
popf
jns
adc
xor
push
add
lods
in
pop
xor
fisubs
lods
inc
scas
sbb
out
jb
bound
dec
mov
mov
andl
jb
mov
arpl
push
loopne
mov
icebp
sub
aas
fbstp
push
mov
sbb
or
loopne
les
mov
imul
xor
ret
xchg
daa
cmp
cltd
lea
mov
rorl
shll
sub
gs
push
cmp
xor
aam
lods
add
sub
push
mov
lods
add
clc
push
mov
aam
mov
pusha
jl
inc
mov
call
js
loope
outsb
mov
adc
jne
xchg
and
insb
push
out
sbb
js
dec
cmpsl
mov
inc
cltd
ja
adc
and
cmp
out
mov
jmp
mov
sbb
imul
and
jb
fidivrl
rcll
loop
aaa
repnz
or
push
lods
push
mov
add
mov
mov
add
add
push
mov
fsubs
cmp
dec
mov
pop
or
pop
dec
fisttps
xor
nop
mov
int3
mov
int
andl
mov
and
pushf
das
jnp
and
xor
imul
pop
add
ja
add
adc
xchg
test
icebp
aas
icebp
test
fcoml
jmp
dec
lds
cmp
inc
or
lea
add
je
sub
mov
pop
cmp
jl
adc
and
bound
xchg
and
cmc
cmp
out
daa
ja
mov
push
mov
mov
out
lcall
gs
filds
adcl
ja
je,pn
movsb
xor
lods
jg
push
insl
mov
dec
cmp
inc
push
sahf
push
jp
orb
imul
xor
imul
aas
fisubrl
call
add
std
sbbl
stc
popa
jb
mov
mov
and
add
inc
sub
sub
jnp
std
mov
pop
add
or
push
sbbb
sub
jno
cmp
and
cmp
add
pop
flds
mov
jno
sbb
jbe
outsb
ljmp
lods
lahf
sub
ret
inc
lock
and
mov
add
mov
loope
inc
xchg
cli
dec
mov
inc
xchg
lret
xor
imulb
lods
cmp
mov
mov
shl
xchg
jns
movsb
loope
or
enter
push
repz
jns
mov
pop
ret
push
ss
mov
pop
filds
push
test
imul
add
shlb
mov
and
hlt
and
shlb
mov
dec
cld
jno
cltd
fiadds
sub
enter
or
adc
lea
dec
mov
shlb
aam
mov
xchg
repz
scas
push
cmp
into
jb
jbe
add
sub
imul
dec
pop
mov
pop
insb
xchg
in
in
pop
repz
pop
jp
or
and
jl
push
and
fildll
sbb
push
push
push
clc
iret
xchg
mov
cs
dec
dec
xor
pop
imul
call
lea
cli
bound
or
jae
insb
jmp
pushf
xor
shl
push
push
pop
scas
xor
movb
cmp
mov
and
hlt
xor
mov
iret
jmp
mov
stos
subb
xor
test
loopne
subl
scas
dec
lds
bound
mov
jae
pop
imul
bound
outsb
xor
sub
add
mov
shll
inc
pop
cmp
xor
mov
inc
xchg
jge
enter
jo
mov
mov
icebp
jnp
adcl
cltd
popa
fildl
fildll
jae
bound
mov
bound
inc
hlt
pushf
push
fcoms
jle
popf
pop
in
inc
aad
out
test
imulb
cmp
and
dec
mov
sbb
or
dec
lods
dec
mov
fists
loop
jmp
pop
stos
pop
and
popa
pop
mov
xchg
dec
leave
adc
addr16
pop
mov
xchg
stos
in
add
sarl
and
jno
lea
pop
popa
fs
sub
cmp
pop
add
dec
cmpl
add
sub
aad
imul
lea
jl
psubusw
hlt
out
in
repz
hlt
fbld
out
push
dec
inc
pop
pop
sbb
mov
out
push
mov
cmpb
rcl
bound
mov
sub
das
and
arpl
push
data16
call
lods
push
push
dec
push
lods
gs
push
icebp
out
imul
and
es
sbb
adc
fcomps
pushf
push
mov
pop
repnz
aas
lcall
and
xlat
push
jmp
rorb
mov
arpl
dec
mov
or
in
xor
nop
jg
push
mov
mov
orl
lea
xchg
sub
inc
adc
sbb
push
mov
cwtl
jp
mov
lret
lock
fiadds
jno
inc
sub
aaa
dec
and
push
sbb
dec
shlb
dec
lea
inc
cli
mov
mov
mov
loop
jg
or
outsl
cmp
lret
mov
sub
xor
jae
outsb
loopne
insl
andl
mov
int
in
out
and
mov
pop
arpl
in
mov
mov
push
sarl
nop
sbb
mov
sub
jmp
add
in
adc
lcall
and
popa
lds
test
sbb
stos
ja
sub
fcomps
imul
je
fs
insl
push
mov
xor
bound
loop
xor
push
mov
jmp
imul
mov
jb
in
sbb
insb
jge,pn
adc
clc
xor
test
iret
push
sub
imul
jmp
sbb
adc
ret
rcrl
dec
cmovnp
or
mov
aaa
push
pop
fistpll
fldenv
xor
jp
jbe
adc
pop
add
jo
mov
dec
es
bnd
and
repnz
jbe
loop
adc
outsb
mov
loop
dec
sub
sub
xchg
cmp
popa
sbb
sbb
pop
cld
and
cmc
push
xchg
xor
xlat
frstor
mov
test
movsl
lea
jns
dec
int
mov
push
std
inc
int3
aaa
inc
inc
into
inc
out
inc
nop
sbb
jp
sti
sbb
aas
pop
pop
lods
jl
pop
lock
insl
mov
loop
lea
jnp
mov
aam
loopw
sub
mov
mov
jg
hlt
lea
cmc
add
add
aad
ljmp
bound
dec
jne
aaa
xchg
and
std
loopne
test
pop
xor
int
loopne
rolb
sarb
adc
insl
cli
push
test
add
mov
push
xor
jnp
insb
jo
or
dec
and
mov
sub
lds
gs
test
pop
dec
leave
adc
int
push
mov
aaa
aam
cmp
inc
fisubs
inc
xor
mov
fnsetpm(287
insl
pusha
stc
xor
stc
pop
mov
shrl
xor
mov
xchg
dec
pop
fimuls
inc
call
add
mov
lahf
sub
adc
lds
dec
push
inc
xchg
frstor
or
pop
dec
hlt
cmp
adc
and
rclb
repnz
or
imul
jno
aaa
inc
sub
cwtl
jb
or
mov
in
sub
mulb
mov
pop
mov
insl
in
call
sub
lods
adc
add
insb
out
jb
insl
aad
lea
data16
insb
lret
lahf
insl
mov
pop
and
mov
add
lods
xchg
cmp
aaa
mov
mov
mov
add
repz
icebp
adc
popf
mov
in
mov
insb
hlt
lea
dec
ds
imul
adc
and
das
jecxz
lret
rep
aaa
out
cmp
and
mov
xor
push
shll
add
les
mov
mov
jmp
jo
jmp
push
insb
addl
ljmp
lds
lods
subl
inc
faddl
dec
xchg
out
sub
cmp
insb
shr
pop
orb
pop
push
dec
xor
daa
and
jp
sbb
jns
lods
cmp
icebp
inc
mov
shrl
mov
insb
lret
mov
push
enterw
prefetch
or
dec
pop
adc
je
ljmp
ja
pop
inc
mov
xchg
cmpsb
jg
lock
fucomip
pop
cs
dec
adc
add
push
repz
pop
popa
or
xor
dec
dec
incb
fisubs
imul
roll
xor
add
add
rorb
nop
jl
dec
jge
push
stc
jp
adc
iret
push
insb
xor
push
fs
sub
rorl
scas
pop
sub
adc
add
lret
mov
mov
push
jns
cmp
pop
pop
or
sbb
jg
imul
aaa
mov
loopne
mov
add
sbb
mov
xor
inc
jae
pop
xor
cltd
lea
sbb
gs
mov
in
ds
sahf
add
aad
iret
xor
out
enter
mov
jp
cmp
pop
pop
add
jge
cmp
pop
and
push
jmp
push
push
dec
mov
pop
add
cmp
pop
jae
jle
xor
cs
lea
daa
xor
lea
neg
mov
inc
insb
mov
test
in
test
fistpll
in
push
or
sbb
pop
sub
das
hlt
xchg
cmp
and
mov
mov
shl
pop
es
sub
jg
ficompl
pop
in
fmuls
push
in
sbb
aad
cmp
fldcw
mov
push
cmp
pop
scas
mov
xor
call
lods
mov
faddl
ja
out
mov
into
lea
es
fisubs
or
shrb
js
rep
pop
or
sbb
aad
xor
or
cmp
mov
inc
out
push
mov
push
shlb
and
push
mov
movsb
jns
popa
mov
adc
repz
jo
aad
inc
clc
adc
dec
mull
stc
jmp
fwait
or
arpl
clc
adc
repz
sub
frstor
lea
orb
repnz
rol
roll
jle
and
xor
pop
xor
sbbb
ds
jae
cmpsb
es
daa
add
ficompl
insl
popa
inc
mov
imul
jno
je
add
mov
push
adc
jbe
addr16
lea
call
es
imul
jmp
and
stos
dec
pop
gs
cmpb
fs
outsb
jo
inc
lret
adc
test
loopne
scas
and
movsl
shr
jge
fbld
or
and
sbb
jmp
mov
xor
inc
je
ljmp
mov
inc
xor
add
aam
dec
push
jae
inc
dec
pusha
mov
aaa
lds
movsl
xor
out
xor
mov
dec
mov
aaa
gs
in
movups
insl
xlat
or
mov
inc
popf
inc
std
push
jmp
push
scas
outsl
adc
push
jnp
mov
sti
je
in
cmp
xchg
cmp
call
adc
xor
add
mov
pop
scas
daa
dec
mov
push
cmp
push
icebp
jle
push
lods
ljmp
popa
cmp
mov
xor
xor
mov
imul
pop
and
xchg
test
sbb
movsb
mov
call
or
jbe
loop
pop
loopne
xchg
lret
nop
sub
xor
pop
jbe
xchg
lea
rcl
and
cmp
pushf
jne
insl
cmp
test
ss
mov
or
xor
lea
mov
shl
call
xchg
inc
mov
mov
and
lods
sbb
dec
add
xor
pop
jno
test
pop
std
cmp
xor
sub
push
jge
xor
cmpsb
ret
cmpl
fs
jb
add
or
popa
ja
pop
adc
fidivs
add
bound
insb
in
bound
sub
xchg
pop
aad
aaa
and
lock
test
dec
pushf
inc
pop
inc
push
jns
je
cmp
xchg
and
addr16
jns
sbb
ret
mov
jle
inc
cmc
push
cmp
les
cmp
sbb
outsb
sbb
mov
xor
loop
cmpsl
jo
adc
cwtl
daa
loope
mov
repz
push
cmp
arpl
pusha
addr16
es
aaa
push
cs
pop
sbb
lods
sbb
and
enter
xchg
in
xchg
pop
adc
sub
mov
out
add
dec
dec
dec
es
mov
lock
add
pop
and
add
sbb
rcll
mov
mov
repnz
mov
and
mov
ss
add
lock
cmp
in
das
xor
xor
dec
mov
xchg
jge
ror
daa
sub
pop
inc
inc
add
cmc
in
xor
out
outsl
cmp
in
daa
mov
xor
loop
stc
mov
aam
xchg
xor
mov
adc
pop
or
das
aaa
mov
pop
test
addl
ret
loope
pop
fmulp
sub
ja
and
dec
das
call
adc
lahf
dec
subl
mov
les
lock
jmp
inc
orl
jecxz
das
addl
mov
inc
sub
ja
inc
bound
adc
adc
js
rcll
jbe
cmp
jnp
negl
xor
jl
arpl
cmp
push
pop
ret
fisubrs
in
cmp
add
lods
xor
push
adc
test
jo
xchg
std
sub
adc
xchg
stos
sub
push
lock
pop
mov
adc
sbb
mov
push
fbstp
movsl
cmpsl
insl
movsl
loopne
dec
sbb
ja
sub
lea
cmc
ret
ss
stc
fstpl
gs
mov
fidivl
adc
or
lds
iret
out
test
add
cmc
jg
mov
lods
popl
sub
xor
xor
inc
lcall
pop
mov
mov
pop
mov
rolb
in
push
rorl
pop
fwait
dec
shll
inc
mov
jp
cmp
shll
cmpb
mov
dec
or
rcrl
ja
out
lea
in
push
pushf
xchg
jno
test
jo
popf
hlt
push
shll
cs
jbe
sahf
add
push
xor
push
pop
xor
push
insl
xor
sub
lea
out
cmpsl
cmp
push
lret
lret
pop
scas
sahf
or
jecxz
movsl
mov
dec
ja
xor
mov
add
neg
sub
pop
dec
jge
shll
fdiv
stc
cmc
mov
push
add
cli
hlt
mov
ja
int3
jp
cmp
cmp
cs
mov
adc
and
cmp
gs
sub
adc
add
and
gs
dec
mov
jle
add
sub
data16
jo
jg
aam
ret
outsl
sub
or
push
adc
push
and
lock
lahf
mov
mov
or
jecxz
and
adc
and
popf
cmp
loopne
movsl
cs
mull
adc
inc
push
jb
sub
jnp
push
insb
sbb
int3
fs
and
cmpl
sahf
xor
je
jmp
dec
xchg
icebp
cmp
push
das
fcompl
push
mov
pop
mov
lea
mov
pusha
and
dec
and
pop
mov
sbb
mov
repz
jo
dec
inc
push
push
push
insl
jns
add
pop
sub
sti
jge
jmp
lea
bound
scas
daa
add
aad
dec
scas
pusha
xchg
rcll
dec
mov
loope
repnz
and
das
cmc
lods
lret
or
jb
scas
push
sub
sbb
cmc
xor
aad
lock
dec
gs
push
addl
adc
mulb
add
mov
jecxz
icebp
icebp
mov
pop
enter
ljmp
das
push
dec
jns
cmp
add
movsl
xor
xor
incl
cld
addr16
iret
pop
aaa
add
cmp
shlb
xor
lock
xor
loop
fwait
mov
xor
loop
mov
jge
arpl
sbbl
xchg
xchg
inc
imul
xor
popf
aam
cmp
mov
movsl
inc
pop
mov
fdivrs
in
cmp
and
mov
lock
push
push
movsl
imull
popf
pop
xchg
movsb
push
xchg
mov
jnp
push
sbb
inc
outsl
jge
jns
in
pop
bound
stos
lcall
loope
xchg
xor
adc
loop
addr16
aaa
scas
das
addb
cld
clc
jecxz
insb
pop
pop
pop
lock
cli
ljmp
imul
dec
add
scas
mov
push
and
cltd
xor
xchg
jl
push
mov
add
jno
lahf
aam
adc
push
cmc
ja
aam
pop
push
gs
movsl
jb
push
call
mov
push
inc
out
and
ret
and
adc
dec
mov
cli
out
lahf
loop
xor
or
inc
xchg
dec
jge
std
add
je
lcall
dec
lea
push
cmp
sub
cmp
or
shrl
jge
sbb
pop
push
pop
pop
push
cmp
cmp
dec
xchg
add
ja
jl
mov
sbb
pop
push
xchg
and
nop
pop
inc
lcall
sti
repz
mov
xchg
add
sarl
ret
inc
outsl
dec
sbb
popf
loope
popf
sub
pop
mov
jns
adc
jle
cmp
push
add
xor
rcrl
sbb
jo
popa
out
sub
in
dec
xor
aad
dec
std
fcomps
ret
insl
and
pushf
inc
dec
lods
mov
repz
cmp
add
sbb
xor
in
enter
inc
xchg
push
inc
mov
mov
push
sub
insb
jmp
sub
mov
popa
loope
xor
inc
pushf
sarb
dec
clc
mov
sbb
stc
arpl
inc
gs
jecxz
jg
daa
in
movsl
push
inc
cmp
dec
mov
test
adc
jbe
jle
les
jns
filds
pop
test
sbb
insb
sar
sbb
insb
lods
jbe
cmp
xor
push
fiadds
repnz
mov
sarl
sbb
xor
add
xor
js
je
push
jbe
imul
dec
ficompl
sbb
imulb
insb
jg
cmc
xor
daa
std
pushf
inc
hlt
and
pop
jp
lock
mov
mov
cmp
jno
lea
jae
sub
or
sub
stos
cmp
jmp
das
xor
mov
dec
insl
test
imul
in
mov
push
inc
aaa
je
pop
mov
popa
std
inc
or
gs
inc
popf
mov
add
sub
mov
adc
sub
lea
addr16
test
insl
addl
pop
loop
dec
imul
movsl
mov
add
hlt
mov
push
loop
mov
lods
push
adc
adc
inc
cmp
and
in
cli
inc
or
xor
popa
pop
stos
popf
sbbb
push
aad
or
stos
sub
push
jae,pn
clc
scas
adc
or
mov
ret
add
lcall
and
divb
fnstcw
dec
dec
ss
cmp
fcmovnu
bound
out
roll
test
shll
mov
inc
sbb
int
arpl
push
lods
outsl
gs
rep
les
or
xor
bswap
pop
shl
das
jge
or
push
dec
ficoms
je
cmpsl
sbb
and
sti
cmp
jmp
lahf
pop
shrl
outsl
shlb
mov
cmp
movsb
mov
jbe
sub
jle
or
inc
mov
in
scas
sbb
pusha
sbb
dec
push
xchg
sbb
pop
cmp
pusha
pusha
jbe
arpl
ljmp
sbb
mov
rcrl
or
lret
and
xor
mov
aam
add
xor
xchg
jge
dec
pop
xchg
mov
stc
mov
test
orl
mov
add
int
filds
enter
mov
fiaddl
sbb
cmp
ret
mov
and
mov
dec
in
pop
loope
add
fs
add
repnz
xchg
leave
adc
push
call
jg
shrl
cmpb
inc
sub
sti
adc
lds
rclb
call
push
xor
mov
cmp
push
jl
insl
dec
insl
arpl
gs
jg
mov
xchg
mov
mov
push
pop
pop
outsl
movsl
fdivs
adc
push
js
outsl
and
pop
lret
sub
movsl
mov
and
sti
sub
cmc
pop
repz
shlb
cmp
jae
mov
sbb
xor
jns
ds
add
imul
mov
fstl
sbbl
test
rcrb
fmuls
cmpsl
dec
lock
jmp
pusha
outsl
loopne
xor
cmp
mov
sub
mov
mov
sub
int
sub
test
loopne
mov
add
outsb
repnz
and
pop
daa
mov
lods
movsl
ss
mov
jno
test
clc
inc
outsl
xor
clc
sbb
rcrb
ljmp
test
mov
popa
test
push
mov
aaa
dec
push
and
dec
icebp
popa
outsl
cmp
jmp
rcrb
jecxz
push
xchg
lods
je
outsb
inc
pushf
lea
push
sbb
cmc
lods
or
pop
lret
nop
add
cmp
insl
pop
dec
jmp
inc
mov
arpl
push
insb
lcall
stc
insl
mov
mov
in
mov
popf
test
in
push
fsts
std
loopne
mov
add
dec
xor
add
mov
or
pop
jnp
push
cmp
add
sub
imul
dec
movsl
les
repz
or
sbb
lahf
rorl
insl
dec
icebp
out
adc
jge
xchg
mov
inc
mov
cmp
fstl
jns
push
mov
mov
push
data16
insl
pop
leave
xor
arpl
bound
cmp
pop
mov
test
test
out
pop
scas
loopne
jmp
pop
out
js
jp
shll
or
push
pop
jns
pop
mov
test
addr16
jmp
ficomps
das
jns
fstl
add
in
xlat
lret
sti
fwait
mov
aaa
xchg
outsl
jo
jmp
inc
loopne
mov
sub
push
fdivl
mov
sub
sbbl
xchg
mov
pop
mov
push
movsl
shr
xchg
sbb
cltd
mov
cmp
xchg
std
cli
imul
xor
dec
das
xor
or
mov
xchg
dec
inc
data16
mov
jbe
fldt
cli
mov
sbb
sbb
insb
xor
sub
cmp
dec
mov
fwait
out
ss
testb
xchg
test
mov
pop
data16
cmp
dec
arpl
jle
mov
adc
fcmovu
sbb
repz
clc
andb
repz
and
lret
aam
aam
int3
cmp
mov
xchg
insl
inc
or
push
and
stos
lock
pop
sbb
inc
add
inc
pop
in
and
cltd
push
dec
add
xor
data16
inc
and
jno
ffree
outsb
js
xor
mov
lcall
ljmp
mov
jle
xlat
arpl
jmp
add
aad
movsl
sbb
inc
mov
xor
imul
xchg
push
sub
xchg
push
jmp
cmp
ficoms
push
jle
jno
mov
imul
jae
push
ret
and
pop
shlb
dec
lea
xchg
xor
push
insl
push
gs
push
insb
xor
es
adc
push
sti
sub
into
cs
rclb
xchg
popa
aad
cld
std
enter
lock
adc
aaa
dec
adc
pop
rclb
repnz
jb
outsl
cmc
adc
and
sahf
lret
data16
rorb
scas
nop
dec
jbe
xchg
clc
pop
or
xor
cmp
ds
push
pslld
jbe
sub
fidivs
imulb
stc
popf
stc
imul
call
dec
js
or
dec
push
ret
cmp
btr
push
hlt
mov
add
mov
inc
xorl
mov
mov
mov
cmpsb
jl
push
and
jno
mov
daa
insl
cmp
push
xchg
cs
out
fsubrs
push
push
push
insb
inc
mov
xchg
adc
cmc
lods
inc
daa
lock
jmp
les
int3
jge
sub
cli
mov
ret
xor
out
fdivrs
notb
ffree
add
adc
movsl
dec
inc
pop
jg
arpl
jg
loope
inc
jecxz
popf
push
push
dec
hlt
call
adc
cmp
and
inc
add
outsl
cmp
fidivrl
lock
filds
aas
iret
or
rcr
clc
jo
pop
dec
pop
adcl
mov
and
jmp
lea
sbb
fs
pop
push
xor
outsl
fbld
test
jb
divl
dec
fdiv
add
cli
jg
gs
push
pop
mov
and
lea
js
pop
in
push
push
mov
bound
imul
sahf
xchg
fistpl
jp
lcall
push
testb
daa
dec
inc
xchg
sbbb
adc
inc
xlat
call
add
sbb
ljmp
dec
dec
xchg
mov
pop
sub
push
and
lret
lods
add
mov
or
leave
sbb
or
adc
fnsave
stc
pop
jp
inc
js
sub
or
pop
shlb
arpl
lea
mov
loope
mov
cmp
dec
xchg
push
inc
push
and
mov
popa
xor
sbb
cltd
pop
ds
xor
mov
rorb
rolb
call
es
push
xchg
js
pushf
lcall
orb
and
ds
sbb
mov
mov
inc
jmp
inc
jns
dec
in
mov
cmp
setns
mov
sti
stos
push
or
sti
push
adc
dec
or
push
pop
xor
lods
mov
das
cmp
sbb
popl
jecxz
mov
xor
or
sub
sbb
add
adc
add
push
xlat
jae
das
scas
mov
sub
cmp
imul
sbb
jp
or
mov
lea
mov
push
mov
mov
ja
cmpsl
jle
lahf
push
out
std
cmp
or
subl
and
ja
sbb
add
cmp
sbb
pop
dec
fs
cmpsb
adc
fnstsw
jp
mov
add
repz
inc
repnz
xchg
inc
incb
cmp
push
stc
sub
ja
and
jecxz
jo
mov
lret
daa
mov
pusha
arpl
cmp
mov
xor
add
cmpsl
sbb
mov
cmp
mov
data16
outsb
mov
popa
aad
xchg
sbb
adc
daa
adcl
xchg
cmp
xchg
dec
dec
dec
push
cmpsl
std
cmc
push
popa
jl
push
cmpl
jge
lea
cmp
push
push
add
sbb
mov
add
add
add
fwait
mov
jp
mov
fmull
das
xchg
xor
in
pusha
lea
adc
fnstcw
xchg
cli
cmp
repnz
sbbb
adc
add
data16
icebp
imul
add
adc
pushf
cmp
dec
loopne
pop
jge
push
dec
sub
outsb
dec
add
aad
pop
in
in
push
inc
cmp
push
arpl
pusha
fs
cli
sbb
loopne
sub
call
adc
and
pop
imul
mov
fadds
repz
adc
repz
shl
dec
aas
sub
gs
pop
inc
xor
in
out
rcr
push
pop
pop
sub
mov
andl
xchg
pop
push
nop
cmpsb
ss
adc
push
and
fcompl
shll
xor
sahf
cmp
xchg
dec
dec
fs
cs
loopne
adc
roll
lea
xchg
mov
fsubl
enter
pushl
dec
dec
fmul
mov
insl
rcll
and
cmp
adc
int3
or
pusha
xchg
loop
pop
insl
pop
pushf
adc
orl
add
pop
and
push
arpl
mov
fwait
cmp
or
and
pop
jns
imul
pop
and
enter
xchg
inc
lods
dec
cli
add
xor
loop
inc
dec
add
das
shlb
and
cmp
dec
gs
adc
repz
sbb
add
test
pop
add
jno
rcll
aaa
mov
dec
in
inc
adc
mov
jns
jge
frstor
cmpsb
and
arpl
sub
sub
lret
lock
ret
call
movsb
push
lret
cmpb
push
insl
and
scas
or
hlt
sahf
sbb
lods
pop
or
inc
rolb
ret
push
sbb
mov
jg
sub
cmp
push
fstpt
sahf
fs
pop
push
dec
mov
faddl
insb
mov
rorb
lret
andb
stc
mov
out
imul
out
outsl
subl
cld
aaa
mov
dec
sub
das
xor
and
ret
mov
outsl
movb
scas
or
inc
inc
xor
stos
gs
push
cli
test
test
inc
fs
and
cmp
mov
jnp
out
cmpsl
cwtl
mov
adc
jns
xchg
insb
inc
adc
insl
das
fcmovu
out
mov
or
jns
and
xchg
fldenv
loop
pop
out
xor
push
int
shlb
inc
inc
pop
and
jnp
mov
push
mov
jmp
movsl
hlt
pop
or
inc
mov
jne
nop
add
outsb
push
or
pop
mov
dec
jb
cmp
jnp
dec
sub
and
in
aas
sbb
dec
imul
inc
mov
shll
lods
scas
lahf
push
imul
call
jl
rorb
sub
aaa
fdivl
arpl
fldenv
aad
jmp
aam
and
cmp
xor
pop
jmp
jne
stc
xchg
jb
add
popf
pop
sbb
cmp
xchg
pop
mov
add
js
test
ja
fwait
cmp
sub
jl
test
cmp
xchg
fucom
lods
test
mov
ja
jge
pop
xor
in
jp
fwait
or
and
jge
rorl
mov
inc
xor
stc
pushf
insb
add
std
loop
mov
or
shll
aam
data16
push
pop
lds
gs
jo
aaa
loop
push
xchg
iret
xchg
mov
adc
jl
push
xchg
stos
push
fstp
inc
inc
jecxz
sbb
push
or
por
pop
movsl
dec
hlt
bound
out
or
imul
inc
arpl
arpl
push
mov
lods
pop
jb
jo
xor
pop
pop
insb
repz
mov
xchg
lods
adc
add
outsl
imul
lds
leave
or
loop
sahf
mov
fbld
lock
xchg
out
icebp
push
add
rclb
nop
bound
fdiv
or
lea
lods
es
dec
dec
mov
ja
xor
outsb
mov
cmpl
adc
ljmp
lea
outsl
pushf
dec
rcll
or
fisttps
popa
or
cld
dec
jno
ret
mov
sbb
pop
sbb
repnz
and
outsl
dec
les
dec
mov
daa
es
fs
pop
pop
sub
mov
mov
push
pop
pop
add
push
jb
jmp
add
push
dec
xchg
hlt
mov
int3
insb
and
mov
jbe
lods
ss
imul
mov
push
or
inc
dec
sub
sub
push
xchg
jbe
insb
and
testb
mov
lea
gs
sbb
xor
adc
push
in
aam
pop
pop
int
mov
leave
in
push
lods
outsl
mov
add
add
xor
and
xor
imul
lcall
mov
lret
jbe
push
lret
shrl
cmp
sqrtps
fxch
xor
adcl
lcall
bound
xchg
inc
mov
pop
cli
loope
fsubrl
sub
jnp
push
fcomps
repz
xchg
insl
push
imul
or
adc
mov
or
js
push
shrb
push
xor
dec
mov
pop
outsl
fwait
sbb
sbb
adc
or
cltd
loop
jp
push
mov
mov
ss
scas
mov
inc
inc
xchg
pop
adc
in
std
movsl
xlat
aam
in
popa
jbe
lea
and
cmc
cmpsl
adc
scas
mov
es
lea
xor
push
mov
mov
mov
cmp
and
rorl
cmpsb
jge
rep
rorl
or
lods
jg
or
lea
sbb
mov
pop
fcompl
test
mov
xchg
gs
or
js
jb
push
pop
push
push
in
hlt
sub
gs
in
mov
bound
push
pusha
cmp
stc
push
push
xor
in
and
add
dec
jno
push
repnz
push
sub
loope
ja
icebp
jno
jae
dec
or
insb
pop
fxch
iret
and
lret
cmp
xor
push
int
mov
pop
and
imul
and
sbb
xor
jne
adc
mov
cs
cli
push
pusha
gs
xor
pop
fmuls
jae
gs
stos
mov
xor
and
imul
pop
adc
bound
or
js
mov
inc
bound
lock
je
lods
pop
mov
insl
arpl
inc
push
insl
xor
gs
jno
and
pop
push
push
xchg
hlt
push
add
and
dec
hlt
mov
xor
or
insl
mov
stc
out
je
outsl
sar
xchg
arpl
pop
lds
mov
jge
jnp
stos
adc
mov
push
dec
mov
xor
jmp
dec
inc
enter
jae
mov
out
je
lretw
add
enter
pushfw
mov
loop
jge
int3
or
pop
cmp
into
push
sbb
repz
out
shr
outsl
mov
mov
adc
push
imul
je
scas
jmp
xor
inc
in
pusha
dec
ret
fs
lea
xchg
or
and
in
xor
adc
inc
add
pop
scas
push
insb
ret
stos
xchg
jge
push
push
push
sbb
mov
sbb
repnz
add
jno
push
in
mov
arpl
sub
lret
negb
je
push
jbe
push
dec
add
lret
jbe
push
cmp
or
inc
mov
xchg
lods
mov
adc
push
mulb
xor
popf
in
mov
mov
mov
add
inc
stc
icebp
loope
mov
xchg
in
bound
lret
dec
gs
and
mov
xor
inc
push
das
lock
inc
jns
arpl
in
push
mov
movsb
daa
adc
inc
aam
inc
inc
imul
pop
cmpb
out
cmpsl
dec
cltd
aaa
add
cli
sub
pushf
imull
xor
push
or
adc
pop
pop
dec
jns
xor
sub
dec
loop
and
aam
mov
or
mov
and
push
shr
xor
dec
aam
mov
or
jns
insl
leave
mov
pop
or
cmp
push
push
loopne
mov
call
loope
dec
call
fisttpll
pop
sbb
sbb
icebp
inc
ss
stos
sbb
mov
loopne
xchg
mov
mov
push
dec
pop
jns
pop
and
mov
lret
ja
inc
adc
js
stc
cmp
lcall
repnz
push
sub
in
ds
rcll
out
push
repnz
test
mov
jle
lahf
pop
and
jns
xchg
daa
and
and
insb
push
outsl
cmp
sar
xor
inc
cs
and
cmpsb
int3
mov
hlt
jmp
int
cld
or
shl
cmpsb
sub
stos
nop
mov
out
pusha
lea
push
insb
jge
and
in
popa
roll
or
jno
ljmp
xor
adc
jmp
fcomip
cmp
fnstenv
hlt
bt
jbe
in
xor
xchg
jp
out
xor
and
gs
fsubr
out
lods
push
sub
mov
das
loop
jp
arpl
pop
push
push
jno
sub
cmpl
fwait
push
sub
sbb
xchg
jle
mov
gs
ljmp
inc
lods
adc
inc
adc
mov
inc
and
insb
in
out
lock
lea
cli
aam
mov
mov
bound
xchg
and
or
add
pop
xrelease
push
mov
sub
mov
out
add
jl
dec
cs
mov
push
and
arpl
push
gs
gs
mov
insl
sbb
mov
gs
pushf
and
mov
sub
daa
pop
leave
jae
movsl
das
jbe
xor
add
pop
mov
xorb
cmp
cld
and
push
jmp
push
rcrb
popa
loop
dec
push
stc
data16
mov
gs
push
cwtl
data16
pop
and
loope
stos
inc
sbb
cmp
stos
pop
xchg
mov
adc
mov
inc
jb
jbe
popa
in
sbb
mov
add
sub
adc
mov
popf
push
mov
push
mov
and
push
test
dec
sub
out
fldcw
loop
fs
rcll
dec
dec
in
mov
fildl
cltd
aam
sbb
insb
sbb
mov
insl
push
outsl
imul
pop
mov
add
push
scas
ja
and
pushl
call
daa
xor
fimuls
sbb
dec
push
lret
push
mov
call
xchg
jp
aad
subl
gs
arpl
or
add
das
pop
or
cmp
lret
and
and
adc
imul
adc
mov
sub
xchg
divl
push
push
pop
inc
push
mov
adc
fstl
lods
and
pop
cmp
das
cmp
jle
addr16
sub
pop
int
dec
mov
inc
dec
mov
es
and
cmpl
jge
movsl
sub
push
lea
and
sbb
dec
std
inc
cmp
frstor
push
pop
sahf
jmp
and
sbb
cmp
in
xor
and
sbb
loop
xor
arpl
fstl
and
pop
cmp
cmp
insb
inc
mov
test
pop
pop
mov
loop
push
mov
and
pop
ja
fmul
inc
cltd
xorb
and
xor
bnd
xor
les
xchg
sbb
dec
dec
int
test
push
mov
gs
inc
jo
mov
push
fsubrp
shl
das
and
mov
cwtl
clc
jl
mov
inc
add
push
jl
jmp
adc
add
sbb
repnz
or
sub
adc
fbld
add
cmpsl
scas
mov
jbe
mov
push
xor
pop
rcr
pop
lea
pop
push
dec
loope
aas
lea
push
pop
push
shlb
in
imul
mov
push
test
inc
es
int3
adc
outsl
pop
mov
dec
fdivr
dec
pop
clc
mov
jge
js
jne
jb
test
and
sub
lds
mov
and
mov
xchg
mov
jb
fmuls
cmp
test
les
daa
in
xchg
sub
mov
or
sar
jo
scas
gs
mov
js
in
xchg
mov
inc
stos
pop
push
scas
das
dec
pop
je
das
sub
in
push
inc
sub
ljmp
push
rorl
lahf
fimuls
sahf
cmp
lahf
cmc
mov
adc
cltd
roll
clc
int3
repnz
dec
jns
and
div
testb
imul
cmpl
icebp
sub
and
mov
inc
xor
fisttpl
ja
sub
add
sub
xor
cltd
jo
mov
dec
fsubl
pop
lea
jne
jp
push
fistl
or
lock
pop
pushf
clc
jo
push
inc
xor
dec
data16
dec
je
test
cmpsb
sub
in
std
scas
mov
ret
repz
xor
xchg
push
lahf
notl
imul
adc
aad
inc
vcomisd
in
js
scas
add
lahf
out
roll
or
fsts
daa
into
mov
incl
daa
and
cwtl
dec
mov
push
add
dec
jmp
mov
xor
gs
jmp
add
jbe
jp
les
adc
sbb
push
sbb
dec
pop
add
aam
adc
or
aam
push
aad
lea
xchg
mov
movsl
mov
xlat
inc
inc
or
test
ja
sbb
fstpl
mov
fs
mov
pop
cmp
add
sub
jmp
mov
jns
and
sbb
imul
xchg
je
add
add
in
repz
xchg
adc
adc
mov
test
pop
cmp
hlt
rcrb
out
mov
jmp
pop
mov
cmp
pop
xor
not
xchg
ret
add
adc
pop
pop
and
adc
xchg
test
xlat
cmp
add
push
ljmp
cmpb
cmp
pop
daa
add
daa
pop
push
les
and
cmpl
clc
into
dec
mov
clc
pop
sahf
and
lods
adcb
pushf
jmp
rcll
fdiv
mov
adc
mov
repz
arpl
and
out
shrb
stc
ljmp
mov
xchg
loop
test
inc
sub
popa
adc
mov
je
mov
xchg
jbe
bound
pop
push
mov
rcrb
add
push
xor
scas
add
fsubrp
pop
sbb
push
add
cwtl
sub
xchg
mov
mov
and
add
sub
aam
inc
and
jbe
stc
dec
xchg
popa
loopew
mov
xchg
ja
pop
repz
add
orb
fbld
ds
pop
dec
mov
adc
push
inc
push
cmc
mov
std
adc
outsl
mov
dec
sbbb
mov
je
inc
push
fs
popa
movsw
in
inc
lea
popa
scas
mov
sbb
pop
jecxz
aaa
add
push
mov
movsb
sbb
pop
lea
and
movsb
xchg
inc
jno
pop
int3
jno
mov
stc
aad
sub
jno
cmp
jmp
loope
cmp
in
cmp
repz
jecxz
arpl
jl
sbb
jb
movsb
add
dec
lahf
bound
shlb
jo
mov
lock
jno
int3
dec
sub
bound
in
insb
dec
bound
imul
dec
pop
mov
push
mov
pop
lods
repnz
cmp
sbb
push
xchg
in
jge
mov
sub
pop
xor
push
and
inc
sbb
fimuls
add
or
push
scas
push
pop
jnp
adc
sub
mov
out
negl
cmp
xor
jge
push
test
pop
je
and
gs
cmp
jae
mov
sbb
decb
push
or
push
add
mov
lahf
adc
push
and
repz
mov
or
stc
xchg
popa
sbb
repz
push
jo
shlb
push
lea
test
or
fwait
je
xchg
pop
and
shlb
cmp
xor
jbe,pn
in
push
fisttps
jg
repz
pusha
inc
xchg
jno
mov
dec
scas
jno
shll
or
testb
or
cmc
testb
aad
loop
out
adc
jcxz
imul
sub
les
mov
mov
sub
mov
dec
add
scas
int3
out
cmpsb
icebp
xchg
jno
lds
in
jo,pn
repnz
in
popa
jl
sub
dec
sbb
xor
add
pop
jmp
cli
fidivs
cmpsb
sub
imul
and
push
pusha
mov
out
loope
cmp
pop
js
xlat
test
insl
popa
je
xor
icebp
jge
mov
divl
adc
dec
adc
xor
jb
jb
in
ror
mov
gs
movsl
lea
cli
repz
or
pop
jle
push
loop
cld
out
push
jb
sahf
pop
hlt
dec
cld
pop
fidivrs
out
mov
dec
repnz
es
aaa
test
pop
and
sub
divl
pop
or
test
sbb
cmp
aam
pop
mov
ret
stos
popa
je
xor
cld
es
andb
daa
loopne
int
das
jnp
jb
in
jg
add
movsl
push
and
enter
inc
sahf
shll
push
cld
push
fs
aaa
push
xlat
lock
loopne
pop
lcall
and
fisttpl
sub
jae
sbb
mov
push
pop
cwtl
mov
aad
dec
ljmp
dec
lock
push
push
pop
push
add
push
in
lods
leave
jo
add
icebp
add
add
add
cli
das
push
jno
je
push
addr16
and
pop
repz
loop
insl
xorl
mov
out
call
ljmp
add
addr16
mov
cmp
ljmp
outsl
push
or
mov
repz
daa
pop
stos
les
out
mov
addr16
adc
fistps
jo
jge
loopne
int
imul
add
mov
icebp
inc
in
shl
pusha
adc
mov
lea
mov
cmp
inc
push
out
xchg
inc
xchg
jmp
stc
push
inc
dec
mov
add
ret
dec
xor
push
outsb
and
pop
add
add
and
imul
sbb
dec
mov
dec
insl
add
in
pusha
cli
push
ja
xchg
add
mov
jb
jg
jmp
sub
fs
rorl
imul
fadd
fs
test
push
les
cmp
pop
das
gs
and
cmp
nop
ds
push
inc
cmp
lea
xor
mov
push
mov
gs
cmp
arpl
pop
xor
mov
cmp
insl
dec
and
and
in
pop
push
jmp
and
pop
xchg
js
mov
push
push
lea
lods
insl
leave
frstor
insl
adc
mov
rorl
push
push
push
cld
jno
movsb
push
sti
xor
pop
adc
dec
lds
mov
in
sbb
popa
sub
mov
sbb
ss
inc
das
bound
pop
fisttpl
pop
sbb
nop
mov
fidivrl
push
add
add
test
movsl
dec
bound
mov
movsb
insb
pop
sbb
std
into
push
mov
mov
mov
xor
sbb
push
lock
push
lock
popa
sub
push
inc
loopne
fs
adc
dec
mov
mov
clc
push
xor
xchg
mov
call
mov
pop
stos
xchg
add
or
repz
lea
aad
xchg
lods
pop
push
jo
xchg
push
in
cmp
lods
repz
jae
scas
mov
mov
aas
in
repz
cmp
pop
push
adc
lods
push
sti
xor
add
std
stc
or
fstpt
sub
sub
inc
ds
fadd
jb
pop
mov
fidivl
sub
roll
loop
imul
dec
mov
lods
mov
rcrl
inc
lds
sbb
dec
repz
imul
clc
jno
mov
jle
imul
xor
push
enter
adc
add
insl
imul
repnz
jns
dec
mov
pop
pop
xor
aaa
lods
shr
push
push
cmp
in
dec
push
insb
aaa
ljmp
mov
icebp
cwtl
std
adc
pop
lret
fdivrl
xchg
inc
test
loop
repz
mov
shlb
cmpsl
es
mov
movsb
ret
lods
mov
mov
ror
gs
icebp
jns
lret
xor
icebp
inc
lea
jmp
inc
dec
sub
pop
jo
push
and
imulb
cmp
jb,pt
notb
cs
add
jmp
adc
xchg
mov
scas
sarl
sub
and
add
add
jmp
movsl
xor
imul
jno
int3
or
lahf
jge
imul
jge
std
imul
stos
testb
lcall
mov
mov
inc
je
xor
mov
xchg
into
loop
daa
outsl
test
into
insl
pop
xchg
push
or
or
pmaddwd
jae
xor
dec
cs
lock
mov
mov
xchg
je
test
push
adc
in
and
add
pop
repz
push
xor
mov
mov
mov
jae
dec
jl
sbb
add
fcompl
mov
mov
mov
adc
push
in
add
daa
mov
jnp
ljmp
fs
sbb
push
sub
jg
xor
push
pop
jo
xor
cmp
sbb
xor
mov
ja
ret
sub
jne
lock
sbb
xchg
jae
arpl
movsb
push
add
mov
in
call
shlb
mov
data16
cmp
in
or
mov
pop
orl
sbb
outsl
int
int
mov
shlb
sbb
sti
lret
add
imul
sub
mov
mov
inc
mov
sub
and
push
fildl
arpl
in
jo
imul
and
sub
push
mov
pop
js
fcompl
push
jbe
xchg
xor
cmp
outsb
sub
jb
lods
mov
xor
push
lcall
cmp
jns
ljmp
push
imul
push
icebp
fmul
dec
sbb
push
cld
arpl
jno
push
in
jae
int3
lret
inc
jge
ja
jmp
mov
add
inc
jno
xchg
shr
clc
sub
das
mov
cmp
push
cmp
mov
xor
incb
insl
or
mov
bound
jb
sbb
and
int3
adc
push
movsl
dec
scas
and
ljmp
aas
ss
mov
sub
arpl
and
icebp
pop
push
jns
shll
jae
sbb
mov
cmp
and
jge
loope
fisubrl
insl
arpl
data16
and
cmp
pop
gs
imul
cltd
jae
popf
lahf
popa
stc
mov
jo
jle
in
arpl
sbb
xchg
mov
xor
in
aam
sub
test
mov
lret
gs
add
dec
sbb
mov
in
ja
loopne
fsubrs
mov
imul
adc
popa
insl
dec
in
push
inc
xor
xchg
cmc
or
popa
xor
fldt
in
dec
mov
xchg
and
push
imul
or
lds
or
or
and
sbb
or
pop
xchg
in
dec
aaa
jecxz
and
jo
mov
mov
fldt
mov
lods
pop
cmp
sub
fsts
sub
sub
in
cmp
sub
sbb
outsb
insb
xor
int
pop
mov
dec
inc
mov
and
jl
insb
pop
je
fchs
push
rcr
adc
pop
std
sti
mov
mov
pop
icebp
xor
cmp
pusha
in
fs
int
jmp
fldenv
jmp
sbb
mov
sub
xchg
stos
xchg
sub
lods
adc
andl
mov
paddusb
fsts
gs
popw
push
gs
push
mov
enter
stos
push
sbb
pop
test
fimuls
mov
or
or
xchg
popa
adc
adc
aad
lea
xchg
loope
sub
fucomp
sahf
cli
shll
push
cmp
imul
jb
push
pop
mov
jae
xor
arpl
mov
insl
sbb
imul
hlt
jg
xchg
js
loop
popf
sahf
decl
pmullw
mov
rcll
lahf
insb
pop
adc
dec
sub
ljmp
cmp
push
fbstp
pop
out
lcall
mov
add
test
hlt
inc
push
daa
lcall
cmp
mov
pop
xor
push
icebp
or
push
jmp
sub
mov
mov
push
aaa
mov
in
jecxz
and
imul
hlt
inc
cwtl
std
aaa
jnp
cmp
cmp
sahf
mov
outsl
stos
inc
loope
inc
fidivs
je
gs
mov
jo
pop
arpl
movsl
stos
popa
sahf
fwait
sbb
xor
and
mov
and
jnp
mov
mov
sub
int3
lods
push
dec
aam
jecxz
lret
inc
cmp
and
out
sbb
loopne
sub
gs
sub
jno
frstor
jo
aad
add
bound
push
pusha
out
and
bound
pop
in
mov
imul
rcrl
sub
jo
inc
pusha
dec
sub
cmc
mov
mov
outsb
nop
xchg
bound
dec
dec
insb
lea
stos
dec
xchg
ja
push
inc
imul
inc
out
xor
in
xchg
push
xor
lea
call
mov
fcomps
or
imul
es
push
push
ljmp
daa
out
neg
out
cmpb
cmp
and
cmp
je
lea
arpl
int3
cmp
jmp
popa
loope
fiadds
cmp
xor
rolb
push
insl
and
insb
repnz
js
int3
mov
outsb
addr16
data16
testl
xchg
sub
popa
cmp
test
pushf
sar
mov
roll
fstpt
mul
bound
mov
pop
and
jns
pop
in
test
inc
insb
cmpsl
lret
test
in
sub
insb
xchg
imul
test
dec
cmp
dec
aas
fiadds
xor
mov
rcll
andl
cmp
sbb
in
test
cmp
fisubs
mov
popa
cli
fucomip
xchg
testb
xchg
mov
mov
cmpl
cmp
aad
mov
mov
outsl
es
bound
pop
call
and
pop
jge
mov
jbe
add
mov
cmp
jecxz
clc
mull
jecxz
and
gs
xchg
push
adc
lea
ljmp
arpl
dec
xchg
xor
dec
sub
add
and
je
fisubs
shl
jg
mov
loop
push
clc
insl
fcmovnbe
cld
and
jg
pop
mov
fldenv
push
sbb
in
lods
imul
popa
ret
shll
leave
xor
fs
lods
jae
in
lret
shrl
xor
lods
lods
mov
stos
jmp
xor
pop
stos
fisubs
cmpsb
mov
or
out
call
dec
inc
xor
in
jae
xchg
test
push
cmp
dec
sbb
test
push
lea
push
mov
push
jno
subl
aas
push
cmp
sbb
ret
les
test
cmp
sub
push
xor
inc
jmp
pop
fnstenv
into
negb
out
sbb
or
pop
and
xor
and
in
insb
in
bound
push
jno
pop
dec
push
dec
pop
insl
cld
mov
fnstenv
jl
cmp
and
jge
movsl
stc
push
mov
pop
mull
mov
pop
cmc
jnp
xor
imul
jmp
outsl
paddusb
fdiv
stos
hlt
addr16
push
mov
pop
inc
dec
ja
sbb
sbb
popa
aas
push
fs
jb
xchg
es
jle
add
inc
fisubs
lods
pop
jge
hlt
hlt
in
add
mov
sub
xor
lock
or
jl
loopne
push
push
sub
in
jno
mov
mov
pushf
and
jns
in
aas
fsubs
sub
sbb
jmp
push
jmp
addl
xchg
xchg
vpmuludq
push
push
cltd
dec
push
pop
cmpsb
leave
imul
mov
sub
xor
dec
sbb
push
in
dec
je
and
inc
js
call
add
add
in
out
int
inc
ds
fs
sub
sub
mov
jb
sti
and
aaa
and
stos
jb
pop
icebp
ss
dec
cmpsb
sbb
jle
lock
data16
rcll
push
mov
cmp
aaa
insl
sti
repnz
scas
sub
gs
sahf
push
bound
minps
dec
arpl
mov
xor
imulb
or
jmp
or
pop
push
mov
roll
inc
cmp
dec
cmc
pop
imul
jo
je
sub
xor
outsb
pop
shrl
loope
mov
mov
lods
push
jnp
scas
int3
out
mov
sub
into
xchg
mov
jecxz
jae
loopne
cmpsl
lcall
das
xor
jge
cmpsb
out
inc
mov
xor
enter
icebp
dec
lea
in
lds
cmpsb
mov
idivb
and
mov
jbe
scas
movq
ja
or
xor
and
andl
push
push
xchg
dec
dec
adc
mov
mov
outsl
jns
test
jno
dec
xchg
mov
pop
icebp
jmp
xchg
dec
jnp
cli
jg
out
test
or
fildll
outsl
jge
dec
sub
jmp
outsl
push
sub
xchg
dec
push
sbb
std
data16
mov
add
jo
repz
popf
ljmp
jb
gs
dec
jge
es
xchg
jmp
cmp
and
dec
jne
jmp
mov
mov
ss
fs
mov
aas
and
pop
outsb
xor
in
sbb
lods
or
adc
ret
mov
loopne
iret
push
cli
lret
add
mov
add
adc
cmp
and
mov
jne
fwait
and
add
or
gs
and
dec
stc
out
js
mov
xchg
and
push
and
cmp
dec
out
cld
subb
dec
mov
add
jbe
dec
xlat
cmc
stc
mov
lret
inc
pop
dec
and
pop
insl
mov
jo
cmp
and
and
fs
and
jle
mulb
lret
sbb
sub
and
out
dec
push
in
sbb
push
stos
pop
sub
loopne
es
pushf
imul
pop
hlt
push
cmpsb
int
add
loop
fdivl
inc
stc
inc
jno
pop
push
mov
adc
cli
add
fdivp
push
pop
pop
arpl
je
jb
call
stos
lret
lods
push
dec
popf
stos
loop
pop
js
mov
xchg
pop
sub
add
mov
pop
cmpsl
ror
mov
jle
mov
loop
jo
and
lret
push
and
mov
call
add
loop
repnz
lods
sbb
sub
sub
sbb
jno
subl
fisttpl
fwait
push
mov
jmp
stos
arpl
cmp
and
das
out
sub
aas
insb
mov
adc
cmp
mov
mov
mov
imul
mov
mov
fbld
push
mov
clc
push
inc
notb
fiaddl
in
dec
xlat
hlt
push
dec
push
mov
adc
lret
and
movsb
call
cs
gs
jmp
dec
push
jo
fists
rcrb
mov
sbb
repz
data16
shrl
inc
xor
sub
imul
inc
xor
or
mov
pop
leave
jl
fs
outsb
pop
xchg
or
dec
je
loop
arpl
or
mov
xchg
pop
popf
or
or
and
or
loope
cmp
insb
or
stos
ficompl
inc
sub
fildll
add
rcl
ja
and
scas
mov
and
add
pushf
xor
or
dec
inc
hlt
inc
pop
mov
xadd
add
cmp
sub
cmp
jnp
mov
and
int3
push
sub
mov
movsl
rol
and
stc
in
imul
pusha
popf
and
sti
bound
push
fwait
inc
neg
add
inc
xchg
fcoms
sbb
lods
out
xchg
lods
jecxz
mov
lret
in
mov
rorl
inc
and
jnp
push
jge
adc
mov
ret
popf
and
push
xor
aam
aam
push
mov
mov
xchg
int3
jle
dec
xchg
jle
sub
push
or
xor
sahf
or
jg
div
imul
gs
lret
cmp
pmulhuw
sbb
or
jno
inc
lcall
xor
lea
pop
pop
sbb
fisttpll
nop
jno
outsl
pusha
sti
int
xchg
cli
dec
and
sti
loopne
jmp
out
pop
insl
xor
or
imul
out
xor
push
int3
mov
lea
mov
mov
or
push
rcll
popa
xorl
in
xor
jecxz
sti
push
xchg
xchg
movsl
push
divl
sahf
jl
ficoms
in
fsubr
inc
mov
pop
pop
andl
push
jno
xchg
or
loopne
shlb
enter
pop
je
add
repz
add
out
neg
xorl
push
sbb
fldlg2
popa
lea
inc
nop
mov
sahf
mov
jne
div
xchg
mov
xchg
jae
mov
and
xor
call
and
jp
xchg
xchg
xor
arpl
loope
pop
idivl
jp
insb
jbe
stos
jge
arpl
jnp
push
sti
xchg
addr16
mov
jge
and
mov
xchg
push
push
pop
mov
push
outsl
push
inc
or
pop
popa
add
xchg
push
pop
mov
add
ret
ljmp
filds
test
jb
push
or
lcall
enter
or
clc
popa
jb
cmp
insb
or
pop
and
add
pushf
add
test
and
pop
and
out
into
imul
mov
fwait
push
sub
jl
jmp
sbb
push
push
jecxz
fidivl
dec
xchg
repz
addl
imul
rcrl
xchg
mov
fucomi
xorb
sub
push
push
mov
shrb
pushf
cli
pop
sub
test
movsl
test
mov
jp
loop
or
ljmp
scas
add
push
add
jp
add
sbb
pusha
push
out
sti
push
sub
fnsave
daa
mov
mov
adcl
aas
pusha
das
xor
cmp
mov
push
dec
sbbb
push
gs
test
push
stc
xlat
add
stos
or
jnp
in
xor
popa
pusha
xchg
xor
or
js
out
jns
and
inc
jg
mov
sbb
pop
jge
or
leave
daa
or
adc
mov
jp
aaa
jmp
xor
into
xchg
or
pop
shlb
mov
enter
jg
test
out
scas
sbb
cmp
insb
sbb
gs
imul
addb
aad
idiv
push
mov
jecxz
lret
xchg
loopne
addr16
iret
dec
and
xchg
push
xor
jg
add
push
cmpsl
in
pushf
out
dec
xchg
or
fists
mov
sbb
pop
inc
into
lods
inc
pusha
sti
aad
mov
xor
pop
leave
scas
nop
sti
adc
add
lock
push
cmpsl
jecxz
ja
and
push
ror
pusha
xchg
dec
sbb
jl
jb
gs
jbe
or
inc
out
dec
cmpsl
sti
insb
mov
and
dec
cwtl
mov
mov
insb
add
repz
int3
stos
and
bound
insl
sti
lea
xchg
stos
mov
jmp
pop
stos
int
push
fimull
pop
test
testl
xor
loopne
insl
lds
xchg
push
inc
cmp
dec
pop
xor
test
push
jmp
pop
dec
add
jne
push
les
add
add
lods
sbb
mov
sub
xor
aam
xchg
xchg
or
dec
push
push
dec
je
aad
dec
cmp
and
jae
push
jbe
xchg
sahf
push
insb
xor
bound
and
sbbb
out
shll
xor
mov
das
pop
and
pop
cld
jmp
in
and
adc
in
mov
xchg
dec
int3
jno
fadds
dec
pop
gs
and
jmp
jle
outsb
imul
mov
adc
sbb
aad
gs
aam
push
cltd
mov
dec
fs
fidivs
sub
clc
add
mov
push
shll
dec
jecxz
mov
enter
lods
fidivs
push
mov
shlb
out
jo
sbb
fcmovnbe
stc
and
dec
xor
sub
cmp
and
shl
xor
mov
inc
pop
sti
push
adc
mov
stc
mov
cwtl
pop
bound
sub
push
sbb
idiv
inc
mov
fst
pop
outsb
jp
mov
gs
pop
jno
xchg
dec
lods
out
stos
dec
sub
daa
push
repnz
push
push
fs
mov
inc
jae
xchg
fsubs
fldt
lock
sub
shll
push
mov
push
dec
rcrl
popa
jecxz
dec
shlb
test
loop
mov
or
aaa
addr16
add
clc
add
cld
dec
test
inc
xchg
sbb
inc
mov
insl
data16
repz
inc
cs
cmp
popa
stc
push
fdivrs
inc
jno
cmpsb
pop
lcall
aam
mov
mov
push
jae
xor
testl
jecxz
jo
sbb
lret
and
lret
aad
pop
dec
ljmp
in
xor
call
outsb
ss
mov
sub
js
and
sub
jge
mov
xchg
in
aam
das
ljmp
jmp
and
dec
jbe
adc
cmpsb
movl
mov
push
cmp
mov
insl
mov
mov
dec
shll
dec
and
xor
shrl
out
aam
push
pop
xorl
lods
dec
and
lock
xor
ss
ret
js
sub
or
inc
push
jl
ljmp
adc
scas
out
lahf
dec
or
dec
insb
dec
repz
das
adc
into
leave
in
xor
imulb
mov
xor
xchg
stos
inc
outsl
dec
pop
imul
imul
iret
arpl
mov
pop
sub
lock
mov
repnz
push
fs
lahf
inc
or
or
and
fsubr
test
pop
aaa
xor
mov
xlat
clc
mov
ljmp
mov
xor
dec
aad
cmp
int3
add
arpl
repz
lds
outsb
pusha
or
jo
popa
data16
das
sub
orb
pop
mov
arpl
loope
sbb
jbe
fstpl
mov
jno
mov
sbb
push
mov
xchg
mov
gs
pusha
aam
je
rorl
mov
outsb
push
lea
mov
ljmp
jae
aaa
lock
arpl
mov
and
popa
mov
cmpsl
or
ljmp
pop
push
or
jecxz
std
jbe
add
rolb
xchg
xchg
dec
int
sahf
xor
pop
sti
xor
push
loop
xchg
sbb
notl
adc
mov
push
shrl
test
pop
jb
int3
push
leave
fnsave
scas
jmp
sub
or
mov
or
or
fwait
pop
xchg
and
and
cwtl
je
lea
fisubs
outsl
loopne
and
sub
icebp
and
mov
jae
sbb
daa
cmp
ljmp
repnz
jl
das
ret
dec
fisttps
cs
in
push
cmp
gs
push
lahf
pop
push
jge
or
or
jg
sbb
push
pop
into
jo
in
xor
cmp
pop
mov
es
pop
mov
call
dec
popf
dec
and
cli
xorl
push
sahf
rcr
and
aas
div
add
aam
add
mov
insl
jo
call
jge
xchg
add
out
dec
cld
jbe
inc
fnstsw
jns
jb
sub
leave
jp
adc
rorb
jecxz
and
mov
pop
and
lea
pop
and
sub
mov
jae
lock
stc
jo
add
adc
and
mov
dec
in
xor
dec
add
sub
arpl
xchg
jmp
and
or
dec
sbb
repnz
sbb
cmp
shrl
jle
pop
das
ja
repz
jno
daa
add
adc
paddq
std
pop
mov
hlt
shll
or
push
inc
popf
push
and
movsb
lock
and
ret
jecxz
mov
call
push
lods
push
jbe
dec
push
jecxz
jae
jge
and
sahf
cmp
rcrl
je
sub
mov
and
and
lea
dec
sbb
enterw
push
into
add
cmp
loop
test
sub
in
xor
mov
pusha
inc
mov
dec
lret
dec
or
andl
push
sub
lods
or
loop
pop
cmpl
xor
pop
pcmpgtb
add
pop
and
arpl
add
mov
data16
sub
mov
addr16
mov
push
or
imul
das
pop
std
fs
pop
aaa
mov
xchg
cmp
stos
ret
mov
inc
sub
mov
sub
sub
mov
in
add
sbb
push
mov
js
lea
xor
pop
mov
push
push
pop
in
pop
xchg
or
and
int
fwait
or
pop
lock
push
cmc
lret
or
add
idivl
mov
jp
nop
mov
mov
xchg
cs
pop
js
and
int3
or
into
test
sti
jmp
inc
fists
dec
es
jmp
pop
pop
movsb
and
mulb
cmp
out
mov
push
insl
jg
pop
lea
stc
lock
scas
das
add
push
cmp
pop
loop
enter
and
test
lret
xchg
out
push
push
inc
outsb
push
inc
shl
lea
sub
jl
mov
mov
imul
mov
lret
adc
filds
dec
mov
fnstcw
sub
std
loope
bound
fsubrs
adc
les
inc
or
mov
sbb
enter
in
xor
or
adc
outsb
xchg
insl
das
out
sbb
or
outsb
idivb
cmp
add
lods
cmc
clc
push
xchg
jae
icebp
adc
cmp
imul
push
out
popa
xor
jmp
std
push
scas
into
sub
and
mov
xchg
cmp
addr16
push
in
popa
and
xor
mov
outsl
cmp
adc
sbb
scas
loope
jge
in
ss
push
jno
es
mov
aas
xor
mov
pop
rcrb
iret
cmp
sbb
add
lock
or
pop
rol
add
push
mov
pop
shrb
pop
inc
jae
cs
mov
stos
mov
cmp
mov
cmp
insl
clc
adc
subb
cmc
int3
imul
dec
bound
popa
cmp
shlb
addb
imul
jbe
adc
mov
jo
lea
sahf
sub
stos
cmp
mov
fs
dec
add
pop
and
pop
jp
dec
popf
adc
pop
lret
adc
or
pop
jb
clc
dec
andl
pop
jns
lock
lock
and
int
sub
mov
and
imul
js
push
sbb
mov
and
jmp
push
int3
data16
push
jg
lahf
rorl
lcall
es
pop
sub
fildl
iret
cwtl
xor
ja
pusha
ret
dec
push
pop
dec
cld
dec
rorb
add
lea
cvtpi2ps
adc
outsl
dec
in
pop
inc
in
mov
les
mulb
cmc
test
add
shll
xchg
mov
movsb
lock
jns
push
hlt
dec
dec
pop
pushf
into
dec
std
je
mov
in
loope
mov
outsl
add
sbb
inc
push
and
mov
inc
imul
mov
inc
cmpsl
push
or
xor
bound
dec
xchg
or
mov
int
pop
fistl
lock
test
lock
fcmovne
inc
outsb
dec
cmc
fldt
loop
cwtl
int
lds
inc
inc
pop
repz
imul
outsb
gs
mov
xor
push
hlt
pop
pop
lea
mov
mov
imul
add
ja
adc
add
jb
mov
or
inc
int
inc
jle
testl
nop
out
fwait
sbb
jae
jne
mov
cmpb
inc
or
push
push
ljmp
mov
cmp
xor
push
dec
push
int
xor
cmp
cmc
and
ret
sbb
inc
cmp
mov
insb
leave
ja
inc
xor
jle
xchg
sub
outsl
mov
int
outsl
inc
sbb
cld
fs
lock
mov
punpckhbw
inc
test
fs
sbb
shll
out
fs
outsb
push
aas
inc
add
mov
or
sbb
mov
sub
shrl
inc
add
or
inc
cmp
in
rorb
sub
out
push
lea
imul
cmp
sub
cld
mov
jg
sub
bound
pop
hlt
sbb
faddl
sub
cmovo
or
iret
jae
mov
aam
mov
pushf
inc
rcrl
movsl
in
int3
arpl
dec
mov
ljmp
repnz
leave
fwait
push
sbb
xor
xchg
xlat
int3
pop
gs
lret
cs
pop
xor
insb
jg
popf
dec
push
jbe
and
lret
xor
lret
xor
adc
dec
decl
adc
mov
mov
cld
sub
adc
repnz
sbb
insl
cmp
call
ja
sub
cmp
repnz
cmp
insb
adc
sar
sub
fsubs
loopne
jmp
dec
and
sub
mov
test
lock
insb
xor
repnz
mov
lahf
loop
and
jno
xor
bound
mov
in
push
jge
mov
bound
arpl
add
fmull
lods
cmp
imul
ljmp
xor
mov
aad
and
test
jecxz
xchg
adc
repz
pop
push
jbe
push
jno
cmc
lret
aam
inc
dec
mov
insl
clc
and
test
cmp
inc
mov
test
mov
pop
inc
sub
data16
jge
inc
and
jle
jb
popa
pusha
das
dec
imul
test
pop
fwait
mov
dec
mov
mov
outsb
arpl
addr16
adc
addb
mov
in
cmp
lods
outsl
push
gs
aaa
dec
ss
and
mov
adc
sub
in
pushf
push
sub
jp
mov
or
pop
addr16
push
popa
test
pop
and
push
call
inc
mov
jae
icebp
in
xlat
movsb
std
shl
pop
xor
hlt
test
inc
gs
inc
or
aas
mov
popa
loop
icebp
fisttpll
cmp
jne
push
add
outsb
push
test
fidivs
sbb
dec
in
test
push
and
dec
cmp
sub
sahf
xchg
daa
jae
xor
pop
arpl
adc
shr
daa
popa
in
inc
imulb
jo
jge
inc
pop
pop
add
push
xor
push
std
cmp
rcr
lds
sub
shll
sbb
push
faddl
mov
cmp
cmp
jecxz
adc
dec
in
xchg
pop
je
insb
outsb
push
and
outsl
negl
daa
mov
or
dec
lea
movsl
xor
inc
pusha
pop
jo
jmp
imull
push
pop
test
sbb
mov
add
cwtl
shlb
ja
pop
or
mov
out
mov
ja
cwtl
sbb
in
mov
lock
mov
jns
add
adc
pop
cmp
push
rcr
push
lea
mov
sub
mov
dec
shl
inc
in
inc
or
icebp
mov
mov
fisubs
pop
lahf
xorl
push
cmp
push
or
push
nop
cmp
and
subb
outsl
sbb
fs
add
loope
ja
test
xchg
movsl
pop
hlt
mov
add
mov
lret
jo
movzbl
sub
inc
int3
scas
sbb
jnp
ss
dec
insl
je
or
jmp
xchg
lret
mov
jp
push
fsubrs
mov
push
inc
arpl
push
rolb
arpl
and
sub
pusha
push
sub
leave
cmpsb
repnz
jno
sahf
fs
ljmp
add
push
push
xchg
daa
imul
dec
sahf
mov
xor
repz
inc
aad
adc
call
or
in
sub
mov
imulb
pop
js
push
add
pop
mov
cmp
repz
jg
addr16
cs
call
dec
call
aas
mov
jge
and
filds
push
or
mov
mov
and
sub
scas
push
and
hlt
shrl
push
repz
pop
test
inc
sub
sub
mov
das
mov
push
mov
dec
pusha
outsb
stc
adc
js
mov
ss
push
jb
pop
mov
xchg
mov
shll
sub
pop
add
test
push
outsl
jmp
inc
rol
movsb
xor
mov
aaa
lea
test
xor
sbb
mov
cmpsb
test
cmp
popa
jns
imul
pop
sbb
shll
stc
pop
jle
push
fsubl
push
fsubr
sub
jno
push
loop
jns
popf
ja
lods
sub
jge
cmpsl
rcrl
push
inc
test
js
xor
pop
test
push
jb
fs
sub
push
mov
sbb
pusha
imul
sub
repz
sahf
xchg
sub
stc
jns
sbb
xchg
outsb
inc
xchg
inc
mov
cmp
fs
mov
xor
cmc
mov
push
jmp
std
mov
loopne
mov
in
and
inc
inc
sub
sub
sti
gs
jmp
mov
xor
sub
es
sbb
cmp
lock
sub
jb
xor
flds
inc
and
sar
aam
in
mov
aaa
cwtl
sub
adc
jns
xor
mov
out
jne
sub
xor
and
mov
mov
sbb
stc
in
mov
push
xchg
cmp
sti
sub
popa
jmp
ret
cmp
int
mov
jns
push
inc
push
push
sub
int3
cmp
push
enter
mov
inc
lea
stc
push
cli
and
stos
imull
jmp
mov
fs
add
aas
jo
stc
insb
mov
and
pop
pop
and
mov
pop
jmp
pop
push
dec
fmull
push
rcrb
xchg
sub
dec
mov
xor
lea
push
test
insb
dec
lea
lods
push
mov
lea
cmc
mov
imul
lds
xor
push
fsubrp
xor
mov
mov
push
sbb
shrl
jnp
gs
mov
nop
ds
movsl
inc
mov
sbb
mov
mov
add
and
imul
jo
out
mov
outsl
jp
adc
inc
push
push
adc
adc
xchg
pop
bound
cmp
pushf
inc
je
bound
push
xchg
mov
lods
mov
loope
cmp
cltd
arpl
ja
dec
repz
push
dec
fdivs
jp
repz
bound
aad
jl
or
lock
jecxz
jnp
scas
push
cltd
insb
push
add
mov
mov
leave
fucomip
mov
dec
cmp
divb
add
dec
in
lahf
testl
mov
test
lcall
jmp
inc
cmp
cmp
dec
in
jg
and
sub
or
sub
or
mov
jg
arpl
in
data16
pusha
hlt
bound
push
addr16
pusha
lds
add
dec
lahf
xor
imul
mov
out
mov
sbb
or
add
sbb
pop
mov
loop
mov
shr
cmc
mov
icebp
xlat
repnz
insb
ss
fsubl
xchg
in
push
add
or
cmp
aad
stos
rclb
movsb
test
dec
call
jle
and
gs
jo
ds
dec
pop
fs
inc
adc
fsts
test
jmp
mov
push
lds
std
movsl
or
inc
leave
inc
dec
ret
ljmp
push
out
repz
jg
lea
sbb
insl
enter
jnp
and
mov
popa
jle
push
mov
push
call
push
lahf
dec
jecxz
aam
popa
divb
pop
dec
lea
sti
loopne
arpl
int3
push
fistpl
stc
xchg
ds
rol
mov
sbb
idivb
cwtl
pop
mov
push
mov
cld
gs
daa
lea
lret
add
and
sub
shll
fwait
or
insl
test
pop
in
ds
out
xchg
jo
outsb
out
jmp
popf
pop
es
int3
outsl
in
imul
adc
xor
pop
scas
cmc
lea
pusha
xor
add
lea
inc
cmp
pop
xor
push
gs
pusha
popa
insl
dec
jmp
push
xchg
xor
and
xor
xchg
mov
insb
fs
mov
mov
or
shr
ret
mov
lea
mov
data16
test
inc
lods
xorl
decl
pop
sbb
xor
dec
cwtd
popf
jno
ja
mov
cmp
push
pop
cs
jp
fisubrs
lea
mov
sbb
in
inc
mov
xchg
mov
pop
adc
pop
mov
inc
aam
test
imul
data16
scas
jb
cld
pop
shrl
inc
divl
cmpsb
pcmpgtd
hlt
pop
inc
lods
jle
ljmp
imul
push
jo
xchg
push
pop
jns
jecxz
stc
jno
lea
sahf
jp
push
xor
sarb
cltd
sbb
mov
adc
xor
adc
popa
leave
mov
cltd
insb
out
gs
les
clc
or
loope
xchg
subl
xlat
push
dec
add
fisttpll
sub
sub
dec
ljmp
sbb
inc
push
outsl
dec
xchg
fs
inc
hlt
outsl
adc
lea
popa
mov
and
ds
add
cmp
pop
test
inc
mov
inc
jno
bound
cs
push
sbb
daa
sbb
lock
sbbl
jbe
cld
aas
push
data16
popa
imul
dec
lcall
or
mov
push
mov
xchg
lds
adc
lods
sub
fiaddl
cld
fistps
imul
xor
ljmp
sbb
in
aad
sbb
ret
sbb
push
xor
push
cwtl
shlb
xorl
sub
cld
cmpsb
movsb
in
cmp
mov
cld
push
aas
xorl
lea
andb
fs
aas
in
xchg
add
hlt
lock
cli
push
hlt
shrl
push
cmp
jg
in
in
scas
enter
and
xor
clc
pop
mov
movsb
pusha
cs
int
push
dec
sub
in
mov
sbb
je
and
fmuls
outsb
leave
pop
xor
jle
and
xchg
popf
cmp
or
gs
add
xchg
pop
add
addr16
or
gs
sub
leave
dec
lahf
jno
imul
dec
mov
or
in
cs
rcrb
jno
cmpl
push
jecxz
aam
mov
push
inc
xchg
in
hlt
push
idiv
mov
popa
daa
lock
lods
cmp
cmp
shrl
into
jmp
cmp
cld
add
inc
sbb
xchg
imul
pop
xor
mov
daa
ljmp
cmp
lods
jmp
push
jmp
jns
inc
sbb
in
dec
shl
repz
cmp
in
outsb
dec
hlt
push
aam
repz
pop
and
push
in
pop
or
ss
or
fldt
mov
mov
mov
cmp
jbe
cmp
jno
cmp
adc
sbb
arpl
mov
push
cmpb
fs
inc
push
pop
fidivl
loopne
in
pop
cmp
push
data16
push
pop
sub
mov
gs
mov
sbb
daa
imul
gs
push
aam
mov
adc
pop
dec
nop
jecxz
test
shr
jmp
int3
push
aas
rclb
push
xor
in
lock
gs
xchg
cmc
fs
pop
aad
xor
int
pop
or
insl
daa
out
in
pop
shll
jg
xchg
add
mov
jae
mov
jb
rclb
scas
shll
or
leave
push
fistps
sub
push
dec
jmp
push
dec
pop
hlt
xchg
inc
lods
mov
ljmp
aad
xchg
insl
jb
stos
in
daa
and
mov
push
cmp
jno
sbb
inc
lock
sbb
push
adc
jae
add
lea
aad
aad
sub
aad
hlt
mov
iret
inc
pusha
push
add
mov
or
jns
test
lcall
xlat
aas
and
data16
pop
outsl
popa
adc
adc
xor
mov
inc
fstp
scas
leave
addr16
jo
jecxz
cmp
lods
pop
lea
and
insl
push
pop
add
sub
in
inc
pop
push
jb
mov
adc
sbb
scas
cli
inc
jbe
imul
insl
push
filds
adc
mov
pop
pop
xor
xor
pop
insb
push
push
dec
add
adc
and
xor
mov
push
lcall
leave
cltd
popa
cmc
jp
imul
push
scas
jbe
mov
sbb
adc
push
and
mov
add
jmp
dec
and
mov
adc
outsl
mov
or
add
and
or
loope
xor
fmuls
or
cmp
ja
pop
iret
ret
test
sbb
stc
sbb
mov
jo
inc
icebp
mov
cwtl
cmp
xor
hlt
jbe
mov
mov
cmc
std
pop
shl
xchg
scas
xchg
enter
incl
mov
jbe
add
lahf
fucomip
and
mov
adcl
push
lds
mov
shrb
inc
lahf
push
and
imul
cmp
adc
pop
mov
sbb
push
jecxz
mov
leave
jecxz
in
movsb
cmp
aad
sbb
jno
scas
imul
lcall
fisubrs
push
adc
call
icebp
mov
lock
lock
adc
adc
inc
fwait
jle
add
dec
sbb
andl
or
clc
loope
jno
cmp
add
js
cli
pop
or
dec
xlat
pop
sbb
pop
ss
insb
outsb
outsb
jae
pop
fsubrp
pop
mov
add
in
imul
jns
fdiv
in
pop
int3
mov
lret
add
add
je
adc
insb
mov
ret
dec
xor
stos
mov
jbe
jno
push
sbb
lods
or
lea
aad
jno
mov
and
shll
movsl
xchg
jae
pop
repnz
fs
mulb
dec
sub
or
js
outsb
inc
adc
lret
loopne
xchg
test
cltd
cmpb
and
cmp
stos
iret
popa
or
jge
cmpb
mov
ficompl
leave
sub
or
fcoms
mov
push
lea
and
fwait
insb
sbb
pushl
fwait
or
sbb
fmull
mull
loope,pn
lods
or
in
pop
scas
sub
stc
mov
test
pop
inc
fwait
test
repnz
test
loop
mov
push
stos
arpl
xchg
mov
negl
inc
test
call
lret
add
jne
mov
inc
jle
cmp
cli
orl
lea
gs
push
xor
in
fimuls
out
ror
imul
mov
imul
sub
inc
imul
push
mov
xor
sbb
lret
lods
dec
sub
push
in
stc
imul
inc
lea
xor
mov
and
aam
mov
lods
repz
adc
int3
sub
sub
pop
cmpsb
inc
xchg
stos
int
xlat
mov
xor
cmp
clc
push
xchg
mov
cmp
dec
mov
cs
fs
dec
in
mov
lods
rcrl
or
dec
ds
xchg
pop
dec
push
mov
js
fmull
mov
push
nop
inc
push
and
gs
inc
in
add
es
jno
xorl
aam
mov
popa
fwait
pop
fs
rorb
sbb
cli
jle
loopne
ret
sub
inc
gs
mov
sarl
icebp
int3
add
push
popa
mov
inc
jle
sbb
push
aas
popa
rcll
sbb
lock
push
inc
xchg
add
sub
cmp
mov
and
addr16
int
shlb
in
lock
testl
push
scas
lea
inc
fwait
jae
jge
or
inc
icebp
lods
lea
movsl
hlt
es
std
dec
mov
xchg
je
lea
hlt
decl
fs
rorl
sbb
push
dec
inc
sbb
iret
in
push
loopne
test
xor
in
add
mov
icebp
mov
dec
in
pop
cmc
fsubrs
out
mov
mov
fs
insl
push
icebp
xchg
aad
and
popf
cmp
dec
cs
insb
aad
movsl
js
movsl
xor
inc
inc
inc
test
inc
insl
inc
xor
push
add
hlt
inc
inc
mov
mov
out
gs
fisubrl
push
sbb
ljmp
add
ljmp
push
mov
xor
pop
adc
mov
or
mov
fldenv
test
adc
xor
or
mov
sub
push
pop
mov
cmp
int3
xor
in
cmp
loop
push
add
lock
inc
sti
jns
sub
adc
jno
scas
dec
insl
mov
aam
lods
insl
shlb
daa
xchg
push
and
adc
dec
fs
mov
shl
push
sub
repnz
cli
jns
shrl
sub
mov
sub
sti
jle
push
movsb
dec
push
in
add
xlat
fs
dec
pop
hlt
xor
mov
popa
imul
in
jle
fldenv
sub
leave
xor
mov
mov
shr
and
and
xor
gs
or
dec
std
jns
pop
lahf
pop
inc
ds
rcrb
pop
mov
in
sub
push
int
repnz
inc
lret
inc
add
cld
sbb
jno
inc
dec
sub
ret
daa
dec
lret
clc
sub
arpl
jle
lds
sub
loopne
test
pop
gs
arpl
sub
push
pop
or
sar
arpl
mov
mov
cld
xchg
icebp
call
lock
movsl
lock
clc
sbb
sub
les
adcl
lods
mov
movsl
mov
repnz
icebp
insl
mov
gs
out
in
pop
mov
xchg
dec
inc
gs
xchg
lock
dec
pusha
test
fisttpl
xchg
xor
pop
in
jnp
aam
mov
out
dec
push
cld
add
into
xor
or
movsl
ljmp
jo
cli
sub
mov
xchg
insl
loopne
aad
cmp
movl
lock
adc
dec
lock
hlt
push
mov
hlt
sub
in
cld
xor
cs
jle
pop
add
in
push
nop
sbb
mov
add
xchg
int
in
jge
pop
testl
insl
sbb
push
les
hlt
push
popa
ss
test
aad
push
dec
fnsave
insl
lds
dec
stos
xor
xchg
cmc
cld
mov
aas
sub
loope
gs
sub
xor
and
sbb
inc
int
mov
sbb
ljmp
insl
xchg
jnp
scas
dec
gs
loopne
es
addr16
gs
xor
mov
push
lds
mov
adc
sub
lods
aam
push
dec
sub
aam
xor
sbb
in
xchg
lds
std
xor
jge
dec
mov
loop
pop
push
or
cltd
jne
hlt
mov
imul
test
push
sbb
dec
aad
ja
int
push
dec
in
insl
icebp
insl
or
pop
ret
sub
push
orb
insl
inc
and
lock
lock
xchg
add
dec
in
scas
push
in
sbb
sub
mov
push
hlt
push
push
inc
jbe
test
dec
popf
push
xor
shr
sahf
xor
fs
xchg
aad
add
or
clc
push
add
clc
push
pcmpgtw
lock
test
leave
stos
and
hlt
pusha
sub
in
pop
outsb
mov
rcll
xor
push
lahf
mov
xor
and
in
sbb
xor
jge
xor
out
lods
inc
sub
imul
lods
lcall
fsubl
insl
mov
xor
mov
cmp
xor
pop
sti
and
push
out
or
cs
frstor
pop
mov
or
ss
jno
push
jle
jg
jmp
mov
dec
addl
dec
sti
xor
test
xchg
test
lods
or
mov
mov
and
out
das
push
lods
and
xor
or
clc
xor
in
mov
dec
insb
xor
and
sub
mov
in
push
mov
nop
pop
pop
push
adc
xchg
mov
xor
lock
add
push
cmp
or
push
testl
insl
hlt
lock
jle
mov
fildl
cmp
gs
xor
aad
int
lea
fidivrl
insl
cwtl
leave
mov
dec
push
xchg
rol
call
mov
cmp
jge
xchg
mov
int3
cld
fcoml
push
and
test
insl
or
xchg
adc
movsl
out
push
mov
cmp
add
mov
into
int
lock
cmp
inc
push
mov
jge
pop
loopne
pop
push
stos
and
and
insb
jle
sti
aad
dec
xchg
adc
push
jne
ss
fmull
push
inc
adc
test
adc
lock
mov
out
aad
push
faddl
and
or
gs
icebp
mov
adc
and
ret
gs
call
int
dec
outsb
push
xor
sbb
and
push
xor
sarb
mov
adc
aaa
jbe
rcrb
sbb
in
inc
lock
fimuls
sbb
and
mov
xor
xor
cltd
fs
dec
cltd
xchg
gs
aam
je
popa
call
push
jle
inc
lock
add
sbb
roll
lock
fsubl
push
leave
gs
mov
xchg
mov
cmp
cltd
in
test
leave
cmp
pop
addr16
push
gs
imul
rcll
add
rcr
imul
jno
sarb
jb
adc
xor
add
jno
adcl
aad
mov
iret
cmp
dec
adc
call
or
shlb
adc
and
in
in
loopne
movsb
adc
pop
mov
clc
push
loope
and
cmp
xor
xor
cltd
fs
lods
test
sbb
arpl
aad
pop
das
jle
inc
gs
shrl
sbb
roll
lock
fsubl
push
leave
lock
mov
cmp
cltd
in
leave
and
insl
sub
cmp
addr16
push
xor
cmp
sub
popa
dec
adc
add
jge
cmp
insl
mov
gs
aam
inc
das
push
incb
in
sub
push
mov
dec
shrl
ss
popf
mov
push
int
xor
jno
adc
push
lea
mov
mov
shll
ret
and
in
xor
out
aam
or
call
sbb
out
dec
insl
push
and
push
jmp
test
enter
lret
push
dec
loop
and
fs
mov
mov
shl
cwtl
imul
sbb
mov
mov
cltd
xchg
jne
insl
popf
out
inc
fs
mov
pop
aad
or
pop
mull
push
gs
in
push
xor
gs
ss
insl
insl
cmp
jae
dec
or
adc
stos
add
aam
mov
push
cwtl
jnp
mov
mov
xchg
jg
loop
sbbl
bound
daa
jge
movsl
mov
push
gs
jbe
add
sbb
cs
leave
and
es
loope
sbb
out
fs
lods
push
xchg
pop
add
pop
xor
movsb
pop
fdivrs
push
cmp
adc
fs
push
pop
adc
pop
cmp
pop
jle
sti
cmp
push
and
add
mov
lds
in
adc
push
ds
rorb
icebp
cld
frndint
adc
popa
cmp
dec
xlat
pop
cs
cmp
cld
lds
inc
cmp
test
aad
inc
mov
xor
out
xor
dec
fcoml
pop
sahf
xor
jno
inc
ds
mov
ljmp
lods
test
fdivrs
je
mov
pop
jae
pop
push
inc
dec
or
nop
jo
add
jle
mov
push
mov
adc
and
and
jmp
xchg
add
inc
xchg
adc
aas
push
gs
cmp
fcoms
out
popa
cmc
inc
push
in
leave
gs
sbb
cmp
stos
inc
mov
aam
and
lock
aaa
dec
inc
push
xor
pop
loop
push
rcrb
je
jg
xchg
xor
or
jecxz
in
or
repnz
insl
xchg
sbb
mov
push
in
adc
and
mov
cmp
fs
pop
mov
xchg
lock
int
test
push
add
jae
popf
bound
repz
repnz
xchg
cmp
push
dec
gs
je
in
pop
loopne
and
pop
aad
inc
sub
sub
insl
push
fimuls
dec
pop
in
xor
leave
aad
and
and
aad
and
push
out
sub
adc
leave
push
sti
sbb
loopne
ss
lahf
push
push
das
mov
and
xor
push
rclb
shll
mov
pop
daa
test
fsubl
sbb
jae
mov
aaa
dec
mov
inc
add
or
mov
inc
xor
faddl
jge
dec
push
icebp
leave
scas
xor
arpl
sub
xor
lds
jnp
jns
jo
push
cmp
popa
fs
push
jge
orl
cmp
daa
insb
sar
ret
mov
mov
push
xor
fs
insl
int
and
sub
aad
data16
test
aam
scas
pop
loope
stos
gs
mov
ret
and
fsubrl
sarl
adc
sub
sbb
mov
scas
push
es
scas
lds
inc
xlat
push
xor
gs
enter
out
gs
xchg
bound
cmp
dec
push
adc
insb
sbb
add
xorl
inc
lcall
xor
jne
shll
dec
xchg
pop
push
jmp
sub
xor
jns
popa
ljmp
in
lock
dec
leave
loopne
insl
lods
pop
sub
test
or
ljmp
cmpsl
aad
jge
sub
insl
dec
mov
xor
arpl
or
xor
push
adc
insl
icebp
xchg
lods
mov
fidivl
fdivl
fs
jge
lea
loop
mov
lock
mov
adc
and
push
popa
push
pop
push
int
ss
sub
and
lods
gs
and
loop
movsl
arpl
mov
push
xchg
arpl
xchg
les
push
icebp
xchg
rorl
js
push
mov
out
fs
push
adc
adc
push
popf
gs
push
cmp
mov
mov
icebp
lea
ja
ja
sbb
jnp
jge
gs
arpl
in
addr16
cmpsb
arpl
add
xor
fs
push
aad
adc
lds
arpl
cmp
sub
insl
add
jl
or
fwait
push
dec
jmp
test
pop
add
cmp
dec
out
mov
pop
daa
and
arpl
jne
popf
data16
jno
xchg
mov
xor
xor
dec
dec
in
in
fldenv
and
mov
cltd
stos
ljmp
sub
insl
xchg
sub
xor
xchg
in
in
ss
xor
xorl
xchg
dec
icebp
gs
push
push
xchg
insl
insl
cmpsb
in
mov
js
call
and
gs
int3
push
rcll
jae
fsubl
add
mov
into
aad
or
cmp
enter
jg
fs
ret
movsl
push
int
imul
test
lock
add
xor
jns
sbb
pop
cmp
add
push
sub
sub
inc
dec
js
dec
pop
adc
out
xor
push
gs
ljmp
subl
in
inc
imul
lock
mov
xor
sti
cmp
test
icebp
xlat
xchg
push
sarb
sti
mov
in
pop
enter
pop
push
and
pop
push
cmp
adc
enter
icebp
xlat
push
xchg
push
pop
mov
xchg
xchg
xor
push
xchg
mov
sti
push
icebp
xlat
pusha
xchg
adc
call
xor
movsl
sbb
adcl
sbb
cmp
repz
sub
je
or
sub
shr
gs
out
mov
inc
daa
insl
jae
pop
lret
push
les
insl
js
das
and
dec
mov
addr16
jb
lcall
shll
push
xchg
gs
aam
jno
xchg
pop
sbb
dec
loopne
pop
mov
mov
lock
sbb
and
gs
sub
subl
in
mov
inc
dec
and
xorl
aad
js
jbe
insl
lock
inc
inc
gs
sub
mov
cmp
out
inc
or
lret
xor
mov
test
sbb
xor
adc
xchg
xchg
addr16
cmp
aas
sub
sub
mov
popa
mov
jne
arpl
mov
xor
movsl
insl
push
xchg
xor
mov
xor
add
aad
xor
les
arpl
popf
xor
push
ss
in
in
mov
push
cmp
xlat
gs
inc
adc
gs
loop
push
xor
xchg
jl
mov
pop
ss
jle
lods
lock
inc
mov
xor
out
xor
ja
fcompl
xor
vandps
out
in
in
cs
cmp
mov
cltd
pop
fs
data16
subl
mov
jl
dec
pop
add
dec
in
dec
xor
in
movsl
insl
sbb
pop
adc
movsb
pop
std
jmp
inc
daa
pop
dec
shlb
movsl
pop
mov
movsb
jmp
inc
push
pop
dec
js
mov
xor
in
je
mov
int
push
lods
add
jno
jle
sbb
and
lea
lahf
bound
insb
out
jmp
sub
jno
cmp
loope
pop
and
xor
pop
fisubs
or
jne
gs
dec
in
jp
insl
jle
add
pop
push
stc
fstp
add
sahf
sub
jne
lahf
jl
pop
adc
icebp
call
jns
cmp
xor
adc
pushf
and
xchg
xchg
sbb
mov
test
inc
dec
sahf
mov
arpl
frstor
lret
inc
in
jp
ds
mov
xor
or
fisttps
and
popf
bound
shlb
int
xor
sahf
ret
sbb
push
adc
cmp
push
xor
push
fisttps
pusha
and
lods
and
imul
cmp
jne
mov
push
mov
rclb
pop
push
cmp
and
push
xchg
jne
in
adc
in
gs
adc
adc
les
cltd
fsubrl
push
pop
rcl
and
rorb
das
test
and
movsl
fildll
lods
adc
fwait
dec
div
add
adc
push
das
jnp
push
or
movsl
lock
rcr
fstpl
insl
cmc
dec
xor
pusha
dec
push
push
cmp
pop
push
call
xor
or
adc
mov
pop
mov
add
lods
aam
cmpsb
push
sub
test
dec
push
push
popf
movsl
insl
and
pop
lcall
jb
sub
jne
dec
fdiv
xor
sahf
xchg
gs
inc
gs
in
subl
pop
inc
adc
xor
fs
mov
inc
in
cwtl
mov
and
push
cmpsb
or
sahf
pop
test
pop
dec
fs
pop
into
jno
and
pop
push
out
xor
xchg
fs
lods
cmp
cmp
inc
in
inc
push
jge
xor
pop
adc
or
xor
xchg
sub
jne
arpl
cmpsb
popa
jmp
lods
je
jge
in
push
popf
gs
rolb
pop
insl
fs
out
std
sbb
inc
dec
push
into
xor
inc
xor
lock
ja
in
mov
pop
arpl
daa
andb
cmp
jb
inc
test
pop
adc
dec
push
popa
mov
gs
jae
insl
inc
sbb
insl
xchg
sub
insl
outsb
out
xor
xor
adc
les
add
or
insl
inc
aad
lock
insl
aas
sbb
push
ss
jae
inc
jae
jne
jbe,pt
xor
xor
and
pop
xchg
in
xchg
movsb
dec
sub
in
push
lods
cltd
in
add
inc
mov
and
xor
xor
inc
sub
popa
aad
push
idiv
mov
dec
sub
hlt
and
daa
loope
sub
pop
andb
negl
jg
icebp
out
push
push
lods
pushf
and
cmp
decb
pop
movsb
sbb
icebp
mov
imul
dec
fs
mov
mov
int
ret
fsubs
in
mov
inc
negb
movsl
enter
shlb
in
fadds
repz
xor
fadds
push
xlat
cs
movsb
sub
idivb
jmp
push
lea
js
xor
testb
test
movsb
mov
inc
push
mov
cld
adc
js
adc
mov
inc
js
cwtl
push
or
std
and
and
pop
pop
push
xchg
popa
and
dec
movsl
pop
cmp
adc
mov
jge
xchg
pop
repnz
jbe
in
repnz
insl
sub
push
loopne
inc
int3
mov
inc
mov
push
push
fimull
xchg
xor
cmp
loop
and
rclb
in
and
jne
fs
insl
ja
js
insl
push
lea
push
cmp
xchg
pop
sub
push
adc
sbb
pop
sub
data16
xor
aad
fnstcw
adc
cmc
push
shrl
jne
xchg
push
mov
in
push
fistps
lds
lock
adc
aam
jmp
test
aam
lea
icebp
rorb
in
push
gs
in
ficomps
jl
out
pop
test
xor
sti
pop
iret
sbb
and
pop
js
push
andl
cli
and
jns
add
sbb
cmp
fs
sub
outsl
xor
xchg
std
je
enter
mov
in
push
push
adc
mov
xchg
and
lea
dec
arpl
add
insl
cld
fs
pusha
dec
jge
shl
mov
push
pop
xchg
repz
insl
xchg
icebp
mov
push
mov
in
fsts
xor
fisttpl
push
cs
jecxz
aad
idiv
pop
mov
das
push
shll
push
xlat
not
insl
and
pop
inc
in
mov
sbb
adc
sbb
in
pop
fs
mov
shlb
js
lds
xchg
pop
ficoms
gs
mov
lods
mov
push
xchg
push
imul
int
push
les
sub
into
push
push
lock
xchg
jp
imul
out
add
loope
and
cmp
mov
lock
xor
das
jns
cmp
mov
inc
push
mov
push
lcall
push
jns
shrl
cmp
lods
push
mov
adc
cmp
mov
pop
sti
mov
movsb
shlb
push
mov
inc
push
push
pop
sbb
sub
push
xor
push
push
mov
cmp
xchg
cmp
dec
dec
cmp
xor
cld
mov
sbb
movsl
hlt
sahf
popa
and
test
ljmp
xor
test
jge
mov
popf
xor
add
rorl
xor
xor
cmp
pusha
loop
push
call
lock
xor
jle
movsb
cmp
xchg
es
fldt
pop
mov
adc
icebp
sub
test
insl
xchg
insl
dec
xchg
xor
cld
in
ss
add
faddl
insl
and
inc
mov
iret
jne
testl
xor
js
sahf
fdivrl
xor
inc
jae
ja
in
dec
insb
outsl
fdivrs
pop
jle
js
and
cmp
hlt
lods
repnz
mov
cld
gs
gs
xor
xor
adc
add
and
inc
pop
cmp
rclb
test
lea
sub
jg
in
aam
insl
xchg
push
inc
cmp
inc
in
data16
pop
ljmp
jnp
loop
hlt
inc
xchg
xor
push
or
mov
into
sbb
add
add
push
push
push
cmp
lods
cmp
insl
ljmp
dec
lods
ljmp
lds
push
inc
inc
mov
es
adc
sbb
inc
hlt
xchg
sub
or
fs
test
push
cmpb
dec
sbb
xor
insl
xchg
icebp
or
jne
clc
mov
pop
int
fs
jns
test
aad
fs
jae
out
aad
and
addl
xchg
jno
aad
dec
xchg
sub
lea
push
inc
inc
dec
mov
aad
shrl
repnz
aad
fdiv
and
addb
lahf
fdivl
fsubl
inc
pop
sub
and
movsl
gs
cld
ljmp
sahf
mov
xchg
sub
pop
cwtl
loopne
sti
fidivrl
jg
cmp
xchg
add
in
movsb
cmp
adc
or
aaa
test
test
pop
xor
pusha
in
sub
inc
add
sub
in
lea
add
andl
int
gs
mov
negl
cwtl
inc
add
mov
jle
cltd
xor
mov
pop
in
lock
and
dec
mov
fs
xchg
shlb
mov
test
test
mov
mov
push
and
add
xchg
fnstcw
in
push
pop
repnz
inc
add
jle
insb
scas
lock
jmp
sub
addr16
jae
jle
pop
sti
mov
push
xchg
iret
xor
push
je
xor
aas
dec
mov
movsl
hlt
cltd
and
das
in
ja
movsb
test
pop
pop
out
pop
xchg
addr16
cmp
lds
js
out
stos
xor
adc
push
jmp
push
jg
or
imul
test
incl
lds
cld
in
pop
jle
push
leave
lods
arpl
das
leave
dec
cmp
inc
dec
xchg
xchg
insl
fcomp
mov
sti
push
cld
insl
dec
shrl
stos
pop
int
dec
filds
mul
lret
daa
xor
and
popf
icebp
dec
push
dec
add
xchg
xor
sub
in
push
mov
inc
push
push
add
dec
fistpll
jbe
cmp
andl
jg
enter
xchg
lret
and
jle
lods
xchg
jge
mov
stos
push
sahf
imul
mov
jl
in
movsl
or
push
cmp
inc
dec
lret
push
xor
add
in
lock
sub
arpl
pop
lds
out
rcrb
jae
pop
js
cld
pusha
cmp
jge
rcl
inc
xor
arpl
push
fsubs
rcrl
push
les
movsl
xor
inc
cmp
enter
imul
mov
aam
gs
xor
pop
xor
or
in
jmp
movsl
jne
hlt
insl
inc
in
mov
pop
in
fdiv
push
mov
dec
jp
sbb
sbb
movsl
hlt
pop
shrl
in
xor
or
gs
insl
movsl
test
imul
icebp
jno
lods
mov
or
jmp
shll
cmp
push
mov
in
xor
dec
in
int
and
rcll
xor
or
push
ret
xchg
dec
int
push
cs
aad
mov
pop
lods
lock
insl
leave
icebp
xchg
inc
adc
ja
call
xor
xor
pop
js
arpl
dec
xor
xor
dec
ss
das
and
aad
pop
std
add
xchg
dec
and
mov
dec
cmpsb
pop
adc
push
sahf
int
mov
add
pop
mov
push
dec
adc
push
js
fimuls
push
push
mov
adc
pop
insb
imul
in
mov
xor
cmp
stos
add
ret
int
cmp
push
fists
in
in
jge
inc
inc
sub
and
js
scas
gs
cmp
lret
pop
inc
push
pop
aam
cs
push
xchg
and
adc
sbb
inc
gs
push
ds
loopne
pop
xchg
push
aad
punpckhdq
xor
or
hlt
pop
dec
pop
adc
push
lret
sub
lahf
cmp
push
lds
cs
xor
xor
xchg
xchg
push
subb
push
pushfw
dec
insl
sub
shrl
int
cmpsb
out
adc
push
movb
lods
aam
or
xchg
int
lods
fs
lods
in
xor
push
es
push
push
or
pop
mov
sub
xor
outsb
or
and
dec
and
jae
sahf
pop
mov
and
in
mov
out
xor
cmp
popa
call
lea
jb
gs
aad
lods
icebp
push
mov
xchg
pop
cli
out
add
ds
popf
bound
push
pop
icebp
leave
test
shrb
inc
insl
pop
jns,pt
dec
push
cmpsb
push
dec
sbb
push
lods
xor
push
mov
leave
push
daa
sub
out
gs
xchg
inc
pop
push
test
loopne
push
push
or
push
mov
imul
and
insb
inc
rclb
or
pop
adc
int
push
xchg
push
add
imul
shll
xor
dec
shr
cmc
push
mov
fsubr
lock
insl
xor
cmpsb
or
lods
outsl
push
das
adc
push
push
cld
sub
sub
push
lods
gs
mov
xor
pop
fs
insl
xchg
xchg
aam
inc
pop
cld
xor
sub
mov
out
mov
pop
sarl
mov
bound
push
in
cld
or
insl
push
adc
add
aad
ret
aad
jns
xchg
sbb
pop
and
bound
dec
aas
dec
push
xchg
cmp
gs
push
mov
hlt
jnp
dec
and
test
and
jne
inc
xor
and
shll
out
fs
gs
xchg
in
movsb
cld
xor
inc
sub
jne
add
dec
aad
inc
xor
push
push
std
xchg
incb
sbb
xor
mov
and
cmp
insl
jno
xor
mov
sbb
or
cmp
ja
loope
fcmovne
dec
xor
movsl
xor
pop
push
dec
loop
push
clc
mov
in
paddd
and
cld
jg
xor
sub
push
cmpsb
xor
ss
in
in
mov
in
in
mov
in
push
lds
inc
push
xor
repz
jno
sbb
push
mov
popa
push
inc
push
dec
aad
cmp
or
push
jge
dec
inc
adc
insl
loopne
xor
jo
jns
aas
adc
xor
inc
xlat
jb
int
popa
mov
adc
scas
in
gs
jmp
xchg
and
fdivl
mov
sbb
shll
pop
adc
push
in
in
in
repz
insl
push
lods
or
pop
xor
add
in
in
dec
xor
aad
xor
pop
push
pop
aad
add
popa
cld
arpl
cmp
adc
jle
and
lods
lock
push
cmp
lods
lods
cmc
push
jg
ja
push
dec
cmp
ret
cld
imul
xor
xor
push
dec
popa
cld
pop
push
icebp
movsl
jge
dec
sti
or
jge
dec
push
xor
add
jge
test
or
aam
cs
push
dec
xor
dec
pop
shl
pop
inc
or
push
xchg
mov
popf
push
pop
mov
pop
push
jb
sub
aam
pusha
push
xchg
xlat
push
xor
insl
pusha
pushf
aad
dec
xchg
jecxz
daa
inc
bound
out
shll
jns
xchg
bound
ret
out
add
sbb
lock
icebp
in
in
sbb
lock
push
adc
scas
ja
xchg
jne
fwait
jle
pop
fmull
xor
pop
mov
ds
add
xor
push
lds
insl
pop
in
pop
imul
cmpb
fs
inc
stos
mov
jae
sbbb
insl
arpl
in
rol
push
popa
xor
dec
fs
js
xor
dec
push
fs
inc
jnp
xchg
int
push
dec
out
push
sti
xor
xchg
call
dec
xor
adc
adc
es
callw
cli
in
gs
in
dec
jp
and
insl
cmp
mov
sub
lock
push
mov
jmp
lea
dec
xor
sub
movsl
mov
dec
rorl
xchg
push
or
fs
dec
and
adc
cmp
lods
sbb
pop
xor
add
insl
pop
leave
cmp
insl
loopne
cmp
push
lock
or
test
push
in
popf
lea
cmp
dec
rolb
cltd
xchg
jle
and
shlb
sub
popa
gs
cli
push
adc
xor
mov
add
xor
out
and
mov
std
and
sbb
dec
sub
subl
imul
lods
ljmp
xchg
insl
xchg
xor
icebp
in
in
xor
push
xchg
push
cld
in
or
jecxz
repnz
cmp
and
mov
pop
push
push
push
add
sub
xor
in
sbb
cli
and
push
outsb
push
lods
or
jnp
fsubrl
sub
mov
push
mov
mov
mov
jno
jo
jp
dec
dec
stos
out
gs
sub
dec
cld
imul
dec
cli
mull
loopne
inc
mov
pushf
fnstsw
outsl
jp
fs
mov
in
clc
sub
shl
fisttpl
sub
leave
inc
cld
inc
xchg
and
sub
leave
dec
push
dec
xor
bound
cmp
xchg
push
push
dec
push
mov
sub
sub
sbb
dec
mov
stos
cmp
fs
cmp
jno
incl
sbb
jecxz
lods
insl
sbb
addr16
add
cmp
adc
push
jge
dec
popa
push
lock
pop
icebp
fsubs
jno
inc
dec
sub
imul
adc
push
xchg
or
mov
dec
push
dec
xchg
xchg
xorb
xor
loope
add
fwait
ljmp
movsl
sub
mov
out
shll
jno
push
fmull
lock
in
imul
dec
jmp
sahf
sbb
ljmp
push
and
mov
fs
ret
push
aas
das
popa
lods
outsl
popf
jge
jmp
cltd
in
int
in
aam
dec
add
pop
jae
jmp
mov
push
xchg
sbb
std
dec
arpl
in
pusha
or
or
bound
inc
ljmp
jns
push
mov
push
in
adc
rolb
jmp
sub
stos
sbb
sbb
xchg
add
lock
imul
lea
xchg
xor
andb
dec
pop
xor
movsl
pusha
lcall
fs
arpl
test
ret
sbb
inc
mov
fs
ja
pusha
jmp
clc
and
inc
pusha
imul
xor
mov
sub
xor
out
fdivl
cmc
imul
es
and
arpl
popa
ss
and
jno
push
jns
cld
xor
aad
sahf
adc
lods
fs
imul
jne
cmc
clc
call
sbb
int3
clc
sub
shlb
mov
cmp
cltd
into
adc
mov
loop
out
sbb
dec
mov
cwtl
mov
mov
xchg
dec
sti
clc
cltd
or
pop
adc
mov
es
scas
arpl
push
stos
mov
add
xlat
mov
adc
repnz
stos
lock
dec
sub
fsubl
mov
and
pushf
mov
int3
xchg
xchg
pop
and
lret
dec
sbb
aam
mov
and
cmp
inc
jae
xor
mov
adc
push
leave
addr16
jmp
push
jmp
outsb
xor
and
jl
push
sub
icebp
mov
repz
jne
or
lahf
adc
cli
add
sarb
mov
xchg
dec
inc
adc
nop
mov
das
push
jle
xchg
pusha
xor
inc
adc
ret
rcll
sbb
cmpsb
outsl
int
test
frstor
int3
push
dec
sub
ret
xor
shll
out
ljmp
hlt
ficoms
fwait
jp
es
arpl
ss
xor
cs
mov
mov
fdivr
xor
lahf
push
and
loop
ret
xor
mov
es
mov
into
dec
adc
jmp
xor
imul
aam
push
adc
shll
jo
clc
lret
xchg
add
je
outsl
fs
gs
imul
add
call
insb
xor
int
jge
pop
loope
mov
inc
sbb
popa
adc
icebp
and
push
push
daa
pusha
dec
xor
xchg
sub
mov
mov
les
ja
pop
and
ss
dec
jg
roll
mov
addr16
xchg
fwait
xchg
pop
int
dec
je
dec
movsb
lock
jmp
sub
insb
cmp
pop
insl
jl
push
cmpsl
clc
sbbb
fiadds
add
rorb
mov
jl
mov
popa
cs
stos
jns
sbb
add
out
stos
call
push
mov
je
add
pushl
popl
clc
movb
cmp
pusha
lea
ja
cmc
or
shl
cmc
sub
rol
bswap
push
sub
add
rol
mov
inc
cmp
adc
mov
clc
repnz
pushf
call
mov
adc
test
push
fcomps
mov
pop
test
outsl
fwait
js
push
pop
or
setg
test
cmp
ss
cmpsl
push
ja
out
out
cmpsl
or
xor
or
out
out
jge
insb
mov
addr16
into
push
mov
and
xor
lds
jns
imul
mov
dec
mov
loopne
xchg
jno
sbb
lds
pop
rorl
mov
ror
pushf
sub
lea
jno
push
not
rcr
xor
dec
sub
setno
mov
ror
adc
mov
sub
push
call
xlat
dec
inc
fisubs
int3
test
and
mov
in
add
xor
and
sbb
std
cmp
out
fnstsw
negl
aas
push
sub
jmp
pushf
mov
xchg
insb
sub
xchg
push
xorb
cmp
daa
fidivl
and
mov
jecxz
xchg
dec
and
in
out
sbb
and
adc
sub
aad
mov
mov
imul
dec
jns
push
jecxz
mov
fsubl
into
cwtl
out
and
fwait
aad
out
hlt
jo
insb
pop
mov
adc
xor
in
sub
out
inc
pop
clc
es
pop
cmp
dec
addl
in
insb
imul
and
shr
pop
test
xor
insl
hlt
mov
push
jp
les
aaa
add
stos
test
in
adc
aad
stc
fs
and
int3
lret
mov
dec
sbb
mov
aad
lcall
test
movsb
inc
js
jg
outsb
pusha
pop
lcall
or
popa
pop
dec
lret
shrl
idivb
out
jns
and
stos
push
mov
cmp
mov
clc
movsl
fcmovnu
jge
clc
dec
aaa
outsl
jle
dec
lods
in
push
mov
es
cmp
jle
xor
test
jmp
adc
and
mov
fistps
test
lea
jne
dec
shr
xor
bts
mov
setne
add
add
sub
sar
mov
push
pusha
bt
call
adc
loopne
ljmp
sbbb
jecxz
clc
test
aas
dec
jg
pop
jp
mov
inc
pop
cli
aaa
mov
lods
or
fistl
xchg
addl
xor
adc
test
leave
jmp
outsl
scas
sbb
add
jb
insl
mov
into
xor
jne
test
ljmp
mov
addr16
mov
push
and
lea
jae
stc
pusha
pushf
stc
xor
call
jg
sub
es
xorb
jae
sbb
inc
sub
inc
and
inc
clc
sub
ds
push
sarl
cmp
ss
aas
hlt
cmp
and
call
dec
xchg
dec
and
lock
loope
leave
into
test
xchg
roll
imul
push
ljmp
push
lea
mov
lds
pop
jbe
xor
je
adc
mov
push
daa
add
xchg
pop
push
test
jb
stos
pusha
pusha
lods
call
jecxz
ja
es
mov
mov
dec
pop
out
sahf
jae
add
test
pop
push
inc
sbb
cmp
lea
mov
inc
add
pop
cltd
cmpsl
dec
adc
xchg
aaa
adc
ja
pop
pop
jle
jne
repz
adc
inc
cmp
test
xlat
fiadds
pop
loope
lret
lods
xchg
mov
outsl
outsl
xchg
push
mov
xchg
leave
jo
sub
jmp
mov
cmpsl
jbe
aas
test
sub
adc
adc
es
push
orl
sub
push
inc
out
inc
inc
cmc
cs
fimuls
mov
mov
cmp
xchg
xchg
jge
scas
xor
mov
dec
int3
ja
popf
mov
sbbl
jne
es
xchg
aam
sub
int3
mov
inc
mov
dec
addb
out
cmp
dec
pop
insl
shr
mov
movsb
push
lahf
or
mov
imul
mov
data16
xor
cmpsl
jns
and
int3
xchg
mov
in
fildll
add
mov
and
es
mov
fldt
into
test
mov
pushf
add
adc
xor
pop
pop
loope
inc
xchg
lods
or
cmp
lret
mov
push
psubsw
push
push
arpl
xchg
imul
dec
ss
jg
int3
lods
dec
dec
sti
adc
lock
fwait
or
fldt
jp
dec
mov
mov
pushl
lea
jmp
lea
jae
cmc
cmc
cmp
jmp
xchg
pusha
jmp
pushf
pushl
ret
push
pusha
ret
push
add
sarb
add
cs
outsl
jecxz
loopne
or
ljmp
push
add
sar
push
pusha
adcl
push
add
int
cmp
add
popa
mov
add
pop
add
outsl
jmp
pusha
decl
add
xor
outsl
aas
jae
and
add
pop
xchg
addr16
pusha
jae
add
shr
je
iret
dec
mov
ljmp
add
arpl
add
inc
aad
pusha
inc
icebp
lahf
jge
inc
or
pusha
jae
add
add
dec
outsl
mov
pusha
decl
add
outsl
push
cltd
fisttps
addb
push
push
add
cmpsb
sbb
pusha
mov
add
icebp
out
pusha
outsl
xor
jg
add
mov
mov
add
sbb
mov
pusha
inc
dec
loopne
pop
add
inc
mov
add
loopne
mov
sub
lahf
push
add
pop
cmpsl
sbb
outsl
ret
into
sarb
or
inc
add
in
sub
in
mov
mov
orl
push
pusha
arpl
mov
lock
mov
pusha
add
mov
fsubl
pop
adc
pop
into
push
jae
jl
add
jg
jae
xchg
cli
sarb
inc
repnz
rolb
add
add
pop
das
repz
pop
add
add
repnz
rcll
push
pop
add
cmp
add
pop
add
mov
lea
daa
jg
lea
incb
shrb
mov
pop
add
add
dec
dec
outsl
jecxz
mov
push
push
push
mov
sbb
pop
push
add
add
outsl
repz
cmpsb
repz
xchg
ret
loopne
pop
add
outsl
mov
add
pop
add
in
stos
push
add
loopne
dec
outsl
lret
sarb
add
mov
dec
push
pusha
rcll
mov
inc
cmc
dec
outsl
repz
pop
add
mov
movsb
shl
inc
mov
stos
xchg
mov
lock
adc
fwait
sub
push
pusha
adc
mov
loope
mov
rolb
jl
add
pusha
xchg
push
add
loopne
lea
pop
pusha
sahf
adc
jg
cmp
outsl
jecxz
loopne
adc
rorb
add
xor
and
je
push
lea
jmp
dec
aam
daa
es
cmp
and
mov
fldenv
inc
pop
adc
cwtl
add
dec
iret
mov
fs
pushf
dec
adcb
imul
push
xchg
mov
cs
repz
in
xchg
jecxz
inc
mov
jmp
ror
test
and
sbb
imul
daa
cvtpi2ps
ss
cmp
pop
arpl
sbb
add
rcll
pop
fnstenv
out
ficoms
cmp
lods
jl
movsl
push
aas
es
push
imul
or
mov
addr16
lock
dec
insb
fwait
jnp
mov
xor
and
push
push
cpuid
and
rcrb
dec
push
dec
pop
cmpl
dec
cmp
bound
add
loope
jne
push
mov
cmp
mov
out
cmp
shlb
xchg
mov
in
decl
mov
out
xchg
bound
std
lds
imulb
mov
xor
mov
mov
pop
fsubl
mov
shlb
into
add
push
pop
sub
xor
cmp
pop
add
mov
or
test
mov
or
scas
jecxz
pushf
add
lds
and
cmp
adc
test
push
fnstcw
arpl
adc
xor
cmp
inc
pop
add
jnp
mov
es
xchg
lret
daa
ljmp
mov
aaa
aaa
sahf
rolb
cmp
mov
xchg
pop
jnp
cmp
add
xchg
test
nop
dec
sbb
add
cmp
xchg
xor
mov
ds
in
repz
icebp
mov
jl
mov
mov
fdiv
enter
hlt
pop
stos
in
fsubrl
jl
shrl
push
daa
cmc
ret
das
sub
dec
mov
data16
cmp
push
mov
push
lea
jae
xor
bswap
mov
ror
bswap
bts
sbb
mov
movzbw
bswap
call
jmp
sub
jmp
xlat
imul
cmp
jmp
push
jo
sbb
aas
xchg
mov
repz
outsl
xchg
bound
std
cmpsl
jo
outsb
jg
pop
sub
mov
out
mov
xor
out
adc
dec
mov
xchg
and
mov
push
jnp
sbb
movsb
imul
sub
lea
jmp
data16
es
push
repnz
mov
repnz
adc
push
or
mov
fwait
jp
lahf
rolb
push
xor
inc
test
scas
dec
pushf
mov
push
lret
xchg
xor
dec
rclb
inc
addr16
jo
lahf
hlt
leave
shll
daa
test
xchg
aam
jl
loope
aam
loope
sub
dec
and
cwtl
insb
dec
and
ja
mov
aad
mov
fnstenv
popl
cmc
pushl
test
cmp
jmp
sbb
push
cmc
shl
not
and
inc
sub
bt
rol
ror
cmc
jmp
mov
sub
mov
push
sub
shlb
mov
cmp
insl
fnstenv
mov
dec
out
push
dec
imull
leave
mov
and
and
adc
jns
jle
xchg
pop
push
out
push
mov
adc
push
aaa
xor
out
mov
repz
mov
cmp
fsubrs
cwtl
loopne
lret
jo
sub
call
idivb
xchg
fists
test
bnd
test
push
sub
popl
mov
aaa
adc
cmpsb
add
sti
test
and
mov
fidivl
dec
mov
cmp
mov
jb
pop
sub
jp
pop
aad
push
sub
addl
fildl
ret
in
movsb
ficoml
mov
jg
cmpsb
mov
xor
sub
or
jnp
and
daa
xchg
and
clc
jnp
dec
sub
push
and
int3
mov
lods
xorb
repz
lcall
ljmp
es
pop
nop
arpl
push
shlb
mov
dec
xor
cmp
in
add
mov
jne
dec
repnz
cmp
xchg
aas
outsb
inc
mov
jb
in
pop
iret
in
push
das
arpl
out
int3
gs
sub
loop
inc
cmpsb
push
cmpl
sti
cmpsb
leave
jns
jb
fistps
push
add
out
xchg
push
sti
jge
pusha
and
ljmp
negl
pop
int
daa
repz
loope
bound
mov
mov
pop
ss
mov
dec
and
rclb
lods
jecxz
add
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
je
jae
xor
pop
jmp
jae
insl
push
rorb
vmovntps
shlb
cmp
test
aad
cmpsl
lcall
cwtl
xchg
xchg
pop
xchg
xchg
xchg
imul
insb
jb
les
add
add
add
or
push
and
aad
adc
jnp
out
xor
inc
inc
inc
inc
inc
aas
jne
cmp
xor
ds
jbe
insl
testb
loopne
dec
insb
xchg
pop
push
and
je
inc
mov
lods
insl
push
lea
pop
sub
je
jno
jg
pop
lds
mov
insb
xor
test
mov
sub
xor
xchg
into
cli
loopne
imul
lock
arpl
dec
jo
inc
dec
arpl
and
sub
clc
xor
call
push
shrl
mov
mov
sub
jns
jno
xor
in
pop
arpl
dec
sub
xor
sub
in
sbb
push
or
jae
int3
cltd
xor
jo
insl
adc
out
or
xchg
adc
and
shrl
inc
or
fs
sub
xchg
mov
adc
mov
iret
gs
aad
jae
push
sbb
arpl
bnd
sub
sub
jne
and
and
jne
sbb
adc
jne
femms
or
jne
pop
push
add
jae
cld
std
cli
push
mov
dec
inc
xor
bound
popa
stos
and
ret
popf
sub
gs
bound
xchg
cmp
insb
jno
insl
popa
in
push
inc
xor
sbb
push
call
push
mov
lea
push
imul
rorl
push
movsl
and
insb
add
movsb
outsb
in
xor
bound
shlb
push
xor
test
mov
addl
insb
adc
imul
fs
je
rcll
push
lods
xor
mov
clc
jmp
push
push
movsl
insb
sbb
movsl
adc
xchg
test
pop
push
jl
xchg
mov
inc
inc
push
xor
imul
jns
insb
aam
movsl
fldl
xchg
fstl
sub
insl
add
mov
push
jbe
jge
mov
insb
mov
mov
gs
ds
popf
ret
gs
insl
xchg
gs
jbe
xor
pop
lods
mov
mov
push
push
gs
mov
dec
push
test
xchg
xor
test
mov
ja
in
ljmp
insb
arpl
out
push
jp
gs
idivl
insb
jmp
push
inc
stc
jmp
sbb
add
bound
fs
add
mov
pop
fisubl
xor
mov
push
jbe
jge
xor
mov
jae
jns
inc
cltd
and
mov
cmp
pop
stos
fs
test
in
jmp
push
push
jl
lods
mov
addl
jmp
sbb
daa
xchg
xchg
push
mov
in
jmp
incl
insl
xchg
in
jmp
fs
clc
lods
xchg
insl
mov
mov
xor
xchg
push
push
jp
lods
mov
addl
jae
jmp
ljmp
test
fs
push
jmp
and
push
in
inc
cmp
adc
test
push
ret
xor
inc
jmp
push
jmp
and
aaa
arpl
xor
cld
shrl
push
cld
cwtl
inc
inc
fs
fiaddl
push
mov
push
iret
std
mov
xchg
jmp
aas
push
cmc
jl
lods
mov
addl
jmp
sbb
je
jno
fwait
push
pop
xchg
jl
es
cmp
insb
xchg
fs
mov
test
cmp
add
and
sub
inc
fisubl
push
arpl
insl
jae
mov
addl
jmp
push
dec
pop
or
hlt
lea
clc
ljmp
hlt
push
jbe
jge
xor
test
jmp
push
shll
jge
xor
fnstsw
outsl
movsl
mov
inc
in
aad
jbe
fdivr
xchg
xor
jl
lods
shlb
leave
pop
ret
or
add
mov
xor
mov
addl
jmp
aad
ss
insb
xchg
scas
adc
jecxz
push
insl
xor
clc
jmp
push
push
jbe
gs
jl
insb
jmp
xchg
jl
insb
jmp
xor
sti
jmp
push
push
jbe
lods
mov
leave
aam
sbb
js
sub
xchg
fisubl
fcmovu
xor
push
push
jl
lods
mov
dec
inc
lcall
cmp
and
fnstsw
inc
in
jmp
and
in
mov
or
lods
pop
jbe
xor
xchg
push
push
jl
lods
mov
mov
xchg
cld
jl
insb
jl,pt
insb
xchg
cld
mov
pop
push
jl
lods
mov
addl
dec
mov
jl
jae
in
gs
cmpsb
arpl
insl
dec
push
lcall
push
xor
ficoml
push
rcll
push
jl
shrb
push
xor
stc
jmp
push
adc
push
ret
mov
add
lds
sub
je
imul
push
fs
xor
mov
sbb
mov
lods
mov
orl
cwtl
adc
test
ficoml
rcll
push
jl
loop
jae
arpl
rcrb
gs
or
sbb
push
fwait
push
mov
cmp
push
and
dec
mov
or
mov
fxch
insl
or
mov
rcr
cmp
push
stc
dec
cmp
in
push
and
xchg
dec
mov
fisubrl
insl
mov
pop
pop
mov
xchg
insb
rorb
push
push
lock
mov
dec
in
push
test
pop
pop
mov
pop
out
in
cs
xor
fsub
and
fcoms
or
sub
xor
cmp
jnp
add
mov
jl
insl
enter
jg
sub
or
fstps
pop
inc
mov
pop
inc
out
push
icebp
xor
fldenv
gs
push
sub
cmp
imul
movsl
in
and
popa
fistpl
sarl
call
nop
aas
add
sub
push
xchg
push
jl
mov
popa
ret
mov
mov
rclb
sarb
popa
out
jecxz
aam
inc
in
fsubs
imul
cwtl
and
in
sub
out
lock
pop
loopne
stos
lds
cld
addr16
sub
xor
out
sub
in
sbb
lcall
insl
sbb
push
sub
xor
inc
xor
xor
daa
wrmsr
in
lock
test
pop
cld
insb
add
add
loop
int3
xor
test
addr16
xor
pop
hlt
insl
mov
xor
dec
imul
xchg
imul
nop
fs
pop
or
push
andb
dec
sub
push
cmpsl
pusha
cmp
shll
sbb
dec
sub
fiaddl
xchg
in
pop
inc
fldenv
in
hlt
movsl
shr
aam
sub
cmpsl
sub
shlb
xor
popa
xchg
pop
inc
sbb
roll
aas
sub
lock
movsb
cmp
sub
scas
movsl
sub
or
popa
fwait
sub
sbb
lcall
clc
adc
cmp
jae
xchg
cmp
or
loopne
movsl
xor
popa
mov
xor
and
sub
repnz
jmp
fs
dec
das
xor
push
dec
insl
dec
jmp
jl
cmp
loopne
stos
hlt
inc
push
gs
movsb
sbb
gs
push
cmp
pop
xor
cld
fcoml
mov
inc
or
sub
movsl
movsl
pop
mov
jne
ljmp
adc
imul
jne
add
out
sub
pop
mov
adc
in
addr16
push
push
sbb
lds
je
xor
in
lret
jne
cltd
mov
shrl
popa
pop
adc
jne
pop
addr16
aaa
cmp
cs
or
and
movsl
popf
fdiv
faddl
mov
addr16
and
nop
dec
das
fwait
in
jne
ss
mov
jne
pop
bound
add
insb
shll
jne
inc
insl
in
or
mov
jmp
cmp
mov
imul
lods
shlb
xchg
std
jb
iret
push
movsb
leave
test
js
mov
xchg
jne
fdivp
dec
or
in
jb
dec
test
int
push
jle
or
ret
hlt
jge
jns
outsb
icebp
popf
push
or
push
daa
push
add
jne
sbb
and
out
mov
jmp
xchg
pusha
repnz
shll
sti
shlb
mov
mov
adc
movsb
mov
std
icebp
jne
pop
std
xor
xchg
cltd
aaa
out
out
adc
aaa
ljmp
sahf
dec
sub
outsb
inc
cld
adc
push
test
jne
adc
sub
data16
cmp
aad
gs
sbb
fs
out
and
jecxz
add
in
xchg
dec
jne
push
adc
mov
dec
jg
inc
pop
add
sbb
fiaddl
lahf
lea
and
out
loope
dec
out
cmp
mov
lea
test
int3
lods
jp
leave
jb
sub
jne
lock
add
mov
push
dec
cltd
in
pop
adc
jne
leave
fisubs
data16
xor
inc
jno
lock
test
push
xlat
xor
or
push
test
mov
jne
or
into
push
inc
jne
or
pop
xchg
outsb
cmp
bound
dec
jp
pop
jne
test
je
cmp
jne
stos
paddsb
repnz
jne
xchg
rcl
xor
mov
jmp
popf
clc
add
add
icebp
xor
xor
adc
mov
ss
add
jae
xor
movsl
ds
mov
mov
sub
jne
and
pop
popf
jne
mov
jg
outsb
and
movsl
mov
fistpll
es
mov
jne
xor
adc
or
jp
shrb
cmp
lds
and
or
inc
fidivl
push
xor
push
mov
xchg
jne
js
inc
xchg
outsb
dec
data16
ret
pop
push
int
cli
mov
add
mov
mov
imul
pop
scas
push
aam
hlt
add
ja
jne
test
mov
add
jne
inc
lcall
or
lods
push
and
jo
jnp
cmp
out
push
js
sti
inc
and
mov
call
pop
out
pop
lcall
xor
dec
scas
inc
push
leave
add
jne
call
lods
sbb
shlb
aad
jb
mov
int
push
js
or
jns
sbb
xchg
and
adc
jge
jne
sub
mov
jne
sbbl
aaa
xor
jne
lea
sbb
aas
ja
mulb
dec
sub
in
movl
mov
cmpsb
inc
xchg
push
scas
push
inc
sbb
cs
xchg
jg
adc
subl
in
gs
test
data16
enter
out
in
cmp
ret
inc
mov
pop
jne
mov
dec
add
jmp
test
jne
rcrb
je
cmpsl
xchg
es
mov
cmc
cmp
mov
pop
jo
loope
popa
add
test
push
adc
out
push
jo
xorb
and
imul
in
aaa
sti
mov
sub
push
dec
addr16
add
mov
xchg
jne
push
fidivrl
adc
mov
in
mov
iret
xchg
sbb
in
xor
jne
sbb
push
mov
nop
jae
jb
repz
cmpsb
loope
jne
pop
lods
fs
add
stos
dec
cs
popa
sti
and
dec
pop
jne
push
data16
xchg
scas
jb
mov
hlt
add
mov
push
jne
mov
andl
dec
aad
adc
mov
inc
jbe
pop
jne
mov
dec
lds
aam
sbb
push
inc
cs
pop
mov
ret
inc
insb
add
lds
pop
enter
sub
jne
xchg
movnti
lret
mov
fisttpl
adc
les
pop
dec
sub
xor
cmp
xchg
fcmovnu
and
adc
xor
or
fldenv
jne
cmp
push
jne
out
push
cwtl
sub
add
repnz
test
or
xchg
popa
jb
fistpll
aam
or
or
cmp
fnstcw
lret
pop
lock
xchg
testl
jo,pt
cmp
push
push
push
jbe
ret
pop
xorb
sbb
mov
jne
in
jg
int3
clc
add
inc
loopne
cmc
adcb
mov
cltd
jne
mov
inc
inc
lods
into
jne
sbb
adc
int3
outsb
jb
data16
scas
test
rcr
test
xchg
inc
mov
aam
hlt
inc
inc
ret
pop
jne
and
insl
mov
push
imul
pop
je
std
clc
fists
lds
jne
push
fistl
pushf
arpl
jmp
inc
cmpsb
push
cltd
push
add
and
or
jo
lock
pop
jne,pn
pop
fwait
insl
add
outsb
stc
sub
pop
icebp
lcall
mov
mov
jne
pop
xchg
pusha
inc
je,pt
xor
popf
sub
jb
and
adc
hlt
loopne
cwtl
jne
cmp
jge
add
jne
inc
gs
dec
cmc
fidivl
fs
test
inc
jno
outsb
scas
rcrb
insb
rclb
sbb
out
jnp
test
dec
mov
xlat
pop
mov
push
add
les
mov
je
dec
aaa
sbb
xor
je
mov
pop
sbb
hlt
push
lods
mov
lods
sub
or
fnstcw
jne
xchg
loopne
cmp
xorl
jle
cmp
pop
aas
dec
cmp
adc
insl
into
push
and
pop
ja
mov
push
mov
mov
xor
jne
movsb
ds
je
cwtl
inc
hlt
lret
mov
jne
sbb
or
xchg
loope
lcall
pop
jne
dec
mov
outsb
jb
add
cwtl
mov
movsl
inc
int
pop
fidivrs
inc
jb
add
jne
in
add
cmp
add
mov
mov
into
dec
adc
pop
jne
add
push
jmp
stos
jne
mov
aad
addr16
or
jne
mov
mov
push
fcmovu
aad
cmp
divb
loope
stc
cmp
fucomi
jne,pt
decl
fists
jecxz
jne
cmc
arpl
jne
lahf
push
scas
aam
xchg
jne
fnstsw
xorb
add
jbe
repz
fisubrs
mov
mov
jne
and
and
dec
inc
mov
je
mov
inc
adc
jge
add
clc
xchg
mov
xor
aaa
push
mov
mov
lret
shlb
or
lcall
push
scas
sarb
xor
xor
jne
push
popf
scas
sub
out
or
sub
addl
jne
das
dec
jmp
jne
sarb
pusha
jne
loop
stos
or
ljmp
pop
jne
sbb
pop
outsb
enter
popa
jne
repnz
dec
dec
jmp
and
or
ss
loop
add
jne
jecxz
test
cmp
sbb
xchg
clc
adc
into
xor
pop
jne
jmp
xlat
jne
jge
and
fistps
mov
outsl
imul
hlt
inc
cli
xor
lock
xor
lods
adcl
xor
std
outsb
fwait
push
push
xor
inc
mov
mov
cmp
dec
cmp
jbe
test
movsl
jne
xchg
jle
repz
xor
sub
cmp
pop
push
pusha
xor
mov
cmpl
cmp
out
inc
mov
adc
and
push
das
xor
add
push
jne
xor
jns
jne
in
fisubs
jne
aad
mov
icebp
dec
fistpll
divl
stos
mov
dec
mov
xor
js
cs
outsb
fldt
lret
and
jno
es
dec
mov
or
mov
or
sahf
shll
jmp
ss
enter
xchg
lahf
jo
cli
clc
push
cmpsl
mov
push
mov
xor
inc
xlat
jne
push
mov
sahf
jne
xchg
daa
arpl
jle
jne
pop
pop
pop
or
inc
pcmpeqw
dec
ret
fists
pop
cmp
sbb
or
daa
xorb
leave
jne
xor
mov
and
jmp
or
sub
fisubs
and
dec
int3
jne
inc
lcall
iret
jl
inc
ss
testb
in
lea
add
sbb
inc
xchg
dec
dec
cmp
jne
loope
or
jg
je
data16
xchg
jne
sar
cs
sbb
mov
jne
out
mov
jne
inc
cld
sti
push
adc
mov
xchg
pop
or
push
jne
shll
inc
xchg
jae
movsb
shufps
stos
xchg
loope
push
or
inc
adc
push
ja
jne
xchg
ret
icebp
mov
xchg
dec
jle
dec
jne
cld
arpl
jne
insl
stc
adc
push
shrb
jnp
xchg
out
dec
js
fdivs
xor
jne
imul
inc
pop
jne
cmp
js
adcl
sub
lcall
dec
push
or
mov
movsl
je
scas
push
mov
loop
data16
push
and
outsb
psubusw
lcall
jne
pusha
pushf
in
inc
bound
and
std
loopne
mov
cmp
outsb
cmpb
sbb
test
hlt
dec
inc
movsl
or
cmp
scas
test
pop
test
jbe,pt
aad
and
mov
outsl
and
jne
or
mov
push
cmp
pop
xor
out
bound
pop
push
imul
push
int
fwait
in
mov
xchg
cmc
push
hlt
mov
jb
jge
cld
adc
das
repz
movsb
lds
jg
xor
test
or
jne
add
push
test
xor
pop
lds
pop
jne
mov
aad
push
jne
lea
adc
inc
sbb
daa
sarl
cmpw
in
out
mov
jl
and
out
lods
and
pushf
jns
adc
mov
lock
pop
jmp
or
loope
in
sbb
das
add
xor
xchg
jae
lods
xchg
leave
push
movsl
jo
jne
sub
int3
add
pop
idivl
aam
dec
jne
inc
das
inc
mov
push
sbb
call
aad
sub
ja
pop
xor
rcl
jne
sub
or
or
mov
jne
fisubl
test
es
fs
into
mov
jae
dec
movsl
popl
push
xor
ljmp
sub
adc
cli
pop
jne
xchg
out
xorb
jne
cltd
inc
sahf
xlat
adc
cmp
and
pop
mov
lds
mov
aam
jns
mov
pop
sbb
insb
xchg
jo
push
in
je
sub
imul
cmp
mov
xchg
out
mov
sbb
mov
mov
rcl
insl
xor
enterw
xchg
sbb
popf
jne
sarl
bound
mov
mov
pop
cmpsl
jne
dec
aas
lods
scas
cwtl
inc
jne
fistpl
out
jnp
push
xchg
jne
xor
cmp
pushl
jb
xlat
push
lds
xor
dec
repnz
fdivs
mov
imulb
dec
lahf
sti
mov
scas
or
dec
mov
mov
pop
ret
rcr
or
lret
std
adc
shlb
lods
mov
adc
stc
xchg
jmp
jne
scas
sub
ss
and
dec
loope
jno
xchg
pop
sub
jnp
jne
xchg
call
out
jg
jne
in
mov
inc
push
xor
jne
push
rcl
movsl
sbb
notl
fisubl
lahf
sbb
xchg
jl
dec
dec
xchg
into
out
loope
sub
xchg
inc
scas
fwait
jle
xor
sbb
imul
int3
xchg
hlt
je
out
insb
jne
aaa
cmp
js
mov
jne
inc
xlat
pushf
mov
jmp
jae
leave
mov
je
lahf
aaa
cmpsb
movsb
dec
dec
mov
popf
push
jno
fidivrl
lahf
sbb
cmp
dec
xchg
rcrb
test
jne
fidivrl
mov
mov
jne
test
push
add
inc
std
in
push
xor
mov
fidivrs
pop
mov
jo
mov
jb
aam
mov
xlat
mov
jne
pop
dec
fisttps
cmp
jne
or
pop
adcb
jp
jmp
sbbb
jne,pt
repnz
pop
jb
mov
jmp
mov
add
add
jns
bound
cmp
jne
jl
jecxz
in
mov
sti
aaa
jp
and
jne
push
xchg
mov
dec
mov
and
bound
gs
rcll
jne
cwtl
js
icebp
or
push
jb
insb
imul
ret
xor
jne
xchg
or
mov
xor
je
test
or
or
cwtl
jne
jbe
cmp
imul
mov
cmpsl
mov
jne
lock
arpl
jmp
mov
xchg
fisubl
and
jne
add
jmp
bound
mov
pop
add
stc
and
pop
insl
stos
xor
daa
or
pop
mov
je
jno
xchg
jne
cmp
loope
mov
pop
cmpsl
repnz
push
lret
inc
sub
je
dec
add
jne
adc
jecxz
push
std
cmp
xchg
cmp
in
aad
jne
and
lods
inc
inc
mov
lods
pop
xchg
jg
scas
mov
cmpsb
mov
aam
out
jne
pop
fstpt
pop
fwait
movsl
cmp
mov
jb
push
aas
in
clc
inc
jl
jne
dec
les
mov
xorb
pop
mov
pushf
dec
dec
push
fists
pusha
add
in
push
mov
ficoml
fnstcw
mov
mov
mov
imul
and
jb
addr16
lcall
adc
cld
inc
xor
loop
addr16
dec
inc
aad
push
addl
aaa
data16
push
adc
jne
jmp
inc
pop
test
sub
cmpsb
std
adc
push
divb
test
les
pop
jo
dec
js
mov
push
jp
push
adcb
jne
inc
iret
inc
inc
int
jae
test
pop
adc
test
shlb
fistpll
pop
pop
jge
mov
ficoms
cmc
pop
in
sub
scas
pop
add
scas
data16
imul
outsl
movsl
xchg
jne
xorl
jne
int
xchg
mov
mov
inc
jo
arpl
bound
ret
jne
stos
mov
test
aaa
and
jne
lret
enter
call
mov
mov
dec
call
ja
icebp
popf
jmp
jl
cli
not
and
ss
call
or
jne
or
mov
jne
dec
push
insb
ss
insl
jne
inc
adc
mov
cmpsl
xchg
xchg
out
test
mov
inc
stos
inc
jne
xor
pop
pop
push
leave
gs
aam
movsl
cmp
push
xor
jl
xor
cwtl
cld
push
sbb
bnd
jo
dec
mov
push
aad
inc
test
mov
cli
call
push
push
mov
xor
lods
cmpsb
jne
mov
in
jne
xor
movsl
fdivl
aad
pop
mov
pop
jle
push
jne
cmp
mov
lods
std
push
hlt
xchg
and
jne
xor
out
inc
xchg
pop
shll
in
dec
mov
jne
aam
sub
arpl
push
xchg
hlt
jo
or
lret
push
cmp
pop
jne
xor
shrl
inc
cmp
into
shlb
mov
ss
fistps
xor
and
jne
add
sbb
movsb
and
mov
cli
insb
sbb
jne
mov
and
sbb
mov
shll
mov
mov
mov
push
inc
mov
mov
rcrl
inc
jbe
xor
jne
inc
enter
mov
push
cmc
jns
xor
test
shll
xor
es
aad
mov
rcll
rcrl
hlt
inc
pop
sub
pop
and
and
das
lds
lret
cwtl
sbb
mov
adc
jecxz
addr16
push
xchg
jno
or
ret
dec
push
stc
jne
cmp
aad
adc
or
cli
mov
in
pop
jg
adc
cmc
and
cmp
jne
stos
scas
lock
sub
or
movsb
rcll
out
mov
lret
adc
push
xlat
ret
lods
lock
dec
divb
popa
mov
mov
adc
lret
imul
cmpsb
pop
dec
cmpsl
pop
rcrl
jne
jno
cld
ja
jne
insb
lret
jg
inc
jo
cmp
or
ja
jne
add
mov
jne
repnz
cmp
jne
pusha
mov
xlat
mov
movsl
in
cs
in
cmpl
adc
inc
loope
push
jo
cmp
jmp
mov
and
dec
inc
jne
test
mov
iret
jae
mov
xor
inc
jne
into
subb
lret
and
dec
popa
push
dec
sahf
lods
sub
xor
cmpl
push
imul
lret
ss
rorb
push
xlat
leave
push
aam
ret
sbb
mov
ret
inc
push
xchg
or
jne
xchg
dec
xor
push
dec
xor
popf
fsubrl
cld
push
ss
fcmove
jne
test
xor
data16
enter
jo
outsl
pop
in
xchg
mov
inc
mov
mov
test
idivb
or
or
jb
xchg
cmp
mov
xchg
adc
dec
mov
ret
mov
and
inc
mov
jne
mov
ja
push
mov
mov
into
mov
cmp
inc
xor
ss
in
adc
cli
test
push
out
mov
jmp
fimuls
add
mov
test
sbb
pushf
std
jmp
mov
add
xlat
stos
push
cwtl
mov
andb
xchg
mov
jne
ds
rol
dec
clc
mov
and
stos
in
hlt
mov
addr16
test
stos
mov
pop
je
lcall
inc
pop
aad
dec
jne
sub
mov
pop
push
inc
mov
push
jle
pop
add
jne
jbe
adc
clc
mov
test
jb
icebp
into
mov
push
mov
mov
sub
dec
fdivl
movsl
imul
sahf
or
xchg
sbb
ja
jne
pop
push
movsb
faddl
pop
cmp
andb
repz
outsb
inc
pop
xlat
flds
das
xchg
in
xorl
pop
fldt
cmp
xorl
fidivs
xchg
insl
lret
les
or
pop
xor
jle
sar
jae
xor
pop
sti
aad
test
cwtl
mov
fs
gs
jne
sbb
push
mulb
xor
cmp
mov
ja
push
mov
xchg
fldlg2
and
jns
add
xchg
enter
daa
cmpsl
je
sbb
jns
mov
fucom
outsb
imul
cmpb
aam
inc
jne
jo
lea
jne
pusha
xchg
mov
xchg
xor
cltd
mov
ret
repz
cmc
jne
fwait
movsb
les
cmp
cmpsb
rcrb
sbb
jbe
push
outsl
jge
xchg
lods
gs
sahf
outsb
xchg
pop
int3
scas
adc
jne
imul
xchg
fsubl
lea
or
xor
push
sbb
bound
inc
and
mov
inc
popa
adc
jne
and
fs
shrd
cmpsb
xchg
cmp
out
negb
jne
cmc
adc
outsb
notl
jle
and
push
aas
push
mov
adc
fnstenv
cmp
dec
jne
cmc
xlat
imul
xchg
xchg
aad
outsb
orb
loopne
mov
pop
int3
ds
push
ja
xor
or
push
add
rcll
jne
or
in
jns
lea
aaa
xchg
addr16
jmp
cmp
xor
pop
js
cmpsl
add
inc
adc
arpl
cli
daa
pop
fdiv
jmp
ja
imul
rcr
mov
and
jne
xchg
cwtl
and
jp
je
outsb
mov
in
push
rclb
adc
int
and
xorl
shlb
jne,pn
fwait
mov
adc
pop
jae
or
lahf
push
jne
lcall
mov
mov
sub
roll
lods
sti
cmp
dec
xchg
pop
jno
and
jne
mov
adc
mov
cld
bound
xchg
push
jne
pop
in
movsb
dec
push
mov
hlt
sti
fwait
mov
je
mov
mov
push
sub
pop
or
lds
pop
jo
imul
in
stos
inc
xchg
mov
and
xchg
xor
je
and
cmp
test
clc
dec
pop
pop
out
and
and
scas
je
xchg
push
dec
roll
insl
into
inc
bound
jne
pop
lock
sbb
dec
jne
xor
adc
and
inc
jbe
xor
dec
jne
rcrl
push
push
insl
fnstenv
stos
adc
or
decb
inc
fdivl
push
jns
xchg
lods
gs
and
test
sub
pop
inc
jge
inc
xchg
jne
insl
testb
cmp
lock
cld
jle
jg
adc
hlt
cli
lcall
pop
aam
push
jg
inc
and
mull
jne
icebp
xchg
jne
inc
lcall
jl
inc
jge
test
jne
inc
frstor
xor
into
outsl
sub
hlt
movsb
push
fwait
mov
hlt
lods
adcb
mov
adc
jne
rclb
or
jnp
hlt
jne
inc
repnz
roll
pushf
popf
mov
pop
push
inc
std
mov
dec
jne
mov
scas
mov
sub
hlt
mov
jne
jg
xor
fists
rcr
pop
out
jb,pt
cltd
les
mov
push
mov
bound
aaa
scas
mov
pop
mov
or
and
decl
dec
jne
mov
pop
mov
pop
sbb
loop
outsb
stos
dec
mov
addb
in
sti
or
and
sub
leave
sub
cld
mov
xchg
push
push
jne
mov
lock
jne
add
cs
les
leave
ret
aaa
jne
lret
out
mov
rolb
xor
pop
jns
or
addr16
rcr
adc
xor
xor
push
repz
mov
add
sahf
xor
movsl
addr16
push
xchg
push
outsl
xchg
jne
add
mov
add
jne
repz
fcompl
push
mov
in
je
lods
lea
adc
aas
xor
stos
cmpsl
mov
les
mov
je
xchg
outsb
xchg
mov
loop
jo
test
jb
cmp
stc
mov
jne
mov
dec
data16
xchg
xchg
repnz
jnp
fdiv
data16
std
add
lret
sub
mov
jne
jbe
js
sbb
mov
and
xor
pop
repz
daa
lea
repnz
push
out
mov
add
cmc
call
iret
rol
repnz
jne
pop
mov
adc
es
push
push
ss
jbe
jns
mov
or
ficoml
scas
sbb
jmp
and
dec
aas
outsb
je
dec
push
in
mov
push
je
test
test
in
insb
repz
cwtl
mov
and
inc
mov
mov
movsl
jae
sbb
pop
jne
pop
aaa
mov
hlt
bound
mov
outsb
inc
fcoml
mov
clc
add
repnz
xor
dec
jne
sbb
mov
mov
aad
dec
lock
jne
push
sub
push
std
pusha
cltd
jb
repnz
mov
iret
je
xor
subb
jo
aaa
lea
in
jne
or
loop
mov
jb
subl
jne
xchg
jae
adc
jb
icebp
std
loop
lcall
jne
in
jge
jle
daa
jne
or
lock
stc
inc
hlt
lods
nop
imul
sub
cmp
dec
es
movsl
pushl
pop
cltd
loop
push
sub
in
lret
ds
dec
stc
test
in
xor
hlt
mov
aam
jne
nop
pop
adc
mov
push
jne
cmp
sarb
sbb
fmull
lahf
mov
pushf
mov
jle
push
int
lret
enter
daa
outsb
ljmp
jne
pop
insl
mov
aad
jne
stos
cmp
fbstp
mov
cmp
and
adc
sti
test
pushfw
cmc
je
arpl
or
cwtl
popa
xchg
jne
decb
loope
loop
jnp
cmp
mov
aad
push
adc
cmp
jle
push
out
sub
int
cmp
add
dec
cli
sbbl
mov
cmpsb
popf
jno
cmpsl
jb
shl
arpl
int3
fcompl
int
cmp
nop
lock
aam
mov
adcl
mov
inc
mov
dec
in
xor
xchg
jns
jne
or
addr16
lret
cmc
pop
out
or
dec
jbe
fs
sbb
push
sub
call
xor
xchg
and
pusha
loope
jne
sub
int
mov
sbb
or
addr16
lods
jne
and
add
jne
sub
imul
push
inc
clc
jg
add
jne
and
shll
adc
mov
and
pop
in
pop
pop
push
and
mov
jne
cmp
jb
sahf
cmp
xchg
xchg
sti
jge
lea
jne
lret
in
inc
iret
xchg
jl
out
outsl
loopne
add
jge
mov
addr16
jbe
adc
xchg
jae
icebp
dec
jne
lcall
push
inc
roll
jno
insl
push
hlt
xchg
cli
push
jne
lods
nop
mov
lods
xchg
push
leave
test
cmp
test
push
movsb
pause
les
jne
cltd
mov
cmp
cmp
test
jb
pop
adc
sub
pop
ljmp
push
jne
xchg
push
data16
push
jne
xor
stc
xchg
adc
adc
inc
jnp
jne
pop
pushf
aad
or
add
adc
inc
fldlg2
mov
jb
mov
mov
jne
sbb
aaa
inc
jb
aas
das
xchg
pop
push
and
xchg
ret
xchg
jne
push
xchg
mov
fsubl
add
push
call
jno
icebp
movsb
addr16
xchg
jne
dec
notb
mov
inc
push
insb
push
test
jo
les
push
jne
xchg
sub
push
mull
dec
test
shll
xor
insb
push
mov
inc
out
insb
js
shlb
pop
pusha
sti
popa
push
pop
sub
push
and
sub
jbe
add
push
pop
dec
inc
adc
xchg
lods
bound
sub
push
je
mov
lahf
pop
je
jge
fcmovne
jns
mov
xchg
leave
ljmp
jecxz
lea
jne
je
add
jno
lahf
outsb
cmp
dec
push
shll
mov
and
jne
or
sbbb
sub
push
scas
hlt
mov
inc
aas
jecxz
divb
and
xchg
outsb
cmp
les
mov
xchg
jmp
outsb
push
das
push
es
jne
inc
lods
out
inc
push
or
mov
jno
jbe
pop
inc
sub
scas
shrd
int3
jne
sbb
mov
mov
inc
inc
push
das
lcall
mov
es
sbb
loope
mov
push
movsl
mov
pop
mov
jge
sbb
pop
sub
jmp
jne
incl
clc
xchg
outsl
rclb
dec
xorb
std
cmc
mov
cmp
cmp
pop
stos
add
pop
out
jno
mov
push
pop
sar
cmp
ljmp
insb
mov
pop
movsb
add
jb
in
xchg
mov
xchg
lds
mov
jo
mov
mov
inc
cwtl
inc
je
pop
mov
push
outsl
cltd
lods
pop
fucom
mov
pop
pop
cmc
adc
pop
jne
popa
pop
add
mov
mov
and
mov
ss
dec
lods
mov
push
cli
cmp
mov
jne
jmp
push
jns
lss
inc
cmpsl
imul
and
mov
jne
sbb
pop
pop
dec
in
jne
and
add
jle
mov
dec
in
push
test
jne
sub
sbb
xor
and
jne
out
shl
jl
xchg
je
add
mov
mov
xchg
sbbl
mov
push
sub
insb
inc
and
xor
pop
inc
aad
nop
jg
cmp
dec
clc
pop
dec
data16
adc
repz
shll
pop
popf
lods
sbbl
cmp
dec
pusha
push
mov
imul
ja
sub
dec
insl
std
mov
push
je
imul
test
stos
mov
xchg
je
jne
jbe
add
aam
mov
pop
sbb
inc
movsb
stos
jne
pop
lock
mov
mov
leavew
popf
aam
aad
data16
mov
in
cmp
stos
inc
mov
test
inc
mov
outsl
dec
cld
popf
xchg
push
shlb
hlt
adc
mov
jne
push
movsl
mov
enter
data16
loope
pop
xchg
mov
jg
fsubl
cmp
loope
out
aad
enter
addr16
neg
mov
dec
aaa
mov
dec
addb
lea
lret
movsl
in
mov
mov
jne
int3
and
cmp
je
in
jg
cmp
xchg
pop
pop
int
xchg
lea
test
add
and
mov
ret
shl
test
xchg
nop
dec
xor
xchg
jne
or
jp
pop
ret
mov
mov
jne
imul
fwait
aad
repz
pop
pop
push
add
jge
in
xlat
cmp
or
mov
sub
mov
jne
or
push
rcrb
jo
xchg
pop
add
and
pop
push
and
jne
jns
jno
pop
jb
jo
xor
movsl
sbb
cmp
lret
cmc
fnstcw
test
jg
test
jecxz
out
mov
imul
mov
push
icebp
mulb
inc
fadd
jne
mov
ret
mov
mov
mov
imul
fisubl
inc
iret
jbe
or
pop
xor
cwtl
fxtract
lret
jnp
test
test
pop
jo
mov
popf
push
mov
adc
cli
jne
mov
testl
sub
mov
test
pusha
stos
jne
jmp
jbe
lret
sub
push
jne
arpl
popa
fcoml
jne
movsl
xor
shll
push
ja
mov
jne
jno
and
adc
jnp
jne
and
push
pop
shl
sahf
outsb
mov
imul
mov
ja
sub
jle
jne
xor
xlat
imul
in
sbb
insb
out
pop
add
jne
into
ja
daa
dec
nop
syscall
adc
jae
out
mov
dec
call
dec
ds
imul
lods
aad
lahf
hlt
jne
bound
mov
fstl
nop
xor
jne
ret
lods
lods
test
loope
je
push
sbb
push
jne
mov
outsl
les
inc
lret
decb
lds
scas
popa
in
into
lods
jne
aam
xchg
dec
dec
mov
pusha
push
xchg
adc
dec
jb
mov
mov
outsl
xchg
dec
push
in
in
pop
pop
mov
jge
hlt
mov
jne
and
xor
mov
out
dec
add
nop
dec
popfw
ret
pop
jne
testb
fwait
les
je
mov
jne
js
dec
push
jecxz
mov
loop
ds
adc
xorb
ucomiss
out
jo
in
test
ds
in
jp
jle
pop
lahf
lods
stc
mov
xchg
jns
inc
xchg
jne
cmpb
jne
xchg
dec
pop
adc
mov
jg
sbb
loop
divl
mov
nop
sub
inc
insl
mov
sbb
sahf
out
xchg
pop
or
cmpsl
jne
cmp
orb
jne
insl
xlat
cs
stos
or
icebp
push
lea
mov
jmp
lcall
jg
out
mov
jnp
fwait
divb
stos
sub
pop
mov
xchg
cld
jne
imul
outsb
xchg
xchg
mov
stos
loopne
jne
push
popw
nop
xchg
xchg
mov
shl
push
imul
out
dec
xchg
andl
jae
mov
decl
or
ret
xor
test
pminsw
divb
jg
mov
xlat
jne
or
dec
add
hlt
xchg
xor
jae
test
sub
cmp
pop
xor
jne
sub
add
dec
insb
mov
push
lods
jmp
dec
fldz
mov
jmp
xchg
dec
pop
ret
in
lret
pop
sahf
sarb
mov
jg
jne
rorl
mov
cmp
mov
pushf
out
and
xchg
addb
or
mov
insb
scas
rcrb
adc
add
xor
fisttps
scas
test
adc
cmpsb
jne
andb
sbb
outsb
fidivl
lcall
int3
add
jge
subl
push
add
out
rcrb
push
xor
sahf
repz
js
push
movsl
out
push
jne
cld
mov
data16
repz
loop
pop
or
jbe
les
insb
xor
pop
sub
ja
jbe
jne
mov
push
call
lret
dec
lds
hlt
pop
dec
insb
dec
jle
cmpb
ljmp
mov
cmp
int
sbb
pop
enter
std
xchg
hlt
stos
lock
add
adc
movsl
sbb
dec
or
jg
add
aad
lret
dec
je
mov
rorb
leave
jne
mov
data16
jne
dec
ja
pop
push
fistpll
hlt
and
test
mov
push
jbe
dec
xor
add
fistl
xchg
jl
jne
mov
inc
mov
pusha
ja
repz
push
in
sub
add
add
jne
int
pop
das
xor
jne
insl
xchg
or
fsub
jnp
xchg
or
jne
push
sub
inc
push
mov
jne
xor
mov
adc
hlt
xchg
aam
fcomps
test
mov
iret
mov
pop
xchg
inc
jle
cmpb
sub
inc
mov
fwait
scas
outsl
xor
adc
fisttpll
push
jne
test
xor
jne
pop
fisubs
mov
sub
hlt
minps
mov
lock
int
insb
sub
into
fadd
jne
in
pcmpeqw
fstl
cmp
mov
data16
mov
add
hlt
negb
lds
jo
fwait
xchg
or
add
rorb
inc
dec
divl
xor
addr16
cmp
pushf
xchg
lcall
jne
cmp
xor
mov
addr16
test
stc
mov
mov
scas
push
lcall
sub
call
jne
cmc
mov
lods
cli
mov
dec
push
repnz
and
inc
jecxz
push
cmp
xchg
jne
xor
cmp
fildl
jne
lea
jb
push
hlt
rcl
xor
jne
outsb
int
iret
test
jne
pop
push
inc
aad
jne
cmc
or
cmp
mov
outsb
aas
in
ja
mov
mov
jb
push
cmpsb
sub
jecxz
xchg
adc
mov
adc
adc
inc
outsb
push
dec
inc
out
pop
aam
push
jns
jne
fnsave
je
aam
std
mov
sbb
in
jne
dec
loope
inc
js
jne
cld
mov
fdivl
push
push
cmp
pop
mov
lret
jmp
pop
sbbb
imul
pop
in
mov
mov
xorl
sbb
test
dec
pop
sti
test
cltd
jne
outsl
mov
add
push
cmp
dec
in
mov
hlt
subl
jne
xchg
add
sub
in
jae
sbbb
jne
cmp
jg
jge
jne
aas
add
gs
jmp
outsb
mov
dec
jne
push
inc
jle
out
pop
jp
sub
dec
pusha
jne
int
jb
sbb
jne
lret
jns
mov
jne
mov
mov
jne
inc
es
lods
bound
sbb
bnd
dec
icebp
mov
loopne
cltd
insb
lods
out
mov
inc
and
insb
or
lods
andb
hlt
in
repnz
dec
xchg
jb
push
inc
mov
sbb
mov
imul
repz
ret
out
jne
cmpsb
add
jne
inc
jg
mov
pop
outsl
pop
in
out
mov
xchg
adc
repz
mov
decb
daa
jne
inc
popf
adc
sbb
xorps
push
jne
and
or
outsb
inc
repnz
test
movsl
xchg
add
je
dec
out
cltd
mov
inc
je
divb
pop
imul
in
loop
jg
int3
insl
jne
xor
mov
push
mov
mov
leave
xchg
cltd
mov
je
les
adc
loope
arpl
aam
aas
sahf
sub
lret
data16
shll
ficoms
sub
pop
sub
aas
sub
cmc
lea
xor
cli
fldenv
es
fwait
cmp
jne
and
test
sbb
pusha
mov
fbstp
scas
sbb
pop
cmp
cs
fwait
jae
or
jne
adc
dec
and
sbb
jne
sahf
decb
bound
lods
int
jno
push
aam
mov
or
imul
sahf
jne
jecxz
test
jmp
mov
cmp
jne
sbb
inc
pop
jo
and
xchg
aad
xchg
or
adcb
lds
cmpsb
adc
outsb
sub
add
hlt
rorl
jo
dec
cmp
mov
fistps
icebp
inc
cmpsb
add
push
jne
dec
inc
jbe
dec
pavgw
scas
cmpsb
push
imul
dec
arpl
fcmove
jne
adc
insb
push
mov
adc
mov
jnp
pop
bnd
and
dec
sbb
aas
sub
jg
push
aad
cmc
xor
test
push
and
sti
xchg
inc
mov
pop
jne
xchg
js
sbb
jne
push
je
sub
xor
mov
cmp
ss
cli
loop
pandn
enter
lods
out
arpl
mov
xchg
mov
push
push
adc
cltd
sub
ret
adc
xchg
popf
push
pop
or
mov
jmp
mov
jb
out
jae
push
test
or
jbe
mov
std
xchg
push
add
mov
pop
xchg
or
jne,pt
jg
repz
cmc
sub
jne
xor
xor
call
movsl
in
or
stos
dec
jb
mov
aam
mov
push
lahf
cli
jnp
sbb
test
jne
adc
mov
xor
arpl
imul
shlb
push
xlat
add
insl
jns
add
movsb
les
ds
pop
cmpsb
pop
aam
mov
mov
push
outsb
dec
in
jne
xor
inc
pop
lods
fs
out
mov
adc
scas
imul
daa
addr16
xchg
push
xor
jne
push
test
mov
data16
or
dec
mov
and
sub
addr16
fidivl
call
push
lods
mov
icebp
ret
int3
mov
adc
out
repz
mov
addr16
adc
jne
mov
adc
icebp
mov
jb
adc
adc
pop
dec
sub
jp
imul
std
push
enter
jae
test
xorb
rorl
jecxz
popf
xchg
inc
push
jne
mov
jne
mov
int3
iret
jne
pop
sbb
adc
mov
mov
cld
jmp
ds
lods
incl
jae
into
hlt
inc
call
outsb
mov
add
jp
mov
and
push
sub
insl
stc
jne
jmp
repz
push
push
cld
or
iret
pop
adc
aad
pop
sbb
jne
sbb
mov
xorl
mov
aad
cli
jne
lds
jne
std
jmp
inc
jne
fistl
and
insl
mov
cmp
lock
jne
cmpsb
jmp
aas
cli
xor
mov
imul
int3
sub
jne
mov
push
mov
loop
mov
jne
xlat
stc
je
addl
pop
push
cwtl
jl
jne
pusha
out
mov
jb
dec
repnz
je
jne
pop
mov
int3
ljmp
sahf
dec
sbb
push
fstpt
jecxz
leave
jno
mov
cltd
and
pop
dec
fstpl
add
jne
pop
outsb
mov
add
pop
pop
jne
jo
push
enter
pop
adc
sub
add
dec
insl
mov
dec
mov
test
cltd
pop
jne
andl
jne
pop
cmpsb
and
ja
fdivl
jo
inc
mov
cmp
mov
aad
addr16
jne
aam
xchg
adcl
fsubrl
in
cwtl
addr16
es
pop
inc
cmp
cs
inc
aam
pop
xor
jne
je
dec
sub
cmp
cmp
es
mov
addr16
jne
cmovl
cmpsl
push
cmp
inc
lret
mov
mov
jno
into
adc
loop
and
mov
adc
cmp
mov
aad
outsl
pop
js
fisubl
hlt
in
fcomps
and
lahf
mov
js
sbbl
push
dec
cmpsb
sbb
jne
cld
pop
inc
das
idivb
hlt
adc
cmc
addb
inc
shll
jae
pop
xchg
mov
push
test
mov
jne
sub
aas
out
add
repz
mov
mov
out
jne
std
roll
jb
push
add
shr
vpunpckhbw
pop
xchg
jns
cwtl
mov
into
repnz
adc
jge
add
arpl
push
rorb
lds
nop
imul
mov
movsb
pop
out
jecxz
hlt
xor
cmc
xchg
jb
xchg
jns
jmp
int3
xchg
fldt
imul
xor
cmp
cmpsb
outsb
movsb
roll
xlat
jno
sbb
pusha
push
inc
push
mov
movq
loope
ss
pop
jne
add
hlt
add
jne
loopne
test
sbb
or
lret
xor
je
stos
movsb
mov
pop
jne
and
repnz
cli
mov
inc
lret
js
xor
pop
mov
in
cmp
cmpsl
enter
adc
movsl
xor
fbld
push
pusha
aad
sbb
push
xchg
js
xor
add
push
jns
cli
adc
sbb
fucom
mov
je
or
cltd
cmp
mov
adc
movl
jne
add
jno
data16
cwtl
sbb
jne
fisubl
cwtl
not
cmp
mov
sbb
jne
jbe
and
test
negb
push
mov
cli
xchg
jne
cmp
jne
xor
pop
pop
fmuls
hlt
subb
push
mov
les
in
mov
mov
xchg
jge
jns
jne
scas
add
dec
sbb
mov
dec
inc
mov
ret
cmp
xor
jmp
jne
dec
mov
mov
mov
adc
das
daa
nop
jb
jge
cmc
ds
movsl
test
cld
jns
jne
icebp
in
fbstp
push
scas
sub
outsb
lcall
ficoml
mov
lock
sahf
jne
push
add
imul
xorl
pushf
test
js
ja
idivb
jne
xchg
mov
es
addl
jne
add
dec
mov
push
std
sub
mov
bound
adc
faddl
cli
mov
movsb
clc
or
xor
test
xchg
mov
repnz
aad
lods
xchg
testl
mov
jne
pusha
xchg
xchg
int
adc
sti
in
data16
xchg
push
xlat
mov
push
cmp
jne
xchg
mov
inc
aaa
out
add
cmpsb
cmpl
test
xor
jne
stc
xchg
test
cltd
xchg
mov
jae
stc
test
sbb
mov
dec
mov
inc
movsb
std
jp
out
inc
jne
test
inc
and
icebp
pushl
jns
ds
out
outsl
mov
pop
hlt
nop
cmpl
jge
jne
mov
cmp
es
bound
loope
xor
xchg
mov
stos
outsl
cwtl
dec
jecxz
xchg
ds
repnz
mov
mov
leave
mov
cld
jo
xchg
adc
hlt
les
cmc
and
lret
cltd
adc
ljmp
xor
aad
mov
sbb
xchg
mov
cwtl
loopne
sub
pop
cmp
mov
bound
es
loopne
mov
arpl
subl
loope
call
jl
sbb
mov
sub
dec
dec
jne
imul
jne
adc
sbb
mov
adc
xor
jne
cwtl
imul
enter
adc
jne
mov
aas
fnstenv
insb
inc
jne
gs
scas
stos
jo
mov
push
and
xchg
xchg
insb
xchg
imul
or
shlb
pop
xchg
test
shll
xchg
pop
sub
push
sub
and
sub
pushl
data16
sbb
xlat
cmp
dec
jne
fnstsw
cmp
adc
aaa
int3
sub
xchg
push
dec
jne
sub
rclb
mov
sub
repz
push
jmp
push
push
shll
fwait
jge
in
jno
jne
pop
mov
push
hlt
enter
outsb
or
call
rorb
cld
in
push
fcmovnb
lcall
lock
xor
mov
add
dec
jne
dec
pop
cli
lods
pop
movsb
pop
arpl
inc
inc
mov
push
xor
and
jle
sbbl
sbb
imul
cmp
and
cmp
xchg
jae
movsl
xor
cmpsb
les
or
mov
mov
pop
dec
dec
adc
jbe
dec
mov
jne
bound
int3
fdivs
jae
xor
inc
je
mov
cmpsl
dec
sub
das
insb
pop
mov
bound
mov
mov
mov
mov
xor
pop
in
mov
out
pop
push
outsb
inc
and
xor
add
xor
in
cmp
sub
movsl
push
lods
xor
in
mov
hlt
push
test
in
xor
int
fdivl
push
jae
and
xor
pop
add
push
insl
sub
cld
xor
in
push
outsl
cwtl
cmc
push
test
mov
addl
jmp
push
push
jl
lods
mov
addl
in
jb
sub
in
jmp
push
push
jl
lods
mov
addl
jmp
sbb
aad
in
movsl
insb
lods
arpl
push
lea
test
lds
push
mov
push
fdivrl
aad
cmc
sub
in
jmp
push
push
jl
lods
mov
addl
jmp
sbb
and
sub
in
add
sub
cmp
pop
fs
je
cmc
xor
xchg
push
push
jl
lods
mov
addl
jmp
push
push
lods
insb
aad
movsl
push
lods
xor
in
mov
hlt
push
test
in
xor
int
fdivl
push
jno
and
mov
pop
pop
mov
mov
mov
addl
jmp
push
push
xchg
pop
insl
mov
add
xchg
pop
insl
mov
add
xchg
pop
insl
mov
ja
sub
sbb
push
insb
cmp
pop
fs
jae
push
lods
sub
mov
hlt
test
lds
push
in
sub
jge
int
in
aad
cwtl
cmc
push
test
mov
addl
jmp
push
push
jl
lods
mov
addl
in
jno
sub
in
jmp
push
push
jl
lods
mov
addl
jmp
sbb
les
mov
add
push
lds
int
test
pop
js
movsl
pushf
rcrl
sarl
lds
pop
dec
lods
pop
xchg
dec
cltd
les
mov
dec
movsb
dec
add
sub
lods
sub
test
js
movsl
fstps
add
jecxz
add
test
pushf
push
ds
add
jmp
jb
sub
les
mov
push
cltd
movsb
add
and
ds
dec
sub
in
jecxz
loop
add
aad
movsb
sub
les
cwtl
sub
pushf
stos
int
inc
in
cmp
pop
nop
aad
and
mov
inc
lods
sbb
dec
iret
test
inc
js
dec
pushf
in
push
or
adc
mov
mov
les
mov
mov
mov
sub
sub
insl
adc
and
fsub
add
stc
inc
dec
fsubr
sub
adc
fcomps
test
pop
sub
mov
mov
aad
movsb
sub
push
lods
dec
pushf
in
dec
sub
adc
and
fsubl
cmp
sbb
sub
test
adc
test
js
lds
loop
faddl
loopne
mov
iret
sbb
aad
in
dec
add
add
lds
fsubs
popf
sub
mov
sbb
out
sub
roll
lods
cmp
daa
in
adc
scas
push
loop
add
fdivrl
push
movsb
sub
arpl
cmpsl
stos
sub
xchg
add
stos
gs
adc
pop
insl
add
xchg
sbb
mov
cwtl
movsb
adc
sub
stos
add
fcompl
jecxz
int3
cwtl
xor
pop
dec
cld
pop
sub
adc
add
fbld
in
fcoms
fstpt
stos
xchg
rclb
fcompl
loopne
stos
mov
in
jge
ljmp
stc
fdivrl
ds
out
sub
xchg
test
cmp
lahf
in
in
fsubs
sub
adc
gs
sbb
insl
test
imul
fs
stos
cmp
in
fcompl
fldcw
add
nop
test
cmp
out
in
and
sbb
loopne
mov
xchg
sub
cmpsb
adc
inc
stc
fcompl
mov
insl
or
jmp
push
ljmp
lods
pop
xchg
gs
in
fsubrs
jge
imul
fsubrl
loop
fsubl
xchg
xchg
add
in
lea
fcompl
sub
std
sbb
jecxz
fcompl
xchg
in
lea
in
aad
mov
lods
enter
sub
divb
lea
in
sub
mov
bound
mov
jg
push
xchg
sbb
lods
stos
push
cmp
pop
or
mov
xor
sub
mov
dec
fcompl
sub
cmp
imulb
mov
fistl
aad
cmp
fsub
xchg
inc
lods
dec
nop
movsl
cwtl
cmp
aaa
stos
mov
sbb
xchg
or
add
test
mov
cltd
mov
ja
or
in
adc
push
loopne
mov
int
xchg
sub
fnstsw
adc
aad
js
pushf
push
mov
cltd
mov
divb
fisttps
js
pop
cmp
fbld
dec
xor
adc
fucomip
add
push
inc
lods
or
mov
mov
fwait
xor
push
add
pop
add
mov
jl
cmpsl
mov
xor
or
mov
jmp
mov
daa
add
xor
push
les
sbb
mov
mov
jl
aaa
loop
popf
jl
in
or
js
pop
adcb
jl
add
xor
inc
or
stc
pop
loope
xchg
sbb
std
add
xor
mov
add
fsubs
cld
test
mov
and
jne
jb
outsl
fsts
clc
mov
dec
push
xor
loop
jl
stc
add
jne
in
ret
dec
lods
sahf
sbb
inc
sub
adc
sub
sbb
push
stos
mov
cltd
outsb
andb
sahf
bound
jne
sub
shlb
adc
sub
cmp
adcl
sti
in
push
ss
or
mov
add
push
jmp
inc
repz
arpl
in
push
sub
inc
mov
push
stos
inc
popa
mov
add
pop
enter
movsb
je
cmpl
pop
mov
adc
adc
xor
inc
lahf
xchg
movsb
fistpl
or
dec
gs
xchg
enter
inc
jecxz
add
jo
inc
mov
xchg
je
push
mov
fs
jne
xor
ud0
jo
test
push
jl
xor
sbbl
daa
hlt
pop
sbb
inc
jae
je
mov
mov
jno
outsl
outsb
insl
fistpll
hlt
fwait
out
pop
adc
decl
jo
xorl
filds
imul
lods
pop
jnp
mov
out
mov
and
mov
mov
movsl
insb
xchg
jbe
dec
cmp
jne
lock
add
fcoms
adc
dec
mov
jecxz
jne
std
inc
sbb
jne
dec
adc
aam
fmuls
mov
inc
jne,pt
and
mov
scas
xchg
test
sub
xchg
push
jne
xchg
push
jbe
out
les
jae
test
push
fdivl
add
jge
div
push
add
jne
jae
push
lock
jb
inc
std
cmp
mov
sbb
push
imul
scas
lea
int
cmp
iret
xor
push
push
divb
dec
movsb
cwtl
pop
pop
xor
xlat
fnstenv
lea
enter
jne
fidivrl
sbb
inc
jne
mov
push
pushl
dec
and
push
xchg
sub
pop
out
fisttps
jle
aas
jecxz
sub
fstpl
int
fidivrl
push
sbb
stos
das
inc
cmc
xchg
inc
xor
adc
scas
jne
mov
mov
mov
jb
test
lret
push
fdivrl
jne
loopne
stos
xor
es
call
fs
outsb
and
int
push
adc
push
andl
pop
popa
aad
adc
dec
lahf
cmp
jae
or
out
je
dec
insb
jecxz
mov
popf
fsubr
jne
loope
sub
xor
mov
hlt
stc
or
inc
aad
add
jnp
mov
aas
xchg
arpl
adc
es
insb
roll
adcb
fnstcw
lods
insb
cmpsl
add
jl
jne
stos
imul
addr16
fisttps
xor
xchg
cmp
adc
jns
loop
jne
push
in
jo
push
and
cld
inc
ja
add
repnz
push
push
jmp
or
stc
pop
in
pop
or
dec
dec
gs
movsb
jne
loop
ret
fwait
adc
or
popa
inc
cmp
test
xorb
jns
adc
in
push
cmpsb
sti
xchg
movsb
test
add
and
stc
js
je
andl
jne
les
cmpsb
sbb
popa
rorl
stos
sub
mov
dec
jne
iret
imul
cmpsb
gs
xor
outsb
pop
popf
or
adc
cmpsl
leave
shl
pop
mov
xchg
shl
and
push
ret
aad
sub
cmp
and
adc
and
testb
mov
lods
pop
aad
or
aam
in
push
and
cli
test
sahf
xlat
xor
jne
mov
cmp
jb
push
mov
popa
jne
int3
sti
sub
jne
stc
loope
add
lds
cwtl
cmpsb
loopne
adc
fstpl
xor
cmp
add
test
and
jne,pt
mov
sti
mov
inc
movsb
loopne
fcoml
loop
and
pusha
sbb
adc
fnsave
in
imul
js
pop
movsl
loope
lds
xchg
adc
out
shlb
xor
jge
in
cmp
push
jne
add
fidivs
ss
sarb
lahf
sti
mov
sar
pop
push
jb
ret
popa
add
jecxz
jne
sub
les
and
outsb
pop
aad
push
and
sub
scas
mov
arpl
dec
lcall
inc
adc
outsl
cmpsl
pop
mov
pop
callw
cmp
repz
mov
bound
lahf
jne
cmpsl
test
shr
repz
inc
jne
movsb
or
cwtl
std
and
ss
mov
js
jb
decb
cmp
pop
xor
cmp
out
jno
fcmovne
inc
mov
adc
cld
adc
or
jne
cmp
push
das
jne
aaa
xor
or
xchg
jne
mov
xor
imul
mov
and
mov
jmp
stos
clc
pop
and
fcmovnbe
mov
lea
push
xchg
fidivrs
mov
popa
mov
push
xlat
and
cmp
enter
testb
inc
dec
scas
jne
in
xchg
test
add
je
push
insl
jmp
std
xchg
icebp
int
sarl
mov
sbb
inc
test
add
cmp
aaa
push
jne
data16
xchg
mov
jb
jmp
fdivl
fistl
or
fidivl
ds
rclb
mov
jmp
jne
movsb
xchg
jne
imul
jne
out
mov
jne
xchg
or
lds
in
dec
pop
and
cmp
adc
jne
repz
fs
cmp
jne
mov
cmp
push
pop
orl
popf
subb
push
fwait
test
mov
lret
dec
fxch
xchg
and
ja
adc
inc
clc
push
jne
lock
cmp
stos
mov
rolb
out
insl
sbb
loopne
fdivrp
cmp
jne
mov
fisttpll
jle
mov
fwait
arpl
icebp
dec
rclb
jne
inc
stc
jo
jge
jne
or
mov
jne
sti
mov
fistpl
jnp
jne
or
fbstp
push
jne
stc
leave
add
adc
jl
mov
stc
jmp
cli
dec
push
aas
int
jne
cltd
pop
insb
sti
or
push
jne
or
jl
pop
loope
and
pop
mov
cmp
adc
test
inc
lahf
sarb
jne
inc
cmp
fisubl
dec
stc
lret
jb
cmp
hlt
mov
mov
test
or
xchg
jae
inc
fbstp
subl
xor
push
ds
inc
jne
stos
sahf
mov
pop
das
jne
sbb
into
jge
xlat
or
push
mov
or
sub
or
stos
mov
adc
inc
or
lcall
fwait
aaa
push
cmp
sarl
outsb
mov
and
jb
mov
mov
jge
add
mov
sub
xorl
in
cmp
je
stc
lea
mov
push
dec
jne
scas
js
cmp
scas
xor
outsl
pusha
data16
cs
pop
cmp
ret
jne
adc
sbbl
loop,pt
xor
jl
pop
cmp
sbb
adc
dec
dec
mov
sub
outsb
sti
and
jmp
test
mov
jne
jo
mov
xchg
jmp
jne
mov
fs
repz
sarl
mov
out
push
or
bound
fbld
js
jae
std
orl
pop
xor
inc
call
pushf
jle
sub
mov
cltd
and
in
jne
stos
mov
cmpl
jmp
push
into
js
aam
xor
in
push
daa
outsb
ltr
je
out
out
xor
xorl
or
lds
adc
push
cmp
jge
outsb
jno
call
xorb
daa
xor
enter
dec
mov
je
cli
pusha
xor
push
xchg
movl
movsl
inc
loope
mov
mov
inc
or
ret
jecxz
fwait
xchg
add
mov
loopne
or
inc
arpl
add
push
xor
shll
mov
icebp
ds
outsb
cltd
sub
fdivs
bound
pop
fidivrl
jne
mov
rcrl
out
sar
jg
xchg
add
jns
cmp
fsts
cwtl
pushf
sub
cltd
sahf
dec
hlt
sub
and
cmc
add
jb
icebp
add
test
xchg
or
out
daa
cld
xchg
pushf
outsb
aas
cmpsb
push
jmp
xor
jne
dec
dec
xchg
addr16
lahf
jne
mov
pop
data16
push
je
punpckldq
pop
daa
out
pop
add
mov
cmpsb
repnz
push
lret
jne
ds
jp
movsl
inc
fwait
mov
addr16
aad
cmp
mov
jne
dec
sbb
xchg
lahf
faddl
dec
mov
int3
adc
jne
pop
lret
xchg
pop
xor
xchg
lock
test
ret
fidivs
cmp
push
sub
std
pop
mov
jmp
sbb
and
dec
gs
movsb
jg
jne
cmp
aam
jne
aaa
cli
xchg
clc
xchg
jne
jae
xchg
rorb
mov
mov
fistpl
sub
dec
aaa
hlt
xor
enter
out
xor
jne
mov
into
push
jne
mov
xor
int3
rorl
jne
push
jno
insl
iret
push
fisubrl
negl
mov
les
adc
test
push
test
jne
mov
cmp
pop
and
pop
add
or
cvttps2pi
bound
ds
jne
sub
xor
and
pop
jno
das
push
hlt
cwtl
inc
xor
jae
push
xor
sub
adc
insb
aas
add
and
jne
cmp
pop
arpl
inc
inc
cmp
or
sub
xor
cmp
adc
pop
push
insb
pop
dec
or
pop
adc
call
dec
hlt
inc
dec
cli
jne
adc
push
outsl
cs
jne
daa
add
or
inc
sbb
stc
mov
psrlw
and
xor
insb
inc
in
cmc
in
mov
push
insb
inc
push
dec
insb
xor
dec
ds
divb
mov
lods
push
jecxz
sub
push
bound
inc
fs
insb
pop
dec
rcll
sub
and
dec
data16
dec
fcompl
lods
push
nop
loop
iret
leave
push
out
push
cmc
xchg
mov
pop
mov
dec
call
insb
sbb
push
das
stc
dec
movsb
pop
cmpsl
scas
mov
insb
dec
sub
bound
dec
xor
insb
in
bound
dec
dec
sub
leave
lods
insb
jle
mov
mov
mov
and
sub
sub
sbb
frstor
fs
in
movl
imul
in
rcr
cmp
insb
dec
lock
push
sbb
fadd
in
rolb
sub
push
bound
inc
fs
insb
adc
lret
fwait
in
loop
push
cmpsl
push
mov
or
test
rcrb
inc
insb
jnp
ficoms
jg
push
stc
add
imul
sub
aaa
in
sub
roll
inc
cmpsb
insb
push
push
pop
pop
adc
je
cmp
outsb
sub
pop
mov
push
insb
xchg
adc
lcall
xor
fldenv
xchg
lea
ret
lods
insb
or
incb
dec
nop
sbb
scas
mov
xor
xchg
in
xchg
bound
dec
xchg
cmp
jecxz
sub
fneni(8087
mov
push
pop
push
rcrl
in
add
push
cmp
sub
pop
scas
in
dec
adc
inc
insb
xchg
andl
loop
imul
roll
push
mov
es
loop
dec
inc
cmp
insb
push
add
mov
push
pop
ja
mov
frstor
arpl
xor
xchg
rcrl
loop
es
push
inc
xor
sbb
inc
std
pop
adc
rorb
and
clc
loope
leave
push
bound
pop
pop
sub
push
insb
fists
cmp
mov
sahf
adc
call
inc
bound
stos
push
lods
insb
mov
arpl
outsl
pop
xor
test
ljmp
mov
push
sub
add
imul
enter
adc
fst
insb
addr16
mov
sub
cli
pop
out
push
jmp
ret
lea
dec
test
push
fildll
mov
sahf
push
mov
cmpsl
push
jns
loop
mov
push
arpl
sub
inc
sub
test
fs
sub
popf
sub
lods
push
jmp
jno
sub
loopne
out
vpdpwssd
dec
cmp
cmp
jl
call
sub
lock
mov
sub
inc
in
push
bound
ljmp
pusha
pop
xor
in
imul
loop
jg
push
push
adc
mov
jg
push
popa
xor
or
push
sbb
repnz
ljmp
bound
jmp
fstp
adc
clc
loopne
mov
leave
lods
insb
lahf
rorb
pusha
mov
pop
jbe
push
iret
dec
xor
imul
rcll
push
push
notb
mov
insb
lar
xor
jecxz
mov
loope
push
fmul
push
inc
push
cmp
movsb
pop
hlt
enter
fnstsw
pushf
push
push
jo
fs
push
insb
push
adc
arpl
in
mov
int3
dec
pop
adc
dec
test
adc
push
sbb
pushf
frstor
jg
mov
shlb
cmp
imul
das
fstl
push
arpl
adc
icebp
sub
push
out
inc
rol
ficoms
adc
ss
lods
pop
push
push
sub
mov
in
add
pop
insb
sbb
sub
pop
sarl
xchg
jmp
rolb
clc
jno
repnz
sbb
push
rorb
aad
fdivs
idivb
repz
and
jne
sub
in
xor
jp
jne
fistpl
out
ret
jne
xor
jmp
jne
out
mov
mov
loope
push
sbb
daa
bnd
lahf
adc
cmpsl
adc
pop
mov
into
call
add
movsb
jne
cmp
dec
jne
mov
fwait
das
or
push
jne
sbbl
loopne
jb
jge
scas
jg
xchg
mov
mov
inc
lods
xorps
xchg
hlt
and
add
inc
sub
dec
jne
pop
mov
add
movsl
pop
jno
rorl
pop
data16
test
and
jne
clc
cmp
push
mov
jae
sbb
filds
sbb
xchg
ljmp
gs
or
je
xchg
xlat
int
adc
ss
xchg
in
int3
push
lret
lds
mov
sbbb
ljmp
push
or
bound
imul
addr16
pop
add
add
out
fs
repnz
divl
add
adc
cwtd
xchg
test
cmp
adc
mov
pop
mov
mov
out
loop
cmp
jg
jne
dec
inc
or
rclb
push
push
jb
int3
xchg
fsubl
jne
call
sti
push
jne
test
pop
jne
add
mov
in
adc
sbb
shlb
pop
ret
imull
shlb
mov
inc
jne
dec
dec
rep
dec
jns
jne
aam
jo
pop
dec
shll
loope
xor
repz
movsl
idivb
jae
pop
jne
sub
bound
rcrb
shll
dec
movb
ret
or
loop
mov
cld
ret
lock
fildll
outsb
mov
les
sub
popf
inc
push
leave
pop
push
mov
xchg
fwait
stos
fcoml
push
and
mov
push
push
lds
mov
loope
adc
loop
pop
and
jne
mov
mov
xchg
inc
je
or
inc
pushf
jne
sbb
gs
push
sub
divl
pop
mov
xchg
dec
gs
arpl
cld
jae
xor
push
or
mov
test
daa
pop
inc
jne
pusha
scas
push
push
and
aas
imul
ss
inc
adcb
jge
gs
jae
fdivrl
imull
sahf
xchg
in
push
enter
push
daa
sbb
jb
or
mov
je
dec
ja
jne
stos
repnz
stc
jnp
jne
test
mov
jne
mov
js
dec
aas
ss
test
add
jne
pusha
jno
push
mov
fidivs
fldt
hlt
xchg
mov
ret
add
pop
pop
pop
jne
aad
cmp
inc
lock
sbb
stos
mov
sub
sbb
lret
jp
sub
jne
jl
mull
and
xor
xorb
fwait
push
gs
mov
mov
fbstp
pop
jne
into
idivb
adc
pop
add
cmc
es
push
dec
in
jne
xchg
lcall
outsl
push
sbb
mov
xchg
std
pop
mov
daa
int3
or
jne
mov
cli
insl
mov
pop
iret
shrl
sub
jne
cvtps2pi
addr16
jne
mov
xchg
jge
fsubl
out
ficoml
out
mov
aam
in
push
xor
jne
lds
mov
sarb
xchg
push
fnstsw
in
jmp
cmp
xchg
push
push
in
in
and
je
jb
cmpsl
push
out
pop
dec
push
stc
mov
pop
rcrb
out
mov
push
stos
in
xor
xchg
fdivrs
jnp
dec
out
xchg
mov
ret
sbb
mov
cs
lods
cmp
xor
push
mov
mov
xchg
js
xor
out
push
fsts
and
in
jle
add
out
add
in
pop
cmp
xchg
cmp
or
push
sbb
ss
xor
jle
jae
repz
push
sbb
in
andl
add
jecxz
popf
push
add
inc
in
and
xchg
ss
loope
and
push
fs
mov
pop
inc
add
pop
dec
fisubrs
aam
jo
inc
pop
insb
push
arpl
aas
pop
hlt
ficoml
add
pop
dec
daa
dec
pop
or
jb
insb
fs
pop
repz
sbb
add
push
inc
and
jne
sbb
out
shll
push
jg
cmp
sub
stc
ret
mov
xchg
push
aaa
pop
inc
in
add
lock
fistpll
mov
jb
mov
dec
xorb
pop
push
std
les
lods
mov
or
cmp
push
lcall
add
sub
sub
sub
pop
icebp
cmpsb
negl
movsl
or
lret
mov
mov
pop
pop
out
xor
sub
sahf
cmovb
icebp
mov
ljmp
push
mov
outsl
ja
in
cmc
aad
xchg
test
push
push
mov
shll
cmpb
xor
in
ljmp
fsub
mov
test
popf
xchg
mov
fwait
out
xor
push
mov
nop
jbe
pop
out
jl
addr16
mov
cmc
add
pop
sub
cs
dec
bound
mov
std
xchg
add
pop
shr
xor
test
jecxz
mov
and
pop
cmpl
repnz
cmp
adc
pop
mov
cs
popl
fs
adc
mov
xlat
add
pop
movsb
rcrb
fs
mov
cmp
pop
lret
cs
xchg
pop
mov
into
xchg
fs
mov
add
pop
pop
enter
pop
xchg
cmp
inc
fs
add
mov
popa
add
pop
push
loop
cs
or
add
pop
sbb
leave
xchg
add
pop
int
loope
shll
std
mov
mov
lods
mov
pop
js
sbb
add
pop
mov
les
mov
sub
int3
pop
xchg
popf
or
ror
fs
xorl
pop
cltd
cli
pop
push
mov
push
pop
push
mov
in
in
sub
mov
inc
xchg
add
push
iret
push
test
shr
fildll
out
aam
inc
clc
xchg
push
fnstenv
push
in
push
fisubrs
xchg
jge
mov
jmp
out
ljmpw
in
in
aaa
xchg
xor
test
sub
in
jo
jg
je
pop
addr16
mov
push
rorb
inc
in
push
push
xchg
jl
or
out
pop
out
push
in
mov
sbb
out
xlat
xchg
mov
cmp
dec
fsubr
ret
xchg
inc
cmp
int3
pushf
push
add
mov
in
into
dec
ficoml
out
pusha
out
push
loop
mov
push
mov
and
out
rclb
in
out
aam
jge
insb
in
out
pop
push
in
fwait
sahf
xchg
inc
cmp
movsl
or
in
mov
fstl
out
push
dec
fs
adc
or
pop
fistpll
shrb
push
jmp
les
push
and
push
stc
xor
arpl
push
xor
out
xor
jmp
sub
push
xor
in
mov
jle
fisubrs
pop
xor
or
sbb
push
jae
es
push
orl
push
xor
in
adc
push
dec
sub
shlb
aas
in
fisubl
push
dec
sub
in
pop
arpl
push
add
ret
xor
sub
sub
aaa
xor
in
andb
fs
dec
xor
in
push
das
xor
push
lea
shll
or
nop
arpl
add
sahf
xor
loopne
cmpsb
arpl
outsl
sub
xor
mov
ja
mov
ljmp
jno
xchg
arpl
inc
pop
in
arpl
push
sub
inc
xor
push
push
sub
cs
mov
dec
arpl
push
aad
fsub
movsb
push
divl
psadbw
lret
push
stos
sub
cmp
std
xchg
in
pop
arpl
push
cmp
push
jbe
or
xor
pop
in
xchg
push
int
shl
ds
jmp
inc
xor
sbb
mov
in
push
xchg
xor
jnp
outsb
arpl
sub
pop
xor
add
push
push
test
scas
and
push
arpl
push
fldcw
in
out
arpl
push
in
xor
mov
lret
xor
arpl
sub
movsl
xor
sbb
in
push
bound
ret
mov
sub
push
xor
push
in
sub
jbe
cld
sub
jge
hlt
pop
in
fwait
arpl
sub
lds
jmp
arpl
lahf
sub
clc
xor
sti
in
andl
push
sub
je
push
dec
in
ja
sahf
push
lret
in
push
repnz
in
push
test
enter
arpl
push
fldcw
mov
mov
dec
push
aas
sub
test
nop
arpl
inc
push
pusha
xor
in
push
arpl
in
push
outsb
arpl
hlt
arpl
in
push
add
insb
repz
dec
arpl
test
xor
aad
and
push
lahf
sub
xchg
xor
in
and
inc
fs
mov
push
jns
les
push
or
in
sub
push
sbb
push
xchg
lret
jp
xor
push
inc
sub
jl
jae
in
and
sub
shlb
xor
fcoms
sub
in
fwait
arpl
sub
mov
bound
push
push
sub
pop
xor
cmp
sub
add
adc
cltd
push
push
sub
in
xor
xchg
mov
sub
lcall
imul
outsl
in
push
sbb
mov
in
leave
arpl
push
in
loope
xchg
push
std
xor
or
jmp
int3
in
or
push
subl
in
mov
sub
iret
xor
scas
in
lea
push
add
mov
add
sub
jb
jg
in
adc
inc
push
push
sub
mov
pop
xlat
in
xchg
arpl
fsubrl
pushf
xor
loopne
fisubl
push
out
sub
and
dec
xchg
in
call
sub
xor
or
push
dec
sub
in
mov
sub
sti
xor
mov
inc
sub
dec
xor
in
lret
push
stos
sub
stc
xchg
arpl
cs
mov
fldenv
push
add
js
jecxz
in
aas
arpl
push
jle
test
xor
popf
push
inc
sub
scas
xor
in
pop
arpl
push
jo
frstpm(287
outsb
push
arpl
hlt
xchg
in
mov
push
ret
sub
repz
jmp
sub
aad
and
in
lahf
arpl
push
dec
sub
lock
movsb
ljmp
jns
les
push
or
in
sub
push
sbb
push
xchg
lret
jp
xor
push
inc
sub
jl
jae
in
and
sub
shlb
xor
fcoms
sub
in
fwait
arpl
sub
mov
bound
push
push
sub
pop
xor
cmp
sub
add
adc
cltd
push
push
sub
in
xor
xchg
mov
sub
lcall
imul
outsl
in
push
sbb
mov
in
leave
arpl
push
in
loope
xchg
push
std
xor
or
jmp
int3
in
or
push
subl
in
mov
sub
iret
xor
scas
in
lea
push
add
mov
add
sub
jb
jg
in
adc
inc
push
push
sub
mov
pop
xlat
in
xchg
arpl
fsubrl
pushf
xor
loopne
fisubl
push
out
sub
and
dec
xchg
in
call
sub
xor
or
push
dec
sub
in
mov
or
adc
pop
mov
fidivrs
jne
or
leave
cmp
je
xchg
jb
push
inc
xchg
and
outsb
decb
jg
test
sub
es
sahf
jns
dec
stos
mov
push
jne
rclb
out
les
jne
push
mov
addr16
sbb
xchg
mov
add
cmc
sub
jne
or
push
jne
pusha
loop
loope
or
add
mov
jne
push
mov
out
lods
lods
xor
mov
or
fstpl
add
cwtl
mov
es
pop
lods
push
leave
psubw
xchg
sub
pop
inc
jne
fbld
adc
xor
adc
xchg
mov
ja
aad
jl
dec
jne
add
xor
pop
jne
or
and
jge
lret
mov
xchg
xchg
outsb
push
out
mov
dec
ret
mov
outsb
inc
shlb
jge
adcl
jne
jae
or
sbb
cmpsb
pop
dec
into
std
shll
outsb
addl
adc
mov
mov
mov
ja
ljmp
and
jo
xchg
jne
sarl
add
mov
xor
add
je
mov
push
adc
add
xorl
sub
jmp
sbb
jno
mov
pusha
jbe
fdivrl
lahf
jne
mov
in
xor
pushf
xlat
inc
lea
subb
in
mov
sbb
aam
clc
imul
xor
jge
push
mov
hlt
out
repz
push
dec
mov
or
add
js
jbe
data16
cmp
mov
aaa
dec
imul
adc
jne
and
jne
push
shlw
mov
hlt
jne
mov
adc
push
rcrl
jne
sub
arpl
xchg
jne
mov
nop
cmp
xchg
xor
adc
jmp
enter
mov
lods
push
test
jne
outsb
sub
jne
adc
sbb
cmpb
jne
testb
dec
stos
jae
scas
cltd
mov
xchg
test
sahf
inc
cmpsl
stos
xor
push
outsb
xor
aad
push
stc
mov
jl
lea
pop
xlat
inc
sub
push
mov
jne
dec
ret
int3
add
loopne
jnp
mov
jne
int
call
outsb
pop
pop
stc
dec
popf
movsl
inc
in
out
jne
daa
scas
pushf
cmp
stos
shll
mov
xor
sar
xchg
dec
fwait
jne
out
ss
jne
fcoms
or
test
adc
jmp
mov
jle
repnz
adc
sbb
mov
movsl
jecxz
push
jne
dec
int3
cmpsb
push
arpl
lods
jne
fnstsw
gs
stc
into
lea
adc
lcall
std
insb
jne
pop
orl
loope
adc
jbe
notb
insw
xchg
xchg
mov
jne
aas
cmpsl
mov
insb
mov
lahf
inc
rol
dec
cmp
push
hlt
scas
shl
inc
inc
rorl
jne
add
mov
jne
xchg
in
lds
popf
jne
test
sub
fwait
jne
imull
jg
inc
sub
mov
xchg
fidivs
xlat
movsb
shlb
or
pop
mov
push
jne
das
adc
fcoms
mov
je
inc
sbb
add
jp
xor
ret
jne
loop
mov
jne
or
adc
call
sbb
popa
ss
jne
in
cmpsl
int3
dec
xchg
xchg
pop
nop
mov
jne
les
fldenv
addl
pop
popa
cmpsl
std
popf
scas
jne,pt
and
mov
js
jne
xchg
cmp
popa
cld
xor
xor
or
push
inc
dec
mov
xor
mov
mov
dec
cmp
jbe
loope
xor
int
add
test
xchg
popf
jne
xchg
fsts
pop
mov
sti
jae
lock
inc
mov
jae
movsl
mov
je
arpl
in
in
jecxz
and
sub
jns
arpl
push
out
sub
push
push
fdivl
xchg
jae
arpl
push
scas
sub
mov
fwait
dec
in
mov
sub
or
cwtl
mov
push
shrl
xor
xchg
in
lock
loopne
sbb
xor
push
push
dec
sub
rolb
push
sbb
test
aam
in
mov
sub
inc
xor
cmp
lret
arpl
and
jl
cmp
xor
shr
sub
push
xor
test
in
push
cmp
mov
inc
fs
repz
jp
pop
push
xchg
xor
in
push
arpl
push
mov
shll
push
pop
sub
xor
pop
push
enter
lods
sub
mov
mov
sub
or
arpl
in
std
in
or
push
subb
xor
jnp
push
arpl
in
push
scas
xor
push
dec
sub
xchg
xor
in
adc
push
lea
mov
clc
int3
in
ret
push
into
sub
insb
xor
adc
sub
in
cmpsl
arpl
mov
arpl
push
iret
sub
sub
jle
in
inc
arpl
inc
and
and
xchg
xchg
in
pop
arpl
in
push
add
inc
sbb
and
push
bound
out
in
xchg
inc
arpl
xor
std
in
mov
mov
push
shll
out
cmc
in
aaa
arpl
push
sub
jmp
xor
in
xchg
arpl
push
in
adc
add
into
in
adc
push
pop
sub
sbb
or
adc
sub
push
shrb
xor
test
push
jl
push
in
push
cli
xor
in
push
arpl
lods
sub
aaa
xor
in
enter
cmp
inc
xor
in
arpl
push
dec
sub
or
jge
in
jae
out
and
dec
xor
out
inc
test
xor
pop
in
shll
xchg
sub
adc
ja
in
and
push
mov
xor
jmp
sub
in
sbb
push
pusha
sub
xor
xlat
xor
jmp
sbb
sub
push
xchg
arpl
push
mov
jbe
cmp
pushf
push
iret
sub
push
xor
mov
push
sub
mov
pop
arpl
scas
sub
pop
xor
in
adc
sub
dec
xor
mov
xor
cmp
push
aam
inc
in
push
and
xchg
pop
in
mov
sub
dec
xor
daa
in
movsb
arpl
push
push
cmc
in
push
out
mov
in
loop
test
in
push
jle
hlt
in
jecxz
dec
push
arpl
adc
mov
mov
and
cmpsb
xor
insb
push
clc
sub
loopne
ud1
stos
arpl
in
push
and
lds
in
push
shlb
push
in
and
mov
sub
pop
xor
adc
imul
in
les
push
add
test
lret
push
in
lcall
in
push
mov
push
sub
loope
je
ret
in
push
lock
adcl
push
lret
jnp
xchg
arpl
sub
nop
xor
in
adc
push
mov
push
inc
xor
das
in
mov
sub
mov
add
inc
les
xor
push
cmpsl
sub
and
and
in
or
push
insl
sub
xchg
xor
add
sub
push
and
mov
ja,pt
mov
jb
pop
push
cmpsb
xor
outsb
in
or
fwait
push
jo
inc
in
push
inc
xor
repz
push
add
pop
push
in
cwtl
pop
sbb
xor
fcoml
sub
lea
sub
lock
arpl
push
dec
sub
addr16
in
dec
pop
fsub
sbb
jp
popf
in
push
xchg
fidivl
push
arpl
push
xor
in
jmp
mov
in
push
fnsave
divl
arpl
push
jp
xor
push
push
mov
xchg
inc
jmp
sub
sub
mov
xlat
push
ret
sub
ret
loopne
mov
push
test
sub
cmp
adcb
mov
xor
push
in
mulb
push
popf
sub
sbb
movsl
mov
push
pop
sub
in
sbb
fistl
sub
mov
push
arpl
push
lds
shlb
shll
in
repnz
push
into
sub
test
in
in
xchg
push
fisubrs
dec
xor
pop
in
call
sub
xor
jge
movsb
push
int3
xor
in
arpl
in
push
jle
js
in
xor
push
or
push
pop
xor
int
movsb
push
shll
stos
in
inc
arpl
push
mov
xchg
inc
aas
shlb
mov
rcl
cmc
sbbb
repnz
jne
inc
out
xor
and
loopne
iret
mov
jne
xchg
loope
xor
jne
insl
inc
aam
dec
pushf
push
jne
sbb
sub
jmp
jne
add
adc
or
rcrl
test
loop
add
mov
das
push
into
jmp
popf
lret
mov
xchg
sbb
outsl
movsl
jne
push
out
ss
jne
mov
or
jne
fs
push
cltd
mov
jne
cmpsb
cmpsl
test
popl
fidivs
add
enter
jne
lea
xchg
pop
jne,pn
pop
add
dec
mov
push
jne
adc
pop
mov
jns
pop
aaa
sub
jne
mov
cld
test
adcl
daa
scas
inc
les
jae
dec
hlt
mov
adc
jne
sub
nop
cli
jecxz
lods
flds
jne
add
mov
fstl
dec
jno
mov
xchg
or
adc
pop
push
imul
sub
and
sbb
insl
inc
and
call
push
and
adc
pop
dec
and
rclb
push
sbb
sub
cmp
shlb
and
jne
xchg
dec
and
sar
dec
push
shll
loopne
mov
cmpb
dec
and
popa
stc
lea
mov
loopne
mov
int3
int
mov
mov
mov
mov
mov
loopne
mov
mov
enter
sbb
sbb
inc
and
movsl
rclb
inc
and
nop
dec
inc
and
sub
movsl
rclb
dec
and
nop
test
mov
add
sub
pop
mov
enter
aad
lock
loopne
mov
mov
sub
lds
mov
mov
mov
mov
mov
enter
imul
mov
sub
jge
dec
sub
loopne
mov
loopne
loopne
mov
loopne
mov
mov
mov
mov
mov
mov
mov
loopne
mov
mov
in
daa
mov
mov
loopne
mov
mov
daa
mov
mov
loopne
mov
mov
mov
mov
mov
mov
fldcw
loopne
mov
sub
loopne
mov
mov
daa
loopne
mov
mov
mov
daa
mov
mov
mov
loopne
mov
jno
mov
loopne
mov
daa
mov
loopne
mov
loopne
mov
mov
imul
sub
loopne
mov
mov
loopne
mov
adc
inc
es
mov
sub
mov
mov
loopne
mov
es
mov
mov
cltd
daa
loopne
jl
es
mov
mov
loope
in
jne
and
dec
dec
push
push
mov
mov
loopne
mov
mov
mov
mov
mov
mov
and
sub
leave
int3
popa
sub
xchg
int3
lds
mov
mov
loope
and
and
nop
addl
mov
movsl
sub
and
and
add
and
cmpb
and
clc
xorb
inc
and
rorb
inc
and
dec
sbbb
inc
add
mov
enter
popf
mov
enter
call
clc
mov
enter
sub
movsl
int3
adc
mov
loopne
enter
add
sub
pop
enter
lods
dec
and
lock
inc
and
shlb
lds
add
cmp
nop
cmp
in
and
nop
adc
insl
dec
and
hlt
rorb
jge
and
rorl
shlb
sbb
loopne
mov
mov
and
in
inc
and
cmp
mov
and
mov
xor
cltd
cmp
lods
ror
inc
and
cmp
and
in
rcrb
jge
jns
and
nop
gs
and
mov
adc
and
sar
and
dec
inc
and
nop
sbb
push
inc
and
adcb
inc
and
sarl
and
fsts
cmpb
inc
and
xor
and
shrb
and
pop
rclb
and
shlb
and
cmp
and
hlt
nop
lds
and
jno
xor
popa
cmp
hlt
shrb
and
rol
cmp
inc
nop
sub
push
cmp
cltd
shl
and
in
cmp
sbb
jno
jno
and
sarl
and
sub
inc
cmp
adc
inc
nop
dec
cmp
call
cld
rclb
cmp
in
xor
faddl
mov
movsl
sarb
and
inc
nop
lds
and
sarl
and
rcll
jne
mov
mov
and
insl
nop
adc
call
cmp
call
pop
sarb
and
sbb
test
leave
dec
and
xchg
dec
and
shlb
xchg
rol
and
rcl
stc
in
mov
loopne
mov
rorb
inc
and
popa
mov
loopne
mov
mov
mov
mov
mov
mov
enter
adc
xor
mov
loopne
mov
mov
inc
and
nop
lds
fsts
shlb
call
clc
inc
and
orl
and
andb
inc
and
cmp
in
subb
dec
add
xchg
int3
aad
mov
mov
mov
loopne
mov
mov
mov
mov
mov
mov
enter
test
or
jge
mov
mov
loopne
enter
loopne
mov
mov
loopne
mov
mov
mov
loopne
mov
mov
enter
lods
mov
sub
loopne
enter
in
mov
mov
mov
loopne
mov
adc
loopne
mov
daa
mov
loopne
mov
mov
mov
loopne
mov
mov
mov
mov
loopne
mov
mov
sub
pop
mov
mov
mov
mov
mov
mov
mov
loopne
mov
mov
daa
mov
loopne
mov
loopne
mov
sub
mov
loopne
jl
daa
loopne
mov
daa
mov
loopne
mov
mov
loopne
mov
jl
daa
loopne
mov
mov
daa
loopne
jl
daa
loopne
mov
mov
xor
xor
fsubrl
mov
mov
mov
loopne
jl
daa
loopne
mov
daa
loopne
jl
pop
lods
add
je
in
pop
arpl
dec
sbb
xor
sub
inc
movsb
add
jns
mul
call
xor
repnz
jmp
rcll
shll
jg
movsb
pop
adc
mov
jmp
sub
cmp
inc
dec
in
push
arpl
pop
sub
add
cli
adc
or
sub
lret
mov
push
out
sub
xchg
xor
scas
in
push
mov
mull
dec
sti
rcl
stos
sbb
fstps
popf
rorb
or
int
clc
shrb
or
sub
movsl
shrb
adc
loopne
stos
test
mov
add
sub
pop
rolb
xor
xchg
loope
aad
lock
adc
in
cli
call
aad
dec
mov
cmp
dec
pop
cli
clc
fisttps
lods
fisttps
in
fisttps
jge
int3
insl
sbb
hlt
fmuls
jge
dec
loope
rcrl
fmuls
mov
loopne
dec
mov
mov
fisttps
inc
fmuls
aad
int3
mov
mov
mov
int3
xor
cltd
mov
cli
pop
cmp
add
fmul
pop
sbb
int3
jns
sub
dec
add
dec
mov
adc
fwait
insl
fmuls
dec
sbb
push
cli
or
int3
adc
popf
add
dec
shll
cli
dec
hlt
mov
mov
add
dec
xor
cli
xor
pop
fmuls
add
int3
and
cli
sub
hlt
fisttps
sbb
jno
int3
xor
popa
mov
cli
add
dec
rcrl
hlt
dec
push
mov
fwait
imul
add
jno
jns
dec
shll
mov
mov
mov
mov
cli
cld
fmul
adc
xor
xor
fdivr
mov
movsl
fmul
cmp
addl
lds
mov
cmp
jno
xchg
out
jmp
mov
ja
adc
sub
ja
mov
xchg
jge
sub
mov
mov
lods
or
fcoml
xor
jnp
xchg
jbe
lea
enter
cmp
and
xchg
lods
in
mov
jb
jne
popf
addb
jns
pop
stc
outsl
shl
js
mov
ror
into
int
fcompl
enter
ret
rol
jne
mov
pop
jne
push
sbb
scas
mov
jne
mov
sub
lock
mov
in
out
stos
pusha
pop
jo
or
jne
pop
pop
pop
pop
push
push
push
jb
push
push
push
dec
pop
fsubrl
and
mov
mov
pop
lea
dec
daa
jmp
xor
call
addr16
sbb
test
in
decl
and
cmp
xchg
xchg
xor
mov
mov
cmc
lods
cltd
in
fsub
mov
mov
out
insl
xor
push
hlt
dec
xorl
out
fistpl
jne
xchg
fstpt
xchg
outsb
out
mov
icebp
aam
jae
pop
inc
arpl
lods
mov
mov
xor
out
mov
lea
push
xor
cwtl
movsb
jne
push
jle
jne
xor
ds
jnp
loopne
sub
lock
cmp
shl
adc
repz
pushf
and
clc
iret
jne
shlb
mov
call
push
push
jne
in
or
or
test
cmpl
jne
jp
out
mov
mov
mov
cmp
inc
jne
adc
jne
jl
nop
mov
sub
jne
out
mov
pop
lret
mov
add
aad
inc
jne
dec
in
jg
jbe
jne
lret
and
jne
imul
jne
out
cs
or
lahf
jne
or
dec
cmpsl
stos
inc
jns
fbstp
leave
mull
into
sbb
ss
in
jne
sub
fwait
lds
jne
ljmp
jne
add
pusha
push
arpl
pop
and
mov
dec
xor
shrl
sbb
push
jne
aas
xor
pop
mov
add
sbbl
xor
lea
lahf
inc
popf
popa
js
add
jne
data16
out
jnp
jae
pop
mov
mov
or
les
sbb
outsb
popa
shl
rol
je
sub
loop
aas
and
xchg
pop
sbb
adc
jle
jne
dec
dec
call
jne
das
cmp
jne
movsl
jecxz
iret
repz
jbe
pushl
mov
xor
imul
mov
negb
xor
cmp
ret
add
pop
xchg
dec
push
mov
dec
sub
cmc
in
xchg
mov
enter
jne
push
cwtl
push
daa
dec
jl
jne
adcl
cld
sbb
fcompl
push
divl
jne
adc
shlb
or
add
pusha
sbb
imul
jne,pn
inc
inc
or
mov
in
mov
jne
and
adc
push
shll
jne
pop
and
sbb
pop
daa
xchg
and
hlt
push
test
sbb
xchg
mov
sub
dec
xchg
adc
adc
xor
ja
jbe
jg
adc
sbbb
shll
pop
lods
insb
ficompl
sub
lea
xchg
fsubr
lock
mov
sbb
imul
imull
mov
jb
dec
mov
or
jne
out
bound
fsubs
jne
mov
cli
jne
push
popf
and
mov
lea
sahf
xlat
pop
inc
ljmp
mov
xchg
xor
dec
int3
in
and
lds
xchg
jo
add
loop
data16
sub
stos
push
jne
cmp
mov
jnp
fcomps
scas
cmpsb
cmc
icebp
mov
jmp
iret
outsb
jle
je
gs
push
ret
daa
jne
cltd
fmuls
or
mov
movl
sbb
jne
ja
pop
dec
cltd
mov
fdivs
adc
add
je
mov
je
mov
xor
push
push
lds
shlb
cli
fld
gs
xorl
jne
outsl
cmp
jecxz
imul
xchg
sbb
adc
push
jg
mov
mov
jne
ss
jne
jmp
aad
or
scas
jne
outsb
dec
dec
inc
lret
jne
adc
adc
sbb
aam
outsb
test
add
pop
insb
inc
imul
cmp
scas
repnz
fbld
cmpsl
out
pop
cmp
mov
xchg
lds
jns
mov
and
dec
mov
out
hlt
xchg
cwtl
movb
adc
cli
mov
push
mov
jnp
adc
not
xor
xchg
fistl
dec
dec
es
int
mov
mov
inc
daa
xchg
adc
fldt
je
loope
add
sbbl
std
scas
mov
jne
aam
ffree
enter
in
and
mov
xchg
jne
pop
fstl
jne
mov
dec
and
ficoms
insb
test
jle
clc
lret
jae
int
xchg
jne
sub
leave
mov
xchg
sbb
jg
jecxz
je
hlt
in
mov
jne
dec
hlt
add
jne
repz
loop
inc
adc
jnp
jne
jno
aaa
in
das
add
xchg
leave
mov
and
insl
mov
mov
xchg
jmp
imul
mov
into
pop
push
mov
movsb
sbb
test
cmpsl
jne
adc
bound
jne
pop
push
call
xchg
fwait
jne
jl
sub
jg
orb
sbb
jne
std
in
loop
xlat
lods
mov
pop
es
push
int3
push
jne
sahf
stc
mov
and
xor
aas
xchg
jne
ds
or
jne
fidivrl
lods
outsb
mov
addr16
stc
xor
testl
push
cld
aad
mov
stc
inc
jne
cmp
push
scas
addr16
adc
leave
mov
popf
jne
nop
es
mov
or
push
in
je
adc
sub
sbbl
pop
hlt
je
sub
jne
dec
cmp
jl
data16
or
push
in
sti
inc
jns
ljmp
cli
xchg
mov
pop
pmulhuw
jb
sub
add
imul
ficoml
xchg
mov
mov
outsl
outsb
mov
pushl
dec
rorl
add
and
ss
mov
jne
mov
repz
mov
jne
cmp
pop
or
push
sahf
outsb
mov
gs
jne
inc
xor
cmp
mov
jle
sarb
insb
imul
les
adc
mov
mov
out
pusha
mov
dec
fdivl
daa
in
js
jge
loope
xchg
jecxz
dec
stc
fistl
jmp
das
xor
jne
cmp
mov
inc
or
mov
test
stos
test
loopne
jne
fists
arpl
pop
xchg
cmp
adc
jne
adcb
insl
repz
hlt
rorl
xchg
push
and
lock
xchg
jne
sbb
sarl
icebp
xchg
incb
movsl
jp
je
in
jne
loopne
mov
cmp
aaa
bound
sbb
shlb
jg
and
loope
mov
dec
das
jne
ret
mov
inc
xchg
sti
mov
cmp
adc
or
std
dec
movsl
add
cmp
adc
int3
sub
clc
push
leave
js
jbe
faddl
jne
sub
lahf
andl
cmp
cwtl
adc
add
jne
jge
loopne
cmpsl
out
pushf
jne
stos
mov
push
jne
incl
in
pop
adc
jae
shrb
stc
inc
pusha
push
dec
out
pop
add
or
stos
cmc
mov
cmp
push
pop
jne
pslld
insl
xchg
and
cmp
jne
inc
dec
mov
inc
mov
inc
iret
subl
test
or
push
nop
shll
lret
mov
lock
sbb
lret
add
clc
inc
jne
popf
sbb
test
iret
mov
rclb
jg
jne
and
imul
test
daa
std
fbld
in
push
inc
fisubl
jne
dec
pop
push
test
jmp
int3
jge
divb
jne
adcl
pop
or
jne
inc
jecxz
jmp
mov
int
in
adc
jne,pn
xchg
push
cwtl
lret
push
jne
mov
jecxz
jbe
cli
je
std
mov
loopne
jmp
fs
mov
pop
arpl
out
adc
mov
inc
enter
sub
hlt
mov
cmpsl
lock
adcb
imul
xchg
pop
dec
rcl
cmpsl
xchg
mov
sbb
out
ljmp
sbb
fbstp
and
pop
jne
aam
pop
mov
sbb
jne
lcall
jne
hlt
or
cli
pop
jb
xlat
jle
push
lret
jne
movsb
shll
loopnew
jne
lock
stc
pop
push
sub
rolb
aam
pop
data16
addb
sti
loop
outsb
aas
xchg
lahf
aad
enter
jne
int3
test
push
mov
pushf
jmp
idivb
ss
xor
push
inc
push
inc
fdivp
popf
cmc
pop
and
js
sub
or
imul
je
lea
dec
sbbl
mov
jne
test
negb
movsb
popf
jne
lret
sub
cld
aam
je
pop
dec
sub
dec
mov
es
fwait
imul
sbb
dec
aam
push
imul
mov
data16
mov
cmp
and
mov
jne
jmp
mov
scas
add
jne
cmp
ret
in
jge
xor
xchg
and
jne
iret
pushf
mov
jne
inc
andb
add
jne
add
xchg
pop
ret
lret
sub
arpl
jne
push
adc
movsl
test
dec
mov
mov
sbb
pushf
xchg
sub
mov
mov
ja
add
sbb
jno
mov
pop
jb
mov
sub
xchg
lds
insb
xchg
sbb
jmp
xor
mov
jge
inc
xor
sbb
insb
mov
xchg
mov
jge
scas
or
pop
ds
aad
dec
add
mov
loope
jne
shlb
push
add
jne
xchg
cmp
insb
divb
fcoms
movsl
cmp
mov
rcrl
out
jg
xchg
jge
mov
pop
hlt
cs
pop
lock
jne
out
pop
ret
cltd
aaa
je
xchg
cltd
scas
jb
js
pop
in
push
xchg
cltd
pushw
sub
das
hlt
inc
ds
test
negb
pop
rorb
jg
sbb
pop
pushl
movsl
movl
add
push
mull
push
xchg
mov
and
mov
movl
jne
sub
jmp
add
jne
jle
ja
ficompl
divl
mov
mov
test
icebp
bound
popf
push
shr
mov
xor
mov
fisubrs
cmovp
xchg
jne
mov
xor
arpl
ret
jne
push
enter
jo
jne
jge
out
mov
pop
adc
sbb
aas
hlt
mov
cltd
jmp
or
cmc
cmp
lcall
xor
je
sahf
push
imul
insl
mov
stos
jb
mov
sub
data16
cmc
mov
into
je
mov
mov
cli
loope
cmc
sub
jmp
aas
jo
je
stos
cmp
push
cli
adc
shll
test
xor
faddl
cmp
gs
cmpsb
movsb
mov
pop
or
je
xor
dec
sahf
mov
dec
xor
sbb
loope
jne,pt
gs
push
mov
popf
std
pop
lret
pusha
jne
lds
outsb
push
mov
mov
jne
xlat
pop
pushf
xor
repnz
jne
inc
mov
mov
imul
pop
popa
pop
xchg
xchg
mov
idivl
jne
sbb
cmp
les
or
adcl
mov
xchg
add
xlat
mov
cmp
out
mov
push
test
or
jne
dec
sub
mov
jl
push
stos
cld
fnstenv
jb
addb
dec
jp
adc
mov
leave
inc
push
and
rcr
test
lea
hlt
add
in
or
mov
out
mov
pop
push
sub
pop
mov
jne
cmp
jb
lret
jne
pushf
idivb
jne
popf
loope
jbe
mov
cmp
push
sub
inc
iret
cli
into
cld
jne
adc
push
aam
jo
mov
fdivr
jge
sar
push
jne
in
push
in
adc
sbb
inc
stos
das
jne
inc
loopne
lods
lcall
pusha
push
xchg
add
call
adc
fucomp
jo
testb
movsb
loop
pop
jne
out
scas
fs
pop
cmp
jne
test
mov
iret
jne
inc
push
ret
test
out
sub
mov
je
push
shll
imul
sbb
pop
aaa
lea
bnd
cltd
push
pop
and
lcall
je
adc
jne
aad
subl
mov
aam
ret
jns
jl
test
push
xchg
mov
jne
fdivs
mov
jne
push
fwait
cmp
inc
dec
jo
fnstsw
push
paddd
data16
xor
aas
out
outsb
and
xchg
call
jnp
inc
pop
das
jne
push
xchg
ja
bound
arpl
jne
mov
mov
pop
and
movsb
scas
mov
pushf
addr16
xor
jnp
les
dec
outsb
xchg
fimuls
test
mov
shlb
or
pop
gs
imul
cld
lret
pop
add
dec
sub
hlt
je
ljmp
movsl
mov
mov
add
mov
rcrb
adc
rcl
shl
arpl
jne
and
jbe
sbb
jg
leave
int
xor
jne,pt
cltd
jnp
in
lock
adc
inc
push
outsb
test
dec
scas
std
inc
adc
enter
jmp
mov
movsl
imul
xor
adc
jb
jne
push
popf
jp
mov
lret
fimull
or
cmovg
repnz
in
pop
mov
add
xchg
outsb
ss
sbb
js
or
add
jns
dec
and
xor
jne
cs
in
pop
inc
adc
mov
dec
jle
xchg
lea
mov
jg
and
push
jne
adc
mov
pop
cmp
adc
outsb
jne
add
pop
bound
jno
shr
mov
divb
stc
mov
decl
jl
inc
inc
outsl
adc
sub
jge
shr
sbbl
jns
mov
scas
and
pop
sbb
outsb
sbb
out
or
dec
jne
fdivrs
adc
adc
aas
sahf
les
sbb
pop
mov
add
outsb
or
sub
movsl
jl
sbb
jne
and
test
jne
xor
and
imul
sbb
mov
push
push
dec
icebp
nop
aad
mov
in
test
adc
jne
adc
cld
xchg
sbb
mov
lods
mov
sti
add
pushf
dec
jne
sub
push
je
push
enter
xor
add
mov
pop
hlt
fstl
xchg
and
dec
movsb
jne
js
dec
fcompl
outsb
sub
subl
cmpsb
cmp
sti
ja,pn
mov
lahf
jg
add
mov
add
sbb
rcl
insl
imul
hlt
adc
add
cmpl
mov
dec
and
les
xor
pop
cmp
xchg
mov
inc
pusha
push
or
cmpsl
xor
pmuludq
ja
daa
pop
cmp
hlt
lcall
hlt
lahf
mov
ss
aaa
jne
cmc
ss
mov
hlt
fisttps
insb
std
mov
mov
inc
jmp
adc
and
je
mov
pop
fcmovu
jp
jne
lret
orl
aaa
or
rcll
xchg
inc
rolb
outsb
sub
jmp
fadd
data16
xchg
mov
je
dec
push
aad
add
mov
dec
fadds
adc
inc
xor
pop
xor
jae
ret
scas
fnstcw
mov
mov
xlat
mov
push
inc
inc
stos
sub
leave
daa
xchg
push
and
jne
nop
das
test
add
je
ja
cld
xor
sbb
inc
das
cmc
daa
adc
sbb
pusha
add
xor
push
popa
push
lret
mov
jne
out
jecxz
sub
mov
stos
jne
jmp
lahf
add
adc
sbb
pop
sub
jne
or
adc
cltd
push
or
jg
cwtl
mov
sub
mov
test
outsb
jns
push
inc
xchg
jne
insl
rolb
jno
cmpsb
mov
inc
int
lcall
imul
mov
imull
je
dec
jp
sbb
xor
iret
movsl
cmp
inc
adc
push
jne
xchg
mov
cmc
ret
repnz
shll
mov
sti
clc
jl
call
inc
xor
mov
lds
push
xchg
cmp
pop
push
mov
aam
push
jne
mov
fs
or
in
mov
fmull
lock
in
js
shlb
jbe
cmp
jo
jne
mov
adc
pop
and
push
xchg
pop
inc
in
lods
push
jne
xlat
in
clc
test
xor
repnz
sbb
sbb
loope
jne
mov
xor
jne
xor
insl
add
cmp
aaa
fwait
data16
push
add
lret
in
add
dec
xchg
movsb
mov
je
jg
jae
cmp
setno
sub
cli
jne
nop
fstps
jne
push
fsubp
xor
rcr
out
test
lret
jo
rol
mov
test
je
hlt
fstpt
popa
push
int
or
push
cmp
inc
in
test
repz
rcll
popa
jae
add
bound
cmpsb
cmp
loope
xor
jecxz
jne
fwait
inc
in
xor
out
bound
ss
int3
std
lock
aam
mov
jne
push
popa
dec
jp
daa
jbe
push
ds
dec
push
es
pop
cmp
data16
pop
pop
mov
outsb
mov
jne
jo
mov
inc
push
or
mov
mov
cmc
mov
jnp
jne
jno
aam
xchg
cmp
push
inc
mov
rep
jge
sub
pop
cmp
js
fdivl
call
shll
cmp
out
std
mov
gs
or
out
imul
add
sti
jne
and
jle
into
out
scas
enter
add
xor
jne
inc
mov
cli
mov
push
jne
and
dec
ljmp
xor
inc
in
mov
sti
pop
scas
imul
pop
loopne
jne
jecxz
cld
ljmp
adc
jne
mov
aaa
sbb
mov
incb
add
push
lahf
mov
mov
shrb
sbb
fdivs
je
pop
mov
insl
shrl
adc
in
das
into
xchg
jne
inc
adc
sbb
jl
stc
jne
or
jp
aad
pop
cmp
xor
std
adc
fidivl
and
test
jne
mov
fsubs
aad
call
jmp
lahf
out
and
sub
dec
mov
in
loop
mov
lcall
aaa
cs
je
xchg
mov
ret
mov
xor
addr16
or
jne
mov
divb
cmp
hlt
push
arpl
scas
cld
cmp
lods
jns
mov
add
test
jo
or
sub
fsubrl
mov
inc
hlt
push
subb
leave
jne
sub
stos
in
cmp
scas
hlt
jno
roll
jecxz
and
xor
nop
outsl
jne
adc
jne
xor
and
dec
pop
ret
out
imul
inc
int
dec
stc
mov
lock
int3
gs
repz
outsb
mov
test
mov
inc
jb
lahf
addr16
lret
jne
jnp
fiaddl
test
addl
jne
imull
push
outsb
outsl
rorb
xchg
sub
outsb
dec
mov
jp
add
jne
add
inc
mov
std
xchg
jb
add
xchg
vorps
icebp
cmp
push
shll
jae
imul
test
std
icebp
in
jne
movsl
pop
jns
mov
ret
jne
push
scas
fiadds
in
jne
adc
dec
add
stos
cltd
lret
lds
sub
jne
cmp
rorb
inc
insl
inc
sbb
fisttpl
test
fbstp
pop
mov
inc
xchg
fidivs
cs
push
mov
jb
cwtl
in
jo
in
popa
mov
enter
mov
and
sbb
sub
pop
and
jg
es
rolb
outsb
mov
gs
jo
jp
in
je
fdivp
bound
inc
leave
jns
dec
jne
hlt
inc
dec
pop
push
mov
add
cltd
xchg
jne
mov
cwtl
sbb
sbb
add
xchg
push
movsl
fadds
jb
mov
in
cmpsb
lea
push
testb
push
bound
sub
cmp
cmpsl
mov
dec
mov
pushf
test
mov
aas
push
fwait
jne
adc
std
mov
add
and
flds
enter
add
fsubrl
push
insb
mov
mov
push
and
repnz
nop
loop
fs
jne
leave
mov
out
jne
push
and
mov
inc
dec
jne
call
cwtl
jl
mov
into
mov
ja
je
cmp
out
push
clc
add
and
jmp
stos
or
mov
cmp
sarl
jne
pop
or
enter
jne
jecxz
mov
jne
or
shlb
push
jne
mov
cmp
ljmp
inc
fwait
lret
lea
bound
sbb
cmp
mov
addl
mov
shll
jmp
daa
mov
inc
jne
and
ss
inc
jne
adc
popf
pop
idivl
xchg
push
pop
sbb
dec
mov
mov
dec
adc
sub
xor
in
jne
inc
jbe
dec
bnd
insl
add
jg
jne
sarb
ja
jne
or
dec
inc
rclb
xor
ret
je
adc
mov
sbb
xlat
push
jb
insb
dec
mov
icebp
mov
jne,pn
int3
xchg
scas
cmpl
jne,pt
adc
mov
dec
ret
xchg
loopne
call
xlat
or
sbb
fs
insb
or
mov
popf
cmp
xor
jne
stos
fxch
xor
mov
shr
inc
pushf
jne
loope
aas
add
push
jnp
lock
pop
imul
xchg
jne
mov
pop
push
jg
jne
push
das
add
mov
jne
outsb
dec
or
mov
lahf
aaa
add
cmp
mov
into
mov
inc
inc
push
push
ss
hlt
leave
das
stos
addr16
jae
jecxz
lcall
pushf
push
inc
lahf
cmp
adc
dec
xor
inc
add
in
aad
push
sub
push
hlt
ret
sub
lods
data16
nop
insl
in
xchg
loopne
fcmovb
scas
jb
outsl
push
lods
div
mov
into
xor
mov
jne
xchg
shll
mov
stc
lods
mov
add
sahf
adc
outsb
pop
fists
sti
fsubrs
jne
xchg
sbb
gs
mov
cld
mov
jl
or
mov
popl
sub
in
mov
jne
xorl
jne
jns
ds
jge
mov
sub
add
jb
cli
or
into
movsl
or
xor
mov
mov
xchg
dec
std
call
cwtl
sarb
pop
cmc
fistpll
insb
add
pushf
aam
xchg
adc
test
stos
or
mov
cs
int3
clc
in
mov
hlt
movsb
jl
je
jne
sbb
jns
jne
jb
inc
xorb
add
mov
into
andb
inc
fstp
aas
mov
jne
insl
cmp
mov
xchg
cltd
outsb
jge
jns
add
rorb
loope
aas
hlt
jmp
lods
jne
push
out
push
scas
fwait
arpl
pop
dec
sarl
addr16
pop
or
add
test
jbe
mov
inc
out
xor
rorb
aad
cmp
enter
jne
aas
rorb
mov
xorl
ss
add
cld
add
sti
outsl
jne
ss
sbb
rolb
fisttps
ljmp
lahf
push
xor
incl
je
scas
dec
lcall
popa
inc
sub
push
imul
lret
std
jle
testb
xor
adcl
je
out
adc
ss
and
nop
imul
and
jne
testb
lret
push
cld
jne
incl
jb
repz
enter
mov
imul
mov
cmp
fdivrl
repz
xor
jmp
pop
cs
jne
enter
adc
or
aaa
stos
stos
fs
rcrl
ret
jne
pop
cmp
mov
and
stos
scas
flds
jne
clc
dec
loopne
push
adc
xor
cs
and
pop
cmp
mov
aad
jne
push
pop
fimull
inc
js
mov
xor
bound
fdivs
clc
shl
sub
dec
repnz
xchg
bound
and
les
sti
int3
xchg
popa
outsb
mov
xchg
sbb
xor
adc
leave
test
and
pop
pop
popf
jno
fistps
jne
push
adc
dec
push
jne
mov
test
fs
rcll
insb
xor
adc
jne
movsl
inc
push
sub
lods
adc
leave
pop
aaa
mov
push
jmp
int3
xchg
xchg
push
sti
jne
jecxz
nop
out
aaa
pop
mov
jno
pop
lods
jp
push
jne
iret
mov
leave
ret
jne
mov
testb
repz
in
jne
or
loope
mov
enter
inc
lock
aad
arpl
adc
shr
cmp
pop
fcmovu
dec
inc
jnp
test
movsl
dec
pop
stc
imul
adc
jne
push
and
test
add
pop
outsl
rclb
loop
dec
pop
mov
xor
push
or
loopne
jo
and
add
scas
fistpl
pushfw
jl
mov
rcll
js
hlt
fsubp
rcrl
lods
jne
xchg
mov
mov
flds
out
cmp
or
jge
pusha
test
dec
mov
push
mov
push
jne
adcl
jne
lds
lret
dec
sub
aad
sub
sahf
loope
jne
dec
or
dec
arpl
jne
les
push
add
jne,pt
xchg
sbb
ljmp
sbb
lock
icebp
xlat
jne
xchg
inc
mov
push
xor
push
sbb
add
pusha
jae
mov
inc
movsb
std
jl
and
dec
fwait
ds
push
ja
jne
in
or
sti
mov
push
inc
repnz
jne
aas
fldt
sub
cli
jne
dec
hlt
jle
or
jmp
mov
sub
lock
sub
lcall
or
js
loop
push
adc
ret
mov
pop
imul
test
aad
std
jne
fisttpl
adc
xorl
ret
add
or
mov
repnz
add
push
inc
push
pop
jo
xor
in
xchg
sbb
fs
and
adc
mov
mov
adc
jge
jne
xor
arpl
sub
jne
xor
data16
cmp
mov
xor
and
inc
dec
icebp
gs
sbb
pop
inc
outsb
mov
pop
and
cmp
xchg
hlt
sahf
and
and
je
mov
inc
cmpsl
imul
int3
imulb
leave
jne
ljmp
jne
and
xlat
aad
test
fmull
xchg
push
cmp
pop
movsl
xchg
jp
cmpsb
cmpsl
data16
test
mov
scas
pop
lahf
cmp
repnz
push
push
push
xchg
add
das
js
xor
jne
jge
into
stos
pop
cmp
sub
cmc
pop
sbb
ror
arpl
mov
xor
mov
ljmp
jbe,pn
imull
bnd
int
sub
enter
call
xchg
xchg
lea
inc
arpl
jle
jecxz
pop
xor
fwait
je
rorl
push
clc
push
lods
inc
movsb
jne
mov
pop
insb
icebp
cvtdq2ps
aas
shll
stc
jo
adc
rcrb
cmp
jecxz
test
cmc
push
mov
test
mov
adc
mov
inc
cmp
stos
jo
mov
mov
sbb
fdivl
ja
jne
mov
add
xchg
mov
rclb
int
jne
inc
mov
popa
jne
cs
jnp
scas
outsb
mov
sbb
sub
std
lcall
adcb
hlt
outsb
push
xor
loope
je
add
cli
sarl
pushf
jne
xlat
and
add
rep
push
adc
adc
shr
sbbl
sbb
popf
and
push
jne
out
pop
sbb
ja
test
es
push
mov
mov
vpunpckhbw
jne
shll
sub
xchg
pop
inc
subl
push
je
add
xor
jbe
movsb
adc
push
cmp
inc
dec
outsl
jb
aam
loope
jno
repz
mov
mov
push
pop
je
jge
mov
jb
add
aaa
loope
popf
pusha
mov
loopne
lahf
jae
lods
les
and
call
jg
fbstp
pusha
sub
or
jne
mov
push
popf
jne
push
inc
pop
add
imul
inc
mov
lcall
icebp
test
and
jecxz
mov
xlat
sub
loopne
sub
xchg
out
jne
js
add
sbb
jne
xchg
inc
cltd
xchg
aaa
pop
bound
mov
jmp
shll
shlb
xchg
movsl
xor
repnz
mov
outsb
repz
jne
or
loope
add
xor
stc
pushf
in
outsb
mov
mov
and
sbb
movsl
jne
pop
daa
inc
inc
dec
in
adc
es
jne
sbb
inc
out
mov
cmpb
and
pop
outsl
mov
xor
sbb
imul
out
mov
jne
cmpsb
pop
xchg
mov
mov
cwtl
inc
lock
sbb
xor
pop
xchg
cld
outsb
ljmp
lods
rorb
outsb
mov
cmp
iret
test
xorb
aam
outsl
push
or
pushl
cltd
mov
sbb
sub
jne
mov
inc
and
stc
in
jne
pusha
mov
push
lods
jne
sbb
adc
xchg
pop
jne
dec
popa
mov
jne
pop
jb
mov
cwtl
jge
adc
mov
loop
ds
sbb
jne
or
and
pop
cmp
cmp
jmp
pop
shll
pusha
ss
fsubrl
testb
incl
xchg
dec
inc
xor
out
je
lahf
cwtl
into
mov
jne
scas
ret
pop
test
mov
add
jecxz
andl
dec
add
ja
in
xor
es
push
or
cmp
or
xchg
mov
pop
icebp
sub
push
movsl
mov
das
andb
cli
xchg
cli
inc
push
mov
sub
push
fnstenv
loop
test
jnp
scas
jne
lea
xlat
inc
insl
insb
jne
fcoms
mov
push
mov
test
hlt
inc
sub
or
ret
dec
jne
xchg
shl
out
cmp
scas
jne
jge
xchg
push
or
pop
jg
or
xchg
push
jns
xorl
mov
and
ja
in
dec
orl
mov
xor
mov
add
outsb
push
dec
adc
mov
sub
adc
enter
lods
mov
or
jne
icebp
in
fs
jne
pop
out
dec
ss
rorl
jl
or
mov
cmp
popa
lcall
xchg
cli
xchg
jne
inc
test
jle
fwait
and
daa
or
hlt
fstp
es
lods
movsb
jl
and
xchg
in
aas
hlt
out
xchg
das
pop
popf
arpl
and
pop
and
jne
ret
adc
inc
or
jns
pop
ficoml
sbb
mov
pop
std
jne
les
add
sti
mov
xchg
fdivrs
mov
mov
jo
and
rcrl
clc
pop
mov
fidivrs
cmp
hlt
mov
jmp
leave
add
in
xchg
jne
loop
sub
js
and
sbb
inc
jl
sti
scas
or
jne
mov
lret
inc
cmpsl
outsb
in
fwait
lahf
or
add
push
push
imul
hlt
push
hlt
and
add
rcrl
jne
pop
inc
and
fxch
inc
push
sbb
cmp
inc
out
jne
outsb
pop
pop
scas
xor
mov
fcoms
fwait
bound
outsb
iret
cld
fimull
aad
inc
mov
dec
test
or
push
test
in
xor
fdivp
push
mov
cmpb
jne
add
xor
sarb
outsl
jne
mov
inc
push
jne
push
cmp
je
push
inc
movsb
adc
pcmpeqw
js
push
clc
push
add
xchg
mov
mov
insl
jne
scas
mov
fstp
mov
je
leave
sub
mov
cs
mov
add
testl
dec
repnz
jne
insb
mov
fs
jecxz
mull
loop
or
mov
add
mov
push
ja
jg
sub
sbb
sbb
cmp
cmc
jb
je
lods
outsb
mov
testl
push
hlt
jl
sub
adc
in
xchg
jne
cmpsb
hlt
xlat
test
fs
and
pop
push
push
mov
jb
int
movl
xor
pop
mov
nop
xor
frstor
hlt
pop
push
mov
lret
mov
dec
push
mov
insb
add
jae
popa
mov
out
mov
push
push
loopne
push
or
mov
mov
in
cmp
dec
xlat
dec
sub
push
mov
and
mov
ret
sbb
jne
repz
repnz
mov
or
int3
add
push
jno
ret
popf
jne
inc
sub
sbb
and
fucomip
sub
or
mov
dec
jne
cmp
leave
fs
mov
jne
subl
in
push
mov
ds
jnp
hlt
clc
jb
nop
and
lods
movsl
add
cmpsl
testb
outsl
pushf
dec
cmp
roll
lock
jne
mov
push
mov
inc
jae
scas
out
xor
into
je
ljmp
mov
cmp
mov
xchg
xor
jne
rolw
xchg
addr16
jne
pop
cld
pop
sahf
aad
lea
test
inc
rclb
jne
mov
sahf
pcmpeqw
pop
xchg
push
lret
nop
xchg
lret
pop
adc
xor
ret
fdivrl
out
adc
rcrl
outsb
pop
mov
xor
stos
jne
loopne
dec
ja
out
mov
fnstenv
adc
jne
and
sub
jne
jle
add
dec
and
shlb
aas
sbb
outsb
imul
mov
int
xor
pop
test
and
in
mov
xchg
test
inc
lods
push
rclb
add
jne
aad
jle
icebp
repz
dec
jp
xlat
xchg
gs
dec
push
inc
and
ljmp
imul
sbb
ret
push
xchg
mov
sbb
or
sub
aad
shll
jbe
ss
ret
stos
cmp
cmp
insb
dec
nop
aam
jo
jl
xor
outsl
sbb
jp
inc
cmc
lea
subb
cmp
pop
mov
jae
or
popa
in
gs
inc
inc
jecxz
je
adc
wbinvd
adc
sahf
mov
data16
xor
add
push
or
inc
dec
cmp
sub
adc
repz
add
scas
sti
cwtl
pop
pop
aas
stos
and
add
push
pop
add
insb
mov
outsb
imul
insb
aad
cmp
jmp
insb
xchg
in
outsl
push
sbb
bound
cmp
cld
cmp
outsb
nop
arpl
fs
inc
in
insb
sub
jno
and
popa
pushaw
insl
xchg
in
push
add
inc
lods
in
push
sub
lock
push
sbb
pop
push
mov
and
stos
push
popf
movsl
in
push
or
dec
mov
call
jge
jb
and
sub
push
add
inc
mov
push
adc
sub
repnz
xchg
jmp
sub
loopne
xor
in
cmp
push
bound
shll
ljmp
sub
push
adc
inc
in
push
aas
xor
dec
push
leave
sub
das
xor
push
in
push
adc
divb
in
cltd
arpl
pop
sub
addr16
daa
in
jns
jne
and
fs
repz
add
inc
in
lods
adc
push
push
shll
je
in
xor
xchg
cmp
arpl
add
push
cmp
mov
in
add
in
arpl
addl
dec
pusha
pop
aam
je
jne
add
inc
stos
out
adc
lret
arpl
icebp
sub
sbb
pop
push
frstpm(287
stc
push
cmp
fwait
push
or
dec
mov
sub
jne
inc
bound
mov
jne
in
inc
arpl
push
iret
and
xor
jne
in
pop
arpl
cmp
arpl
push
lahf
add
push
dec
sub
jmp
in
jg
jne
push
xor
jmp
ds
cmpsl
in
push
dec
xor
jae
out
push
cs
mov
push
xlat
add
push
ss
inc
in
xor
arpl
jne
mov
aam
in
and
movsb
lods
les
lods
lods
jl
push
push
mov
in
cmpl
adc
cs
lods
loope
mov
xor
test
enter
in
sbbl
ja
mov
sarb
push
jecxz
mov
cmpb
in
orl
jl
push
push
jp
scas
push
push
into
xchg
mov
in
cmpl
aaa
cs
lods
xchg
push
xchg
xchg
mov
jbe
hlt
mov
cmc
pop
insl
cs
in
outsl
int
gs
nop
imul
pusha
in
addps
xor
gs
jecxz
jne
gs
clc
arpl
movl
pop
in
pop
outsb
in
outsl
gs
adc
gs
in
inc
gs
fidivs
jno
push
roll
dec
sbb
pop
pop
iret
test
mov
popfw
xchg
or
pop
adc
add
rolb
push
or
xchg
idivl
mov
sbb
pop
mov
add
or
xchg
xchg
add
adc
out
jmp
ljmp
mov
cli
adc
inc
inc
xor
inc
adc
dec
testb
jnp
movsb
mov
cmpsl
adc
push
mov
add
int
js
pop
sahf
movsb
pop
push
rcll
cli
adc
std
iret
fs
das
mov
adc
adc
stc
or
xor
lds
xchg
cmp
cmc
cs
jl
xor
loopne
mov
shll
sub
in
in
rorl
popa
add
inc
addr16
movsl
test
adc
es
dec
adc
nop
dec
cli
xor
push
in
dec
jb
subl
insl
xchg
insb
in
push
stos
data16
fsubrl
xchg
in
in
fsubrl
fsubrl
cmpsl
adc
dec
adc
xor
in
fs
insb
sbb
cltd
loope
gs
fs
pop
out
popa
push
pusha
ret
repnz
and
push
mov
xor
xor
mov
xor
jb
xchg
push
rcll
in
push
adcl
push
fcoml
adc
cwtl
pop
or
pop
push
jo
xor
in
pop
arpl
pop
sub
push
popa
dec
mov
loop
arpl
jae
xor
or
or
ljmp
shl
je
je
adc
jb
in
xorl
adc
and
push
outsb
in
lods
insb
xchg
imul
cmp
pop
push
popa
fldenv
outsb
sbb
sub
push
dec
sub
mov
pop
fldln2
sbb
push
cmp
jns
pop
xlat
repnz
xor
xor
in
adc
push
arpl
mov
add
push
imul
xor
in
or
push
pop
sub
fwait
xor
mov
push
outsl
sub
scas
xor
in
packsswb
in
push
lahf
xor
mov
push
addr16
cmpsl
xor
in
pop
arpl
in
push
xchg
xor
mov
mulb
push
je
cmc
in
push
mov
push
aam
adc
xchg
push
fs
movsb
xor
add
test
in
push
lods
xor
or
mov
sub
pushf
xor
in
std
arpl
sub
mov
push
shr
adc
push
pusha
sub
mov
add
push
push
push
test
dec
enter
mov
sub
cwtl
xor
mov
push
bound
mov
je
jecxz
dec
fs
shrl
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
outsl
inc
xor
sub
inc
xor
dec
push
or
push
cmp
xor
push
adc
inc
xor
jb
icebp
rep
xor
mov
push
push
shrb
jg
push
sub
lods
adc
sub
arpl
imul
arpl
addr16
xor
outsl
jae
insb
xor
in
jb
bound
sub
pop
clc
loope
cmp
nop
cltd
loopne
loopne
mov
jnp
inc
popa
push
and
fistps
xor
sbb
and
add
push
sbb
loop
xchg
push
xor
ljmp
pop
fstpl
inc
sub
adc
cmp
enter
bound
insl
je
push
mov
popa
imul
arpl
loopne
push
data16
aad
xchg
popa
push
bound
gs
outsl
imul
imul
and
jns
mov
outsb
push
insl
add
push
push
push
imul
push
andl
pusha
pop
inc
bound
jb
in
pop
pop
pop
out
pop
lods
pop
jl
push
lods
pop
ja
pop
jns
out
xorb
push
dec
shrl
dec
gs
lods
arpl
cs
lods
pop
jl
push
push
pop
jl
push
mov
sub
lock
fiadds
decl
xchg
and
fstpl
and
inc
rclb
mov
loope
adc
inc
in
lcall
push
out
xchg
adc
sub
insb
mov
dec
jne
mov
pop
mov
adc
mov
or
xchg
xor
lock
mov
xchg
cwtl
or
lods
subl
mov
jne
adc
jl
js
lods
jne
ljmp
cmp
data16
push
push
pop
cmp
gs
jne
xor
mov
std
movsb
jne
cmp
mov
jne
mov
jnp
mov
or
ret
xor
xor
movsl
popf
inc
add
jne
xor
cmp
leave
inc
pushf
dec
cmp
jne
lods
pop
adc
mov
xorl
pop
fucom
je
cmpsb
data16
dec
jne
in
jo
ret
pushf
imul
inc
jne
sub
mov
cmp
mov
jne
add
je
push
mov
mov
jge
shlb
rclb
jne
shrl
sbb
int
ficomps
addr16
jne
push
or
fisttps
adc
je
adc
adc
icebp
add
mov
outsl
xor
mov
jne
repnz
mov
subb
mov
mov
clc
in
mov
cwtl
adc
fwait
pusha
addb
mov
sub
add
rclb
xor
xchg
sub
mov
sarl
lahf
jne
or
jne
das
in
push
enter
jne
add
xor
push
sub
lods
clc
push
jo
in
jae
inc
lret
mov
push
imul
insb
mov
xchg
adc
addr16
pop
fsubl
pushf
dec
push
aad
sahf
je
pop
cmp
sbb
push
sbb
mov
jne
mov
fldt
xchg
add
mov
mov
jne
pusha
dec
lcall
arpl
xchg
lock
je
aaa
or
push
jns
addr16
fdivs
jecxz
mov
les
outsb
stc
xor
insl
jne
or
mov
jne
sbb
adc
push
adc
add
or
or
jne
mov
in
sbb
fwait
gs
pop
xchg
mov
out
fdivrl
addr16
mul
movsb
aam
jne
popf
cmp
test
push
mov
iret
cwtl
outsl
shlb
jne
ret
sub
sub
imul
sub
adc
mov
out
and
push
int
out
inc
std
jne
or
call
jne
ud1
mov
xchg
or
test
mov
inc
jne
jo
mov
mov
jne
loop
rorl
ret
into
jbe
mov
cmpsb
movsl
jne
jmp
pushf
dec
pop
xchg
ss
jne
fimull
adc
add
or
cmp
hlt
ss
addr16
push
outsb
pop
add
jne
repnz
mov
sti
cmp
mov
mov
clc
push
xchg
lcall
xchg
popf
test
ret
pop
repz
push
test
pop
mov
sbb
jg
pop
inc
push
mov
mov
testb
cmp
sbb
je
xor
adc
jge
jecxz
adc
mov
pop
cld
xchg
imul
mov
jno
daa
mov
jb
adc
push
jne
jle
adc
jne
lcall
jne
cltd
sbb
jb
test
popf
and
xlat
mov
mov
rolb
mov
std
stos
jne
ret
rol
push
jo
aas
movsl
jp
outsl
sahf
test
push
xchg
and
inc
cli
cmpps
pop
or
push
dec
ds
rcl
out
mov
xchg
jo
jmp
jne
xor
xchg
pop
repnz
push
inc
mov
xchg
push
bound
stc
out
jne
sbb
scas
fidivs
insl
je
pushf
lods
sub
mov
cltd
lea
adcl
hlt
out
repz
cmpsb
pop
fdivl
and
mov
gs
pushf
jne
mov
xor
jne
and
sar
fdivl
fdivp
repz
mov
int3
jne
lcall
sbbl
pop
or
mov
test
push
lock
jne
call
adc
dec
mov
xchg
lea
push
repz
mov
ret
mov
fwait
lret
adc
dec
test
ss
cmp
sbb
dec
insb
jne
push
cmp
push
das
xchg
ret
mov
scas
add
add
or
mov
add
pop
in
inc
aad
in
jp
pop
mov
std
xchg
int3
push
cmp
jbe
addb
sub
aaa
mov
hlt
dec
xchg
sbb
jb
notb
mov
dec
lods
mov
pop
sbb
insb
jne
pusha
loopne
mov
lea
mov
cmp
aad
sub
pop
fisubrs
scas
jmp
sbb
jmp
jnp
stos
and
je
sbb
inc
scas
ss
in
fbld
in
fdivl
xchg
fs
test
xchg
mov
stos
out
xchg
sbb
jne
or
lock
sbb
arpl
pop
push
jne
data16
add
cmpl
into
or
out
xor
push
jae
cmp
xchg
push
xchg
jne
pop
push
test
jne
dec
xchg
push
enter
roll
arpl
or
insb
out
test
pusha
and
jp
call
xchg
jg
jne
inc
mov
pop
jne
pop
inc
dec
arpl
mov
jmp
jne
std
inc
xchg
adc
mov
in
mov
test
aaa
mov
and
into
int
fcoml
push
lods
jnp
shrb
gs
push
or
ss
pushf
or
xor
sbb
mov
lcall
fildll
dec
out
mov
pop
shl
xor
xor
jne
mov
pushl
add
std
or
es
pusha
push
idivb
imul
cwtl
pop
outsb
aaa
arpl
mov
aad
adc
jmp
xchg
shl
pop
mov
cwtl
push
inc
xchg
jne
ficomps
insb
int
pop
mov
dec
xchg
jne
leave
sub
push
sbb
cmpsl
das
xchg
push
aas
xchg
sysexit
scas
mov
pop
adc
cmc
push
adc
jae
shll
lock
jne
aad
dec
mov
jl
xchg
js
test
lea
hlt
aad
ret
fnsave
insb
add
jne
cmp
pop
dec
jne
pusha
outsb
inc
inc
das
dec
push
push
add
inc
xor
andb
das
cli
jge
sbb
dec
daa
sahf
sahf
jne
xchg
mov
fmull
xchg
jb
arpl
push
movsl
mov
fsubr
xor
lock
sbb
jne
or
inc
cmp
xor
es
jb
jne
divb
stos
outsb
adc
push
mov
add
jne
into
addr16
pusha
lret
add
sbb
fstl
xchg
sahf
outsb
popf
and
cmpsl
pop
lds
and
mov
ljmp
in
mov
movsl
pushf
aad
mov
mov
cs
in
or
inc
jne
add
outsb
jne
push
or
push
insl
dec
adc
xchg
std
hlt
std
shrb
pop
in
dec
dec
ljmp
aam
movsl
mov
xor
je
pushf
mov
jns
push
dec
test
cltd
mov
jge
stos
or
das
xor
xchg
js
jne
or
cltd
sbbl
insb
and
cmp
hlt
mov
inc
test
js
jecxz
jne
or
jb
sbb
das
jae
int
sbb
jns
outsl
jne
clc
jmp
jo
mov
cmp
push
adc
loopne
popf
insl
imul
fistpll
je,pn
add
lods
xchg
jb
push
call
push
dec
ret
leave
push
jne
ficoml
pop
mov
lret
add
pop
lods
addl
jbe
jle
iret
dec
les
in
add
sbb
addr16
push
inc
ja
cli
out
pop
sub
xchg
pop
pop
xchg
das
cmc
cmp
jns
lods
jne
mov
xchg
ss
aaa
and
mov
adc
pop
pop
aas
push
stc
fnstcw
mov
je
pop
inc
lock
jne
ret
inc
mov
mov
fs
in
xchg
push
into
sbb
mov
lods
sbb
sub
adc
cs
fisttpll
push
push
dec
sar
push
jne
mov
dec
add
imul
sbbl
dec
addb
ds
mov
jmp
sbb
push
fnsave
cltd
add
jecxz
dec
push
es
xor
fisubl
in
testb
insl
push
clc
shll
hlt
std
jecxz
xor
stos
addr16
cli
js
scas
sti
lds
inc
or
xor
or
sbb
popa
stc
sub
mov
or
inc
jne
inc
cmp
sub
cmp
adc
lret
and
mov
adc
xchg
cmp
jb
psubsw
sahf
sub
sub
push
push
std
hlt
shrb
adc
pop
xchg
loop
sbb
rcrb
fsubrl
hlt
jne
jg
xor
add
jb
test
add
sub
xor
jmp
and
push
jae
and
mov
lahf
mov
jne
mov
popa
clc
je
mov
cmp
sbb
out
mov
sbb
out
rcrl
jb
dec
jne
sbb
push
pop
or
jne
hlt
pop
inc
xchg
mov
xchg
add
sbb
cmp
inc
jne
mov
xchg
cmp
push
add
outsb
mov
adc
lea
ljmp
jo
test
movsb
jns
jne
fbstp
outsl
and
jne
pop
jnp
cli
popf
jp
jne
xlat
jl
sbb
add
repz
dec
cmp
jne
fs
das
test
xor
jne
rorb
cmpb
jne
test
es
sbb
jne
push
ds
jne
cmp
aaa
lcall
ret
push
xchg
cwtl
nop
jne
ds
popf
imul
int3
lahf
mov
ret
dec
mov
movsl
inc
cmpsl
aad
or
mov
gs
pop
mov
loopne
mov
jne
fwait
scas
sub
pop
scas
test
jp
loope
rcrl
mov
mov
sub
mov
push
lret
lods
lods
test
mov
test
pop
mov
mov
xchg
jne
jns
in
xor
jne
dec
mov
fnstenv
iret
fidivs
and
filds
mov
xchg
loopne
scas
mov
not
fisubs
fnstenv
std
jnp
push
push
rcr
jo
mov
jne
fildl
in
jmp
call
or
jne
out
fdiv
ljmp
sub
in
rclb
xchg
adc
repz
sbb
hlt
jne
fwait
cltd
cmc
and
iret
and
cmp
out
jne
add
int3
jne
mov
bswap
jne
pop
ror
clc
cld
mov
sub
adc
scas
mov
into
inc
mov
and
shll
mov
jge
xorb
aam
js
clc
rcr
fbstp
mov
mov
movsl
into
xor
repnz
cmp
pop
retw
sub
and
jmp
or
push
sub
jne
mov
shr
xchg
mov
fwait
pop
jae
mov
inc
fdivl
push
mov
lret
jne
mov
push
fists
out
inc
test
push
mov
xchg
stc
adc
out
xor
sub
popf
or
jne
adc
outsb
jnp
rorb
add
leave
xor
enter
xor
add
dec
push
cmpsl
test
idivl
jne
pop
fs
jp
shll
cmp
movsl
hlt
out
dec
lea
add
leave
push
scas
lds
movb
lods
je
pop
rorb
imul
cmp
mov
xchg
test
cwtl
out
nop
cmp
jne
cwtl
sbb
out
ss
xchg
mov
gs
mov
jne
mov
aam
dec
jne
mov
fildll
das
push
xlat
xchg
jg
je
mul
insl
subb
pop
mov
jne
movsl
inc
dec
mov
pop
fidivs
pop
jne,pn
mov
loop
jae
gs
sub
fimull
mov
jle
in
outsb
or
stos
leave
xchg
outsb
jne
mov
adc
jne
pop
mov
mov
xchg
pusha
sub
mov
movsb
xchg
hlt
testb
jno
sti
or
push
les
dec
xor
mov
push
xor
jbe
jns
mulb
fwait
pop
jne
dec
mov
mov
rcl
in
imul
negl
jne
dec
adcl
dec
cmp
in
push
in
ss
in
mov
xor
inc
outsb
jne
imul
mov
inc
das
je
pop
fisubl
jae
dec
jns
sub
inc
sub
and
or
pop
or
je
std
stos
sbb
xor
push
fmull
ja
cmp
ds
jge
bnd
dec
add
mov
and
jne
xchg
jmp
lds
inc
cmp
mov
movsb
nop
and
pop
mov
or
insb
das
out
je
mov
add
dec
les
push
ss
xchg
out
inc
sbb
into
jne
inc
push
insl
mov
push
rcl
xor
jo
dec
sub
sub
jne
movb
jne
ljmp
outsb
fists
lods
add
xchg
je
js
rorb
xor
pop
pop
je
jle
cmp
fists
sbb
test
adc
adc
out
adc
push
and
sar
pushf
das
addr16
mov
jne
pop
adc
jl
push
jb
xlat
or
mov
mov
je
aas
pop
ror
insb
jne
pusha
add
dec
jne
shlb
mov
data16
gs
mov
leave
dec
das
fs
cmp
hlt
add
scas
popf
gs
cli
adc
fisubrl
rcrl
fidivs
xchg
cmp
js
pop
jne
xor
sub
adc
jne
cmpsl
jmp
xor
jge
and
inc
jl
push
cli
jecxz
fwait
les
hlt
mov
mov
aam
push
test
outsb
or
hlt
mov
fidivrl
lcall
loop
and
mov
xchg
xlat
arpl
xchg
inc
cmpsl
inc
outsl
aas
int3
lret
ret
jne
ss
cmc
repz
xchg
bound
sbb
sbb
sub
aaa
and
xor
mov
scas
cmpsb
int3
idivb
sbb
pop
ret
std
clc
xchg
sbb
aam
xchg
xchg
push
popa
xor
int
sub
pushl
sbb
mov
cmp
divb
hlt
ja
fsts
push
aad
jb
pop
out
jne
pmaxsw
cmp
push
hlt
sub
mov
jb
loope
mov
rclb
inc
jne
sub
sbb
jne
mov
lcall
push
int3
lds
add
adc
je
jne
ljmp
fiadds
mov
mov
pop
add
adc
jne
xlat
adc
shlb
in
jne
std
cltd
mov
push
fbld
sub
jne
clc
mov
in
mov
in
mov
push
jne
cmpb
xchg
pop
fwait
mov
cmp
jne
icebp
scas
bound
fdivl
adc
int
js
jl
cli
ljmp
jne
adc
pushf
jnp
cmp
cmpb
push
lods
sub
gs
mov
outsb
push
add
cmp
movsb
sub
jne
mov
imul
or
int
xor
fmull
lcall
jl
inc
sti
popf
jb
xor
push
cmp
pushf
inc
leave
and
scas
cmp
mov
adc
push
roll
push
cmpsb
mov
mov
popf
xlat
push
jne
in
insl
scas
imul
out
sbb
mov
pop
lret
cmovs
cltd
xor
je
lcall
xchg
gs
out
icebp
in
movsl
mov
mov
mov
cld
outsb
lods
lds
jne
int
xchg
fcompl
jne
push
dec
in
adc
fisttps
xchg
and
sbbl
inc
popf
orl
jne
pop
je
sti
repnz
xorl
adc
pushf
jne
arpl
mov
in
clc
adc
fwait
dec
sub
mov
sub
sub
adc
and
cmpsl
sarb
inc
xchg
sub
shlb
popf
loope
shll
mov
mov
jne
mov
inc
pop
pushf
jns
jne
in
das
fwait
adc
jno
add
pop
nop
lret
je
sub
cwtl
push
adc
push
dec
jae
scas
mov
gs
aad
push
out
push
or
push
icebp
ret
mov
xchg
pop
xchg
jl
dec
pushf
lods
fadd
movsl
adc
shrl
cmp
adc
jne
cmp
mov
mov
mov
pusha
sti
mov
cmp
add
jne
pusha
add
jae
arpl
adc
lock
or
add
jne
int
cmpsb
push
insb
pop
jbe
imul
stc
outsb
xlat
les
test
xor
insl
shlb
or
jle
jne
sbb
adc
stos
pop
or
add
or
ja
jne
in
mov
jne
sbb
cwtl
sub
push
out
xchg
pop
mov
andl
hlt
insl
popf
mov
es
andl
mov
push
mov
cwtl
sub
push
imul
jb
jg
xor
lods
pop
xchg
xrelease
inc
pop
std
out
das
or
push
adc
mov
push
push
mov
aas
jne
imul
jb
push
jae
mov
jne
mov
push
jne
rcrl
sbb
or
mov
jbe
shlb
xlat
jmp
xchg
pop
jne
adc
dec
jne
or
fnstenv
jecxz
mov
int3
mov
add
push
icebp
jo
push
jne
mov
dec
jne
mov
out
arpl
cltd
xchg
push
out
mov
xchg
xor
cwtl
ret
fwait
repz
jne
mov
test
mov
pop
mov
sbb
add
je
je
sbb
adc
jns
adc
or
or
xor
imul
jne
jno
and
ret
into
push
dec
adc
adc
or
sub
pop
lcall
sub
xchg
push
ds
cmp
and
cs
cmpsb
testl
jne
pop
stos
mov
mul
push
rcl
adc
sahf
stc
outsl
je
xchg
push
dec
push
pushf
push
push
fwait
pcmpeqw
inc
mov
sub
jae
push
dec
loopne
push
mov
mov
out
sbb
xchg
pop
dec
jae
jmp
jne
xor
aas
adc
dec
dec
dec
and
stc
incl
into
out
es
scas
jne
pushf
ljmp
jnp
lea
xchg
adc
imul
out
fdivl
cmpsb
sub
jne
gs
addl
sahf
and
shlb
pop
fdivl
fdivp
pop
sbbl
dec
jnp
lds
stos
fistpl
lcall
daa
jbe
push
pop
mov
test
xlat
loope
push
shll
pusha
xchg
into
ret
das
push
jne
int3
call
lea
mov
mov
ret
adc
lret
xor
mov
or
js
cmp
in
push
dec
sbb
push
insb
dec
arpl
je
xchg
das
aas
subb
add
cmc
icebp
mov
jne
mov
in
pop
in
in
outsb
aad
pop
mov
jmp
std
cmp
xchg
or
mov
stc
sbb
ja
jb
mov
divb
mov
dec
out
lcall
ljmp
iret
push
repz
cmp
mov
push
jge
sub
fmulp
out
jmp
mov
xor
sub
push
xchg
and
sti
jne
sbb
rcl
or
jne
ss
in
fists
fsubl
mov
jnp
adcb
jne
or
pop
xor
sbb
lock
pop
arpl
pushaw
push
pop
push
cmp
hlt
xor
adc
into
clc
fcomip
je
stos
insb
push
jne
movsl
cmp
shlb
ljmp
jne
mov
xchg
jae
movsl
xchg
arpl
ret
or
pusha
mov
imulb
dec
xchg
adc
or
jg
push
sub
pop
add
dec
inc
pop
sub
mov
ret
xchg
add
inc
mov
jne
mov
movsl
in
test
repz
jne
mov
adc
cmp
fsubrl
push
inc
int3
imul
lods
gs
stos
in
push
xchg
es
orl
ss
mov
call
je
xor
jae
or
hlt
jne
aas
sahf
cs
outsl
add
mov
xor
pop
jne
sbb
faddl
pusha
dec
es
imul
pop
pop
fnstenv
jb
cwtl
mov
repz
and
adc
loop
xchg
mov
lret
mov
loopne
pushf
jne
mov
mov
flds
icebp
inc
insb
je
jne
mov
jge
pop
push
xchg
das
jns
aas
loop
mov
lods
lds
pop
sub
aad
pop
int3
mov
jne
lock
dec
aad
jb
mov
mov
lahf
andb
cmpsb
lea
mov
std
hlt
insb
aaa
lret
divl
pop
push
lds
pusha
test
dec
das
inc
xchg
inc
incl
sub
and
movsl
cmp
repz
jne
sbb
ljmp
mov
mov
dec
jb
fisubs
mov
push
aad
lods
repz
sbb
pop
inc
cmp
mov
dec
addr16
icebp
push
fdivl
mulb
jne
jb
std
jnp
sub
cmp
mov
fcoml
pop
jne
addr16
fmul
pusha
ficomps
pop
jns
inc
sbb
cmpsl
std
and
and
sti
sahf
dec
loope
test
ljmp
push
fmull
pushf
movsl
pop
testb
enter
pop
add
aad
inc
cmp
lea
outsb
jne
insl
push
and
fs
dec
pushl
xchg
out
sub
pop
ljmp
xchg
mov
adcb
popl
xchg
mov
dec
pop
ljmp
add
jne
pusha
jge
das
cmp
jae
cli
cltd
adc
xor
addl
mov
arpl
test
je
test
add
push
jecxz
or
jne
lock
sbb
push
jne
cltd
outsl
stos
mov
jno
jne
ret
jo
pop
icebp
bound
mov
push
imul
jl
je
popf
jecxz
imul
cmpsl
xchg
cmpsl
cmp
rolb
push
sarl
jne
pop
inc
push
pop
mov
ficompl
xchg
mov
or
rolb
jle
fdivl
les
add
in
cmp
popa
in
ja
push
outsb
pop
mov
xchg
sub
cmp
dec
sahf
cmp
jge
xor
lock
cmp
adc
pop
jne
sbb
inc
fwait
sti
mov
inc
pop
int3
je
push
mov
jne
loope
ret
or
cwtl
push
stos
nop
in
cltd
out
dec
inc
mov
dec
dec
sbb
push
aad
sti
push
fldl
jne
cld
rorl
xchg
push
dec
jns
das
push
aaa
imul
pop
xorl
subb
enter
mov
sbb
push
sbb
add
jecxz
pop
and
es
add
test
mov
in
cltd
cld
imull
mov
insl
pop
clc
cmpsb
adc
hlt
add
cld
xor
jb
jno
stos
sti
scas
fdivrl
mov
jne
out
push
cmp
push
in
pop
jne
or
decl
and
cmpb
insl
adc
adc
lret
mov
mov
aad
jb
push
xchg
push
or
sub
pusha
aam
lds
pop
ret
xchg
adc
pop
insb
stos
jne
sbb
rcrb
mov
hlt
outsl
test
xor
repnz
mov
test
inc
jg
jne
add
sub
dec
xor
jne
pop
and
jae
push
add
lahf
insb
and
call
mov
and
pop
mulb
sbb
xchg
jne
js
les
mov
inc
sbb
jne
push
xor
push
enter
xchg
inc
pop
hlt
xchg
jle
mov
xchg
cmp
sbb
mov
je
jo
dec
sub
jne
rcl
pop
mov
inc
xchg
xlat
mov
aas
ljmp
bound
mov
xlat
jne
and
jnp
gs
outsb
jp
cli
pop
jl
mov
jge
pop
movl
xorl
cmp
das
push
fs
insb
xor
subb
loope
jg
jbe
jne
cld
sbb
jne
jns
addr16
cmpb
cwtl
jne
mov
sahf
or
lahf
int3
jbe
mov
movsl
adc
jno
aad
cmpsl
inc
mov
push
jne
sbb
fnstenv
dec
scas
fwait
dec
imulb
mov
pop
test
jp
mov
cli
lea
sub
int
out
push
lods
lods
cmp
push
test
test
or
cmpsb
mov
pop
jo
jae
dec
in
test
jne
dec
xor
mov
jns
jne
adc
lret
outsl
mov
jne
scas
jge
test
fnstenv
jnp
aam
rolb
push
jo
fiaddl
movsb
stc
jmp
jne
push
outsb
out
xchg
pop
out
cmpsb
jmp
ljmp
jne
in
jno
repnz
scas
push
addr16
adc
sbb
lds
cmc
cltd
fwait
movsb
lock
jne
icebp
and
adc
pop
pop
jne
out
mov
movsl
jne
int
mov
jne
lret
jl
mov
jne
dec
arpl
enter
stos
int
push
into
jne
cmc
pop
iret
inc
mov
jne
and
sarb
jge
mov
cmp
adc
clc
js
shll
add
shrl
mov
addr16
ret
adc
les
cmp
sub
adc
jmp
and
mov
and
outsl
mov
xchg
ljmp
mov
pop
jo
mov
inc
mov
push
adc
insb
lods
jmp
jne
movb
jne
test
or
cltd
fsubrs
cmp
xchg
insl
outsb
ljmp
je
sub
popf
cwtl
jns
jne
inc
sbb
pop
jb
rolb
out
xchg
popa
xor
jge
jne
sti
mov
push
scas
into
enter
insl
xor
loope
testl
out
jne
xlat
pop
cmpsb
lea
add
xor
scas
push
leave
insl
cli
jne
lods
aad
aaa
pop
out
lods
sbb
push
rol
xchg
movsl
jne
and
push
imul
nop
movsl
out
adc
movsb
jne
cmp
sbb
xchg
gs
out
and
popf
push
or
sub
sbb
dec
xchg
xlat
push
jne
imull
jg
subb
mov
sahf
mov
inc
movsl
outsb
daa
jmp
faddp
mov
dec
divl
mov
xor
jne
gs
jb
fisubl
cmp
ss
pop
in
mov
mov
cmpsb
or
stos
int
data16
outsb
xchg
outsl
mov
jne
pop
aad
mov
mov
sub
je
movsb
mov
icebp
or
adc
inc
addr16
sub
aad
les
mov
pushf
mov
push
faddl
xchg
and
pop
addr16
dec
sub
jne
xchg
cmc
std
lcall
dec
mov
pop
push
cmpl
push
push
in
xor
jecxz
jne
shll
and
outsb
jne
push
sub
xchg
iret
test
mov
das
inc
mov
pop
push
xor
test
inc
xchg
lcall
mov
or
aad
fldenv
aas
or
add
jne
and
xor
push
xor
xchg
jge
jae
fcoms
adc
xor
xchg
sahf
movb
outsb
stos
mov
cmp
rol
lea
pop
mov
fwait
out
das
adc
mov
mov
mov
les
xchg
pop
push
cmp
dec
fmul
out
jne
push
inc
pop
ss
shlb
mov
adc
dec
inc
inc
movb
sub
jne
dec
mov
push
fistpll
pushf
pop
hlt
subl
mov
xor
sarb
je
pop
es
cmp
sbb
fbstp
push
test
jne
sahf
notb
jb
xchg
mov
and
rcrb
or
mov
inc
mov
pop
out
lahf
jl
adc
or
jno
pop
je
mov
mov
enter
aas
pusha
insl
hlt
xchg
daa
cmpsl
dec
jbe
sti
out
fs
scas
xchg
add
gs
test
dec
leave
mov
push
divl
hlt
sar
push
popf
scas
pcmpeqw
adc
cmpsb
jne
stos
add
push
xchg
js,pn
cmp
int3
xor
sub
in
adc
adc
lea
and
jecxz
inc
and
mov
jne
scas
mov
aam
pop
pop
test
hlt
sub
cmp
and
mov
dec
aas
lcall
repz
dec
and
jns
sbb
inc
xchg
pop
jne
int3
aas
inc
cmpsl
fs
xor
xchg
xchg
in
sbb
jg
bound
sbb
test
aaa
jb
or
outsl
push
mov
jne
cmpsl
lret
idivb
int3
cmpsb
lahf
jne
xor
pop
mov
sbb
jb
in
ret
xchg
test
les
popa
push
xchg
sub
std
cmc
bound
jmp
mov
jne
scas
cmp
int3
ja
push
arpl
nop
xchg
jbe
jne
pop
and
out
maxps
je
fwait
add
dec
push
xchg
test
sub
jno
test
mov
push
inc
push
xor
pop
sbb
mov
push
in
test
add
cli
bsf
loopne
jo
test
jg
insl
call
sub
lea
jp
clc
adc
fs
dec
xor
gs
push
imul
sub
dec
jno
xchg
pop
add
sub
mov
and
jg
adc
sub
mov
shll
andl
frstor
xchg
leave
pop
xor
sbb
adc
pop
gs
insb
push
inc
jge
leave
add
xor
and
insb
xor
xor
push
bswap
paddb
fs
add
mov
insb
pop
pop
or
mov
aad
pop
test
rclb
ret
dec
mov
mov
xor
test
test
test
stos
pop
push
int
push
xor
fisttpll
fldenv
inc
insb
pop
pop
or
mov
stos
fs
pop
push
cmp
jno
call
lods
xor
in
insl
push
insb
lds
lock
loope
pop
xor
fnsave
or
frstor
xchg
bound
popf
pop
jno
fs
xor
inc
in
shld
punpcklwd
xor
pop
rcr
lock
pop
inc
in
loopne
fs
mov
je
adc
sti
daa
int3
push
dec
and
mov
sti
mov
sub
dec
and
loopne
lock
or
mov
inc
sbb
mov
adc
inc
cwtl
dec
jp
pushf
test
inc
stos
or
xchg
xchg
mov
in
or
inc
fwait
outsb
jge
out
mov
mov
sub
cmp
sub
fisubl
ja
push
aas
shlb
in
nop
mov
dec
mov
pusha
mov
cwtl
jecxz
jne
lcall
and
pop
xor
mov
aaa
in
push
cmp
imulb
dec
cmp
mov
dec
inc
mov
sub
dec
pop
hlt
or
push
jle
jne
or
popa
inc
ror
xchg
dec
sti
fsubrl
mov
lods
xlat
and
push
mov
cmpsb
shll
and
jns
pop
imul
out
adc
cmp
fsubrl
or
test
adc
xchg
xchg
aam
mov
push
adc
arpl
outsl
inc
xchg
pop
xchg
rcrb
add
scas
ja
push
xchg
or
mov
xor
xlat
dec
repz
dec
jp
pop
jno
mov
fcmove
inc
push
in
iret
movsl
jl
sbb
das
or
sbb
mov
pop
iret
movsl
stc
mov
lds
cmp
cmp
or
adc
out
mov
fcompl
xchg
adc
pusha
pop
lret
sti
xor
je
sbb
cmp
xor
add
pop
pop
push
or
xchg
cltd
ja
xchg
sbb
inc
sbb
leave
pushf
push
test
insl
dec
sub
mov
rol
dec
sete
mov
push
push
cmp
test
and
push
stc
push
cmc
add
mov
lea
jmp
lea
jb
push
pushl
ret
pusha
lea
ja
stc
push
pushf
pusha
imul
test
test
movw
cmp
add
mov
mov
mov
mov
lea
jmp
add
std
daa
int3
sar
int3
xchg
push
or
stos
jg
sbb
cmp
into
jge
inc
outsl
aas
fmull
loop
out
lcall
xchg
repz
or
fstpl
addb
bound
out
dec
lret
and
jb
ficoml
jle,pn
lcall
sahf
push
and
lea
add
xor
dec
sahf
jns
addl
pushf
jae
or
pushf
jno
sbb
mov
or
jmp
or
mov
nop
rorb
sbb
addr16
add
mov
mov
sub
mov
jo
sbb
scas
fs
xchg
dec
fincstp
arpl
js
lds
lods
dec
call
push
int3
or
xor
addr16
pop
jg
inc
aad
or
xlat
fdiv
inc
add
cld
stc
or
test
or
lods
orb
cmc
icebp
subl
xchg
daa
int3
jecxz
in
jo
adc
leave
mov
xor
jns
or
add
or
or
jno
aad
clc
shlb
push
lret
sbb
mov
repnz
out
add
scas
rep
mov
jno
xchg
das
or
in
cmp
lock
addr16
xlat
sub
aas
mov
mov
push
mov
xor
cltd
enter
fmul
int3
mov
pop
pop
xor
xlat
cmpsb
jbe
or
mov
cmp
jmp
lea
lea
jp
pushf
pusha
lea
js
ja
pusha
pushf
lea
jb
push
test
test
bt
cmpb
call
adc
adc
fsubrs
jge
and
dec
adc
fistl
add
movsl
jmp
adc
out
shl
int
out
pop
xor
cmc
inc
scas
fbld
adc
inc
es
pop
xor
sub
add
cwtl
mov
push
pushf
jecxz
add
push
repnz
xchg
push
out
aaa
loop
insb
inc
sbbb
fwait
pop
pushl
lea
jmp
test
xor
test
cmp
fldcw
loopne
mov
jne
or
cs
adc
cltd
int3
mov
loopne
jnp
add
es
or
and
mov
popf
sub
lret
mov
loope
bound
gs
dec
ret
ss
sbb
inc
popa
int3
mov
xchg
jmp
dec
push
pop
and
loope
filds
cli
cmp
ret
dec
push
jno
sbb
mov
out
test
fwait
leave
adc
dec
icebp
pop
jno
daa
int3
mov
cmp
sub
jo
push
insb
mov
pop
xchg
insl
call
pop
cltd
adc
cwtl
mov
and
push
out
add
push
adc
out
movsl
xchg
aad
add
cmp
test
sbb
outsb
stc
push
scas
lea
clc
lock
decb
lods
call
jle
inc
push
jo
push
fldt
loope
dec
scas
adcb
popf
jecxz
dec
dec
inc
push
dec
xor
cs
insb
add
shll
fs
imul
adc
enter
sti
mov
test
mov
jne
xor
rorb
mov
fdivs
cmp
cli
add
dec
jmp
ss
std
add
and
sub
and
push
xorb
out
adc
ja
stos
cmp
ljmp
lcall
jmp
shrl
mov
cmp
cmp
cmpb
pushf
jmp
lea
je
cmc
bt
call
jmp
enter
daa
int3
mov
aas
adc
stos
jb
add
mov
fbstp
dec
mov
mov
cmp
shlb
int3
mov
adc
pop
mov
pop
aas
xchg
repnz
in
xlat
movsl
jl
mov
pop
movsl
frstor
cmp
xchg
dec
jnp
cmp
xor
jnp
inc
jne
scas
insl
or
mov
xchg
fs
sbb
pop
mov
icebp
lea
dec
fildl
and
rolb
outsb
inc
and
mov
jb
cmc
and
xchg
xchg
daa
int3
jecxz
jecxz
xchg
insl
inc
adc
lret
sub
inc
and
sbb
in
out
roll
ds
aad
add
pop
lds
mov
cmpsl
arpl
sub
jno
pushf
push
enter
int
ficoml
mov
mov
enter
outsb
dec
add
scas
sbb
adc
inc
push
or
stos
push
xor
outsb
shlb
jge
xchg
cld
lret
movsb
jle
paddusw
loopne
scas
outsl
mov
push
andb
out
lcall
adc
std
je
mov
imul
leave
pcmpgtb
in
mov
out
mov
push
add
leave
insl
mov
fisttpll
jnp
or
pop
mov
das
cmpsl
je
insb
icebp
pop
push
add
ss
iret
lock
or
mov
jo
jns
mov
ret
cwtl
imul
lock
pop
push
inc
outsl
mov
rol
daa
int3
pop
inc
adc
mov
pusha
sub
scas
jg
sbb
push
mov
ficoml
js
mov
xor
mov
call
ja
jnp
test
xor
hlt
cmp
sarb
loopne
jo
lds
inc
pusha
mov
repz
test
sub
movsb
in
call
out
rcrl
lea
dec
and
loopne
lret
push
pushf
or
pop
xchg
fs
fwait
jb
pop
ljmp
loope
lret
stc
fdiv
mov
inc
push
xchg
add
sbb
jecxz
or
loop,pt
mov
jmp
jns
fsubl
xor
test
aad
repz
mov
test
aam
mov
dec
enter
xchg
shlb
dec
sbb
shlb
mov
pop
dec
mov
sbb
xchg
pushf
mov
pushf
lea
jmp
push
pushf
cmpsl
ret
add
inc
or
lcall
pushf
cmp
add
or
call
dec
hlt
loop
mov
stos
push
mov
iret
and
out
testl
das
cmp
or
lds
mov
adc
das
cmp
mov
xor
push
cs
roll
fisubl
nop
xlat
movsl
or
add
insb
arpl
push
arpl
xchg
sub
bswap
pop
pushf
pop
pop
mov
pop
mov
pop
call
xor
lds
int3
inc
jns
adc
mov
pop
xor
aad
adcl
jecxz
mov
xlat
cmp
sbbb
dec
mov
inc
add
fsubrs
repnz
jg
xor
shll
pop
repz
mov
adc
sahf
sti
lods
ds
push
sbb
cmc
mov
ds
out
add
cwtl
add
jmp
sahf
pop
rorl
cld
insl
mov
mov
stos
xor
dec
leave
data16
rcr
mov
jne
sub
scas
xchg
sahf
jl
push
cmp
faddl
lea
jne
cmc
mov
mov
push
movsbw
sub
movsbw
bt
lea
bt
sub
pushf
bt
stc
pushl
popl
pushf
cmc
mov
test
cmp
lea
jnp
pushf
push
lea
ja
shl
mov
sub
pushf
stc
sub
add
bsf
shl
bt
btc
mov
clc
sbb
or
sbb
mov
pusha
cmp
repnz
mov
jmp
dec
fsub
les
int3
inc
je
and
mov
lods
sbbl
nop
ds
aas
cwtl
je
pusha
add
mov
xchg
sahf
mov
pop
imull
sub
ds
sub
push
mov
pop
xor
mov
adc
xor
sbb
lret
push
lea
pop
sub
stos
pop
lcall
loop
sbb
arpl
aad
xchg
repz
imul
lret
cwtl
jno
dec
imul
mov
pop
sub
inc
or
cmpsl
add
and
add
jns
xchg
lahf
shlb
add
xor
jne
pop
out
sbb
ret
sbb
xchg
mov
leave
or
sbb
sar
dec
xchg
jb
scas
xchg
or
mov
in
and
test
into
mov
daa
int3
and
mov
dec
sbb
mov
dec
and
in
fimuls
ret
cmc
lds
mov
int
fidivrs
mov
movsl
fsubrl
sub
in
sbb
je
outsl
or
ret
pop
popf
pop
or
jle
mov
dec
sbb
mov
mov
dec
and
sub
cld
ljmp
mov
daa
int3
out
cmc
lret
mov
rolb
jnp
xor
insl
inc
xlat
stos
pushf
lea
xor
adc
sub
lahf
push
mov
inc
jae
outsl
and
mov
pop
xchg
push
xlat
jbe
mov
dec
add
stos
fidivrs
add
sbb
rcrb
mov
shl
push
cmpsb
xor
cld
enter
orb
mov
pop
sub
mov
sbb
ljmp
dec
sbb
shrb
mov
inc
fwait
or
data16
repz
lret
pushf
jp
add
das
pusha
sub
insb
mov
dec
addb
gs
jno
sub
and
cld
jo
add
mov
xor
loope
and
mov
sbb
fdivr
push
sbb
mov
fwait
test
add
mov
out
inc
adc
scas
mov
fisubrs
fstp
fcoml
lret
aas
push
leave
daa
int3
cltd
pushf
jno
or
test
movsb
jns
sub
mov
push
adc
adc
pushf
push
adcb
add
movsl
fwait
out
iret
xchg
aas
xchg
push
daa
mov
lret
mov
fmull
loop
lret
fcoml
ret
cmpsl
adc
notl
or
push
fimull
sub
xchg
aad
pop
in
js
outsb
dec
xchg
lock
and
rclb
inc
sbb
les
cmpsl
insb
jno
lds
ficoml
fs
call
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
fwait
mov
sbb
lods
adcb
leave
xchg
bound
adc
xor
jne
xlat
loop
repz
cs
idivl
jnp
lods
into
outsb
mov
mov
inc
fstpl
dec
addl
pop
push
cld
sbb
aas
jo
std
mov
inc
dec
sub
inc
roll
fsubrs
int
arpl
add
out
int
adc
cmc
sbb
rcr
mov
pushf
call
mov
pop
enter
jge
adc
scas
mov
or
mov
push
fwait
sub
mov
fnsave
ret
cmp
pop
bound
gs
mov
loope
repz
es
fcmovbe
xchg
cmpsl
sub
stos
or
inc
nop
in
enter
les
addl
mov
adc
jge
lret
lcall
and
movsl
mov
cmp
fdivrs
lea
in
aaa
sbbb
dec
push
jmp
lock
adc
lea
bound
daa
int3
mov
mov
test
out
mov
dec
dec
sub
sbb
outsb
mov
push
idivb
ret
out
scas
outsl
mov
jl
jae
js
sbb
dec
xchg
and
lea
jmp
sub
mov
ficomps
fs
xlat
cmpsl
jge
push
lahf
sbb
imul
fnstenv
jl
out
daa
int3
inc
jne
and
shlb
daa
idivb
push
loopne
mov
pushf
jmp
fidivs
loop
rcr
mov
pop
push
push
pushf
outsl
dec
and
mov
nop
pop
sbb
jbe
mov
popf
mull
inc
repnz
iret
out
loope
cmpsl
stos
xor
xchg
mov
into
mov
or
ss
rcrb
mov
pop
jmp
cmpsb
popa
out
inc
ja
stos
fdivrl
lcall
xchg
ss
aaa
xchg
int
mov
adc
xchg
dec
cli
sub
ffree
jle
mov
out
dec
sbb
icebp
jne
sbb
loope
jl
push
cwtl
fisubrs
push
sub
les
mov
fwait
pop
enter
push
mov
movsl
or
int3
mov
mov
pop
sub
mov
ret
ret
aas
add
mov
jl
cmp
rolb
push
jne
mov
fwait
or
clc
mov
and
aad
xchg
aad
pop
push
bound
shr
mov
jno
fwait
cwtl
xlat
es
jae
icebp
cmp
int3
lcall
cmp
jne
inc
mov
sub
sti
xor
xchg
push
sbb
ret
xor
fnstenv
sub
add
lret
stc
into
scas
pop
nop
push
mov
cmpsl
jo
or
pop
js
sub
cmp
cmp
and
in
loope
fiaddl
out
or
mov
dec
je
sbb
push
cmpsb
rolb
mov
ret
rcrl
lock
xor
cmp
lods
add
xor
push
mov
lret
ret
cwtl
xor
lods
ja
inc
mov
cwtl
or
adc
std
adc
daa
int3
push
orl
inc
and
mov
test
imul
lret
cmp
or
pusha
sub
fcoms
xchg
lods
inc
cmp
mov
push
or
lock
popa
rclb
mov
mov
ret
sti
in
mov
inc
dec
mov
cmp
xorb
dec
rorb
xor
js
and
js
stc
cmp
dec
sbb
mov
cli
ret
push
xchg
enter
cld
jns
int
int3
fisubrl
lcall
dec
fildl
xor
sbbl
lahf
mov
cmp
jnp
mov
fstl
push
inc
inc
sti
sub
sbb
xlat
mov
lods
sub
out
out
xor
pop
xor
add
cltd
xlat
lds
mov
pop
pushf
inc
shl
xchg
mov
add
popf
les
cli
inc
adc
mov
fisubl
stc
lods
fisubrl
int3
daa
int3
aas
imul
leave
mov
fisubs
fcoml
in
and
mov
cmp
push
xchg
mov
sub
mov
dec
inc
jae
jae
cmc
jl
inc
clc
and
push
ret
cld
xchg
and
sbb
xor
mov
mov
insb
movsb
test
mov
and
cmpb
mov
sub
rclb
xchg
rep
lock
gs
push
ljmp
xor
cli
es
cmpsl
clc
add
bt
cmp
pusha
movb
lea
jb
stc
push
call
mov
int3
shl
nop
pop
and
int3
popf
jno
sbb
mov
leave
fst
mov
scas
push
call
lcall
gs
push
mov
test
sti
and
pop
ret
or
cli
push
sbb
rcll
lahf
dec
pop
dec
dec
enter
out
addl
xchg
lods
orb
test
enter
popl
mov
xor
shlb
mov
pop
xor
fistpll
in
mov
test
mov
sahf
loope
xor
mov
xorl
ljmp
pop
dec
push
movsb
aaa
data16
sub
push
stos
insl
in
and
mov
dec
add
adc
add
sub
aaa
xchg
cmpsl
jb
and
shl
jnp
mov
lea
add
in
mov
fnsave
dec
pop
mov
popf
out
mov
mov
gs
pop
add
pop
adc
shlb
insb
gs
sbb
jnp
add
sub
and
je
adc
sbb
insb
push
push
xor
mov
xor
cli
xor
adc
or
pop
test
xor
out
insl
lds
js
xchg
add
xor
movsl
sub
sbb
push
gs
and
in
in
stos
gs
pop
jbe
int
jmp
insl
and
in
cmpsb
inc
xchg
jae
or
insl
and
jns
insb
cld
jo
jmp
call
cmc
into
fcoml
shll
mov
sbb
fldenv
push
xchg
and
repz
sub
insl
repz
imul
hlt
xchg
das
shlb
je
pop
imul
insb
addr16
imul
push
mov
mov
mov
mov
mov
mov
gs
adc
in
lods
insb
leave
in
push
call
std
push
fxtract
imul
and
stos
mov
test
insl
xor
int
mov
lods
js
mov
clc
nop
data16
xchg
lds
mov
stos
cmpsb
aam
scas
lret
aam
insl
inc
or
mov
ja
xor
scas
xchg
add
cli
mov
push
dec
insb
aam
mov
jg
stos
js
cwtl
shlb
call
lahf
jp
xchg
test
call
adc
mov
mov
lods
mov
les
mov
gs
outsl
mov
mulb
pop
jne
xor
adc
add
pop
xor
daa
push
add
add
adc
dec
sarl
das
in
pop
adc
movsl
mov
rcl
xor
push
add
int
mov
gs
add
jo
mov
movsl
cmpsl
mov
ja
pop
dec
dec
inc
dec
dec
clc
lret
stos
jl
pop
movsl
pop
add
pusha
mov
mov
imul
sahf
mov
rorl
insb
sbb
insb
xor
xor
arpl
push
sub
fs
insl
rcl
and
pushf
xchg
imul
icebp
xchg
mov
andb
or
jg
dec
stos
jl
pop
andb
mov
dec
sarl
xor
jno
insl
cltd
je
shrl
rcll
mov
popa
and
ret
jns
popa
sub
cmp
dec
mov
out
sub
fstl
sub
fdivl
xor
in
mov
popa
in
loop
fsubl
leave
jle
popa
sbb
mov
pop
jne
jno
test
mov
je
or
movsb
sarl
adc
and
dec
int
fiaddl
mov
jl
sub
sub
jns
jg
popa
adc
inc
or
scas
inc
mov
test
lods
mov
and
popa
subb
popa
mov
cli
mov
jnp
and
pop
addb
mov
popa
jp
insb
and
jge
xchg
push
arpl
fmull
sbb
dec
enter
sbb
or
in
call
sub
or
mov
popa
inc
xor
popa
and
adc
jl
mov
sbb
insl
test
mov
aam
ror
mov
aaa
adc
dec
jno
in
mov
lods
popa
push
stos
pop
adc
sub
lods
loop
lea
inc
loopne
dec
std
inc
add
popa
add
mov
pop
sub
jne
mov
xchg
and
lods
xchg
xor
cmp
or
popa
add
pop
add
imul
test
inc
pop
cmp
jb
inc
mov
pop
int
dec
jne
orl
shl
jge
in
sub
and
popa
mov
mov
xchg
lods
gs
adc
movsb
mov
jbe
mov
cmp
xorl
xchg
inc
insl
js
xchg
movsw
ret
mov
insl
das
cmpsl
lret
insl
jmp
cwtl
insl
ret
and
add
in
outsl
jno
xor
xlat
insl
js
jno
in
loopne
push
insl
insl
mov
stos
insb
jno
sbb
sub
lock
ljmp
pusha
jnp
insl
scas
test
jno
cmp
repz
test
xchg
repz
repz
push
repz
cli
push
clc
pushf
pop
push
cwtl
sbb
inc
in
ljmp
stos
fnsave
loopne
call
sub
dec
mov
imul
jle
mov
mov
or
pop
dec
bound
pop
in
add
pop
cmpsb
pop
sub
pop
sti
push
in
cmp
testl
xchg
jmp
jae
jae
out
xor
fyl2xp1
popa
xchg
jae
mov
fdivl
addr16
sub
pop
xchg
dec
gs
add
ficompl
in
loope
insl
mov
cmp
add
mov
insl
mov
jae
inc
insl
test
insl
and
jae
cld
loope
xchg
or
pop
mov
pusha
jbe
insb
inc
pop
hlt
lock
cmp
testb
push
je
stos
push
in
dec
loopne
sub
jne
int3
sbb
adc
mov
xchg
in
jmp
and
push
pop
add
into
add
add
add
in
jmp
or
push
jnp
jno
jg
sti
in
filds
mov
jge
popa
jl
ss
mov
push
popa
cltd
es
inc
mov
js
pop
ja,pn
lds
insl
xor
push
test
repz
sub
and
add
and
add
in
adc
jle
inc
inc
aas
inc
adc
dec
add
cmp
adc
or
lds
add
pop
add
and
inc
pop
movsl
clc
dec
aad
jl
pop
xchg
mov
shlb
jge
mov
mov
xor
mov
sahf
mov
imul
pop
cmpsl
leave
xor
inc
fwait
les
andb
adcl
inc
stos
out
sub
in
mov
xchg
stos
jle
add
aaa
movsl
aam
cmp
jg
stos
out
les
mov
lods
mov
shlb
mov
sbb
insl
gs
push
push
and
mov
out
adc
popf
rolb
sub
scas
scas
cmpsb
repz
movsl
jl
mov
xchg
movsl
inc
mov
gs
push
aad
sarb
xor
or
mov
movsb
jo
mov
jbe
sub
scas
shlb
push
ret
shrb
mov
fiadds
pop
das
push
cld
nop
push
popa
cmp
imul
scas
mov
pop
mov
scas
lds
sub
aad
mov
xor
lea
or
dec
xor
in
nop
push
inc
push
out
cmovnp
or
adc
or
arpl
incl
pop
xchg
jae
xor
dec
int
mov
push
adc
pop
ljmp
and
arpl
daa
jne
shll
or
scas
cmp
jle
push
stos
insb
push
test
push
imul
sbb
lods
std
popf
push
add
mov
xchg
adc
out
lret
inc
or
pusha
out
lock
or
cmp
cmpsl
add
adcl
movsl
popa
insl
outsb
xor
sub
cmp
rorl
fisubl
and
test
out
and
es
adc
xchg
adc
or
movsl
arpl
xchg
xor
pop
scas
cwtl
mov
dec
add
push
imul
xor
hlt
mov
mov
inc
mov
mov
lods
mov
push
aad
mov
mov
inc
xor
fnstcw
mov
das
repnz
repnz
popa
push
lods
movsl
in
aas
aad
outsl
imul
stos
into
int3
cltd
pop
sub
xlat
xor
jg
rcrl
sahf
lahf
loope
ja
dec
push
xor
aaa
inc
xor
mov
in
sahf
test
ljmp
jbe
fldcw
nop
stos
icebp
ds
xor
mov
insl
mov
sbb
xchg
dec
push
push
sub
pop
add
push
sub
and
jae
and
arpl
clc
xor
jae
and
and
sub
in
mov
gs
test
insl
imul
and
push
sbb
addr16
cmpsl
test
mov
stos
mov
cmp
aas
hlt
lock
push
sub
adc
sahf
lret
mov
dec
scas
jne
inc
je
or
xor
and
mov
xchg
lea
insb
clc
or
xor
lea
popa
mov
sbb
test
lods
jbe
and
mov
hlt
cltd
sub
pop
jbe
fldt
inc
outsl
in
rcrl
gs
push
inc
addr16
push
cli
jae
addr16
dec
and
lea
xor
lret
or
push
pop
lods
fstl
adc
push
movsl
clc
adc
sbb
je
mov
outsl
jae
dec
sbb
fstpl
lahf
adc
imul
sbb
bound
movsl
insl
dec
out
inc
inc
jno
cmp
xor
imul
xor
inc
xchg
pusha
add
cmp
add
jp
imul
xchg
sub
push
push
sbb
inc
push
sbb
jae
adc
test
bound
das
outsb
gs
push
cs
mov
dec
pop
enter
inc
fcompl
shl
mov
jns
add
cmp
faddl
add
rolb
lock
or
fldt
lock
popa
cmp
dec
push
mov
scas
push
out
lods
xchg
cmp
icebp
push
cmovg
pop
mov
add
popf
flds
outsb
cmp
mov
in
sub
add
enter
sub
sbb
adc
push
scas
test
adc
popf
xor
pop
adc
sbb
push
or
dec
call
arpl
fmul
lcall
dec
movsl
jge
or
stos
loop
add
adc
mov
shll
lret
jae
aas
enter
dec
jl
mov
lret
aaa
inc
push
inc
inc
ss
sub
roll
cmp
rorb
sbb
sub
dec
inc
cs
xor
shll
loopne
xor
insb
outsl
shrl
and
test
dec
outsl
jno
jae
dec
outsl
and
dec
movsl
push
jno
outsl
or
insb
loopne
push
insb
inc
aam
aaa
push
adc
push
push
jno
sbb
or
xor
jge
adcb
dec
mov
gs
push
jno
or
cmpsl
test
fcompl
sbb
scas
sarb
or
das
push
add
and
jg
push
xlat
xor
pop
movsl
movsb
xor
insb
xchg
mov
xor
insb
inc
test
pop
push
mov
xor
push
out
popa
add
or
jb
je
jae
jmp
ljmp
icebp
in
repnz
push
jno
in
fsubl
push
inc
cmp
inc
std
inc
lock
cmp
insl
mov
insl
mov
in
pop
xor
xchg
mov
fs
in
jb
cltd
push
jno
popf
in
push
mov
outsb
arpl
in
push
mov
imul
imul
in
data16
push
gs
shll
arpl
in
bound
push
popa
sub
loopne
pop
in
pop
arpl
push
pop
sub
lock
in
pop
arpl
push
pop
sub
add
push
add
push
push
sub
adc
push
adc
push
push
sub
sub
dec
xor
dec
arpl
in
push
cmp
dec
arpl
dec
sbb
dec
dec
in
inc
arpl
inc
sub
pop
xor
inc
arpl
inc
sub
imul
arpl
sbb
jns
jne
adc
femms
or
or
pop
add
add
cld
std
adc
outsb
imul
outsl
imul
arpl
jb
pop
fs
adc
add
out
movsl
or
or
lds
dec
push
push
push
push
pop
pop
aas
jne
pop
pop
dec
inc
push
inc
inc
jne
dec
push
dec
dec
inc
ds
popl
inc
inc
dec
mov
push
or
or
add
cli
adc
adc
pop
pop
pop
pop
pop
push
push
push
pop
push
push
push
xchg
and
pusha
in
mov
jae
jno
outsb
je
pop
movsl
mov
pop
jb
mov
ret
pop
cmp
xor
ret
inc
gs
in
outsb
hlt
add
insl
insb
xchg
les
sbb
xchg
push
add
aas
lea
mov
imul
push
jae
dec
pop
inc
out
inc
lods
dec
pop
xor
data16
sub
gs
mov
push
pop
popf
pop
arpl
pop
adc
dec
pop
jae
pop
push
pusha
ret
insb
jo
jae
push
inc
pop
hlt
leave
imul
pop
test
icebp
das
pop
inc
pop
pop
jae
int3
imul
mov
push
pop
push
and
push
popa
push
jae
push
sbbb
sub
push
sbb
jo
jmp
jae
push
gs
and
insl
push
push
push
jae,pt
dec
orl
hlt
shrl
push
test
dec
pop
fwait
shll
dec
inc
jmp
cmp
cmp
dec
mov
add
dec
push
push
inc
repz
dec
hlt
dec
aad
jae
push
icebp
outsb
dec
hlt
dec
inc
lods
pop
xor
dec
cmp
inc
insb
out
jae
inc
gs
pop
jae
pop
jns
cmc
inc
loopne
pop
jae
aas
cmp
hlt
outsl
incb
inc
into
pop
loope
jae
inc
hlt
es
dec
jae
inc
cmp
inc
jae
aas
push
dec
enter
in
xchg
ds
cmp
fnstenv
cmp
ds
jae
xor
ljmp
cmp
inc
aaa
cmp
aaa
cmp
ds
inc
xchg
xor
xor
ret
cmp
fsts
push
jae
outsb
push
push
push
pop
ss
call
jl
lods
push
imulb
push
ret
pop
pop
imul
imul
imul
xor
jae
imul
sub
push
pop
leave
pop
jmp
loope
jae
sub
insl
outsl
sub
daa
inc
push
jae
inc
pop
push
jo
aas
cs
ret
pop
pusha
in
jge
and
stos
inc
jae
dec
imul
or
leave
jae
and
xchg
and
inc
jae
out
addr16
sub
aam
hlt
jl
arpl
pop
and
xor
inc
fs
insb
sbb
xchg
sbb
push
push
dec
push
jae
pop
ret
dec
cmp
sbb
pop
cmp
jmp
imul
pop
in
dec
push
cwtl
gs
jno
dec
imul
pop
das
push
orl
adc
imul
adc
pop
inc
jae
data16
imul
aaa
xor
int
enter
jno
or
imul
or
insl
jno
or
dec
jae
dec
or
insl
or
cmp
push
hlt
gs
lea
dec
add
pop
add
in
add
add
dec
stos
inc
jae
hlt
into
jmp
std
pop
sti
xchg
inc
loope
scas
cli
or
mov
inc
pop
inc
dec
jo
pusha
adc
cld
sti
xchg
mov
sbb
in
xchg
stc
hlt
sub
sbb
mov
push
repnz
pop
imul
mov
pop
push
lock
sub
jl
sub
jmp
dec
arpl
push
sub
adc
inc
dec
inc
jae
cmp
pop
push
inc
adc
push
push
clc
dec
jmp
gs
dec
inc
jae
ljmp
insl
jmp
call
out
jae
pop
pop
pop
jae
pop
aas
xor
out
test
xlat
insb
in
in
push
sbb
loop
pavgw
jo
aas
ss
push
dec
std
push
lods
dec
movsl
loopne
add
addr16
inc
jae
inc
pushf
dec
push
lods
inc
sbb
fidivrs
out
in
mov
and
fstpl
jae
dec
std
inc
arpl
inc
fcomi
push
outsl
push
jae
pop
dec
fsubrs
xlat
add
outsl
pop
jno
aad
jl
sbb
aam
insl
in
shll
jae
shrb
pop
jae
push
adc
cld
xor
rclb
iret
sub
into
push
int
jo
pop
dec
int3
hlt
insl
pop
dec
jae
inc
in
orl
inc
xor
lret
hlt
outsl
push
lret
pusha
jae
pop
enter
dec
jae,pt
imul
mov
inc
stos
pop
jae
ret
pop
push
pop
jo
xchg
pop
dec
ret
push
jo
jns
jns
icebp
scas
sarl
dec
jae
push
insl
rolb
dec
inc
xlat
jae
inc
xor
inc
xchg
dec
push
mov
insb
ss
pop
inc
pop
xchg
inc
sub
jmp
pop
imul
in
sbbl
fldl
jno
pushf
mov
push
ret
push
push
pop
push
push
aas
test
dec
jae
dec
in
push
inc
adc
mov
fwait
les
loope
push
jae
mov
mov
push
pop
loopne
jae
mov
mov
sbb
jns
jns
inc
aas
scas
insb
cmp
lods
popa
stos
cmp
jae
stos
hlt
test
jae
insl
test
cmp
imul
shlb
movsb
hlt
push
mov
mov
ret
jo
outsl
mov
push
dec
sbb
arpl
ds
lock
xor
sahf
hlt
in
push
jae
pushf
pop
inc
fs
pop
lods
pop
sbb
imul
aas
in
mov
orl
inc
inc
jb
hlt
test
push
out
xor
push
adc
push
cltd
mov
cmp
jb
jno
shrb
in
push
pop
pop
xchg
dec
mov
outsl
xchg
hlt
xchg
sbb
xchg
pusha
add
push
in
int
and
gs
pop
jae
xchg
hlt
add
jae
hlt
outsl
mov
push
add
mov
adc
or
hlt
gs
hlt
xchg
arpl
xchg
inc
jo
pop
test
jo
arpl
dec
pop
inc
call
jno
pusha
aas
push
cmpl
xchg
xor
shll
dec
jae
pop
xchg
ds
pusha
xor
dec
dec
jae
dec
ret
inc
pop
inc
insl
jg
sbb
insb
push
mov
hlt
ret
pop
mov
xor
jge
hlt
pop
jae
jl
gs
pop
jae
jnp
into
insl
push
nop
pop
inc
jae
inc
jp
inc
and
dec
aaa
xor
inc
adc
push
dec
sbb
pop
ds
adc
dec
mov
hlt
gs
inc
leave
jae
ja
insl
xor
and
pop
in
mov
je
and
push
add
cmc
arpl
adc
pop
xor
jae
ds
jae
fs
cmp
cmc
insl
lods
insb
mov
xchg
inc
push
fs
imul
jae
aam
jae
cs
aam
cmc
sbb
aad
gs
fwait
push
arpl
inc
jae
bound
cmp
inc
std
dec
imul
cmc
dec
addr16
into
jae
inc
leave
ds
pop
sbb
jno
shrb
xor
arpl
jae
inc
dec
pop
stos
and
scas
pop
pop
jmp
ja
pop
pop
cmc
insl
pop
popa
push
jae
pop
and
pop
mov
mov
cmc
push
stos
sub
push
cmp
push
and
jae
inc
insl
push
xchg
or
imul
push
cmc
imul
in
mov
dec
adc
cmp
dec
cmc
loope
in
inc
dec
cmp
jno
push
xchg
bound
jmp
inc
lods
pop
in
lods
pop
pop
dec
push
rolb
push
dec
inc
iret
jo
push
notb
pop
dec
cwtl
pop
fadds
inc
ljmp
pop
inc
push
loopne
jae
pop
fs
mov
pop
cmp
pop
int
scas
fcoml
insb
jmp
pop
out
aas
push
inc
cld
leave
shlb
jnp
ss
ds
lea
jae
cmp
sub
jae
cmp
sbb
movsl
cmp
rcrb
inc
repnz
cmp
jno
cmp
imul
add
loope
dec
jae
inc
in
icebp
xor
pop
xor
aas
into
jae
xor
dec
in
xor
int3
insl
pop
sub
cmc
xor
dec
cs
push
inc
xor
das
xor
jae
pusha
je
jae
data16
pop
lea
pop
imul
jo
jmp
xorl
push
pop
jb
jne
inc
jno
insb
sbb
jmp
movsl
adc
popf
pop
push
fmull
add
sub
cld
gs
pusha
push
sub
fdivl
popa
sbb
inc
fistpll
pop
call
imul
cld
inc
sbb
fsubl
push
adc
xchg
xchg
jo
dec
adc
add
aas
xor
bound
dec
jo
push
jne
sub
outsl
arpl
push
out
into
flds
fists
xchg
imul
mov
test
int3
out
push
mov
daa
mov
pop
adc
jae
add
imul
adc
push
roll
lahf
jmp
cmc
outsb
pop
jns
aaa
arpl
imul
pop
push
jmp
in
push
mov
and
jne
insb
pop
jno
imul
insb
faddl
lods
inc
data16
dec
insl
pop
dec
nop
inc
movsl
inc
or
xor
inc
addr16
dec
imul
fstpt
pop
cltd
loopne
insl
adc
jne
outsl
adc
jo
jl
cmpl
arpl
dec
popa
push
repnz
push
dec
imul
pop
gs
fwait
dec
pop
lock
xor
gs
push
jae
cmc
addr16
jb
lock
sub
fs
shl
or
adcl
cmp
fmul
iret
sbb
push
mov
in
fbstp
outsl
push
mov
lock
fidivs
shrl
inc
dec
pop
fnstenv
dec
jno
sub
pop
dec
and
outsl
lea
inc
shll
add
dec
pop
pop
gs
xchg
outsl
pop
lods
sbb
inc
mov
shrl
pop
loop
jae
gs
and
clc
mov
insb
outsl
lea
insl
in
shrl
aad
sub
jo
dec
outsl
pop
jo
jb
addr16
imul
inc
pusha
pop
lods
insl
mov
xchg
js
mov
insl
jne
outsb
push
jb
ret
dec
sbb
adc
jno
fildll
movsl
push
and
xchg
dec
insl
clc
dec
fsubl
push
sbb
dec
arpl
jb
insl
inc
sbb
push
push
imul
rolb
xchg
out
cmp
pop
mov
dec
jo
pop
insb
xlat
jno
insl
pop
scas
out
adc
and
stos
xor
sub
test
bswap
push
xor
push
dec
insl
in
cld
dec
stos
inc
push
fwait
pusha
sbb
lock
aad
test
add
xor
gs
dec
sub
movsl
jge
sub
sub
and
jno
mov
jo
jno
popa
fstps
dec
mov
or
lea
loop
sbb
xchg
adc
arpl
lock
pop
je
inc
inc
dec
and
gs
push
arpl
push
movsl
push
aad
fdivrl
cli
adc
hlt
pop
pusha
inc
add
xchg
jno
push
mov
outsl
in
push
imul
pop
adc
dec
pop
insl
scas
inc
push
push
pop
ret
test
mov
mov
push
aad
mov
sbb
popa
insb
jns
in
or
popf
or
adc
adc
mov
or
adc
xor
sbb
pop
pop
mov
out
fwait
or
xchg
jl
jg
pop
jo
push
roll
xor
push
mov
arpl
pop
mov
pop
in
cmp
in
jb
mov
cmp
add
jnp
outsl
jnp
pop
test
and
lahf
and
pushf
adc
adc
fs
jae
test
arpl
vmovapd
pop
pop
add
and
fdivr
outsl
xchg
mov
pop
push
dec
insl
push
dec
mov
pop
or
stos
dec
jge
ret
or
insb
dec
in
popf
movsl
outsb
pop
cmc
push
dec
cld
arpl
bound
inc
inc
xor
dec
adc
pop
mov
add
push
imul
dec
inc
loopne
scas
mov
push
mov
cmpsl
xor
pop
jo
jae
push
mov
add
push
lods
leave
jae
add
bound
xorl
dec
push
data16
bound
add
popa
sub
jno
cmp
in
push
lds
popa
pop
ljmp
inc
add
push
mov
mov
add
pop
insl
dec
imul
xor
mov
pop
arpl
push
jno
arpl
imul
or
enter
lahf
push
jae
push
aaa
inc
cltd
push
xchg
pop
inc
loopne
pusha
in
sub
add
push
mov
push
dec
ljmp
or
jmp
push
inc
in
jmp
add
cld
cmc
std
lods
cli
adc
add
jb
inc
popf
dec
push
dec
aas
sti
shl
lahf
test
and
and
push
ja
and
fmull
pop
mov
push
cmp
cmc
test
fcoml
inc
sub
mov
adc
insb
sbb
arpl
lods
jns
push
mov
xchg
xor
mull
fcmovnbe
in
in
cmp
cmc
adc
inc
mov
repnz
push
inc
dec
pop
into
into
mov
or
je
les
adc
imul
xlat
fiadds
cmp
and
push
adc
and
xor
push
popf
shlb
iret
sub
out
imul
out
inc
cmc
out
jae
je
xchg
push
dec
dec
bound
fwait
popa
movsl
and
fsubr
xchg
imul
bound
cmp
pop
rol
test
adc
and
aas
jb
jno
stc
sbb
cmc
popa
hlt
mov
pop
pop
ds
jae
push
stos
add
int
fisubs
popa
inc
xlat
and
in
sub
pop
outsb
push
jb
lods
mov
insb
jge
or
and
cli
lcall
pop
inc
imul
push
pop
in
rclb
loop
jge
shll
mov
movsl
adc
sub
aas
sbb
jae
xor
add
inc
or
leave
addr16
jo
ret
fimull
adc
insb
inc
mov
jbe
ljmp
testb
jp
testb
cld
or
gs
scas
adc
cmc
rorl
call
das
pusha
pop
aad
outsb
pop
pop
andl
push
and
fwait
in
rcrl
add
inc
stos
clc
lods
push
leave
and
mov
in
pop
call
xor
fwait
push
je
inc
push
lds
jmp
leave
leave
sarl
cld
lock
push
dec
ficomps
arpl
gs
lock
inc
pop
leave
hlt
jecxz
mov
pop
popf
cmp
aas
bound
adc
out
xor
or
add
pop
cmpsl
popa
fidivrs
xchg
shll
and
pop
cmc
fsubrl
pop
bound
pop
popa
cmp
dec
add
insl
or
inc
sub
sub
inc
and
cltd
loop
sbb
jno
push
jecxz
pop
arpl
and
scas
lds
rcr
or
jnp
inc
adc
or
popa
into
outsl
clc
dec
cltd
repnz
icebp
sbb
fidivs
shll
add
add
fnstcw
sbb
xchg
insb
mov
imul
sbb
mov
mov
movl
movsl
insb
mov
iret
or
pusha
les
pushf
pop
adc
call
dec
fwait
call
or
inc
outsb
or
pop
insb
test
int
pop
push
push
and
stos
dec
shrb
in
add
push
dec
fimuls
cmp
xor
pop
xor
mov
lock
lret
mov
dec
push
dec
inc
inc
pop
rcrl
fsts
dec
mov
lock
cmp
push
sub
fistl
jecxz
imul
outsb
pop
imul
push
hlt
sub
flds
popa
mov
xor
arpl
or
out
adc
pop
mov
scas
pop
int
fdivl
test
aas
cld
lds
imul
dec
insb
xor
in
lds
push
sbb
or
fs
adc
cli
mov
sbb
out
aas
or
jno
in
enter
add
cld
imul
dec
adc
dec
popa
inc
dec
inc
shll
fwait
and
loopne
loopne
gs
iret
dec
fmul
repnz
inc
xchg
jno
imul
gs
xlat
push
roll
inc
and
push
jb
rolb
in
or
mov
popf
dec
dec
jge
inc
pop
pop
mov
cld
arpl
in
and
jae
aad
aas
mov
pop
ror
aam
jno
pop
push
out
inc
jae
sbb
dec
popa
repz
inc
stc
inc
int
fwait
call
inc
in
imulb
cmc
jg
shl
leave
sbb
dec
ljmp
insl
ret
jge
aaa
cmc
test
faddl
and
test
push
add
in
add
cmp
dec
in
repnz
leave
rorl
push
shll
pop
push
add
lds
jge
cmc
mov
loopne
mov
mov
jae
leave
push
bound
icebp
paddq
int3
out
ret
mov
inc
xor
sub
or
insb
shl
outsb
mov
cs
or
in
iret
sbb
pop
push
int
mov
cmc
sub
test
pop
or
xor
loopne
pop
imul
pusha
stos
ret
sub
sbb
sbb
mov
movsl
aad
insb
popa
pop
lret
leave
mov
add
shrl
jo
sub
xor
push
sahf
fldcw
shr
xor
and
insl
push
lock
dec
je
mov
lahf
lods
pop
addr16
cmpsl
out
stos
dec
lds
sbb
mov
dec
addb
mov
push
shll
pop
popa
insb
cltd
pop
xchg
push
inc
int
leave
or
test
arpl
repnz
and
scas
aaa
mov
mov
dec
push
imul
dec
inc
cmpsl
sub
and
repz
addl
insl
pop
imul
in
add
cli
mov
mov
mov
mov
repnz
adc
mov
imul
add
inc
sub
sub
xchg
lret
aam
outsl
dec
add
dec
cmc
repnz
ljmp
sbb
lea
shll
icebp
in
sbb
mov
or
mov
insl
pop
fldt
cmc
imul
loopne
les
insb
leave
push
push
scas
mov
pusha
pop
shll
add
insl
mov
dec
fdiv
mov
dec
pop
push
cld
jmp
or
sbb
xorl
mov
mov
je
imul
push
jb
push
xor
inc
imul
dec
inc
pop
fdiv
pusha
mov
add
or
aaa
mov
jl
out
inc
jg
mov
ret
xor
push
outsl
dec
xor
sbb
sub
sbb
pusha
ljmp
in
dec
sbb
bound
arpl
insb
mov
push
sub
mov
push
xor
mov
and
call
cmp
inc
pop
test
stos
sbb
lret
pop
jb
aaa
and
mov
add
dec
pop
insb
outsl
push
mov
lods
xor
daa
popf
cmp
or
aaa
and
mov
mov
dec
pop
cmpl
dec
or
push
push
jno
jo
inc
mov
aas
sbb
mov
jmp
pop
add
add
imul
adc
mov
out
xor
mov
inc
mov
movsl
mov
pop
mov
outsl
push
ljmp
leave
sub
mov
testb
imul
pop
mov
xor
and
scas
cmc
daa
jno
scas
mov
and
pop
repnz
mov
pusha
pop
mov
movsl
fsts
jnp
inc
jae
insb
inc
aas
sbb
daa
fs
cvtps2pd
sub
daa
gs
jge
cld
ja
fisttpl
push
repnz
mov
or
and
arpl
fsubrl
pop
lock
insb
add
pop
out
xor
arpl
push
push
lahf
mov
int
cmp
inc
arpl
in
gs
cmpsl
jmp
xchg
jg
addr16
gs
je
cmp
jb
clc
mov
arpl
cmpl
call
pop
addr16
mov
jo
je
in
out
ret
mov
pop
pop
int
popa
mov
mov
mov
mov
pop
ja
out
bound
xor
lret
mov
scas
xchg
iret
stos
ljmp
test
dec
jmp
jae
arpl
fwait
pop
cmpb
jae
imul
inc
xacquire
xchg
dec
daa
cld
push
bound
push
insb
iret
push
jecxz
and
arpl
and
adc
pusha
xchg
gs
arpl
sbb
ret
and
int3
or
xchg
push
xor
imul
xchg
sub
pop
aam
xor
dec
bound
xor
lods
cmc
inc
cmp
gs
lahf
or
sbb
mov
lock
add
pop
inc
fstpl
arpl
pop
inc
pop
pusha
add
rcll
dec
pop
dec
call
arpl
in
sbb
add
movsl
xor
and
fimuls
add
mulb
dec
inc
push
xchg
dec
lods
cmc
shl
insb
xchg
jne
xchg
arpl
pop
jae
add
sub
repnz
xor
dec
mov
arpl
xor
mov
inc
and
stos
mov
mov
lods
inc
jb
pop
mov
xor
cmpsb
shll
in
jne
dec
leave
and
popf
adc
addr16
push
stos
insb
sub
jmp
dec
fldt
xchg
inc
in
pop
inc
mov
or
pop
dec
xchg
jecxz
jo
insb
in
pusha
dec
mov
lock
loopne
aas
insl
pop
movsb
cli
ds
inc
leave
shl
sar
cmp
arpl
arpl
cmpsl
mov
rcrl
insl
sbb
cmc
movsl
sub
sub
inc
xor
xor
lahf
xor
test
push
hlt
push
xchg
data16
xchg
lods
mov
mov
and
xlat
mov
bound
jns
mov
push
pop
dec
pop
mov
addr16
loopne
pop
mov
push
ljmp
inc
insb
cmpsl
ljmp
push
iret
add
push
mov
stos
outsb
dec
inc
dec
imul
aas
imul
pop
stos
int3
xor
push
sbb
mov
mov
sub
in
je
iret
jg
insb
mov
lds
or
mov
pop
pop
out
push
and
das
inc
jno
inc
fsubrs
add
sbb
push
in
or
fldcw
mov
test
in
mov
push
cld
xlat
jb
mov
mov
call
outsl
push
jno
dec
out
push
and
rorb
shr
loopne
mov
and
or
insl
insb
bound
xchg
insb
pop
sahf
xchg
mov
mov
loopne
mov
xchg
rorl
inc
add
mov
pop
mov
arpl
push
iret
sbb
imul
jecxz
aad
dec
shl
pop
cld
cmp
xchg
loope
jno
sub
dec
inc
insb
rclb
lds
xor
mov
dec
jae
shlb
or
mov
shll
pop
and
xchg
shlb
imul
int
in
cltd
xchg
mov
push
mov
repz
daa
cld
gs
or
adc
pusha
xor
clc
popf
fistl
arpl
movsl
dec
push
imul
xor
mov
mov
stos
jg
popf
cmc
pushf
mov
add
lods
xchg
fwait
in
add
out
popf
pop
fsubrs
xor
jno
popa
repz
inc
sub
insl
dec
jae
or
mov
mov
roll
aas
daa
aad
jno
lock
mov
addr16
pop
in
addl
cmc
insb
or
push
loopne
iret
imulb
fldenv
adc
pop
push
test
push
bound
dec
push
xor
scas
mov
in
insl
aad
mov
xchg
insb
cltd
cmc
jmp
fs
outsb
xor
lea
xchg
lods
in
adc
mov
movsl
popf
mov
pusha
dec
lret
sbb
jge
push
sbb
mov
imul
rorb
jno
shrl
mov
xor
iret
sub
aas
data16
mov
popl
cmp
and
fsubrp
xchg
jge
lds
fcoml
fsubr
shrl
cmp
xchg
sub
divb
inc
imul
rorb
out
lret
dec
xor
rcrl
aas
hlt
jo
jb
shl
xor
in
loope
sbb
or
push
imul
jno
or
mov
clc
sub
sub
lea
gs
ljmp
arpl
and
xchg
int
dec
stos
jne
or
cmp
inc
orl
leave
rcll
sbb
sbb
pop
insb
ficompl
pop
aad
shr
cmp
pop
mov
push
fs
outsl
scas
sub
sbb
aas
stos
inc
inc
je
loopne
insb
in
jmp
mov
dec
xchg
push
cmpsl
xor
out
sbb
clc
movl
pop
dec
push
lcall
push
imul
pop
pop
jns
out
shrb
push
insl
mov
push
and
mov
mov
outsl
addr16
sub
adc
int3
mov
dec
aas
outsl
jl
je
int
iret
test
popa
enter
ficomps
jg
aas
pop
imul
lahf
push
push
insl
push
cmpl
push
fs
xchg
arpl
int3
aam
int3
inc
ret
ret
adc
pop
and
test
insb
push
fs
push
mov
jno
pop
outsl
insl
cs
outsl
sub
mov
loope
mov
ds
sub
outsl
bound
xchg
add
push
pop
sbb
sub
aad
arpl
mov
sub
or
mov
and
push
clc
pop
xor
jge
in
jno,pt
or
sbb
pop
pop
ljmp
lods
push
das
data16
addr16
pop
movsl
out
mov
push
rcr
lock
mov
or
push
imul
cmp
mov
inc
inc
pop
push
jge
mov
inc
pop
push
arpl
ja
push
ficoms
dec
push
ret
inc
daa
imul
imul
xor
push
pop
lea
add
outsl
aaa
xor
lock
bound
sbb
push
outsl
je
insl
jae
pop
ds
fs
jg
pop
and
in
push
imul
push
test
outsl
xchg
dec
push
push
push
ljmp
pop
mov
mov
push
sahf
insl
movsl
outsl
aaa
xor
test
iret
imul
push
fsubrl
push
xor
pop
inc
imul
arpl
mov
pop
imul
insb
inc
outsl
dec
in
pop
add
imul
and
sarl
into
imul
outsl
jno
push
dec
xor
int
outsl
push
pop
lds
cmp
push
outsl
jmp
mov
pop
gs
push
jo
loope
insl
outsl
sbb
pop
xorb
jo
test
aaa
pop
test
pop
outsl
sti
pop
sub
jl
insl
jno
push
sub
enter
outsl
dec
cld
dec
sbb
xchg
dec
aas
in
shll
imul
lret
push
add
imul
shl
out
sbb
fdivs
dec
dec
mov
pop
fstps
loope
lret
insl
push
jge
arpl
push
insb
lahf
leave
push
outsl
xorl
cmc
outsl
jae
dec
pop
lea
movsl
cmp
outsl
jno
dec
cli
scas
mov
dec
cmp
cmp
lds
je
insl
xor
pop
and
cmc
push
dec
popa
dec
pop
cwtl
iret
xor
add
ret
mov
jb
adc
inc
push
jle
pop
push
out
fsubp
aas
push
fidivrs
mov
cwtl
push
xchg
xor
jp
adc
sub
push
add
das
imul
je
xor
push
bound
scas
dec
outsl
sbb
adc
in
addr16
lret
imul
test
les
outsl
pop
lock
andw
je
pop
push
bound
sub
pop
sub
xor
adc
inc
jo
stos
dec
push
outsl
jl
enter
je
popa
lea
bound
dec
cltd
mov
push
scas
imulb
mov
jge
in
inc
insl
lods
ljmp
popa
dec
dec
pop
xchg
inc
sub
xlat
popa
dec
pop
loopne
bt
dec
imul
pop
popf
bound
das
mov
test
xor
xorl
mov
lock
outsl
pop
shl
jl
addl
jge
shrl
ljmp
fcmovu
or
pusha
fwait
or
pop
arpl
ljmp
movsl
add
cmp
push
inc
sub
xlat
dec
push
cmp
shlb
movsl
outsl
jmp
pop
push
ja
iret
adc
pop
addr16
dec
ja
ds
imul
ret
ret
or
push
roll
jmpw
dec
lret
shlb
call
lcall
or
or
call
xlat
dec
mov
pop
arpl
addr16
imul
cmp
push
gs
in
sub
mov
inc
rcrb
cmp
test
xlat
ds
cld
int3
xor
xchg
call
mov
add
insb
data16
xchg
sub
or
inc
rorl
dec
sub
or
popa
call
sub
test
pop
insl
test
jno
mov
pop
test
shlb
inc
aaa
out
pusha
dec
mov
cli
push
mov
in
mov
adc
gs
jb
push
push
push
xchg
adc
xchg
pop
xor
pop
popa
fdivl
xor
sub
mov
icebp
popa
lock
dec
test
sub
xlat
and
jne
or
sub
push
gs
outsb
push
or
fsub
and
sub
push
pop
rol
ljmp
cld
test
mov
dec
dec
rcrl
inc
rorl
xchg
pusha
sbb
test
outsl
shll
or
gs
xchg
push
sbb
pop
arpl
and
dec
xor
aas
imul
jae
and
stos
mov
insb
addr16
insb
insl
pop
lahf
inc
or
lods
insl
jg
dec
cmp
mov
pop
fmul
jecxz
clc
in
add
ss
adc
int3
out
inc
icebp
pop
xor
popa
jae
loop
stos
push
inc
loopne
sub
adc
int3
dec
adc
and
lahf
push
inc
adcl
test
inc
mov
rorb
and
cld
jns
cmp
insb
xor
or
mov
dec
adc
mov
add
popa
pop
jno
xchg
sbb
pop
fisubrl
scas
insb
xchg
push
mov
push
shll
insb
pusha
push
xor
out
ds
insl
mov
int3
inc
add
inc
shr
pop
popa
push
outsl
inc
jmp
std
insb
add
add
cld
add
or
push
or
pop
push
add
or
add
sbb
insb
cli
imul
outsb
jno
sbb
add
inc
outsb
jne
rol
pop
cmpsb
lahf
movsl
cs
mov
mov
scas
ret
inc
push
xchg
inc
sbb
jns
imul
mov
ret
dec
dec
sbb
les
mov
sahf
sub
xchg
imul
inc
push
or
rorl
inc
test
scas
leave
mov
hlt
lock
rol
imul
mov
or
imul
pop
cmp
xor
dec
push
push
leave
pop
out
inc
movsb
sbb
lds
cld
nop
insb
mov
mov
das
push
lock
and
insb
mov
mov
push
aad
fsub
in
in
arpl
push
cld
sub
adc
sub
sub
push
xor
in
insl
pop
insl
in
jns
fs
cmpl
xchg
in
push
cltd
xor
lods
push
mov
mov
xor
fsubr
in
in
push
clc
sub
sbb
inc
arpl
pop
sub
jge
mov
xchg
xor
rcll
sub
adc
and
in
inc
arpl
popa
sub
je
insl
inc
xor
xor
sub
das
xor
sub
push
sub
daa
xor
and
push
and
pop
xor
sbb
cmpsl
pop
sbb
lret
stos
add
add
pop
dec
pushl
sti
test
in
add
push
add
pushl
cld
std
in
cli
pop
adc
fs
jmp
push
push
jl
lods
mov
addl
in
imul
in
jmp
push
push
jl
lods
mov
orl
lods
insb
inc
pop
inc
xor
mov
or
dec
data16
das
inc
inc
imul
clc
inc
out
cmp
mov
clc
ds
aas
addl
inc
lods
inc
jl
push
push
inc
out
mov
dec
ret
jle
lret
cmp
mov
rclb
mov
jecxz
popa
out
adc
and
std
inc
addr16
cmp
in
lods
ds
aas
add
inc
pop
inc
out
inc
or
repnz
arpl
arpl
arpl
iret
xchg
ljmp
lods
sbb
cmp
pop
and
and
in
lods
and
cmp
pop
sub
sub
in
lods
sub
cmp
pop
xor
jp
xor
xor
cmpsl
xchg
pop
int3
cmp
and
or
sub
ljmp
xchg
push
add
ds
clc
enter
cmp
sub
pop
inc
mov
pop
dec
inc
outsb
fwait
std
inc
pop
or
adc
mov
int3
dec
outsb
mov
lahf
mov
dec
lock
cmp
adc
adc
mov
test
fiaddl
jae
imul
xorl
imul
and
add
rorl
xor
rcrb
ret
into
sbb
js
add
cltd
sub
and
jp
in
jnp
inc
push
jl
push
in
push
insl
xor
jns
jg
xchg
sub
xorl
arpl
in
push
test
add
xchg
jp
mov
mov
mov
in
mov
push
mov
insl
xor
in
popf
arpl
in
push
xchg
xor
xchg
in
loopne
xchg
push
or
xchg
xor
in
popa
arpl
cltd
sub
leave
xor
clc
push
popf
sub
and
lahf
dec
in
mov
xor
insl
mov
xor
movsl
push
shrl
xor
test
add
sub
stos
xor
jmp
jle
lods
sub
movsl
xor
fsts
sub
jno
push
mov
hlt
push
mov
add
adc
push
and
push
mov
popa
arpl
in
cmpl
mov
hlt
push
mov
push
sub
ret
push
ret
xor
mov
cmp
mov
mov
shlb
cmp
xchg
mov
arpl
movsl
sarl
mov
outsl
dec
mov
mov
dec
dec
mov
stos
pop
add
and
scas
jge
jnp
sbb
xchg
pop
mov
test
cmp
je
mov
jb
orb
xor
es
xchg
mov
mov
repnz
sub
pop
mov
sub
xor
jp
mov
rorl
loopne
jae
jp
mov
adc
scas
cli
imull
hlt
fs
lahf
mov
shrb
and
push
aaa
jg
movsl
jns
mov
sbb
push
adc
or
jne
lods
lea
push
ljmp
negb
push
je
popa
insb
fwait
jno
dec
popa
lods
and
imul
ljmp
fdivr
dec
shlb
rorb
in
push
rorl
pop
int
jnp
test
in
pop
cmpsb
xchg
movsb
cmp
push
mov
jg
popa
dec
xor
sub
movsl
cmp
jg
nop
mov
pop
dec
push
dec
and
fwait
leave
and
cli
fwait
and
mov
and
dec
clc
lock
lock
mov
test
push
popa
push
inc
repnz
imul
lods
pop
sub
test
aaa
cmpb
mov
loopne
shr
xorl
xor
stc
hlt
movsb
popa
xchg
pop
dec
and
rcl
dec
adc
in
xchg
dec
mov
ss
and
test
fsubrl
cmpsl
adc
les
xor
aaa
addb
inc
in
or
and
xor
pop
pop
or
jmp
imul
arpl
mov
push
popa
call
test
aam
pop
push
clc
icebp
scas
push
cmp
shrb
gs
pop
and
push
aas
push
mov
loopne
aaa
inc
jae
dec
adc
imul
fldlg2
lock
mov
dec
int3
arpl
sahf
inc
adc
jp
aam
outsl
mov
sbb
dec
and
lds
scas
push
adc
outsb
int
pop
shlb
scas
xchg
stos
jp
push
popa
aam
imul
push
movsl
in
loopne
loopne
pop
mov
mov
add
mov
jge
inc
mov
aaa
dec
xor
leave
inc
add
pop
lahf
popf
mov
imul
movsl
and
push
pop
gs
insl
xchg
outsl
push
xchg
add
imul
lods
dec
dec
sbb
push
inc
aas
cmp
push
cld
lods
ret
push
stos
fdivrl
sbb
out
inc
and
scas
pop
nop
xchg
mov
daa
movsl
mov
test
mov
insl
sub
push
gs
nop
dec
adc
nop
test
cmp
imul
and
or
and
mov
dec
jnp
mov
in
lock
pop
dec
imul
fmull
add
loopne
push
push
inc
outsb
mov
mov
inc
and
jns
pop
sub
push
lahf
lret
mov
or
or
or
in
cmp
dec
lods
lret
adc
xchg
push
je
invd
xchg
incb
cld
jmp
sub
mov
int3
jae
js
pop
mov
and
in
dec
push
adc
mov
add
insb
iret
cmpsl
popa
scas
insl
mov
lea
mov
jp
popa
xchg
xor
add
lods
add
mov
imul
and
outsb
mov
pusha
mov
out
js
pop
vmwrite
mov
repnz
and
cmpsb
pop
push
jb
xchg
mov
cmp
imul
test
push
mov
push
adc
xor
xor
sbb
sbb
push
push
sub
adc
jae
in
add
inc
insb
clc
push
add
sbb
xor
or
mov
mov
stos
xorb
xor
jge
mov
das
push
icebp
orl
dec
lods
shrl
dec
mov
or
xor
xor
adc
push
push
dec
pop
imul
bound
cmp
inc
and
sub
jae
int
mov
jae
shrl
inc
repnz
pop
in
insl
push
adc
insl
arpl
add
je
out
imul
push
xchg
ljmp
pop
imul
lods
xor
rcrw
insl
inc
push
vpunpckhqdq
lret
gs
sbb
gs
dec
in
jbe
mov
jmp
inc
int
cld
bound
mov
in
xor
push
hlt
aad
add
push
sub
jmp
and
lods
inc
inc
fistl
mov
mov
test
mov
mov
mov
rclb
push
gs
cmpsb
adc
dec
fsubr
jge
mov
inc
cs
xchg
lahf
sub
insb
cmp
ret
popf
xor
aam
sub
add
gs
movsb
xchg
lock
gs
bound
add
scas
ret
cltd
insb
adc
adc
gs
xor
hlt
insl
gs
xor
push
add
adc
push
data16
sbb
lods
in
test
push
repnz
inc
inc
dec
outsl
dec
stos
stc
stos
or
sub
sbb
sti
dec
in
or
aas
or
je
insl
pop
popa
dec
add
andl
push
mov
xchg
mov
mov
mov
arpl
aaa
xor
call
hlt
add
in
test
in
pop
pop
cld
call
imul
inc
lods
inc
pop
mov
pop
or
insb
and
in
push
popa
xor
and
and
stos
insb
in
in
lods
lock
push
and
test
xor
inc
test
cld
lgs
xor
pop
sub
dec
call
insb
lock
add
insb
jge
dec
push
pusha
pop
test
insb
mov
orb
pop
shl
loopne
mov
fucomp
pop
cld
in
xor
pop
dec
mov
test
imul
xchg
pop
adc
rcl
inc
pop
loopne
sbb
dec
xor
push
imul
pop
mov
cld
xor
call
insb
imul
cmpl
push
cld
lods
ret
insb
sbb
sub
xor
and
adc
insl
dec
and
mov
stos
popa
int
insl
insb
movsl
cmp
mov
insb
xor
add
cmp
clc
xor
syscall
pop
adc
jl
popa
xor
pop
psrlw
dec
mov
fs
insb
call
cmp
pop
dec
insb
push
test
inc
mov
mov
xor
fs
in
pop
push
popf
inc
push
popa
in
lea
in
data16
fistpll
sub
xchg
mov
and
sbb
lods
pop
imul
fnstsw
inc
paddsb
popa
stos
jae
jne
jne
nop
and
gs
in
lea
fisttpll
int
popa
scas
add
fldl
dec
popa
ljmp
insb
mov
rclb
xor
fldln2
or
sub
xchg
mov
xchg
insb
cld
fisubs
or
add
mov
insl
subps
insb
xor
mov
popa
punpcklbw
add
insl
xor
test
cmc
pop
and
jns
dec
jno
addl
mov
imul
stos
mov
fnstsw
nop
cmp
cmp
cmp
xchg
je
popa
inc
fcompl
jns
fiadds
pop
mov
insb
int
mov
pop
lock
cmp
pop
adc
jl
das
in
adc
insb
and
pop
inc
mov
cltd
dec
mov
xor
dec
insb
sbb
in
xor
push
jg
shll
jno
cmp
pop
call
jns
ret
pop
dec
insb
rorl
popa
inc
fstps
insb
add
adc
in
jge
pop
lds
pop
adc
insb
sub
pop
cmp
and
jge
dec
ret
insb
xchg
inc
les
cmp
pop
or
adc
insb
jns
popa
gs
test
insb
loopne
mov
addl
cmp
cmp
popa
insb
mov
adc
push
pop
in
push
mov
jns
out
call
inc
imul
push
inc
lods
fs
imul
fs
pop
lea
int3
je
call
in
popa
lds
cld
xchg
cmp
call
push
imul
mov
xor
imul
pushf
and
pop
jae
push
popf
push
shrl
movsb
int
push
in
popa
ret
clc
push
xchg
pop
sarl
mov
fldln2
add
in
call
push
push
add
in
mov
pop
popa
push
xchg
push
mov
cld
and
mov
sub
add
pop
popa
sbb
pop
push
test
pop
cmp
xchg
push
mov
loope
in
popa
ret
cld
push
inc
clc
push
in
popa
pop
into
cltd
pop
lds
fs
mov
cmp
hlt
pop
in
ljmp
arpl
push
add
sub
inc
xchg
loopne
xchg
in
pop
andl
clc
mov
arpl
test
add
jmp
push
add
enter
sub
je
mov
les
repz
rclb
insb
mov
fwait
and
je
and
std
or
daa
and
popa
sahf
subb
gs
mov
movsl
pop
insb
xchg
mov
mov
jp
lea
pop
pop
sarb
movsl
mov
rorb
cmpsl
ljmp
mov
mov
pop
icebp
inc
push
pop
sbbl
xorl
sub
rcll
stos
rcrl
and
mov
outsl
mov
js
xor
fs
mov
jnp
push
inc
push
or
inc
inc
insb
lods
inc
sbb
imul
adc
xor
movsb
aas
in
cmp
or
mov
pop
push
xchg
jle
cmp
pop
dec
push
xor
push
and
shll
xor
insb
lock
das
movsl
mov
aas
jmp
xor
outsb
test
lahf
std
mov
xorb
cmpsl
outsl
ret
int
stos
cmp
inc
sahf
int3
lcall
mov
xchg
mov
scas
shl
mov
lods
mov
cs
test
push
xchg
test
jge
movsb
mov
adc
test
imul
insb
or
mov
scas
adc
mov
jle
lret
sarb
rcrl
dec
lahf
mov
inc
push
inc
mov
mov
imul
roll
mov
in
inc
and
mov
mov
inc
adc
inc
aad
mov
inc
lock
call
add
sub
movsb
aaa
sub
sarl
cmovl
dec
push
inc
aas
dec
mov
in
xor
in
lods
leave
jno
lods
cmc
inc
xchg
mov
fistl
punpckhwd
fisubs
sub
xor
sarl
scas
lar
push
arpl
cmpsl
xchg
ret
pushf
sahf
adc
mov
ret
mov
mov
and
imul
adc
adc
inc
hlt
adc
dec
jno
popa
pop
push
adc
inc
sub
mov
imul
rolb
cmovnp
inc
sub
and
sub
dec
in
mov
dec
xchg
inc
push
inc
outsb
lds
shrl
mov
xchg
lret
push
mov
stos
jnp
jns
add
lods
jnp
push
addr16
push
push
dec
mov
scas
mov
gs
movsl
inc
popa
xor
xchg
iret
inc
push
outsl
push
test
stos
push
mov
xchg
in
lret
push
popa
xor
sti
adc
xor
pop
lods
mov
lret
pop
ror
mov
and
cs
das
test
mov
sub
out
mov
movsl
xlat
fldcw
test
fbld
loop
fiadds
inc
loope
adc
rclb
pop
inc
mov
and
movsl
jge
in
jle
jae
bound
ret
mov
movsb
ljmp
vaddsubps
ret
int3
cli
and
dec
push
stos
jl
in
lret
rcl
pop
or
push
test
test
mov
cltd
dec
push
call
pop
sahf
mov
out
jb
push
or
das
push
xor
pop
inc
jno
lds
imul
xor
adc
xor
xchg
insl
test
into
cmp
sbb
and
xchg
sbb
and
rcll
dec
jp
push
popa
inc
adc
jo
or
mov
xor
out
mov
push
or
int
addr16
ret
rolb
gs
loop
mov
mov
fucom
inc
cmp
gs
loopne
in
in
in
xchg
rcrb
pop
mov
rcrl
cmp
xchg
cmpsl
sub
jg
insl
dec
in
push
lds
psllw
push
lods
inc
shll
jae
arpl
pop
popa
inc
mov
mov
in
and
repnz
pop
inc
sbb
dec
xor
and
mov
movsl
mov
push
push
lock
xchg
shrl
add
hlt
and
dec
lds
insl
aad
mov
sub
gs
mov
and
cmp
inc
add
adc
aas
aas
daa
lods
fwait
cmp
mov
jnp
jl
add
aas
xorl
mov
inc
pop
xor
pop
jmp
pop
push
jne
mov
sbbb
push
bound
push
dec
mov
mov
mov
enter
in
rorl
sahf
mov
sub
fistl
pop
xor
jno
mov
jge
pop
or
add
mov
jne
mov
mov
xchg
faddl
gs
mov
sub
rcl
xor
adc
dec
cmp
xchg
sbb
lds
pop
sahf
push
movsl
sahf
sub
mov
cmp
adc
les
repz
cltd
cli
pop
pop
scas
mov
aad
lock
cmpsl
lret
into
rol
scas
mov
mov
dec
add
test
aas
inc
jae
mov
push
mov
ret
mov
dec
xor
gs
lret
mov
movsl
mov
and
push
push
xor
push
std
sub
fwait
rclb
mov
cmpsb
sbb
js
push
aad
das
call
mov
adc
push
mov
loope
cmp
push
adc
popa
lock
add
stos
mov
cli
aam
sbb
push
push
fsubrs
popf
xor
or
loop
lea
dec
xor
test
ret
bound
xchg
jno
mov
int3
ljmp
mov
xchg
imul
xor
in
pop
and
daa
test
sub
add
movsl
insb
mov
sbb
cmp
lea
add
movsl
inc
and
dec
loop
cmp
shll
pop
push
imul
iret
xor
xor
pop
inc
in
out
mov
pushf
orl
mov
ljmp
sbb
pusha
sub
rclb
int3
dec
inc
movsl
outsl
sub
insl
push
aad
fwait
aas
dec
push
popa
xchg
aaa
cltd
xor
loopne
ja
xchg
xor
insb
cmp
xor
cs
xor
add
int
vpxor
add
arpl
and
mov
lods
test
inc
sub
mov
jno
push
rcll
inc
jae
lahf
imul
sahf
cmpb
iret
jae
sub
jl
scas
sub
popf
sub
lods
mov
pop
inc
gs
out
inc
jo
sbb
cmp
push
jns
sbb
lods
push
mov
lds
dec
dec
inc
and
out
dec
pop
inc
dec
push
sub
mov
add
test
popa
and
movsl
aam
lods
int
mov
push
cmpsl
arpl
adc
pop
add
pop
mov
push
fcmovbe
and
imul
scas
movsl
dec
jge
mov
push
mov
cmp
fwait
mov
push
cmp
loope
mov
lea
push
loope
jecxz
xchg
pop
xor
mov
insb
cmpsb
subl
inc
lret
xor
scas
fxch
stos
adc
into
cld
add
adc
cmp
pop
add
mov
pop
sub
sub
mov
loop
and
pop
out
lock
jns
mov
mov
cmc
scas
and
mov
inc
out
sub
mov
ret
shr
mov
roll
cmp
mov
stos
rol
mov
mov
aad
ja
popf
cwtl
sub
mov
inc
mov
mov
cltd
or
int
xor
ja
in
imul
inc
or
add
jmp
or
loop
or
xor
test
adc
add
push
std
ljmp
push
xor
add
cmp
add
xor
jo
lea
iret
add
and
mov
stos
imul
xchg
inc
sub
and
out
xor
cmpsl
cld
push
mov
lcall
xor
and
or
mov
test
mov
mov
mov
aaa
out
out
call
xor
loop
pusha
clc
repnz
mov
xor
mov
lods
xor
sarb
xchg
insb
arpl
arpl
insl
mov
push
pop
in
push
sub
inc
mov
and
add
das
push
mov
cmp
and
mov
mov
sahf
cwtl
cmc
xchg
stos
ret
mov
jecxz
faddp
stos
test
aas
inc
mov
push
movsb
je
lret
xorl
lahf
scas
add
mov
repnz
imul
sub
daa
push
test
pop
aas
push
stc
inc
insb
insb
inc
jl
or
jne
or
jns
dec
inc
mov
lahf
les
cli
push
into
or
inc
dec
ljmp
adc
sub
xchg
and
mov
int3
ja
test
div
xor
cmp
push
fistpl
xchg
shll
fwait
mov
inc
or
push
dec
sbb
or
pop
inc
sub
out
cmp
dec
lods
insl
lds
insb
add
enter
mov
pusha
or
mov
xor
cmp
fs
or
add
call
cltd
or
gs
insb
push
xchg
popa
jae
ret
dec
outsl
sbb
sbb
sub
or
or
test
jno
pop
es
scas
dec
movsb
and
dec
fimuls
outsl
add
pop
das
shl
iret
sbb
in
aad
out
xor
dec
xor
sbb
jnp
lock
sbb
sbb
push
enter
xor
push
mov
sub
scas
and
filds
push
xor
add
push
add
leave
inc
movsb
cmp
pop
pop
lock
mov
xchg
call
cs
mov
mov
movsl
lea
rcl
dec
les
push
jns
and
mov
das
sub
sub
sub
mul
adc
cld
movsl
sbb
sub
icebp
nop
gs
push
mov
and
aad
aaa
loop
lahf
mov
cmc
daa
je
mov
lods
cmpsb
xchg
divb
ffreep
enter
xcrypt-cbc
cmpsl
xchg
sub
mov
pop
lds
add
shll
dec
fnstenv
sbb
shll
bound
xchg
xchg
leave
or
xchg
sbb
mov
jle
dec
or
adc
push
inc
or
mov
call
out
movsb
cmp
scas
rcl
mov
imul
pop
cltd
mov
jg
ljmp
gs
cmpsl
popf
rol
sub
aaa
adc
mov
je
xchg
not
pop
push
xor
mov
into
mov
stc
lds
mov
int
inc
xchg
pop
pusha
sbb
loop
popa
xchg
inc
mov
add
jg
es
in
fsubrl
gs
jns
sub
xor
mov
xor
adc
jns
scas
xor
pop
push
inc
pop
shr
movsb
mov
int3
sbb
push
stos
lahf
xchg
aad
jns
mov
clc
adc
xlat
call
sarl
imul
lahf
lret
xor
lods
cwtl
loop
fwait
popa
rol
repnz
mov
dec
inc
add
std
inc
cmp
xor
addr16
sub
xchg
clc
lock
mov
cwtl
xchg
sbb
arpl
push
iret
xor
jno
gs
popa
mov
jg
cld
and
mov
sahf
int
xor
imulb
cld
adc
mov
mov
js
loopne
pop
push
gs
lret
dec
in
insb
push
dec
inc
loop
imul
mov
pop
jp
adc
repnz
and
out
or
or
insb
repnz
cli
stos
ja
push
sarb
inc
inc
popa
xchg
rclb
push
add
xchg
dec
test
jecxz
xor
mov
test
jmp
xchg
int
movsl
lock
sbb
inc
fsubrp
out
popf
pop
xchg
andb
dec
cmp
pop
lds
hlt
mov
push
pusha
stos
mov
adc
adc
cld
push
adc
and
loope
js
mov
xor
mov
das
push
movsl
mov
mov
arpl
lds
sub
xchg
std
xor
push
shrl
xor
inc
int
sub
ret
pusha
push
das
adc
adc
pop
or
rol
xor
ljmp
call
sub
or
xor
add
aas
fnsave
sub
mov
or
das
add
fldt
fbld
lds
test
ret
data16
or
insb
aas
shlb
inc
cmpsb
xchg
daa
and
negb
loopne
enter
jecxz
mov
jae
pop
movsl
inc
inc
gs
gs
shll
mov
mov
or
xlat
int
jnp
in
out
inc
insl
adc
sub
callw
cmp
dec
cltd
dec
mov
dec
jge
inc
aaa
test
addr16
das
cmp
and
insb
inc
dec
loopne
mov
es
add
ret
les
out
cli
dec
lock
adcb
in
movsl
mov
scas
mov
push
dec
add
mov
lods
and
xor
mov
cmp
dec
lahf
cmpsl
push
insb
cmpsb
test
popa
mov
mov
mov
push
sbbl
sbb
iret
mov
pop
sub
iret
aam
mov
test
aam
push
mov
xor
pop
push
mov
xchg
sub
or
add
mov
das
jae
sub
in
inc
dec
push
test
jns
mov
arpl
add
or
add
cmpsl
sub
push
cmp
std
mov
insl
mov
lahf
mov
mov
daa
push
das
sub
inc
aam
js
or
push
add
insl
dec
jns
mov
cmp
daa
inc
jnp
jg
cmp
cmp
subl
shlb
shlb
xor
sbb
mov
and
jno
rcll
adc
popa
add
cwtl
cltd
addr16
and
mov
clc
shrl
std
not
in
stos
jl
leave
jae
mov
insb
leave
nop
xchg
inc
or
mov
sbb
xor
inc
insb
and
and
sbb
xchg
popf
mov
rolb
dec
jecxz
lock
add
fnstenv
arpl
mov
xor
inc
ror
out
test
pop
xor
adc
mov
stos
add
ret
out
sub
mov
add
dec
arpl
xchg
mov
mov
das
ljmp
jns
int
shl
pop
or
fwait
or
mov
dec
daa
insl
out
fcoml
fldl
test
rclb
xor
or
push
and
xchg
hlt
mov
arpl
insl
jmp
pushf
mov
mov
pop
sub
into
enter
sbb
mov
in
sub
out
push
push
cmp
sbb
popa
xor
aaa
xor
and
sub
roll
les
loop
xor
dec
clc
lret
addr16
arpl
mov
shll
xor
sub
add
sub
inc
inc
imul
cltd
stos
add
daa
mov
dec
mov
sub
pop
filds
dec
mov
or
jecxz
clc
add
or
adc
dec
test
add
jns
lods
and
xor
add
xchg
in
leave
js
idivl
sbb
imul
leave
push
and
jle
fwait
enter
adc
cwtl
jmp
rolb
pop
or
or
pop
call
dec
sub
movsb
or
dec
add
sub
add
sub
adc
adc
xlat
fcoms
lods
push
pop
mov
fnsave
or
lahf
popa
mov
sub
es
leave
mov
lds
imul
movsl
or
xchg
daa
popa
cs
das
xchg
xor
jg
pop
es
xor
mov
cmp
xor
bound
pop
xor
outsl
sbb
add
repnz
add
in
jge
sub
test
sbb
xor
enter
mov
mov
cwtl
jno
movsb
and
pop
add
or
push
or
sub
mov
pop
lret
dec
xor
arpl
add
lods
push
leave
and
lods
sub
push
xor
test
mov
push
loope
insl
scas
lds
loope
xor
mov
fstps
pop
in
pop
lock
mov
ficomps
aam
and
xchg
sbb
mov
inc
pusha
xor
aam
add
imul
fwait
stos
fstpl
imul
shl
pop
movnti
lock
dec
sbb
and
gs
loop
rclb
add
mov
pop
std
inc
jno
cmp
dec
add
popa
inc
out
fisttpl
inc
sbb
xor
mov
inc
add
xor
dec
mov
ret
mov
pop
out
mov
out
lods
jnp
add
movsb
adc
adc
sub
mov
add
sub
and
mov
push
test
mov
mov
inc
add
icebp
mov
mov
xor
popf
push
cmp
mov
scas
inc
jno
lahf
scas
shll
mov
lret
inc
fcmovne
pop
push
dec
lods
pop
push
pop
and
in
push
xor
xor
sarb
cmpsb
cmp
mov
pop
imul
shlb
jecxz
nop
or
sbb
shll
aas
frstor
fsubl
frstor
mov
addr16
pop
movsl
cmp
in
pop
mov
sub
cld
inc
rolb
out
pop
dec
sub
in
pop
outsl
mov
fistpll
insl
add
jl
not
mov
loope
mov
ret
out
lds
adc
xor
lods
dec
mov
sbb
inc
mov
mov
pop
mov
dec
or
xchg
sbb
jb
add
xor
insl
sbb
sub
xor
or
sbb
popa
or
inc
push
jo
adc
cwtl
inc
cltd
xor
push
xchg
xchg
mov
sub
jno
mov
subb
xchg
test
gs
shll
push
add
push
cmp
pop
dec
andb
fidivrs
add
sbb
dec
pop
inc
gs
daa
mov
iret
jge
xchg
pop
inc
push
pop
sub
xor
scas
and
sub
daa
xor
xchg
pop
mov
or
popa
dec
and
push
int
ljmp
pop
std
add
or
pushf
inc
pop
mov
addr16
int3
lret
lret
sbbl
fidivrs
lea
cmp
in
jge
leave
dec
jp
int3
inc
shlb
mov
dec
and
repz
fsts
jecxz
jmp
in
mov
sub
cmp
mov
mov
and
pop
aas
shrl
add
dec
mov
aad
std
dec
xchg
mov
dec
add
mov
shrb
add
or
inc
pop
pop
push
jae
pop
leave
xchg
and
idivb
pusha
push
lret
adc
inc
rcl
inc
loope
lods
push
dec
xchg
adc
popa
sub
fs
xor
pop
leave
in
aad
in
in
cld
bound
push
insb
adc
sbb
dec
push
push
sub
mov
imul
or
insb
test
das
and
inc
inc
xor
pop
pop
loope
pop
inc
pop
pcmpeqw
cld
int3
pop
aas
push
aas
mov
push
jge
incl
xchg
popa
sub
sub
add
add
or
xor
sbb
sub
push
insl
add
or
or
adc
push
mov
popa
sub
jge
adc
iret
push
movsb
jae
pop
push
packssdw
cmovs
inc
mov
rclb
pop
loope
in
in
push
cmp
cmp
dec
adc
adc
inc
cmp
es
dec
sub
dec
aad
and
aas
jae
and
sub
inc
sarb
shlb
mov
xor
popf
sub
test
and
fs
insb
shrl
or
push
or
adc
push
rclb
std
add
shlb
ds
push
outsl
sub
inc
and
nop
mov
les
stos
push
dec
std
jns
sub
cmpb
inc
or
aad
pop
pop
sbb
push
mov
sahf
jmp
adc
insb
inc
sbb
insb
adc
sub
gs
add
dec
xor
pop
loopne
insl
lods
inc
sub
mov
and
out
adc
gs
dec
insl
in
stos
xor
xor
pop
out
in
lods
xor
xchg
cld
add
push
add
iret
mov
insl
in
out
sub
in
lods
and
xchg
hlt
cs
push
add
inc
lods
lods
xchg
push
pop
int
call
xor
hlt
lods
insl
xchg
sbb
pop
fstl
arpl
push
and
clc
cmp
pop
popf
jecxz
in
lods
or
imul
sub
jge
in
lods
and
out
push
push
add
inc
lods
mov
push
adc
pop
shl
jae,pn
repnz
lods
xchg
xchg
loopne
xor
out
cmp
in
lods
or
imul
sub
in
lods
pop
xchg
pop
sub
mov
inc
lods
nop
aas
inc
xor
push
pmulhw
leave
xchg
outsl
add
cmp
pop
mov
jle
pop
out
push
push
fxam
adc
cltd
cmp
pop
pop
out
inc
push
mov
xchg
daa
add
jne
and
fs
lods
add
inc
add
push
in
lods
je
cmc
add
xchg
push
push
sbb
pop
lods
loop
std
pop
cmp
mov
add
cmp
pop
and
and
jae
xchg
add
pop
stos
out
adc
jo
icebp
pop
xor
mov
cs
push
cmp
fwait
orl
dec
pop
mov
jmp
jnp
or
mov
jl
pop
inc
out
scas
lods
adc
inc
adc
push
sbb
pop
pop
fsubp
in
lods
cmp
cs
push
mov
xchg
sub
jg
cs
push
pop
jl
pop
ds
cmpsl
lods
push
xchg
dec
add
cmp
pop
out
out
cs
xchg
xlat
push
push
mul
lods
xchg
jl
pop
inc
out
mov
in
lods
es
ja
jne
mov
xchg
aam
push
xchg
jl
push
lods
movsb
ja
les
notl
jl
push
lods
fnsave
pushf
cmpl
jl
push
lods
nop
ja
loope
mov
and
test
lods
enter
sbb
in
jns
out
js
lods
mov
rolb
jns
out
ret
xorb
or
in
jns
out
lcall
subl
out
fcomip
push
sahf
jl
push
lods
jle
in
jns
out
xchg
push
jl
push
lods
mov
xor
sbb
aad
push
insl
inc
bound
mov
and
jae
inc
add
sbb
jno
and
xor
lock
sbb
push
in
sbb
cmc
and
push
sbb
cld
pop
mov
dec
adc
lods
cmc
xchg
pop
dec
pop
call
mov
dec
imul
inc
pop
push
mov
icebp
cwtl
jbe
decb
scas
ss
inc
add
push
jb
outsb
in
push
push
xor
imul
mov
js
mov
jb
add
outsl
inc
dec
or
int
and
dec
jmp
cmp
fadd
divl
pusha
push
xchg
jbe
xor
lea
dec
fnstenv
pop
in
sbb
ret
sahf
es
add
lock
je
pop
sbb
push
add
add
and
jmp
gs
repz
adc
xor
vmovss
adc
inc
add
lods
xor
pop
mov
sub
push
aas
cmp
inc
sbb
push
sub
sbb
popf
or
push
subl
or
xor
lea
out
and
and
call
sub
cld
rcrb
mov
fcomi
and
icebp
or
dec
cmpsl
mov
outsb
scas
fidivs
es
xor
sbb
into
adc
fsub
ss
push
mov
sarl
fbstp
in
dec
pusha
sbb
in
or
stos
cmp
aaa
push
imul
clc
aad
testl
imul
adc
sub
push
je
jbe
push
mov
inc
test
mov
pushf
add
ret
addr16
hlt
nop
arpl
inc
mov
mov
insb
push
mov
mov
hlt
xor
push
mov
pop
insb
test
sub
sbbb
inc
mov
dec
jno
mov
in
test
sub
and
or
gs
mov
in
jae
adc
imul
xor
mov
xchg
pop
pop
jle
mov
pop
add
test
xor
sub
push
mov
jg
pop
pop
std
pop
adc
out
sbb
mov
mov
bound
mov
fstl
mov
ljmp
push
popf
outsb
or
or
and
or
and
jns
fistl
les
pop
xchg
ret
gs
inc
gs
pushf
mov
cltd
cltd
daa
push
adc
adc
or
push
stos
push
push
inc
push
daa
pop
inc
out
sbb
add
push
add
push
cmp
dec
push
push
enter
icebp
gs
adc
aam
sub
cld
add
imul
adc
out
add
repnz
pop
xor
add
gs
dec
loope
mov
adc
and
sar
stos
adc
pushf
test
mov
iret
testl
cmp
pusha
xchg
mov
das
and
arpl
xor
inc
inc
jmp
jnp
pop
in
xor
xor
stos
jo
das
and
sub
dec
cmp
sub
push
adc
sub
imul
inc
xor
lahf
jecxz
rclb
xor
in
daa
arpl
dec
int
es
stc
mull
dec
sbb
sub
cwtl
or
or
mov
sub
push
nop
sub
ss
sbb
or
adc
dec
mov
ss
inc
pop
mov
das
cmp
pop
cmpsl
xor
dec
pop
movsl
cmp
dec
push
pop
cli
std
sub
pop
and
inc
das
pop
jmp
imul
pusha
or
inc
pop
enter
push
lods
and
push
xor
or
sbb
ds
add
push
and
inc
jns
adcl
ss
cltd
sub
adc
push
adc
rcrl
xor
fcomps
xor
mov
push
xor
and
inc
shl
dec
pop
daa
and
mov
sub
or
and
das
add
xor
clc
xor
add
adc
or
fbstp
jbe
gs
mov
stos
les
mov
faddl
dec
sub
sbb
loope
insb
and
in
dec
std
aad
testb
pop
and
inc
addr16
xor
xor
sub
out
in
rorl
imul
stc
daa
call
popa
fstps
sub
std
and
lods
mov
cs
in
and
or
dec
shlb
jns
hlt
lds
sub
into
cld
dec
xor
jge
xor
push
cmp
inc
push
xchg
dec
aam
sbb
jmp
sub
out
jecxz
mov
lock
mov
push
sub
dec
repnz
xor
and
or
out
xor
or
sarl
sar
mov
in
xchg
sub
pop
or
out
pop
dec
inc
push
add
xor
push
sub
push
xchg
and
push
aad
jmp
push
inc
and
sub
mov
fnstsw
sub
add
sbb
in
aaa
pushf
pop
aas
aam
push
subl
out
out
aad
repnz
sub
in
or
pop
push
xor
loope
dec
sub
in
stos
lods
and
popa
fistps
mov
enter
bound
or
test
dec
pusha
clc
push
sub
clc
jb
gs
pop
xchg
inc
rorl
inc
int3
inc
xor
dec
pop
sbb
loop
pop
jge,pt
into
pop
push
xor
insb
mov
mul
add
xor
add
out
lock
loopne
leave
jns
add
imul
push
inc
push
loop
inc
je
xchg
ss
push
push
jno
or
adc
jae
jb
pop
pop
sbb
pop
in
inc
dec
xor
inc
jno
sbb
ss
jecxz
cs
lods
push
push
xor
clts
push
scas
fnstenv
gs
add
jmp
pushf
dec
jae
mov
insl
je
lea
add
pop
sub
lds
jecxz
stos
jo
insl
push
divl
divl
add
inc
loopne
gs
hlt
rep
test
mov
in
mov
sub
loopne
in
ja
add
or
sbb
push
and
sub
inc
arpl
push
inc
inc
pop
push
gs
pop
subl
mov
xor
mov
or
jb
insl
jno
pop
notb
outsl
insb
in
outsb
arpl
insl
inc
insl
insb
cmp
sub
out
loopne
cmp
loopne
popa
lods
fs
jno
pop
push
push
loopne
lods
xor
xor
and
pop
and
insl
and
adc
or
or
push
push
add
leave
and
dec
hlt
shl
insl
stos
repnz
adc
add
xlat
inc
gs
in
sub
aad
cmpsl
push
in
mov
outsb
fsubrl
inc
jae
adc
sub
adc
adc
mov
insl
push
aam
jae
xchg
jns
xor
int
mov
fwait
xchg
push
fstpl
and
cs
mov
fstps
nop
xlat
lea
jae
aam
imul
lea
push
cmpsb
or
sbb
popf
xchg
xchg
jl
inc
testb
dec
mov
pop
fstpl
jno
fsubrp
in
push
insl
in
and
xor
lods
in
loop
push
jecxz
sti
popf
loop
add
push
jns
push
gs
adc
xor
test
bound
push
sub
repnz
push
lods
out
test
cld
arpl
xor
pop
in
xchg
cmc
cmc
pop
arpl
push
pop
sub
add
cli
arpl
adc
pushf
in
pop
xor
sub
orl
imull
hlt
cltd
into
sahf
mov
les
xchg
iret
popa
jne
aas
xor
pop
jg
dec
js
mov
cld
add
jb
shrl
xor
sti
adc
mov
push
rcrl
xor
mov
jno
insl
imul
mov
jne
xchg
inc
xor
fs
push
cmp
bound
push
arpl
addr16
pop
xor
in
arpl
jo
jno
push
add
lock
push
jge
imul
lea
xchg
arpl
popf
sub
xor
pop
push
mov
push
push
xor
push
in
int
push
push
shll
mov
xchg
idivl
dec
gs
test
sub
xor
outsl
and
push
pop
int3
jae
xchg
add
cmp
insb
ja
mov
outsl
mov
mov
push
sub
lods
push
bound
dec
inc
in
sub
push
pop
sub
shlb
mov
jg
lods
jno
sub
adc
pmaxsw
push
scas
sub
jo
push
imul
aaa
in
pop
arpl
push
ljmp
xor
stos
jae
push
inc
sub
add
out
xlat
in
ret
arpl
in
pop
pop
test
out
je
imul
roll
push
pop
sub
lds
mov
xchg
in
std
and
jno
fwait
push
jae
dec
push
movsl
adc
gs
jae
lock
inc
push
and
jae
je
aam
mov
dec
jae
icebp
jnp
cmp
movsl
lret
mov
xchg
mov
and
popf
rolb
test
and
and
pop
inc
xchg
je
loopne
and
lock
rcr
push
loop
dec
push
jns
push
mov
into
push
hlt
mov
cmp
and
or
and
dec
fsubrs
or
imul
imul
adcl
sub
shll
sub
arpl
sub
or
or
xor
in
xor
hlt
int3
pop
arpl
push
sub
cwtl
mulb
jae
imul
fldcw
and
push
andl
pop
and
pop
jne
mov
pop
out
lock
test
daa
xchg
push
test
jne
add
fmuls
push
nop
pop
out
pop
aaa
mov
jne
ficomps
jmpw
xlat
hlt
jl
aad
mov
arpl
cmpsb
repnz
iret
cmpsb
jbe
ds
cld
cli
mov
scas
xchg
call
cs
mov
cmp
jle
add
cwtl
out
jl
jne
mov
lret
and
aam
jne
xchg
test
cmc
jne
xor
pop
lret
jge
mov
je
into
mov
sub
loope
xor
test
iret
aad
xchg
shrb
stc
push
cmc
out
inc
lods
sub
xchg
into
jecxz
cmp
mov
pause
sbb
mov
movsl
jmp
loop
cli
jbe
iret
test
push
mov
shr
jb
adc
js
sbb
popf
push
sbb
jl
push
lret
loope
andb
shrl
sub
jae
adc
jp
test
jno
je
je
add
imul
xchg
sbb
cmp
es
cmpb
mov
sbb
test
push
lock
lods
leave
mov
into
xchg
iret
mov
mov
mov
inc
cmp
mov
xchg
mov
mov
adc
lock
sub
jne
sub
lods
jge
test
outsb
cmp
xor
xchg
xchg
push
mov
enter
xchg
xchg
push
push
scas
ss
mov
jmp
mov
jb
and
arpl
inc
jne
outsl
mov
icebp
pusha
jp
xchg
sub
inc
dec
mov
int
dec
jne
leave
aam
mov
movsl
cwtl
and
adc
outsl
test
repz
cmc
cmp
cli
adc
inc
mov
leave
cmp
cmp
mov
cltd
in
sbb
lea
scas
lock
xor
fldl
ds
mov
jne
in
cmp
out
mov
pushw
fwait
shl
jne
rolb
jne
fs
and
xor
jne
dec
push
sub
dec
aas
inc
outsb
es
cmpsl
or
out
jno
jne
xchg
mov
jp
scas
push
jne
mov
sbb
in
mov
and
sub
adc
js
out
outsl
loopne
fs
xchg
cmpsl
mov
iret
popf
imul
cmp
xchg
out
pop
gs
inc
sub
jns
xchg
push
iret
lds
inc
xor
loope
outsl
mov
jo
push
cmp
sub
xlat
jo
out
popa
cmp
xchg
fiaddl
sub
jo
mov
es
popa
xorb
and
in
xor
fcoml
jo
mov
dec
jns
cmpsl
jo
imul
and
and
ret
scas
mov
sub
push
das
scas
dec
cli
inc
pop
cmpsl
adc
inc
push
scas
daa
cmp
addl
stc
ds
jno
push
idivl
dec
insl
hlt
sub
imulb
ja
cltd
repnz
insl
nop
adc
data16
fldcw
dec
test
popa
gs
dec
push
orl
adc
arpl
xchg
testl
test
add
pop
stos
gs
lcall
or
sub
in
pop
push
mov
mov
bound
sbb
xor
es
or
out
insb
xor
mov
lea
push
adc
push
punpckhdq
pop
imul
jns
in
push
or
js
jo
outsb
xor
lods
lods
push
add
and
cmp
mulb
dec
adc
dec
or
add
outsl
or
cmp
jnp
push
dec
adc
xchg
jb
inc
jno
pop
jbe
adc
jo
lret
inc
pop
jno
jbe
mov
sub
cmp
lret
inc
popl
popa
cmpsl
jae
mov
shlb
and
inc
or
out
inc
cmp
push
sub
outsl
in
sub
mov
outsl
loope
and
xor
lret
out
dec
icebp
and
into
jo
insb
pusha
add
push
arpl
fdiv
cs
sub
sub
xor
jno
push
push
sub
add
ret
aas
daa
lea
dec
xor
inc
jno
xor
and
fs
and
loop
and
jecxz
sbbl
in
fsubrp
push
imul
push
ljmp
jno
aaa
je
enter
arpl
iret
mov
cmpsb
outsl
cmp
jmp
sbb
dec
jnp
jle
repnz
pop
add
or
lea
push
add
not
push
adc
pop
pop
sbb
std
imul
out
stos
andb
movb
add
cld
mov
jmp
xlat
sub
ds
addr16
fsubrp
or
lea
lock
paddusb
cli
in
mov
cmp
xchg
pusha
xlat
js
int3
sub
call
ljmp
dec
mov
jno,pt
xchg
in
cld
xor
sahf
das
cltd
push
push
or
pop
xchg
addr16
pop
ljmp
adc
jne
mov
lea
jno
and
andb
xchg
mov
out
addr16
into
insb
push
mov
push
cltd
pop
inc
adc
das
sbb
sbb
inc
cltd
cmp
pop
mov
xor
sbb
xor
sub
or
stos
push
mov
xchg
insl
lds
push
sub
mov
or
push
mov
sub
lods
jnp
and
aad
jp
or
test
mov
rolb
pop
sbb
cli
mov
xchg
lods
movsb
mov
ret
in
rcrb
add
pushf
dec
pop
ss
mov
shll
movsl
enter
dec
xor
lcall
push
mov
push
mov
dec
orb
jmp
clc
xchg
popa
xor
shll
adc
ds
push
push
dec
mov
stc
jnp
int3
xor
ret
fwait
insl
cmp
loope
mov
mov
push
mov
jmp
dec
and
test
insb
mov
test
push
fs
xor
mov
pop
adc
sub
pop
movsl
cmp
pop
jle
inc
int3
sahf
nopl
addr16
adcl
sub
and
mov
mov
adc
scas
jmp
scas
xor
jp
int3
lcall
mov
push
sub
imul
dec
js
xor
adc
mov
adc
push
cmp
pop
pop
lea
or
negb
or
gs
in
sarb
cmc
insb
pop
add
popf
mov
out
pop
popf
stc
movsb
aaa
out
scas
mov
jb
mov
cmp
jl
dec
mov
std
lods
sbb
pop
xor
cmpsb
jp
int3
add
add
movsb
jne
or
stos
js
es
data16
mov
and
lds
mov
in
idivl
aaa
adc
pushl
movsl
push
add
inc
cmpl
fwait
or
cmp
xchg
and
rclb
mov
jp
or
fdivs
arpl
add
mov
mov
and
xlat
inc
mov
int3
stos
lahf
jno
sub
rcrb
mov
mov
mov
cmpsl
loope
adcb
lods
jae
xchg
xor
shl
push
repnz
adc
or
enter
addr16
xchg
bound
push
std
xor
jo
in
fdivl
scas
pop
push
jge
mov
bound
in
mov
arpl
sub
pop
idivb
rcll
gs
sub
mov
pop
fildll
adcb
fdiv
popf
mov
das
cltd
outsl
fcoms
icebp
sub
clc
push
dec
push
xchg
mov
dec
pop
loope
mov
movsb
xchg
pusha
xchg
adc
rep
pop
inc
jge
rclb
jge
mov
mov
inc
jns
insb
xor
inc
call
xchg
mov
mov
mov
xchg
push
int
lods
xor
enter
mov
pushl
pop
fidivrs
adc
mov
pop
sub
fildll
fisubl
iret
xorb
and
ja
not
shl
not
jmp
lea
jne
jmp
pushl
pusha
lea
je
bt
call
pop
fdiv
jl
int3
cmp
pop
jecxz
insb
xor
lcall
mov
fwait
inc
je
int
into
pop
jle
cmp
pop
dec
stos
sub
and
push
out
cmp
mull
and
inc
xlat
inc
xor
xor
xor
bound
adc
rclb
mov
popf
ret
ljmp
ja
sbb
mov
pop
dec
mov
gs
aad
pop
xor
shr
dec
mov
bt
push
pusha
bt
cmpb
jmp
mov
pushf
cmp
push
jmp
mov
xor
int3
js
jg
das
or
mov
lds
mov
pop
xorb
mov
xchg
stos
scas
jae
and
push
push
adc
inc
add
shrl
shlb
dec
loopne
cmp
incb
sbb
fidivl
xchg
test
jae
mov
dec
sbb
les
cmp
aam
lea
or
je
or
xchg
push
imul
jmp
inc
bswap
mov
bt
cmc
cmpb
pusha
jmp
adc
fidivrs
int3
or
inc
xchg
popa
cmp
rcll
pop
mov
in
jae
das
xchg
das
hlt
ds
outsl
dec
sbb
xor
ljmp
lret
clc
inc
jb
xchg
repz
inc
lcall
cmpsb
jmp
dec
and
fnstcw
cmp
out
mov
es
fwait
roll
mov
aas
adc
bound
or
aad
pop
bound
add
repz
hlt
int
fs
push
call
mov
mov
cmp
stc
jo
icebp
jle
int3
cmp
fildll
nop
imul
dec
subl
push
imull
xchg
or
lds
adc
dec
sbb
div
stos
jle
sahf
jns
test
inc
jbe
xor
lcall
xor
insl
sti
into
sarb
and
ror
fwait
xchg
popl
ljmp
cmp
sbb
or
and
fdivr
sub
adc
fsubs
mov
push
sub
cld
clc
leave
js
dec
add
push
sub
push
js
daa
int3
mov
mov
push
push
out
mov
lret
nop
adc
aad
push
pusha
gs
rclb
push
lret
add
rcll
push
inc
push
pop
inc
repz
cmc
out
ret
sti
shrb
push
mov
dec
repnz
sbb
jecxz
sarl
stc
mov
lock
outsb
xor
jns
imul
sbb
mov
pop
cmp
lahf
imul
mov
push
inc
rorl
mov
mov
add
out
adcb
shlb
mov
lcall
scas
call
cmp
cli
inc
daa
int3
das
popa
ss
sub
test
adc
xchg
insl
jmp
cmp
imul
xchg
adc
adc
add
xchg
jne
dec
mov
mov
jbe
insl
out
and
fld1
dec
sti
hlt
xor
and
dec
lods
test
pop
pop
aad
fsubrs
popa
das
ja
or
xor
loop
mov
add
cmpsb
cmp
popl
js
or
int3
jns
jp
and
rcrb
sbb
ss
cmp
cs
cli
sub
jae
mov
jg
xor
xor
fwait
push
int3
lcall
xchg
leave
stos
jae
es
push
idivb
cmp
push
xchg
jmp
call
nop
movsb
leave
aas
dec
and
sub
pop
cmpsl
repz
and
lds
test
lds
sub
pusha
das
movsb
lods
inc
daa
int3
cld
sub
fistpll
ret
xchg
push
sti
dec
out
pop
outsl
fwait
xchg
or
sub
push
mov
sub
lret
adc
fistpll
arpl
incl
push
xchg
nop
xchg
jle
dec
das
lahf
bound
adc
mov
gs
sbb
mov
inc
popa
in
shrl
insl
cmp
mov
jg
inc
sub
inc
fsubs
xor
push
pop
sub
loope
fs
inc
inc
push
inc
push
dec
xor
cs
insb
add
dec
adcb
movsb
jg
xor
fisubl
shufps
jmp
lret
pop
in
pushf
inc
dec
popl
xor
enter
dec
adc
test
cld
and
mov
cmp
lds
stos
and
jp
sbb
xor
dec
mov
mov
push
push
sbb
roll
lret
in
adc
mov
pop
and
das
rcrb
and
push
pushf
psrlw
pusha
test
arpl
add
scas
jle
sbb
inc
imulb
pop
jl
daa
int3
lods
loopne
xchg
outsb
inc
or
and
lds
popf
pop
repnz
and
push
xchg
pop
mov
dec
orb
js
mov
sub
sahf
sub
adc
in
xchg
xchg
pop
mov
ret
mov
jecxz
clc
je
enter
js
adc
les
sahf
es
cmc
stos
arpl
negb
inc
daa
int3
dec
jg
sub
fsubrs
mov
dec
stos
mov
lods
mov
test
cmp
jns
adc
repnz
gs
insb
mov
ja
add
fdivl
mov
popa
xor
adc
mov
int3
sub
add
mov
gs
ret
cmp
jne
mov
dec
fisubrs
lds
mov
stos
lds
xchg
lret
push
inc
aad
mov
jl
or
mov
xchg
mov
jle
or
sbb
lods
jp
sbb
insl
jnp
movsl
dec
ror
mov
cli
mov
inc
inc
daa
int3
movsb
fldt
shrl
and
and
adc
mov
sub
adc
push
sbb
xor
fisubl
xchg
xchg
repz
xchg
int3
mov
xchg
or
adc
clc
js
jo
das
hlt
sub
jns
stos
jbe
push
mov
push
in
dec
cmpsb
and
dec
int3
sbb
xchg
or
mov
inc
and
and
jb
xorb
inc
push
test
je
jae
call
adc
push
xor
pop
xor
xchg
popa
aaa
or
mov
inc
out
and
jp
xlat
outsl
push
xorb
push
mov
pop
loopne
cmp
js
lds
cmp
xor
lods
sub
and
xchg
dec
movsb
push
jo
lcall
cmc
sub
inc
xchg
fsubrl
pop
xor
bound
or
or
jecxz
cmp
call
mov
int3
outsl
lahf
insb
inc
adc
xor
xlat
movsl
jb
cltd
daa
mov
aas
push
popa
sub
xor
jp
mov
sub
insl
das
scas
mov
xorl
adc
sarb
dec
lea
push
push
imul
lcall
sbbl
out
push
or
push
and
jmp
or
mov
push
sbb
rcrl
pop
xchg
stc
test
or
int3
int
shlb
iret
cmpsb
ja
and
cmp
js
mov
lds
jg
scas
mov
cmp
test
rcrl
sti
cmp
lret
adc
imul
pushl
sub
and
loop
push
lods
sbb
shrb
mov
push
sbb
push
lods
repnz
mov
add
notl
les
pop
pop
iret
inc
push
cmp
mov
xor
push
sub
shll
mov
xor
rorb
cmp
inc
daa
int3
push
mov
stc
lret
mov
add
mov
inc
outsb
mov
bswap
out
add
dec
je
je
push
in
xchg
imul
test
xor
cltd
popf
pop
nop
inc
imul
mov
mulb
hlt
shll
mov
cmp
sbb
sub
xor
iret
incl
mov
xor
pop
lea
sbb
subb
rorb
popf
cmp
push
mov
lds
inc
mov
inc
mov
ret
push
call
cltd
or
push
sbb
fbstp
test
pop
xor
pop
cmpsl
jmp
push
add
mov
inc
inc
daa
int3
cmpsb
fistpll
xlat
mov
mov
ret
shlw
negl
imul
adc
in
push
leave
scas
push
pop
mov
fcompl
stos
outsb
adc
add
sub
fstl
sar
outsl
nop
nop
imul
lea
lahf
outsl
mov
push
shl
mov
es
xchg
scas
out
pop
lcall
ds
xor
xor
pop
sub
shrb
loopne
mov
into
pusha
ficompl
push
test
inc
daa
int3
xor
rcll
fsubl
roll
or
lahf
jl
test
enter
xchg
frstor
xlat
ljmp
daa
pop
and
test
outsl
dec
and
lea
dec
lcall
mov
loope
into
push
insb
dec
daa
int3
mov
xor
shlb
into
and
xchg
leave
cwtl
fldt
out
ret
cmovo
mov
or
out
and
sbb
imul
mov
xor
pop
mov
sbb
inc
ficompl
int
or
jl
dec
mov
movsb
mov
jno
jnp
insb
dec
aam
mov
js
jns
sub
loop
out
adc
sahf
push
jno
test
or
mov
repnz
clc
iret
add
cmp
cld
dec
daa
int3
sub
lods
jle
adc
mov
pop
xor
lock
pop
into
hlt
in
inc
clc
mov
pop
fisubl
ss
push
jl
pop
xlat
mov
lcall
clc
adc
mov
aaa
cli
mov
or
incl
std
xchg
push
mov
xor
mov
test
into
pop
call
outsl
cmp
out
xchg
jb
dec
mov
sbb
xchg
sub
clc
push
pushl
popl
clc
cmp
call
cmpsl
sub
daa
int3
xchg
rcll
jnp
adc
mov
push
insl
and
cmp
inc
adc
jl
mov
jbe
stos
jge
fcomi
sub
imul
sbb
jg
jmp
inc
mov
xchg
sbb
lods
cmp
mov
sub
push
out
addr16
stos
fnstcw
pop
cs
rcrl
xrelease
insb
mov
mov
cmp
inc
sbb
lret
dec
pop
insb
add
push
mov
xlat
inc
inc
jecxz
xor
loope
cmp
je
cmp
scas
imul
sbb
jo
push
aam
push
sbb
ja
or
je
cs
ds
scas
movsl
cltd
es
fidivrs
fsubrl
loopne
adc
xor
andb
mov
dec
mov
lods
mov
fbld
enter
lea
int3
insb
fwait
fs
scas
test
icebp
xchg
push
fwait
sti
sbb
iret
xlat
push
cltd
mov
int
sub
call
out
fwait
addr16
xlat
or
adc
imul
gs
or
roll
rolb
sub
jg
dec
add
fildl
lret
adc
cmpsl
movsl
jecxz
cmpsl
aaa
jnp
lcall
es
cmp
aaa
or
mov
ret
je
pop
mov
cwtl
incl
int3
add
push
loop
xchg
addr16
add
mov
stos
mov
stos
adc
loopne
ret
jge
inc
adc
inc
lcall
stos
push
and
add
imul
test
xor
cmp
addr16
xlat
mov
leave
push
shl
mov
xchg
into
xchg
frstor
incl
sbb
cmp
nop
mov
inc
and
xor
rcrl
lcall
loopne
or
call
sub
push
jmp
not
or
stc
mov
push
call
mov
mov
movb
pusha
movb
call
add
jo
xor
push
lea
call
pushf
lea
jae
mov
mov
mov
jmp
push
lea
add
sti
ret
cltd
outsb
inc
push
lock
jbe
pop
adc
add
dec
cmc
loop
mov
lcall
xchg
rclb
cmpsl
pop
sti
mov
cmc
mov
test
jmp
mov
out
inc
lret
mov
and
stos
adc
xchg
sahf
js
pop
ljmp
lea
lret
lcall
cltd
cmp
mov
adc
dec
daa
int3
bound
stos
jp
psubusb
pop
mov
or
sbb
das
mov
pop
arpl
or
adc
dec
pop
cltd
push
jl
and
push
sti
ficoms
jno
test
loop
mov
repz
inc
movsb
out
sbb
mov
imul
dec
inc
push
mov
lea
insl
aas
or
test
sbb
or
mov
add
mov
pop
cld
movsb
imul
and
push
and
rcrl
int
test
cltd
xchg
iret
inc
inc
mov
jno
push
xchg
dec
jnp
xor
jnp
cmp
mov
cmpsb
roll
rcll
mov
cmp
pop
lahf
stc
aaa
pop
shlb
jns
lods
xchg
and
push
push
sahf
insb
mov
push
and
es
fadds
outsl
inc
xchg
jno
xchg
aad
add
daa
int3
push
lea
sti
mov
add
popf
push
cs
pop
cli
mov
fs
lds
dec
sbb
lret
mov
mov
ljmp
daa
ss
std
adc
shrb
popf
jb
push
nop
das
inc
cmpsb
clc
lods
fsubrl
movsb
dec
daa
int3
add
jno
adc
push
out
test
imul
xchg
fcoms
aas
aad
filds
gs
sahf
mov
jns
cmpsb
iret
test
hlt
dec
fdivr
aaa
fs
call
sahf
lock
mov
js
add
push
xchg
pop
sub
fucomip
call
imul
lds
mov
shlb
pop
sub
xlat
sbb
pop
lcall
xchg
xor
stc
mov
js
enter
xor
xchg
insl
pop
cwtl
adc
cli
jbe
nop
mov
push
push
cmpb
repnz
fbld
std
or
xor
in
mov
stos
nop
nop
ljmp
lcall
cmpsl
cmp
dec
xchg
pop
sub
mov
aad
cmpl
repz
or
cmpsl
rorb
int3
sbb
cld
iret
movsl
jp
sub
fidivs
pop
pop
push
inc
push
push
xor
mov
in
lahf
call
fs
push
xchg
lcall
rorb
dec
sbb
negb
inc
dec
sti
cmp
and
or
xchg
ja,pt
sub
push
inc
int3
cmpsl
cli
jp
pop
push
mov
mov
in
jb
popl
xchg
movd
pop
and
dec
pop
imul
xor
fists
movsb
push
int3
xchg
adc
xor
cltd
call
cld
iret
stos
xchg
push
into
sbb
and
sub
movsb
add
pushf
lea
jmp
jns
loop
daa
int3
inc
adcb
ret
xchg
pop
sbb
inc
xchg
push
in
pop
and
push
mov
sbb
mov
dec
inc
mov
jb
rcrl
int
hlt
cltd
sbb
test
push
xor
call
in
dec
jecxz
mov
stos
fsubrl
ja
add
pop
fistpl
dec
dec
js
rcl
cmp
add
scas
sub
inc
adc
mov
mov
imul
icebp
bound
daa
int3
mov
mov
out
js
or
mov
push
aas
and
fs
jl
clc
jne
stc
sbb
mov
inc
mov
mov
xchg
adc
push
push
lods
jb
mov
mov
cmp
dec
adc
jp
xchg
pop
cld
es
insl
xchg
xchg
enter
push
sub
add
sub
les
adc
sbb
aas
push
daa
int3
push
jp
sbb
xchg
jno
sbb
push
int3
outsb
mov
mov
xlat
aad
fdivrl
jge
jb
mov
cli
and
cmp
in
ret
xorl
push
push
jne
push
pop
loop
popf
inc
shrb
test
shll
mov
lahf
sbbb
in
mov
clc
jmp
and
cs
test
cltd
nop
stos
push
daa
int3
sub
shlb
push
adc
and
dec
xlat
outsb
movsl
shlb
cwtl
imul
insb
scas
lss
mov
cmpl
stos
push
out
dec
sub
adc
ret
adc
dec
aam
fstl
xchg
lret
aas
daa
jl
das
into
in
push
clc
ss
in
xor
jo
or
jb
pop
int3
or
rcll
mov
pop
push
sahf
clc
mov
inc
or
addb
push
daa
int3
insl
mov
popf
xor
mov
jo
or
je
inc
js
inc
xchg
mov
xchg
push
pop
push
mov
fistl
inc
inc
xchg
sub
mov
aad
movsl
xor
inc
mov
jmp
bound
dec
sbb
movsl
jo
adc
aad
cmpsb
xchg
inc
jle
xchg
insb
movb
lea
je
push
sub
clc
mov
pushf
cmp
pushf
movb
pushf
lea
jmp
pushl
lea
ja
shr
add
sub
sbb
stc
rcl
movzbl
add
sets
sbb
adc
btc
mov
sar
clc
rcr
rol
mov
clc
clc
repnz
pushf
mov
movb
mov
lea
jne
jmp
cltd
lldt
int3
imul
in
lds
jl
imul
js
lea
xchg
xchg
add
push
out
cmpsb
pop
lea
outsl
lcall
xchg
in
mov
popa
sub
jns
xchg
ljmp
daa
mov
mov
xlat
mov
outsb
dec
pop
call
or
xchg
cmpsb
sub
mov
jmp
daa
int3
sub
cli
iret
xchg
push
mov
jns
scas
or
jne
mov
and
fidivrs
cmp
adc
inc
jnp
mov
mov
movsl
ret
bound
jnp
pusha
xor
jno
addr16
inc
nop
push
mov
push
imul
xchg
loopne
out
inc
sbb
scas
jg
adc
stos
xchg
sub
lods
mov
adc
movsb
inc
add
pusha
movb
movb
mov
lea
jmp
neg
cmp
sub
not
add
add
movzbw
mov
sub
sar
xor
mov
jmp
push
lea
jae
inc
pushf
dec
mov
push
call
test
add
clc
call
inc
mov
push
daa
int3
pop
inc
pop
test
loope
test
xchg
test
xchg
dec
mov
js
addr16
fdivrs
nop
subl
stos
mov
lds
push
cmp
pop
sbb
in
lds
repnz
rcll
jbe
jl
fadds
das
push
sbb
shll
mov
std
lods
data16
jmp
data16
clc
cmc
mov
ror
clc
clc
sub
test
mov
pushw
popfw
lea
ja
push
inc
call
mov
int3
cltd
iret
mov
mov
int3
fwait
call
xor
jno
jle
movntq
lcall
push
ja
jg
and
push
jns
mov
cs
shll
push
ljmp
cmpsb
aas
insb
lahf
test
out
mov
push
sbb
js
push
cmp
inc
aad
clc
lret
into
pushf
imul
mov
out
imul
nop
and
imull
loopne
jg
sbb
ret
pop
cs
cmp
sbb
add
shl
pop
mov
fwait
xchg
outsb
divb
shll
and
mov
adc
loope
push
jmp
rcrl
push
repz
push
dec
xchg
ds
sbb
fnstcw
dec
pushf
fldt
dec
push
frstor
adc
subl
dec
mov
pop
push
daa
int3
mov
aam
jnp
pop
call
cmp
add
andb
imul
xchg
mov
sbb
adc
sbb
ljmp
frstor
push
xchg
push
jle
lahf
jae
sub
mov
pusha
xor
enter
dec
cmpsb
subb
out
daa
int3
inc
jp
sbb
ret
cltd
jae
or
mov
mov
inc
lods
or
or
pop
hlt
cmp
cld
cmp
test
cltd
xchg
hlt
sub
cs
or
jmp
mov
out
xor
in
popf
pmullw
xchg
loopne
jle
push
add
lods
test
xchg
inc
ja
adc
xchg
mov
mov
cmp
sbb
mov
cmpsb
loopne
mov
mov
push
sub
pop
das
sbb
push
mov
sub
mov
test
int3
lcall
lds
xchg
out
mov
jg
iret
adc
and
xor
mov
xchg
outsb
dec
out
add
adc
cmp
adc
inc
cmp
in
xor
and
pop
adc
imul
inc
push
push
push
adc
clc
push
lret
push
cld
shlb
test
jo
add
test
pop
and
push
push
stos
movb
pushf
pushl
lea
jmp
call
or
cld
xor
jecxz
lcall
push
lds
mov
insl
mov
push
mov
and
mov
inc
lea
inc
sti
fimuls
inc
inc
int
add
mov
call
mov
sub
jne
test
mov
imul
push
adc
addr16
out
adc
add
jns
push
lea
jae
cmp
cmp
push
cmp
pushf
lea
ja
mov
inc
setb
dec
inc
call
pusha
pushf
lea
jae
clc
jmp
pop
in
pop
push
daa
int3
push
mov
or
movsb
js
or
mov
push
mov
in
add
out
les
xchg
lcall
push
xor
adc
adc
mov
cli
mov
fldl
cmc
stos
nop
fs
push
inc
mov
jae
xor
and
imul
pop
lods
xor
cmc
adc
sbb
or
add
add
push
jg
xor
mov
mov
mov
test
jo
and
adc
mov
pushl
int3
jp
js
and
aaa
add
mov
adc
add
xor
mov
xchg
fidivs
lock
add
test
pushw
xor
daa
and
xchg
shr
or
ret
mov
rclb
cmpsb
add
pusha
in
pop
daa
int3
dec
jl
sub
ret
xor
cmp
and
sub
mov
clc
mov
add
add
mov
cmpsb
fisubrl
xchg
inc
push
dec
adc
mov
aad
xor
scas
fsts
insb
jmp
in
in
ret
mov
pop
sub
push
std
sub
sub
dec
loop
cltd
orb
xor
out
lods
dec
jg
or
scas
adc
faddp
mov
pop
bound
xchg
push
cmp
xchg
inc
adc
inc
adc
fisttps
int3
xchg
inc
push
pop
daa
int3
xchg
pushf
jbe
movntq
jae
inc
daa
outsb
out
adc
xchg
xchg
sbb
sbb
or
xchg
bound
dec
xchg
ja
outsl
fcomps
aam
les
imul
push
pop
mov
aas
or
fbstp
inc
jl
xchg
push
xor
test
or
cld
stc
and
mov
pushf
push
and
cmp
mov
rolb
adc
std
flds
repz
int3
sbb
jg
sub
xchg
pop
sub
enter
and
push
in
cs
and
sbb
xchg
pop
sub
ret
cwtl
imul
push
lods
lret
jle
jbe
aaa
cmpsb
lcall
pop
repnz
jno
pop
dec
or
mov
push
jg
insb
xor
mov
imul
jl
cmp
fdivr
aad
call
pop
fisubrl
sbb
adc
insb
inc
jge
fsubs
je
mov
out
test
stc
shll
test
subl
sub
int3
xorl
adc
scas
jbe
cwtl
das
cltd
push
stos
sub
or
iret
inc
es
jae
loopne
enter
mov
or
jmp
mov
mov
dec
jl
sub
lock
rcl
out
in
and
sti
sbb
inc
aaa
inc
inc
inc
into
mov
sbb
add
out
ret
xchg
imul
mov
mov
cmp
out
test
pushl
or
movsb
jae
and
mov
push
ljmp
mov
push
add
cs
daa
adc
es
cmp
pushf
fwait
adc
pop
mov
aam
add
push
dec
jl
push
dec
lea
jmp
faddl
add
adc
int
lret
adc
dec
mov
adc
and
jnp
cwtl
mov
add
out
dec
movsl
ljmp
pushf
and
nop
das
and
jmp
add
popf
jne
sub
ljmp
fidivs
and
jne
push
xor
sub
pop
mov
shld
sub
bswap
cmp
mov
cmc
sub
test
stc
call
lea
mov
movsbl
mov
jmp
sub
clc
push
movb
cmp
movb
pushl
pusha
call
pop
test
pop
inc
or
mov
dec
and
pushf
addr16
dec
xlat
outsl
imul
mov
insb
ds
jb
mov
lods
aas
jne
mov
xchg
push
mov
arpl
in
scas
jb
cltd
pop
xchg
fstpt
sbb
push
xchg
push
shl
idivb
sbb
clc
jl
cmp
mov
bound
sbb
push
xchg
fidivl
stc
int3
mov
sahf
insl
cmp
cli
loop
mov
xchg
jl
sti
sbb
daa
int3
dec
test
std
lret
fwait
insb
aaa
or
mov
dec
mov
and
mov
ret
icebp
arpl
mov
or
push
sbb
jmp
je
mov
enter
out
std
stc
jo
cmpsb
push
add
jl
stos
inc
aam
pop
daa
int3
cmp
or
rclb
jae
pushf
aaa
fwait
push
inc
jae
pop
sub
xchg
lret
shll
sub
je
movsl
pop
into
sub
cmp
movsl
fmuls
push
mov
xchg
fs
inc
mov
daa
stos
sahf
cmpsl
insb
lods
jge
or
cmp
iret
push
mov
outsb
nop
inc
insl
and
adc
je
leave
cld
adc
push
stos
push
ja
adc
adc
fstps
fwait
stos
xor
shll
aad
test
sub
int3
add
mov
int3
insb
pushf
outsb
dec
sbb
mov
inc
sbb
mov
daa
insb
ficoms
std
int3
cli
into
pop
xor
pop
jnp
mov
add
and
mov
loop
or
loopne
lock
iret
mov
inc
hlt
int
pop
repz
fiaddl
sub
das
mov
and
outsb
jmp
in
pop
jge
pop
lret
add
xor
pushl
out
xor
fisttpll
sub
xchg
jb
adc
scas
hlt
inc
cmp
cs
mov
dec
pop
mov
mov
ret
xchg
sahf
es
pusha
test
fsubrl
incl
int3
cli
das
add
sahf
jnp
sbb
mov
pop
and
aas
mov
mov
sbb
xlat
xchg
push
lret
mov
jmp
cmpsb
inc
lods
aam
loopne
mov
adc
daa
les
aad
fsubl
repnz
jbe
pop
pop
divl
inc
cmpsb
xor
scas
sub
pop
daa
int3
xchg
fldt
mov
lds
push
repnz
sub
sub
scas
pop
sti
adc
mov
xlat
dec
test
fcmovb
movsb
push
test
aaa
jp
lds
and
out
fwait
or
out
cmp
push
loope
mov
ljmp
xchg
imul
test
js
mov
jbe
mov
and
int3
jmp
repz
fwait
push
xchg
add
inc
insl
pop
adc
inc
div
cmpsb
aad
and
lods
repnz
mul
xchg
ss
add
repnz
cwtl
insl
lcall
daa
andl
repz
add
xor
xor
bound
sbb
pop
outsl
mov
add
and
aam
xchg
inc
and
and
adc
cmc
lret
lcall
xchg
jns
adc
fisubs
repz
call
add
dec
outsl
arpl
inc
jb
add
int3
pop
pop
sub
cs
popf
bound
repz
push
xor
outsl
fdivrl
inc
cld
sub
push
sub
cwtl
or
mov
xorb
sbb
dec
pop
sbb
jmp
in
cmp
inc
mov
lods
jle
add
inc
push
lret
mov
mov
orb
mov
ljmp
jbe
push
mov
cwtl
pop
daa
int3
roll
iret
fwait
insl
inc
sbb
leave
xchg
pusha
xor
lds
popf
lret
adc
dec
stos
call
shrl
stos
mov
roll
pop
mov
insb
iret
shlb
loop
or
movsl
xchg
popa
adc
sti
pop
aad
add
xor
jp
and
inc
addb
add
lods
sbb
repz
sbb
rcl
int
ds
mov
bound
mov
xlat
sbb
sub
fsubrs
andl
rep
xlat
and
ret
cmp
jle
sbb
int
ja
adc
mov
sbb
out
int3
imul
pop
xor
or
jae
sbb
mov
xchg
fsubl
frstor
pop
das
mov
dec
xchg
pop
xor
loopne
cltd
cmpsb
cs
cmpsb
jl
clc
shlb
aas
aas
add
adc
xchg
fidivs
into
jmp
pop
in
fwait
push
lret
aaa
test
adc
jecxz
testl
nop
jecxz
xchg
xchg
sbb
fiaddl
jl
test
bound
stos
mov
mov
cs
xchg
push
fcoml
jle
adc
lods
jns
and
call
das
push
mov
int
dec
std
mov
mov
add
xchg
arpl
add
pop
fsub
xchg
stos
pop
cwtl
hlt
iret
mov
shr
std
mov
adc
cmp
out
test
push
xor
inc
ror
test
jne
inc
cmp
cmp
iret
xchg
push
lcall
or
loop
xchg
xchg
mov
inc
mov
stc
inc
jl
stc
ret
sbb
lcall
push
out
lcall
lea
daa
jo
fs
movsb
iret
xor
clc
fwait
inc
push
jns
push
mov
in
inc
cmp
scas
mov
js
adc
fidivs
lock
push
subb
cmp
bound
ds
clc
adc
add
xchg
jmp
jge
mov
jg
inc
setns
sti
lret
leave
adc
or
aas
movsb
inc
pop
out
sbb
jg
and
push
sbb
stos
imull
sbb
jecxz
push
ret
jns
sbb
test
pop
mov
sub
pop
sub
jne
adc
push
test
icebp
mov
sub
mov
fnsave
fcmovb
push
add
repz
shr
mov
sahf
enter
sbb
lahf
pop
mov
dec
test
fstpt
je
shl
loopne
insl
jmp
mov
stos
jno
jo
cs
push
clc
mov
in
mov
clc
jo
pushf
xor
sbb
sub
mov
jne
mov
or
les
jp
bound
mov
or
mov
mov
cmp
xor
dec
inc
mov
fwait
xor
aam
lea
sbb
lds
das
inc
icebp
scas
xor
push
movsb
outsb
xor
fs
pop
lahf
mov
loope
xchg
outsl
out
adc
mov
jge
sub
or
dec
pop
mov
leave
je
jno
inc
enter
ljmp
and
push
dec
aad
xor
jg
xchg
and
sbb
ja
fdivr
rorl
movsb
jl
test
dec
sbb
lods
jne
sbb
icebp
out
lea
arpl
lea
ja
pusha
jmp
lea
jae
call
xor
int3
daa
pop
cmp
sub
shll
out
ret
adc
je
adc
pop
mov
push
jnp
mov
stos
cli
es
dec
inc
pop
jl
dec
sbb
divl
sub
mov
mov
fadds
les
mov
xchg
pop
test
push
inc
push
jno
xchg
mov
popf
xor
mov
iret
sahf
stos
sub
dec
adc
inc
jo
and
mov
cmp
xchg
bound
std
aam
lret
rol
stos
pop
mov
pop
call
mov
cmpsl
dec
adc
decb
nop
sbb
pop
nop
push
icebp
sub
cmp
xor
mov
icebp
scas
and
ret
jo
ror
std
lods
jecxz
mov
inc
push
push
cmp
sti
int
jne
popa
data16
stos
xlat
xchg
call
sub
pop
xor
mov
cmpsb
ror
inc
test
jge
sbb
icebp
and
add
aad
add
lea
out
cmp
mov
sahf
mov
call
push
mov
imul
xor
cwtl
rorb
mov
push
lods
test
xor
sti
ficoms
mov
mov
popf
dec
shlb
jmp
inc
jmp
loop
mov
call
or
clc
and
ret
sbb
dec
cmp
pop
dec
dec
lds
push
test
cmp
sub
cmp
test
xor
jno
jl
or
testl
test
imul
jbe
in
bound
mov
inc
cld
xor
pop
push
into
or
dec
add
mov
xor
insl
jne
mov
enter
sbb
sarb
push
cmp
cmp
roll
mov
lds
out
loop
dec
push
aas
out
adc
pop
pop
orl
les
xorl
daa
stos
pop
jge
pop
push
add
adc
fstpt
lahf
sbb
jmp
aaa
insl
gs
mov
mov
mov
leave
ja
sub
cmp
aaa
out
adc
insb
outsl
or
lock
call
insl
movsl
push
gs
pusha
cmovne
adc
mov
pop
ss
insb
js
repnz
es
and
mov
sbb
sbb
xchg
cwtl
in
stos
or
jne
in
fstpl
test
mul
aas
sbb
lahf
xchg
mov
insl
cwtl
js
shrb
ret
xchg
xlat
fildl
out
imul
aas
jg
push
mov
ror
shrl
sbb
or
loopne
lods
clc
push
enter
push
pop
mov
xor
outsb
jg
insl
jmp
imull
data16
pop
push
mov
arpl
adc
adc
js
push
test
mov
pop
jmp
out
sub
dec
xchg
popf
add
fstpt
imul
sub
lds
jmp
mov
push
mov
cwtl
pop
or
cwtl
push
dec
lret
push
pop
push
xor
cli
push
dec
mov
iret
push
sub
repz
xor
sbb
mov
and
mov
or
or
js
bnd
sub
lret
mov
push
inc
movsb
into
jne
leave
sahf
std
push
cld
cmp
xchg
jno
mov
add
jg
mov
mov
in
lret
data16
xchg
jo
and
mov
cmp
or
lcall
jnp
xchg
fists
or
arpl
jmp
into
mov
adc
rcrl
repz
or
jns
insb
sbb
orl
loopne
adc
cmpsb
adc
je
mov
xorl
ljmp
nop
jmp
mov
jg
and
in
fwait
rol
test
adc
out
daa
add
jno
mov
push
out
xchg
mov
jmp
loopne
mov
xchg
push
jns
cltd
aad
dec
pop
repnz
lock
adc
mov
push
lret
xchg
iret
xchg
shlb
stos
inc
js
dec
jb
insb
inc
xor
mov
lret
jns
out
or
xchg
popa
icebp
mov
cltd
push
mov
rolb
ss
jnp
dec
cwtl
mov
push
push
xor
insl
popa
das
or
pop
push
test
out
ficoms
cmpl
cmp
fstl
mov
adc
pop
jl
cwtl
outsb
sbb
fst
pop
push
lahf
cld
sub
xlat
scas
xor
sub
aaa
data16
mov
cs
jle
xchg
roll
xor
ret
xor
mov
inc
rcrb
fs
int3
jle
mov
dec
ja
leave
lret
jg
stos
and
movsb
imul
inc
inc
ljmp
sti
pop
imul
orb
mov
stos
add
or
sub
ficoms
hlt
push
cmp
arpl
sbb
dec
cmpb
jae
mov
push
push
sub
cmp
shlb
cmc
pop
pusha
fs
in
sub
jmp
cli
mov
out
sbb
into
jge
mov
push
out
mov
jnp
int3
mov
or
cmp
mov
xchg
jge
inc
int3
pushf
shll
pop
mov
out
repnz
flds
inc
loope
xchg
dec
jnp
mov
sbbl
mov
mov
push
subb
bound
cmp
mov
imul
sbb
adc
and
out
ja
mov
fdiv
mov
incl
or
sbb
xchg
movsl
push
jg
or
outsb
in
clc
jl
outsb
cltd
pop
mov
rorb
inc
movb
out
stc
jmp
sbb
adcb
popf
enter
scas
mov
inc
push
pop
mov
inc
ljmp
call
call
push
mov
add
sub
add
fistpl
decl
sbbb
cs
mov
jge
js
mov
and
jmp
iret
pop
push
subb
adc
lds
pop
add
jp
fwait
test
add
mov
rorb
out
ds
fcmovb
adc
sbb
sub
cmp
or
fcomip
scas
mov
jle
cld
xor
sub
adc
in
iret
mov
push
mov
cltd
push
fldt
pusha
imul
outsl
mov
rcrb
addr16
dec
rcrb
in
test
pop
fistl
cmpsl
fcmovu
pop
push
inc
and
push
push
aas
pop
and
jp
mov
adc
ljmp
inc
fisttpll
cmp
cmc
lds
xlat
rcrl
or
mov
inc
shll
push
and
push
dec
out
adc
inc
xlat
ja
inc
jnp
sbb
xchg
bound
dec
pop
sub
mov
stc
insl
or
xor
rcll
out
cmp
xchg
add
std
jns
push
adc
dec
aaa
sbb
sbb
aam
cmp
stos
dec
adc
cmc
insb
sub
push
push
xorb
push
addr16
cld
cli
ja
push
xor
clc
ret
pop
xchg
and
jne
mov
bound
js
into
rolb
xchg
mov
jmp
into
mov
call
mov
sbb
sbb
pop
xlat
fadds
jmp
or
push
arpl
rcrl
cli
mov
dec
shlb
sub
aam
add
test
loop
scas
add
or
mov
xchg
lret
hlt
xchg
test
sbb
add
cmp
mov
sbb
and
arpl
mov
loopne
mov
outsl
ret
jb
sub
test
jno
aad
lods
or
jns
insb
sti
insb
mov
shlb
mov
xchg
push
jmp
jmp
xor
loope
dec
mov
push
imulb
aaa
mov
test
add
adc
cmp
jno
stos
mov
outsl
push
dec
xor
in
dec
cld
xor
insb
inc
push
into
xor
cs
pop
push
add
daa
adc
jb
sbb
fadds
fidivl
inc
movsb
adc
mov
rcrl
stc
or
lods
lret
int3
cmpsl
add
xlat
pop
add
adc
mov
cltd
sub
ret
push
mov
xchg
jo
cmpsb
mov
int3
and
jno
fs
iret
mov
dec
sbb
sbb
fadd
mov
cld
pop
xchg
enter
rorb
add
xor
outsb
sub
pop
xchg
pusha
movsl
jb
sbb
xchg
pop
pop
out
xchg
inc
jbe
push
insl
insb
push
mov
test
mov
pushf
fstl
in
addr16
pop
or
push
imul
jne
shl
outsl
mov
imull
repnz
std
cli
adcb
outsl
mov
mov
or
pop
popf
ss
leave
js
jl
scas
outsl
ljmp
pusha
jo
push
sbb
sbb
push
lret
pop
imul
dec
ja
aaa
test
mov
scas
add
sar
mov
adcb
mov
dec
mov
mov
mov
addr16
or
inc
js
dec
mov
xchg
inc
jnp
mov
push
mulb
cmp
stos
loop
pop
jmp
les
int
mov
and
sahf
test
xchg
add
xor
enter
jbe
dec
daa
pop
cmp
pop
push
out
hlt
pop
loopne
out
xchg
out
popa
dec
sbbl
out
mov
out
aas
out
sbb
hlt
bound
pop
adc
jg
or
bound
xchg
inc
jo
inc
mov
aad
lds
pop
icebp
xor
mov
push
mov
mov
outsl
iret
aaa
mov
dec
xor
addl
jecxz
or
xchg
inc
je
or
scas
out
mov
mov
push
ret
inc
xchg
inc
sti
sub
cmp
leave
mov
adc
loopne
dec
adc
and
pop
cmp
cmp
nop
push
es
mull
sahf
inc
scas
jmp
adcl
and
sub
fistl
fbld
insl
sbb
add
lea
insl
outsb
jmp
xor
cwtl
add
inc
movsb
pop
xchg
push
mov
dec
pushl
fdivs
cmpsl
rorl
lahf
into
mov
adc
pop
cmovae
rcrb
mov
out
shll
xor
push
adc
lods
loope
push
in
xor
push
fs
cld
cmc
mov
std
xchg
scas
mov
test
dec
dec
pop
loop
test
lods
repnz
push
or
xchg
xchg
loope
mov
repz
sbb
push
and
mov
mov
and
pop
xchg
push
push
inc
mov
nop
insb
leave
mov
push
sahf
leave
cmpl
add
push
mov
inc
imull
hlt
xor
inc
fistpll
fwait
jnp
les
mov
mov
add
push
lds
dec
cmp
mov
or
dec
into
lds
fadds
xchg
push
push
xchg
sbb
cs
mov
sbb
je
int3
jnp
arpl
push
dec
xchg
sti
and
imul
mov
outsl
jo
fdivs
push
iret
nop
aad
push
push
push
inc
mov
popf
hlt
add
es
arpl
inc
test
repz
xchg
adc
cmp
cs
movsl
movsb
xor
xchg
cmc
ss
xchg
pop
pop
cmpsl
outsb
lea
xchg
fcompl
js
mov
xchg
mov
add
inc
adc
jb
sbb
rolb
mov
cmp
dec
push
loop
out
and
fidivrs
pop
jo
sbb
mov
cld
or
cmp
dec
sbb
sahf
push
in
movups
fcmovnb
mov
add
add
sub
and
pop
add
test
xchg
int
movsl
sbb
pushw
push
sub
gs
jbe
xchg
add
imul
jo
mov
cmp
sbb
cmp
add
dec
ficoms
pop
mov
cmc
test
cmpsb
add
lock
xchg
dec
or
dec
jno
push
cmp
popf
stos
sbb
add
jb
shlb
adc
sbb
cmp
leave
dec
push
or
mov
and
add
sti
das
fists
dec
cmpl
nop
enter
std
cmp
mov
loope
out
idivl
lods
addr16
cmpb
xor
jno
into
test
or
cmpsl
mov
pop
hlt
test
dec
cld
xor
or
add
adc
mov
mov
push
mov
fldt
mov
mov
jecxz
pop
enter
aad
int
jecxz
xchg
dec
add
add
scas
inc
insl
xor
and
ret
fmuls
out
cmp
pushf
rcrb
vmovsd
clc
je
or
push
mov
pop
push
sbb
stc
test
in
inc
mov
jo
pusha
and
xlat
roll
adc
xor
rclb
and
adc
repz
push
mov
lods
sub
je
dec
ja
lahf
lods
jae
mov
cmp
sub
cld
pop
jl
arpl
into
leave
shrb
xchg
add
mov
sub
or
cmp
cmp
push
xchg
add
xchg
aas
jae
xor
jp
dec
leave
xchg
rcll
lahf
scas
insl
pushl
hlt
push
add
aas
push
or
es
and
pop
movl
and
ja
adc
js
in
sbb
in
data16
insl
mov
xchg
xchg
push
test
pop
xorl
dec
aaa
xchg
mov
mov
push
stos
orl
pop
jp
mov
das
ficoms
divb
imul
add
out
es
jnp
fcoms
imul
inc
orb
or
pop
mov
out
fldcw
jle
popa
mov
mov
out
jge
mov
fs
stos
cmpsl
ss
or
push
ljmp
inc
adc
push
or
xchg
leave
pushf
jmp
and
in
cmp
fucomip
lahf
in
pop
cli
and
sub
fwait
cmp
test
addb
gs
jo
mov
mov
cmpb
lea
scas
jnp
pusha
sbb
xor
push
lcall
push
les
rcll
fsubrl
inc
and
xchg
fistps
mov
xchg
jns
cmp
mov
fcoms
sbb
les
or
xor
sbb
xorl
outsb
sub
sarl
mov
xor
push
adc
loopne
xchg
call
insb
jle
das
out
out
stc
in
dec
inc
fwait
push
fistl
aam
je
mov
fisubl
mov
sbb
mov
xchg
gs
mov
insl
pushf
lea
lahf
push
orl
xor
cmpb
inc
jge
dec
int3
push
xchg
mov
cmp
movsb
mov
orb
lods
pusha
cwtl
sbb
cmpsl
stos
call
mov
iret
adc
jp
dec
rorb
out
mov
sub
pop
lea
call
fldenv
and
xchg
sbbb
out
ljmp
jmp
icebp
cmc
pushf
add
lret
jge
mov
mov
in
sub
xchg
push
movsl
fwait
dec
subb
cwtl
or
inc
cmc
loopne
repnz
and
dec
add
mov
bt
int3
sti
fistpll
cld
sarb
jle
loop
mov
out
test
mov
stc
pop
lock
push
inc
add
dec
jb
jne
scas
push
inc
pop
pop
push
add
daa
cmp
push
les
std
repnz
dec
sti
xor
mov
dec
jge
push
lahf
push
fisttpl
cmpb
idivb
mov
xchg
mov
loop
leave
mov
fcmovnb
popa
ret
sub
iret
pop
in
push
sub
sbb
ja
jp
test
dec
mov
jge
mov
data16
aam
ss
loopne
add
icebp
jmp
and
cmpsl
xor
sub
inc
xchg
ss
mov
mov
push
mov
movl
pop
es
and
js
cmp
and
push
dec
loopne
cmc
in
jp
movsl
and
sbb
ja
push
popf
dec
ja
ja
movsb
mov
popa
jnp
aaa
data16
push
sbb
pop
in
ss
fisttps
orl
sub
cmp
cld
add
sbb
push
inc
adc
xor
mov
testl
and
xchg
rsm
mov
push
daa
xchg
jecxz
in
in
push
xor
jb
js
cmp
neg
or
cmp
inc
loope
divb
mov
cmpsb
push
test
jle
mov
das
xlat
xchg
mov
and
lret
mov
mov
mov
mov
fmuls
shrb
jns
jmp
inc
cli
xor
scas
ds
stc
loop
lds
sub
jae
shlb
xchg
shll
dec
add
or
push
mov
mov
data16
pop
das
mov
mov
adc
dec
xchg
jnp
out
lcall
dec
or
sbb
or
insl
test
lret
cmp
xchg
lods
mov
lahf
das
jmp
shrl
cmp
dec
test
iret
dec
fimull
and
fcmovne
into
jge
pop
adc
sbb
jmp
mov
repz
xchg
dec
test
imul
dec
push
call
push
roll
mov
mov
ljmp
popa
aaa
out
lock
sbb
push
rorl
push
add
dec
dec
incb
jge
and
inc
cmp
or
push
inc
stc
das
repnz
push
mov
insl
xor
jno
sbb
mov
xor
or
jl
repz
loopne
test
mov
cld
or
jge
leave
jge
sub
sub
aaa
and
lcall
jp
mov
pop
fsubrs
dec
fdivr
mov
mov
mov
int3
sub
inc
test
inc
cmp
jae
add
ret
pop
pop
mov
rcrl
cli
mov
ret
and
lahf
cld
hlt
xor
or
add
lea
lods
in
mov
dec
sbb
bound
sahf
scas
insb
add
sbb
add
mov
fisubrs
cmp
mov
sbb
daa
sub
mov
out
addr16
mov
pushf
xchg
dec
test
xchg
xchg
rcl
push
mov
lock
and
xor
movsb
adc
xlat
pop
mov
xor
sbb
jecxz
les
push
out
dec
mov
lret
adcb
pop
shl
jp
jno
cmpsb
mov
in
mov
cs
movsb
jl
scas
mov
inc
jle
inc
insl
iret
mov
xchg
dec
cld
xor
xchg
dec
sbb
std
aad
cmp
or
mov
and
pop
lods
cmp
dec
stos
mov
inc
ja
mov
jmp
fdivs
mov
push
mov
sahf
jp
in
xchg
dec
pop
xorl
ds
cld
fs
xchg
clc
pop
push
add
jl
ret
push
leave
leave
ljmp
dec
fwait
rol
lods
xchg
cmp
sahf
jbe
leave
jae
lods
adc
pop
sub
pop
or
daa
adc
sub
jno
scas
add
jae
outsb
outsl
and
jle
fnstenv
jae
jns
xor
bound
test
pop
js
pop
pop
insl
dec
test
mov
xchg
ja
imull
or
xor
mov
jo
test
andb
scas
xor
inc
sahf
jbe
sbb
mov
cmp
sbb
roll
mov
enter
sar
add
loop
scas
and
subb
stc
sub
pop
push
out
jecxz
ret
ja
bound
and
loop
std
push
stc
add
inc
sbb
ficomps
pop
xchg
adc
fistpl
mov
shrl
jmp
iret
pushf
repz
add
mov
pop
jp
ret
rorl
int
mov
sti
ljmp
xor
ljmp
mov
pop
rcrl
les
push
testb
lods
frstor
call
sub
adc
out
sbb
popf
push
inc
or
push
ja
pushf
pop
xchg
clc
in
aad
shll
sbb
ljmp
lret
cwtl
or
fstl
xchg
roll
iret
sbb
or
sub
idivl
inc
or
and
out
imul
pop
sub
fimull
lds
gs
lods
ss
inc
mov
xchg
dec
sbbb
add
iret
mov
test
aam
outsl
pop
sarb
xor
push
add
mov
loopne
out
pop
adc
pop
xchg
rcrl
add
shll
dec
push
test
lods
in
incb
pop
iret
cli
lret
sub
test
sbbl
hlt
pushf
cld
stos
mov
testb
push
push
fidivl
pop
xor
mov
inc
jnp
push
lods
movsl
cmp
fisubrl
pop
and
es
fisttps
pop
xchg
xchg
aam
test
ret
ficoml
sahf
adc
ret
and
pop
fmuls
fisubl
inc
xchg
mov
loopne
jl
push
add
lcall
bound
or
and
sub
dec
mov
test
mov
mov
or
inc
outsl
daa
arpl
std
rdseed
in
aad
daa
mov
push
and
fcmovbe
xchg
jg
lahf
ficoml
out
imul
mov
push
xor
enter
adc
cwtl
mov
jo
insb
lret
xor
cmp
daa
add
fistps
leave
addl
pop
push
jl
pop
pusha
data16
inc
out
push
add
data16
popf
push
mov
fistl
enter
test
insl
jb
dec
clc
sbb
ljmp
xchg
out
adc
js
arpl
adc
in
enter
pusha
pop
int3
or
jle
mov
cmpsl
fwait
sbb
inc
mov
and
cmpsb
fcmovb
mov
push
in
pop
out
sbb
mov
pop
or
lret
add
popf
inc
fcomps
test
dec
cmp
adc
lret
pop
dec
jne
inc
cmp
scas
roll
push
lcall
adc
dec
mov
jmp
rorb
rorl
jecxz
adc
loope
cltd
lods
jecxz
icebp
mov
mov
jo
add
lcall
push
enter
mov
daa
adc
test
scas
jae
enter
cld
or
and
stc
cmpsb
jmp
movsb
ja
je
adc
mov
lods
mov
xchg
je
stos
mov
push
lock
dec
and
sahf
mov
xchg
jl
ret
ds
xor
mov
mov
jle
adc
fmull
cmpsl
negb
movsl
aam
add
out
insb
rolb
mov
mov
testb
daa
movsl
push
dec
adcb
add
xchg
sub
sbb
sbb
xchg
adc
fidivs
repz
dec
rcr
mov
and
or
and
mulb
fs
lcall
das
add
bound
jne
mov
and
clc
test
lret
pop
xchg
fs
or
inc
jle
push
cmp
cmp
add
dec
inc
cltd
push
icebp
sbb
leave
push
or
xchg
imul
mov
rol
aas
jb
mov
mov
ror
add
mov
add
adcb
cmp
cmpsb
pop
lods
addr16
xorb
lods
movsl
lahf
push
cmpb
xor
roll
repz
stc
cmp
sbb
mov
pop
jle
inc
xorl
sbb
std
mov
pop
mov
stc
xchg
sub
pop
call
jnp
sbb
mov
popf
push
lret
push
fistpl
std
sub
add
adc
mov
or
pop
dec
scas
xchg
jae
push
add
pop
js
mov
jo
aaa
push
and
cmpsb
sub
add
or
mov
sbb
push
cmp
fs
push
out
or
inc
outsb
ret
or
adc
mov
xor
popa
mov
aaa
push
dec
out
bound
int
xchg
test
adc
or
cmp
scas
mov
call
push
or
aaa
fs
or
cmp
mov
dec
xor
test
mov
test
in
popa
in
or
mov
call
push
jae
sbb
xchg
cwtl
cmc
popa
or
xchg
mov
dec
into
push
mov
negb
cmp
outsl
jb
out
scas
gs
lods
cltd
negl
push
mov
fsubrl
mov
sti
in
push
out
stc
add
repnz
sti
loopne
jbe
adc
addb
fldt
xor
andl
jno
stos
in
mov
sub
jp
sti
loopne
in
fidivs
cwtl
cmp
fs
aas
pusha
add
xchg
orl
inc
mov
add
mov
mov
push
in
scas
push
and
lret
mov
and
and
test
pop
inc
cmpsb
lret
loopne
out
das
cwtl
roll
cmp
nop
into
sti
rcrl
xchg
mov
dec
ja
mov
sub
dec
stos
notl
or
scas
fcmovb
testl
sub
lods
mov
xchg
imul
scas
inc
jae
call
repz
inc
jno
lods
data16
mov
cmp
imul
fldenv
lods
mov
xor
lds
xchg
and
and
mov
cwtl
imul
xchg
pop
test
call
mov
js
mov
push
sub
ret
mov
xor
outsl
sub
int3
xchg
loope
dec
xchg
in
dec
lea
nop
cmp
loop
mov
insb
cmp
sar
push
and
xchg
sbb
mov
rclb
enter
mov
shrl
fwait
sbb
popa
scas
jb
ja
sub
lcall
jbe
repz
in
leave
lea
shl
in
mov
jo
flds
push
mov
fwait
call
inc
rolb
lcall
out
cmp
jne
ret
sub
jle
push
dec
jecxz
jp
test
rcrb
aam
stos
loopne
icebp
mov
subb
frstor
mov
and
sti
jle
add
not
mov
mov
or
mov
shll
adc
out
in
stc
loop
iret
push
enter
pop
adc
cmc
sub
xor
clc
and
outsl
sub
loopne
jnp
pop
sbb
and
push
icebp
cmp
push
int
leave
inc
test
and
cmp
in
add
jnp
lds
sub
add
or
cs
jecxz
add
xor
call
pop
adc
adc
inc
push
in
mov
out
call
out
adc
mov
jbe
jle
mov
inc
test
jo
mov
cltd
lea
les
dec
cld
cmp
fstpl
inc
cmp
push
cmp
mov
adc
adc
push
cmp
dec
and
lds
cmp
sub
sub
xchg
dec
xchg
and
mov
daa
mov
push
inc
imul
dec
mov
int3
arpl
out
inc
data16
mov
xchg
jge
push
in
ds
mov
outsl
dec
and
int3
mov
xchg
insb
mov
loope
xchg
enter
jbe
adc
mov
lds
add
loope
dec
adc
sbb
enter
enter
dec
rcrb
mov
or
and
movsl
ja
add
test
dec
daa
cli
ret
push
adc
movsl
sub
lods
andb
cmp
dec
fadds
mov
xor
test
ds
mov
test
push
jp
sub
test
lret
lds
mov
lock
lds
or
mov
or
aas
dec
outsb
outsb
ficompl
pop
hlt
and
sti
pusha
ljmp
and
not
mov
idivl
mov
xchg
mov
push
inc
xchg
flds
das
push
dec
sbb
scas
je
push
ljmp
sbb
fwait
outsl
dec
jg
xor
xchg
test
jo
sub
ret
xchg
out
into
addr16
mov
sub
xchg
pop
mov
insb
xlat
jae
xor
in
jne
es
shl
mov
fistpl
daa
out
cmp
adc
stos
aas
shl
or
cmp
pusha
aas
push
bnd
xchg
pusha
idivl
push
mov
cwtl
in
mov
js
fmuls
shr
xor
add
mov
cmc
cmc
jmp
lock
test
mov
cmp
lock
fisubrs
mov
push
jl
cmp
insb
into
add
sub
in
push
lcall
and
add
inc
and
or
es
mov
in
and
add
stos
mov
push
adc
pusha
xchg
add
outsl
addr16
pop
dec
shr
sub
out
and
and
push
inc
adc
cld
stos
push
jnp
or
test
cmp
into
mov
mov
scas
fcoml
xor
add
dec
outsl
popa
fs
imul
add
movb
leave
mov
rcll
movsb
fwait
dec
pop
sub
clc
daa
pop
jnp
dec
call
cmpsb
push
loop
and
bound
cmp
cs
sbb
orl
out
adc
mov
aad
jl
mov
ss
push
or
xchg
mov
cmp
rcrl
fcoms
jne
lea
jne
cmp
and
rcr
cmc
sub
aad
mov
cmc
test
or
cmp
add
push
xor
mov
stc
cmp
test
mov
lea
je
push
pusha
call
test
jnp
outsl
xor
ret
dec
and
enter
inc
jo
out
movl
adc
jge
fsubrl
cmp
pop
testb
xchg
cmpl
rorl
xchg
into
inc
sahf
mov
call
roll
or
hlt
fsubrp
cwtl
mov
sbb
es
shl
lods
adc
sbb
fwait
pop
fldcw
sbb
xlat
je
cmp
insb
call
cmp
test
imul
popf
jns
loop
inc
xchg
mov
adc
mov
cmp
fsubrl
cmpsb
mov
sub
outsb
sbb
adc
sbb
dec
pop
sbb
sub
or
popf
dec
adcb
push
and
and
cltd
leave
xchg
fsubrl
pop
adc
notl
loopne
adc
fmuls
lds
lods
mov
std
mov
dec
mov
mov
mov
cmp
loop
xchg
into
es
rol
cmp
xchg
popf
call
lahf
pmaxub
or
mov
push
and
popf
jb
inc
fstl
jo
mov
mov
xchg
sbb
adc
mov
test
andl
idivl
inc
or
sbb
xchg
insl
inc
adc
int3
and
cld
dec
leave
imul
jno
add
mov
pop
fistpl
pushf
sub
subl
cmpsl
out
and
sub
inc
aam
or
push
mov
outsl
cwtl
ret
xor
stc
ret
sub
sbb
pop
rcrb
pop
sub
xchg
adc
inc
or
in
cmp
mov
lret
in
mov
int3
jp
jne
inc
arpl
add
push
add
push
sbb
sub
mov
jl
mov
push
xlat
pop
adc
orb
scas
fisttps
arpl
push
and
std
inc
repnz
xchg
call
nop
rcrb
movsb
and
imul
push
inc
xchg
push
push
inc
sbb
mov
outsl
jnp
stos
sub
sub
repnz
sbb
pop
inc
repz
ljmp
test
inc
pop
in
addr16
jbe
jns
test
rcll
ljmp
decl
imulb
clc
lds
stos
push
iret
pop
in
inc
pop
cvtdq2ps
jns
ja
fs
cmpsl
jg
daa
dec
xchg
pop
sub
inc
xorps
cmp
xchg
mov
iret
xchg
push
lcall
mov
shl
mov
or
cmpsl
ja
adc
mov
lcall
out
push
xlat
pop
aad
stos
je
jnp
test
ja
cmp
jae
sbb
jno
data16
sub
jns
pusha
fadds
sub
jnp
loop
and
add
cs
das
cmc
mov
gs
fidivs
or
jne
pop
fnsave
add
sbb
mov
xchg
sbbl
xchg
xor
int3
sub
sbb
mov
enter
adc
cwtl
push
dec
mov
inc
adc
js
jp
outsl
es
jmp
js
mov
imul
inc
sub
or
shll
ljmp
adc
inc
pop
sub
pop
jmp
pop
jnp
orl
jp
lods
xchg
icebp
mov
fisubl
ret
and
pusha
mov
daa
mov
xorb
lcall
mov
out
cltd
add
push
pop
js
mov
stc
push
cmp
pop
adc
loop
pop
ret
std
popa
ret
cmp
or
and
js
jae
mov
jmp
adc
movsl
cli
iret
cwtl
fisttpll
and
into
fistpll
sysexit
inc
rcrb
pop
sub
call
loopne
mov
aam
ret
sbb
sarb
hlt
mov
xor
mov
arpl
add
xchg
pop
es
cwtl
cmpsl
pop
mov
sti
jp
inc
mull
scas
ss
iret
in
leave
jnp
jg
rorl
push
fistps
in
mov
call
push
sub
mov
mov
dec
das
stos
mov
out
xor
pop
adc
ljmp
cmp
sbb
pop
add
or
add
sbb
xchg
cmpsb
xor
adc
stos
jp
sbb
mov
fsts
lret
sub
and
xchg
sahf
jns
or
sahf
insb
inc
adc
mov
loope
adc
cltd
sbb
mov
xchg
sbb
ret
arpl
nop
jae
xor
out
loope
imulb
or
lret
sub
in
xor
push
pop
add
in
xor
cmpsb
dec
iret
popa
jno
or
cld
lret
popa
aaa
mov
cld
iret
lahf
push
add
cmpsb
lods
sub
lahf
mov
popf
push
cwtl
mov
push
out
les
stos
js
pop
ffreep
bound
add
cmp
lahf
daa
pop
inc
and
repz
or
push
data16
xchg
or
pushf
into
mov
outsl
arpl
pop
repnz
aam
xchg
rcrb
and
jp
pusha
scas
sti
fldcw
xor
in
jg
and
movb
sti
lahf
and
lea
mov
sahf
jbe
es
mov
rorl
repz
test
stos
jnp
jg
cld
fwait
aam
nop
xor
sbb
add
sarb
inc
jecxz
cmp
dec
push
enter
cs
int3
popa
adc
and
or
ss
sbb
lret
movq
sub
fs
punpcklwd
inc
mov
push
sub
int
jne
pop
fst
pop
xor
xchg
lods
jge
cs
lea
xor
fldcw
xchg
gs
popa
fwait
loopne
ret
movsb
push
fucom
jbe
outsb
mov
dec
pop
xor
sahf
andb
mov
mov
sbb
lock
xor
mov
jno
jle
pop
sub
xor
jge
mov
xor
lret
mov
sbb
add
test
push
and
mov
in
fcmovnbe
mov
test
push
xor
xor
fs
insb
add
fs
jne
movsbw
movzbl
bswap
cwtl
movb
lahf
movsbw
push
bswap
pusha
lea
call
jo
cmp
cmp
fcomps
test
inc
nop
negl
lock
ljmp
mov
mov
imul
dec
pop
rorl
mov
jo
jle
fildl
popf
push
jmp
scas
scas
inc
stc
es
dec
ret
popa
jae,pn
bswap
mov
inc
xchg
enter
add
push
or
sti
lods
out
dec
xchg
dec
lret
movsb
inc
cmc
push
mov
jae
sbb
lods
je
sbb
cltd
gs
mov
push
adc
fwait
and
into
pop
in
jge
sub
leave
xchg
pop
sub
leave
mov
popf
lcall
mov
ret
mov
daa
loopne
adc
sub
xchg
fildl
insl
stos
popa
cltd
pop
cltd
pop
loope
add
insb
rep
add
das
loope
mov
cs
int3
mov
nop
or
sahf
push
test
or
test
lods
je
xor
inc
mov
cmp
mov
dec
pop
out
cmp
pusha
scas
test
dec
lcall
adc
dec
adcb
mov
sub
aad
aad
xchg
rorl
flds
add
scas
leave
and
and
add
xchg
fs
daa
jge
ds
push
push
xor
jmp
cmpb
lret
dec
icebp
sub
lea
lods
out
xchg
pop
inc
es
mov
ljmp
add
push
push
ljmp
stos
mov
sub
mov
pop
xor
ret
dec
adc
xor
adc
nop
mov
sub
xchg
push
add
sbb
ret
push
sahf
pushl
imul
lret
lcall
adc
mov
mov
stc
das
ds
and
fidivs
dec
jo
xor
imul
mov
dec
stc
cmpsb
cmp
aas
push
cmp
lods
cli
mov
out
pop
imulb
lret
mov
fidivl
or
test
rclb
jmp
adc
mov
es
xor
rorb
test
jno
test
sub
lcall
cltd
jp
mov
push
xor
jle
cmpb
add
sbb
cmpsl
lds
stos
xchg
cmc
repnz
fcmove
mov
ret
cwtl
mov
jae
inc
arpl
pop
mov
int
popa
or
mov
adc
jle
ffree
push
sub
add
pop
pushf
push
nop
arpl
adc
mov
aad
sub
subl
movl
push
push
movw
mov
pushl
pushl
movw
movw
pushl
ret
push
call
push
mov
repnz
push
daa
std
into
mov
cs
out
adc
mov
jnp
test
xchg
lret
pop
xchg
dec
sub
jnp
and
lcall
cmp
mov
jge
sub
std
sub
pop
xchg
mov
jmp
jp
mov
les
loop
icebp
pop
js
jnp
test
adc
jb
pushf
je
pop
jmp
cmc
shrb
das
or
mov
enter
out
aaa
roll
add
fs
jne
movsbw
pushf
movb
movzbw
lea
mov
push
cwtl
lea
pushf
pusha
jmp
adcb
nop
and
jle
xchg
insl
cmp
mov
pop
sub
les
das
popa
sub
lret
mov
mov
lret
mov
pop
sbb
int3
mov
in
ljmp
add
lods
adc
sbb
repnz
adc
sbb
push
mov
movsl
adc
jp
xchg
push
lds
push
pushf
jg
movsb
out
xor
push
sub
out
imul
out
icebp
push
jp
es
mov
adc
es
mov
bound
add
out
pop
dec
pop
cmp
int3
fwait
jb
lea
jae
pusha
jmp
pusha
lea
ja
jmp
rcll
and
mov
or
test
fsubrl
mov
jg
cltd
add
mov
push
aas
ret
inc
mov
mov
lods
adc
bound
mov
mov
sti
sub
push
lahf
inc
rorl
mov
bound
push
sbb
push
test
mov
movsb
mov
stos
and
lahf
rcrb
in
insl
mov
in
outsl
in
jo
imul
daa
jb
dec
fstl
cmpsb
dec
lret
repz
outsb
js
mov
sbb
and
enter
add
sbb
sub
push
push
xchg
adc
mov
cmpsl
js
and
fldcw
add
pop
xchg
ljmp
fs
scas
xchg
pop
movl
push
pop
repz
rorl
push
jne
and
fadds
jle
outsb
mov
negl
stos
or
idivb
xchg
mov
xor
lcall
les
xchg
popa
sub
cmp
lret
shll
lret
test
and
pop
mov
iret
sahf
data16
dec
adcl
int3
inc
push
fwait
push
sub
lcall
jno
adc
mov
ficomps
stos
and
mov
fdivl
xchg
fstpl
daa
into
movsl
xor
rcl
jge
adc
cmp
out
mov
imul
xor
add
rcrl
scas
lock
xor
ja,pn
adc
into
movsl
sub
xorb
xor
pop
stos
jg
sbb
and
sub
rorl
add
mov
and
jns
mov
mov
inc
inc
imul
ja
push
pusha
xchg
and
leave
add
mov
xchg
add
cmp
and
enter
jp
lret
push
das
dec
fwait
arpl
bnd
out
mov
mov
jne
xchg
and
inc
inc
push
sbb
sub
dec
scas
mov
mov
sarl
ljmp
call
js
stc
in
sub
jecxz
cmpsb
mov
push
or
popa
lcall
adc
and
addr16
sbb
xchg
xchg
icebp
rcrb
leave
sbb
and
push
popf
push
pop
fldt
mov
dec
movsb
jbe
sbb
mov
int
sbb
bound
and
ja
push
pushf
cmc
imul
test
pushf
add
pusha
mov
push
pushf
lea
jmp
mov
call
ficompl
xchg
and
rorl
fisubrl
xchg
arpl
cli
shrl
add
mov
fbstp
mov
sbb
push
dec
mov
les
mov
fadd
call
pop
in
fs
adc
in
test
popa
icebp
imul
mov
loop
mov
icebp
idiv
lods
add
ret
movsbw
movb
mov
bswap
push
movsbw
lea
pushf
mov
pusha
movl
push
mov
push
pusha
pushf
pushl
ret
mov
movb
jmp
sub
sub
add
xchg
arpl
shlb
out
xor
inc
mov
mov
out
sub
push
loopne
sub
or
test
les
inc
dec
out
and
mov
adc
sahf
rorb
imul
lods
orb
cld
mov
sub
adc
ljmp
inc
adc
cmc
les
mov
or
iret
pop
arpl
adc
mov
lea
je
jmp
jg
cmp
movsb
sbbb
fsubs
test
rcrb
ret
mov
addr16
mov
dec
lea
repnz
stos
arpl
lds
jo
pop
sbb
inc
arpl
rol
mov
and
cmpsb
addl
rcr
cli
cmpsb
stc
sub
mov
loopne
jae
sbb
into
pushf
outsb
inc
cmp
call
adc
roll
fisubrs
jae
pop
out
mov
lcall
add
mov
pop
incb
mov
dec
mov
mov
add
aaa
xor
addr16
aas
imul
sub
and
fimuls
loope
mov
icebp
jmp
in
cmp
jns
xor
push
pop
imul
mov
pop
jne
punpcklbw
clc
and
repnz
mov
mov
rorb
sbb
jns
pusha
mov
xor
add
jecxz
and
inc
jle
xor
aam
outsb
aas
adc
mov
pop
stos
cmovge
mov
sub
adc
ret
xor
inc
jo
out
ljmp
lret
sahf
addl
aad
js
jg
mov
jbe
lods
shll
leave
push
xchg
aad
bound
cmp
mov
mov
lock
idiv
dec
jle
movsb
mov
xor
push
call
decl
add
cmp
fidivs
xor
imul
sub
leave
stc
leave
inc
mov
in
fs
jp
mov
fadd
lods
pusha
cwtl
popf
inc
out
lock
lret
fidivl
inc
mov
jnp
jge
cmp
shll
int3
movsb
cli
leave
xchg
arpl
hlt
rcll
sbb
jnp
stos
adc
int3
data16
jne
push
fnsave
mov
or
cmpsl
enter
adc
lods
fildll
mov
outsb
shll
filds
push
mov
sbb
out
xor
std
mov
ret
push
scas
jge
out
dec
aaa
cwtl
scas
and
arpl
push
add
pushf
mov
dec
xchg
fbstp
cmp
iret
pushf
push
or
hlt
lock
nop
outsb
or
std
daa
cmc
lret
ds
mov
cmp
cmpsb
cmpsb
fcmovnb
sub
xor
jmp
xchg
jg
sarl
rcrl
lock
pop
and
out
leave
push
push
divb
sbb
fistpll
aam
push
popf
push
jge
lods
mov
repz
cmp
cld
xchg
ds
mov
mov
mov
xchg
dec
lods
or
pop
enter
pop
jno
gs
xchg
jl
jecxz
jae
cmpsl
lret
adc
iret
cltd
ljmp
movsb
ja
adc
mov
loop
pop
sub
insl
sti
add
and
gs
popa
xor
rcrl
mov
test
lods
loopne
mov
in
fbstp
push
aas
hlt
sub
inc
adc
xchg
out
in
gs
mov
add
inc
ret
stos
or
xlat
bound
cmpsb
dec
out
rolb
stc
ljmp
dec
mov
scas
inc
daa
in
xchg
ret
push
ja
shrl
jmp
lea
cli
leave
mov
lcall
daa
out
sbbb
leave
popf
xor
aad
orb
aaa
enter
xlat
pop
inc
add
clc
pop
cwtl
js
pushf
jmp
xchg
sbb
std
fs
jno
xor
jle
imul
insl
sbb
imul
push
xchg
add
lods
mov
mov
xor
mov
jae
adc
leave
push
loope
jle
and
int
jo
adc
cmpsl
xchg
movsb
inc
add
data16
push
fwait
and
pop
xchg
insb
inc
adc
scas
orl
rcll
test
dec
xchg
xor
rolb
addr16
cmpsl
scas
xchg
stos
fxch
and
or
arpl
inc
fstpl
mov
enter
jae
pop
sub
das
mov
mov
pop
dec
pop
push
jle
mov
sub
lret
xchg
pop
xor
shrl
das
or
mov
jl
fwait
and
loop
out
ret
cmp
fsubs
addr16
or
sti
fld
and
test
mov
sub
jp
jnp
sbb
cmpsl
cmp
dec
scas
push
repnz
dec
cli
aas
mov
cmpsl
insb
insl
sub
and
inc
adc
test
loop
shr
das
hlt
mov
imul
mov
movsl
lods
cmp
xchg
jmp
xchg
pop
daa
test
and
cmp
es
scas
pop
iret
lcall
stos
jle
or
cmpsb
ja
and
aaa
stos
jns
push
push
test
movsb
iret
lcall
cmp
xchg
adc
rclb
mov
cmpb
adc
adc
iret
repnz
fistl
inc
adc
es
jl
sub
and
sbb
cmc
xor
int3
popf
jne
push
cli
into
lcall
stos
in
or
loopne
xchg
popf
and
roll
ljmp
ss
inc
ret
or
stc
inc
mov
mov
call
jg
and
ficoms
sahf
xor
std
mov
mov
mov
rcr
icebp
push
pop
cmp
dec
xlat
pop
pop
imul
call
push
cmp
xchg
mov
pop
push
out
xchg
addr16
mov
jecxz
pop
pusha
lea
jne
cwtl
bswap
sub
neg
jmp
dec
mov
or
in
out
imul
fstpt
dec
xchg
aad
loope
mov
mov
pop
cmp
or
or
push
xor
dec
and
enter
adc
jl
popf
and
lret
cwtl
pop
cs
mov
xor
notl
iret
and
je
xlat
ja
movups
and
adc
adc
mov
pop
and
add
dec
inc
imul
mov
xor
movl
push
pushl
mov
lea
jmp
mov
int3
xchg
int3
stos
sbbl
rorl
call
ljmp
call
push
xchg
sub
mov
call
add
stc
repnz
xchg
std
movsb
iret
xorl
outsl
int3
fucom
gs
mov
mov
shrl
sarl
arpl
fdivs
ret
xor
jg
push
in
xchg
popa
xor
iret
cmpsb
mov
push
loop
or
dec
push
jge
pusha
lea
jb
push
pusha
call
pusha
lea
jne
pusha
mov
pushl
test
cmc
cmc
add
pushf
test
lea
jo
bt
movzwl
and
sar
mov
pushf
bt
add
call
rolb
int3
stos
cmpsb
jge
sub
mov
loop
add
pop
mov
add
inc
mov
inc
cli
mov
push
mov
stos
inc
repnz
xchg
lds
ffree
mov
dec
test
addb
and
mov
mov
inc
test
shr
cltd
mov
insb
mov
or
and
daa
add
mov
push
and
shll
pop
jne
icebp
mov
movzwl
bsf
sar
mov
cmp
bt
jmp
sub
stc
cmp
pushf
mov
lea
ja
stc
imul
call
or
pushl
pop
loopne
fwait
jb
add
mov
imul
adc
mov
addr16
push
mov
push
cmpsl
pusha
xchg
insb
loope
xchg
xchg
sti
ljmp
push
sti
mov
xchg
cmc
dec
xchg
or
cmp
push
mov
and
jo
push
mov
lock
popf
mov
mov
and
xchg
xor
test
sahf
jmp
in
mov
push
sub
mov
dec
test
pusha
insb
sahf
and
sub
sub
shrl
mov
pop
inc
lods
fists
fstps
jp
mov
clc
sub
stc
mov
lret
adc
lret
data16
mov
and
loopne
leave
pop
in
or
aam
jg
push
or
inc
out
pop
add
adc
mov
mov
xor
insl
xor
jno
jge
mull
repz
cltd
call
loopne
push
cmp
inc
or
push
sub
insb
ss
add
push
sub
or
pop
call
rorb
loope
int3
mov
sbb
mov
rcrl
xor
test
pop
je
cli
mov
mov
in
dec
push
xor
cmc
jns
std
clc
sub
test
addr16
mov
loop
lahf
orb
jecxz
outsb
jbe
mov
cs
sti
and
js
xchg
fcomps
sbb
mov
push
pop
ljmp
sub
mov
and
xor
movsb
jge
and
leave
cwtl
push
test
mov
mov
imul
sbb
outsl
adc
jb
adc
inc
ffreep
jl
or
pusha
and
push
shlb
or
mov
insl
adc
add
sub
push
xchg
jmp
mov
inc
and
inc
inc
out
stos
jg
loope
repz
jne
push
pop
ljmp
cmpsb
mov
bound
repz
adc
enter
adc
lds
lock
int3
ja
hlt
shlb
es
loopne
int3
cwtl
leave
mov
leave
xchg
bound
lock
add
and
or
dec
inc
mov
ret
and
inc
or
lea
jge
fistps
cmp
jle
repz
cmp
sub
fucomip
pop
jmp
jb
push
mov
fstpt
ja
push
mov
sub
inc
mulb
push
les
sub
cmp
in
lea
fcompl
lret
push
mov
push
xchg
jne
subb
call
adc
mov
jbe
dec
test
push
out
or
add
imul
inc
sbb
xor
xchg
push
fwait
into
mov
mov
mov
sbb
mov
movsb
jl
push
inc
add
sbb
and
daa
xchg
gs
inc
fucomi
fsubrs
cmp
out
aaa
test
addr16
mov
inc
or
in
enter
lea
idivl
addl
popf
adc
testb
lea
jne
mov
mov
movb
movzbl
push
lea
mov
bswap
lea
push
movsbw
lea
call
push
iret
jecxz
int3
and
mov
dec
push
jmp
sbb
scas
mov
xor
scas
dec
mov
mov
add
adc
repnz
std
sub
pusha
sub
insb
sahf
sbb
or
jmp
sbb
jl
or
bound
cmp
ljmp
sbb
sbb
add
add
cmp
jmp
sbb
mov
or
test
dec
pop
out
rcrb
mov
cmpb
inc
loop
int3
movsl
test
cmp
loop
mov
sti
int3
cmpsb
clc
xchg
dec
jne
xchg
pop
or
mov
and
mov
scas
movsl
or
sub
cmp
push
xor
popa
loop
jge
sub
out
mov
xchg
or
pop
nop
mov
into
pop
mov
cmp
mov
mov
xchg
es
out
push
in
loop
add
wrmsr
mov
pop
lods
cli
int3
sbb
xchg
pop
and
iret
sahf
gs
and
pop
cmc
out
xor
and
sbb
mov
push
cmp
pop
sub
rcrl
inc
fsubl
pushf
into
in
mov
je
addb
jg
xor
lods
dec
adc
xorl
cmp
sub
dec
loopne
xchg
cmc
mov
mov
js
push
clc
mov
and
imul
pop
sbb
cli
std
pushf
sbb
xor
neg
sahf
mov
outsl
xchg
dec
push
ds
xor
sar
enter
cltd
imul
test
cmp
out
and
mov
sbb
cmp
jmp
pusha
call
push
int3
pop
xchg
jbe
pop
repnz
popf
mov
dec
popa
addr16
and
sub
aam
jns
sbb
mov
add
mov
in
push
fisttps
dec
mov
xchg
mov
sub
xchg
mov
lcall
aam
je
sbb
lds
xor
lahf
sbb
add
xchg
push
aad
push
adc
mov
mov
mov
fmull
aaa
in
dec
xchg
ljmp
or
sub
sub
mov
xor
push
adc
adc
sub
jg
fldcw
jae
add
adc
test
clc
push
in
inc
sbb
mov
popa
sub
shll
pushf
xchg
cld
test
lea
jae
jmp
addl
js
outsl
inc
sbb
mov
inc
xchg
push
mov
jmp
adc
jnp
xchg
sbb
inc
sbb
lahf
jmp
adc
mov
dec
add
add
testl
pushf
in
notb
jle
flds
dec
outsl
cmpb
arpl
loope
add
xor
arpl
mov
mov
cmp
pop
scas
pop
out
push
fmuls
xchg
lcall
inc
inc
repnz
pop
sti
pop
fsubrl
adc
gs
jl
adc
dec
popf
jl
inc
sub
icebp
sti
shlb
loope
pop
movsl
xchg
lea
outsb
ret
popa
jns
cmp
jns
out
sbb
xorl
mov
jl
add
in
mov
mov
jne
daa
orb
mov
fwait
in
mov
lcall
mov
xchg
rcrl
shlb
in
daa
gs
lcall
mov
inc
add
insl
mov
ljmp
xchg
out
sub
adc
faddp
mov
push
dec
xchg
scas
or
add
addr16
pop
and
cmp
cltd
out
js
cmp
dec
dec
dec
daa
or
in
ret
pop
nop
cmp
xchg
pop
inc
add
shlb
xor
sub
pop
cmpsb
out
shl
jg
fisubl
movsl
movsl
in
cmp
push
push
cltd
loope
cmc
imul
ror
sbb
fmull
push
das
pusha
fwait
rolb
into
pushf
insl
mov
adc
lds
lret
stos
das
and
incb
fwait
out
xchg
imul
daa
cmp
ljmp
out
int3
jae
addr16
adc
stos
jbe
psubsw
add
ds
out
shlb
fmull
xor
inc
cmp
jmp
jge
mov
insl
pop
mov
lea
jnp
or
jg
xor
movsb
push
lods
and
jecxz
je
adcb
cmp
arpl
xchg
bound
ds
bound
mov
cmp
out
int3
int3
and
and
rorl
add
movsb
mov
stos
xlat
das
and
data16
add
lods
sub
mov
cmp
fbld
inc
xchg
add
sub
adc
mov
add
jnp
mov
push
and
mov
sti
jecxz
lret
sbb
jo
push
lock
std
std
lea
dec
ret
jb
sbb
lcall
insl
rcrl
pop
sbb
jo
dec
cmp
jge
mov
dec
stc
and
aam
pop
rolb
adc
test
mov
pop
add
dec
mov
cmp
cmpsb
add
in
mov
hlt
or
add
jmp
adc
ds
je
sbb
mov
shlb
imulb
arpl
test
jb
ja
xlat
add
and
inc
cli
es
or
dec
std
sub
jl
xchg
sahf
jns
jmp
lret
or
stos
push
leave
sub
dec
push
sbb
inc
test
cmpsl
mov
push
rorb
sti
xchg
xor
stos
es
xchg
jecxz
orl
xchg
arpl
push
push
rcrb
data16
jmp
jg
sub
and
ficoms
sbb
into
sahf
outsl
inc
pop
out
inc
frstor
divb
add
dec
sbb
push
lret
sbb
pop
and
add
lods
mov
pop
cli
ficoml
jbe,pt
jmp
add
cld
iret
jp
jbe
jge
lods
jle
inc
cld
dec
pop
repz
sbb
lods
hlt
andb
mov
stos
sbbl
mov
fisttpll
add
sub
scas
jmp
pushf
pushf
pushf
mov
pushf
pushl
ret
pop
call
push
mov
adc
lods
jge
sub
int3
lcall
adc
push
mov
xor
sti
test
test
dec
sahf
jnp
mov
in
jae
lods
fsubs
rol
mov
fcmovne
push
xchg
inc
jne
nop
outsb
adc
aad
mov
cmp
das
jp
mov
add
insb
mov
gs
sub
fldenv
dec
js
inc
lcall
aam
cs
jg
xchg
fcompl
in
or
mov
xor
test
movsl
sub
shll
mov
sub
and
jle
xchg
jno
add
mov
lods
mov
clc
scas
bound
lock
jae
outsl
jp
cli
xor
sbb
cmpl
fbstp
jg
add
imulb
push
nop
pop
les
inc
push
jle
cld
clc
fwait
mov
sub
sub
in
mov
shlb
pop
hlt
cmp
push
mov
push
bound
adc
aam
cmp
pop
cmpsl
movsb
out
lods
std
out
sti
sbbl
cmp
rcrl
sahf
push
push
nop
sbb
or
or
cmp
adc
int3
fildl
fldcw
fwait
imul
in
xchg
clc
clc
mov
inc
stc
fcoml
fcmovu
jp
stc
jno
dec
push
sub
sub
pop
xor
inc
gs
and
pop
sbb
pop
enter
sub
popa
sbb
stc
mov
idivl
shrb
or
rep
push
incl
fcomp
add
sub
mov
nop
push
mov
cmpsl
js
pop
lock
scas
lods
pop
sarl
xchg
ret
sbb
dec
repnz
pushf
pushf
lea
jne
dec
bswap
rcr
mov
and
btr
inc
sub
movsbl
pusha
pop
sbb
lea
cmc
stc
cmp
bt
sub
clc
pusha
cmp
cmp
pushl
popl
cmp
cmp
cmp
bt
cmp
push
jmp
cs
cmpsl
ljmp
lods
jg
sub
leave
cltd
addr16
faddp
cli
repz
js
ja
cmp
adc
and
or
sbb
in
inc
lret
notl
inc
inc
les
mov
fs
xor
jmp
push
mov
add
pop
dec
subb
mov
push
or
movsl
and
fs
add
ss
xchg
inc
jns
sbb
stos
or
std
sbb
xor
sbb
sahf
push
push
mov
pop
dec
adc
jmp
adcl
xchg
addr16
and
mov
lea
int3
jb
arpl
pop
mov
rcrb
std
das
push
test
cmpsb
add
scas
out
inc
enter
xchg
je
pop
xor
into
add
jmp
push
jle
mov
std
idivl
sbb
mov
loopne
flds
xor
jbe
pop
mov
mov
xor
mov
stc
and
test
mov
pop
hlt
data16
adc
icebp
rorb
dec
xchg
xor
jp
mov
xor
xchg
rcrb
cli
push
es
cltd
fs
scas
inc
test
pop
insb
inc
or
cmpb
cmp
push
clc
cmp
movb
pusha
call
mov
aas
in
and
push
jae
push
in
les
stos
ja
stos
inc
cmp
push
xchg
dec
les
jo
cmp
sub
mov
adc
or
les
add
fsubl
in
dec
xchg
arpl
lds
mov
cmpsb
pop
or
mov
cwtl
pushl
jmp
pop
aam
in
and
and
ljmp
pushf
outsb
aas
or
jg
mov
dec
xchg
sub
add
inc
ss
adc
ficoms
loope
and
nop
and
movsl
sbb
push
rol
mov
aas
mov
mov
xchg
mov
ss
ds
cs
ljmp
jg
int
fdivs
aaa
ja
sbb
std
lea
int3
adc
xor
fldcw
mov
dec
push
push
cmpsb
lcall
inc
dec
out
and
mov
mov
int
out
cmpl
push
icebp
in
xor
mov
pusha
in
sub
aaa
lock
push
mov
mov
pop
adc
push
lcall
fiaddl
adc
add
repnz
sbb
mov
mulb
cld
les
push
orl
and
mov
addr16
in
jl
mov
jne
push
cli
xlat
mov
pop
pop
pop
ss
lock
subl
xor
shr
jecxz
jmp
and
inc
sbb
mov
cmp
aam
push
test
std
mov
cmpsl
add
xchg
loope
pop
pop
jp
enter
shll
dec
movsb
pop
xchg
and
xchg
xor
test
ja
dec
push
adc
ljmp
stos
mov
out
add
xchg
jno
xchg
gs
xchg
je
push
hlt
in
adc
mov
sub
jle
test
xor
lods
orb
mov
jecxz
sbbl
push
scas
or
bound
adc
std
into
and
xchg
out
adc
dec
icebp
fmuls
fistps
es
pop
stos
stos
fisttpll
xor
loopne
pop
psrad
lds
int3
clc
mov
aas
stos
xchg
leave
mov
xor
outsl
in
lds
addl
mov
jae
xor
cmp
movsl
stos
inc
nop
movsb
scas
sub
push
push
movsl
sub
adc
lds
jmp
push
sbb
xor
aam
jo
sbb
mov
bound
pop
adc
sti
stos
loop
add
jecxz
sldt
clc
call
mov
setge
lea
pushl
movl
jmp
inc
not
push
pusha
not
inc
cmp
dec
pushl
xchg
cwtl
or
aam
mov
bt
seta
mov
mov
bt
xchg
rcr
shld
bsr
mov
cmc
push
cmp
sub
pushl
rep
mov
call
jbe
sbb
and
push
jle
rclb
jo
xchg
sub
push
jecxz
scas
or
int3
xchg
sbb
ss
xchg
stos
mov
das
xor
xor
lea
add
data16
out
rcl
xchg
call
xor
sub
repnz
jbe
push
pop
repz
pop
das
add
stos
mov
adc
lea
aam
pop
test
mov
icebp
and
imulb
or
cmpsl
js
and
leave
cwtl
pop
pop
icebp
push
sub
or
and
dec
pop
mov
adc
iret
fcoms
int3
mov
pusha
sbb
pop
fstps
insl
int3
iret
sbb
imul
sti
cs
xchg
aad
pushf
es
xchg
int
xchg
push
xchg
xlat
clc
push
or
out
cmp
pop
xor
lret
fwait
je
push
ss
out
cltd
push
jl
mov
lock
cmp
movsl
jns
and
int3
lcall
mov
pop
pop
sub
sbb
adc
push
shr
insb
cltd
addr16
mov
in
repz
cmpsl
jns
sub
mov
mov
enter
or
loop
jb
lcall
ficompl
scas
cmc
out
hlt
call
sub
fpatan
out
push
sbbl
cmp
aad
jae
sbb
add
pop
mov
je
and
mov
mov
fldcw
into
in
comiss
or
pop
sub
lcall
stos
popa
mov
xchg
push
into
mov
cld
stos
in
pop
add
js
jge
cmp
jge
or
cmp
sub
andb
std
cli
shlb
jo
adc
aaa
hlt
in
hlt
pop
jl
jns
and
out
mov
jl
pop
faddl
mov
sbb
push
sar
mov
mov
aaa
and
add
into
in
mov
shl
mov
pop
and
jecxz
sbb
mov
mov
fs
pop
fists
dec
or
push
sub
clc
bt
cmp
cmc
cmp
pusha
pushf
lea
jae
pushf
pusha
pusha
lea
jmp
push
jge
repz
lret
add
mov
push
sub
aad
insb
xor
fld
loope
mov
xor
xlat
push
sbb
cwtl
in
fistl
mov
jo
ds
sub
push
lahf
dec
jge
xchg
pop
cwtl
push
pop
fbld
inc
adc
xlat
lret
dec
jnp
jecxz
lret
adc
notl
stos
or
rcrl
sbb
js
jecxz
cmovbe
and
sub
mov
xchg
fsubs
aam
jle
and
repz
jnp
inc
jns
xchg
imul
add
je
popa
jbe
inc
imul
add
adc
and
push
gs
mov
xchg
adc
dec
iret
push
into
add
xchg
stos
movsb
or
push
push
add
mov
aas
imull
add
jb
jl
add
xchg
rolb
nop
pop
mov
je
cmpb
fst
mov
xor
xchg
pop
adc
adc
jp
pop
sub
sbb
mov
pop
cmp
aam
js
xchg
cs
push
sar
dec
sbb
pop
jge
and
lods
fildll
lea
dec
sahf
cli
int
sbb
ss
stos
loopne
sub
lret
int3
pushf
cld
adc
in
inc
xor
jle
stos
mov
stc
mov
pop
xor
jmp
cmp
adc
or
mov
cmpsl
jle
push
xchg
mov
pop
sub
std
std
test
xor
push
cmpb
stos
ret
enter
arpl
pushf
mov
pop
loopne
xor
add
jge
jl
in
clc
dec
dec
adc
aam
push
into
add
in
and
test
xchg
pop
add
mov
inc
cmpsb
shlb
xchg
push
es
dec
cmp
lds
jb
and
jmp
sbb
stos
cmc
and
pushl
cld
ret
ds
stos
xchg
cli
push
out
adc
loope
sti
daa
hlt
outsb
xchg
repz
std
pop
push
je
xlat
pop
mov
mov
pop
rclb
fucomi
push
mov
or
gs
push
pop
sahf
cmp
nop
or
or
or
js
xchg
pusha
cs
shrl
fiaddl
and
xorl
mov
and
je
jmp
jmp
mov
movb
pushl
ret
jb
out
hlt
and
cmp
adc
mov
mov
pop
repz
pop
mov
jnp
bound
mov
repz
sti
cltd
fists
mov
mov
mov
aas
sub
pop
adc
dec
in
stos
outsb
cmp
cwtl
and
int
cmp
cmpsb
movsb
inc
lock
dec
jo
sub
shl
xlat
sbb
fmuls
loop
aad
int
sub
mov
pop
sub
jmp
adc
shll
lahf
cmp
pop
imul
loopne
jo
and
mov
and
mov
rcrl
adc
ja
xor
xchg
add
cwtl
in
and
jl
nop
jae
repnz
mov
pop
jae
sub
loope
dec
and
sub
mov
stos
sub
sub
cli
repz
stc
xor
fidivl
test
mov
dec
outsb
loop
testb
dec
ret
shrb
stos
cmp
xchg
out
xchg
bound
iret
movsl
jb
or
rorl
adc
mulb
jno
xchg
push
loopne
mull
dec
jle
adc
test
mov
divl
and
add
inc
sti
repz
mov
sti
out
imul
addr16
mov
in
mov
popa
cwtl
pushf
push
inc
stc
adc
out
jle
clc
ljmp
mov
aaa
pop
pop
mov
adc
jmp
cmp
mov
push
jne
mov
into
lcall
xchg
bound
in
mov
push
and
fnsetpm(287
loopne
out
inc
jnp
mov
jmp
pusha
test
pushf
mov
pushf
lea
je
push
test
cmp
add
pusha
bt
cmp
push
lea
jb
jmp
mov
sub
mov
push
and
mov
iret
test
push
cmp
pop
pusha
mov
ret
jne
jbe
mov
cltd
mov
shrb
clc
insl
mov
push
movsb
les
push
xor
pop
cld
mov
stc
dec
das
lret
and
adc
sbbb
fidivrs
mov
outsl
inc
sbb
popf
outsb
cmp
lock
mov
aas
out
mov
mov
into
aaa
sbb
in
out
xchg
xor
ret
xor
sub
push
add
ds
je
add
pop
cli
push
scas
test
push
or
popf
fistl
dec
mov
lahf
mov
push
scas
mov
mov
sub
int
aad
push
lahf
or
insb
adc
cmpsl
and
dec
adc
daa
cld
shrb
push
pop
xor
cmc
mov
call
xchg
adc
stc
and
outsl
sahf
jae
push
out
xchg
in
xchg
jno
mov
outsl
pop
pop
lea
hlt
jnp
popa
xor
pop
popf
std
mov
adc
clc
rcrl
pop
aad
ficomps
sbb
nop
lock
dec
dec
mov
mov
sbb
sbb
push
sbb
push
pop
xor
cmp
xor
shl
sahf
out
in
fildl
into
inc
bnd
push
or
xchg
addr16
lods
ss
adc
test
out
ret
xchg
popa
xor
out
ss
xchg
icebp
es
push
lea
call
clc
cmp
jmp
lea
je
bt
sub
call
ret
xor
clc
and
xchg
mov
jmp
mov
test
in
cvtpi2ps
sbb
mov
mov
aas
push
push
enter
lret
sub
pop
fstpl
push
jnp
call
ja
or
fwait
ror
nopl
fstl
jle
and
rorb
add
xor
inc
adc
sahf
scas
dec
fwait
sti
sbb
sbbl
rcrb
mov
test
xchg
aas
mov
push
inc
pop
in
mov
out
rolb
or
xlat
lcall
dec
inc
pop
mov
into
xchg
aaa
xchg
pop
enter
sbb
sbb
mov
inc
ljmp
and
or
push
aad
inc
mov
ret
out
loop
cld
int
js
sbb
dec
mov
mov
leave
pop
sti
and
std
shll
jle
sbb
sbb
push
inc
jnp
pushf
xlat
xchg
cltd
jp
mov
ss
rcll
mov
xchg
int3
dec
addr16
mov
repnz
lds
pmullw
sub
adc
lea
gs
lea
cmpsl
mov
sbb
adc
and
cmpsl
jo
push
fisubrs
dec
fsts
jno
jbe
leave
sar
int3
sub
adc
mov
pop
pop
jmp
adcb
in
mov
fidivrs
dec
xor
lds
jne
faddl
call
inc
sub
and
inc
inc
jno
rcll
mov
push
int3
add
mov
inc
mov
das
and
int
repnz
lret
subb
or
cmp
sbb
cmc
cmpsb
test
sub
cmp
xor
jle
stos
xchg
mov
adc
dec
add
cmp
and
cmp
scas
pusha
call
mov
int3
sahf
enter
add
xchg
gs
cli
int3
pushf
fs
in
or
dec
outsb
shlb
cld
iret
popa
mov
pop
mov
xchg
testl
cmp
cmpsl
andb
cmp
jmp
xchg
sbb
in
enter
cs
sub
movsl
icebp
andl
loopne
add
lahf
push
mov
das
mov
or
cmc
sub
fs
jne
jmp
test
cmp
pushf
lea
ja
call
bt
shr
mov
push
jmp
stos
push
mov
movb
lea
jmp
loopne
jae
and
mov
leave
cmpsb
jl
adc
or
mov
popf
aam
and
das
adc
lret
shl
mov
mov
jmp
iret
mov
or
jnp
cmpsl
mov
dec
rclb
mov
mov
adc
jmp
bound
lods
sti
fildl
hlt
aam
xchg
pushf
xor
nop
pop
mov
push
enter
movsl
xchg
xlat
sub
sbb
jns
dec
sbb
mov
shll
inc
pop
dec
push
cmp
std
and
and
std
iret
fwait
data16
in
mov
repnz
jg
jns
popf
aaa
cli
adc
push
loope
insb
jnp
nop
fimull
cmpsb
daa
or
je
push
adc
stos
aad
and
mov
mov
mov
mov
dec
adc
adc
rorl
sbb
jb
sahf
adc
stos
mov
add
repz
jns
lahf
jo
inc
mov
cmp
in
mov
dec
inc
push
pusha
movsl
push
mov
int
ja
es
mov
fsubr
call
push
or
and
mov
popf
outsb
cmp
lret
inc
and
les
test
push
mov
iret
aaa
stos
inc
repz
dec
sbb
std
mov
pop
or
fildll
std
and
hlt
lcall
xchg
aad
jle
cmp
sub
test
stos
cmp
mov
dec
pop
fbld
idiv
mov
mov
pop
pusha
mov
lea
ja
or
sub
and
or
add
movsbw
pushf
mov
rcl
test
bt
push
mov
jmp
add
inc
js
je
jb
arpl
jae
push
lea
jne
push
lea
movb
movsbw
call
iret
dec
inc
jmp
cmpsl
loopne
nop
bound
pop
mov
jae
ja
xchg
add
adc
sbb
das
lock
push
cs
out
incb
arpl
and
and
sti
jno
inc
loopne
sbb
ss
data16
jecxz
cld
mov
adcl
and
rclb
add
mov
sub
fdivl
sahf
xchg
inc
out
icebp
jl
add
cmp
xor
pushf
pushf
lea
je
test
stc
jmp
sub
imull
cld
fsubrs
cmpsl
jbe
and
push
mov
or
xchg
cs
adc
ljmp
repz
xchg
and
add
xchg
xlat
ljmp
gs
xchg
push
add
mov
push
stc
das
and
mov
sub
inc
dec
pop
cmp
ljmp
and
je
int3
lods
mov
mov
push
xchg
bound
xchg
add
cmpsl
mov
sub
std
fstpt
and
popa
nop
pop
and
ret
sahf
jne
sbb
mov
mov
xchg
shlb
sbb
test
into
fistpll
add
repz
imul
ret
pop
insb
jae
dec
insl
sub
push
sarb
adc
inc
lds
in
mov
sti
and
pop
sbbl
inc
sbb
sahf
jle
sub
xlat
pop
pop
loope
dec
jg
lcall
add
cmp
jmp
push
xchg
adc
mov
lret
cmpsb
sbbl
pusha
or
or
adc
cmp
pop
cmpsb
rcr
xor
or
mov
fcompl
adc
lods
fidivs
outsb
popa
pop
js
adc
cmp
fucomip
pop
sbb
je
add
add
push
mov
sbb
mov
or
jmp
pop
test
out
icebp
cmp
inc
adc
mov
sub
cmpsl
sbbl
ror
repnz
or
mov
idiv
add
push
push
js
arpl
gs
add
mov
out
shll
nop
fs
cmp
in
mov
das
fbld
aas
push
push
mov
mov
js
sahf
xchg
je,pt
mov
jg
mov
fmuls
call
popa
test
stc
clc
ret
sub
jg
insb
rcrb
xchg
xor
push
push
scas
and
test
push
mov
jae
decb
mov
jb
aaa
push
in
adc
sub
in
orb
leave
cwtl
insb
cmp
cmpsb
xchg
pop
gs
nop
pop
xor
pop
jbe
and
mov
mov
lea
cld
iret
cltd
movsl
popa
loopne
dec
subl
lods
fstpl
push
mov
sbb
test
cmp
sub
cmp
jle
pop
xchg
sahf
sub
push
imul
test
iret
inc
and
add
push
pop
daa
xchg
add
jno
push
repnz
leave
xchg
jb
inc
cltd
jo
lea
je
cmc
cmp
call
push
mov
adc
pop
rcr
sub
shrd
mov
bt
mov
cmc
pushf
sub
cmc
pushl
popl
pushf
cmp
jmp
adc
pushl
pushl
ret
sbb
int3
and
idivb
and
daa
jp
orl
push
into
sbb
sub
mov
pop
sbb
loope
or
xor
das
mov
repnz
in
shl
bt
pop
dec
push
jae
int3
fwait
pop
mov
cmp
out
fldcw
cmp
lret
sbb
xor
into
sbb
adc
mov
xchg
jmp
jne
inc
xchg
lods
shrl
xor
sbb
stc
pushf
ficoml
xlat
imul
ret
and
xor
adc
test
dec
sbb
mov
gs
loope
out
and
arpl
or
cltd
jp
bound
xor
test
stos
fstp
push
sbb
sbb
push
lds
aas
pusha
pop
cmpsb
call
aam
mov
adc
test
or
popf
loop
in
cmp
loope
jnp
adc
rcrl
xchg
imulb
js
mov
je
rol
sar
aad
or
xor
sar
add
mov
aas
mov
movsbw
shr
mov
btc
rcr
ror
mov
pushf
clc
stc
or
pusha
pusha
push
push
lea
je
movsbw
sub
bswap
add
mov
pushf
and
pusha
sub
shld
cmc
shrd
shr
cmc
rol
shrd
mov
movb
shld
btr
add
rcr
add
sub
or
adc
btc
mov
bt
jmp
cmc
clc
jmp
stc
stc
add
pusha
jmp
ss
daa
push
and
mov
into
cltd
outsb
dec
and
pop
loope
sbb
nop
scas
inc
repnz
cld
xchg
mov
mov
sub
jno
add
nop
imul
inc
aam
xor
ret
rol
out
push
cmc
ds
lret
push
pop
rorb
jl
ss
subl
cmpsb
jbe
sub
mov
ret
adc
lds
roll
fdivl
dec
pop
jmp
sti
shll
push
push
lods
repz
xchg
pop
daa
out
mov
xchg
push
push
std
push
add
or
sti
sbb
repnz
xchg
frstor
dec
and
lret
popf
popa
sub
enter
cmpb
or
pushf
imul
pop
xchg
arpl
dec
sub
in
jge
sub
leave
jg
pop
xchg
fs
xchg
jmp
adc
stos
mov
jno
mov
add
mov
add
in
dec
lahf
int
bound
cmpsl
rorl
mov
ljmp
leave
xchg
mov
sub
rcrl
xor
push
lea
mov
popa
aam
ficoml
mov
mov
xor
add
mov
cmp
jmp
or
arpl
aas
mov
push
outsl
les
mov
xor
call
call
in
pop
inc
mov
and
call
test
dec
mov
cmpsb
pop
xchg
insb
mov
into
fcomp
or
std
mov
mov
cmp
insb
push
dec
lea
mov
loopne
jle
ret
mov
push
aaa
sub
pop
cwtl
adc
inc
and
or
lods
xlat
dec
gs
lock
jbe
push
adc
or
and
mov
fnstsw
fsubl
sahf
push
adc
mov
dec
sub
fldenv
cld
inc
or
adc
rclb
hlt
mov
pusha
pushf
lea
jne
btc
shrd
call
test
movb
push
movb
mov
lea
je
push
sub
clc
bt
cmc
cmp
pushf
movw
push
lea
jmp
sub
sbb
jmp
lea
jne
rol
sub
or
mov
jmp
pushf
call
movw
lea
jne
bswap
call
mov
pusha
sub
cmc
bt
repnz
pusha
jmp
push
call
push
dec
dec
dec
dec
cs
insb
add
mov
sbb
test
shll
movsb
in
jo
xchg
cmc
push
in
jmp
lods
sub
adc
jns
inc
in
mov
sbb
sub
xchg
test
cmp
jae
sbb
stc
xchg
imul
ja
lock
insb
sti
fs
pop
rorl
pop
movsl
inc
push
dec
fsubl
jnp
xor
xchg
adc
push
push
adc
xlat
test
pop
cs
fsubrs
idivl
sbb
push
push
xor
into
mov
int3
xchg
mov
in
mov
mov
jmp
lock
mov
add
out
aas
or
push
imul
pop
cwtl
in
mov
xchg
or
push
in
adc
out
rclb
loop
or
push
or
sbb
ljmp
add
pop
repz
movsl
fsub
lret
mov
xor
sbb
out
or
bound
jmp
add
fidivrs
mulb
push
scas
add
int3
cld
int3
sahf
jae
adc
stos
je
sbb
sarl
jns
enter
add
mov
ds
jns
ds
imul
movsb
pop
xchg
sub
sub
subb
roll
and
mov
xchg
cmc
xor
rorl
xor
aad
sbb
cwtl
adc
mov
jl
scas
or
fistl
insb
jne
ss
dec
and
cmp
mov
mov
cs
xchg
out
mov
jmp
pushf
call
out
leave
and
pop
mov
out
mov
add
mov
popa
mov
mov
inc
cmc
daa
imull
ja
cmp
dec
sub
push
es
inc
and
mov
sub
mov
dec
mov
gs
pop
push
leave
push
sub
pushf
neg
xor
push
aad
inc
fistl
cwtl
lock
es
and
lcall
add
push
subl
lea
jne
sar
movsbl
cwtl
sub
setl
mov
lahf
daa
mov
cmc
add
bt
pusha
ror
mov
cmp
call
movb
sub
push
repnz
pusha
lea
jne
ror
mov
rol
mov
sub
or
lea
movsbw
mov
jmp
mov
pusha
push
mov
pushf
pushf
pushl
ret
lea
jae
dec
xchg
not
mov
inc
seto
pusha
jmp
xor
pushl
data16
cld
lret
xchg
addr16
adc
sbb
ja
sahf
add
arpl
fidivrs
jae
inc
mov
sub
or
cmp
enter
and
fmuls
mov
add
adc
sbb
mov
fsubr
mov
subb
int
mov
popa
mov
lcall
clc
push
xor
sub
dec
cmc
cvtdq2ps
daa
adc
mov
cmp
cmp
in
xchg
outsl
dec
sub
rcr
sbb
sbb
xchg
pop
mov
and
pop
mov
in
mov
mov
jo
pushf
cld
ja
adc
xchg
cmp
sbb
aaa
push
push
inc
dec
xlat
inc
pop
push
mov
sbb
flds
popf
rorb
push
xchg
and
fstl
pop
ficomps
test
stos
fcmovnu
or
xchg
xlat
fmuls
push
fwait
cmp
jle
testl
mov
cmp
fisubl
or
stos
fwait
movsb
xchg
icebp
sbb
inc
and
dec
sbb
mov
pop
cmp
fldt
push
cmpsl
ret
sbb
lea
jne
setns
lea
push
push
movb
push
mov
lea
movb
lahf
push
lea
mov
call
mov
sub
and
jle
nop
push
add
and
rolb
add
dec
fbld
jge
jecxz
stos
sub
addr16
inc
push
nop
int
scas
jge
sbb
adc
push
cmp
add
push
leave
cli
mov
into
xor
jb
dec
dec
jmp
xchg
sbb
adc
xchg
or
and
mov
nop
fldenv
sub
into
pop
into
sbb
inc
jo
jb
ret
mov
cmpsb
jns
xor
les
xchg
jo
pop
adc
arpl
sbb
adc
pop
in
mov
pop
sub
dec
adc
mov
fidivrl
lea
jne
movb
jp
push
orl
clc
sub
arpl
inc
adc
std
lret
fcompl
scas
jno
mov
sbb
stc
or
fildll
pop
sub
jl
add
xchg
imul
xor
enter
sub
int
int3
mov
aam
outsb
cmp
xchg
and
loope
daa
cmpsl
aas
sbb
pop
push
loope
adc
adc
sti
xor
sub
shl
call
ja
daa
mov
sub
fdivr
loop
jge
lret
and
shll
fsubs
fdivs
out
sbbl
and
cmc
sub
mov
dec
pop
out
inc
sbb
movsb
mov
imull
mov
mul
sub
jge
cs
jns
dec
pop
xor
push
jmp
div
test
jno
arpl
and
push
xor
and
pusha
sbb
push
je
int
fwait
mov
jl
mov
lret
push
outsb
mov
gs
out
mov
lcall
jmp
mov
mov
mov
test
outsl
arpl
inc
insb
insb
outsl
arpl
lea
je
jmp
jne
out
int3
and
cmp
adc
mov
inc
adc
mov
loopne
fmul
clc
mov
jecxz
cmpsl
mov
sub
mov
out
mov
rorb
jne
fisttpl
mov
pop
in
cs
push
xor
xor
in
out
or
sbb
pop
xchg
adc
nop
jae
aad
pop
sub
les
test
addb
adc
lret
add
add
add
add
iret
bound
add
add
add
add
addb
add
sub
add
add
add
add
add
sub
add
add
add
add
add
add
add
sahf
pop
add
add
add
add
add
add
add
add
add
addb
add
add
addb
add
out
push
add
add
add
jbe
add
insl
add
sub
add
pop
add
add
add
xchg
push
push
not
stos
not
setbe
call
push
ret
and
adc
and
xor
dec
sbb
adc
faddl
mov
jl
cmp
jg
pop
cmp
mov
add
out
jg
cmp
pop
sbb
cmp
and
push
xchg
push
popf
pusha
stos
and
pause
gs
les
clc
add
fsincos
mov
popa
ss
movsl
ja
push
lahf
dec
in
in
sahf
lret
aaa
fists
and
lods
fldcw
mov
fldenv
ficoms
dec
sub
jecxz
icebp
mov
sub
dec
pop
insl
sbb
aas
inc
aad
sub
aas
sti
xor
es
add
divb
aas
repz
sub
or
cmp
mov
mov
mov
xor
cmp
pop
jl
mov
lods
int3
adc
inc
push
nop
sbb
lds
mov
or
jl
add
xor
cmc
stc
add
push
push
call
call
cmp
pop
cmp
shlb
lret
xor
push
ljmp
xchg
mov
imull
push
push
imul
ljmp
cs
mov
inc
rcrb
leave
cld
mov
test
cmp
pop
xchg
add
fiadds
lahf
sbb
es
xchg
or
mov
and
loopne
mov
push
lods
jg
mov
imul
rorb
dec
in
mov
xor
outsl
jmp
pushf
pushl
lea
je
bt
test
add
pushf
bt
cmc
pushl
cmp
pushf
mov
call
pushf
push
lea
ja
stc
jo
imul
jmp
mov
add
cmc
sbb
add
sbb
shr
push
shl
mov
test
test
lea
jns
pusha
push
pusha
lea
je
bt
jmp
movb
movl
call
pop
xchg
adc
int3
out
fisubrs
dec
adc
or
insl
mov
adc
push
cwtl
push
add
stos
jnp
push
jge
enter
xchg
cmpsb
jne
pop
testl
jns
xor
mov
push
dec
sbb
xlat
or
push
pop
adc
push
cs
sub
repnz
xor
rcrl
mov
jp
lds
cwtl
imul
cld
movsb
into
pop
icebp
enter
xchg
ss
popf
jno
sub
dec
mov
ja
xor
inc
lock
lea
jae
inc
rcr
bts
mov
mov
mov
stc
mov
test
cmc
sub
bt
cmp
clc
cmp
repnz
push
push
call
xor
hlt
push
loopne
mov
add
lcall
test
push
sbb
hlt
roll
in
and
or
inc
xor
repnz
faddl
aad
cmp
push
push
cmc
mov
loopne
or
iret
js
or
lcall
arpl
sti
mov
mov
mov
aaa
xchg
sbb
std
shrl
das
adc
pop
fs
sub
sub
fildll
aad
ljmp
xchg
jne
push
sahf
adc
sub
int3
gs
pop
xor
loopne
ja
adc
les
int
adc
pop
jge
xchg
or
sub
hlt
jp
mov
loop
mov
sub
push
mov
cwtl
sbb
xchg
and
jg
ds
pop
xchg
and
sub
mov
mov
or
cmpsb
hlt
inc
pop
jae
or
sahf
outsl
dec
sub
aam
xchg
jge
loope
int
mov
popf
mov
sbb
test
xlat
movsl
je
or
cmp
push
icebp
pushf
aad
pop
ret
xorl
mov
jo
cmp
pop
int
into
pop
sub
push
bound
pop
leave
mov
jne
sub
pop
and
xor
mov
rorl
js
shll
fwait
pop
shrb
test
pusha
cmpsl
outsb
xor
int3
jae
sbb
das
push
mov
aas
adc
stc
popf
jnp
sub
rclb
repz
xchg
shlb
jb
jl
sbb
stos
jae
and
shlb
repnz
xchg
mov
jns
push
stc
push
dec
sub
xor
imul
push
fisttpl
ret
jae
xchg
pop
in
mov
mov
lock
in
jns
fcomi
sub
call
lods
pusha
pop
clc
and
or
flds
insl
into
inc
dec
test
jl
ja
xchg
sbb
sub
add
sbb
leave
movsb
jnp
and
mov
lret
shl
or
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
sbb
and
push
sbbb
leave
cwtl
pop
daa
test
data16
xchg
repz
cld
cmp
push
pop
jnp
mov
mov
imull
movsb
fstpl
pop
mov
mov
and
addr16
jmp
cwtl
shll
xor
adc
cmp
arpl
test
iret
mov
sub
pop
cs
jg
aad
int3
icebp
pop
ljmp
lods
jns
and
sti
add
jmp
mov
mull
lds
das
pop
dec
add
add
and
addr16
fimull
pop
or
mov
addr16
out
and
pop
mov
xchg
stos
and
mov
xchg
in
cmp
fidivs
in
lea
mov
mov
repnz
stos
xchg
adc
aam
int3
outsl
mov
movsb
jns
sub
ret
mov
cltd
add
repz
jne
inc
add
inc
jbe
mov
je
movsb
in
roll
in
ljmp
out
daa
ja
or
adc
push
fsubrl
rorl
cmpsb
in
ja
movsl
pushf
mov
mov
pushl
ret
jmp
es
mov
sbb
mov
pop
and
mov
repz
in
cltd
repz
xabort
in
test
das
js
fwait
popa
movsb
outsl
jp
mov
mov
aam
stos
loopne
aas
push
fstpt
gs
aas
mov
mov
in
sbb
inc
out
stos
jmp
adc
out
popf
rcll
pop
mov
lock
arpl
cmp
bound
stc
rcll
jp
and
mov
push
repz
insb
inc
and
int3
pop
xchg
bound
stc
shlb
rcrl
cmc
mov
insl
cmpsb
xchg
aam
cltd
jp
mov
mov
jo
jo,pt
adc
push
pop
popa
fisubrs
or
stos
push
or
das
aam
je
mov
dec
xor
and
aas
pop
pop
cltd
xlat
sbb
lock
iret
lock
pop
test
pop
xor
out
xchg
fs
xchg
pop
std
test
and
push
test
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
gs
sti
ja
xlat
and
lret
sti
lret
xchg
pop
sub
rcrl
mov
inc
cmc
je
push
and
xor
sbb
dec
inc
test
and
addr16
imul
ja
sub
enter
jmp
push
mov
adc
std
jb
stos
cmp
mov
jb
imulb
scas
jl
mov
cmp
adc
arpl
std
and
cmp
lret
fwait
ja
pop
hlt
sub
and
movsl
jmp
shld
mov
ror
add
adc
clc
rcl
add
movl
bt
shl
sar
stc
mov
sub
test
push
cmp
push
push
lea
jbe
xchg
bsf
lea
add
sub
stc
cmc
mov
bswap
shld
bsr
or
mov
rcr
ror
rcl
sbb
add
xor
dec
shr
bswap
and
stc
cmp
mov
btr
bswap
push
ror
add
pusha
mov
lea
push
movw
mov
pusha
pushf
jmp
rol
bsr
inc
mov
bt
pushf
pushf
cmpb
push
push
call
cmp
fldenv
push
test
repnz
pop
xor
in
push
or
ljmp
jl
outsb
xchg
mov
mov
mov
sub
xchg
or
dec
adc
mov
fwait
jne
cmp
and
mov
nop
dec
mov
bound
out
or
sbb
mov
mov
push
and
rcll
sbb
dec
pop
push
jnp
popf
cmp
and
mov
pusha
cmp
cmc
call
in
fs
and
mov
mov
repz
push
cli
out
lea
jmp
push
cmp
stc
insb
add
xor
push
rol
hlt
dec
and
or
add
inc
int3
push
fs
pop
fs
decb
and
into
lods
sbb
outsl
xor
roll
sbb
xchg
pop
xor
les
mov
je
jae
repnz
aaa
outsl
dec
es
lret
xchg
xor
shll
out
mov
insb
outsl
sahf
jb
push
es
sbb
and
loope
push
sbb
cmp
imulb
push
fadds
jge
jae
pop
sub
mov
out
fidivs
add
pop
fldenv
call
or
mov
push
inc
mov
data16
fadds
push
sbb
cmc
pushf
cmc
add
pushf
mov
pushl
pushf
lea
jmp
pushf
inc
lea
pushf
jmp
flds
xchg
enter
sbb
dec
sbb
out
lea
mov
pop
ljmp
shll
lods
jnp
cmpsl
jo
jle
jnp
je
cmc
stos
sub
fs
lcall
insl
rorb
cmp
dec
mov
jae
dec
mov
clc
push
imul
push
xor
xchg
out
push
xchg
or
jle
aad
stos
jmp
xor
sub
xchg
mov
ja
xor
push
sbb
adcl
and
jo
add
push
dec
or
lods
and
sub
aam
cmp
loope
out
xchg
and
popa
movsb
sbb
ficoml
icebp
into
stos
jge
adc
stos
jo
cwtl
jno
inc
shl
pop
jmp
popf
push
test
xchg
mov
or
sub
addr16
addl
mov
in
jp
jno
or
inc
aam
jns
xchg
je
mov
push
notl
les
mov
pop
imul
or
cmc
inc
sbb
test
cmp
mov
bsf
or
mov
shrd
lea
mov
bt
clc
clc
call
addl
adc
es
shlb
ljmp
subb
cltd
mov
movsb
movntps
mov
cld
jne
arpl
lods
arpl
dec
outsl
lods
jp
das
fs
gs
fnstsw
and
mov
jg
and
or
xor
pop
cmc
and
lea
pop
test
mov
aaa
addl
popa
test
rorb
sahf
outsl
inc
sbb
movsl
js
dec
stos
pop
std
mov
divl
pushf
sub
push
stc
bt
cmp
cmp
pusha
pushf
pushf
lea
ja
bt
bt
imul
test
clc
clc
add
push
pushf
pushf
pusha
lea
jmp
mov
frstor
cmpl
scas
jge
adc
les
xor
test
icebp
xchg
jne
fstpl
xor
mov
std
mov
lods
data16
ret
outsl
fwait
shlb
push
je
xor
lods
es
out
pushf
cmp
inc
push
pop
mov
div
nop
daa
xor
ljmp
ss
inc
ljmp
push
pop
cmp
add
loopne
hlt
lret
movsl
je
add
mov
imul
mov
push
mov
sbb
inc
and
cwtl
faddl
mov
sbb
jmp
ret
sub
out
mov
les
cld
mov
mov
jmp
push
inc
mov
mov
dec
popf
mov
das
mov
or
push
push
xor
test
sahf
mov
sarl
xor
lahf
jne
ljmp
lods
decb
jno
jl
xor
mov
jge
push
rcrb
xchg
add
cmpsb
jl
pop
jmp
jnp
mov
adc
aas
adcb
fsubl
jle
jae
adc
mov
inc
or
mov
aam
push
lret
add
pop
movsl
jbe
cltd
cmp
inc
mov
dec
add
xchg
int
clc
mov
pop
and
repz
mov
inc
nop
mov
inc
lods
push
xchg
push
clc
sbb
push
lods
sub
lcall
push
loopne
add
fwait
jae
sub
int3
popf
insl
pop
cmpb
add
add
test
ss
lahf
jbe
adc
ss
jmp
in
dec
clc
and
push
mov
stos
cltd
jg
ficoml
loope
testb
cwtl
sub
lcall
push
test
mov
pop
es
test
fs
mov
mov
dec
ret
jno
fcmovnb
ret
sbb
cmp
ljmp
xchg
fnstsw
push
and
rorl
mov
sub
mov
fbld
jae
jne
sbb
mov
rcrl
mov
xchg
jb
add
cmpsl
rcrl
mov
and
mov
inc
cmpsb
or
test
mov
and
lcall
aaa
outsb
fcomps
push
pop
mov
jge
cli
jae
lret
adc
push
inc
shl
push
icebp
rorb
mov
shll
lcall
stc
cs
fisubrs
fwait
insb
inc
sbb
ds
repnz
xabort
mov
adc
mov
sub
out
xchg
mov
lea
dec
out
sarb
out
xchg
sarl
cmp
jae
ret
in
sub
fs
jae
mov
pop
rorb
fists
cmp
mov
jg
lret
movsb
mov
rcrb
ljmp
ss
xlat
pop
jg
outsb
mov
movsb
jns
and
rcl
in
addr16
mov
mov
addr16
or
and
pusha
xchg
insb
aas
adc
les
cmpsb
jns
ss
inc
cld
cs
icebp
enter
roll
mov
cmp
lcall
lret
lea
es
pop
popf
push
jno
notb
mov
popf
aad
adc
jae
mov
fdivrs
mov
iret
pop
aas
mov
and
xor
daa
dec
mov
std
cmpsl
enter
xchg
sbb
and
jge
mov
sub
inc
pop
cld
rcrl
inc
out
xor
addps
mov
adc
push
add
adc
push
or
stos
or
adc
paddb
subl
pushf
inc
dec
pextrw
aas
inc
push
xor
add
and
xor
sbb
neg
and
push
fldl2e
sub
push
cltd
cmp
and
xor
xor
ljmp
sub
push
push
dec
dec
adc
push
push
jecxz
sub
dec
push
clc
xchg
cmpsl
fstps
and
and
icebp
xor
inc
jb
push
sub
inc
inc
pop
push
sub
cs
mov
push
inc
dec
fnstenv
push
add
jns
push
push
sub
test
mov
aas
aas
jns
push
adc
push
add
inc
lods
or
mov
je
sbb
mov
add
add
sub
sub
in
xor
xor
xor
or
gs
je
jae
push
ja
in
sbb
push
repnz
pop
sub
jbe
push
push
js
imul
push
hlt
jns
insb
outsl
test
xchg
test
jl
dec
mov
into
fisttpll
jp
xor
stos
cmpsl
push
xchg
cmpsl
and
cmpsl
add
mov
or
fnstcw
aaa
push
cmp
lea
push
pop
xchg
sub
ja
out
adc
xchg
push
nop
jl
lret
outsb
cltd
addr16
mov
jnp
test
js
cmp
xorb
or
pop
mov
jle
aam
cwtl
sahf
mov
bound
xchg
cmp
xchg
stos
dec
nop
mov
dec
push
rcrb
push
xor
and
pop
js
xchg
sub
punpcklbw
addr16
jl
out
ret
inc
in
pop
movsl
pop
shrl
xchg
test
popa
jl
mov
imul
mov
or
popa
sub
pop
mov
pop
das
sub
mov
test
xor
je
cwtl
cmp
mov
inc
cmp
mov
mov
adc
outsb
cmc
lea
insb
cld
jmp
jns
jg
outsl
shll
movsl
jb
in
pop
xchg
aam
bound
jge
aaa
outsl
push
and
cmp
insb
xor
inc
imul
data16
test
xchg
xchg
test
aam
jno
lea
fs
mov
test
popf
add
cld
scas
push
sti
mov
pop
inc
xor
inc
aaa
push
sbbl
dec
add
sbb
ja
out
push
jo
adc
push
lea
cmpsb
inc
pop
fsubrl
outsb
xorl
dec
push
bound
cmp
cltd
mov
push
in
jb
ja
jl
aad
pushf
sbb
push
push
xorb
mov
sbb
dec
andl
pop
outsb
ss
popa
pop
xor
pop
out
xchg
aaa
shll
test
div
adc
cmp
js
jbe
pushf
push
mov
push
jns
lock
sbb
push
imul
mov
xchg
out
mov
test
fildl
hlt
test
inc
sbb
jecxz
aad
jp
data16
pop
push
das
data16
cmc
cmp
and
inc
dec
xchg
pop
in
aaa
addr16
imul
outsb
bnd
jo
xor
xorb
bound
jnp
jno
popa
xchg
mov
push
push
mov
jle
out
dec
pop
mov
jae
and
jae
arpl
flds
cs
adc
dec
sub
arpl
clc
xchg
sbb
sub
jge
aaa
pop
xor
mov
adc
inc
jp
push
pop
lahf
xor
int3
add
insl
ret
push
call
pop
subl
hlt
test
pop
rclb
dec
adc
je
jb
test
jne
sub
mov
outsb
pop
pop
xorb
mov
ds
rolb
xor
and
mov
pop
xchg
inc
stos
xchg
inc
mov
push
adc
xor
pop
add
pop
mov
arpl
xor
mov
or
push
xor
or
push
subb
out
mov
insb
sub
push
jb
push
hlt
cmpb
dec
dec
jno
fisubrs
pushf
fsubrl
loopne
je
mov
sub
xchg
jo
in
jmp
xchg
ret
ljmp
out
push
jnp
gs
addr16
stc
dec
test
jno
movsl
push
lahf
inc
lods
push
out
jle
out
jmp
clc
test
xchg
test
insb
push
outsl
lret
cmc
outsl
and
repz
cmc
orl
ja
mov
insl
mov
call
leave
stos
xchg
push
sub
xor
jb
sbb
jae
js
test
test
gs
xor
scas
pop
hlt
dec
pop
jae
outsb
or
insl
xor
sub
jb
jl
push
aad
jb
in
dec
pop
dec
and
out
ja
jmp
rorb
dec
stos
repz
loopne
test
add
push
test
push
lock
dec
jae
call
xchg
xchg
jae
aam
or
xor
int
punpckhwd
xchg
mov
ss
sub
in
in
gs
or
in
fisubrs
loopne
mov
mov
insl
mov
mov
push
jge
cld
push
movsb
jge
insl
xor
subl
jle
mov
jg
mov
push
hlt
pop
cmc
push
js
pop
jp
push
cmpl
and
outsl
insl
xorl
es
std
out
into
push
scas
jp
push
rclb
arpl
call
dec
push
jle
push
insb
cmc
int
jl
push
mov
cld
adc
dec
xor
sub
bound
jb
ss
cmc
push
jns
pop
sub
sbb
push
ja
cld
lcall
ja
outsb
popf
jg
lods
outsb
mov
mov
push
jnp
mov
and
push
mov
aaa
add
outsb
add
pop
outsb
mov
insl
and
jb
outsl
int
dec
in
shl
xor
jle
sbbb
fisubrs
dec
mov
gs
loop
lock
fs
jb
cmpl
in
add
adc
add
jno
xchg
sahf
cmp
inc
shl
js
xchg
in
inc
adc
jae
jp
call
jns
popa
jl
pop
lock
jae
lahf
js
out
lds
ja
out
icebp
test
cmc
jns
insl
xor
rcl
xor
ret
incl
aad
outsl
adcb
in
cmp
pop
jae
js
xor
out
xchg
mov
mov
data16
outsb
lods
jbe
je
stos
inc
xor
out
fnsetpm(287
mov
out
or
jp
adc
clc
pop
iret
mulb
jb
push
int3
je
dec
pop
jae
imul
shll
insb
and
loopne
js
mov
movsl
sub
outsb
int
ja
repnz
inc
jp
push
in
push
xchg
jb
ja
and
jno
pop
mov
out
dec
insl
scas
shlb
mov
mov
inc
sbbb
movsb
je
and
jae
movsl
arpl
je
xor
inc
jo
movsl
xlat
js
push
inc
jae
mov
ja
cmp
test
repnz
jns
lds
pushf
sub
jo
mov
sub
outsb
popf
je
outsb
repnz
imul
jno
pop
xchg
pop
lahf
sub
popa
jb
pop
insb
js
arpl
jnp
cld
insl
push
hlt
cs
xchg
mov
xchg
inc
scas
jnp
cmpb
xor
push
inc
add
jns
repz
ja
lds
jbe
insb
data16
das
out
sub
inc
test
repnz
mov
inc
outsl
add
sbb
pop
sub
mov
xor
fisubs
loop
test
in
xlat
inc
adc
inc
iret
xchg
imul
ja
hlt
jbe
mov
adc
inc
faddl
mov
cmp
pushl
jns
sub
flds
mov
fwait
dec
jb
rcll
adcl
in
push
je
add
sbb
mov
xor
je
mov
call
in
lods
test
in
cmp
lds
mov
fldcw
je
cld
lds
pop
fisttpll
imul
ljmp
addr16
lods
push
insb
in
insl
setno
popa
mov
dec
jno
dec
fisubrs
arpl
popa
sub
add
jns
adc
je
jge
lea
add
in
stos
and
jb
je
cmp
in
js
fcmovnbe
stos
sub
sbb
ljmp
cld
xchg
addr16
es
cld
bound
sub
jae
mov
ja
ljmp
mov
mov
jno
lds
sub
data16
pop
js
add
jae
add
dec
jne
addr16
jge
and
jae
data16
cmp
jne
js
jb
je
lea
jg
clc
jae
ss
rcl
mov
jbe
xchg
mov
je
xchg
in
inc
mov
sub
jns
pop
mov
cmp
ja
mov
imul
adc
jle
mov
arpl
shll
movsl
or
lods
cmp
outsb
and
xchg
mov
mov
insl
jmp
xor
jg
jp
cmp
bound
je
cmc
fidivs
jo
jg
xchg
and
dec
xchg
fcompl
outsl
sub
test
jae
jae
jbe
cld
mov
je
jecxz
test
repz
jle
ja
insl
push
movsl
popf
gs
jae
in
pop
xchg
jb
pop
jns
sbbl
mov
inc
outsl
push
pop
adcb
aad
js
jne
xchg
sti
jae
insb
ja
outsb
and
xchg
adc
fistpl
lea
cmp
jb
ja
stos
outsb
xchg
addr16
hlt
scas
cmpb
push
xorl
in
je
popf
nop
jae
pop
xchg
inc
cmpsl
cmp
cli
lods
lea
jno
jb
jnp
pop
je
jl
andl
jo
pusha
jne
fisubrl
jb
jno
outsb
jae
test
jg
sub
arpl
pusha
jne
addr16
ja
cmp
xchg
pop
jne
fidivrl
je
bound
in
xchg
imul
jns
lea
gs
jns
xorl
je
popa
fs
bound
addr16
xchg
jne
push
bnd
dec
mov
mov
push
mov
outsl
sub
pop
pop
jb
xchg
adc
js
mov
insl
shll
xor
lock
test
aad
pop
inc
xor
andl
inc
jae
jns
popf
add
imul
outsl
jae
mov
mov
imul
jne
ja
jno
jae
jle
ficoms
fs
outsb
icebp
jp
xor
imul
je
jl
mov
xchg
dec
jg
jae
shll
mov
addr16
ja
int3
jl
sub
lock
stos
cmp
les
aad
cli
sbb
outsl
mov
mov
enter
fistpl
dec
push
dec
mov
push
dec
cmpsl
aaa
imul
lds
lahf
lcall
dec
addb
into
gs
and
push
ret
lock
mov
push
push
fnstcw
mov
mov
je
mov
mov
jo
movsl
push
cmc
addr16
jo
popa
push
mov
cmp
pop
jecxz
xorl
fdiv
dec
test
push
std
test
mov
sbb
pop
push
mov
lds
cmp
outsw
pop
or
in
jmp
xor
jle
sbb
je
push
xorl
arpl
je
xchg
mov
dec
jbe
mov
inc
mov
push
in
push
xchg
jne
lods
insl
or
fsubrl
outsl
orl
add
ja
test
jbe
or
je
fwait
aad
subl
aam
xor
jge
dec
je
jp
mov
imul
cmp
addr16
adc
add
les
jno
gs
dec
mov
mov
pop
divl
mov
jno
ja
xorl
lcall
scas
jb
push
cmc
mov
pop
outsb
jge
jne
subb
mov
enter
ja
push
shrl
mov
jge
addr16
outsb
imul
jno
repz
jb
popa
push
inc
inc
leave
movsb
sub
push
add
outsb
sbb
sub
mov
mov
add
test
jge
jg
lds
xor
lahf
cld
pop
sub
loopne
imul
push
je
lret
mov
jns
jo
pop
cmpsb
jbe
lock
bnd
adc
adc
jge
je
cs
cmp
in
push
jge
loop
pop
jp
push
lahf
dec
loope
xor
clc
loope
push
imul
jg
add
pop
xlat
outsb
imul
xlat
jae
push
mov
data16
dec
and
imul
inc
cmp
lods
pop
loopne
and
xchg
sub
sub
arpl
push
and
pop
pop
jle
push
js
or
outsb
sbb
fsubrl
data16
repnz
jnp
sub
loop
pushf
jo
repnz
inc
xor
je
push
mov
mov
xor
int
sub
jbe
jno
push
jo
jno
jp
loopne
in
aad
jnp
mov
mov
test
dec
fs
sbbl
loopne
insb
daa
jnp
jno
lock
test
jns
fsubrp
data16
insb
movsl
jb
fsubl
jecxz
icebp
pop
jb
movsb
jp
hlt
dec
outsb
fsts
sub
pmaxsw
jge
rcr
outsl
pop
xchg
pop
stos
arpl
cmc
iret
add
hlt
ret
js
ja
xchg
mov
popf
xor
insb
xorb
scas
lds
into
xchg
mov
sub
jno
sub
mov
jns
jmp
jo
xchg
lea
mov
stos
ds
pop
jb
jae
xor
jmp
adc
gs
add
push
cld
dec
dec
jb
dec
ljmp
push
shlb
jo
ja
bound
push
jp
add
jo
xchg
dec
stos
in
mov
xor
ja
sub
fwait
data16
js
dec
addr16
hlt
data16
pop
je
jae
mov
repnz
mov
mov
pop
out
mov
mov
and
jge
dec
ja
out
mov
lds
stos
xor
fbld
lods
xchg
into
lock
pop
out
mov
in
add
ds
add
inc
jl
pop
dec
xor
popa
aam
testb
insb
add
xor
pop
lds
pushf
inc
iret
add
jns
popa
jg
in
xor
loope
mov
mov
adc
mov
lock
std
sub
mov
xchg
push
gs
mov
pop
fists
pusha
mov
popf
cs
in
dec
je
fnstenv
test
js
vmovaps
jae
pop
push
mov
and
xchg
cmp
jmp
xor
push
push
mov
aam
inc
mov
xor
jmp
jae
pop
sub
dec
in
add
jl
xlat
sub
les
sbb
inc
xchg
fsubl
or
shll
inc
imul
popa
mov
inc
and
repnz
jge
add
sub
pushf
mov
int
insl
xorps
add
js
cli
cmc
enter
dec
shr
inc
sarb
adc
icebp
shll
rcrl
push
sub
jae
test
out
mov
sbb
in
stc
jae
xchg
pop
xlat
xchg
push
out
inc
arpl
or
inc
adc
call
inc
push
xor
test
jae
xchg
inc
cmpl
je
rcll
mov
arpl
push
and
mov
dec
test
xchg
or
xchg
aam
mov
jl
dec
shll
outsl
push
je
sub
sbb
in
inc
xchg
ja
mov
inc
mov
mov
inc
mov
outsb
test
inc
push
xchg
add
add
popa
test
add
ja
in
lret
hlt
pop
aad
ror
mov
adc
mov
dec
inc
aas
push
fmull
in
popl
out
loop
ljmp
jae
add
push
leave
clc
insl
fcoml
dec
jl
cmpsl
mov
int3
or
cmp
inc
add
jle
cmp
mov
push
adc
sub
mov
adc
out
sub
fdivs
std
pop
dec
addr16
sti
push
sarl
fcompl
inc
mov
or
scas
dec
call
xchg
mov
mov
and
shll
aam
dec
xor
mov
loope
fildl
and
inc
mov
cmp
xchg
cmp
or
jae
lods
inc
cmp
outsl
cmpps
sbb
mov
js
sbb
sub
mov
mov
imul
bound
pop
dec
jns
mov
push
mov
dec
data16
insl
fldl
pop
insb
push
arpl
dec
pusha
pusha
pop
xor
jno
dec
jae
and
add
test
adc
outsb
fisttpll
fidivl
dec
push
ja
or
jge
lcall
andl
je
jp
cltd
dec
loopne
cmp
jb
sbb
sbb
insb
xor
lret
sub
hlt
jl
xorb
push
push
jae
insl
and
add
in
shlb
add
lret
push
pop
xor
mov
repnz
insb
xchg
aaa
mov
sub
imulb
arpl
dec
psubb
add
pop
lock
jae
pop
jge
test
hlt
xchg
ss
lds
hlt
pop
scas
mov
mov
insl
pop
push
xor
pop
pop
pop
jns
test
lcall
lods
in
push
ss
pop
xor
loop
insb
push
push
sub
je
inc
add
lret
ja
fildl
hlt
xchg
in
push
pop
push
cmp
inc
js
jb
dec
and
or
and
add
jg
jns
jno
jge
imull
xchg
jno
mov
hlt
lods
in
aam
inc
adc
push
insb
push
jbe
dec
jns
shll
inc
sahf
fs
xchg
arpl
pop
hlt
xor
jns
mov
pop
sub
push
and
xchg
push
je
outsb
sub
repz
jae
outsl
lods
insl
ja
cmpsl
addr16
mov
jb
push
je
shl
jns
repnz
push
insl
test
push
int
mov
and
fstp
scas
insb
cmpsb
push
in
je
or
fnstcw
jge
lock
je
sub
loop
fs
hlt
adc
insb
mov
cmp
icebp
dec
in
in
in
arpl
adc
push
insb
outsb
xor
inc
or
jl
je
sub
and
push
pop
dec
xor
mov
repz
jp
in
ss
jl
jno
xchg
push
je
inc
add
shlb
adc
xchg
insb
popa
aam
push
inc
sbb
testb
xor
push
push
jg
lods
cwtl
shrw
gs
jno
inc
dec
or
inc
sbb
je
outsb
fs
jo
jno
push
shll
je
mov
mov
lock
inc
dec
iret
add
and
movsl
popf
pop
hlt
in
shll
push
gs
inc
dec
dec
je,pn
dec
sti
out
push
mov
movsb
outsb
xchg
inc
imul
insl
insb
out
push
jb
out
outsb
push
movsb
je
test
lock
outsl
out
push
jbe
outsb
dec
adc
jb
dec
popa
data16
das
cld
xlat
cld
xor
out
sbbl
insl
das
out
and
popa
aas
sub
pushf
dec
sub
sub
xor
push
popa
sbbb
aam
lods
lods
pop
out
test
dec
cltd
fsubl
or
mov
cmp
movsl
mov
ds
hlt
adc
inc
lock
popf
dec
jp
je
xor
out
jb
mov
ljmp
xor
and
add
lods
inc
test
out
insl
movsb
gs
cld
xor
outsb
insl
lea
sbb
hlt
in
adcb
dec
insl
leave
adc
roll
gs
pop
dec
jmp
jle
xor
xchg
push
adc
fnsave
insl
mov
lods
je
sub
ss
sub
aaa
and
and
rclb
pop
outsl
xchg
push
dec
add
jmp
sub
popa
imul
js
inc
inc
out
adc
jo
aad
cmc
inc
popa
lahf
je
fst
pop
lock
popa
xchg
out
repnz
cmp
jbe
dec
aad
dec
popa
lods
jnp
popa
xor
popa
inc
jno
xor
jno
xor
xor
shrb
push
hlt
cld
push
out
insl
push
clc
push
or
imul
in
orl
xchg
pop
imul
rclb
mov
fs
add
or
pop
jle
sub
dec
push
xor
xchg
push
xchg
push
pop
pop
pop
out
inc
aam
mov
mov
inc
arpl
cmp
sub
fidivrs
rol
jbe
fdivr
int3
sbb
enter
data16
imull
gs
push
test
mov
and
lods
int
dec
sbb
dec
sbb
rcrl
sub
insl
rcl
inc
dec
out
pop
jge
in
mov
in
add
cli
scas
sub
imul
outsb
dec
mov
mov
dec
cltd
hlt
es
sub
iret
mov
addr16
data16
push
jae
insl
or
mov
jae
or
jae
aam
data16
out
movsl
loopne
sub
test
sub
test
sub
sub
or
sub
pop
sub
sub
popf
lea
push
arpl
push
mov
mov
sbb
je
in
sub
cmp
sar
lret
or
imul
outsb
mov
rclb
add
jno
leave
mov
outsl
out
shrb
push
pop
jle
sbb
idiv
push
dec
mov
sti
outsb
cmp
xor
sbbb
and
xchg
out
mov
cmpsb
pushf
jle
xor
dec
push
testb
xchg
pop
insl
outsb
sahf
mov
or
adc
in
push
push
in
fdivr
addr16
sti
sub
add
jns
pop
push
data16
push
out
sbb
das
mov
jns
ljmp
sub
outsb
jmp
pop
outsb
jmp
cmp
icebp
outsb
xchg
add
xor
xchg
pop
cmc
call
jbe
xchg
push
sbbl
xchg
pop
sub
or
lods
out
out
pop
ljmp
das
fnstcw
and
jo
lock
or
loopne
pusha
or
push
out
in
hlt
push
shll
sub
out
xchg
rorl
subl
loop
notb
outsb
or
mov
xchg
push
jecxz
outsb
mov
imul
xchg
inc
fildl
popa
insl
xchg
jbe
jecxz
outsb
insl
jbe
pop
popa
jno
inc
or
adc
je
data16
mov
push
popa
popf
mov
popa
cmp
mov
jo
orb
es
mov
enter
lods
roll
fldt
in
enter
xchg
xchg
cwtl
mov
sbb
push
in
cld
xchg
inc
jmp
pop
dec
flds
popa
xchg
sbb
dec
cld
popl
and
dec
mov
fs
sbb
test
in
cmpl
jo
inc
imul
and
dec
outsb
jmp
push
insb
fisubrl
inc
and
frstor
insb
mov
add
fsts
push
pop
adc
xor
int
aaa
sbb
xor
lret
addr16
imul
in
push
and
icebp
xor
push
std
pusha
inc
xor
push
push
push
jecxz
insl
dec
and
icebp
add
insb
dec
loopne
insb
and
xor
hlt
orl
sbb
lods
das
repnz
sbb
or
hlt
out
push
popa
out
inc
pop
sub
test
into
arpl
scas
xor
adc
hlt
cs
push
dec
pop
and
pop
or
nopl
and
pop
adc
arpl
pop
inc
and
add
add
imul
gs
and
xor
imul
push
jecxz
in
mov
sbb
adc
jp
aad
cli
xchg
push
imul
scas
daa
loopne
cmp
cld
adc
mov
dec
xor
jo
mov
xor
and
dec
dec
sbb
loop
cmp
popf
popf
add
jecxz
in
insl
lods
hlt
mov
sbbb
push
adc
es
loopne
push
loop
push
inc
addr16
data16
cmp
repnz
test
dec
dec
dec
adc
jb
cmc
cmp
mov
imul
lea
pop
pop
es
loope
sbbb
jae
popa
dec
fsubrl
push
je
jle
sbb
jno
pop
aam
pushf
ret
out
jno
je
jo
dec
cld
jno
gs
in
into
insl
mov
push
bound
mov
adc
dec
scas
rorb
sub
inc
sbb
push
and
and
dec
push
sbb
int3
andnps
xor
inc
cmp
imul
sub
cs
push
jno
jnp
es
pop
in
xor
lea
fmull
dec
push
and
stos
cltd
dec
adc
lahf
and
xor
in
xor
loopne
xor
xchg
lds
sbb
cld
jecxz
leave
push
pop
movsb
jae
jge
lods
pop
xchg
insl
loope
inc
xor
dec
sub
loope
daa
pop
push
xor
insl
sub
popa
jno
inc
ljmp
mov
fs
inc
adc
aad
pop
add
daa
adc
cmp
jno
pop
cld
shr
dec
dec
fsts
rorb
jne
cli
jns
jns
sbb
mov
in
iret
jno
xchg
popa
test
mov
xor
xchg
inc
xor
pusha
aad
ret
mov
iret
sub
pop
ds
bound
mov
aam
and
in
jno
jb
and
add
idivl
cwtl
inc
das
or
insl
and
push
xor
push
sbb
push
dec
add
lds
ss
icebp
faddl
and
cmp
cmc
or
test
f2xm1
push
pop
cmp
inc
and
adc
daa
cmp
jnp
int3
pop
mov
and
xor
cmc
or
xorb
xchg
cmp
in
add
add
push
xor
cwtl
jmp
inc
sub
test
clc
dec
mov
pusha
sarb
imul
inc
rcrb
loopne
or
jo
jno,pn
add
repnz
push
daa
hlt
add
stos
cld
inc
fcmovbe
inc
push
or
inc
mov
push
xor
push
mov
dec
mov
clc
cs
adc
sbb
xor
adc
sbb
sub
or
andb
or
sub
mov
jno
inc
sub
popa
push
xor
icebp
repnz
divl
adc
in
rcr
arpl
repnz
sbb
push
push
shll
idivb
push
ret
push
sub
repz
jmp
jmp
sbb
dec
scas
sbb
inc
sub
fistpl
sub
adc
mov
jno
jne
idiv
outsl
arpl
mov
call
dec
sub
xchg
adc
das
adc
sub
fmull
loopne
imul
pop
int
adc
loopne
inc
push
mov
and
pushw
dec
and
sub
sbb
bound
jno
nop
popf
lret
sub
es
xor
and
inc
vmovaps
daa
ret
xor
sbb
sub
insl
cmp
jmp
inc
pop
sbb
sub
inc
mov
int
sub
mov
and
out
xor
jno
notb
push
cmp
and
js
add
push
cmp
and
rcl
repz
repnz
and
js
rcll
mov
loop
ljmp
out
sub
push
mov
fnsave
dec
dec
hlt
sub
pop
idivl
mov
pop
shrl
pop
or
pop
xor
fiadds
or
mov
icebp
mov
inc
sbb
mov
filds
gs
xchg
int
and
or
xor
cli
daa
stc
pusha
inc
ret
daa
push
das
jno
mov
cmp
test
sub
adc
adc
rorl
cltd
dec
daa
inc
cmp
push
test
dec
movb
in
lahf
sbb
test
test
push
xchg
je
rclb
gs
int
iret
dec
fld
ja
jno
mov
xchg
adc
jo
jmp
shrl
add
dec
lock
sbb
pushf
and
mov
fistpl
aaa
dec
repnz
aam
and
jb
xchg
push
or
adc
dec
push
xor
jne
jbe
jmp
cli
pop
and
or
je
mov
pusha
adc
or
shll
dec
dec
push
and
mov
push
ds
leave
and
push
cmp
push
cmp
lahf
pop
cmp
push
cmc
adc
insl
lods
div
adcl
push
push
pushf
mov
inc
jo
xlat
pop
repz
lds
jnp
mov
xor
ja
adc
jo
pop
xor
lock
ret
add
and
gs
shrl
dec
push
data16
jecxz
adc
rep
in
cmp
mov
xor
lods
push
pushf
dec
imul
pop
int3
and
sub
mov
test
movsb
xor
repnz
adc
lcall
xchg
inc
sub
inc
cltd
and
sbb
es
daa
push
test
or
fdivrl
or
fcompl
pop
xchg
lock
push
cmp
in
sbbl
and
arpl
sub
loopne
or
mov
test
shll
cmpsl
and
mov
sbb
test
popa
and
cmp
std
sub
out
loope
lea
add
mov
push
cmp
loop
dec
lods
rcll
dec
loop
stos
insl
dec
aad
xchg
adc
add
loope
or
stc
and
dec
es
sub
push
cmpsb
icebp
addl
fists
push
and
pop
loope
es
adc
mov
push
adc
jp
xchg
divb
inc
adc
repnz
push
mov
mov
adc
xor
in
in
mov
dec
jo
icebp
and
mov
pop
aad
loopne
add
aad
nop
jmp
cld
add
outsb
movsl
sub
push
lods
lods
add
pop
adc
xor
addr16
gs
int
idivb
lea
push
cmp
pop
inc
stos
cli
jae
dec
dec
imul
and
mov
rcll
cmpsl
inc
insb
popa
imul
push
adc
adc
cmp
insb
lods
lea
loopne
jb
push
out
in
arpl
or
adc
mov
adc
in
hlt
lea
call
in
lret
hlt
adc
pop
popa
daa
jge
mov
sub
or
insl
fldt
jbe
and
or
insb
notb
pop
pop
cmp
push
sub
pop
adc
aaa
mov
js
dec
adc
in
dec
sub
xor
incl
inc
loopne
loop
repnz
in
sub
sub
shll
xchg
test
addr16
add
rolb
push
leave
cltd
sbb
pop
popa
lds
dec
pop
xchg
pop
hlt
leave
sub
cmp
sar
and
sbb
shrl
cmp
jne
inc
loope
and
push
add
arpl
insl
shrl
push
push
or
sbb
call
scas
imul
dec
jl
sub
sbb
shlw
sbb
rcrb
adc
sti
in
push
loop
insb
in
adc
test
dec
loopne
add
ret
inc
out
dec
bnd
pop
cmp
lahf
pop
push
gs
nop
add
inc
hlt
inc
shll
jg
clc
cmp
jmp
jecxz
lods
jo
pop
repz
jno
or
fneni(8087
loop
sub
in
inc
loopne
adc
xchg
rclb
sub
dec
and
popa
pop
cld
push
sbb
mov
popf
bound
popa
mov
sub
dec
pop
and
jl
cvtdq2ps
imul
xlat
fsubrl
repz
addr16
daa
mov
loope
in
frstor
xchg
pop
xchg
out
adc
xchg
mov
jp
fdivl
dec
xor
pop
add
pop
movsb
and
mov
orl
inc
sbb
and
icebp
cmp
movsl
or
leave
std
add
lods
bound
pop
scas
xor
inc
shll
mov
cmc
mov
aaa
adc
cltd
in
loop
movsl
sub
jo
ror
and
xor
arpl
jmp
insb
mov
dec
rcl
movsb
outsl
aam
mov
popf
inc
and
stos
xchg
inc
jg
test
push
rcr
sub
cmp
and
and
rcrl
arpl
dec
mov
dec
rorl
lret
test
imul
cld
jb
lahf
and
mov
fs
negb
in
lds
dec
adc
and
sub
packsswb
pop
pmulhw
int3
and
sub
add
ljmp
and
mov
ja
nop
lret
and
in
push
and
insl
in
and
ljmp
loopne
in
jno
adc
and
inc
jnp
xor
jno
daa
cwtl
out
aad
rclb
je
in
push
popf
aaa
fiadds
out
cmc
sub
out
das
sub
and
pop
imul
fldenv
loop
pop
pop
insl
frstor
push
jp
popa
outsb
dec
lahf
push
hlt
arpl
cmp
push
sbb
clc
fmull
out
pop
in
push
mov
inc
push
or
or
mov
push
stc
ljmp
gs
inc
pop
leave
imul
push
push
mov
jae
lea
and
jb
pop
and
shll
xor
mov
daa
cmp
xor
fdivl
insb
xor
cs
insb
add
and
test
pop
sub
mov
and
sub
sub
push
lret
fimull
cwtl
pop
xor
outsl
sahf
lcall
in
movsb
mov
or
mov
popf
rorb
xlat
mov
dec
cltd
fs
movsl
movsb
adc
ljmp
adc
sbb
sbb
loope
jno
in
or
leave
cmpb
mov
and
mov
leave
cmpsl
cmpsl
push
in
cwtl
rclb
xchg
push
and
and
mov
enter
sti
int3
mov
push
mov
sarl
pop
nop
sbb
mov
mov
add
or
in
ljmp
add
imul
int
repz
ret
pop
test
pop
push
test
mov
aas
and
xorl
dec
fdivr
xor
mov
push
pop
outsb
in
ds
mov
pop
insl
inc
lea
or
sbb
shll
mov
jnp
push
and
xlat
adc
mov
push
and
shrl
in
lods
es
and
adc
sub
xchg
repz
scas
into
xchg
jmp
fldcw
in
or
ds
and
xchg
fisubs
movsb
dec
ljmp
mov
push
push
dec
ljmp
in
rcll
jb
daa
push
push
je
cwtl
add
cmp
decb
or
fmul
fisubs
test
sub
jge,pn
push
jmp
lods
mov
jmp
ret
stc
in
mov
mov
jmp
pop
ljmp
dec
sbb
stos
ja
sbb
mov
inc
mov
pusha
mov
sbb
cli
xorb
mov
pop
mov
mov
lcall
cs
sbb
loopne
dec
test
push
xor
push
test
inc
add
fnstenv
mov
adc
cmp
dec
stos
test
sub
lods
adc
push
mov
movsl
into
pop
dec
sub
outsl
mov
test
push
jp
mov
pop
out
and
mov
sub
dec
sbb
mov
xchg
jb
aam
es
jns
fs
in
adc
dec
addr16
adc
mov
mov
aaa
adc
and
sub
pop
test
add
insl
daa
push
fildl
test
shll
and
xchg
ret
out
aam
es
hlt
ljmp
ret
push
xor
pusha
or
arpl
sbb
sub
cs
inc
jo
push
or
jle
pop
push
stos
mov
popa
push
popa
jno
into
mov
jmp
sar
and
das
pop
sub
mov
mov
popa
sbb
pop
sbb
mov
out
xor
jg
mov
repnz
xor
int
pusha
nop
dec
mov
cmp
jecxz
pop
mov
push
sbb
jns
std
push
and
adc
sub
shlb
mov
xchg
push
les
adc
clc
test
jmp
push
mov
setp
movzbw
setbe
lea
mov
push
movl
jmp
jp
cmp
and
outsb
mov
into
fdecstp
fsubrl
in
xorb
add
ror
jmp
mov
dec
push
js
or
jl
jns
shlb
sbb
jae
sbb
mov
clc
cs
repnz
mov
pusha
pushl
sub
sbb
pop
mov
mov
push
dec
sbb
adc
in
mov
mov
add
jne
je
add
test
ja
or
roll
fldt
mov
inc
sbb
mov
dec
xchg
xchg
and
das
dec
cs
pop
add
std
lods
fsubrs
adc
ljmp
sub
aas
mov
dec
inc
les
aas
sahf
push
xchg
adc
ja
clc
lcall
outsl
cmp
mov
mov
sbb
sti
mov
xchg
xchg
mov
mov
and
cmp
sub
sbb
cltd
movsl
dec
xor
xor
adc
cmp
push
sub
mov
fwait
test
and
mov
mov
dec
enter
int3
sub
out
rorb
push
sbb
paddw
int3
js
idivb
int3
popl
arpl
les
js
mov
push
pop
mov
mov
movsb
add
xchg
hlt
or
movsb
hlt
and
popa
insb
movsb
imul
add
sti
pop
fsubrs
fldln2
push
and
xor
lret
outsl
add
insl
in
jle
xlat
and
mov
sbb
insb
cwtl
movsb
add
mov
fsubs
push
or
sub
and
adc
out
fimuls
add
int3
push
je
sbb
shll
cmpsl
imul
stos
push
jnp
and
mov
sti
jae
jb
jne
lock
test
sbb
xchg
sub
sub
loope
repz
mov
mov
cmpsb
cld
jl
pusha
and
push
sbb
jnp
les
loopne
xchg
xlat
pop
add
mov
push
cwtl
ljmp
push
sub
int3
mov
les
dec
rorb
sbb
in
jmp
xchg
or
mov
dec
mov
mov
xor
and
sub
mov
and
pop
push
sub
outsb
mov
fwait
pop
or
push
dec
jge
fcmovbe
enter
adc
outsb
lret
add
out
gs
cwtl
jp
data16
sbb
lock
aaa
jno
xchg
dec
mov
int
pop
sub
loop
lock
sbbb
cli
js
jg
mov
ret
push
and
ss
in
rorb
adc
pusha
stos
js
test
pop
or
int3
push
adcl
cmp
out
jle
xchg
je
adc
add
ret
xor
cltd
jp
insl
mov
push
iret
xor
out
in
sarl
cld
sub
mov
mov
dec
cmp
cli
pop
lcall
sahf
addr16
movsb
push
fisttpll
inc
jbe
and
add
adc
mov
pop
outsb
jge
out
or
mulb
inc
push
push
daa
cld
fidivl
mov
push
das
pop
mov
call
int3
mov
mov
dec
push
cli
int
pop
sub
pusha
push
sbb
cbtw
jnp
adc
cli
pop
cli
scas
xor
cmp
xchg
sub
mov
pop
ja
jg
in
mov
mov
xchg
xor
dec
cmpb
mov
pop
fstl
rcl
and
push
inc
stc
aas
cltd
idivb
cmp
ffree
aad
ret
into
icebp
mov
js
nop
fisubrs
add
rclb
test
push
fs
push
test
adc
mov
inc
jno
adc
mov
push
ds
push
push
cmp
inc
xor
xor
ds
inc
orl
sbb
xchg
lret
mov
mov
ficomps
inc
leave
mov
cmpsl
sbb
stc
or
jb
mov
hlt
jae
into
xchg
push
adc
lret
pop
dec
mov
fdivrs
icebp
mov
cs
push
jo
dec
in
xchg
popa
inc
arpl
mov
inc
push
push
adc
dec
pop
cs
xor
cs
xchg
fisubs
and
mov
jle
xchg
mov
and
mov
dec
dec
jae
push
push
ret
repnz
mov
mov
and
mov
popf
clc
insl
jb
adc
inc
adc
stos
mov
int
add
push
cmp
es
add
xchg
pop
xchg
mov
push
daa
scas
xchg
dec
cmp
cmp
iret
sbb
mov
mov
push
adcl
sbb
dec
xchg
call
cmp
or
cli
aas
cmp
sbbl
frstor
adc
pop
fstps
sbb
mov
dec
mov
cltd
push
out
ljmp
inc
jno
pop
and
scas
sti
inc
xchg
mov
js
es
leave
push
xchg
or
jge
jle
add
loopne
test
sbb
ret
pop
sub
pop
mov
xchg
mov
push
call
lea
jnp
jne
jmp
scas
and
test
mov
mov
cs
lds
xor
cmp
add
cmp
imulb
call
shrl
fimull
mov
add
out
stc
push
bound
insl
stos
stos
push
ljmp
int3
testb
adc
mov
ljmp
add
in
dec
inc
dec
popf
test
out
inc
sbb
leave
cmpsb
jl
sbb
ret
mov
mov
mov
mov
jmp
lea
jne
bswap
xor
push
ror
mov
not
bt
mov
add
movb
push
pusha
clc
mov
call
stos
pushf
pushf
pushf
movl
lea
jmp
not
lods
call
cmc
pusha
pushf
add
bt
movb
movb
pusha
movzwl
add
mov
bt
jmp
test
int3
test
and
iret
fwait
pusha
sub
int3
xchg
call
sbb
and
or
inc
mov
inc
xchg
push
cwtl
adc
push
xor
mov
add
and
fisttpll
lret
imulb
into
roll
clc
iret
pop
daa
loopne
rorl
lds
mov
push
mov
xchg
dec
lds
mov
adc
stos
sti
imul
cli
loop
movsl
dec
aaa
pop
ljmp
rcrl
out
or
lods
jle
and
bound
dec
shll
jne
ja
adc
lret
cld
enter
adc
movsl
jbe
sbb
mov
xlat
das
push
mov
das
cmp
aas
jnp
adc
sub
xor
add
sbb
pushf
push
std
xor
pushf
lret
cmp
hlt
mov
pop
ds
dec
cmpl
cmp
gs
stos
mov
adc
in
ljmp
das
stos
cmp
inc
cmp
std
inc
push
jo
add
cmpsl
jl
xor
fldenv
rcrl
movb
pushf
lea
jb
cmp
jmp
pop
into
adc
and
test
jne
sub
fsubrl
ret
xor
cmp
push
in
jge
sbb
dec
cmpsb
xor
push
cltd
sahf
jge
sub
add
cmp
and
insl
adc
sbb
lds
orb
adc
pop
pop
adc
popf
shlb
sub
js
push
mov
movsl
stc
ljmp
cli
fisubrs
lock
xor
sub
jg
or
rcll
adc
test
push
daa
repz
sahf
js
pop
cltd
mov
into
adc
fistps
jmp
stos
cs
adc
mov
sbb
ret
sub
les
out
imul
in
adc
or
or
mov
fbld
lods
jns
roll
scas
jg
daa
clc
leave
xchg
cmp
scas
test
and
adc
jmp
push
ficomps
adc
push
jg
xor
in
xchg
insl
aas
or
cwtl
bound
fidivs
loopne
aaa
cmp
bound
rclb
xor
push
enter
cmp
roll
adc
rorl
rcrl
stos
xchg
int
ja
dec
ljmp
pop
xor
pop
in
sub
add
bound
xchg
xchg
out
enter
and
jecxz
insb
fisubl
in
cmp
stc
and
les
inc
ss
aas
xchg
cmpsl
aam
push
add
mov
adcl
mov
int3
mov
sbb
scas
jnp
cs
stos
cltd
leave
xor
popf
rcrb
cmp
xchg
dec
aas
lret
loopne
repz
roll
inc
and
cmpsl
mov
sarb
cli
fs
shlb
lods
arpl
mov
push
jnp
pop
mov
pop
cmpsb
xor
sbb
mov
sbb
shrb
and
mov
call
cmp
mov
adc
add
mov
push
cs
lret
lahf
outsl
ds
gs
jp
push
jge
push
xchg
das
mov
xchg
pop
jnp
mov
imul
sbb
shll
and
pop
mov
push
add
lahf
into
lret
fs
loop
cmc
adc
push
cmpsl
add
mov
fs
cmp
mov
inc
test
pop
cmp
shll
cmpsl
mov
imul
cmp
int3
outsb
cwtl
pusha
das
sti
int3
lahf
push
jle
pushf
xor
xor
push
xchg
and
cmp
inc
and
insb
jge
mov
loopne
mov
jne
jl
push
push
inc
jp
cmpsb
shll
push
movsb
sub
bound
cmp
or
hlt
sub
push
cld
inc
in
cltd
xchg
push
data16
adc
aas
xchg
push
loop
fmull
movsl
dec
push
les
js
mov
inc
mov
fisubrl
movsl
jnp
and
stos
lods
dec
sub
sar
inc
sbb
setbe
cmp
jmp
in
adcb
or
push
aad
lock
and
sbb
mov
push
jge
mov
inc
inc
ja
out
xchg
cmp
xchg
and
ret
jo
lock
dec
sti
cld
xor
iret
outsb
lds
in
jb
dec
mov
lcall
jb
dec
mov
cmp
popf
inc
xchg
test
std
dec
cmp
fisubl
adc
mov
xchg
insl
leave
movsl
sbbb
shll
cmp
inc
ljmp
jp
mov
and
dec
sbbb
lds
mov
popa
xor
add
adc
xbegin
mov
sbb
sub
add
xchg
mov
inc
pop
push
ljmp
aas
lods
cmp
ds
iret
test
test
out
mov
rcrb
iret
aas
shll
jb
lcall
pop
and
out
daa
stc
ret
ds
lds
push
cmp
std
outsl
dec
mov
ss
cmpsb
xchg
and
mov
pop
adc
and
cmp
mov
and
fcomps
aaa
ja
sub
sbb
shrl
cli
jo
xchg
mov
mov
filds
loop
xlat
push
inc
jbe
lea
and
push
repnz
in
fwait
loop
inc
or
xor
movsb
cli
repnz
shrb
mov
sbb
enter
and
mov
mov
out
mov
push
and
push
test
pop
shll
xchg
imul
ljmp
sub
pop
cltd
dec
aad
jp
scas
gs
shll
movups
sbb
mov
xchg
xchg
pushf
mov
fninit
add
adc
sbb
add
cmc
pop
add
mov
mov
or
sbb
jae
jg
mov
pop
mov
rep
or
je
ss
stos
testl
push
shll
les
sbb
pop
mov
movsb
add
lcall
fldl
adc
mov
stc
shr
push
xor
push
sub
mov
shr
mov
push
adc
push
sar
cmc
push
cmc
inc
dec
rcr
mov
shr
mov
not
mov
shr
adc
test
test
mov
test
bt
or
call
pop
leave
rcrb
int3
sub
sbb
xchg
arpl
iret
lcall
push
inc
in
mov
jecxz
and
pop
fdiv
push
stos
mov
stos
adc
out
xor
add
push
push
test
inc
cmp
roll
adcl
nop
xchg
push
movsb
push
test
stc
fidivl
and
inc
lcall
jo
xchg
ljmp
popa
aad
and
mov
xlat
mov
sahf
aam
mov
xor
cmc
cmp
pusha
jmp
mov
xor
lods
mov
out
mov
jmp
xchg
ljmp
icebp
pop
mov
inc
cld
sub
jae
lods
hlt
and
inc
cmp
mov
rorb
stos
jecxz
inc
dec
fsts
movsb
fstpl
lds
pushf
sub
dec
add
fimuls
iret
sti
outsl
pusha
or
stos
dec
cli
and
or
scas
adc
lret
addr16
xchg
shll
popa
xor
rcll
xor
sbb
lret
pushf
push
or
mov
cmp
inc
jno
sub
mov
sbb
mov
loopne
jge
and
sub
es
sub
push
pop
mov
add
daa
xor
aad
aam
mov
imul
pop
movsb
xor
testl
inc
daa
xchg
sbb
pop
or
inc
stc
jb
xor
in
jl
scas
dec
mov
mov
pop
xchg
push
inc
xchg
adc
int
adc
movsb
or
dec
imulb
sub
mov
jnp
scas
lahf
rol
add
push
lea
sbb
mov
jmp
mov
aad
mov
cmc
lret
mov
outsb
in
gs
out
insl
loope
sbb
aaa
bound
mov
shrb
fimuls
xchg
scas
int
xlat
or
cltd
mov
mov
aad
sub
jne
or
or
dec
insl
out
movsl
jmp
ljmp
and
jle
jns
ret
int3
jle
ret
scas
fnstenv
dec
adc
mov
cmc
icebp
lahf
gs
aaa
jo
mov
sbb
out
and
fldt
stos
adcl
inc
or
jge
jno
mov
nop
ljmp
jecxz
sub
stos
jne
mov
sbb
outsl
pop
in
inc
loop,pn
adc
xchg
nop
sbb
adcb
cmp
dec
adc
adc
sub
or
dec
repz
cmp
cmp
dec
jne
push
negl
shrl
mov
into
sbb
das
sti
aam
xchg
and
dec
call
imul
and
ss
cs
mov
dec
sbb
xlat
stos
je
sub
arpl
inc
xor
andl
jo
cli
mov
xchg
pop
sahf
push
shlb
pop
aam
sahf
and
arpl
mov
and
and
push
hlt
mov
in
cmpsl
ficoml
int
call
lds
insl
scas
cli
fmull
sarl
fs
push
push
sbb
loopne
pop
cmpsl
and
rclb
pop
insl
enter
jo
and
pop
fisubrl
int3
mov
insl
and
mov
sub
lods
ret
dec
jae
and
mov
rcll
jns
xor
fnstenv
xchg
sub
sbb
or
adc
enter
idiv
cmpsb
aam
clc
add
xchg
jns,pt
mov
subb
ds
jge
jmp
mov
in
jmp
pop
mov
mov
and
cmp
inc
and
roll
mov
clc
je
shl
or
mov
nop
es
push
sub
push
sub
shll
cmpsb
pop
fimull
pop
sub
and
imull
inc
push
hlt
mov
pop
out
mov
inc
jns
pop
xor
popa
xor
push
xor
pop
pusha
adcl
loopne
lods
adcl
sti
xor
jle
add
dec
out
roll
mov
xchg
add
mov
mov
shlb
dec
pusha
mov
ds
inc
fsubrs
mov
in
je
xchg
pop
sub
mov
data16
loope
add
ss
mov
mov
int3
insl
mov
fdivl
mov
jb
pop
dec
mov
call
in
cwtl
pop
sbb
cltd
iret
popf
loopne
push
xchg
lret
dec
dec
dec
cmp
push
daa
pushf
cwtl
repz
test
sti
sarb
js
mov
insl
add
mov
sbb
repnz
mov
hlt
mov
push
cmpsl
insb
and
adc
hlt
out
inc
aam
jb
sbb
or
jecxz
jg
and
les
dec
icebp
stos
fisubl
ljmp
int3
aad
fsubrs
rcrb
clc
sub
fimull
jmp
pop
andb
popf
fistpl
push
roll
sti
lods
add
push
push
rclb
lcall
cmpsb
xorb
fwait
ret
and
add
sbb
enter
push
mov
lret
add
icebp
in
out
mov
push
mov
xchg
mov
dec
xchg
fsubs
sub
ret
mov
push
adc
push
shl
fisttpl
push
daa
add
add
pop
and
pusha
mov
cmc
mov
shll
sub
clc
loop
daa
iret
xor
xor
cmp
inc
mov
xchg
inc
jbe
sahf
js
cmp
inc
or
pop
or
out
addr16
jl
add
sbb
sub
mov
imul
mov
mov
mov
addr16
adc
mov
mov
pop
mov
cmp
push
les
pop
mov
sub
outsl
or
scas
mov
mov
push
fsubl
repnz
xor
dec
add
loope
je
and
mov
cmpsl
jge
adc
movsl
js
pop
cli
into
cltd
ljmp
ret
push
sarl
repnz
xchg
fsubrp
mov
sub
daa
xchg
adc
or
cltd
push
sbb
ret
cwtl
mov
mov
das
mov
jae
ja
or
mov
data16
xchg
push
add
inc
jg
sahf
xor
out
daa
sarb
icebp
jg
cltd
push
mov
mov
sub
test
lods
je
or
nop
insl
jl
aam
cli
pop
xchg
je
lds
sbb
imul
xchg
nop
cmp
sbb
mov
add
shlb
mov
inc
push
pop
sbb
xlat
aaa
cld
pop
lret
adc
xchg
adc
cli
mov
icebp
sbbb
iret
mov
push
add
dec
shlb
dec
sbb
cwtl
bound
and
and
lods
fisubrs
jbe
test
add
xchg
fcomi
jmp
jae
popa
and
fisttpll
rcl
out
sbb
mov
scas
sub
clc
sbbl
inc
sub
jle
cs
fbstp
inc
push
enter
aas
jo
andb
jge
repz
jg
fwait
or
insl
mov
push
dec
jb
xchg
pop
popf
stos
or
faddl
sub
push
fldcw
push
sbb
gs
cmp
add
sbb
stos
icebp
je
xchg
mov
ja
sbb
es
inc
push
in
mov
push
fdivl
pop
ficoml
xor
mov
and
mulb
in
mov
lds
or
jg
xor
scas
adcb
test
out
jg
das
dec
sbb
xor
inc
lcall
pop
mov
movsl
mov
mov
add
adcl
dec
add
push
sbb
loopne
dec
lret
hlt
sub
arpl
push
mov
leave
mov
popa
jge
cmpsb
push
push
mov
jmp
repnz
into
lahf
imul
fcomps
mov
aas
xchg
popa
inc
mov
int3
pushf
mov
or
stos
jnp
and
shll
mov
imul
inc
lds
mov
inc
adc
repz
adc
cli
push
mov
jno
push
movsb
sbb
lods
insl
mov
inc
pushl
sbb
xor
cmp
push
sbb
push
out
jp
sbb
or
jp
xchg
jmp
xor
mov
insb
inc
and
ret
pushf
jo
or
aam
repz
ja
pop
mov
and
int
push
adc
mov
inc
push
lock
or
sbb
inc
jo
xchg
xor
push
hlt
test
cltd
mov
int3
xchg
jne
je
cmp
sbb
push
movsb
insb
xor
pop
cmp
loop
jno
cmc
xor
push
jo
fwait
cmc
xor
adc
xchg
stos
cmp
mov
jno
insb
mov
lret
dec
pop
cmc
rol
sub
add
std
xchg
add
arpl
push
xchg
adc
mov
stos
jle
lods
cmp
push
mov
add
lcall
mov
rolb
lods
xchg
mov
pop
and
inc
and
cmp
enter
inc
and
mov
sub
push
fwait
in
lea
mov
fidivs
call
test
inc
adc
mov
cmp
inc
lea
cmc
cmp
call
push
pushl
jmp
sti
jbe
arpl
lret
mov
add
sub
enter
xor
mov
test
dec
xchg
dec
add
mov
enter
push
std
aad
jle
es
cmovl
sub
out
cmp
das
mov
ret
and
pop
loopne
sbb
add
scas
out
and
mov
pop
xchg
gs
push
leave
mov
and
push
add
in
sbbl
mov
push
jmp
push
push
cmpsb
fldcw
pop
call
and
pop
xchg
jae
pop
in
test
test
mov
lahf
sahf
dec
mull
jb
sbbb
dec
push
mov
mov
sub
inc
pop
cmpsb
loopne
or
jne
test
data16
fists
aam
pop
test
push
in
ret
inc
adcb
mov
in
iret
sub
pop
mov
pop
fstl
cli
push
and
mov
data16
jne
fisubs
inc
sbb
sbb
mov
push
xor
roll
lret
mov
push
and
mov
sub
pop
sub
rclb
aas
xorl
stos
push
xchg
mov
sbbb
leave
adc
sub
imull
add
jg
adc
daa
xchg
mov
mov
cmp
xchg
push
cmp
jae
repz
mov
adc
mov
mov
mov
arpl
xlat
mov
rol
scas
jmp
popa
jmp
shr
gs
ds
pop
jecxz
pop
xor
int
gs
imul
xlat
push
fsubp
ja
js
test
cltd
jg
mov
xor
pop
xchg
inc
jnp
sub
inc
frstor
inc
rorb
inc
jns
jb
xchg
mov
push
push
or
cmp
je
bound
loope
cwtl
xchg
call
cmp
orl
and
mov
arpl
out
xchg
pop
fs
fneni(8087
push
in
int3
pop
jmp
fs
cltd
into
mov
test
dec
and
enter
scas
andl
add
mov
out
movsl
aas
aad
push
pop
mov
test
pop
into
std
je
test
std
mov
cmp
leave
jmp
sbb
outsl
xchg
push
out
add
loop
popa
mov
pop
pop
popf
jecxz
cmc
inc
adc
stos
jg
das
or
test
mov
xchg
push
rcl
and
push
inc
sbb
test
sbb
stc
inc
cltd
scas
divb
cmp
mov
lods
in
add
jnp
xchg
push
push
and
mov
and
mov
fcomps
test
stc
sub
xchg
test
test
outsb
in
dec
push
lahf
sub
cwtl
loopne
pop
mov
jno
and
mov
jecxz
inc
push
nop
push
lahf
clc
ljmp
rolb
sub
leave
xchg
arpl
adc
mov
les
xchg
and
lods
ret
addr16
mov
mov
data16
or
test
jo
test
dec
das
sahf
jl
sub
rcll
mov
cmc
repz
push
or
mov
movsb
in
in
adc
jge
in
sbb
loopne
jp
fadds
jno
call
sub
lret
popf
gs
fldt
ret
sub
pop
mov
clc
addr16
xor
or
mov
dec
sbb
mov
dec
daa
psraw
hlt
pop
das
mov
dec
xor
ljmp
pop
cmp
sar
mov
sar
nop
gs
mov
xchg
jb
pop
dec
inc
or
ret
inc
jnp
cmp
test
push
pushf
jae
rcr
psubsw
add
mov
adc
dec
xchg
es
cmp
test
or
scas
adcl
out
scas
je
push
in
push
pusha
pushf
mov
push
pusha
lea
jmp
xchg
sbb
cmpl
jne
sbb
mov
adc
std
in
push
mov
lret
movsb
stos
mov
ss
mov
push
inc
addb
fwait
adc
pushf
sbb
add
in
loopne
adc
cli
sub
xchg
rcl
jne
movsl
jecxz
iret
lock
xor
loope
shl
bound
ret
sbb
inc
mull
popf
imul
int
cltd
inc
push
testl
outsl
data16
ret
stc
int3
xchg
inc
sbb
lds
sub
jno
xchg
test
fistps
popa
rcrb
sub
xchg
xchg
test
cmpsl
mov
es
dec
outsl
jecxz
or
sbb
jno
xchg
push
push
lods
inc
xchg
lret
insl
xchg
sbb
sti
sbb
adc
mov
push
dec
fsubs
je
and
shrb
shll
pop
mov
cwtl
idivl
jmp
jae
sbb
mov
pop
xor
cmp
or
push
push
xlat
daa
aas
mov
arpl
fxch
inc
rcr
mov
and
pop
jl
lcall
dec
and
aam
fwait
inc
std
test
test
movb
lea
jb
pushf
cmc
cmpb
jmp
and
pop
push
and
mov
out
mov
or
lcall
inc
xchg
cltd
jp
sbb
sbb
sub
pop
mov
fldcw
pop
lret
out
arpl
hlt
push
popf
mov
mov
das
push
lret
xchg
pusha
in
lret
xchg
mov
adc
iret
mov
inc
adc
mov
bound
out
inc
jp
scas
mov
inc
dec
dec
xor
cs
insb
add
fs
je
jmp
jmp
mov
push
jns
push
loop
mov
clc
les
js
pop
dec
scas
jp
and
xor
jle
xchg
dec
pusha
in
fwait
aam
std
out
inc
push
fsub
int3
test
pop
xchg
outsb
pusha
es
jg
ficoml
jmp
adc
je
imul
dec
pop
in
mov
or
lods
jp
bound
and
insb
lea
ja
cmc
imul
jmp
std
xchg
xor
xchg
pop
cs
test
cmp
in
rorl
push
mov
mov
pop
lcall
rclb
mov
enter
je
xor
dec
fiadds
imul
mov
movsb
and
leave
mov
jo
sbb
pop
pushf
popa
sbb
mov
mov
dec
pop
repnz
mov
sbb
sti
xchg
imul
in
mov
jge
sub
shlb
mov
test
aaa
gs
pop
rol
imul
push
push
in
mov
dec
and
ret
nop
imul
pop
je
aas
arpl
dec
sbb
pop
ss
pop
into
sqrtps
arpl
icebp
loopne
loop
cld
sbb
mov
mov
ficoml
nop
ret
mov
scas
jp
push
push
shr
add
pop
mov
pop
mov
sbb
std
push
into
add
inc
pop
pushf
jp
popa
mov
pop
sub
push
mov
mov
popa
cmp
xchg
cmp
and
jns
fimuls
and
and
mov
cmp
jmp
mov
mov
sarb
jns
or
xlat
movsl
and
sbb
xchg
xchg
shrb
xchg
dec
cmp
jl
out
mov
push
mov
cmp
daa
cmc
mov
and
pop
xchg
pusha
ds
rcr
push
mov
sub
pop
sub
sbb
rclb
stos
stos
pop
out
mov
add
inc
push
dec
push
je
gs
insl
dec
outsb
outsw
inc
add
bts
neg
mov
shr
mov
call
aas
int
push
int3
xor
fisubrl
mov
push
xor
out
jp
and
jb
xlat
jg
sub
jbe
jns
je
xchg
dec
sbbl
or
sub
and
data16
fists
mov
movsb
test
push
pushf
lcall
cmpsl
adc
dec
andl
lock
xchg
in
je
jno
call
mov
cmp
fmuls
pop
xlat
dec
pop
imul
scas
orb
mov
outsb
cwtl
sub
out
mov
popf
and
int3
rclb
jge
sbb
lds
lahf
scas
sub
pop
decb
cs
sub
xor
pop
popa
ds
jnp
sbb
jp
add
les
fnsave
xchg
push
sbb
jl
sub
test
cli
hlt
popf
lret
xor
and
inc
sbb
into
mov
jnp
xlat
and
mov
and
sub
lock
cmp
fcomps
hlt
inc
jp
jmp
sbb
xchg
mov
scas
xchg
subb
add
sahf
jge
aaa
fucomip
inc
repz
push
jno
mov
push
in
add
sbb
into
mov
fcoms
test
fdivl
shll
fsubrs
add
lcall
mov
inc
adc
mov
inc
or
test
pop
jns
sbb
scas
xchg
repz
mov
pop
xchg
lds
repz
test
cmpsb
sub
test
ljmp
out
daa
shl
adc
xchg
gs
and
ret
xchg
pop
gs
pop
jp
jmp
aad
add
cmc
call
push
push
inc
push
xor
cs
insb
add
cmpsb
insb
and
add
adc
mov
leave
popf
js
adc
aam
mov
xchg
jl
movsb
add
sub
hlt
stos
faddl
push
dec
loop
mov
icebp
insl
xor
rolb
rcrl
hlt
dec
mov
cmp
jbe
inc
bound
push
mov
push
cmpsb
nop
adc
aas
stc
pop
ficoms
adc
add
mov
jns
cmpsl
imul
mov
movsl
mov
adc
sub
shll
lds
xor
jmp
push
add
jae
push
lea
call
jmp
lea
jne
mov
movzbw
mov
movb
bswap
setne
push
setp
lea
jmp
jns
cmp
mov
mov
inc
jge
xchg
je
and
inc
push
andl
sbb
insl
xlat
aam
mov
jns
pop
and
cmp
loop
fisttpl
cmpsl
roll
mov
iret
cmp
add
pop
testl
jmp
add
test
xlat
movsb
jb
push
and
xchg
movl
int3
cli
cs
lret
dec
sbb
rorl
aaa
push
dec
sbbb
rcrl
data16
outsl
es
xchg
jge
push
sbb
imul
call
bound
sub
pop
sub
movsb
or
leave
lret
in
jnp
xchg
cmpsl
xor
iret
orb
xchg
gs
shlb
mov
fistpll
rcrl
and
mov
aad
jne
adc
les
loop
les
pushf
xlat
push
pushf
cwtl
cmp
cs
shll
ret
cmpsl
test
mov
push
insb
adc
push
xchg
inc
outsl
daa
lahf
sub
repnz
and
pop
stos
adc
add
or
cmpsl
lahf
test
std
lds
jne
jge
dec
push
jno,pn
imull
push
xchg
fcomps
ss
mov
pop
sub
cmp
jl
jmp
int3
stos
fsubs
mov
mov
jl
jge
ficoml
std
cmp
lcall
push
and
push
inc
in
xlat
inc
out
cmc
and
fsubs
adc
jge
cmp
add
add
mov
cmp
dec
inc
jo
jb
push
sbb
sub
push
movsb
jge
test
ljmp
hlt
gs
mov
pop
push
adc
bound
and
roll
add
mov
mov
mov
dec
lret
and
es
sbb
sbb
mov
pop
cmp
nop
sbb
mov
js
out
xor
xchg
jb
or
movsl
xlat
mov
inc
cmc
mov
insb
imul
and
addr16
into
fnstsw
mov
aad
mov
inc
fucomip
push
sbb
cmpl
push
and
add
sbb
adc
inc
xchg
lret
in
fisttps
fimull
mov
es
in
add
inc
fs
xchg
data16
aam
jp
and
rcrl
test
xor
popa
movsl
push
aas
jo
int3
push
pop
xor
mov
lcall
enter
rclb
icebp
inc
dec
mov
xchg
stos
jo
out
cmpsb
push
cmp
pop
mov
je
popf
mov
aaa
jmp
mov
enter
je
es
mov
popf
xchg
icebp
fidivl
fmull
xchg
dec
or
and
sbbl
decl
popa
mov
dec
sbb
mov
push
xor
xlat
sarl
cmp
mov
int3
jo
int3
sbb
xchg
gs
sub
inc
into
sbb
outsl
shl
xchg
out
ret
test
js
int3
je
xchg
call
mov
cmp
repnz
lods
and
xor
or
mov
daa
mov
mov
sub
jbe
mov
lret
mov
popa
shll
sbb
insl
mov
ret
cmp
and
push
test
inc
lock
mov
pushf
pusha
lea
jae
and
shr
mov
lea
cmp
mov
call
mov
mov
stc
cmp
clc
cmpb
push
pusha
lea
jge
pusha
lea
jne
cmp
shl
btc
sbb
xor
xor
mov
dec
sub
add
neg
inc
mov
test
pusha
pushl
clc
test
lea
jnp
je
cmc
sub
bt
cmp
push
pusha
movb
lea
ja
pushf
imul
jmp
rolb
jb
int3
xchg
les
movsb
je
and
mov
mov
mov
cwtl
mov
and
and
or
das
add
mov
faddl
sbb
rolb
gs
loop
int3
sub
repz
imul
cmp
enter
mov
stos
or
xchg
inc
ja
xor
cmpsl
push
popa
add
jl
mov
out
push
or
jmp
push
xchg
adc
in
add
popf
outsb
inc
adc
cwtl
pusha
sub
add
mov
pop
es
movsl
jb
aaa
mov
and
cld
shrl
rclb
insl
and
cmpsl
xor
dec
sub
ret
fimull
insl
jae
cmp
loop
nop
inc
outsb
cmp
mov
shufps
and
jl
cmp
dec
cld
daa
fistpll
mov
das
repnz
mov
add
cmp
pop
lret
pusha
jno
ret
add
xor
repz
aaa
cmpsl
shlb
adc
sbb
jns
mov
repz
xchg
push
enter
jnp
test
xchg
jo
pop
pop
jne
int3
xchg
ret
xchg
pop
cs
lret
test
dec
adc
mov
xchg
pop
or
out
and
outsl
int3
xor
or
in
test
shll
iret
mov
and
rcll
pop
adc
outsb
cmp
jl
or
sub
pusha
jl
jb
mull
test
inc
push
push
add
jmp
or
scas
jbe
sub
repnz
push
pop
inc
jns
popf
std
mov
or
mov
stc
cmpb
pushf
movb
push
lea
jle
jne
rcl
sub
aad
mov
mov
neg
add
rcr
mov
pushf
movb
pushf
jmp
test
call
stc
jmp
mov
pushl
push
lea
jmp
mov
es
int3
xorl
lea
in
ret
inc
xchg
cli
mov
leave
xor
mov
out
xor
xchg
inc
jbe
fwait
cmpsb
jne
sbb
stos
pusha
mov
orl
cli
mov
lods
imul
push
iret
ljmp
cmp
add
dec
mov
repnz
outsb
cltd
xchg
ss
jo
mov
paddsw
add
push
ljmp
out
mov
es
imul
ds
push
sub
mov
fidivs
xchg
adc
mov
and
add
add
stos
adcb
mov
push
and
jbe
xchg
mov
xor
aas
push
mov
inc
jl
ja
cs
popa
pop
mov
insb
xor
out
incb
jecxz
sub
push
lret
push
jns
movsb
adc
xchg
jb
jnp
mov
push
cld
pop
sub
inc
or
scas
test
stos
jbe
xchg
add
test
xchg
pop
pop
ja
int3
xchg
rorb
jae
add
daa
xchg
jg
xor
xchg
fwait
jmp
movl
lcall
push
out
inc
iret
push
cltd
xchg
fcoms
mov
bound
jno
jmp
mov
xchg
xor
cmpsb
je
and
fdivrs
sbb
cmp
dec
mov
lock
dec
jp
daa
xchg
arpl
mov
cltd
push
int3
push
repnz
arpl
sbb
or
xor
lret
cmp
or
xchg
cmpsl
xchg
lcall
push
fdivl
lods
mov
sbb
jb
bound
push
movsl
jb
lea
ja
jmp
fldenv
jbe
int3
fsts
jecxz
mov
in
rcll
into
cmc
xchg
cmp
sub
jge
call
add
fs
push
lods
lea
mov
xchg
mov
dec
out
jbe
jge
punpckhwd
pop
fmuls
xchg
dec
jmp
mov
cld
cmpsb
mov
mov
notl
adc
fwait
mov
lret
xchg
and
andb
mov
push
andb
sbb
dec
sbb
cld
sahf
ds
outsl
inc
xchg
cmp
pushf
pushf
test
call
xor
int3
divl
add
test
mov
adc
dec
push
pop
ret
daa
pushf
loop
into
repnz
mov
lock
sbb
push
push
mov
mov
pop
xchg
or
add
xchg
enter
xchg
push
sbb
loopne
push
fistpl
lods
inc
lock
sbb
inc
pop
push
dec
fisubs
sbb
adc
cmp
push
adc
sbb
inc
aad
js
and
fmuls
sahf
call
push
inc
adc
test
ret
jbe
sub
ja
repz
add
stc
call
js
cmp
int3
jno
insb
cmp
jecxz
pushf
jae
add
and
mov
ret
xchg
js
mov
sti
xor
dec
cmp
jle
fs
jge
fisubrs
cld
mov
not
pop
mov
add
cmp
jmp
lret
xor
add
or
mov
dec
inc
rcrl
inc
pop
inc
mov
outsb
hlt
call
sahf
and
into
sar
mov
mov
shll
movsl
jne
and
clc
das
subl
js
int3
test
mov
pop
and
mov
arpl
xchg
fnsave
xchg
fcoml
cmp
add
xchg
and
data16
inc
adc
mov
test
mov
sbb
mov
sbb
mov
xchg
and
pop
dec
jne
mov
gs
jno
scas
inc
imul
js
int3
gs
arpl
loop
jns
adc
mov
imul
xorb
and
push
xchg
push
cmp
push
test
pop
jnp
dec
lds
mov
mov
les
lret
clc
es
sbb
in
mov
pushf
in
mov
imul
push
fnstsw
jmp
out
cmp
fldcw
ret
lahf
jb
mov
mov
add
out
je
js
int3
fimull
fldenv
jne
sbb
les
jmp
inc
imull
xor
cmp
mov
cltd
jp
in
and
rcll
mov
popl
adc
jg
pop
adc
xchg
pop
ret
adc
ficompl
les
mov
ds
sub
out
popf
or
out
mov
mov
stos
jnp
sub
int3
xchg
fs
out
xchg
arpl
enter
call
jno
ljmp
add
cwtl
jb
adc
mov
pop
xor
and
jae
push
popl
scas
ffreep
cmpsb
sbb
xchg
lds
out
lods
xchg
dec
jge
push
sub
aam
mov
inc
shl
cs
ret
inc
ja
in
cs
fldenv
sbb
xchg
pop
sub
aad
jnp
push
in
pop
test
jecxz
call
repz
jnp
int3
loop
out
mov
aam
jg
pop
loop
cltd
out
mov
addr16
push
rorl
insl
shll
push
mov
fwait
ja
stos
mov
sbb
push
cmp
lcall
pusha
scas
repz
hlt
pushf
outsb
mov
cmp
mov
negl
negl
xchg
scas
xor
lcall
repnz
ret
sub
scas
xor
testl
test
jns
xor
aad
ja
mov
fcmovu
loope
pop
mov
fmull
and
jmp
inc
icebp
jp
int3
cmp
add
mov
imul
xor
mov
gs
and
inc
mov
xchg
dec
jns
mov
ljmp
pop
arpl
and
xlat
rcrl
pushf
push
fisubs
repnz
aam
cmp
repnz
mov
jb
lea
push
push
clc
mov
cmpsl
mov
push
sub
adc
movsl
pop
or
dec
jnp
adc
and
and
into
test
inc
push
adc
jmp
lods
jae
jmp
mov
int3
mov
cltd
xor
loopne
mov
sub
clc
mov
out
les
imul
xchg
and
repnz
inc
hlt
xor
sbb
xor
pand
mov
dec
mov
pushf
divb
adc
pop
out
sbb
das
inc
cmp
daa
jg
sub
pop
inc
jbe
outsb
xchg
test
xchg
dec
sbb
jecxz
push
je
outsb
inc
popf
push
insb
into
pop
lods
jg
xchg
xorb
mov
inc
aas
and
and
bound
inc
mov
inc
pusha
cmpl
xor
iret
mov
pop
cmp
popa
add
stos
mov
xor
arpl
jae
push
pop
mov
xor
dec
and
std
mov
xchg
fsubl
jl
int3
mov
mov
push
sub
out
test
cld
mov
xchg
movsl
cltd
inc
insb
xor
or
xor
cli
cmpsl
roll
inc
dec
inc
data16
xchg
mov
daa
xchg
dec
int
push
popa
or
fstps
loopne
mull
ja
adc
mov
into
movsl
mov
mov
xchg
fsubl
and
jae,pt
sbb
int
imul
mov
inc
xchg
add
mov
popa
mov
xchg
dec
fistpll
cltd
adc
sahf
push
sub
aam
aad
andb
clc
test
or
push
cmc
std
mov
sub
shlb
add
es
xor
les
mov
stc
shll
aaa
fisttpl
rcr
mov
ja
push
clc
pushf
cmpb
pusha
lea
jne
movzbw
sbb
dec
sub
sar
das
rol
bswap
mov
xor
add
pusha
jmp
lahf
sub
int3
xchg
rorl
jp
sbb
cmp
xchg
shlb
shrb
push
sub
add
cmp
pop
cld
movsl
inc
jmp
dec
inc
mov
subb
mov
pop
stos
jb
mov
ret
sbb
ds
lock
xor
call
cmp
mov
arpl
loopne
push
aam
mov
das
arpl
xchg
adc
add
call
sbb
lock
mov
mov
fildll
xchg
sub
xor
xor
and
gs
sets
sub
push
out
mov
stos
jmp
loope
add
pop
sarl
dec
and
cli
and
negb
icebp
xor
and
sbb
scas
sbbb
lds
movsb
mov
lods
das
dec
jle
int3
mov
and
xchg
popa
xor
fsubrl
rolb
sbbl
fstps
daa
lahf
icebp
push
push
cmc
jae
inc
cmc
and
fwait
daa
scas
pop
pop
mull
in
out
hlt
leave
out
call
and
mov
fwait
cmp
ret
in
xor
push
xchg
frstor
out
inc
adc
stos
jp
push
in
xchg
outsb
dec
aas
scas
cwtl
popa
jne
xor
movsl
jle
int3
add
pop
aad
outsb
ds
mov
bound
adc
sbb
jnp
das
sub
push
add
ds
xchg
xchg
shr
mov
or
call
pop
jg
cld
xchg
or
add
sub
sub
or
xor
movsl
in
inc
push
ja
fiadds
stos
test
sbbb
fsubrl
jmp
push
inc
je
lea
mov
jg
and
stos
fsubrl
xchg
imul
pop
cmc
pop
mulb
ljmp
lret
xchg
mov
adc
les
push
jmp
push
lret
addr16
cltd
cltd
push
xor
subb
fcoml
fwait
pop
ret
or
outsl
movsb
movsl
mov
mov
sub
enter
cmp
jecxz
inc
les
mov
mov
in
pop
add
mov
sbb
mov
clc
rcll
cmpsb
push
or
xchg
and
pushf
pushf
pushl
ret
or
int3
or
sbb
lods
adcl
loop
jp
cli
js
pop
sub
inc
xor
aad
mov
adc
fdiv
es
and
xchg
push
push
xor
inc
mov
arpl
mov
testb
repz
sbb
fwait
push
jecxz
jb
jmp
into
in
subl
jp
sbb
add
pop
imul
inc
and
bound
xchg
pusha
aaa
push
shrl
pop
jp
fwait
add
sub
mov
cmp
test
enter
sti
sub
push
sbb
xlat
mov
sbb
pusha
lods
or
push
int
xor
cli
cmpsl
enter
cmpsl
vandnps
jo
xor
arpl
je
or
pop
sub
sbb
xor
imul
xlat
lods
jns
adc
xchg
mov
dec
clc
leave
jne
out
lret
jns
inc
and
out
test
jp
adc
mov
push
sub
xor
pop
xchg
je
mov
mov
into
sahf
orb
aaa
mov
scas
jp
or
cmp
pushf
in
sub
bound
mov
pop
cmc
fld
cmp
push
test
push
sbb
stos
jnp
sub
out
mov
mov
cmp
test
sub
int3
xorl
popa
in
sub
sub
dec
insl
nop
push
sbb
ds
mov
data16
pop
popa
ss
mov
pop
js
sub
scas
in
sub
sbb
adc
inc
sub
add
scas
pop
mov
das
sar
and
arpl
cld
inc
or
sbb
in
sub
and
jl
sbb
test
jns
sub
leave
xchg
jno
loopne
aaa
pop
jb
mov
pop
xchg
xor
jmp
imul
jecxz
negl
out
xor
fwait
and
insb
dec
sub
fidivrs
cbtw
enter
repz
pop
sub
es
inc
sti
out
nop
rorb
loopne
add
inc
test
xchg
jecxz
cltd
jne
pop
repz
sahf
jno
cmp
cmp
xchg
and
sti
dec
and
mov
out
and
inc
jb
sbb
iret
movsb
jp
adc
stos
jle
mov
popf
lret
imul
jno
cmpsb
cwtl
jle
in
and
jmp
sahf
das
mov
or
test
lea
sbb
adc
gs
lret
fmull
in
sub
not
dec
imul
enter
inc
jns
push
and
stos
int3
cmc
leave
sbb
rclb
lahf
outsb
jbe
dec
aaa
test
mov
inc
and
aad
fnsave
iret
xchg
bound
dec
sub
mov
jg
jecxz
and
jl
mov
or
lds
stos
mov
cwtl
cmp
cmp
xor
mov
dec
mov
popf
popf
cmp
or
inc
test
outsl
into
lods
jnp
cmp
adc
mov
adc
xlat
and
stos
je
lea
ret
aaa
adc
cmc
icebp
cmc
xchg
test
aas
cwtl
imul
in
out
inc
and
cmp
sbb
mov
shlb
bound
lret
out
out
sub
dec
subb
xor
fisubrl
inc
xchg
in
clc
push
dec
ljmp
hlt
fdivrs
lea
or
jl
mov
ss
lcall
lret
lods
lret
test
out
push
mov
dec
pop
out
jae
inc
xchg
pop
popf
and
adc
adc
aad
not
test
mov
sahf
xchg
sarl
inc
and
ret
call
movb
lea
mov
pop
lea
pushf
jmp
mov
jmp
pushf
imul
bt
bt
add
pusha
pushl
mov
mov
lea
jmp
lahf
sub
and
xchg
rolb
orl
dec
xchg
arpl
mov
repz
mov
and
cmp
xchg
jmp
pop
adc
in
mov
adc
stos
cs
and
ficoms
sub
pop
add
jmp
mov
pop
cmpsb
jno
je
out
popf
js
and
inc
out
inc
xchg
bound
add
xor
call
jmp
scas
or
inc
and
dec
cmp
test
jmp
pushf
xchg
pushf
movb
pusha
pushf
dec
pushl
call
lock
inc
and
call
push
and
aam
jo
pop
fnsave
lahf
sub
loopne
push
outsb
clc
push
dec
sar
jb
mov
mov
cmpsl
sbb
nop
mov
sbb
inc
adc
xchg
xchg
les
iret
sbb
in
shl
cltd
pop
fists
xchg
pop
inc
push
inc
mov
jecxz
adc
sub
adc
loope
fs
hlt
pop
and
mov
and
xor
add
gs
leave
fdivs
sbb
cmp
mov
pop
cs
push
jo
jbe
lock
jae
imul
jae
bound
pusha
pushf
rep
mov
movzbw
bswap
mov
pushf
mov
push
pushl
lea
jmp
sbb
int3
and
idivl
lahf
jno
push
sbb
stos
pop
test
lret
insb
xchg
rclb
mov
mov
rolb
add
aas
inc
call
jp
mov
gs
mov
subb
lcall
dec
stos
jg
xchg
movsb
lock
les
or
add
cmp
xor
fists
jae
pushf
gs
lret
xor
cltd
nop
inc
xor
movsb
fidivrl
or
lea
je
mov
call
outsb
fdivp
inc
and
cmp
cli
enter
sti
into
lahf
je
sbb
std
push
push
push
inc
cmc
xchg
mov
push
cwtd
aas
push
dec
mov
ljmp
ficomps
fwait
mov
mov
push
mov
orl
scas
mov
xor
leave
cmp
in
repnz
jge
sbb
mov
xor
mov
and
lret
movsb
outsb
cmp
pushf
jl
fwait
in
lret
and
dec
jne
push
call
ficoms
dec
and
cmpsl
rclb
movsl
js
or
test
push
aas
insl
pop
dec
mov
pop
rolb
cmp
imulb
out
std
pop
cmp
push
push
fnstcw
sbb
mov
push
push
fbstp
aam
sbb
cmpsb
rorb
sbbl
jge
mov
sbb
pop
mov
shrb
into
pop
jg
xchg
push
clc
imul
add
sub
jg
sub
lret
xor
fldcw
mov
imul
fs
jne
movzbw
lahf
not
seto
movb
movzbw
mov
lea
push
lea
seta
setns
movzbw
lea
pusha
mov
push
mov
movl
push
jmp
push
sub
pusha
push
call
rolb
dec
and
xchg
into
lahf
jno
sub
iret
cmpsl
jns
or
stos
xchg
or
ja
ja
pop
lcall
imul
in
dec
mov
arpl
jmp
cmp
and
xchg
xor
xorl
cmp
pop
mov
ljmp
sub
add
mov
fs
push
aaa
mov
pop
mov
mov
cwtl
pushf
mov
or
iret
rorl
fs
call
int
cwtl
addr16
xchg
inc
pop
mov
pusha
in
fstl
ljmp
sbb
ret
pushf
outsb
cmp
rcl
xor
cmp
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
inc
jb
ja
imul
bt
ror
mov
not
stc
jmp
add
int3
daa
test
jb
or
pop
fisttpl
ljmp
out
int
hlt
cli
in
adc
rorb
in
dec
shrl
ret
clc
inc
xchg
xchg
and
cmpsl
pop
incl
ds
mov
out
jp
fsubrp
sbb
push
mov
test
inc
xor
inc
data16
add
inc
mov
lret
in
shrl
pop
rcll
mov
out
xchg
bound
in
jg
pusha
push
or
mov
jmp
dec
and
push
adcl
dec
sbb
mov
dec
cltd
add
roll
lret
adc
pop
push
push
pusha
comiss
mov
clc
iret
xlat
sbb
cmc
out
fdivl
xor
cmp
dec
mov
cli
inc
mov
in
lods
and
insb
jge
and
or
stos
jl
sbb
enter
popw
ret
xchg
repz
cmp
andl
add
shl
jmp
pop
jb
and
mov
mov
jmp
xchg
cld
shrb
ret
enter
xchg
arpl
clc
sub
jae
mov
jp
mov
xor
int3
and
or
aas
push
sti
fbld
or
fdivp
shll
into
jl
sbb
icebp
inc
cwtl
mov
out
pop
js
mov
sbb
xchg
aad
pop
inc
ja
mov
jno
nop
arpl
int
sbbl
movsl
es
jge
or
cmpsl
call
arpl
decl
int3
sub
pop
loopne
jbe
sbb
test
rorl
js
cmpsb
pop
cmp
dec
lods
jmp
and
jbe
scas
lods
add
lock
xor
mull
lcall
shlb
dec
xlat
imulb
in
gs
sbb
mov
ficoms
call
hlt
sub
xor
ja
rcl
and
add
mulb
popf
push
inc
nop
dec
in
jle
das
sbb
rsqrtps
mov
mov
cli
in
vorps
pusha
mov
pushf
not
mov
jmp
rol
pushf
push
dec
pushf
neg
push
call
repnz
jmp
fwait
sub
dec
and
xchg
ret
xchg
pop
sub
fcomps
mov
pop
push
subl
add
es
jle
andl
adc
mov
xchg
xchg
fwait
push
fwait
data16
cld
fiadds
dec
gs
mov
shll
lock
mov
rcll
mov
mov
aad
into
rclb
ja
cs
sbb
pop
sbb
out
inc
xor
imul
pop
loop
xchg
data16
iret
pop
movsl
fs
mov
leave
test
and
mov
xor
lret
fwait
jp
sbb
mov
xchg
lret
in
bound
inc
xchg
adc
adc
adc
mov
out
popf
ss
insb
cmc
mov
and
stc
jns
fwait
or
pop
mov
fwait
sub
inc
jne
fmull
mov
dec
sub
and
lret
xchg
push
sbb
mov
adc
dec
pusha
mov
adc
lea
pushf
jmp
mov
dec
and
xorb
mov
sahf
insb
subb
add
xor
mov
pop
outsb
mov
jns
mov
xorl
inc
sete
adc
pop
shll
pushf
xor
imul
sub
or
fisubrs
adc
notl
sbb
call
jge
push
push
sub
adc
mov
push
and
js
scas
imul
out
out
pop
jl
and
lods
out
test
jecxz
mov
xchg
add
daa
je
ss
push
xchg
fsubrl
xchg
std
xchg
and
inc
jne
outsl
inc
sbb
cmpsb
adc
xchg
mov
fldenv
loopne
mov
sbb
call
jecxz
sbb
mov
push
and
mov
inc
imul
testl
int3
pop
mov
clc
shll
nop
adcl
mov
je
or
xchg
ljmp
mov
jne
in
in
mov
sar
inc
push
xchg
scas
xchg
xchg
nop
scas
jle
loope
dec
or
adc
add
popa
sub
or
pop
dec
in
aam
dec
shlb
dec
mov
icebp
and
hlt
int
repz
dec
icebp
pop
mov
das
push
jnp
inc
stos
imul
loop
jp
and
dec
push
adc
test
cmpsb
jns
push
stos
pushf
pushf
lea
jmp
pushf
sub
push
pusha
mov
lea
call
call
shlb
dec
and
int3
cld
iret
pushf
fs
lret
sub
subl
arpl
push
into
jg
jecxz
inc
lods
in
sar
into
sub
loopne
jecxz
mov
data16
jg
lret
adc
adcl
fldl
repz
xchg
pop
inc
or
add
fsubs
mov
test
inc
adc
cmpsb
insl
pop
fldt
ss
repz
enter
cli
pop
cmpsb
pop
xchg
arpl
loopne
orb
faddl
aaa
inc
test
aas
ja
lods
test
cltd
mov
and
stc
xor
lret
aaa
adc
mov
dec
and
dec
mov
pop
dec
xorb
adc
mov
mov
mov
out
inc
enter
lret
sti
mov
push
sub
mov
mov
jae
mov
xchg
in
clc
jae
mov
jnp
and
cmc
fcoml
xchg
pop
push
xor
add
lret
xchg
fsubs
sub
fwait
roll
and
or
mov
push
sub
int3
test
and
test
sahf
pop
ds
and
imul
xor
shrb
loopne
add
and
mov
fnstenv
jg
or
jne
das
call
sarl
rep
adc
mov
mov
mov
clc
leave
jmp
sbb
xor
sbb
add
xor
xlat
mov
pop
ljmp
cld
shll
decb
mov
adcl
out
hlt
lds
add
popa
addr16
fwait
cmc
and
movsl
sbb
dec
pop
in
mov
push
cwtl
cmpsl
aas
shlb
add
mov
push
push
push
mov
pop
fbstp
xchg
add
pop
adc
sub
jge
xchg
pop
daa
sub
and
adc
pop
arpl
int3
std
fldcw
sub
dec
test
fs
fbstp
xchg
add
pop
push
frstor
test
push
pop
outsb
xchg
nop
cmp
nop
js
call
add
dec
jg
add
adc
das
insl
sahf
dec
popf
mov
into
sub
jmp
test
sub
iret
sub
xchg
jle
ret
cld
cld
cmp
mov
sbb
sub
mov
push
cmp
cmp
pusha
sub
in
faddl
cmp
pop
in
jecxz
lods
movsl
aad
imul
jge
adc
sahf
in
dec
sbb
andl
pop
mov
mov
jns
adc
popa
sub
cmp
scas
inc
arpl
repz
sbb
mov
and
cld
adc
pextrw
mov
xchg
cmp
mov
test
jns
cmp
pop
cs
add
lcall
dec
xchg
and
icebp
pushf
hlt
dec
lahf
sub
inc
jo
mov
repz
aaa
ljmp
daa
icebp
inc
and
int
push
push
xor
addb
xchg
out
jbe
mov
leave
pushl
pusha
lea
jmp
pop
rol
push
and
daa
pop
ss
mov
dec
sbb
sbb
aaa
imul
cld
ja
jno
xor
xor
outsb
cmp
dec
lcall
test
xor
and
pop
dec
pushf
inc
jns
sbb
addb
daa
stos
clc
fs
dec
mulb
mov
jl
inc
call
inc
stc
in
cmp
pop
and
dec
jae
fistps
fnsetpm(287
ret
enter
xor
push
sahf
push
outsb
ds
mov
pop
and
in
mov
xor
xchg
add
add
lea
inc
inc
push
xchg
lea
daa
pusha
pop
mov
add
mov
lea
cmp
bt
test
test
push
movzbw
bsr
mov
bt
sub
pushf
rep
movzbw
pusha
push
mov
pushf
lea
jmp
mov
pusha
mov
pushf
mov
push
pushl
ret
inc
ror
and
and
jmp
sbb
add
mov
adc
xor
outsb
sbb
movsl
push
mov
hlt
lds
and
imul
pusha
aam
bound
or
dec
mov
add
arpl
out
gs
adc
pushf
mov
jecxz
rclb
test
jnp
pop
loopne
hlt
test
cs
mov
mov
cmp
dec
pop
ds
data16
xor
push
out
cwtl
arpl
push
fbstp
inc
imul
push
lods
and
push
and
jbe
ja
push
fistpll
xchg
jg
cmpsl
add
mov
mov
inc
xor
adc
mov
xchg
and
cli
mov
mov
dec
stc
xchg
mov
cmp
jl
jnp
test
movsb
dec
mov
pop
ds
jae
loope
repnz
mov
xchg
jns
push
cltd
mov
rcrl
jl
inc
and
or
adc
dec
aad
hlt
leave
mov
sahf
push
jl
adc
or
stos
jns
stos
xchg
mov
mov
sub
cwtl
les
fwait
popa
xor
lock
aad
call
push
dec
stc
xchg
add
pop
mov
inc
push
jmp
mov
sub
fdivs
sub
xchg
nop
jae
fwait
and
mov
sub
cltd
rorl
mov
insl
into
mov
sbb
adc
dec
mov
ret
and
push
icebp
mov
pusha
aas
addb
sub
mov
into
mov
jne
lea
cli
mov
adc
mov
mov
popa
mov
mov
cmp
outsb
into
pop
dec
pop
test
mov
mov
sbb
enter
pop
pop
cwtl
fsts
mov
imul
mov
les
add
push
rolb
pop
in
fs
and
mov
iret
test
jne
jno
xchg
iret
pop
pusha
sub
cmc
test
and
fsubrs
mov
flds
je
mov
jnp
adc
sbb
pop
sbb
rclb
pop
dec
imul
lret
inc
loopne
dec
sub
push
jbe
or
mov
cmpb
in
and
inc
jmp
sbbb
mov
call
sbb
or
dec
jo
movsb
rep
mov
rcrl
lds
mov
idiv
xor
shr
hlt
lcall
pushl
lea
jmp
pusha
movl
call
xor
dec
adc
xor
aas
fdivrs
dec
ja
mov
rorl
xor
fistpll
inc
push
ja
dec
mov
cmp
nop
out
enter
mov
ret
add
rclb
imul
popa
pop
gs
arpl
fsts
fbstp
mov
push
or
lcall
int3
test
lds
scas
jbe
movsl
jne
jbe
push
sub
mov
seta
icebp
rcrb
cmpsl
add
jl
icebp
xchg
pop
bound
mov
bound
mov
dec
sahf
ret
pusha
repnz
dec
shl
or
shlb
push
test
sbb
ds
and
clc
sbb
xchg
and
in
jb
iret
repz
insb
cmp
aas
push
and
inc
cwtl
gs
pusha
call
add
pushf
movw
call
pushf
lea
jne
sbb
sub
pushf
dec
mov
bt
add
sbb
mov
pushf
push
bt
test
pushf
pusha
lea
je
pushf
jmp
neg
movb
call
call
lea
not
mov
call
dec
push
push
inc
push
xor
cs
insb
add
int3
mov
mov
in
rcrb
or
sub
pop
mov
adc
fsubrs
fistpl
negb
test
mov
mov
jbe
jecxz
sbb
fwait
mov
shll
lahf
sbb
dec
sbb
mov
int3
popf
outsl
jl
popl
cmpsb
int3
jge
pop
fadds
mov
add
add
stos
mov
xor
lds
mov
adc
jle
dec
mov
and
or
pusha
shlb
gs
js
cmp
xor
xor
adc
xchg
stc
mov
sub
test
mov
je
and
clc
mov
icebp
es
bound
ds
aam
lods
xor
mov
test
pop
fildll
push
jle
test
aam
jo
sbb
roll
es
mov
icebp
sahf
sbb
pop
and
jbe
addr16
test
mov
or
sub
lods
jbe
pop
cmp
nop
add
data16
shrb
dec
int
adc
add
inc
and
and
or
cmp
mov
fists
repz
int3
push
mov
testb
ljmp
es
sbb
jnp
pop
insl
sub
jl
sbb
mov
push
and
shrb
sub
stos
loop
sbb
popa
decl
andl
call
sar
sub
mov
add
btc
bt
mov
neg
movzbw
mov
push
push
xor
cmp
repnz
push
pushf
call
mov
dec
pop
and
fwait
leave
xchg
pop
and
ret
popf
js
daa
clc
lret
dec
pushf
pop
pushl
add
out
jl
cmp
and
inc
mov
inc
or
repz
push
shlb
jg
imul
xchg
outsb
mov
jmp
das
sti
dec
fsqrt
add
xchg
pop
sub
sahf
jne
cwtl
imul
mov
cli
cli
jecxz
rorl
orb
vcvttps2dq
sub
repz
dec
adc
mov
inc
cmpsl
shrb
mov
cmp
lea
mov
mov
fucomp
xor
cwtl
fbld
roll
pop
out
push
xlat
mov
mov
cmpl
ja
fs
jne
clc
jmp
fisubl
and
lret
pushf
push
or
cmpsl
jg
daa
add
cs
adc
repz
rclb
adc
lock
inc
test
outsl
mov
fnstsw
insl
pop
push
rol
test
push
push
sub
stos
sub
inc
out
xor
sahf
push
bound
dec
push
stos
or
jmp
fdivrs
jmp
push
pop
sub
dec
movsl
push
jnp
cli
lcall
into
add
hlt
dec
sub
shll
iret
mov
push
xchg
inc
ja
fisttpl
subl
enter
movw
lea
jne
clc
mov
bt
bt
push
add
test
pushl
pusha
movzwl
shr
mov
cmp
bt
cmc
add
mov
mov
jmp
in
mov
int3
loope
in
ret
cwtl
jb
push
jmp
xlat
sbb
inc
hlt
sub
inc
test
pop
cli
cmp
sub
clc
aad
lret
sub
cs
ficoml
cmp
pop
test
mov
out
pop
out
xchg
xchg
divl
sub
lods
loopne
into
and
xor
gs
addr16
bound
orb
jecxz
int
pushf
daa
ja
movsb
dec
call
mov
xor
fistpll
jmp
nop
xor
jae
pushl
pushf
lea
ja
pusha
bt
cmc
imul
test
stc
jmp
and
int3
pop
dec
sbb
mov
cmp
mov
int3
xor
mov
xor
fwait
stos
sbb
andb
stos
mov
cli
and
mov
mov
nop
les
or
pop
ret
movsl
call
movhlps
xor
and
aaa
pop
xchg
xor
mov
scas
test
add
movsl
ja
xor
fdivs
cwtl
insb
shll
int3
xchg
mov
rcrl
cwtl
jle
jbe
jae
dec
xorl
xchg
fs
xchg
repnz
jno
jo
sbb
cmp
cmpl
cmp
add
pushf
rclb
shrb
xor
mov
xchg
bound
add
mov
scas
es
pop
mov
das
xor
pushf
stc
inc
mov
jg
inc
push
dec
mov
jle
jge
xchg
jno
or
mov
rol
test
call
pop
idiv
sbb
adc
and
mov
dec
adc
sub
push
hlt
imul
fwait
xchg
pop
sbb
in
cltd
ret
xor
push
sbb
std
sub
jb
sbb
and
into
mov
pop
pop
ljmp
mov
outsl
jecxz
rorb
cmc
daa
je
fcomp
push
lahf
pop
pusha
aam
addb
push
stos
or
decl
jnp
aam
rcrl
es
mov
dec
sbb
mov
fsts
outsl
inc
sbb
and
xorl
add
popf
xor
inc
call
shrb
out
push
jnp
mov
stos
aas
add
lods
loope
nop
lds
movsb
dec
jl
scas
insl
or
jae
aaa
mov
push
or
aas
xchg
and
outsb
leave
mov
xor
sub
les
lcall
rcrl
dec
xchg
addr16
and
rorb
push
or
inc
je
pushf
jl
jnp
pop
and
in
repz
xchg
push
and
mov
pop
sub
and
inc
into
subb
dec
mov
mov
push
sub
mov
sub
xchg
add
fnstcw
mov
push
mov
mov
xchg
pop
cmp
int
pop
and
out
stc
inc
loope
out
pop
push
iret
and
dec
xlat
je
stc
push
sub
imul
test
int
insl
inc
ds
cmp
and
or
and
or
pop
and
ja
jae
pop
shlb
lds
lea
push
mov
or
xchg
xor
decb
sub
es
sub
ret
cmovo
lcall
sub
lea
roll
push
movsl
add
sbb
clc
repnz
jl
pop
ja
leave
sub
or
movsb
or
lods
daa
dec
push
mov
adc
adc
pop
lret
pusha
test
negl
lahf
xor
mov
inc
adc
stos
js
adc
stos
test
mov
mov
outsb
mov
rcll
jg
and
mov
flds
mov
push
ljmp
pop
jnp
out
mov
sti
repz
aad
or
pop
xchg
xadd
pop
mov
je
cmc
push
cwtl
xchg
dec
sahf
fldl
movsl
inc
fwait
loope
ret
ret
ja
pop
loope
ret
mov
and
add
fsubrl
ficoms
mov
nop
push
lods
ljmp
mov
imul
rcll
lcall
test
inc
mov
mov
sbb
int3
movsl
jbe
or
mov
cmp
pop
insl
adc
hlt
mov
cmp
andl
sub
outsl
fwait
pop
and
cli
jno
dec
inc
test
sti
movsb
xchg
inc
insb
and
xchg
pop
pop
data16
in
mov
xchg
xchg
in
repz
int
leave
dec
sbb
int
insb
cmp
cmp
cmpsl
das
cwtl
sbb
xor
mov
int3
xorb
sbbb
shrl
hlt
mov
xlat
mov
fnstcw
pushl
clc
lods
lea
fcompl
loope
ret
scas
push
jmp
xchg
mov
loope
xchg
xchg
pop
mov
dec
mov
or
sbb
mov
pushf
out
lcall
insb
cmp
hlt
loop
and
adc
loop
and
and
mov
mov
xor
mov
pop
in
mov
inc
pop
pushl
jp
movsl
pop
push
jmp
cs
mov
jge
cmpsl
xlat
xchg
hlt
inc
sub
mov
imul
xchg
nop
mov
mov
aad
add
lret
icebp
aaa
jle
movsb
jl
sub
mov
jmp
scas
pop
xor
push
lea
dec
inc
mov
mov
push
sub
aad
jae
sbb
mov
pop
or
lock
cld
sub
and
mov
cmpsb
out
jp
jle
ljmp
daa
sub
adc
lock
in
orl
lods
rol
movb
movw
call
lea
je
push
sub
test
cmp
jmp
push
fistps
mov
pusha
xor
lret
mov
mov
flds
imul
xchg
sahf
sub
adc
les
lds
insb
or
cld
inc
adc
sub
fwait
sbb
xchg
jp
lret
adc
jp
mov
mov
dec
aas
mov
xorl
pushf
insb
dec
daa
add
fwait
insl
inc
adc
out
pop
xchg
pop
or
loop
mov
lret
xor
iret
pushf
jo
or
xor
roll
push
adcl
cmp
or
popa
lea
jmp
loop
sbb
or
imulb
and
sub
and
or
test
cld
pop
cmp
mov
mov
clc
imulb
lods
add
sub
loopne
push
fsubrl
repnz
enter
dec
mov
mov
das
pop
push
pushl
pusha
mov
lea
ja
pusha
pushf
lea
jb
cmp
test
jmp
jmp
and
int3
adc
outsl
cmp
out
fwait
imul
shr
xlat
mov
mov
cld
mov
fwait
data16
sub
push
mov
mov
sub
push
push
add
test
lock
out
cmpsl
mov
stos
or
ljmp
and
sub
cmpsb
aam
ret
sbb
lds
push
outsl
test
rorl
pop
cs
cmpsl
cs
movsl
and
je
sbb
rcll
lock
pop
push
xor
je
jle
or
cltd
adc
mov
scas
inc
subl
daa
rolb
cmp
imul
jmp
sub
insl
loope
jb
sbbb
ret
stos
mov
pop
int
dec
and
in
xchg
sti
shlb
sub
pop
mov
cmpsb
adc
lea
jae
push
pusha
call
and
and
jecxz
test
fisubrs
inc
xor
add
cmp
adc
pushf
push
or
fwait
push
mov
push
lods
in
pop
into
jmp
fimuls
xchg
pop
lods
jae
xchg
aad
and
sbb
shr
clc
pop
subb
mov
mov
ret
sti
fld
cmp
mov
ljmp
das
sbb
mov
mov
and
fcompl
mov
imul
cmp
push
mov
pop
lret
shlb
pop
mov
mov
cmp
or
jne
xchg
test
pop
lods
int3
aaa
add
pusha
into
mov
fbstp
fdivl
in
mov
iret
pop
xchg
out
mov
movsb
and
and
int
insb
cmp
xchg
pop
and
fs
jae
ja
enter
insb
mov
aam
or
jg
test
out
lods
das
ret
outsb
cmpsl
insl
mov
and
out
imul
cld
adc
adc
jns
cmpl
mov
dec
xchg
mov
cld
ss
and
lds
es
out
sub
sub
pop
pop
in
jb
mov
cwtl
pop
mov
push
pop
into
adc
aaa
xchg
inc
xchg
fs
or
popf
pop
in
mov
sti
push
and
cmpsl
ss
cmpsl
and
jae
sbb
scas
jb
sbb
ret
dec
mov
xorl
sahf
jb
jmp
pushf
std
divb
fimuls
stos
adc
inc
xchg
xchg
cli
test
xor
outsl
mov
movsb
push
add
add
cmpsl
adc
aam
rolb
adcl
repz
sub
pop
lock
out
inc
jb
jle
mov
rcll
aaa
xchg
pusha
mov
movsl
cli
xlat
adc
int3
and
repz
cmpsl
jnp
adc
cmpsb
outsl
cmp
pusha
sub
out
mov
int
cmp
test
dec
scas
bswap
adc
sbb
dec
out
or
out
enter
mov
inc
or
shr
or
mov
inc
imulb
push
push
xor
popf
sub
inc
mov
sbb
push
loope
xor
lcall
subl
dec
shl
and
and
pop
sub
pop
sub
int3
lcall
push
add
xchg
fimuls
test
jp
stc
pop
lahf
push
push
sub
divb
lods
inc
pop
and
stc
js
popa
loopne
mov
out
daa
mov
sub
out
mov
scas
jo
cmp
insb
mov
inc
xor
mov
out
xchg
pop
sub
xchg
push
rcl
fnstsw
sbb
xchg
lods
cmpsb
and
fdivs
into
xchg
pop
and
fiaddl
rorb
jnp
and
popa
mov
jbe
jae
aam
dec
dec
or
pop
into
int3
cwtl
cmpsb
xor
out
insb
jg
sbb
cli
addr16
movsb
inc
hlt
and
rorb
lods
mov
in
icebp
test
enter
test
push
mov
lods
xor
mov
jae
mov
push
jns
jbe
movsl
jg
cmp
in
mov
add
out
or
jnp
popf
fdiv
rcrb
call
call
pushf
pushf
mov
call
setnp
movzbw
mov
pusha
mov
jmp
dec
loopne
test
pop
sub
ret
inc
or
lcall
push
cmp
jg
mov
das
or
jbe
push
xor
lock
xchg
movl
push
cmp
mov
repnz
movsl
sub
cmc
or
jecxz
fwait
int
mov
dec
call
push
sbb
das
ds
aas
mov
or
sub
shl
lahf
scas
mov
or
inc
sbb
mov
push
and
rclb
cmpl
movsl
fwait
pop
add
and
pop
and
movl
movb
jmp
lods
movb
bt
ror
cmc
stc
not
clc
call
js
xor
jge
adc
les
ret
mov
inc
mov
mov
mov
leave
inc
mov
mov
movsb
xchg
pushf
push
jle
in
mov
push
test
cmp
or
dec
aas
mov
sahf
lret
test
das
data16
jno
test
pop
pop
mov
and
cmpsb
out
aaa
pop
cmp
insb
lea
sub
mov
jecxz
mov
popa
fsts
cld
push
sub
push
inc
stos
and
sbbl
cmp
mov
sub
imul
mov
data16
fs
pop
cmpsb
je
ror
imul
xchg
data16
jecxz
in
in
daa
lahf
je
dec
and
hlt
mov
jno
and
jge
sub
and
inc
repnz
and
clc
ret
cwtl
ret
jnp
pop
adc
cld
inc
fs
out
fucomip
push
xchg
dec
jae
out
mov
das
and
and
cmpsb
jbe
cltd
push
sbb
xor
into
jo
cmp
gs
shr
stos
and
or
stos
outsb
aas
sbb
mov
jecxz
mov
push
pop
rorb
jl
lds
push
mov
ret
cmc
stos
xchg
ljmp
iret
mul
push
lock
push
mov
repz
lea
lea
adc
xchg
fiaddl
mov
pop
ret
movsl
js
mov
in
ja
xor
loop
push
mov
adc
jmp
pop
sub
mov
outsl
add
hlt
mov
stos
xor
and
jns
and
rcrb
pop
test
push
push
xor
fisttpll
pop
je
pop
jle
out
ldmxcsr
lret
stos
repnz
out
ret
pop
arpl
inc
hlt
and
sarb
dec
cli
sub
dec
jno
fsubs
cmp
rorl
mov
push
jmp
and
inc
imulb
jbe
push
push
clc
mov
inc
mov
shll
xor
pop
xchg
mov
out
loop
imul
in
or
leave
mov
mov
push
push
or
test
xor
cmp
jge
stos
and
cmpsb
ja
pop
jmp
mov
aad
jp
mov
pop
stos
push
add
pop
xchg
cwtl
pop
cwtl
jp
push
mov
cmc
repnz
mov
fists
mov
je
pop
rorl
mov
js
add
or
xor
stc
xchg
cmp
jmp
inc
mov
shll
fnsave
ret
xor
sbb
popa
cwtl
and
and
jp
sbb
rclb
movsl
mov
push
es
mov
mov
fdivr
test
popf
repnz
pop
cmp
iret
lods
cs
and
movb
dec
sti
inc
rclb
push
fisttpll
pop
inc
sub
or
outsb
call
scas
mov
rclb
pop
ret
sqrtps
jg
push
cmpsb
jmp
ja
sub
lds
fbld
in
sbb
popl
xchg
xor
aad
mov
lret
mov
mov
lcall
jo
test
adcb
xchg
cwtl
dec
test
inc
in
pop
push
push
sbb
xchg
add
push
xorb
aam
xor
and
in
adc
and
or
pusha
scas
fiadds
rcrb
in
mov
lret
cmp
pop
add
setno
mov
pushf
push
movl
lea
call
jle
pusha
adc
call
outsl
cmp
cmp
out
ret
aas
adc
stos
jb
das
clc
mov
sub
imul
push
pop
mov
adc
mov
push
xchg
cmp
pusha
lods
hlt
ja
pop
pop
adc
push
shrl
sub
lea
push
out
sbb
mov
inc
mov
inc
adcl
inc
sbb
int3
lahf
jno
adc
lods
mov
push
jecxz
mov
and
mov
fbstp
dec
jecxz
mov
sbb
pop
xorl
aas
out
add
lods
xor
daa
push
push
xchg
dec
adc
xor
mov
mov
fdecstp
push
xchg
pop
jp
sbb
xlat
and
sbb
dec
mov
nop
fldcw
xlat
movsb
ja
and
or
sbb
sbb
outsl
es
xor
jnp
sbb
cltd
cmp
ljmp
inc
js
clc
push
pop
ret
inc
je
cmpsl
out
loope
xor
and
add
add
cltd
pop
adc
xor
sbbl
lret
outsl
shl
je
scas
inc
mov
and
mov
push
push
es
add
sub
lds
sub
add
jge
mov
push
cmp
shll
lods
jns
es
push
ret
out
mov
rol
into
xchg
xor
shll
sbb
test
out
pop
inc
cmc
xor
and
pop
arpl
scas
pop
xchg
or
cli
jg
cmp
les
jle
or
das
cli
lret
stos
xchg
ret
fwait
insl
pop
mov
in
adc
cs
scas
and
jo
pandn
popf
test
mov
test
mov
outsb
mov
bound
lock
sub
orl
dec
pop
push
sbb
push
xchg
inc
jg
cmp
cmp
ljmp
sbb
cld
daa
dec
inc
dec
mov
xor
clc
xchg
inc
imul
adc
sub
int3
cmpsl
movsl
push
lcall
les
adc
adc
add
push
fildll
push
mov
mov
cmpsb
rol
mov
test
clc
pop
rcrb
iret
stos
mov
pop
test
imulb
lahf
shrl
fnstsw
add
cli
es
test
aam
insl
cmp
pop
iret
xor
push
in
iret
cld
mov
in
fisttpl
lods
inc
movl
mov
dec
adc
push
lods
xchg
stos
stos
idivl
jmp
xchg
imul
pop
cmp
lcall
lcall
call
pop
xlat
mov
int3
adc
or
mov
mov
outsb
inc
adc
add
into
or
call
jg
imul
xchg
fbstp
sbb
inc
adc
and
pushf
leave
mov
icebp
dec
lods
pop
xchg
imul
movsb
or
xor
mov
jb
aaa
adc
stos
idivb
loope
mov
insl
scas
stos
loope
inc
or
dec
fcompl
arpl
je
out
jle
aas
cmp
sbb
es
adc
mov
push
and
mov
jge
fisubrs
call
pop
int3
push
insb
mov
int3
mov
das
stc
shrb
or
sbb
mov
xlat
stc
sub
mov
mov
clc
sub
push
and
mov
cmp
cmp
ds
aad
inc
fadds
flds
stos
stos
fsubrp
dec
push
sar
mov
dec
addb
repz
fidivs
rcrl
cli
xchg
pop
inc
xchg
mov
stc
push
sub
subb
loopne
adc
test
or
mov
pop
and
mov
jle
in
mov
hlt
dec
pop
jnp
pusha
pushf
lea
je
pushf
sub
pushl
pushf
cmp
cmp
lea
pusha
jmp
pusha
jmp
not
dec
movsbw
inc
pushf
mov
lea
jne
ror
bsr
jmp
xchg
pusha
pushf
mov
mov
mov
xchg
movzbw
mov
bswap
mov
pushf
pushf
popl
btc
rol
pushl
popl
pushf
movl
btc
clc
mov
not
bt
bt
push
rol
movsbw
shld
bsf
xor
neg
shrd
dec
sar
sub
shrd
movzbl
lea
lea
xor
bt
inc
sub
cmc
sar
pushf
lea
add
mov
call
clc
mov
pushl
bts
rol
bt
shl
sbb
pushl
xor
dec
sub
bswap
call
pusha
jmp
pushf
call
pusha
inc
jmp
jmp
pushf
mov
jmp
mov
pushf
jmp
mov
not
push
mov
push
movzbl
mov
movsbw
pushf
xchg
pusha
call
call
jmp
shl
mov
test
bt
jmp
movl
call
call
jmp
pushl
pusha
mov
pushf
pushf
lea
jmp
neg
sub
rcr
movzbl
clc
sub
jmp
call
rol
pushf
not
call
lea
movsbw
mov
movsbl
pushf
pop
mov
mov
pushf
lea
xchg
movzbw
pushf
popl
movsbw
clc
movzbl
pushl
popl
xchg
cmc
movl
not
xchg
bts
mov
cmc
rcl
rol
xor
shl
movsbw
sub
xor
mov
sar
pop
sub
pop
jmp
and
mov
sbb
sub
sub
add
pusha
mov
lea
jbe
pusha
mov
pushf
call
shld
bts
mov
cmc
mov
jp
sub
test
clc
shl
call
cwtl
mov
pushf
mov
call
pushf
popl
jmp
jmp
call
jmp
bswap
movsbl
rol
sar
xor
sbb
sub
push
bswap
lea
push
pushf
lea
jmp
bswap
movl
clc
bt
not
jmp
mov
mov
pushf
lea
jmp
pusha
mov
pusha
pushf
jmp
call
dec
stc
clc
add
jmp
movzbw
pop
mov
not
movzbw
mov
call
stc
push
shl
pusha
pushf
push
mov
pushf
call
neg
mov
dec
shr
neg
shl
mov
jmp
call
pushl
popl
push
pushf
lea
jmp
jmp
mov
movsbw
mov
pop
pushf
popl
rcr
pushl
bswap
pushl
popl
bswap
stc
call
lea
je
cmp
cmp
test
cmp
xor
cmc
cmp
cmp
xchg
test
cmp
pusha
cmp
mov
mov
mov
sub
pusha
pushf
lea
jne
pusha
clc
xor
jmp
bswap
jmp
mov
jmp
bswap
not
mov
mov
call
call
shl
mov
sbb
and
sar
xor
add
movsbw
stc
mov
sub
inc
sub
mov
stc
jmp
jmp
not
call
jmp
call
lea
jne
push
or
xor
bsr
xorb
bswap
pop
pushf
mov
pusha
lea
jmp
stc
sub
push
mov
test
sub
jmp
sub
bt
and
movb
push
pusha
mov
call
pushf
test
cmp
cmc
shld
pusha
pusha
mov
mov
call
sub
pushl
pusha
push
mov
pushf
pushl
lea
jmp
mov
pushf
call
pushl
pop
mov
pushl
bswap
mov
mov
mov
bswap
jmp
push
mov
jmp
sub
jmp
lea
jge
push
pushf
mov
pusha
xchg
push
pushf
movsbw
mov
mov
pusha
pushf
mov
mov
pushf
mov
mov
pop
jmp
pusha
mov
pusha
mov
lea
jo
pusha
mov
pushf
movl
mov
movsbl
mov
lea
movzbw
mov
mov
movsbl
movw
mov
jmp
not
pushl
mov
test
cmp
bt
add
pushf
lea
jmp
xchg
add
mov
cmp
jmp
jmp
mov
pushf
pusha
pushf
lea
jmp
mov
pushf
call
mov
mov
mov
pushl
pop
mov
pushf
push
mov
pushf
bswap
pusha
mov
mov
movsbw
mov
call
pushf
mov
mov
push
pusha
push
jmp
sub
call
inc
pushl
sub
bt
pushf
cmp
call
jmp
sar
mov
rol
xor
mov
jb
test
pushf
not
bt
jmp
pusha
mov
push
pushf
pushf
pushl
mov
jmp
pushl
popl
clc
lea
cmc
mov
movl
clc
xchg
pushf
rcr
mov
btr
bswap
rol
pushf
inc
xor
inc
sub
movsbl
movsbw
lea
push
pusha
mov
lea
jmp
bswap
xchg
xchg
bswap
pushf
popl
clc
pushl
popl
btr
movl
btr
mov
lea
pushf
rol
rcl
xor
shl
mov
shr
jmp
pushf
pushf
pushl
popl
push
push
movb
mov
lea
jmp
shld
rol
rcl
mov
clc
stc
cmc
call
stc
test
cwtl
test
pushf
cmp
sub
movw
bt
add
mov
mov
pushf
pushf
mov
lea
jmp
jmp
pushl
popl
pushl
movb
movb
movb
lea
jmp
add
add
sub
lea
bswap
pushf
lea
mov
movb
push
lea
jmp
or
pushl
jmp
call
bts
pusha
clc
mov
bt
clc
clc
sub
pushf
pushf
mov
push
mov
pushf
push
pushf
push
lea
jmp
movb
mov
movb
lea
jne
pusha
pushf
pusha
pushf
mov
push
movb
lea
jmp
push
jmp
jmp
pushf
mov
movb
mov
mov
not
mov
movzbw
pushf
mov
push
pushf
pushf
mov
not
mov
xchg
lea
movsbw
xchg
movsbl
pushf
popl
pusha
rcl
xchg
pushl
popl
bt
movl
pop
movzbw
movzbw
mov
bt
btr
rol
movsbw
xor
sar
stc
test
push
sub
push
lea
pushf
pushf
lea
jmp
add
test
shrd
pushf
mov
call
mov
mov
lea
jmp
lea
jb
mov
pushf
mov
lea
jmp
div
pushf
mov
jmp
cmc
pop
lea
rol
dec
bt
cmc
movzbw
xor
ror
sub
sbb
sub
movsbw
movsbw
lea
movb
pushf
push
pushf
lea
jmp
call
push
mov
call
mov
jmp
push
pushf
call
movsbw
jmp
pusha
jmp
mov
movw
push
mov
mov
call
bt
shl
pusha
mov
and
cmc
mov
stc
test
sub
movb
clc
shr
pushl
call
inc
jmp
rol
cmc
clc
cwtd
mov
shrd
mov
push
cmp
sub
jl
sub
jmp
pusha
shr
cmc
jmp
lahf
push
bswap
mov
movsbw
mov
xchg
mov
not
mov
mov
movsbw
mov
lea
push
mov
mov
push
push
push
pushl
ret
inc
movsbw
call
mov
jmp
pushl
popl
pushf
lea
jmp
clc
sub
jmp
pushl
popl
pushf
pushl
lea
jmp
mov
not
btc
not
mov
sbb
cmc
mov
jmp
pushl
popl
pushl
pushf
pushf
lea
jmp
jmp
push
lea
jne
sub
shl
cmp
xorb
movzbl
pop
pusha
lea
jmp
push
mov
lea
setl
not
movsbw
mov
setbe
mov
movzbw
xchg
call
mov
pushf
call
mov
pop
movzbw
mov
bswap
bswap
movzbw
mov
mov
lea
xchg
movzbl
call
pusha
call
pusha
mul
call
pushl
movb
mov
mov
mov
pushf
lea
jmp
xor
add
inc
stc
sub
mov
pushl
call
movb
jmp
push
pushl
popl
pushf
pushf
mov
lea
jmp
pushf
not
bt
push
test
jmp
inc
rdtsc
bt
stc
pusha
cmp
sub
pushf
pushf
pushl
jmp
lea
movzbw
mov
pusha
mov
call
lea
jne
btc
seta
rcr
xorb
call
pushf
popl
call
push
inc
or
shrd
cmc
movzbw
xor
btc
test
cmc
pusha
add
rcr
add
sar
add
neg
btc
mov
clc
test
test
test
add
jmp
push
pushf
push
push
mov
push
pusha
pushl
ret
xchg
pushl
xchg
pushf
popl
pushf
pushl
rcr
movsbw
pushl
popl
pushf
movl
lea
pushl
rcl
ror
mov
bswap
cmc
bts
rol
shrd
shrd
or
xor
cmc
sub
movsbw
pop
lea
pushf
movb
lea
jmp
call
das
ror
das
call
add
mov
push
jmp
call
pusha
pushf
pushf
mov
lea
jne
mov
pusha
lea
jne
not
mov
cmc
stc
bt
test
and
clc
cmc
cmp
call
lea
mov
xchg
push
xchg
pushf
popl
pop
cmc
pushl
popl
call
call
mov
jmp
rcl
mov
rcr
shl
mov
pushf
sub
stc
bt
pushf
pushl
shr
movb
movb
mov
call
pusha
jmp
shl
jmp
and
rcl
sub
movsbw
mov
bswap
jmp
mov
bswap
push
call
sub
clc
pushf
cmp
movb
add
pusha
lea
jg
pusha
pushf
popl
pushf
pushf
pushl
popl
movb
lea
jmp
setle
movzbw
movzbw
push
movsbw
movsbw
push
setne
mov
pusha
pushf
lea
cpuid
test
sub
bt
cmpl
pusha
pushl
mov
call
bt
pusha
not
bt
bt
not
bt
and
mov
movb
mov
call
cmc
mov
xor
xor
mov
jmp
mov
mov
jmp
sub
bswap
push
dec
pusha
pusha
call
pushf
pushl
popl
mov
mov
mov
lea
jmp
bswap
jmp
movw
mov
jmp
pop
pushf
popl
rol
xchg
pushl
popl
bts
stc
bts
movl
bt
mov
call
xchg
bswap
mov
mov
mov
shl
shr
btr
mov
jmp
push
push
or
pushf
jmp
call
pusha
movb
test
mov
cmc
call
jmp
mov
pusha
call
rep
inc
sar
bsr
shl
mov
pushf
pushf
ror
shld
mov
pushf
cld
push
test
pushl
popf
push
mov
mov
lea
jmp
aad
cbtw
mov
test
cmc
test
pushf
add
push
test
stc
xor
pusha
rol
pushf
jmp
pushf
popl
pushf
call
not
push
mov
pusha
pushf
jmp
mov
mov
not
pushf
rol
jmp
pushf
pushl
pushf
mov
movb
pushf
pushf
movb
lea
jmp
movb
mov
pushf
call
call
cmc
mov
jmp
pushf
pushf
popl
push
push
mov
push
pushl
popl
mov
movb
mov
movl
lea
jmp
push
pushf
sub
pushf
call
pushf
mov
pusha
xchg
movsbl
jmp
movb
movw
pushf
popl
pushf
pushl
popl
pushf
pushl
pushf
pushl
lea
jmp
add
jmp
xor
pushf
rol
pusha
push
push
dec
cmp
add
stc
jmp
mov
pusha
jmp
inc
movsbl
btc
bts
ror
pusha
not
xor
inc
jmp
mov
call
pusha
push
mov
call
lahf
bts
mov
push
mov
cmp
dec
shr
mov
pusha
add
jmp
mov
push
lea
pusha
call
jmp
movl
xchg
mov
bswap
call
not
mov
bswap
xchg
not
pushf
popl
rol
xchg
pushl
popl
xchg
clc
not
movl
bswap
not
mov
call
mov
movb
mov
mov
mov
mov
mov
lea
jmp
cmc
bt
sub
jmp
pusha
push
mov
mov
pushf
pushl
jmp
neg
add
shr
call
movsbw
pushf
popl
call
movzbl
mov
not
pop
pop
pushf
mov
lea
lea
call
pushf
mov
pushf
movw
lea
jmp
shl
sbb
cmc
mov
call
push
pushf
popl
call
shld
mov
test
pusha
add
jmp
pushf
popl
mov
mov
pushl
popl
pushf
pushf
movb
pushf
lea
jmp
adc
and
pop
xor
mov
jmp
pushf
push
jmp
stc
jmp
movb
add
push
jmp
shld
bsr
mov
pusha
pusha
test
sub
clc
cmc
stc
add
lea
jo
push
pushf
popl
jmp
add
jg
bt
pushf
shld
pusha
mov
push
pushf
jmp
pushl
movsbw
not
rol
bt
setp
rol
rcl
pushf
not
dec
rcl
dec
sub
stc
movzbl
bt
add
jmp
jmp
movzbw
bswap
mov
cmp
pusha
add
pusha
call
shr
notl
setnp
shld
mov
call
mov
adc
or
mov
jmp
pushl
popl
mov
pushf
movw
lea
jmp
pusha
push
pushf
popl
call
add
pushf
mov
movb
movb
pusha
push
lea
jmp
mov
pushl
mov
movw
lea
jmp
pushf
call
xor
clc
mov
pusha
clc
xor
jmp
pusha
pusha
mov
call
mov
pushf
pushf
lea
jmp
call
jmp
and
push
pusha
pushf
popl
jmp
mov
jmp
decl
pushl
lea
jne
pusha
mov
mov
pushf
pushf
lea
jmp
clc
call
add
jmp
bt
rcr
movzbl
cmp
not
shl
sub
call
pushf
mov
jmp
call
lea
lea
pushf
pusha
lea
jmp
jmp
call
call
push
lea
push
xchg
jmp
movb
xor
jmp
jmp
neg
lea
mov
sar
rcr
xor
movzbl
sar
shl
dec
mov
call
push
mov
mov
call
pusha
pushf
jmp
push
mov
call
pushf
call
pushf
mov
pusha
mov
movw
pushf
mov
mov
push
mov
movb
jmp
call
call
test
add
pusha
movb
movw
mov
pusha
mov
pushl
ret
lea
pushf
lea
jmp
ror
rol
sub
ror
xor
shrd
rol
rcr
bsr
sub
jmp
not
not
pusha
mov
pushf
push
lea
jmp
pop
mov
not
call
cld
call
pusha
xchg
jmp
not
lea
js
pushf
lea
pushl
ror
movsbw
push
clc
mov
stc
rol
btr
rol
shl
xor
call
movb
mov
pushf
pushl
jmp
mov
add
cmp
jmp
jmp
call
pusha
pushf
pushl
popl
pushf
push
pushf
pushf
lea
jmp
mov
mov
pushf
popl
pushl
call
call
bt
bt
cbtw
stc
stc
cwtl
cmc
sub
call
pusha
shr
dec
bswap
mov
test
mov
xor
push
add
push
seto
mov
not
mov
jmp
pushf
jmp
lea
ja
dec
mov
test
sbb
xchg
test
lea
inc
sub
call
call
mov
pushf
lea
jbe
pusha
pushf
pushf
popl
jmp
push
pop
rol
bsr
neg
clc
neg
xor
cmc
xor
shrd
pop
sub
lea
lea
mov
pushf
movb
lea
jmp
lea
jl
push
pushl
popl
pusha
pushf
movb
pushf
lea
jmp
push
movsbw
call
bswap
call
pusha
mov
push
pushf
call
sub
movsbw
mov
rol
add
add
shl
sub
rol
mov
call
pusha
mov
push
lea
jmp
adc
push
bt
lea
call
pusha
jmp
movb
call
not
clc
jmp
jmp
mov
pushf
movb
movb
lea
jmp
not
lea
pushf
lea
jmp
mov
pusha
mov
push
pushf
call
jmp
pusha
pushf
popl
pushl
movw
call
lea
pop
movzbw
mov
not
pop
mov
movl
pushf
popl
pushf
btc
movsbw
pushl
popl
rol
movl
pushl
rol
bswap
mov
clc
movzbl
pushf
rol
shr
neg
pushf
rcl
xor
lea
call
jmp
pushf
pushl
popl
push
lea
jmp
mov
pushl
lea
jmp
pusha
pushf
popl
call
pushl
movb
pushf
popl
call
lea
jne
movsbl
mov
pusha
bt
pushf
clc
and
pushl
cmp
pushf
jmp
pushf
popl
btr
bts
movsbw
rcl
pushl
popl
bts
btc
btc
movl
pusha
rcl
btc
movzbw
mov
rcl
rol
ror
btr
xor
btr
shrd
sub
jmp
add
movb
mov
call
cmc
bt
clc
call
pusha
mov
sbb
mov
cmc
sub
pushf
shr
pusha
jmp
pushf
movb
mov
movb
pushf
popl
pushf
pushl
popl
mov
movw
pushf
push
lea
jmp
call
clc
btr
rol
pop
xor
and
not
sub
lea
not
movzbl
movzbw
lea
mov
pusha
pushf
movw
lea
jmp
mov
push
mov
xchg
pushf
mov
push
movl
call
call
mov
not
bswap
mov
push
bswap
bswap
jmp
push
mov
call
mov
pop
call
push
mov
mov
lea
jmp
btr
movl
bswap
btr
pushf
mov
movzbw
movzbl
jmp
and
add
mov
test
add
push
mov
movb
movb
lea
jmp
pusha
mov
inc
pushf
mov
test
cmc
xor
call
cmp
and
mov
sar
mov
call
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
sub
push
shl
jmp
movw
mov
pushf
mov
mov
call
pusha
call
push
mov
push
call
pushf
popl
call
pushl
pusha
call
mov
jmp
jmp
jmp
pusha
mov
jmp
call
rdtsc
aam
cmp
call
shl
shl
movzww
bt
cmp
jmp
btr
pushl
popl
stc
ror
lea
movl
movsbw
btr
bt
xchg
mov
bt
bt
btr
rol
rcr
sar
push
jmp
mov
pushf
movb
jmp
movl
call
pushf
xchg
movzbw
lea
mov
pushl
lea
lea
mov
lea
jmp
mov
lea
rol
lea
jmp
add
mov
add
sub
outsl
and
add
push
add
mov
add
mov
add
sahf
add
jns
outsl
sub
add
pop
add
sahf
add
sahf
add
int3
add
std
add
jb
outsl
and
add
std
add
outsb
add
fiadds
outsl
sub
add
sub
outsl
ss
add
mov
add
sbb
outsl
and
add
add
sahf
add
roll
outsl
cmp
add
xchg
add
roll
outsl
cmp
add
xchg
add
roll
outsl
cmp
add
xchg
add
roll
outsl
cmp
add
xchg
add
roll
outsl
cmp
add
xchg
add
roll
outsl
cmp
add
xchg
add
roll
outsl
cmp
add
xchg
add
roll
outsl
cmp
add
xchg
add
mov
add
xchg
add
push
add
pop
add
sbb
outsl
and
add
sbb
outsl
push
cmp
outsl
push
add
outsl
and
push
add
int3
add
sbb
outsl
adc
add
xor
outsl
cmp
js
outsl
sbb
add
pop
add
xor
outsl
cmp
add
sub
outsl
cmp
add
mov
add
mov
add
sub
outsl
sbb
add
push
add
add
outsl
adc
outsl
and
add
push
add
sub
outsl
push
cmp
outsl
pop
jb
outsl
cmp
add
add
outsl
sbb
int3
add
sub
outsl
and
add
add
jmp
add
sub
outsl
adc
xchg
add
pop
add
xor
outsl
push
push
add
aam
outsl
and
add
popf
add
jns
outsl
cs
add
jns
outsl
and
add
daa
add
pop
add
sub
outsl
xor
push
add
dec
add
cmp
outsl
push
cmp
outsl
sub
outsl
sbb
add
pop
add
dec
add
xor
outsl
and
add
pop
add
sahf
add
rolb
outsl
sub
outsl
and
add
rolb
outsl
push
add
outsl
xor
lret
and
js
outsl
and
add
jmp
add
sub
outsl
and
add
jmp
add
mov
add
js
outsl
sbb
add
xor
outsl
adc
add
jb
outsl
xor
jmp
add
sub
outsl
sbb
add
push
add
jecxz
outsl
ss
add
or
outsl
and
add
add
outsl
cmp
add
pop
add
push
add
outsb
add
push
add
daa
add
fiadds
outsl
and
add
jp
outsl
cmp
outsb
add
add
pop
add
sbb
outsl
pop
mov
add
popf
add
add
std
add
popf
add
xor
outsl
adc
add
mov
add
push
add
mov
add
outsb
add
xchg
add
add
outsl
es
add
pop
add
int3
add
xor
outsl
xor
push
add
std
add
or
outsl
and
add
pop
add
lret
cmp
add
xor
outsl
and
jp
outsl
sub
outsl
es
add
xor
add
daa
add
std
add
pop
add
sbb
outsl
xor
jmp
add
jp
outsl
cmp
add
sub
outsl
cmp
add
sbb
outsl
ds
add
push
add
outsb
add
sub
outsl
xor
dec
add
lret
sub
xor
outsl
cmp
outsl
sub
xor
movb
pushl
sub
pushf
mov
movw
pushf
mov
lea
jmp
mov
jmp
pushf
pushl
popl
pushf
mov
movb
lea
jmp
inc
bsr
shrd
xor
call
pushf
mov
push
lea
jmp
bswap
mov
pusha
lea
jge
cwtl
lea
mov
pushf
pusha
jmp
mov
pushl
mov
pushl
push
lea
jmp
pushl
popl
pushf
pushf
lea
jmp
not
xchg
xchg
jmp
mov
mov
mov
pushf
lea
jmp
rcr
ror
ror
bsf
xor
pushf
test
adc
lea
and
shl
shld
mov
cmc
movw
test
sub
call
mov
bswap
jmp
pushf
pushf
popl
pushf
pushl
popl
movb
mov
mov
mov
lea
jmp
pushf
pushf
pushf
pushf
mov
pusha
pushf
movw
mov
push
mov
push
xchg
call
sub
stc
pusha
cmc
cmc
shl
pusha
mov
mov
push
push
push
pushf
popl
movb
push
mov
pushl
popl
mov
lea
jmp
movsbw
call
sub
not
lea
pushl
mov
pushf
movb
lea
jmp
pushf
popl
stc
pop
xchg
call
movw
mov
pusha
pushf
push
push
lea
jmp
mov
pushf
popl
jmp
pushl
popl
movb
movb
mov
lea
jmp
aaa
ror
mov
cmc
mov
cmp
add
pushf
call
jmp
mov
call
das
or
mov
bt
stc
xor
push
movb
test
lea
clc
xor
cmc
bswap
test
jmp
mov
lea
jbe
mov
jmp
mov
pushl
pushf
movb
pushf
lea
jmp
jmp
shld
test
movzbl
shl
add
bswap
pusha
bswap
jmp
pusha
mov
mov
jmp
pushf
pushl
jmp
dec
push
sub
call
bswap
rol
ror
bt
rcr
stc
xor
pop
not
cmp
shld
sub
movzbw
push
lea
pusha
pushf
movw
lea
jmp
pushf
pusha
pushf
lea
jne
xor
add
mov
cmp
cmp
and
call
mov
pushl
pushl
pushf
movl
lea
jmp
call
dec
xor
sete
btr
mov
btc
mov
stc
call
pushf
pushf
dec
clc
xor
stc
mov
stc
sub
pusha
call
mov
lea
push
pusha
bswap
xchg
pop
push
pushf
pushf
popl
rcl
pushl
popl
pop
rol
rcl
movl
pop
cmc
rol
mov
call
pushf
pushf
popl
pop
ror
movsbw
mov
pushl
popl
pushl
xchg
pusha
pushf
movl
push
rcl
mov
bt
btc
push
bswap
rol
shr
movsbw
adc
adc
xor
movsbw
mov
rcr
add
sub
call
not
pushf
mov
pushf
pushl
popl
cmc
call
mov
pushl
push
lea
jmp
sub
cmp
movzbw
mov
call
lea
jo
pusha
mov
movw
pushl
ret
setbe
pop
bswap
rdtsc
bswap
pop
jmp
push
movb
inc
clc
test
sub
jmp
lea
movb
pusha
push
lea
jmp
test
pushf
pushf
pushf
pushl
popl
test
add
cmc
movb
stc
movb
pushl
popf
push
pushf
lea
jmp
movzbw
pushf
popl
pushf
movzbw
rcl
ror
pushl
popl
movzbw
btc
mov
clc
movl
pop
bts
movsbw
mov
pusha
ror
rol
bts
bsf
xor
btr
inc
bt
mov
sub
not
pop
mov
mov
lea
movb
mov
lea
jmp
mov
mov
pushl
pushf
lea
jmp
lea
lea
movb
push
pushf
lea
jmp
call
mov
pop
mov
movw
cld
pushf
push
cld
pusha
call
pushf
pushf
cld
not
mov
xchg
not
xchg
xchg
mov
jmp
mov
call
add
pusha
jmp
pushf
mov
movzbl
bswap
mov
call
sub
sub
shl
and
movzbl
bt
sub
bt
not
jmp
jmp
mov
movb
jmp
call
call
mov
pushf
lea
jmp
bswap
movsbw
pushf
rcl
pushl
movzbl
bt
clc
bswap
push
pusha
bswap
mov
ror
pushf
rol
pusha
cmp
cmc
xor
stc
sub
jns
clc
sub
push
pusha
movsbw
lea
pusha
pushf
pushf
lea
jmp
jmp
pushf
popl
movb
pushl
popl
pushf
mov
mov
pushl
lea
jmp
mov
jmp
rol
sub
bswap
pusha
bswap
pop
lea
movl
lea
jmp
call
call
mov
pushl
pushf
xchg
call
lea
lea
pushl
push
pushf
pushf
lea
jmp
cmp
jmp
call
jae
not
pushf
clc
movb
not
mov
test
cmp
sub
pushf
push
cmp
pushf
and
pusha
pushf
mov
push
jmp
pushf
movw
xchg
bswap
mov
pushf
not
mov
movzbw
movzbw
mov
pushf
jmp
pushf
xchg
call
add
jmp
call
jmp
jmp
pushl
sub
jmp
pushl
popl
movb
pushf
lea
jmp
bswap
jmp
not
mov
mov
movzbw
not
mov
call
jmp
call
xchg
call
jmp
mov
lea
jge
push
pushf
popl
pusha
pushl
pusha
pushl
popl
mov
movb
lea
jmp
rol
aad
shl
shl
mov
call
bt
jmp
mov
mov
call
mov
pushl
movzbw
lea
movsbw
mov
jmp
mov
pop
call
call
divl
push
jmp
xadd
and
mov
movsbw
mov
clc
jge
add
pusha
pusha
jmp
test
sub
bt
clc
mul
push
mov
mov
pushf
pusha
push
mov
pushf
movb
mov
pushf
popl
push
call
cmc
xor
sub
jmp
mov
call
movzbl
bt
pushf
add
call
mov
movb
lea
jmp
pushf
popl
pushf
btc
movsbw
rcl
pushl
popl
bts
xchg
lea
movl
call
jmp
jmp
lea
mov
pop
pushf
pop
pushf
mov
call
mov
bsf
inc
mov
stc
add
push
mov
mov
pushl
lea
jmp
lea
jnp
inc
push
jmp
push
not
stc
push
pushf
and
call
xchg
jmp
sub
push
call
pushf
pushf
pushl
pushl
popl
movw
lea
jmp
mov
stc
mov
test
bt
sub
call
pusha
push
call
call
jmp
pushl
popl
pushf
push
lea
jmp
pushf
mov
pushf
push
mov
pushf
pushf
pushf
push
xchg
push
movsbw
pushf
mov
push
movw
pushl
mov
jmp
xadd
add
setb
mov
rcl
inc
sbb
rdtsc
pop
xchg
das
adc
pop
shrd
shrd
sub
popf
lahf
jmp
xadd
rcr
add
mov
shrd
shr
mov
jmp
pushf
mov
mov
pushl
call
mov
movb
call
xor
ror
ror
and
rol
shrd
mov
mov
clc
clc
sub
call
mov
movb
pushf
pushf
pushf
lea
jmp
pusha
movw
call
push
cmp
add
push
push
pushf
pusha
mov
pushf
push
lea
jmp
pushf
movsbw
mov
pushf
pushf
pusha
divl
pushf
mov
pushf
pushf
pushl
mov
jmp
daa
sbb
add
push
mov
neg
not
sar
mov
stc
call
pushf
popl
jmp
call
pop
push
lea
push
pushf
push
movb
lea
jmp
movzbw
mov
pushf
mov
call
call
add
clc
test
bt
add
clc
jmp
push
pushf
popl
pushf
pushl
popl
movw
pushf
lea
jmp
movl
mov
movsbw
movsbw
mov
pop
bswap
jmp
push
pusha
pushf
popl
pushf
pusha
call
sub
lea
jbe
bt
clc
pushf
shl
pusha
jmp
shl
shl
bsf
add
cmc
lea
ror
pusha
movsbw
inc
pop
pop
sub
shr
neg
and
lea
add
bsr
add
jg
lea
shl
pushf
bsf
movzbl
pop
mov
test
bswap
clc
bt
pusha
add
mov
mov
pushl
pusha
pushf
pushl
ret
jmp
pushf
mov
pushf
mov
movb
pusha
mov
call
call
add
pusha
pushf
movb
movb
mov
pushf
pushl
pushf
mov
lea
jmp
decl
call
cmp
cmp
movw
pushf
jmp
