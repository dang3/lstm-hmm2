push
call
ret
ret
cmc
enter
sarb
sbb
mov
or
faddp
mov
jl
dec
jo
repz
fidivl
adc
mov
and
mov
or
pop
popf
mov
bound
pop
pop
rorl
insl
pop
test
loopne
xchg
imul
lret
repz
inc
idivb
lret
pushf
rcll
jg
popf
pushf
gs
imul
aas
scas
mov
frstor
cmpsl
push
stc
rcrb
cs
ficomps
add
mov
aaa
cltd
daa
jmp
je
push
jecxz
sub
loope
mov
fwait
sub
and
dec
add
hlt
xchg
rorb
movsl
and
notb
pop
cmpsb
pushf
push
mov
dec
mov
faddl
mov
mov
test
jbe
popa
sub
cmp
add
adc
icebp
daa
pop
xchg
jb
mov
add
sbb
fsubrs
add
addr16
inc
ret
test
icebp
push
jnp
loopne
rol
lds
xlat
mov
xchg
aaa
jge
mov
stc
push
cltd
bound
xchg
mov
aas
pop
mov
mov
pop
rolb
or
mov
push
sbb
fdivrs
pop
adc
jg
dec
adc
add
fldl
popa
sbb
or
xchg
movsb
or
rol
or
jnp
jb
xor
aad
sub
loope
repz
js
adcb
mov
enter
xchg
shll
mov
sub
dec
pushf
test
dec
stc
aad
adc
aaa
jno
insl
mov
mov
ret
and
inc
gs
call
sbb
fwait
out
xor
sub
popa
adc
mov
out
mov
push
push
sub
out
mov
xchg
add
test
cli
mov
ljmp
lock
cld
push
pusha
lcall
xchg
std
out
inc
repz
out
out
js
roll
sub
scas
jecxz
scas
sbb
sub
push
and
aas
fcomi
mov
or
pop
cmp
test
fiadds
mov
mov
pop
sub
cmpsb
lret
mov
lods
push
jo
sub
out
cmp
mov
stos
imul
sbb
pushf
or
adc
sbb
and
xor
cmp
xor
cltd
inc
lods
out
mov
iret
mov
pusha
xchg
scas
ja
xchg
lods
aad
or
insl
jne
add
outsb
mov
xchg
mov
dec
mov
cmp
in
cli
inc
insl
lret
dec
adc
fists
stos
add
add
repz
push
pop
fnsave
inc
pop
stos
cld
sbbl
in
pop
outsb
mov
xchg
xchg
mov
pop
inc
adc
sbb
push
rolb
or
cld
jl
cwtl
jno
pop
aam
popl
pop
mov
jns,pt
mov
xorb
ja
inc
push
in
stos
sub
mov
shrl
ret
cli
add
and
sbb
lds
lret
xor
pop
loop
frstor
cmp
sub
stos
mull
add
adc
fldt
sahf
mov
cli
les
or
shr
pop
fadds
and
out
push
into
je
test
scas
shlb
xor
pushf
pushf
repnz
adc
inc
mov
push
add
outsl
or
dec
jne
mov
stos
in
jbe
jmp
out
sub
sbb
sub
inc
insb
push
xor
inc
adc
pop
arpl
cs
push
push
data16
add
rclb
pop
int
test
mov
xchg
jecxz
leave
sub
shrl
dec
jo
pop
in
jl
mov
xor
loopne
mov
adc
adc
xlat
lret
adc
lret
mov
mov
xor
cmpsl
sub
mov
push
sarb
or
out
and
mov
xor
push
ror
mov
scas
lock
mov
scas
xchg
pushf
add
push
cld
dec
sti
in
loope
sub
enter
inc
lcall
hlt
movsb
jo
call
in
cmp
mov
sub
or
xchg
lods
int3
clc
pop
jnp
adc
int
loope
in
add
and
arpl
mov
dec
pop
lea
sbb
cmp
iret
rolb
add
les
sbb
mov
jo
push
ficoml
and
leave
sarb
add
adc
cmpsl
jmp
or
les
lods
mov
inc
fsub
add
inc
xchg
add
lret
lea
aad
or
in
adc
jne
fst
insb
lret
xchg
shrb
cmp
sub
out
cs
jmp
push
xor
nop
fmul
push
sub
jno
mov
leave
adcb
jge
test
sub
sub
mov
push
mov
xchg
dec
call
jbe
les
hlt
sub
subb
sbb
mov
cwtl
mov
jae
pushf
leave
enter
xorb
gs
inc
ret
fsubrs
mov
rolb
sub
sub
inc
ss
out
jp
pop
mov
cmp
add
std
jecxz
and
pusha
mov
adc
inc
popf
pusha
add
dec
outsb
sbb
faddl
mov
in
fisttpl
shll
mov
or
daa
push
inc
sarl
xlat
and
and
pop
add
out
adc
push
sub
cmp
out
sub
or
fwait
lds
or
je
mov
inc
jo
test
jbe
stos
add
inc
ss
jmp
xchg
test
dec
ret
cmp
data16
outsl
mov
xchg
test
mov
cmp
test
insl
lret
dec
jp
jb
data16
clc
movsl
cwtl
adcb
shr
push
popa
int3
shrl
mov
push
mov
cwtl
lea
imul
imul
pop
aas
das
in
jecxz
xor
imul
les
loop
add
adc
dec
xorl
movsb
insl
xchg
outsb
lds
push
xchg
cli
dec
lods
mov
adc
lock
in
insl
sub
cli
stos
mov
jo
lods
loop
mov
mov
inc
mov
mov
ljmp
or
fiadds
pop
insb
pop
mov
int
xchg
ds
and
mov
push
cli
mulb
out
inc
add
mov
mov
lcall
iret
mov
pop
xchg
and
xor
lods
cmc
dec
add
mov
inc
add
mov
stc
add
mov
shr
xchg
xchg
push
es
sub
cmpsl
add
popa
outsl
pop
xor
fdivrs
mov
or
cmpsb
mov
pusha
lods
shll
mov
hlt
hlt
stos
leave
in
pop
ds
lret
mov
sub
jns
out
imul
mov
mov
aam
rclb
lcall
push
in
add
mov
bound
xchg
rorb
lock
jl
mov
scas
mov
lds
lret
push
in
inc
cmpsl
mov
or
mov
mov
and
inc
mov
int3
or
pop
sub
jg
xchg
pop
sub
mov
xchg
orl
inc
fcomps
aad
fcoms
pusha
ljmp
icebp
ret
lods
sub
xlat
or
xchg
push
and
sbbb
cmp
outsb
rclb
dec
das
mov
jmp
stc
loopne
and
loope
push
push
loop
adc
lret
stc
xchg
insb
loop
jnp
mov
mov
pop
pop
mov
lock
jb
xorl
push
mov
iret
pop
add
fistpl
mov
push
ljmp
cmpsl
ret
sbb
jb
cmp
pop
inc
std
cltd
cmpsl
fcompl
pop
and
sbb
sbb
mov
and
push
mul
pop
adc
jle
sahf
rolb
mov
mov
mov
dec
jne
mov
pop
lods
rcr
pushf
jle
arpl
sub
push
mov
pop
adc
test
pop
sbb
pop
sbb
mov
repz
xchg
in
adc
sahf
push
movsl
sub
loop
insl
adc
fbstp
scas
loopne
sub
out
jmp
and
int3
incb
or
mov
aam
dec
outsb
aam
aad
jbe
cmc
sub
inc
mov
xor
jns
cmpsl
mov
jl
mov
mov
xor
pop
insb
mov
push
push
xchg
push
das
xor
sub
pop
jg
sub
lods
cmp
dec
jp
mov
clc
gs
pop
jecxz
mov
jae
adc
js
or
test
pop
xchg
dec
shlb
aad
jo
pop
hlt
and
mov
out
cmp
xchg
in
stos
into
push
loop
mov
jne
out
lods
sarl
std
or
push
push
jecxz
fucomi
std
mov
rclb
std
sub
inc
movsl
add
movsl
rclb
sbb
loopne
test
push
repz
je
jle
leave
xchg
push
sbb
or
jb
xor
push
mov
test
into
xlat
dec
shlb
cltd
mov
lea
hlt
push
xor
xchg
dec
jb
shrb
cmp
into
aad
insl
jb
cmp
imul
stos
sub
or
add
adc
xor
sub
xchg
and
xchg
add
add
inc
mov
mov
outsb
imul
aam
xchg
dec
stc
sub
inc
add
arpl
repnz
push
fisubl
lahf
and
dec
inc
lret
imul
xchg
out
inc
or
es
ja
mov
mov
mov
jae
and
ficompl
and
data16
mov
arpl
inc
pushf
aam
inc
xchg
cmp
scas
out
fs
arpl
pop
daa
dec
dec
mov
int3
out
jns
popf
out
and
test
iret
ss
inc
popa
jo
sahf
cli
lds
mov
sub
dec
and
in
push
lods
int3
lcall
imul
add
sbb
gs
fldt
rcr
cwtl
sti
hlt
test
movsb
mov
and
push
notrack
push
rolb
imul
into
jge
xlat
sbb
inc
add
mov
fistpll
in
sub
dec
scas
push
push
lcall
je
xchg
sub
mov
clc
mov
jnp
leave
test
mov
fdivs
fsubr
dec
fiaddl
adc
mov
sub
pop
fists
bound
aad
mov
not
mov
adc
ja
sbb
mov
pop
jb
aaa
dec
push
adc
ret
aam
jno
jmp
jnp
cmp
int
cmp
ljmp
inc
ds
or
imull
xor
sub
mov
sub
push
and
push
in
into
mov
lret
jl
dec
add
enter
or
cmp
testl
rcrb
in
mov
cmp
addr16
out
and
lods
xchg
pop
iret
pop
shrl
xlat
and
sbb
or
lahf
imul
scas
mov
rcrl
sbb
and
and
or
cmpsl
mov
repnz
aaa
mov
sbb
xchg
cmpsl
sub
add
adc
mov
inc
inc
push
jnp
inc
flds
cmp
mov
jge
dec
popf
sub
sub
xchg
popa
in
adc
xchg
enter
pop
es
test
or
daa
pop
ror
cld
repnz
cmpsw
xor
xor
pusha
out
add
push
xchg
mov
popa
xchg
mov
mov
fs
test
mov
movb
imul
addr16
fdivs
xor
add
dec
pop
idivl
test
add
xrstor
adc
xchg
jbe
inc
dec
pop
mov
push
iret
xchg
dec
in
repnz
in
xchg
das
mov
jo
xchg
out
jp
and
add
mov
pop
mov
or
in
stc
test
pop
test
inc
arpl
adc
cmp
lods
dec
xor
fs
mov
or
xchg
push
mov
xor
cmc
and
pop
icebp
ss
ljmp
push
call
jbe
mov
dec
scas
out
pop
arpl
sub
stc
push
jns
lret
shlb
jg
inc
adc
repz
mov
mov
lcall
stos
inc
jne
fcomps
adc
lcall
push
and
js
xchg
lock
jnp
in
aam
scas
or
cmp
insb
cltd
sub
scas
nop
or
pusha
outsb
enter
into
add
loop
jge
pop
mov
jl
lods
dec
dec
les
jle
jo
mov
pop
jbe
jmp
cmp
dec
jb
or
in
loop
pop
loop
mov
icebp
xor
push
fldt
cmp
mov
ret
sbb
inc
les
push
mov
lcall
jp,pt
jmp
aam
insl
dec
mov
push
mov
push
xor
shr
sti
loope
adc
push
imul
aaa
dec
testb
fisttpll
xchg
imull
mov
je
pop
aaa
cmpsb
orb
in
sub
aas
jg
or
inc
aas
push
in
cli
adc
mov
repz
pop
pop
sub
pop
stos
sbb
mov
clc
movsb
sahf
cltd
test
dec
cld
lret
push
jmp
adc
repnz
jmp
call
inc
inc
mov
repnz
cmpsb
hlt
scas
xor
dec
loope
test
push
or
pop
mov
or
sub
call
push
dec
cmpsb
aam
mulb
lds
xor
mov
out
cmp
inc
push
fwait
xor
imull
jecxz
adc
push
addr16
adc
mov
fdivs
gs
ret
popf
popa
cmpsl
sbb
pop
jp
fimull
jae
mov
cwtl
jns
fs
xchg
nop
xchg
sbb
adc
xchg
sbb
sahf
push
and
adc
adc
call
fisubrs
scas
in
pop
adcb
push
xorl
iret
mov
adcb
jb
xchg
push
xchg
pop
xchg
cld
xor
mov
mov
orb
bound
push
xchg
pop
aad
lock
mov
scas
push
pshufw
insl
fsts
sbb
sub
ljmp
mov
mov
or
sar
ljmp
mov
push
push
adc
jnp
shrl
or
roll
mov
ljmp
push
arpl
mov
add
pop
dec
or
clc
dec
jns
jl
fiaddl
xchg
gs
clc
xchg
and
jge
cmp
mov
sbb
cmp
sar
pop
ret
mov
ret
dec
pop
fldcw
mov
pop
pop
nop
pop
xlat
call
fsub
aaa
shrl
decl
insl
adc
jae
sbb
fcomps
xchg
dec
in
pop
out
sbb
inc
adc
mov
add
mov
sti
jnp
aas
fstl
out
scas
mov
hlt
inc
stos
pop
adc
xchg
inc
cmp
xchg
lods
jle
pop
pop
and
jb
into
sub
inc
push
nop
sahf
dec
adc
iret
mov
push
cmp
cmp
scas
push
cltd
ja
xlat
clc
les
pop
xchg
enter
mov
stos
mov
mov
inc
loop
loope
fs
in
dec
lods
gs
inc
ja
aaa
mov
sbbb
fdiv
sub
and
test
lods
mov
clc
jmp
gs
out
subb
fcompl
jnp
mov
inc
adc
int3
loop
jge
test
dec
call
xchg
mov
sbb
pop
and
scas
jns
dec
push
and
cmp
clc
daa
jnp
xor
outsl
stc
cmpsl
push
adc
in
add
sub
mov
ds
roll
jo
push
int
pop
lahf
arpl
cld
or
int
fmul
icebp
mov
enter
repz
xor
gs
decb
lret
xchg
pop
pop
dec
xor
clc
repz
mov
scas
pushw
test
jnp
push
mov
daa
dec
inc
cmpsl
jno
subb
mov
xchg
pop
repnz
test
ja
test
insl
mov
lea
or
stc
push
xchg
fadds
xor
jg
jo
stos
sub
jb
or
inc
jb
sbbl
imul
xchg
xchg
movsb
shl
addb
jle
pop
pop
leave
dec
ret
int
inc
das
imulb
test
lods
leave
out
icebp
adcl
xchg
pop
test
mov
add
mov
daa
insb
cmp
pop
sbb
lret
dec
push
movsb
out
cmpsb
lds
test
push
test
loope
mov
lds
mov
inc
add
sbb
adc
dec
nop
xor
scas
leave
dec
sti
into
push
adc
enter
xchg
jns
aas
mov
jl
adc
pop
sub
je
inc
ljmp
daa
arpl
or
out
dec
fistl
psadbw
ds
mov
pop
arpl
ss
scas
bnd
cmpsl
mov
push
sbb
pop
insl
ds
xchg
pop
jmp
cmp
jp
ljmp
ds
cmp
repnz
les
stos
imul
and
ret
dec
xor
fidivrl
xor
mov
cli
mov
jg
cmp
scas
ss
cmp
cmp
xchg
jl
sbb
mov
mov
fnstcw
mov
bound
mov
xor
mov
fstps
pop
xlat
negb
adc
sub
jl
stc
cmp
mov
mov
mov
rcll
pmovmskb
jmp
lods
dec
xor
nop
ss
pop
cmp
bound
in
hlt
flds
xchg
cmpsl
sub
sbb
sti
icebp
pop
testb
xchg
jmp
xor
outsl
inc
repnz
ss
xor
dec
lret
loop
gs
aad
loopne
mov
cld
je
andb
or
pop
cmp
sub
push
jb
lahf
sahf
jbe
jle
cmp
inc
jl
sub
dec
adc
fmuls
ret
jnp
xor
mov
jle
movsb
popa
jmp
dec
mov
nop
inc
scas
push
push
mov
mov
and
xor
jnp
pop
inc
lods
sbb
mov
out
push
lods
out
aad
stc
repnz
ret
hlt
repz
push
popf
or
mov
stc
cmc
dec
add
push
adc
pop
inc
pop
fidivrl
xchg
fwait
push
jo
sarb
mov
add
scas
sub
cltd
ljmp
mov
mov
stos
ljmp
ljmp
cmpsb
inc
mov
mov
mov
aas
adc
xor
sti
add
outsb
jp
les
xchg
mov
pop
push
push
push
xchg
jle
push
inc
ret
das
lahf
inc
hlt
pop
daa
test
xor
shlb
dec
movsl
fisubs
push
outsl
sub
mov
xchg
jecxz
gs
cmc
aam
jl
call
jp
inc
shl
lods
in
sbb
mov
les
jb
int3
jbe
push
adc
xchg
inc
dec
xchg
jmp
leave
adc
mov
roll
push
pop
les
or
mov
fsubr
call
jae
mov
fbld
jge
push
das
addb
lret
movsl
push
sbb
ror
xor
stc
ficomps
cli
pusha
jecxz
mov
loop
jge
pop
push
cmp
loop
or
dec
inc
rcrl
push
push
jno
loope
test
bnd
mov
enter
xchg
and
push
inc
lret
aaa
mov
cmp
push
adc
lods
jbe
popa
pop
call
xor
shl
lcall
adc
cld
fisubrl
mov
js
sub
xchg
cmp
loope
inc
aaa
or
inc
pop
dec
mov
shll
popf
fstl
cmpsl
sub
lds
out
pop
xchg
adc
mov
jg
in
jp
ret
mov
fnstcw
les
dec
mov
bound
adc
adc
and
out
shrb
jnp
incl
dec
lret
shlb
test
cwtl
adc
int3
push
xchg
pop
xor
lcall
adc
jl
icebp
mov
int
iret
xchg
cmp
test
fwait
mov
ss
pop
hlt
andl
ljmp
fldl
icebp
inc
adc
orl
loope
in
ret
movsl
lods
and
sub
popf
movb
jb
sahf
lock
daa
cmp
lahf
mov
mov
test
lret
jg
cld
mov
sub
and
arpl
test
aas
xor
cwtl
ljmp
jb
sub
or
and
sahf
jp
mov
jno
xchg
cmpsl
mov
mov
ffreep
or
cmp
xchg
call
pop
jp
jge
sub
ret
mov
dec
inc
inc
cmp
out
addl
push
clc
stos
cmp
mov
icebp
dec
pop
in
pop
sbb
sahf
xor
xchg
in
movsb
fsubp
out
jo
bound
add
mov
stos
sub
sub
jle
pop
inc
xchg
pushl
gs
mov
xchg
scas
pop
in
xchg
dec
mov
xor
or
push
dec
mov
mov
push
clc
or
rorb
in
shlb
pop
xlat
inc
sub
mov
jge
out
dec
pusha
scas
loopne
push
ret
sub
popa
idivl
mov
fstpl
inc
lds
jecxz
insb
mov
jns
sub
xchg
je
addr16
mov
test
pushf
inc
popa
add
sqrtps
adc
fcompl
jl
inc
lea
sub
jno
sub
or
pop
into
mov
cmp
addr16
ljmp
push
fsub
sbb
ja
nop
adc
ffreep
or
ds
fwait
dec
push
repz
add
xor
pop
xor
cli
stc
sub
sub
adc
dec
add
fwait
nop
rol
pop
xchg
push
xlat
inc
iret
leave
decl
and
or
dec
jl
imul
sbb
movsb
push
cmp
jne
aad
push
jnp
xchg
lret
nop
lock
lea
in
repz
inc
or
adc
jge
icebp
imul
cs
jnp
in
mov
xchg
out
jl
call
xor
loopne
adc
ja
repnz
frstor
les
jecxz
hlt
insl
jg
pop
aad
sub
leave
xor
loopne
pop
xchg
xor
mov
push
enter
or
ljmp
arpl
xchg
lcall
mov
shr
outsl
xor
fsubrp
test
mov
jp
scas
mov
cs
iret
in
sbb
xchg
or
ljmp
inc
jmp
pop
dec
bound
push
mov
mov
xor
xor
adc
ss
sbb
sub
adc
in
inc
adcb
inc
fadd
lods
sub
sti
pop
out
xor
in
push
cmp
and
cwtl
ljmp
mov
mov
dec
loope
bound
jle
jmp
out
jns
insb
xor
cmp
jp
jg
lds
inc
mov
pop
or
addr16
sti
mov
lods
cmp
pop
push
add
mov
push
jns
dec
sbb
js
dec
push
scas
fnstsw
pop
sbb
scas
repnz
pop
or
fiadds
xor
inc
mov
scas
scas
xchg
pusha
xor
mov
sub
nop
add
xchg
inc
mov
jg
loope
iret
scas
enter
mov
flds
lock
add
sub
ja
flds
popl
negl
cmp
es
jns
push
and
pop
out
movl
scas
fadd
inc
arpl
aad
xchg
ljmp
push
ret
leave
push
pushf
loopne
sbb
xor
xchg
dec
dec
jno
xor
cltd
mov
xor
mull
pop
xchg
inc
and
cwtl
mov
adc
inc
ja
or
mov
push
fidivrl
push
sbb
and
dec
daa
in
pop
cmp
test
jge
sbb
adc
xchg
lods
mov
aad
ds
dec
inc
scas
pop
je
scas
es
pop
stc
xor
mov
cmpsb
es
je
push
sub
inc
jne
add
loop
push
loop
or
push
mov
imul
mov
or
mov
inc
loope
pop
aaa
mov
jno
pop
jns
pop
or
pop
mov
seta
out
inc
clc
jle
cld
in
cli
lahf
loopne
jmp
pushf
pop
ljmp
jb
clc
test
sbb
mov
test
aam
xchg
jo
shll
lcall
clc
pop
or
imul
movsl
xor
dec
out
aaa
inc
xor
ret
dec
fs
in
repnz
push
pop
loope
cli
fldt
add
mov
push
out
inc
dec
mov
shlb
mov
inc
xchg
pusha
test
xor
jp
or
scas
jno
cmc
dec
and
in
pop
or
push
pushf
pop
xchg
enter
test
jbe
std
jo
mov
push
push
cmpsl
mov
inc
adc
push
mov
and
xor
aaa
mov
mov
jbe
movsb
int3
lods
mov
gs
rclb
mov
in
addb
push
dec
sub
jbe
ljmp
mov
jae
mov
jns
fnsave
push
mov
adc
xchg
cltd
pop
adc
sub
push
std
and
adc
loopne
sub
and
ja
cli
pop
dec
repnz
jge
pop
imulb
insl
mov
fstpt
cs
subl
stos
jno
lret
and
jmp
movsl
mov
pop
lods
push
sbb
ret
mov
jne
leave
mov
pop
mov
repnz
sub
lods
js
and
outsb
mov
pop
mov
imul
or
push
pop
enter
pshufw
sub
lahf
loop
negb
fcmovnbe
aaa
shrl
sub
fucomp
mov
sahf
nop
in
adc
ret
xchg
push
clc
xor
mov
dec
mov
pop
gs
pop
stos
lods
je
scas
popa
std
push
aaa
repz
loopne
adc
pusha
dec
cmp
in
scas
or
push
xchg
enter
jnp
popf
add
popf
addr16
fs
pop
insb
inc
sbb
ds
or
cmp
jb
arpl
sbb
push
fistpll
pop
mov
daa
cmp
outsl
test
jmp
ret
dec
xchg
push
mov
out
cmp
das
lahf
add
lds
ljmp
cmpsl
xchg
sub
push
pop
in
sbbl
imul
pop
clc
outsb
cmp
mov
mov
scas
mov
add
pop
cs
add
in
mov
pusha
mov
xchg
test
in
pop
push
mov
lcall
lds
imul
xor
xchg
aaa
add
push
mov
frstor
jo
sbbb
outsb
push
lods
lds
cmp
popa
out
insl
leave
aas
lret
dec
insb
lea
push
mov
xchg
jbe
xor
shlb
mov
arpl
pop
neg
and
add
orb
cmc
fldenv
jp
cmpsl
or
imul
fcoms
in
push
pop
out
xor
add
pop
jecxz
cs
js
mov
sub
enter
int
hlt
das
sub
icebp
fidivl
push
outsl
cs
lods
sbb
fdivl
adc
shl
jg
push
xor
incl
movsl
outsb
in
ficomps
xchg
mov
loope
mov
sbb
jmp
mov
and
cmp
and
xchg
adc
cmp
std
jle
adc
mov
arpl
push
cmp
dec
cwtl
out
mov
sbbl
ret
cmpl
outsl
add
sbb
dec
es
test
mov
sub
popf
pop
test
scas
and
aam
call
fisubs
mov
test
daa
mov
jp
mov
in
js
cmp
mov
inc
xlat
jb
dec
fs
clc
push
gs
lahf
imul
xchg
popf
jl
in
and
or
pusha
xchg
fnsave
das
bound
aam
pop
lds
mov
jmp
outsb
imul
js
fs
scas
adc
jge
inc
fistpl
outsl
add
aas
jns
arpl
xchg
outsb
iret
pop
scas
sub
jl
push
sbb
push
jmp
push
adc
jns
into
and
adc
jg
dec
push
cmp
xor
push
sub
data16
cmp
mov
rclb
lods
xchg
push
sub
aad
cwtl
dec
jg
fmuls
cltd
push
es
xor
cs
pop
andb
jle
in
in
pushf
jle
sahf
add
ret
xchg
push
imul
loope
sub
inc
cmp
lods
hlt
add
xor
mov
and
arpl
jb
rclb
lods
cs
fdiv
jl
push
aad
clc
fwait
ss
sub
push
mov
gs
mov
mov
sbb
mov
mov
jnp
push
test
jp
mov
test
fiadds
enter
jge
fcomps
jo
movsl
jecxz
xchg
push
mov
xor
ljmp
mov
jae
mov
cld
adc
bsr
push
cs
mov
pop
adc
xor
sbb
xor
insb
jecxz
bound
adc
and
sahf
pop
shlb
xorb
push
mov
roll
repz
inc
pop
push
sbb
pop
out
je
lds
in
ljmp
dec
lods
lds
or
cmp
jbe
sar
addr16
jb
jae
inc
scas
cmp
xor
rorl
in
inc
je
ljmp
adc
sbb
push
pop
imul
push
out
dec
xchg
mov
ret
or
adc
jle
sub
mov
lret
inc
mov
pop
xchg
mov
jo
ficompl
mov
cmp
pop
dec
xor
vminps
inc
cmp
xchg
push
push
popf
pop
jmp
xchg
fistl
mov
ljmp
testb
mov
jle
je
dec
add
jae
inc
sbb
das
mov
jecxz
int
pop
fadd
pop
loopne
adc
in
mov
leave
add
out
leave
xlat
dec
mov
popa
and
es
cmp
aam
push
cmpsb
aad
jge
xlat
data16
push
fadds
or
ds
pop
mov
cmp
into
aad
push
pop
stos
int
insb
mov
hlt
addr16
and
mov
out
adc
cmp
rolb
fidivs
mov
jo
inc
mov
enter
inc
lods
lret
iret
mov
and
push
push
in
aam
add
push
mov
in
insl
int3
inc
pop
push
subb
push
in
pop
jae
paddw
sti
cwtl
pop
xchg
faddp
repnz
push
xchg
pushf
popf
fwait
mov
cld
push
add
lret
pop
out
jmp
cmp
stos
dec
jp
repz
xchg
test
inc
inc
mov
pop
push
stc
jge
jbe
xchg
in
mov
pop
push
bound
xor
shlb
aaa
mov
lcall
sbb
mov
loopne
je
cltd
push
nop
fcmovnb
sahf
in
int
sub
out
fistpl
iret
xchg
iret
fsubrp
inc
and
and
or
ds
fcoms
push
mov
cltd
aad
sub
adc
in
je
arpl
add
addr16
xchg
hlt
add
push
and
pop
sbb
mov
xchg
lret
mov
movsl
mov
in
xchg
sub
or
stc
das
loope
enter
jmp
outsb
push
dec
jl
idiv
in
and
add
insb
or
cmp
lds
lret
lock
lahf
pop
mov
jns
leave
imul
inc
xor
imul
xor
hlt
push
mov
in
es
add
idivb
dec
negl
xchg
mov
pop
into
pop
loop
shl
sysenter
lahf
add
push
mov
pop
mov
adc
cmp
mov
mov
xchg
push
mov
mov
pop
adc
jp
sbb
push
icebp
insb
orl
xorl
stc
pop
aas
lahf
xchg
popa
xor
pushf
cmc
xchg
not
or
test
push
xor
sahf
es
jle
outsl
push
sub
sub
jmp
add
imul
push
xchg
cmp
dec
jg
xchg
sbb
cli
repz
je
push
clc
ljmp
push
addl
shrl
add
loop
sub
fwait
sbb
pushl
xchg
test
shlb
dec
and
cmp
inc
faddl
js
sub
adc
pop
adc
dec
pop
jl
fldt
aas
ret
cwtl
xor
in
call
mov
jle
hlt
jae
jne
xor
insl
inc
or
sub
xchg
mov
lret
or
push
stos
aam
aaa
sbb
sbb
jp
popf
mov
popf
js
popf
and
out
test
and
jl
push
cmp
adc
roll
xor
cmp
jmp
and
fsubs
in
daa
jo
adc
lods
fisttpll
mov
addl
jmp
mov
pop
mov
push
stos
fcmovbe
mov
xchg
imul
add
and
out
cmp
push
fsts
mov
lds
push
aas
jmp
cs
pop
jne
rcrl
sbb
andl
push
xor
adc
lods
insl
popf
inc
or
movl
pop
es
mov
scas
sub
sbb
inc
shl
push
mov
jg
mov
filds
js
shll
jp
fsubr
mov
notb
xor
cld
jge
xor
in
jo
popf
or
in
popl
fistpll
pusha
out
xor
sub
jg
lea
and
pushf
sbb
and
mov
mov
out
mov
das
adc
lea
push
movsb
adc
pop
xor
in
insl
test
addr16
stos
xor
jbe
in
fwait
mov
sub
push
adc
jb
fisttpll
aam
pusha
fcoml
lock
sarl
mov
xor
adc
add
fistpll
lock
xchg
inc
lcall
mov
lret
mov
cmc
outsb
or
pop
daa
or
pop
cli
movsb
int
sub
scas
mov
test
sar
push
xor
xor
stos
or
and
and
fucom
sti
mov
ljmp
in
fbstp
loope
pop
int3
aas
in
mov
movsl
dec
xchg
daa
xor
inc
loope
std
lret
loope
es
sbb
add
call
shrl
jle
cmp
sub
dec
cwtl
jb
sub
push
adc
cmp
jecxz
dec
inc
xor
aam
addr16
xchg
sub
add
cmc
mov
push
lea
xor
xor
add
and
loope
leave
push
inc
pop
push
xchg
scas
enter
stos
sbb
call
inc
pop
add
lret
jl
subl
in
add
out
sti
mov
lea
sbb
test
lock
mov
in
pushf
mov
aaa
aam
cmp
fstl
cmp
inc
pushf
dec
daa
arpl
lea
mov
in
push
popa
int3
test
sub
jne
inc
xchg
xchg
cmp
jl
inc
push
sub
cli
mov
or
or
sahf
add
aas
shl
adc
enter
adcb
adc
dec
push
mov
test
cli
mov
data16
adc
jb
mov
dec
sub
jnp
push
loopne
stos
jns
call
imul
mov
adc
mov
jo
xchg
dec
rclb
add
dec
dec
xor
cmp
jg
pop
cli
xor
xor
arpl
mov
xchg
xor
jecxz
lret
or
mov
mov
jae
dec
inc
adc
movsb
mov
call
or
dec
jb
mov
out
insl
dec
mov
mov
movsl
jno
das
neg
jp
inc
xchg
dec
in
jae
sub
outsb
jnp
push
sub
imul
add
into
sub
jl
lds
pushl
push
inc
dec
sub
popf
imul
cmp
les
mov
xchg
adc
leave
inc
xor
mov
lahf
pop
or
xor
and
jmp
cmp
pop
push
add
fwait
xor
jae
xor
insb
inc
pop
stc
es
dec
test
je
xchg
push
xor
jbe
cmpsb
xor
adc
bound
maxps
sbb
adc
int
int3
and
imul
js
push
jp
fcmovbe
loop
xchg
outsl
arpl
lahf
out
and
jecxz
daa
cmc
dec
jmp
xchg
inc
mov
adc
pop
insb
push
jns
lea
shll
jle
jb
data16
xchg
daa
add
fidivrs
in
fisttpl
pushl
cltd
mov
add
cmp
movsb
cltd
cmp
cmc
nop
ficoms
data16
jae
jne
jp
roll
outsl
jp
scas
sbb
test
dec
int3
pusha
ret
sub
fisubs
movsb
mov
mov
mov
and
push
insl
movsd
xchg
fimuls
bound
test
es
imul
jp
or
mov
pop
and
sbb
repnz
imul
mov
push
test
jg
push
mov
sub
cld
hlt
mov
sub
subl
push
in
addr16
sub
sub
pushw
sub
loop
repnz
mov
and
mov
int3
test
sub
mov
ja,pt
ret
cmp
imul
fldcw
stos
rcll
inc
dec
int3
nop
call
or
and
xchg
inc
xchg
into
mov
and
dec
sub
pushf
ja
add
rcll
cs
mov
adc
and
xchg
cli
imul
dec
nop
out
cmp
div
pop
mov
into
jo
scas
outsb
cwtl
mov
mov
in
repz
cli
mov
lret
adc
mov
ja
mov
fs
mov
adcb
and
pop
addr16
fcmovbe
mov
aas
in
sti
and
mov
xchg
push
mov
add
loop
js
mov
test
dec
mov
sub
shlb
xchg
out
mov
pop
repz
sub
push
cmpsb
imul
cmp
jg
repnz
push
stos
pop
xor
mov
xor
shlb
dec
inc
push
jne
mov
xlat
cmp
push
sahf
mov
mov
xor
bnd
push
popa
ljmp
in
jne
js
inc
sbb
shl
sbb
sub
in
pop
or
in
dec
cld
loopne
pop
jmp
imul
or
mov
dec
xor
stos
mov
push
pop
inc
pop
mov
lea
push
push
adc
xor
adc
inc
imul
popa
leave
sbb
add
mov
lcall
push
inc
fmul
sbb
outsl
and
pop
mov
cmc
data16
ret
clc
sbb
dec
je
movsb
mov
sub
shl
daa
or
jbe
ss
insb
jno
or
loopne
aas
pusha
vhaddpd
pmulhuw
fs
sbb
aaa
lret
xchg
mov
aaa
cmp
push
jae
sub
mov
pop
xchg
add
mov
inc
pop
cwtl
and
jae
mov
sbb
rolb
bound
sub
xor
mov
dec
test
push
cmpl
add
out
adc
loopne
pop
adc
mov
adc
mov
or
sub
loope
push
add
pop
jo
pop
cmp
dec
mov
stos
push
scas
jo
pushf
cmpsl
jl
inc
scas
lods
jo
xchg
pushf
cli
and
xchg
jae
ror
sti
jno
lret
fisubrs
adcl
sub
and
in
mov
ljmp
lahf
mov
lods
push
mov
andl
in
dec
gs
in
sub
jecxz
cmp
out
sbb
jne
dec
push
fldenv
jb
push
je
test
lock
inc
addr16
or
adc
das
pop
test
mulb
mov
fnstsw
push
inc
sarl
cmp
and
and
pop
jb
popa
pusha
xchg
mov
mov
jne
jg
fdivr
xchg
es
jae
js
push
inc
xchg
inc
push
ret
aas
push
adc
mov
mov
loope
into
shrb
outsl
pop
popa
notb
mov
mov
lds
adc
push
clc
xor
sub
jmp
xchg
hlt
hlt
xchg
dec
jecxz
sub
pop
popa
shll
out
test
adc
rclb
pop
cmp
imul
popa
pop
outsl
sbb
loope
in
int3
aad
ljmp
pop
pop
mov
pop
pop
mov
sahf
push
sti
jl
mov
sub
fadds
sbb
mov
mov
dec
and
aam
data16
shrb
repz
cli
fsubl
xchg
dec
lret
mov
mulb
fwait
test
repnz
js
sbb
frstor
ljmp
xchg
push
cmp
scas
add
mov
and
jl
in
or
sub
cld
jge
gs
or
xchg
mov
imul
cmp
aad
leave
ljmp
pop
into
testl
js
and
push
loop
cmpsl
hlt
xchg
jae
mov
push
int3
les
enter
dec
rorl
cmp
mov
cmp
dec
push
cmp
push
jp
sub
xor
ds
push
nop
popf
sar
dec
int3
movsl
and
sub
ja
nop
repz
xchg
adc
pop
cmp
dec
dec
fldenv
mov
mov
inc
lret
out
inc
cmp
xchg
mov
sub
mov
scas
cmp
add
orb
test
gs
sbb
lahf
fists
mov
aas
mov
into
cmp
gs
and
pop
rcr
xor
andb
and
jns
mov
idivl
xchg
outsl
jl
jae
in
lods
enter
sub
dec
inc
loop
and
int3
in
gs
aas
mov
xchg
dec
or
push
xchg
xchg
cwtl
jmp
jb
mov
cmp
jae
jp
out
mov
sbb
pop
adc
jno
inc
pop
testl
jge
pop
arpl
mov
pslld
mov
jb
or
into
jl
sub
leave
adc
rcrb
xor
pop
cwtl
inc
aad
or
push
rcrl
mov
call
test
outsl
xchg
adc
inc
into
add
pop
cmp
int3
push
fnsave
xor
insb
mov
mov
outsb
xchg
fbld
cmc
jns
lret
push
insb
ljmp
mov
mov
inc
mov
adc
jmp
std
push
loop
adc
xor
adc
dec
fnstsw
cmp
mov
push
hlt
or
sti
pop
inc
adc
xchg
xchg
les
into
in
jge
mov
and
mov
sbb
das
ja
shl
jl
arpl
shrl
fldenv
lret
pop
call
fwait
pop
cmc
or
shll
lock
sbb
inc
adc
pop
out
scas
xor
xor
stc
sarb
test
adc
mov
jne
jmp
loopne
in
inc
jns
push
lahf
std
jno
stc
jne
loope
ret
push
cmp
sbb
divl
jge
xchg
icebp
stos
ds
dec
pop
adc
fidivrs
pop
or
int
mov
lock
pop
loop
sbb
push
xor
rcr
fwait
loop
mov
mov
adc
sub
lret
out
xlat
push
push
int
cmpsl
mov
xchg
enter
shlb
adc
in
sbb
js
dec
inc
loopne
fisttpl
popa
shll
lcall
sub
mov
and
xor
in
sub
test
push
jne
inc
push
push
mov
jmp
pop
lock
daa
xchg
and
cmpsl
mov
jp
movsb
outsl
push
mov
dec
or
or
outsb
addr16
dec
xchg
rcr
mov
pop
insb
xlat
repz
gs
and
daa
mov
sub
jbe
mov
xorl
inc
call
sbb
stos
and
fstp
data16
or
sbb
rcll
out
popa
lods
push
lahf
push
in
sbb
xor
pop
ljmp
mov
orl
flds
xchg
leave
xor
sbb
adc
and
mov
adc
jne
xor
xchg
pop
xchg
xchg
and
or
xor
xor
sahf
mov
lret
fildl
sti
mov
or
and
jbe
pop
sbb
fwait
int
es
add
mov
test
into
xor
icebp
ljmp
shlb
fcomps
les
sbb
xchg
sub
fucomi
subl
xor
or
mov
push
push
jno
xorl
addr16
imul
into
movsl
mov
ljmp
dec
xor
cmpsb
pusha
loopne
jmp
push
cmp
iret
mov
stc
sarb
jo
pop
cmp
cld
pop
lret
loopne
sub
icebp
cli
mov
cmpsl
je
mov
pop
outsl
out
cwtl
iret
push
andl
sub
pop
aad
dec
and
out
shr
jecxz
push
push
mov
adc
dec
js
shlb
aam
dec
dec
pop
cli
lahf
jge
lret
add
adc
adc
test
inc
stos
leave
push
lret
mov
in
jmp
jbe
add
rorl
pop
lods
in
jno
or
jl
std
mov
mov
adc
sti
dec
pop
jg
mov
pop
fmulp
xchg
lret
fistpll
pusha
push
leave
adc
mov
push
movsb
cmpsb
leave
jecxz
dec
xor
shlb
inc
push
and
and
gs
cmp
aas
outsb
test
jge
push
cmpsb
je
popf
sub
push
push
push
xorl
mov
jle
push
fbld
xchg
in
repnz
lea
dec
lret
test
loope
jp
dec
push
mov
repz
fwait
push
data16
and
aam
xor
fldenv
pusha
daa
test
push
mov
fs
jle
sbb
xchg
mov
and
lods
sbb
stos
aas
scas
or
cltd
ret
pop
hlt
repz
call
dec
xchg
push
bound
ret
mov
push
or
stos
cmp
inc
sbb
bound
and
jg
pop
enter
mov
pop
dec
push
inc
mov
cmpb
and
aad
mov
fdivl
shlb
pop
xchg
push
in
jnp
pop
pop
lods
cwtl
iret
mov
fldl
lcall
xor
mov
gs
or
orb
sub
ret
dec
stc
cli
pop
jae
nop
lock
pop
pop
scas
int
inc
shr
stos
pushl
push
arpl
push
aas
jg
aaa
pop
xor
les
lds
jb
int3
inc
add
loope
fldenv
mov
out
insb
cmpsb
pop
jmp
cmp
insl
aas
idiv
ret
in
jo
dec
dec
mov
or
cmp
cmc
jecxz
cmpb
pop
and
fadds
sub
pusha
lock
hlt
orb
mov
lock
cld
scas
fildl
popa
dec
xchg
popa
sbb
imul
jecxz
enter
adc
lods
xor
inc
cmp
push
scas
sti
xor
mov
out
aas
mov
adc
jg
decl
mov
test
test
std
hlt
and
add
mov
dec
mov
aaa
shll
cmpsl
sbb
dec
jbe
xchg
sbb
faddl
loopne
or
in
ret
out
ds
mov
lret
ljmp
or
xor
insl
mov
push
xchg
pusha
fldl
inc
test
mov
daa
test
shll
mov
push
lcall
jae
jg
xchg
lea
xchg
xor
xor
push
dec
sub
pop
inc
cld
cmp
push
ljmp
xchg
sbb
add
sub
cmp
out
fcmovu
inc
and
jae
push
and
hlt
cs
fcmovu
or
pop
xor
cs
add
or
mov
in
push
xchg
pop
dec
cmc
fcmovnbe
rcrl
jg
xor
int3
mov
iret
sbb
jns
into
or
cmp
pushf
jmp
sahf
lods
in
pop
inc
pop
cmp
fcmovb
in
imul
lcall
jae
clc
cmp
pop
mov
or
stos
pop
inc
outsb
jge
jae
mov
and
sti
mov
fdiv
cmp
inc
adcl
push
inc
or
rorb
ja
mov
pop
cmp
pop
bnd
and
and
cmp
cmp
xchg
js
test
test
stos
negb
jecxz
in
repnz
popa
sbb
mov
xor
je
and
arpl
xchg
xlat
cmp
inc
lock
add
mov
mov
dec
and
dec
mov
and
adc
bound
cmp
enter
outsb
mov
add
mov
mov
cmpsl
inc
sti
nop
add
outsl
jmp
add
je
and
je
sbb
shrl
xchg
int
loop
enter
rcrb
std
jge
xchg
jo
mov
dec
mov
pop
sbb
and
cmpsl
sbb
gs
sbb
dec
jp
jne
and
fs
addr16
shrb
jns
add
outsb
arpl
daa
icebp
cmpl
cltd
test
lods
popa
add
mov
inc
and
dec
xchg
pusha
loop
push
lods
sahf
icebp
pop
sbb
sbb
sub
lods
scas
lret
scas
xor
jae
imul
mov
jp
jp
cmpsb
orb
dec
jns
test
shl
js
push
push
push
daa
iret
lahf
xchg
popa
ret
adc
clc
int3
sub
pushf
add
cmp
or
xchg
and
xchg
lcall
cs
es
pushf
mov
add
or
lock
popf
jmp
jle
jmp
jb
add
and
pop
loopne
in
and
jbe
add
std
push
cmpl
popa
jl
int3
mov
fcomps
push
xchg
xchg
jle
cli
sti
adc
lcall
jmp
xchg
les
adc
lock
mov
in
xchg
cmpsl
mov
aaa
roll
xor
imul
push
xor
popa
dec
stos
lock
fsubr
fisttpll
pushf
push
sbb
push
iret
aaa
pushf
dec
mov
fwait
mov
dec
push
push
cmp
cmp
cmpsl
push
jb
fdivs
pop
mov
sub
add
xchg
sub
adc
in
inc
xchg
outsl
jbe
loop
cmp
movsl
leave
insl
repz
test
push
loope
xchg
inc
jb
pushf
xchg
ret
pop
stos
popf
xor
lods
jmp
jo
insl
cli
aas
nop
sbb
stos
stos
cmp
fwait
cmp
xchg
cmp
popf
dec
adc
mov
pop
sbb
jae
lea
cmpsb
mov
xchg
incl
or
mov
mov
icebp
repnz
mov
das
dec
sbb
ds
sbb
or
mov
aas
lret
out
or
clc
test
js
roll
mov
outsl
add
test
add
jo
js
pop
xor
inc
add
pop
orl
ljmp
push
pop
jg
lahf
out
mov
xor
xchg
sti
push
jecxz
out
sar
lahf
lahf
movsb
insb
les
cmc
cld
into
stos
lds
or
and
shlb
push
arpl
fisttpll
outsb
mov
adc
fnstenv
imul
or
test
jno
jb
mov
inc
xchg
sbbb
je
cld
jae
shrl
adc
lret
jmp
mov
fcoml
aas
lret
cs
shr
outsl
lret
mov
daa
fs
push
pop
xchg
and
cli
and
popf
out
shll
mov
call
jp
daa
enter
iret
repnz
loopne
movsl
addl
sti
scas
ret
lds
enter
pusha
popa
lcall
cltd
loopne
adc
push
xchg
adcl
mov
fisubrl
xchg
and
aaa
je
dec
inc
data16
mov
xchg
pop
repnz
cmpsb
scas
sub
les
adc
cmpsb
cmp
lea
sahf
pop
or
call
sub
outsl
push
jg
jo
mov
push
push
int3
dec
push
or
je
leave
cmp
add
popf
jmp
cli
inc
aaa
dec
pop
pop
fidivl
out
pop
js
add
pop
jge
sub
adc
mov
jae
dec
cmp
orl
add
ja
mov
addb
dec
hlt
push
xchg
add
adc
sub
in
or
cmp
or
in
lahf
std
lea
dec
call
cs
pop
fdivs
imul
push
enter
push
jbe
out
mov
test
jp
lret
insl
test
dec
or
sbb
mov
adc
sbb
jo
mov
frstor
add
push
or
xchg
in
aas
bound
out
jae
cmpsb
mov
fbld
jmp
repz
inc
push
in
push
sub
add
movsb
aad
ds
adc
ret
lret
jbe
das
pop
or
mulb
mov
ds
stc
cmpsb
push
mov
inc
andb
xor
pop
cmp
pop
int
outsl
add
or
cmp
push
iret
fmull
dec
ret
clc
imul
push
mov
sti
mov
ss
inc
enter
dec
je
pusha
rcll
gs
mov
icebp
xchg
gs
mov
add
test
in
sub
inc
xchg
imul
pop
mov
pop
mov
or
arpl
leave
jmp
xchg
shl
sbb
stos
mov
cmp
dec
stos
jnp
jo
jmp
repnz
lds
xchg
hlt
adc
lds
add
or
mov
or
ds
mov
and
mov
jge
jg
adc
xor
je
cmp
repnz
pop
stc
arpl
insl
pop
sti
sub
iret
shlb
push
xchg
stos
pop
out
iret
js
jb
into
not
in
in
xchg
scas
mov
cmpsl
dec
scas
outsb
fsubl
cltd
push
orl
xchg
jle
sub
mov
cmp
cmc
data16
hlt
daa
fld
xchg
dec
cmp
adc
cltd
imul
and
aam
fstpt
pusha
or
clc
xchg
divb
enter
imul
out
pop
out
je
push
icebp
test
fsubl
add
clc
mov
jge
jae
pop
in
mov
push
imul
movb
mov
push
sbb
ret
mov
push
sbbl
and
out
inc
push
dec
push
ret
xor
adc
sub
jno
inc
sub
adc
jb
xor
inc
cwtl
dec
push
movsl
in
jne
mov
adc
dec
dec
jns
push
pop
xor
mov
or
jmp
push
adc
push
or
mov
fcomps
loopne
push
in
sahf
into
repnz
pop
sbb
push
sub
push
lods
jl
jle
fldcw
jo
push
mov
add
pop
std
and
pop
int3
lea
and
jmp
je
jecxz
sbb
or
push
pop
mov
add
in
call
cmpsb
push
inc
fcomps
test
icebp
rcll
aas
inc
pusha
jle
push
cmpsl
fldt
add
cmp
mov
mov
pop
pop
out
mov
shl
divl
cld
es
xor
div
jmp
add
daa
loop
popf
lahf
fnsave
cli
xor
push
xchg
mov
mov
fwait
xchg
mov
cmpsb
inc
lea
sar
out
sbb
test
out
sub
or
mov
mov
sarl
shl
xchg
movsb
adcb
add
scas
cmp
rcr
mov
aad
mov
in
test
jmp
cmp
jo
dec
jno
pop
dec
sub
mov
adc
jecxz
push
popa
loopne
dec
lret
pop
jp
mulps
gs
addr16
jbe
and
lcall
inc
xchg
bound
xchg
cmp
cmp
stos
adc
xlat
loopne
leave
xchg
push
std
mov
ficomps
jge
in
dec
fmul
rolb
stos
push
out
sti
pushf
pop
out
mov
stos
testl
jl
jecxz
lret
sbb
cmp
cmpsb
clc
mov
sub
cld
inc
stc
dec
loop
shl
test
push
add
dec
outsl
mov
pop
jecxz
dec
int3
jo
sbb
into
inc
pop
test
int
in
xor
enter
mov
adc
push
mov
xchg
repz
mov
outsl
jnp
fidivrs
jo
pop
jo
jecxz
dec
jbe
xor
mov
xor
cmp
aad
out
imul
add
in
jge
lds
xor
cmc
outsl
dec
adcw
arpl
pop
imul
mov
adc
nop
cmp
jbe
xor
mov
iret
xor
nop
cli
mov
nop
push
jmp
jno
xchg
mov
xor
insb
sti
xchg
outsb
rcrb
mov
xchg
fnsave
outsb
mov
mov
stos
lret
jg
xorl
imul
and
add
pop
sbb
inc
pop
cmpsb
mov
inc
out
inc
mov
and
cmpsl
xchg
data16
mov
fsubl
adc
pop
dec
int3
mov
cmp
pushf
lret
adc
sub
arpl
mov
shrl
cmp
adc
inc
push
shll
scas
loope
test
adc
xchg
stos
je
sbb
push
call
cli
adc
jle
cmp
cmp
xor
jnp
sbb
pop
ljmp
aas
mov
loop
bound
and
inc
in
push
enter
jnp
addl
jl
test
jo
icebp
dec
dec
gs
cli
push
mov
dec
clc
imul
sbb
loope
cmp
test
push
mov
out
hlt
inc
in
pop
clc
push
xor
inc
xor
mov
movl
dec
in
ljmp
xchg
rcr
movsb
sub
sub
inc
es
push
adc
pop
and
inc
xchg
clc
sub
sub
push
add
push
jl
je
xchg
sub
loope
inc
and
pop
das
bnd
in
sub
out
imul
fcmovu
movl
dec
sub
sub
xlat
sbb
rolb
cld
jl
rorl
push
mov
mov
leave
enter
mov
jne
lret
xchg
hlt
fs
pop
pop
inc
fadd
int3
sbb
mov
or
add
sub
inc
aas
das
nop
xchg
icebp
mov
lahf
imul
ja
iret
pop
data16
adc
fidivrs
les
clc
cmpsl
pushf
pop
lds
pushl
ljmp
loope
adc
dec
lds
push
daa
sbb
inc
sbb
and
or
ss
xchg
rorb
in
jmp
gs
decl
scas
call
jo
in
iret
xchg
mov
pcmpgtw
sub
lahf
mov
scas
loop
iret
lret
movsl
add
cs
mov
inc
cmpsb
jo
push
push
lahf
push
dec
dec
in
stc
mov
cmp
ds
mov
mov
jae
sbb
dec
pusha
inc
fdivl
xchg
stos
xor
in
mov
adc
pop
jno
push
and
or
fistps
insb
or
repnz
test
jne
ficoml
loop
pop
lods
fcomi
sbb
cmp
and
push
pop
push
or
mov
cmpsl
push
hlt
pop
jecxz
fcmovnb
imul
lahf
cmp
imul
dec
je
ljmp
and
std
ret
sub
sub
mov
xor
and
aam
nop
fidivl
sbb
dec
push
or
push
add
push
fidivrl
sub
sbb
aad
add
cmp
daa
sbb
inc
adc
adc
lds
push
jp
movsl
ss
es
inc
or
xor
mov
xacquire
outsl
stc
iret
scas
push
cmpsl
adc
sub
lcall
xor
shlb
push
pop
insl
xor
ficoms
mov
shrl
lahf
int
jns
lret
ja
ljmp
rcr
pusha
xor
into
or
sbb
adc
mov
xor
test
int
xchg
aaa
shll
cmp
sbb
pop
repz
jmp
lock
jo
stc
pop
loopne
mov
shlb
or
outsb
scas
pop
pop
sub
sub
popa
call
into
icebp
xor
subl
jl
push
xchg
cmp
cmp
cmp
cmp
fsubrl
addl
out
xchg
pusha
jmp
adc
outsl
into
mov
aas
jmp
lods
mov
mov
insb
cmp
mov
inc
or
sub
and
subl
xor
imul
ljmp
or
pusha
inc
in
cmpb
stos
jle
sub
jmp
je
or
ret
daa
loope
inc
xchg
dec
mov
enter
push
jmp
push
add
cs
ret
movsl
repz
dec
filds
or
loopne
mov
mov
in
or
xor
mov
mov
jl
push
mov
sbb
ljmp
popl
rcrl
mov
add
inc
and
mov
mov
mov
js
hlt
inc
dec
mov
adc
adcb
inc
xor
iret
rol
aaa
jecxz
pop
sbb
cli
mov
cmc
stos
int3
daa
xchg
mov
mov
mov
pop
mov
push
xchg
xchg
sbbl
fstl
ss
daa
in
add
cmpsl
add
negl
sub
lods
daa
cltd
push
sbb
out
pop
and
inc
insl
sub
icebp
lock
mov
sbb
out
aad
iret
pusha
bound
movsb
sbb
and
stos
loope
adc
adc
xchg
dec
inc
cwtl
mov
aas
add
inc
dec
mov
sbb
adc
lcall
outsl
push
movsb
dec
fs
xchg
mov
dec
lods
flds
sbb
lcall
push
lret
cmp
scas
cmpl
loope
mov
mov
pop
cmpsl
push
sub
inc
or
sub
or
outsl
and
lds
cltd
lods
fsubl
outsl
xchg
mov
aas
pop
fdivrs
mov
lea
pop
aaa
pop
sub
fs
stos
inc
notb
push
in
imul
fdivl
xor
mov
sub
shl
xor
sbb
cmp
fnstsw
inc
fnstcw
filds
add
mov
push
xor
cmpsl
ss
adc
inc
xlat
lahf
nop
add
insl
pushf
pop
push
pop
shlb
xor
gs
mov
fmull
cmc
push
sub
test
inc
dec
and
cmp
enter
ljmp
add
dec
ja
in
push
imul
leave
inc
scas
adc
push
cld
add
pop
outsl
out
xchg
cmp
xchg
aam
push
mov
mov
outsl
movzwl
xorb
push
js
mov
and
mov
daa
sub
insl
pop
pop
mov
fcom
pop
sbb
sbb
jp
movsl
cmp
sbb
and
sbb
mov
pop
pop
imul
pop
repnz
cmp
ret
lods
adc
shlb
adcl
mov
test
out
jp
iret
cltd
push
lods
jge
fwait
daa
cmp
dec
cld
xor
cmpsl
inc
mov
dec
dec
sbb
add
sub
aaa
es
movsl
push
push
sbb
xchg
aad
sub
inc
sbb
addr16
xchg
setl
out
fidivl
test
and
cwtl
inc
aaa
aam
mov
lahf
jg
popa
jecxz
push
push
notb
cmp
push
stos
bound
cld
add
add
jge
adc
cmp
fstl
les
movsl
imul
pandn
jns
scas
or
in
rorb
inc
inc
insl
aaa
inc
into
push
pop
int3
pop
sbb
ljmp
jnp
pop
sarb
ljmp
sbb
iret
cwtl
jbe
loope
or
dec
out
daa
arpl
sbb
mov
dec
or
pop
aad
sbb
xchg
aad
xchg
and
adc
imul
lock
or
and
fildll
in
adc
jmp
cmp
repnz
enter
xchg
cmp
jg
in
xchg
inc
cli
pop
mov
test
push
jge
pop
push
dec
inc
enter
das
pop
das
les
cs
pop
push
pop
sbb
ficomps
loop
ret
test
rolb
movsl
ja
add
rcrb
dec
xchg
xor
imul
cld
and
push
sub
inc
mov
xchg
leave
adc
jb
jle
push
int
adc
dec
sub
jle
inc
ret
pop
cltd
inc
mov
and
push
out
cmp
out
and
mov
scas
clc
shr
cmp
sbb
test
jo
push
fnstenv
int
inc
dec
sub
enter
push
arpl
or
adc
xchg
xchg
popa
sti
insl
push
mov
pop
leave
insl
ss
dec
bound
xorb
pop
mov
movsb
in
clc
insl
lret
xchg
loope
dec
adc
adc
outsb
mov
mov
cli
jle
mov
ret
sarb
mov
push
and
and
mov
add
push
xor
pop
arpl
add
sbb
test
add
mov
jb
data16
dec
dec
jo
in
leave
fisubl
loopne
and
dec
mov
lock
imulb
sub
scas
cld
add
mov
jbe
jns
push
rcrl
scas
sbb
scas
add
fcmovbe
fs
aam
lahf
cmc
cltd
iret
out
imul
test
mov
adc
out
iret
pop
adc
ja
xor
lahf
cmp
out
mov
mov
mov
pushf
pop
outsl
roll
icebp
sub
or
subl
and
pop
ja
rorb
cmp
xor
inc
mov
hlt
mov
xchg
jge
mov
sub
insl
js
sub
fsubl
mov
or
arpl
cmp
jmp
jg
fs
push
popa
push
inc
loopne
mov
dec
fldenv
xchg
add
fistl
rolb
scas
lods
test
scas
or
ret
push
mov
cmp
pop
pop
add
sbb
jno
cltd
push
pushf
packuswb
sbb
enter
xor
adc
fdivr
cwtl
push
insl
ljmp
mov
fildll
pusha
movsb
pusha
and
and
xor
or
and
lret
movsl
clc
jbe
xchg
jecxz
sahf
mov
cmp
pop
pusha
lret
orb
scas
insb
pop
cmp
xchg
enterw
push
lods
test
int3
and
dec
sbb
repz
idivb
mov
int3
inc
popa
pushf
out
cli
mov
shll
fbstp
or
gs
flds
add
test
inc
sub
pop
mov
mov
aas
shll
fs
cwtl
pop
xlat
popf
ret
lret
fs
sbb
sbb
sub
mov
dec
mov
xor
mov
mov
sbb
imul
jbe
shl
gs
sub
and
xor
sub
test
in
orl
int3
pop
mov
fnsetpm(287
or
lcall
nop
jo
jb
fnstcw
mov
mov
dec
stos
dec
inc
push
adc
mov
or
xchg
test
and
lods
daa
xor
mov
fstpt
pushf
popf
movsb
fwait
and
pop
mov
or
xchg
cmc
xor
mov
adc
cmp
repnz
out
jmp
cmp
inc
or
mov
add
mov
push
dec
lcall
lcall
mov
cmp
push
loopne
loop
in
and
mov
jb
push
aaa
test
mov
stos
pop
add
mov
inc
pop
cmp
sub
dec
mov
push
cmp
iret
mov
sub
inc
rolb
xlat
stos
into
repnz
xor
in
stos
mov
add
aas
mov
clc
in
enter
outsb
push
jmp
js
xchg
cmp
cmp
inc
mov
in
push
popa
test
dec
mov
dec
dec
jecxz
cmp
aas
add
or
xlat
cmp
pop
daa
sahf
jne
jg
mov
push
mov
pop
and
inc
mov
add
popa
pop
cmp
lods
mov
adc
mov
mov
pop
xor
mov
incl
dec
add
sbb
push
jnp
add
ss
push
nop
inc
dec
mov
in
or
lret
cltd
inc
mov
sbb
and
gs
jnp
insl
sub
jmp
fistps
sti
cmp
out
jb
mov
bound
cli
xchg
cli
sbb
mov
jb
pop
xchg
mov
cli
pop
inc
pop
jno
stc
dec
jmp
sub
fsubrl
push
aam
into
mov
cmpsb
sub
test
and
ljmp
xor
nop
sub
or
icebp
gs
mov
fdivrl
mov
scas
pop
jns
mov
pop
xor
fiaddl
mov
es
mov
stc
mov
cs
xor
mov
sub
repz
pushf
xor
loope
aaa
mov
aam
mov
test
imul
push
cs
fistpll
inc
pop
jns
daa
jno
lahf
push
adc
xor
outsb
aam
sti
cli
mov
adc
lods
dec
mov
xchg
out
xorb
pop
loopne
inc
mov
xchg
push
in
mov
popa
adc
push
push
bound
push
arpl
push
mov
xchg
xchg
sarl
inc
xor
cmc
nop
jns
xchg
cmp
sbb
jg
xchg
sub
lods
adc
mov
sbb
add
xor
mov
fldcw
jo
roll
mov
fldcw
shlb
mov
mov
jmp
fsub
xor
lods
aas
sti
pop
adc
cmp
sti
push
jno
cmp
xchg
cltd
jbe
lret
xor
mov
loope
push
scas
ja
movsb
imul
incb
outsb
inc
outsb
pusha
pop
pop
dec
js
imul
sub
ret
out
pop
outsb
xor
in
je
jbe
pop
scas
cs
cmpsb
movsb
xor
shlb
je
mov
lcall
or
add
mov
dec
jo
push
push
nop
int3
pop
lea
leave
adc
pop
movsb
mov
mov
jecxz
mov
add
mov
imulb
into
mov
sub
pop
cmp
cltd
test
leave
pop
loopne
aad
mov
mov
or
sub
mov
push
into
xor
adc
orl
cmpsl
jmp
cmp
sub
mov
je,pt
mov
jo
jne
mov
mov
mov
sub
hlt
adc
shrb
repz
dec
dec
or
je
test
rcrb
add
outsb
xchg
call
mov
cmpsb
cltd
pop
lret
loop
jno
mov
outsl
sbb
roll
sbb
inc
jecxz
sbb
dec
mov
mov
aas
xchg
sbb
cmp
cmp
sub
mov
inc
outsl
mov
enter
in
add
cwtl
xchg
les
mov
inc
cmp
jl
cmp
aam
dec
setbe
imul
rol
mov
xor
pushf
cs
mov
inc
xor
mov
out
push
loopne
mov
test
dec
and
ja
xchg
jmp
mov
cld
push
dec
mov
cmc
pop
mov
out
rol
push
enter
ss
aad
.byte
and
mov
xchg
and
push
fcom
jg
sub
mov
cltd
idivl
stos
sub
jae
shll
shl
ret
daa
fwait
jne
outsb
jno
xchg
xchg
and
xor
mov
cmp
sbb
xchg
push
mov
pop
jge
sbb
pop
pop
mov
icebp
mov
push
data16
push
cmp
or
out
cmp
les
loop
mov
dec
sub
iret
pop
mov
fs
and
fcomps
sub
out
mov
cmp
jg
or
insl
cli
aam
cld
or
jb,pt
mov
ss
pop
push
outsl
sti
lods
cli
mov
fadds
loope
cmp
pop
dec
in
call
lods
xchg
or
sahf
loope
test
inc
jp
mov
or
and
sarb
shlb
test
inc
jae
fmuls
test
mov
jecxz
in
sub
call
dec
sahf
adc
mov
daa
jmp
pop
mov
jge
inc
inc
cmp
stc
or
stos
sbb
adc
dec
mov
sbb
mov
push
xchg
testb
psubd
xor
roll
loop
orl
pop
repz
adc
imul
int3
out
jmp
sub
stos
adcb
js
push
das
mov
jp
aas
or
gs
fs
dec
mov
fiadds
xor
lock
lret
ret
shrb
mov
mov
inc
push
int3
cmp
adc
add
pop
iret
mov
jl
fcomi
jmp
rclb
decl
adc
pusha
scas
rorb
cltd
fwait
push
add
out
mov
test
or
mov
xchg
and
in
sbb
movsl
push
mov
xor
xchg
lods
inc
out
inc
leave
jbe
fcom
nop
addr16
je
mull
or
pop
jne
pusha
mov
outsl
inc
enter
mov
insl
jns
dec
shr
es
and
and
push
psrlw
inc
xor
xchg
sbb
cwtl
adc
pop
icebp
fs
mov
jmp
loop
xchg
cli
aas
jecxz
push
or
enter
pop
cwtl
pop
jns
mov
or
cs
push
push
adc
cltd
fs
sub
jne
xorl
jmp
nop
push
mov
sti
out
mov
xchg
mov
jecxz
mov
xor
lret
or
push
es
push
into
adc
cmp
ds
cld
mov
jb
cwtl
leave
ret
repnz
aad
xor
cmp
loop
ds
pop
cmc
xor
sbbl
push
adc
sbb
test
mov
fldt
mov
push
add
aam
push
into
push
push
and
push
cmc
pop
popa
test
sbb
dec
jl
decl
shl
jo
ficoms
add
dec
je
mov
ret
aas
aad
xchg
sub
push
in
dec
int3
xor
repnz
add
jmp
int3
add
lods
sub
pop
notb
movsb
cmp
data16
xchg
sub
outsb
out
hlt
idivl
xorb
xchg
pop
mov
das
xchg
sub
idiv
aas
pop
and
push
sbb
out
and
jns
dec
ret
repnz
pushf
scas
mov
pop
or
mov
sarb
cmp
movsl
push
cmp
dec
xchg
or
lret
ss
mov
cmc
sub
in
out
push
gs
sti
fldl
out
imul
inc
pop
xor
mov
jbe
jbe
std
iret
jp
cmp
arpl
les
hlt
inc
mov
push
sub
popf
addb
inc
lods
imul
insl
jne
test
inc
inc
push
push
push
inc
nop
adc
iret
fstpl
int
movsl
jne
ja
adc
out
outsl
xchg
mov
ja
ds
add
cli
xor
jecxz
test
jo
mov
mov
add
add
pop
dec
push
push
pop
leave
xchg
lret
or
hlt
mov
cmp
cmp
test
popl
js
jbe
mov
cmp
aaa
movsl
popa
cmp
cmpsb
adc
sub
gs
outsb
mov
loope,pn
call
push
inc
popl
sbb
push
add
pop
sub
sahf
jnp
lock
in
jge
jo
sti
mov
pop
sbb
lock
sar
push
stos
mov
and
and
in
pop
js
fs
xchg
hlt
adc
into
xor
popf
lea
xchg
int3
subb
fiaddl
or
and
cs
cmpsb
shrl
out
jb
lahf
fnstenv
aaa
add
sbb
mov
iret
in
lock
inc
imul
jb
test
dec
popa
pop
lcall
and
jmp
cli
pop
cmpsb
subl
fwait
sub
adc
adc
push
pop
cwtl
cs
fmull
push
inc
hlt
jne
popf
inc
test
mov
pop
in
aam
fistpll
sbb
inc
cmpsb
xorl
and
cmp
inc
cmpsb
insl
rolb
xchg
arpl
nop
jg
pushf
jbe
ljmp
pop
insb
or
xchg
es
sub
mov
out
dec
lock
fcmovnb
sbbl
in
or
rclb
mov
mov
int3
hlt
or
std
add
or
lods
and
sub
fsubrl
scas
gs
push
fnstcw
xchg
clc
jbe
xlat
fistpl
popf
ljmp
sub
mov
adc
cmp
fdivrs
cmp
outsb
and
insb
imul
push
add
movsb
imul
popf
lds
push
adc
sbb
pop
sbb
xchg
push
test
jle
cmp
sub
sbb
out
jle
daa
mov
mov
in
imul
xchg
aam
pop
add
fucomip
pop
divb
in
std
push
paddd
xchg
dec
mov
outsl
push
popa
adc
xchg
shll
xor
xor
scas
adc
test
or
dec
xorl
mov
push
add
jno
and
aas
sub
fs
mov
fbld
cmp
jmp
jbe
or
add
dec
imul
xor
scas
das
into
les
xchg
pop
movsb
xchg
pop
mov
es
in
add
rorb
cmc
in
or
cmpsb
inc
sbb
ja
xchg
loopne
pop
or
adc
outsl
decl
jbe
in
mov
mov
loope
xor
data16
adc
or
les
adc
mov
jb
rclb
shlb
arpl
sbb
test
imul
cmp
stos
and
and
je
frstor
cli
mov
cmp
leave
je
subl
xor
jnp
movsb
and
leave
or
mov
fwait
pop
jp
jl
popa
and
mov
mov
cmpsb
jbe
xchg
fsubrs
sub
repz
dec
out
jge
addr16
dec
scas
jmp
out
ljmp
pop
int3
mov
movsl
adc
insl
es
add
imul
add
mov
cmp
iret
adc
mov
push
sub
in
mov
bound
fst
imul
aaa
pusha
pop
dec
xor
icebp
jne
or
insb
stos
xchg
stos
mov
dec
dec
push
cmp
data16
int3
cmp
out
pand
jns
lea
adc
mov
stos
inc
jnp
movups
dec
fs
dec
ret
push
inc
jecxz
push
push
jnp
push
pop
fwait
push
loop
jae
sub
movsb
pop
lock
les
fbstp
cld
mov
mov
jg
inc
cmp
and
or
andl
inc
jb
insb
bnd
fidivl
int3
xor
enter
sarl
shr
lret
sbb
push
push
pop
xor
in
add
nop
insl
ret
adc
cli
jmp
mov
adc
sbb
dec
std
jnp
sub
add
nop
adcb
loopne
jnp
das
outsb
movsl
sub
jnp
or
or
addr16
or
adcl
jo
loope
mov
out
xchg
xor
call
adc
mov
jg
xchg
push
std
in
jge
jge
lret
dec
ss
flds
test
mov
pop
sub
test
push
xchg
xchg
push
shll
arpl
sarl
in
dec
jno
mov
int
dec
adc
loopne
cmc
mov
add
aam
test
data16
mov
xor
inc
js
xor
mov
movsl
jne
push
outsb
jmp
addb
pop
mov
cmp
stc
pop
mov
out
pop
or
jecxz
mov
cmp
dec
insl
push
xor
sbb
and
xchg
movsl
or
push
xor
pop
cmp
aad
loop
gs
inc
mov
cmp
push
sbb
nop
arpl
push
jns
ret
xlat
fisttps
inc
pop
xor
aad
shll
push
setg
sbb
xchg
jne
jge
or
outsb
pop
test
imul
lcall
inc
add
add
lea
test
push
push
inc
fwait
sub
cmp
push
or
cmpsl
mov
xchg
cld
pop
xchg
out
mov
adc
and
das
mov
sahf
xchg
fcomps
xchg
push
jmp
dec
fcmovb
out
movsb
dec
sti
aam
and
and
pop
fidivl
sbb
cmpsb
xchg
mov
into
push
test
mov
clc
mov
jbe
jnp
mov
add
cmp
mov
icebp
mov
push
dec
mov
sbb
hlt
in
push
jb
dec
sbb
sub
ffree
lods
mov
sbb
dec
xlat
jae
imul
popf
push
orb
push
loope
add
fdivrl
mov
fcompl
test
cmpsl
fldenv
add
xchg
inc
sbb
and
fdivl
mov
mov
dec
ss
int3
decl
addr16
mov
lcall
daa
mov
xor
lods
sub
cmp
jge
cmp
jp
loopne
xor
popa
dec
lea
adc
sub
pop
push
pop
jae
mov
sbb
shrb
mov
mov
push
addr16
ljmp
incl
es
mov
data16
clc
sub
lods
es
aad
sar
mov
add
mov
pop
add
pop
jecxz
and
mov
fdivs
roll
mov
cltd
cli
add
pop
rcrb
jne
iret
sbb
lahf
mov
test
xchg
mov
rclb
lcall
mov
pusha
clc
push
push
xor
testl
ror
sti
in
inc
and
xor
cltd
mov
decl
and
pop
dec
insb
pusha
push
or
mov
pop
pusha
cmovl
bound
jnp
mov
movsb
test
add
rorl
or
add
cli
lods
pop
mov
xchg
push
dec
inc
rorb
lret
xlat
push
xor
paddusb
jl
mov
cmp
shrl
inc
mov
sub
aad
fistl
sub
stos
scas
dec
mov
fdivs
dec
push
stc
mov
insl
not
xchg
dec
ljmp
lock
mov
pushf
out
bound
daa
lcall
lcall
mov
cmp
xor
jmp
add
xchg
push
in
loope
fstp
mov
jge
imul
cmp
lahf
jp
add
jge
pop
ficompl
xlat
pusha
cli
xchg
cmc
mov
push
shlb
dec
shll
xor
pusha
insb
xchg
pop
jbe
scas
jmp
fwait
inc
pop
roll
add
xor
xchg
stos
push
lea
dec
xlat
insl
pop
inc
pop
mov
movsl
jne
sbb
jae
sub
pop
push
adc
and
dec
pusha
das
xor
enter
add
aad
stc
test
decl
lret
sahf
es
jae
xor
iret
mov
and
scas
push
dec
hlt
push
lcall
xchg
fcoms
iret
sbb
push
cwtl
xor
lods
cmp
sbb
je
mov
sbb
das
add
inc
popa
xor
std
fistl
je
iret
inc
fs
outsb
cmp
test
mov
aaa
test
sbb
push
mov
fsubrl
pop
nop
stc
in
push
mov
aaa
mov
xlat
push
adc
rcl
outsb
dec
dec
fsubs
js
sbb
mov
dec
in
sbb
mov
es
cwtl
jne
jae
jecxz
xchg
ret
orl
out
arpl
lea
repz
dec
adc
mov
enter
call
lea
scas
int
push
push
jo
dec
jno
lods
or
subb
xchg
fs
ja
adc
addr16
xchg
insb
ret
mov
dec
sti
addr16
jle
clc
cmp
std
jb
mov
call
rcr
and
js
in
in
add
pushf
inc
aam
fmuls
test
sub
popf
and
mov
ss
jge
jne
pop
pusha
mov
adc
pop
loopne
jle
push
add
loop
outsb
int
sbb
cmpsl
sbb
add
jne
lock
xchg
sbb
outsb
push
ret
daa
dec
pop
mov
inc
adc
sub
add
inc
mov
add
rorb
sbb
mov
fbld
and
shll
mov
push
call
ljmp
jmp
loope
mov
in
add
sbb
jbe
xchg
push
mov
loop
mov
mov
lods
aad
clc
push
cs
xchg
mov
push
push
xor
sbb
rorl
mov
lahf
mov
fmull
inc
cmp
mov
sbb
mov
repnz
insb
push
adc
and
mov
jno
fbstp
loopne
add
shufps
repnz
lds
xchg
mov
.byte
mov
.byte
.byte
add
add
add
add
push
cli
into
xor
pop
dec
icebp
xchg
fwait
push
pusha
xchg
scas
outsl
adcl
mov
inc
xchg
add
out
mov
mov
adc
pop
xchg
mov
jnp
add
pop
dec
popa
or
fstpl
pop
out
out
fadds
jo
mov
or
shlb
cmp
jp
push
lcall
std
mov
push
mov
adc
dec
xor
push
jp
cli
addb
inc
aam
sbb
out
mov
ja
out
cmpsl
xor
adc
xor
mov
lcall
or
rcll
mov
cltd
jns
outsl
pop
adc
into
mov
out
fucomp
sarl
push
fcoml
sub
cmpsb
mov
mov
and
sbb
or
jb
adc
adc
inc
shr
es
adc
jo
shll
mov
in
xor
lods
test
inc
mov
cs
xor
jae
aad
dec
faddl
cmp
jg
movsb
pop
mov
push
xor
mov
push
mov
filds
test
mov
mov
nop
mov
cmpsl
mov
jmp
lret
mov
dec
aaa
or
hlt
pop
xchg
mov
lar
mov
mov
mov
jb
push
jg
sar
mov
mov
add
jle
xchg
jmp
pop
inc
jge
xchg
sbb
lea
fneni(8087
sbb
test
ret
ret
pop
or
mov
and
sti
fisttps
or
inc
pop
push
jnp
jp
sub
mov
sub
push
xcrypt-cfb
cmpsl
movsl
mov
cli
xchg
jns
std
and
xor
mov
std
fdivl
add
in
mov
fistps
.byte
test
.byte
icebp
add
add
add
pop
add
add
addb
add
push
add
add
add
add
add
add
add
sbbb
add
call
add
add
add
cmpb
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
test
add
cmp
add
add
add
add
add
add
add
add
add
push
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
nop
add
add
and
add
add
add
add
add
add
add
in
add
add
add
in
add
sub
add
in
add
add
add
adc
add
in
add
add
add
cmp
add
in
add
add
add
inc
stos
add
and
add
in
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
stos
add
adc
add
in
add
add
add
fsubrl
add
in
add
add
add
xchg
scas
add
or
add
in
add
add
add
mov
add
add
add
add
add
add
into
add
in
add
add
add
add
add
adc
add
in
add
add
add
adc
add
add
add
in
add
add
add
pop
add
add
inc
add
add
dec
push
inc
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
decl
add
and
add
addb
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
mov
add
add
add
dec
add
add
add
add
js
add
decl
add
add
add
add
decl
add
add
add
sbb
add
decl
add
add
or
add
add
decl
add
add
push
add
addb
add
decl
add
add
add
decl
add
add
add
add
add
decl
add
add
add
add
decl
add
add
add
pop
add
add
decl
add
add
adc
add
decl
add
add
incl
add
add
decl
add
add
add
add
add
decl
add
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
add
lods
adc
add
add
add
add
add
add
add
sbb
add
js
add
inc
adc
add
add
add
incl
add
add
add
add
add
add
add
add
pushl
add
enter
add
add
add
add
add
add
nop
add
add
add
push
add
add
add
incl
add
add
add
enter
add
or
add
add
pushl
add
push
sbb
add
add
add
add
add
add
test
add
inc
adc
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
and
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
je
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
sub
add
add
add
add
add
add
add
fadds
add
inc
adc
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
jmp
and
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
add
test
add
jmp
and
add
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
mov
add
add
add
add
jmp
and
add
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
jmp
and
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
jmp
and
add
add
add
add
add
add
add
add
aam
add
incl
add
add
add
adc
add
jmp
and
add
add
add
add
add
add
add
add
lock
add
incl
add
add
add
and
add
jmp
and
add
add
add
add
add
add
mov
add
add
add
add
incl
add
add
add
xor
add
jmp
and
add
add
add
add
add
add
faddl
add
add
add
xor
add
incl
add
add
add
inc
add
add
jmp
add
cmp
add
ljmp
add
add
add
lock
add
add
add
decl
add
decl
add
add
pushl
add
add
add
rolb
add
call
add
sbb
add
mov
xchg
iret
adc
jo
jmp
ja
jl
rcll
mov
ja
jmp
jmp
fidivrs
adc
ja
jmp
pushl
add
add
add
add
add
add
add
inc
add
add
incl
add
add
add
add
add
add
add
inc
add
add
lcall
mov
cmc
inc
mov
loop
xchg
push
pop
in
add
add
call
test
rcll
mov
rcll
add
add
jmp
xchg
iret
adc
jo
enter
call
test
rcll
mov
rcll
sub
add
push
cli
fs
mov
jnp
cmp
sbbl
rcr
push
sbb
iret
adc
add
add
test
add
shrb
or
iret
adc
add
add
jmp
xchg
iret
adc
jo
call
jmp
iret
adc
jo
dec
add
add
pushl
mov
adc
rcll
mov
add
lcall
shrb
cmp
adc
add
add
hlt
add
add
add
add
incl
add
add
add
add
jmp
add
add
add
ljmp
add
add
add
call
add
add
incl
add
add
add
add
add
dec
add
add
add
add
add
add
outsl
insb
xor
je
bound
push
mov
add
add
jo
add
mov
decl
add
add
incl
cmp
add
add
add
clc
add
add
add
dec
add
add
pushl
add
add
add
call
add
add
incl
add
rolb
add
push
add
jmp
add
add
dec
add
add
add
rolb
add
add
add
add
add
add
add
add
add
push
add
call
add
pusha
add
add
add
add
lods
add
add
call
faddl
add
in
push
add
mov
pushl
add
ljmp
add
call
lcall
incl
add
add
lcall
call
add
call
add
jl
add
decl
jl
add
adc
add
test
add
jo
add
in
add
add
mov
add
push
push
add
sbb
add
rolb
add
test
add
push
add
pushl
decl
add
add
add
incl
dec
outsl
jae
push
push
push
add
add
incl
lock
popa
insl
gs
decl
add
push
outsl
jne
pop
dec
popa
insl
add
add
decl
add
insb
imul
push
decl
mov
pop
inc
imul
add
add
decl
add
sahf
inc
jne
insb
dec
popa
insl
gs
decl
add
outsl
jne
pop
push
popa
je
add
add
incl
xor
popa
je
add
add
decl
add
gs
arpl
gs
decl
add
inc
outsl
jne
pop
dec
outsb
je
jb
arpl
gs
add
add
incl
cmp
decl
add
inc
js
je
outsl
fs
add
decl
add
push
arpl
jo
dec
popa
insl
gs
push
decl
add
push
outsl
jne
pop
push
arpl
jo
dec
popa
insl
gs
push
add
add
decl
add
imul
dec
popa
insl
gs
push
call
add
add
jne
pop
push
arpl
jo
inc
jne
insb
dec
popa
insl
gs
push
add
add
decl
cmp
dec
dec
inc
jb
jne
outsb
je
xor
add
add
decl
cmp
addr16
outsb
je
push
push
enter
incl
xlat
jp
je
insl
incl
outsb
fs
push
push
decl
add
xchg
outsl
jne
pop
push
popa
insb
jne
push
push
push
enter
incl
outsl
jne
je
push
push
decl
add
outsl
jne
pop
inc
outsl
jne
je
push
push
enter
incl
add
insb
outsb
addr16
push
push
enter
decl
add
pop
dec
gs
outsb
jne
decl
add
pop
inc
outsb
jne
sub
add
call
cmp
dec
dec
popa
insl
gs
jb
jne
outsb
je
push
push
incl
add
jp
ja
je
push
add
cmp
add
push
add
jae
jae
push
decl
add
pop
inc
js
jae
jae
push
add
add
incl
popa
insl
gs
push
push
decl
add
jne
pop
jo
outsb
popa
insl
gs
nop
add
add
cmp
dec
push
outsb
outsb
popa
insl
gs
jb
jne
outsb
je
add
add
incl
add
aas
push
outsb
outsb
popa
insl
gs
add
add
decl
add
ja
jae
addr16
push
push
add
add
and
add
or
push
inc
jb
jne
outsb
je
push
push
push
mov
add
pop
inc
jb
jne
outsb
je
push
push
push
add
add
incl
add
jae
outsl
outsb
push
decl
add
outsl
jne
pop
push
gs
imul
add
decl
and
inc
jne
insb
fs
gs
imul
push
add
nop
outsl
jne
pop
inc
jne
insb
fs
push
push
add
add
incl
add
outsl
jne
push
decl
add
pop
push
imul
add
add
adc
add
or
clc
mov
gs
je
dec
bound
arpl
incl
add
dec
push
jb
addr16
inc
push
push
incl
add
lea
imul
add
add
incl
test
inc
arpl
call
add
add
inc
jb
jae
push
push
add
add
decl
add
inc
gs
bound
arpl
push
decl
add
push
add
add
call
add
arpl
outsb
arpl
push
arpl
incl
add
cs
bound
arpl
add
add
incl
insb
gs
push
push
incl
stos
mov
add
add
decl
outsl
outsb
outsb
arpl
push
arpl
push
hlt
add
add
add
cmp
dec
push
gs
push
je
gs
insl
push
hlt
add
add
bound
hlt
add
add
incl
add
jne
outsb
push
push
hlt
add
add
add
add
je
outsb
fs
push
je
gs
insl
push
push
push
incl
add
mov
push
push
hlt
add
add
add
or
ds
inc
je
outsb
fs
dec
imul
pushl
add
add
cli
mov
dec
push
hlt
add
add
incl
nopl
popa
fs
decl
add
inc
push
je
jb
push
push
incl
in
stos
push
gs
hlt
add
add
add
rclb
popa
fs
imul
clc
add
add
add
push
push
gs
fs
insb
insb
push
hlt
add
add
cs
push
jb
je
push
push
push
hlt
add
add
add
add
add
push
jb
je
dec
imul
add
add
decl
add
mov
gs
insb
popa
outsb
imul
jae
incl
imul
hlt
add
add
testl
hlt
add
add
add
add
add
int3
push
imul
imul
movsb
add
add
insb
outsl
jae
push
push
push
add
add
sub
add
add
je
dec
outsb
push
push
push
decl
add
pop
jo
je
add
add
in
add
push
and
popa
push
je
dec
jne
push
push
incl
je
jo
je
add
add
incl
and
push
je
inc
jb
push
push
add
add
call
add
xchg
inc
js
jb
arpl
jae
jne
arpl
add
add
decl
add
je
push
gs
jne
arpl
push
pop
add
add
call
cmp
push
je
outsb
fs
jb
push
je
gs
insl
push
jns
gs
mov
jmp
cmp
pop
pop
dec
dec
inc
dec
pop
pop
pop
dec
dec
inc
dec
pop
imul
je
xor
xor
xor
push
push
and
add
sub
add
and
adc
inc
dec
pop
pop
pop
dec
dec
inc
dec
pop
imul
jo
pop
xor
cmp
pop
xor
xor
push
push
test
add
decl
cmp
addr16
gs
push
je
gs
insl
push
push
call
decl
cmp
dec
dec
outsl
jae
pop
inc
insb
popa
jae
push
dec
add
add
bound
inc
jb
jne
outsb
je
pop
inc
insb
popa
jae
mov
add
lcall
cmp
dec
push
push
dec
dec
popa
insl
gs
jb
jne
outsb
je
pop
inc
insb
popa
jae
adc
add
lcall
cmp
dec
push
push
dec
push
outsb
outsb
popa
insl
gs
jb
jne
outsb
je
pop
inc
insb
popa
jae
push
push
sbb
outsl
ja
and
jb
jo
and
jae
and
push
gs
xor
sub
push
imul
push
arpl
jo
and
jae
and
jo
imul
and
je
jb
popa
arpl
and
jne
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
outsb
je
jb
popa
arpl
sub
dec
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
outsb
je
jb
popa
arpl
push
push
sub
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
outsb
je
jb
popa
arpl
sbb
push
imul
push
arpl
jo
and
jae
and
push
arpl
inc
jb
jne
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
push
and
dec
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
add
outsb
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
push
sbb
or
add
sbbb
or
add
sbbb
or
add
sbbb
add
add
sbbb
or
sbbb
or
or
or
sbb
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
inc
push
add
sbbb
or
or
or
sbb
add
add
add
jg
add
add
add
jg
add
add
add
add
add
add
add
rcl
push
push
adc
movsb
add
add
add
add
push
push
sbb
add
add
add
pushl
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
dec
add
inc
add
add
add
add
add
and
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
push
add
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
jl
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
jl
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
add
add
addb
add
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
add
add
addb
add
xor
pop
add
adc
add
add
add
add
mov
add
and
add
xor
add
and
pop
add
add
addb
add
cmp
dec
add
inc
pop
add
add
add
add
add
add
add
add
add
or
sbb
sbb
cmp
dec
add
inc
or
add
add
add
add
dec
add
add
add
add
or
sbb
sbb
inc
add
inc
or
add
add
jo
add
sub
add
or
add
and
or
sbb
sbb
inc
add
inc
or
add
add
add
add
pop
add
add
add
add
or
sbb
sbb
dec
add
inc
or
add
add
js
add
mov
add
or
add
and
or
sbb
sbb
dec
add
inc
or
add
add
add
add
add
or
addb
add
push
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
addb
add
push
add
add
add
call
add
add
decl
add
sub
add
add
add
or
or
xor
add
or
add
push
add
add
add
add
ltr
add
addb
add
pop
add
add
add
add
incl
add
add
add
add
adc
sbb
sbb
pop
add
add
add
call
add
add
add
add
decl
add
orb
add
add
or
or
xor
add
or
or
xor
add
or
add
push
add
add
add
add
adc
sbb
sbb
pusha
add
add
add
add
add
add
cmpb
add
add
and
adc
sbb
sbb
add
add
add
add
add
add
andb
add
add
add
add
addb
add
push
add
add
add
add
add
cmpb
add
add
or
or
add
add
and
adc
sbb
sbb
insb
add
inc
adc
add
add
cwtl
add
add
add
or
add
and
adc
addb
add
jo
push
add
inc
adc
add
push
add
or
add
and
push
add
add
addb
add
je
push
add
inc
push
add
add
add
push
add
or
add
and
pop
add
add
addb
add
js
inc
add
add
add
add
add
add
orb
add
add
and
sbb
sbb
sbb
jl
inc
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
roll
add
rolb
add
roll
add
aam
add
aad
add
out
add
add
add
add
add
add
pop
add
xlat
pop
add
adc
add
cmp
add
push
add
add
add
add
add
add
add
add
add
adc
add
dec
add
add
add
add
rolb
add
adc
add
add
pusha
add
add
add
add
add
add
push
add
rolb
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sub
push
add
inc
add
add
add
inc
add
add
add
add
add
sbb
sbb
xor
push
add
inc
add
add
add
pop
add
add
add
add
add
add
add
addb
add
xor
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
sbb
sbb
sbb
pop
add
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
sub
add
or
add
add
add
add
add
add
add
cld
lcall
add
add
add
add
add
add
add
xor
add
push
add
add
add
int3
add
add
add
add
add
addb
add
sbb
pop
add
inc
add
add
add
or
or
add
add
sub
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
add
add
addb
add
sub
pop
add
inc
add
add
add
or
or
add
add
adc
add
test
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
sub
add
or
add
add
add
add
add
add
add
add
add
cld
lcall
add
add
add
add
add
adc
add
add
add
xor
add
push
add
add
add
test
add
pushf
add
add
add
add
add
addb
add
sbb
pop
add
inc
add
add
add
add
add
add
add
sub
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
sub
add
or
add
add
add
add
add
add
add
cld
lcall
add
add
add
add
add
add
add
xor
add
push
add
add
add
int3
add
add
add
sbb
sbb
sbb
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
clc
add
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
adc
add
sub
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
adc
add
push
add
add
xor
add
sbb
sbb
sub
pop
add
inc
add
add
add
add
add
add
add
add
add
mov
add
and
add
addb
add
xor
dec
add
inc
add
add
add
add
add
add
push
add
add
addb
add
xor
dec
add
inc
push
add
add
add
add
add
add
add
pop
add
add
addb
add
cmp
inc
add
add
add
add
add
add
orb
add
sub
or
sbb
sbb
cmp
pop
add
adc
add
add
add
add
add
add
orb
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
orb
add
add
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
xorb
add
add
add
add
add
add
addb
add
dec
add
or
add
add
add
add
sbb
sbb
dec
add
or
add
add
add
daa
add
out
std
call
daa
add
adc
add
adc
add
adc
daa
add
pop
daa
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
call
add
add
add
pusha
add
add
lods
add
add
aam
add
in
add
add
sub
add
inc
push
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pushf
add
add
add
adc
add
push
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
inc
add
add
push
add
jl
add
mov
add
add
add
sub
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
out
or
add
push
out
adc
push
call
add
pop
ljmp
insb
jmp
inc
jno
add
in
add
in
add
in
add
out
add
jmp
add
out
add
icebp
add
repnz
movsl
repz
mov
add
mov
testl
stc
add
add
jecxz
add
in
add
loope
add
in
add
ljmp
in
cld
add
out
std
add
repnz
cmc
cmc
add
idiv
add
clc
incb
stc
stc
stc
add
incl
add
es
sub
sub
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
sub
and
add
sub
sub
sub
sub
or
sub
and
add
or
add
sub
sub
add
add
add
add
add
adc
add
add
add
adc
sub
sub
sub
push
add
add
add
sub
sub
sbb
add
add
add
sub
sub
add
add
add
add
add
add
and
pop
sbb
add
add
add
sub
and
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
and
and
and
and
and
and
and
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
popl
dec
add
add
add
js
add
arpl
jb
imul
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
xor
push
add
add
incl
add
push
add
add
dec
add
xor
push
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
add
incl
add
and
jae
arpl
jb
imul
and
imul
add
arpl
jb
jns
jo
je
add
add
add
insb
add
popa
add
add
add
outsb
add
add
and
je
push
add
popa
add
jae
ja
outsl
add
add
add
add
add
add
add
add
add
add
incl
add
add
adc
shlb
dec
cmp
jp
pop
sub
inc
add
dec
add
add
inc
add
arpl
outsl
add
add
add
add
jae
add
add
add
subl
pop
add
testl
pop
add
add
add
add
add
js
gs
add
push
inc
add
add
js
add
arpl
jb
imul
and
sub
pop
lds
loopne
aad
sub
mov
or
dec
sub
add
add
add
dec
mov
push
push
xchg
ss
sub
add
add
add
add
adc
add
add
or
push
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
or
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
jae
jb
jo
and
je
jo
cmp
xor
and
and
fs
jb
jo
imul
push
arpl
jo
cmp
fs
jb
jo
imul
and
cmp
sub
outsb
je
data16
je
and
jo
imul
and
arpl
imul
imul
jae
and
and
cmp
jae
popa
jae
jbe
cmp
jae
dec
outsb
outsw
and
insb
outsb
jae
insl
jae
popa
jae
jbe
cmp
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
insl
jbe
cmp
arpl
imul
and
and
cmp
jae
popa
jae
jbe
cmp
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
insl
jbe
cmp
jno
gs
gs
js
arpl
imul
insb
or
and
and
and
and
gs
cmp
outsb
jbe
imul
and
and
and
and
and
and
and
and
and
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
insl
jae
popa
jae
jbe
cmp
jno
gs
gs
jb
jbe
insb
gs
or
and
and
cmp
insl
jae
popa
jae
jbe
cmp
arpl
imul
cmp
insl
jae
popa
jae
jbe
cmp
jae
dec
outsb
outsw
ds
jae
gs
bound
inc
js
push
arpl
jo
push
inc
inc
dec
sbb
mov
pushf
mov
int3
lock
into
add
dec
inc
enter
ret
pop
rorb
xor
in
in
cli
addl
imul
in
cmpsb
fs
aad
das
jecxz
mov
xchg
out
shll
rcrb
scas
push
and
daa
push
jg
fisttpl
add
or
push
divl
dec
lods
pop
insb
mov
and
icebp
ds
and
push
sbbb
add
add
lds
adcl
push
addr16
sbb
das
sbb
or
xchg
and
adc
or
enter
add
cmpl
stos
push
add
repz
mov
xlat
cs
add
arpl
xor
iret
sub
dec
mov
in
sub
cli
jno
mov
cmpsb
inc
pop
dec
pop
jno
scas
pop
or
xchg
fiaddl
and
mov
lods
fmull
dec
leave
into
or
icebp
mov
and
dec
enter
pop
mov
roll
out
or
dec
decb
and
mov
push
dec
and
adc
sub
add
ret
push
jae
xor
add
clc
add
sbb
adc
ds
sub
add
das
jp
cltd
ret
jecxz
inc
leave
jnp
cs
pop
adc
xor
test
lret
es
dec
mov
sub
and
and
fistpl
nop
leave
sub
hlt
bound
out
stos
and
cmp
mov
sbb
call
cmc
arpl
jle
sbb
orl
js
mov
shrb
mov
push
sti
gs
xchg
push
jmp
mov
mov
inc
aad
gs
cmp
lods
rcr
xchg
pop
sbb
mov
mov
repz
adc
add
jb
in
cmp
add
or
and
jmp
and
jmp
in
std
push
lahf
xchg
or
push
fisttps
ljmp
sbb
add
faddl
jae
arpl
repnz
xor
push
dec
adc
dec
mov
cmp
cmpsl
pop
jge
cmp
cltd
out
daa
fnstsw
jg
enter
sub
and
fstl
adc
ja
mov
mov
mov
pushf
pop
cmpsl
loopne
mov
call
in
xchg
stos
jg
xchg
jno
in
stc
mov
adc
and
xor
mov
pop
sbb
pop
aad
inc
push
sbb
adc
sbb
pop
inc
push
outsl
jecxz
dec
dec
les
sbb
imul
add
xchg
and
hlt
add
in
and
ja
cmpl
adc
je
mov
dec
xor
push
cmp
les
jbe
jae
jno
add
add
rcl
dec
mov
mov
inc
jo
push
add
call
pop
mov
ja
sub
aas
test
mov
inc
mov
jmp
fs
mov
mov
ljmp
push
outsl
mov
scas
cmc
lret
stos
inc
add
out
fimuls
or
aam
cwtl
sbb
lock
pop
sti
int3
push
leave
sbb
sahf
and
loope
scas
pushf
xchg
clc
adc
or
scas
clc
push
icebp
pop
or
mov
test
mov
es
cmpsb
das
and
cltd
fisttpll
mov
and
fldl
inc
filds
rcr
xor
xor
data16
sbbl
cwtl
or
pop
int3
inc
adc
arpl
int
std
jb
aaa
mov
xchg
rcrl
out
sbb
stos
sbb
insl
outsb
adc
popa
lcall
lahf
add
insb
dec
jmp
mov
xchg
in
data16
jns
fstl
mov
sub
mov
mov
mov
out
jle
jb
mov
cwtl
loope
in
sub
sub
xlat
roll
jl
data16
fildll
xchg
je
jl
xor
push
std
or
imul
lds
ss
xchg
sub
popa
pop
and
sub
or
adcb
pop
dec
push
cmpsl
xchg
mov
xor
dec
xchg
pop
push
jnp
jbe
dec
and
fsubs
push
repz
xchg
or
and
out
scas
add
loope
pop
fstpl
mov
orb
scas
dec
mov
or
inc
jne
rcrl
fstps
idivb
push
sub
out
test
sub
fdivrs
es
scas
in
cwtl
push
lods
ret
jno
scas
addb
imulb
xlat
ss
add
mov
xor
mov
cltd
dec
in
ja
and
mov
outsb
xor
mov
add
repnz
int3
out
iret
rcrl
dec
pop
icebp
imul
pushf
add
test
jmp
fbld
jae
xlat
and
into
outsl
and
scas
pop
scas
mov
inc
fwait
sub
xchg
ljmp
push
inc
inc
pop
mov
andb
les
dec
push
iret
imul
insb
loope
inc
pop
lret
scas
loope
mov
xor
fsubrs
xor
ret
or
pushf
cld
lea
push
cwtl
mov
adc
sub
cltd
or
jmp
jl
popa
test
cli
scas
mov
aad
scas
xor
pop
aam
ds
push
and
or
inc
jge
cltd
repz
movsl
cld
jbe,pt
inc
xchg
js
or
mov
dec
inc
aam
xor
mov
lds
mov
dec
ja
push
and
fiaddl
mov
mov
mov
data16
notl
add
ss
pop
or
cmpsb
or
cmp
pop
fimuls
add
adc
sbb
inc
pop
test
jmp
bound
cmc
mov
xchg
int
repz
sti
pushl
xorb
or
ss
or
mov
push
fldenv
sbb
fisttps
out
popf
ret
out
sbbb
cwtl
mov
into
outsb
ret
xchg
mov
mov
inc
loop
stc
and
flds
add
test
test
xor
and
out
xor
movsl
jg
inc
icebp
iret
mov
mov
rclb
mov
or
xchg
arpl
dec
xchg
icebp
xchg
mov
or
or
mov
popa
notb
mov
lahf
cmp
fldl
aas
adc
pop
das
jbe
xor
clc
xchg
xlat
add
pop
add
fs
jmp
mov
add
call
ds
lods
mov
fdivrs
fiaddl
mov
xor
sbb
int3
mov
arpl
pop
mov
scas
or
cmp
mov
sbb
push
sbb
negb
pop
sbb
outsb
adcb
push
mov
mov
xchg
loop
cmc
add
repnz
push
das
cmp
shl
test
cmp
loope
dec
dec
mov
data16
dec
les
call
xchg
mov
pop
lods
stos
push
int
daa
push
clc
push
mov
push
jne
test
popa
popf
pop
inc
insb
sbb
mov
pushf
mov
or
and
sub
loop
aam
data16
mov
clc
xchg
imul
fdivr
in
xor
lods
int3
repnz
icebp
adc
andl
push
adc
and
inc
cmp
xchg
arpl
inc
hlt
orl
dec
and
pushf
jmp
dec
pop
lods
fisubl
and
adc
xchg
lahf
mov
cli
xchg
xor
pop
hlt
adc
sbb
dec
jl
inc
mov
jge
and
je
cmc
or
add
mov
mov
and
push
mov
dec
push
ljmp
cmp
imul
xlat
decb
push
fisubrl
dec
push
push
insl
pop
int3
mov
sbb
push
sub
mov
movl
pop
push
mov
push
movsl
fcom
xchg
and
stc
cmpsb
fisubl
jmp
xchg
divb
ds
int
repz
sti
pushl
out
mov
call
xchg
outsl
scas
or
aam
cmp
sarl
aaa
adc
sbb
pop
scas
shlb
inc
sbb
xlat
xchg
out
fwait
popa
test
adc
inc
aam
add
sbbl
or
mov
cltd
repnz
push
inc
inc
rorl
adc
scas
or
dec
mov
in
pusha
clc
test
cld
int
mov
sub
aaa
jecxz
movsb
push
scas
dec
cltd
pop
cmp
and
push
imulb
lret
and
loopne
pop
cs
add
cmc
and
xchg
sub
pop
lret
int3
or
outsl
in
sbb
or
aam
jno
mov
inc
xor
std
cmp
cmpsl
nop
pop
inc
das
inc
jle
sbb
call
js
notl
in
pop
pop
iret
outsl
js
jnp
call
cmpsl
mov
dec
inc
inc
jne
sti
arpl
push
xor
and
pop
inc
and
jle
cmp
cmpsb
cld
aad
push
out
test
imul
sub
jl
lock
cmp
dec
push
test
jae
cmp
outsb
dec
push
pop
inc
dec
pop
lret
nop
push
enter
mov
push
and
mov
ss
cmp
nop
xor
push
cwtl
pop
aam
cmp
or
lcall
lret
mov
sub
push
out
aad
popf
lds
ret
push
hlt
push
test
push
lret
aas
dec
incl
mov
push
sbbl
mov
xchg
out
mov
add
xchg
mov
pop
sbb
and
xchg
jnp
lods
movsb
push
pop
popf
mov
sub
pop
dec
clc
cmp
cmp
add
inc
addb
addb
jnp
and
add
cmp
xor
and
jp
ja
std
jle
jecxz
mov
jnp
push
jmp
dec
shrb
ret
mov
sbb
jb
add
stc
stos
sarb
dec
mov
lods
loope
pop
inc
adc
or
xchg
pushf
enter
mov
divl
xor
sbb
adc
xor
add
sub
push
shll
popf
xchg
xchg
xorl
jl
fwait
stos
pop
push
loopne,pt
dec
xlat
aad
out
stos
icebp
dec
cmp
in
push
pop
mov
inc
xor
or
jns
push
cmp
lock
sbb
insl
stos
mov
clc
sbb
jp
push
dec
xor
sbb
jmp
in
mov
lds
xchg
inc
mov
jmp
pop
sub
sbb
jg
outsl
jmp
movsb
rcrb
adc
mov
shll
mov
data16
mov
test
sarl
inc
cmp
xor
stc
std
pop
imul
movsl
mov
es
cmp
sbb
lret
mov
push
frstor
ds
jg
notb
fisttpl
aam
in
test
mov
jmp
out
lret
lret
out
andb
outsb
rcl
sub
lods
ret
fmuls
mov
xor
and
addr16
call
cmp
aaa
mov
xchg
jg
insl
push
imul
ja
adc
out
cmp
ljmp
lods
lock
dec
movsb
xchg
fdivrs
sbb
pop
std
aaa
pop
jnp
ret
push
adc
sarb
or
rcl
and
lret
aaa
pop
rcr
or
push
push
sbb
and
sbb
jp
push
xor
rcl
xor
lret
lds
sub
out
xchg
jns
jnp
into
cwtl
adc
push
mov
lods
sub
dec
add
stc
ljmp
dec
sahf
or
and
jb
push
xchg
dec
int
push
pop
sub
and
lock
jmp
push
mov
and
pop
or
movsb
sub
sarb
test
into
xor
test
out
pop
sub
pop
xlat
cmpsl
sub
lcall
repnz
leave
scas
leave
xchg
jns
sbb
adc
dec
imul
sub
jge
push
fucomi
or
loop
es
lret
dec
lds
fsub
add
push
sub
cld
cmp
xlat
pop
jne
jmp
test
add
mov
loopne
out
xchg
cli
lret
push
mov
cmpsl
loop
mov
add
dec
mov
push
daa
jmp
sub
outsb
xchg
negl
mov
fwait
sub
add
adc
jb
out
dec
pop
dec
clc
in
aam
mov
jge
faddl
xchg
sub
shrb
mov
cli
jo
imul
inc
js
scas
jle
jae
fnstcw
sub
mov
mov
cwtl
cmp
js
les
sub
push
push
xchg
enter
mov
push
adc
xchg
aam
mov
inc
sbb
mov
popa
loopne
dec
test
in
into
add
add
bound
adc
gs
add
inc
ss
loop
add
sub
push
push
sbb
leave
fmul
les
sbb
int
adc
jo
add
rorb
pop
clc
ljmp
aad
xchg
and
jle
xor
sub
fcoms
sub
mov
jg
pop
pop
pop
in
mov
rorb
push
loop
std
movsl
out
test
aad
cmp
xlat
int3
out
lret
daa
call
sub
cmpsb
aad
lock
mov
push
xchg
sub
aad
add
push
lods
inc
cmpsl
inc
ror
outsl
jge
in
adc
in
insb
mov
mov
cmp
lahf
test
cwtl
push
push
inc
xchg
movsb
fldcw
push
ljmp
shl
and
mov
dec
or
sub
out
inc
add
lret
shrl
or
jmp
lret
fistps
mov
ss
jl
bound
out
jl
sbb
decb
mov
jmp
mov
roll
push
mov
or
sbb
sbbl
in
or
xor
inc
jns
cmpsl
pop
dec
dec
sarb
mov
lods
fisttpll
push
jns
cltd
jbe
add
movsb
aaa
cld
aas
ljmp
jmp
and
cld
cmp
test
inc
jae
or
pop
jne
scas
sbb
jmp
push
pop
cmpsl
xor
push
pop
push
mov
xchg
outsl
stos
mov
repz
mov
pusha
mov
jmp
mov
cltd
fs
inc
les
and
loopne
stos
mov
or
xor
xchg
mov
and
sarl
xor
mov
in
out
sub
popf
jl
mov
mov
ljmp
mov
mov
popf
in
movsl
cmpsl
cli
and
xchg
je
fmull
in
xor
inc
mov
scas
call
hlt
push
mov
test
lods
out
and
addr16
xor
inc
cmpsb
lods
jne
pushf
cmpsb
out
clc
dec
lret
push
lahf
arpl
out
fsubrp
jo
add
xor
xchg
cs
inc
xchg
cmp
or
es
cmc
fisubs
jae
aas
call
mov
mov
jb
or
repz
stos
movsb
sbb
inc
pop
push
mov
cmp
data16
out
add
sbb
mov
shlb
int3
popf
hlt
inc
xchg
incl
mov
or
xor
add
call
rcrb
in
push
pop
mov
xlat
hlt
pop
push
outsl
xchg
xchg
add
nop
add
cld
adc
out
movsl
imul
ljmp
inc
aad
in
aam
jle
stos
sub
sbbl
jge
daa
repz
jmp
or
xlat
mov
xchg
xor
pop
mov
inc
and
push
xchg
repz
popa
mov
stc
fildl
xchg
cmpsb
mov
loope
gs
jecxz
aaa
mov
lret
mov
jle
bound
lea
xchg
enter
xchg
aaa
rorb
adc
out
cmc
mov
mov
adc
sbb
dec
mov
insl
sub
jo
mov
mov
test
mov
outsb
arpl
out
mov
sbb
dec
lods
dec
jnp
push
ficoms
xchg
or
rolb
jno
push
arpl
pop
sahf
inc
push
call
sub
cli
cmpsl
inc
repnz
add
jmp
jge
sbb
jae
xor
jbe
repz
pop
lret
pop
push
mov
jb
xchg
lods
xlat
dec
enter
scas
jecxz
pop
mov
mov
inc
inc
outsl
jns
or
js
call
test
scas
cmc
or
cmpsl
mov
data16
pop
push
cmp
leave
jb
mov
pushf
add
imul
mov
in
pop
fadds
mov
pop
mov
aad
mov
adc
xor
aad
subb
xor
cmpsb
or
mov
jb
ret
mov
mov
add
jg
in
inc
jne
fildl
dec
jge
mov
ret
mov
int3
mov
insl
call
jecxz
dec
add
cltd
lahf
aas
xchg
inc
les
test
xor
push
pop
int
out
pop
cmc
fwait
iret
bsr
pushf
jo
pop
inc
xchg
daa
xchg
imul
inc
loop
push
loope
xchg
pusha
jge
aad
jg
leave
movups
stos
lods
aaa
insb
sbb
mov
sub
sub
cmp
movsb
popf
mov
insb
in
adc
rcl
fidivrs
xor
inc
pop
cs
push
push
in
add
cmp
test
cwtl
or
movsb
mov
push
mov
mov
insl
sbb
push
scas
jge
mov
mov
and
clc
iret
pop
fildl
into
pop
jno
sbb
insl
or
cmp
sub
or
rorb
mov
adc
sbb
push
jl
int
jb
out
mov
aad
imul
mov
repnz
bound
mov
sbb
jmp
mov
jnp
cmp
mov
hlt
adc
stc
sar
add
cs
out
or
call
stos
cs
data16
xor
int3
jl
push
pop
or
adc
hlt
mov
mov
sub
stos
push
rcrl
dec
mov
sbb
pop
divb
jle
fidivrs
ds
push
dec
ljmp
fmul
xor
mov
insl
test
dec
pop
arpl
mov
add
lock
cs
repnz
sub
inc
test
mov
rolb
std
pop
pop
addr16
inc
cld
push
xchg
cli
test
dec
and
pop
xchg
insb
es
adc
rolb
adc
pop
test
test
sbb
gs
pushf
loopne
add
fcmovu
clc
aas
adc
mov
sbb
xor
dec
jne
in
les
out
dec
pop
popf
outsb
push
add
and
cs
inc
shrb
testl
cmp
cli
mov
inc
int
rcrb
cmp
xor
in
or
xchg
mov
fsubl
mov
cmp
adc
sbb
leave
sbb
repnz
pop
icebp
xor
xor
out
gs
in
push
fcmovbe
ss
push
xor
leave
fs
ja
mov
xchg
call
cltd
cli
iret
push
jno
into
adc
es
fs
lds
sbb
adc
gs
xor
sti
mov
sub
ret
xchg
movsb
adc
aam
ret
mov
imul
push
mov
xorb
insb
leave
fmull
enter
icebp
xchg
xchg
mov
test
push
cmp
subl
mov
or
pushf
push
push
mov
stos
jge
scas
jns
mov
adc
rorl
and
scas
in
xor
scas
mov
cltd
xor
out
call
lock
cltd
xlat
aam
mov
std
sbb
jns
insl
lret
test
push
int
cltd
es
in
xchg
pop
mov
lods
lahf
jg
call
and
cmp
inc
sub
mov
pushf
inc
insl
out
hlt
mov
aam
lds
and
addl
mov
lock
add
inc
cmp
mov
xchg
fidivl
aas
leave
scas
xor
mulb
pop
sub
mov
stos
lds
and
addl
ret
fs
cltd
pusha
sbb
cmpsb
cmc
pop
hlt
xchg
sub
icebp
inc
fnclex
aad
mov
or
aas
test
gs
cmp
add
mov
aas
mov
xorl
mov
and
ret
loope
jecxz
sbb
in
testb
test
xor
and
je
inc
inc
pop
xor
out
mov
lock
mov
mov
mov
sub
adc
outsl
sbb
sahf
ret
xor
subb
mov
and
cmc
jle
andl
jne
addr16
dec
dec
pop
lds
addr16
cltd
lods
adc
mov
aad
cmp
data16
push
icebp
loop
bound
aam
push
aad
and
xor
daa
lods
pop
xchg
cmp
shll
inc
fs
icebp
sbb
out
sbb
mov
and
xorb
leave
int3
test
mov
jecxz
stos
lods
jmp
pushf
inc
xor
xor
mov
rolb
test
add
dec
cmp
xor
sbb
push
dec
or
outsb
mov
int3
in
repz
in
dec
cmp
push
out
mov
mov
sbbl
mov
add
dec
mov
push
add
adc
lret
movsb
pop
pusha
fwait
pop
mov
fimull
inc
loopne
enter
add
mov
fildll
jge
xor
jae
fs
xor
add
or
cld
inc
add
int
adc
mov
repz
xorb
mov
inc
es
push
adc
cmp
sarl
and
popf
fneni(8087
jnp
jle
nop
or
pusha
add
jmp
jne
dec
pop
pop
cmpsl
add
cmp
fisubl
in
int3
andb
fidivl
sub
mov
sub
cs
cmp
leave
cmp
js
push
mov
sub
cmpsb
mov
sahf
and
and
int
ja
rorb
and
scas
and
in
cmp
mov
cmpb
icebp
negb
lea
stos
dec
push
das
rcrb
enter
lcall
xchg
outsl
cmc
outsl
pusha
ljmp
enter
mov
inc
push
and
ret
sbb
jbe
jle
imul
ja
sbbl
mov
push
jne
and
pop
shufps
jmp
cld
mov
adc
insb
es
xchg
les
pop
xchg
fbld
cmp
sbb
insl
dec
mov
mov
adc
fwait
inc
enter
cmpsl
pop
cmp
sbb
hlt
inc
xor
adc
or
or
das
test
pusha
sbb
xchg
and
jns
mov
add
pop
xchg
push
mov
mov
adc
inc
jo
pop
or
fnsave
sub
add
cmp
rclb
popf
cmp
push
inc
addr16
jle
xchg
fnstsw
pop
fisttpl
or
in
filds
fistpll
mov
arpl
dec
mov
ficompl
int
addr16
mov
adc
xacquire
sub
mov
lds
sub
add
cmp
popa
lods
cld
xchg
xchg
out
dec
adcl
cwtl
pusha
pop
in
push
in
jl
adc
xor
fcompl
enter
sarl
je
mov
mov
mov
dec
aam
mov
data16
inc
arpl
or
xor
mov
stos
incl
cmpsl
mov
into
sub
vmwrite
inc
fadd
mov
and
or
mov
mov
mov
mov
mov
lcall
pop
test
sahf
mov
sbb
outsl
pop
jbe
mov
xor
mov
inc
push
mov
cmc
add
or
cltd
sub
inc
jl
cmp
test
push
mov
and
sbb
cli
dec
jecxz
mov
je
fsts
insb
cmpsb
and
repnz
sbb
pop
imul
xlat
mov
lahf
mov
mov
lcall
sti
lret
test
pop
fistpll
divl
inc
push
in
push
pop
pop
xor
orl
inc
mov
mov
xchg
cmp
inc
dec
mov
mov
xor
pop
pop
xchg
les
pop
jno
ds
popa
cmovl
push
addr16
out
inc
cld
fs
sbb
and
xor
negl
lock
daa
xor
dec
sahf
test
sarb
fsubrs
pop
and
fcomip
and
data16
rclb
inc
dec
mov
testb
mov
fs
xchg
cmp
xor
sahf
scas
inc
xor
jae
pop
inc
add
out
andl
fiadds
pusha
mov
mov
cmp
in
insl
je
or
sbb
js
cmpsb
jecxz
cmpl
xchg
cltd
fcmovnu
mov
movsl
or
mov
in
push
loop
add
ljmp
mov
mov
movsb
xchg
inc
je
mov
mov
mov
sub
adc
test
mov
in
sub
movl
fnstcw
aas
mov
hlt
sub
inc
jmp
mov
sti
pop
leave
push
or
test
and
push
hlt
into
xchg
mov
jne
xor
mov
fildl
cltd
in
aas
das
fbstp
out
adc
mov
push
jo
and
into
outsl
aaa
sub
xchg
push
je
jmp
jno
mov
pop
cmp
jle
std
aam
sarl
in
pop
push
sbb
pop
cmp
insl
push
xchg
out
and
imull
pop
add
leave
push
or
insl
push
loop
dec
add
and
scas
leave
aam
imul
push
enter
daa
test
add
adc
or
push
mov
es
sub
pop
clc
lock
inc
lahf
push
xchg
mov
loope
mov
xchg
mov
sub
pop
fsubrl
mov
cmp
out
mov
push
es
stc
sbb
scas
adc
xor
push
dec
push
mov
test
xchg
xchg
or
xchg
jg
jbe
sub
leave
xchg
pusha
fdivrs
cmpsb
inc
adc
xchg
dec
pushf
jns
icebp
leave
iret
je
cmp
aad
dec
add
les
std
mov
xchg
es
and
js
adc
and
test
sarb
fsubrs
pop
and
fcomip
and
data16
rclb
inc
dec
mov
testb
mov
sbb
xor
mov
fdiv
and
fst
je
xchg
adc
dec
out
stos
test
cmc
mov
fwait
es
jl
leave
ret
inc
push
xor
and
out
xlat
sub
stos
inc
jmp
leave
dec
dec
xchg
or
sbb
sbb
cwtl
xor
push
jl
xchg
daa
push
xor
xor
sbb
xchg
sbb
cmpsl
call
pushf
or
nop
imul
push
faddl
cli
xchg
sub
mov
out
out
cmpsb
jp
adc
mov
lahf
jge
inc
or
cmp
pop
adc
sbb
mov
cmp
mov
je
ret
jbe
pop
xchg
dec
mov
push
daa
scas
adc
fisubrs
mov
mov
mov
stos
std
es
aam
fcompl
data16
xchg
xor
and
imul
sub
xchg
inc
dec
and
aam
outsb
jb
pop
imul
cmp
or
add
xchg
sbb
movsb
outsb
mov
jp
add
enter
add
lock
mov
add
pop
fwait
enter
or
movsb
push
test
cmp
ret
jge
cwtl
aam
pop
aad
shl
dec
aam
add
aad
fdiv
mov
stos
std
push
pop
adc
jg
xor
rorb
and
test
sti
orl
je
mov
add
add
loopne
sub
xchg
adc
xchg
cltd
enter
jno
out
mov
and
jecxz
cmp
mov
lcall
pop
jle
and
imul
lahf
cmp
andb
jge
sbb
out
and
ret
adc
bound
add
out
inc
mov
jns
xor
cwtl
inc
leave
data16
mov
mov
adc
mov
rcr
sub
pushf
add
adc
pop
shlb
mov
mov
das
jecxz
nop
push
push
aad
lcall
xchg
and
lods
dec
sub
out
jno
jg
jnp
cmpsl
int
enter
dec
daa
inc
fwait
lcall
ficompl
outsl
push
fs
int3
bound
popa
sbb
add
pop
leave
fs
adc
call
and
pop
add
jo
pop
into
add
push
mov
sti
mov
mov
add
fs
pop
orl
xor
push
leave
stos
mov
and
fisubrs
je
imul
pop
sti
pop
and
mov
sbb
xor
clc
sub
enter
loop
cmc
nop
xchg
push
mulb
adc
sbb
repnz
cli
ds
push
cmpsl
rolb
mov
push
adc
or
cmp
cs
insb
xchg
cmc
adc
insl
xchg
mov
mov
jno
stos
lock
pop
jo
idiv
push
ret
stc
jmp
lret
out
ror
leave
dec
lds
loopne
push
mov
and
jns
aad
mov
cmp
sub
iret
mov
mov
jno
or
scas
mov
aaa
orl
scas
cmp
stos
or
and
mov
or
mov
movsl
dec
mov
xor
mov
cwtl
fildl
cmp
or
inc
mov
inc
mov
cmp
outsb
data16
mov
mov
fwait
mov
insb
mov
stc
mov
add
add
mov
mov
leave
jno
fcomip
int
int
fiaddl
testb
or
cmpsb
dec
mov
sbb
mov
test
sahf
stos
mov
adc
mov
lcall
aad
sbb
mov
loope
inc
mov
dec
xchg
gs
adc
jmp
ret
push
adc
fnstcw
sahf
das
jmp
add
dec
fnstcw
sub
mov
and
inc
lock
movsb
scas
add
fisttpl
das
enter
mov
adc
insb
jle
cmp
loop
in
mov
in
pop
dec
movsb
sarb
mov
fbstp
decb
or
jl
fistpl
add
pop
push
popf
fimuls
dec
call
imul
jno
push
mov
push
jle
mov
mov
test
dec
inc
mov
pop
mov
adc
roll
mov
iret
pop
ja
jmp
cs
mov
test
fsubr
inc
adc
hlt
sahf
adc
cmp
iret
loop
and
call
test
mov
cmc
and
orl
fstps
pop
jne
test
ret
fldt
pop
clc
movsb
mov
cmpl
xor
jmp
adc
ljmp
iret
fistpll
sbb
add
sub
std
cmp
xchg
jnp
adc
cli
adc
or
movsb
xor
shlb
cmpsb
mov
mov
in
inc
inc
xchg
xor
xchg
cmp
enter
das
add
or
pop
sub
mov
lock
imul
cmp
sbb
xlat
mov
stos
push
xor
cmp
cmc
cmp
pusha
and
or
call
rolb
out
xorb
mov
stos
icebp
mov
push
inc
sbb
inc
dec
notl
ret
cli
cmp
mov
aam
pop
cmpb
mov
je
fwait
or
out
movsl
lcall
ficompl
sarb
pop
sbb
adc
in
fcmovbe
mov
subb
ljmp
pop
push
xchg
rorl
pop
dec
jnp
xor
and
outsl
push
and
dec
inc
enter
out
testb
xor
xchg
stos
jmp
outsl
xchg
mov
mov
dec
scas
std
and
mov
cmpb
inc
fiadds
lahf
in
lcall
es
xor
jb
movl
xchg
stos
pop
and
hlt
in
jecxz
fcmovb
pop
and
call
jae
dec
lea
dec
jge
into
pop
inc
push
jge
xorb
xor
mov
out
in
in
cwtl
xchg
push
fs
addr16
xor
xor
jae
push
mov
popf
adc
xchg
aas
das
fbstp
out
adc
mov
push
jo
and
into
outsl
aaa
sub
xchg
push
je
jmp
jno
mov
pop
cmp
jle
std
aam
sarl
in
pop
push
sbb
pop
cmp
cli
pop
divl
lock
pop
add
leave
push
or
insl
push
loop
dec
add
and
scas
leave
aam
imul
push
enter
daa
test
fisubrs
mov
mov
mov
movsl
mov
and
sbb
cmp
js
or
es
incl
cltd
out
in
pop
and
test
or
xchg
dec
rclb
inc
push
add
cmp
jecxz
js
inc
data16
shufps
cld
or
xor
loope
cmpsl
sbb
adc
rol
xlat
sub
repnz
jb
daa
ljmp
dec
cs
xor
lds
mov
mov
cwtl
adc
imulb
mov
push
shlb
mov
pop
addr16
or
cmp
test
data16
add
mov
call
insb
jne
mov
push
sub
flds
sbb
xor
in
inc
lods
jb
pop
jge
push
icebp
mov
lods
add
idivb
sub
fisttpll
movsb
cmp
lret
and
je
push
pop
neg
loop
loopne
pop
push
pop
lret
mov
mov
icebp
out
out
je
sbb
lods
ds
clc
loope
iret
jb
int
xchg
and
rcr
cmpl
push
sahf
loopne
xor
jl
insl
mov
stc
add
mov
push
push
xor
ret
jns
push
dec
test
cmp
pop
repz
repz
ffree
dec
add
push
sbb
push
pusha
movsl
mov
jmp
inc
or
arpl
push
cmpsb
xchg
fcoms
es
dec
in
fucomi
mov
shl
mov
push
jne
mov
adcb
cltd
add
inc
push
push
mov
mulps
pop
into
and
cmp
inc
mov
xlat
mov
aaa
push
xchg
mov
lret
insl
pop
cmc
clc
xchg
or
inc
jmp
and
jecxz
push
hlt
pushf
jmp
jb
fnstenv
sub
jg
xor
add
mov
lods
mov
imul
pusha
dec
shlb
rcll
sbb
stos
push
imul
xor
mov
je
rolb
test
in
sbb
mov
bound
pop
push
outsb
in
jno
fidivrs
mov
mov
pusha
and
and
in
leave
lods
or
push
cmp
or
icebp
mov
or
scas
into
sbb
or
jae
xor
cs
pop
pop
rolb
out
cmp
outsl
fists
rcrb
dec
ds
mov
sub
std
push
adc
add
pop
or
sbbb
add
or
pop
cmp
jns
xlat
ja
xor
lcall
mov
adc
dec
mov
mov
xchg
movsb
or
push
stc
lock
xchg
rep
mov
js
or
out
je
lods
rorb
out
jle
sarb
cmp
outsl
and
mov
insl
enter
push
out
imul
into
mov
and
jl
or
or
push
adc
jae
add
fisubrs
fisubrs
test
int
pusha
leave
or
jb
jns
fs
lds
iret
push
sub
cltd
mov
mov
dec
cmp
push
icebp
mov
arpl
cmpsl
fisttpl
das
stos
ret
cltd
inc
mov
cmpsb
jb
or
insl
jns
ret
pop
lret
int3
adc
cmp
cmp
xchg
outsl
pushl
out
push
mov
mov
push
jmp
cld
mov
cmp
or
xchg
xchg
mov
pop
xlat
ss
pusha
outsl
add
sbb
and
sbb
and
and
fs
call
test
mov
cmc
and
orl
fstps
fisubrs
hlt
cwtl
xchg
loop
xchg
jmp
popa
pushf
mov
fcoms
enter
pop
int
insl
and
pop
xchg
jg
cmp
mov
pop
add
shl
in
xor
sub
sub
or
push
aad
inc
cli
inc
mov
cwtl
outsl
js
jmp
jbe
repz
test
dec
inc
mov
pop
mov
adc
rcrl
push
pushf
mov
xchg
test
mov
addr16
push
ficoms
cmp
hlt
test
mov
nop
ja
jb
xchg
cltd
mov
cs
push
out
pop
addb
enter
repnz
jg
xchg
add
xor
xchg
dec
add
mov
rolb
out
and
cmc
inc
xor
int
jae
fdivrl
or
sub
mov
stos
mov
scas
pop
xor
push
stc
xor
xlat
mov
xchg
cmp
xor
dec
insl
fmuls
cwtl
dec
mov
or
xor
fmulp
in
and
lock
mov
push
sub
or
pop
divb
adc
dec
subl
dec
mov
dec
and
sbbl
ja
sbb
shlb
in
in
nop
and
fidivs
pushf
inc
inc
popa
jbe
rcrb
ss
mov
test
cmc
cmp
push
jl
or
shl
int
mov
sub
mov
test
mov
xchg
pop
lcall
ret
ret
lods
inc
jb
or
pop
inc
adc
mov
inc
aam
aam
loope
call
push
testl
movsb
outsl
sbb
test
scas
test
sahf
scas
cmp
pop
jl
xorb
stos
pop
ja
inc
pop
push
or
addr16
lcall
xchg
sbb
jnp
inc
test
xchg
adcl
mov
pop
stc
sub
xor
and
add
out
jb
out
add
cmpsb
or
loop
lock
hlt
daa
outsb
or
frstor
push
xchg
jnp
pop
call
test
mov
mov
aas
cs
test
add
call
cmp
shrl
cmpsl
lea
mov
push
pop
inc
xor
xchg
test
int
sti
sub
stos
jl
xchg
dec
adc
xor
negl
inc
subb
xor
or
fs
adc
jnp
dec
sbb
into
loope
mov
jne
mov
insl
mov
testb
sub
and
test
lret
sarl
mov
mov
jbe
shll
mov
pop
pop
leave
andl
adc
push
rclb
pusha
fs
movsb
jno
adc
out
mov
roll
lret
out
popa
out
repnz
lret
sub
sbb
mull
push
aas
inc
scas
xlat
dec
pusha
xlat
xor
jnp
mov
sub
dec
sarl
popf
in
cmp
push
shl
cmp
mov
inc
mov
inc
push
in
add
sti
iret
test
fldenv
int3
mov
adc
inc
push
mov
popf
dec
and
sbb
xor
lds
mov
out
cmpsb
dec
sub
pop
pop
lcall
std
clc
mov
das
mov
int3
pop
into
add
cmp
cltd
leave
cmp
addl
fdivp
adc
dec
maskmovq
notl
std
cmpsl
repnz
cmp
or
xchg
enter
rorb
test
lods
test
shll
out
mov
jl
in
rsqrtps
pop
clc
fcomps
dec
mov
outsb
shlb
xor
les
pusha
xchg
mov
xor
dec
sub
xchg
fisubl
xor
add
dec
or
inc
push
lea
dec
scas
mov
cmp
out
stc
push
pop
movsb
cld
sbb
pusha
movsb
lods
push
or
cwtl
push
cmp
jp
ljmp
aad
int3
lock
ds
out
sub
jbe
xchg
cmp
imul
roll
sbb
mov
add
dec
push
ss
fwait
lock
mov
jno
jne
decb
adc
lahf
test
fdivrl
xlat
fsubl
cmpsl
ljmp
aaa
pop
mov
out
and
out
insl
stos
jmp
cmp
call
or
cmp
in
lock
notb
pushf
xchg
sub
adc
jb
push
and
mov
push
testl
in
insl
xor
ds
jae
sub
add
pop
mov
dec
cmpsl
xor
pop
cltd
pushf
cmpsl
sbbl
add
in
ret
mov
loope
int3
and
jle
fucomi
and
sbb
mov
add
icebp
cmp
pop
cmp
cmp
std
mov
push
and
je
and
mov
dec
adcl
mov
cmpsb
test
jno
test
dec
les
pop
xor
xchg
mov
xchg
and
sar
inc
or
in
xchg
and
test
ja
loop
out
pop
push
mov
fsubp
fisubrl
rcrb
mov
xchg
push
jge
xor
xchg
call
ffree
pop
pop
fmul
and
ret
dec
shr
notb
lock
sti
or
fistpl
mov
pop
leave
es
cmp
cmpsb
lret
ja
cmc
fstpt
std
add
push
mov
ss
xor
lods
in
dec
loope
inc
lret
sbb
cmp
pop
mov
dec
push
xor
loop
sahf
dec
movsb
dec
sbb
push
jns
iret
shlb
xchg
lret
mov
fisttpll
or
in
adc
xlat
das
mov
jp
dec
xor
jns
push
subb
push
test
xchg
xor
in
xchg
aam
xrelease
push
int
mov
popa
xchg
push
shrb
push
mov
jle
dec
adc
or
out
frstor
subb
adc
cltd
dec
mov
into
jo
mov
jbe
mov
imul
xchg
icebp
aas
mov
aas
out
and
int
call
je
inc
jo
xchg
pop
repnz
lock
mov
inc
mov
push
les
popa
adc
sbb
sti
xchg
mov
lods
roll
mov
aaa
mov
loope
jp
inc
xchg
movsb
and
dec
or
insb
sahf
and
adc
dec
test
cltd
sub
push
jmp
das
or
pop
add
mov
cmp
mov
adc
movsl
jo
xlat
into
lret
fistps
xchg
adc
shl
xchg
inc
pop
lock
pop
nop
out
sub
test
dec
jns
lock
jbe
jb
mov
stos
aas
fsubp
rcr
xchg
sti
inc
adc
push
dec
add
mov
aam
test
dec
lods
add
pop
pop
rorl
jmp
loopne
adc
adc
andb
mov
cwtl
sti
push
add
mov
mov
movsb
xor
daa
xchg
push
mov
push
fsubs
ficompl
inc
rcrb
inc
inc
or
jns
cltd
movb
adc
jecxz
jns
and
pop
es
mov
pop
sub
xor
or
jl
mov
in
xor
ret
xchg
sub
mov
out
xchg
mov
mov
sbb
clc
dec
push
sub
lret
xchg
mov
add
sti
lods
jae
sbb
push
fcompl
mov
cmc
icebp
cld
jg
int
orb
and
sbb
mov
xchg
cmp
nop
lods
xchg
addr16
data16
pop
push
add
lods
js
bnd
stos
sub
mov
lcall
mov
fldenv
out
pop
loop
xor
inc
das
shll
jnp
rcrb
add
mov
adc
cmpsl
jp
pop
cld
popa
test
lea
dec
lock
adc
mov
push
xchg
test
cmp
sub
rorl
mov
add
data16
jmp
mov
lahf
jecxz
imul
lods
dec
adcl
sar
pop
cmpl
xor
pop
rol
cwtl
shrb
fwait
xchg
popf
sbb
adc
add
insb
scas
aam
movsl
ret
mov
push
mov
push
pop
mov
jp
popa
movsb
ja
pop
mov
xor
mov
pop
push
sahf
cmpsb
fstps
inc
call
cmp
cltd
sbb
in
lret
sub
sbb
int
jns
inc
sub
xlat
dec
jl
cmp
jmp
mov
das
lea
cld
jmp
cmp
and
add
lret
es
inc
mov
push
inc
mov
dec
adc
orl
xchg
jl
mov
mov
xchg
daa
add
xchg
iret
stos
fwait
pop
xor
stc
or
sub
cltd
xchg
sbb
sahf
and
int3
out
fidivrl
pushf
das
call
xor
push
or
fistpll
loope
lods
mov
movsl
pop
test
sarl
shrl
fimull
shrb
xchg
mov
mov
arpl
les
mov
stc
test
cs
xchg
mov
sbb
in
cmp
and
and
aaa
repz
mov
or
das
std
pop
cmp
push
xchg
nop
xchg
das
add
add
idivl
shll
or
lret
iret
mov
data16
mov
fcompl
add
rolb
dec
cli
inc
xchg
mov
mov
loop
or
add
inc
popa
and
xor
dec
xchg
sub
and
sbb
imul
xor
fldenv
sub
cmc
jbe
fwait
int3
xchg
call
mov
mov
dec
inc
mov
jb
fwait
enter
mov
and
or
in
lcall
xor
loopne
cld
dec
pop
pop
pop
imul
pop
mov
aas
cvtps2pi
into
xchg
out
outsl
std
insb
outsl
gs
iret
adc
cs
xchg
loope
or
xor
pop
mov
dec
test
fwait
xor
cmpsl
jns
xor
inc
inc
mov
flds
faddp
sar
mov
sbb
sub
add
ljmp
std
sarl
inc
mov
xchg
jmp
or
stc
lods
sbb
pop
lcall
cltd
lock
cltd
bound
xor
xchg
mov
cmp
xor
das
iret
bound
fnsave
les
push
push
xor
dec
xor
inc
push
out
loopne
xor
sbb
popf
xor
xor
insl
insb
roll
cwtl
pop
push
lcall
mov
outsb
cwtl
lahf
xor
cld
inc
aam
jns
sub
aas
jp
fmulp
mov
push
stos
push
lds
ret
xchg
mov
dec
iret
mov
xor
lret
repz
daa
in
add
inc
cmpsl
sbb
xchg
notb
adc
pop
pop
cmp
inc
ret
mov
mov
push
popa
out
test
int3
les
xlat
jb
inc
lret
in
xor
sarb
pop
jbe
push
mov
push
lea
mov
xor
out
pop
mov
lods
bound
add
popf
inc
sub
dec
pop
cmp
repnz
sbb
scas
inc
std
cwtl
ja
insl
cmp
enter
sub
mov
pop
jno
dec
pop
rol
and
sbb
dec
mov
pop
xor
sbb
sub
jb
or
lock
pop
sti
pop
insb
idiv
jo
ljmp
faddl
adc
jmp
xchg
mov
lods
ds
xchg
mov
xor
mov
sahf
mov
dec
das
xor
mov
mov
repnz
outsl
xchg
daa
cmp
das
mov
out
loop
subb
and
popf
popf
xor
mov
shll
movsl
ljmp
jne
and
pusha
xchg
test
dec
lods
aaa
loopne
lret
mov
dec
mov
les
scas
push
sahf
sub
push
mov
decb
mov
dec
enter
cmpsb
jle
cmp
hlt
xlat
pop
cmp
mov
pop
rol
cwtl
shrb
fwait
xchg
popf
sbb
adc
add
insb
scas
aam
movsl
ret
mov
push
mov
ficoms
lret
popf
test
les
daa
mov
adc
add
shr
lods
lahf
push
shlb
outsl
fistl
add
aaa
bnd
fwait
dec
mov
xchg
jle
push
or
hlt
mov
inc
sbb
mov
cld
or
aas
notb
sbb
shl
in
pushf
pop
inc
jno
lods
push
nop
lcall
mov
lcall
cmp
lret
inc
dec
mov
adc
iret
and
arpl
sar
xor
or
or
xchg
insl
cld
icebp
dec
cmc
test
and
cli
push
jns
pop
push
fs
js
lahf
xor
mov
xchg
popa
xchg
icebp
out
pop
sbb
xor
sub
and
jne
fildll
outsb
or
repz
sub
imul
adc
adc
xor
loopne
adc
std
ja
and
dec
ret
add
data16
mov
fwait
mov
daa
movsl
mov
add
lods
ss
xor
frstor
sbb
xchg
mov
and
mov
call
lods
mov
and
push
mov
iret
lahf
mov
sub
mov
shlb
lods
loopne
mov
decb
xchg
std
dec
ja
mov
cltd
mov
dec
cmp
dec
inc
pusha
jno
push
outsl
mov
leave
push
in
mov
imul
aad
jle
ret
inc
sbbb
nop
test
xor
ljmp
sbb
clc
pop
fadd
sbb
sub
cmp
xlat
popf
stos
dec
faddp
inc
and
hlt
jno
jl
pop
mov
jb
dec
mov
mov
lea
icebp
inc
rcrl
ror
adc
mov
in
push
pop
inc
xor
test
dec
xchg
cmp
daa
out
jmp
and
inc
sbb
or
aad
aas
cmp
dec
inc
gs
stc
push
jae
xor
jge
cmpsb
cli
jg
cltd
or
test
int
xchg
sub
gs
jmp
xlat
cmp
pop
cli
mov
sbb
lcall
leave
cmpsl
push
push
mov
xor
test
bound
inc
popf
mov
scas
rcr
mov
sti
cmp
dec
inc
and
sub
jne
loopne
mov
jecxz
xchg
xchg
and
aas
xchg
imul
xor
mov
test
push
into
mov
ljmp
cs
adc
pop
call
scas
repz
rorb
mov
mov
xchg
and
ljmp
lods
sbb
pop
lcall
cltd
lock
pop
mov
push
or
inc
jecxz
dec
lea
sbb
inc
mov
cs
push
sub
loope
aam
add
jae
adc
dec
js
inc
mov
dec
push
fwait
popf
jbe
push
repz
xchg
fcomps
sub
pop
jge
mov
sub
push
pop
or
cmp
pop
cmpsb
dec
imul
data16
xchg
pushf
lea
loopne
cwtl
stos
movsb
shll
fildl
fstpl
ljmp
into
das
inc
out
cmp
xchg
rcr
mov
inc
jbe
fbstp
bound
mov
pop
cmp
cmpsl
or
xorl
mov
sbb
xor
dec
dec
mov
xchg
shl
jp
cbtw
dec
jne
xor
or
jp
push
and
xor
fimuls
push
mov
sbb
movsb
xor
xchg
sub
nop
jbe
adc
push
mov
or
fmuls
fistps
or
mov
test
xchg
xchg
ret
stos
sbb
push
lock
add
xchg
lahf
in
sbb
mov
lock
jle
cmp
xchg
sbb
push
push
data16
or
and
fdivl
pop
push
mov
decl
jno
jmp
xor
and
fiaddl
data16
pop
and
push
aad
sahf
inc
testb
mov
or
ds
ljmp
cwtl
adc
aam
sarl
sub
shl
xor
fstps
out
add
xchg
stos
push
pop
adc
pop
ja
mov
mov
push
iret
icebp
cmp
add
cmp
inc
lea
lahf
mov
rcrb
aaa
in
arpl
inc
inc
pop
dec
shlb
jl
insl
sub
lret
cmp
loopne
popa
xchg
and
mov
in
xor
les
pop
cld
jg
inc
sub
mov
push
xchg
pop
sub
adc
into
fcom
add
mov
dec
pop
dec
and
int
xchg
and
outsb
in
push
jb
in
xor
lret
pop
cld
aaa
jge
cmp
ja
cmp
pop
stos
fcomp
out
push
adc
xchg
test
add
negb
mov
js
mov
popf
imul
cs
mov
and
fistps
jnp
les
xchg
jne
push
fwait
mov
pop
xchg
cmpsl
jo
cli
orb
xchg
rcrb
popf
fistl
gs
loop
lds
daa
dec
mov
ljmp
fldl
test
mov
insl
cwtl
cwtl
pop
mov
fxch
movsb
mov
stos
dec
and
cld
add
mov
sahf
inc
jno
setp
rcrl
adc
xlat
or
in
or
pop
xlat
or
xchg
xor
or
cs
daa
ss
xor
data16
out
mov
or
js
pusha
cli
fimuls
testl
and
pop
inc
xchg
ja
shlb
shl
jl
xor
fsts
fidivs
xor
cmp
cmc
lods
rcr
dec
jns
jo
test
adc
or
xchg
or
les
mov
stos
inc
sahf
adc
dec
xchg
mov
push
in
xor
les
pop
cld
jg
inc
sub
mov
push
xchg
pop
repz
adc
jecxz
outsl
cmpb
ds
mov
and
int
xchg
and
outsb
in
push
jb
in
xor
lret
pop
cld
aaa
jge
cmp
ja
cmp
pop
stos
fcomp
out
push
adc
xchg
test
add
fimull
mov
sub
ja
lods
adc
iret
je
xchg
pop
mov
dec
out
out
mov
push
jb
scas
pop
jle
addr16
inc
ret
mov
jnp
movsl
push
or
sbb
aas
mov
js
mov
xchg
ret
add
cmc
xlat
clc
pushf
fdivrs
xchg
bnd
std
sub
cli
ljmp
rclb
icebp
add
inc
mov
imul
movsl
fcom
lock
sahf
add
imul
insl
and
adc
pop
and
fdivrp
mov
add
sbb
js
and
insw
fisttps
sbb
mov
xorb
xor
scas
mov
push
shlb
rol
xchg
jo
lret
mov
push
test
mov
push
into
test
clc
int3
lcall
insb
add
sahf
int
mov
out
sarb
scas
movsl
dec
jb
xchg
pop
push
loop
jg
dec
inc
gs
ja
dec
and
psubb
notl
sti
shufps
shrb
ljmp
mov
pop
pop
dec
xchg
imul
mov
mov
jo
lret
adc
push
dec
std
mov
outsb
dec
icebp
enter
aaa
loop
sbb
sub
pop
xchg
lret
pop
jae
leave
xlat
pusha
cltd
push
xlat
inc
fdivl
or
xchg
decb
ljmp
mov
popa
push
lods
jb
cmp
mov
fisubs
call
test
shlb
xor
and
sub
out
cmp
and
or
test
in
gs
shll
and
push
add
scas
mov
mov
xor
dec
sti
cmp
and
push
sub
pop
cld
mov
stc
out
ret
rcll
push
lea
and
ja
sub
and
out
decb
sub
loop
xor
inc
mov
out
mov
adcb
es
imul
or
sarl
inc
mov
xor
daa
pop
movsb
loop
or
xor
sbb
xlat
push
xchg
add
sahf
loopne
mov
into
pop
xor
das
or
sbb
les
pop
inc
test
or
iret
add
enter
push
pushl
enter
jns
pop
fsub
push
dec
mov
leave
ret
aaa
push
fildl
or
mov
dec
xor
mov
inc
lahf
lahf
and
adc
sti
pop
or
push
testb
inc
inc
jbe
aas
xchg
mov
dec
cmpb
push
fldt
sahf
aaa
mov
pop
pop
push
or
insb
stos
test
sbb
xchg
das
xrelease
and
out
lock
pusha
es
shll
mov
jge
jecxz
inc
loop
ret
pop
sbb
dec
andl
jge
je
push
ds
in
sbb
movsl
aaa
sbb
sub
cmp
mov
pop
jle
push
test
sarb
sahf
call
add
mov
call
cs
cmp
sbb
cmp
cmp
mov
mov
add
pop
jge
inc
adc
icebp
cmp
lret
daa
dec
jo
mov
xor
push
pushf
shufps
shr
mov
jns
cld
push
sub
xchg
inc
cmp
xor
loopne
cwtl
pop
test
lcall
mov
jg
sbb
mov
pop
iret
mov
pop
sub
scas
es
or
mov
and
and
adc
pop
mov
inc
dec
mov
dec
or
xor
sub
adc
cmp
icebp
das
shlb
les
pop
mov
mov
cmpsb
sub
call
or
out
data16
lret
xor
mov
enter
push
cmpsb
and
pop
dec
pop
cltd
pusha
orl
push
pop
cmp
jb
in
add
add
fidivl
daa
into
je
outsl
xor
xchg
cltd
roll
sub
xlat
mov
scas
in
add
andb
push
cmp
jb
mov
lahf
rorb
xchg
add
cmp
les
mov
lret
ret
cwtl
jle
out
adc
add
xchg
mov
xor
mov
loop
insw
mov
scas
clc
ret
push
cmp
call
jne
dec
inc
adc
lahf
xor
popa
sbb
divl
lahf
jns
sub
enter
and
int3
movsl
lcall
mov
outsb
popa
mov
mov
dec
aaa
xchg
insl
jmp
out
dec
push
adc
negl
rcr
fiadds
and
fs
sbb
push
and
cmp
mov
lods
mov
out
push
sbb
inc
iret
xor
sbb
imull
scas
or
lock
std
mov
or
mov
stc
icebp
insl
popf
pop
mov
sbb
mov
adc
pop
mov
xchg
push
jb
jbe
mov
pop
es
xchg
pushf
popl
sub
add
repz
sahf
add
push
int
add
mov
adc
std
adc
test
or
lods
sub
mov
movsl
icebp
leave
and
aaa
inc
xor
lods
xchg
icebp
mov
out
mov
out
out
stos
adc
fcompl
mov
cmp
int
popf
int3
rcll
test
scas
push
mov
loopne
arpl
imul
pop
sub
jmp
adc
repz
xchg
sub
jmp
jmp
js
pop
stos
jl
aad
test
add
insl
mov
pop
inc
xchg
bound
add
xor
popa
sbbl
mov
fmul
lds
ss
and
es
cs
in
sub
dec
outsl
stc
add
xor
es
sbb
pop
sbb
leavew
sub
das
xor
shll
mov
jp
lret
sahf
push
ja
jns
scas
xor
mov
movsb
inc
add
in
and
push
adc
push
sub
push
cs
inc
cmp
jg
jp
pop
jg
push
je
sbb
xchg
push
ret
inc
sbb
int3
mov
xchg
fildl
sbb
rorb
sub
rcrb
je
adc
movsl
push
sbb
mov
fwait
cli
lods
daa
inc
mov
lea
nop
push
xchg
mov
mov
call
mov
inc
add
out
ror
jecxz
cmp
add
rorl
test
adc
sbb
and
outsl
cmc
es
shr
cmc
sarb
faddl
jns
stos
jecxz
mov
mov
dec
xchg
pop
lods
loop
jbe
push
std
lret
sbb
aaa
aaa
mov
add
ret
sti
push
scas
mov
xchg
or
lods
mov
adc
addr16
gs
rol
mov
add
pop
and
inc
sub
aad
and
jae
les
icebp
lcall
mov
or
dec
pop
scas
push
sub
cli
lds
loopne
fld
xchg
pop
clc
xchg
xchg
ss
sub
add
decl
sub
roll
notl
scas
mov
mov
js
cmp
movsl
push
popa
xlat
dec
push
dec
loop
mov
orl
movsb
jno
bound
js
clc
data16
aas
idiv
xor
jp
scas
int
fs
jmp
out
push
cmpsb
pop
mov
jp
sub
cmp
loopne
mov
sar
js
fcomps
hlt
ret
psrld
fmuls
and
shl
sub
not
insb
dec
jecxz
gs
das
sub
mov
inc
mov
jmp
sbb
xchg
pusha
shl
icebp
fsts
mov
mov
mov
imul
jp
cmp
add
into
insl
sbb
adc
and
jg
push
test
xor
or
mov
jecxz
mov
hlt
mov
cmp
mov
bound
cwtl
jnp
outsl
adc
cmp
arpl
xchg
or
js
sub
dec
sti
inc
shll
in
adc
or
scas
xchg
jns
iret
ret
mov
loopne
push
fstpl
sarl
jne
push
orl
adc
jbe
xor
jl
sarb
sbb
rcll
stc
es
xor
sub
in
jne
addr16
add
mov
and
lahf
js
shlb
dec
push
mov
imul
out
adc
std
jp
fs
xor
xlat
cmpl
cmp
mov
adc
loope
out
cmpsb
xor
jns
and
es
popa
xor
es
jns
adc
xor
inc
inc
add
mov
stos
push
lds
mov
add
or
dec
mov
or
stc
rcrl
dec
jbe
inc
xchg
mov
push
sbb
rcl
cld
lahf
xor
arpl
fists
test
lods
imul
pushf
inc
divb
pop
mov
je
inc
mov
pop
push
stos
pop
mov
loope
adc
cmp
shrb
push
push
inc
inc
dec
sbb
or
andl
mov
aaa
repz
xlat
push
adc
or
mov
xchg
rclb
popa
dec
dec
xlat
push
mov
jle
and
adcb
xor
and
push
outsl
ds
fmull
test
push
out
insb
xor
pop
shlb
pop
inc
mov
sbb
mov
xor
aad
ja
ja
jae
repnz
push
cmp
cmpsb
psraw
dec
in
lea
add
adc
or
movsb
ljmp
ljmp
out
cmpsl
cltd
sahf
dec
movsb
rolb
mov
mov
jmp
stos
clc
div
xlat
xor
sbb
xchg
cmp
xor
and
pushf
sub
mov
jg
add
jae
ja
ja
sub
stos
mov
lret
std
mov
mov
adc
daa
fsubrl
je
fs
or
out
push
jmp
jne
inc
loop
sbb
call
dec
mov
adc
pop
notl
pop
lret
cwtl
push
mov
xor
aaa
sbb
cmpsb
scas
mov
and
icebp
insl
popf
pop
mov
sbb
mov
adc
jmp
cs
pop
out
cmp
xor
test
inc
pop
rcr
xchg
pop
cmp
std
nop
imull
lret
iret
add
jmp
lahf
notl
inc
ret
mov
add
cmpsl
add
xchg
jg
mov
push
ss
push
in
jns
inc
mov
popf
jl
jl
popa
gs
test
dec
xor
pop
sbb
out
mov
daa
cltd
inc
fs
mov
clc
push
jnp
in
ficoml
or
dec
mov
test
popa
push
pop
lds
cmp
insb
xchg
fists
out
push
ds
lcall
arpl
mov
cmp
push
das
movsb
lea
or
mov
push
sub
cmpsb
addr16
repnz
dec
mov
pop
mov
rolb
xor
test
mov
sub
repnz
jl
mov
ss
sbb
rclb
out
jle
push
and
idiv
and
andb
mov
bnd
call
in
cmc
imul
popa
xchg
xor
imul
daa
outsl
inc
pop
mov
add
push
repnz
imul
jnp
push
xchg
lods
pop
call
add
aas
and
mov
sub
shrb
and
js
mov
je
cs
repnz
cmp
sub
ret
fnstenv
jge
push
pop
movsb
mov
mov
mov
fsts
sub
add
dec
jg
sub
in
mov
lret
dec
or
cwtl
gs
sub
fsqrt
inc
jae
lret
and
outsl
pop
jecxz
cmp
sahf
jl
push
cwtl
in
or
ja
es
in
cmpsb
inc
push
inc
and
fstps
mov
xchg
xchg
aam
int
adc
and
stc
inc
dec
and
sub
push
adc
mov
cmp
pop
lret
push
iret
sti
push
es
enter
popa
out
cltd
sbb
insb
repz
aad
daa
inc
mov
int3
fwait
jecxz
clc
pop
sub
mov
shlb
inc
arpl
gs
sub
fistpll
cmp
outsl
insl
jb
out
arpl
bound
loop
loope
popf
clc
or
popf
cld
addr16
repnz
cld
dec
xor
mov
add
push
scas
in
mov
hlt
test
adc
push
hlt
lahf
sub
mov
adc
mov
imul
cmp
mov
cmpsb
push
pop
cmp
lret
mov
cli
push
push
sub
adc
or
jle
aam
mov
mov
pop
sub
and
cwtl
pop
push
daa
pop
mov
xor
jp
loopne
mov
dec
in
inc
push
inc
lods
jle
mov
dec
mov
mov
outsl
scas
fcmovbe
sub
sahf
inc
push
cmp
adc
outsl
mov
cmpsl
popa
pop
and
icebp
or
sbbb
push
test
out
mov
imul
outsb
xor
enter
repz
or
sub
jp
mov
sub
jp
adcb
sub
jnp
mov
stc
inc
mov
pop
test
test
fldt
and
std
sub
mov
out
pop
inc
pop
inc
push
xchg
mov
fisttpll
mov
out
aas
cs
cmp
testl
and
xchg
mov
insb
dec
cmp
push
fwait
push
andb
adc
jg
cmp
sahf
sbb
xchg
sti
mov
sub
scas
je
rorl
push
inc
mov
lds
sbb
pop
xor
or
call
sub
inc
iret
push
cmp
out
cwtl
mov
out
lret
stos
cmc
jae
test
dec
push
and
pop
orl
loopne
cmp
pushf
insb
push
jnp
push
xor
push
stos
xchg
cmp
xchg
outsb
bound
lods
sbb
fcmovnu
aam
clc
cmc
sub
xchg
les
xor
add
mov
jmp
and
sub
cmp
rcrl
cli
cmc
cmpb
sub
stos
mov
pop
mov
mov
inc
mov
fs
add
pop
fs
pusha
subb
scas
adc
xchg
inc
into
dec
lret
inc
stos
movl
cltd
sub
movsb
sbb
mov
xchg
mov
fadd
pop
mov
aam
adc
or
jp
pop
or
out
das
mov
jecxz
mov
outsl
adc
fwait
js
inc
inc
push
je
scas
repz
loop
imul
jbe
pop
cmc
ljmp
test
lods
cmp
sbb
pop
push
fldenv
xchg
std
scas
add
jo
sub
xor
xchg
lahf
loope
les
mov
adc
sub
subb
push
add
scas
push
daa
movsb
and
add
dec
push
dec
or
push
dec
imul
les
cmp
icebp
std
ljmp
xor
mov
ja
mov
pop
xor
ljmp
mov
mov
jge
dec
das
push
scas
add
add
cmp
dec
jmp
shlb
adc
xchg
mov
sub
or
ss
cs
popa
mov
pop
sub
arpl
cmp
shll
add
iret
rclb
cmpsl
stc
enter
mov
out
pop
lods
add
push
sub
push
fs
or
mov
sar
in
push
fcomp
xchg
jno
bound
arpl
add
lret
and
and
xor
xor
popl
jp
lahf
mov
dec
jg
xchg
icebp
xlat
xchg
xchg
jl
jmp
je
pop
cs
xor
dec
lds
xchg
cmp
jecxz
cmpsb
jmp
and
daa
inc
scas
in
adc
push
or
mov
stos
popf
add
test
aas
test
adc
inc
inc
mov
and
jmp
loope
cld
gs
and
dec
loop
imul
inc
mov
leave
dec
enter
imul
mov
or
adc
and
jl
jns
inc
rol
push
ss
mov
mov
pop
aaa
in
sub
decb
dec
push
fisttps
add
call
icebp
jge
mov
testl
jne
popa
push
es
sub
ljmp
or
push
mov
sahf
add
std
cli
cwtl
xlat
inc
adc
cs
pop
cmp
jecxz
cmp
fwait
or
out
add
xchg
inc
cmc
xchg
mov
fwait
pop
das
add
or
movsl
mov
sarl
mov
out
popa
cwtl
jbe
mov
ret
repnz
sbb
inc
mull
sub
fnstenv
xor
cmp
mov
jb
or
mov
aaa
icebp
sbb
jecxz
jne
hlt
aam
fisubrs
dec
arpl
xorb
dec
adc
inc
jns
sbb
cmc
mov
push
sbbb
dec
jae
fs
loopne
rol
jb
jl,pt
lahf
push
js
sub
sub
or
jo
inc
sub
jae
jae
movsl
sarb
gs
sbb
dec
xchg
rorb
shll
cmp
ftst
lea
int
jb
push
aas
sbb
out
push
push
hlt
scas
mov
mov
cmp
push
jb
lock
sarl
jle
fiaddl
lret
popa
xchg
inc
repnz
fnstenv
lea
pop
jle
in
mov
or
mov
jg
ljmp
out
adcl
mov
mov
sarb
dec
ficomps
mov
sbb
xor
jmp
pop
into
pop
cmpsb
in
cli
sbb
outsb
inc
fstpt
sub
xchg
push
xor
jecxz
or
loop
mov
dec
or
adc
or
scas
inc
outsl
add
hlt
dec
mov
imul
push
inc
jecxz
sti
jnp
shr
xor
jne
jne
or
mov
insb
int
jb
lea
orb
aaa
lock
push
mov
leave
jg
repnz
inc
stos
jg
icebp
jbe
inc
aam
pop
outsb
cmp
adc
and
jbe
push
mov
ja
sbb
lret
mov
jle
jo
je
xchg
pop
test
shll
lcall
xor
out
movsl
add
mov
lcall
setge
jno
cld
push
mov
xchg
add
xchg
jb
js
add
mov
jmp
test
divb
pop
mov
das
sbb
sub
test
xor
fidivrl
out
mov
adc
mov
aas
mov
mov
ljmp
cs
jmp
ret
test
leave
mul
sbb
push
cmp
stos
nopl
enter
sub
jmp
push
cmp
pop
je
xor
dec
mov
fs
sub
mov
push
cmpsb
dec
add
repnz
mov
add
mov
jae
fidivrs
inc
leave
into
stos
xchg
aam
ja
xchg
lea
cltd
cmc
mov
push
packssdw
xor
fs
sbb
inc
jmp
dec
repz
int3
push
push
int
dec
adc
int3
pop
jmp
xor
sbb
aad
dec
cmc
outsl
aam
mov
xchg
rcrb
or
mov
inc
dec
fcmovnbe
sbbl
repz
lcall
faddp
xchg
shl
jne
mov
iret
pop
inc
sbb
cli
sti
mov
movsl
in
fnstsw
push
call
sbb
lret
push
mov
jecxz
mov
andb
adc
pop
ficoml
mov
jne
xor
imul
fisubs
and
sbb
lret
sbb
outsl
aas
mov
pop
mov
and
push
jae
or
jne
mov
clc
jmp
scas
pop
lods
sbb
loope
stc
or
aam
cwtl
lods
sub
scas
sub
xchg
mov
xor
fwait
mov
mov
xor
inc
xchg
xchg
sub
add
push
mov
jo
xlat
and
shlb
roll
shlb
pop
add
sbb
cmp
sbb
inc
shrl
jo
je
test
outsl
xchg
int
adc
and
pop
pushf
xchg
adc
push
and
lahf
mov
fnstsw
inc
inc
jle
cltd
sti
scas
xor
cmc
ss
xchg
or
cmp
dec
sbbb
ret
mov
jb
add
inc
mov
xchg
std
jmp
daa
or
pop
cmc
aaa
jb
test
ja
fldt
ja
push
out
daa
in
loopne
jo
sahf
adc
xor
out
movb
cld
mov
orb
insl
mov
mov
movsb
xor
lcall
inc
mov
imul
sbb
and
lock
jnp
iret
shlb
xor
jp
xor
int3
lock
mov
jecxz
inc
insl
cltd
notb
jae
sub
lock
mov
pop
jmp
ret
mov
sbb
inc
inc
cmpsl
scas
or
or
push
outsb
sub
pop
push
loop
sar
imul
mov
push
xlat
test
xchg
xchg
mov
xchg
mulb
jno
int
cltd
jg
jnp
roll
aas
lahf
mov
jp
pop
clc
aas
jns
dec
sub
mov
mov
mov
leave
mov
test
lcall
dec
cli
mov
cld
mov
jns
push
mov
cmp
fidivrl
aaa
sub
mov
mov
in
repz
in
or
je
xchg
sbb
daa
insb
xor
dec
lds
sarb
xchg
shlb
pop
aaa
clc
ret
and
arpl
pop
pop
mov
mov
cmp
in
mov
cli
mov
je
stos
dec
insb
in
das
dec
insb
mov
sbb
push
jo
test
mov
sub
xlat
jnp
pop
nop
mov
sahf
popf
mov
fiaddl
bound
mov
lret
sbb
negb
roll
cs
or
stc
mov
test
movsb
cmp
int
cli
ss
sarb
cmp
fiadds
add
jb
or
rclb
xchg
gs
int
movsl
mov
test
outsb
sbb
dec
loope
push
cwtl
aad
dec
scas
scas
arpl
cmpsl
mov
sub
cmpsl
inc
cmc
mov
sarb
imul
push
cmp
stos
mov
fisubl
mov
dec
cmp
xor
cmp
cmpsb
icebp
xchg
outsl
and
stos
mov
adc
movsb
test
jb
outsl
fiadds
xlat
stos
jmp
or
xchg
popa
rcrb
xchg
dec
inc
shlb
adc
and
add
out
jae
mov
xchg
lcall
inc
lret
jb
xchg
test
out
xor
pop
adc
add
mulb
setb
or
push
push
dec
jecxz
fwait
xlat
mov
or
hlt
and
data16
push
imull
sub
outsl
enter
jns
test
sub
dec
cwtl
ds
js
shrd
out
jae
mov
das
pop
xchg
aam
cmpsl
inc
sarl
lret
cwtl
push
mov
test
scas
sarb
sahf
out
cmp
ss
jecxz
int
dec
mov
inc
jbe
jecxz
inc
dec
xchg
movsb
pop
dec
cmp
xchg
wbinvd
fildll
ss
jl
jnp
adc
test
loopne
and
sub
mov
lcall
sahf
inc
aas
sbb
ds
mov
iret
fstpt
pusha
push
ss
xor
repz
outsl
dec
sbb
cmc
fld
stc
xor
dec
stc
pusha
xor
pop
out
fmull
xchg
xorl
lds
cmpsl
insl
movsl
ds
test
mov
and
arpl
repnz
add
sarb
icebp
xor
push
sub
bound
bound
movsl
lret
out
cmp
pop
clc
scas
pop
into
or
mov
push
cmp
push
lods
gs
shlb
fmuls
addr16
cli
adc
dec
push
mov
jmp
aad
cmp
pop
push
dec
mov
adc
jmp
fidivs
fstpt
mov
aam
mov
sbb
out
lcall
test
lds
and
shl
cltd
mov
rcrl
sub
jp
sub
inc
push
or
inc
pusha
cmp
xchg
out
push
dec
fs
movsl
push
inc
ja
mov
xchg
enter
jle
jecxz
inc
lock
dec
and
outsb
adc
iret
add
stos
xor
testl
fstpt
pusha
push
ss
xor
repz
adc
cli
mov
cli
ljmp
pop
inc
ss
dec
leave
pop
mov
push
in
xchg
sbb
je
das
jb
insl
xchg
in
in
or
sarl
cmp
inc
shlb
adc
push
inc
mov
xchg
push
or
jecxz
testb
cmp
imul
sahf
jg
stos
mov
fs
mov
jp
push
faddl
sub
leave
mov
std
xchg
push
dec
roll
lods
xor
sahf
or
inc
or
jns
pop
cld
inc
add
stos
mov
dec
mov
stos
jl
dec
jle
or
dec
ret
lock
cs
jg
enter
pop
fdiv
sbb
ds
xchg
sbb
jae
das
sub
movsb
imul
pusha
mov
jle
and
dec
rcll
jne
mov
setno
push
mov
incb
mov
scas
cmc
xchg
inc
add
test
and
xor
adc
xor
int3
lock
mov
cld
repz
mov
sti
cmp
fstpl
bound
push
addr16
icebp
dec
jns
rcl
stos
mov
jae
mov
mov
or
mov
ljmp
mov
arpl
in
repz
or
jecxz
sbb
push
inc
cltd
in
je
mov
dec
cmp
sbb
out
imul
push
daa
rcrl
int3
inc
loopne
jl
or
mov
sbb
hlt
movsb
xor
in
push
pushf
faddl
das
sti
adc
movb
loopne
mov
mov
pop
mov
fs
int
sub
dec
dec
iret
lds
imul
rcrl
in
jecxz
sub
adcl
sbb
xor
test
cwtl
push
into
inc
push
ja
xchg
cmp
ret
sbb
dec
cs
pop
inc
bound
cmp
rcll
out
jg
sbb
imul
and
loop
in
mov
sti
pusha
int
push
xor
mov
adc
xchg
push
xor
cmp
int
ja
pop
dec
xchg
les
decl
add
add
pop
jecxz
and
hlt
popa
push
push
inc
lds
inc
pop
dec
sbb
ret
pavgw
aaa
or
addr16
sti
mov
add
shl
stc
cmpsl
test
xchg
push
sarl
xor
aas
sub
in
sub
jmp
pop
jne
jmp
xchg
and
pop
or
movsl
arpl
lods
sbb
push
das
jb
dec
dec
in
dec
xor
das
ss
push
cmp
push
test
out
pop
or
pusha
jmp
out
xlat
xor
fldenv
sub
cmp
faddp
mov
repz
dec
aas
pop
enter
xchg
or
mov
cmc
test
push
and
cs
dec
decb
aam
decb
jg
jmp
inc
ss
or
dec
jmp
and
popa
ja
add
sbb
fistps
jg
test
xor
adc
in
mov
mov
xchg
gs
sub
aam
cmp
cmp
divb
outsl
imul
loop
adc
mov
fidivl
orb
sti
adc
jbe
or
push
nop
lods
sbb
test
jmp
lret
imul
test
iret
jle
mov
inc
xchg
xor
mov
pop
mov
cwtl
das
mov
adc
add
test
dec
add
sub
dec
iret
je
jmp
xchg
add
rcrl
jbe
ljmp
xchg
mov
jl
jno
mov
je
hlt
shrb
dec
mov
cmc
xor
xchg
fisttps
add
test
repnz
xor
lahf
jnp
loopne
loop
sbb
pop
cmp
push
sub
mov
mov
lods
mov
pop
sub
sbb
xchg
jp
dec
inc
cld
mov
push
aad
into
adc
rorl
rcll
xchg
stc
mov
insl
inc
es
mov
sbb
inc
sbb
sub
cld
jle
movsl
mov
lret
sub
adc
push
push
sub
lods
enter
loopne
adc
push
push
cmpsb
jecxz
bound
cmpsb
cmp
aam
inc
fistpl
stos
mov
test
xchg
lret
xchg
xor
pop
mov
mov
outsl
mov
in
jl
xchg
test
iret
cmc
jle
sub
rolb
stc
int3
mov
sbb
mov
das
jb
push
loope
fisubrs
dec
xchg
push
push
test
sub
pop
mov
and
stc
xlat
pusha
clc
mov
pop
shll
insb
push
push
add
sub
bound
mov
data16
sub
mov
adc
add
xchg
bound
adc
fincstp
cmovbe
fistl
lods
std
and
jb
bound
add
mov
aad
pop
jecxz
mov
xchg
cs
movsb
xor
or
push
and
dec
jmp
clc
push
lods
popf
jbe
sbb
mov
ss
aaa
and
pop
lock
fimuls
testb
lock
fsubs
adc
rclb
shl
fdivrl
scas
inc
pop
xor
pop
pop
pushf
cmp
inc
test
jle
popa
add
sbb
push
shlb
push
das
lret
shlb
outsb
add
mov
fprem1
mov
std
movsb
inc
out
in
xchg
shll
cld
hlt
leave
pop
mov
push
loopne
scas
dec
and
clc
fsubp
pop
mov
jmp
pusha
cltd
fwait
fs
cmpsb
xor
push
bound
mov
pushf
mov
rolb
or
int
dec
mov
std
sbb
xlat
xor
fsubrs
mov
jb
xchg
mov
xchg
mov
jp
sarl
aam
sbb
jl
pop
sbb
push
fxch
add
and
imul
xchg
pop
push
loopne
test
mov
outsl
rcrb
das
cwtl
imul
adc
push
and
xchg
cmp
mov
xchg
cmpsb
dec
sub
push
loopne
addr16
add
lea
or
test
imul
incl
sub
cmp
or
dec
lcall
int
loop
mov
push
push
ret
add
push
arpl
hlt
es
inc
xchg
mov
push
std
and
ljmp
push
test
sbb
or
negl
fwait
add
inc
mov
cmpsl
cltd
dec
scas
ss
inc
cwtl
popa
adcb
sbbb
push
mov
push
and
in
mov
in
push
inc
punpckldq
push
xchg
mov
sub
add
mov
dec
mov
push
adcb
dec
mov
int3
rcrb
fdivrs
frstor
sahf
xchg
js
mov
loope
mov
adc
lods
lds
fcmove
mov
aad
mov
pushl
cmpsb
leave
push
pop
ss
fsts
push
mov
push
push
add
rolb
add
jp
push
sub
sahf
adc
add
mov
js
sti
stc
test
xchg
lcall
mov
lret
outsl
or
pop
int
clc
es
fsubs
in
sub
sbb
fs
loopne
push
jle
xchg
pop
sahf
in
jg
push
mov
dec
push
adc
mov
jbe
push
incl
cmp
rorl
es
insl
out
insb
aad
loope
push
rol
loop
xor
cmp
pop
cmpsb
pop
jmp
push
xchg
xchg
mov
pop
loope
jae
rorb
xlat
sbb
scas
and
addr16
ja
iret
jecxz
xchg
fbstp
or
ss
adc
or
cmpsb
addr16
sbb
repnz
mov
add
in
adcl
xor
pop
divb
arpl
dec
xor
add
insb
dec
push
in
pusha
fldcw
mov
in
test
mov
loopne
fwait
cmp
addr16
push
mov
push
push
xlat
xchg
call
or
pop
out
adc
test
popa
outsl
jnp
lret
xorl
repnz
enter
outsl
insb
cmp
dec
push
rcrl
sahf
fcmovnb
and
jno
sub
pop
mov
add
imul
movsb
push
fcomip
mov
stc
loope
sub
pop
jb
mov
pop
adc
cmp
in
pop
test
xchg
out
inc
jp
mov
jno
mov
in
and
test
push
xchg
repnz
sub
enter
add
dec
fisttpl
cmp
push
mov
pop
jg
shrd
es
addb
dec
mov
in
int
pop
mov
mov
dec
jmp
popf
push
scas
sbb
dec
mov
or
stos
push
cmp
aad
jns
adcl
into
es
xlat
es
iret
add
ljmp
loop
cs
push
push
lcall
adc
lds
shlb
mov
fisubl
cmpsl
dec
push
jnp
orb
mov
bound
push
add
and
push
or
in
dec
gs
popa
popa
xchg
aad
fst
or
inc
scas
add
mov
push
mov
push
rorl
xchg
movsb
aaa
fidivrs
lods
jno
xchg
xrelease
mov
fildl
sub
insl
inc
sti
push
aam
in
cwtl
shrl
shr
jb
push
jbe
cld
sbb
xchg
dec
jno
in
push
mov
fistpll
ds
jb
xor
push
pop
pushl
and
fcmovb
adc
cmc
inc
movsb
rolb
in
jbe
scas
stos
in
push
ds
mov
sbb
clc
icebp
push
arpl
js
negl
addr16
daa
ds
or
mov
out
jns
or
sbb
and
pop
mov
loopne
repnz
repz
sbb
testl
mov
das
adcl
cmp
add
mov
push
aas
outsl
cmp
adc
clc
sub
add
mov
jb
subb
jb
mov
pop
mov
mov
test
leave
sahf
out
cmpb
mov
lock
pop
cmp
ficomps
lock
adcl
cs
dec
pop
negb
inc
mov
jg
jmp
movsb
dec
mov
mov
adc
and
bound
lahf
add
movsl
je
inc
cs
mov
xor
icebp
fisttps
push
subb
pop
repz
pop
imulb
jnp
lret
into
or
call
rorb
mov
inc
int3
or
or
ja
mov
ss
or
and
hlt
cmc
enter
mov
push
sbb
sti
push
xor
jae
cmpsb
jb
lock
push
lret
divb
sbbl
les
push
aad
lds
mov
inc
jle
jg
loop
pusha
pop
push
inc
xor
filds
insb
gs
jne
lods
cmp
mov
cmp
loop
mov
sub
aaa
xor
xchg
roll
xchg
fcoms
lds
xor
mov
ja
mov
ja
orl
pop
mov
xor
imulb
stos
sbb
icebp
sub
nop
inc
fisubrl
into
shl
aaa
jbe
cmpsb
and
int3
call
cmp
insb
inc
addr16
mov
and
daa
add
cld
dec
mov
mov
pop
mov
xchg
mov
rorl
fnstcw
cmpsb
push
in
push
add
push
cmp
imul
sub
push
stos
out
insl
out
sbb
cs
push
fadds
and
enter
adc
or
cld
mov
lds
aam
frstor
pusha
test
aaa
pusha
jne
insb
aas
lcall
mov
lahf
xor
scas
xchg
xchg
je
push
in
aad
outsl
jge
lahf
pop
mov
and
jp
cmp
mov
fs
scas
xchg
imul
jo
push
cld
mov
and
sbb
out
out
cmp
push
cmp
or
cltd
ficoml
shll
jg
aas
push
cwtl
or
inc
mov
sbb
xchg
jae
or
jmp
fldcw
add
test
fidivrs
stos
adc
and
loop
pop
lds
ja
ljmp
and
push
or
aad
push
mov
mov
cltd
outsl
cltd
lcall
xor
pop
or
lcall
aaa
inc
xor
inc
dec
loope
and
subb
scas
sub
mov
push
xor
es
cltd
out
aas
test
subl
push
lods
jne
int3
pop
pop
jg
mov
icebp
clc
xchg
scas
and
mov
push
rorl
jne
ret
cmp
pop
jp
mov
sbb
add
lcall
jmp
addr16
cltd
scas
int3
mov
pop
mov
movsb
stc
lret
lock
sbbl
lahf
insl
xchg
das
les
pop
aad
push
jmp
movsb
or
cltd
dec
icebp
or
or
push
repnz
in
inc
or
sub
sub
jno
std
pop
push
fsubrl
stc
sar
fmulp
adc
popf
mov
adc
daa
loope
and
xchg
icebp
push
stos
lock
mov
pusha
jp
int
sti
test
arpl
fwait
sahf
in
mov
cmpsb
fwait
push
and
fidivl
sbb
cmpsl
orb
xchg
jbe
lds
and
ss
cltd
pop
push
or
cwtl
icebp
sbbb
fldl
fst
in
loop
xor
iret
add
push
popa
sti
inc
stc
mov
std
jecxz
add
pop
test
movb
sub
rcll
inc
sub
jae
cmpl
cmp
aaa
xor
mov
addr16
xor
xchg
jo
call
incb
inc
push
cltd
sub
pop
aam
adc
mov
inc
insl
hlt
add
mov
pushf
movsl
mov
cmp
gs
ds
neg
inc
fldcw
adc
sub
add
ljmp
scas
nop
in
jmp
jecxz
pop
in
mov
add
repnz
fildll
daa
pop
add
ds
cli
lds
adc
pop
fmull
or
or
out
xor
cwtl
inc
cmp
jg
and
mov
imul
dec
pop
jns
pop
out
adc
adc
jge
inc
shll
out
loope
lods
push
cmp
cmp
jg
inc
dec
jns
inc
inc
xor
stos
loop
les
adc
mov
push
movsb
rcl
fldl
pushf
pop
daa
jmp
mov
nop
cmc
movntps
dec
insb
sti
lret
inc
mov
imul
aad
adc
mov
fbld
push
stos
sti
cltd
pop
mov
je
dec
or
jp
stc
inc
jae
cmc
jb
jno
test
mov
arpl
adc
data16
xchg
sbb
cli
out
mov
dec
and
push
mov
lea
xor
lods
testl
mov
pop
dec
push
dec
or
std
mov
push
pop
inc
add
stos
pushf
fdivs
dec
inc
test
xchg
arpl
stos
dec
sub
jne
inc
mov
xchg
imul
adc
repz
stos
mov
pop
jmp
decl
mov
dec
ficomps
dec
cmp
inc
or
daa
mov
mov
jl
jo
xchg
loopne
and
pop
mov
jmp
ret
xchg
sbb
xor
subb
mov
dec
lock
sbb
sub
arpl
fdivrs
insb
cmpsl
incb
or
jle
arpl
imul
mov
cmp
addr16
mov
dec
jecxz
pop
cwtl
mov
jmp
mov
adc
inc
push
jmp
scas
xor
cmp
aad
add
jbe
and
xor
xchg
fcmovnbe
or
ret
flds
leave
xor
add
mov
sub
jp
push
mov
pop
mov
das
rolb
dec
jno
inc
mov
jno
fcoms
jne
xor
push
jle
cmpsl
pop
sbb
fwait
lods
mov
adc
sub
repnz
xchg
lcall
dec
mov
mov
out
scas
jmp
rclb
cmpsb
xchg
cmp
out
int3
inc
test
add
adc
test
outsl
pop
cmp
into
jmp
fs
sti
rcll
xchg
insl
cmp
dec
xor
test
gs
push
int
or
sub
mov
xorl
cmp
fsts
cltd
jmp
mov
jbe
std
xor
xchg
pop
leave
inc
call
mov
mov
fs
scas
xchg
imul
jo
push
cld
mov
mov
hlt
mov
sub
push
or
test
int
sahf
icebp
push
es
push
lcall
cmpsl
mov
xor
jae
arpl
scas
push
cltd
pop
lock
mov
add
mov
lcall
lock
fsts
lahf
xchg
mov
loopne
or
and
iret
repnz
mov
mov
jae
cltd
inc
stc
mov
jl
shlb
sahf
leave
popf
push
cmp
add
jns
stc
sarb
inc
in
or
stos
mov
adc
movsb
xchg
shlb
cmp
repz
sub
insb
mov
pop
sbb
lods
fsub
sbb
add
int3
outsb
adc
out
lea
adc
rcrl
sti
mov
push
fidivrs
in
loopne
mov
nop
movsl
xor
aam
shrb
mov
test
xor
push
imulb
xchg
push
out
mov
mov
pop
movb
aaa
xor
movsb
std
sbb
push
fwait
push
add
mov
stos
les
and
stos
or
rolb
cmc
push
adc
daa
in
fs
in
insl
sbb
das
out
push
cmp
pop
push
and
fdivrs
cmp
push
sbb
jecxz
cmp
loope
mov
aad
pop
and
mov
xchg
pop
dec
push
ljmp
mov
xor
dec
add
sar
xchg
bound
orl
cmpsl
fwait
sbb
push
add
dec
icebp
test
inc
imul
mov
or
push
ja
into
xor
inc
mov
jp
sub
dec
pushf
insb
pop
aas
test
fwait
mov
sbb
cmc
sbbb
mov
or
ds
xchg
out
jmp
sbb
inc
xor
ret
aaa
push
xor
imul
fs
mov
lock
and
add
lahf
push
fsubr
rcrl
mov
stos
xchg
mov
inc
sbb
int3
mov
adc
std
je
es
mov
mov
jg
pop
pop
scas
push
jo
jb
in
adc
lock
pop
mov
xchg
jg
mov
orb
aam
divb
mov
enter
int
push
inc
cltd
pop
scas
jle
mov
loop
jp
mov
lods
and
daa
cmpsb
sub
loop
or
mov
leave
dec
xchg
cmp
rcl
jmp
xor
sbb
ljmp
mov
repz
sub
aaa
add
cs
mov
stc
sbb
test
push
mov
aam
aam
icebp
sub
in
sub
aam
mov
shll
push
jo
es
in
and
cmp
jecxz
xchg
daa
mov
mov
aas
sbb
mov
mov
cmc
leave
test
shlb
test
add
ss
sahf
jg
jb
in
inc
sub
fxtract
cmpsl
xchg
push
arpl
iret
adc
mov
dec
ss
xor
sti
aad
out
adc
mov
xchg
sub
icebp
cmc
negb
testb
xchg
in
add
aam
ss
lds
pop
jo
jge
dec
adc
daa
stos
xchg
xorb
jle
les
pop
lea
jp
gs
xor
cwtl
sbb
lds
movsb
mov
sub
sub
movsb
or
cmpsb
shll
add
lret
pop
je
stc
mov
int3
rcrb
aas
add
and
ja
popf
lock
sub
test
mov
mov
nop
dec
lock
test
cmp
mov
adc
outsl
movsl
and
inc
mov
mov
lods
and
icebp
mov
push
pop
pop
lret
sub
fnstcw
push
mov
push
jae
imul
test
push
test
dec
sub
cmp
aaa
dec
push
stos
aam
sar
repz
mov
jge
add
lods
or
loop
out
orl
sub
dec
mov
pop
in
fcmovnbe
mov
add
pop
bound
lock
adc
ret
repz
add
adc
xor
popf
or
ja
add
test
lret
pop
xor
aaa
movl
outsl
xor
jg
and
stos
cmp
jecxz
aad
in
aas
jns
mov
notl
out
mov
jno
pushf
mov
sub
sub
cmp
and
xlat
leave
mov
cmc
xchg
cmp
xchg
int
gs
pusha
pop
outsb
mov
sub
xchg
loope
out
sub
sub
mov
inc
mov
inc
test
std
in
push
loop
pop
sub
jnp
cli
push
xchg
dec
mov
xchg
sahf
xchg
js
mov
loope
mov
pop
je
cmp
mov
stos
ljmp
inc
pusha
fwait
cwtl
cmpl
or
mov
pop
dec
xchg
inc
hlt
cs
push
and
decb
out
lret
adc
mov
mov
imul
inc
lahf
test
ret
mov
sarl
push
mov
imul
jp
pop
xor
xchg
sti
mov
mov
xor
lcall
cwtl
not
adc
mov
js
jb
rolb
gs
data16
or
das
call
testl
pop
and
imul
push
in
lods
inc
cli
xchg
mov
push
aad
ret
cmp
lods
cld
adc
sti
pop
js
into
shrb
outsl
out
mov
mov
mov
stos
int
jbe
cltd
xchg
cmp
ret
lcall
inc
jg
sbbb
cmpl
stos
ja
and
dec
or
ss
loope
jbe
dec
cmp
hlt
ja
filds
dec
shrl
ret
cs
aad
lret
add
sub
and
push
notl
inc
mov
add
testl
mov
xchg
out
jnp
add
insl
jb
inc
cmpsb
jnp
xor
in
cld
sub
jecxz
and
sbb
pop
and
aam
push
mov
rorl
stos
shr
aam
mov
adc
hlt
lods
and
std
ds
xchg
push
xchg
adc
cmp
or
sar
dec
test
mov
into
popa
mov
xchg
and
adc
out
adc
push
dec
fimuls
les
out
mov
repnz
xor
adc
pushf
or
fistl
sbb
adc
add
push
sbb
out
insb
xchg
hlt
out
testb
lds
ljmp
push
or
popa
ds
sarl
mov
jno
aam
add
das
arpl
shrl
cld
xlat
shlb
pop
pusha
int
cwtl
hlt
inc
cmpsb
sub
adc
pop
dec
shrb
scas
call
jno
mov
dec
imul
fs
pop
jnp
mov
repz
inc
cmp
sub
adc
sbb
out
sbb
pop
sbb
jmp
mov
add
mov
sub
mov
mov
shrb
dec
xchg
in
mov
push
fdivrp
fcoms
mov
int
shll
imul
scas
jmp
cmp
stc
add
int3
outsb
adc
out
lea
adc
rcrl
sti
mov
push
fidivrs
in
loopne
mov
nop
movsl
xor
aam
shrb
mov
test
xor
push
imulb
xchg
push
out
mov
mov
pop
movb
aaa
xor
movsb
std
sbb
push
fwait
push
add
mov
stos
les
and
stos
or
rolb
cmc
push
adc
daa
in
fdivrs
je
scas
hlt
sbb
out
lds
stos
int
jbe
cltd
xchg
cmp
ret
lcall
inc
jg
sbbb
cmpl
stos
ja
and
dec
or
ss
loope
jbe
dec
cmp
hlt
ja
filds
dec
shrl
ret
cs
aad
lret
add
sub
adc
mov
imul
test
inc
pop
sbb
ds
mov
rclb
loope
inc
dec
xchg
call
test
lods
pop
add
out
lret
mov
jnp
mov
int3
lcall
dec
lods
rcl
mov
push
mov
sub
mov
and
cmp
cmc
addb
cmpb
cmpsb
stc
sahf
adc
stos
mov
outsl
mov
mov
and
les
inc
or
js
xchg
out
mov
lret
fs
clc
ljmp
push
and
inc
xlat
orb
add
sbb
add
push
iret
xchg
mov
lret
mov
add
cmp
das
frstor
mov
jb
cmpsl
adc
cli
inc
or
mov
sub
and
push
xchg
in
add
mov
add
adc
sub
roll
xchg
das
xor
pop
lea
jne
push
mov
jae
pop
int3
js
jge
shll
loope
decl
test
inc
or
and
jno
xlat
js
in
out
or
add
aam
jbe
mov
jns
push
shrl
sti
mov
push
and
push
push
mov
lds
enter
add
outsb
imul
cmpsl
popa
int3
inc
pop
imul
push
int
sti
inc
cmp
movsb
xchg
add
in
outsb
dec
ret
mov
in
lds
inc
insl
cli
icebp
int
test
xchg
push
jge
mov
push
add
mov
mov
aam
ret
mov
sahf
int3
and
dec
or
cmpsl
jne
or
outsl
push
pushf
inc
mov
xor
insb
push
and
adc
mov
sub
call
out
stos
xor
push
ja
subl
dec
xchg
imul
add
pop
mov
cmp
push
dec
jge
xor
mov
stos
stos
repnz
xor
mov
or
mov
call
sub
int
lds
std
sbb
mov
sbb
or
mov
inc
out
aaa
gs
rorl
scas
mov
pop
in
pop
mov
or
test
push
xor
push
ds
sbb
sarl
aad
inc
lahf
push
fmull
pop
xchg
pusha
mov
or
hlt
ret
jge
and
imul
ret
movsl
jbe
mov
xchg
stos
rcr
int3
xchg
mov
pop
pop
loop
dec
or
sbb
cs
cmp
cmp
mov
or
xor
testb
cltd
xlat
or
jle
xor
mov
sub
mov
pop
xchg
pushf
pop
icebp
testl
push
push
js
mov
movb
das
or
int
sarl
dec
in
jmp
les
and
movsl
mov
mov
lret
negl
push
icebp
test
push
and
add
mov
nop
jns
dec
push
aad
gs
and
fistpl
dec
adc
sbb
xchg
inc
and
and
xor
mov
push
ja
mov
sbb
jge
inc
add
mov
clc
lods
mov
mov
cs
fimuls
mov
jne
cli
pop
mov
jl
fbstp
xor
cmp
mov
adc
jbe
aas
movsb
out
inc
jbe
push
sbb
subl
adc
shl
jno
mov
in
and
test
push
xchg
repnz
xor
mov
jmp
clc
mov
imul
and
into
movb
rcrl
loop
push
das
jmp
ret
push
adc
cmp
test
arpl
jno
mov
pop
repz
jae
into
xchg
ret
cwtl
inc
jp
dec
movsl
push
pushf
jae
cmc
ds
inc
cmc
enter
imul
inc
jmp
and
mov
sbb
iret
lds
add
call
cmp
enter
lods
push
push
scas
ret
scas
and
lret
and
xchg
fisttpl
test
cs
adc
outsb
cmpsb
outsb
adc
jne
sbb
gs
mov
adc
jmp
ds
leave
rcll
cmp
outsb
xchg
imul
out
lods
adc
sbb
int3
adc
lret
add
xlat
mov
scas
ljmp
push
sahf
js
pop
inc
movsl
cmp
cmpb
cli
js
call
push
xchg
sahf
shr
dec
lret
pop
fxch
add
push
out
jle
xcrypt-ofb
cmpsl
jmp
in
dec
iret
xchg
cli
mov
fadds
insl
adc
int
mov
jno
dec
jb
xor
pushf
jae
inc
test
cmp
mov
push
add
fdivl
jge
hlt
cmpsl
jge
xchg
xor
subb
popa
stos
pop
lods
sub
mov
dec
lret
imul
mov
adc
scas
movsl
adc
mov
sbb
mov
aad
cmc
pop
add
nop
lods
push
xorl
dec
pop
xor
and
mov
or
mov
popf
jg
or
mov
mov
in
or
add
xor
add
jmp
in
fmul
push
jle
add
adc
popl
inc
pusha
or
or
sub
xor
subl
fadds
pusha
push
fiadds
cld
and
mov
jb
sti
or
lcall
lcall
lcall
xor
jae
and
inc
mov
dec
pop
mov
in
daa
sub
jmp
mov
in
push
into
in
in
fnstcw
xchg
repz
xor
lcall
jp
push
scas
sbb
sbb
lcall
xor
mov
insb
sub
popa
cmpsl
jb
add
xor
or
in
mov
or
pop
ficoms
mov
add
enter
jo
clc
and
xor
mov
fiadds
aad
movsl
inc
rorb
push
imul
mov
fsubl
cmp
lods
mov
jo
loopne
clc
sub
dec
xor
inc
xor
mov
push
ja
subl
dec
xchg
imul
add
pop
mov
cmp
push
dec
jge
fs
adc
popa
outsb
out
mov
call
js
xchg
orl
faddl
sub
hlt
mov
dec
mov
xchg
inc
out
jge
xor
xor
pop
lret
aad
jecxz
xor
pop
jae
mov
dec
popa
adc
jae
push
mov
gs
repnz
pcmpeqb
push
rclb
mov
mov
jo
mov
and
inc
sahf
pop
push
repz
pop
clc
fnstsw
scas
adc
repnz
push
mov
outsb
or
cmpl
outsb
es
cmc
flds
mov
xor
in
repnz
in
sub
push
mov
xchg
mov
repz
mov
inc
mov
xor
and
cmp
mov
mov
or
aaa
adc
pushf
in
rcrl
iret
xor
sub
jo
stc
lea
insb
mov
inc
dec
push
jo
mov
push
aam
dec
subl
fcoml
pop
arpl
ret
addb
inc
addb
cmpsl
add
adc
repz
ret
leave
ret
jle
mov
lds
sbb
rolb
xchg
fmul
imul
push
push
movsb
dec
jp
dec
call
sub
out
mov
das
outsb
or
gs
push
jecxz
mov
das
js
dec
push
pushf
adc
bound
cmp
addr16
mov
push
mov
ds
cmp
lret
sbb
jae
or
cmp
jg
mov
mov
adc
dec
fs
inc
xor
test
sbb
imul
sbb
jge
push
and
mov
xor
jge
sbbl
dec
cmc
loop
outsb
cmc
hlt
pop
fs
inc
mov
fwait
iret
in
cmp
add
sub
add
pop
les
pop
sahf
or
cmp
sbb
sub
lods
aad
shlb
clc
inc
into
in
xchg
loopne
xor
sti
sbb
loope
mov
pop
mov
and
pop
loope
shrb
xor
aam
xchg
jnp
pop
in
shlb
push
loopne
xor
dec
or
in
lcall
sbb
cmp
cmp
stc
lahf
dec
testb
clc
add
inc
pop
adc
inc
and
jne
jne
insl
push
inc
ja
mov
or
fnstsw
das
aad
mov
push
rcrl
outsb
in
sbb
mov
sbb
cmp
jge
or
xchg
popa
mov
notl
sahf
in
in
add
mov
lret
nop
cwtl
mov
stos
rolb
jecxz
jmp
jmp
jmp
fimuls
jge
ljmp
fisubl
pop
push
int3
jmp
or
out
enter
push
cmp
push
and
repz
dec
arpl
jnp
cmp
and
xchg
sbb
imul
xchg
xchg
pop
movsb
rolb
lods
mov
scas
fs
call
jle
jecxz
popa
into
std
xor
sbb
mov
pusha
and
or
push
scas
mov
or
xchg
out
icebp
sahf
mov
sub
sub
inc
gs
jnp
add
mov
mov
test
insl
ret
xchg
push
sar
inc
dec
xor
stos
int3
jge
popa
jle
push
movntq
out
dec
mov
and
sub
jmp
add
fcmovb
stos
jae
mov
lret
orb
add
movsl
mov
jg
aam
into
fwait
xorl
test
cmp
jno
enter
inc
jp
and
les
pusha
cld
dec
add
and
and
sahf
xorb
xorb
adc
arpl
push
imul
in
pop
enter
test
insb
mov
mov
inc
jb
pop
shlb
jcxz
and
sarb
pop
add
push
lret
stc
add
stos
pusha
adc
jp
js
sbb
int
cmp
loop
ds
jno
into
mov
arpl
pop
pop
outsl
jbe
nop
cmp
icebp
mov
inc
xchg
add
test
sub
mov
sub
mov
cmp
pop
sub
add
mov
scas
ljmp
dec
fildll
fsubl
xor
call
test
mov
cld
mov
mov
sub
xchg
cli
decb
pushf
pop
in
movsl
sbb
jecxz
js
ljmp
cmpsb
dec
and
push
dec
mov
mov
cmp
pop
out
test
shl
push
sbb
scas
lods
ljmp
int3
inc
mov
arpl
mov
pop
mov
adcb
and
les
lds
adc
xor
mov
enter
mov
js
fwait
lods
in
sub
cli
dec
inc
or
pop
jno
scas
insl
pop
cmp
imul
fiadds
mov
and
loope
push
inc
pop
cmp
xchg
mov
xor
rolb
inc
mov
mov
sahf
popa
loopne
dec
loope
dec
push
sbb
arpl
sbb
jg
adc
in
into
jb
jb
push
sub
mov
in
lcall
cmpsb
or
mov
div
sub
pusha
mov
aam
push
scas
hlt
add
mov
xor
fbld
or
in
mov
jno
sahf
into
enter
addr16
mov
xchg
mov
or
fld
and
imul
xor
decl
xchg
mov
repnz
stc
mov
negb
lds
add
out
test
dec
outsw
sub
test
add
dec
xor
inc
pushf
jbe
xchg
inc
stos
icebp
iret
jns
lcall
mov
inc
pop
int3
sbb
push
jo
push
inc
dec
adc
dec
xchg
jne
cmp
xor
pop
fwait
push
mov
and
cmc
orb
sahf
fmul
dec
test
shlb
mov
inc
jnp
insl
data16
xchg
xor
dec
popa
dec
lahf
mov
sarb
mov
jge
scas
icebp
pushf
int
mov
sub
pop
ror
jns
adc
sbb
rcll
fcoml
adc
xor
xchg
ds
ljmp
sub
mov
aas
nop
fiadds
pop
xor
in
xor
fs
jge
cmpsl
lods
sub
add
sub
cmc
out
adc
mov
push
fmuls
mov
push
sub
leave
lea
out
add
roll
mov
add
adc
sbb
hlt
roll
push
es
cmpl
dec
mov
sub
sub
adc
in
cmpsb
mov
mov
test
pusha
dec
mov
jb
mov
mov
add
pop
dec
pop
inc
imul
or
shlb
xchg
cmpsl
jmp
adc
ret
or
add
sbb
aas
call
or
sahf
addb
fcmovnb
sysexit
ja
push
js
and
lods
insb
or
pop
mov
sub
mov
jns
inc
aas
stc
stos
push
mov
push
dec
pop
pop
cmp
dec
cmp
arpl
into
mov
lahf
and
out
xor
inc
xchg
frstor
pusha
sub
hlt
out
pop
or
or
xlat
pusha
jge
mov
inc
testb
dec
push
aas
sub
mov
pop
jp
jmp
int
in
out
push
mov
ja
add
aad
dec
or
and
jbe
jno
cmp
xor
and
shld
ja
int3
stos
cmp
gs
or
clc
xor
sub
out
push
test
xor
loopne
lret
aad
inc
jae
xorw
sub
sub
addl
adc
lret
xchg
popa
shrb
jmp
movsl
stc
subps
pop
lahf
jb
add
into
cmp
adc
and
xchg
fdivrl
lcall
aam
cmp
xchg
das
int3
mov
insb
adc
test
xchg
xor
es
cld
xchg
dec
sbb
scas
jle
loop
inc
ret
pop
cli
rcrl
sub
add
xor
mov
js
mov
xchg
pushf
incb
ret
pop
mov
push
test
mov
ror
push
nop
popa
notl
xor
mov
pop
fcoms
dec
movsl
gs
jg
xchg
leave
stc
addr16
mov
mov
scas
sahf
hlt
adc
lods
loop
xchg
mov
sbb
jp
int
or
fwait
mov
repnz
inc
push
inc
cmp
push
add
icebp
dec
pop
mov
and
shld
ja
int3
stos
cmp
gs
or
clc
xor
sub
out
push
test
xor
loopne
lret
aad
inc
jae
xorw
sub
xchg
mov
dec
test
es
jge
loopne
xor
pop
pop
inc
cmp
push
std
dec
mov
or
mov
pop
jne
pop
dec
in
mov
mov
xor
adc
repz
aaa
dec
mov
int3
sbb
insb
xchg
dec
add
sbb
dec
shl
pusha
fists
add
pop
nop
lahf
dec
xchg
add
xchg
mov
jae
pop
test
rorb
xchg
or
or
fdivl
jecxz
std
out
wrmsr
outsb
aad
ss
add
lcall
loop
or
stc
sbb
aam
nop
adc
push
fwait
xor
push
pusha
rorl
popf
ss
lods
and
pop
leave
inc
shr
or
out
cmpsb
adc
sub
push
sbb
cmp
repnz
sbb
std
leave
lret
sbb
cwtl
stos
sbb
leave
ret
icebp
xchg
out
push
mov
bound
into
je
dec
mov
dec
test
lock
mov
jl
sbb
insb
cmp
add
imul
arpl
clc
outsb
test
xchg
loopew
lea
dec
sub
mov
cmp
andl
les
pop
xchg
outsb
jnp
fsubs
mov
stos
js
push
add
mov
xor
inc
pop
pushf
loope
scas
push
xor
mov
jb
push
sub
add
jno
popf
mov
cmpsl
push
test
inc
shl
icebp
aam
ss
test
or
lret
and
test
inc
rorl
inc
pop
push
inc
adc
bnd
das
mov
gs
mov
movsb
pop
jg
pop
jno
test
jge
jo
shrl
pop
or
xor
cmc
int
and
jg
jae
mov
fs
sub
addr16
es
inc
sbb
into
and
inc
in
mov
adc
leave
adc
mov
xor
loope
lahf
add
sub
popf
leave
xchg
add
add
in
in
mov
mov
mov
push
das
cmpsb
div
hlt
icebp
pop
mov
push
and
dec
ficompl
fucomp
lret
pop
scas
in
out
xchg
jg
leave
aam
add
aad
cmp
outsl
shrl
sbb
lea
mov
dec
cs
in
out
scas
jno
ljmp
sbb
sub
or
ret
es
lcall
sahf
iret
sub
sbb
int3
scas
mov
push
pop
mov
adc
out
scas
or
mov
cwtl
dec
add
push
and
mov
fldcw
out
jbe
ret
or
push
fsubrl
xchg
fcmovb
imul
popa
in
sub
mov
mov
test
inc
jge
insl
sbb
pop
push
mov
add
sbb
aam
das
aaa
jbe
pop
sbb
add
incl
hlt
adc
in
mov
loop
popf
outsb
xlat
sub
jnp
fldenv
ret
lret
mov
or
sarb
jnp
xor
xchg
fistl
ljmp
outsl
cli
repnz
rorl
mov
sub
jge
pop
sbb
adc
push
stos
sahf
cltd
fwait
or
jno
or
dec
aaa
inc
mov
jmp
xlat
push
push
fidivl
aad
andl
xor
push
sbb
scas
andb
or
add
je
mov
adc
cmp
fistpll
fwait
xor
adc
sub
adc
push
push
in
xor
add
dec
or
inc
sub
imul
out
into
insl
movsb
mov
cmpsb
mov
inc
mov
dec
jns
es
xchg
and
jae
mov
inc
js
xchg
push
mov
inc
icebp
xor
xchg
clc
mov
cld
stos
and
or
sbb
cmp
mov
inc
jnp
mov
xchg
orb
addr16
xor
cmp
movsl
add
push
mov
mov
addr16
in
lods
test
push
out
in
xchg
push
jg
mov
push
out
xor
fisubrl
add
jb
lahf
loopne
divb
adc
and
xor
sub
jecxz
lret
stos
dec
fistpll
aad
clc
sti
aam
xchg
fimull
mov
les
fcoms
jp
or
lock
repnz
inc
or
out
out
push
ficoms
cli
push
cmp
std
pop
mov
mov
lock
lret
dec
inc
repnz
fstpt
mov
out
stos
aas
push
dec
ret
adc
aad
in
sbb
sub
aad
sbb
sbb
cmp
and
in
clc
lock
or
andb
dec
lret
push
xor
aam
add
out
mov
xor
loop
pop
pop
jae
dec
pop
in
dec
repnz
bound
in
cmp
movsl
mov
and
shll
sbb
pushf
cmp
out
mov
in
movsb
sbb
sub
cmp
fcoml
cmpb
cmpsl
test
push
xchg
xchg
and
or
cs
inc
divb
adc
and
stos
test
adc
aaa
pop
pop
lcall
cmpsb
clc
jp
daa
loope
repz
pop
xchg
lock
push
jl
mov
add
rclb
lahf
or
mov
sbb
pop
fwait
aaa
fisubrl
aaa
sbb
xchg
cmpsl
push
mov
mov
fldenv
push
int3
movsb
cmc
ds
pop
decb
pop
or
jae
and
sbb
in
adc
out
mov
sub
cmp
out
loop
jp
pop
icebp
cmp
inc
cmpsb
inc
popf
inc
or
mov
mov
jg
jno
fisttps
cld
cmpsb
sub
inc
xor
pop
push
add
jo
cmpsb
cmpl
inc
repnz
aam
daa
dec
popf
out
cmpsb
mov
push
inc
repz
sti
call
adc
and
insl
push
pop
gs
dec
push
mov
pushf
jecxz
sbb
lds
in
js
pop
sbb
rorb
xor
fistpl
cmp
push
inc
insl
xchg
in
shll
jmp
in
or
dec
mov
inc
sub
in
inc
lods
lods
xor
cmpsb
xchg
cmp
loope
std
mov
in
push
fildl
jnp
adc
sti
jb
jle
pushf
jmp
stc
mov
jge
mov
lret
aaa
lret
cmp
cld
pusha
lret
xor
lock
pop
scas
jle,pn
cmp
dec
iret
dec
jbe
xchg
xor
mov
js
mov
and
push
jae
jbe
daa
iret
int3
lahf
fbld
fisubrl
pop
repnz
orb
jecxz
mov
loope
push
jno
push
fnstcw
dec
std
xchg
dec
sbb
xchg
mov
mov
test
das
mov
mov
and
inc
cmp
xor
mov
xor
mov
pop
dec
xchg
mov
mov
jecxz
jp
mov
sar
popa
mov
adc
push
xchg
and
ret
jmp
push
sub
xor
mov
aad
sbb
adc
daa
imul
mov
push
pop
lock
cmp
cltd
and
sarl
or
adcl
aam
push
pop
pop
cmp
mov
leave
pop
xor
rcl
pop
out
pushf
push
jo
or
insb
mov
repz
push
inc
dec
stc
mov
push
mov
adc
mov
pop
fiaddl
clc
pop
js
dec
cmp
xchg
jl
js
int3
xor
sbb
mov
sub
dec
xchg
mull
push
ds
int
sub
add
cmp
dec
daa
mov
lret
push
pop
cmpsb
sub
lfs
and
in
mov
insb
lods
adc
aad
int3
push
fucom
xchg
movsb
sti
rorb
outsb
jg
out
lods
and
and
call
push
or
cmpsl
clc
loope
pop
jecxz
xor
mov
dec
mov
stc
push
aas
aad
pusha
mov
xchg
mov
mov
pop
adc
scas
jno
and
inc
mov
inc
pushf
jmp
lcall
icebp
rclb
xor
sbb
movsl
bound
dec
cmp
sbb
jb
stc
xlat
xchg
ret
pop
push
in
jns
add
mov
icebp
rdtsc
sbb
pop
lret
fs
pop
pop
andb
fwait
jmp
mov
sbb
mov
sbb
pop
push
jnp
ljmp
fwait
pop
test
xchg
insl
pop
push
subb
lret
fimull
push
les
bnd
shll
and
pop
xchg
cwtl
cmp
movb
imul
daa
shr
cmpl
jno
imul
sub
fidivrs
inc
repz
repnz
mov
enter
cmp
ds
das
jns
iret
test
adc
cmc
popa
jmp
mov
add
sub
xchg
ds
imul
sbb
addr16
xchg
jl
js
int3
xor
sbb
mov
stc
xchg
nop
iret
call
out
dec
lret
sarb
scas
fisubs
test
stos
jp
lret
cwtl
inc
and
fdivl
in
sub
pop
cmp
adc
mov
adc
mov
jbe
dec
lcall
inc
sub
sub
mov
subl
je
nop
inc
xlat
es
mov
mov
adc
ja
aad
iret
in
mov
sbb
pop
lock
movsb
rcrl
stos
xor
insl
mov
adc
je
push
add
jo
jbe
cmp
xor
mov
divb
pop
adc
pop
mov
enter
addl
push
xor
into
lock
cmpsl
je
sbb
cmp
shll
mov
out
movsb
mov
out
cmp
xor
ficompl
negb
add
sub
cmc
arpl
das
sub
pop
scas
jp
lret
out
roll
push
mov
notb
rcl
roll
cwtl
adc
jmp
gs
lea
push
lahf
div
xchg
adc
icebp
mov
pop
sbb
pop
sbb
sarb
adc
push
jmp
cmc
xor
sbb
inc
dec
shrb
inc
cs
xchg
pop
aad
xchg
xor
mov
push
xchg
int3
insl
ds
sar
es
cmp
sbb
sahf
dec
ds
int
xor
pusha
gs
add
add
mov
push
cmp
dec
call
call
xchg
les
adc
lock
cmp
ja
mov
push
xor
mov
inc
and
dec
push
xchg
gs
hlt
sbb
cmp
fisubrl
test
dec
nop
sub
leave
popf
xchg
dec
push
cmc
in
jbe
sti
inc
adc
add
push
jno
inc
pop
aaa
loopne
ret
jo
in
sahf
mov
mov
dec
mov
sbb
fistps
insl
push
sbb
sbb
inc
rclb
adc
das
into
bound
enter
and
jge
adc
loopne
xlat
mov
repz
inc
adc
sahf
dec
xor
cld
jecxz
xor
enter
mov
andb
add
sub
ja
inc
sub
imul
out
jge
push
inc
xchg
mov
std
mov
scas
clc
lea
aas
jne
aas
push
test
clc
pushf
adc
cmp
lret
jl
dec
enter
in
and
test
jmp
push
cmpsb
call
jecxz
pop
mov
nop
test
xlat
fadd
mov
mov
jbe
push
idivl
aas
jb
lock
pushf
jle
pushf
sub
aas
and
lcall
push
adc
outsl
pop
in
nop
bound
jmp
push
xor
inc
ss
or
loopne
xchg
push
fnstsw
orb
call
in
jg
ds
test
rcll
cmp
jns
jne
xchg
shll
pop
inc
or
and
xchg
rcll
sbb
dec
out
mov
jae
jp
lds
and
cmpsl
js
fiaddl
add
setg
mov
push
lahf
out
test
dec
lret
cmp
out
hlt
les
enter
sbb
sub
fstpl
jb
xor
and
icebp
int3
sti
fmull
daa
xor
sbb
or
lods
xchg
jo
imul
ja
out
adc
add
dec
xchg
imul
repnz
inc
inc
xchg
inc
inc
ret
sub
sub
fldenv
xchg
cmp
pop
and
imul
das
mov
or
push
sarb
sti
xlat
stc
pushf
stos
hlt
aad
inc
insb
lahf
rcrl
xor
mov
or
mov
cmp
push
mov
add
nop
or
mov
jns
dec
leave
add
es
sbb
xchg
push
and
test
jae
cld
sbb
jg
sub
xchg
fdivs
sahf
pop
push
push
in
pop
xchg
imul
movsl
inc
jne
pop
xor
and
or
push
mov
fs
and
xor
sbb
out
jnp
mov
mov
sarb
dec
je
push
cmp
push
stos
adc
scas
int
inc
je
into
hlt
loopne
mov
push
mov
and
cmp
clc
sub
pop
push
pop
cmp
ret
in
jae
xchg
les
lret
push
add
or
lea
sub
lret
lock
xchg
ss
fnstsw
es
jne
aad
movsl
pop
mov
pop
addr16
fiadds
les
imul
inc
dec
fs
jecxz
test
mov
push
sbb
hlt
adc
dec
jge
push
fisubs
lods
lods
inc
das
insl
mov
inc
ja
das
xchg
shll
fldt
or
test
pop
pop
lcall
fisubs
imul
push
pop
or
or
dec
mov
cs
leave
push
xchg
daa
leave
xchg
cltd
mov
js
pop
stos
sahf
mov
push
xchg
jge
aaa
mov
insb
test
push
nop
sbb
mov
inc
call
jg
jbe
ret
ret
mov
cmp
icebp
mov
inc
xchg
add
test
pop
in
out
std
clc
cld
insb
mov
inc
ja
jmp
jecxz
ljmp
cwtl
dec
xchg
rcrb
or
xor
jg
xchg
movsb
lea
mov
pop
xchg
xchg
gs
lods
mov
movsb
ljmp
scas
arpl
ret
inc
lret
sub
aas
ljmp
cmpsb
stos
enter
fstps
pop
adc
xchg
ret
jecxz
adc
push
dec
push
movsl
cltd
push
cmpsl
ljmp
mov
add
insb
and
and
mov
add
fdiv
and
aas
dec
add
and
push
jmp
repnz
add
ja
mov
cmp
mov
inc
lahf
loopne
mov
jb
int3
sbb
push
loopne
inc
bnd
pop
or
leave
jge
insb
mov
push
push
jno
jmp
loop
in
adc
adc
cli
add
and
mov
dec
mov
popf
aaa
add
les
xor
loop
push
outsb
jp
gs
and
addl
into
push
inc
pushf
inc
es
cltd
in
insb
inc
flds
adc
subb
add
stos
or
fisubs
std
int
mov
xchg
shr
in
push
je
pop
ljmp
imul
xchg
ret
imul
push
addb
xchg
stos
shlb
mov
sbb
and
sbb
fwait
push
test
testb
push
roll
dec
insb
inc
mov
xchg
xor
jg
imul
out
jmp
inc
sub
les
cmp
xchg
ja
mov
inc
ds
pop
pusha
and
ljmp
fdivl
lods
les
gs
adc
cmp
cli
jno
test
push
cmc
das
aad
adc
mov
cmpsb
add
cli
lods
pop
lock
mov
fsubrs
arpl
daa
int3
xor
idivb
jae
xor
xchg
lret
jb
out
arpl
rolb
mov
sahf
frstor
outsl
aaa
js
aad
out
dec
jbe
fstpl
pop
push
and
xchg
push
lret
sbb
and
mov
mov
jae
pusha
jle
dec
loopne
out
rol
mov
xchg
pop
mov
jnp
jg
leave
icebp
mov
and
test
push
sbb
push
lret
insb
inc
mov
add
xchg
dec
adc
sarl
imul
xchg
sub
in
mov
xchg
daa
repnz
in
push
lret
pusha
or
jecxz
mov
dec
cmpsl
into
push
mov
mov
lods
es
mov
repnz
shll
push
fstpt
loope
pop
mov
pop
ljmp
xchg
iret
xchg
and
fcmovu
aad
mov
inc
sub
jl
fwait
roll
inc
stos
sti
adc
jae
fs
js
fsubl
loop
mov
inc
cs
push
inc
in
or
rcrb
cmp
sahf
sub
add
push
aam
loopne
push
cmc
cmpsb
mov
xchg
pop
xchg
pop
inc
sahf
pusha
mov
movsb
dec
cld
lcall
popf
jle
lahf
sub
les
fsubl
sbb
pusha
add
xchg
ffreep
cli
or
sub
in
sahf
cltd
fcompl
mov
dec
dec
or
sub
lds
ret
mov
jo
mov
int3
cmpsb
cmpl
sbb
jo
aad
push
pop
and
imul
and
paddd
pop
xor
sbb
pop
fldl
and
popf
push
push
pop
pop
mov
cmp
cltd
jae
fwait
or
and
sub
repz
push
sbb
mov
mov
xor
outsl
mov
mov
inc
insb
mov
push
jnp
cmpsb
stos
jns
inc
xor
xor
shl
inc
mov
sti
mov
leave
ljmp
leave
aam
incl
jp
mov
jl
mov
aad
mov
outsb
dec
popa
or
sub
cmpsb
jbe
jmp
insb
lds
setg
xchg
test
fwait
lret
xchg
mov
sbb
in
sbb
imul
sub
xlat
adc
pushf
dec
and
mov
pause
adc
movsl
stos
scas
mov
inc
mov
adc
push
frstor
insl
push
inc
repnz
out
cmc
shlb
mov
lods
mov
shll
xlat
mov
fidivs
inc
sbb
aad
andb
cmp
sub
inc
fadd
push
push
push
mov
aaa
xlat
pop
sub
lock
ja
outsl
push
adc
ret
in
aam
xor
out
xchg
dec
testl
cmpsb
dec
inc
cmp
into
call
rcr
mov
in
cmp
js,pn
jb
fs
or
jae
cmpsl
jp
movb
lds
pop
stos
dec
xchg
and
ret
xchg
mov
lret
or
mov
push
es
stc
stc
ljmp
sbb
pop
rcrl
into
and
out
sbb
xor
or
mov
xor
clc
jbe
cmp
sub
dec
pop
xchg
call
shl
insb
cmc
push
bound
dec
ljmp
mov
stos
lods
push
add
xchg
js
shlb
dec
mov
mov
mov
lahf
mov
or
inc
fst
out
ljmp
stos
cmp
or
mov
ja
jno
rolb
fxch
test
insb
push
cli
push
test
inc
bound
xor
out
das
ljmp
aam
jo
jge
test
mov
add
clc
sub
add
jbe
xor
popf
pop
mov
leave
scas
adc
addl
jle
jp
cmp
mov
sbb
imul
into
stos
lods
movsb
add
js
lods
mov
dec
mov
jne
pop
ret
xor
pusha
jg
push
data16
mov
xchg
cs
adcl
das
out
push
pop
das
mov
lret
jmp
sbb
mov
rorl
xor
adc
sbb
pop
stos
gs
push
cmp
insb
cld
mov
popf
cmp
lcall
test
andb
rorb
cmp
xchg
outsb
daa
pop
shrb
aad
mov
add
mov
xchg
pop
lea
fnstcw
subl
repnz
mov
pop
ljmp
sbb
sahf
inc
repnz
or
out
and
movsb
sti
xchg
je
xchg
shlb
insb
xor
inc
mov
adc
mov
or
and
ja
mov
mov
adc
cmpsb
repnz
stc
jmp
mov
mov
mov
xor
sub
sbb
xor
pop
mov
jno
int
frstor
jae
dec
in
xorb
xchg
shrb
adc
sub
push
es
sub
pushf
cmp
dec
sbb
xor
mov
add
ffreep
cs
push
dec
sub
xchg
shll
jne
add
adc
scas
push
push
adc
cmp
into
fldl
inc
pop
mov
and
adc
out
adc
push
dec
fimuls
les
out
mov
repnz
xor
adc
pushf
or
push
iret
scas
sahf
push
fistl
xchg
jmp
jmp
dec
and
push
in
pop
mov
cmpsl
jge
add
push
jg
imul
sub
mov
cltd
pushf
mov
jge
fidivrs
sub
sahf
sti
sbb
negb
out
popa
je
aad
or
in
and
sbb
dec
push
mov
or
filds
scas
inc
sbb
push
pop
scas
add
cs
adc
int
mov
pop
mov
inc
icebp
cmpsb
fs
ja
lods
xor
call
bound
repnz
mov
push
clc
inc
mov
repz
mov
and
subl
neg
mov
aaa
adc
ret
adc
or
pop
pop
subl
inc
test
stos
push
or
ja
dec
inc
in
push
cmpsb
inc
mov
sbb
cmovno
filds
sahf
jnp
fldl
ficoms
push
lds
inc
mov
ss
mov
push
xchg
and
lods
jmp
bound
sub
jmp
rolb
shll
and
stos
xlat
jmp
inc
out
push
repz
dec
daa
cmp
cld
icebp
dec
orb
jecxz
sub
and
sub
xchg
lods
jl
or
scas
test
inc
ret
pop
push
in
fistps
dec
mov
adc
lcall
pop
lcall
cs
mov
xchg
je
adcb
icebp
pop
push
fwait
popa
rcl
jl
xchg
cmpsl
into
rorl
lcall
ficoml
mov
je,pt
pcmpgtd
cmp
push
push
cmp
adcb
dec
mov
testl
mov
fwait
dec
arpl
mov
cmpsl
push
shlb
sbb
sbb
out
incb
into
shlb
mov
xchg
or
cmp
repz
sub
fdivs
pop
xchg
mov
ret
jno
insb
inc
fisubrs
adc
push
pop
and
mov
int3
sub
push
cmpl
mov
insl
jecxz
push
int
inc
outsb
jmp
jnp
repnz
cmp
negb
jbe
mov
mov
pop
pusha
push
mov
inc
mov
mov
sub
shl
cmpb
push
add
sub
iret
ja
lods
xchg
pop
push
jp
addr16
lds
or
enter
vphaddubw
ret
sbb
outsb
dec
pop
scas
xor
or
mov
jmp
pushf
ret
cmc
push
mov
scas
and
or
inc
xor
jae
leave
ja
scas
aaa
loopne
jmp
lods
inc
add
insb
bound
sarb
sti
sbb
jb
pop
insb
mov
or
lret
lcall
sti
popf
lret
xor
mov
icebp
cmp
aas
mov
jg
stos
dec
xlat
xchg
pop
xchg
push
ret
add
mov
mov
mov
out
js
ja
es
mov
cmc
es
ud0
xor
loope
int3
mov
rcl
sbb
xchg
js
inc
sbb
xchg
test
pop
xor
bound
pop
pop
mov
and
aad
add
call
adc
add
sbb
add
lcall
mov
inc
sahf
fidivs
cmpsb
lods
pop
dec
das
dec
ja
scas
cmpsl
test
lahf
lods
pusha
fsubrs
sub
aaa
or
cld
adc
mov
mov
loop
movsl
les
jl
shlb
lods
sub
inc
cld
mov
mov
dec
push
js
cwtl
cmp
mov
adc
aas
pushf
jb
iret
fsubs
sub
dec
cmp
mov
ja
cli
inc
sbb
inc
lds
ss
int3
ss
mov
sub
idiv
sbb
mov
jp
aas
mov
outsl
adc
pop
loope
dec
outsl
loop
adc
add
loop
movsb
xor
mov
data16
mov
cmp
mov
hlt
adc
in
xchg
lock
or
inc
or
mov
mov
into
xor
mov
daa
push
ljmp
cmp
and
cwtl
dec
popf
stc
xor
mov
pop
jmp
out
inc
or
cmp
push
fsubrs
aaa
mov
xchg
mov
mov
dec
push
cs
nop
into
ljmp
ljmp
imul
jae
push
out
cli
insl
das
mov
sub
test
lds
xchg
mov
mov
arpl
lods
jnp
mov
imulb
pop
pop
lcall
sbb
push
and
push
xor
imull
daa
arpl
add
jmp
ds
jnp
stos
xor
aam
mov
out
loopne
pop
cmpsl
rorl
mov
jle
cmpsb
fadds
pop
test
ret
subl
lea
push
xor
cwtl
xchg
dec
or
jns
jle
cs
fsubl
mov
mov
add
leave
pop
inc
xor
pop
mov
jne
cli
xchg
pop
jo
popa
adc
adc
push
imul
lahf
mov
in
mov
mov
cmp
addb
push
jae
pop
xor
or
adc
lds
mov
jecxz
ficoms
in
pushf
and
sbb
push
mov
rorl
js
das
sub
stc
movsb
insb
jb
out
cmpsb
es
cltd
inc
cltd
ret
cmp
sbb
test
adcb
cmp
js
jae
popf
mov
test
sub
mov
ror
mov
adc
shll
adc
fidivrl
outsb
out
out
cwtl
mov
or
or
sbb
sub
inc
mov
xlat
daa
cltd
cmp
mov
inc
or
popf
pop
aaa
lcall
fldl
rolb
stos
lcall
add
cmp
or
pop
xchg
mov
in
adc
bound
inc
xchg
inc
dec
cs
mov
pop
lea
dec
iret
xchg
or
aas
stos
jns
dec
xor
outsl
push
pop
outsl
sbb
addl
mov
fsts
xchg
cmp
xor
cli
std
nop
call
mov
inc
mov
push
sub
mov
popf
xchg
leave
and
cmc
jnp
aam
mov
loop
test
neg
push
sub
jne
push
popf
add
std
mov
into
inc
cmc
bound
mov
xchg
mov
pop
dec
pop
fdivs
xchg
sub
into
pop
test
mov
pop
adc
jnp
and
sub
and
popa
inc
xchg
arpl
cmp
pusha
cmpsb
sahf
xlat
jg
dec
xchg
xchg
test
mov
push
lea
pop
inc
fstps
lahf
or
sub
mov
mov
mov
ss
xlat
pop
inc
push
mov
pop
into
cmpsb
and
cmc
or
sbb
dec
push
xor
push
xchg
dec
or
push
xor
mov
cmpsl
loope
xadd
in
or
mov
inc
ret
test
add
sub
shl
push
mov
jecxz
mov
pop
adc
scas
movsb
push
rorb
push
dec
rorb
add
push
cmpsl
out
lret
cmpsb
xor
out
icebp
fisubrl
jge
lret
dec
fldenv
xor
mov
clc
in
jle
shrb
and
movsl
xlat
popf
jb
outsb
cmp
or
fldenv
js
pushf
insb
mov
cmp
cmp
cmpsl
pop
sub
fs
daa
inc
pop
mov
cmpsl
or
mov
cmpsl
ljmp
mov
pop
sub
icebp
dec
lcall
add
aas
and
rcr
mov
hlt
push
cmpsb
cmp
pop
call
movsb
inc
sub
into
jecxz
imul
lds
inc
jg
hlt
jae
ret
mov
mov
ret
adc
imul
int3
sbb
push
mov
aad
jo
popl
mov
mov
jl
xor
dec
aad
xlat
arpl
movsl
or
fmulp
outsb
add
xor
ret
scas
sbb
adc
mov
xchg
sub
clc
enter
cmc
out
xor
mov
add
pop
inc
inc
iret
outsl
mov
stc
dec
mov
sub
mov
xlat
dec
jp
movsb
test
scas
cmpl
in
popf
jnp
push
sub
jge
add
cmpl
xchg
fcomi
push
aas
cld
xchg
shrb
mov
inc
stc
imul
ret
es
jle
loop
mov
cmpsl
mov
jl
push
jmp
insb
jbe
mov
and
cmp
adcl
test
mov
mov
jae
jmp
sbbb
dec
sub
cmp
ds
sub
das
addr16
adcl
addr16
jo
arpl
mov
lds
int
cwtl
sub
add
xor
in
jo
mov
aam
daa
xchg
lds
lcall
sti
add
leave
push
push
in
mov
dec
outsb
dec
lret
jo
sub
in
pop
aaa
shl
fdivl
mov
sbb
cmp
in
ss
inc
insb
add
and
jns
add
jmp
cmp
std
cmp
dec
push
les
cmp
pop
int3
idivl
lds
ljmp
js
or
mov
and
inc
push
mov
fs
cli
mov
xor
xchg
popa
dec
movsl
push
fstpl
pop
adc
gs
and
jnp
es
popf
fsubp
repnz
loop
sti
xor
mov
xchg
jle
cmc
mov
xor
dec
add
leave
mov
sub
jl
cmp
or
xor
lock
cmp
lcall
scas
push
jge
or
outsb
adc
cld
dec
or
adc
test
lahf
sbb
lods
mov
out
fldenv
imul
inc
lds
and
pushf
xor
arpl
xorl
add
mov
arpl
jbe
hlt
inc
rol
test
popa
fcmovbe
ret
cmp
and
mov
sub
mov
test
xchg
jmp
xor
mov
fnstsw
xchg
sbb
push
cltd
ljmp
jne
push
dec
dec
cmp
enter
jecxz
cmc
and
divb
pop
jb
lock
dec
repnz
flds
push
dec
adcl
jb
ljmp
stos
jmp
sbb
dec
ror
movsb
pop
mov
in
push
inc
mov
jno
stc
into
dec
inc
aas
push
push
outsb
add
lret
aam
push
mov
jg
jo
rcll
es
data16
loope
shrb
sub
adc
mov
push
sub
nop
jnp
and
inc
push
popf
scas
xor
fsubs
pop
movsb
in
dec
enter
fiadds
and
jns
xchg
push
das
mov
and
push
jne
insb
out
aas
call
stc
and
ret
xchg
and
adc
jo
push
adc
pop
pop
mul
jmp
test
stos
and
dec
pop
or
inc
cmpsl
xchg
cli
jl
fwait
mov
and
sbb
xchg
and
adc
roll
pop
mov
out
iret
imul
bound
dec
or
dec
sbb
ret
cmpsl
or
add
xchg
dec
jle
repnz
andb
cmp
xor
sub
addr16
shrb
insl
adc
sub
jo
cmpsl
push
add
in
sbbb
jecxz
and
fisttpll
pop
mov
mov
dec
pusha
pop
dec
sbb
leave
pop
js
out
or
gs
insl
mov
pop
es
or
xor
sub
aaa
insl
cmp
and
in
popa
cmp
xchg
movsl
out
add
not
adc
dec
mov
inc
dec
lock
sbb
lock
test
cmpsl
add
dec
push
push
icebp
pop
cmpsl
adc
int3
out
xchg
add
cmp
mov
data16
add
inc
clc
or
das
js
inc
fs
clc
cli
aaa
add
jg
and
sti
sub
insb
arpl
lods
sub
lock
push
mov
fistpl
pop
movsl
pop
inc
std
shrb
les
test
test
sub
loop
push
lock
lds
mov
or
cmp
stos
mov
add
mov
ljmp
int
fisubrs
xchg
jo
loope
lock
jns
pop
lahf
lret
out
sbb
jnp
inc
dec
loope
and
subb
scas
sub
mov
inc
sub
push
sub
pop
arpl
mov
movsb
mov
pop
push
arpl
loopne
or
test
mov
fldz
dec
mov
mov
xchg
adcl
pop
out
cmpsl
leave
lea
stos
sti
add
fsincos
and
loop
popa
inc
addr16
mov
sub
push
sub
dec
inc
jmp
xchg
mov
xor
das
out
and
aam
cli
mov
dec
and
mov
xchg
jge
push
sbb
dec
rcrl
notl
mov
adc
out
pop
fcmovbe
mov
int3
inc
sub
cmp
pop
dec
add
ss
sub
ret
test
cmpl
outsl
xchg
xor
sarl
int
movsb
fcomps
cmp
mov
sbb
cmp
sub
adcb
movb
popf
inc
push
cwtl
repz
push
xchg
lret
aam
add
adc
test
mov
in
xchg
mov
and
aas
popf
inc
hlt
mov
out
lock
dec
outsl
pop
sti
div
fcmovbe
addr16
fldcw
mov
push
mov
es
and
mov
or
je
in
gs
adcl
test
fiadds
or
lea
inc
gs
push
outsb
stos
or
and
adc
cwtl
mov
cmp
sbb
mov
fs
sahf
push
out
xor
repz
cmp
bound
sub
jmp
aas
mov
loope
loopne
daa
add
jnp
je
xchg
dec
into
mov
popa
sbb
mov
fwait
lods
inc
mov
inc
jle
pop
push
jnp
out
aam
or
rorl
xchg
je
lahf
push
loop
cmp
cwtl
pop
hlt
cmp
jns
leave
fadds
push
mull
adc
fwait
cmpsl
pop
mov
aas
mov
shlb
jae
mov
jne
jae
leave
sbb
sub
pop
aad
dec
insl
insl
sarl
fidivrs
sbb
mov
fistpl
sbb
rcrl
shlb
dec
arpl
loopne
rcrb
dec
faddl
adc
into
mov
not
fisttpl
aaa
and
out
aaa
and
inc
xlat
cmp
punpcklbw
xchg
lret
gs
subb
int
cwtl
xor
dec
jp
mov
in
dec
push
fidivs
cmp
mov
push
ljmp
cs
popa
out
adc
mov
xchg
ds
mov
bound
mov
cmp
imul
mov
out
jne
jecxz
jo
inc
pop
mov
jnp
in
pusha
and
push
xor
jle
cs
aaa
xchg
jl
inc
push
in
sbb
frstpm(287
mov
sbb
pushf
imul
daa
in
xchg
adc
mov
dec
ja
sub
push
int
xchg
test
test
inc
sarl
xchg
loopne
add
cwtl
inc
repnz
mov
or
xacquire
adc
sti
sub
dec
mov
pop
add
mov
jbe
out
in
out
xor
jae
xorl
xchg
test
jae
push
xchg
cli
adc
test
je
jmp
adc
mov
add
pop
xor
push
dec
push
cmpsl
ss
mov
jp
xchg
hlt
mov
dec
adc
fwait
insb
jg
cmp
pushf
out
ja
push
mov
adc
aam
iret
js
cmpsb
dec
xchg
mov
xchg
mov
outsl
jp
imul
movsb
das
imul
or
jb
push
or
or
ja
cmp
das
xchg
stos
cli
mov
ja
xor
dec
ja
sub
and
xchg
cmc
pop
fsubl
xor
test
xor
sti
out
mov
mov
daa
loop
popa
inc
addr16
mov
sub
jno
mov
xchg
int
movsl
or
cli
pop
imul
mov
out
or
add
push
std
fisttps
mov
mov
fmuls
in
test
cmp
push
leave
fnstcw
inc
fstpl
sbb
mov
loopne
orl
outsl
mov
adc
lea
push
iret
inc
xor
and
shll
sbb
or
loopne
add
mov
enter
arpl
mov
mov
lock
cld
fsubr
adc
sahf
mov
faddp
pushf
xchg
test
or
in
inc
or
out
mov
mov
xchg
mov
fidivrs
sub
mov
out
pop
push
push
push
jmp
cmp
jmp
mov
popa
pop
fdivr
in
sub
push
sub
jo
nop
jnp
out
in
jle
cltd
sbb
and
mov
adc
and
lahf
adc
test
add
push
call
mov
bswap
outsl
push
cmc
ja
jecxz
and
data16
data16
mov
push
sub
loop
fsubr
shrl
push
mov
aaa
push
in
ss
cmc
or
leave
mov
add
pop
mov
inc
sarb
adc
or
in
pusha
ret
push
enter
sbb
rclb
js
push
or
pushf
lcall
out
das
push
sub
shll
mov
inc
add
ljmp
mov
push
xchg
inc
jl
dec
addl
es
js
mov
and
mov
cmp
and
test
inc
cmp
pop
xor
pop
jne
mov
mov
push
aaa
lret
ljmp
divl
dec
dec
push
jo
dec
test
push
cmp
or
rorb
rcrl
xchg
push
fcoms
test
movsb
fsubs
pminub
filds
stos
fwait
xlat
imul
pop
aam
aam
inc
in
sbb
sbb
popf
add
and
pop
into
out
pushf
insl
inc
aam
dec
lahf
mov
adc
sbb
mov
imul
jle
fcompl
mov
sub
inc
insb
xchg
xchg
adcl
dec
pop
scas
scas
fisubl
adc
ds
and
jle
mov
arpl
dec
inc
dec
pop
test
into
fs
into
jns
sbbb
push
and
iret
imul
pop
ja
cmp
mov
mov
cmc
leave
test
shlb
mov
push
mov
stos
push
jg
loop
push
ljmp
pop
mov
cmp
dec
push
sub
test
pusha
push
mov
xchg
cmpsb
enter
test
fstpt
hlt
sbb
or
dec
xchg
std
mov
jno
sahf
pop
push
push
cli
mov
lret
not
fwait
pop
xchg
mov
push
and
lahf
ds
jb,pn
mov
and
outsl
push
ret
iret
jle
pop
xchg
mov
sub
cmp
insb
lcall
xor
or
jo
xor
push
xor
xchg
or
mov
jge
push
pop
hlt
mov
jns
js
pusha
xchg
test
push
add
cmpsl
cmp
lcall
iret
push
and
in
xchg
push
fisubrs
push
scas
dec
xchg
adc
cld
adc
lret
fwait
insl
pop
popf
xchg
shlb
mov
add
xchg
push
cmp
inc
dec
stos
out
outsl
adc
jg
ret
or
imul
push
push
in
ss
add
cwtl
xchg
mov
xchg
adc
inc
cmc
or
mov
popa
mov
xor
mov
sti
jbe
dec
lods
lret
cmp
scas
push
in
xchg
jno
ficoms
pop
pop
inc
outsl
and
cs
arpl
lds
out
sar
filds
stos
mov
shll
pop
fsts
in
stos
test
nop
or
cli
out
adc
mov
push
xchg
push
aaa
testb
push
jns
and
pop
dec
xchg
xchg
in
pmullw
xchg
sub
push
pop
add
loopne,pn
mov
cmp
jo
js
adc
out
cltd
or
inc
fs
inc
out
adc
and
ds
loop
sbb
arpl
jns
lods
fsubrl
es
cli
push
daa
stc
aad
xor
cmpsb
sub
mov
lcall
cmp
mov
aam
cmp
pop
mov
ja
lods
lock
pop
xor
xor
push
xchg
jmp
arpl
popa
push
mull
xchg
test
jecxz
shrb
insb
data16
cli
sahf
data16
fnsave
or
je
insl
roll
jp
pop
mov
data16
mov
call
mov
push
and
mov
pop
jns
sub
xchg
arpl
cmpsb
adc
sub
push
xchg
out
out
add
cmp
repnz
insb
shr
cmp
insb
movsl
hlt
and
jle
fimuls
and
lods
sbb
mov
aaa
jnp
dec
stos
imul
xor
test
in
jge
out
adc
shlb
and
sahf
pop
mov
jle
pop
aas
pop
ss
add
push
pop
add
push
bound
cmpsb
or
rorl
mov
jge
popf
pop
mov
stos
sub
stos
cmp
or
xchg
pop
lds
xchg
dec
jne
sti
movsb
cli
push
stos
rorb
mov
adc
cli
mov
push
data16
dec
jg
scas
leave
or
sbb
inc
xor
mov
mov
stos
sbb
and
sbb
xor
adc
aas
adc
xor
inc
mov
push
ljmp
in
pop
sbb
xor
xchg
outsb
inc
sub
out
test
pop
cmp
or
popf
mov
shlb
fbstp
jg
lret
cmpsb
frstor
ret
cmp
lret
pop
mov
lcall
push
clc
fmul
and
lods
dec
int
out
cld
dec
jo
ja
lds
rol
pop
push
mov
mov
stos
out
int3
cwtl
pop
faddl
cmp
lods
adc
cmp
adc
sarl
pop
sub
sbb
popf
jl
cmp
mov
jge
in
cmp
lds
inc
and
xchg
mov
cmp
pop
rclb
dec
mov
jle
cmp
mov
jbe
add
into
add
cmpsl
xor
data16
std
loop
shr
test
jns
in
xchg
xor
jge
cmp
testb
xor
mov
out
stos
lock
clc
or
lods
iret
mov
lods
js
aaa
add
cmc
aam
movb
fisubl
and
mov
fxch
inc
push
data16
stos
lret
xchg
or
lcall
pop
andl
mov
enter
movsb
hlt
ja
inc
adc
arpl
int
mov
mov
pop
push
divb
add
mov
mov
inc
push
inc
test
shlb
or
xor
cli
gs
mov
sbb
dec
pushf
outsb
and
and
push
cltd
jae
dec
and
or
addl
lock
call
pop
or
sub
jmp
lret
pop
out
jge
mov
out
push
cmp
dec
fiaddl
xchg
int3
mov
mov
shl
nop
add
or
dec
and
into
shlb
xor
xchg
andl
fisubs
call
mov
xor
sbb
and
cmp
xor
and
lods
jl
adc
cmp
sbb
in
pop
sub
sti
lea
arpl
inc
pop
add
dec
outsl
mov
sub
in
jns
jge
movsb
lret
mov
xor
pop
sbb
sub
arpl
inc
jp
xchg
sarl
fsubr
push
dec
cltd
stos
addr16
fwait
and
bound
int3
inc
clc
push
jmp
and
pop
xchg
mov
cmp
sub
lcall
pop
mov
cmp
add
mov
popf
push
mov
lds
xor
aam
jno
dec
mov
je
sub
andl
mov
imul
add
lret
jmp
sbb
mov
jae
jo
cli
aaa
sub
stos
fsubrs
dec
dec
dec
bound
jl
cmp
or
adc
out
xchg
add
sub
pop
jnp
mov
xor
movsl
je
add
pop
out
sub
jmp
adc
xchg
jo
mov
adc
in
notl
shll
les
jg
mov
inc
pop
sub
pop
mov
movsl
pop
sar
loop
push
fstps
cmp
and
jo
jnp
clc
push
pop
sub
lock
mov
loope
mov
sbb
cltd
and
cmpsl
sub
xor
shll
aam
imul
cmp
push
mov
mov
ja
int
jb
fwait
cmp
sub
or
mov
and
push
and
in
sahf
out
ret
popa
icebp
mov
xor
push
stos
adc
lret
ret
std
in
ficompl
fistl
sbb
push
push
inc
lret
xchg
fmuls
cmp
lea
fistl
mov
xchg
into
lahf
inc
mov
inc
push
adc
loopne
roll
xor
out
movsl
imul
rorl
sarb
movsl
insl
sti
cmp
icebp
loop
dec
outsl
stos
in
mov
mov
or
or
int
xchg
popf
lahf
dec
sub
push
pop
xor
and
cmp
pop
popf
les
lcall
cld
lret
lock
mov
mull
arpl
push
shrb
daa
repz
sbb
add
call
pop
cld
sbb
aas
sarb
mov
fwait
loope
mov
sbb
xchg
xchg
add
xor
xchg
int
xchg
imulb
sbb
dec
mov
jb
mov
xchg
xchg
roll
or
mov
jns
movsb
add
push
and
lahf
call
js
test
mov
fildl
adc
push
aaa
add
cltd
cmp
into
pop
jle
jmp
mulb
cmc
push
dec
push
in
fs
into
inc
daa
nop
mov
mov
sub
dec
and
repz
push
and
sbb
xlat
xchg
mov
add
pop
sub
jle
dec
cmp
sub
and
and
inc
mov
pusha
pop
cmp
loop
add
iret
scas
clc
mov
push
in
push
jb
push
push
aad
pop
stos
ror
inc
jl
fmuls
xchg
pop
xor
add
pop
jbe
outsb
mov
push
imul
pop
addr16
xchg
or
jo
je
cs
in
jns
shll
je
stos
xor
mov
mov
mov
arpl
jle
cs
cmpsl
hlt
flds
pop
std
mov
xor
es
cld
xchg
dec
sbb
scas
or
jmp
mov
or
test
xlat
ljmp
pop
orb
stos
push
ret
xchg
dec
fsub
or
inc
lahf
push
js
dec
dec
sbb
add
jno
cmp
inc
or
fld
jp
push
cmc
aaa
sub
cld
cmpsb
pop
adc
pop
repnz
shll
jnp
sbb
push
gs
and
cltd
clc
pop
ja
pusha
ja
mov
dec
pop
mov
xchg
js
xchg
sub
testb
insl
add
inc
mov
enter
fnstsw
into
incl
and
loopne
aad
mov
jl
add
jp
out
xchg
scas
mov
fisttpl
and
xor
and
jo
jle
jno
jo
push
fidivs
cld
xchg
adc
sub
adc
and
dec
test
mulb
fildll
int
or
insb
mov
jg
outsb
pusha
dec
dec
sarl
dec
movsb
rorl
fdivp
out
mov
loope
push
jno
outsb
cmp
ret
pop
mov
shlb
je
movsb
loopne
stos
enter
sub
out
inc
mov
lock
sti
xor
fisttps
outsl
nop
leave
mov
cmpsb
xchg
bound
pop
outsb
or
fisttpll
es
clc
subb
jecxz
inc
in
sahf
enter
xor
mov
add
dec
in
scas
sub
fdivrp
sub
mov
mov
push
mov
mov
mov
loop
add
adc
mov
rcrl
insb
repnz
adc
pop
fnsave
cmp
cmpsb
clc
mov
stos
cltd
sub
adc
dec
aaa
or
mov
mov
xlat
fisubs
ja
xchg
sub
test
or
subl
daa
test
lods
loop
jns
lahf
lret
add
das
jecxz
fs
or
jbe
outsb
mov
push
imul
pop
addr16
xchg
or
push
stos
andb
mov
mov
lahf
mov
fidivrs
test
or
outsb
and
pop
test
jae
ret
inc
pop
add
int3
jae
cmpsl
mov
mov
lock
mov
enter
or
jb
or
inc
shll
mov
pop
fistl
dec
iret
xlat
lods
dec
or
popf
shl
mov
mov
into
adc
push
in
and
in
insl
sti
out
pop
mov
push
je
pop
push
jp
dec
addb
lea
imul
pushf
cmp
xchg
and
pop
cmp
add
cmp
jmp
jae
stos
data16
cmpsb
mov
ja
add
fbstp
sbb
repnz
stc
push
ss
icebp
sbbl
mov
popaw
test
pop
sub
xchg
pop
add
xchg
mov
mov
movsb
and
cmp
out
xchg
icebp
mov
mov
out
or
jb
or
inc
shll
mov
pop
fistl
dec
iret
xlat
lods
dec
or
popf
shl
mov
mov
into
adc
push
in
and
in
insl
sti
out
pop
mov
push
je
pop
push
jp
dec
addb
lea
imul
pushf
cmp
xchg
and
pop
cmp
add
cmp
jmp
jae
stos
data16
cmpsb
mov
cmp
dec
xor
cs
test
pop
movsl
bound
movsl
shlb
xor
test
push
xor
jmp
mov
mov
cmp
inc
push
mov
lret
shl
and
stc
pop
outsl
imul
xorl
sub
popa
imul
jmp
les
out
stc
sti
rolb
mov
sahf
frstor
test
xchg
xlat
mov
in
add
inc
loop
mov
test
es
fiadds
imul
jg
dec
into
inc
pop
test
test
adc
or
mov
popa
dec
sub
cmpsb
adc
inc
in
lods
ja
jge
aad
aad
xor
cmp
decl
mov
int3
cld
repnz
jecxz
push
fsubrp
add
fsts
cmc
pop
sub
leave
data16
push
push
cli
mov
adc
cltd
shrl
pop
push
sub
arpl
dec
in
mov
sbb
or
out
bswap
cltd
xor
cs
xor
daa
adc
filds
sub
and
arpl
aam
sbb
pop
inc
aas
dec
mov
sub
add
inc
push
js
inc
cmc
int3
push
inc
mov
mov
push
or
cmp
pop
mov
inc
pop
fnsave
cmp
cmpsb
clc
mov
stos
cltd
sub
adc
dec
aaa
or
mov
mov
xlat
fisubs
ja
xchg
sub
test
or
subl
daa
test
lods
loop
jns
lahf
lret
add
das
jecxz
fs
or
jbe
outsb
mov
push
imul
pop
addr16
xchg
or
push
stos
andb
mov
mov
lahf
mov
dec
pushf
iret
xor
mov
pop
push
pusha
mov
push
sub
ret
sbb
dec
push
lret
mov
dec
sbb
mov
nop
add
fldcw
xorl
je
loopne
pop
in
lods
jno
mov
adc
lahf
sbb
xor
nop
push
add
sub
imul
lea
xchg
push
mov
cmpsl
sbb
cmp
inc
loope
jle
pop
pop
lods
outsb
push
push
mov
mov
ljmp
add
in
out
in
jmp
add
push
jge
iret
inc
push
clc
outsl
dec
dec
repz
jle
hlt
sbb
scas
pop
fsubrl
mov
lds
mov
addl
aaa
sbb
test
xchg
dec
insb
test
lods
jecxz
fstpt
dec
fcompl
xchg
push
scas
testb
fucomip
aad
jmp
inc
and
fs
mulb
mov
cmp
pop
lcall
outsb
and
call
ret
mov
jns
stc
jnp
stos
pushf
inc
pop
sarl
dec
sbb
lds
cmp
xchg
pop
xor
and
es
push
pop
jno
ss
popa
flds
xchg
or
movsb
mov
cltd
mov
scas
fidivl
js
sarl
push
jl
sub
and
scas
je
jge
pushf
xchg
mov
add
pop
mov
je
adc
in
push
inc
xlat
insl
loopne
movsl
daa
mov
int3
pusha
inc
jne
pop
mov
test
sar
pusha
cmpsl
test
adc
aad
shll
imul
inc
je
add
push
and
popf
popa
test
dec
xor
xor
jnp
cs
mov
lods
rcr
aam
and
xchg
mov
adc
stos
mov
pop
mov
sub
sahf
hlt
sbb
gs
add
andb
mov
or
mov
loopne
ret
jae
sub
inc
aam
mov
jmp
stos
incb
dec
and
aam
xchg
sbb
int
lods
stos
inc
push
cld
repnz
push
sub
call
push
in
xlat
cmpsb
add
leave
pop
and
aad
mov
push
ficomps
cmp
jge
dec
xchg
ret
aam
sbb
xchg
lods
inc
ss
pop
mov
pshufw
adc
push
shll
mov
fsubrl
cmp
pushf
xchg
xchg
or
je
mov
xor
cmp
cmp
jo
add
cmp
xor
xlat
cmp
inc
or
fbld
push
aad
fistpll
arpl
push
and
loope
js
into
test
fadds
lods
pop
fdiv
shlb
pusha
lock
or
dec
pop
inc
mov
ror
cmp
xchg
gs
pop
xchg
xchg
pop
fwait
pushf
arpl
jne
insb
xor
lcall
cmovp
or
push
cs
xor
push
aad
out
and
lahf
xchg
bound
push
andl
mov
out
and
sbb
aad
mov
fldl
clc
ja
insb
int3
xchg
and
test
adc
jp
dec
mov
mov
xorl
push
jecxz
test
jge
loopne
pop
and
cmc
cmpsl
in
add
lods
add
mov
or
mov
sbbl
aaa
mov
xchg
push
es
push
xchg
or
test
lock
loop
push
lahf
and
inc
dec
mov
fcmovnbe
jmp
pop
inc
mov
mov
std
dec
add
outsb
push
and
mov
into
inc
push
or
cmp
insb
xchg
es
mov
sub
orl
stc
aad
cmpsb
js
dec
movsl
lahf
xor
cmp
jne
xor
pop
cltd
mov
bound
and
mov
int3
or
pop
in
subb
mov
sbb
dec
inc
pop
push
sub
ds
and
xor
inc
adc
sbb
jmp
mov
out
inc
xchg
fcom
mov
icebp
push
cmc
dec
fildll
jbe
or
push
push
and
jae
mov
adc
shrl
pop
pop
pop
push
xchg
incl
inc
mov
push
sbb
mov
arpl
dec
cltd
pop
rorb
pop
xorl
lds
js
leave
push
add
xacquire
test
in
inc
jb
mov
mov
sub
fwait
hlt
loope
xchg
out
movl
xchg
repnz
xchg
in
in
shlb
mov
imul
pop
lret
repz
xchg
testl
mov
test
sbb
sub
stos
mov
mov
pop
and
xchg
clc
mov
daa
clc
mov
fistl
lock
ret
sbbl
movsb
dec
in
jg
pop
lcall
cmp
push
loop
hlt
lods
dec
mov
pop
outsl
add
scas
adc
push
cmc
scas
into
insl
insl
pop
js
scas
icebp
pusha
jns
jmp
leave
jno
add
cmpsb
push
jmp
jbe
out
cmp
push
mov
xchg
enter
dec
xchg
mov
lahf
shrl
push
mov
xor
mov
out
arpl
repz
inc
add
push
push
sbb
mov
lcall
cwtl
les
shll
xorb
cmpsb
ret
dec
jnp
mov
lds
ds
push
int
icebp
and
jge
mov
sub
mov
or
dec
incl
mov
or
lock
cmpsb
fs
imul
loope
adc
push
int
xor
cmp
or
jecxz
or
decb
cmp
mov
imul
scas
xchg
sub
mov
mov
cmp
imul
lret
lods
vphsubdq
cmpsl
pop
push
inc
jg
xchg
movsl
jl
fnstenv
leave
call
mov
insb
mov
xor
das
xorl
or
xchg
sbb
jne
das
lods
js
xchg
push
and
test
rolb
inc
popf
int3
mov
in
jno
dec
stos
push
pusha
sub
pop
ffreep
movsl
hlt
outsl
mov
sub
or
in
sbb
icebp
aas
adc
dec
cmp
mov
out
mov
movsl
adc
push
push
mov
imull
mov
mov
adc
dec
bound
sahf
idivb
sub
cmp
sbb
cmp
xor
pop
jmp
adc
bound
aaa
xchg
lahf
mov
iret
orb
add
jo
repz
cli
xor
jo
mov
mov
or
icebp
adc
sti
ret
clc
test
test
std
add
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
jo
arpl
sub
jns
push
cmp
.byte
