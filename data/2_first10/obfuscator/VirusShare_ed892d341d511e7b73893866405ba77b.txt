cwtl
je
dec
and
mov
out
movsl
test
dec
imul
jl
lods
in
movsl
stos
jecxz
add
cmp
jnp
outsb
and
mov
mov
cld
enter
fldl
les
lcall
xchg
and
and
push
cltd
test
mov
inc
mov
adc
dec
pop
pop
lret
out
pusha
adc
pusha
in
xor
mov
inc
xchg
fdivr
dec
inc
ret
jno
inc
inc
and
sahf
frstor
fsts
and
iret
push
push
jmp
insb
das
cld
inc
lahf
cld
mov
inc
fldcw
gs
insb
and
rcll
xor
aad
push
add
push
mov
jo
in
aas
xor
hlt
int
scas
leave
cmp
pop
dec
jge
sbb
daa
in
pop
decl
popa
mov
cmp
jp
fistpll
daa
add
fmuls
test
mov
add
dec
fsts
add
add
dec
lea
je
stc
push
bt
add
stc
cmp
call
mov
call
setp
not
mov
pushf
pusha
inc
not
mov
call
push
lea
call
pushf
lea
jl
pusha
pusha
lea
jae
pusha
jmp
bound
fistpll
in
adc
pop
stos
idivb
xchg
sub
and
add
cmp
or
test
rcll
adc
inc
mov
pop
cmp
add
sbb
dec
movsb
push
pushf
mov
jge
hlt
cmp
cmp
ss
fs
fdivrp
fadd
into
or
in
int3
and
scas
cmp
notl
shrb
movsb
addr16
cmp
dec
pushl
mov
je
fs
imul
mov
xchg
out
xor
sbb
jae
adc
aaa
mov
ret
aas
insl
rcrl
out
inc
inc
dec
xor
cs
insb
add
and
inc
setb
pushl
pushl
pushl
inc
seta
xchg
rcl
mov
shl
mov
push
mov
call
es
lcall
xor
shlb
cld
or
jl
and
adc
imul
mov
mov
arpl
outsb
cltd
addr16
pushw
cmp
cmpsb
pushf
rol
cwtl
push
insb
jne
cmpl
data16
cmpsb
jmp
out
fwait
cmpsb
mov
cmp
pop
xchg
xchg
dec
aad
test
shll
inc
mov
mov
mov
mov
sub
loop
cli
xor
add
dec
andb
insb
ret
aas
insl
in
sub
mov
lea
push
lea
call
jmp
sub
clc
and
and
lea
add
rcr
cmp
jmp
mov
pushf
push
mov
pushf
call
pusha
movsl
out
and
scas
and
push
mov
inc
fwait
and
mov
and
mov
xchg
push
dec
pusha
dec
sbb
pop
mov
insb
rcrb
sahf
rcrl
inc
and
jae
mov
adc
icebp
ljmp
and
add
adc
xor
sbb
push
cmp
test
sbb
fstps
dec
fwait
xlat
std
pop
in
rcrl
jecxz
cmp
or
adc
sti
stc
sbb
push
pusha
adcl
pushf
adc
cld
and
pop
or
push
loop
ret
or
add
add
add
in
add
mov
mov
push
pop
mov
push
pop
mov
adc
clc
mov
shrl
pop
insb
clc
or
cmpsl
or
mov
sub
and
push
mov
sbb
add
lahf
sbb
ror
pop
in
iret
repz
repnz
mov
rcll
icebp
mov
and
std
or
push
jg
and
or
add
adc
add
div
push
fmull
repz
jmp
std
fcmovu
add
push
notl
xor
call
add
in
add
adc
sti
push
sbb
pop
xchg
clc
sbb
jl
adc
clc
push
mov
repz
sbb
call
cld
sbb
idiv
fsts
fst
enter
rcrl
rcr
add
adc
sbb
int
f2xm1
lret
sub
stc
fwait
add
add
in
add
fucom
add
mov
mov
mov
mov
sbb
push
loop
mov
shll
adc
fcompl
mov
xchg
pop
stos
and
push
dec
pop
test
adc
and
adc
pop
and
in
loop
sbb
clc
and
pop
rcrl
pop
iret
sbb
into
or
push
rcll
add
cmp
pop
adc
rorl
sbb
or
jmp
add
adc
adc
add
icebp
jl
push
mov
dec
hlt
std
sbb
mov
idiv
test
shl
stc
push
mov
push
stos
push
std
mov
and
sbb
out
std
in
add
fimuls
loope
fstpt
adc
add
or
add
add
icebp
lods
loopne
push
xor
popa
pop
fwait
push
pushf
mov
les
cmpsb
std
inc
xchg
pop
mov
xchg
mov
and
jns
and
sbb
mov
mov
leave
add
or
add
nop
fstps
push
pop
fs
dec
pop
les
lock
adc
cltd
divb
movsb
mov
stc
pop
rcrl
cwtl
or
nop
xlat
mov
out
rorl
ret
sbb
push
sbb
lret
add
jae
call
jge
add
loop
rcll
mov
push
loop
mov
sbb
dec
add
or
add
clc
mov
mov
push
sbb
and
test
cmpsl
jl
mov
aaa
sub
and
jp
les
sub
mov
sbb
icebp
and
adc
sbb
mov
into
add
sbb
mov
inc
xlat
push
push
fwait
lret
sbb
pop
leave
sbb
into
add
add
push
out
mov
add
and
xor
iret
daa
lahf
adc
sti
into
add
add
testl
pop
icebp
clc
xlat
movsl
out
mov
in
xchg
cmc
pop
jmp
sbb
jmp
repz
adc
shl
sbb
jmp
sbb
loop
loope
and
add
push
dec
sbb
into
hlt
clc
iret
mov
jecxz
ss
add
jecxz
push
dec
add
push
jmp
negl
sbb
xor
adc
and
sbb
xchg
mov
pop
mov
mov
mov
add
jae
or
mov
xchg
sbb
pop
push
xor
cld
scas
lret
jne
adc
cmp
test
loopne
sbb
adc
pop
and
xlat
lcall
or
mov
inc
xchg
xchg
in
lahf
cmp
or
fwait
mov
out
in
fwait
and
dec
pop
adc
or
adc
or
adc
push
sub
rorl
fwait
add
add
adc
push
sbb
xchg
add
adc
lcall
add
sar
stc
cltd
out
add
notl
cmc
mov
add
add
outsb
sub
aaa
and
out
fldl
inc
dec
add
loope
mov
loope
mov
mov
mov
and
loope
enter
clc
ffree
mov
jl
adc
sbbb
aad
in
jo
rcrl
rcll
cmc
mov
or
inc
add
push
in
sub
fst
sbb
sti
adc
add
ja
adc
ret
jecxz
test
add
pop
mov
jmp
aad
push
add
lcall
std
shll
adc
adc
add
xorl
xchg
fldl
sbb
hlt
add
test
cmpsl
adc
in
ficoms
sbb
push
mov
std
and
pop
aad
lods
sbb
fwait
mov
sub
adc
negb
or
in
add
xchg
in
int3
push
jecxz
adc
xchg
int
sbb
cmc
adc
sub
or
mov
jecxz
or
add
push
add
and
push
out
add
add
push
popf
jecxz
push
mov
or
adc
sbb
add
notl
mov
add
push
xchg
clc
sbb
nopl
push
cmpsb
jae
sbb
jmp
lds
repz
add
aad
ret
in
adc
out
jecxz
lds
adc
add
inc
adc
adc
inc
jecxz
fnstsw
xchg
aam
add
add
fstps
sbb
adc
sub
shll
jecxz
push
pop
iret
sbb
add
add
std
ror
or
cli
add
leave
adc
push
jno
icebp
test
xchg
scas
push
test
and
mov
in
ret
jnp
and
push
mov
les
dec
push
mov
arpl
aam
and
lds
icebp
xchg
sub
ret
jecxz
stc
push
dec
loope
add
xchg
mov
add
push
xor
loope
add
xchg
push
dec
and
das
scas
js
int3
jecxz
mov
stos
int
insl
lret
push
add
test
fucom
mov
scas
and
jecxz
aas
iret
push
lods
loope
add
xlat
cltd
stos
and
jecxz
aad
push
test
icebp
add
jp
and
pop
cltd
and
push
repz
dec
inc
jecxz
and
add
add
jecxz
or
jecxz
adc
repz
push
add
push
insb
fabs
adc
and
push
push
jecxz
stos
dec
adc
negl
enter
cli
fwait
or
mov
or
arpl
dec
std
sbb
stc
cltd
lock
negl
clc
rol
cmc
jne
adc
js
stos
xchg
icebp
fwait
movups
out
push
out
adc
stc
xor
fstl
and
add
jecxz
or
push
into
mov
shr
out
xchg
in
jecxz
loope
fstp
enter
fstpt
addr16
daa
icebp
mov
repz
in
es
mov
mov
adc
push
xchg
sahf
push
leave
loope
jne
and
arpl
aam
int
sbb
pop
cltd
lret
and
jecxz
out
leave
and
and
outsl
loope
arpl
cmp
pop
jmp
sub
ret
push
mov
mov
rorl
ficoms
inc
mov
popf
es
mov
jne
adc
ret
pushf
dec
inc
loope
cmp
mov
repz
in
cli
cltd
loop
mov
std
and
ljmp
mov
loop
cmpsb
mov
push
imul
adc
fsubl
repnz
fs
jmp
mov
mov
icebp
ret
push
test
push
jns
inc
loop
adc
pusha
and
jmp
and
sub
push
add
sub
push
mov
mov
adc
jle
popa
push
pop
test
push
rcrl
mov
sub
cmpb
jmp
hlt
sti
enter
push
dec
jmp
fistpl
sbb
shlb
adc
ja
jno
cmp
push
out
xchg
cmpsb
popf
popa
bound
sbb
inc
adc
cwtl
pop
scas
dec
push
mov
jecxz
and
and
push
mov
dec
or
jo
dec
loope
jns
pushf
nop
out
repz
mov
jne
pushf
jae
and
lcall
mov
sub
xchg
xorb
sbb
push
pushf
sub
adc
sahf
adc
adc
sub
add
ljmp
jne
cmp
xchg
imul
jg
aad
sti
into
fadds
push
imul
lahf
push
sbb
xchg
ret
pop
dec
je
call
pop
push
scas
rolb
dec
cwtl
movsl
cld
imul
sbb
jmp
dec
ds
rcr
add
clc
and
sbbl
adc
scas
mov
js
ds
cltd
or
add
or
push
and
and
push
jecxz
ds
daa
push
shll
xchg
or
mov
mulps
fcompl
add
lock
sbb
or
add
sbb
and
mov
cli
cltd
idivl
fistpll
test
push
push
rolb
loope
fcomi
sar
sti
adc
pop
pushl
aas
push
xchg
cmp
loope
sub
pop
and
lcall
adc
xor
repnz
mov
popf
pop
or
lret
sub
cmpsb
rcl
in
inc
sahf
fistpll
lods
popf
or
popa
sub
and
rorl
call
lods
ljmp
icebp
inc
popa
pop
push
mov
adc
loop
test
ljmp
ficompl
push
xchg
mov
jp
js
scas
mov
iret
xchg
xorl
je
adc
popf
bound
ret
cwtl
subl
jns
push
mov
pop
push
popa
inc
pop
pop
sti
mov
jecxz
lcall
popf
les
pop
xor
cli
pop
leave
jno
cwtl
les
pop
pop
xchg
into
data16
push
out
pop
jge
mov
inc
repz
xchg
sti
sbb
and
jecxz
adc
adc
add
and
pop
icebp
idivl
jbe
xor
push
pop
adc
iret
add
int
cmpsb
pop
adc
jecxz
jl
dec
int
ret
mov
nop
sub
loope
imul
call
cld
push
pop
call
shrl
test
add
das
imul
stc
push
sar
push
and
filds
jl
sbb
shl
test
or
shlb
int3
xchg
shlb
pop
jecxz
mov
rolb
imul
call
sub
jl
push
cld
pop
imull
xorb
dec
push
imul
and
mov
mov
xchg
mov
add
mov
jns
lods
xchg
push
test
iret
mov
fucomi
ret
aaa
inc
lds
in
or
icebp
mov
inc
repz
xchg
pop
inc
rorb
cltd
add
js
xor
js
add
pop
outsb
push
xchg
xor
in
pushf
cltd
test
jp
pop
idivl
pop
nop
push
imul
push
mov
pop
xor
sbb
cmp
sbb
jp
rclb
adcl
cld
fcmovbe
pop
pop
fwait
pop
popa
push
inc
out
roll
imul
in
test
sbb
outsl
pop
adc
add
add
int3
xchg
fdivrs
mov
xor
out
jg
jbe
add
mov
leave
shrl
cltd
xor
ss
repnz
ror
add
pop
add
jecxz
out
add
outsb
adc
sub
shr
test
push
insl
loope
cmp
movsl
add
mov
sbb
and
jecxz
adc
push
fstl
subb
and
pop
mov
stos
jno
scas
rcll
xor
sub
dec
mov
lret
adc
pusha
ret
pushf
push
je
jnp
ds
mov
dec
fs
mov
outsl
and
xlat
aaa
adc
out
or
or
pop
lcall
fxch
rclb
sbbb
test
jecxz
rcll
lock
sbb
push
clc
cmp
pop
xchg
in
stc
adc
fldl
adc
mov
xchg
jns
popa
sbb
fisttpl
aaa
fsubs
out
loopne
pop
jb
mov
push
je
jl
jo
mov
mov
xor
insb
out
icebp
mov
and
push
jg
enter
lods
mov
push
sbb
out
int3
sbb
fcmovne
mov
into
or
fadds
fldl
sub
test
fiadds
pop
pop
lea
or
jno
inc
xchg
lret
or
jecxz
pushf
cltd
inc
pop
sarl
dec
mov
mov
cwtl
xchg
and
lret
sub
int
mov
cwtl
cmpsb
adc
popf
adc
push
and
test
popa
arpl
out
subb
push
ficoms
jbe
cmpsl
insl
fnstsw
and
sub
fwait
xchg
xchg
mov
ret
jo
mov
and
arpl
insb
cmp
mov
insl
adc
ficoms
and
xchg
shlb
or
adc
lods
xchg
push
pop
cmp
leave
cmp
pop
xchg
sub
or
addr16
jecxz
int3
imul
jg
sub
lret
loope
int3
aam
arpl
aad
cltd
loopne
adc
sbb
sbb
fwait
sub
dec
imul
dec
xchg
fsubrl
test
lret
xchg
xchg
push
test
dec
xchg
pusha
and
icebp
in
sbb
fisubrs
mov
adc
mov
rcrl
std
mov
imul
inc
xchg
subl
ret
sbb
je
push
stos
mov
xchg
mov
dec
push
fdivr
push
jle
push
xchg
fistpl
leave
sbb
inc
addb
or
xchg
push
mov
mov
std
loopne
sbb
repnz
jb
leave
mov
jb
out
pop
jmp
xchg
imul
jmp
mov
pushf
aas
sub
inc
pop
sub
xlat
icebp
in
or
sbb
lods
sahf
call
mov
call
lret
add
jae
add
ror
scas
push
pop
std
repz
fcompl
test
sti
idivb
push
and
in
scas
lret
pop
mov
rcll
jmp
push
lods
and
shlb
and
jge
xchg
test
jecxz
insl
mov
push
mov
out
sbb
mov
test
fcoms
mov
rcrb
arpl
inc
stos
and
fyl2x
adc
dec
or
notb
repz
dec
mov
call
test
call
lds
repnz
and
xchg
mov
rorl
sbb
mov
inc
mov
sub
ficoms
pop
repnz
insl
push
data16
movsl
mov
and
cmp
std
sbb
jae
out
stos
mov
jmp
pop
xor
test
mov
sub
mov
repnz
and
jae
add
repz
mov
inc
icebp
in
xchg
jecxz
cmp
push
jecxz
jecxz
repz
mov
imul
repz
push
mov
jle
mov
adc
cltd
dec
pushf
xchg
sti
push
push
push
push
lahf
loope
jne
sbb
out
cltd
lea
mov
cmp
pop
sub
jl
mov
fwait
leave
std
push
xchg
jecxz
add
adc
and
gs
sub
inc
cli
addr16
pop
add
or
push
nop
mov
xchg
mov
andl
jb
addb
loopne
and
xchg
cli
pushf
enter
adc
push
addr16
fdivr
xchg
testb
fidivrs
add
jo
mov
or
jo
xor
mov
adc
loope
add
add
lahf
filds
push
push
fldl
loope
andb
sarb
xchg
fstpt
ret
mov
xor
add
add
and
xchg
xor
mov
adc
mov
outsl
xlat
xchg
or
add
mov
sbb
popf
fidivrl
xchg
imull
cmp
loop
sahf
arpl
dec
dec
fsub
sbb
pop
sbb
lahf
sbb
cmp
jno
sahf
cltd
jl
xchg
sub
rcll
adc
popl
rcr
dec
push
clc
and
cmpsb
fstps
sbb
and
xchg
addr16
pop
mov
jae
cld
jmp
pop
sarb
int
imul
addl
adc
jo
and
pop
stos
notb
fbstp
xor
jnp
pop
adcl
jmp
inc
xchg
or
pushf
popa
or
das
pop
xchg
mov
addps
xchg
popa
jno
shll
in
scas
lock
cmc
bound
jb
jne
add
bound
loopne
push
ret
push
mov
imul
inc
daa
push
in
repz
jns
jecxz
pop
pop
fdivr
pop
dec
jmp
mov
std
fwait
arpl
div
lea
mov
repnz
pop
mov
loope
inc
add
fscale
imul
jne
and
mov
sub
mov
sahf
shl
jae
aam
add
mov
hlt
add
ss
loope
mov
hlt
std
inc
cwtl
adc
mov
ffree
inc
cmp
mov
neg
rorb
pop
cmc
adc
pusha
ret
adc
outsb
dec
push
mov
sbb
lds
icebp
ss
rcll
ja
sbbl
or
mov
fsts
pushl
jnp
mov
xor
or
inc
std
fstl
sbb
popa
inc
fwait
je
hlt
cs
inc
add
imul
push
dec
xchg
mov
or
lods
or
mov
push
xchg
pop
dec
loope
les
adc
call
or
adcl
cmc
sub
push
jnp
imul
jbe
rcrl
xchg
jmp
jae
adc
enter
sbb
xchg
inc
push
add
dec
aaa
pushf
ja,pt
shlb
pop
jecxz
adc
add
sbb
rcl
dec
popf
push
in
testb
outsl
andb
add
sti
mov
ss
ljmp
cmpb
nop
cmp
fldt
in
lods
notl
loope
push
lods
inc
push
arpl
pop
ja
sbbb
jmp
adc
in
in
mov
add
adc
ja
adc
fisubl
loop
sbb
test
pushf
sbb
fldl
mov
cmp
bound
popf
sub
sbb
popa
adc
mov
out
push
je
mov
ja
addr16
int3
fnstcw
lods
xchg
jg
push
push
mov
testb
adc
jp
out
nop
jg
pop
add
fldl
or
subb
test
jecxz
je
enter
mov
gs
subb
or
loop
cmpsb
mov
jns
lcall
xchg
add
sbb
iret
idiv
xor
jae
sbb
mov
lret
or
jne
ret
jns
adcl
orb
xchg
dec
sbb
jne
dec
and
fs
push
clc
pushf
adc
xor
mull
loopne
jne
push
pop
jecxz
cmp
xor
int3
hlt
push
adc
out
xchg
pop
notb
pop
lea
popa
lods
daa
stos
cwtl
ret
rolb
jl
jecxz
cs
xchg
sub
icebp
pop
loop
xlat
inc
add
jne
xor
xchg
enter
mov
mov
xchg
push
jmp
enter
imul
imul
mov
insb
and
push
cwtl
lret
dec
sbb
dec
sub
sub
ret
pop
pop
ljmp
add
inc
jne
stos
adc
fstp
jp
cmp
cmpb
lea
test
lock
jecxz
aam
push
test
std
adc
jge
and
fiaddl
imul
lret
inc
dec
in
inc
cmpsb
loop
lds
jg
ss
push
xchg
or
jae
push
sbb
jmp
push
roll
popf
std
or
std
fwait
fstl
lcall
mov
cltd
dec
sbb
push
and
adc
add
and
adc
faddl
stos
fidivrs
sbb
mov
pop
add
daa
push
cmp
xchg
out
rcrl
jnp
js
mov
cli
fildll
mov
in
adc
mov
mov
jne
adcl
sub
and
negl
imul
cltd
jl
mov
sbb
fwait
leave
test
sbb
shlb
daa
fwait
and
fisubrl
mov
popa
and
mov
jmp
dec
les
pop
roll
inc
adc
sbb
mov
add
nop
icebp
xchg
imul
push
imul
xchg
in
idivb
popl
inc
pop
jecxz
icebp
pop
nop
inc
iret
add
pop
push
jle
push
adc
sahf
mov
push
jbe
push
aas
jnp
add
and
or
jns
xor
xchg
ret
out
cmpsl
adc
fs
xchg
sbb
rcrb
testb
jle
cli
lret
stos
pop
adc
daa
add
xor
adc
daa
sahf
mov
and
sub
cmpb
cmp
test
push
add
sbb
and
ja
sub
ret
mov
pop
jecxz
sbb
test
jo
pop
scas
sbb
jmp
push
jecxz
loop
pop
test
xor
arpl
xchg
dec
jmp
lods
data16
notl
jns
and
std
scas
and
imul
adc
sbb
mov
pop
ret
add
xchg
repnz
lcall
int
push
daa
ret
fisttps
into
push
add
inc
jecxz
cli
push
xchg
in
mov
repz
adc
jle
ds
xor
scas
addr16
sbbl
loopne
pop
lea
std
arpl
pop
and
sub
lock
xor
int
push
mov
push
test
and
call
mov
dec
and
jecxz
orb
xchg
mov
push
flds
rclb
xchg
push
pop
push
jecxz
ficoml
add
xchg
out
sahf
cmc
fwait
icebp
adc
inc
adc
or
inc
push
adc
test
and
fnstenv
rcll
pop
outsb
inc
andb
or
adcb
gs
and
mov
sub
iret
loope
dec
jle
and
arpl
jg
add
xchg
lock
decb
out
fdiv
add
dec
mov
mov
pop
push
into
or
stos
xchg
loope
cmp
sub
push
cmc
mov
sub
adc
mov
in
arpl
rorb
cmp
xor
adc
sub
sbb
mov
stos
fldt
data16
add
mov
cmp
or
add
inc
dec
cmp
push
mov
dec
negl
pop
sbb
and
push
mov
fwait
into
xchg
inc
cmp
lds
pop
fbstp
shr
mov
adc
sbb
negl
roll
or
incl
adc
push
jnp
xchg
sbb
cs
push
xchg
mov
inc
loopne
outsl
dec
fistpl
or
popa
ficoms
icebp
jl
lcall
or
jb
loope
fdivs
mov
xchg
push
jecxz
clc
mov
movsl
mov
aaa
mov
imul
loop
aaa
xchg
movsl
pop
xor
js
movsl
hlt
je
test
out
ljmpw
lock
sub
push
fcompl
fs
inc
mov
mov
fldl
in
xchg
xchg
add
sbb
cs
mov
mov
adc
add
rclb
mov
and
add
jecxz
jl
pop
es
push
jecxz
ret
das
cld
mov
gs
pop
mov
push
into
jecxz
gs
mov
xchg
ret
call
and
sbb
loope
repz
xchg
inc
inc
cltd
lret
cmpsl
add
and
lret
call
mov
arpl
mov
pop
aas
mov
sbb
pop
push
mov
cwtl
pop
xchg
nop
mov
jnp
cmp
movsb
sahf
cmp
or
adc
mov
fsubrl
inc
adc
pop
popf
mov
dec
cwtl
cmpsl
mov
jbe
pop
pop
and
push
add
icebp
rcrb
mov
je
inc
les
push
nop
aas
push
xchg
fdiv
push
aas
imul
popf
aaa
sub
inc
jbe
out
loope
cld
rorb
out
cmp
loope
cwtl
and
mov
sti
mov
jns
les
add
arpl
rclb
add
mov
add
adc
dec
pop
icebp
jb
arpl
sti
pop
lea
pop
sbb
arpl
jo
arpl
add
cmp
enter
andb
jecxz
push
inc
nop
loope
and
jmp
aad
push
pop
xor
cmpb
pop
lea
loope
xchg
pop
jg
arpl
stc
addb
leave
cld
xor
or
xorb
sbb
lret
leave
nop
push
add
sub
xor
xor
bound
inc
add
enter
lods
adc
or
sbb
bound
mov
mov
xor
add
fcompl
xor
adc
mov
addb
add
test
movb
ds
xor
addb
pop
inc
jns
mov
push
aad
pushf
adc
js
out
cltd
rclb
mov
add
sbb
or
add
push
and
icebp
clc
out
or
sbbl
sarl
lret
loope
add
inc
dec
lock
adcl
movl
cltd
sub
pop
mov
ret
pop
in
aaa
clc
pushf
ret
gs
sbb
xchg
cltd
ret
in
sbb
add
inc
add
shlb
sbbb
push
and
popf
adc
adc
adc
dec
idivl
mov
out
pop
and
into
mov
adcb
push
rcl
xchg
push
rolb
imul
cmp
in
jge
pop
stos
add
out
add
xchg
mov
push
add
mov
in
hlt
orb
inc
adc
jmp
cmp
mov
imul
jmp
add
fstps
mov
test
jle
xchg
dec
inc
and
cmc
shlb
mov
mov
aad
adc
iret
push
jmp
imul
cmp
div
jecxz
sbb
jp
adc
push
lods
dec
loope
sbb
jb
sbb
es
rcrb
addl
adc
or
es
jmp
inc
lcall
sbb
cltd
rorl
shlb
pushf
fldl
fistpll
mov
sahf
icebp
or
nop
test
or
je
dec
mov
sbb
negl
cltd
mov
jecxz
cwtl
cld
dec
mov
jbe
ds
push
adc
push
xor
mov
xchg
jge
xor
call
lods
loop
mov
sub
push
inc
shl
xchg
into
or
sbb
adc
add
push
mov
xchg
fdivl
jg
and
lods
cmp
push
add
add
loope
cwtl
pop
jbe
sub
xchg
andl
cld
sbb
cvttps2pi
ljmp
xchg
and
mull
mov
fucom
lds
lock
cmp
test
or
outsb
push
xchg
cltd
mov
insl
out
pop
addr16
jmp
icebp
sbb
or
jmp
push
sub
jae
adc
xchg
sub
sub
sbb
fsqrt
xchg
icebp
adc
push
out
xor
leave
cmp
or
test
mov
mov
cltd
ret
dec
adc
test
mov
in
loope
xchg
add
sbb
or
pop
js
or
sbbb
popf
inc
push
push
bound
add
jnp
fldenv
stc
fwait
mov
icebp
cmp
pop
mull
fcomp
add
rolb
test
loopne
xchg
sub
jae
inc
jge
into
ret
icebp
push
outsl
fistpll
and
outsb
mov
imul
rorl
mov
clc
or
xchg
not
sbb
sbb
xchg
aam
cltd
cmpsb
mov
jmp
clc
movsb
int
mov
sub
sbb
aas
loopne
push
repnz
jne
sub
imul
outsb
int3
imul
xor
pop
data16
adc
adc
sbb
loope
cmp
mov
xchg
rorl
adc
lods
pop
clc
dec
xchg
sbb
js
jle
mov
or
push
pop
push
mov
pop
xchg
inc
out
cmpsb
aas
cwtl
fimuls
scas
mov
xchg
fisttpll
mov
push
fcomi
add
in
sub
std
cmpsb
addr16
jnp
movb
lcall
mov
fistps
ja
cmp
and
adc
push
and
rorl
outsb
loope
push
sub
xchg
jb
sbb
es
mov
rcrl
fwait
and
or
out
xchg
add
add
sbb
sbb
fcmovnb
dec
pop
cwtl
pop
jbe
inc
int3
mov
test
xor
ret
imul
ss
mov
or
xchg
jl
sub
cmp
mov
xchg
sub
adc
cmp
and
lock
adc
test
mov
addr16
xchg
rcrl
push
mov
xchg
es
mov
jg
add
mov
outsl
fisubs
mov
adc
adc
sbb
rep
pop
bound
rcr
repz
push
call
xchg
mov
test
arpl
pop
ret
xlat
std
stos
dec
inc
pop
sahf
loope
stc
popf
data16
pop
imul
testb
ret
inc
out
and
sbb
push
or
loope
shl
inc
test
fabs
daa
push
lret
shlb
fists
in
out
call
pop
scas
test
mov
pop
or
push
in
jae
jno
daa
or
pop
fs
sub
and
jle
push
add
jb
cmp
or
jno
ss
sub
pop
je
jle
das
cmp
jecxz
push
or
sbb
test
pop
subb
push
repz
inc
push
dec
mov
push
add
cmpb
fildll
push
adc
mov
ljmp
pusha
inc
and
pop
adc
stc
pop
cltd
sbb
adc
fwait
ret
or
test
push
fdivrp
push
dec
mov
push
jg
in
sub
mov
jmp
imul
les
test
lods
and
lock
lahf
mov
inc
ret
mov
mov
and
std
cwtl
out
out
aas
lods
out
js
sahf
jmp
mov
mov
cltd
outsb
sub
stos
pop
jge
or
xchg
or
das
push
addr16
cmp
out
fistpl
repnz
inc
leave
pop
mull
cmp
dec
clc
pop
movsb
jo
lcall
adc
hlt
mov
push
cwtl
and
fldcw
xchg
adc
data16
lods
ret
imul
dec
lret
and
fadds
scas
or
push
int
mov
xorl
add
jb
mov
mov
mov
jp
push
xor
rol
dec
hlt
jg
or
push
cld
pop
cltd
adc
jecxz
sbb
mov
jecxz
and
inc
rcr
inc
xchg
mov
add
sub
outsl
push
negb
jb
shl
mov
sbb
or
test
push
pop
sub
in
sti
xchg
test
pop
cwtl
aam
or
icebp
dec
outsb
iret
js
sahf
mov
mov
fwait
sub
enter
popl
cwtl
arpl
jmp
push
rcrb
sub
lret
or
xchg
add
lods
outsb
mov
fildll
cmp
mov
fistl
adc
fisubl
adc
mov
cwtl
sbb
shl
add
outsb
adc
pop
dec
add
out
movsl
stos
cltd
insl
lcall
pop
imul
push
add
pop
adc
cmp
mov
dec
lret
in
jmp
cltd
dec
dec
insb
stos
ficoml
leave
js
push
pop
inc
fdivrl
negb
loope
and
jecxz
sub
push
mov
pop
sahf
mov
insb
dec
insl
add
pop
add
add
rol
fcom
rcll
sbb
fnsetpm(287
ja
or
mul
cmpb
push
push
or
adc
push
or
and
push
sbb
or
add
add
sub
shrb
add
pop
adc
aam
xchg
pop
or
xchg
jno
sbb
sub
pop
xor
and
jecxz
inc
mov
insb
into
push
enter
jl
mov
push
test
test
lahf
mov
cmc
addb
add
jecxz
loope
mov
sti
mov
smsw
fdivl
lea
sbb
adc
js
push
cltd
pusha
sub
std
mov
jno
jecxz
arpl
sub
add
int3
push
adc
sub
jl
sub
add
add
mov
xlat
xor
subb
mov
adc
gs
add
jmp
imul
loope
add
pop
xor
sbb
sbb
jp
cmp
out
sbb
adc
mov
jmp
fildl
push
jecxz
mov
and
dec
push
jecxz
jle,pn
imul
repz
mov
mov
fcmove
and
add
fmull
rolb
mov
cs
repz
mov
jecxz
or
testb
xor
or
or
std
test
mov
aaa
mov
xchg
insl
add
imul
pushf
cmp
test
aas
shlb
jnp
les
fwait
mov
xchg
or
jl
jae
xchg
add
out
je
lods
loop
mov
mov
sub
out
dec
outsl
xor
mov
sbb
ret
adc
cmp
cltd
push
mov
jnp
xor
push
enter
xor
cmpsl
call
add
pop
jge
outsb
sbb
cwtl
aam
dec
sub
xor
adc
sbbb
int3
mov
lahf
mov
std
sub
mov
mov
jmp
mov
sbb
lods
scas
clc
mov
dec
and
mov
das
arpl
imul
repz
arpl
lock
roll
pop
lods
adc
inc
jae
fsubrs
xor
inc
dec
ds
jns
fadd
cltd
mov
pop
push
mov
sub
pop
fildl
enter
shl
xchg
or
sahf
outsb
add
rclb
jge
std
call
mov
push
cltd
outsb
mov
pop
repnz
or
adc
push
push
popf
mov
flds
cwtl
out
or
sub
xchg
mov
lock
std
push
out
mov
insl
push
cld
xlat
mov
pop
lret
xchg
add
or
jecxz
lcall
and
outsb
sbb
adc
and
test
shlb
cs
adc
adc
cld
pop
sbb
loopne
mov
xchg
subl
inc
sbb
sbb
mov
imul
xor
cli
adc
sbb
mov
sbb
add
push
or
adc
cltd
jge
cmp
out
arpl
clc
pop
xchg
arpl
mov
mov
bound
mov
adc
in
jl
scas
scas
mov
mov
les
or
jge
lods
inc
je
mov
lea
scas
inc
mov
push
rorb
scas
sub
sbb
xchg
cltd
adc
fsub
inc
outsb
fcoms
test
pusha
xlat
mov
xchg
testl
sbb
lods
clc
orl
or
in
or
mov
xor
fdivl
pop
cmp
and
adc
loope
insb
xchg
jns
mov
inc
ret
cli
xchg
idiv
insl
add
adc
and
xchg
cmp
fwait
out
and
push
sbb
or
rcrl
call
or
push
mov
sbb
xor
mov
leave
movb
popa
or
ds
std
rorl
fisttps
loope
or
cmp
push
mov
add
mov
movsl
sbb
and
add
ret
hlt
mov
jmp
out
stos
push
add
and
repz
cmpsb
jne
cmp
fwait
sbbb
mov
pop
mov
mov
mov
add
xor
nop
aas
sub
adc
push
xchg
sahf
cltd
and
sbb
pop
adc
add
cltd
call
cltd
test
cmp
xor
adc
or
mov
push
cmp
in
adc
inc
ds
and
lahf
jae
and
inc
sahf
push
enter
clc
test
out
insl
stos
repz
lret
pop
add
cs
sbb
push
cmp
add
adc
mov
rorl
lret
or
sarb
leave
in
push
mov
mov
sub
jl
rcrl
sahf
out
js
loope,pn
add
in
jo
jecxz
fs
call
mov
or
jp
pop
shl
into
adc
enter
pop
lods
sub
cli
fs
mov
shrb
and
minps
cmp
mov
sub
jmp
mov
sahf
push
dec
pop
sub
mov
adc
xchg
imul
in
rcrb
jbe
xchg
mov
xchg
mov
ret
pop
je
icebp
fcomps
mov
sbb
push
or
cmp
inc
loopne
xchg
push
pop
icebp
cmp
push
jle
dec
ficoms
fstl
sbbb
sub
push
icebp
sahf
push
pop
pop
adc
call
clc
sbb
pop
sti
cwtl
ja
ja
ret
pop
jmp
test
xlat
bound
cwtl
jnp
pop
aaa
adc
mov
icebp
call
std
test
push
stc
xor
dec
cwtl
imul
lea
sub
push
gs
fwait
orb
mov
daa
aaa
mov
in
mov
mov
sahf
inc
mov
pop
jnp
jb
outsb
inc
pusha
inc
aad
and
cmp
and
std
repz
in
xor
add
inc
cmp
xchg
jmp
std
sub
sub
and
cld
inc
add
xchg
mov
cli
rcl
popf
shl
inc
hlt
mov
or
pop
mov
rcrb
xor
subb
pop
lods
push
cmc
cli
dec
or
mov
and
pop
adc
ds
sub
sahf
aam
xchg
iret
pop
or
cmpsb
dec
lods
mov
stos
in
push
push
and
mov
cmc
adc
add
popf
and
cmp
cmp
ret
add
push
or
fwait
xor
test
mov
sub
cmc
clc
sbb
mov
xlat
js
mov
fstp
sahf
subb
sahf
sahf
js
mov
icebp
out
sbb
sub
es
ret
xlat
dec
cmp
mov
incl
jecxz
push
inc
mov
inc
push
bound
test
sbb
mov
fdivr
adc
push
inc
fidivrs
ljmp
std
sub
iret
inc
jp
jmp
push
xchg
pop
push
add
js
xlat
cwtl
dec
xor
sbb
sti
and
aad
es
sbb
popa
sbb
push
loop
sub
js
stos
xor
cwtl
xor
and
cmc
pop
test
and
call
das
xchg
push
adc
pop
sbb
or
fdivr
and
sbb
sub
mov
fstps
adc
xlat
mov
or
popa
xchg
mov
push
push
in
repz
iret
adc
mov
and
fbld
and
loope
ret
dec
lcall
xchg
fidivs
push
lret
jp
repnz
mov
xor
andl
stc
ljmp
imul
push
pop
mov
jb
seto
lahf
xchg
stos
jno
shlb
mov
push
cltd
jnp
divb
jg
cld
iret
cwtl
cltd
andb
xchg
mov
jmp
ss
call
xlat
pop
or
cmp
jns
fists
dec
lea
cmp
push
xchg
sbb
dec
jbe
test
or
into
push
and
add
pop
les
repz
pop
test
sub
dec
mov
fstpt
fistps
aam
sbb
jp
lcall
and
xor
xor
fcoml
fwait
push
jmp
lods
mov
xor
popf
cld
jno
or
out
sub
loope
mov
pop
mov
or
movb
and
rorb
adc
idivl
and
lea
sbb
pop
in
jb
pop
sbb
sbb
fisubl
adc
xchg
sbb
adc
xchg
adc
pop
dec
rcl
pop
push
sahf
jne
cwtl
and
inc
subl
jl
xor
pop
ja
pop
cmp
add
orl
pushf
xchg
je
or
jns
clc
imul
mov
cwtl
sub
mov
xor
cmc
mov
test
rcrb
pop
ljmp
mov
fucomi
int3
mov
jne
add
sbb
push
and
and
mov
adc
sbb
jge
adc
clc
cmp
xchg
pop
dec
xchg
fists
leave
and
mov
jo
ret
adc
jb
imul
sahf
fcomip
add
stos
rcll
cwtl
cli
xor
adc
xlat
sub
sbbl
and
xchg
imul
pop
xlat
bound
sub
xor
sbb
je
push
insl
ret
add
imul
cwtl
mov
lock
in
in
xchg
add
or
mov
xchg
mov
repnz
add
ret
mov
loop
in
or
and
inc
or
stc
jne
data16
xchg
add
pop
test
cmpsl
pop
mov
adc
aad
jmp
mov
insl
pop
sbb
dec
cmp
sbb
out
sarb
mov
adc
push
rorl
mov
xchg
push
outsb
pop
and
or
jge
mov
fsts
insl
jne
out
cmp
std
mov
lods
sahf
dec
or
fwait
scas
shr
push
popf
arpl
bound
subb
xor
adc
lock
sbb
in
xchg
xchg
mov
andb
add
lcall
push
inc
push
mov
fcmove
cmpsl
push
xchg
sbb
sbb
inc
icebp
or
movsb
adc
movsb
ret
inc
add
jno
adc
mov
outsl
and
icebp
cli
repz
inc
fcoml
xor
cmpsl
mov
out
mov
sbb
fsubrs
add
xchg
insb
mov
movsb
pop
add
sub
out
add
push
xchg
test
imul
pop
arpl
xor
adc
nop
lock
sub
push
scas
sbb
xor
in
nop
insl
adc
in
test
imul
fcoms
int
or
mov
mov
fs
xchg
add
data16
ljmp
pop
loopne
mov
sbb
sub
push
mov
pushf
cmp
insb
sti
cmp
es
push
or
mov
addr16
inc
add
stos
sbb
pop
and
sbb
mov
addb
sbb
and
inc
sbb
sub
cmp
test
out
cmp
add
lds
popa
xchg
movl
pop
rcl
adcl
in
mov
lds
sub
push
jl
scas
pop
and
icebp
lds
and
add
and
addb
mov
orl
data16
sub
mov
insl
mov
cmpl
loope
jb
xor
inc
dec
sbb
mov
pop
push
int3
cmp
add
adc
mov
mov
jecxz
inc
xlat
xchg
cltd
xor
in
mov
sbb
rcrb
cltd
pop
lcall
push
adc
sbbb
xchg
mov
fwait
xor
mov
mov
add
js
shl
mov
and
stos
pop
or
sub
int3
popa
mov
mov
pop
out
imull
inc
pushf
fs
push
repnz
lods
loope
mov
call
add
cwtl
pop
adc
pop
or
push
sub
fcmovne
push
test
inc
cld
shrb
pop
andl
mov
cld
jnp
xchg
dec
or
arpl
aad
fdivrs
mov
push
fisttpll
or
imull
or
mov
and
xlat
push
out
push
mov
jae
out
adc
or
pop
xor
xlat
push
adc
cs
rolb
mov
cmc
aas
bound
mov
cwtl
mov
loop
imul
cmp
cmp
faddl
jg
sbb
fldenv
mov
xchg
sbb
inc
adc
clc
fnsave
sub
jl
mov
out
fdivrp
mov
mov
fnstenv
sbb
inc
mov
stos
xchg
sbb
arpl
cmp
and
repz
dec
fdivrs
lods
sbb
jge
iret
pop
test
bnd
or
enter
mov
int3
sub
xchg
hlt
clc
aam
or
mov
filds
mov
inc
push
lea
add
fdivs
outsl
testb
iret
icebp
inc
pop
int
jg
add
inc
xchg
mov
fstpt
jecxz
cmp
mov
pop
sub
xchg
sbb
pop
cmp
add
or
aad
mov
popa
jl
ja
imul
pop
push
std
push
xor
mov
aas
cmp
je
xchg
jae
pop
adc
or
enter
pop
push
out
and
sbb
cld
xchg
xchg
ds
cli
xchg
cmpsl
mov
lahf
or
das
inc
jle
jmp
and
pushf
xchg
inc
std
xorl
lock
mov
mov
rep
mov
sub
adc
mov
pop
xchg
icebp
je
push
fstpl
sub
push
clc
fmuls
push
push
shrb
stc
jp
ret
loope
dec
inc
push
orl
mov
pop
cld
iret
repz
adc
lret
mov
cmp
fcmovne
aad
test
jne
rcrb
ret
das
or
cli
test
ret
ret
hlt
cmpsb
out
dec
sbb
jbe
xchg
cltd
scas
add
push
fsubl
mov
xchg
xchg
sti
fwait
int3
pop
sub
rcll
adc
insl
pop
xchg
push
jne
lock
add
bound
pushf
jecxz
repz
sub
dec
add
inc
repz
xor
adc
cmpsb
nop
stc
stc
repz
aam
jecxz
jecxz
jo
sbb
push
imul
cltd
xchg
push
push
sub
push
adc
sub
add
inc
rorl
roll
adc
aaa
xchg
mov
add
loope
mov
sub
pushf
ret
sub
fadd
or
jg
lods
imul
sbb
out
xchg
adc
cs
sbbl
clc
push
addl
xchg
stc
frstor
dec
mov
mov
out
lret
mov
sbb
loop
push
je
loope
pop
sbb
stc
lock
mov
or
mov
pop
jp
repz
jp
std
adc
scas
lahf
pop
mov
sbb
adc
sub
or
mov
push
lcall
je
lahf
lods
cwtl
imul
gs
lock
add
and
jne
pushf
push
sbb
push
sets
xchg
push
xor
mov
sbb
or
je
fisubl
sbb
lods
movsb
bound
mov
jno
repz
loope
jbe
push
lea
sbb
push
mov
std
mov
clc
or
mov
fcmovb
push
stos
pop
cmp
sbb
repz
js
adc
dec
push
rolb
loope
jbe
test
negb
loope
and
jp
sub
shrb
data16
arpl
test
test
xor
and
cltd
std
dec
ja
push
xchg
notb
dec
dec
std
sbb
cltd
rcrl
xchg
or
jecxz
pop
iret
dec
loope
out
inc
repnz
loope
mov
inc
sti
pop
or
fbld
scas
mov
into
inc
fdivs
push
adc
jg
push
sbb
adc
nop
das
stos
jl
fisubrl
or
pop
or
inc
mov
aas
stos
pop
push
push
mov
jl
push
test
and
sbb
je
adc
or
ljmp
or
pushf
sub
or
add
je
movlhps
sub
mov
mov
sbb
stos
inc
lcall
or
xchg
push
and
xchg
dec
dec
sub
popf
push
mov
pusha
xor
test
and
and
jmp
or
out
imul
cld
sbb
xchg
pop
and
cmp
mov
loop
mov
fstp
rorl
test
add
add
adc
add
pusha
loope
xchg
arpl
jae
lock
adc
insb
push
fdivrl
in
fcoml
sbb
loop
loope
sbb
rcll
add
in
fisubs
test
out
mov
push
cld
push
loop
sub
push
inc
fucom
mov
adc
in
fdivs
clc
add
loope
les
mov
out
fwait
ja
sbb
dec
popa
ja
push
fadds
xor
fwait
xor
arpl
pop
nop
popf
adc
fwait
mov
add
std
and
insl
sbb
sub
jge
fwait
decl
cmp
dec
jge
and
jmp
dec
call
ret
jbe
or
or
mov
or
push
dec
test
gs
pop
sub
push
nop
pop
dec
pop
pushf
popf
mov
adc
fwait
ret
sub
cmpsl
stos
add
lods
es
sahf
xchg
adcl
sbb
icebp
arpl
cmp
push
jnp
imul
divb
inc
shl
pop
mov
pop
jns
pop
mov
inc
ret
pop
cltd
and
sbb
jne
loopne
sbb
mov
out
xchg
out
enter
push
pop
andl
lcall
scas
mov
lret
icebp
push
or
sbb
out
mov
dec
data16
sbb
mov
rolb
or
mov
mov
inc
adc
ret
int3
loop
les
push
push
pop
mov
sbb
fwait
sub
adc
and
lahf
sti
inc
gs
push
fdiv
lcall
fisubl
addr16
mov
or
push
pop
mov
fadds
loope
test
enter
jbe
loop
aad
icebp
repz
cmp
out
pop
sbb
repnz
movsl
and
lea
jbe
cmpsb
stc
mov
cmpsb
jmp
cmc
in
xchg
add
or
sub
and
pop
or
jb
sub
sahf
cltd
xchg
loopne
pushf
add
pop
icebp
pushf
mov
and
popa
and
pop
pop
imul
arpl
nop
dec
andl
xchg
test
mov
pop
pop
shl
dec
jle
xor
insb
out
and
jno
cmc
add
lods
sub
add
mov
mov
notl
cli
adc
mov
pop
in
cmp
arpl
or
mov
insb
push
or
xchg
jl
mov
mov
insl
mov
jle
xor
imul
mov
mov
mov
dec
sub
repnz
cmp
jmp
mov
add
cwtl
cmpl
mov
fbld
std
popf
jecxz
fwait
sub
mov
mov
mov
test
jg
xchg
hlt
adc
mov
fsubrs
mov
sbb
cmp
aam
pop
mov
cmp
loope
xchg
dec
aad
or
and
and
sbb
lods
jbe
xlat
jp
mov
out
push
sahf
fstl
rorl
or
add
push
fcoms
xor
pop
ds
push
orl
outsl
call
cmp
or
popa
mov
sbb
stc
outsb
pop
adc
mov
int3
and
add
mov
and
jo
jae
pop
xlat
daa
daa
adc
ljmp
rcrl
into
cmp
add
xlat
sub
pop
sbb
cmpsb
adc
stos
cmpsl
bound
in
stos
mov
push
leave
adc
pop
mov
arpl
jecxz
dec
cmp
stos
or
test
or
push
daa
subb
xchg
insl
mov
cltd
andb
cmp
cmp
and
fiadds
or
daa
dec
mov
loopne
loopne
xor
cmp
xor
dec
clc
popf
pop
out
inc
idiv
adc
jge
lea
sbb
cmc
dec
push
add
adc
push
mov
imul
insl
jo
mov
lods
xor
std
cmpsl
add
xchg
rcl
xchg
bound
fwait
es
and
das
mov
and
cli
ljmp
stos
mov
jb
push
xchg
jecxz
inc
call
xor
or
jge
sbb
sub
rcll
adc
jnp
dec
cmp
sbb
jmp
and
lcall
mov
roll
orb
add
or
orb
jle
cmpsl
sbb
inc
dec
test
pushf
jecxz
push
or
cmpsl
ret
mov
jns
pushf
push
rcll
fcomps
movsb
inc
pop
decb
or
push
lock
sbb
dec
jg
sub
stos
fnstcw
icebp
add
loopne
mov
adc
ret
inc
into
cwtl
rorl
imul
and
sarb
aad
inc
adc
cld
in
xchg
jmp
inc
cmc
cmpsb
xchg
cmpsb
mov
mov
stc
insb
sbb
or
xor
xchg
inc
cmp
push
hlt
loope
ret
sbb
dec
jge
ret
dec
ret
in
nop
jmp
in
dec
and
xchg
adc
cmp
addr16
pop
dec
push
and
cld
stc
push
fsubr
movsb
loop
les
xor
or
pushw
push
jge
fimuls
lods
jb
test
jo
push
cli
popf
sbb
fistpll
fsubp
push
or
out
sub
jmp
movsl
call
rcrb
fxch
xor
stos
inc
cmp
push
cmp
icebp
fwait
lret
das
ss
lds
and
insb
pop
jle
jmp
sbb
sbb
jno
pop
repnz
js
xchg
jnp
test
pop
adc
cmp
es
push
pop
add
xor
imul
sub
add
and
inc
cmp
movsb
clc
nop
xchg
mov
mov
mov
and
and
fdivl
insb
xor
into
pop
xchg
insl
clc
in
lods
daa
push
push
sahf
lock
pop
lea
sahf
insb
adc
xor
sub
jae
xchg
xor
jae
adc
sub
push
dec
insb
cwtl
cwtl
add
fisubrl
negb
mov
insl
and
stc
mov
and
mov
daa
mov
and
mov
out
xor
fsts
mov
test
push
pop
out
bound
push
mov
sub
xchg
jg
xor
out
ficomps
sub
out
adc
mov
sbb
sbb
dec
je
adcb
mov
mov
pop
fildl
pushf
pusha
or
in
filds
add
sbb
hlt
jnp
mov
or
aaa
adc
add
std
sbb
mov
add
push
imul
ljmp
stos
or
sub
mov
or
or
int3
mov
test
sbb
loop
pop
pop
cmpsb
ret
fwait
push
bound
or
pop
aas
rcrb
mov
stos
add
popf
idiv
xchg
insl
cmp
mov
xchg
sahf
arpl
dec
dec
sbb
xchg
mov
es
imul
jnp
stc
sbb
shlb
jne
aad
jl
cwtl
addr16
or
popf
add
pop
jl
aas
jle
inc
jg
imul
pop
dec
sub
sti
pop
js
add
and
mov
sub
and
mov
xchg
mov
sti
xchg
lock
mov
je
clc
sbb
jg
add
andl
subl
mov
scas
push
sub
add
mov
std
jno
jecxz
push
sub
jae
mov
stos
push
fnstsw
mov
outsb
add
lods
in
pushf
les
sub
jns
xor
sbb
xor
lods
stos
test
jb
jne
ret
add
mov
push
loope
jmp
or
pop
sti
add
cmpsb
pop
and
push
sbb
inc
loopne
pop
lret
popf
loopne
decl
jmp
je
push
ret
lds
int3
lea
bound
sub
push
sbb
stos
mov
mov
sbb
inc
sub
mov
dec
xor
roll
sbb
jmp
pop
repnz
mov
pusha
aad
insl
jnp
mov
or
out
mov
mov
dec
loope
xchg
sub
xlat
push
out
push
sub
inc
fdivrl
add
mov
mov
es
xchg
fistpll
xlat
and
out
xchg
ds
std
push
adc
cmpsl
lret
pop
loope
adc
sub
fmuls
mov
mull
or
sbb
scas
lret
cli
popl
lods
aas
cmp
leave
ss
clc
and
xchg
sub
sti
add
jbe
imul
jecxz
add
movsb
cli
enterw
add
dec
jp
sub
sub
pop
xor
rcrl
and
pop
mov
aaa
sbb
hlt
add
out
fimull
loope
std
cmpsb
mov
and
push
add
xorl
lods
sbb
stc
jno
sbbb
or
jp
test
xchg
xor
std
adc
sbb
mov
ror
xor
jecxz,pn
pop
mov
xchg
scas
sbb
shlb
fldt
add
lcall
repz
xor
lock
add
cmc
mov
mov
pop
pusha
testb
fadds
cs
jl
jo
jge
xchg
lods
or
into
mov
clc
ss
cmpsb
popf
add
sub
push
fwait
mov
dec
insb
nop
cmpsl
push
xchg
shrb
dec
nop
cltd
adc
or
js
jno
lea
pop
xchg
stos
je
push
xor
inc
pop
fisubrl
lea
push
push
ffreep
outsb
rol
movsl
pop
or
dec
ja
xor
fst
js
mov
push
push
jecxz
and
dec
pop
xor
icebp
scas
xchg
shlb
jg
inc
lds
mov
cli
das
bound
insl
rcrb
neg
and
jns
cmc
or
push
aam
sbb
fst
add
pop
push
dec
mulb
mov
inc
pop
add
out
jae
jp
or
pop
or
out
pop
insl
pause
das
push
or
rclb
sub
pop
pop
cmpsb
push
xor
pop
shlb
mov
mov
push
repz
inc
xlat
sub
cld
pusha
push
add
leave
dec
fucom
shlb
imul
or
fwait
int3
pop
fildl
rorl
adc
cmp
filds
xchg
or
sahf
popa
lock
iret
sbb
subb
test
daa
add
push
adc
inc
adc
movsl
push
mov
icebp
jp
cmpl
mov
add
add
ret
or
mov
jl
cltd
cld
adc
jecxz
je
fwait
jge
sub
in
pop
jle
or
jae
ficompl
test
filds
jle
push
xchg
icebp
or
push
sbbl
xchg
das
adc
aad
jg
push
sbb
lret
adc
fisubs
jb
lock
adcl
sbb
adc
add
je
in
add
lods
aas
cltd
fmull
fldcw
adc
sbb
leave
aas
loopne
pop
subb
sub
inc
push
imul
jl
sbb
sbb
or
shl
mov
ret
popl
and
fnstsw
lret
pushf
push
mov
jecxz
mov
jecxz
pop
addb
icebp
add
ret
dec
xchg
add
push
sub
push
sub
pop
xchg
test
inc
std
out
sbb
sti
push
and
loop
push
jecxz
div
adc
pop
sub
push
imul
xchg
and
dec
mov
adc
xchg
push
jl
scas
xor
lret
adc
cwtl
xlat
add
xchg
mov
lock
cli
push
inc
xchg
adc
add
mov
cmp
add
mov
xor
or
add
xchg
cli
xchg
lahf
push
xor
cld
mov
fs
jmp
rorl
test
jb
mov
pop
jge
dec
push
fwait
xor
mov
lea
xor
nop
xor
fwait
and
jecxz
adc
addb
dec
adc
rorb
lret
mov
dec
adc
cli
add
sbb
dec
xchg
roll
or
addr16
ret
mov
scas
inc
test
mov
rorb
lods
and
mov
nop
pop
aas
std
iret
fs
sbb
push
xchg
sbb
cmp
ror
xor
daa
mov
rcll
inc
mov
lds
xchg
mov
comiss
dec
xor
xchg
bound
jo
outsl
negl
icebp
inc
inc
xor
inc
test
cltd
inc
xor
push
lock
mov
push
fiadds
xorb
jge
mov
adc
mov
xchg
call
and
sbb
pop
xchg
sub
lcall
mov
cmp
mov
push
popa
inc
adc
repz
push
jg
mov
lock
xchg
xchg
add
loope
shlb
jmp
and
sbb
in
into
or
xchg
fcomip
out
sbb
je
nop
sbb
jne
xchg
adc
or
or
mov
xchg
mov
mov
stos
or
test
inc
leave
movsb
das
adc
push
add
jecxz
mov
jbe
sbb
xorb
xlat
xor
mov
or
subb
or
push
jo
pop
xchg
xchg
pop
iret
adc
arpl
call
cltd
push
rcr
or
jb
push
xchg
imul
jno
dec
adc
arpl
sti
sar
adc
mov
mov
int3
mov
ret
mulb
clc
xor
mov
add
mov
xorb
shl
lods
xor
add
je
and
das
int3
fimuls
push
test
xchg
xchg
fst
jecxz
dec
add
lods
mov
add
jecxz
ja
in
add
or
xorb
jbe
pop
jnp
ficoms
clc
inc
add
out
sbb
sbbb
cltd
divl
cltd
sub
mov
jmp
fistl
in
jecxz
sar
test
cltd
mov
shlb
mov
sbb
push
aad
xor
ljmp
xchg
sub
cmp
adc
mov
shlb
pop
out
and
roll
xchg
out
pop
mov
dec
rcrb
ljmp
add
pop
cmp
push
mov
loope
fildl
cltd
je
and
and
jecxz
int3
in
inc
sahf
mov
dec
sbbl
push
mov
sbb
in
jl
push
or
xor
jnp
mov
fimuls
push
inc
clc
cmpsb
sub
pop
cli
sub
faddl
xchg
int3
rolb
add
xor
scas
gs
add
sub
jecxz
inc
jg
xchg
adc
sbb
mov
adc
jle
and
and
ss
adc
push
adc
ss
pop
push
test
cwtl
xchg
mov
adc
push
test
in
and
nop
push
test
mov
adcb
adc
stos
ss
sbb
mov
sbb
test
xchg
imul
cmp
or
adc
loope
dec
xchg
insl
sbb
fcoms
pop
ds
sub
shll
stc
repz
push
add
add
sbb
mov
add
mov
dec
fistpl
or
nop
cmpsl
adc
xor
stc
ds
fdivl
add
adc
and
cltd
sbb
adc
cltd
scas
aaa
nop
lea
and
pop
sbb
popa
sbb
retw
scas
and
ret
aas
mov
in
gs
push
dec
mov
pop
bound
icebp
sbb
sbb
pop
rorl
mov
ds
fucom
loope
mov
nop
add
mov
cltd
insb
lret
mov
mov
cltd
loopne
cltd
mov
mov
std
sahf
xchg
sbb
sbb
popa
in
push
aam
ljmp
fs
sbb
mov
test
pop
arpl
adc
ret
mov
or
jnp
movsl
jmp
cld
and
int3
sti
fstl
lret
fiadds
pop
mov
cwtl
cmp
cmc
mov
lret
dec
xor
fsubl
mov
xchg
mov
sbb
inc
icebp
cmpl
xchg
jae
sbb
jecxz
xor
data16
pop
mov
xor
and
push
add
add
mov
add
rclb
adc
adc
orl
rclb
mov
inc
cmp
sbb
sbb
mov
loop
sbb
inc
jno
pop
sbb
ret
fcmove
cld
mov
push
jge
and
rorl
aam
and
data16
out
mov
insl
sahf
mov
sti
cmp
sub
jne
push
pop
jbe
pop
jge
sub
gs
sub
and
xchg
add
jle
std
mov
test
sbb
imul
jecxz
fldcw
lcall
fstl
inc
addl
push
cwtl
icebp
xor
into
fadds
dec
push
stc
xor
and
cltd
ss
push
mov
flds
shll
sbb
mov
or
and
dec
fwait
sbbl
and
jnp
lcall
cmpb
jns
and
and
enter
mov
xor
adc
lret
in
pop
mov
mov
push
cltd
js
mov
sbb
int
rcrl
sbb
stos
mov
test
int
push
adc
sbb
dec
xchg
cmp
push
fstpl
add
cmpsb
xor
adc
sub
loopne
ret
cmpsb
sbb
sub
mov
adc
xchg
adc
mov
loop
bound
pop
roll
cmp
xchg
das
js
fs
cld
pusha
mov
mov
mov
mov
rclb
cli
xor
mov
lods
mov
xor
mov
sub
xorl
cmp
std
mov
frstor
ret
inc
mov
into
test
or
ret
xchg
icebp
dec
loope
push
hlt
int
movsl
mov
hlt
les
cltd
jae
fnop
test
xchg
cmp
sbb
andl
mov
mov
or
sbb
jp
ret
loope
add
imulb
jmp
les
adc
std
int
pop
push
imul
pop
fstl
into
cmp
pop
push
shrb
cmpsb
push
jne
and
mov
cmp
and
loope
cmp
lods
xchg
mov
dec
out
jp
add
sbb
xor
pop
test
fwait
daa
mov
push
lods
mov
xor
jle
int
daa
push
dec
push
sub
push
xchg
mov
popf
and
and
push
cmp
popf
popf
fldt
adc
pop
testl
mov
fstps
xchg
out
mov
fstpl
xchg
and
es
stc
or
push
out
out
xchg
mov
cmc
adc
adc
test
stos
or
xchg
in
pop
mov
dec
pop
js
lea
fmul
cmp
sbbl
out
std
dec
popf
push
jns
repnz
dec
inc
mov
popf
out
mov
cmp
fidivl
mov
push
jecxz
outsl
mov
cmpxchg
cltd
out
mov
insl
xor
add
ret
inc
jp
pop
aas
sub
es
dec
shlb
mov
cwtl
aad
sar
dec
fstpl
sbb
cmpsb
push
pushf
scas
fldenv
adc
fsts
sub
popl
dec
push
insb
in
es
fcoms
inc
fwait
popf
mov
adc
push
out
ret
push
xchg
sub
cmpb
jl
push
mov
test
jle
dec
push
pop
jle
cmpsl
xor
pushf
rorl
test
push
sub
fstl
and
mov
out
ja
mov
adc
xor
insl
mov
xchg
rcrl
jge
arpl
push
sbb
mov
mov
jnp
push
imul
cmp
pop
inc
jle
sub
jecxz
sahf
loope
mov
and
and
xchg
fdivrs
mov
push
gs
pop
push
ss
enter
add
mov
cmp
cmpsb
mov
mov
sti
add
ret
adc
cmpsl
nop
ds
aad
arpl
nop
and
or
and
idiv
add
sub
cmp
xchg
int3
psadbw
sti
jno
nop
fs
add
jp
mov
inc
jmp
push
push
lret
fiadds
sbb
and
jns
or
add
jb
addr16
pop
and
icebp
push
jbe
push
push
lret
leave
add
adc
sbb
xor
arpl
aaa
cwtl
imul
shrl
aam
test
xchg
les
fwait
inc
xchg
fistps
jns
loope
add
orl
outsb
xor
ficomps
call
jne
and
testl
aas
roll
jge
aam
mov
jge
ds
into
sbb
jl
sub
int
ss
rcrb
mov
popa
push
mov
pop
movsl
sub
xlat
popf
push
jnp
pop
xchg
inc
mov
adc
dec
mov
out
cli
jge
xchg
es
push
sbb
clc
mov
cmp
dec
iret
mov
mov
sbb
call
jg
push
adc
fmuls
xchg
pop
test
loopne
enter
lret
or
add
xchg
ja
int
sbb
add
insl
aam
movl
cli
sbb
xchg
sar
or
dec
cmp
add
xchg
mov
fildl
cmp
in
clc
xchg
xor
cmp
jae
jno
stos
cmp
sbb
out
add
push
aas
xchg
pop
add
inc
bound
pop
xor
lcall
popa
push
xchg
sub
les
sarl
into
addr16
push
sti
mov
pop
sbb
out
sbb
cli
out
jae
imul
test
xchg
mov
mov
mov
cmpsl
mov
cld
rorb
inc
jbe
xor
xor
ret
push
or
ret
and
mov
icebp
fwait
inc
cwtl
mov
pop
arpl
xor
in
adc
or
cld
push
fcomip
jle
dec
pop
sbb
icebp
jp
mov
add
fs
or
adc
mov
fdivrl
pushf
xchg
and
repz
push
xchg
cmp
push
icebp
out
sbb
cmp
or
or
out
xchg
jnp
dec
cmp
xchg
int
frstor
leave
push
dec
sbb
or
jns
mov
xchg
xchg
ljmp
mov
push
sub
adc
mov
leave
jb
push
pop
jle
jno
je
es
cmc
pop
and
jecxz
mov
mov
xchg
mov
sti
sti
bound
cmp
sti
xchg
cltd
dec
adc
sti
xchg
mov
mov
inc
fwait
and
push
adcl
loop
ror
mov
lock
or
xchg
jg
adc
xor
inc
xchg
pop
push
pop
popa
shr
sti
xor
mov
pop
ret
fadd
daa
dec
or
xor
test
mov
lretw
mov
sbb
mov
outsl
test
inc
or
xlat
fstl
daa
insl
and
out
inc
push
or
mov
cld
inc
into
lea
xchg
jmp
lret
mov
adc
into
fisttpl
jl
das
dec
sub
adc
gs
sub
xor
mov
mov
mov
ret
dec
xchg
mov
fsts
cmpsl
add
pop
or
jno
jle
or
pop
das
sets
cwtl
sahf
mov
or
sti
cmp
out
add
decl
mull
sbb
adc
xorb
loopne
ror
stos
adc
out
or
lret
mov
mov
pop
int3
cs
and
icebp
outsb
outsl
pushf
das
js
mov
aaa
xchg
fnstcw
rcrl
or
mov
shr
insb
xor
mov
repz
in
loope
icebp
lret
fstpl
imul
xchg
dec
mov
rolb
mov
jnp
mov
hlt
push
outsl
mov
mov
dec
sbb
push
pop
addr16
lcall
pop
xchg
sbb
sbb
cltd
xchg
insl
outsl
push
loope
cmpsb
cwtl
ret
or
jecxz
or
add
popf
jmp
outsb
push
out
aas
add
inc
jle
sahf
ja
jnp
rcrl
setnp
mov
sbb
and
inc
nop
mov
ds
jecxz
mov
or
jmp
jecxz
nop
cltd
push
push
xor
in
cwtl
imul
pop
jno
sbb
jo
popf
imul
lret
fwait
popf
cmp
fldenv
sub
int3
xchg
or
push
addl
xlat
adc
sbb
jp
jmp
enter
sub
shrb
jmp
push
dec
ficompl
sbb
or
mov
pushf
loope
sti
test
adc
in
imul
leave
and
xchg
pop
push
pop
jns
push
mov
jae
callw
je
inc
repz
idivb
leave
add
ja
dec
jecxz
jmp
sbb
sahf
jecxz
dec
insb
push
xor
sbb
xchg
add
jecxz
iret
in
ret
sbb
push
xor
xor
inc
xchg
jecxz
sbb
imul
pop
push
sub
push
divl
xor
dec
ret
les
out
ret
add
out
ret
mov
sbb
out
jmp
mov
or
movsb
add
jo
sahf
jecxz
push
insb
push
push
lahf
inc
das
lahf
pop
xor
scas
xchg
addr16
push
test
dec
jecxz
sbb
dec
pop
sbb
sub
rcrb
cltd
dec
dec
leave
jns
lahf
push
test
sbb
push
in
shlb
cld
dec
pushf
ret
sub
js
sahf
dec
ret
cltd
and
or
out
ds
sub
cltd
mov
es
add
mov
es
ret
popa
sub
mov
and
and
mov
mov
lret
adc
idivl
das
je
xor
push
sub
xchg
mov
fisttpl
rep
inc
lods
inc
loopne
mov
jbe
sbb
data16
inc
adc
shr
add
xor
mov
adc
cwtl
test
test
ret
jmp
and
idivl
shl
sub
lods
dec
push
lret
notl
pop
cld
sbb
shrb
cld
jg
or
push
repz
testl
icebp
xor
fdivrl
or
hlt
and
xchg
in
test
inc
cmp
rolb
mov
mov
inc
lock
sbb
xlat
xorl
adc
adc
rcrb
push
or
push
push
mov
cmpsb
pop
test
js
sbb
dec
out
jmp
xchg
frstor
sbb
inc
das
fsubrs
daa
xchg
arpl
les
outsl
mov
push
mov
sbb
dec
xchg
rcrb
push
xchg
test
lods
cs
dec
push
notl
rcll
pop
es
je
das
mov
out
mov
sar
adcb
adc
js
jl
ss
int3
xlat
push
js
xchg
lods
and
jns
sub
dec
or
and
scas
mov
out
add
sbb
stc
test
add
mov
stos
xchg
cld
xlat
xor
aad
sti
xchg
mov
stc
jne
add
jge
imul
shrl
cld
test
sbb
xor
sar
cmp
push
add
test
shr
test
rcrl
psrlw
jl
das
mov
imul
gs
fdivrp
and
mov
add
and
sbb
lret
adc
mov
xchg
push
sub
sbb
loope
sub
and
cwtl
imul
jno
push
jbe
xor
push
stos
mov
xor
or
sub
stos
jl
insl
dec
out
xor
lea
and
aam
ss
sub
lea
pop
xchg
xchg
add
xor
daa
mov
clc
icebp
popf
dec
scas
mov
push
aas
or
divb
mov
mov
arpl
mov
arpl
icebp
push
push
add
scas
mov
dec
lods
jmp
negb
add
add
les
and
nop
aad
sub
sbb
sbb
jnp
add
inc
cmp
sbb
in
push
jne
pushf
or
cld
rcr
scas
xchg
xchg
gs
sti
fnstenv
fists
sti
in
xor
xchg
xchg
notb
dec
mov
pop
js
iret
fwait
jecxz
mov
jecxz
dec
mov
mov
arpl
jle
xor
mov
push
pop
lcall
inc
cmpsb
das
popf
rcrb
dec
xlat
jp
inc
mov
xchg
and
push
mov
pop
and
pop
ret
add
and
mov
mov
dec
and
cmpsb
mov
in
pop
dec
pop
inc
mov
mov
dec
leave
daa
sbb
add
cmpsb
stc
std
xor
dec
and
ficompl
and
mov
mov
lock
lret
mov
sbb
daa
ficoml
jno
mov
xchg
cmpsb
ret
lods
mov
push
push
rcrl
jns
sbb
into
lea
mov
sbb
movsl
pop
cmpsl
test
int3
pop
push
xchg
and
bound
ret
shll
push
clc
cltd
out
jmp
mov
nop
mov
sbb
xor
popf
mov
dec
mov
xor
xchg
sub
scas
mov
jecxz
shrb
dec
pop
push
sti
fcmove
iret
sbb
bound
adc
fsubl
and
and
and
pop
jnp
sub
aam
pop
jecxz
shr
push
sbb
ret
push
movsb
or
xchg
rcrb
adc
inc
jmp
nop
push
ss
jecxz
push
mov
movl
jmp
nop
mov
or
adc
ds
sbb
or
fldt
repz
iret
out
add
push
pop
adc
sub
pop
pop
cltd
stc
ror
cmpsl
add
push
test
sbbb
rol
iret
into
std
adc
inc
lret
mov
gs
push
and
push
test
inc
test
rorl
outsb
lock
adc
rcl
adcw
imul
pop
jp
jb
fwait
mov
adc
sti
xlat
loop
aaa
push
xchg
push
cmpsl
into
ret
adc
mov
in
lea
ret
mov
fcmovne
rorb
sbb
rcr
in
insl
xor
test
mov
and
mov
xchg
mov
sub
call
sub
add
xlat
adc
cmp
push
pop
daa
push
lret
jns
std
xchg
sbb
push
enter
movsb
clc
daa
ret
data16
push
mov
adc
in
pop
cltd
inc
mov
mov
inc
add
je
sbb
mov
loope
jl
or
sub
dec
stc
push
movsb
loope
lahf
test
mov
rcl
or
loope
jb
scas
push
jecxz
push
or
pop
mov
shll
call
xor
xchg
icebp
ret
jno
hlt
xchg
movsb
stos
loope
rol
sub
lahf
in
jb
and
lahf
sarb
in
sti
sahf
ja
mov
mov
cmp
sbb
mov
mov
mov
ljmp
pop
fiadds
adc
inc
repz
lock
js
mov
pop
pop
pop
xor
aam
mov
jbe
dec
pop
adc
xchg
mov
add
std
mov
jecxz
aad
xchg
jmp
add
loopne
push
mov
test
fimull
push
xchg
fldl
pop
push
cmpsb
push
mov
cwtl
mov
fucom
hlt
ret
xchg
fmuls
and
js
pop
xchg
lds
ret
js
xchg
leave
xor
xchg
aad
test
push
mov
xchg
cs
subl
xchg
sbb
lea
inc
rclb
add
mov
mov
enter
sahf
mov
aas
add
push
notb
pop
movsb
adc
sub
add
mov
aad
mov
iret
cwtl
enter
in
loopne
std
insl
xchg
stc
push
jge
and
lcall
mov
sbb
inc
imul
movsb
loope
xchg
push
or
fsubl
shrb
mov
aam
fcomps
pop
or
lahf
icebp
pusha
jecxz
push
rorb
push
test
out
and
and
movsl
test
pop
sti
jp
jo
xchg
add
xchg
mov
push
test
push
jle
sbb
lahf
mov
notb
ret
push
add
icebp
mov
stc
xchg
jno
les
push
cmp
xchg
mov
iret
sti
roll
jle
sahf
shlb
sahf
jg
xorl
imul
inc
test
pop
and
test
std
daa
pop
jecxz
addr16
cmpsb
pop
pop
sub
nop
add
dec
enter
adc
mov
xlat
mov
arpl
mov
push
scas
lods
cmpsb
mov
pop
xchg
sub
sub
adcb
push
sub
jbe
push
and
lods
mov
jle
stc
lods
add
std
aam
xor
mov
jbe
iret
xor
xor
jp
push
sbbl
repnz
dec
mov
sub
fsubrs
xchg
xor
ficomps
nop
pop
jns
fwait
push
and
xor
inc
adc
push
xor
pop
arpl
clc
bound
pop
push
mov
add
lret
enter
bswap
xchg
rcrl
leave
xchg
inc
xchg
push
or
lods
loope
sub
or
lret
rorl
dec
test
fbstp
psubb
addr16
jmp
mov
dec
push
es
sub
jecxz
aam
sbb
pop
icebp
push
loope
mov
inc
or
mov
jecxz
aam
jbe
pop
push
rcl
xchg
pop
aam
pop
pop
int
pop
pushf
sarb
js
cs
clc
sbbb
xchg
test
mov
mov
xor
push
lahf
ffreep
cltd
sbb
subl
bound
mov
rcrl
add
mov
enter
push
aaa
add
pop
bound
ss
mov
jns
or
push
dec
push
scas
sbb
adc
add
and
scas
mov
mov
loope
rolb
cmp
into
gs
clc
push
test
in
movsb
mov
jecxz
sbb
pop
mov
jecxz
sahf
xchg
mov
jge
pop
or
or
and
adc
imul
push
andl
mov
mov
mov
xchg
ss
sbb
addr16
xchg
movsb
lea
aad
and
lock
arpl
je
lret
lcall
sbb
fcoms
jns
sbb
pushf
aaa
popf
repnz
data16
dec
push
mov
pop
out
mov
repz
push
add
ret
xchg
and
adc
add
lret
clc
jnp
adc
pushf
inc
adc
jo
dec
mov
in
test
xor
push
sbb
mov
jns
sbb
mov
cs
loope
ja
mov
neg
push
cmp
mov
add
sbb
fwait
jecxz
add
mov
sub
loop
mov
pusha
xorps
gs
aas
aam
in
jbe
mov
add
sbb
xor
sbb
jbe
mov
jecxz
xor
rorb
imul
cmp
cs
sub
loope
clc
loopne
adc
shll
jmp
dec
inc
adc
jns
lock
rolb
and
hlt
xchg
adc
fldt
pop
cmpsb
lcall
icebp
outsb
daa
sbb
or
les
int3
or
mov
pop
out
repz
lock
mov
js
mov
ss
aad
or
test
sbb
and
sti
fmull
es
pop
mov
lds
loope
loopne
aam
mov
pop
rcrl
add
push
movsb
popa
enter
sbb
fbld
push
aaa
inc
cld
rorl
out
push
jne
daa
sti
fcomps
and
push
cs
jecxz
dec
xchg
das
mov
ror
clc
arpl
or
mov
jns
add
push
shlb
mov
dec
push
adc
push
cmp
pop
xchg
mov
jmp
jle
lock
imulb
lock
jno
stos
mov
stc
inc
data16
popf
sub
adc
mov
xchg
popf
push
cmp
rcrb
pop
cmp
adc
std
fcomps
cltd
cwtl
std
sbb
xchg
mov
xchg
mov
mov
js
cwtl
ja
popf
pushf
fwait
pop
ret
dec
cmpsl
js
mov
dec
jmp
xorl
add
inc
repnz
pause
xchg
dec
mov
fldenv
in
imul
push
xchg
out
xor
and
arpl
push
roll
sar
mov
loopne
xor
add
loopne
mov
lcall
sbb
popf
sahf
jecxz
ret
out
dec
iret
cmp
in
mov
sub
push
xor
pop
or
add
push
int3
fldcw
pop
add
cli
and
inc
push
sbb
ljmp
in
sub
call
jmp
push
sub
dec
js
xchg
sbb
and
lcall
addr16
mov
jb
gs
cs
in
cwtl
gs
divb
fidivrs
xchg
xchg
lret
fldl
shl
dec
cmp
sub
pusha
rolb
es
xchg
jae
pop
xchg
aaa
and
add
mov
sub
push
stc
xchg
jae
mov
mov
and
out
sub
xchg
mov
je
mov
jae
xchg
int
inc
pop
into
int
and
popf
cmp
sbb
xor
pop
jge
mov
xchg
test
sbb
xlat
xchg
sbb
jbe
test
pushf
xchg
leave
and
arpl
sbb
jbe
ficoms
pop
jb
jmp
inc
fnsave
inc
ficoms
inc
cmp
sbb
sbb
nop
add
das
mov
cmpsl
xor
lcall
das
imul
clc
xlat
adc
bound
jns
and
cltd
les
fsub
jmp
lcall
mov
filds
clc
xchg
fdivl
push
jns
sbb
mov
add
inc
xchg
cmp
jge
lret
sti
xor
fisubl
sbb
ret
aad
cmp
aad
adc
push
or
adc
cwtl
inc
xor
test
inc
test
gs
aad
jnp
cld
and
mov
push
shlb
push
les
pop
push
xchg
mov
shll
mov
jecxz
fimull
cli
aas
pop
add
jle
dec
cmpsb
or
mov
in
add
or
push
pop
loope
mov
inc
cmp
addr16
mov
or
cmp
jecxz
shl
aas
pop
xchg
and
xchg
inc
pop
xchg
mov
add
sti
jge
shl
ret
xchg
jecxz
ret
jge
and
fmul
shlb
sbb
fdivrl
lods
xchg
mov
adc
cmp
inc
and
fcompl
fwait
sarl
lock
fcoml
add
cltd
cmp
cs
sub
out
leave
clc
inc
sahf
inc
adc
jg
mov
adc
inc
mov
fildl
inc
bswap
inc
pushf
les
mov
xlat
jecxz
fistl
sbb
imul
outsb
les
insb
or
add
sbb
lock
xchg
andb
add
xchg
in
cwtl
mov
clc
sbb
jge
jns
mov
mov
cwtl
add
inc
mov
adc
cs
jl
inc
mov
arpl
lcall
test
mov
or
outsb
fnclex
ret
int3
mov
sub
imul
pop
inc
lock
push
scas
jl
xchg
xor
push
and
mov
xchg
mov
loope
ret
inc
sbb
mov
push
lock
sbb
subl
ljmp
pop
std
add
jg
fistpl
pusha
dec
data16
ret
add
bound
cmp
xchg
adcb
andb
jmp
adcl
cmpsl
inc
xchg
and
nop
loop
jl
aam
cmp
jns
and
loop
loope,pt
icebp
mov
push
pop
pop
pop
cmp
add
adc
out
shlb
addr16
insl
sbb
subb
jne
push
add
imul
mov
jne
out
repz
adcl
pop
adc
push
xchg
rcrl
sbb
jge
inc
pop
mov
lods
jbe
and
push
add
or
cwtl
les
or
xchg
enter
fndisi(8087
jge,pn
aad
mov
mov
mov
insb
fldenv
shlb
adc
or
imul
xchg
bound
ss
rcll
adc
scas
test
cltd
dec
xchg
sbb
sahf
lcall
loopne
mov
sub
call
jecxz
in
loop
sbb
cmp
jno
inc
add
xchg
out
icebp
outsb
divl
mov
mov
shlb
xchg
fwait
dec
pushf
hlt
jmp
dec
dec
jecxz
xchg
pop
loop
adc
dec
aaa
pushf
shll
es
or
inc
push
sub
fistl
inc
sbb
pop
mov
scas
mov
push
fcompl
fists
push
ret
mov
mov
mov
dec
or
mov
xchg
cld
fs
cld
cltd
fcoml
xchg
sub
insl
ret
std
xchg
in
test
push
out
dec
in
mov
xor
addl
icebp
test
add
sub
mov
sub
mov
nop
movsb
jp
push
ja
xchg
xchg
cmp
and
fneni(8087
add
int
mov
pusha
and
inc
nop
mov
jecxz
xchg
cmp
std
mov
push
jns
mov
xchg
popa
mov
enter
lock
sub
xchg
div
add
push
jns
sbb
mov
xor
push
cs
mov
orb
stc
add
fwait
and
or
fmuls
daa
xchg
or
and
sbb
add
and
popa
and
fidivrs
dec
outsb
cmp
loop
mov
jle
mov
outsb
or
pop
in
mov
or
xor
test
loopne
push
nop
mov
lcall
sti
mov
faddl
lret
jl
daa
cmpsl
sbb
fwait
ucomiss
sub
pop
loopne
andb
sbb
add
cmp
mov
push
and
xchg
push
jecxz
mov
loop
rcrb
sbb
push
mov
lods
stos
addr16
jbe
fdivrl
xor
inc
cmp
or
sbbl
jae
iret
sarb
jae
test
dec
sub
nop
loope
mov
pop
out
idivl
out
pop
adc
call
ja
out
push
adcb
pop
outsl
arpl
sub
adc
stc
jb
sbb
mov
sbb
rolb
pop
cltd
sub
data16
stos
pushfw
fs
sbb
xchg
pop
in
cwtl
mov
idivl
arpl
xor
dec
out
pop
js
mov
call
pop
loopne
adc
mov
adc
xchg
jl
fistpl
leave
or
or
imul
add
sub
test
add
add
out
xchg
je
jae
sbb
fsts
addr16
stos
pop
mov
pop
sbb
pop
jmp
add
add
andl
add
or
in
jecxz
jmp
das
lods
fmul
xchg
or
ret
insb
jns
xor
and
mov
aaa
jae
jmp
xchg
mov
out
pop
push
int
or
std
push
xor
popa
sahf
adc
adc
mov
addr16
lock
out
clc
call
pop
loopne
add
aas
sahf
pop
out
push
sbb
and
or
iret
and
push
cmpsb
push
jge
mov
sbb
pop
addr16
sbb
addr16
test
into
sbb
push
push
mov
and
pushf
dec
adc
jmp
mov
in
jne
pushf
sbb
push
inc
xor
in
pushf
xchg
std
in
arpl
mov
sub
std
and
sbb
mov
jmp
jbe
pop
cmp
lret
xor
push
in
fimuls
mov
ret
scas
in
into
daa
sbb
mov
gs
sub
mov
sub
dec
mov
ss
inc
cwtl
pop
leave
cwtl
stos
dec
inc
out
imul
xor
add
decl
sahf
mov
scas
out
lahf
lret
and
adc
arpl
cwtl
lcall
icebp
add
or
bound
shrl
sbb
aam
add
jmp
clc
les
call
or
movsb
xchg
cmp
mov
aas
sub
or
clc
pop
pavgw
rorb
push
js
adc
push
mov
jo
les
or
push
rcrl
cwtl
fwait
jb
call
mov
jb
shlb
inc
mov
jmp
les
sbb
aaa
jge
jl
or
es
jmp
adc
sarb
or
adc
xchg
cmp
mov
sbb
push
add
popa
add
out
xchg
xchg
xor
cs
out
add
std
cmp
outsb
loope
push
inc
and
xchg
add
aas
push
push
mov
sbb
cmp
fs
push
lcall
xchg
sbb
lret
icebp
popa
sbb
andnps
aaa
insl
xchg
xchg
popf
out
sub
xchg
jns
mov
cs
sbb
call
push
clc
aaa
and
icebp
and
fldl
fistps
rcrl
sub
jns
sub
sbb
je
push
popf
insl
cmpsb
out
jne
mov
xchg
fwait
jne
mov
or
dec
inc
push
xchg
rcrl
mov
pop
daa
mov
flds
push
nop
jle
movups
cmpb
push
mov
mov
sbb
pop
daa
cmp
popl
cmp
data16
push
inc
dec
insb
loopne
repz
inc
mov
xchg
dec
repz
adc
push
add
sbbb
push
aaa
fstl
mov
mov
into
xchg
push
fmull
mov
pop
jle
xchg
icebp
cmp
loopne
sbb
cmp
or
xchg
cmpsb
call
jo
xchg
add
adc
pop
and
push
mov
rcrl
cmp
add
xor
or
rcll
sbb
pop
fidivrl
fstl
pop
xchg
aaa
les
cmp
pop
lcall
out
cmpsb
push
or
jnp
lea
pop
mov
pop
xchg
push
out
idiv
fwait
push
jg
push
insl
in
push
and
pop
push
andl
inc
push
aam
push
aam
rcll
imul
jecxz
clc
call
orl
pop
jmp
xchg
data16
rcll
jbe
pop
push
movsb
and
mov
mov
push
jecxz
lods
sbb
and
dec
imul
sbb
xor
mov
negl
sbb
push
sbb
mov
jbe
lea
ja
subb
testl
cmc
mov
daa
pop
add
and
popa
push
dec
sbb
push
and
sub
jp
out
adc
push
inc
and
pop
xlat
sub
cmpps
stos
repnz
imul
fistps
mov
xchg
mov
jno
adc
cmpsb
xchg
mov
adc
pop
fnstcw
test
mov
movsl
iret
mov
sub
sbb
in
dec
clc
mov
popa
inc
sahf
push
mov
xchg
push
je
bound
cli
lea
stc
shll
test
loop
and
arpl
cli
adc
push
inc
shlb
sbb
sbb
inc
rcrl
xor
pop
mov
es
inc
xchg
push
sar
arpl
xchg
cmp
push
pop
sbb
je
daa
data16
ja
inc
inc
fcmovb
call
mov
addr16
out
out
sahf
mov
sbb
aas
sub
push
dec
loopne
adc
sbb
ret
in
das
push
pusha
sbb
out
cmpl
or
push
loopne
lods
aad
add
ret
mov
cmpsl
bound
push
pop
ret
insl
outsb
cmc
cmpsb
call
xchg
mov
pop
mov
fisubrl
stc
pop
sub
bound
outsb
in
test
inc
mov
xchg
in
push
test
jnp
out
push
add
mov
or
scas
loope
push
int3
ss
xchg
rcll
dec
in
out
in
sbb
mov
es
in
les
dec
adc
cltd
add
pop
fdivrp
les
pop
ds
outsb
imul
je
loope
add
stc
stos
or
ds
test
cmp
in
mov
mov
cmp
mov
push
jns
pop
inc
stos
stos
outsl
push
and
add
inc
xlat
lods
mov
loop
adc
jecxz
add
dec
jno
out
add
inc
pushl
mov
sbb
scas
add
arpl
lea
sub
pusha
fstp
xchg
xchg
add
je
out
stos
in
xor
loope
outsb
insl
mov
inc
sub
ret
add
adc
iret
push
mov
repz
jns
das
js
add
sbb
test
js
shll
xor
clc
imul
ret
fcmovbe
jno
cli
dec
dec
movsl
mov
mov
rcl
lcall
and
je
je
sbb
or
sub
je
push
into
jl
sub
lods
shr
add
cltd
xor
lds
repz
popf
mov
inc
movsl
push
sbb
push
pop
outsl
xor
jbe
mov
out
cltd
negb
or
adc
adc
pop
stc
inc
lret
mov
nop
xor
inc
lret
pop
sub
mul
ret
push
jno
cmpsb
mov
cmp
dec
cs
push
fsubrs
or
jns
test
jl
and
lock
sbb
js
lret
lea
xchg
add
jle
mov
loope
and
push
and
inc
ds
lea
jl
push
mov
movsb
adc
adc
push
test
mov
add
dec
orl
add
in
aam
insb
or
in
scas
lock
push
das
in
arpl
mov
call
xchg
jo
imul
and
out
pop
popf
pop
adc
sbb
fs
aas
les
sbb
pop
cli
xchg
or
add
aam
dec
push
xlat
stc
dec
out
sbb
imul
jp
pop
dec
xchg
cmp
rolb
dec
inc
or
adc
test
mov
jecxz
mov
icebp
fimuls
or
pop
fmull
pop
insl
stos
push
inc
adc
jbe
push
lods
push
stc
out
dec
das
popf
mov
mov
or
addr16
aad
and
shll
push
loopne
js
or
adc
in
mov
rcrb
jp
cli
stc
stc
cmp
in
ret
into
negb
jle
js
or
lock
xlat
xor
mov
jge
mov
xchg
imul
shll
movsb
and
inc
repz
add
or
test
scas
xchg
lea
lret
mov
sti
out
add
jl
sub
or
icebp
out
repnz
lret
jo
loopne
or
jnp
dec
mov
adc
or
push
fildll
sbb
or
push
sub
repz
or
sbb
pop
lret
ljmp
jnp
xchg
ja
popa
addr16
std
jns
fs
jae
mov
out
xchg
rcrl
shlb
es
sti
lret
popf
jnp
gs
mov
mov
or
pop
loope
out
rorl
pop
test
ss
les
xchg
jae
jmp
mov
data16
xchg
icebp
inc
std
mov
push
jle
xchg
or
sbb
ret
dec
xor
inc
pushf
adc
pop
imul
sub
inc
cltd
xchg
repnz
adc
test
ret
and
sbb
sub
in
stos
adc
js
lcall
clc
jne
sbb
jbe
add
fists
jno
leave
adc
jl
and
ljmp
jae
xchg
je
dec
das
mov
jo
mov
std
mov
jo
sbb
dec
xrelease
sbb
jae
fwait
sbb
push
scas
repz
rolb
xor
testb
fcmovnu
sub
add
icebp
jae
mov
mov
pop
lret
in
shrl
std
sahf
loope
mov
add
xlat
std
imul
xor
lahf
call
cwtl
cs
mov
mov
jnp
addr16
adc
push
mov
sub
addr16
jne
je
in
aam
push
fs
and
outsb
ljmp
f2xm1
imul
adc
mov
xchg
sahf
or
aas
xchg
fcoms
incb
or
mov
jecxz
movsb
test
sub
popf
lock
leave
sbb
sub
ffree
add
ja
lahf
pop
cmp
arpl
push
rcrb
mov
mov
cltd
push
decl
jne
pop
add
inc
ja
insl
jo
cmp
inc
xchg
xchg
cmc
inc
add
adc
lock
cmc
cs
outsl
popf
aad
pop
cmp
lcall
or
nop
sti
dec
repnz
sbb
jno
out
cmp
xor
pop
arpl
pop
repnz
mov
je
fsubl
push
push
stos
mov
or
jns
lock
ret
stos
mov
aam
or
test
pop
fwait
arpl
sarb
pop
cmc
mov
xor
or
lds
jle
pop
sbb
and
dec
bound
call
pop
pop
xchg
and
jnp
mov
idivb
xchg
lret
xor
in
jge
pushf
mov
pusha
cltd
and
loope
or
cmp
out
push
or
push
dec
jno
dec
imulb
lret
test
sbb
pop
sbb
sbb
sub
nop
pop
pushf
xchg
push
out
test
mov
pop
inc
out
cmp
divl
sbb
push
popa
addr16
jbe
add
or
jo
sub
push
xor
ljmp
push
mov
enter
sarl
orb
ret
test
sub
mov
imul
jns
in
jl
cli
pop
sbb
pop
or
outsl
ret
dec
int
mov
adc
int
scas
lea
xchg
gs
gs
std
or
idiv
add
rorl
imul
pop
jge
dec
cld
mov
xchg
sbb
sahf
int
mov
xchg
rorb
or
mov
add
out
or
dec
rcl
add
ja
movsl
xchg
mull
enter
mov
setnp
repz
shl
dec
icebp
testl
and
call
stc
cmp
imul
add
inc
push
push
testb
adc
imul
rorl
cmp
lret
negb
inc
movsl
lret
rcll
iret
fildll
xchg
add
mov
sti
xchg
or
sub
cld
or
push
and
sbb
insl
sbb
and
lret
mov
lock
xor
cmp
sub
push
sbb
ret
test
aam
fstl
daa
jbe
clc
lahf
pushf
mov
stc
cmp
dec
sbb
movb
scas
pop
cmp
or
testl
fstp
scas
iret
pop
out
fcmovnb
cld
jp
sbb
jno
mov
dec
push
loope
iret
out
sub
pop
imul
push
jp
mov
scas
repz
add
test
sbb
inc
andl
mov
lcall
ret
dec
test
aas
jae
fistl
or
imul
daa
jns
flds
sbb
dec
jp
clc
in
jnp
ljmp
jp
xchg
aas
cli
xchg
push
stc
sbb
cs
xlat
mov
jnp
sub
adcl
gs
mov
push
pop
jge
rclb
mov
adc
cld
test
into
mov
add
loope
cmc
je
pop
test
push
mov
mov
iret
add
adc
loopne
or
sbb
ret
cltd
repz
cs
ljmp
roll
stc
iret
push
roll
sti
sti
adc
sbb
adc
cltd
int3
fsubrs
push
mov
inc
mov
xchg
sti
int
ds
pop
in
mov
cmpl
inc
leave
push
or
xchg
jbe
xchg
vpacksswb
jecxz,pt
lds
insl
cmp
ffree
ret
in
mov
ret
hlt
sti
mov
shlb
jg
insl
shl
or
add
pop
loopne
repnz
sbb
loope
leave
add
sub
mov
pop
insb
pop
pop
notb
aam
jnp
mov
jb
sub
das
sti
testb
mulb
mov
add
pop
and
cld
adc
or
pop
mov
mov
lea
add
shrl
lods
mov
scas
mov
or
and
add
sub
mov
pop
mov
push
sbb
imul
aas
pop
and
das
stc
rcr
sub
lahf
push
cwtl
movsb
and
fwait
inc
xchg
or
push
jns
test
aas
push
push
xlat
push
popf
enter
xchg
outsb
sarb
sbb
jle
dec
daa
enter
scas
xchg
dec
mov
shrb
xchg
pop
sbb
std
xchg
xor
adc
mov
jmp
rol
fnstsw
xor
push
cmp
dec
push
fwait
push
mov
mov
stc
mov
sub
pop
and
jp
add
lcall
jmp
push
dec
test
push
add
test
push
adc
rcr
in
mov
jns
ja
push
mov
loop
mov
xchg
test
clc
pop
cltd
loop
lods
mov
jle
jne
in
sub
arpl
xchg
sbb
mov
fbstp
insl
mov
sub
fisubrl
cmpsb
decb
adc
lock
fnstenv
sub
pop
pop
and
setae
xor
fsts
or
clc
mov
sub
push
stc
push
xchg
outsb
mov
out
into
test
jg
out
out
cmp
jno
jle
lret
sbb
jp
imul
add
jg
xchg
std
mov
pushf
hlt
ja
dec
stc
jg
fistl
pop
adc
dec
in
jp
xlat
cmpsb
adc
pop
sbb
jecxz
aad
sbb
xchg
in
jle
repnz
push
jg
popf
cmpsb
or
rcrb
movsb
or
rcr
pop
push
bound
mov
pop
jl
xor
xor
push
adc
es
mov
add
jecxz
push
jno
jecxz
roll
push
sar
mov
mov
add
inc
cld
iret
out
sub
push
jo
mov
nop
repnz
loopne
lea
pop
out
push
and
out
adc
push
test
mov
xchg
inc
rcr
adc
sbb
push
fwait
dec
jns
adc
and
out
outsb
cmpsb
inc
in
call
into
push
out
std
mov
enter
push
and
mov
push
sbb
and
iret
adc
lds
jp
dec
dec
xchg
pushf
sbb
mov
add
inc
mov
scas
pop
popf
stc
dec
mov
add
adc
shl
xor
push
shl
xor
jg
pop
decl
pop
insb
es
sarb
and
mov
fisubs
mov
dec
popf
jbe
inc
rcrb
popf
test
push
mov
popf
stos
ja
adcl
push
enter
push
ss
dec
shll
xcrypt-ecb
cmpsl
mov
test
push
mov
xchg
mov
imull
sbb
pop
fisttps
push
lods
sbb
sub
pop
mov
push
pop
loope
cld
adcl
popa
jb
jmp
mov
shrb
and
cld
mov
sbb
jle
int3
mov
jecxz
push
xor
jge
mov
pop
cs
cltd
push
popf
jl
scas
in
sub
add
adc
popa
hlt
xor
cwtl
inc
aam
dec
and
and
mov
and
add
rcll
imul
pop
or
shlb
incl
fstps
push
and
add
pop
sbb
xchg
jno
lret
fwait
add
mov
add
jns
test
jecxz
jl
sbb
mov
pop
or
jno
dec
lcall
mov
dec
rolb
xor
dec
add
push
pop
out
cmc
scas
cmpsb
jl
lahf
jecxz
adc
test
cltd
lret
aaa
or
loope
lret
lea
stos
or
decb
mov
xlat
xlat
outsb
insb
and
andb
fwait
sbb
adc
inc
pop
cmc
jge
sub
cmp
cs
in
fwait
arpl
lahf
mov
in
sub
xchg
push
nop
mov
std
ss
push
adc
mov
sahf
loope
xchg
adcb
cli
jno
addr16
filds
sbb
mov
idivb
pop
push
or
adcl
pushf
icebp
sub
sar
sbb
adc
sbb
cmp
lock
inc
pop
push
inc
imul
xchg
test
jp
jno
jae
rcr
sub
dec
xchg
repz
adc
jg
or
jg
enter
enter
cld
pop
dec
adc
fs
inc
inc
dec
xor
popf
mov
or
cmp
fdivs
push
sbb
sub
repz
ret
sbb
mov
out
loopne
dec
imul
hlt
fisubl
scas
movsl
je
jno
dec
andl
shr
add
not
clc
pop
dec
adc
xchg
scas
add
cmpl
pop
pop
cmp
mov
faddl
push
sub
cmp
lcall
gs
cmp
mov
mov
and
mov
jno
push
sahf
nop
lds
stos
fnstenv
mov
andb
cltd
xor
mov
mov
inc
adcb
mov
repz
fstps
sub
jmp
jge
clc
imul
fs
fisttpll
add
flds
push
jns
jge
lods
mov
add
push
adc
fnstenv
insb
mov
push
icebp
outsb
lods
mov
out
cmp
fmuls
push
sbb
lcall
jo
nopl
scas
add
and
lcall
lret
pop
fcompl
jne
and
cmpsb
pop
shll
push
mov
push
mov
inc
sub
mov
mov
rol
inc
mov
mov
lcall
sub
add
mov
mov
test
mov
out
lcall
cmp
push
cltd
push
jl
mov
fsubrl
adc
pushl
sub
pop
daa
in
pop
imul
push
gs
xor
push
fadd
push
pop
fwait
push
rol
sahf
push
ds
shr
push
gs
push
lock
mov
test
fcompl
push
pop
pop
push
pop
imul
mov
out
lahf
pop
dec
in
mov
shlb
sarb
mov
add
push
icebp
add
rcll
jno
orl
push
call
add
sets
in
xor
lods
ucomiss
cltd
jecxz
fistl
mov
lret
rorb
add
jp
imul
push
loop
ret
sbb
shll
pop
jbe
mov
pop
xor
loope
movsb
inc
jae
mov
pop
sbb
std
rolb
cmp
jb
gs
push
xchg
push
cmpl
pop
out
or
inc
or
sti
in
sbb
cmpsb
shlb
loopne
pop
imul
mov
sub
push
push
xor
lahf
icebp
pop
push
push
xchg
pop
aaa
pop
xor
fwait
jmp
add
arpl
jecxz
xor
cs
push
ret
and
jne
pop
cmp
ret
ja
mov
and
adc
or
test
xor
cs
pop
adc
icebp
ret
lock
mov
or
mov
rorb
pop
lret
lea
mov
rolb
sbb
test
adcb
cmp
ret
add
inc
push
lret
pop
dec
mov
xchg
fadds
nop
es
fstl
or
nop
cld
pop
fstpl
sbb
pop
les
jl
icebp
ss
mov
lods
push
lret
sub
adc
and
inc
test
xchg
mov
clc
fsubrs
pop
xor
cmpsl
xchg
stos
sbb
mov
or
fst
int
lds
or
pushf
lret
addr16
das
pop
or
ror
push
inc
pop
pop
lock
add
je
pushf
or
push
cltd
aam
sub
outsl
mov
adc
stos
add
adc
pop
fiadds
xchg
push
add
or
adc
lods
ja
jl
xor
add
push
stc
pop
in
hlt
mov
and
lret
inc
adc
push
mov
mov
or
das
mov
lret
dec
test
gs
inc
push
mov
fsubl
push
pushf
les
cmp
les
xchg
rcrl
andb
nop
insb
push
loope
add
add
jge
add
add
lock
out
cmp
in
out
dec
jne
ret
sbb
popf
addb
fst
dec
fst
push
pop
or
test
cmp
and
mov
dec
pop
cmpsl
lahf
cmp
push
sbb
sub
nop
or
pop
push
test
mov
insl
xchg
dec
xchg
xchg
pop
out
rcll
add
stc
nop
test
daa
imul
adc
test
out
adc
pop
das
fsubrl
xchg
xchg
mov
nop
or
push
pop
jmp
dec
mov
ficomps
cli
add
add
jne
push
jnp
sub
dec
cld
popf
push
mov
imulb
sbb
xchg
xchg
dec
adc
addr16
rcrb
outsb
jp
adc
aas
lock
mov
stos
stos
imul
jmp
sbb
push
and
pop
xchg
repz
popf
in
xor
sahf
fwait
pop
bound
ljmp
fnstenv
push
jp
leave
xor
outsb
push
adc
xchg
xchg
sbbb
jecxz
subps
test
pop
out
mov
rol
in
bound
xchg
jecxz
pop
or
mov
pop
out
xor
les
cli
add
nop
adc
adc
out
out
cmp
mov
cmc
xchg
push
test
jmp
inc
pop
mov
jo
add
jnp
fisttps
add
mov
cli
push
sbbl
lret
fadd
xor
add
orb
loop
js
and
sub
cld
adc
sahf
fists
add
pop
mov
inc
call
cmp
mov
sub
cmp
push
jbe
sbb
dec
dec
mov
xor
push
adc
cmp
adc
jmp
add
dec
or
sub
ljmp
mov
xor
and
jns
lcall
pushf
movsb
in
pop
nop
loope
or
xchg
and
jne
pushf
arpl
in
es
sbb
sub
cltd
mov
add
imul
lret
jmp
ja
fistl
inc
lret
inc
add
cmpsl
ret
xchg
in
add
nop
add
or
add
jecxz
pop
out
orb
inc
add
ret
iret
sub
arpl
add
jecxz
sbb
add
cmp
insl
lods
out
or
push
out
push
sti
add
nop
pushf
hlt
mov
cmpsl
stc
add
addb
cmp
mov
jecxz
dec
scas
push
xor
rcrl
mov
xchg
mov
mov
push
pop
and
loope
or
hlt
imul
xor
stc
or
adc
xlat
xchg
dec
sub
sub
or
int3
inc
icebp
outsl
or
das
in
rolb
mov
lods
push
fwait
pushf
mov
xlat
loopne
xchg
clc
icebp
or
sub
and
push
shr
pop
push
ret
fisttps
pushf
push
and
decb
rcr
popf
mov
orb
or
out
rcrb
pushf
push
sbb
or
enter
sbb
dec
iret
or
sub
fnstenv
lock
jne
xor
fnstenv
pand
arpl
mov
sbb
mov
icebp
mov
dec
jbe
movd
fwait
sub
icebp
pop
pop
shrb
push
lock
cltd
popa
mov
xchg
je
mov
push
mov
jne
push
loop
push
mov
push
mov
ficompl
jne
gs
subb
push
push
cmc
flds
pop
inc
and
mov
pushf
pop
fildl
std
pop
sub
repnz
lret
mov
jae
add
pushf
dec
pushf
daa
jl
rorb
repnz
out
cmp
inc
dec
int
rclb
loopne
sbb
jecxz
test
push
aaa
fdivrl
int
mov
sbb
das
and
mov
fbstp
stc
xchg
sub
inc
push
or
fs
mov
cmc
xchg
xchg
mov
push
or
out
subb
pop
xchg
xlat
lcall
or
jecxz
loop
xlat
sub
mov
push
xchg
lcall
and
and
pxor
mov
lock
loopew
dec
pop
dec
jl
loope
mov
ret
mov
add
adc
aam
enter
repnz
mov
popa
pop
dec
mov
pop
add
jecxz
mov
std
mov
mov
and
inc
rcrl
xlat
inc
mov
jecxz
dec
loope
pop
mull
mov
popf
or
jno
sbb
leave
xchg
out
lret
adc
pop
imul
rclb
inc
mov
loopne
js
push
xor
seto
add
push
orl
cmc
pop
call
or
mov
into
iret
pushf
cmp
out
jbe
fmuls
outsb
mov
mov
inc
add
adc
lods
sub
jmp
push
fisttpl
cmp
mov
pop
rcrb
xor
mov
adc
xor
ror
fsubrs
fwait
inc
push
or
jno
or
xchg
adc
fwait
pop
fisubl
and
or
mov
xchg
paddusw
adc
lcall
push
setge
and
push
lods
mov
mov
data16
inc
adc
jmp
mov
mov
add
imul
int
imul
add
rcll
xor
jg
fcomip
mov
and
addl
cmp
out
les
mov
negb
aaa
mov
and
arpl
lea
add
mov
in
or
or
push
mov
dec
aam
adc
jbe
add
out
cld
mov
dec
add
lret
and
sar
cmp
xchg
sti
out
das
in
inc
sbb
inc
das
cltd
fcomps
sti
pop
jp
in
pop
or
lahf
fstp
mov
addr16
adcl
adc
mov
fwait
int
dec
mov
sub
inc
std
sbb
mov
mov
shrb
xchg
mov
je
or
enter
lcall
mov
cmp
in
mov
lcall
jl
dec
mov
pushf
jbe
fsub
das
adc
pop
mov
add
aas
cmp
xor
adc
sbb
ja
dec
ss
xor
outsb
sub
push
sbb
or
arpl
data16
fwait
arpl
add
cld
add
xchg
dec
cld
mov
scas
mov
xor
xchg
outsb
stos
es
in
push
mov
fwait
cmpsl
repz
in
adc
mov
sti
sub
sbb
pop
test
sub
stc
mov
bound
mov
out
shrl
sarb
lods
sub
shrb
cmp
jecxz
je
cs
popf
outsb
sub
notb
cwtl
pop
shlb
nop
scas
xchg
std
fistpl
lcall
cwtl
ja
pop
jmp
addr16
arpl
push
pop
jns
movsb
or
bound
adc
fisubs
bound
and
jge
testl
sbb
xchg
or
xchg
fisttpl
outsb
push
pop
push
insl
out
ss
rcrb
nop
inc
lahf
push
sbb
sbb
jmp
nop
iret
push
nop
ljmp
xchg
add
sub
hlt
adc
sbb
loope
adc
bound
dec
mov
jmp
hlt
cmp
enter
pop
adc
adc
mov
inc
pop
adc
aad
xchg
cs
adc
and
out
xchg
xchg
add
adc
cmp
int3
lsl
nop
dec
and
jne
sub
lods
pop
jo
inc
mov
gs
jge
mov
sub
jno
fsubs
cwtl
mov
push
inc
pop
stc
sbb
pop
pusha
ja
ds
je
imul
xor
sbb
mov
push
dec
imul
xchg
ret
rcrb
jnp
popa
sti
lcall
push
idiv
and
out
push
inc
or
leave
shl
dec
jg
push
cwtl
jmp
std
jl
ficoms
aaa
adc
pop
sbb
jg
fwait
xchg
jbe
push
mov
bound
and
aaa
sbb
sbb
mov
sbb
fistps
inc
gs
out
xor
test
jecxz
lea
pop
loope
lahf
jne
or
out
cltd
sti
pop
sbb
cltd
and
icebp
repz
xchg
sbb
arpl
mov
inc
dec
push
adc
pushl
pop
and
and
pop
add
push
xchg
popf
mov
add
mov
jecxz
xchg
mov
inc
or
push
hlt
xchg
dec
shll
xchg
mov
jecxz
scas
add
jnp
inc
xor
mov
pop
pop
scas
mov
mov
out
sbb
insl
xchg
fisttps
xchg
arpl
scas
inc
pop
xchg
daa
or
xchg
fisubs
arpl
out
nop
sub
jmp
dec
decb
dec
mov
in
mov
ss
jmp
xchg
ja
mov
and
arpl
test
mov
cmp
or
push
addb
popf
jp
roll
sbbb
andb
xor
sbb
jmp
mov
arpl
add
xchg
adc
mov
call
xchg
out
inc
hlt
xchg
mov
aas
xchg
pop
das
or
cltd
dec
cmp
movsl
pop
cmp
xchg
jnp
clc
notl
lock
xchg
jle
xchg
mov
and
jl
xchg
pushf
xchg
dec
jae
mov
movsb
cs
in
out
cmpsl
mov
jns
mov
cltd
jnp
popf
stc
cmp
pop
add
xchg
xchg
add
adc
sbb
mov
xor
gs
pop
loope
and
xchg
mov
jb
fcoms
xchg
mov
or
sbb
adc
jbe
mov
into
fstps
mov
pop
xor
jne
add
jne
sbb
testb
clc
jno
test
cs
mov
sbb
sub
sbb
popa
shll
stos
xorl
in
jns
push
rcrb
cwtl
fiadds
insl
es
fwait
lea
push
pop
cmpb
and
mov
adc
xchg
ret
and
insb
es
xchg
mov
cmpsb
xchg
js
push
and
les
dec
xor
xchg
push
push
loope
pusha
stc
les
push
inc
rcrb
cltd
arpl
xchg
fcompl
push
rorb
jb
adc
sahf
jl
rorb
xchg
cld
lods
pop
testl
xor
sar
jl
xchg
push
repz
xchg
mov
jo
sbb
aaa
and
rol
inc
shll
fs
jecxz
mov
xchg
aas
movsb
mov
decb
test
sbb
xchg
ss
fstpt
lcall
inc
stos
xor
sbb
xchg
sbb
and
add
mov
sbb
cmpsl
and
stc
std
fwait
xchg
ficoms
adc
in
loope
sbb
jmp
sbb
push
xchg
fisubs
arpl
mov
fwait
xchg
ljmp
mov
out
lcall
mov
add
cltd
sbb
mov
add
shl
sbb
repz
lcall
sbb
dec
call
scas
aam
lret
dec
fwait
inc
mov
cmp
mov
mov
mov
mov
and
sbb
push
xor
inc
mov
and
jecxz
jnp
movsb
push
mov
ret
mov
adc
frstor
std
lret
sbb
cmc
aaa
pop
fistl
aaa
jecxz
and
lar
and
fwait
arpl
pop
dec
clc
adc
adc
int3
repz
repz
bound
cli
pop
xchg
data16
repz
add
xchg
pop
lahf
pop
add
sahf
dec
into
pop
add
imul
notl
jp
sahf
xchg
cmc
push
add
jno
test
negb
add
lock
jmp
mov
aam
xchg
add
aaa
xor
sahf
cmc
pop
mov
and
out
pop
pushf
sbb
sar
cmp
filds
ss
mov
int
sti
in
xor
fwait
push
adc
mov
lret
xchg
iret
enter
cltd
push
negl
pop
ficomps
loope
cwtl
cmp
cwtl
stos
sub
pop
test
setb
mov
cmp
rorl
cmp
aad
mov
add
arpl
pop
clc
or
push
testl
sbb
icebp
rorb
js
jns
aad
scas
add
ret
dec
lea
cmp
dec
jecxz
cwtl
mov
imul
aaa
sbb
lock
sbb
sub
sub
or
sbb
icebp
sbb
jb
orb
pusha
shll
pusha
out
mov
icebp
sub
shrb
sbb
jecxz
fwait
push
cltd
or
xor
xchg
paddb
call
pop
adc
xor
ja
sub
mov
push
je
jb
lea
pop
sub
cld
loope
fstps
cld
cwtl
into
inc
adcl
cwtl
inc
sbb
and
sbb
pushf
and
dec
pop
inc
adc
cmc
jle
push
adc
xorl
jl
push
das
movsb
dec
sub
cmp
shll
add
pusha
pushf
push
sahf
push
scas
push
add
mov
cwtl
icebp
loop
data16
jmp
rcll
fstl
js
dec
pop
insl
jae
pop
idiv
sarb
jge
into
lock
popf
pop
push
push
mov
rolb
or
imul
xchg
loope
jnp
jb
add
sub
pop
rolb
cmpsl
cli
mov
push
sbb
xor
push
jae
iret
aad
mov
into
ds
rep
push
jae
mov
mov
pop
sub
repz
ret
das
jo
fidivs
add
sahf
jecxz
aaa
leave
stc
pop
jo
sbb
pop
testl
ljmp
ljmp
ret
push
or
sub
add
cli
cltd
rorl
jmp
std
sbb
aad
cmpsw
sbb
or
adc
pop
cmp
jnp
shll
or
sub
jnp
jnp
cli
xchg
lahf
fisttpll
push
add
xchg
mov
mov
aas
rclb
and
xchg
pop
ficoml
mov
adc
packssdw
mov
jle
je
leave
cmp
pop
stos
fdiv
cld
mov
jle
inc
int
jbe
shr
xchg
stc
stos
outsl
mov
push
adc
movsb
pop
adc
scas
lods
sub
in
mov
push
je
hlt
inc
ljmp
pop
or
pop
push
addr16
add
mov
imul
out
dec
mov
int3
out
loop
push
fstpl
sbb
sbb
cltd
clc
cmc
mov
loop
cmp
or
or
and
jne
mov
cmc
xchg
sbb
push
rcl
inc
jbe
dec
add
fcomps
int3
pop
rolb
movsb
call
js
xor
mov
xchg
pushf
and
shlb
pop
jno
adc
shlb
push
clc
push
fstl
mov
xchg
dec
mov
movups
iret
jle
sbb
xchg
push
inc
out
cmp
pushf
mov
sbb
sbb
inc
outsl
imul
xchg
add
stc
aaa
repnz
inc
dec
push
or
dec
ja
sub
sti
push
dec
stc
or
jbe
lret
lods
nop
in
lcall
mov
cmp
or
mov
popf
ja
addb
cmpsb
sbb
jmp
and
and
xor
test
xlat
in
cltd
push
divb
test
and
mov
popf
push
sbb
push
daa
cld
sub
adc
cmp
jp
ret
add
jns
mov
call
loope
cs
or
cld
add
pop
ret
xorb
ja
and
divb
stc
lret
push
pop
stos
xchg
or
and
push
adc
mov
movsb
jns
pop
push
test
dec
jnp
or
xor
fists
int
cmpsl
leave
xor
sub
in
inc
mov
mov
pop
jecxz
adc
fimull
mov
jmp
pop
adc
popf
cmp
roll
or
cmp
add
xchg
repnz
jnp
push
add
jb
rorl
inc
jecxz
xchg
outsb
mov
sub
pop
xchg
mov
repnz
insl
add
mov
sbb
push
and
mov
mov
ret
pop
aas
dec
test
in
or
fadd
rorb
test
int
dec
das
mov
push
insb
fs
sbb
sahf
add
jbe
sbb
xchg
les
mov
xor
sahf
icebp
cwtl
push
adc
out
jl
sub
sub
inc
clc
rol
cmp
mov
out
sbb
mov
ficomps
popa
scas
xlat
push
jmp
pop
or
mov
mov
daa
cltd
int
divl
sub
fnsave
insl
push
fwait
dec
lahf
xchg
push
pop
test
xor
push
xor
push
jecxz
pop
or
leave
inc
mov
jmp
or
xor
incb
inc
mov
pop
pushf
cmc
add
int3
leave
test
in
clc
js
iret
sbb
jb
cs
imul
mov
cld
stos
cmc
repz
test
mov
or
adc
scas
dec
push
out
test
data16
test
and
pop
aam
xchg
ja
and
cwtl
mov
cmp
cmp
cltd
or
pop
cmpsl
mov
test
cltd
mov
mov
mov
stc
lods
sbbl
imul
add
jmp
jp
scas
repz
add
or
lods
test
fstpl
xchg
push
inc
sar
je
insb
inc
push
push
cmpsb
push
xor
inc
pop
fldl
mov
jg
stos
inc
cld
out
test
js
xchg
sub
stos
jg
out
push
stc
lods
lods
sar
orl
inc
nop
push
jge
leave
pushl
rcr
push
pop
jae
fwait
enter
cwtl
loopne
std
sub
push
les
mov
or
es
and
xchg
jo
stos
dec
lcall
inc
lods
fwait
out
lcall
xor
push
xor
std
cmp
and
dec
mov
shl
subl
out
test
mov
ja
mov
and
and
and
cmp
imul
sub
or
xlat
or
and
add
push
mov
daa
ret
ret
loope
out
push
mov
int3
xchg
icebp
loope
test
add
test
lcall
fisubrl
adc
mov
dec
fsubp
push
inc
fwait
dec
inc
loop
jmp
sbb
sub
mov
add
bound
clc
mov
jns
add
xor
adc
aam
add
xchg
push
sub
arpl
xor
mov
lds
and
sbb
mov
sarb
orb
loop
sbbb
add
gs
stc
and
imul
and
mov
inc
rcr
rorb
sbb
lahf
mov
jecxz
dec
dec
lcall
addr16
mov
cmp
and
cmp
mov
fidivs
and
mov
pop
push
and
pop
in
mov
inc
cld
enter
pop
data16
jcxz
cmp
loope
xorl
adc
shll
fimuls
lcall
and
lds
popf
mov
add
push
mov
std
sub
ljmp
or
rorb
in
je
adc
fists
cwtl
out
and
mov
sbb
outsb
cmp
push
daa
js
stc
aaa
rcll
pop
pop
movsb
push
pop
mov
ds
sbb
dec
mov
sub
fsubrs
jbe
jmp
ja
inc
mov
xchg
loopne
fcoms
or
mov
in
inc
dec
enter
in
pop
test
inc
or
mov
pop
xchg
jge
lods
lock
js
or
inc
setno
pop
es
sbb
or
adc
movsl
cwtl
pop
sub
sarb
inc
push
adc
movd
cmpsb
adc
push
dec
inc
lahf
pop
add
cld
sbb
xor
scas
test
fisttps
pop
push
sub
jmp
fistps
rol
rcrl
add
adc
pop
and
sbb
push
dec
mov
dec
jmp
cmp
nop
adc
push
les
and
pop
in
and
movsb
jmp
xor
push
cmpsb
mov
jns
adc
push
nop
and
mov
cmp
call
int3
inc
pop
jl
push
or
and
clc
std
outsb
int
leave
fistps
xchg
out
pop
push
inc
or
and
or
push
cs
imul
imul
test
and
sub
stos
mov
mov
sbb
mov
repz
outsl
or
cli
sar
jns
insb
adc
jo
push
or
xor
test
adc
iret
or
sbb
rcl
sub
testl
fwait
leave
push
rol
int3
fisubrl
sbb
pop
push
arpl
dec
push
mov
stos
pop
dec
loopne
and
push
cmp
xchg
lods
in
scas
imul
mov
imul
cmpsb
or
les
xchg
sbb
mov
ss
pop
repnz
sbb
out
mov
inc
xor
sbb
pop
mov
ss
lret
out
out
or
mov
aam
push
push
fwait
inc
pop
leave
adc
xchg
je
push
push
aaa
leave
and
popa
je
push
test
test
dec
out
fbld
sub
ss
cmp
jg
mov
icebp
fs
cltd
pop
in
push
arpl
addr16
ficomps
add
or
jb
cmp
fwait
pushf
mov
jecxz
scas
leave
or
addr16
sub
add
add
mov
push
sub
xchg
lods
scas
outsl
xlat
add
mov
dec
pop
sbb
add
insl
jbe
rcrb
or
xlat
sub
mov
or
add
xor
add
out
inc
adc
je
mov
mov
sbb
nop
xchg
pop
xchg
dec
test
xchg
lock
mov
test
push
jbe
test
xchg
imul
xchg
test
cwtl
pop
out
add
adc
cltd
cmp
leave
add
xor
test
jge
add
or
adc
insb
push
or
or
shr
outsb
add
push
gs
mov
xchg
frstor
mov
ficompl
and
fistpl
je,pt
pop
and
sbb
mov
incb
inc
faddl
mov
xchg
daa
fcoml
xchg
fisubl
inc
sub
pop
sub
gs
addr16
pop
out
xchg
lea
pop
rclb
jecxz
popa
cmpsb
and
dec
mov
push
inc
add
pop
lret
mov
add
mov
cmp
push
and
sub
out
lods
dec
icebp
xor
lahf
loopne
leave
inc
inc
cmp
fsubl
xor
add
cld
inc
cli
adc
inc
inc
mov
mov
sbb
mov
dec
mov
arpl
fsubrl
cmpsb
sbb
cmp
or
push
cld
sub
sbb
and
test
lret
or
pushf
cld
add
xchg
push
and
add
das
mov
cmpsl
or
lods
imul
scas
scas
test
xor
dec
dec
pop
fwait
push
mov
daa
or
pop
add
sahf
jecxz
outsb
add
jmp
into
test
dec
push
mov
and
inc
push
xlat
test
inc
stos
clc
test
cmpsb
shlb
pop
or
in
and
inc
pop
mov
cmp
pop
daa
dec
or
adcb
dec
fsts
sbb
mov
inc
jo
add
sbb
mov
test
mov
or
or
int
mov
insb
dec
adc
sub
scas
pop
push
adc
jecxz
int3
add
nop
sub
jns
out
lss
mov
jecxz
dec
dec
sub
nop
add
dec
sti
add
sub
xchg
dec
mov
sub
inc
or
adc
jae
iret
push
cmpsl
mov
into
and
fiaddl
stos
loope
shrb
or
inc
aam
mov
or
add
or
dec
mov
adcl
cltd
test
mov
subb
ds
push
shlb
jecxz
dec
call
pushf
fistps
loope
sub
mov
xchg
or
loope
fcompl
aam
cltd
adc
loope
xchg
push
mov
jo
pop
popa
dec
cmp
rcrl
mov
iret
popf
cmp
fldl
pusha
es
repz
in
pop
sbb
cmp
pop
mov
scas
cltd
and
cltd
cmp
mov
in
jle
int
dec
mov
int
cmpsb
shlb
adc
enter
xchg
mov
xchg
lret
xlat
mov
mov
fists
insb
sbb
mov
sbb
dec
mov
inc
rorl
and
xchg
cs
pop
dec
out
mov
stc
and
pop
insl
push
cld
sub
fsubs
loop
test
notl
lock
pop
enter
out
xor
loope
mov
cld
inc
loope
imul
fldcw
add
into
pop
nop
iret
mov
xchg
mov
add
sub
mov
aaa
sahf
pushf
mov
jbe
or
mov
mov
jae
xchg
sti
scas
and
lret
jecxz
mov
fcmovne
loope
repz
adc
mov
add
add
xchg
add
add
xchg
sbb
sbb
imulb
das
jne
pop
lea
xchg
pop
inc
inc
and
dec
mov
adc
setno
mov
stos
mov
mov
lods
ja
fistpl
mov
movsl
push
andl
into
jbe
imull
out
mov
sub
negl
lods
ret
pop
scas
les
jl
xchg
imul
clc
pop
jnp
aaa
loope
rol
cmp
sub
mov
popf
xchg
ss
fwait
icebp
push
fsubrs
pop
lea
mov
lret
sbb
inc
sbb
push
mov
popf
test
cs
push
scas
xchg
nop
std
mov
lods
jle
int3
adc
jno
fstl
push
incl
icebp
xlat
jle
dec
inc
rcr
and
cwtl
mov
imul
cwtl
push
or
cltd
mov
adc
lret
test
push
xor
sbbl
and
out
sub
inc
js
adc
std
xlat
xor
sbbb
mov
out
insl
add
or
testl
test
lock
jl
sbb
pushf
pushf
xchg
int3
push
jmp
test
sub
and
dec
pop
ret
or
or
pop
inc
insl
icebp
cld
pusha
addl
mov
stos
cmpsl
decb
mov
push
mov
or
iret
adc
inc
and
sti
or
ret
adcb
scas
cwtl
shll
xchg
or
std
xchg
sbb
addb
pop
gs
add
and
je
js
repz
pop
inc
sbb
jmp
into
fistl
rcrb
call
mov
sbb
xchg
imull
ffreep
mov
mov
rol
fstpt
pushfw
out
push
dec
jno
cltd
icebp
int
insb
xlat
fs
addl
lret
adc
xor
test
mov
jecxz
push
std
cltd
or
adc
mov
popa
aad
mov
and
cmpsb
pop
cs
andl
adc
xor
mov
push
sbb
insl
fnstsw
pop
pop
imul
pop
outsb
mov
pop
or
xchg
adc
sbb
and
cmp
jecxz,pn
jo
inc
xchg
pop
mov
push
jb
popa
jnp
dec
mov
inc
lret
js
ss
lock
inc
mov
cmpsl
ret
mov
loopne
mov
add
mov
outsl
xor
nop
cmpsl
movsb
nop
lods
popf
pop
ficoms
rcrb
push
dec
loope
nop
shlb
add
stos
insb
mov
arpl
das
jecxz
xchg
fxtract
cmpsb
add
cltd
mov
into
mov
adc
cmp
sbb
xchg
into
out
xchg
add
mov
push
and
ficoml
mov
fcmovu
add
xchg
add
push
jmp
add
out
sti
jle
xchg
jbe
jns
ret
call
dec
std
aad
jbe
sti
cwtl
fists
lods
xchg
xchg
mov
lock
stos
loopne
dec
nop
hlt
stos
cmp
test
testl
or
xchg
imul
out
lret
xlat
pop
xchg
cli
jns
sbb
xchg
sbb
jb
mov
adc
js
mov
stos
xchg
out
adcb
aam
notl
and
and
xchg
add
lcall
les
loope
xchg
dec
add
pop
inc
test
xchg
jns
fwait
mov
stos
icebp
enter
adc
sbb
test
push
mov
decb
mov
cmp
loope
mov
sbb
mul
xchg
adc
add
adc
pop
jnp
sbb
nop
inc
loope
adc
dec
mov
push
sub
les
clc
ficompl
std
xchg
xchg
pop
loope
or
xor
jnp
mov
xchg
in
mov
shlb
cmp
or
inc
lcall
notl
inc
and
xchg
movsb
and
adcb
mov
lcall
mov
sbb
test
adc
mov
or
movsb
inc
adc
dec
and
arpl
jmp
or
add
aad
and
sbbb
sub
lcall
sbb
gs
adc
cs
jb
roll
in
cmpsl
add
fisttpll
jle
enter
dec
inc
les
dec
cld
jae
insl
dec
std
add
arpl
call
push
sbb
jle
nop
and
sbb
xor
jp
cmpsl
push
lds
xchg
mov
adc
push
xchg
push
pop
sub
or
push
cli
and
lcall
xchg
adc
jge
aam
xchg
daa
rcrl
mov
xchg
inc
call
cwtl
pop
sub
push
stc
sbb
cmp
push
adc
ljmp
imul
jne
in
arpl
cmp
adc
adc
push
push
adc
insl
or
sub
aaa
roll
sbb
arpl
fbld
sbb
testl
jle
sbb
sbb
loop
fcoml
sub
rolb
in
pop
fstpl
adc
cltd
cli
and
jno
add
xchg
xchg
pop
shrl
and
jecxz
js
nop
dec
rorb
jne
adc
hlt
add
pop
movsb
and
mov
repz
addb
cmp
xchg
je
lods
cmc
sar
arpl
push
int3
dec
test
negb
sbbl
xchg
rcrl
adcb
ja
adc
xor
in
inc
mov
add
shll
out
pop
popf
lods
jecxz
xchg
lahf
sub
outsb
lea
adc
jno
aaa
add
lcall
rclb
mov
xchg
xor
adc
adc
shl
nop
aas
dec
or
xchg
repz
dec
into
xchg
xchg
out
repz
negl
dec
push
push
lods
push
int3
dec
or
repnz
xlat
ja
sti
rcll
add
adc
sbb
scas
add
mov
cwtl
mov
sub
dec
adc
add
xchg
or
jecxz
jbe
rolb
movsb
dec
scas
xor
sar
outsb
test
lret
lcall
notb
jnp
hlt
mov
add
notl
adc
or
dec
enter
or
std
fcmovbe
or
xor
mov
imul
adc
fdivl
push
fwait
xor
test
imul
aas
push
jl
mov
ljmp
jecxz
push
loope
sbb
jae
loope
add
xchg
add
addl
push
adc
jbe
cld
adc
nop
mov
xchg
paddd
cmp
mov
push
add
cld
nop
ret
sbb
xchg
push
dec
or
loope
xorl
adc
in
jo
jno
arpl
std
filds
ja
sbb
enter
bound
mov
in
add
test
pushf
xchg
rorl
add
cmp
push
adc
adc
mov
ror
push
testl
adc
ja
out
lea
jne
jns
cld
jl
sbb
inc
adc
movb
adc
push
out
push
inc
jecxz
pushl
lret
aam
mov
inc
idivl
pop
lea
inc
add
out
push
insl
add
pop
cld
xchg
xor
mov
cld
add
sbb
jb
add
shl
dec
sbb
std
fsts
mov
add
push
popf
stos
adc
stc
xchg
cwtl
mov
or
push
jge
pop
enter
add
xchg
push
cmp
pop
out
xchg
cld
aad
std
inc
adc
jecxz
sub
popf
aas
push
inc
add
mov
fs
mov
cltd
xchg
and
jecxz
push
addb
jne
and
clc
ja
shr
sbb
adc
push
xchg
fmull
rcll
mov
pop
jne
and
lea
es
aaa
stos
cmpsl
dec
mov
in
hlt
jl
ljmp
fs
jecxz
xchg
js
sbb
lret
add
jecxz
mov
popf
jne
scas
fs
or
xor
fstpl
push
cmpsb
je
mov
or
jecxz
andb
or
jecxz
jno
rcr
sbb
push
xchg
jl
aam
cmp
xchg
enter
jnp
inc
inc
rorl
or
mov
dec
lret
rol
add
jp
jl
out
adc
push
jne
and
jl
dec
adc
adc
mov
out
std
mov
dec
push
std
inc
int
dec
cmp
and
jbe
mov
jp
cmp
cltd
sbb
adc
or
jbe
mov
test
jge
fisttpll
add
roll
or
bound
xchg
mov
xchg
xchg
test
loope
mov
add
xchg
jmp
jnp
loope
jne
and
pop
add
or
jecxz
lods
add
fstl
sbbb
jne
and
cmp
dec
sbb
sbbl
les
and
mov
or
jecxz
or
or
jecxz
sar
or
xchg
push
jge
ss
push
fnstsw
cld
nop
shll
mov
aad
popf
clc
push
ffreep
int3
add
adc
adc
daa
aad
cmp
je
and
push
push
pop
pop
lock
dec
addl
nop
xchg
fs
adc
dec
push
and
mov
xchg
ss
adc
mov
jne
add
popa
cli
pushf
push
xor
rclb
sbb
inc
and
js
nop
lret
or
ret
cltd
js
ss
inc
xchg
sub
mov
addr16
popf
sub
fwait
jne
and
shl
shll
arpl
add
add
push
jne
and
nop
repz
or
dec
scas
jp
imul
push
lahf
and
repz
mov
loop
sbb
out
fnstcw
into
out
add
mov
fnstsw
jecxz
push
add
fnstsw
xor
cmp
loopne
mov
mov
jecxz
std
in
in
push
cmp
popf
push
jl
insl
loopne
or
rcrb
add
scas
lea
repz
test
jecxz
std
setno
js
xor
fwait
gs
jecxz
enter
mov
mov
mov
rolb
adc
push
sub
loope
push
aam
addb
aad
and
iret
xor
jg
popa
push
add
daa
test
xor
inc
push
push
outsl
fdivl
std
gs
xchg
mov
add
and
vmovsd
adc
dec
pop
aad
rcll
sbb
inc
jmp
and
nop
push
push
fcmovb
add
mov
ficompl
or
in
mov
lcall
inc
pop
add
sbb
or
jmp
sbb
xorl
loope
mov
or
sarl
pop
sbb
xchg
js
or
xchg
jecxz
bound
add
pop
arpl
pop
add
push
push
fstpl
orl
push
xor
adc
decl
std
cltd
mov
clc
outsl
aas
mov
sbbl
cwtl
jecxz
jne
mov
add
push
add
dec
loope
sub
insl
xchg
inc
push
sbb
xor
add
out
pop
push
mov
add
loop
add
xchg
lahf
lea
mov
add
out
add
adc
sbb
and
push
arpl
clc
xchg
add
dec
out
mov
add
and
loopne
dec
mov
in
adc
cli
inc
idiv
outsb
fdivl
sbb
mov
xlat
or
lret
pushf
std
pop
dec
push
nop
fstl
and
add
shll
out
and
nop
int
repz
push
nop
dec
ret
js
data16
lahf
sbb
sub
rcrl
xchg
mov
cli
dec
pop
mov
loope
add
std
imul
cmp
nop
loopne
add
cli
push
dec
jne
and
add
mov
enter
xchg
jecxz
pop
jge
cltd
jmp
arpl
push
add
mov
xchg
pop
mov
or
push
sarb
add
outsl
lcall
lret
dec
mov
jae
repz
sahf
mov
aam
xchg
add
xchg
jmp
jecxz
pop
xchg
pop
push
mov
jge
cli
xlat
pop
rol
and
mov
or
jecxz
popf
rolb
add
push
sub
jns
out
add
add
sar
mov
enter
jl
insl
add
or
jecxz
mov
fucom
jecxz
and
arpl
pop
jecxz
jae
loope
aam
ja
add
xorl
filds
push
js
lcall
lea
or
fisubs
mov
out
pop
adc
xchg
gs
xchg
mov
fucom
pusha
add
adcl
mov
mov
mov
add
leave
icebp
add
fcomps
mov
inc
jl
and
add
push
cld
xchg
loopne
jecxz
lea
push
out
mov
or
jecxz
sbb
into
int3
lret
in
nop
mov
xchg
out
cltd
and
adc
mov
jmp
add
xor
cmp
push
xchg
insb
sbbb
sub
cmpl
mov
jg
mov
std
inc
or
add
lret
ret
sub
add
add
imul
mov
jle
fsubr
cmp
aad
sub
jne
and
add
xchg
adc
shll
fiadds
push
add
rcrb
push
rcr
dec
and
cmpb
and
sbbb
sbb
dec
xchg
test
and
lret
add
mov
xor
push
adc
shlb
leave
jecxz
add
mov
or
push
rorl
mov
mov
fstpl
push
pop
fucomp
nop
push
xor
fstpl
mov
mov
or
ret
fimull
xchg
rcr
jns
add
mov
jbe
ss
aaa
subl
outsl
mov
jo
inc
scas
scas
and
pushf
sti
sub
insb
ficompl
hlt
in
fwait
scas
inc
addl
adc
movsl
add
dec
movsl
mov
sub
xchg
cs
xchg
mov
and
popa
out
js
sub
rorl
pushf
push
fs
sbb
roll
ret
pushf
js
loope
sub
push
in
push
cwtl
pop
inc
scas
int
jmp
sbb
sub
adc
mov
ficompl
insb
mov
aad
cwtl
mov
inc
add
adc
loop
sbbl
xchg
aad
jae
fstp
loope
mov
adc
lea
inc
cmpsb
imul
cmp
jp
xor
mov
or
in
pusha
dec
pop
test
inc
add
scas
xor
inc
xor
in
shll
int
sti
outsl
lcallw
sub
out
add
lcall
xchg
adc
and
inc
mov
cltd
into
inc
adc
sub
mov
jns
add
jp
jne
scas
sbb
mov
loope
xchg
inc
cs
es
lret
fwait
insb
cs
mov
adc
lea
sub
push
and
pusha
push
mov
aaa
out
jno
and
cltd
out
nop
jae
push
cltd
std
adc
pop
icebp
in
cmp
stos
popf
push
fmul
jbe
sbb
stos
cmpsb
add
hlt
and
enter
out
xor
sahf
dec
or
dec
test
lret
jecxz
push
push
mov
decl
jns
mov
mov
sbb
add
lock
sub
pushf
in
movsb
sub
pop
mov
and
inc
mov
icebp
mov
inc
mov
mov
push
push
cmp
pusha
inc
and
xor
or
scas
jecxz
into
dec
gs
jnp
jmp
ret
xor
test
and
popf
adc
adc
mov
dec
scas
addr16
sub
and
fsubrl
loop
add
in
jp
xchg
pop
enter
pop
mov
push
push
inc
cli
cs
sbb
pop
pop
xor
add
inc
insl
cmc
mov
cmp
shrl
cltd
out
jmp
fcomi
pop
adc
jp
sub
fidivrs
arpl
leave
inc
nop
push
or
pusha
iret
mov
or
cmp
jb
mov
mov
popa
jg
xor
adc
cmp
mov
xor
pop
push
fimuls
push
sbb
ret
sbb
add
mov
aas
fildll
add
data16
js
mov
cld
xor
sbb
jl
icebp
pop
xchg
inc
jecxz
jge
jle
xchg
cld
shl
or
fdiv
mov
mov
mov
pop
shrb
jecxz
adc
jbe
push
adc
fstpl
enter
sbb
push
cltd
push
mov
sbb
mov
sahf
jbe
sbb
scas
ret
sbb
std
adc
pop
mov
fbld
inc
stos
call
sbb
repz
data16
mov
sbb
add
adc
insb
sbb
push
sub
hlt
cld
pushf
sub
jp
loop
inc
minps
fs
or
xchg
pushf
gs
insl
push
lcall
seto
jnp
and
sub
mov
cmp
adc
sbbb
test
ret
jmp
mov
xchg
sub
aad
dec
mov
adc
arpl
pop
or
ds
nop
leave
jmp
lret
mov
test
hlt
push
jmp
mov
mov
loope
les
pop
dec
jne
xchg
loope
sbb
xchg
mov
flds
push
cs
xchg
stos
and
fimull
int3
mov
pop
xor
mov
or
ss
or
addl
mov
shlb
sbbl
jnp
push
incb
sub
fisttpll
inc
test
test
add
addr16
stc
lret
icebp
sar
arpl
popf
sti
sbb
add
and
arpl
push
pushf
add
pushf
pop
and
jns
stos
scas
inc
jne
xlat
pop
std
sbb
push
sti
stc
loop
push
arpl
lock
lock
pusha
iret
mov
pushf
imul
push
insl
mov
add
lock
cmp
iret
or
dec
ds
adc
xchg
imul
shll
dec
stos
out
mov
cmc
mov
push
cmpsl
and
and
or
or
ds
pushf
jno
dec
cmpsb
and
push
rorb
pop
jle
loop
or
xchg
xchg
in
leave
nop
arpl
xchg
sbb
xchg
adc
mov
cltd
lcall
bound
push
fmull
inc
cmc
mov
pushf
or
cmp
fsubs
cltd
mov
cmc
mov
mov
sub
xlat
adc
inc
and
or
fdivs
daa
add
mov
daa
or
add
or
dec
mov
out
jecxz
cs
lahf
lea
lret
lcall
jno
cmp
shlb
push
sbb
sbb
mov
into
pop
pop
xchg
or
mov
or
adc
cltd
pop
jno
shll
sbb
popl
ret
ljmp
movsb
fistps
push
pop
adc
roll
or
mov
roll
test
mov
dec
and
xor
or
sbb
sbb
test
ret
inc
and
pop
dec
sub
add
test
mov
ss
sub
push
and
ficoml
pop
sti
movsl
js
fwait
adc
mov
fcmovbe
mov
or
sub
lea
jecxz
es
mov
or
add
inc
mov
lods
jp
mov
push
or
lds
lea
pop
push
clc
jg
sahf
fbld
push
mov
or
repnz
int3
imul
sbb
fwait
pop
lcall
rolb
xchg
into
ja
call
fiadds
mov
mov
insb
push
xlat
jecxz
and
outsb
into
push
xlat
push
dec
mov
pmuludq
and
rcl
or
mov
dec
xor
mov
pushf
sbb
dec
andb
into
mov
imul
xlat
stc
mov
andb
fwait
cwtl
sbb
xor
mov
mov
cmp
int3
fisubrl
cmp
push
rclb
rcrl
mov
int
mov
or
sub
dec
mov
xor
adc
mov
inc
sbb
sub
iret
rorb
pop
fldt
ja
mov
int3
decl
fcompl
xchg
data16
inc
insb
sub
dec
je
xor
mov
lods
cld
sub
repz
imul
xor
xor
pushf
jmp
mov
add
jne
das
ror
ret
xlat
push
inc
aad
aam
xlat
fucomi
in
loop
je
popa
adc
mov
pop
adc
sbb
add
enter
fisubrs
lods
out
stc
loop
sbb
jge
scas
imul
add
ret
stc
dec
xor
out
mov
jle,pn
scas
dec
and
insl
lahf
std
sbb
ror
pop
jnp
and
hlt
mov
mov
adc
and
fsts
pop
pop
subl
pop
xchg
mov
cmc
mov
aam
int3
cmp
mov
sbb
cmp
mov
lods
or
sub
bound
and
int3
mov
test
inc
mov
adc
lock
out
jne
cmp
in
inc
int3
mov
push
ret
cwtl
xchg
hlt
adc
push
adc
aam
xchg
cmc
ret
adc
and
addb
movl
sub
filds
cmp
fdivl
adc
dec
xchg
jecxz
xchg
xor
dec
mov
or
jne
test
das
fstp
clc
mov
jp
movsb
stc
sbb
int3
push
adc
cs
stc
adc
and
loopne
xchg
inc
fucomp
loope
add
sub
hlt
bound
push
ror
loopne
push
push
in
filds
je
hlt
cltd
imul
jecxz
sbb
hlt
xchg
jnp
cmpl
into
shlb
in
add
adc
mov
sar
pushf
add
push
adc
xor
sub
add
add
inc
push
inc
loope
mov
or
add
push
and
dec
ret
or
gs
sub
adc
loope
imul
je
jae
arpl
add
xchg
insl
pop
sarb
mov
adc
xchg
cld
push
neg
lcall
sbb
push
adc
sub
into
mov
loope
dec
and
jecxz
aas
jmp
fisubs
dec
mov
inc
xchg
fdivrp
sbb
adc
call
or
pop
cld
add
aad
fcoml
jns
and
add
cli
lret
arpl
mov
test
leave
fcmovnb
mov
xchg
xchg
push
lcall
adc
cmp
lahf
cltd
iret
aad
fsubrp
std
cmp
jecxz
ret
jnp
aas
adc
cld
rolb
jecxz
xor
sbb
adc
test
nop
mov
adc
shlb
shll
jecxz
jno
and
jecxz
push
or
jecxz
adcl
mov
add
dec
xchg
lret
and
add
sub
popf
push
lock
xchg
adc
mov
cltd
dec
and
nop
cmc
sbb
out
rcrb
mov
pop
cltd
mov
loope
imul
jb
into
mov
sbb
andl
aam
mov
inc
out
nop
sbb
jecxz
and
ror
sbb
and
adc
nop
inc
fcomps
fistl
rolb
xor
call
cltd
mov
dec
aad
cltd
pop
cld
cld
loope
add
pop
push
sub
adc
loope
add
outsl
push
jmp
out
loope
repz
setns
xchg
mov
repz
add
adc
push
adc
push
sbb
jecxz
out
xchg
ss
dec
jecxz
clc
add
lock
inc
fwait
adc
nop
xchg
std
cld
rcrb
iret
and
jecxz
pop
lea
rclb
jecxz
ja
push
and
pavgw
sbbl
or
jecxz
lea
inc
shrb
fpatan
int
mov
cltd
and
cltd
cmpsl
aam
dec
jecxz
sbb
xor
mov
xor
add
aam
dec
jecxz
lret
adc
rclb
ret
adc
outsl
loop
ret
push
add
repz
in
bound
inc
loope
add
mov
push
rcll
xchg
and
fstps
lret
nop
cwtl
stos
xchg
and
cltd
mov
sbb
push
adc
xchg
pop
ss
xchg
xor
call
mov
into
pop
aam
std
dec
adc
cld
jle
loope
add
push
inc
lret
adc
outsl
add
cmpb
psraw
mov
arpl
loope
add
cld
adc
xor
mov
aam
jge
adc
sbb
mov
jmp
and
nop
loop
push
cli
mov
cltd
push
and
insb
fcomps
or
gs
imul
cltd
ja
jp
nop
push
aam
lods
push
jne
and
lret
imul
cwtl
cltd
xchg
fndisi(8087
iret
imul
add
fsub
adc
enter
mov
cmp
pop
sub
sbb
pop
imul
add
arpl
sbb
fcompl
fldcw
xchg
aas
loopne
jne
lods
pop
fists
psraw
add
sbb
fwait
xchg
xor
add
mov
les
iret
outsl
movsl
loope
jne
and
adc
fldenv
push
cmp
lcall
rclb
clc
sbb
push
adc
adc
dec
sbb
adc
lea
or
push
repz
cmp
sbb
xchg
xchg
inc
pop
push
xchg
dec
or
rcl
sub
jmp
push
call
mov
out
mov
pop
dec
xchg
xor
stos
in
std
mov
push
lea
mov
and
sbb
add
rcrl
adc
mov
add
push
adc
and
ds
add
jecxz
pushf
adc
sub
iret
filds
jbe
xchg
fcmovbe
shr
imul
push
mov
js
vaddpd
out
or
mov
and
aad
enter
sub
or
push
add
cmp
loope
repz
sbb
add
call
lahf
xorl
popa
push
cld
and
mov
cltd
lds
jne
cld
push
jl
roll
xchg
jg
sbb
loope
add
adc
inc
lret
or
xchg
xchg
sti
jecxz
shlb
aam
xchg
jle
or
or
hlt
fisttpll
std
push
sbb
push
andl
out
scas
add
xchg
clc
and
jge
jmp
stc
rcr
andb
add
adc
add
cltd
push
faddl
dec
jecxz
jae
out
lahf
lret
or
add
xchg
hlt
and
shrb
sbb
lret
xchg
pop
push
or
cmp
jno
push
pushf
xchg
sbb
dec
jecxz
add
push
add
mov
cld
xchg
inc
and
add
bound
add
adc
into
fdivrp
jae
jecxz
mov
and
aad
lret
rcr
clc
xchg
loope
add
adc
cltd
cld
adc
jecxz
clc
out
push
cltd
repnz
sub
cld
add
cmpsb
cmpsl
add
sbb
sti
subl
pop
les
repnz
cmp
add
push
add
push
xchg
les
jo
leave
xchg
loope
add
xor
adc
das
xchg
and
ljmp
stos
pop
mov
cltd
push
cltd
cmp
jmp
mov
repz
repnz
sub
test
cs
popf
sbb
mov
sbb
push
fidivl
movsl
inc
fisubl
xchg
icebp
pop
push
dec
fwait
rolb
xlat
mov
inc
xchg
mov
out
and
arpl
ret
xchg
cmp
push
stc
gs
xor
cli
pop
and
popf
int3
cmp
jne
loopne
and
xchg
scas
sbb
clc
arpl
scas
dec
mov
inc
dec
lods
or
lock
lods
pop
fistpl
adc
mov
jne
clc
cld
mov
pop
imul
sahf
ret
jno
dec
sub
ret
dec
ficoml
pusha
or
cwtl
push
hlt
dec
mov
sub
into
enter
sahf
pop
xchg
sub
dec
lods
sbb
cmp
or
fistl
adc
push
clc
sbb
mov
push
push
fwait
dec
sub
sub
inc
fidivrs
stc
push
jbe
and
xchg
out
addr16
std
mov
xlat
je
lcall
mov
sbb
call
sbb
loopne
mov
mov
loop
jecxz
pop
mov
sbb
aas
sbbl
ret
movsb
xor
rorl
add
test
enter
push
or
jnp
fsubrs
add
xor
push
notl
sti
cmp
xor
lock
loope
inc
sti
adc
dec
dec
xor
xchg
lea
mov
pop
or
or
mov
add
dec
ret
push
jp
je
fwait
pop
mov
push
jne
sbb
out
mov
fsubr
jecxz
xchg
or
outsb
repz
and
fnstenv
cli
loope
sbb
out
daa
or
mov
fcoml
push
fisttpll
cmovg
push
movsb
push
fbld
loopne
sub
jl
inc
inc
mov
repz
pushf
push
inc
xlat
pushf
in
adc
pop
add
and
shl
stos
and
mov
push
js
jmp
test
fisttpl
cld
xchg
xor
inc
xor
testl
sbb
add
dec
addr16
push
sbb
outsl
fcompl
push
outsl
sub
pusha
jl
inc
push
data16
subb
daa
mov
adc
fistl
data16
loope
or
mov
sbb
jg
movsb
mov
fidivl
dec
imul
in
rorb
inc
mov
subl
dec
push
and
les
sub
mov
or
mov
ljmp
push
lcall
rorb
push
and
out
push
push
fs
jb
popf
mov
sbb
pop
mov
dec
pop
lcall
xor
loope
std
sarl
fwait
repz
dec
adc
xchg
inc
mov
add
pop
mov
filds
and
notb
adcb
stc
fdivrp
mov
mov
ret
addr16
arpl
mov
push
sbb
inc
sub
mov
xchg
push
cmpsl
jecxz
jmp
pop
fistpl
into
jmp
arpl
fidivs
out
jmp
jg
sub
or
fsubrs
pop
out
fistps
mov
cmpsb
adc
ja
push
mov
cmpsb
inc
loopne
repz
dec
call
or
or
or
xor
dec
ret
sub
add
jecxz
xor
ret
popl
xor
push
xchg
xor
dec
sub
rolb
lock
shrb
bound
and
and
movsb
push
jne
rorb
xor
in
sub
and
cmpsb
imul
or
jno
sbb
dec
popa
pop
call
cltd
fcomps
shr
mov
rorb
push
lret
fldl
sbb
add
xchg
xchg
or
or
in
dec
sub
fists
in
cmpsl
popa
leave
movsb
adc
cmpsb
adc
lcall
inc
fistps
stos
xor
push
inc
jae
and
jb
and
jbe
daa
rcll
rcrl
adc
arpl
mov
cwtl
test
push
sub
mov
xor
inc
or
cmp
dec
cmpsl
cmp
clc
mov
daa
cmp
in
mov
xor
jmp
fisubrs
push
mov
cmpb
jb
pop
fs
ficomps
lret
dec
cmp
nop
mov
jns
sbb
mov
jne
fwait
sbb
xorl
sahf
jl
test
mov
push
out
lahf
dec
mov
test
loope
xor
scas
or
pop
add
jns
call
add
dec
cmp
sbb
loop
sbb
add
stc
test
sbb
in
daa
pop
add
loope
inc
ret
hlt
cmp
pop
pushf
movsb
bound
inc
or
cmp
pop
mov
add
xchg
pop
ret
push
adc
adc
lahf
movsbl
out
repz
pop
or
push
imul
add
push
hlt
repz
pusha
icebp
cmp
and
arpl
adc
pop
cmp
movsb
pop
xor
addr16
jecxz
add
xor
hlt
loop
push
cmp
inc
out
xchg
sbb
xchg
lea
imul
std
xchg
xor
shlb
jns
sub
mov
xorb
call
dec
xchg
adc
inc
out
pusha
cs
mov
inc
inc
test
sbb
or
shlb
xchg
or
add
loop
mov
cmp
fwait
push
out
xor
xchg
xchg
sbb
leave
loope
sub
nop
imul
xor
add
xor
pop
push
jne
andb
lar
leave
sarl
pushf
mov
lahf
push
repz
scas
pusha
arpl
aam
pop
sub
inc
sahf
adc
imul
sub
jbe
scas
add
rcrl
add
addl
adc
add
dec
test
and
fisttpl
add
sbb
jl
add
sbb
fwait
add
jl
dec
pop
int
adc
mov
into
imul
dec
clc
imul
jle
aam
ret
lea
pusha
rep
enter
loopne
jle
pop
pushf
sbb
mov
pushf
push
rdmsr
inc
xchg
sbb
mov
jle
sub
out
fwait
mov
mov
adc
es
cmp
popa
mov
in
enter
lods
cmp
jecxz
imul
out
call
loop
and
mov
sub
and
inc
dec
or
push
push
mov
mov
in
mov
and
popa
mov
cmpsb
sub
sub
xchg
mov
xchg
push
xor
xor
xchg
sbb
lret
inc
mov
mov
iret
xchg
js
xor
fnsave
sub
adc
add
jmp
jmp
lock
pushw
xor
cwtl
les
sub
mov
test
and
sub
cmp
pop
cmp
pop
xchg
push
sub
jl
cmp
cmpl
stos
inc
outsl
dec
andl
cmp
or
xchg
or
jge
daa
das
daa
les
divl
in
add
xor
or
imul
out
adc
cli
push
adc
or
mov
repz
xor
iret
xor
or
xor
xchg
cmp
sub
jae
jno
imul
scas
add
mov
movsb
cmp
dec
pop
mov
out
add
push
orl
or
inc
mov
cli
xchg
jb
cld
cmp
cli
pushf
cmp
push
andl
sti
mov
scas
or
pop
xchg
sub
inc
fcmovnbe
xor
lea
mov
clc
push
sub
mov
shl
fldenv
mov
out
push
xor
pushf
pop
das
sbb
jo
dec
out
test
js
pop
jno
ja
sbb
daa
and
out
push
dec
loope
out
and
arpl
jg
nop
movsb
addr16
cli
push
pushf
mov
jno
mov
addr16
mov
fs
in
scas
mov
iret
data16
xchg
jbe
testl
gs
jp
scas
mov
scas
rcrl
cs
push
and
dec
sub
inc
and
int3
and
bound
loope
add
or
jecxz
cmp
pushf
xchg
int
jne
mov
pushf
arpl
nop
loope
add
call
pop
jl
nop
pop
push
shl
scas
lea
mov
mov
mov
bound
fmul
psubw
in
call
fidivs
ss
jnp
xor
shrb
in
mov
in
pop
lahf
cmpsb
push
ja
pop
pop
dec
adc
jp
xchg
or
xorl
mov
bound
mov
arpl
dec
in
clc
iret
test
mov
testb
push
test
loope
add
mov
or
cli
filds
shlb
xlat
adc
shlb
inc
int
or
gs
mov
mov
pop
mov
loopne
paddq
xchg
imul
cltd
ftst
ds
push
push
arpl
loopne
jg
xchg
test
mov
jns
mov
mov
and
mov
mov
push
lahf
int
push
jmp
xchg
and
add
mov
ret
dec
gs
addr16
cwtl
ret
pop
xor
js
clc
inc
pop
push
xchg
lea
adc
xchg
pop
ljmp
icebp
stc
hlt
je
mov
data16
cmp
ljmp
add
rcll
and
cmp
push
nop
jmp
xorb
sbb
lock
nop
jge
andl
push
mov
push
adc
cs
adc
pop
cltd
es
xchg
in
adcb
xchg
jmp
scas
add
jno
int
leave
scas
out
add
inc
sub
adc
push
out
loop
shr
test
sbb
jp
and
push
sti
add
fwait
jecxz
pop
fucom
loope
add
sbb
pop
cltd
sub
loope
adcb
lcall
cltd
push
push
add
and
jecxz
iret
movsbl
rorl
ja
adcb
imull
gs
pop
jge
nop
stos
ljmp
sti
add
xchg
jecxz
xlat
push
jns
xor
iret
sbb
xchg
lret
or
cwtl
test
xchg
popf
mov
push
and
add
cmp
xlat
pop
pop
lods
decl
push
jmp
add
mov
xchg
ret
iret
add
ljmp
lcall
and
push
rolb
cmpsl
mov
adc
dec
sbb
loop
fistpl
and
ret
and
adc
fidivs
pop
ljmp
add
jecxz
pop
mov
int3
lcall
lea
xor
sub
out
subb
imul
adc
sbb
sbb
jp
lock
jmp
and
dec
push
dec
mov
sub
or
mov
mov
push
or
adc
addr16
loopne
popf
enter
pop
loopne
ljmp
pop
test
jge
movsl
pop
je
rclb
lahf
shll
imul
pop
cltd
mov
rcll
jns
pushf
decb
mov
inc
clc
repz
fcoms
and
fstpt
popf
fucomi
in
popf
xchg
mov
or
add
sbbb
sbb
or
jae
popf
pop
sub
popf
push
cli
dec
faddl
pop
xchg
popf
adc
jo
mov
and
lea
sbb
sub
imul
adc
or
test
pop
mov
sbb
cld
popf
pop
andb
xchg
push
sbb
lock
cltd
xchg
add
popf
clc
jle
loope
cmpsb
nop
cmp
push
adc
lcall
movsb
mov
jl
adc
mov
shrl
dec
fiadds
pushf
shl
inc
nop
sub
push
roll
dec
rol
jp
mov
lods
adc
pop
test
pop
pop
test
fidivrs
out
xor
std
insb
imul
faddl
aam
jno
out
outsb
xchg
imul
pop
push
jp
lods
std
subl
mov
icebp
fsts
lods
mov
into
sbb
lcall
push
xchg
or
fldenv
add
mov
outsl
rolb
push
loop
mov
test
loop
pop
add
adc
leave
insb
lock
dec
xor
sahf
icebp
jno
xor
daa
push
test
sbb
cmpsb
call
in
add
dec
out
shr
fisttps
fstpt
enter
sar
jp
lea
and
xor
adc
lahf
cli
mov
cltd
sbb
dec
add
loopne
cli
cwtl
mov
mov
ja
cmpsb
mov
lea
cli
nop
sbb
and
xor
adc
pop
fistps
sub
enter
push
push
sahf
divl
mov
pop
nop
dec
addl
xor
xchg
xchg
adc
add
lret
test
loopne
fstpt
add
es
jno
out
mov
xor
cltd
in
cmpsb
shll
xor
pop
mov
fs
adc
sbb
xchg
dec
or
call
cltd
cli
mov
pop
cmpsb
int
pop
rorb
ret
jecxz
sbb
icebp
adc
mov
mov
adc
sbb
cld
fs
repz
insb
and
dec
mov
gs
sbb
fistl
out
pop
adc
shlb
push
adc
jne
mov
imul
mov
ror
lock
xor
imul
pushf
pushl
mov
call
xchg
out
cwtl
or
fistl
xchg
sub
and
sbb
dec
lods
shrb
sbb
pop
stc
and
inc
arpl
std
jno
cmp
xchg
push
aaa
iret
shlb
sbb
push
arpl
insb
adc
jmp
imul
ret
pushf
xor
loope
out
mov
in
jb
jbe
jno
jecxz
dec
icebp
jmp
aad
add
jl
dec
xchg
add
push
push
out
fnstsw
jb
jle
sub
insb
pop
popf
mov
adc
mov
lock
inc
xor
incb
repz
int
sub
or
and
or
xchg
jb
xchg
fdivrs
movsb
push
imul
jns
lcall
xchg
mov
inc
or
into
dec
gs
sub
fcomip
sub
lods
bts
fdiv
mov
or
xchg
nop
mov
cmp
insb
repz
lods
sbb
jbe
add
cld
in
sbb
repnz
mov
lea
xchg
add
inc
pop
push
pop
dec
cmpsb
adc
cmpsb
add
mov
repz
les
adc
cmp
sbb
fisubl
cld
xchg
nop
mov
adc
nop
shl
loope
mov
scas
enter
pop
lcall
test
lods
rorl
cs
xchg
mov
sbb
cltd
lret
ret
rcll
push
cmp
fwait
push
repnz
imul
adc
push
jecxz
mov
sbb
flds
gs
dec
push
xor
pusha
mov
pusha
inc
and
xchg
lret
pop
out
shl
loope
div
sbbb
mov
leave
dec
out
lock
jns
push
mov
ret
clc
push
stos
fmull
xor
sbb
inc
test
mov
add
rcr
bound
rol
mov
mov
sub
fdivl
add
icebp
mov
or
push
push
dec
or
flds
push
sbb
sti
aam
loopne
lock
xchg
add
inc
pop
hlt
add
xchg
ret
out
insl
jns
nop
xor
lock
adc
push
out
stos
cltd
aad
les
fldt
cmp
jbe
push
imul
pop
pop
mov
pop
sbbb
aas
js
js
jl
shll
out
fstl
leave
lock
cltd
cld
sbb
xor
mov
jecxz
xchg
loope
dec
loope
ret
xchg
test
xorb
xchg
stos
rolb
inc
pop
adc
push
mov
cmpsb
repz
sub
jecxz
jno
scas
sub
dec
add
inc
push
xchg
mov
bswap
loopne
sarb
jne
jno
jns
arpl
shl
ja
rorl
push
loop
sbb
call
loope
mov
or
nop
cmpsl
lock
sbb
jp
jmp
adc
add
loope
mov
push
cltd
add
pop
inc
cmp
push
cmpsl
rcrl
adcl
adcb
cmc
shl
dec
jns
in
and
cmc
ror
ss
aam
enter
cmp
aad
popf
adc
jecxz
xchg
xchg
repz
jne
xor
sbb
cltd
jge
je
sbbb
leave
jno
lahf
jecxz
rcrl
imul
pushf
sar
aaa
xchg
test
jecxz
fsubs
shrb
adc
std
add
mov
xchg
and
fistpl
mov
aam
insb
xlat
add
test
sbb
setno
out
mov
pop
sbb
jecxz
lods
fstp
out
push
cmp
adc
jecxz
xor
pop
xchg
xchg
loope
rcr
movsb
xchg
lea
push
pause
adc
arpl
xor
xlat
jecxz
testb
and
xchg
mov
xor
xor
adc
cltd
js
bound
pop
ret
rorb
add
push
fwait
sbb
arpl
movsb
jbe
jle
sbb
cld
loope
into
fstl
arpl
iret
add
enter
shlb
mov
xchg
test
and
jecxz
int
cmpsb
sbb
in
jecxz
incb
in
inc
ja
fs
push
add
int3
xchg
mov
shr
out
mov
int
xor
lea
jmp
push
insl
ret
cwtl
iret
add
add
negb
jb
mov
mov
adc
dec
jns
xchg
mov
jge
and
loop
pop
loope
std
mov
pop
pop
and
in
jecxz
roll
iret
add
xchg
dec
and
nop
cmp
fldl
rcrb
and
push
faddp
xchg
add
out
inc
and
jge
or
add
shrb
test
and
daa
sbb
adc
xchg
cltd
loope
add
fadds
call
lret
xchg
es
xchg
adc
pop
xor
cltd
test
mov
add
adc
pop
xchg
dec
loope
fucom
loope
ret
mov
xor
jbe
adc
hlt
ret
ror
mov
cld
lock
sbb
sbb
mov
sbb
iret
pop
mov
xchg
lods
jge
cmp
pop
xchg
sahf
sbb
jl
loope
cmp
pushf
xchg
rcrb
leave
hlt
repz
cmp
xor
add
hlt
mov
adc
push
loope
ret
test
and
and
scas
stos
add
add
mov
test
int
or
pop
sbb
push
and
push
imul
dec
and
push
mov
fisubl
xor
xor
lock
cwtl
mov
fistpl
cltd
jecxz
add
sbb
aam
int
and
fiadds
std
xchg
pushf
push
cli
mov
sbb
aad
push
and
mov
sbb
rolb
jo
xchg
cmp
jge
add
xor
into
pop
cltd
test
jns
add
jecxz
stc
jb
leave
add
dec
adc
adc
xchg
mov
aam
dec
jge
sbb
outsl
adc
cltd
push
jno
add
push
lods
cmp
jne
and
or
xchg
fstl
stos
xchg
clc
sahf
jge
mov
sarb
fwait
sbb
cmp
fstp
jecxz
jp
mov
pop
push
jecxz
jp
add
aam
mov
fcoml
andl
bound
arpl
aam
add
add
add
xchg
scas
nop
fldl
add
mov
sbb
jecxz
stos
inc
xor
mov
jns
or
push
std
lods
sbbb
stos
add
ds
ror
lds
sbbb
sarl
cli
sar
push
and
jecxz
dec
loope
lock
push
adc
fmuls
add
loope
jns
and
jne
iret
int
movups
mov
andb
jp
lahf
nop
shrl
jns
sbb
loopne
test
adc
or
and
outsb
push
ret
add
pushw
mov
xor
and
fstp
loope
ret
push
adc
add
loope
add
adc
sub
aam
xchg
jl
repnz
add
ret
adc
jecxz
out
jns
cmp
rorl
mov
mov
arpl
push
sbb
add
sbbl
xor
pushf
xchg
jmp
xchg
mov
div
mov
test
js
imul
jecxz
pusha
xchg
dec
sbb
xchg
pop
stc
jns
cmpb
push
and
jg
add
add
jecxz
or
fadds
adc
and
and
jecxz
enter
sbb
iret
arpl
jno
push
frstor
cmpb
sbb
xchg
icebp
and
jne
sbb
add
jecxz
fsts
mov
adc
jecxz
xchg
xchg
in
ret
jbe
int3
rcrb
or
jp
aam
pushf
fnstsw
sti
adc
jecxz
mov
pop
loope
enter
cwtl
cmpsb
clc
iret
mov
jge
sbb
imul
addb
add
jecxz
rcrb
aam
dec
push
int
addr16
jno
imul
sbb
gs
jecxz
data16
rep
adc
repz
subl
js
push
jecxz
sub
or
xchg
mov
sub
xchg
push
inc
arpl
shlb
fisubs
xchg
arpl
add
aam
xor
fs
adc
jecxz
out
fistpll
aam
mov
fiaddl
jge
cltd
xlat
pop
xchg
pop
fstl
ret
cltd
jge
aam
loop
bound
lods
clc
roll
push
sbb
add
fwait
jecxz
push
xchg
inc
cltd
shl
pop
adc
and
andb
sub
jecxz
mov
jge
dec
fwait
dec
inc
aam
push
pop
nop
das
mov
dec
jns
jecxz
dec
std
repz
cltd
ficompl
nop
jecxz
adc
mov
jge
lahf
shl
cltd
xchg
and
bound
ja
scas
push
add
add
xchg
push
ss
jecxz
je
ret
jns
xchg
cltd
mov
sbb
adc
int3
std
sub
add
fwait
mov
sbb
roll
pusha
jecxz
mov
add
dec
jle
pop
pop
lea
fisttpll
add
in
shl
jecxz
in
xchg
lea
cmpsl
lds
jmp
xchg
or
loope
lock
adc
adc
cli
inc
xor
aaa
pop
fcoml
xor
xchg
jecxz
sub
jb
leave
add
dec
xchg
dec
and
lock
mov
adc
arpl
xlat
jge
jp
shlb
pop
out
and
add
xchg
xchg
fstpl
cmpsb
jle
js
add
xchg
jne
std
ret
pop
fiaddl
nop
add
lock
mov
loope
jns
and
sbb
adc
mov
xchg
fwait
sub
xchg
or
mov
inc
pop
xchg
out
inc
jg
scas
push
rcl
pop
and
filds
or
mov
adc
jecxz
mov
orb
cltd
jo
xor
xchg
sub
push
imul
out
pop
mov
xchg
or
es
lea
iret
repz
pop
arpl
mov
fstl
scas
decl
sub
jmp
into
lret
cmp
fnstsw
loope
lock
push
stc
loope
imul
outsl
jecxz
loope
push
push
adc
jg
rcll
sahf
cltd
hlt
pop
xchg
jle
nop
pop
fstl
faddl
daa
enter
incb
push
dec
rcrb
inc
movsb
adc
or
pop
push
lods
sub
add
or
cmpb
and
ljmp
and
add
pop
jecxz
sar
sub
repz
pop
dec
add
pop
jns
and
jecxz
gs
lock
testb
and
fiadds
aas
incl
sbb
adc
xchg
cltd
add
sbbb
push
add
arpl
add
mov
add
mov
dec
cmp
int3
push
inc
cld
rclb
lcall
xchg
cmp
adc
arpl
pop
jns
add
pop
mov
sbb
jmp
out
adc
cli
pusha
add
andb
sbb
push
pop
cltd
and
push
add
stos
std
loop
or
stc
jns
add
jge
sub
add
rcll
repz
lods
cmpb
adc
add
into
or
scas
push
pop
jmp
or
sar
loopne
pop
imul
jl
nop
inc
adc
popf
icebp
or
pusha
jb
scas
cld
test
adcb
cltd
or
cltd
push
or
mov
inc
lods
dec
adc
sbb
roll
cltd
and
add
scas
push
cs
pop
cmp
pop
scas
mov
iret
inc
adc
push
aad
jecxz
add
js
jns
and
or
push
lock
pop
adc
adc
aam
je
cmpb
push
and
jp
sbb
ja
push
clc
ret
sub
xchg
add
lock
cltd
mov
out
jge
pop
xchg
cmp
popf
lock
push
xchg
mov
xchg
and
dec
into
pop
mov
std
ret
popa
and
in
jecxz
int3
add
add
scas
mov
mov
outsl
jecxz
dec
sub
dec
jns
and
jecxz
fs
lock
adcl
mov
adc
repnz
add
or
addl
xchg
sahf
adc
cltd
push
sbb
add
mov
and
add
ds
add
add
dec
aam
loopne
jecxz
add
mov
std
fdivrl
jecxz
fucom
arpl
dec
ficoml
hlt
adc
jl
mov
jge
scas
add
andb
lock
push
adc
and
add
add
add
dec
jecxz
cmpsb
xorl
add
push
xchg
shll
xor
push
xor
xorl
lock
cltd
lock
push
rol
test
push
fdiv
jle
adc
aam
iret
jge
popf
loope
add
jne
add
jecxz
jge
jecxz
xor
push
jp
lds
adc
jecxz
mov
push
loope
push
xchg
in
sarl
clc
fwait
rorl
popa
adc
sbb
outsb
jns
ret
mov
jne
scas
push
into
push
pop
dec
addb
js
adc
adc
std
fs
jecxz
popa
loope
lock
repnz
jmp
aaa
addl
or
cltd
xchg
and
xor
int
xor
jns
filds
xor
adc
xchg
xor
cltd
fmul
adc
add
mov
nop
jns
lahf
xchg
push
sbbl
loop
push
sbb
xchg
ss
mov
adcb
push
call
or
adc
int3
add
xchg
ja
mov
jge
insb
push
mov
out
pop
mov
xchg
adc
pop
std
and
add
mov
jno
mov
jns
pusha
jecxz
mov
pop
add
jecxz
mov
inc
add
push
push
mov
inc
faddl
push
fmuls
out
add
dec
add
add
xchg
outsb
ret
xrelease
sti
lahf
pop
push
push
sbb
add
test
and
sbb
adc
xchg
cltd
fmull
lods
xchg
clc
pushf
jge
xlat
popf
cmp
push
popf
inc
out
cli
cltd
jns
in
or
fcoml
mov
xchg
push
xchg
xor
aam
adcl
xchg
sbbl
pop
fstpl
and
add
mov
add
xchg
or
loop
xchg
aam
lahf
nop
adc
shlb
dec
jno
mov
and
iret
jns
pop
jecxz
mov
push
add
jecxz
lret
xchg
add
je
lds
insl
enter
push
sar
push
and
jecxz
dec
loope
lock
pop
adc
fimuls
add
loope
jns
and
mov
ss
out
xor
orl
sbb
sub
push
cmpl
mov
push
push
sub
push
xchg
test
and
add
xor
jbe
js
push
sbb
pop
cmp
popf
lock
lea
outsl
cmpsb
cmc
stc
out
dec
mov
add
xchg
push
cmpl
jp
ja
dec
add
aaa
out
and
imull
adc
xchg
mov
add
cltd
aam
ficomps
push
imul
pop
sub
xorl
adc
cmpsb
jle
jo
push
adc
xchg
cmpl
ret
lods
xchg
xchg
insl
jbe
aaa
leave
int
mov
orb
pushf
pop
loope
pusha
xlat
fstl
xchg
and
ljmp
es
loopne
pop
mov
adc
pop
jnp
lock
xchg
mov
dec
rorl
pop
loop
lods
push
adc
push
nop
pusha
pop
fstl
andl
sbb
add
and
sub
mov
xor
pop
stc
cltd
push
push
fadd
test
push
inc
add
or
or
xchg
les
jmp
sti
adc
lods
add
pop
push
cmpsb
es
mov
jbe
rclb
mov
pop
push
cltd
cmc
cld
movups
jmp
mov
cmpsb
xor
mov
mov
mov
and
imul
inc
in
fcmovnbe
fwait
loope
ret
or
test
sub
std
push
mov
cmp
cwtl
mov
add
movsl
mov
imul
cmpb
arpl
xchg
sbb
scas
mov
cltd
add
cwtl
aas
push
out
rolb
roll
add
mov
pop
xor
or
addl
fnstsw
scas
sbb
add
adc
add
ffree
add
enter
jno
je
cmpsb
lahf
mov
neg
mov
xor
aas
call
jbe
subl
adc
pop
cli
xor
inc
leave
or
rclb
and
sub
pop
sub
ljmp
and
sbb
into
aas
in
mov
cmp
mov
adc
test
sbb
jb
arpl
int3
or
push
adcl
test
cltd
pop
iret
cltd
in
jecxz
jmp
pop
xchg
cmpsl
outsb
les
in
lahf
out
popf
mov
or
jns
int3
xor
out
iret
lock
pop
jnp
data16
dec
or
and
mull
stos
and
add
push
push
std
sahf
fists
scas
popf
in
mov
cmp
stc
cwtl
setae
cmpsb
and
push
push
popf
jbe
ss
cmp
repz
fisttpl
xor
mov
fisttpl
jmp
push
sub
vmwrite
test
push
ret
rcrl
push
pop
pop
sub
mov
int3
xchg
inc
add
jecxz
aad
dec
or
jo
fs
push
adc
sbb
popf
inc
jecxz
adc
pop
add
cs
xor
inc
and
fisttpll
cmc
outsb
and
test
sarb
enter
add
xor
in
sub
scas
push
jp
addb
xchg
clc
xchg
xchg
loope
in
cs
sar
inc
mov
mov
inc
out
xchg
cmp
sub
icebp
jo
jae
mov
or
add
xchg
xchg
jae
fdivr
jg
into
adc
jnp
js
or
sarl
xchg
inc
jmp
add
fcoml
gs
jle
sub
adc
aaa
jns
pop
add
inc
sub
adc
sbb
out
sub
mov
pushf
pop
mov
pop
xchg
xor
push
add
push
aam
sbb
cmp
cmpsb
insl
testl
or
test
in
in
push
jb
pop
iret
ss
stc
pop
jae
adc
sti
or
dec
xor
jge
incl
outsl
hlt
pop
in
js
inc
xchg
adc
cld
loope
pop
xchg
mov
ror
enter
xor
cmpsb
ficoml
ds
mov
add
rcrl
push
push
push
les
not
add
pop
testb
dec
enter
adc
adc
jecxz
bound
or
fists
shrb
cmp
into
rorb
xchg
cmp
pushf
add
in
dec
shl
cltd
inc
fwait
jo
mov
repz
add
cld
movsb
call
push
jecxz
xor
inc
mov
mov
sbb
cmp
pop
jbe
gs
add
cmp
xor
or
inc
cltd
jmp
pop
xchg
iret
mov
dec
mov
push
sbb
sbb
mov
adc
insl
add
subl
scas
stc
add
pusha
adc
adc
pop
cwtl
xchg
sbb
pushf
scas
fstpt
sarb
sub
pmovmskb
shl
in
sahf
test
sbb
int3
lret
popa
fimuls
ljmp
sbb
mov
xchg
mov
lret
sbb
inc
lock
int
xchg
push
loope
cmc
ss
pushf
push
cmp
cmpsl
xlat
test
lds
ret
ljmp
pop
movsl
and
jb
mov
shrl
inc
inc
pop
cli
push
mov
xlat
icebp
sahf
repz
mov
sub
pop
mov
and
stos
inc
loope
or
cmp
jge
std
fisubs
test
shrl
add
sbb
sub
int3
mov
xchg
sbb
lea
or
jge
sti
mov
add
cltd
xor
fistpll
and
pop
mov
xlat
push
xchg
dec
call
cmp
mov
cmp
fimull
lcall
sbb
icebp
dec
push
sbb
dec
arpl
loopw
lods
push
std
push
mov
testl
sti
std
mov
fmull
jns
test
cwtl
loop
ret
cmpsb
arpl
loope
std
shll
push
jnp
movsl
bound
xor
ret
or
mov
in
mov
add
lahf
fistl
push
iret
lea
dec
mov
mov
test
push
adc
mov
fstl
sbb
mov
out
jo
lahf
xorl
sbb
leave
int3
gs
fsubl
rcrb
sub
lret
and
mov
mov
pushf
xor
mov
popa
jge
loopne
int
insb
mov
test
mov
pusha
pop
cltd
in
sbb
in
in
jecxz
sbb
cld
push
mov
int3
stos
sbb
shl
mov
int3
test
mov
cmpsb
sbb
rcr
outsl
or
push
mov
fcmovb
jmp
push
xor
jnp
jbe
out
jecxz
cmpsl
pop
iret
mov
ret
mov
adc
lods
push
adc
cmc
imul
aad
negl
icebp
in
add
loope
jl
mov
xchg
es
inc
adc
push
sub
fnstsw
lods
pop
inc
sbb
mov
inc
cwtl
xor
nop
jo
lcall
jb
testb
scas
lcall
fldl
pop
adc
mov
push
ljmp
and
std
mov
movsl
cmovbe
xor
sbb
lret
cli
pop
leave
xor
psrlq
pop
xor
lds
iret
fwait
mov
cmpsl
mov
cltd
into
sbb
sub
add
adc
adc
pop
loop
fmull
adc
das
xlat
jecxz
cmovbe
sbb
sub
jl
mov
pop
mov
in
hlt
ffreep
xchg
daa
sub
ljmp
je
data16
cltd
mov
jecxz
inc
daa
pop
rcrl
adc
or
jae
xchg
mov
loop
insl
test
jg
rdmsr
and
or
xchg
push
push
test
push
jge
mov
jae
int
add
xchg
sbb
loope
fisubrs
and
rcrl
xor
add
cltd
and
jecxz
imul
mov
sbb
mov
pop
xchg
and
cli
pop
mov
iret
popa
in
jecxz
push
push
lods
sbb
lahf
fyl2xp1
fadd
sub
push
bound
loope
out
cmc
pop
xchg
adc
ss
adc
mov
mov
je
push
mov
and
jns
sub
clc
pusha
xchg
pop
jnp
xlat
sub
push
shl
sub
pop
mov
push
xchg
push
xlat
repnz
and
dec
push
stos
popa
jno
jle
les
mov
cmp
xlat
cmc
pop
jb
in
or
mov
pop
inc
mov
mov
jnp
sbb
inc
sahf
int
push
dec
mov
test
cltd
inc
mov
mov
sbbl
cmp
add
and
test
cmpsl
mov
sub
es
shrl
ret
pop
cmc
and
in
mov
pop
repnz
inc
and
mov
das
and
mov
xlat
inc
push
mov
pop
sbb
push
test
mov
repnz
and
insb
daa
mov
mov
sahf
cmp
popf
push
cmc
mov
jl
in
sub
rcrb
icebp
mov
inc
cmp
dec
xlat
push
or
out
add
sbb
sbb
stos
mov
add
adc
cwtl
movsb
push
test
mov
mov
daa
mov
sbb
push
xor
cmp
dec
mov
loop
adc
sub
push
push
push
mov
int3
sbb
adc
adc
or
nop
movb
inc
pushf
iret
mov
ja
leave
xchg
lea
addr16
rol
int3
out
push
sub
sbb
addr16
jnp
out
lock
mov
outsb
mov
stc
out
data16
jb
adc
sti
shll
mov
cs
pop
decb
mov
hlt
mov
push
xor
subb
out
add
pushw
sbb
cmp
push
repz
lock
add
loope
shll
push
jl
adc
sti
fstps
fwait
pop
arpl
xlat
test
sbb
push
enter
add
xchg
mov
dec
xor
push
cltd
loope
ror
daa
jb
pushf
push
in
outsl
fs
push
popf
push
mov
popf
xchg
ja
sub
out
push
ret
leave
ja
jle
arpl
add
cmp
outsl
dec
stos
loope
xchg
jb
gs
xor
mov
loope
shrb
adc
pop
stos
cltd
hlt
lea
jns
push
cmpb
ret
or
shrl
add
rcrl
mov
stos
lock
out
repz
cmpsl
push
jge
stos
pop
xor
cwtl
nop
stos
xchg
and
push
adc
out
and
and
ret
sbb
and
in
sbb
jbe
ljmp
jbe
adc
testl
sti
mov
xchg
popf
push
push
jnp
repz
inc
xor
cwtl
or
mov
loope
adc
add
jl
fimuls
mov
fsts
add
mov
es
mov
and
adc
and
out
sti
test
repz
cmp
data16
add
icebp
sub
adc
dec
fwait
xor
or
pop
sbb
add
add
xchg
push
xchg
mov
adc
popa
js
das
or
repnz
repnz
add
iret
xchg
test
out
clc
hlt
psubusb
adc
jl
adc
xchg
sub
aaa
inc
es
pop
hlt
sbb
cmp
ljmp
nop
or
xor
enter
jecxz
nop
iret
iret
cmp
iret
cmp
mov
test
aas
ret
push
dec
out
stos
and
bound
xchg
xchg
jecxz
pop
aas
ret
xchg
in
aad
inc
jmp
outsb
mov
and
ret
sub
les
adc
jp
xor
outsb
sub
pop
filds
adc
pop
push
sbb
out
mov
sbb
rcrl
adc
shl
es
loope
nop
mov
mov
hlt
push
jae
push
cmpsb
and
xchg
jmp
jmp
clc
push
or
mov
mov
negl
sbb
daa
push
or
fs
add
xchg
add
push
sub
loopne
and
mov
decb
je
pavgw
xor
sub
sub
and
sbb
les
pushf
out
lret
das
adc
push
popf
cmp
fisttpll
and
cmp
imul
mov
ret
pop
jbe
mov
mov
mov
mov
mov
adc
and
mov
dec
ret
jbe
add
das
stc
into
sbb
xlat
loope
jge
push
inc
xchg
es
aad
lret
rcr
adc
cld
lcall
lar
or
lds
inc
popf
jecxz
jns
daa
lock
push
lods
push
rcll
cmpsb
xchg
cld
push
addr16
fistl
xor
dec
filds
out
cltd
jno
rol
xchg
call
cmpsb
sbb
nop
ror
or
inc
or
filds
add
dec
mov
push
sub
sbb
xchg
ret
test
jmp
mov
adc
push
test
jo
loope
xor
cmp
add
cmpsl
lahf
push
xchg
and
int
pop
lock
add
ljmp
test
and
xchg
sbb
inc
pop
mov
xchg
loope
andb
mov
dec
cltd
rcrl
push
and
arpl
mov
iret
jecxz
ffreep
and
push
adc
add
xchg
out
repz
adc
js
ficoml
pushf
or
pop
das
mov
jle
lret
adc
or
cs
xchg
lret
pop
adc
jecxz
xchg
push
js
loope
add
adc
cmpsb
mov
inc
jne
lahf
sub
test
inc
loope
xchg
fistl
rolb
add
and
adc
sub
mov
xchg
jo
push
daa
push
ss
int
out
cltd
adc
popf
imul
imul
sar
cltd
outsb
adc
dec
mov
add
out
scas
push
mov
movl
out
mov
adc
xchg
je
mov
cltd
daa
and
xchg
cltd
fists
jecxz
shl
negl
xlat
clc
sbb
ficoml
scas
aad
or
mov
in
cmp
lahf
xchg
adcl
jecxz
fildl
lods
adc
outsw
mov
adcl
add
lret
cmp
sbb
push
push
xchg
ret
jb
dec
mov
rcrl
out
mov
xchg
cltd
push
leave
loope
cmpl
sti
mov
mov
jb
loope
inc
adc
int
aaa
sbb
in
adc
push
and
xor
fdivr
in
jg
push
xchg
mov
xchg
sbb
sbb
inc
jl
arpl
sbb
notb
fistl
rorl
sti
mov
lahf
loop
xchg
aaa
cmp
fsubrl
pop
push
push
mov
push
sahf
jecxz
sub
jecxz
cmpsb
subb
adc
jecxz
xchg
repz
call
jo
jns
pushf
out
xchg
shlb
cmpsb
and
mov
rcrb
adc
xchg
push
push
adc
pop
sbb
incb
call
cltd
les
xor
mov
lret
push
mov
mov
mov
jne
cld
nop
rcrb
sub
adc
push
lods
lock
adc
push
mov
xlat
mov
add
cli
std
cmp
arpl
push
jmp
cmpsl
andb
add
xchg
xor
pop
stos
mov
sahf
fidivs
adc
push
cwtl
repnz
fs
cmp
sub
dec
cltd
and
mov
stos
add
adc
sbb
mov
arpl
dec
adc
lods
inc
mov
iret
pop
rcll
lods
dec
jl
es
mov
loope
mov
add
pop
aas
jmp
lret
pop
sbb
jnp
aaa
sbbb
add
inc
add
fadds
cli
jecxz
sbb
sub
scas
out
jns
mov
pop
jl
mov
mov
push
xchg
std
and
sub
push
push
push
loopne
std
jle
jno
subl
jge
jnp
cmp
cld
mov
sbb
pop
mov
sti
or
xchg
adc
sti
imul
adc
lcall
nop
fs
sub
cld
lock
loopne
mov
andb
loope
lock
ljmp
mov
fldt
sub
stos
pop
sbb
jg
iret
idiv
and
mov
lret
sub
add
mov
aas
pop
loope
sbb
nop
jecxz
lods
daa
mov
or
call
xor
cs
add
mov
jb
jecxz
add
sub
add
sub
xchg
stos
sbb
dec
aaa
xchg
lock
lcall
sbbl
mov
mov
inc
jb
popf
pop
loopne
mov
pop
loope
jp
loopne
adc
rcrb
sbb
test
push
adc
shl
scas
sbb
in
xchg
repz
test
sbb
push
ret
adc
sub
mov
aaa
push
mov
loope
fnstcw
loope
cli
xor
sub
pusha
std
nop
mov
add
insl
sbb
jbe
xor
cltd
ja
jecxz
sbb
xchg
repz
les
lret
mov
push
adc
fstpl
iret
loope
lock
out
js
sbb
pop
lcall
mov
cmpsl
enter
push
xor
adc
push
fwait
dec
sarl
add
or
repz
or
in
test
xchg
mov
stos
popa
xor
js
inc
nop
dec
rolb
add
pop
rol
ds
adc
cwtl
sahf
inc
pop
in
rorb
and
add
add
pop
fwait
pop
addl
cltd
loope
xlat
ret
jnp
mov
pop
sbb
push
mov
add
and
and
rorb
xchg
cltd
jne
sub
sti
sbb
test
add
and
jns
mov
jecxz
sub
pop
shrb
repz
ja
add
out
fmuls
sti
lret
icebp
pop
mov
call
xchg
inc
fdivl
jns
outsb
lcall
or
and
cmp
js
xchg
mov
sub
adcl
sbb
cmp
jno
cltd
and
arpl
dec
incb
nop
add
sbb
ss
imul
jle,pn
pushf
dec
cltd
lret
ljmp
aad
jle
xor
xchg
repz
add
std
pushf
in
iret
int3
dec
andl
pusha
cmpsb
xchg
pop
add
add
fldt
and
out
inc
sbbl
cltd
and
mov
out
fldt
or
and
pop
out
enter
pop
and
sbb
and
scas
pop
jmp
pop
int
cmp
pushl
pop
jecxz
in
push
fbld
fdivs
pushf
and
addr16
sbb
lret
xchg
cwtl
mov
popa
jno
pop
xorl
push
int3
in
ss
cmpsl
nop
xor
pushf
add
cwtl
adc
add
clc
cltd
addr16
jecxz
sahf
imulb
jne
ret
ret
cltd
push
and
add
dec
xchg
nop
mov
and
jnp
scas
add
fs
lea
int3
inc
shr
xchg
jmp
je
push
push
mov
test
sahf
or
inc
addb
aas
pusha
cld
cli
lock
add
or
shll
pop
ficompl
cmp
pushl
xlat
ret
adc
cmp
xchg
pop
jmp
xchg
or
pop
stos
xlat
int3
cli
mov
dec
pop
jb
cld
es
negb
mov
jbe
and
enter
add
sbb
lods
rcr
mov
pop
rol
sbb
rcrl
cli
xchg
cltd
fwait
dec
jecxz
lahf
or
sbb
test
add
pop
jecxz
dec
nop
imul
scas
and
loope
inc
inc
mov
out
xchg
push
pop
insl
push
add
adc
cld
jbe
les
loop
rcr
imul
lahf
push
pop
sbb
add
mov
jo
jl
dec
cltd
adc
adc
sar
push
fldenv
jge
in
add
add
add
jg
mov
in
sbb
push
mov
mov
lods
cld
gs
ret
dec
sbb
and
sub
adc
and
loop
mov
jg
shl
xchg
push
cmp
cmc
or
pop
adc
jge
shl
subps
sub
js
clc
aas
sub
es
das
mov
adc
std
sbb
ja
std
bound
call
adc
jl
int3
jl
jmp
or
aaa
addl
shlb
leave
sbb
lcall
add
jg
adc
cld
rolb
mov
stc
adc
sbb
adc
xor
loope
xchg
adc
adc
xchg
stc
cmp
sbb
std
mov
arpl
sub
lods
lcall
cmpsb
adc
sbb
sub
dec
xor
out
xor
adc
and
jle,pn
rcrl
nop
push
popf
xor
loope
add
pop
or
stc
add
popf
sbb
popf
arpl
loopne
mov
xchg
fs
sbb
sbbb
mov
sub
sbb
ret
and
adcb
push
adcb
xchg
xchg
push
inc
test
daa
pushf
xlat
xchg
inc
les
mov
ss
aas
fwait
jp
mov
mov
or
jl
push
and
ret
push
adc
pop
dec
test
xchg
adc
pushf
jae
mov
sti
into
mov
pushf
jl
adc
and
push
lock
cmpsl
sbb
mov
das
mov
dec
or
es
fwait
dec
add
aad
push
cmp
mov
imul
out
std
cmp
inc
add
stc
and
fwait
mov
xchg
in
dec
sbb
pop
jecxz
push
lock
cltd
adc
loopne
testl
daa
notl
ror
and
testl
out
lock
ficoml
add
cltd
sub
loope
xor
scas
enter
push
jmp
std
xchg
xor
sbb
out
and
mov
in
dec
dec
xor
jbe
nop
jb
movsb
push
rorb
std
sbb
into
int3
mov
push
ljmp
push
cmp
and
add
aaa
mov
nop
mov
popf
rcrb
cmp
loopne
push
aaa
mov
in
and
inc
add
adc
jno
xchg
and
call
fcmovnu
add
cmp
sbb
dec
loope
add
mov
mov
and
add
icebp
cmpsl
add
nop
add
pop
jns
pop
loope
add
or
test
loope
sti
orb
mov
add
imul
mov
lods
enter
xchg
push
mov
filds
rcrl
jl
dec
stc
mov
mov
into
push
add
adc
lret
imul
cli
xchg
pop
add
imul
jae
stc
loopne
andl
jo
xchg
loope
add
add
or
push
cs
lret
xor
xchg
popf
xorl
into
jns
ret
lcall
inc
lret
jecxz
and
jb
and
fiaddl
loope
shrb
sub
fld1
mov
hlt
jae
add
mov
or
dec
aam
cmpsb
movsb
jo
cli
in
dec
add
cltd
cmpsb
mov
push
test
push
cmc
xchg
stos
nop
or
adc
mov
push
test
lock
into
test
mov
sbb
jb
xchg
push
js
dec
xchg
ret
mov
mov
xor
sbb
test
fbld
add
repz
fwait
jo
mov
dec
in
rcrl
fstl
stos
and
adc
in
pop
movsb
mov
pop
jmp
popa
add
loope
jbe
cmp
jecxz
inc
dec
aam
add
jg
xchg
or
aam
pushf
cwtl
add
add
pop
mov
sub
jbe
mov
and
aam
inc
inc
jmp
rolb
ficoml
push
jecxz
jle
scas
imul
sbb
shrb
push
insl
and
lret
push
jecxz
sbb
lcall
inc
pop
sti
popa
inc
xchg
test
mov
and
mov
and
mov
mov
lds
inc
rorb
imul
and
or
xlat
mov
push
xor
mov
or
enter
int3
popf
hlt
sbb
std
jmp
xchg
jecxz
xchg
loop
mov
ret
mov
mov
jge
adc
mov
inc
dec
ret
incl
test
xor
xlat
push
test
adc
sti
cmp
mov
pop
lods
icebp
lcall
pop
mov
add
aas
mov
xchg
or
ds
fcmovbe
pushf
test
lds
rcll
sbb
cmp
lahf
mov
mov
loop
inc
adc
test
mov
mov
test
fldenv
pop
mov
pushf
mov
out
xchg
xchg
jp
dec
and
inc
std
scas
dec
xchg
jge
negb
repnz
and
and
jmp
fistl
add
jle
sbb
popa
mov
inc
pop
and
mov
mov
or
mov
je
out
xchg
imul
push
addr16
pop
or
insb
dec
push
js
loope
or
aaa
std
pop
icebp
mov
mov
mov
ret
jp
adc
ret
inc
arpl
or
jno
push
push
sbb
icebp
dec
incb
mov
adc
xlat
mov
loope
xchg
std
and
add
out
pop
mov
repnz
dec
inc
add
out
cmc
ret
lret
add
mov
mov
inc
add
js
fldl
daa
mov
and
stos
ret
sti
aaa
mov
mov
shll
xchg
insl
cltd
std
test
dec
dec
cwtl
mov
imul
xor
mov
hlt
xor
lret
mov
daa
out
clc
outsl
subl
xor
popa
out
sarl
cwtl
imul
jnp
push
call
sub
std
outsb
add
cmc
cmc
ja
pop
frstor
or
push
mov
inc
cmc
ficoml
jmp
cmp
insl
sbb
jmp
sub
daa
sbb
jecxz
sub
loope
add
lock
cltd
inc
fwait
arpl
cmpsl
ret
add
push
mov
aad
cmpsb
repz
sub
ja
pop
in
inc
rorb
stc
pushf
push
loope
push
push
idiv
insl
stos
mov
out
sbb
fisttps
repnz
pushf
xchg
nop
xchg
les
dec
jae
push
fwait
jno
jmp
out
lock
mov
mov
jne
pop
aas
icebp
into
outsl
rcrl
and
out
sub
testl
sbb
ds
xor
rcll
add
lahf
push
testb
mul
jecxz
jae
add
cltd
cmp
xchg
sti
repz
dec
movl
inc
cmp
fisubl
std
dec
repnz
hlt
andb
pop
dec
icebp
lock
clc
push
adc
add
negb
jp
pusha
in
cltd
into
jo
dec
lock
add
fxch
das
int3
mov
subb
xchg
imul
mov
push
mov
clc
push
dec
cwtl
lea
push
add
mov
push
dec
mov
pop
sar
aam
mov
ficoms
sbb
out
icebp
adc
mov
and
cltd
xchg
xchg
cs
adc
add
xchg
cmp
adc
mov
cltd
push
popf
sbb
into
xchg
loope
add
js
loope
xrelease
cltd
jp
sbb
lock
add
scas
fisttpll
adc
add
sbb
loope
xor
or
adc
mov
inc
adc
test
and
pop
sbb
mov
add
add
push
fistpl
adc
mov
fdivrp
fstps
add
sbb
call
jo
adc
loope
cld
loop
push
jne
push
dec
popf
aas
mov
push
sub
cmp
add
adcl
xor
test
lock
and
and
and
std
or
or
loopne
cmp
test
adcl
repz
mov
test
arpl
push
insl
rolb
xor
pop
loope
aam
cltd
leave
ss
seto
or
jnp
shr
test
add
add
cli
into
fbld
inc
inc
cli
xlat
jmp
in
fs
int
fidivrs
push
mull
and
pop
dec
mov
cmpsb
pop
push
ret
sti
xchg
xor
jl
jo
and
ror
pop
or
add
orb
pushf
cmp
xchg
or
mov
pop
cmpsb
cmp
jecxz
sub
sub
push
pop
fsts
jns
test
push
loopew
jo
iret
jl
mov
sar
sub
cs
or
popf
add
jno
xchg
mov
xchg
or
pushf
mov
mov
hlt
cli
dec
jnp
mov
mov
jns
stos
inc
fwait
pop
test
imul
inc
and
sub
push
fnsave
sbb
push
pop
push
outsl
and
fs
adc
dec
mov
cmp
inc
fisubrs
jmp
add
sub
inc
jl
into
jne
lods
rclb
fildl
xchg
fisttps
pop
sahf
gs
ret
pop
jbe
mov
stos
or
shlb
mov
sti
stos
adcb
lahf
lock
jo
cmp
rorb
adc
push
xor
insl
cli
icebp
rclb
adc
js
pop
mov
insb
push
in
xchg
push
sbb
mov
in
stos
pop
sbb
lahf
fucom
pop
fdiv
rcrb
mov
pop
pop
pop
mov
fcomps
push
rcrl
sbb
push
shll
repz
cmc
into
jb
fldt
push
dec
ja
dec
lret
ret
add
push
sub
xchg
sbb
fstps
ds
jne
and
movb
jo
sub
stc
pop
rcrl
nop
adc
and
ret
lret
lea
add
fstl
cltd
add
bound
push
test
lahf
add
xchg
std
iret
fidivs
dec
test
lcall
xchg
inc
je
pushf
jne
cs
sbb
and
mov
out
insl
cmp
orb
rclb
mov
push
outsb
jle
or
push
or
stos
neg
js
inc
cwtl
les
adc
sub
loop
or
inc
pop
pop
adc
rcrl
sub
sub
cwtl
les
xchg
push
pop
movsb
clc
push
divl
jo
cltd
hlt
imul
outsl
and
fadds
call
jb
adc
push
sub
and
in
loop
movsb
pop
adcl
lock
out
xchg
or
sbb
mov
and
dec
test
sub
xlat
jmp
xchg
sub
js
outsb
shrl
ds
ret
adc
xchg
rcll
xor
jmp
adc
mov
pop
sub
add
je
jp
leave
lods
pop
xchg
lock
out
or
and
add
ss
pop
jne
mov
sbb
sub
sbb
popf
mov
aam
add
jnp
push
push
js
add
or
jmp
adc
mov
pop
fwait
icebp
hlt
cltd
xchg
roll
addl
pop
movsb
add
mov
jle
scas
popf
cmc
mov
or
and
pop
aad
lods
push
jecxz
mov
cmp
shll
adc
loope
mov
mov
push
and
mov
outsb
cvtpi2ps
sbb
mov
pop
add
dec
enter
scas
jecxz
stos
shll
ja
lret
outsb
jecxz
lods
fldcw
test
fwait
les
and
sbb
mov
mov
mov
scas
mov
in
push
fnsave
or
cli
rcrb
scas
xchg
adc
mov
pushf
adc
inc
cltd
orb
test
clc
sub
cwtl
sub
mov
arpl
xchg
pop
sbb
outsl
xchg
in
loope
les
pop
jo
add
add
pop
repnz
push
push
loop
xchg
sbb
jl
jns
sbb
outsb
xchg
sbb
popf
xor
dec
cwtl
mov
pop
ds
rclb
test
pop
xlat
push
xchg
mov
inc
fwait
sub
cwtl
mov
imul
jp
xchg
xchg
mov
cltd
xor
push
add
push
adc
cltd
sub
jecxz
mov
sub
jl
xor
push
cmp
pushf
lcall
xor
insb
sbb
xchg
scas
xchg
jb
leave
jne
scas
xchg
lods
jmp
and
ret
push
adc
push
jp
cltd
out
mov
es
sub
add
mov
push
jns
es
iret
cmp
ret
and
sub
and
int
sub
cmpsb
mov
dec
movsb
lret
push
lcall
lahf
pop
jl
inc
adc
lcall
clc
repz
adc
push
jp
shrl
sub
sbb
xchg
nop
icebp
ss
mov
cltd
fistpll
and
and
jp
pop
add
lds
fwait
clc
fistpl
sbb
mov
pavgw
insl
sbb
jmp
rep
sbb
add
sbb
pop
sub
loope
sahf
lret
cmpb
pop
hlt
adc
frstor
lcall
cli
in
mov
clc
jp
loope
orl
xor
data16
iret
orb
cltd
imull
loope
add
shll
xchg
test
arpl
je
sub
inc
repz
or
lea
xchg
inc
fwait
jno
enter
cmpsl
pushf
fstp
pop
into
xlat
pop
cmpb
loope
mov
ret
mov
xchg
int3
push
add
int
xchg
sti
fdiv
idivb
fs
lcall
push
jecxz
sbb
mov
jp
repz
jbe
adc
std
leave
or
jbe
lods
leave
sbbl
or
stos
jns
and
jecxz
dec
add
push
xchg
test
cli
lret
cmpsl
testl
dec
mov
adc
push
xlat
push
ss
pop
aad
mov
pop
leave
jbe
push
and
iret
cltd
jecxz
dec
popl
stc
mov
in
pop
dec
sub
lcall
xchg
mov
add
lret
cltd
std
and
add
xchg
push
jecxz
jle
sbb
in
push
xchg
push
push
pop
movl
mov
loopne
xor
adc
out
arpl
adc
xchg
push
iret
mov
das
add
pop
jecxz
inc
cmp
or
mov
xchg
cmpsl
mov
lcall
lahf
inc
sahf
pop
lcall
sbb
sbb
lcall
popf
pop
mov
push
popf
xchg
cmp
adc
sub
data16
loope
xor
in
push
mov
out
movsl
cld
loop
xlat
pop
cmpsb
jo
xlat
clc
mov
imul
sbb
mov
dec
notl
enter
lcall
psrlw
jecxz
mov
push
fwait
mov
inc
inc
cmpsb
pop
insl
sarl
jle
iret
jmp
pinsrw
jle
pop
rclb
push
cmp
push
xchg
mov
int3
fdivl
adc
shlb
inc
sbb
inc
es
push
rcrb
push
xchg
sbb
stc
aaa
and
add
loope
add
adc
sbb
add
leave
out
jecxz
sbb
adc
pop
sbb
cltd
xor
or
xchg
adc
leave
nop
mov
mov
rorl
add
xchg
negb
push
pop
loope
cmpl
xor
dec
out
xchg
clc
jae
inc
xor
jo
or
cmpsl
add
adc
jmp
loope
mov
sub
push
es
in
adc
add
repz
out
sub
aam
xchg
mov
ret
shl
lock
cltd
imul
ficomps
push
push
fisttpl
or
sub
adc
adc
cmpb
xchg
fwait
adc
jne
jmp
andb
xor
call
xchg
lea
cltd
lods
mov
or
sti
arpl
adc
cltd
xor
or
xlat
iret
cmp
mov
pop
jno
movsl
push
mov
fcomps
add
cwtl
aaa
aam
adc
push
clc
mull
mov
js
and
mov
sbb
rcrb
inc
sbb
fisttpll
add
lock
mov
sbb
arpl
adc
xor
in
js
pop
xchg
jb
add
push
pushl
push
add
sbb
jmp
sbb
jb
cltd
jmp
sbb
xchg
cld
in
xchg
push
out
sti
pop
std
and
pop
in
in
pusha
sub
jl
sbb
paddw
mov
dec
add
adc
or
incb
jmp
push
sbb
filds
jg
pop
fildll
shlb
cmp
mull
push
adc
xchg
repz
jecxz
jp
jle
jge
aas
rcr
loope
xchg
sbb
or
xlat
cltd
xchg
and
fwait
push
aad
push
cltd
clc
mov
shr
jnp
out
and
xchg
mov
cltd
cld
rcrl
rcr
movsl
popa
xchg
cli
adc
lret
lret
xchg
jle
fnstenv
mov
push
pusha
shr
testl
adc
and
pop
xchg
hlt
or
push
mov
mov
push
and
lock
lea
mov
xchg
push
push
add
mov
adc
xchg
mov
jbe
test
push
mov
mov
aaa
loope
dec
shlb
cmp
movsb
pop
and
shlb
xchg
jae
push
je
test
xchg
mov
icebp
or
pop
sbbb
jne
daa
or
cmp
pop
les
mov
ja
outsl
push
xor
or
mov
daa
inc
push
mov
mov
shlb
movl
imul
mov
cld
mov
mov
addr16
push
push
clc
rorb
loope
add
xchg
es
adc
mov
jae
xchg
hlt
pop
xchg
cmp
push
je
loope
aaa
repz
mov
inc
scas
or
jecxz
daa
mov
push
daa
pop
data16
pop
andb
xor
loopne
cmpsb
andb
add
jmp
out
mov
fmuls
rclb
daa
ja
or
mov
mov
lock
enter
icebp
xor
dec
cs
inc
xchg
xchg
test
pop
loopne
cmpsb
ja
add
xorb
pop
jg
inc
bound
popa
mov
andb
inc
pop
loop
cltd
pushf
jp
arpl
loope
ss
add
int3
fwait
mov
ja
lea
mov
fiadds
orl
popf
push
int3
sbb
xsha1
cmpsb
or
cmpsb
jmp
loopne
lds
add
jl
push
jg
in
dec
cwtl
jle
int
mov
cmpsb
ja
ss
jl
inc
xlat
cld
sub
push
bound
xor
pushf
xchg
call
insb
add
and
adc
cltd
rcrb
lcall
loope
loopne
dec
xchg
mov
outsb
aam
jo
jmp
mov
stos
ss
inc
and
and
imul
dec
xlat
outsb
rolb
cmpsl
jl
mov
or
mov
scas
xchg
pop
dec
push
add
lock
inc
into
xor
or
jo
and
stc
js
rcll
cwtl
mov
cmp
jae
or
cld
lea
cwtl
xchg
mov
xlat
pop
std
or
out
icebp
sbb
test
enter
fisubl
out
cltd
xor
ja
and
pop
cmpsl
pop
fiaddl
fsubrs
jmp
mov
and
sahf
xchg
cmpsl
loop
testl
gs
pop
rcrb
int
cmpb
call
icebp
mov
stc
das
and
inc
stos
addr16
inc
subl
mov
xchg
jp
and
sub
aaa
or
popf
or
xor
int
mov
lret
in
mov
dec
push
cmpsl
icebp
mov
in
out
add
cmp
mov
pop
mov
sbb
jp
lds
mov
fldt
mov
cwtl
xchg
test
cwtl
jbe
data16
inc
mov
ret
xor
adc
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
rol
sete
add
pushf
pushf
ror
and
neg
setb
setnp
jmp
movzwl
sbb
not
mov
bt
movb
add
mov
mov
jmp
lods
not
jmp
call
cmp
cmpb
push
movb
lea
jne
ror
shl
adc
sub
bt
stc
push
mov
adc
add
push
neg
cmc
mov
mov
clc
call
test
fsubrs
sbb
mov
pushf
jo
pop
nop
push
lods
jb
mov
and
dec
lcall
movsl
int
int
ja
or
ss
mov
call
adc
shrl
out
adc
mov
mov
adc
lds
lds
loope
fiaddl
jmp
jns
xchg
mov
sub
je
sbb
ret
xor
dec
push
pushl
push
lea
call
jmp
jmp
ja
push
push
mov
in
int
stc
sub
int
test
jnp
sarl
jmp
fmuls
lods
test
clc
lahf
mov
xchg
nop
pop
ds
sbb
xor
shl
leave
cs
aaa
jmp
inc
vucomiss
jbe
std
sbb
or
insl
sub
sbb
and
jmp
stc
rol
sub
jg
imul
pop
ljmp
add
add
jge
inc
call
cmp
call
fcoms
lcall
stos
dec
mov
mov
xor
stos
or
cmpsl
and
icebp
pop
andl
jmp
sbb
xor
sbb
in
std
cmp
nop
aas
xor
loopne
iret
xlat
pop
jg
xchg
fisttps
out
cmp
push
fimull
or
cmp
hlt
in
pmuludq
push
push
xor
mov
push
mov
rorl
daa
aad
xor
cmpsl
pop
ja
iret
sbb
mov
in
jecxz
pop
ljmp
sbb
push
cli
adc
pushf
dec
in
std
in
adc
jecxz
scas
les
xchg
pop
xchg
adc
push
jg
loope
daa
out
enter
movsb
mov
ret
adc
jo
in
pop
push
mov
mov
mov
cmp
lcall
xchg
stc
test
sub
out
daa
int
xchg
sbb
sub
jae
pop
xor
push
mov
imul
add
je
and
sub
adc
add
pop
adc
repnz
test
cmp
pop
lea
setns
mov
call
lea
jne
movzbw
pusha
bswap
bswap
movb
cwtl
movzbw
pushf
push
mov
movsbw
lea
call
movsl
push
mov
ljmp
js
and
pop
out
and
push
xchg
pop
ss
pop
xchg
gs
cmpsl
sbb
jl
mov
mov
aad
jl
xchg
imul
mov
add
push
clc
mov
idivb
jl
mov
insl
jns
mov
addr16
push
ficompl
insb
mov
inc
mov
push
ret
xor
sub
pusha
jmp
stos
movb
pushl
pusha
lea
jmp
lea
jne
pusha
sar
shr
pusha
mov
mov
sub
not
lea
bt
movl
pushf
sub
mov
cmc
call
sbb
xor
mov
bound
push
fidivrl
push
repnz
ds
cmc
mov
adc
std
sbb
mov
sbb
or
clc
or
stos
and
fwait
jp
jbe
ja
xchg
sbb
int
jmp
add
add
js
stos
push
jge
xor
in
mov
inc
mov
repz
in
pop
fstpt
lahf
insl
stos
jne
jns
pop
ret
xor
sbb
mov
lea
ja
shl
ror
sub
btc
btc
ror
add
shl
mov
dec
mov
stc
call
pusha
jmp
call
clc
cmp
pushf
call
jmp
pusha
jmp
lea
call
cmp
and
push
and
adc
mov
call
test
add
shl
pushf
rol
test
mov
mov
pusha
test
call
std
movsl
popf
mov
sbb
in
in
movsl
es
mov
push
mov
in
and
mov
adc
push
and
jge
xchg
mov
hlt
popf
adc
push
pop
and
pop
push
mov
leave
clc
sbb
bound
rcrb
clc
jns
push
repnz
xor
in
mov
mov
call
insb
std
pop
mov
hlt
mov
jbe
push
aad
dec
mov
js
repnz
push
imul
jmp
fbstp
push
cmpsb
cmpsb
adc
mov
add
ljmp
and
mov
mov
or
sbb
inc
adc
or
mov
mov
push
add
stc
pusha
mov
arpl
pusha
sar
pusha
aas
popf
inc
xchg
lahf
sbb
lods
xchg
and
xor
js
sbb
inc
pop
xchg
sbb
je
pop
xlat
test
push
aad
test
xor
inc
jmp
out
and
jmp
and
movsl
test
sbb
pop
or
lcall
rclb
xorl
out
je
in
inc
add
jo
inc
dec
mov
jmp
mov
jp
cmp
and
popa
mov
lahf
inc
xor
inc
mov
xchg
sbb
and
xchg
les
xchg
inc
leave
out
xchg
leave
cwtl
add
push
in
cltd
lods
adc
jecxz
sahf
fnstsw
out
popf
and
pop
fidivs
ret
or
test
mov
divb
cli
pop
sbb
mov
cmp
xchg
pushl
sti
ds
sub
push
fstps
add
aas
rol
jge
push
jo
cmc
sbb
sbb
adc
stos
fwait
push
pop
jecxz
les
lods
adc
and
sbb
rcrl
xor
sub
fmul
add
add
popf
sub
and
jp
xchg
mov
sti
aad
lret
out
adc
mov
add
mov
and
sbb
jmp
sbb
cltd
push
nop
std
ret
popa
cmpsl
xchg
sub
and
in
adc
inc
jp
xchg
lahf
rcr
adc
jmp
imul
and
sbb
xchg
fwait
push
fidivs
imul
jp
enter
pop
jbe
sti
stc
sub
jae
sbb
and
sbb
cmpl
jmp
push
sbb
insb
aaa
mov
mov
push
pop
movsl
shll
mov
adc
jo
xchg
lods
cmp
out
sub
jp
xchg
mov
int
repz
mov
in
xchg
pop
cs
adc
sbb
pop
in
sbb
and
sbb
insb
cmp
sahf
and
cmpsb
adc
sub
adc
pop
cwtl
push
in
jbe
rcrb
and
fwait
push
jl
push
push
adc
cmc
sub
test
in
sbb
sarb
sbb
icebp
mov
mov
popa
xlat
adc
rcrb
push
movsb
lock
push
ret
fdivr
sbb
lods
andb
adc
xchg
mov
fdivrs
div
xor
mov
jmp
xchg
sbb
mov
cltd
mov
inc
in
xchg
fisttps
inc
xchg
pop
aad
adc
fs
nop
pop
push
out
in
and
sbb
add
mov
jb
sbb
fcomps
xchg
adc
adc
xchg
and
pusha
mov
bound
mov
aaa
and
andl
push
mov
sub
push
test
out
aad
pusha
sub
push
adc
mov
xchg
imul
xlat
push
in
mov
data16
ljmp
jg
lahf
gs
movsl
add
sub
xchg
or
rcll
aad
orl
and
in
arpl
pushl
stc
lods
lcall
fdivs
std
scas
xchg
push
jnp
test
push
pop
push
pop
sbb
cs
js
jns
pop
push
in
push
pop
loope
pop
mov
adc
pop
mov
je
add
es
xchg
loope
pop
out
xor
test
xchg
imul
out
xchg
and
pop
inc
ja
scas
push
inc
push
cmc
xchg
arpl
data16
out
mov
cmp
mov
ret
pop
add
pop
push
and
fimull
inc
ss
push
xlat
push
fsubs
pop
xor
and
push
shrl
imul
fcomps
adc
push
in
mov
mov
sahf
loopne
and
jp
repnz
cmpsb
cwtl
das
sub
jae
fwait
loope
push
xor
add
mov
jmp
mov
div
leave
or
and
inc
movsb
cmc
popa
shrb
mov
fsubl
lods
or
pop
in
loope
or
imul
enter
fstp
add
shlb
adc
testb
roll
sbb
sbb
out
cmp
inc
push
lods
ret
sbb
out
out
repnz
clc
inc
dec
push
stos
pusha
jne
repz
push
call
les
jge
sbb
or
sbb
jnp
sbb
push
js
mov
fcmovne
ret
add
xlat
cmp
mov
addb
pop
psllq
mov
sub
xor
sub
mov
sub
rcr
icebp
leave
pop
je
frstor
or
pop
js
pop
pusha
les
insb
xor
sbb
loope
test
fstpl
push
loope
pop
xlat
popf
jnp
sub
jge
aaa
sahf
sbb
mov
add
in
decl
jmp
pop
jmp
stc
js
ss
aaa
shrl
jb
leave
mov
add
jecxz
jmp
adc
add
test
or
xchg
sub
jg
in
stc
jecxz
popf
xor
imul
ret
push
sbb
divb
pop
test
dec
popf
nop
sub
std
sbb
dec
movsb
pop
sbb
adc
and
out
lods
imul
sbb
or
adc
xchg
ret
xor
xchg
pusha
test
in
xlat
stc
adc
and
push
xor
ss
insl
or
pop
rcrb
jne
imul
aam
push
and
mov
sbb
pop
out
dec
sbb
pop
fldl
and
adc
lods
cmpsb
dec
dec
test
out
push
test
lds
adc
push
sub
vminps
sbb
shlb
mov
movsl
sbb
int
icebp
rorb
pop
repnz
fdivl
loopne
pop
xchg
into
outsb
adc
std
xchg
popf
and
sbb
cmp
push
push
stc
sub
mov
and
add
lds
pop
inc
push
shlb
jmp
xor
fsts
fisubs
es
pop
inc
mov
test
sbb
jne
sbb
adc
cmp
sub
sbb
adc
sti
pop
mov
pop
cmp
sbb
mov
adc
adc
insl
mov
ret
std
stos
shlb
and
dec
sbb
pop
fwait
xchg
ret
mov
adc
inc
add
sbb
addl
rclb
jnp
ds
jns
sarl
ret
xchg
mov
bound
sbb
jle
mov
std
icebp
ja
adc
lret
sub
outsl
insl
test
adc
mov
rorb
pop
sbb
pop
ljmp
fnstsw
es
rcrl
cwtl
les
mov
mov
sbb
out
out
mov
cmp
mov
jns
aam
lcall
sbb
jns
lods
cmpsb
jl
pop
cltd
and
out
stos
gs
or
mov
sub
adc
js
hlt
adc
mov
add
mov
and
cmp
popf
and
fcomp
lea
push
xchg
xlat
outsb
roll
mov
jge
aam
cmp
mov
cmpsl
xor
sbb
ss
push
adc
shlb
inc
outsl
inc
add
and
rclb
lret
out
rolb
adc
imul
mov
add
jge
daa
pop
push
jbe
or
jg
out
xchg
jg
insl
popf
mov
cmc
int
sbb
and
stos
cmc
fwait
or
or
jge
and
mov
stos
jecxz
sbb
stos
cwtl
leave
pop
cmpl
pop
fnstcw
and
xchg
mov
mov
push
sti
pop
or
mov
and
push
and
pop
data16
test
dec
pop
pop
xchg
pop
stc
pop
xlat
add
mov
stc
inc
stos
add
add
mul
test
mov
add
loope
scas
and
cmp
js
clc
cli
es
add
insl
fdivp
jne
jnp
add
fsubs
aam
call
mov
sbb
push
sbb
xor
mov
or
pop
aam
sbb
lahf
adc
rorl
test
dec
xchg
push
and
sub
repz
stos
sbb
mov
xchg
push
push
out
dec
fsubrl
loopne
mov
jecxz
mov
stos
mov
push
cld
pop
shll
push
syscall
mov
inc
in
jmp
lret
push
popf
imul
push
mov
dec
sbb
cmp
mov
adc
inc
scas
rorb
pop
sub
fwait
pop
bound
sub
inc
lret
sti
push
and
test
sub
cmp
mov
mov
rorb
jle
mul
inc
cld
adc
push
fcmove
subb
fcompl
adc
lcall
loop
repnz
cmp
add
xor
mov
dec
sbb
jecxz
int
arpl
aam
jp
std
leave
gs
clc
dec
sbb
jnp
loopne
icebp
add
mov
daa
aas
sub
loop
push
cli
loopne
cli
mov
cmp
inc
jns
push
clc
scas
mov
adc
enter
cld
cmpl
mov
sub
movsl
and
sahf
lret
lods
adc
js
hlt
in
in
imul
cld
je
xchg
sbb
arpl
incb
adc
xchg
jno
xchg
mov
pop
sahf
pop
test
jmp
aad
pop
jecxz
mov
lahf
add
cmp
outsb
add
sub
sbbl
ret
imul
adc
inc
je
jae
and
xor
movsl
xchg
in
lahf
mov
inc
push
adc
xchg
xchg
ret
insl
incb
push
cli
std
icebp
xor
cmp
es
adc
lahf
lret
pop
sbb
cli
shrb
add
les
mov
mulb
fistl
test
add
jmp
xor
leave
mov
call
sbb
adc
repnz
or
mov
shlb
sub
xchg
in
and
mov
dec
mov
loopne
lock
mov
sub
test
xchg
adc
lahf
push
cld
push
popf
outsb
fildl
out
js
outsl
test
sahf
and
jge
dec
sti
push
shr
or
popf
sbb
sbb
push
push
mov
test
mov
in
mov
push
filds
mov
sbb
push
adc
sub
cmpsl
mov
ja
leave
mov
ja
mov
pop
std
js
xchg
ljmp
inc
sbb
xor
sar
inc
test
cltd
test
imul
adc
int3
test
jne
or
xor
hlt
or
andb
jne
insl
pop
adc
pop
movsl
and
or
imul
sbb
xor
loop
sbb
jmp
jbe
jno
pop
mov
mov
fucomp
inc
sub
push
lret
add
imull
fwait
sbb
push
and
sub
imul
testb
pop
imul
fwait
cmc
push
sbb
rcll
bound
cs
pop
adc
fwait
iret
xchg
jae
ret
and
push
pusha
add
inc
xchg
iret
adc
xchg
sbb
test
repz
mov
and
fisubs
les
sub
loop
sbb
std
jmp
pop
mov
mov
pop
ret
notl
mov
repz
in
cmp
jae
leave
scas
mov
pushf
dec
xchg
sahf
mov
push
push
test
jb
stos
in
test
les
test
or
mov
fcmovu
popf
mov
and
lcall
push
jmp
sbb
sub
pop
mov
in
xor
mov
sbb
adc
sbb
je
inc
xor
aad
add
mov
sbb
mov
push
xchg
pop
adc
sbb
out
cwtl
sub
cwtl
ja
pop
ficomps
add
mov
out
cld
xchg
sbbl
jmp
rcrb
mov
xchg
jle
mov
es
push
sbb
clc
mov
shlb
sbb
add
adc
mov
js
test
push
loop
adc
andl
add
mov
push
jg
xchg
cwtl
jmp
push
leave
test
or
lahf
int
in
out
push
outsb
movups
mov
push
icebp
in
orb
jne
mov
mov
and
js
jbe
stos
testb
rcl
and
test
and
clc
and
mov
das
aad
cwtl
sbb
pop
dec
lret
loopne
pop
mov
mov
ljmp
push
mov
outsl
movsl
dec
sub
jbe
je
insl
cli
xor
pop
xchg
std
rolb
cmp
je
cmpsl
inc
jne
jno
aad
push
test
jmp
rcrb
lods
adc
icebp
jecxz
fiaddl
push
xchg
xor
mov
xchg
or
pop
and
and
jl
fdivl
int
pop
fwait
jle
loop
fwait
xchg
mov
fstp
dec
fwait
sbb
ss
cltd
sbb
popa
pop
push
pushf
mov
stos
and
repnz
cld
sbb
add
xor
lret
jmp
fcomps
enter
adc
jns
sbb
arpl
rol
or
lret
sbb
arpl
aad
or
sbb
arpl
ret
roll
and
lds
mov
mov
push
xchg
jae
push
or
inc
push
or
aad
sub
and
pop
push
movsl
loope
jle
cmp
or
aad
inc
cwtl
pop
loope
popf
push
nop
in
push
adcl
inc
cwtl
mov
xor
js
jge
and
dec
gs
popf
adc
adc
mov
std
and
adc
ret
arpl
mov
jl
pop
push
pop
lods
int
call
imul
mov
lea
test
push
add
daa
pop
push
mov
sub
int
stos
pop
aaa
mov
add
mov
cmp
repnz
and
test
pop
mov
lret
cmp
pop
adc
icebp
or
xchg
sub
dec
xchg
arpl
je
push
repnz
orl
int3
mov
cltd
popa
ret
pushf
add
sbb
mov
lret
test
sbb
mov
mov
jns
xchg
es
enter
xchg
or
fxch
repz
jne
negl
testl
add
out
xor
inc
mov
and
mov
cld
popf
fmuls
push
jl,pt
or
or
jns
lods
sub
cmp
add
and
test
sbbl
push
int
lcall
inc
fsubrs
int3
addr16
cmp
fsubrl
std
js
daa
lods
cmc
dec
sub
jmp
ja
shlb
out
sarb
repz
and
and
call
icebp
out
and
fisttpll
mov
sbb
jge
mov
lds
nop
xor
mov
jmp
jae
mov
xchg
repnz
movsb
js
ret
in
sbb
mov
mov
mov
call
push
pop
lcall
ljmp
loope
bound
addr16
pop
sar
xor
cmp
aam
or
mov
jg
cli
jns
and
dec
jecxz,pn
hlt
push
mov
xorb
jmp
mov
pushf
test
sbb
add
fdivrl
push
js
cld
ljmp
sbb
out
mov
repnz
mov
fbstp
cmp
lds
push
test
int
jmp
mov
inc
cmp
es
mov
outsl
pop
or
inc
or
jle
test
jae
idiv
mov
insb
cli
jl
ds
lahf
jecxz
and
inc
inc
aas
mov
cmp
loopne
fisttpll
shlb
cli
icebp
fstpl
popf
in
and
loope
mov
sbb
sbb
cwtl
rolb
xchg
pop
out
mov
neg
loop
jns
mull
jl
pop
or
cmc
jno
sarb
out
mov
mov
cmpsl
jns
and
pusha
addr16
or
jmp
sub
jae
shlb
mov
jp
xorl
int
fisttpll
imul
xchg
frstor
sti
hlt
in
insl
es
lret
dec
js
cmp
inc
pop
addl
subb
pop
dec
push
in
and
imul
sbb
xchg
dec
sbb
jbe
jmp
push
rcll
negb
jle
ficoml
scas
loop
pop
lcall
rorl
jo
or
add
xor
adcl
or
sbb
pusha
jne
std
scas
push
jae
sbb
or
je
dec
les
icebp
mov
fstpl
mov
cmp
adc
push
rcll
fildl
fstpl
repz
push
js
jge
inc
push
arpl
push
in
addb
jmp
sbb
mov
mov
lods
imul
ret
push
inc
cli
or
and
adc
repz
xor
movsl
hlt
stos
jp
sbb
jns
in
call
mov
cwtl
ss
cmp
out
aad
rcr
lea
xchg
jge
std
xor
stc
xlat
push
xchg
pop
shl
xor
mov
cmc
push
adc
jne
rclb
jecxz
mov
inc
inc
add
pop
adc
pop
es
cwtl
pop
rcrl
outsl
push
lret
arpl
sbb
test
lahf
adc
adc
add
pop
sbb
es
push
jbe
add
push
cmpsl
fbld
xchg
push
fsts
mov
mov
in
sbb
shll
pop
inc
loopne
adc
cmp
enter
push
xchg
insl
test
leave
jne
jbe,pn
jae
icebp
cmp
out
std
push
jecxz
in
push
in
stos
jnp
pop
sbb
fists
loopne
push
xchg
sahf
lret
pop
add
test
shll
inc
or
jns
jno
push
fnstenv
jecxz
fcmove
icebp
mov
addr16
mov
fsubl
pusha
rorb
sub
push
jmp
xchg
out
pop
setae
inc
js
adc
adc
jp
cli
adc
inc
inc
inc
bound
scas
dec
and
cltd
inc
and
lds
or
hlt
and
std
push
add
fists
cmp
cmpsl
outsb
sti
addr16
mov
mov
ret
test
jl
in
iret
xor
fnstsw
pop
sarl
inc
add
lods
lahf
leave
push
sbb
xchg
icebp
push
sbb
aaa
insl
sbb
cltd
aam
jl
xchg
loope
jge
xchg
adc
test
or
arpl
mov
pop
mov
and
push
ljmp
cmp
xchg
repnz
stos
add
mov
test
xlat
es
sub
std
jns
and
pop
fistl
lret
sub
jmp
rclb
push
arpl
cli
or
or
idivb
pushf
and
sahf
arpl
sbb
in
sbb
adc
ds
add
fcompl
adc
movb
dec
xchg
not
pushf
mov
subl
jge
sbb
in
mov
cmp
sbb
and
or
cmpsb
daa
clc
out
lcall
xlat
lods
jmp
push
pop
add
inc
sbb
sbb
and
and
scas
mov
xorl
clc
add
cld
jle
popa
push
fisttpl
mov
push
mov
int
outsl
lock
sbb
sbbl
inc
cltd
adc
loope
and
dec
inc
lea
sti
push
mov
inc
inc
std
mov
std
lea
cmp
push
inc
jne
or
pop
or
sub
imul
dec
cld
enter
mov
addl
pop
mov
or
rolb
sti
xchg
rol
repnz
icebp
and
js
xchg
jecxz
push
sbb
sbb
popf
je
call
xchg
push
fwait
rcll
hlt
inc
mov
test
xor
adc
iret
arpl
sub
test
sbb
cmp
push
rdmsr
cs
cltd
bound
pop
stc
fisubs
and
je
shrb
jne
mov
pop
cmpsl
sbb
clc
push
mov
pop
push
push
test
xchg
cmpsl
js
xchg
jno
adc
loop
pushf
repnz
pop
sub
mov
ficompl
cld
loopne
pop
jne
xchg
push
inc
mov
aas
lods
lea
dec
mov
jg
push
xor
dec
outsb
shlb
rorl
sub
decb
jns
loopne
adc
imul
add
testb
out
adc
bound
cwtl
sbb
pop
and
mov
mov
out
inc
pop
pop
mov
cltd
roll
leave
mov
sbb
fstl
push
cld
addr16
add
pop
shrb
xchg
mov
add
sub
ret
push
test
and
jl
mov
add
lds
lret
jl
pop
push
add
or
pushf
fstpt
inc
push
and
and
sub
xchg
lahf
pusha
sbb
imul
lock
gs
mov
adcl
ror
fs
and
jnp
daa
xor
xor
xchg
std
or
movsb
int
mov
addr16
fmuls
in
mov
mov
and
push
call
enter
and
xchg
pop
mov
sub
test
daa
test
dec
repz
inc
fcoms
lock
daa
ljmp
inc
or
or
cltd
add
mov
ret
mov
test
das
inc
insb
xchg
insb
push
mov
push
inc
push
je
ja
imul
mov
add
dec
shr
and
jns
push
icebp
jbe
imul
sbb
clc
dec
jecxz
sub
sbb
sbb
rorb
imul
jns
cltd
inc
jmp
add
pop
jge
icebp
scas
rcrl
decl
mov
je
mov
push
mov
xchg
aad
cmc
test
or
in
pop
push
jg
subb
dec
fwait
mov
sbb
test
fwait
je
jns
mov
roll
popf
ret
dec
mov
insb
cmp
lock
sub
or
aad
and
and
or
mov
int
mov
fs
ficoms
sbb
jge
jl
and
sbb
push
hlt
shl
inc
mov
popf
rcr
cmp
aad
inc
push
xlat
ljmp
pop
imul
inc
sub
cwtl
mov
sub
push
push
mov
sbb
jns
hlt
outsb
inc
cli
ds
sbb
mov
lock
adc
out
ss
das
mov
fbld
inc
and
lea
call
mov
cld
ret
xchg
jbe
arpl
pusha
jbe
sub
inc
and
lcall
jae
sahf
and
push
pushf
aaa
xchg
inc
sbb
pop
xchg
or
imul
data16
orl
and
sbbl
faddl
inc
ret
pop
arpl
push
mov
js
jne
mov
mov
or
push
or
fcomps
mov
lock
lret
mov
movsl
push
aaa
jle
imul
pop
adc
mov
sahf
mov
inc
outsb
test
fmul
stc
lahf
sbb
pop
ret
sbb
inc
jmp
lcall
push
loope
cmp
mov
cmc
adc
sbb
sub
mov
cmp
add
cmp
jo
mov
insl
pop
fdivrl
push
adc
loop
pop
add
jmp
out
daa
dec
push
adc
lea
push
incb
inc
out
and
and
arpl
cwtl
aad
or
call
into
xor
push
aad
dec
or
ljmp
and
jnp
add
adc
sbb
std
xchg
les
ffreep
inc
dec
mov
fsubrs
std
sbb
push
repnz
and
mov
cmp
dec
mov
inc
lods
add
sbb
cmpl
sbb
loope
push
dec
sbb
test
out
shlb
and
in
sbb
sbb
std
sbb
fsts
arpl
lock
jae
adc
rol
mov
in
add
xor
cwtl
cmpsl
cmp
jg
push
test
ja
repz
sti
xchg
mov
lcall
mov
add
inc
lods
mov
fcmovnu
jmp
ficoml
std
testl
ret
sbb
push
xchg
xor
orl
jb
cmp
inc
ljmp
arpl
addr16
fs
clc
push
lods
jmp
je
sbb
pop
mov
or
jnp
daa
fstpl
mov
dec
mov
sbb
sub
in
sbb
mov
sti
jae
aas
push
cwtl
xchg
mov
repz
pop
nop
or
lret
sbb
or
std
pop
dec
pop
loopne
mov
mov
out
inc
adc
sbb
dec
mov
xchg
sbb
and
repnz
popf
mov
ja
add
stc
fsubp
lea
es
fisttpll
fnstcw
jmp
sbb
jb
ret
aam
xchg
in
xchg
loope
enter
popa
popf
and
cltd
test
test
out
xchg
adc
push
insl
rolb
ljmp
jge
loope
jcxz
mov
jne
xor
adc
fnsave
push
imul
loope
xor
mov
xor
adc
in
adc
inc
aam
fwait
push
popa
cmp
fsubl
lods
popa
ret
dec
adc
enter
and
mov
cmp
int
push
xor
out
and
fbstp
push
pop
and
jg
pop
adc
push
aad
or
mov
fimull
xchg
add
push
das
negb
jp
clc
lds
and
and
int3
rclb
insl
pop
sub
push
sbbb
addr16
sbb
fstl
inc
jg
lcall
pop
add
in
mov
test
add
cmpsb
leave
or
inc
into
not
add
dec
adc
sbb
sbb
incl
sbb
add
les
popf
sbb
inc
jg
add
add
jns
shlb
inc
mov
sbb
test
or
imul
xchg
pop
cli
sbb
movsl
scas
mov
mov
pusha
xchg
xlat
push
ret
int
and
mov
mov
lret
jecxz
sbb
mov
push
jl
int
and
push
and
add
push
pop
cmc
out
addb
std
addr16
loop
add
sbb
aaa
xchg
fdivr
std
push
and
mov
mov
lret
test
pop
xchg
inc
in
adc
jo
xchg
jle
in
jb
xchg
jnp
mov
test
adc
xchg
movsl
add
and
lahf
add
sbb
dec
cli
lods
pop
fincstp
push
ror
jp
xchg
icebp
std
popa
xor
cmpsl
add
imul
inc
dec
rcr
cltd
mov
icebp
adc
mov
sarl
aam
jg
inc
rorl
xorl
jne
ret
adc
xchg
shll
cli
addl
fwait
or
mov
fldl
push
xor
outsl
jl
add
add
out
clc
lods
mov
pop
mulb
in
jg
jns
sbb
clc
sbb
sti
or
stos
cmpsb
jns
or
arpl
mov
mov
push
adc
adc
rorl
pop
push
cmp
mov
cwtl
pop
cmp
lret
or
dec
jne
lea
ljmp
mov
xchg
pop
and
arpl
push
adc
jp
and
lcall
fcompl
jns
and
imul
fwait
lcall
or
adc
sbb
add
add
loope
jmp
sahf
fisubs
cmpl
xor
stc
ja
popf
mov
pop
pop
push
call
leave
std
xor
stos
ret
sbb
arpl
jns
aam
cmp
push
cmpsl
ljmp
cld
loop
fsts
pusha
stc
dec
lea
call
call
sti
adc
sbb
add
insl
sub
or
jbe
lods
and
nop
clc
jo
call
cmc
es
or
ret
mov
rcr
lea
loope
mov
push
stc
push
mov
adc
test
addr16
jg
jg
and
aad
je
shl
cmpsl
lahf
xor
loopne
nop
pop
or
and
mov
ds
jg
and
jns
mov
cmc
pop
push
xchg
jnp
popf
add
cltd
push
push
lahf
sbb
aas
inc
std
jb
gs
jb
ljmp
arpl
mov
ficoms
stos
stos
adc
xlat
pop
and
pop
push
imul
subl
push
mov
add
inc
ret
mov
shll
scas
mov
pop
pop
adc
adc
cli
cmpsb
clc
loop
imul
mov
fstl
fldl
push
fsubl
cmpsb
sub
adc
mov
sub
ret
adc
loopne
xchg
jmp
and
push
or
aad
call
std
incb
in
pop
aad
mov
and
mov
cmp
mov
orb
adc
iret
movsl
clc
jp
mov
mov
pop
push
clc
and
mov
sahf
lret
loope
cli
and
dec
fcmovb
ljmp
cmc
sub
add
or
aam
cmp
bound
and
div
bound
neg
mov
pop
jbe
sbb
push
fs
mov
cmp
stos
jae
movsb
cmc
mov
fisttpl
movsl
add
inc
iret
push
xchg
insb
mov
jl
inc
push
les
mov
push
clc
sbb
inc
or
popa
inc
jecxz
aad
mov
in
mov
dec
iret
rolb
sahf
xchg
cli
cmpsb
sbb
dec
or
adc
imul
cmp
or
cs
xlat
clc
xchg
xchg
ljmp
adc
lahf
mov
in
or
cmp
bound
mov
lcall
sbb
sbb
je
mov
pusha
jmp
pop
sbb
fwait
vpshufhw
jae
lock
xor
lahf
es
and
lahf
mov
repnz
sbbl
imul
addb
loopne
push
jge
adc
xorl
sbb
sub
and
test
in
and
stc
push
dec
or
in
add
sbb
adc
ja
imul
std
add
clc
sbb
mov
iret
adc
mov
out
pop
mov
jnp
enter
aad
add
jmp
jnp
movsb
sbb
xchg
or
add
cmp
lret
mov
and
movsb
push
out
or
mov
pop
stc
mov
mov
iret
push
sbb
mov
pop
shl
in
int
push
cmpl
ja
mov
ljmp
adc
and
jmp
loope
dec
jnp
pop
sbbb
fbld
pop
fwait
mov
xlat
push
add
jbe
bound
mov
jl
icebp
mov
mov
shll
cmp
or
jnp
dec
jbe
in
pop
ja
sub
jne
lahf
and
jo
pop
push
iret
mov
popa
or
jne
push
jp
out
pop
and
adc
call
mov
cltd
or
xchg
inc
in
xchg
xchg
or
into
scas
adc
ss
ja
adc
xchg
or
js
jae
divb
stos
xchg
push
fstl
add
mov
add
pop
cmc
xchg
std
cmc
dec
into
mov
sarl
dec
ljmp
std
leave
enter
insb
mov
jle
adc
dec
imul
add
mov
and
std
mov
lods
and
xchg
lock
dec
out
scas
dec
stc
popa
xchg
add
pop
mul
add
addl
mov
movsb
and
imul
pop
xor
ret
stc
dec
push
clc
ud0
fstp
mov
fs
lret
push
fmuls
inc
hlt
je
je
in
aaa
pop
repnz
mov
dec
insl
add
repz
adc
cltd
repz
xchg
mov
jg
jno
add
xchg
out
leave
mov
push
jnp
pop
and
inc
pop
mov
fcompl
jne
std
insb
push
repnz
push
les
subl
stos
or
pop
sbb
mov
fimuls
jns
les
movsb
adc
jns
sahf
sub
aaa
mov
sub
dec
hlt
call
adc
lods
add
sub
sti
xchg
cmp
adc
imul
addl
js
push
sbb
pushf
mov
mov
imul
cmc
push
pop
jns
daa
imul
movb
into
clc
pop
or
pop
fildl
or
out
mov
test
movsb
xorb
pop
mov
je
pop
add
enter
or
adc
cmp
cmpsl
hlt
add
fldenv
adc
pop
xchg
lahf
adc
shll
movsl
and
std
xor
sbb
adc
jecxz
mov
insl
mov
dec
sub
push
push
dec
sbb
fwait
cs
push
lds
sub
push
and
sbb
cmpsb
pop
adc
xchg
imul
cmc
js
les
in
in
cltd
mov
icebp
lds
lods
inc
or
push
push
sbbl
pop
icebp
gs
pushf
in
std
adc
sbb
jns
movsb
adc
inc
adc
fadd
push
gs
repz
and
cmp
pushf
push
add
lds
jbe
inc
cld
js
lods
dec
fcmove
int3
mov
pop
repz
and
push
xorl
push
sahf
out
fdivrs
pop
bt
sbb
xor
xchg
and
or
or
sbb
sbb
repnz
icebp
pop
pop
popl
ja
cmp
cmpsb
push
loop
in
dec
clc
leave
in
sbb
cli
fists
stos
and
shl
aam
push
je
pop
dec
cltd
mov
xorl
cli
dec
pop
call
enter
mov
push
test
or
jbe
adc
std
jo
dec
mov
repz
popf
lock
add
daa
mov
outsb
or
jo
es
pop
pop
pushf
jbe
pop
add
js
mov
xchg
adc
sbb
lods
loope
push
cmp
push
sbbb
stc
jecxz
jbe
push
push
xchg
and
mov
outsb
or
add
cmp
lahf
or
mov
mov
add
adc
aam
sub
andb
push
popf
stos
test
testl
addl
fdivrs
pop
sub
add
fwait
in
out
sub
and
mov
fisubl
les
xor
inc
and
mov
ret
popf
lock
sub
ds
pop
popa
int3
sbb
mov
or
cmp
sbb
or
jnp
inc
jmp
stc
or
pop
orb
and
mov
or
pusha
out
pop
sbb
stos
inc
or
cwtl
mov
cmp
stos
or
icebp
aam
add
xor
pop
mov
pop
out
sbb
rcll
nop
inc
lahf
icebp
int
mov
into
dec
nop
adc
in
stos
std
loop
enter
push
mov
xchg
and
insl
pop
paddb
and
xor
inc
dec
mov
or
push
imul
lods
inc
sbb
imul
gs
jns
xchg
mov
addb
and
pop
xchg
fwait
push
push
add
lahf
lret
pusha
ffree
fwait
idiv
adc
adc
or
adc
mov
adc
out
rcrl
pop
jg
adc
fisttpll
or
cmp
imul
mov
inc
fsubrl
mov
xor
lds
adc
idivl
ljmp
lea
and
shlb
jns
push
jmp
cmpsb
and
bound
daa
or
mov
adc
movsl
xorl
xchg
sti
mov
sub
adc
cmpsb
xchg
push
sbb
rol
pop
push
lods
out
rolb
leave
cwtl
in
push
gs
iret
pop
rclb
inc
stos
negb
cltd
mov
jp
mov
pop
jns
add
xlat
loopne
xor
icebp
adc
outsb
xor
daa
gs
sahf
in
and
lods
sbb
clc
push
std
sbb
fcoml
arpl
mov
pusha
aas
mov
mov
mov
sbb
test
bound
lds
sub
adc
inc
fwait
and
cld
daa
sbb
mov
sarl
stc
inc
cmp
xorl
jmp
push
mov
pushf
or
push
sbb
xlat
jne
inc
xchg
and
pushf
and
andl
sbb
shlb
faddl
mov
dec
lahf
or
rcrl
sahf
xor
clc
push
div
fidivrl
push
add
dec
cmp
arpl
aad
incl
push
inc
fmull
inc
stc
pop
mov
xchg
push
cmp
in
mov
cmp
push
pop
push
mov
stc
pop
or
jmp
sbb
fistpl
mov
or
add
pop
pushf
sub
mov
dec
inc
push
jnp
int
cmp
cmp
or
daa
pop
jno
jnp
xor
mov
aad
stos
inc
shll
je
jbe
xor
and
int3
shll
pop
fmuls
test
movsl
fildll
fsubrl
fidivs
stos
repz
push
sbb
add
sub
fbld
ret
and
mov
movb
imul
pop
fstps
jle
mov
and
cmp
test
jne
sbb
xchg
sbb
inc
or
push
inc
xchg
std
cltd
lahf
add
and
cmp
adc
data16
mov
aam
pop
stos
cmp
or
adc
ja
xor
mov
push
sbb
xchg
pop
jmp
test
jbe
aas
jbe
sbb
popf
lcall
inc
movsl
je
jmp
mov
fnstenv
add
lock
lods
push
bt
mov
pushf
jmp
push
mov
inc
xchg
sahf
arpl
xchg
inc
cld
test
push
sbb
mov
lock
js
cmp
mov
xchg
mov
in
insl
rcl
fwait
cs
dec
ds
mov
dec
lods
mov
adc
or
sub
push
add
adc
xchg
arpl
push
mov
add
pop
cwtl
jmp
mov
pop
hlt
add
in
pop
or
add
pusha
xchg
fldenv
call
les
mov
mov
fisubrs
or
insl
sti
sbb
flds
mov
loopne
cwtl
cmp
nop
sbb
inc
push
jle
shl
sbb
stos
loop
push
loope
xchg
mov
push
imul
icebp
clc
cli
enter
imull
cmp
and
icebp
cmp
push
pop
adc
stos
stc
xchg
xchg
jle
shlb
mov
fbstp
in
dec
or
adc
inc
and
clc
dec
mov
das
pusha
dec
int3
mov
sbb
adc
imul
xchg
add
insb
aas
add
arpl
stc
test
push
fwait
test
cltd
sbb
dec
and
sahf
pop
jge
mov
sbb
in
popf
push
popa
jb
int3
cmc
push
add
dec
imul
idivl
push
push
cmp
fcmovnbe
mov
or
jp
push
sub
iret
orl
stc
cli
mov
pop
lret
mov
xchg
or
out
xor
sbb
xchg
cltd
add
out
pop
or
sbb
andb
push
adc
test
sahf
shll
push
inc
loop
rcrb
popf
rcrl
push
add
mov
js
xchg
lock
xchg
xchg
iret
sub
dec
adc
cmpb
divb
out
or
jo
sahf
jmp
lahf
push
scas
adc
cwtl
lret
mov
adc
pop
in
push
js
fistpl
lcall
test
je
jg
sbb
inc
mov
cmc
mov
mov
test
arpl
jg
ljmp
pusha
xchg
add
out
imul
ficompl
mov
lcall
sub
jecxz
lods
push
cmpsb
mov
imul
clc
push
add
hlt
jno
xor
mov
cwtl
adcb
or
imul
cltd
pop
scas
push
mov
lret
cld
stc
xchg
in
iret
out
lret
orl
adcl
test
addr16
and
popf
pop
jmp
in
push
imul
cmp
pop
loopne
clc
mov
loope
lods
decb
mov
jno
stos
out
pop
outsl
pushf
testl
jp
add
mov
mov
jp
addr16
and
popf
scas
mov
in
aaa
mov
loopne
icebp
mov
insb
sahf
fisubrl
mov
cmp
sub
cmp
add
jecxz
js
fistpll
jl
popf
mov
cmc
jecxz
fnstenv
out
std
inc
stos
jae
xchg
xchg
pop
jle
pop
push
adc
mov
imul
out
aad
inc
dec
push
in
adc
pop
mov
jg
jns
or
out
cmpsl
push
lret
mov
lock
push
std
mov
and
mov
or
fsubr
jl
pop
adc
mov
adc
cmpb
ljmp
jnp
dec
push
inc
je
cwtl
out
push
testb
clc
xlat
mov
mov
rorb
loopne
loopne
mov
icebp
outsl
inc
leave
fldt
arpl
out
pushf
cltd
icebp
lds
push
push
int
bswap
push
inc
jl
sbbb
inc
dec
movl
loope
loop
ret
add
lcall
rorl
adc
xchg
mov
cltd
mov
or
repz
std
mov
mov
mov
adc
mov
in
in
dec
aas
mov
sbb
cltd
pushl
jl
jmp
shl
push
xchg
nop
scas
int
sub
mov
adc
and
sub
sbb
adc
mov
loope
push
push
pop
lret
mov
cwtl
and
aam
push
and
mov
cmpsl
jmp
push
adc
pop
sbb
test
lret
lcall
lcall
mov
jecxz
xor
dec
push
lahf
cs
stos
jo
jg
lcall
scas
sub
sbb
xor
mov
sarl
fdivr
sbb
test
mov
shll
pop
lods
filds
cmc
xchg
mov
inc
dec
stos
mov
sbb
repz
push
fucom
fs
pop
icebp
cltd
stos
mov
xchg
jg
cmp
mov
ljmp
std
rcrl
mov
loopne
push
jecxz
xor
sbb
mov
cmp
mov
loop
sbb
and
orb
scas
jns
int
push
push
mov
sahf
faddl
lret
aad
dec
add
push
test
jmp
pop
xor
cmp
cli
cmp
sub
pop
pop
dec
addr16
inc
ficomps
sarb
insl
imul
sbb
movsb
cwtl
and
sub
mov
mov
ljmp
and
fldt
sbb
and
push
sbb
pusha
sub
mov
lret
add
inc
test
xchg
mov
aad
pop
ja
mov
mov
adc
mov
lods
sbb
dec
pop
sbb
mov
fildll
adc
jge
push
cwtl
imul
mov
dec
jmp
popf
sbb
xchg
daa
cmpsl
lahf
inc
sbb
xchg
nop
daa
and
xchg
fwait
pop
filds
cltd
shll
pop
mov
pop
mov
xchg
mov
mov
clc
pop
sub
push
pop
fimull
out
bound
ljmp
stc
ret
aas
push
call
and
test
add
jnp
fwait
add
imul
popf
insl
gs
jnp
fwait
pop
sub
push
xchg
and
mulb
cli
xchg
divb
in
inc
jmp
adc
into
mov
iret
ljmp
push
xchg
add
push
add
mov
pop
push
mov
into
sbb
add
xor
xchg
adc
jne
into
dec
push
test
mov
mov
add
loop
push
add
repz
add
xlat
jmp
leave
push
ljmp
mov
sbb
pushf
icebp
mov
les
xchg
xchg
mov
lods
nop
cmp
dec
jmp
xchg
jl
rorl
stos
push
mov
ret
mov
add
sbb
mov
pop
insl
fwait
xchg
movsb
sbb
call
jmp
xor
stc
mov
xor
jecxz
or
sub
xor
stc
rcrl
cmp
fists
xchg
cmp
dec
push
xor
mov
mov
insb
fisttpll
ja
lret
mov
mov
cmp
dec
adcl
sbb
rorb
push
jns
add
sbb
cli
test
fnstcw
jge
adc
test
loope
js
xchg
stc
stos
shlb
jne
xchg
sbb
push
icebp
add
ror
mov
rol
in
out
je
cmp
enter
push
inc
fnstsw
shlb
repnz
add
imul
sahf
arpl
stos
jb
and
and
or
lahf
jnp
adc
sbb
std
sar
ret
fnsave
roll
or
repz
add
repz
jns
adc
adc
mov
cmc
pop
popa
jg
mov
adc
and
std
ret
aam
icebp
testb
insl
dec
scas
in
mov
or
test
sbb
jecxz
rclb
in
out
imul
adc
add
stos
add
daa
lret
adc
push
mov
xor
pop
movsl
mov
push
sbb
pusha
fstpt
cli
or
cmp
mov
and
js
xchg
add
sarb
sar
sbb
sbb
decb
pop
out
ds
mov
xchg
pushf
ja
and
jmp
mov
push
fsubrl
xchg
iret
mov
cmc
xor
cmp
dec
cltd
or
add
loope
mov
mov
adcl
lcall
mov
cmp
stc
dec
push
icebp
test
xor
cmp
xor
sbb
cmpsl
dec
insl
in
mov
inc
sahf
aam
add
icebp
or
cli
nop
fwait
xchg
idivl
bound
and
mov
xchg
lds
push
ret
sbb
jb
sbb
rcrl
movsl
push
inc
and
xor
inc
stos
lret
pusha
clc
cwtl
sbb
sti
ljmp
arpl
pop
clc
lcall
and
hlt
sbb
testb
xchg
shll
stos
in
xchg
js
pop
les
xor
xchg
sub
dec
sub
fstpl
mov
push
aad
fadds
adc
insl
or
in
jne
mov
adc
popa
push
test
cwtl
fidivl
cwtl
loop
popf
test
ret
test
mov
sbb
sbb
filds
and
jle
popf
and
push
out
les
fisttpll
repnz
sub
jmp
out
enter
fistpl
and
sub
adc
cltd
rcl
loope
insb
xchg
andl
push
mov
loope
inc
cld
mov
sbb
std
and
and
sbb
shl
scas
jg
lea
cwtl
aam
addl
push
in
outsb
cwtl
cmp
into
xchg
jmp
scas
mov
inc
int
bound
mov
popa
outsl
dec
ret
loopne
xchg
jecxz
mov
out
mov
rolb
std
cld
mov
adcb
jmp
popa
loope
jp
fdivl
pop
lock
mov
add
pop
cld
dec
popf
xor
pop
mov
negb
jns
jnp
push
arpl
and
mov
hlt
mov
loop
mov
cmp
inc
mov
sbb
pop
inc
push
fwait
adcb
mov
fdivrs
sbb
and
pop
test
xchg
outsb
push
and
sbb
pop
push
lahf
mov
in
cltd
sbb
xchg
call
stc
cld
rcrb
pop
add
mov
mov
jns
adcl
out
sbb
movsl
cli
test
xor
add
andl
aam
scas
cmp
push
insl
pop
push
cmp
cmp
push
or
add
mov
adc
mov
xor
xchg
pop
xchg
inc
test
lods
std
ret
mov
pusha
jbe
lock
sbb
test
push
push
outsl
adc
nop
cmpsl
fyl2x
cltd
imul
lahf
mov
sub
push
adcl
xchg
jmp
xor
fdivr
push
orl
adc
cwtl
dec
insl
adc
mov
xor
std
jns
xchg
jae
cmp
adc
mov
mov
imul
sahf
fldl
mov
repz
lahf
sahf
lret
sbb
scas
out
mulb
mov
mov
and
push
mov
sbb
sbb
or
xchg
mov
call
and
inc
jae
cli
pop
pop
imul
in
mov
mov
push
jecxz
mov
sbb
test
push
xchg
adc
jl,pn
mov
pop
test
jb
jo
and
test
ret
stc
stos
call
cmp
popf
test
cltd
or
pop
icebp
repz
fstpt
imul
adc
sbb
sbb
inc
fisttpl
lods
jmp
test
or
cmpsb
in
push
lea
sbb
jnp
and
stc
ljmp
sbb
and
ret
lahf
enter
adc
fwait
sub
push
add
or
adc
rolb
lea
decb
sahf
sbb
mov
xchg
inc
sahf
notl
pusha
sbbl
hlt
sbb
ret
in
fs
push
add
push
cmp
cmp
pop
je
in
jnp
xor
xchg
insl
cwtl
mov
arpl
sbb
fs
xchg
pusha
or
and
adc
mov
mov
mov
scas
ret
mov
and
xlat
sub
push
pop
mov
sbb
pop
sar
aam
and
and
ret
repz
jp
sbb
pop
lea
ljmp
jmp
call
mov
sti
cwtl
mov
xchg
ja
cmp
inc
xchg
js
stos
sbb
ficoml
and
pop
push
adc
mov
jnp
cmp
test
je
cli
sub
or
imul
push
daa
sbb
or
popf
shrl
std
cmp
mov
in
mov
test
in
adc
push
addl
jne
sub
js
mov
xchg
fisttpl
inc
and
nop
push
add
add
inc
and
and
cmp
sub
xchg
leave
add
push
loope
sbb
add
das
push
stos
adcb
pop
xor
lahf
pop
pop
lock
pop
addb
push
fstpl
xchg
lahf
jb
jnp
shll
sbb
nop
or
mov
movsb
pop
xchg
mov
sbb
cmp
xchg
and
test
adc
adc
lret
pusha
push
sub
pop
repz
jmp
mov
or
jnp
movsb
cwtl
mov
pop
xchg
std
sarl
and
ljmp
rorl
adc
ret
pop
ljmp
mov
jmp
xor
test
sbb
cltd
pop
or
int
mov
xor
xchg
mov
mov
xchg
mov
dec
mov
push
js
das
dec
add
repnz
sub
cmp
sub
sbb
imul
decb
adc
mov
adc
or
nop
cmp
aam
loop
sbb
sbb
insb
popa
lret
icebp
mov
adc
inc
or
fstpl
mov
cmp
or
mov
adc
and
adc
clc
jne
xchg
pushf
cmp
fwait
sub
jne
and
xchg
mov
popf
sbb
xrelease
mov
and
test
jg
or
push
cmpsl
sahf
fimuls
and
je
cmp
lock
xor
sti
sahf
fildll
push
and
push
shr
pop
sbb
xchg
push
xchg
fistpl
ja
mov
add
scas
and
jmp
in
imul
and
dec
ret
sub
xchg
hlt
mov
sub
jle
jmp
adc
mov
fwait
push
mov
movsl
inc
jg
sbbl
jbe
jle
test
and
addl
mov
insb
sbb
xchg
sbb
arpl
adc
xchg
mov
loop
pop
loopne
and
pop
rclb
mov
cli
ja
mov
push
mov
add
loop
cli
lahf
popf
jmp
xchg
xchg
jp
and
sbb
push
fildl
push
test
sbbl
and
sbb
rep
push
jno
mov
in
xor
roll
inc
mov
movsb
testb
adc
sahf
std
fs
addb
jns
popa
inc
adc
negb
mov
xchg
je
outsl
push
or
lods
test
xchg
enter
adc
push
dec
testl
mov
out
xchg
call
sbbb
push
std
test
pop
repz
mov
mulb
rdmsr
popa
out
add
ret
push
jno
add
data16
inc
aaa
out
lea
cltd
add
xchg
or
js
adc
or
mov
push
das
stos
and
adc
test
pop
inc
lret
lock
mov
int
xor
push
adc
push
sub
xchg
verr
hlt
and
scas
adc
sbb
sub
xorb
jle
push
sub
mov
test
xchg
jmp
insl
xorl
mov
xchg
or
cmpsl
cs
pop
add
sub
cld
pop
push
inc
fnsave
mov
jmp
or
sbb
vpsrld
fcom
cmp
js
dec
push
fstl
test
cmp
pop
inc
cmpsb
add
inc
mov
test
or
std
jnp
mulb
addb
popf
or
sub
or
adc
cmpsl
add
cmp
and
push
xor
mov
aad
mov
pop
inc
test
pop
rcll
idiv
mov
add
xchg
lahf
in
mov
divb
sahf
sti
test
or
push
pop
cwtl
xchg
xchg
and
xchg
push
mulb
jb
sarb
inc
push
adc
mov
mov
inc
mov
adc
push
inc
dec
in
rclb
cld
cmp
xlat
inc
cmp
outsb
jno
adcl
sub
mov
cmc
pushf
negb
push
shll
cmpsb
push
fcomps
leave
and
sub
mov
jae
out
or
mov
lock
insl
cmp
mov
fnsave
loope
lcall
mov
cmpsb
and
ret
cmp
jl
cld
ja
or
adc
loopne
sub
popl
mov
lcall
stos
cmc
lock
cmpsb
addl
or
imul
xchg
or
lods
sbb
push
loop
mov
mov
test
loop
cli
xchg
test
inc
sub
stc
mov
sbb
and
outsb
clc
mov
shll
test
and
pusha
fimull
adc
lea
mov
mov
shll
jmp
mov
push
mov
aam
and
xchg
adc
adc
aas
hlt
and
xchg
push
mov
in
loopne
stos
xor
out
pop
mov
cmp
lods
stos
stc
fstl
jg
push
in
and
cmp
mov
mov
sbb
mov
fdivs
cli
std
lea
in
lea
and
pop
aad
mov
rcrb
sbb
and
push
mov
mov
mov
sbb
fdivr
jae
xchg
lret
mov
mov
jp
cwtl
and
addr16
fcomp
push
loopne
mov
imul
call
inc
repz
pushf
das
mov
int3
mov
sub
sbb
int
out
mov
add
stos
jo
jg
jle
orb
mov
or
jge
pop
repz
sbb
jns
push
push
out
pushfw
add
int
repnz
xchg
sbb
rcll
jns
nop
fsubs
inc
jo
sahf
gs
pop
mov
mov
push
pop
sub
roll
cmp
xor
xchg
decl
and
mov
jl
jnp
aam
adc
sbb
push
push
test
out
mov
int3
pop
fdivrl
mov
cwtl
dec
adc
pusha
std
ss
sub
out
shll
and
out
sbb
mov
sarl
and
std
inc
xor
lret
xor
mov
test
ret
lret
or
inc
add
and
cmp
push
push
out
push
xlat
js
in
ljmp
clc
or
add
enter
insl
dec
push
mov
or
fisubrl
xorb
pushf
dec
add
jg
out
ret
push
imul
jecxz
test
push
mov
jge
enter
rcll
jo
loopne
icebp
pop
das
ss
lods
cltd
xchg
sbb
insl
push
sbb
and
xchg
or
and
xchg
jbe
cmp
cltd
sbb
insb
mov
stos
inc
movsb
ret
lea
push
shr
and
cs
inc
pop
jbe
in
cmp
xchg
and
cld
mov
sbb
js
pop
lods
gs
cmc
test
mov
out
jge
dec
testb
movsb
hlt
mov
mov
cli
std
stos
shlb
mov
sub
loopne
xor
shrb
jmp
adc
or
mulb
jp
mov
jg
adc
popf
icebp
or
stc
cmp
pextrw
pop
addr16
xor
rorl
lods
sbb
jno
xchg
mov
sbb
pop
mov
or
push
inc
or
int
push
movsb
aaa
sbb
sbbl
push
leave
loope
add
add
and
adc
sbb
adc
adc
imul
sbb
mov
mov
call
shll
add
lods
cld
loope
pop
stos
or
loopne
add
push
and
cld
mov
es
xchg
or
loope
test
addl
adc
int
sbb
call
or
adc
mov
sbb
mov
or
cli
and
adcl
movsb
jnp
sub
add
jp
stc
sbb
mov
sbb
sahf
mov
in
popf
mov
mov
push
mov
clc
and
leave
xchg
xchg
cmp
in
inc
scas
sub
pop
mov
cmc
cltd
cmp
lcall
pop
adc
sbb
sbb
es
cmp
jno
in
jg
push
das
popf
call
xor
jmp
cmp
sub
std
dec
mov
mov
cmp
push
inc
add
cmc
cwtl
js
and
mov
or
stc
xor
xchg
shll
jg
add
shrb
aaa
adc
lds
xchg
push
lcall
and
push
lahf
popf
xor
xchg
enter
dec
and
or
sti
xchg
test
cmpsl
xchg
pop
inc
aad
push
gs
stos
ret
fnsave
push
sbb
mov
js
add
cmp
lea
dec
jg
mov
hlt
std
jnp
icebp
jne
inc
sbbb
insl
js
pop
push
sbb
sub
ja
mov
paddusw
andl
inc
inc
std
in
add
mov
test
xchg
bnd
fwait
add
jge
js
and
les
dec
test
ja
sub
cld
push
sub
jne
cwtl
std
xor
cli
or
arpl
rcll
or
testb
pop
popa
mov
xor
mov
loopne
mov
pop
fs
into
mov
jle
adc
out
mov
lahf
push
fldl
or
fistpll
jbe
js
mov
xor
add
adc
sbb
fwait
call
mov
push
scas
sbb
cwtl
mov
xchg
mov
je
addb
add
sahf
mov
dec
mov
sub
inc
sbbl
lock
pop
sub
sub
sbb
in
enter
inc
jecxz
mov
std
fildl
cmp
lds
sbb
repnz
push
or
adc
cwtl
pushf
in
in
mov
mov
and
xchg
ret
pushf
sub
adc
orl
das
push
mov
movsb
add
adc
xor
mov
fisttpl
sbb
mov
adc
mov
jle
mov
je
xchg
and
jecxz,pt
pop
arpl
jp
das
cmp
and
sub
ja
imul
cmpsl
in
xchg
leave
dec
push
cmc
fcmovb
je
adc
lods
sbb
xchg
push
mov
lret
pop
lock
andl
cltd
fcompl
sbb
pop
adc
push
jl
iret
lds
mov
sub
lods
xchg
cmp
test
inc
loopne
mov
lods
pop
push
xchg
loope
sbb
lret
cwtl
add
push
das
xor
sbb
inc
mov
jecxz
xor
stc
jae
mov
pop
test
inc
scas
call
xchg
fidivl
fildll
pushf
xchg
dec
cmp
push
push
jnp
stos
dec
shlb
ret
mov
rcll
inc
clc
pop
dec
and
jmp
mov
add
fcmovbe
dec
pop
ret
pop
int
pop
sahf
mov
mov
pop
fadds
and
lods
ljmp
lret
stos
or
gs
mov
ret
xlat
lods
sub
add
adc
lret
cmp
ret
mov
stos
push
repz
std
jae
mov
sub
dec
arpl
fucom
in
scas
sbb
stc
into
pop
mov
and
push
hlt
movsb
lahf
ftst
idivb
and
mov
jnp
fnstcw
mov
xchg
cltd
mov
mov
and
jp
clc
jns
or
push
sbbl
icebp
into
or
cmp
mov
lock
arpl
add
mov
loope
je
jbe
adc
in
stc
sub
pop
sub
ret
xchg
pop
mov
xlat
loop
push
or
in
jns
nop
sti
jp
mov
ficompl
or
xchg
jbe
pop
mov
out
int3
sbb
pop
clc
jmp
add
addr16
sahf
arpl
add
ss
cmpsb
mov
lcall
mov
inc
outsl
sub
jmp
fisubl
es
jmp
leave
lret
ret
pop
sbbl
js
std
cld
add
orl
test
hlt
test
push
js
adc
jo
repz
rolb
aad
clc
mov
cmp
xchg
jl
jno
daa
jg
rcrl
in
xlat
sub
loopne
add
std
loopne
in
inc
fdivs
scas
mov
dec
scas
cmp
and
xchg
mov
pop
dec
jo
and
xchg
iret
aad
cmp
icebp
arpl
mov
xchg
sbb
sbb
sbb
fwait
in
add
push
repz
movl
add
push
pop
ds
jecxz
icebp
outsb
es
pop
push
sbb
pop
jge
jmp
es
sbb
dec
push
jns
in
jmp
divb
lods
and
mov
and
pushf
xchg
push
cwtl
sbb
lock
scas
push
lds
enter
cld
adc
fdivs
pop
test
cmp
adc
into
mulb
inc
jmp
out
sahf
flds
mov
mov
xchg
mov
adc
jo
jmp
pop
test
jecxz
pop
lods
icebp
mov
push
jl
inc
loope
pusha
pop
repz
and
test
loop
lock
std
call
lods
enter
lret
daa
inc
test
pop
aas
add
lcall
fmuls
push
mov
xor
or
andl
leave
scas
testb
add
rcrb
jb
rclb
jno
cmp
add
sbb
sbb
pop
fadd
es
xlat
test
std
jl
incb
or
pop
add
or
pushf
scas
jmp
pop
mov
mov
adc
adc
fwait
xor
push
ret
cld
jl
xchg
out
call
or
stos
mov
jmp
jmp
and
subl
jae
scas
mov
cmpsb
xchg
loopne
add
imul
lret
aad
fdivrs
mov
shll
sbb
adcl
jne
test
add
mov
mov
daa
and
sub
push
push
sbb
sub
add
jp
mov
lret
sbb
iret
jle
decl
into
adc
div
mov
push
popa
jbe
cld
dec
ror
popf
jl
fwait
jle
cld
sbb
push
sbb
mov
pushf
loop
fisttpl
push
cmpsl
sbb
js
popf
pusha
jb
mov
and
inc
sub
push
popa
add
xchg
cmpb
jl
lea
pop
mov
into
lock
imul
dec
mov
cld
mov
fisttpll
loope
lea
scas
jnp
adc
and
fistps
xchg
repnz
mov
out
mov
mov
jbe
mov
mov
adc
daa
in
lret
pushf
sbb
xchg
xor
data16
outsb
push
or
cltd
insl
nop
fwait
dec
pushf
testl
sbb
pop
pusha
lds
adc
std
mov
cmp
or
sub
sbb
mov
popa
lret
pop
sub
jecxz
add
mov
mov
add
mov
add
jge
test
sbb
add
mov
nop
shrb
je
push
scas
add
pop
out
inc
sbb
lret
mov
sbb
jae
incl
mov
lods
rcr
lea
adc
and
lds
sti
mov
and
fildll
push
cld
adc
mov
and
mov
sarl
aaa
movsl
out
pop
sbb
shr
sarl
mov
ficomps
push
int
rcrb
jbe
push
pop
out
arpl
femms
jnp
loop
test
dec
daa
setg
xchg
inc
lcall
out
outsl
push
hlt
leave
fsubp
mov
mov
cmp
pushf
jl
lea
loop
sub
xchg
jl
dec
stc
outsb
push
outsl
xor
adc
scas
jp
jecxz
clc
sbb
xchg
ljmp
jb
rcl
xchg
lea
jnp
cltd
and
cwtl
dec
fistpll
stos
loop
in
lods
dec
mov
mov
in
int
mov
and
inc
std
gs
shlb
adc
loopne
jns
in
mov
jp
sbb
int
jle
addl
sub
sbb
adc
and
andb
jnp
and
add
xorl
scas
data16
movsb
dec
iret
sahf
test
or
pop
in
or
fwait
push
mov
or
push
jg
fmuls
sbb
daa
daa
cwtl
pop
orb
jmp
xchg
std
popa
mov
add
adc
jns
mov
cltd
inc
push
pop
mov
in
jmp
mov
sbb
mov
fcomi
popa
inc
and
cmp
jo
pushf
cmp
dec
shrl
jl
and
mov
cmp
push
mov
rorl
sub
pop
movsb
jne
and
clc
ds
shrb
sbb
sbb
sarl
adc
and
mov
lret
sbb
sbb
mov
pushf
test
scas
int
fildl
cmpsl
mov
addr16
dec
xchg
icebp
in
push
in
mov
mov
jmp
add
cli
in
stos
mov
and
or
cwtl
adc
cmpsl
mov
je
dec
popf
or
jp
sub
cltd
mov
lret
loop
pop
push
dec
and
test
xchg
out
stos
jbe
cmp
add
jmp
push
pusha
pop
scas
lods
cs
mov
jno
sahf
arpl
sbb
das
scas
add
or
and
rcrl
cmove
in
lock
cmpb
or
push
insb
scas
popf
inc
mov
pop
cmpsb
lea
js
addr16
stos
xchg
pop
out
or
out
loopne
je
into
cld
popa
jo
insl
jg
mov
lret
push
jbe
lea
aad
arpl
or
loopne
jae
push
pop
pop
orl
and
add
ljmp
sbb
add
mulb
cmp
adc
push
lods
rcll
sbb
dec
xchg
cld
mov
mov
pop
add
cmp
mov
xchg
scas
ret
scas
stc
icebp
idivl
pop
mov
jno
out
ja
sbb
data16
jb
mov
adc
cmpsb
jnp
cmpsl
cld
out
sahf
dec
cmpsb
mov
and
popa
push
push
pushf
cmp
repnz
mov
and
shrb
push
insl
stos
pushl
out
xchg
lock
push
pusha
and
out
sub
and
rcrb
stos
int3
xchg
or
loopne
sbb
xor
leave
add
imul
das
jns
mov
mov
or
push
in
nop
jae
xor
and
dec
sub
fsubl
adc
mov
stc
rorb
adcb
pop
popf
out
cld
mov
scas
test
or
inc
cmp
jmp
push
enter
or
lcall
cmp
mov
leave
loop
pop
push
jo
hlt
icebp
mov
cld
cmp
ffree
mov
pop
cmp
loope
sbb
jno
out
jle
mov
sti
push
fwait
push
cli
push
nop
fildll
mov
test
imull
mov
push
orl
mov
sbb
and
xor
push
das
or
fldt
cld
clc
mov
fists
pop
int3
adc
pop
pop
or
xchg
clc
jl
push
jno
sub
je
pop
rol
pop
push
int3
push
in
lods
std
sub
cmp
js
int3
mov
stos
cmc
or
es
loop
and
pushf
cmp
ja
lea
push
add
mov
sub
sbbb
sbb
in
mov
in
aaa
pop
fs
jg
js
jnp
inc
cmc
pop
ss
sub
jne
add
out
stc
and
push
sbb
push
push
test
fmuls
xchg
mov
orb
dec
xor
mov
loopne
mov
cwtl
push
test
fnstcw
cld
mov
push
dec
inc
shr
mov
mov
filds
mov
sub
es
retw
pushf
pop
mov
inc
ret
out
jns
mov
sahf
pop
mov
xor
adc
add
cltd
or
mov
sub
xor
jecxz
adc
mov
fmuls
sub
in
pop
mov
lea
popf
iret
pusha
aad
outsb
nop
inc
test
adc
mov
xchg
daa
mov
or
test
sub
daa
xchg
pop
arpl
and
out
jge
incb
loopne
sarl
adc
xlat
nop
repz
test
cmpsl
lret
lahf
mov
add
sub
sub
pop
loopne
xlat
cmp
jns
sub
enter
jge
add
scas
shll
inc
and
pop
addb
xchg
adc
repnz
pushf
push
loope
jnp
push
lahf
clc
ja
push
cmp
inc
inc
icebp
jno
out
cmc
and
mov
pop
lods
pop
les
inc
sub
push
lcall
mov
push
roll
mov
shr
sbb
lahf
mov
push
loope
xchg
mov
sbb
loope
cmp
shrb
or
cltd
xor
jmp
sub
push
dec
pop
xchg
rcrb
mov
jle
test
cmp
addr16
call
out
mov
mov
hlt
notb
cmp
mov
lock
dec
sub
in
and
ja
out
and
jmp
leave
cmp
ror
ds
mov
adc
sbb
push
rol
and
pop
xor
mov
jmp
mov
stos
inc
cmc
stc
mov
xor
inc
xor
mov
popa
cmp
push
lds
das
sbb
add
sub
imul
cmp
lcall
in
faddl
test
popa
dec
inc
pusha
mov
xor
and
lods
rcrl
test
rol
mov
sbb
jbe
adcl
fldt
lahf
lret
xchg
inc
push
in
out
xor
cmp
sbb
mov
arpl
dec
ret
popa
out
cmp
stc
adc
fisttps
cwtl
sbb
jmp
mov
js
sbb
out
adc
sub
mov
pop
or
lcall
rcll
pop
mov
push
int
ss
cmp
inc
ja
dec
jo
ss
mov
test
out
xchg
inc
sbbl
dec
mov
in
out
lcall
sbb
cmpl
in
shlb
push
jmp
nop
repz
rcrl
jge
cmp
push
sti
mov
mov
xor
xchg
pop
in
mov
jp
testb
jbe
pusha
sbb
out
xorl
jo
outsb
cwtl
shll
mov
sbb
mov
push
mov
stos
or
cmp
and
popf
outsl
push
mov
jne
imul
mov
and
pushf
jg
sbb
mov
pop
idivb
or
mov
or
add
adc
cld
sub
mov
cld
pop
lds
les
jp
scas
push
jno
add
sbb
sarb
add
adc
std
rcrl
fs
mov
push
or
test
lock
arpl
pop
test
or
in
jmp
je
mov
fwait
rolb
rcll
jg
imul
shrl
es
or
xchg
sbb
xchg
nop
jmp
xor
mov
jns
xchg
push
out
cwtl
shlb
dec
imul
push
push
out
jle
std
test
push
cwtl
imul
leave
add
sbb
movsb
push
clc
pop
mov
push
sbb
lcall
pushf
das
cmc
add
mov
sbb
push
and
push
jae
adc
and
and
popf
or
inc
xlat
repz
sbb
or
daa
add
sahf
subb
push
sbb
mov
push
or
sbb
and
imul
jp
mov
cmc
in
jbe
inc
call
mov
xchg
or
loop
and
fnsetpm(287
mov
push
nopl
rcrl
frstor
lcall
leave
inc
stc
setnp
ret
mov
movsb
sbb
adc
pusha
pop
mov
add
pop
repnz
repnz
xorb
out
pop
out
sub
and
decb
addr16
test
stos
ja
notb
and
xchg
pop
mov
iret
iret
cwtl
xchg
inc
imul
jmp
sub
cmpsl
addr16
xchg
adc
xor
pop
pop
imul
mov
xchg
sub
hlt
cmp
and
out
sbb
or
punpckhdq
data16
jnp
cmpsl
leave
cwtl
add
test
inc
mov
push
pop
pop
cli
pushf
and
and
je
sbb
sbb
sbb
loope
mov
add
and
sbb
mov
es
or
fsubs
lea
xchg
and
sub
inc
cmpsb
insb
or
inc
pop
and
test
cmp
jl
push
addr16
inc
xchg
add
inc
xor
mov
std
or
icebp
lock
push
dec
pop
scas
push
xchg
pusha
data16
push
cli
sbb
jb
sbb
mov
adc
add
sub
loop
cmp
sbb
lret
push
cmc
mov
push
fcomps
mov
inc
out
in
cltd
into
push
lea
ficompl
mov
arpl
xchg
aas
mov
jecxz
and
and
fsubrs
cwtl
lds
popf
adc
jb
sbb
pop
leave
add
jl
scas
rcrl
js
and
pop
xchg
jle
test
or
push
or
jbe
loopne
or
inc
filds
pop
xchg
sub
pop
js
xor
loopne
pop
sub
bnd
sub
popa
in
mov
in
fisttpll
sub
and
jge
dec
jo
adc
xchg
sub
in
rep
adc
jbe
mov
adcb
std
and
sbb
sbbb
mov
xlat
movsl
xchg
jecxz
mov
sbb
adc
xchg
adc
sbb
rclb
cld
fwait
lahf
out
rsm
in
push
hlt
mov
mov
jb
loop
mov
xchg
adcl
push
leave
mov
bound
jmp
je
out
je
loopne
xchg
sbb
fwait
push
loop
rorl
mov
mov
xchg
jecxz
loope
push
aad
xor
mov
cmp
xchg
popf
and
and
es
or
cli
sbb
mov
and
and
mov
mov
and
in
adc
dec
xchg
mov
mov
and
add
pop
imul
and
popf
adc
sub
mov
or
pop
xchg
mov
insb
adc
mov
jae
lea
mov
ret
sub
rep
mov
bound
push
mov
icebp
fucomip
or
jl
clc
cmpsl
xor
jnp
xchg
pop
cmpsb
push
ljmp
inc
inc
push
int3
sub
fisttps
cmp
aad
jns
sub
xor
dec
inc
sar
jp
mov
pop
pop
push
mov
test
test
inc
repz
xchg
cwtl
mov
mov
pushf
xor
xor
sarb
jo
pop
popf
adc
ljmp
mov
in
and
add
out
test
clc
and
mov
push
stos
cld
mov
scas
inc
jae
add
sbb
fwait
pop
jmp
jle
sub
test
lcall
test
sti
pop
out
cmpsl
mov
orb
push
and
pop
xor
jnp
out
and
mov
mov
xchg
xor
imul
mov
adc
std
mov
addr16
test
addr16
stc
xor
jns
in
mov
aas
xor
jae
imul
lea
call
mov
popa
sbb
push
push
jmp
pop
dec
cmp
pop
das
rcrl
dec
pop
mov
repnz
jecxz
adc
lret
add
scas
mov
pop
sbb
adc
mov
lock
sbb
inc
jp
add
in
add
and
fisubs
jle
dec
pop
cmpsl
fsts
sub
inc
jp
call
rcl
push
or
jp
xchg
in
dec
dec
enter
xor
enter
clc
int
ss
sub
and
ja
sub
sbbb
ja
loop
out
mov
stos
mov
adc
ret
pop
inc
andl
push
cli
mov
xchg
or
and
push
sub
mov
push
jnp
mov
mov
jge
add
mov
aas
dec
push
or
sbb
jmp
repnz
out
add
sbb
fisttpl
mov
adc
nop
xchg
lcall
add
sti
xchg
xor
xchg
stc
loop
or
rcrb
xor
ja
rclb
jbe
sub
call
sbb
or
cmc
mov
es
mov
test
inc
cmpb
movsb
or
or
repnz
data16
test
fcomps
sub
and
mov
jno
imul
sahf
inc
rorl
lcall
jmp
cmp
shl
stos
pop
or
mov
sub
stc
orb
imul
xchg
sbb
pop
in
sbb
sbb
cwtl
add
pop
mov
sbb
add
out
mov
out
sub
outsb
mov
pop
xchg
sub
or
sub
sub
movsb
out
insl
adc
jns
sbb
andl
xchg
icebp
loopne
xchg
adc
xchg
fcoms
add
pushf
adc
inc
sub
stos
adc
lea
cs
inc
std
test
sbb
inc
pop
jnp
mov
inc
in
lcall
add
mov
mov
mov
mov
das
shrb
mov
cli
adc
or
sub
ret
pusha
incb
dec
or
sbb
and
lea
ja
mov
int
push
jge
dec
adc
pop
iret
mov
push
add
test
add
sbb
cmpsl
add
sub
sbb
repnz
add
sbb
jmp
ljmp
pop
or
cwtl
loopne
dec
cmc
loop
pop
sub
adc
jg
hlt
leave
pop
cld
arpl
and
mov
addb
mov
std
xor
lahf
imul
pop
mov
orl
in
pushf
or
ljmp
loope
lea
cltd
sbb
mov
daa
lds
aam
jbe
cli
pushf
andb
mov
push
jae
mov
sbb
mov
jae
sbb
repnz
and
sti
lahf
or
push
or
iret
call
testl
cltd
fnstsw
cmp
dec
popf
sbb
xchg
lods
and
popf
push
out
pop
addb
roll
leave
lods
subl
enter
icebp
xlat
leave
test
mov
fsubl
imul
inc
ja
and
push
popf
mov
push
in
shrl
es
sub
int
jmp
cwtl
icebp
pop
insl
mov
jae
scas
or
mov
push
sbb
orb
sahf
in
jnp
push
xchg
notl
popl
icebp
add
jecxz
mov
xchg
or
sbb
mov
dec
pop
jnp
pusha
cmpsl
xchg
idivb
mov
jl
push
in
sub
sti
arpl
jecxz
mov
rcrb
add
cmpsb
dec
sar
stc
mov
fnstenv
xchg
icebp
leave
sarb
pop
les
daa
add
cmp
pop
ret
xchg
mov
icebp
iret
mov
mov
insb
mov
sbb
sub
cmp
mov
mov
mov
aam
jnp
in
xchg
xchg
mov
and
push
jl
jge
lea
sub
rcrl
iret
lock
fwait
sub
shlb
xchg
push
mov
mov
add
sbb
sbb
roll
mov
icebp
int
push
pop
pop
or
jl
push
pop
pop
push
xchg
out
xchg
loop
mov
or
jg
lcall
xchg
idivl
or
add
and
cmp
jae
jg
addr16
je
js
push
and
xor
and
jno
mov
sbb
cwtl
test
and
loopne
cli
mov
gs
shll
cmp
test
push
mov
mov
mov
inc
fstpl
and
mov
sub
jo
stos
inc
sbb
jmp
js
dec
out
pushw
test
pop
shl
cwtl
and
lods
sbb
test
out
test
jb
addb
stc
repz
adc
stc
nop
cmp
movsl
xchg
arpl
mov
outsl
xchg
cld
imul
jae
divl
jmp
sahf
push
mov
and
cmc
mov
int
sbb
jmp
mov
inc
add
dec
xchg
es
addr16
cmpb
sbb
sbb
pop
test
lods
popf
cmpsl
sub
mov
sbb
jmp
jge
and
out
je
rcll
push
jno
pop
mov
mov
xor
cltd
mov
mov
ror
push
shlb
xchg
mov
popf
cwtl
jmp
jns
and
adc
enter
xor
push
dec
pop
and
and
xchg
push
je
faddl
mov
xchg
cmp
sbb
in
mov
pop
arpl
push
pusha
push
and
sub
mov
sahf
movb
jo
cmp
and
pushf
hlt
and
pusha
fucom
and
and
lods
pop
sub
out
inc
mov
add
mov
repnz
mov
lahf
mov
sbbl
dec
inc
push
or
and
jecxz
or
add
dec
jae
mov
jnp
inc
andb
iret
or
jg
testb
pusha
cld
sti
inc
scas
pop
pusha
add
add
int3
test
stos
into
mov
mov
adc
fs
in
mov
jbe
push
lcall
js
pushf
adc
fwait
ret
in
cmpsb
shrb
lock
hlt
fcom
add
jmp
fisubl
sbb
mov
lcall
loopne
inc
lods
lock
jbe
jns
aad
jne
add
rcll
mov
mov
loopne
push
sub
add
sbb
mov
sar
or
xchg
inc
adc
adc
pushf
and
adc
push
repz
adc
xchg
cltd
imulb
jbe
fninit
jmp
dec
ret
adc
mov
mov
push
repnz
add
xchg
adc
testb
in
sbb
gs
pop
pop
out
cmp
test
sbb
push
movsb
adc
in
adc
inc
pop
inc
repnz
and
lock
jo
test
out
xchg
cmpsb
adc
push
xchg
adcb
inc
ret
xchg
leave
ret
mov
iret
addr16
xchg
jno
xchg
js
push
add
movsl
jns
ret
jae
daa
cmpsb
shl
mov
cmp
stos
arpl
out
push
sbb
and
test
imul
lcall
and
test
or
es
repz
inc
stos
out
push
mov
pop
add
push
push
add
pop
arpl
pusha
adc
sub
fiadds
xchg
sbb
decl
mov
pop
jae
dec
dec
out
fidivrs
cld
jbe
divl
hlt
dec
std
lcall
add
pop
jp
push
js
jge
push
imul
and
loopne
jns
lahf
xor
xor
ljmp
and
pop
push
jmp
inc
nop
push
sbb
mov
push
add
xchg
std
pop
lock
pop
cltd
test
cli
cmp
or
xchg
aam
ljmp
insl
mov
cmpsl
sub
sti
xchg
and
std
sarl
popf
jo
mov
mov
jmp
push
cmp
or
mov
popf
jo
movups
jp
aad
aas
lcall
lods
dec
clc
insl
mov
lods
aas
std
hlt
imul
pop
or
push
sbb
xchg
sub
jns
cltd
add
es
mov
insb
xlat
sahf
sub
or
push
nop
or
mov
push
cmp
idiv
sbb
fistpl
ret
add
adc
test
stos
and
add
stc
enter
sub
fstps
pop
jo
sbb
repz
adc
int3
rcll
sbb
cmpsb
cli
rcrb
and
in
and
out
xchg
xchg
mov
jne
notl
nop
and
mov
xchg
mov
push
or
daa
and
scas
js
shl
sbb
repz
jl
jg
cmp
insb
stos
mov
mov
icebp
inc
pop
shlb
ljmp
adc
jp
std
mov
jg
add
mov
mov
mov
adcl
das
aad
fdivrs
xchg
int3
jecxz
iret
decl
and
push
mov
rclb
push
lods
mov
mov
in
pop
sbb
jno
xorl
dec
repz
sub
adc
das
mov
sbb
add
sti
pop
sbb
add
bound
fwait
mov
mov
repnz
sub
int3
mov
and
imul
mov
and
fwait
mov
mov
mov
mov
cmp
and
ja
adc
rclb
mov
sbb
test
jmp
ja
test
std
mov
push
jae
sbb
scas
pop
jg
push
in
jg
imul
sub
out
out
int3
lea
inc
test
shlb
mov
mov
mov
push
inc
pop
xchg
sub
test
sbb
mov
push
adc
and
push
jecxz
mov
mov
popa
stos
sahf
call
test
add
leave
mov
in
lahf
test
cmpsb
sbb
xor
notb
jle
hlt
js
stos
mov
cmp
mov
and
mov
mov
fmuls
imul
adc
scas
fdivs
aad
mov
mov
das
push
pop
clc
imul
sub
fxtract
adc
sbbb
xchg
jp
fs
cmp
push
test
cmp
push
ret
jmp
xchg
pop
mov
stc
jmp
xor
xor
sub
subb
or
fcoms
cld
xorl
std
lcall
popa
inc
sbb
sbb
jg
ret
jno
pushf
pop
es
mov
and
mov
or
pop
xchg
mov
and
push
push
call
ret
xchg
push
mov
dec
sbb
mov
mov
rcll
ret
popa
fisttpl
std
bound
push
stos
pop
sub
stos
lahf
std
and
mov
fistpl
adc
in
jbe
fistps
and
aad
push
jecxz
inc
xchg
aad
in
mov
jnp
shl
incb
rcl
xchg
js
xchg
add
xchg
cmc
jne
movsb
mulps
stos
pop
push
adc
xchg
mov
or
mov
rcrl
cli
sarl
adc
sbb
test
pop
js
sbb
lret
sbb
lds
push
in
mov
scas
fildl
or
ret
cli
in
push
scas
in
jnp
insl
popf
adc
jp
popa
or
adc
push
add
ss
roll
inc
dec
push
std
repnz
stos
mov
bound
call
jp
cmp
pop
xchg
jmp
pop
cmp
lcall
dec
pushf
adc
fistpl
add
xchg
mov
lock
and
xchg
push
push
or
adc
cltd
fnstcw
jne
add
jle
pop
pop
xchg
push
sub
mov
popa
mov
cmp
ljmp
dec
jl
inc
cmc
loopne
loopne
in
mov
daa
pop
push
sub
mov
mov
gs
testl
cmp
sbb
xchg
addr16
add
jp
mov
adcl
imul
popa
inc
add
ret
arpl
jecxz
cld
fdivl
mov
roll
mov
push
sahf
push
mov
push
mov
imulb
fcoml
mov
sbb
add
mov
imul
cltd
cmpl
stc
movsl
or
les
movsl
pop
and
jg
je
mov
mov
mov
add
pushf
imul
stc
jb
shll
je
and
lret
in
pop
mov
jne
cmp
mov
inc
cmp
sbb
addb
mov
sub
jmp
fcoms
mov
movsl
mov
test
sbb
mov
aas
and
fimull
sbb
stos
testb
jl
bound
ja
and
leave
out
inc
xor
enter
adc
icebp
std
push
cltd
jne
mov
stos
ret
subl
scas
and
adc
inc
sbb
mov
nop
pusha
sbb
cmp
adc
mov
mov
push
adc
mov
lret
push
xor
inc
xchg
mov
xor
adc
adc
mov
loop
push
das
cltd
mov
add
test
add
jmp
repz
out
repz
mov
cmpsl
cs
and
xor
pop
aad
nop
fistl
rolb
flds
mov
nop
scas
lret
cli
adc
mov
and
sbb
bswap
in
xchg
rorb
ret
push
inc
sahf
aaa
sub
push
jmp
push
or
mov
push
sti
adc
cwtl
std
xchg
jno
adc
mov
imul
jnp
jmp
outsb
sbb
jns
ja
and
sbb
ds
xchg
jmp
mov
dec
add
xlat
in
push
mov
push
rolb
cltd
cmp
das
lods
in
stc
mov
orb
sbb
test
adc
nop
mov
hlt
xchg
rcrl
sarl
sahf
xchg
fdivrp
pop
xchg
test
test
add
sub
popa
lods
pop
jmp
adc
imul
dec
jp
fdivp
sbb
adc
xchg
pop
jg
mov
test
pushf
cmp
adc
inc
jmp
push
test
out
aad
push
addr16
sub
hlt
mov
cmc
xor
xchg
aam
in
test
and
sbb
pop
loope
xor
sub
clc
repz
cmp
outsl
pusha
enter
dec
imul
xlat
dec
int3
cli
add
sub
mov
xor
mov
es
lret
stos
jne
pusha
pop
sbb
int
aaa
fxch
int
push
ficoms
dec
dec
cld
frstor
mov
aaa
sub
movsb
cmpsl
inc
lods
mov
add
lds
pusha
lds
or
or
es
cmpsl
movsl
icebp
mov
pop
adc
shll
jl
shlb
jl
and
push
pop
jle
imul
divb
fstl
pop
inc
jle
aaa
push
roll
add
sti
jecxz
js
cld
sbb
mov
test
fst
jecxz
sbb
ret
rcl
and
orl
imul
sbb
rcpps
mov
leave
lret
and
jp
sahf
mov
mov
addr16
iret
and
ja
fistpll
stos
repnz
jnp
stos
pushf
sbb
push
ret
and
jle
or
mov
jae
add
mov
and
push
mov
lret
mov
aaa
fstl
aaa
pop
adc
mov
sub
negb
adcb
lock
adc
fcomi
cmc
mov
fbstp
and
mov
dec
add
jmp
dec
adc
xchg
xorb
dec
loope
out
int
insl
nop
jo
sbb
scas
sahf
arpl
js
mov
repz
mov
fmull
shll
jne
ss
dec
in
inc
pop
xchg
push
cmpsl
jg
cwtl
xchg
or
sarw
and
cmp
lahf
push
js
xchg
scas
fisttpll
fidivs
pop
out
out
std
je
ja
movsl
shrb
popf
fadd
xchg
mov
cwtl
leave
enter
cwtl
inc
stc
inc
and
lock
mov
mov
dec
adc
out
pop
rcrb
sbb
std
adc
xchg
stc
data16
lret
adc
addb
mov
mov
mov
cmp
pushf
pop
lock
adc
loopne
testl
jl
ficompl
mov
and
or
add
cmpsl
add
push
divb
jae
push
jbe
xor
cmp
es
add
push
cld
mov
pop
sbb
dec
inc
adc
inc
cmpsb
insl
mov
sbbl
inc
xchg
pop
jne
shrb
cli
jp
push
add
xchg
push
ds
cli
cmp
pushf
cmpsl
mov
pop
shrb
stc
or
bound
std
js
jmp
jo
incl
dec
in
xlat
inc
adc
mov
in
add
cwtl
or
imul
in
test
stos
cmpsb
jge
stos
imul
and
mov
pop
lahf
cwtl
dec
int
movsb
adc
arpl
int
lds
in
adc
dec
imul
sub
adc
mov
sbb
testl
xor
inc
mov
jle
sti
sbb
pop
outsb
xchg
pop
addr16
testl
push
test
je
lahf
addr16
push
push
cwtl
push
xchg
cmp
pop
xor
lods
and
imul
mov
add
out
push
cmp
imull
or
outsb
pop
movsl
jb
popa
je
adc
cli
sub
xchg
je
jecxz
stos
cs
adc
std
icebp
ja
cwtl
pop
arpl
loop
sbb
ret
lea
pusha
pop
fbld
mov
sbb
in
and
ss
cwtl
or
icebp
add
fsts
fcomps
loop
xchg
xlat
sub
ret
jge
test
sub
leave
daa
sbb
shlb
pusha
lret
lds
stos
rcll
cmpsb
jbe
lret
sub
jge
mov
mov
pushf
and
sarl
pop
cld
sub
pop
push
push
push
jmp
sbb
pusha
bnd
loopne
push
sbb
or
mov
cmp
je
sub
loope
scas
adc
daa
mov
in
daa
mov
add
fnstsw
xchg
adc
jae
or
adc
aam
rcll
pushf
je
pop
mov
das
mov
stc
sahf
pop
sub
xchg
and
xchg
in
pop
dec
js
mov
adc
and
adc
sbb
jecxz
imul
cmp
push
sbb
xor
pop
mov
mov
xchg
sbbb
loope
xor
mov
cmp
adc
inc
and
xchg
xchg
or
fxch
mov
dec
xchg
adc
mov
sahf
and
adc
call
adc
and
sbb
mov
inc
mov
pushf
mov
inc
jle
adc
mov
pop
pop
stos
data16
in
test
mov
xchg
xchg
sub
xchg
pop
test
out
and
popa
sbb
leave
mov
fbstp
pop
or
js
leave
out
lods
rcrb
dec
inc
inc
test
sbb
popf
fldl
aaa
insl
shrb
inc
pop
add
pop
jbe
pop
dec
lcall
sbb
xchg
pop
mov
pop
jo
jge
cmp
sbb
arpl
mov
adc
push
arpl
xor
cs
or
popa
xchg
mov
sbb
xchg
sbb
jnp
popf
add
and
xchg
dec
mov
sbb
leave
push
fcoml
and
scas
mov
cli
xor
movsb
enter
clc
das
loope
mov
testb
inc
fistl
test
mov
xchg
in
sub
mov
cs
pop
jle
fmuls
xchg
mov
movb
fdivp
popf
mov
pop
sar
lahf
add
aad
sub
mov
pop
cli
sbb
int3
cltd
dec
icebp
mov
bound
mov
fnstsw
movsb
pop
jb
xor
out
sbb
mov
test
in
pop
scas
popa
insb
out
push
std
mov
icebp
sub
add
sti
cli
xchg
xchg
push
and
sub
add
rorb
test
or
pop
or
cli
adc
cmp
sub
imul
xchg
push
push
aaa
adc
inc
sub
jl
ret
stc
sbb
sbb
add
push
inc
mov
test
xchg
scas
xchg
out
cmp
ficoms
sbb
mov
fsubs
je
inc
mov
imul
add
dec
dec
lods
imul
cs
xor
mov
sub
mov
push
mov
cltd
dec
leave
mov
or
pusha
mov
add
jmp
outsl
in
sbb
push
dec
push
mov
mov
insl
pop
rcrb
ljmp
adc
and
jae
scas
or
sub
push
sbb
punpcklbw
pop
out
add
adc
jecxz
push
mov
daa
pusha
ret
jne
and
sbb
call
pop
mov
ljmp
or
cld
push
addr16
xor
roll
popf
outsl
sbb
mov
inc
push
sbb
jl
and
dec
mov
rep
std
gs
inc
lret
enter
push
adc
loop
xor
int
push
cmp
or
xchg
jne
je
mov
sbb
add
cwtl
leave
sub
add
jae
mov
dec
jmp
iret
stc
jae
xchg
fcompl
or
sbb
xchg
rolb
pop
sbb
mov
mov
loop
xchg
sbb
movsb
outsl
int
cmc
or
xchg
aam
jb
jo
jecxz
mov
adc
cmp
push
jnp
pop
xor
jns
dec
movsl
icebp
xchg
xchg
lahf
or
dec
jne
das
fstl
and
nop
daa
and
add
lret
js
clc
sbbb
outsb
push
lods
fcomps
in
push
push
je
xchg
cmp
sub
sub
addb
sbb
bound
in
pop
stos
lods
aam
aam
push
incl
push
sub
push
inc
or
jmp
mov
clc
jle
addb
jbe
enter
and
jo
insb
shlb
into
mov
sbb
repnz
and
jge
aas
cmp
xchg
xchg
jge
sbbb
es
in
bound
and
ja
daa
loope
lahf
mov
andb
fcoms
movsb
js
ljmp
adc
arpl
adc
pop
popa
or
adc
std
mov
cwtl
push
gs
leave
clc
rolb
test
or
scas
lea
or
stos
and
ss
mov
call
insw
test
mov
jg
cmc
xchg
push
mov
arpl
popf
aam
cmp
add
das
pop
mov
arpl
sbb
lret
adc
xchg
push
or
sub
in
inc
push
xchg
stc
jns
cmp
test
add
xchg
es
xchg
std
and
push
xor
adc
les
cmpsl
push
std
cmpsl
pop
je
xor
sahf
mov
push
arpl
cmp
fimull
jbe
inc
rclb
add
call
pop
rcrl
sub
lcall
mov
add
movsb
ljmp
imul
inc
pushf
xor
jns
pusha
inc
push
ljmp
test
sbb
out
jo
popa
in
cmp
jmp
clc
popa
fisubl
sbb
mov
push
sbbl
sahf
sbb
ds
mov
xorb
and
cwtl
imul
lret
cli
lcall
add
and
test
in
inc
icebp
xchg
repnz
js
and
ret
sti
sahf
mov
aaa
hlt
lcall
push
jp
xchg
ss
cmp
movsb
ja
pop
push
repnz
push
je
pushf
push
jecxz
rolb
fwait
aaa
or
in
jle
sbb
sti
mov
call
cltd
cmp
imul
testl
out
pop
add
mov
adc
adc
xor
andb
jb
in
popf
loope
rcrb
icebp
mov
sbb
in
imul
cmp
hlt
shl
sbb
outsb
adc
lahf
stos
fidivl
stos
subb
xchg
pop
fadd
mov
movsl
sbb
std
jmp
dec
adc
test
shrl
cmc
popa
cmp
loop
xchg
mov
sbb
mov
and
outsb
push
popa
loopne
mov
adc
fcmovnu
pushf
inc
fstpl
xchg
sbb
jecxz
icebp
mov
adc
and
out
pop
fwait
pop
dec
jns
xchg
cmc
subl
mov
and
int
xor
or
jbe
cmpsb
fs
imul
hlt
jns
sbb
inc
cmp
repnz
jo
or
addl
mov
jge
vmovaps
jl
xchg
out
cld
popa
inc
arpl
loope
cmp
dec
push
fisttpll
mov
rcr
and
jmp
fdivs
push
fcompl
loop
push
adc
xor
xchg
clc
mov
adc
pushf
or
and
testb
stos
sbb
popf
call
cmp
jp
stc
sbb
test
imulb
movsb
das
add
std
cmp
mov
mov
sub
mov
aad
mov
pop
mov
pop
repz
in
mov
ss
mov
dec
mov
iret
mov
push
mov
nop
lea
loope
or
cwtl
mov
pushf
fwait
js
bound
sti
in
mov
sub
inc
mov
popf
fstps
int
fsubl
add
mulb
and
pop
fiaddl
mov
xchg
loopne
in
push
sub
mov
loope
or
inc
ja
pop
jnp
bound
pop
push
add
imul
jne
sub
push
lea
pop
mov
jecxz
out
and
inc
xchg
nop
lods
sbb
jp
inc
jae
loope
shlb
sub
sbb
xor
fwait
cmp
call
lahf
sub
or
loope
insl
jcxz
std
dec
dec
cld
lea
mov
jp
pop
leave
int3
sbb
fmull
scas
push
mov
fnstcw
dec
leave
mov
inc
sub
iret
packsswb
jl
stc
jp
or
out
iret
mov
cld
int
lock
stos
adc
sbb
loope
jecxz
repnz
pusha
and
or
cld
loopne
add
pop
xlat
clc
cmp
mov
popf
push
push
shr
and
push
std
test
enter
mov
adc
and
sar
sbb
divb
jl
xor
lcall
sbbb
stos
out
add
mov
mov
lgs
cltd
lock
icebp
inc
cmp
pop
scas
fdivrp
out
add
sub
jne
nop
lock
push
jl
push
jle
iret
insb
loop
pop
loopne
in
rorb
dec
movsb
xchg
pop
test
mov
mov
orb
movsb
xlat
pop
ljmp
lock
ds
pop
add
sbb
or
inc
jns
sub
fdivs
test
fmuls
cmp
add
call
pop
pop
out
and
mov
nop
sub
jnp
sbb
lods
dec
pop
outsl
inc
xlat
mov
sub
sti
pop
mov
ss
sbb
or
sub
int
adc
arpl
jp
cmp
mov
push
adc
sbb
repz
cli
sbb
add
jns
xchg
and
hlt
adcl
mov
daa
popf
lds
push
and
jne
lahf
mov
insl
imul
rep
out
lahf
and
mov
insb
loopne
sub
push
ja
sarb
sbbb
lods
add
fisubrl
inc
jle
and
js
incb
mov
dec
adc
cmp
daa
mov
das
add
cld
fcomi
fnclex
mov
lcall
data16
push
dec
ftst
sbb
sbb
xchg
pop
sub
adc
sarl
test
imul
movb
jge
test
andl
jecxz
fists
mov
xchg
nop
mov
or
sbb
stos
adc
test
iret
or
sbb
push
sbb
outsl
lcall
sub
or
popf
mov
shlb
mov
lods
dec
pop
int3
outsl
lods
add
or
mov
imul
and
sbb
jmp
push
popa
xchg
imul
jp
mov
test
xchg
leave
mov
mov
lret
mov
jne
shrl
jns
cli
movsl
sub
cmpl
cs
std
inc
mov
xchg
xchg
and
fstl
jmp
add
pop
in
sbb
cltd
mov
cltd
dec
push
xchg
and
ljmp
insb
or
mov
sbb
or
in
jo
add
jmp
mov
jne
pushf
dec
xchg
push
mov
mov
cwtl
sub
xor
stos
fs
mov
inc
in
xlat
mull
xchg
test
pop
cltd
cs
xchg
lcall
add
and
jp
addr16
out
imul
mov
dec
push
add
pop
add
mov
adc
mov
sbb
imul
aam
les
ja
cs
lcall
and
jmp
setle
aam
dec
addl
jns
adc
aaa
xchg
aaa
xchg
sbb
fwait
rcrb
pop
fsubs
and
rcll
cltd
sbb
fdivp
jle
mov
mov
clc
ficompl
push
fstpl
syscall
ficompl
cvtps2pi
sbb
jp
push
aam
fistpl
jl
xorl
xchg
loopne
in
sbb
pop
jns
push
shlb
xchg
adc
lret
clc
mov
roll
push
jg
jnp
push
gs
xor
sbb
mov
cmp
mov
jle
fidivrl
fcoml
add
orl
jmp
test
mov
sbbb
mov
cmp
inc
dec
xchg
adc
lods
inc
add
and
add
mov
call
jne
arpl
lret
nop
data16
out
or
and
add
xor
stc
rcr
std
clc
cld
fdivr
add
push
lahf
sbb
addr16
stc
xchg
repnz
or
cmp
sub
inc
std
or
out
sub
inc
nop
jp
push
ret
lcall
lds
dec
push
xchg
mov
sahf
stos
ficoms
sahf
sub
lods
jmp
push
or
jns
cmc
mov
cwtl
fcoms
clc
xchg
dec
inc
or
and
mov
mov
arpl
cltd
and
fisubs
adc
push
push
rcrb
popf
ljmp
ret
adc
popf
pop
pop
addr16
xchg
add
fldt
std
jbe
lock
insl
push
cmpsb
out
and
sub
push
mov
xchg
fnstsw
andb
jg
and
loope
sub
xchg
jne
jmp
stc
jmp
jl
mov
into
dec
fnstsw
xchg
fs
ret
mov
int3
pop
cmpsl
lcall
test
fsubr
mov
ja
xor
pop
in
movsl
adc
mov
and
push
dec
rorb
cld
and
lea
and
out
lcall
xchg
sbb
adc
push
sbb
cmpsl
test
sub
nop
lret
in
sub
mov
ficompl
test
or
push
loop
fdivp
test
mov
test
mov
fstl
mov
sbb
cwtl
cmp
and
sbbb
xchg
std
mov
sbb
and
push
cli
loop
sbb
or
data16
test
push
mov
lock
add
imul
push
fwait
push
and
jp
push
idivb
in
mov
lock
mov
cmc
pop
sbb
loopne
lods
test
adc
fdiv
sbb
test
scas
addl
fsubrs
mov
add
add
outsb
rorl
sbb
out
outsb
adc
movsl
inc
test
lahf
lds
rcrl
loope
push
aaa
xchg
pop
xor
jl
add
fs
sbb
imul
pop
mov
sbb
clc
mov
test
pop
push
pop
movsb
shlb
bound
aad
mov
and
push
cmpsl
rorb
and
lods
push
mov
mov
mov
push
lock
int3
aam
enter
dec
stc
lret
ljmp
cwtl
aam
sbb
imul
adc
pop
sbb
mov
addr16
dec
xchg
push
divl
sub
lds
pop
addb
push
mov
mov
xchg
shrl
jp
mov
add
cmp
cltd
mov
cmp
sbb
and
sub
mov
test
mov
popf
sbb
sbb
xchg
push
fistpll
and
stos
mov
jecxz
addr16
cld
mov
cmp
lock
jbe
stos
call
stos
push
call
rol
fildll
call
sbb
xchg
fadds
push
mov
int3
dec
jb
or
and
xchg
ret
nop
dec
loop
sub
cmp
popf
in
sbb
neg
xor
in
test
scas
sbb
dec
adc
decb
add
push
sub
sarb
jge
pop
or
out
adc
inc
daa
push
jge
inc
push
cli
lods
jnp
cli
jae
and
sbb
mov
imul
sbb
add
pop
inc
rcrl
add
push
jbe
dec
fcompl
and
sbb
push
adc
adc
icebp
add
mov
fsubrp
das
pop
jbe
push
mov
mov
imul
adc
xor
imul
jno
jns
fs
lahf
icebp
lods
daa
add
mov
pushf
mov
jp
inc
sahf
jecxz
shlb
sbb
addr16
inc
mov
xchg
mov
push
push
or
xchg
fwait
jns
dec
pop
mov
and
insl
pop
stos
fildl
pop
pop
mov
mov
cmpsb
repz
adc
xchg
leave
push
cmp
mulb
arpl
pop
push
repnz
loop
pop
xchg
adc
push
dec
je
mov
pop
and
xchg
and
aaa
mov
arpl
das
sbb
adc
inc
sbb
clc
push
xor
daa
jl
into
stc
push
xchg
pop
loop
shll
fcompp
dec
sti
xlat
andl
add
jmp
and
fistpll
cltd
scas
and
mov
mov
and
lods
mov
out
scas
shr
sbb
xchg
mov
incb
in
push
popf
push
adc
jno
pusha
movsb
out
data16
adc
jae
idivb
pop
fistpll
adc
data16
lret
jbe
xchg
push
arpl
cmp
iret
adc
fcompl
add
popa
repnz
in
outsb
push
pop
add
pop
push
cmpsb
add
mov
js
and
xchg
adc
repnz
xchg
push
xchg
fwait
and
push
ljmp
adc
cmp
jecxz
adc
pop
fucomip
and
shrb
fcmovu
mov
pop
mov
es
es
jge
lcall
test
jge
repz
test
or
dec
imul
cmp
and
sbb
mov
push
jne
sbb
in
xchg
pop
loop
mov
fstl
push
icebp
xchg
xchg
or
push
dec
loope
push
loop
jo
rorl
inc
fwait
mov
and
arpl
pusha
mov
ficoml
fcomip
jmp
jns
clc
addb
pop
lea
sbb
sbbl
push
mov
sbb
pushf
adc
or
add
adc
push
push
lds
mov
sub
mov
loope
cmp
and
or
jecxz
mov
out
fcomps
inc
sub
add
fdivrl
lea
mov
sarl
jne
add
and
add
ficoms
or
daa
pop
push
jne
cmp
sub
and
mov
jl
mov
pop
lcall
fwait
in
fisubrs
clc
jae
aad
fnstcw
std
rcl
and
jl
add
aam
stos
dec
xchg
mov
orl
icebp
jge
repz
inc
insl
and
mov
mov
shll
and
lcall
xor
fmull
mov
lods
adc
std
icebp
push
ja
lock
fdivs
mov
or
ror
xchg
repz
jmp
adc
enter
fwait
sbb
and
int3
mov
ret
and
sbb
mov
push
push
sbb
mov
sbb
les
add
fldl
in
into
inc
pop
add
data16
adc
push
sub
add
xlat
and
and
mov
aad
lea
enter
adc
jp
pusha
adc
subb
imul
shr
lock
sbb
add
repz
xchg
and
and
push
cld
add
inc
mov
std
das
mov
push
sbb
lret
jns
ljmp
jnp
mov
repz
movsb
enter
int
add
push
repnz
data16
imul
fcomps
in
popf
and
icebp
std
push
xor
cmp
ljmp
popa
sarb
mov
inc
test
call
jge
data16
je
xchg
jge
cmp
adc
roll
test
mov
adc
mov
cs
inc
in
fidivrs
or
popf
cltd
imul
cmpsb
xlat
push
cwtl
adc
lahf
cwtl
sub
mov
xchg
pusha
scas
ja
inc
jmp
in
or
mov
addl
sbb
mov
push
js
popf
icebp
mov
lds
add
adc
cltd
std
sbb
loop
test
dec
push
mov
ret
inc
cwtl
icebp
stc
xchg
xchg
xor
loopne
imul
je
data16
sbb
lods
jge
lahf
in
xor
and
sbb
addr16
jp
mov
js
popa
sbb
pushf
add
stos
pop
and
fldt
cmpsl
ret
jnp
filds
je
arpl
mov
push
leave
jge
std
aad
loop
bound
in
or
mov
int3
add
sub
adc
movsb
and
movsb
xor
sub
pop
call
mov
jp
out
repnz
negb
sahf
lret
test
mov
mov
push
enter
xchg
xchg
fstpl
mov
lcall
mov
scas
sahf
aam
xchg
xchg
mov
int
cmp
push
cmp
adc
clc
jecxz
xor
inc
pop
and
enter
lea
in
stos
fmul
mov
xor
mov
lcall
sbb
dec
call
shufps
repnz
movsl
mov
lret
mov
rcl
jae
and
pushf
popf
lcall
test
cmp
dec
in
or
sahf
add
loop
data16
push
out
and
inc
and
cli
mov
test
dec
mov
add
mov
insl
jmp
push
sbb
sbb
mov
xchg
loope
lahf
fstpl
outsl
idivb
in
sbb
cwtl
xchg
repnz
rcrb
lahf
test
cltd
idiv
sbb
jo
ss
popf
cmp
ret
push
mov
hlt
adc
inc
adc
and
fistpll
loope
mov
cmp
pop
lock
mov
pop
adc
aaa
cmp
inc
or
hlt
inc
or
ja
jge
cmpl
pop
mov
jl
pop
cmp
pop
jnp
adc
sbb
jb
sbb
jp
enter
js
dec
jbe
mov
push
out
jmp
adc
mov
push
lods
mov
adc
mov
adc
ja
movb
xor
mov
fsqrt
mov
jmp
lock
in
popa
out
jmp
push
ret
dec
push
icebp
dec
adc
stos
iret
shlb
mov
and
inc
jecxz
jg
imul
std
mov
jecxz
jg
pop
enter
lret
arpl
nopl
adc
lret
sbb
or
stc
pop
clc
in
inc
aam
pop
cmp
aad
loopne
in
iret
sti
std
adc
and
data16
add
inc
mov
stos
xchg
clc
jecxz
aas
popf
cld
sbb
jecxz
push
into
shlb
in
and
gs
and
fbstp
and
dec
and
pusha
int
aaa
fneni(8087
sbb
popf
insl
test
pop
ror
jle
pushf
jb
push
std
loop
or
add
xchg
adc
add
push
ret
fwait
adc
popa
add
and
add
mov
and
fstl
adc
cmp
push
cmpsb
stos
pop
sarb
icebp
in
mov
out
mov
sbb
and
jmp
rcll
mov
push
cmp
icebp
stc
loope
ret
and
fistl
mov
sbb
aad
or
and
or
inc
or
cwtl
dec
push
cli
xchg
xor
add
and
and
add
push
pop
dec
shl
and
add
and
sarl
jae,pt
mov
fnsave
test
push
inc
or
push
incl
mov
xchg
mov
and
lock
mov
pop
lods
out
xchg
lret
bswap
or
and
fcmovnb
fisubrs
mov
repz
pop
sbb
xor
inc
or
popf
imul
scas
or
or
mov
push
add
push
pushl
sub
push
adc
lret
test
inc
imul
cltd
mov
sub
pop
addr16
push
and
out
inc
shl
ja
in
adc
jne
pop
rclb
sti
loopne
add
ja
push
addr16
pop
mov
rcrl
push
hlt
icebp
jno
inc
sub
mov
add
or
das
or
sbb
sbb
fbld
jg
adc
pushf
inc
mov
mov
sub
jne
std
ret
loop
aad
xor
mov
sub
mov
and
test
xor
jnp
push
sub
and
mov
jnp
cmp
jbe
adcb
cmp
test
push
pop
ret
jb
inc
and
mov
divb
inc
mov
jne
sbb
int3
mov
or
lock
sahf
dec
movsb
pop
sbb
pop
test
pop
adc
ljmp
xchg
cmpsl
sarl
push
ja
or
sbb
inc
fstpt
push
sub
nop
push
jns
push
jp
xchg
sbb
clc
sbb
sbb
jnp
es
or
mov
ret
sub
and
push
push
pusha
mov
cld
jmp
pop
clc
jnp
mov
sub
sbb
mov
insb
mov
ret
xor
sbb
jmp
pop
ror
ss
jg
xor
push
push
xchg
cmpsl
test
mov
push
adc
add
cmp
mov
test
call
mov
or
clc
ja
outsb
mov
mov
push
jp
xor
out
aam
add
imul
or
adc
cwtl
mov
inc
pop
mov
push
add
jnp
add
pop
jle
and
pusha
sbb
repnz
fldl
push
sub
fisubrl
mov
sbb
inc
jnp
ret
stos
cmp
xchg
pop
or
push
push
mov
push
imul
arpl
pop
sub
pop
lock
add
push
push
orb
fwait
js
into
and
and
mov
shr
lret
incl
fldl
stc
mov
es
fistpl
das
mov
insb
clc
shl
popf
and
das
mov
sbb
pop
fstp
mov
ljmp
fadds
mov
fiadds
xor
mov
push
fcmovnb
adc
jecxz
jle
or
and
mov
cmp
aaa
cmp
ret
push
enter
and
add
cmp
add
mov
push
inc
cmpsb
pop
adc
add
nop
pop
stc
push
in
andb
xchg
jg
mov
mov
dec
fwait
roll
ja
out
mov
cmc
cmpsl
sbb
in
mov
lcall
push
xchg
push
or
mov
mov
ror
insb
adc
jnp
xchg
sub
add
pushf
cltd
mov
rcrl
aas
icebp
cmp
test
in
jmp
movsb
jp
je
out
lcall
pusha
ret
push
push
jp
decl
fdiv
je
sbb
pusha
out
sub
or
je
mov
mov
fwait
pop
adc
shlb
add
ljmp
jno
stos
and
je
mov
cmc
mul
cmpsb
push
sub
cmp
xchg
mov
mov
xor
push
sbb
xor
in
or
and
ja
cmp
sarl
sbb
adcb
mov
add
jg
adc
popf
jp
sub
inc
jmp
inc
add
inc
adc
pop
js
aas
pop
xchg
aaa
fdivrs
fisttps
adc
sbb
ret
stc
mov
and
testb
sbb
jl
andl
dec
in
jmp
std
push
test
push
sti
sbb
mov
add
test
cltd
or
add
add
inc
insl
and
pminsw
movsb
mov
cs
bnd
lea
sbb
rcl
in
cmp
adc
xor
adc
daa
lea
das
pop
imul
lret
in
mov
adc
insl
push
add
mov
add
lock
mov
addb
dec
call
adc
jb
paddusb
pop
mov
stos
decl
lcall
ljmp
mov
push
pop
lods
cmpsl
mov
push
sbbb
sub
jecxz
push
fdivl
fstl
dec
leave
cli
add
add
add
iret
xor
js
pop
add
cmp
lcall
or
inc
lods
adc
push
std
test
add
add
add
push
cld
ljmp
lds
cld
test
js
mov
jp
out
add
popa
adc
jp
arpl
bound
stos
lahf
mov
xchg
sti
inc
ficomps
cld
add
xchg
daa
or
in
sbbl
xlat
es
aad
cmp
repz
push
data16
std
adc
clc
inc
jecxz
sub
insb
lret
mov
lcall
push
push
xchg
jae
and
popa
mov
sbb
lcall
inc
mov
add
and
popa
int
inc
or
sbb
cmpb
push
pop
sbb
push
pop
mov
call
and
in
push
stc
mov
outsl
mov
cmovne
add
jmp
sub
sbb
xchg
lds
inc
arpl
push
adc
rclb
add
xchg
or
adc
or
push
mov
std
add
icebp
stos
jnp
add
mov
jmp
sar
push
or
out
xchg
push
adc
mov
paddw
cld
jb
in
sbb
adc
add
insb
dec
push
pop
sub
clc
pop
mov
push
sbb
push
mov
repnz
mov
lds
clc
mov
outsb
push
xor
jnp
push
xor
jmp
jnp
inc
mov
adc
std
mov
pop
or
mov
xor
cmpsl
rcrb
add
sub
ja
push
or
cwtl
push
ja
push
push
in
jnp
icebp
jns
js
enter
clc
aas
adc
out
or
ret
fucom
test
xorb
pop
pushf
or
push
test
push
sbb
push
pop
repz
xchg
clc
and
scas
and
sbb
cmp
aad
scas
sbb
cltd
hlt
sbb
mov
cld
sbb
lods
dec
pusha
adc
push
rcll
inc
dec
aad
pusha
mov
push
rolb
push
rcr
leave
dec
adc
and
push
mov
or
xchg
cmp
pop
xchg
jae,pn
pop
and
pop
add
arpl
sbb
sahf
bound
xorb
jg
ret
imul
mov
jecxz
mov
mov
push
dec
xchg
and
push
sub
jns
test
adc
push
rcll
and
shlb
and
clc
push
icebp
sub
popf
cmp
lcall
std
clc
cmc
in
adc
add
cmp
sarb
dec
mov
add
adc
sbbb
ljmp
in
cltd
arpl
adc
cmp
push
in
sbb
ljmp
mov
leave
mov
push
mov
popa
fmuls
negl
fmuls
and
or
or
push
cmc
push
dec
rcrb
cmp
hlt
in
add
ret
jmp
or
popf
adcl
add
dec
cmc
sub
int
jl
mov
inc
push
jmp
mov
or
jecxz
and
jnp
and
xchg
cli
push
test
mov
or
in
aad
lds
push
enter
xchg
mov
add
mov
jg
inc
xor
pushf
aaa
pop
sti
adc
pop
inc
mov
xchg
mov
adc
jne
int
in
cmpl
adc
addb
adc
xchg
pop
xchg
add
or
imul
mov
jg
lock
arpl
cli
arpl
out
into
mov
jecxz
push
jns
pop
out
cmpsb
and
cli
sub
rcll
in
cli
cmpb
and
mov
adc
or
pop
daa
jecxz
ja
repz
rcll
adc
mov
add
js
xchg
pushl
lock
in
ljmp
neg
or
in
sbb
outsl
and
pushf
arpl
in
and
jge
adc
mov
test
ret
ret
jmp
inc
push
jmp
lock
arpl
jbe
inc
aad
cmp
push
jmp
push
flds
push
push
cmpsl
push
sub
sbb
andl
das
mov
in
in
rorl
shlb
sbb
dec
fimull
add
sbb
pop
mov
ja
push
push
jbe
repnz
subb
adc
mov
xchg
test
xor
and
cli
cmp
das
adc
adc
adc
divb
mov
inc
or
xor
dec
push
insl
sbb
adc
and
jp
push
hlt
rclb
fnstenv
testb
mov
sbb
adc
stc
pop
mov
push
fidivl
and
sbb
push
stos
loopne
cli
jne
repz
mov
aam
jg
int
push
jl
jae
sbb
push
imul
in
sub
pop
mov
mov
mov
lea
pop
pop
test
outsl
or
test
inc
sbbb
inc
and
lds
leave
les
mov
mov
jecxz
loopne
aas
ljmp
je
push
or
enter
popl
sub
jmp
fsubl
push
xchg
sbb
addr16
adc
insl
mov
or
add
stc
or
mov
sbb
mov
mov
repz
sub
pop
ret
push
pop
xor
jmp
adc
or
arpl
xchg
dec
mov
mov
shl
mov
cld
push
aad
ds
and
fcompl
dec
aas
sbb
dec
xchg
ret
gs
pushf
js
mov
adc
sbb
iret
dec
lret
xchg
pop
mov
dec
adc
rcll
and
cli
xor
bound
leave
xchg
adc
nop
push
or
xchg
ds
call
add
pop
sbb
nop
sahf
lahf
mov
xchg
pop
lods
lds
aad
fcoms
adc
mov
es
arpl
xchg
adc
roll
or
sub
add
das
insl
mov
cmpb
mov
xchg
jnp
loopne
mov
or
sbb
in
es
repnz
mov
and
fisttps
movsl
sub
cmp
mov
fsts
mov
adc
mov
push
imul
rcrb
mov
ret
and
or
neg
xchg
adc
push
into
add
push
pop
adc
popf
loopne
dec
mov
adcb
jl
or
adc
push
in
stos
cmp
xor
or
out
dec
iret
mov
lret
cmp
inc
movsb
insl
in
std
push
xchg
iret
and
mov
xlat
xchg
inc
and
xor
xchg
push
dec
mov
mov
dec
lret
or
fisttpll
lahf
bound
sub
lds
inc
popf
push
cmp
cltd
push
jne
push
enter
push
js
jl
test
iret
dec
fstpl
lahf
rorb
xchg
test
mov
jae
sbb
push
fst
fnstsw
mov
mov
inc
or
add
and
shll
sahf
test
mov
sub
dec
add
mov
sbb
xchg
popa
jbe
mov
les
or
mov
mov
icebp
adc
notb
iret
add
push
lds
jae
inc
mov
mov
sub
or
dec
add
mov
orb
sub
insl
or
sbb
xor
out
xchg
in
iret
mov
cmp
lcall
mov
lea
rcll
hlt
int
insl
sub
pop
divb
aaa
xchg
adc
inc
xchg
mov
sub
push
mov
push
pop
js
jg
xchg
jne
mov
adc
testb
xchg
jge
leave
push
lds
jp
inc
mov
std
mov
add
or
ljmp
sahf
lock
push
call
cld
popf
loop
mov
shr
mov
add
testb
sbb
stc
xchg
xchg
scas
clc
adc
mov
push
inc
add
mov
rep
push
mov
scas
jg
lcall
sbb
adc
mov
repz
dec
ret
or
xchg
fdiv
mov
push
push
fcom
sub
cltd
or
sets
test
push
out
push
sub
cmp
and
pop
add
pushf
jecxz
pushf
or
inc
or
fnsave
into
inc
mov
imul
mov
cmp
sub
mov
imul
fnstenv
xchg
mov
imul
stc
adc
mov
cwtl
inc
adc
cmp
int
or
inc
add
xchg
imul
pop
mov
fldl
jmp
inc
cwtl
cli
es
roll
ja
push
xchg
mov
popf
pop
std
pop
cmp
push
inc
jmp
into
lea
in
cmpsb
jne
test
dec
jmp
lea
sbb
andb
stos
pop
or
fstpl
add
xchg
shll
mov
dec
or
mov
sbb
dec
negb
or
jmp
or
ds
bound
or
mov
pop
inc
and
or
xorl
jp
mov
add
cmpsl
out
pop
add
ds
stos
mov
or
sbb
inc
fnstsw
xor
or
add
pop
mov
and
aaa
mov
repz
jns
jle
loop
or
movsb
jl
loopne
cli
jp
add
push
jge
xchg
pop
pop
add
in
nop
jns
adc
xchg
cwtl
rcrb
mov
test
or
icebp
nopl
adc
add
les
inc
xor
and
xchg
jbe,pt
push
jecxz
movsb
sub
inc
sbb
loop
jae
mov
mov
cmp
add
cmp
push
pop
lods
pop
cli
sub
sbb
out
push
cmp
and
jnp
and
or
sbb
aad
fnstenv
or
and
xchg
sbb
into
arpl
and
or
and
sbb
inc
daa
cli
ss
xchg
loope
movl
pop
adc
or
push
rcll
arpl
mov
xchg
sbb
fcomi
adc
ljmp
adc
sahf
sbb
dec
pop
xor
lds
cs
fwait
inc
rcrb
sbb
clc
or
adc
test
xchg
cmpl
in
mov
cmp
inc
push
inc
mov
cmp
jecxz
adc
loop
fcompl
or
in
push
jnp
aam
adc
js
dec
rcll
and
xchg
lcall
js
sahf
cs
push
jo
and
leave
sbb
push
mov
loope
push
mov
jo
sub
mov
mov
ljmp
pop
test
push
sbb
in
repz
adc
sbb
pop
add
nop
pop
jl
std
sub
sub
scas
cmp
movb
push
clc
into
mov
add
jecxz
fnstsw
or
dec
cmpsb
mov
xor
mov
add
clc
fs
add
mov
xchg
orl
jo
push
sbb
adc
test
add
pop
sbb
pop
js
in
ret
mov
adc
push
mov
add
std
mov
lea
adc
mov
push
jge
lret
pop
test
aas
imul
jae
mov
pop
fimuls
push
pop
int
jecxz
arpl
xchg
sbb
xchg
xchg
in
es
mov
or
ja
inc
mov
pusha
test
pushf
int3
fsts
iret
shll
lods
sbb
jae
add
mov
lods
adc
cmp
adc
rcrl
add
test
out
and
inc
std
cmp
and
lods
test
clc
add
or
js
cmc
xor
mov
cmpsl
loopne
or
clc
std
pop
loopne
jns
stc
leave
ror
sbb
clc
pop
jnp
jecxz
xlat
insb
std
fdivr
sbb
lds
push
mov
call
jb
jmp
pop
mov
movsb
into
shll
cmpsb
push
insl
add
jns
fxch
cmp
fucomi
inc
add
pop
cmp
mov
int3
sti
lahf
push
repz
xchg
pop
cld
cmpsb
sti
sub
mov
sti
repnz
aad
fbstp
xchg
mov
mov
sub
cmp
out
insl
jmp
pushf
add
fsubl
xor
sbb
mov
arpl
test
loope
jae
dec
repz
mov
adc
push
adc
jecxz
std
flds
pop
sti
mov
pop
in
add
stos
scas
push
cli
icebp
mov
push
inc
in
add
iret
rclb
ret
in
xor
mov
adc
sbb
sub
mov
mov
dec
aam
clc
add
mov
popf
and
pop
pop
leave
pushl
sbb
shl
jg
sti
clc
jb
add
xchg
out
fcomip
aaa
cmp
adc
or
push
mov
js
popf
adc
push
scas
jns
sbb
jge
push
cmc
lea
pushf
fwait
icebp
mov
outsl
out
inc
loope
adc
xlat
enter
add
in
fnclex
add
rcl
adcl
std
pop
or
mov
add
jle
cmpsl
fs
fcoms
adc
mov
jecxz
sbb
adc
or
or
shll
leave
push
pusha
or
jg
fistps
ret
mov
scas
nop
mov
mov
filds
pop
add
and
push
in
stos
xchg
scas
pop
out
shl
lods
pop
push
jmp
pop
iret
outsl
xlat
add
add
loope
add
mov
int3
xchg
push
popf
or
pop
test
clc
push
popa
lret
das
iret
jo
jle
fstps
sahf
arpl
dec
mov
or
aaa
push
add
lret
fyl2xp1
mov
popa
ret
pop
push
inc
test
adcl
outsl
ret
arpl
add
int3
lcall
lods
jecxz
and
cltd
test
js
popf
pop
out
ret
mov
and
jmp
lea
adc
loop
jl
mov
jnp
xchg
aam
mov
lahf
cltd
mov
mov
cltd
adc
ret
loope
add
or
sub
clc
sbb
pop
push
and
cli
mov
addb
jns
or
push
loopne
mov
lcall
push
lahf
jg
stc
subb
push
lock
leave
or
inc
xchg
sub
enter
mov
xor
cmp
call
dec
xchg
test
sbb
aad
or
jmp
lahf
adc
lock
fld
loope
or
mov
adc
mull
cmp
pop
sti
pop
mov
cmpsb
mov
clc
push
in
js
insb
lea
loop
imul
sbb
mov
pop
repz
mov
std
cmp
or
icebp
mov
jg
insl
pop
sub
scas
incl
mov
pop
pop
nop
setb
lods
or
mov
push
std
lea
int
sbb
jg
rcrl
dec
lods
add
mov
lea
test
sbb
in
fists
ja
lods
stos
or
icebp
popa
and
pop
pusha
repz
mov
dec
cmp
sub
pop
sbb
mov
fdivrl
sbb
xor
jns
adc
ret
inc
stc
std
shlb
sti
dec
adc
jmp
mov
lret
push
push
jmp
shll
lock
xchg
sub
lods
add
test
inc
mov
fstpl
leave
push
pop
cmpsl
and
jmp
fisttps
idivl
orl
mov
mov
sbb
xchg
jle
pushl
push
mov
inc
nop
frstor
adc
sbb
pop
popf
sbb
clc
inc
ret
lds
add
jae
aam
push
mov
xchg
call
jl
jmp
pop
shl
xchg
fbld
popf
stos
and
int
repz
mov
xchg
push
out
add
mov
cltd
jae
orb
mov
and
rclb
inc
daa
and
jecxz
sbb
push
push
sahf
arpl
fiaddl
mov
loopne
cld
and
movsb
jmp
dec
std
xchg
push
scas
sti
sbb
icebp
push
mov
lcall
out
stos
xchg
xchg
or
push
cltd
popf
stc
and
pop
or
dec
dec
ret
int3
pop
scas
jmp
gs
pop
or
mov
lock
add
insb
pop
loop
sti
push
ret
cmp
fdivs
push
pushf
insl
inc
fcom
and
lret
lods
ret
in
jno
pop
sbb
fmuls
mov
push
roll
repz
aas
gs
inc
mov
inc
sub
decb
and
mov
dec
rclb
lret
and
popf
add
out
pushf
push
fsubr
lret
nop
shrl
add
push
mov
push
fisubrl
fmuls
mov
jl
out
cmp
mov
xchg
jmp
mov
jmp
out
lds
loope
mov
ret
sbbb
pop
cltd
mov
cmp
or
add
cwtl
lds
pop
cmp
add
sbbl
cmp
push
iret
push
mulb
enter
mov
mov
rcrb
fdivrs
cwtl
repz
dec
and
jae
dec
cmp
nop
int
in
in
pop
loop
lea
lcall
out
loopne
jecxz
je
or
lods
popf
jge
or
mov
push
rcr
addr16
sbb
push
or
sbb
repz
jl
es
in
fisubl
add
add
xchg
add
sub
fnstsw
cmp
xor
xchg
in
xlat
sbb
pop
std
push
leave
cs
jecxz
pop
or
out
cmpsl
mov
adc
repz
rclb
adcb
inc
jae
jge
adc
and
jno
pop
jg
lods
adc
out
arpl
or
and
adc
loope
movl
inc
stc
pop
leave
push
push
mov
push
cmp
push
push
fsubp
sti
or
pop
inc
sub
pushf
xchg
sbb
loopne
push
xor
std
push
and
xor
fistpl
sbb
inc
shrb
inc
add
adc
mov
lds
inc
mov
out
xor
jecxz
int3
pop
sbb
jecxz
js
fwait
hlt
leave
int3
xchg
jnp
popf
out
xchg
jmp
dec
or
cli
icebp
jl
daa
sub
mov
lea
xor
sar
push
mov
xchg
in
xor
fidivrl
xchg
jnp
jnp
ret
int3
add
pop
push
lock
jge
mov
das
or
or
cmc
or
pop
lods
pusha
add
stos
mov
cmp
push
std
lea
pushf
add
mov
and
add
shl
cld
lahf
or
pusha
shrd
sub
mov
icebp
jns
fstpt
adc
test
xchg
or
mov
fistps
es
test
pusha
inc
push
fisttpl
and
pop
shrb
stos
xor
mov
cmp
fisttpl
arpl
addr16
cmpsl
inc
cld
mov
dec
or
push
push
imul
loope
jae
pop
sti
faddl
cmpsb
xchg
push
stos
add
push
dec
xor
xor
movsl
js
or
or
repz
lcall
pop
pop
std
insl
dec
fdivr
es
pushf
add
mov
fnsave
inc
add
and
or
rcrl
pop
jmp
mov
push
push
inc
pop
mov
popf
add
adc
cli
jp
jae
test
scas
pop
stc
jns
lcall
sbb
rcrl
sub
mov
cmpsl
add
ret
and
sbb
repz
inc
stos
subl
add
pop
dec
test
and
std
dec
fbld
pop
pop
fbstp
enter
js
adc
fcoml
jp
pop
pushf
push
push
call
xchg
add
icebp
fs
out
push
loope
sar
cmpsb
jp
negl
mov
repz
jecxz
jns
or
push
sbb
jmp
psubq
dec
xor
mov
or
lcall
pushf
nop
mov
hlt
pop
std
out
nop
pop
push
mov
ljmp
jg
std
idivl
pop
imul
sti
cmp
or
dec
cmpsb
pop
aas
add
inc
icebp
mov
dec
jge
out
sub
leave
mov
nop
add
adc
ficompl
and
fs
ficomps
adc
loope
andl
cmpsb
mull
addb
andb
pop
popf
iret
add
jno
es
std
adc
xchg
jg
pop
jecxz
add
mov
sub
sbb
rolb
sbb
push
lret
filds
or
pop
mov
pop
mov
addr16
dec
pop
mov
sahf
pusha
xchg
and
dec
divb
xchg
int3
leave
clc
lea
dec
pop
mull
sbb
fwait
ljmp
push
enter
and
mov
je
inc
cmp
fstl
xchg
add
push
fs
jnp
js
add
sbb
add
sar
pop
or
add
or
jno
jae
add
mov
out
mov
jns
add
aaa
or
lock
mov
fxch
popa
jns
repz
mov
nop
add
nop
or
sbb
ret
pop
jle
inc
jge
out
dec
inc
and
jl
push
mov
incb
jge
push
lret
das
testl
add
ret
inc
mov
cld
push
adc
adc
lds
cmp
mov
add
pop
add
sub
sub
cmp
orl
xor
sub
jge
jl
push
mov
dec
aad
push
xchg
cltd
fstpl
cld
push
adc
jl
push
pop
add
rol
or
std
arpl
or
mov
add
pop
push
or
jnp
sbb
movsl
fisttpll
imul
ja
les
out
jbe
add
imul
test
push
mov
inc
cli
pop
pop
test
dec
inc
cmp
mov
xchg
cltd
jmp
add
sub
xchg
daa
int3
mov
in
mov
movsb
add
loop
test
pop
or
std
jo
and
or
mov
push
insl
sbb
pushf
push
inc
into
cs
cmp
and
std
and
push
test
cmc
or
and
test
popf
nop
push
and
push
es
inc
and
fs
popf
sbb
lahf
jbe
push
and
sub
and
mov
mov
cmpb
mov
loope
int3
jne
sahf
cltd
decl
mov
sbb
loopne
inc
insl
mov
jp
inc
xchg
cmp
scas
pop
popa
cli
add
sbb
in
aaa
mov
ret
adcl
mov
sbb
inc
movsb
or
cltd
out
in
dec
in
push
jae
and
mov
movsb
xor
mov
popf
inc
jp
ficoml
or
sbb
aad
add
and
inc
ret
js
les
jbe
ret
mov
cmp
cmp
sahf
pop
js
add
and
jp
adcb
push
pop
shll
jl
pop
adc
or
mov
mov
mov
and
mov
adcl
mov
testb
and
add
push
std
insb
sub
mov
mov
add
cld
and
jp
adc
subb
xchg
fcomps
jnp
call
popa
adc
lods
mov
fistps
andl
mov
xor
loope
jnp
cltd
in
push
cmp
je
and
or
js
mov
cli
aad
fadd
xchg
cmp
xchg
push
arpl
add
pop
out
fldcw
xchg
loopne
or
xor
dec
push
jmp
cwtl
mov
scas
loopne
xor
insl
sub
dec
push
repnz
jp
lea
out
add
cwtl
cmp
adc
pop
mov
sbb
cwtl
mov
cltd
shl
sub
xchg
js
mov
xchg
sub
adc
jbe
mov
dec
push
push
xchg
ljmp
les
pop
rclb
loopne
jo
inc
out
sbb
notb
pop
pop
jns
cli
pusha
imul
or
cmp
sub
cmc
sbb
and
adc
xchg
push
sbbl
popa
pop
sub
adc
shr
mov
push
sbb
jnp
lds
mov
sub
lods
cmp
xchg
ds
and
insb
repz
adc
mov
cld
fucompp
cltd
repz
or
and
addr16
cmpsb
ret
mov
xor
cld
into
arpl
loop
or
mov
jp
xlat
add
push
mov
add
imul
and
shrl
and
cltd
or
xchg
inc
or
call
sub
lret
negb
mov
cli
ret
lds
scas
adc
ja
repnz
cmp
aad
testb
lcall
cwtl
or
pop
sbb
or
fists
call
xchg
sahf
mov
jno
xorb
pop
pop
popf
or
mov
jbe
push
icebp
daa
xor
and
jno
jb
out
push
xor
out
dec
sub
shll
bound
loop
jp
mov
mov
int3
mov
sahf
sub
movsb
or
add
adc
leave
push
inc
fucomp
psubusw
sbb
test
lea
enter
jmp
and
push
rcrl
and
stc
lods
inc
sub
movsb
mov
sub
xlat
test
mov
mov
scas
lea
je
fwait
and
icebp
cld
arpl
cli
loopne
and
pop
mov
shrb
and
push
add
rcrb
test
mov
add
int
add
inc
xchg
xchg
mov
mov
jg
jle
mov
and
aas
mov
sub
in
sbb
xchg
cmc
mov
out
arpl
test
test
sbb
xor
addb
mov
mov
gs
movl
repz
faddl
shll
pop
iret
sub
inc
arpl
pop
and
adc
push
jns
jbe
xchg
cltd
pop
add
in
inc
xchg
aas
or
aad
sti
jp
sbb
in
or
push
xor
sbb
popa
daa
add
test
xchg
dec
stos
jne
xchg
sub
aaa
sbb
xor
xchg
int3
cltd
lret
adc
sbb
and
sbb
stos
shll
fstl
out
out
hlt
fcompp
stc
test
icebp
ret
and
shl
repz
and
mov
mov
incl
ret
push
xor
mov
pop
cwtl
mov
out
lods
mov
push
add
dec
pop
test
sub
xchg
or
pop
mov
icebp
mov
repz
std
and
push
adc
pop
and
cmp
ja
xlat
pop
pop
adcl
jnp
mov
sbbb
sahf
pop
add
jge
in
mov
jae
mov
add
sbb
sub
sbb
inc
inc
adc
push
psubsb
and
std
es
cmp
in
cvttps2pi
ljmp
push
jnp
and
or
subl
xchg
push
jb
pop
and
push
adc
jne
pushf
adc
call
add
mov
out
jge
arpl
jb
xchg
rcll
mov
in
add
xchg
and
sahf
les
sub
popl
mov
mov
loopne
dec
hlt
movsb
negl
mov
and
jecxz
and
cmpsl
mov
xchg
push
test
cmpsl
pop
push
les
rcll
pop
xchg
outsb
jne
or
in
mov
test
pop
aaa
push
and
lret
pop
add
mov
in
stos
gs
push
popf
add
rcr
sbb
adc
pop
push
or
push
pop
pop
test
pop
or
mov
xor
pop
fsubs
es
add
dec
jmp
pushf
pusha
int3
xchg
sbb
repnz
testb
cs
mov
and
cmp
sbb
jg
pop
mov
nop
jne
loopne
cmp
imul
scas
add
inc
adc
into
fmuls
mov
sbb
push
and
sub
fcomi
push
fcmovb
stc
adc
adc
xor
mov
and
mov
mov
mov
stos
in
mov
mov
shll
and
ljmp
push
jecxz
pushf
hlt
std
scas
mov
loopne
js
push
repnz
lcall
pop
nop
hlt
jp
ja
insb
dec
fstl
adc
push
mov
loopne
mov
dec
pop
rclb
jmp
insl
cmp
in
cmp
mov
push
cmpsl
cmc
or
fimuls
xor
lods
shlb
xorl
pop
jno
mov
xchg
sbb
mov
pop
aas
push
push
or
clc
mov
xchg
cwtl
jmp
stos
rolb
xor
xor
push
xor
scas
inc
loope
repz
push
insb
rolb
cli
mov
xor
mov
pop
sbb
mov
sbb
or
insl
xchg
popf
and
ja
cmc
pop
mov
icebp
pushf
fnstenv
or
and
push
push
add
add
dec
test
mov
adc
jns
add
lret
sbb
and
test
sbb
mov
fildll
dec
stc
pop
add
inc
xor
movsl
sbb
sub
sbb
shlb
jmp
shlb
pop
mov
lret
inc
sbb
cmp
mov
cmpsb
lea
sub
into
aas
inc
adc
cmpsl
outsl
pop
jmp
rolb
sbb
in
cltd
aad
and
xchg
in
in
cwtl
popa
outsl
loope
sub
lcall
icebp
mov
daa
and
mov
cmpsl
cwtl
adcl
cmp
bound
in
add
mov
enter
push
adc
repnz
lret
dec
or
mov
xchg
cmc
lcall
repz
lods
push
fcoml
lds
sbb
inc
sub
lock
lods
sub
sbb
outsl
rorl
rorb
arpl
lock
adc
mov
sub
test
jns
sahf
mov
dec
cli
fs
call
sahf
loope
fisubl
and
push
and
adc
mov
sub
mov
push
sub
popa
aam
add
xchg
ljmp
aad
sbb
jbe
cld
inc
scas
cmp
lea
negb
mov
dec
push
adc
pushl
jmp
pushf
repz
cltd
or
jbe
mov
inc
jp
sbb
lret
push
leave
inc
pop
jmp
pop
stos
cmp
adc
into
pop
dec
pop
int
negb
or
jno
xchg
mov
and
push
cmp
fnstenv
jnp
or
cmc
loope
fcomi
orb
dec
sbb
mov
mov
and
cli
cld
cli
jecxz
pop
sub
andb
repnz
add
inc
adc
pop
xchg
adc
and
das
jmp
pop
mov
pop
sbb
pop
in
pop
dec
push
adc
test
inc
call
in
push
jecxz
imul
mov
popf
mov
movsl
xchg
pop
inc
cmp
sahf
nop
mov
pop
lret
stos
sarb
and
xchg
pop
sbb
sub
sbb
rol
hlt
ljmp
sbb
in
xchg
sub
push
xchg
dec
pop
and
in
pop
inc
and
xor
hlt
and
mov
icebp
mov
fldenv
adc
or
pushf
inc
add
cmpl
mov
sbb
xor
cmpsb
or
outsb
leave
scas
xchg
sbb
int3
nop
lcall
and
push
dec
push
lret
adc
cmc
add
pop
mov
inc
stc
xchg
dec
outsb
cmp
sbb
dec
or
mov
jbe
outsl
xchg
xchg
jmp
stos
cli
or
stos
sbbb
mov
sbbl
mov
and
ljmp
push
sbb
int
fiaddl
scas
adc
jecxz
add
and
inc
lahf
or
adc
test
ret
push
mov
negl
jp
cmp
fdivs
stos
cmpxchg
loope
testl
adc
lahf
imul
and
sub
jns
cmp
idiv
and
or
push
and
and
popf
sbb
or
mov
lods
popa
lahf
movsb
mov
sub
movsb
shr
add
add
imul
icebp
pop
outsb
jecxz
adc
test
jne
xchg
mov
pop
insb
add
fistl
and
add
stos
and
in
push
push
inc
test
in
jmp
iret
and
mov
sub
mov
jecxz
pop
and
fucomi
add
leave
xchg
or
hlt
push
or
stos
add
pop
aas
push
shl
xchg
test
repz
pop
add
inc
fiaddl
mov
lea
iret
dec
push
out
sbb
adc
out
xchg
out
out
mov
ret
hlt
mov
pop
cmpsl
in
inc
in
scas
and
pop
or
pushf
clc
pop
sub
dec
xchg
pusha
inc
jmp
fnsave
stc
div
jg
cmp
mov
rcrb
adc
call
jno
xlat
icebp
stos
or
lcall
test
push
mov
adc
adc
add
es
mov
icebp
mov
outsl
mov
jle
sbb
test
or
aad
sub
rcll
mov
pushf
add
adc
bswap
ret
or
or
sub
jne
push
loope
add
mov
mov
dec
sbb
adc
inc
sti
or
insb
xchg
pop
add
sub
subb
adc
ret
pop
lods
adc
int
ffree
adc
loopne
xchg
movsb
push
sbb
lea
in
add
ds
jns
cvtps2pi
or
pop
test
incl
add
roll
fisttpll
popf
mov
adc
pusha
ret
xchg
push
iret
sub
pop
push
xchg
sbb
lcall
mov
or
sbb
xor
and
and
adc
pop
es
fbld
xchg
xor
pop
arpl
fistps
cltd
add
or
arpl
dec
inc
mov
and
pop
dec
leave
xchg
sub
aam
pop
lods
dec
add
pop
rclb
jno
xor
cmp
xchg
sbb
fdivr
pop
rcll
lahf
sbb
cwtl
mov
rclb
leave
sbb
inc
jecxz
test
cld
test
jns
movsb
sbb
out
loope
sub
sbb
pusha
and
mov
xchg
pop
in
xchg
insl
out
fwait
scas
pop
cmpsb
push
addr16
dec
nop
das
and
sbb
cltd
int3
lahf
pop
pop
lds
daa
sahf
mov
ret
xchg
scas
cmp
test
in
sbb
arpl
mov
xchg
adc
clc
cltd
shll
jl
sti
mov
sahf
mov
mov
mov
lea
jg
jno
sbb
mov
add
fsts
sbb
mov
test
or
in
shlb
sahf
add
stos
dec
and
mov
call
or
and
insb
or
and
and
sbb
es
adc
or
adc
frstpm(287
data16
pop
shll
xchg
jecxz
or
sub
pop
inc
std
push
push
jp
or
jmp
push
xchg
into
xchg
jmp
sbb
and
imul
add
mov
cli
dec
popa
pusha
in
and
imul
sub
add
push
sarl
or
dec
sub
sbb
lods
mov
pop
push
mov
and
lret
mov
or
loop
and
sbb
jns
data16
cmp
mov
test
dec
push
into
adc
in
aaa
imul
adc
dec
push
pusha
and
repz
cmpsb
push
fsubs
out
xor
popa
sub
jns
pop
fstpl
and
fstl
cltd
std
mov
enter
cmp
hlt
mov
mov
adc
loope
ss
or
fisubrs
pop
out
test
mov
and
dec
sbb
lods
in
mov
stos
xlat
mov
mov
jns
pop
andl
mov
fcoml
cli
xchg
xchg
sar
dec
pop
leave
and
add
and
jmp
jns
add
imul
jne
sbb
cli
xor
push
mov
test
and
xor
insl
imul
mov
jecxz
or
cmp
add
cltd
cmp
sbb
xor
in
in
mov
push
popf
push
sahf
fistpll
lret
sbb
jecxz
stos
sub
jg
inc
xchg
push
fmuls
add
mov
sahf
out
push
push
out
add
stc
sbb
sub
std
loopne
dec
pop
clc
js
icebp
mov
mov
pop
adc
sub
inc
mov
movsb
imul
pusha
cmpsb
mov
push
cmp
dec
adc
pop
or
lahf
cvtps2pi
pop
jecxz
mov
push
test
inc
push
push
les
mov
adc
sbb
mov
cltd
mov
hlt
add
ficompl
sbb
adc
add
pop
sub
and
cltd
pop
mov
inc
push
mov
rorl
fnstenv
popf
jne
pusha
bound
shlb
mov
popf
sbb
pop
sahf
cmpsb
shl
fwait
stos
sbb
pushf
sbb
lcall
in
xchg
adc
pop
mov
popf
add
popa
dec
pop
adc
and
jae
xlat
sbb
loope
nop
xchg
lods
popf
cmpsb
cltd
sbb
in
jmp
clc
out
inc
pop
hlt
jb
jnp
adc
adc
leave
jb
jl
adc
and
mov
cwtl
mov
lahf
aam
mulb
mov
lea
adc
ficomps
cmpsl
sbb
sbb
stos
xchg
insb
cmp
fcoms
mov
and
jo
mov
and
cmpsl
mov
cltd
add
ficoml
cltd
ja
pop
and
adc
push
enter
repnz
add
std
xbegin
xchg
cli
gs
pushf
shl
mov
add
test
fwait
mov
cwtl
rclb
and
xchg
jae
push
xor
ljmp
out
or
scas
leave
fiaddl
in
loop
pusha
sbb
jecxz
sbb
std
lcall
loopne
in
arpl
ret
mov
cltd
adc
push
adc
pop
or
mov
dec
adc
sbb
pop
fcmovu
aam
and
fsqrt
icebp
int3
push
je
or
add
sbb
enter
ficoml
add
iret
push
arpl
aam
rol
push
dec
int3
push
in
movswl
mov
fcmovbe
mov
mov
jmp
insl
fldl
mov
ret
add
ret
out
ret
jmp
push
bnd
xchg
mov
pop
adc
js
xchg
fisttps
pop
xchg
imul
cli
push
call
sub
xlat
and
jo
and
js
and
lea
loope
jo
sub
xchg
push
mov
lret
inc
mov
fidivs
andl
into
mov
aam
in
add
test
out
jbe,pn
mov
movsl
sbb
jne
jmp
shll
add
addr16
data16
jg
imulb
add
adc
mov
dec
xchg
sbb
sbb
loopne
addr16
mov
mov
push
lods
adcb
scas
add
dec
jbe
test
and
mov
popf
mov
stos
movsl
icebp
inc
les
pop
push
add
mov
and
or
or
adc
movb
sahf
cmp
jne
adc
add
and
orl
xchg
xor
cltd
fistps
int3
sbb
cmp
in
sbb
mov
cmc
or
shll
or
mov
xchg
clc
inc
xchg
mov
shrl
sbb
add
and
in
or
sahf
dec
lea
pop
mov
jmp
repnz
lods
mov
sahf
xchg
xor
shll
addl
adc
adc
js
and
adc
repz
cld
adc
add
loop
lcall
popf
rcrb
mov
push
xchg
or
popf
add
adc
add
pop
inc
push
jns
cltd
rclb
xchg
push
popf
push
push
mov
pop
or
lea
stos
pusha
pop
and
popf
and
cltd
sbb
fwait
pushf
out
dec
mov
adc
xchg
adc
adc
mov
lods
or
and
or
sti
jg
lea
sbb
sbb
adc
and
popf
add
std
fsubl
aas
push
xchg
ja
stos
aad
xchg
mov
jmp
int
push
fisttpll
push
sbb
shll
les
movsl
inc
mov
arpl
loop
jmp
fwait
notl
cmp
pop
ja
jg
sub
add
and
adc
mov
out
sbbl
push
fldl
dec
out
test
out
in
or
pop
cwtl
fstps
arpl
jmp
sahf
and
into
enter
aad
sar
aad
arpl
xchg
xchg
iret
pushf
xchg
adc
iret
or
sbb
pushf
loope
repz
or
andb
fstp
enter
fstl
movsl
cwtl
popa
jb
pop
mov
data16
jo
out
inc
idiv
pop
loop
fisubl
add
and
popf
pop
test
add
adc
or
or
pop
push
add
clc
popf
adc
jns
cmpsl
cmpsl
mov
xchg
movsl
mov
and
ljmp
jns
iret
fsubrs
and
popf
ja
jno
jecxz
sub
es
cmp
sbb
in
cld
lahf
jecxz
iret
ficomps
pop
mov
int3
xor
and
mov
add
lock
jb
stc
add
loope
push
inc
lea
ret
fimuls
and
inc
out
jb
popf
pop
add
insb
or
aas
pop
popf
clc
std
push
jecxz
mov
out
shll
add
sarb
pop
pop
sbbl
push
movb
lea
xchg
in
stos
and
mov
sub
and
imulb
dec
enter
stos
jmp
xchg
mov
dec
mov
cmp
in
pop
jmp
or
sti
mov
inc
mov
fldpi
mov
fdivrl
cltd
loope
lock
jecxz
inc
dec
test
xchg
mov
jnp
fidivl
inc
sbb
push
push
test
mov
dec
enter
test
lcall
negb
cmp
push
aas
icebp
mov
cmc
mov
mov
cmc
inc
and
shll
xor
sbb
xchg
cs
rcrl
and
mov
and
push
adc
and
pop
and
xchg
mov
or
std
adc
add
in
xchg
or
lds
fcoml
jmp
jp
mov
cmp
std
push
fwait
sbb
mov
push
adc
fwait
int3
in
add
push
cmp
test
stos
je
loop
dec
mov
es
jg
mov
rorb
sbb
cli
outsb
adc
push
fldt
pop
fwait
jmp
xchg
cmp
cmp
cli
int3
sub
fnsave
push
icebp
or
out
xchg
stos
shll
jg
out
dec
faddl
pop
push
xor
push
sub
js
repnz
in
cltd
std
movsl
push
test
adc
xchg
inc
push
add
adc
pop
test
add
aam
and
lea
sub
mov
clc
pop
lea
adc
push
push
loopne
push
mov
enter
jge
adc
push
cli
test
insl
cmp
jnp
rclb
fcoml
sbb
push
sbb
arpl
hlt
gs
xchg
jl
mov
xor
lods
cmpsb
shl
arpl
xchg
xchg
adc
add
dec
sbb
xchg
aaa
daa
test
je
mov
and
daa
and
bound
in
mov
pop
in
call
int
hlt
ret
sbb
fcompl
xor
daa
adc
mov
cmc
aas
cmpsl
sahf
ret
lret
cmpsl
mov
push
cli
xor
sti
stos
shl
sbb
sbb
add
inc
push
mov
les
sbb
cltd
inc
push
jecxz
inc
in
cli
shll
loope
mov
add
int
sbb
fmull
btr
or
xchg
mov
add
inc
adc
sbb
or
stc
lods
std
or
mul
add
adc
add
int
imul
arpl
xchg
das
ret
stos
jmp
mov
jp
js
push
push
adc
shll
push
loope
fcoml
inc
sti
push
inc
and
xchg
and
and
inc
je
xchg
stc
xchg
std
xchg
adc
push
out
faddl
jo
pusha
sub
cmp
and
push
std
lret
icebp
push
and
sub
mov
mov
fcompl
enter
adc
pop
and
iret
pushf
scas
mov
xchg
rcr
cmp
in
call
mov
jle
add
leave
mov
fstpl
push
jl
push
adc
and
pop
push
xchg
and
inc
scas
mov
fisttpll
push
and
loop
loope
loopne
or
pop
inc
add
arpl
mov
arpl
mov
push
pop
sub
imul
or
nop
add
pop
pop
in
push
pop
out
dec
adc
pusha
scas
imul
adc
push
cmc
jnp
icebp
fbstp
jmp
and
gs
add
les
or
and
pop
sbb
sub
divb
pop
xchg
std
movb
iret
mov
testl
sbb
dec
jns
cmp
pop
fnsave
fmuls
cmp
ljmp
pop
mov
push
inc
sbb
das
push
sub
stos
mov
cmp
push
jmp
cmp
ljmp
mov
and
cmp
leave
xchg
loopne
jp
adc
test
and
mov
cmpsl
test
imul
cld
jb
jns
icebp
stc
and
fisubl
test
notl
adc
and
test
pop
lret
push
pop
mov
std
fs
mov
scas
mov
aad
rcrb
mov
loop
cltd
popa
push
sbb
sub
sahf
and
cli
or
divl
cmp
jecxz
or
sbb
arpl
sub
fstpt
std
lea
jns
adc
and
inc
js
loope
pop
mov
clc
sbb
sar
xor
or
idivl
fidivs
xor
repz
mov
or
in
and
call
ret
or
outsb
pop
test
or
fldln2
mov
inc
jl
sub
xchg
push
imul
cmpb
ss
sub
lcall
xor
mov
fsts
test
inc
push
jmp
mov
clc
js
mov
je
mov
sbb
out
mov
cmp
stos
mov
push
adc
sbb
fstpl
push
fs
jbe
add
inc
icebp
add
jp
stos
mov
in
sub
cmp
arpl
pusha
push
mov
mov
cmc
imul
inc
cli
and
aaa
mov
nop
adc
or
fs
pop
aad
push
pop
rcrl
shrb
mov
mov
lods
int
aaa
push
arpl
js
ja
mov
dec
lcall
cli
loopne
pop
jp
mov
outsb
ret
mov
icebp
cmpsb
adc
notb
cmpsb
imul
jg
sbb
rolb
repnz
sbb
insb
and
and
fbstp
addr16
and
adc
and
inc
xor
mov
imul
add
cmpl
mov
cmp
aad
xchg
mov
push
lds
jmp
xor
xor
cmp
push
add
push
andl
popa
les
xchg
ret
mov
lods
iret
lret
and
xor
and
cs
stos
xchg
nop
cld
add
insl
cld
mov
fadds
cltd
lds
jbe
aad
mov
loopne
gs
fbld
push
dec
jns
inc
jl
cli
adc
bound
sarl
es
cltd
mov
or
push
mov
push
pop
or
loope
daa
pop
cli
popf
cmpb
sbb
idiv
push
rep
and
xchg
sbb
or
pop
sbb
sarl
or
push
push
leave
cmp
pop
aam
adc
pop
and
add
faddl
repnz
popf
andl
adc
test
in
lods
aaa
cld
inc
mov
or
lahf
inc
pushf
cwtl
push
bnd
sbb
bound
pushf
sar
xchg
clc
cltd
mov
xchg
loope
pop
sbb
movl
mov
jne
loope
and
push
mov
xchg
mov
push
xchg
addl
mov
xchg
xor
or
add
mov
aas
sbb
mov
sub
out
sub
sbb
or
pushf
dec
outsb
adc
pop
test
test
enter
mov
pop
fldt
mov
xchg
sbb
lods
andl
jp
jne
xchg
push
adc
add
jg
mov
sub
std
loop
mov
xchg
xchg
clc
test
ljmp
mov
movsb
inc
adc
lcall
or
and
mov
mov
js
xchg
ficomps
xchg
ficompl
push
sbb
ljmp
test
call
mov
stos
movsl
repnz
out
mov
mov
pop
inc
mov
or
pushf
int
ret
filds
aad
inc
fadd
and
mov
cmpsl
jge
mov
push
movsl
mov
popa
add
sahf
mov
aaa
push
pop
xor
out
out
add
inc
lods
cmp
sbb
sbb
cmp
in
aaa
jne
sbb
sti
mov
push
push
adc
and
and
lret
fildll
es
decl
mov
testl
sbbl
movsb
shll
jle
rol
xchg
xchg
cmp
pop
rcrb
jecxz
jecxz
data16
es
ret
bound
pusha
cmpsb
rcrl
hlt
inc
scas
and
mov
xor
dec
cmp
sbb
fldl
push
lea
int
rcrb
mov
add
pop
mov
push
pop
and
and
imul
loopne
and
mov
leave
xor
push
adc
cmp
bound
jo
mov
xchg
nop
inc
sub
test
inc
pushl
mov
jno
mov
add
andb
and
dec
pop
test
loope
jle
aad
addr16
mov
cmpsl
lret
and
or
pop
out
sbb
add
cmp
mov
inc
pop
imul
add
xor
jae
jp
adcl
cli
adcb
sbb
out
sbb
push
cmp
mov
mov
and
repz
cli
out
clc
dec
scas
clc
lea
xchg
in
xor
cmpsb
push
in
mov
gs
adc
xor
and
xlat
xor
mov
fwait
push
out
mov
xchg
in
or
popf
sti
sub
or
loopne
pop
std
pusha
adc
paddw
dec
xor
and
scas
add
lahf
jno
mov
push
add
add
sbb
lea
xchg
sbb
imulb
popf
mov
mov
fs
lret
stc
inc
push
push
test
mov
lds
js
and
nop
fstpl
cld
xlat
push
pop
adc
mov
pop
lret
test
setno
sub
mov
adc
cltd
mov
sbb
ja
jno
inc
xchg
nop
test
add
shll
fcomi
push
mov
decl
rorb
jmp
adc
xlat
xor
cmpsb
mov
in
and
rcrl
add
cltd
loopne
inc
imul
mov
lds
or
mov
stos
add
rorl
mov
inc
push
das
stos
cmpsb
mov
jp
gs
mov
xor
jnp
test
fs
jmp
rorb
push
and
stc
popf
adc
stos
lods
add
dec
push
xor
arpl
outsb
jg
mov
mov
and
std
loope
movsb
xor
leave
lcall
sahf
test
fcmovnbe
test
popf
jnp
shrb
xchg
sub
add
jnp
mov
adc
stos
repnz
nop
sbb
push
shrb
pop
jnp
push
cmp
adc
iret
add
push
jmp
mov
adc
jecxz
sub
lea
or
sub
aad
push
cmpl
test
in
fs
sub
scas
aaa
add
imul
pop
cmpsl
out
std
lea
xlat
imul
lock
rcll
mov
negl
and
dec
rorb
push
sbb
sub
test
jge
cltd
sub
add
rcrl
sub
cltd
in
aaa
push
jp
adc
and
sbb
notl
cwtl
sbb
outsl
jmp
fdivs
mov
sbb
mov
repnz
ret
xchg
stos
out
arpl
pop
aad
and
add
imul
dec
pop
lea
subb
push
cltd
out
popf
push
sbb
sbb
mov
mov
in
push
imul
aam
or
stos
scas
in
sbbb
lret
mov
pop
fldl
jo
aaa
jg
fcomps
adc
sbb
icebp
psubq
or
cli
mov
adc
stos
inc
insb
sbb
mov
xchg
jmp
mov
addr16
sbb
push
xor
ret
inc
repnz
mov
notl
out
test
out
testb
xchg
pop
jno
movb
lock
or
jp
xchg
or
sbb
movsb
pop
fisttpll
dec
mov
test
inc
cmc
xlat
aad
xchg
mov
ss
in
in
gs
fnstcw
jnp
mov
jge
movsl
loope
ret
adc
and
sbb
lcall
dec
test
sahf
mov
push
icebp
fistpl
pushf
cs
cli
sahf
cltd
lods
xchg
cmp
pop
test
adc
lahf
stc
sub
dec
add
adcl
aaa
jbe
mov
jecxz
add
cmp
bound
pop
sub
popf
pushf
data16
mov
cmpsb
std
cmp
mov
int3
and
sbb
xor
inc
inc
push
cmp
push
xchg
mov
xlat
add
sbb
rorb
loope
jmp
jb
jg
jns
mov
mov
aaa
mov
mov
in
sbb
repnz
xchg
mov
jmp
lock
xorl
push
hlt
jmp
mov
enter
imul
ret
loop
in
sarb
jecxz
sub
es
pop
pop
pop
mov
nop
xor
jp
lret
lcall
aaa
push
out
ret
or
pop
jbe
lret
testb
and
lods
sbb
icebp
in
jo
sti
push
push
jmp
pop
rorl
arpl
lods
lods
push
xchg
mov
shrl
popf
fucom
setge
in
pusha
test
add
cltd
sbb
loopne
add
inc
out
leave
add
sub
fnstcw
adc
mov
xlat
insb
mov
cld
test
imul
fnstsw
xchg
sub
adc
in
mov
stos
inc
and
xchg
mov
cmp
in
xchg
mov
ret
addr16
sbb
rol
ds
dec
pop
clc
xchg
cld
inc
rclb
sbb
icebp
pop
cltd
push
cli
inc
sahf
pop
insb
cli
data16
adc
pop
and
lock
lods
test
sbb
mov
stos
dec
test
xchg
cmp
jmp
jp
jle
push
and
or
cld
arpl
dec
push
mov
arpl
fwait
dec
jmp
mov
mov
xor
int3
mov
pop
testb
push
dec
in
and
nop
pop
add
cmp
sub
rsqrtps
xor
call
jp
adc
adc
test
sub
adc
jl
imul
loopne
aaa
mov
sub
sub
frndint
outsl
lret
pop
xor
sub
lods
jecxz
pop
pop
les
sub
cwtl
mov
in
adc
in
mov
mov
xchg
xchg
lock
adc
je
pop
sub
mov
leave
add
rolb
pop
test
jne
xchg
pop
inc
sub
fbstp
xchg
icebp
dec
xchg
cmp
xchg
fistl
std
sbb
inc
out
mov
pop
stos
mov
or
inc
loop
xchg
mov
add
xchg
push
cmpl
push
std
mov
adc
inc
dec
mov
pop
pop
sbb
addr16
or
sbb
cwtl
mov
ss
mov
scas
cmp
lds
int
xchg
cwtl
sbb
dec
adc
add
xchg
pop
pop
xchg
ljmp
xor
in
lock
sbb
movsb
and
hlt
in
jo
push
out
or
cmp
sbb
lock
jnp
adc
inc
cli
test
add
lea
jnp
repnz
in
sbb
mov
mov
push
fs
ja
cs
in
lcall
lds
int
call
pop
lods
js
jnp
arpl
jb
push
or
push
mov
mov
xchg
je
or
push
mov
push
inc
xchg
sti
loope
repz
mov
mov
jge
xchg
subl
shl
adc
cmp
test
pop
hlt
shl
fidivrl
mov
sbbl
scas
jg
pop
ljmp
sti
fwait
inc
ss
ja
push
call
ds
xchg
std
icebp
mov
stos
jl
lret
inc
xchg
mov
ja
mov
shrl
repz
push
dec
ret
sahf
push
rorl
push
inc
dec
mov
and
jb
jge
sbb
sbb
mov
nop
xorb
sub
sbb
mov
pop
sbb
and
popa
inc
inc
sub
mov
dec
loope
xchg
ljmp
mov
pop
mov
mov
call
sub
sbb
test
or
cltd
dec
mov
call
jae
push
cmp
inc
in
test
pop
or
mov
test
lret
lods
add
pusha
in
clc
or
sbb
or
push
imul
stos
loopne
push
fmuls
movsb
xchg
inc
fwait
jp
inc
mov
pop
fsubr
pop
adc
sbb
jnp
xor
out
inc
icebp
mov
mov
jno
mov
xor
icebp
test
cli
int
test
or
sbb
stc
orl
and
clc
push
repnz
and
jp
dec
testb
sbb
jge
sub
stc
dec
fisubs
nop
adc
shr
loope
fidivrs
stos
inc
es
inc
into
xchg
inc
add
and
lock
popa
test
mov
imul
add
cmpb
mov
jl
repnz
mov
test
add
fneni(8087
add
push
test
push
adc
jns
push
in
adc
mov
fwait
and
out
fbstp
jmp
ret
loopne
mov
sbb
lret
mov
xor
jns
stos
adc
xchg
cwtl
lods
or
repz
jnp
pop
xchg
jecxz
xchg
sub
or
xchg
loopne
adc
aad
lods
int3
dec
arpl
and
dec
imul
mov
push
adc
and
arpl
pop
add
or
mov
mov
pop
mov
insl
mov
lock
jecxz
imul
arpl
sub
push
call
ffree
jns
fdiv
jge
je
shll
stc
rorl
sbb
sub
cwtl
pop
cmp
sub
dec
lcall
mov
xchg
adcl
lahf
jecxz
xchg
ret
stc
jmp
xchg
adc
cmc
mov
mov
sahf
lods
add
inc
cli
xchg
jg
sub
xchg
subb
testb
cli
jnp
loopne
jge
ljmp
lret
popw
and
imul
fwait
stos
out
roll
rcrl
sbb
fdivr
cmp
sub
imul
lods
test
sbb
mov
cmpsb
xchg
popa
por
popl
pushl
mov
subl
cmp
insb
fstps
push
xor
sub
sbb
mov
cwtl
scas
or
andb
pop
insl
dec
mov
or
cmpsl
out
fidivrs
pushf
xchg
test
add
icebp
iret
push
fdivr
sarl
lret
popa
pop
dec
xor
pop
mov
jg
rorl
jnp
lea
add
lods
mov
mov
mov
jp
cltd
add
pop
push
jno
add
xchg
es
clc
mov
cltd
mov
cmpsl
pop
fsubl
adc
popf
loopew
popf
push
xor
leave
shll
mov
xlat
xor
xlat
loopne
js
loope
or
hlt
fsubrs
cld
rcrb
loopne
and
rcrl
pop
fcomps
rcl
push
jle
lods
adcl
mov
insb
cltd
inc
clc
sub
repz
cmp
cmp
xchg
in
or
cwtl
jmp
mov
test
ret
sbb
jecxz
mov
rcrb
push
add
pop
lock
xor
aaa
pop
int
js
mov
and
jl
push
jle
xchg
jl
xor
and
int
sbb
inc
adc
and
insb
sub
jbe
mov
sbb
loope
sub
xor
mov
xchg
movsb
push
mov
mov
and
mov
sbb
pop
cmp
fsts
in
and
add
in
jmp
adc
sbb
insb
xor
jo
shr
sarb
pop
dec
in
cli
and
mov
popf
sbb
imul
sbb
std
xchg
mov
clc
adc
mov
pop
and
jge
add
js
and
repz
nop
andb
das
jne
push
jmp
aaa
xchg
cmp
and
and
cmp
sub
xchg
daa
mov
imul
out
xchg
jb
mov
pushf
mov
jne
shrb
fs
call
sub
outsb
push
stc
insb
fnstenv
sbb
mov
rolb
lcall
rclb
movsb
lret
inc
imul
mov
in
aad
pop
cmp
sub
scas
imul
xchg
jb
xchg
and
jne
xchg
rep
pushf
jecxz
ljmp
sub
jnp
inc
mov
cmp
pop
inc
mov
or
push
add
add
icebp
cmc
push
icebp
push
mov
or
loope
jle
add
or
sahf
xchg
pop
xor
jmp
sarl
call
arpl
out
jne
sbb
sbb
out
add
mov
mov
add
mov
enter
mov
je
nop
cs
xchg
pusha
add
lret
sahf
adc
pop
mov
std
xchg
adc
fwait
adc
lret
mov
adc
adc
mov
inc
addr16
push
mov
sbb
inc
cmp
repnz
xor
pop
push
add
fs
fisttpll
mov
sub
xchg
fimull
adcl
adc
push
cmpsl
mov
mov
and
and
mov
imul
les
sbb
pop
in
lds
loop
add
leave
xchg
cwtl
mov
push
std
cmpsl
test
push
dec
neg
dec
mov
call
mov
imul
inc
repnz
fs
xor
scas
imul
and
push
nop
mov
push
mov
daa
pop
cltd
dec
or
clc
mov
xor
dec
xchg
and
jg
inc
arpl
rcrb
push
test
cli
icebp
mov
mov
aaa
imul
mov
stos
sbb
inc
jecxz
rorb
lret
lods
jle
push
inc
pushf
arpl
pop
sub
clc
and
xchg
adc
mov
pop
push
out
or
push
out
pop
imul
push
adc
or
mov
push
add
sbb
mov
adc
sub
mov
testb
insl
js
add
mov
sbb
int
jp
in
cltd
inc
popf
push
mov
movsb
seta
adc
jecxz
and
and
ljmp
out
popf
sbb
mov
hlt
and
or
cmpsb
mov
sahf
xchg
adc
and
mov
sbb
push
es
cmp
xchg
rorl
pop
out
sub
pop
out
sbb
pop
dec
int
mov
fistps
adc
cltd
mov
push
mov
pusha
mov
test
cmp
or
sub
xor
lods
filds
push
push
fcomip
add
test
loope
mov
cs
or
mov
and
mov
xchg
jnp
xchg
xlat
test
and
scas
pop
js
mov
ret
mov
sbb
and
test
iret
sbb
xor
ds
xchg
cmp
mov
sbb
jecxz
add
sahf
pop
jge
jne
fcomps
dec
rcrb
sbb
and
add
js
mov
pop
jbe
pop
js
bnd
push
stos
adc
aaa
flds
fcmovne
call
jl
pop
icebp
mov
jne
jle
popf
push
callw
mov
pop
popf
jmp
sub
cmp
add
adc
es
fyl2x
pop
cltd
sahf
imulb
pop
dec
inc
lods
xchg
test
mov
mov
pusha
movsb
call
lahf
push
ljmp
scas
loope
fidivrs
fsubs
ror
xchg
mov
cmpsl
xchg
add
and
push
inc
xchg
mov
adc
fcmovbe
inc
es
pop
mov
mov
fstpl
lea
mov
das
push
jge
jmp
mov
std
pop
sbb
aam
or
addl
add
lea
or
adc
sti
into
cli
push
push
pusha
cmp
leave
pop
sbbl
add
xorb
inc
sbbl
sub
dec
int
cmp
fsubl
sbb
jle
xor
cli
cmp
addl
pop
jecxz
out
sbb
cld
dec
adc
mov
rcrb
mov
testb
dec
loopne
sbb
pop
cmovne
icebp
je
aaa
and
and
jns
or
popl
and
cld
add
lahf
and
adc
and
lcall
ljmp
je
fistpl
jae
test
cld
jp
insl
sti
mov
jecxz
xchg
cs
sub
lods
movsl
jle
movsb
adc
and
int
outsb
fdivr
push
testl
push
xchg
lds
movl
js
loopne
out
mov
adc
jbe
inc
leave
pop
imul
dec
cld
hlt
mov
loopne
add
xor
add
jecxz
jl
repnz
ret
test
pusha
or
jmp
and
push
mov
mov
pop
bound
or
or
mov
rcll
push
pop
in
arpl
shr
and
mov
add
mov
xor
test
out
int
aaa
rcll
jne
cmpsb
xchg
or
jmp
aam
inc
fadds
movsb
cwtl
test
mov
inc
fists
or
subl
dec
mov
out
insl
test
nop
sarb
mov
cmp
and
popf
sbb
cmp
arpl
lods
add
jp
push
sub
or
sub
lods
pop
inc
les
cmp
add
pop
imul
jae
mov
popa
and
shl
mov
nop
loopne
push
jne
repz
inc
mov
test
jno
lea
mov
xchg
mov
and
cwtl
push
lcall
sahf
and
or
add
or
add
in
test
lcall
cmc
jmp
icebp
lcall
lcall
xchg
mov
aas
rorl
lahf
out
mov
call
mov
leave
xchg
and
loop
cld
icebp
jle
pop
inc
ss
and
add
maxps
xor
negb
fisttpl
adc
or
sbb
push
bound
jns
lcall
cmc
popa
adc
mov
or
pop
nop
pop
rcll
or
fstpl
mov
popf
jle
mov
add
std
push
nop
mov
cld
popa
test
loopne
testl
push
jecxz
jecxz
lea
sbb
fildl
out
lret
sti
aam
ret
arpl
je
scas
shlb
adc
repz
icebp
repz
sbb
mov
xchg
jecxz
push
je
cmpsl
jns
xchg
mov
fmuls
adc
arpl
fsubrl
imul
add
cltd
icebp
mov
fwait
dec
cmpb
cmp
loop
out
add
fcmovbe
pop
scas
pop
fiadds
addr16
enter
adcl
popf
sub
xchg
add
inc
repnz
call
rcll
pop
pop
push
setae
push
je
sti
fs
adc
ret
mov
in
or
adc
adc
inc
jae
int
repz
adc
add
mov
and
xchg
adc
adc
add
pop
fcomps
dec
adc
pop
sbb
and
and
and
ds
popf
stos
mov
pushf
sub
sbb
cmpsb
or
pop
data16
pushw
mov
notl
sbb
movsb
test
sbb
aaa
or
rcr
loop
mov
in
ds
dec
mov
inc
jmp
movsb
arpl
add
xor
dec
cli
inc
push
fldl
pop
ljmp
sub
insl
add
jle
mov
imul
xor
push
jne
add
xor
and
jecxz
cwtl
popf
lcall
add
lods
outsb
cmpsl
xorl
sub
xchg
jnp
mov
add
and
pop
inc
out
out
xlat
sbb
push
mov
stos
push
in
add
pop
inc
mov
cmpsb
sbb
push
and
xchg
add
adc
mov
xlat
loopne
jne
cmp
lods
xchg
in
and
test
call
mov
leave
adc
sub
repz
or
sbb
add
xchg
out
mov
add
notl
lret
and
leave
jb
mov
xor
outsb
xchg
adc
sub
mov
mov
cld
xchg
int
mov
es
pop
push
mov
jno
push
mov
cmp
add
cmpsb
sbbb
addb
or
loop
lods
sar
xchg
and
mov
daa
xor
or
xchg
inc
test
lret
inc
ds
test
addr16
cmp
jbe
pop
je
adc
jbe
add
cmp
das
rclb
inc
adc
lret
cli
dec
jp
test
mov
test
int3
pmovmskb
icebp
cli
stc
jnp
inc
call
sbb
imul
daa
lock
shrl
daa
mov
lret
cltd
sbb
in
sahf
jecxz
inc
add
add
js
jp
or
jbe
cli
jp
fwait
pushf
push
popf
fs
and
fldl
cld
pop
iret
pop
stos
pop
ret
sahf
add
sub
sbb
jecxz
jb
sarb
loopne
adc
sbb
testb
hlt
xor
lahf
mov
inc
gs
stos
mov
mov
testb
cmpsl
mov
icebp
inc
cld
pop
and
inc
jmp
mov
loopne
add
pop
cltd
sbb
dec
in
sti
pusha
lods
out
and
ret
push
sub
rcrl
sbb
lahf
lods
mov
mov
sub
sbb
mov
pop
cmpsl
mov
jecxz
in
inc
filds
cmp
adc
sti
data16
aas
cmpsl
loope
and
fcomps
lcall
aad
push
mov
sub
lds
sub
sbb
add
aad
sahf
jmp
fnsave
push
mov
pop
jno
and
cltd
dec
jle
cld
das
pop
push
arpl
mov
pxor
sub
cmp
shll
push
jmp
or
test
js
xor
jmp
sbb
sbb
lds
sbb
xchg
inc
inc
cmp
cmp
inc
mov
adc
adc
pop
add
xchg
sbb
fildl
fsub
loope
cmpsb
mov
or
test
inc
push
mov
inc
pop
ljmp
mov
lods
addb
add
bound
sbb
xchg
sub
or
mov
in
mov
pop
push
mov
add
test
jnp
lea
jecxz
xor
aad
inc
out
loop
sahf
jecxz
or
cwtl
loop
cli
cmp
clc
fdivrl
stos
mov
push
daa
sbb
fmuls
adc
adc
call
adc
jmp
aas
or
dec
mov
sahf
or
inc
adc
push
int3
push
insb
cmpsl
call
daa
dec
cmpsl
push
add
testl
std
pop
loop
pop
lea
jnp
aaa
sar
adc
in
test
nop
cmc
test
mov
sub
cmp
mov
cmp
fwait
jecxz
adc
fwait
xor
ffreep
push
leave
popf
or
mov
and
cli
loopne
lds
in
insb
cmpsl
cli
ficompl
mov
in
in
arpl
out
adc
mov
sbb
stc
jne
sbb
push
repz
push
repnz
sub
or
aaa
dec
rorb
sbb
cltd
loop
xlat
sbb
leave
cmp
add
xlat
xor
je
xchg
imul
lock
jp
and
pop
daa
test
pop
adc
sub
xchg
subb
fstpl
shll
je
cmp
and
sub
std
test
and
inc
mov
leave
cli
jnp
and
sub
and
jp
mov
repz
sti
or
loop
add
mov
xchg
jp
add
arpl
data16
dec
fs
icebp
and
jg
fnsave
push
fadds
repnz
out
imul
sahf
jecxz
push
mov
mov
fiadds
mov
aam
xchg
jno
shll
fwait
inc
rclb
mov
push
out
cmp
icebp
in
popa
dec
rcll
cwtl
jns
adc
mov
lahf
pop
push
sub
jecxz
cwtl
and
mov
and
loop
pop
cmp
jnp
test
sbb
add
mov
sti
xor
sub
dec
repnz
bound
lcall
js
repz
cmp
xchg
imul
adc
sbb
sub
and
push
xchg
gs
mov
push
out
in
jmp
xchg
ret
sbb
pop
in
jmp
xlat
out
loop
in
pop
jmp
lods
mov
inc
movsb
lock
jge
sbb
mov
or
mov
adc
lds
inc
inc
adc
repz
pop
mov
clc
add
sbb
xchg
pop
loop
and
repz
loop
shl
in
nop
popf
ss
sbb
push
jle
or
je
into
cmp
leave
gs
inc
dec
fsubrl
pushf
test
call
rclb
fcomps
dec
addr16
fmull
jl
fisubs
ljmp
ficoms
icebp
mov
pop
mov
mov
xchg
mov
popf
push
outsb
movsb
pusha
adc
stos
andb
mov
mov
iret
inc
xor
in
pop
pop
sti
add
mov
in
inc
sbb
out
cmp
dec
xchg
sbb
ljmp
cmp
movsl
icebp
fnstsw
ficoml
mov
cwtl
test
cltd
jnp
push
jecxz
dec
or
nop
fdiv
cmp
ss
add
test
xchg
inc
negb
mov
sbb
arpl
sub
cmp
mov
movsb
and
aas
inc
out
push
lods
in
out
loope
popf
imul
push
mov
notl
aad
adc
add
push
push
out
fwait
ret
wbinvd
sbb
imul
ficomps
push
xchg
mov
adc
cli
clc
mov
shlb
xor
adc
adc
cltd
sti
dec
sbb
sbb
sti
xchg
pop
in
sbb
sub
nop
cmp
adc
fcoms
call
push
sbb
cmp
mov
cmp
shlb
imul
dec
ljmp
xor
fs
mov
daa
repz
pop
pop
sub
jl
sbb
xchg
es
push
jnp
out
xchg
adc
cmpl
leave
imul
imul
dec
aaa
and
dec
out
ljmp
imul
imul
pop
adc
add
push
std
sub
sbb
sbb
mov
mov
fcompl
dec
inc
mov
movsb
test
mov
lea
adc
push
and
push
mov
push
add
cld
push
xor
pop
inc
xchg
xchg
jbe
iret
inc
pop
test
adc
roll
mov
inc
sub
std
or
std
js
enter
jg
outsb
lcall
add
jbe
mov
ror
sub
sbb
mov
cmpsb
adc
cmpsb
ja
inc
das
repz
adc
sbb
rorb
std
decl
sbb
cmpsb
or
cltd
fwait
mov
xor
fsubr
jl
or
sub
add
sub
popf
nop
push
fcomp
lea
loopne
stos
sub
dec
adc
incl
ret
test
pop
xlat
sti
xchg
flds
mov
fsubr
jmp
add
pop
stc
movsl
pop
add
fisubs
test
xchg
dec
sbb
test
lods
lods
insb
pop
jbe
xchg
sbb
or
cmpsb
push
mov
nop
cmpsl
loope
cmp
sbb
adc
rcll
pushf
testb
movsl
leave
dec
loop
or
add
jg
and
loope
testb
loope
ret
jge
jecxz
mov
pusha
repz
lea
jb
or
in
stos
adcl
dec
aaa
mov
xor
cmc
jg
xchg
fcmovbe
aas
add
inc
pop
dec
mov
add
or
in
movsb
out
les
inc
movsl
cld
or
and
sub
jge
sbb
stos
push
sbb
or
xchg
outsl
cmpsl
je
xchg
fnstsw
and
cmp
mov
mov
sti
dec
sub
sti
sbb
insb
mov
mov
lahf
into
sbb
xchg
rcl
mov
data16
scas
pop
mov
xchg
ss
inc
stos
ret
mov
in
lods
sbbl
gs
pop
das
jnp
sbb
or
xchg
sub
decb
xor
or
or
mov
adc
fisttps
or
cmp
sbb
add
outsb
test
xchg
xchg
loope
mov
popf
imul
mov
push
mov
sub
mov
cmp
loopne
and
fwait
or
xor
loope
sub
push
jle
mov
cmp
xchg
pop
mov
clc
jge
test
inc
push
push
or
scas
fnstsw
ret
mov
adc
mov
sbb
aas
xchg
push
mov
or
mov
mov
js
in
jnp
loop
push
pop
push
clc
lcall
or
pop
fwait
add
xor
mov
cmpsl
dec
sar
loop
mov
insl
out
lcall
cmc
push
lcall
sub
lcall
lcall
stc
cmc
ljmp
aam
jmp
in
lods
xor
fsubrp
hlt
mov
sbb
and
or
sub
and
js
xor
cmp
and
jp
out
adc
ss
roll
icebp
mov
ret
mull
adc
fcmovnu
mov
call
out
cmp
mov
pop
popa
or
aas
sbb
into
jbe
push
or
fiadds
adc
in
mov
movsb
fadds
mov
mov
mov
push
pop
sub
mov
pop
push
jbe
mov
loope
inc
call
push
shr
sub
sbb
std
lahf
xor
xchg
sbb
sti
add
je
mov
stc
notb
cmp
mov
aam
aas
js
inc
dec
and
sti
std
pop
inc
add
inc
or
mov
xchg
test
cmpsl
cmp
loop
and
mov
cmp
jmp
loop
inc
xchg
mulb
fiadds
adc
mov
fisubl
cli
add
sahf
arpl
cmp
inc
and
test
xchg
pop
out
aad
lret
aas
outsl
sbb
mov
rolb
add
arpl
fstl
lds
fs
out
imull
and
add
sti
sbb
pusha
mov
iret
or
sbb
push
and
push
in
pop
aas
push
adc
lock
cmpsb
data16
jp
mov
cld
sbb
or
and
cwtl
sbb
out
les
mov
lahf
lcall
pop
mov
sbb
mov
out
jle
stos
mov
push
and
sbb
test
es
dec
stos
and
lret
dec
mov
add
xlat
ficomps
dec
dec
xlat
or
jle
pop
sbb
imul
lock
repz
in
pop
std
in
dec
mov
mov
inc
cltd
adc
fcompl
mov
loope
push
mov
popf
out
icebp
hlt
cmp
pop
bound
aas
adc
mov
xor
dec
mov
cld
into
add
mov
push
leave
jmp
sbb
sbb
dec
sbb
or
out
dec
ja
mov
ljmp
jmp
mov
pop
add
mov
cmp
leave
sub
hlt
pop
cmpl
sub
inc
mov
aad
andb
cmpsb
pop
jns
mov
push
int
addl
pop
aas
inc
aas
cmc
test
test
and
mov
add
push
add
jnp
push
sbb
push
pop
outsb
in
mov
stc
xchg
clts
lret
xchg
xor
xor
int
sub
jmp
test
push
and
and
sub
aam
sub
mov
fwait
xchg
xchg
dec
jecxz
cmp
jecxz
cli
and
lcall
jge
inc
pop
pop
sarb
and
lcall
into
and
or
add
jb
mov
lcall
js
fs
sbb
das
in
jle
mov
fstl
lret
aaa
test
in
xor
daa
leave
pop
aaa
mov
jb
divb
ja
fisttps
push
push
mov
in
xchg
or
fucom
adc
jge
rcll
push
test
mov
fimuls
adc
and
push
cltd
mov
jmp
jp
pop
cmpsb
mov
loopne
mov
push
test
shlb
jns
mov
inc
jge
fsubl
xchg
jecxz
xchg
mov
lahf
scas
int
shlb
adc
push
mov
cmp
ret
cmpsl
dec
addl
inc
push
xchg
pop
sbb
loope
sub
xor
inc
aad
jns
jnp
sbb
sub
lea
fucom
inc
jns
cmp
pop
sbb
enter
sub
imul
pushf
icebp
in
and
adc
loopne
cli
ja
cs
int
test
mov
mov
sahf
aas
pop
xor
repz
mov
pop
inc
sbb
mov
movsb
cmp
push
pop
insb
imulb
popf
add
adc
pop
testb
and
add
shll
jb
mov
shrl
imulb
mov
rcrl
or
setl
stos
mov
test
leave
std
jmp
shl
mov
and
repz
jecxz
mov
pop
pop
adc
inc
in
xchg
data16
dec
aas
lret
jge
es
pop
in
fwait
test
imul
int
adc
push
jnp
add
out
out
adc
sbb
pop
pop
into
pop
dec
mov
push
mov
sbb
clc
fwait
or
fs
out
mov
loope
ud0
mov
jp
inc
sbb
call
pop
es
rcrl
clc
fcompl
cli
mov
sbb
add
jmp
lods
stos
push
and
mov
rorb
lods
pop
rolb
xchg
scas
inc
xor
mov
mov
dec
mov
fnsave
push
jmp
addl
sahf
nop
pop
add
ret
test
frstor
xchg
mov
mov
imul
and
mov
and
clc
sub
jns
cli
sbb
add
xchg
or
or
pop
pushf
mov
adc
add
mov
mov
jno
out
cmp
add
and
cmp
repnz
daa
fcompl
pop
int
or
xor
mov
addl
pop
adc
adc
xchg
push
cmp
test
xchg
jmp
add
aad
ret
sub
pop
pop
addl
mov
rcrl
xchg
pusha
adc
in
sbb
jle
jle
loop
adc
cwtl
clc
xchg
jnp
or
xor
or
popf
and
push
add
and
movsb
in
pop
pop
repnz
or
xchg
int
and
rclb
cli
push
jae
into
loope
jp
icebp
sbb
sub
cwtl
sbb
mov
repz
and
in
cmp
ljmp
rcrl
and
inc
lcall
adc
sub
repz
cmpsb
lahf
test
xor
test
cmp
jns
or
icebp
addb
fwait
cmc
pop
pop
inc
sub
je
fstpt
mov
and
movsb
add
cwtl
inc
test
sub
out
rcrb
stc
mov
loop
movsb
push
jae
or
jo,pn
inc
fstpl
dec
cli
push
jns
cmp
sbb
xchg
or
int3
jecxz
and
in
loope
shlb
mov
mov
mov
int
out
mov
pop
fisttpll
cld
inc
adc
mov
enter
sbb
and
in
pop
cwtl
xchg
sub
hlt
add
popf
in
scas
int3
insl
mov
adc
inc
loope
rcrl
jne
dec
movsb
jle
negl
xchg
loopne
testl
in
mov
dec
push
xor
xbegin
jno
and
add
push
push
xchg
lea
adc
or
jl
js
mov
pop
push
fsubs
or
mov
jmp
xchg
shl
adc
sub
mov
aad
leave
std
mov
mov
lret
lcall
pusha
push
shll
adc
lahf
stos
ja
fs
fwait
sarb
xchg
ja
jl
hlt
and
jne
sub
ljmp
fstp
adc
insl
cmpsb
sbb
push
cmp
leave
icebp
mov
cmc
jmp
dec
adc
inc
push
or
dec
aas
nop
mov
aad
sub
xor
push
shrl
into
push
add
adc
mov
and
lea
out
fwait
inc
push
push
insl
notl
mul
jp
nop
xor
xchg
jb
push
jne
cmp
dec
mov
imul
popa
pop
mov
inc
mov
daa
sbb
xchg
sbbb
adc
xchg
dec
addl
mul
jmp
add
or
sub
jne
mov
push
mov
test
fwait
cs
mov
and
int
inc
and
loope
loop
arpl
pusha
idivb
test
mov
insb
sbb
cwtl
jmp
jge
jle
sub
lods
lret
xchg
sbb
lcall
aaa
jge
loopne
cld
sbb
or
adc
mov
inc
mov
mov
lcall
iret
nop
xchg
and
jns
sbb
adcb
lret
dec
jno
and
dec
fsubp
pop
ret
daa
clc
sbb
fsubs
mov
loopne
mov
fwait
leave
pushf
adc
sub
cwtl
or
pop
and
mov
push
and
shlb
and
inc
sub
push
push
inc
ljmp
test
aas
fidivrs
imul
adcb
call
xor
les
insl
repz
push
cmp
inc
jmp
paddusb
fbstp
rcl
jb
out
inc
fs
push
inc
loop
cld
call
cld
jnp
pusha
rolb
ja
ret
inc
cli
mov
std
dec
mov
and
scas
inc
or
pop
push
shll
in
xchg
out
jne
push
and
imul
inc
jnp
pop
std
repnz
lock
push
sbb
loope
add
fsubp
jmp
clc
add
push
shl
add
and
test
and
sbb
inc
jo
stos
and
add
xor
leave
or
or
scas
out
test
push
adc
and
jbe
add
adc
jbe
mov
push
cmp
call
cltd
in
xchg
sbb
and
inc
jmp
repz
les
or
pusha
mov
pop
push
and
push
inc
dec
xchg
sub
sub
int
sahf
dec
cmp
popa
mov
push
imul
jge
negb
fabs
imul
aas
cld
dec
pop
fistpll
adc
cs
ljmp
gs
fstpt
arpl
daa
mov
push
and
xchg
and
out
inc
mov
iret
fsubl
dec
or
mov
cld
in
sub
fdivrp
xchg
jns
push
arpl
ja
out
xchg
inc
aaa
sub
add
sbb
mov
add
xchg
jp
mov
inc
cs
mov
cmp
inc
es
rcll
mov
jae
fdivrs
add
pop
ljmp
cld
adc
inc
sbb
push
scas
push
sbb
popf
inc
repnz
cmp
pushf
fldt
sbb
mov
add
or
cli
cmpsl
cmp
fimull
jmp
xchg
addb
dec
dec
cld
pop
incl
jns
nop
inc
shl
sbb
addl
std
orl
cld
into
pushf
mov
jg
jns
ret
addl
adc
push
push
sub
adc
pop
mov
int3
call
sbb
mov
jg
pop
pop
sarl
cli
xor
push
and
sbb
rorl
bound
adc
pushf
mulb
dec
xchg
push
in
lret
fmull
pop
pop
loope
xlat
fnstsw
inc
imul
shrl
mov
cmp
imul
in
sbb
aam
ficoms
mov
pop
jecxz
sbb
out
rorl
popf
lar
jge
shll
stos
es
mov
inc
sub
and
pop
cltd
test
test
sbbl
es
inc
add
jbe
js
cli
sbb
cmc
dec
lods
call
xlat
cli
push
sub
push
jmp
imul
push
xchg
pop
loop
ret
add
push
popa
loop
testb
shlb
and
lret
lcall
ss
lea
repnz
push
loope
mov
imul
shl
and
sti
and
or
or
ja
mov
fldcw
test
aam
test
call
add
stc
pop
fisubl
out
mov
and
adc
shr
jl
cmp
sbb
std
jecxz
push
jmp
jne
and
aam
cmp
add
sub
test
sbb
into
pop
cs
xchg
fldt
out
arpl
xlat
movsb
insl
or
fisttpl
sbb
adc
pop
pop
xchg
cld
mov
cmc
xchg
sub
mov
pop
xor
adc
xchg
mov
lea
and
arpl
dec
mov
iret
xchg
cwtl
das
pop
lods
add
and
fistps
mov
xchg
jmp
sbbb
ljmp
adc
call
sbb
and
jbe
jp
int
dec
andl
lock
inc
pop
jl
test
ljmp
notl
mov
xor
mov
pop
mov
and
dec
movsb
push
push
dec
inc
pop
xor
in
imul
push
mov
jle
orl
xchg
push
sbb
jge
inc
xor
pushf
mov
test
xchg
imul
push
rorl
or
push
addr16
mov
push
fldl
pop
andl
sub
cmc
sbb
sbbb
xor
add
loop
fiadds
mov
nop
fadd
xchg
int
or
addr16
sbb
mov
jbe
pop
add
shrb
xchg
aaa
mov
mov
pusha
scas
and
push
subl
mov
loope
push
lods
and
push
idivb
sbb
and
mov
mov
mov
or
xchg
popa
and
xchg
mov
sbb
xchg
ljmp
ljmp
and
inc
ret
cmp
mov
dec
scas
lea
in
inc
pop
jno
push
sub
xchg
or
or
and
push
pop
mov
fidivl
mov
loope
sbb
in
mov
mov
jg
mov
call
dec
imul
dec
outsl
lods
fdiv
cmc
mov
loopne
push
popf
mov
lea
and
paddw
xchg
popf
jg
arpl
adc
cmp
lock
stos
div
inc
ret
pop
push
sub
cmp
clc
push
xlat
or
sbb
add
push
cmp
mov
xchg
loopne
icebp
push
movsl
test
out
les
arpl
inc
clc
jns
pop
jg
test
fbstp
and
mov
es
nop
add
add
jg
push
dec
mov
jg
int
pushf
jecxz
sbb
into
xchg
dec
scas
mov
cmc
lahf
dec
mov
ljmp
xchg
icebp
ds
mov
fsubrl
popa
or
es
stc
test
adc
ds
sub
jno
cmpsl
and
adc
popf
das
icebp
sub
adc
filds
fwait
out
loopne
xchg
jns
mov
ljmp
scas
mov
icebp
cltd
adc
dec
lea
sahf
out
incb
imul
insl
xchg
into
xchg
cli
cmpsl
inc
lods
test
sbb
jb
movhps
adcb
xorl
push
adc
data16
cmpsb
mov
mov
lods
and
adc
addr16
std
inc
xor
mov
inc
inc
imul
lret
mov
mov
stos
imul
xor
pop
shl
adc
cmc
mov
or
xchg
inc
jno
mov
jp
outsl
add
sbbb
orb
adc
push
sbb
sbb
test
cltd
jns
push
push
ret
stos
dec
aad
js
sti
inc
cmpb
sbb
stos
and
pop
out
lds
js
stos
mov
popf
addr16
cmp
adc
sets
call
xchg
cld
stos
xor
js
shl
xchg
sub
cltd
jmp
cmp
arpl
inc
and
dec
bound
push
bound
jg
pop
repz
ljmp
or
push
fstl
test
bound
int
xor
cli
sub
sbb
pop
std
and
cli
and
jns
mov
out
movsb
sbb
adc
pop
sub
mov
jmpw
psubw
and
daa
es
and
dec
cmp
dec
fildll
aad
and
cmp
pop
or
dec
jecxz
pop
xor
repnz
insb
pop
dec
xchg
add
icebp
test
iret
jp
jo
icebp
sti
loop
push
sbb
dec
hlt
mov
adc
push
pushf
mov
fistps
pop
mov
js
cwtl
arpl
and
cmpsb
rcll
icebp
jb
dec
test
stos
hlt
xchg
and
mov
push
bound
mov
jae
adc
stos
pop
mov
adc
int
jns
sub
pop
xchg
mov
aaa
ss
fwait
add
adc
arpl
inc
inc
mov
mov
fcompl
pushf
mov
jl
sub
cmpsb
int
sbb
imul
jge
or
pop
lret
lock
mov
out
lret
or
jecxz
jnp
daa
mov
aad
bound
push
sbb
test
sub
push
hlt
mov
notl
cld
xchg
and
imul
jns
mov
fwait
adc
cltd
sbb
sub
jo
or
jns
inc
pop
hlt
fisttpl
cwtl
mov
test
lret
or
movsl
sti
sbbb
add
or
sub
mov
adc
sbbb
mov
mov
pop
adc
pop
jge
cld
int
repz
std
dec
mov
jg
cmpsl
sub
push
mov
sbb
rorb
and
pop
stc
mov
inc
rcrl
push
and
cmpsb
push
jp
adc
nop
mov
loope
or
xchg
sub
pop
fildl
loope
stos
aas
jecxz
add
adc
push
cmpsb
fstl
das
adcb
xor
rolb
inc
dec
inc
adc
xchg
sbbl
rcl
cwtl
movntq
xchg
and
dec
mov
loopne
xor
adc
loope
add
push
or
dec
fcompl
pop
sbb
push
shll
push
add
push
in
shl
and
jg
add
pushf
push
jmp
rcrl
dec
jns
jl
shlb
inc
daa
sbb
sbb
ljmp
out
ret
xchg
cmpsb
adc
mov
xor
lea
negl
bound
adc
aas
ret
int
test
imul
imulb
sub
push
and
std
cmp
movsb
in
movsl
pop
push
xor
imul
adc
js
addb
sub
sbb
sbb
cmpb
stc
add
in
push
lcall
adc
pop
mov
ret
lods
cmp
jnp
cltd
pushf
cmpsb
sbb
mov
ret
icebp
jl
rcrl
enter
push
jge
sbb
enter
sbb
and
mov
ljmp
jns
mov
stc
mov
jnp
in
xor
repz
xorl
mov
stos
mov
stos
cmp
and
iret
sarl
mov
and
nop
jp
mov
arpl
ret
hlt
movsl
add
jae
pop
jbe
int
hlt
pop
mov
test
rol
inc
mov
aaa
addr16
std
cli
popf
pushf
jbe
add
lods
jmp
add
mov
sbbb
loopne
xchg
cmpsb
and
jp
pop
sbb
adc
scas
cltd
test
fistpl
sti
enter
sbb
cmp
and
sbb
xchg
aaa
fcoms
push
inc
int3
xchg
push
pop
xor
cmpsb
xchg
pop
dec
cwtl
das
cli
cli
sbb
jmp
dec
xor
loope
jnp
in
std
cwtl
cmpsb
pop
mov
repnz
mov
out
pop
push
add
test
sbb
mov
dec
or
popa
adc
sbb
jecxz
js
clc
imul
add
sahf
loop
and
mov
pop
or
fisubrl
and
jnp
sbb
in
mov
cmpsb
test
sbb
icebp
fnstenv
cmpsb
xchg
jecxz
lods
lea
adc
sub
mov
mov
das
lea
shll
mov
andl
mov
js
pop
int3
shlb
pop
popf
lcall
repz
in
push
aas
adc
cli
int3
sbb
inc
sbb
sbb
add
in
jmp
ljmp
repz
inc
jle
inc
sub
sbb
rorb
lret
fsubl
mov
jne
cmp
in
mov
sbb
push
inc
adc
lock
int
jp
inc
inc
or
mov
push
pop
xchg
mov
sbb
mov
mov
push
mov
fcmovnb
pop
pushf
je
das
mov
lcall
jecxz
lahf
mov
and
push
mov
mov
sbb
lret
lret
mov
shr
sbb
lret
and
pop
sti
das
or
and
and
and
ss
mov
dec
sti
shrl
or
add
bt
pop
pop
jnp
lret
and
pop
jle
jnp
add
sub
mov
std
in
sbb
inc
and
dec
rorl
push
icebp
xor
or
in
pusha
in
inc
push
ret
mov
jle
and
icebp
add
pushf
xchg
push
pushf
nop
adcb
cltd
ja
repnz
std
icebp
mov
notl
rcll
rcrb
test
int3
dec
jmp
inc
pop
test
inc
imul
mov
sbb
jg
pop
pop
loope
mov
jp
mov
push
push
ret
scas
das
or
fcoml
ror
fistpl
test
sub
pushl
pop
fisttpl
push
sub
adc
jns
add
pop
add
adc
test
aad
xchg
jnp
mov
mov
sbb
std
fs
imul
pushf
or
ret
repz
adc
sub
sbb
dec
jecxz
scas
mov
xor
rcll
push
mov
sti
pop
call
out
fnstsw
xchg
movl
loope
aam
push
subl
fdivl
jle
mov
shlb
clc
or
addr16
pop
sbb
jle
sub
aam
push
xlat
bound
pushf
inc
jge
pop
push
xchg
sub
stos
jp
mov
lock
or
jnp
test
enter
inc
psrlq
push
frstor
mov
pop
std
and
aaa
roll
inc
lods
mov
mov
jns
gs
jnp
les
xchg
pushf
cmp
inc
outsl
and
cmp
pop
pop
push
les
jnp
pop
and
cltd
jmp
lahf
ret
in
jl
sbb
mov
jmp
inc
mov
test
mov
and
pop
mov
sbb
xor
imul
pusha
dec
aam
imul
adc
gs
mov
rorb
in
sub
jo
push
outsb
imul
sbb
leave
sub
iret
cwtl
pop
adc
jle
iret
lret
jno
sti
pop
sti
push
rcrl
fisubl
cli
js
hlt
inc
ret
or
sar
sbb
push
cli
pop
and
sbb
bswap
sarb
sbb
out
loop
shrb
jge
fwait
dec
sti
add
std
mov
std
sarl
andl
sub
push
or
lcall
js
dec
jmp
dec
mov
stc
std
mov
adc
adc
scas
add
cld
push
dec
sti
mov
mov
mov
pop
notb
mov
adc
enter
mov
mov
jb
ds
lahf
and
cmpsl
sbb
lret
xchg
and
cwtl
sahf
inc
mov
in
mov
scas
jnp
js
xchg
ret
out
imul
rcrb
cltd
loop
data16
sbb
out
mov
add
cld
enter
ret
ja
aas
lods
sub
adc
adc
mov
test
movsb
imul
xor
fbstp
mov
push
jbe
xchg
shlb
push
arpl
test
jmp
into
aaa
mov
sbb
repz
xchg
fwait
test
sti
inc
mov
push
xchg
sti
cld
jbe
jae
lods
push
out
arpl
out
test
xor
ja
push
xor
inc
in
cld
dec
into
and
xchg
lcall
inc
mov
push
lcall
into
push
jns
sub
je
and
mov
mov
xor
adc
mov
push
jnp
cmpsl
cmp
rcrl
mov
inc
inc
push
repz
jp
cmp
icebp
xor
jne
pop
aas
out
add
shrb
sub
lahf
add
lret
adc
je
fwait
mov
je
aaa
mov
mov
fistps
xchg
lahf
fists
adc
sti
shrb
pop
cmp
shl
aam
es
lock
jnp
jo
inc
cmpsb
sub
test
inc
sub
dec
ret
out
mov
push
imul
cmp
or
data16
add
push
mov
mov
cltd
les
mov
sbb
sarl
push
imul
sbb
add
mov
loope
std
fs
movsl
pop
add
mov
pop
out
repz
sti
in
std
lcall
loope
lcall
mov
int3
fnsave
cli
push
sbb
pop
and
cmp
or
add
popa
add
shl
cmc
push
mov
pop
sahf
fiadds
ret
add
inc
lcall
or
inc
xor
jp
adc
mov
test
movsb
xor
sbb
lret
adc
cltd
test
mov
inc
and
test
mov
mov
pop
lcall
aad
cli
decl
loope
push
sbb
movsb
popf
dec
pop
adc
neg
lock
cltd
push
es
fwait
xchg
mov
adc
mov
mov
repz
jle
pop
inc
pop
cmp
leave
xchg
aad
xacquire
jb,pn
mov
sbb
dec
sub
popf
stos
frstor
or
mov
test
xor
inc
scas
loopne
or
popa
sub
pusha
jo
pusha
adc
sti
add
repz
add
mov
pop
adcl
insb
xchg
inc
je
mov
pop
pop
jne
push
mov
add
das
and
and
or
push
pop
mov
dec
mov
inc
into
mov
xor
lret
pop
pushl
les
dec
call
mov
cmpsl
push
push
or
das
xchg
pop
jl
mov
inc
dec
push
frstor
stc
fstpl
add
cltd
jmp
jecxz
push
push
push
xchg
or
les
imul
add
push
sub
aaa
xchg
rcrl
out
dec
mov
jle
cmp
pop
mov
xchg
inc
and
or
ds
fcoms
outsb
jb
mov
scas
test
test
add
sti
into
aam
clc
mov
test
xchg
pop
notb
leave
sbb
ds
int3
pop
loopne
insl
push
call
icebp
repnz
push
lock
fnstcw
push
nop
ret
push
stc
mov
sar
or
sarb
out
inc
inc
xchg
hlt
push
sbb
push
fsubs
jo
ljmp
shlb
ficomps
push
adc
pusha
push
xor
xchg
lahf
clc
push
mov
adc
fsubl
data16
fyl2xp1
cmc
leave
or
jmp
idivl
cmpsl
or
inc
ja
test
push
sub
std
or
imul
pop
sbb
rorb
cld
add
push
adc
add
mov
daa
push
xchg
cli
repz
mov
loopne
divb
add
push
inc
mov
cmc
data16
jmp
sub
sbb
test
dec
in
adc
in
pusha
cmp
mov
ret
inc
mov
fwait
cmp
and
mov
nop
out
pop
nop
cmp
and
inc
fsubs
mov
xor
mov
jle
and
pop
add
pop
fnsave
xchg
incl
mov
test
dec
cmc
jb
push
push
divb
or
xor
mov
mov
mov
inc
push
inc
and
fcompl
xchg
cli
arpl
cld
jb
jg
pop
pop
sbb
xor
push
cmp
adc
xor
loope
mov
add
xchg
sbb
add
sbb
mov
inc
jge
cli
or
lods
sbb
dec
sub
je
xchg
lcall
mov
or
std
and
call
pop
sub
in
rep
aam
out
test
mov
or
scas
fwait
sub
rcll
or
arpl
out
mov
sbb
arpl
mov
repz
pusha
clc
mov
js
pop
push
fpatan
ret
inc
push
jae
data16
cmp
sub
xchg
pop
jmp
cltd
out
push
rcrl
aad
data16
inc
out
xchg
pop
mov
pusha
lods
jo
xchg
adc
sbb
add
xchg
pop
clc
push
xor
add
scas
jmp
cs
int3
sub
jecxz
repz
lock
call
jp
in
add
ficompl
test
insb
push
pusha
stc
push
add
xchg
mov
loope
pop
outsl
sbbl
pop
jle
jmp
fsubl
orl
daa
int
stc
test
xchg
mov
mov
add
sahf
loop
mov
nop
adc
ret
adc
pop
pusha
mov
mov
int
or
in
stc
cltd
ret
dec
imul
sub
sarl
nop
rorl
sub
je
adc
fwait
popf
mov
jae
std
dec
cmp
shll
and
push
lods
imulb
in
inc
xor
jne
xchg
js
mov
arpl
in
dec
mov
add
testb
cmpsb
and
sub
xchg
fdivrp
xchg
adc
xchg
mov
xor
or
mov
xchg
cli
inc
xchg
mov
jmp
fadds
out
add
or
push
inc
in
cld
pusha
out
fcomps
add
mov
mov
rclb
adc
and
jp
dec
jmp
add
fistl
ja
arpl
or
sub
andb
ret
std
cmc
dec
lock
push
popf
push
clc
add
repz
or
add
and
in
repnz
leave
in
leave
stc
sbb
mov
jp
clc
notl
push
adc
mov
push
mov
pop
add
stos
xor
jne
ret
push
dec
adc
cmp
mov
ficomps
add
and
sbb
push
jnp
sub
frstor
jmp
jmp
add
fxch
cltd
and
out
and
xchg
cmpsb
adc
inc
pop
sub
or
dec
mov
xor
insb
shl
jecxz
jmp
out
js
int3
xchg
jnp
dec
aas
xor
mov
mov
arpl
rcrb
mov
icebp
add
int
adc
lock
jno
push
imul
xchg
mov
xlat
and
sarl
adc
cmp
je
cmp
adc
repz
cmp
into
mov
fidivl
push
sbb
push
call
mov
dec
jns
adc
fimull
lods
aam
repnz
out
cli
in
sbb
cmp
sbb
pop
mov
push
inc
mov
xor
mov
mov
rcrl
cwtl
ficoms
lahf
adc
js
imul
frstor
adc
ret
lds
arpl
lea
jge
xchg
imul
loopne
mov
push
jmp
dec
adc
punpcklwd
pusha
jl
adc
jl
sbb
out
and
sub
cmpsb
cmpsb
lock
loopne
sub
or
mov
out
add
arpl
sbb
and
loope
jmp
adc
push
xor
adc
lock
pop
add
cmc
adcl
sub
cltd
push
pop
push
mov
adc
pop
bnd
and
xchg
inc
cltd
jmp
test
adc
pop
pminub
xchg
stos
ret
cmp
hlt
shrl
dec
push
test
in
sahf
fists
popl
loope
push
lock
push
out
xchg
popf
sbb
and
leave
decl
imul
jecxz
push
jae
test
in
data16
dec
call
push
dec
imul
or
faddl
addl
push
jno
sub
dec
nop
push
js
xchg
pop
mov
jle
cli
jmp
sbb
sbb
mov
push
or
lods
jl
xor
add
clc
rcrb
jbe
sbb
xchg
xchg
ja
add
inc
pop
fnstcw
push
pushw
push
test
pop
popa
inc
rcl
jb
jg
xchg
out
inc
or
pop
dec
cltd
adc
outsb
sbb
fstpl
mov
inc
pop
pop
std
sahf
add
leave
inc
fimuls
aam
or
add
add
leave
mov
test
mov
cmc
lret
add
aad
inc
adc
lds
or
in
loope
inc
rol
cld
addb
add
repz
incl
imul
imul
and
sbb
and
cmc
cld
jle
lcall
mov
data16
sbb
sub
add
loope
xor
hlt
push
cld
mov
test
mov
ret
push
idivb
or
push
adc
mov
fisubl
and
lea
orb
loope
ja
pop
divb
mov
rcl
test
sbb
sbb
lgdtl
add
or
jecxz
scas
inc
push
lea
xchg
data16
cld
inc
std
aaa
pop
add
lock
cmc
lahf
loopne
pop
aad
mov
mov
mov
lret
stos
mov
mov
fsubr
cmp
sub
mov
jnp
fisttps
mov
test
mov
shrb
and
cltd
fcompl
pop
lock
fisubrl
inc
out
ret
pop
push
mov
mov
or
popaw
shlb
fisubs
lahf
ret
call
lcall
jmp
mov
xchg
data16
push
or
add
xchg
pop
push
cmp
imul
fcompl
addr16
or
and
mov
lods
pop
shl
faddl
cmpsb
pop
lods
aam
sub
stos
inc
lds
loope
and
in
jno
imul
sub
jae
nop
shlb
ret
repz
shl
lods
or
cmp
xchg
icebp
int
daa
stos
sub
leave
repnz
push
jne
sbb
cli
js
lods
daa
out
movntq
sbb
mov
shl
in
sbb
js
push
cmp
jp
pop
mov
arpl
push
mov
sub
repz
popa
cld
cmpsb
inc
icebp
pusha
adc
and
scas
jecxz
repnz
or
gs
fildl
cmc
scas
test
addr16
dec
and
jp
mov
jae
ficoml
jecxz
ret
roll
mov
dec
adc
jp
aad
xchg
adc
sub
sub
sbbb
test
mov
or
cli
int3
jle
or
cld
jle
pop
push
adc
mov
push
mov
scas
ret
or
cmp
cmp
jbe
rcrl
ja
xor
out
pop
push
clc
adc
imul
dec
push
mov
push
push
cmpb
or
mov
sbb
push
adc
push
stc
jecxz
dec
rcl
lods
mov
dec
mov
and
cmp
xor
movsb
arpl
lahf
pop
push
xchg
lea
xchg
pop
pop
repz
or
mov
xor
lcall
push
out
fwait
sahf
cmc
xchg
out
mov
sahf
stc
ror
add
mov
push
jmp
hlt
inc
mov
and
test
insl
adc
sbb
cmp
jl
jnp
mov
stos
ret
insl
lret
hlt
mov
out
das
cmp
mov
in
lods
int
sahf
sub
mov
xor
adc
dec
cmp
sahf
mov
xor
mov
jmp
clc
and
jo
fdivrl
cwtl
push
xchg
mov
cmc
cmpsb
push
out
dec
mov
clc
pop
jg
push
mov
out
and
repz
mov
hlt
mov
pop
div
loopne
jae
jbe
push
test
mov
das
nop
rolb
aam
push
insl
cmpsl
dec
in
jl
into
aaa
and
out
push
jns
pop
icebp
shll
lods
pop
cmpsb
mov
sbb
movsl
inc
adc
pop
popf
mov
mov
adc
xor
test
cmpsl
cld
mov
inc
push
dec
jp
xchg
pop
imul
inc
and
xor
mov
loope
lods
mov
xchg
xchg
lock
mov
pushf
inc
aad
add
push
ret
sub
repz
dec
ljmp
adc
and
and
fimuls
imul
sbb
incb
cmpsb
xchg
sbb
dec
jmp
sar
cwtl
mov
push
xor
pop
jns
push
jmp
filds
inc
mov
mov
shlb
cmp
mov
cld
scas
jp
sub
mov
loope
mov
mov
loope
jb
sbb
mov
fwait
mov
inc
mov
popf
jge
dec
ljmp
out
repnz
sbb
and
int
mov
jne
sbb
mov
out
mov
cmp
push
cmp
jle
jns
add
sbb
ja
jge
ret
adc
mov
mov
xor
add
jnp
jp
mov
mov
push
pushf
daa
mov
arpl
out
enter
mov
adc
inc
rcll
stos
pop
sbb
pop
push
push
mov
pop
std
lahf
pop
aaa
push
inc
clc
icebp
xchg
sbb
repz
movsl
push
stc
fisttpll
popf
repz
popf
inc
add
in
outsb
int
in
mov
popa
scas
rorl
sub
cmp
add
add
cli
push
outsb
icebp
divl
rorb
lahf
pusha
loope
mov
ret
loopne
cmp
in
mov
cli
jle
leave
jns
ljmp
mov
mov
pop
mov
adc
loope
sbb
inc
loop
xchg
push
jns
xor
out
shlb
mov
xchg
cld
mov
add
jno
and
in
adc
pop
lds
pop
adc
xchg
sub
outsl
or
out
fdivrl
int
outsb
subb
mov
add
je
jg
pop
mov
in
pop
ja
in
mull
push
pushf
rcrl
jnp
loop
sbb
roll
cmp
pop
fcomps
and
outsl
loop
mov
insl
add
jns
pushf
mov
push
push
push
jecxz
xchg
pushf
insb
cmpsl
jl
inc
scas
add
in
movsl
stos
cli
add
enter
mov
sub
jl
push
lock
push
inc
pushf
mov
jp
push
rep
cmp
test
xor
pop
xor
mov
push
mov
push
out
cli
add
mov
push
xor
add
mov
inc
push
repz
jnp
sbb
sbb
mov
lock
pop
es
test
push
pop
fucomp
sbb
das
and
add
inc
pop
xor
jg
mov
mov
dec
iret
inc
pop
pop
add
fidivrl
gs
pop
xorb
testb
jecxz
ljmp
or
mov
sbb
sti
loope
add
inc
in
cwtl
jnp
mov
jecxz
fwait
int
loope
lods
fadds
aad
test
jle
repnz
jnp
mov
movsl
xchg
jp
mov
pop
ret
fistpl
add
and
dec
and
sbb
jne
add
push
sbb
ljmp
and
pop
mov
cltd
addl
aaa
fiadds
push
lcall
push
lea
loop
neg
mov
mov
roll
mov
and
adc
jmp
fwait
inc
sub
cltd
out
add
hlt
push
or
pop
ficompl
sbb
in
std
cmp
add
sbb
mov
add
leave
and
arpl
jmp
es
or
and
mov
sbb
cmp
out
cld
sarl
mov
aad
fsubp
sbb
divb
aad
add
loope
loope
mov
sbb
xor
mov
sbb
mov
in
fistps
pop
repnz
push
stos
push
and
shl
notb
cld
sbb
nop
out
jge
stos
ret
pop
push
leave
and
sbb
and
rol
mov
inc
add
sub
inc
sbb
clc
cs
pop
mov
and
int
adc
mov
sti
test
fisttps
jnp
popf
popf
jne
aaa
cmp
sbb
pop
xchg
push
or
push
insb
pop
lret
cmp
ljmp
adc
cmp
dec
jb
hlt
adc
leave
fsubl
and
jle
sbb
mov
packssdw
les
test
push
fs
cmp
repz
push
aam
sbb
in
loop
xor
mov
in
sahf
arpl
shrl
das
add
pop
sbb
xchg
pop
aad
cmp
xchg
mov
xchg
andb
xchg
sahf
lret
imul
adc
faddl
mov
sub
cmp
imul
add
jmp
mov
mov
dec
mov
out
cs
cmp
add
fmull
pop
in
jb
lcall
sub
pop
inc
push
cmpsl
sarl
test
cmp
and
xchg
xchg
out
xlat
lret
les
push
mov
push
sbb
sbb
loope
stos
call
push
mov
addr16
out
pop
cmp
or
xchg
mov
and
mov
inc
jp
stos
and
cli
pop
pusha
repz
mov
test
push
hlt
mov
xchg
mov
push
push
sti
mov
push
mov
pusha
adc
lcall
mov
loopne
cmpsl
mov
repz
mov
jmp
jmp
int3
pop
xor
popf
mov
sub
sub
and
ror
popa
ljmp
loope
pop
mov
ljmp
scas
stos
sbb
das
ljmp
int3
adc
loope
push
jbe
test
sarl
and
xchg
push
mov
fwait
test
pop
sbb
jmp
xchg
cmp
and
out
fwait
xorb
adc
rolb
xor
xorb
dec
inc
fmuls
ljmp
lret
sbb
hlt
add
cmpsb
sbb
addr16
pop
push
iret
lock
shufps
xchg
xor
sub
xor
test
jne
sbb
andb
dec
push
fdivr
sbb
icebp
mov
leave
std
pop
js
inc
std
inc
jo
xchg
pop
mov
sbb
push
or
aam
orb
or
cmp
notl
pop
push
sbb
xor
arpl
jge
ss
xchg
scas
mov
mov
mov
fsubrs
std
fdivp
pusha
mov
cmp
mov
sti
add
mov
test
pop
test
xlat
loop
lret
out
ror
arpl
daa
pop
addb
ret
push
push
add
jle
dec
std
insl
adc
add
call
adc
sbb
mov
adc
loop
cmpsl
loop
push
int
pop
jp
movb
cli
pop
mov
fcomp
or
shll
and
mov
mov
jl
sbb
jmp
mov
movsb
or
rorb
loopne
add
mov
mov
mov
add
rcrb
adc
cmpb
xchg
scas
push
das
mov
and
add
adc
cmpl
fs
sbb
xor
dec
ret
push
and
adc
mov
add
sbb
pop
std
loope
adc
js
inc
or
scas
jns
mov
cltd
jns
mov
adc
std
or
push
push
mov
pop
pop
push
mov
and
jo
rcll
sbb
movsl
xor
pop
inc
mov
and
enter
add
jbe
add
cmp
sbb
adc
or
loopne
pop
add
adc
lods
cmp
xchg
or
or
aas
sbb
sbb
fst
mov
cmp
mov
push
jg
push
and
cmp
sbb
sub
mov
stos
in
sbb
cmp
loope
popa
sbb
jbe
dec
rcrb
adc
lahf
cmp
popf
jbe
sub
mov
pop
xorb
adc
addr16
in
sbb
mov
pop
std
lds
add
pusha
movb
popa
int
sub
je
adc
stos
popa
cwtl
aam
cmpsb
sbb
pop
mov
sub
xchg
jp
bound
iret
mov
sub
loope
push
cmpsl
aam
mov
and
sahf
arpl
adc
pop
shl
sbb
cli
into
sbb
and
xchg
cmp
ja
iret
push
popa
push
imul
jle
pop
bound
inc
test
nop
lcall
adc
sub
in
sub
jecxz
pop
push
ss
push
divl
aad
scas
jecxz
loopne
pop
inc
ja
aad
mov
les
in
in
and
inc
mov
or
sbb
sbb
sti
clc
roll
ljmp
dec
pop
cmpsl
pop
hlt
xor
adc
out
rcl
popa
sbb
add
cmp
insb
sti
add
adc
and
cmp
xchg
insb
push
adc
pop
aam
jns
jmp
add
lcall
clc
push
pushf
les
test
and
test
call
add
test
loopne
sahf
imul
pop
mov
push
xchg
xchg
and
shrl
sbb
mov
cld
push
imul
sti
gs
push
sub
inc
iret
mov
mov
stos
and
scas
lea
lcall
icebp
push
adc
popf
lahf
es
mov
pop
xlat
mov
sbb
icebp
and
sbb
fnsave
adcb
sbb
lods
xchg
daa
mov
paddusw
and
es
mov
push
add
mov
ja
mov
cmp
xchg
clc
loope
stos
dec
cmpsb
or
int
rcll
pop
cwtl
pop
or
clc
or
xor
mov
pop
mov
fwait
pop
mov
inc
inc
sbb
cmpsb
xor
jl
inc
jmp
test
jne
add
and
adc
push
or
jl
dec
and
pop
cmp
nop
lds
inc
add
inc
or
push
lcall
or
or
xchg
test
jmp
rclb
sbb
jg
jbe
pop
adc
or
xchg
adc
addr16
dec
std
cld
push
pop
dec
test
jmp
in
std
pushf
andb
stos
andb
fists
fiadds
sar
mov
in
inc
add
loop
dec
sbb
dec
mov
je
dec
mov
out
std
imul
cld
push
jae
movsb
cmpb
fnstsw
and
fwait
jbe
or
mov
subps
fcompl
pop
fcmovnu
pop
add
jbe
xor
les
js
mov
sub
sub
sub
cmp
lock
int3
scas
into
sub
sbb
mov
dec
test
sbb
xorb
or
or
lret
sahf
xor
ljmp
fisubl
and
lret
dec
dec
fsubl
or
ljmp
call
es
fistps
pop
mov
adc
cmc
pusha
adc
test
or
out
inc
test
imul
add
popf
jns
jnp
and
insl
xchg
cli
or
cltd
push
fsts
adc
pop
push
cmc
inc
nop
in
cwtl
test
scas
add
inc
test
adc
test
ret
mov
int
jge
jb
or
test
add
pop
nop
inc
outsl
inc
xchg
dec
pusha
sahf
arpl
sbbb
sbb
jnp
add
stc
mov
rcrb
js
pop
add
fwait
clc
mov
aad
in
pop
adc
jecxz
sbb
jecxz
adc
xor
insb
dec
fistps
out
rorl
imul
or
ret
in
sbb
mov
aas
out
fstl
pusha
cmc
aad
icebp
cmpsl
fildl
adc
mov
adc
fwait
das
sub
lods
mov
add
or
inc
arpl
sti
pop
pop
ss
dec
cwtl
mov
repnz
imul
xor
jecxz
test
enter
inc
add
cltd
xor
pop
or
push
ret
and
lds
stos
jp
sbb
xchg
add
mov
lods
mov
push
loopne
adc
mov
xor
adc
jp
mov
mov
pop
push
adc
xlat
sbb
add
popf
pop
int
jmp
pop
mov
leave
std
mov
scas
sub
fcompl
test
jmp
push
stos
std
xor
loope
movsb
loopne
sub
and
aaa
xor
aas
mov
xchg
test
test
inc
and
andb
pop
add
inc
inc
data16
fxam
imul
xchg
sbb
mov
add
divb
adc
push
adc
out
in
mov
pop
js
xchg
icebp
cs
insb
leave
mov
inc
lds
cli
xor
mov
in
loop
adc
scas
jae
mov
dec
mov
test
scas
mov
rcrl
repnz
adc
jns,pn
inc
ret
adc
adc
arpl
or
ja
jl
xor
xchg
mov
mulb
fcoml
fmuls
js
adc
xchg
or
xchg
stc
scas
cltd
and
or
addr16
imull
cld
std
jno
push
in
cltd
add
and
cmp
popf
fdiv
inc
push
outsl
cld
fstpl
call
jecxz
xchg
into
pop
loope
sub
adc
pushf
and
fs
pop
mov
pop
cld
adcb
mov
add
lock
imul
add
inc
jno
inc
fld
ror
cltd
jns
mov
or
gs
lock
in
test
mov
and
daa
cmpsl
mov
cmpb
and
sub
in
popf
and
loop
out
fisttpll
cmp
sbb
push
xchg
es
in
or
insl
push
sbb
adc
jl
clc
adc
ret
push
frstor
mov
sahf
pop
gs
stc
test
sbb
loope
mov
das
cmc
adc
fucom
loopne
inc
aas
xchg
adc
test
push
and
iret
idivb
ljmp
icebp
enter
mov
or
mov
add
inc
adc
adc
xchg
adc
jl
mov
imul
jg
aaa
adc
xchg
or
cld
add
jno
fdivrl
push
lcall
test
push
mov
sbb
sbb
divb
jecxz
mov
rcrl
fiaddl
adc
sbb
sbb
dec
jns
xchg
xor
iret
push
push
pop
repz
stos
pusha
adc
das
loope
dec
scas
pop
jmp
xchg
push
push
leave
lods
mov
lock
mov
xchg
sbb
loope
add
push
cltd
mov
cld
mov
rcrb
dec
int3
loopne
and
sbb
leave
adc
or
in
incl
add
dec
hlt
pop
mov
fwait
lahf
sub
in
push
push
adc
sbb
sar
in
adc
cmc
js
lds
push
fldl
mov
movsb
push
in
push
lea
loop
jle
imul
std
sub
add
mov
pop
dec
into
xor
push
jmp
xchg
dec
cmp
aas
sub
test
push
xchg
jp
out
rcll
into
xor
pop
test
and
pop
dec
loop
cmpsl
in
cltd
sbb
hlt
push
sbb
jmp
pushf
shll
aam
or
sbb
pushf
imul
mov
sbb
push
xor
out
fwait
dec
xchg
fiaddl
mov
mov
add
adc
andb
mov
mov
or
daa
dec
mov
mov
in
lcall
ljmp
add
pop
repnz
and
loope
std
arpl
test
and
pop
rorl
loope
inc
rcrl
push
sbb
pop
scas
jns
push
mov
xor
mov
mov
enter
inc
mov
jl
sbbb
mov
rcrl
sbb
xchg
adc
sbb
mov
fstpl
sar
mov
sbb
dec
cltd
add
and
adc
adc
in
loop
adc
or
int
add
add
scas
adc
adc
fidivl
dec
mov
mov
jnp
add
mov
ret
pop
stos
fdivrl
in
ret
xchg
lahf
push
xor
pavgw
sarb
testb
xchg
and
mov
scas
movsl
sbb
std
fcompl
jecxz
pop
mov
loop
mov
aam
cmp
cmpsb
mov
pop
into
xor
es
cmp
inc
jecxz
add
inc
jns
jge
pop
add
or
std
xor
inc
jmp
in
inc
sbb
pop
push
xchg
jp
and
loopne
popa
xor
scas
mov
and
jecxz
arpl
cs
pop
mov
xor
add
sub
add
fwait
push
inc
std
es
push
and
xchg
cli
jns
lods
popa
test
inc
ret
push
addr16
jp
pop
jge
cli
andb
xchg
ret
pop
xlat
jmp
push
inc
push
sbb
cltd
mov
xchg
jmp
in
hlt
push
xor
in
std
pop
sub
pop
pop
or
stc
add
test
sbb
scas
cs
loope
pop
out
fwait
mov
hlt
in
adc
sti
inc
jg
inc
and
or
test
inc
mov
testb
cli
dec
pop
push
inc
pop
stc
mov
pusha
daa
sbb
addr16
pop
or
call
mov
inc
pushf
pop
xchg
sub
push
inc
sbb
insb
daa
jp
inc
push
jo
addr16
adc
xchg
fisttpll
sub
mov
cli
outsb
mov
sbb
pop
loope
addr16
or
loope
add
adc
jecxz
imul
in
inc
sub
and
imul
dec
xchg
jmp
ja
add
shlb
addr16
push
repz
addl
mov
lock
mov
dec
fnstcw
push
es
sahf
pop
sbb
int
sbb
cmp
sub
push
pop
movsb
bound
mov
push
and
and
pop
clc
arpl
test
jl
sub
adc
mov
mov
and
jbe
call
test
sbb
mov
sbb
icebp
push
fwait
lahf
mov
lahf
test
sbb
sarl
xchg
jecxz
popf
jmp
push
repnz
addr16
pusha
cmpsl
in
gs
idivb
cltd
pop
cmp
shrb
xchg
dec
mov
sbb
stos
addr16
scas
mov
xchg
sub
lods
in
push
divb
insl
dec
clc
pop
out
jbe
push
je
daa
push
jl
jle
icebp
sub
sti
mov
daa
fdivrl
clc
addl
iret
sahf
cmp
and
mov
cmpsl
xor
test
lea
lods
addr16
xor
rorl
mov
inc
push
xchg
sub
sbb
cltd
jbe
jg
mov
mov
adc
aas
sbb
xchg
pop
dec
add
jns
sbb
jl
add
stc
pusha
fisttpll
mov
inc
loopne
ret
push
aaa
cltd
pop
add
pop
stos
adc
add
jmp
pop
dec
mov
les
mov
mov
sub
mov
or
pop
sub
inc
sbb
and
std
or
xor
xor
cltd
add
or
dec
movsl
mov
add
and
movsl
jno
pop
or
sub
int
outsl
mov
sbb
addr16
insb
sub
enter
out
hlt
push
xchg
xchg
addb
mov
pop
push
lcall
adc
rol
int
sub
or
dec
cmp
push
adc
add
inc
dec
sti
xor
adc
ljmp
pop
mov
mov
push
outsb
inc
shll
push
jp
fstl
daa
add
rcll
pop
or
sub
push
push
and
or
ret
call
int
sbb
xchg
aam
sub
sbb
mov
jp
inc
jb
shll
jge
ja
or
adc
push
shl
mov
inc
push
mov
orb
xchg
xchg
test
push
pop
pop
add
cltd
add
stc
push
pushf
add
xchg
adc
inc
pop
mov
seto
notl
push
nop
pop
add
push
nop
rcll
sbb
mov
outsb
into
lret
xchg
jnp
mov
and
adc
cltd
mov
mov
xchg
or
pusha
test
aas
dec
push
test
imull
pop
inc
negb
mov
cld
and
int
sbb
cltd
pushf
mov
loope
push
mov
push
fstps
ret
mov
push
stc
ljmp
ljmp
push
lods
xchg
adc
int
mov
outsl
pushf
dec
adc
xchg
mov
sti
icebp
add
push
sbb
lcall
pop
inc
push
sbb
or
add
inc
repz
jno
bound
sbb
pushf
ljmp
sbb
scas
aaa
je
pushf
lods
addr16
inc
adc
or
lahf
out
jl
sbb
pushf
inc
sub
mov
inc
rcrl
mov
sub
out
mov
push
sbb
push
loope
mov
pop
clc
test
lock
sbb
stos
faddl
or
inc
push
int
mov
xor
test
pop
inc
pop
popf
push
cbtw
rorb
and
push
lret
and
ret
decl
mov
xchg
fimull
mov
dec
fldenv
xor
mov
sbb
pop
out
shrb
out
pop
mov
in
jp
mov
sahf
cmpl
rorl
mov
dec
dec
add
jae
push
add
pop
and
into
jmp
adc
xchg
sti
pop
enter
sbb
scas
jmp
adc
and
dec
mul
ss
adc
cmp
lods
pop
into
sub
sbb
push
fnstsw
push
pop
add
adc
add
jnp
cmp
pushf
mov
cmp
sub
add
nop
aas
and
push
xchg
fwait
mov
call
out
shrl
sbb
sub
jp
sti
cmpsb
push
testl
cmp
or
add
jmp
nop
inc
ret
xchg
jno
popf
pushf
jbe
fsubl
rol
lcall
jp
and
lds
xchg
jle
lret
mov
cltd
popf
and
add
pop
cmp
out
dec
jp
lea
adc
inc
ja
pop
ret
out
sahf
test
jecxz
lea
add
adc
aas
int
int
popf
movaps
or
addr16
daa
rcr
add
adc
pop
add
clc
iret
sub
dec
cmp
incl
aas
add
ljmp
rcll
adc
pop
add
pop
dec
mov
jle
inc
lret
arpl
mov
xor
cld
jnp
pop
outsl
ret
adc
pushf
sbb
enter
mov
out
rol
pop
outsb
cmc
pop
sbb
test
mov
sbb
sbb
into
sbb
push
scas
cltd
loopne
add
inc
mov
in
inc
or
add
mov
jo
shrl
mov
or
insl
jecxz
adc
dec
and
rclb
enter
xchg
sbb
adc
jge
les
mov
xor
jmp
sbb
gs
gs
push
jmp
inc
sub
mov
jl
add
xchg
lahf
pop
adc
shll
sbb
xor
jp
sub
cld
das
mov
xor
inc
sub
push
daa
js
xchg
test
cmpsb
dec
fimuls
or
jecxz
scas
and
clc
sub
int
out
xlat
loopne
mov
testb
in
xlat
sbb
leave
push
cld
and
adc
clc
movsb
cli
sub
mov
sub
ljmp
adc
sbb
mov
inc
mov
add
add
pop
lcall
es
jmp
or
fsubrs
lcall
sub
shl
loope
push
addb
sub
pop
jecxz
sahf
xor
jp
cmc
rcll
lea
and
outsl
roll
stos
sub
fcom
int3
cmc
sti
xor
xchg
dec
cmp
shlb
movsbl
or
das
cmp
sub
jecxz
mov
or
aas
sub
push
pop
push
cmpsl
or
pushf
adc
jns
adc
negb
outsb
cltd
mov
js
fcmovnb
sti
mov
push
pop
gs
cmc
push
imul
sbb
add
and
movsb
loope
lea
cmpsb
andb
xchg
fisubl
add
sub
add
aaa
pand
mov
sub
xchg
cltd
test
mov
std
mov
xchg
inc
add
aas
arpl
lahf
icebp
xor
mov
sahf
inc
add
cli
cmpsb
adc
imul
pop
test
push
jle
ljmp
pop
or
mov
mov
inc
pusha
mov
inc
mov
inc
jl
mov
cmp
inc
push
fsubl
cmp
es
xor
pop
out
test
jge
lods
and
push
cltd
cmpsl
lods
mov
roll
pushf
ret
mov
bound
xor
std
fisttpll
sub
pop
cld
popa
add
push
lods
add
ret
mov
adc
and
lahf
out
xchg
mov
or
inc
popa
mov
cmc
sbb
jge
stos
stos
cli
cmp
fwait
mov
pop
shrl
add
xor
lret
fnsave
rol
sbb
test
test
jecxz
inc
jnp
cmc
aad
scas
or
test
arpl
mov
es
inc
std
repnz
add
adc
sub
mov
mov
les
aaa
and
fnsave
lods
mov
inc
loopne
out
test
movsl
in
je
ja
inc
and
popf
sub
das
add
mov
mov
adc
add
lret
leave
adc
into
jge
out
idiv
jmp
pop
ljmp
xchg
pop
cmpsb
shl
daa
decb
cli
jmp
mov
jno
inc
out
push
dec
cmp
in
sbbb
ja
fstpt
and
pushf
arpl
xor
popf
mov
mov
push
dec
push
in
sbb
mov
loopne
lods
and
or
push
in
aaa
xor
cmp
fnstsw
leave
inc
add
jg
add
imul
outsl
leave
mov
lock
jmp
cmpsl
sub
loopne
sub
or
sub
sbbb
push
and
jne
gs
pop
fists
pop
or
notl
jnp
jb
lock
sub
lods
add
jge
mov
cmp
push
push
jmp
pop
out
pop
and
enter
adc
lods
or
dec
add
sbb
jge
nop
icebp
arpl
mov
mov
std
or
pop
imul
clc
sbbb
sbb
clc
rol
dec
repz
addb
push
mov
xor
sub
mov
cmpsb
ss
subl
jp
addb
popa
and
jnp
sahf
fistpll
jl
cmpsb
loopne
in
and
in
sbb
dec
out
ljmp
movsb
and
inc
fsubp
sub
cmp
fisttpll
add
nop
xchg
ficompl
cmp
push
popf
inc
fsubr
sub
ret
ror
mov
sub
push
push
popa
xor
or
inc
adc
pusha
pop
pusha
rolb
cmp
add
out
scas
and
inc
mov
pop
cmpsb
xchg
cmp
arpl
in
pop
add
fistpll
das
popf
and
gs
sti
sbb
ds
cltd
adc
popf
jmp
and
xor
ja
or
test
fidivrs
mov
pop
jge
arpl
pop
loop
mov
sbb
cmp
jge
add
rorb
pushf
xchg
xchg
ficoms
loope
jecxz
shl
sbb
push
push
jecxz
pop
add
cld
push
into
push
stc
enter
and
into
sbb
and
or
hlt
les
push
fistl
pop
jmp
cmpsl
shll
ds
cmp
add
sub
sub
rorl
les
pop
sahf
mov
dec
fwait
sub
adc
cmp
pop
xchg
jmp
cmpsb
aam
jg
fdivs
or
sub
pop
and
push
lods
shlb
jns
pop
jl
xchg
jl
xchg
add
idiv
mov
add
sub
mov
leave
mov
pop
xchg
xchg
sbb
loope
stc
shl
xchg
mov
adc
fcompl
push
stos
inc
cmc
in
mov
loopne
imul
push
xchg
pop
push
out
mov
sbb
fs
and
sbb
push
sub
sub
repnz
es
inc
fs
cmpsb
mov
and
out
in
stos
xchg
jmp
mov
and
mov
inc
imul
fisubrl
mov
call
lods
jbe
dec
mov
fnstsw
arpl
sub
mov
jmp
or
add
aam
aaa
jmp
das
add
mulb
or
or
shlb
mov
rcr
or
or
or
cmp
pop
mov
test
or
shll
lods
or
mov
push
sbb
in
mov
pop
test
mov
cmpsl
es
mov
test
jns
movd
jl
sub
jp
leave
mov
dec
push
lods
test
in
jp
xchg
data16
lcall
jg
adc
push
lds
jnp
and
nop
lock
xchg
push
loope
xor
test
incl
lcall
jg
test
rclb
push
xchg
add
cltd
lods
dec
jl
add
adcb
and
scas
jecxz
test
leave
inc
add
in
jne
scas
pop
lret
mov
inc
push
mov
pushf
stos
and
mov
push
sbb
mov
data16
and
mov
pop
add
and
or
mov
adc
std
xor
aaa
push
mov
roll
addr16
std
shrl
cmc
pop
aaa
insl
adc
sub
aaa
daa
test
popa
mov
jl
gs
lea
pop
movsl
sbb
sahf
dec
fistpl
ret
loop
cltd
and
stos
sub
adc
sbb
adc
add
adc
add
mov
cmpsl
pop
lcall
ficompl
mov
in
mov
add
out
dec
icebp
test
mov
or
push
fdivrl
int3
sub
aaa
sbb
ficoms
xchg
mov
shll
lock
inc
adc
adc
xchg
pop
sbb
adc
pusha
mov
xchg
inc
sub
pop
sbb
ss
xchg
fstl
push
adc
mov
mov
push
and
mov
mov
mov
or
inc
repz
adc
imul
les
mov
daa
cs
les
std
mov
mov
rcrb
jecxz
inc
or
lods
movsb
sbb
pushf
stos
pop
cmp
mov
hlt
cmp
lret
adc
sahf
les
out
aad
es
andb
and
push
jnp
cmp
mov
jmp
pusha
idiv
das
adc
loop
mov
mov
push
addr16
jns
xchg
mov
divl
xor
jp
xor
sbb
in
sbb
or
jle
shl
sub
jp
jl
sbb
in
sub
enter
sahf
hlt
push
mov
push
xchg
mov
mov
push
sahf
pop
out
imul
notl
xor
fsubl
add
jae
add
push
add
pop
jns
cwtl
jbe
xchg
cmc
jnp
mov
gs
lea
mov
sbb
inc
aas
and
movsb
add
sti
popf
and
sub
imul
ja
rcl
xchg
fldenv
loop
mov
and
shlb
cs
sub
movsb
or
and
pop
int3
inc
jle
pop
sbb
jbe
push
jnp
sbbl
add
pop
adc
out
push
cmpsb
daa
or
adc
popa
jle
dec
rclb
jmp
pop
hlt
fmulp
mov
bound
push
xchg
mov
dec
sahf
cmpsl
lret
es
insb
bound
mov
sub
sbbl
sbb
in
pushf
stc
out
jbe
out
repnz
adc
sbb
mov
dec
pushf
push
das
add
loope
lea
clc
sub
imul
inc
adc
pusha
lds
dec
mov
sbb
pushf
in
movsb
cmpsb
stos
jl
jp
outsb
call
in
and
xchg
ja
es
mov
loopne
xchg
sbb
inc
cmc
imul
outsb
std
cwtl
or
scas
inc
lret
cwtl
sbb
test
and
sub
xchg
fwait
xchg
lahf
adc
xchg
sbb
dec
int
mov
and
xor
jle
std
jnp
or
scas
jb
add
faddp
movsb
fldl
fsub
pop
push
pop
jmp
sahf
enter
adcl
sbbb
gs
adc
dec
sbb
adc
sbb
push
cmp
jmp
mov
lods
or
or
dec
out
or
mov
loope
cltd
xchg
jl
cmp
or
arpl
arpl
popa
pop
popf
add
loope
pop
pusha
jecxz
mov
fwait
jb
sub
push
adc
push
insb
mov
gs
cmp
stos
inc
push
add
js
sbb
push
push
jbe
icebp
adc
ljmp
adcl
clc
js
add
icebp
push
sbb
or
repz
test
mov
jbe
outsb
fbld
add
mov
pop
icebp
or
push
insb
adc
shll
push
and
decl
mov
mov
in
pushf
imul
inc
stos
xor
fcmovu
mov
push
mov
sbb
repnz
mov
or
hlt
pusha
or
jg
push
jns
aad
push
pop
jnp
clc
icebp
es
scas
fidivrl
xchg
loope
push
jg
fidivl
xor
or
jb
cmpsl
fistpl
xchg
das
mov
mov
fbstp
cmp
fldenv
pop
add
cmpsb
or
int
ljmp
pop
into
in
pushf
sbb
mov
dec
pop
lcall
es
mov
jmp
xor
std
xchg
mov
sbb
int
and
test
and
and
mov
push
popl
sub
jmp
pop
push
mov
hlt
xchg
pushl
out
push
and
test
andl
xchg
test
adc
push
stos
rcll
repz
fstpl
push
adc
aad
negl
jo
fisttps
push
pusha
xchg
in
mov
add
mov
insl
cmp
loope
adc
inc
jae
jge
movsl
movsb
mov
push
rcll
mov
and
notl
loop
adc
ja
jecxz
and
movsl
fbstp
sti
jns
lret
or
pushf
cmpsb
or
scas
lds
hlt
jnp
sbb
cwtl
pop
and
cmpsl
jl
push
movzwl
bound
mov
push
adc
dec
push
mov
sti
adc
adc
xchg
adc
push
gs
sbb
jge
push
stos
xor
nop
or
filds
xchg
rcll
push
mov
push
jnp
inc
loope
cmpsl
xor
enter
jae
push
lcall
inc
push
or
or
xor
outsb
push
ret
push
outsb
addb
scas
push
int3
imul
add
or
loope
mov
pop
pop
adc
adc
fstpl
push
xor
inc
subps
xchg
push
mov
or
xchg
movsb
add
ret
adc
xorl
dec
push
aaa
fnstsw
arpl
mov
mov
ss
mov
call
cltd
data16
shlb
or
jmp
out
xchg
fcmovb
jns
iret
mov
cld
push
iret
or
dec
ret
or
xchg
and
int3
and
out
cs
fwait
push
or
sbb
push
cs
popf
mov
lock
or
std
rcrl
jbe
sbb
das
adc
or
nop
jmp
adc
das
adc
adc
add
sub
mov
fisubs
out
sub
loope
rcrl
repz
mov
push
fsubs
adc
xchg
xchg
pop
inc
lret
ret
iret
push
clc
cmp
add
jl
fsubrs
ljmp
out
aad
pusha
rol
rolb
ja
test
mov
cmp
xchg
push
add
sub
or
mov
data16
cli
daa
jnp
stos
lods
add
sti
pushf
pop
push
add
pop
mov
pop
mov
pop
sbb
sbb
mov
or
xchg
add
inc
xchg
std
jp
xor
scas
rorl
fdivr
jne
sub
loopne
lahf
cmp
add
lea
pop
jns
sahf
insb
push
pop
jnp
mov
adc
push
cwtl
nop
and
adc
sbb
in
lea
mov
jg
xchg
cmpsb
enter
mov
xchg
adc
and
mov
test
dec
fcmovb
inc
or
xlat
in
sbb
orl
fsubs
push
push
push
insl
mov
lret
enter
fdiv
call
or
movsb
jmp
out
sub
pop
mov
out
mov
ja
addr16
scas
icebp
mov
ja
leave
add
cltd
rcrb
pushf
repnz
cltd
cli
lret
in
lcall
pusha
scas
push
add
xor
fistl
and
mov
cmp
leave
std
lcall
or
mov
out
testb
out
dec
scas
push
push
sub
fs
or
cmp
add
xchg
cmp
add
fs
jne
xchg
fs
mov
scas
je
lods
xor
sub
adc
sub
jge
sbb
and
add
popa
and
mov
pusha
inc
shl
pushf
test
pop
lea
ds
and
popa
cs
test
dec
and
fists
std
or
push
lods
cmpsb
add
std
pop
icebp
or
in
sub
inc
movsl
rcr
sbb
mov
sub
push
push
add
mov
mov
mov
icebp
mov
in
pop
or
dec
and
test
and
xchg
into
adc
lret
repz
push
adc
lods
sub
jmp
inc
mov
xchg
cmp
dec
sub
fistl
clc
push
jge
push
std
pushf
add
lods
fucomi
pop
insl
ret
stos
mov
inc
xchg
popf
push
loope
mov
sub
jno
adc
cltd
adc
sbb
mov
adc
jb
sbb
push
ljmp
cmp
xchg
adc
inc
adc
xchg
inc
es
nop
pop
pop
rcl
adc
test
aad
aas
mov
mov
outsb
sub
xchg
roll
cli
lods
mov
pop
pop
adc
dec
cmp
fld
andl
scas
stc
cwtl
sub
imull
pop
xor
sub
dec
cmpsb
clc
pop
clc
cltd
lcall
std
jmp
pop
cmpsb
push
mov
into
cli
jl
push
mov
orl
incb
imul
psadbw
sub
in
jge
inc
sbb
mov
dec
push
and
or
popf
aaa
adc
call
xchg
ret
in
mov
div
cs
pop
test
and
loop
cltd
pushf
test
vpaddsb
pop
add
xchg
add
pop
fsubp
out
adc
cmp
xchg
add
jbe
out
shrl
out
add
push
mov
mov
dec
call
lret
mov
loope
int3
push
int
sahf
pop
jns
xchg
shl
xchg
cmpl
test
loope
sbb
ja
icebp
jne
popf
pop
xorb
pusha
movsl
in
test
outsl
orb
sbb
ret
mov
sar
hlt
into
loop
pop
inc
mov
clc
mov
andl
imul
lahf
decb
into
pop
sbb
es
jmp
jnp
pop
repz
cmc
test
lods
mov
addb
mov
enter
daa
sbb
fistps
std
sub
push
mov
pop
decb
jns
mov
xor
gs
xchg
xchg
add
adc
std
jecxz
scas
dec
add
daa
push
jecxz
or
add
add
out
ja
add
in
sbb
and
push
aam
adc
call
test
pop
test
mov
mov
adc
pop
test
pop
pop
pusha
jns
pop
loope
mov
cld
mov
bound
add
pop
cmp
arpl
mov
or
cmp
mov
cltd
cmpsl
sbb
mov
mov
and
or
frstor
outsb
push
in
and
adc
xchg
mov
out
cmpsb
dec
lret
mov
sbb
mov
jmp
mov
xlat
xchg
dec
jle
es
add
jle
sbb
imul
roll
mov
into
or
incl
pop
cmpsl
cmpsb
inc
imul
lds
and
pushf
in
pop
jns
push
pop
jns
xacquire
inc
stos
sub
and
and
sti
in
or
adc
test
xchg
jp
mov
daa
jg
push
mov
push
cmc
pop
fwait
lea
or
mov
cs
int3
pusha
data16
jno
lods
jmp
stos
mov
popa
or
fxtract
lret
mov
outsl
bound
sbb
adc
and
call
xchg
popa
movsb
popa
jge
hlt
ret
es
in
pop
push
mov
popf
jl
xchg
or
out
sbb
dec
insl
mov
jmp
cltd
pop
sbb
out
xchg
pop
js
and
sbb
icebp
aad
adc
pop
enter
and
mov
sbb
jle
les
and
mov
aad
dec
push
repnz
int
xchg
xor
mov
mov
mov
sahf
mov
cmc
notb
in
jns
mov
push
aam
jb
mov
or
stc
mov
sbb
rcrb
sahf
fists
mov
dec
ljmp
andl
pop
xchg
inc
mov
sahf
push
pusha
lods
mov
push
div
inc
pop
stos
ds
xor
sahf
fisubs
es
dec
int3
inc
and
mov
lods
mov
or
repnz
jns
push
scas
adc
es
mov
inc
inc
xchg
mov
jle
or
rcrb
testl
sti
add
xchg
jmp
ja
repnz
fadds
mov
jns
jne
pop
mov
push
adc
mov
sahf
cmpsl
pop
pop
es
adc
sub
mov
add
xchg
inc
das
and
outsl
jle
das
push
xor
mov
and
in
test
lods
popa
xor
push
nop
test
clc
aaa
arpl
stc
mov
fistpll
inc
mov
pop
adc
adc
push
jle
inc
imul
sub
movl
out
sub
and
popa
aad
popa
mov
data16
mov
and
pop
dec
cmp
push
sarl
sbbl
mov
jb
sub
movsb
shlb
sub
sbbl
and
pop
and
xchg
add
mov
pop
add
jbe
sub
mov
dec
pop
sahf
into
mov
rcrl
jns
scas
mov
insb
adc
mov
cmpsb
xor
xor
jge
cmp
xchg
sbb
mov
es
bound
dec
xchg
add
xchg
sarb
andb
data16
lret
xchg
arpl
mov
adc
cmc
mov
dec
pushf
jns
lock
cmp
xchg
fs
push
scas
cmp
pusha
inc
inc
dec
lea
fcoml
inc
mov
add
xchg
xchg
test
or
mov
xchg
repz
ja
mov
rcrl
insl
mov
add
adc
adc
push
sbb
into
aaa
jl
sti
nop
adc
xchg
xchg
popa
adc
and
cs
and
and
jl
inc
inc
cmp
xchg
mov
inc
jns
sbb
cli
decb
jns
push
inc
mov
enter
jmp
sbb
fstpl
sbb
dec
loopne
pop
out
scas
ret
or
test
sbb
dec
xchg
sbb
adc
ljmp
iret
push
pop
shl
adc
dec
adc
sub
push
dec
cld
loope
push
rclb
pop
jmp
sub
test
mov
mov
jae
adc
int3
mov
inc
popa
sbb
mov
sti
pop
pop
add
jns
mov
push
mov
lea
push
es
mov
jge
in
mov
arpl
push
mov
scas
cwtl
and
in
outsb
pop
sbb
cmp
xchg
addb
shll
mov
je
mov
enter
xchg
sbb
ret
mov
sbb
mov
inc
loopne
inc
je
adc
mov
imul
test
stc
repz
or
jns
sbb
pop
neg
jne
sbb
lods
or
outsb
test
jbe
jbe
lret
xchg
lret
dec
ss
imul
les
pop
jle
outsl
jnp
js
ss
and
or
adc
sub
enter
adc
mov
xchg
shlb
ffree
mov
or
add
hlt
and
pop
inc
ret
xlat
stos
ret
sbb
mov
cmc
decb
das
stos
lea
mov
data16
sub
test
lock
sbb
daa
and
pop
jp
imul
pop
mov
lcall
aaa
cmpl
sub
add
pop
mov
repz
mov
sbb
mov
fdivrs
pop
sbb
nop
and
add
lret
frstor
inc
les
lret
aam
clc
dec
dec
adc
mov
inc
andl
adc
mov
iret
push
inc
pop
test
in
add
pusha
add
repz
sbb
out
sbb
mov
popa
xor
pop
jne
sbb
test
cmp
xchg
cmp
aam
lret
stc
loope
inc
fcompl
mov
mov
or
pop
fildll
andb
scas
imul
push
shrb
sbb
jo
fdiv
fisubs
or
dec
pop
cmp
repnz
sbb
inc
or
sar
pop
repz
stos
push
mov
adc
in
mov
cli
push
ja
cmp
lcall
dec
mov
and
mov
cmp
pop
dec
pop
mov
in
fsubp
fldl
shlb
mov
repz
mov
xchg
mov
jae
shlb
fcoml
test
fndisi(8087
ljmp
sub
adcb
ret
and
push
pusha
dec
xchg
or
mov
push
and
pushf
and
out
jae
mov
pop
test
push
pop
sarb
int3
sbb
push
pop
in
mov
sbb
xchg
daa
jecxz
pop
fimull
iret
stos
mov
nop
lods
fdivrs
stos
mov
sub
nop
mov
frstor
mov
icebp
lret
hlt
fsubl
imul
repz
sbb
stos
pop
mov
mov
icebp
testb
movsb
add
mov
dec
cli
icebp
and
test
into
sbb
lahf
jg
xchg
jge
stos
sbb
clc
adc
into
pop
jge
push
enter
int3
inc
xchg
adc
pop
mov
imul
pop
shlb
push
jp
sub
push
cmpsb
loope
cli
popf
or
mov
add
or
mov
xchg
lds
jns
adc
rcll
jmp
and
inc
sbb
mov
leave
jnp
outsb
sbb
dec
mov
dec
lahf
and
push
cmp
jnp
rolb
testb
sahf
cltd
mov
loope
xchg
int
stos
cmpl
xchg
std
mov
jo
dec
pop
mov
xchg
jo
imul
and
sahf
pop
and
xor
push
push
pop
out
std
jge
mov
filds
jo
and
inc
sbb
inc
lock
pop
pushf
sbb
orb
adc
push
loope
cltd
adc
dec
movsb
stc
push
mov
int3
push
cld
flds
xor
out
adc
mov
pop
adc
push
mov
pop
add
orl
jl
les
popf
and
popa
or
mov
out
push
jno
jecxz
lahf
cmp
xor
inc
push
pop
xor
test
hlt
dec
push
jg
and
scas
cmp
rclb
addl
push
mov
cmp
jl
push
and
xchg
repnz
movsb
inc
insb
push
lcall
cmp
sbb
sbb
loope
sti
cltd
daa
popa
add
jae
and
mov
aaa
xor
cmpsl
push
add
je
lret
inc
and
andl
pop
pop
ljmp
pop
mov
xor
sbb
scas
mov
pop
andb
jns
adc
adc
push
addl
rcll
js
xchg
dec
lods
mov
cld
mulb
inc
sub
adc
push
pushf
dec
idivb
xchg
ss
fcoml
addr16
mov
mov
fnsave
xchg
pop
mov
shr
pop
sbb
sub
add
pop
xchg
pop
push
sbb
dec
arpl
sbb
fs
rcll
adc
or
jp
pop
mov
or
inc
or
inc
push
mov
pop
cmp
ja
inc
sub
loope
jno
push
jbe
int
cmp
xchg
frstor
mov
xchg
sbb
ja
fistpl
adc
or
sbb
scas
dec
xor
negl
hlt
sub
into
pop
pop
adc
push
cltd
scas
mov
fbstp
in
inc
mov
or
ss
fistpll
into
lret
fnstcw
clc
or
scas
test
movsb
sbb
fcomps
pop
mov
mov
and
sbb
jmp
sbb
mov
fstpl
lds
imul
mov
leave
and
inc
outsb
mov
fnstsw
add
pop
pop
adc
imul
push
dec
lods
push
inc
push
inc
jmp
mov
fldt
mov
cmp
jnp
mov
dec
aam
repnz
inc
dec
ljmp
sub
addr16
sar
mov
sbb
add
push
je
into
lock
sbb
mov
pop
sbb
jbe
pushf
or
pusha
test
add
mov
div
in
xor
or
push
cmp
ret
adc
xchg
sub
rorl
jno
jmp
clc
mov
inc
xor
scas
lods
xchg
addb
cmpl
add
push
jae
loopne
sbbl
popf
sub
pop
xor
dec
into
dec
mov
push
aad
pop
aaa
maskmovq
imull
lods
rcrl
clc
enter
and
sbb
popf
cmp
aam
sbb
dec
mov
push
push
sbb
mov
jmp
cld
fsubrs
jno
js
jle
jbe
dec
icebp
lcall
add
xchg
xor
mov
sbb
sub
mov
out
jne
and
sbb
jbe
aas
push
inc
mulb
lcall
enter
jge
cmc
mov
lea
sub
xchg
int
sti
gs
cld
or
fsubs
cmp
lcall
fistpll
xor
mov
xor
cmc
sbb
addl
or
jecxz
or
adc
jecxz
mov
lods
enter
out
dec
pushf
sub
loope
cltd
mov
sub
push
jmp
dec
add
mov
sub
nop
jnp
adc
pop
and
sub
add
mov
sbb
or
mov
xor
xchg
jnp
bound
sbb
xchg
add
sbb
jge
stc
sub
cs
cmpb
loope
mov
loopne
stc
mov
mov
stos
jnp
sbb
dec
jae
push
sub
mov
add
loope
jns
addr16
adc
std
push
std
or
mov
scas
jne
pop
movsb
pop
lock
mov
push
test
pop
jae
cltd
jl
in
fisubl
adc
clc
ja
adc
dec
adc
add
enter
in
jp
inc
mov
and
sbb
enter
xor
movswl
sbb
testb
xchg
fs
lahf
orb
stc
test
add
xor
insb
push
leave
dec
dec
in
aaa
stos
int
adc
cmp
repz
js
loope
xor
dec
cli
push
clc
cmp
sbbl
movsl
mov
xlat
nop
lock
sbb
pop
inc
pushf
rorl
cmc
pop
push
or
mov
and
sbb
add
sub
je
imul
je
imul
mov
push
push
add
and
and
pusha
inc
cli
cmp
xor
jae
adc
lcall
inc
and
mov
mov
add
mov
inc
adc
repz
mov
popa
xor
mov
and
popa
and
pop
add
mov
pop
pop
push
repnz
paddusw
and
pop
cmp
leave
ret
pusha
mov
lds
pop
pop
cmp
pusha
push
pop
lcall
jne
mov
push
int
jl
inc
fwait
cmp
fimuls
lds
enter
inc
insb
dec
rol
incl
xlat
clc
inc
outsb
inc
arpl
ret
aam
stos
aad
dec
movl
fwait
lods
inc
aad
xchg
and
lods
loope
testb
mov
loope
stos
add
sbb
cld
pushf
mov
sub
lret
jl
and
jl
mov
and
loope
push
jecxz
and
inc
xchg
push
pop
rclb
repnz
outsb
push
pop
shrb
inc
sbb
test
fadd
or
sbb
and
mov
nop
test
inc
mov
call
mov
inc
sub
cmpsl
push
jmp
cmpsb
mov
fidivrs
inc
sub
sti
popf
das
mov
push
xchg
shlb
enter
push
jns
xchg
or
lds
scas
and
adcl
ss
mov
lds
imulb
push
jle
rcr
fisubrl
jmp
xchg
sahf
pop
jge
sub
add
pop
mov
pop
sub
je
add
cmp
push
jecxz
sti
orl
pop
mov
mov
mov
mov
insl
fnstcw
pop
mov
jp
movsl
in
or
sahf
filds
je
lock
dec
or
mov
leave
adc
xchg
mov
dec
cmp
mov
jecxz
loopne
pusha
cmp
popf
mov
out
insl
ret
xor
je
inc
sbb
or
ljmp
orb
mov
nop
pusha
enter
cwtl
stc
push
ljmp
cltd
adc
dec
fistpl
push
mov
shrb
cld
cmp
clc
mov
mov
xchg
mov
jmp
mov
fstpl
lcall
out
xchg
fldl
out
jbe
push
call
stc
gs
inc
cld
hlt
xor
sub
xor
adc
lret
mov
xchg
add
fcomp
xchg
mov
jbe
adc
adc
sub
pop
sti
out
cmpsb
push
add
cmpl
xchg
sbb
sbb
xchg
mulb
std
jge
stc
lods
data16
pusha
lahf
mull
pop
cs
shll
mov
pop
cmp
mov
ret
push
adc
lea
mov
xor
mov
dec
jmp
negl
xchg
ja
dec
mov
aad
jo
mov
movsb
mov
movsb
shrb
sbb
fcmovnb
jmp
ja
imul
adc
sub
pop
or
iret
lret
in
popf
popa
inc
inc
insb
xor
mov
andb
popl
add
cmpsb
outsb
sahf
jae
jmp
mov
repz
jae
call
test
or
sbb
imul
adc
adc
mov
and
andb
sbb
movsb
push
mov
inc
sub
stos
sbb
jp
scas
inc
lret
mov
cmp
popa
cli
xor
jmp
rcrb
push
fists
call
or
and
mov
scas
shlb
sbb
fldt
and
cmpsb
sahf
adc
mov
std
pop
test
mov
jg
push
aam
push
std
scas
das
rorl
xchg
mov
cmp
outsl
mov
icebp
or
nop
fwait
mov
xchg
push
loope
sbb
imull
fsubrl
pop
mov
sbb
push
pop
testb
push
jmp
xchg
sbb
sbb
movsb
lea
scas
bound
pop
sbb
loopne
arpl
inc
add
jns
push
inc
aas
cwtl
mov
lods
cmpsb
pop
ss
push
lds
aad
pop
hlt
mov
movsb
popf
push
jne
add
push
push
cli
fdiv
mov
inc
mov
sub
sub
inc
jecxz
test
test
scas
mov
sub
jbe
icebp
pop
out
adc
sahf
jno
or
push
sbb
jnp
add
insl
ds
pop
int3
fldcw
and
mov
pop
pop
incb
pop
dec
dec
cmp
cli
add
leave
mov
loopne
add
jbe
rolb
adc
sbb
mov
jp
xchg
add
jp
aas
std
jns
imul
sarl
addl
test
sub
and
push
pop
sbb
enter
add
inc
cltd
sub
jecxz
aas
outsb
hlt
and
inc
inc
push
jmp
inc
or
aas
aad
leave
popf
or
out
and
roll
in
pop
into
mov
repnz
cmp
fldenv
push
shl
sbb
loope
jne
sbb
cmc
stos
add
dec
cmp
loope
std
loop
add
icebp
rorl
cli
gs
xor
jno
mov
adc
inc
or
mov
push
adc
add
pop
adc
adc
fnsave
sahf
jecxz
test
aas
cli
iret
call
add
sbb
sub
lcall
arpl
into
cmp
jmp
jp
xchg
or
sub
and
outsl
cmp
mov
mov
imul
push
push
cltd
jle
mov
add
mov
sub
add
xor
hlt
xor
repnz
pop
and
sarb
adc
fsubrl
jmp
loopne
ret
stos
adc
lcall
idiv
dec
dec
rsm
mov
jmp
or
mov
cmc
cmp
fucomip
pop
jbe
dec
cmc
push
mov
adc
faddl
jecxz
notl
pop
dec
dec
xchg
mull
les
shl
icebp
repz
push
std
std
jle
xchg
sbb
negl
jae
push
mov
adc
shlb
cltd
std
jb
pop
in
mov
lock
in
add
repz
in
mov
aam
mov
inc
inc
mov
pusha
scas
hlt
add
sbb
adc
adc
push
sub
push
jno
cmpsb
jge
mov
mov
sbb
pop
and
pusha
and
cmovg
inc
and
ss
push
into
mov
ficoms
sti
pusha
cltd
fcompl
mov
in
cmp
lret
mov
xor
lods
out
repz
lods
mov
jmp
inc
aad
adc
repnz
adc
and
or
imul
out
sub
adcb
sti
mov
je
xchg
sti
mov
xchg
rorl
mov
out
ljmp
imul
mull
pusha
sub
sahf
jbe
jae
dec
stos
mov
stos
add
sbb
push
sbb
sahf
jnp
or
mov
sbb
xor
xchg
mov
shl
movsl
sbb
shll
pop
dec
xchg
dec
cmpsl
mov
add
das
sub
sbb
pop
lods
imul
mov
sbb
addr16
clc
cwtl
out
cwtl
mov
xor
xchg
fcomps
inc
mov
and
data16
pop
cmpsl
cltd
push
out
ss
or
jbe
lea
aad
pop
lea
push
test
jnp
pop
jns
iret
in
sbb
inc
leave
dec
enter
push
and
and
pop
dec
mov
pop
jbe
enter
repz
adc
add
push
test
jne
cmpsb
jae
sub
cmc
add
fdivrl
xchg
fisubs
aad
add
andb
sbb
cmp
std
jmp
push
addb
add
das
rol
sub
xchg
fnsave
cmp
sbb
lods
cmpsl
jecxz
cmp
out
inc
shl
jp
inc
mov
pop
neg
imul
ret
rorl
int
fadds
icebp
jns
dec
in
add
pusha
jge
cmp
fcompl
jbe
cli
js
movsb
stos
jne
and
xor
stos
repz
imulb
idiv
push
pop
and
shlb
ret
stc
insb
or
pop
lock
rcrb
push
loop
mov
inc
negl
pop
imul
and
pop
cwtl
jns
jnp
add
fcomp
push
jne
mov
pop
mov
adcb
mov
adc
cli
lods
mov
loopne
mov
pushf
lds
test
mul
mov
jp
addb
mov
adc
decb
jmp
nop
mov
clc
fwait
test
cs
sub
repnz
movsl
std
addr16
mov
push
stc
lret
push
sub
cmpsl
pop
mov
ljmp
addr16
xchg
sahf
inc
cltd
and
std
test
imul
xchg
out
mov
cwtl
movsl
push
and
test
adc
dec
hlt
push
or
sbb
inc
add
andl
add
insb
sbb
and
sbb
fiadds
shll
sbb
je
dec
les
mov
xchg
sbb
out
and
add
inc
test
and
out
inc
cmp
iret
push
and
decb
sbb
mov
pop
dec
sub
inc
sbb
or
push
mov
lcall
test
cmc
inc
jb
add
imul
pop
pop
test
sahf
stc
filds
mov
push
cmpsb
out
std
test
fs
or
loop
lods
and
insl
or
adc
ss
adc
imul
sub
jae
pushf
mov
adc
daa
and
stc
and
pop
cwtl
cmp
aam
cwtl
sbb
aaa
aam
mov
cmp
fiadds
fnstcw
sub
jge
loope
out
mov
mov
jmp
ljmp
addr16
mov
sbb
inc
pop
pop
loope
adc
andb
outsb
loope
iret
lahf
lret
cwtl
lcall
sub
push
decb
jbe
mov
xor
sbb
inc
dec
orl
jle
mov
mov
push
add
adc
pop
inc
adcb
fucom
push
xchg
out
cmp
pop
xchg
shld
xchg
xchg
jae
loope
and
in
movsl
stc
inc
int
xor
ret
sub
lods
fldt
sbb
nop
and
cmc
decl
int3
and
cmp
fwait
cmp
jb
nop
and
dec
jo
jns
and
inc
xor
cmp
sahf
or
jmp
popa
and
mov
cmp
imul
xor
xchg
xchg
jmp
out
and
pop
adc
and
nop
jne
rcrb
and
sahf
adc
mov
push
xchg
xor
insl
xchg
shl
push
fadd
or
inc
push
adc
cmp
adc
stc
notb
cmp
or
mov
xlat
mov
adc
push
fbstp
xchg
roll
xor
xor
or
push
mov
nop
push
ret
imul
cmpsb
std
jp
aaa
mov
insl
xor
mov
mov
fsubrs
inc
add
fsubrl
pfsubr
in
insl
dec
push
addr16
mov
jle
int
lahf
out
stc
mov
std
xchg
and
pop
push
and
push
fwait
jmp
sbb
and
adc
or
push
aaa
out
shl
sbb
sub
addb
rclb
subl
mov
push
push
xor
in
dec
dec
lahf
dec
xchg
in
arpl
jbe
arpl
scas
fdiv
dec
sbb
cmc
mov
movsl
jne
sbb
cli
xchg
sahf
inc
mov
add
popa
xor
outsl
jp
loope
xchg
jg
push
mov
xchg
dec
stos
shlb
mov
fidivl
test
test
sbb
push
lret
jns
adc
loop
cli
ljmp
subb
out
xchg
scas
test
fsubl
sub
cmpsl
mov
gs
in
sbb
out
cmpl
push
push
loope
mov
popaw
jbe
or
inc
push
or
push
adc
popf
xor
clc
dec
cmpsl
ja
mov
mov
lock
not
pop
sbbl
and
push
sbb
push
sti
jo
push
sbb
push
repz
int
mov
sbb
and
test
aad
xchg
frndint
pop
xchg
fstpl
inc
iret
in
out
xchg
loope
push
in
sbb
adc
sbb
fsubl
xor
cltd
mov
xchg
lea
push
adc
and
sub
pushf
test
pushf
mov
and
sbb
pop
or
dec
mov
call
and
inc
push
add
push
mov
cld
add
rclb
js
fcmovbe
or
movsl
das
popf
pop
or
mov
leave
fstpl
rcrl
push
adc
push
cmpsl
clc
sbb
mov
dec
popa
int3
or
push
xchg
in
jp
arpl
xchg
sub
sbb
xor
mov
imul
in
push
shl
clc
adc
jge
jbe
popa
cmpsb
rorb
jmp
pop
sbb
push
out
mov
mov
sbb
jbe
dec
out
jge
gs
fisttps
xchg
adc
or
mov
imul
cltd
or
mov
add
shll
lahf
xor
jnp
mov
pop
sti
mov
mov
jmp
xor
adc
mov
xorl
add
jbe
inc
pop
sub
cmpl
gs
sbb
aad
enter
pop
out
push
fidivs
out
jecxz
push
cli
pop
enter
mov
test
dec
fwait
jnp
cltd
cli
pop
push
and
fsubl
leave
inc
mov
pop
add
test
sub
mov
mov
sahf
jecxz
xchg
arpl
push
add
int3
jecxz
and
sbb
mov
mov
and
jmp
xchg
mov
and
lock
add
dec
xor
sbbb
dec
pop
ret
inc
dec
xchg
and
jmp
sbb
mov
add
mov
xchg
imul
sahf
mov
mov
and
push
mov
iret
jae
cmc
pop
adc
movsb
pop
rorb
inc
push
sbb
sbb
cli
es
loope
repz
jmp
loope
repz
jmp
loop
imul
movsb
cmp
imul
and
mov
or
sahf
addr16
pop
shlb
and
push
push
inc
add
mov
aad
adc
nop
jp
stc
jle
push
xor
mov
addr16
adc
sub
lock
neg
and
pop
push
arpl
js
inc
and
pop
daa
repz
inc
mov
fiadds
adc
sbb
sbb
icebp
sbb
and
pop
or
pop
outsb
loop
push
idivl
ljmp
jg
pop
pop
das
xor
and
cli
mov
and
je
adc
xlat
lahf
add
xchg
subw
mov
pop
ficomps
xchg
mov
test
sub
pop
iret
cmp
sbb
insb
xor
test
in
sbb
pop
xchg
inc
push
and
aam
pop
lods
leave
test
push
addr16
xor
scas
adcb
and
pop
jns
aad
lea
or
mov
andl
pop
loope
fdiv
arpl
xchg
leave
or
or
pop
rol
sbb
pop
push
stos
push
fmull
inc
lea
testl
and
mov
jle
push
adc
popa
es
pop
testl
cli
mov
push
adc
and
cmp
popf
pop
ds
fistps
pushf
jge
loopne
addr16
pop
cmpsl
pop
out
jbe
add
sub
in
pop
repz
sbb
cmp
daa
cltd
sti
sbb
xor
sbb
jge
out
ss
sub
inc
mov
pop
sarl
sbb
cmp
mov
sbb
inc
mov
lcall
jmp
inc
das
xchg
shl
xchg
inc
push
and
add
int
cwtl
sbb
jns
sbb
and
and
movsb
sbb
push
dec
stos
xchg
adc
je
sub
and
sbb
pop
rorb
inc
das
or
xchg
sub
lcall
mov
popa
or
cld
mov
lock
sar
xchg
mov
mov
inc
sti
or
pop
jge
and
popa
fcomps
movsl
and
addr16
sub
lods
sahf
adc
fistps
outsb
jb
pop
in
lret
dec
push
int3
es
rclb
out
jmp
adc
rcl
mov
mov
add
push
sub
xor
xor
pop
or
pop
cmpsl
adc
or
sbb
cs
xchg
in
in
iret
push
iret
cltd
sarl
jge
int
mov
negb
ret
stc
cmp
insl
nop
out
out
sub
mov
mov
fistpll
xor
repnz
cmpl
scas
rolb
imul
sahf
xchg
fsubp
mov
xchg
pop
popa
xor
xor
dec
shlb
or
add
pop
lcall
imul
push
and
add
imul
sbb
clc
js
jb
xchg
mov
fisubl
sbb
xchg
sbb
push
int
adc
dec
insl
cmp
sub
pop
mov
std
cmpsb
fwait
push
fiadds
outsb
loop
clc
push
cmpsl
add
sub
enter
jge
gs
push
sbb
push
addr16
cltd
sbb
std
js
adc
repz
sbb
mov
pop
js
push
mov
addr16
popf
adc
lcall
push
pusha
outsl
pop
rolb
data16
popa
xchg
lock
mov
mulb
sarl
pushl
sbb
inc
cmpsb
and
insl
mov
iret
lcall
xchg
std
out
mov
fsubrs
mov
add
test
xchg
jp
pop
outsl
sbb
andb
std
shrb
push
or
pop
imul
int
xor
int3
ret
push
iret
mov
mov
pushf
lods
pop
mov
inc
and
movsl
lcall
in
lds
sub
int
test
sbb
or
sbbl
and
push
test
inc
cmpsb
cmp
push
and
dec
loopne
xor
cmp
push
cs
xchg
mov
inc
negb
stc
inc
xchg
andb
xor
mov
mov
std
insb
cmp
jl
and
stc
clc
clc
cmp
es
or
jl
sub
add
sbb
add
aaa
sbb
push
cld
cld
ret
in
jmp
ud1
sub
je
idiv
xor
stos
xchg
shl
popf
and
sub
mov
cmp
sbb
fmull
adc
mov
and
subb
xor
pop
jge
cmp
sbbb
aaa
fs
push
lret
sbb
icebp
mov
test
mov
jecxz
int3
adc
mov
sbb
pop
jne
in
jbe
ret
mov
mov
loope
lret
sti
push
cmovo
lret
aas
add
xchg
int
sbb
sbb
cld
inc
popa
and
and
push
pop
xchg
pop
sub
in
ljmp
or
mov
pop
cli
loope
xor
jmp
pop
int3
mov
jle
jecxz
inc
imull
add
pop
or
xor
mov
aam
sbb
lock
push
jge
sarb
add
dec
or
jmp
and
sbb
jmp
in
sbb
imul
xlat
mov
jnp
mov
pusha
lds
inc
std
and
lea
lods
int
push
mov
ljmpw
pushf
cmp
mov
cmpsb
or
sbb
pusha
sub
sbb
lds
cmp
inc
and
mov
or
xlat
icebp
das
and
pop
mov
je
jecxz
push
out
andb
aad
sub
fninit
jne
ja
out
mov
arpl
mov
pop
test
rcl
test
imul
mov
or
cmc
cmc
jp
inc
mov
push
sahf
cmp
pushf
cmp
mov
aaa
pop
mov
push
je
int3
sub
cmc
hlt
cmc
xchg
orl
jge
sub
hlt
sbb
sbb
xchg
ljmp
mov
mov
mov
ret
mov
jno
shll
in
shrl
fcmovnu
pop
and
out
and
pusha
xchg
pop
imul
popf
in
mov
repz
adc
push
insl
dec
add
mov
mov
jecxz
out
sbb
test
es
inc
inc
andb
out
push
rcrl
rcr
pop
testb
push
dec
and
sub
mov
movsl
jle
pop
or
ret
insl
pop
xchg
pop
jg
cmpsl
lods
mov
cmpsl
mov
popf
int3
mov
sbb
in
out
sbb
and
cmpsb
adc
addr16
jl
add
sbb
xchg
push
xchg
lret
pushf
in
fsubl
sahf
pop
icebp
sub
stos
lret
mov
sbb
cld
xlat
pop
add
sbb
mov
inc
jns
jg
popf
in
popa
push
add
or
ds
mov
cs
int3
xor
sub
mov
jg
pop
jge
ret
jmp
push
loopne
and
popa
adcb
call
stos
fistpll
andb
push
daa
fldcw
fstp
loopne
adc
pop
cwtl
and
mov
arpl
mov
adc
rcll
psrlq
test
leave
clc
mov
call
test
and
std
pop
inc
mov
popf
sub
stos
rcr
sbb
dec
jmp
popa
mov
clc
push
rorb
mov
sahf
xchg
jecxz
ret
jmp
pop
and
loope
vmwrite
ffree
mov
mov
mov
popa
pop
out
imul
aad
test
out
pop
add
sbb
popa
or
aad
push
or
testb
in
nop
int
jmp
push
insb
jns
and
loope
in
inc
jnp
loop
test
dec
sahf
push
push
stos
and
and
sarb
jecxz
icebp
adc
imul
mov
pop
ret
imul
leave
dec
fiadds
repz
js
daa
test
cmp
loope
in
arpl
arpl
jge
push
mov
pop
pop
or
in
bound
and
movsb
fsubr
incl
or
clc
xor
inc
mov
or
icebp
insb
rcll
cmpsb
dec
stos
jnp
inc
mov
aad
es
js
sbb
pop
inc
cwtl
idiv
movl
cmp
insb
lds
adc
sbb
adcb
push
cwtd
scas
ror
and
cmc
fs
test
rorb
pusha
mov
adc
std
clc
cli
lret
mov
cld
xchg
inc
mov
ja
adc
out
ret
cmp
xchg
dec
jbe
sbb
mov
add
jp
and
push
int
push
inc
push
xchg
pop
jbe
xchg
out
sbb
sbb
adc
and
push
ret
sub
inc
int3
xchg
xchg
and
test
cwtl
js
negl
fst
adc
das
dec
sbb
fbstp
fisubs
and
jbe
add
lahf
dec
push
lcall
gs
sbb
sbb
cwtl
movsb
or
mov
push
xchg
cmp
sub
test
out
cmc
in
fs
xlat
cmpb
inc
or
push
addr16
popa
cmp
mov
fcmovnb
shl
in
and
icebp
or
stos
jp
movsb
mov
aad
and
pop
mov
lods
mov
pop
and
loope
push
jmp
sub
in
pop
mov
and
sbb
sbb
adcl
jle
push
std
lret
inc
test
jle
pop
mov
cltd
inc
lock
jmp
arpl
clc
icebp
push
andl
movsl
aad
std
dec
std
jmp
mov
fsts
cmp
out
mov
test
xchg
and
xchg
aad
mov
shrl
pop
jl
pop
adc
sbb
push
sub
mov
ss
cmpsl
xchg
js
push
mov
or
mov
pop
ss
arpl
mov
cmp
test
cmpsl
cs
jecxz
and
gs
mov
out
and
and
pusha
inc
xchg
xor
mov
es
sbb
mov
adc
mov
pop
loope
cmpsb
out
std
sbb
mov
jbe
sbb
add
push
mov
ret
aad
sbb
and
lret
fstps
flds
sub
loopne
mov
push
clc
adc
pop
scas
pop
xchg
inc
jl
cmpsl
push
fdivl
loopne
arpl
out
sub
xorl
call
popf
mov
jle
lock
ja
fdiv
test
and
and
ss
stc
js
push
ljmp
outsb
sbb
rolb
adc
repnz
out
jl
ret
cs
adc
andl
and
adc
lods
dec
into
pop
xchg
push
pop
es
push
call
adc
clc
inc
outsl
std
bswap
or
mov
aas
cmp
into
mov
jp
cmpsb
dec
sbb
pop
cli
popa
mov
imul
fcomps
pop
sbb
fadds
push
and
mov
cltd
in
sbb
and
sbb
shlb
inc
inc
mov
sub
icebp
jns
xor
mov
sbbb
jns
mov
test
inc
out
pop
std
add
ficompl
push
mov
and
add
xor
sub
push
pop
pop
mov
adc
xchg
data16
sbb
push
std
idivl
push
push
lcall
or
in
cmp
movsb
or
cwtl
dec
inc
mov
mov
shlb
scas
sar
in
popf
aas
call
rolb
daa
fdivrl
out
xor
sbb
add
add
rcrb
pop
popf
enter
shlb
test
and
cmp
cmpsl
stos
jle
pop
rorb
fwait
pop
jp
scas
mov
dec
dec
fisubl
fsubp
or
pop
mov
dec
lock
jle
sub
and
lcall
xor
inc
leave
jl
popa
fwait
jbe
mov
orb
sub
xchg
xchg
mov
jmp
js
imul
adc
sbb
jp
xor
cwtl
pushf
and
sbb
push
out
call
es
xor
lods
popf
lock
daa
nop
lea
mov
hlt
scas
mov
push
dec
add
cmp
mov
out
cltd
mov
mov
repz
loop
icebp
and
cltd
dec
jmp
and
call
xor
es
jnp
adc
andl
and
mov
xchg
pop
fs
jbe
dec
mov
mov
pop
popf
xchg
adc
cmp
jae
stc
sbb
mov
pop
ret
push
mov
rcrb
out
int
cmp
loope
jne
lcall
pop
push
add
mov
inc
add
aad
mov
pop
mov
sarl
cmpsb
inc
imul
mov
test
jno
rclb
int
sarl
mov
cmp
cld
push
push
sbb
xchg
adc
in
sahf
es
aaa
enter
imul
sbb
push
inc
test
call
movsb
sub
jmp
in
cld
mov
cwtl
adc
lcall
and
enter
std
testl
and
pusha
sub
inc
sbb
andl
push
adc
cmp
mov
and
push
adc
test
lods
mov
stos
push
movsb
jae
mov
sbb
jmp
inc
or
mov
insb
test
pop
lea
lock
pop
or
lock
inc
jns
loopne
in
adc
inc
fs
adc
movsb
subl
scas
or
push
out
mov
push
pop
xchg
jmp
outsl
lahf
adcl
stos
mov
icebp
add
and
and
lcall
lcall
clc
pop
js
push
sbb
and
mov
inc
and
mov
fistpll
inc
and
jecxz
lahf
xor
mov
stos
xlat
hlt
std
dec
sti
sahf
push
cs
pop
je
popf
insl
jmp
sbb
xchg
clc
and
in
iret
jns
adc
ffree
popf
fstl
xchg
fstl
xchg
ret
fstl
out
add
or
loope
cmpsb
test
sub
jp
jp
sub
sub
sub
mov
and
lcall
cwtl
and
popa
nop
jmp
les
into
imul
xor
inc
mov
loop
pop
fiaddl
shrb
cld
mov
xor
or
add
aad
dec
mov
daa
mov
sbb
lock
imul
mov
jge
push
add
push
pop
aas
loop
and
fiadds
add
sbb
lahf
sub
cmc
mov
add
cltd
stos
loope
jne
adc
add
pushf
xlat
int3
aad
cmc
sahf
mov
loope
push
jecxz
jle
addb
sahf
push
enter
sbb
adc
adc
push
pop
test
or
std
cltd
in
movsb
cltd
add
jle
sbb
addb
outsl
cmc
xor
cli
mov
scas
test
cmp
and
push
add
stos
addr16
inc
push
adc
cwtl
and
adc
fimuls
das
mov
push
xlat
pushf
test
ret
push
push
push
fcomps
mov
xor
pop
test
mov
jg
add
inc
leave
add
cs
and
sbb
push
sub
mov
add
frstor
sbb
push
push
adc
push
and
mov
mov
sub
arpl
out
shll
sbb
push
fimull
movsl
pop
sbb
mov
and
mov
clc
and
shlb
fistps
pop
sbb
and
mov
xor
mov
push
aad
push
sbb
push
xchg
adc
pushf
dec
imulb
fwait
jbe
mov
add
imul
sub
pop
cmp
inc
shll
movsl
xor
sahf
pop
jns
cmpsl
movsb
cpuid
push
push
int3
jo
decl
mov
scas
loopne
mulb
or
std
inc
std
stc
sub
lahf
aaa
movsb
sti
mov
sub
in
sahf
clc
mov
dec
test
rclb
push
int
leave
jne
pop
sti
data16
movsl
sub
test
loopne
stc
mov
iret
push
test
or
push
xchg
js
daa
out
adc
pop
ja
dec
inc
add
cmp
jno
pop
andl
icebp
cwtl
jne
jb
stos
push
and
add
mov
and
pop
cli
or
std
mov
test
and
stos
or
cltd
cmp
xor
cs
loop
jnp
jno,pt
sbb
je
daa
inc
dec
sbb
push
fs
popa
mov
fstpl
fistpl
push
fcmovne
addb
out
mov
rcll
decb
push
pop
sbb
outsl
pop
imul
mov
jp
mov
repz
jp
dec
hlt
pop
sbb
xchg
sbb
sbb
nop
add
dec
add
xchg
sbb
mov
cmc
pcmpeqd
fs
or
jle
sahf
arpl
scas
xor
dec
or
lcall
loop
adc
adc
jbe
push
inc
out
cmp
push
fldl
lret
in
jbe
dec
add
sbb
lock
sub
nop
xchg
xchg
je
in
mov
andb
inc
jo
mov
subl
pop
stc
imul
in
std
and
and
sti
sbb
ret
inc
pushf
mov
lahf
std
aam
test
jl
mov
js
add
mov
sbb
adc
push
and
xchg
push
push
sub
jl
loopne
push
adc
mov
sbb
in
mov
inc
xchg
lea
fildl
mov
xor
mov
leave
xor
sbb
in
sbb
xchg
sub
popf
insl
cmp
daa
mov
test
sbb
ljmp
subl
sbb
lods
loopne
or
decb
push
js
adc
xor
mov
aam
push
imul
adc
sbb
mov
lock
add
clc
hlt
xchg
pop
in
jbe
std
sbb
or
and
xchg
jbe
jmp
rclb
loop
fwait
sub
inc
jbe
add
pusha
repnz
inc
lret
adc
add
cmp
pusha
mov
sbb
sub
add
fists
inc
push
fstpt
bound
pop
sbb
pop
adc
fcmovnu
xor
fsubl
adc
popa
loope
push
sbbb
shr
cld
mov
xchg
mov
pop
inc
adc
sub
push
inc
scas
add
lahf
mov
dec
lods
mov
nop
mov
mov
jnp
xchg
cwtl
imul
adc
push
sub
sub
jnp
jecxz
test
pop
cltd
and
or
sub
cltd
lahf
sbb
loope
ljmp
sbb
mov
mov
push
test
and
sub
ss
test
call
mov
jl
xchg
push
sbb
adc
test
call
call
push
je
mov
sbb
ret
jp
push
fadds
lds
jne
adc
xorb
mov
sub
dec
jge
aaa
les
dec
cltd
and
and
add
stc
orl
lea
xchg
in
or
mov
xchg
dec
mov
cwtl
cmp
or
int
mov
pop
lcall
call
adc
stc
jnp
cltd
dec
mov
push
or
iret
push
sarl
xchg
adc
leave
decb
ret
aad
adc
std
sahf
push
xor
adc
jecxz
or
sbb
adc
jle
jg
inc
jno
lock
leave
sahf
add
lcall
insl
std
imul
jae
jle
aas
and
cmpsb
adc
enter
xchg
or
adc
pop
out
pushf
cltd
sub
jge
mov
pop
movsl
lahf
push
shl
mov
stc
cmp
mov
adc
lret
adc
dec
jae
lret
jo
ja
test
sbb
xchg
jecxz
insl
f2xm1
lds
mov
out
shlb
call
cmp
mov
push
rcll
sub
mov
xchg
les
sbb
insl
outsb
inc
mov
out
leave
adc
and
lahf
xchg
or
test
push
fwait
or
out
sub
xchg
inc
fimuls
iret
jnp
rcr
add
push
arpl
adc
add
xchg
sub
dec
lods
push
test
lea
add
pop
int
arpl
and
sbb
js
mov
dec
les
inc
int
adc
fstl
ret
popf
adc
jl
lods
subb
sub
pop
pushf
inc
rcrb
sbb
xchg
mov
ss
cmp
mov
in
pop
hlt
ret
out
and
call
data16
pop
xor
testl
movsb
pop
sbb
pop
fcmovu
icebp
lock
push
mov
test
sbb
sbb
icebp
movsl
jb
jnp
sbb
sbb
leave
dec
sahf
jp
xchg
into
mov
mov
call
cmp
and
fcmovnu
add
repnz
add
in
sub
ja
inc
pop
sbb
add
xchg
daa
clc
and
inc
shlb
in
das
fsubs
jmp
jge
push
pop
inc
jecxz
popf
cmp
adc
sub
cltd
sbb
mov
pop
pusha
mov
cmp
mov
and
sub
lods
jbe
xchg
mov
pop
add
lcall
adc
inc
mov
xchg
add
push
add
add
jp
push
test
or
jne
je
insb
cmp
sbb
call
sbb
int3
insl
imul
divb
xor
xor
jns
repz
fisttps
imull
sbb
jecxz
inc
fldl
jle
and
lock
sbb
in
into
mov
repnz
fisubs
insb
add
dec
add
mov
xchg
cli
mov
daa
xchg
xchg
xor
pop
mov
cmc
sbb
arpl
data16
mov
inc
jae
mov
xchg
in
adc
jle
adc
or
sbb
inc
in
adc
adc
cmp
cmp
mov
dec
sahf
or
pusha
xchg
leave
das
pop
fdiv
call
push
les
jbe
xchg
jmp
jmp
shll
jae
loope
sbb
fsts
loope
jp
out
insb
xor
stc
push
push
repz
mov
repz
lcall
outsl
sub
add
and
pusha
test
push
jo
pop
out
push
jne
adc
daa
cwtl
adc
fstpt
adc
ss
sub
push
and
pop
or
push
mov
or
jle
lods
push
and
inc
or
insb
pop
leave
in
ds
mov
mov
and
mov
fldcw
jecxz
loope
sahf
jne
shrb
xchg
sub
ret
and
jnp
xchg
jle
cmp
lcall
repz
inc
cmp
arpl
pop
cmp
jo
push
add
shlb
xchg
mov
dec
stos
mov
push
repnz
push
cwtl
out
cmp
mov
sbb
pop
jae
push
sbb
enter
push
lret
and
and
and
jmp
stos
dec
or
adc
lds
sbb
cmp
add
sbbl
pop
test
fbld
pop
rolb
fcompl
push
in
jae
jge
stc
sbb
std
mov
adc
cli
cmp
or
lea
pop
out
mov
pop
push
add
clc
mov
add
dec
mov
loope
jle
add
fwait
jne
sbb
xchg
add
outsb
or
xor
loope
add
jne
sbb
adcl
jo
push
push
jmp
pusha
vpcmov
push
or
aad
lahf
push
add
adc
loopne
sub
pop
push
push
adc
or
std
dec
sbbl
out
adc
fadds
push
adc
insl
or
sub
xor
dec
xchg
out
jb
fwait
out
test
adc
in
cmp
aam
arpl
lea
ss
pop
jno
out
call
ds
imul
out
repnz
pmuludq
pop
push
add
out
sub
mov
mov
dec
inc
push
mov
lods
xor
mov
sub
inc
ljmp
std
fsubs
jmp
mov
xchg
inc
xchg
push
scas
mov
pop
dec
cli
cmc
arpl
xchg
sub
sbb
test
or
sbb
test
rcll
dec
cmp
call
adc
lea
adc
jle
repz
mov
push
push
pop
aad
push
push
sbb
out
insl
daa
lods
imull
push
ret
or
sbb
push
add
orl
adc
and
sbb
outsb
repz
mov
pop
loopne
shl
push
inc
adc
or
cmp
addr16
fisttpll
or
addl
in
lods
or
lret
adc
pop
add
test
or
negb
in
push
mov
or
popf
test
add
test
mov
cmp
adc
mov
mov
jno
cmp
cmpsl
arpl
xor
mov
ds
sbb
and
fldl
cld
or
and
dec
mov
inc
test
sbb
sbb
mov
mov
jg
xor
shlb
and
add
sahf
push
push
cmp
pusha
shl
add
test
and
call
vmovhpd
cltd
aad
pop
dec
push
push
into
push
ror
adc
push
je
add
jecxz
and
dec
and
add
push
cmp
push
popf
xchg
pop
or
jp
fstl
roll
enter
inc
or
or
cmp
adc
out
cmp
adc
mulb
pop
test
imul
jae
adc
cmpb
loope
and
fcompl
push
push
and
xchg
xor
xor
lods
jmp
sub
mov
jecxz
jle
scas
mov
repz
mov
fcompl
inc
push
xchg
cld
inc
cmpsb
push
lods
adc
adc
ja
xor
fld
pusha
addr16
into
loope
imul
mov
jbe
inc
pusha
test
inc
add
rorl
mov
mov
psubsb
lods
or
xchg
loope
sbb
std
fildl
xchg
lods
pop
icebp
jns
jmp
packssdw
or
mov
mov
fucomp
jb
and
adc
mov
xchg
mov
mov
sbb
fildll
xchg
jp
xchg
sbb
or
add
or
or
repz
cmpsb
or
jmpw
js
loope
pop
sbb
pop
fucomip
adc
cmpsb
loope
sbb
cwtl
dec
sbb
inc
shl
fistl
push
mov
test
inc
jmp
push
lds
aam
pop
ja
movsb
cmp
outsl
bound
out
bnd
lea
ljmp
and
and
movsb
push
je
xor
shrl
jle
inc
push
cmp
jl
sub
cmp
pushf
sbb
and
adc
mov
aam
cli
aam
or
arpl
push
push
pop
push
push
out
and
jbe
pop
jbe
fisttps
pop
pop
call
inc
shll
jo
sbb
add
adc
mov
push
and
mov
aad
add
test
and
xchg
mov
sbb
icebp
cli
xchg
mov
push
out
dec
les
hlt
cmp
and
xorl
jecxz
sti
or
andb
adc
addr16
test
lds
leave
adc
jb
cmp
add
leave
xor
add
mov
mov
push
leave
repz
and
cmp
adc
sbb
popf
sbb
and
or
pop
int
fs
lahf
lea
cmp
dec
mov
or
xchg
jge
iret
enter
adc
and
push
adc
repz
mov
test
jge
fildl
sub
aad
xchg
faddl
decb
imul
in
xchg
jmp
and
mov
push
rcrb
pop
cmp
jnp
fdivrs
jecxz
adcl
jecxz
inc
movsl
push
and
sbb
sub
loop
push
addr16
pop
into
roll
mov
fwait
pusha
daa
and
cmpsl
inc
sub
pop
mov
mov
dec
inc
mov
pushf
popa
sub
out
push
mov
leave
arpl
add
mov
in
and
mov
aaa
ret
sbb
push
sbb
dec
xchg
cwtl
push
mov
push
jl
icebp
clc
rclb
stc
push
rcrl
rcll
lock
mov
push
test
clc
cmpsb
ret
pushf
ljmp
mov
sbb
mov
int
insb
lea
mov
sbb
adc
push
lahf
push
xor
stos
push
mov
in
call
xchg
pop
add
sti
push
cmp
sub
mov
push
mov
jge
mov
inc
push
lea
mov
sbb
xchg
gs
cmp
inc
mov
mov
mov
pushf
adc
dec
imulb
pushf
inc
dec
loop
xchg
pop
mov
push
and
imul
maxps
divl
fdivrl
ljmp
push
sbb
je
inc
and
jns
sbb
repz
icebp
lret
andb
sahf
or
sarb
ret
xchg
mov
inc
cmp
jl
adc
sbb
mov
pop
std
and
cli
sbb
mov
mov
xchg
mov
aas
add
sbb
pop
or
xchg
add
mov
xor
or
in
aaa
xor
hlt
xor
imul
in
lods
adc
cld
sbb
xlat
add
rcll
mov
and
lret
sbb
sbb
cmp
or
fistpl
sbb
loop
pop
stc
pop
jmp
addr16
inc
or
add
sbb
jp
aaa
push
into
mov
push
pop
mov
xchg
push
leave
or
nop
sbbl
cmpsb
adc
lahf
imul
jns
std
in
xchg
sbb
es
pushf
nop
mov
mov
sub
push
cs
jl
inc
jl
mov
fs
jnp
push
jae
or
or
sbbb
xchg
data16
push
inc
cwtl
fcompl
lret
out
xchg
sub
icebp
icebp
in
xchg
cmpsl
xchg
inc
loop
adc
fdivrl
push
cmc
xlat
ljmp
lahf
sbb
jae
nop
out
lcall
imul
sbb
je
adc
sahf
imul
iret
lods
and
pushl
and
lahf
les
lock
add
lcall
out
sbb
cmp
jbe
jmp
divb
jmp
lret
test
in
jbe
mov
pop
or
sbb
sbb
mov
ret
enter
sbb
xchg
cwtl
pop
and
pushf
imulb
or
sbb
clts
sbb
mov
or
shlb
pop
or
bound
add
inc
loopne
out
pop
sbbb
mov
sahf
push
sbb
and
incb
mov
sahf
sbb
in
or
outsb
std
xchg
push
fcmovu
add
fstpl
aam
mov
out
and
and
and
sahf
add
jmp
pusha
jbe
loopne
out
cli
loopne
outsb
jmp
add
loopne
pop
mov
or
jl
xor
movsl
jb
ljmp
and
jno
sub
in
sub
inc
lret
es
gs
pop
dec
sub
addr16
lahf
call
and
ret
shll
mov
fdiv
inc
or
jnp
imul
es
jecxz
adc
push
sub
call
aad
fbld
sbb
adc
ret
clc
icebp
sbbl
rorb
mov
call
stos
and
cmpsb
adc
pusha
in
in
pop
lods
addr16
leave
sbb
adc
jge
scas
add
push
mov
fcomps
xchg
ljmp
lcall
sub
mov
push
sbb
mov
lahf
add
daa
mov
rorb
fimuls
add
push
in
hlt
in
pop
aam
jns
pop
std
lea
cmpsb
push
fdivrl
pop
jns
cmpsb
pop
lahf
nop
clc
add
mov
pop
or
adc
cmc
pushf
mov
mov
inc
mov
ljmp
jp
mov
out
or
fs
ret
popa
jne
out
mov
pop
adc
incl
test
ja
insb
call
jnp
rclb
mov
jbe
pop
sub
add
xor
xor
pop
or
test
out
mov
mov
cmp
movsb
fstps
xor
push
or
add
insl
dec
mov
pop
out
test
lock
jmp
push
pop
jle
pop
sbb
push
sti
test
mov
cmpsl
sbb
dec
test
cld
loopne
and
push
js
mov
sbb
test
pop
and
cmc
insl
sti
mov
sahf
js
ret
mov
divb
subb
add
xchg
repz
fsubs
xchg
and
popa
add
cmp
xchg
dec
sti
xchg
popa
es
punpckhbw
push
and
adc
cmpsb
mov
jns
out
mov
cltd
and
inc
dec
les
dec
or
or
jl
fwait
into
shll
loopne
push
and
xchg
adc
xor
push
push
test
jle
lods
and
test
inc
adcb
mov
out
out
mov
or
in
cmp
inc
mov
test
jl
jecxz
pop
pop
test
ret
stc
sub
sbb
mov
sbbb
sbb
hlt
movl
stc
push
sbb
ret
mov
pop
jb
dec
aas
cld
loope
jle
add
xor
cmp
incl
lcall
roll
mov
adc
dec
fldl
and
adc
sbb
fisubrs
pop
mov
mov
imul
out
cli
push
sbb
sti
test
add
xchg
inc
mov
and
jecxz
clc
fdivrs
lods
nop
in
xor
push
fdivrs
pop
add
lods
jge
pop
pop
sti
test
cld
and
je
or
int
pop
cltd
sbb
adc
xor
and
xchg
xchg
jmp
fstps
push
lret
mov
and
jge
add
push
jno
or
jne
std
dec
and
cltd
and
ja
adc
bound
cmpl
subb
or
xchg
or
add
sbb
sbb
dec
inc
popa
add
adc
push
insb
scas
rcrl
test
mov
ret
jbe
xchg
popf
pusha
out
pop
or
jle
pop
jns
mov
jecxz
rcrl
lret
fnstcw
mov
fxtract
or
and
add
lret
mov
lods
or
fldl
and
popa
inc
nop
das
repnz
ss
jmp
lods
or
sub
rcrl
int3
fs
push
mov
inc
rcr
pop
addr16
cli
cmp
mull
mov
sti
loop
popf
ret
cs
sti
rcrb
in
pop
fcompl
popf
cmc
lea
mov
sbb
ja
in
xor
mov
sar
add
out
sbb
xor
or
ljmp
sti
jno
pop
mov
mov
bound
pop
sbb
or
or
pop
pop
pop
sbb
mov
scas
pop
lea
lea
fsubl
xchg
dec
rcrl
rcrl
rcrb
push
sbb
in
fnclex
lret
stos
cmc
cmp
sbb
fucomip
push
ja
int3
mov
sti
pop
lret
or
jg
jecxz
or
cmp
repz
adc
sbb
mov
nop
add
outsb
push
icebp
ljmp
mov
gs
daa
xchg
and
adc
push
aaa
or
push
or
ja
jmp
jo
ljmp
jns
imul
roll
and
push
mov
mov
sahf
dec
sahf
push
cmc
and
roll
inc
xchg
es
ret
cmp
xchg
or
cmc
xor
repz
push
shlb
inc
dec
xor
fildll
and
cmc
jmp
pop
inc
out
push
or
jb
mov
or
fists
dec
jbe
dec
adc
movsb
rol
mov
adc
push
lcall
sbb
mov
into
mov
jmp
sar
cltd
pop
hlt
mov
nop
ljmp
mov
xchg
bound
cmp
js
push
pusha
pop
out
or
fdiv
pcmpeqw
mov
js
sbb
sbb
lahf
mov
roll
mov
mov
cmpsb
sarl
push
dec
cmpsb
popa
jmp
push
imul
nop
cli
or
aad
stos
jnp
xchg
push
sub
ror
inc
sbb
inc
arpl
mov
jg
xchg
and
and
fidivrl
push
dec
dec
jl
add
in
cmp
sbb
icebp
push
adc
mov
jnp
lock
fimull
imul
mov
inc
jo
adc
pop
arpl
mov
ret
iret
dec
mov
sub
push
pop
aaa
icebp
les
cld
cwtl
loope
add
fidivl
mov
lds
mov
lods
mov
adc
sbb
jne
push
dec
xchg
push
add
gs
xchg
sub
fildll
adc
repz
movsl
sbb
or
pop
mov
lahf
sbb
xor
outsb
roll
inc
js
inc
imul
and
out
popf
and
test
sub
popf
in
sub
mov
sub
push
add
nop
ss
jecxz
dec
cmp
and
jnp
mov
cltd
mov
or
inc
adc
xchg
jb
cmp
and
scas
daa
jecxz
xchg
cli
pop
or
lods
sbb
jge
push
cmc
jl
xor
test
and
sbb
cmp
push
jmp
pop
sti
and
jmp
cli
scas
mov
mov
push
pop
filds
sti
add
jle
divb
inc
mov
aam
insb
divb
and
inc
mov
xor
dec
push
and
scas
int3
push
jns
test
pop
andl
push
lahf
jle
lret
out
fmuls
mov
out
imul
and
out
pushf
mov
sub
leave
cltd
and
jecxz
dec
into
adc
les
bound
push
bound
test
pslld
popf
sbb
and
and
and
inc
popf
pop
jno
adc
lds
pushf
sbb
and
pop
jns
pop
or
push
add
cmp
mov
dec
mov
mov
xor
mov
push
std
dec
pop
movsb
cmp
pop
sti
aaa
push
and
and
fisubrl
insb
loopne
and
repnz
adc
or
and
insl
push
pop
add
and
mov
inc
or
daa
mov
jp
mov
dec
hlt
shlb
out
test
adc
xchg
sbb
adc
inc
dec
add
sbb
incb
in
pop
pop
cmp
test
std
pop
and
mov
jo
cld
shll
inc
sbb
jecxz
adc
lods
push
ret
and
mov
cmpsl
test
jbe
pop
jecxz
icebp
scas
ret
cmc
cmc
sbbb
push
cli
das
xchg
mov
jle
add
cmpsl
and
das
and
xchg
push
cmp
cmp
std
xchg
mov
mov
mov
daa
cmp
xchg
ficoml
push
sahf
dec
sbb
mov
adc
lds
pop
dec
scas
dec
mov
sub
pop
xchg
inc
mov
cltd
mov
sahf
jne
and
dec
dec
call
imul
xchg
loopne
shrb
mov
scas
push
out
mov
mov
xchg
mov
push
xor
pop
sub
sbb
cld
xchg
and
arpl
test
int3
xchg
sub
arpl
add
icebp
mov
xchg
mov
filds
add
mov
pop
push
subl
jmp
lahf
imul
mov
icebp
jecxz
fucomip
dec
je
scas
push
dec
ljmp
adc
jmp
and
add
cli
and
test
sarb
inc
push
mov
sub
mov
outsb
sbb
loop
and
lods
pop
inc
imul
repnz
jmp
add
shl
jne
hlt
jp
push
dec
jmp
xchg
pop
jp
gs
fs
fbstp
push
mov
lods
cmp
fstpl
jge
aad
mov
vunpcklpd
test
adcb
xchg
inc
repz
adc
enter
lds
out
xchg
ljmp
popa
mov
pop
repnz
mov
sbb
add
pop
shll
test
into
shrl
adc
cli
stos
loopne
lahf
pop
test
push
jae
test
xchg
mov
ss
repz
hlt
jmp
ffreep
pop
ficoms
and
scas
xlat
scas
movsb
push
cmp
xchg
push
sbb
inc
nop
dec
sbb
xchg
mov
outsb
enter
mov
inc
push
arpl
loope
or
cmp
cmp
add
fadds
loop
xchg
into
out
add
fxch
sub
xchg
cmp
std
in
mov
or
cmp
mov
jmp
fld
imul
sub
imul
es
and
cmpsb
inc
clc
push
inc
or
cmp
mov
sahf
mov
adc
enter
test
cltd
cmp
sub
mov
das
pop
xchg
cmp
adc
jge
imul
and
and
cmp
negl
shlb
jp
adc
sub
call
and
xchg
adc
jbe
les
or
imul
push
pushf
fistps
push
arpl
and
dec
out
imul
clc
mov
adc
xor
mov
and
lds
int
cmp
pop
mov
jns
dec
movsl
out
imulb
xor
lods
inc
das
pushf
mov
xor
xchg
popf
leave
je
sub
sbbb
shrb
and
mov
mov
mov
call
lahf
fiadds
and
mov
mov
subb
and
mov
lods
call
dec
pop
hlt
or
fwait
std
or
adc
subps
sbb
insb
add
adc
sub
mov
pop
cmp
mov
lcall
mov
outsb
lea
add
add
pop
sti
adc
add
cmc
loope
ljmp
subl
int
mov
movsb
mov
lret
adc
inc
test
and
inc
sahf
mov
in
add
mov
push
pop
shlb
pop
lahf
push
inc
sahf
mov
pop
dec
repnz
pop
ret
sbb
pushf
lahf
hlt
mov
pusha
pusha
and
or
lcall
daa
add
jmp
add
and
and
adc
and
adc
and
addr16
ljmp
and
add
jo
dec
dec
sub
sbb
incl
add
mov
adc
das
rcrl
mov
out
dec
arpl
ja
cli
fwait
and
xchg
and
adc
out
daa
fstp
inc
adc
incl
sbb
test
call
es
xor
mov
loopne
jnp
das
pop
popa
enter
rcrl
inc
sbbl
mov
inc
call
adc
mov
imul
sub
adc
sbb
icebp
push
mov
leave
rorl
stos
pop
andl
add
xchg
push
fwait
clc
cwtl
sbb
push
cmp
jbe
repnz
int3
pushf
into
or
fiadds
and
add
into
mov
and
int
mov
cmp
loopne
les
xor
mov
cltd
adc
addr16
test
cmc
bnd
sub
out
xchg
adc
sbb
ficompl
out
rcll
inc
sbb
jnp
and
cmp
pop
mov
inc
daa
mov
mov
call
pop
popa
mov
xchg
pop
out
add
mov
imul
es
xor
sbb
xchg
sbb
add
pushf
lods
add
nop
stc
aas
in
pop
sub
repnz
popa
sbb
dec
sti
pop
sahf
pusha
mov
imul
arpl
adc
add
lea
repz
fildl
sbb
test
cmpsb
pusha
push
nop
sub
or
lods
lea
mov
loope
mov
mov
mov
jae
push
enter
pop
mov
mov
cltd
jns
or
iret
push
pop
mov
inc
add
insl
adc
pusha
xor
lahf
imul
out
stc
push
mov
dec
pop
fsubr
add
dec
fsubs
and
iret
add
fldt
mov
fadd
or
arpl
pop
xor
cmc
int
enter
mov
xchg
mov
repz
mov
bound
or
adc
mov
and
sbb
push
popa
xchg
cmpsb
dec
inc
mov
aad
add
cmp
mov
push
sub
inc
pushf
mov
ss
add
mov
push
test
jns
sahf
stc
or
lock
outsb
pop
pop
push
imul
mov
jle
cli
mov
jnp
sub
clc
std
adc
cmpsl
sbb
es
loopne
repz
xchg
add
or
add
pop
push
mov
mov
mov
push
dec
cld
add
jmp
sti
cmc
mov
pushf
mov
dec
jnp
dec
enter
cmpsb
test
push
lods
popa
lods
sahf
push
sub
inc
inc
shll
and
mov
outsl
jno
mov
cmp
sahf
pop
movsb
int
and
mov
mov
jmp
stos
sbb
push
imul
sahf
popl
pop
fdivr
int3
adc
scas
sbb
ret
mov
addb
jle
loope
sub
mov
mov
movsb
push
fstpl
add
inc
aaa
adc
xchg
jnp
or
out
cli
mov
push
cltd
mov
fdivrl
fstl
shrl
rcrl
and
xchg
jae
and
out
dec
pop
cmp
mov
fcompl
pop
xchg
mov
inc
call
test
pop
sub
loope
mov
and
js
add
cwtl
out
mov
mov
icebp
jl
insb
mov
loope
or
jno
jle
jne
lods
mov
xor
call
dec
fbstp
mov
aas
or
sti
pusha
cltd
fmuls
lea
repnz
insl
and
lods
sub
test
push
mov
xchg
mov
mov
add
popa
test
scas
add
push
mov
std
pop
mov
adc
sbb
adc
or
in
ljmp
adc
das
add
jge
push
lock
mov
or
idivb
cwtl
sbb
dec
add
ljmp
jmp
sbb
test
or
inc
push
sbbl
in
xor
test
fdivr
out
jmp
sub
rcl
ror
stos
mov
and
mov
faddl
inc
sub
es
sbb
inc
subl
mov
sub
pop
dec
adc
subl
lea
pushf
nop
fwait
pop
vminsd
mov
sbb
xor
popf
jl
adc
pusha
shlb
and
add
or
ret
enter
xchg
sbb
jp
setae
lock
fisttps
pop
add
ds
mov
sti
or
ljmp
adc
clc
ss
outsb
addr16
out
or
jle
and
jnp
jge
cmc
pop
or
cwtl
mov
mov
mov
push
test
mov
mov
xchg
arpl
adc
or
cmp
or
and
cmc
aas
mov
rorl
sbb
stc
sbb
in
arpl
addr16
mov
inc
pushf
sahf
push
data16
sub
loope
cwtl
addb
cwtl
rcrb
push
adc
sbb
shl
or
aad
repnz
ret
rorb
daa
jns
packsswb
inc
push
add
iret
int
pushf
pop
pushf
sbb
test
rcrl
mov
loope
out
mov
lods
fadds
or
adc
dec
repnz
call
and
bound
push
sbb
xor
pop
dec
ja
and
rorl
ljmp
fisttpll
mov
cmp
shll
push
shr
cld
ja
rcrl
sbb
iret
into
imulb
mov
push
stc
cmp
lcall
call
mov
and
imul
outsb
rcrl
add
add
cmp
stc
push
xchg
dec
xlat
enter
jp
popf
pop
and
cwtl
mov
cmovle
xchg
sbb
mov
aas
sbb
and
cwtl
arpl
mov
push
test
sub
hlt
jecxz
out
mov
addr16
repnz
data16
adc
dec
mov
cmp
sbbb
add
or
or
filds
and
hlt
mov
clc
sub
outsl
test
sti
pop
and
mov
fldl
dec
rclb
and
fs
dec
jno
jecxz
popf
in
sbb
jns
mov
lods
lret
in
iret
in
js
mov
adc
and
lods
and
test
stos
mov
or
adc
pop
adc
adc
sbb
inc
ret
xchg
fcmovu
pushf
ljmp
or
cs
cmp
jg
cmpsl
enter
and
inc
call
psubusb
out
cwtl
ret
jmp
mov
mov
js
fistpll
mov
shll
faddl
pop
xlat
outsb
adc
mov
out
mov
rol
scas
fsubl
in
imul
dec
jg
xchg
add
mov
andl
les
jbe
addb
mov
sbb
inc
fsubrl
arpl
mov
xchg
pop
jne
cmpsb
pop
inc
out
shl
xchg
cmpsb
aad
icebp
lods
mov
mov
sub
lret
inc
lahf
lcall
xlat
mov
xchg
fwait
pusha
out
or
xchg
lds
add
jo
sbb
adc
sub
sbb
xchg
and
xchg
std
mov
arpl
sti
ficomps
add
jns
pop
lret
or
adc
cli
test
pop
js
scas
xchg
adc
icebp
sbb
pop
lods
xchg
out
addr16
sub
rcrb
push
mov
add
stos
and
dec
xchg
rol
xchg
sub
icebp
test
int
inc
repnz
sub
and
rcr
cmp
fadds
inc
push
mov
test
jno
out
xchg
mov
popf
and
fstps
dec
pusha
adc
mov
fstl
loope
add
dec
push
or
scas
pop
incl
or
sub
and
xlat
cli
je
icebp
xor
std
popa
mov
jg
popf
dec
add
repnz
mov
repz
std
dec
daa
or
push
dec
jecxz
cmp
or
or
jmp
cmp
cwtl
data16
mov
stc
out
mov
xor
mov
xorb
rorb
push
push
sbb
aam
rcrl
pusha
ret
mov
js
ja
push
jge
jmp
pop
rcrl
mov
cmp
mov
pop
dec
jno
sub
cmpsb
sbb
stos
pop
dec
jecxz
rcrb
pop
arpl
mov
iret
stos
add
rol
xchg
jne
pop
shrl
popf
sar
add
out
sub
sbb
mov
pushf
cmp
and
cmp
gs
adc
popf
add
xchg
jbe
sub
jns
add
bndstx
jecxz
ret
jne
loope
sti
add
clc
xorb
push
fidivl
cmp
mov
aad
andb
dec
aas
add
loopne
jns
loop
nop
push
jns
sbb
cli
shlb
mov
pop
push
nop
stos
lds
fs
and
mov
fld
jmp
adc
lahf
vcvtss2sd
sbb
mov
int3
pop
pop
jp
sub
xchg
test
jnp
divl
jle
fisubs
and
fildll
fbld
vmread
mov
test
insb
mov
and
dec
fnsave
mov
in
icebp
in
hlt
mov
mov
mov
sbb
or
das
jns
daa
fcomps
dec
xchg
and
push
mov
test
mov
mov
js
rcrb
nop
pusha
push
enter
rcll
jae
popf
sub
adc
dec
mov
call
push
insb
and
lret
scas
and
sub
fidivs
xchg
cwtl
pop
cmp
inc
pop
addr16
roll
push
add
sbb
jbe
push
add
pop
sub
data16
jo
arpl
push
popf
or
hlt
shll
arpl
adc
or
lods
test
pop
cld
js
pop
sbb
dec
mov
push
setp
push
sbb
popa
daa
insb
add
inc
mov
pushf
sbb
cmp
sbb
adc
cmpsl
mov
adc
xlat
ret
push
test
mov
mov
or
sbb
adc
or
sub
mov
arpl
and
mov
fwait
mov
icebp
add
sbb
mov
das
mov
adc
xlat
add
pusha
mov
mov
test
test
add
inc
and
jno
mov
jecxz
cmp
nop
push
rcr
js
pop
add
push
roll
push
dec
jle
sbb
adc
push
push
enter
push
mov
cltd
lret
je
je
pop
pop
mov
pand
pop
push
hlt
cmpsb
cmc
inc
pop
in
roll
and
or
cs
shrb
pushf
cld
mov
or
loopne
mov
xchg
sbb
js
push
pushf
ja
pop
inc
sbb
fistl
out
pop
sbb
imul
pop
cld
or
hlt
pop
mov
shlb
adc
mov
mov
mov
data16
scas
mov
data16
sbb
lds
push
js
test
xchg
stos
adc
and
and
insl
mov
popf
mov
mov
in
mov
and
popa
sti
dec
pusha
cmp
add
insl
sbb
idivb
xchg
int3
adc
jge
arpl
sbb
out
lea
mov
lcall
and
inc
in
cltd
and
add
aas
or
xchg
adc
jnp
in
cmp
cmp
sbb
or
cmp
push
push
or
je
cmp
ss
and
cmp
mov
xor
lds
js
pop
pop
sbb
add
push
adc
cld
jle
inc
mov
inc
popa
adc
adc
enter
fscale
stos
fs
popf
push
btc
sub
jg
pop
push
cli
ja
stos
and
pop
scas
sub
xchg
test
mov
js
sub
and
dec
mov
mov
out
icebp
cmp
push
call
lcall
roll
pop
sub
inc
or
or
dec
cmpsl
pop
test
out
ja
sub
pop
in
stos
cmc
sbb
sahf
bound
or
sbb
sub
adc
inc
lret
cmp
push
fstpt
inc
sbb
fisubrl
in
je
xor
in
sahf
out
repnz
jmp
pusha
loop
sbb
fiadds
jmp
call
xchg
fisttpl
icebp
into
pop
mov
sti
bound
pop
sub
push
out
xchg
mov
cmp
hlt
sbb
push
push
shlb
sbb
test
test
test
cwtl
and
out
enter
lods
xchg
jne
lods
jl
sti
dec
mov
test
ret
scas
inc
push
rorb
jb
addr16
pop
and
mov
jle
fcmovne
scas
jns
sbb
in
fdivrs
and
cwtl
mov
lret
pusha
cli
jle
mov
adc
test
xchg
iret
push
cwtl
mov
cs
sbb
rolb
sub
push
cmp
js
mov
mov
mov
mov
sbb
sbb
mov
cmp
jns
push
pushf
dec
out
mov
jecxz
adc
pop
sub
sahf
pop
add
push
rcrb
mov
cmp
mov
scas
sbb
fiaddl
pushf
frstor
mov
mov
pop
push
mov
cmpsb
mov
scas
inc
insl
ficoms
add
loope
xchg
and
mov
cmpsb
mov
sbb
mov
mov
xchg
fsubp
mov
imul
sbb
fcomip
or
out
mov
xchg
stc
lea
addr16
or
push
aaa
sbb
xchg
scas
testb
cli
sahf
loope
sub
push
lret
out
iret
cmpsb
pop
sbb
xchg
aas
xchg
push
jne
jle
outsl
adc
scas
scas
cltd
fcomps
jno
adcl
test
mov
mov
sbb
jbe
or
fnstsw
mov
fs
pop
inc
mov
call
push
loope
mov
in
mov
jns
jl
fwait
je
dec
leave
loop
popf
pop
jmp
enter
mov
arpl
cli
add
cmpsb
add
mov
negl
mov
sub
test
pop
jne
xchg
and
and
cld
or
mov
cmpsl
jp
adc
test
leave
addps
jl
int3
aaa
lds
movsl
mov
mov
jne
insl
cltd
ficomps
pop
jns
rep
xchg
ficoml
pop
clc
sub
sbb
cmpsl
sbb
mov
and
rcrb
mov
mov
rcrl
add
and
jge
fwait
shl
jp
shl
push
xor
popa
push
sub
out
add
dec
pop
push
push
in
push
and
jb
push
mov
jp
out
mov
out
rolb
repz
push
sbb
pusha
stos
js
add
cmp
lods
fcom
mov
mov
enter
fisttpl
dec
push
mov
adc
arpl
jns
lods
clc
shll
mov
or
sbb
lds
cmp
sbb
andb
mov
fcmove
cmp
sbb
mov
and
mov
lret
mov
xor
icebp
jmp
les
pop
lret
or
add
push
sbb
negb
stos
and
sbb
cmp
jg
repz
ja
xchg
out
dec
pop
cmp
loope
pop
movsl
andl
sahf
fsts
and
std
pop
icebp
xorb
imul
dec
iret
xor
lret
mov
mov
jnp
lcall
push
push
add
sbb
jge
inc
push
xchg
in
sub
dec
jg
rcrb
and
mov
jmp
in
loope
or
incb
mov
out
lret
mov
xchg
cltd
and
je
inc
jecxz
imul
mov
mov
mov
or
adc
and
mov
adc
incl
stos
mov
jp
jp
push
test
arpl
pop
xchg
inc
in
jmp
js
icebp
filds
in
std
clc
cmp
ret
cmp
les
cmp
shll
mov
jg
pop
sti
sti
pushf
and
xor
mov
popf
push
inc
jecxz
adc
daa
sbb
or
lcall
iret
xchg
in
or
sub
or
sbb
add
rcrl
and
xlat
add
test
ljmp
pop
test
add
and
jbe
xchg
add
in
aas
leave
shrb
and
jp
popf
ja
imul
gs
fwait
jmp
mov
adc
and
lock
pop
cmpsl
xchg
lret
xchg
fstl
rcrl
aam
enter
push
pop
push
rcl
adc
rorb
mov
pop
stc
cmpsb
mov
mov
insl
mov
fcompl
xchg
push
xchg
add
sbb
mov
add
cmpl
inc
sbb
mul
aam
lea
ret
pop
pop
xor
push
push
stos
dec
sub
inc
push
inc
clc
xchg
sbb
mov
leave
or
or
jnp
lahf
test
xor
pusha
sbb
jmp
or
xchg
inc
cmp
jle
adc
iret
or
andb
push
cld
aam
sbb
std
pop
push
pop
pop
loope
aam
dec
fistl
pop
add
ret
jmp
add
sahf
pop
pop
dec
mov
fists
cwtl
rcrl
pop
push
xor
mov
xchg
xchg
sbb
and
push
add
enter
scas
rcll
call
push
fisttps
cmpsb
lret
rcll
adc
loopne
arpl
and
shll
lds
addr16
sub
mov
into
sbb
test
xor
adc
or
mov
daa
lds
es
push
jecxz
or
mov
xor
cmc
sahf
inc
jecxz
lret
stc
mov
jbe
shl
int
add
jecxz
fidivrs
xor
popf
xchg
jge
orl
pop
adc
push
ffreep
stc
pop
pop
add
pop
adc
sbb
in
jo
divl
lcall
add
xchg
or
add
std
xchg
repz
jg
cld
xchg
xchg
sbb
sbb
jl
out
rcll
xchg
push
jo
jg
adc
clc
xchg
jle
jecxz
rcrl
loope
adc
pop
rclb
jg
add
roll
pop
ja
idivb
jbe
cmc
pusha
lcall
xchg
repnz
xlat
icebp
adc
fistpl
in
pushf
outsl
orb
fistps
xor
add
or
add
xor
add
xchg
add
sbb
popl
adc
lcall
adc
lcall
xchg
jnp
cs
cli
cmpl
pushf
stc
or
pop
lock
arpl
enter
cmp
dec
nop
push
cltd
adc
push
sbbl
adc
rcll
into
push
cltd
dec
sbb
int
push
add
and
ffreep
pop
or
fcmovu
add
fldenv
pop
inc
adc
pushf
jbe
sar
leave
pop
jns
lock
repz
mov
hlt
dec
addl
adc
out
jg
test
xchg
push
in
adc
test
lods
lret
inc
and
and
inc
ja
sahf
lret
xchg
mov
jp
nop
rorl
mov
lcall
lods
out
jl
loope
data16
xor
cmc
in
xor
shll
jmp
lahf
nop
sti
pop
add
pop
adc
lods
icebp
stc
popf
mov
nop
mov
pop
jg
movsl
pop
adc
xchg
cmp
push
nop
add
xchg
push
mov
sub
or
xchg
and
xchg
dec
dec
std
es
sub
dec
movsb
mov
inc
sub
dec
cld
xorb
js
adc
sbbl
shrb
stos
push
cltd
mov
movb
adc
sbb
jmp
xchg
add
int
or
popa
xor
dec
lock
push
out
jns,pt
out
je
addr16
jns
out
ret
out
pop
jl
arpl
in
jmp
fsub
out
repnz
ja
add
push
mov
inc
fisttps
fildll
jecxz
ret
jno
test
jp
out
fistpll
push
mov
jbe
fs
push
out
dec
shlb
pop
push
notl
stos
imul
cmp
sub
push
add
and
sti
arpl
inc
inc
shlb
add
jecxz
cmp
xchg
jmp
add
mov
jecxz
movsl
aaa
loope
mov
test
dec
xlat
fisubl
jp
idivb
rcrl
iret
dec
sub
mov
fstpt
dec
movsl
cld
lods
cs
xor
popl
nop
pop
mov
popa
mov
inc
cmc
adc
imul
jmp
lcall
add
push
enter
mov
sbb
gs
pop
adc
filds
icebp
mov
pop
arpl
addb
jp
mov
xchg
test
insb
out
adc
push
adc
and
testb
dec
inc
push
push
sarl
sbb
and
call
inc
jnp
mov
jge
pushf
lahf
adc
pop
adcl
inc
inc
xchg
sbb
sbb
mov
mov
addr16
dec
mov
je
dec
jecxz
or
and
or
jno
adc
push
or
jno
rclb
in
mov
push
enter
sbb
nop
scas
mov
inc
and
fildl
scas
xchg
pop
xor
xorl
xchg
mov
dec
jns
pop
adc
ror
out
sbb
jnp
jp
sub
push
inc
imul
mov
push
mov
and
fildl
jecxz
xchg
xchg
mov
shll
aad
js
xchg
sub
cmp
imul
inc
mov
sbbl
xchg
sub
add
mov
movsb
and
jge
push
aad
test
js
lock
fldcw
add
mov
xchg
adc
cld
add
adc
adc
adc
push
adc
ror
push
loop
aad
fidivs
in
loope
arpl
jmp
pop
in
xor
inc
sahf
xchg
lds
sti
xor
sub
scas
cli
pop
pushf
sahf
cmc
in
push
or
jg
ljmp
adc
adc
jl
jmp
inc
xchg
cmp
add
sub
arpl
lcall
inc
sti
std
popf
lcall
adc
icebp
sbb
lock
adc
xchg
shll
mov
push
fidivrl
pop
stos
xchg
lcall
std
jns
fcmovbe
lret
jg
fadds
push
jp
test
pop
ss
test
xchg
daa
out
sbbl
push
jecxz
loopne
frstor
sahf
imul
pop
ror
xchg
mov
cltd
jl
icebp
popf
adc
push
aaa
adc
adc
push
push
cwtl
aaa
xchg
lcall
adc
sbb
sahf
clc
popf
or
cmp
push
jmp
popf
pushf
pusha
and
std
xchg
inc
and
call
cwtl
fsubl
jecxz
rcll
mov
divl
test
jp
lods
testb
fdivr
mov
sbb
popf
push
jns
adc
aam
xchg
shrb
and
and
fxch
insl
or
loop
aad
xorl
or
cltd
outsl
push
mov
aam
lcall
repz
adc
and
xchg
or
rolb
sub
sub
ficoms
int3
sbb
push
pop
ds
xchg
xchg
or
push
clc
sub
rcrb
push
test
cmp
pushf
nop
mov
jb
or
xchg
jns
xchg
call
loop
rcrb
lods
adc
push
jbe
cmc
cwtl
arpl
into
cmp
dec
inc
ret
xchg
mov
cs
fbstp
pop
cmc
test
jl
lods
imull
mov
cli
adc
sbb
mov
inc
cmc
jo
es
mov
rclb
lods
loop
push
pop
pop
or
stos
ljmp
pop
xchg
push
inc
add
pop
aad
jmp
jnp
std
sti
insb
xor
sbb
pop
stos
mov
into
mov
lds
xchg
inc
sbb
mov
jno
cmp
and
push
in
insb
gs
stc
push
push
loopne
hlt
mov
jnp
sub
outsb
lock
mov
cmp
sub
popl
movups
dec
inc
test
dec
xlat
xor
enter
testl
xchg
mov
loope
and
xchg
fstp
sarl
dec
std
jmp
xlat
sub
insl
push
cs
imul
leave
pop
dec
fdivr
enter
or
lahf
in
dec
pop
jbe
xchg
inc
arpl
mov
insl
jae
inc
or
lea
lods
movsb
cmp
lock
mov
sbb
scas
notl
mov
cli
push
in
and
popf
sub
add
sub
or
cmp
in
clc
push
in
and
int3
outsb
test
cmpsl
dec
push
cld
in
push
pop
loop
cli
sbb
dec
sbb
cmc
pop
int
rorb
xchg
sbb
dec
adc
ss
sbb
push
jmp
dec
push
sti
adc
jl
scas
imul
adc
ret
negl
adc
fldcw
jne
xchg
adc
inc
fmuls
out
fwait
cmpsl
adc
inc
js
aad
or
push
cmpsl
adc
inc
xchg
leave
mov
fadds
inc
sbb
fadds
mov
test
andb
sti
jp
mov
loope
mov
xor
dec
cld
or
gs
push
inc
jecxz
enter
and
mov
rcrb
sub
add
aas
cmpsb
xor
sub
decb
mov
adc
sbb
sahf
jecxz
cmp
test
cwtl
pop
add
mov
rcr
stos
adcl
push
fnstenv
fmul
in
dec
xchg
mov
dec
adc
sub
jle
sbb
inc
dec
aas
testl
stos
sbb
xchg
and
and
jecxz
sub
pop
pop
ss
mov
jns
lahf
pop
shlb
pop
lods
inc
xchg
mov
inc
shl
lret
mov
mov
sbb
incb
jno
and
bound
push
adc
dec
shlb
push
lahf
sub
add
sub
adc
sbbb
jge
stos
pop
repnz
inc
in
push
cltd
dec
cld
shrd
sbb
cmp
out
push
fcompl
test
inc
cmpsb
pop
sbb
cmpsb
out
lret
in
fists
jmp
fldl
aad
pop
jmp
loope
bound
jmp
push
arpl
jmp
cmc
out
filds
jge
sti
push
and
sti
insl
test
jge
jecxz
or
nop
jne
mov
xchg
sbb
pushf
insb
add
sti
pusha
xor
push
xor
inc
mov
inc
mov
push
cmpsl
pop
fcmovnu
sbb
pop
or
test
push
xchg
adc
sub
push
ret
sbb
inc
cmp
pop
into
jge
ds
jg
lds
jns
xchg
js
pop
and
pusha
iret
push
cli
pop
push
pop
clc
sbb
add
mov
insb
jmp
jb
imul
loope
push
stos
or
sbb
cli
mov
sub
mov
push
jae
mov
adc
std
inc
adc
jmp
sbb
inc
and
enter
js
jae
xchg
push
std
mov
jne
dec
mov
mov
dec
mov
push
jecxz
sub
cmp
mov
push
jmp
pop
stos
je
dec
bound
outsb
fists
test
out
pop
sbb
pop
gs
xor
xlat
lds
nop
ret
das
dec
inc
jecxz
dec
push
loopne
int
out
sbb
cmp
pop
push
sbb
movsb
or
mov
mov
enter
into
rorl
sbb
pop
sbb
and
adc
pop
lcall
and
xchg
call
imul
sub
pop
hlt
lcall
lcall
sbb
sub
clc
pop
mov
and
arpl
rolb
cmc
orb
push
out
in
jae
out
test
ljmp
push
stc
and
test
cmp
inc
vmwrite
inc
pusha
dec
xchg
mov
inc
repz
adc
insl
push
shll
cmp
pop
ljmp
stos
jbe
lds
push
cltd
mov
xchg
mov
popa
xchg
mov
inc
cmp
cmp
jno
add
loope
loopne
shl
loop
test
das
sbb
clc
jbe
das
je
push
fsubrs
sub
jb
leave
and
inc
dec
or
jo
push
push
cmp
or
sub
adc
mov
in
pop
testl
push
out
sbb
repnz
add
inc
mov
push
out
in
jp
mov
xor
xor
push
adc
xlat
mov
jns
xor
ljmp
fistl
popa
or
inc
or
jecxz
push
ss
or
fimull
dec
into
xor
cld
aam
add
test
int
xchg
pop
or
jmp
push
rorl
lods
call
pop
ficoms
test
lahf
cltd
unpcklps
outsb
push
sub
add
and
stos
jae
jge
out
ret
sarb
and
rcl
rcrl
jmp
push
inc
cmp
or
rcr
sahf
fadds
push
cs
fs
pop
loopne
test
xchg
fmull
cld
or
enter
sbb
ret
dec
inc
popa
adc
xchg
pop
fwait
or
cltd
add
push
rcll
jno
or
sub
fs
cld
lret
mov
pop
or
sarb
add
mov
arpl
into
adc
popf
jmp
scas
shll
pop
mov
jmp
jnp
jp
fsubl
pop
cmpb
xchg
jp
jne
mov
stos
insb
and
pop
mov
adc
and
adc
inc
adc
mov
orb
xchg
pop
fnstenv
adc
add
jecxz
xor
mov
xor
or
sbb
shrb
add
add
out
mov
out
rcrl
jmp
xchg
mov
adc
sub
push
cmp
cwtl
push
jmp
and
test
push
and
xchg
fnstsw
js
mov
or
and
dec
adc
mulw
xchg
cli
push
push
jnp
adc
xchg
and
xor
inc
adc
into
leave
shrb
xchg
inc
es
xchg
add
loope
push
xchg
mov
mov
hlt
aam
push
cmp
data16
and
andl
stos
jnp
xchg
in
psubusw
int3
xchg
cwtl
and
mov
push
fildl
mov
push
jecxz
sub
push
aam
jnp
aad
pop
pop
push
and
mov
pop
mov
dec
jne
fiadds
cmpsb
popa
ficomps
sti
jbe
mov
in
jp
out
and
jae
loopne
sbb
cwtl
add
xchg
lea
dec
das
mov
test
arpl
fwait
int3
pop
pop
mov
out
es
call
inc
cwtl
dec
jle
dec
push
mov
hlt
imul
sub
add
lahf
cli
jns
inc
jns
out
push
mov
mov
mov
add
pop
jbe
xchg
push
js
cmp
lcall
sbb
repnz
inc
test
mov
sti
mov
in
in
mov
add
add
insb
repz
sbb
push
int3
xchg
mov
inc
inc
jmp
sbb
insl
add
xor
std
sub
out
inc
sbb
adc
lcall
and
icebp
stc
arpl
adc
pop
mov
lret
pop
sbb
push
sti
movsb
or
rcrl
dec
aas
into
jle
push
das
nop
cmp
pop
add
nop
sbb
inc
pushf
adc
push
mov
and
cltd
jle
adc
add
jl
and
pop
pop
pop
cwtl
aas
mov
pop
adc
dec
xchg
adc
sbb
cmp
and
jnp
adc
sbb
mov
ljmp
adcb
adc
add
xchg
pop
mov
cmpsl
add
push
es
into
shr
jns
fstpl
repz
or
xchg
xchg
or
adc
mov
jo
pop
mov
lret
cmpl
mov
mov
out
xchg
ljmp
in
or
aaa
and
std
ret
xchg
imul
sahf
jae
mov
pop
mov
jae
movsl
jl
or
int
sbb
push
lods
xchg
cli
or
and
lahf
jne
mov
jp
push
shlb
add
enter
lock
jae
add
out
or
pop
dec
lock
inc
pop
inc
outsb
repz
pop
push
xchg
adcl
or
mov
cmpsb
pop
mov
lcall
loopne
movsb
iret
sti
pop
jecxz
rcrl
add
sub
cmp
std
mov
enter
pop
mov
fistps
std
pushf
push
push
lds
inc
push
push
icebp
push
mov
adc
fcmove
adc
push
movsl
sahf
jecxz
lds
push
popa
sub
push
imul
pop
sub
clc
popf
push
and
inc
add
push
add
fldenv
cmp
inc
mov
in
pop
and
cld
addr16
movsl
inc
xor
jle
out
clc
jbe
jp
xor
push
sbb
pop
icebp
int
aam
push
cltd
out
aam
push
fdivl
or
sbb
repnz
inc
or
push
pusha
or
pop
pop
orl
cmc
je
std
mov
push
sar
adcl
pop
repnz
adc
mov
ret
sub
xchg
lahf
push
pop
xchg
pop
rcrl
dec
jle
loope
in
sbb
push
repnz
test
imul
in
push
and
pop
pop
addr16
add
div
adc
push
in
xor
cmp
add
jne
call
or
or
and
and
sbb
popa
cwtl
push
lcall
or
xchg
push
lea
mov
adc
dec
subb
xchg
mov
enter
enter
ljmp
loope
jns
mov
and
bnd
in
fnstsw
popa
sbb
adc
int3
lock
cwtl
imul
mov
pop
jo
add
fdivrl
push
jae
xchg
incb
stos
insl
and
pop
add
testb
sbb
inc
sahf
pop
mov
aam
sbb
add
pcmpgtd
add
sbb
pop
sbb
jmp
sub
pushf
sbb
movsl
shrb
cmp
out
mov
push
jge
test
loop
or
movsl
push
sarl
mov
loop
mov
xchg
scas
mov
pop
cmc
jmp
jno
sub
inc
scas
and
ds
leave
jns
leave
ljmp
mov
aaa
and
aaa
dec
cmpl
lea
leave
mov
xchg
pop
ret
mov
clc
adc
mov
cmp
dec
inc
fisttpl
sbb
movsl
mov
cld
pushf
pop
scas
and
cs
mul
cmp
and
add
pushf
jecxz
mov
cld
or
inc
and
inc
hlt
or
loopne
out
and
cmpsb
pop
imul
ret
xchg
push
jp
cltd
inc
xchg
lods
sub
push
or
mov
test
or
and
insl
out
mov
cmp
add
cwtl
inc
lods
shlb
push
push
test
and
push
and
aad
mov
inc
xchg
out
repnz
sub
mov
stos
sti
mov
in
sbb
and
jl
movl
roll
and
loope
jbe
iret
jae
scas
xor
aad
fnstcw
mov
test
xchg
cwtl
sbb
out
movsl
cmpl
sbb
add
push
js
ss
scas
pop
ljmp
scas
sbb
jp
incl
fistpl
popa
out
test
call
jo
repnz
mov
sbb
stc
shrb
lahf
in
out
sbb
loope
cmpsb
jno
es
adc
popf
pop
add
sub
push
stos
xchg
pop
and
std
in
negl
cmp
mov
cwtl
movsw
adc
cltd
out
inc
push
sbb
jbe
fisttps
mov
add
mov
and
and
inc
je
sbb
add
and
stc
cli
jnp
movsb
jmp
and
mov
shll
mov
mov
loopne
aam
mov
sbb
lahf
loope
rclb
scas
push
sbb
adc
push
add
js
adc
adc
hlt
push
sbb
ja
cmpsl
sub
push
insl
aad
mov
arpl
outsl
cltd
push
pop
push
dec
inc
xor
jle
push
in
lds
fbstp
int
imul
cltd
xchg
push
sbb
cmovl
sub
and
push
mov
cmp
lret
movl
fbld
nop
mov
enter
push
and
jns
sbb
lods
lock
repz
inc
jle
clc
adc
mov
inc
xor
ljmp
and
add
pop
jno
faddl
inc
imul
adc
push
mov
imul
sbb
movsb
cmc
adc
mov
xchg
ljmp
fdivl
cs
mov
sbb
es
sbb
dec
movsl
fdecstp
ret
and
and
mov
stos
ljmp
clc
xchg
mov
sbb
popa
in
andl
push
add
adc
loope
lret
lret
sbb
sbb
rorb
lock
fmuls
jbe
adc
push
outsb
push
pop
jnp
push
cld
sbb
mov
jns
lea
add
inc
or
lret
aad
int3
push
inc
mov
pop
jcxz
or
fnstsw
sbbl
sti
add
pop
sub
mov
repnz
dec
enter
in
xchg
and
ljmp
jecxz
mov
inc
out
pop
fistpl
lds
sbb
sub
test
mov
fmull
call
and
fisubrl
andb
call
adc
inc
sub
fwait
int3
ret
addr16
mov
jg
inc
aad
loope
sahf
adc
push
mov
push
enter
in
ret
js
imul
dec
das
jecxz
and
pop
pop
test
jb
inc
adc
scas
and
jmp
aad
mov
fwait
mov
jmp
in
imul
mov
test
cwtl
sbb
out
hlt
lds
std
jns
dec
push
xchg
addb
jo
arpl
rorl
mov
dec
push
ljmp
dec
out
lods
cmpsb
js
lds
adc
pushf
jnp
or
and
adc
fsincos
je
add
sbb
ret
sbb
insb
inc
cwtl
dec
mov
loopne
scas
adc
dec
enter
push
push
stos
rorb
sub
or
cmp
dec
pop
xchg
dec
fnstcw
fdivrs
push
sbb
shl
jp
leave
or
insb
mov
mov
cld
and
pop
mov
in
popf
repz
pop
xlat
inc
adc
xchg
arpl
gs
sbb
lods
and
int
pop
jns
xchg
pop
sbb
lea
outsb
mov
enter
sbb
fcoml
test
cwtl
add
sbb
xchg
rcrb
ss
xchg
sub
or
lahf
or
and
and
mov
aad
sbb
leave
cs
into
sbb
loopne
jnp
adc
inc
dec
pop
jle
jl
lea
and
fsubrl
call
scas
cli
sub
insb
dec
rcl
and
pop
push
repz
aam
mov
sbb
icebp
fstl
mov
pop
sub
jmp
jmp
sbb
push
push
sti
pop
sub
mov
dec
out
popf
or
incl
and
mov
sbb
dec
pop
test
repnz
fstl
cmpsb
push
es
sub
push
scas
add
sbb
sub
testl
dec
and
das
push
lcall
or
inc
sub
xchg
out
ja
mov
mov
push
and
cmp
mov
lsl
dec
inc
adc
movsb
sbb
xchg
inc
jg
lahf
mov
push
cmp
mov
scas
loopne
jmp
and
dec
xchg
sbb
or
jns
xor
dec
cmp
jb
ficomps
das
ljmp
lea
and
sbbb
sbb
mov
push
mov
js
cmp
in
adc
mov
fnstsw
adcb
and
adc
aas
push
sahf
or
sub
pop
sbb
cltd
jl
fstl
arpl
pop
adc
push
adc
and
adc
pop
nop
orl
sbb
data16
jge
adc
push
adc
mov
push
mov
xor
push
pop
push
cltd
ds
jge
sbb
xchg
and
pop
insl
mov
pop
pop
fcompl
cwtl
add
inc
jg
mov
int
sub
ret
jle
inc
adc
lods
dec
fsubrs
rcrb
fwait
out
push
add
xchg
imul
mov
push
dec
cmp
dec
loope
repnz
data16
cmp
incb
pop
clc
aad
mov
xlat
sub
push
icebp
nop
and
pop
arpl
adc
add
push
mov
inc
adc
jns
fldcw
daa
push
mov
test
shlb
mov
loopne
sub
or
pop
or
mov
push
or
or
cmp
sub
xchg
cld
test
ss
push
js
and
lret
sbb
aaa
ja
lret
pop
push
or
ret
xchg
adc
xchg
jae
aas
mov
fdivl
jno
and
out
cmp
in
pop
mov
test
adc
xchg
andl
mov
aaa
mov
or
sbb
cld
test
push
adc
aam
jp
push
xchg
jnp
leave
push
aaa
push
out
sub
add
sbb
mov
pushw
repnz
stos
lods
out
fisubrl
mov
jbe
add
push
dec
sub
pushf
adc
pushf
clc
or
pop
outsb
cmc
pop
sbb
cmc
andl
cli
push
pop
and
or
mov
les
pushf
sub
xor
sahf
sahf
pop
cli
jns
adc
mov
gs
and
mov
jmp
and
add
push
mov
inc
mov
aaa
clc
shrb
sub
and
push
frstor
das
psadbw
and
leave
jno
jecxz
xor
faddl
mov
and
jmp
add
cwtl
sub
jbe
out
push
out
pop
icebp
movsb
jg
adc
shlb
sbb
adc
rolb
mov
dec
mov
adc
push
or
pop
shr
les
mov
in
sbb
sti
and
add
imul
leave
data16
adc
in
jbe
mov
jp
les
in
cld
sub
scas
inc
add
dec
sub
xchg
jb
insb
and
jecxz
fistl
mov
fsubrl
cmp
cmpsl
and
jg
xchg
inc
and
lock
in
jne
push
push
xor
pop
inc
push
sbbl
js
add
lds
mov
or
jbe
adc
push
mov
mov
push
fistpl
enter
aad
sbb
pop
icebp
rcrb
nop
in
repz
loope
ja
fisttps
fstpl
ret
andl
jge
mov
jo
inc
shll
mov
imul
aaa
sbb
pop
cmp
dec
movsl
add
movsl
stos
xchg
movsl
and
or
call
outsb
repnz
and
xor
mov
inc
push
cmp
adc
mov
fisttps
jno
popa
jnp
cli
sub
shll
pop
sub
pop
push
add
out
jb
or
jno
in
adc
push
mov
push
sub
inc
xor
cmpsb
mov
shll
pop
aam
fdivrl
iret
jecxz
push
cwtl
and
mov
movb
in
pop
andb
stc
push
pop
sub
and
roll
inc
cmp
push
xor
cli
lret
dec
lahf
sbb
enter
hlt
pushf
ret
lea
and
push
push
std
adc
fs
add
adc
jne
jb
and
in
mov
imul
and
pop
sbb
fwait
and
mov
incb
or
and
mov
test
jnp
lcall
dec
sbb
sbb
mov
fs
inc
std
cmpsb
cmp
mov
adc
add
cli
cltd
std
push
jbe
and
pop
mov
sbb
daa
mov
push
out
pop
enter
cmpsb
and
fdivrs
lock
mov
cmp
jge
cmc
test
xchg
xchg
adc
std
xchg
int3
icebp
mov
mov
cmpsb
fldenv
and
aad
mov
dec
mov
and
and
ficoms
cmpsb
test
and
sbb
jge
mov
sub
icebp
pop
and
xor
out
test
cwtl
sbb
or
icebp
cld
loopne
adc
and
in
xchg
cwtl
mov
mov
mov
ja
adc
test
sub
xor
push
shr
test
pushl
lea
and
movaps
pop
outsl
nop
xor
inc
mov
mov
ljmp
fs
mov
es
idivl
add
dec
int3
adc
push
addr16
push
ret
or
jle
lds
mov
xchg
dec
mov
pop
int
aas
or
sbb
sbb
pushf
cmp
xchg
repnz
xchg
jbe
adc
sbb
loop
mov
push
daa
popa
shl
scas
dec
les
ret
push
repz
rorb
add
mov
xchg
mov
sarl
push
add
mov
fsub
pop
add
imul
cltd
mov
jno
popf
ja
sub
repnz
in
sti
fs
orw
or
fwait
sub
add
lcall
shll
ljmp
lods
mov
pop
xchg
push
cld
call
sbb
xor
shll
push
arpl
and
shl
mov
inc
arpl
add
adc
popf
loopne
sbbb
jae
jns
xor
inc
pop
sbb
cmp
push
cmp
or
mov
test
mov
mov
lret
or
mov
cmp
add
mov
mov
push
and
outsb
cmp
pop
rcrl
outsb
fmuls
mov
andl
jg
xchg
fnsave
pop
popf
sahf
pop
andl
js
ds
add
mov
sbb
pushf
cmpsb
icebp
add
inc
insl
out
sbb
and
lret
pop
xchg
ret
fildll
loope
adc
lret
fadd
enter
mulb
gs
lock
out
das
in
mov
xchg
jl
mov
andl
filds
adc
fincstp
mov
insl
sbb
xchg
jecxz
negb
es
add
rclb
sbb
pushf
sbb
lcall
cmp
xchg
out
and
jbe
adc
push
sbb
dec
mov
lds
pop
inc
ret
shrl
xchg
inc
push
xor
sub
ja
push
sub
lds
and
sbb
add
fisttpl
add
push
es
mov
add
aas
cltd
inc
out
test
and
push
rcll
sub
sub
inc
pop
ficompl
std
adc
adc
addl
xchg
sti
int3
xchg
mov
xchg
jbe
imul
or
or
sbb
cld
repz
add
stos
and
pop
mov
clc
adc
hlt
and
pop
xor
dec
jg
jle
cmp
lret
ret
loope
movsb
or
es
mov
xchg
add
xchg
arpl
sbb
fs
add
ljmp
leave
sbb
adc
mov
cltd
call
sub
sti
ja
cli
rorb
decl
scas
jne
ret
jmp
sbb
ret
push
enter
and
test
sbb
and
adc
jns
insb
fisttpl
stos
imul
test
sbbb
pop
sbb
and
cltd
and
sbb
push
rcr
add
or
mov
ljmp
and
cmp
repnz
push
mov
push
sbb
mov
lea
sahf
das
pop
jae
and
idivb
out
lea
stc
sub
sahf
sub
mov
sarb
nop
adc
sbb
cmp
test
ja
pop
pop
loope
pop
popl
or
std
ret
mov
cmp
popa
cwtl
pop
jns
pop
add
insb
pop
pop
jp
and
pop
gs
fcoms
lock
imul
jne
cmp
scas
jge
sbb
flds
sbb
scas
test
pop
cli
and
shrb
add
cmpsb
cs
pop
iret
or
nop
imul
sbb
in
cmpsb
add
dec
jge
push
mov
adc
pushf
loope
push
shl
add
mov
add
in
jecxz
sub
xor
cmp
mov
arpl
pop
jmp
in
sbb
ljmp
stos
sub
push
mov
sbb
mov
ja
aaa
adc
loop
sbb
mov
les
lock
clc
jp
cltd
xor
jecxz
negl
test
push
sti
push
repz
cli
and
aad
mov
cld
mov
and
enter
in
jbe
pop
xchg
outsb
jp
cmpsb
pop
in
std
std
push
arpl
mov
repz
out
das
icebp
negl
xchg
and
xchg
adc
lret
jmp
lds
add
cmp
jle
aas
lcall
mov
or
cmp
cwtl
shrb
test
add
jl
lds
xchg
mov
jmp
push
adc
cmp
nop
enter
jecxz
inc
fadd
add
xchg
add
sbb
add
enter
and
loope
add
dec
pushf
pop
nop
lods
add
mov
and
push
scas
rclb
mov
loop
inc
xchg
test
and
aas
mov
mov
jle
mov
pusha
adc
push
cltd
and
lods
inc
daa
and
aaa
loop
fcompl
test
andb
nop
and
in
test
mov
ds
pusha
mov
testl
or
mov
xchg
mov
adc
mov
lcall
dec
stos
sbb
xchg
rorb
test
sub
and
mov
ss
cmp
xchg
shll
and
imul
jbe
je
adc
mov
sbb
shl
add
in
jge
jne
sub
xchg
jns
sub
adc
bound
in
pop
adc
mov
xor
jae
js
repz
clc
jo
cltd
and
loope
dec
sub
jl
rcll
add
mov
mov
faddl
and
or
js
cwtl
ss
jecxz
mov
xor
pop
call
cmpsb
sub
and
test
pop
jbe
xchg
je
add
shrb
mov
add
cld
push
scas
push
push
and
jmp
push
clc
sbb
movsl
xchg
js
add
imul
pop
push
pop
fsubl
adc
xchg
or
js
add
xchg
sbb
push
lahf
and
js
add
mov
negb
or
and
fsts
stos
cmp
mov
unpckhps
lock
add
jl
stos
test
test
mov
popf
push
ret
fcoml
orl
or
cli
adc
xchg
jg
data16
das
popa
int
pop
cmp
sti
adc
and
and
out
xchg
ficomps
clc
fmul
jle
ja
lds
sbb
push
lea
push
cmp
sti
sahf
adc
arpl
adc
call
pusha
scas
add
decl
loopne
mov
jl
mov
movsl
cmp
and
sbb
call
outsb
aad
pusha
jmp
outsl
mov
call
mov
pop
mov
cli
cmp
mov
adc
sbb
and
mov
paddq
adc
dec
fistpll
int3
mov
pop
pop
lahf
sub
in
fildll
pop
mov
dec
or
xchg
push
out
imul
xchg
out
cmc
and
mov
shrl
mov
in
push
std
fsubrp
mov
and
arpl
and
out
lcall
cmp
jge
xlat
inc
add
stos
rcr
sub
outsb
repz
add
adc
adc
jle
shrl
lods
lea
push
or
xor
push
or
ja
and
aaa
cmp
xor
sbbl
mov
and
les
cmp
pop
cs
loopne
sub
add
lret
pop
andb
jecxz
std
or
mov
or
imul
pop
and
popf
adc
ret
ret
push
and
std
loope
add
xlat
cmp
sbb
loop
ja
sbbb
dec
sub
adc
imul
mov
das
fdivrl
mov
dec
mov
cwtl
sbb
sub
das
and
scas
scas
in
jno
mov
mov
xchg
loopne
jg
cltd
fsubl
push
or
push
sahf
popa
cmp
and
jle
cwtl
loope
xchg
cmp
sbbb
dec
mov
loopne
lods
leave
pop
add
popa
xchg
ffreep
mov
push
repz
sbb
and
push
shll
mov
jl
out
mov
cwtl
fucomp
sti
lods
rorl
popf
pop
in
cmp
jns
or
cwtl
push
mov
sahf
pop
daa
jns
push
cltd
popa
inc
adc
cwtl
sbb
cwtl
rcll
cltd
ret
outsb
jl
xor
lahf
sub
push
pop
sbb
fidivrl
popa
lods
jno
icebp
js
js
loope
fisubl
cmp
out
mov
cwtl
push
addr16
fcompl
mov
push
adc
idivl
popa
push
jle
jmp
addr16
dec
imul
xor
frstor
jne
lcall
xchg
test
mov
sbb
or
pop
add
pop
xchg
and
mov
mov
mov
je
or
popf
sub
ret
push
and
xlat
jecxz
leave
push
inc
ja
sub
or
mov
mov
pop
xor
xchg
fistl
pop
push
sbb
call
sbb
sbb
adc
nop
adc
sbb
add
jle
adc
mov
out
std
xlat
movsb
pop
or
sub
pop
or
jp
bound
sahf
xor
mov
mov
lcall
ret
mov
sbb
sub
sbb
xor
xchg
aaa
pop
or
aas
adc
js
lods
arpl
popa
mov
mov
or
mov
iret
mov
rclb
mov
enter
fdivs
push
ja
out
sub
loope
add
loope
sahf
jno
lea
shrl
in
cmc
xchg
sarl
mov
rcrl
sbb
push
add
or
shr
add
add
fistps
call
sbb
pop
sti
lcall
push
sahf
pushf
add
mov
loop
ret
push
add
inc
fstl
dec
push
iret
fistps
loope
dec
std
pop
fidivrl
or
inc
ss
pushl
lcall
stos
loop
pushf
jbe
jmp
stos
rcll
out
ret
pop
loop
add
xchg
xor
pushf
xchg
sub
andb
test
cltd
pop
inc
das
cmp
cmp
je
push
popa
hlt
mov
cmpsb
mov
in
sub
test
out
lret
dec
inc
xchg
xchg
inc
addr16
push
rol
xchg
adc
fdivrp
mov
inc
in
cltd
adc
xor
insl
mov
sbb
test
in
push
out
push
shl
addb
cwtl
pop
loop
out
mov
and
xchg
out
pushf
mov
imul
movsl
pop
pop
and
pop
and
mov
sbb
rorl
aam
dec
ljmp
push
jno
xor
addr16
stc
push
push
or
or
xor
fwait
mov
js
push
movsb
dec
push
pop
imul
stc
repz
test
sbb
jns
adc
mov
rorl
and
data16
rcll
cmp
pop
sbb
mov
inc
adc
adc
inc
lods
cmp
repnz
xchg
nop
inc
enter
roll
ljmp
pop
xchg
rcrb
jge
push
xchg
call
and
mov
jne
push
je
repnz
sub
loopne
call
test
cmp
sub
push
mov
xchg
into
repz
push
xor
pop
out
sub
ret
pop
or
sbb
leave
iret
fidivs
mov
dec
jno
les
mov
inc
in
js
fsubrl
sbb
cld
cli
adc
and
xchg
test
inc
mov
lock
fldenv
xchg
cltd
add
mov
mov
mov
adc
js
mov
mov
popa
mov
add
fisubrs
sbb
xlat
and
jne
sbb
adc
jns
xchg
and
jmp
adc
adc
inc
and
jns
sub
rorb
sub
mov
popf
sbb
and
dec
xor
dec
pop
in
push
sbb
outsb
fistpl
cmp
mov
sti
xchg
lcall
rorb
jmp
mov
out
mov
inc
and
lods
andl
movsb
inc
loop
mov
sub
cmpsb
xchg
inc
and
mov
cmpsb
mov
mov
xchg
mov
sub
loopne
outsb
pop
pop
and
sbb
and
add
popf
jne
pop
jmp
cld
jp
fsubr
mov
sub
mov
stc
push
mov
sub
cmp
mov
and
mov
push
scas
sub
push
leave
xor
mov
scas
lcall
aad
sub
in
and
scas
xor
jecxz
jp
addr16
push
inc
push
mov
cmc
xor
mov
xchg
jb
fiaddl
mov
xchg
imul
orb
bound
icebp
sbb
dec
xchg
or
push
push
scas
rorl
jl
or
xchg
ljmp
jecxz
cmc
dec
sahf
je
aam
add
and
mov
pop
sbb
addl
fisttpl
pop
fmuls
sub
jno
lds
imul
sub
push
cld
push
xchg
cltd
jmp
dec
rcrb
pop
or
sub
pusha
movsb
sbb
or
pop
sbb
push
shrl
push
or
sti
je
adc
lcall
jmp
test
sbb
mov
cmpsb
fstpl
insl
jecxz
loope
mov
mov
loope
out
ja
push
out
sbb
stos
jmp
roll
orb
jnp
ds
xchg
inc
jmp
pop
imul
adc
jnp
xchg
mov
mov
mov
or
leave
add
or
jnp
adc
cmp
inc
loope
fsubl
sbb
clc
jmp
in
inc
mov
adc
sub
xchg
imul
aam
pop
mov
jmp
sbb
push
clc
lahf
add
ja
xchg
sub
push
xchg
in
scas
dec
mov
mov
sbb
jae
loop
lahf
add
and
fildll
or
lret
jmp
add
es
fildl
and
aaa
cmp
cmpsl
divb
fstps
loopne
sub
sbb
cli
mov
xor
add
std
xchg
loop
dec
pop
cmp
mov
push
push
adc
and
test
fs
pop
push
adcl
and
add
shll
xchg
faddl
jo
xor
aam
adc
push
dec
add
fcoml
mov
std
xor
popf
mov
fcomps
mov
push
aaa
add
add
insb
addl
aad
sub
cmpb
jmp
mov
pop
sti
iret
dec
push
sbb
sbb
pop
push
ror
cltd
sar
out
not
test
orb
sbb
sti
cld
jnp
lods
in
shll
std
xor
mov
pushf
adc
lods
lret
xlat
out
fsts
arpl
das
outsw
outsb
cmp
decl
xlat
push
push
add
pop
fwait
std
nop
add
mov
scas
pop
pop
pop
push
mov
and
orl
loop
mov
jmp
mov
pop
jno
test
es
fbld
lods
mov
cmp
repnz
test
and
popf
pop
into
jae
das
fstpl
sbb
inc
es
mov
inc
cmp
mov
cwtl
iret
jne
mov
rcrl
outsl
cmpsl
add
sar
cmpsl
fistpl
jae
xchg
nop
sbb
arpl
xchg
add
adc
sbb
sti
inc
lahf
faddl
lret
xor
xor
jmp
dec
xor
cmpsb
fwait
popa
pop
xchg
data16
jecxz
sbb
sub
pop
in
data16
or
mov
dec
ficompl
lock
cmp
dec
cmp
clc
xchg
cmp
pushf
mov
jne
xchg
mov
pop
js
mov
xorl
add
add
loope
add
xchg
repnz
out
jl
repz
pop
push
lea
lea
push
push
out
adc
cmc
fidivrs
stos
pop
std
shlb
lods
xlat
mov
loopne
in
push
ds
ljmp
ds
cli
and
loop
push
adc
jbe
xchg
sbb
aas
or
sbb
inc
sub
sbb
xchg
outsl
pop
sub
dec
cmp
cmp
inc
dec
mov
push
ds
xchg
icebp
push
stc
sahf
dec
fildll
xchg
jo
xor
add
lea
sti
xchg
fiaddl
sbb
rcll
jmp
sahf
dec
push
add
notl
movsb
mov
add
fstl
add
std
inc
mov
xchg
pop
xor
pop
push
in
loope
jle
cmp
pop
mov
stc
es
push
fcmovb
call
ret
cltd
enter
push
push
popf
jle
xchg
out
std
jecxz
and
add
loope
lock
adc
fnstenv
imul
xor
xlat
fs
mov
mov
ficompl
pop
jge
popa
adc
jecxz
or
push
or
std
and
cmpsb
test
sub
adc
inc
cld
or
pop
mov
push
aaa
ret
nop
icebp
cmpsb
inc
out
mov
xchg
xor
stc
push
sub
lea
cmp
enter
pop
js
xchg
cld
mov
pushf
stc
cltd
es
in
xchg
popa
mov
cwtl
enter
or
lods
shll
pushf
ja
jecxz
jmp
mov
int
and
pop
xchg
fisubs
out
dec
ficompl
cltd
inc
and
pusha
mov
addb
jno
test
call
pusha
cwtl
stos
out
dec
sbb
inc
lcall
dec
ds
and
cmp
sbb
pop
add
dec
in
mov
or
es
repz
push
adc
xchg
out
push
and
jle
mov
pop
mov
movsl
add
inc
push
push
push
jmp
push
push
add
in
cld
mov
jp
jno
mov
movsb
outsb
jmp
pop
pop
imul
mov
std
jns
sbb
add
outsb
or
inc
xchg
sub
and
les
sub
pop
icebp
add
adc
and
cmc
dec
pop
xchg
jno
les
and
arpl
pop
mov
fnstsw
mov
cld
clc
inc
adcb
sub
sbb
ja
pop
sbb
dec
lahf
and
stos
fisttpll
pop
loop
fisttps
stos
testl
jns
sub
push
add
das
or
pop
jg
out
xor
mov
and
sbb
xlat
out
jno
jb
cmc
aad
or
in
fiaddl
aad
std
xchg
mov
adc
jo
fsubs
adc
jg
fnstcw
xor
push
mov
cs
push
push
or
adc
rcr
arpl
repz
icebp
pop
cmp
inc
call
jmp
sbb
cmpsl
popf
and
jbe
and
test
pop
in
dec
repz
jle
inc
loop
adc
mov
ret
or
jmp
add
ret
rcll
jmp
jecxz
gs
push
in
push
mov
mov
cmp
jmp
pop
jns
out
push
test
sub
xchg
stos
pop
hlt
fcmovne
lea
jmp
fst
lods
mov
leave
jecxz
mov
std
push
fldenv
loop
jno
and
pop
push
pop
jo
push
xchg
mov
rolb
popa
adcb
rol
pop
das
sarl
push
aam
jge
sbb
roll
or
sbb
push
adc
and
insl
imul
push
jne
ljmp
lret
data16
fwait
push
lea
std
jmp
add
inc
sbb
push
inc
jecxz
and
adc
lea
addr16
ja
xchg
cli
pop
mov
repz
xchg
and
push
pop
rcl
lret
mov
inc
fistps
inc
fimuls
inc
mov
inc
pop
dec
sbbl
shrb
cmpsb
inc
push
push
pop
mov
sbb
loope
mov
add
sbb
dec
and
and
push
xor
leave
adcl
pop
icebp
and
dec
icebp
les
cwtl
cltd
pop
fstl
pop
arpl
and
fisttpll
mov
sbb
es
push
popf
jns
jge
and
addr16
pop
cwtl
sbb
loope
mov
jbe
fdiv
mov
inc
or
loope
jge
dec
xchg
ret
xchg
and
fs
sbb
and
mov
rcr
or
std
mov
or
and
xorl
and
arpl
jmp
push
stos
mov
cmovo
sbb
sbb
pop
add
cmp
and
mov
ljmp
pop
lds
arpl
std
sub
add
inc
and
push
in
in
lea
jl
leave
sahf
push
cli
push
sub
xchg
pop
mov
js
add
jbe
add
ret
mov
aad
sub
sbb
inc
inc
mov
add
mov
sbb
push
cmpsl
popf
adc
sub
sub
out
aas
and
leave
ja
jp
scas
mov
adc
pop
and
and
inc
sbb
xlat
jecxz
inc
xchg
in
sbb
sbb
dec
jecxz
gs
int3
mov
add
ljmp
lds
loope
push
mov
sbb
sbb
pop
and
cmc
loopne
pop
sub
mov
and
ljmp
daa
or
inc
cmp
pop
mov
fpatan
lock
and
loop
push
adc
in
inc
jae
cld
bound
xchg
mov
sbbb
adc
testl
and
jns
push
sbb
sbb
ljmp
push
sbb
xor
adc
sti
loop
xor
jo
arpl
setnp
or
jnp
imul
mov
pushf
mov
loopne
inc
subl
push
cmpsb
adc
jnp
pop
xchg
addr16
popf
lea
xchg
sbb
stc
dec
mov
arpl
adc
sub
jb
or
js
mov
jle
xchg
lods
mov
pop
lea
movsb
imul
push
and
scas
push
mov
xchg
mov
in
and
and
clc
rdmsr
fldl
scas
push
repz
mov
jge
sahf
hlt
loope
xchg
dec
neg
sbb
mov
shlb
jge
cmc
and
cmp
cmc
aas
sti
mov
lahf
lfs
and
negb
mov
ljmp
fdivl
pop
mov
in
and
adc
and
xorl
lea
cmp
ret
pop
sub
xor
aam
sbb
js
mov
in
popl
inc
cmp
lahf
fs
jmp
lods
inc
xchg
push
and
subl
jno
loop
inc
int3
lcall
xchg
mov
xchg
xchg
jns
sbb
push
lods
dec
daa
cmp
sub
repnz
movsl
push
stos
add
mov
cld
adc
cmp
push
and
loopne
add
fistps
imul
popf
dec
out
into
fidivrl
andl
pusha
rcrb
jl
loopne
sbb
pusha
cwtl
sub
xor
sbb
and
je
loop
jae
mov
daa
cltd
repz
sbb
fistl
adc
fstl
push
add
push
sbb
loope
push
add
push
and
in
dec
xchg
shrl
or
mov
movl
sbb
sbb
jge
shll
jle
cs
stos
inc
ffree
imul
andb
jmp
push
out
lret
popl
sbb
mov
sbb
std
jns
enter
push
xchg
pop
shl
movsb
mov
pusha
inc
sub
rcr
and
pop
int
sub
sub
fs
lret
scas
mov
shl
jnp
es
mov
call
out
mov
push
mov
mov
sub
sbb
xchg
mov
and
cmp
jmp
sub
push
nop
xchg
mov
repnz
sbb
sbb
sbb
and
cli
mov
inc
out
adc
inc
cmp
pop
mov
loope
rclb
sbb
rcrl
filds
mov
out
lcall
cmp
adc
icebp
add
std
jns
sub
fcoml
add
cmp
fcmove
cli
int
dec
sahf
fsubs
sbb
jmp
or
xor
imull
push
and
loope
aaa
or
fidivl
mov
stos
adc
loopne
cltd
ret
sbb
in
sbb
jmp
and
sbbl
out
fmuls
push
faddl
sub
push
movsl
js
or
sbb
test
mov
jle
test
sbbl
into
push
push
test
out
mov
sub
cvttps2pi
dec
out
mov
lcall
lret
push
ret
mov
sbb
and
clc
imul
cwtl
clc
sbb
adc
cmpsl
sbb
and
clc
aad
push
outsb
or
pop
pop
popa
test
sbb
sahf
and
mov
jnp
je
out
pop
jnp
push
push
jns
sti
add
add
insl
fs
sbb
mov
push
mov
mov
mov
or
sbb
xchg
sbb
movsb
repz
jg
stos
push
jle
jp
push
ret
imul
sti
fidivs
jmp
stos
xlat
fisubl
sti
call
test
stos
andl
sbb
jecxz
and
dec
roll
add
lahf
call
test
push
jb
sahf
fidivs
nop
icebp
cld
sub
adc
outsb
fstpl
cli
mov
cmp
xor
add
jns
sbbl
outsb
cmpb
incl
push
sub
outsb
mov
jo
je
std
jae
arpl
loope
push
xor
cmp
cmc
mov
cmc
pushf
int3
jbe
aaa
and
std
xchg
movsb
in
stos
mov
cld
xchg
pop
popf
mov
adc
cmp
cli
add
and
mov
adc
xchg
shr
es
or
mov
push
stos
pop
bound
lock
fcoml
mov
rcll
xchg
adc
mov
mov
push
adc
sub
xor
mov
lea
fs
sbb
lahf
hlt
and
loop
hlt
inc
pop
cmp
bound
jp
xor
cmpsb
mov
stos
push
cmp
sbb
cltd
push
xchg
sti
popf
jmp
fcompl
addl
push
adc
inc
cmp
pop
mov
xchg
jecxz
sub
test
loope
and
ljmp
mov
les
xor
push
add
idivb
mov
scas
sub
mov
test
adc
fcmovu
cmp
sbbl
adc
cmpl
std
cmp
jnp
dec
fiadds
dec
or
in
and
scas
push
push
es
pop
xchg
addr16
in
std
sub
icebp
stc
push
jb
adc
es
hlt
xchg
imul
and
sbb
cmpsb
daa
in
sub
inc
and
inc
in
jecxz
jbe
mov
sub
daa
sar
pop
sub
inc
sub
or
push
mov
out
sub
jp
pushf
mov
or
js,pt
mov
pop
clc
fstl
push
std
add
out
lods
xchg
xchg
mov
repz
sbb
xchg
push
and
sarl
pop
jnp
or
loop
and
jns
outsl
lea
push
cmc
mov
add
fldt
sbb
iret
sbb
or
inc
mov
push
int3
incl
out
dec
lret
dec
dec
mov
xor
push
enter
mov
and
push
jmp
mov
nop
es
cmp
inc
ret
push
lea
xchg
pop
push
adc
inc
push
fistpl
loope
jecxz
dec
sub
ljmp
dec
rcl
ljmp
sub
or
jno
stos
adc
rcrb
sbb
add
xchg
ss
ficomps
incb
stos
loope
ret
push
adc
test
add
pop
ficompl
pop
add
test
jecxz
cmpsl
shl
xchg
rcll
frstor
shll
dec
jmp
icebp
repz
push
out
push
pop
sbb
not
sbb
jae
out
pop
push
in
incb
cli
pop
jmp
sub
or
and
cltd
icebp
sbb
push
jne
pop
testb
ljmp
addr16
jp
out
adc
adc
decb
or
loope
and
popf
sahf
fdivrp
xchg
mov
jle
xor
mov
out
out
mov
push
xchg
ret
and
int3
cmp
out
jge
leave
jecxz
and
jne
das
test
sbb
fs
sbbb
xchg
cmpsl
mov
fiaddl
adc
pop
jmp
mov
sbb
and
divb
push
mov
stc
cmp
add
scas
adc
sti
aas
xchg
imul
add
idiv
shl
cwtl
iret
dec
insb
lret
xchg
adc
lahf
sahf
dec
sti
in
pop
mov
add
jmp
mov
add
ljmp
cmp
fbld
or
sbb
xor
and
push
sahf
in
sbb
adc
and
cmp
cltd
repz
test
mov
mov
popf
jmpw
cwtl
fbld
fcmovbe
sbb
loop,pt
in
roll
mov
in
add
sub
outsl
adcb
xor
pop
cmp
jae
in
jmp
mov
sbb
hlt
push
out
lahf
adc
adc
gs
pushf
jcxz
and
add
aaa
sti
mov
mov
dec
dec
test
add
cld
cmp
mov
mov
leave
loopne
xor
addl
or
lods
sub
popa
out
and
lret
in
insl
adc
in
lcall
addr16
or
insl
xchg
pop
scas
icebp
or
sbb
sbb
push
adcl
or
mov
adc
popa
push
and
pop
adc
jbe
icebp
sbb
push
cmp
push
sti
outsb
inc
add
fldcw
loopne
and
imul
es
adc
push
pslld
adc
xor
lcall
iret
orl
adc
mov
hlt
popa
test
jg
mov
cmp
jl
mov
bound
sbb
arpl
and
jmp
inc
sbb
mov
mov
push
ret
pop
mov
data16
xor
mov
mov
lcall
xor
mov
xchg
lcall
dec
outsl
xlat
or
sbb
jno
out
pop
mov
loope
inc
add
das
out
daa
ljmp
bound
popf
nop
add
and
into
cmp
lods
jno
hlt
mov
mov
dec
jge
push
pop
roll
add
pop
out
jne
in
pop
test
inc
jmp
cltd
mov
enter
jp
rclb
sbb
popf
jnp
and
into
sbb
mov
dec
push
jbe
xchg
push
lock
fildl
mov
lods
push
mov
cld
inc
cmp
pop
into
xchg
push
cltd
cmpsl
inc
out
push
push
nop
nop
pop
xchg
test
pop
jns
hlt
sbb
jmp
push
out
lock
sub
out
fisubl
cltd
xor
and
xor
cwtl
scas
mov
repz
push
in
xor
xchg
gs
pop
int3
lock
add
xchg
jnp
adc
add
xchg
lods
ret
or
sub
xchg
add
icebp
stc
jge
pop
lods
xor
push
adc
and
inc
xor
xchg
mov
pop
aas
mov
sti
out
or
push
fiadds
test
mov
add
call
mov
add
aaa
mov
sub
xor
or
fcoml
adc
push
mov
push
call
pushf
xchg
cli
push
cmp
jae
cmp
stc
dec
add
rclb
rcl
pop
sbb
sbb
push
fistps
fcmovu
push
and
push
mov
lds
imul
mov
call
mov
inc
lea
loope
ds
loope
add
lock
mov
mov
lret
nop
mov
adc
addl
nop
add
and
mov
push
mov
sbb
xchg
popf
pusha
and
jbe
out
adc
pop
scas
cltd
mov
adc
xchg
adc
fwait
mov
xor
or
inc
test
pop
pop
jmp
mov
sbb
mov
pop
lret
sub
fidivs
icebp
filds
xorl
jg
fisttpl
xor
in
in
nop
cmp
sbb
mov
inc
push
inc
mov
aam
cld
push
ja
jl
mov
push
lahf
test
pop
lahf
adc
xorl
push
jg
in
jae
test
aam
jno
or
lahf
sahf
fcomip
inc
enter
jnp
mov
adc
add
ficompl
add
add
push
stos
add
mov
stos
cmp
sbb
daa
or
adcl
cltd
xor
dec
adc
pop
add
lea
push
cmp
xor
inc
loope
ret
dec
adc
add
push
fstps
adc
sahf
xorb
shll
adc
rol
jge
scas
fsts
or
and
je
ds
in
sbb
mov
add
nop
loope
sbb
ffreep
adc
fisttpll
and
stos
adc
in
inc
adc
sahf
clc
mov
or
add
lea
xlat
push
sub
psllq
ss
popf
mov
aad
sbb
inc
mov
pop
xor
ret
mov
outsb
enter
and
mov
add
icebp
fnsave
out
out
ss
ljmp
fdivl
jl
push
out
dec
ljmp
fwait
sbb
xchg
pop
ss
mov
push
add
sbb
test
jno
int
xchg
and
pop
mov
sbb
push
pop
pop
xchg
out
call
repnz
imul
cmc
ficoml
cli
loope
xchg
pop
cmp
sahf
pushf
es
bound
sbb
jge
leave
adc
sbb
xchg
imul
stos
andl
mov
dec
mov
jbe
mov
xor
rolb
sub
loope
pop
mov
out
icebp
mov
stos
add
mov
lds
enter
iret
sbb
jno
and
andl
dec
cmp
push
push
push
icebp
or
add
xchg
xor
or
xchg
fldl
inc
mov
pop
jae
movsb
cmp
adc
and
cwtl
mov
sbb
cltd
xchg
pop
movsb
sahf
stos
and
negb
mov
stos
cld
std
add
popf
call
sbb
test
jecxz
and
addr16
repz
mov
and
xchg
xlat
or
mov
popa
jmp
inc
xor
arpl
jmp
sub
or
pop
xchg
sbb
fcompl
pop
xchg
stos
bound
les
sbb
and
sar
push
repz
jle
or
roll
jns
inc
insb
scas
ds
cmp
loope
adc
xchg
pop
or
pop
jle
sbb
notb
pushf
stos
inc
leave
xchg
ret
rorl
push
xchg
je
int
lcall
jge
pusha
sti
pop
ljmp
and
inc
dec
ja
xor
cmp
adc
ficoml
fs
mov
repz
je
push
add
loope
out
inc
js
add
sub
pop
push
push
es
sbb
xchg
clc
aad
push
jmp
cli
xchg
js
dec
sbb
fsts
push
add
mov
divb
mov
cli
jnp
pop
imul
mov
pushl
pop
add
pop
push
fsubl
pop
repnz
xchg
or
loope
dec
ret
ret
in
pop
roll
loope
lret
pop
sbb
imul
filds
mov
cwtl
pop
mov
and
data16
int
lods
jl
pusha
mov
adc
inc
and
push
mov
cli
xchg
push
pop
dec
int
add
icebp
fnstsw
je
pop
pop
push
jl
and
scas
pusha
popf
mov
pusha
jmp
sbb
rolb
mov
mov
mov
and
int3
popa
jle
mov
es
xchg
loope
icebp
rcl
xchg
sub
cmp
push
add
dec
rcrb
push
push
cmpsb
fxtract
mov
jno
fdivl
and
sbbl
in
cltd
in
sbb
popa
jmp
rcrb
sub
jecxz
cmp
out
add
icebp
repz
in
imul
jecxz
rolb
in
stc
icebp
gs
and
loop
mov
or
add
fucom
popa
mov
adc
fwait
pop
sub
je
and
mov
outsl
cld
inc
or
fisttpl
fnstenv
mov
popa
fisttpl
or
or
sub
xchg
lods
testl
and
xor
xor
ret
movsl
imul
adc
dec
jnp
aas
popf
xor
or
push
test
shrb
lcall
lods
adc
imul
in
and
in
scas
stos
pusha
adc
leave
inc
jecxz
add
xchg
repz
sbb
push
adc
fstps
sbb
filds
and
jecxz
pop
sbb
add
xchg
gs
imul
cld
aaa
mov
mov
sub
or
lcall
jp
stos
jae
sbb
add
lcall
sbbl
aam
idivb
pusha
bound
pop
push
or
and
imul
sub
and
jae
sbb
push
jo
jns
bnd
mov
add
sbb
jecxz
lcall
pop
adc
jle
pop
pop
sub
enterw
loop
adc
scas
in
iret
and
jnp
loope
jl
jecxz
mov
inc
dec
shlb
cld
fadds
push
jp
push
test
out
mov
or
inc
sbb
scas
lock
mov
jns
lock
or
nopl
jbe
cmp
mov
inc
mov
and
jmp
and
sbb
mov
inc
fnstsw
xor
jns
inc
mov
cwtl
jle
jmp
popa
pop
push
mov
push
push
adc
sub
xor
sub
jg
leave
adc
shlb
mov
cmpsl
mov
test
pop
and
mov
mov
pop
test
add
xchg
mov
mov
dec
xchg
pushf
in
movsb
pop
pop
jbe
sub
and
lds
ror
push
push
xchg
add
lds
mov
js
test
jne
push
ret
pop
inc
int3
stos
sbb
negl
cltd
pop
sti
ret
jle
jp
mov
inc
mov
fcomps
icebp
sub
arpl
sti
jg
xchg
dec
pop
fwait
and
sub
out
jl
xchg
push
sub
sub
sbb
and
lods
inc
jmp
xlat
xor
cld
enter
icebp
imul
mov
in
jnp
scas
popf
popf
std
movsl
mov
push
testb
ret
pop
icebp
popa
xor
xor
cmp
xchg
mov
and
adc
loope
popw
pop
sbb
outsl
sbb
icebp
xor
mov
xor
cmpsb
cld
std
xor
bnd
dec
popf
add
imul
or
pop
push
ja
inc
sbb
int
jmp
and
mov
js
or
inc
adc
xchg
push
jb
mov
ret
loop
sbb
out
stc
std
push
dec
and
push
int3
ja
inc
inc
adc
pop
jmp
pusha
and
jb
shlb
loope
mov
sbb
les
sbb
insb
add
sbb
push
mov
pusha
jmp
subb
fcomps
sbb
or
and
icebp
push
rcrb
adc
stos
js
fisttpll
clc
out
pusha
xchg
mov
mov
push
push
inc
mov
mov
rol
mov
add
sub
movsw
cmpl
mov
dec
jge
in
sbb
jle
fadds
and
int3
jmp
sarl
xchg
movsb
mov
pop
jns
jl
enter
pop
dec
jne
clc
jbe
loope
je
sti
jo
imul
les
sbb
push
hlt
sbb
pop
push
cltd
and
sahf
pop
pop
lret
mov
xchg
stos
subl
pop
jmp
xlat
adc
cmp
xchg
inc
adc
dec
mov
or
and
jle
repnz
mov
ds
push
sbb
repz
jp
mov
or
pop
sbb
sbbl
fsub
push
adc
lods
imul
xchg
fucom
mov
shrb
jg
add
dec
call
orb
nop
jp
push
mov
nop
add
inc
roll
pop
dec
ficoml
jmp
loop
test
subb
cmp
clc
xor
mov
cli
mov
movsb
fnstcw
sbb
pop
sbb
sub
aad
imul
xor
adc
cmpsl
adc
add
jae
pop
adc
xchg
xor
push
jns
test
out
inc
orb
sub
imul
int3
cmc
cltd
shl
mov
push
int
xchg
cmpsl
andb
mov
pop
jecxz
jge
ret
loope
and
cmp
mov
sub
add
int3
add
xchg
xchg
xchg
cwtl
cli
in
inc
leave
popf
push
repz
std
fwait
jp
lea
clc
imul
xor
lcall
jmp
andb
add
or
fisttpll
xor
dec
xor
stos
popf
lods
imul
and
aas
loope
fbld
jl
int
jecxz
jl
cmc
popa
popa
dec
jbe
fcoms
mov
movsl
inc
into
and
jne
test
test
dec
xor
or
xor
repz
das
out
test
das
cmpsb
std
lock
jbe
pop
jne
stos
pop
pusha
and
push
lds
sbb
sbb
pop
sub
ret
je
push
cld
pusha
xor
rclb
xchg
enter
sbb
ja
sahf
jmp
cmc
xor
loope
sbb
sub
mov
push
pop
inc
jno
out
or
test
loope
movsb
add
bound
pusha
scas
push
in
or
orl
sarl
sbb
sub
jo
test
mov
int3
add
or
data16
rclb
mov
inc
mov
in
xchg
not
and
out
out
std
and
mov
mov
and
sbb
push
mov
adc
inc
xchg
jns
outsb
cmpsl
adc
adc
jbe
cmpsb
loopne
sbb
mov
sbb
xor
cwtl
mov
lods
cli
enter
clc
icebp
sbb
leave
mov
mov
cwtl
mov
insb
std
outsb
movsb
push
cmpsb
es
fwait
or
dec
or
jecxz
and
and
jecxz
or
imul
popf
in
mov
into
sbb
jnp
mov
subb
int
push
fcoms
repz
mov
pop
fsts
inc
sbb
stos
xlat
jns
mov
xchg
lret
adc
mov
xchg
mov
mov
imul
push
sbb
cmp
jnp
xor
cld
push
into
pop
cmp
sub
in
in
sahf
in
nop
imul
movsl
mov
cwtl
cmp
mov
and
outsl
and
mov
adc
jmp
xchg
pop
out
jle
mov
mov
push
hlt
jbe
mov
andb
int3
movsb
sub
sbb
adc
push
pop
pushf
popf
xor
mov
dec
loopne
jnp
jl
divb
hlt
in
sub
push
inc
inc
enter
rorb
icebp
mov
rcll
push
imul
incb
jmp
popf
stos
rcrb
shr
scas
sbb
sub
fdivp
adc
jo
idivl
cwtl
xchg
pushf
cli
mov
cmpsb
push
xor
std
cmc
int3
mov
jle
jecxz
rclb
mov
std
xchg
test
xor
add
push
lods
rcll
in
fdivrs
cmp
cwtl
and
jge
rcrl
stos
push
cli
dec
setbe
cmpsl
jnp
iret
lret
ret
imul
and
push
in
sbb
and
sbb
pop
rorb
popf
fisubs
jmp
mov
in
and
lret
push
add
xchg
lret
fcomps
ret
jmp
mov
fstpt
mov
test
shll
sahf
in
pop
ja
cs
cli
push
repz
cltd
insl
mov
dec
xchg
and
iret
out
int3
loope
popa
mov
pop
cmp
inc
jp
jmp
daa
frstor
daa
fnstcw
push
and
push
cld
mov
xor
repnz
jmp
mov
cmp
aad
jbe
pop
sub
sub
pop
xorl
fcmovne
dec
cld
push
cmp
das
std
into
sub
icebp
ret
cld
jle
dec
cmpsl
cs
dec
sbb
mov
clc
push
and
stc
xchg
push
sbb
enter
js
jp
push
xchg
shr
sub
mov
pop
xchg
mov
ss
jl
adc
push
push
test
add
stc
and
lcall
xchg
sbb
outsl
out
jl
jns
jecxz
jl
add
or
stos
icebp
xchg
jge
in
jl
mov
xchg
jmp
dec
mov
ret
pop
add
testl
lods
adc
pop
js
inc
in
dec
in
and
int3
fcmovbe
icebp
inc
dec
mov
aaa
ldmxcsr
fnstsw
mov
test
push
jnp
adc
test
test
and
sti
or
out
ja
mov
jno
sti
mov
adc
and
daa
xchg
call
dec
jnp
sbb
popa
inc
clc
mov
bnd
stc
jb
inc
mov
cwtl
imul
push
ret
cmp
or
iret
sub
pop
or
xchg
fisubl
clc
icebp
push
lock
mov
fwait
and
mov
or
pushf
cmpsl
mov
push
dec
andb
in
dec
clc
ret
xor
jl
inc
mov
xor
rclb
mov
cltd
fldenv
xchg
pop
hlt
shlb
addr16
or
std
mov
mov
mov
fmuls
loop
sub
out
inc
xchg
pop
or
aad
daa
push
fimull
mov
dec
popa
shll
xchg
cmc
ds
push
mov
lds
arpl
sbb
sbb
popf
adc
sbb
imul
sbb
es
outsl
xchg
sbb
popa
roll
mov
xor
mov
inc
imul
xor
out
add
clc
lea
out
xlat
lods
mov
or
sbb
pop
in
sub
sbb
repz
jge
and
jp
and
add
sub
mov
jmp
jp
jnp
adc
shrl
fs
imul
sub
mov
xchg
cmp
subb
inc
add
sub
sbb
jne
inc
pop
in
inc
pop
idivb
pop
mov
adc
and
sub
insl
inc
nop
gs
lcall
mov
cmp
das
dec
arpl
adc
mov
ss
daa
pop
pusha
mov
add
add
lds
lods
insl
loopne
adc
sbb
pop
test
or
or
dec
and
lea
lock
mov
fisttps
adc
and
adc
and
cld
inc
xchg
cmpsb
repz
lock
xor
inc
mov
inc
add
sbb
nop
mov
mov
imul
jmp
mov
mov
repnz
xor
dec
repnz
pop
stc
in
cli
or
lock
push
adc
and
mov
and
stos
aaa
adc
mov
mov
cmp
add
lret
pop
ljmp
lods
pop
push
dec
mov
add
and
cltd
push
push
mov
pop
sbb
dec
pop
xchg
pop
stc
mov
cmpsb
xchg
mov
xor
dec
sti
jecxz
ret
loopne
inc
lret
add
adc
jl
push
cli
bound
pop
out
mov
mov
daa
pop
lods
pop
mov
pusha
xor
push
or
mov
jnp
dec
cmpsl
call
push
pop
mov
cmp
mov
push
mov
mov
or
xchg
mov
test
mov
adc
fwait
scas
ret
or
sub
pop
add
mov
into
sub
xchg
xchg
sbb
mov
add
and
mov
mov
or
inc
push
fcompl
sbb
sahf
rcrb
icebp
xchg
adc
mov
test
pushf
adc
insl
adc
or
outsb
sbb
push
mov
pushf
dec
mov
out
adc
add
xchg
call
xchg
faddl
lea
and
adcl
out
cs
pop
outsb
popl
and
mov
mov
xchg
adc
xchg
push
xor
sub
fwait
or
mov
push
mov
and
adc
adc
cli
pop
dec
adc
mov
sbb
add
or
mov
adc
adc
movsb
add
rclb
arpl
add
dec
mov
inc
xchg
push
sbb
mov
cmp
lahf
jae
adc
nop
pop
mov
call
jnp
pushf
out
lods
adc
mov
and
add
xchg
repnz
movsb
fdivrl
xchg
loope
pop
repz
adc
fisubrs
mov
or
push
adc
push
add
jg
fcomps
sub
adc
inc
xchg
cmpsb
cmp
push
shl
inc
scas
mov
stos
loope
int3
fisubl
andl
and
imul
lods
mov
or
cld
test
ret
jae
jg
pusha
xchg
cltd
bswap
inc
cmp
enter
out
pop
or
sti
mov
repz
lods
bound
test
sti
repz
lcall
shl
pminsw
fsubl
mov
lods
jne
xchg
cs
fistpl
ja
mov
mov
rclb
cmp
push
sub
xor
jg
fcoml
jb
xchg
test
mov
and
rol
scas
ljmp
jecxz
add
or
cmp
cmp
aaa
add
in
and
pop
and
loope
sbb
fdivp
mov
out
dec
mov
std
sbb
fwait
push
loop
cs
pusha
ficompl
and
adc
gs
cli
and
and
shl
and
jo
xor
push
dec
or
js
cmp
std
sub
movsb
sub
jbe
or
jns
sbb
sbb
jb
cmp
js
mov
rorl
dec
pushf
jp
mov
mov
push
jb
loope
div
cltd
add
sbb
repnz
jb
orl
pop
add
loop
lret
inc
jns
fs
scas
sub
pop
jns
sbb
sub
lock
pop
into
xlat
inc
push
mov
and
bound
cmc
or
add
lahf
sub
fimuls
lret
pop
cmp
pushf
call
sub
pop
or
sub
std
xchg
cmpsb
mov
adc
jno
cmp
push
inc
lea
pop
imul
aas
and
bnd
add
xchg
adc
push
and
xorl
xchg
adc
mov
add
adc
pop
and
push
in
push
outsb
sbb
sub
pop
dec
cmpxchg
fcoml
ds
sub
out
add
xor
leave
cli
jnp
and
sub
xchg
lock
call
adc
mov
add
inc
sahf
push
inc
cmp
sub
and
shlb
sub
loope
jp
call
or
mov
jmp
xchg
push
cwtd
fistpll
ret
xchg
sub
cmp
rol
push
push
xchg
aad
xorl
push
jae
cli
repz
jmp
and
pop
jnp
add
out
push
inc
mov
fidivrl
fstpt
les
lods
mov
lds
sub
mov
pop
sbb
inc
inc
adc
and
mov
push
insb
mov
in
inc
mov
pop
and
sub
or
push
sbb
xlat
mov
stos
push
in
repz
mov
les
and
sub
imul
or
jns
repnz
daa
xor
cmp
loop
je
mov
fcomi
sub
jno
int
ljmp
fildll
and
jae
add
int
push
jl
inc
int3
xchg
xor
rep
mov
ret
xlat
jae
sbb
cs
fsub
adc
pop
imul
lahf
and
test
cltd
scas
cmp
sbb
ret
int3
das
mov
lcall
or
mov
repz
mov
repz
cwtl
sti
in
lahf
mov
jb
dec
rorl
dec
mov
into
mov
inc
cmp
adc
and
mov
pop
mov
xor
adc
fsts
popa
es
mov
subb
loope
add
fwait
loope
sbbl
sub
shl
add
cmc
dec
adc
jno
cwtl
or
loop
dec
or
xchg
sbb
or
loope
in
test
rcll
mov
dec
fiadds
ret
jge
lea
ret
xor
sub
popf
pop
mov
push
xchg
mov
lea
sbb
test
hlt
std
pushf
mov
adc
jnp
adc
out
xor
popf
or
js
push
adc
jno
mov
sar
pusha
push
jle
movsb
xchg
dec
in
jns
mov
pusha
test
xor
jb
iret
xorl
jge
adc
inc
fbld
mov
mov
rcll
outsl
lods
pop
or
mov
inc
ret
sbbb
jecxz
filds
dec
test
cmpsl
add
pop
movl
sbb
movsl
mov
pop
inc
mov
or
jns
scas
sbb
xchg
clc
into
add
sub
js
divl
std
cmp
dec
mov
in
stos
mov
icebp
adc
das
repnz
in
sub
adc
test
setp
inc
mov
push
fsts
push
jge
cmp
adc
xchg
les
sbb
jno
imul
flds
stos
sub
and
repnz
clc
jl
ljmp
lods
sbb
pop
dec
lcall
icebp
iret
add
je
cmp
pop
mull
enter
sar
outsb
fisttpl
jb
sub
or
rcl
aam
frstor
dec
sub
iret
int
jo
lahf
dec
orb
sub
cltd
jp
pop
add
shrl
and
jge
mov
repz
fisttpl
test
sahf
mov
into
dec
sti
cmpsl
adcl
cmp
pop
cltd
stos
adc
cmpsb
mov
mov
mov
xchg
and
cmpsb
stos
fistps
pop
pop
in
dec
xchg
pop
mov
adc
or
pop
lock
jecxz
mov
fwait
cmp
mov
xchg
jo
pop
loopne
sbb
pop
ret
adc
add
subl
loope
add
gs
rorl
ret
push
int
mov
nop
jle
jl
data16
xchg
jmp
sarl
iret
popf
scas
and
jnp
xor
xor
fbstp
jns
inc
jmp
mov
movsl
jecxz
mov
add
or
pushf
popf
sbb
adc
js
fwait
xor
fwait
and
cmpsl
lock
xor
stc
in
xchg
pop
dec
and
rcll
out
jge
popf
test
nop
addr16
xchg
in
push
fsubr
xchg
inc
hlt
jp
repz
jmp
loopne
or
test
outsl
adc
sahf
xchg
adc
cwtl
jp
mov
repz
loope
xchg
jbe
xor
adc
fdivrl
mov
loope
xchg
fsubr
movsb
push
xchg
loope
ljmp
in
jge
std
das
and
push
fsubp
lea
sbb
adc
adc
mov
orl
cltd
in
mov
mov
sub
mov
int
gs
sub
xchg
cs
frstor
int3
jmp
ret
in
insl
or
and
pop
or
flds
arpl
adc
or
push
jmp
or
ss
popf
in
cmp
adc
loope
xor
jg
imul
addr16
es
loop
and
mov
repz
push
shlb
pop
notl
decb
popf
shlb
mov
mov
xchg
mov
jns
xchg
cli
mov
xchg
lock
pop
insl
ja
pop
std
jmp
ljmp
aas
mov
push
fldenv
push
rclb
xchg
sbb
test
pop
lds
pop
sbb
sahf
cltd
gs
xchg
stc
aam
add
or
ljmp
sbb
xchg
xchg
inc
mov
xor
cmp
and
and
lock
ret
stos
andb
inc
cmc
inc
divl
std
mov
and
fists
clc
loopne
sarb
popa
jno
loope
push
mov
enter
ret
add
test
mov
clc
in
mov
jge
data16
test
cs
ss
sbb
sub
cmp
je
and
out
xchg
stc
mov
sti
xchg
jmp
std
xchg
in
sbb
xchg
out
sbb
xchg
icebp
sbb
xchg
enter
jmp
sahf
jecxz
jb
sub
mov
adc
mov
pop
sbb
sbb
mov
enter
xchg
shl
xchg
movsb
sbb
push
xchg
in
mov
pop
adc
std
pop
and
add
jmp
leave
ficomps
add
add
mov
cmp
or
sbb
loope
fsts
in
ficomps
dec
icebp
jecxz
lcall
jmp
and
out
fstps
addr16
dec
jecxz
adc
subl
pop
xchg
adc
lcall
test
rcll
xchg
dec
xchg
adc
lea
cmp
cmc
adc
mov
pop
cmp
cmc
stos
repz
lret
rol
aaa
jae
movsb
shll
repnz
iret
jg
pop
lcall
ror
adc
jg
cltd
mov
xchg
fbld
btsl
mov
js
jns
fcomip
or
or
std
sbb
pop
jns
lcall
lea
dec
jecxz
sub
icebp
add
cld
ret
push
xor
push
jno
ljmp
inc
push
jnp
jp
inc
mov
nopl
xor
sbb
sbb
mov
test
xchg
pop
sub
push
adc
mov
mul
mov
sbb
pop
xchg
icebp
sti
lds
sub
das
mov
scas
jle
repnz
add
pop
adc
inc
push
xchg
or
adc
sbb
inc
test
jp
or
and
and
std
pop
push
jle
xchg
cld
leave
jge
ret
pop
popl
xchg
aaa
mov
out
icebp
outsb
loope
pop
decb
dec
sbbb
fistps
movsb
and
mov
pop
je
mov
pusha
xchg
ljmp
pop
out
lcall
xlat
out
data16
out
and
ret
pop
movsb
sbb
lea
daa
adc
and
and
jp
xchg
adc
in
pop
stos
add
lea
add
loop
and
add
lea
popa
sbb
xor
aaa
pop
mov
stc
xchg
or
js
ss
fnsave
add
cli
sbb
pop
pop
dec
paddsw
sbb
std
push
cli
jecxz
mov
push
jns
jns
xorb
push
fstps
add
push
cltd
xchg
mov
lods
mov
out
stos
cmp
cltd
mov
imul
pop
enter
jb
mov
stc
add
and
cli
ljmp
mov
sti
mov
ja
je
ret
mov
sub
imul
push
lahf
imul
test
imul
loop
repz
add
jecxz
xor
fldl
xchg
insl
jno
or
pop
int3
add
mov
leave
xor
out
js
stos
and
mov
mov
push
cmp
repnz
cld
mov
sub
in
mov
lds
or
pop
push
and
mov
mov
and
data16
mov
push
jns
clc
lret
cmc
jnp
aaa
pop
pop
xor
pop
or
xor
inc
adc
out
fstps
aaa
push
int3
enter
push
sbb
pop
mov
add
std
std
lods
cli
in
mov
mov
jns
popa
adc
mov
pop
mov
sbb
and
insl
cs
mov
xchg
add
enter
aaa
fldenv
mov
push
dec
and
dec
add
in
dec
sbbb
jmp
pop
or
mov
loope
mov
adc
loope
and
inc
cwtl
push
jno
pop
push
mov
mov
inc
push
jo
inc
add
call
int3
shll
push
adcl
sbb
push
and
ljmp
frstor
shll
loop
mov
hlt
add
out
pop
push
pop
jg
dec
xchg
sahf
addr16
mov
and
fstl
push
mov
in
in
dec
jecxz
or
pop
or
xchg
popf
jmp
and
jle
imulb
mov
push
out
imulb
push
into
fwait
mov
arpl
sbb
inc
daa
jl
test
call
rcrb
xor
adc
mov
js
mov
mov
cmpl
fs
push
popa
push
stos
push
daa
dec
loope
popa
scas
leave
push
pop
xchg
push
sbb
sbb
xor
fdivs
add
loope
insl
in
data16
clc
jnp
mov
jg
iret
add
punpcklbw
xchg
cwtl
out
mov
pop
in
scas
sbb
adc
xchg
icebp
sti
nop
aam
push
std
lods
insl
adc
pop
sbb
adc
shll
pop
mov
inc
or
dec
push
jno
jns
push
mov
and
movsb
mov
or
stc
adc
gs
and
sub
jg
mov
mov
cmp
rcl
and
fwait
cwtl
sub
lods
lea
and
jnp
inc
fdiv
mov
push
mov
push
xchg
push
pop
jns
cltd
adc
js
fldt
push
xchg
add
inc
outsb
mov
push
mov
mov
fisttpl
cmp
sub
fcomps
sub
add
mov
jo
and
adcl
dec
in
stos
bound
pop
lds
jnp
or
sbb
xchg
icebp
and
or
jp
js
sub
loope
jp
or
mov
arpl
adc
sub
or
cwtl
notb
cli
mov
sbb
dec
sbb
jns
sbb
adc
sbb
test
lods
out
adc
clc
mov
adc
dec
pop
out
in
rclb
cmp
xchg
push
stc
popf
xor
push
cmpb
push
add
mov
repnz
sbb
repnz
push
cwtl
popf
imul
or
xlat
lea
mov
push
jno
icebp
mov
lea
and
insl
out
out
xor
and
mov
ret
test
pop
mov
mov
leave
adcb
loopne
je
pop
mov
in
push
in
out
push
or
iret
sub
sbb
pop
out
out
push
test
mov
dec
jg
repnz
pop
es
jecxz
jle
mov
mov
dec
in
adc
int3
mov
mov
shlb
cmp
add
fiadds
push
xchg
std
and
mov
adc
adc
icebp
sub
lea
test
enter
jns
pf2iw
sbb
jg
and
cwtl
mov
cli
fwait
stc
clc
and
pop
ficompl
clc
jmp
dec
jle
or
sub
mov
mov
inc
xor
mov
jns
ror
and
cmp
test
loop
js
push
ficoms
movsl
lea
cmp
mov
popa
and
sti
adc
ljmp
jno
xor
mov
jo
adc
or
fstpl
sbb
inc
sub
jb
insb
mov
adc
or
adc
pop
cld
and
or
push
dec
dec
sbb
outsl
or
movsl
nop
xor
clc
in
ficoms
fists
lea
pushf
lods
mov
sbb
jp
sbb
aas
jge
mov
icebp
call
cwtl
mov
xor
push
jg
stos
movsb
movl
mov
cmpl
movsb
sbb
dec
mov
call
mov
inc
mov
into
adc
adc
stos
test
sbb
fstp
loope
adc
arpl
lcall
decl
and
mov
imul
imul
add
sbb
dec
dec
std
lcall
sbb
clc
mov
fwait
scas
into
es
sbb
jns
xor
les
ret
xchg
cmp
insb
fstl
add
enter
std
push
adcl
fiadds
inc
jle
int3
icebp
or
or
xchg
jno
lock
mov
sbb
mov
dec
pop
push
das
repz
shlb
clc
jmp
push
and
adc
pop
cs
add
je
xor
cmp
pop
pop
push
jbe
dec
xchg
mov
xchg
call
push
adc
jl
adc
addr16
adc
fwait
push
icebp
adc
push
jns
or
cmp
jle
and
sbb
xchg
ret
mov
pop
mov
in
test
das
jmp
cmp
xor
mov
pop
movsl
std
sbb
mov
shr
cmp
pusha
xchg
gs
pop
push
cmp
and
std
push
mov
sbb
cmp
lods
mov
mov
pop
je
cwtl
daa
lock
mov
rcrb
mov
pushf
jecxz
loope
cwtl
mov
mov
pushf
add
sub
inc
and
xor
mov
and
jo
mov
sbb
adc
popa
sbb
nop
cltd
cltd
fdivl
scas
and
adc
subl
push
sbb
cmpsl
xor
push
jmp
aaa
mov
mov
pop
and
sub
cmp
mov
adc
xchg
pop
jl
adc
lea
out
xor
out
adc
test
push
lock
inc
jmp
rcrb
insb
pop
gs
or
xchg
adc
mov
push
cmc
push
xor
out
cwtl
dec
out
inc
dec
adc
sti
pop
std
mov
das
jno
or
mov
inc
jmp
pop
and
jg
sbb
aad
inc
fsubrs
scas
je
xchg
cmpl
cmp
mov
add
xor
rcll
pop
sbb
enter
loope
sub
icebp
sbb
or
add
cltd
inc
lea
cmp
push
lds
cmc
add
xor
add
or
mov
idivb
lret
icebp
in
mov
mov
testl
cwtl
push
gs
sti
push
aam
cmc
cltd
test
mov
shll
lea
jl
sbb
rcrl
dec
cmp
mov
scas
dec
clc
xchg
cs
sub
mov
in
mov
and
aaa
lods
test
outsl
int
push
pop
dec
sbb
adc
xor
jbe
repz
xchg
arpl
pop
aad
stos
sbb
adcl
loopne
pop
sti
lret
pop
xchg
xchg
or
iret
in
inc
mov
rclb
xchg
and
cmp
icebp
jecxz
lea
sbb
stc
sbb
mov
dec
lret
mov
ss
pop
cmc
or
cld
loope
shlb
xlat
adc
popf
sbb
jge
sbb
test
mov
mov
in
sahf
mov
loop
addr16
dec
mov
or
push
jecxz
jmp
mov
pop
orb
adc
xor
imul
adc
pop
stos
push
inc
inc
out
sbb
test
jno
cmp
dec
rol
mov
cld
sub
sti
sub
negl
sub
xchg
out
orl
dec
or
adc
repnz
rcll
cmpsl
and
inc
movsb
leave
out
pop
pop
into
and
and
in
int3
push
jne
and
aad
jns
movsl
sar
sbbb
lds
pop
xor
test
mov
icebp
mov
xorl
mov
adc
cmp
testb
and
lods
inc
fwait
or
sti
jnp
push
jge
pop
ret
dec
sbb
push
add
arpl
jmp
das
xchg
fcomps
sub
lods
inc
orl
decl
data16
xchg
jle
mov
rorb
js
jecxz
das
dec
pop
mov
push
repz
jp
and
sbb
sbb
in
aam
dec
pop
or
in
push
sbb
dec
xchg
sbb
fildll
ret
movaps
sbb
int3
mov
mov
addr16
mov
jae
mov
lock
enter
dec
sti
push
fists
push
fs
jge
push
dec
jo
mov
fnsave
test
sbb
adc
jge
pushf
fwait
cltd
cltd
sbb
sbb
sbbl
pop
subb
roll
daa
lret
or
rcrl
test
frstor
inc
push
roll
pop
std
and
in
pop
in
out
hlt
ljmp
lahf
add
aaa
or
xadd
cltd
and
xchg
adcb
and
sbb
push
popf
inc
cmp
push
imul
inc
popf
add
aad
cmp
and
in
stc
ja
clc
inc
mov
in
mov
jns
xchg
pusha
xchg
pop
sahf
fdivrl
push
adc
out
inc
jns
pushf
mov
js
cli
sbb
loop
mov
push
jmp
mov
jmp
lea
push
adc
push
jnp
es
sbb
push
fisttpll
inc
cmp
mov
push
cmpl
arpl
rorl
bnd
js
stos
data16
lcall
inc
scas
ret
jmp
cmp
outsb
or
loop
cmp
mov
enter
lods
ret
adc
cvtdq2ps
cmp
leave
xchg
roll
aas
jb
adc
or
out
int3
pop
adc
subl
push
mov
std
pop
mov
test
adc
or
xchg
jmp
test
jbe
jecxz
cmp
sti
pop
popf
stc
mov
xor
popf
repz
loopne
mov
daa
dec
xchg
js
sub
fldcw
inc
mov
mov
push
pop
mov
nop
xchg
add
les
lods
in
add
fdivrl
mov
sahf
pusha
jns
pop
roll
xchg
cmp
mov
imul
fsubs
aam
add
ret
sbb
daa
fldt
faddp
xor
lods
cs
jmp
lea
loope
add
or
ficoml
cltd
sub
adc
inc
outsb
std
into
jecxz
push
loopne
and
out
push
cmp
lods
ret
cwtl
cmp
sub
xchg
jecxz
adc
mov
push
mov
fistl
pop
imul
sub
outsl
outsb
cmpsl
sbb
xchg
and
std
jp
jnp
push
push
mov
jle
insl
jle
test
pop
ret
mov
test
jno
adc
xor
and
lods
xchg
xchg
adc
pop
mov
es
sub
jcxz
test
sub
sub
pushf
data16
add
mov
outsb
sub
add
and
sbb
inc
mov
sbb
rol
aam
pushf
mov
shll
aaa
fdivrs
sub
aad
sbb
cltd
jl
icebp
loope
xor
fstl
movsl
cli
cmp
fmull
dec
imul
aaa
adc
pop
jmp
push
adc
insl
and
adc
popa
push
inc
pushl
dec
cmpsb
dec
xor
fisttpll
jle
push
stos
mov
std
cltd
mov
popa
and
mov
out
int
jns
push
mov
sbb
sbb
pusha
lahf
push
jp
or
clc
rorl
adc
fcompl
cmpsb
add
dec
xchg
xchg
sbb
jp
cmp
dec
loope
lret
xchg
cmpsl
vpor
rcll
jbe
lahf
fists
mov
out
inc
jo
pop
gs
mov
mov
push
cwtl
mov
mov
arpl
std
pushl
mov
xchg
scas
sti
and
popf
sbb
lods
or
sarl
adc
pop
pushf
cltd
add
sbb
cwtl
add
sbb
in
lcall
cmp
or
xor
ret
test
push
aas
sbb
and
sahf
sbb
mov
mov
adc
mov
icebp
lret
ja
shr
arpl
jno
out
cltd
sbb
pusha
out
cs
push
ret
jmp
imul
push
dec
cmp
popa
inc
push
rolb
popf
clc
and
outsb
sbb
inc
xchg
cld
mov
lods
ror
lret
xchg
in
inc
xchg
fcompl
dec
pop
and
js
add
xchg
cmpsl
mov
lahf
xchg
sub
imul
jbe
dec
movsl
and
pop
sub
add
movsb
and
pop
rcl
pop
push
and
mov
cld
sbb
fsubr
dec
sub
mov
mov
and
popf
sbb
jle
fmull
pushf
out
inc
jns
mov
add
adc
lods
andb
jecxz
or
loop
adc
fadd
adc
lcall
mov
cmp
cmc
sbbb
cmp
add
sub
inc
sar
push
mov
inc
push
dec
xor
xchg
mov
fcmovne
jl
leave
lock
test
push
sub
movsb
jbe
jmp
xor
or
call
pop
data16
adc
hlt
mov
or
add
sbb
scas
xchg
in
and
sti
es
in
dec
jno
push
arpl
jne
test
xchg
jg
aad
lcall
sbbl
subl
stos
fnstenv
popa
adc
mov
inc
mov
out
mov
lahf
push
js
mov
adc
push
outsb
int3
ss
mov
xchg
xchg
rorl
jmp
scas
aaa
leave
xchg
ja
decl
out
sbb
pop
xor
xor
mov
into
aad
jo
addr16
popa
lret
push
repnz
hlt
sbb
js
mov
sti
cltd
sahf
sbbl
inc
imul
into
xchg
and
or
xor
notb
imul
bound
cltd
ja
mov
stos
dec
stc
jno
popf
dec
outsl
pop
xchg
jns
pop
repnz
jp
pushl
dec
ljmp
and
cmp
push
andb
cli
mov
mov
std
or
sub
xchg
jbe
xchg
dec
sub
fldcw
popf
add
sbb
sbb
enter
push
insl
cmpsl
rcl
inc
movsl
jge
int
mov
sbb
test
pushf
adc
adc
mov
shll
jp
cli
and
inc
cli
and
xchg
dec
mov
jecxz
sbb
test
fxch
add
outsb
or
jp
adc
repz
cmc
push
sbb
pop
bound
fs
cld
cltd
seta
pushf
xchg
lret
mov
popf
and
adc
cmpsb
sbb
cld
mov
repz
leave
hlt
pause
mov
pop
pop
mov
andl
popw
inc
pop
jmp
test
jbe
movsl
add
into
imul
or
in
out
push
sbb
add
push
pushf
inc
out
mov
and
xchg
in
jns
adc
test
xchg
es
fcoml
fldl
dec
jg
lcall
push
imul
lds
jge
dec
or
cwtl
in
or
jmp
imul
icebp
cmp
movsl
sbb
and
push
imul
insb
or
pop
mov
sbb
icebp
mov
lret
clc
std
lea
aad
rcrl
sub
fsubl
pop
pushf
mov
mov
mov
out
pop
rcrl
pop
sbb
push
sahf
sub
faddl
rorl
das
stos
insl
sbb
mov
lahf
xchg
mov
mov
mov
dec
dec
fcmovnbe
xchg
xchg
pop
mov
xchg
cld
mov
pop
adc
mov
daa
jle
sbb
int3
fiadds
add
int
inc
jle
pushf
or
orb
icebp
idiv
jp
rorw
push
jmp
adc
adc
mov
aas
push
and
push
ja
aaa
aad
push
pop
jns
cmp
daa
imull
repz
sahf
jecxz
sub
lcall
xor
sbb
popa
loopne
xor
xchg
mov
cmp
jbe
rcrl
imul
or
add
inc
popa
mov
imul
cmpsb
stos
nop
sbb
sbb
fmulp
adc
inc
lds
scas
cwtl
icebp
jmp
lock
lahf
out
shll
test
pop
cltd
mov
cli
sub
pushf
cltd
sti
cltd
sbb
cltd
cwtl
jmp
sbb
pop
outsl
dec
popf
test
adc
stc
cli
and
inc
addl
inc
mov
jb
jle
lds
in
fldl
cwtl
pusha
and
lods
pop
mov
rcrb
pop
test
cmp
in
pop
stc
mov
adc
and
adc
dec
sub
popa
mov
stos
scas
fs
dec
adc
orl
scas
add
xchg
push
mov
mov
xchg
xchg
add
xchg
mov
pop
ja
jo
adc
filds
pop
add
repnz
push
or
orb
jl
inc
fwait
push
push
adc
or
and
mov
fwait
incb
pop
out
gs
or
lahf
or
add
pop
jp
cmp
and
or
dec
adc
push
aaa
pop
push
shll
add
mov
mov
or
popf
sahf
pop
and
pop
mov
mov
sbb
mov
or
jno
hlt
loopne
xchg
jmp
clc
adc
and
imul
add
cmpsb
mov
cmc
lock
loopne
pop
incl
rcrl
daa
cmp
sarb
andb
pop
adc
ljmp
mov
test
add
xorb
push
fadds
xchg
sbb
jle
stos
or
pop
jl
sub
jge
sbb
lcall
push
test
loop
loop
jg
sub
adc
mov
aaa
test
or
loope
xchg
xchg
or
xchg
and
loopne
mov
faddl
roll
push
mov
pop
or
in
mov
cwtl
xor
icebp
or
decl
fdivr
add
sbb
aad
cmpl
sti
popl
mov
test
loopw
xchg
fcompl
xor
mov
mov
dec
mov
mov
push
pop
movsb
and
aas
push
call
sarl
stos
sub
jmp
add
aaa
jge
xchg
je
std
adc
push
ljmp
mov
rclb
cmp
and
mov
jecxz
mov
pop
test
cmp
cmp
xchg
icebp
sbb
ror
lcall
cmpsl
test
sbb
xor
add
jl
sub
jne
repnz
out
pop
sub
in
idiv
stos
imul
mov
imul
mov
mov
inc
pop
cmpb
jl
mov
add
cwtl
insb
addr16
sub
nop
pushf
jbe
add
pop
in
test
and
fstpt
fstl
sub
inc
shrb
clc
daa
push
add
adc
add
jbe
xchg
test
fidivrl
push
mov
push
add
sbb
out
lcall
popf
adc
popa
sti
fs
cli
mov
cmpsl
idivl
pop
out
shr
pushl
ss
push
or
pop
add
push
xchg
fidivl
lods
cmp
mov
mov
aas
pop
or
lea
decb
and
test
movsb
dec
sbb
std
pop
sahf
pusha
mov
add
sub
inc
pop
and
xlat
lcall
mov
cli
jns
fmulp
lret
push
insl
push
inc
xlat
stos
ljmp
pop
call
mov
push
fcomi
or
push
fwait
push
and
push
cmp
fdivrl
and
inc
in
or
cmp
lret
cmp
mov
mov
dec
mov
sbb
imul
push
out
jle
push
xchg
fs
test
xchg
call
sub
xor
mov
and
dec
fwait
stos
mov
lods
aam
arpl
cmp
and
and
cmp
xchg
add
inc
bound
pop
es
mov
mov
add
movsl
mov
adc
into
pop
or
and
inc
stc
cmc
jbe
cltd
out
push
fdivr
pushf
in
stos
cmc
je
cmp
jo
xchg
xchg
sti
pop
add
inc
jnp
and
pop
insb
adc
jb
je
pusha
fwait
scas
addr16
xor
vmread
pop
or
or
sub
push
sbb
pop
loope
mov
pop
or
mov
sub
outsl
pop
jmp
jge
popf
add
clc
add
adc
inc
subl
cmp
pusha
scas
in
repz
sti
jns
gs
out
pusha
push
sub
cmc
sbb
pusha
and
adcl
mov
int
fsubp
xlat
iret
sarl
push
pop
loope
jmp
pop
out
sbb
int
sub
dec
add
jecxz
jbe
and
mov
icebp
and
mov
adc
xchg
xchg
test
sar
sbb
les
xlat
mov
xchg
sub
repz
imul
sti
push
and
add
inc
xchg
push
mov
loope
jne
or
negb
xor
in
das
sbb
add
cmp
mov
mov
adc
enter
ficoml
fiaddl
or
fdivp
cmp
rolb
ret
repz
cltd
pop
push
or
jmp
out
mov
mov
punpckhdq
mov
jns
enter
lea
sbb
adc
ret
fsubrl
clc
lcall
int3
loope
sbb
or
repz
test
cltd
adc
xchg
adc
test
or
or
jnp
lahf
sbb
xor
cmp
shrl
movsb
adc
pop
aaa
or
stos
mov
clc
jnp
inc
add
jp
pusha
pop
sbb
rclb
inc
push
push
test
inc
jecxz
out
les
sbbl
and
int3
js
shrl
mov
jecxz
and
lds
and
adc
loope
fistpl
leave
adc
pop
ficompl
in
cld
or
pop
ss
test
bound
std
in
push
jns
mov
shlb
icebp
dec
xchg
inc
out
dec
xor
inc
rep
fsub
jae
aad
push
loope
icebp
jge
js
sbb
mov
mov
sbb
ret
sub
and
nop
push
xchg
je
pop
dec
and
jb
sbb
cmc
sti
push
stos
and
outsb
push
pop
andl
adc
inc
push
xchg
ret
into
cmpl
dec
ret
into
xor
popf
mov
mov
pusha
and
sbb
mov
and
loopne
adc
repz
or
mov
pushaw
fistpl
pop
pop
rcll
sbb
push
cmp
xor
xchg
pop
in
insb
dec
inc
pop
xchg
rclb
xchg
popf
mov
je
shrb
es
mov
lods
loop
adc
xchg
mov
and
or
jg
mov
cmp
mov
push
mov
sub
inc
insl
loope
es
push
jno
sub
pop
imul
rcl
push
pop
cmpb
push
mov
sarl
xchg
cmp
stos
ret
lea
mov
xchg
mov
add
xor
pop
mov
std
add
sbb
bound
mov
mov
mov
int
mov
inc
cmp
mov
ljmp
mov
addr16
and
ret
repnz
mov
sbb
adc
jg
sub
loope
and
jecxz
adcl
je
scas
pop
cld
imul
jno
out
xor
mov
nop
arpl
or
ror
jno
loope
xchg
add
add
in
push
inc
sbb
and
cwtl
adc
and
popf
clc
adc
add
sti
jno
movsb
int3
or
inc
bound
jmp
lret
xchg
push
shlb
cld
adc
xchg
inc
jmp
and
push
mulb
sti
in
adc
int
dec
sbb
xor
pop
cmpsb
and
sbb
sahf
std
jge
in
jl
mov
sahf
jecxz
movsl
rorl
scas
les
dec
sbb
ss
push
sbb
xchg
cmpsl
sub
push
or
mov
outsl
stos
mov
out
mov
push
sbbl
xchg
mov
test
sbb
icebp
mov
xor
jle
sar
rcrl
lret
pop
popf
jbe
std
dec
negl
aad
aas
pop
loopne
cmp
or
and
ret
repz
sbb
xchg
out
and
inc
and
sbb
xor
jg
mov
jl
mov
push
push
pop
jns
add
out
pop
xchg
fildll
or
adc
in
and
imul
xor
wbinvd
pop
push
jecxz
sti
pop
and
shll
lods
mov
pop
sbb
add
sbbl
sub
ret
arpl
icebp
xchg
sti
mov
push
js
mov
xchg
out
lret
loopne
stos
sbb
xlat
es
and
inc
pushf
jmp
pop
stc
pop
add
cli
packuswb
xchg
loopne
add
and
in
incb
rcrl
inc
popf
in
aad
adc
and
cli
push
adc
and
push
arpl
add
and
add
sub
adc
aas
fwait
push
adc
xchg
fldl
or
jne
sbb
nop
cli
and
adc
jnp
cli
lahf
adc
xor
push
pushf
ljmp
xchg
lahf
sbb
fistps
clc
adc
into
adc
cltd
sbb
sub
stc
mov
bound
rorb
test
jp
loope
mov
sahf
std
sbbl
xchg
pop
sbb
and
lock
icebp
lea
mov
test
lods
adc
test
loope
jge
cwtl
sti
sub
jmp
pusha
and
cwtl
and
push
mov
mov
xor
filds
insb
xchg
cmc
cwtl
jmp
stos
cmp
cmp
xchg
inc
int3
insl
push
add
mov
dec
pop
stos
sub
js
add
std
xchg
push
sbbl
fstpl
and
sbb
mov
js
adc
jl
int3
clc
test
shll
add
js
mov
call
mov
cmpsb
push
in
xor
jo
lcall
sahf
sbb
jg
xor
jae
test
scas
shll
dec
cs
hlt
pop
fstpt
loopne
xchg
cmp
sub
inc
jns
add
xchg
mov
cmp
cmp
mov
fwait
addr16
jnp
and
xchg
and
or
mov
icebp
movzwl
pop
mov
adc
sbb
mov
addr16
jo
mov
push
mov
daa
jle
cmp
out
sub
add
clc
std
xchg
add
add
xor
inc
rclb
mov
sub
fucomi
jns
cltd
sbb
inc
push
cmpsb
pop
inc
mov
mov
aam
sbb
clc
sbb
mov
mov
sub
mov
fisubrl
fisubl
arpl
stc
dec
ja
sbb
arpl
cli
mov
arpl
insl
fadds
sbb
data16
xor
xchg
jns
loope
ss
pushf
or
xchg
in
add
dec
cwtl
ficomps
xor
add
push
pushl
cmp
jl
xchg
add
mov
pop
ret
jmp
jo
push
push
inc
jmp
mov
cmc
and
inc
aaa
mov
and
push
in
sub
mov
mov
inc
arpl
mov
adc
sub
mov
mov
icebp
lds
clc
mov
dec
or
add
xlat
or
cltd
push
or
adc
inc
jp
nop
jmp
data16
dec
xchg
and
sbb
xchg
and
jl
int
in
push
in
push
pop
mov
leave
mov
mov
subl
xor
shlb
out
mov
cwtl
sbbl
sbb
popf
sbb
clc
rolb
adc
in
imul
sbb
sub
inc
push
push
and
inc
test
out
imul
adc
xor
cli
lahf
mov
sbb
gs
fdivr
push
outsl
rclb
gs
fisttpl
and
sbb
fisttpl
cwtl
rolb
leave
iret
cmpsl
mov
xchg
jmp
std
sbb
sbbl
imul
jmp
xor
loopne
push
xlat
pop
in
and
push
fs
sbb
icebp
mov
lock
mull
lock
jl
and
jne
push
dec
add
pop
repnz
mov
xchg
imul
and
xor
or
aam
std
jae
and
and
mov
push
sbb
rolb
lea
aad
jnp
jae
add
enter
aad
lret
jnp
mov
in
lods
sbb
test
adc
int
xchg
or
ljmp
sbb
scas
ret
mov
pop
push
pop
js
outsb
and
pushf
imulb
push
jae
xchg
les
xor
fstpl
cmp
call
cwtl
cmp
adc
ret
sbb
sbb
lcall
xor
jae
movsb
or
fldenv
add
push
mov
push
jbe
lds
sbb
pop
sti
push
fdivr
cld
js
test
cli
jp
push
insl
icebp
out
fisubrl
jns
test
jge
test
jne
adc
nop
jle
push
dec
adc
cmp
lea
inc
jb
out
cld
loop
icebp
mov
pop
sbb
and
push
xor
and
mov
jo
out
pop
inc
jbe
xlat
push
dec
stc
leave
add
es
mov
stc
add
aad
jne
pop
adc
jne
aad
jecxz
adc
add
mov
fnstsw
dec
xlat
xor
sub
sbb
jecxz
sbb
faddl
call
and
add
call
xchg
stos
lock
lcall
jbe
cmpsl
or
lea
mov
lahf
xor
jnp
sahf
and
jp
adc
mov
or
jmp
jnp
push
fwait
sub
std
sub
adc
arpl
lcall
adc
rorl
inc
mov
jbe
mov
inc
mov
enter
hlt
cmpsb
lods
dec
ret
push
popl
push
pop
cltd
or
dec
jb
add
mull
pop
sbb
sbb
stos
and
push
repz
in
mov
test
fld
and
pop
std
test
frstor
sahf
loopne
mov
add
test
stc
pop
in
push
ret
ja
fsubl
sub
out
rcrl
outsb
and
push
into
pop
mov
add
sbb
dec
pop
pop
mov
ret
insl
stos
pop
cwtl
repz
test
add
popf
jmp
mov
jp
fbstp
push
sbb
xchg
add
inc
inc
in
aas
jl
adc
addr16
push
in
mov
jns
add
loopne
lret
out
xchg
xchg
adcb
cmp
call
rcr
cmpsb
mov
pop
test
test
xor
mov
xchg
das
js
stc
aam
ljmp
mov
outsb
fdivrp
xchg
xchg
cs
mov
fdivl
push
repz
inc
jb
fildll
popf
decb
sbb
adc
shrl
mov
fcomp
mov
std
movsb
push
xchg
rcrl
mov
imul
aad
loopne
inc
shrb
stos
int3
add
idiv
mov
xchg
sbb
aas
pop
nop
inc
jbe
dec
pop
loop
cmpsl
inc
mov
std
sahf
cld
mov
add
jge
jmp
xchg
push
mov
lods
mov
dec
testl
pop
xchg
mov
sub
pop
adc
cmp
mov
or
adc
dec
fists
stos
sbb
ret
adc
push
cmp
jg
pop
loop
adc
xchg
std
daa
jle
dec
jmp
int3
dec
std
incb
cld
lret
mov
addr16
inc
pushf
sub
mov
cmp
sbb
in
test
imul
lds
xchg
and
mov
xchg
popf
in
xor
dec
sbb
into
dec
and
popf
and
sub
sti
sti
leave
test
out
ss
insb
roll
cld
sbb
ljmp
or
xor
fmull
aaa
sbb
lret
jbe
xchg
mov
adc
enter
cs
mov
xor
mov
mov
xchg
in
or
daa
test
sbb
cmpl
cmp
stos
cli
scas
and
das
mov
movsb
fs
or
dec
sbb
pop
dec
test
in
pop
or
cwtl
mov
or
and
mov
xor
insl
and
rcrb
inc
ret
pushf
cmp
mov
sub
xchg
fs
loop
ja
cli
add
sbb
sub
and
testb
aam
pusha
sbb
out
dec
push
std
jp
test
add
fcmovb
mov
push
call
aaa
push
lock
btcl
mov
push
aad
jl
mov
iret
xchg
mov
xchg
inc
clc
out
sub
mov
lret
adc
enter
cwtl
lods
jno
loope
or
ret
lahf
mov
test
add
xor
sbb
in
or
lds
add
sbb
push
adc
xchg
and
test
inc
jno
call
jmp
sub
loopne
xor
pop
cmp
adc
inc
sub
cs
mov
rolb
push
adc
inc
xchg
xchg
lahf
movsl
mov
rcrl
adc
pop
and
xor
out
insl
movsb
in
repz
arpl
mov
inc
fcoms
movsb
sub
fistpl
pop
in
ljmp
dec
mov
jecxz
push
dec
add
or
lods
outsb
pop
enter
add
mov
out
mov
adc
push
and
mov
mov
addr16
faddl
imul
pop
or
lods
dec
dec
rcl
or
sbb
push
lods
mov
das
test
clc
test
andl
stos
pop
cltd
adc
into
sub
call
inc
int3
out
cmp
jge
fisubrs
stos
pop
push
push
cli
add
test
sti
ret
mov
sub
arpl
adc
sahf
pop
or
and
mov
push
sub
adc
add
mov
aaa
jle
mov
stc
pusha
mov
clc
aaa
cmp
and
repz
in
cmp
fnstcw
test
and
js
adc
movsb
push
pop
push
mov
pop
out
pop
js
push
and
test
xorb
std
pop
and
or
loopne
push
fucom
iret
or
sub
je
psllq
push
or
aaa
pushl
push
cmc
ficomps
push
mov
inc
cmovge
insl
sbb
sub
or
jb
pushf
push
push
shrb
lock
cmp
pop
jb
icebp
test
sub
repz
pop
sub
sbb
xchg
popa
mov
call
or
ret
frstor
cmpsb
cwtl
in
push
loope
sub
sahf
ds
xor
adc
jge
mov
mov
sub
pop
or
jns
inc
mov
sub
rcl
mov
jg
test
xchg
lods
jbe
push
or
sbb
jbe
es
sbb
cld
neg
mull
sti
or
std
loope
mov
xchg
test
xchg
jbe
mov
mov
and
mov
push
call
out
cld
inc
into
pop
int3
in
lods
sarb
or
shlb
lds
sbb
mov
inc
repnz
sub
ds
add
fcoml
lds
add
clc
inc
fwait
imul
jmp
imul
dec
idiv
insl
and
cmpsl
je
enter
imul
rclb
or
ljmp
lods
sbb
or
add
add
ror
adc
pop
test
call
mov
or
or
and
adc
or
xchg
sbb
and
sub
test
popf
add
ds
adc
cmp
or
push
shll
icebp
out
inc
or
int3
sub
push
rolb
fwait
pop
xchg
adc
imul
fs
sub
lds
fsubrp
enter
or
int
in
js
mov
jae
inc
inc
jecxz
inc
rcrb
loopne
out
mov
xchg
cmpsl
adc
push
ljmp
and
and
das
pop
cmp
fdivr
jbe
jecxz
cmp
loope
cltd
out
dec
push
sbb
sbb
mov
inc
je
imul
sbb
ljmp
inc
inc
nop
and
inc
pop
mov
mov
xor
test
scas
sub
pop
sahf
jp
test
ss
or
mov
mov
jnp
adcl
inc
dec
inc
pop
lret
mov
out
jge
and
clc
outsb
adcb
bound
push
in
cld
mov
mov
sbb
nop
pop
out
in
pusha
add
sbb
and
out
push
test
sbbb
cmp
push
mov
dec
cmp
daa
jae
cmp
jmp
cmp
in
inc
iret
fadds
add
test
or
jmp
pop
sbb
xor
xchg
xchg
out
mov
jbe
dec
addr16
inc
inc
inc
cli
out
js
adc
movsb
and
sbb
in
iret
int
pop
cwtl
fildl
sti
sbb
and
adc
sahf
jge
pop
and
cwtl
call
test
nop
jge
lahf
jnp
sbb
push
adc
cltd
jmp
push
mov
dec
jecxz
out
sub
test
arpl
sbb
ret
out
mov
and
sub
sub
out
fdivl
movl
push
adc
rorb
lods
test
test
dec
sbb
fistpll
into
push
out
or
jmp
pop
sbb
jle
or
xor
xor
in
leave
add
or
push
push
push
dec
pop
inc
sub
dec
jge
dec
insl
and
out
pop
push
add
in
mov
xor
aad
sub
test
sub
sbb
int
sbb
pop
rcr
das
push
fcomps
andl
mov
test
xlat
xchg
fstpl
es
xlat
and
xchg
mov
xlat
sbb
add
push
aad
pop
pop
mov
shl
fwait
popf
push
adc
cmp
and
dec
fstl
cmp
popf
adc
ja
lahf
jnp
sarl
movsb
std
int3
push
data16
and
fsubr
jge
dec
sbb
inc
xor
add
into
xlat
pavgb
push
inc
jl
xor
dec
cmp
inc
imul
push
out
or
loopne
aas
andb
mov
xchg
jbe
push
xchg
popf
mov
lret
mov
stos
fstpt
pop
test
add
stos
add
lea
add
fsub
dec
mov
jne
sbb
or
push
movsb
rolb
andb
dec
cmp
mov
sti
ds
sub
out
pop
or
clc
lds
add
pop
inc
adc
and
xchg
test
adc
cmc
mov
cmp
arpl
inc
popf
adc
lds
push
and
add
inc
pop
mov
mov
add
inc
lock
xor
cmp
mov
popf
sub
ss
jae
mov
icebp
cmpl
and
mov
add
and
dec
lret
notl
cmp
dec
addr16
xchg
xchg
out
add
mov
aaa
lahf
jp
pop
dec
xor
pop
jle
dec
cmc
add
jmp
pop
daa
aam
imul
xchg
shl
addr16
cltd
into
add
repz
movsb
sub
arpl
fiadds
sarl
dec
lea
mov
sub
xchg
pop
stc
mov
cmc
xor
popf
outsb
shl
dec
xchg
es
lods
add
nop
jecxz
inc
pop
test
in
add
jg
xor
int3
xchg
jo
inc
es
push
sti
int3
mov
mov
and
inc
cmp
aad
je
push
push
xchg
incl
push
sub
xchg
and
shl
or
pop
mov
std
sbb
fcomip
or
jbe
push
mov
rcll
cmpsl
inc
cltd
cmp
jg
mov
adc
or
pop
imul
cs
and
data16
pop
pop
jns
rclb
dec
mov
add
adc
pop
cmc
pop
sbb
pop
pop
sub
push
std
aad
out
mov
sbb
repz
cwtl
and
jecxz
cli
adc
inc
in
cld
inc
add
lds
and
fidivl
insl
jns
and
or
and
jp
in
pop
cmp
stos
mov
fnstcw
cmp
in
sbbl
mov
mov
es
adc
sub
jl
out
hlt
jecxz
sbb
sbbl
push
in
xchg
inc
lcall
jne
dec
inc
xor
je
push
lret
daa
std
insl
sbb
inc
cmpsb
jecxz
dec
mov
cmpb
lea
sbb
loope
push
sbb
and
sbb
add
add
negb
push
imul
popa
hlt
fstl
cwtl
jb
mov
cltd
xorl
sbb
jno
ficomps
pusha
ret
mov
push
mov
dec
jne
ljmp
cmpsl
jmp
or
sub
test
inc
and
jne
out
push
sti
std
test
and
mov
pop
fnstsw
int
shrl
or
sti
pop
mov
lret
out
cmp
inc
sbbl
mov
xor
sub
or
and
mov
lods
mov
test
frstor
xchg
mov
sahf
test
ljmp
mov
shll
sbbb
mov
add
js
push
test
in
mov
test
incl
imul
push
add
out
in
adc
and
out
adc
or
and
xchg
cld
push
stos
mov
sbb
mov
imul
popf
sbbb
dec
or
cmp
dec
cmp
pcmpgtd
sbb
aam
inc
xchg
sub
lds
and
sbb
mov
inc
push
rcrl
lock
jle
and
add
inc
add
ud0
xor
xlat
add
shll
jns
in
das
push
out
jno
pop
push
jo
cmpsl
loop
add
adcb
cltd
jb
sub
fcompl
xchg
stos
mov
rcrb
xchg
jecxz
cltd
cltd
lods
jb
push
fwait
iret
jns
xchg
sbb
inc
imul
or
pop
or
out
bound
std
push
lds
stc
in
iret
inc
test
jno,pt
stc
or
hlt
jge
inc
mov
jbe
leave
vpsubsw
pop
jecxz
int
cmpb
sar
cmp
push
mov
clc
ds
dec
mov
push
in
cmpsl
adcl
dec
mov
add
add
movsl
out
adc
pop
xchg
mov
jnp
dec
sub
fstpt
vphsubsw
ret
mov
aad
sbb
jecxz
pop
pop
adcl
cmp
loop
add
pop
pop
sbb
xchg
mov
sbb
inc
mov
mov
or
and
and
sbb
sbb
loop
xlat
xchg
aad
int
shl
lret
or
xchg
leave
sbb
loop
cmovp
dec
mov
and
add
mov
push
cmp
aam
add
mov
pop
ja
inc
push
repz
xchg
pusha
mov
jmp
rcll
loope
jl
adc
or
insl
cli
lea
and
jle
mov
mov
or
call
jns
mov
jmp
add
in
loopne
adc
xchg
add
daa
pop
pushf
daa
sbb
fdivl
adc
and
fildl
aaa
sbb
fucomi
sti
fs
cmp
push
push
adc
sti
add
sar
mov
lea
ret
and
stos
std
out
adc
rcll
in
imul
or
aad
and
sub
clc
jb
push
cmpb
add
fwait
mov
shlb
pusha
lds
mov
dec
jmp
loop
pop
andl
and
lock
xor
push
aaa
testb
or
imul
mov
sbb
and
xchg
sbb
sbb
mov
clc
jmp
sti
mov
mov
push
mov
jp
or
adc
arpl
sub
xorl
cli
in
sti
nop
popf
add
sbb
adc
cmp
jae
pop
call
mov
fucom
inc
jbe
jge
rolb
xchg
jg
xor
sub
inc
sub
arpl
rcrb
pop
aad
or
cmpsb
push
mul
mov
scas
mov
jle
psubsw
jno
xor
jmp
fsubp
mov
ja
adc
xchg
xchg
push
clc
fstps
adc
test
adc
adc
insl
sub
int
fimuls
lds
mov
pusha
cmp
dec
rclb
lcall
fidivs
hlt
xor
mov
jge
and
stos
xchg
pop
push
int
scas
orl
pop
push
cmp
loop
and
shl
not
lock
imul
and
incb
popa
rcll
pop
mov
inc
xor
enter
fprem1
call
fs
btr
pop
adc
lcall
cmc
dec
add
mov
jge
loop
pop
jns
pushf
lods
xchg
inc
dec
data16
popf
std
das
mov
sub
jns
adc
sbb
shll
in
lcall
lret
sbb
or
iret
imul
jmp
dec
imul
mov
fcomps
lcall
in
imul
adc
mov
jge
stos
push
jl
mov
inc
sub
inc
cmp
and
pop
push
sub
andl
test
mov
adc
inc
std
pop
sub
or
push
mov
loope
adc
xchg
iret
jo
sbb
add
loopne
cmpsl
int
mov
and
push
push
ss
stc
sbb
cmp
add
mov
push
push
leave
popa
stc
scas
jle
add
sbbl
insb
icebp
stos
cld
in
jae
mov
mov
imul
add
in
push
addr16
pusha
out
sbb
mov
jge
add
test
icebp
adc
cmpsb
loopne
pop
push
stos
in
sti
sub
jecxz
cli
out
popa
and
or
mov
add
pop
adc
pop
out
mov
mov
data16
fldenv
sbb
jbe
or
inc
or
push
negl
jecxz
mov
sbb
in
xchg
push
mov
sbb
add
jns
or
push
adc
adc
push
pop
adc
mov
cli
addr16
mov
mov
push
movsl
in
push
sti
mov
push
ret
mov
dec
shr
pop
push
mov
orb
addr16
xor
fmul
mov
sbb
xchg
cmp
add
ljmp
push
in
and
mov
jmp
push
adc
shll
test
fsubr
mov
mov
push
je
in
mov
and
fmul
cli
punpckldq
mov
pushw
sarb
add
or
jp
int3
popa
cwtl
jmp
popa
out
ret
jno
sbb
mov
popf
cmc
dec
pop
add
jbe
pop
ljmp
push
in
in
loop
imul
sub
cltd
mov
jbe
orb
mov
add
rclb
aad
out
sarb
adc
sub
enter
fs
xchg
xchg
test
lcall
mov
es
mov
mov
sti
ss
daa
outsb
cmp
xchg
xchg
out
jbe
repz
test
cli
xor
push
mov
mov
mov
xor
leave
mov
mov
shrl
aad
enter
xchg
enter
int
mov
les
lds
call
sbb
clc
notb
xchg
loop
in
mov
fwait
dec
bound
adc
mov
jl
sbb
jbe
adcb
xor
add
mov
mov
add
push
sbb
push
add
jge
cld
adc
sbb
xor
inc
lcall
icebp
lcall
xchg
sti
cli
pushf
xor
lds
push
loope
push
cmpsl
jb
or
shll
push
add
add
std
popa
sti
mov
stc
and
and
and
and
push
in
push
repz
aaa
rorb
pop
lahf
cmc
push
in
pop
mov
pop
inc
cmc
addb
pop
idiv
xchg
dec
lds
pop
in
in
add
mov
or
icebp
or
lods
xchg
cltd
sbb
sbb
stos
lret
repz
dec
popf
jl
sbb
sbb
jb
add
xchg
mov
out
pop
sub
fnstcw
ret
mov
add
and
loope
js
inc
sbb
mov
xchg
ljmp
push
aad
jmp
ficompl
adc
add
add
aas
jne
dec
loopne
sahf
add
jne
bound
popa
call
jge
inc
push
fsubr
xchg
popa
jbe
adc
call
push
dec
aad
sti
add
pop
lods
in
dec
xchg
xchg
lea
imul
inc
cld
fmuls
negb
rorl
and
push
lahf
or
add
mov
and
push
insl
and
pop
sbb
call
pop
jnp
lds
mov
gs
loopne
sbb
clc
scas
fsave
dec
in
add
lcall
push
lret
push
inc
js
jle
cmp
js
xchg
and
mov
mov
mov
cmp
fndisi(8087
icebp
ltr
mov
sbb
mov
iret
movsl
dec
add
call
inc
mov
sahf
arpl
sbb
fstl
mov
jns
push
jg
and
outsl
adc
cli
dec
jle
and
mov
in
add
mov
pop
stc
sbb
mov
out
add
lahf
cmp
adc
shlb
stos
lock
fdivrs
arpl
dec
mov
mov
sub
pop
mov
loope
sub
sbb
data16
popf
mov
jmp
jecxz
sbb
call
repnz
pop
and
xlat
cmpsl
sbb
add
and
jmp
pusha
push
jle
xorps
sub
out
arpl
sti
jne
lods
and
xchg
fcmovnbe
fcomp
lcall
push
jne
popf
sub
pusha
and
out
inc
roll
sub
mov
scas
fstl
cmpsl
mov
loope,pt
daa
push
sahf
add
xor
movsb
pop
xchg
in
addr16
sar
pop
jns
fidivs
pusha
test
mov
sub
xchg
and
das
std
call
xchg
sbb
fcompl
stc
addl
in
les
sub
xchg
dec
sub
xor
sbb
imul
cmpsl
faddp
out
xor
out
inc
cmpsl
lods
pop
pushf
jp
pop
je
inc
les
mov
loopne
or
js
sbb
in
pop
idiv
cli
sbb
test
lock
std
into
cwtl
lods
add
ret
jecxz
or
testl
and
add
and
push
jno
or
sub
and
push
ret
jg
pop
mov
outsb
and
loopne
push
loope,pn
aad
pop
mulb
mov
rclb
xchg
aaa
push
push
and
and
cmpsb
ret
add
add
in
js
mov
gs
mov
lret
push
pushf
sbb
std
stc
ja
iret
xchg
add
push
adc
lock
push
icebp
adc
call
adc
insl
push
sbb
es
jae
and
push
sbb
sbb
and
mov
neg
and
mov
xchg
repz
sub
iret
cmpsl
fnstsw
bound
frstor
repz
icebp
jae
or
mov
arpl
movsb
and
xchg
pusha
or
fnsave
test
adc
adc
cmp
inc
mov
push
test
push
mov
int
fabs
mov
into
loop
jmp
pusha
sar
inc
loop
mov
mov
mov
jecxz
jns
and
popa
ficompl
pop
lods
push
mov
fld
add
jl
lcall
insb
adc
lahf
sbb
mov
and
sbb
clc
adc
clc
cld
mov
in
add
jnp
clc
jno
inc
mov
aad
and
leave
fucom
push
inc
xor
loopne
inc
cwtl
mov
sbbb
and
sbb
pop
ljmp
pop
xor
sub
mov
shrb
sbb
inc
or
sbb
inc
and
jle
in
out
mov
mull
cmc
mov
popa
out
xchg
cmp
popa
dec
lret
or
jne
shr
jns
mov
xchg
push
jp
enter
push
testb
repnz
and
push
adc
ja
mov
push
out
frstor
cmp
add
out
push
sbb
aaa
pop
hlt
int
dec
outsb
sbb
movsb
lods
lea
lcall
push
lret
xor
lcall
mov
rcrl
int
ja
sbb
imul
add
and
add
js
ja
sbb
in
mov
mov
and
push
jecxz,pn
adc
fiaddl
stos
add
xchg
out
push
hlt
pop
sub
add
mov
test
jbe
std
insb
daa
xchg
cs
or
leave
pop
push
sbb
push
orb
jl
mov
push
dec
push
adc
add
leave
repz
or
or
inc
jecxz
pop
jno
stc
inc
xchg
bnd
loop
mov
mov
data16
rclb
xor
push
sbb
pushf
add
adc
imul
add
or
inc
adc
test
inc
cltd
mov
cmp
out
push
jae
cmp
add
fmuls
pop
or
sub
into
cmp
scas
cmc
pop
mov
out
ss
jbe
pop
ljmp
adcl
add
sbb
aad
sbb
mov
incb
les
xorl
xchg
add
adc
cli
fmulp
xchg
pop
orl
jbe
ljmp
jge
push
mov
aam
mov
mov
out
mov
push
cmp
add
gs
enter
nop
adc
mov
sbb
in
iret
ljmp
loopne
pop
in
cld
pop
mov
test
inc
push
in
sbb
pop
and
ljmp
divb
or
adc
cwtl
ret
xchg
push
mov
adc
cli
rorb
ret
adc
xchg
sbb
sbb
loop
and
popf
fxam
sub
mov
jb
or
orl
add
push
jnp
out
adc
ja
sbb
jecxz
int
loope
dec
inc
fisubrs
sbb
sub
rcrl
jl
rclb
insl
enter
je
mov
pop
lods
cmpl
dec
repnz
sbb
jge
pop
mov
jp
sbb
kmovb
outsb
rcr
sbb
sahf
aas
cmc
sub
and
pop
cltd
dec
imul
arpl
mov
mov
adc
push
jle
mov
pop
ljmp
cs
cwtl
pop
loopne
sbb
lock
adc
in
adc
xchg
adc
mov
mov
jge
mov
and
lahf
rorl
mov
mov
fiaddl
mov
xchg
push
xchg
jle
aas
pop
sbb
test
pushf
pop
inc
dec
frstor
imul
mov
loop
enter
push
je
pop
into
sbb
sahf
fidivs
add
jge
adcb
test
or
in
jg
or
lret
cld
mov
mov
xlat
in
mov
roll
enter
out
lret
cmp
mov
fcmovnu
clc
jo
add
loope
jmp
stos
mov
inc
sti
test
scas
rorl
fildll
dec
addr16
ret
lret
loope
jbe
stc
and
and
mov
pop
les
mov
fistl
push
pushf
adc
and
fstp
loope
mov
sbbl
sbbb
pop
add
or
push
inc
es
sub
aas
sbbl
sub
xchg
sahf
andb
push
lahf
mov
add
adc
loope
push
pop
in
sti
sti
and
pushf
ret
and
add
std
mov
repnz
mov
add
stc
call
ss
pop
fstl
jns
fistl
pop
mov
push
mov
bsr
sti
xchg
repz
fistl
addb
ret
out
mov
pushf
sahf
jmp
ljmp
loope
fwait
adc
xchg
sbb
adcb
cmp
push
icebp
mov
sahf
add
mov
sbb
sbb
test
push
add
cwtl
icebp
fcompl
ret
pop
sub
clc
sti
jae
xor
push
adc
and
sbb
add
test
push
movsl
add
push
packsswb
in
xchg
push
aam
adc
push
cmpb
andl
add
ffree
subb
and
pop
scas
mov
jecxz
jns
sbb
decl
shrb
leave
push
pusha
or
out
repz
fldt
dec
cmp
add
aam
xchg
iret
adc
cwtl
cli
jae
add
jno
stos
xor
std
or
sbbb
sbbl
and
or
inc
mov
jnp
fistps
scas
loop
stos
sbb
imul
repnz
adc
pushf
xchg
mov
paddusw
jns
mov
push
hlt
andl
fimull
sub
popf
add
nop
std
nop
jnp
fsts
or
gs
jae
adc
mov
add
sbb
or
adc
fdivs
les
fimuls
pop
fcompl
into
inc
adc
add
inc
push
xlat
es
mov
outsl
inc
cmp
add
xchg
cmp
cmp
fistpl
adc
add
fcomps
lcall
sbb
adc
push
cltd
nop
and
cwtl
mov
adc
inc
cli
in
xchg
sbb
mov
jnp
cmc
jecxz
mov
mov
orb
mov
rorl
notb
in
adc
and
dec
dec
xor
jne
out
popf
sbb
test
adc
repz
adc
mov
mov
popf
add
sbb
and
xor
sarl
sub
pop
lret
arpl
cwtl
aad
jo
imul
loope
hlt
mov
jecxz
xchg
xchg
jle
inc
rorb
push
daa
jecxz
lcall
push
mov
xor
xchg
adc
or
sbb
outsl
pop
pop
arpl
cmpsb
idiv
filds
dec
pop
aad
or
or
and
int3
call
mov
jmp
lea
dec
sbb
cmp
push
cmp
es
mov
loopne
pop
fnsave
imul
popf
neg
push
insl
pop
jl
es
lahf
mov
sbb
inc
cmp
ja
xor
int
cwtl
mov
or
sbb
das
imul
jno
jmp
or
mov
mov
jns
ret
andb
adc
call
lcall
jp
pop
jb
cmpsb
xor
xchg
je
pop
ljmp
dec
fnstsw
stos
pop
in
fwait
jecxz
fwait
pop
sbb
and
sbb
mov
sti
inc
popf
xchg
sbb
push
and
inc
or
adc
sbb
sbb
sbb
sub
jg
mov
cli
aad
int
outsl
shlb
sti
nop
pop
repnz
daa
xor
add
pushf
cmpsb
mov
out
dec
sahf
stc
ds
lds
icebp
and
insb
lcall
ss
dec
cli
cmpsl
dec
hlt
sbb
sbb
cmpsb
aam
cmp
xchg
and
dec
test
popa
and
popa
sbb
sbb
pop
ja
lahf
jns
jg
xorl
sbb
sbbl
push
sub
add
fucom
xchg
adc
cmp
cmp
xor
notb
pop
inc
outsb
jae
popf
mov
stos
fs
ficoms
fadds
xchg
inc
add
test
xchg
adc
push
xor
jmp
out
cmp
inc
gs
sbb
out
pop
js
xchg
repz
add
clc
fidivl
xor
into
jo
call
out
adcl
mov
cs
clc
notl
in
fmuls
dec
inc
pop
sbb
insl
cmpsl
addl
jbe
mov
movsl
pop
js
adc
dec
and
sahf
loopne
mov
cmp
or
adc
sbb
and
decl
mov
shlb
jl
mul
jle
fdivrl
loope
es
fwait
andb
add
test
mov
and
pop
repnz
pop
fsubs
add
and
xchg
jle
test
xchg
xchg
jmp
or
pop
push
in
mov
int3
test
test
and
and
ret
jne
jge
inc
ret
sbb
and
shll
jge
push
mov
add
cmp
int
jmp
shl
xor
jle
inc
sbbb
dec
jle
push
mov
pop
sbb
test
or
js
sbb
or
dec
or
dec
jge
mov
cwtl
int
stc
popl
sbb
sub
daa
mov
inc
mov
jbe
out
dec
push
dec
xor
sub
xchg
pop
pop
test
sti
and
dec
or
xorb
hlt
xor
js
push
outsl
ret
outsb
fstpt
xchg
inc
cltd
out
lret
mov
enter
mov
push
jns
mov
pop
loopne
add
xchg
subl
repnz
pop
and
imul
pop
and
inc
loop
mov
jecxz
stc
pushf
jnp
icebp
mov
jnp
out
pop
add
pop
push
stos
pusha
sbb
cmpsb
pop
sub
mov
negb
addr16
mov
pop
jbe
push
lods
jl
push
add
cli
pop
nop
cmp
pop
jg
sbb
outsb
fcmovu
xchg
fcoms
loope
in
inc
sbb
sbb
ja
pop
mov
add
add
cld
cmp
lea
fisubrl
les
insl
mov
andl
lcall
stos
sahf
cmp
repnz
mov
in
sarb
and
ljmp
int
pop
std
fldt
jno
pop
scas
sarb
scas
inc
clc
mov
test
call
call
popa
sub
push
mov
or
fldl
pop
sbb
cmpl
or
sti
ffreep
lods
push
xor
ljmp
inc
sub
ret
mov
push
leave
and
cwtl
inc
hlt
dec
sbb
push
push
pop
out
cltd
dec
mulb
std
mov
push
mov
ja
mov
out
clc
mov
jecxz
cli
shl
sar
sub
test
jmp
jne
xchg
jo
mov
je
fidivrl
mov
inc
jns
jb
notl
sti
fiadds
and
xchg
rolb
add
ja
fsubs
push
fidivrs
insb
sbb
pop
addr16
inc
testb
imul
mov
or
xchg
xchg
add
fadds
ljmp
cwtl
push
js
out
pop
test
sbb
enter
daa
js
cli
or
nop
pop
sbb
mov
lret
in
mov
lcall
jns
jns
sbb
add
adc
sarb
jle
sbb
mov
lahf
or
and
subl
fsub
pop
clc
xor
pop
test
xchg
mov
pop
jbe
mov
daa
std
popa
and
cli
mov
xchg
xchg
cmp
cld
loopne
fwait
adcl
mov
push
pop
arpl
out
pop
fcmove
inc
push
sbb
xor
in
test
orl
mov
out
sarb
repz
pop
out
pop
add
jecxz
daa
add
test
in
nop
jne
popf
sahf
mov
sub
mov
mov
and
mov
lcall
fidivrs
arpl
ljmp
jb
shrb
mov
filds
xor
jmp
mov
orb
push
cmp
nop
loop
sub
roll
sbb
mov
or
push
add
and
push
stc
aam
xlat
sub
cltd
jne
sbb
or
enter
cmp
and
mull
andl
arpl
loop
jle
dec
mov
mov
das
jo
testl
sahf
sbb
mov
and
sbb
outsb
and
pop
mov
aam
enter
loope
adc
mov
adcl
add
faddl
mov
aad
and
add
and
cmc
and
sbb
lahf
lret
pop
lcall
popf
imul
jge
sub
sbb
sub
lock
lahf
add
add
std
sar
leave
dec
jns
mov
mov
movsb
outsb
repz
inc
cli
push
jmp
je
jmp
jnp
or
xor
movsl
dec
lds
cmp
shll
test
in
adc
xchg
arpl
inc
push
sbb
shl
popa
sub
pop
pop
mov
mov
leave
mov
mov
jmp
cmpsl
jg
inc
cmp
push
push
xor
mov
loop
mov
inc
mulb
jbe
ljmp
jno
popa
dec
clc
jmp
xchg
in
xchg
jmp
or
jnp
loopne
sub
and
shrb
test
popf
push
out
mov
adc
stc
out
sbb
lcall
aad
fmuls
icebp
rorl
iret
cmp
push
jmp
mov
aad
and
add
and
in
out
xchg
jmp
cmc
les
scas
std
es
int3
xchg
jnp
mov
mov
cmc
inc
popf
insb
cmpsl
jnp
insl
sti
mov
mov
lock
out
fcoml
loope
pop
xor
pop
xchg
jns
sbb
cs
and
dec
shll
dec
cltd
cld
ret
cmp
add
mov
loope
sbb
ljmp
push
add
or
inc
add
mov
or
or
dec
xchg
es
in
jg
orl
int3
mov
and
lahf
adc
sbb
ss
notl
rcrl
popa
sub
mov
adc
shl
and
inc
sbb
adc
ja
jge
shlb
mov
scas
xchg
addr16
ss
xchg
mov
lahf
dec
cwtl
insl
imull
ss
sahf
adcl
xchg
popa
sbb
xchg
je
ljmp
cmp
sub
nop
cmpsl
aam
lcall
sahf
mov
mov
int3
pop
popf
inc
pop
lds
fcompl
mov
add
add
fnstsw
lret
enter
sub
mov
sahf
lret
adc
push
lret
adc
sbb
mov
fcompl
cwtl
loope
cltd
cmp
sahf
push
mov
adc
add
adc
movsl
xor
inc
mov
adc
into
repz
incb
arpl
pop
pop
inc
je
sub
add
and
sbb
lcall
cli
fdivrs
sub
lds
call
mov
push
insl
mov
or
jle
mov
mov
ljmp
loope
imul
xchg
imul
cmp
clc
cmpsb
jb
popf
push
loopne
cmpsl
lea
fmuls
shl
xchg
push
jne
xchg
clc
xchg
cmp
and
mov
dec
imul
popa
inc
subb
sbb
or
and
std
orl
add
fsubrs
insb
ljmp
add
and
shll
mov
dec
fdivrl
or
jbe
roll
cltd
adc
jns
addb
scas
xor
push
cltd
push
cmp
xchg
jnp
mov
loope
daa
add
jg
add
stos
leave
lcall
sbb
pop
cmp
jb
adc
fwait
push
roll
and
cmp
adc
loop
or
cld
sub
lods
add
cmp
das
int
jb
sub
pop
aad
jmp
test
sbb
outsl
xchg
add
jo
adc
or
pop
lods
mov
scas
std
push
rclb
adc
shr
adc
testl
cwtl
push
es
sbb
or
loope
cwtl
es
mov
repz
ja
xor
sbb
mov
imul
mov
push
add
lds
push
mov
jecxz
push
movsb
xchg
xchg
in
inc
push
leave
jmp
dec
sbb
mov
jmp
and
mov
lock
pusha
aas
inc
in
dec
mov
pop
andl
js
push
mov
test
adc
imul
ljmp
and
shr
jo
ret
push
mov
mov
sub
fsubrl
mov
loop
mov
imul
int
add
sub
jb
rclb
dec
hlt
clc
and
push
imul
jmp
pusha
cmp
mull
sub
mov
aad
pop
rcrb
mov
xor
ret
push
jne
mov
xor
sub
cmpsb
arpl
inc
ds
repz
rclb
jge
push
jmp
push
ficomps
mov
imul
shll
cmc
scas
xorl
dec
adc
xor
bound
out
lret
pop
ret
or
loopne
jbe
repz
sbb
movsl
adc
pop
dec
push
dec
aam
and
in
sub
jns
in
je
add
sti
jnp
movsl
pop
sub
test
out
insl
inc
iret
add
std
dec
hlt
mov
imul
cmc
leave
jbe
and
pop
or
xchg
roll
push
jge
cli
pop
mov
movsb
jnp
idiv
clc
pop
sbbl
cmp
cmc
inc
popa
outsl
ds
jle
fiaddl
out
ja
movsb
xor
inc
in
test
stos
andl
lds
cmpsl
cwtl
arpl
aaa
pop
and
clc
sbb
mov
fildll
sahf
sti
js
push
jbe
aas
mov
cli
and
sahf
ficomps
dec
sahf
push
jp
pushf
pop
or
pop
gs
mov
jnp
es
loop
loope
dec
inc
clc
std
test
xlat
inc
cmpb
push
loop
mov
call
movsb
mov
testl
sub
mov
out
pop
mov
je
mov
mov
in
mov
rcl
sbb
sbb
movsl
push
bnd
sbb
adc
sbb
out
imul
ffree
std
sarb
inc
push
loope
inc
fmul
divl
jne
int3
stc
and
std
and
in
push
cmc
sbb
dec
stos
mov
popf
adc
imul
mov
dec
xor
lock
in
outsb
pop
pop
fidivrs
cli
xorb
jp
fidivl
fwait
test
out
sub
push
jmp
or
stos
mov
ficoms
or
cli
pop
in
mov
sbb
in
jg
cmp
mov
mov
sbb
jns
or
movsb
das
dec
or
add
lcall
xchg
add
imul
jp
add
add
and
mov
jge
pop
or
sar
mov
and
fsts
repz
aam
pop
push
and
aad
mov
adc
sub
insb
jg
idiv
das
fucom
mov
push
repz
imul
sbb
fildl
dec
sarl
shrb
mov
fcomps
jp
outsb
shlb
mov
mov
add
inc
in
mov
lods
sahf
xchg
pop
je
inc
pop
mov
gs
sub
or
ficompl
pop
pushf
push
jmp
sub
xchg
pop
addb
ljmp
xchg
and
sbbb
outsb
out
in
add
incb
add
lock
arpl
call
fucom
xchg
sbb
mov
add
outsb
mov
or
sbb
push
xor
push
cwtl
lods
mov
aad
add
mov
into
outsb
or
dec
lods
dec
cli
push
pop
and
fs
std
cmpsl
in
xabort
and
cltd
cltd
xchg
int
out
mov
gs
inc
mov
pop
jmp
pop
push
sbb
xor
cmc
arpl
inc
and
inc
or
pushf
mov
jbe
sub
or
adc
aam
add
rol
mov
fsubrs
rcl
xchg
sub
test
dec
sbb
rorl
lds
pusha
and
std
ljmp
and
je
imul
pop
jg
adc
and
into
shr
mov
xchg
pop
bound
incb
push
and
repz
sbb
outsb
and
ja
or
lahf
xchg
sbb
cmp
adc
jecxz
adc
push
clc
adc
lods
push
popf
cli
notl
std
jns
outsb
in
mov
call
jl
ret
addr16
inc
loopne
pop
xorl
out
jp
mov
push
adc
cs
mov
xor
fildll
jle
popl
mov
std
stos
nop
std
sbbb
enter
fldt
cmp
xchg
or
mov
xchg
push
hlt
jno
jp
xchg
push
pusha
inc
mov
pop
mov
out
neg
xor
pop
cmpsl
or
ficompl
ljmp
cli
in
or
cld
jmp
test
mov
int
fisttpll
out
frstor
mov
and
mov
sbb
in
fcmovbe
cmp
cs
cli
jge
cmp
loope
sub
sbb
push
loopne
mov
cmp
in
jno
pop
xorb
sbb
scas
add
mov
test
add
repz
notl
movsb
mov
cltd
shrl
stos
lods
adc
int
shl
pop
ret
stos
push
jmp
push
ret
in
mov
push
adc
repz
gs
nop
clc
adc
sbb
push
out
sub
hlt
ss
sbb
mov
pop
js
in
sbb
sti
punpcklbw
adc
cld
adc
xchg
cmp
lods
xor
aas
popa
or
sub
jecxz
es
inc
cmp
sti
fcompl
xor
inc
mov
sub
call
pop
insl
std
jae
or
mov
mov
rcrl
mov
sbb
adc
inc
and
adc
mov
call
aam
sahf
push
into
push
push
push
movsl
cwtl
mov
cmpsb
jno
inc
leave
pop
pop
mov
add
iret
mov
and
fsubs
in
out
pop
jle
movl
sub
inc
and
fstpl
cmpsl
lahf
pop
fldl
sub
arpl
stos
fucom
scas
add
cwtl
add
jmp
dec
and
adc
fwait
sahf
mov
mov
pop
and
rcrb
test
jle
ljmp
xor
les
jle
arpl
or
or
adc
mov
push
rcll
pop
push
add
xchg
add
xlat
sbb
pop
fisubl
sub
mov
push
add
pusha
sbb
push
lcall
lahf
lret
ficoms
or
mov
pop
add
pop
ljmp
push
sbb
or
pop
jns
pop
mov
pop
jmp
cmpsl
mov
pop
add
test
dec
scas
sub
xlat
pop
fnstsw
sahf
scas
in
popa
sub
adc
inc
lahf
sub
inc
popf
mov
push
jnp
mov
sbbl
je
jns
fisttpl
jmp
test
sub
outsl
and
mov
lahf
cli
inc
or
mov
xor
daa
out
sbb
test
push
int
subb
adc
lods
ret
xchg
mov
mov
fistps
mov
mov
or
repnz
sahf
das
mov
test
push
mov
fsubs
lahf
mov
insb
sbb
cld
in
pop
loopne
xchg
lcall
sub
pop
pop
sbb
push
add
fnstcw
mov
jg
inc
add
or
adc
ret
add
inc
or
cltd
push
fldl2e
adc
and
pop
jmp
jg
push
popf
push
fs
sbb
adc
sbb
sar
fprem
fdivrs
xor
push
sub
pop
ljmp
xor
pusha
arpl
pop
orl
add
out
mov
cmp
sbb
push
fistpll
sahf
sbb
sahf
pop
outsl
hlt
adc
and
adc
push
cli
in
sbb
pop
xchg
loope
jge
jmp
call
jns
pushf
adc
or
addb
or
and
sbb
test
or
repz
xchg
cmc
xchg
xor
mov
inc
addr16
pop
jae
fldl
nopl
enter
cwtl
mov
or
and
popa
inc
popf
cwtl
int3
add
mov
jge
icebp
sub
xor
dec
xor
push
adc
and
sahf
add
aam
and
mov
test
xchg
sub
inc
jo
mov
scas
jg
cs
roll
xchg
jecxz
pushf
imul
cmp
mov
mov
in
nop
cmp
jecxz
aas
push
mov
enter
adc
adc
jmp
pop
sub
jge
dec
dec
mov
icebp
mov
fsubrp
mov
mov
push
iret
pop
imul
xor
inc
ljmp
add
push
aaa
add
or
jnp
pop
out
addr16
add
pop
cmc
mov
dec
adc
in
sbb
clc
inc
push
add
jecxz
xchg
stos
shrb
dec
popf
call
out
int
sub
mov
push
popf
push
pusha
cmp
inc
mov
lods
or
xchg
sbb
push
sub
dec
or
pop
push
sbb
arpl
mov
push
push
sbb
add
or
xchg
cli
cmc
fwait
pop
sub
sbb
add
jp
call
dec
and
adc
ret
sti
xchg
pop
or
repz
cmp
push
test
fs
add
out
jb
scas
adcl
cli
addr16
iret
or
mov
and
cli
and
ret
arpl
xor
shll
data16
cli
pop
and
sti
add
mov
xchg
mov
iret
push
mov
jge
cmp
jnp
int3
popf
ljmp
adc
hlt
aas
lret
jge
jl
sbbb
out
in
xchg
pop
jecxz
std
cmp
test
xchg
ljmp
shlb
mov
jl
jle
test
imul
and
popf
adc
xchg
jp
push
xor
add
adc
rol
sbb
xor
jbe
add
int
push
xor
shlb
sbb
sbb
cwtl
clc
adc
mov
in
jmp
fmull
pop
out
lods
jmp
pop
call
lods
add
ret
mov
shrb
pusha
inc
mov
pop
adc
jmp
dec
mov
add
sar
pop
jecxz
addr16
into
dec
add
inc
mov
pop
mov
sbb
xchg
push
mov
dec
mov
pop
out
rorb
mov
mov
jmp
pop
or
cwtl
push
or
cs
imul
repz
jne
fsub
lods
frstor
fcmove
in
xlat
bound
out
ror
lea
inc
outsb
insb
popf
lea
sbb
fwait
shlb
je
adc
sbb
out
in
ffree
das
jmp
push
fstpl
sbbl
sub
call
add
sub
push
add
out
lds
add
xorl
push
repnz
inc
and
inc
data16
scas
xor
add
nopl
push
int3
push
sbb
sahf
fildl
sub
cmp
jge
loope
xchg
and
mov
out
dec
add
inc
lods
cwtl
mov
out
dec
sub
sub
add
add
lahf
xorl
adc
sbb
repz
jo
je
push
ficomps
mov
fistpl
adc
add
insb
pop
cli
push
sarb
dec
icebp
bound
out
les
pop
pop
ficoml
shl
in
jge
aas
and
mov
push
sbbl
sbb
repz
subl
cwtl
ss
xchg
pop
data16
rolb
clc
stos
and
xlat
inc
pop
rcll
push
cld
lods
gs
or
fiadds
out
aam
jg
out
cmp
mov
mov
jge
es
or
das
loopne
jo
sbb
cltd
push
arpl
sbb
fstps
aad
pop
xlat
add
fcompl
fwait
mov
call
mov
jnp
cmpsl
arpl
cmc
push
loopne
jae
or
jo
sbb
push
mov
stos
xchg
repnz
lock
jp
push
jle
push
mov
orb
pop
and
bound
pushf
mov
cmp
arpl
xlat
pop
int
outsb
das
bswap
cmp
shlb
cwtl
cmp
push
sti
movsl
ret
popa
cmp
or
and
push
or
pop
ljmp
adc
adc
fdivrs
ss
and
es
pop
sub
or
mov
sbb
test
cld
out
leave
addl
push
mov
adc
mov
inc
or
out
mov
xchg
pop
stc
xlat
mov
pop
icebp
bound
mov
ret
and
out
push
je
inc
in
sti
add
pop
dec
aad
aam
fbld
fbld
mov
in
inc
in
negl
sbbl
pop
pop
das
push
hlt
push
push
pop
addl
sub
mov
mov
es
mov
cmpsl
or
push
int3
out
pop
sbb
mov
out
hlt
push
or
dec
sub
mov
cli
lcall
xchg
es
push
out
sbb
cmpsb
push
adc
ret
adc
fsubrl
xchg
stos
mov
or
xchg
ficoml
sbb
dec
xchg
imul
decl
lea
mov
or
int3
mov
jmp
leave
push
outsb
xchg
cmp
fcompl
xchg
ror
out
inc
cs
pushf
das
shll
mov
dec
add
push
in
add
testb
loope
pop
sbb
push
mov
ret
loopne
shrl
pop
inc
lds
test
adc
sahf
sti
dec
xchg
dec
push
movsl
xlat
clc
mov
pop
inc
cmp
adc
pop
fs
mov
push
mov
in
mov
mov
mov
mov
fcmovnbe
adc
and
cld
mov
mov
fwait
push
cltd
lret
sbb
pop
in
mov
popa
loope
adc
inc
jge
scas
cmp
xchg
cld
mov
xchg
xchg
inc
fcoml
cmove
addl
lods
and
jno
in
pop
cltd
insb
aas
add
test
jmp
add
xchg
cltd
mov
and
cmp
jge
ret
addl
std
cmc
addl
ret
xchg
rcrb
xchg
das
pop
cmpsl
sub
jge
add
andb
push
mov
int3
jmp
test
add
push
js
add
add
ret
mov
and
pushf
ror
pop
lds
xor
xchg
mov
in
sub
sub
jnp
les
cmp
xchg
mov
mov
pop
xchg
ljmp
jge
mov
int
inc
aad
std
cmp
sbb
call
sbb
and
jmp
subl
xchg
fs
adc
cmp
loope
cmpsb
insb
repz
enter
cmpsb
in
sbbb
and
inc
mov
jno
mov
cmp
pop
push
xor
sub
test
push
out
xlat
cmc
mov
or
lcall
arpl
or
pop
lods
or
push
push
rcrw
push
sbb
sub
xchg
xor
cmp
dec
inc
mov
lret
pop
in
sar
push
add
lcall
mov
rcrl
inc
xor
pop
xor
aaa
mov
mov
ja
push
cwtl
jne
mov
push
jbe
leave
repz
sbb
adc
mov
xchg
or
inc
jo
pop
popa
ret
mov
mov
je
push
push
insl
lcall
enter
gs
mov
sbb
xor
push
push
js
pop
cmpsl
es
add
mov
add
add
cmp
fisttpl
js
insb
daa
xor
testl
loopne
cltd
xlat
in
adc
cmp
inc
inc
push
data16
mov
add
in
xor
pop
push
mov
sbbl
out
adc
inc
fstps
repnz
js
xchg
xchg
rcrb
fdivs
int
nop
fildl
xchg
and
adc
gs
int3
sbb
jp
or
mov
inc
and
mov
loope
add
movsb
or
aad
mov
push
sbb
call
in
rcrb
jns
pushf
sar
arpl
pusha
mov
cmpsb
sbb
cmp
out
lods
push
and
sbb
and
pop
or
fisttpll
in
pop
sbb
imul
imul
lea
adc
fmull
cmp
cmpsl
out
in
fsubs
int3
orl
sbb
cmc
push
pusha
insl
add
pop
or
and
add
push
sbb
outsl
dec
insb
push
pop
das
insl
adc
inc
cmp
out
ds
jl
push
lcall
test
lret
popf
sub
test
in
sub
dec
gs
push
out
pop
adcb
lret
movsb
insl
xor
sbb
push
pop
cmpsb
clc
je
subl
dec
or
jnp
xor
daa
xchg
ljmp
aaa
insb
push
outsb
push
out
enter
call
cmpl
add
in
fcmovne
add
andl
js
pusha
stc
jno
push
push
adc
repz
pushf
adc
sahf
xchg
pop
mov
sbb
sbb
pop
test
shll
and
repz
sbb
cmp
cmpsl
jecxz
jle
sub
shr
or
icebp
dec
in
mov
clc
cmp
push
lock
pushf
jge
add
or
or
push
and
push
add
popa
loope
jnp
mov
sbb
or
bound
fistpl
jecxz
push
test
dec
mov
mov
loope
cmp
int
sti
pop
test
scas
pop
pop
aad
out
rclb
rclb
cmc
sbb
not
jb
jbe
outsb
jge
dec
adc
push
adc
cmc
inc
inc
in
arpl
mov
jae
cld
jle
fs
xchg
push
jge
cli
push
test
pop
mov
dec
adc
add
pop
into
lcall
sbb
test
adc
out
add
adc
cli
fbld
inc
mov
std
lds
ret
mov
js
shrb
push
sbb
test
adc
sahf
fdivrp
xchg
xchg
dec
push
hlt
loope
ja
loop
in
fsubl
add
lea
and
xlat
nop
mov
push
ja
dec
push
inc
add
mov
gs
add
or
push
shll
xchg
sbb
push
sub
or
rorb
or
scas
adcw
jg
sbb
pushf
iret
xchg
cmpsl
movsl
mov
jge
lcall
popa
pop
out
loope
pop
push
adc
push
jg
mov
jp
sti
lcall
out
dec
loope
ret
in
adc
jno
pushl
add
cld
aas
and
aas
add
sbb
arpl
sub
xor
pop
add
push
inc
or
stc
sub
je
or
loop
mov
cmp
mov
rcrb
nop
jo
xchg
clc
and
mov
adc
popa
test
nop
int
loope
out
jbe
in
adc
pop
lock
andl
fwait
adc
dec
test
sbb
loop
pop
ror
push
add
insb
sub
hlt
stos
rep
pop
mov
add
fisttpll
aad
push
int
or
fisttpll
outsb
pushf
push
inc
xchg
mov
pop
and
jle
arpl
testl
dec
xchg
lret
lahf
mov
inc
add
xor
push
dec
fists
aam
xor
cmp
push
cld
cmp
fistpll
out
cmpsl
mov
sub
clc
aas
and
addb
pusha
mov
dec
sbb
ficompl
sbb
popl
aad
loope
sbb
xchg
addb
push
popf
insl
pusha
data16
or
or
dec
js
pop
xor
or
stc
lods
or
cmp
xchg
pop
jmp
lahf
pop
and
adc
ret
fnstsw
sub
jle
orb
movsb
out
inc
int3
mov
sub
and
out
es
imul
imul
jp
or
adc
fwait
sub
lea
add
stos
in
idiv
mov
roll
mov
adc
cmp
notb
xchg
sub
sarb
push
jp
sbb
mov
push
push
cmp
jl
jae
push
pushf
subb
push
pop
jecxz
lret
push
or
decl
lahf
push
or
jo
es
test
jnp
loope
scas
push
cmp
dec
and
jbe
rcl
std
pop
add
dec
mov
dec
lods
test
repz
push
test
push
mov
cmp
adc
and
test
push
mov
cwtl
push
sub
sub
sbb
sub
sbb
lcall
push
cmp
xor
mov
cmp
xchg
sbb
cmc
push
in
xchg
out
out
fsubr
push
std
das
lret
ljmp
jp
js
jns
jecxz
push
sbbb
popa
inc
sub
mov
xor
jle
lcall
pop
pop
jnp
xor
dec
ficoml
rclb
es
fstpl
pusha
add
adc
dec
sbb
in
fisttpll
in
dec
xor
sbb
mov
loop
inc
loope
popf
inc
mov
andb
std
push
push
add
fs
pop
inc
lock
movsl
mov
pop
jp
jmp
mov
sbb
sbb
and
icebp
mov
je
rcrl
cmpsl
push
ret
mov
xchg
lods
lea
lahf
sbbl
and
mov
inc
fs
xchg
cltd
push
sbb
mov
rcrb
out
fnstcw
pop
jle
das
jle
push
pop
and
rcrb
sub
pop
or
jecxz
ljmp
xorl
rol
xchg
rclb
add
adc
sub
or
and
lret
cmp
mov
jle
or
pushf
addb
sbb
clc
mov
mov
lock
adc
mov
push
cwtl
and
pop
shlb
jecxz
cmp
cmp
mov
in
or
xchg
loope
add
push
call
mov
and
icebp
aam
sbb
aam
lds
test
in
jmp
sbb
test
imul
pop
xchg
loope
jns
inc
mov
push
push
leave
sbb
rcll
mov
rorb
popa
jbe
call
sbb
push
mov
lmsw
and
test
pop
std
sbb
inc
xchg
mov
mov
push
inc
insl
add
and
mov
int3
sbb
push
mov
inc
pop
repz
loope
cmpsb
push
arpl
lds
mov
or
cmpsl
mov
jp
test
pop
add
out
or
jo
imulb
mov
xchg
sub
cmpsb
xchg
dec
and
enter
xor
adc
fimuls
pop
outsb
sbb
adcl
ret
sbb
movsb
cmp
sbbb
mov
lcall
cmc
stos
lcall
mov
insl
dec
cltd
fucomip
loope
je
ljmp
out
in
sub
sbbl
cmp
adc
mov
sub
mov
sbb
popf
jge
cwtl
movsl
clc
xchg
jecxz
pop
adc
xor
enter
xchg
pop
pop
and
fwait
sub
scas
pop
cmpsb
sbb
cmp
add
and
push
mov
or
push
mov
xor
pop
outsl
and
cmpsl
outsl
and
adc
adc
mov
ds
je
lods
fstpt
dec
dec
fdivrs
push
xlat
sbb
mov
aaa
leave
pop
sub
stc
or
jg
leave
cmp
add
push
test
insb
imul
andl
dec
fadd
cmp
add
sarl
rcll
xchg
dec
adc
fcmovnbe
lcall
pop
sub
std
leave
xchg
adc
aam
out
ljmp
dec
xchg
into
shl
pop
xchg
out
lds
and
jp
jns
jmp
ret
jbe
fmull
sbb
and
inc
dec
add
test
idivl
cmpsl
cli
and
push
jmp
mov
sbb
push
sub
push
in
xor
fidivrs
push
clc
sbb
jno
sahf
jecxz
inc
xchg
push
add
int3
out
in
jne
inc
mov
ss
sub
mov
lret
adc
mov
js
ss
add
jns
push
push
sti
loop
andl
jnp
hlt
sub
add
sahf
loopne
or
inc
lret
and
test
cwtl
sbb
call
or
popa
pop
sbb
test
sbb
imul
outsl
mov
pop
pop
push
xor
jns
mov
cld
sti
push
mov
orl
scas
cmpsl
xchg
mov
in
mov
sbb
fs
push
mov
out
cmp
movsl
xchg
jecxz
sbb
mov
and
adc
arpl
and
add
pop
mul
cmp
mov
jecxz
sarl
xchg
int3
push
push
je
push
std
loop
mov
and
jecxz
mov
cwtl
push
inc
mov
cmp
pop
mov
out
setb
sub
push
stos
lds
sub
and
es
out
jp
jmp
aaa
jecxz
andb
lea
aam
std
or
test
pop
pop
mov
mov
mov
shlb
adc
fs
call
bswap
in
lds
lods
sbb
inc
andb
fucomi
adc
sahf
stc
test
jnp
mov
ljmp
mov
notl
mov
insl
push
and
into
mov
repnz
sti
xor
data16
dec
or
and
js
es
and
roll
mov
inc
adc
pushf
mov
sub
dec
int
and
sub
cwtl
or
loopne
loopne
mov
aam
inc
sbb
insb
and
jno
test
jno
or
scas
jecxz
or
or
adc
cmp
testl
arpl
fsubs
mov
leave
into
mov
mov
imul
add
pop
ret
fndisi(8087
lret
and
sti
mov
mov
xchg
in
mov
and
aam
mov
addb
mov
mov
add
out
add
addl
or
adc
jno
imul
stc
repz
and
lret
pop
sbbb
xchg
cmp
pop
or
add
out
add
xchg
ret
pusha
mov
loop
sbb
sub
xlat
xchg
out
inc
cmc
pop
arpl
es
add
dec
push
mov
and
stos
movsb
jns
cli
pop
addr16
sar
and
sbb
mov
ljmp
ret
call
cmp
sbb
clc
out
mov
inc
fstps
pop
ds
movsb
mov
fxch
mov
sar
test
call
and
inc
fsubrp
sbb
jp
cmpsl
add
add
hlt
int
add
dec
sbb
int
mov
int3
jno
out
fs
xchg
pop
mov
jecxz
and
jmp
pop
push
mov
add
push
ds
into
cmp
adc
out
add
push
data16
in
lods
scas
and
push
mulb
adc
mov
movsb
push
shl
jmp
mov
sbb
int
sub
and
or
xchg
xlat
xchg
and
xchg
stc
inc
xor
mov
ret
xor
stos
sahf
ficoms
pushf
dec
jmp
and
dec
ljmp
mov
and
push
sub
mov
insb
addl
cli
aad
jno
out
out
mov
sub
cli
inc
clc
pop
mul
push
add
and
clc
sbb
adc
js
popa
inc
mov
jnp
scas
popa
rcll
mov
jns
cmp
xchg
pop
add
or
std
and
test
mov
adc
pop
pop
sar
out
add
mov
js
repz
sbb
jmp
mov
jns
rcll
add
adc
addr16
daa
jmp
icebp
popa
fstpt
sar
jl
out
jns
out
push
divb
popa
jns
and
mov
insb
out
in
and
movsl
sbb
mov
cli
adc
mov
or
rorb
pushf
in
or
add
inc
in
lea
out
mov
js
testb
leave
sub
and
loopne
cmp
jl
xchg
or
or
daa
shlb
mov
or
jl
fbld
inc
or
push
cmc
push
mov
and
lods
push
in
xchg
push
incb
sbb
mov
mov
adc
add
movsl
sub
adc
lea
mov
test
js
xchg
mov
lea
lcall
and
test
sbb
cmp
inc
mov
push
gs
das
rorb
ds
jge
push
js
pop
test
push
je
dec
filds
ja
sbb
dec
add
mov
mov
push
and
cmpsb
in
mulb
mov
sbb
pop
and
mov
jl
aas
push
fmull
lods
js
and
push
adc
mov
mov
fnstenv
aam
xor
sbb
xchg
leave
or
sub
clc
push
mov
push
mov
mov
nop
sbb
jns
cli
jnp
cmpb
add
push
mov
daa
mov
pop
or
bound
fldl
and
xorb
xchg
jbe
sbb
out
add
filds
add
leave
pop
xchg
or
mov
jmp
jne
sbb
rol
pop
in
js
lret
push
fildll
sbb
clc
push
or
push
mov
pushf
pop
insl
test
mov
mov
test
lods
inc
mov
jle
insb
ret
es
add
push
clc
add
push
rorl
jle
adcb
filds
popf
and
push
les
or
aad
or
pop
out
sbb
mov
xchg
or
out
decl
or
mov
neg
enter
or
push
test
out
lock
sub
lcall
daa
mov
gs
aaa
and
sti
std
adc
mov
inc
lret
sub
dec
xchg
add
imul
mov
pop
jbe
mov
dec
mov
scas
jle
sbb
adc
outsl
mov
pop
adc
lock
cmp
pop
jne
stc
and
and
dec
mov
aad
and
add
sbb
into
jle
mov
mov
lods
sbb
xchg
mov
lret
loopne
cmc
dec
push
adc
add
xchg
push
dec
mov
dec
mov
push
or
add
lock
cmp
daa
in
andb
or
and
jmp
add
pop
stos
inc
pop
icebp
lds
and
cli
mov
fbld
mov
inc
sbb
add
pop
add
loopne
insl
lds
inc
inc
stos
or
fildl
sbb
nop
adc
repz
leave
mov
jne
pop
sbb
add
lea
pushf
push
xor
jge
pop
jns
cltd
sahf
pop
cmpsb
sbb
scas
jmp
push
adc
sbb
adc
dec
push
adc
mov
mov
xor
fdivrs
push
push
repz
sbb
push
out
pop
jmp
cmpsl
jnp
movsb
aad
data16
jae
mov
xchg
mov
cmpsl
test
stc
hlt
clc
pop
sahf
testb
sahf
sbb
push
mov
mov
inc
or
sahf
or
pop
lahf
cmpsb
ja
movsl
pop
and
fwait
and
dec
andl
fwait
sbb
jp
pop
mov
xchg
jle
adc
xor
scas
pop
jle
mov
push
aad
iret
xor
into
lods
push
push
fs
lods
pop
pop
pop
lcall
push
rclb
xchg
add
push
rcrl
and
lock
pop
loop
adc
xchg
adc
loopne
in
shl
imul
mov
and
ret
inc
mov
loope
daa
jo
mov
mov
imul
cwtl
ror
pop
jns
cld
fiaddl
iret
sbb
aam
sbb
or
and
and
popf
fnstsw
je
inc
jg
xchg
mov
std
add
or
inc
cmp
adc
jle
cmp
push
popf
sub
lods
lcall
pop
xor
cmpsb
shlb
test
jns
loop
and
mov
push
sbb
repz
fnstenv
and
xor
or
lea
cmp
mov
jecxz
insl
adc
cmp
add
sbb
push
push
cmp
int3
test
sbb
inc
scas
cld
movsb
cwtl
cmp
lahf
es
lcall
adc
or
movsb
add
sub
scas
add
xor
ficoms
jbe
cmpsb
jbe
hlt
jl
in
push
leave
and
add
push
mov
loope
pop
clc
pusha
ss
data16
out
jmp
lea
mov
xchg
jns
mov
push
mov
dec
addr16
sbb
jp
adc
mov
in
loopne
cmpsb
lret
rorl
test
jbe
mov
leave
outsb
push
shl
daa
jmp
and
mov
pop
cmp
aaa
push
divl
fistps
and
fimull
movsl
sbb
cwtd
xor
jbe
out
pushf
push
lcall
cs
movsl
jge
pushf
imul
sbb
cltd
adc
mov
add
cld
test
daa
jno
test
or
lcall
xor
xchg
or
xlat
push
sbb
nop
dec
repz
mov
cmp
das
mov
loop
inc
inc
add
es
std
jecxz
and
cmp
add
shrb
sbb
mov
push
dec
std
shl
into
xchg
fadd
insb
push
lcall
int3
out
dec
push
outsb
xchg
jp
push
inc
sahf
mov
sbb
add
pop
inc
call
rorl
pusha
xchg
out
jmp
in
lock
sbb
pop
jmp
mov
sub
cmc
xchg
insb
mov
cmp
imul
cmp
mov
sbb
mov
fwait
loope
push
fcoml
sarl
cltd
sbb
and
cmp
jle
and
loop
arpl
jb
popf
inc
imul
add
mov
mov
pop
int
pop
cmp
inc
es
repnz
test
cmpsl
shr
pop
ljmp
lock
xchg
pop
in
mov
imul
pop
in
sahf
push
arpl
lahf
jnp
xor
mov
cmp
aas
sub
xchg
scas
xor
push
sbb
sbb
mov
clc
ret
xor
adc
pusha
aas
es
lcall
sub
repnz
cmpsb
cmp
addr16
ret
jmp
jmp
mov
jno
inc
lods
mov
call
xor
push
mov
push
pop
icebp
mov
jbe
sub
push
fiaddl
cmpsb
sbb
arpl
icebp
fisttpll
or
jge
sub
inc
loop
jne
add
rcrl
movsb
dec
in
imul
ret
adc
mov
pop
andb
pushf
sbb
aaa
xchg
push
cmp
fwait
mov
daa
jmp
rorb
push
ja
mov
shrl
sbb
les
in
fcompl
xchg
in
add
test
sub
xor
cmp
cltd
push
add
test
out
pop
ja
add
push
cmpps
and
lods
andb
loope
std
pushf
in
fdivrl
push
popf
sub
mov
mov
mov
add
pop
imull
daa
adc
leave
das
pop
add
lret
repz
mov
push
mov
xor
adc
xor
popf
cmp
lret
dec
adc
out
cmpsb
jnp
add
fmulp
fimull
lcall
xor
das
sbb
mov
cmp
push
in
call
das
adc
ja
add
jecxz
mov
jno
mov
xchg
and
mov
movsb
lock
popl
ds
jmp
sbb
inc
imul
push
sub
sti
sbb
cld
jmp
push
mov
jnp
std
mov
test
jge
in
in
mov
frstor
and
add
and
mov
lcall
and
mov
mov
pop
mov
ljmp
mov
int
or
arpl
mov
std
pop
fistps
or
or
add
sub
jns
cwtl
dec
sub
ret
and
add
in
sarl
add
loopne
cltd
sub
mov
data16
cmp
icebp
or
loopne
pushf
add
dec
pop
icebp
or
push
jge
ljmp
or
mov
orl
xchg
sahf
dec
jbe
jo
call
xchg
mov
cmpsb
arpl
outsb
xor
push
mov
xchg
in
sbb
jecxz
xor
subl
cs
jae
lea
and
sub
mov
lods
sahf
sub
pushf
jecxz
lds
sbb
and
xchg
sub
out
sub
push
ja
aam
mov
aam
cld
stos
xor
es
loopne
ljmp
stos
inc
std
sbb
inc
push
xor
and
cmp
enter
push
xchg
add
inc
sub
mov
daa
sbb
repnz
inc
adcb
pop
ret
mov
and
jmp
ret
mov
daa
sub
fldl
test
cld
sbb
in
sbb
adc
cmp
adc
sbb
pop
mov
and
mov
add
out
js
ja
lds
imul
inc
idivb
xchg
data16
leave
movsl
sbb
dec
dec
mov
leave
xchg
jmp
int
adc
or
push
sti
test
hlt
sub
int
jmp
and
xchg
adc
jae
and
mov
pop
sbb
push
jbe
fcompl
and
js
and
imul
jmp
leave
rcrb
fdivl
jmp
leave
jl
mov
inc
lahf
pop
insb
clc
mov
stc
roll
sahf
xchg
arpl
aaa
xchg
out
push
xor
test
or
xchg
sbb
sbb
push
jno
in
nop
mov
mov
pop
xchg
sti
ds
fistpll
clc
pop
add
lock
fcomps
ds
cwtl
out
stos
shll
lret
jle
jmp
mov
pop
daa
shlb
mov
jbe
scas
fwait
je
es
cld
pop
push
inc
icebp
xor
imul
pop
mov
je
mov
adc
lcall
push
jbe
jp
enter
pop
fwait
mov
push
adc
sbb
lods
lock
loope
mov
std
stos
andl
adcb
and
cmp
ds
jne
jecxz
xchg
setno
imul
dec
push
sbb
inc
pop
pop
ljmp
loope
cmp
mov
lock
lods
jb
les
sbb
mov
xor
cmp
rcrb
int
xchg
fstps
push
sbb
xchg
push
push
sub
adc
and
pop
pop
cli
jmp
pop
pop
mov
xchg
ljmp
cmp
pusha
popl
sbb
lahf
or
mov
sbbl
ret
icebp
adc
in
andl
push
pop
jmp
jne
mov
adc
shl
jmp
pcmpgtw
sbb
nop
jno
decl
fsubr
inc
dec
shrb
testb
insl
fs
scas
icebp
lds
arpl
pop
cld
or
sarl
cwtl
fucom
adc
sahf
test
jns
mov
adc
dec
xchg
sub
daa
push
push
data16
adc
std
fdivr
dec
and
or
push
xchg
popa
scas
mov
sbb
adc
sbb
push
and
fistpll
cmpsl
xchg
jne
sti
cmp
xchg
popa
sar
mov
and
bound
pop
lret
bts
inc
or
dec
sbb
push
repnz
push
adc
test
movsb
push
scas
std
ds
push
loope
push
push
cltd
add
std
adc
out
add
in
test
pop
leave
or
and
add
dec
repz
repnz
dec
and
sbb
loope
dec
fucomip
repz
bnd
push
push
cli
cmc
mov
and
jno
out
jecxz
es
mov
dec
add
push
std
inc
decb
cwtl
stos
in
out
push
cmp
and
lahf
std
movsb
out
cwtl
mov
xchg
add
sbb
or
addb
adc
fs
adc
xor
lea
mov
add
dec
sbb
push
movsl
push
test
cwtl
push
sub
and
fimull
insl
push
dec
or
or
and
loop
inc
pop
xchg
fwait
das
push
xchg
xchg
xchg
push
movsb
inc
inc
adc
xor
fcomip
rolb
push
daa
orb
push
mov
sahf
mov
out
clc
push
sbb
push
sbb
fwait
push
xor
jb
pop
jmp
push
and
add
fmul
test
inc
pop
daa
pushf
popa
inc
push
pop
adc
call
push
mov
xchg
cmpsb
or
adc
sbb
inc
inc
pop
sbbl
icebp
fiadds
popa
sti
ret
in
aad
xchg
lret
sbb
mov
movsb
add
push
push
popa
adc
in
cmc
jmp
in
pop
add
js
mov
dec
lds
mov
mov
mov
pop
outsb
test
push
fst
add
pop
and
push
imul
test
and
sbbb
push
es
data16
mov
or
push
in
mov
mov
loope
je
push
and
push
mov
mov
jns
popa
sbb
push
sbb
mov
stos
xchg
test
push
out
mov
mov
push
sub
daa
fnsave
adc
sbb
rcll
adc
call
mov
lahf
into
add
lea
mov
mov
xchg
cmpsb
sbb
daa
sar
lahf
sub
nop
sbb
pop
stos
mov
sbb
sbb
sbb
sbb
in
icebp
mov
mov
fstl
addr16
adc
adc
outsl
jg
sbb
or
push
adc
adc
lods
jmp
notb
add
stos
sbb
add
sub
sbb
ret
call
sbb
in
lar
jmp
or
adc
cltd
xor
mov
clc
sub
rcll
imul
xchg
aas
sbb
fwait
es
cmc
xor
mov
add
push
xchg
and
and
out
and
movsl
ret
popa
ret
push
fwait
mov
mov
sbb
and
sbb
jo
mov
sub
push
cli
mov
or
pushf
add
ja
push
sbbb
fisttpl
adc
xchg
push
movsb
rcrl
push
sbb
xor
cmp
push
aam
jbe
push
sub
in
jmp
xchg
fstps
test
pop
add
add
data16
add
mov
adc
sbbl
or
in
mov
lret
mov
addl
andb
fsub
xchg
mov
and
inc
mov
jecxz
ja
test
subb
mov
jecxz
push
aad
jle
popa
cmpsl
data16
jecxz
icebp
mov
aad
movsb
inc
push
pusha
mov
xchg
sbb
lcall
out
and
fs
stc
mov
pop
xor
push
in
sbb
mov
insl
jnp
xor
or
mov
cmp
mov
cmp
sub
xor
sbb
add
xchg
adc
jecxz
loop
mov
jge
push
jle
popf
push
sbb
jl
and
and
cmpsl
cmp
xlat
xor
push
movsl
popa
dec
pop
fcoms
mov
hlt
loopne
shll
and
pop
insl
or
mov
push
xorl
mov
fidivrl
repz
psadbw
dec
scas
pop
lock
shl
mov
cmpsb
push
fwait
mov
shlw
sbb
stos
repnz
adc
andl
pop
sti
mov
xchg
out
in
xlat
sbbb
inc
push
sub
in
aad
out
and
mov
dec
sar
mov
imul
add
inc
lret
test
test
push
and
dec
mov
rorb
mov
xchg
add
xor
das
sbb
pop
push
mov
jbe
std
dec
pop
test
ficomps
jnp
outsb
mov
lds
and
cmp
add
xor
or
pop
mov
mov
jae
movsl
ss
testb
jnp
xchg
sub
lcall
incl
ljmp
or
pop
push
jbe
sbb
fmull
icebp
sub
loopne
xchg
jo
or
call
loop
stos
mov
xchg
mov
sbb
pop
adc
sti
js
cli
add
pop
shrb
repz
or
in
inc
and
and
jb
and
test
popf
gs
addr16
mov
dec
xchg
jnp
leave
sbb
and
loop
mov
cmp
ficompl
xchg
or
insb
fdivrl
jne
add
stc
jle
imul
cwtl
fcomps
sbb
loop
and
in
pop
aas
std
push
mov
gs
jmp
sbb
daa
push
pop
fsubrs
adc
xlat
ficoms
xchg
mov
out
adc
fisttpll
xchg
add
loop
sahf
fidivs
dec
arpl
xchg
shrb
in
inc
xchg
loop
lods
imul
stc
mov
jecxz
sbbb
pusha
mov
jecxz
dec
add
testl
add
mov
dec
scas
pushf
psubsb
pop
or
mov
mov
mov
cmpsl
push
mul
push
inc
enter
nop
nop
and
jecxz
rcrl
jmp
xchg
mov
cwtl
ret
sbb
pop
xchg
clc
into
cltd
cmp
mov
mov
in
fdivr
push
mov
pop
loop
pop
inc
into
mov
imul
loop
enter
pop
enter
sbb
mov
lret
sbb
jns
adc
mov
rcll
aam
leave
mov
loope
sbb
or
lods
mov
lahf
push
jge
sub
into
dec
in
inc
andb
jecxz
mov
jo
sbb
push
cmp
xchg
pop
adc
lock
cmc
lea
xchg
pop
rorl
jnp
push
pop
fadds
and
inc
nop
enter
inc
fistps
and
or
enter
xchg
jge
sbb
aaa
push
aad
popf
adc
inc
outsl
adc
inc
mov
or
in
push
dec
sub
jg
flds
fs
aad
and
lahf
fcoms
test
sahf
jmp
dec
pop
inc
dec
sub
bsf
inc
add
jecxz
sti
or
jmp
mov
cmp
sbb
fiaddl
lahf
lods
mov
rcrb
xchg
jbe
and
sbb
loop
sar
mov
popf
cwtl
sub
fimuls
fdivrl
push
clc
lods
push
sti
xchg
ja
inc
jbe
pop
pop
sahf
sbb
dec
testl
je
adc
fsubs
iret
mov
fidivrl
cmpsb
pop
sbb
xchg
xchg
pop
mov
in
out
or
popa
xchg
pop
pop
mov
popa
popf
mov
mov
sbb
fidivrs
cmp
scas
fnsave
xchg
add
or
add
rcrl
andl
rcrb
xchg
sbb
add
xchg
cs
mov
and
out
test
dec
cmpsl
push
imulb
sub
push
scas
fidivrl
cs
scas
sbb
sahf
loope
or
pop
mov
dec
pop
js
cmp
les
sbb
and
sbb
stos
push
adc
aad
arpl
das
fldl
adc
mov
test
cltd
cmp
test
push
cli
and
and
mov
add
fcmovnu
mov
mov
pusha
ret
sbb
in
test
std
test
negl
sbb
pop
leave
add
jne
xchg
adc
lea
adc
sub
sahf
es
enter
jle
jo
sahf
movsb
xchg
sub
mov
in
xor
clc
ret
mov
mov
jge
and
adc
jnp
push
and
dec
adc
xor
std
xchg
push
jae
mov
xchg
neg
sbb
add
lds
std
adc
fisubl
lret
sbb
test
mov
test
mov
mov
cmp
sbb
gs
fnsave
testb
lret
in
or
jg
hlt
mov
adc
or
adc
aam
pusha
mov
pushf
xchg
adc
pusha
inc
and
test
xor
add
fstp
negb
test
lret
mov
arpl
push
cmp
arpl
js
mov
les
xchg
fists
jp
dec
jl
test
xchg
or
in
mov
mov
inc
es
mov
call
sbb
fcmovne
lock
int
notb
cmp
or
sbb
cmp
cmpsl
sbb
pop
sbb
or
and
loope
ret
loope
clc
fbstp
add
es
arpl
gs
mov
add
and
hlt
ss
add
cmp
cmp
dec
pusha
cltd
cli
push
cs
es
rorl
addr16
lds
mov
push
pop
fcoml
adc
dec
pushf
inc
call
mov
mov
fidivs
out
xchg
sbb
fstp
jnp
cli
sbb
das
or
jge
sub
sarl
sti
and
or
sarb
lods
out
cmpsl
loopne
sbb
sbb
mov
mov
ljmp
inc
mov
pop
insb
adc
cmpsb
jge
inc
add
pop
and
rcrb
fistpl
lods
push
test
inc
and
loope
mov
jmp
cs
and
stc
xchg
xorb
arpl
imul
push
mov
fisubs
int
or
lahf
xor
xchg
xchg
mov
add
xchg
mov
out
roll
cmp
pushf
jns
push
adc
clc
or
mov
mov
sbb
test
cli
add
test
je
pop
cmc
mov
fmul
or
and
sbb
in
mov
test
cmp
mov
ds
mov
sub
cmp
push
fisttpll
lret
fdivr
and
mov
mov
idivb
call
data16
mov
rolb
adc
xchg
pop
fs
lret
loopne
les
jbe
mov
jno
push
push
shufps
ficomps
ret
mov
jp
hlt
sub
or
push
mul
loop
mov
arpl
inc
pusha
dec
push
das
or
lds
pusha
adc
stc
cmpsl
push
addb
out
rcr
je
jge
sbb
lock
scas
push
sub
inc
cmp
out
xorl
xchg
push
jg
int
push
add
js
push
jl
pusha
outsb
inc
xchg
dec
or
push
xchg
cwtl
push
pop
sub
inc
int3
jne
pop
add
mov
leave
jg
push
mov
push
jno
fmulp
or
fisttpl
push
sarl
add
xchg
sbb
add
xor
repz
jb
xchg
pop
xlat
in
adc
adc
jp
adc
adc
cmp
add
and
mov
push
loope
imul
cmpsl
push
jb
dec
pushf
dec
jns
fdivrl
cld
into
rcr
imul
fsubr
fdivp
xchg
shrb
inc
mov
xor
sub
or
and
into
mov
sbb
pop
add
movb
out
imul
std
clc
aad
je
cmp
mov
clc
andl
inc
fdivl
cmp
iret
int3
push
adc
cwtl
ljmp
rcrl
mov
and
daa
pop
mov
in
ds
jmp
repz
je
and
lret
pop
jo
inc
loope
sbb
adc
cltd
dec
adc
clc
pushw
pop
xchg
mov
stos
bound
mov
cmpsl
daa
pop
jp
lds
test
fld
and
imul
jns
stos
push
mov
pop
fisubrl
and
cmp
mov
push
repnz
inc
test
pushf
mov
repz
lods
stos
pop
xor
and
mov
pop
jp
add
mov
daa
faddl
mov
les
stos
dec
dec
sbb
cmpsl
mov
sub
cmp
lret
inc
xchg
in
mov
inc
outsb
mov
pop
mov
into
movsb
xor
rorl
and
cmpsb
or
js
sti
and
stos
faddl
sbb
in
and
mov
and
push
sbb
icebp
and
push
mov
sbb
fwait
inc
mov
push
push
clc
adc
insb
mov
add
sti
cld
outsl
push
shlb
sub
popf
xor
add
mov
pop
sbb
dec
add
je
fldt
pop
aaa
xor
ja
pop
or
push
or
shll
inc
test
jne
out
arpl
jle
ja
mov
pop
sub
stos
std
testb
jp
int
jne
and
add
or
jbe
jno
es
js
lcall
jne
arpl
pop
and
lds
pop
pop
fstpt
aam
nop
cmp
xchg
insb
imul
mov
loop
inc
jns
repnz
mov
jne
sbb
int
jg
in
pop
popf
nopl
mov
data16
pop
add
test
dec
movsb
jp
into
dec
stos
sbb
mov
sbb
jecxz
mov
push
in
lds
inc
jns
xchg
fistps
xor
imul
imul
bound
cltd
lds
std
frstor
lock
and
test
and
inc
xor
fucom
pop
cmpsl
fstpt
xchg
push
xchg
out
inc
dec
push
cmp
enter
sbb
in
test
lret
pop
mov
cmpsl
sbb
mov
mov
inc
sti
or
push
arpl
or
inc
stos
test
mov
js
cmpsb
repz
fcomps
test
aad
mov
or
out
push
ljmp
dec
jbe
add
test
xor
rcll
xchg
stc
pop
or
mov
adc
lds
rol
cmp
push
pop
fbld
int3
xchg
adc
js
mov
mov
scas
mov
mov
cld
xor
adc
repz
int
mov
inc
jl
mov
and
push
sahf
ret
dec
sarb
insb
and
jne
or
cmpsb
out
fs
jg
out
lock
xor
push
pop
repz
stos
nop
sbb
lret
mov
icebp
mov
pop
push
xor
popf
test
mov
in
add
divb
cmp
fstl
or
rcll
jp
sub
dec
mov
ja
cmpsb
cmpsb
jae
cmp
xchg
inc
sbb
cwtl
je
mov
jl
mov
mov
and
fdivl
outsl
inc
xchg
int3
sbb
pushf
movsb
sbb
jo
jns
and
mov
cld
daa
dec
loope
int3
std
insl
mov
stos
or
xchg
add
mov
jecxz
lret
pop
mov
add
or
lods
and
mov
jnp
lods
cld
sbb
dec
adc
mov
pop
movsb
xor
mov
imulb
push
ror
cmp
inc
add
sahf
mov
lahf
jnp
aad
cmpl
mov
repz
dec
mov
enter
push
in
test
push
lods
pop
pop
clc
and
cli
out
out
orb
and
js
shl
push
test
mov
jnp
filds
clc
test
xchg
add
out
xor
out
pusha
shll
mov
cmp
adc
iret
xchg
or
addr16
leave
ret
push
push
es
fwait
sbb
adc
clc
jecxz
or
out
sub
xchg
out
mov
repnz
pop
sarb
outsb
daa
xchg
sub
sti
cmp
ss
sub
lods
or
pushw
negb
add
fdivs
test
in
cltd
divb
sbb
inc
ss
js
pusha
inc
jl
or
push
std
sbb
sbb
push
add
loop
sbb
mov
ficoml
ret
add
imul
jns
inc
pushf
insl
aaa
leavew
push
test
dec
mov
inc
sar
movsb
mov
mov
fcoml
idivb
dec
out
dec
mov
pop
sbb
and
stos
sahf
aam
pop
mov
out
pusha
inc
mov
sbb
push
xorl
leave
sbb
insb
add
sub
fcmovbe
pop
call
dec
aam
push
and
jge
cmc
xchg
and
push
mov
pop
neg
add
jbe
cmovo
repnz
cltd
hlt
adc
and
movsb
sbb
or
in
mov
aas
mov
adc
cmp
adc
inc
mov
mov
es
mov
test
out
adc
incb
and
out
shrl
sub
cwtl
sub
cwtl
pop
shlb
insl
add
shr
adc
pop
lock
divb
add
sbbl
nop
push
outsb
cs
call
xor
push
repz
pop
adc
vcmpps
dec
icebp
aam
int3
push
test
cmp
ffree
add
jns
pop
jl
dec
xchg
stc
mov
jl
xchg
mov
out
jg
sbb
popf
mov
int3
pop
loopne
inc
adc
jl
inc
test
addr16
or
lahf
push
add
push
sbb
dec
dec
pop
dec
ret
mov
jnp
inc
jnp
je
cmp
sbb
popf
add
inc
mov
mov
xor
jbe
jno
or
xchg
sub
and
imul
mov
jno
ljmp
bound
push
sub
scas
adc
imul
ret
mov
adc
ficompl
mov
adc
mov
sarl
popf
sub
xor
inc
mov
es
dec
cld
shll
cmp
sub
fs
pop
lea
jae
je
push
cmpsb
push
cmp
mov
mov
push
insl
addb
dec
cmpsl
add
mov
scas
mov
fsubrs
adc
pop
sub
mov
and
jo
xchg
push
cs
jl
call
out
and
imul
add
test
ror
mov
and
cs
ret
loop
inc
enter
dec
jns
repnz
push
or
sub
and
push
js
cmp
push
lods
adc
xchg
es
push
push
out
add
out
or
leave
mov
div
inc
lods
scas
test
inc
sub
ja
stos
fiaddl
mov
inc
dec
lds
pop
cmpsb
bound
mov
sub
dec
adc
mov
lock
and
mov
popa
scas
sbb
std
add
in
rcrb
mov
xor
cs
int3
lods
xchg
inc
out
mov
js
xlat
sti
lcall
sti
fisubrl
sbb
push
pop
ss
lods
andl
into
ret
out
hlt
xchg
call
xchg
and
aas
adc
jbe
adc
mov
test
popa
das
in
xchg
pop
adc
idivl
cltd
fdiv
and
in
aam
cwtl
cmp
jge
clc
cmpsl
xchg
pop
nop
or
or
clc
cwtl
scas
andb
push
cli
mov
sbb
mov
cli
push
fs
mov
sbb
rorl
pop
and
shl
scas
fstpl
lcall
adc
mov
repz
test
pop
mov
leave
cmp
cmpsl
cmp
sahf
popf
popf
cmp
jo
fnstsw
inc
lahf
lahf
mov
mov
adc
out
mov
or
or
and
lock
push
mov
mov
push
mov
cmpb
comiss
or
and
sub
mov
ss
imul
es
roll
stc
test
loopne
push
sub
test
pushf
jmp
pop
lcall
jbe
sub
lret
jnp
loop
mov
sub
or
andl
gs
xor
lret
stos
movsl
test
pushf
loop
stos
push
dec
cmp
divb
or
imul
mov
repz
cltd
icebp
and
sbb
scas
inc
cmp
ror
or
and
xchg
jb
jmp
push
lods
adc
out
sub
push
lock
jnp
push
or
adc
int
push
mov
add
xor
movsb
clc
out
mov
vpmadcswd
xchg
push
popa
inc
mov
std
jp
adc
aad
mov
mov
push
sbb
mov
jmp
test
fbstp
arpl
dec
sbb
out
and
in
mov
out
sub
xor
mov
push
and
iret
dec
fildl
and
pop
mov
cwtl
add
adc
push
jg
and
pop
popf
pop
pop
sahf
jo
dec
jp
int
out
ss
mov
test
mov
xchg
in
push
push
mov
add
insl
sbb
sbb
cmp
daa
fnstcw
add
mov
cmpsl
lds
sbb
or
out
and
xchg
mov
sbb
movsb
pop
mov
and
adcb
adc
jle
cmc
xchg
jnp
jl
into
lock
imulb
jg
adc
mov
cli
imul
or
xchg
or
jecxz
adc
das
dec
and
and
loope
bound
push
movsl
aas
je
daa
sbb
scas
pop
pop
movsl
in
leavew
mov
add
push
mov
cld
push
sti
inc
aam
fldenv
inc
or
push
push
inc
mov
mov
test
imul
cmp
pop
mov
xor
decl
mov
mov
pushf
scas
mov
fs
mov
jne
dec
jae
xchg
mov
in
adc
cmp
imul
pop
sub
sahf
out
mov
lds
sbb
lods
xor
add
fnclex
dec
push
jp
data16
icebp
pop
adc
add
sub
enter
and
out
xchg
pop
push
mov
daa
sbb
cli
mov
mov
out
push
mov
push
sbb
jp
mov
push
inc
mov
daa
bswap
push
test
ret
adc
xchg
mov
sahf
fists
pop
loope
dec
sar
repz
shr
or
lret
cmp
test
aad
stc
xchg
add
cmp
ficoms
ret
mov
jmp
ret
insl
and
xor
add
dec
popf
in
push
pop
dec
or
je
xlat
dec
addr16
mov
mov
test
mov
out
adc
push
xchg
adcl
inc
sub
sub
mulb
pop
push
xchg
inc
movl
loopne
aaa
mov
adc
mov
decl
adc
sub
out
cmpsl
mov
out
lods
fists
jmp
out
add
hlt
add
out
and
sbb
cli
mov
jnp
out
pop
pop
and
mov
jne
xchg
cmp
bound
or
out
jecxz
push
cmp
test
lret
clc
scas
inc
adc
pop
flds
mov
test
cmp
idivl
rcl
jnp
add
adc
test
sbb
popf
mov
arpl
mov
ds
jl
and
sub
push
adc
sub
cmp
or
sub
xor
push
dec
rcrl
mov
xchg
inc
add
adc
adc
sti
addr16
pop
call
jle
in
mov
or
shr
popa
sarb
in
jmp
in
pop
pop
jmp
mov
insb
fstpl
shlb
cmp
sub
pop
cld
mov
or
xor
in
mov
popf
push
fsubr
out
daa
xor
pop
cmp
push
push
add
adc
and
std
sarb
pop
lret
mov
mov
fdivr
pcmpgtw
push
mov
out
and
int3
sub
cmpsb
and
cmp
mov
pop
repnz
xchg
outsl
arpl
push
sbb
arpl
sub
in
notb
pop
call
lods
inc
mov
mov
call
jnp
adc
xor
xchg
jmp
imul
sbb
es
inc
movsb
dec
mov
add
lcall
jmp
cmc
cs
mov
cmp
mov
ret
testl
and
xchg
cmpsb
dec
mov
mov
xchg
rol
andb
mulb
sub
inc
mov
dec
popf
pop
sbb
std
call
jle
dec
jo
std
sbb
cmp
xchg
cmp
call
ljmp
sbb
dec
pushf
cli
mov
cmpsb
push
test
pop
fwait
adc
push
jge
das
adc
arpl
test
out
out
je
cltd
pop
xchg
xchg
popa
scas
or
xor
fstl
lds
and
insl
and
lods
insl
ja
and
ret
mov
aas
movsb
xchg
inc
mov
dec
lods
loopne
pop
sti
and
sub
clc
lcall
pop
push
inc
arpl
mov
leave
adc
xor
es
nop
push
or
stos
jmp
fildll
data16
sub
in
xor
aad
jecxz
mov
pusha
push
inc
xchg
or
sbb
sbb
inc
adc
xchg
daa
lods
fsubl
sub
xor
dec
and
jle
push
sbb
fidivs
adc
std
mov
outsb
call
lret
iret
mov
push
in
rorb
loopne
or
jo
jge
pop
jle
mov
sub
push
inc
pop
lock
sbb
pop
in
push
in
std
or
imul
sub
and
cmpsb
pushf
cltd
mov
adc
rolb
inc
movsb
lret
mov
mov
lods
ret
popa
add
icebp
pop
dec
pop
fists
sub
pop
xchg
scas
sub
fwait
aad
andl
and
push
popf
movsb
mov
popf
mov
jmp
popf
imul
pushf
mov
jbe
sub
ss
xchg
andl
mov
or
xchg
hlt
ret
add
loop
mov
jg
in
push
dec
add
js
push
cld
jp
push
ss
push
jmp
sbb
add
add
lahf
pop
test
js
stos
fdivrl
push
mov
dec
cmp
repnz
push
or
mov
push
stos
push
pushf
test
xor
cmpb
test
xor
cmpsl
fists
mov
dec
dec
jbe
xor
sbb
testb
fisubl
adc
inc
push
mov
xchg
fsubrs
and
sub
mov
movups
in
mov
adc
insb
test
js
lds
sub
push
clc
pop
aad
icebp
sbb
pop
xchg
addr16
movsb
dec
mov
xchg
mov
jae
les
jle
or
mov
rorl
hlt
icebp
out
dec
pushl
xchg
mov
adc
mov
movsb
mov
push
negl
and
xchg
pop
and
dec
or
jnp
pop
mov
sub
xchg
int
jbe
lret
dec
xor
mov
ja
and
cmp
and
hlt
les
shlb
cmpsb
sbb
fstpl
push
sti
add
sbbb
pop
imul
inc
inc
movsl
cltd
out
cmp
data16
std
mov
mov
mov
cmc
popa
std
outsb
sub
jle
add
dec
loope
lcall
add
aad
mov
xchg
cwtl
mov
cwtl
add
fisubl
inc
cmp
push
sbb
push
les
sahf
aaa
cs
dec
out
adc
jns
cmc
mov
xlat
push
movsb
xorl
test
pop
mul
push
out
and
popf
or
sbbl
sbb
es
jnp
or
test
lds
aad
aas
hlt
mov
xchg
out
dec
jno
mov
mov
fists
push
in
test
push
adc
or
dec
pop
mov
hlt
push
aas
pop
outsb
inc
lret
lahf
dec
lea
sbb
adc
cmpsl
nop
rorl
and
call
jae
cmp
out
pop
pop
inc
sbb
cmp
rcrb
and
repz
push
add
or
cmc
outsl
cld
push
adc
adc
xchg
jg
out
loop
xor
out
xchg
call
les
aas
cld
cltd
in
clc
add
insb
and
aaa
lods
xor
sahf
cmpsb
push
int
dec
lods
clc
jnp
fucom
mov
add
cwtl
add
sbb
jo
jbe
mov
loope
adc
xchg
pop
mov
mov
cmpsl
mov
test
mov
inc
cltd
lea
mov
and
or
inc
lock
push
ret
test
push
xchg
pop
lock
aam
adc
fnstenv
dec
or
mov
lret
loopne
lret
std
cmpsb
sti
push
push
pop
inc
sbbl
xchg
test
adc
sub
frstor
lcall
push
das
dec
pop
fcompp
hlt
fidivl
test
and
outsl
or
sbb
mov
mov
or
inc
add
push
adc
mov
pusha
lcall
mov
xchg
outsb
and
nop
xchg
xchg
push
jnp
stos
std
out
inc
pop
push
out
je
xchg
mov
test
xor
addl
push
mov
xchg
pusha
mov
fwait
mov
icebp
adc
je
daa
xchg
dec
sbb
and
pop
div
bound
outsb
leavew
xchg
loop
sbb
pop
xor
loopne
es
sbb
pop
inc
leave
jmp
jle
adc
pusha
pop
ficomps
dec
cmpsl
mov
jl
jno
and
pop
push
mov
jle
leave
shl
movups
faddl
sub
dec
flds
xchg
xor
shlb
sbb
xor
add
idivb
je
mov
push
flds
pop
jp
test
sub
dec
movsl
jl
mov
fcoms
adc
push
popf
push
xchg
std
fsubrl
rcr
sbb
xor
sbb
and
cmp
mov
and
out
nop
fisubs
dec
or
or
dec
mov
sbb
lcall
and
inc
cmp
pop
wrmsr
cmp
cmp
push
mov
inc
popf
jp
jnp
fiaddl
cmp
inc
popa
adc
lret
imul
sub
pop
scas
add
repz
test
and
enter
ss
xor
cmp
mov
insl
les
or
add
push
xchg
cwtl
ret
jg
imul
push
jl
out
jmp
adc
mov
push
mov
sub
cmp
fldenv
sbb
aad
pop
push
dec
cmp
and
subps
push
cmc
sti
test
inc
jge
push
jnp
mov
sub
movsb
fmull
fidivl
cmp
je
adc
and
and
push
out
andb
mov
jne
sbb
fnsave
add
addr16
inc
subl
add
ret
vlddqu
mov
sub
push
imul
push
rcrl
push
pop
and
adc
cmpsl
fldl
popf
pop
movsl
jl
aas
in
jno
icebp
rolb
push
push
add
std
icebp
and
icebp
dec
and
adc
jno
out
xchg
cmc
and
inc
rcrb
loop
std
loopne
addr16
sahf
cmp
cmp
add
lods
jns
out
sbbl
mov
jbe
mov
retw
lret
push
add
mov
sti
lock
pop
pop
fnstsw
xchg
sahf
js
loope
and
cwtl
xchg
and
adc
or
test
sbb
inc
xchg
and
mov
and
add
jmp
pop
divb
or
addl
shlb
bound
xchg
retw
imul
add
call
push
pop
into
jns
in
ret
or
sbb
sub
js
inc
rcll
pop
push
mov
adc
mov
sbb
cltd
filds
call
adc
mov
stc
mov
cld
test
add
push
and
inc
xor
sbb
out
into
cltd
adc
pop
pop
mov
les
jns
lcall
xor
outsl
in
mov
test
push
mov
inc
cltd
sub
gs
sub
fwait
cs
lds
jne
popf
out
loopne
pop
gs
daa
cmc
dec
subb
clc
and
mov
cli
int
pushf
sbb
insb
cwtl
add
sbb
pop
inc
popa
push
sti
adc
adc
lods
in
cmpl
or
adc
ljmp
and
sub
pop
cmp
icebp
and
and
adc
mov
sub
stos
and
clc
sbb
or
mov
cmp
mov
mov
ss
int3
xchg
and
cld
das
scas
mov
negb
fdivs
cmc
daa
pop
adc
push
or
popa
inc
add
adc
fisubrs
xchg
sbb
cwtl
sub
sub
mov
sub
dec
andl
adc
mov
mov
adc
sbb
or
and
sub
add
pop
cmp
jmp
cmp
xchg
xchg
scas
lret
sti
pop
mov
js
cmpsb
jbe
cli
jmp
and
push
cs
fcomps
pop
or
in
jo
push
cmpsl
dec
cmp
mov
sbb
in
pushf
nop
cmc
repz
adc
add
push
leave
pop
test
cmpb
popa
lds
and
lahf
stc
and
pusha
sub
and
sahf
addr16
iret
dec
add
mov
push
pop
fcoms
mov
mov
xlat
dec
jmp
sbbl
add
mov
pop
loopne
arpl
add
es
bound
test
cmc
popa
push
movsl
mov
lds
movsb
call
push
popf
inc
lahf
test
mov
and
xor
int
lock
pop
inc
pop
pop
mov
sbb
je
dec
lods
out
mov
pushf
pushf
lds
repz
dec
imul
mov
lods
cmp
pushw
rcll
and
sub
xchg
add
icebp
sti
sti
adc
cmp
lds
or
sub
lcall
negl
call
and
ljmp
adc
fwait
add
sbb
sub
mov
arpl
imul
push
in
and
push
lods
and
movsb
inc
pop
mov
push
dec
cwtl
adc
adc
mov
inc
cmc
sbb
pop
imulb
test
sahf
or
lods
cmp
cltd
or
jmp
and
push
mov
ljmp
out
mov
xchg
add
sub
xor
mov
scas
inc
lret
pushaw
mov
mov
icebp
sbb
mov
popf
sbb
rcrb
imul
lock
pop
sbb
mov
adc
mov
and
lcall
pop
and
jmp
push
sbb
jp
ljmp
dec
or
sbb
and
imul
inc
jns
test
sub
push
jp
in
es
inc
push
pop
in
sbb
mov
jo
dec
hlt
mov
inc
jno
lret
adc
das
rcll
mov
and
xlat
dec
fisubs
xchg
icebp
mov
lret
adc
cwtl
inc
sahf
cmp
add
pushf
pop
mov
imulb
mov
std
mov
push
lcall
and
shll
cmpsl
int3
xor
sarb
mov
cmp
adc
xchg
mov
jl
loope
rcrl
iret
std
es
mov
mov
ror
int
and
jl
push
sbb
xchg
mov
xchg
sub
mov
dec
xchg
movsb
mov
loop
ror
add
test
pop
jbe
fistl
xchg
mov
jl
xor
and
pusha
insl
mov
imul
pop
nop
dec
mov
and
jns
loop
popa
inc
test
in
frstor
mov
pop
mov
inc
mov
add
sub
les
lds
jmp
incb
mov
add
popa
test
dec
inc
out
and
sub
arpl
stc
lret
bound
jecxz
and
ret
inc
andl
arpl
inc
ja
lock
aad
js
icebp
sbb
push
sub
inc
mov
or
les
out
xchg
inc
out
cli
clc
xchg
xchg
sub
shll
jg
lods
icebp
jecxz
xor
jne
mov
mov
xor
adcb
mov
sub
or
fsts
icebp
sbb
xchg
push
mov
roll
icebp
loopne
pusha
inc
cltd
ret
push
sub
pop
bound
inc
dec
and
xor
shll
push
cmp
jbe
mov
pop
mov
unpcklps
mov
xchg
bound
push
neg
icebp
xlat
pop
adc
mov
enter
sbb
std
mov
mov
std
into
stos
sub
push
lcall
jp
or
inc
aam
mov
sti
mov
adc
aam
pusha
and
cmp
repnz
call
sbb
rcrb
lahf
shr
mov
or
test
pop
mov
xchg
sbb
pop
imulb
mov
sub
rorl
lock
adc
push
je
and
lcall
loope
sarl
jno
test
out
and
shrb
fisttpll
sbb
mov
dec
jae
sbb
cmc
mov
movq
ret
or
mov
xchg
gs
fstl
inc
push
inc
pop
xor
enter
sbb
mov
or
lea
sbb
loopne
popa
repz
roll
repz
test
jl
mov
adc
mov
jmp
popa
pop
sbb
pop
sahf
clc
dec
and
clc
ljmp
and
mov
pop
loopne
mov
push
sahf
out
pop
sbb
adc
mov
fcmovnu
mov
xor
mov
icebp
movsb
sbb
testb
jmp
pop
repz
push
push
cmpsb
shll
int
fwait
mov
lcall
outsb
jge
pop
or
jp
mov
ficomps
pushl
pusha
adc
cltd
and
add
enter
int
lret
sbbl
sti
cmpsb
add
add
out
sub
xchg
fstps
cmp
or
repz
cltd
adc
hlt
scas
xchg
sar
repnz
adc
add
cmp
aaa
cmp
inc
ret
pop
std
jns
add
shll
sti
bound
outsl
nop
fcompl
dec
sub
test
into
ljmp
in
adc
or
leave
sub
test
ss
xor
in
sbb
pop
nop
add
out
xchg
ror
push
cs
mov
repz
cmpsl
pusha
sub
cmp
std
jecxz
jbe
insb
jmp
xchg
jge
add
popf
adc
xchg
push
or
xchg
adc
or
xor
loope
xchg
outsl
mov
lahf
cmp
jbe
add
test
aam
xor
xor
cmp
insl
jno
cld
shlb
pop
jle
mov
flds
dec
sti
dec
scas
aam
adc
mov
xchg
add
das
inc
add
mov
movl
and
call
pushf
pushf
mov
lea
jae
mov
mov
inc
jmp
sbb
imulb
enter
push
mov
pusha
mov
inc
mov
mov
dec
sbb
loopne
mov
inc
xlat
pop
fcmove
and
mov
xchg
add
add
hlt
out
insl
into
cmp
and
and
xchg
fwait
add
and
sub
xor
mov
mov
jbe
data16
inc
test
ret
xor
movsb
dec
cwtl
push
lods
inc
shl
adc
add
std
adc
xor
jno
decl
cld
adc
addr16
fildl
rolb
fcomp
sub
xor
cmp
inc
xchg
sub
mov
mov
mov
pop
xor
adc
adc
or
adc
xor
sbb
cmp
xor
xor
push
enter
dec
js
addr16
ja
imul
sarl
sti
or
or
outsb
test
shll
jb
push
mov
lods
pop
test
and
push
mov
rcr
in
sbb
es
lcall
push
repnz
pop
jmp
into
ret
test
cmp
push
mov
jb
jg
inc
test
sti
sub
xor
or
out
in
xchg
cmp
add
pop
inc
ds
pop
int3
xor
hlt
clc
popf
jb
loope
loopne
cmp
frstor
jnp
jg
xor
xchg
dec
pop
add
into
clc
pop
out
jecxz
call
fistps
iret
aaa
out
xor
add
stos
mov
sbb
sub
dec
out
movsl
jno
cmc
daa
jne
jne
leave
dec
loope
movsl
icebp
in
mov
jmp
and
xor
sti
push
pop
cmp
add
dec
addr16
test
pmaddwd
add
add
aad
and
or
xor
sbb
adc
cltd
mov
cmp
pop
add
jecxz
fistpll
fbld
sti
movnti
out
iret
scas
or
das
sbb
insb
and
cmp
out
out
les
jmp
lret
mov
inc
rcll
insl
in
adcb
xchg
ds
pop
xchg
inc
bound
jnp
cmp
fwait
hlt
testb
sbb
add
adc
sbb
adc
sbb
pop
ret
xor
jmp
add
testl
pop
movsl
fwait
mov
add
aaa
std
pop
push
fmul
shl
adc
mov
mov
int
mov
testl
add
sarl
cmpxchg
pushf
js
jne
sbb
repz
and
out
icebp
fiadds
jbe
popa
mov
les
xor
push
cmp
inc
scas
pusha
mov
xor
add
imul
jae
sahf
adc
cmp
adc
insl
leave
sub
add
in
sbb
cmp
jl
mov
mov
stc
test
adc
sbb
adc
inc
pop
mov
imul
cltd
cmp
xor
or
add
insb
xchg
sbb
cmp
fstl
add
cmp
jmp
clc
inc
insb
out
movsb
iret
xchg
sbbb
sbb
xor
xor
shll
jge
inc
xchg
inc
fwait
jno
xor
orl
inc
jp
bound
sbb
or
push
hlt
and
add
add
cmp
fmuls
mov
sub
imul
and
xchg
stos
outsb
stos
adc
leave
inc
jl
jne
cltd
dec
popa
lcall
jle
jle
fdivl
mov
push
adc
test
stc
or
outsl
aad
icebp
pop
loope
std
ret
xor
lahf
dec
mov
in
xor
xor
lock
or
mov
add
imul
mov
push
js
xchg
mov
pop
popf
xchg
cmpsl
pop
inc
mov
push
mov
mov
imul
pop
in
std
and
outsl
lock
and
loopne
clc
sbb
sub
xor
fiadds
out
add
sub
inc
mov
xchg
pop
xchg
pop
ret
xor
adc
pusha
pushf
pushf
lea
jae
push
call
push
cmp
call
rep
call
pusha
bt
imul
clc
add
pusha
mov
lea
jmp
btc
call
push
outsb
mov
mov
fsubr
test
testb
cmp
popf
jne
jne
dec
cltd
icebp
pop
mov
sub
sbb
out
outsb
cli
jne
out
mov
daa
add
rcrl
sub
in
push
push
jnp
xchg
xchg
xchg
xchg
mov
bswap
lret
sub
std
xor
mov
pushf
pop
xchg
cmp
add
rol
jns
push
push
loop
or
in
in
sti
leave
dec
notb
subb
dec
cmpsb
xor
dec
mov
cs
fst
cmp
adc
mov
mov
dec
xchg
pop
ret
xor
xor
inc
cmp
das
cmp
or
movnti
repz
mov
sub
loopne
incl
push
jne
mov
sbb
xlat
push
int3
imul
aas
pop
cmc
sub
pop
popf
pusha
jle
test
orb
push
out
lret
inc
repz
ljmp
xor
mov
xor
xor
xor
mov
lcall
and
and
add
add
xor
lea
jae
call
iret
mov
loope
add
jecxz
sub
adc
es
ret
push
fidivl
dec
push
loope
mov
mov
lods
jnp
in
adc
cli
mov
popf
jnp
sub
push
jnp
lahf
jns
pop
push
push
sbb
icebp
lock
into
jge
lods
jno
cltd
outsb
mov
orb
xchg
xchg
push
lret
pop
mov
lret
sub
sub
jnp
lret
insl
xchg
sbb
mov
push
leave
and
xchg
das
icebp
sub
gs
mov
mov
js
ret
xor
bt
push
movb
bt
cmp
pushf
pushl
lea
ja
pushf
stc
imul
stc
bt
clc
add
lea
push
jmp
stc
iret
btr
cmp
jmp
adc
xor
int
xchg
rcll
xchg
subb
and
popf
cmp
inc
jnp
cmp
mov
inc
inc
xlat
jno
pusha
sarl
jle
push
dec
inc
jmp
push
mov
inc
gs
adc
out
addb
or
sti
push
clc
add
jecxz
mov
in
lds
rorl
leave
daa
lds
lds
ret
xor
jb
dec
mov
cli
lock
out
sbb
ds
push
jbe
jb
dec
repnz
test
dec
int3
loopne
adc
imul
cmpsl
test
cmp
movb
and
fisttps
lds
xchg
movsb
ret
jmp
jmp
repz
daa
movsl
jg
pop
or
or
and
faddp
bound
mov
ds
xor
lock
pop
outsb
and
add
ret
push
shll
cvtps2pi
jb
push
into
cmpsl
sbb
xor
xor
pusha
mov
mov
cmpsl
loope
and
or
stos
jne
xchg
mov
jecxz
add
data16
add
cs
and
or
dec
lret
sub
jg
scas
pushf
cwtl
mov
fldt
rorb
or
mov
pop
lret
pop
adc
icebp
dec
cmpsl
pop
out
in
test
inc
dec
aad
add
inc
xor
xchg
mov
out
das
dec
test
in
movsb
cmp
shll
mov
mov
es
fistl
out
outsb
subb
xchg
fstp
xchg
lds
cmp
add
bound
lock
pop
mov
nop
daa
inc
fcomps
iret
mov
fdivs
out
sub
pop
rcll
test
pop
jnp
sbbl
sub
jge
sub
push
arpl
fsubr
movzbl
mov
pushf
mov
mov
pushf
mov
pusha
push
pushl
ret
ret
std
add
das
add
ja
imul
push
mov
sbb
stos
push
out
cltd
push
pusha
xor
xor
jb
cld
or
sbb
shrl
fstpl
pop
xlat
stc
adc
aaa
xor
aaa
cmc
or
std
leave
dec
cli
and
ret
mov
subl
adc
xor
mov
mov
inc
sti
dec
mov
xchg
xor
scas
jmp
lea
jb
push
pushf
pushf
pusha
pushl
ret
pusha
pusha
lea
jbe
bsr
sub
cmc
sbb
add
and
mov
cmp
bsf
shld
cmp
mov
sar
pushf
add
adc
add
inc
xchg
shr
shr
movsbw
sub
adc
mov
rcr
shld
add
movzbw
jmp
mov
push
stc
add
pusha
push
movw
lea
jmp
push
push
movl
pusha
pushf
lea
jmp
inc
xor
pop
popf
stos
inc
mov
je
dec
nop
dec
test
mov
xorl
in
pop
cmpsl
cmc
push
inc
sti
jns
xchg
outsl
push
in
scas
jl
xchg
pop
and
cmp
out
push
mov
pop
dec
scas
jecxz
xor
mov
inc
xchg
push
mov
push
mov
jp
shrb
insb
cmp
jns
sbb
pop
stos
ret
xor
sahf
pop
scas
fs
push
loope
out
ds
testb
out
out
rorb
mov
dec
shll
aad
jno
imul
and
pop
lcall
jmp
push
pop
leave
jmp
fnstenv
push
aas
in
aaa
sahf
dec
cmpb
mov
cmp
pop
out
fnstenv
fcoms
fsubrs
shll
mov
push
fdivs
mov
fisttpll
leave
pop
loope
test
pop
lods
dec
ret
xor
mov
aad
cli
pop
xor
push
cli
mulb
add
push
divb
movsb
push
push
movsb
imulb
lock
hlt
nop
into
push
or
aam
jnp
scas
test
xlat
and
dec
pop
mov
sbbb
sbb
adc
add
pop
test
fisttpll
sub
sub
pop
adc
push
xor
scas
adc
mov
lock
aaa
test
imul
mov
jae
xor
mov
mov
test
jmp
jg
movsl
adc
aad
or
sbb
jl
dec
mov
push
mov
xor
dec
mov
mov
dec
mov
push
add
popa
test
lock
pop
add
mov
subb
roll
xchg
add
divb
inc
cmp
movl
mov
imul
jmp
lea
jl
push
lea
jbe
mov
sub
xor
mov
bt
adc
mov
or
stc
rcr
shl
add
not
shr
dec
stc
btr
bsf
mov
and
adc
sar
add
bswap
bswap
mov
pusha
jmp
movl
pushf
lea
jmp
cmc
clc
pushl
and
call
push
call
push
push
inc
push
xor
cs
insb
add
or
test
xchg
lahf
test
push
rolb
repnz
sbb
add
xchg
dec
push
or
cmp
mov
adc
out
xor
mov
rcrl
lea
mov
add
lret
addr16
adc
jns
or
sahf
dec
mov
outsl
dec
aam
ss
inc
clc
ds
jp
pop
mov
mov
xor
or
or
and
jne
cmc
xor
rcl
sbb
stc
pushf
mov
jmp
push
popa
shrl
out
cmc
rclb
xorb
lock
sbb
pop
in
lock
not
add
push
aad
lods
xor
shll
out
ds
pop
out
std
add
shr
cmc
adc
int
pop
fistpll
je
cmp
dec
divb
fucom
leave
dec
fistpll
stos
sbbb
ret
xchg
inc
loop
fists
or
lret
dec
inc
lods
dec
nop
push
movsb
adc
outsb
aam
int3
add
ss
xor
xor
repnz
cmp
cmp
pusha
pusha
lea
ja
pushf
cmc
push
imul
stc
pusha
clc
add
movw
mov
pushf
pushf
lea
jmp
cmc
cmp
call
lea
je
bt
cmc
bt
call
stos
jmp
ljmp
sahf
mov
ds
push
loop
cmpb
fmull
pop
fld
ror
scas
or
stos
nop
repnz
in
inc
xchg
mov
sub
pop
dec
jl
mov
shll
jp
roll
or
hlt
in
aad
push
imul
jp
setg
mov
pop
fiadds
sbb
daa
sub
dec
stos
insl
pop
nop
sub
sub
and
or
sub
pop
mov
into
ret
xor
add
je
jo
add
ds
arpl
pop
sti
daa
jmp
fistl
negl
imull
pop
les
imul
mov
lret
add
stc
inc
or
fldl
mov
insb
xchg
inc
inc
outsb
popa
xchg
or
or
cs
or
mov
std
pop
cmc
mov
mov
out
or
sub
je,pn
je
push
mov
jl
inc
mov
xor
out
mov
pushf
pop
stc
out
jmp
jmp
notl
out
pop
movsl
idivl
mov
out
or
int
adc
inc
out
rclb
add
loope
ss
sbb
push
jbe
xchg
fs
jge
mov
out
or
pop
jns
push
and
and
push
out
lcall
ret
or
jg
mov
push
mov
jns
pop
lock
insb
hlt
je
push
mov
pop
stos
js
hlt
in
inc
dec
add
fwait
inc
jp
out
jp
jnp
das
and
sar
xchg
clc
in
fildll
imul
aam
repnz
pop
outsb
test
sahf
jns
insb
movsl
dec
icebp
popa
out
and
iret
and
sub
or
inc
jo
mov
push
stos
pop
scas
inc
sahf
insb
ret
xor
movl
lea
jae
bt
stc
clc
pushf
cmp
pushf
pushf
lea
ja
jmp
mov
movb
lea
jne
pusha
pushf
call
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
mov
sti
ds
pop
mov
outsl
andl
subl
cld
lret
shrl
faddl
mov
jp,pn
addr16
xor
scas
pop
pop
inc
imul
negb
cmp
pavgw
pop
jo
pop
pushf
and
ds
int3
cmp
push
aam
ret
xor
stc
or
xor
jns
mov
add
xor
fistpl
std
jo
xchg
hlt
aam
mov
addr16
fwait
test
add
in
ds
sub
decl
pop
rolb
push
stc
loopne
out
sti
sbb
cltd
jb
fisubrl
nop
xchg
out
inc
cmp
sbb
sub
lahf
inc
xchg
jns
popa
mov
aam
ljmp
ret
shl
adc
cmp
pop
mov
mov
mov
push
mov
xchg
jge
js
out
mov
or
jp
ret
int3
add
adcb
pop
or
dec
pop
xlat
push
iret
mov
xchg
mov
xor
maxps
aam
mov
jl
dec
lcall
mov
imul
int
or
lock
and
or
sub
pop
mov
es
inc
cmp
fimull
mov
out
loop
jb
roll
fsts
fidivs
pusha
popa
push
sbb
lds
jmp
idivb
faddp
add
add
or
push
sbb
mov
fldcw
shl
sbb
cld
dec
in
sbb
sub
sbb
fidivl
cmp
in
adc
pop
pop
adc
push
test
stos
inc
add
insb
ret
xor
clc
push
mov
pop
mov
push
leave
fldt
cmp
cmp
xor
push
inc
cmpsb
mov
adc
adc
xor
enter
dec
push
inc
data16
stos
and
stc
clc
sub
push
je
cld
idivb
jb
pop
mov
xchg
pop
xor
jg
movsb
dec
mov
cs
mov
push
cmc
sub
into
pushf
pop
pushf
dec
nop
xchg
mov
mov
clc
int
mov
and
shll
pop
lock
int3
add
push
enter
and
fcoms
xchg
push
add
sbb
mov
or
lret
xor
and
outsb
stos
mov
pop
inc
test
mov
jmp
ljmp
mov
cmp
loope
insb
xchg
pop
dec
mov
mov
test
dec
jno
push
xchg
jl
pop
scas
dec
xchg
xchg
fincstp
cmp
mov
adc
roll
rorl
mov
lret
add
call
push
movl
inc
cmc
jmp
pushf
call
not
not
jle
lods
clc
clc
pusha
stc
rol
pushf
jmp
pop
popa
mov
ror
hlt
in
dec
hlt
or
or
cmp
add
or
or
stc
cmp
cli
inc
inc
imul
popa
cltd
popa
xchg
sub
fwait
and
dec
insb
lods
and
jle
cli
xchg
sub
jg
les
xchg
clc
rcrb
cmc
fdivrs
aas
pop
push
cld
cmp
mov
data16
repnz
out
mov
jge
fisttpll
fsubrl
fmul
jae
jo
xchg
jnp
loop
sub
out
ret
pop
mov
adc
cli
inc
mov
xchg
dec
in
adc
shrl
nop
repz
jne
das
pop
push
les
jnp
iret
jbe
mov
in
test
stc
cmpsl
pop
movsb
ret
loope
xchg
mov
dec
mov
scas
adc
push
mov
stos
push
fcmovu
jnp
sbb
pop
loop
xor
popf
xor
jmp
xchg
mov
out
into
mov
xor
sub
or
mov
sbb
lods
subb
in
loop
mov
js
mov
xchg
shrb
push
xor
xchg
mov
mov
or
je
xor
mov
jae
mov
dec
out
adc
out
dec
and
testb
cmpsb
mov
lahf
xchg
in
outsl
inc
mov
bound
ljmp
in
mov
jp
jnp
add
mov
xchg
push
out
sti
mulb
mov
sti
sub
add
push
mov
jbe
ret
or
cmp
dec
stos
fs
ret
xor
mov
rcr
dec
loop
pop
jecxz
filds
mov
pop
cmpsl
inc
mov
jg
jp
mov
jle
adc
push
rclb
into
insb
push
leave
imul
push
dec
push
call
loop
lcall
inc
sarb
aam
aas
lds
fildl
cltd
mov
mov
xor
ret
xor
dec
mov
add
ret
adc
and
gs
call
mov
fcoml
jne
movzbw
lea
movb
movsbw
pushf
lahf
bswap
mov
movsbl
call
daa
push
mov
mov
ds
repnz
ds
dec
mov
ss
ja
aad
pusha
lret
jns
dec
pop
nop
fiadds
xchg
test
divl
cmp
in
adc
add
sub
sub
stc
jnp
mov
lahf
jo
repz
xchg
mov
repnz
testl
sarl
mov
xchg
jae
xor
ret
push
and
and
cmp
push
subl
jg
ret
xor
sti
aas
loope
xor
addr16
inc
xchg
pop
test
sub
xor
xchg
jb
aad
rolb
movsb
sbb
mov
xchg
mov
dec
mov
inc
daa
stc
out
cmp
das
xchg
ret
mov
shl
ljmp
mov
loopne
push
test
dec
dec
mov
pop
add
insl
test
imulb
push
rolb
push
sbb
xor
adc
ret
sarb
lahf
icebp
push
enter
std
pop
lret
repz
push
dec
movsb
xchg
cmp
aaa
clc
pop
in
sbb
sbbl
cmp
cmpsl
jno
sahf
jns
cmp
add
sbb
adc
scas
inc
test
pusha
iret
loop
sub
adc
cmp
sbb
mov
imul
loopne
cmc
fld1
repnz
sbb
test
mov
jp
push
mov
push
sbbb
jecxz
or
ds
sbb
or
loope
xchg
xor
and
insl
lcall
add
sbb
cs
jle
xchg
push
inc
mov
sbb
ljmp
lcall
into
out
in
jne
push
jmp
adc
rclb
sti
xor
loopne
negb
jl
addl
dec
stos
stos
mov
hlt
faddl
out
popa
shld
mov
aaa
movb
testl
mov
xor
cmp
push
mov
pop
stos
xor
cs
cmp
es
ss
cmp
inc
fwait
arpl
and
je
rcll
cs
add
sar
iret
xchg
sub
in
sub
loope
adc
dec
sbb
loopne
xor
pop
scas
adc
mov
sub
fsubrl
push
pop
jge
gs
icebp
sbb
jmp
testl
out
xor
cmpsl
inc
addl
ret
or
sbb
dec
nop
insb
xchg
push
movsb
js
sbb
sub
out
cmp
ljmp
iret
xor
or
test
lcall
lea
fldenv
das
shlb
lea
jle
sub
sub
and
daa
outsl
mov
lds
jmp
pop
std
aaa
cmpl
xor
pop
movsbw
mov
pushf
lea
jmp
or
loop
aam
cmpsb
movsl
push
xchg
dec
mov
push
into
xor
std
aas
mov
mov
jl
iret
dec
xlat
negl
cmp
cmp
insl
and
repnz
adc
sbb
xor
push
dec
pusha
loop
cmp
shll
outsb
jp
popa
out
setae
jno
leave
mov
pusha
jl
mov
inc
xchg
cmpb
nop
push
jb
push
movsb
adc
rolb
ret
xor
neg
pushf
lea
call
call
lock
push
add
stos
popf
push
cmp
cmp
inc
repnz
push
ljmp
jmp
das
fnstcw
push
int
push
ds
scas
pop
scas
pop
pushf
push
inc
or
xor
jbe
les
popf
adc
pop
aas
sbb
shll
in
xlat
stc
fucomip
or
pop
xchg
mov
lret
clc
cmp
aas
das
jge
mov
push
or
xchg
mov
pop
push
xchg
outsl
mov
jbe
mov
xor
clc
test
cmpsb
movsb
outsb
outsl
inc
inc
add
dec
push
jl
in
xchg
fs
loope
repnz
inc
nop
jle
xlat
and
xchg
fimuls
sub
cmpb
jns
lods
xchg
cltd
imul
popf
jg
push
pop
mov
in
pop
mov
jns
fmulp
and
pop
popa
sbbl
rclb
or
xor
mov
push
test
xchg
fs
pop
mov
inc
mov
mov
pop
mov
jge
outsl
cmp
lds
adc
mov
addb
mov
and
jle
push
hlt
es
into
adc
stos
orb
xor
sub
fldcw
add
in
ret
xor
pop
movsbw
pop
movsbw
bswap
call
cmp
movb
jmp
lea
jl
ja
ror
sar
adc
sub
sbb
sub
bsf
stc
add
shl
movzbw
cmp
sar
mov
cmc
mov
jmp
jmp
call
inc
xor
mov
jp
jp
push
mov
ds
sub
add
mov
mov
out
xchg
in
and
adc
xchg
inc
xchg
inc
cmpsb
push
subb
push
out
fisttps
pop
add
mov
mov
dec
pop
sbb
ja
ja
mov
inc
inc
xchg
pop
mov
xorb
pop
jne
in
dec
pushf
test
testb
stos
jne
jb
inc
mov
movsb
sub
pop
mov
push
ljmp
pop
les
xor
jne
pop
mov
data16
xor
ds
in
lcall
pop
in
xor
jb
les
fidivrl
xor
mov
mov
xor
popa
adc
cmp
ljmp
or
push
xchg
push
xor
xbegin
and
testl
dec
in
jmp
cmpsl
sbb
xor
cltd
mov
test
data16
lahf
sbb
fnstenv
jmp
sbb
sbb
lcall
movsb
mov
inc
repz
cmp
fldt
out
add
fsubrl
adc
test
adc
fsubl
xchg
insb
ds
or
fptan
adc
push
mov
xor
shrb
push
das
clc
aad
and
icebp
aaa
or
hlt
test
jns
inc
mov
inc
lods
or
and
add
in
sub
pop
int
in
fsts
in
pop
insl
and
mov
mov
xchg
fadds
jl
ret
and
ret
xor
fsubp
in
mov
aam
lods
xchg
mov
mov
push
mov
popa
mov
je
jne
mov
ss
in
push
mov
lea
xadd
pusha
out
adc
fcmovnu
in
inc
bound
add
icebp
jmp
mov
repnz
bound
push
sbb
shlb
jb
stos
rep
faddl
push
mov
inc
lahf
dec
lahf
jne
popa
mov
jns
add
jge
jb
icebp
and
sbb
push
lahf
push
stos
inc
xchg
pop
jmp
lds
or
inc
jne
jp
std
or
ss
and
sbb
lret
lcall
stc
or
cmp
fldenv
clc
icebp
addr16
imul
fcomi
fs
pop
xchg
or
push
mov
fldl
xchg
into
inc
insb
mov
xchg
inc
lcall
inc
adc
ret
xor
out
shr
mov
push
dec
inc
dec
xor
cs
insb
add
sbb
add
in
jecxz
cmc
aaa
ja
mov
das
rcrl
repz
fistpl
iret
pop
repz
loope
push
in
mov
es
xor
lret
pop
hlt
cld
mul
rcl
les
sbb
xlat
int
iret
inc
pop
movsb
pop
flds
or
cmp
dec
je
mov
loop
push
cwtl
dec
mov
scas
dec
shll
mov
fwait
insl
fwait
icebp
or
jmp
and
and
pushf
inc
insb
outsb
mov
mov
pop
iret
sbb
inc
mov
fwait
jno
popa
jne
sub
xor
jae
sub
mov
mov
pushf
movl
mov
mov
pushl
ret
jmp
call
jmp
ds
lcall
sub
das
ljmp
jmp
xlat
pop
leave
cmp
aam
pop
stos
ss
insl
lahf
test
lock
icebp
sub
jecxz
xchg
ds
fldenv
xchg
js
pop
scas
adc
add
in
inc
ret
push
xor
aam
scas
adc
adc
jno
inc
movsb
daa
xorl
clc
in
xchg
or
xchg
out
test
fstpl
sarl
std
sbb
pop
aad
mov
mov
xchg
push
out
sti
dec
or
mov
mov
jnp
pop
mov
sub
mov
cmpsl
in
push
repz
out
dec
pop
cltd
dec
rcl
inc
mov
adc
out
lret
cs
iret
in
push
bswap
out
fldcw
lds
mul
sbb
and
jno
dec
test
scas
pusha
mov
mov
xchg
mov
add
pop
aad
std
sbb
xor
sub
pop
int
xor
mov
adc
int3
mov
test
je
pop
nop
push
mov
xchg
pop
adc
loope
jge
push
sbb
push
subb
mov
pop
mov
mov
call
mov
adcb
ja
mov
mov
add
dec
sbb
rorb
cmc
pop
push
les
add
adc
stc
in
xchg
xchg
add
in
and
lods
clc
stos
in
sub
xchg
jns
sub
cmp
cwtl
cmpsl
or
in
loope
aad
loope
in
pop
ret
xor
gs
rol
stc
pushf
mov
jmp
ret
in
in
aas
xor
gs
jnp
jnp
arpl
pop
fbstp
lret
inc
outsb
fdivs
xor
pop
add
xor
sub
in
sub
call
outsl
jle
leave
je
lods
pop
std
pop
sarl
rolb
xchg
mov
in
cmp
and
test
dec
pushf
push
ret
xor
push
loope
movsb
not
movzbw
not
jmp
xor
and
mov
ss
xor
adc
adc
push
mov
xor
jecxz
rcrl
arpl
add
add
pop
pop
fwait
mov
pop
cmp
movsl
lea
jmp
insl
add
testl
cli
xchg
mov
pop
xchg
data16
jb
push
outsl
daa
jmp
mov
push
mov
aad
fstps
in
ffree
xor
scas
inc
outsb
pop
mov
in
and
ds
add
sbb
sbb
push
lret
sbb
mov
je
lahf
divb
bound
cmp
fdivs
jl
fcompl
adcl
mov
inc
mov
clc
pop
jae
shll
into
ficompl
jbe
and
cmpsl
insb
jnp
jle
pushl
rorb
iret
das
iret
aas
ja
scas
in
or
addb
les
pop
cmpb
xor
das
shr
test
add
movb
movl
push
push
call
js
cmc
sbb
push
addr16
jo
and
insb
test
enter
test
les
aaa
les
add
cmp
test
inc
push
push
movsb
push
gs
popf
out
pushf
inc
mov
mov
jge
ss
test
xor
fcomps
jae
lea
mov
inc
test
flds
icebp
xor
aas
ret
xor
inc
insb
sar
stos
adc
fidivl
push
cmpsl
imul
filds
out
and
xor
lock
ret
inc
into
lods
test
je
sbb
movsl
lock
iret
adc
xchg
mov
fcomi
sbb
adc
mov
cmpsl
pop
dec
iret
push
lods
pop
daa
icebp
add
inc
push
jbe
addb
pmullw
movsl
push
mov
jnp
arpl
xor
enter
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
stos
popf
add
out
testb
ds
sbb
mov
dec
adcb
lock
mov
je
pop
repz
pushf
scas
cmpsb
sub
sbb
and
xor
xchg
je
shl
and
or
sbbl
clc
xadd
and
psllw
popf
adc
xchg
jne
loop
xor
add
xor
adc
out
insl
aas
xor
add
and
xor
cmp
adc
push
cmp
mov
or
sahf
dec
fsubl
push
shr
nop
ffree
and
ret
xor
fwait
insb
inc
cmp
add
add
dec
jb
xchg
fisubrs
ficomps
imulb
fimull
cli
je
out
or
add
aaa
xchg
aad
mov
pop
mov
cmp
cmp
push
xchg
inc
lods
inc
scas
js
mov
data16
dec
push
popf
mov
sti
dec
jnp
out
enter
inc
test
inc
dec
xlat
das
xlat
sub
mov
mov
test
test
inc
lock
push
in
dec
insb
fisubl
cmovns
mov
and
fwait
ds
or
or
or
add
xor
dec
mov
adcl
or
or
and
jl
jle
xchg
stos
sub
push
scas
es
mov
mov
popf
inc
adc
data16
cmpsb
jl
and
cmp
xor
adc
sub
fidivrl
or
push
rcr
out
in
sub
cs
ret
xor
fsubs
stc
jmp
mov
or
xor
popa
inc
test
aad
std
sbb
das
cmc
insb
andb
dec
notl
adc
jne
xchg
sti
pop
push
cmpsb
mov
or
ffreep
stos
repnz
insl
xor
out
fnstenv
shlb
inc
mov
loopne
sub
dec
xchg
inc
cwtl
push
hlt
dec
nop
and
fdivr
mov
shll
loop
xor
ficoms
mov
push
fiadds
adc
ja
sub
ror
mov
add
std
inc
std
shr
arpl
pop
mov
push
test
test
cmp
sub
pop
xor
inc
push
xchg
jbe
adc
jecxz
movsl
in
lcall
push
out
push
xchg
popa
jge
mov
out
lret
and
sub
ret
xor
xchg
popa
pushl
push
adc
movb
call
adcb
xchg
push
movsl
inc
std
xor
out
test
ds
enter
sarb
call
les
xor
xor
push
xchg
sub
cmp
pop
lahf
jno
imul
in
and
push
imul
push
mov
xor
les
xor
sbb
addr16
xchg
jmp
les
pop
lds
and
lods
inc
scas
inc
scas
jo
inc
mov
sti
and
lods
out
into
adc
mov
mov
or
adc
ret
xor
lods
xchg
dec
lcall
cmp
ja
negl
pop
scas
jo
cmp
mov
adc
sbb
or
lret
mov
push
push
dec
and
sub
js
mov
lcall
inc
mov
idivl
mov
out
cmp
mov
xor
jae
jae
pop
xchg
jg
sbb
je
in
adc
sahf
pop
mov
hlt
adc
adc
or
add
and
js
cmp
loope
dec
jns
cmp
or
pop
out
dec
mov
stos
aas
fldpi
int
push
insb
bound
sub
repz
xor
shlb
cmc
push
ret
jo
outsl
clc
shlb
scas
int
adc
les
shll
dec
popf
inc
mov
adcl
imul
addr16
mov
bt
mov
mov
inc
mov
bt
pushl
cmp
pushf
xor
pusha
call
mov
pop
mov
jp
sub
out
sti
pandn
cmp
pop
out
sub
cmp
sub
ffreep
adc
cmp
fidivrl
sti
test
in
aas
and
addl
add
jbe
mov
cmpl
dec
mov
mov
dec
call
arpl
mov
ja
push
jnp
bound
pop
pushf
push
mov
push
nop
xor
adc
jb
xor
add
test
mov
lea
jne
push
mov
jmp
sbb
adc
aad
and
dec
xchg
outsb
mov
jp
inc
adc
scas
cmp
shr
add
out
jae
test
cmpsb
push
ljmp
ss
xor
add
push
jae
cmpb
mov
divl
jle
mov
in
rorb
sbb
std
lods
jmp
rcll
jne
mov
xchg
stos
pop
push
jne
inc
dec
dec
mov
subb
pop
jne
pop
cltd
inc
mov
inc
cltd
daa
jmp
addb
lea
ja
call
jnp
sti
or
leave
add
xchg
mov
data16
ret
and
mov
enter
lock
sub
shlb
ljmp
sbb
xchg
insl
push
pop
add
popa
es
andb
in
cmp
fisttpll
adc
push
add
fwait
or
cld
int3
push
mov
xchg
insl
mov
cltd
mov
pop
mov
sub
adc
xor
pusha
ja
sahf
inc
inc
lods
mov
mov
fxch
and
cmp
xchg
mov
rcl
add
dec
and
or
fimull
jl
and
pusha
inc
mov
sbbl
gs
lea
repz
jne
adc
sub
jnp
hlt
push
hlt
in
jge
shr
push
in
adc
pop
push
sub
das
add
je
dec
scas
ret
cmp
adc
cmp
in
push
imul
rolb
les
and
lods
rcl
testl
or
or
or
mov
scas
dec
sahf
inc
mov
pusha
mov
in
data16
add
pushf
mov
jnp
dec
stos
imul
lods
pop
pop
jnp
xor
outsl
frstor
pextrw
fidivrs
cltd
jns
or
clc
ljmp
fbld
ds
cmp
sbb
loopne
xor
pop
pop
lods
je
add
sub
adc
mov
push
jge
and
stos
clc
inc
pop
aad
jbe
push
in
cld
push
call
xor
jb
data16
push
fsubrs
das
loope
pusha
js
push
cld
dec
pushf
push
adcb
jl
jl
clc
shll
rol
movsl
test
nop
jnp
daa
ret
and
push
outsl
mov
jbe
jg
ds
sbb
notb
add
ja
jle
fildl
xlat
dec
cmp
ret
ret
xor
sti
or
fs
ja
rcl
add
shl
call
js
lock
lret
dec
jp
dec
mov
add
roll
pop
leave
push
mov
push
lock
mov
jo
xlat
jae
iret
adc
movsl
scas
or
or
cmp
cld
mov
xor
xor
roll
jb
insb
in
ja
pop
jle
shr
repz
movsl
loop
xchg
mov
jl
shrl
push
ds
repnz
cmp
inc
lods
ret
loope
or
aad
repnz
add
leave
aad
push
mov
xchg
jnp
and
aas
lds
fisttpll
fld
xor
xchg
dec
push
push
inc
push
push
cs
insb
add
out
sub
add
sbb
push
xchg
and
xor
jmp
notb
adc
or
dec
filds
aad
addr16
push
jp
test
insb
lcall
xor
out
or
cwtl
pop
fdivrl
je
daa
in
aas
jmp
add
sub
and
mov
xchg
sub
aas
pop
lods
mov
pop
mov
hlt
jb
inc
or
fmul
ljmp
and
and
in
xchg
jmp
pop
jg
nop
sub
mov
and
mov
rorb
sbb
or
xor
sbb
dec
idivl
and
scas
or
inc
fs
inc
nop
or
in
in
int3
sub
cmp
xor
inc
pusha
mov
cmp
mov
loopne
add
jl
jbe
subb
or
and
jecxz
jecxz
sarl
in
aad
fstl
int3
jmp
push
int3
cmp
add
outsb
push
dec
xchg
xor
sbb
ja
jne
add
pushf
mov
xchg
jecxz
mov
pop
in
hlt
es
outsb
xor
pop
jmp
mov
push
cmc
repnz
movb
pusha
call
lea
call
jmp
add
push
gs
gs
jae
inc
popa
jo
jne
gs
add
pop
push
inc
push
rol
call
or
jbe
xchg
push
push
test
imul
pop
mov
out
sbb
mov
movsb
jno
in
jo
adc
imul
bnd
cs
jmp
mov
mov
stos
jp
ret
add
sahf
dec
leave
negl
gs
mov
pop
imul
sbb
and
xor
sar
es
lods
sub
mov
inc
cmpb
xchg
mov
ret
xor
je
cmp
jmp
test
adc
mov
cmpsl
outsl
adcl
out
pand
pop
ret
sub
inc
subl
xchg
popa
xchg
mov
int
dec
fists
stos
lcall
loop
xlat
lret
mov
ds
mov
ret
lret
dec
aaa
inc
pop
lret
mov
sbbb
add
jl
push
inc
shr
mov
into
xor
xchg
or
adc
shlb
pop
cmpsl
pop
jecxz
xchg
mov
or
notl
lret
add
ret
ret
xor
cwtl
cmp
popa
xchg
lcall
lock
xor
movsb
pop
mov
test
nop
mov
dec
arpl
xchg
mov
fcmovne
lcall
loope
fwait
xor
test
cli
rol
sbb
imul
pop
inc
jns
in
js
xchg
dec
bound
js
rcrl
xor
mov
inc
pushl
mov
cmp
cmp
push
mov
iret
insl
cmpsl
imul
dec
movb
shl
call
movsl
jmp
loop
popf
pop
arpl
jg
pop
lret
pandn
iret
jae
pop
sbbl
dec
push
idivl
ss
and
dec
sbbb
cmp
lret
xlat
clc
or
daa
add
cmc
jmp
sub
push
subl
js
add
sub
testb
out
jbe
xor
xchg
push
test
jae
jg
js
pop
pop
mov
mov
jns
sbb
jecxz
ret
xor
pop
ja
pop
mov
add
lahf
test
push
cli
and
cmp
jle
or
out
xor
cmp
lds
jl
stos
stos
pop
stos
dec
xchg
jnp
jg
call
push
incl
or
fcomip
stos
push
testl
push
jno
jmp
sbb
xor
and
out
daa
sub
jl
pop
push
mov
fnsave
sarl
cltd
imul
cmp
xor
popf
addr16
mov
les
pop
ret
xor
sub
push
pushl
ret
cmp
movb
push
lea
jb
clc
test
pushf
cmp
jmp
xchg
cli
and
cmpsb
cwtl
mov
push
mov
nop
pop
mov
mov
and
push
cli
add
ret
jnp
cmpsb
mov
je
sub
iret
jns
sbbl
xor
pop
lret
pop
mov
mov
enter
cld
cmc
pop
loop
push
pop
dec
cmp
test
mov
mov
inc
cmpsl
sbb
out
sub
or
sbb
add
or
ret
xor
xorb
and
jae
cmc
call
or
lods
push
and
ljmp
data16
inc
lea
sti
and
js
pop
pop
mov
sahf
movsb
jne
int3
xchg
movsb
roll
jmp
ss
xchg
adc
mov
sub
imul
ds
pop
icebp
shrl
mov
push
movsb
push
call
mov
adc
sub
add
ret
xor
mov
lea
jns
je
stc
bt
sub
jmp
pushf
int
icebp
adc
push
lds
mov
bt
sti
adc
das
jmp
lea
ds
cmc
out
into
sbb
scas
es
rcrb
sahf
inc
jmp
push
xor
or
sbb
cli
cli
push
mov
lods
mov
fcmovne
movsl
call
rclb
pmuludq
and
test
cmp
cmp
push
cmpsl
inc
fwait
jge
ret
xor
ret
cmp
shrb
add
mov
lret
mov
mov
out
adc
adc
daa
xlat
sbb
aaa
sti
sbb
cltd
jg
ljmp
jl
loope
ds
pop
ja
ja
cmp
lahf
movsl
mov
xchg
pop
ds
fldl
clc
int
int
ss
push
jp
mov
xor
mov
cwtl
jb
popf
ja
popf
sti
sub
cs
pop
xchg
push
andb
mov
ret
xor
mov
mov
xabort
cmp
add
and
dec
pushf
je
pusha
lods
jle
xchg
adc
fsubrl
jae
in
push
xchg
mov
aaa
push
sbb
test
push
test
cmp
jecxz
icebp
aaa
es
popf
mov
lahf
adc
in
iret
sbb
mov
pop
lahf
ret
xor
xlat
and
inc
lret
sbb
or
outsb
stos
outsb
mov
xchg
inc
mov
cmp
xor
cmp
or
leavew
push
dec
scas
mov
mov
sbb
sbb
jmp
outsb
popf
repnz
popf
cli
jmp
scas
je
jo
mov
mov
clc
ror
sub
xor
jnp
jg
mov
xchg
jmp
frstor
lahf
and
pop
push
mov
movsb
outsb
mov
outsl
pushf
push
out
push
mov
push
sahf
and
jo
and
cmp
xor
je
bt
repnz
pushf
call
js,pt
xor
adc
push
push
subb
xchg
bound
sbb
push
ljmp
cltd
jnp
stc
mov
xor
lds
mov
push
test
popa
dec
mov
test
dec
dec
outsb
sbb
jl
inc
cmp
ret
jecxz
jecxz
cmp
adc
xchg
jbe
stos
test
into
and
fmuls
jle
data16
pop
mov
arpl
mov
push
lea
push
cmp
divb
pop
pop
sbbb
xchg
dec
xorb
data16
sti
pusha
movw
push
lea
jae
call
bswap
push
setns
lahf
not
mov
lea
pusha
pushl
call
jmp
inc
mov
cld
add
hlt
adc
and
inc
cld
adc
ja
mov
add
divl
testl
xchg
jne
mov
push
stos
insl
xchg
iret
sbb
or
testl
jnp
scas
xchg
xor
mov
aas
or
sub
push
ljmp
bound
xchg
aad
push
adc
js
out
push
out
dec
hlt
movsb
inc
mov
sub
sbb
leave
xor
sbb
sub
jbe
push
test
jb
ret
xor
aam
popa
pop
adcl
divl
sub
repnz
outsb
xchg
push
mov
push
push
jmp
nop
dec
sahf
dec
push
shll
test
idivb
xor
mov
nop
push
mov
leave
roll
xchg
mov
test
xor
movsl
out
lea
lock
sub
in
sahf
pop
pop
mov
pop
mov
sub
ret
xor
jns
call
lea
jne
and
jmp
jmp
add
mov
pusha
clc
and
call
movl
pusha
jmp
and
loop
cwtl
mov
les
and
add
cmp
or
sub
sbb
repz
or
add
cmp
xor
dec
cld
mov
xlat
daa
cmpsb
fld
out
shll
or
je
out
es
int
or
inc
push
lea
inc
mov
jno
ficoms
cmpsb
push
mov
xorb
in
mov
fisubrs
bound
mov
ret
xor
fdivr
aaa
popl
stc
stc
cmp
push
call
test
xchg
pop
repz
pop
mov
mov
mov
sbbl
mov
cmpl
cmpsb
mov
pop
movsb
pop
cld
cmp
xor
inc
xchg
push
dec
scas
mov
enter
xor
inc
shr
aad
ljmp
xchg
int
iret
and
xor
aam
sbb
adc
stos
out
out
jns
in
lcall
fistps
sar
push
pusha
daa
or
andb
decb
xchg
xor
loop
pop
mov
fstpl
jae
jae
adc
int
dec
mov
rclb
es
pop
jne
xchg
pop
mov
mov
mov
cwtl
lock
inc
loope
add
fidivs
sub
enter
frstor
loop
out
push
out
jle
or
and
jo
adcl
into
les
loopne
xchg
adc
xlat
jmp
lahf
xorl
dec
mov
cmc
cmp
sbb
xchg
sub
in
push
jnp
gs
push
mov
xor
jecxz
jg
iret
aas
hlt
data16
movsl
jl
cmp
inc
mov
sbb
xlat
std
iret
imul
mov
jl
lcall
push
add
daa
ss
jge
lods
mov
dec
sbb
cs
xchg
ja
pop
lea
push
xchg
sub
cmp
out
xlat
ret
xor
movsl
sub
fs
jne
stc
and
rcr
sub
bswap
inc
mov
add
setne
add
dec
neg
bt
inc
mov
jmp
std
test
pop
cmpsl
shrl
sbb
push
cli
inc
cli
dec
mov
jp
pop
mov
mov
xchg
jo
xchg
cmp
pop
insb
push
adc
mov
and
or
hlt
pop
pop
xor
or
shrb
sub
sbb
mov
push
mov
imul
mov
enter
iret
movsl
in
subl
mov
push
xchg
jb
push
movsb
fadds
int3
push
shrb
in
rol
xor
stos
mov
stos
jg
mulb
fstl
fisttpll
mov
xchg
repz
dec
xchg
jns
lds
jae
jb
imull
adc
and
fsts
and
es
jmp
stos
insb
xchg
mov
jnp
pop
jmp
inc
mov
jecxz
negl
pop
lahf
and
cmpsl
cmp
out
mov
out
jp
xchg
or
inc
test
mov
cld
rcrl
fsubrl
faddl
call
jp
inc
pushf
ret
xor
aam
dec
dec
inc
xor
cs
insb
add
jae
call
inc
dec
dec
inc
dec
inc
xor
cs
insb
add
mov
cs
jecxz
shlb
push
nop
jl
pusha
sbbb
adc
or
adc
push
jnp
mov
jl
test
nop
push
pusha
in
fnsave
enter
rcr
sub
xor
push
mov
out
sti
out
loop
loop
popf
bound
or
jle
jg
je
push
lea
call
data16
inc
test
mov
pushf
outsb
test
cld
and
ret
xor
test
jnp
or
push
jnp
inc
mov
jae
inc
scas
lgs
sub
aad
mov
jne
lea
out
and
sub
clc
cmpsb
dec
and
es
aad
cmp
imul
inc
dec
pop
add
and
mov
cli
js
subl
mov
repz
test
data16
lods
push
pop
nop
inc
movsb
ret
xor
fsubp
stc
test
cmp
call
push
mov
mov
movb
pushl
ret
pop
push
sub
adc
add
or
je
insb
mov
mov
popa
mov
jb
mov
int3
or
movsl
call
test
push
jl
push
lods
dec
mov
aam
pop
ds
cmpsl
xchg
outsl
inc
lods
clc
popf
mov
sti
mov
mov
enter
xor
lcall
mov
out
sbb
adc
lods
imul
and
lcall
leave
rorb
sbb
in
xchg
outsl
mov
dec
stos
fcompl
popf
leave
in
jmp
mov
or
test
repnz
das
or
jl
jl
dec
mov
loop
mov
movsb
or
jp
lods
sub
sbb
cmpl
je
jns
out
cwtl
cs
and
clc
popf
mov
repz
add
popf
addr16
xchg
jae
xor
add
pushf
dec
pushf
ror
pushf
call
pusha
cmp
mov
clc
sub
clc
pushl
popl
jmp
rol
jmp
mov
pushf
lea
call
pushf
pusha
pushf
jmp
jmp
jp
sbb
pop
xchg
dec
je
mov
dec
mov
inc
xchg
adc
fnstenv
js
lds
mov
add
jg
adc
and
loopne
or
add
add
test
stc
imul
shlb
add
rcr
jbe
inc
stos
icebp
pop
sbb
jb
jb
jns
pusha
cmpsb
mov
add
add
sub
cmp
adc
and
dec
add
pop
add
cmp
pop
dec
and
in
cmp
xor
rorl
adc
orb
add
xchg
add
sbb
dec
ljmp
or
jmp
int3
fisubl
loopne
mov
adc
sub
jmp
add
aad
jg
push
cmp
xlat
cmp
das
sarl
jg
outsl
test
inc
ret
xor
mov
cmp
rcll
mov
jne
pop
popf
pop
mov
jge
ds
shrl
lcall
mov
aam
fnsave
jge
imul
jp
xchg
fmull
cld
std
in
xor
pop
aam
xor
dec
push
xor
cld
add
repz
test
and
sub
jnp
lcall
nop
pop
xor
out
cltd
cmpsb
push
scas
gs
popf
mov
mov
hlt
mov
xchg
jle
ret
xor
in
sbb
sbb
xor
or
push
insb
pop
lods
dec
mov
sbb
and
dec
icebp
aaa
int
push
repz
cmp
jo
mov
jl
xor
scas
jecxz
sbb
std
aad
add
sub
subl
inc
aaa
jge
add
add
test
imull
mov
pop
mov
push
mov
mov
sti
cmp
shll
iret
or
jg
xchg
test
nop
jp
out
sbb
int
cli
xor
pop
xchg
inc
lcall
lods
push
pop
push
sub
sub
push
pop
imul
xchg
pop
pop
je
xchg
sbbb
jl
xchg
xorb
or
xlat
sub
repz
fstl
addr16
push
jo
outsl
sbb
lds
int
iret
ljmp
ficoms
fidivrl
adc
pusha
mov
pusha
mov
xor
cmp
jmp
jmp
into
adcb
push
pushf
mov
daa
mov
das
jecxz
fistpll
in
add
lds
jg
dec
imul
sahf
push
sbb
sarb
jne
imul
cs
ja
fmulp
sub
sbb
jecxz
xchg
aam
into
push
mov
jecxz
negb
jne
jl
dec
cmp
popa
mov
mov
sbb
jp
fwait
pop
adc
les
mov
jae
jg
push
mov
inc
xchg
dec
mov
and
push
jo
push
add
inc
xchg
mov
cmp
fnstsw
shll
lock
in
pop
dec
test
mov
inc
xlat
call
sub
sbb
ror
sub
mov
fadds
enter
loopne
in
push
les
int3
ds
inc
ret
xor
sbb
jae
mov
ljmp
add
int
cmc
in
xor
add
pop
movsl
jg
or
jae
jg
lret
jbe
enter
fimuls
lods
jnp
test
decl
jg
mov
adc
xchg
bound
sub
out
out
push
notb
test
inc
inc
cwtl
cltd
mov
lods
out
idivl
push
dec
and
pop
push
cmp
negl
inc
xchg
pop
xchg
inc
movsl
arpl
pmaddwd
ret
xor
jg
mov
add
mov
jne
and
dec
mov
mov
adc
loope
leave
dec
push
repz
sbb
push
mov
outsb
ret
loop
and
ret
imul
or
repz
dec
mov
xchg
popa
sahf
jge
mov
lods
xchg
sub
dec
lahf
repz
cs
xchg
test
jne
fldt
fldcw
xor
push
add
and
pop
cmpsl
sub
push
push
clc
out
pop
mov
data16
inc
or
loope
pop
mov
cmpsl
jne
leave
xor
push
mov
adc
dec
mov
test
fwait
mov
cmp
mov
out
jg
mov
xor
pushf
cs
and
int
mov
lahf
and
rol
add
loopne
int
out
add
xor
test
lea
jnp
outsb
mov
popa
pop
sti
xor
jp
les
pop
mov
jo
ret
sti
sub
cltd
arpl
jmp
add
hlt
ss
xchg
movsl
xor
xchg
gs
lock
clc
or
push
in
jecxz
es
add
or
jb
es
push
xorb
and
jbe
pushf
mov
mov
push
jmp
jmp
or
pop
in
sub
jb
dec
mov
dec
subb
cmp
and
adc
mov
imul
stos
sbb
enter
cld
sub
pop
push
sub
pop
popf
arpl
push
lods
addr16
pop
and
stc
stos
repnz
cmp
fists
mov
sub
dec
ljmp
sti
aas
aad
push
rol
mov
mov
xchg
outsl
jbe
sub
sub
add
dec
insl
xchg
test
add
das
lcall
mov
push
lcall
add
rclb
insb
lea
mov
mov
sub
or
ret
xor
scas
pop
adc
into
sbb
xorl
xchg
inc
lcall
push
dec
movsl
cmp
add
leave
mov
xchg
mov
mov
pop
dec
xchg
mov
sub
sub
push
push
xchg
mov
cs
out
out
sub
popa
mov
pop
and
mov
mov
cmp
xchg
mov
sub
add
out
jno
push
pop
mov
inc
cld
fsts
sbb
sbb
icebp
cmc
aaa
lock
stc
and
xor
or
nop
int3
dec
mov
sub
mov
jns
es
sbb
and
ret
xor
stos
mov
pushf
push
call
pusha
call
call
push
ja
pop
mov
and
cld
pop
nop
pop
mov
pop
mov
outsb
mov
addr16
loop
dec
cmp
pop
pop
mov
sub
mov
adc
sub
enter
adc
push
out
cmpsb
mov
mov
ja
push
pop
aad
je
mov
sub
cmp
cmp
add
sub
fs
inc
mov
ljmp
fs
imul
add
dec
mov
call
and
incb
loopne
aam
lea
mov
xlat
jae
dec
mov
dec
fwait
mov
mov
jno
loopne
mov
pop
jo
stos
addb
xor
in
mov
mov
mov
push
and
or
mov
cltd
mov
pop
test
xlat
and
jo
shll
add
pop
cld
outsl
arpl
mov
mov
push
mov
xor
add
sbb
ret
xor
lods
jecxz
cmp
aas
sub
jp
jge
mov
pop
loopne
loopne
clc
cmp
xor
pop
lods
jno
fsts
lret
lcall
aad
xchg
pop
hlt
pushl
push
jns
jge
leave
loope
xchg
push
dec
mov
repnz
jb
or
jecxz
add
mov
and
xor
sbb
je
mov
dec
mov
cmp
aam
dec
notb
or
pop
and
adc
and
xchg
fidivrs
pop
outsb
fs
sbbb
push
mov
jl
xor
xor
pushf
push
lea
jne
push
movl
pusha
pusha
lea
call
pusha
push
pusha
lea
jmp
test
mov
bt
clc
mov
cmp
push
pushf
stc
sub
movl
pusha
rep
jmp
or
fucomp
loop
mov
push
cltd
pop
lds
push
mov
and
add
sti
mov
movsb
mov
ret
in
adc
cmp
sub
push
sub
push
test
divb
int3
jmp
bound
jne
nop
outsl
pushf
jb
or
mov
movsl
mov
jbe
ret
stos
xchg
and
insb
or
push
pop
test
mov
jmp
xor
loope
movsl
bsr
addr16
arpl
xor
sbb
xchg
rorl
cld
lret
and
mov
mov
push
mov
cmp
pop
arpl
inc
xlat
and
in
repnz
lcall
into
add
cmp
adc
call
int
sub
daa
setne
pop
dec
jg
or
push
ds
test
push
in
das
add
dec
xchg
scas
adc
add
adc
add
xor
xor
dec
outsb
fdivrl
and
sarb
ljmp
or
cmp
xlat
sub
jo
cwtl
push
jl
shrb
in
std
cmp
insl
pop
dec
mov
call
jle
aad
bound
cmpsb
sbb
xor
clc
jns
loopne
mov
int
add
push
push
mov
ja
and
fnstcw
xlat
cmp
sbb
notl
xor
iret
movb
call
clc
call
mov
lea
jne
lea
cwtl
movsbw
push
movb
pusha
mov
call
or
lods
stos
add
shlb
in
xor
and
sbb
cmp
or
enter
xchg
in
es
or
enter
sub
mov
shl
or
inc
cmpl
cmp
cmp
xchg
lahf
cmpl
daa
loopne
and
incb
inc
and
ret
add
jp
and
ds
hlt
xor
jae
mov
mov
jge
pop
mov
testl
mov
lea
push
lea
call
jmp
add
not
xadd
sub
shld
rcl
setb
shrd
shr
rol
sar
mov
shrd
add
rol
xor
add
movsbw
inc
or
bsf
mov
stc
shr
bt
cmc
cmp
bt
cmp
pusha
lea
je
clc
test
jmp
mov
sbb
pop
jmp
inc
outsb
scas
sbb
mulb
out
sbb
filds
sbb
fstpt
pop
je
jp
aaa
add
cmp
loope
push
es
ret
jmp
es
and
out
and
lahf
push
stos
testb
dec
fwait
dec
pop
or
or
cmp
into
or
cmp
inc
mov
cwtl
dec
mov
bound
sbb
int
inc
or
pop
mov
out
pop
fildl
out
mull
sbb
sbb
int3
xor
jae
cltd
outsb
lret
or
push
dec
cmc
dec
int3
out
fucomp
arpl
push
aas
clc
out
cmp
or
jge
inc
fidivl
shr
mov
cmpsl
mov
loope
test
jp
data16
xchg
mov
lret
out
push
loopne
enter
in
call
ret
xor
xchg
mov
xchg
pusha
pushf
lea
mov
jmp
cmp
mull
popf
cmp
stc
xor
sbb
cmc
and
xor
fwait
popa
push
or
or
mov
enter
pop
add
and
shrb
fsubrl
in
repnz
int
sbb
or
push
cli
fisubs
shrb
dec
mov
add
in
push
repz
push
push
dec
test
movsl
rorl
aam
mov
mov
nop
ffreep
jb
pushf
nop
data16
mov
aam
and
data16
and
jo
push
mov
jmp
aad
jmp
jmp
call
cmp
pusha
lea
je
stc
cmc
cmp
pusha
lea
je
push
lea
jmp
push
cmp
jl
dec
dec
add
mov
inc
xchg
sub
xor
add
aam
and
popf
dec
dec
cmp
xchg
jp
or
and
mov
movsb
inc
jno
sbb
dec
xor
fimull
movsl
out
adc
aad
and
add
mov
mov
xchg
pop
xor
fxtract
dec
testb
out
mov
dec
xchg
cmp
shrb
cmp
fstpt
xlat
ret
or
sti
insl
jmp
mov
ret
xor
push
fcomps
mov
in
movb
jo
inc
lahf
popa
mov
xchg
addr16
and
sub
adc
xor
xor
adc
jmp
mov
add
xlat
push
xchg
jp
dec
mov
add
out
sbb
or
mov
mov
adc
icebp
or
or
and
loop
xor
xor
lret
sub
fdivrs
in
outsl
mov
icebp
dec
jl
and
vpshad
sub
xor
lahf
bound
jnp
cmpsb
xor
jo
testb
or
or
and
lods
subl
ja
push
cmc
pop
rorl
stc
daa
ret
xor
addr16
call
jle
lock
out
sub
xor
cmp
sub
or
es
jo
mov
dec
shll
cmp
mov
sti
dec
ss
imul
mov
push
jle
pusha
dec
in
lds
cld
in
dec
ljmp
fst
push
jecxz
inc
mov
jp
mov
icebp
mov
cmpsb
mov
jmp
xlat
sbb
mulps
inc
xchg
cmp
in
getsec
aad
imul
outsb
push
adc
and
lds
std
cwtl
lahf
pop
fsub
push
out
dec
add
mov
push
loopne
outsb
test
and
clc
mov
fstp
mul
mul
enter
push
mov
movsb
push
jmpw
andb
dec
xchg
push
lcall
dec
xchg
clc
stos
lahf
jne
aad
push
inc
sub
into
lock
sbb
cmp
call
or
sbb
xor
sub
repz
dec
mov
packssdw
ret
fisubl
mov
ret
xor
add
push
rol
shr
sub
mov
cmp
cmpb
call
lea
add
pusha
push
lea
jmp
call
pushf
call
and
cmp
aam
adc
loope
icebp
adc
ror
push
pop
and
xor
dec
ds
out
sbb
xlat
daa
aad
dec
xor
xor
push
pop
pop
sub
cli
and
cmp
cmp
xchg
mov
jl
xchg
lds
xchg
mov
subl
and
fnsave
bound
jno
or
shl
push
xlat
cli
inc
or
adcb
xchg
insb
scas
push
fiadds
ret
dec
jns
inc
sahf
fsubs
inc
and
dec
pop
xlat
ud0
jmp
ret
aas
testl
nop
fldl
iret
scas
lds
ficompl
cmp
sarl
shll
add
lods
pop
ljmp
sub
ljmp
ja
inc
outsl
jle
movsl
xor
jp
add
push
rclb
mov
inc
insb
xchg
outsb
mov
fcomip
pop
fsts
test
pop
mov
cltd
dec
mov
xor
leave
jmp
andb
repz
pop
xchg
dec
mov
repz
cwtl
push
lahf
jl
jns
pusha
popa
push
sbb
in
je
xor
xchg
mov
addr16
scas
mov
pop
xor
lock
and
repnz
lahf
xchg
je
jl
pop
mov
and
in
lods
jae
jnp
pop
popf
imul
ret
xor
push
mov
jmp
pushf
pusha
lea
jne
bsf
xor
bswap
movsbw
adc
mov
clc
add
call
pushl
add
pusha
pushf
mov
push
lea
jmp
call
movl
pushf
lea
jne
mov
jmp
jp
out
jb
shlb
je
jb
outsb
xchg
outsb
mov
mov
or
ljmp
mov
ja
adc
repz
icebp
push
sarl
xchg
and
pop
lahf
pop
dec
lods
add
inc
dec
ja
push
inc
lods
push
orl
pop
ljmp
out
sub
jmp
ret
xor
test
mov
arpl
nop
je
je
jo
sub
jo
and
mov
jp
cmpsb
int
cld
jge
fmull
shll
lret
pop
jecxz
add
leave
ror
daa
filds
test
cmpsl
inc
js
jno
repnz
ljmp
insl
xchg
cmpl
lret
dec
data16
ds
and
leave
inc
fmuls
xor
loope
icebp
outsb
and
addr16
lds
pop
cmc
pop
add
add
enter
decl
scas
inc
cmpsb
push
cli
inc
mov
xor
sbb
push
into
fnstsw
push
ss
negb
adc
or
cmp
or
mov
dec
sbb
mov
inc
scas
insl
aaa
jmp
and
mov
push
fistps
jge
dec
dec
fs
iret
outsl
adcl
cmp
out
add
xor
cmc
fidivrl
xchg
mov
popf
ja
xorl
daa
dec
jle
out
sub
adc
pushf
out
xlat
mov
jle
pop
xchg
jbe
push
mov
gs
mov
daa
out
es
mov
mov
mov
and
pop
gs
das
ds
push
loope
push
jmp
adc
ret
sub
mov
inc
sub
out
sub
leave
mov
cld
ja
jecxz
pop
jl
mov
sti
or
js
jns
insl
cwtl
and
scas
pop
fwait
jno
dec
mov
imul
sub
xchg
jl
outsb
jp
pop
pop
and
cmp
push
xchg
push
into
and
dec
mov
jns
push
push
and
cld
sub
aas
xor
jecxz
ja
ja
aam
scas
xchg
or
jb
dec
outsw
test
pushf
addl
test
fcomi
loop
rcr
mov
cmc
and
in
das
push
sbb
mov
jp
push
les
out
cld
and
movb
dec
nop
pop
cld
inc
test
mov
lock
add
xor
dec
mov
call
bt
clc
cmp
call
pusha
test
call
pushl
mov
lea
jb
pusha
test
movb
cmp
pushf
mov
call
xlat
fwait
dec
xorl
arpl
and
fiaddl
fisubl
push
jp
pop
test
test
jg
xchg
push
mov
xchg
insl
inc
dec
subb
jno
mov
mov
inc
pop
mov
into
loopne
enter
push
addr16
adc
dec
jns
xchg
xorl
mov
sbb
jge
sbb
sti
movsb
ret
pop
cld
sbb
and
js
push
dec
mov
imul
fcoms
cmp
xor
mov
aas
icebp
add
pop
cmp
cmc
sub
xor
dec
test
sbb
mov
mov
jo
xchg
push
aad
add
pushf
inc
pushf
inc
mov
inc
add
mov
cltd
inc
jb
jge
outsl
rcl
pop
loope
loop,pn
scas
rorl
jnp
rorl
repz
add
or
cmp
sbb
mov
mov
insb
imul
lods
xchg
push
mov
rclb
xor
das
stc
lcall
dec
popl
xchg
dec
mov
imul
sar
xchg
sub
lret
add
aas
mov
rorb
sbb
or
jae
aas
std
pop
int
cmc
pop
std
cmpsl
jge
in
test
ret
enter
pop
mov
je
xor
cmp
mov
xchg
dec
sub
test
or
or
inc
stos
pop
mov
test
jno
stos
rorb
xor
xchg
mov
lock
sub
fwait
mov
lahf
mov
lock
push
shrb
adc
cmpb
int
test
sub
mov
mov
insb
inc
xchg
jnp
pop
popf
push
movsl
ja
adc
daa
std
aaa
ret
xor
dec
adc
xor
test
push
adcb
ret
dec
cmpsb
pop
xchg
jb
mov
jg
jle
pop
fs
mov
xchg
adc
scas
mov
mov
cmpsl
push
inc
ljmp
lcall
mov
push
jmp
cmp
fisubl
xchg
inc
jg
lret
ret
das
clc
int
sub
stos
push
das
adc
sahf
sub
push
cld
xor
in
cmp
es
in
je
out
and
out
add
sub
xor
sbb
ret
sbb
adc
inc
lcall
dec
xor
cs
insb
add
mov
faddl
pop
cmpsl
out
lret
fidivl
mov
ss
push
loop
faddp
adc
mov
mov
pusha
hlt
add
hlt
cmp
pop
insb
data16
pop
daa
into
arpl
jg
pop
sbb
sbb
out
sub
ss
mov
movl
xchg
mov
mov
pop
stos
jbe
in
stc
ror
test
in
fldenv
and
xchg
pop
xorb
cmp
cmp
dec
iret
sbb
divl
pop
xchg
pushl
add
pushf
lea
jmp
cmp
pushf
inc
subb
xor
jno
gs
popa
xchg
popa
lods
inc
movsl
incl
sti
nop
outsl
test
xchg
outsb
lret
dec
add
insl
jg
mov
jno
sub
cmp
or
sbb
rol
fcmove
and
popf
outsb
xchg
outsb
xchg
sub
notl
mov
mov
push
xchg
jb
inc
mov
ret
xor
inc
mov
fildll
mov
orl
jle
or
sub
rol
xor
add
bsr
setnp
cmc
inc
mov
add
shl
neg
shl
mov
bt
pusha
repnz
pushf
push
lea
jne
lahf
movb
movzbw
setno
jmp
cwtl
daa
lret
das
jmp
fwait
lods
pop
mov
pop
subb
mov
inc
xchg
mov
jge
jnp
xchg
dec
shl
or
test
or
dec
cmp
aam
out
push
and
or
push
pop
jne
sbb
sub
scas
lret
sbbl
fisubs
cmp
xlat
xor
and
or
dec
dec
push
cmpsb
in
add
mov
mov
std
mov
out
out
fs
add
add
adc
add
stos
insb
dec
jnp
jle
cmpl
and
adc
xor
jae
in
roll
sti
xor
jae
and
dec
mov
outsl
xlat
sub
daa
adc
or
mov
addr16
cmpsl
dec
pop
loop,pt
jb
mov
push
cmp
cli
jmp
xor
sbb
pop
and
std
ljmp
xchg
mov
jp
leave
adc
jmp
es
sbb
xchg
aam
or
cmp
mov
xchg
xor
iret
cmp
cwtl
test
add
add
inc
inc
insb
gs
outsb
jne
add
leave
pushf
jmp
adc
lods
jo
or
add
push
stc
sub
add
cmp
sub
xchg
arpl
ljmp
shrl
pop
scas
popa
js
fisttpl
and
stos
lds
sub
sub
into
add
fs
mov
imul
movb
out
xor
push
call
sbb
addb
loopne
xor
mov
pushf
add
sbb
hlt
adc
sub
xor
or
cmp
xor
adc
scas
decl
ss
xchg
aad
add
in
pop
xor
xor
outsb
mov
aam
xor
jns
fcmovne
das
pop
push
lret
xor
cs
lock
rolb
in
fwait
imul
movsl
jnp
scas
js
cmpsl
mov
dec
mov
ja
pop
cmp
push
fxch
or
cmp
repz
sbb
lret
xor
sti
cli
ror
push
mov
pop
dec
pushaw
adc
jge
push
outsl
popa
mov
and
push
sbb
ds
daa
shl
int
pop
cmc
in
rol
cld
dec
mov
das
jp
bswap
jmp
aaa
clc
cs
cld
cmp
loopne
jae
mov
je
adc
das
add
lea
mov
mov
sti
cmc
daa
xor
leave
mov
mov
jae
and
shll
and
or
jno
push
mov
xlat
or
push
cli
add
mov
stos
pop
test
dec
push
sbb
in
sbb
mov
mov
pushf
orl
xor
cmp
push
add
ret
fwait
mov
push
and
movsb
hlt
adc
cs
cs
push
loopne
hlt
ret
xor
xchg
mov
cmp
sbb
adc
test
movsl
pop
pop
loop
xchg
and
pusha
inc
xor
iret
pop
aad
leave
outsb
ror
and
paddusw
or
je
pusha
scas
pusha
cmp
xor
fwait
jo
inc
test
sub
repnz
mov
mov
inc
adc
and
ret
adc
mov
cli
xor
testb
inc
adcb
push
mov
sbb
rorl
sahf
je
push
icebp
and
icebp
insl
dec
mov
pop
fcomi
dec
lds
sbb
loopne
push
call
pop
pop
outsl
cld
add
mov
outsl
mov
inc
scas
push
mov
sbb
int
rorl
sbb
out
xor
scas
inc
in
and
jp
push
jmp
lds
fstl
movsl
push
cltd
outsl
mov
add
pop
mov
pop
pusha
hlt
or
jo
iret
or
mov
push
xor
jmp
cmp
add
xor
ljmp
int
int
fisubrl
loope
jmp
lret
and
insl
stos
jno
jge
jno
imul
dec
pushf
repnz
pushf
lea
jne
pushf
pop
sete
movb
pusha
pushl
mov
setb
call
movl
pushf
pushf
xchg
call
sub
lea
pusha
jmp
icebp
mov
cltd
pop
cmp
repnz
adc
lret
das
imull
fistpl
jmp
mov
sahf
pusha
jno
jmp
xchg
mov
jp
sub
loope
jmp
adc
sti
es
mov
push
cld
or
push
push
mov
pop
pop
cmpsl
mov
fs
xchg
inc
xchg
dec
in
les
stos
leave
js
lds
enter
jecxz
pusha
and
popf
jp
xchg
jbe
push
mov
sbb
adc
xor
push
jb
imul
rcll
scas
jae
imul
xchg
pop
lea
std
in
fcoml
daa
dec
mov
add
add
inc
push
cmpsl
insb
pop
call
outsl
jle
cmp
addb
subl
sbb
sub
and
pop
fstps
int
std
and
inc
ret
xor
xor
push
xor
jo
mov
fldl
loope
in
flds
rol
cmp
out
ret
fdivrl
jle
leave
loope
pop
inc
lea
in
xor
or
in
cmp
push
out
sti
scas
cmpl
scas
mov
cmp
jae
xlat
adc
fwait
mov
push
and
pop
xor
imul
lret
jmp
dec
sub
dec
icebp
lods
mov
iret
adc
sarl
xlat
or
sahf
push
inc
popf
inc
popl
leave
test
clc
push
in
cmc
mov
rolb
inc
mov
pop
sbbl
xor
xchg
fs
stc
jp
shl
gs
xchg
ret
aas
fisttps
mov
sub
or
adc
sbb
and
xor
sbb
inc
ret
xor
cli
xor
add
icebp
fnstsw
neg
clc
push
pushf
shr
call
jmp
subl
xor
push
stc
xor
int
stc
sbb
mov
sub
fcoms
add
pop
pop
int
lock
mov
aaa
sub
jno
and
add
or
xor
cmp
cmpsb
and
nop
lds
mov
add
mov
lcall
popf
daa
xor
sub
push
mov
mov
mov
mov
inc
mov
xor
mov
into
or
dec
jae
push
push
scas
adc
ds
and
sub
es
push
rolb
xchg
jns
push
or
push
out
repnz
lahf
pop
out
or
or
je
fiaddl
xor
subb
adc
jl
test
fstpl
push
lods
into
xor
pushf
imul
insl
xchg
pop
in
mov
mov
popf
pop
popf
pop
mov
mov
std
frstor
movsl
stc
and
sub
mov
ror
shl
cmp
shld
mov
pop
mov
shr
shr
sar
add
mov
clc
bt
mov
mov
bsf
mov
push
bt
or
pushl
lea
je
pushf
clc
or
pusha
push
lea
je
rol
xor
movzbw
mov
mov
xchg
cmc
rcr
mov
clc
test
shr
cmc
movsbl
mov
clc
call
or
std
ja
mov
jp
cs
adc
push
ljmp
scas
in
adc
outsl
popf
in
fucom
mov
adc
loop
ss
cmp
call
jnp
pop
jne
lea
aad
sar
add
in
jecxz
cmc
jecxz
mov
mov
xor
and
lret
add
sbb
pop
hlt
cmp
cmpsb
aam
ss
pop
in
mov
xchg
jg
imul
or
jmp
dec
pusha
mov
cs
and
clc
adc
inc
clc
sbb
adc
or
ss
aad
addr16
push
cld
xchg
js
xor
inc
mov
iret
cmp
das
scas
mov
pop
push
pop
cs
cmc
dec
mov
push
gs
jg
lds
mov
aad
jecxz
add
out
orl
in
sbb
add
out
add
into
fsubs
pop
movsl
pop
leave
sub
psllw
loope
loope
xor
movsl
jno
or
lods
sbb
sub
sbb
cmp
add
or
cmp
sub
scas
pop
xchg
jge
jb
jg
adc
cwtd
in
add
leave
mov
xchg
push
test
xchg
mov
or
fisttps
aas
aas
push
jmp
or
inc
mov
xchg
cmp
xor
arpl
xchg
fdivrl
sbb
push
rorb
xor
sbb
cs
aam
ret
xor
movsl
test
add
jmp
sbb
daa
idivl
out
sub
inc
imull
sbb
jns
add
lds
sbbl
iret
adc
xor
js
out
push
xor
cmp
sbb
sbb
pop
cmc
sub
shrb
xchg
addl
adc
fucomip
cmpl
jbe
pop
lods
push
lods
pop
xchg
out
and
pop
cs
cmp
xor
fisttps
testl
cmpsl
cltd
inc
subl
imul
stos
addr16
stos
imul
aaa
aas
sbb
or
scas
pop
jl
cwtl
repnz
loope
push
jle
leave
jae
jno
mov
fcomi
nop
pop
add
je
or
int
rep
inc
movsb
dec
pop
insl
jl
or
adc
xor
stc
pop
cmc
pop
lds
jmp
aaa
mov
xor
psubb
cmp
call
fcmovu
add
sbb
pop
stc
ja
mov
xchg
jp
jb
jb
outsb
mov
xchg
inc
leave
inc
and
cli
nop
jl
inc
fadd
and
sub
pop
adc
push
inc
cli
pop
fistl
push
jbe
mov
sub
and
in
sbb
inc
cli
rcrb
ret
ds
hlt
aaa
je
cmpb
xchg
stc
in
jnp
push
sub
sub
loope
jns
mov
pextrw
pop
cmp
or
pop
mov
fld
jecxz
add
mov
mov
pop
xchg
dec
mov
xor
cli
cmp
pop
adc
popa
sbbl
add
sti
xor
cmp
aas
jecxz
out
stc
and
shlb
xor
adc
pop
sti
pop
pop
cli
inc
shl
lea
inc
sbb
mul
sub
adc
xchg
sti
lret
sub
push
add
sub
fs
mov
out
fcomi
pop
jne
dec
inc
inc
cmpsb
inc
xor
lea
je
pop
xchg
jo
and
cmp
repnz
aad
mov
bswap
and
or
sub
aaa
repz
roll
jno
in
repz
cmc
int
scas
push
or
sbb
lcall
sub
jns
adc
jmp
faddp
cmp
jne
lcall
jp
repz
testl
out
test
mov
sub
popf
mov
fwait
jnp
in
push
cld
cmp
sub
dec
mov
inc
lods
data16
ret
xor
aad
cmp
shld
mov
push
cmp
test
pusha
cmpb
movw
pusha
lea
js
jne
pusha
aad
aad
inc
sub
shld
not
das
mov
cmc
movb
jmp
push
lock
std
std
mov
outsl
pop
mov
ret
jg
clc
mov
ret
and
pushf
mov
pop
or
xchg
out
pop
mov
push
call
insl
aam
push
lret
add
loopne
and
test
push
xchg
test
imul
xchg
and
outsb
or
clc
in
dec
mov
scas
and
lods
xchg
cli
mov
enter
loopne
jmp
sbb
dec
inc
adc
iret
aas
xlat
jmp
in
sbb
loope
jne
jecxz
scas
cmovo
fdivl
in
out
push
inc
shll
cwtl
aad
aas
push
add
sti
shll
neg
and
add
in
pop
pop
lret
pop
inc
outsb
jg
outsb
push
dec
adc
std
lea
cmp
xor
and
cmpsb
sbb
call
inc
repnz
xchg
inc
test
mov
enter
cld
push
shrb
xor
out
fldenv
hlt
adc
out
mov
push
inc
cli
push
ljmp
push
addr16
and
gs
addl
xor
mov
fldt
and
xor
repz
test
lods
add
and
in
iret
fwait
cmp
decb
pop
mov
xchg
adcl
dec
imul
clc
movsb
cmc
add
cmp
add
cmpl
shlb
push
cwtl
jp
xchg
cs
aam
int3
adc
xor
test
call
leave
pushl
fistps
sub
lahf
mov
mov
icebp
jno
adc
aad
jae
rcll
popf
testb
xchg
push
xor
push
sub
jp
dec
aas
rcl
clc
loopne
stc
out
inc
sbb
test
testw
aad
mov
pop
inc
movsb
pop
push
cmpsb
rclb
and
leave
adc
fistps
mov
inc
mov
xor
ss
gs
out
scas
jecxz
and
push
ret
push
into
jb
bound
mov
out
daa
fnsave
jecxz
push
mov
and
adc
mov
cli
jecxz
jne
push
std
jge
and
push
xchg
test
sbb
shlb
arpl
mov
inc
lea
push
mov
pop
leave
aas
rol
xor
push
cltd
outsb
and
jnp
add
add
sbb
jle
push
mov
or
icebp
rolb
mov
sahf
dec
jae
dec
ds
addb
mov
mov
ds
push
lcall
or
insb
outsl
ljmp
cli
iret
cmp
adc
or
sub
iret
daa
cmp
out
push
jbe
jo
add
and
and
add
mov
insl
xchg
mov
mov
sub
ret
gs
out
mov
mov
adc
daa
sarl
xor
xor
leave
and
shr
iret
add
sub
pop
shll
stc
loopne
xlat
sub
adcl
add
mov
cmp
pop
aaa
adc
push
ss
ss
push
les
mov
fnsave
or
lcall
aam
jg
test
ret
xor
fistps
ds
jp
push
cmp
push
push
mov
pushl
lea
ja
cmp
cmp
pushf
stc
sub
movb
stc
cmp
test
add
add
pushf
pusha
pushl
movb
lea
jmp
cwtl
sahf
inc
mov
sub
xor
in
and
add
adc
inc
xchg
inc
mov
nop
icebp
jae
mov
sbb
ss
stc
gs
stos
mov
test
je
stos
scas
popf
call
popa
fwait
and
outsb
insb
arpl
jp
xchg
and
dec
fdiv
in
into
and
cmp
loopne
mov
push
rclb
sbb
hlt
es
jecxz
xchg
push
popl
jns
add
jmp
jmp
xor
xchg
rol
push
mov
pushf
test
mov
lea
je
jmp
lret
ja
inc
ret
xor
out
sarl
out
aas
mov
addr16
cmc
cmp
mov
jns
clc
loop
addl
sti
adc
xchg
inc
stos
pop
ja
dec
mov
xchg
ds
pop
push
das
mov
inc
mov
icebp
push
xchg
pop
cwtl
mov
mov
mov
aaa
mov
or
push
nop
addr16
sbb
shrb
das
std
xchg
iret
push
sbb
negl
mov
testl
xor
dec
xchg
push
mov
call
fsubrl
xor
pop
lods
jo
js
enter
mov
push
mov
test
pop
dec
mov
pop
jmp
pop
xchg
adc
mov
imul
push
xlat
fs
out
pop
jbe
push
lret
jecxz
movsl
out
fstp
jl
sub
lret
aad
lods
sbbl
psrlw
int
icebp
pop
jmp
movsb
pushf
pop
cmp
and
int
in
in
stos
popf
push
cmpb
mov
mov
sbb
xchg
jbe
aas
hlt
fucomp
mov
pop
fwait
mov
cmp
es
or
subl
faddl
cmp
push
ds
push
xchg
jg
pusha
insb
mov
push
add
lret
dec
xchg
jb
push
mov
jb
pop
mov
xor
clc
divps
lea
mov
jmp
in
mov
cli
mul
sbb
add
sub
repnz
xlat
into
add
shll
mov
test
into
adcl
add
or
movl
dec
push
icebp
push
fisubs
xchg
lret
add
xchg
mov
cmp
and
xor
xchg
xor
inc
xchg
sub
adc
add
cmp
xor
xor
mov
xchg
ja
inc
popf
xchg
std
mov
hlt
or
sbb
cmp
xor
and
and
mov
sbb
cmp
sub
mov
mov
mov
dec
and
int
fmulp
cmp
lock
fadds
hlt
push
test
lea
push
sub
arpl
in
jle
ds
repz
por
mov
sbb
lock
ret
xor
sbb
and
ja
cmc
stc
cmc
sub
cmc
cmc
stc
add
pushf
lea
jmp
or
insb
cmpb
rclb
add
or
push
enter
inc
pop
xor
push
out
jg
mov
fiaddl
add
add
in
sar
fisttps
scas
mov
sti
fldt
push
push
mov
mov
fstpl
pop
lods
into
and
mov
pop
movsb
inc
sarb
mov
and
enter
out
pop
xchg
mov
ret
xor
push
pushf
push
mov
lea
jae
bt
rcr
mov
ror
mov
jmp
push
mov
dec
int3
cli
in
int3
adc
sub
or
pop
test
pop
fwait
sti
rcll
cmp
jg
nop
imul
jns
lea
mov
stc
lret
mov
incb
inc
push
scas
pop
fnstcw
loopne
cmp
xor
sahf
leave
rcl
adc
add
sub
pop
mov
push
mov
xor
or
jb
push
jg
rcl
pop
call
xor
push
mov
gs
push
push
subb
mov
into
imul
or
sahf
repnz
lcall
mov
std
lods
mov
daa
fsubs
rcll
xchg
xor
cmpsl
movsl
into
adc
sub
fwait
jnp
stos
adc
lret
fs
cltd
jnp
push
popf
and
aaa
aad
fnstenv
cmc
adc
xor
test
dec
daa
imul
jnp
mov
and
jbe
es
add
lcall
nop
outsl
movsl
std
lods
sbb
jle
arpl
rorl
mov
inc
repnz
push
dec
sub
testb
sub
jmp
or
sbb
cli
add
mov
push
clc
daa
inc
cld
add
fwait
inc
subl
adc
aam
in
clc
aad
leave
subl
xorl
das
lea
jmp
xor
pop
loopne
push
cmpl
int
pop
push
xchg
mov
test
inc
popf
push
in
out
insb
fimuls
pop
stos
shrb
cmp
lahf
mov
lods
mov
jmp
push
subl
rcll
pop
jns
or
fsubs
loopne
lea
in
cld
mov
jmp
jge
pop
xchg
jge
dec
testl
push
mov
into
comiss
and
lret
frstor
rclb
mov
inc
mov
xlat
frstpm(287
jbe
xor
xchg
test
xchg
icebp
and
ffree
jo
push
push
pop
mov
loope
out
out
mov
or
std
adc
rolb
add
push
repnz
push
sbbl
xchg
push
test
push
xchg
jmp
mov
or
popf
outsl
icebp
loopne
lahf
and
xor
out
push
icebp
and
adc
test
cltd
icebp
stc
fisttpll
and
and
mov
mov
call
stc
fdivl
jg
adc
sbb
sbb
pop
adc
or
icebp
sbb
jge
xlat
push
adc
scas
mov
or
push
mov
or
mov
adc
jmp
add
add
push
fisttpll
dec
jns
mov
rclb
sbb
call
mov
jecxz
jecxz
jecxz
loopne
sbb
sbb
aad
dec
std
out
pop
sbb
push
lea
in
and
or
and
sub
std
and
jns
std
sbb
popa
rolb
sbb
cwtl
and
cmc
std
add
push
sub
iret
popf
in
shl
pushf
iret
loopne
fdiv
sbb
sbb
xchg
insl
sar
and
push
push
or
leave
pusha
notl
adc
push
jecxz
jecxz
jecxz
fcompp
clc
frstpm(287
lock
and
dec
sarl
adc
push
push
adc
push
in
push
sub
push
push
test
sbb
mov
push
rclb
adc
push
andl
sbb
inc
push
in
or
add
adc
int
lret
cltd
fsubl
lcall
lcall
dec
jge
and
add
push
push
mov
lods
jl
add
arpl
push
mov
mov
push
xlat
mov
and
rcrb
cltd
and
adc
lds
jecxz
adc
loope
cmc
mov
js
ljmp
cmc
push
pop
jmp
push
xlat
sub
ss
dec
sbb
int
xlat
stos
out
stos
push
mov
cmp
push
pop
ljmp
or
or
or
inc
cmpsl
mov
mov
or
mov
mov
mov
inc
and
inc
jns
sub
loop
add
fcomip
sti
xchg
std
sub
mov
lods
mov
xor
jb
add
and
adc
dec
stos
icebp
pop
repz
jmp
jl
imul
xlat
inc
shll
push
sub
inc
or
mov
and
sbb
mov
sub
es
adc
mov
arpl
mov
je
popa
fistpl
flds
adc
jmp
lods
rcl
movsb
adc
aad
sbb
push
rcrl
cwtl
and
adc
xchg
adc
sti
jae
push
sbb
sub
pop
mov
mov
cmpsl
sub
mov
cmp
movsl
jg
cli
and
and
xor
stos
inc
hlt
in
push
sub
sahf
mov
ret
loope
and
mov
sbb
sbb
mov
movsl
stos
mov
test
push
cmc
sahf
in
hlt
inc
mov
xchg
test
inc
mov
adc
insl
mov
adc
sub
call
stos
sbbl
andb
xchg
inc
addb
arpl
bnd
inc
dec
pop
xlat
std
sub
popf
repz
add
xchg
sahf
shrl
jnp
mov
jl
loop
pop
pop
out
sbb
xchg
sbb
lds
cmpsb
cmp
xor
push
sahf
fisttps
and
push
jbe
dec
mov
push
movsb
mov
sub
cltd
jnp
les
pop
cmp
ficomps
mov
enter
insb
pop
jmp
sbb
mov
ret
sahf
loopne
push
movl
ret
lock
and
add
and
xchg
jnp
pop
outsl
push
xor
fbld
pushl
dec
xchg
dec
cmp
xlat
scas
mov
imul
stc
pop
loope
lods
mov
inc
cltd
aam
and
sub
test
test
lods
adc
call
repnz
pop
or
cmc
mov
mov
push
js
insb
add
repnz
rorl
cld
pop
arpl
sub
sti
push
jg
mov
shll
xorb
imul
pusha
mov
adc
xor
rcrl
sbb
fisubs
mov
cmc
sti
mov
cmpsb
lret
mov
bnd
out
stos
fmull
and
loopne
cli
fnstcw
aad
jecxz
add
and
xchg
pop
pop
fiaddl
add
pop
ja
push
lahf
sbb
adc
pop
fdivrs
pop
dec
pop
popa
sahf
inc
mov
test
lods
mov
xchg
pop
inc
clc
test
xchg
scas
repz
cltd
movsl
in
cmc
stos
inc
nop
sub
jg
sti
sbb
mov
cmpsl
es
mov
add
popa
jo
xlat
jb
into
add
jg
xchg
ror
mov
das
mov
aas
and
clc
mov
fcomp
push
arpl
loop
xor
pop
or
adc
icebp
loope
or
mov
scas
mov
inc
mov
loopne
adc
pop
in
enter
enter
add
ret
lds
insb
mov
cli
add
dec
fwait
mov
dec
cmc
pop
or
loope
mov
rorb
sbb
dec
js
pushf
in
icebp
mov
cmp
mov
push
sub
fstpl
shr
adc
repnz
pop
arpl
pop
mov
hlt
mov
adc
cltd
xor
sbb
pop
jmp
hlt
movsl
jae
test
aad
ljmp
nop
pop
out
lods
test
cwtl
hlt
mov
into
jae
and
shlb
inc
mov
sbb
sub
andl
enter
push
sub
add
inc
and
sbb
arpl
lods
repz
add
and
push
cmc
loope
aad
sbb
adc
jno
sbb
mov
jg
icebp
lahf
inc
inc
xchg
rcl
loopne
mov
mov
and
or
push
and
sub
mov
pop
bound
add
popa
cmpsl
in
test
cld
mov
mov
jns
pop
fdivs
push
mov
push
pop
or
jg
mov
sbb
std
xchg
loope
insb
test
mov
jno
push
push
sbb
pop
sub
mov
jne
push
jle
arpl
int3
mov
mov
roll
sbb
call
cmc
shlb
rcll
jg
pushf
bound
pop
shrb
shl
mov
inc
push
sbb
rolb
mov
fistpl
or
nop
stos
test
jge
loop
push
push
sub
in
xchg
pop
scas
and
dec
rorl
push
ret
hlt
test
mov
sti
shll
movmskps
push
mov
xchg
and
sbb
les
dec
xor
fisubs
cmpsb
shrl
clc
jno
outsb
add
mov
jae
je
mov
pop
jbe
mov
and
icebp
pop
pop
inc
inc
sarl
dec
popf
xchg
in
insl
fdivs
sub
sbb
bound
shl
cld
nop
loopne
lods
cmp
mov
fwait
dec
sbb
mov
push
out
lds
add
bnd
movsb
sub
cmp
daa
pop
xchg
mov
cmp
out
shrl
pusha
push
or
fwait
pop
pop
mov
mov
std
iret
pop
jbe
imul
dec
lret
sbb
cmpsb
lds
mov
push
lret
push
mov
pushf
adc
xlat
xor
insb
js
xlat
ss
pslld
sti
or
inc
test
jle
loope
outsl
jae
pop
hlt
or
xor
fnstcw
fists
pushf
lods
sbb
mov
cld
jne
push
imul
mov
and
scas
pushl
sti
xchg
mov
js
add
jle
push
sahf
pop
pop
jnp
cmp
outsl
inc
jg
ret
sub
push
jle
into
mov
outsb
sbb
out
add
fbld
inc
icebp
sbb
test
or
mov
fwait
pop
pusha
xor
mov
cmpsl
push
and
push
inc
shlb
stos
jb
shl
sarb
pop
push
push
call
gs
jae
jno
push
cmp
fwait
aad
mov
inc
pushf
addr16
nop
xlat
inc
mov
lcall
testl
rcrb
inc
mov
lods
push
add
dec
sbb
sub
rorl
and
popf
mov
out
push
and
jnp
or
mov
repnz
jg
js
lret
sbb
or
lahf
jno
cmp
inc
cmp
push
cmp
stos
mov
cmp
sub
scas
push
cmc
inc
xchg
and
shrl
cmpsl
xchg
and
test
loope
icebp
push
dec
and
popf
cmp
adc
dec
aad
adc
xlat
cltd
or
fcoms
fsubl
pop
or
repz
adc
adc
lock
icebp
test
loop
push
das
jp
jg
xor
std
mov
jle
mov
jns
add
push
inc
mov
repz
mov
aas
test
pop
hlt
push
out
adc
pusha
inc
or
mov
mov
popa
add
pop
je
sbb
and
gs
jge
out
dec
inc
jns
mov
lea
cmc
mov
jnp
xchg
or
loope
mov
mov
adc
push
outsl
pop
pop
pop
cmc
into
mov
mov
jne
sbbb
fcmovb
pop
mov
lods
push
or
or
aad
test
xor
mov
gs
xchg
lods
dec
icebp
fs
and
loopne
add
shll
dec
or
xchg
in
stos
add
jne
lds
mov
mov
clc
or
push
jno
sub
ljmp
popf
mov
dec
cs
sahf
lea
or
aad
cmc
testb
jl
inc
sbb
aad
arpl
mov
cmpsb
inc
and
popf
jge
mov
repnz
inc
mov
mov
scas
test
push
adc
push
adc
push
or
pop
lds
aad
mov
jb
in
mov
sub
iret
lcall
or
xchg
or
push
jp
lds
scas
mov
cmp
inc
inc
pop
ret
mov
cmp
mov
or
std
mov
insl
xchg
sti
xchg
mov
xlat
cltd
xchg
pushf
out
push
cmc
js
loope
loopne
pop
add
jle
inc
mov
fldl2e
xor
imull
inc
arpl
cmc
sti
enter
jg
mov
clc
mov
or
mov
mov
push
out
test
insb
sar
out
cmc
mov
or
ret
jo
int3
push
add
cld
add
stos
sbb
push
mov
xchg
repnz
xchg
sub
shl
cmc
lds
inc
cmc
lea
push
sbb
test
sbb
mov
jns
repz
dec
dec
andl
pop
sbb
cli
mov
xchg
call
fdivrs
adc
ljmp
inc
sub
sub
sub
inc
jmp
pusha
cmpsl
mov
mov
out
pop
ja
jns
popa
lret
fldenv
inc
inc
adc
sarb
dec
repz
add
cld
je
adcl
or
push
or
fcmove
test
gs
out
xchg
jnp
cwtl
lea
jg
ret
fistl
adc
test
mov
cmp
mov
pop
lcall
ja
je
pop
loope
movsl
add
add
add
clc
je
or
push
aam
movsl
mov
popa
ret
mov
int
movsl
cmp
mov
inc
ret
xor
adc
rorl
sub
pop
jae
arpl
mulb
sbb
popf
mov
push
push
sub
das
xchg
adc
icebp
addr16
subb
aas
mov
sahf
dec
cwtl
movsb
and
sub
mov
sub
dec
jp
jp
inc
mov
push
push
out
aaa
mov
jns
push
adc
fdivl
fnsave
pop
xchg
push
insl
hlt
movsl
lds
mull
sbb
stos
push
and
adc
push
mov
arpl
mov
loope
mov
sub
test
cmp
std
mov
lds
jnp
jle
int3
inc
rol
dec
fistpll
fmuls
add
dec
jnp
mov
xor
mov
sub
add
sub
push
sub
sbb
cmp
mov
or
and
cmp
in
fcmovu
mov
insl
fisttps
mov
xlat
mov
enter
adc
cmc
push
rcll
mov
adc
xchg
mov
test
mov
jae
xchg
dec
xor
mov
pop
in
push
cli
pop
in
inc
repnz
aas
sbb
sbbb
sahf
sbb
mov
jne
adc
push
ret
lret
or
mov
scas
test
insb
mov
enter
out
out
and
rol
mov
xlat
cs
aad
mov
inc
adc
or
popf
divl
shrl
loope
mov
adc
movsl
inc
rcrl
sub
jno
shrl
mov
mov
sub
push
pop
fistpl
es
leave
sti
clc
pop
mov
int3
fists
fucomi
adc
sub
test
cmpsb
pop
sub
xlat
das
mov
jns
jns
sub
movsl
pop
clc
inc
mov
pop
mov
mov
sbb
push
cmp
mov
mov
bound
push
ret
and
inc
or
leave
push
rcl
or
mov
popa
push
mov
xor
sbb
jl
movhps
popa
sbb
lahf
inc
sahf
jle
outsl
mov
dec
daa
pop
inc
push
cmp
push
mov
push
add
jg
inc
sbb
mov
mov
decl
sub
pop
test
loope
and
mov
jnp
inc
cmc
inc
ret
movsb
or
mov
sub
hlt
movsl
aad
sbb
push
jns
in
lret
sub
push
out
and
fbld
push
insb
mov
cwtl
ja
cmp
sti
mov
cmpsl
je
pop
or
cld
mov
imul
mov
xchg
enter
ljmp
in
popf
and
movsl
add
mov
xlat
sub
repnz
in
mov
int
inc
aad
pop
decl
daa
ret
mov
mov
sbb
icebp
movsl
fisubl
xor
sub
lcall
mov
movsl
leave
sub
push
adc
jb
dec
sbb
cmpsl
jbe
push
or
add
das
xlat
dec
mov
cwtl
movsl
mov
lret
xchg
aad
out
sahf
movsb
repnz
jmp
test
sbb
je
mov
test
orl
bound
inc
cltd
rcrl
daa
sbb
lods
popa
sbb
leave
addr16
pop
cmpsb
mov
or
testl
popf
xchg
jnp
sar
shrl
das
inc
sub
ljmp
pop
inc
adc
je
xchg
and
xchg
push
icebp
mov
mov
cmp
add
adc
sbb
lret
mov
test
push
sar
icebp
xlat
mov
loop
and
das
mov
mov
sbb
fsubrp
sbb
sarb
popa
clc
dec
inc
or
sbb
or
mov
and
scas
pop
sbb
jge
popf
adc
and
xchg
xchg
xor
fiaddl
jo
dec
push
shlb
pop
dec
inc
pop
push
loope
sub
fnstcw
int3
decb
mov
leave
fstps
in
rclb
or
pop
add
or
mov
aaa
mov
jle
lret
ret
outsb
dec
movb
std
mov
popa
mov
mov
mov
mov
push
mov
xor
je
mov
aaa
gs
jl
mov
shll
in
or
pop
push
popf
sahf
jmp
add
or
sar
and
icebp
dec
dec
sub
push
adc
rorb
leave
and
test
mov
lahf
adc
jae
mov
in
push
jle
loope
loope
jl
mov
popf
add
loopne
and
lea
sahf
and
push
fisttpl
inc
imul
fistl
pop
mov
sub
pop
jmp
inc
clc
fstpl
sar
rcr
aam
push
pusha
pop
adc
lds
xchg
mov
dec
jp
jle
mov
push
inc
sub
icebp
lcall
sbb
pushf
dec
pushf
push
xchg
sbb
aad
cmc
repnz
mov
mov
or
std
cmp
mov
cwtl
jl
sub
testl
test
push
adc
adcb
sbb
xlat
push
sub
or
sub
int
aad
sbb
xlat
fstl
add
add
xchg
add
xor
fiaddl
test
and
xor
adc
or
cld
jp
insl
mov
push
mov
push
movsl
sub
stos
sbb
sub
cmc
mov
pop
or
adc
cwtl
hlt
das
lahf
mov
lds
mov
subl
jecxz
call
sbb
mov
loope
mov
add
in
dec
sbb
and
push
sbb
rcrb
cli
fld
jge
pop
and
adc
xchg
in
and
cmp
sub
sub
test
sahf
xchg
push
adc
aad
notb
and
mov
dec
mov
test
xchg
and
repz
movsl
add
fbld
clc
pop
push
mov
sub
movb
xor
mov
jl
dec
subb
push
push
jns,pn
ret
shr
mov
movsl
mov
adc
xchg
pop
jo
jle
movsl
or
inc
loop
insl
push
or
in
mov
loopne
push
mov
in
outsb
mov
fcompl
insb
arpl
push
andb
mov
xchg
movsl
cmpsl
mov
push
pop
cs
in
filds
jmp
add
movsl
cmc
xlat
add
je
or
inc
in
cwtl
scas
test
popa
cltd
mov
and
cli
movsl
stc
jns
dec
push
fmul
movsl
or
cmp
xor
xor
idivl
outsl
jmp
cltd
int
imul
movsl
mov
pop
fstps
enter
dec
arpl
inc
cmp
pop
inc
imul
rep
out
cs
push
outsb
xor
add
das
sub
std
in
shll
jnp
push
mov
cmpsl
mov
cwtl
mov
cmc
mov
movsl
xchg
mov
mov
fsubs
jno
in
movsl
mov
jmp
pop
stc
call
test
sbb
lods
pop
jl
jns
fldt
push
in
ds
jmp
mov
sub
sahf
xor
dec
mov
mov
mov
jp
mulb
outsb
jo
ret
fstpl
scas
pop
push
lds
movsl
sbb
addb
adc
xchg
mov
mov
out
xor
movsl
mov
pop
xor
adc
repz
xchg
ja
shlb
ljmp
aam
push
xor
mov
test
movsl
xchg
ret
jno
sbb
mov
es
push
mov
movsl
xor
mov
fimuls
pushf
push
sub
movsl
popf
sbb
scas
mov
add
cmp
mov
lods
mov
lahf
movsl
and
cli
int3
test
negl
sub
and
push
add
mov
mov
cs
sub
imul
mov
movsl
lahf
jp
push
or
cli
jge
sahf
enter
jle
mov
mov
out
sbb
adc
mov
movsl
insl
repz
movsl
cmpsb
pop
mov
mov
xchg
xor
cmp
mov
fsubrl
push
mov
lds
sub
push
in
or
pop
out
jmp
pop
popl
es
jno
and
nop
mov
sub
mov
adc
lds
lahf
rcrb
out
mov
jl
icebp
inc
jl
inc
pop
fsubr
cld
inc
ljmp
jo
dec
jno
cmc
sbb
stos
pop
divl
inc
add
popf
mov
pop
loopne
mov
and
mov
dec
jmp
jmp
jno
andl
mov
adc
push
lods
cmp
and
add
lods
sub
movsl
out
cmp
mov
and
lret
xchg
jecxz
push
andb
xchg
lea
mov
mov
mov
mov
or
test
mov
dec
cltd
mov
shlb
imul
imul
decl
enter
jns
lds
cld
adc
mov
inc
gs
bound
add
push
xchg
xor
adc
push
out
push
adc
in
jge
out
sub
test
int
movsl
jno
aam
fs
and
sahf
adc
pop
cmp
xor
sbb
test
dec
jecxz
xchg
and
mov
cs
ds
add
pop
cmp
push
aad
in
or
and
mov
loopne
sub
or
xchg
xor
push
loope
pop
cmpb
push
mov
fisttpll
movsl
addr16
xchg
in
sbb
pusha
imul
xchg
stos
and
adc
adc
lret
movsl
bound
xchg
pop
push
mov
shl
les
xchg
mov
push
jg
shrl
pop
push
xchg
sub
push
rcrb
rcrl
movsl
or
cmp
cmp
or
into
mov
test
mov
pop
cmp
xchg
lds
pop
cmpsl
cmp
xchg
testb
loopne
in
sti
rclb
or
enter
mov
jecxz
hlt
stc
xchg
in
inc
lods
sbb
lods
cmpsl
adc
sbb
sub
adc
mov
pushf
xor
rcrb
movsl
adc
mov
or
rcrl
push
fs
frstor
das
ja
push
rol
xor
loopne
rolb
ja
movsl
dec
cld
std
dec
mov
or
mov
push
aad
jne
out
inc
movsl
mov
sub
scas
pop
push
aam
arpl
push
jecxz
and
lcall
inc
pop
jg
ficomps
lods
and
adc
ret
xchg
sbb
push
and
xor
cmpl
mov
rorl
xor
cmp
xor
jne
dec
dec
popf
jecxz
int3
xchg
bound
pop
mov
pop
sub
pop
and
pop
lahf
push
add
movsl
shrl
int3
rep
sub
mov
jmp
push
cmp
dec
pop
jne
mov
pop
dec
jmp
sub
pop
out
movsl
jo
push
hlt
mov
dec
add
cltd
xchg
loope
push
jo
jno
sbb
fbstp
push
push
movsb
push
mov
test
bound
mov
and
je
or
sahf
test
aaa
pop
add
push
xor
stc
insb
into
jnp
test
pusha
pop
mov
sub
adc
iret
sbbb
sub
fnsave
int
pop
adc
sbb
lods
mov
cmpsb
ret
movsl
xchg
addr16
cmpsl
mov
ljmp
push
vsqrtpd
insl
stos
aam
pushf
and
orl
dec
pop
ficoms
movsl
xchg
sub
lret
mov
int
int
push
aam
jle
xchg
adc
mov
frstor
lods
enter
shl
cld
sbbb
addr16
es
or
into
mulb
jp
adc
insl
pop
push
jb
or
in
in
scas
adc
mov
xor
pop
scas
lcall
lea
cmp
sub
and
repnz
movsl
add
jbe
std
ss
fadds
arpl
lock
js
mov
lods
or
movsl
push
dec
shrb
cmp
int
fstl
sahf
jno
out
xlat
sti
fdivr
lods
out
movsl
pop
aas
pushf
cld
push
cwtl
mov
add
mov
mov
mov
pop
pop
xchg
mov
ret
lock
dec
xchg
mulb
jge
insb
movsl
mov
inc
lea
inc
lret
in
out
jmp
sti
xchg
xor
movsl
push
stos
pop
ds
cmp
sub
and
movsl
cmc
loop
inc
cltd
mov
movsl
shrd
lret
movsl
nop
fldcw
and
jmp
sahf
mov
aaa
movsl
mov
sub
in
xchg
movsl
daa
sbb
cmpsl
out
mov
insb
mov
mov
inc
xchg
loope
push
movsl
lods
or
aam
push
sub
in
jmp
lahf
and
xorl
lods
sbb
pop
dec
adc
clc
mov
add
add
gs
fsubl
or
lods
xchg
imul
sahf
cmp
mov
pop
sub
je
movsl
pop
dec
xchg
js
les
jne
jno
sti
adc
mov
icebp
jbe
movsl
adc
cmc
lret
push
insl
int
lea
and
adc
dec
arpl
shrb
in
adc
mov
movsl
bound
xor
movsl
in
pop
loop
jno
dec
movsl
jns
mov
adc
mov
mov
mov
inc
fdivrs
mov
dec
mov
sbb
push
movsl
and
adc
ss
mov
outsl
xor
insl
mov
xchg
mov
add
jne
pop
fnstsw
mov
or
movsl
jp
ret
pushf
cmp
add
fildl
inc
hlt
insl
jno
jbe
js
movsl
ljmp
ds
sub
or
xor
inc
mov
je
mov
inc
mov
ljmp
lods
mov
ret
in
add
movsl
pop
arpl
movsl
in
gs
iret
push
push
movsl
xchg
mov
shll
mov
sbb
roll
fcomps
or
push
loopne
movsb
in
jns
dec
inc
adc
mov
pop
arpl
movsl
mov
rcr
jl
dec
movsl
jle
out
pop
enter
stc
fldenvs
gs
sahf
push
js
sbb
push
pop
in
les
movsb
xchg
stos
inc
enter
imul
mov
xor
cmp
test
push
movsl
jmp
mov
das
add
loop
gs
mov
lret
dec
or
int3
arpl
movsl
loopne
sub
push
pushf
dec
cmc
pop
sub
popf
add
sahf
and
movsl
xor
mov
lock
cld
out
jne
add
mov
movsl
push
xchg
shl
popf
sbb
pusha
outsl
pop
inc
lea
movsl
out
jecxz
call
xchg
loopne
imul
xor
adc
movsl
adc
scas
or
dec
mov
push
js
sub
loopne
cmpsb
adc
xchg
loopne
fwait
inc
cmpb
mov
xor
xchg
cmp
push
or
test
in
cmp
jg
and
dec
mov
push
adc
or
jbe
imul
jnp
call
stos
xchg
mov
sahf
movsl
sub
mov
imul
popa
sahf
cmp
mov
jne
mov
ljmp
dec
movsl
sbb
jae
pop
push
xor
pop
dec
movsl
jmp
mov
sbb
vcomisd
mov
xchg
mov
or
movsb
fisubl
rorl
iret
add
or
in
mov
mov
mov
and
loopne
xor
test
or
fidivs
push
jo
jp
int
push
sbb
pop
mov
ret
lods
or
dec
inc
insl
inc
mov
sbb
cmp
push
addb
and
push
test
adc
mov
mov
in
jmp
mov
insb
mov
imul
mov
mov
pop
jle
xchg
insl
movsl
out
cmp
or
ljmp
push
scas
nop
insb
movsl
push
stos
adc
loopne
pushw
inc
sti
dec
stos
sbb
inc
cmp
movsl
push
dec
fcom
ret
lret
and
movsl
mov
mov
movsl
or
jmp
jmp
rcrb
pop
and
push
sub
cmp
xchg
xchg
rclb
sbb
aad
lods
pop
mov
les
mov
sti
pop
sbb
xchg
or
and
iret
dec
loop
adc
push
js
sbb
in
xor
sub
mov
lcall
mov
movsl
pop
js
inc
adc
adc
movsl
mov
ficomps
add
sub
dec
je
push
orb
push
mov
dec
fwait
movsl
dec
fstps
pop
and
cmpsb
mov
mov
mov
imul
mov
mov
rorl
arpl
jne
cmc
jge
fcoml
mov
pop
mov
icebp
imul
je
dec
jge
add
push
pop
push
out
loope
jns
js
mov
pop
loop
and
xor
mov
movsl
mov
push
sbb
pop
add
nop
mov
movsl
aaa
jae
and
jge
sub
and
mov
xchg
mov
movsl
xchg
mov
enter
mov
cs
test
test
mov
movsl
mov
js
je
aad
mov
and
icebp
add
test
mov
outsb
movsl
rcll
xor
pop
jb
movsl
dec
ds
or
add
dec
nop
movsl
sbb
lock
mov
repz
movsb
mov
inc
mov
lds
push
iret
lods
push
std
mull
mov
arpl
lds
mov
mov
mov
dec
xchg
in
lds
arpl
push
out
pop
lahf
mov
xlat
aad
mov
and
mov
mov
imul
stos
sbb
or
addr16
test
mov
push
jo
pop
pushf
sbb
mov
xchg
les
frstor
mov
pop
cwtl
dec
movsl
push
aam
dec
dec
push
mov
inc
mov
inc
not
ret
cmpsl
loopne
jnp
mov
lods
movsl
pushf
mov
adc
iret
ret
xchg
out
ja
sbb
cmp
adc
xor
testb
xchg
leave
sbb
pop
movsl
sub
cld
jge
outsl
jbe
movsl
add
xchg
jmp
sti
fisubs
movsl
aam
pushl
jl
movsl
pop
or
jmp
movsl
sub
addr16
shl
dec
inc
sbb
mov
repnz
cld
xchg
xor
mov
adc
cmp
jmp
loop
rolb
stos
aam
fildl
pop
inc
clc
jg
add
pop
jecxz
in
notl
loope
out
mov
pushf
xor
mov
mov
adc
movsl
add
sbb
jle
sub
js
mov
out
movsl
jno
pop
push
jbe
lret
test
ret
pop
aad
push
and
lea
movsl
lock
enter
sbb
call
dec
mov
dec
subl
sahf
mov
jl
mov
cli
fucom
xor
xlat
push
xorb
enter
inc
adc
hlt
imul
sarb
push
movsl
push
pop
arpl
stc
aam
cwtl
mov
xchg
sub
std
sbb
popf
fwait
jne
pop
je
pop
jp
in
jmp
das
sub
movsl
push
jle
shl
movsl
inc
movsb
loop
incl
sbb
mov
sub
mov
sbb
movsl
ret
and
push
fcomps
and
aaa
sahf
insl
out
xchg
lea
xor
in
xchg
addr16
in
shll
jns
push
sbb
xchg
push
movsl
movsb
add
jl
aam
ja
cli
push
into
push
mov
leave
cltd
cmpsl
repz
jecxz
jae
movsl
pop
int
xor
and
pushf
sub
push
mov
fdiv
int
jmp
cmpsl
inc
push
popa
push
pop
nop
test
adc
mov
scas
pop
mov
lods
in
and
mov
imul
movsl
jp
add
xor
subb
adc
mov
pop
xchg
pop
int
and
je
dec
add
push
cmpsb
movsl
adc
xchg
iret
mov
out
data16
testb
sub
repz
js
push
mov
pushf
mov
or
mov
in
mov
adc
mov
mov
or
or
jo
jno
movsw
sub
shlb
mov
or
das
daa
push
fdivs
or
jbe
push
xor
inc
ljmp
cmp
lods
movsw
adc
in
xchg
pushl
andl
or
push
pop
lcall
jno
xor
in
jge
ss
icebp
adc
cmc
push
mov
hlt
pop
rol
mov
mov
repnz
outsb
int
adc
mov
jecxz
xchg
fwait
movsl
enter
ljmp
movsl
orb
cmp
sbb
movsl
dec
mov
movsl
cltd
lret
cwtl
aas
xor
dec
incl
and
mov
push
pop
leave
inc
shll
mov
shr
lea
add
cmpsl
fsubrp
out
mov
mov
leave
mov
mov
jp
in
rcrl
mov
or
andb
rorb
mov
fistps
jns
shll
mov
leave
fstpt
lods
add
movsl
negb
push
je
mov
mov
repnz
sbb
outsb
lds
lods
rclb
lds
mov
fistpl
movsl
add
xchg
jecxz
movsl
dec
std
push
jmp
or
dec
in
sbb
dec
out
int
movsl
repz
add
xchg
movsl
enter
pop
xor
adc
pop
add
addl
dec
popf
jae
aaa
mov
daa
sub
lods
shld
and
mov
movsl
push
mov
repz
push
aad
inc
push
roll
mov
outsb
inc
sahf
jle
inc
xchg
lcall
stc
cmp
mov
cmp
cmp
movsl
stos
hlt
adc
jae
xchg
xchg
xchg
dec
in
dec
insb
add
or
imul
cltd
ds
jns
jle
sub
fld
mov
mov
push
or
mov
and
cwtl
fwait
loope
and
popa
insl
xlat
jle
icebp
in
inc
mulb
jecxz
call
mov
das
dec
cmpsl
hlt
xlat
movsl
inc
sub
test
jae
mov
cmpsl
movsl
add
xchg
leave
and
pop
popa
xchg
xchg
pop
add
push
setle
rol
cmp
adc
cmpsb
mov
jne
movb
fisubrl
movsl
cmp
sub
repnz
inc
test
mov
sahf
shl
shll
xor
testb
movsl
sub
nop
mov
inc
mov
xchg
aam
ljmp
push
cmpsb
sbb
jg
sbb
sarb
mul
jno
pop
and
lret
pop
std
sti
loop
push
jp
mov
test
movsl
xchg
jno
dec
and
xlat
in
adc
rcl
iret
popf
sahf
xor
repnz
lret
cmp
add
movsl
jae
testb
repz
xchg
frstor
or
mov
mov
xchg
test
addr16
mov
mov
inc
pshufw
ret
fnsave
lret
pop
in
pop
jg
push
cmpsl
mov
subb
test
movsl
pop
mov
mov
xchg
rcl
mov
pop
lock
ja
fucomip
xlat
call
loop
jno
int
mov
mov
jmp
ror
add
test
inc
sub
dec
xchg
lret
jecxz
ret
xchg
add
mov
test
movsl
push
mov
shrl
dec
mov
adc
stos
aad
dec
adc
es
fxch
or
dec
push
dec
jp
inc
popa
sub
jge
adc
mov
xor
iret
fisubrl
mov
outsl
xchg
xor
popf
mov
mov
cld
push
sub
mov
xor
and
hlt
push
clc
aas
js
hlt
pop
cmc
fisttpll
pop
and
sbb
push
enter
jecxz
cmpsl
into
movsl
add
cmp
ficompl
sub
inc
loope
movsl
test
sbb
xchg
cmc
add
stc
movsl
lret
mov
mov
movsl
mov
xchg
xor
movsl
movl
push
movsl
jge
or
scas
in
arpl
movsl
test
popa
jp
in
sahf
mov
rorl
mov
inc
pop
arpl
in
into
jmp
jne
loope
and
shlb
push
test
pop
ret
aaa
mov
mov
xor
push
out
add
repz
sbb
mov
out
push
pusha
jo
dec
sub
mov
pushl
add
mov
int3
mull
sbb
aad
loop
add
xor
cmp
mov
fs
push
fsubrs
pop
mov
test
hlt
sti
fidivl
adc
jae
int
out
into
enter
cltd
push
mov
inc
sbb
lcall
mov
out
fsubl
fucomp
aam
and
add
xor
movsl
mov
enter
or
jnp
inc
addr16
mov
sub
xchg
in
in
inc
and
popf
jl
mov
mov
push
mov
mov
imul
pop
mov
inc
in
add
adcb
popa
add
mov
mov
int3
xor
mov
fldenv
lcall
pop
scas
mov
cld
mov
xchg
cld
mov
sbb
jbe
pop
pop
mov
data16
out
cli
jecxz
in
in
or
mov
scas
lods
imul
mov
movsl
stos
or
clc
sub
inc
call
je
repz
or
lds
cltd
cmp
test
dec
stos
push
or
nop
mov
mov
call
and
sub
mov
dec
movsl
mov
imull
bound
xchg
push
and
mov
test
in
push
fcomp
sbb
in
mov
jp
in
mov
xchg
cmpsl
movsl
push
lock
sbb
movsl
repz
insl
and
imul
lock
outsb
pop
xchg
stos
dec
repz
cli
movsl
aam
dec
clc
js
pop
sbb
adc
test
pop
pop
and
cli
mov
insb
rcrb
dec
cwtl
imul
movsl
jo
sbb
scas
pop
movups
sbb
dec
movsl
call
jae
movsl
cli
jl
dec
xor
jmp
xchg
mov
sub
jge
push
movsb
adc
pop
and
lds
leave
movsl
pop
cmpsb
add
xchg
sub
pop
in
std
inc
cmpb
int
scas
scas
xor
test
push
icebp
push
in
movsl
mov
out
js
inc
movsl
jmp
cmovge
movsl
outsb
add
imul
stos
jb
movsl
or
test
fstl
movsl
jne
pusha
xor
sbb
dec
movsl
xchg
mov
int3
les
xor
retw
and
jb
push
cmp
movsl
sbb
fcoms
lcall
fwait
out
pushw
dec
add
mov
data16
daa
sbb
push
jge
cmp
mov
test
xchg
ret
sbb
mov
mov
in
popa
push
pop
lds
push
mov
lods
movsl
scas
mov
outsb
mov
adc
push
and
jmp
jmp
sub
test
push
or
and
rcll
dec
loope
movsl
push
mov
jns
int3
roll
mov
fcomip
pop
icebp
fisubs
leave
out
push
dec
mov
jb
mov
into
mov
sbb
movsl
fdivrl
mov
out
fistpl
shll
mov
in
and
mov
repnz
fxch
jo
movsl
popa
in
xor
movsl
mov
fcompl
inc
adc
and
mov
and
mov
cmp
xor
mov
mov
jecxz
jo
push
xchg
cmc
mov
add
orl
movsl
and
loopne
jo
call
push
jl
lods
pause
movsl
cld
cs
dec
movsl
or
outsb
pushf
movsl
dec
push
sbb
loop
out
adc
push
lods
mov
or
lret
insl
push
movsl
pusha
lods
in
push
mov
outsb
mov
sub
fwait
rcrl
add
dec
movsl
rcll
ss
pop
aaa
mov
ret
adc
add
mov
xchg
sar
cmpsb
movsl
loope
or
mov
jle
push
movsb
movsl
xchg
push
inc
outsb
in
sbb
jae
je
cmpsb
and
mov
dec
sub
mov
jge
test
and
push
mov
or
lds
xchg
mov
movsl
jno
cli
cld
sar
out
mov
jecxz
fucomp
sub
sbb
hlt
int
push
insb
in
out
loop
inc
cli
test
movsl
ret
and
or
xchg
lods
mov
scas
and
jbe
push
jmp
or
inc
rcpps
roll
mov
jg
movsl
addb
int3
adc
xchg
sub
movsl
scas
cltd
fsubrs
push
mov
mov
mov
sbb
jp
movsl
xchg
xchg
sub
mov
movsl
add
push
scas
fimuls
xchg
sbb
mov
xor
xchg
scas
shll
sbb
fbld
dec
aas
push
js
les
sbb
movsl
and
and
xchg
fdivrs
in
repnz
inc
cmc
and
push
mov
neg
shr
lahf
inc
or
andb
pop
ljmp
mov
pop
loop
ja
mov
les
movsl
lahf
in
dec
dec
js
ret
add
sub
leave
dec
movsl
lods
lret
or
inc
jecxz
mov
push
push
push
dec
jo
push
repnz
mov
test
cmpsl
push
std
inc
mov
movsl
inc
jne
rolb
mov
and
xchg
mov
test
les
pop
in
roll
stos
sbb
jecxz
mov
jb
popf
sbb
push
cmp
mov
xchg
ja
sbb
mov
push
mov
movsl
leave
ror
jnp
or
dec
scas
sahf
clc
cmp
xchg
lcall
loopne
ret
or
inc
movsl
mov
adc
lods
hlt
movsl
xchg
push
sahf
enter
lds
lods
mov
add
aad
sbb
inc
mov
std
aam
test
mov
inc
sbb
xchg
mulb
dec
loop
mov
test
or
movsb
cmp
add
in
add
mov
xchg
xchg
mov
je
adcl
sbb
fwait
jbe
push
pop
adc
adc
add
mov
mov
addr16
inc
mov
pushf
or
mov
push
iret
movsl
mov
dec
or
aam
outsl
loop
movsl
adc
cmc
lret
enter
push
cmp
xor
push
and
arpl
lahf
adc
scas
sub
xchg
xor
movsl
jl
ja
adc
xor
popl
sbb
or
cs
movsl
out
call
js
mov
xlat
in
insl
jmp
mov
push
adcl
fstpl
cwtl
and
xor
add
fnstsw
push
jl
inc
lahf
and
ficompl
repnz
push
popa
mov
aaa
sahf
daa
test
sbb
inc
andl
cmpsl
lock
mov
lahf
xchg
je
outsb
popf
in
sbb
sbb
frstor
cmpsl
sti
and
popf
cmc
sub
sbb
shl
mov
pop
aas
add
inc
sbb
xchg
jbe
push
add
push
addw
mov
mov
js
fstpl
jno
test
jecxz
es
in
scas
shr
cmpb
shlb
add
add
sbb
cmpsb
daa
jle
movsl
mov
mov
lods
fidivrl
int3
andl
inc
pop
or
ljmp
pop
mov
das
add
adc
xchg
cmc
int3
add
mov
push
mov
bound
jb
mov
hlt
mov
mov
pop
inc
shlb
push
int
or
aam
data16
insl
push
cmc
push
icebp
dec
popf
jmp
shrl
mov
enter
adc
xchg
mov
and
inc
adc
adc
xchg
xlat
inc
int
popf
les
cmp
ds
adc
fdivrs
mov
es
lret
fistl
lcall
aas
jnp
or
fistps
test
push
mov
add
mov
fldenv
dec
xor
or
cmp
inc
push
or
hlt
add
sub
jns
push
xlat
and
loope
in
adc
inc
or
ljmp
and
cld
imul
jae
sahf
pop
stos
mov
sbb
sbb
add
popf
sub
lcall
xor
mov
mov
xchg
inc
sbb
nop
pop
cli
icebp
popf
sbb
xchg
jecxz
add
into
orl
outsb
xchg
sahf
and
imul
mov
jo
xchg
xchg
cmp
iret
jle
dec
adc
cmp
jecxz
fstps
in
mov
sbb
mul
ret
jl
mov
lcall
loope
loope
mov
sbb
fcompl
and
mov
jb
cli
mov
repz
mov
sub
mov
jecxz
popa
add
in
leave
mov
xor
arpl
xchg
test
dec
sahf
lods
sbb
sahf
incb
movsl
sub
mov
jmp
stos
shl
xchg
call
sub
sahf
inc
lock
sub
dec
jbe
sub
sub
or
ret
insb
int3
repz
fucomp
sbb
sbb
jge
push
imul
cmc
sbb
ljmp
jecxz
shl
icebp
xor
add
mov
ret
daa
mov
sti
imul
lods
mov
in
xor
sub
jae
push
out
adc
int3
fisubl
lods
sbb
xor
movsb
cltd
ret
push
negb
jo
fisttpl
lock
cltd
outsb
ss
push
pop
push
orl
rcr
mov
das
movsl
dec
add
mul
jmp
movsl
push
mov
cmc
mov
sbb
lret
call
enter
dec
rcl
pop
ret
ljmp
out
mov
mov
rclb
jge
xlat
cmp
lock
inc
test
arpl
pop
xor
xchg
mov
xor
sahf
mov
addr16
mov
in
std
fidivs
dec
pushf
fsubrs
push
push
movsl
jno
cmp
adc
fisubl
adc
stc
mov
movsl
pusha
jb
sub
jbe
or
jo
pop
movsl
mov
push
movsl
mov
jns
sti
imul
and
mov
jle
xchg
imul
and
jb
movsl
pushf
out
push
mov
or
xchg
movsb
mov
adc
shl
ja
movsl
add
movsl
icebp
inc
negb
pusha
xchg
jnp
and
or
mov
movsl
pop
inc
jo
stos
sbb
leave
or
es
inc
cs
std
das
ss
scas
mov
in
movsl
movsb
xchg
dec
pop
outsb
push
sahf
jmp
mov
movsl
lock
arpl
rcll
movsl
mov
xor
jge
pusha
popf
std
sbb
pop
in
or
rcl
movsl
cmp
mov
sbb
in
aam
int3
stos
pop
xchg
mov
lahf
xor
inc
imul
adc
push
xchg
push
and
enter
add
orl
inc
or
test
stos
js
pop
and
ss
shll
les
sbb
sbb
or
sti
add
mov
inc
out
out
test
imul
movsl
sbb
jno
test
jb
movsl
popa
dec
mov
jecxz
mov
sahf
movsl
jne
jmp
loope
jb
sub
fdiv
add
stos
and
movsl
aaa
sub
fimuls
mov
imul
outsb
lods
jb
and
xchg
mov
mov
or
int3
movsl
mov
outsl
movsl
dec
inc
scas
sbb
loopne
cmpsl
or
mov
das
lock
adc
stos
sbb
jb
jne
xchg
ret
and
push
adc
pushf
jp
stos
inc
movsl
mov
pop
cmp
mov
push
movsl
adc
xchg
xor
jae
ja
scas
dec
ds
push
nop
dec
in
inc
xor
jne
adc
ss
xor
mov
out
mov
dec
in
icebp
jge
mov
loope
add
std
dec
insl
jbe
test
jne
mov
decb
movsb
or
fstpl
mov
test
sahf
in
mov
jae
out
add
sahf
and
mov
xchg
pushf
mov
leave
and
add
push
test
lea
sbb
add
fildll
addr16
cltd
inc
popa
push
fwait
jb
mov
cwtl
sbb
jp
lea
sbb
push
mov
stc
mov
and
jno
xlat
int
and
pushf
adc
adc
add
jo
aaa
out
or
std
movsl
arpl
add
out
mov
movsl
inc
mov
movsl
mov
ljmp
jo
imul
lret
out
mov
movsl
dec
pop
outsl
xchg
fisubl
icebp
rolb
fsts
and
cmp
dec
push
scas
orl
add
movsl
push
ror
jmp
push
sub
pop
lods
cwtl
les
jns
dec
in
imul
pop
pop
lds
push
movsl
inc
pop
cwtl
and
into
fisubs
aad
bswap
andl
mov
mov
out
jmp
xlat
push
int3
ja
xor
sub
lods
xchg
movsl
es
shlb
stos
dec
mov
mov
loope
jp
movsl
dec
jl
xchg
sbb
outsl
mov
es
inc
inc
shlb
mov
daa
mov
fisubrs
repz
mov
adcl
daa
pop
jno
pop
sub
movsl
mov
push
xchg
mov
nop
lds
adc
sub
inc
movsl
fcompl
dec
sbb
loope
xor
mov
popf
mov
xchg
jae
icebp
movsl
in
shrl
call
bnd
adc
cltd
or
cmp
test
out
mov
sub
dec
dec
jb
pop
movsl
and
xchg
movsl
arpl
jbe
popf
ljmp
sub
jo
pop
mov
lds
flds
inc
inc
mov
insb
aad
movsl
push
pop
outsl
call
test
jmp
mov
xchg
push
dec
jg
pop
ljmp
sub
adc
jno
cmc
xchg
sbb
mov
jmp
dec
inc
mov
add
sub
lds
lds
imul
movsl
aas
xor
and
cmpsl
pop
pop
mov
mov
xchg
leave
insb
xor
adc
mov
fisubrl
jb
pop
in
jmp
repnz
push
pop
pop
cmp
imul
jge
adc
xorb
adc
cmp
popf
movsl
xor
mov
movsl
gs
pushl
xor
call
outsb
or
test
imul
push
movsl
rolb
out
adc
pop
pushf
es
scas
cmpsb
movsl
push
ja
shll
das
cmp
movsl
pop
into
jae
push
mov
lods
sbb
push
loope
add
fimuls
sub
push
ja
bound
dec
imul
push
xchg
push
dec
dec
movsl
gs
and
xor
and
or
movsl
pop
jp
rorb
sbb
xchg
cmc
stc
mov
mov
insb
movsl
cmp
or
punpckhwd
cmp
insl
mov
repnz
mov
xor
inc
or
lds
or
clc
frstor
enter
dec
inc
and
jnp
mov
shlb
xchg
xor
mov
movsl
and
or
ret
imul
test
xchg
shr
lds
lea
xchg
adc
adc
mov
jl
sbb
jmp
out
movsl
push
fs
in
les
push
xchg
lds
dec
lahf
sbb
movsl
cli
mov
mov
movsl
pop
mov
adc
pop
pop
lods
movsl
push
repz
call
dec
fwait
movsl
push
xchg
ret
movsl
jp
js
cmp
movsl
inc
gs
insb
sbb
pusha
movsl
lret
mov
pop
int
sub
inc
mov
adc
lds
in
push
sub
or
stos
pop
xchg
ss
pop
inc
mov
in
xchg
mov
cmp
fisubl
rolb
insb
movsl
cwtl
or
sahf
movsl
arpl
xchg
movsl
pushf
adc
sbb
pop
push
pop
movl
cmpsl
mov
sub
xchg
mov
push
std
push
out
loope
jae
clc
fdivl
mov
int3
outsl
or
mov
sbb
mov
adc
int
adc
pushf
adcl
cmp
mov
lods
cmc
xlat
movsl
cli
inc
cld
clc
lock
jl
insb
enter
addr16
mov
int3
cmp
push
in
inc
pop
mov
hlt
out
pop
jnp
aaa
jb
outsl
loop
jbe
jg
add
pop
or
cwtl
pusha
movsl
fld
lock
fistps
sbb
sbb
adc
movsl
sub
xchg
mov
lods
push
or
mov
xchg
cmp
cmp
movsl
nopl
mov
adc
adc
cmp
rolb
mov
sub
jle
cs
cmp
movsl
mov
fcomps
xchg
xor
arpl
xchg
dec
movsl
js
xchg
sub
icebp
pop
jmp
jns
xchg
jae
inc
xor
test
pop
mov
mov
movsl
popf
xchg
popa
test
lcall
mov
movsl
sahf
and
mov
in
mov
movsl
sbb
lods
fsubrs
xor
movsl
loope
in
add
mull
pushf
dec
out
xor
ljmp
dec
idivl
and
xchg
pop
push
xchg
mov
test
test
xchg
ret
dec
pop
and
mov
mov
mov
es
sub
les
lcall
add
stos
lcall
mov
aad
and
in
iret
incb
jns
dec
mov
movsl
adc
std
inc
pop
add
arpl
cwtl
outsl
push
aad
mov
stos
jo
mov
pop
mov
cli
movsl
pop
cmp
push
pop
clc
sub
and
test
cmp
cmp
push
js
cld
or
mov
pop
jo
movsl
xchg
mov
mov
lea
push
testl
dec
jge
shrb
jne
and
loope
test
pusha
mov
movsl
sub
es
lods
jle
int3
movsl
outsb
cmp
sub
xchg
jl
dec
divb
in
push
std
jo
push
movsl
xchg
mov
or
mov
mov
mov
add
sarl
sub
sub
stc
mov
mov
cmp
fxsave
adc
in
mov
push
ret
jge
movsl
xor
std
cmp
mov
mov
stos
cmp
dec
inc
mov
sbb
jmp
aam
movsl
xchg
xlat
repnz
sub
movsl
sahf
xor
xor
mov
test
mov
popl
push
mov
adc
mov
imul
movsl
jg
or
jl
or
and
in
mov
ficomps
push
aas
movsb
fists
mov
mov
fidivl
adc
xchg
inc
mov
sbb
and
movsl
jns
dec
scas
xchg
xor
call
lds
push
jb
cmpsb
add
mov
movsl
sub
adc
sub
test
movsl
jge
pusha
add
push
out
pop
cwtl
mov
add
adc
push
call
in
ret
outsl
movsl
lret
push
jne
pop
in
movsl
fwait
sti
fiadds
movsl
rol
dec
jno
and
icebp
xor
mov
pusha
pop
pop
popa
sbbb
push
sbb
ja
pop
stos
inc
cmc
imul
sub
in
in
and
mov
or
in
mov
push
movsl
adc
sub
movsl
das
jae
jo
inc
sub
movsb
adc
out
xchg
add
test
pop
pop
loopne
in
lds
cmp
ret
xchg
test
std
rcrb
scas
and
xor
mov
movsl
fisttpl
enter
sahf
pusha
mov
test
dec
inc
addr16
jp
sbb
fincstp
cmc
into
movsl
out
fnstsw
xchg
inc
push
arpl
mov
nop
int3
enter
test
mov
push
sbb
dec
movsl
add
xlat
int3
mov
xchg
ficoms
or
mov
mov
repnz
call
mov
movsb
ret
sbb
push
leave
jecxz
mov
dec
push
fsubl
sub
mov
xlat
mov
lahf
in
or
repz
pop
push
or
rorb
icebp
inc
stos
push
popf
dec
mov
lock
mov
push
adc
dec
xchg
pushf
leave
xlat
mov
stc
hlt
mov
jmp
and
inc
jno
lds
call
cmp
cmp
mov
sub
and
jno
out
cpuid
pop
lret
rcr
inc
adc
in
inc
or
cmp
jno,pt
or
jo
pop
popa
sbb
dec
inc
repnz
icebp
outsb
aam
mov
push
or
lret
std
inc
cmp
cmpsb
leave
gs
lahf
mov
push
sbb
pop
lret
jmp
push
into
mov
in
xor
hlt
int3
mov
xchg
repnz
sbb
sub
scas
orb
push
jle
shl
std
dec
mov
mov
or
mov
jno
imulb
data16
popf
stos
dec
mov
jl
jmp
jno
loop
push
mov
pop
loope
stos
in
icebp
lret
enter
movsl
dec
jnp
xor
or
jns
ret
in
jle
mov
div
lods
xchg
xchg
adc
add
in
icebp
fisubrs
pop
mov
jns
xchg
arpl
mov
lds
jl
in
or
and
fwait
imull
push
js
adc
push
mov
lds
fnstsw
or
fwait
xchg
cmp
ret
cld
xchg
enter
xor
mov
mov
je
fwait
cmc
fstp
enter
and
pop
pop
imul
push
sbbb
pusha
mov
pop
mov
and
jnp
sbb
and
sahf
in
addb
pop
cli
fadd
int
and
jno
lret
js
popf
in
pop
add
xlat
icebp
sbb
mov
push
jnp
loop
or
mov
pop
shl
or
pop
pop
dec
loop
movsl
icebp
movsb
pop
xor
cwtl
ja
test
inc
cmp
push
jnp
add
rol
movsl
mov
fcomip
sub
mov
push
push
fimull
mov
repnz
movsl
xor
inc
lea
dec
jge
push
jnp
addr16
movsl
pop
insb
pop
sbb
xchg
mov
dec
lds
frstor
addr16
ja
movsl
shl
push
repz
jnp
xchg
mov
sub
jecxz
movsl
hlt
lock
cwtl
scas
pop
pop
push
movsl
add
xchg
mov
inc
jae
push
addr16
sub
jnp
scas
dec
mulb
gs
push
jp
fiaddl
jns
add
sbbl
loope
lock
sub
xor
lods
aam
notb
cmovno
jecxz
movsl
mov
mov
enter
sbb
movsl
lods
sbb
add
es
pusha
in
adc
cwtl
pop
pop
fdivl
movsl
add
xchg
push
popf
test
sbb
mov
xor
cli
push
movsl
call
test
fwait
movsl
in
mov
sti
std
fsubs
cmp
inc
scas
pusha
cmc
push
sbb
add
outsb
dec
imul
filds
aam
add
mov
stos
xchg
mov
dec
mov
and
xor
pop
or
sub
flds
ret
mov
pusha
test
movsl
arpl
lret
jl
inc
jnp
adc
mov
mov
lds
test
imull
push
mov
lds
fucomip
movsl
stc
repnz
clc
adc
scas
push
insb
insb
push
mov
pop
cmpsb
out
jb
lds
jo
push
lds
imul
or
mov
rep
pop
pop
push
cmp
push
clc
popa
out
call
cmp
adc
scas
jge
out
movsl
dec
mov
sahf
and
movsl
pop
insl
push
jns
jnp
jno
popf
sub
mull
fs
filds
movsl
lahf
adc
add
jmp
shlb
and
lret
clc
lods
jge
es
inc
push
in
into
icebp
popf
stos
push
fmull
mov
cltd
fwait
push
mov
cmpsl
jg
sbb
aam
add
push
adc
dec
in
inc
in
popa
jb
pop
fisttpll
push
cwtl
adc
int
dec
jne
push
xchg
sahf
mov
add
fmuls
fucom
movsl
jno
sbb
fs
mov
mov
mov
in
pop
fldenv
sub
mov
mov
dec
jae
adc
hlt
xchg
test
sbb
xlat
enter
lods
loope
fs
jl
pop
cwtl
cmp
loope
into
mov
fisttpll
and
mov
pop
mov
mov
pop
je
mov
and
test
in
jbe
mov
sbb
andl
inc
and
movl
adc
pop
test
pop
jno
add
push
push
rol
lock
out
mov
pop
mov
and
daa
and
cmc
js
xchg
dec
popl
or
cwtl
add
mov
pop
scas
repz
fnsave
sub
add
push
stc
pop
inc
cmp
and
cmc
pop
fstp
cltd
negb
push
inc
sbbl
call
sub
popf
dec
add
fnstsw
xlat
pop
cmp
mov
mov
shlb
cmp
shll
mov
lds
subl
pop
ljmp
mov
adc
iret
daa
loope
or
jns
popa
fstpl
jmp
popa
fstps
and
push
aas
mov
fisubl
arpl
arpl
dec
ja
cmpsb
leave
pop
test
lods
mov
addr16
xchg
push
lods
dec
insl
loop
lods
pop
loopne
aad
xor
jo
jmp
sbb
push
in
sub
dec
fcomi
loop
lret
inc
mov
xchg
push
sbb
jg
popf
inc
cmc
daa
shrl
das
in
dec
icebp
pop
mov
xor
pushf
pop
lods
lock
subb
adc
push
fdiv
push
int3
xor
int
pop
xchg
stc
and
jb
add
test
int
jmp
adcl
jno
shrb
mov
xchg
add
pop
aas
inc
add
lods
ret
add
sub
cmp
or
add
es
xor
pop
jnp
pop
adc
std
dec
cmpsb
and
in
pop
cmp
xchg
enter
push
bound
js
fimuls
jmp
push
js
jecxz
movsl
mov
pusha
mov
lahf
pusha
sub
xlat
xor
dec
data16
sbb
cwtl
sahf
lret
call
dec
iret
mov
loop
mov
addb
addr16
cwtl
cltd
sub
mov
jecxz
adc
fsubr
sub
pop
rcrb
add
sub
push
adcb
insl
pop
and
das
cs
ficoms
cwtl
out
idivb
sbbb
cld
sub
xor
add
and
sub
mov
adc
cmp
lret
pop
bound
xchg
push
clc
sub
sarl
ret
fsubl
cmp
jae
inc
inc
mov
jb
or
mov
mov
in
iret
or
push
addl
test
mov
sub
xchg
punpcklwd
mov
jnp
inc
adc
ds
es
lcall
fmull
and
pop
loop
xor
arpl
push
mov
ret
sub
sbb
cmp
lds
mov
lret
push
xor
loopne
push
fists
cmp
sub
lods
xor
das
sbb
cmp
cwtl
jp
addr16
mov
sti
push
adc
out
mov
push
mov
call
dec
push
andb
je
pop
jnp
test
mov
ds
push
loopne
in
push
in
fadd
xor
scas
inc
xchg
les
enter
sub
mov
mov
add
mov
inc
lock
clc
xchg
jl
dec
mov
je,pt
pop
rcrl
aad
imul
jg
je
cltd
xor
pop
scas
push
adc
aas
clc
out
sbb
imul
mov
and
js
mov
cmp
cmp
pop
in
mov
jae
jae
ret
xor
das
out
call
icebp
test
movsl
bound
cmp
addr16
loopne
jmp
aad
outsl
jge
insl
push
testb
in
or
cs
mov
movsl
hlt
push
iret
lock
ljmp
cmpsl
sbb
jecxz
popa
lds
mov
adc
flds
jo
out
movsl
testl
lahf
movsl
movsb
pop
scas
mov
test
test
add
dec
loope
rcr
mov
aaa
loopne
mov
test
rorl
aad
jae
add
aam
adc
sarl
daa
xchg
es
movsl
mov
cwtl
and
inc
test
mov
dec
loope
mov
movsl
out
mov
rcrb
lds
or
xchg
movsl
sbb
fcomps
loop
testl
int3
bts
scas
push
xchg
call
sti
pop
sbb
jg
jno
or
sbb
sbb
and
movsl
mov
xor
dec
adc
adc
decl
pop
test
stos
lods
aad
push
pop
in
movsl
dec
and
mov
add
iret
out
das
mov
movsl
sub
and
movsl
jp
jb
xlat
daa
jecxz
movsl
ja
mov
adc
jg
xlat
inc
inc
ret
sbb
outsb
andb
iret
fsubl
xor
movsl
fs
movsl
mov
push
orb
orb
xchg
xor
mov
adc
jp
call
mov
mov
adc
and
outsb
popa
arpl
lea
sub
pop
jg
dec
insl
mov
je
leave
test
in
cmp
xchg
dec
movsl
imul
push
xchg
xor
xchg
cli
jl
pop
dec
ljmp
std
add
fbstp
dec
add
movsl
into
jmp
pop
pop
in
aaa
movsl
outsl
cli
out
push
and
push
movsl
mov
and
lret
push
aas
movsl
or
andl
mov
scas
xchg
dec
in
push
push
mov
cwtl
pop
aam
scas
movsl
ffreep
mov
mulb
fwait
cmp
push
movsl
or
sbb
shlb
int
negb
nop
adc
in
aad
dec
adc
inc
add
push
inc
jns
movsl
int3
add
popa
push
repz
movsl
test
xchg
lret
in
sbb
fstl
mov
xchg
jge
push
aad
push
inc
movsl
mov
inc
sahf
imul
lret
push
push
adc
loopne
movsl
cmp
lods
lock
mov
div
out
pop
adc
movsl
xor
loope
loop
daa
movsl
ret
mov
push
mov
or
pushf
int3
movsl
sbb
movsl
mov
clc
int
mov
movsl
arpl
push
xor
or
xchg
movsl
cmpsl
frstor
pushf
test
adc
dec
cmc
and
movsl
cmp
add
movsl
test
stc
xchg
ljmp
push
movsl
out
dec
cld
xor
jno
inc
mov
sub
push
movsl
fsubrs
xchg
mov
repnz
fildl
xchg
inc
stos
pop
movsl
hlt
popa
cli
jo
ret
test
lret
movsl
sbb
adc
push
mov
loope
popf
inc
mov
push
add
sbb
mov
dec
mov
pop
popa
push
mov
adc
mov
dec
fsts
pop
movsl
jp
and
in
loope
icebp
leave
lock
xchg
stos
mov
lods
scas
out
ss
movsb
ret
mov
fwait
pop
mov
loope
out
sahf
adc
mov
mov
add
ret
mov
push
movsl
aaa
stc
hlt
cwtl
ss
adc
sub
jnp
loop
bound
clc
aad
or
adc
into
int3
jmp
out
dec
sub
jno
movsl
inc
dec
gs
pop
adc
mov
movsl
xchg
lea
fldl2e
es
out
ja
add
shll
push
pop
hlt
movsl
xchg
add
repnz
cmpb
xchg
mov
push
dec
push
stc
push
movsl
cmp
sub
lcall
pop
test
xchg
hlt
lods
movsl
movsb
dec
test
loope
and
das
inc
xchg
adc
or
frstor
cmc
fsubs
jo
popa
or
shll
test
cmp
adc
and
int
xor
xchg
cmp
mov
xchg
dec
mov
lds
or
leave
aad
popa
and
mov
push
jb
scas
rcrb
mov
vxorpd
and
aas
xlat
out
pusha
int
or
sbb
mov
outsb
movsl
je
or
pop
leave
test
mov
sbb
scas
cwtl
movsl
popf
test
add
sahf
loope
push
xchg
push
fdivs
xor
test
push
ftst
aad
sti
call
xor
add
movsl
sbb
dec
and
jge
jbe
popa
pop
sub
das
ret
lods
adc
sbb
adc
sahf
icebp
sub
inc
mov
adc
out
cmpsl
or
mov
in
std
inc
add
hlt
ljmp
in
pop
adc
mov
cwtl
aad
mov
mov
xor
dec
popa
or
mov
daa
jge
adc
push
movsl
cmp
cmpsl
out
mov
cmovnp
push
enter
mov
or
inc
mov
rcrb
add
lahf
inc
mov
inc
mov
insb
aad
lods
mov
adc
sub
shll
pop
jg
cmp
mov
xchg
sbb
jecxz
xor
loopne
inc
jns
enter
imul
mov
sub
push
inc
outsl
mov
movsl
xchg
and
stos
push
mov
aam
fyl2x
mov
lahf
mov
dec
popa
mov
adc
and
cld
fcoms
cmc
sbb
push
and
in
cmp
vcvtpd2psx
mov
cmp
insb
aaa
cmc
scas
xor
iret
aaa
movsl
pop
aam
cld
leave
mov
popf
xchg
dec
je
js
mov
mov
fwait
movsl
enter
cmpsb
mov
jb
mov
pop
in
push
iret
or
aaa
push
mov
out
mov
aam
rol
sbb
movsl
mov
jmp
push
movsl
clc
cmp
imul
pop
xor
jno
dec
cmp
mov
push
push
pop
je
movsl
mov
popf
insl
mov
nop
stos
loopne
scas
mov
jmp
mov
or
mov
push
icebp
jg
loopne
fimull
adc
cwtl
movsl
cmpb
xlat
sub
bound
movsl
imul
andl
movsl
movb
movsl
jge
xor
fnstcw
jp
jg
xor
xchg
sti
push
mov
sbb
movsl
or
int
movsl
stos
sub
icebp
fs
sbb
jle
add
add
sub
mov
adc
fsubp
into
add
scas
in
mov
jns
js
repz
xlat
add
rcr
mov
rcr
hlt
rcrl
sbb
push
dec
sbb
movsl
push
inc
jmp
neg
push
inc
push
dec
dec
sub
xor
into
jmp
hlt
mov
dec
or
mov
ss
iret
movsl
mov
cmc
push
lahf
mov
imul
movsl
in
icebp
iret
pop
cmp
inc
mov
movsl
push
and
movsl
inc
jo
mov
xchg
xchg
pop
mov
jge
movsb
in
jl
call
add
jb
movsl
mov
dec
and
pusha
jge
pop
jle
js
push
pop
inc
adcb
nop
fnstenv
scas
or
call
test
mov
mov
or
jle
push
jne
pusha
cmp
sub
dec
add
test
shlb
ljmp
call
gs
std
movsl
les
or
sahf
xor
mov
add
push
in
fistpl
mov
pop
mov
and
pop
shll
test
add
dec
movsl
call
in
movsl
loope
xor
or
jle
inc
imul
fnsave
mov
jle
into
mov
xchg
mov
jge
daa
push
add
mov
inc
sbbb
mov
fwait
es
mov
cld
jecxz
push
cmpsb
add
inc
lods
cmp
xchg
lock
xlat
stc
enter
xchg
int
pop
dec
push
movsl
sbb
sbb
mov
and
mov
aas
lret
add
mov
aas
in
pop
shll
pop
add
xchg
cmp
ss
push
int3
in
xchg
rclb
cmp
lret
jae
ss
cld
and
dec
pop
jle
insb
fucom
shlb
dec
inc
outsl
inc
dec
repz
pop
sbb
mov
xchg
push
inc
mov
ret
push
movsl
scas
rcll
stc
jae
pop
cltd
pusha
lds
inc
aad
movsl
cmp
ljmp
push
movsl
push
xchg
shlb
and
xchg
mov
test
mov
mov
insb
in
lahf
xor
inc
push
xchg
push
inc
popf
and
adc
lret
andb
xchg
sub
add
lds
and
fildl
xchg
xchg
movsl
cmp
pushf
lcall
or
movsl
popf
xor
adc
movsl
orb
inc
cmp
pop
leave
push
push
jmp
push
subl
add
add
fistpll
lods
stos
movsl
or
xor
cmpsb
popa
mov
jg
jmp
or
xchg
imul
movsl
xchg
xlat
push
orl
js
in
push
xchg
arpl
movsl
leave
inc
pop
jp
iret
mov
inc
mov
test
addr16
mov
pop
pop
sbb
sti
mov
or
mov
and
and
aaa
inc
xchg
cmp
pop
nop
movsl
xor
sub
fldenv
test
mov
iret
pop
add
inc
out
lret
cmp
dec
movsl
cmpl
das
jb
fwait
movsl
mov
int
push
movsl
dec
mov
add
mov
mov
mov
mov
adc
push
dec
movsl
or
jmp
pop
pop
xor
sti
add
movsl
mov
rclb
movsl
out
imul
push
jmp
add
xor
add
cld
aad
pushf
lret
dec
mov
test
movsl
in
filds
loopne
imul
repnz
stos
clc
int
push
movsl
fstpt
bound
xchg
std
fmull
or
jnp
bnd
jge
aaa
test
test
loop
repnz
cmc
mov
movsl
icebp
cltd
stos
in
cmovne
imul
inc
pop
xor
fists
movsl
pop
bound
add
movsl
lock
mov
ficompl
lret
xchg
add
sub
dec
mov
mov
sbb
mov
insl
movsl
mov
idivl
pusha
icebp
xchg
xchg
bound
cli
adc
fdivl
sub
dec
and
jl
bound
cld
lret
mov
adc
lcall
push
clc
and
repz
in
add
jg,pt
mov
add
leave
jp
or
pushf
push
mov
inc
inc
stc
jno
nop
mov
fmul
movsl
aam
jle
pop
clc
loope
jmp
movsl
cltd
and
test
adc
lahf
sub
jbe
jp
mov
adc
andl
fisubl
dec
aam
out
mov
fmuls
xor
push
mov
push
dec
inc
fs
inc
mov
mov
fs
push
into
mov
pop
jo
data16
movsl
jae
push
testb
xchg
shll
mov
adc
clc
adc
add
push
cmp
push
pop
movsl
push
mov
andl
pop
xchg
outsl
dec
jae
movsl
aas
push
clc
pop
jecxz
cmpl
loop
xchg
inc
pop
fwait
sbb
inc
adc
sahf
pop
sti
dec
movsl
iret
push
ds
cmp
ljmp
jmp
out
aam
xor
mov
popf
icebp
addl
mov
push
pop
adc
pop
sbb
pop
sub
dec
dec
insl
mov
ljmp
and
call
mov
add
movsl
aad
shl
test
hlt
and
mov
xor
sahf
in
add
mov
push
cli
popa
push
jo
xchg
dec
sahf
cmpsl
pop
into
or
fsubrs
adc
lahf
and
pop
adc
pop
sbb
mov
and
fbstp
jp
jmp
xchg
sub
push
gs
pusha
jns
xlat
out
repz
mov
lock
inc
adc
sbb
xor
pusha
pop
sbb
nop
ljmp
add
sub
mov
movsl
test
xchg
jmp
movsl
mov
jno
adc
cmpsb
mov
scas
imul
rcll
out
adc
dec
movsl
lret
mov
notl
aaa
or
xchg
movsl
mov
dec
lcall
xchg
mov
mov
ret
mov
iret
lds
icebp
add
sbb
lahf
fadds
movsl
pop
inc
xchg
push
jl
leave
in
movsl
pop
cmp
sbb
je
movsl
ss
pop
xlat
ja
movsl
loop
cltd
cmp
out
lcall
pop
imull
push
lret
mov
xchg
adc
mov
sub
movsl
xchg
and
cmpsl
dec
movsl
xor
imul
adc
in
add
mov
dec
push
stos
lcall
movsl
lods
mov
mov
stos
movsl
push
cltd
ja
add
adc
jecxz
in
jmp
ljmp
xchg
sahf
aaa
cmp
inc
imul
xchg
xor
mov
js
addr16
mov
movsl
out
pusha
sbb
push
out
data16
fdivrp
into
dec
xor
cmpsl
mov
in
xor
movsl
sbb
cmp
pop
mov
xor
cmpsb
fwait
popf
daa
pop
lcall
popa
mov
dec
adc
mov
push
adc
aam
pop
lahf
adc
andb
cmc
in
add
xchg
movl
add
xor
pop
pusha
aad
lds
and
pop
lcall
sti
mov
jbe
jecxz
push
or
dec
adc
mov
dec
fldl
fidivrs
mov
movsb
adc
mov
mov
inc
shrd
fsts
mov
pop
dec
mov
std
mov
movsl
xor
int3
cmc
aam
repz
in
cmp
xchg
in
movsl
sarb
arpl
bound
push
inc
hlt
xlat
movsl
loope
loop
fisttps
mov
and
in
sbb
xchg
loop
mov
mov
dec
sbb
push
jnp
stos
cmpb
xchg
in
mov
jle
roll
movsl
mov
mull
scas
push
test
xchg
sbb
adc
xchg
xchg
and
xchg
sbb
movsl
mov
je
dec
movsl
outsb
mov
mov
fstl
fdivs
lcall
mov
movsl
outsl
push
jnp
addl
jg
cmp
pop
adc
xchg
sub
fdiv
pop
cmc
rolb
nop
fst
xchg
xchg
in
adc
jns
lods
adc
sahf
pop
adc
in
and
icebp
enter
es
and
in
sbb
xlat
movsl
loope
pop
pop
flds
xorl
mov
iret
insl
fwait
cmp
add
dec
int
divb
mov
and
mov
lds
mov
lahf
sahf
jb
sub
popf
fucom
or
adc
sahf
flds
testl
or
lret
pushf
popa
ret
and
mov
push
mov
stos
cltd
xchg
pop
mov
jmp
sbb
loope
push
xlat
pop
in
std
pop
fcomip
sahf
jb
stc
sbbb
and
pop
sub
add
movsl
loop
js
les
cmp
shrb
xchg
lods
pop
adc
push
insl
aad
out
add
mov
pop
cwtl
sub
jl
adc
push
ret
push
lahf
and
pop
cmpsl
jmp
les
or
push
sbb
ret
bound
in
dec
mov
push
std
cltd
cmpsb
iret
sbb
out
loope
sbb
lods
or
adc
sbb
mov
sbb
lret
push
rcrl
mov
mov
adc
loopne
xchg
loope
dec
sbb
jno
mov
int
pop
std
jecxz
lods
into
dec
pop
cs
cmpsb
loope
les
adc
sarb
add
push
mov
adc
xchg
mov
nop
and
pushaw
mov
fmuls
in
cltd
data16
jmp
test
jns
add
call
in
or
add
shll
xor
add
push
mov
fbld
test
push
add
jg
hlt
push
jns
lds
shl
mov
jecxz
into
roll
add
sub
push
pop
mov
pop
ret
std
mull
loope
stos
in
dec
mov
std
pushf
xchg
push
popa
jns
inc
jle
ljmp
sub
popa
sub
or
sub
dec
cmpsl
int
repnz
mov
sbb
xlat
mov
popa
pop
push
cli
sbb
cli
adc
jge
push
ljmp
notb
fidivl
bnd
add
ds
push
mov
jo
push
pop
imul
nop
out
lods
enter
xor
faddl
push
test
inc
jecxz
mov
pushf
pop
mov
ljmp
adcl
jno
aam
loop
and
out
sbb
cmc
xchg
add
rol
pop
add
popa
xchg
mov
cli
aaa
jns
sub
add
popa
sub
test
lret
test
enter
sub
pop
mov
hlt
int
ret
mov
xchg
push
fwait
movsl
and
rcr
lods
rclb
in
jge
mov
sub
xor
jmp
rorb
mov
loop
xor
sub
fimuls
xlat
pop
pop
or
insb
insl
push
int
stc
leave
adc
loopew
dec
mov
aam
adc
mov
loopne
sub
daa
adc
and
cmc
icebp
push
push
movsl
out
sahf
cmp
cmp
pop
mov
in
xchg
rorl
mov
loop
mov
sahf
popa
mov
xlat
scas
pop
fcoms
int
jg
sbb
jmp
pop
sub
push
lds
inc
sti
popf
cli
dec
popf
mov
xor
jnp
push
aas
or
es
movsl
outsl
dec
jo
dec
shld
lods
bound
or
movsl
aam
mov
hlt
adc
in
ret
sub
jno
je
jbe
clc
pop
cmp
add
add
cli
or
mov
mov
jno
push
jnp
movsl
arpl
out
ficoml
mov
jmp
stos
sbb
push
or
sbb
mov
pop
ss
sahf
push
cmpsl
pushf
lds
jno
repnz
neg
mov
xchg
and
in
mov
xchg
int3
les
movsl
jae
mov
cmp
movsl
mov
push
cmp
pop
out
decb
dec
int
mov
cmpsl
or
sti
loope
sub
sub
test
out
push
in
movsl
fsubr
sbb
jge
dec
jae
loopne
add
push
sbb
mov
cmp
mov
mov
movsl
and
adc
xchg
sub
adc
lods
sbb
or
dec
cltd
mov
movsb
adc
fadds
mov
sbb
mov
daa
pop
mov
loop
into
inc
flds
and
imul
mov
cmp
add
movsl
jo
test
ljmp
mov
jl
dec
mov
lods
or
pop
movsl
push
rclb
repz
jmp
movsl
gs
jns
movsl
add
mov
sbb
push
cmpsl
movsl
into
negl
pop
inc
sbb
xchg
mov
xor
and
sti
lods
mov
lds
imul
movsl
je
hlt
loopne
call
mov
imul
orl
std
xor
imul
xchg
and
fistps
xlat
test
push
imul
icebp
in
loope
jb
mov
aad
mov
andl
and
mov
fdivl
or
out
imulb
int3
pop
aam
sbb
movsl
xor
mov
sbb
les
test
add
cmp
enter
repnz
aam
imul
fcomps
mov
shrb
mov
orb
jge
push
xchg
outsb
in
movsl
lods
cmpsb
sbb
iret
cld
fsts
jmp
std
push
fucomip
movsl
adc
movsl
jno
mov
adc
lret
xor
xlat
and
mov
es
call
mov
ret
inc
mov
push
movsl
cmp
into
jge
movsl
leave
aaa
mov
movsl
test
sbb
cmp
push
pop
test
xchg
adcb
dec
lds
cmpsl
shr
jb
movsl
xlat
enter
mov
xchg
push
push
add
int
in
cmpsb
mov
out
bound
inc
pusha
xchg
in
ficomps
out
adc
movsl
das
out
xor
movsl
inc
pushf
lods
or
and
movsl
jge
push
repnz
pop
sbb
or
pusha
and
call
stos
pop
sbb
fdivrs
jne
movsl
andb
nop
cmp
sti
popf
push
ret
inc
leave
pop
pop
fisubl
jnp
xchg
andl
cmp
movsl
sbb
lods
mov
lcall
pop
cmp
ret
rclb
call
push
push
mov
lret
mov
sbb
in
pop
sahf
jmp
arpl
stc
les
cmp
mov
movsl
mov
mov
js
sub
inc
mov
cmpsb
in
fs
in
or
push
ja
add
jmp
push
push
repz
dec
cld
test
push
movsl
xchg
aad
jp
sub
cs
adc
or
mov
movsl
sahf
aas
push
or
movsl
and
mov
sbb
lods
push
jge
dec
lods
out
xchg
push
notl
arpl
mov
mov
stc
cmc
jl
les
aad
mov
mov
test
xchg
add
movsl
or
int3
add
xchg
ret
adc
movsl
mov
insb
jb
aas
adc
mov
cli
add
shrb
xchg
movsl
iret
hlt
ljmp
jns,pn
dec
jno
jmp
cli
push
inc
mov
or
or
movsl
mov
sahf
ljmp
push
adc
negb
cmc
repz
adc
pop
js
or
inc
movsl
add
mov
addb
movsl
mov
cmp
ret
movsl
sub
shlb
pop
adcl
jp
lret
iret
mov
jmp
daa
nop
mov
add
shl
clc
cmpsl
or
data16
add
insb
sbb
scas
pop
test
jecxz
hlt
test
fistpl
movsl
inc
lcall
mov
ffreep
pop
rol
movsl
test
shl
jne
inc
mov
jecxz
mov
mov
mov
in
movsl
and
loope
inc
xor
adc
sub
lret
pop
aam
stc
mov
imul
iret
jp
decl
jecxz
pop
mov
sub
adc
addr16
test
js
push
outsb
inc
imul
test
push
push
fldl
movsl
cmp
cwtl
sub
mov
dec
lds
scas
call
and
addr16
shlb
sbb
ror
or
mov
dec
out
call
adc
ds
inc
sub
push
and
cwtl
xchg
inc
cs
or
adc
fdivrl
movsl
scas
cmp
cmc
movsl
and
addl
std
in
and
repnz
jmp
sahf
daa
cmp
sub
imul
stos
add
sub
inc
movsl
lret
add
fisubs
sbb
movsl
out
fs
sub
mov
gs
ret
and
int
movsl
mov
mov
mov
in
movsl
sub
xor
stos
test
inc
cmc
dec
pop
aad
mov
mov
push
and
loope
ja
inc
jle
vmovapd
pop
aad
lcall
cmpsl
push
out
stos
movsl
cmp
in
int
mov
sub
lret
movsl
xorl
scas
in
shll
jne
add
xor
aaa
movsl
adc
xor
stos
arpl
cli
movsl
ficoml
bound
and
in
adc
test
enter
adc
add
xchg
ffree
imul
adc
arpl
in
inc
pop
pop
leave
pop
dec
jno
xorb
mov
cmpl
std
sbb
or
in
sub
xchg
loope
decb
loop
int
cld
add
test
xor
mov
pop
inc
inc
in
int
aas
stos
movsl
outsl
jp
xchg
push
lcall
loope
push
adc
out
add
xchg
mov
out
leave
addr16
pop
mov
cmp
or
mov
movsl
cwtl
jnp
test
f2xm1
fs
pop
jb
movsl
add
jnp
das
loope
xchg
ror
je
clc
push
mov
stos
popa
aad
jne
pushf
test
scas
or
cs
sub
mov
popf
push
sbb
js
sarb
scas
inc
jo
cmp
repz
repnz
clc
in
sarb
xchg
xchg
ds
sub
fisubs
sahf
jle
inc
xchg
sbb
icebp
movsl
daa
lahf
inc
sbb
push
ss
je
sub
mov
or
fdivs
out
fdivr
lods
std
inc
nop
jecxz
cmp
push
inc
jge
aaa
mov
inc
dec
xchg
loopne
popa
fimull
rorb
jmp
pop
mov
pushf
mov
mov
mov
shlb
stos
add
dec
or
enter
or
mov
mov
cwtl
mov
or
clc
movsl
test
into
ljmp
push
test
mov
jns
movsl
addr16
out
push
xlat
jecxz
data16
cmc
movzbl
and
dec
daa
movsl
lods
or
ja
sub
mov
mov
out
ja
fmull
movsl
aas
scas
mov
cmp
pop
shlb
loope
jno
xchg
adc
and
in
std
js
mov
dec
jg
and
aaa
movsl
sahf
loopne
cld
pop
push
mov
movsl
push
iret
mov
in
jge
pusha
or
scas
movsb
and
ret
shl
daa
xor
stc
pusha
add
test
movsb
popa
test
adc
lods
push
pushf
sahf
mov
lods
dec
push
addr16
dec
mov
enter
cmpsl
add
pop
xor
sub
js
jp
pushf
pop
or
or
cmc
jg
call
add
cmp
movsl
les
data16
rcl
int
mov
jbe
push
mov
sub
push
out
and
ret
mov
push
ljmp
fs
or
push
inc
mov
sar
fdivrs
fisttpl
movsl
push
mov
pop
jo
in
ss
mov
sub
sub
sbb
mov
jo
xchg
fimull
shll
js
in
sub
sub
cwtl
xlat
mov
xchg
mov
xor
and
out
fs
mov
rcrl
mov
inc
sbb
shr
aaa
mov
add
sbb
xchg
addr16
add
sbb
icebp
stos
ljmp
mov
xchg
pop
dec
pop
and
shl
cmp
js
mov
loopne
rcl
dec
inc
or
movsb
mov
pop
jmp
cli
movb
sbb
pop
jns
mov
pop
push
add
gs
inc
adc
outsb
repz
in
xchg
sub
stos
mov
and
scas
aam
outsb
pop
js
push
adc
sti
mov
mov
adcb
cmp
and
or
xor
jle
add
sbb
mov
and
mov
movsl
ja
push
fs
fldenv
mov
xchg
pop
lahf
iret
jmp
leave
rorl
add
cli
lds
xor
mov
sub
sub
movsl
mov
push
les
lods
fwait
pop
das
cmp
ljmp
inc
inc
push
xchg
dec
jo
pop
cwtl
xchg
push
aas
sahf
shlb
movsl
sbb
or
test
mov
in
std
add
sbbl
add
cli
int
pop
mov
rcl
dec
push
out
fmuls
mov
add
xchg
push
outsb
pop
jmp
sbb
cmp
pop
xchg
outsb
mov
push
jp
mov
mov
pop
add
movsl
cmp
cmpl
outsl
imul
jmp
jae
subb
movsl
lds
in
movsl
pop
jb
xlat
xchg
daa
stos
or
outsb
movsl
addb
cmpsb
or
movsl
pop
andl
inc
cld
cmp
jae
mov
xlat
lret
out
aas
movsl
mov
icebp
lea
fcompl
dec
fwait
cmovge
movsl
stc
popa
push
inc
push
add
fwait
enter
mov
in
imul
repz
sub
or
mov
pop
ret
mov
outsb
shr
xorl
imul
xor
pushf
add
test
int
repnz
shll
xchg
or
test
xor
call
mov
xor
lds
jbe
lods
sbb
dec
jmp
out
pop
sbb
mov
pop
sbb
movsl
cmp
and
dec
aam
or
adc
out
push
and
xorl
ret
push
jmp
pop
inc
movsl
loope
arpl
mov
clc
mov
movsl
pusha
sub
adc
enter
inc
push
je
outsb
dec
test
or
cwtl
in
xor
in
inc
hlt
movsl
adc
mov
dec
data16
dec
outsl
xor
xor
xchg
shlb
xchg
shll
popf
push
mov
jns
lods
sub
xor
in
push
mov
or
lret
push
movsl
cmp
fs
mov
push
xchg
lahf
movsl
cmp
xchg
idivl
xorl
test
xchg
or
dec
mov
push
xor
sbb
pusha
jns
mov
cmp
imul
jb
lds
and
out
loopne
shrl
scas
outsl
movsl
gs
mov
movsl
testl
lahf
movsl
jmp
pop
sbb
movsl
or
or
shll
dec
mov
clc
cmp
pop
dec
fsubrl
popa
cmp
mov
movsl
pop
or
test
ja
movsl
rorb
je
jno
dec
mov
stc
les
inc
cmp
mov
inc
test
jmp
adcl
imul
cmp
mov
push
andl
adc
repnz
movsl
cmp
mov
cmpsl
adc
pop
repz
push
dec
imul
aad
push
dec
cmpsl
movsl
sbb
loope
in
arpl
mov
xchg
jnp
mov
jl
mov
and
hlt
loope
jecxz
test
mov
mov
pop
mov
lahf
or
and
js
xchg
mov
test
mov
hlt
push
mov
and
in
mov
mov
and
aas
ds
insl
sbb
pop
lea
fstp
xchg
in
xor
and
jno
add
addr16
call
sbb
test
loopne
addb
daa
or
arpl
popa
enter
mov
fdivl
add
add
movsl
jne
jbe
int
xor
cwtl
dec
movsl
pusha
in
inc
pop
fs
in
out
push
dec
jp
mov
mov
sbb
sbb
lock
push
inc
mov
mov
and
dec
lods
shr
in
push
lods
clc
mov
sub
adc
test
movsb
pop
mov
mov
jnp,pn
int3
out
hlt
daa
in
mov
mov
bound
xlat
aaa
jecxz
sbb
arpl
cld
fldl
inc
adc
cmc
lds
push
sub
add
in
add
movsl
and
cwtl
stos
movsl
lcall
adc
or
lgs
mov
xchg
push
movsl
fdivl
mov
ljmp
mov
and
movsl
mov
push
push
movsl
rep
cmp
jg
push
roll
add
pop
lea
lds
test
xchg
in
mov
ret
lea
add
fldl
cmpsb
mov
addr16
mov
push
pop
lcall
clc
mov
imul
pop
mov
rorb
mov
xchg
push
xlat
xor
movsl
fnsetpm(287
repnz
jb
jge
insb
stos
jno
or
jle
fnstenv
sbb
insl
negl
jb
mov
hlt
mov
lea
push
dec
mov
testl
stos
push
rcrb
pushf
cmp
mov
and
xchg
mov
mov
rolb
push
addr16
imul
inc
pop
pop
xor
rcrb
adc
movsl
addr16
dec
push
jae
xchg
loope
fdiv
jnp
xor
js
or
push
fimuls
leave
mov
mov
and
jb
sbb
pop
cwtl
jl
ret
adc
cmp
push
fmul
ljmp
mov
mov
in
leave
insl
inc
repnz
cltd
movsl
dec
jno
mov
mov
in
mov
lea
xchg
std
push
movsb
pushf
movsl
mov
loop
xchg
and
adc
xor
dec
scas
sbb
stos
fstp
adc
scas
dec
fldl
mov
jle
xor
std
jno
push
push
add
loope
jo
jg
xchg
mov
add
clc
mov
lods
in
pop
dec
jp
xor
sahf
mul
add
pop
pusha
jbe
ja
mov
loope
je
andl
ljmp
xchg
in
jb
sbbl
movsl
bound
xchg
fwait
push
movsl
es
in
stc
movsl
pop
pop
and
clc
movsl
push
fs
cli
or
in
popf
push
notl
sbb
xchg
cvtpi2ps
call
lds
push
jmp
dec
pop
cmp
or
mov
push
je
dec
lds
mov
shrb
test
testb
sbb
jmp
movsl
push
add
cmpb
add
add
pop
mov
shlb
je
cmc
push
pop
xor
movsl
and
add
sub
adc
dec
jb
sbb
shl
mov
cmp
in
inc
stos
add
and
je
andl
popa
lret
jne
insb
in
jge
stc
imul
add
lret
or
dec
cmp
rcll
inc
and
push
cmpsl
fwait
movsl
or
mov
idivl
adc
mov
mov
lahf
and
test
mov
push
add
mov
movsl
ds
mov
push
adc
sarl
imul
das
and
movsl
lods
add
sub
inc
movsl
in
cltd
out
nop
xor
imul
or
adc
sti
pop
cmc
icebp
sbb
xor
xchg
in
push
mov
mov
xor
pushf
xchg
xchg
adc
pop
mov
andb
test
cmp
fidivrs
mov
push
add
and
inc
dec
mov
xchg
push
pusha
dec
enter
xchg
aad
inc
imul
lea
loope
stos
cmp
fstpl
les
addr16
sbb
fcoms
int
frndint
je
adc
cltd
test
test
std
jmp
sbb
stc
loopne
rcrl
ret
test
movsl
fwait
push
aas
lahf
outsl
fsubr
sub
inc
movsl
out
ss
pop
pop
mov
test
lods
adc
aam
andl
movsl
add
fsubrs
popf
jl
test
into
pop
iret
mov
inc
imul
clc
add
sbb
mov
xchg
and
loopne
push
lea
add
popf
cmp
jmp
in
sbb
pop
pop
cmp
pop
repz
movsl
adc
mov
sti
mov
movsl
stos
lcall
movsl
dec
in
popa
dec
insb
cmp
cmpsb
test
and
loopne
sub
xlat
ljmp
add
fptan
pusha
push
lods
mov
lods
push
out
cmp
sbb
loopne
mov
movsl
fistps
int3
ret
and
xchg
adc
stos
cli
test
cwtl
mov
js
aad
lcall
push
rcl
add
mov
inc
add
adc
push
test
clc
in
movsl
fsubr
mov
outsl
and
or
movsl
pop
pop
pop
lds
and
test
xchg
popf
fwait
lds
xor
sti
scas
sub
adc
dec
mov
and
inc
sub
imul
push
movsl
test
mov
inc
daa
sub
mov
mov
or
push
mov
pop
mov
inc
cmc
stos
mov
mov
data16
mov
movsl
inc
sbb
sub
mov
inc
dec
or
mov
stos
lret
cmp
mul
int
fs
xchg
and
sub
mov
scas
stos
int3
test
mov
stc
dec
push
mov
jae
pop
pop
jl
add
sarl
movsl
dec
lods
cwtl
lret
arpl
repnz
lds
mov
mov
mov
lods
movsl
pop
mov
xchg
movsl
mov
jmp
insl
repnz
mov
mov
sub
jne
lods
adc
sub
mov
dec
pop
in
movq
movsl
mov
dec
aam
pop
xor
inc
int
gs
shll
xor
mov
mov
dec
push
sub
fsubrl
cmpsl
nop
lea
or
je
mov
push
data16
pop
enter
arpl
xchg
jnp
dec
and
or
cmpsl
movsl
mov
cwtl
cmp
rcr
movsl
bnd
mov
movsl
inc
fiaddl
inc
add
movsl
fs
jg
add
ud2
mov
popa
js
inc
mov
or
popf
lds
lods
add
jle
sub
leave
repnz
ljmp
outsl
mov
ret
stc
sbb
les
jo
mov
jmp
lret
lds
jp
jl
in
adc
inc
movsl
sub
aad
ja
push
xchg
shl
sbb
std
fs
fisubl
nopl
bnd
adc
movsl
pop
pop
jp
xchg
mov
fcoml
or
mov
mov
or
xchg
adc
cli
aaa
xchg
pop
push
enter
jno
or
aad
xchg
mull
xor
mov
lret
mov
dec
ficoms
mov
fcoml
mov
movsl
mov
xchg
mov
xor
cmp
std
popf
out
enter
or
adc
and
cmp
mov
sbb
xor
movsl
inc
jmp
dec
shl
push
adc
cmp
nop
mov
mov
movsl
mov
int
andb
test
pop
cmp
sbb
stc
adc
ret
mov
shll
pop
mov
jb
in
in
or
fildll
sbbl
sbb
aam
mov
mov
mov
std
pop
inc
nop
jge
or
js
push
mov
pop
xor
ja
sub
movsl
pop
mov
ljmp
arpl
out
or
sbb
mov
ret
push
push
insl
popf
pop
dec
push
mov
icebp
in
push
movsb
jmp
movsl
es
imull
movsl
lds
and
push
pop
lods
imul
movsl
bound
cli
lock
into
fdivrp
add
fnstsw
movsl
test
xchg
sbb
addr16
stos
push
std
push
add
aad
lret
leave
movsl
push
cli
dec
sahf
movsl
gs
movsl
in
scas
mov
push
int3
call
movsl
daa
sbb
sbb
and
fisubl
int
cmpsb
lahf
or
jge
mov
clc
mov
dec
sub
inc
in
xchg
and
mov
std
and
lock
pop
movsl
es
lahf
repz
sub
std
sbb
sbb
aam
mov
test
pop
in
xchg
leave
movsl
ljmp
xchg
decl
mov
cmpsl
mov
aas
inc
jp
pop
pusha
insl
addr16
in
and
shlb
ljmp
nop
or
leave
sbb
add
leave
sti
xchg
mov
dec
addr16
xlat
and
push
pop
imul
mov
popf
or
cmp
int
or
ret
sub
cmpsl
push
sti
movsl
inc
push
in
loop
andl
lcall
push
mov
faddl
adc
xor
mov
mov
jp
out
jmp
int
fstpt
dec
mov
pop
inc
movsl
xor
add
sub
mov
and
jl
in
mov
cmpsl
cmp
rcrb
popa
push
movsl
out
clc
call
movsl
mov
jg
cli
dec
andl
test
mov
sbb
pop
mov
sti
data16
and
jnp
sub
lods
movsl
mov
outsl
sar
mov
popa
push
mov
pusha
jecxz
frstor
cmp
bound
movsl
xor
adc
movsl
int
jecxz
addl
stos
pop
xchg
push
mov
xor
and
js
nop
movsl
push
inc
sbb
stc
clc
movsb
push
lahf
stos
insb
mov
and
pusha
andl
movsl
aam
push
mov
js
test
rorb
clc
loope
mov
mov
add
xor
or
cmp
cli
movsl
mov
inc
lods
mov
pop
sub
pushl
push
ret
fs
scas
movsl
bnd
daa
imul
xor
cmp
adc
mov
lahf
pop
or
leave
sbb
and
cmpb
xchg
popa
jae
inc
add
sbb
cmovae
push
movsl
ja
mov
mov
push
loopne
iret
mov
push
daa
in
lea
sub
lahf
cs
pmulhw
not
pop
cmc
jmp
sbb
rep
xchg
jg
dec
outsb
pop
xchg
mov
stc
rolb
jbe
out
jo
jno
movsl
inc
xchg
mov
sahf
pop
and
mov
push
sbb
mov
les
lea
or
fs
movsl
fcomi
shr
inc
test
loop
shlb
movsl
mov
or
popf
fcompl
bound
shl
arpl
movsl
int3
push
adc
in
movsl
inc
and
int
neg
in
int3
cmc
loopne
fsubs
push
lods
inc
nop
movsl
imul
mov
sbb
pop
in
fwait
adc
xchg
push
popf
xor
rcl
inc
or
popa
lcall
xchg
xor
or
inc
pop
xlat
push
mov
stc
fs
adc
mov
xchg
stc
loop
or
js
push
jnp
xlat
pop
push
xchg
ss
popa
int3
icebp
xor
inc
scas
pop
pop
sti
sub
repz
add
ja
xor
xchg
mov
shlb
test
dec
mov
jno
sbb
leave
xlat
clc
add
inc
xchg
cmc
jl
sub
cmp
test
push
push
inc
sahf
loope
cmpsb
in
and
adc
aad
mov
in
jecxz
sar
aad
push
sub
lds
jb
outsb
or
repnz
sarb
or
fld
sbb
jno
dec
cmp
aaa
sub
cmc
push
and
adc
andb
pop
mov
loopne
shl
call
inc
push
pop
cwtl
push
fdivr
sub
repnz
mov
xchg
inc
and
jmp
leave
daa
frstpm(287
push
sahf
pop
xchg
imul
loope
in
fwait
lahf
add
xlat
mov
fadds
popa
sub
incl
out
out
add
add
xor
test
xchg
rclb
je
jp
testl
sahf
outsb
stos
inc
dec
push
test
sub
push
mov
test
push
mov
lret
sbb
std
xor
imul
movsb
popa
pop
add
sbb
ljmp
pusha
dec
bound
mov
push
push
push
xchg
je
test
test
lret
imul
xor
fstl
jae
shlb
pop
sub
inc
imul
stos
addr16
mov
jg
jecxz
sub
adc
lret
stc
test
adc
fcomip
pinsrw
movsl
mov
sub
cmpsl
stos
inc
and
mov
test
inc
mov
js
sub
sub
sbb
andb
loope
sbb
call
popf
sbb
pop
fsubrs
push
dec
les
mov
dec
lods
mov
fisttpll
fnsave
lods
cmc
adc
sbb
mov
mov
mov
jb
cmp
sbb
es
movsl
mov
sub
rcrl
stos
rorb
adc
push
jo
cmpsl
or
sub
loopne
jg
lahf
movsl
cmp
jae
movsl
dec
andb
mov
mov
fisttpll
jb
adc
leave
inc
xchg
cmp
adc
movzbl
rcl
xchg
out
and
xor
inc
pop
jg
xchg
cltd
push
es
bound
adc
push
cmp
in
or
or
add
mov
addl
int
sahf
fwait
shll
movsl
xchg
sbb
pop
mov
ficompl
sahf
mov
in
jne
dec
xor
mov
test
xlat
and
cltd
jl
mov
dec
outsb
pop
ds
push
enter
gs
inc
inc
movsl
rorl
sbb
test
arpl
push
leave
cli
add
cmp
and
sbb
int
aaa
movsl
mov
pusha
insl
movsl
jae
fnstenv
xchg
inc
cmp
adc
in
movsl
sarb
mov
jne
sbb
jbe
sub
aad
clc
movsl
push
neg
insb
xchg
adc
cmpsl
or
xchg
test
icebp
mov
popl
mov
mov
imul
int
movsl
mov
inc
adc
sar
mov
push
aas
jmp
push
insl
and
popa
push
cmp
andb
push
or
outsl
jecxz
mov
mov
aaa
movsl
mov
idiv
int3
stc
scas
imul
shlb
jnp
add
mov
pop
jle
faddl
mov
test
addr16
lods
xchg
sub
sbb
lods
cld
leave
mov
shrb
ret
jecxz
aad
pop
and
shlb
mov
and
add
push
mov
push
ja
push
in
add
orb
cwtl
pop
xor
movsl
adc
pop
xlat
push
ja
gs
inc
jmp
movsl
hlt
mov
dec
jno
mov
test
mov
pop
xor
adc
stos
int3
scas
dec
in
movsl
fs
jg
mov
push
shll
loope
xlat
adc
xor
sbbl
lret
xchg
xlat
repz
push
jle
es
movsl
mov
xor
repz
mov
add
adc
addr16
xchg
xor
in
pop
mov
add
mov
fwait
imul
jg
mov
enter
adc
test
xchg
call
xor
jp
adc
mov
nop
add
popl
push
push
dec
aam
out
sbb
mov
add
dec
out
mov
int
xchg
mov
xor
or
int3
mov
roll
cmpsl
stc
enter
sbb
jmp
mov
pop
mov
mov
out
mov
dec
push
xchg
sub
clc
cltd
movsl
dec
mov
in
movsl
jge
inc
movsb
pushf
outsl
fstpl
jmp
iret
daa
mov
lds
stos
test
inc
dec
mov
dec
xor
sub
mov
movsl
jle
adc
filds
xchg
and
out
push
je
and
adc
inc
nop
in
mov
xchg
sbb
and
subl
dec
jae
mov
dec
bound
fiadds
dec
mov
xor
in
fsubs
cmpsb
mov
fimull
pop
subb
push
adc
push
pop
push
adc
fldenv
mov
nop
jecxz
cwtl
jp
push
loopne
or
movsl
add
mov
sbb
mov
pop
jns
xor
lds
pusha
gs
loop
insl
cli
dec
jbe
cmpsl
pop
mov
sub
xor
xchg
and
movsl
mov
xchg
jnp
pop
js
movsl
inc
pop
and
lods
popa
int3
movsl
dec
jp
aaa
lcall
add
xor
mov
mov
or
popa
fwait
add
mov
movsb
insb
rol
movsl
jb
test
repnz
jl
mov
ss
mov
movsl
dec
pop
scas
outsb
jno
loope
lahf
dec
subl
cmpsl
daa
cld
mov
insb
movsl
adcb
and
push
movsl
popa
xchg
cmp
fwait
cltd
movsl
sub
sbb
movsl
inc
push
dec
or
mov
daa
sahf
inc
les
pop
pusha
xchg
das
sub
fsts
rolb
movsl
mov
adc
insb
mov
add
dec
cld
rol
lock
lahf
movsl
inc
sub
xor
lcall
push
cmp
push
jmp
add
movsl
int
mov
shl
movsl
xor
inc
push
shrb
xchg
fs
add
jecxz
push
xor
jno
and
rcrl
shll
cmp
fistps
mov
jnp
imul
movsl
fstpt
aad
xor
jmp
fdivr
loop
movsl
xorb
add
cmpsb
enter
sub
sbb
dec
or
mov
fisttps
mov
movsl
inc
shrl
xlat
sti
mov
dec
cli
lret
push
inc
mov
lcall
in
cld
or
inc
sub
mov
lea
push
sti
cmc
and
cwtl
movsl
daa
lds
test
je
add
dec
lcall
adc
data16
sar
movsl
sub
nop
shll
outsl
imul
push
lods
shll
adcl
add
jg
inc
sbb
mov
movsl
lahf
std
out
lcall
iret
loopne
mov
bound
xchg
in
test
push
movsb
jne
jg
into
mov
cwtl
sub
pop
data16
mov
jl
pop
insb
and
popf
dec
js
movsl
out
mov
jg
mov
or
pop
sub
frstor
stos
push
xlat
movsl
mov
dec
call
jb
mov
mov
or
pop
leave
out
mov
sbb
cmc
mov
shlb
mov
movsl
jns
cmp
pop
orl
popa
push
jbe
mov
loopne
movsb
lods
nop
push
adc
sbb
shlb
shlb
pusha
cmpsl
cmpsb
mov
sub
imul
out
mov
in
ret
adc
inc
faddl
movsl
inc
lret
addb
movsl
mov
das
push
ljmp
sbb
hlt
jae
pop
mov
jno
cmc
divl
dec
dec
cld
jl
leave
js
mov
jg
fcoms
mov
mov
int
push
into
sti
inc
inc
mov
test
test
push
mov
pop
movsl
scas
int
cltd
xchg
movsl
fwait
je
pushf
adc
cmp
pop
gs
movsl
ds
imul
lahf
jb
nop
daa
ss
add
movsb
cli
hlt
jno
sub
js
jmp
mov
adc
sbb
movsl
lahf
test
hlt
leave
out
jb
in
movsl
scas
and
in
xor
pop
add
push
jnp
pop
cmc
test
in
outsb
dec
inc
lret
movsl
sbb
test
inc
xchg
or
shl
add
sub
pop
gs
stc
add
movsl
mov
mov
scas
and
and
mov
lret
movsl
mov
cmp
repnz
inc
popf
adc
sahf
std
icebp
loopne
ljmp
mov
jne
movsl
insb
movsl
imul
mov
iret
lock
mov
and
test
test
mov
in
mov
loope
andb
lcall
or
movsl
sbb
ja
test
pop
stc
fwait
cwtl
mov
pop
mov
das
inc
movsl
out
ficoml
int
movsl
mov
xor
fs
and
sub
xchg
lret
ret
push
lock
or
sahf
out
xor
aad
aas
lcall
in
mov
mov
xchg
pop
push
xlat
icebp
push
mov
aad
pop
insl
aas
adc
in
jno
into
inc
push
sbb
shrl
mov
pop
push
add
lods
in
fiaddl
popf
movsl
test
jp
mov
daa
movsl
pop
dec
test
mov
sub
out
inc
fnsave
dec
std
push
ret
mov
inc
xchg
mov
sbbb
xchg
and
and
imul
pop
add
icebp
xor
insl
ja
mov
sbbb
mov
inc
clc
sti
loopne
or
in
pop
lret
in
cltd
sbb
xchg
pop
movsl
pop
lods
inc
xor
icebp
sbb
js
sub
insb
bound
mov
in
inc
mov
and
pop
adc
adc
add
jle
bnd
inc
imul
xor
fildl
mov
sbb
popf
loopne
sub
adc
push
xchg
lock
sbb
jo
xorl
add
add
and
and
icebp
aad
mov
std
leave
push
sbb
daa
sbb
test
or
xor
in
xlat
push
repnz
and
shlb
repnz
xor
test
ret
mov
pop
or
add
jge
movsl
aam
jne
sbb
mov
movsb
mov
imull
pop
in
int
imul
xor
je
fisubl
aam
or
xor
xor
mov
sub
arpl
xchg
aad
lds
ss
mov
pusha
mov
add
nop
and
in
movsl
and
out
movsl
aam
xchg
sbb
mov
ret
sbb
fldl
sbb
mov
jb
push
lret
push
cmc
fs
fisttps
enter
test
dec
rolb
pop
insb
movsl
dec
push
gs
loop
inc
fstpl
xchg
xor
push
xchg
aaa
push
inc
cmp
cmp
daa
ror
movsl
jl
sub
movsl
push
hlt
int
cli
in
inc
test
xor
xor
cmp
mov
inc
mov
inc
test
jmp
mov
push
xor
mov
popa
test
pop
push
stos
js
stos
push
hlt
lock
sbb
xor
push
call
icebp
dec
movsl
cmp
out
fadds
cmp
pushf
dec
loop
and
mov
mov
push
lods
inc
mov
inc
pop
adc
addl
pop
push
add
fsubrp
pop
and
mov
ljmp
jae
ja
or
lret
jne
and
mov
mov
adc
in
mov
jbe
xchg
in
loopne
cmc
leave
pushf
sbb
add
stos
mov
jmp
xchg
mov
in
scas
scas
xor
xor
and
push
sub
fisttps
packssdw
movsl
xchg
push
xchg
lods
outsl
jnp
movsl
test
sbb
xchg
pushf
cmp
fs
mov
sub
movsl
nop
mov
fldcw
movsl
or
cwtl
mov
mov
cld
ja
and
mov
cli
aad
pop
call
shlb
adc
sbb
xchg
xchg
sub
lea
pop
movsl
add
and
mov
and
cli
inc
movsl
mov
xlat
rolb
std
sbb
movsl
sti
mov
ljmp
add
mov
movsl
out
mov
gs
push
call
xchg
xchg
xchg
mov
ficoms
repz
inc
sarl
pop
movsl
in
dec
arpl
lods
push
xchg
outsb
mov
aaa
sub
loopne
addl
cmp
sub
cmp
imul
adc
mov
jno
inc
lds
sub
fs
ret
std
shlb
mov
lahf
add
clc
lret
lock
dec
movsl
inc
outsl
lcall
xchg
pop
cmp
push
stos
or
inc
dec
pop
xor
add
aad
inc
inc
movsl
adc
scas
sub
mov
pop
xchg
out
inc
jb
add
push
dec
js
loopne
jmp
xorb
stos
lea
xchg
jno,pn
cmp
adc
sbb
mov
jae
fistpl
ja
fwait
xor
push
cld
jmp
test
cltd
mov
xchg
mov
jmp
fadds
add
cmp
xchg
xor
mov
sub
push
or
movsl
test
mov
movsl
adc
pusha
aam
push
push
push
in
fiadds
jbe
in
or
in
push
subb
lock
mul
jg
jge
mov
inc
dec
xchg
cs
or
cmpsl
mov
xlat
sbb
hlt
jnp
pop
jae
pop
add
mov
into
mov
jbe
movsl
push
pop
jmp
movsl
test
lods
mov
movsl
xor
add
scas
sub
mov
mov
xchg
aad
pop
punpckldq
sbb
xlat
loopne
movsl
loop
shrl
repz
pop
in
adc
stos
movsl
sbb
dec
lcall
xor
sbb
dec
out
inc
ljmp
dec
out
mov
jl
popa
pop
jb
fisttpll
pop
mov
jg
vpunpcklqdq
push
movsl
cmc
mov
jecxz
jmp
jle
lods
mov
shll
dec
out
imul
repnz
loopne
ds
movsl
dec
jle
in
push
jno
iret
movsl
pmaddwd
jae
sarb
mov
mov
mov
cmp
sti
movsl
mov
jnp
lock
imul
outsl
movsl
jo
pop
and
mov
dec
movsl
cld
leave
push
jl
jae
lock
mov
mov
movsl
xor
cmp
jp
movsl
out
leave
pop
jmp
mov
adc
pop
hlt
movsl
jecxz
call
jnp
das
test
out
inc
mov
cmp
es
imul
and
sahf
mov
mov
movsl
stc
ret
or
and
enter
test
push
addr16
movsl
mov
and
repnz
push
stc
pop
mov
add
adc
jb
or
dec
adc
cmp
mov
hlt
mov
push
cwtl
out
xchg
movsl
sub
dec
sar
movsl
in
in
pop
and
insb
and
lods
aad
push
hlt
cli
push
push
xor
fldl
mov
fs
mov
bound
adc
xchg
sub
pusha
pop
in
mov
int3
cmp
faddl
xchg
ljmp
dec
stos
push
movsl
xchg
shll
int
out
sbb
cld
aam
cli
movsl
mov
xor
inc
adc
movsl
sbb
lcall
or
stos
jecxz
imul
cmp
mov
or
cmc
sbb
popf
jbe
es
sbb
jnp
sub
addr16
sbb
pop
sub
rcrl
shll
push
stos
lds
daa
xor
push
out
js
mov
inc
cmp
cwtl
rorb
iret
out
test
sbb
xchg
or
push
dec
daa
add
add
cmpsb
jl
out
add
xor
sbb
movl
sti
pop
out
pop
fnstenv
and
or
mov
fisubs
lock
jns
mov
sbb
mov
pop
adc
push
xchg
add
pop
push
jno
in
xor
bound
mov
add
mov
dec
mov
ficomps
add
movsl
icebp
adc
inc
mov
data16
sbb
movsl
pop
lods
adc
xchg
sub
xor
fiadds
lds
sbb
jne
jns
imul
iret
sahf
xor
mov
cld
cmpsb
pop
ljmp
lds
ja
gs
mov
push
movsl
out
ljmp
sbb
pop
mov
loopne
cmp
push
mov
xchg
adc
jo
in
movsl
mov
pushf
and
mov
xchg
adc
and
fbld
dec
popf
cmpsb
movsl
inc
inc
es
movsl
std
rcrb
adc
test
stos
jbe
jecxz
xchg
dec
popf
ss
fsubrp
xor
movsl
dec
xchg
out
mov
imul
mov
jno
movsb
mov
adc
movsl
mov
sbb
sarb
sahf
inc
sahf
insl
imul
inc
jbe
dec
add
mov
add
mov
movsl
cmc
push
rcr
movsl
cmp
xor
sahf
je
repnz
movsl
and
mov
push
push
ret
push
in
xlat
pop
loope
movsl
repz
dec
ja
and
inc
dec
dec
push
pusha
jp
dec
aad
in
or
ja
mov
dec
pop
sbb
mov
shll
movsl
pop
pop
and
cmp
jecxz
es
clc
fisubs
add
lcall
jecxz
int
fstpl
pop
jnp
jno
xorl
push
pop
in
std
movsl
and
mov
call
sbb
icebp
movsl
jnp
nop
ja
sahf
mov
xor
je
repnz
cmp
leave
push
sub
add
sbb
popa
pop
arpl
fldl
add
popf
dec
nop
add
mov
jns
cli
add
test
cmp
push
out
pop
pop
ss
cmp
dec
pop
push
scas
cli
mov
inc
inc
pop
inc
pop
fsts
enter
sbb
mov
adc
jbe
lods
xor
es
pop
mov
sub
cli
pop
mov
movsl
pop
stos
sbb
movsl
push
xor
idivb
insl
bound
clc
mov
movsb
mov
test
pop
cltd
cmp
sub
int
mov
mul
push
push
xchg
out
call
roll
int3
jl
and
mov
jns
mov
rorb
cmp
repnz
imul
pop
fiadds
pop
xchg
nop
es
add
sti
pop
icebp
and
jae
ss
subl
cwtl
and
lret
and
hlt
pop
xor
imul
cs
adc
lahf
mov
clc
mov
filds
pmulhw
data16
mov
js
ja
sub
fisttps
loop
xlat
mov
loopne
mov
dec
addb
enter
jle
dec
bound
mov
add
adc
int3
xchg
push
sub
push
mov
inc
push
popa
mov
mov
shll
mov
shlb
movsl
xchg
jne
sub
push
movsl
sti
fucomp
pop
sbb
pusha
jnp
mov
and
sub
lcall
out
mov
pop
mov
movsl
mov
push
shl
add
jge
sub
pop
aam
and
in
add
mov
fcomps
test
mov
lahf
jnp
pop
shr
sbb
cli
mov
sub
out
lods
scas
dec
cmc
bound
stc
int3
jmp
sbb
push
fisubs
sahf
mov
movsl
add
fwait
adc
push
rclb
es
int
mov
jo
fstps
jb
pop
push
mov
mov
mov
mov
fbld
push
xor
or
dec
insb
int3
xor
fisttpll
pop
xor
neg
or
popf
mov
jecxz
dec
test
jecxz
arpl
xchg
in
cwtl
adc
movsl
test
imul
filds
sub
adc
test
mov
cli
cmp
mov
and
xor
scas
xor
int
xor
cmp
shrl
cmp
in
or
pop
and
aad
sub
ret
pop
cmc
mov
sbb
outsl
out
jge
movsl
je
lods
pop
or
pop
test
inc
push
rolb
jno
insb
add
shll
xchg
or
imul
hlt
movsl
mov
ja
pop
insb
xchg
sahf
popl
adc
loope
mov
movsl
sarl
popa
xchg
jbe
pushf
cld
je
jo
test
jecxz
imul
pop
pop
movsl
test
jecxz,pt
pop
and
shl
sub
mov
hlt
jb
scas
cmp
add
repz
push
out
int
mov
popf
push
pop
lds
mov
adc
push
add
movsl
pop
dec
pop
push
mov
movsl
xor
jp
inc
jns
movsl
mov
je
data16
jmp
push
adc
fldenv
fldenv
movsl
add
cmp
out
loope
fldenv
aaa
fsubr
in
xchg
and
mov
cs
test
pop
add
je
xorl
test
clc
in
lods
addb
je
dec
movsl
stos
sbb
xchg
sub
nop
cmp
cmp
movsl
jg
into
jne
int
push
mov
push
fnstcw
or
mov
lods
call
dec
andb
in
pop
mov
fcoml
push
inc
inc
test
addr16
mov
or
mov
inc
insb
stos
cmp
sub
cld
inc
in
movsl
push
cmp
lods
stos
lods
and
push
out
test
inc
test
mov
xchg
mov
sbb
pusha
mov
addr16
scas
std
pop
test
cmc
clc
scas
test
pop
fsubs
movsl
sub
les
push
ficoms
movsl
and
in
daa
mov
addr16
mov
sbb
dec
movsl
mov
add
in
arpl
into
insb
jns
movsl
test
movsl
lea
pop
pop
in
sbb
repz
lret
pop
movsl
jl
arpl
sub
cmp
scas
in
lcall
mov
cmpsb
mov
mov
mul
out
fcompp
inc
addr16
push
in
test
mov
push
add
rolb
pop
in
push
dec
push
jl
outsl
fimuls
adc
jno
or
in
sbb
xchg
ret
cwtl
adc
pushf
scas
out
test
inc
aad
push
gs
lret
xlat
js
jl
in
or
cmpsl
adc
push
fldl
add
sbb
mov
rcr
or
cmc
outsb
cwtl
movsl
sbb
lods
pop
jge
ja
pop
ss
sbb
in
push
popa
div
cmp
inc
mov
in
jo
stc
mov
pop
push
jnp
aad
movsl
jg
inc
fwait
mov
mov
push
mov
push
in
and
scas
or
sub
std
repz
fisubl
sbb
ljmp
mov
aas
pop
jge
mov
ss
movsb
push
movsl
push
std
push
xor
daa
pop
movsl
movsl
cmp
rorb
insb
in
jb
js
mov
adc
imul
movsb
mov
cwtl
push
mov
icebp
push
sahf
aam
lds
movsl
sub
jp
std
sub
jns
push
cmp
mov
pop
mov
movsl
std
aam
repz
sti
sbb
mov
cmp
or
jmp
out
int
mov
pop
inc
mov
dec
dec
movsl
push
dec
cmp
shlb
or
imul
pop
push
add
enter
aam
loopne
shr
sarl
add
rorb
outsb
frstor
sbb
xor
sub
in
push
pop
movsl
fnstcw
aas
or
cli
lahf
std
cltd
cmp
mov
hlt
inc
push
xchg
push
scas
sub
mov
aaa
clc
loope
xlat
loop
out
mov
mov
mov
call
loope
dec
outsl
pop
sahf
mov
push
cld
add
movsl
imul
jnp
movsl
add
mov
push
sbb
rcl
je
xchg
movsl
pop
pop
gs
inc
adc
xchg
lret
add
dec
xchg
adc
pop
pop
in
ror
stos
mov
add
jge
xchg
stos
rcrl
mov
nop
and
pushf
sub
mov
mov
imulb
daa
cmpsl
insb
out
enter
and
jno
icebp
xchg
ret
test
lods
js
jae
int
mov
movsl
push
xlat
dec
inc
filds
cmpsl
movsl
add
or
dec
outsb
ljmp
push
inc
dec
aaa
and
push
ret
mov
mov
xchg
sbb
jns
std
icebp
mov
out
or
mov
stos
pop
pushf
in
scas
jae
les
bound
mov
aas
pushf
xchg
cmp
pop
pop
mov
ds
pop
fwait
mov
xchg
mov
jle
data16
xor
mov
mov
movsl
cld
adc
xor
add
and
cwtl
xchg
and
mov
and
inc
stc
cmp
push
jnp
hlt
add
rcll
push
lahf
movsl
cmpsb
mov
negl
orb
gs
or
xor
mov
in
rcrl
nop
movsl
aam
dec
xchg
into
jae
out
mov
movsl
and
fwait
add
pushf
mov
xchg
pusha
insb
push
or
mov
mov
push
dec
ljmp
or
iret
daa
movsl
xor
mov
jmp
movsl
iret
lret
int
sub
pop
mov
add
stos
or
ret
inc
nop
sbbl
test
mov
cmp
xchg
dec
pushf
lea
sti
mov
xchg
pop
loope
dec
mov
xchg
pop
jecxz
cmpsb
outsb
push
lods
sbb
pop
sub
mov
inc
mov
stos
jmp
mov
stos
jge
movsl
daa
pushf
bound
pop
push
mov
xchg
test
call
fsubrs
imul
in
outsl
mov
cmp
addr16
xchg
xchg
cmp
xchg
movswl
xchg
iret
int3
movsl
repnz
jb
mov
rorb
stos
and
or
rorb
neg
ljmp
jl
shlb
stos
jecxz
push
fldcw
cmpsl
outsl
cmp
ret
or
cmpsb
xor
pusha
sub
stos
sbb
xchg
xchg
cmp
or
stos
movsl
mov
push
movsl
fdivs
enter
adc
adc
mov
nop
sub
into
sbb
xor
or
mov
sbb
test
js
push
data16
jmp
out
push
mov
jp
test
xchg
push
adc
popa
cltd
sbbb
movsl
xor
sub
mov
push
icebp
cmc
cltd
mov
sbb
subb
and
adc
ret
movsl
call
jge
shlb
clc
cs
xor
inc
lods
lcall
cli
pop
mov
movsl
sbbb
rol
xchg
push
mov
dec
fwait
push
inc
push
inc
and
leave
scas
sbb
sbb
clc
arpl
mov
bound
aam
movsb
xchg
stc
mov
or
popa
push
gs
jle
dec
fstl
push
xchg
mov
fs
and
jl
adc
mov
movsl
pop
and
jno
loop
jbe
mov
mov
movsl
xor
cld
lods
popf
scas
push
clc
movsl
rol
in
mov
mov
and
out
jmp
push
movsl
jo
xor
inc
mov
sbb
popf
movsl
sbb
jmp
mov
sub
push
mov
movsl
add
int3
decl
ds
fisubrl
leave
fdivl
sbb
mul
aam
push
stos
jb
inc
movsl
jge
xchg
jns
dec
jmp
movsl
push
sub
mov
jecxz
adc
movsl
add
clc
fucom
jne
movsl
bound
leave
add
mov
xor
push
xchg
add
push
repnz
lods
mull
mov
mov
movsl
pop
xor
xlat
in
movsl
dec
lods
push
sub
cmpsb
imul
mov
lock
lods
scas
pop
movsl
nop
jne
fmuls
dec
in
mov
jnp
pop
or
adc
mov
jbe
inc
gs
scas
movsl
xorl
sarb
jl
push
and
mov
xchg
mov
es
dec
shll
gs
cmp
xchg
leave
lock
lds
test
xor
sbb
add
loop
xchg
aas
movsl
mov
pusha
inc
dec
xchg
sbb
sarl
loopne
pop
inc
aad
mov
shr
movsl
es
test
sbb
sub
cmp
push
jg
pop
gs
pushf
xor
adc
add
lcall
xchg
test
fsubl
es
cmc
sarb
outsb
bound
mov
sub
inc
shll
dec
xchg
out
mov
movsb
mov
and
mov
out
rcrl
fiaddl
fwait
cmpsb
movsl
mov
arpl
movsl
cmp
pop
or
ljmp
jmp
mov
lret
jb
aaa
inc
popf
cmp
stos
cmpsl
xchg
insb
push
mov
jecxz
inc
xchg
sar
add
cbtw
dec
aaa
jnp
imul
les
xorl
lds
pop
mov
xchg
inc
movsl
iret
pop
mov
jno
add
aas
cmp
mov
inc
or
movsl
popa
mov
adc
in
push
push
fsubs
int3
adc
pop
movsl
pop
dec
xor
jae
inc
push
js
pop
jl
xchg
mov
ds
loope
dec
pop
mov
leave
mov
push
loope
push
pop
jns
movsl
insb
push
faddp
js
movsl
out
lret
mov
sbb
stos
inc
and
in
shr
lret
cld
jp
cmp
and
testl
lcall
cmp
bound
pop
mov
cmp
movsl
or
or
or
ret
and
inc
xchg
icebp
loope
and
ljmp
fldl
out
stos
xchg
xchg
aaa
adc
aas
jbe
leave
addl
mov
sub
dec
pop
rol
test
cmpsl
fbstp
mov
mov
movsl
hlt
mov
shlb
pusha
lock
pusha
push
and
popa
roll
pusha
cmc
hlt
movsl
adc
ss
pop
mov
mov
push
dec
scas
and
adc
cmp
inc
fdivrl
xchg
add
nop
movsl
or
jge
sbb
fwait
popf
and
fsubl
scas
sahf
adc
dec
mov
call
mov
jmp
das
mov
sbb
mov
xchg
lea
or
mov
movsl
outsl
mov
xchg
shll
pop
aas
cli
movsl
adc
daa
stos
ret
idivb
cltd
add
or
cmpsl
out
mov
fdivl
xor
mov
push
mov
movsl
adc
outsl
cmp
xchg
pop
cs
and
xchg
push
xor
loop
xchg
js
adc
push
and
movsl
mov
inc
sbb
cmp
adc
movsl
jne
pop
sub
test
lock
movsl
je
mov
ficompl
push
aaa
outsb
mov
sbb
dec
mov
inc
jns
pusha
push
sahf
sub
sub
mov
sbb
jns
mov
loopne
aad
popf
xchg
mov
scas
movsl
dec
pop
lret
int3
popa
cmc
data16
xor
movsl
xchg
jp
mov
pop
aad
lock
pop
jl
push
in
sub
inc
jl
mov
jo
cmp
lods
and
adc
nopl
cmpsb
shll
test
sbb
or
pop
rep
sbb
dec
fs
jmp
jmp
mov
cmp
dec
fnsave
fld1
jg
clc
jmp
fwait
or
pop
repnz
dec
movsl
out
jmp
mov
in
and
fimuls
lahf
movsl
test
jl
int
sub
push
das
or
sahf
test
sbb
std
push
pushf
repz
sar
rclb
jecxz
movsl
xchg
mov
out
push
movsl
arpl
add
push
call
cmc
pop
fimuls
mov
lods
mov
jno
je
xchg
inc
or
test
xor
adc
movsl
sti
data16
xchg
fwait
mov
mov
and
sbb
sbb
movsl
sub
outsl
push
xorb
mov
stos
jp
add
pop
adc
xlat
roll
lret
push
mov
add
pop
rcr
in
mov
or
and
movsl
cld
inc
nop
jg
push
movsl
sbb
dec
jae
xlat
icebp
andb
or
inc
mov
pop
mov
pop
jae
in
dec
popf
cmp
jno
and
xlat
in
jmp
push
out
push
inc
fisubrs
sbb
out
sbb
cld
or
mov
xlat
jp
imul
test
xor
jmp
push
mov
and
call
mov
bound
decl
or
mov
in
lds
adc
sub
cmc
pop
imul
xchg
fsubs
adc
pushf
mov
test
aad
icebp
lods
movsl
xchg
hlt
pushf
je
jae
and
fistpll
dec
or
js
add
push
inc
pop
inc
fstpl
sub
pusha
int3
scas
scas
and
push
jno
sbb
in
ffree
sbb
add
push
pop
jns
dec
cli
ficomps
adc
lea
push
cmc
sbb
sub
clc
lds
mov
xor
sub
ja
pop
mov
scas
push
loopne
sub
adc
cmc
mov
push
mov
cltd
rcr
pop
adc
xlat
inc
mov
lahf
mov
xchg
pop
sub
mov
es
xor
jmp
and
repnz
mov
lds
adc
mov
push
jns
ss
and
push
add
bound
cmpsb
push
mov
cmp
dec
pop
psubusb
outsl
in
jmp
xchg
mov
pop
sbb
sbb
pop
ret
pop
fcomps
test
cwtl
hlt
les
mov
rorl
sahf
sbb
bnd
scas
fcoms
mov
push
push
mov
add
mov
pop
push
scas
mov
and
sbb
loope
and
rorb
sti
sbb
adc
test
push
push
and
roll
sbb
mov
mov
out
roll
rclb
dec
xchg
ret
mov
rolb
mov
jecxz
push
icebp
popf
xor
dec
xchg
arpl
sub
jle
or
sub
push
lea
inc
arpl
aad
movsl
aaa
icebp
leave
cmp
mov
fists
mov
into
push
jecxz
lcall
inc
and
lret
ret
xchg
ffree
xor
lret
mov
shlb
jg
and
inc
xor
loopne
mov
out
adc
addr16
in
xchg
sub
popf
and
insb
mov
jne
xchg
or
js
pop
sahf
shl
jb
sub
scas
bound
fnsave
enter
push
scas
iret
in
sbb
and
clc
pop
mov
mov
mov
dec
adc
stos
mov
sub
fdivrs
sbb
aad
jge
or
pop
lcall
mov
push
inc
ret
outsb
or
insl
aad
popf
add
cltd
in
cli
fs
shr
lret
pop
aam
and
loopne
pusha
call
jns
jl
and
or
cmc
push
jnp
dec
movsb
in
arpl
and
sub
stos
frstor
sub
inc
sahf
pusha
gs
or
pop
add
push
vpunpcklwd
ja
shll
xor
test
pop
mov
sub
mov
icebp
pop
call
push
push
adc
xor
cmp
push
pop
in
shll
xor
sbb
cmp
movsb
sbb
dec
sub
movsl
sub
shrb
and
fwait
gs
cmp
loope
fwait
jmp
jg
sbbl
adc
dec
pop
outsl
dec
xor
movsb
iret
mov
out
dec
pop
xchg
arpl
and
or
es
xchg
sbb
in
mov
movsl
aaa
xor
push
movsl
loope
js
test
insl
test
mov
lret
push
stos
psrlw
fs
es
add
andl
movsl
adc
call
ljmp
mov
fdivs
xchg
mov
arpl
push
cli
shl
sbb
inc
mov
popf
adc
js
popa
imul
sahf
sub
pop
mov
add
lods
mov
push
test
popf
js
sti
pop
popa
sbb
scas
das
push
shr
sbb
add
mov
cmpsl
jae
xor
lahf
jns
mov
pop
out
movsl
stos
and
inc
inc
mov
jp
andb
add
jnp
add
scas
test
inc
movsl
cmp
mov
push
cmc
mov
imul
repz
movsb
stc
movsl
jnp
pushf
fcoml
sub
pop
leave
or
movsl
push
dec
cmp
bound
mov
movsl
push
lds
imull
movsl
jmp
sarb
test
xchg
pop
inc
and
cltd
xor
push
in
jecxz
out
mov
mov
scas
mov
adc
out
out
xor
pop
rorl
std
xor
sub
push
mov
xchg
mov
push
test
mov
jmp
repnz
out
movsl
mov
mov
sbb
movsl
arpl
test
add
clc
jmp
outsw
testl
insb
rclb
ret
push
cld
dec
cmpsl
mov
mov
fadd
movsl
xor
fidivrs
pop
pop
sub
mulb
dec
movsl
fwait
mov
cmp
sub
mov
xlat
fucomp
xchg
mov
dec
push
cmp
cltd
mov
nop
arpl
mov
jle
fimull
cld
jb
add
jno
loope
movsl
dec
subl
cld
mov
cmp
stc
movsl
cwtl
scas
cmp
and
inc
vpslld
add
and
movsl
xchg
xor
stos
and
das
and
int
je
sub
pusha
dec
pop
pop
movsl
mov
or
incb
xor
loope
fistps
sbb
jno
and
dec
jno
and
mov
clc
push
in
jne
push
movsl
ret
insb
rcll
scas
popa
movsl
rcrb
out
mov
mov
test
lcall
loop
imul
cld
fdiv
enter
std
jo
scas
stos
in
loop
push
js
dec
sbb
jge
fistps
int3
add
dec
loop
out
lods
cli
out
sbb
pop
push
fcompl
xor
std
cmp
mov
sbb
jo
jecxz
rclb
and
cld
in
movsl
xor
dec
jae
jecxz
add
sbb
inc
pop
js
mov
push
repnz
movsl
orb
xor
cmpsl
movsl
push
and
cmc
repz
std
in
insb
movsl
sbbb
rcll
imul
mov
or
sub
je
lods
push
push
xchg
aad
mov
in
cmpsb
movsl
mov
movsl
or
roll
insb
pop
movsl
testl
test
xchg
cltd
sub
mov
xor
cmc
jl
fadds
orb
sbb
in
movsl
add
push
repz
movsb
mov
xor
orb
repnz
fbld
loop
xor
pop
and
jbe
repnz
xchg
xchg
cwtl
fwait
int
sbb
daa
rep
push
ret
pop
ss
popa
cli
cmp
cmp
mov
enter
sub
movsl
dec
cwtl
mov
stos
cmpsb
sbb
inc
pusha
insl
movsl
andb
push
mov
inc
jp
sbb
in
xchg
add
ret
cmp
setbe
mov
in
add
fisubs
popf
mov
adc
mul
cmc
movsl
pushf
xchg
bound
inc
jle
aad
cli
scas
mov
jg
xor
out
sahf
mov
jne
enter
pop
fisttps
fidivrs
mov
jno
and
idivl
sub
mov
xchg
xchg
ljmp
cmp
jge
scas
push
gs
aad
fldl
push
test
cmp
dec
push
cwtl
js
pop
mul
movsl
imul
mov
inc
push
andl
cltd
add
in
or
lock
xchg
xor
movsl
dec
icebp
mov
into
or
ds
or
movsl
aad
mov
mov
stos
es
cmp
pop
xchg
fnstenv
dec
movsl
pop
jmp
inc
mov
mov
mov
add
pushf
or
out
fwait
mov
xchg
es
mov
dec
int
mov
pop
lock
sbb
push
sbb
mov
popf
cs
pop
movsl
shl
inc
and
xlat
loopne
movsl
shrl
adc
in
movsl
fcmovu
cmp
movsl
mov
mov
movsl
jnp
leave
cld
dec
dec
jp
adc
inc
dec
pop
rorb
lret
push
inc
shll
pop
sub
add
xchg
call
lcall
xchg
sbb
mov
and
sub
leave
adc
popa
movsl
test
xor
pop
lcall
jbe
faddp
jmp
lret
imul
lea
movsl
xor
dec
sbb
mov
pop
sahf
and
jp
cmpsl
pop
aam
mov
mov
aam
movsl
push
push
les
sub
popa
jo
xchg
xor
rorb
mov
fdivr
in
icebp
movsl
rorl
or
lcall
xchg
dec
movsl
push
mov
ja
cmp
das
in
mov
jne
pop
push
movsl
and
mov
mov
mov
push
int3
in
and
daa
paddsb
sub
fs
lods
push
mov
xor
in
pop
xchg
bnd
mov
or
int
ds
xchg
xor
aad
fcoml
movsl
in
push
xor
dec
fists
lahf
jb
inc
pop
mov
jmp
into
mov
ljmp
movsb
icebp
xor
mov
adc
cmp
push
jp
sbb
pushf
shrb
aaa
cwtl
mov
sub
stc
fidivl
push
in
sub
mov
les
popf
or
mov
gs
rcll
ljmp
mov
cld
sub
movsl
clc
jbe
das
sti
and
xchg
movsl
jge
test
mov
mov
fisttpll
adc
xchg
fisubs
jae
mov
push
cmc
mov
inc
movsl
mov
lds
sbb
add
xchg
popf
in
outsl
push
imul
jg
les
push
fsub
cmp
xchg
stos
mov
cs
mov
movsl
xor
xchg
xor
jbe
push
iret
cmp
dec
in
div
xchg
std
fstp
aam
jmp
ds
movsl
or
cmc
dec
pusha
stos
add
cmpsl
inc
jnp
dec
insb
mov
mov
lods
mov
push
pop
popf
inc
cmpsb
in
and
sub
pop
ret
movsl
call
stc
cmp
xlat
fprem1
add
sub
cwtl
cmp
jae
fldl
out
cmp
test
or
mov
mov
pop
in
pop
pop
add
movsl
dec
addb
push
in
jle
jb
adc
loop
movsl
and
xchg
je
movsl
ret
jb
sbb
loope
mov
sbb
mov
cmp
add
and
cmc
mov
jo
sbb
xor
pop
ja
add
insb
mov
mov
clc
and
sbb
push
mov
pop
push
sahf
jg
outsb
cmp
mov
or
mov
movsl
xor
bnd
movsl
inc
push
mov
mov
pop
in
out
mov
in
mov
mov
pop
pop
shrl
psubusb
out
lock
inc
nop
xchg
sbb
roll
movswl
fimuls
movsb
cwtl
insl
pop
cmc
dec
fstps
jns
sahf
popa
adc
popfw
mov
and
push
fs
mov
arpl
aas
mov
push
js
mov
pop
es
mov
push
in
mov
fdivrp
push
scas
int3
test
push
inc
movsl
es
ja
jp
push
jns
xchg
adc
ljmp
sbb
movsl
mov
add
push
mov
int
cmp
repnz
or
pop
sbb
fstl
fldl
aad
mov
leave
lds
mov
inc
shlb
cli
movsl
mov
inc
pop
mov
cltd
cmp
jle
mov
sub
push
lods
mov
cmp
pushf
push
shrl
xchg
sahf
das
stc
dec
loopne
sbb
inc
lcall
ljmp
pop
mov
pop
movsl
push
xchg
sub
cltd
and
testb
xor
lds
lods
and
mov
movsl
push
jecxz
lock
add
je
sub
loope
fimuls
rol
inc
stos
popf
subb
jmp
in
mov
sub
push
popa
mov
mov
clc
dec
push
mov
push
sahf
xor
pop
push
mov
in
sub
test
adc
sarl
cmpsl
cltd
lods
and
add
ljmp
sbb
sbb
lret
add
add
movsl
mov
add
jp
sub
xchg
jo
cmpsl
adc
cmpsl
push
movsl
lret
mov
jecxz
sbb
lods
inc
add
and
and
mov
mov
pushf
leave
addr16
add
aad
vmovsldup
das
xchg
les
push
jns
push
repnz
out
sub
push
int
movsl
push
dec
jle
cmp
sti
movsl
sbb
mov
inc
jo
movsl
mov
in
movsl
or
pop
push
gs
pop
out
movsl
scas
shlb
cmp
mov
mov
js
xlat
push
dec
mov
inc
call
enter
movsl
push
sub
divb
in
in
fs
outsl
shrl
out
cmpsw
or
out
loope
add
test
neg
pop
jbe
popa
mov
sbb
sub
movsl
mov
out
jns
adc
xchg
jp
mov
movsl
lods
jo
push
adc
flds
movsl
rolb
mov
pusha
mov
and
add
xchg
scas
lahf
mov
loope
mov
mov
movsl
fbstp
xchg
arpl
mov
ja
push
lods
out
aad
vmovntpd
daa
adc
lahf
jmp
pop
jo
fisubs
loop
not
outsb
stos
push
mov
call
fucom
jb
pop
ret
movsl
scas
sbb
lds
ret
cmp
xor
cld
stos
mov
mov
sub
loope
lds
insl
sub
pmulhuw
imul
pop
cmp
xlat
adc
xor
or
mov
rcrb
mov
xchg
out
movsl
andb
cmpl
push
adc
push
adc
mov
mov
inc
mov
mov
xchg
pop
mov
outsl
xchg
xor
fists
jmp
movsl
mov
movsl
jle
xchg
sbb
add
stc
and
scas
je
ljmp
lcall
sub
mov
mov
pop
daa
xor
fsubs
add
push
test
sbb
jb
int
jo
movsl
push
stos
inc
dec
inc
imul
in
in
mov
mov
lcall
xlat
sahf
int
mov
out
in
jecxz
test
pop
xor
movsl
sub
jns
cmpsl
movsl
xchg
mov
sbb
out
cmp
and
outsl
insl
test
ds
mov
lret
movsl
in
pop
jb
lcall
movsl
stos
mov
mov
xchg
fsubrl
xchg
add
sbb
lock
popa
jb
push
fiaddl
lahf
int3
test
mov
jbe
push
pop
jle
lret
in
mov
inc
not
mov
and
movsl
pop
imul
sbb
cli
sbb
add
mov
pusha
adc
dec
std
aad
and
and
imul
push
cmpb
pushf
dec
je
dec
cmp
pop
push
jle
lret
mov
mov
add
loope
mov
cli
arpl
test
hlt
or
aam
in
pop
enter
adc
mov
cli
loop
into
jno
add
dec
jmp
stos
insb
testb
mov
inc
sub
sub
out
in
call
add
jge
test
jbe
sbb
mov
pop
jl
sub
movsl
mov
outsb
adc
scas
in
push
stc
js
push
jno
sbbl
inc
movsl
lea
and
stc
pop
fwait
ja
mov
mov
cwtl
or
mov
out
lock
dec
dec
std
test
mov
push
jnp
mov
or
mov
sbb
fists
and
int3
xor
aas
lock
movsl
or
call
xchg
or
movsl
mov
mov
and
out
pop
sub
mov
into
mov
ret
in
push
and
imul
flds
push
inc
insl
push
cwtl
in
loope
push
pop
pop
inc
xchg
scas
stos
sahf
movsl
xor
data16
test
push
xlat
ja
inc
shrb
jbe
rcll
jb
dec
imul
mov
push
fcoms
ror
sti
mov
inc
and
nop
shrb
sub
cltd
pop
push
pop
into
movsl
add
cmp
xchg
sbb
inc
jbe
dec
jge
and
cmc
rolb
vpaddusb
movsl
iret
aad
icebp
fisubrl
sub
add
in
mov
sahf
mov
cmpsb
nop
jno
imul
test
pop
ss
xchg
sub
cmp
jne
xchg
mov
je
add
incl
das
xchg
stos
pop
push
sar
addb
es
ret
movsl
ds
adc
mov
imul
outsl
ss
mov
add
inc
loop
in
mov
outsl
std
and
cltd
mov
jne
cmp
imul
imul
mov
stos
ss
push
mov
jecxz
test
pop
mov
mov
mov
cmp
push
data16
pop
lock
out
in
dec
push
xor
and
push
in
movsl
dec
push
adcb
movsl
test
add
movsl
mov
adc
cmp
add
leave
imulb
or
mov
mov
jno
push
scas
jmp
test
int3
pusha
add
sahf
aad
or
jg
ja
xor
mov
inc
loop
out
mov
jmp
flds
dec
insb
movsl
xchg
loope
lret
and
sbb
xchg
cmpsl
pushf
or
push
lret
ret
jae
pop
std
inc
adc
stos
lods
pop
jp
adc
movsl
xor
lods
movsl
int3
int
cld
add
or
movsl
out
pushf
daa
cmp
dec
gs
add
nop
dec
movsl
loop
sbb
int
lods
jg
out
js
dec
in
cmc
subb
sub
mov
outsb
inc
rcrl
push
popa
push
in
clc
out
std
daa
out
lds
fucomp
movsl
cltd
xchg
sub
pop
adc
popf
test
fs
pop
cmovbe
or
movsl
enter
inc
xchg
xchg
ljmp
int
loop
les
jl
int3
jo
sub
bound
negb
fldenv
mov
test
pop
xchg
add
testb
cmovg
movsl
mov
adc
iret
leave
add
mov
push
cwtl
mov
sbb
xlat
divl
cltd
pop
sub
jmp
out
mov
jmp
iret
add
dec
das
ret
lcall
pop
gs
andb
sbb
daa
and
fldl
movsl
out
push
int3
jae
xor
movsl
jb
adc
mov
adc
or
std
pop
sbb
movsl
data16
pop
dec
push
gs
jns
and
and
movsb
mov
xchg
pop
daa
shrb
leave
xor
sub
jl
shl
popa
xor
push
cmp
xor
fnstsw
icebp
fsub
mov
or
mov
pop
inc
dec
aad
fcmovnbe
movsb
push
push
mov
stos
test
adc
sbb
dec
mov
xlat
mov
adcl
sahf
mov
fstl
pop
out
pop
and
fs
pop
lds
mov
mov
add
mov
daa
jae
adc
and
popf
push
int
sbb
mov
fs
data16
outsl
add
push
pop
fldt
push
std
jp
in
sub
js
pop
mov
xlat
xorl
adc
cmc
test
addr16
test
daa
and
add
movsl
push
es
std
js
divl
hlt
gs
and
mov
shlb
inc
imulb
or
punpcklwd
adc
push
push
adc
movsl
mov
sub
test
aam
add
fstps
lods
andl
test
dec
cwtl
inc
add
add
xchg
clc
ret
popa
jl
je
add
aas
mov
mov
push
arpl
ja
xor
mov
and
pop
subl
dec
cmp
mov
sbb
aad
in
xor
sub
cmp
xchg
inc
jns
fidivl
mov
mov
sbb
xor
cltd
mov
inc
sbb
clc
in
nop
out
fwait
out
mov
insl
pop
sarl
adc
sbb
adc
push
adc
xchg
cli
add
in
mov
pop
adc
outsl
jmp
cmc
fisubl
jle
scas
andb
repz
pop
add
xchg
jg
es
out
movsl
mov
pop
jle
sti
test
lods
or
sub
loope
cmpsl
cmc
jbe
dec
add
jne
shl
in
cmp
pop
jns
ljmp
loope
clc
sbb
push
cmp
dec
popf
jb
sbb
push
sbb
repz
fs
clc
cmp
cmp
cs
in
fs
dec
data16
test
lods
fwait
arpl
mov
fstl
out
jne
jg
je
es
int
imul
and
lds
fistpl
inc
movsb
add
mov
out
cmc
test
clc
dec
test
rorl
mov
imul
pmuludq
aas
movsl
ja
dec
test
inc
movsl
mov
push
jle
movsl
add
out
pop
mov
jnp
inc
xchg
ja
cmpsb
out
pop
addb
push
adc
movsl
xor
mov
aad
and
jl
sbb
push
sbb
movsl
push
insl
dec
rclb
dec
movsl
sti
and
add
ret
loopne
xchg
ljmp
dec
inc
adc
sti
out
pop
idivb
andb
dec
pushf
cs
movsb
lds
in
and
cmpl
popf
lds
xchg
das
std
push
movsl
mov
cmp
fdiv
addr16
lret
sub
pop
shll
push
int3
in
out
enter
arpl
in
lods
push
movsl
sub
addr16
sub
nop
movsl
into
inc
mov
mov
mov
xchg
cmp
lahf
sti
out
dec
mov
pop
call
inc
ja
mov
mov
add
fimull
fidivs
test
dec
stc
cltd
cmp
movsl
in
repz
mov
test
cmp
sub
jmp
aad
out
pop
jge
out
mov
mull
leave
or
or
and
add
loopne
stos
cmp
cmp
mov
push
mov
and
rorl
pop
inc
push
jle
int3
loop
mov
out
pop
pop
rol
push
aam
add
inc
pop
test
in
ljmp
xlat
decb
xchg
and
icebp
jne
aam
stos
cld
xchg
mov
movsl
adc
adc
fwait
mov
mov
js
lret
mov
repnz
popa
push
out
jle
ljmp
jmp
or
test
pop
in
rolb
mov
sbb
ret
movsl
leave
jno
shlb
arpl
jbe
movsl
sbb
mov
movsl
movsb
stos
pop
mov
mov
les
lds
xchg
into
in
inc
inc
inc
insb
xlat
movsl
les
add
fwait
pop
jo
ficoml
out
sahf
mov
inc
icebp
mov
test
fdiv
mov
movsl
pushf
mov
in
movsl
and
data16
mov
inc
and
clc
loope
add
push
mov
mov
in
add
jecxz
inc
movsl
jge
pop
out
push
jmp
movsb
xchg
adc
data16
and
inc
fs
outsl
pusha
dec
outsb
dec
dec
insl
les
pusha
xor
add
movsl
push
cltd
inc
adc
pop
aaa
mov
ljmp
push
pop
xchg
popf
cmp
inc
mov
rorb
mov
sarl
lret
std
outsb
movsl
inc
cli
mov
hlt
pop
loop
loopne
push
scas
movsl
aaa
push
daa
push
mov
add
in
int
lock
shlb
and
movsl
imul
jne
call
dec
pop
sbb
sahf
mov
mov
mov
dec
in
or
xor
and
divb
pushw
jnp
or
mov
mov
in
adc
rdmsr
cmp
xchg
fldl
jbe
mov
jg
jnp
pop
add
in
inc
push
movsl
sub
out
les
mov
mov
sbb
add
inc
lods
pop
dec
or
in
xchg
enter
cmp
xchg
lea
movsl
jb
inc
in
movups
insl
mov
mov
pop
movsl
mov
das
aas
mov
dec
push
in
int
out
sbb
movsl
and
push
cmpsb
xor
lret
cmpsl
movsl
or
je
lds
pop
shll
or
call
xor
movsl
sahf
inc
aas
mov
mov
adc
imul
mov
mov
movsl
mov
xor
shlw
idiv
popf
xchg
movsl
aas
or
movsl
test
sbb
test
fstpl
lock
ret
clc
leave
mov
movsl
jl
bound
data16
movsl
xchg
mov
stos
test
add
lods
dec
dec
js
fnsave
movsl
stos
mov
cmpb
sub
inc
movsl
add
call
mov
orl
movsl
and
xchg
xor
pop
dec
jo
push
andb
sbb
addr16
mov
mov
mov
test
sbb
pop
mov
fmuls
push
fisubl
sahf
stos
in
rol
sti
call
gs
xchg
mov
loop
push
nop
sub
cmp
sahf
jmp
sbb
ljmp
or
dec
mov
gs
mov
insl
mov
mov
sub
add
add
into
jge
bound
popf
mov
xchg
dec
pop
cmpsl
cmpsl
stos
popf
popa
shl
cmp
andl
push
movsl
inc
xchg
xor
test
std
imul
and
inc
jecxz
out
lds
fcoms
mov
push
rcl
sti
stc
fnstenv
xor
and
hlt
fdivs
leave
inc
pop
pusha
stc
dec
in
cmp
lods
mov
mov
add
fdiv
in
cmpsb
repz
es
mov
mov
sub
jbe
inc
fldl
in
ja
movsb
test
cmpsl
dec
add
lods
pop
fnstsw
sbb
mov
pop
gs
jmp
mov
movsl
imul
cltd
fisubs
sbb
mov
clc
mov
pop
and
aaa
mov
sub
sub
out
mov
ret
lods
inc
xor
mov
mov
lds
shll
popf
or
xchg
ret
mov
outsb
push
enter
shlb
cli
sbb
imul
mov
and
pop
pusha
inc
insb
xchg
mov
sub
and
inc
movsl
in
test
mov
lret
sbb
in
inc
push
in
jb
movsl
adc
dec
dec
mov
sti
pop
xchg
test
mov
test
mov
xorb
inc
mov
inc
fsubl
push
ret
jno
flds
cmp
hlt
mov
mov
push
push
loope
adc
test
mov
xchg
xchg
sub
or
pop
cmp
in
push
in
leave
test
ret
mov
jns
mov
cmp
in
jo
loopne
add
repz
sahf
dec
addr16
sti
test
mov
push
in
and
rcrb
push
ss
jns
outsb
movsl
adcb
add
mov
mull
mov
insl
stos
xchg
sub
mov
sbb
sarb
dec
sub
es
fistpll
xchg
jno
dec
andl
movsl
jo
push
rcrb
mov
mov
cmp
int3
movsl
js
iret
hlt
dec
neg
movsl
ss
mov
mov
stc
mov
pop
and
iret
and
hlt
cltd
dec
faddl
sahf
xor
imul
nop
or
push
sub
and
sarb
lods
add
std
insb
lret
xor
pop
xor
popf
outsb
xchg
rcrl
imulb
mov
xchg
in
mov
pop
cwtl
xchg
lahf
adc
xlat
ljmp
icebp
or
cmc
test
sub
push
mov
in
mov
out
sub
mov
sub
jle
push
pop
pop
testb
xchg
mov
and
in
cli
loope
sbb
mov
aad
inc
or
outsb
mov
jecxz
push
xchg
jmp
pop
pop
cmpsb
sti
cmp
jmp
lret
stos
lods
jns
dec
test
inc
iret
or
outsl
mov
stos
inc
aas
pop
xor
inc
imul
adc
push
outsb
xchg
repnz
popa
push
mov
jo
fstl
mov
pushf
popf
imul
mov
sub
or
xlat
xchg
and
sahf
pop
push
mov
cmp
adc
pop
inc
xor
clc
jns
das
in
ret
nop
addr16
push
mov
lea
xchg
sbb
sahf
xlat
stos
mov
push
addr16
js
sub
mov
mov
sub
push
adc
cmc
mov
in
add
nop
push
and
outsb
scas
mov
cmc
mov
cmpsb
mov
std
mov
push
pop
mov
pop
push
cld
mov
pop
inc
jmp
sub
sti
rcr
add
out
bound
in
pop
rcrb
aaa
push
mulb
mov
push
adc
ret
in
inc
push
mov
mov
clc
stc
jge
loopne
sbb
mov
pop
imul
hlt
add
repz
repnz
arpl
sub
mov
and
pop
adc
movsl
dec
pop
lcall
sbb
mov
xchg
sub
mov
repnz
out
jl
in
mov
scas
pop
mov
adc
xchg
sub
jle
dec
pop
incl
movsl
or
movsl
add
push
test
lret
lock
pop
in
pop
hlt
movsw
ljmp
xchg
clc
inc
insb
movsl
pop
jae
out
repz
movsl
test
std
dec
pop
inc
movsl
jle
mov
ljmp
sub
or
xchg
add
mov
xchg
mov
cmc
push
xchg
in
mov
stc
movsl
push
imul
add
in
ljmp
push
sub
movsl
icebp
outsl
outsb
loope
inc
xchg
xor
fwait
mov
xchg
int
pop
xchg
add
push
lea
push
inc
shll
mov
mov
sub
and
mov
cmc
ja
shlb
cmp
sub
adc
movsl
mov
and
pusha
or
int3
lock
call
in
pusha
fstpl
xor
add
sar
fldcw
bound
stos
pusha
sub
lds
roll
movsl
out
or
mov
or
insb
cwtl
push
movsl
sti
fcompl
mov
js
push
sbb
fs
out
into
arpl
movsl
push
in
sub
and
subb
mov
inc
sbb
sbb
in
scas
dec
dec
jp
fidivs
inc
aad
das
sub
and
lret
clc
or
insb
mov
enter
icebp
fidivrl
lea
mov
pushf
jmp
cli
out
dec
aam
jp
pop
clc
int
addl
pop
outsl
jmp
add
mov
stos
and
imul
pop
test
add
sub
test
fst
movsl
ljmp
or
movsb
popf
mov
sti
push
dec
mov
mov
and
mov
mull
pop
xchg
cmpsb
shlb
jae
pop
jnp
jge
out
hlt
enter
or
and
fistl
fdivrp
dec
dec
movsl
add
jl
jmp
jecxz
mov
fmulp
in
jnp
lahf
ds
cltd
sahf
scas
and
loope
fadds
cs
mulb
scas
popa
movsl
push
out
jb
flds
fcompl
xlat
in
add
ja
pusha
mov
mov
pop
fcoms
lock
jmp
xor
push
pop
outsb
sub
out
and
movsl
sahf
cmpsb
jo
dec
stos
mov
sub
stos
sub
mov
lods
icebp
xor
repnz
stos
add
lods
or
movsl
mov
sbb
or
in
imul
xchg
imul
cmp
mov
mov
add
pop
jb
int
stos
sbb
and
fstp
push
dec
stos
into
mov
jae
int
mov
inc
in
nop
test
jb
mov
pop
movsl
clc
popf
and
mov
jmp
adc
and
lds
adc
mov
or
mov
movsl
adc
push
test
lods
scas
movsl
or
add
fsubl
lods
mov
pop
movsl
pop
call
cmpsb
mov
xor
mov
stos
sbb
xchg
dec
xor
movsl
jo
aad
add
arpl
es
xor
xorb
mov
movsl
aas
mov
fwait
or
loop
mov
mov
movsb
cmpb
mov
test
dec
add
stc
xor
fs
jb
movsl
call
jecxz
in
jmp
movsl
fists
insl
insb
lds
subl
cwtl
sbb
sarb
push
mov
shlb
xadd
movsl
testb
mov
movsl
mov
movsl
lods
sub
sub
xchg
jg
loopne
sti
lock
scas
or
cmp
jbe
pushf
mov
addb
cmpsb
dec
xchg
adc
movsl
andl
shrb
ljmp
mov
push
mov
movsl
cmp
mov
sub
jl
data16
test
lods
mov
pop
arpl
xlat
in
das
add
outsl
insb
pop
jge
cmp
mov
lret
imul
fxam
movsl
call
jle
stos
movsl
or
into
xchg
push
daa
sbb
dec
ljmp
lods
imul
xchg
jmp
push
shr
pop
shrb
out
inc
into
jne
dec
scas
xor
mov
jb
dec
loop
outsl
pop
stos
mov
sbb
xchg
mov
pushf
rorb
add
xor
mov
rclb
mov
mov
inc
adc
ret
cmc
jne
lds
push
sub
lcall
pusha
imul
jp
test
subl
loopne
fdivp
in
out
pop
dec
fimull
push
fadds
or
lea
cmpsl
xchg
mov
je
pop
xchg
movsl
push
pop
insl
out
inc
mov
sub
imul
and
mov
outsb
cmpsb
in
mov
imul
out
int3
mov
dec
daa
mov
shr
pop
cmc
pop
movsl
outsb
dec
jns
adc
rcll
mov
mov
mov
jns
out
pushf
pop
xchg
jae
in
pusha
mov
inc
adc
mov
movsl
in
mov
mov
cmc
out
sbb
popf
mov
movsl
and
addb
mov
cmp
jnp
rorb
push
hlt
mov
js
stc
imul
ja
sbb
mov
movsl
imul
sub
rorl
dec
cmp
and
out
xor
sti
bound
sbb
loop
jae
movsl
dec
jbe
in
push
jl
test
and
insl
add
nop
aas
inc
cltd
movsl
inc
mov
mov
pop
cmp
xlat
pushf
mov
ljmp
pop
je
fscale
adc
imul
sub
cmp
xchg
lods
mov
inc
cmpsb
sub
jne
pop
andb
outsb
out
sub
scas
xchg
mov
add
jmp
xor
mov
dec
dec
cld
movsl
push
sti
lds
or
shl
xor
imul
cld
movsl
sti
enter
push
imul
test
and
insb
pusha
movsl
cmp
mov
and
clc
movsl
cwtl
bndstx
in
mov
or
mov
lods
jb
pop
lcall
cmp
out
or
ret
or
lods
mov
xchg
mov
jecxz
bound
aad
pop
fwait
test
cmp
push
and
loopne
xchg
shll
int3
popf
pusha
push
fs
test
ret
leave
sbb
ret
andl
in
sbb
lods
ret
movsl
cmp
xor
xchg
pop
xchg
dec
into
push
mov
pusha
mov
sub
pop
js
xor
int
mov
sbb
in
rolb
adc
xchg
pop
mov
jbe
loop
test
pop
inc
push
pop
imul
and
or
cwtl
std
andb
mov
movsl
lahf
push
dec
cmp
popf
aam
movsl
sbbb
inc
jbe
sahf
xchg
enter
pop
jo
movsb
mov
ljmp
sbb
inc
movb
repnz
int
movsl
sbb
lret
cltd
or
cmp
in
movsl
push
add
mov
movsl
fdivrs
icebp
in
jecxz
lock
pop
jl
out
out
mov
aam
jnp
push
and
aas
shll
outsb
dec
lret
arpl
mov
sub
punpckldq
movsl
lcall
iret
int3
or
adc
shlb
pop
mov
movsl
or
lea
movsl
clc
xchg
sub
push
and
inc
scas
jbe
fdivrp
cmp
gs
out
mov
sub
lods
movsl
out
stc
push
jo
or
push
lahf
loopne
adc
mov
or
shlb
movsl
cmc
jge
jo
sahf
jmp
ret
in
repz
push
lods
dec
movsl
mov
xchg
xchg
aaa
in
push
inc
and
test
incb
push
scas
push
mov
ret
sti
lds
dec
movsl
jg
pop
test
les
dec
les
into
cmpsb
mov
add
fucomp
test
in
pop
jge
jns
les
ljmp
mov
test
into
cmc
jmp
mov
sub
inc
cmp
xchg
pop
sub
shlb
jmp
mov
mov
out
pop
div
movsl
leave
adc
and
mov
cmpsb
pop
cmp
lcall
and
and
xlat
jbe
scas
adc
pmaddwd
lahf
movsl
adc
push
jo
sub
pop
fdivs
mov
inc
inc
xchg
pop
nop
loop
std
cltd
je
jg
pushf
scas
les
jp
js
pop
sub
sar
xlat
cmc
cmpb
and
frstor
data16
add
jae
outsb
and
jnp
fs
dec
mov
add
aad
bound
dec
movsb
data16
push
icebp
mov
jae
pop
push
pop
aad
cmp
fsincos
mov
imul
xchg
test
shll
xor
rcll
add
xchg
adc
arpl
popf
or
lds
shlb
push
out
xchg
adc
lods
rcll
sbb
mov
pop
sub
pop
jae
cmc
pop
dec
dec
xor
test
add
icebp
jmp
insl
xor
push
pop
inc
mov
out
clc
loope
jbe
pop
and
mov
dec
stos
jo
inc
cmp
jp
jne
fstl
sub
inc
inc
ret
minps
repz
and
mov
adc
mov
int3
sbb
jns
lock
movsl
dec
pop
addr16
push
fidivrl
int3
cmp
xor
sub
insb
cmpl
mov
daa
call
adc
ficomps
sub
js
sbb
sahf
jl
icebp
orb
push
stos
mov
fiaddl
and
leave
push
loopne
arpl
test
sbb
loopne
dec
popf
add
clc
sub
sbb
jecxz
call
clc
sbb
sbb
insb
adc
mulb
push
sbb
xchg
shrb
in
lds
arpl
daa
sbb
leave
aaa
sbb
sub
fdivr
sbb
mov
fcoml
leave
notb
adc
xchg
loop
into
sahf
pop
pop
in
sbb
pop
cmc
sub
out
pop
push
mov
andl
faddl
jge
and
pop
xchg
mov
pop
xchg
mov
cmc
mov
xlat
fnstsw
jns
sarl
jnp
sbb
xor
add
aad
sub
je
iret
add
iret
and
xchg
popa
mov
out
sub
shrl
sahf
mov
repnz
test
pop
data16
jmp
xchg
push
mov
into
push
inc
icebp
add
lds
loop
out
sbb
xor
ret
vmovaps
fsts
mov
sub
xor
jne
xor
sub
xor
push
std
mov
xorl
pop
push
xor
sub
aaa
arpl
xlat
mov
icebp
and
push
xor
mov
push
mull
pop
inc
int3
mov
lods
mov
je
mov
cli
fwait
sub
icebp
xchg
pop
sbb
in
sbb
mov
sbb
scas
insb
ljmp
sarb
add
push
xchg
sbb
or
leave
cmp
push
mov
shrb
jo
pop
aad
adc
lods
out
mov
and
into
pop
push
jle
jg
idiv
rcrl
ds
insb
std
cmp
adc
adc
aad
movsb
jbe
cli
jp
pop
lret
mov
pop
mov
fstpl
fyl2x
jge
out
pushf
leave
call
mov
mov
aaa
and
lahf
insb
fwait
xchg
cli
jle
lods
loope
es
or
pop
push
pop
mov
push
les
inc
cwtl
dec
pushf
cli
jnp
pop
mov
push
sub
test
sarb
lds
add
arpl
xlat
pop
rorl
ret
cmp
or
xlat
sbb
sbb
cmp
je
movsl
mov
sub
fisubrl
enter
mov
mov
adc
cmp
movsl
jge
repnz
push
mov
scas
adc
cmc
fmuls
popa
xchg
movsl
addl
dec
sub
fdivr
mov
mov
xchg
push
out
jg
pop
movsb
or
mov
into
jmp
shld
inc
pop
repnz
push
insl
push
sbb
ja
sub
movsl
mov
int
adc
jp
inc
test
das
mov
mov
aaa
sahf
sub
and
mov
or
movsl
loop
fldt
push
movsl
dec
aas
xchg
addr16
outsb
out
roll
cmp
in
sub
mov
cwtl
inc
inc
imull
pusha
pop
stos
or
xor
cltd
cmp
pop
ficompl
in
testl
mov
push
mov
sbb
xchg
or
fbld
out
enter
cmp
shl
stos
mov
add
mov
mov
dec
adc
adc
mov
lds
mov
or
push
mov
ss
shlb
in
mov
xor
sti
dec
out
movsl
pushf
push
xor
aad
lods
and
mov
movsl
scas
addr16
shl
in
movsl
mov
dec
push
lcall
sub
movsl
xchg
out
mov
loopne
aad
and
push
jno
pop
insl
push
in
mov
imul
xchg
les
out
mov
pop
mov
mov
mov
pop
adc
xchg
push
or
hlt
mov
push
dec
mov
jge
test
mul
movsb
fsubrl
sub
and
nop
sbb
les
push
movsl
cmpl
imul
fdivl
fimuls
xor
push
mov
adc
jmp
and
push
in
adc
lods
pop
mov
sbb
mov
repz
xor
mov
fistpll
fwait
shrl
mov
xchg
pop
cmp
je
test
stos
inc
jl
mov
shr
push
push
fs
loopne
outsl
xor
pusha
movsb
mov
add
loope
outsl
lcall
mov
jmp
mov
add
into
leave
popf
pop
aad
and
popf
rcrl
pop
xor
inc
push
imul
movsl
insl
xor
mov
in
add
mov
movsl
pop
xor
in
sbb
lret
test
add
jecxz
hlt
or
ljmp
movsl
cmovno
sub
rcrb
jg
test
mov
jb
cmc
push
add
les
push
sbb
js
movsl
add
mov
jp
xor
dec
ja
add
cli
movsl
jno
or
movsl
popa
push
inc
scas
fstps
dec
push
call
dec
sbb
mov
fdivrs
jecxz
movsl
pop
inc
jbe
push
stos
add
rcrw
push
shll
jecxz
mov
mov
push
cwtl
aad
xchg
mov
fwait
rcll
cmp
scas
push
ja
add
lea
imul
mov
mov
cmp
test
rorl
sbbl
movsl
stos
inc
inc
imul
js
xchg
das
test
lsl
and
test
inc
movsl
outsb
cmc
push
flds
fs
aad
fdivr
stc
fucomp
mov
or
scas
adc
mov
xchg
mov
xorl
movsb
sub
cltd
pop
movsl
cmp
cmpb
xchg
aaa
xchg
adc
push
mov
and
psubusb
cltd
sbb
lea
jmp
lods
stos
and
mov
fldl
jmp
repnz
lods
dec
sahf
aaa
mov
aad
mov
cli
dec
xchg
cmp
inc
or
xor
pusha
cmp
ss
test
sub
lcall
jp
addr16
stos
mov
movsl
push
dec
jno
push
ljmp
xor
mov
pop
sbb
pop
std
in
jno
stos
jp
push
mov
cmp
gs
ja
push
ret
and
xlat
push
imul
pop
inc
mov
cmp
push
pop
jge
fbstp
add
insl
mov
int
scas
sbb
and
clc
xchg
ss
mov
mov
daa
scas
adc
movsl
frstpm(287
outsb
imul
adc
push
rolb
test
xchg
and
fnstcw
cmp
or
mov
pop
jno
lret
movsl
in
push
pminsw
mov
inc
inc
pop
fwait
pop
mov
mov
sbbb
stos
js
mov
push
in
xor
and
cmp
add
frstor
xchg
lcall
adc
cs
sub
clc
mov
das
in
test
imul
jb
mov
aad
in
nop
jo
pop
xlat
inc
pop
xchg
movsl
lcall
fnstenv
jmp
mov
out
cltd
cmc
or
pop
sub
jmp
mov
mov
aad
aad
mov
lea
stc
nop
movsl
xor
pop
or
movsl
dec
mov
sbbl
pop
jl
stc
push
movsl
lcall
shlb
test
and
out
and
dec
icebp
imul
jge
int
fstpl
adc
test
int3
in
cwtl
in
mov
adc
test
push
popf
adc
js
inc
movsl
jl
sub
movsl
mov
es
movsl
leave
mov
ret
jecxz
mov
pop
cwtl
adc
sbb
movsl
mov
and
test
test
popf
adc
jns
jle
mov
popa
movsl
xchg
sub
pusha
xor
adc
in
scas
push
movsl
sti
int
je
pushf
push
lods
adc
pop
adc
inc
lds
movsl
jne
subl
out
scas
movsl
outsl
sub
xchg
popa
test
xor
cli
jge
sub
jae
mov
movsl
addr16
shlb
lahf
cltd
imul
movsl
dec
pop
jae
cmc
mov
and
lds
inc
gs
movsl
dec
inc
inc
shlb
repnz
cmpsl
jnp
mov
sbb
movsl
movsb
xor
sub
mov
ja
aad
cmpsb
movsl
xor
popf
xor
add
mov
fnstenv
sbb
negb
testb
cmc
fidivl
jecxz
xchg
add
jns
shlb
xchg
movsl
cmp
pop
inc
xchg
xchg
push
mov
xor
icebp
outsb
push
jb
xchg
adc
movsl
jno
xchg
sbb
sbb
movsl
jae
ljmp
pop
paddusw
loope
outsb
mov
hlt
push
mov
or
popa
movsl
cmp
xchg
adc
jmp
frstor
dec
cwtl
inc
shlb
add
add
mov
jecxz
or
and
cmp
jae
movsl
pop
scas
adc
pop
push
sbb
int3
xchg
or
and
shr
repz
sub
inc
mov
mov
movsl
mov
pop
push
mov
ja
jb
xlat
jo
je
fs
push
cmpsl
movsl
das
pushf
inc
mov
sbb
pop
dec
xlat
sub
inc
xchg
stos
repnz
mov
lods
jne
inc
and
aam
xlat
ja
out
add
sbb
cmp
pop
dec
shl
in
popf
push
test
popa
aaa
push
push
push
mull
rorb
movsl
mov
jno
jle
das
stos
mov
pusha
inc
jb
add
or
jmp
daa
outsb
add
mov
cmc
mov
and
or
es
je
repz
jo
push
cmp
insb
clc
jo
pop
lret
sbb
inc
sar
sahf
movsl
fadd
pop
pop
push
ds
out
xchg
push
xor
inc
or
sbb
gs
stos
push
xchg
xor
add
push
loope
lret
dec
mov
fldl
sub
mov
test
or
push
jmp
pushl
lods
mov
setnp
jns
fdivrl
sub
push
jmp
icebp
pop
mov
js
sahf
lret
ds
xlat
jb
cmp
int3
in
rolb
sbb
pop
jp
rorl
insl
mov
add
clc
je
lcall
lea
add
rclb
leave
aaa
or
and
sub
mov
ss
sbb
addl
xlat
mov
insl
les
pushf
push
in
lea
insb
fucom
jns,pn
push
xor
mov
sbb
pop
in
pop
xchg
lods
fs
je
jo
in
push
arpl
es
std
xchg
jp
adc
loope
push
roll
jecxz
movsl
inc
push
dec
adc
rcrl
add
icebp
mov
int
xchg
loope
test
mov
inc
stos
popa
leave
or
mov
sub
jne
in
dec
or
pop
aaa
push
data16
cmp
xor
adcl
cmc
push
imul
pusha
sub
mov
addl
test
or
imul
jns
fwait
aam
shr
mov
int3
add
sub
repnz
mov
xchg
arpl
clc
scas
push
push
jnp
jns
push
iret
push
in
icebp
sub
jb
jge
movsb
dec
and
cltd
mov
push
or
push
xor
out
push
out
ret
sub
inc
adc
mov
push
push
mov
pop
push
dec
and
mov
xlat
rcrb
out
stos
ljmp
dec
jbe
and
dec
stos
rcr
adc
inc
mov
in
out
mov
mov
clc
mov
leave
negb
mov
out
fsubrl
mov
repz
sub
cld
xorl
popf
cmp
dec
dec
loope
in
or
jbe
daa
lods
shlb
cwtl
fisttpl
sbb
and
jmp
xchg
movsl
hlt
pop
pop
or
push
in
mov
mov
ja
inc
mov
repz
xchg
mov
js
stos
xchg
stos
pop
or
mov
fnsave
and
lcall
fdivp
aam
sbb
cs
add
daa
mov
mov
leave
jb
sub
lods
icebp
pop
popf
mov
jns
push
mov
add
or
jnp
add
outsb
sbb
xor
cmc
les
sub
sub
ror
mov
pop
rcr
outsb
jae
push
jnp
fcoml
les
jge
ljmp
cmc
js
push
scas
aas
fwait
test
mov
jno
add
daa
cmp
push
aaa
jecxz
fstps
outsb
add
popa
out
aam
stc
test
xchg
stc
lcall
mov
rcrl
enter
xor
subl
nop
push
insb
or
sbb
popf
jecxz
repnz
loop
push
loope
jmp
cli
inc
int
fnsave
sub
and
mov
les
jns
fwait
adc
faddl
xchg
mov
sbb
lods
lret
pop
mov
aad
sbb
adc
enter
pop
jae
mov
sub
push
leave
jmp
movsl
xchg
pusha
or
jp
ljmp
in
xchg
iret
int3
test
push
xor
pop
cmpsb
call
jmp
ja
dec
ljmp
adc
into
dec
lods
jo
mov
push
xor
inc
leave
pop
lods
inc
lods
daa
and
lds
adc
test
sbb
jge
fstl
mov
add
push
push
ja
sbb
movsl
pop
stos
fwait
and
jp
mov
adc
push
dec
outsb
in
sar
jae
movsl
inc
arpl
fucompp
pop
movsb
movsl
dec
stos
push
sbb
pusha
jb
movsl
mov
xchg
lock
mov
stos
movsl
dec
loop
scas
pop
dec
add
xchg
movsl
mov
enter
adc
fdivrp
int
mov
movsbl
and
jge
jb
push
add
inc
jbe
fwait
in
rdpmc
cld
sahf
xlat
hlt
push
mov
pop
mov
and
cmc
add
scas
pop
mov
pop
andb
lods
scas
adc
lret
mov
sub
mov
inc
mov
mov
jb
xchg
add
mov
lods
das
movsl
jns
jge
push
pop
mov
outsb
rcrl
xor
movsl
mov
ja
loop
aad
movsl
icebp
aaa
daa
xchg
add
add
movsl
das
loope
gs
push
leave
pushf
cs
icebp
push
in
pop
lods
xchg
movsl
cmp
outsb
in
sub
test
jnp
lods
sub
cmp
aaa
dec
pop
lcall
or
loopne
addr16
mov
mov
stos
pop
mov
popa
lds
test
lea
cmpsb
popf
pop
mov
mov
in
push
xor
jp,pt
mov
inc
lretw
iret
jle
in
hlt
xchg
mov
dec
sbb
pop
aas
bound
loopne
cwtl
and
or
shr
in
push
cmpsb
push
mov
sbb
sub
test
pushf
or
movsl
cmpsl
lret
shlb
andl
outsl
popf
gs
xor
rcr
insl
aaa
movsl
cmp
mov
movsl
divl
cld
or
push
inc
cmpl
out
ret
fucomip
repnz
movsl
aaa
je
test
movsl
jecxz
outsl
out
es
add
mov
push
add
push
pop
icebp
stc
lds
jmp
scas
cltd
movsl
dec
dec
or
fsubr
movsl
inc
imul
xor
pop
das
xchg
add
dec
repnz
fnsave
adc
movsl
push
push
and
adc
aam
dec
in
xchg
pusha
rolb
add
push
add
movsl
xchg
or
inc
frstpm(287
dec
sub
fwait
cmpsl
in
int
cld
mov
ja
in
cmpsb
mov
or
xchg
insb
and
out
mov
mov
movsl
and
dec
out
inc
lret
leave
xchg
or
sahf
sbb
mov
adc
mov
sti
rcr
or
dec
fnsave
cmp
out
inc
sbb
or
mov
cmpsl
imul
out
xrelease
in
mov
xchg
movsl
sub
test
xchg
test
sub
push
fbld
lahf
push
mov
arpl
dec
xchg
mov
jp
fsts
push
or
mov
fdiv
sub
out
lret
data16
adc
movsl
dec
dec
inc
mov
repnz
inc
push
mov
push
cmp
popf
sub
and
jno
rolb
mov
mov
lds
rorl
and
adc
mov
mov
rolb
fld
out
jo
loope
cmp
repz
mov
lods
in
jl
pushf
sub
push
mov
and
push
scas
lds
sbb
lcall
pop
pop
cmp
or
in
in
mov
pusha
loope
int3
sbb
nop
and
add
cmp
fists
int3
lahf
in
bound
adc
jbe
jp
movsl
into
or
mov
mov
cltd
scas
std
sbb
fdivrl
pop
sub
cmpsl
adc
mov
push
sahf
sbb
mov
cltd
xor
or
arpl
adc
lods
mov
fmuls
sarl
aas
xor
movsl
enter
fcompl
mov
scas
stos
sbb
mov
push
mov
or
pusha
jno
lock
adc
shll
push
cmpsl
adc
and
test
inc
movsl
bswap
ljmp
adc
sbb
movsl
and
aam
data16
insl
or
jle
or
in
insb
and
lock
outsb
arpl
cmpsl
push
movsl
cmp
mov
lods
addr16
lds
test
dec
in
push
mov
movsl
sti
in
in
sarb
popf
movsl
fwait
fdiv
dec
dec
add
movsl
clc
sbb
sarb
xlat
add
movsl
sbb
stos
movsl
mov
enter
repz
stos
sbb
loopne
movsl
mov
sbb
and
ret
pushf
es
dec
scas
xchg
in
es
sub
or
sbb
and
xor
xor
mov
dec
or
aad
fdiv
dec
fnstcw
rcrl
movsb
inc
pop
mov
push
inc
jp
adc
cmp
or
mov
call
push
iret
pop
inc
mov
dec
and
dec
mov
addr16
xchg
in
repnz
inc
push
cmp
push
ss
cs
movsl
jbe
test
std
ds
stos
mov
popf
addr16
xchg
movsl
call
or
sahf
dec
dec
dec
jne
in
push
ss
movsl
push
andb
test
inc
push
decb
pop
call
mov
mov
pop
movsl
push
inc
popl
xchg
mov
fsubs
inc
stos
adc
ret
data16
mov
idivb
push
pop
mov
xorl
pop
sub
ss
daa
mov
xchg
mov
fdivrl
bound
mov
pop
ret
outsl
in
pop
xor
test
fsub
inc
sub
inc
sbb
pop
cmp
jae
outsb
mov
lods
popf
adc
movsl
cli
xchg
pusha
pop
jns
loope
test
xor
out
shrl
jae
jecxz
pushf
sbb
jbe
add
mov
imul
inc
xchg
push
and
ds
rcll
movsl
pop
jmp
inc
pop
xor
mov
movsl
jecxz
aam
jg
mov
or
test
xor
jle
mov
pop
aaa
and
movsl
jne
fcoml
and
push
mov
mov
movsl
and
inc
xchg
movsl
test
sahf
inc
pop
mov
or
into
int3
fmul
or
jmp
cmp
gs
mov
push
mov
mov
cs
push
std
inc
leave
cli
movsl
out
fisttps
lret
cmpsb
mov
inc
int3
push
and
pop
cmpsl
xor
cltd
sub
movsl
mov
jo
dec
movsl
jge
cmpsl
add
ret
call
fstl
jb
movsl
inc
push
jle
dec
stos
pop
movsl
je
nop
mov
xchg
mulb
out
orl
icebp
nop
ds
mov
bnd
push
mov
add
ljmp
xor
push
mov
sub
xlat
pusha
sub
xlat
adc
and
pop
or
test
out
and
sbb
and
dec
mov
sbb
mov
or
inc
fsub
or
adc
lret
xchg
jnp
pop
cmp
or
jmp
and
shrl
dec
fs
xchg
shl
jnp
testb
jg
pop
stos
sub
adc
jns
dec
sub
inc
add
sbb
mov
mov
in
jmp
inc
cmc
inc
leave
xchg
mov
sbb
jne
pop
dec
shlb
xlat
mov
xchg
mov
mov
sbb
lds
lods
pop
and
ret
fs
push
sbb
adc
mov
inc
sbb
mov
cmp
pop
cmp
sub
insb
lret
inc
cld
ret
fisubl
jbe
aaa
push
xlat
loop
cmc
rcrb
and
mov
xchg
iret
sahf
mov
mov
adc
inc
jg
mov
lods
xchg
xor
or
movsl
xor
leave
add
movsl
mov
sub
lahf
test
mov
mov
jmp
add
in
ja
mov
dec
call
fs
js
push
mov
out
movsl
pop
sbb
jae
push
jge
sub
outsb
pop
pop
cmp
or
and
mov
ror
add
mov
scas
add
xchg
dec
orb
cmc
xchg
das
adc
rolb
pop
and
jns
rorl
aaa
movsl
or
inc
mov
scas
cld
imul
jle
lcall
hlt
pop
dec
mov
push
movsl
test
jb
jae
adc
test
sub
xchg
or
cmpsl
or
fcmovb
fcomi
movsl
into
icebp
mov
sbb
mov
jno
sbb
dec
pop
jmp
rorl
jp
mov
mov
aaa
je
push
push
cmpb
add
lcall
jle
fs
mov
enter
sahf
jecxz
sub
push
pop
ja
pop
div
subl
and
les
mov
scas
das
sahf
ja
xchg
jmp
xor
movsl
xchg
xor
fucomp
movsl
mov
or
movsl
xchg
inc
out
test
loop
lret
push
mov
dec
jle
test
mov
pop
cmpb
in
jnp
add
jmp
lods
or
roll
mov
es
mov
pop
outsl
out
fisubrs
test
and
push
xor
arpl
bound
movsl
fldl2e
lds
pop
push
insb
mov
mov
xor
xchg
mov
sbbl
and
jg
dec
enter
jecxz
outsb
inc
or
in
daa
nopl
shl
sub
jmp
fadd
stos
lcall
adc
xor
dec
shlb
inc
push
loopne
sub
and
and
or
and
lds
adc
scas
lahf
xor
movsl
xchg
xor
loopne
jl
adc
mov
movsl
fisubl
inc
jecxz
push
jl
mov
mov
xchg
lods
popf
ss
imul
pop
mov
js
dec
fbld
pop
jp
movsl
push
inc
ret
sub
outsl
test
or
dec
lods
xlat
scas
clc
and
out
ljmp
cmp
jl
sbb
fiadds
mov
mov
sbb
pushf
mov
mov
adc
cmp
sahf
cltd
in
fisttpl
outsl
pop
push
or
in
add
or
lods
add
ret
push
pop
ja
lds
xor
inc
mov
loop
xchg
pop
mov
movsl
stos
xchg
pusha
loopne
dec
ljmp
inc
push
xor
adc
shlb
inc
pop
jnp
addb
aad
dec
mov
mov
cmp
adc
and
adc
pop
test
cltd
movsl
mov
pushf
mov
pop
iret
outsb
movsl
in
stos
mov
movsl
sub
add
movsl
in
aam
and
pop
lock
ds
in
sub
pop
pop
outsl
jmp
inc
lcall
xor
xchg
dec
mov
stos
iret
movsl
mov
mov
mov
or
or
and
test
movsl
mov
aas
or
movsl
or
jne
xor
adc
in
xor
pop
movsb
and
jbe
outsl
imul
int3
nop
dec
das
mov
int
inc
jp
frstor
mov
xor
sti
loopne
out
pop
pop
adc
test
fwait
stos
aam
jle
movsl
xlat
push
lea
repz
rcr
pop
or
jbe
cmp
lock
aam
jl
outsb
xchg
or
xor
test
or
shl
cmpsl
hlt
movsl
ss
xchg
loop
clc
mov
xchg
xchg
leave
addl
inc
or
fmul
loop
fstpl
movsl
shrl
popa
add
ss
push
jae
jnp
pop
sbb
rorb
inc
outsl
dec
mov
lods
jg
mov
fcmovnu
out
movsl
push
insl
test
lods
mov
mov
dec
xorl
mov
fildl
or
arpl
fiadds
cli
js
add
lret
dec
flds
fimuls
sbb
pop
je
inc
xor
fsubl
movsb
imul
les
int3
add
push
insb
mov
iret
sub
mov
cmp
inc
jl
dec
imul
and
lahf
das
test
movsl
int3
stc
out
lret
jns
pop
loope
fcmovb
subl
mov
mov
repnz
outsb
sub
add
movsl
popf
mov
adc
movsb
cmp
push
sahf
sub
in
nop
xchg
push
roll
mov
sahf
subb
jle
stos
movsl
mov
fcmovne
hlt
movsl
out
loop
inc
mov
icebp
jmp
out
cmp
adc
cmc
push
mov
lods
inc
mov
sbb
dec
xchg
and
xchg
aaa
mov
jb
xchg
aas
inc
repnz
cmpsb
xchg
movsl
test
call
push
dec
cmp
adc
cmp
xchg
push
out
in
leave
in
mov
mov
popf
xchg
hlt
pop
andb
movsl
in
mov
xchg
scas
lret
jl
mov
lods
mov
imul
jns
mov
mov
xor
push
pusha
icebp
pop
mull
and
stos
clc
movsl
jp
push
jns
push
adc
inc
movsl
nop
es
cltd
xchg
lcall
push
aam
imul
into
cs
adc
cwtl
inc
jns
dec
dec
movsl
je
imul
sub
in
gs
lret
int
movsl
push
addr16
and
in
cli
popf
or
fldlg2
inc
std
lcall
pop
mov
movsl
cmp
add
or
xor
push
adc
lret
mov
and
inc
loopne
sahf
xlat
repnz
mov
loope
jae
fnstcw
sbb
and
xchg
mov
adc
sbb
iret
hlt
lea
movsl
adc
jb
out
dec
pop
movsl
into
push
sbb
in
repnz
lret
inc
movsl
loopne
dec
push
ja
push
jle
mov
mov
push
jmp
push
cmpsl
mov
push
movsl
jnp
test
cmp
mov
in
adc
inc
cs
inc
insl
bound
jnp
dec
je
sbb
lods
ja
vpminsw
movsl
jmp
pop
rcl
movsl
dec
rcll
sbb
xchg
xchg
loope
vpaddsw
xchg
loop
xchg
and
add
mov
jae
movsl
lods
sbb
jle
hlt
push
pop
mov
xchg
and
movsl
arpl
fildll
sahf
jle,pn
or
mov
stc
pusha
jns
sbb
mov
mov
mov
icebp
incb
into
and
sahf
mov
aad
mov
or
mov
dec
jnp
movsl
xchg
mov
cmpsb
sbb
xlat
push
lods
or
pop
adc
xor
push
jmp
lret
sbb
pop
add
enter
movsl
cmpsl
nop
sub
ljmp
popf
arpl
das
scas
and
movsl
sbb
dec
push
cld
sti
mov
movsl
sub
je
mov
pop
mov
pop
aad
ret
inc
xchg
test
mov
stos
ds
aad
clc
adc
xor
call
mov
cli
push
insl
imul
mov
jle
cmp
subb
lods
jnp
js
icebp
xor
or
pop
sti
fcomi
rcrl
jmp
mov
dec
push
or
fidivs
fwait
ljmp
test
mov
pushf
or
mull
sbbb
das
in
clc
mov
sahf
loop
dec
mov
and
mov
mov
lds
roll
fisubl
pop
jnp
pop
pop
xorl
sbb
test
mov
adc
or
sahf
test
xchg
inc
inc
out
mov
and
movsl
mov
dec
push
inc
sbb
fists
dec
jb
mov
cmp
sahf
cmp
inc
ljmp
movsl
push
nop
stos
jnp
pop
lods
xchg
mov
insl
pop
lret
movsl
or
mov
dec
jecxz
lods
push
mov
shlb
cwtl
pop
jae
imul
pop
or
fwait
bound
mov
jle
movsl
mov
adc
jns
cmp
addr16
dec
sti
je
pop
dec
push
add
cmc
gs
mov
sub
movsl
jno
sub
js
loop
jae
pop
jg
pop
sbb
adc
cmp
outsl
movsl
scas
inc
pop
push
rorb
cld
xor
flds
pop
loope
pop
inc
in
out
lret
jl
movsl
pop
mov
and
mov
or
aad
int3
xor
popf
xchg
rcl
in
aaa
inc
cli
test
mov
pmullw
lods
push
adc
dec
movsl
pop
outsb
dec
sbb
xlat
pusha
movsl
rcll
test
movsl
mov
push
bound
out
cmc
in
lret
sbb
adc
mov
lds
ja
pop
push
roll
shlb
jne
and
and
cmc
and
jbe
rcll
stos
sbb
mov
and
dec
jl
inc
mov
cmp
repz
add
shrl
popf
mulb
pop
cmpsl
inc
mov
in
pop
cmpsl
jae
stos
xor
addr16
das
stos
mov
dec
fnstsw
push
push
imul
mov
xchg
inc
mov
pop
dec
xchg
movsl
stos
loope
ja
fbld
test
xchg
push
jl
out
pusha
xor
movsl
push
orl
cmp
into
sbb
jmp
mov
mov
ljmp
pop
dec
sbb
cs
mov
in
jmp
test
in
push
xchg
mov
rolb
faddl
mov
xor
test
dec
sub
push
cmp
inc
imul
xchg
sub
mov
cmp
stos
sbb
call
movsl
pushl
fsubrl
dec
arpl
push
jne
and
adc
mulb
stos
lods
loope
loop
andl
and
gs
bnd
push
in
jno
mov
das
mov
movsl
sbb
sub
and
jl
shlb
lds
lds
outsl
push
xlat
aam
sar
in
push
xchg
sub
stos
scas
mov
mov
pusha
lock
sbb
fstl
mov
int3
push
rorb
mov
test
and
mov
mov
and
ret
and
test
repz
mov
out
imul
mov
xchg
mov
insb
fwait
outsb
adc
repz
xlat
test
mov
movsl
cmp
movsb
mov
ret
lods
aad
cmp
les
test
mov
iret
data16
bound
stos
xchg
aas
popa
mov
pop
push
dec
adc
inc
movsl
push
shlb
popf
xchg
mov
in
dec
inc
pusha
enter
xor
jge
addr16
jmp
pop
jno
dec
mov
cmp
xchg
movsl
and
repz
sahf
sub
jns
rcrb
jecxz
pushl
movsl
sbb
in
add
icebp
mulb
rcrb
mov
mov
fldenv
test
dec
in
out
xor
mov
scas
scas
xchg
mov
cmc
hlt
push
push
cmc
ljmp
iret
dec
loopne
movsl
pop
gs
sub
icebp
movsl
push
jmp
scas
out
stos
add
xchg
daa
movsl
dec
cmp
std
pop
jecxz
sbb
cmp
sbb
mov
sar
lret
fcom
or
movsl
dec
iret
sbbb
push
jne
xchg
mov
daa
cmp
sub
adc
adc
pusha
inc
pop
add
scas
cmp
xchg
in
add
and
push
xchg
shll
mov
into
movsl
cli
jmp
stos
ds
pusha
mov
ret
mov
adc
mov
popa
sub
loope
push
pop
push
xchg
in
in
and
inc
repz
rcrl
mov
imul
adc
inc
jb
push
and
dec
push
add
pop
pop
jne
cmp
je
and
cmp
pop
stos
or
test
int
adc
fnstsw
popa
jae
add
filds
rcrb
ja
fisubs
pop
and
pop
int3
test
lock
mov
cld
push
movsl
jecxz
push
jne
xchg
sub
movsl
popl
fisubrl
mov
insl
cmpsl
xchg
ljmp
clc
lahf
jecxz
mov
lea
pop
push
add
pop
ljmp
adc
movsl
addr16
push
lds
sbb
mov
adc
cmpsl
jns
lods
pop
and
lds
jmp
fildll
push
lret
mov
and
in
movsl
aad
fwait
jo
mov
jle
jmp
sahf
cwtl
movsl
pop
dec
clc
push
mov
lea
or
cmpsl
or
movsb
stos
sbb
pop
xorb
sahf
and
lock
cmpl
mov
or
push
cmp
pop
inc
aaa
test
cmp
mov
in
mov
insl
movsl
jg
lcall
ja
pop
popf
adc
popa
cltd
cmpsl
push
xchg
xchg
popa
pop
insb
dec
imul
scas
jae
xor
cltd
cmpsb
jns
inc
fldl
rol
mov
xchg
cmp
mov
movsl
ds
lahf
mov
mov
arpl
jle
movsl
leave
add
push
inc
push
int
cwtl
addr16
movsl
push
cmp
pop
mov
mov
clc
inc
cwtl
pop
ja
bound
insb
loope
add
mov
ret
sub
or
js
lcall
mov
mov
adc
or
test
aad
xchg
in
pop
xorl
jo
sub
movsl
xchg
test
cmp
jl
fcmovnb
jo
lods
dec
mov
movsl
in
aaa
push
int3
enter
gs
es
popf
clc
jecxz
insb
cld
inc
mov
sti
loopne
jge
int3
outsb
scas
ja
jp
leave
shl
jge
and
andb
adc
cmpsl
adc
push
push
push
pushf
arpl
xchg
mov
dec
movsl
sbb
xor
pop
imul
push
ror
add
in
cmc
sbb
enter
inc
or
mov
in
adc
lods
lret
mov
xchg
and
rorb
in
das
daa
xchg
movsl
mov
lock
pop
addb
test
or
shrb
aam
xchg
sub
gs
sahf
sbb
cltd
inc
aad
and
outsl
movsl
inc
add
sar
es
sahf
mov
repnz
pop
popf
or
test
push
js
xchg
fsubs
out
mov
push
movsl
inc
adc
movsl
fnstcw
in
mov
ret
push
movsl
aad
mov
xor
mov
mov
jne
lods
mov
movsb
js
inc
aad
jnp
xchg
add
inc
sbbb
scas
jge
movsl
js
mov
das
push
cmpsb
add
into
jle
sub
test
cwtl
js
movsl
shrb
xchg
cwtl
cmp
pop
pushf
xchg
popf
rcl
jle
jnp
sub
mov
pop
cwtl
cmp
mull
push
jg
mov
into
mov
mov
movsl
adc
sub
add
push
adc
cltd
xor
iret
ljmp
movsl
push
fdivl
lods
lea
movsl
pop
setns
movsl
testb
inc
push
jp
shll
cmp
push
push
push
shld
mov
pop
cmp
lods
mov
mov
outsb
clc
sub
dec
outsl
jl
jae
in
movsl
cmc
stc
fsub
inc
sbb
lea
fimull
in
scas
scas
inc
movsl
fucomip
hlt
mov
add
push
xchg
clc
repz
ljmp
pop
sti
movsl
fwait
in
adc
outsl
dec
hlt
mov
ret
mov
aam
xlat
mov
dec
mov
or
add
jbe
addb
ss
enter
push
test
sub
mov
adc
or
push
testb
add
inc
hlt
or
sub
jae
popl
rcl
jmp
sub
inc
xor
call
je
xchg
std
shlb
movsl
add
mov
shl
mull
adc
lahf
std
push
mov
xor
fists
jb
mov
pop
jae
movsl
or
or
jo
xor
cmp
lods
test
pop
cmp
jno
adc
mov
jb
out
xor
loop
testl
leave
mov
rcr
es
mov
push
lods
imul
xlat
push
jg
lret
movsl
jns
push
pop
mov
adc
stos
in
push
xor
dec
fisubs
xchg
in
add
out
cmp
aaa
movsl
xor
int3
and
jmp
fcoml
stos
movsl
into
pushf
out
dec
repz
jns
lods
movsl
ljmp
lahf
mov
pop
sub
dec
imul
inc
adc
pop
mov
mov
jne
mov
cmp
pushf
nop
inc
aaa
dec
hlt
cli
in
jecxz
cmc
cli
and
xor
sub
dec
pop
clc
add
mov
int3
pop
cmpsl
lock
mov
shl
imul
dec
jmp
scas
decl
fstpl
sub
xchg
std
std
clc
in
popf
enter
jbe
lock
xor
mulb
outsl
andb
lods
fcmovnb
sbb
arpl
test
std
add
stc
jno
fsubr
mov
out
mov
pop
inc
inc
ss
sbb
pop
pop
push
jbe
popa
ret
arpl
sub
and
jnp
mov
adc
mov
lds
pop
lret
pop
mov
lahf
inc
xor
lods
out
call
mov
sbb
les
cmp
or
repz
aad
out
mov
sbb
std
cmc
xchg
inc
loope
inc
sub
push
pop
cmpsb
pop
mov
and
or
mov
mov
push
push
outsb
jae
out
fs
and
jne
cmp
jecxz
pusha
mov
add
popa
loope
popa
aad
xchg
jae
push
xchg
fdivrs
std
sub
rclb
dec
popf
and
inc
and
pop
inc
cli
icebp
mov
leave
inc
sbb
lahf
sbb
push
js
jb,pn
not
mov
mul
sar
sub
imul
mov
cld
dec
popf
leave
mov
out
add
inc
jnp
popa
call
jl
inc
pop
and
fidivs
pop
add
sbb
bound
addl
mov
mov
sbb
mov
pop
andb
or
push
mov
xchg
cmpsb
cmc
insb
lds
sbb
out
mov
stos
movsb
lds
jae
lcall
push
lret
movsb
push
pop
clc
test
mov
lds
push
jnp
mov
movsl
xchg
inc
clc
stos
jmp
xlat
movsl
add
call
dec
ret
add
movsl
fdiv
mov
jp
inc
cmp
mov
aas
adc
hlt
insb
in
push
inc
push
stos
stos
pop
mov
cmp
aad
scas
sub
push
in
int3
push
test
mov
lods
scas
add
or
fists
push
jg
push
call
movsl
mov
fisubs
test
mov
push
test
rcl
push
movsl
shr
iret
loopne
add
add
dec
jne
add
cmp
xchg
adc
pop
push
je
movsl
jns
mov
stc
or
mov
adc
aas
lcall
jl
cmpsl
jmp
mov
bound
and
loopne
mov
sbb
cmp
push
jecxz
push
std
int
movsl
or
fistpl
mov
aad
jp
int3
add
push
movsl
ret
sub
push
dec
dec
jle
movsl
mov
imul
movsl
ret
ret
inc
sbb
and
movsl
or
mov
mov
dec
mov
pop
mov
or
jge
add
mov
jb
bound
mov
lds
and
movsl
fsts
sub
movsl
dec
fs
les
or
popa
dec
je
loopne
mov
mov
int3
mov
pop
lcall
rcrl
movb
scas
or
and
add
sti
inc
lds
gs
pop
dec
mov
fnstsw
jns
out
shll
stc
or
movsl
cwtl
ss
ficoml
dec
mov
push
cmp
mov
jg
loope
int
push
pop
xor
and
fdivl
movsb
sub
sahf
in
cmp
ss
push
dec
lock
jecxz
push
lds
das
movsl
mov
sub
xchg
xchg
jno
movsl
mov
sbb
repz
sar
pop
dec
movsl
lret
dec
push
imul
mov
movsl
adc
xor
mov
dec
ret
inc
jb
cwtl
push
cmp
inc
insb
mov
movsl
or
cmpsl
adc
mov
stc
pop
movsl
jb
cmpsl
outsb
movsl
fldenv
jecxz
stc
sbb
movsl
mov
pop
test
cmp
xchg
mov
sbb
jnp
mov
sub
test
mov
pusha
movsl
pop
insl
fcmovnu
imul
mov
out
popf
mov
add
inc
lods
loope
js
add
push
movsl
jbe
imul
sub
stos
jnp
dec
insl
pop
int3
in
xor
xchg
out
add
sbb
mov
fidivrl
ss
cld
push
movsl
in
int
stos
sbb
cmpsl
pop
sahf
jb
sub
je
inc
aas
xchg
adc
cmp
adc
push
js
leave
imul
pop
add
movsl
incl
int3
movb
movsb
push
sahf
subb
push
jbe
xchg
mov
mov
mov
in
shl
jle
pop
movsl
roll
pop
push
clc
movsl
iret
fidivl
imulb
test
mov
sub
push
movsl
mov
aas
fs
scas
movsl
std
cmpsb
cli
push
or
pop
movsl
aas
xor
leave
fldcw
frstor
mov
push
in
adcb
sbb
dec
mov
repnz
mov
js
stos
pop
test
sbb
and
dec
ljmp
mov
inc
pushf
sub
ret
adc
leave
mov
jp
xor
int3
mov
movsl
cmp
arpl
fisttps
pushf
ljmp
loop
pop
out
pop
movsl
jno
inc
jp
out
pop
movsl
inc
imul
mov
test
mov
int
movsl
out
or
subb
inc
insl
xchg
movsl
or
cmp
movsl
pop
or
xchg
pop
sub
aad
fucom
push
xor
sub
out
call
sarb
and
jnp
pop
andb
in
shr
movsl
imul
add
xor
testb
rcl
cmpsb
aam
into
imul
inc
mov
cli
pop
fucomp
jg
in
icebp
int3
mov
arpl
in
xchg
jg
fsubrs
sub
iret
push
clc
fistps
flds
jl
test
movsl
cmp
xchg
popf
inc
jb
movsl
dec
inc
loopne
sbb
cmp
jecxz
shl
pop
jo
or
pop
mov
jmp
lods
mov
inc
jnp
pop
push
or
xchg
movsb
lock
loop
leave
add
and
cmp
in
frstpm(287
mov
movsl
sbb
cmpl
sti
and
push
add
aam
sahf
dec
or
es
and
stc
movsl
inc
adc
mov
movsl
subl
xor
adc
jne
inc
je
call
aam
gs
jns
loope
movsl
sub
mov
je
or
loop
mov
movsl
xor
and
enter
lods
lods
cltd
push
xchg
aas
xchg
pop
inc
popa
add
xor
subl
mov
lea
push
lods
jl
lret
movsl
xor
add
pop
aas
pushf
stos
add
mull
jle
into
mov
fldenv
test
lods
adc
xchg
mov
push
lock
xchg
stos
dec
jmp
movsl
push
jl
ret
rcrl
dec
push
cmpsb
movsl
jb
and
adc
movsl
sub
fldcw
mov
cmpsl
adc
fidivrs
sti
or
leave
adc
push
imul
stc
mov
stos
test
cli
pop
dec
inc
jmp
add
lret
stos
arpl
out
mov
js
mov
inc
jge
dec
aaa
xchg
jl
mov
mov
xchg
movsl
mov
andl
cmpsb
xorb
or
sbb
jmp
jecxz
insb
call
mov
mov
in
push
ficompl
jo
adc
adc
dec
scas
mov
popf
icebp
xlat
testb
jge
fucomi
lock
pop
pop
mov
push
scas
or
pusha
cld
fcompl
xchg
xor
std
int3
popa
movsl
sbb
jg
fdivs
push
int
mov
sbb
out
ror
in
test
mov
cmc
std
cmc
cld
out
sbb
mov
outsb
inc
scas
inc
and
add
mov
std
add
jecxz
mov
pop
jo
mov
jae
pop
ja
icebp
lods
fistpl
movsl
rcrl
shrd
or
es
push
test
pushf
icebp
xchg
jns
pop
arpl
and
js,pn
pop
fstpl
dec
mov
repnz
daa
out
pop
and
cmp
clc
cmc
xchg
mov
and
mov
in
pop
mov
incb
sahf
fsubp
andl
mov
xlat
js
jge
scas
and
icebp
in
loope
sub
mov
jle
push
cmp
rorb
or
xlat
mov
xor
pop
xchg
sub
fdivs
mov
hlt
out
and
fldcw
xchg
sub
call
lcall
sbb
jnp
xor
sub
in
outsb
test
inc
sbb
frstor
xchg
xor
sbb
stos
popa
cmp
xchg
mov
cmp
aas
xor
jp
inc
cli
lret
pop
jmp
mov
lcall
mov
mov
pop
stc
jmp
and
adc
sbb
xchg
iret
inc
mov
js
in
sub
mov
push
popf
xlat
pop
cmp
movsb
push
xorb
scas
sbb
inc
cli
and
cwtl
mov
lods
fcoms
fisttpll
jnp
stos
xchg
in
push
repz
jle
mov
sub
aad
int3
jge
pusha
imulb
sub
rcrb
int
fsincos
std
je
rol
sub
mov
fiadds
fidivl
sub
pop
cli
sbb
xchg
sub
loop
int3
pushf
mov
pushf
sub
mov
inc
mov
popf
inc
mov
sub
push
mov
fidivs
popa
sub
add
xor
movsw
dec
in
insl
cmpsl
movsb
lds
sub
testb
test
add
enter
es
lcall
ret
and
adcl
cmc
mov
hlt
pop
fs
adc
push
sar
mov
mov
inc
and
fbld
adc
jmp
movb
popa
scas
lahf
pop
test
call
jmp
add
cwtl
ror
lea
sahf
sub
stc
jg
popf
cld
lret
add
ljmp
sahf
adcl
xor
and
inc
dec
jge
sub
jns
mov
adc
dec
cwtl
or
jmp
popf
or
cmp
test
cmp
sub
stos
mov
movb
add
outsb
dec
cmp
ljmp
popa
add
loope
sbbl
pop
mov
mov
lret
lcall
mov
xchg
fisubl
leave
gs
mov
sahf
pop
fdiv
out
xor
js
scas
scas
and
push
jp
pop
mov
jns
sub
mov
dec
cmp
or
or
call
xchg
inc
lcall
int
in
sahf
rcr
es
sbb
or
inc
loopne
je
arpl
pop
adc
push
adc
cmp
mov
push
jbe
pop
aas
je
scas
push
mov
scas
mov
and
and
sbb
scas
loopne
loopne
out
pop
sub
jp
mov
cld
mov
mov
mov
pop
pop
push
sub
es
sub
cmp
repnz
into
xchg
mov
sub
inc
rol
arpl
mov
sar
cmpsl
xchg
and
jbe
push
mov
gs
movsl
adc
xor
les
sub
cld
mov
mov
daa
loop
cmp
or
mov
imul
iret
subb
push
push
mov
add
popa
pusha
rorb
es
mov
int3
jb
frstor
fdivl
inc
cmc
push
les
add
pusha
pop
cmpsl
popf
mov
xor
inc
push
pop
xlat
lock
cwtl
inc
adc
in
pop
sbbl
and
xor
mov
icebp
adcl
dec
rcpps
sbb
xchg
aaa
sub
test
addl
cs
pop
lret
leave
mov
fcmovb
adc
mov
push
sahf
loope
sub
xlat
scas
push
ds
jmp
in
pop
sbb
idivb
hlt
stos
xchg
cmp
call
adc
je
pushf
jge
pextrw
mov
inc
mov
lahf
mov
push
cwtl
pop
sbb
jns
mov
pop
dec
enter
lahf
cmc
outsb
out
icebp
sahf
cwtl
dec
xchg
lcall
arpl
xchg
inc
out
lea
int
cmc
fcoms
push
xlat
aam
data16
push
insl
jno
repnz
dec
mov
mov
mov
cmp
leave
xchg
popf
je
sub
roll
es
cmp
int
in
jns
das
inc
sbb
adc
popf
pusha
sbb
inc
xchg
dec
dec
into
div
icebp
pop
cmp
jb
pusha
xchg
sti
mov
xchg
into
hlt
sbb
dec
and
mov
insl
lods
sti
in
mov
or
inc
adc
sub
sbb
pop
pusha
push
pop
iret
in
test
push
les
push
or
mov
mov
and
pop
and
or
cmp
jle
ja
rcr
lahf
dec
mov
daa
loope
push
mov
jb
jecxz
inc
jge
popf
mov
cmp
and
mov
push
jp
pushf
insb
popf
out
fadd
in
jecxz
push
cmp
jg
inc
mov
in
xchg
fsubl
push
nop
lods
es
enter
xlat
push
mov
jecxz
dec
and
mov
xor
shlb
shrb
jecxz
push
dec
mov
dec
jbe
outsb
mov
adc
outsb
sub
lock
inc
mov
add
dec
sbb
mov
lret
xchg
sbb
dec
xchg
outsl
xchg
cmp
fabs
cli
stc
pushf
lahf
cmp
dec
arpl
mov
lret
lahf
add
mov
adc
xor
mov
inc
mov
mov
inc
rcl
add
je
pop
xchg
in
cmpsb
jecxz
rcr
daa
and
pop
pop
lock
fisubrl
lock
xchg
or
popf
mov
and
cmpsl
sub
rol
push
xchg
dec
add
roll
out
stos
jno
sbb
and
adc
imul
push
cmp
push
mov
cmp
test
in
decl
cmp
sbb
pop
sbb
xor
insl
mov
std
fmul
ljmp
enter
dec
jecxz
mov
repz
popf
jmp
jge
mov
ret
add
jp
jae
loopne
sahf
push
ret
mov
jbe
sub
push
cli
mov
jns
sbb
or
inc
lock
addr16
imul
outsl
mov
adc
sbb
sbb
movsl
popf
xchg
cmp
dec
or
std
rcrl
add
mov
pop
int
jl
sbb
lods
sahf
pop
xchg
movsl
inc
ss
addr16
push
or
pop
sar
shl
mov
cs
or
inc
scas
pop
adc
js
or
xor
movsl
jecxz
pop
inc
jp
lock
lds
pop
jae
pop
or
fdivs
and
mov
dec
push
int
std
fsubp
movsl
idivb
mov
mov
xchg
add
ret
sahf
das
andl
pop
mov
xor
movsl
loope
inc
add
pusha
data16
enter
movsl
cli
add
jbe
xor
stos
fdivl
in
pop
int
dec
outsl
xchg
dec
xorb
dec
incl
add
or
aas
mov
cmp
imul
fisubrs
mov
add
lds
movsl
mov
push
mov
movsl
push
and
pop
pop
and
xor
push
and
jnp
in
in
pop
movsl
hlt
roll
lret
call
mov
adcl
rcrl
xchg
loopne
sbb
adc
sbb
pusha
pushf
add
inc
shrl
push
adc
movsl
inc
idivl
cmp
movsl
fs
test
iret
pop
sbb
mov
aas
fdiv
out
ficompl
push
mov
rcrl
mov
cmpsl
popa
jl
bound
movsl
and
mov
mov
inc
movsl
inc
lcall
movsl
jge
xor
lea
push
xchg
adc
push
icebp
xlat
pop
add
dec
cld
sub
and
movl
adc
jae
out
jmp
pop
cmp
inc
sahf
xor
enter
movsl
cmp
js
xor
pop
mov
dec
in
ljmp
out
enter
popa
idivl
lods
imulb
outsb
cmp
mov
std
and
pop
stc
or
cltd
repnz
push
ret
shll
sarb
or
sub
lods
andb
and
xchg
xor
leave
movsl
hlt
scas
popa
bound
mov
roll
pushf
adc
cmp
fstp
in
inc
movsl
push
pop
cmp
icebp
out
push
jbe
push
dec
stos
xchg
pop
and
or
cwtl
xchg
xor
pop
roll
inc
jo
jo
mov
or
aad
insl
push
out
mov
adc
mov
js
inc
dec
push
jae
push
rcrb
pop
mov
or
pop
jne
mov
xchg
sbb
movsl
push
inc
xor
movsl
mov
loope
jmp
sbb
movsl
adc
pop
fs
movsb
adc
jbe
movsl
xchg
and
mov
movsl
xor
dec
pop
mov
movsl
push
jb
sbb
sub
test
dec
jge
sub
xchg
lds
push
in
leave
iret
stc
into
adc
out
movsl
clc
ja
mov
jp
jno
fisubl
push
imul
push
pop
cli
mov
or
rcr
sbb
xchg
push
fiadds
inc
adc
inc
jge
pop
loopne
cmc
cmc
mov
sub
and
sub
sbb
adc
push
xchg
xchg
pop
inc
push
clc
pop
pop
adc
cmp
icebp
lret
mov
jle
pop
leave
mov
shll
cmp
mov
shll
das
jno
and
cmp
lds
sbb
gs
roll
pop
in
stos
xcrypt-cfb
cmpsl
cmpsb
in
cmc
fstpt
pop
idivb
out
inc
js
outsb
or
scas
cli
xor
movl
scas
leave
out
sub
xor
and
mov
lods
mov
lcall
mov
push
cmpl
mov
pushf
in
es
cmpl
mov
stc
push
jmp
mov
inc
aas
fld
lahf
icebp
jb
add
adc
mov
repz
lcall
and
mov
stos
mov
and
lds
int
movsl
add
mov
imul
push
insb
das
cmpsl
movsl
adc
bound
sti
xchg
popa
push
in
jne
mov
dec
call
cmc
shlb
lcall
cwtl
inc
inc
scas
sub
cld
pop
push
cmpsl
or
jg
repz
mov
xor
lods
mov
pop
jo
inc
movsl
into
out
jg
push
ljmp
imul
data16
outsl
outsb
aad
cwtl
movsl
scas
sbb
flds
mov
adc
clc
pop
or
add
mov
xor
pusha
fisubl
lds
fiadds
mov
sbb
add
and
and
in
loopne
push
push
push
data16
pop
pop
or
dec
mull
roll
mov
and
pusha
out
leave
into
sub
sbb
and
sbb
fstps
test
pop
call
xchg
mov
movsl
lods
out
or
push
ljmp
xchg
bndldx
mov
in
mov
sub
adc
mov
call
in
lock
in
xor
or
xlat
sub
ficoms
lods
cmp
inc
sbb
sub
pusha
cmc
adc
xor
icebp
inc
pop
ss
repz
data16
dec
aas
jns,pt
mov
fdivrl
mov
fnstenv
mov
sub
addl
das
mov
leave
xchg
push
and
mov
enter
sbb
sub
aam
test
mov
cmp
lret
ss
imul
ja
dec
hlt
push
pop
and
dec
popa
popa
test
add
in
popf
xor
cmpsl
pop
loopne
push
mov
je
pop
bound
icebp
mov
and
inc
bound
or
aam
cmp
js
mov
test
repnz
lods
pop
mov
push
out
bound
sub
mov
pop
fldcw
lds
rep
lea
sub
adc
repnz
cmpsb
mov
xchg
push
xlat
test
push
jb
test
or
sahf
mov
jbe
push
loopne
in
fistpl
scas
cltd
xor
das
out
mov
mov
sub
mov
jb
ja
loop
mov
in
mov
cmc
cs
lahf
inc
sbb
rolb
push
adc
cltd
or
ficomps
dec
dec
jbe
push
jo
aam
idiv
push
icebp
cli
subl
shlb
hlt
jmp
sub
les
add
mov
xor
sub
cmp
push
push
mov
xchg
sub
jb
add
cmc
popf
stos
sbb
lcall
inc
int3
add
movsl
das
mov
mov
lcall
push
jg
dec
sub
xrelease
movsl
out
add
stos
ucomiss
movsl
push
push
incb
dec
loopne
movsl
aaa
adc
mov
push
outsl
insb
dec
orl
xchg
dec
clc
roll
sbb
lret
dec
movsl
outsb
add
fsubrp
adc
in
aas
das
test
out
iret
cmc
pop
imul
aam
cli
mov
jl
and
or
in
mov
fsub
or
lahf
cmp
dec
mov
and
xchg
mov
inc
test
mov
iret
xchg
movsl
jae
test
ret
mov
movsl
aaa
mov
popf
xchg
out
movsl
lret
hlt
ljmp
cld
ss
add
movb
sbb
push
movsl
es
movsl
lcall
mov
pop
jecxz
scas
movsl
mov
or
jnp
mov
adc
aaa
inc
in
push
jmp
scas
mov
sub
fisubl
fnsetpm(287
cli
mov
sub
iret
jb
movsl
rcll
mov
mov
or
inc
nop
ljmp
and
lahf
dec
movsl
dec
push
cmp
push
cmp
xor
xchg
shll
or
pop
mov
xlat
movsl
dec
int
test
mov
out
pushf
cmc
jbe
movsl
jge
xchg
lods
in
and
jae
bound
ja
cli
adc
fdivp
cmp
xor
outsl
movsl
inc
xchg
lret
cmpsl
and
pop
mov
movsl
dec
pop
movl
xchg
push
xor
cwtl
out
int3
mov
cmp
test
fwait
movsl
loope
iret
jp
xchg
add
xchg
mov
xchg
sti
data16
movsl
test
aam
or
cs
push
test
movsl
pop
gs
testl
mov
cmpb
fstpl
lds
movsl
or
repnz
lds
popf
mov
cmpb
ss
ficompl
shll
push
and
movsl
aam
ljmp
mov
push
movsl
mov
xchg
jge
nop
jecxz
mov
adc
mov
xchg
mov
mov
cmpsl
cmp
adc
outsl
mov
stos
jae
lods
insl
add
cmp
loope
int3
pushf
push
inc
sub
movsl
jb
scas
imul
repz
ljmp
xor
insb
and
stc
and
mov
pop
int3
pop
cmpsl
dec
movsl
fsubs
mov
mov
cwtl
push
mov
lods
ja
outsl
push
loop
stos
in
scas
roll
and
stc
mov
cmp
movsl
inc
sub
mov
movsl
rep
orb
les
jle
mov
or
andl
movsl
into
enter
adc
lret
or
cs
mov
cmc
mov
js
mov
push
movsb
rcrl
jp
xor
or
push
gs
inc
data16
mov
aad
cmp
iret
mov
and
movsb
adc
cs
xor
xchg
scas
ds
andb
or
mov
ja
push
jbe
mov
xor
dec
loope
iret
in
xchg
xor
pop
sub
mov
jmp
aas
or
mov
add
cmp
fcmovnb
or
scas
cmpsb
movsl
push
cmc
loop
adc
cmp
dec
clc
push
jne
ja
outsl
push
sbb
jle
xchg
xor
icebp
loop
adc
push
mov
dec
dec
test
mov
xor
or
mov
pop
call
cld
cmc
js
xor
movsl
sbb
std
cmp
jecxz
je
fucomi
jl
inc
mov
out
movsl
cwtl
mov
movsl
jecxz
push
and
add
jmp
mov
sahf
fsubrs
jmp
sti
fisubl
add
out
movsl
jmp
jnp
mov
mov
fsubs
push
loope
sub
dec
fldenv
enter
adc
lds
or
jbe
or
adc
push
repnz
sbbl
lods
test
aaa
out
push
imul
sub
xchg
xchg
xor
xchg
mov
stos
pop
rorb
movsl
in
in
push
mov
loope
test
adc
fs
pop
cmp
mov
in
pushf
lcall
movsl
stc
aad
inc
mov
mov
add
pop
mov
test
add
leave
stc
movsl
aam
adc
xchg
inc
movsl
pop
xor
loope
or
mov
mov
cmpsl
movsw
inc
mov
movsl
sbb
out
cmpsb
mov
test
popa
push
adc
arpl
mov
lret
inc
ret
outsl
pop
push
and
dec
xchg
in
xor
movsl
add
sub
mov
inc
cmc
cs
sahf
int3
sar
add
movsl
je
sbb
dec
jmp
mov
or
movsb
mov
or
adcb
add
out
fildll
add
movsl
push
rclb
mov
cmp
das
sbb
push
dec
out
push
jle
nop
popf
lea
repz
das
and
dec
jns
into
xorl
add
adc
clc
push
and
jb
js
dec
push
addr16
jnp
test
pop
outsl
lods
lods
movsl
xor
leave
loop
movsl
lock
mov
pop
out
pop
mov
vunpcklpd
inc
mov
xchg
push
pop
sub
lods
lahf
add
nop
jns
jne
mov
or
xor
inc
pop
in
lea
fwait
aas
movsl
xchg
clc
arpl
mov
pop
outsl
test
mov
daa
mov
pop
loope
imul
out
and
jae
shll
xor
fcmovne
add
dec
xchg
frstor
decl
mov
out
jecxz
cmp
or
sub
cmp
jl
inc
mov
jae
movsb
xchg
movsl
mov
mov
push
enter
loope
lahf
imul
sbb
xor
out
arpl
push
pop
pop
data16
xchg
push
add
cmpsl
in
mov
or
pop
inc
lods
sbb
jmp
mov
insb
imul
push
out
dec
lds
into
arpl
fcomps
jmp
adc
mov
ret
shll
jnp
xchg
movsl
mov
add
jl
jbe
sbb
imul
call
fwait
loop
fmuls
add
jnp
mov
adc
movsl
pop
mov
sbb
movsl
push
cmp
lds
xor
insb
mov
jbe
into
dec
std
cmc
movsl
test
movsb
or
push
int
ljmp
jl
movsl
jle
inc
xor
jmp
xor
sbb
cmc
push
pop
mov
test
stc
test
mov
mov
pusha
sbb
inc
fwait
adc
adc
pop
push
dec
in
arpl
in
pop
xchg
fsts
movsl
and
mov
or
dec
sahf
jl
out
sub
imul
gs
mov
repz
imul
ljmp
in
shlb
sub
rcll
xor
aad
das
movsl
pushf
mov
icebp
pop
movsl
or
cltd
mov
mov
lcall
inc
mov
fs
insb
cmp
push
orb
inc
adc
popf
inc
mov
sbb
hlt
gs
popf
outsl
xor
mov
ja
push
jns
sbb
sub
mov
inc
sub
rcr
sub
inc
aas
mov
std
mov
or
mov
xchg
cltd
inc
and
adc
xchg
adc
shll
pushf
sahf
pop
sbb
lahf
pop
subps
loope
std
cmpsb
pop
popf
mov
pop
jno
sbb
js
aad
xor
mov
and
or
push
push
sub
xchg
cmc
sub
xor
mov
pop
movsl
stc
sarb
pop
icebp
sarl
dec
sarb
and
jmp
and
and
push
sahf
les
pop
hlt
or
pop
and
jne
lods
push
in
stos
shll
mov
pop
and
jmp
movsl
js
push
daa
stos
shlb
rcr
stos
push
cmp
stc
mov
sti
cltd
out
shll
rol
fmul
mov
cmp
out
cs
push
adc
sahf
jp
sub
mov
call
or
gs
adc
xor
mov
mov
les
push
jmp
out
xchg
in
into
adc
push
add
pop
mov
fldpi
out
rorb
adc
dec
xchg
negl
lds
sahf
loope
push
sub
movl
sbb
sub
pop
mov
lcall
jb
enter
daa
or
and
inc
hlt
xchg
mov
sbb
mov
xchg
pop
jbe
push
fbstp
xlat
and
ja
das
or
sti
in
pop
dec
mov
icebp
aam
xchg
xor
adc
mov
sbb
push
sub
movsl
loop
inc
pop
jo
jl
fnsave
pop
inc
popa
jbe
sbb
imul
and
clc
xchg
cmpsb
pop
repnz
cmp
xchg
adc
mov
pop
dec
pop
and
bound
fisttpll
out
push
add
mov
and
sub
add
xchg
mov
and
push
sbb
sub
aam
cpuid
mov
mov
lds
pop
cmp
mov
mov
adc
or
aas
mov
stos
mov
push
and
xor
cmp
add
and
xor
mov
cmp
out
pop
push
jnp
jge
je
gs
mov
inc
pop
ds
mov
pop
mov
mov
aad
into
and
mov
sub
xadd
insl
xchg
fsub
pop
pop
or
mov
xor
and
pushf
sbb
sbb
std
in
xor
mov
add
mov
bound
mull
hlt
sbb
call
cmp
add
lods
iret
mov
gs
test
movsb
xor
jecxz
movsl
icebp
add
fidivrs
push
sahf
adc
cwtl
clc
cmc
xor
push
pushl
popa
movb
std
push
in
push
aam
iret
fxch
lods
jno
adc
mov
fadds
andl
add
aad
and
pusha
cmpsl
lcall
outsl
pop
inc
shlb
add
sti
xchg
cmp
inc
not
mov
data16
ror
add
pushf
xlat
mov
or
ret
sub
loop
mov
jns
dec
das
mov
mov
pop
es
inc
mov
aas
cs
jmp
into
loope
xor
cmp
fwait
push
clc
imul
or
add
mov
lret
push
outsl
sub
jns
push
and
or
or
adc
sub
mov
loope
movsl
outsb
adc
stc
pop
jns
mov
sub
jne
xchg
cli
in
mov
push
push
insl
fs
aas
jl
or
push
inc
in
fucom
icebp
lea
mov
out
out
rcl
daa
sarb
push
xor
je
scas
nop
pushf
les
and
popa
mov
xor
lock
sbb
popf
cmc
cmp
fisubrs
sub
push
repnz
mov
out
mov
push
shll
test
and
mov
arpl
adc
sbb
mov
lea
cmc
dec
pop
mov
or
and
test
loop
sub
aaa
mov
push
mov
push
mov
mov
std
jecxz
mov
call
cs
pop
cmpb
jb
test
cwtl
mov
fs
push
push
aam
cli
add
or
or
and
xchg
push
clc
popa
adc
hlt
inc
inc
aad
pop
lret
cwtl
fmull
aad
push
fsts
pushf
jne
add
je
pop
xor
cli
cmc
shlb
cmp
xor
in
mov
test
addr16
adc
cmpsb
pop
arpl
mov
mov
jbe
rcrl
xchg
xlat
inc
in
dec
dec
or
mov
inc
lock
or
xchg
lods
loop
cmp
push
pushf
cmp
add
pop
mov
ja
jp
loopne
adc
outsb
add
adc
add
pusha
adc
sub
xor
jnp
xchg
and
or
push
int
jbe
xor
mov
into
push
or
jae
mov
arpl
jns,pn
push
push
lea
ja
or
xor
pop
add
ret
sbbl
mov
cmp
dec
fcoml
fst
inc
mov
mov
jl
xor
insb
das
add
aad
hlt
les
les
arpl
movsl
rclb
stc
cmp
cli
je
jo
adc
add
jecxz
pop
scas
mov
sbb
jo
mov
fdivl
sbb
movsl
icebp
iret
shr
test
test
aad
cmp
fstpt
fdivrs
addl
adc
push
sbb
bound
cli
and
mov
movsl
mov
mov
adc
enter
pop
push
xchg
and
pop
div
inc
xchg
leave
push
movsl
outsb
push
jecxz
jb
test
sub
or
jbe
mov
lds
inc
scas
shlb
ds
pop
lods
ss
pusha
inc
cmc
sub
test
int
dec
leave
aad
movsl
rcrb
data16
or
mov
xor
mov
loop
xor
cmp
dec
int
test
sbb
dec
rclb
andl
aaa
das
or
movsl
negl
mov
fadds
movsl
xor
pushf
cmpsl
mov
int3
jmp
sbb
mov
fwait
in
inc
lds
movsl
sahf
data16
sbbb
push
je
push
pushf
int
std
es
test
aaa
xor
mov
dec
sub
xchg
pop
add
mov
inc
dec
lds
outsl
gs
scas
push
vhaddpd
insl
pop
movsl
push
in
ret
sub
stc
lcall
or
movsl
fwait
test
xchg
cmp
enter
pop
mov
cli
in
repnz
jl
sbb
sbb
or
movsb
jb
xchg
sbb
push
jecxz
cmpb
xchg
popf
inc
stos
jp
adc
sbb
cmc
out
mov
xchg
inc
mov
mov
add
insl
dec
pop
movsl
xchg
or
mov
pop
test
lds
push
cltd
cmp
xchg
cmp
xchg
stos
xor
jae
fisubl
call
or
jnp
test
push
dec
arpl
mov
lds
loopne
lds
jg
xchg
in
fstl
movsl
daa
call
mov
inc
xchg
jnp
dec
jle
lods
xlat
movsl
sbb
into
fcmovbe
flds
insb
test
imul
inc
sub
int
out
movsl
fxch
xor
movsl
mov
add
movsl
xor
into
dec
in
pop
xor
in
add
movsl
jo
popl
lret
rcrl
xchg
xor
jmp
movsl
push
sti
notl
movsl
mov
adc
sahf
dec
stc
sahf
xor
xchg
sub
cs
hlt
inc
cli
int
movsl
xchg
loop
rol
mov
loopne
fisubl
movsl
pop
or
stc
push
movsl
ret
hlt
cmp
or
in
adc
xor
shlb
clc
movsl
mov
sti
addr16
jl
daa
lds
xchg
movsb
xchg
cmp
mov
mov
mov
pop
cmpsl
movsl
aas
mov
aad
adc
mov
shlb
cmpsl
in
add
sbb
movsl
xchg
or
pushf
jp
shlb
mov
mov
movsl
jmp
xchg
push
andl
mov
mov
mov
in
in
stos
out
js
repz
stos
xor
pop
mov
mov
cltd
xchg
movsl
mov
inc
pop
cli
pop
test
nop
mov
imul
push
sbb
sarl
mov
sbb
push
lock
in
movsl
dec
out
addr16
sahf
stos
movsl
push
xchg
push
cmp
inc
xor
rcrl
or
sub
adcl
adc
mov
pushf
das
push
and
addb
push
adcl
sub
std
aaa
push
xor
add
in
sub
aam
or
or
dec
ror
xchg
and
sbb
int
leave
hlt
fcompl
xchg
xchg
lahf
cs
sbb
mov
in
fidivrs
int3
or
dec
test
sbb
mov
movsl
add
fstpl
sub
dec
cmc
andb
xor
xchg
stos
insl
or
fcom
insb
push
xchg
movsl
sti
gs
push
jb
lea
and
jne
xor
pop
cmc
dec
loope
mov
jnp
ljmp
push
js
lcall
movsl
outsb
mov
pop
daa
sub
ret
imul
movsl
pop
je
fwait
pop
call
in
adc
pop
sbb
movsl
push
mov
adcb
push
movsl
or
roll
sub
mov
aaa
sti
out
notl
sub
and
pop
mov
add
test
sbb
shlb
adc
mulps
cmp
sbb
aas
mov
cmp
fimull
into
popa
insl
dec
insb
popf
out
dec
jb
imul
push
cmp
push
push
push
push
inc
mov
movsl
bound
jns
scas
stos
cmpsb
test
je
lods
pop
jo
pop
arpl
xor
test
daa
lods
popf
addb
or
std
out
and
call
shlb
jbe
sub
or
xor
sbb
sti
fldcw
stos
movsl
gs
jl
repnz
inc
movsl
sbb
adc
movsl
cmp
bound
mov
jne
xor
and
jbe
in
cmc
sar
outsl
pop
lret
cmp
mov
jnp
dec
sarb
sub
ret
bound
jne
pushf
inc
cmpsb
jle
in
sbb
mov
movsl
subb
int
mov
dec
fdiv
in
shr
aam
movsl
dec
ja
mov
push
mov
dec
sarl
movsl
sti
loop
out
mov
lds
cltd
lcall
push
pop
fstl
adc
mov
sahf
inc
xchg
xchg
adc
enter
mov
adc
lret
mov
add
test
cmc
mov
jmp
cmc
iret
lret
cmp
movsl
out
out
pop
pop
outsl
lret
ja
push
or
mov
jp
int
lcall
insb
mov
aad
out
movsl
bound
pop
ja
jmp
lds
ret
add
mov
dec
jl
mov
popf
test
mov
mov
bound
lcall
mov
cs
stos
andl
movsl
push
in
fnstsw
movsl
std
or
jecxz
sub
out
lea
dec
mov
sbb
xor
cmpsl
and
cwtl
mov
or
movsl
push
testb
in
orl
sbb
mov
jb
int
push
repz
push
xor
mov
sbb
imul
loop
push
xchg
neg
es
xchg
cmp
loop
stc
or
xchg
mov
jns
cmp
fisubs
cmpsb
test
in
dec
insb
or
movsl
mov
mov
es
mov
push
cs
movsl
sub
jns
pop
movsl
mov
sbb
sbb
fldt
movsl
out
loope
push
jno
movsl
sub
int3
inc
movsl
push
add
int
shlb
movsl
pop
mov
loope
fstpl
scas
lahf
mov
and
cs
sub
shld
mov
push
xchg
inc
aad
std
movsl
fdivrs
lret
repz
movsl
ja
arpl
out
xchg
ljmp
jle
movsl
dec
imul
lds
add
fdivrs
xchg
incb
pusha
shll
mov
mov
movsl
cmpsl
and
andl
inc
xor
hlt
jns
lods
movsl
pusha
push
fcmovnb
fwait
sub
mov
push
push
sbb
xchg
mov
push
jne
inc
adc
xor
jnp
mov
push
test
cmpl
addr16
scas
mov
mov
in
movb
jecxz
notb
movsl
leave
fs
xlat
data16
push
pop
sbbl
pop
and
stc
jmp
mov
lret
inc
in
and
inc
xchg
out
push
mov
sbb
ret
sahf
fwait
movsl
das
fcmovnbe
loopne
add
adc
in
scas
int
xchg
test
mov
or
loope
and
xor
arpl
lds
dec
movsl
adc
clc
jb
insl
push
mov
jnp,pn
mov
in
push
pop
inc
and
inc
jno
in
sahf
mov
xchg
in
jle
xor
push
fs
sbb
push
inc
imul
push
cwtl
mov
sahf
mov
das
cltd
lret
cmp
jge
add
mov
sbb
sbb
ja
cmpsl
adc
outsl
jmp
adc
test
or
or
cmc
hlt
clc
imull
mov
in
pusha
lea
movsb
fsubl
fstps
mov
push
jg
fldl
xlat
jl
xor
jmp
es
lahf
mov
testl
mov
add
sahf
rcrb
mov
ljmp
pop
add
inc
cli
and
mov
mov
sbb
inc
imul
aas
movsl
jge
mov
mov
sub
xchg
mov
adc
or
add
cmpsl
jge
movsl
push
fwait
cs
movsl
enter
cmp
xchg
lock
shrl
push
mov
jmp
jae
movsw
out
shll
mov
mov
movsl
add
movsl
jg
cmpsl
ss
bound
movsl
js
xchg
mov
mov
mov
xor
push
ret
mov
and
lcall
pop
cmp
adc
movsl
xchg
and
cmp
sub
mov
push
xor
or
pop
mov
dec
outsl
jno
dec
mov
insb
or
es
push
cmc
jmp
sahf
adc
popf
xchg
push
sub
mov
push
int
jg
push
movsl
pusha
cmc
inc
stc
push
sub
xlat
xchg
jmp
sbb
sub
sbb
movsl
or
jl
pop
and
xorl
push
imul
mov
xor
orb
jns
mov
lret
add
int
adc
xchg
mov
shl
dec
push
adc
sbb
mov
jge
mov
sbb
test
aad
stos
mov
jg
imul
sub
cli
clc
movsl
imul
dec
pop
in
xrelease
mov
cmc
stos
dec
mov
movsl
sbb
call
mov
mov
or
orb
bound
or
fs
cmpsb
test
and
ret
sbb
mov
movsl
add
orl
sub
mov
jecxz
and
std
mov
push
idivb
add
sahf
dec
inc
movsl
adc
mov
push
movsl
cmp
mov
nopl
movsl
rcrl
adc
test
add
xor
sbbb
dec
mov
mov
cmpsb
push
sub
xchg
xor
repz
cltd
mov
ret
sahf
imul
lahf
mov
dec
andl
mov
in
cld
clc
shl
adc
and
movsl
iret
subb
mov
dec
jae
cmpsl
add
and
adc
cmc
xchg
sahf
sub
xor
nop
repz
movsl
push
add
movsl
xor
add
xchg
movl
and
jg
lds
mov
jb
test
sbb
sbb
movsl
dec
enter
loope
sahf
call
push
dec
add
ja
push
movsl
push
into
in
imul
das
aas
test
push
leave
sbb
pop
cmp
mov
pop
sub
xor
in
out
movsl
jecxz
xchg
jmp
addr16
pop
jnp
mov
mov
or
mov
stos
cmp
rclb
or
test
lds
xchg
cwtl
stos
push
movsl
fs
cmp
jno
imul
lds
cmp
xchg
sbb
in
popa
ss
insb
movsl
stos
popf
and
mov
mov
mov
pop
add
jg
stos
aam
call
mov
lods
cmpsb
mov
movsl
jo
sbb
lret
movsl
push
or
in
or
inc
xchg
mov
std
repnz
out
aam
xchg
fwait
sbb
and
xchg
adc
xchg
in
inc
cmp
shrb
fs
jmp
xor
or
std
fisubl
xorb
cmp
rclb
movsl
mov
push
movl
mov
dec
in
add
and
dec
cmc
mov
std
sbb
pop
movsl
xor
in
or
add
insb
dec
inc
addr16
mov
mov
outsb
lahf
mov
mov
sarl
popa
push
jl
sbb
lea
test
in
imul
push
fnsave
in
mov
mov
cwtl
adc
sub
aaa
stos
enter
movsl
xor
pop
in
movsl
in
clc
jmp
jne
xchg
inc
mov
movsl
hlt
push
inc
cli
pop
add
ljmp
push
jbe
ret
push
inc
mov
jmp
stc
jp
movsl
push
lods
sbb
fdivr
mov
lret
dec
sub
movsl
stos
out
imul
aaa
sbb
scas
in
mov
adcb
adc
push
push
insl
dec
pushf
repnz
das
lds
adc
push
inc
inc
lds
jle
test
movsl
and
daa
lahf
movsl
sub
fcmovnbe
in
iret
aam
rcrb
shlb
ja
jmp
and
add
mov
loope
movsl
sub
rol
jns
cmp
icebp
lahf
into
jne
pusha
andb
popa
jo
or
lods
movsl
cwtl
inc
test
in
mov
stos
push
in
scas
movsl
or
addr16
adc
loop
jne
movsl
out
ljmp
movsl
inc
jbe
leave
repnz
pop
xorl
lock
inc
adc
jno
cmp
jecxz
hlt
dec
dec
push
adc
in
mov
pop
fbstp
push
cs
in
ret
pop
adc
imul
mov
arpl
in
dec
fwait
movsl
int
insl
popf
cmp
mov
loope
test
out
pop
ljmp
mov
andb
jp
mov
cmp
clc
int3
mov
and
push
mov
lds
or
lahf
fldl
aaa
pusha
sbb
mov
jo
inc
movsl
int
ret
adc
sub
add
push
add
and
ret
sbb
mov
push
lds
jbe
in
sbb
mov
mov
jbe
movsl
sbb
mov
xchg
movsb
xchg
movsl
in
sarl
cld
ja
shld
add
packuswb
sbb
in
fwait
xor
sahf
push
jae
cmpsl
subb
or
cmp
and
test
ret
inc
jno
in
cs
out
in
in
les
mov
mov
imul
adc
std
and
pop
rclb
test
test
popf
mov
popa
sbb
push
gs
or
std
fadds
outsb
and
dec
or
test
xchg
add
jg
je
inc
mov
stc
lcall
cmp
mull
jmp
pop
je
adc
out
sbb
mov
mov
test
ljmp
movsl
add
jge
mov
bswap
jp
sahf
adcl
int3
jae
add
push
frstor
push
sub
stc
fsts
push
push
sbb
movsl
scas
push
and
push
bndstx
mov
loope
dec
and
hlt
rol
jp
jl
pusha
inc
inc
int3
xchg
xlat
dec
jmp
adc
movsl
mov
dec
outsb
fs
push
test
sub
jnp
lcall
dec
pop
mov
loopne
int
fisttpll
int3
jl
movl
mov
aad
inc
push
clc
push
or
sub
movsl
xchg
fsubrl
mov
sbb
dec
shrl
and
ficompl
ret
cmpsl
pop
adc
popa
adc
movsl
mov
test
sahf
xorb
fstl
imulb
movsl
inc
arpl
rcll
fsubp
movsl
pop
je
push
cli
leave
xchg
add
repnz
shl
or
insl
in
push
sub
push
push
sbb
jne
dec
movsl
scas
mov
inc
int
das
push
cmc
ret
mov
mov
jecxz
sarl
and
imul
mov
scas
cmp
test
fs
cltd
and
gs
dec
mov
sbb
pushf
scas
and
lahf
sub
stos
mov
mov
scas
add
movsl
dec
fwait
dec
orl
movsl
inc
jae
daa
cmp
or
sub
lret
and
cltd
mov
mov
adc
in
sbbl
xchg
arpl
fsubr
mov
jb
lret
push
call
jbe
out
or
scas
or
adc
push
test
subb
pop
iret
dec
ljmp
and
movsl
mov
fcomp
repz
xlat
mov
adc
jmp
in
aaa
cmp
pop
ss
and
sahf
sbb
aad
mov
xorb
pop
cmp
ja
and
notl
mov
lds
mov
nop
mov
lock
push
push
js
iret
movsl
int
and
xchg
es
clc
pop
loop
call
out
pop
push
js
pop
or
mov
add
out
sub
movsl
in
js
pop
jno
insb
out
icebp
loopne
fisttpll
rorb
inc
mov
mov
fbld
pop
push
repz
fs
inc
mov
adc
rolb
int3
cli
or
vmwrite
mov
leave
cmp
rep
decl
insl
hlt
ss
call
lret
cmp
mov
aaa
movsl
xor
mov
sarl
adc
dec
ljmp
aam
or
mov
int
xor
movsl
out
mov
xor
dec
jge
jne
jb
movsl
cmovno
movsl
into
push
dec
pusha
push
push
les
movsl
jle
loope
add
idivl
aad
mov
test
das
push
leave
cs
mov
mov
fdivrp
cmp
repnz
pop
pop
stos
mov
xchg
call
fwait
xchg
imul
leave
cltd
push
dec
gs
imul
aas
inc
insb
adc
movsl
dec
or
adc
pop
and
dec
push
js
and
mov
mov
sahf
pop
popf
inc
inc
je
out
popf
sbb
in
mov
or
int3
lret
cmp
mov
out
dec
out
or
mov
and
fsubrs
insl
cmp
loopne
xlat
jns
jae
pop
cmpsb
mov
cld
int3
or
loop
sub
mov
adc
es
cmp
loopne
mov
sbbl
test
pop
push
jecxz
mov
adc
pop
mov
xchg
outsb
sub
inc
cmc
mov
jne
inc
sub
cmpsl
cmpsb
icebp
pushf
add
les
adc
cmc
stos
mov
cli
push
imul
mov
stos
scas
cmc
dec
lods
push
test
push
or
cmp
pop
hlt
jnp
mov
outsb
pushf
xorl
sub
xor
aam
mov
mov
inc
mov
push
mov
aad
pop
sbb
sbb
dec
sbb
xchg
loope
in
imul
add
jne
lods
imul
popa
and
pop
in
out
loopne
fstpl
and
mov
push
cmpsb
clc
push
aad
sbb
loop
mov
inc
push
stc
or
mov
sub
mov
jecxz
mov
pop
stos
repnz
jle
mov
or
cmp
adc
and
cmpsb
je
test
push
adc
sub
jl
into
data16
sbb
dec
int
sbb
je
and
cmp
dec
pop
stos
mov
push
negb
sti
in
in
sbb
icebp
and
cmpsl
iret
sub
sbb
cmpsb
mov
xlat
je
movsb
xchg
insl
decb
dec
divb
addr16
cld
or
sarb
icebp
outsb
test
dec
add
mov
test
mov
popa
call
inc
bound
mov
jge
or
mov
sub
addb
repnz
in
icebp
pop
mov
popf
es
pop
push
mov
dec
mov
mov
mov
and
repz
dec
dec
inc
movsl
dec
mov
jnp
aam
lcall
mov
sar
jb
xor
inc
xorl
rorl
roll
arpl
loopne
sub
xchg
pop
scas
or
jbe
inc
stc
mov
and
push
popf
and
pop
les
cmc
aaa
and
push
jnp
ljmp
push
add
xor
dec
adc
mov
insl
inc
pushf
pop
sbb
mov
pop
and
imul
cli
leave
insl
pop
mov
gs
inc
popf
or
jg
int3
cwtl
icebp
add
adc
cmp
mov
lods
fsubp
in
inc
fadds
push
and
outsb
scas
cmpb
mov
dec
inc
inc
lahf
loope
pop
aad
sbb
xchg
hlt
jns
cmp
add
push
sarl
es
iret
mov
je
and
inc
push
sbb
push
sub
insb
stos
cmc
aad
mov
loopne
fmulp
fstpl
shl
out
ret
add
iret
adc
popf
adc
lock
popf
mov
cwtl
les
lcall
jno
and
and
and
dec
negl
lea
mov
xlat
jae
jecxz
add
jnp
lret
movsb
lahf
mov
out
and
cwtl
out
cmp
clc
mov
stos
ret
inc
lds
sub
test
aad
cmc
js
nop
jnp
mov
cld
jge
mov
push
push
adc
movl
jns
fnstenv
loope
into
imul
cmp
shl
sbb
icebp
aam
xlat
nop
aad
cld
sub
sahf
or
mov
fisubrs
sti
mov
cmpl
cmp
mov
inc
fcmovb
rcrb
inc
sbb
ret
mov
sbb
xor
sbb
negb
and
inc
xor
int
jnp
jne
inc
mov
insl
cmp
pop
and
ja
or
mov
movsb
movsl
jno
adc
push
sbb
lcall
cmc
sahf
pop
ds
mov
xor
push
hlt
jmp
movsl
in
popa
push
cmpl
push
call
daa
lds
xchg
sub
shl
popf
xchg
in
cmpsl
mov
inc
lea
fldenv
adc
in
mov
push
xlat
cmpsl
pop
push
inc
je
loop
mov
xor
loope
fiadds
int
mov
add
sbbb
push
out
ja
inc
mov
fcoms
cmp
sub
popa
push
fists
or
mov
movsl
mov
xchg
pop
aaa
loope
and
mov
test
out
test
push
sti
loope
scas
lock
xchg
iret
repz
incb
movsl
push
push
jmp
mov
pushf
lds
or
inc
addr16
movsl
push
sti
in
int3
xchg
lret
aam
in
cmp
mov
test
ss
sbb
adc
lret
cld
jnp
icebp
leave
mov
mov
xchg
fucomp
ja
lcall
je
xchg
cmp
divb
xor
fcmovu
cmp
nop
mov
iret
loopne
mov
pop
aas
shlb
pop
mov
jge
sub
test
adc
push
mov
cmp
mov
into
dec
xchg
jo
aaa
and
sbb
loope
pusha
cmp
cmp
add
add
mov
add
xchg
cmp
xor
push
pop
movsl
jmp
cmp
movsl
xor
inc
lret
loop
cmc
aam
pop
and
movsl
mov
out
mov
popa
std
fstps
push
push
push
stos
mov
and
test
jb
insb
pop
push
add
movsl
ja
and
lcall
movsl
je
enter
jns
mov
mov
pop
and
pop
add
mov
mov
jmp
call
dec
jg
push
mov
in
movsl
lcall
int
sbb
imul
cmpsb
jb
push
cmc
mov
movsl
pushf
sub
inc
cs
push
shlb
mov
sub
ret
je
movsl
mov
push
dec
iret
out
sbbl
out
mov
pusha
sarl
cltd
cmp
mov
xchg
xor
clc
movsl
cmp
loope
leave
xchg
and
movsl
pop
push
ljmp
sub
mov
mov
aas
icebp
cltd
mov
xchg
xor
cmpxchg
and
add
sub
test
mov
mov
ret
inc
cmpsl
jbe
cld
inc
andb
sbb
dec
pop
cmpl
pop
outsl
jmp
cmp
test
or
sbb
adc
mov
lods
cmp
push
sub
adc
add
jmp
dec
clc
push
mov
jne
in
divb
cmp
adc
mov
adc
mov
or
movsl
adc
data16
push
push
shll
fimuls
movsl
cmp
aaa
cmp
movsl
mov
pusha
arpl
data16
jecxz
lds
mov
fstl
movsl
data16
push
sbb
movsl
js
push
fidivl
sub
scas
adc
push
mov
dec
ret
and
mov
stos
lods
movsl
es
out
mov
test
lahf
xor
lds
sbb
leave
pop
and
xchg
es
cmc
xlat
shr
in
ja
sub
call
dec
je
adc
xor
cmpsb
push
mov
ret
dec
cmpsl
xlat
and
pop
push
dec
mov
mov
add
mov
lea
inc
icebp
imull
pushw
in
ja
aaa
cld
inc
mov
sbb
adc
fs
pop
lds
sub
icebp
push
pop
mov
jecxz
loope
rolb
aam
arpl
cmpsl
cmc
jmp
mov
sbb
sbb
dec
mov
dec
test
sub
in
jmp
shrb
sbb
adc
sub
mov
lds
daa
loopne
enter
fs
fwait
enter
lds
pop
loope
xor
and
fldl
cmc
pop
or
push
add
sub
icebp
cmpb
mov
xchg
pop
call
jecxz
ds
add
lds
lcall
inc
ss
icebp
insl
pop
in
mov
mov
int3
jnp
std
dec
int
loope
add
and
mov
sub
in
push
inc
stos
cmp
fdivr
jbe
rcll
lds
mov
xchg
scas
pop
push
pop
xacquire
popa
sub
dec
and
sbb
data16
push
push
mov
push
cmp
sub
lret
mov
mov
pop
add
xchg
nop
mov
jne
adc
aas
in
mov
push
imul
inc
mov
pop
adc
je
sbb
add
in
or
imul
pop
in
into
insl
push
out
test
in
pop
test
jb
test
cmp
cld
pop
mov
pushf
sub
ja
jb
icebp
lcall
push
pop
cld
cmpsb
cmpsb
jmp
sub
sbb
movhps
and
or
sub
dec
push
insb
pop
in
das
adc
adc
sbb
push
fbstp
stc
mov
lds
inc
addr16
in
adc
sub
xchg
lods
stos
data16
mov
popa
push
add
sub
and
hlt
mov
xor
push
fwait
ja
sarl
and
frstor
and
mov
mov
xor
mov
loope
pop
jo
sbb
cmc
loop
rcrb
push
pushf
imul
sub
pop
sub
sarl
dec
and
inc
hlt
xchg
jp
push
cmp
jnp
addr16
pop
pop
push
jp
scas
xchg
jecxz
sub
adc
mov
negl
xchg
jno
jecxz
adc
lock
mov
jecxz
scas
jle
hlt
cmc
scas
mov
mov
icebp
dec
mov
push
mov
add
repnz
jmp
jne
imull
lahf
cmp
push
mov
fmulp
and
mov
push
cmp
dec
ret
xchg
aad
sub
in
pop
sub
lret
das
or
mov
mulb
das
test
pop
and
jg
mov
ljmp
add
push
dec
scas
loop
inc
or
or
retw
dec
lods
sti
push
lret
add
sahf
pop
and
xchg
repz
sub
mov
icebp
out
and
cmp
and
or
jbe
mov
lret
test
mov
clc
cmc
and
sub
sbb
and
out
sub
lea
push
les
mov
cmc
pushf
xchg
and
aam
xchg
add
mov
out
in
xchg
sub
sub
fadd
in
pop
jbe
shrb
nop
cmp
xor
out
dec
ds
or
imul
pop
mov
movsl
das
cmp
test
sbb
or
jp
xchg
pop
dec
push
test
xchg
test
jp
orl
out
push
mov
sub
rclb
mov
jns
cmc
gs
fwait
sarb
lcall
xchg
jge
mov
test
pop
out
and
sbb
add
scas
rol
dec
or
das
push
test
out
int3
pop
loope
xlat
jp
iret
loopne
add
pop
add
aam
lcall
sub
into
push
mov
cwtl
je
out
add
ljmp
mov
pop
fnstcw
popf
addr16
fwait
jecxz
mov
js
jg
push
mov
and
imull
mov
pop
repz
sbb
ja
icebp
mov
xchg
in
pusha
imul
or
adc
lods
mov
pop
mov
shlb
push
cmp
xchg
sub
bound
ja
fs
in
pop
mov
or
jmp
frstor
mov
bound
push
int
dec
shlb
mov
flds
and
and
scas
push
add
lahf
sbb
rolb
insb
pop
lret
push
dec
mov
pop
test
mov
ja
mov
cmp
movsl
mov
ja
inc
js
push
push
sbb
cmp
loope
mov
negb
inc
xchg
movsl
fstpl
dec
lret
je
pop
lods
mov
cmpsb
aad
xchg
sbb
es
pushw
icebp
in
dec
fstpt
or
ffreep
sub
hlt
mov
xor
rolb
aaa
loopne
cltd
sub
fadds
shr
fsubr
sbb
mov
or
sahf
add
loope
xchg
jmp
and
mov
jge
xchg
pop
mov
fcoml
mov
sbb
jb
mov
arpl
mov
push
push
outsb
mov
pop
popf
pop
roll
push
je
xor
std
sahf
fmull
lret
imul
pushw
fimull
jno
mov
dec
cmovne
push
and
cmpsb
negl
push
mov
xor
stc
mov
mov
in
mov
jmp
movsl
push
jg
mov
mov
mov
cld
ljmp
out
in
xor
dec
xlat
mov
cmp
xchg
xchg
lret
adc
dec
adc
adc
or
and
rep
roll
mov
fidivs
push
ds
stos
shl
rorl
in
divb
movsl
movsb
mov
dec
cmp
loop
sti
mov
add
mov
sub
or
sti
inc
popa
test
pushf
ret
sahf
mulb
out
lret
scas
mov
mov
cld
push
movsl
add
dec
add
cmovp
cmp
pushf
mov
ret
push
adc
repz
or
loopne
lcall
dec
add
movsl
lret
push
xchg
sub
movsl
pusha
cmp
mov
movsl
imul
mov
xchg
mov
jp
push
icebp
xchg
or
inc
cmc
movsl
mov
sbb
movsl
sbb
loop
push
add
mov
bound
jmp
sbb
fisubl
mov
dec
push
fnstcw
std
add
test
cld
or
mov
clc
sarl
mov
fadd
in
repz
in
jno
push
pop
or
sbb
sub
test
movsl
lods
mov
aam
fiaddl
and
jl
aas
mov
icebp
cmp
sub
adc
movsl
adc
mov
pushf
cmp
shll
jo
fnsetpm(287
add
mov
rcrl
mov
mov
push
mov
fadds
pop
stos
push
dec
rolb
or
cld
dec
add
rcl
inc
pop
pop
fwait
jl
inc
test
js
adc
and
mov
movsl
mov
push
std
movsl
lods
sahf
aas
mov
ljmp
cmp
cmc
aas
aam
mov
leave
lods
repz
mov
xor
cmp
adc
int
xor
sbb
neg
shll
adc
popa
out
mov
xchg
int
mov
lret
leave
xchg
sub
int
je
fnstcw
xor
ret
adc
push
add
ret
jno
dec
sti
adc
add
movsl
sbb
pop
test
inc
push
xor
cmp
inc
adc
lds
jns
xchg
mov
jne
popf
sub
jb
push
fstpt
aam
jmp
push
inc
icebp
pop
add
enter
lds
mov
push
call
and
and
mov
push
adc
jl
pop
jle
movsb
lods
mov
jne
jg
int3
test
xor
lcall
addb
movsl
ss
int
inc
cmp
and
mov
push
in
mov
je
push
addr16
mov
pop
or
pop
gs
movsl
int3
fwait
ss
push
movsb
gs
pop
adcb
jle
rclb
push
filds
pop
mov
mov
adc
lea
addr16
mov
xchg
daa
aam
sbb
add
pop
mov
in
dec
dec
imul
mov
shl
hlt
add
sbb
xlat
cli
movsl
out
fnstenv
mov
in
push
mov
cs
daa
xchg
mov
sbb
push
repz
test
push
add
imul
sbb
jg
and
in
aam
mov
jmp
stos
mov
out
movsl
or
jge
movsl
pop
dec
imul
cmpsl
mov
movsl
pop
jg
dec
fwait
es
inc
arpl
mov
cmp
aad
mov
xchg
cmp
jno
jae
push
ret
cmp
xchg
xchg
mov
mov
ss
pop
in
dec
push
fsts
fisttps
mov
aaa
cmpsl
sbb
out
jns
mov
or
jp
lods
gs
notb
jo
test
mov
mov
push
mov
out
mov
movsl
in
or
pop
jnp
loope
push
out
cmpsb
test
xor
movsl
mov
jl
ja
imul
mov
mov
pushl
ljmp
mov
push
in
in
loope
jmp
inc
dec
cltd
cs
hlt
push
arpl
ret
pop
mov
xchg
call
ljmp
mov
sbbl
iret
mov
mov
mov
int3
dec
test
mov
pop
out
dec
push
rorb
movsl
test
mov
imul
je
inc
sti
movsl
adc
xchg
dec
mov
out
movsl
push
dec
add
cmpsb
push
xorl
movsl
and
cmc
enter
fldl
push
stos
lock
shlb
popf
inc
outsb
pop
movsl
sbb
syscall
cmp
sub
fsubl
cmc
negl
iret
xchg
pop
and
push
lock
adc
inc
sub
or
das
movsb
int
xor
gs
movsl
sbb
iret
push
cmpsb
scas
xchg
sti
add
add
pushf
mov
repz
sbb
mov
cli
jp
lods
stos
fdivl
popl
pop
movsl
gs
pushf
pop
xlat
inc
in
pop
push
bound
ret
movsl
jecxz
stos
movsl
xchg
cmp
mov
xchg
loope
mov
leave
pop
dec
rol
mov
push
push
scas
lods
xor
pop
movsl
jbe
cmp
pop
lock
std
xor
push
xlat
cmpsl
fs
int3
stos
sbb
adcl
icebp
movsl
aam
push
movsb
into
mov
movsl
insl
or
call
xchg
push
inc
jmp
out
dec
jle
mov
fwait
and
xor
jae
gs
jp
adcb
sub
hlt
push
lcall
sahf
add
dec
mull
lods
or
inc
push
mov
movsl
mov
xlat
loope
cmpsb
mov
das
cmp
stc
xor
add
stos
movsl
sahf
mov
lods
pushf
divb
imul
adc
pop
je
test
movsl
out
out
in
lret
push
push
mov
dec
cmc
subb
inc
scas
inc
bound
mov
push
sahf
pop
int3
push
sub
add
leave
pop
call
bound
or
push
cwtl
xor
push
and
lods
xor
mov
addl
movsl
push
in
jg
jl
stos
call
and
or
mov
lods
fstpt
sti
call
lock
scas
cmpsb
movsl
add
lret
loopne
movsl
inc
dec
cwtl
cmp
lods
push
movsl
in
xor
outsb
ret
into
mov
stos
sbb
xchg
aaa
test
mov
mov
gs
inc
push
jmp
insb
dec
fldl
sar
movsl
iret
add
mov
movsl
mov
out
jae
mov
jmp
push
xor
lcall
movsl
sahf
and
inc
sbb
sub
movsl
hlt
rcrl
movsl
stos
sub
adc
enter
jecxz
incb
xor
add
xchg
mov
movsl
push
clc
in
inc
mov
pop
jb
aas
xchg
fsubr
mov
jo
lcall
push
mov
xchg
mov
out
and
jge
add
jne
sub
test
adc
mov
or
xor
rorl
xchg
jecxz
fadd
xchg
fiadds
or
pop
mov
pop
dec
push
lds
dec
xor
movb
movsl
lods
add
movsl
sbb
mov
sub
mov
test
data16
lock
movsl
ret
mov
movsl
push
mov
sbb
sbb
add
leave
sub
addr16
cs
daa
sbb
aaa
mov
notl
mov
int
pop
fwait
shld
sub
daa
jmp
call
push
pop
ja
movsl
mov
mov
movsw
lret
into
cli
push
jp
and
loope
inc
xchg
cmp
shll
sbb
mov
lds
fbstp
repnz
mov
lds
imul
incb
and
and
scas
xchg
movsl
push
das
inc
sbb
push
jo
adc
mov
pop
mov
lds
mulb
movsl
push
mov
jbe
movsl
out
cltd
sti
loop
movsl
add
mov
sub
sbb
std
xorl
lret
lds
aam
enter
or
cmp
cltd
mov
adc
stos
imul
mov
inc
movsb
and
sbb
loopne
std
dec
loope
mov
movsl
enter
mov
aaa
mov
fisubl
ds
jmp
push
xor
cld
push
bound
scas
and
mov
push
and
jecxz
movsl
adc
jne
push
test
dec
stos
mov
add
push
test
push
movsl
xor
push
xchg
je
out
movsl
rorb
add
or
shll
divb
mov
xor
out
cmp
mov
mov
jns
sub
pop
mov
movsl
lahf
sbb
dec
stc
repnz
in
mov
xor
mov
or
movsl
cli
or
lods
and
mov
stc
add
scas
iret
mulb
mov
xchg
movsl
xchg
pop
add
jo
sub
lcall
cmp
sti
fsub
mov
push
movsl
ja
push
pop
movsl
out
jmp
testb
sub
lret
insb
addr16
test
lahf
and
clc
push
cmp
imul
hlt
dec
add
test
ljmp
mov
vpaddd
repnz
loopne
in
imul
aaa
sub
imul
sbb
mov
std
dec
movsl
adc
or
cltd
cmp
adc
insb
mov
test
roll
pusha
sub
cmpsl
in
into
jp
rorb
fbld
add
mov
xor
fwait
ljmp
insb
jmp
mov
movsb
es
call
pushf
stos
mov
xor
sahf
jg
mov
pusha
cmpsb
ret
movsl
cli
inc
outsb
fs
xchg
rorb
sbb
adc
xchg
or
mov
je
mov
lds
ret
mov
jecxz
scas
mov
mov
adc
mov
fstpl
push
sub
push
pop
mov
sbb
cld
xchg
popa
and
cltd
push
test
mov
or
mov
pop
mov
nop
mov
cmc
jle
cmpsb
pop
movsl
stos
or
and
div
pop
pop
jp
cwtl
push
mov
xchg
dec
pushf
pop
test
mov
or
xchg
shlb
cmp
mov
adc
sub
movsl
cld
push
inc
jne
xchg
subb
lds
sbb
inc
mov
cmp
movsl
pop
cmpl
sarb
outsb
movsl
cmp
idiv
clc
mov
pop
xor
mov
or
in
and
stc
mov
movsl
sbb
repnz
rorb
mov
rorb
push
cmp
pop
out
hlt
lret
fstpt
sub
push
lds
lock
xlat
jmp
rcl
mov
xchg
clc
mov
mov
sub
int
cld
push
pop
jmp
lcall
xchg
fmulp
pop
cli
ret
lret
sub
js
push
jbe
mov
jecxz
out
or
sbb
inc
paddsb
mov
call
jl
les
lds
stos
cs
mov
aaa
bound
xchg
mov
iret
loopne
pop
jp
rol
icebp
fcoml
sub
inc
daa
dec
and
clc
cwtl
sar
and
add
push
sbb
mov
push
sbb
push
xlat
sub
jg
or
or
sti
fnstcw
push
sbb
mov
cmp
rclb
push
ret
mov
in
aaa
bnd
das
std
hlt
mov
fs
pop
add
out
lea
leave
fsts
pusha
dec
in
xchg
and
fwait
cmpsb
in
ret
dec
in
sbb
jnp
push
icebp
jno
xchg
xlat
lretw
jbe
stos
int
aam
adc
pop
loope
icebp
lcall
out
mov
inc
push
loopne
and
and
push
adc
stc
icebp
add
push
arpl
mov
jo
jge
test
icebp
xchg
sub
sti
jns
dec
and
sbb
ss
xlat
inc
add
cmp
cmpsb
or
popf
neg
cmc
dec
sub
in
mov
shlb
xchg
push
mov
bound
dec
inc
add
lods
add
aad
sub
icebp
out
and
pop
xor
or
push
out
jle
lods
mov
imul
cmpsb
inc
pop
cwtl
outsl
adc
sub
jne
add
sbb
mov
ret
mov
lock
lcall
loopne
cwtl
sub
mov
mov
cmpsb
std
jecxz
jb
dec
push
push
fsub
cmp
mov
push
cmp
sub
push
inc
ror
xor
out
lcall
loop
in
sub
dec
sbb
jns
shl
mov
fnstsw
aam
fcompl
iret
xchg
cmc
pop
cmp
inc
lcall
lret
pop
ss
jno
mov
inc
push
popa
cmp
mov
shlb
lret
and
mov
mov
pop
mov
push
in
je
add
inc
mov
cmc
inc
leave
push
jne
adc
in
add
inc
cld
shl
mov
movsl
jp
pop
adc
pop
sbb
in
push
lds
fnsave
add
cmc
daa
into
push
sbb
push
cmp
pushf
jno
push
adc
pusha
fsubrs
test
in
mov
stos
fnsave
and
pop
daa
push
and
jae
jp
inc
je
xchg
rolb
add
jbe
and
and
cld
out
jl
lds
sub
lret
xchg
push
and
sahf
pusha
ljmp
fistps
mov
mov
sub
mov
add
cld
sub
or
dec
popf
inc
pop
adc
gs
in
iret
ficoml
sti
sub
mov
psubq
mov
push
adc
mov
aaa
push
lret
pop
add
mov
sbb
mov
xchg
loop
loopne
and
inc
xchg
in
pusha
cld
shlb
lret
sbb
icebp
sbb
push
jg
frstor
mov
sti
pop
xor
loope
cmp
sub
sbb
inc
insb
punpckhdq
sti
loope
int
sbb
mov
or
mov
pop
nop
fisttpll
or
rorl
loope
sar
push
sbb
xchg
xchg
pop
test
jbe
std
test
mov
and
jae
push
cmp
adc
dec
lods
or
mov
ret
dec
movsl
push
sbb
mov
push
jecxz
add
out
pop
sub
and
inc
pop
mov
adcl
add
in
mov
cmpb
es
insl
xchg
or
frstor
repz
push
dec
int
mov
push
ss
fisttpll
popf
mov
and
mov
insb
jge
stos
cmc
jecxz
sub
adc
loop
push
mov
cmp
test
lods
ja
push
adc
ss
adc
aad
adc
iret
push
lea
sbb
mov
movsl
sti
clc
lret
cli
add
movsl
popa
fs
and
movsl
mov
push
roll
sbb
stc
scas
mov
lea
mov
repz
test
add
sub
cmp
movsl
fstpt
loop
movsl
out
xor
aam
adc
cmp
aas
test
stos
je
aad
xchg
xchg
push
sub
jbe
inc
addr16
mov
std
xor
adc
mov
cmp
pushl
scas
fwait
movsl
jb
pushf
xor
movsl
ss
sbb
inc
xor
mov
bound
movsl
or
loopne
jnp
inc
sub
xor
scas
int
shlb
xchg
mov
adc
scas
scas
add
decb
pushf
mov
jbe
out
push
movb
lock
or
inc
xchg
or
adcb
scas
mov
sbb
adc
push
or
sti
filds
movsl
add
fimuls
jb
push
mov
jge
jo
imul
test
imul
and
adc
pop
dec
mov
in
xchg
mov
mov
lock
nop
movsl
imul
cs
and
stc
jae
hlt
and
jne
jle
popa
cli
pusha
pop
lds
and
cmp
vzeroall
inc
bound
adcb
mov
and
pop
addr16
in
cmc
and
xchg
shll
jno
sbb
in
inc
push
xchg
pop
fs
mov
mov
rol
jmp
and
ljmp
in
xor
jb
mov
inc
mov
xor
sti
cmp
mov
movsl
mov
mov
movsl
je
and
leave
movsl
mov
les
scas
movsb
add
cmp
push
movsl
fidivs
jmp
jle
frstor
jns
loope
adc
fiadds
jle
cs
pop
int3
scas
or
jge
mov
inc
sbb
mov
lds
xlat
scas
pop
sbb
inc
sbb
pusha
push
sbb
xor
test
stos
mov
fldenv
pop
xor
fadd
jns
into
arpl
popl
pushf
in
daa
mov
mov
mov
movsl
popf
popa
pop
das
dec
dec
lods
sub
movsl
mov
inc
push
inc
xchg
xor
cmc
aas
movsl
stc
sub
mov
movsl
in
test
inc
xor
std
xchg
in
ffree
loopne
inc
pop
mov
ljmp
cld
fistps
cmpsl
jb
dec
jns
or
xor
movsb
in
lock
inc
scas
xchg
loope
mov
test
mov
sbb
shlb
pop
js
aad
movsl
and
jne
pop
pusha
push
mov
mov
leave
sub
addr16
mov
mov
ficomps
sahf
sbb
pop
dec
enter
mov
mov
lea
mov
leave
xchg
pop
pop
mov
mov
jmp
das
xorb
ret
xor
mov
nop
popa
xor
lods
idivb
movsl
xor
js
rep
in
int
mov
sbb
lds
popa
inc
push
dec
xor
vpsrlq
in
push
in
js
out
bound
dec
jp
js
mov
and
pushf
stos
push
mov
jg
mov
sbb
fbstp
in
push
push
lea
xchg
cmp
push
ss
sub
aaa
lcall
movsl
mov
lret
cmp
and
push
mov
sbb
cmp
jbe
lret
je
cmpsb
jno
mov
sbb
xor
adc
rorl
dec
add
dec
in
mov
movsl
icebp
cmp
fwait
cmp
subl
sub
push
push
push
movsl
aas
xor
test
movsl
fs
stos
mov
cmpsb
push
sbb
cltd
lahf
aas
fadd
or
jge
sti
and
subb
mov
sbb
jge
add
clc
cld
dec
lahf
xchg
ds
fnstcw
pop
dec
je
arpl
movsl
push
dec
popf
fwait
stos
sbb
fldenv
pop
mov
mov
nop
inc
push
inc
jecxz
dec
movsl
les
sti
insb
and
stc
push
mov
aad
cs
xor
add
out
fdiv
cltd
mov
ret
rcrl
jo
ss
cmp
imul
or
sbb
enter
lds
mov
push
and
xorb
lret
mov
dec
cld
std
adc
cmp
push
dec
loopne
negb
mov
xor
pop
and
sbb
in
xchg
movsl
jl
mov
push
adc
test
pop
fldcw
in
movsl
lret
adc
inc
mov
and
jnp
lret
push
leave
jle
mov
mov
andb
push
pop
icebp
mov
pusha
in
fldl2e
std
test
mov
mov
les
test
imul
sbb
push
shlb
movsl
xlat
inc
pop
jle
loop
movsl
cmp
xchg
inc
cwtl
pop
push
adc
rorl
mov
movsl
pushaw
jmp
clc
push
dec
outsb
mov
jne
aaa
ret
dec
dec
movsl
mov
or
mov
xchg
cmp
stos
les
movsl
sbb
ret
movsl
mov
pop
sbb
movsb
and
ss
xor
xor
cmc
test
shrb
gs
and
movsl
loop
out
enter
out
int
push
je
movl
mov
sahf
lret
pop
push
inc
xlat
movsl
js
add
roll
clc
jge
dec
inc
mov
xadd
push
xor
mov
sbb
aas
inc
ja
pop
cmp
movsl
sbb
shrl
add
lods
adc
lahf
xor
rol
and
cmpsb
movsb
mov
mov
popf
movsl
cmc
test
aam
insb
pop
inc
movsl
xchg
out
ror
cmp
test
pushf
mov
outsb
adc
mov
inc
mov
mov
pop
fstpl
fiadds
es
arpl
movsl
xchg
ret
int3
mov
sahf
jmp
push
bound
movsl
lods
sbb
adc
jl
movsl
testb
or
pop
or
mov
fiaddl
dec
push
jns
addr16
mov
int
dec
popw
imul
pushf
ficompl
idivb
mov
fucom
clc
xchg
dec
jo
inc
sbb
push
xor
bound
movsl
jb
test
fmul
or
int
lahf
xchg
add
mov
and
inc
pop
sbb
mov
out
sbb
dec
cli
dec
movsl
xor
repz
insl
mov
or
sub
push
mov
cmpsl
popf
imul
aad
inc
jne
mov
leave
in
jg
inc
adc
xlat
xchg
push
es
jl
fsubrp
mov
or
fwait
xchg
mov
sub
leave
movsl
xor
fwait
xchg
sbb
in
add
jl
clc
hlt
push
movsl
xchg
mov
or
movsl
fs
fistpll
roll
jnp
cmpsl
mov
adc
or
pop
dec
xchg
jmp
cli
mov
out
test
mov
aaa
push
add
add
push
sbb
pop
movsl
movsl
dec
xchg
pop
mov
clc
daa
push
ret
cmpsl
ficompl
jmp
leave
pushf
in
ljmp
fld
movsl
xchg
adc
or
lea
add
movsl
adc
push
incb
mov
push
dec
jns
ja
mov
jb
test
jae
sub
pop
push
adc
les
mov
daa
out
lea
shlb
inc
sbb
xor
sbb
movsl
aam
std
and
inc
test
jle
inc
pop
imul
iret
mov
pop
push
movsl
mov
inc
popf
les
mov
xchg
in
xchg
imul
and
inc
adc
ret
xchg
mov
push
pop
std
loope
cwtl
jns
stos
mov
popa
sub
das
xchg
into
int
push
jle
clc
sub
add
lcall
pop
mov
mov
xchg
xor
dec
lds
or
cmpsl
mov
pop
fldenv
enter
and
popa
daa
jp
push
mov
rcrl
xlat
jb
cmpsb
std
pop
sbb
add
ret
andl
fcom
insl
pop
adc
push
sbb
pop
sub
adc
aad
mov
in
shll
xchg
icebp
and
in
add
or
push
xor
lcall
mov
or
xchg
popa
test
mov
lea
es
adc
mov
mov
stos
and
pop
pop
je
cs
jge
mov
in
push
xchg
mov
lods
push
pop
mov
je
mov
fwait
outsb
orl
test
jmp
or
sti
fadd
sahf
int3
sub
inc
pop
fcomps
int
sub
scas
in
jb
fcomp
xchg
mov
mov
into
add
cmc
sti
fisttpll
push
xchg
insb
iret
sub
push
retw
int
cmc
bound
jo
and
in
popf
movsl
js
and
mov
in
jno
mov
adc
or
insb
daa
arpl
push
push
adc
scas
jp
inc
or
push
inc
mov
mov
dec
sub
sbb
hlt
jge
mov
sbb
nop
ljmp
and
fstp
ss
std
mov
les
notb
cmp
add
movsl
inc
mov
mov
push
fnstsw
xor
push
push
xor
sbb
ja
add
repnz
cmc
dec
daa
in
adc
mov
or
pop
push
mov
sbb
rol
sarl
adc
popa
pop
icebp
leave
mov
std
lods
sahf
push
fsubl
mov
gs
les
fcomps
dec
lcall
int
in
out
mov
lods
adc
fisttpll
push
and
popa
xchg
ja
lret
movsb
outsl
lahf
cli
sub
jecxz
pusha
cmp
fmul
sti
sahf
lret
xor
adc
or
xlat
mov
sbb
cmpsl
and
pusha
sub
pop
add
out
cmp
and
pushf
lds
jle
ds
repnz
int3
arpl
das
xchg
mov
and
mov
xor
test
sbb
lcall
push
cmc
aaa
adc
xor
mov
push
outsb
mov
lret
push
jle
scas
jmp
adc
jle
jbe
push
xchg
mov
xlat
xor
add
sbb
add
bound
and
in
leave
xchg
cmpsb
sarl
ljmp
push
sub
int
nop
incl
imul
addr16
xchg
adc
idivb
or
enter
mov
dec
stc
mov
adcb
push
icebp
jae
mov
dec
lret
adc
push
sub
mov
xor
lcall
and
jge
ss
mov
push
sbb
push
mov
sti
pop
imul
add
fiaddl
mov
pop
gs
adc
push
pop
pop
adc
push
xor
lahf
pop
iret
adc
jecxz
cmp
ja
xor
or
cmp
sbb
mov
mov
push
movsl
xchg
push
lods
sub
aas
or
pop
movsl
in
aam
sub
mov
jg
adc
insb
dec
cs
mov
lahf
push
movsl
sbb
or
jnp
dec
pop
inc
push
push
hlt
lds
sbb
cmpsl
add
movsl
insb
and
sbb
xor
out
scas
movsl
push
addr16
js
xchg
jns
push
jmp
movsl
fldenv
adc
push
jge
outsb
arpl
movsl
mov
inc
push
dec
movsl
data16
mov
mov
movsl
arpl
shl
rclb
add
push
jge
mov
sub
push
mov
scas
test
mov
mov
cmpsl
jl
jmp
xchg
ja
addr16
inc
xchg
sub
fisubl
and
cmc
cmc
andb
jmp
cmpsb
rorb
mov
mov
xchg
or
mov
dec
mov
sbb
pusha
xor
cmp
cmp
clc
pop
mov
jmp
or
dec
stos
nop
mov
pop
cltd
cmp
data16
fbld
iret
hlt
jmp
mov
jge
jl
pop
cmp
lcall
das
call
std
clc
inc
sahf
je
pop
jae
inc
stos
test
movsl
inc
sub
xor
lcall
cmc
lock
push
movsl
pop
mov
pop
pop
xlat
xchg
repz
sbb
mov
in
je
imul
xchg
sub
jo
xor
test
xchg
ja
movsl
pushf
lods
mov
cmp
inc
cld
pop
pop
or
mov
mov
sub
mov
ljmp
sarl
movsl
aad
add
in
or
xor
or
daa
lods
dec
jbe
jl
movsl
mov
add
add
pop
sbb
mov
lock
mov
add
sub
ds
inc
negb
insb
data16
out
mov
int
ficoms
shlb
jno
push
subb
movsb
add
andb
movsl
pop
ja,pn
sbb
jecxz
or
aad
mov
dec
mov
inc
mov
aas
mov
adc
test
ss
mov
js
in
frstor
lahf
mov
movsl
mov
lcall
push
stos
popf
movsl
test
sbb
jb
ret
cli
test
lahf
adc
ljmp
or
xchg
test
jp
adc
pop
xor
pop
sbb
xchg
jmp
divl
inc
mov
movsl
repnz
icebp
out
dec
movsl
sti
int3
fs
pop
rep
jmp
push
xchg
out
stc
dec
movsl
add
nop
aaa
lahf
sbb
mov
xor
sbb
imul
fcmovne
mov
fidivrl
lods
bound
mov
jecxz
pop
add
pop
movsl
or
call
bound
jl
dec
inc
mov
dec
mov
and
movsl
out
test
pop
inc
rcll
repz
inc
lods
sub
push
mov
sbb
or
arpl
mov
out
mov
and
into
mov
movsl
dec
jle
push
lea
push
pop
sbbb
push
cwtl
or
out
push
mov
pop
scas
call
int3
mov
popa
pop
pop
cmpsl
sbb
cltd
mov
xchg
cmp
xchg
sub
loopne
movsl
dec
push
outsl
xor
push
cmp
sub
movsl
test
ret
mov
aad
ljmp
xor
mov
or
mov
sub
fimuls
outsl
movsl
adc
dec
adc
ret
adc
loopne
les
inc
xchg
sub
mov
jmp
push
inc
adc
sahf
and
pusha
inc
push
push
movsl
mov
xor
cltd
andb
movsl
xchg
stos
and
movsl
jecxz
call
fisubs
repz
xor
sbb
test
sbb
add
movsl
mov
mov
inc
jne
sub
mov
sbb
movsl
mov
jo
pop
int
xor
mov
out
loopne
jae
push
push
hlt
jnp
mov
adc
inc
movsb
leave
cld
xchg
push
lods
lret
movsl
dec
aaa
sbb
jmp
cmp
sahf
xor
mov
adc
cli
out
movsl
sub
jbe
movl
and
or
mov
movsl
mov
sti
lret
out
aam
mov
mov
lods
ljmp
cmp
fwait
xor
sub
pop
push
test
repz
testb
and
mov
stos
mov
movsl
fsubl
in
sbb
aam
and
fs
es
movsl
in
sub
jmp
mulb
jmp
xbegin
xor
adc
sti
sub
fidivs
push
pop
pop
push
fs
lods
lea
mov
mov
fisttpll
int
dec
stos
js
push
hlt
nop
lods
pushf
subb
cwtl
xchg
popf
ds
mov
xchg
fidivs
sub
imul
dec
movsl
or
shrl
xchg
out
popa
mov
xchg
pop
mov
in
sub
pushf
popf
mov
lods
push
and
inc
stos
scas
cmp
aad
dec
addr16
lods
pcmpgtw
xchg
stos
movsl
mov
mov
popa
movsl
sbb
jl
stos
cmp
adc
mov
mov
orl
popf
sub
sub
and
int3
pop
lret
movsl
lods
fs
xchg
movsl
fwait
xchg
sub
movsl
ds
or
lret
fdiv
insb
sbb
movsl
xchg
or
cmp
loop
inc
dec
popf
dec
lods
movsl
pop
adc
pusha
jmp
ja
sbb
sub
std
enter
cmpsl
movsl
cli
fs
syscall
xlat
movsl
pop
push
jb
and
ret
sbb
pusha
adc
or
mov
sahf
and
xchg
out
loopne
mov
insb
mov
push
in
outsb
cmp
add
lock
test
or
jg
outsb
cmpsl
push
adc
mov
add
cpuid
mov
and
dec
loope
lcall
dec
sbb
imul
mov
and
mov
xchg
stos
test
or
mov
sub
fs
push
push
out
loop
cmp
push
push
fwait
aad
mov
and
lds
movsb
sub
sbb
or
rolb
and
aam
sbbb
stc
pop
popa
enter
mov
sahf
dec
sbbb
mov
push
pop
outsb
mov
and
mov
in
popf
movsl
pop
dec
inc
das
sahf
jne
sub
and
mov
aas
movsl
lods
mov
push
arpl
push
stos
sbb
movsl
xor
sbb
and
xchg
mov
jge
repz
in
roll
inc
mov
inc
add
movsl
test
lds
insl
jns
aad
popa
movsl
insb
sahf
cmp
scas
les
xchg
frndint
mov
js
jnp
push
jg
sbb
test
rcrl
ret
sbb
scas
push
movsl
mov
adc
stc
sbb
arpl
xchg
lret
lds
mov
pop
sub
dec
lcall
pop
and
dec
sbb
cmp
in
or
mov
and
add
icebp
mov
cmp
rorb
pop
pop
addl
sbb
xchg
cmp
hlt
enter
push
hlt
aaa
xchg
or
mov
repz
je
nop
pop
movsb
push
inc
push
cwtl
insl
pop
xchg
jmp
mov
icebp
push
dec
arpl
test
xlat
mov
mov
ljmp
and
js
cmpsb
js
pop
out
or
div
or
das
cmpsl
addr16
mov
pop
cmp
aam
in
addr16
movl
popa
test
in
cmp
pop
call
cmc
stos
mov
cmpsl
rol
dec
mov
or
in
pop
ss
and
fstps
pop
adc
mov
and
pop
mov
pushf
adcb
test
dec
inc
sti
jecxz
add
sti
pop
pop
and
cwtl
inc
inc
jno
mov
push
ficoms
lock
cmpsl
sbb
mulb
adc
and
fs
cmpsl
gs
or
test
sub
push
dec
loop
in
pop
fmuls
clc
xchg
mov
sbb
fldt
or
sub
push
or
push
sub
mulb
push
repnz
popf
pop
mov
aas
sbb
or
in
icebp
data16
popf
loopne
dec
mov
mov
sbb
loope
filds
push
mov
inc
lret
jbe
rol
mov
mov
scas
mov
push
lock
out
insb
stc
test
popf
ror
adc
mov
sbb
pop
dec
loopne
push
mov
in
adc
push
movsl
dec
nop
dec
jle
push
xor
shrb
lcall
pop
push
cld
lods
ljmp
mov
sub
mov
sub
sbb
push
pop
fdivp
cmpsl
cmp
cli
mov
popf
sub
adc
idivb
inc
in
jge
std
jns
adc
hlt
cmc
les
fnstsw
and
mov
pushf
pop
fadds
mov
sarb
call
adc
xor
pop
pop
ds
mov
inc
mov
stos
push
das
mov
mov
jno
lret
int3
out
test
stos
sarl
iret
sbb
movsl
icebp
aam
jge
adc
mov
lock
pop
xchg
mov
lcall
cmpsl
xor
push
pop
xchg
inc
cwtl
lret
xchg
push
lret
lods
movsl
xchg
xor
inc
repz
jb
outsl
jg
xor
inc
mov
lds
dec
leave
movsl
inc
xchg
xchg
jno
mov
mov
gs
sarl
movsl
fs
ljmp
xchg
fwait
andb
cwtl
jg
dec
pop
outsl
jmp
cmp
stos
pop
movsl
out
add
cwtl
dec
jg
insl
mov
adcb
cmp
cmp
add
fneni(8087
in
cltd
daa
nop
lds
add
fbld
hlt
mov
loopne
mov
lods
fwait
dec
popa
imul
cmp
lds
pop
pop
push
lcall
jns
mov
inc
mov
cmp
mov
loop
and
movsl
mov
in
xor
int
mov
and
sbb
in
loop
addb
mov
sahf
fdivs
xchg
movsl
mov
movsl
push
mov
jg
xchg
pop
and
sub
in
or
push
push
pop
or
sub
call
jecxz
shrb
push
gs
jmp
movsl
out
push
adc
xchg
adc
push
movsl
jmp
cltd
push
mov
mov
ret
imul
stos
sbb
mov
mov
inc
into
stos
pop
lods
movsl
jp
cmpsb
neg
movsl
mov
sub
mov
jbe
or
xlat
movsl
add
or
mov
fsubl
outsb
in
mov
push
jp
dec
loop
mov
xchg
mov
adcl
aad
insl
imul
aas
mov
cltd
pushf
jb
sub
or
adc
fldenv
inc
in
shrl
or
lret
adc
nop
xchg
daa
mov
mov
je
movsl
ror
add
mov
fs
inc
in
cld
shrl
lcall
push
xchg
mov
ret
pop
push
sub
inc
movsl
repz
out
movsl
cli
push
or
insb
jne
inc
pop
mov
cs
movsl
loop
xor
aam
xchg
xchg
add
dec
dec
movsl
jb
adc
mov
jecxz
pop
out
movsl
xor
mov
cmp
xchg
adc
fdivrl
mov
movsb
xor
outsl
xchg
mov
ss
movsl
ljmp
aad
sbb
jnp
movsl
jbe
xor
mov
loop
mov
jmp
add
lret
pop
mov
and
in
test
mov
push
fs
movsl
js
roll
stos
jne
sbb
pushf
push
mov
xor
cmpsb
mov
mov
xchg
xchg
and
sysret
movsl
sahf
add
test
int3
jb
leave
jae
shlb
mov
pusha
addr16
addl
mov
jle
enter
movsl
jmp
out
js
push
test
movsl
dec
lahf
scas
xchg
mov
shrl
gs
and
pop
push
jnp
cmc
lds
fs
movsl
xchg
fwait
adc
cmpsb
sbb
or
inc
sahf
sti
add
nop
mov
movsl
add
inc
mov
mov
jno
mov
mov
daa
repz
sbb
pop
fildl
sbb
mov
adc
mov
pushf
mov
scas
push
test
popa
and
in
jno
stos
push
movsl
jl
inc
xor
pop
pop
xchg
in
adc
adc
in
mov
sub
jns
dec
orb
inc
sub
test
outsl
movsl
mov
loopnew
out
cli
cld
dec
push
movsl
inc
outsb
mov
leave
movsl
testb
mov
xor
lods
scas
inc
push
add
mov
fcmovnb
out
sbb
aas
sahf
fsubs
xorl
mov
jbe
pusha
xlat
push
cmc
push
jg
insl
cmp
mov
add
out
jb
push
cmp
xchg
sbb
lods
cli
push
lods
adc
inc
imul
add
jle
ds
jbe
bound
into
movsl
stos
stc
xchg
xor
mov
ds
aad
es
sbb
movsl
leave
cs
stc
movsl
xchg
mov
xor
xchg
cmp
stos
dec
aas
add
daa
mov
fldl
sub
inc
jl
mov
jmp
les
stc
pushf
xor
repnz
jno
xor
adc
xchg
mov
scas
adc
mov
popa
mov
push
or
xchg
mov
pop
mov
aad
mov
push
dec
mov
shld
ret
scas
sbbl
movsl
dec
push
cmpb
movsl
cmp
nop
shll
add
push
iret
aad
std
int3
mov
stos
cmp
ror
add
cmpsb
mov
fidivrs
xor
sub
mov
or
loopne
popf
lods
and
scas
decl
fdivl
ljmp
imul
gs
in
shl
movsl
pop
pop
ret
pop
sahf
xor
jg
push
add
xor
fisubrl
mov
movsb
insb
in
mov
and
sbbl
lods
mov
and
jb
push
push
sub
movsl
jo
or
xchg
mov
test
frstor
in
sbb
js
pop
ret
movsl
pop
dec
sbb
or
jg
movsl
xchg
push
in
xchg
cmpsb
lahf
dec
test
dec
fs
cmp
leave
bnd
ljmp
int
movsl
out
mov
arpl
movsb
jg
stc
aad
fstpl
inc
movsl
sahf
adcb
test
xchg
rcrb
int3
jmp
xchg
movsl
mov
addr16
movsl
jb
test
or
icebp
sbb
mov
lds
test
lea
xchg
xchg
leave
pop
add
outsb
mov
icebp
aam
stc
ret
mov
xor
test
call
lahf
and
out
push
and
xchg
cmp
xchg
jecxz
in
movsl
push
rorl
pop
in
sub
movsb
jne
out
mov
push
pop
jnp
pop
jmp
dec
or
xor
movw
cmp
ret
jge
imul
dec
aad
sarb
std
jmp
xchg
xor
lods
out
or
mulb
xchg
mov
fsub
add
adc
into
sub
jae
cmpsb
mov
add
inc
mov
sub
loope
lock
les
cmp
fcomip
mov
aaa
mov
js
cmp
mov
test
cmc
sahf
aad
fxch
xor
mov
jno
dec
xchg
fldl
in
movsb
xchg
sbb
movsl
popa
sbb
pop
xchg
or
and
repz
and
sub
and
inc
outsb
mull
loope
push
xor
pushf
xchg
mov
mov
test
movsl
out
int
scas
popf
movsl
pushf
lcall
xchg
or
push
fnstcw
mov
adcb
jb
insl
in
xor
jecxz
repnz
addr16
push
movsl
gs
mov
daa
cltd
sub
movsl
fistl
mov
aas
or
out
mov
jle
dec
mov
cmp
inc
movsl
sti
jo
cmp
jl
xchg
jns
vpsubd
pop
xor
cltd
mov
movsl
and
and
jge
aas
mov
cmp
ud1
ss
les
movsl
fcmovu
shl
in
popa
repnz
mov
test
js
decb
sbb
rorl
repz
int
lock
mov
mov
cld
std
xlat
sbb
repz
jmp
rolb
clc
inc
adcb
ss
pop
xor
mov
jmp
pop
test
sbb
insb
sub
mov
in
lahf
sahf
sbb
negl
jb
and
icebp
imulb
cmc
sbb
mov
push
fisttps
movsl
push
sahf
lcall
add
rcll
mov
mov
pop
clc
cmp
xor
ljmp
in
mov
rcrl
mov
clc
xor
mov
dec
lds
pop
cmpsb
shlb
sahf
push
gs
xchg
in
inc
and
sti
fisubl
mov
fnstenv
pop
pop
cmp
push
mov
xor
fldl
inc
movsl
jb
std
ljmp
dec
rcrl
scas
push
lahf
repnz
xchg
pop
mov
mov
rclb
sub
es
mov
dec
andl
fsub
jmp
testb
loopne
scas
sbb
iret
pushf
push
mov
and
push
insb
daa
shlb
mov
and
and
clc
jb
int
popa
mov
dec
enter
mov
fildl
int3
mov
roll
xchg
xchg
lods
mov
cmpsb
cltd
inc
out
cmpsl
lret
nop
mov
mov
inc
mov
es
notl
and
aaa
xor
pop
fidivl
lcall
mov
inc
int
sub
xlat
adc
cmc
imul
rorl
and
sub
rorb
fisttps
aas
and
shll
cmp
out
movsl
fsts
stos
mov
mov
xchg
scas
popf
mov
mov
mov
fs
xchg
js
and
ret
pusha
test
pop
sti
xbegin
push
or
pop
push
add
sbbl
mov
aam
movsl
mov
testb
or
inc
pop
cmp
xchg
or
cmp
and
pop
mov
sbb
jno
push
movsl
push
mov
inc
inc
movsl
mov
call
inc
adc
mov
lea
or
in
test
shl
add
dec
xor
sbb
sub
xorb
cmp
mov
scas
aas
pop
xor
dec
cltd
add
pop
test
push
movsl
repnz
dec
insb
sub
mov
mov
or
xor
sub
or
incb
shlb
repz
ss
adc
cld
dec
or
mov
add
movsl
xchg
in
and
xor
cli
in
out
aas
lock
sub
xchg
mov
mov
pop
movsl
sbb
add
repnz
sub
enter
sbb
inc
data16
mov
leave
xlat
mov
test
ret
in
rcrb
movsl
pop
and
jns
pop
outsl
jmp
imul
add
outsb
addl
jmp
shrl
out
push
xchg
xchg
daa
subb
mov
insb
adc
push
dec
mov
movsl
dec
das
pop
cmp
mov
and
mov
icebp
add
cmc
inc
testb
push
xchg
jmp
push
jo
sbb
movsl
or
xchg
xrelease
ds
jg
clc
jae
inc
movsl
lahf
stc
sbb
loopne
push
mov
inc
scas
jo
movsl
push
sysret
out
adc
stc
inc
lret
mov
mov
sub
movsl
mov
mov
int
jns
in
andb
push
bound
js
shrl
jg
ja
xchg
fbld
sbb
in
mov
jle
and
std
cmc
shr
push
insb
andl
jo
sbb
sbb
int3
or
jp
insl
frstor
dec
xchg
mov
fldl2e
inc
pop
dec
movsl
or
push
add
cwtl
hlt
adcl
repnz
cmp
movsl
cmp
jecxz
ret
dec
sahf
cwtl
dec
cltd
dec
psubusw
movsl
int
inc
inc
and
arpl
push
lcall
adc
mov
lods
mov
stc
mov
pop
add
stos
inc
test
in
rolb
xchg
adc
int
movsl
add
pop
loopne
andb
mov
incb
movsl
xor
pop
and
adc
inc
movsl
mov
jns
push
aam
out
xchg
mul
mov
movsl
xchg
pusha
test
jmp
data16
movsl
insb
jg
in
loopne
sahf
or
and
pop
loope
aam
cmp
rol
jne
or
cs
add
lret
orps
in
xchg
aad
adc
add
movsl
inc
rcrb
fdivrl
aas
add
lcall
jae
push
cwtl
inc
cmc
mov
mov
or
push
inc
in
out
cmc
jp
mov
cmp
loopne
not
movsl
inc
sub
xor
repz
movsl
fisubl
add
xchg
sbb
dec
push
adc
mov
jno
test
and
into
or
popf
shrl
out
xchg
mov
fsincos
push
or
scas
into
movsl
pop
scas
imul
jl
ficoms
js
insl
lods
push
int
loopne
rcrb
adc
or
jecxz
push
loopne
inc
dec
jbe
pop
mov
xchg
cmp
jp
mov
pop
movsl
fcomps
stos
adc
mov
in
js
mov
mov
pop
movsl
sbb
repnz
fldcw
jmp
movsl
cmp
cltd
aad
jno
mov
cs
movsl
or
dec
in
pop
sbb
jne
sbb
push
sahf
or
mov
mov
lds
addr16
ds
andl
add
xlat
in
dec
insl
cmp
sbb
ja
jns
nop
mov
adc
mov
aad
mov
ja
pop
ss
dec
sbb
insl
sbb
rcrb
out
mov
push
out
cmc
inc
push
movsl
inc
mov
out
adc
pop
mov
ffreep
pop
mov
xor
int3
js
mov
cmp
movsl
arpl
je
jmp
pop
cmc
jo
sub
xchg
sub
nop
push
loopne
ja
popa
lretw
sub
scas
test
mov
in
add
pop
pop
pushf
add
jmp
mov
aad
push
int3
lret
mov
sub
cli
movsl
sbb
sub
movsl
sbb
icebp
outsl
addr16
xchg
nop
adc
xchg
cmp
add
xor
lahf
outsb
popf
mov
pusha
mov
dec
mov
sbb
outsb
mov
cmc
sub
in
aad
adc
call
push
and
movsl
add
cmpsl
jne
cwtl
mov
cmpb
cltd
lods
push
in
jne
mov
xchg
call
jae
dec
inc
jcxz
jo
mov
aad
outsb
movsl
mov
inc
cli
push
movsl
out
loope
hlt
mov
add
loopne
lea
popa
mov
imul
fbld
xor
inc
insl
movsl
ret
adc
jp
push
and
pop
divl
sbb
jo
pop
leave
xchg
movsl
dec
outsl
stos
mov
xchg
pop
mov
inc
push
push
sbb
inc
push
test
ljmp
jle
fcoms
movsl
inc
push
jno
or
aad
movsl
les
out
movsl
pushf
popf
sti
cmp
pop
mov
shlb
cltd
sahf
rcr
sbb
les
xchg
adcl
cmc
fstl
fadds
fs
ret
movsl
mov
dec
pop
imul
sbb
call
mov
adc
mov
lds
or
mov
mov
mov
repz
clc
mov
pop
add
mov
inc
pushf
xor
adc
fisubrs
and
mov
fisubs
popa
and
xchg
movsl
test
cmpsl
inc
mov
ljmp
and
js
inc
push
jbe
dec
shll
mov
cmpsl
jg
aad
icebp
mov
divl
into
fiadds
xchg
xor
sbb
je
stos
xor
imul
ffreep
cwtl
mov
mov
cmpsb
push
mov
mov
movsl
aad
mov
stos
movsl
or
gs
mov
pop
mov
les
inc
cmpl
pop
sbb
pushf
ss
add
mov
loop
rcl
movsl
push
test
cmp
push
sti
push
lods
push
and
fbstp
push
enter
out
ss
clc
push
mov
loope
lret
add
ret
imul
sbb
scas
lahf
cld
dec
movsl
dec
lea
jns
data16
push
cltd
mov
repz
inc
lock
inc
sarb
xchg
sub
cmp
mov
ret
stos
out
inc
cmp
movsl
mov
aas
jno
xor
mov
lret
or
popf
cmp
imul
cli
jns
dec
cld
pushf
aad
int3
mov
shl
jg
mov
xchg
movsl
sub
xchg
int
in
loopne
push
ja
sahf
scas
movsl
mov
arpl
test
cmp
dec
jo
push
out
std
movsl
inc
inc
push
pop
xchg
clc
in
mov
push
bound
cmp
mov
test
lods
adc
dec
iret
je
adc
sahf
scas
movsb
inc
movsl
sub
mov
pop
aaa
mov
aad
test
movsl
out
das
mov
adc
mov
push
data16
mov
jb
cld
or
loopne
pop
shll
in
sub
add
pop
aam
movsl
push
movsl
icebp
xchg
iret
push
std
lahf
pop
movsl
jmp
pop
sub
adc
sbb
and
enter
lret
scas
std
xchg
loop
mov
cmp
add
sub
pop
lods
in
dec
enter
pop
fnstsw
dec
cmp
xor
jecxz
and
shlb
mov
and
sbb
dec
lds
lods
rcrb
test
and
jnp
in
ss
sbb
and
aam
cmp
sub
push
loope
mov
mov
cmpsl
shlb
loope
into
mov
mov
and
xor
sbb
push
enter
dec
jp
out
push
xchg
pop
pop
add
lock
ftst
mov
loop
sub
inc
jns
pop
or
and
push
icebp
inc
jns
in
ja
leave
sub
enter
jge
xchg
adc
sar
lock
or
cli
mov
sbb
pop
and
outsl
aam
enter
or
ljmp
or
cltd
push
sti
out
xchg
push
add
jp
arpl
ficoml
es
out
cmp
fcomps
xchg
jns
cli
jne
cld
mov
outsb
shll
icebp
xor
jnp
mov
xchg
cmp
push
aad
fisubrl
cmc
out
ljmp
inc
outsb
jae
add
mov
dec
fcmovnu
int3
mov
subl
fnstsw
mov
fisubs
ret
into
pop
in
clc
adc
jge
stos
pop
add
or
in
pop
lret
ret
sbb
sub
jle
test
test
fnstcw
push
pop
push
jge
and
and
lcall
push
inc
outsb
frstor
sbb
or
pop
cmp
clc
cmp
aas
fmuls
idivb
sub
scas
imul
adc
mov
xchg
mov
sbb
shll
mov
jmp
mov
repnz
mov
das
push
or
std
popa
inc
push
mov
mov
push
add
jl
mov
add
je
xchg
sbb
mov
adc
stc
leave
in
and
pop
clc
sub
mov
mov
or
inc
push
cmp
sahf
jmp
xchg
ljmp
pop
sbb
pop
mov
pop
adc
mov
popl
movsl
sub
mov
xor
fcomps
and
add
mov
adc
shrl
out
negb
stc
movsl
in
call
mov
or
dec
fcmovnbe
adc
rcrb
jl
aaa
mov
lods
mov
movsl
jb
clc
fdivr
jge
adc
addb
std
mov
int
xchg
repnz
mov
mov
out
ljmp
gs
inc
pop
pop
outsb
fldt
cmpsb
mov
movsl
pop
mov
and
outsl
xor
shlb
fdivs
xchg
clc
dec
fs
ret
push
mov
out
movsl
mov
hlt
lods
cld
movsl
in
xlat
dec
mov
sub
test
mov
add
neg
jne
hlt
pop
test
not
shrl
bound
xor
jge
loope
mov
adc
es
out
hlt
push
and
pop
fs
movsl
sub
adc
mov
movsl
push
mov
cltd
popa
add
sahf
movsl
mov
sbb
test
inc
loope
push
cmpl
xchg
movsl
sub
test
push
lahf
filds
or
clc
mov
movsl
test
push
or
mov
enter
rolb
push
mov
adc
je
pop
pop
shr
push
sti
hlt
js
and
cmp
mov
xlat
ljmp
lods
dec
int3
mov
mov
sarl
movsl
jns
in
and
nop
dec
imul
lret
aad
and
jo
dec
mov
mov
in
jmp
rep
mov
mov
add
js
jle
loop
mov
idivl
pusha
movsl
adc
xor
fstl
cmpsb
negb
mov
lcall
stos
push
push
inc
inc
and
mov
dec
sbb
testl
daa
sub
fisttpll
xor
add
xchg
inc
fwait
mov
push
adc
lods
xchg
test
lahf
xchg
sub
in
dec
and
mov
and
cli
lahf
cmp
mov
scas
pop
mov
push
mov
xor
movsl
adc
imul
pop
push
push
icebp
hlt
jnp
xor
push
jo
pusha
jmp
pop
bound
test
mov
add
add
ljmp
mov
mov
mov
sub
pop
mov
movsl
jne
rol
sub
fnsave
jl
in
into
xchg
sbb
push
sbb
popf
dec
jbe
andl
leave
test
cmpsb
loopne
fiaddl
jnp
push
adc
pop
push
pop
loope
cmp
loopne
popa
sbb
mov
idivb
movsl
arpl
movsl
sub
and
xchg
je
xor
fwait
sbb
cmp
mov
jb
lds
shrb
movsl
enter
mov
jp
mov
pop
in
push
cmpsb
mov
lods
addb
push
push
ss
mov
arpl
adcb
or
lds
xchg
inc
lds
js
aad
lret
std
lret
pop
int
notl
adc
mov
movsl
nop
fnsave
jge
jno
and
es
sbb
outsb
lods
dec
cmp
nop
movsl
pop
out
add
push
cltd
jge
mov
pop
dec
xor
xchg
cmpsl
imul
popf
dec
rcl
inc
in
out
sahf
push
flds
mov
pop
add
adc
test
iret
jle
dec
jns
pop
and
in
popa
mov
and
movsl
xor
mov
cli
movsl
mov
popf
ret
sti
enter
bound
mov
scas
clc
add
sbb
gs
scas
test
mov
ret
inc
adc
into
loope
pushf
pop
loop
or
mov
xor
mov
in
sub
test
pop
add
rcr
add
in
mov
xor
mov
cmc
fstps
pop
repz
add
es
lods
sbb
or
jns
xor
ds
fsubs
or
int3
push
add
addr16
ror
lods
dec
movsl
pusha
ja
push
mov
in
and
mov
xor
scas
mov
sub
mov
in
fidivrs
jnp
in
data16
in
cwtl
mov
mov
shll
mov
cmp
mov
cltd
ss
imul
je
dec
enter
xchg
mov
sub
std
add
incb
sbb
push
sbb
mov
sub
in
rcll
adc
push
inc
data16
movsl
mov
shr
push
in
movsl
aad
push
mov
mov
xchg
ljmp
imulb
sub
lcall
movsl
cmpsl
pop
xor
dec
pop
fidivl
push
ret
insb
das
movsl
jae
add
xchg
cmpl
sub
push
jecxz
cmpsb
sbb
xor
frstpm(287
insb
imul
or
pushf
test
mov
aaa
xor
aad
pop
cmpsl
aad
and
mov
cmp
pop
fdivl
cwtl
popf
mov
stos
jmp
sbb
loopne
sub
cmp
push
mov
test
and
mov
popa
or
push
lcall
pop
bound
push
dec
data16
xor
xchg
ss
push
sub
and
jl
sahf
sti
outsb
arpl
jmp
rorb
xor
xchg
test
jg
cmpsl
dec
mov
cmp
adc
or
mov
fld
xor
adc
shlb
aas
mulb
and
pop
cmpsl
adc
movsl
inc
iret
fwait
cwtl
jae
or
and
dec
lock
cmc
call
dec
jp
out
and
sub
mov
mov
popf
xor
in
lds
dec
clc
sub
xchg
xchg
mov
aas
shrb
or
dec
push
insl
std
fsub
movsl
xor
iret
push
mov
add
int3
movsl
push
add
in
and
addr16
xchg
stos
and
fmull
mov
inc
sbb
and
ret
jo
fxch
aad
mov
cmpl
test
test
movsl
xchg
inc
add
pop
movsl
mov
js
xor
mov
int
movsl
push
mov
pop
cmpsb
jle
movsb
scas
stc
movsl
sub
xchg
inc
xor
inc
js
jge
pushf
mov
mov
movsl
mov
fsubrl
imul
fldcw
mov
pop
andb
sbb
push
xchg
cld
loope
jmp
push
mov
test
jns
enter
movsl
fldenv
push
out
xorl
es
mov
sbb
stc
leave
dec
movsl
xlat
push
divl
pop
jle
sti
cli
push
test
xchg
mov
imul
movsl
cmpsl
jno
jmp
dec
dec
popf
dec
fbstp
adc
and
mov
rcl
iret
imul
mov
and
lea
push
xlat
cmp
andb
push
mov
mov
lods
dec
push
and
movsl
xor
leave
mov
es
sbb
into
mov
imul
mov
cmp
aas
xchg
mov
add
maskmovq
idivl
mov
in
loop
jo
movsl
adc
mov
mov
movsl
rcr
cmp
loopne
mov
inc
rep
push
mov
xchg
jmp
sub
adc
xor
xor
pop
cmpsb
test
lcall
cmp
and
test
add
sub
mov
cmpsb
in
sti
subb
mov
mov
ret
frstor
xchg
add
lret
test
jno
popa
jbe
adcb
jl
xchg
mov
adc
repnz
mov
lret
icebp
dec
add
push
xor
push
popl
fldl
xchg
sub
loopne
pop
mov
add
push
sbb
lret
sub
or
inc
scas
clc
loope
xchg
sbb
enter
push
or
inc
or
inc
jge
sub
jp
and
ficompl
lret
ss
aaa
mov
add
sahf
pop
inc
je
push
rcl
and
hlt
inc
cmovne
add
idivb
adc
test
data16
popf
fnstenv
mov
in
and
icebp
dec
cmp
mov
bound
ret
imul
movsl
push
jbe
pop
adc
sub
pop
stos
popa
and
data16
inc
mov
pop
popa
mov
jno
call
push
fs
dec
dec
bound
icebp
fcmovne
sub
adc
mov
and
mov
rorl
in
mov
in
mov
pop
lock
mov
inc
mov
mov
sbb
push
hlt
push
insl
sbb
cmpl
enter
movsb
rcr
test
ljmp
jne
cmp
lcall
xor
mov
xor
xor
sbb
jae
and
jl
pop
inc
gs
incl
lock
inc
push
pop
xchg
sub
push
cmp
sar
jmp
nop
lock
loop
push
pop
and
dec
stos
pop
daa
pusha
and
push
leave
stos
pusha
mov
pushf
sbb
adc
xor
movsl
or
dec
dec
or
cmpsl
push
inc
pop
shlb
sbb
xlat
sbb
shld
sbb
fmuls
jl
mov
push
repz
arpl
cmp
sub
icebp
jecxz
xor
mov
mov
ds
xor
movsb
mov
cmc
push
add
pop
sub
mov
push
pop
fnstsw
in
push
sbb
sahf
jl
push
sub
push
jmp
push
in
cltd
test
out
add
popa
push
or
adc
shlb
jmp
sbb
inc
lods
mov
inc
shld
dec
jge
mov
js
pop
sbbl
lock
lahf
ror
inc
push
lods
xchg
xor
push
aad
js
jo
sbb
xchg
push
in
arpl
leave
mov
lock
or
popf
ljmp
adc
pop
inc
sub
jge
push
sub
mov
xchg
or
sub
popf
dec
lea
jmp
sub
jl
ret
mov
arpl
inc
mov
jle
sub
js
rclb
cs
push
mov
push
jecxz
or
jns
fdivs
daa
popf
mov
sahf
icebp
and
aad
jbe
mov
lret
or
leave
mov
cmpsl
cwtl
jge
ja
icebp
out
xor
adc
push
pop
push
lret
insb
xchg
dec
sub
push
xchg
sub
and
sub
loope
mov
push
sub
jecxz
in
adc
jecxz
js
cmpsl
mov
adc
dec
mov
cs
mov
sahf
xchg
int
or
shll
pop
sbb
push
cli
testb
aaa
inc
push
push
in
ret
outsb
and
mov
sbb
jbe
cmp
std
dec
fists
add
dec
jbe,pn
xchg
jecxz
push
jl
insl
inc
sub
lcall
add
jae
es
xchg
mov
out
movsl
scas
sub
ljmp
sbb
mov
movsl
inc
xor
push
fldl
leave
jb
std
cmp
ret
or
sub
je
mov
sub
cli
pop
aas
push
repnz
out
les
xchg
cmp
and
movsl
imulb
movsl
fnstsw
jo
mov
xchg
cli
std
xlat
aad
call
shll
lret
jle
popl
cmp
jge
xor
xorl
movsl
cmpb
movsl
sbb
leave
xor
jmp
push
jns
out
std
sbb
or
and
je
frstor
fwait
stc
xor
sbb
iret
inc
jp
movsl
push
jno
bts
lahf
nop
cs
push
push
ja
sbb
mov
mov
addw
pop
or
js
popa
dec
jo
dec
add
sub
xchg
movsl
repnz
mov
gs
out
repz
shrb
dec
fs
xor
daa
in
je
push
sbb
leave
pop
jg
sub
xor
scas
outsb
mov
sbbb
outsb
int
jo
dec
outsl
movsl
andb
test
mov
orl
test
jnp
mov
fistpll
leave
fbld
pop
mov
out
movsl
sbb
mov
mov
cmp
div
mov
movsl
daa
xlat
insl
add
icebp
sti
add
and
lret
sbbb
dec
rolb
sub
loopne
lds
aam
pusha
mov
lret
xchg
popf
add
cmc
xor
pop
sbb
mov
mov
mov
add
cld
negl
je
ds
mov
jno
push
subb
pop
movsl
cli
popa
push
inc
sti
or
lcall
mov
movsl
adc
clc
xor
sub
jle
out
cmc
ficoms
sbbl
push
clc
and
and
mov
test
or
and
add
std
mov
movsl
lods
scas
add
and
jl
push
lock
sbb
xlat
movsl
push
testb
sbb
fcoml
add
movsl
fistpl
and
mov
lea
lods
int3
jmp
add
sbb
sbbl
cmp
lret
adc
sbb
jg
mov
jecxz
xchg
sub
cmc
scas
mov
fsubl
and
mov
cwtl
ja
xor
cs
movsl
popa
jl
push
adc
xchg
xchg
mov
jbe
mov
popf
cmp
push
fsub
xchg
out
sub
dec
xchg
fsubrs
out
mov
and
xchg
out
and
jecxz
sbb
fsqrt
arpl
movsl
pop
mov
int3
lret
sahf
xor
stos
aad
insb
inc
push
sbb
jge
popf
pushf
aas
inc
lds
pop
or
mov
dec
in
sub
popf
and
movsb
stos
ret
mov
jnp
sahf
mov
add
xor
push
cmc
sub
cmpsl
loope
pop
jbe
andl
scas
and
fwait
and
loopne
mul
xor
rclb
jmp
mov
push
adc
repnz
std
addb
fs
mov
cld
lea
sbb
jge
adc
pop
jne
mov
jae
push
inc
mov
sbb
lods
xchg
pop
xor
xor
sahf
call
inc
je
mov
ret
rcrb
mov
and
add
sbb
mov
and
iret
movsl
inc
jmp
mov
movsl
push
jge
fisubs
ret
movsl
push
inc
push
movsl
pop
mov
xchg
mov
aaa
sub
es
movsl
fcmovne
inc
or
cld
loop
sub
mov
icebp
enter
js
lahf
sub
movsl
mov
inc
mulb
xchg
inc
lea
outsb
pop
ds
in
adc
mov
add
enter
loope
lock
jne
sbb
add
xorl
mov
adc
imul
mov
jmp
xlat
sub
jp
and
add
cli
fmulp
jmp
shll
inc
fwait
test
adc
dec
adc
mov
adc
mov
daa
inc
icebp
jge
or
adc
xorl
cwtl
mov
in
mov
mov
insl
mov
movsb
std
and
inc
in
cmp
and
cmp
xchg
ds
movsl
add
aas
mov
pop
mov
testb
dec
loopne
movsl
nop
in
or
pop
popa
ljmp
jge
mov
xorl
in
lahf
std
cmc
mov
inc
xchg
mov
lret
sub
movsl
jmp
leave
test
in
andl
fnstsw
stc
ljmp
sbb
movsl
xchg
repz
arpl
loopne
sahf
sbb
mov
insb
andl
movsl
jb
fwait
adc
pop
jp
push
imul
repz
out
mov
cwtl
mov
mov
fisubrl
fdivrs
addr16
dec
jns
mov
xor
sahf
leave
in
bswap
aad
dec
popf
jbe
movsl
cwtl
dec
inc
and
lcall
repz
pop
test
movsl
xor
mov
mov
ds
arpl
loopne
mov
cmp
mov
lret
icebp
push
xlat
push
push
cli
mov
and
insl
test
mov
out
add
pop
test
dec
cltd
push
xchg
push
push
adc
das
sbb
dec
adc
pop
push
loope
aaa
test
test
mov
scas
loopne
pop
push
xor
push
pop
loopne
movsl
icebp
fisttpll
movsl
outsb
int
mov
hlt
or
cmp
mov
adc
sahf
addps
mov
insl
mov
cmc
jae
dec
push
ror
out
loop
xchg
sbb
lahf
into
cmpsl
push
or
movsl
jbe
incb
push
cmc
cli
xor
stc
cmc
jl
test
sar
push
data16
lcall
xchg
sub
lods
mov
sub
mov
mov
mov
mov
movsl
in
fdivr
fldenv
scas
popf
sbb
and
cmp
std
mov
pop
sub
jb
frstor
xchg
scas
es
out
movb
sti
mov
in
push
into
stos
rcrb
ss
cwtl
or
mov
adc
adc
fdivr
int
dec
lods
push
mov
jae
mov
int3
aad
adc
mul
sbb
ds
sub
or
push
mov
xchg
push
fnstenv
outsl
inc
sti
pusha
adc
pusha
and
fwait
movsl
loopne
cmc
out
cmpsl
mov
testl
cltd
mov
flds
ficomps
arpl
movsl
je
mov
movsl
xor
je
pop
sbb
mov
jbe
xchg
adc
nop
movsl
pop
add
int3
xchg
loopne
movsl
jmp
repnz
xor
sub
sub
adc
inc
imul
adc
pop
movsl
push
in
mov
movsl
mov
shlb
dec
cmp
stos
mov
shr
imul
movsl
loop
fstp
xchg
mov
sub
movsb
mov
mov
add
xor
imul
out
push
int
repnz
clc
or
insb
imul
cmp
sbb
lret
mov
mov
sub
movsl
je
es
mov
adc
fsubl
pop
adc
push
movsl
lds
nop
sub
push
or
dec
movsl
push
shll
cmp
out
pop
jo
ja
ss
dec
mov
push
jle
ljmp
xor
arpl
jb
mov
and
in
ja
cmp
or
ljmp
sahf
xchg
int3
pusha
push
gs
imul
mov
pusha
movsl
inc
adc
and
out
sbb
xlat
mov
push
sub
push
shlb
movsl
imul
and
or
mov
sub
movsl
es
enter
fistps
data16
rolb
jbe
sub
test
lds
icebp
insl
add
dec
pushf
movsl
cmp
movsl
push
jbe
inc
cltd
inc
jg
mov
cmp
movsl
pop
pop
outsl
xchg
adc
mov
jmp
idiv
xlat
lock
les
pusha
sahf
movsl
outsb
pop
and
lock
inc
call
jns
loop
test
cmp
aad
inc
lea
jge
and
pop
mov
and
movsl
mov
loope
imul
mov
cwtl
fwait
xor
movsl
or
inc
loope
lock
dec
inc
jle
movsb
popf
mov
stos
and
adc
pop
lea
sub
lahf
movsl
dec
fildll
sahf
xor
xor
jg
lret
and
pushf
aas
mov
pop
push
imul
add
push
movsl
dec
adc
sub
sahf
cli
mov
ret
sti
dec
cmpsb
movsl
cmp
mov
movsl
sub
mov
adc
sub
sbb
sub
pop
insb
xlat
call
movsl
nop
or
jnp
movsl
push
fsubrl
pop
mov
stos
mov
dec
inc
cmpsl
mov
push
out
jmp
movsl
frstor
pop
adc
mov
movl
cmp
cmp
mov
cmp
sub
xchg
out
call
and
frstor
fnstcw
sbb
stos
cmpsl
das
jmp
mov
and
sbb
scas
inc
ja
pop
sub
aad
xor
xchg
mov
jp
ja
outsl
lods
push
adc
movsl
mov
aaa
negl
jmp
mov
lods
fsts
test
neg
fwait
ret
cltd
sub
icebp
in
test
shr
jns
mov
xchg
es
in
mov
or
adc
movsl
daa
out
test
mov
or
sbb
mov
cwtl
push
mov
sbb
mov
pop
cld
sub
add
lock
icebp
in
and
xor
in
int3
sbb
cltd
mov
sahf
fwait
xchg
fisubs
mov
std
ret
movaps
movsl
adcb
movsl
xor
jne
test
jge
fstps
jecxz
sub
je
mov
push
xor
cwtl
lds
sub
jmp
mov
dec
mov
mov
or
lods
leave
ja
icebp
xor
fcoms
movsl
mov
das
jle
adc
adc
fstp
or
xlat
stc
pop
fidivl
popa
rclb
inc
movsl
cmp
les
or
movsl
es
aas
fsub
pop
movsl
shl
pop
lock
add
or
mov
stos
mov
push
mov
in
shll
or
push
cmp
in
shl
push
mov
loopne
movl
pop
mov
pop
jle
sti
mov
jne
mov
mov
xchg
mov
lds
mov
and
inc
ror
popa
cmpsl
xchg
push
imul
adc
sbb
les
fmuls
cs
popf
loope
mov
xchg
test
or
std
fldt
lock
jno
shl
fwait
xor
and
push
push
fidivl
sub
sub
cmp
add
ror
dec
inc
mov
mov
xchg
int
stc
xor
and
lock
cmpsb
push
adc
scas
outsb
jg
mov
pushf
push
dec
in
movsl
popf
or
ss
dec
jae
push
lret
dec
sbb
xchg
sub
mov
cmc
mov
rol
pop
xor
lods
popl
movsl
sahf
cmp
cmpsb
add
aas
sets
dec
scas
jge
dec
xchg
cmp
and
xchg
push
enter
lret
cs
xchg
movsl
sysexit
dec
fidivl
shrl
movsl
outsb
add
cmp
loopne
das
mov
fcomip
call
mov
imul
les
dec
xchg
fmull
mov
mov
push
out
mov
hlt
movsl
fmull
mov
sbb
sub
mov
jnp
mul
sahf
movsl
push
jmp
testl
mov
rcl
dec
xchg
mov
sbb
push
jns
mov
sbbb
jle
in
pushf
stos
mov
icebp
mov
movsl
jg
lret
es
aaa
movsl
pop
stos
mov
test
sbb
jno
mov
mov
into
mov
lods
mov
push
push
sbb
cld
sti
fs
cs
es
mov
mov
cli
andb
hlt
jp
mov
xor
in
movsl
jbe
orl
movsl
and
mov
mov
pop
jmp
mov
movsl
test
std
shll
je
repz
or
mov
ds
int3
in
repnz
and
or
lds
sbb
movsl
jecxz
stos
sbb
xlat
lret
incb
lahf
jbe
dec
fdivr
add
dec
testl
xchg
jbe
jo
mov
push
push
in
pop
idivb
movsl
and
inc
mov
movsl
ret
sbb
jecxz
mov
out
cli
push
push
pop
or
insb
movsl
xchg
clc
sbb
push
sbb
add
movsl
sbb
mov
test
push
push
mov
call
nop
movsl
cld
mov
and
inc
js
hlt
cmc
enter
std
pop
movsl
fucomip
test
sub
inc
insl
lods
add
out
loop
cwtl
mov
in
mov
je
stos
movsl
es
bndstx
mov
mov
inc
sbb
jmp
mov
movsl
in
filds
movsl
pop
cmovg
xchg
inc
movsl
jbe
pop
jp
aaa
sahf
das
notl
add
into
lods
adc
mov
pushf
cmc
and
xchg
les
jnp
and
js
out
dec
and
xchg
aas
xor
repz
cmc
ss
cmp
in
iret
xchg
bound
in
lods
mov
xchg
push
add
jle
in
sub
dec
lds
shl
or
dec
add
dec
jae
adcl
pop
xor
xchg
aad
sbb
jmp
enter
clc
inc
movsl
push
mov
xor
pop
and
outsl
pusha
jmp
aas
pop
xchg
pushf
inc
out
loop
in
cmpb
inc
mov
shll
mov
loope
sub
pop
xchg
and
mov
out
aad
xchg
sub
xor
loopne
js
jb
sub
xchg
inc
push
mov
shll
movsb
mov
inc
movsl
data16
lods
adc
aad
jp
or
out
enter
inc
sahf
test
ss
movups
ret
pop
movsl
je
inc
xchg
mov
or
lods
movsl
or
pop
mov
xor
mov
xchg
addr16
movsl
jl
or
and
mov
out
outsb
xor
push
or
cwtl
sub
push
jecxz
sbb
mov
int
push
adc
pusha
mov
xor
or
jae
popa
push
sbb
scas
adc
push
ret
mov
or
or
mov
jmp
mov
add
std
cmc
sbb
sbb
push
xchg
sub
or
push
arpl
xchg
sub
shlb
popa
fwait
xchg
std
shll
out
in
inc
jecxz
inc
jle
loopne
xchg
ljmp
xchg
fists
jl
sub
rcll
adc
pop
pop
movsb
andb
sbb
xlat
frstor
jne
inc
ljmp
mov
fsubrs
movsb
xchg
mov
mov
je
mul
jge
rcrb
jns
pop
sbb
jl
jno
mov
leave
push
lds
popf
mov
xchg
and
std
and
cmp
fnstenv
sahf
popf
pop
rcll
outsb
icebp
roll
movsl
inc
addb
push
mov
xchg
movsl
in
rcll
in
mov
or
add
mov
std
push
les
loopnew
or
jecxz
push
adcb
add
cmp
jp
movsl
ficomps
add
or
aam
shll
movsl
mov
push
orb
daa
xchg
inc
add
push
xor
xchg
adc
faddl
mov
cwtl
outsb
sahf
into
in
mov
repz
pop
xchg
xchg
xchg
test
add
dec
mov
movsl
mov
int3
inc
jns
movsl
out
cmp
inc
mov
sbb
int
and
mov
adc
rolb
add
movsl
xchg
sub
dec
cwtl
movsl
mov
arpl
movsl
clc
cmp
jecxz
push
in
movsb
push
movsl
nop
sub
pop
xchg
jmp
or
movsl
adc
and
mov
insl
and
jb
pop
dec
add
stc
pop
cmpsb
push
adc
or
jmp
out
test
xor
sahf
pop
vphaddubd
add
pusha
lds
xor
out
inc
xchg
cmp
lock
inc
mov
or
ljmp
jl
xchg
push
pop
mov
cmp
test
outsl
sub
mov
aaa
jb
pop
ss
cmp
xor
mov
icebp
divl
mov
dec
repz
bound
es
xchg
aaa
mov
jo
mov
movsb
cmc
xchg
movsl
out
push
pop
jge
xlat
test
aaa
sahf
cmp
or
cmpsb
dec
pop
pop
shlb
and
pop
rol
movsl
lods
int
add
mov
sub
fcmove
out
mov
xchg
xor
inc
mov
cwtl
inc
xor
insl
les
and
cmp
push
mov
ror
mov
movsl
adc
or
mov
cli
push
mov
sbb
mov
pop
pushf
sub
dec
push
imul
cmp
les
add
pop
out
int
out
jp
or
fisubs
inc
dec
js
jnp
movsl
mov
mov
xor
xchg
adc
cmp
xor
lods
mov
fs
imull
roll
mov
add
repz
adc
lds
js
push
push
push
sub
mov
mov
popf
jo
movsl
mov
rcll
movsl
inc
xchg
lea
and
cmp
pop
leave
mov
pop
push
add
movsl
inc
insb
jge
int
sbb
pushf
lcall
sahf
xor
push
cmp
sub
xchg
aaa
pusha
dec
mov
fs
movsl
add
movsb
sti
mov
sahf
cmpsl
xchg
inc
pop
mov
pushf
mov
test
add
testb
adc
test
movsl
mov
xchg
fld
stos
sbb
ds
sbbl
mov
mov
loopne
movsl
jae
sbb
jo
lcall
inc
cmp
or
movsl
aad
add
out
inc
imul
movsl
int3
shll
adc
mov
xchg
cmp
pop
insb
and
mov
movsl
dec
inc
sarl
jne
dec
movsl
jle
jno
lahf
pushw
sti
mov
xchg
in
roll
lcall
xor
das
popa
mov
xor
pop
lds
gs
cld
cli
les
nop
sbb
pop
xchg
sub
cltd
movsb
push
xchg
adc
pop
jns
out
push
movsl
lea
stos
mov
leave
lcall
sahf
nop
addr16
pop
push
cmp
outsb
sbb
rolb
les
fnsave
dec
jno
test
push
aad
xlat
lret
mov
das
arpl
adc
aas
pop
test
mov
adc
xchg
xor
mov
outsl
cmpsl
ret
imul
push
sub
sbb
pushf
jecxz
jne
movsl
add
and
sub
out
out
jge
xor
push
int
mov
cmpsl
lods
dec
jo
bound
cmpsb
or
adc
and
lcall
stc
mov
bound
mov
clc
mov
dec
repnz
add
xchg
ret
push
jl
inc
pop
jle
push
add
pop
or
movsl
pop
sahf
xor
in
movsl
xchg
out
mov
stc
in
out
in
ffree
pop
lcall
push
sub
dec
mov
jl
sbb
mov
fdivl
test
clc
mov
sub
xor
adc
pop
sbb
and
pop
lock
fnstenv
cmp
xor
out
shll
jp
popa
mov
sbbl
xor
mov
ffree
aas
movsl
and
mov
insl
xor
add
sarl
cli
sbb
push
pop
ljmp
jne
jno
movsl
test
and
mov
or
mov
jns
xor
popa
shlb
pop
scas
or
ljmp
pop
aad
dec
sub
mov
cmp
add
cmpsb
mov
arpl
dec
movsl
out
add
add
mov
xchg
xor
shll
mov
lcall
dec
rclb
ja
roll
imul
shl
pop
lds
flds
sahf
scas
fdiv
dec
mov
push
int
cmp
popa
push
inc
out
divb
repnz
mov
or
lea
push
mov
hlt
fistpl
aam
mov
mov
pop
mov
pop
and
fdiv
and
xor
movsl
lock
lea
imul
movsl
xchg
mov
push
push
push
dec
sahf
jne
and
insl
movsl
mov
test
xchg
es
xor
and
test
mov
cmpsb
movsl
add
leave
xor
movsl
mov
jb
movsl
outsb
xchg
in
nop
pop
stos
mov
push
rolb
movsl
xchg
ficomps
movsl
xor
mov
inc
xor
jmp
loop
add
push
and
cmpl
gs
fistpll
pop
mov
fsts
fwait
popa
mov
scas
inc
dec
ret
daa
movsl
mov
pop
insb
mov
sarb
mov
mov
sarb
pop
fwait
pushf
push
test
cmp
pop
xchg
and
lods
jnp
cmpb
sbb
or
mov
jmp
pop
ret
iret
push
leave
add
pop
bound
cmpsl
movsl
cwtl
mov
orb
lahf
shlb
loope
popf
mov
icebp
xchg
sub
xor
jne
movsl
push
xchg
dec
cmp
push
icebp
lret
in
cltd
dec
xchg
cmp
out
xor
cwtl
lods
repz
rcrb
std
movsl
ljmp
xor
cld
jecxz
cmp
jecxz
cmpb
div
pop
enter
xchg
lods
xor
dec
out
sbb
movsl
mov
ljmp
jmp
pusha
gs
lcall
cmp
pop
fnsave
jne
inc
mov
js
push
xlat
mov
adc
xchg
shll
xchg
cmpsb
les
repnz
pop
out
cmp
xchg
push
lds
aas
fstpt
movsl
xor
imul
cltd
inc
aaa
pop
shrb
jae
hlt
cmp
xor
movsb
mov
mov
dec
mov
movsl
cmp
pop
lret
pop
adc
sbb
mov
push
movsb
movsl
stos
jnp
adc
sarl
iret
xchg
icebp
xchg
mov
enter
hlt
jmp
mov
lcall
adc
stos
into
sbb
or
mov
in
xchg
mov
xchg
cmp
repnz
xor
mov
mov
lcall
inc
lds
inc
pop
jne
mov
sub
in
mov
movsl
jl
pop
data16
iret
push
xchg
dec
pusha
jnp
roll
or
pop
lods
xchg
movsl
sub
xchg
popl
adc
adcl
movsb
push
and
pop
mov
cmc
shlb
fcomps
in
stos
scas
sbb
cwtl
push
jns
es
lcall
jbe
rcl
jecxz
sti
sub
add
push
mov
jg
cmp
push
push
je
lret
cmp
xchg
sti
xor
pushf
stos
out
dec
dec
jns
pop
loopne
xor
les
daa
fcoml
sub
lds
mov
out
cld
and
push
mov
mov
push
lds
fisubrl
and
sbb
sbb
push
das
lahf
sbb
jmp
fwait
add
xchg
loopne
and
mov
or
jge
in
cmp
lods
xchg
movsb
andb
jg
scas
shl
mov
in
incl
adc
and
fidivrl
or
mov
pop
push
xchg
mov
jno,pn
push
fisubrl
lds
lahf
test
leave
test
dec
sub
jo
movsl
mov
sub
xor
cmc
sub
add
arpl
inc
fwait
or
sub
daa
ss
sub
ljmp
pop
sbb
sbb
in
sahf
fdiv
mov
fwait
les
aaa
push
test
xor
and
clc
sub
icebp
incb
push
dec
test
mov
push
mov
xor
push
pop
shlb
fdivrl
push
in
sub
repnz
in
dec
xchg
mov
and
sti
mov
out
and
mov
dec
into
xor
ret
jl
in
repz
mov
jmp
popf
je
call
in
fdivs
xchg
ficomps
in
rcrb
test
cmp
aaa
aas
das
test
rorl
arpl
clc
push
shlb
pop
add
test
test
mov
es
aaa
nop
popf
stos
dec
sub
loop
xor
lret
movsl
sbb
jp
adc
and
aam
frstor
mov
ss
lahf
inc
stos
push
addr16
adc
shll
xchg
loop
imul
leave
lock
mov
sahf
pop
movsl
pop
dec
neg
insb
cmp
and
jge
dec
and
xchg
mov
mov
daa
out
sub
aad
mov
test
xor
mov
fdivrs
lcallw
mov
fldenv
dec
or
movsl
js
and
shlb
pop
jp
movsl
mulb
int
in
loope
movsl
test
mov
cwtl
aam
test
sub
movsl
adc
scas
mov
das
ret
lock
ds
insl
movsb
lahf
cmp
sahf
movsl
adc
xchg
mov
xchg
gs
test
mov
mov
sti
cmpsb
or
pop
movsl
jb
fsubr
iret
rorb
test
or
dec
loope
movsl
fwait
mov
sub
bound
cmp
pop
testb
shll
mov
inc
lds
push
lret
in
bound
cwtl
inc
push
and
cli
mov
pop
dec
test
mov
call
xchg
testb
leave
lret
movsl
in
sti
fidivs
iret
mov
mov
out
mov
jl
aam
push
stos
adc
jbe
movsl
inc
addr16
xchg
loope
mov
in
add
xchg
mov
add
div
add
fnsave
pop
jae
int
xchg
or
lods
loopne
popa
fiaddl
push
repnz
in
xor
or
arpl
dec
push
mov
pop
shr
lcall
add
ljmp
cmp
insb
xor
loope
movsl
addr16
test
lock
mov
dec
mov
es
sti
cmc
popa
push
pop
mov
pop
xor
repz
push
aam
insl
and
dec
aad
sbb
stmxcsr
test
pop
mov
mov
jecxz
mov
pop
movsl
addr16
jge
out
dec
movsl
sti
add
test
mov
sbb
xchg
inc
movsl
test
enter
fsubl
mov
mov
push
cmp
addr16
mov
int3
fstl
call
lcall
lock
shll
sbb
and
sahf
adc
fidivs
xchg
adc
arpl
ficompl
movsl
es
xchg
push
popa
fidivrs
and
or
movsb
xchg
out
jnp
jae
fstp
lods
in
movsl
and
push
xor
ret
adc
movsb
inc
inc
shld
mov
stc
xor
sahf
sub
xor
lds
jnp
popa
cmp
sub
icebp
dec
xchg
movsl
inc
frndint
enter
push
sahf
sbb
sub
aad
aad
pmuludq
or
leave
xlat
dec
push
imul
fsubrl
xchg
scas
aas
movsl
test
mov
test
clc
pop
add
les
mov
insl
mov
into
mov
pusha
mov
mov
outsb
jp
pushf
call
and
js
insb
movsl
movl
jae
movsl
out
cli
mov
xchg
cmp
ror
dec
ljmp
xchg
adc
loope
outsl
movsl
cmp
or
mull
jp
dec
aam
xchg
push
in
inc
sub
push
xor
jnp
movsl
sbb
cld
into
pop
outsb
popa
mov
sub
dec
pop
sbb
ljmp
movsl
or
test
add
mov
lds
or
xchg
and
sbb
dec
jne
into
jmp
or
adc
mov
les
adcl
ret
sub
adc
mov
aad
nopl
mulb
iret
hlt
shll
imul
mov
xchg
xor
movsl
dec
leave
cmp
sub
jne
and
xor
data16
mov
pusha
ja
aam
mov
int
mov
daa
movsl
jp
lret
divb
inc
cmp
rcrl
dec
mov
shlb
sub
repz
int
ljmp
dec
outsb
mov
movsl
out
cmp
nop
or
aaa
movsl
xor
int
lahf
popa
inc
movsl
mov
test
or
lret
jo
aad
jbe
push
dec
orl
adc
xor
mov
or
mov
mov
loopne
xchg
frstpm(287
stc
das
pop
cmp
push
pop
movsl
inc
lea
test
enter
push
andl
add
movsl
lret
mov
aad
add
gs
jnp
xchg
xor
gs
push
jb
movsl
jge
dec
add
mov
sbb
xor
mov
pop
in
and
fs
mov
xor
pop
test
ret
sbb
and
movsl
jb
mov
daa
jl
ljmp
mov
mov
mov
or
dec
add
into
mov
pop
inc
jecxz
movsl
inc
aas
repnz
fcompl
rcl
into
pop
shrb
movsb
push
mov
ss
mov
mov
fwait
stos
and
mov
lds
scas
cltd
jne
shll
mov
mov
push
dec
mov
sbb
rcrb
stc
iret
xchg
mov
push
xchg
es
pop
sbb
pop
addl
shll
jne
mov
movsl
or
out
sahf
fwait
in
loop
lods
clc
lret
sbb
arpl
cwtl
movsl
mov
ret
movsl
icebp
les
mov
push
test
loope
inc
hlt
std
enter
mov
push
divl
pop
imul
jmp
lret
sarl
data16
stos
iret
sbb
sti
and
sub
movsl
cmpsl
or
inc
cmp
mov
xor
xchg
cmp
sbb
mov
movsb
clc
mov
jge
dec
jae
scas
push
add
sbb
mov
push
lods
push
cmovbe
or
xchg
and
mov
add
repnz
mov
pop
insl
scas
ja
movsb
xchg
movsl
xlat
cmc
out
sti
fadds
js
shrl
or
xchg
rcrl
scas
outsl
push
arpl
test
xchg
add
rcll
std
shlb
stos
push
jns
movsl
inc
jp
push
jl
inc
cltd
movsl
sub
jae
push
std
sbbb
movsl
xlat
jno
fbld
dec
cmpsl
push
xlat
in
mov
mov
dec
and
movsl
scas
jae
stc
lcall
pop
fidivs
pop
movsl
out
int3
ret
leave
xchg
jmp
jmp
and
inc
aaa
test
xchg
movsl
xor
out
js
sub
jmp
sbb
testl
imul
in
das
sahf
mov
cmp
rorl
pop
mov
imul
sub
hlt
in
lds
nop
pop
in
and
pop
jae
stc
pop
mov
ret
pop
out
in
xchg
mov
fs
rcrb
xchg
in
in
mov
popa
jo
movsl
loop
jmp
and
test
pop
xchg
sub
pop
cmp
adc
mov
cmp
xor
std
fcmovu
movsl
ficoms
xlat
hlt
push
movsl
and
inc
dec
jnp
adc
vmwrite
push
and
fwait
cwtl
cmp
je
jle
xchg
iret
ret
out
pop
mov
sbb
std
test
cltd
cmp
cmp
mov
ret
lahf
loopne
iret
sbb
xchg
pop
xor
pop
cmc
clc
enter
daa
popa
jno
mov
jo
cmp
xor
inc
jbe
mov
add
popa
pusha
and
pop
lods
movsl
xchg
cmpsl
pop
lret
push
call
into
test
insb
push
std
sub
push
jne
lock
sbb
mov
pop
xchg
pusha
movsl
jmp
call
inc
pop
or
je
insb
test
mov
inc
test
add
cwtl
into
movsl
in
jne
outsb
cmp
jle
je
ja
roll
adc
lcall
pop
jl
jbe
pop
jo
int
or
and
sti
addr16
popf
xchg
mov
sub
and
ret
lret
sbb
or
and
scas
test
pusha
sub
inc
das
inc
insl
adc
lods
ret
in
andps
sub
and
fbstp
hlt
or
jmp
hlt
stos
les
rclb
popf
std
jge
call
fbld
sbb
cmpsl
and
pushf
mov
adc
mov
push
mov
hlt
loopne
shrl
test
sbbl
pop
rcll
xor
jo
cmp
push
ja
mov
lret
aas
pop
and
pushf
in
push
mov
popf
xlat
push
cli
push
inc
std
loope
xor
mov
sahf
pop
mov
mov
and
sbb
fcoms
movsl
mov
stos
test
pushf
insl
push
lock
mov
push
inc
sti
std
rcrb
ffreep
xchg
and
pop
es
lods
sbb
in
and
stos
sub
push
movsb
mov
pop
add
clc
add
lea
jecxz
lret
pop
cmp
fbld
jle
cmpsb
jo
inc
jno
sub
sbb
sub
movsl
sub
sahf
push
fidivs
pop
mov
roll
add
ja
rolb
pushf
sub
movsl
jp
add
push
arpl
cld
push
cmp
cmpsb
sub
aas
mov
push
sub
or
jnp
icebp
shlb
sub
and
ss
push
cld
pop
adc
lods
mov
mov
xchg
add
les
sub
aaa
jne
jnp
icebp
adc
dec
lea
popa
push
add
in
mov
xchg
jbe
fwait
rol
mov
stos
and
jp
jnp
push
fsubr
test
inc
mov
and
aas
in
icebp
or
cmp
push
hlt
lds
dec
jecxz
adc
sub
mov
insb
lahf
in
mov
cltd
add
insb
xlat
ror
nop
pop
decb
push
das
je
jnp
aas
sahf
sahf
in
in
ss
push
loope
mov
ret
lret
mov
lcall
jge
jns
or
adc
sub
roll
icebp
mov
les
cmc
nop
and
daa
add
cmc
ljmp
mov
mov
aam
aad
push
xor
iret
bound
icebp
inc
out
push
pop
fadd
sub
pop
jae
mov
aaa
insl
and
popa
test
and
push
push
xlat
dec
or
xchg
inc
call
or
cmc
ds
xor
call
divb
leave
in
push
aad
pop
sub
mov
loopne
push
mov
jbe
arpl
popa
movsl
in
mov
xor
inc
xchg
sub
mov
popf
dec
pop
xor
dec
fdivl
movl
rorl
mov
adc
cmc
daa
jae
iret
dec
mov
aam
dec
test
movsl
insl
outsb
shrl
mov
add
xlat
enter
mov
pop
push
jp
cltd
jns
movsl
xchg
daa
int3
push
mov
in
sbb
fcom
push
out
leave
shll
movsl
dec
orb
popa
adc
movsl
sbb
mov
movsl
inc
je
jg
inc
test
mov
nop
test
int
and
xlat
in
xchg
leave
mov
jmp
stos
movsl
insb
sub
mov
push
in
in
cmp
add
jp
icebp
adc
movsl
inc
push
dec
sahf
lods
or
inc
xchg
test
aad
pop
movsl
lcall
movsl
dec
inc
mov
mov
adc
shl
dec
pushf
jl
jp
in
mov
push
cli
pop
out
iret
into
subl
pop
popa
lcall
shl
ret
mov
fisubs
pop
sub
icebp
sbb
icebp
jmp
sahf
pushf
cmp
movsb
dec
pop
dec
cmpsl
mov
imul
inc
gs
pop
lods
pop
xchg
inc
mov
jns
mov
popf
xor
rcll
inc
mov
lcall
push
popa
leave
out
stc
xchg
jnp
push
mov
cli
icebp
xchg
xchg
cmpsl
lods
out
cmc
or
sbb
add
mov
shrb
and
xchg
xchg
dec
push
xorb
push
cmp
adc
inc
int
sahf
and
ret
jmp
in
fdivs
sbb
push
pusha
inc
mov
insb
inc
or
and
pop
cmpsb
pop
call
idiv
adc
adc
test
stc
adc
mov
addr16
add
or
imul
or
fdivrs
aam
inc
test
lahf
movsb
mov
std
jmp
xchg
aaa
mov
mov
push
bound
cwtl
xchg
jmp
int
mov
pop
clc
xlat
loopne
cmp
add
and
rcll
leave
mov
and
movsl
shll
popf
adc
jbe
pop
mov
scas
add
leave
lods
cmp
data16
sub
mov
cld
movsl
loop
push
daa
movsl
adc
dec
jmp
jle
sub
xchg
and
shl
rcr
dec
test
add
xlat
sar
int3
mov
pop
mov
bound
jecxz
inc
jb
cmpsl
les
dec
cmp
mov
jg
push
jecxz
jmp
and
ud2
xlat
fcmovnbe
arpl
int
icebp
mov
mov
xchg
jge
adc
mov
aad
daa
dec
push
popf
inc
xchg
clc
in
push
dec
fdiv
rcrb
and
cltd
xlat
add
adc
dec
daa
lea
push
imul
insb
mov
jecxz
mov
mov
mov
icebp
mov
inc
lahf
out
mov
sbb
inc
js
mov
ss
sub
and
loopne
les
sub
xchg
in
stos
ljmp
lock
lret
icebp
mov
std
repz
mov
test
or
sti
mov
call
idivl
sbb
add
sbb
stc
popa
aaa
shlb
mov
inc
fcom
cmp
sbb
cmp
inc
int
movsb
insl
adc
daa
push
add
sbb
les
cld
loop
add
fs
xor
test
adc
movsl
xor
and
pop
xchg
cmp
add
inc
push
movsl
mov
dec
mov
sti
into
cmpsl
sbb
jle
push
and
stos
movsl
mov
dec
jmp
lock
adc
jae
sbb
movsl
cmp
call
adc
dec
mov
add
dec
int3
fcompl
xor
imul
lea
movsl
inc
call
pop
add
inc
mov
mov
pop
cld
cs
sbb
pop
aas
xlat
movsl
mov
jecxz
inc
inc
mov
int
aam
adc
jno
dec
or
sbb
jge
fldt
cmp
insl
push
movsl
jle
xor
ret
movsl
or
ds
and
inc
mov
rol
cltd
mov
outsb
sbb
movsb
movsl
cmp
xchg
cmp
test
and
bound
push
adc
mov
xor
hlt
rcl
shr
imul
pop
addb
insl
movsl
dec
sarb
pushf
data16
stc
in
mov
nop
xchg
sub
push
xor
push
inc
mov
fdivl
push
push
movsl
out
in
push
xorl
dec
movsl
dec
jbe
fstl
shll
pop
insl
out
dec
jne
out
not
and
cmpsl
jae
fstpt
movsl
scas
test
je
movsl
leave
pop
adc
into
add
movsl
mov
jae
test
out
xchg
cmc
push
test
stos
pop
lods
insl
mov
mov
movb
mov
and
sub
movsl
or
dec
jns
pop
xchg
stc
dec
and
push
cmpsb
push
lahf
aam
adc
std
cmp
movsl
jo
sub
stos
movsl
adc
xchg
std
push
inc
add
add
cltd
lea
adcl
xor
mov
add
fs
rorb
xor
inc
or
test
cmpsb
pushf
lods
jnp
jg
jbe
adc
xchg
movsl
test
gs
xchg
nop
fistpl
push
out
mov
test
pusha
pop
xchg
sub
pop
sub
sbb
push
fisubs
jo
pop
jge
push
or
cmpsb
test
mulb
test
push
movsb
out
movsl
sub
out
loop
aad
fdivrl
xchg
sbb
pop
mov
xorb
or
test
jbe
sbb
lods
cmp
movsl
outsl
mov
daa
pop
xchg
sbb
sub
movsl
xchg
or
mov
xchg
cmpl
cli
enter
pop
jb
xorb
out
xchg
scas
in
insl
mov
and
sbb
lret
and
iret
inc
movsl
push
mov
jmp
pop
pop
inc
pminub
aad
adc
in
fs
push
and
lret
mov
jbe
test
sbb
sbb
out
das
push
mov
mov
mov
lds
movsl
push
rorb
mov
pop
movsl
push
fbstp
xchg
jae
xor
cmp
lods
out
loopne
xchg
lock
cmpsl
push
inc
fisubrl
rcrl
and
in
fsubrl
movsl
xor
adc
test
jb
aas
movsl
mov
fisttpll
add
movsl
inc
cltd
loope
inc
or
jle
in
dec
cmpb
rolb
xchg
fdivs
pushf
test
les
mov
xor
aaa
imul
dec
cmp
movsl
dec
push
nop
es
push
cmp
adc
dec
test
xchg
xlat
mov
cmpsb
movsl
push
cli
mov
pop
orl
jmp
cmc
out
sbb
in
jle
adc
push
pop
jl
add
aaa
push
jb
mov
mov
lcall
in
shll
push
shrl
pop
fwait
lea
lds
movsl
movsb
and
xor
inc
and
outsl
cli
in
push
or
dec
stos
por
dec
sbb
xor
test
xchg
movsl
jb
lock
jg
shlb
and
mov
lahf
inc
lcall
aas
adc
or
enter
sar
stc
lret
andb
icebp
loopne
mov
jecxz
sub
adc
or
push
movsl
repnz
xor
adc
xchg
paddusw
push
push
daa
fxch
jb
movsl
pop
test
and
jne
loopne
shr
mov
dec
sub
fcmovu
call
lds
cs
dec
lcall
fistpll
popf
aad
xlat
test
add
and
mov
shrl
test
jno
icebp
loop
clc
cmp
push
popa
mov
adc
shlb
fnstsw
mov
jg
adc
movsl
jmp
cli
jl
sub
mov
adc
sub
xchg
aad
mov
int3
les
icebp
jb
test
scas
sub
dec
xchg
and
jne
xor
lds
jmp
shlb
popf
arpl
sahf
shl
jno
jecxz
sahf
inc
mov
out
push
mov
inc
pop
popf
jno
lret
add
xor
xchg
or
das
and
adc
push
sti
push
rolb
push
mov
aad
clc
push
xor
imul
push
movsl
test
mov
movsl
daa
les
ss
push
mov
cvtps2pd
sub
lods
fdivrl
popf
pop
js
aad
imul
jbe
insl
push
inc
or
push
bound
in
cmpl
movsb
mov
ret
and
fdivrp
movsl
cli
jbe
daa
xchg
cmp
cmp
sub
and
pop
out
xor
inc
sub
lret
xchg
or
xor
adc
adc
ret
xchg
mov
dec
lea
mov
jmp
pop
pop
mov
scas
sbb
pop
movsl
ds
shr
or
dec
jb
addr16
push
lods
jns
daa
or
mov
dec
mov
push
sbb
dec
mov
lock
stc
pop
andl
aad
xor
mov
inc
mov
paddw
pop
push
movsl
cs
aaa
cwtl
sbb
es
rcpps
jmp
insb
jle
lods
and
sarb
movsl
cld
xor
movsl
fdivr
hlt
dec
mov
add
push
into
add
dec
aad
dec
mov
movsl
inc
sbb
jbe
xor
ja
mov
icebp
add
cmp
repz
pop
inc
mov
mov
mov
sub
loop
push
movsl
testb
or
data16
or
mov
inc
mov
nop
fstp
jno
dec
push
in
cmp
sahf
pop
xorl
jb
and
rcll
movsl
cmp
or
mov
fisttps
popf
dec
push
out
xlat
jp
and
and
cs
push
stc
test
or
xor
imul
jno
mov
nop
mov
sar
push
push
into
movsl
mov
push
dec
mov
xorb
lods
out
lret
clc
fs
push
in
adc
cmp
inc
or
mov
movsl
adc
notl
ffree
lock
push
xchg
cmpsb
push
das
xor
add
scas
push
or
gs
pop
test
inc
dec
or
push
push
mov
push
fnsave
jl
daa
mov
pop
add
vrcpss
jb
pop
inc
aad
mov
mov
xchg
and
lcall
push
push
fnsave
or
pop
ret
fcoml
sub
lods
sbb
xchg
add
jo
hlt
mov
mov
cli
mov
out
cmp
jp
insb
dec
and
inc
sarl
rcrb
clc
and
sub
imul
popf
add
mov
in
loopne
lods
push
movsl
pop
fcoms
mov
int
push
xchg
loopne
shll
xchg
lret
andl
mov
fisttpl
addb
fsubrl
and
push
scas
aas
add
les
les
gs
mov
std
movsl
sub
fstpl
mov
push
push
call
xchg
push
push
dec
and
stos
sub
mov
jns
or
and
ret
jecxz
or
fstpl
test
xchg
mov
imul
lret
cli
pop
adc
mov
in
jnp
jne
enter
pop
inc
movb
movsl
jns
ficomps
jg
mov
sub
sbb
mov
push
mov
add
or
enter
rorb
in
leave
hlt
bound
aaa
std
or
sbb
inc
xor
inc
loopne
mov
mov
inc
mov
xor
lea
cmp
sti
jl
es
sub
sub
in
pop
mov
mov
xchg
dec
and
sbb
movl
push
in
fadds
das
jns
mov
arpl
stos
ret
mov
enter
dec
or
movsl
popa
test
cmpsb
dec
in
cmc
jmp
jge
test
hlt
adc
add
mov
movsb
loopne
xchg
out
fs
mov
mov
and
lods
test
addb
pop
sub
aaa
mov
pop
cmp
pop
inc
nop
cmc
mov
movsl
aas
mov
pop
movsl
dec
mov
je
out
movsl
push
jle
imul
movsl
mov
add
hlt
loop
sub
xchg
inc
stc
jecxz
sub
shll
lods
jl
push
mov
add
push
inc
movsl
scas
xor
jbe
add
xor
aaa
cmp
mov
or
mov
add
clc
movsl
cmp
rolb
jg
negb
fsubrl
xlat
lret
mov
mov
aam
enter
fistpl
inc
adc
mov
aas
mov
scas
inc
mov
jecxz
lods
flds
or
fsubr
or
sub
popa
test
out
movsl
out
fdivr
ljmp
mov
enter
aad
test
add
pop
movsl
test
or
scas
mov
or
fsubrs
pop
adc
sub
add
or
jp
mov
movsl
cld
std
movzbl
xchg
mov
mov
jns
mov
add
inc
sub
jb
inc
movsl
inc
xchg
mov
and
dec
jo
lret
add
jnp
pushf
mov
imul
and
mov
mov
dec
movsl
and
cmp
movsl
mov
jo
bound
repz
cmc
xchg
adc
imul
or
push
jno
inc
mov
adc
jbe
mov
movsl
movsb
push
pop
add
cmp
or
mov
mov
xchg
cmpl
lret
shl
jb
dec
inc
bound
and
dec
mov
clc
in
test
jp
jbe
push
orl
push
stos
mov
movsl
ljmp
arpl
lret
and
out
cmpsl
mov
leave
iret
repz
jg
js
pop
fadd
divl
cmp
mov
pop
jmp
adc
fsubs
mov
mov
adc
arpl
stos
cmc
and
fisubl
pop
mov
pop
ret
and
aam
decb
jb
mov
mov
daa
movsl
dec
inc
push
jno
and
mov
add
divl
xchg
sbb
lods
mov
mov
sbbb
xor
mov
pop
xor
mov
mov
les
pop
pop
in
insl
ret
imul
fidivrl
mov
adc
mov
sahf
std
dec
or
sbb
push
fisubrs
gs
stc
dec
clc
sub
mov
data16
mov
lods
ja
or
stc
bound
dec
gs
xchg
xchg
je
andl
dec
movsl
scas
lds
js
mov
lea
aad
xor
js
and
inc
mov
push
xchg
inc
jp
movsl
nop
dec
jno
mov
popa
push
mov
mov
movsl
fstps
outsb
imul
call
int3
xor
adc
xchg
lds
lock
cli
leave
movsl
clc
jl
push
sbb
pop
adc
xchg
movsl
mov
xchg
mov
lret
and
push
pop
stc
adc
push
enter
mov
and
stos
cmp
sub
add
lret
shl
mov
ja
jo
push
push
ds
add
mov
xchg
jb
cmc
in
out
movsl
inc
add
push
loop
jns
mov
lret
xchg
inc
movsl
adc
jo
lods
sbbl
sub
shlb
and
fdiv
movsl
jnp
pop
push
movsl
cmp
andb
stos
movsl
mov
mov
cmp
push
or
mov
frstor
test
push
pusha
fstpt
jne
mov
sbb
test
movsl
mov
ss
test
cmpsb
and
pop
lds
dec
aaa
mov
andl
xchg
cmp
xchg
nop
xchg
mov
inc
movsl
lret
out
loop
jl
dec
and
js
ret
test
movsl
adc
outsb
lret
and
lds
movsl
aaa
adc
icebp
jmp
fsubrl
dec
push
xchg
sub
movsl
xor
or
movsl
mov
pop
bound
sub
push
lahf
xchg
mov
movsl
lods
mov
clc
jae
pop
ljmp
les
pushf
xorl
cmp
repz
sub
sahf
sbb
push
jo
gs
or
dec
inc
in
addr16
repnz
mov
adc
iret
sahf
adc
loopne
subl
test
mov
add
test
pop
decl
cltd
movsl
clc
xchg
and
outsb
or
pop
sub
movsl
shlb
adc
and
sub
imul
xorl
jb
pop
lods
lea
repnz
out
mov
sub
and
mov
xchg
fisubs
aaa
xchg
sub
stos
int
pop
loopne
inc
incb
mov
movsl
inc
xchg
lret
aas
sbb
pop
jnp
js
mov
mov
incb
gs
stc
pop
fwait
pushl
sahf
mov
mov
icebp
xlat
push
shl
adc
pushf
sbb
fstp
out
add
sahf
cmpl
push
stos
cmpb
fwait
or
outsl
repz
loope
sbb
cmp
lahf
repnz
movsl
iret
addb
movsl
xchg
and
jns
movsl
pop
dec
and
cmp
dec
imul
pop
push
fs
push
stos
das
cwtl
dec
push
or
mov
test
push
adc
jecxz
dec
xchg
loopne
sbb
inc
sub
inc
push
or
movsl
fucomip
jbe
int3
pop
mov
xor
in
sub
jg
jmp
push
data16
ret
iret
sbb
mov
inc
mov
les
dec
cli
icebp
movsl
fdivrs
adc
jl
lds
xchg
lods
not
mov
add
lcall
aas
sahf
mov
pop
movsl
out
cs
arpl
inc
or
push
and
frstor
pop
cli
xchg
imul
inc
push
and
pushf
hlt
movsl
mov
push
cs
jle
aad
insb
cmpsl
or
and
std
ljmp
movsb
jecxz
lds
xchg
mov
leave
xchg
add
roll
movsb
cmp
jmp
mov
lock
lods
das
in
mov
mov
or
mov
ficomps
lcall
jmp
pop
out
pushf
inc
hlt
mov
incb
xor
jae
xchg
adc
push
pop
divl
addr16
cli
std
jecxz
or
mov
je
cmc
aam
mov
stc
in
repz
or
movsl
rcrl
cmp
adc
out
pusha
jge
and
pop
pop
sbb
cmc
dec
mov
test
jns
sbb
dec
movsl
pop
push
and
pop
pop
push
jg
outsl
sarl
sbb
int3
push
lds
pop
mov
shl
xchg
sbb
fs
pop
dec
mov
xor
or
fldenv
inc
in
cwtl
mov
cltd
cmp
mov
lds
popa
in
call
and
mov
ljmp
add
movsl
jnp
addl
inc
jbe
xchg
fs
jecxz
pop
ss
popf
cmp
cmp
mov
pop
pop
in
out
movsl
lock
sbb
scas
xlat
in
cmp
xchg
add
mov
inc
lds
mov
sarl
mov
call
inc
sbb
pop
incl
mov
ss
js
mov
popa
je
push
jle
scas
inc
xchg
adc
push
and
xchg
aam
xchg
xchg
gs
add
push
ja
dec
cmpsb
in
movsl
std
cmp
fadds
movsl
iret
dec
je
les
arpl
mov
fsub
sbb
add
push
inc
inc
mov
push
mov
cmpsb
mov
xchg
into
scas
mov
stc
dec
adc
mov
or
jae
popf
dec
std
xchg
mov
push
push
movsl
popa
sarb
pop
popf
push
mov
divl
loop
imul
enter
sub
ja
adc
loope
xor
out
movsl
xchg
xchg
sahf
lock
inc
cltd
inc
test
imul
test
arpl
push
push
lods
out
mov
add
sahf
pop
pop
and
lds
mov
xchg
add
sub
pop
pop
xorl
mov
dec
movsbl
push
movsl
adc
iret
out
addr16
movsl
dec
clc
jmp
roll
jae
int
icebp
pop
call
inc
cmpb
adc
mov
dec
imul
insb
movsl
stos
cmpsl
pop
pop
pop
test
movsl
cmp
test
movsl
mov
out
popa
int3
stos
dec
cmp
jbe
push
dec
repnz
js
aam
imul
inc
int
pop
sbb
xor
scas
mov
adc
movsl
mov
mov
pop
aad
movsl
loope
xlat
sarl
sub
jmp
dec
jnp
push
and
dec
jp
sbb
incl
mov
xchg
inc
movsl
xchg
mov
popf
lcall
clc
dec
jb
movsl
pop
insl
jmp
xchg
stos
inc
pop
sahf
add
repnz
testl
sub
pop
mov
iret
aad
clc
jae
jle
add
pusha
pushf
sub
xchg
shlb
ficoml
or
cwtl
dec
cli
sarl
sub
movsl
mov
stos
fs
xchg
pop
shlb
scas
scas
and
mov
pop
mov
cmp
jae
cmp
cmp
imul
or
pop
dec
into
lret
jnp
cwtl
ret
inc
xchg
adc
test
jb
fcmovnb
and
mov
mov
sub
mov
add
ss
cmp
lds
in
movsl
leave
inc
fs
mov
push
jbe
loopne
movsl
int3
lds
movsl
loope
test
sbb
mov
inc
ds
and
enter
call
push
out
ja
push
jle
pop
mov
pushl
movsl
loop
or
les
into
mov
in
mov
lahf
movsl
sub
popf
stos
and
int
rcrl
adc
xchg
push
call
adc
jge
cli
shlb
call
cltd
cmp
pushf
out
popf
jne
cmp
test
popf
jae
stos
push
lods
flds
iret
leave
and
cmp
mov
or
movsl
mov
inc
cmp
movsl
jb
out
outsb
fisttps
test
stc
in
cmc
dec
dec
pushf
into
inc
or
mov
iret
xchg
lret
rcrb
cld
push
imul
testb
mov
scas
sti
enter
or
xor
test
xchg
dec
jl
out
daa
and
fsubs
aaa
aas
or
movsl
je
in
out
push
loopne
movsl
repz
rolb
pop
iret
insb
inc
les
lods
flds
movsl
sar
test
stos
movsl
popa
or
cld
stos
jl
xor
sbb
pop
pop
shlb
movsl
jne
jb
movsb
mov
lea
filds
fstl
push
mov
nop
in
pop
push
mov
dec
cmp
cmc
pop
cld
pop
xchg
jo
jmp
push
inc
fwait
or
xchg
je
mov
mov
ss
adc
movsl
fcomp
mov
push
mov
push
movsl
jae
or
shlb
das
lret
fisttps
add
adc
rep
orl
dec
mov
pop
dec
cmc
scas
popa
hlt
movsl
rcrl
ds
rcl
or
add
std
dec
sbb
cmp
mov
ljmp
andl
mov
dec
push
fsts
mov
pop
sti
sub
xor
push
lods
push
jo
add
sub
aam
xchg
mov
lods
insb
dec
mov
movsl
mov
inc
dec
mov
mov
in
lds
jns
test
sub
dec
ret
pushf
fisubs
push
sbb
mov
dec
sbb
mov
mov
mov
test
sub
or
jl
push
add
mov
xor
pop
lds
icebp
mov
sarb
add
cmp
ja
leave
out
jmp
stos
outsl
movsl
ret
cmp
in
fisubl
cwtl
test
and
div
jle
pop
movsl
cld
fildl
push
jmp
xor
pop
ficomps
xor
xor
iret
in
test
inc
test
fisubrl
outsl
cltd
mov
jno
inc
js
xor
mov
lods
mov
sub
sub
lds
jmp
push
ss
xor
and
jns
mov
ljmp
mov
adc
rorb
and
frstor
sub
push
cmpsl
inc
movsl
test
xor
movsl
lea
mov
rolb
aas
or
iret
sub
xchg
xchg
adc
movsl
idivb
cmp
xchg
xchg
ljmp
in
pop
mov
push
or
in
test
sub
cmp
pop
push
mov
pop
pop
ljmp
jmp
cltd
xchg
or
test
out
lds
pop
hlt
enter
daa
in
mov
lcall
pop
stc
imul
jmp
pop
sbb
jo
arpl
dec
jne
mov
cmpsb
push
add
sarl
jbe
movsl
dec
out
dec
lret
int
movsl
xchg
rcrl
movsl
push
imul
push
insb
mov
das
jp
movb
jb
cmp
pop
js
inc
cmp
pushl
in
mov
movsl
add
mov
mov
jnp
movsl
cmp
or
clc
inc
insl
imul
mov
neg
jmp
and
in
fs
mov
rcll
fldenv
jae
adc
movsl
cmp
data16
mov
xor
movsl
ds
scas
push
enter
aaa
jno
mov
push
add
cmp
imul
movsl
mov
mov
mov
mov
push
lahf
fdiv
pop
xor
cmp
std
popw
mov
ret
les
iret
adc
xlat
fistps
stos
movsl
sbb
jb
sub
loope
jmp
out
mov
addr16
inc
loope
aaa
pushf
mov
pop
pop
subl
xlat
push
lds
mov
icebp
loop
pop
dec
data16
mov
movsl
std
jecxz
outsb
loope
out
dec
xchg
lock
and
hlt
pop
fs
popf
test
pop
ds
in
cmp
lds
mov
out
jno
cmpsl
popa
movsl
xchg
pushf
cmpsl
add
arpl
push
mov
lea
mov
jno
jns
pop
cmpsb
pop
sbb
lds
xchg
movsl
adc
jne
pextrw
test
loope
adc
mov
outsb
cmp
xor
in
jg
cmp
add
sbb
jle
iret
movsl
movsl
ret
shl
sbb
shl
cmc
pop
movsl
push
jge
mov
movsl
push
jl
cmp
repnz
inc
add
push
inc
adc
mov
jns
xor
pop
subb
sti
mov
mov
xchg
jbe
loopne
pushl
and
sbb
daa
incb
shrl
or
dec
out
andl
std
sub
orl
and
fwait
ret
cmp
jl
scas
mov
adc
out
or
mulb
and
cmpsb
insb
cmpsl
out
push
sbb
push
shll
shll
in
push
xchg
xor
sbb
cmc
mov
xlat
mov
ljmp
and
pop
fdivrs
cmp
incb
daa
dec
out
mov
xchg
outsl
sarl
mov
dec
mov
pop
sbb
cmp
jecxz
adc
cmc
lods
sub
inc
xchg
iret
mov
movsl
pop
in
push
xchg
or
sahf
dec
jnp
inc
pop
lds
jmp
mov
movsl
xlat
jae
inc
pop
movsb
sbb
mov
movsl
xchg
dec
sub
mov
ss
sub
loop
pop
loope
movsl
and
and
jle
push
xchg
lahf
aaa
je
push
movsl
pop
jp
roll
std
add
movsl
movsb
loop
testl
inc
clc
sub
mov
mov
dec
js
data16
std
and
aas
mov
xor
test
mov
inc
nop
movsl
xchg
aas
xchg
outsl
inc
cmpsl
or
sub
xchg
mov
ret
in
rolb
outsb
fisttps
adc
ror
xor
mov
pop
jge
xor
adc
xor
stos
movsl
insl
bound
aad
out
mov
popf
cmc
rcr
mov
mov
mov
movsl
push
popa
aaa
loop
neg
mov
add
push
mull
les
xchg
in
mov
and
push
pusha
mov
sbb
lea
and
in
int
sub
shrl
movsb
ja
fisubl
movsl
fcoml
movsl
xchg
xchg
inc
sbb
cmp
xor
fistl
mov
mov
push
dec
test
mov
pusha
loopne
bound
xor
gs
sub
aas
in
mov
inc
in
fiadds
mov
jnp
mov
movsl
rolb
scas
mov
xchg
divb
xor
mov
jle
adc
or
movsl
mov
js
cmpsl
mov
jp
sbb
mov
iret
cmpsb
mov
std
inc
stos
lret
cmp
push
mov
cmpsl
mov
imul
enter
lods
movsl
push
insb
test
or
sub
mov
dec
rep
in
vpackuswb
movsl
ret
push
sbb
into
jl
jmp
pop
inc
push
iret
add
addr16
test
pop
test
push
lahf
movsb
jbe
xchg
mov
cmp
insb
arpl
je
dec
jnp
movsl
xchg
sub
push
shlb
out
movsl
dec
aam
pop
sti
dec
dec
movsl
xor
jmp
mov
imulb
lret
mov
add
movsl
xlat
out
fisttpll
ja
mov
adc
movsl
push
xchg
orb
ljmp
loopne
adc
xorb
push
mov
fidivl
gs
lret
inc
xchg
mov
mov
stos
lods
or
dec
das
repz
loopne
aam
andb
fnsave
jl
dec
lret
mov
rcrb
out
lods
cmp
movsl
cmp
arpl
std
xchg
clc
adc
rorb
add
movsl
jne,pn
sub
in
popf
movsl
sub
pop
lods
add
mov
sarb
inc
movsl
sahf
push
dec
jnp
decl
push
xchg
out
shl
push
int3
cltd
add
rcrl
sbb
mov
cmc
and
lods
xchg
mov
sub
inc
in
add
sbb
cmp
and
fnsave
data16
movd
xchg
sub
cld
xor
add
xchg
out
add
loope
mov
test
or
fcoml
push
popa
in
mul
pop
xchg
mov
aam
push
lret
and
sbb
sub
xor
mov
adc
stos
sbb
popf
xchg
pop
pop
push
ud1
lods
mov
movsl
gs
mov
mov
into
out
pop
sahf
xlat
ljmp
cmpsl
mov
sub
movsl
scas
or
fidivs
aaa
ljmp
movsb
fwait
ss
mov
push
and
push
mov
stos
pop
movsl
mov
mov
pop
mov
push
sbb
mov
or
iret
movsl
push
outsl
push
pushf
or
shlb
je
adc
movsl
in
inc
xchg
mov
push
movsl
push
cmpsl
dec
fmulp
push
push
movsl
sbb
pop
popl
mov
or
daa
mov
fcos
jnp
movsl
and
testl
and
sbb
mov
subl
movsl
rorb
aad
sti
js
test
mov
mov
or
adc
pop
movsl
sbb
xor
pop
int3
sahf
mov
movsl
xor
lret
mov
mov
test
and
jno
lret
sbb
mov
mov
lcall
movsb
movsl
rorb
cmp
mov
xlat
movsl
test
lea
mov
mov
aas
jnp
xor
dec
roll
imul
adc
mov
std
jecxz
mov
jne
cwtl
mov
ds
and
es
insb
shl
sbb
mov
dec
add
pop
movsl
repz
dec
or
scas
data16
shrl
outsb
in
out
and
lret
xlat
push
int3
dec
test
cs
sbb
movsb
stos
push
adc
movsl
popf
jp
cli
out
mov
mov
jbe
jp
movsl
pop
sbb
lret
fstl
in
orl
adc
pop
lods
mov
sbb
rcll
shlb
mov
fs
fisubrl
and
iret
xor
call
mov
mov
xchg
add
push
mov
movsl
insb
rcrl
pop
cmp
jl
jbe
pop
mov
or
mov
pusha
add
bound
into
pop
or
movsl
out
in
loope
pop
push
or
mov
scas
lea
mov
orb
add
lcall
in
outsb
in
imul
push
movsl
push
int3
pop
in
push
dec
jns
data16
movsl
pop
imul
jne
mov
movsl
sahf
test
or
jnp
pusha
lds
or
push
je
iret
outsb
pop
xor
sub
int
push
dec
movsl
outsb
rcrl
push
jg
sub
scas
pop
and
int
dec
in
ja
out
imul
xor
fucomi
cmpsb
loopne
mov
adc
mov
iret
mov
movsl
pop
dec
scas
pop
jge
fbld
jo
lock
jl
mov
mov
push
test
decb
in
fdivrs
xor
arpl
test
movsl
lock
xchg
in
daa
movsl
xor
int
add
sbb
jecxz
jge
jl
call
in
adc
mov
inc
adc
dec
divl
xchg
movsl
jbe
pop
mov
data16
mov
call
fdivs
mov
sahf
inc
mov
mov
adc
repnz
jecxz
dec
lds
push
xor
fisttpl
or
mov
lret
and
push
push
xor
movsl
or
aas
xchg
fcmovb
pop
dec
push
mov
ljmp
cmc
out
pop
jle
jp
xchg
and
mov
cmpsb
adc
jno
mov
dec
in
test
fsubs
and
fbstp
add
ret
jge
mov
add
testb
cmp
mov
cmp
inc
mov
jnp
inc
cmpsb
sbb
movb
repz
push
adc
xchg
mov
push
repz
popa
sarl
int
cmp
gs
lcall
jnp
sub
icebp
sub
pop
int3
shrb
imulb
scas
xorl
cmp
mov
mov
jle
movsl
sbb
std
push
cmp
rep
sub
mov
mov
mov
sbb
jmp
test
sbb
mov
std
sbb
xor
jp
push
cmp
pop
lds
mov
mov
int
add
pop
pop
xchg
inc
xchg
and
xchg
aaa
fsubp
push
rcrb
lock
inc
xchg
xchg
test
fucomi
or
xchg
adc
aaa
mov
sbbl
test
fcom
cs
in
mov
adc
in
dec
movsl
ljmp
movsl
xor
xchg
ss
mov
in
test
rclb
jno
cld
push
divb
addr16
adc
cmc
xchg
mov
shll
adc
inc
or
lds
aas
push
mov
xchg
and
cwtl
movsl
jmp
mov
hlt
push
push
mov
in
test
loop
push
out
lea
push
push
jmp
fldln2
aam
incl
je
mov
bound
ja
xchg
pop
sbb
inc
jbe
pop
jp
xor
int
push
movsl
mov
aas
or
shr
xchg
dec
dec
fs
rcrb
cmp
movsl
in
mov
adc
xchg
lret
movsl
imul
mov
hlt
fisubl
fidivrs
dec
cmpsb
in
pop
jne
movsl
dec
mov
push
movsl
scas
jge
xchg
popa
pop
arpl
mov
adc
leave
jb
orl
movsl
add
push
pusha
cmp
loope
and
lcall
pop
mov
pop
mov
fmull
test
stos
and
sbb
xchg
shrl
pop
adc
lods
mov
adc
mov
movsl
mov
loopne
fsubs
mov
shl
ret
and
jmp
movsl
or
nop
xchg
rorb
adc
movsb
pop
movsb
inc
repnz
in
cmpsl
jle
xchg
jb
insl
in
dec
add
les
pusha
xchg
scas
enter
push
int3
lcall
push
test
lods
inc
popa
test
and
adc
mov
mov
adc
mov
push
int
xor
movsl
inc
arpl
dec
aaa
cmp
sbb
in
cli
xchg
adc
mov
std
hlt
aad
add
jg
test
test
imul
or
cld
xlat
mov
or
movsl
xchg
cltd
dec
or
cmpsb
lret
daa
xchg
xchg
mov
dec
mov
mov
icebp
push
hlt
jecxz
stc
movsl
ficoms
stos
insb
cwtl
dec
andb
lds
inc
push
mov
fldl
cmpsl
mov
in
adc
jb
popa
xchg
cmp
stc
popa
inc
test
add
or
movsl
xchg
mov
daa
inc
xchg
scas
popa
cmp
pop
mov
adc
xchg
mov
test
fcoms
ret
mov
sti
testl
adc
test
dec
sbb
sar
add
push
dec
pop
cmp
mov
in
sub
mov
jno
pop
je
push
push
gs
movsl
push
nop
movsl
loope
jmp
or
xchg
mov
mov
dec
jp
mov
fcoml
dec
movsl
call
in
movsl
inc
aad
dec
mov
outsl
adc
fidivrs
int
dec
faddl
jne
and
cs
movsb
adc
mov
imulb
dec
xchg
sub
out
arpl
in
in
insb
movsl
add
mov
cli
je
movsl
imul
leave
push
mov
ljmp
imul
cmp
mov
jl
leave
push
sahf
pop
orl
aam
movsl
cmp
fsubr
dec
inc
mov
and
or
add
jmp
sbb
pushf
mov
jge
repz
and
call
test
sub
movsb
pop
sbb
cwtl
mov
loope
push
adc
cmp
mov
in
inc
jmp
jle
out
in
mov
lea
int
in
xchg
jno
and
jecxz
scas
sbb
leave
mov
xor
and
push
jecxz
dec
daa
or
mov
jae
repz
pop
loop
pop
xor
jl
push
cmp
das
mov
jb
cld
leave
inc
mov
imul
xor
movsl
mov
inc
test
inc
xlat
icebp
dec
sbb
pop
unpckhps
pop
js
xor
inc
nop
in
fadds
mov
stc
mov
sbb
fidivrl
mov
fidivs
mov
xchg
sub
mov
div
rorl
sub
sub
add
dec
ljmp
movsl
adc
and
sbb
lret
popf
mov
sbb
out
or
pop
fstps
ja
xorl
sbb
std
sbb
jecxz
sbb
pop
repnz
add
jns
xchg
aam
popf
sbb
cmc
inc
icebp
sbb
mov
push
mov
stos
test
in
pop
adc
sarb
cld
pop
push
pop
push
cmp
sub
gs
pop
mov
inc
stc
xchg
stc
loope
sbb
arpl
and
pop
sub
stos
dec
pop
jnp
adc
pusha
cmp
roll
js
mull
pop
sub
fstps
jmp
xor
mov
xor
xor
cmp
cltd
es
mov
leave
jp
pushf
das
std
loope
xchg
mov
and
in
jae
jle
cmc
inc
mov
aaa
int3
repz
sbb
inc
mov
in
jnp
dec
fcmovnb
or
popf
inc
fcompl
in
jo
adc
mov
or
mov
fidivs
sub
aam
lock
movsb
mov
cmp
xchg
xchg
jge
xchg
and
push
ss
and
scas
push
in
icebp
and
popl
fiadds
xlat
cwtl
and
or
jle
xor
cwtl
xor
xlat
scas
pop
jne
xchg
in
jecxz
and
mov
sbb
popf
jne
mov
cmp
movsb
icebp
add
leave
sub
ljmp
sbb
xor
in
mov
fwait
loopne
out
or
je
dec
cli
push
add
sub
jns
jo
jge
or
mov
xor
daa
mov
add
dec
popa
sub
cmpl
test
xchg
jge
shl
adc
or
sub
jmp
stos
sub
xor
mov
mov
sub
loope
movsl
pop
fcmove
mov
jne
repz
testl
insl
sbb
mov
movsl
sub
push
xchg
and
pushf
movsl
jne
pop
in
pop
inc
andl
movsl
cmp
xchg
sti
hlt
aam
ja
push
loope
pop
dec
scas
in
cwtl
shl
and
mov
movsl
bound
mov
xchg
mov
loopne
lea
push
mov
stc
movsl
push
outsb
dec
shll
or
movsl
adc
inc
push
imul
imul
add
popa
movsl
mov
out
shr
imul
mov
mov
or
movsb
jb
push
sub
jns
xor
stos
pop
fistpll
add
es
cmc
inc
repnz
fucomi
sti
dec
outsl
push
dec
and
pop
xor
push
in
jmp
jne
test
repz
cltd
popf
lahf
imul
mov
lds
add
add
movsl
cltd
push
arpl
xchg
sahf
mov
imul
rcl
aad
sbb
ljmp
xor
adc
pop
aam
mov
mov
mov
mov
shrl
inc
lcall
cld
and
insb
xor
ret
ficoml
adc
xor
cmp
bound
movsl
cmp
pop
shr
xrelease
fsubp
xchg
sahf
sub
test
mov
jl
push
xor
test
movsl
out
dec
outsl
decb
adc
mov
add
inc
cltd
cmp
push
je
pop
in
inc
pop
xchg
mov
adc
test
jg
into
shlb
popa
rol
test
adc
or
xlat
aaa
sbb
andl
cmpsb
lds
inc
movsl
xor
mov
and
cmp
test
in
movsl
into
in
rorl
lret
inc
out
xchg
lock
or
jl
xchg
pop
add
in
mov
adc
xor
mov
enter
pop
js
mov
rorb
sbbb
pushw
push
push
jnp
lods
test
add
cmp
mov
out
fistpll
adc
dec
insb
movsl
push
cmp
lds
pop
cs
lds
pop
mov
pop
push
test
or
mov
fs
xchg
mov
shr
std
cmp
inc
pop
mov
fxch
ja
fstl
movsl
xor
cmpsb
les
pop
mov
std
ss
add
push
push
mov
xchg
adc
xchg
mov
out
jle
push
imul
movsl
in
mov
and
daa
mov
test
or
jecxz
mov
adc
inc
mov
repz
cmc
and
hlt
jns
insl
aas
xor
mov
pop
lods
dec
push
das
outsb
int3
mov
insb
and
into
adc
inc
and
mov
loop
pop
inc
movsb
movsl
in
notl
dec
mov
adc
fstpt
push
ss
mov
lret
in
inc
movsl
push
ljmp
and
mov
in
or
cmc
pop
and
cmp
ljmp
xor
ret
test
or
mov
cmp
movsl
and
lret
or
push
or
rcrb
dec
cmp
addr16
movsb
andb
cmc
mov
scas
std
lods
mov
mov
subl
dec
sub
mov
inc
addl
movsl
arpl
out
into
les
movsl
testb
std
and
in
dec
enter
movsl
rolb
das
jo
cmp
lods
and
out
cwtl
sbb
jl
fs
mov
xor
pushw
xchg
xor
adc
rcr
inc
test
mov
into
enter
imul
in
jnp
push
dec
negb
mov
in
out
pushl
jmp
data16
int3
xor
pop
pop
cmpsl
repz
call
daa
push
in
rorb
jmp
mov
sbb
arpl
in
add
mov
push
xlat
lods
lods
movsl
sub
pop
xchg
pop
lahf
popf
jmp
bound
adc
sub
mov
movsl
gs
inc
mov
test
movsl
mov
idiv
in
xlat
les
cmp
movsl
and
dec
mulb
sub
or
jb
cmp
mov
insb
cmpsb
imul
xchg
ret
jp
andl
mov
imul
add
jp
jg
in
mov
ljmp
pushf
in
aad
out
mov
cli
in
sahf
add
add
pop
mov
dec
mov
int
lock
bound
inc
add
negb
enter
pop
movsl
mov
push
jb
push
pop
pop
jne
rclb
mov
mov
mov
jmp
hlt
sti
mov
sbb
loop
test
xor
jge
outsl
in
sbb
add
ret
es
inc
pop
mov
movsl
aaa
add
out
popf
into
xchg
outsl
outsb
insb
push
in
add
fs
movsl
inc
scas
sub
movsl
mov
push
sbb
mov
push
mov
rcrb
inc
les
push
pop
movsl
cmpsb
add
leave
add
pop
push
jbe
movsl
inc
mov
jmp
lcall
scas
or
ljmp
push
pusha
int
insl
cmpsl
pop
sti
movmskps
hlt
and
sbb
jp
dec
mull
jno
mov
imul
cli
movsl
dec
dec
dec
pop
test
inc
xchg
int3
jge
movsl
dec
jle
add
sbb
mov
scas
mov
cltd
inc
mov
sub
sbb
rep
lods
movsl
mov
nop
lret
clc
movsl
jg
enter
xchg
fiadds
fimull
mov
lds
jo
movsl
aam
xchg
sbb
sti
fmull
pop
cmp
push
aam
dec
mov
ljmp
push
or
push
mov
adc
cmpsb
mov
cli
inc
mov
pop
jb
or
sbb
clc
insb
subl
pop
sbb
mov
inc
imul
repnz
aad
clc
ss
xchg
ficompl
inc
mov
mov
sar
pop
pushf
and
dec
nop
fcmovu
movsl
fwait
lahf
inc
leave
out
imul
add
pop
rorl
mov
cs
aam
dec
gs
mov
fisubl
or
jecxz
ja
pop
sbb
lds
adc
cmp
in
pop
jnp
sbb
adc
pop
mov
adc
mov
xchg
xchg
movsl
pop
ja
lret
or
test
orl
in
loope
mov
mov
out
mov
push
jl
push
data16
fcomps
adc
jns
mov
inc
fwait
sbb
xor
mov
jno
inc
addr16
loopne
movsl
cmc
out
mov
test
inc
movsl
stos
mov
inc
dec
dec
and
sbb
or
lods
and
cmp
in
int
out
out
mov
mov
dec
in
jmp
movsl
addr16
mov
mov
mov
lds
push
sbb
movsl
pop
enter
inc
data16
push
mov
xchg
aad
es
ss
sub
jg
inc
xchg
and
lods
xor
je
mov
sub
sub
xchg
sti
out
cs
movsb
and
mov
movsl
sahf
lret
hlt
ss
lods
cmp
adc
cltd
dec
cmp
push
or
ret
sub
adc
xchg
cwtl
lods
lret
adc
sbb
test
shrl
cmp
push
cwtl
push
sub
mov
cmp
and
adc
clc
and
mov
sbb
dec
dec
mov
jmp
mov
sub
inc
scas
in
icebp
push
dec
mov
adc
inc
aaa
push
dec
mov
mov
loop
pop
rolb
leave
adc
lods
push
sbb
inc
repnz
xchg
fwait
sbb
add
cmpsb
cltd
and
jbe
jo
fimuls
cmc
pop
push
inc
lock
pop
lea
xor
dec
sbb
xlat
lcall
lods
sub
flds
hlt
pushf
sub
bound
jbe
divb
sahf
insb
xlat
inc
out
pop
jnp
xor
ljmp
in
ja
stos
das
gs
sub
pop
pop
push
cmpsl
and
sbb
dec
or
loop
pop
add
inc
mov
scas
push
cmpsb
inc
stos
mov
mov
sbb
js
dec
cmp
xchg
mov
jl
add
sbb
fwait
stos
mov
or
jno
rcl
insl
adc
jnp
inc
sub
mov
cltd
push
lds
or
mov
aaa
pop
xchg
les
loop
add
hlt
mov
sub
add
cs
addl
xor
pop
stos
jb
mov
movb
fwait
mov
mov
adc
clc
fstl
aad
push
rcrl
cmovp
push
fiadds
fbstp
sub
fists
cmc
mov
lret
es
repnz
out
repnz
lret
pop
cmc
sub
push
mov
sarb
sub
test
adc
mov
bound
or
xlat
insb
insl
es
int3
lcall
je
daa
cltd
pop
cmp
inc
pop
shll
and
test
adc
negb
decl
imull
icebp
shrl
sub
jle,pn
cmpsb
cmc
jmp
dec
andl
sub
lcall
cmpl
icebp
cmp
dec
mov
fdivs
add
adc
mov
in
out
cmp
or
idiv
je
insb
inc
les
and
in
cmp
sbb
mov
movsl
mov
imul
push
les
inc
insl
subb
lret
jge
movsl
mov
stc
sbb
hlt
movsl
cltd
push
mov
mov
pop
cwtl
or
push
cmp
loopne
sbb
mov
adc
pop
int3
add
push
sbb
pop
nop
mov
xchg
xchg
sub
mov
and
movsl
inc
and
add
mov
push
adc
enter
mov
jge
in
xchg
es
popf
lea
sbb
mov
or
jns
imul
movsl
lret
adc
jp
pop
mov
jmp
xchg
es
sub
popa
pop
jb
imul
fstp
mov
cli
dec
pop
push
fistpll
movsl
enter
nop
mov
mov
jnp
jne
jns
movsl
je
mov
sar
fistps
cmpsb
in
lds
inc
cmp
imul
mov
mov
clc
pop
xor
cmp
adc
dec
movsl
dec
insb
pop
stc
cmp
cs
movsl
sbb
sbb
in
movsl
imul
xor
cwtl
imul
movsl
fs
mov
add
scas
movsl
push
fwait
test
mov
cmp
popa
scas
cmc
mov
mov
mov
cli
push
nop
and
jl
push
das
jp
mov
lcall
or
push
xchg
inc
push
push
mov
mov
jo
mov
mov
or
jno
ljmp
into
and
mov
jo
and
les
pop
out
mov
jge
dec
insb
fisubs
imul
call
movsl
xchg
push
daa
cld
or
mov
cmc
std
test
jo
bound
xchg
mov
pop
or
adc
push
repz
js
cld
mov
xorb
movsl
flds
pop
add
inc
daa
pop
and
xchg
mov
stos
jmp
sbb
and
pop
movsl
lock
cmp
or
out
cmpsb
mov
shll
loopne
enter
inc
mov
push
std
mov
dec
je
mov
jnp
ret
movsl
aam
inc
mov
jo
cli
lock
in
dec
add
cld
aad
enter
mov
sub
movsl
mov
dec
push
pop
mov
into
movsl
sbb
mov
aam
push
pop
adc
in
movsl
iret
sbb
aad
sbb
idiv
add
mov
cmp
aam
push
xorb
add
xchg
lock
movsl
cli
shll
pop
mov
and
btc
fcomps
ret
loop
movsl
cmp
enter
mov
pop
sbb
sbb
mov
mov
sub
or
cmpxchg
push
mov
cmpsb
sub
jns
popa
or
xor
cmp
xor
xchg
movsl
mov
incl
xor
imul
pop
mov
inc
push
adc
pop
jns
ficoms
stos
mov
and
mov
movsl
into
xchg
adc
jns
xchg
xchg
inc
mov
push
in
rorl
fs
add
test
daa
jae
xchg
je
je
add
mov
movsl
mov
sub
scas
add
xor
sbb
sub
lret
xchg
push
popa
mov
xchg
push
or
pushf
addr16
sub
jge
fnstenv
mov
jmp
mov
js
push
scas
mov
scas
mov
mov
xchg
fisubrs
push
shll
sub
sub
mov
inc
mov
ja
sarl
pop
pop
mov
dec
dec
mov
adc
loop
push
arpl
movsl
test
lret
out
add
push
fwait
mov
xor
xchg
jo
sub
imul
cli
ds
cmp
ret
push
jmp
push
mov
push
mov
pop
pop
push
imul
mov
xorl
int3
out
mov
movsl
inc
sbb
int
add
fcompl
shlb
xchg
mov
xor
cmp
inc
jb
in
or
stc
ss
ret
adc
push
dec
dec
mov
inc
imulb
mov
and
pop
pop
and
ss
jp
add
push
xor
mov
in
sub
mov
xor
popa
in
leave
out
push
add
movsl
not
or
push
and
jb
pop
shl
xor
mov
fsubs
pop
insl
sarl
clc
lock
lds
aam
push
movsl
test
lea
pop
push
add
rorl
mov
test
cmp
andb
mov
int3
mov
in
sbb
xor
sub
mov
jae
cmp
les
lods
mov
xor
movsl
sahf
and
test
push
xchg
push
mov
and
data16
add
jne
loope
pop
js
push
dec
xor
lahf
arpl
jle
xchg
daa
sahf
mov
call
jne
mov
mov
jbe
pop
xor
mov
movsl
fcmovu
cmp
adc
nop
sbb
jnp
repz
addr16
cwtl
mov
mov
mov
ja
mov
or
sub
aas
pop
xchg
pop
and
inc
pushf
out
push
inc
mov
xorl
std
ljmp
cmpsb
push
pop
xor
mov
movsl
push
hlt
jl
movsl
test
std
jne
dec
test
popf
lds
adc
sbb
inc
mov
mov
data16
jl
lea
je
push
pusha
jb
xlat
out
clc
std
push
addr16
jp
xor
imul
xchg
xlat
xchg
test
jge
movsl
sbb
mov
and
and
int
mov
leave
and
mov
jno
xor
lea
sahf
sub
mov
or
adc
lods
xchg
test
mov
andb
mov
xor
aam
les
aas
xchg
add
adc
and
sbb
std
jno
dec
or
movsl
cmp
es
xor
movl
pop
push
add
mov
jmp
clc
push
imul
jno
int
enter
out
dec
mov
pop
repnz
insb
sarl
std
inc
fcmovnu
mov
pop
jp
jg
mov
jle
outsb
out
outsl
out
loop
sar
nop
adc
pusha
lods
inc
in
add
mov
cmc
ror
cltd
and
mov
clc
sub
mov
lret
jae
shll
jne
sub
and
ja
sbbl
popa
mov
pop
test
lret
in
dec
cli
mov
sub
jl
dec
mov
adc
pop
mov
pusha
cmp
add
xchg
mov
fcoms
cmp
xchg
inc
ss
cmp
rep
mov
jne
mov
stos
mov
push
pop
rcl
or
xchg
pop
andb
in
adc
xchg
push
cmp
mov
xor
call
push
sbb
pop
lea
inc
mov
in
mov
leave
imulb
test
sub
mov
lret
movsl
repz
push
movsl
popf
ss
dec
dec
jg
mov
int3
ret
jp
test
cmc
dec
push
fisubl
sbb
and
cmpsl
add
andl
mov
cld
or
fcmovne
int
dec
std
movsw
movl
pop
xchg
je
pop
fs
mov
roll
pushf
cs
mov
ret
popa
push
fadd
test
xor
adc
shlb
mov
sub
daa
out
push
adc
stos
push
xchg
fstpl
or
mov
pop
fwait
jb
popf
shrl
movsb
enter
lahf
imul
sub
movsl
icebp
cmc
dec
rcrl
aad
sbb
test
xlat
jl
mov
inc
es
mov
mov
movsl
stos
and
adc
xor
imulb
dec
mov
cwtl
sub
mov
mov
sbb
dec
inc
hlt
repz
scas
test
jle
xchg
or
insl
out
ds
cmp
push
mov
lret
lea
push
add
lahf
jb
dec
lcall
repnz
xchg
in
shrb
ds
lods
add
scas
loope
jmp
sub
jns
adc
imul
in
jns
xor
push
lds
xor
in
das
xchg
inc
mov
pop
sbb
fisttpll
cld
cmc
cmp
pop
imul
pop
sti
in
jae
sub
jns
mov
cmp
xor
bound
or
dec
mov
lods
sub
pop
dec
add
xor
jno
es
int
call
sub
out
lock
dec
cmpsl
int
outsb
movsl
leave
out
and
andb
xor
cmp
movb
dec
sub
js
test
lahf
cltd
mov
sub
das
push
mov
scas
xor
jmp
cmp
sbb
dec
pushf
loopne
push
mov
out
addr16
pop
jne
mov
fdivr
pop
mov
pop
jae
mov
jl
add
movsl
inc
pushf
sbb
push
addr16
xchg
xchg
lahf
cmp
xor
sbb
imul
inc
fildll
lds
out
dec
sub
sahf
test
stc
sahf
pop
adc
mov
cmc
mov
loope
push
pop
cmp
push
cmpsb
push
inc
and
mov
notb
jmp
rorl
adc
mov
pusha
jbe
popf
jnp
pop
push
jmp
mov
sub
test
mov
adc
test
int
sbb
lds
jge
call
sbb
shll
adc
movsl
sbb
and
or
movsl
sbb
jne
mov
std
cmp
mov
cmc
ljmp
fs
js
mov
loop
adc
dec
movsl
jecxz
cmp
jbe
lds
outsb
inc
aaa
mov
js
loope
sahf
jbe
subb
dec
fs
mov
js
lods
pop
fstpl
imul
xchg
test
test
pop
stos
add
test
clc
inc
scas
jns
mov
nop
lahf
push
sbb
xchg
mov
push
add
pusha
sbb
das
adc
lds
or
and
push
inc
pop
test
xchg
jp
jnp
pusha
aam
push
jmp
out
or
sti
loop
cmp
xor
jle
mov
int3
lcall
jbe
add
xor
lret
mov
mov
push
mov
add
cmpsl
sub
jnp
mov
dec
push
addr16
push
and
ret
mov
mov
das
pop
mov
ret
cmpsl
mov
movsl
popa
add
mov
or
leave
mov
bound
fdivs
data16
mov
scas
push
sub
sbb
std
jae
cld
hlt
icebp
das
sbb
mov
jbe
jno
jnp
jmp
inc
stos
addr16
test
mov
loop
mov
jg
push
std
inc
mov
mov
jecxz
lds
mov
push
hlt
add
stos
rcr
xchg
repnz
adc
jb
inc
push
scas
fisttpl
inc
adc
dec
movsl
inc
cmc
mov
jb
push
push
test
rcll
stc
popf
daa
sub
pushf
and
mov
mov
call
fwait
pop
stc
inc
popa
sbb
push
and
mov
sti
sub
sbb
and
xchg
jg
pop
pop
cmp
adc
sti
jbe
arpl
jl
cmp
push
sahf
dec
lret
jae
mov
dec
jecxz
test
cwtl
mov
add
add
movsb
dec
roll
nop
rorb
and
xchg
or
adc
add
stos
mov
mov
push
sub
push
mov
jl
sub
cltd
inc
rorb
mov
pop
lcall
inc
mov
sbb
xchg
into
pop
popf
pushf
adc
add
repz
rcl
inc
js
mov
jge
xchg
fs
lret
lcall
or
mov
sub
jae
xchg
mov
and
xchg
test
pop
scas
and
cmp
movsl
movsb
xchg
xor
cmpsl
pop
icebp
mov
imul
cmp
xor
ja
pop
scas
cmp
jo
aam
lock
mov
scas
pop
inc
mov
xchg
in
sbb
push
xlat
ds
movsl
fwait
pushf
inc
mov
adc
int
add
mov
movsl
xor
out
int3
popf
std
mov
lahf
in
test
stos
or
and
jle
push
mov
movsl
push
enter
jmp
movsl
dec
dec
orb
aam
mov
inc
int
xchg
out
scas
ret
jae
movsl
dec
cmpl
jge
jne
pop
sbb
adc
mov
jnp
dec
test
xchg
mov
mov
mov
sub
mov
pop
mov
test
test
mov
or
movsl
inc
push
arpl
mov
lock
subl
scas
mov
mov
roll
mov
push
dec
inc
jns
ja
mov
movsl
and
std
pop
dec
or
or
cmp
pushf
hlt
flds
push
lock
shll
sbb
add
pop
lret
cmc
subb
insl
pusha
pop
jecxz
out
out
data16
sbb
les
sahf
mov
push
push
xor
test
mov
out
movsl
sbb
js
adc
add
addr16
in
sahf
xor
fwait
or
in
sbb
and
movsl
sub
pop
fcmove
movsl
dec
dec
ret
fwait
popf
xor
sbb
mov
movsl
scas
test
lcall
xchg
mov
gs
pop
cmc
push
rolb
enter
or
inc
test
insl
jns
xchg
mov
int3
in
xchg
movsl
into
add
daa
pop
or
xchg
sub
add
jae
mov
addr16
movsl
inc
mov
xor
movsl
cmp
scas
and
jns
push
cwtl
daa
pop
aad
jae
mov
mov
lds
mov
fists
es
cmp
dec
push
or
mov
mov
and
adc
or
cwtl
negb
jl
mov
cwtl
icebp
es
movsl
or
mov
mov
movsl
or
pop
inc
sub
lret
mov
cmp
movsl
push
test
scas
movsl
movsb
add
dec
andl
rclb
push
mov
int
and
repnz
and
sub
movsl
cmp
mov
dec
ja
and
gs
iret
in
dec
push
movsl
dec
or
outsl
mov
aaa
daa
shlb
je
cmp
imul
push
andb
lea
or
cmpsl
and
movsl
pop
jecxz
das
pushf
jl
iret
sbbb
pop
add
ret
popf
into
mov
fdiv
ljmp
jbe
pop
and
mov
mov
dec
adc
jne
shld
dec
xchg
adc
add
scas
jo
dec
pand
hlt
lods
mov
int3
into
pusha
icebp
jnp
mov
xor
dec
aam
mov
insb
insl
mov
mov
add
stos
mov
aas
push
out
fisubrl
sbb
jb
mov
or
and
sub
aad
mov
pop
fdiv
inc
out
cmp
imul
mov
push
jmp
mov
popa
adc
imul
xorl
dec
in
dec
test
or
mov
add
rcrl
mov
mov
fwait
inc
push
sub
rcll
xchg
insl
loope
mov
rcr
in
movsl
aam
das
nop
mov
pop
xchg
mov
loope
out
movsl
sarl
xchg
leave
sub
adc
or
or
cwtl
and
jmp
rolb
xor
xor
movsl
sbb
xor
jne
push
addl
fwait
pop
or
inc
add
pushf
and
testb
lds
mov
addr16
fs
dec
sbb
mov
mulb
sbb
enter
pop
out
mov
test
mov
test
jbe
pop
mov
sub
mov
mov
aad
lret
jbe
mov
lahf
add
add
xor
rcrl
and
pop
cli
scas
add
lcall
fsubl
adc
movsl
mov
cmpsl
fs
movsl
cltd
outsl
add
call
adc
cmp
mov
sub
pop
movsl
insl
pop
jmp
test
ss
push
mov
xor
mov
and
aad
jne
push
or
int3
jns
adc
insb
jae
pushf
push
in
jle
xor
mov
dec
roll
movsl
out
mov
hlt
push
incb
rcr
mov
push
pop
push
pusha
mov
jns
push
insb
cmp
pslld
icebp
mov
rcll
xor
lds
push
mov
addr16
mov
movsl
dec
xchg
mov
sbb
inc
xor
xor
jne
ds
fsub
std
movsl
in
aaa
add
lds
push
stos
int3
push
inc
cmp
push
adc
test
ljmp
imull
push
addr16
out
call
xchg
or
push
xor
inc
ficomps
aad
cmpsb
adc
pop
pop
stos
pushw
cli
dec
dec
cld
sub
das
and
mov
mov
mov
test
fs
adc
movsl
push
mov
jge
lret
into
jnp
and
dec
sti
add
pop
in
fwait
das
add
movsl
mov
and
test
mov
jne
lret
mov
xchg
es
mov
sbb
loope
jb
pusha
outsb
std
xor
mov
jecxz
movsl
pop
cmpl
test
fwait
inc
dec
lcall
fcompl
stc
mov
push
xchg
aad
inc
xchg
sub
xor
mov
nop
call
add
cmp
jp
mulb
pop
push
scas
push
mov
shll
cs
movl
xchg
test
push
push
xchg
js
pop
lahf
ss
mov
pop
scas
cld
xor
shlb
and
pop
pushf
movsl
lret
mov
aaa
mov
dec
clc
xor
movsl
repnz
mov
jmpw
into
add
leave
lret
gs
ficoms
mov
outsl
in
pusha
dec
int3
call
lret
cmp
sub
and
mov
sbb
lods
movsl
and
adc
fld1
test
pop
ret
lods
sbb
in
jnp
push
sub
shlb
loop
cmc
mov
sub
fadds
imul
test
sub
mov
adc
movsl
xchg
imul
rcr
mov
mov
loope
loopne
movsl
call
mov
dec
movsl
dec
and
aaa
adc
sub
pushf
leave
popa
out
xlat
int
lea
and
mov
lods
fbld
cmp
push
adc
dec
jo
push
jge
inc
insl
jno
jb
pop
out
fndisi(8087
outsl
nop
sbb
sbb
aad
jno
mov
pop
push
std
adc
scas
dec
xadd
push
aam
pushf
movsl
or
lods
rorb
bound
mov
inc
cwtl
out
aad
into
mov
jge
in
ja
ficomps
mov
repnz
pop
test
jne
xor
movsl
ficomps
mov
movsl
dec
jge
iret
jle
dec
jae
push
sub
movsl
push
bound
or
popa
imul
fidivs
mov
jl
push
push
sub
fsubrp
divb
fisubl
mov
stos
test
and
test
jl
lret
mov
stos
cmp
jmp
push
cltd
sbb
jnp
and
push
sbb
xor
xor
leave
or
loope
mov
aam
insb
out
or
arpl
push
add
jg
pop
in
mov
loope
into
not
mov
mov
jno
int
sub
in
popa
test
xchg
adc
jecxz
and
lret
js
and
mov
aas
mov
movsb
mov
push
iret
sub
pop
sub
stos
add
mov
and
pop
push
repz
sahf
adc
or
inc
push
rcl
pop
or
lahf
je
fnstcw
sbb
cmp
call
data16
test
mov
pop
roll
push
movsb
push
insb
aas
pop
cmp
pop
push
movsl
xchg
scas
test
pop
pop
dec
pop
std
sbb
adc
pop
mov
sub
pop
sub
icebp
std
jmp
push
xlat
ljmp
enter
aad
icebp
push
not
dec
cmp
mov
cmp
xlat
dec
cmp
jmp
push
pop
mov
jmp
popf
push
cmp
adc
sub
mov
ds
xchg
push
mov
or
lret
xor
sahf
insb
cmp
and
and
sbb
call
xlat
pop
and
movsw
sbb
lret
enter
popa
lret
push
sti
sarl
xchg
sub
inc
inc
xchg
decb
test
ret
arpl
adc
sbb
jae
call
repz
xor
dec
aam
aad
and
xchg
std
sub
loopne
movsb
sub
les
push
imul
fstp
nop
jle
pop
sbbb
xchg
rcrb
loop
movsb
popa
xchg
stos
and
add
inc
xchg
xor
test
push
jecxz
xchg
and
movsb
mov
inc
test
neg
arpl
sahf
pushf
xor
sub
adc
dec
xchg
adc
and
lret
adc
es
or
pushf
xor
test
cmp
sub
dec
mov
push
adc
inc
cwtl
jmp
add
or
popf
pop
aaa
mov
lds
out
sbb
cmc
xchg
sub
push
jecxz
test
jnp
inc
mov
les
cmpl
and
popa
mov
pop
inc
mov
lahf
dec
stos
fstpt
xor
and
sub
jg
ret
push
clc
xchg
mov
mov
jbe
in
jmp
arpl
mov
mov
icebp
cmp
rcl
in
mov
ja
cwtl
in
sbb
vpsubusw
and
xchg
or
or
push
mov
or
xchg
repnz
push
mov
jecxz
ret
ss
stos
adc
fisttpll
pop
jno
cmp
stos
pusha
stos
mov
pop
adc
adc
mov
je
dec
pop
jge
gs
pop
inc
and
cmp
into
cmpsl
in
cmp
fs
push
and
pop
icebp
mov
mov
pop
mov
and
push
je
jge
mov
or
push
daa
inc
pushf
pusha
xor
ljmp
mov
jge
js
lds
sub
cmp
mov
fstpl
mov
mov
ljmp
leave
dec
jecxz
add
mov
loop
inc
adc
shr
lds
outsb
mov
inc
sarb
jmp
xlat
inc
imul
cmc
and
push
insl
mov
jae
clc
test
and
jle
icebp
mov
cmc
imul
mov
jge
aas
popf
sub
in
icebp
xor
xchg
cmc
or
adc
jmp
out
push
lret
imull
mov
daa
js
leave
dec
js
popf
mov
movsl
push
sbb
scas
mov
rcrb
leave
movsl
add
mov
stos
ja
stc
scas
ret
jne
das
mov
js
add
sub
cmp
inc
mov
iret
xchg
fbld
shrl
stc
leave
or
stos
sub
jle
dec
lahf
mov
addb
pop
xchg
adc
popf
push
sub
popa
pop
dec
data16
cmc
mov
cmp
xchg
ret
in
ja
addb
sub
sub
shl
sarl
out
cmc
jno
lcall
or
addr16
xchg
jnp
clc
mov
cmp
in
jl
mov
int
add
jge
imul
jecxz
push
push
xor
into
mov
scas
ficoml
sbb
adc
loop
pop
add
and
test
sub
cmc
and
popf
mov
stos
xlat
icebp
popf
xor
lds
adc
jns
cmp
sbb
push
subl
cmp
push
enter
cmpsl
or
fldl
lcall
cli
fsubr
aad
inc
jbe
in
pop
aas
out
movsl
sti
lret
inc
ret
aam
movsl
std
imul
ljmp
mov
out
fsubs
scas
clc
loope
movsl
pop
xchg
jmp
push
movsl
iret
adc
rol
push
inc
inc
fstl
dec
mov
stc
nop
mov
jnp
xor
incb
movsl
rorl
xchg
pop
xor
ljmp
xchg
xchg
jp
out
movsl
pusha
sbbl
cmp
out
stos
lcall
jne
neg
mov
xchg
mov
and
sti
push
jb
cmp
orb
xchg
xchg
push
xchg
cmp
outsb
insb
pop
gs
or
pusha
imul
ret
loope
add
lds
sub
pop
push
jl
scas
add
sbb
daa
popf
mov
scas
cmp
dec
mov
cmc
adc
in
pop
movsl
inc
insb
pop
push
lods
inc
arpl
in
push
cmpsb
andb
push
out
mov
or
pop
test
and
in
push
add
push
mov
lcall
int3
jb
cmp
xor
pusha
mov
repnz
loope
call
mulb
pop
or
cs
mov
mov
pop
mov
mov
aaa
lods
adc
lods
and
sbb
or
jnp
movsl
pop
sarb
mov
movsl
ret
scas
cwtl
ss
pop
test
and
pop
clc
cli
incl
xor
pop
fistpl
xchg
jo
leave
and
lods
es
fwait
xchg
cmp
in
negb
jo
ficoms
cmp
stc
and
lock
xor
cmp
out
sahf
hlt
movsl
ljmp
imul
pop
push
dec
in
inc
std
addr16
mov
jb
out
ficomps
push
out
adc
in
es
adc
movsb
ret
add
shl
inc
out
fisubl
repz
mov
in
nop
popa
movsl
pop
mov
sbb
addr16
mov
inc
ret
shr
cmp
movsl
fcomp
ljmp
xchg
stos
loope
add
lods
pop
test
add
dec
jnp
popf
xor
sub
lods
mov
and
loope
xchg
movsl
inc
add
fidivrs
dec
jno
pop
inc
jae
xor
adc
aam
sbb
int3
lcall
jae
pop
pop
popa
mov
loope
mov
mov
push
pusha
push
pop
out
lods
in
mov
scas
adc
jnp
ret
mov
mov
movsl
sub
inc
push
mov
inc
cmp
imul
xchg
inc
adc
and
mov
push
mov
stos
jge
inc
js
fnsave
ja
mov
cmp
mov
mov
dec
insb
test
movsb
movsl
mov
mov
movsl
xor
mov
movsl
mov
fsubp
lds
mov
pop
pop
jmp
movsl
xorl
movsl
pop
sbb
xchg
es
lds
divb
popf
inc
mov
or
mov
inc
mov
test
movsl
mov
xchg
mov
addb
stos
movsl
sti
push
push
neg
mov
movsl
js
jecxz
push
dec
data16
scas
movsl
xor
popa
neg
jle
dec
mov
lea
jmp
movsl
pop
add
dec
movsl
in
leave
push
call
add
js
push
ljmp
fptan
xchg
add
mov
sub
cmp
inc
popf
fistps
mov
loopne,pt
pop
test
cmp
test
js
pop
fcmovnb
movsl
ljmp
stc
mov
lret
pop
jle
mov
cld
movsl
imul
pop
gs
pop
dec
mov
jmp
sbb
cmpsb
jbe
mov
push
dec
cs
cmc
nop
mov
test
iret
add
and
lods
push
or
inc
cmp
push
hlt
in
ja
cwtl
ret
jmp
movsl
sub
mov
loope
adc
dec
clc
out
movsl
orl
add
push
decl
sub
cmc
sbb
mov
xor
lret
movsl
testl
movsl
mov
xchg
insb
and
sti
stc
dec
andb
mov
xchg
xor
sar
inc
loop
mov
inc
sub
loope
add
and
mov
cmp
andl
ret
xchg
fwait
lods
push
movsl
data16
add
sub
inc
ss
add
mov
or
cmp
mov
es
and
test
push
push
imul
std
aam
popf
testl
lds
out
push
fimull
mov
pop
or
bound
addr16
cmp
or
loopne
shlb
mov
mov
sub
jle
cmp
data16
push
fcom
out
mov
mov
lds
leave
add
sbb
mov
loop
sub
movsl
cmp
repz
movsl
xor
std
push
popa
gs
adc
call
push
aaa
mov
mov
xor
test
jo
scas
xor
in
pop
in
int
and
pop
dec
ja
movsl
lods
jb
jbe
pop
xchg
cmp
mov
xchg
mov
or
ja
cld
lods
loop
rep
fsubl
aad
sahf
rolb
inc
aad
mov
ljmp
test
stos
movsl
add
addr16
jp
mov
pop
test
mov
push
pop
jl
test
inc
clc
gs
xchg
push
mov
loop
push
push
xchg
jnp
inc
cmp
stos
les
mov
add
add
push
pop
and
and
dec
inc
mov
jb
movsl
sub
nop
mov
pop
movsl
mov
xchg
rolb
push
stos
scas
cld
in
push
aad
ret
lods
sbb
and
mov
outsl
xchg
aas
mov
jno
rorb
lds
in
jb
fs
sub
pop
pushf
cmpsl
and
jnp
mov
add
xchg
xchg
xchg
ret
cmp
scas
cltd
js
pop
or
movsl
sti
and
adcl
add
lds
movsl
mov
das
pop
shlb
add
xchg
fwait
repz
mov
pslld
dec
cmp
inc
mov
and
lea
out
out
ds
push
jecxz
pop
lods
movsl
mov
mov
cmp
sbbl
mov
ljmp
inc
sub
mov
movsl
test
enter
push
movsl
xor
mov
mov
mov
push
insl
push
rcrb
inc
movsl
inc
das
jae
dec
loope
cld
movsl
aam
mov
xor
js
movsl
add
ss
lret
cmp
push
or
ret
movsl
jge
adc
lret
movsl
nop
out
pop
mov
mov
iret
mov
movsl
ret
cmpsl
or
jo
shr
add
or
loopne
out
adcb
inc
movsl
push
mov
fdiv
pop
rclb
inc
xchg
mov
arpl
fistps
js
mov
push
xchg
out
or
jl
sub
sbb
mov
and
mov
mov
addb
aam
push
mov
xor
sbb
mov
pop
inc
es
xchg
insl
cmc
xlat
gs
xchg
movsl
sbb
sub
fldt
pop
and
xchg
imul
jo
out
sbb
xlat
xchg
divb
pop
cli
push
jmp
cmc
and
push
cmc
dec
std
cmp
in
sub
fcomps
push
popa
add
bound
lods
fcomip
xlat
pop
jle
inc
sti
aaa
push
ja
mov
cwtl
cmp
and
cmp
xchg
fsubr
repz
xor
xchg
stos
mov
orb
shr
js
cmp
cs
or
adc
je
arpl
xchg
loope
jno
cmp
mov
adc
movsl
mov
cmpl
xor
movsl
xor
or
xchg
outsl
in
scas
stc
test
jge
mov
out
mov
movsl
jne
inc
arpl
shll
push
ret
xor
outsb
popa
dec
pushf
dec
int
inc
and
cmp
xchg
in
mov
sbb
xchg
or
mov
ljmp
adc
test
mov
movsl
mov
mov
push
pop
dec
push
cli
mov
fsubl
outsl
cmp
xchg
outsb
and
add
movsb
mov
xchg
nop
jns
cmpsl
movsl
stc
dec
frstor
jbe
inc
movsl
lea
pop
mov
pop
fs
in
addr16
sahf
adc
and
aad
cmp
enter
cli
movsl
bnd
int
push
adc
lods
mov
adc
les
movsb
jmp
loope
mov
je
push
movsl
lret
or
stc
add
cld
mov
jp
jle
movsl
fcoms
pop
cmpsl
lods
cmp
repnz
movsl
into
jno
mov
pop
mul
movsl
sbb
dec
shl
ret
movsl
and
dec
jno
mov
adc
dec
in
bound
adc
into
xor
sub
out
cmp
fnstcw
scas
cld
adc
es
sub
jno
fs
sar
adc
imul
and
clc
mov
pop
pusha
insl
adc
adc
add
jns
adc
incl
and
fidivs
mov
push
movsl
roll
push
das
xchg
pushf
ds
movsl
xlat
mov
sbb
movsl
adc
addr16
imul
cmp
or
adc
insl
pusha
dec
imul
movsl
hlt
shll
push
stos
into
add
push
mov
dec
and
sub
sub
test
and
fs
sti
and
fucomi
add
mov
jmp
jp
mov
jg
sarb
movsl
rclb
or
push
pop
sbb
mov
mov
les
out
call
movsl
mov
mov
push
nop
stos
addr16
pop
cmp
or
adc
sub
mov
mov
and
mov
scas
mov
loope
aas
hlt
stc
sti
les
movsl
mov
lret
jg
push
sub
jae
push
popa
mov
jns,pn
mov
sub
in
loope
repnz
pop
jno
lret
xchg
push
or
mov
sarl
adc
mov
movsl
jo
xchg
lret
pop
dec
into
sbb
push
mov
sbb
les
xchg
xchg
stos
cmp
decl
cmp
ss
push
sub
cli
pushf
fists
add
int3
movsl
lea
call
push
icebp
push
stos
add
outsb
arpl
movsl
sub
xor
or
mov
stc
icebp
mov
fsubl
mov
mov
sbb
mov
sub
cltd
jne
dec
addr16
in
push
mov
sbb
mov
loop
rclb
repnz
jmp
add
aad
lods
aam
outsl
and
mov
mov
pop
pop
lods
cmpb
pop
test
fwait
xor
in
ss
adc
movsl
aaa
inc
sbb
mov
mov
jp
sbb
mov
addr16
pop
dec
dec
jle
adc
mov
cwtl
mov
inc
and
mov
push
inc
xchg
daa
out
add
adc
stc
mov
mov
push
adc
inc
sub
sub
stos
or
push
add
cmc
mov
int3
xchg
jmp
xchg
pushf
in
add
sbb
leave
in
cltd
rclb
and
pop
dec
pop
in
popa
test
les
fisttpl
popa
movsb
and
popa
out
icebp
repz
dec
out
lret
lret
and
dec
cmp
inc
in
jne
adc
es
cmc
push
pop
dec
inc
cwtl
push
jmp
cmp
mov
ret
xchg
pop
jo
sbb
mov
or
xor
xlat
clc
jnp
mov
out
inc
push
pushf
scas
xor
push
in
pop
imul
mov
in
cmp
es
sti
sbb
pop
xor
inc
xlat
and
mov
data16
test
add
movl
xlat
rcr
sbb
cmp
insb
and
cmp
mov
inc
iret
and
push
sbb
in
ja
pop
mov
pop
sbb
push
imul
pop
push
icebp
add
xchg
sub
mov
clc
mov
sbb
sub
dec
mov
std
clc
pop
and
and
rcrl
mov
sub
push
push
xor
pop
pop
outsl
inc
xchg
push
sbb
jne
insb
dec
sub
arpl
lods
movsb
mov
into
popa
jl
adc
loop
andl
call
adc
iret
mov
inc
outsb
cs
push
xchg
scas
sub
mov
ljmp
mov
jecxz
sub
call
pop
icebp
push
push
jnp
add
inc
adc
cmpsl
cmp
xlat
mov
and
popf
test
push
jecxz
lret
push
int
jno
mov
add
movsl
sub
daa
xor
lods
aad
xchg
adc
lret
mov
shlb
fistl
repnz
in
insb
pop
cmc
js
cmp
fstps
inc
or
pop
jecxz
in
cmpsb
js
push
xchg
push
pop
or
leave
adc
dec
mov
call
and
rolb
mov
sub
icebp
or
stos
inc
movsl
out
jns
loopne
sbb
sub
jg
cmc
jbe
xchg
loop
mov
mov
jns
mov
push
dec
in
and
or
xchg
add
push
jnp
rolb
nop
cmp
sahf
je
pop
or
in
sbbl
inc
lods
clc
xchg
mov
mov
mov
stos
xor
jno
outsb
rolb
mov
xchg
rcll
popf
mov
lcall
andl
pop
cmp
jnp
icebp
cmpl
sub
es
fnstcw
cltd
adc
cmpsb
test
mov
push
xchg
cmp
popa
popf
je
sub
xor
sbb
movsl
orb
push
cwtl
movsl
and
mov
mov
push
mov
dec
jle
cmp
cmp
mov
mov
gs
movsl
jmp
inc
enter
into
lods
xchg
out
les
mov
bswap
jg
fldl
or
cmp
pop
mov
movsl
iret
out
adc
movsl
and
cmp
xchg
adc
movsl
cmpsl
pushf
aaa
mov
arpl
movsl
call
test
sub
clc
mov
shlb
fcomip
addr16
movsl
pop
mov
fcmove
aad
sti
mov
xchg
movsb
imul
push
jmp
and
adc
adc
cwtl
mov
shl
stos
add
in
add
pop
shlb
xchg
arpl
xor
pop
cmc
out
movsl
or
push
pop
dec
jg
shll
push
pop
insl
jbe
dec
movsl
ja
ss
lock
int
or
ds
fcompl
mov
insl
loopne
adc
icebp
mov
mov
ret
push
test
cmp
or
lock
cld
pop
inc
xchg
jle
movsl
cmpsl
arpl
add
jo
jp
mov
cli
push
inc
outsl
dec
outsb
jno
push
int3
mov
jmp
and
sarl
cmp
sub
jl
movsl
ja
inc
jmp
movsl
jne
push
dec
in
scas
movsl
out
mov
inc
push
add
cmp
push
and
mov
cmp
je
sbb
scas
mov
cli
test
mov
movsl
icebp
pop
adc
jp
shlb
sahf
push
jne
shll
add
getsec
data16
movsl
or
mov
sub
jecxz
addr16
lret
add
lahf
gs
pop
icebp
and
pop
leave
std
in
fildll
movsl
inc
jg
push
test
xchg
or
es
gs
int3
push
mov
ficoms
or
dec
sbb
hlt
movsl
mov
xor
popa
add
pushf
mov
dec
mov
ljmp
das
push
or
movsl
cs
out
divl
test
cli
and
mov
mov
mov
xchg
xor
or
dec
and
test
push
mov
scas
xchg
xchg
pop
fisubrs
pop
pusha
jge
push
push
mov
add
in
fnstcw
pop
add
xor
mov
insl
push
ljmp
pop
inc
cld
lds
xor
sti
movsl
add
call
imul
dec
add
xchg
mov
push
jne
inc
jbe
jecxz
cmpb
test
loop
lea
mov
push
fildll
jmp
repnz
sahf
aam
outsb
arpl
inc
mov
bswap
test
movsl
dec
data16
das
add
adc
inc
fnstcw
pop
xchg
mov
mov
in
mov
cmpsb
lret
push
movsl
out
cmp
rorl
sbb
push
add
cmpl
fwait
outsb
mov
jle
rcrl
fidivs
cmc
pop
inc
push
or
or
push
popa
jle
cmp
lret
mov
insl
dec
movsl
mov
xchg
ret
sub
stc
outsb
shrl
cmp
dec
jns
je
add
jo
sub
push
mov
aad
movsl
add
mov
shlb
loop
fisttpl
roll
jle
test
jl
pop
in
xchg
enter
add
mov
pushf
cwtl
xlat
cmp
dec
xchg
lds
icebp
and
lods
mov
mov
daa
xlat
mov
fisubl
ret
setb
movsl
data16
push
dec
or
int3
and
popf
xchg
fwait
jmp
push
data16
and
xor
test
jo
ret
test
pop
loope
test
mov
fisttpl
cmp
in
movsb
scas
sbb
pop
aaa
mov
mov
je
push
cmpl
mov
lret
mov
xor
les
repnz
xor
popl
rclb
xor
lcall
cmp
sub
jl
stos
or
cmp
hlt
fmuls
fwait
dec
lods
test
pop
clc
enter
pusha
sbb
aas
icebp
jle
pusha
movsl
call
push
repz
movsl
pop
fwait
test
pop
mov
je
rclb
in
repz
movsl
add
adc
mov
out
in
in
testb
or
add
sti
insl
mov
sbb
jle
movsl
add
lea
and
cltd
jns
xchg
mov
xor
sub
inc
mov
mov
jbe
cmp
push
push
sub
push
mov
popf
fsts
mov
cld
movsb
andl
nop
pop
mov
cli
dec
sbb
ret
add
test
popa
cld
mov
les
fsubr
aad
pop
ja
sbb
lcall
fists
std
out
int
mov
adc
and
fldl
out
loop
in
mov
sub
nop
xchg
in
or
inc
dec
jp
sti
lret
out
movsl
mov
rcll
movsl
dec
mov
jg
cli
push
adc
insl
dec
ret
roll
test
leave
mull
mov
scas
movsl
cwtl
ret
cld
add
imul
adc
movsl
int3
xchg
xchg
adc
inc
dec
lret
nop
insb
in
pusha
ss
inc
cmp
hlt
iret
movsl
into
cltd
inc
or
and
mov
sbb
stos
cmp
inc
imul
cmc
sbb
and
cmp
jns
jge
inc
loop
shll
enter
sbb
fnstenv
loop
fsts
mov
xchg
cmpsb
adc
mov
call
sahf
push
jg
sbb
movsl
mov
xchg
movsl
cld
cmp
xor
and
sahf
pop
mov
cmovo
loop
arpl
mov
cmp
bts
out
add
xor
inc
mov
mov
lods
shll
inc
mov
idiv
lret
mov
frstor
mov
ret
jmp
xor
jge
mov
movsl
enter
add
ret
push
es
adc
testb
movsl
lcall
movsl
mov
sbb
and
mov
test
adcl
mov
xchg
aaa
movsl
inc
dec
sbb
push
movsl
lret
jns,pn
pop
jg
pop
scas
fbld
cli
stc
mov
cmpsb
aaa
sbb
or
push
mov
movsl
mov
mov
jp
je
invd
jns
rorl
loop
aad
push
pop
in
das
movsl
dec
outsb
fs
mov
pop
inc
in
ficoms
andb
ljmp
aad
popa
cmp
mov
mov
xchg
xorl
xchg
test
andb
adc
sub
cli
repz
movsl
insb
pop
mov
push
and
pusha
outsl
lds
hlt
std
add
pop
mov
xorl
pop
pushf
mov
out
rcll
jnp
pop
loope
je
stos
frstor
in
cmpsl
mov
and
adc
sub
movsl
out
stos
in
lret
mov
or
ds
movsl
aaa
jnp
cmpb
arpl
rcrb
and
aad
insl
test
ret
in
cmpl
push
mov
insb
xlat
jmp
mov
mov
lock
xchg
shll
movsb
mov
call
mov
dec
aaa
frstor
push
xlat
and
jp
push
mov
push
push
shl
and
lds
dec
ficomps
mov
push
mov
imul
and
adc
and
adc
popa
sahf
pusha
jmp
and
pmaddwd
or
mov
mov
sahf
push
lock
mov
xor
jae
jns
fsub
test
icebp
pushf
popf
outsl
hlt
dec
mov
sub
push
or
inc
mov
std
arpl
lret
inc
inc
sub
sar
pop
testb
or
push
vpavgb
dec
mov
je
js
sub
iret
mov
shlb
add
jbe
pop
jo
or
lock
add
shl
or
inc
aas
lcall
mov
push
inc
sub
mov
sub
push
jecxz
xchg
adc
push
stos
push
sub
les
or
scas
xor
adc
cmp
addr16
das
mov
lcall
movsl
sbb
xchg
mov
sub
scas
add
inc
or
stos
in
test
sub
sub
sbb
mov
or
xor
int3
lock
jp
dec
lret
xorl
mov
jno
xchg
xor
ljmp
mov
inc
and
in
push
fadds
mov
fsubrl
std
adc
test
daa
jns
push
int3
adc
xchg
cmpsb
pop
stos
mov
icebp
ds
and
pop
add
imul
movsl
inc
push
inc
mov
cmpsl
mov
loope
jecxz
sub
lds
sub
lcall
mov
sbb
sub
jnp
insl
and
adc
push
flds
or
sub
mov
jge
insb
fcmovnu
ret
ja
xchg
outsl
movsb
add
repnz
icebp
mov
inc
loope
cmpsb
push
add
jno
mov
xor
scas
sbbl
ljmp
into
jmp
in
push
jecxz
inc
pop
xlat
sub
jno
repnz
movsl
and
stos
int3
inc
jnp
in
sub
adc
mov
shll
xchg
xchg
pusha
ljmp
mov
imull
mov
into
fcomi
jge
popl
and
lea
cli
loopne
lret
sub
adc
aad
xchg
ret
stc
cmp
sub
shl
scas
push
mov
pop
mov
sbb
inc
mov
cmp
xlat
rcll
call
mov
mov
mov
cld
xchg
dec
and
mov
cmp
pushf
inc
int
add
or
scas
insb
sbb
xchg
bound
ljmp
sbb
inc
jnp
xor
in
cld
mov
and
push
nopl
add
mov
mov
xchg
inc
mov
inc
popa
push
addr16
cld
rorl
mov
dec
shlb
out
push
mov
or
fsubrp
jae
cmp
in
cmp
lds
jge
jb
pop
lock
js
out
add
sub
pop
insl
push
lcall
int3
movsl
mov
mov
int
pushf
sbb
and
mov
gs
movsl
aas
mov
sub
stc
adc
out
movsb
stos
push
pop
jge
inc
and
cs
mov
mov
pop
ds
xchg
movsb
popa
movsl
cltd
xchg
das
packsswb
push
inc
clc
int
or
mov
sub
jge
jg
xor
test
scas
jmp
pop
push
sbb
lcall
out
fcomp
pop
cmpsl
shll
jb
cmp
jnp
sbb
mov
xchg
mov
mov
in
jnp
xchg
js
sbb
add
out
daa
mov
movsl
cmpsb
fwait
popf
rsqrtps
cmc
adc
add
xchg
xor
jge
sbb
xchg
inc
rol
movsl
lock
jns
mov
rcrl
lcall
jb
lret
mov
movsl
and
pop
in
cmc
mov
repnz
bound
mov
gs
mov
call
lret
dec
fisubs
aad
sub
movsl
scas
and
movsl
aam
divl
jg
in
movsl
fstp
adc
syscall
fdivp
movsl
loop
cld
add
jle
stos
mov
push
push
jnp
pop
mov
fistps
jg
mov
pop
jae
dec
fs
adcb
shrl
scas
insb
stos
jl
inc
xchg
lods
test
cmp
cwtl
in
inc
jb
mov
pop
in
sub
mov
gs
hlt
and
push
xchg
and
fnstsw
clc
cmp
aaa
ret
rclb
popa
in
gs
daa
pop
lret
sub
pop
add
cmpsb
mov
dec
mov
adc
push
xchg
pop
push
mov
jmp
add
ss
cmpsb
cmp
test
fidivrs
push
cmp
sub
pop
pop
cs
inc
mov
and
out
int3
jle
int3
loope
cmp
pop
lahf
xor
pop
movsl
sti
pop
lret
dec
jl
dec
fnstsw
add
mov
cmp
or
test
pop
dec
cltd
dec
cwtl
popa
iret
inc
nop
popf
ficomps
loope
jb
out
mov
pop
mov
xor
jl
sbb
fwait
add
mov
jmp
sbb
dec
push
jnp
pop
adc
jo
mov
adc
stc
jnp
fcmovnb
test
mov
outsb
mov
leave
leave
jne
jne
leave
stos
imull
std
test
pop
sbb
xchg
shlb
sarb
arpl
loopne
dec
icebp
pop
cmc
cmpsl
lret
push
in
xchg
push
into
ret
fdivrs
sbb
mov
inc
push
pop
push
xor
jns
subl
cwtl
cmp
push
sub
sbb
xchg
or
xor
arpl
stos
lds
mov
lcall
xor
ror
mov
dec
adc
xor
outsl
call
int
and
dec
clc
ja
dec
and
inc
push
dec
popa
adc
or
out
lock
lock
cmp
xchg
add
sbb
add
sbb
test
inc
cmc
sbb
js
fldln2
iret
and
push
scas
loop
arpl
in
pop
lods
stc
mov
ret
insb
movsl
and
sub
mov
sub
lods
repz
cmp
adc
push
xor
adc
repnz
and
mov
push
dec
data16
xlat
frstor
movsl
mov
shl
andb
leave
movsl
out
jmp
jl
out
sarb
jecxz
push
movsl
dec
jno
aas
cwtl
push
call
push
in
inc
leave
jle
outsl
pop
sahf
mov
das
xchg
sub
and
loop
lret
in
mov
jge
icebp
movsl
push
push
jnp
mov
xchg
and
lods
iret
decb
int3
movsl
aam
xchg
out
les
push
and
adc
xchg
movsl
cmp
data16
cld
test
pushl
push
inc
mov
movsl
jne
inc
mov
movsl
in
cld
pop
pusha
bound
sahf
xor
imul
xchg
sub
aam
add
call
mov
and
dec
xchg
movsl
mov
jl
cmp
pop
dec
pusha
jno
test
fs
or
incb
mov
push
shlb
shrd
movsl
sub
out
fistps
adc
pop
lock
pop
mov
aad
aad
cmpsb
adc
add
jno
mov
inc
movsl
xor
insb
jecxz
arpl
jae
incl
movsl
scas
shr
aad
call
push
add
orl
lcall
rcrl
jmp
cli
xor
pop
fsubrl
jo
inc
out
or
outsl
lcall
or
and
and
xor
shlb
fsubs
mov
or
jl
push
lret
lock
push
fimuls
inc
jne
andb
sub
ret
or
lods
mov
cmpl
sub
jb
adcl
cmp
sub
mov
adc
in
push
pop
jae
push
inc
adc
rolb
mov
cld
repz
loopne
in
lcall
inc
or
xchg
cltd
and
movsl
mov
xorb
push
movsl
shrb
pop
bound
jb
jo
movsl
sbb
jge
inc
hlt
sbb
cmp
lea
mov
lds
mov
mov
nop
into
popl
adc
mov
jle
loop
pushf
aas
movsl
and
lds
daa
ja
mov
mov
js
and
xchg
lods
push
in
cmp
inc
jp
mov
mov
dec
dec
pop
js
popa
pop
movsl
xor
ficoml
shufps
pop
sub
xor
push
cwtl
push
sbb
out
mov
push
mov
and
mov
and
stc
movsl
mov
out
pop
stos
push
add
data16
push
loop
movsl
in
gs
xor
sti
movsl
es
sub
jmp
dec
dec
mov
movsl
add
repz
out
cmp
orl
inc
jg
add
inc
pop
and
jne
idivb
adc
nop
xor
movsl
lret
and
loop
outsb
movsl
bound
movsl
pop
arpl
stc
imul
shlb
sbb
lret
ret
add
sub
pop
mov
hlt
subl
xor
movsl
popa
fadd
push
xchg
cmp
jo
std
fisubs
mul
jg
stc
mov
js
movsl
dec
outsb
popf
loope
call
jo
push
stos
sbb
xchg
push
xor
lret
js
movsl
or
jg
movsl
ljmp
lcall
adc
xor
sahf
xor
movsl
filds
in
popf
cmp
das
or
std
lret
and
lock
cmpsl
out
loope
out
mov
pop
je
xchg
es
cmp
pop
movsl
mov
push
cmp
loop
es
push
hlt
out
pop
lods
dec
ja
mov
aam
fnstenv
dec
icebp
push
mov
mov
mov
mov
ret
sahf
das
fnstenv
popf
push
jle
lret
mov
sti
movsb
int
pop
mov
in
imul
sbb
jle
cmpsl
jno
cmpsb
enter
frstor
push
std
cltd
popf
mov
or
jle
sub
aad
cmp
push
out
movsl
jns
mov
movsl
insl
sbb
sbb
mov
xchg
mov
xchg
negb
rcr
pop
or
shlb
pop
adc
pusha
and
mov
mov
xchg
sahf
insl
lods
js
push
aas
ret
push
out
mov
clc
es
out
popf
push
xchg
push
dec
jae
out
movsl
sti
cmp
out
push
movsl
mov
sub
ds
ss
cwtl
jae
das
int3
lods
stos
or
adc
push
xor
jl
mov
and
pusha
movsl
insb
lahf
or
loopne
mov
test
add
jmp
xchg
outsb
in
sub
sbb
xchg
mov
adcl
push
sub
cltd
add
mov
jp
fwait
xor
mov
push
adc
xchg
movsl
mov
add
leave
movsl
inc
xchg
jbe
sbb
test
mov
lods
inc
movsl
mov
mov
jmp
or
inc
popf
imul
push
incb
test
inc
scas
mov
stos
sbb
ret
in
xor
or
sub
cmp
pop
into
lods
sub
sbb
pushf
movsl
or
mov
stc
movsl
dec
add
mov
cmp
mov
or
adc
lods
pop
mov
call
fistps
sub
dec
xor
pop
shlb
fsubl
jecxz
repz
lahf
movsl
xchg
aas
test
xchg
adc
out
es
pop
movsl
xor
inc
cwtl
lea
mov
cmp
fiadds
sahf
cli
lahf
and
cmpsl
sbb
out
fdivr
mov
icebp
movsl
out
fsts
sti
lret
jae
inc
insb
movsb
or
ds
add
lods
or
mov
lock
push
sub
mov
xchg
cmp
test
xor
movsl
aad
lret
das
xor
jo
jecxz
adc
lea
push
gs
and
addr16
gs
pushf
xor
test
negb
imulb
dec
sub
aam
mov
movsl
sar
sahf
lods
ret
jno
ret
mov
popa
mov
js
adc
push
mov
fnstsw
jno
leave
dec
dec
stc
into
mov
inc
inc
bound
lds
rclb
leave
mulb
movsb
push
cmp
mov
push
lcall
pop
rolb
movsl
sarl
and
push
cmp
xchg
and
inc
sbb
in
add
cmp
cmp
adc
xchg
mov
adc
into
cmpl
movsl
add
sbb
movsl
pop
xchg
test
loopne
xchg
flds
iret
mov
pop
pusha
mov
flds
ret
adc
push
fs
iret
mov
add
popf
xchg
and
inc
cwtl
je
inc
ja
in
or
repz
push
mov
arpl
dec
pushf
mov
add
mov
out
sbb
push
cwtl
adc
popa
inc
mov
xchg
sub
mov
dec
xchg
or
das
cmpsb
aas
mov
lods
daa
sbb
push
adc
fnsave
mov
mov
mov
sbb
mov
push
mov
inc
sub
inc
xor
je
ja
or
stos
cmc
inc
mov
lock
sahf
cmc
or
insl
push
pop
das
cli
sub
stos
sub
test
loop
sub
pop
sub
xor
sti
popa
sub
jnp
leave
xchg
test
and
adc
inc
cld
sbb
xchg
in
sti
hlt
jae
into
stos
xor
rclb
push
lock
jae
test
cmp
jl
pop
ret
push
jmp
inc
or
jbe
pusha
jo
aas
and
sbb
arpl
mov
call
test
les
stc
xlat
pop
lret
sti
lahf
add
sbb
inc
push
mov
int
inc
pop
sub
jg
mov
cmc
fcmovu
out
test
push
push
pop
out
xchg
aas
mov
pop
mov
les
mov
mov
psubsw
adc
push
into
dec
imul
fmull
movsb
aaa
movsl
mull
xor
iret
and
test
in
xchg
xor
cli
imul
or
mov
xchg
push
mov
sbb
push
xchg
addb
enter
xor
mov
fsubs
loop
inc
std
movsl
leave
out
test
mov
push
cmpsb
movsl
xchg
sub
dec
aam
bound
popf
lcall
and
pop
cmpsl
mov
mov
fnsave
rorb
mov
mov
pop
pop
xor
scas
mov
or
add
dec
adc
push
and
popf
mov
or
cmc
sbb
in
sub
sbb
out
jge
xlat
adc
shll
jg
mov
jae
add
mov
inc
loopne
dec
cld
push
cmp
ret
mov
cmc
inc
and
adc
and
in
jmp
repz
push
jl
scas
fisubs
dec
dec
add
lret
mov
in
out
movsl
push
dec
xor
ss
xchg
sahf
add
inc
movsl
push
jbe
adc
dec
lcall
in
mov
call
into
out
xchg
push
inc
loopne
out
fsts
in
sti
repz
ss
lea
xor
add
ja
outsb
scas
bound
sbb
mov
mov
mov
ret
xor
sub
jmp
pop
jp
mov
sbb
lds
dec
lret
movsl
push
mov
adc
movsl
fists
test
mov
jnp
insb
mov
push
in
sub
jmp
cwtl
dec
pop
xor
jmp
into
in
clc
cs
ljmp
leave
inc
movsl
int
test
mov
movsl
lret
popa
and
je
stos
pop
mov
cmpsl
clc
popa
stos
xchg
pop
in
mov
es
test
stc
jecxz
adc
adc
lret
xorl
sbb
or
ffree
icebp
rorb
adc
mov
addl
stos
repz
out
mov
or
sub
pop
icebp
inc
lcall
test
lock
daa
cld
insl
xchg
cwtl
jmp
imul
mov
and
inc
sbb
loope
cmp
or
jl
xchg
push
or
insb
mov
dec
int3
xchg
sti
sahf
cmp
rcll
mov
out
pushf
mov
xchg
xor
stos
es
or
xchg
inc
cmp
out
jns
fcmovu
incl
cltd
mov
xchg
loop
cmpsl
bswap
jmp
shrb
cmp
push
rolb
movsl
aam
sbb
movsl
cmp
test
mov
pop
sahf
jno
out
push
xlat
pusha
sbbb
xchg
or
xchg
cli
out
iret
je
push
std
rcrl
jnp
sti
gs
mov
loop
outsb
std
xor
xor
icebp
xchg
push
test
sub
add
data16
sub
loopne
or
ja
out
sbbb
mov
adc
add
movsl
jbe
adc
rcrl
shrd
xchg
xchg
int3
push
and
sub
mov
scas
insb
movsl
xchg
pop
mov
xor
jne
outsb
mov
jo
mov
add
lds
sub
sbb
fidivl
js
jmp
fldcw
push
push
jle
into
loopne
and
inc
aad
xchg
sub
xchg
aam
cmpsb
inc
adc
mov
out
out
pop
fs
popa
push
addr16
movsl
outsb
sbb
xchg
pop
and
cmc
mov
xor
push
outsl
enter
jns
pop
lret
repnz
sub
pop
jle
mov
xor
cmp
in
movsl
push
add
imul
dec
xor
nop
mov
inc
mov
add
rol
sbb
dec
in
dec
jmp
decl
call
sbb
movsl
push
imul
or
dec
movsl
cmpsb
imul
ret
mov
cmp
add
loopne
push
ffreep
loop
mov
sti
push
loope
outsl
or
dec
ljmp
lea
movsl
lret
inc
imul
lds
or
jne
bound
cli
pop
mov
or
test
sahf
insl
lds
jmp
mov
lret
call
movsl
fldcw
mov
fidivrl
and
mov
mov
cmc
out
xlat
hlt
pop
push
sbb
add
jmp
xchg
xor
sbb
mov
rcrl
int
fs
ljmp
jno
xor
aam
jmp
xchg
mov
cmc
add
es
xchg
lret
add
and
cmpsb
mov
mov
jne
arpl
xchg
jle
inc
push
rcr
mov
sbb
inc
les
fs
or
enter
push
push
gs
aam
jb
xchg
clc
pop
movsl
xor
jnp
sbb
and
mov
xchg
in
fistps
dec
add
or
sbb
jo
mov
sbb
fwait
sub
or
gs
sahf
cmp
mov
mov
popl
stos
dec
movsl
inc
scas
push
push
dec
jle
lods
lret
leave
out
xor
jno
push
in
pop
movsl
out
xchg
cmp
inc
std
movsl
mov
ds
jae
sbb
shr
movsl
out
add
cli
arpl
jns
pop
lds
jne
sbb
ret
or
pop
mov
fcomi
inc
lcall
dec
sub
adc
push
std
jmp
test
aad
push
in
fldenv
imul
mov
xchg
ja
inc
cmpsl
jge
pop
mov
inc
in
ss
cltd
sub
mov
pushf
xchg
insl
dec
mov
mov
fcoms
mov
xchg
sub
mov
aam
jp
xchg
lahf
cmp
pop
mov
sub
movsl
lds
and
xchg
gs
sbb
les
int
imul
push
or
push
sbb
pop
shrb
pop
sbb
jbe
sahf
jmp
imul
ja
sub
int
push
icebp
movsl
jp
repz
push
adc
pusha
push
stc
addr16
out
jne
dec
imul
cmp
xchg
cmp
imul
movsl
fwait
cs
insb
ds
push
cli
movsl
stc
and
xor
add
sub
aaa
popf
push
cmp
inc
aad
adc
sub
xor
push
xchg
shrb
lods
movsl
test
adc
or
rcr
cmp
and
aaa
int3
mov
ja
inc
sti
out
movsl
sub
mov
inc
xor
stos
jae
scas
cmp
cs
movsl
jle
addr16
pop
mov
push
cmpb
dec
in
fs
movsl
icebp
loope
arpl
jo
jg
sub
aam
sbb
adc
mov
jg
adc
cltd
ret
xchg
mov
mov
xchg
loopne
xchg
lds
sub
call
and
lcall
test
mov
xlat
aaa
lds
sub
out
movsl
ja
add
movsl
movl
rcl
and
and
in
addr16
movsl
push
cmpsb
adc
xchg
clc
inc
movsl
aaa
testl
movsl
cli
jecxz
xlat
xor
movsl
popf
cld
mov
push
movsl
push
sbb
mov
repz
mov
xor
scas
push
xor
mov
sbb
and
mov
cli
movsl
in
ljmp
movsl
mov
pop
add
sbb
mov
lods
sbb
movsl
inc
jne
loope
faddl
jmp
mov
lret
mov
push
inc
cmp
inc
jo
mov
inc
xchg
and
leave
pusha
imul
lock
stos
lahf
xchg
and
xchg
jmp
xor
pop
xor
out
enter
mov
and
pushf
jge
mull
les
js
movsl
incb
pusha
add
shlb
lahf
push
leave
dec
dec
int
jl
sub
rep
inc
scas
jns
jg
sahf
sti
in
push
sub
test
testl
mov
and
mov
stos
dec
pop
mov
bound
adc
andl
movsb
xor
insl
push
jb
movsl
or
inc
mov
xor
in
push
nop
sbbl
sbb
leave
sub
pop
insb
dec
pmullw
sahf
lock
notl
cmp
jecxz
lds
fstpt
mov
mov
rep
xlat
fmuls
popa
cmp
mov
cmp
dec
ret
pop
push
push
lcall
sahf
loop
notl
push
out
mov
sub
or
inc
and
jge
in
int
dec
movsl
shrd
inc
add
or
cmc
mov
arpl
xchg
or
mov
imul
icebp
cmc
add
sub
filds
lds
pop
mov
int3
fldenv
dec
out
movsb
or
mov
movsl
push
push
push
push
pop
stos
enter
mov
movsl
xchg
addr16
fnstenv
pusha
or
or
xchg
scas
mov
inc
mov
adc
jbe
icebp
call
movsl
mov
push
les
add
aad
adc
mov
movsl
pop
sbb
pop
jg
loopne
mov
fwait
pop
loope
jb
pop
pop
pop
jmp
sahf
icebp
ljmp
stc
dec
and
inc
cmp
movsl
push
mov
mov
jle
ja
movsl
dec
jp
push
mov
or
pop
ljmp
enter
movsl
lock
popa
cld
fisttps
adc
movsl
clc
add
cmp
test
jg
add
mov
adc
in
cmp
pop
leave
movsl
rclb
push
mov
scas
mov
call
repnz
leave
push
adc
mov
and
movsl
cmp
lods
pop
jnp
xor
mov
mov
fld1
jmp
stos
in
push
aas
les
lds
xor
rorl
pop
lea
mov
or
imull
movsl
shr
hlt
mov
stos
lods
add
sbb
inc
popa
orb
pop
mov
mov
addr16
shrb
shll
adc
lret
mov
pop
hlt
lods
mov
push
xchg
push
adc
std
pop
mov
jae
out
incl
xor
add
cmc
jns
lahf
adcb
jo
stos
movsl
and
and
jg
jae
arpl
adc
xchg
cmp
push
or
mov
sbb
pop
mov
ficoms
fnstcw
repnz
and
xor
inc
shll
mov
cmp
movsl
add
adc
and
lahf
movsl
xchg
xor
fdivr
jmp
out
mov
push
cmp
pusha
dec
cmpsl
pop
sbb
sbb
pop
lahf
jae
pop
inc
mov
add
push
test
or
dec
xchg
inc
sti
cmc
sub
fidivrl
jmp
out
lods
testl
fstl
sub
arpl
mov
add
sbb
sbb
es
or
movsl
lock
dec
and
cli
imul
xlat
daa
movsl
cmp
sub
aad
xor
cli
cmpsb
add
movsl
pop
leave
movsb
adc
stc
mov
jnp
xchg
inc
sub
lock
push
lret
movsl
mov
jb
lds
push
or
mov
aad
popf
sar
xlat
add
sub
lock
ffree
movsl
rcrb
ljmp
lret
push
std
imul
add
cmp
and
cmc
sub
jb
dec
ljmp
into
pop
or
call
cld
pop
fs
pop
dec
jns
cmpsl
mov
sahf
arpl
dec
and
and
jecxz
out
orb
xor
cltd
shr
cmc
mov
nop
lods
fdivp
hlt
cmp
leave
push
and
jnp
sbb
push
jl
xlat
scas
push
mov
jp
sbb
jecxz
mov
ret
mov
add
push
clc
mov
mov
mov
jnp
sub
scas
cmpsb
ficoms
aaa
adc
mov
cld
pop
roll
inc
pop
mov
mov
sub
popf
movsl
test
les
and
fdivrl
sub
inc
cwtl
sbb
movsl
jno
xorb
test
push
push
lock
insb
repz
das
mov
lds
xchg
mov
jp
jns
mov
test
cmp
scas
jno
shr
mov
movsl
or
mov
sbb
mov
mov
jmp
cld
hlt
inc
lods
jle
lds
xor
mov
mov
mov
pop
shll
add
cmp
lcall
push
jnp
addr16
mov
and
movsb
xchg
sub
sub
push
push
loope
xlat
call
push
sbb
or
cmc
stc
jo,pn
je
mov
cmp
faddl
push
mov
dec
mov
xchg
mov
adc
xor
testl
push
add
xchg
popf
dec
pop
sahf
loopne
fwait
xor
ljmp
scas
lret
fsubr
addr16
sbbl
shlb
fcmovnb
mul
jg
add
movsl
mov
sbb
sbb
mov
pop
cltd
fisttpll
adc
movsl
lods
sti
dec
jno
xor
out
sbb
fidivl
mov
and
inc
in
adc
scas
test
jg
lret
push
mov
xor
mov
sbb
into
movsl
pop
gs
nop
add
and
jecxz
cmc
in
jno
std
sbb
push
arpl
scas
andb
jne
movsl
fs
stos
pop
iret
fcomip
xor
lods
lods
movsl
add
inc
cmp
imul
movsl
test
orb
adc
jecxz
adc
frstor
repz
loop
popa
push
movsl
push
lods
daa
sti
call
jmp
xor
movsl
lret
xlat
out
js
pop
aad
repz
push
add
sub
ja
lock
ret
or
mov
cltd
add
mov
mov
adc
sub
xlat
jno
lods
sub
nop
into
test
mov
mull
je
xchg
push
dec
mov
mov
repnz
popf
leave
sub
xor
fdivp
jne
dec
movsl
neg
in
push
arpl
ret
popa
and
xchg
orl
cs
or
lds
xchg
aaa
mov
cmp
sahf
and
das
and
jl
inc
adc
in
je
mov
cmp
mov
xchg
in
int3
test
mov
xchg
push
xchg
fwait
insb
jo
pop
sub
or
cmc
dec
fdivrl
cmp
push
outsl
dec
xorb
mov
cmp
or
movsl
xor
mov
sub
jae
sti
mov
imul
bound
jbe
cmc
fwait
and
sbb
call
cltd
ss
mov
cmp
out
mov
adc
jno
into
and
ja
jge
cmpsl
movsl
jecxz
mov
xor
std
int3
insb
mov
cltd
inc
imul
mov
jp
adc
lret
in
ja
rorl
add
scas
jecxz
sti
imul
sbb
gs
aaa
movsl
lods
imul
add
mov
and
and
mov
mov
ret
xchg
rcl
xchg
test
mov
cmpsb
cmp
pop
lret
jmp
mull
call
mov
mov
in
mov
xchg
xor
test
inc
jne
inc
hlt
leave
xor
bound
data16
mov
das
clc
notb
imul
movsl
stc
cmp
loopne
frstor
jmp
xor
mov
sbb
lcall
std
and
aas
inc
mov
loop
lods
in
pop
sbb
ljmp
mov
rcrl
and
outsb
loope
pop
call
popa
push
adcb
mov
mov
push
xchg
sar
test
pusha
nop
movsl
sub
pop
repz
push
jl
xchg
aad
or
sub
xor
int
push
jl
mov
ja
push
push
jo
ss
pop
mov
xlat
lcall
mov
xchg
out
shl
movsl
push
outsl
daa
pushf
cmp
xchg
mov
mov
sbb
and
add
scas
bswap
jmp
cmp
xchg
pusha
inc
mov
lods
pop
inc
inc
mov
jbe
mov
shlb
adcb
push
lcall
out
xor
jecxz
je
test
pop
imul
movsl
cwtl
mov
mov
stos
add
addr16
pop
jl
cpuid
inc
std
iret
cld
cmp
mov
push
movsl
inc
mov
scas
and
jns
mov
movsl
push
jno
dec
mov
inc
sub
xchg
push
fistpll
movsl
mov
xchg
int
int
fwait
jno
adc
daa
int3
xchg
pop
shlb
test
ss
cmpsl
mov
movsl
out
scas
loope
stc
add
ljmp
jp
aad
sbb
cwtl
imul
test
and
vmovntps
iret
mov
fnstsw
inc
adc
mov
in
and
imul
add
sbb
leave
repnz
leave
sbb
push
rcrb
xor
jbe
pop
and
in
cs
add
lock
aam
mov
fsubs
popa
mov
push
xor
dec
push
aad
and
movsl
cmp
fldt
jg
mov
mov
nop
or
jmp
das
dec
in
pop
push
fsub
sbb
mov
pop
test
mov
xor
mov
es
ror
movsl
mov
movsb
test
mov
push
das
lea
and
push
ret
and
add
lds
sbb
cmc
aam
sub
mov
movsl
orb
in
jle
fcmovu
movsl
roll
jmp
sub
fimuls
test
mov
fistpl
adc
movsl
jae
mov
movsl
add
and
dec
mov
push
or
cmpsb
fisubs
lods
push
pop
out
xchg
push
dec
popf
cld
movsl
or
or
xor
stc
movsl
lret
jne
in
xchg
stc
pop
repz
int
mov
movsl
repnz
jge
fisttpll
movsl
sub
push
jp
lret
lahf
movsl
pushf
mov
xchg
pop
movsl
add
pop
lds
push
cs
or
lahf
jae
outsl
pop
adc
movsl
je
sahf
cmp
in
fcmovnu
test
ds
mov
movsl
ret
insb
pop
mov
push
jmp
movsl
jg
out
cmp
push
adc
and
pop
cmp
mov
jl
push
pop
addr16
sub
xlat
fisubs
mov
xor
mov
pop
scas
popa
icebp
xchg
ret
push
aas
ljmp
jecxz
sti
movsl
dec
leave
movsl
xchg
bound
pop
mov
hlt
stos
jne
repz
loopne
clc
rcr
popa
mov
jae
jbe
jbe
sub
mov
jmp
pop
faddp
sbb
addr16
movsl
pop
inc
xor
loopne
and
lds
push
sub
movsl
mov
in
movsl
scas
xchg
cmc
inc
xor
cli
movsl
imul
add
not
movsl
fisubrs
dec
insl
pop
stc
cmp
lret
leave
ljmp
hlt
push
mov
cmp
lds
push
imul
push
aad
imul
ds
xor
lods
push
hlt
mov
push
pushf
aaa
xor
cmc
push
push
xor
cmp
jmp
push
and
push
pop
adc
int3
pop
xor
mov
xor
pop
inc
xchg
mov
mov
push
out
sbbl
inc
out
pop
pusha
sbb
xlat
test
iret
add
clc
subb
mov
and
imul
pop
or
mov
shll
ja
out
pop
push
xor
mov
push
jmp
enter
mov
pop
out
clc
mov
out
add
into
dec
mov
js
fcomip
imul
in
mov
mov
add
mov
inc
sbb
imul
inc
mov
or
pop
cmp
fstp
jecxz
jno
out
inc
inc
jmp
mov
loopne
push
dec
push
aad
imulb
popa
sub
xor
out
mov
dec
aas
hlt
or
xchg
mov
xor
aad
fwait
and
test
movsl
sub
outsl
inc
mov
lret
fisttpll
cmc
sahf
xchg
mulb
repnz
jle
sub
pop
in
mov
loopne
jnp
push
mov
lcall
pop
inc
imul
inc
bound
nop
and
iret
or
mov
add
popf
cmp
adc
adc
into
icebp
cmp
out
pop
and
jo
pop
sub
xchg
and
mov
adc
cmp
and
push
andl
mov
aam
dec
pushf
cmp
inc
in
jbe
xor
xor
push
bound
ret
es
and
mov
mov
daa
nop
sarb
inc
xchg
ss
xor
lds
test
ret
in
aad
pop
fprem1
fsubl
in
jbe
movsl
and
gs
insl
dec
cmc
dec
mov
sub
out
cmc
jmp
mov
mov
ret
add
shl
movsl
rol
and
pop
jge
dec
add
stos
or
xor
movsl
outsl
inc
pop
scas
sub
or
in
push
rol
adc
je
movsl
push
jne
fcomi
add
push
add
arpl
les
test
mov
aas
mov
xchg
mov
fdiv
test
cld
lea
xor
movsl
lret
std
daa
push
decb
loopne
push
or
cmpsl
pop
sub
xchg
inc
movsl
pop
jp
loopne
mov
pop
out
in
lds
sbb
cmp
or
scas
fsubs
push
shlb
mov
es
movsl
mov
jecxz
ja
pop
push
sbb
adc
mov
aad
std
outsb
nop
jg
repnz
mov
insl
sub
push
mov
fisubs
add
imul
mov
in
test
mov
mov
les
push
jno
lds
jo
arpl
mov
adc
out
aam
pop
sbb
add
cmc
jmp
pop
mov
movsl
mov
xchg
cmp
xor
mov
adc
movsl
lock
dec
jg
push
rep
xchg
jmp
out
cli
lret
push
movsl
rcll
addb
enter
mov
outsb
movsl
rorl
sbb
insl
jae
add
push
or
or
gs
mov
hlt
in
adc
cmpsl
popf
cs
movsl
insb
inc
jae
jb
jl
sbb
nop
pop
push
pop
mov
push
je
xchg
movsl
sub
int
pushf
movsl
movsb
mov
dec
push
popf
inc
jb
out
lds
lcall
push
xchg
incl
mov
movsl
sub
jne
mov
dec
jecxz
lds
jb
xor
aas
or
into
dec
inc
xor
out
lret
push
call
aam
mov
adc
mov
xor
pop
mov
into
int
data16
xor
movsl
lds
repz
and
loopne
xchg
test
insb
lock
das
gs
jae
mov
jg
movsl
dec
js
jns
mov
or
cmpsb
jge
lcall
lods
add
mov
jno
xchg
fsubr
sbb
std
movsl
push
movsb
stos
sub
pop
mov
adc
subb
or
lahf
jg
mov
push
sub
adc
push
mov
movsl
pusha
call
pop
movsl
bnd
int3
out
std
inc
movsl
outsb
pop
sarb
mov
shlb
jle
jb
iret
fcmovb
lock
ljmp
or
lds
jg
movsl
jle
dec
cld
je
mov
addr16
xchg
adc
cmpsl
hlt
movsl
imul
lcall
sbbb
adc
adc
cmp
xchg
mov
add
or
jae
inc
test
xor
aas
xchg
ja
cmpsb
sbb
movsl
jbe
insl
fs
push
jp
pop
pusha
fsubr
jmp
rclb
in
movsl
mov
adc
movsl
sbb
push
jae
std
outsb
aad
movsl
mov
call
sub
push
xor
mov
push
cmp
mov
cmp
movsl
jb
fyl2x
lahf
jnp
jmp
push
imul
movsl
int
push
popa
in
mov
pushf
mov
inc
sbb
addr16
out
testb
sbb
push
nop
inc
cmp
clc
inc
stc
jne
xchg
cld
loopnew
int
mov
adc
mov
ljmp
mov
mov
or
test
xchg
mov
and
inc
pop
push
fsubl
popf
stos
mov
mov
push
sbb
in
push
pop
push
bound
aam
aas
mull
or
dec
push
lcall
test
jmp
cld
add
call
jl
jp
testl
inc
scas
movsb
movsl
arpl
cmc
adc
add
mov
movsl
and
xchg
cmp
rcll
cmp
jg
push
das
mov
push
data16
std
push
xlat
adcb
addr16
pop
mov
inc
popf
in
lods
jno
sub
xchg
ret
xor
jge
dec
adc
orl
scas
fsubl
and
mov
mov
or
ret
sbb
and
push
jnp
mov
xor
add
movsl
or
fdivrp
jns
mov
xchg
adc
jecxz
in
stc
xchg
xchg
movsl
xor
pop
xor
mov
rcrl
ljmp
cmp
push
fdivr
pushf
data16
in
mov
adc
xor
cmc
rol
add
sbb
mov
push
movsl
pop
movsb
and
popf
jno
aaa
in
cmp
cmp
adc
cmpb
ds
lds
mov
mov
fnstcw
test
movsl
pop
sub
in
sahf
pop
repz
mov
test
inc
jo
xchg
mov
mov
out
test
cli
xor
adc
mov
cltd
mov
inc
jecxz
sbb
cmp
out
stc
add
loope
outsb
xlat
push
repz
mov
pop
push
mov
scas
in
clc
repz
outsb
movsl
in
pop
and
out
inc
pop
enter
mov
test
cs
movsl
insb
push
push
call
xchg
mov
pop
mov
inc
dec
mov
mov
sbb
repz
cmp
cltd
sahf
xor
mov
mov
sbbb
das
andl
mov
push
xchg
leave
popf
jnp
cmp
movsl
dec
mov
in
aad
out
or
ficompl
mov
mov
enter
loopne
jle
clc
shr
and
in
stos
mov
nop
xchg
push
movsl
cmp
mov
pop
sahf
xor
leave
and
mov
mov
out
xorb
call
jl
jmp
fdivl
movsl
sbb
test
mov
sub
mov
enter
cli
push
std
sub
in
sub
scas
mov
les
lret
popl
mov
movsl
pop
mov
dec
add
or
iret
shlb
bound
popf
adc
pop
dec
add
sahf
cmpsl
rcrb
push
sub
and
lds
mov
xor
xlat
push
loope
sub
hlt
or
ficomps
pop
mov
ljmp
adcb
popf
mov
push
add
rcll
push
mov
sahf
movsl
push
inc
ret
add
jae
mov
mov
mov
stos
sbb
stc
mov
pop
xchg
mov
shll
popf
nop
xchg
jl
pop
repz
mov
fsubr
notb
bound
mov
addr16
xor
mov
inc
pop
jbe
inc
dec
movsl
and
lret
lock
or
jle
jbe,pn
dec
subl
jg
sub
sub
fdivl
mov
stos
inc
add
cmp
mov
aaa
jnp
cmc
in
cmpsl
movsl
or
stos
sbb
adc
sub
sub
jne
jmp
ljmp
sbb
adc
pop
dec
out
pop
inc
gs
pop
lret
das
xor
imul
or
sti
icebp
in
testb
xlat
sub
cmp
in
and
lods
mov
outsb
imul
movsl
hlt
aas
pop
adc
sbb
mov
mov
xchg
xchg
imul
enter
stc
rorb
push
lret
inc
shll
out
rcll
xchg
ljmp
sbb
mov
lcall
mov
mov
movsl
mov
scas
mov
leave
popf
sub
fcoml
dec
daa
movsl
aam
jne
cs
push
mov
or
mov
call
jnp
xchg
or
loopne
outsl
aas
sub
mov
std
bts
movsl
push
gs
arpl
movsl
dec
insb
pop
scas
shl
sub
adc
in
call
sti
imul
repz
xchg
iret
push
dec
decb
cmp
movsl
int3
jecxz
repnz
sub
jnp
dec
and
mov
inc
in
stc
jecxz
movsl
in
int3
pop
cli
or
and
add
mov
xchg
fmul
fnstsw
push
test
mov
xchg
rcrl
maskmovq
testl
adc
pop
inc
adc
sub
cmpsb
sbb
inc
js
movsl
sbbl
out
enter
in
imull
jmp
prefetch
or
test
movsl
outsb
push
push
push
mov
adc
xor
xor
iret
mov
movsl
int3
pop
mov
adc
mov
or
dec
pop
push
out
push
in
lret
fxch
popf
mov
or
xchg
iret
add
fsubrs
push
movsl
cmpl
xor
lahf
add
roll
inc
push
arpl
movsl
mov
ret
mov
pop
jmp
mov
push
pusha
or
mov
jg
movsl
scas
fs
shl
jae
shrb
aaa
cmp
mov
push
add
mov
push
mov
pop
fucom
or
mov
xor
inc
out
xchg
pusha
xor
mov
sahf
mov
mov
fdivrl
mov
movsl
cmp
or
in
jle
jae
jecxz
iret
sti
loop
fsubrp
push
cmpsl
pop
stc
movsl
imul
push
pusha
inc
xor
cmc
in
jns
xchg
cmpsb
leave
stos
pop
and
lds
mov
inc
call
xchg
add
insb
cmp
movsl
push
out
mov
movsl
pop
xor
or
movsl
inc
push
notb
loop
shll
lahf
push
mov
mov
mov
or
pusha
jg
lret
cli
and
addr16
sub
ja
in
jl
inc
movsl
in
jno
jg
loop
mov
or
daa
lret
movsl
outsb
psubusw
jecxz
shl
movsl
movl
add
adc
mov
fimull
repnz
lods
push
sbb
cld
mov
daa
in
icebp
inc
pop
movsl
push
je
xchg
cli
imul
call
inc
imull
pushf
push
push
clc
lds
xorl
xchg
sub
mov
movsl
cs
cmpl
pop
sub
movsb
add
int3
mov
sahf
popf
xchg
in
add
dec
out
jp
push
mov
iret
inc
lret
sub
lods
mov
mov
add
shlb
aaa
shrb
and
rcrb
mov
mov
test
mov
movsl
mov
push
xchg
cld
cmp
or
pop
divb
push
mov
ja
jmp
movsl
lock
dec
sbb
or
sub
loopne
push
fmul
cmp
movsl
and
jb
mov
push
movsl
gs
cld
aaa
cmp
mov
mov
xor
outsb
dec
xor
mov
or
es
repz
pop
push
in
shrd
add
dec
push
jl
jne
pop
sbbl
adc
mov
negl
mov
sbb
hlt
dec
mov
sti
add
outsb
mov
sbb
jp
ret
cmp
mov
in
mov
mov
dec
jae
push
rcrl
rcrl
dec
sub
sub
in
jnp
mov
or
out
popf
out
cld
loope
movsl
lods
adc
xor
push
xchg
xor
neg
popf
sbb
mov
insb
data16
jno
inc
daa
lcall
jmp
xlat
cli
pop
mov
mov
mov
repnz
frstor
or
jle
or
test
xchg
xchg
sub
outsb
cmp
sbb
xlat
xchg
cli
andl
movsl
das
rcr
hlt
out
or
push
fbstp
add
jg
mov
mov
mov
sub
sbb
inc
pop
cld
imul
cmc
outsl
repz
in
call
push
mov
jne
mov
test
add
imul
and
es
mov
fsubs
andb
push
popf
and
mov
inc
inc
jl
call
mov
insb
movsl
lods
loope
cltd
ss
pop
inc
pmulhw
and
and
test
pop
mov
std
arpl
push
dec
repz
add
out
imul
ds
mov
xor
jns
cmp
xor
jne
shr
inc
push
cmc
mov
cmp
xchg
cltd
dec
inc
movsl
aad
pop
mov
pop
lret
arpl
and
sub
mov
dec
into
and
xor
je
mov
pop
stc
jo
in
andl
in
pushf
fnstsw
test
mov
movsl
leave
das
sahf
out
mov
mov
test
and
push
repz
jmp
cmpsl
adc
andb
repz
movsl
mov
shrl
popf
inc
xchg
mov
adc
mov
mov
sbb
incl
or
xchg
int
mov
push
and
ret
push
inc
test
movsl
in
mov
and
movsl
jecxz
repnz
and
xchg
mov
xchg
fwait
xor
xor
movsl
dec
adc
es
movsl
xchg
pushf
dec
mov
and
push
or
mov
outsb
pop
pop
pusha
sbb
xchg
dec
xor
mov
stos
stc
mov
mov
and
data16
bound
jns
in
add
xchg
mov
insl
mov
sub
leave
inc
movsl
or
int3
fsub
std
jmp
xlat
jb
aas
andl
fsubrl
je
mov
mov
push
sti
cmpsl
movsl
dec
jne
xor
lcall
lds
or
mov
movsl
sbb
nop
push
arpl
movsl
aaa
jb
fsubrl
je
das
jne
dec
loop
sbb
jb
pop
mov
gs
shrl
or
cmpsl
jecxz
and
js
fcmovb
or
inc
push
rcll
jae
dec
sbb
push
pop
xor
push
push
cmc
repnz
js
movsl
popa
aas
hlt
lcall
popf
movsb
stc
loope
enter
movsl
pop
imul
inc
mov
pusha
sbb
add
popa
in
movsl
ljmp
mov
je
jne
mov
clc
in
ror
mov
test
inc
popf
ds
jge
push
imul
cmp
fstpl
inc
test
movsl
in
jo
shlb
adc
sbb
int
fidivrs
outsb
adc
test
jecxz
pop
fwait
jbe
pop
xor
sub
leave
andl
daa
pop
jmp
and
mov
popf
jnp
in
jnp
sub
jl
popa
sbb
sub
jb
dec
add
js
adc
cmp
imul
jmp
sahf
loopne
pop
add
sbb
out
mov
sub
cltd
inc
fsubrl
repz
ds
cmc
sub
iret
pop
or
cmovno
xchg
mov
leave
push
imul
dec
inc
xchg
out
scas
cmp
stc
stos
mov
lods
jle
cmc
rcll
popa
test
and
mov
jne
adc
movsb
push
popf
pop
push
andl
add
test
push
movsl
mov
mov
push
mov
cmpsb
add
movsb
data16
xchg
adc
loope
loop
mov
cmp
imul
loope
adc
adc
xor
xchg
ret
imul
lret
mov
out
inc
shrb
fwait
and
daa
sbb
or
jp
stc
es
pop
mov
icebp
mov
inc
jp
daa
push
and
aad
xlat
mov
dec
vmovups
mov
xlat
dec
mov
sbb
fildll
shl
std
into
rorl
scas
xchg
popa
pop
loop
or
mov
or
lods
sbb
loope
popf
shl
cmpsb
or
loopne
push
dec
push
movsl
icebp
ffreep
jge
adc
loop
cmpsl
or
mov
jae
popf
push
push
daa
cmp
mov
inc
add
fisubs
add
xchg
mov
mov
pop
mov
pop
xchg
jne
sti
lods
xchg
push
jecxz
repz
fdivrl
mov
popf
stos
sub
notb
gs
push
ret
and
pop
jno
test
sahf
pop
cmp
add
lret
or
xchg
push
mov
mov
lea
and
sti
cmp
enter
pop
add
cmp
or
jbe
int
xchg
sbb
nop
aaa
mov
jle
jl
std
lahf
lods
sub
xchg
jmp
mov
inc
scas
push
repnz
adc
shll
lods
adc
mov
or
adc
popf
mov
iret
sub
and
pop
add
stos
sarb
repnz
in
sbb
fst
dec
popf
sub
mov
ja
iret
mov
jcxz
in
les
fsub
enter
arpl
push
addr16
mov
sub
inc
lret
push
jecxz
movsb
rorl
adcl
jbe
lret
out
xchg
sti
fcomip
push
jmp
movsl
xlat
in
out
jp
movsl
inc
jg
enter
gs
mov
push
dec
mov
dec
orb
out
popa
out
imul
arpl
movsl
dec
fnsave
imul
sbb
movsb
pop
mov
ret
hlt
int
lahf
pop
pusha
cmp
mov
mov
sbb
orb
lods
sub
xchg
xchg
pop
jmp
xor
stc
divl
insl
in
out
mov
ljmp
push
inc
fidivs
enter
pop
adc
popf
mov
sbb
repz
loope
fs
into
movsl
mov
pushf
lods
pop
movsl
popa
xchg
cld
cmp
cli
icebp
fbstp
lods
inc
sahf
aaa
sahf
cmp
push
jge
sbb
movsl
xor
arpl
lret
nop
or
outsb
sbbb
jns
jb
popf
dec
push
test
popa
repnz
movsl
lret
les
or
sbb
andl
push
inc
enter
mov
inc
fwait
inc
shll
sub
loopne
lcall
sahf
pushw
lea
int3
aas
and
fldenv
adc
cwtl
cmp
xor
lds
lock
cli
aam
cmp
mov
and
mov
nop
mov
into
in
cmc
iret
sub
fisubs
pop
mov
leave
mov
pop
dec
adc
scas
mov
and
push
movsl
int3
idiv
adcl
push
cmpsb
aas
adc
leave
mov
or
in
movl
cmpb
or
incb
sahf
ret
jnp
mov
outsl
enter
mov
addr16
lds
repnz
movsl
roll
and
int
das
push
movsl
mov
xchg
scas
psubsw
mov
mov
sbb
adc
cmp
movsl
xchg
or
in
mov
movb
stos
or
fcmovbe
stc
push
lret
push
pop
push
in
add
push
cmp
mov
icebp
pop
xor
lock
xchg
int3
mov
mov
mov
mov
push
std
data16
mov
ja
outsb
cltd
shll
pop
and
sbb
fildll
jns
pop
jge
push
dec
js
mov
out
pop
ljmp
pushf
ret
adc
xorb
in
xchg
test
jnp
add
lret
inc
test
cltd
and
es
xchg
xchg
inc
in
sub
mov
mov
xchg
push
mov
movsl
xlat
sbb
ds
lcall
adc
aas
add
in
loope
dec
sub
sbb
and
cltd
xchg
mov
jmp
movsl
push
in
js
push
imul
inc
mov
pop
mov
pushf
mov
rol
mov
insl
in
das
sbb
push
ja
movsl
sti
mov
mov
or
jno
mov
lds
or
pop
outsb
xchg
dec
pop
pop
negl
in
pop
movsl
pop
add
lds
mov
imul
lahf
fdivrl
push
js
popf
test
repnz
in
ficompl
mov
xor
int3
js
jb
sbbb
mov
inc
xchg
jecxz
notl
mov
mov
sahf
inc
clc
ffree
inc
mov
or
cmpsl
iret
add
mov
out
adc
int3
lcall
pop
cmp
test
pop
addr16
add
pushf
les
insb
out
push
mov
jmp
inc
flds
pop
loope
ret
and
push
mov
dec
dec
inc
pop
stc
imull
inc
shll
imull
sbb
insl
dec
leave
cmpsl
xchg
outsb
ret
or
xchg
daa
cmp
lret
mov
enter
popf
cld
sbb
sbb
pop
lds
ret
cwtl
mov
jmp
mov
repz
xchg
rol
mov
out
call
cmpsb
scas
sub
mov
or
stos
mov
cmp
sub
mov
imul
xorl
inc
dec
or
gs
int3
sbb
sbb
fisttpll
pop
ljmp
subb
lahf
je
sbb
pop
notb
jnp
sub
add
mov
imul
push
ja
jno
div
loop
cli
repz
in
dec
in
insl
pusha
sub
les
jb
or
push
lret
jge
or
rcrl
mov
and
dec
and
pop
in
mov
pushf
fisubrs
mov
xlat
cltd
add
sbb
or
loop
dec
pop
or
imul
sub
mov
cmc
add
inc
data16
push
sarb
mov
fs
jle
aas
lods
mov
dec
mov
imul
push
or
jne
bound
mov
les
and
jmp
inc
push
cli
aas
and
jmp
nop
and
cmc
sahf
aam
jge
push
loopne
cli
sub
jl
daa
xor
aaa
inc
mov
fistpl
outsl
pop
mov
jns
add
mov
lret
sbb
stos
mov
push
fs
sub
sahf
pop
adc
packsswb
sub
out
lret
mov
jl
dec
rcll
je
test
ljmp
loope
mov
sbb
push
sbb
sti
sbb
shl
adc
std
dec
icebp
lahf
hlt
sbb
cmc
mov
adc
mov
adc
mov
mov
mov
push
rol
jbe
jecxz
popa
test
pop
cmp
fcomps
jecxz
lods
inc
or
mov
add
gs
out
cmc
aaa
xchg
sub
out
daa
adc
insb
call
inc
mov
mov
stos
pusha
dec
movsl
dec
jge
adc
mov
lret
in
xor
push
sarl
int
mov
shrb
mov
movsl
xor
ja
xchg
dec
pop
push
pop
rclb
int3
jmp
sarl
movsl
xchg
lcall
dec
lds
rol
mov
inc
jae
cmc
sub
fs
movsl
lds
into
push
sbb
mov
push
pusha
sbb
sarb
dec
inc
xchg
xor
sbb
popa
dec
jno
movsl
mov
push
jecxz
out
out
into
sti
pop
stos
lods
pop
bound
loopne
mov
insl
add
ljmp
fs
movsl
push
mov
dec
or
bound
xor
adc
movsl
pop
cmpsb
cmp
lds
popf
or
movsl
cmc
les
fwait
movsl
mov
ljmp
das
pushf
xchg
cmp
sub
add
pop
popf
jle
and
out
lcall
int3
loop
xchg
mov
mov
push
inc
fstps
pop
sahf
out
sti
mov
cmp
mov
cmc
dec
pop
push
inc
stos
movsl
in
mov
aas
sbb
xor
adc
ret
xchg
cmp
test
out
movsl
xor
push
add
fimuls
sbb
mov
lock
xchg
sbb
add
insl
fiaddl
movsl
les
mov
cmpsb
push
pop
and
leave
out
in
hlt
ja
out
in
inc
add
dec
std
test
dec
stos
mov
negl
aad
notb
mov
scas
mov
stos
movb
add
fwait
lds
mov
mov
inc
fbld
sub
mov
in
movsl
scas
ret
push
pop
shll
inc
enter
cmp
lcall
test
mov
dec
adc
dec
into
add
inc
push
movsl
mov
cld
cmpl
pop
or
fwait
movsl
and
xchg
roll
aam
movsl
lods
add
mov
leave
mov
movsl
lock
xor
movsl
cmc
arpl
pop
xor
filds
sahf
adc
js
xlat
jle
fdivr
rol
daa
movsw
mov
xchg
movsl
push
jne
pushf
xlat
loope
push
test
cmp
xor
xchg
scas
rcrl
mov
jb
sbb
movsl
lods
mov
xor
adc
cmp
pop
in
aas
mov
shll
add
or
push
addr16
fstp
movsl
mov
inc
add
repz
inc
hlt
sbb
lds
inc
lods
sahf
test
scas
and
mov
mov
inc
fstl
mov
pushf
aam
mov
mov
mov
add
shlb
cmp
xor
inc
int
mov
movsl
jb
cmc
loop
jae
mov
out
das
add
sahf
inc
call
sti
push
lret
sbb
mov
and
cmp
loopne
dec
je
mov
pop
andl
xchg
outsb
imul
movsl
repz
jmp
fs
sahf
or
lds
pop
dec
jb
aam
ljmp
scas
movsl
adc
movsb
push
or
lods
xchg
clc
andl
xchg
mov
adc
js
ja
movsl
inc
push
ljmp
movsl
sbb
mov
movsl
jb
mov
rep
shl
cmp
or
dec
ret
cmpsl
sahf
mov
jl
movsl
lock
stc
ljmp
ret
add
xor
dec
cltd
push
xor
xchg
movsb
push
inc
lret
dec
ja
movsl
sub
inc
mov
xor
nop
sahf
sti
enter
out
pop
jo
inc
ja
mov
jne
jb
repz
fst
or
inc
movsl
cltd
cmc
cli
in
dec
push
sub
ret
add
movsl
xchg
in
jecxz
movsb
xchg
hlt
movsl
adc
test
xchg
test
jle
out
sbb
mov
inc
sub
in
dec
insb
jnp
loop
cmpsl
sub
lock
pop
popf
jmp
movsl
sarb
int3
movsl
scas
addr16
dec
mov
xchg
xchg
lahf
fwait
scas
movsl
push
out
insb
dec
cld
pop
and
fidivrs
sbb
cmpsb
xchg
sub
and
mov
cmc
out
shlb
clc
bnd
inc
sbb
shr
adc
in
push
rorb
and
ss
pop
shlb
sahf
xor
cld
jl
push
add
sub
mov
pop
movsl
mov
pop
mov
xchg
rcl
movsl
dec
jge
push
clc
pop
sbbl
scas
je
mov
push
sti
jmp
xchg
nop
test
stc
jp
movsl
jmp
outsl
gs
jo
and
mov
xchg
jmp
test
sbb
push
cmp
sbb
jl
sub
push
movsl
mov
je
push
pop
jp
push
in
push
adc
xchg
mov
or
push
arpl
cmp
insb
incl
movsl
pop
pop
jmp
lret
movsl
dec
andl
mov
mov
xor
jmp
enter
mov
xor
jecxz
imul
test
xchg
nop
cmp
sarb
out
pushf
sbb
cmp
imul
pusha
xchg
aad
fcomps
out
popa
jg
dec
xor
add
movsl
push
in
sbb
movsl
dec
lea
stc
int3
dec
lds
pop
adc
cmp
xor
inc
mov
sbb
xchg
lods
leave
movsl
pop
push
jge
push
movsl
insb
mov
jmp
movsl
loopne
sub
arpl
cs
jo
dec
pop
pop
mov
test
and
adc
filds
stos
and
popa
or
out
pushf
jbe
decb
dec
mov
add
sub
mov
push
movsl
ret
or
xchg
xchg
cwtl
cmp
xchg
jns
insb
pop
out
movsl
adc
sub
in
inc
mov
push
stos
and
in
mov
xor
mov
ret
mov
or
test
movsl
adc
push
leave
sti
xchg
add
dec
shrb
shll
loope
mov
mov
test
mov
iret
pop
out
jmp
or
outsl
mov
int3
mov
jns
pop
and
loopne
mov
sub
jle
xor
out
mov
stos
or
adc
out
mov
sbbb
push
sbb
pusha
stos
je
push
inc
cltd
jnp
fstpl
sub
scas
sbb
movsl
mov
stos
push
movsl
pop
rclb
or
cmp
mov
call
adc
lea
jecxz
loopne
xchg
in
jbe
inc
cmpsb
and
push
dec
roll
cmp
mov
xchg
and
pop
pop
push
orl
jae
ja
dec
imul
adc
mov
or
xchg
pusha
in
adc
ret
movsl
lret
fmul
dec
and
sub
mov
jg
mov
in
jne
cmc
jge
movsl
mov
dec
add
jmp
in
movsl
inc
jae
bound
call
ljmp
dec
ljmp
dec
add
ficomps
idivl
out
mov
in
mov
loope
xor
adc
shld
out
pop
cld
adc
xchg
movsl
fwait
ret
fistpll
jae
mov
adc
push
and
shlb
mov
arpl
inc
mov
mov
cmpsl
sbb
scas
dec
inc
movsl
sahf
les
int
idiv
movsl
xor
popa
imul
mov
scas
sbb
mov
sti
aam
movsl
and
in
imul
mov
loope
fcmovne
sbb
pop
cmc
loope
xchg
sti
dec
gs
push
xor
pushf
mov
mov
lds
and
jne
idivb
lock
cmp
popa
sub
jecxz
sahf
stos
add
push
push
sbb
and
inc
sub
xchg
pop
jbe
dec
jbe
or
stos
shlb
mulb
orb
and
xor
push
jo
scas
dec
rclb
or
in
push
sub
xchg
dec
jo
test
movsl
outsb
push
push
fldenv
dec
cwtl
mov
addr16
mov
xchg
enter
es
add
das
mov
ret
adc
lahf
ds
xor
hlt
jno
push
jg
xor
add
xorb
dec
mov
ss
xorps
adc
cmp
mov
pop
xchg
adc
daa
sub
stc
xlat
in
insb
cmp
mov
pop
mov
xlat
sbb
xchg
or
in
pop
movsl
pop
xchg
movsl
sub
and
movsl
hlt
lock
adc
ret
in
inc
push
xchg
sti
divb
test
test
xchg
data16
mov
or
adc
cmp
movsl
xchg
cmpsb
mov
das
fs
cmpsl
sti
movsl
jbe
lret
inc
xor
ss
movsl
sub
jg
cmc
into
les
adc
cmp
xorb
sahf
lods
imul
test
lods
scas
push
push
pop
movsl
mov
dec
outsl
aad
ja
cmpsl
push
jns
mov
sbb
stos
or
jecxz
stc
sub
pop
adc
lods
test
jo
xor
pop
or
mov
popf
pop
cli
cmp
movsl
mov
dec
xchg
mov
mov
es
outsl
dec
lcall
push
add
aad
data16
out
xor
cmp
cmp
cmpxchg
movsl
xlat
popf
cwtl
fdivs
popa
mov
lea
out
daa
in
xchg
adc
adc
movsl
rcl
aaa
xchg
sbb
stos
push
scas
jo
mov
mov
mov
orb
rcll
je
push
and
or
test
pop
enter
daa
andb
jl
fstl
adc
lods
insb
dec
fildll
jo
push
push
sub
lds
or
aad
int3
add
scas
dec
mov
sub
and
loope
lock
xchg
je
mov
pop
sbb
aad
cmpsl
jl
xor
push
test
fdivrp
insb
stos
mov
lahf
in
popf
sarb
fsubs
lret
sahf
xchg
movsl
in
or
mov
rcrl
adc
das
and
push
outsl
add
push
mov
jmp
lods
movsl
gs
push
fisubs
cmpsl
push
jg
movsl
ret
lods
test
mov
movsl
dec
or
fwait
cmp
or
in
mov
movsl
subl
fisubrl
xor
add
in
movsb
inc
or
xchg
and
adc
movsl
pop
push
adc
mov
xchg
and
mov
mov
enter
mov
mov
xchg
xchg
movsl
or
mov
jp
fdivr
stos
mov
testb
push
dec
fisttpl
add
pushf
push
aas
pop
ror
xchg
pushf
or
inc
lahf
in
mov
mov
mov
aad
cmp
mov
sbb
imul
pop
adcl
rolb
push
test
loope
dec
sbb
inc
xor
sti
xor
xlat
int
inc
mov
sbb
shll
ret
add
test
imul
inc
inc
pop
dec
mov
mov
fndisi(8087
movsl
daa
sahf
pop
inc
fnsave
mov
and
cmpsl
pusha
les
sbb
mov
push
adc
data16
mov
fnstenv
fcomps
in
cltd
sbb
aas
mov
inc
mov
hlt
sti
and
test
sbb
cli
lret
jnp
ja,pt
jl
lcall
cmp
jmp
lcall
jno
fidivs
pop
mul
add
lods
mov
and
mov
sbb
loop
jns
or
inc
loopew
fdivrp
xlat
sub
pop
std
and
mov
xchg
xchg
out
add
push
cmp
dec
push
hlt
mov
das
pop
mov
sbb
xlat
lret
add
pop
jmp
arpl
sub
mov
lea
shll
insl
cmp
sbb
add
mov
call
test
popf
in
out
movsl
iret
mulb
cwtl
mov
pushf
int
aad
test
divl
aam
inc
out
mov
mov
sbb
add
and
sbb
int3
movsl
fdiv
and
xchg
push
xlat
inc
movsl
cli
repz
movsl
fdivr
pop
or
mov
movsl
mov
adc
shld
fxch
sub
andl
movsb
popa
movsl
adc
ficoms
movsl
js
ds
in
jmp
scas
jecxz
cld
jl
cmc
repnz
out
orl
mul
shl
mov
xchg
aas
mov
mov
jns
push
flds
scas
notb
push
in
xchg
or
jg
push
les
movsl
outsl
fbld
jl
jbe
imul
movsb
adc
in
test
movsl
xchg
ficoml
sahf
dec
shll
into
bound
outsb
adc
jl
mulb
cmp
jb
inc
out
int
mov
inc
sbb
fs
stc
cmpl
cmp
mov
dec
push
jns
pop
xchg
aad
aaa
jbe
icebp
mov
fisttpl
xor
xlat
adc
push
ss
test
pop
movsl
push
imul
int3
movsl
cmc
lret
jp
sbb
rolb
in
add
cmp
cli
push
movsl
push
add
lods
movsl
negl
repz
ficoms
pop
movsl
push
cmp
jmp
das
scas
cld
pop
idivl
gs
je
mov
repz
mov
enter
mov
cmc
push
int
push
jmp
xor
add
scas
push
movsl
or
add
sbb
cld
movsl
or
mov
orl
movsl
ss
aas
and
dec
add
add
and
push
fstpt
xlat
inc
cmp
les
jbe
inc
jno
add
movsl
adc
sbb
test
lods
movsl
dec
dec
jmp
in
jl
mov
incl
cmpsl
fldl
int3
jge
cli
mov
in
jae
loop
sbb
xor
insb
inc
pop
xchg
pop
testl
daa
pop
call
and
inc
shlb
movsl
mov
jle
shrl
xor
mov
loope
hlt
out
daa
mov
movsl
mov
sbb
mov
movsl
pop
add
loope
cltd
inc
test
jecxz
add
fucomip
movsl
jg
lret
fs
sahf
popf
fwait
es
test
mov
push
daa
movsl
or
mov
mov
je
mov
xchg
movsl
std
mov
pusha
iret
and
mov
mull
inc
cmc
xor
mov
cmpsb
dec
aad
inc
jge
into
movsl
fidivrl
push
hlt
dec
dec
xchg
out
mov
fsubrs
push
iret
into
cwtl
jg
cltd
movsl
nop
or
es
popf
out
movsl
cmp
xchg
int
pop
pop
stc
jb
sbb
push
dec
je
cli
xor
cmpsl
aas
inc
movsl
lcall
mov
push
bound
std
push
movsl
inc
mov
xchg
movsl
pop
adc
mov
or
or
push
test
and
daa
mov
push
cld
mov
call
in
xor
sub
xchg
xchg
xorl
lahf
scas
xor
or
dec
clc
dec
cmpsl
iret
fildll
loopne
jae
mov
daa
mov
cmc
adc
movsl
adc
dec
test
lea
movsb
and
jge
mov
repnz
inc
orl
dec
xchg
and
mov
sub
adc
nop
dec
lds
and
sbb
sbb
sub
push
stos
and
scas
pop
dec
movsb
cmpsl
mov
repnz
or
push
pop
mov
out
lock
outsb
bound
std
jmp
and
mov
inc
imul
lds
movsl
rorl
sub
and
mov
inc
dec
test
and
mov
mov
cwtl
and
and
mov
outsb
test
iret
adc
cld
push
or
cmpb
or
fimuls
movsl
sub
sub
jle
nop
jmp
hlt
push
sbb
xor
mov
sub
mov
add
lea
or
sbb
test
test
sbb
hlt
adc
jbe
stc
cmpsl
and
inc
sarb
push
movsl
shlb
add
or
dec
inc
jg
cmovp
movsl
inc
addb
lea
scas
mov
xchg
jg
cltd
arpl
scas
xor
lea
push
repz
fisubs
fwait
sub
adc
jp
dec
leave
and
push
lods
pusha
test
jno
xchg
cmp
repnz
movsl
lret
jo
mov
fsubs
jnp
dec
shll
push
icebp
lret
call
nop
cmp
repz
dec
and
inc
xchg
cmp
movsb
push
outsb
mov
imul
and
mov
and
add
sbb
or
cmp
cmpsl
xchg
movsl
inc
pushl
lahf
in
rcrl
mov
outsl
jo
jecxz
in
scas
fisubs
pushf
cmc
int3
test
jne
xchg
inc
push
loop
sub
pop
sbb
mov
adc
movsl
cmc
cmp
stc
sahf
or
jnp
adc
adc
and
and
dec
add
adc
xchg
push
inc
cmp
hlt
push
sbb
aad
mov
jmp
push
rclb
dec
shrd
into
mov
movsl
mov
cmpsb
jo
sahf
jb
inc
mov
outsl
inc
cld
xor
add
jle
cmp
cmp
ss
jne
rorb
pop
mov
jbe
pop
dec
pop
sbb
pushf
mov
and
sub
in
add
loop
or
fldlg2
hlt
add
fs
dec
cmp
push
mov
in
push
into
mov
or
mov
movsl
stos
mov
pop
movl
mov
mov
and
inc
xor
adc
xchg
clc
in
mov
faddl
movsl
sti
leave
cld
cmp
push
lods
cmp
shlb
lcall
fisttpl
jae
movsl
nopl
add
jno
inc
xor
mov
pusha
cmp
lds
cmp
in
movsl
cmp
pop
das
movsl
sahf
sub
jbe
call
inc
movsl
xchg
outsl
mov
cmp
loopne
add
lret
and
mov
mov
dec
add
inc
or
xlat
dec
dec
inc
mov
test
mov
xchg
mov
adc
add
ljmp
pop
mov
out
cmc
int3
mov
push
adcl
push
or
mov
jl
and
lods
and
cld
loope
mov
mov
enter
cmp
cmp
or
dec
adc
cs
and
adc
testb
jmp
jmp
pop
rcrl
pop
test
popf
movsl
repnz
cmpsb
popa
frstor
cmp
repz
push
and
loopne
add
out
cmp
inc
push
out
lock
and
dec
pop
mov
popa
xchg
call
stos
xchg
xchg
push
mov
push
jno
in
push
inc
xchg
pop
arpl
xor
or
sub
push
outsb
lods
shr
pop
fstpl
or
dec
idiv
cmpsl
jge
pop
cwtl
push
cmc
pop
sub
sbb
cmc
jno
push
cli
push
stos
aas
mov
sarb
nop
sarb
add
jecxz
pop
jp
movsl
jg
icebp
mov
cld
scas
push
jne
adc
shll
jl
iret
lds
dec
sbb
cmp
dec
loopne
addl
mov
repnz
fidivrs
inc
jbe
lds
mulb
pop
push
mov
sbb
sbb
jge
dec
outsl
sbb
pop
mov
in
pop
jne
jbe
xor
mov
movsl
inc
add
mov
insb
push
mov
mov
and
icebp
notl
outsb
cmpsb
add
dec
bound
push
or
fcmovnb
fmull
cmc
icebp
sahf
pop
mov
pop
push
aad
sbb
and
adc
lea
inc
xchg
sbbl
lret
xchg
fdivr
add
jns
or
daa
adc
sub
pop
jno
cmpsl
sbb
mov
sbb
add
iret
lods
xor
lcall
movsl
in
cmp
xchg
and
push
cmpsb
push
inc
loopne
vpaddusw
stos
xlat
movsl
or
mul
repnz
rolb
cmpsb
add
movsl
scas
pop
pop
jg
shrl
movsl
sahf
xchg
inc
xchg
xor
ror
fsubl
pop
sbbb
icebp
enter
rorl
insb
dec
push
in
out
movsl
mov
outsl
cmp
movsl
stc
xor
lds
fwait
ss
fstpt
test
pop
lcall
cmc
cltd
es
pop
call
dec
lds
mov
dec
and
xchg
mov
push
movsl
add
shlb
jl
test
sti
pushf
add
movsl
lea
movsl
das
cwtl
jb
popf
and
in
movsl
dec
or
js
inc
push
and
sahf
stc
lcall
mov
fcmovbe
mov
shr
pop
pop
jae
jb
jmp
movsl
adc
into
mov
movsl
push
mov
push
sub
push
iret
loopne
add
lea
adc
mov
jns
es
pop
push
imul
xchg
and
movsl
push
add
push
pop
int3
pushf
test
in
fldl
movsl
movsb
leavew
cmpsl
sub
outsl
bound
stos
frstor
dec
adc
in
movsb
cld
test
mov
mov
pop
out
adc
out
and
loopne
cmc
jl
insl
add
mov
or
out
and
mov
inc
adc
mov
pop
cwtl
add
push
mov
movsl
or
cltd
jnp
test
movsl
jae
aam
cmp
mov
and
xlat
out
push
jo
movsl
insl
ds
fwait
xor
aas
mov
sbb
fiaddl
jne
mov
sub
inc
jmp
test
push
xor
fs
ljmp
pop
xchg
mov
pushl
iret
mov
xor
scas
outsl
adc
loopne
vcmpps
rep
in
push
pusha
lods
mov
and
lds
ja
jnp
push
fs
outsl
je
sbb
aas
sahf
movsl
iret
enter
stos
movsl
inc
inc
fs
mov
xchg
mov
push
sti
movsl
xor
daa
mov
add
mov
roll
push
adc
sbb
aaa
int
lock
subb
popf
mov
and
stos
cmpsl
sub
movsb
dec
and
pop
and
mov
aad
in
shl
pop
out
movsl
jecxz
add
inc
jge
push
mov
hlt
sbb
ret
stos
adc
pop
sbb
add
mov
ds
mov
mov
cmpsl
pop
movsl
push
xor
cwtl
mov
dec
movsl
jmp
jge
lret
sbb
movsl
xor
movsl
icebp
push
xchg
lds
dec
movsl
inc
movnti
mov
pop
mov
mov
lods
int3
mov
dec
add
movsl
pop
insb
cmp
aaa
movsl
inc
xchg
jb
jo
sub
loopne
pop
adc
and
pop
pop
jae
cwtl
inc
ret
in
imul
push
push
div
jmp
popf
pop
sahf
dec
out
dec
jns
shlb
data16
xchg
js
adc
leave
pop
xor
ljmp
jge
addr16
in
fnsave
push
cmpsl
xchg
cld
sub
jns
pop
mov
movsb
push
arpl
bound
lret
pandn
negl
jnp
movsb
mov
cmpsb
es
and
sub
cli
call
ja
fucomp
aaa
lock
ja
icebp
test
or
ljmp
dec
out
jge
add
js
test
and
mov
andl
adc
xlat
push
jecxz
js
mov
push
cmpsl
sbb
cmp
je
mov
mov
aas
lods
jnp
push
insb
cmpsl
or
inc
jp
sub
stc
pop
mov
push
and
xor
pop
inc
insl
jnp
pop
sti
mov
pop
jge
cmovle
jns
loopne
sbb
into
addr16
inc
sbb
mov
int3
cmc
inc
add
add
lock
jl
mov
out
pop
mov
adc
sbb
sar
dec
cmp
xchg
sub
sub
inc
mov
lcall
lret
out
std
lds
mov
xchg
inc
sbb
movsl
test
push
and
cmc
mov
movsl
cmp
sub
mov
test
mov
mov
pushf
movsl
xchg
fisubs
jle
js
movsl
and
fwait
sbb
mov
xlat
mov
int
mov
push
dec
insl
jge
movsl
adc
jl
movsl
ds
stc
xchg
cltd
mov
movsl
mov
adc
fistpll
inc
test
stos
xchg
cmc
sub
lods
movsl
out
push
pop
jns
shll
xchg
test
or
push
and
repnz
push
cmp
mov
mov
mov
lea
sbb
movd
mov
test
inc
int
pushf
add
or
and
inc
inc
add
mov
xor
mov
sub
movsl
nop
xlat
lahf
loop
dec
push
push
movsl
dec
gs
lock
jg
pusha
sub
cmc
push
movsl
pop
inc
jns
fdivrs
movsl
lock
and
aaa
or
xor
cld
fcmovne
movsl
clc
movl
cmp
aaa
adc
mov
sbb
pop
fsubp
xchg
push
movsl
es
pop
and
mov
cmp
sub
jns
jge
movsl
ret
jae
popf
xchg
mov
jl
fbld
xlat
push
movsl
add
ja
dec
js
sub
xchg
fisttps
je
push
cld
cli
std
movsl
xchg
sti
push
pop
pushf
sbb
movsl
mov
inc
repz
or
sub
inc
xchg
movsl
xchg
jo
shll
in
shlb
enter
cmp
pop
out
sbbb
cltd
dec
mov
mov
push
lds
test
lea
xchg
and
lds
hlt
dec
setne
enter
icebp
into
std
stos
mov
cld
movsl
out
pop
mov
movsl
push
jg
pop
in
popa
js
imul
xor
mov
mov
nop
mov
movsl
daa
and
loopne
out
stc
sbb
adc
lcall
repnz
inc
sahf
lcall
mov
sub
mov
fwait
push
and
xor
out
sbb
push
xchg
movsl
loop
lock
out
bound
jne
movsl
in
jns
jno
adc
xchg
xor
mov
out
sub
mov
pop
mov
and
shl
cmc
loop
xchg
scas
test
jecxz
push
movsl
xchg
xchg
lock
jbe
mov
sub
mov
mov
xchg
jl
movsl
pop
imul
and
push
cmc
adc
bound
jnp
inc
xchg
add
jbe
or
dec
insb
int
mov
movsl
mov
push
imul
movsl
xchg
ret
movsl
ss
es
fcoml
cmp
movsl
xor
popa
cmpsb
inc
arpl
inc
mov
adc
fstl
repz
mov
push
inc
dec
leave
cli
cld
enter
pop
sbb
fs
mov
in
mov
jmp
inc
clc
jae
mov
pusha
pop
in
out
das
loopne
mov
les
sbbl
outsl
call
aaa
movsl
lods
lret
and
imul
insb
add
mov
loope
mov
sbb
out
adc
mov
inc
push
mov
aam
fs
movsl
pop
hlt
or
ds
pop
jae
pop
jbe
push
lahf
xor
rcll
inc
addr16
and
stos
mov
mov
imul
in
dec
dec
sub
and
popf
sarb
cmp
cwtl
in
cmpsb
pop
std
movsl
dec
or
mov
not
cmp
dec
orb
push
jl
loope
in
xlat
pop
outsb
ljmp
imul
push
into
leave
shlb
push
addr16
and
fiadds
push
movsb
lds
or
mov
stos
ret
js
das
jns
jnp
in
arpl
dec
push
into
mov
inc
aam
push
rcll
mov
inc
mov
adc
sti
movsl
push
popa
in
ljmp
xor
sub
lods
movsl
adc
push
loop
fld
lods
out
add
xor
ss
movsl
ljmp
outsl
jge
and
add
scas
sbb
xchg
pushf
mov
scas
jnp
jmp
popf
mov
dec
push
shlb
or
mov
xlat
lcall
movsb
adc
jp
mov
pop
es
shll
or
ja
push
or
sub
sbb
ret
xor
movsl
adc
xchg
shl
xchg
das
movsl
out
xor
inc
inc
jge
push
mov
imul
stos
ret
and
push
repz
sti
jmp
push
or
lret
movsl
xchg
js
cmp
movsb
movsw
scas
clc
fwait
or
movsl
dec
je
adc
add
xor
mov
out
xor
hlt
mov
and
dec
jecxz
dec
sub
push
movsl
push
mov
and
mov
sbb
movsl
out
lret
sbb
xchg
loope
push
inc
inc
sub
cmp
frstor
movsl
xchg
or
sub
movsl
mov
mov
xchg
lcall
sahf
xor
movsl
jbe
call
loope
cmc
sbb
js
movsl
dec
aam
xchg
pushf
mov
push
insl
adc
data16
push
cmc
pop
stos
jl
pop
incl
ljmp
cmp
or
lock
dec
movsb
movsl
faddl
pop
dec
test
movsl
loopne
push
and
xchg
mov
jecxz
mov
sbb
mov
popf
pusha
push
jb
cmp
mulb
mov
inc
scas
mov
mov
in
cmp
lock
cmp
outsl
movsl
push
insl
shlb
adc
mov
mov
loopne
ss
fwait
pusha
shl
iret
pop
mov
lret
pushf
leave
shl
cmc
jl
scas
outsb
jns
mov
xor
dec
icebp
xor
mov
jbe
and
sbb
out
mov
and
sti
leave
scas
mov
pop
cmc
sub
movsl
pushf
cmp
movsl
jmp
dec
outsb
fsub
push
sti
incl
cmp
sahf
sahf
shrb
out
ds
cmc
cmp
aam
movsl
push
rcrl
scas
and
test
jne
and
ss
cwtl
loop
fdivrs
push
jg
add
pop
push
jmp
xor
call
movsl
bound
inc
sub
repz
test
shrb
sbb
fld1
les
pop
xor
aas
cmp
inc
mov
cmpsb
in
insb
outsl
hlt
enter
lret
mov
mulb
mov
popa
fistpl
js
xchg
fisubs
cmp
addr16
xchg
sub
cmp
scas
cmp
adc
xorb
movsl
cmp
test
stc
loopne
mov
leave
cmp
cmpsl
xor
jge
in
lods
xchg
movsl
scas
lahf
push
ds
xor
sbb
outsb
push
popa
lods
pusha
add
std
bound
ja
ficoml
into
cmc
jno
or
popa
sbb
cmpb
fnstenv
int3
mov
push
mov
rcrb
adc
push
mov
sub
push
roll
cmc
gs
mov
and
int3
test
dec
movsl
fnsave
jo
insb
push
ret
lahf
jbe
mov
jecxz
add
jmp
subl
cld
sub
aas
scas
jne
inc
mov
in
fnstenv
mov
insl
ret
mov
mov
movsl
jge
dec
shrl
dec
sbb
fsubs
movsl
add
xor
cmp
jp
insb
pop
mov
ret
push
int
test
stc
ljmp
sahf
popf
movsl
lods
cmc
pop
pop
sub
data16
cmp
xchg
push
movsl
inc
mov
ficomps
movsl
dec
repz
jb
gs
inc
ja
arpl
dec
cwtl
xor
shll
icebp
movsl
loopne
out
sbb
in
mov
int
cmp
pop
movsl
or
shlb
mov
mov
jl
ret
popf
or
fisttpll
ja
movsl
lret
jne
push
loope
xchg
cld
sub
adc
mov
ret
mov
cmc
loopne
pop
fadds
shl
pusha
add
adc
or
xchg
pop
ja
out
push
and
shl
pop
pop
mov
aam
out
rcrb
or
cmp
clc
int
lods
fcmove
pop
pop
adc
mov
jae
mov
es
fabs
push
repz
xorl
or
mov
fwait
mov
xor
pop
mov
lret
and
out
lret
daa
jp
out
sbb
mov
sub
mov
pop
sub
adcb
movsb
cmp
or
enter
push
sbb
outsb
mul
ret
sub
lods
fdiv
shr
xlat
leave
call
mov
aas
push
jp
movsl
pop
add
push
rcrl
ss
enter
and
jle
sub
mov
fwait
jbe
push
jecxz
roll
sti
dec
mov
fmul
fdivs
push
jb
adc
jnp
sub
icebp
xchg
sbb
outsl
popa
and
into
loop
xchg
scas
inc
mov
ret
in
xlat
mov
fucomi
mov
je
mov
out
inc
cmp
pop
sbb
or
out
mov
xchg
push
push
jns
pop
popa
add
pushf
xor
mov
inc
sbb
xchg
call
or
mov
daa
mov
mov
and
setg
bound
ret
dec
ret
lock
fsubs
lret
sub
mov
jle
daa
cmpsb
in
pushf
je,pn
jb
push
add
std
inc
insl
jle
add
shlb
add
movsl
ret
loop
and
testb
popf
aad
xchg
in
and
mov
jl
dec
jo
push
xchg
fdivrl
jbe
out
push
and
popl
mov
in
mov
lret
cmc
mov
xor
add
cmp
lahf
movsl
xor
testb
in
repnz
inc
lea
movsl
shrl
dec
add
or
mov
movsl
mov
jle
jbe
inc
loopne
popa
dec
lds
mov
mov
xchg
adc
xchg
shld
jmp
in
mov
sbb
inc
movsl
jnp
push
jp
xchg
mov
daa
jle
in
cs
fwait
pop
pop
and
or
jne
dec
mov
pop
adc
in
mov
decb
pusha
mov
dec
das
movsl
or
je
pop
out
loopne
repnz
xchg
jecxz
ds
mov
cmpsl
mov
test
push
mov
cmp
push
ja
xchg
in
sub
xchg
fstl
push
adc
mov
push
scas
or
ds
xchg
xchg
inc
pop
lds
lcall
iret
lods
mulb
andl
pop
rcll
mov
sub
cmc
fildl
pusha
or
mov
lret
in
ja
sbb
fnstcw
and
jnp
pop
sub
cmpsb
add
xchg
sub
movsl
int3
add
popa
jo
pusha
insl
movsl
imul
push
outsb
arpl
inc
mov
iret
mov
sbb
jae
aam
adc
movsl
cmpl
in
in
fnsave
sbb
add
cmpsb
loop
stc
sti
and
xchg
test
push
and
lods
sbb
push
pop
jb
call
aam
sahf
sub
jnp
jge
xchg
cli
aas
hlt
movsl
call
mov
rorb
test
xchg
jge
out
loop
mov
and
mov
mov
or
movsl
insb
gs
nop
adcl
andb
lahf
or
movsl
lcall
cmp
cltd
push
and
jmp
movsl
cmp
mov
or
mov
in
ror
clc
leave
stos
jmp
pushf
pop
push
push
in
push
pop
cltd
movsl
das
sub
test
cld
dec
aad
mov
or
in
pop
data16
sub
arpl
xchg
fsubl
and
push
fsts
mov
sub
xchg
cmp
movsl
jno
mov
or
cmp
fnstenv
sbb
cmpsl
ficomps
mov
mov
sahf
push
and
push
push
adcb
movsl
xlat
sbb
sub
or
and
aad
iret
push
push
mov
int3
adc
cld
cs
lret
cmp
mov
aas
sti
xor
out
rclb
dec
stos
andl
sub
mov
in
inc
stos
rcll
adc
fsubl
cmp
xchg
pop
sub
pop
push
movsl
xor
jmp
mov
push
inc
add
aad
sti
inc
repz
xor
mov
scas
sbb
shrl
add
jae
mov
in
fdivs
daa
clc
lcall
sbb
in
jbe
aad
cld
movsl
clc
int3
or
rorl
stos
cmpsl
sbb
pop
cmc
push
bound
push
mov
sub
mov
call
and
lahf
and
mov
jg
loop
mov
test
rclb
mov
loop
push
mov
testl
lods
push
test
add
fbstp
xor
mov
cmovl
mov
pop
loope
ja
insb
int
mov
xor
pop
stc
nop
xchg
lahf
shll
sti
test
into
and
xchg
out
push
mov
repz
in
sahf
and
push
out
insb
xor
jle
inc
mov
xchg
in
sahf
loope
bswap
outsb
imul
pushf
adc
lods
imul
inc
xchg
mov
cli
fprem
in
cmc
js
mov
pop
movsl
arpl
push
lds
adc
fldl
mov
push
stos
cmp
push
add
cmpl
in
aad
mov
outsl
dec
inc
in
jae
les
mov
pop
dec
popa
cmc
call
jecxz
add
loopne
jp
xor
idivl
sbb
fucomp
mov
and
jbe
in
sbb
cmc
dec
pop
sub
add
push
std
incl
aaa
outsl
mov
mov
push
daa
int3
adc
inc
imul
jo
pushw
mov
jns
sub
cmc
sub
cmc
data16
insb
test
lock
jnp
lcall
push
jb
or
sub
sub
fstpt
jl
dec
sub
sbb
loopne
aaa
shlb
test
push
mov
ss
push
lods
loope
imul
mov
sub
jo
scas
mov
pop
icebp
fwait
push
push
bound
or
push
mov
inc
sub
fldcw
stos
popa
sub
mov
and
sub
xchg
add
mov
push
push
mov
jle
push
aaa
lods
and
sub
xchg
cltd
shlb
or
stc
loopne
or
xchg
fsubrl
fyl2x
test
push
push
sub
or
add
sbb
and
lds
pop
pop
sbbb
stos
cmp
mov
mov
push
mov
push
mov
loop
dec
in
and
mov
flds
jae
hlt
and
push
inc
leave
mov
inc
xchg
addl
fsubr
out
outsb
jnp
xchg
add
jne
push
lods
and
dec
sbb
mov
mov
int
mov
popa
sub
inc
mov
pop
jecxz
test
jbe
ficoml
mov
shlb
mov
shll
scas
cmpsl
std
loop
popa
pop
jo
xor
sub
pop
cmp
loop
mov
and
xorl
sub
fdivrp
ret
test
loope
push
iret
sub
fcoml
xor
pop
rorl
cmpsb
mov
dec
adc
mov
and
xor
push
and
mov
movsl
xchg
push
pop
pop
dec
pop
fs
leave
addr16
sub
scas
popa
movsl
data16
test
push
cmp
movl
gs
and
in
movsl
addr16
xor
mov
mov
out
ljmp
xchg
ja
pop
mov
mov
pop
aad
rol
lret
shlb
jmp
stos
mov
mov
sti
sbb
inc
push
test
dec
add
add
push
inc
lret
cltd
or
pop
dec
mov
daa
sahf
stos
or
mov
cmp
mov
mov
mov
mov
mov
adc
mov
xor
and
inc
adc
movsl
shll
cmp
add
xor
insb
stc
out
movsl
mov
adc
movsl
cld
xlat
jae
mov
cmp
add
inc
cmp
mov
mov
leave
mov
imul
movsl
adc
shr
lds
jb
sub
or
push
pop
jbe
push
dec
movsl
addr16
aad
mov
lahf
mov
push
sti
lret
push
int3
movsl
jo
ret
nop
xor
sub
xorl
enter
fsubl
cmp
xchg
push
pushf
icebp
das
stc
push
movsl
mov
mov
pop
movsl
mov
in
cld
adc
xor
push
inc
xchg
cmp
xchg
mov
push
movsl
push
cwtl
mov
mov
and
in
mov
andb
mov
fnsave
inc
adc
jle
pop
sbb
scas
inc
cld
inc
stos
pop
movsl
jbe
adc
aad
or
loopne
mov
and
xor
mov
ds
popa
xchg
clc
shlb
fs
and
sub
or
mov
jl
mov
push
inc
sub
cmpsl
sub
popf
inc
sti
cmc
in
or
push
dec
jle
aas
cmp
xor
or
or
inc
xor
mov
push
leave
pushf
sub
jne
ficomps
int
mov
fimuls
adc
push
push
pusha
loop
or
and
dec
test
sti
data16
aaa
push
mov
mov
push
ret
and
in
and
test
cmp
push
mov
lret
data16
and
aam
popa
movsl
pop
leave
mov
aaa
sbb
pushf
movsl
lea
sbb
mov
xchg
dec
or
and
movsl
dec
cmp
adc
movsl
adc
negl
mov
jns
add
loop
movsl
jecxz
mov
test
or
mov
scas
push
rclb
cmp
mov
repz
movsl
push
icebp
cmc
or
fisttps
and
mov
in
sbb
cmp
and
stc
jge
enter
lods
sub
push
movsl
mov
out
xor
push
pop
cmc
or
imul
das
mov
ret
and
mov
sahf
fs
or
outsl
stc
sarb
jmp
fcomip
sti
xbegin
mov
push
loop
test
sbb
cltd
fs
mov
call
cmp
mov
mov
xor
cld
adc
sbb
pop
dec
inc
mov
cmpsb
push
movsl
pop
sub
pop
andl
movsl
lret
aad
dec
imul
shll
aaa
lcall
or
rcll
mov
movsl
lea
push
xor
mov
lock
cmc
fwait
mov
imul
movsl
lods
jns
cmp
xor
jl
lea
imul
aaa
sub
pop
movsl
cmp
inc
or
sub
jno
enter
pop
arpl
jecxz
sbb
push
into
out
aad
int
imul
mov
xlat
sbb
jl
rcll
imul
mov
mov
push
and
movsl
jae
lret
shl
push
imul
lcall
fstp
cld
mov
movsl
sbbl
xchg
inc
rcll
shlb
hlt
std
fsubs
cltd
xchg
sub
aam
lods
and
add
and
roll
jmp
push
lds
inc
sahf
pop
out
jmp
push
int3
daa
jp
popf
adc
cmc
jle
cpuid
add
sar
adc
push
jae
movsl
mov
sub
movsl
pop
adc
lea
push
push
adc
stc
enter
add
mov
int3
xchg
test
stos
mov
mov
pop
sarl
xor
insl
mov
clc
in
leave
xchg
cmp
out
mov
rorb
mov
loope
popf
cmp
fdivs
insl
push
push
insb
add
sti
push
cmpsb
mov
loopne
dec
mov
and
jl
jle
pop
out
push
sbb
lcall
aad
dec
mov
enter
loopne
addr16
arpl
rolb
into
sbb
and
inc
std
dec
jae
jecxz
movsb
loopne
lcall
xchg
fdivl
add
lods
stos
inc
iret
in
sub
lahf
mov
sbb
ret
mov
or
sbb
xchg
mov
adc
mov
cmpb
sub
or
push
jge
sub
aaa
or
pop
xor
inc
testl
js
and
test
push
mov
out
pop
popa
inc
push
mov
fcoms
out
fisubrs
cmc
into
in
fwait
mov
popf
pop
je
adc
cmc
cmp
jne
xor
jl
sbb
loopne
and
xchg
jae
mov
push
cld
fstpl
xor
or
aam
and
loope
sbb
or
xor
cmc
enter
cmpsb
add
or
imul
push
push
daa
push
mov
fucomip
adc
pop
es
lahf
sub
cltd
in
lcall
dec
mov
and
push
shl
add
rorb
outsl
in
cmove
cmpsb
xchg
cwtl
imul
ffree
inc
vpmovmskb
xchg
jbe
jp
loopne
fs
mov
movsb
xchg
cmp
xchg
sti
test
mov
and
xor
shrl
fcomi
js
jg
xlat
mov
jecxz
orb
test
add
sahf
div
call
cmp
xchg
push
pop
in
pushw
sub
lret
cmp
movsl
mov
stc
mov
lea
loopne
filds
outsb
loopne
das
jo
jne
imul
aad
mov
xchg
int3
enter
out
test
mov
push
and
and
mov
stos
daa
add
add
fmulp
in
pushf
sti
ss
mov
int
and
dec
sub
adc
mov
sti
dec
sbb
jmp
int3
mov
imul
sti
stos
movsl
pop
lahf
popa
and
sbb
xchg
scas
test
inc
jmp
pop
ret
or
dec
bound
xlat
mov
cmpsl
daa
adc
jno
lds
pushf
mov
lock
lods
add
nop
in
and
inc
cld
mov
stos
jae
stos
js
fnsave
cmp
in
jns
xchg
fisttps
cmc
add
mov
xor
adc
cmc
clc
lret
mov
mov
pop
aaa
push
mov
and
leave
repz
mov
and
mov
pop
in
xchg
mov
xor
lret
fstpl
push
mov
iret
push
leave
xor
notl
in
sbb
mov
mov
mov
mov
in
pop
repnz
inc
add
aad
lds
sbb
inc
push
movsl
jmp
hlt
pusha
fsubs
inc
adc
movsl
jge
dec
test
jle
pusha
lahf
sahf
mov
daa
and
lahf
push
inc
int
jno
or
lcall
out
loopne
cmpsl
mov
out
popa
inc
stos
xchg
mov
jns
aad
hlt
test
mov
cmp
sbb
ret
add
mov
sbb
jmp
lret
pushf
dec
dec
jae
adc
inc
enter
pop
movsl
add
test
movsl
subl
adc
inc
xor
jle
add
scas
int
and
aas
lcall
jge
cs
push
push
mov
in
movsl
in
dec
rcll
mov
pop
pushf
mov
cmpsl
xor
movsl
or
ret
flds
aaa
movsl
je
add
inc
imul
loopne
and
dec
push
aad
add
stos
movsl
mov
int3
outsb
sbb
lods
dec
movsl
cmp
shrl
xchg
test
cmp
sub
fstpt
xchg
dec
adc
bound
fisttps
cmp
shll
out
addl
fsubs
pop
shll
sbb
mov
loope
mov
stos
movsl
xor
cmpsl
add
outsb
add
movsl
lds
fs
stos
subb
movsl
lret
dec
xchg
js
push
arpl
movsl
push
ja
xchg
xchg
scas
mov
sahf
or
xchg
fwait
cs
cmp
xchg
int3
testl
mov
xor
test
aad
mov
xchg
cmp
ljmp
inc
movsl
insb
popf
out
mov
movsl
loopne
sbb
mov
inc
aaa
pop
push
push
cmp
dec
insb
jae
les
pop
add
mov
mov
push
faddl
or
sahf
adc
sub
push
mov
out
xchg
and
idiv
movsl
mov
cmpsb
adc
mov
mov
mov
and
inc
bound
jae
sbb
or
lcall
int3
add
jp
popa
jne
lods
cmc
movsl
sbb
icebp
call
movsl
cmp
outsl
movsl
inc
dec
push
aad
push
out
mov
pop
xchg
push
call
test
jl
or
aam
movsl
scas
xchg
int3
mov
es
or
push
pop
data16
ljmp
int
in
test
xor
xchg
add
fs
jae
or
jnp
int
imul
push
mov
movsl
jns
adc
adc
jg
pop
sbb
adc
sahf
call
fcoml
jno
mov
arpl
mov
movd
loop
xchg
lcall
data16
pop
mov
leave
shl
lret
mov
pop
jmp
ret
movsl
test
sbb
sbb
cltd
xlat
mov
pop
inc
cmpb
test
sub
movsl
imul
adc
adc
push
jle
add
xchg
or
cwtl
mov
outsb
jge
jbe
fstpl
adc
mov
sub
lock
in
inc
loop
cmp
outsb
movsl
stos
and
jns
sub
sbb
cmpsl
mov
leave
movsl
dec
cs
lcall
add
loope
sti
les
movsl
popf
adc
js
movsl
pushl
negb
push
mov
or
and
pop
dec
jno
cltd
add
dec
push
pop
mov
int
shr
iret
in
xchg
push
xchg
mov
movsl
jnp
icebp
aam
mov
push
mov
xorb
jns
fisubl
mov
rcrl
stc
and
clc
inc
sti
or
nop
ljmp
or
nop
add
sahf
mov
mov
fldenv
pop
pop
sub
jle
rcrl
mov
mov
arpl
jmp
jecxz
inc
test
enter
les
addr16
stos
inc
test
xchg
stc
pop
and
sub
mov
mov
pop
push
lea
adc
cmc
mov
adc
jg
jno
mov
and
ret
pop
jle
les
es
sbb
sub
cmp
fucomp
mov
xor
jmp
lret
lods
fadds
lahf
jne
pusha
mov
shrl
popf
xor
bound
cmc
rcll
mov
ljmp
fisttps
and
in
movsl
int
rol
or
ljmp
dec
push
sub
xor
mov
sahf
mov
push
mov
adcl
jg
push
fdivp
lods
adc
jp
int
sub
xchg
lret
add
imul
fdiv
ja
adc
mov
movsl
std
in
mov
or
std
mov
inc
pop
outsl
and
dec
movsl
addr16
pop
inc
dec
icebp
incl
mov
inc
mov
xor
fisubrl
enter
sti
push
mov
xor
xor
push
mov
xchg
inc
pushf
mov
and
mov
lods
mov
sbb
sub
movsl
popf
inc
xor
movsl
add
gs
outsb
jne
xchg
pop
out
fdivrl
push
imul
enter
mov
and
xchg
mov
push
je
jo
ret
mov
movsl
xlat
mov
es
movsb
stc
movsl
dec
pop
jne
dec
dec
orb
and
cmp
in
jne
cmp
fldenv
jns
lea
push
movsl
push
outsb
popa
and
pop
and
test
out
cmpsl
ret
in
mov
jo
fldl
movsl
push
pop
sahf
pop
xor
jecxz
xbegin
jo
cmpl
ds
dec
xor
sbb
imul
xchg
movsl
xor
aam
popl
repnz
pop
mov
stc
jbe
jmp
pusha
add
pop
mov
xchg
xchg
pop
inc
push
jmp
mov
inc
sub
dec
jle
inc
pop
mov
fwait
movsl
fmul
cmc
or
movsl
pop
pop
out
nop
inc
fistpll
lret
in
movsl
addr16
shll
sbb
jecxz
ljmp
sbb
mov
cmp
call
adcl
sub
fs
inc
jnp
movsl
sbb
loop
and
xor
fisttpll
mov
jl
imul
ret
and
movsl
jo
test
movsl
mov
sbb
cmpb
push
jbe
pop
adcb
movsl
vpaddusb
and
push
add
adc
cmp
dec
xorl
movsl
mov
mov
mull
pop
les
sub
sbb
pushf
lcall
movsl
fistl
repnz
jb
test
in
movsl
das
arpl
outsb
mov
imul
movsl
filds
fisubrl
ret
mov
add
mov
mov
pop
sub
jo
cmpsb
frstor
movsl
or
out
movsl
negl
push
imul
xor
mov
pop
mov
sahf
insb
jecxz
outsl
push
movsl
pop
dec
inc
xor
lret
movsl
repnz
mov
cltd
rcrb
mov
imul
movsl
or
jo
movsl
inc
or
pushf
mov
pop
movsl
stc
sbb
subb
sbb
and
addr16
aas
movsl
xchg
cs
mov
fstpl
xchg
cmpsl
sbb
fisubs
movsl
stos
and
sub
movsl
les
or
mov
inc
imul
add
ret
cmp
scas
movsl
or
xor
movsl
mov
fwait
cmp
add
call
mov
jle
pop
bound
cmpsb
leave
jp
add
testl
mov
fs
jmp
xor
sbb
movsl
repz
sbb
jb
gs
rorb
cmpsb
xor
xor
and
jb
add
aaa
cmp
pushf
mov
adc
xchg
jecxz
adc
adc
cmp
cli
movsl
out
rcrl
out
je
pop
das
inc
in
jbe
jns
pushf
adc
movsb
push
cmp
and
imulb
xlat
jp
sub
icebp
fdivr
out
out
jle
dec
sbb
cmpl
in
jbe
call
mov
xchg
pop
add
mov
lock
rcrl
mov
mov
add
shlb
bound
movsl
incl
pusha
jmp
xchg
rorb
movsl
mov
das
std
lret
ljmp
in
out
mov
scas
add
int
psubd
xchg
jmp
jb
inc
movsl
aas
ja
addr16
push
mov
push
sbb
punpcklbw
pop
lds
test
orb
push
ds
movsl
and
cmp
xchg
adc
sarl
jl
cld
push
mov
mov
or
sub
popa
addr16
xchg
and
movsl
or
fsts
push
or
jo
cmpxchg
adc
es
movsl
cmc
test
dec
bound
fisubs
adc
pop
push
scas
scas
cli
or
jbe
mov
daa
xor
in
enter
mov
cmp
dec
or
movsl
loope
push
dec
push
adc
hlt
push
leave
lahf
adc
lods
jns
jo
shrb
mov
xchg
mov
mov
ja
rclb
inc
push
add
rorb
and
sbb
out
je
jnp
fwait
stc
mov
sbb
in
jecxz
pop
pop
mov
cmc
mov
out
push
add
cmp
sub
stos
jne
pop
gs
push
aam
cli
dec
imul
cmp
movsl
sub
xchg
jne
adc
mov
push
iret
xchg
cmp
inc
push
push
test
mov
aad
cmc
adc
popl
repz
jno
fucom
xor
insl
mov
adc
add
xlat
outsl
xorb
jnp
into
imul
or
and
movsl
mov
out
and
es
xor
jge
lods
inc
or
rolw
das
sub
loope
lahf
and
jns
mov
cmp
movsl
sub
je
movsl
pop
adc
dec
lret
mov
fmull
mov
movsb
dec
push
cmp
push
std
xor
jle
pop
shr
lods
lds
movsl
scas
call
test
lcall
adc
test
xor
or
mov
push
mov
push
lcall
in
imul
inc
ret
in
xchg
iret
sti
cmp
std
push
movsl
data16
jnp
mov
dec
xor
fldz
call
out
aas
sahf
mov
push
xorl
fisubl
mov
clc
and
jo
out
add
jb
shll
cmp
inc
inc
rorl
cmpsl
add
push
or
shlb
add
test
loopne
cmpsl
sbb
repz
les
push
shll
int
test
mov
outsl
jmp
movsl
jp
inc
or
mov
mov
popf
ss
out
frstor
mov
movsl
repz
jns
mul
mov
cltd
aas
fmull
dec
dec
movsl
inc
or
jb
inc
mov
push
in
loope
repnz
call
jecxz
xor
movsl
pop
xchg
fcoml
add
mov
imul
mov
arpl
pop
sub
push
pop
in
dec
pusha
pop
iret
push
push
ror
sahf
jp
push
inc
add
loopne
addr16
fs
cwtl
jl
sahf
sub
ficoml
xchg
adc
stc
icebp
pushf
sbb
scas
add
popf
mov
mov
add
cld
mov
adc
push
cmpsb
xor
test
mov
or
pop
add
test
das
pop
outsb
shrl
mov
and
sbb
imul
cmp
mov
push
movsb
sub
sbb
cmp
xor
xlat
lods
mov
dec
pop
pusha
jb
mov
pop
push
pop
pop
mov
jns
les
adc
cmp
sbb
pusha
add
stos
js
sub
popa
inc
fnstenv
ds
dec
inc
mov
add
aas
or
cmp
sub
icebp
add
movsl
daa
push
in
xor
xchg
jmp
sti
mov
and
add
inc
in
pop
mov
es
sbb
shl
enter
jmp
mov
ficompl
loopne
lahf
sub
sub
leave
movsl
test
and
mov
cmp
movsl
jg
pop
xor
cmp
add
sub
add
fs
ror
dec
es
xor
lahf
cwtl
push
lret
enter
or
jno
pop
jle
mov
fdiv
and
jl
int
std
movsl
jl
mov
dec
movsl
fisttpll
orb
pop
xchg
inc
cli
in
fdiv
xorl
jecxz
stc
and
adc
roll
in
aam
and
sub
mov
xchg
dec
mov
frstor
cmpsb
adc
hlt
push
push
out
lcall
or
adc
lds
loop
jl
les
mov
ret
adc
mov
push
movsb
xor
icebp
loopne
je
dec
add
inc
jge
pop
movsl
jae
push
mov
add
sub
inc
out
dec
push
fistpl
sub
lahf
cs
movsl
mov
push
mov
movsl
mov
leave
jp
lods
loop
or
xor
ds
mov
hlt
xchg
pop
mov
pushf
mov
pop
dec
mov
mov
int
movsl
imul
and
sub
repnz
insb
in
movsl
lods
ds
hlt
lahf
inc
dec
fisubs
sbb
sbb
insl
push
dec
je
outsl
mov
inc
test
lea
sar
cmpsl
cmp
popf
sar
push
cld
testl
mov
movsl
bound
push
dec
pop
cmp
push
js
push
jb
int3
stc
movsl
jmp
daa
push
repz
arpl
leave
movsl
xor
pop
popl
subb
push
lods
mov
pop
mov
roll
mov
xchg
sarb
imul
jg
out
or
mov
adc
cmpsl
jp
pop
adc
xchg
sarl
mov
pop
or
mov
xor
in
xorb
add
add
fsub
lock
fmul
cmp
jne
jl
dec
lahf
adc
push
mov
fstl
popa
ret
pop
xor
cld
lea
push
in
stc
mov
or
stos
mov
cltd
movsl
sub
mov
lods
cld
testb
in
shll
test
aaa
stos
xchg
mov
orl
lods
add
mov
cwtl
movsl
enter
adc
add
mov
push
movsl
push
std
in
ja
movsl
scas
mov
imul
sub
cli
jnp
inc
loope
push
fstpl
push
push
xchg
mov
in
movsl
cmovge
ret
pop
xor
shlb
xchg
xor
aad
lahf
inc
push
popf
in
mov
test
sbb
and
push
sbbb
push
dec
push
subb
mov
mov
xchg
mov
inc
cmpsl
inc
sahf
push
in
adc
cmp
sti
shl
out
les
mov
sub
jno
aas
ret
pop
mov
push
enter
je
testl
mov
cli
jmp
cmc
add
movsl
pop
and
mov
and
in
icebp
insl
push
jmp
fcoms
and
pop
push
xor
dec
add
imul
movsl
sbb
sub
push
mov
das
test
mov
push
pop
mulb
ja
dec
adc
xchg
clc
in
test
scas
pop
xchg
mov
or
mov
stc
cli
lret
aam
iret
movsl
mov
add
fisubs
or
xchg
dec
push
cmpsl
or
iret
nop
xlat
mov
mov
cs
imul
push
std
xor
scas
push
pop
cmp
movsl
xchg
pop
adc
insl
pop
bound
notl
pop
push
jmp
add
pop
movsl
rcrb
cmp
popf
sub
push
loopne
inc
xchg
mov
lahf
insb
sub
lock
out
sbbb
adc
push
adc
jle
movsl
xchg
repz
pop
and
sahf
xor
adc
pop
push
incl
inc
xchg
sub
in
adc
jmp
arpl
ds
mov
or
sbb
lahf
push
lds
mov
adc
sarl
call
movsl
fdiv
ljmp
and
daa
movsl
in
das
int
pop
pop
gs
scas
sub
mov
xor
out
mov
push
push
in
lret
push
sar
inc
push
mov
lods
add
pop
in
idiv
pop
test
mov
mov
icebp
mov
int
mov
lds
pop
and
fwait
loopne
xchg
push
pop
testb
ret
jne
cmc
dec
pop
je
mov
gs
push
in
mov
add
cmp
sahf
std
mov
xchg
push
repnz
ret
mov
addr16
cmp
mov
test
into
jge
out
sbb
sahf
sar
cmp
fldenv
movsl
movsb
fwait
arpl
movsl
mov
pop
pop
jl
pop
push
mov
test
mov
fidivrl
and
lods
dec
jae
push
sbb
inc
movsl
pop
pop
sar
fsts
movsl
mov
sbb
leave
test
movsl
push
push
out
jae
icebp
xchg
movsl
xor
or
movsl
xor
std
pusha
or
jno
testl
data16
and
sub
movsl
fidivs
movsl
push
mov
sti
pop
pop
repz
je
cmpl
pusha
mov
pop
test
or
dec
ljmp
add
addr16
movsl
push
mov
dec
in
cmp
movsl
std
pop
pop
push
mov
imull
pop
pop
int3
movsl
inc
inc
mov
and
pop
mov
sbb
push
movsl
mov
movb
movsb
cmp
sub
js
dec
jne
xchg
or
scas
xor
cld
outsb
sub
lcall
fwait
in
shll
pop
lahf
test
fwait
pushf
push
movsl
loopne
in
jle
outsl
mov
fstp
repz
mov
gs
push
movsl
js
je
rorb
dec
movsl
mov
adcl
cmp
mov
enter
mov
or
addb
dec
stos
adc
cmpsl
lcall
xchg
pop
sbb
roll
popa
movsl
push
repnz
movsb
adc
mov
ret
xor
addl
cmp
xlat
push
outsl
cmp
xchg
and
out
inc
jle
int3
movsl
scas
jae
pop
lods
mov
adcb
xor
push
pushf
pushf
dec
xlat
cmp
mov
in
fcomps
mov
out
push
fadd
xchg
mov
xor
inc
mov
iret
ffreep
sub
data16
out
loope
mov
sbb
dec
pop
daa
push
sahf
into
sbb
stos
mov
jae
cmc
push
movsl
insb
push
iret
mov
movsl
cmp
mov
xchg
inc
jb
cmpsb
jnp
jne
out
push
test
clc
jno
jge
testl
xchg
xor
popa
andb
inc
xchg
movsl
mov
lahf
movsb
xlat
pop
fdivrs
dec
jg
dec
mov
fisttpll
lds
test
repz
outsl
or
adc
pop
in
sub
ds
jnp
lea
push
sub
cmp
mov
push
decb
scas
das
ljmp
adc
or
mov
lahf
pop
sbb
stos
inc
sbb
and
dec
push
movsl
icebp
mov
cmc
out
lock
jo
and
testb
lods
popf
sub
negb
mov
xlat
and
or
sub
cwtl
push
movsb
arpl
bound
je
lcall
jmp
sub
push
scas
push
sub
lods
mov
adc
jns
sub
mov
inc
cwtl
pop
popa
mov
lods
jns
push
add
mov
mov
lret
jg
adc
dec
inc
int
imulb
arpl
pop
xlat
and
imul
movsl
inc
popa
sub
sub
test
out
sahf
cmp
adc
mov
mov
inc
sti
xchg
inc
addr16
out
push
xchg
adcl
sub
addb
mov
sbb
shll
mov
clc
cmpsl
divl
hlt
lods
ljmp
pop
cmp
mov
sbb
fcoms
neg
cwtl
mov
dec
push
int3
push
pop
repz
pop
mov
in
add
push
shr
jl
aad
add
inc
mov
pop
or
movsl
jb
sub
std
or
das
mov
or
dec
nop
push
sbb
lcall
sub
daa
push
test
nop
push
push
rolb
std
jnp
ds
sahf
pop
and
mov
lods
or
loope
add
fidivrl
enter
dec
add
lods
mov
cmp
shrb
insl
cmp
xor
decl
outsb
icebp
fidivl
sub
and
sub
das
push
sbb
js
loopne
pop
sbb
push
inc
mov
or
lods
sbb
pusha
stos
jecxz
stc
cld
sub
mov
sub
push
pop
and
cmp
xchg
stos
dec
inc
imul
mov
cli
lods
xor
or
xor
and
dec
pop
mov
fcomps
push
insl
lods
pop
loopne
int
push
push
test
divl
xchg
test
in
jo
push
pop
mov
stos
ret
push
jne
imul
jmp
popa
sub
sahf
push
cmpsb
and
stos
scas
xor
iret
xor
addr16
cmp
movsl
sub
mov
xor
stos
inc
dec
ja
roll
test
inc
andb
sub
or
cmc
sub
test
or
fs
idivb
inc
pop
push
stc
shrl
push
stos
stos
jno
push
cli
out
fsubl
jl
push
sbb
js
mov
dec
or
xor
jnp
and
cmp
das
dec
mov
jb
jmp
jnp
mov
int3
mov
pop
mov
bound
lds
sub
fmul
lret
pushf
xorl
mov
test
scas
push
adc
push
in
enter
clts
dec
sbb
xor
scas
fwait
jmp
into
cmp
or
aam
insl
cmp
dec
movsl
icebp
repz
xor
mov
int
push
loopne
xlat
dec
daa
movsl
cmp
sbb
xchg
sahf
push
mov
xchg
fisubs
fisubs
mov
mov
and
add
stos
pop
loopne
jb
pop
cmc
daa
xchg
int
push
loopw
sub
cmp
sbb
or
jg
mov
jge
push
jge
xchg
and
stos
cmp
push
mov
std
pop
dec
int
in
sbb
push
xor
push
scas
jnp
add
cmp
jnp
pusha
add
out
cmp
loop
es
or
mov
popa
mov
cmpsb
inc
insb
jns
xor
cmp
dec
cmc
pop
addr16
xor
roll
pop
lret
cli
aad
dec
je
loopne
jb
dec
repnz
out
lods
loopne
sbb
xchg
pop
cmp
das
incl
mov
test
js
enter
std
dec
jg
mov
inc
rcll
pop
int
push
in
cmpsl
jmp
and
push
loopne
mov
xchg
adc
sbb
add
adc
xor
lea
inc
push
adc
or
mov
xchg
push
icebp
adc
data16
xor
out
xchg
cmp
mov
arpl
xchg
clc
lahf
fwait
xchg
js
hlt
dec
sbb
sub
out
mov
daa
adc
lods
inc
mov
cmp
out
lods
or
mov
mov
lods
adc
inc
xchg
jp
sbb
out
es
mov
pcmpeqb
sbb
push
push
fbstp
fisttpl
or
push
movsb
clc
icebp
mov
les
rcll
xlat
js
testb
adc
mov
jne
and
stos
es
xchg
mov
divl
mov
cmovge
mov
nop
mov
les
and
mov
sub
ss
xor
sub
or
sbb
lods
mov
or
or
and
xor
inc
fs
inc
fsubrs
loop
xchg
add
mov
cmpsl
fiaddl
jge
cmp
and
movsb
cld
addr16
inc
adc
pop
xchg
aaa
dec
repnz
frstor
fiadds
int
mov
dec
or
xchg
jge
mov
fsts
movsl
push
stos
std
insb
pop
mov
sbb
loope
push
imul
movsl
lret
cwtl
imul
mov
pushf
ds
lods
or
das
push
movsl
fs
adc
movsl
pop
or
xchg
mov
enter
call
jno
arpl
pop
xchg
pop
push
or
fucomi
in
lock
aas
mov
mov
and
and
mov
shll
inc
test
sahf
jb
and
dec
xchg
adc
cmpsl
or
sub
movsl
xor
or
lods
insb
push
add
popf
mov
and
xorb
pop
add
push
jge
jl
imul
mov
out
push
nop
inc
movsl
xor
repz
ljmp
push
xchg
fs
pop
push
shl
push
shlb
fs
xchg
inc
pop
jmp
push
push
repnz
pushf
stc
hlt
subl
nop
xor
rol
out
loop
push
fbld
lods
and
fldenv
lahf
add
jns
ds
adc
test
mov
hlt
jmp
call
xchg
mov
in
pop
mov
lcall
das
movsl
into
or
test
out
movsl
jge
out
jmp
and
jecxz
pop
dec
ljmp
outsl
jg
push
out
mov
popa
mov
sub
xchg
xor
popf
mov
inc
dec
mov
daa
out
jmp
loop
shrl
ret
fcomp
insl
add
sahf
cmp
leave
mov
push
shr
xor
nop
sbb
movsl
adcl
int
movsl
push
adc
scas
xchg
mov
or
cmpxchg
pop
and
test
pop
sbb
push
mov
loope
xchg
cwtl
lret
xchg
js
sub
cmpl
in
movsb
push
dec
sahf
cmpsb
lods
sti
push
add
sub
into
test
push
pop
movsl
cmp
pop
push
mov
aad
loop
adc
lock
ja
inc
sub
and
mov
xor
cmp
movsl
nop
mov
add
into
test
cmc
loop
sub
adc
mov
pushf
imul
jl
push
lret
mov
push
adc
movsl
pop
pand
pop
xchg
xchg
mov
or
in
mov
mov
mov
sbb
gs
cld
mov
inc
pop
pop
pop
movsl
sti
test
loopne
aad
pop
cmpsl
retw
hlt
cwtl
lret
repz
into
sar
test
fisubrs
cmpsb
or
out
sbb
imul
mov
mov
scas
dec
movsl
add
enter
sahf
sbb
jnp
movsl
and
add
lret
sub
pop
popa
je
aaa
shlb
inc
sti
push
mov
clc
xor
and
sbb
xchg
mov
xor
add
mov
lods
in
xor
scas
jp
test
jmp
addr16
movsl
push
fsub
test
mov
sub
adc
jle
pop
je
shrl
mov
jnp
dec
sti
adc
mov
mov
push
pop
xor
andl
jo
xchg
adc
cmpl
lods
lds
andl
test
ss
aad
mov
jle
leave
pop
push
hlt
movsl
in
scas
or
pop
cld
ror
xor
mov
lods
jo
mov
arpl
xorl
aaa
stos
push
push
out
movsl
lods
pop
imul
cltd
movsl
inc
mov
pop
js
clc
push
mov
push
mov
movsl
mov
data16
movsl
into
in
test
cmp
mov
inc
push
jne
icebp
movsl
imul
xor
les
add
inc
popa
in
inc
ds
ss
jmp
movsl
cmp
mov
insl
adc
xor
stc
out
cmp
cmpsb
lds
jmp
inc
pop
ljmp
or
jge
loope
add
not
fadd
movsl
mov
mov
movsl
xchg
push
or
mov
movl
movsl
rcr
mov
and
xor
mov
cmp
lds
adc
ds
sahf
test
sub
and
xor
in
in
mov
mov
movsl
xchg
lahf
inc
jb
scas
push
rep
push
adc
pop
neg
sbb
inc
push
movsl
repz
clc
xlat
incb
fs
movsl
adc
push
inc
jne
dec
mov
or
mov
movsl
push
or
mov
loop
decb
cwtl
sbb
xlat
mov
adcl
dec
mov
push
sbb
jns
popa
js
test
cmpsb
ret
rorl
ljmp
jl
ja
insb
mov
das
push
ds
rcrb
movsl
push
pop
ja
adc
cld
cmp
shlb
mov
xchg
mov
movsl
cmp
adc
aam
xchg
pop
and
daa
aaa
jno
push
scas
jns
movsl
dec
lahf
test
push
or
mov
popa
leave
int
and
or
push
lock
out
and
pop
mulb
pushf
xchg
cmp
mov
test
lds
ja
into
mov
mov
xchg
push
mov
popf
jno
adc
inc
lds
vucomiss
sbb
add
pushf
sub
and
push
popf
shlb
xchg
sub
into
push
fcoml
es
movsl
in
sub
xchg
sub
adc
fsts
pop
xor
add
xchg
mov
lea
or
pop
add
lds
testb
clc
xor
push
popa
roll
lds
lea
movsl
push
lret
in
int3
adc
dec
movsl
dec
sub
lds
jb
leave
out
push
shlb
aaa
sub
popa
imul
jnp
cmp
mul
fsubl
mov
mov
das
les
fdivs
out
stc
bound
dec
adc
popf
rolb
stos
sub
add
aam
pushl
out
int3
outsb
and
into
andl
lret
mov
dec
dec
pushf
jg
sbb
add
movsl
cmpsb
cs
mov
xchg
fidivrl
pop
jae
inc
je
icebp
ja
nop
sti
movsl
jb
fiadds
movsl
xchg
xor
int3
stos
popf
movsl
bnd
fcomip
push
inc
add
test
addr16
push
add
pop
fs
add
sub
insb
repz
movsl
jae
ds
movsl
rcll
pop
xchg
add
cld
sub
movsl
dec
jo
aad
jmp
push
movsl
test
inc
cmovno
rcrb
in
ja
xchg
mov
mov
sarl
lcall
popf
in
pushf
aad
pop
out
fists
test
jg
sbb
into
sub
fmull
jl
test
lods
mov
lcall
rcr
cmc
adc
andl
movsl
arpl
xchg
push
dec
imul
iret
movsl
sub
and
inc
xor
lods
pushf
rolb
rcl
movsl
fwait
inc
cmp
lret
iret
ljmp
lret
je
ds
mov
test
movsl
in
mov
fxch
xchg
frstor
jnp
or
and
shl
movsl
dec
add
cltd
test
and
or
mov
cmp
inc
test
cmpsb
mov
push
and
sub
cmp
adc
xchg
and
pop
sbb
or
xchg
adc
adc
and
push
dec
add
inc
test
sarb
mov
xchg
icebp
and
lock
add
js
fldl
inc
lods
mov
stc
push
dec
fcomip
aam
and
orl
jne
cmpsl
loopne
loop
and
dec
sbb
mov
icebp
push
test
mov
sub
ds
fdiv
int3
stos
subl
xchg
inc
pop
sub
call
out
adc
in
dec
sbbl
outsb
mov
lret
scas
mov
push
inc
fidivrl
xchg
test
inc
mov
cmpsl
data16
dec
loope
sub
dec
mov
jns
sub
sub
popf
lds
fs
xchg
xlat
outsl
cmp
icebp
test
jl
mov
push
or
mov
mov
fildll
add
jnp
rcrl
fisubl
xor
xchg
sub
push
fbld
shl
add
sarl
scas
sahf
and
fnsave
pusha
pop
cmp
rolb
test
iret
subl
sbb
cmc
mov
pop
stc
jbe
add
and
in
std
cli
sub
add
fucomp
push
pop
xchg
sbb
cmpsb
push
cmpsl
add
aas
dec
shll
lods
cmp
fwait
in
and
sti
stos
js
dec
mov
push
sub
sti
scas
xor
das
out
pop
inc
insb
pop
inc
insl
dec
movsl
cmp
xchg
inc
cmp
insl
push
pcmpgtd
imul
push
pop
add
xchg
cmp
subb
xchg
xor
fldl
test
icebp
mov
sti
and
rclb
cmp
test
orl
mov
popf
out
inc
push
pop
mov
xchg
lock
add
sbb
push
xchg
clc
sbb
ficompl
sbb
fadds
mov
fidivs
jmp
daa
mov
gs
movsl
mov
xor
jl
nop
sub
divb
shl
pop
mov
hlt
push
or
mov
clc
push
push
lds
adc
mov
push
rol
or
mov
sbb
call
enter
add
insb
pop
mov
movsl
push
and
movsl
jmp
mov
xchg
jb
mov
sub
movsl
inc
xchg
add
pop
push
pop
andl
loope
jmp
ljmp
mov
ss
jle
shll
insb
jne
adc
orl
add
push
mov
jne
shrl
sub
test
in
add
xchg
or
dec
sub
xchg
rolb
mov
movsb
mov
nop
daa
xchg
sub
out
imul
stc
cmp
cmp
jle
add
lahf
xchg
jmp
xlat
movsb
cld
out
movsl
loope
mov
sbb
jg
mov
hlt
and
jno
dec
push
jg
mov
pop
jg
inc
orb
addr16
jbe
pop
push
lock
xchg
test
dec
lds
imul
and
sub
push
cli
scas
pop
rorb
je
jg
jnp
fidivrl
push
leave
lret
sbb
xchg
movsl
dec
ret
out
fisubs
add
repz
daa
inc
test
and
cli
jp
or
jno
or
enter
cli
mov
std
push
jg
mov
push
xchg
dec
outsl
addr16
jge
scas
movsl
imul
and
test
sbb
mov
pop
mov
mov
adc
pop
mov
out
int
clc
roll
and
or
dec
in
call
lcall
movsl
and
or
mov
out
mov
push
stos
adc
xor
push
xchg
xchg
pop
mov
pop
jmp
sarb
movsl
mov
bound
adc
mov
movsl
add
mov
jnp
cli
sub
mov
gs
fwait
loope
movsl
hlt
iret
js
je
xchg
or
in
push
ljmp
push
xorl
insb
imul
xlat
inc
xchg
roll
push
xor
clc
dec
movsl
mov
jg
mov
ret
lds
lcall
and
fldcw
push
jmp
adc
int
pop
adc
pop
or
sbb
add
pop
push
test
repz
mov
lds
mulb
push
mov
cltd
pop
xchg
mov
sub
icebp
insb
movsl
sub
out
aaa
fs
inc
ljmp
mov
pop
fisubl
jnp
adc
in
mov
fdivrs
xchg
lret
sbb
cmp
fsub
xor
xor
scas
or
mov
lahf
xchg
mov
movsl
push
cmpsb
push
dec
rol
sahf
jae
dec
jle
fs
mov
test
loopne
mov
leave
negb
and
mov
pop
mov
movsl
push
pop
insb
inc
adc
mov
sub
dec
mov
adc
pop
inc
jmp
add
call
jp
movsl
into
cld
shrl
icebp
dec
rep
push
mov
dec
movsl
outsl
dec
insb
sub
aaa
cmpsb
movsl
and
pop
dec
jl
leave
in
movsl
aad
push
test
xchg
sub
out
pushf
cmp
mov
mov
out
mov
push
mov
popf
sub
test
jle
inc
cltd
pop
mov
mov
lahf
xor
in
push
inc
pop
in
stos
mov
mov
in
pop
or
imul
movsl
outsb
ds
mov
rcrl
movsl
push
cmpl
repz
movsl
lock
std
inc
sbb
jns
fnstenv
outsb
and
xchg
adcb
cmc
test
sahf
movsl
push
pop
les
or
xchg
or
and
dec
js
mov
movsl
lea
push
mov
movsl
jae
aam
hlt
cmc
pop
pop
pop
sub
mov
loope
jbe
loopne
dec
sahf
fwait
rclb
mov
jecxz
xor
cmc
mov
shlb
push
addr16
jl
pop
test
movsl
das
jp
jo
pop
sarl
lret
cwtl
cltd
cmp
popa
int
movsl
hlt
std
cli
jbe
ja
and
sub
lcall
or
dec
mov
mov
aam
in
cmp
out
jns
and
xor
dec
push
ret
adc
repnz
std
dec
movsl
jmp
dec
push
and
add
in
andl
mov
or
inc
into
jge
loope
test
movsl
jne
lock
std
mov
sub
cmpsb
xor
push
imul
scas
fwait
ret
dec
push
in
imul
push
call
movsl
and
mov
in
pop
insl
pop
pushf
negl
inc
xchg
fldl
movsl
sub
je
pop
pop
xchg
movsl
and
sar
jo
jns
movsl
or
pop
xchg
in
into
push
movsl
add
jnp
xorb
xor
call
sub
aas
push
push
gs
int
movsl
jp
push
imul
in
pop
xor
je
push
movsl
jecxz
pmulhw
add
sbb
jmp
jmp
out
jmp
or
pop
repnz
dec
outsl
xor
movsl
lock
jb
lcall
div
les
mov
mov
adc
mov
cmpsl
dec
insl
mov
adc
jmp
and
mov
aaa
in
cmp
in
int
shlb
int3
fbld
es
cwtl
mov
cmpsl
mov
pop
inc
push
in
imul
inc
mov
sub
cmp
and
outsl
int3
lahf
test
xor
shlb
lds
inc
cmpsb
push
sub
sub
pop
test
pop
cwtl
mov
addr16
movsl
loopne
cmpsl
mov
jecxz
sub
sub
mov
outsb
dec
int
popa
jo
sub
jle
int3
in
sbb
dec
bnd
aad
call
int3
mov
scas
dec
in
scas
test
in
and
mov
jae
ljmp
cmp
imul
fiaddl
and
mov
lods
test
cmp
sahf
pop
in
or
mov
adc
cmpsb
movsl
xor
std
loop
aas
pop
sbb
mov
fsubl
sarb
popf
xor
and
lods
outsl
mov
pop
xor
js
mov
cmc
push
dec
hlt
popa
je
dec
mov
cmpsb
aaa
cmp
into
sbb
cwtl
sbb
mov
leave
xchg
loope
test
jmp
fwait
int
in
push
and
das
add
sbb
or
mov
pop
ret
js
or
test
push
jmp
andl
nop
mov
loopne
ljmp
and
movsb
mov
loop
setae
mov
xchg
push
mov
mov
movsl
ja
pop
inc
mov
out
pop
loope
roll
das
imul
jb
pushf
int3
lds
fwait
push
movsl
in
out
pop
sbb
shr
cmp
outsl
insb
xchg
cmp
or
mov
mov
and
add
fadds
jae
push
mov
cmovno
mov
pop
cs
xchg
cmp
xor
xchg
sbb
sub
adc
movsw
add
mov
sarl
add
jecxz
jns
or
cmp
sub
loope
mov
jns
test
stos
imul
pop
clc
out
in
xchg
mov
imul
icebp
loope
jmp
lds
mov
or
movsl
mov
fdivrl
movsl
xchg
xchg
inc
mov
nop
movsl
cmp
stc
fcomip
movsl
bound
test
pop
mov
dec
in
aam
movsl
fildll
or
movsb
scas
mov
or
mov
add
and
das
movsl
dec
mov
mov
movsl
pop
mov
loop
movsl
or
add
mov
add
loope
mov
mov
scas
les
call
xchg
movsl
scas
or
dec
mov
adc
bound
mov
lret
mov
out
mov
dec
jae
xchg
xchg
jnp
sbb
xchg
mov
ret
mov
arpl
movsl
out
xor
movsl
add
pop
jl
inc
imul
sbb
rdpmc
lahf
and
mov
movsl
dec
ja
pop
jns
andl
mov
mov
movsl
lea
jl
leave
and
movsl
mov
pop
iret
je
scas
cmp
lods
sbb
aas
and
lcall
sbb
movsl
cs
xchg
mov
bound
ret
stos
mov
pop
sar
lret
sub
aaa
pop
mov
bound
adc
cmp
fidivrl
or
or
stos
pop
cmp
repnz
movsl
aas
xchg
pushf
movsb
add
mov
jbe
xor
cmp
test
cwtl
cmc
stc
int3
sub
push
sahf
xchg
mov
add
xchg
movsl
push
shrb
movsl
jp
mov
sbbb
movsl
or
xor
dec
insl
mov
push
pop
cmp
cmp
movsl
sub
xlat
mov
imul
mov
stos
cmp
mov
sub
mov
and
in
insl
inc
movsl
sub
movsb
into
inc
lock
dec
pop
outsl
jbe
in
insb
in
sti
iret
pop
out
outsb
add
pop
into
cmpsb
movsl
cmpsl
jno
xchg
movsl
pushf
add
movsl
xchg
gs
dec
mov
xor
int
jl
movsl
mov
icebp
jmp
or
jno
add
xchg
cmpsb
insb
popa
ret
cmc
mov
cmp
repnz
test
cmp
out
or
in
arpl
push
call
add
movsl
fs
clc
sbb
pushf
cmpl
mov
adc
out
movsl
nop
or
jmp
adc
rol
movsl
rolb
outsb
push
inc
pop
ja
rclb
or
movsl
pop
lds
inc
adc
movsl
mov
xlat
mov
in
popf
jg
xor
mov
iret
xchg
into
repz
xlat
xchg
ret
and
aas
jne
loope
test
pop
nop
movsl
push
jo
xchg
adc
mov
test
in
dec
movsl
or
pop
insb
stc
cwtl
cmp
mov
mov
in
mov
mov
sbb
dec
add
fcomip
loopne
mov
add
jecxz
xor
push
icebp
inc
loopne
inc
cmp
and
cmpsb
inc
mov
push
imul
fstps
incb
cmc
adc
fsts
pusha
jge
loope
sbb
inc
mov
jecxz
jb
fimuls
subl
push
inc
jmp
jae
mov
cwtl
xor
fs
pop
stos
add
jae
jbe
hlt
inc
sub
xchg
pop
enter
adc
shlb
cmp
jns
inc
xchg
lds
jp
xor
add
bound
mov
dec
iret
stos
cmp
into
xchg
fistps
test
cs
lods
movsl
push
lcall
xchg
mov
mov
mov
xlat
adc
cmc
sub
mov
adc
rcll
test
jmp
movsl
lcall
jb
mov
add
mov
movsl
js
lds
cmp
inc
sbb
inc
adc
movsl
inc
js
push
jg
jb
mov
sub
in
xor
push
imul
xor
ret
btr
xor
sti
inc
in
push
stc
mov
push
adc
pop
in
loopne
out
adc
movsl
sub
jmp
cltd
lcall
ret
fsts
cmp
sub
cltd
daa
addr16
pop
ds
cli
out
jecxz
in
mov
dec
pop
imul
mov
arpl
test
cmpsl
ret
mov
mov
sti
push
pop
xchg
push
xor
jmp
enter
lcall
xor
fwait
ljmp
or
cwtl
sub
aam
enter
jp
push
aad
pop
movsl
scas
dec
clc
cltd
jecxz
fcmovnu
movsl
cmpsl
lret
or
xchg
movsl
jmp
shlb
stos
out
xor
icebp
sti
mov
movsl
mov
dec
dec
jl
push
adc
pusha
shlb
inc
ljmp
and
out
daa
mov
int
adc
xchg
jg
lret
nop
xchg
mov
pop
arpl
sub
fs
pop
mov
aad
add
sub
jecxz
mov
movsl
or
pop
addb
mov
outsl
adc
add
mov
dec
pop
jp
mov
shll
sbb
jo
gs
pop
in
lods
xor
cmpsl
pop
pushf
loope
sub
inc
adc
inc
movsl
mov
and
movsl
out
fists
mov
shl
mov
mov
dec
adc
sbbb
imul
cwtl
enter
pop
movsl
mov
jmp
jg
xchg
shl
and
icebp
aam
test
push
xchg
inc
loopne
in
xchg
adcl
es
dec
push
movsl
mov
mov
int
push
cs
cwtl
cmc
sbb
test
mov
loop
cltd
aaa
and
rcrb
mov
fdivs
xchg
cmp
testl
mov
xchg
mov
fistl
jmp
jmp
movsl
lret
aad
mov
push
popa
ss
xchg
test
mov
push
adc
mov
and
sbb
pop
call
sub
sbb
shll
xor
shrl
add
test
adc
inc
sbb
out
jp
dec
movsl
push
xchg
sbb
mov
test
pop
popa
mov
push
outsb
imul
in
sub
loopne
mov
movsl
stc
lea
outsb
xor
movsl
xchg
push
out
jmp
jnp
movsl
pop
inc
push
push
mov
sti
out
out
mov
jmp
jmp
movsl
enter
xchg
xor
mov
sub
xor
fs
sahf
dec
jne
dec
mov
push
test
sub
je
addb
xchg
int
jne
adcl
push
inc
push
jae
int3
mov
xor
lret
subb
in
or
mov
sub
mov
jb
mov
out
mov
xchg
aad
imul
movsl
and
ja
jle
iret
imul
xor
xor
in
lahf
out
movsl
cs
pop
pusha
add
or
idivb
pop
jae
ds
add
or
and
movsl
out
xor
repnz
cmp
cmp
test
repnz
movsl
js
sub
lods
sbb
or
mov
and
mov
nop
daa
xor
mov
ror
push
or
out
add
movsl
shr
inc
xchg
cwtl
and
push
cwtl
mov
pop
xor
les
xlat
cli
inc
sbb
adc
jnp
sbb
jne
sbbb
xchg
xchg
jno
repnz
cmpsb
dec
sbb
mov
mov
imul
es
arpl
inc
mov
and
fcoms
out
mov
aaa
sarl
jecxz
inc
loope
and
xlat
mov
pop
mov
das
out
sbb
sbb
inc
test
mov
push
lea
int3
sub
test
jle
int3
mov
lahf
or
push
mov
loope
sbb
and
fnsave
mov
sub
scas
dec
inc
cmp
mov
icebp
mov
pop
mov
out
fdivp
ja
xchg
pop
in
shlb
mov
mov
stos
mov
sahf
sbb
loope
sub
add
mov
inc
push
pop
sbb
mov
add
rcll
mov
pushf
dec
push
cmpsl
xchg
add
adc
jecxz
lods
sub
xor
mov
int3
lock
movsl
shrl
je
add
jo
xchg
dec
or
movsl
popa
sub
sub
mov
or
idiv
fsubrs
and
adc
and
mov
orl
dec
and
or
push
mov
loopne
pop
cmc
cli
out
ret
pop
dec
cmp
jne
iret
and
sti
or
sahf
or
std
ficomps
inc
mov
sub
outsb
and
ljmp
xchg
xchg
popa
adc
fidivs
and
sbb
inc
cmp
mov
jb
frstor
pop
cmp
mulb
jns
loope
sbb
ja
lret
xor
adc
lahf
movsl
cmp
jl
dec
arpl
cwtl
rolb
push
icebp
adc
fistpl
lcall
arpl
in
mull
call
jbe
lret
pop
in
fsubrl
in
mov
cmc
adc
or
cltd
inc
add
jnp
cmp
push
pop
push
or
decb
scas
pop
ffreep
push
mov
sti
push
lock
or
sbb
jnp
and
xchg
add
mov
cmp
xchg
ret
into
movsl
and
dec
daa
fnsave
and
test
notl
and
scas
xorb
mov
popa
pop
in
pop
les
inc
lret
test
in
js
orl
pop
mov
inc
lret
or
dec
jg
icebp
mov
xchg
lods
xchg
cmpsb
and
mov
fwait
sbb
arpl
lock
mov
lcall
pop
add
out
sti
movsl
pop
lret
lcall
adc
icebp
mov
xchg
inc
scas
stos
movsb
cmc
adcl
mov
sub
adc
xlat
cld
lods
jae
sub
in
je
mov
sub
in
int
jnp
mov
aaa
test
scas
out
adc
adc
adc
ret
sbb
or
imul
pop
xlat
repz
mov
in
call
stos
adc
in
dec
push
and
es
icebp
loop
pop
outsl
mov
add
mov
mov
xchg
mov
adc
movsl
and
sbb
out
or
in
pop
test
xor
movsl
mov
inc
xorl
test
or
dec
bound
xchg
push
mov
daa
adc
sbb
fdiv
in
push
xchg
stos
cmpsb
push
mov
jge
pop
or
outsl
leave
xchg
cmp
pusha
dec
shlb
pushf
mov
test
outsb
leave
inc
dec
mov
sahf
dec
lds
outsl
popa
adc
mov
cli
and
inc
adc
adc
mov
inc
data16
mov
lods
or
aad
add
in
daa
xor
test
xchg
push
push
jmp
lds
jg
jge
ljmp
push
out
or
insb
test
insl
fdivrl
xor
jno
jg
push
test
and
movsl
dec
lock
jo
dec
push
sahf
xchg
lods
jnp
mov
add
movsl
addr16
cmpsl
xor
mov
add
ds
xchg
lret
sbb
jbe
and
movsl
pop
inc
jl
xlat
out
scas
or
lea
idivb
mov
or
mov
inc
sahf
or
lods
movsl
in
out
xor
je
mov
cmp
fsubs
jmp
cwtl
ja
lret
xorb
and
xchg
ret
iret
movsl
lds
or
pop
jg
mov
and
in
adc
pushf
mov
mov
lret
movsl
aaa
cwtl
xchg
mov
sar
ret
adc
sub
xchg
test
mov
ja
repz
push
xor
fildl
jnp
insb
xchg
jno
je
insb
push
outsb
pop
push
cmp
jmp
negb
stc
lock
xchg
add
mov
in
nop
inc
mov
dec
cltd
dec
js
xor
jno
imul
dec
adc
dec
out
iret
scas
jle
insl
stos
xor
mov
mov
addr16
and
insl
push
dec
push
movsl
loopne
push
pop
push
enter
les
fwait
push
movsl
fisttpll
cltd
dec
adc
mov
sbb
sub
mov
movsl
jno
mov
lds
fimull
popf
movsl
mov
out
movsl
sbb
test
adc
in
cmpl
popf
lods
xor
cmc
shr
sub
fisttps
ficomps
pop
lret
and
lds
pop
fsubl
or
shlb
adc
xchg
inc
bound
call
dec
js
gs
shll
add
scas
lds
movsl
outsb
adc
mov
out
loopne
or
sub
mov
fs
scas
movsl
cltd
aas
test
xchg
push
movsl
jmp
ljmp
ss
sbb
out
and
cs
cmp
inc
hlt
repz
ja
nop
pop
out
clc
scas
movsl
js
inc
adc
push
std
push
mov
andb
mov
dec
or
aad
mov
lock
jnp
sti
aam
testl
popa
or
movsl
mov
cmpsb
xor
mov
pushf
fimuls
jmp
xchg
xor
testl
sub
mov
jle
xchg
pop
popf
cmp
int3
out
loope
mov
test
in
xor
sbb
divl
xchg
jg
or
and
js
lret
bswap
or
jns
add
dec
cld
jecxz
movsl
dec
adc
mov
pop
mov
add
xchg
lret
inc
movsl
xor
sub
sbb
or
push
dec
add
andb
adc
movsl
or
xchg
nop
xor
push
lods
cmp
xchg
movsl
fdivrs
xchg
push
js
scas
adc
mov
cli
jg
lds
call
or
popa
adcl
mov
call
into
jmp
jo
ret
mov
jg
movsl
int3
clc
push
aaa
nop
jne
inc
push
xchg
mov
loop
pop
inc
loopne
dec
xchg
push
rorl
movsl
outsb
pushf
ficoml
xchg
mov
and
fmul
lods
in
xchg
shll
lahf
push
add
call
mov
fnsave
xchg
cltd
pop
scas
jno
sbb
sub
sbb
les
imul
and
lods
in
stos
add
xchg
cmpsl
pop
data16
movsl
add
insl
rolb
stc
test
lds
aam
jne
sub
movsl
jecxz
into
sbb
out
testl
scas
mov
ret
sbb
lahf
inc
cmp
xchg
aaa
das
xrelease
mov
and
imul
jae
hlt
leave
sbb
mov
clc
in
xor
insl
dec
jo
jecxz
movsl
inc
std
xor
inc
movsl
mov
and
cs
in
das
lods
inc
mov
mov
mov
aaa
int
mov
jns
inc
push
clts
sbb
in
and
xchg
mov
cmp
dec
movsl
shlb
cmp
jns
ja
cli
mov
inc
xchg
add
pop
or
jle
movsl
push
sbb
pop
outsb
mov
lcall
popa
je
sbb
ret
fwait
dec
iret
cmp
jno
movsl
fdivl
or
cmc
xor
xchg
push
or
leave
ror
movsl
lret
out
dec
jns
mov
rorl
repnz
iret
mov
mov
or
push
dec
mov
mov
mov
dec
mov
and
adc
aam
les
sahf
fiadds
lock
insl
pop
adc
sbbb
pop
sbb
mov
aad
je
lahf
pushf
fcos
andb
mov
popa
movsl
and
and
cmp
popf
sub
mov
lods
and
test
pop
fst
adc
or
rcll
push
aad
es
hlt
adc
shlb
mul
mov
jmp
pop
sub
fnstcw
mov
sbb
inc
in
jmp
cmc
fisubrs
pop
popf
cmp
data16
adc
or
xchg
insb
addl
out
inc
sub
mov
js
sbb
dec
mov
out
pop
daa
hlt
cmc
in
shlb
fimuls
call
sbb
jge
mov
adc
pop
or
shl
mov
ds
lods
stos
movsl
shl
fimull
jge
and
fwait
in
call
movsl
shrb
inc
push
fadds
sbb
movsl
std
xor
dec
leave
loope
fsts
out
xor
je
inc
negb
mov
pop
loope
xchg
movsl
xchg
or
dec
insb
dec
stos
movsl
sub
xlat
xor
inc
mov
aaa
inc
push
push
pop
mov
movsl
jmp
sub
and
mov
cli
push
icebp
ja
addl
sub
sub
lcall
das
hlt
dec
mov
popa
xchg
mov
add
mov
data16
loopne
adc
sbb
in
pop
pop
add
mov
or
lods
cli
cwtl
sub
movsl
aas
pop
or
sub
dec
gs
xchg
test
dec
in
push
push
and
flds
outsb
mov
cwtl
sar
scas
or
icebp
in
push
fdivrp
xchg
cmpsl
ss
scas
in
push
mov
mov
cmpsb
jl
or
test
or
rorb
in
sbbb
imul
fnstsw
addr16
mov
shlb
or
es
push
addr16
icebp
mov
test
and
inc
out
pop
mov
lods
loopne
mov
vshufps
inc
fildll
int3
shll
mov
inc
adc
or
lods
mov
dec
rorb
mov
loop
insl
add
sbb
test
sahf
arpl
inc
lcall
pusha
xchg
icebp
mov
sub
mov
aam
inc
mov
and
push
in
sub
imulb
gs
out
xchg
mov
and
sub
aaa
xchg
sub
or
inc
std
les
rclb
jmp
popa
test
std
and
call
mov
popf
xor
stos
dec
jbe
hlt
mov
imul
cli
add
sbb
xchg
xchg
fdivl
fnsave
les
bound
jae
and
push
loop
or
ret
jns
push
aad
or
mov
push
in
popf
inc
arpl
pop
jecxz
sub
stos
movsl
jle
in
test
and
and
cmpb
aaa
and
inc
jecxz
or
loope
xchg
insl
mov
in
pop
push
or
add
sbb
add
cmpsl
or
movsl
mov
jecxz
pop
dec
mov
xchg
cwtl
bound
cwtl
scas
aaa
je
mov
sbb
out
xchg
testb
mov
jecxz
jns
aam
push
jp
fxch
mov
mov
or
lock
out
push
ja
mov
clc
add
stos
sub
fcmovu
imul
push
icebp
lds
mov
xchg
in
mov
add
inc
xchg
and
les
pop
cli
or
add
xchg
xor
aam
movsl
ja
stos
sahf
mov
mulb
into
push
xor
loope
dec
scas
movsl
mov
outsb
loopne
aad
dec
mov
sahf
push
es
mov
jbe
push
cmp
or
mov
test
jp,pt
pop
outsl
ror
das
mov
mov
test
es
fsubl
dec
ja
inc
inc
jg
scas
out
rolb
ja
mov
xchg
je
sahf
in
bound
fcmovne
pop
and
ret
out
and
movsl
aaa
jne
shl
and
cmpb
mov
in
aad
sbb
mov
dec
repnz
jnp
lret
or
repz
mov
mov
sarb
fmuls
dec
xchg
loopew
js
adc
add
pop
push
jbe
popf
sarb
sarb
popf
or
cld
add
pop
pop
xlat
rcrb
je
push
push
js
stos
mov
inc
fadds
fs
xor
and
mov
popf
sbb
push
mov
pop
cmp
cltd
push
mov
in
mov
fs
pextrw
sub
es
push
and
push
in
divl
lret
jg
xlat
sti
pop
pushf
sbb
je
cli
cmc
inc
xchg
dec
aad
mov
push
add
inc
sbb
stc
leave
lahf
add
aam
stc
adc
sbb
pop
or
testl
lea
leave
mov
stos
mov
cwtl
cmc
loopne
add
cmp
out
sub
and
fwait
jne
mov
icebp
mov
test
int
mov
adc
sbb
test
movsl
sti
cwtl
icebp
or
push
jae
jp
into
imul
or
adc
mov
daa
inc
cmp
inc
sub
fnsave
sbb
jnp
or
enter
sub
and
mov
movsl
push
loopne
rorl
xor
sahf
div
lods
fnstcw
cmpsl
aas
sbb
or
inc
mov
inc
imul
jle
dec
jns
push
leave
in
mov
push
addr16
adc
aad
fstl
pop
clc
sahf
lahf
call
push
push
outsb
adc
ret
or
and
pop
sbb
cmc
mov
in
mov
mov
aad
fadds
xchg
lods
in
aas
repnz
mov
ja
mov
scas
movsl
daa
pop
sarb
and
dec
sub
add
in
cmpsl
dec
jl
sub
mov
mov
out
movsl
mov
mov
loop
lock
jb
mov
push
sbbb
dec
in
xchg
xchg
sbb
ljmp
jae
jp
ss
sbb
add
dec
mov
xor
loopne
movsl
lods
cmp
cmp
imul
xchg
push
jae
push
imul
sahf
sub
stos
inc
aad
push
insl
push
mov
jns
mov
sub
or
or
stc
sti
shl
fsubl
rep
in
fs
pop
cmp
push
mov
inc
xchg
mov
push
cmp
jb
pop
sbbb
std
outsl
sbb
loopne
inc
push
idivl
xchg
and
push
mov
mov
mov
jne
inc
mov
aas
into
lds
inc
push
mov
xor
ret
outsb
add
test
shlb
mov
inc
mov
lock
adc
sbb
dec
and
lcall
std
movsl
cmp
clc
add
movsl
cmpsb
sbb
pop
pop
adcl
hlt
mov
inc
mov
or
movsl
nop
mov
pop
sub
test
mov
movsl
inc
aas
cmpsb
lret
add
stos
dec
movsl
dec
jnp
push
js
popa
add
push
inc
or
adc
ja
imul
xchg
sub
lds
movsl
or
outsl
dec
arpl
movsl
pop
int
and
sub
out
movsl
mov
setb
cmp
mov
aad
sbb
popa
shl
jmp
movsl
notl
cmpsb
push
pop
push
mov
sbb
jne
in
scas
mov
fistpll
sbb
movsl
cmp
popf
sbb
in
movsl
jno
fmulp
repnz
jae
movsl
add
cld
sub
xor
mull
push
jnp
test
push
jecxz
inc
mov
outsl
imul
xor
jbe
pop
adc
and
lods
adc
cs
jp
jmp
inc
sub
mov
pop
xor
movsl
arpl
lods
lret
in
dec
sahf
ret
addr16
out
pop
and
sbb
pushf
jmp
ja
setl
fcomip
popa
add
frstor
leave
jae
aad
lret
fdivrl
test
push
jns
in
je
incl
mov
and
aam
jno
inc
xchg
fsubs
movsl
loope
ret
push
sbb
out
movsl
out
jae
dec
jbe
pop
ss
hlt
in
pop
mov
cld
xchg
pop
mov
push
cmp
jno
ret
fsubl
hlt
sahf
lds
mov
dec
and
xchg
mov
leave
add
push
outsb
mov
notl
xchg
je
and
addl
mov
jecxz
mov
ud1
movsl
cmp
push
jno
xchg
std
test
sbb
test
repz
in
cwtl
lods
mov
pop
fsubrp
nop
sti
pusha
in
add
movsl
fwait
and
addr16
mov
in
fdivrl
popf
mov
movsl
and
aam
mov
insl
mov
sub
pop
dec
inc
movsl
jnp
dec
sub
mov
test
inc
jge
aam
sti
loopne
xchg
inc
stc
xor
jle
xchg
lret
mov
ret
insl
add
leave
roll
add
movsl
lods
addr16
xchg
mov
shlb
rcrb
ja
push
bound
or
call
movsl
mov
fsubl
mov
xchg
js
icebp
in
or
jne
push
jns
adc
outsb
dec
fsubrp
rorl
sti
push
mov
sub
xor
add
popf
xorb
in
inc
adc
ficoms
leave
push
add
scas
add
and
jl
and
push
scas
xchg
out
int
nop
movsl
pop
adcb
sub
dec
mov
mov
mov
ss
mov
cmp
shrl
movsl
dec
push
int3
jns
push
or
mov
add
push
shld
pop
dec
stc
dec
jge
inc
push
fwait
cmp
mov
xor
call
movsl
mov
loope
outsl
cmp
or
cmp
loopne
pop
enter
mov
mov
jae
shll
push
es
cmp
jns
mov
movsl
xchg
fidivl
jge
leave
sar
mov
test
mov
push
movsl
sub
clc
jmp
pop
jge
fdivrp
mov
movsl
pop
xor
push
lods
pop
mov
rcll
fsubrs
mov
movsb
mov
inc
loope
lds
mov
movsl
lds
push
or
mov
andb
std
call
fnsetpm(287
xchg
pop
out
test
movsl
in
mov
movsl
push
sub
leave
out
mov
jno
cmpsb
ret
movsl
xor
movsl
xor
cmp
mov
out
add
jnp
push
movsl
push
xchg
mov
and
cld
clc
dec
in
rep
loopne
push
sbb
xchg
or
in
int3
loop
mov
into
xchg
mov
lret
inc
pusha
scas
xor
mov
jl
movsl
inc
aaa
xchg
movsl
mov
or
movsl
lret
cmpsb
jg
xor
popf
int3
adc
movsl
mov
mov
stc
push
enter
cmpl
push
and
add
ret
movsl
mov
sahf
push
and
mov
xor
inc
cmc
sub
pop
movsl
push
ss
lahf
sbb
sarb
pop
xlat
push
ror
addl
fmuls
and
movsl
std
lods
lcall
inc
jo
adc
mov
in
imul
frstor
xor
push
jp
movsl
hlt
mov
in
jo
dec
mov
add
mov
mov
sub
movsl
imul
jno
or
sbb
sbb
gs
movsl
dec
scas
jmp
push
adc
push
aam
repnz
or
pop
push
mov
test
stos
jge
xchg
and
mov
mov
bound
and
outsb
jb
in
fcomi
xlat
movsl
jecxz
mov
cmp
adc
cld
mull
and
movsl
and
jne
out
mov
icebp
and
inc
loope
movsl
pop
push
inc
ds
cmp
imul
fisubl
mov
stos
or
out
push
adc
mov
mov
pushf
jle
popa
inc
dec
movsl
push
test
sahf
cld
jecxz
jns
aad
push
push
mov
psubw
and
push
push
mov
sbb
lds
fdiv
test
lock
movsb
adc
movsl
scas
aaa
inc
xchg
add
stos
pop
xor
fwait
mov
in
das
cmp
sub
and
mov
mov
mov
adc
fsubr
fists
and
and
push
sub
sub
jg
push
mov
xor
push
fsub
cmp
mov
mov
push
sbb
mov
rolb
cld
add
sbb
in
outsb
adc
aad
jl
mov
out
sahf
inc
std
push
in
sbb
xor
scas
in
mov
push
add
movsl
and
xor
pushf
out
or
in
jb
and
sub
outsl
orl
add
sub
inc
insb
lods
notb
jg
movsl
push
int3
or
scas
leave
fs
push
iret
xchg
and
mov
jnp
pusha
addr16
mov
mov
movsb
mov
adc
push
dec
jmp
xorl
mov
pop
lods
jmp
insb
daa
es
sbb
ss
mov
notb
cmc
std
xlat
sub
add
inc
xor
push
adc
push
cmpsl
popf
insb
push
cmp
cs
jl
out
xor
mov
icebp
cmp
sti
mov
in
scas
cltd
movsl
mov
stos
mov
rcll
xchg
nop
fidivs
xchg
bound
jnp
mov
sbb
inc
inc
sahf
popa
lea
cld
hlt
mov
stos
dec
mov
mov
testb
rcr
xchg
push
outsl
pmovmskb
xor
jmp
jmp
sbbb
xchg
mov
mov
insl
lahf
pop
lds
cmp
test
jns
mov
daa
push
mov
cld
sbb
jp
mov
andl
and
fcomps
sub
or
lods
inc
jmp
jl
ret
or
aad
jp
scas
and
iret
leave
das
xchg
imulb
rcll
and
leave
test
jne
or
jp
pop
pusha
daa
add
sub
add
fnsave
pop
xor
add
xor
pop
xchg
xlat
sub
inc
mov
insb
fcmovnbe
jp
push
movsl
push
sarl
cmp
mov
lea
dec
pop
add
pop
pop
xor
fdivrl
movsl
fstpl
dec
insb
pop
sbb
test
and
cmp
nopl
push
add
fdivs
lret
jmp
pop
imul
pusha
movsl
ret
ss
andl
mov
jae
and
add
mov
hlt
fcmovne
in
ret
lds
jno
xchg
cmp
test
xor
mov
sbb
pop
repnz
addr16
movsl
cmpb
lds
cmp
or
push
lret
cmc
into
cmpsl
movsl
in
mov
movsl
sbb
sub
sbb
imul
rcl
repnz
cld
test
pop
addr16
cld
vxorps
int
mov
push
aas
repz
xor
movups
test
sub
movsl
lcall
scas
sbb
xchg
or
jo
xchg
push
pop
inc
mov
mov
out
loop
in
out
xlat
in
add
scas
lahf
adc
push
movsl
and
cmpsl
add
popf
push
xorb
imul
sub
add
scas
test
pop
bound
loop
in
and
loope
push
mov
rolb
sbb
mov
andb
fidivrs
ds
fstl
dec
mov
pushf
xchg
adc
sahf
inc
bound
sbb
inc
addr16
shll
loope
movsl
call
push
jmp
cld
ljmp
or
mov
pop
fists
shlb
stc
sub
jp
in
ljmp
inc
pop
and
leave
mov
scas
lea
pop
mov
xor
fimull
jo
movsl
lock
push
and
dec
inc
pop
mov
fistpll
movsl
int3
shl
cmc
leave
cmp
dec
stos
add
pop
sbb
arpl
rorl
add
pop
movsl
fisttpll
mov
mov
or
pop
jae
in
mov
daa
movsl
and
inc
mov
sub
cmpsl
jecxz
movsl
faddp
adcl
imull
pushf
push
gs
pop
movsl
out
test
enter
pushf
aas
mov
dec
and
jne
int
inc
in
jmp
daa
pusha
test
rsqrtps
push
adc
leave
leave
mov
movsb
sub
imul
dec
lgs
mov
data16
push
push
adc
sbb
negb
cld
cmc
fcompl
pop
push
ja
jl
shl
jno
leave
sub
adc
adc
test
movsl
lcall
imul
cltd
pop
lock
push
aad
pop
pop
mov
rorb
jno
jae
push
mov
push
inc
add
cmpsb
mov
mov
dec
movsl
add
adc
stos
movsl
xor
push
fsubr
or
cltd
inc
rolb
and
and
cmp
popf
dec
push
imul
cli
add
out
movsl
out
les
push
lods
shlb
cmp
into
test
xchg
sub
negb
and
aad
mov
mov
ret
sbb
mov
inc
ficomps
lret
ljmp
movsl
xchg
repnz
mov
mov
pop
push
mov
das
jecxz
jbe
sub
lds
sub
xchg
add
movsl
mov
xchg
or
movsl
or
lods
movsl
cmp
and
sbb
sub
fs
fistl
pop
pop
int3
jge
sub
inc
mov
scas
add
loopne
fucom
push
mov
sub
adcl
stc
mov
movsl
lret
pop
sub
add
scas
sub
test
das
cmp
movsl
loopne
mov
cmp
ret
jbe
cmpsb
jecxz
js
mov
rorb
fistpl
cmc
cs
pushf
xor
push
lds
fsubs
cmp
inc
xor
lahf
ror
icebp
jnp
mov
movsl
sbb
add
sub
movsl
into
ja
data16
stos
loop
mov
push
outsl
xor
dec
and
mov
iret
sti
loop
jmp
pop
mov
fsubs
ss
push
xchg
lds
out
fnstenv
cli
pop
jp
adcl
xlat
xchg
fimull
pop
movsl
dec
pushf
sysexit
mov
movsl
clc
sbbl
sub
sub
xor
movsl
fwait
das
xchg
adc
push
mov
scas
pushf
ss
nop
movsl
rolb
sahf
mov
out
jbe
int
andb
fidivs
mov
xchg
daa
xor
sbb
cmp
iret
adc
mov
jb
movsl
rcll
lea
loopne
fildl
in
test
imul
sarb
push
pop
popf
pushf
inc
and
int
arpl
shlb
outsl
sub
addr16
lods
clc
jg
cs
in
fs
jp
pop
mov
cmp
arpl
mov
sbb
jno
jmp
cmp
enter
movsb
push
mov
mov
adc
and
sub
fstpl
movsl
adcl
adc
sbb
sbb
sub
jae
push
push
movsl
pop
js
sub
movsl
xchg
testl
aad
mov
lahf
and
pop
movsl
xchg
mov
sub
test
scas
sarl
push
inc
jge
adc
imul
jae
jg
pop
jmp
sbb
ja
xchg
pop
push
movsl
add
in
shlb
jns
xor
movsl
aam
cmpsb
mov
xchg
inc
cli
mov
hlt
test
push
and
lea
mov
push
imul
cs
sub
dec
stos
lock
in
popa
fwait
je
imul
cmp
and
and
xchg
in
cmp
icebp
movsl
pop
mov
scas
push
inc
loop
movsl
pop
jno
xor
movsl
aam
outsl
dec
or
or
cmp
and
mov
pop
arpl
in
mov
xchg
imull
jnp
bound
mov
push
scas
pop
mov
xor
or
mov
subb
mov
aad
push
insb
test
dec
add
roll
jmp
les
int
out
and
inc
cwtl
mov
out
movsl
sub
jne
inc
and
sub
ja
ds
movsl
int
mov
cltd
xor
out
inc
aam
or
xchg
movsl
jbe
or
jmp
aad
int3
and
xor
pop
sbb
dec
sbb
cmp
loopne
xchg
movsl
pop
xor
movsl
lods
or
cmpsl
or
push
fs
movsl
add
jle
sti
jnp
addr16
inc
jb
shrl
add
ret
add
js,pn
pop
movsl
mov
std
push
movsl
jl
fistps
jge
lret
popa
ljmp
mov
je
movsl
or
push
jnp
movsl
mov
sub
movsl
insb
call
dec
sbb
lret
sbb
movsl
ret
adc
xchg
inc
in
cli
data16
cwtl
adc
jae
cld
pop
movsl
outsb
loop
lods
add
movsb
jle
cwtl
sbb
dec
clc
frstor
mov
sbb
cmc
insl
mov
pop
push
imul
adc
sub
mov
movsl
inc
fld
sbb
dec
and
jmp
mov
jle
add
mov
mull
fldt
bound
pusha
test
pop
scas
movsl
mov
pop
cli
jno
jge
movsl
dec
or
stos
nop
movsl
mov
xchg
movsl
and
jnp
adc
fs
and
enter
mov
sub
sub
jge
movsl
repnz
adc
movsl
cmp
dec
and
ja
data16
shl
movsl
add
int
fwait
cmp
mov
jbe
and
adc
bnd
lcall
inc
std
imul
mov
sub
movsl
and
pop
push
mov
in
sbb
push
movsl
pop
adcb
dec
lret
sub
mov
pop
xchg
push
jo
lods
popa
inc
or
mov
cmc
jno
int
dec
adc
lcall
xchg
es
lods
and
add
fidivrl
and
xchg
jmp
hlt
dec
ljmp
sub
mov
movsl
xchg
pop
in
decb
mov
popa
jnp
push
mov
jle
inc
xchg
cltd
dec
dec
stc
aaa
push
lock
sub
bound
and
inc
not
xchg
xchg
je
sub
mov
popa
movsl
sub
jb
mov
call
das
fdivrs
aas
icebp
sbb
inc
pop
stos
jns
jg
stos
es
xchg
lcall
cmpsb
xlat
pushf
jle
gs
push
pop
adc
sub
stos
xor
jl
psubsb
mov
shlb
movsl
jmp
push
movsl
push
mov
push
add
sbb
ffree
mov
dec
into
pop
mov
cmpsl
pushf
cmp
mov
mov
jmp
sti
dec
pop
movsl
shlb
fldl
test
mov
ja
movsl
inc
or
movlps
sarb
outsb
mov
cmp
jb
stos
inc
jae
xchg
sub
cmpsb
and
mov
mov
mov
and
push
repnz
movsl
mov
inc
notl
cmc
pop
shr
mov
pop
in
arpl
movsl
pusha
dec
dec
push
test
pop
and
sbb
ret
leave
or
imul
sahf
mov
movsl
iret
inc
push
pop
subl
shll
idiv
icebp
movsl
push
int
mov
cmp
es
gs
sarl
fisttpl
xchg
int3
jo
xchg
shr
test
lock
sti
dec
jns
repnz
lret
sbb
mov
aad
or
push
movsl
imul
aaa
outsl
mov
pop
movsl
loopne
add
aas
xchg
sbb
pop
jge
jbe
mov
xor
adc
dec
jmp
cld
shll
xchg
cmp
jb
pop
in
movsl
jnp
arpl
add
mov
movsl
pop
pop
pop
and
nop
sub
movsl
std
in
sbb
repnz
push
mov
rcr
test
jae
mov
das
pushf
cmpsl
xchg
sub
xor
pop
sti
stc
sahf
int3
xorl
stos
dec
jb
nop
imul
sahf
mov
sbb
movsl
xor
dec
insb
dec
orb
pushf
mov
movsl
ret
pushl
lods
jae
xchg
cwtl
jbe
leave
or
das
loope
xor
push
cmp
stos
push
int
fucomip
bnd
mov
aad
in
scas
cmp
pushf
mov
sbb
inc
in
mov
push
pop
ljmp
call
dec
sub
cmp
enter
xor
dec
popa
add
ds
jb
adc
jmp
pop
add
push
mov
fwait
sbb
out
daa
jo
lret
and
les
and
cli
jbe
jbe
add
cltd
ljmp
outsl
xor
inc
imul
adc
lods
pop
push
push
sti
mov
mov
out
jno
daa
sub
fs
xlat
test
xor
or
shrl
adc
movb
push
test
orl
stc
mov
daa
adc
jg
rorl
je
dec
or
loopne
iret
ds
sbb
cmp
mov
dec
arpl
loope
movsb
in
adc
fnsave
sbb
mov
loope
mov
leave
rcll
adc
jecxz
push
and
fwait
inc
cwtl
jno
outsb
jo
mov
mov
push
aam
push
lods
loopne
xchg
in
jmp
sub
ficoml
push
sbbl
repz
inc
mov
repnz
jbe
in
fstpl
mov
inc
rcll
adc
lcall
ficomps
mov
fsts
and
jbe
fcoms
ja
jle
lds
test
or
inc
in
and
dec
jno,pn
mov
pop
mov
cmc
es
xchg
xor
lret
test
dec
xor
push
push
int3
pop
mov
mov
iret
mov
cmpsb
and
or
sub
or
cmp
loope
jbe
gs
roll
mov
shrl
mov
test
jae
cwtl
sub
fdivrs
add
and
dec
int3
in
mov
icebp
ret
ret
sub
push
jp
push
pop
push
ret
rcll
not
cmp
loope
add
subl
in
mov
or
and
sub
xchg
adc
or
int3
push
ret
out
loope
and
and
pop
lcall
push
fs
cmp
sbb
mov
cld
or
test
decb
sub
xor
sub
push
pop
jmp
mov
scas
and
data16
repnz
in
mov
sub
mov
pop
leave
ljmp
add
faddl
adc
arpl
negl
mov
dec
bound
sahf
pop
ret
test
push
mov
push
add
xchg
insb
stos
mov
imull
jge
sbb
popa
movsb
fists
adc
insb
cltd
jbe
xchg
mov
cmpsb
or
ja
rcrl
int
dec
stos
lret
push
lret
sub
or
out
mov
jnp
mulb
xor
out
mov
push
aad
icebp
das
lods
dec
push
pop
inc
cmp
and
loopne
pop
mov
in
idivl
cmp
mov
sbb
mov
fsubrl
and
fcoml
xchg
and
and
fsubrs
pop
lret
mov
inc
jns
aaa
or
adc
addb
mov
icebp
std
pushf
stos
cmp
xlat
xor
shlb
ja
xlat
popf
mov
je
jge
sbb
out
push
ja
outsl
test
es
mov
int
jne
int
inc
mov
insl
sub
mov
les
dec
test
cltd
adc
hlt
jle
jae
mov
shr
scas
enter
cmp
push
jmp
sbb
icebp
sub
pusha
hlt
mov
push
sub
mov
cmc
jl
pushf
jp
cmp
push
ja
testb
cmpsb
pop
push
and
lock
js
mov
mov
adc
jl
out
cmpsl
iret
je
mov
nop
int3
lahf
mov
mov
sbb
std
inc
pop
sbb
push
data16
adc
mov
push
or
addb
pop
mov
stos
mov
insb
or
movsl
sbb
jle
imul
push
mov
jmp
push
test
sub
fprem1
jnp
test
lcall
sbb
loop
call
or
mov
aad
notl
xor
jmp
ds
ret
sar
and
push
xchg
dec
and
orb
xchg
daa
jo
xchg
bound
aam
pop
test
mov
mov
arpl
mov
scas
push
and
std
lock
fldt
lds
inc
push
and
push
cmpsl
aam
adc
mov
and
sbb
rorl
in
iret
jp
jb
mov
mov
sub
je
addr16
jecxz
push
loope
pop
cmpsb
xor
push
fstpt
mov
cmp
or
sub
lock
xchg
push
call
jno
mov
sbb
inc
xlat
push
loop
lods
and
out
push
add
rcrl
movsb
clc
lods
adc
out
and
lret
pop
adc
cmpsb
das
lahf
fistl
lods
cmpsb
push
cmpsl
mov
test
frstor
addl
mov
xorl
adc
movsl
mov
cmpsb
in
jb
test
out
lds
fnstenv
dec
push
pop
stc
mov
pop
lds
lret
jmp
jge
add
mov
inc
mov
clc
mov
adc
outsl
mov
or
mov
and
out
ljmp
mov
add
inc
jecxz
jecxz
xchg
pop
scas
adc
insl
roll
mov
cmc
orb
rcl
roll
loope
and
mov
add
mov
mov
aaa
scas
inc
ret
add
nop
jmp
pushf
xchg
ret
inc
xchg
mov
mov
jmp
pop
das
pop
mov
adc
shlb
lret
stc
and
push
adc
daa
xchg
jge
cs
ljmp
sub
push
sbb
scas
pop
cmc
test
push
in
sub
fisttps
lret
mov
loope
jnp
add
jge
push
and
push
sub
lret
xor
and
mov
stos
push
ret
mov
das
xlat
and
insl
xchg
sub
cs
jns
push
lods
insb
xor
add
mov
aad
inc
adc
mov
and
inc
cmc
and
sub
push
jp
xchg
mov
scas
fstl
pop
daa
xor
adc
add
fnstsw
add
pushf
imul
cmpl
sub
inc
adc
pop
mov
xchg
xor
lods
mov
mov
adc
xor
cmp
movsl
stc
loope
rcrl
xlat
incb
dec
mov
pusha
repz
push
lret
dec
out
leave
sub
lret
je
aas
jecxz
xchg
push
shl
jae
sbb
mov
ret
sbb
bound
lds
xchg
fstpl
adc
sbb
fstpl
aaa
js
sbb
sbb
mov
mov
shll
repz
mov
dec
mov
cmc
dec
xchg
dec
fcmovnbe
adc
repz
inc
sbb
add
sbb
rol
push
jl
mov
lcall
xchg
data16
and
mov
sub
sbb
jmp
push
adc
adc
test
add
push
in
dec
jge
dec
popf
sub
lods
in
dec
mov
push
fisubl
cmp
jae
push
pop
lock
jecxz
jno
sar
xchg
mov
inc
mov
mov
or
push
lods
inc
xchg
sub
int3
cmp
xchg
mov
xlat
je
mov
ja
push
fs
and
add
xchg
mov
push
xor
xchg
xor
mov
push
adc
test
and
pop
call
sbb
and
popa
mov
push
sbb
inc
mov
int3
ljmp
mov
push
aaa
dec
mov
stc
xor
jg
movsl
and
sbb
dec
loopne
or
lods
push
lods
mov
shll
cwtl
sub
adc
sar
jmp
xor
pusha
sbb
movsl
mov
stc
pop
jno
fcmovne
cmc
test
addr16
sbb
and
cmpsl
add
xchg
mov
push
push
popa
xchg
sub
sti
stc
jmp
mov
pop
adc
das
inc
jmp
std
ja
cmp
sub
fcmovb
adcl
add
rorb
cmc
mov
iret
or
lret
push
insl
pop
cmp
add
mov
pop
pop
xor
jge
mov
add
or
xchg
test
pop
xlat
andb
mov
outsl
sbb
and
mov
dec
and
ficoml
xchg
dec
mov
mov
iret
mov
mov
leave
insl
xchg
bound
and
dec
or
movsb
cli
loopne
adc
fsubs
mov
lods
loope
daa
in
popa
jne
jmp
sbb
mov
movsb
nop
jmpw
push
mov
pop
xchg
popf
pop
popa
rcrb
stos
jae
push
data16
push
sbb
sub
mov
mov
repnz
push
ds
stos
fstl
cld
sbb
push
sub
fildl
lds
in
fldcw
push
mov
push
lds
dec
or
and
push
ds
rclb
decl
sbb
mov
mov
pop
sub
pop
sbb
sbb
mov
push
lahf
adc
or
aaa
mov
and
xchg
mov
loopne
shll
mov
out
push
sbb
cmc
and
cltd
arpl
inc
sub
in
dec
mov
ret
jge
shr
popa
stos
jo
fldenv
push
sub
jb
mov
push
popf
and
xchg
cmp
aas
cwtl
pop
fmul
cmpl
outsl
mov
std
jno
push
push
add
lcall
test
clc
push
daa
jns
adc
lds
or
mov
sbb
inc
mov
pop
push
jns
popa
push
push
stos
sub
shll
and
cmp
adc
mov
out
add
movsl
pop
xor
sahf
push
mov
lds
push
sub
mov
in
push
clc
mov
mov
call
mull
aam
inc
xlat
jo
xchg
lods
dec
mov
test
test
aad
adc
mov
mov
popa
inc
sahf
push
shll
inc
mov
jmp
mov
ror
nop
test
adc
xchg
inc
and
pusha
adc
sub
fdivr
repz
movsl
mov
sbb
adc
dec
add
pop
lods
call
sub
cwtl
fsubrl
adc
movsl
sbb
push
cmpsb
push
push
loope
in
adc
lds
xchg
dec
xchg
xchg
pop
cmp
jmp
mov
xchg
aad
mov
dec
xor
push
cwtl
jmp
fists
sbb
mov
push
mov
rolb
add
lret
cmp
int3
ret
int
sub
frstor
add
dec
sbb
xlat
cltd
xlat
wrmsr
pop
mov
jecxz
xchg
and
sub
rolb
jg
in
xchg
lds
or
int3
xor
test
xor
sbb
lods
or
shll
test
aaa
fcomps
mov
mov
lods
xor
movsl
sti
sub
dec
das
fstpt
sbb
ja
loopne
out
mov
lcall
push
in
mov
push
mov
repz
cmc
rolb
cmp
fwait
inc
fucomip
je
sub
sbb
mov
nop
cmc
mov
mov
repz
repnz
shr
mov
adc
sbb
leave
add
in
mov
pushf
lret
cmp
decl
out
cs
mov
and
add
test
sub
push
and
arpl
sub
xor
popa
cmp
lret
push
pop
mov
push
mov
shlb
pop
pop
push
and
loope
cwtl
push
sub
or
add
lods
xlat
mov
test
daa
and
js
mov
jno
hlt
push
stos
iret
push
mov
std
mov
dec
sahf
lods
leave
pop
das
test
inc
and
lret
roll
pusha
cmpsb
mov
or
cmc
mov
insb
rcr
push
inc
in
cltd
cmp
and
push
ret
lds
fisttpll
je
nop
sti
adc
in
subb
push
xlat
or
stos
xor
mov
or
add
stc
loop
add
push
insb
mov
cwtl
pop
sbb
xor
lahf
movsb
jns
lock
xchg
je
fildl
push
add
fwait
out
rcll
sbb
mov
dec
jl
sbb
push
test
fildll
push
sub
pop
jecxz
repz
add
jl
and
jo
mov
xor
mov
outsl
jno
popf
mov
sbb
jbe
fdivl
cmc
in
aaa
or
cltd
in
sbb
pop
movsb
xchg
push
lret
adc
popa
jge
shlb
adcl
lods
sub
add
stos
icebp
lahf
pop
ja
xor
or
mov
inc
int
add
mov
stos
or
xchg
pop
mov
lahf
and
movb
cmovno
aaa
popa
mov
xchg
imul
and
mov
leave
push
sbb
and
shll
add
adc
sti
ljmp
addl
xchg
std
jge
xchg
daa
jge
scas
and
mov
imul
outsb
push
and
repnz
mov
mov
fidivrs
mov
jecxz
pop
push
cmpsl
loopne
adc
ficoml
push
fcoml
jbe
push
imull
and
enter
inc
cltd
popf
imul
push
cmpsl
fsubrl
jl
and
push
jno
mov
iret
dec
jne
popa
stos
sub
mov
sub
inc
insb
add
xchg
movb
xor
cs
aad
xor
jge
mov
push
add
jl
lahf
scas
pushl
repz
jbe
xor
or
or
jno
push
xorl
xchg
pop
push
jns
scas
adc
insb
dec
fnstcw
lcall
push
das
inc
dec
adc
push
jge
add
andl
cmc
push
scas
mov
rcll
nop
push
out
les
xchg
iret
mov
and
pop
and
mov
roll
add
and
in
mov
fcomp
dec
aaa
add
adc
and
insb
imul
push
pusha
call
ljmp
xchg
push
mov
mov
nop
int
or
add
test
jbe
adc
push
fnsave
xor
jecxz
out
sub
std
mov
mov
ret
cmp
push
repz
mov
das
popa
xchg
in
daa
adc
aaa
xchg
cwtl
mov
imul
cmp
cmc
jl
push
fcom
jmp
daa
sbb
cmpsb
fisttpll
push
fbstp
loope
repnz
fidivl
push
pushf
push
rorl
push
gs
sbb
adc
add
sbb
out
ficomps
add
pushf
jno
jnp
xor
in
sti
cmc
out
sahf
cmpsb
bound
sbb
jle
sbb
loopne
sbb
jno
sub
popa
jl
imul
sbbb
out
xchg
add
and
xchg
in
xor
rorb
stos
and
pop
scas
xor
inc
xchg
movsb
inc
pushf
shlb
into
or
xchg
scas
and
adc
push
and
in
mov
movsb
push
adc
push
sub
mov
add
cmc
ja
jmp
ficoms
sbb
fmul
or
sbb
fnstsw
xchg
sbb
leave
pop
cmpsl
roll
mov
loop
jge
mov
andl
jmp
roll
movsl
cmpsb
adcb
pop
arpl
int3
mov
sub
mov
jns
fprem1
test
popa
sbb
add
popf
test
stc
jae
fnstsw
sbb
pushf
mov
sti
repz
scas
cmpsl
push
lahf
jle
and
jnp
push
dec
sub
and
lock
mov
adc
in
movsb
push
ss
mov
push
cmp
ret
or
and
in
int3
popf
mov
push
leave
xchg
cmc
pop
mov
fisubs
fwait
or
cmpsl
xor
ret
mov
cmp
adc
fldenv
ss
inc
jne
movsl
push
out
cmpsb
mov
aas
push
jnp
lods
popf
and
mov
and
mov
sbb
dec
sub
mov
jae
add
inc
push
pop
adc
loopne
mov
mov
and
jnp
push
in
xchg
mov
test
int
push
rorl
cld
push
cmc
or
bound
daa
rcrl
sti
and
inc
fcomp
add
nop
cli
popf
xchg
push
mov
rorl
and
xchg
mov
in
outsl
or
sub
shrl
inc
out
pop
aam
jecxz
adc
out
adc
popa
mov
out
popa
lock
dec
loope
jno
xchg
add
add
mov
and
xor
stos
ret
clc
scas
push
or
scas
pop
push
pop
cmc
leave
mov
shr
in
mov
test
mov
movsb
sbb
cmpsl
sbb
and
sub
sahf
mov
mov
and
mov
mov
and
and
pop
xor
jnp
mov
jge
adc
orb
sbb
mov
fwait
test
filds
lea
dec
push
mov
rorl
xchg
push
sub
add
outsl
push
daa
cmc
lea
push
dec
dec
add
popf
xchg
mov
lds
int3
fst
xchg
rcrb
add
mov
stos
dec
pop
mov
sbb
xlat
cltd
pop
mov
or
pop
add
fists
sbb
fistps
test
mov
or
push
sub
xor
pop
insb
stc
js
mov
je
add
rclb
sub
clc
xchg
or
aas
pop
pop
arpl
mov
xor
jl
ljmp
adc
pop
pop
inc
xor
jmp
mov
in
je
xchg
mov
mov
jns
fldl
loop
pop
inc
push
add
push
inc
movsl
xchg
mov
repnz
iret
popf
fistl
lods
das
sub
fwait
or
fnstenv
pop
adc
fstps
sbb
inc
push
push
test
add
push
and
inc
into
jo
fsubrs
and
cltd
mov
lret
icebp
lret
cmp
mov
hlt
ss
jne
sbb
mov
xchg
aas
lds
sub
pop
xchg
lret
mov
cmpsl
xchg
adc
or
cmp
push
in
mov
out
rolb
jmp
sti
cmp
sahf
jmp
mov
in
stc
add
popa
loope
sub
sub
in
nop
insl
pop
jmp
mov
or
mov
inc
pop
ss
cmp
inc
push
mov
mov
adc
push
xchg
and
jne
nop
stos
xor
iret
adc
jno
adc
add
push
push
ret
das
sarl
inc
test
sbb
stc
add
clc
push
adc
rol
test
jle
add
popa
mov
push
in
mov
and
and
scas
or
mov
test
mov
sub
out
dec
mov
cmc
in
ficoml
adc
jmp
or
inc
xchg
pminub
fnstenv
push
mov
inc
lds
sbb
sbb
pop
mov
into
mov
push
push
and
lds
pop
cmpsb
mov
in
sbb
push
cwtl
std
repnz
aad
mov
xor
adc
in
xchg
xor
loope
popa
push
fsubl
lods
sbb
sbb
scas
pushf
sbb
insb
cmp
mov
aad
adcl
repz
mov
jl
mov
adc
jecxz
std
pushf
pop
jns
in
push
test
mov
push
cmc
sub
or
jne
push
jl
stos
movsb
cmp
int3
in
cmc
inc
test
and
lock
movsb
push
test
ja
cmpsl
pop
stos
pop
mov
inc
cmc
xor
mov
mov
rcll
push
and
leave
push
sub
xchg
jnp
pop
and
ds
out
rclb
stos
aad
out
je
cmpsb
adc
xchg
xor
jo
inc
and
mov
subb
dec
faddl
jmp
and
xchg
mov
rcl
mov
xor
cwtl
xor
pusha
pop
ficoml
fstl
sub
bound
int
jecxz
stos
scas
sbb
jecxz
frstor
shl
movsb
pusha
sti
jmp
je
jle
sbb
jle
rol
popf
mov
cmpsb
push
sub
flds
neg
in
or
dec
jle
popa
fs
mov
imul
sbb
data16
lret
xor
std
adc
jb
fldl
outsb
lret
fcomip
iret
popa
lods
lds
mov
arpl
mov
cmpsb
in
jno
xlat
sbb
push
pusha
lds
scas
sbb
jg
dec
jmp
cli
insb
xchg
fwait
pushf
cmc
mov
add
add
cmp
sub
repnz
xchg
mov
sub
call
add
outsb
xchg
packuswb
push
jmp
fstpl
sbb
in
je
test
lcall
fbld
pop
mov
lods
add
lea
sbb
in
jmp
scas
jno
repz
push
mov
inc
repz
imul
push
into
jge
inc
ror
or
and
and
dec
repz
je
sub
cs
adc
rcrl
addr16
and
xchg
lcall
pushf
sub
push
push
lahf
test
popf
jb
and
test
or
and
inc
mov
sbb
adc
and
ds
adc
jb
and
dec
xor
in
daa
out
mov
push
pop
push
sub
sbb
adc
or
adc
out
mov
jae
inc
shrb
push
fsubs
sub
rcll
ljmp
mov
out
and
sbb
pushf
loopne
and
mov
insl
adc
lods
mov
loope
adc
mov
pusha
xor
lods
mov
loope
fsts
xor
pop
xchg
out
xchg
sbb
popa
leave
push
stc
push
push
xchg
pop
mov
scas
pop
lret
movsl
xor
pop
add
repnz
icebp
jns
add
gs
sub
mov
or
dec
cmpsb
hlt
lds
and
push
add
test
pop
insb
sub
mov
fisttpll
les
pop
fldcw
jno
stos
jecxz
cld
push
mov
add
in
popf
cmpsl
add
fsub
cltd
or
push
cmpsl
popa
popf
das
mov
jecxz
sbb
aaa
push
and
popf
mov
mov
pop
push
loope
or
sets
pop
mov
push
cwtl
add
mov
lret
mov
je
mov
iret
insb
clc
sub
sub
cmp
movsl
adc
push
and
fstl
mov
sbb
add
aad
ret
std
and
repnz
cmc
and
cmp
push
inc
xor
cmp
jbe
mov
leave
sbb
mov
and
leave
adc
jae
lahf
ja
add
lcall
shlb
add
lds
repz
outsl
push
cmpsl
std
cmpl
mov
dec
cmc
sbb
mov
mov
push
popa
test
icebp
rorl
xchg
stos
insl
loope
push
jmp
jp
out
ret
xor
add
xor
and
dec
xchg
movsb
loopne
cmc
inc
mov
xor
mov
pop
or
sub
sbb
push
test
xlat
xchg
xlat
inc
fucomp
xor
clc
fsubrp
mov
mov
gs
mov
add
sub
lret
push
andl
cmpsl
push
pop
loope
push
enter
mov
add
jae
jmp
fs
sub
or
stos
outsb
push
push
aad
insl
mov
pop
mov
aad
mov
daa
pop
cltd
lea
testb
iret
and
xchg
mov
testl
lret
dec
arpl
mov
jecxz
clc
std
das
add
roll
jle
jge
fwait
jge
popf
movl
cmp
mov
scas
cmp
sahf
stos
jno
inc
mov
jecxz
in
and
dec
out
xchg
push
jmp
je
jo
mov
daa
sti
mov
out
push
scas
movsb
aad
popf
in
dec
repz
inc
push
inc
movsb
add
mov
sbb
lret
sbbl
lock
loop
add
sbb
nop
mov
or
bound
jmp
xchg
mov
jmp
add
or
and
rcrl
cld
jne
mov
test
imul
adc
or
cmp
and
movsl
and
pop
xor
insl
aam
stc
jmp
lret
loope
mov
jge
mul
cmp
mov
xor
stc
or
aas
and
fsubl
and
mov
and
xchg
in
in
jl
xor
jecxz
add
sbb
xchg
mov
pop
push
fstpt
sbb
xor
stos
notl
out
in
ja
fwait
loop
rorl
xor
fsubl
in
cli
xor
lods
scas
cltd
cmpsb
push
popf
mov
repnz
shl
repz
bound
je
out
add
int
push
cmp
push
xor
mov
sub
lret
outsb
lds
push
xor
loope
repnz
mov
adc
jmp
stos
cmp
sub
jmp
std
insb
jne
push
mov
ljmp
pop
faddp
ss
and
mov
fcmovne
push
jo
pop
cltd
mov
push
and
fwait
mov
push
add
mov
cmp
loope
loope
scas
leave
int3
jbe
loopne
icebp
and
and
push
pop
xchg
mov
or
repz
mov
fstl
dec
mov
mov
shll
push
rcrl
pop
sub
push
pusha
rclb
inc
in
push
lods
fwait
push
mov
repz
fcomps
outsl
mov
in
push
in
std
cmp
sbb
jne
outsb
in
mov
loope
insb
movsl
xor
fcoml
mov
sbb
ds
mov
movsl
and
ffreep
cmc
cmp
xchg
mulb
inc
adc
scas
inc
mov
stos
inc
or
and
stos
xor
xchg
mov
cmpsl
lods
cltd
or
dec
jmp
mov
enter
movsl
and
xchg
push
jmp
scas
pop
sbb
lds
jmp
pop
pop
push
pop
pop
mov
push
jecxz
fistps
mov
sub
pop
ror
push
xor
mov
dec
push
mov
sbb
test
xchg
cmpsb
mov
inc
mov
js
cmp
stc
push
push
jno
mov
lcall
sbb
or
jbe
cltd
int3
jmp
mov
cmp
push
pop
out
sbb
sub
lds
mov
sahf
scas
xor
cmp
sbb
arpl
pusha
sub
push
xchg
push
adc
mov
ja
fistps
or
mov
popf
adcb
mov
popf
push
dec
inc
mov
sbb
data16
mov
push
bound
divl
negb
int
xchg
lds
pop
cmpsb
mov
stos
inc
loopne
inc
inc
push
inc
outsb
pop
cwtl
push
xor
bound
adcb
mov
mov
jno
sub
mov
enter
sbb
dec
mov
jmp
push
frstor
rcrb
pop
jp
sub
jge
imul
sar
sbb
push
push
xchg
sub
adc
bound
xlat
mov
push
outsl
push
mov
mov
andl
in
sbb
push
pop
sbb
lds
sbb
mull
mov
out
jmp
cld
jecxz
jo
jmp
roll
enter
sahf
cmc
mov
pop
jae
daa
pop
roll
add
and
push
sub
add
pop
xchg
test
mov
shrl
fldl
loop
push
fwait
iret
cmc
roll
adc
imulb
sbb
xor
push
loope
jmp
mov
mov
xor
jecxz
sub
rol
lcall
sub
push
cli
mov
pop
cmc
andb
cmpsl
xchg
inc
sbbb
mov
or
repz
xchg
andb
inc
and
in
cmpsl
mov
push
rcl
push
test
sbb
jge
shll
mov
cmp
mov
pop
jp
sub
push
mov
xchg
fucom
dec
vcvttsd2si
adc
frndint
mov
push
push
sbb
mov
bnd
push
scas
sub
ret
add
scas
cli
sti
outsl
testl
jp
and
aas
sbb
push
pop
fildl
mov
push
daa
test
cmc
stos
push
sub
insb
xchg
lret
mov
test
cmc
scas
stc
lods
daa
cld
addr16
cltd
mov
jae
xorb
sub
jge
adc
lcall
std
sarb
loopne
push
or
out
sub
mov
divb
adc
add
bound
mov
push
cmp
add
ret
jecxz
mov
xor
stc
xchg
ror
mov
pop
adc
push
jmp
ret
mov
jl
or
push
add
mov
push
fdivs
mov
add
ja
adc
push
lods
sub
push
scas
movsl
sbb
jnp
add
cmp
mov
scas
xchg
or
add
shrl
lcall
pop
push
lods
adc
out
fidivl
popl
icebp
xchg
jbe
xchg
mov
xorb
or
test
inc
lds
jle
mov
sub
xor
dec
push
mov
mov
in
push
imull
lea
mov
rol
mov
add
sbb
fwait
dec
cltd
xor
xchg
addr16
or
add
int
jecxz
adc
shl
sti
mov
sub
rcll
adc
in
and
popa
sub
jl
mov
movsl
cmpsl
addr16
lahf
mov
cmpsb
in
ss
popf
lods
outsl
xor
jmp
adc
sub
cs
cmpsb
in
lret
fst
sub
sub
lods
ret
fbld
xor
sbb
and
dec
mov
cmc
scas
pop
or
and
aas
pop
fucomp
in
mov
mov
or
scas
jl
push
inc
add
and
shl
popa
mov
loop
gs
ficomps
mov
sbb
out
loope
aam
push
pushf
mov
cmc
mov
lds
orl
sbb
inc
aas
mov
iret
mov
sbb
push
lds
stos
push
add
xchg
fnsave
and
cmpsl
mov
lahf
mov
mov
push
push
repz
stos
add
aaa
out
imull
dec
lods
loop
lods
cltd
repnz
cmp
scas
xchg
cmc
xchg
into
lret
push
fnstenv
pop
dec
adc
mov
fnstsw
sarl
mov
fldenv
lods
std
sbb
push
dec
loopne
push
push
sub
add
jl
push
daa
clc
xchg
inc
mov
sbb
fprem1
clc
mov
fdivs
jno
or
push
icebp
stc
cmp
jecxz
sbb
jecxz
sub
add
addl
scas
adc
pop
xor
sub
in
xchg
xchg
mov
lds
lods
ret
cli
xchg
dec
fwait
and
push
xchg
pop
movsb
push
mov
jb
movsl
test
add
movsb
sbb
stos
mov
cmp
mov
jb
into
push
faddl
cmp
sarb
mov
nop
push
xchg
das
and
lds
or
cli
out
push
xor
or
lods
mov
shr
inc
loopne
xchg
mov
cli
repz
inc
xchg
push
push
stos
mov
jg
sbb
movsb
pop
pop
mov
xlat
mov
scas
fcomps
jmp
jno
lret
pop
push
movsb
or
xchg
cmp
sbb
push
daa
mov
in
test
lret
jne
adc
mov
stc
mov
cmp
add
idivb
enter
xor
dec
push
xor
push
in
mov
pop
out
hlt
jmp
pop
xchg
and
pop
stc
fwait
add
ss
mov
xchg
jg
jmp
and
jmp
sub
pop
sbb
sub
sbb
mul
mov
ret
and
cmp
leave
pop
push
pop
pop
mov
sub
mov
sub
rcrl
sbb
lea
push
and
sahf
in
xor
push
mov
and
mov
cmpb
loopne
sub
adc
cmp
stos
dec
ret
popa
add
adc
adc
stos
popf
mov
ror
add
mov
pop
xorb
fwait
sbb
movsb
mov
and
je
sub
xor
inc
test
sub
sarb
in
xor
mov
jp
or
in
mov
push
xchg
sbb
inc
cmc
mov
loope
scas
clc
pop
and
mov
and
xor
lcall
roll
and
mov
xchg
rclb
add
xchg
arpl
push
cmp
cmpsb
test
sbb
mov
or
xchg
push
lods
testl
or
ficomps
pop
mov
push
push
jbe
stos
pop
cwtl
ret
jno
daa
push
or
push
mov
popf
pop
dec
sahf
cld
and
in
and
xor
push
sbb
in
into
inc
das
sub
mov
add
sub
ja
and
push
js
rclb
pop
outsb
xchg
push
jecxz
lds
pop
repnz
cmpb
sbb
loope
pop
and
jecxz
mov
shrl
cld
jle
cli
pop
and
push
ret
sbb
lret
mov
cmp
pop
mov
push
xchg
mulb
and
adc
jmp
nopl
loope
int
popf
or
add
test
jae
ret
pop
mov
test
xadd
imul
push
or
sar
sub
cmp
adc
test
xchg
jmp
int
scas
daa
dec
mov
lods
jo
push
adc
xchg
and
mov
fs
fs
jmp
and
movsb
lds
push
xor
cmpsb
cwtl
into
xchg
sub
mov
xor
stos
push
cmpsl
aas
cmp
adc
ror
ret
in
popa
cmp
add
or
push
add
push
sub
fmuls
inc
sub
ficoms
stos
mov
jnp
int
sub
push
sbb
das
out
scas
sub
out
adc
push
clc
mov
and
rcll
or
cli
mov
adcl
in
lods
push
mov
xchg
push
scas
push
lock
xchg
ds
mov
and
fstpl
jp
mov
and
jnp
cmp
and
enter
test
js
in
pop
xor
dec
jge
add
jl
aam
ret
lea
ret
jle
xor
and
push
sbb
xchg
mov
push
jecxz
and
or
inc
mov
mov
movl
jmp
loope
out
sub
push
pop
dec
addr16
and
fldl
loope
hlt
ret
iret
loopne
cmc
inc
jmp
mov
mov
pop
lret
sbb
jp
xor
push
mov
lock
int
adc
xchg
mov
in
stc
shl
in
adc
and
and
fstps
lds
xchg
sub
popa
scas
sub
inc
fisubl
mov
xchg
andl
adc
test
adc
xor
add
cltd
jmp
or
push
jecxz
or
loop
stos
jecxz
movb
daa
ja
adc
dec
jecxz
lret
cmp
rorl
insb
add
aad
enter
ja
or
mov
iret
cltd
lds
dec
call
xchg
mov
pop
mov
push
scas
call
mov
lret
or
cmp
push
arpl
sbb
mov
movsb
jo
arpl
adc
lds
adc
lods
mov
sbb
pusha
aad
rol
mov
adc
daa
repz
shll
enter
push
mov
fs
mov
and
or
js
cmp
and
and
cli
fstl
jmp
in
mov
mov
mov
popf
xchg
cltd
xchg
and
pop
andl
push
inc
sti
movsl
and
and
pushf
pop
shr
in
ljmp
shl
pop
push
aas
cmp
leave
pop
repz
sub
rorl
scas
xor
ljmp
add
xchg
push
int
add
scas
popf
dec
lea
and
and
dec
aas
adc
fstl
and
lret
fcomip
lods
cli
movsl
daa
push
mov
out
aam
ja
lcall
mov
sarl
xor
mov
and
xchg
xchg
cmp
mov
cmc
add
xchg
add
inc
mov
add
sub
jne
lock
mov
xchg
scas
daa
andb
out
div
mov
jecxz
out
test
mov
call
xlat
js
aaa
out
push
xchg
mov
mov
out
rorb
rol
in
in
inc
adc
mov
xchg
mov
push
stos
insl
nop
pop
cld
lock
and
in
imul
loope
call
jne
mul
cs
jmp
fidivl
jno
jmp
pusha
mov
and
jecxz
and
and
fs
inc
fnstsw
xor
test
test
sti
sahf
daa
loopne
mov
xchg
push
push
pop
cmpsb
mov
shll
out
mov
sbbl
sbb
bound
jecxz
mov
inc
jmp
adc
jge
xchg
cltd
mov
sbb
aad
sub
push
mov
cmp
xchg
adc
out
add
push
test
enter
and
in
repz
sbb
hlt
out
lret
mov
les
sar
pop
out
xor
and
mov
ja
and
and
nop
ror
push
jo
popa
cmc
repnz
pop
mov
jecxz
add
leave
xlat
inc
movsb
repz
out
lds
outsb
xchg
dec
and
mov
pop
mov
sbb
sbb
pushf
push
mov
cmc
sub
pop
and
pushf
xlat
into
and
sbb
loope
and
out
mov
inc
loope
add
mull
or
push
add
mov
sub
shrb
cmc
cld
mov
ret
bt
shrl
or
in
mov
cmp
jbe
ss
dec
aad
pop
outsb
and
stos
aaa
sbb
and
lcall
fisubrs
jns
lods
shll
sub
dec
mul
imulb
cmc
xchg
mov
mov
jb
or
xchg
je
sbb
push
adc
mov
test
out
add
xchg
inc
sub
sub
in
adc
jnp
inc
xchg
dec
lds
xchg
xlat
rcrl
popa
test
in
rolb
push
test
dec
cmc
adc
push
sbb
sub
lds
shl
xorl
sub
fnstenv
push
movsl
lods
les
jno
fcmovb
sbb
popa
sub
sub
mov
and
nop
std
sahf
scas
mov
xchg
imul
sub
je
ljmp
add
sbb
lds
sbb
mov
fmull
loope
cmp
or
xor
test
add
add
test
push
aam
scas
xchg
sub
leave
fdiv
inc
mov
dec
stos
push
dec
adc
push
loope
cwtl
std
sbb
add
push
push
loope,pn
loop
xor
jmp
mov
sbb
fbld
lret
cmc
xlat
mov
notl
add
leave
in
cmpsb
lds
add
imul
push
daa
in
hlt
and
leave
sbb
gs
pushf
movsb
loop
call
jae
sahf
fs
imul
inc
sbb
movsb
scas
rol
sbb
push
sub
push
jecxz
sub
loopne
imul
lods
lds
push
jle
loope
daa
test
hlt
imul
insb
push
push
repnz
push
clc
cmpb
rcr
das
and
pop
fidivl
mov
mov
andl
mov
into
mov
ljmp
xchg
sbb
pop
leave
ffreep
scas
dec
cmp
subl
gs
sub
in
cmp
out
xchg
xchg
sbb
shrl
sbb
push
jg
mov
sbb
adc
mov
fdivr
in
jne
stos
cmp
sbb
push
cmpsl
push
mov
je
and
mov
xorl
inc
jne
pushw
shll
xlat
and
add
and
scas
test
pushf
inc
cli
adc
jecxz
mov
lcall
test
cmpsl
add
test
sbb
mov
xchg
lods
inc
ds
sub
jle
ja
and
mov
ljmp
nop
in
push
xchg
lds
add
xchg
cs
xchg
mov
and
mov
xor
jmp
movsb
mov
adc
cmpsb
sub
fwait
in
and
or
xchg
pop
push
add
test
or
bound
push
sbb
shll
lods
push
scas
arpl
xchg
js
or
icebp
sbb
mov
iret
adc
mov
mov
pop
lret
popf
inc
push
lret
push
dec
jno
mov
xchg
pop
add
sbb
cli
and
imul
movsl
and
sbb
fimuls
scas
jmp
popf
aam
xchg
outsl
repnz
imul
loope
jbe
shl
ret
div
outsb
in
inc
mov
into
cmp
rol
sub
aaa
and
push
lcall
jecxz
popa
scas
push
loopne
jl
sbb
mov
sahf
push
mov
or
adc
pop
daa
mov
sub
iret
push
add
icebp
ja
dec
cmp
rcrl
lods
stc
in
sub
sub
ss
mov
adc
lock
sbb
inc
fldl
daa
dec
sbb
outsl
lds
and
sti
add
cmc
loope
xchg
std
out
jmp
lods
pop
in
dec
in
roll
mov
mov
sbb
xor
xchg
push
jmp
fisttpll
inc
setne
ss
and
mov
push
in
push
jnp
ljmp
cwtl
adc
adc
sbb
mov
jno
mov
out
sbb
rcrl
adc
mov
cmp
scas
push
inc
jl
fucomp
stos
out
xor
cwtl
push
sub
or
dec
push
cwtl
push
mov
cwtl
imul
scas
fcmovnb
jno
nop
jmp
incl
and
xchg
mov
inc
stc
arpl
stos
jg
hlt
insb
inc
and
fcompl
fistpll
push
mov
xchg
fcoms
lods
outsb
repz
adc
push
lds
dec
adc
jmp
mov
sbb
xchg
dec
lods
add
popa
cmpsl
jns
inc
addr16
adc
leave
ret
lret
sbb
cmpsb
dec
jecxz
xchg
push
sub
out
adc
lds
jmp
faddp
push
mov
jae
adc
mov
repnz
push
out
jp
sbb
das
mov
pop
xor
sbb
sbb
inc
sbb
lds
fwait
adc
rcll
push
xorb
cmp
stos
jmp
dec
lods
jge
jle
rep
imul
push
negb
mov
fs
test
outsb
adc
adc
mov
xor
push
jmp
push
sbb
mov
ffreep
push
cmc
cs
sbb
inc
lock
lds
sub
test
out
xchg
jmp
and
out
mov
cmc
sbbb
fcomps
and
loopne
sub
xlat
mov
mov
sub
int
ja
sbb
mov
or
fildll
mov
scas
or
testl
xor
fldl
inc
pop
xchg
popf
and
push
call
in
mov
in
push
mov
xor
sti
jmp
adc
xchg
inc
imulb
sbb
xchg
in
push
pop
stos
lods
rorb
inc
cmc
loopne
push
xor
sbb
call
xchg
and
dec
mov
add
add
test
aam
sub
popa
movsb
dec
ljmp
push
scas
mov
xchg
out
rorl
stos
xor
sub
ljmp
arpl
mov
add
scas
lds
insb
dec
sub
mov
pop
fistpl
loope
add
fisubrl
xchg
mov
add
push
mov
xor
mov
scas
gs
ret
xor
shll
add
or
roll
jnp
inc
inc
sub
or
in
ss
mov
ucomiss
xchg
push
xchg
jne
mov
jns
lds
push
sub
xchg
xchg
push
dec
lds
das
sbb
sub
adc
test
insl
jmp
gs
shl
push
and
ffreep
push
dec
in
cmp
mov
clc
adc
pop
inc
mov
add
pop
jns
in
scas
cmpsl
stc
std
adc
stc
fstpl
sar
loop
push
xchg
movsl
enter
pop
insb
cmpsb
in
lds
movsb
adc
add
and
xchg
mov
lds
cmpsb
lods
popf
les
dec
and
jb
jae
mov
and
scas
pop
mov
cmpsb
das
adc
sub
dec
adc
sub
out
or
lret
shrb
das
xchg
aam
jmp
inc
fscale
sub
jbe
push
xlat
in
test
ret
ss
mov
mov
dec
cmpsb
push
outsl
rcll
mov
bound
test
shlb
mov
dec
xlat
cmc
lods
int
incl
add
push
test
and
inc
dec
xchg
ror
sbb
mov
pushf
and
xchg
jno
mov
push
jecxz
adc
popa
test
in
sbb
lcall
jae
jle
pop
repnz
and
out
ds
push
mov
add
and
xor
jl
fxch
sub
cmp
nop
xor
fsubp
mov
mov
mov
pop
mov
rcrb
stos
or
adc
sti
mov
xchg
lds
dec
mov
pop
dec
movsl
sbb
fsubl
jns
lds
cmp
jbe
mov
sbb
cmpsl
add
or
std
in
xchg
aad
jo
fildl
mov
mov
sti
adc
je
lds
jmp
call
shll
mov
xchg
add
and
fnsave
sbb
in
jnp
push
loopne
icebp
popf
sahf
xchg
push
subb
xor
add
test
mov
fldl2t
add
stc
icebp
xor
insl
push
cmc
icebp
jmp
js
mov
mov
incl
push
rcl
pushf
ja
cld
and
out
mov
mov
pop
sbb
sahf
test
jns
push
mov
int
out
insb
ljmp
ljmp
xor
mov
aaa
shrl
cmpl
in
popa
mov
mov
arpl
xor
out
scas
add
xchg
adc
pop
leave
jbe
jecxz
movsl
adc
lret
jecxz
mov
enter
sub
inc
jge
push
sbb
lods
orb
push
movhps
pop
rcl
cli
push
jae
cmpsl
icebp
push
popa
rol
jns
push
std
stos
add
mov
pop
push
in
je
or
jge
push
fldcw
and
jecxz
imul
ret
xor
adc
loope
sub
mov
cmp
cwtl
jnp
shrb
popa
jo
dec
jbe
adc
mov
dec
push
imull
fnstsw
leave
xchg
add
and
stc
lea
clc
scas
out
push
push
sti
popa
in
push
push
ffree
mov
pop
xlat
in
mov
cmp
in
sarl
lods
stos
mov
add
xor
jmp
push
mov
in
push
cld
lea
mov
pushf
pop
mov
add
add
enter
sub
sub
or
push
jge
mov
out
roll
jmp
pop
sub
shll
pushf
xor
movsb
xchg
add
adc
scas
popa
prefetch
or
add
push
mov
and
adc
int
mov
lds
roll
pop
iret
sar
jmp
push
dec
popa
lret
push
dec
xchg
or
mov
pushl
mov
jmp
rcrb
and
jmp
fbstp
inc
and
push
sub
daa
push
xchg
mov
push
sub
sub
lock
lods
mov
fdivrs
ds
sbb
add
dec
test
cli
cmpsb
in
push
inc
mov
imul
mov
or
push
mov
mov
push
mov
xchg
loope
mov
cmp
rcll
pusha
push
out
vmovhps
daa
mov
mov
inc
fcomp
test
lret
hlt
push
icebp
cmc
push
in
and
lods
pop
pusha
or
sbb
dec
fldl
push
scas
cmp
mov
xchg
fnstenv
mov
xor
movsb
insl
shr
cld
int
hlt
mov
mov
sarl
sbbb
aam
add
stos
and
shl
test
add
subl
loopne
push
test
add
add
lods
pop
and
mov
aas
or
mov
push
mov
jns
jecxz
inc
int3
jmp
shrb
lock
sbb
pop
sub
pop
sbb
aaa
sbb
push
inc
jno
add
adc
jns
pmaddwd
push
mov
mov
or
stos
inc
loop
hlt
rcrb
stos
leave
xor
loope
add
test
in
push
xchg
sbb
cmpsl
cwtl
cld
adc
xchg
ss
and
fsts
test
cs
add
lcall
mov
add
push
sub
add
cmpsb
jmp
mov
and
rcl
in
jno
xor
cmp
push
pop
vmovlps
jle
popa
or
add
cmpsl
and
loope
repz
mov
mov
cmc
and
push
jno
add
addr16
jmp
mov
in
ret
inc
popa
lcall
sub
sbb
popa
mov
push
inc
insb
xchg
xor
add
sbb
outsb
sub
in
inc
xchg
xor
jne
in
imul
jns
inc
repnz
cmp
test
push
or
add
rcll
mov
mov
rcrl
dec
sahf
jecxz
gs
popf
and
mov
out
std
or
push
loop
sarl
xchg
stos
and
fldl
lret
mov
pop
lcall
jno
sub
test
push
push
pop
fwait
nop
hlt
push
sbb
and
xor
loopne
cs
mov
inc
mov
cmp
pop
pop
mov
testl
loope
xorb
int3
push
or
lret
js
xchg
jecxz
shlb
pop
pop
call
fldenv
mov
lods
scas
push
lds
andb
xchg
push
jnp
and
sub
in
mov
popf
cld
xor
pop
add
mov
sub
sbb
sarl
gs
insb
add
add
je,pn
outsl
cltd
repnz
jbe
adc
sbb
cld
cmp
lods
flds
int
sub
cmp
mov
pushf
fstl
jl
sbb
push
stos
stc
jns
mov
in
lcall
xchg
movsb
mov
inc
push
sbb
aad
mov
adcl
jmp
sub
add
fucomip
das
out
xchg
xchg
dec
out
cltd
push
and
aad
stos
imul
or
sarb
sbb
mov
mov
xchg
pop
or
add
cld
push
lds
std
sarb
inc
xchg
mov
mov
and
in
cmc
xor
mov
pop
xor
mov
push
mov
push
scas
cmc
push
pop
sub
mov
xor
xlat
lahf
lods
movl
jne
inc
dec
sar
cmp
mov
push
mov
jle
push
xlat
lods
out
test
hlt
push
fcomip
stos
mov
test
pusha
push
lds
lods
clc
sbb
sub
scas
sub
push
in
pusha
jecxz
shll
test
mov
sbb
xchg
jl,pt
and
mov
mov
add
add
repnz
push
sub
shll
mov
push
sub
sub
std
mov
add
mov
jle
xchg
scas
sbb
or
dec
push
aas
pop
push
push
shll
cmpsb
bnd
fsubp
div
push
andl
sbb
loope
sub
popf
test
int3
jne
test
mov
push
mov
xlat
mov
ja
movsb
push
push
ficompl
in
aad
lods
aam
popa
inc
and
push
add
sbb
ss
mov
fsubrl
pusha
ret
cmp
inc
popf
xlat
push
scas
xor
nop
outsb
and
mov
push
in
adc
mov
dec
sbb
in
cmp
int
popa
and
xchg
pop
and
movsl
aaa
sar
dec
and
sarb
leave
mov
mov
fnstsw
test
leave
mov
in
jns
push
lds
mov
cli
jmp
sub
cltd
mov
ret
rcr
add
xor
popf
pop
push
lret
push
lds
pop
and
push
aad
and
and
cmp
imul
push
xlat
sub
lods
fisubrs
pusha
mov
lds
push
test
daa
cmpsl
add
push
daa
cmc
mov
lods
fistpl
mov
pop
mov
push
pop
push
loop
add
das
test
and
ljmp
push
mov
and
mov
and
inc
or
mov
insb
out
add
mov
cmp
jmp
pop
dec
pop
aam
imul
pop
mov
mov
or
jecxz
add
xchg
fisttpll
test
sbb
lds
mov
push
push
push
lods
das
gs
out
push
adc
and
fstpl
loope
pop
int
into
fistps
lds
fcomi
inc
test
sbb
loopne
push
cltd
int
add
cmp
stc
test
inc
push
pop
add
and
jmp
in
mov
push
loope
mov
lock
filds
cwtl
pop
mov
inc
fisubl
adc
adc
mov
xor
cmp
xchg
mov
jecxz
mov
jbe
or
mov
add
in
in
or
roll
in
mov
push
push
das
out
add
xchg
and
popa
mov
dec
pop
cltd
or
inc
scas
push
mov
adc
pop
sbb
cld
xchg
or
jns
xchg
mov
lret
loope
mov
xor
pushf
mov
mov
notl
pop
int3
lods
push
add
jae
repnz
push
pushf
bound
ret
ljmp
sbb
adc
xor
insl
shll
push
subl
xor
test
test
adc
push
inc
lahf
sbb
ja
and
cmp
repnz
pop
test
test
xlat
scas
ficoml
fmuls
xor
xchg
add
mov
iret
mov
clc
jmp
mov
adc
sbb
cmpsb
jb
mov
xchg
lods
push
xchg
mov
dec
in
cmpb
sbb
mov
lods
mov
sub
xor
lret
mov
pop
lds
mov
mov
mov
stc
daa
and
jae
inc
inc
dec
jecxz
das
mov
repnz
mov
mov
lods
mov
mov
punpcklbw
sbb
xor
and
ja
mov
lahf
mov
stos
int
scas
repz
xlat
mov
jge
add
pop
notb
out
loope
sub
stos
repnz
jmp
aaa
xor
subl
daa
mov
xchg
dec
out
pushl
push
jecxz
xchg
out
or
vpavgw
ljmp
adc
pusha
ret
mov
xchg
xchg
or
mov
mov
inc
arpl
das
jno
scas
sbb
jmp
adc
clc
movsl
push
sbb
jo
xchg
xchg
loope
into
in
aam
xchg
mov
or
push
mov
mov
sub
in
shll
mov
mov
sub
xor
popf
pop
ror
mov
push
test
mov
leave
in
test
add
in
and
cmpsb
push
das
mov
jne
lds
cmp
push
lret
ret
inc
mov
bound
mov
jo
repz
xor
mov
xchg
push
shll
mov
add
in
stos
int
inc
add
xor
cmpsl
xchg
ljmp
mov
mov
sub
ja
cmpsb
pop
lds
add
test
sbb
xchg
push
iret
shlb
out
out
cwtl
sub
mov
mov
aaa
inc
cmp
add
mov
jecxz
and
mov
add
ret
add
stos
popf
in
cmpsb
in
loope
outsl
pushf
xor
shl
shll
sub
aaa
cltd
clc
sub
sbb
add
cld
cs
std
add
rcr
mov
leave
cli
or
sbb
notb
add
push
xchg
daa
push
repz
push
or
pop
push
mov
adc
push
sbb
fwait
leave
or
in
add
push
or
ret
sub
fcomps
mov
stc
push
testl
stos
or
cltd
test
out
pop
mov
aam
aad
sub
aad
sbb
sbb
imul
mov
addl
test
cmp
sub
leave
test
sbb
mov
mov
add
and
mov
ss
jmp
inc
mov
add
push
jl
fists
push
and
mov
fldl
push
sahf
pop
out
adcb
push
in
jo
mov
pop
and
add
or
xor
add
lods
add
addr16
add
or
outsl
jl
shr
popa
movsb
mov
arpl
mov
scas
loopne
jmp
orb
push
mov
pop
mov
xor
icebp
pop
add
das
jecxz
xor
xor
js
enter
loope
pop
sbb
mov
cmp
sbb
movsl
sub
xchg
cmp
lods
std
push
sub
jb
add
lret
fsubrs
je
lods
mov
or
lds
mov
in
shll
shrb
mov
sbb
cmp
push
lds
cmp
in
xor
rcrb
cld
shrl
subb
mov
push
scas
mov
xchg
add
clc
fimull
push
and
mov
dec
mov
and
cmpsl
pop
sub
imul
mov
sahf
setns
out
orl
in
inc
fstpl
push
das
out
mov
out
add
xor
ljmp
dec
loopne
mov
jbe
loope
out
pushf
cmp
mov
cmc
sub
test
adc
aad
cltd
pop
mov
cmp
sub
mov
int
cmp
fcoms
sahf
cmpsl
sarb
hlt
sbb
xchg
inc
pop
rcrb
xchg
add
xor
jle
xchg
jecxz
add
loopne
and
xchg
xchg
lods
icebp
subl
int
cwtl
or
mov
notl
or
mov
out
jl
sbb
sub
mov
mov
add
and
push
stos
je
in
push
ja
push
aad
sub
pop
pop
or
icebp
imulb
add
mov
and
repz
adc
ja
pusha
addr16
cwtl
jg
mov
fnstenv
pushf
fscale
or
and
jmp
iret
scas
mov
or
mov
push
jge
pop
lcall
scas
fldl
rol
push
mov
int
repz
mov
pop
iret
sub
lods
movsl
cmp
dec
mov
and
das
imul
in
out
aaa
testb
mov
shll
popa
mov
loopne
push
pop
add
adc
xchg
cs
xchg
clc
inc
int
jae
ret
sub
rol
or
rclb
movsb
cmpsb
insl
scas
add
push
movsl
cmp
inc
rolb
push
lcall
in
lds
stc
int
subb
mov
mov
out
cli
hlt
mov
cmpsb
cld
lahf
sub
clc
shl
popa
sbb
push
and
cmc
push
jmp
mov
adc
add
mov
and
movsb
pop
mov
sbb
mov
lahf
cmp
lret
movsl
cmpsl
jno
cmp
fyl2xp1
jecxz
and
xor
and
cli
ljmp
sub
in
pop
and
in
out
cmpsl
mov
sarl
pop
mov
and
jle
mov
mov
ficoms
lcall
addl
pop
jnp
std
sub
lods
jp
scas
push
xchg
adc
mov
test
iret
xor
xchg
inc
pop
mov
into
push
add
loopne
mov
in
mov
imul
test
scas
dec
sbb
lods
pop
rcr
in
shll
adc
lea
icebp
movsl
fsubl
ds
insb
cmpsb
std
lds
out
or
fwait
mov
jbe
push
cld
push
dec
add
fadds
xor
pop
out
xor
out
pop
sbb
cs
push
xchg
cmc
out
mov
mov
push
jb
movsl
clc
sti
mov
add
or
outsb
jno
or
hlt
inc
and
popa
mov
sub
iret
loope
push
aad
rorl
sub
test
in
lods
mov
stos
xchg
adc
lods
add
sub
cmpsl
or
xor
sbb
sub
and
in
jne
pop
xorl
shll
dec
adc
jecxz
das
mov
mulb
cmpsl
movsl
push
and
lret
jl
inc
shrl
rcll
dec
and
movb
test
sub
in
or
decl
fwait
dec
aas
add
out
in
notb
scas
test
or
mov
leave
jns
sub
mov
push
and
jnp
push
clc
stos
and
dec
addr16
inc
cmp
fstps
sub
mov
aaa
lret
in
nopl
mov
mov
divl
mov
jmp
pop
fxch
jecxz
mov
addb
sub
call
sbb
xor
or
pop
imul
std
jno
inc
mov
lcall
dec
or
out
cmc
sub
jo
mov
stos
or
sub
dec
push
cld
push
pushf
leave
mov
fcmovb
jo
adc
cmp
pop
roll
mov
loope
femms
adc
scas
jle
mov
addl
in
rorl
into
sbb
mov
iret
adc
lods
push
mov
push
cmc
addr16
or
pop
inc
jp
push
push
mov
lcall
lret
cli
mov
lret
pop
push
mull
mov
sbb
loop
ret
lcall
mov
and
mov
mov
testl
pop
sub
cmpsl
mov
mov
sub
jno
lea
lods
aaa
and
mov
mov
int
icebp
inc
mov
jno
fwait
movsb
lods
mov
cmpb
shrl
and
mov
and
mov
xchg
mov
loop
mov
sub
mov
inc
sub
mov
mov
mov
sub
das
pushf
icebp
mov
mov
and
imul
jne
xchg
push
lods
add
mov
leave
sub
xchg
xchg
xor
jg
lret
out
loope
mov
aad
movsb
popl
push
dec
scas
stos
push
or
outsb
and
test
filds
cmp
cmpsb
cmp
xor
xchg
test
add
pop
stos
add
xchg
outsl
out
mov
in
push
lods
push
inc
push
dec
jge
inc
add
push
push
cmpsl
cmp
fstl
std
mov
fistpll
fildll
pop
mov
cmp
jmp
sti
sub
mov
pandn
test
add
subb
mov
lret
sub
inc
add
xchg
add
and
outsb
cltd
ret
clc
xchg
arpl
mov
sub
or
xchg
arpl
sbb
xlat
cltd
cli
mov
scas
data16
lds
insb
into
sbb
in
inc
dec
rorl
xchg
fidivl
mov
loope
adc
xchg
lods
inc
test
xchg
sbb
fildl
comiss
clc
out
cltd
test
jecxz
lods
push
dec
in
or
mov
enter
int
pop
push
pusha
cld
loope
lods
and
push
loop
fstpl
icebp
xor
cmp
inc
sbb
push
pushl
cmpsb
jno
xchg
inc
in
icebp
jo
xchg
divl
pop
mov
adc
aam
mov
sbb
in
fisttpll
and
mov
loop
fisttpll
mov
fistps
stc
and
sbb
push
mov
lock
xchg
mov
mov
and
ficompl
out
xchg
decb
mov
mov
add
and
aas
sub
scas
adc
mov
hlt
addl
popa
sub
sbb
mov
and
ljmp
inc
cmpsb
push
add
dec
and
leave
and
ret
ss
mov
out
and
in
aaa
inc
adc
and
shll
lret
pop
mov
inc
out
test
jns
ret
clc
imulb
xchg
mov
pop
popa
xchg
test
out
scas
xchg
jne
mov
mov
push
lds
dec
jecxz
int3
cmc
int
or
dec
add
xchg
nop
jmp
repz
push
mov
xor
add
xor
hlt
inc
and
push
aaa
fs
mov
xchg
lcall
xor
ror
scas
lds
popf
mov
jecxz
lret
push
mov
sbb
cmpl
add
jecxz,pn
mov
push
test
cmp
mov
mov
mov
adc
rcrl
addb
push
and
mulps
mov
mov
out
adc
jecxz
rolb
fsubr
mov
test
loop
pop
inc
repz
test
sahf
outsl
iret
xlat
inc
sub
loopne
jp
sbb
or
inc
sbb
jle
xor
insl
jmp
lods
mov
mov
repz
push
mov
lds
xchg
repz
mov
incb
jg
in
xchg
and
repz
loopne
aaa
mov
cmpsl
sbb
lds
sub
and
ljmp
sbb
fldenv
js
pop
loop
out
mov
and
sahf
iret
fldenv
mov
push
jmp
fstl
jo
dec
xchg
daa
pop
mov
sbb
jmp
stos
inc
add
test
sbb
pop
adc
repz
mov
pop
pop
cmp
add
aaa
sbb
cmp
mov
adc
xchg
movsb
mov
jno,pn
push
scas
not
xlat
int
dec
ret
cmp
sarb
dec
push
mov
mov
movsl
nop
test
inc
dec
fscale
scas
stos
and
and
shrl
cwtl
or
sarl
mov
mov
push
jecxz
int
or
fxch
mov
ret
mov
xor
cltd
fists
mov
inc
pop
xchg
int
sbb
and
adc
aas
mov
outsb
mov
in
inc
test
mov
mov
add
add
out
bound
inc
addr16
test
iret
sti
xlat
cmc
stos
fidivs
xchg
jne
mov
lret
test
aam
jecxz
cs
out
gs
cmp
pop
sbb
mov
inc
pop
dec
adc
mov
dec
cmc
pop
int3
push
and
push
or
out
cltd
pop
mov
sti
add
scas
mov
pop
and
mov
cwtl
push
sbb
adc
cmpsl
repnz
xchg
icebp
aam
inc
jno
cmp
clc
in
mov
fnsave
shll
dec
lods
mov
dec
mov
mov
and
cmpsb
sahf
adc
sbb
sub
leave
rorl
push
in
lcall
xchg
test
and
clc
inc
mov
popf
cli
shr
sbb
jecxz
dec
jne
pop
pop
add
push
jle
add
mov
scas
add
scas
aas
nop
fsubrp
divl
scas
or
sub
jb
repz
cld
pop
out
push
and
or
add
insb
fsubrl
aaa
mov
in
xchg
in
xchg
cmp
rol
and
inc
les
and
push
std
and
out
mov
sub
outsb
inc
and
and
or
rclb
mov
ret
fldl
xor
mov
popf
ljmp
lods
pop
mov
or
sub
stos
xor
rcrl
xlat
ret
bound
jae
mov
mov
sub
cltd
cmpl
pop
popf
rorl
imul
mov
mov
shrl
test
popf
xchg
dec
sbb
fs
cli
in
scas
clc
push
mov
bound
icebp
inc
adc
cmc
xor
push
pop
cwtl
adc
icebp
cmpsl
and
out
sbb
test
dec
or
mov
cwtl
fst
js
xchg
mov
xlat
ja
lds
inc
mov
and
pop
fcoml
lea
or
sub
stos
cld
rcl
test
xchg
std
jnp
int3
and
cmc
lods
lds
push
and
push
enter
push
ret
lods
popa
sarl
mov
inc
adc
imulb
flds
movsb
test
sbb
iret
repz
add
sarl
dec
lods
mov
insl
push
or
jb
adc
add
cld
pop
adc
push
test
fimuls
in
mov
fistl
out
xchg
xchg
inc
int
sub
fidivrl
in
mov
sti
fistps
adc
sti
or
push
fdivrl
mov
mov
push
mov
je
push
mov
sub
push
rcrl
inc
adc
jmp
mov
mov
lcall
das
xor
repnz
scas
pop
lret
adc
mov
jp
sub
inc
outsb
jp
push
in
data16
lret
adc
aaa
jmp
jnp
adc
popf
test
pusha
daa
in
cs
arpl
dec
dec
orl
and
daa
sti
movsl
fcoml
in
adc
push
lcall
mov
icebp
sbb
mov
out
mov
cmp
pop
rcrl
cmpsl
cmc
xor
dec
xchg
cltd
sbb
inc
jge
leave
das
inc
repz
push
mov
std
int3
pushf
lret
cmc
or
push
into
or
scas
in
out
imul
mov
fwait
mov
and
push
ja
pusha
lret
push
shrl
xchg
xor
mov
iret
mov
sub
hlt
cmc
mov
rolb
pop
and
scas
imul
out
rolb
mov
loopne
les
icebp
test
xchg
pop
mov
jecxz
adc
pop
jecxz
xchg
fldt
or
push
andb
outsl
push
and
lcall
add
jg
sti
dec
lds
cmp
push
push
sbb
lds
insl
jl
mov
dec
cltd
hlt
rcr
loope
inc
sub
mov
xchg
jp
and
loopne
jge
shl
in
jo
enter
sbb
and
or
pop
fs
push
and
add
xchg
movsb
pushf
xor
cmpb
mov
out
cwtl
das
cwtl
and
mov
push
mov
mov
pop
mov
sbb
popa
lret
repz
popa
mov
sbb
xchg
call
mov
jle
out
rol
adc
xor
fnstenv
popa
sub
inc
mov
add
test
loopne
sbb
scas
inc
popf
popf
lods
mov
and
xchg
adc
in
dec
push
xchg
mov
xor
and
inc
and
xchg
mov
loopne
fs
mov
movsb
pop
and
in
cs
mov
or
jns,pn
test
jle
and
or
scas
cltd
cmc
sub
add
daa
sbb
sarl
or
xchg
pop
popf
sbb
out
ficomps
idivl
adc
inc
lods
sbb
push
test
test
mov
mov
out
lds
gs
cmc
jnp
xor
leave
or
fisubrl
and
pop
or
jecxz
stos
call
out
in
xor
lcall
mov
out
add
inc
shrl
push
mov
and
in
nop
jp
push
das
mov
je
xor
sarl
lock
adc
and
iret
push
rcl
mov
mov
xchg
mov
mov
xchg
cmpsl
sbb
cmpsb
lods
pop
pop
repz
sbb
in
shl
mov
add
dec
mov
and
jmp
adc
mov
mov
mov
je
and
icebp
add
mov
pop
mov
movsl
xchg
mov
sbb
lds
out
sbb
push
decl
jne
mov
call
adc
adc
rcll
and
push
jle
mov
icebp
bound
fstps
lret
mov
aaa
dec
xchg
mov
test
shll
add
and
ror
xchg
pop
fcoms
jmp
das
lods
push
and
psubd
cmc
std
mov
bound
sbb
movsb
fstps
add
inc
jge
into
mov
test
adc
push
dec
sbb
mov
scas
sbb
ret
xchg
lods
xchg
ret
ret
add
sub
pop
push
cmp
inc
arpl
mov
sub
out
lock
cld
outsb
push
push
repnz
popf
mov
and
pushf
aas
push
rol
out
xlat
push
cs
mov
aad
sub
sbbb
pop
rcll
pop
cmpb
inc
test
mov
mov
jp
roll
scas
dec
sbb
test
xchg
shrl
push
add
push
sti
stos
and
add
push
test
je
in
xor
mov
fstpl
das
ljmp
push
sarl
add
push
lods
mov
add
push
lods
adc
popf
xor
popf
mov
adc
cmpsb
adc
mov
mov
xor
into
call
mov
mov
jle
sub
and
mov
inc
imul
fists
mov
and
jmp
in
xchg
adc
sbb
sahf
daa
inc
repz
adc
rorb
push
xchg
and
mov
lret
cmp
hlt
push
mov
adc
xlat
pushl
and
aas
adc
int
sub
fadds
inc
mov
adc
add
sub
cmp
and
push
adc
add
popf
daa
and
mov
cmpsl
push
or
cwtl
push
xor
aam
dec
or
mov
pushf
dec
and
stos
or
stc
pop
iret
shrb
mov
shrl
sbb
dec
insl
stos
addr16
and
scas
mov
cwtl
decb
scas
push
sbb
cmp
mov
nop
out
cmp
inc
ja
push
ror
out
call
push
mov
push
or
ja
mov
lds
repz
insb
push
sub
pop
push
test
sub
sbb
jle
add
push
out
or
adc
scas
lods
or
div
mov
mov
push
sub
rorb
fpatan
cmpsl
stc
popf
xchg
fadds
mov
js
fldenv
push
push
mov
sti
mov
add
inc
or
mov
and
cld
pop
add
mov
cmp
fld
adc
test
scas
rorl
sahf
sub
cmpsb
mov
sbb
mov
jle
push
fnstsw
movsb
inc
sbb
addr16
test
mov
stos
ret
imul
loop
push
lcall
test
push
lds
mov
xchg
ret
mov
jo
aam
sub
push
pop
sub
cmc
sub
rorb
test
aaa
int3
pop
pop
mov
test
adc
and
cmpsl
add
inc
ret
lods
mov
fstpt
rol
push
daa
mov
ret
or
dec
add
push
ds
fisubl
xchg
lds
jo
inc
mov
mov
xchg
pop
int
adc
add
add
add
shll
test
cmc
cmc
test
cmp
cmpsb
in
and
mov
ret
cmc
xor
lcall
sahf
ljmp
jo
mov
lcallw
xor
aad
dec
sub
stos
mov
push
xchg
jo
mov
jb
fwait
add
or
das
xchg
aas
lret
mov
cmc
mov
aad
clc
dec
mov
and
push
pop
cmp
mov
jecxz
adcb
in
jmp
lods
adc
fcmovb
mov
push
sti
test
mov
roll
in
cmp
rcrl
in
cmc
movsb
adc
xchg
pop
sub
sti
add
cld
mov
or
xor
sbb
pop
lds
pop
cmpsl
sbb
and
fistps
xchg
and
jbe
bnd
sbb
push
rcrb
fld
pop
aas
pop
xorb
scas
mov
je
push
dec
dec
mov
rol
test
lods
gs
lahf
sbb
mov
ret
pusha
stos
shll
insb
testl
mov
aas
add
sub
ret
and
cs
mov
pop
sbb
mov
jle
and
mov
lahf
jae
movsb
sbb
xchg
stos
and
int
movsb
inc
fsubrs
mov
jmp
lcall
imul
mov
arpl
push
adc
out
push
adc
push
xor
xchg
pop
mov
test
outsl
cld
dec
push
jecxz
jmp
lcall
push
jecxz
stos
mov
xchg
or
lds
push
fstps
mov
loop
shlb
pusha
jecxz
or
sub
xchg
dec
leave
and
loopne
call
adcl
stos
insb
imul
add
mov
xor
pop
mulb
loope
popf
adc
in
daa
mov
cli
aas
fnstenv
or
mov
outsl
sbb
fldcw
fisttps
out
sbb
hlt
push
push
lds
out
xlat
roll
mov
dec
sbb
fadd
dec
js
mov
mov
add
stos
xor
xchg
adc
in
das
inc
in
cmp
xor
cld
adc
das
aas
adc
je
ja
and
push
lods
scas
repnz
xchg
xor
jns
push
out
mov
add
stos
stos
movsb
xlat
sub
out
lds
jge
mov
mov
add
and
xorl
push
mov
jae
jl
sbb
in
std
dec
mov
repz
dec
push
sub
jl
iret
scas
out
stos
je
push
fldenv
dec
sbb
push
cli
push
and
and
jns
xchg
mov
lods
push
fbstp
mov
fnsave
inc
jl
cmc
outsl
iret
mov
sahf
mov
shll
adc
mov
stos
cmc
shl
cmc
in
sbb
out
or
push
int
movsb
imul
add
aam
push
add
cli
mov
push
sbb
call
xchg
push
les
mov
push
out
loopnew
test
out
push
stos
popa
sahf
icebp
add
cltd
or
inc
in
sub
lods
in
jge
aas
and
loope
add
jmp
inc
sub
jmp
pushf
fsubs
xchg
mov
and
test
mov
mov
mov
pushf
out
or
int
and
jl
xchg
mov
sub
rcl
adc
cmc
cwtl
sub
popf
sub
jp
cmp
pushf
fisttpll
push
push
xor
scas
pusha
outsb
sub
and
xor
fildll
xchg
je
test
cwtl
inc
lds
daa
push
and
jmp
xchg
shll
mov
mov
mov
jbe
push
mov
push
pusha
cli
fwait
adc
mov
rol
cmc
jl
add
cmp
ja
leave
mov
cltd
sarl
inc
add
dec
xchg
mov
movups
sub
and
and
and
ja
lahf
xchg
mov
mov
fidivrl
jno
stos
lret
dec
cs
mov
loop
jae
jne
jecxz
mov
lock
xchg
pop
jae
adc
addl
rorl
sbb
jge
rcrb
jmp
sub
or
cmpsl
mov
les
scas
xchg
test
mov
mov
ds
mov
and
lds
ret
mov
or
fmull
inc
mov
popa
and
fyl2xp1
mov
and
dec
mov
and
test
test
pop
push
cmp
repnz
flds
movsb
sbb
idivb
popf
lret
mov
dec
fs
mov
std
in
sub
mov
inc
push
scas
fnstcw
test
sub
fdivs
pop
shl
inc
jmp
and
mov
fstpl
leave
lds
sub
push
mov
jge
inc
test
mov
mov
sbb
xor
test
jae
sbb
adc
add
and
inc
and
cmc
icebp
dec
jo
cmpb
mov
fstpl
popa
or
loope
arpl
mov
out
fld
cmpsl
add
inc
push
jecxz
sti
push
and
xchg
xchg
ljmp
and
test
stos
clc
out
jno
divb
lock
popf
mov
out
mov
push
push
mov
adc
in
jae
mov
adc
aas
jmp
in
insl
push
jne
in
movsb
scas
bound
push
roll
add
xchg
jl
cmpsl
lds
movsl
out
subb
sub
test
mov
xlat
mov
lcall
sbb
adc
repz
push
insl
lret
sbb
filds
jp
repz
sbb
jp
fisubl
pop
repz
add
jnp
xchg
cmp
push
adc
mov
jmp
fidivl
xor
cmpsl
out
daa
sbb
sbb
sti
and
cltd
jae
pop
mov
cmc
mov
arpl
lret
or
pop
push
mov
jae
mov
dec
fstp
dec
pop
stos
mov
push
test
mov
popl
sahf
icebp
adc
cmpsl
push
repz
jne
in
call
pop
sub
ja
call
jo
inc
jbe
and
pusha
in
push
fcomi
imul
cmc
pushf
xchg
sub
xchg
adc
mov
xchg
push
ret
and
or
cmpsl
jmp
add
or
test
cmpsl
ficomps
mov
mov
push
mov
adc
cmc
add
mul
push
stos
and
cmpsl
xchg
punpcklbw
pop
lods
push
jo
in
push
les
fnstenv
add
sahf
adc
das
dec
cmp
jl
pushf
cmc
repz
dec
jno
std
push
rorb
push
int
add
or
and
repnz
jnp
cmpsl
in
test
jp
dec
jb
sub
in
pop
aaa
mov
dec
sub
in
sub
gs
and
mov
test
mov
sbb
data16
cwtl
shr
mov
push
stos
cmp
mov
push
outsl
aam
clc
lret
mov
sub
mov
cs
add
cmpsb
and
cmp
push
stos
sahf
pop
pop
jg
sbb
pop
and
aaa
ja
ja
push
popf
ss
fcomip
shrl
pushf
mov
jecxz
dec
pop
sbb
and
inc
hlt
jb
sub
lahf
xchg
rcll
mov
adc
push
imull
mov
cmp
and
pushf
pop
mov
and
mov
stos
pop
xor
std
mov
mov
sti
sub
push
xchg
add
scas
push
call
inc
adc
fcmovbe
xchg
movaps
and
mov
loope
aad
les
cmpsl
aas
sub
insl
sbb
jmp
test
mov
and
xor
adc
inc
cli
dec
mov
cmp
scas
cltd
sub
ret
and
daa
dec
jbe
jmp
pop
adc
movsl
in
pop
fstpl
nop
mov
and
and
dec
imulb
inc
pusha
sub
and
jb
pop
mov
push
sub
in
mov
les
imul
fmull
popa
aad
and
shll
mov
mov
mov
idivl
and
jg
dec
mov
ret
pop
mov
pushf
aaa
loopne
mov
mov
add
cmp
mov
lods
and
push
das
push
stos
aad
add
iret
jno
and
lret
ret
mov
aam
and
lahf
mov
lods
push
xchg
into
imul
inc
jae
cld
scas
pop
jns
iret
add
jp
shr
lea
aad
icebp
sbb
sub
aam
add
pop
lret
mov
stos
inc
pop
pop
fdivs
mov
das
and
mov
jne
mov
add
shrb
out
push
add
loope
pop
sbb
sub
les
shll
aas
sbb
out
lret
test
addb
popf
push
xor
dec
jmp
int
faddl
iret
popf
xchg
imul
cs
stos
leave
not
mov
or
inc
mov
sti
cld
rcr
sub
jne
std
lods
out
jl
pusha
mov
xorl
fists
mov
cmc
inc
pushf
mov
fxch
sub
cmpsb
push
dec
mov
fwait
jl
and
fcoms
adc
push
jbe
cli
jl
insl
out
enter
daa
in
mov
mov
mov
stc
inc
xor
pop
xor
or
pop
shl
push
in
mov
xchg
arpl
mov
inc
sub
stc
inc
xor
mov
imul
rolb
mov
add
xchg
xchg
incb
sbb
jne
imul
aas
js
call
popf
fsubr
jl
jmp
lods
xchg
popf
mov
inc
mov
xchg
pop
dec
sti
push
push
mov
and
imul
test
lds
cmpsl
pop
test
xchg
jmp
push
lds
xlat
add
mov
sbb
outsl
je
aam
add
in
lods
and
xchg
jns
add
test
scas
or
sbb
das
cld
xchg
sub
cmp
test
out
xchg
jg
cmpl
imul
lods
or
sti
in
icebp
xchg
bound
inc
sbb
scas
add
jl
and
daa
add
inc
or
popl
mov
lcall
aaa
test
scas
cmpsl
shll
adc
push
in
cmp
jecxz
and
shl
jne
stc
notl
je
ljmp
mov
push
jl
aaa
mov
push
cwtl
rdmsr
ret
popf
fmull
cld
loopne
dec
jne
push
adc
mov
out
xor
mov
push
mov
xchg
out
xor
shl
scas
cwtl
sbb
scas
arpl
mov
popa
imul
out
aad
sahf
arpl
stc
dec
push
mov
mov
addr16
fcomip
mov
ja
xchg
push
in
popf
lcall
and
xchg
outsb
pop
pop
pop
push
mov
inc
push
cmpsl
pop
ss
adc
mov
jns
stos
cmpsl
cmc
sub
cmp
movsl
outsb
popa
mov
fisttpll
es
iret
lods
test
push
push
mov
and
push
pop
repnz
ss
push
movsl
int
xchg
pop
jecxz
push
lret
bound
sub
je
xor
int
inc
sbb
in
adc
mov
sti
jo
fstpl
fdecstp
pop
cmp
mov
dec
fbld
mov
popf
mov
popl
rcrl
lcall
pop
sbb
movsb
loop
xlat
lds
jle
push
stc
sbb
in
mov
imul
xchg
jo
popa
cmpsb
fistpl
ss
sti
push
push
mov
mov
ja
and
and
sbb
jge
pushf
dec
mov
xor
jecxz
push
cs
fbld
xor
in
div
lret
push
pop
pop
sti
add
loope
xchg
mov
aaa
in
insl
fcmove
ljmp
mov
in
jge
fldpi
cmpsl
fistps
sbb
sub
loopne
add
mov
sub
pcmpgtw
imul
mov
jl
popf
mov
add
lods
in
inc
test
cmp
aad
loope
sti
sahf
mov
or
in
mov
cmp
jbe
dec
sbb
lods
add
ja
mov
pop
stos
sub
out
ss
adc
add
xchg
pop
jmp
mov
fucompp
stos
mov
add
and
jno
add
and
clc
jbe
mov
out
inc
stos
outsl
pop
mov
sbbb
cmc
or
mov
pop
bound
rol
cmp
loop
int3
lods
es
pushf
push
sti
xchg
add
in
mov
in
mov
xchg
aam
and
repz
out
push
scas
das
cmpsb
push
repz
adc
add
push
lds
sahf
decb
sub
push
mov
out
ss
scas
fnstsw
fldl
or
arpl
aam
rcll
icebp
pop
jnp
push
daa
ja
dec
lcall
in
add
and
xor
sbb
jmp
pop
pushl
xchg
roll
adc
mov
push
mov
ret
nop
cmpsl
loopne
mov
fstpt
and
and
jmp
fcomip
pop
mov
adc
ljmp
and
mov
test
shrb
hlt
shll
mov
add
mov
movsl
or
xchg
hlt
mov
scas
lds
mov
and
repz
into
mov
shll
inc
sub
int3
fadds
mov
mov
cmpsl
push
inc
cmp
jl
adc
imull
push
lcall
push
push
inc
mov
add
lahf
shll
mov
pop
call
inc
sbb
cmpsb
jl
int
jmp
fsub
adc
sub
mov
lcall
mov
sbb
push
std
scas
and
sub
lea
push
or
mov
rcr
and
daa
lds
xchg
and
insl
dec
cmpsb
push
lds
lret
jle
std
cltd
cmpl
orb
cwtl
push
xor
sub
cwtl
and
icebp
lods
int
je
iret
frstor
scas
mov
xor
flds
dec
add
scas
sbb
lret
jecxz
mov
add
fbld
inc
adc
rcr
fadd
arpl
sbbl
cmp
push
rol
in
jns
dec
adc
inc
add
mov
int3
cmpsb
in
lret
scas
movsb
pop
lahf
pop
jge
loopne
sub
xchg
leave
js
in
add
fadds
scas
jmp
int
fnstcw
popf
sub
rorl
popf
mov
adc
jge
push
lods
and
lds
fdivrp
xor
gs
scas
mov
imul
in
insb
cmp
shlb
outsb
mov
xor
sbb
sub
rorb
or
iret
aad
cmpsl
lods
roll
jbe
sub
sub
insl
or
and
pushf
orb
mov
imul
sbb
xchg
bound
and
mov
sbb
push
mov
and
addb
stos
movsl
cltd
push
sahf
roll
aaa
add
jp
xor
mov
mov
pop
xor
sti
add
lret
jge
cmp
adcl
in
mov
pop
sub
xor
add
jge
hlt
jbe
sti
stos
mov
call
or
gs
pop
mov
push
adc
xchg
and
addr16
cmpsb
fstps
jle
fstpl
cmpsb
loope
inc
and
and
std
negb
and
pop
mov
inc
arpl
stos
repnz
jle
repz
push
mov
jnp
add
popa
adc
or
loope
cmpsl
mov
sbb
push
repnz
and
aas
inc
mov
mov
mov
lods
aad
fs
rolb
sub
psrlw
ret
in
mov
fbstp
pop
and
push
js
mov
lcall
lcall
push
sbb
paddw
sti
test
out
out
les
idivb
fyl2xp1
mov
pop
and
jmp
sub
lea
sbb
push
mov
adc
and
or
cmc
scas
fldl
sti
sysenter
es
sti
and
push
cltd
push
mov
popf
mov
xchg
fnstsw
push
mov
and
push
push
mov
dec
push
sbb
pop
cmc
ja
cmp
xchg
jle
sbb
lds
and
popf
dec
cs
imull
or
movsl
lds
inc
cmp
push
mov
lcall
cmovge
pop
fwait
inc
mov
and
xor
add
leave
mov
std
scas
rorb
movsl
mov
mov
push
movl
or
sub
xchg
pop
and
jb
call
and
nop
pop
lret
ret
or
jecxz
std
push
cmpsl
jmp
scas
pop
insl
inc
lds
lods
xchg
mov
and
mov
insb
imul
scas
pop
push
xchg
or
inc
and
les
sbb
pop
mov
xor
test
xor
imul
pop
fsts
and
ror
sbb
push
jmp
and
push
out
notb
std
xor
cmpsl
les
loope
add
and
mov
addb
stos
fcomi
mov
pop
scas
push
sbb
lret
mov
mull
xor
out
hlt
pop
cmpsl
mov
jo
in
push
dec
aad
xor
push
push
or
push
push
push
lods
fsubrs
je
push
std
lcall
icebp
lds
and
scas
add
sahf
jecxz
jle
mov
push
das
ljmp
in
mov
ror
jb
xor
je
mov
mov
sahf
jb
in
push
sub
add
int3
loope
xor
lret
dec
mov
push
or
push
imul
add
lcall
inc
and
mov
and
xlat
test
fisttps
fildl
push
cmp
shl
out
push
and
cmpsb
in
jbe
push
stos
xchg
test
jmp
sbb
sub
scas
fst
push
in
mov
dec
ret
stos
xor
fwait
push
popa
icebp
mov
sbb
or
cmpsl
add
and
fildll
gs
in
adc
roll
pop
inc
pop
jns
in
mov
pop
inc
out
rorl
in
pop
xchg
cli
ja
add
bound
ds
inc
or
push
mov
push
sti
cwtl
push
xchg
xlat
lods
push
mov
dec
pop
sbb
jnp
cmp
and
jns
in
pop
jmp
jle
pop
xchg
outsb
test
mov
and
push
test
mov
daa
mov
int
sub
shll
pusha
xor
mov
and
and
or
ljmp
jecxz
and
or
mov
cmc
nop
or
mov
push
mov
std
push
js
loop
dec
hlt
sbb
jo
sarb
push
adc
jmp
cmp
cmpsl
loope
add
mov
cmp
in
stos
lods
ret
repz
dec
test
sbb
lods
sti
addr16
and
add
pop
jmp
ss
out
out
cmpsl
jmp
xor
daa
testb
mov
mov
sub
adc
sbb
xor
jg
push
pop
xchg
aas
pop
ret
loop
pop
push
sub
in
mov
fildl
add
inc
mov
jno
and
lds
movsb
mov
adc
ret
shll
std
sub
xor
roll
insb
dec
int
mov
xor
aad
cmc
lods
xchg
fs
repnz
push
or
aad
into
dec
ret
or
cmc
ficomps
lock
cmpsl
and
je
add
sahf
sub
ror
je
out
or
lds
jbe
jecxz
push
xlat
cmp
ds
out
inc
jno
mov
or
arpl
stos
test
mov
inc
mov
push
fisttpll
loope
hlt
xchg
add
call
add
fwait
push
fisttpl
addr16
inc
and
xchg
sub
stos
sub
sbb
mov
mov
std
and
cmc
add
xchg
xor
in
dec
and
or
and
mov
jne
movsl
add
shlb
fldcw
sbb
cli
ds
and
and
and
xchg
push
pop
shll
aas
popa
sbbb
sbb
add
push
mov
and
mov
and
int
and
push
inc
lret
inc
idiv
mov
push
cmp
notb
cmp
ror
push
pop
xchg
cmp
pushf
inc
xchg
sub
es
test
popf
in
add
not
cmc
sub
jmp
movsb
out
sti
mov
loopne
push
call
xchg
inc
mov
daa
adc
jmp
mov
scas
mov
cltd
rcl
fs
sbb
shr
iret
icebp
lds
fs
fwait
aam
mul
imul
iret
stos
pop
and
mov
pop
xor
or
out
push
movsl
nop
mov
sub
adc
jns
cmp
sbb
pop
cmp
loope
enter
xchg
dec
and
mov
lds
fstpl
add
scas
rorb
mov
and
aam
and
out
jae
xchg
and
and
and
dec
push
out
mov
loope
mov
rcrl
in
jb
mov
sub
mov
scas
das
xchg
orl
outsb
fsts
into
rcll
add
mov
pop
cmp
pushf
pop
or
jnp
icebp
mov
lcall
leave
mov
and
dec
cs
daa
divl
sbb
cmc
sbb
out
add
mov
fcmove
icebp
mov
jnp
inc
enter
push
cli
push
pop
add
sbbl
or
adc
sub
jmp
popa
popa
cmp
jle
in
lods
lret
sbb
lret
mov
push
lar
jno
pop
adc
sbb
push
jge
and
jge
inc
pop
jecxz
push
cmpsl
cmpsl
dec
add
add
sti
hlt
int
lods
cs
or
jmp
add
sub
in
testb
std
push
popf
clc
pop
and
xchg
rcr
push
mov
sarl
loope
adc
in
fstpl
mov
xchg
jge
inc
adc
push
and
lret
sub
imul
rcll
jnp
add
push
cmpsl
test
push
ret
jbe
leave
movsl
adc
and
imul
loope
sarl
jnp
push
and
mov
and
ficoms
pusha
push
shll
scas
loope
ljmp
mov
outsl
imul
and
xchg
push
lret
hlt
outsb
xchg
repz
push
fidivl
aas
hlt
mov
mov
and
and
cmp
out
and
push
divb
popa
add
mov
dec
movsb
mov
icebp
cmpsb
stos
stc
push
ljmp
lds
mov
ret
mov
je
cmpsl
add
aaa
fdivrs
cwtl
and
pushf
cmp
xchg
les
popa
mov
or
mov
leave
cmp
in
push
lods
add
jb
gs
insb
cmp
out
mov
cld
pop
mov
orb
stos
ds
dec
aaa
mov
mov
cld
mov
mov
push
out
lds
cmpl
pop
loop
cmc
lds
xchg
xor
lret
shr
popa
stos
add
and
test
pop
scas
shll
push
inc
cltd
bound
cmpsb
xchg
mov
xchg
sti
aad
xor
inc
sbb
test
mov
sti
call
gs
mov
lock
outsl
in
inc
repnz
imul
testl
add
int
mov
push
lcall
in
pop
cltd
cmp
lds
and
mov
or
lds
dec
xchg
ucomiss
jnp
adc
lret
lods
lods
lds
jmp
cld
push
ret
ret
or
xor
fldl
js
ret
mov
loopne
popa
in
and
add
or
stos
xor
outsl
dec
add
cs
movsb
in
test
mov
mov
loopne
je
cmpsb
inc
xchg
sarl
scas
lds
push
repz
xor
lds
mov
repz
lods
dec
push
mov
cld
aam
sbb
push
or
jno
addl
dec
arpl
inc
aas
fbstp
sbb
pushf
xchg
add
mov
sbb
loope
push
into
cld
push
and
jg
cmpsl
ret
xor
rcll
xchg
adc
rol
fidivs
jecxz
xchg
mov
and
xor
jmp
cltd
inc
mov
mov
mov
xorl
jae
lcall
pop
inc
adc
jmp
fwait
sub
leave
lret
push
sub
add
pop
jb
push
call
mov
mov
das
add
xor
mov
cmp
leave
loope
rcrb
insl
ret
mov
jno
pop
sti
aam
aad
push
cmp
repz
xlat
add
shlb
jl
push
adc
add
imul
fimuls
scas
push
add
fstl
inc
loope
push
mov
mov
lds
or
leave
mov
jnp
adc
loope
fistps
sbb
int
sbb
inc
dec
and
mov
mov
int
cmp
test
in
in
addl
ja
movsl
sub
testl
jge
arpl
in
push
xchg
into
and
rorl
sbb
push
sbb
and
mov
call
jmp
sub
push
pop
in
lret
gs
xor
add
mov
in
mov
call
push
and
inc
ss
and
add
out
lods
and
sbb
mov
scas
jmp
xchg
cmpsl
repz
out
xchg
inc
xchg
sub
dec
cmpl
in
rorl
pop
cltd
aam
add
cmpsl
and
bound
inc
push
mov
imul
jne
in
call
push
enter
test
lds
mov
sbb
add
int
mov
sarl
cmpsb
pushf
cli
loope
cmp
hlt
mov
test
push
mov
pushf
cmp
sarl
jecxz
sbb
push
xchg
stos
and
std
ficompl
xchg
xchg
or
shll
fstpl
push
arpl
jecxz
mov
pop
mov
xchg
fidivl
mov
nop
cmpsb
fildll
push
lcall
jp
fildll
and
adc
xlat
daa
jge
dec
xchg
cmpsl
adc
sbb
stos
mov
cmp
or
enter
xchg
scas
int
mov
shlb
cs
xor
subl
loopne
in
push
inc
cmp
cld
int
out
insl
fstpt
or
jg
mov
push
or
lret
xor
in
lret
lret
movsl
push
dec
mov
repz
rcr
in
mov
cmp
sahf
push
cmpsl
mulb
pop
scas
popf
mov
add
xchg
jne
sbb
dec
bound
fldcw
aad
or
mov
cmc
mov
mov
mov
movsl
push
fstpt
or
push
arpl
clc
mov
mov
push
push
shrl
xchg
mov
jecxz
push
push
jp
xor
or
sub
test
jecxz
or
mov
xchg
xchg
sbb
cmc
popf
push
jmp
pop
and
adc
lret
lods
rclb
mov
and
dec
cmpsb
push
ret
cmpsl
mov
das
add
inc
mov
aad
sub
or
rcr
repz
mov
or
inc
jbe
pop
add
or
jmp
and
ljmp
call
mov
ljmp
mov
rcll
inc
jbe
sub
cmpsl
in
mov
jmp
mov
push
popa
add
lods
inc
or
imul
in
in
pop
and
filds
mov
add
jae
stc
push
adc
leave
cmpsb
out
orl
xchg
fnstenv
sbb
repz
lret
rorl
sbb
dec
adc
jle
adc
sbb
adc
cmpsl
adc
inc
xchg
mov
popa
hlt
sti
fisttps
mov
popf
xchg
imul
lcall
and
adc
mov
hlt
jecxz
and
test
inc
jbe
and
jne
push
cmp
or
cmpsb
pop
ret
or
loop
test
and
pop
lds
push
or
xor
das
fldenv
pop
fadd
popa
clc
loope
cmpsl
scas
mov
cmp
popf
jge
cmc
in
insb
loope
loope
jo
ja
mov
pusha
jbe
mov
mov
flds
dec
sub
and
adc
frstor
xor
xchg
fldl
movsl
cmpsb
das
mov
hlt
rcrb
mov
cwtl
inc
in
movsb
push
mov
icebp
outsb
cmpsl
and
in
lods
sub
inc
cmc
dec
xchg
cmp
fwait
cmp
mov
test
icebp
cmc
adc
mov
add
push
lds
cmpsb
bound
idivl
lret
xlat
fisttpll
cmpsl
jae
jl
xor
push
mov
lds
jle
push
outsb
or
imul
dec
scas
push
loope
push
pushf
push
sub
push
fstpl
xor
inc
adc
cmc
test
cmpsb
dec
and
push
xchg
xor
mov
inc
scas
xchg
jae
and
add
popf
mov
mov
test
out
popf
mov
sbb
sub
xchg
sbb
mov
mov
mov
dec
xlat
dec
push
sub
dec
xor
into
test
roll
add
out
jmp
mov
sub
scas
cmpsb
in
sbb
lods
mov
pop
scas
mov
and
icebp
cs
push
cli
out
iret
mov
nop
sub
test
mov
jbe
aad
mov
fwait
inc
add
adc
xchg
ja
mov
xchg
call
push
movsb
sub
jg
lahf
jecxz
out
mov
aas
daa
mov
xor
add
adc
push
loopne
add
add
repz
and
mov
adc
dec
mov
and
out
ljmp
cmc
daa
sti
ja
xchg
rol
adc
mov
aas
sub
sub
mov
sarb
dec
iret
out
adc
sbb
and
int
jnp
and
insl
out
cmp
vmovhpd
sti
add
fldt
push
sub
mov
and
mov
ret
daa
jmp
divl
call
ret
loope
cmpsb
jl
test
movl
pop
mov
mov
fstpt
mov
sbb
push
clc
mov
mov
sub
movsl
enter
adcb
push
loope
js
ljmp
daa
or
icebp
pusha
sub
ljmp
mov
adc
orl
cmp
mov
gs
add
shr
leave
cmc
sub
xlat
ret
cmpsl
das
pop
ret
daa
xchg
out
xchg
fmuls
imul
sahf
cwtl
out
or
scas
pop
cld
iret
add
stos
test
or
stos
cmc
sub
xor
fldl
shlb
icebp
jnp
lods
vpmaxub
jge
push
icebp
in
dec
mov
sub
pop
scas
out
mov
push
xlat
jle
inc
aad
push
out
mov
fdecstp
push
add
push
std
sub
lods
flds
jo
and
mov
cmc
scas
and
xchg
fld
repz
loope
mov
jbe
push
cld
rolb
in
mov
repnz
sub
cwtl
fcmovb
in
mov
dec
push
in
sub
cwtl
lds
xchg
jecxz
je
cmp
aas
fpatan
push
push
mov
add
loopne
lods
sbb
iret
add
cld
dec
in
and
jg
lret
inc
sub
fldz
rorl
in
loop
popa
sbb
jmp
add
mov
imul
mov
inc
mov
push
add
std
jecxz
cmc
sbb
xchg
mov
xchg
jp
in
push
fnstsw
jmp
inc
push
cmp
scas
decl
inc
mov
or
add
pushf
ficomps
push
sub
mov
les
or
push
in
dec
push
sub
dec
jge
cmp
cwtl
pop
cs
add
adc
loope
jl
xchg
cmp
jecxz
cmp
ret
sub
dec
pop
outsl
add
xor
test
mov
mov
mov
mov
mov
adc
push
rcrb
fld1
sbb
jnp
cmc
scas
inc
pushf
lods
inc
ss
jmp
xchg
movsb
push
pop
imul
cmpb
loopne
adc
bound
inc
xchg
and
fsts
sub
pushf
jns
dec
cli
mov
not
sbb
jge
pop
cwtl
stc
lcall
jno
ja
fisttpll
in
mov
sub
mov
movl
push
xchg
out
xchg
xor
jl
mov
jb
mov
lods
add
inc
xor
out
xor
fisubl
push
mov
gs
stos
leave
in
cmpsb
add
orl
dec
pop
rcl
mov
lods
lods
in
outsb
mov
cmp
rcl
push
cmp
push
add
scas
movsl
mov
inc
mov
shlb
mov
enter
bnd
mov
hlt
mov
xchg
sbb
add
inc
mov
adc
test
test
xchg
mov
jmp
sub
mov
mov
addr16
and
dec
xchg
int
sarb
pop
adcl
lods
xchg
push
outsl
add
fistpl
test
adc
inc
sar
movsl
and
push
cli
gs
adc
jns
sub
sbbl
adc
lods
out
mov
jo
or
sub
movsl
cmpsl
sbb
pop
push
cmp
subb
or
cmp
sub
std
out
or
je
push
xor
mov
movlhps
sub
pushf
icebp
stc
sbb
test
cmp
add
test
mov
or
add
shlb
movsl
or
adc
and
mov
and
and
jnp
leave
movsl
cmpsl
adc
cmc
rorb
fistpll
jecxz
mov
mov
inc
test
push
sbb
mov
outsb
jl
rol
sub
aam
sbb
sub
ja
mov
jns
ret
cmpsb
lds
mul
cmp
insb
popa
mov
sbb
cmc
mov
es
stos
push
cwtl
inc
fwait
andl
dec
scas
sbb
iret
jmp
test
pop
inc
pushf
dec
lret
lret
mov
and
adc
hlt
pop
dec
in
pushf
shrl
cmp
mov
fndisi(8087
jns
adc
mov
mov
sbb
std
push
add
pop
popf
outsl
lret
jnp
shll
and
subl
or
mov
inc
stos
dec
shl
jle
mov
cwtl
xor
pop
mov
ljmp
xor
fcoml
sub
in
ss
es
mov
mov
lock
xor
jl
sub
roll
push
lret
fistpl
vmread
and
and
jne
sub
adc
in
sub
pop
xchg
je
xchg
and
test
sub
mov
lds
xlat
or
shll
cmp
out
and
dec
cmp
fnstcw
mov
icebp
in
cwtl
mov
insb
inc
jecxz
aam
jae
notb
jno
fnstcw
roll
outsb
push
lods
and
fcomps
push
push
push
lods
pop
subl
xor
or
cltd
push
mov
push
stos
xor
bound
psllq
lods
inc
mov
sbb
mov
inc
add
and
add
mov
sbb
inc
pop
leave
scas
inc
mov
fucomip
push
jne
test
lret
mov
sti
xlat
sbb
cli
stos
test
stos
push
cmpsl
fs
mov
daa
adc
loope
rcrb
jecxz
sub
inc
arpl
push
fildll
scas
and
cmp
movsl
test
jno
into
movb
in
xor
mov
sub
push
add
lds
fisttps
loopne
fsts
xlat
aaa
sbb
xor
pop
sarl
adc
movsl
cmpsl
cld
cs
dec
xchg
arpl
stos
mov
and
mov
jecxz
push
mov
pusha
jle
fistpll
lods
out
outsl
push
pushf
cmpsb
push
mov
popf
xchg
jae
inc
cmpsb
adc
int3
dec
imul
leave
pop
jge
sar
rolb
pop
imul
and
lea
lock
add
ja
ss
das
fucomip
daa
xchg
lcall
add
test
out
jmp
add
mov
cmc
ja
mov
pop
jl
push
fldcw
and
xchg
jge
xor
repz
sahf
test
cmpsb
mov
sub
mov
sbb
aad
cmp
inc
jns
in
mov
jp
push
cmc
dec
or
push
mov
mov
xchg
lods
mov
mov
add
mov
outsb
or
in
loope
adc
sub
test
mov
pop
add
lds
or
mov
jnp
adc
push
mov
aas
outsl
add
sbb
xlat
mov
sti
shlb
daa
add
lds
dec
sub
cld
push
inc
push
adc
lret
push
dec
scas
mov
mov
mov
adc
lods
sbb
mov
scas
lds
jne
in
aam
sbb
dec
imul
data16
pop
jmp
push
je
mov
or
imul
and
cmpsl
movsl
lcall
aad
imul
outsl
outsb
and
fldenv
addr16
push
aad
xorl
les
shll
xor
adc
push
sti
sub
lds
cmc
cmc
mov
stos
jns,pn
dec
cli
sbb
jp
mov
adc
lret
shl
inc
sub
or
xchg
mov
sti
and
push
jmp
push
insl
push
arpl
shll
repnz
mov
test
sbb
mov
fnsave
daa
push
test
inc
iret
mov
adc
mov
imull
push
adc
mov
cltd
pop
mov
jae
pop
cmc
out
mov
mov
mov
sbb
and
jge
and
rorb
fldcw
int
push
push
mov
cwtl
pop
add
stc
push
mov
xor
push
scas
lds
cmp
push
rorl
call
in
mov
xor
loope
jo
cmpsb
jl
xor
in
lock
lds
and
fcom
ljmp
sbb
xchg
inc
into
push
aad
call
js
ret
test
sub
sub
and
repz
pushf
sub
jno
xchg
xor
fwait
outsl
test
fcoms
mov
lds
inc
pop
icebp
ss
out
inc
push
scas
fstps
out
and
xchg
mov
iret
jmp
mov
sbb
mov
imul
cmpsb
lds
loope
cltd
popf
out
sub
test
sub
rcrl
jae
scas
mov
daa
movsb
rcrl
or
nop
dec
ret
mov
sub
jnp
stos
mov
mov
lods
push
sbb
testb
in
sub
push
cld
ror
fstp
loope
and
test
mov
sbb
and
push
out
daa
add
or
jb
shll
push
mov
mov
in
out
fdivs
push
popa
xor
loopne
scas
movsl
test
ds
xor
lods
loopne
popf
jl
addr16
popa
mov
test
push
imul
and
fstpt
adc
and
mov
pop
sub
push
in
xor
shl
add
sbb
repz
xchg
push
sub
fmull
fucomp
inc
movsb
or
sbb
stos
lret
or
dec
pop
cmpsb
in
push
mov
and
pop
xor
xchg
inc
repnz
rol
lds
cmc
push
xlat
mov
add
aaa
arpl
cmp
cmpsl
adc
or
shrb
mov
sub
and
arpl
xlat
adc
jmp
jmp
sbb
bound
push
mov
sbb
arpl
cltd
pusha
jbe
rcr
lds
loope
xchg
aad
shl
clc
jmp
sar
stos
fidivrs
scas
ds
lret
and
push
xchg
dec
sub
mov
aas
dec
mov
add
sub
push
lea
xchg
pop
mov
and
movsb
fists
cmpsb
and
mov
pop
jmp
aad
std
xchg
mov
mov
cmc
daa
js
jmp
movsl
push
test
rcrl
xchg
clc
push
repnz
cmp
aam
xor
xor
jle
pop
push
aad
movsb
lods
rcr
out
push
enter
in
js
dec
adc
mov
lods
xor
ret
and
cld
and
push
cmc
xchg
mov
adc
rol
fiadds
push
test
lcall
shl
mov
out
sub
mov
lahf
out
cwtl
int
inc
int3
push
or
mov
sbb
jg
mov
or
push
sub
sbb
loope
repnz
xlat
icebp
mov
xchg
vprotb
mov
push
cli
fstps
sub
sbb
mov
mov
dec
xchg
pop
and
cmc
andl
cli
xlat
push
sub
jmp
push
lret
jle
test
and
ja
ror
rolb
les
int3
add
rcrl
jbe
add
lds
sub
add
cmpsl
mov
mov
mov
lods
fimull
xchg
negl
shll
cmp
repz
push
mov
xlat
sahf
and
rorl
icebp
mov
lea
push
repz
pop
scas
loope
std
pushf
xchg
push
sub
mov
xchg
mov
mov
adc
xor
cs
cltd
push
int3
lds
lds
iret
adc
sub
mov
rcl
pop
cmpsb
push
test
pop
imul
flds
push
mov
push
or
shlb
sbb
movsl
stos
xchg
arpl
pop
mulb
shl
adc
push
and
test
daa
je
arpl
sub
in
mov
mov
mov
mov
sbb
aad
clc
pop
rcr
sti
sbb
mov
hlt
mov
dec
xchg
jecxz
hlt
and
inc
test
push
cmc
daa
jp
cltd
jge
xchg
push
xchg
pop
test
out
push
mov
push
cmp
jecxz
adc
and
xchg
sub
sub
xlat
and
fsts
dec
and
inc
xchg
pop
mov
sbb
fcoml
mov
gs
in
cwtl
add
frstor
loop
and
stos
es
inc
test
shll
popf
add
push
pop
int
leave
and
push
bound
daa
test
aad
jecxz
adc
lds
sbb
cmc
cld
dec
push
in
mov
adc
jmp
scas
pop
ret
mov
xor
mov
fcmovbe
jmp
lret
cmp
das
rcl
lahf
push
stos
lcall
ret
insl
aaa
jge
gs
outsb
cs
bound
mov
lea
xlat
mov
jno
daa
push
sbb
inc
sbb
lds
outsl
jo
jbe
iret
mov
fcoml
mov
in
out
fisttps
popl
int3
push
sub
dec
ljmp
sbb
and
push
daa
xchg
push
aas
aad
xor
or
int3
das
test
mov
int
loop
cmp
iret
scas
and
jno
aam
jp
lret
mov
clc
mov
fstpl
daa
sbb
mov
adc
inc
lock
inc
xor
cmc
aaa
repnz
mov
push
int3
cmp
mov
xchg
push
add
mov
xor
fcompl
dec
mov
xchg
stc
divl
add
test
xchg
mov
scas
jecxz
sub
adc
push
jl
iret
int
mov
or
dec
jno
mov
stos
sub
jno
test
sti
aas
or
scas
mov
pusha
out
fnsave
jmp
inc
loopne
ficoms
lods
mov
jbe
or
and
fstpl
push
ja
ja
frstor
sub
test
sarb
aad
int
sbb
lret
pop
sti
stc
cmc
sub
jmp
movsl
sub
adc
cwtl
mov
mov
lcall
mov
sbb
cwtl
rclb
xor
stos
xchg
cmp
jno
insb
push
inc
popl
sbb
mov
in
and
jl
scas
loope
xor
pop
jo
loopne
rorl
and
mov
sbb
fistpl
pop
loop
mov
popf
rclb
adcb
sti
pop
jns
int3
int
jb
fbld
sub
cmp
xlat
add
sub
vpandn
fcmovb
sbb
dec
jne
in
mov
pop
imul
imul
sub
dec
and
mov
cmc
in
cmp
ja
inc
stc
and
ds
js
and
divb
in
jnp
lds
inc
adc
and
cmp
stc
xchg
mov
push
insb
cmp
push
add
in
les
adc
jnp
jecxz
les
loope
sub
sub
adc
stos
pop
and
xchg
xlat
je
leave
test
lcall
cmp
pop
and
data16
daa
aaa
jns
mov
mov
dec
xchg
jl
aad
add
jno
outsb
stc
adc
scas
lods
push
ret
mov
xlat
cmp
out
test
mov
and
mov
stos
lods
xor
lds
mov
lods
stc
add
mov
mov
scas
push
shll
xor
jl
dec
pop
sbb
push
push
mov
sahf
xor
and
and
sti
test
jg
and
test
mov
lcall
cmpsl
cmp
in
inc
cmp
lret
and
mov
loopew,pt
popa
cmp
push
arpl
inc
popf
and
movsl
movsb
mov
in
push
mov
lcall
mov
jg
or
lahf
pusha
push
dec
fwait
sbb
flds
call
xchg
loope
xor
out
movsl
mov
scas
sbb
mov
dec
fcomp
add
push
and
test
mov
xchg
add
lods
dec
mov
cmc
test
scas
stc
cmpsb
lds
xchg
mov
dec
mov
add
mov
cmc
in
and
xchg
cmp
popa
test
push
cmp
mov
jl
stc
jecxz
fistps
lods
and
mov
jae
sbb
xlat
sub
or
fs
cmpsl
push
mov
ljmp
aad
roll
sub
ret
lods
sub
clc
push
jp
lret
test
cmp
ret
das
xor
aaa
mov
cld
iret
movsl
pushf
lahf
mov
int
dec
lcall
test
inc
mov
data16
and
cmp
scas
lods
je
out
mov
cmpsb
aas
stc
lods
xor
and
mov
test
lret
inc
and
iret
mov
or
push
cmp
lds
scas
xchg
pop
test
mov
popf
pusha
push
repnz
cmpb
mov
cmp
sahf
popa
pop
jnp
mov
xchg
xchg
mov
popf
mov
add
cmpsb
xchg
out
xchg
out
push
cmovp
mov
or
aaa
mov
and
mov
dec
sbb
out
mov
inc
push
pop
shl
lds
dec
add
fldcw
mov
pop
hlt
mov
xor
mov
jmp
mov
lds
add
aaa
mov
sbb
adc
sub
and
lea
xchg
xchg
jmp
sub
cs
jge
sbb
ljmp
sahf
cmp
sbb
cs
notl
out
xor
loopne
pop
mov
adc
push
sub
mov
int3
pop
std
mov
jo
enter
cmc
or
push
inc
push
add
sub
dec
mov
add
stos
outsl
push
or
mov
dec
cmc
fwait
in
or
xchg
pop
dec
and
lds
movsl
and
cmp
leave
or
adc
mov
movsb
fmuls
dec
fbld
lods
pop
push
jmp
adc
push
mov
add
mov
cld
rorl
imull
lods
call
in
push
in
out
gs
jp
mov
cwtl
jl
adc
std
sub
adc
xchg
in
push
repz
mov
divl
out
add
mov
push
popf
adc
stos
pop
insb
sbb
add
xor
fists
mov
mov
daa
int
mov
and
mov
mov
jle
and
scas
jmp
shr
jbe
int
sub
shl
das
jge
xchg
test
lea
loope
test
cmp
and
popa
xor
push
aad
xor
xchg
xchg
mov
insb
cli
and
push
es
aaa
add
mov
add
jge
cmp
pop
roll
das
pop
cli
test
movl
and
fdivrl
jge
insb
idiv
icebp
lds
loope
in
cwtl
or
inc
loopne
adcl
xchg
cmpsl
adc
mov
je
jecxz
in
sbb
xor
and
push
sub
mov
mov
xchg
add
or
rclb
cli
fwait
push
daa
imul
sub
ss
je
mov
and
add
xchg
leave
xor
mov
repz
dec
scas
adc
je
inc
xor
jmp
fidivs
fcoms
aam
inc
add
pop
sub
add
ret
and
adc
pushf
jg
out
pop
out
loope
push
adc
sub
jnp
xor
and
insl
stos
push
in
fstl
sub
and
jge
mov
std
mov
mov
loope
sub
inc
xor
aad
mov
sti
std
jne
popa
clc
sbb
pop
shlb
pushf
sub
stos
and
xor
int
sub
shll
mov
rol
xchg
fldt
ror
fstp
pop
int3
mov
xchg
ret
or
push
mov
adc
jno
cmc
inc
add
adc
adc
jmp
and
stc
push
mov
xchg
add
daa
lcall
add
fnsave
add
cmc
cwtl
into
shll
sar
push
ss
test
scas
cmpsb
cltd
cmc
and
hlt
lock
loopne
lds
sbb
cmp
fiaddl
sub
bnd
xlat
fstps
faddl
in
mov
mov
mov
push
psraw
adc
and
mov
sub
cmpsl
movsl
sti
cmpsb
cmc
xlat
das
pop
jmp
cmc
sbb
ss
out
and
int3
cmp
fxch
loopne
fs
cmp
and
fdivrp
jbe
lds
mov
jge
sar
push
xor
mov
scas
jns
sbb
or
roll
jmp
inc
psraw
cwtl
and
cmp
mov
and
xor
filds
negl
loope
in
ror
cli
add
lahf
das
add
or
or
xor
lret
pop
inc
sahf
sub
repz
es
repnz
or
or
push
shll
jno
xchg
and
jmp
xor
in
mov
in
js
xchg
push
mov
loope
cltd
mov
adc
cmp
xor
je
mov
sbb
mov
cmc
rcll
xchg
push
shrl
and
aaa
pushf
movsl
mov
cmp
ret
xchg
adc
fnstenv
jmp
pop
stos
add
cs
shr
push
and
mov
cmp
in
pop
push
pop
jp
and
push
std
xchg
sbb
sbb
lock
xchg
pop
sar
xchg
mov
and
pop
push
mov
lds
insl
jbe
pop
testb
xchg
or
popf
inc
and
icebp
insl
sub
icebp
and
inc
ja
push
xchg
mov
shrb
cmc
sbb
je
sar
push
mov
push
xchg
pop
sbb
cmp
loopne
sbb
int
imul
mov
mov
or
in
insl
and
movsb
cmc
out
out
das
iret
mov
jns
and
cli
xchg
int3
dec
addr16
fcomps
push
scas
test
sbb
stos
in
stos
mov
pop
cli
mov
pop
xlat
loope
xchg
mov
push
dec
fwait
push
or
mov
cmpsb
fs
cmp
loopne
cli
ss
scas
arpl
push
adc
fwait
xor
push
and
std
xchg
jecxz
loope
cmp
fmul
sti
bound
jge
in
push
mov
movsl
mov
aad
mov
mov
in
ja
hlt
mov
or
mov
mov
popf
cmp
xor
cmp
mov
movsb
in
mov
mov
inc
mov
lods
mov
adc
mov
dec
cmp
aaa
push
movsb
jnp
scas
inc
jns
sbb
and
lods
test
lds
cmpsl
cld
pusha
add
and
iret
fidivrs
xor
rclb
arpl
stos
sub
lcall
add
jmp
lods
rcll
incl
xlat
call
sbb
cmc
xor
cmc
add
mov
sub
mov
mov
mov
jae
sbb
inc
push
sbb
sbb
scas
or
cmpsb
lds
sti
ds
sub
mov
jmp
test
jb
pop
dec
adc
ret
dec
dec
out
leave
ret
in
ja
roll
call
and
fdivr
std
cltd
bound
sub
std
and
lock
popf
fstp
roll
mov
push
arpl
fstl
lret
push
jle
or
mov
lcall
cmp
sbb
mov
popf
dec
loopne
jmp
adc
pop
sti
dec
cmp
xchg
cmp
xorb
lock
xor
mov
jg
daa
cmpsl
out
cwtl
leave
daa
push
mov
xchg
stos
mov
and
xchg
popa
mov
jge
pmulhuw
iret
or
and
sti
push
cmpsl
add
das
mov
scas
pushf
testl
lahf
or
or
cmp
pop
mov
popf
mov
sbb
loopne
cmp
dec
stos
mov
sarb
lret
test
int
je
lds
push
fiaddl
inc
dec
lcall
pop
adc
and
ss
xor
or
dec
add
out
loopne
lods
inc
mov
sbb
jmp
imul
and
inc
adc
loope
aaa
jmp
mov
daa
out
nop
jae
rcrl
push
inc
mull
sbb
dec
xchg
xor
outsl
ds
xor
cmp
or
popa
iret
adc
imul
sbb
jmp
mov
mov
shl
hlt
fisttpl
mov
or
in
mov
stc
inc
add
sub
pushf
sbb
push
mov
cld
inc
movsb
popf
rorl
mov
stc
sar
fstps
bound
icebp
std
inc
int
stos
xchg
xor
cld
rcr
jbe
mov
push
and
pusha
sub
cmpsl
and
imulb
icebp
cmp
test
cld
or
sbb
lea
adc
cmc
and
div
sbb
das
or
or
andb
in
sbbl
push
pop
cmpsb
mov
and
popf
mov
sub
out
mov
push
fyl2xp1
xor
xlat
out
push
add
sarb
lds
cmc
aas
sarb
pop
mov
mov
jno
enter
stos
xchg
ds
jecxz
call
je
shll
xchg
mov
out
lods
imul
pop
stc
inc
push
in
int
bound
scas
stos
xchg
cmc
mov
adc
push
adc
jmp
cmc
test
mov
imul
or
cmp
xchg
or
pushf
pop
std
or
vpaddusw
push
xor
mov
sti
aam
bnd
inc
leave
mov
jns
mov
sub
or
inc
mov
lret
add
and
cmp
push
inc
fcos
sub
popf
lea
rcr
mov
mov
jmp
xchg
jno
push
mov
push
mov
or
idivb
push
std
stos
cmpsb
mov
lods
xchg
sbb
ss
jmp
sbb
jmp
shll
lcall
test
mov
cmp
frstpm(287
and
inc
xchg
xlat
push
sub
aam
add
and
inc
pop
mov
mov
push
out
mov
fs
popf
lds
incl
jle
xchg
xchg
and
ret
test
xchg
mov
pop
stos
in
sub
mov
mov
out
jmp
xchg
cmpsb
inc
movsb
rep
inc
and
cmpsb
enter
jne
adc
stc
push
out
mov
xchg
mov
cs
loopne
xor
mov
shlb
das
out
pushf
mov
sbb
and
pop
popa
jecxz
movsl
cmpsl
and
pop
dec
sbb
je
cmpsb
push
sbb
pop
cmpsl
xchg
push
outsb
negl
out
and
jp
aad
mov
jecxz
shrl
cmp
mov
mov
jno
jmp
push
aaa
sahf
shll
xor
lahf
xor
xchg
and
push
cmc
cmpsl
jne
adc
icebp
xchg
fldl
loopne
mov
add
imul
dec
in
mov
push
ret
in
jmp
jle
les
push
sub
xchg
mov
mov
mov
sbb
jne
stos
inc
pushf
push
push
jae
stc
cmc
aaa
pop
lea
push
fcmovnbe
cmc
test
xchg
mov
push
mov
cmp
pop
adc
and
cmc
xor
iret
push
xchg
mov
dec
mov
xor
mov
dec
dec
test
xchg
movsl
cmpsb
and
into
shll
lret
dec
mov
xor
imul
mov
xchg
mov
das
push
mov
sub
xchg
cld
push
adc
and
out
fsubrl
inc
fsub
pushf
push
movsb
or
mov
sbb
test
xchg
pop
push
mov
add
lds
dec
popl
imul
sbb
mov
mov
adc
sbb
adc
test
jns
cmp
mov
inc
dec
or
adc
popf
scas
push
lds
mov
pop
fnsave
outsb
xor
fs
rorl
and
mov
inc
cmp
sbb
out
mov
and
inc
adc
rcrl
into
push
xchg
loopne,pn
iret
mov
stos
adc
jo
fcmovu
push
sbb
cmpsb
cmp
jge
cmp
popa
sub
sbb
cmp
and
cmpsl
mov
cs
and
lcall
lods
test
aam
add
mov
xor
sub
mov
mov
outsl
sbb
inc
cmc
sbb
lret
jmp
or
fildl
jp
sbbb
push
lret
pop
lods
or
neg
add
inc
inc
out
push
adc
sub
jo
cmpsl
mov
push
mov
push
mov
jb
push
and
mov
scas
test
sbb
adc
popf
leave
add
push
mov
pop
cmp
xchg
add
inc
mov
sub
push
adc
push
sub
cld
lock
mov
das
sbb
mov
xor
adc
das
sub
in
cmp
cmpsl
xor
loope
pop
push
enter
and
loope
cmpsb
mov
repz
push
out
andl
cmc
jno
mov
jge
int
xor
fs
xor
push
mov
ljmp
leave
ret
lds
leave
or
inc
xor
test
adc
mov
mov
test
or
jno
mov
testl
call
in
pushf
jb
pop
testb
dec
push
mov
mov
call
xor
lods
in
orb
push
mov
out
mov
xchg
pop
jl
and
pop
xchg
mov
xlat
cmp
scas
adc
jl
roll
cwtl
js
into
pop
adc
xchg
lods
jp
push
out
and
jnp
in
mov
pushf
repz
xor
int
or
pop
xchg
inc
ds
fucomi
lds
jp
std
lods
sub
test
clc
lds
push
insl
xor
mov
and
arpl
jnp
ljmp
setge
adc
and
jns
pop
mov
adc
mov
movsb
icebp
adc
mov
mov
movsl
and
sbbl
fnstcw
adc
xlat
call
and
sbb
mov
add
add
roll
imul
mov
loopne
jmp
cltd
adc
je
stos
pop
insb
push
cmc
fs
mov
lahf
dec
xchg
jg
xor
cltd
aaa
and
add
gs
filds
cmpsl
add
pop
adc
jmp
scas
lods
shl
or
push
inc
aad
cmpsb
aad
or
lds
add
push
cmpsb
mov
inc
in
jecxz
cmp
stos
lcall
mov
loope
mov
aam
add
aaa
mov
in
dec
push
out
pop
xchg
mov
sub
fdivl
in
mov
mov
sbb
enter
lods
stos
lret
sub
roll
fldcw
pushf
clc
adc
jb
in
adc
push
cmp
pusha
daa
push
jp
inc
lods
ret
adc
lods
xor
ret
xchg
xor
jae
xchg
mov
fsts
push
pop
pop
or
roll
push
out
adc
lahf
repz
push
push
sub
push
sbb
icebp
add
out
mov
and
sti
xchg
xor
shlb
sub
out
dec
sbb
leave
stos
insb
mov
xlat
jge
sbb
mov
mov
mov
jmp
ret
cltd
fadds
popa
mov
fmuls
inc
push
mov
sbb
dec
sahf
shl
push
jo,pn
mov
sti
in
pop
xchg
outsb
hlt
aam
fnstcw
xchg
dec
cwtl
mov
mov
push
data16
iret
pushf
in
and
adc
les
add
lods
fcomip
xor
in
cli
pushf
inc
push
sbb
in
repz
adc
sahf
adc
mov
lods
sub
xlat
mov
out
test
xchg
notrack
iret
jle
mov
and
repz
xor
aaa
add
addr16
enter
and
mov
stos
aas
test
ret
lods
pop
clc
mov
jmp
std
pushf
sbb
test
adc
pop
or
jp
imul
and
push
cmp
add
and
fcoml
jcxz
lret
add
cld
mov
int
pop
mov
mov
mov
xchg
add
pushf
ret
or
add
pushl
popa
sub
aad
push
push
add
or
adc
and
jbe
adc
mov
xchg
cmp
dec
sub
mov
adc
pop
iret
iret
ret
sub
out
sub
movsl
jecxz
repz
stc
fisttpll
fnsave
in
or
imul
jbe
mov
jg
mov
inc
movsl
cmpsb
mov
inc
pushf
cli
ljmp
lock
data16
das
leave
popf
cmp
mov
sbb
add
mov
sub
sti
adc
cmp
add
stos
and
jg
pop
scas
mov
sarl
leave
lret
inc
scas
mov
add
dec
xchg
dec
mov
sahf
lods
pop
in
neg
addl
push
xor
xor
mov
stos
jmp
fstpl
popa
xlat
stc
aaa
mov
scas
inc
sbb
jbe
fs
jae
mov
adc
xor
lret
adc
jmp
fstpl
and
pop
iret
enter
movsl
jmp
stos
aad
xor
pop
jae
repnz
cli
xchg
cmp
add
dec
popf
jl
adc
mov
cmc
mov
ret
mov
test
int
aam
mov
mov
and
push
add
cmpsl
and
rcrb
mov
lods
and
mov
mov
lods
clc
sahf
jecxz
jne
mov
fimuls
add
pop
sbb
subl
and
fld
push
mov
mov
ret
in
sub
flds
or
in
mov
fisubl
mov
push
imul
sti
cs
add
xchg
lcall
addr16
sub
subb
jb
or
pmaxsw
mov
test
movsb
or
lds
lret
lds
jbe
test
mov
and
out
loope
sbb
lret
mov
inc
fisubs
or
adc
adc
adcb
and
and
daa
imul
lret
test
shrb
push
mov
inc
jg
cmc
mov
shlb
mov
jbe
movsb
jg
jecxz
pop
xor
in
pop
mov
fstps
std
sti
push
jge
stos
cmp
shr
adc
mov
sbb
mov
mov
push
in
xchg
jmp
mov
iret
push
in
mov
mov
vmovshdup
jl
push
cmpsl
das
stos
icebp
jno
fwait
outsl
cmpsl
xchg
inc
repnz
jp
push
mov
in
mov
push
sbb
sub
in
lcall
movb
mov
pop
cmp
lcall
fs
cmp
repnz
sub
aaa
shrb
popf
sub
lods
loope
in
add
fcoms
jnp
mov
push
push
add
inc
add
mov
dec
movsb
adc
stc
pop
adc
push
push
aas
jno
xchg
add
mov
or
inc
xchg
jbe
mov
stos
inc
scas
and
push
iret
or
stos
adc
scas
sbb
fstpt
ss
iret
push
push
sti
mov
cltd
sbb
out
sub
inc
mov
rol
sub
jb
adcl
in
pop
leave
orl
sub
push
scas
test
iret
pushf
daa
mov
in
js
xchg
push
jns
mov
lods
push
sbb
jnp
into
mov
das
sar
lahf
sub
fldt
mov
cli
sbb
clc
pop
or
add
ja
push
outsb
or
popa
sub
pop
loopne
push
and
sub
lods
call
cwtl
pop
insb
ss
mov
xchg
sub
leave
xchg
loope
int3
mov
mov
mov
lds
ret
mov
sarb
mov
sub
aam
xchg
rorl
scas
aaa
inc
and
sub
lods
pushf
push
bound
push
mov
es
out
in
pushf
repz
andl
fsts
sbb
mov
and
inc
cmpb
ret
mov
test
int
orb
popf
sub
stos
loope
test
testb
ffree
sti
mov
mov
andb
mov
push
cmp
sub
xchg
add
inc
push
mov
xor
add
icebp
or
call
test
pop
fiaddl
adc
std
inc
ret
adc
mov
inc
lods
test
into
aam
and
mov
lods
xlat
popf
cmc
xor
and
or
test
pop
mov
cmp
xchg
lret
pop
mov
xchg
and
stos
hlt
mov
add
mov
sbb
jecxz
jmp
lds
in
mov
das
push
push
xor
lret
push
roll
add
push
out
ret
inc
inc
xor
and
js
test
jnp
sbb
pop
rcl
push
dec
mov
call
jecxz
out
add
cltd
scas
cld
lods
or
jle
scas
push
lret
inc
into
jno
aad
adc
in
js
push
test
inc
ret
jl
mov
fmul
iret
jecxz
mov
mov
in
mov
addr16
repnz
lods
xchg
cmp
shll
test
pop
lock
push
loope
cmp
out
sbb
jle
in
in
mov
out
push
sub
mov
test
jns
cmp
inc
out
dec
add
dec
mov
daa
push
add
or
es
aaa
pop
popf
fstps
inc
sub
or
mov
sahf
xor
add
out
fstpt
xchg
lods
sbb
jle
imul
roll
ja
dec
xchg
push
xor
xlat
jo
mov
sbb
imull
scas
dec
add
and
rcll
or
shlb
and
cmpsb
push
outsl
cmp
adc
sahf
cwtl
sbb
push
push
daa
in
dec
xchg
ja
out
pusha
popa
mov
inc
cmovs
ds
mov
xlat
adc
and
lods
add
into
push
sub
enter
movsl
movsb
adc
mov
jmp
push
push
popf
fcoml
xchg
enter
in
sbb
add
leave
adc
leave
mov
mov
push
imull
loop
sbb
fldenv
stos
sbb
sub
aaa
mov
fucom
out
fxch
sbb
xor
fstpt
ja
jecxz
add
inc
jae
loope
movsl
mov
adc
push
sti
mov
jecxz
mov
fiaddl
and
mov
or
je
and
inc
jns
dec
rcll
cwtl
sub
roll
icebp
cltd
out
sbb
loopne
sub
cmc
xchg
pop
xor
jno
shrd
out
dec
cld
and
fldcw
sbb
lds
pop
mov
in
imul
nop
sahf
test
push
inc
rclb
mov
push
push
test
icebp
pop
popa
in
lods
sahf
or
decb
push
fucom
xchg
stos
imul
jmp
fisubl
and
xlat
xor
jbe
push
adc
add
pop
sbb
ret
inc
mov
inc
mov
jl
fs
fcmovnbe
inc
repz
ret
push
das
push
inc
js
pop
rcrl
arpl
adc
or
lods
shlb
daa
add
inc
loop
inc
mov
jp
shll
mov
sbb
loope
sbb
sbb
dec
xchg
sub
inc
pusha
or
dec
mov
sbb
mov
cs
and
ja
push
stc
call
push
and
fnsave
jno
jae
adc
int
sbb
mov
mov
mov
pop
je
inc
xlat
push
mov
adc
push
jge
ret
jmp
jnp
cmp
dec
fistpl
aaa
ljmp
jl
aad
test
add
lods
outsb
ds
jmp
and
add
loopne
insl
incl
movsb
cs
lret
sti
push
ret
pop
xchg
mov
and
or
or
fbld
adc
adc
jns
sub
movsl
stos
and
dec
repnz
scas
aad
hlt
cmp
pop
mov
in
stos
fucomp
and
out
jnp
or
sub
test
mov
sub
loope
fildl
and
mov
pop
out
mov
ljmp
push
lods
jae
pop
mov
mov
sbb
mov
fisttpl
pop
out
subl
pop
out
cmp
push
mov
clc
dec
jmp
popf
rclb
sub
and
arpl
jl
sbb
xor
push
jnp
pop
int
mov
and
mov
lret
mov
sbb
push
stc
cmp
sbb
mov
add
pushf
push
scas
sub
sub
cmp
fldl
std
out
push
es
lds
lds
xlat
xor
aaa
fimuls
sbb
ss
push
sbb
and
inc
in
xor
shrb
insb
sub
or
dec
mull
cmpsb
mov
mov
in
movsb
sbb
push
jo
movsl
mov
insl
adc
mov
cmp
adc
sub
sbb
lods
and
pop
mul
and
mov
test
lock
cmpsl
and
rclb
sbb
or
mov
sti
jmp
data16
mov
outsl
out
xor
out
popa
mov
mov
mov
mov
mov
sbb
sti
bound
adc
push
mov
ficompl
lret
push
mov
icebp
sbb
adc
inc
mov
lds
in
outsb
adc
mov
adc
xchg
push
adc
ret
push
iret
inc
insb
ss
add
and
mov
ret
and
mov
push
xchg
sbb
dec
ljmp
test
adc
and
push
xor
das
out
lods
daa
xchg
icebp
xchg
push
inc
jmp
repz
jmp
loopne
hlt
stos
jns
push
loope
push
fisttpll
ds
jl
push
xlat
and
fwait
shr
mov
mov
adc
cmpsl
mov
bound
xchg
xor
cwtl
sbb
shrl
movsb
stos
adc
or
scas
mov
int3
push
jmp
adc
hlt
mov
test
and
lret
xor
inc
and
call
mov
pusha
pushf
jp
adc
mov
mov
inc
cli
cmpl
cmpsl
and
loopne
and
sbb
out
icebp
add
fstpt
std
pop
xor
fadds
fidivs
ret
dec
cmc
xchg
sbb
les
pop
xchg
mov
sbb
mov
adc
mov
shll
and
std
sbb
in
jge
fwait
xchg
dec
pop
mov
test
push
sub
loope
mov
pop
leave
adc
inc
push
dec
jns
sub
lds
jb
jo
mov
mov
mov
mov
mov
mov
mov
and
push
stos
and
mov
sbb
mov
ja
mov
sub
ss
mov
lods
xchg
cli
leave
or
fsubrs
test
sub
lcall
pop
lods
adcb
cmp
jnp
sti
pop
and
lret
cmp
push
and
add
mov
sbb
dec
hlt
or
aaa
xchg
cmp
out
jmp
dec
mov
mov
test
loopne
mov
data16
mov
test
lcall
cmp
or
jl,pn
ja
adc
push
xlat
add
mov
cmc
movsb
pusha
je
sbb
xchg
mov
cmp
cmp
jmp
in
sbb
dec
movsb
loop
adc
aaa
xor
xchg
leave
push
int
in
loope
lods
jmp
inc
and
pop
dec
xchg
jp
add
std
scas
pop
popf
sbb
aad
orb
cmpsb
mov
sbb
sbb
mov
inc
push
xor
nop
out
cmp
ret
pushf
inc
imul
and
in
xchg
mov
xor
cmp
mov
xor
jecxz
mov
scas
popf
stos
imul
fists
lock
sbb
dec
jmp
push
mov
mov
adc
mov
flds
cmpsl
xchg
inc
gs
and
cmp
push
mov
insl
iret
rol
in
and
and
jmp
sub
pushf
aad
lret
pop
ret
add
adc
mov
fldenv
mov
adc
insb
xlat
mov
and
stos
flds
jge
mov
in
pop
dec
adc
xor
xchg
rclb
push
adc
in
push
lock
cmp
ret
xchg
out
cmc
and
cmpsl
mov
cmp
mov
nop
or
sbb
add
into
cmp
pop
test
je
mov
out
adc
mov
jno
cmp
mov
pushf
or
xchg
mov
xchg
rcll
cmpsl
jmp
int
into
mov
push
cmp
lods
push
into
aaa
in
pop
sahf
adc
leave
fstps
adc
sub
fisttps
orb
adc
or
mov
push
and
dec
xor
sub
inc
and
jmp
test
add
loope
stos
mov
cmp
jp
or
sbb
add
xchg
lds
pop
repnz
dec
or
loopne
add
test
dec
mov
testb
jbe
xlat
push
mov
scas
outsb
and
insl
fldcw
fldl
test
scas
ja
cmc
incb
mov
and
inc
mov
push
lods
and
rcrl
xlat
sbb
lods
call
mov
push
mov
loope
sub
lret
aaa
mov
xlat
inc
cmpsl
inc
stc
sbb
mov
mov
rcl
xchg
mov
insb
sub
xor
jle
int
popl
das
leave
dec
sbb
loopne
inc
test
mov
push
mov
stos
adc
loope
cmc
in
insb
decb
mov
bound
cmc
shll
sub
cmpsl
sbb
scas
xor
in
adc
daa
pop
test
ss
push
mov
lds
adc
iret
in
rcr
out
decb
inc
ret
sub
scas
vmovddup
and
and
mov
pop
adc
mov
or
inc
out
scas
lret
push
xor
push
mov
int
jmp
in
mov
cs
repz
mov
xlat
mov
mov
mov
movsb
mov
mov
cwtl
into
push
icebp
adc
jp
jnp
xor
adc
or
jecxz
mov
fwait
and
ret
movsb
and
jnp
or
decl
ret
add
lods
mov
sahf
call
loop
sbb
out
lods
or
and
int
imul
pop
aaa
add
xor
scas
mov
rcl
in
jne
sub
lds
push
loopne
out
js
mov
cmc
daa
test
scas
cmp
xlat
dec
dec
dec
xchg
int
fmuls
mov
addl
out
cld
int
lret
inc
jmp
cmpb
ret
cwtl
mov
das
fcomps
push
out
notb
repz
movsb
lcall
test
push
icebp
stos
in
xchg
add
cmpsl
rcrl
mov
or
sarl
sbb
enter
cmc
jnp
xor
push
gs
stos
cltd
insl
xchg
into
cmp
ljmp
mov
mov
add
jo
pop
shl
mov
ds
ret
push
shl
and
lahf
clc
xorl
xor
xchg
add
jno
hlt
lods
cmp
and
test
mov
daa
jl
ljmp
dec
mov
pop
and
or
push
out
js
cmc
adc
sub
repz
mov
fiaddl
mov
andb
cmp
movsl
and
ds
dec
std
sahf
sub
mov
add
sbb
add
pop
push
mov
shlb
inc
jne
scas
int
adc
add
pop
inc
mov
adc
and
push
cmc
sbb
inc
fistpl
psraw
divl
in
lds
dec
rcrl
adc
fstpl
pushl
xor
mov
cli
outsb
dec
insb
and
outsl
cmpb
ja
out
push
sbb
push
shll
push
mov
pushf
gs
push
mov
xchg
mov
lret
dec
cmpsl
jmp
call
adc
or
pop
jbe
sub
scas
sub
mov
xorb
out
ret
or
testl
idivl
mov
and
push
aas
mov
pop
cmp
enter
std
push
out
sbb
jl
lods
lret
aad
and
cwtl
aam
sarb
enter
fs
cli
sbb
and
adc
icebp
loop
push
loop
cwtl
sub
jae
aad
xor
imul
hlt
push
rorl
int3
rorl
push
inc
loopne
jb
sub
rorl
and
add
scas
dec
sub
fbstp
mull
repz
and
lret
and
xchg
xchg
cs
mov
sub
mov
xor
out
pop
popl
lds
daa
popf
pushf
in
mov
into
cmc
loop
add
mov
fnstsw
scas
ret
add
lcall
movsl
and
lods
in
std
int
pusha
popf
or
cmp
aaa
ret
aad
sub
mov
mov
repnz
sbb
and
ds
popa
sub
jle
mov
loopne
clc
push
sub
dec
jl
lods
movsl
adc
push
mov
add
mov
leave
testl
out
dec
pushf
inc
pop
repz
add
or
in
fsubs
sub
mov
mov
lret
push
sbb
mov
mov
mov
insl
lret
hlt
ret
scas
or
cmc
mov
lcall
mov
in
mov
mov
sbb
mov
aam
xchg
in
push
cmp
in
loopne
cmc
inc
fdivrs
rclb
fnstcw
xchg
ret
pop
sub
stc
and
iret
jae
in
aaa
std
xchg
cmp
int
inc
pop
int
mov
incb
aad
shrl
push
dec
les
shrl
leave
push
or
mov
into
xchg
xor
adc
sub
xchg
or
pop
rcr
adc
jmp
aad
rcrl
test
pop
dec
stos
out
in
stc
lahf
ljmp
in
sub
mov
jns
push
jge
xchg
adc
mov
fld
adc
sbb
inc
xchg
sub
cmc
jecxz
and
mov
add
jno
out
cmc
xchg
mov
mov
fisttps
lahf
push
add
jns
cmpsb
mov
xor
cld
mov
jecxz
mov
addr16
jmp
cwtl
leave
cs
dec
movl
test
aad
xchg
arpl
mov
push
mov
and
out
sbb
or
sahf
xchg
jno
in
push
jae
add
mov
and
sub
push
bound
shl
cltd
cli
pushw
nop
jp
dec
jne
in
or
pop
imul
sbb
add
mov
rcl
mov
idivb
bnd
frstor
repz
mov
jno
jno
jge
sti
fstps
test
and
xor
lods
mov
scas
in
nop
fstl
in
jb
push
cmp
cmc
adcb
xchg
mov
test
xchg
movsb
xor
and
icebp
push
fsubr
data16
mov
lock
cmc
mov
test
push
popf
xor
stos
cmpb
or
lahf
aad
mov
push
push
loope
enter
push
mov
lret
sbb
inc
dec
loopne
rcll
cmc
rcll
cmpsl
push
sub
sahf
cmpsb
fisttpll
jnp
add
sub
mov
fwait
dec
mov
movsl
and
insl
in
shl
bound
mov
gs
mov
scas
mov
cmp
inc
and
ss
xor
les
sbb
test
in
cmp
jl
push
jecxz
sub
roll
loope
mov
ret
popa
stos
pop
pop
xlat
imulb
sbb
ljmp
push
sahf
in
je
mov
lds
or
sub
push
jg
mov
xlat
je
fdivs
adc
lcall
and
pop
mov
pusha
mov
aas
sub
add
cmc
sub
jbe
es
stos
dec
idivl
push
cmpsl
pop
cmp
arpl
add
jnp
jmp
dec
popa
and
push
test
rorb
fstpl
in
mov
xlat
movsl
test
adc
and
jl
fsubl
sub
jne
cld
sbb
fnstsw
lds
pop
fcmovnu
push
xchg
in
cmp
xor
push
stos
inc
in
aad
lock
int3
divb
mov
jno
xchg
inc
cmp
shlb
scas
sbb
js
and
int3
dec
ljmp
mov
arpl
sbb
aad
mov
loop
add
lods
mov
lods
or
dec
cmc
jl
roll
add
sidtl
adc
fnstsw
cmpsl
push
xchg
cmp
lcall
rcll
xchg
sub
push
inc
mov
jb
out
cmpsl
out
cmp
mov
add
mov
mov
and
leave
in
cmp
jle
pop
scas
jmp
and
xchg
lock
out
in
xchg
sub
repz
xchg
mul
cmc
and
pop
dec
xchg
mov
push
cmc
sub
sti
mov
push
push
leave
hlt
add
push
outsl
xor
push
clc
fists
ss
cmpsb
lcall
cmpsl
in
data16
push
mov
in
and
mov
mov
sub
jle
sbb
or
cli
inc
imul
imulb
test
adc
leave
or
aaa
in
inc
xorb
rcrb
addr16
mov
aam
jbe
leave
mov
cmp
pop
adc
jge
popf
push
cmp
daa
adc
pop
push
mul
in
jecxz
xor
test
mov
lret
jecxz
and
lods
ret
test
adcl
adc
out
xchg
in
inc
mov
xor
xchg
scas
push
dec
push
fstpl
and
lret
add
sub
mov
sub
mov
insl
jmp
fabs
mov
popa
sub
cmc
inc
mov
cmpsb
nop
test
outsl
xchg
mov
or
dec
ret
sub
pop
jne
pop
out
jno
dec
cmp
inc
dec
cmpsl
push
xchg
adc
not
fidivrl
xlat
sbb
push
xor
in
xchg
push
pop
int
lock
sbb
cmc
inc
inc
push
shll
pop
jle
lods
and
dec
sbb
add
movsl
and
cwtl
aad
mov
into
ljmp
in
divb
mov
push
adc
inc
cmpsl
sub
fstpt
pop
sbb
mov
popf
jmp
xor
mov
xchg
push
pop
frstor
sub
lret
leave
mov
sbbb
adc
lret
inc
cmp
jmp
mov
data16
mov
cmp
cmpsb
std
push
xchg
push
lods
jmp
xchg
test
in
xchg
ret
lds
ja
les
push
out
aaa
xchg
or
insb
pushf
int
fs
push
pop
xchg
mov
lods
insl
and
and
lcall
sar
sbb
ljmp
movsb
ret
or
mov
add
out
pop
rclb
push
pop
push
fmuls
cmc
sub
push
xchg
sbb
pop
pushf
xchg
ja
out
repz
or
test
pushf
sub
or
jmp
mov
dec
xlat
out
mov
inc
pop
das
jle
mov
push
lret
mov
stc
pusha
cld
iret
lret
lds
and
cmc
inc
out
and
cs
lahf
push
es
sub
popf
pop
and
sbb
mov
cmpsl
or
cltd
add
dec
push
inc
mov
jecxz
movsl
push
movsb
scas
jno
fdivs
pushf
push
xor
loope
sbb
mov
out
and
sbb
sbb
and
jbe
mov
or
and
stos
mov
test
mov
jne
mov
xchg
mov
je
popa
mov
pop
ss
sbb
test
movsb
pop
jnp
and
push
aaa
js
push
testb
lds
jmp
or
or
cld
and
daa
jno
xor
test
repz
mov
pop
sbb
cmp
push
fsub
cltd
adc
pop
xor
xchg
movsl
xorb
dec
inc
add
out
push
mov
mov
inc
inc
test
jl
jmp
scas
int
jb
mov
xchg
loope
xor
rorb
cmpsl
mov
cmp
loopne
and
push
scas
shll
out
mov
shlb
or
iret
sub
xchg
mov
shrl
cwtl
push
dec
repz
lods
std
add
xor
insb
loope
xor
icebp
inc
push
pop
and
fstl
mov
shll
int
loopew
pop
popf
iret
test
or
repz
test
add
and
clc
inc
jg
into
and
push
inc
pop
add
int3
cmpsl
stc
sahf
popa
jl
mov
mov
push
or
fwait
mov
out
fnstsw
add
pop
adc
mov
sbb
add
out
lea
add
out
ss
sarl
daa
mov
stos
add
cmpsl
push
cli
lods
popa
pop
push
cmpsb
xchg
scas
xchg
imull
xor
dec
jbe
mov
movzwl
out
mov
ds
lods
mov
cmc
cltd
movsl
sub
stc
dec
daa
aam
pop
push
mov
jp
lds
aaa
adc
jl
xor
jns
sbb
addb
mov
popf
mov
shl
fisttpll
pop
jg
out
jo
mov
mov
push
and
scas
jmp
pop
outsl
int3
jle
aam
add
lret
push
xchg
push
push
push
fwait
jge
dec
push
and
ljmp
push
das
cmc
push
test
int
mov
mov
stos
int
test
ret
ja
icebp
pop
daa
mov
in
loope
xchg
popf
lods
shrl
scas
data16
daa
mov
outsb
xchg
xor
push
jmp
jmp
rcl
jmp
stc
sub
daa
mov
and
cmp
lods
ret
pop
dec
mov
addr16
mov
mov
test
popf
and
or
daa
jecxz
sub
mov
xchg
jbe
mov
fs
dec
push
loope
mov
sahf
aam
inc
mov
addl
fldcw
and
xchg
call
les
and
push
imul
cmpsb
dec
loopw
dec
jmp
xor
les
xor
push
xchg
cmpsl
pop
popf
or
mov
mov
lods
pop
mov
insb
and
mov
lds
push
out
jecxz
roll
in
jne
fst
pop
inc
xor
and
cmp
mov
jbe
test
lods
cmpsb
lret
push
mov
and
lds
pop
xorl
pop
xor
jns
cmp
mov
inc
xchg
imul
xchg
std
test
adc
testl
cmc
cmpsb
lds
pop
insb
ja
fisubrs
inc
adc
in
mov
lret
mov
pop
js
mov
or
insb
imul
pop
aad
loop
mov
sub
push
shll
mov
dec
stos
cwtl
scas
shlb
iret
jl
cmpsl
and
ss
sub
and
loope
push
lods
aam
add
xchg
cltd
jp
out
stc
inc
into
popf
lahf
pop
pop
and
xchg
jno
lcall
sarl
mov
pop
aam
scas
mov
and
aad
mov
fmul
cmpsl
cmc
mov
and
cld
mov
cmc
pop
pop
cmpsb
push
lods
sub
int3
and
and
push
xchg
mov
mov
stos
dec
popa
fs
fxch
sub
pushf
pop
jge
hlt
jnp
shll
push
lds
jecxz
pop
les
mov
sbb
fisubs
outsl
mov
mov
popf
and
mov
cmp
adc
and
adc
fbld
and
xchg
lret
sbb
mov
imul
daa
jl
mov
mov
aaa
out
or
xor
adc
int
push
in
xchg
xchg
in
lcall
xor
push
xor
loope
dec
mov
cmp
and
lds
icebp
pusha
imul
jle
push
jl
mov
aas
add
push
add
and
scas
inc
nop
leave
lcall
xlat
lds
cmpsb
sub
mov
xlat
push
add
sub
jle
lds
int3
pop
movsb
mov
cmp
add
stos
shl
sub
inc
mov
or
mov
adc
daa
fprem1
lods
pop
pushf
sub
scas
out
ret
out
jmp
or
dec
sti
xchg
sub
in
sub
dec
jne
in
push
mov
dec
dec
popa
mov
mov
add
stc
loop
sub
mov
out
cld
das
mov
lds
hlt
iret
inc
push
jmp
mov
sbb
dec
mov
popf
jecxz
push
jb
mov
xchg
fdivs
clc
add
fldl
sub
popf
jns
xor
stos
sbb
lods
jge
sub
pushf
sbb
sbb
push
js
bound
stos
or
jae
cmp
mov
mov
test
dec
pop
and
aad
stos
and
repz
daa
mov
jb
cmc
cli
shll
repnz
push
test
or
inc
mov
mov
xor
cmp
pop
loopne
mov
in
lds
rcll
sub
sarl
sbb
mov
das
mov
mov
incl
xchg
sbb
lods
gs
stos
cltd
out
xchg
sub
mov
jbe
cld
and
rcll
mov
lds
sbb
sbb
cmpsl
jns
out
lds
fsubl
xchg
gs
jecxz
push
pop
sub
ja
add
mov
pop
add
inc
mov
jno
lret
mov
test
add
das
mov
sbb
cmpsb
xor
jbe
lea
dec
push
mov
adc
mov
pop
add
push
aaa
fistpl
sbb
aad
mov
push
imull
jle
lods
jge
fimull
test
xchg
sub
xchg
mov
arpl
dec
mov
fldl
cmpl
xor
pop
mov
mov
mov
xchg
outsb
mov
pusha
scas
lcall
xor
cwtl
das
cmc
sbb
sub
adc
dec
int
mov
out
sbb
push
neg
sbb
repz
mov
repnz
sbb
xor
ss
test
movl
xor
or
mov
cmp
push
push
adc
xchg
and
and
cmp
sub
iret
mov
sbb
push
mov
mov
mov
xor
lods
fucom
and
mov
adc
inc
mov
and
lret
fldenv
dec
xor
ret
adcb
loopne
ja
shl
adcb
push
lds
adc
pop
adc
repz
test
dec
and
push
sub
sahf
insb
dec
adc
fcmovb
sbb
fcomp
stc
sbb
inc
sub
loope
idiv
sub
fidivl
fdivr
mov
sti
fisttpl
push
out
lds
cwtl
jle
scas
out
lds
jle
sub
movsl
and
xchg
adc
dec
mov
test
mov
add
bound
ret
in
in
push
out
mov
clc
idiv
xor
cmp
lods
imul
arpl
inc
roll
xor
in
fnsave
roll
fcmovnu
and
pop
ja
stc
and
lds
jns
mov
xchg
jecxz
add
or
xor
xchg
mov
por
iret
stos
stos
cmp
push
rorb
jbe
sarb
mov
pop
dec
mov
in
pop
arpl
sbb
add
fisubrl
cs
jle
shll
movsl
xchg
mov
cwtl
push
push
jae
push
xchg
jne
jmp
scas
sbb
gs
inc
int3
xchg
sub
stc
adc
mov
and
or
xchg
clc
push
cmp
loope
and
sub
movsl
sub
push
push
cmpsl
test
addr16
adc
mov
loop
or
inc
bound
repz
inc
test
mov
mov
or
adc
sub
iret
jmp
or
pop
adc
mov
mov
and
dec
fisttps
push
adc
rcrb
xlat
pop
push
sbb
add
adc
nop
dec
ljmp
jmp
add
popf
int
bound
rcrl
lcall
sub
outsb
imul
loope
shll
arpl
and
je
mov
and
pop
sub
movsl
sub
enter
imul
mov
lods
into
test
sti
mov
repz
repz
mov
inc
mov
mov
hlt
cwtl
pop
fldt
leave
lods
lds
icebp
ja
jl
mov
lds
xor
test
add
pop
and
divl
pop
xor
call
adc
fidivrs
test
jns
xchg
movsl
in
mov
les
jmp
sbb
cmpsb
jg
pop
dec
je
push
and
xor
push
inc
adc
dec
mov
in
in
mov
les
fisttpll
jmp
lods
mov
mov
xchg
movsb
mov
scas
movsl
cwtl
xor
jmp
and
push
push
mov
cmc
stos
sub
pop
not
jno
and
jge
mov
sub
xchg
xchg
inc
je
frstor
push
xchg
xor
push
xchg
dec
fs
or
push
xchg
mov
mov
inc
popf
ljmp
iret
fldt
mov
mov
add
cmp
cltd
pop
xor
or
xchg
mov
adc
sub
jo
mov
rcr
pop
test
cmpsl
cs
push
stc
or
fucom
aad
clc
addr16
jge
mov
pop
rclb
push
mov
loopne
fs
jecxz
lods
jmp
inc
and
and
sbb
dec
fnstcw
rclb
or
and
dec
sub
cmc
and
aas
popa
push
ss
push
mov
shll
out
int
xor
leave
sbb
jbe
sub
ret
in
sbb
rcrl
mov
stos
ss
aaa
imul
mov
int3
shl
dec
sbb
jno
cmpsb
aaa
mov
push
loope
mov
popf
das
test
and
lds
scas
push
int
ljmp
mov
jo
addr16
in
push
mov
sbb
lds
je
mov
mov
mov
add
mov
jb
xchg
out
daa
js
push
and
in
stos
in
loop
sbb
mov
cli
push
mov
popa
mov
mov
and
or
repz
push
and
out
push
fstpl
cmp
popf
add
outsl
cmp
mov
mov
stos
add
bound
cmpb
mov
or
xchg
adc
xchg
xchg
inc
mov
shrl
xor
out
xchg
jnp
mov
jge
xchg
loop
lret
pop
jg
mov
xchg
jno
push
sub
mov
dec
push
fbstp
outsl
or
icebp
add
push
mov
mov
cmp
in
fsubrs
and
mov
out
sbb
mov
pop
dec
cmp
into
mov
scas
push
shl
movsb
adc
xchg
int
and
outsl
xchg
jecxz
data16
adc
in
xor
sub
outsl
sahf
jge
xchg
xor
fwait
mov
xchg
loopne
clc
push
mov
scas
bound
xor
testb
je
shll
out
jae
shlb
mov
cmp
pop
cmp
and
pop
cmpsl
mov
jp
sbb
out
pusha
testl
mov
sti
sub
pop
aad
out
mov
ret
xor
insl
stc
push
jno
test
rcrl
mov
push
sub
cmpsb
iret
push
mov
ss
imul
ss
and
test
fnstsw
mov
adc
test
mov
shll
popa
ljmp
repz
ficoml
mov
cmp
stos
xchg
jne
or
inc
inc
inc
pop
jb
out
cltd
and
mov
icebp
xchg
mov
decl
xchg
loop
mov
cmp
popf
push
in
adc
ja
mov
mov
jmp
mov
mov
sbb
loop
push
sbb
sub
push
cmp
outsl
sub
adc
sub
pushf
mov
sbb
scas
and
fistps
aad
sbb
mov
mov
lret
add
cs
fdivrs
rclb
push
icebp
shll
jne
repz
ss
sahf
orl
and
lcall
sub
subb
and
dec
lret
ret
cltd
ret
xlat
inc
sbb
fsub
repnz
xor
outsl
inc
xor
and
or
fisttps
test
pop
lods
cmc
cli
sub
adc
mov
and
cmp
rorl
rorl
sub
dec
push
add
or
xor
jae
data16
stos
ja
mov
sti
leave
popa
das
aaa
shl
cmp
pop
mov
call
lods
cld
xlat
inc
push
cmp
lret
loopne
shlb
faddl
add
mov
dec
inc
mov
in
push
sub
movl
in
test
insl
jo
ja
add
mov
pop
adc
imul
and
aad
push
notl
aam
jnp
in
ljmp
test
mov
pop
int
mov
div
loopne
inc
xor
mov
in
out
sub
mov
mov
and
fsubrs
cld
and
ret
popf
test
rorl
js
mov
mov
leave
dec
aad
jb
test
mov
rorl
movsl
cs
nop
sbb
adc
and
jle
nop
sbb
push
mov
mov
xor
cmp
push
and
pushf
daa
sbb
cmp
mov
aaa
cmpsb
stc
fldenv
jne
out
pushf
mov
or
movsb
mov
sub
fucomp
xchg
sub
xchg
lods
loopne
add
shll
push
test
dec
jae
sti
and
insl
mov
push
mov
sbb
mov
enter
inc
jmp
lret
adc
mov
xchg
lods
xor
rorl
jmp
sub
out
daa
jmp
mov
mov
out
jmp
add
pop
lcall
and
cmp
jns
movsl
mov
push
scas
xchg
fpatan
jno
jge
dec
mov
dec
push
and
outsb
mulb
mov
mov
hlt
out
push
and
ret
popf
divb
movsb
in
and
in
sahf
ret
div
inc
push
jmp
xchg
sets
into
mov
gs
jecxz
mov
test
stc
jl
cmc
lcall
inc
adc
ljmp
xor
icebp
cmc
addr16
push
push
xorl
shll
iret
int
cmp
hlt
cli
les
mov
in
mov
and
xor
jnp
push
outsl
jo
in
push
sti
scas
mov
stos
mov
sbb
je
xchg
sti
shll
aaa
out
xchg
lods
push
push
les
or
movsb
push
jmp
dec
testl
sub
fisubl
push
cmpsb
sbb
test
int
add
or
jl
ret
ret
and
cmp
or
push
fldt
xchg
sbb
clc
mov
js
mov
pushl
rorb
popa
mov
cmp
int
push
xor
pushf
add
and
in
jl
lea
adcb
fnstenv
ja
cld
jbe
scas
ret
xchg
cwtl
push
enter
mov
lret
push
jge
sub
adc
sub
mov
and
push
aad
shrl
icebp
cltd
loope
leave
mov
add
and
into
mov
rcl
sub
add
cmc
movsb
in
out
sub
mov
mov
cltd
icebp
stos
stos
jg
mov
ret
xchg
dec
shr
cmpsl
shll
mov
push
mov
mov
pop
sbb
mov
mov
cwtl
into
aas
int
xorl
push
cmp
sbb
xor
aam
imul
pop
subb
shll
loope
and
push
pop
and
loope
ss
mov
jmp
lahf
inc
mov
subb
cmpsb
push
inc
push
jmp
imul
adc
jb
aad
lahf
and
sbb
push
daa
add
and
lcall
rclb
sub
loop
jmp
out
sahf
push
mov
ja
lea
mov
dec
dec
mov
jecxz
push
test
test
sub
push
inc
push
cmc
dec
push
sbb
insl
mov
cli
stos
push
test
sub
lods
mov
adcl
iret
in
and
push
mov
mov
cmp
adcb
mov
jbe
sbb
jmp
adc
loop
mov
pop
es
fldcw
xchg
dec
push
in
mov
sbb
push
stc
movsb
scas
insb
out
cmpsl
test
lods
inc
push
hlt
subl
outsl
cmpsb
in
ljmp
inc
fimull
jp
mov
test
fldenv
and
inc
pop
pushf
inc
incl
cmp
mov
and
jmp
push
lods
dec
sbb
jmp
js
mov
jl
mov
mov
jo
sub
icebp
iret
mov
push
int3
test
hlt
dec
jge
inc
cmp
add
cs
roll
xchg
or
xlat
jmp
and
outsb
dec
sbbl
mov
fisubs
nop
mov
repnz
mov
imul
mov
and
repnz
inc
jmp
push
sbb
lret
fstpt
aad
mov
repz
sbb
lods
push
decl
adc
daa
add
jl
daa
mov
icebp
pop
xor
ficompl
arpl
pushf
jne
ret
and
out
imul
and
out
xchg
inc
iret
mov
clc
mov
xor
mov
sub
and
mov
sbb
sbb
and
push
sahf
mov
in
dec
mov
mov
popf
or
ret
pop
out
push
jp
and
xchg
jbe
mov
jl
sti
cli
cltd
cmpsl
jp
push
mov
test
jmp
mov
sub
or
hlt
rep
add
iret
push
jl
xor
mov
roll
cmp
mov
push
jnp
mov
mov
cs
xchg
js
movsb
push
cmpsl
and
repz
cmp
mov
mov
adcl
scas
cli
fwait
lods
xlat
bound
jnp
xchg
and
iret
push
mov
jle
push
ljmp
cli
add
movsb
xchg
mov
xchg
pop
jnp
out
ss
pop
subl
fucomp
sub
popf
mov
add
adc
or
add
cmp
xor
xor
stc
mov
mov
outsl
in
iret
xor
mul
lods
stc
test
fists
fxch
dec
mov
and
mov
push
loope
test
jnp
mov
aas
dec
in
mov
out
scas
xchg
in
cmpb
ljmp
jmp
rolb
and
fld
sti
cmp
nop
je
rorl
and
addr16
lret
xchg
mov
inc
or
ret
fistpl
pop
dec
pop
pop
je
fldt
data16
pop
push
and
jle
lahf
push
pop
out
shll
push
mov
repz
mov
leave
push
cmpsl
shll
std
cltd
and
mov
popa
ds
fnstcw
sbb
ret
mov
repz
push
icebp
or
leave
sbb
addr16
push
mov
push
fidivrl
ja
mov
mov
and
cmc
sub
mov
sub
sub
insl
in
sub
push
lods
mov
lods
push
repz
sbb
dec
pushf
xor
lods
xor
fistl
aaa
inc
push
sbb
xchg
push
mov
loopne
jne
fucompp
cmc
mov
insl
cld
or
mov
and
push
std
mov
mov
scas
and
stos
fstps
pusha
dec
mov
sbb
lcall
and
jb
and
and
xor
inc
push
icebp
xchg
lds
and
and
rorb
fld
stos
xchg
sub
fmuls
adc
cltd
int
mov
xor
push
sbb
xchg
lret
int3
push
out
cmc
in
jo
lods
mov
mov
sub
cmc
cmp
loopne
xchg
push
lods
mov
cmc
or
sbb
mov
mov
fcompl
ret
popf
scas
mov
mov
shr
in
mov
fcmovb
cmc
test
xchg
int
push
lds
lahf
test
in
mov
fildl
mov
cwtl
dec
xchg
cld
into
push
int
addr16
mov
and
pop
cmc
mov
insb
push
lret
fstpl
test
scas
mov
pop
test
pop
mov
and
test
je
jl
inc
push
add
mov
in
xchg
mov
hlt
inc
cmpsl
rol
sub
test
adc
stos
repz
int3
enter
jp
xchg
jnp
and
cmpsb
pushf
pushf
lock
aam
xor
xchg
mov
and
sub
stos
loop
push
jp
add
int
pop
xchg
lcall
pushf
cmp
mov
aaa
popf
leave
shll
sbb
xchg
xor
gs
in
movsl
sbb
push
in
add
mov
das
xor
dec
adc
mov
in
jl
xchg
out
push
jne
bound
je
push
mov
mov
mov
mov
sbb
mov
int3
rcrl
and
sbbl
mov
sbb
xor
add
std
ror
fcoml
ret
mov
test
popf
push
cmp
aaa
loope
mov
scas
xor
pop
lret
sar
fidivrl
movsb
test
movsb
fildl
insb
xchg
adc
xor
mov
and
jnp
repz
test
add
lcall
dec
mov
jnp
lds
leave
mov
ja
push
inc
mov
push
enter
xchg
repz
imul
sub
lds
cmc
cmpsl
and
xchg
lcall
adc
push
leave
lods
mov
dec
pop
jecxz
inc
in
lods
ror
mov
lds
pushf
dec
fbld
stos
orl
fwait
repnz
jb
or
ret
inc
mov
movsb
hlt
shlb
pusha
stos
in
insb
bound
adc
mov
in
and
push
xchg
pop
jne
in
push
nop
mov
xor
repnz
loope
push
ret
data16
mov
mul
push
gs
and
in
xchg
popf
shll
stos
outsb
add
push
xor
je
cmc
fyl2x
jle
mov
lds
dec
jno
mov
add
das
and
jecxz
sahf
and
nop
test
dec
imul
mov
int
and
mov
jns
pushw
jmp
xor
out
pop
and
lds
inc
push
roll
and
xchg
sub
push
push
xlat
sub
push
jnp
icebp
mov
int3
mov
fcoms
inc
jecxz
lcall
cmc
push
inc
pop
andb
std
xchg
jns
movsl
stos
jmp
aaa
jnp
aas
mov
mov
push
dec
cs
lods
mov
sbb
mov
and
pop
dec
clc
inc
mov
cmc
daa
in
out
mov
push
push
cmp
mov
imul
in
orb
xor
mov
pop
orb
sbb
jecxz
and
mov
adc
gs
mov
mov
mov
cmc
adc
inc
out
sbb
stos
movsb
xchg
xlat
test
ss
cs
jge
push
enter
test
popf
xlat
mov
aaa
add
and
lret
cmp
mov
and
push
pop
jbe
push
fnstenv
push
loop
daa
flds
lods
addr16
sahf
push
mov
popf
mov
mov
sub
lods
popl
inc
mov
lock
mov
insl
cwtl
sbb
push
lcall
nopl
push
fldcw
enter
mov
stos
mov
sbb
and
sbb
lahf
mov
mov
pushf
inc
cmovs
mov
and
and
cmc
adc
stc
int3
leave
sbb
iret
or
jle
lcall
inc
fimull
test
scas
xchg
out
cmp
add
mov
out
xor
movsl
test
lcall
das
push
imul
sub
sbb
mov
cs
sti
stos
sub
mov
mov
cmp
cmpsb
push
insb
sbb
sbb
sbb
cmp
repz
lods
mov
or
xor
stos
cmp
xor
and
mov
mov
loope
insb
pushf
mov
adc
cmp
mov
mov
sub
jmp
mov
ror
push
and
cwtl
roll
mov
out
scas
cmp
fdivrs
stc
mov
add
cmpsl
test
cmpsb
sbb
add
fiaddl
mov
push
sbb
popa
int
insb
scas
or
jle
aad
cltd
loopne
inc
jno
inc
test
cmpsb
adc
inc
std
xor
notb
pushl
leave
nop
std
add
dec
dec
bound
iret
daa
in
lea
push
test
popw
jle
rcl
mov
mov
xor
hlt
dec
pop
mov
push
mov
rorb
lret
bound
mov
sub
add
push
shll
xor
mov
call
adc
popf
lods
mov
mov
lcall
cmc
shl
or
popa
dec
sbb
int3
popf
icebp
sub
sti
push
cmc
aad
dec
in
js
jnp
cmc
jb
xchg
fcmovne
in
std
hlt
testl
fstl
andb
gs
push
jecxz
int3
loop
out
subb
mov
xchg
cltd
out
in
test
sahf
xor
adcl
xchg
das
and
jbe
out
ja
repnz
sti
dec
dec
mov
and
ficompl
xchg
movsb
cwtl
cmpsl
push
in
fbld
ss
adc
popf
rcll
mul
xor
mov
ret
rclb
and
jns
pop
mov
mov
mov
popf
and
popa
ret
aad
stc
dec
aam
stc
addl
and
fcompl
fisttpll
adc
sbb
jnp
scas
and
and
lods
loope
xor
sub
mov
aas
jb
shl
mov
mov
push
pop
push
sub
mov
lods
pusha
lods
pushf
mov
fstpl
cs
push
adc
aas
mov
adc
sti
mov
sahf
into
out
iret
popa
scas
dec
pop
test
add
mov
in
xchg
pusha
mov
ffreep
sub
inc
daa
rcrb
sub
int
and
out
sub
roll
xchg
cmp
flds
imul
add
shr
push
sti
inc
shll
add
addr16
lret
mov
or
cmpsl
and
mov
or
push
enter
pop
scas
mov
add
xchg
sbb
orb
sub
xchg
push
xchg
icebp
push
ret
scas
xor
fstpt
push
sub
jmp
lret
lods
cltd
pushf
rorb
and
xchg
arpl
stos
shll
mov
repz
sbb
push
fistl
test
add
adc
sub
pushf
ds
int
in
lcall
sbb
adcl
mov
cmp
and
sub
pop
lods
mov
pop
or
pop
ror
xor
pop
les
cmc
inc
repz
mov
cld
inc
push
in
adc
int
pop
test
xor
mov
enter
xor
into
xchg
jmp
mov
fdiv
mov
mov
mov
jmp
gs
aad
sti
orl
popf
mov
xor
mov
ret
inc
inc
fabs
xor
imul
movsl
mov
shll
shll
xchg
and
xchg
and
stos
xor
fsubr
iret
cmp
jp
pop
or
dec
scas
push
lds
or
mov
push
aad
popa
jae
stos
and
and
xlat
and
leave
lods
mov
adc
cmpsl
xchg
mov
aaa
push
add
pushf
call
pop
xchg
mov
add
test
mov
notl
jl
fs
xor
pop
and
loopne
cltd
jo
dec
imul
and
daa
xchg
scas
xor
mov
lret
and
mov
dec
mov
push
es
xchg
lds
and
insb
int3
mov
mov
std
push
outsb
movsl
push
mov
mov
int
lds
sbb
fcomip
xor
std
fnstsw
fxch
sub
ret
fisttps
pusha
jge
addr16
and
stos
arpl
sbb
in
fcom
insl
push
pop
imul
push
inc
mov
pushf
or
sub
stos
mov
jmp
adc
out
lahf
std
push
in
and
cs
test
loope
je
mov
cmc
arpl
gs
mov
pop
test
lcall
addr16
jno
push
jl
mov
lahf
psrlq
sbb
xchg
test
mov
push
xor
mov
and
lret
or
xchg
imul
in
mov
pushf
in
mov
mov
mov
out
mov
pushf
sbb
xor
pop
push
push
aad
into
pushf
nop
sub
popa
and
out
or
popl
xchg
scas
out
jno
js
lods
bound
ljmp
xchg
pushl
imul
test
mov
movsb
jnp
mov
jmp
cmc
test
jmp
push
mov
insb
push
in
rorl
in
or
adc
je
sub
bound
sub
pop
sbb
add
mov
pop
xchg
mov
push
sahf
xor
addl
cs
jp
adc
stos
rclb
push
mov
fsubrs
sub
xor
sub
inc
xchg
cmp
lods
jo
push
test
jnp
mov
and
or
mov
push
imul
sbb
mov
test
adc
jae
push
mov
mov
std
and
repnz
and
inc
xchg
push
and
dec
arpl
adc
mov
inc
and
or
cli
sbb
aam
icebp
jecxz
jmp
stos
push
cmpsb
scas
loope
cmp
outsl
lret
dec
jno
cmpsb
jne
adc
sar
pop
mov
xchg
stc
jg
cmc
add
dec
lods
inc
pop
push
mov
inc
aaa
cmpsl
or
outsb
lret
fldl
mov
out
cld
mov
jbe
mov
add
popf
ljmp
adc
sub
mov
mov
mov
dec
sbb
push
add
cmp
incl
in
popa
sbb
sub
sub
stos
add
and
sbb
xchg
mov
mov
or
push
or
pop
pop
les
sbb
ret
xchg
sbb
hlt
pop
inc
push
loope
cmpsb
stc
or
cmpsb
adc
and
imul
pop
cwtl
mov
inc
lret
or
mov
push
xlat
lds
pop
pop
dec
fadd
cmp
cmc
mov
xchg
lcall
insb
xchg
jmp
sbb
lds
inc
pop
xchg
jp
or
scas
xchg
stos
mov
mov
lock
out
test
add
or
je
adc
scas
cmp
dec
cmc
and
lds
aaa
dec
push
leave
inc
cmp
in
add
mov
mov
jbe
sub
add
loop
popf
jo
and
mov
xor
lds
test
or
movsb
add
test
std
mov
leave
popa
cmpsb
and
lds
and
jecxz
stos
insl
pop
je
jno
or
inc
mov
push
and
repnz
das
popa
aaa
cmc
push
jge
fcmovne
cwtl
sub
fsubrs
mov
adcb
add
push
fsts
mov
or
mov
sti
cmpsl
sahf
jg
dec
cld
and
int
inc
loope
lret
mov
push
ljmp
cmp
cmpsl
popa
sub
sti
mov
xor
xchg
int
stos
lods
ret
or
inc
jmp
pusha
xor
jp
incl
test
outsl
push
stos
add
inc
pop
mov
xchg
loope
in
pop
cmp
pop
pop
mov
mov
mov
idiv
xchg
stos
mov
push
int3
mov
sbb
fwait
mov
mov
xlat
mov
jle
test
cs
cmp
mov
in
fldt
je
mov
add
xlat
cltd
xlat
jle
stos
cwtl
xchg
mov
out
xlat
sbb
sub
xchg
dec
mov
and
mov
leave
mov
xor
push
sub
aas
or
xchg
inc
push
mov
fildl
repnz
mov
add
cmpsb
shl
imul
sbb
fucom
mov
leave
bound
xor
dec
xchg
cmp
fidivrl
push
adc
cmpsb
cwtl
insl
scas
mov
in
les
jecxz
add
sub
jl
test
stc
push
push
leave
cs
call
shrl
pop
jp
test
mov
xlat
cwtl
adc
aam
fnstsw
jmp
lret
mov
add
movsb
loopne
lds
pop
sub
jecxz
dec
sbb
jno
mov
xor
mov
fldl
inc
mov
or
mov
in
and
jne
movsl
lods
roll
cmp
pusha
lods
mov
dec
jp
or
push
add
fbld
push
sbb
cli
push
push
adc
cs
mov
test
mov
adc
jge
push
and
pop
les
pop
mov
mov
mov
sarb
xor
cmp
cmc
xchg
xor
shrl
mov
inc
mov
mov
xor
sub
xchg
sbb
addr16
sub
and
cmpsb
xchg
loope
stc
adc
shrb
stos
and
pop
fmuls
stos
stos
xchg
inc
xor
inc
mov
lds
lds
int
add
je
shrl
mov
push
gs
add
paddusw
shl
inc
sub
cld
mov
pop
bound
cmp
repnz
xor
repz
loope
roll
fcoml
xchg
arpl
fcomi
lods
pushf
add
mov
jmp
cmc
sub
adcl
jno
cmc
andl
mov
push
or
daa
mov
push
cs
imul
push
stos
and
movsb
dec
in
icebp
out
adc
loop
inc
outsl
push
cli
ret
pop
in
sbb
andl
mov
out
xchg
xchg
sbb
dec
adc
test
nop
dec
dec
jle
scas
push
add
dec
in
rcl
sbb
out
xlat
and
lds
xlat
xor
adc
inc
imul
pop
imul
out
push
push
xchg
jecxz
scas
mov
pop
add
xchg
sbb
sbb
pop
test
sbb
mov
inc
mov
pop
lods
fildll
stc
scas
cmc
add
mov
xlat
sbb
test
scas
sti
std
jae
inc
aad
aas
and
sbb
imul
fadd
das
dec
and
clc
ja
pop
repnz
mov
xor
mov
add
and
pop
std
incw
jns
mov
sbb
pushw
nop
in
mov
mov
cmc
aaa
icebp
xchg
add
ret
mov
lcall
cmpsl
lods
dec
add
cwtl
ja
and
sti
lds
xor
iret
xlat
in
pushf
out
mov
fdivrl
add
xchg
popf
fidivl
rorl
add
xchg
daa
sub
mov
popf
cmp
push
test
inc
out
push
jno
push
lcall
ret
stos
add
mov
std
loope
popf
lcall
mov
xchg
push
mov
repz
out
jbe
cmpsb
mov
and
pop
shlb
and
jne
jecxz
mov
sti
and
repnz
cmpsl
or
mov
lock
sub
int
jnp
xchg
mov
fildl
push
jg
sbb
sub
adc
scas
mov
mov
call
add
or
fisttpl
aad
sti
sarl
push
adc
hlt
push
pop
pop
inc
jno
push
sub
fwait
sbbb
in
mov
add
and
jge
repnz
mov
ljmp
jbe
or
rcrl
push
lods
sub
pop
sbb
lds
jb
fnstsw
sbbl
cmp
leave
fisttpll
clc
les
leave
mov
ljmp
mov
push
and
add
clc
xchg
jb
push
and
int
jae
mov
or
out
and
pop
sub
or
fidivrl
push
lcall
scas
in
popf
test
mov
and
mov
gs
ss
gs
sbb
push
dec
or
lods
addr16
daa
mov
int
loope
in
pop
and
sahf
rcrl
add
mov
sar
xor
test
xchg
movsw
xor
mov
fstps
mov
in
mov
xor
push
dec
push
mov
pop
xadd
fwait
pushf
int3
cld
shll
fistl
mov
lcall
in
sahf
adc
mov
sub
pop
inc
int
pop
push
pop
inc
pop
add
push
cld
jnp
ret
sub
adc
pop
xchg
orl
pop
cmpsb
adc
mov
aad
lods
iret
jb
xchg
shll
xor
and
pop
mov
xlat
cmp
rcll
jo
mov
mov
js
cwtl
cld
dec
sar
mov
xor
and
push
loopne
arpl
fwait
sub
scas
mov
pop
cmc
scas
out
dec
push
xlat
sub
negl
incb
push
mov
and
pop
nop
je
xchg
mov
aaa
pop
scas
orl
push
cmp
and
popl
rcrl
pushf
pop
jbe
scas
vpminsw
sbb
jnp
pop
iret
sub
jecxz
mov
sub
xlat
mov
jle
cmpsb
push
test
xchg
cmpsl
aad
das
imul
lods
pop
sbb
popa
jg
dec
cld
push
mov
or
test
mov
sbbl
fiaddl
or
lret
cld
push
xchg
sub
insb
div
ret
mov
sub
lods
sahf
jae
push
cwtl
test
stos
push
xchg
je
jecxz
mov
aas
mov
test
pop
mov
fdivs
lods
push
sub
push
and
jg
mov
mov
and
in
xor
jns
in
inc
mov
icebp
and
aam
lcall
mov
das
ds
sbb
sahf
mov
gs
jns
and
adc
push
scas
push
adc
push
popa
fs
fsubrs
push
test
adc
shll
push
mov
out
inc
fwait
arpl
mov
addr16
inc
add
mov
add
push
insb
cmc
cld
cmp
ret
sub
xor
xchg
sub
into
mov
aad
mov
fbld
and
xchg
xor
jnp
filds
or
mov
and
jo
out
arpl
cmp
repz
dec
fsubp
jo
mov
jae
or
hlt
dec
adc
mov
sbb
xor
fidivl
ret
rclb
scas
adc
leave
add
aas
jle
mov
sti
pop
dec
dec
mov
lods
mov
dec
cmpsl
aad
sub
push
or
jg
mov
jb
jmp
push
bound
outsb
lea
push
jecxz
and
and
xor
pop
cli
adc
cmpsb
sbb
jle
push
out
sub
aad
xchg
movsl
cltd
frstor
cs
mov
dec
stos
mov
das
mov
push
scas
lds
lds
cli
adc
lods
mov
sbb
cltd
dec
jp
mov
add
ja
das
cmp
add
adc
clc
pop
inc
in
subl
movsb
push
add
cmc
mov
mov
lods
push
pop
jno
xchg
and
mov
adc
xor
push
xor
pop
push
stos
push
sahf
mov
cli
or
add
dec
add
mov
pushf
xchg
das
mov
aaa
push
lds
mov
mov
repnz
stos
fadds
or
mov
xor
jnp
add
test
pop
std
jle
mulb
jp
stc
xchg
fwait
in
fstps
daa
mov
or
dec
cmpsl
xlat
jge
push
out
rclb
movsl
pop
out
push
mov
jb
pop
pop
sub
jae
lret
push
cmc
sub
imul
mov
mov
cmp
sbb
sub
jo
push
adc
add
sub
cwtl
sbb
les
xor
lock
sbb
mov
jge
dec
lds
cmp
test
and
cmp
test
loopne
jne
dec
lods
xor
repnz
aad
cmp
outsl
push
cwtl
push
jno
fistpl
or
mov
mov
loopne
jne
pusha
dec
push
rcrb
inc
push
or
pop
and
flds
lods
push
enter
sub
xor
jo
ds
push
scas
cmp
sbb
push
sbb
scas
ss
mov
xor
in
push
push
pop
pop
adc
cmc
insl
movsl
js
mov
frstor
aaa
lcall
insb
data16
mov
lret
in
pop
fidivrl
sub
test
mov
aad
loopne
push
stos
pop
mov
scas
ljmp
sbb
lock
sbb
std
mov
shll
stos
mov
pop
pop
in
and
and
movsb
mov
mov
push
sbb
mov
and
lds
pop
sbb
lods
imulb
inc
cmc
inc
scas
sbb
mov
adc
jmp
loope
in
xchg
mov
mov
and
andb
out
xchg
mov
xchg
jnp
rep
and
sbb
sub
rorb
sti
sti
push
and
test
sub
sub
push
in
mov
inc
movsl
popa
cmp
push
loop
mov
adc
jmp
lcall
out
je
mov
cmp
enter
stos
jno
xchg
push
and
and
shrl
mov
xchg
mov
int
lcall
fsubrl
lds
aas
loopne
and
lods
clc
int
rcll
shrb
in
add
sbbl
imul
test
aam
xchg
jmp
loope
es
rclb
imul
aaa
cmpsb
pushf
xchg
sbb
inc
cmp
adc
xlat
test
leave
rolb
mov
sbb
inc
fnsave
pop
cvtpi2ps
sbb
mov
pop
shr
clc
fidivrs
cmp
sbb
stos
pop
and
je
fstpl
pop
xor
addr16
icebp
jmp
sub
out
test
add
std
mov
adc
mov
add
mov
cmp
add
add
icebp
jns
add
lret
and
sbb
cltd
or
mov
push
push
scas
mov
daa
mov
add
int
cmp
xchg
rcrb
ror
movsl
test
add
cmpsb
pop
repz
xlat
push
mov
cmc
and
cmp
pop
add
std
pusha
stos
bound
push
xor
inc
fdivs
pop
leave
stc
xchg
cmp
push
clc
outsb
addr16
lds
add
dec
cmp
mov
lock
bound
fdivrs
mov
cmc
and
shl
push
out
mov
popf
mov
cmc
sub
imul
imul
dec
notl
push
repz
filds
lods
and
mov
ror
int3
push
push
and
xchg
les
add
fstl
inc
mov
loope
scas
popf
ret
cmpsl
adc
pop
push
rdmsr
mov
movsl
lods
in
inc
mov
and
sub
mov
cmpl
sub
sbb
stos
iret
pop
popf
std
cmp
repz
push
add
adc
and
jns
leave
loope
jp
iret
cmpsl
sub
ret
xchg
popf
jae
mov
sbb
mov
scas
adc
fsubrs
lahf
sub
add
test
or
cmpsb
cmp
ljmp
inc
mov
mov
out
fs
push
or
loopne
out
xor
loopne
push
xlat
lods
dec
xor
cwtl
or
and
lds
icebp
push
movsb
add
je
test
cmp
or
fildll
imul
add
mov
xchg
ja
stc
pop
jnp
leave
sub
jno
lock
stos
lcall
in
lret
fstpl
out
imul
jl
cmc
mov
decl
mov
test
push
sub
inc
daa
fstp
scas
stos
cwtl
js
sub
stos
inc
loope
dec
stos
in
ds
lds
outsl
xchg
bound
and
xchg
stos
cmc
sahf
lea
fimuls
mov
out
add
sub
mov
mov
push
out
test
adc
adcl
mov
fnstsw
mov
ficomps
fs
test
push
into
and
ss
and
in
mov
xchg
lahf
les
cmc
scas
addl
imul
cwtl
sub
dec
sbb
dec
jmp
popf
xlat
incb
add
and
sbb
xchg
cmpsb
push
scas
lods
pop
mov
sub
loope
mov
dec
je
rorb
test
add
shll
sahf
mov
pop
ret
jmp
mov
jge
jp
mov
jno
in
sbb
add
and
filds
sub
and
pusha
add
hlt
int3
jae
dec
inc
push
add
mov
inc
and
aam
xor
add
sahf
notl
inc
jbe
mov
leave
sbb
mov
imul
addr16
mov
push
lss
mull
mov
sbb
cli
pop
ja
rcrl
jne
mov
push
lods
ss
push
push
lock
call
sub
mov
add
lods
orl
push
in
push
fildll
inc
xor
dec
sub
out
scas
movsb
out
int3
dec
out
repnz
popf
xchg
and
sahf
push
nop
jbe
aad
aaa
push
pop
sbbl
sbb
xor
fstl
push
pop
add
mov
leave
inc
jo
adc
sub
cmp
add
fnstsw
lds
dec
jl
lods
rcr
and
inc
mov
xchg
add
push
lret
push
sub
popa
mov
xchg
sti
xor
movsl
in
sbb
and
dec
sub
daa
xchg
sti
push
inc
inc
inc
adc
paddsw
mov
adc
scas
loop
jno
in
test
push
mov
add
leave
std
in
outsl
cld
jl
icebp
xchg
xor
mov
out
test
cwtl
nop
les
mov
std
push
mov
daa
jb
aaa
ljmp
xlat
or
xchg
cmpsl
dec
and
out
lods
arpl
test
lods
xchg
push
ret
scas
xchg
pushf
mov
fnstenv
xchg
inc
mov
cmp
lcall
jnp
or
cld
mov
jb
aad
dec
mov
stc
push
stos
pop
cmpsb
fstl
adc
leave
iret
and
lret
or
and
outsb
sub
push
lods
repnz
and
out
cltd
inc
and
sub
mov
sbb
jbe
scas
mov
insb
sbb
shll
cmp
sub
dec
fdivl
or
das
jb
fstp
sub
lret
sbb
inc
addr16
and
xchg
ja
push
stos
dec
sbb
ret
fsts
or
xchg
sbb
test
cs
pop
stc
mov
mov
lret
loope,pt
in
mov
mov
push
mov
lds
mov
push
push
mov
addl
lods
xchg
cmpsl
lds
add
aad
mov
bnd
cld
ret
mov
push
inc
pop
pop
mov
inc
shlb
stos
lock
xchg
mov
lds
insl
pop
dec
sub
in
cltd
push
add
mov
mov
daa
mov
scas
push
jecxz
pop
out
addr16
and
loopne
fwait
in
pop
xor
push
pop
inc
test
lea
rolb
cmpsl
jmp
jno
or
shll
test
cmpsl
add
pushf
inc
pop
stc
lods
jmp
sbb
dec
loopne
roll
cmpsb
and
lcall
sahf
test
xor
lods
into
addl
mov
js,pn
inc
jmp
fadds
adc
or
lds
push
lret
jl
test
adc
push
lods
pop
sub
faddl
xlat
test
outsl
scas
and
and
jnp
cltd
or
mov
lds
bound
adc
push
jns
in
bnd
dec
dec
mulb
xchg
push
pop
add
js
push
test
mov
lcall
xchg
ds
adc
es
mov
inc
sbb
int3
push
jmp
pop
lods
xchg
or
test
xchg
mov
mov
adc
pusha
cmpxchg
shr
pop
lods
mov
cmc
aad
jecxz
cmc
in
lods
fdivrs
pusha
xor
mov
outsl
clc
cmp
in
inc
cmc
cwtl
into
cmpsl
fcmovnb
stos
sub
jg
jecxz
fsts
pushf
pop
aas
xchg
mov
addr16
shrl
and
and
cmp
into
jecxz
out
xor
loope
sarl
or
enter
fwait
sbb
fxch
sub
repz
jnp
popa
faddl
push
mov
les
lcall
xorl
outsl
jg
jecxz
in
cwtl
ja
pop
cmpsb
push
std
xor
mov
into
ret
loope
sub
sbb
mov
dec
push
out
and
mov
jl
je
mov
outsb
dec
icebp
test
mov
and
insb
xor
testb
call
cmp
fldln2
icebp
dec
addr16
je
scas
rol
or
dec
pop
lods
add
loope
in
leave
lcall
mov
rcr
scas
push
scas
sub
test
call
mov
icebp
movsb
rorb
mov
cld
mov
push
or
mov
lods
and
jl
iret
sbb
je
push
xchg
pop
xor
mov
int
in
std
jmp
push
loopne
ja
xchg
mov
test
out
pushf
mov
cmpsl
popf
jne
pop
cmp
jge
adc
int
cmp
mov
cmpl
xchg
fstl
test
adc
mov
or
lcall
hlt
xchg
outsb
scas
rcrb
fildll
sahf
and
lods
cltd
test
rcrb
addr16
leave
iret
popa
push
jo
or
scas
in
mov
xchg
dec
ja
sti
popa
das
pop
xchg
or
shlb
mov
ret
cwtl
ja
pop
jl
lcall
mov
jae
push
mov
lods
inc
dec
mov
xchg
ret
movsl
ds
mov
jbe
push
aad
inc
and
les
mov
imul
lods
push
aad
sub
cltd
lds
jno
and
lret
xchg
and
jo
hlt
fwait
inc
jp
or
stos
fimuls
and
inc
pop
sti
mov
lods
adc
out
sub
add
sbb
fbld
enter
mov
push
push
sub
xchg
mov
or
xor
rol
xchg
incb
in
sub
into
pushf
popa
add
dec
in
xlat
cmc
fmuls
xchg
inc
jmp
push
icebp
daa
jp
arpl
out
push
push
gs
fdivrs
add
add
sub
add
sbb
aad
add
inc
jbe
cmc
and
dec
push
mov
arpl
stos
xchg
cmp
popf
rcll
fbld
sbb
lds
sub
icebp
cld
rcll
in
scas
inc
mov
mov
lods
mov
cmc
mov
xchg
test
push
aad
rcrl
in
leave
and
dec
cli
lods
pushf
mov
imul
mov
rol
cltd
pusha
mov
arpl
mov
mov
mov
mov
inc
stos
movsl
push
add
lret
mov
movsb
loope
sbb
cmc
test
mov
adc
pop
mov
fisubrs
or
stos
lahf
mov
dec
aaa
stc
push
fldenv
add
mov
sbb
pop
jnp
mov
cmp
dec
or
movsl
and
scas
out
testl
adc
daa
cmp
stos
js
int
pop
add
push
in
xchg
push
div
push
cmpsl
fcmovu
jle
fs
push
inc
xor
pop
and
into
or
push
cmpsl
lock
xchg
pop
cld
rcrl
fisttpl
xlat
push
pop
pop
fldln2
mov
and
sbb
repz
cmc
nop
mov
or
push
scas
iret
loope
add
inc
mov
cmpsl
jmp
aad
cld
int
rorl
add
inc
pop
in
xchg
xchg
push
int
add
sbb
xor
adcb
adc
xchg
sbb
jnp
mov
cmp
sbb
mul
mov
inc
and
or
cmp
mov
cli
enter
add
and
jmp
sbb
test
lcall
mov
scas
gs
test
cmp
add
fdivs
ret
aaa
lods
xchg
icebp
or
xchg
lods
lea
jle
mov
movsl
aad
mov
ljmp
dec
sbb
mov
mov
loop
sbb
shll
in
jmp
mov
push
push
test
dec
ds
push
out
rcrb
in
adc
and
pop
dec
mov
jnp
lods
movsl
sub
xor
addb
adcl
loopne
and
jecxz
push
daa
jmp
mov
adc
lret
sbb
lea
shlb
iret
and
aad
testb
fnsave
sub
xchg
loopne
imul
fisttps
mov
add
lods
adc
sbb
aas
adc
jns
out
inc
xchg
cmp
iret
cmpsb
mov
cmpsl
jl
xchg
sbb
shll
mov
in
pushf
add
push
stos
mov
sbb
rorl
nop
fiaddl
push
pop
cmp
jge
xor
popf
xchg
adc
mov
pushf
clc
push
jbe
sub
stc
cs
lods
xchg
adc
cmpsl
inc
aaa
sbb
stos
lahf
sbb
popf
lock
xor
xor
adc
inc
push
jns
dec
jne
popa
mov
xchg
roll
push
xor
inc
sub
dec
jmp
lods
xchg
mov
sahf
ds
add
push
cmpsb
into
sarl
inc
mov
xchg
push
out
cmp
cwtl
je
ja
lret
inc
in
sahf
mov
arpl
mov
out
stc
sarl
lods
push
and
pop
icebp
dec
pop
aam
icebp
dec
inc
stc
addb
mov
xor
mov
sub
push
inc
mov
sbb
mov
pusha
out
mov
mov
rolb
dec
pop
sub
rorl
inc
loope
mov
xchg
popf
mov
outsb
iret
stos
popa
lods
pop
jno
cmc
cmp
adc
mov
lds
xor
in
jp
leave
je
into
adc
test
je
leave
test
mov
add
sub
add
inc
outsl
nopl
fucom
arpl
adc
pop
push
add
into
push
fldcw
jne
cs
xchg
xchg
add
sub
popf
mov
mov
pushf
cmpsl
loope
cmpsl
mov
jl
test
sbb
lcall
mov
loopne
roll
daa
pop
mov
cmp
mov
std
mov
popf
daa
jecxz
mov
sbb
xchg
dec
test
mov
inc
jecxz
cmp
push
cwtl
dec
pop
pop
add
stos
jne
dec
lods
pop
lods
loope
cmpsl
and
les
clc
mov
push
inc
andb
or
scas
dec
jg
lock
cmpsl
pop
lods
test
sub
mov
fcoms
sbb
pushf
mov
test
mov
jbe
or
pushf
lods
jg
lods
testb
mov
adc
leave
cmpsb
sub
mov
ljmp
jmp
mov
imul
orb
dec
jne
in
push
xchg
inc
mov
test
jno
or
mov
xchg
rolb
mov
and
test
inc
repnz
and
loope
ret
lods
jmp
ss
sub
rcr
push
push
mov
mov
mov
inc
sbb
rep
add
inc
test
and
push
in
cmpb
cltd
cmpsb
in
mov
outsb
lret
jo
inc
loope
sub
ret
test
sub
add
push
icebp
jge
shll
and
lds
add
pop
hlt
mov
popf
inc
js
mov
stc
add
popf
cwtl
and
inc
dec
mov
xchg
xor
jns
inc
data16
and
cmp
jmp
popa
jb
mov
push
jnp
mov
int3
scas
cmpsl
jbe
push
add
imul
scas
lea
inc
adc
insb
jbe
in
mov
sahf
fsub
dec
dec
mov
adc
pandn
lods
popf
rol
push
xor
mov
jbe
jns
out
es
xlat
mov
and
or
ss
lods
js
mov
outsb
xchg
and
sub
mov
xchg
in
ljmp
push
movsl
cwtl
jae
mov
mov
lock
out
out
add
call
lret
xlat
data16
mov
shr
mov
cmpsl
xlat
imull
lret
sbb
scas
lea
sub
ret
xchg
push
add
jno
cmp
jno
sbb
out
lods
pop
stos
mov
test
not
hlt
push
mov
or
and
pushf
arpl
shl
repz
adcl
jecxz
fnstenv
cwtl
cmp
mov
insb
sbb
ret
inc
enter
jecxz
mov
mov
je
mov
out
sbb
push
mov
rorl
push
mov
mov
lods
push
cmp
sbb
dec
mov
out
jo
jmp
and
mov
aad
mov
jmp
icebp
fstpl
sbb
pop
jae
scas
sbb
cmc
and
aaa
add
pop
ror
imul
xchg
enter
mov
and
js
xor
popf
lret
sub
push
inc
xorl
xlat
xor
sbb
adc
movsb
rcrl
inc
or
rcrb
mov
and
inc
push
push
push
push
inc
fs
sub
lret
add
sub
gs
jge
fmuls
add
sbb
push
xchg
pushw
xlat
sbb
pop
lock
push
jmp
pop
inc
push
dec
mov
pop
mov
xchg
inc
push
dec
xchg
fldt
push
push
aas
mov
adc
or
popf
sbb
test
pop
sub
icebp
push
cmp
push
push
divl
lcall
add
lret
pushf
jmp
shl
scas
cld
out
scas
inc
ret
movsb
shlb
mov
imul
and
pop
out
roll
in
xchg
push
and
movsl
jl
and
push
xor
xor
mov
popa
xchg
cwtl
aas
dec
jno
push
sub
mov
mov
mov
push
mov
dec
push
sbb
or
in
pop
ret
cld
inc
inc
push
int
shrl
sbb
inc
push
cmpsb
adc
fadd
scas
outsl
xor
shlb
jne
jb
out
lcall
and
popa
sahf
clc
mov
shl
cmp
mov
sub
int
cmp
xor
roll
loop
adc
in
test
imul
movsb
dec
popf
add
push
xchg
cmp
shrl
add
pop
cmc
push
js
mov
mov
and
sbb
repz
mull
jae
sti
cs
stos
xchg
in
dec
and
push
sbb
call
test
push
jecxz
shll
pusha
leave
xchg
mov
das
inc
xor
and
dec
pop
in
loopne
ss
jecxz
add
sub
xor
xchg
and
mov
xor
into
push
mov
ss
cltd
cmp
movsb
pop
mov
fstp
mov
adc
jno
sub
in
push
adc
test
shll
mov
sub
test
fbld
lcall
lret
loopne
push
cmp
or
or
das
add
xchg
cmpsl
mov
push
test
add
adc
pushf
or
jmp
icebp
jecxz
xchg
adc
push
mov
dec
jmp
adc
sub
in
shlb
lcall
rclb
xchg
daa
sbb
sbb
or
xor
push
in
shlb
fwait
mov
jmp
push
pushf
adc
inc
into
mov
cmc
stos
sub
mov
cltd
jmp
in
outsl
mov
inc
loope
push
sbb
enter
mov
xchg
xchg
pop
and
xor
xlat
push
lahf
xchg
stos
adc
sbb
jno
fisubs
pop
inc
sbb
sbb
popf
mov
push
stos
mov
cmp
inc
in
adcb
aaa
aas
inc
mov
fxam
test
inc
dec
push
pop
stos
cmp
mov
or
and
xchg
and
push
mov
shr
push
movsb
dec
in
mov
cmc
insb
and
mov
jecxz
dec
push
movsb
adc
cmp
std
psubsw
ret
lret
and
pop
dec
jbe
std
popa
or
lds
push
inc
push
mov
jmp
add
out
mov
push
add
xchg
push
mov
fwait
mov
xchg
and
push
ret
stos
mov
jl
aad
xchg
push
lods
adc
fidivl
testb
sarl
cmc
fwait
std
push
and
scas
xchg
fnsave
rorb
daa
mov
and
xorl
or
mov
mov
rclb
jbe
jmp
stc
mov
dec
jmp
cmpsb
and
pop
sbbb
sub
xchg
fwait
cmpl
in
mov
pop
and
mov
scas
sbb
cmp
mov
jmp
adc
addr16
pop
pusha
pop
cmpsb
mov
mov
push
pop
or
data16
push
imull
pop
xor
add
test
into
loope
test
and
inc
ffreep
stos
mov
aaa
sub
sti
jl
cld
or
sti
jl
in
lea
decb
adc
sbb
adc
pop
popf
jecxz
and
stos
std
shrb
sbb
mov
sbb
sbb
mov
pushl
in
adc
lret
je
push
mov
into
adc
in
out
scas
mulb
push
pusha
adc
jl
rcrl
and
cmpsl
lods
lds
call
test
xchg
cmpsb
vpavgw
inc
popf
mov
mov
and
xor
xchg
inc
lods
sti
test
jecxz
mov
push
scas
adc
fnsave
sbb
inc
repnz
jno
mov
mov
es
sub
in
push
add
push
push
add
jns
insb
dec
loope
test
cwtl
sbb
test
loopne
mov
push
cmc
and
cltd
icebp
adc
adcl
std
popl
leave
jecxz
and
out
push
cmc
and
add
sbb
xchg
rorl
mov
stos
push
cld
cmc
hlt
mov
or
inc
lods
push
or
jl
lods
sar
and
and
mov
inc
les
sti
add
pop
sbb
fimull
mov
mov
repz
in
mov
in
xor
sbb
inc
cmp
iret
icebp
pop
cmp
cmc
das
icebp
enter
pusha
into
push
mov
ficoml
adc
push
rorl
test
jb
mov
in
adc
xchg
mov
stos
out
cmc
mov
jle
adc
jge
cmpsl
shlb
ss
loopne,pt
push
sbb
cmp
add
sti
cmpsb
pop
dec
cmp
insb
call
stos
add
mov
lock
ffreep
jl
stc
mov
ret
sub
lods
and
pop
or
stc
cmc
rcr
mov
je
repnz
scas
popf
insb
js
jbe
std
mov
stos
pop
pushf
outsl
pop
in
ja
or
and
fsts
and
jno
and
cltd
imull
das
lods
adc
pop
mov
pop
stc
std
sbb
enter
fcom
mov
js
cmpsl
test
aas
rcrl
stos
fcomps
jns
popa
lods
not
jae
sbb
push
mov
mov
push
mov
in
cmp
add
mov
int3
test
hlt
sti
mov
ficompl
data16
into
cwtl
inc
frstor
je
mov
mov
mov
cmp
movsl
mov
pop
call
or
insb
cltd
and
pop
lret
xor
adc
add
dec
add
mov
xor
lds
lods
popa
push
in
movsb
fucomip
adc
push
sub
in
xchg
stc
dec
imul
adc
cmc
daa
sbb
js
stos
scas
push
dec
pop
sub
cwtl
push
cmp
sar
jl
ja
icebp
dec
lret
inc
and
mov
push
les
pop
xor
out
mov
sbb
loope
sub
inc
cmp
cltd
pushf
loope,pt
pop
sub
add
xor
dec
and
xchg
inc
fprem
into
fbld
bsf
cmc
mov
push
jmp
mov
mov
mov
push
mov
loope
sbbb
adc
lcall
aam
and
sbbl
adc
loope
cmp
test
stos
in
lcall
cmpsl
fsubp
mov
sahf
in
dec
das
loop
ret
push
pop
dec
push
popf
bound
pushf
fisttpll
jmp
orl
movsb
mov
fcmovnu
jle
adc
xlat
inc
push
xor
jl
scas
mov
fwait
inc
push
jmp
pop
pop
cmpsl
int
data16
mov
and
lcall
cmc
scas
cmp
not
int
dec
loope
and
pushf
test
cmpsl
sbb
shrb
and
ss
jecxz
mov
xchg
out
push
daa
mov
jne
push
imulb
adc
aaa
xor
leave
int
mov
les
jecxz
lret
cmpb
sub
nop
rcrb
and
sbb
call
fadd
mov
mov
or
push
lds
filds
in
ljmp
jmp
je
dec
and
dec
aaa
popa
or
daa
andb
stos
push
adc
je
in
dec
sbb
add
push
mov
rcrl
sahf
cmp
sub
mov
xor
shll
add
roll
roll
adc
mov
jp
jg
xor
int
push
push
xchg
and
inc
xchg
and
fildl
stos
pop
lods
jo
je
push
adc
mov
xchg
cltd
mov
enter
dec
movsb
push
leave
sub
and
sub
and
push
mov
clc
cmp
fldt
lcall
sub
add
gs
orl
stos
mov
add
pop
mov
leave
shl
and
adc
mov
and
pmulhw
or
movl
xchg
push
cmp
call
and
cmp
rcrl
push
ret
mov
mov
cmp
movsl
cmpsl
test
leave
scas
pop
aad
loope
sbb
imulb
loopne
daa
push
jo
popa
std
mov
mov
shlb
mov
les
icebp
int
dec
sbb
inc
or
jle
scas
pop
jbe
shll
sbb
xchg
cld
dec
xor
jno
arpl
mov
bound
loope
mov
cli
out
add
stos
daa
push
or
in
imul
jbe
xor
mov
push
cmpsl
mov
adc
ret
push
add
movsb
mov
imul
sbb
loope
push
aad
mov
sbb
mov
sub
mov
mov
in
adc
push
inc
stos
and
or
mov
mov
imul
inc
xchg
fistpll
mov
and
outsl
cmp
stc
mov
push
mov
mov
sub
loope
cs
jecxz
dec
loopne
in
ret
movsl
movsb
cmp
push
stc
ljmp
lret
repnz
mov
push
in
sub
imul
xchg
pop
or
mov
mov
scas
cmp
int
ror
iret
fimull
and
cmc
mov
mov
lret
popl
lods
in
xor
pop
pushw
adc
pop
cld
jb
mov
mov
lods
fistpl
or
pop
call
xlat
lea
add
gs
sub
lret
dec
xor
push
push
xchg
and
or
stc
in
shrb
jnp
pop
push
push
mov
xor
lcall
dec
daa
ret
int
fnsave
popf
xchg
dec
popf
test
stc
stc
cmc
and
jl
loopne
mov
push
cmp
and
cmp
xchg
dec
mov
add
dec
sbb
scas
test
jmp
mov
sub
loope
or
sahf
or
cwtl
xor
push
mov
jno
scas
mov
movsl
and
test
push
sub
pop
mov
and
out
jo
lds
fadds
pusha
or
sahf
mov
lods
pop
ret
dec
movl
mov
jl
rcrl
and
int3
dec
push
movsl
and
lret
push
stc
jb
push
fmul
ret
jmp
sbb
add
sub
push
push
cwtl
xor
mov
add
std
mov
fldenv
sbb
dec
test
into
stos
out
xor
movsb
push
jnp
xor
cmp
shll
shrl
sub
and
aaa
mov
adc
xor
lcall
sub
insl
jmp
mov
cmp
push
pop
push
mov
lds
add
test
subb
shlb
imul
js
jae
out
push
test
jo
and
add
jle
cmp
sub
and
out
xor
cld
ret
scas
push
mov
or
sbb
cmc
cmpsl
add
sbb
pop
lods
add
arpl
int3
mov
jnp
jmp
lret
add
jne
and
and
mov
pop
out
push
lods
rclb
or
push
sbb
shlb
and
mov
mov
sbb
sub
shrl
cmp
mov
in
and
out
popf
xchg
pop
inc
sub
sbb
test
scas
lds
pop
pop
xchg
ret
dec
test
out
and
cmp
push
loope
lds
push
daa
mov
inc
adc
popf
push
jecxz
scas
movsl
push
call
pop
jns
in
leave
loope
and
xlat
std
cmc
sbb
pop
cwtl
jo
cmpsb
das
shll
lods
dec
mov
test
in
xor
cs
cmpsl
test
inc
int
test
aaa
inc
push
in
pop
or
dec
popa
jne
mov
scas
mov
hlt
outsb
dec
push
test
pop
loop
ficompl
adc
mov
jp
lret
lret
push
sahf
stos
adc
rclb
pop
popf
filds
cmp
xor
pop
cwtl
rorb
jl
lods
cmp
push
add
frstor
sub
emms
idiv
aaa
mov
push
sub
cmc
add
sub
cs
pushf
loope
lods
popf
leave
xchg
stos
jmp
daa
xchg
movsb
into
push
or
cmp
pmulhuw
mov
adc
mov
sbb
enter
jbe
test
pushf
into
aam
mov
daa
cwtl
sahf
xor
add
in
pop
lds
popf
push
rclb
dec
sbb
or
cmp
jmp
out
and
repz
mov
test
push
sti
jmp
cmp
icebp
mov
movsb
call
xchg
cli
mov
cmpsb
aas
iret
lcall
nop
pushf
je
mov
or
rol
or
jg
sub
imul
loope
popa
movsb
pop
leave
cltd
sub
arpl
stc
scas
in
xchg
sbb
push
cli
xchg
subb
mov
vpmaxsw
stc
repz
or
fcomps
cmp
shl
fidivs
or
mov
sub
add
jle
into
push
mov
movb
shlb
rol
ror
push
mov
or
lods
xchg
shll
dec
addr16
sbb
insl
cmpsl
mov
mov
mov
pandn
and
push
add
sub
push
push
insb
fildll
sbb
sti
out
cltd
cmp
lea
loop
mov
push
scas
xchg
ja
xchg
pushf
test
add
push
popf
jns
imul
in
popf
add
xor
jnp
shll
shll
sub
test
mov
push
sti
fstpt
add
mov
jmp
mov
pop
test
inc
adc
xor
cmc
inc
out
adc
and
dec
add
scas
popf
mov
fyl2xp1
rcr
popf
fiaddl
cmpsl
std
cmc
shll
arpl
in
test
xchg
ja
mov
leave
lods
enter
jecxz
shll
adc
lods
imul
mov
dec
push
cmpsl
mov
inc
scas
mov
stos
enter
mov
fsubl
stos
push
pslld
inc
ret
jno
pop
sti
or
ss
pushf
pop
cmpsl
loope
cmpsb
fwait
clc
push
stos
push
mov
and
icebp
mov
jmp
sbb
push
ja
popf
leave
stc
pop
cmp
loope
xchg
fbld
sub
sbb
xor
call
and
sbb
scas
andl
outsl
pop
and
and
inc
mov
pop
movsb
lds
fbld
sub
ja
push
pop
pop
mov
push
jmp
out
test
mov
scas
inc
jl
leave
fstpt
es
xor
sbb
out
fnstcw
movsl
aaa
fists
push
jecxz
add
in
pop
sbb
ja
adc
xchg
dec
out
mov
xor
pandn
and
aad
cmpsb
xchg
std
xchg
and
sbb
mov
mov
adc
lret
sub
push
cmp
adc
add
movsl
cmc
and
cmp
sbb
or
and
sarl
call
imul
rcr
cmp
push
mov
cmp
and
mov
and
outsb
arpl
dec
jmp
cmc
test
cmpsb
int
or
mov
adc
pop
add
push
push
in
add
rcrl
push
xor
sub
lock
xchg
cmc
and
mov
sub
jecxz
sti
imul
idivl
push
adc
mov
addr16
lahf
mov
iret
push
pop
xchg
das
xchg
scas
sbb
shll
push
sbb
adc
push
xchg
push
testl
fwait
aad
sub
or
mov
xchg
lret
and
es
ret
sub
lcall
test
je
cmpsb
cmpsl
sbb
cwtl
fst
add
iret
aaa
push
ljmp
add
lock
mov
jbe
sbb
daa
xor
xor
inc
xor
add
pop
stos
push
ret
sahf
stc
out
sti
in
and
mov
inc
push
call
jns
gs
pop
out
loopne
push
shl
adc
cmp
scas
popa
inc
xor
mov
repz
sub
jbe
mov
jp
shr
in
outsl
js
roll
in
in
enter
aad
mov
lret
sub
and
inc
pop
mov
movsl
push
fbstp
arpl
scas
jmp
je
xchg
js
sub
das
jecxz,pn
or
hlt
shr
and
jno
inc
out
sarb
mov
mov
mov
popa
lahf
cwtl
mov
in
inc
push
dec
pop
and
and
arpl
testl
mov
je
mov
lea
adc
pop
arpl
scas
std
xor
out
mov
cmpb
push
repz
cmp
outsb
mov
sti
push
out
sbb
pop
cmp
mov
in
add
inc
imul
std
sbb
pushf
mov
mov
idivl
xor
je
lret
or
popf
test
mov
lahf
push
xlat
add
sbbl
sbb
das
dec
dec
shll
inc
popf
fnstenv
sbb
roll
mov
rcrl
mov
mov
adc
addl
dec
lret
add
mov
push
jmp
or
adc
addr16
std
and
add
movsl
pop
cmp
push
jg
mov
icebp
mov
repz
sbb
fists
sub
push
add
inc
loope
fnstcw
pop
cmp
cmc
and
hlt
int3
pushf
std
push
mov
xchg
icebp
shlb
ficoms
outsl
dec
sub
bound
sbbl
lret
mov
xchg
pop
adc
mov
lcall
testl
stos
sbb
mov
inc
ja
xor
repz
sub
adc
xlat
sub
jmp
popf
and
dec
xchg
mov
mov
das
mov
cmp
dec
daa
push
repz
cmp
cmp
rcll
mov
movsb
loop
push
push
mov
into
jo
repnz
jecxz
in
stc
cmp
xchg
mov
xchg
sbb
mov
mov
clc
jmp
cmp
cmp
rorl
push
stc
cmpsb
inc
cltd
sbb
or
xchg
imul
xchg
popa
out
adc
addr16
call
and
sbb
mov
sbb
or
lret
cmpsl
mov
jecxz
rcrb
mov
xchg
lods
fs
aad
ss
sbb
cltd
into
dec
shl
mov
push
xor
push
in
scas
pushf
xchg
sbb
mov
mov
mov
and
iret
data16
cmc
lods
out
sub
mov
faddl
out
fucomip
scas
mov
cmp
adcl
fidivrs
and
push
ret
stos
cmpl
sub
mov
int
sti
jno
mov
sub
pushf
and
adc
loopne
imul
jbe
sbb
sub
rcl
in
sahf
cmp
ret
jp
int3
pop
imul
gs
adc
pop
or
fsubl
xchg
lods
inc
aaa
arpl
into
lret
add
pop
mov
sub
push
loope
sahf
sbb
loopne
jecxz
or
push
xlat
mull
and
sbb
adc
pop
and
mov
ja
lods
xchg
mov
into
scas
pop
xchg
sub
cmpsl
and
push
data16
out
fstps
xchg
fisubs
imul
push
pop
pop
add
mov
push
mov
ja
xlat
cltd
xchg
add
and
add
js
enter
inc
cmpsb
int
or
mov
xchg
scas
imul
push
mov
jbe
call
mov
movsb
push
fnsave
pmullw
mov
and
sbb
sti
sti
int3
and
jns
add
add
lds
sub
and
mov
popf
nop
sti
loop
xor
stc
pushf
int
outsb
mov
rcrl
lahf
sbb
int3
test
popf
push
stc
std
lock
sahf
test
dec
and
out
push
and
int
fcmovnbe
cmpl
add
test
bound
stc
scas
pop
test
add
ja
out
adc
xor
add
xchg
mov
push
scas
mov
lds
mov
sbb
cmp
cmp
inc
pop
loope
and
ss
sar
add
arpl
scas
or
ja
and
ret
push
push
mov
leave
and
or
and
xchg
sub
nop
xchg
mov
fsubs
ljmp
mov
int
test
lods
push
idiv
and
roll
mov
dec
and
rolb
cmpsb
imul
call
cld
inc
push
icebp
lods
les
aad
jbe
mov
lds
insl
ss
mov
and
movsb
mov
es
in
stos
lret
mov
adc
and
inc
inc
cmp
repnz
pop
imul
movsb
daa
cmpsb
xchg
cmc
out
push
add
adc
andl
in
cmpsb
mov
movsb
lret
aad
mov
xchg
xor
sub
jmp
and
leave
pop
jecxz
cmpsl
inc
inc
pushf
repz
cmp
int
sbb
stc
mov
rolb
sarb
or
inc
sbb
mov
cmp
lock
push
pop
push
sbb
push
cmp
and
jecxz
subl
fwait
pop
push
int
push
in
lock
or
sub
leave
push
mov
inc
mull
rolb
cmpsl
std
movsb
xchg
mov
xchg
dec
sbb
pop
enter
ret
xchg
es
scas
loopne
ljmp
shll
popf
dec
mov
in
mov
adc
test
mov
pop
leave
pop
sarl
xsaveopt
mov
jmp
cmc
and
fldenv
add
test
jge
add
push
sbb
cmp
adc
scas
dec
fcoms
lods
jecxz
jecxz
pushf
xchg
mov
add
push
lret
das
loope
push
mov
dec
or
or
add
mov
sbb
cmp
cmpsb
fists
dec
sbb
iret
mov
fistpll
lcall
fisubs
adc
lds
adc
and
cmp
sub
out
scas
stos
outsl
rcl
in
push
out
mov
into
cltd
insb
sub
mov
icebp
pop
mov
out
in
adc
in
sbb
lds
out
mov
scas
push
int
daa
shlb
in
pop
cmc
dec
fmull
ss
mov
mov
dec
ja
jecxz
ret
jge
push
jbe
fstpl
cmp
sti
fsubrl
ffree
sbb
inc
pusha
lods
push
xchg
loope
mov
sbb
or
and
and
scas
leave
cmp
clc
push
add
inc
pop
push
aad
and
push
adc
lods
cmp
inc
popa
fildl
push
and
mov
hlt
adc
mov
lds
cwtl
cmp
sub
jle
shll
sti
lods
xor
add
and
and
cmpsl
pushf
loopne
sbb
and
sub
fldt
adc
lret
movsl
adc
mov
fidivrs
cmp
and
dec
es
movsl
das
push
and
xchg
in
stos
cmpb
test
scas
iret
stos
jbe
pop
int3
push
std
sub
dec
and
mov
cmc
negl
mov
mov
shrl
call
filds
int
pop
enter
aad
cmpsb
push
or
loope
sub
mov
fcmovu
lods
ret
test
ds
lds
scas
das
sbb
jbe
sub
out
inc
lds
mov
lods
pop
xor
push
lret
mov
fucomi
mov
mov
push
add
lahf
xor
pop
popa
xchg
js,pn
fs
cmovo
xchg
mov
mov
frstpm(287
cmpsl
repnz
sbb
push
mov
or
scas
inc
mov
sub
xchg
in
push
or
sub
mov
mov
popa
arpl
fucomip
jb
lea
fdivl
add
and
subl
and
sub
jnp
and
in
push
das
cmp
cmpsl
hlt
xor
rol
int
stos
leave
pop
jmp
sti
dec
mov
mov
daa
adc
adc
push
movl
fcoms
in
pop
cmp
fneni(8087
repz
and
pop
addr16
lret
push
jmp
mulb
addr16
sbb
in
je
mov
xor
mov
int3
cmpsb
lahf
push
lcall
push
cmpsl
movsl
adc
mov
xor
mov
jnp
xlat
and
fwait
xor
push
into
popf
movsl
imull
sarl
ficomps
inc
into
pop
push
dec
dec
scas
mov
call
fsub
sarl
jl
xchg
and
and
in
adc
iret
sub
push
nop
or
rcr
sub
xlat
sub
pop
xchg
dec
int3
jo
mov
out
bound
sti
xchg
lods
in
push
sbb
mov
fs
ljmp
data16
cmc
inc
push
add
sbb
and
popa
mov
jne
jno
cltd
dec
sub
jb
test
aad
outsl
dec
into
xchg
sbb
in
cmp
lret
cmpsl
pop
inc
test
hlt
add
ds
adc
push
sbb
push
sub
xlat
rcrl
push
cmp
cmp
int
std
jecxz
jnp
adc
jbe
stos
cltd
sahf
push
sub
loope
loope
inc
and
and
movsl
cmpsb
add
cmp
out
push
cli
out
insl
xchg
js
hlt
cmp
lods
ss
adc
sbb
sbb
add
pop
int3
or
add
xor
and
lods
ret
lahf
push
ret
cmc
xchg
sar
jg
imul
insb
popf
add
sbb
pop
mov
ja
aad
mov
loop
dec
and
rcrl
sahf
cwtl
xor
pop
jecxz
imul
mov
enter
rorb
and
cmc
and
jno
pushf
sbb
mov
aad
cld
push
shll
and
insb
imul
add
mov
push
inc
test
mov
push
mov
pop
ljmp
mov
stos
mov
inc
add
xor
int
fxam
ds
sbb
lds
imul
push
fnstenv
push
aam
sarb
movsl
sub
jge
aad
or
fnstsw
stc
xchg
shl
in
insb
xchg
push
cld
mov
push
jg
pop
xchg
addr16
rol
int
stos
or
jbe
out
outsb
push
push
loop
or
sbb
into
lods
xchg
xor
and
shrl
ret
lds
lret
xlat
or
and
cltd
out
sub
or
into
lods
int
daa
lea
add
mov
jle
enter
imul
ret
int
mov
ret
mov
sahf
ds
fisttpll
sub
imul
lock
add
and
pop
add
push
sbb
push
loopne
rorl
mov
popf
mov
sbb
shlb
jmp
pop
das
and
sub
and
xchg
popa
in
in
iret
and
adc
mov
je
loopne
mov
mov
pop
lea
cmpl
and
lcall
stos
std
lea
je
lds
mov
fs
push
pushf
mov
test
incb
scas
int3
jno
repnz
scas
mov
cmp
enter
cmpsb
push
add
mov
adc
push
jmp
icebp
push
lds
adc
ja
fidivrl
dec
fnsave
mov
and
shll
cmp
out
mov
dec
xchg
popf
mov
sub
xchg
mov
jns
pop
pop
fincstp
test
out
jb
push
and
push
popf
and
out
fs
stc
push
and
push
or
push
and
add
mov
popf
xor
roll
arpl
into
pop
jmp
repz
inc
repnz
mov
sub
add
mov
sahf
scas
mov
es
xor
xor
pop
xchg
fs
push
arpl
push
mov
mov
inc
mov
in
pop
cltd
test
mov
mov
pop
and
and
pop
fstpt
pop
iret
cmovno
push
mov
xchg
pop
cs
aad
mov
fcmovne
sbb
js
ret
call
pop
and
mov
adc
cmp
ror
mov
push
test
out
fldenv
repnz
inc
sbb
or
cwtl
fidivrl
ljmp
cld
push
push
fnsave
mov
jle
cmpsb
xchg
in
cmc
xor
scas
mov
lds
adc
push
incl
or
dec
push
or
pusha
jbe
mov
shl
popf
sbb
mov
in
pop
daa
cli
popf
and
rcrl
leave
sub
cltd
std
sbb
je
loope
movsb
and
lret
out
ret
iret
dec
mov
or
out
scas
lds
push
imul
insb
push
pop
mov
mov
int
xchg
xchg
les
mov
jo
xor
push
sbb
enter
mov
sbb
push
sbb
xchg
ljmp
cwtl
lcall
stos
int3
jmp
gs
pop
mov
mov
hlt
jecxz
mov
or
cli
mov
jmp
in
jl
leave
dec
rcll
or
sub
imul
push
in
mov
cmp
or
lods
jp
mov
mov
mov
lcall
pop
mov
xor
popa
ret
repnz
repnz
lds
lock
mov
lds
xor
or
push
lods
push
push
fs
push
mov
aaa
fcmovnb
insl
or
scas
jne
jecxz
in
iret
add
cmp
mov
sti
mov
loope
push
test
mov
xchg
sbb
mov
cmc
cmpsl
mov
mov
insb
loope
aas
pop
jecxz
fwait
popa
sbb
mov
lahf
cmp
jne
pop
rorb
mov
lds
in
xlat
iret
stos
adc
aam
test
ja
fsubs
and
lcall
std
or
jecxz
jae
lret
push
test
mov
push
pop
mov
or
add
mov
rcrb
mov
mov
push
push
push
rep
scas
cmp
xchg
push
pop
mov
movsl
dec
xchg
jbe
or
add
lret
mov
data16
xchg
stos
mov
and
cmp
inc
inc
idivl
push
cmp
jle
scas
push
cmpsl
test
adc
jb
cwtl
leave
bound
push
inc
mov
sub
ds
cmc
lods
sbb
pop
push
adc
ret
mov
fcmovne
out
dec
and
loope
scas
and
int
mov
cwtl
in
add
sbb
sub
add
lret
inc
mov
imul
jmp
push
imul
scas
inc
test
adc
lds
push
cld
lret
sub
sub
push
fwait
loope
int
cmpb
mov
cmpsl
dec
sub
inc
daa
call
aad
scas
movsb
aad
xor
sbb
lret
mov
xlat
popf
xchg
xor
enter
and
ret
daa
imul
push
and
leave
and
out
ss
cld
outsb
and
in
mov
jbe
xor
and
or
jp
fldt
mov
xlat
cltd
pop
mov
fucomp
add
sbb
or
in
xlat
mov
lret
addr16
cmc
jge
or
scas
dec
in
stos
and
push
loop
lea
ja
mov
push
pusha
lret
cwtl
mov
adc
incb
inc
push
movsl
test
scas
scas
js
pop
filds
mov
fcmovb
out
lds
dec
andb
push
lret
jecxz
cwtl
jo
jnp
std
mov
push
cmpsl
jmp
ret
jmp
and
and
mov
inc
fildl
mov
sbb
push
in
rcrl
push
push
popa
divb
out
mov
fdivrs
fsts
cmp
pushf
dec
pop
push
dec
popf
push
icebp
or
push
lcall
push
mov
mov
dec
lret
mov
lods
mov
leave
sti
xchg
sbb
push
das
lods
scas
sub
push
add
bound
ss
inc
adc
int3
and
aas
xor
sub
mov
cmp
adcl
ret
in
and
mov
or
sub
and
cmp
out
mov
popf
cmp
push
sub
or
int3
ret
jp
add
ja
sbb
mov
fcom
in
push
into
xchg
jl
dec
push
lcall
enter
addr16
hlt
lret
imul
jecxz
and
add
das
out
pop
subb
fldcw
add
xor
pushf
xor
iret
and
icebp
push
cs
jne
sub
lock
call
in
sbb
lret
jns
bound
cli
cmc
ret
jl
push
adc
test
insl
jns
push
sti
mov
out
inc
pop
push
icebp
cld
cmpsb
adc
rorl
and
mov
jne
or
dec
frstor
aad
pushf
xchg
xor
cmp
mov
shll
mov
lcall
cmp
mov
mov
xor
mov
sub
xor
ret
lods
fistpll
xor
les
insl
cmc
mov
mov
arpl
and
mov
push
sub
repnz
mov
xchg
and
xor
test
pop
test
outsl
cmp
inc
inc
push
imul
pop
andl
dec
or
push
jecxz
aas
inc
and
xchg
mov
js
rol
imul
push
lods
je
lcall
cmpsb
push
lret
popf
mov
add
and
mov
pusha
data16
movsl
lods
ss
aas
outsb
and
in
adc
out
bound
adc
jo
xchg
fsubrs
cmp
push
fcmovnbe
insb
imul
scas
add
add
out
xor
or
pop
push
jge
or
scas
insb
rcll
lds
stos
out
push
sbb
jb
add
and
das
test
daa
scas
out
mov
loopne
lods
test
rol
inc
jmp
xchg
in
fbstp
sbb
and
dec
mul
inc
pusha
or
jecxz
push
test
aas
jmp
ja
mov
sub
pop
or
mov
push
cli
and
mov
mov
add
and
fnsave
push
pop
pop
xchg
clc
outsl
cmp
sti
imul
fldenv
faddl
aaa
repz
daa
js
xchg
xor
inc
fisttps
push
mov
mov
jl
and
inc
in
xlat
pop
fnstsw
push
mov
adc
push
test
mov
enter
dec
enter
pop
mov
mov
push
dec
mov
and
jbe
inc
loopne
and
xrelease
cld
mov
movsl
adc
fimuls
test
movb
icebp
adc
sarb
fsubl
sub
test
mov
adc
in
mov
cmp
outsb
fsubrs
and
jno
mov
add
in
lcall
lcall
stos
xor
jb
sbb
dec
in
fisttpll
popf
iret
sub
popa
sbb
push
std
cltd
lds
std
jl
sub
jg
popa
js
aam
scas
sub
cmc
cs
jae
xchg
pop
pop
cmp
push
lods
iret
mov
and
fistps
lcall
loope
xor
xchg
mov
cmc
movsb
pminub
call
movsl
daa
push
cs
push
jecxz
popf
inc
sarl
mov
mov
push
cwtl
adc
repz
push
and
fildll
dec
loop
add
push
dec
sti
shl
cmp
xchg
lds
jb
dec
insb
imul
inc
sub
push
in
sub
popf
push
mov
ret
or
mov
pushf
and
stos
sbb
and
xor
adc
and
mov
in
or
popa
scas
push
sarb
jp
ficoms
je
jnp
shll
data16
jns
sbb
or
add
mov
xlat
lds
cld
xor
cmp
dec
lods
pushl
xchg
int3
xor
mov
pop
ljmp
cmpsl
sahf
icebp
adc
mov
aaa
pushf
cmp
add
adc
rep
and
jo
cmpsl
push
cmc
movsb
xchg
std
cmpsb
add
lods
lods
add
and
push
les
xchg
lods
inc
mov
or
lds
test
add
cmpsl
repz
jle
lds
sub
sub
jecxz
and
xchg
xchg
mulb
sbbl
mov
add
push
cmpsl
stos
cmc
pusha
sqrtps
loopne
cmpsb
in
lods
cmp
rorb
dec
add
ljmp
mov
hlt
iret
stc
pop
outsb
cmp
and
aad
xchg
sbb
push
add
and
movsb
inc
scas
adc
and
sbb
mov
inc
sub
jmp
pop
ja
lret
roll
pop
stc
push
mull
out
flds
orb
or
mul
cmc
mov
std
cmp
adc
ljmp
jbe
in
mov
sub
and
xlat
ret
mov
mov
shrl
ffree
cmc
mov
xchg
cmp
mov
loop
loope,pn
hlt
jp
stc
and
ljmp
mov
pop
mov
aad
cltd
pop
inc
sub
in
icebp
rorl
loopne
cmp
stc
mov
adc
arpl
lods
sbb
and
and
lods
jp
adc
add
aaa
xchg
xchg
mov
test
push
popa
mov
pop
mov
insb
sbb
call
fst
mov
xchg
fwait
xor
iret
and
das
aam
add
out
ja
sbb
and
jecxz
out
in
aad
outsb
push
hlt
adc
jbe
lret
push
shll
or
out
jp
clc
dec
aas
fldl
daa
scas
mov
ficompl
movsb
push
xlat
xchg
and
mov
pushf
push
push
int
cmpsl
popf
push
pop
sub
mov
cmp
xchg
inc
shrb
test
jl
scas
push
adc
sub
cmp
mov
mov
push
jnp
stc
cmpsb
imul
lds
in
mov
fisttpll
mov
mov
std
test
mov
inc
inc
in
dec
or
cmp
and
sahf
mov
in
mov
jge
out
dec
cmpsl
and
mov
jecxz
pop
cmpb
insb
dec
out
inc
fwait
loop
inc
pop
mov
fdivp
mov
repnz
mov
jge
cmp
test
pop
iret
jge
cmpsl
and
subb
test
cmpsl
push
push
rorb
add
and
and
xor
jae
push
aaa
adc
cmc
pop
jne
adc
mov
sbb
adc
filds
dec
mov
xchg
cmpsb
inc
jle
lock
test
scas
mov
mov
outsl
daa
mov
push
sbb
mov
cs
push
mov
loopne
mov
cmc
and
xchg
or
and
mov
inc
int3
push
lods
mov
push
dec
shll
je
mov
les
or
mov
sbb
and
jge
cmp
test
scas
test
aad
xor
test
xor
sbb
loope
scas
mov
push
das
int3
add
push
test
xchg
fcoms
mov
rcrl
iret
dec
or
jmp
outsb
pop
mov
addl
mov
inc
lds
rol
aaa
sbb
mov
fnstsw
cmp
sbb
and
sub
loope
xor
jle
loopne
mov
xchg
mov
sbb
fisubs
test
popl
imul
mov
leave
cltd
cmp
mov
push
stos
cld
loopne
cmp
fcomp
movsb
push
shrl
pop
fisubl
jmp
jl
cltd
roll
pop
mov
or
cmp
fnstsw
cmp
or
lret
std
movsl
rcll
dec
lcall
addr16
push
mov
pop
push
imul
dec
test
loop
negb
push
add
shrl
push
xchg
and
xor
jl
cmp
lret
mov
lods
cmc
add
sbb
jge
out
dec
loop
int
scas
jne
sbb
push
push
push
jecxz
test
lea
jecxz
xor
gs
push
mov
jecxz
ret
sbb
mov
mov
jbe
and
mov
mov
out
push
sub
shrb
into
loop
or
ficomps
popa
add
pop
popf
mov
push
cs
bound
lock
lds
int
push
cmpsl
or
scas
lahf
cli
test
loope
idivl
and
ret
das
ret
pop
add
mov
rcrl
jg
xor
out
mov
stos
rcrl
dec
div
cmc
xchg
mov
cmpsl
push
bound
js
pop
adc
cmp
jmp
and
push
sub
pop
ss
dec
push
dec
fistpll
jg
adc
fstl
inc
push
std
xchg
inc
push
nop
clc
cmc
sub
in
mov
push
jb
xchg
std
and
les
stc
addr16
or
or
add
add
movsl
stos
idiv
push
sub
cmc
xor
out
mov
addr16
cmp
cwtl
cs
aad
sbb
out
inc
push
push
daa
mov
mov
adcl
mov
add
hlt
rcll
and
jno
iret
bound
lcall
adc
inc
aam
movsl
jecxz
xor
push
rcrb
mov
nop
in
mov
push
repnz
mov
jo
cltd
or
jle
jno
lahf
cs
scas
mov
lret
jmp
lods
dec
and
mov
pop
inc
enter
stos
and
sbb
mov
ss
lret
cmc
mov
xor
or
call
cmp
mov
add
adc
pop
xchg
jb
pop
bound
add
cmpsb
jecxz
or
int3
ret
jecxz
push
pop
inc
jmp
vucomiss
incl
repz
push
jge
fldt
sbb
and
add
inc
outsl
in
popa
inc
pusha
or
xor
mov
pop
lds
bound
xor
out
xor
add
jl
lcall
stos
sub
orl
mov
daa
adc
cmpsl
inc
sbbl
shl
jnp
fldl
mov
bound
dec
loopne
pop
fcmovne
cld
inc
inc
xchg
push
push
mov
lcall
mov
arpl
or
fwait
in
aaa
xchg
xchg
mov
mov
sub
jge
mov
xchg
pop
dec
or
jmp
cmc
lods
pop
movsb
dec
jb
roll
xchg
mov
fdivp
sbbb
sub
inc
sub
push
enter
cmpsl
shll
add
cmpsl
sbb
push
jmp
shll
lods
and
sbb
les
xchg
fnstenv
xor
pushf
stos
popf
mov
xchg
int
rclb
insb
pop
jns
popa
test
xchg
mov
inc
or
pop
mov
hlt
call
add
and
pop
xor
shr
xchg
mov
out
flds
dec
adc
aas
orb
jmp
inc
cli
push
push
mov
push
mov
je
jno
nop
lds
insb
mov
jg
cmp
add
xor
ds
in
pop
sbb
lcall
push
lods
and
add
xor
xchg
pop
adc
jbe
dec
jecxz
popf
mov
sbb
scas
sub
mov
in
add
pop
xchg
push
ja
shrl
dec
rcr
mov
xor
inc
fs
mov
pusha
push
int
mov
sub
push
mov
mov
das
or
sub
cmpsb
and
xlat
add
jle
cltd
pop
inc
aaa
push
adc
and
jbe
scas
mov
push
pop
sbb
push
xchg
push
iret
push
in
in
cs
adc
dec
push
in
movsl
stos
test
pop
neg
shrl
xchg
push
icebp
das
shr
std
pusha
xor
ss
sbb
adc
hlt
je
shlb
les
mull
cmc
inc
cmp
filds
cli
icebp
sub
mov
xor
repz
ror
xchg
jp
stos
cld
daa
mov
movsl
push
scas
sub
bound
jnp
cmp
sahf
sub
test
es
xor
std
dec
test
popf
mov
fs
in
mov
mov
xchg
jno
cld
inc
push
adc
xor
jnp
mov
mov
push
jo
adc
mov
out
mov
mov
stos
dec
add
xlat
and
mov
add
add
je
sti
add
ds
mov
pop
sbb
mov
xor
test
aam
fisttps
mov
cmc
xchg
sbb
in
movsb
insl
orb
push
imul
push
mov
je
sarb
and
mov
jp
xchg
vmwrite
and
rcll
movsl
sub
push
sbb
aam
or
data16
xchg
int
outsb
and
leave
int
lahf
jae
cmp
and
mov
imull
mov
inc
stos
inc
mov
mov
jp
lret
push
and
jecxz
fldenv
outsl
lea
es
dec
imul
nop
flds
in
mov
sub
jge
cmpsl
or
jne
jb
xchg
cltd
mov
sub
mov
sbb
push
mov
xlat
stos
ds
mov
dec
int
shl
in
ja
dec
xchg
ret
sbb
rorb
mov
jo
pop
shlb
pop
or
in
repz
cmp
push
sub
pop
adc
das
push
stos
mov
dec
pop
or
arpl
push
add
push
loope
mov
std
je
mov
fistpl
sub
mov
dec
or
fstl
in
adc
je
cltd
mov
inc
pop
imul
popa
mov
stos
imul
aad
fbld
push
jmp
inc
jp
jg
inc
iret
sbb
sub
jmp
movb
mov
xchg
jnp
mov
stos
pop
adc
push
shrl
push
lcall
andl
in
sub
mov
add
xor
push
cld
cmp
sbb
xchg
lods
int
dec
and
icebp
or
pusha
fidivs
mov
or
sbb
cs
test
mov
mov
mov
cs
insb
sbb
adc
sbb
and
push
mov
or
out
push
mov
in
push
dec
addr16
mov
fnsave
neg
sub
and
sub
mov
and
fcmovne
iret
sub
in
mov
ss
add
and
dec
addr16
pushf
mov
int3
mov
jo
push
rcll
daa
ds
pop
dec
cltd
movsl
stos
mov
dec
sub
loopne
nop
mov
jmp
fldl
outsl
adc
xchg
out
xor
popa
aam
iret
adc
aaa
mov
mov
jno
xlat
sbb
shll
inc
shll
cmpsl
xchg
push
pop
dec
mov
aam
scas
inc
sbb
decb
ret
jecxz
sbb
or
icebp
adc
das
rcl
lds
pop
jp
push
jl
scas
shr
mov
dec
scas
push
or
repz
inc
mov
xor
scas
shl
cmpsl
out
leave
sbb
push
and
arpl
and
push
mov
popa
and
dec
idiv
xor
sub
cmp
rorb
and
cmpsb
les
mov
sbb
jp
sub
push
mov
shll
shll
loope
mov
mov
and
cmc
andb
aaa
in
dec
shl
mov
xchg
imul
cmp
loope
mull
and
mov
bound
in
pop
mov
outsl
xchg
jns
gs
popa
lods
sub
shlb
std
jle
popf
aad
cmpsl
divl
stos
popf
pop
pop
fcoms
xchg
mov
adc
cmc
adc
mov
imul
and
add
cwtl
and
dec
dec
sub
ror
push
sbb
jne
dec
loope
stos
lahf
sub
sub
hlt
test
repnz
sub
pop
fisttps
and
mov
dec
loopne
bound
sbb
test
jp
sbb
push
mov
push
pop
popf
mov
cmpsb
fs
lods
xchg
push
lods
push
or
mov
pop
lods
rcrl
and
jbe
inc
push
lret
sub
lods
iret
popa
push
or
xchg
jle
xchg
lods
shl
and
lret
lea
movsl
adc
stos
jp
mov
mov
sub
mov
ficoms
sarl
mov
sti
in
xor
mov
test
xchg
push
mov
and
jb
push
cwtl
in
mov
sti
pop
repnz
stos
jmp
xor
cli
or
xorl
stos
and
mov
adc
adc
fcmovnb
xor
adc
fnstenv
jle
pop
roll
cli
and
mov
fisttpl
mov
jmp
lock
add
sbb
jb
scas
pushf
xchg
hlt
stos
out
lock
mov
mov
jns
dec
cmpsb
imul
mov
sub
mov
test
mov
pop
in
add
addr16
hlt
or
mov
pushf
repnz
jnp
aam
mov
out
pushf
ss
jmp
cwtl
lods
je
test
or
cmpsl
test
jecxz
jle
xchg
out
lds
out
ljmp
xchg
popa
inc
andb
mov
and
push
subb
mov
sahf
jne
stos
adc
lcall
sbb
movsb
out
push
sub
out
and
lds
test
and
sub
adc
int
test
xchg
pop
in
lds
scas
or
mov
sbb
jl
xlat
cmpsl
ret
pop
add
stos
aad
sti
adc
xor
and
xor
sbb
mov
push
and
jbe
clc
jge
push
popf
stos
and
cmp
or
and
add
and
ret
pop
movsb
fnstenv
jae
cli
cmpsl
push
mov
in
je
cwtl
fbstp
and
mov
mov
dec
dec
mov
push
pop
and
sub
or
in
xor
mov
inc
int3
xchg
stos
and
popa
push
push
shll
scas
mov
xchg
inc
xor
iret
mov
fbld
lret
notl
mov
test
jmp
nop
std
adc
movsl
cmc
scas
ss
adc
stos
insl
pusha
sbb
sti
scas
imul
jns
mov
sub
push
rorl
cwtl
rolb
mov
or
mov
cmpsb
testb
sub
mov
in
aaa
or
scas
mov
out
repnz
xchg
lods
hlt
sahf
jl
pop
data16
mov
push
dec
and
and
jne
mov
mov
pushf
mov
pop
imul
mov
push
add
xchg
jge
and
jp
scas
fcmovnu
jbe
ffreep
stos
not
rcrl
ffreep
sub
push
fadds
shll
jp
pop
or
push
sti
fstl
xor
dec
adc
add
and
xor
push
cmpsb
xor
sbb
cmp
push
mov
jbe
repnz
imul
jb
cmpsl
repz
ds
cmp
xchg
aad
pop
cltd
cmpsl
mov
push
loope
pop
in
and
ljmp
or
xlat
mov
out
popf
ljmp
mov
sarb
and
xchg
in
loope
cmpsl
and
xor
sub
iret
daa
inc
mov
pop
pop
jle
mov
and
lahf
loope
cwtl
dec
test
outsl
faddl
pop
push
out
sub
in
pop
das
stos
jnp
pushf
out
and
push
push
sbb
dec
ljmp
rcll
add
sti
mov
jecxz
or
mov
and
push
and
add
into
scas
adc
inc
leave
mov
std
cmpsb
stc
fldl
pop
pop
pop
sub
in
out
or
pop
hlt
and
sbb
dec
sti
out
loopne
repnz
cmpsl
xchg
testb
add
jecxz
aad
test
sbb
jo
test
and
das
or
xor
outsb
rclb
loope
dec
popf
sbb
jmp
push
or
pop
cwtl
sahf
xchg
sti
fbld
mov
out
lcall
fstps
or
cs
pop
ss
repz
xchg
adc
sbb
xchg
ds
pushf
rorb
push
movsb
xchg
jae
loope
xchg
stc
insl
mov
dec
add
loope
adc
fnsave
inc
mov
cmc
cmpsl
mov
cmp
dec
sbb
loopne
test
dec
push
push
outsb
and
xchg
pushl
jbe
jmp
jns
or
inc
and
push
scas
xchg
jl
lcall
seto
xor
int
out
sub
adc
dec
test
and
add
mov
push
sbb
out
cld
and
push
stc
xor
mov
incb
ret
lds
lahf
sub
xor
es
stos
pop
lods
inc
sbb
cmp
mov
xlat
jo
mov
aaa
push
sub
popa
and
imul
sub
mov
mov
ja
aaa
ss
mov
rclb
ljmp
outsl
cmpsb
mov
out
out
xchg
repz
fstl
int3
and
jp
jmp
mov
pop
aas
pop
loop
sub
and
ss
lds
jae
scas
sub
shll
or
xchg
nop
jl
iret
lahf
push
adc
test
and
dec
sub
fisttps
sub
loope
adc
in
and
push
movswl
dec
adc
mov
fmuls
adc
jecxz
sub
insl
dec
sbb
mov
lcall
mov
xor
rcl
and
sbb
cmpsl
fwait
imull
push
mov
aad
jecxz
cmpsb
fistl
mov
popa
inc
sub
mov
loopne
sbb
loope
in
sarb
inc
imul
mov
test
negl
fldt
and
subl
lds
xorl
cmc
lcall
les
mov
cmp
je
aas
pop
adc
loopne
mov
scas
and
adc
out
sbb
roll
jmp
jecxz
inc
or
outsb
push
cmc
jmp
std
fadds
pop
sub
fbld
cmpsl
lret
in
xchg
test
shl
xchg
lods
int3
lret
and
jo
cmpsb
sbb
xor
sub
pushf
push
sti
cmpsl
or
inc
dec
iretw
sbb
cs
sbb
push
inc
call
sub
jmp
pop
push
jecxz
mov
test
dec
mov
push
xor
lahf
xlat
loope
sahf
das
mov
ss
loope
movsb
cmp
test
ret
cltd
les
cmpsl
push
iret
xor
ss
test
jno
les
incl
pop
pop
lcall
inc
cwtl
xor
rorl
xor
fnstcw
sbb
add
in
or
sub
mov
lods
pop
stc
fs
hlt
or
popa
popa
pop
cli
sarl
add
sub
push
movsb
jecxz
pushf
in
mov
and
mov
xor
xor
sti
test
cli
sub
pop
sub
xchg
testb
jbe
ret
adcl
xchg
mov
test
loope
inc
xchg
xor
aad
hlt
sub
ret
shll
mov
add
jecxz
sub
xchg
lds
mov
in
push
out
push
repz
or
cs
jmp
mov
mov
push
xor
mov
dec
sbb
cmc
ret
insb
mov
shrl
mov
push
aam
gs
push
loope
inc
leave
les
mov
dec
mov
and
cli
xchg
push
mov
lods
push
adc
cmp
rolb
sub
std
insb
pushf
push
cmc
lds
adc
mov
sahf
mov
nop
or
out
test
stc
imull
pop
add
and
movsb
out
aaa
addl
sbb
adc
mov
into
jnp
jmp
icebp
jne
sub
aad
pop
loop
cmp
and
fcomp
iret
sti
vandnps
aad
mov
sub
adc
adc
and
xor
mov
sub
loop
mov
sub
or
jbe
dec
or
test
sub
lods
mov
shr
push
aad
lods
add
mov
cli
popa
lret
out
mov
dec
mov
mov
stos
mov
push
in
sbb
push
daa
pop
push
in
and
push
jbe
fnstenv
jae
lods
xchg
push
jecxz
xor
fwait
rol
aad
stos
sub
addr16
movsl
sub
pop
jnp
mov
mov
jmp
aaa
lds
repnz
and
popa
or
xchg
push
push
push
popf
shrb
shll
fstps
sbbb
lret
mov
mov
sub
scas
sub
mov
jbe
mov
aaa
lock
jmp
add
mov
and
dec
or
lods
dec
jbe
or
fbld
push
adc
and
inc
lods
fwait
add
ja
mov
test
rcrb
insl
cmpsb
xchg
mov
pushf
imul
mov
popa
dec
and
iret
dec
add
jmp
sbb
in
iret
sub
xchg
jmp
pop
sub
mov
mull
xor
dec
arpl
xchg
popf
pop
mov
mov
cmpsl
int3
mov
xchg
in
std
out
loopne
adc
push
loope
test
add
push
xor
xorb
push
sti
int
mov
out
pushw
and
pushf
add
pop
mov
add
sbb
mov
pop
adc
push
mov
mov
repz
dec
push
stc
cs
insb
xchg
ret
mov
mov
dec
push
clc
lds
xchg
add
outsl
mov
nop
mov
mov
mov
pop
and
add
jecxz
xchg
out
bound
inc
adc
leave
or
inc
xchg
inc
andb
lcall
test
jp
lahf
movsb
pushf
push
add
pop
pop
dec
mov
jnp
mov
fsubrs
and
lods
in
xchg
xchg
mov
jg
and
std
pop
ss
ja
mov
sub
movsl
aas
adc
ljmp
mov
sub
pop
test
mov
icebp
scas
cwtl
fldt
and
fldl
movsl
mov
and
xchg
jno
stc
fnsave
xchg
cmpsl
xor
mov
or
and
mov
jmp
xchg
data16
loopne
mov
jg
cs
pushf
daa
mov
xlat
xchg
loopne
repnz
shrb
inc
cmpsl
roll
shl
and
mov
out
xchg
ret
sbb
jno
push
popf
push
test
shrl
and
pop
aad
in
jecxz
push
je
in
and
inc
imul
mov
daa
pop
test
mov
shll
jne
xlat
sbb
loop
leave
add
inc
push
dec
dec
rorl
cmovle
adc
pop
int3
test
sub
movsl
cltd
mov
dec
icebp
movsl
inc
sahf
adc
pop
sub
movsl
sbb
xor
in
outsb
movsl
dec
mov
popa
pop
or
into
movsl
jp,pn
lret
test
arpl
fwait
mov
dec
movsl
mov
xor
imul
sbbb
cld
in
dec
cmp
mov
test
movsl
push
outsl
iret
cmp
ret
movsl
fcoms
out
test
mov
push
rorb
movsl
cmc
jbe
dec
adc
fisubs
das
dec
jnp
movsl
mov
mov
les
mov
jno
add
nop
sbb
adc
movsl
push
mov
mov
lds
xchg
fisttpll
aad
std
mov
movsl
pop
inc
pop
inc
or
jecxz
jno
xor
in
cs
inc
stc
mov
icebp
aaa
jo
loope
movsl
insb
rcrb
mov
jecxz
pop
xchg
out
push
pop
in
and
sbb
mov
pop
pop
insl
dec
jb
push
fisubrs
cmpb
in
mull
gs
es
mov
bound
leave
ret
pop
in
loope
in
loop
cmp
shll
and
jno
pop
add
shl
lds
out
popa
dec
mov
pop
or
in
push
movsl
sbb
sbb
fcmovu
andl
movsl
insl
xchg
push
stc
cs
inc
movsl
sub
pop
jb
cmpsb
mov
out
gs
sbb
push
mov
int
movsl
test
imul
push
and
inc
mov
icebp
andl
jb
mov
loopne
mov
cmp
movsl
and
call
ss
mov
sahf
or
cmc
cmp
cwtl
movsl
out
mov
or
inc
xchg
adc
pop
xchg
jp
push
jns
lds
lods
dec
sbb
cmc
movsl
xor
les
xorl
movsl
dec
shl
imul
push
mov
jnp
adc
xchg
pop
inc
adc
xchg
imul
mov
andb
push
adc
add
int3
add
xor
stos
sbb
push
in
cmp
outsl
inc
pusha
xchg
fiadds
cmc
adc
mov
or
movsl
imul
addr16
dec
mov
jp
addr16
test
in
cld
adc
inc
aad
mov
adc
movsl
dec
sahf
add
decl
pop
aas
adc
movsl
push
jp
out
jns
imul
push
in
sahf
test
push
push
das
sbb
or
sub
movsl
insl
dec
dec
adc
clc
or
inc
fucom
push
xchg
dec
push
adc
xchg
pushf
mov
pop
add
nop
xor
movsl
cld
lcall
inc
in
push
mov
mov
movsl
sar
xchg
lcall
loopne
mov
testl
cwtl
lahf
mov
movsl
fwait
sub
mov
movsb
lods
jns
adc
aam
push
push
sub
frstor
aas
mov
xor
movsl
jb
inc
popf
lds
mov
aam
data16
pop
loop
and
mov
movsl
popf
ficompl
movsl
ljmp
inc
or
mov
pop
sar
mov
mov
outsl
repz
inc
movsl
ret
and
out
cmc
jecxz
enter
mov
mov
push
loopne
pop
xor
lcall
and
loope
lcall
repnz
inc
movsl
mov
sbb
movsl
jb
xchg
jbe
and
cwtl
mov
lret
pop
jae
pop
mov
sbb
movsl
dec
les
dec
cmp
or
cmp
sub
or
adc
sbb
aaa
mov
xchg
sub
dec
aad
clc
xlat
movsl
mov
jle
push
movsl
mov
cmp
dec
movsl
into
nopl
fiaddl
outsb
push
in
cs
hlt
movsl
das
add
mov
sub
xlat
test
dec
xor
fldcw
dec
jge
test
cs
adc
aad
xor
push
jecxz
mulb
pop
outsl
test
movsl
jb
aaa
popa
leave
add
mov
mov
xchg
cmp
daa
outsl
in
sub
cmp
ret
xor
cmpsl
inc
mov
sbb
mov
cmpsb
test
sahf
push
dec
cs
dec
fisubs
loop
test
notl
cmpsl
lods
xor
pushf
mov
mov
add
movsl
jl
adc
movsl
jo
mov
mov
in
xchg
in
jmp
lods
sub
stc
sub
into
movsl
lahf
mov
iret
out
pushf
mov
jecxz
adc
jb
push
add
es
cli
shld
mov
jecxz
in
xor
and
xorps
int
aad
mov
or
fcomi
sbb
movsl
cmp
ret
out
movsb
lea
movsl
bound
aaa
mulb
loop
mov
hlt
dec
or
out
popf
stos
xchg
imul
mov
movsl
dec
int3
mov
xor
push
push
cmpb
or
or
data16
push
or
inc
pop
movsl
jno
inc
mov
hlt
movsl
lret
push
pop
push
popl
pop
push
inc
gs
lock
mov
cs
movsl
int
scas
xor
cli
movsl
ss
rcrb
test
addr16
stc
dec
mov
movsb
lds
and
mov
repz
mov
jp
pusha
out
sub
sub
fcoms
pop
cmc
ss
cwtl
aad
mov
sbb
dec
fs
movsl
shlb
mov
xchg
test
mov
mov
leave
insl
imul
inc
sub
push
add
jne
mov
inc
mov
hlt
sbb
bound
into
cmpsl
ss
insb
pop
inc
adc
mov
mov
push
push
cmp
inc
movsl
icebp
push
out
mov
cmpsb
sbbl
push
stos
jbe
xchg
mov
test
rol
adc
pop
pop
inc
mov
popa
push
je
mov
movsl
mov
jecxz
pop
movsl
sbb
leave
pop
ja
sbb
cmc
addr16
out
js
mov
sar
sahf
and
adc
or
in
insl
int
mov
jge
pop
jmp
in
out
movsl
test
imul
sti
dec
xchg
shl
xchg
shll
xchg
div
dec
cmpsb
lret
and
inc
data16
pop
scas
decb
movsl
or
clc
daa
cmc
out
push
movsl
xchg
dec
push
test
rcll
mov
aas
jle
push
inc
testb
test
in
lock
in
lcall
inc
ja
data16
mov
dec
js
movsl
and
pop
push
xchg
imul
push
movsl
loopne
push
lock
fsubrs
movsl
mov
sti
shr
add
cmpsl
movsl
js
or
xchg
push
mov
aam
lahf
ret
mov
adc
push
jle
adc
adc
nop
adc
sbb
fisttpll
mov
enter
iret
dec
icebp
in
sbb
lods
dec
movsl
iret
fidivrl
mov
cmp
pop
mov
xor
movsl
pop
and
movsl
aas
dec
ss
sbb
mov
aad
outsb
or
shlb
sub
std
add
popf
add
and
out
movsb
cmp
jns
pop
pop
loope
xchg
call
repnz
cmpsl
shll
sbb
ja
aas
sbb
gs
jbe
andb
jae
mov
cmpsb
movsl
mov
jno
and
xchg
inc
push
ret
xor
bound
mov
ja
xchg
movsl
and
fcmovbe
rcrl
cmpsb
in
movsl
ret
mov
mov
addr16
cmp
ljmp
imul
sub
xlat
jg
movsl
mov
hlt
aad
in
ljmp
mov
xor
ffreep
push
jmp
loop
inc
jge
sbb
movsl
test
imul
sub
xchg
in
sub
add
movsl
insl
clc
incb
jle
movsl
xchg
fcompl
mov
lahf
movsl
outsl
fnstcw
dec
int
mov
push
in
mov
arpl
lret
xchg
rolb
movsl
in
mov
mov
in
fisubrs
imul
or
add
mov
xor
add
xchg
in
lds
xorb
lea
sti
add
aad
ficompl
push
jo
ret
jge
inc
fistpl
push
iret
cmp
fidivs
push
mov
pop
mov
mov
dec
or
aad
fsubrs
mov
mull
movsl
pop
shll
enter
ljmp
pop
xchg
fimuls
cmp
nop
cmp
pusha
adc
mov
push
les
int3
loop
popa
mov
xchg
nop
mov
movsl
or
pop
popf
outsl
out
adc
adc
inc
aam
vcomiss
lods
pop
out
movsl
in
call
rcrb
je
fwait
sahf
mov
push
mov
jbe
jae
movsl
and
lret
mov
sub
mov
loope
imul
xor
int
pop
leave
arpl
xor
inc
in
pop
bound
rorb
mul
sub
jno
mov
inc
mov
xchg
movsl
mov
fisubl
xor
movsl
fstpt
mov
movsl
fsubs
push
ss
mov
cmp
xor
mov
xchg
sub
add
mov
movsl
ja
int3
sbb
jecxz
push
movsl
sbb
shr
out
push
push
movsl
lods
push
sbb
shrb
movsl
fsts
add
xchg
mov
shlb
ds
aad
movsl
push
xor
mov
movsl
into
adc
icebp
insb
daa
sbb
add
mov
mov
and
lods
adc
and
add
sarb
mov
int3
mov
cmp
test
sahf
rcl
inc
mov
mov
mov
add
mov
mov
mov
mov
push
jne
add
mov
out
mov
js
add
movsl
inc
sbb
pop
mov
mov
in
ret
fldenv
andb
pop
push
movsl
jl
cmc
push
out
sub
add
add
push
imul
mov
mov
stos
rorb
sbb
movsb
sbbb
out
push
scas
and
mov
int3
and
xlat
imul
jo
rolb
lahf
add
lds
mov
fs
movsl
inc
or
in
mov
add
jp
pop
and
or
pop
sub
js
sub
movsl
add
jbe
movsl
pushf
mov
sbb
xchg
aam
mull
hlt
adc
push
movsl
sub
pop
push
ja
sub
lea
mov
enter
pushf
popfw
cmp
leave
stos
movsl
std
arpl
popa
jle
leave
fisubrs
leave
movsl
movsl
adc
addr16
cmc
add
push
sub
movsl
add
test
movsl
or
or
lret
daa
cwtl
movsl
adc
pop
repz
pop
and
mov
imul
xchg
popa
push
fs
sub
mov
pushf
inc
mov
cmp
movsb
and
add
jecxz
popf
in
loope
arpl
in
repnz
pop
aad
dec
xlat
jbe
mov
xor
movsl
mov
cld
arpl
mov
lods
jns
mov
xor
mov
cmpl
rclb
std
xchg
mov
fidivl
pop
pop
sub
inc
or
cmp
mov
mulb
lcall
lods
clc
cmp
pusha
shld
xor
xlat
movsl
test
cmp
push
inc
outsb
fucom
mov
dec
jno
xchg
arpl
cmp
scas
cwtl
jmp
std
out
mov
mov
shr
push
pop
mov
movsl
pop
push
add
mov
dec
pop
test
xor
sub
incl
mov
insb
fsub
sbb
stos
in
pop
add
daa
inc
popf
mov
out
cmp
and
movsl
xchg
push
addb
rcrb
cli
test
push
scas
lcall
rolb
inc
movsl
or
jo
mov
xchg
mov
imul
sub
jmp
dec
adc
shll
jae
xchg
icebp
stos
mov
xchg
das
js
aad
xchg
mov
xchg
iret
xor
mov
sbb
scas
add
movsl
bound
out
lods
pop
mov
insl
test
mov
lret
outsb
orb
stc
jecxz
leave
imul
and
jns
push
sahf
xchg
sbb
pop
or
in
scas
cltd
dec
push
xor
mull
and
adc
bound
or
loopne
inc
sub
loop
mov
movsl
iret
or
xor
mov
mov
sub
stc
daa
imul
andl
movsl
je
push
sub
andl
movsl
ror
out
stc
push
cwtl
mov
arpl
xlat
lret
sbbb
shlb
gs
movsl
push
xchg
sti
imul
int
pop
mov
pop
push
mov
or
movsl
cmpsb
insb
dec
push
and
movsl
pop
arpl
jb
lea
loop
or
xchg
pusha
aam
jl
movsl
sbb
add
mov
aad
cmc
sahf
shll
mov
out
add
in
cmp
stos
out
movsl
xchg
add
movsl
pop
sbb
leave
mov
rol
test
movsl
mov
jns
xor
jb
gs
xchg
dec
fs
sbb
push
pop
gs
mov
scas
adc
sar
movsl
lds
icebp
push
mov
aas
mov
inc
aad
bound
add
jo
loop
inc
stos
sub
movsl
stc
test
fldl
movsl
xor
inc
stos
lods
push
mov
sub
xchg
mov
movsl
enter
loopne
xchg
mov
or
sbb
lds
ljmp
cmpsb
movsl
shl
cmp
pushf
bswap
movsl
adc
in
dec
iret
or
cmc
jnp
xor
movsl
pop
pop
lods
idivb
pushf
mov
imul
roll
sarl
loope
dec
fs
adc
add
dec
fldenv
out
push
cmpsl
movsl
xchg
outsb
jmp
dec
insb
pop
movsl
adc
xchg
sbb
data16
jle
xor
scas
in
add
pop
pop
xor
enter
inc
shll
mov
add
xchg
mov
hlt
and
mov
mov
mov
pusha
out
shlb
shll
jns
aam
jbe
mov
adc
out
jne
movsl
add
into
nop
or
int
movsl
shll
pop
push
mov
orl
lds
cwtl
arpl
movsl
push
cmp
lahf
movsl
es
mov
mov
daa
xchg
insl
xchg
movsl
pushf
loop
insb
mov
repz
jmp
mov
push
outsb
and
cmp
sub
stos
inc
popf
mov
lcall
xchg
mov
and
movsb
mov
scas
jmp
mov
push
repnz
movsb
pop
mov
movsl
int3
mov
or
into
jbe
sub
movsl
mov
hlt
mov
fildl
mov
and
in
scas
test
ja
push
movsl
data16
orl
mov
cmp
daa
enter
movsl
jg
adc
mov
fcmovnb
mov
fidivs
add
popf
jge
cmp
mov
inc
sub
ds
xlat
movsl
push
test
cltd
adc
mov
es
pushf
jl
mov
mov
xchg
gs
sahf
loop
push
out
mov
jge
xchg
mov
aas
xchg
test
movsl
xor
test
lcall
adc
adc
jnp
fs
sub
jbe
mov
mov
movsl
pushf
stos
mov
dec
cmp
int3
hlt
xor
aas
roll
mov
xlat
std
out
lods
mov
add
das
lds
cmp
jge
xor
test
rcll
push
push
push
imul
add
movsl
xchg
jbe
adc
jae
dec
mov
lea
fcmovb
mov
test
jg
xchg
dec
movsl
add
lcall
fmul
dec
pop
cmpsb
jno
push
mov
mov
stos
cltd
test
aaa
mov
pop
xor
push
sbb
push
movsl
jae
pop
and
fstpl
std
lds
pop
arpl
and
dec
sub
xor
movsl
js
cmp
adc
pushf
jl
cmp
mov
jg
fs
loop
pop
in
push
xchg
movsl
or
jg
and
cs
jbe
sub
aam
mov
ret
inc
leave
movsl
push
mov
and
and
stc
lds
push
test
mov
inc
or
movsl
lret
lds
xchg
iret
out
movsl
mov
stos
and
lock
movsl
sub
push
movsl
bound
loope
aad
pop
jae
mov
addr16
movsl
jp
in
mov
fwait
insb
and
mov
lds
pusha
cli
or
fcoms
adc
in
ljmp
xor
xchg
in
pop
push
insl
fs
gs
out
rcr
loope
movsl
lahf
sub
cmpsb
iret
mov
leave
adc
movsl
in
sbb
mov
mov
add
movsl
jbe
rol
mov
mov
pop
loop
jnp
lahf
dec
movsl
into
scas
out
insb
xor
cmp
pop
jb
mov
movsl
cmpb
add
add
in
xlat
jo
pop
shl
stos
push
fnstcw
lods
add
movsl
data16
lds
int
movsl
mov
add
xor
mov
jge
jnp
sbb
sub
cmpsl
or
cmc
test
out
cs
test
cmp
movsl
adc
mov
pop
hlt
mov
mov
leave
push
pop
xchg
mov
movsl
out
lods
and
add
xchg
push
sarl
rep
das
enter
or
cs
mov
cld
pop
clc
ljmp
push
sbb
movsl
jge
pop
dec
cmp
test
or
xor
pop
in
inc
sahf
mov
xor
sahf
ja
aas
mov
movsl
fcomip
and
out
xchg
mov
outsl
in
xchg
mov
mov
sub
mov
scas
xor
jns
jne
movsl
aam
fwait
mov
adc
jl
aas
jp
mov
and
test
push
sub
sbb
jo
fldcw
data16
in
lcall
pop
pop
std
push
xchg
mov
fildll
ficoms
mov
sub
imul
xlat
movsl
xchg
xchg
or
cmpsl
mov
repz
call
mov
int
movsl
outsb
xor
push
mov
movsl
sub
in
adc
push
cmp
add
sti
push
mov
movsl
push
push
movsb
in
arpl
movsl
xlat
shl
movsbl
jnp
push
out
imul
movsl
or
sbb
jbe
movsl
andb
push
sahf
xor
movsl
mov
cs
movsl
mov
in
push
popf
movsl
and
leave
xchg
inc
cmp
adc
xchg
or
fs
addr16
fbld
sub
movsl
ret
sub
cmp
add
out
push
jle
int3
popa
frstor
movsl
sbb
cmp
lcall
clc
bound
movsl
ret
addr16
or
inc
movsl
push
cmpsb
inc
fcompl
mov
movsl
out
pop
jns
cwtl
ret
ret
inc
xor
or
movsl
jge
rorb
jg
mov
push
sbb
imul
mov
dec
sbb
js
sbb
popa
sbb
fsubr
repz
push
fldenv
popf
push
stos
in
xor
movsl
out
push
adc
xchg
shl
adc
mov
fs
lods
xchg
push
mov
inc
ficomps
std
in
sbb
les
mov
cmp
mov
and
mov
popa
adc
daa
mov
aad
icebp
mov
movsl
ss
dec
xchg
mov
jo
pop
jp
in
les
jle
push
cmp
iret
sbb
push
jno
test
lods
stos
test
fsubrs
mov
pop
ret
cli
add
fldl
movsl
mov
lea
and
ss
leave
std
push
adc
ljmp
in
or
jne
sarb
enter
ret
bound
cmp
jg
mov
scas
loop
ret
sti
push
sbb
ret
mov
or
fidivl
loop
jecxz
mov
push
movsl
es
push
sbb
stos
fldl
cld
jl
lds
movsl
fdivr
ficompl
sbb
lret
rolb
pop
xor
ljmp
dec
xchg
dec
mov
cs
xor
int
filds
mov
insb
fnstsw
pop
mov
cli
push
daa
dec
xchg
pop
movsl
out
jecxz
pushf
jb
arpl
pop
in
pop
mov
leave
dec
stos
pusha
in
jo
int3
and
and
jmp
pop
movsl
sbb
cmc
mov
shlb
movsl
je
das
out
test
mov
cwtl
mov
movsl
mov
imul
sahf
dec
leave
jnp
aad
push
xchg
js
or
movsl
push
sub
movsl
adc
cld
or
shlb
push
ds
into
lock
mov
int
push
mov
sbb
movsl
pop
adc
jge
cmp
icebp
pop
lods
data16
movsl
daa
add
in
jo
movsl
pop
cltd
stos
pop
lock
cmp
test
mov
mov
movsl
lds
lods
sub
movsl
cli
mov
mov
mov
pop
push
mov
pop
sbb
addr16
movsl
aad
ljmp
mov
shl
scas
in
gs
in
adc
mov
or
sarl
outsl
movsl
mov
add
and
push
movsl
jl
dec
imul
inc
pop
jp
add
shlb
gs
sarl
rolb
pop
movsl
add
xchg
inc
fisubl
jge
mov
aas
push
push
insb
lret
addb
pop
mov
xchg
outsl
movsl
or
stos
daa
xor
loop
xchg
in
nopl
jmp
ja
jecxz
mov
mov
adc
adc
in
xchg
mov
pop
xor
mov
fwait
in
addr16
out
in
inc
mov
pmulhw
mov
push
aam
movsl
in
mov
clc
cmovle
movsl
cltd
cmpsb
and
cli
mov
lret
pop
mov
and
enter
data16
popf
jge
push
pushf
arpl
jecxz
sbb
or
ljmp
xchg
mov
pop
xchg
sub
jb
push
xchg
and
or
cwtl
fdivs
repz
mov
fsubl
push
mov
lods
sub
or
movsl
pushf
sbb
pop
add
inc
xor
add
movsl
mov
dec
dec
push
movsb
mull
fstps
push
ficomps
push
sbb
lret
cmpsb
movsl
jbe
push
loopne
dec
cmp
gs
mov
push
jmp
movsl
and
xor
in
push
iret
mov
cmp
and
fcmove
inc
mov
sub
into
andb
push
repnz
loop
mov
cmp
movsl
jo
sub
mov
outsl
scas
mov
out
dec
incb
pop
stc
mov
vmaxsd
mov
movsl
ret
add
inc
add
xchg
fs
ret
int
call
out
lea
mov
addl
inc
mulb
test
loopne
push
cmp
test
jno
mov
sbb
insb
push
movsl
lret
stos
out
sahf
inc
jge
out
notl
lds
mov
rcrb
hlt
sbb
mov
sub
stos
cmp
movsl
into
pusha
cmpsl
mov
movsl
inc
iret
les
movsl
lcall
pop
movsl
xor
inc
pusha
pmaxub
lea
mov
xchg
cld
push
lcall
inc
cmp
ja
rclb
std
adc
and
jno
jo
lods
jb
jg
bound
pop
ja
scas
mov
push
aas
dec
in
xor
xor
cmp
jo
fsubl
jmp
pop
mov
scas
inc
lret
aaa
movsl
mov
mull
test
cmp
gs
rcl
pop
test
mov
loop
outsl
fists
and
orb
fwait
aas
push
stos
mov
cmp
mov
lret
mov
mov
lea
sbb
fsts
mov
push
xor
movsl
stc
jns
pushf
inc
in
mov
sub
rclb
outsl
gs
push
mov
or
int
inc
push
push
imul
push
pop
xor
mov
test
in
aam
movsl
jb
xor
push
cli
lcall
test
cmp
fldt
mov
fadds
xchg
mov
push
in
lock
pop
test
orb
iret
movsl
outsl
in
int3
mov
cltd
jp
and
and
pop
push
mov
push
cmpsl
movsl
lods
jne
push
jecxz
scas
movsl
pop
sarl
mov
adc
jg
aam
jnp
mov
push
pop
insb
inc
mov
sbb
pop
dec
sahf
mov
and
icebp
pop
sbb
mov
xchg
jo
leave
lds
loop
enter
incl
movsl
lds
sub
inc
pop
mov
ja
je
loope
adc
sub
in
stos
push
daa
mov
sbb
sarb
jecxz
xchg
pop
ljmp
add
test
leave
int3
adc
jge
shr
data16
pop
xor
fbld
out
lgs
leave
fstpl
bswap
fld
inc
lods
jbe
das
in
pop
rolb
andb
loope
inc
movsl
dec
or
or
adc
jne
xchg
push
lds
push
add
movsl
pop
xor
test
shrl
bound
cmp
movsl
in
push
and
stc
xchg
jmp
jno
in
divb
rep
mov
mov
pop
cwtl
xchg
outsb
pop
adc
movsb
lcall
movsl
add
fwait
dec
mov
xchg
mov
sar
xor
mov
push
aam
mov
mov
adc
shlb
fsts
sub
nop
jae
xor
lret
pop
sub
and
enter
scas
data16
fsub
push
xchg
or
xor
jbe
add
loop
inc
imul
mov
add
mov
xchg
enter
sahf
inc
imul
test
xchg
xchg
mov
push
rorb
lds
inc
imul
mov
fs
and
mov
lods
insl
movsb
mov
in
jmp
adc
push
sbb
addr16
mov
sbb
sbb
lods
jle
sbb
and
mov
lds
fs
push
imul
or
add
movsb
or
xchg
xor
cmp
das
fisubl
popf
jmp
adc
rolb
stos
fsubs
ret
pop
movsl
xor
icebp
pop
rorb
outsl
movsl
push
sub
sbbb
shrl
jne
hlt
xchg
pusha
mov
movsl
loope
sbb
cmp
js
test
cmp
stos
jmp
out
int3
jge
pop
and
movaps
movsl
movsl
lahf
sbb
movsl
cmpl
mov
adc
sub
dec
int3
out
popa
movsl
add
hlt
dec
call
addr16
daa
jp
int
movsl
dec
cmp
lahf
adc
pop
jo
shlb
test
movsl
into
dec
push
xchg
adc
mov
stos
loop
cmpsl
mov
add
les
movsl
into
roll
inc
bound
jmp
mov
cmpsb
mov
pop
pop
mov
and
push
lahf
sbb
push
pop
mov
xchg
in
addl
or
lods
mov
ret
call
cmp
in
enter
into
in
dec
push
incb
push
sbb
xchg
pop
sahf
push
push
adc
jns
shr
pop
hlt
dec
cwtl
scas
adc
movb
push
insl
out
cmc
movsl
repz
or
lcall
sbb
insl
xchg
movsl
loop
faddl
movsl
or
mov
movsl
or
adc
hlt
mov
jns
call
dec
movsl
push
push
ja
ss
stos
sbb
movsl
inc
pop
jne
shlb
repnz
mov
aad
sbb
add
xlat
in
jno
gs
test
subb
sub
movsl
int
cmp
clc
outsb
movsl
decb
push
in
dec
cmp
xchg
in
adc
push
jb
sub
and
or
dec
mov
test
movsb
leave
fildl
rolb
sbb
inc
inc
ss
movsl
cltd
inc
cmc
sbb
push
out
jmp
leave
das
out
sub
test
pop
int3
jp
dec
jno
cmp
scas
sarb
mulb
out
movsl
push
mov
leave
enter
test
fnstenv
movsl
add
pop
into
fwait
mov
xchg
insb
rcrl
pop
mov
jmp
adc
lahf
cmp
add
std
rclb
cmp
test
push
inc
movsl
mov
inc
jle
rolb
sub
jne
je
push
inc
mov
mov
sub
adc
addr16
add
cmp
fprem1
pop
push
mov
jbe
mov
out
in
dec
adc
mov
das
mov
xor
pop
jl
mull
in
mov
outsb
add
movsl
aad
mov
das
movsl
jb
add
inc
xor
movsl
mov
push
sti
js
iret
dec
movsl
jmp
data16
cs
mov
jmp
into
daa
push
movsl
jl
cmpsb
pop
sbb
mov
movsl
cmp
pop
or
das
mov
ret
push
in
lcall
jo
ja
mov
cmp
arpl
mov
testb
lea
mov
cltd
hlt
fwait
movsl
cmpsb
adcl
imul
aam
call
stos
fsts
add
jne
movsl
fucomip
or
test
jmp
in
mov
jno
jge
pop
lods
mov
adc
push
arpl
inc
adc
out
or
imul
filds
movsl
roll
fstpt
mov
in
rolb
or
scas
cmp
repz
adc
mov
int
imul
add
mov
add
rcrb
data16
mov
mov
jmp
repnz
push
mov
sbb
addr16
inc
sub
jbe
jo
push
xor
lret
jae
outsl
leave
shlb
adc
imulb
icebp
movsl
lods
or
popa
insb
movsl
repnz
popf
movsl
fimull
and
mov
addr16
cmp
insl
jle
push
pop
frstor
dec
or
mov
orb
cltd
loopne
daa
hlt
push
movsl
push
inc
mov
sbb
mov
xor
sbb
js
test
and
jae
sahf
outsl
in
ja
sbb
testb
xor
shlb
mov
cmpsb
push
fadd
dec
cltd
cmc
mov
cmp
lds
inc
stos
test
jns
adc
mov
xchg
mov
movsl
lods
or
xchg
dec
cmc
xchg
fiadds
cmp
nop
dec
cmpsl
or
add
in
inc
or
add
loopne
movsl
outsl
je
scas
adc
jb
inc
push
idivl
lods
movsl
dec
pusha
mov
loope
xor
ds
jp
push
movsl
pop
inc
into
sub
movsl
jno
dec
dec
lods
jg
pushf
push
out
movsl
test
push
adcb
out
pop
dec
movsl
jecxz
pop
popa
push
sub
mov
scas
std
or
pusha
xchg
pop
push
sub
mov
inc
ret
inc
pop
es
out
cmp
adc
andb
push
jg
movsl
in
loop
xchg
lret
sbb
or
inc
iret
pop
or
mov
sahf
sbb
push
add
movsl
push
fildll
sbb
lret
adcl
xchg
stc
inc
scas
push
inc
shl
pop
lret
in
mov
movsl
push
fldenv
xchg
lock
adc
int3
cs
test
shll
in
std
mov
xchg
movsl
popa
mov
cmp
pop
leave
in
jb
mov
fmuls
cmp
mov
fs
jae
mov
sahf
sub
das
jbe
outsb
add
mov
dec
jecxz
xor
lahf
dec
movsl
out
dec
or
and
xchg
mov
shll
jp
adc
and
jl
sbb
adc
dec
jmp
popa
test
insb
xchg
rcrb
push
ds
xchg
pop
mov
sti
inc
sti
xlat
mov
mov
movsb
jmp
xor
mov
sub
pop
bound
mov
stos
cmp
push
inc
icebp
mov
inc
pop
or
push
xlat
mov
cwtl
movsl
ret
and
ljmp
add
or
xor
pop
inc
xlat
push
pusha
mov
sahf
cmpsl
adc
sub
pop
sub
frstor
cmpl
dec
fucom
in
cmc
pop
lock
sub
out
adc
xlat
push
and
cmpsl
mov
sbb
out
bound
sahf
popa
mov
cmpsl
frstor
cmc
bound
and
push
movsl
sub
jns
adc
inc
pop
mov
add
push
jle
push
inc
lret
lahf
sub
mov
in
sbb
dec
je
popf
loope
mov
and
cli
or
pop
sbb
rorb
jae
addl
mov
push
leave
push
mov
in
mov
pop
add
sbb
ror
pop
jns
jle
mov
leave
cmc
aad
rcrb
movsl
icebp
addr16
shr
jmp
xlat
shll
sub
mov
dec
imul
mov
xlat
test
es
scas
out
adc
mov
inc
mov
testl
cmp
clc
xor
jge
cmc
ret
sub
mov
mov
inc
fmul
adc
sub
mov
add
sahf
push
sahf
pop
xor
mov
lcall
sbb
mov
or
cmc
gs
push
sub
and
shlb
mov
ret
sbb
push
xor
sub
rorb
out
cmpsb
lock
mov
nop
aaa
pusha
sbb
pop
popf
lea
jp
or
lcall
std
mov
cmp
shlb
sbb
pop
pop
push
push
xlat
frstor
ret
repnz
adc
and
pushf
adc
ret
es
shlb
mov
scas
xlat
scas
movsl
mov
pop
cwtl
adcb
les
enter
add
xor
popa
data16
cmp
mov
test
xchg
movsl
sub
shl
xor
shl
cmp
pushf
movsl
js
push
outsl
sbb
es
mov
or
arpl
mov
inc
imul
insb
mov
pushf
cmp
dec
xchg
push
sahf
pop
stos
sub
adc
ret
add
mov
pop
movsl
enter
js
imul
lods
adc
cmp
adc
lods
das
movsl
scas
jae
jns
jb
jmp
add
and
ja
pop
mov
inc
aad
dec
imul
xchg
mov
push
loope
out
movsl
pop
push
sahf
mov
movsl
adc
pop
fisubs
jno
cmp
je
or
in
xchg
fldenv
jge
xchg
cmpsl
mov
xchg
push
mov
pop
addl
rolb
roll
mov
pop
xchg
das
in
mov
cmp
inc
imul
pop
ret
jne
mov
rol
xorl
fnstsw
sub
nop
mov
push
mov
imul
xor
push
add
cmpsl
lods
int
pop
insb
mov
jle
rcrl
movsl
dec
call
push
divl
mov
lods
seta
cmpb
bound
lock
adc
cmp
mov
ljmp
andl
mov
daa
cld
or
mov
xchg
mov
push
jg
movsl
adc
xchg
push
xchg
mov
sbb
mov
add
adc
cmp
arpl
lea
mov
add
in
pop
push
or
dec
std
cld
dec
sbb
outsb
inc
cli
fsubl
mov
sbb
sbb
push
pop
jns
or
aaa
popa
std
fisubs
xlat
push
push
mov
movsl
fxch
mov
andl
push
into
sub
inc
bound
inc
push
mov
or
pop
xchg
xor
cmc
mov
sub
sub
in
pop
bnd
in
nop
cmp
or
pop
cmp
mov
imul
in
inc
cli
dec
sub
sbb
out
mov
out
daa
arpl
rcrb
fwait
movsl
xor
pop
xchg
loop
js
das
mov
outsl
cmp
jo
lds
push
pop
pop
stc
dec
stos
push
mov
sbb
lds
inc
in
mov
pop
inc
and
ret
jo
ds
nop
in
inc
mov
leave
jns
jno
mov
mov
test
mov
jecxz
movsl
xchg
mov
cmpsl
mov
mov
movsl
xor
in
js
push
rclb
insb
repz
pop
push
push
push
sbb
not
cld
cltd
inc
lds
jae
mov
adc
orl
add
cmp
into
in
imul
int
pop
dec
inc
jge
js
movsl
rcl
pop
or
fcmovnu
dec
pop
je
xor
lea
push
addr16
sti
movsl
dec
inc
add
push
and
fisttps
dec
movsl
inc
imul
sti
rclb
sbb
xor
xchg
or
movsl
dec
pushf
inc
mov
movsl
and
scas
cli
aas
movsl
add
out
mov
mov
movsl
jo
int
sub
jns
adc
data16
pop
stos
adc
mov
mov
movsl
push
mov
fldenv
nop
xchg
pop
xor
cmp
jnp
lret
push
jecxz
dec
mov
subl
or
ret
mov
push
xor
mov
insl
arpl
in
mov
push
movsl
fimuls
js
push
inc
nop
ljmp
gs
loopne
imul
loop
imul
movsb
push
popf
adc
es
scas
test
mov
incb
dec
sarl
cmp
movsl
xchg
push
movsl
enter
ljmp
mov
adc
das
sub
mov
stc
pop
jns
push
sub
xlat
add
mov
addr16
test
repnz
call
lcall
jg
mov
loope
outsl
mov
vmread
xchg
orl
in
repz
sahf
je
xor
fdivrs
sti
jge
imul
fwait
add
popa
rorl
gs
mov
aad
insb
stos
pop
lea
or
or
call
xchg
fs
jne
xchg
mov
mov
xor
jle
mov
loopne
movsl
leave
in
cmpsb
or
scas
mov
pop
add
ror
movsl
jecxz
leave
addb
sahf
movsl
aas
cmp
cmp
test
gs
call
sub
add
mov
into
dec
inc
pop
adc
lret
ljmp
in
js
push
jne
jecxz
cmp
cmpsl
ljmp
add
push
in
jnp
dec
shll
movsl
lea
jl
sub
lds
pop
pop
cli
cmp
cmc
mov
and
xor
inc
mov
push
bound
and
or
ljmp
sbb
je
es
imul
clc
aaa
ret
rcl
cmc
push
ds
imul
lret
adcb
mov
adc
ss
and
dec
or
and
in
fdivrs
sbb
push
lret
movsl
cmp
or
mov
jp
and
cmp
enter
in
std
imul
or
xor
stc
fcomps
movsl
hlt
cmp
cli
xlat
shld
icebp
xor
mov
das
out
mov
mov
addr16
pop
fwait
enter
lock
pop
adc
mov
ret
movsl
adc
dec
xor
inc
mov
xchg
lcall
push
in
dec
add
pop
sbb
jb
test
cmp
adc
pop
in
cmc
lret
push
sti
dec
pop
jl
and
mov
cs
sub
out
and
fstl
jle
mov
xor
ljmp
sub
or
fwait
sbb
and
pop
pop
push
int
xor
int3
xor
fisttpll
scas
cmc
lods
lcall
xchg
cmpsb
fiadds
adc
subb
sbb
xor
loop
jns
imul
loopne
mov
mov
scas
lahf
movsl
xlat
lock
pushf
xchg
xor
je
cwtl
aam
movsl
xchg
mov
in
push
dec
push
pop
movsl
mov
sbb
push
std
xchg
scas
jge
mov
cmp
inc
sbb
push
sbb
mov
cmp
or
pusha
mov
pop
or
dec
clc
sbb
aam
pushl
popf
dec
imul
movsl
repz
mov
in
xor
lcall
push
inc
mov
lods
daa
mov
ds
inc
xchg
bound
jnp
push
in
adc
mov
sahf
mov
mov
push
fcmovnb
sub
ficompl
xor
mull
mov
icebp
push
lret
or
and
sub
jl
fwait
and
outsb
xchg
xchg
and
or
sbb
cmp
je
test
sbb
pop
ret
shrd
push
stos
loope
out
cmc
shlb
xchg
add
push
mov
imul
std
xor
iret
jecxz
pop
sub
cli
mov
push
clc
and
in
dec
push
mov
xor
divl
sbb
hlt
loope
sbb
sub
adc
lods
dec
cmc
and
pusha
or
add
rorl
push
icebp
pop
mov
in
movsl
push
int3
cld
lret
xchg
push
test
movsl
dec
add
icebp
sti
mov
mov
dec
or
leave
cld
xorb
in
jecxz
test
addr16
stos
pop
pop
loopne
jb
dec
sahf
jb
cmc
sti
jp
sbb
movsl
mov
dec
mov
pop
inc
mull
push
lock
or
and
inc
push
js
cmp
add
adc
movsl
addl
insl
push
movsl
aam
inc
jb
addr16
int3
fnstsw
sbb
iret
fxch
lds
push
loop
adc
and
movsl
and
data16
popa
movsl
ss
xlat
lret
testb
sbb
jle
adc
test
movsl
xor
add
rol
das
rcrb
movsl
jne
push
jbe
adc
fs
mov
jae
inc
in
adc
jmp
mov
lds
or
test
scas
pop
les
movsl
ljmp
or
neg
xchg
leave
sub
mov
out
lret
push
movsl
inc
sub
xchg
and
mov
out
popa
push
mov
jmp
xor
jmp
movsl
push
mov
adc
xor
inc
add
shrl
xchg
mov
lcall
movsl
stc
leave
adc
mov
mov
fstpl
movsl
je
jnp
mov
sub
adc
pop
aaa
testl
outsl
hlt
lea
add
add
movsl
in
aaa
mov
adc
js
dec
insl
inc
fwait
outsb
jno
push
bswap
bound
inc
jge
bound
out
sub
jmp
pop
lock
pop
xchg
and
clc
mov
fistpl
xchg
movsl
xor
sub
add
out
mov
dec
js
xor
in
lea
adc
aas
orl
jae
lock
mov
sbb
cmp
mov
dec
jbe
leave
jl
movsl
ss
jp
test
arpl
movsl
mov
xchg
cmp
cmpsl
ja
add
lods
inc
movsl
jbe
bound
jg
xchg
movsl
adc
enter
inc
movsl
loop
scas
xchg
into
rorl
out
popa
inc
js
cmpl
stc
ja
movsl
sbb
adc
les
shll
pop
pusha
lahf
insb
lods
sub
add
movsl
inc
and
xor
sbb
movsl
aad
rorl
movsl
or
jle
in
mov
mov
ret
push
mov
dec
inc
movsl
sti
cld
sub
jmp
data16
pop
fcompl
ss
inc
imul
mov
lods
jnp
movsl
fcompl
sbb
mov
js
sbb
pop
iret
aad
lods
pop
out
movsb
fwait
movsl
fcmovnu
add
push
ret
sbb
cmp
in
das
push
les
adc
stos
test
movsl
iret
imul
movsl
shll
mov
xlat
mov
cltd
inc
movsl
sub
pop
pop
add
movsl
ss
jno
test
out
fldt
sub
movsl
xor
mov
mov
jns
xchg
xchg
and
sbb
pop
stc
mov
arpl
rorl
jns
and
sbb
popa
jp
sbb
cmpsb
push
push
xlat
movsl
dec
dec
shlb
das
sbb
movsl
add
popf
cmpl
jle
push
clc
lret
jg
xchg
cld
add
lods
jnp
in
adc
jle
scas
inc
shld
jecxz
jb
mov
cltd
movsl
cwtl
inc
sub
stos
xor
sub
test
mov
in
aaa
les
movsl
adc
lea
and
pusha
outsl
inc
fsubrs
roll
incl
movsl
into
in
xchg
xor
fisubs
rclb
test
mov
test
inc
add
jecxz
int3
sahf
sbb
cmp
stc
loop
jp
movsl
add
jecxz
movsl
fstpt
movsl
xor
adc
lret
adc
or
cwtl
mov
xor
stc
push
movsl
popw
push
test
out
sbb
fsin
lock
shll
adc
out
enter
es
movsl
pop
shrb
fcompl
test
movsl
jnp
pop
sbb
xchg
out
loopne
jp
fcomip
add
jle
inc
jno
and
stos
mov
adc
pop
cmc
mov
dec
movsl
and
fucomi
add
push
btr
add
rorl
gs
rorl
mov
dec
push
push
adcb
js
sub
in
mov
sbb
mov
lcall
dec
push
retw
or
pop
movsl
pop
and
inc
movsl
mov
idivl
pushf
out
cmp
and
adc
jns
int
sahf
fs
imul
push
push
mov
bound
mov
cmc
mov
out
mov
test
test
mov
add
mov
xchg
inc
test
xor
inc
dec
adc
sub
jle
je
xor
movsl
mov
jmp
movsl
mov
jl
push
push
add
cpuid
daa
and
push
add
imul
movsl
mov
mov
aas
movsl
or
jb
mov
and
loope
cltd
pop
pop
cmp
jno
pop
ja
std
movsl
pop
test
inc
add
or
enter
fwait
out
mov
les
push
dec
pushf
testl
cmp
mov
clc
mov
das
mov
mov
pusha
push
push
xor
movzwl
mov
push
movb
adc
sbb
adc
push
in
rolb
scas
sahf
jp
shl
lcall
add
mov
sbbb
out
scas
je
jp
add
and
les
add
cmp
xchg
fstl
movsl
aad
fsubrs
inc
mov
movsl
xor
dec
xor
xor
adc
sti
into
cld
xlat
lcall
movsl
movsb
push
loop
sbb
outsb
repnz
push
sub
sub
movsl
xor
dec
xchg
lcall
jbe
std
inc
cmp
sbb
cmp
pop
add
in
movsl
shl
mov
insb
mov
mov
das
in
or
addr16
cwtl
mov
mov
dec
jo
fwait
xchg
out
fs
pop
flds
movsl
sbb
inc
adc
movsl
pmaxsw
mov
or
mov
mov
leave
mov
add
mov
mov
mov
repz
xor
add
mov
gs
les
movl
adc
sbb
dec
popf
push
in
fdivrl
cwtl
test
mov
pop
sub
push
imul
aas
and
lcall
xlat
movsl
lcall
mov
cmp
mov
or
and
mov
pusha
outsb
inc
and
cmp
sahf
lea
cmp
std
stc
test
daa
and
xchg
pop
jns
movsl
mov
in
fsubs
ret
add
loop
pop
xor
add
ret
mull
mov
mov
fidivs
xchg
dec
adc
mov
test
lcall
clc
movsl
scas
xchg
fbld
les
daa
pmaddwd
fildl
movsl
dec
mov
int
cld
movsl
in
add
les
aad
and
inc
mov
movsl
jae
rcr
idiv
push
into
icebp
sar
scas
sbb
inc
xchg
xchg
dec
call
jl
jo
and
mov
jmp
cmp
mov
rcr
movsl
leave
rcll
adc
out
int3
add
movsl
jmp
dec
dec
jo
iret
mov
lods
lods
mov
jns
mov
jge
push
addr16
mov
leave
insl
movsl
mov
pop
imul
test
shlb
repz
dec
movsl
pop
jle
fxtract
sub
jb
xchg
movsl
test
cwtl
test
push
lock
popf
addr16
das
movsl
cmpsb
scas
sbb
movsl
int3
std
jns
out
push
push
movsl
xchg
daa
repz
sub
fstps
lea
mov
jecxz
movsl
and
aam
lahf
or
daa
cs
and
jge
pop
ret
stos
jmp
pop
inc
fs
pusha
add
rol
fisttps
mov
mov
ljmp
add
movsl
test
shrb
movsl
gs
jbe
sbb
shll
fwait
movsl
xor
std
jge
fcmovnbe
movsl
mov
hlt
push
pushf
jb
pusha
ss
in
stos
adc
movsl
mov
add
pop
pop
in
xor
out
fldl
jnp
jb
lret
clc
add
iret
jo
cmpsb
movsl
movsb
or
push
adc
pop
adc
sbbb
inc
sbb
push
sbb
lsl
repz
adc
pop
imul
xor
fmull
in
scas
out
lret
push
sbb
movsl
shlb
rcrl
pusha
jae
mov
mov
mov
into
push
movsl
std
ficomps
dec
jnp
xlat
in
je
scas
mov
cmp
inc
lahf
nop
movsl
mov
push
fcmovne
movsl
and
imull
cmp
push
movsl
std
mov
fcmovne
scas
lea
jg
jl
push
repz
std
inc
in
jmp
jecxz
jo
movsl
gs
ljmpw
movsl
iret
fstpl
int
mov
add
out
movsl
sub
fisubrs
pusha
insl
movsl
pop
mov
and
mov
mov
leave
or
lcall
sahf
xchg
movsl
mov
mov
fmuls
mov
mov
aad
inc
icebp
push
movsl
or
dec
pop
inc
or
arpl
adc
cmc
popa
jo
int
cmp
push
pop
and
movsl
outsl
test
or
movsl
ss
cmp
cmc
and
inc
mov
sbb
sbb
fcmove
ljmp
mov
inc
jns
or
je
mov
or
pop
adc
mov
xor
cltd
or
mov
mov
mov
insl
out
and
push
mov
push
fidivl
inc
sub
aas
add
adc
lcall
out
xchg
aad
mov
mov
out
mov
xor
pop
sub
sahf
movsl
fs
cwtl
adc
fidivrl
add
cld
pop
mov
sbb
push
je
adc
mov
ss
sti
aaa
in
mov
inc
xchg
les
in
xchg
pop
dec
js
outsb
mov
sub
fwait
popf
lods
sbb
fistl
push
add
cmp
stc
xor
movsl
fcmovbe
in
stos
mov
shld
sub
mov
mov
jo
in
pop
hlt
xor
mov
scas
push
push
mov
dec
hlt
inc
inc
jnp
jbe
addr16
mov
cli
and
lahf
xchg
movsl
jp
cmpsb
dec
ljmp
push
mov
add
repnz
vpor
jp
mov
lods
scas
and
movsl
and
cmp
adc
push
inc
in
shrl
cwtl
dec
movsl
inc
cli
dec
dec
adc
jle
movsl
int
pop
outsl
dec
push
ret
adc
fcomps
cmp
cmp
in
dec
outsb
mov
imul
add
loop
jns
cmp
dec
repz
add
bound
mov
in
lods
mov
ljmp
jmp
pushf
frstor
mov
ret
imul
pop
push
mov
push
adc
scas
mov
push
inc
mov
test
xchg
incl
fsubl
sub
jmp
or
dec
adc
jg
in
pop
in
lret
sarl
mov
repz
aam
push
add
pop
movsl
aaa
sub
lahf
movsl
dec
mov
jecxz
movsl
pop
fmuls
pop
movsl
mov
inc
xchg
movsl
pop
movsb
sbb
inc
add
lret
frstor
xor
fdivrp
inc
imul
cmp
stos
pop
sub
inc
dec
xor
mov
adc
and
stos
lods
popf
cs
sbb
and
mov
movsl
fistl
enter
jl
pop
add
movsl
popa
push
xor
pop
movl
in
mov
movsl
mov
inc
pop
movsl
pop
ret
pcmpgtd
sbb
mov
sbb
fisttps
xchg
mov
incb
cmp
movsb
imul
negb
aam
jge
imul
jno
imul
pop
lret
in
addr16
mul
fiadds
inc
and
inc
movsl
xor
cmp
test
push
stos
in
leave
push
shll
xchg
push
ret
adc
xchg
mov
mov
or
das
aas
xchg
sub
in
push
cld
ja
and
in
push
xor
ds
es
sub
xchg
cmpsl
sbb
lret
ljmp
notb
cmp
jmp
pusha
pop
adc
mov
cmp
movsl
inc
rcrl
push
in
dec
movsl
lret
std
fbld
fnsave
iret
pushf
add
in
mov
pop
pop
insb
movsl
lea
aad
adc
jno
mov
lret
imul
push
jb
cs
pop
insb
subl
jns
jecxz
aam
test
jb
sub
pusha
mov
sbbl
cwtl
dec
mov
mov
push
movsl
inc
push
sahf
push
std
ret
inc
movsl
test
or
cmp
idivl
movsl
mov
movsl
outsl
push
push
mov
jne
movsl
sbb
shr
pusha
fistps
rdtsc
mov
add
add
add
mov
in
mov
ds
test
mov
and
cmp
mov
clc
push
jb
or
push
xor
pusha
std
icebp
inc
xor
gs
fwait
sub
mov
mov
sbb
push
inc
adc
test
jne
add
cltd
lret
mov
or
mov
dec
mov
sqrtps
std
push
push
mov
out
pop
dec
mov
cli
mov
xor
popf
fdiv
out
movsl
jb
push
fisubs
aad
push
xchg
movsl
in
or
xchg
movsl
ror
loop
inc
mov
push
mov
inc
sbb
push
dec
dec
adc
fcomi
cmc
sti
popa
andb
es
cs
cmp
fwait
pushf
cld
scas
stc
push
xchg
jne
cmp
in
cmpsl
in
jbe
imul
movsl
push
bound
sub
sbb
add
dec
outsb
fs
rorb
jne
add
sbb
ficoms
pop
inc
and
lea
push
gs
push
ljmp
pop
xchg
mov
sub
jno
and
inc
fld1
sahf
loope
and
xor
mov
ljmp
mov
add
sbb
and
mov
lcall
pop
loopne
repnz
jge
jns
movsl
fdiv
fcom
addr16
in
fidivrl
mov
lods
adc
movsl
xchg
jne
cld
dec
fildll
cli
aaa
lds
adcl
pop
xchg
enter
loope
xor
dec
imul
push
pushf
xchg
jl
andb
ficomps
lret
add
lods
shld
adcl
shll
stc
inc
mov
mov
sub
jl
in
mov
loope
or
popa
rclb
out
add
dec
cli
test
popa
inc
adc
rcl
xor
mov
mov
adc
inc
xchg
cltd
sub
sub
dec
jge
jl
cmc
mov
arpl
shlb
popf
in
xchg
sub
int
cmpsl
daa
fistps
les
xchg
rcl
jge
loopne
inc
add
mov
sub
add
in
add
cmc
jno
and
and
cmp
movsl
icebp
push
int3
rcrb
sub
push
push
dec
into
ljmp
pop
push
loope
push
sub
lds
xchg
stc
or
dec
shll
in
ljmp
add
ret
sub
fdivp
ljmp
sub
xlat
mov
and
movsl
das
xchg
pop
dec
inc
mov
inc
jno
popa
jno
add
jp
dec
jg
cmp
decl
pop
ds
adcb
cmc
fldlg2
movsl
out
outsl
inc
std
push
jle
jge
in
std
shll
xlat
add
jmp
stos
jecxz
movsl
popf
pushf
and
test
shlb
int3
xor
pushf
cld
std
bound
mov
cmp
pop
or
scas
sub
jne
xorl
jge
in
dec
std
inc
sbb
cmc
in
int
fabs
dec
pop
rcrb
lock
out
sbb
or
mov
leave
xchg
cmc
cs
shrb
aam
xchg
ret
add
jns
dec
sub
push
je
idiv
lea
ret
hlt
inc
mov
adc
test
sbb
adc
inc
pop
inc
add
mov
out
lods
ret
scas
pop
aam
in
loopne
jl
rol
in
mov
sahf
fstl
jne
jmp
mov
or
lds
add
and
dec
push
mov
ljmp
jle
inc
sbb
shr
sahf
and
and
sbb
rcrl
movsl
mov
lods
int3
test
inc
clc
in
add
or
out
xorl
dec
sbb
adc
dec
outsl
mov
insl
test
addl
or
pop
mov
movsl
int3
dec
jp
aad
sub
repnz
mov
inc
movsl
cli
shrl
jl
cmpl
or
aaa
fcmovu
dec
jnp
movsl
jl
ljmp
cltd
lahf
mov
out
sub
movsl
xor
cmp
adc
and
es
add
push
outsl
add
movsl
dec
scas
adc
dec
dec
mov
cwtl
enter
test
pusha
mov
fstps
stos
std
inc
call
mov
pusha
or
cmp
push
pop
push
lds
push
sarb
push
and
fstp
or
mov
xchg
lcall
insl
mov
dec
movsl
jmp
or
int
mov
mov
pop
inc
mov
mov
ficompl
mov
push
int3
mov
ja
in
sub
push
mov
sbb
movsl
outsb
ret
popa
pop
gs
movsl
lock
push
test
pushf
fstps
movsl
dec
jp
inc
cmp
or
mov
mov
pop
xchg
and
mov
idivb
cwtl
test
out
inc
not
inc
mov
xchg
sbb
movsl
clc
pop
mov
pop
lods
fwait
mov
inc
inc
push
loop
pop
sbb
wrmsr
and
mov
ret
js
jae
shld
jb
push
push
aad
subl
pop
cmp
xchg
and
mov
sub
mov
xor
cmp
mov
sahf
in
in
es
fbld
arpl
sbb
push
add
lahf
jnp
movsl
xchg
fnstsw
test
movsl
xchg
fdivl
sbb
sahf
fwait
pop
das
call
popa
mov
insl
in
cmpsl
ja
dec
pop
movsl
jl
rolb
jo
popa
int3
sbb
jecxz
dec
in
stc
lret
cwtl
movsl
loopne
mov
addb
rcr
xchg
push
dec
notl
push
leave
test
aam
aaa
push
mov
movsw
and
dec
cmp
imul
xchg
movsl
mov
cmp
xchg
stos
mov
int3
into
and
dec
mov
and
jb
test
ds
adc
mov
jmp
lods
xor
mov
cmp
mov
into
adc
les
push
or
in
test
jns
mov
loope
xchg
xchg
dec
test
mov
jecxz
add
xchg
test
inc
fwait
mov
inc
imul
in
fmull
cmp
notl
or
decl
js
aad
outsb
add
movsl
loop
jne
lret
add
xchg
push
cmp
sahf
fdiv
push
ds
sub
imul
hlt
lret
les
jo
cmp
not
or
inc
fsubrs
and
cmp
jno
mov
jns
movsl
sarb
sub
fcmovne
mov
aas
cmp
movsl
test
dec
imul
add
movsl
dec
push
out
xor
mov
mov
or
mov
icebp
ljmp
dec
fst
push
sti
test
lods
addr16
out
push
movsl
sub
lahf
cltd
xor
into
jmp
fnstcw
movsb
mov
es
cmpsl
insl
mov
sub
pop
mov
xchg
push
movsl
ret
adc
sbb
mov
in
out
leave
addr16
sbbb
pop
in
rdpmc
shll
stos
mov
stc
pop
mov
fmull
jmp
jl
jnp
cmpsb
sbb
pushf
iret
mov
inc
mov
mov
mov
cmp
out
jne
movsl
add
push
arpl
inc
mov
push
sub
jmp
call
pop
movsl
lock
pop
xor
movsl
cld
roll
xor
sbb
and
pop
imul
xchg
or
addr16
xchg
lods
out
movsl
jnp
mov
xchg
mov
enter
call
xchg
ret
cmpsl
adc
testl
mov
into
popf
or
pop
xor
cltd
mov
adcb
mov
mov
pop
arpl
jmp
std
xor
mov
loop
push
push
ss
faddl
shld
lds
cltd
jns
mov
mov
fs
inc
sub
push
mov
jge
cmp
aad
mov
mov
lock
cmp
push
imul
movsl
lret
cmp
add
pop
in
test
mov
andb
push
roll
in
mov
or
mov
shrl
jl
xchg
xchg
and
jns
cmp
movsl
sar
sti
decl
inc
mov
cmc
shll
sbbl
xchg
loope
bound
jp
cmp
sub
or
jecxz
xchg
out
adc
mov
jp
pop
inc
sub
dec
adc
sub
outsl
std
bound
or
movsl
das
and
pop
cmp
out
movsl
lahf
jmp
popf
add
scas
inc
movsl
sub
mov
lret
lds
pop
rcrl
mov
loope
inc
movsl
pop
and
sbb
addr16
movsl
jl
xchg
daa
or
cmp
movsl
and
movb
rcrl
lret
dec
movsl
jo
add
sub
in
mov
jns
jmp
rcll
je
movsl
testb
mov
mov
jge
xor
mov
sbb
fisubs
and
scas
jl
push
adc
dec
xor
out
mov
sbb
push
xlat
adc
and
shlb
in
in
cmp
movsl
add
mov
xor
mov
inc
les
lret
cwtl
xor
subl
ljmp
jmp
sub
fld
dec
fisubrs
jge
or
movsl
repnz
lret
xorb
push
jl
jno
mov
test
ret
jmp
sarl
je
adc
insl
movsl
xchg
or
or
inc
xchg
and
sub
pushf
pop
adc
es
in
adc
dec
mov
sub
cmp
and
mov
icebp
sub
xor
push
rcrb
shll
aas
test
add
pop
pusha
dec
mov
vandps
mov
repz
and
push
jge
pop
fcom
daa
outsb
xchg
mov
nop
in
icebp
arpl
pop
lods
pop
fcoms
lea
and
sti
or
in
and
push
jns
lcall
or
sbb
scas
je
inc
lock
mov
in
popa
sub
push
bsf
stos
ret
into
add
les
lahf
int
adc
and
pop
mov
shll
std
icebp
shll
pushf
sub
in
decl
repnz
push
mov
jns
mov
jmp
xchg
cwtl
leave
jecxz
xchg
dec
sub
sbb
loop
mov
negb
ja
push
lea
mov
jno
sbb
sub
push
popf
inc
xor
adc
mov
push
mov
bound
xlat
pop
sbb
faddl
cmp
icebp
inc
xchg
ds
insb
mov
mov
add
or
movsl
pop
pop
and
mov
es
repnz
mov
adc
mov
nop
or
repnz
movsb
adc
aad
sub
and
mov
and
ds
sub
ss
pop
and
mov
inc
lcall
inc
mov
popa
imulb
sbb
or
push
dec
into
xchg
xchg
pop
test
idivb
or
mov
mov
add
test
scas
pop
inc
sahf
pop
inc
adc
loope
mov
cmp
bnd
push
sub
and
cmp
sub
mov
pop
cmp
scas
xor
xchg
sub
xchg
in
sbb
sahf
cmp
push
test
and
adc
lea
mov
xor
cmp
mov
insb
xlat
adc
mov
fwait
cltd
mov
sbb
mov
stos
in
inc
xor
cltd
and
pop
mov
cwtl
out
or
loope
mov
pand
and
pop
jbe
mull
mov
jecxz
and
mov
push
test
pop
pop
jbe
jl
xlat
sub
and
stos
push
sti
outsb
pop
sbb
sub
adc
inc
or
and
xor
loopne
and
push
push
cmp
lock
repnz
js
push
mov
clc
mov
and
enter
inc
popf
mov
xor
ficompl
cwtl
sbb
and
mov
mov
std
scas
loop
pop
lods
sub
adc
mov
adc
pushf
in
mov
xchg
pop
inc
fidivs
adc
ret
out
fmuls
lret
inc
mov
adc
add
sahf
mov
or
sbb
jg
lds
adc
adc
mov
mov
std
xchg
mov
push
fdivrs
iret
adc
xchg
mov
mov
cli
xor
fwait
rcrl
cmp
movsl
add
mov
sbb
js
push
mov
and
int3
sub
fildll
lock
lret
bound
fisttpll
test
ret
ss
in
dec
push
std
cmp
inc
push
and
das
xchg
xchg
jno
pop
sti
sar
popf
adc
sub
sbb
sbb
orl
adc
imul
leave
sbb
mov
sbb
sbb
dec
imul
mov
and
mov
cwtl
cmp
mov
mov
push
adc
mov
dec
cltd
mov
jno
movsl
pop
dec
test
popf
mov
loope
lahf
std
call
pop
imul
insb
adc
jmp
add
sti
inc
sub
loopne
rcr
mov
pop
iret
mov
into
mov
imul
je
cmp
test
bound
sar
mov
fsub
outsl
shl
adc
xchg
mov
or
push
cld
cmc
push
mov
fistps
cmpsl
sqrtps
xlat
fists
push
ret
inc
stc
mov
int
jl
stc
subb
jnp
jne
test
icebp
divb
mov
jp
sbb
lcall
mov
xor
aaa
pusha
insl
fstpl
push
xchg
fstpl
sub
and
cmpsb
es
and
inc
jnp
pop
data16
mov
mov
and
rep
jmp
mov
mov
push
mov
outsb
xchg
lahf
shrl
lods
pop
mov
int3
loopne
adc
pop
pop
sub
sbb
and
std
mov
loope
xor
adc
cld
push
lret
fs
popf
mov
gs
push
cmpsl
adc
aas
or
mov
js
es
mov
pop
inc
push
or
mov
cmp
jae
ffree
outsb
sub
iret
push
imul
adc
and
push
scas
imul
mov
mov
fsubs
pop
jecxz
in
inc
int3
imul
pop
jno
jl
sbb
sub
inc
cmc
or
js
xchg
lods
icebp
popf
and
lcall
cmpb
icebp
leave
fists
ret
mov
lods
ja
rcll
xchg
xchg
xchg
in
fucomp
xor
sar
xchg
xor
aad
adc
fistpll
ja
fdivrl
sbb
or
ret
shrl
cmc
dec
out
inc
iret
out
loope
push
enter
lret
movsl
jl
bound
sbb
xchg
push
push
mov
mov
lahf
adc
movsl
iret
adc
dec
movsl
mov
push
outsl
insb
dec
xchg
jp
push
leave
cwtl
jo
inc
add
movsl
out
shll
mov
movsl
imul
test
add
lods
mov
push
movsl
loopne
out
aas
cs
fs
repnz
sub
fwait
jmp
movsl
xor
jp
movsl
dec
fs
mov
cmp
out
cmc
movsl
das
mulb
movsl
xchg
add
mov
dec
outsl
mov
push
out
add
pop
jbe
pop
xor
aaa
mov
mov
sti
sbb
lock
xchg
mov
lds
in
mov
push
xchg
rorl
aaa
sub
ret
mov
dec
bound
movsl
sar
push
shl
ss
fisubs
dec
and
mov
sbb
movsl
cwtl
xchg
jbe
fchs
jno
dec
pop
out
lds
push
push
mov
movsl
xor
mov
push
pushw
sahf
les
hlt
jmp
lock
je
mov
sbb
push
int3
movsl
in
jg
add
test
lret
add
in
decl
mov
arpl
xchg
popf
mov
movsl
add
jmp
int3
movsl
lret
dec
test
call
leave
test
lods
aad
mov
mov
push
lods
in
add
rorl
outsb
or
movsl
mov
out
gs
mov
mov
mov
sub
sub
mov
adc
sbb
push
test
aad
mov
mov
popa
inc
cmp
lea
push
sti
aas
into
lods
jecxz
jp
movsl
cwtl
and
adc
and
xchg
das
inc
jo
lods
cmc
lret
pop
pop
movsl
push
mov
sbbb
pop
mov
in
mov
xchg
cwtl
mov
dec
inc
je
add
dec
call
cld
movsl
not
sub
pop
mov
jns
cwtl
adc
mov
jo
pop
mov
jae
add
in
in
inc
mov
aas
jo
dec
mov
mov
movsl
or
pop
mov
adc
imul
sub
jne
mov
push
movsl
insl
out
aam
std
loopne
add
cs
cmc
out
movsl
push
push
ss
cmp
popl
lahf
xchg
cld
fldcw
fadd
or
mov
cmp
add
movsl
push
bound
call
movsl
es
aas
jne
xchg
inc
rcr
ja
adc
scas
lock
xor
lahf
imul
lcall
lods
mov
cli
popa
fwait
stos
movsl
xchg
adc
gs
cmpb
bnd
mov
jg
push
push
and
push
pop
inc
add
push
push
mov
mov
pop
mov
stos
jmp
dec
jbe
cli
mov
jns
lds
xchg
iret
jl
movsl
add
jge
je
mov
push
dec
out
mov
push
push
fsts
pop
mov
or
movsl
mov
ss
xlat
and
arpl
fldenv
mov
in
cwtl
in
jl
mov
cmc
ds
add
push
clc
xor
push
movsl
rcr
pop
icebp
push
mov
stos
lock
int
add
jmp
popf
push
inc
xchg
js
movsl
aad
arpl
and
cmpsl
sbb
xor
adc
divb
lds
push
aam
xchg
xor
mov
sahf
enter
mov
or
call
dec
inc
jae
cmpsl
shll
ret
cmp
pusha
in
push
call
imul
in
or
sbb
dec
and
pop
testl
in
aad
imul
insb
mov
jo
add
pop
je
push
stc
wbinvd
mov
fsubrs
movsl
sbb
insb
xor
sbb
and
inc
push
movsl
sbb
enter
std
test
mov
movsl
jbe
fsubrl
rcrl
cmp
stos
out
sbbl
clc
movsb
pop
push
adcb
inc
xchg
stos
mov
xchg
push
imul
sbb
mov
xchg
in
push
xchg
sub
mov
les
jmp
movsl
popf
test
movsl
fstpt
or
xchg
movsl
mov
xchg
icebp
mov
sbb
cmp
jae
hlt
test
movsl
cmc
stos
and
mov
add
sub
arpl
js
jge
mov
jne
cmpsb
dec
sub
movsl
lock
adc
mov
inc
fisttpll
add
scas
xchg
pusha
movsl
jmp
inc
add
xchg
imul
jne
jbe
sbb
mov
movsl
and
mov
stos
mov
insb
setb
repnz
clc
push
cwtl
imul
mov
add
movsl
adc
and
jl
dec
movsl
jg
xchg
fdivs
lret
mov
mov
test
sub
pextrw
cwtl
xor
pop
lods
mov
push
mov
movsl
xchg
or
push
jle
add
mov
sti
xchg
mov
outsb
out
jle
movsl
fsubs
and
cmp
ds
repnz
sub
and
enter
or
push
outsl
and
mov
push
std
enter
das
mov
ds
es
mov
mov
jae
in
cli
scas
mov
or
mov
out
into
movsl
stc
dec
dec
adc
subl
mov
fnsave
sahf
movsl
aaa
mov
addr16
lret
movsl
fnstsw
movsb
xor
lods
mov
mov
or
sub
dec
xchg
cmp
movsl
addr16
or
pop
sbb
fwait
ds
and
mov
test
mov
ja
rol
xchg
lcall
mov
and
int3
addl
out
fdivr
movsl
loope
fsts
push
lods
xchg
fs
add
es
cmp
pusha
push
mov
aad
push
pop
push
bound
stc
ret
mov
add
movsl
jns
outsl
xor
add
fcomps
jbe
adc
pop
out
repz
cs
mov
xchg
call
fsubr
jecxz
xchg
stos
inc
xchg
std
and
mov
cwtl
clc
movsl
adc
pop
xlat
fstpt
mov
mov
mov
or
xlat
jmp
movsl
leave
pop
gs
movsl
stos
push
mov
and
jecxz
mov
mov
pop
movsl
lods
jno
insl
addr16
movsl
xchg
xchg
into
xor
xchg
ja
ljmp
xchg
movsb
xor
lods
cld
jne
movsl
pop
add
mov
lods
inc
movsl
cltd
int3
cmp
push
dec
mov
cmp
lahf
loope
mov
scas
and
xchg
clc
mov
push
fdivrp
push
inc
movsl
add
mov
shlb
in
cwtl
scas
pop
adc
or
mov
data16
ja
leave
sbb
jmp
jl
jge
lds
pop
adc
mov
push
std
int3
xor
test
pop
xchg
jl
xchg
movsl
je
addb
jbe
daa
add
inc
movsl
push
std
out
lret
shrb
cwtl
mov
pushf
push
mov
arpl
cwtl
sub
in
and
mov
jle
mov
jnp
test
mov
call
or
icebp
inc
cmpsl
movsb
xchg
sbb
and
sub
mov
std
cli
mov
inc
mov
cmc
cmpb
out
mov
push
pop
mov
xor
mov
cmp
out
sbb
pop
cld
push
hlt
cli
add
xlat
pop
inc
rolb
pop
add
xchg
xlat
or
mov
repz
jp
mul
sbb
test
mov
in
stc
movsl
mov
add
pop
jae
iret
repz
icebp
fucomip
xlat
out
movsl
int
mov
and
scas
in
xlat
add
inc
adc
cmp
aad
jp
push
imul
adc
xchg
inc
and
test
push
loopne
mov
movsl
cmp
cmc
push
fidivs
dec
ljmp
lock
rcrl
adc
or
cltd
mov
pop
lea
test
xchg
movsl
jl
jecxz
jge
lods
movsl
fwait
aas
leave
or
push
insb
and
mov
mov
dec
and
mov
fsts
cmc
nopl
push
mov
mov
mul
mov
lret
xchg
mov
mov
mov
std
pop
jbe
shr
push
popa
jmp
xchg
lcall
mov
lods
scas
add
movsl
test
mov
flds
in
lret
dec
shll
test
mov
dec
jge
xlat
movsl
sub
shll
sub
inc
sub
and
dec
out
sub
pop
sub
test
cmp
lcall
fwait
pushf
adc
jae
mov
cmp
mov
dec
mov
xchg
jns
xchg
pushf
sub
movb
jge
jl
aam
cs
arpl
sbb
sahf
sbb
inc
mov
mov
test
push
cmpsl
mov
dec
push
or
and
mov
sbb
jnp
push
and
mov
test
adc
sti
data16
and
rolb
leave
cmpsl
mov
ljmp
popa
cltd
adc
aam
flds
and
cmp
imul
jmp
int3
fdivr
cmpsl
push
andb
sbb
mov
loope
repnz
movsl
xrelease
lods
add
lock
push
xchg
push
mulb
add
or
dec
jmp
push
pop
mov
addr16
shrl
mov
shlb
in
int3
movsl
jp
gs
enter
movsl
cltd
cmp
movsl
loop
out
pusha
outsl
imul
and
movsl
cwtl
xchg
adc
sub
movsb
vhaddpd
nopl
leave
jle
cmp
and
mov
mov
fstl
sbbl
sti
hlt
call
lds
popa
mov
fisubl
ret
jae
xchg
cli
stc
es
mov
sub
in
cmp
sahf
push
mov
stos
stos
lds
cmc
mov
xchg
movsl
mov
pop
mov
xor
in
push
xor
mov
mov
fnstsw
dec
ja
push
jmp
mov
movsb
xchg
cmp
rcrl
std
loop
outsl
pop
mov
in
jle
sahf
jg
movsl
imul
mov
mov
fsubrl
pop
mov
pop
add
movsl
movsb
or
mov
or
enter
inc
inc
loopne
xor
les
movsl
dec
dec
jp
pop
js
enter
aas
aad
push
loope
sbb
push
mov
xor
enter
xor
add
addr16
pushf
inc
pushf
push
xchg
lret
fs
push
fcmovnbe
jo
push
adc
pop
movsl
movsl
and
nop
mov
mov
pushl
dec
mov
test
mov
movsl
leave
push
in
out
imul
adc
mov
ret
ds
push
call
leave
sub
aaa
fsubrp
in
leave
or
pop
mov
sub
cmp
andb
mull
and
lea
call
mov
out
and
sbb
movsl
jle
jns
push
sbb
ljmp
sbb
sub
dec
pushf
adc
mov
sbb
mov
mov
movsl
fcompl
cmc
clc
cmp
lods
mov
js
inc
movsl
jbe
jno
or
call
es
es
fnstcw
cmc
adc
fsubl
imul
in
scas
add
into
and
push
cltd
mov
xlat
mov
nop
mov
lds
leave
movsl
cmp
movsl
pushf
popf
and
into
xchg
lea
pop
sbb
mov
mov
in
sbb
push
jl
mov
mov
popa
loope
jmp
mov
fwait
pushf
push
addl
jne
xchg
mov
lea
movsl
test
iret
mov
adc
movsl
and
add
int3
popf
fwait
je
das
inc
cwtl
xchg
lods
roll
mov
mulb
push
adc
das
pop
cmc
mov
mov
daa
push
cltd
mov
inc
mov
movsl
shlb
pop
cmpsl
mov
or
mov
inc
clc
cmpsl
pop
inc
push
fsubrl
mov
out
push
add
inc
jb
hlt
ret
cs
mov
stos
or
cli
fldcw
inc
mov
stos
push
push
pusha
movsb
mov
xor
enter
movsl
out
pop
adc
insl
jmp
push
mov
popf
cmp
cmpsl
loope
dec
dec
insl
push
jge
ret
ljmp
movl
popf
cltd
mov
ret
imul
lcall
movsl
loope
dec
dec
gs
lods
fistps
in
inc
clc
sub
in
mov
jle
mov
jecxz
out
lds
sub
es
pop
dec
movsl
push
ret
mov
mov
mov
in
cwtl
and
test
insl
movsl
neg
out
scas
and
dec
cld
inc
scas
lds
cmp
pop
int
bound
dec
aam
movsl
xor
cmp
mov
sub
inc
inc
test
push
lret
stc
out
setl
dec
ret
cwtl
aaa
cs
movsl
nop
cmpsb
adc
push
dec
data16
mov
and
jle
push
aam
movsl
jbe
cmp
push
or
movsl
fs
popa
decl
out
cs
insl
in
cmp
sbb
lods
mov
movsl
imul
pop
and
je
dec
movsl
inc
nop
xchg
test
mov
xchg
movsl
mov
xlat
out
stc
fucomp
aad
push
in
sub
lods
popf
adc
xor
jnp
enter
push
mov
inc
movsl
cmp
mov
test
adc
add
cmpsb
sbbb
push
movsb
movsl
sti
push
shrl
mov
adc
pop
mov
scas
jbe
in
bnd
int3
pop
frstor
mov
fcomip
mov
pop
and
in
sub
stc
pop
out
loope
daa
mov
mov
jecxz
iret
mov
and
mov
rorl
mov
inc
push
fucompp
loop
mov
popa
xchg
cmp
mov
adc
mov
jecxz
mov
mov
pop
cs
push
es
push
push
std
inc
pop
fwait
movsl
mov
cmpsl
mov
sub
out
and
sti
add
cli
adc
dec
movsl
hlt
js
mov
jne
insl
jecxz
ret
bound
adc
test
mov
add
pusha
and
and
fiadds
rcrb
int3
jb
pusha
pop
in
ret
or
dec
push
movsl
jae
and
insb
imul
leave
ds
lock
push
mov
in
mov
scas
subl
jb
movsl
lods
adc
mov
jge
test
cmpsb
pop
mov
aas
sub
mov
inc
fwait
cmp
sbb
test
and
jno
sub
movsl
ljmp
out
movsl
pop
mov
lods
push
movsl
das
sahf
lea
adc
and
test
pushf
xor
xor
stc
push
mov
fiadds
jle
jl
xchg
mov
xchg
leave
repnz
pop
out
icebp
xor
mov
xchg
test
inc
movsl
add
je
xchg
xchg
popf
mov
lds
sar
mov
out
add
popa
ljmp
movsl
repnz
jl
enter
data16
ljmp
adc
jle
aas
aad
popf
and
push
sub
je
cmp
cmc
adc
xchg
iret
or
and
mov
sbb
cmc
popf
jbe
movsl
enter
nop
test
jg
cmp
inc
xor
test
xchg
pop
push
mov
mov
dec
jp
pusha
and
and
loopne
adcl
sti
push
cmpsl
pop
aaa
movsl
xchg
cmpsl
pushf
add
mov
imul
roll
cmp
lcall
rcr
add
pop
jns
inc
inc
in
dec
mov
inc
xchg
cs
inc
call
pop
fnstsw
es
jp
stc
leave
sub
cmpsl
or
mov
mov
rcll
test
movsl
add
mov
sahf
lret
and
sbb
add
jns
lahf
push
addl
and
movsl
adc
dec
and
sbb
xlat
sahf
icebp
orb
imul
cmc
inc
xchg
xchg
push
xlat
sbb
cmp
pop
mov
mov
adc
jg
and
shl
rclb
cltd
mov
outsl
mov
sub
std
cmp
arpl
dec
push
stc
push
out
outsb
sub
pop
pop
clc
in
lret
push
mov
in
push
pop
xchg
je
mov
fimull
pusha
nop
std
decl
sbb
sahf
xchg
filds
or
scas
pop
addl
mov
add
or
cmpsb
add
std
adc
xchg
out
cmc
inc
testb
and
shl
test
xor
xchg
xor
jnp
js
mov
scas
into
and
mov
out
int
sar
sbb
and
sbb
sub
icebp
push
mov
jnp
fcmove
into
add
rclb
inc
add
push
or
pop
or
fucom
inc
jne
loop
push
loop
imul
push
sub
cmc
int
cmp
mov
pop
pop
push
fnstcw
lds
jbe
popa
lods
inc
test
pop
ds
fcmovb
out
cmp
adc
add
aaa
iret
insl
cmp
lcall
mov
popa
push
daa
int
sahf
xchg
in
ss
fnstsw
shrb
frstor
pandn
fld
add
mov
xchg
mov
sub
dec
popa
inc
or
mov
inc
cld
sbb
arpl
cmp
push
mov
in
and
imul
out
test
cmpsl
movsl
stos
in
mov
sahf
rcl
adc
movsl
stos
add
dec
clc
adc
test
sbb
push
movsl
pop
mov
mov
jmp
movsl
mov
dec
leave
call
cmp
xor
cld
daa
mov
mov
out
out
xorb
and
leave
add
pusha
mov
sub
inc
inc
movsl
mov
call
js
std
movsl
dec
mov
loopne
jg
mov
movsl
mov
outsb
jmp
data16
call
mov
loope
pusha
pop
push
movsl
or
mov
push
or
test
pop
sub
xor
lods
push
add
fldt
arpl
fstl
jbe
mov
lds
pop
in
mov
push
cmp
nop
outsb
jbe
add
jb
in
xchg
xor
or
xchg
test
or
les
das
rcr
add
xchg
cld
fadds
stos
lahf
add
jno
cltd
movsl
dec
push
mov
mov
inc
imul
movsl
jle
leave
mov
movsl
les
pop
pop
mov
in
adc
testb
cmc
nop
jns
mov
xor
cmp
mov
push
cmc
xchg
add
shrl
leave
movsl
lret
jecxz
add
fcoml
xor
stos
das
xchg
and
in
cmp
movsl
lock
mov
xor
call
dec
dec
adcb
movsb
sbb
push
lds
push
fstp
out
push
hlt
jbe
movsl
enter
fimuls
movsl
or
sbb
mov
sub
enter
movsl
imul
xorb
push
inc
mov
sub
xchg
cwtl
sti
cmp
shrb
jmp
inc
loopne
mov
xchg
and
lds
es
ss
movsl
rorl
call
dec
in
sub
sahf
sub
mov
movsl
sbb
pop
outsl
sti
movsl
dec
mov
cmp
mov
inc
cs
ret
ja
outsl
stc
mov
iret
mov
movsb
and
dec
movsl
xor
or
jno
pop
sub
add
xor
movsb
cmc
aas
push
jp
sbbl
push
divps
dec
adc
sbb
pop
inc
das
movsl
in
or
add
leave
aaa
cld
add
subl
movsl
jnp
test
sbb
mov
iret
add
fiaddl
sbb
xchg
std
sahf
and
fnstcw
in
addb
repnz
aaa
pushf
movsl
sub
arpl
inc
lahf
inc
xchg
outsb
dec
pusha
jo
xchg
int
lret
ljmp
or
js
movsl
adc
cwtl
push
sar
jbe
or
sub
add
test
fwait
popa
pushf
and
push
and
mov
lret
mov
sahf
or
xchg
test
in
iret
cmp
push
jge
xor
addl
and
hlt
mov
in
add
jle
add
xor
sub
test
lds
sub
enter
test
pop
jne
in
xor
cli
or
jmp
ret
movsl
xor
adc
pop
mov
jp
pop
scas
inc
sub
decb
imul
std
rcrb
in
add
mov
sti
lods
xchg
cs
call
adc
das
mov
js
mov
mov
jnp
andb
xor
inc
push
mov
push
pop
sahf
addr16
push
jl
xchg
dec
cmp
movsl
rcrl
dec
movsl
sbb
sar
xchg
add
xchg
xor
mov
lods
mov
mov
jne
inc
test
jl
fsubrp
mov
icebp
lods
adc
cmp
jae
push
push
int
adc
dec
inc
lds
test
and
test
xchg
cwtl
push
cmpsb
pop
add
in
out
shlb
out
test
addb
xchg
lcall
pop
mov
push
push
pop
fistps
movsl
jno
outsb
test
fstpl
dec
inc
dec
pop
push
sbb
jmp
movsl
push
int3
ret
xor
xchg
in
lret
inc
in
pusha
movsl
fld
popa
or
pop
sbb
adc
mov
add
sub
mov
ficompl
xchg
clc
movsl
nop
dec
test
xchg
js
lods
lods
sbb
mov
xor
movsl
pushf
push
lods
pop
xchg
inc
popa
mul
in
xor
sub
es
pop
movsl
push
mov
stc
pop
pop
icebp
mov
cmpsl
mov
or
cmp
movsl
push
inc
je
push
test
or
xor
adc
cmp
sub
xchg
or
adc
cs
adc
pop
aam
fmull
repnz
iret
int
std
loopne
ljmp
popa
in
xlat
in
push
imulb
push
or
push
mov
dec
movsl
imul
push
movsl
xchg
fdiv
push
call
jmp
in
stc
lret
add
movsl
fldcw
vsqrtps
shlb
lea
jge
dec
xor
push
data16
scas
movsl
sbb
pop
mov
mov
cwtl
pop
jmp
cmp
jns
out
fstpt
popa
out
mov
in
into
pop
and
xchg
mov
xor
add
cmp
push
push
in
adc
movsl
les
or
repnz
call
bound
add
movsl
movb
sbb
sarb
out
push
stc
and
les
test
fnstsw
mov
add
push
in
movsl
jg
lock
std
add
rclb
jmp
popf
and
inc
inc
jge
xor
popf
hlt
hlt
lret
fists
jecxz
adc
add
sar
int3
lds
xchg
xor
cmp
xchg
scas
dec
or
test
imul
mov
int
mov
and
add
movsl
daa
mov
out
sbb
xchg
inc
push
int
movsl
daa
push
sbb
push
sbb
dec
pop
mov
test
mov
movsl
push
mov
or
pushf
mov
mov
inc
movsl
je
xchg
loop
dec
adc
andb
movsl
cs
shll
aas
movsl
xor
pop
jnp
jp
movsl
mov
sti
mov
xchg
or
lcall
xchg
iret
mov
movsl
nop
rcrl
inc
jmp
dec
movsl
shlb
adc
js
int
cmpsb
mov
test
iret
popf
dec
out
rcrb
ret
jbe
mov
jo
sbb
mov
adc
movsl
jl
pop
in
xlat
and
lods
shlb
fisttpll
jns
jno
call
cld
push
xor
es
push
sbb
push
xchg
int
sub
stos
pushf
dec
in
lea
je
mov
adc
filds
cmpl
or
rorl
or
int
pop
in
add
mov
push
cwtl
js
insl
dec
fdivs
jne
sub
xchg
call
insb
movsl
dec
js
cli
xor
xchg
sbb
mov
push
faddl
inc
or
icebp
pusha
and
mov
addr16
push
mov
fstp
neg
fyl2x
inc
fsubl
push
and
scas
xor
dec
cmpsl
es
call
insb
dec
sub
aas
aad
pop
jl
dec
mov
and
sahf
dec
outsb
sbbl
incl
icebp
mov
fs
pop
repnz
xlat
jle
movsl
mov
or
and
lret
push
mov
mov
es
and
gs
xchg
popf
repnz
push
mulb
icebp
out
sub
inc
jno
mov
sub
sahf
pop
inc
je
lret
adc
jg
sbb
mov
push
ds
cmp
icebp
cs
fcmovnb
cwtl
inc
add
jnp
rcrl
pop
fstps
mov
add
cmp
fs
in
adc
es
push
mov
sub
pop
aaa
addr16
or
pop
out
add
lds
repnz
clc
lret
add
adc
les
inc
mov
xor
jb
jecxz
or
cmc
xor
clc
icebp
mov
xor
cmp
sbb
sub
lods
and
mov
and
mov
pop
lret
lcall
sahf
fsubl
aad
bound
daa
out
ss
faddp
adc
and
push
push
sub
sub
insl
mov
cwtl
mov
out
icebp
jl
sarl
je
adc
sar
sub
test
mov
inc
sub
cs
mov
pop
and
arpl
aam
je
push
leave
pop
push
sbb
and
and
pop
jl
pop
popa
sub
mov
dec
loop
xchg
es
sahf
push
je
loopne
stc
icebp
mov
inc
mov
in
and
mull
adc
add
out
adc
jb
ret
xchg
add
fistpll
mov
out
sbb
imulb
rcrl
push
in
fdivs
push
mov
push
inc
popf
xor
fdivr
pushf
add
dec
adc
xlat
icebp
jp
jns
imul
push
sbb
pop
mov
jbe
cld
add
jge
icebp
cmp
xchg
jge
mov
test
pushf
int
jae,pn
in
and
mov
pop
lret
jne
ljmp
mov
xchg
aaa
mov
fnstsw
xchg
outsl
fistps
push
xchg
out
ja
fcoml
inc
test
add
in
test
jo
movl
addl
and
adc
cmp
scas
cmp
jl
orb
pushl
std
and
stos
sub
roll
fs
push
sub
mov
sbb
test
sub
std
fldl
movsl
je
mov
push
sbb
or
movsl
pop
jmp
jne
lret
stos
pop
movsl
mov
xor
fldt
xlat
jnp
lea
or
or
lods
jns
sbb
dec
xchg
add
mov
ret
pop
inc
je
push
fisubrl
lcall
movsl
in
mov
mov
fnstenv
mov
cmpl
rcll
mov
mov
xor
mov
sub
hlt
iret
popf
fistps
jl
jne
jmp
mov
shr
daa
std
xor
ljmp
nop
xor
divb
movsl
js
je
sbb
loopne
sbb
jnp
dec
jge
push
jmp
pop
inc
dec
jne
fwait
dec
inc
popaw
cli
imul
mov
dec
div
loopne
add
movsl
push
mov
xor
rcll
jge
pop
out
mov
pop
enter
dec
movsl
adc
sbb
movsl
push
movsb
jno
mov
popf
xor
mov
rorw
insb
push
movsl
inc
mov
xor
addl
adc
jne
lds
andb
sub
sbb
mov
or
and
jle
pop
jmp
movsl
sbb
roll
lock
movsl
push
or
push
movsl
jb
pop
addb
sub
pusha
and
sub
in
lods
imul
and
in
pop
and
sahf
jl
jle
cmpsb
push
movsb
add
movsl
cmp
mov
inc
fsubl
jnp
daa
or
mov
movsl
out
int3
js
mov
inc
inc
pop
aad
mov
cmovbe
pop
sbb
test
lods
fs
stos
scas
movsl
xchg
xchg
sub
cltd
popf
lcall
inc
push
cmp
push
add
shll
mov
mov
ljmp
add
in
in
pop
ljmp
test
mov
and
pop
or
xchg
mov
es
shll
mov
arpl
movsl
jno
adc
jl
mov
jp
xor
xchg
orl
mov
adc
and
popa
rolb
adc
in
decl
insl
imul
push
xchg
cmp
cmpsb
sub
mul
addl
sub
mov
std
dec
or
jmp
lock
mov
pop
mov
adc
lcall
in
mov
insb
add
imul
loopne
add
cmp
cmp
jp
add
hlt
cmp
das
lods
mov
mov
dec
ja
sub
lods
adc
std
movsb
movsl
das
add
mov
jg
test
shlb
mov
or
arpl
out
inc
lret
jae
daa
stos
sbb
fmuls
out
loop
icebp
rcl
mov
les
cmpsl
in
int
mov
movsl
mov
cmp
cmp
push
adc
popf
inc
add
mov
mov
scas
pop
hlt
movsl
or
push
std
int
stos
or
call
in
mov
loopne
inc
xor
mov
lahf
sub
push
pop
in
xchg
flds
imul
pop
sub
nop
xchg
cwtl
movsl
jge
cmpsl
lcall
mov
sbb
push
pop
dec
adc
or
in
mov
dec
or
inc
cmp
inc
mov
aad
push
mov
add
shlb
sub
xor
movsb
leave
movsl
out
push
in
jae
sbb
imul
cmp
mov
pop
pop
lods
push
scas
mov
cmp
shlb
rorb
mov
test
pop
mov
in
imul
dec
aam
jg
popa
int3
iret
and
inc
out
push
push
aas
or
movsl
dec
add
jne
push
push
jge
int3
popa
add
inc
sbb
std
push
or
dec
mov
mov
and
xrelease
xchg
xor
pop
movsl
jl
dec
push
stc
push
inc
std
sbb
cmpsl
rcrl
test
popf
or
push
movsl
add
fyl2xp1
ljmp
mov
sahf
and
jmp
and
movsl
mov
insb
pop
dec
movsl
and
mov
xchg
inc
movsl
scas
pop
mov
push
pop
mov
ret
bound
popa
int
sbbl
lock
pop
aad
fs
movsl
xor
cmpb
xchg
movsb
lret
bound
lahf
adc
inc
movsl
push
mov
mov
hlt
mov
cmc
stos
sti
movsl
or
cmp
stc
xor
or
movsl
mov
sbb
xchg
push
xchg
pop
dec
push
orl
ficoms
jo
add
cwtl
cmpsl
mov
sahf
sti
and
adc
bound
or
mov
mov
nop
xchg
push
movsb
ficompl
or
pop
mov
sub
or
xchg
ret
sbb
inc
jns
cmc
mov
movsl
and
cwtl
iret
movsl
add
sbb
jno
push
movsl
push
xchg
int
jmp
nop
jnp
mov
xchg
movsl
mov
ret
test
imul
stos
push
xchg
aaa
sub
faddp
movsl
enter
jp
or
movsl
jmp
inc
sbb
cmpsb
and
movsl
inc
xor
nop
test
sbbb
movsl
add
lret
cs
scas
and
pop
movsl
aad
icebp
pop
dec
loopne
cmp
push
mov
add
mov
push
test
out
in
int
mov
mov
jne
push
jecxz
and
push
inc
mov
mov
fucom
aam
dec
je
mov
rcrb
rcll
sbb
stos
adc
push
pop
movsl
adc
mov
pop
cmp
movsl
lfs
sbb
idivb
and
insb
and
xadd
mov
call
jmp
lds
add
icebp
rcll
loopne
loop
mov
cmp
cli
movsl
add
mov
mov
push
in
dec
mov
ds
inc
mov
mov
lods
jns
push
pop
in
mov
push
outsb
dec
testl
cmp
mov
leave
ret
dec
nop
inc
std
hlt
cmp
push
jbe
lcall
inc
adc
mov
cmpl
test
dec
icebp
mov
lock
aam
pop
jecxz
jmp
push
movsl
and
iret
in
das
sbb
lods
sub
ljmp
mov
cwtl
pop
lods
int
push
lock
pop
and
in
cli
lahf
mov
into
mov
xor
mov
lret
push
outsl
dec
jo
mov
hlt
rol
movsl
push
lret
mov
jns
mov
cltd
dec
mov
jae
addr16
mov
loopne
in
loop
movsl
fildll
out
mov
imul
and
adc
add
inc
movsl
mov
inc
ret
adc
lret
push
scas
lods
scas
movsl
enter
dec
or
xor
pop
mov
stos
cmp
movsl
repnz
je
movsl
stos
lods
addr16
in
icebp
pop
out
sbb
xchg
movsl
xchg
mov
inc
outsb
test
dec
xchg
fdivrs
ret
pop
into
stos
mov
aad
lock
sbb
int3
jnp
outsb
scas
inc
adc
cmp
out
aam
and
fstps
pop
roll
mov
das
mov
out
fidivs
push
out
mov
and
mov
fcomp
xchg
test
mov
mov
stos
mov
pushf
xchg
xor
rcrl
cmc
in
add
cmp
adc
xorl
pop
in
mov
xor
pop
push
ret
inc
icebp
lea
mov
loope
cmp
cmp
jno
nop
imul
pop
adc
ljmp
fwait
daa
mov
clc
lret
aad
pop
cmp
or
loope
cltd
xchg
lcall
insl
and
and
popf
ss
ss
push
jl
movsl
cmp
jle
push
mov
mov
and
lds
push
xchg
incb
lret
xlat
clc
dec
lret
sbb
scas
push
mov
daa
lret
out
sbb
aam
in
xchg
sbb
dec
sbb
enter
pop
in
mov
xor
sbb
icebp
sbb
dec
push
popa
sbb
aad
std
stos
pop
push
mov
ficoml
xor
fistl
push
in
les
popa
mov
cmp
fnop
popa
gs
arpl
loop
fcomps
jmp
mov
mul
dec
lahf
sub
movsl
sub
mov
jnp
fwait
mov
xor
push
divl
pop
ret
inc
mov
data16
xlat
icebp
push
stc
test
sub
inc
mov
sbbl
sub
dec
mov
shll
imul
repnz
ljmp
repz
movsb
sbb
scas
jcxz
test
cwtl
js
daa
nop
xchg
and
loope
push
cmp
shl
xchg
mov
or
cli
mov
add
popa
sbb
xchg
fs
mov
sub
mov
lds
insb
scas
cld
les
loop
ss
cmp
mov
inc
push
xor
cmp
dec
cli
adc
fwait
adc
sub
jp
pop
cltd
sarb
xor
enter
popa
mov
iret
xlat
xchg
jae
mov
or
fwait
xchg
sahf
push
lds
cli
fldenv
push
lds
fdivs
sub
and
xchg
mov
fmull
movsb
xor
popf
sbb
dec
popa
subb
or
sub
adc
movsl
icebp
cld
xor
fnstsw
adcl
shlb
sti
rcrl
and
and
xchg
dec
xor
push
stos
mov
push
add
inc
lahf
mov
mov
mov
mov
mov
fwait
movsl
mov
jno
cld
mov
movsl
test
mov
mov
mov
daa
mov
and
jg
cmp
inc
xchg
movsl
pop
in
cmp
mov
hlt
std
push
insl
jle
stos
push
lret
movsl
call
aam
adc
xor
mov
test
icebp
xchg
cld
pop
sahf
mov
addr16
xchg
shlb
inc
ja
enter
push
jg
sbb
pop
pop
ljmp
lds
scas
ja
frstor
xchg
sub
and
jp
push
dec
in
lcall
iret
js
gs
push
inc
mov
lcall
sub
out
lds
push
neg
dec
call
and
xchg
dec
jb
js
pop
pushf
movsl
cmp
or
movsb
movl
out
pop
push
mov
and
pop
pop
loopne
push
mov
dec
cmp
lock
mov
push
test
pop
sbb
popa
and
xor
pop
aad
push
icebp
out
and
xlat
inc
roll
sahf
icebp
jl
lret
and
dec
dec
imul
cld
aad
sub
fldenv
push
ss
rorb
pop
mov
cmp
cld
or
aad
fistps
mov
popa
ljmp
sti
sti
adc
pop
into
pusha
aam
xor
adc
js
sbb
or
cwtl
sub
jge
out
cmpsb
dec
mov
and
jns
das
add
jb
add
or
aad
and
loopne
add
add
cli
fnstenv
xor
subl
or
pop
xor
pop
lods
jne
sbb
inc
mov
imul
cld
or
mov
mov
pop
lods
fnstsw
adc
cwtl
mov
ljmp
std
push
lcall
xchg
mov
push
cmpsl
dec
add
mov
xchg
add
sub
outsb
das
loopne
adc
adc
loope
pop
xchg
and
stos
pop
movsb
loopne
and
push
je
dec
adc
ljmp
ret
pop
jmp
movsl
cmpsl
cmp
mov
negl
sbb
clc
loope
pop
fs
pushf
xlat
mov
inc
negl
xchg
add
lods
adc
sub
les
pop
sahf
roll
mov
cmp
or
mov
shrb
stc
xlat
mov
lret
pushf
xchg
inc
mov
push
cli
iret
clc
popa
loopne
fstpl
mov
fld
aad
push
sbb
dec
call
out
jbe
pop
jge
repz
dec
sbb
inc
out
pop
pushf
and
mov
adc
lds
cli
mov
je
loopne
repz
idiv
clc
pop
mov
push
push
mov
sbb
push
imul
out
mov
inc
xor
les
das
xor
add
lock
or
add
test
xor
fcoms
or
pop
loopne
mov
inc
xlat
jge
mov
clc
std
shrb
pop
jne
add
shrb
adcl
push
push
cmp
cwtl
out
repnz
or
mov
daa
es
mov
mov
push
xlat
in
aaa
xor
adc
and
divb
pushf
sub
es
adc
les
mov
out
lcall
jmp
xchg
pop
cwtl
sub
fsub
test
icebp
fiaddl
out
lea
divb
mov
xor
in
xor
lds
insb
pop
inc
sbb
loopne
add
scas
adc
out
in
notl
lods
in
sbb
icebp
jecxz
lea
and
push
mov
jl
mov
sbbl
push
stos
push
sub
xchg
fimull
jne
mov
test
outsb
mov
lahf
sbb
inc
or
add
sahf
inc
enter
sbb
mov
pop
rcll
cmp
pop
inc
inc
dec
pop
push
add
sbb
popa
mov
cmp
dec
push
inc
add
dec
adc
in
dec
cltd
pop
push
fsubrs
lahf
data16
rolb
stc
in
jnp
or
adc
repz
cmc
jecxz
mov
test
in
ljmp
leave
sub
push
push
shll
aas
jmp
aaa
push
jecxz
and
pop
subl
in
lea
fsubp
and
inc
int
in
mov
sub
xor
out
cld
jb
lds
lahf
jge
cmc
in
imul
xor
fwait
mov
shll
jl
xchg
add
std
iret
popa
mov
jg,pt
invd
dec
jl
add
stc
xchg
pop
in
pop
add
out
call
pop
cmp
mov
inc
mov
cmc
xchg
hlt
push
cmp
dec
xchg
notb
dec
pop
push
add
aaa
mov
nop
push
adc
cli
sbb
adc
mov
push
bound
pop
and
cmp
adc
dec
push
dec
movsl
aaa
popa
call
adc
push
pop
adc
dec
pop
sahf
push
sarb
lret
adc
dec
aam
outsb
out
adc
push
call
call
mov
les
outsb
mov
inc
adc
push
cmp
loop
push
or
xchg
in
icebp
fstpl
mov
jg
push
cmp
cmpb
cmp
loopne
sbb
pushf
push
mov
mov
aad
cmp
xchg
cwtl
in
in
xchg
bound
std
mov
ret
jle
jbe
sti
in
icebp
mov
jnp
mov
mov
jg
sarb
imul
jne
sbb
mov
dec
mov
sahf
les
sub
inc
test
test
int
mov
adc
xlat
std
jns
and
jno
mov
push
mov
cmp
bound
cs
jb
xorb
aaa
test
idivb
pop
out
xchg
or
lods
lcall
aam
dec
popf
and
push
rcrb
and
loope
xor
icebp
mov
cmpsl
and
jae
popf
or
push
xchg
cmp
push
sub
aas
decl
push
push
sbb
out
lea
addr16
push
jmp
dec
lret
ror
lret
movsl
cmp
or
adcl
xlat
outsb
xor
sub
insl
mov
arpl
aad
adc
xchg
adc
jbe
mov
add
cmpsl
cmc
cli
push
outsb
jnp
xchg
or
push
pop
jb
das
push
popa
dec
outsb
call
int
inc
sbb
sti
or
push
out
push
or
mov
mov
pop
adc
and
xchg
and
ret
sti
repnz
setl
ljmp
rcr
test
test
inc
pop
in
push
movsl
sahf
aam
pushf
hlt
imull
mov
inc
push
in
xorb
pushf
jp
xor
loopne
inc
push
iret
sbb
lea
pushl
pop
cmp
rcr
lock
pop
sub
jns
mov
imul
sub
pop
xchg
pop
fwait
cmc
ljmp
push
cwtl
fcompl
gs
loopne
adc
and
jg
rcr
outsl
movsb
movsl
jmp
out
fdivl
dec
mov
sbb
sbb
pop
adc
mov
flds
sbb
pop
adc
push
cmp
cmp
cli
lods
fnstenv
repz
std
mov
lods
pop
cs
jnp
push
pop
movsl
out
stc
leave
mul
add
mov
add
movsl
dec
shlb
and
or
in
mov
loop
std
test
movsl
sbb
xor
adc
cmp
sub
repz
movsl
lods
push
les
sbb
out
mov
stos
mov
jp
add
sahf
sti
or
dec
cs
outsb
sub
loope
pop
fldl
dec
movsl
andb
shrb
movsl
jno
out
shl
jo
pop
mov
hlt
push
faddl
xchg
mov
cmp
cmpsb
dec
fcmovbe
inc
repz
movsl
xchg
js
int3
mov
add
in
shll
pop
stos
add
cld
ss
lock
or
xor
cld
and
in
fldenv
mov
cwtl
add
ds
cli
cmpsl
xchg
and
jno
jp
bound
and
mov
stc
js
xlat
jp
stos
jmp
push
dec
or
xchg
shll
movsl
out
gs
cltd
and
lods
xlat
push
push
jne
mov
mov
call
mov
movsl
mov
fucom
movsl
pop
inc
push
cli
in
mov
xchg
cmpsl
scas
movsl
dec
jg
call
xorl
push
xchg
pop
xchg
cltd
ret
and
push
in
faddl
xchg
xchg
inc
lods
push
sbb
cli
aas
add
jno
cmpsl
mov
adc
movsl
leave
mov
adc
cs
jge
negb
bound
enter
cld
movsl
sbb
mov
movsl
les
aad
movsl
cld
iret
leave
jp
or
fsubl
jmp
stos
add
mov
sub
fstps
xchg
and
cs
sub
mov
in
sahf
fucom
outsb
push
jne
cmp
lret
mov
loopne
test
lahf
aad
mov
cmp
sti
in
nop
in
and
movsl
movsb
jns
les
push
fcomps
push
dec
sbb
xchg
mov
xor
fdivrp
dec
outsb
adcb
pop
mov
loop
movsl
push
xchg
add
mov
bound
fnsave
push
mov
sbb
cmp
rolb
lcallw
jne
icebp
enter
xor
cmp
sbb
stc
int
mov
lds
sti
mov
movsl
aam
insl
pop
xchg
dec
shrb
test
fstpt
sub
xor
mov
movsl
sub
adc
movsl
sti
shl
clc
js
out
jne
movsw
pop
mov
mov
cwtl
movsl
scas
add
clts
scas
sub
pop
push
xor
pop
ja
and
dec
xor
shr
inc
lea
or
stos
sub
jp
fldenv
ss
xlat
movsl
clc
xchg
sahf
xor
ljmp
movsl
cmpsl
nop
xor
push
jl
mov
repnz
push
mov
or
add
jnp
movsl
lock
shr
std
fstps
jo
ss
mov
mov
adc
aam
inc
adc
movsl
adc
mov
adc
xchg
jmp
movsb
fwait
xchg
jo
mov
js
mov
sub
inc
jmp
adc
mov
cmp
dec
lret
stc
fsubs
int3
ja
push
xchg
inc
xchg
mov
inc
mov
pop
mov
std
mov
mov
aas
or
movsl
jp
fs
xchg
mov
xchg
stos
and
movsl
scas
sbb
mov
int
and
fildl
insl
mov
mov
ljmp
inc
js
inc
pop
ret
movsl
or
mov
xor
iret
movsl
pop
sbb
jbe
jns
movsl
sbb
shrb
dec
jp
cmc
in
inc
mov
lcall
addr16
outsb
dec
push
pusha
in
imul
cwtl
bound
in
test
test
inc
out
movsl
push
jl
and
cwtl
cld
lds
or
addr16
cmpsl
mov
mov
add
stos
outsl
push
adc
mov
xchg
popf
mov
mov
dec
idivb
shl
cmp
sub
iret
call
mov
pop
sbb
lock
sbb
cmp
shll
xchg
dec
into
sbb
push
xchg
dec
in
lock
mov
sub
mov
adcb
mov
pop
dec
push
mov
in
daa
movsl
adc
inc
enter
loope
mov
jae
scas
or
lods
mov
add
clc
mov
aaa
cmc
push
add
mov
out
ljmp
pusha
popa
jb
cmpsb
mov
nop
push
mov
xchg
mov
movsl
test
icebp
lock
sub
push
rcll
sub
ret
lret
xor
imul
add
push
push
mov
test
out
sub
into
movsl
push
pop
pop
insl
mov
xchg
mov
mov
push
sub
lret
cli
sbb
sbb
movsl
arpl
xor
movsl
lret
shl
bound
sbb
call
outsb
fisttps
xchg
pop
idiv
xchg
movsl
test
jge
jecxz
sbb
movsl
mov
mov
mov
repz
xor
dec
inc
shrb
or
dec
sbb
pop
out
movsl
cmp
sbb
fbld
cmp
push
push
insb
stos
aam
xchg
std
xchg
cli
inc
add
test
repnz
add
xchg
sbb
xchg
ljmp
pop
in
je
push
imul
cmc
add
movsl
fstp
outsb
pop
push
js
or
movsl
aad
sub
clc
and
pusha
mov
mov
push
iret
movsl
scas
sub
sbb
inc
sbb
mov
movsl
test
xchg
inc
or
fcomps
stos
xchg
sbb
inc
jmp
mov
cli
dec
pop
add
repz
or
cltd
ja
push
pop
movsl
les
cmp
or
cwtl
orb
sub
into
xchg
mov
sbb
jmp
movsl
inc
ljmp
mov
scas
popa
adc
and
std
pop
movsl
xchg
pop
adc
fwait
movsl
scas
shll
ja
or
movsl
adc
in
or
inc
es
negb
aaa
lds
stos
movsl
fwait
sub
push
mov
sbb
cwtl
mov
test
jns
dec
jne
dec
ja
inc
add
cwtl
in
sub
movsl
in
out
and
popf
pop
inc
flds
pushw
test
stos
je
push
daa
jle
fcompl
push
inc
repnz
mov
movsl
test
mov
mov
and
movsl
jecxz
adcb
push
dec
mov
bound
lds
and
movsl
mov
loopne
scas
cmpsl
rcrb
scas
nop
in
mov
xor
xor
mov
mov
das
push
loope
andb
mov
popa
outsb
push
aas
push
cld
lret
imul
repz
fidivrl
pop
mov
mov
pop
pop
adc
push
and
idivb
movsl
sbb
adc
test
testl
outsb
cld
xchg
hlt
enter
mov
jae
mov
push
jnp
dec
jb
mov
in
inc
call
lcall
mov
lea
outsl
insb
push
cmpsl
adc
ljmp
push
movsl
imul
dec
in
mov
cmpsb
movsl
into
pusha
test
sbb
add
mov
xor
cmc
shlb
cmpsl
mov
ret
inc
inc
outsl
sbbb
inc
pop
or
dec
mov
int
out
pop
xchg
add
fstps
dec
movsl
pop
inc
push
push
movsl
outsl
hlt
aaa
cmp
adc
je
jl
test
movsl
stc
cli
pusha
in
pop
popa
aam
jmp
movsl
xchg
sub
sub
mov
or
mov
outsb
daa
imul
movsl
jge
sub
mov
xchg
push
jp
aas
movsl
inc
rorb
lods
sbb
or
dec
imul
fimuls
cwtl
jp
mov
test
fadds
mov
pop
test
push
cmp
movsl
mov
pop
mov
xchg
mov
lret
movsl
xor
enter
int
popf
cs
sarb
mov
lods
sub
jmp
je
enter
int
movb
mov
jle
push
push
fsubrl
dec
in
aad
popa
dec
into
fldln2
mov
xchg
gs
inc
jp
or
fildl
add
in
mov
push
insb
push
push
pop
movsl
push
test
jns
xchg
xchg
sub
hlt
daa
movsl
lcall
inc
mov
mov
scas
xlat
movsl
add
mov
movsl
jmp
ja
cmpsl
cmp
imul
jne
pop
and
inc
sub
jp
sarl
fs
int3
jo
das
ss
shlb
cmpsl
data16
and
push
sub
icebp
movsl
in
pop
or
movsl
lock
cmp
mov
out
loop
push
dec
cltd
mov
adc
movsl
stos
imul
mov
iret
js
test
fadds
cmp
inc
movsl
repnz
mov
stc
or
jmp
insb
popf
jle
pop
mov
pop
lods
je
dec
jb
fs
cmpb
jg
nop
sub
lds
push
lods
adc
movsl
push
popf
cld
fmull
cs
add
test
mov
dec
sti
fsts
pop
movsb
mov
pop
adc
arpl
dec
int
dec
in
leave
mov
dec
in
pop
popa
movsl
mov
adc
inc
aas
dec
sbb
repz
scas
ret
xchg
movsb
adc
mov
or
xchg
shll
lea
fcmovne
movsl
pop
iret
xchg
sub
cmpsl
adc
ror
addr16
jnp
jmp
push
and
movsl
inc
sub
push
mov
repz
jnp
out
add
fbld
cmpsb
pusha
mov
ss
movsl
test
inc
inc
cmc
movsl
ljmp
pop
movsl
test
jmp
movsl
mov
mov
or
xor
cwtl
mov
mov
das
ffree
dec
cwtl
cmp
mov
mov
movl
mov
dec
aas
inc
fnstcw
std
out
idiv
mov
insl
shlb
pushf
push
mov
sahf
mov
jne
xchg
dec
jno
xor
inc
mov
cmpsb
movsl
fwait
sbb
lret
movsl
sbb
mov
movsl
mov
out
cli
mov
xchg
jnp
xor
mov
movsl
and
inc
gs
mov
mov
aad
adc
ja
pop
fucomi
fs
data16
push
movsl
inc
shr
jno
cli
add
movsl
in
push
insb
jecxz
xchg
pop
cld
movsl
lock
lret
call
lods
leave
add
lcall
ds
jmp
and
andl
mov
mov
lods
and
bnd
stos
fadd
and
adcb
cmc
mov
movsl
stos
push
pop
jecxz
sbb
movsl
leave
pop
mov
js
mull
sub
lods
sbb
lock
lret
dec
movsl
fisubrl
loope
cmc
pusha
jae
jl
imul
jp
push
add
xor
pop
mov
pop
lods
cmc
hlt
lar
movsl
sbbb
or
imul
fcomp
add
movsl
fwait
xor
nop
cmp
std
movsl
add
xchg
xchg
outsl
imul
mov
dec
add
xchg
shll
in
call
sti
sbb
sbb
pop
mov
lahf
cmp
xchg
sahf
sub
je
adc
push
in
movsl
pop
push
mov
aad
mov
xor
xchg
movsb
push
xchg
pusha
es
cli
mull
inc
ret
in
sbb
jle
or
sbb
stos
lods
add
or
lea
mov
imul
adc
jmp
sti
movsl
rcll
or
test
popa
or
sahf
inc
gs
push
movsl
jmp
jle
je
movsl
imul
inc
std
sub
sahf
adc
add
test
sbbl
roll
hlt
movsl
mov
aad
push
out
gs
jmp
cmp
add
js
movsl
sbb
repnz
cmpsb
movsl
mov
outsl
adc
test
lret
cmpsl
or
mov
out
cmp
cmp
jmp
in
test
das
xchg
scas
push
or
and
inc
or
adcl
sar
pusha
out
pushf
outsb
jle
mov
xchg
cmp
dec
loope
test
call
cwtl
popf
aam
test
in
outsb
dec
stc
inc
jb
ljmp
lods
mov
repnz
add
mov
jnp
mov
cmpsb
and
clc
fstpl
movsl
lea
lds
mov
sbb
movsl
call
dec
insb
mov
sbb
fwait
inc
or
int
pop
cltd
and
push
add
fcmovb
adc
pop
movsl
push
ljmp
and
dec
imul
aaa
and
in
notb
sahf
xchg
stos
and
movsl
add
sbb
stc
hlt
mov
dec
movsl
andb
in
pop
sahf
ret
jge
out
icebp
ret
mov
sbb
or
sub
pop
fisubs
aas
data16
out
movsl
lcall
lods
movsl
sub
cmpsl
mov
adc
mov
mov
sbb
inc
sbb
sub
jne
leave
movsl
rolb
jns
gs
shrb
aas
psubd
das
movsl
in
jmp
lret
push
enter
lea
negl
sbb
or
or
mov
mov
imul
xchg
mov
out
mov
jmp
and
xchg
inc
sti
aas
movsl
cmp
adc
dec
pop
rorl
movsl
xchg
add
dec
cld
frstor
loope
subb
in
mov
pop
aam
out
movsl
sub
xadd
mov
and
in
add
movsl
inc
pmaxsw
mov
or
cmp
lret
gs
xchg
adc
mov
loop
insl
movsl
fsubr
jmp
mov
dec
dec
pushf
mov
dec
dec
pop
mov
lods
in
imul
icebp
fidivs
movsl
xchg
push
lds
pop
repz
arpl
sbb
push
adc
mov
and
lds
xchg
adc
in
sbb
stc
bound
test
frstor
dec
and
mov
and
dec
cmp
xchg
cwtl
add
leave
ljmp
movsl
leave
in
std
dec
or
pop
and
scas
vpunpckldq
aad
xchg
scas
mov
push
adc
je
jle
cmp
leave
dec
pop
pop
das
cli
push
data16
xchg
mov
psrlw
mov
add
push
fimuls
shll
pop
sbbl
mov
jl
xchg
lds
xchg
mov
push
insl
mov
xor
mov
movsl
mov
stos
add
data16
inc
pop
orb
movsl
rcl
xor
movsl
cwtl
mov
out
jmp
outsl
mov
xor
jbe
movsl
imul
into
xchg
adc
mov
sbb
cmp
mov
lret
popf
mov
in
ret
int3
movsl
inc
add
lahf
movsl
or
aad
sbb
mov
movsl
outsb
cmp
jl
sbb
mov
mov
fldcw
out
mov
fcomp
int
pop
mov
push
fs
sub
inc
movsl
clc
sbb
mov
movsl
inc
lahf
nop
cmp
push
jle
lcall
roll
dec
cmpsb
sub
test
mov
jns
aad
lods
mov
inc
sub
bound
push
push
or
movsl
rol
push
loopne
clc
aaa
repz
or
mov
xchg
add
xchg
or
movsl
jne
rorw
push
ja
dec
jns
inc
mov
mov
neg
jmp
inc
shll
or
add
andb
adc
movsl
sub
and
push
movsl
fildll
add
movsl
inc
mov
shrl
mov
mov
xchg
cmc
lods
sbb
std
add
call
sbb
addr16
ret
mov
fnstsw
outsb
in
fdivrp
iret
je
int
fs
mov
pop
lds
inc
sti
add
gs
jmp
mov
sub
sub
iret
jge
cmp
mov
movsl
movsb
fdivs
cmp
mov
jp
mov
mov
sub
imul
movsl
shlb
xchg
jecxz
imul
movsl
xor
xor
outsl
push
aam
add
sbb
cmp
and
mov
ds
pop
push
cli
add
adc
xor
frstor
popa
call
inc
outsl
ljmp
movsl
pop
add
insb
push
outsl
pop
loopne
sub
and
inc
mov
ja
imul
stc
movsl
cmp
mov
mov
lret
push
jle
shll
xor
movsl
sbb
push
dec
movsl
imul
mov
xchg
xchg
pop
pop
sbb
xchg
jl
std
loopne
out
sbb
movsl
int3
jnp
js
leave
pop
mov
aad
xor
push
in
xor
pop
lahf
stos
add
adc
pop
andb
fists
unpcklps
leave
adc
ret
lods
push
inc
jno
xchg
jb
jle
js
xchg
dec
lods
cmp
or
jns
mov
addl
dec
dec
mov
cwtl
out
stos
and
mov
pusha
fisttpll
push
or
and
sub
cmp
and
sbb
mov
popf
jle
bound
rcrb
cmp
and
adc
out
popa
cmp
mov
jle
es
movsl
sub
or
stos
ret
cmp
sbb
mov
clc
ljmp
xchg
bound
inc
lcall
sbbl
scas
sbb
fdivrs
fimuls
mov
adc
int
out
sarb
jo
add
push
adc
adc
mov
cmc
jg
dec
stos
movsl
lcall
and
outsb
sbb
cmp
pop
push
stos
mov
push
lcall
push
int3
fisubrl
push
mov
std
mov
ds
dec
out
ret
add
and
mov
sub
cmc
cmp
jae
ret
imul
je
gs
adcl
inc
push
xor
inc
sarb
adc
mov
or
movsl
jecxz
inc
addr16
movsl
push
jne
ffreep
mov
fnstcw
cld
mov
jb
call
aaa
cmp
dec
movsl
inc
data16
in
bsf
daa
adc
sbb
out
xchg
imul
in
mov
xchg
sti
push
xchg
xchg
sbb
push
mov
pop
pop
test
hlt
pop
fcoms
repz
cmp
mov
fld
xlat
out
pop
out
jge
xchg
xor
movntq
out
or
in
nop
mov
shll
cld
movsl
mov
test
pandn
or
movsl
mov
lret
pop
mov
lods
mov
xlat
ret
jge
aas
dec
or
ja
jns
insb
adc
pop
popl
inc
inc
add
mov
pop
pop
pushf
mov
pushf
lret
movsl
int
dec
push
sahf
xor
gs
jne
cwtl
add
addr16
mov
sbb
sbb
cmp
jl
sub
or
cld
sbb
pop
or
xlat
xchg
cmpsl
int3
test
inc
push
sub
inc
dec
ss
dec
mov
subl
mov
add
sbb
in
push
stos
mov
fisttpll
jge
daa
scas
pop
xor
xchg
pop
adc
mov
leave
test
mov
jge
in
notl
mov
jp
pop
lods
lcall
pop
insl
and
out
fcmove
shll
sbb
sbb
in
jbe
out
std
cmpsl
cli
push
dec
add
or
cmp
sub
sahf
loop
icebp
sarb
int3
jns
lods
adc
xlat
cmc
sbb
sub
popa
inc
jle
mov
xchg
clc
or
pop
aas
add
sub
mov
icebp
sub
nop
loop
orl
push
int
add
sub
fcmovu
mov
mov
xchg
es
loop
and
ficoml
xchg
and
ffreep
push
jp
rclb
push
cmp
push
cmc
mov
push
repz
mov
cmp
std
pop
test
stc
pextrw
mov
cmc
sub
mov
push
daa
fists
push
add
clc
xchg
fistpll
test
xchg
push
xchg
mov
inc
inc
sbb
mov
test
lock
test
addr16
enter
push
sbb
into
pop
xlat
adc
pop
mov
lret
push
push
mov
and
or
lcall
pop
insl
popa
pop
jnp
jge
in
jno
pushw
mov
xlat
push
jae
ja
sub
movsl
and
mov
aaa
sbbl
cmc
jge
movsl
mov
adc
xor
mov
lods
enter
mov
pushf
xor
mov
push
cmp
mov
cwtl
pop
and
pop
add
mov
lods
add
cld
lret
mov
cmp
mov
dec
lahf
add
movsl
inc
out
push
xor
pop
cmpb
pop
rcrl
pop
scas
icebp
cli
xchg
xchg
mov
jne
adc
fs
mov
mov
mov
inc
pushf
enter
call
in
pop
ja
inc
fs
add
sub
adc
xchg
inc
push
add
movsl
dec
pop
sar
dec
adc
xor
clc
sub
cmp
mov
inc
test
movsb
outsl
scas
sub
jb
dec
jp
movsl
ror
mov
js
pop
add
in
mov
ja
push
popf
stos
mov
and
mov
push
jnp
in
fs
jmp
xchg
addb
clc
and
xor
movsl
ret
xor
mov
or
movsl
pusha
test
pop
pop
sub
rclb
mov
cwtl
sbb
mov
pop
mov
shrb
fldenv
add
movsl
push
lock
stos
dec
xor
cmpsl
mov
scas
xchg
movsl
xchg
shrl
movsl
jne
loop
addr16
call
mov
xchg
out
mov
mov
push
out
arpl
add
ja
movsl
test
sub
pusha
orb
repnz
jecxz
inc
cmpl
aas
adc
insb
cld
movsl
mov
movsl
dec
in
or
movsl
popa
das
fwait
mov
fucom
movsl
adc
and
push
xchg
mov
int
pop
in
out
pop
and
in
clc
xchg
and
xchg
jp
mov
mov
sbb
pop
mov
pop
in
push
iret
mov
imul
inc
dec
pop
push
mov
sub
xor
cmpsl
mov
xchg
push
adc
stos
es
popa
ss
mov
mov
inc
push
lea
movsl
jns
push
subl
pop
xchg
outsb
cmp
and
inc
in
dec
inc
or
movsl
push
std
roll
insb
xor
fsubl
fmul
sti
jnp
out
dec
outsb
push
movsl
pop
pusha
push
pop
mov
sahf
lea
or
test
fidivs
sub
movsl
sbb
ror
scas
scas
and
xor
daa
insb
pop
mov
adc
add
mov
dec
imul
jmp
adc
pop
fldl
movsl
mov
leave
out
add
movsl
dec
adc
aaa
or
xor
inc
stos
movsl
je
pop
adc
into
pop
cmp
mov
sub
pushl
out
stc
mull
cmp
movsl
cmc
lret
lea
mov
cwtl
cs
xchg
push
pusha
jg
cmp
ret
dec
sub
jge
jle
pusha
xor
mov
adc
icebp
shl
mov
push
in
mov
scas
sub
add
int
andl
push
push
xchg
imul
dec
xor
inc
jmp
and
je
loopne
sub
mov
push
push
ret
xlat
cmc
les
push
push
push
mov
xlat
dec
and
pop
fsubl
sub
sub
mov
mov
pusha
mov
lahf
adc
icebp
sbb
pop
cmpsb
mov
push
in
jbe
jg
xchg
add
dec
aas
ljmp
hlt
lahf
loop
push
out
cmc
int
mov
xor
or
dec
lret
loopne
sti
push
xchg
mov
pop
rcrb
push
dec
adc
popf
inc
bound
mov
dec
aas
jecxz
jns
pop
pop
iret
inc
repz
adc
repnz
aad
add
dec
cs
or
cld
inc
pop
add
mov
push
jns
fsubl
out
shll
and
sub
shll
adc
clc
cmc
icebp
mov
jecxz
mov
pop
cld
pop
cmp
repnz
mov
inc
movsb
mov
fadds
test
push
sub
xor
mov
lds
test
cmp
sub
mov
arpl
push
out
imul
sbb
push
pop
sti
movsl
pop
pop
mul
in
jp
icebp
or
sub
cmp
mov
mov
mov
inc
std
add
mov
mov
lock
loop
fwait
jb
jo
inc
jae
add
loope
mov
sub
mov
leave
pushf
nop
pop
mov
inc
add
pop
popa
sbb
insl
push
cld
pop
filds
push
jle
add
mov
or
add
int3
mov
movsl
xchg
out
cmc
std
sub
fstps
test
push
cmp
sbb
int
stos
cmp
inc
in
jns
sub
imul
fnsave
movsl
arpl
out
cwtl
das
stos
cmp
xlat
loop
push
lretw
add
fisubs
sti
lods
sbb
cmp
ljmp
pop
lret
pop
jmp
in
cmpl
xor
pop
pop
loope
fistl
add
subb
cld
push
dec
xchg
ja
sbb
or
addr16
dec
loopne
jne
mov
pop
inc
jns
sub
pop
mov
and
add
dec
sbb
inc
mov
dec
movsb
and
bound
dec
pop
or
mov
fdivrl
push
cmp
xchg
and
sbb
jecxz
pop
push
arpl
xor
leave
xchg
stc
mov
cmpsb
mov
mov
mov
imul
sub
cwtl
or
mov
sbb
fnstcw
adc
bound
movsb
out
cmc
sub
pusha
sar
rol
sub
clc
cmp
movsl
push
mov
push
adc
xchg
mov
gs
arpl
cmp
pop
sub
mov
es
ljmp
pop
push
ret
push
clc
xchg
push
cmp
pop
sub
jno
sub
inc
and
mov
aad
bound
aaa
dec
stos
js
sbb
mov
clc
mov
imul
lods
out
cmp
popf
and
cmpsl
xor
cmp
xchg
mov
out
in
or
fisttpll
outsb
cmp
dec
adc
mov
pop
pushf
cmp
fnsave
fucomip
lea
lds
ret
jp
mov
gs
loop
xchg
pop
movsl
mov
sub
mov
xor
or
pop
scas
cmpsl
lock
add
pop
int3
mov
jle
jmp
fsubs
sahf
arpl
in
testb
fs
dec
inc
push
sahf
fdivp
cmpsl
cmpsb
jae
bound
mov
in
push
insb
inc
je
pop
and
movsl
ds
cmp
addr16
xchg
divb
mov
inc
xlat
movsl
push
gs
stc
sti
push
mov
dec
in
jns
leave
cmpsl
movsl
sbb
out
lods
fnstenv
movsl
xor
in
pop
icebp
fcompl
xor
movsl
xchg
subb
movsl
sbbl
das
sub
sub
and
jns
ja
mov
push
and
add
loop
bound
fisttpll
cmpsb
ljmp
adc
cmp
mov
xor
movsl
mov
cmp
fsubrl
xor
jmp
xchg
into
shl
inc
pop
addr16
dec
jge
stos
data16
xchg
movsl
das
mov
mov
pop
movsl
and
dec
outsb
push
mov
mov
in
popa
sub
and
mov
cmc
jbe
repz
add
push
imul
mov
lds
jo
jb
pop
aad
xor
cs
xchg
movsl
ljmp
cld
jbe
aad
repnz
movsl
js
push
cwtl
adc
and
in
mov
shlb
push
sbb
xchg
dec
push
add
in
lods
imul
lcall
movsl
adc
repz
lahf
in
popa
push
andl
mov
leave
push
push
hlt
pushf
lds
frstor
push
movsl
push
gs
jb
mov
dec
adc
enter
movsl
jae
mov
sub
mov
mov
scas
mov
les
adcl
add
arpl
fsubl
pop
daa
movsl
test
in
mov
sub
xlat
movsl
inc
jne
pop
or
push
pop
sti
fsub
testb
mov
ss
punpcklwd
out
cltd
mov
bound
mov
out
int3
jecxz
out
mov
sub
insl
movsl
sub
pop
mov
aas
push
inc
popa
lods
push
into
xlat
call
push
or
dec
dec
inc
ljmp
lcall
jl
int3
movsl
std
repz
stos
jne
or
push
movsl
dec
sub
test
scas
and
sbb
enter
push
outsl
and
ror
movsl
xchg
lods
xchg
mov
cs
lcall
xchg
mov
xor
xor
dec
addb
xor
add
test
mov
cmp
cmpsb
stos
popf
ss
or
fsubrs
push
stos
sub
inc
ds
dec
movsl
adc
mov
mov
fmull
or
imul
mov
pop
ret
mov
movsl
push
and
pop
sbbl
sbb
push
imul
movsl
ja
out
mov
ds
mov
out
mov
jmp
js
xchg
clc
adc
or
mov
cmp
cld
lret
pop
push
stos
lods
or
out
sahf
cmp
xchg
dec
mov
addr16
ds
cwtl
mov
jns
dec
jb
movsl
cmp
es
mov
rcll
cli
lret
in
add
movsl
push
cmp
xor
mov
pop
movsl
adc
or
dec
bound
push
dec
lds
je
pop
pushf
sar
test
sbb
enter
adc
add
ljmp
mov
nop
mov
push
xchg
cmp
sub
scas
loope
pop
call
xor
movsw
or
iret
xchg
jne
cmp
sub
movsl
push
mov
aas
mov
pop
arpl
fidivl
dec
jge
repz
movsl
pop
cmp
jno
mov
lock
xlat
lahf
sbb
gs
movsl
pop
test
push
pop
movsl
jp
mov
cmp
mull
mov
pop
cltd
in
ljmp
scas
movsl
in
and
icebp
out
mov
insl
bound
inc
call
fdivp
out
fldt
mov
mov
shll
lods
xor
adc
or
in
inc
inc
dec
jbe
mov
xchg
mov
or
data16
push
movsl
and
mov
outsb
pop
inc
nop
movsl
sbb
es
stos
or
movsl
cmp
mov
movsb
movsl
jmp
pop
push
int3
movsl
fsubr
lods
or
cmpsb
cmp
mov
sub
insl
and
inc
cmp
sub
push
mov
repz
out
dec
mov
adc
mov
ret
add
push
hlt
sub
movsl
insb
jae
lret
aas
mov
roll
mov
test
mov
mov
mov
test
mov
rcl
in
jo
scas
ret
movsl
xchg
pusha
push
mov
int3
loop
push
std
mov
adcb
loop
rolb
jb
fisttpll
sbb
addr16
loopne
mov
movsl
jno
cltd
imul
push
xchg
mov
hlt
aad
push
dec
outsb
movsl
adc
cmp
aad
dec
add
xchg
jno
xchg
cmp
push
subb
jae
gs
cmc
mov
jbe
jecxz
test
out
pop
sbb
popa
jle
lret
hlt
jmp
rcll
call
mov
jp
pop
sub
hlt
push
movsb
push
out
inc
lods
movsl
out
movl
mov
sahf
stos
add
movsl
roll
ret
mov
cmp
data16
lcall
jnp
mov
mov
mov
fs
mov
dec
movsl
outsl
icebp
into
dec
jmp
fmull
and
daa
lds
xor
idiv
pop
xchg
sub
test
loope
scas
pop
lods
mov
xor
sub
out
jno
stc
cmp
jecxz
std
push
shll
or
enter
nop
fs
dec
movsl
mov
sub
xor
cmc
and
sbb
cmp
cmp
dec
dec
pop
push
push
mov
bnd
jl
fistpll
add
fidivrl
hlt
mov
out
nop
mov
mov
add
push
sub
mov
push
sbb
adc
mov
pop
push
cmp
xor
movsl
lcall
addr16
pusha
std
xor
movsb
je
pushf
dec
fcoml
in
fimull
scas
movsl
pop
pop
or
jae
pop
outsb
movsl
dec
jle
sbb
scas
mov
mov
enter
cmpsb
or
das
inc
movsl
imul
sti
push
movsl
dec
inc
adc
xor
lods
and
hlt
inc
or
movsl
popa
push
push
jae
push
add
adc
jns
movsl
pop
dec
jbe
sub
movsl
inc
add
aam
mov
test
fwait
in
or
dec
pop
mov
cmp
cmp
mov
aad
cmp
cmpsb
pop
adc
call
push
mov
movsl
arpl
je
dec
in
jno
stos
aaa
movsl
mov
cld
movsl
outsb
mov
out
xor
notl
popa
dec
in
sbb
mov
push
test
sub
pop
xor
lock
push
dec
mov
movsl
addr16
mov
adcl
mov
mov
scas
movsl
adc
lods
shrl
dec
movsl
fiadds
gs
into
std
inc
jge
jb
mov
mov
nop
mov
and
ret
inc
sbb
pop
push
insb
and
data16
jecxz
sbb
pop
xchg
cmp
call
inc
xchg
and
sub
mov
ds
arpl
movsl
or
fsts
inc
xchg
xor
mov
push
cmp
mov
xor
jae
jle
movsl
pop
imul
cmc
gs
clc
in
add
out
cs
int
out
enter
clc
shl
movsb
and
addl
lret
cli
jo
push
push
movsl
mov
xchg
and
les
sub
in
xchg
push
jae
jecxz
inc
das
push
add
shlb
lods
xor
pop
loope
loopne
add
movsb
and
mov
out
and
outsl
push
leave
movsl
nop
dec
mov
arpl
mov
inc
arpl
push
outsl
and
add
pop
dec
cmc
out
xchg
push
push
int
pop
xor
sub
icebp
add
js
pusha
pushl
mov
shrb
in
mov
cmc
inc
icebp
push
test
mov
cmp
cwtl
push
dec
jb
push
scas
xor
scas
in
dec
sbb
dec
mov
jnp
repz
xchg
xchg
mov
popf
push
mov
cmp
adc
and
mov
sbb
sbb
sub
add
pop
push
cmpsb
loopne
or
cltd
int
jns
hlt
mov
jmp
add
sarb
repnz
xchg
pop
pushf
cmpsl
out
mov
insb
call
shl
hlt
je
divl
sar
hlt
std
push
or
inc
outsl
aas
or
jnp
sahf
das
insl
loop
mov
xor
inc
jno
push
mov
cmp
adc
cli
es
and
push
mov
ds
inc
push
sti
mov
lret
and
outsl
popf
icebp
sahf
sbb
inc
push
inc
xor
inc
out
and
adc
fnstsw
les
ret
les
sbb
adc
add
loope
dec
mov
xlat
fst
roll
jne
fsubp
pusha
sbbl
stos
mov
std
dec
clc
movsl
dec
icebp
ret
jle
jle
loope
hlt
mulb
xor
mov
sahf
test
in
jmp
mov
or
in
vmovd
into
loope
or
std
icebp
xor
inc
lods
lahf
lcall
scas
in
add
mov
lods
scas
lahf
pop
xchg
push
xchg
and
sub
sbb
movsb
pop
mov
mov
mov
push
add
outsb
pusha
adc
or
movsb
sbb
rcrl
in
sarl
rclb
push
and
inc
pop
push
in
clc
js
movsb
mov
sub
int3
fnstsw
icebp
aam
sub
shll
sub
lock
jl
xor
jecxz
sbbb
pop
push
pop
cli
mov
ret
in
xchg
lock
daa
test
xor
pop
pop
divl
mov
mov
jg
pop
and
fsubs
jno
xchg
and
or
bound
lods
jmp
fs
inc
jo
add
xor
and
pop
lret
sbb
rcr
sub
jns
in
push
or
pop
cwtl
and
xchg
jae
call
cmpsl
add
ljmp
in
xchg
xor
insb
testl
or
arpl
and
push
repz
flds
std
insb
ret
sbb
loope
dec
adc
adc
jg
out
sub
sub
cmpsl
insl
imulb
out
pmullw
xchg
popa
stos
out
shll
test
sub
test
xchg
xchg
mov
or
ss
loop
scas
sahf
sbb
test
or
std
push
lahf
in
jg
mov
push
sbb
pop
test
fs
movl
das
adc
dec
adc
jne
push
ja
mov
mov
push
xchg
mov
lret
enter
lcall
jge
int3
and
mov
jnp
data16
invlpg
ret
pushf
sub
xorb
pusha
jp
movsb
movsl
mov
mov
mov
cli
nop
mov
movsl
shll
ja
mov
mov
mov
into
out
iret
mov
int3
movsl
xlat
stos
jns
add
xor
mov
mov
aaa
xor
movsb
jne
stc
push
jns
aam
lods
movsl
add
loope
call
cmp
cmc
or
cs
jle
inc
and
ja
jp
in
mov
push
push
rcl
push
shrb
xor
inc
daa
lahf
movsl
jg,pn
and
cmp
xor
push
repnz
je
loop
sub
cld
stos
sbb
inc
insb
push
pop
in
in
jg,pt
lss
pop
lret
sti
in
int3
add
enter
jnp
cmp
sbb
clc
xchg
movsl
or
fcoml
aaa
mov
scas
and
mov
cmp
inc
mov
mov
loope
enter
push
aaa
hlt
imul
vmovshdup
xor
mov
test
ret
movsl
icebp
push
popa
in
testb
mov
pop
mov
shrl
xor
jmp
sbbl
rorl
cwtl
push
test
cmp
sub
pop
add
cmp
lret
icebp
out
movsl
filds
mov
mov
enter
pop
orl
movsl
jno
inc
clc
adc
and
mov
pop
sub
or
popf
in
icebp
roll
jb
mov
call
sub
inc
std
and
aas
mov
call
mov
daa
xchg
xchg
imul
jns
hlt
pop
enter
fisttpl
and
adc
xchg
rcrl
imul
push
int3
sti
inc
call
sbb
outsb
repz
cs
sbb
movsl
push
push
pop
fildll
add
lahf
cmp
popf
sub
mov
in
loopne
jns
stc
shll
or
testb
mov
loop
pop
inc
mov
xchg
add
xor
in
lods
rcrl
je
lahf
push
movsb
jl
lret
movsl
push
xchg
xor
test
out
insb
movsl
or
or
push
dec
imul
pop
mov
jo
imul
mov
popf
icebp
fmull
cmpsb
enter
fwait
lods
push
sti
add
pushl
add
push
mov
aad
sbb
mov
stc
inc
lcall
fdivr
push
mov
movsw
lods
mov
idiv
std
mov
jns
gs
aad
pusha
cmpsb
movsl
add
test
fwait
sti
cli
lods
jae
popf
mov
sub
or
ret
scas
mov
fstps
push
movsl
scas
insl
add
shlb
out
pop
xchg
mov
movsl
and
jae
sbb
fadd
adc
fsub
xor
iret
nop
mov
movsl
cmpsl
inc
lret
sbb
shlb
imul
fnstenv
jg
lock
lcall
lea
sti
into
mov
adc
icebp
popa
les
popf
mov
sbb
out
and
mov
stc
loopne
out
ficomps
sbb
mov
aaa
cs
jmp
mov
movsl
shrb
adc
and
and
fiaddl
shlb
mov
scas
jae
in
or
pop
movsl
int3
imul
rolb
push
insl
xor
inc
inc
sub
outsl
push
pop
shll
xor
cmp
ret
cs
mov
stc
aad
xchg
mov
sti
js
test
cld
ds
inc
lahf
xchg
test
mov
gs
and
pop
adc
jge
sub
cltd
add
cwtl
push
rcll
add
sub
daa
mov
icebp
mov
push
imul
xchg
pop
rol
push
adc
nop
iret
jge
ljmp
mov
lock
add
mov
into
add
jmp
movsl
push
mov
push
xchg
movsl
mov
les
sahf
cmp
rcrb
iret
stos
mov
jecxz
fstl
xor
mov
test
je
roll
push
add
adc
pop
rep
ffreep
jmp
aad
mul
lods
adc
lock
lods
outsb
adc
dec
or
xor
inc
int3
movsl
mov
xchg
inc
jnp
icebp
dec
xlat
popf
ds
sub
cmp
xchg
cmp
out
mov
test
or
sub
movsl
xor
xchg
scas
fstps
gs
cmpsb
xor
addr16
movsl
fidivl
movsl
rcll
mov
clc
data16
movsl
out
and
cmpsb
insl
inc
shld
inc
fs
jge
push
sbb
dec
cmp
inc
jl
andl
mov
movsl
ror
js
dec
jnp
movsl
xorb
aas
movsl
cli
sbb
mov
stc
dec
push
movsl
scas
inc
pop
push
dec
stos
loopne
or
add
push
jg
push
xchg
xchg
mov
xchg
or
int
xchg
mov
js
inc
xchg
sub
mov
xor
loop
xchg
sbb
or
mov
dec
lahf
sbb
test
je
mov
mov
add
xor
or
jno
pop
movsl
scas
push
sbb
dec
dec
sub
pop
lahf
xchg
movsl
sub
mov
mov
pop
imul
dec
hlt
inc
sub
and
jnp
and
sub
mov
aam
push
notl
jns
int
mov
jno
push
stos
movsl
fs
sbb
cmp
push
loopne
adcl
mov
sbb
mov
xchg
movsl
mov
lods
stos
test
test
cmp
int
movsl
jae
jecxz
jns
adcl
loopne
dec
mov
call
cmpsl
ret
xchg
stos
lods
mov
pop
cmpsl
jp
movsl
xchg
jae
sub
movsl
push
xlat
cwtl
pop
or
popf
movsl
or
mov
cli
sbb
addr16
pop
xchg
push
movsl
bound
js
movsl
subl
mov
mov
cwtl
pop
or
adc
sbb
push
test
jg
xchg
lcall
movsl
stos
dec
js
cmc
rcrb
pand
add
movsl
jno
adc
movsb
enter
mov
movsl
ds
dec
ffree
mov
in
mov
adc
mull
ds
or
movsb
mov
or
mov
popf
mov
mov
cmp
push
xchg
xchg
jmp
bound
mov
rorl
mov
bound
pop
movsl
ja
out
cmp
loope
movsl
pop
pop
insl
mov
xchg
jbe
movsl
loop
outsl
adc
inc
push
fs
or
in
cmp
mov
test
jp
movsl
jmp
jg
shll
mov
dec
jae
xchg
movsl
ja
in
or
mov
inc
adc
sbb
dec
imul
dec
sti
roll
jo
jno
pop
in
icebp
mov
mov
arpl
jl
ret
pop
in
lahf
loopne
push
add
sbb
inc
aaa
add
out
pushf
lods
imul
hlt
sub
adc
mov
mov
xor
mov
sahf
stos
nop
lret
pusha
sub
fisubs
push
ss
or
movsl
clc
mov
xor
in
or
in
mov
mov
movsl
clc
hlt
dec
sbb
movsl
add
xor
jmp
mov
mov
sub
mov
movsl
push
iret
jae
jp
mov
call
rol
mov
inc
cmc
pop
imul
fistps
ret
imul
imul
sbb
push
sti
dec
clc
sub
popa
sahf
popa
xor
popa
sti
fldl
and
jno
call
add
fiaddl
cmp
inc
mov
push
int
lret
inc
jmp
push
nop
lock
push
jg
jle
push
dec
ds
mov
mov
inc
jne
pop
xchg
in
inc
pop
xor
jl,pn
inc
rorl
popa
sbb
dec
lods
js
idivl
mov
arpl
mov
xlat
lods
test
mov
cmp
movsb
sub
std
lcall
push
inc
inc
es
mov
or
pusha
sbb
inc
js
mov
orl
add
or
adc
imul
pop
out
movsl
push
xorl
insl
add
into
xor
test
push
mov
hlt
pop
dec
jb
test
mov
jo
roll
push
fdivp
pop
dec
jno
mov
adc
stc
lods
push
stos
push
movsl
jp
xor
mov
inc
mov
dec
stc
pop
movsl
push
test
lea
addr16
movsl
dec
pop
mov
pop
mul
in
movsl
cmp
rclb
movsl
iret
inc
jbe
jecxz
pop
push
ljmp
clc
xor
mov
dec
pop
out
push
imul
imul
ret
cmc
adcl
sbb
and
xor
mov
or
cmp
xor
mov
add
and
mov
sbb
movsb
cmp
int
call
sbb
leave
movsl
iret
sbb
sbbb
xor
ret
mov
mov
sub
and
push
or
sahf
push
pop
mov
inc
lods
test
inc
jb
inc
lahf
sub
mov
out
in
push
and
movsl
pop
adc
movsl
cmp
mov
mull
popf
aaa
mov
cmp
or
mov
adc
lcall
lds
rcl
icebp
cmp
or
pop
movsl
inc
jae
aad
and
cs
mov
mov
xor
aas
push
movsl
mov
rclb
sahf
pop
inc
xchg
mov
bound
sbb
sbb
or
adc
movsb
shrb
fs
stos
xchg
movsl
adc
iret
xor
leave
adcl
insl
popa
jmp
in
lods
mov
adc
test
jle
in
lods
sbb
movsl
mov
sbb
shlb
jbe
and
in
addr16
mov
pusha
outsb
jae
mov
jbe
and
push
movsl
call
xchg
mov
add
movsl
xor
test
jo
push
jmp
sbb
sti
rcll
fidivl
mov
dec
scas
and
mov
push
pusha
cmpb
loop
hlt
mov
inc
sub
lods
jg
movsl
xlat
in
mov
mov
xchg
xor
mov
xor
mov
push
pop
bnd
mov
movsl
mov
xlat
jl
insb
pop
adc
outsl
movsl
cmp
jecxz
jo
imul
icebp
xor
pop
inc
sbb
push
adc
jo
push
rcrb
aad
add
test
scas
xor
mov
pop
insb
mov
std
or
sub
inc
cmp
bound
icebp
push
popa
out
jle
and
xchg
mov
inc
fcos
repz
mov
mov
ret
movsl
mov
jbe
movsl
or
add
or
lds
out
pushf
call
stc
ret
inc
lea
adc
push
jge
sbb
mov
add
js
pop
xchg
imul
jns
xor
pop
in
xchg
inc
xor
adc
sbb
mov
lea
dec
push
mov
jle
and
xchg
movsl
adc
mov
add
bndstx
hlt
sbb
adc
fldcw
or
mov
mov
cld
stos
iret
movsl
das
sbb
in
xor
movsl
xchg
jnp
jmp
movsl
fwait
and
movsl
mov
sub
push
fwait
ss
movsl
sbb
sbb
mov
mov
lahf
mov
out
inc
clc
jmp
mov
mov
mov
inc
jmp
lea
add
movsl
xlat
das
ret
and
and
xchg
adc
and
xchg
mov
xchg
clc
jg
or
stc
shlb
jnp
cmp
adcb
addl
xlat
bound
cmc
call
dec
and
push
lods
lock
pop
shll
add
in
mov
jge
enter
movsl
mov
and
dec
out
movsl
dec
xchg
fimull
cli
push
movsl
out
jnp
mov
movsl
fsubr
sbb
xchg
xchg
sbb
jae
loopw
ljmp
incb
movsl
filds
sbb
movsl
mov
xorl
out
iretw
je
test
out
ja
in
pop
pop
nop
or
movsl
mov
cmp
xchg
pusha
in
movsl
inc
test
psubusw
loopne
mov
movsl
js
dec
outsb
cmp
xchg
inc
movsl
push
or
push
mov
xor
arpl
das
mov
mov
pop
mov
sbb
jbe
ret
in
clc
add
sub
mov
push
insl
loop
lea
andb
leave
hlt
add
jmp
xor
jnp
mov
test
or
mov
into
jmp
enter
aaa
cmp
cmp
push
xchg
add
pop
lods
push
mov
mov
call
cld
in
adcb
push
adc
popf
in
inc
ja
loopne
movsl
cli
jae
mov
sti
fisttps
movsl
in
scas
dec
bound
cmpsl
mov
inc
or
lock
insb
jns
fcomi
imul
mov
repz
lds
inc
movsl
or
nop
xchg
push
or
and
repnz
sbb
pop
imul
and
sbb
cmp
loop
sbb
divb
scas
popa
in
repnz
movsl
jnp
pop
arpl
dec
xchg
loop
mov
dec
addr16
test
inc
push
mov
scas
movsl
hlt
mov
inc
std
mov
movsl
sbb
ficompl
jo
andl
pop
insl
add
sbb
sub
and
push
push
mov
out
sti
or
clc
in
mov
xchg
mov
jne
xlat
and
sahf
sbb
sbb
aam
in
scas
std
out
imul
adc
lds
mov
or
lea
pop
xchg
sbb
cmp
dec
sahf
ret
movsl
mov
insl
enter
sbb
popa
add
pop
push
and
sti
jl
cmpsl
inc
test
into
movsl
mov
cmpsb
jae
loope
stos
imul
imul
movsl
aad
std
loop
fsubrl
mov
sub
add
fcomp
and
mov
mov
movsw
int
ljmp
mov
adc
mov
movsl
jge
outsb
aam
movsl
inc
pop
pushf
ds
push
cmp
add
push
xor
movsl
adc
sub
pop
pop
js
pop
cmp
sub
dec
mov
fwait
aad
clc
nop
xchg
dec
jge
scas
lods
rclb
mov
add
movsb
cmp
daa
add
adc
mov
add
ss
lea
jb
movsb
in
addr16
insl
mov
test
mov
in
movsl
not
adcb
sub
xor
mov
mov
add
test
adc
jge
fisubs
shll
lcall
mov
sbb
repnz
jg
leave
stos
pop
jb
movsl
sysexit
xchg
test
jecxz
cmp
sub
sub
outsb
add
arpl
mov
cmp
cmp
das
mov
or
int
jmp
in
mov
push
flds
add
fldl
sub
cmp
scas
pop
pop
push
addr16
cld
push
pop
fstpt
sbb
mov
inc
sub
fmuls
mov
pop
cvtps2pi
pop
test
fidivrs
out
dec
inc
ds
push
push
push
cmpsb
mov
addr16
ret
pop
jno
and
cli
mov
enter
into
adc
shl
loopne
xchg
jae
sub
push
mov
movsl
sti
icebp
add
inc
call
lock
sbb
dec
in
stos
call
js
inc
in
sub
cmp
sbb
jecxz
je
clc
sub
movsl
jl
gs
test
data16
lcall
jo
popf
sbb
in
mov
cli
dec
and
pusha
rcrb
aas
mov
fs
imull
and
pop
push
mov
aad
cmpsl
in
pushf
mov
mov
jmp
xor
jb
mov
fmuls
push
rep
dec
pop
sbb
sbb
movsb
movsl
xchg
lret
sbb
inc
enter
lock
lcall
in
pop
xor
mov
and
mov
je
test
adc
add
ret
pop
mov
pop
in
jmp
jno
cmp
stc
xchg
mov
aas
popf
and
aaa
movsl
js
loope
lds
test
push
std
in
loop
inc
flds
xchg
in
add
cmpsb
movsb
or
mov
sbb
fsubrl
cmpsb
in
addr16
mov
mov
mov
pusha
cmp
gs
popf
dec
outsl
fnstsw
imul
jnp
cmpsl
or
xlat
mov
insl
sub
pushf
scas
ljmp
lds
mov
imul
gs
fsubs
sub
sub
fldl
push
pusha
mov
xchg
fdiv
js
mov
pop
sbb
inc
lcall
out
andb
jle
rcr
jl
rcr
fs
inc
call
ja
pop
hlt
sahf
outsl
jns
in
jle
sbb
mov
cmp
pop
push
add
pop
mov
in
jge
shll
sub
inc
loope
and
and
stos
ds
sub
icebp
aad
adc
pop
push
mov
inc
and
cmpb
sahf
ficoms
fdecstp
xchg
xlat
clc
cmpsb
shr
mov
xor
insb
push
mov
inc
mov
xchg
cmp
fisubs
rorl
js
cmc
loop
test
push
ljmp
mov
out
rcr
ss
cmc
and
loope
mov
mov
test
and
mov
xchg
sub
js
loop
or
pop
jns
fwait
pusha
mov
icebp
aad
imul
pop
flds
mov
out
movsl
jp
icebp
leave
out
xchg
add
mov
jbe
mov
jbe
lds
mov
dec
sbb
mov
icebp
mov
in
test
xchg
add
loope
mov
ficomps
scas
rolb
dec
pushf
push
push
stos
mov
xchg
fsts
lcall
out
pop
jle
testb
loopne
loope
add
fisttpll
and
add
push
push
cmp
stos
jae
out
int
and
adc
xor
xchg
mov
and
jne
mov
repz
sbb
std
test
je
mov
adc
lock
inc
mov
ss
pop
and
data16
or
ja
adc
jp
push
mov
fbstp
mov
test
aaa
std
pop
lret
inc
jle
dec
lahf
mov
lret
in
dec
loop
mov
fisubrs
pop
add
divb
rcrl
jle
or
jecxz
cmp
das
mov
pushf
std
push
jne
loope
imul
sbb
movsl
mov
add
lods
clc
movsl
call
mov
push
pop
movsb
aad
jl
mov
ljmp
fwait
pop
fadds
push
push
jnp
xor
xchg
clc
mov
inc
aam
mov
jmp
popa
bound
movsl
divb
mov
mov
mov
push
movsl
test
mov
ljmp
arpl
pop
in
sub
xchg
push
mov
mov
or
repz
mov
xchg
xlat
lock
push
add
mov
add
sbb
movsb
movsl
xchg
js
or
mov
adc
into
cld
pop
xchg
xlat
jno
push
pop
scas
ss
jg
je
movsb
pusha
iret
pop
sarl
movsl
cmp
jecxz
mulb
xchg
push
hlt
jge
dec
dec
push
insl
mov
mov
leave
pushf
mov
sahf
mulb
out
cld
and
pop
dec
popf
test
cs
pop
rcrb
inc
jl
and
out
xchg
cwtl
lods
ficoms
xor
in
mov
test
and
pop
adc
mov
mov
adc
jge
sub
xchg
into
enter
popf
cmp
inc
pop
movsl
pop
mov
int
movsl
arpl
gs
movsl
push
fwait
dec
test
mov
leave
sahf
fsts
sub
fs
movsl
dec
xor
cmp
jge
cmc
or
jl,pn
ja
cmp
aaa
cmovs
xchg
mov
sbb
ret
cs
decl
hlt
enter
movsl
jmp
fildl
mov
sub
mov
add
push
in
push
mov
loop
push
mov
sub
iret
addr16
push
lods
dec
movsl
or
mov
pop
mov
pop
add
imul
je
mov
push
adc
push
addb
pop
jle
ficompl
out
push
inc
mov
icebp
into
jbe
push
inc
and
pop
cmp
hlt
pop
jne
and
mov
rol
mov
sub
xor
sbb
mov
movsl
lods
stos
fwait
aad
int3
test
enter
in
jge
roll
movsl
fsubl
mov
movsl
or
pop
lret
call
mov
and
aam
fsubl
xchg
lods
sub
movsl
sbb
mov
gs
inc
or
lods
add
and
hlt
jecxz
ret
push
aas
mov
cmp
xor
or
js
bound
push
fwait
xor
mov
jno
int
test
scas
movsl
sub
xchg
iret
and
dec
fwait
movsl
fiaddl
icebp
aas
stos
sbb
mov
jp
scas
test
repz
mov
cmc
jge
cmpsb
call
jno
outsb
mov
xchg
dec
add
add
push
movsl
push
adc
divl
sahf
and
out
xor
cs
pop
sarl
mov
movsl
jbe
xchg
leave
mov
popf
movsl
xor
cmp
mov
movsl
sarb
pusha
jo
push
data16
or
inc
movsl
pop
loopne
fdivr
shrb
inc
pop
stc
lcall
movsl
fisubrs
fdivs
jmp
dec
fucomi
cltd
lret
and
outsl
push
lds
sbb
cpuid
push
test
or
in
stos
or
movsl
xchg
popa
es
mov
nop
mov
xor
inc
fldcw
movsl
fwait
pop
push
out
cmp
cwtl
jl
clc
xchg
jns
or
movsb
or
mov
fsub
movsl
fstpl
pop
adc
add
pusha
cmp
dec
adc
in
movsl
fcoml
imul
mov
xor
test
in
int
or
lods
mov
sbb
movsl
insl
inc
add
pop
pop
or
movsl
int3
inc
es
mov
aam
xchg
insl
jns
xor
cli
ret
or
xor
xchg
sbb
xor
popa
movsl
in
iret
add
pop
stos
lahf
ss
sub
push
in
rcr
jle
sub
sub
cmp
fsin
clc
enter
ffree
jae
dec
jo
call
loope
fnstcw
shrb
or
andb
fisubs
sbbl
inc
add
sahf
jecxz
push
out
lods
mov
movsl
ss
push
nop
movsl
mov
lods
lea
mov
and
lcall
movsl
adc
or
or
pop
sbb
dec
pop
inc
sbbb
les
mov
ret
adc
dec
fsubl
pop
andl
mov
ds
shl
sbb
hlt
stos
sbb
sub
sub
or
js
adc
xchg
pop
test
out
pop
pusha
pop
movsl
repz
jg
movsb
shll
push
inc
outsb
movsl
sbbb
mov
ret
xchg
mov
es
pop
ret
test
std
cmp
push
ret
stos
inc
int
cmc
adc
add
mov
pop
cli
add
enter
in
stos
sbb
jne
les
mov
xor
shlb
and
das
dec
jb
pusha
aad
int3
fbld
adcl
mov
out
adc
ret
hlt
scas
adc
cmp
movsl
shlb
movsl
stos
mov
and
cmpsb
popf
or
xchg
and
adc
test
sbb
ret
fisttps
pop
adc
clc
mov
mov
fnsave
popf
lret
cmpb
xorb
es
daa
stos
shl
out
push
movsl
cmp
lods
int3
icebp
pop
out
xchg
push
ret
push
xchg
fbld
sahf
not
ret
cmpsb
pop
mov
fbstp
subl
xorb
inc
shll
sbb
or
mov
inc
adc
mov
xchg
data16
lds
popf
push
movsl
sub
xchg
int3
lret
push
out
mov
cmp
cwtl
movsl
lods
sbb
fisubl
fsubrs
push
jne
jecxz
sarb
icebp
pop
fbld
dec
push
iret
sbb
popl
ret
fimuls
andb
xor
lcall
imul
hlt
movsl
jbe
rcll
sbb
ret
aaa
xchg
mov
icebp
int3
cmc
jmp
jecxz
loope
mov
adc
movsl
mov
jne
fldenv
movsl
or
and
int
fsts
addr16
jae
rcll
negb
lcall
aam
das
imul
mov
movzwl
inc
cmp
lahf
dec
movsl
mov
daa
and
add
gs
jle
jnp
movsl
testb
mov
sti
add
movaps
roll
pop
scas
mov
out
mov
adc
icebp
mov
addb
movb
movsl
int
sbb
stos
sub
mov
sbb
mov
mov
mov
movsl
test
push
movsl
stos
subb
dec
std
fsubs
mov
lds
mov
repz
movsl
jmp
mov
xor
mov
popa
subb
sub
movsl
push
mov
jl
enter
cmp
fwait
pop
faddl
mov
movsl
and
loopne
adc
movsl
into
mov
pop
pushf
mov
movsl
sbb
cwtl
pop
mov
push
insb
repnz
xchg
aad
or
mov
dec
fsubs
jle
movsl
leave
xorb
lcall
mov
pop
sbb
mov
push
jae
out
push
adc
popa
pcmpgtd
push
or
out
pushf
dec
shl
mov
and
push
dec
movsl
cmpb
aam
icebp
frstor
mov
repnz
movsl
cld
inc
adc
movsl
popf
add
pushf
fisubs
pop
pop
icebp
mov
nop
adc
add
cmp
pop
sbb
shll
adc
bound
call
jns
xchg
lds
or
mov
mov
movsl
mov
outsb
jne
pusha
inc
mov
mov
mov
xor
test
xchg
ja
mov
test
sub
mov
out
movsl
cld
aaa
inc
pop
mov
shll
loopne
dec
mov
imul
mov
jo
pop
into
xchg
or
mov
add
iret
sub
nop
das
dec
outsb
mov
mov
sub
jno
sbbb
out
pop
xor
or
in
ljmp
aaa
adc
mov
loopne
pop
mov
lahf
push
out
loopne
jbe
movsl
sbb
and
hlt
lock
icebp
jmp
adc
pop
sbb
mov
jne
sub
mov
and
inc
push
outsb
ljmp
mov
jp
sahf
insb
cmp
push
pop
mov
push
sub
cmp
adc
shr
test
mov
or
int
int
cmc
stc
and
lds
inc
or
push
out
pop
dec
xor
mov
jmp
xchg
ds
insl
outsb
arpl
icebp
int
fildll
sbb
xchg
shlb
rcl
repz
std
add
and
push
movsl
push
mov
in
js
push
out
ret
nop
cmc
jle
mov
jge
fdivs
std
movsl
enter
sub
and
pop
push
mov
xor
lds
pop
mov
fldenv
cmp
mov
pop
lods
jmp
mov
int
add
lods
adc
movsl
decb
into
pushf
lahf
sub
add
xchg
leave
xchg
aad
sti
cltd
movsl
cli
fcomi
sub
jns
loopne
dec
insb
push
or
and
andl
repnz
mov
andl
frndint
adc
fcom
xor
xor
mov
in
mov
imul
call
mov
and
movsl
fwait
sbb
cltd
push
mov
adcb
ficoms
nop
mov
rclb
mov
test
add
push
lret
mov
push
movsl
mov
mov
icebp
mov
in
insb
stc
adc
push
jae
insl
xor
mov
jo
int
lods
or
inc
outsl
xlat
jecxz
jb
pushf
mov
jp
scas
movsl
and
mov
sbb
cmp
daa
jle
inc
out
push
xchg
movsl
xchg
es
scas
fdivs
je
dec
les
fucomi
add
movsl
xorl
testl
test
loope
aam
lahf
movsl
popf
and
pushf
xchg
mov
mull
add
mov
mov
or
rol
sbb
mov
dec
xor
out
pop
movsl
loop
mov
pop
dec
data16
push
das
mov
arpl
inc
cld
jno
movsl
inc
sbbl
push
out
adc
int3
dec
movsl
call
les
jmp
cmp
icebp
push
mov
inc
movsl
jg
inc
xor
xor
or
mov
aas
cmp
and
mov
inc
xchg
mov
fldl
add
test
jbe
dec
pop
xor
jl
push
in
les
jb
sbb
cltd
pop
jae
xor
sahf
nop
andb
loopne
push
jns
enter
mov
mov
sbbb
fisttpll
lds
xchg
jns
lcall
sbb
scas
movsl
roll
movl
jmp
int
add
pushf
xor
push
movlps
pop
lods
mov
shlb
cmc
iret
cmp
jecxz
pushf
aaa
cmp
mov
das
push
push
mov
jge
lds
popa
ljmp
out
test
addb
adc
jl
fcomps
mov
push
inc
add
and
aaa
lds
cld
or
lods
mov
pop
lods
ljmp
xchg
das
cmc
xchg
add
push
jge
movsl
lret
dec
gs
imul
movsl
xchg
sbb
lods
xor
cmp
push
das
mov
in
or
mov
xor
popa
or
sbb
xor
int
add
jle
in
je
lods
movsl
push
aam
das
xchg
into
xor
push
movsl
out
les
adc
push
pop
outsl
mov
ret
cmp
pushf
nop
sub
xor
inc
movsb
std
clc
adc
add
pop
push
call
jmp
sub
clc
cmp
and
incb
std
and
mov
outsb
gs
pop
out
subb
mov
dec
lods
jae
ds
fistl
push
stos
das
movsl
out
dec
in
add
adc
shr
into
adc
dec
jo
inc
lea
lret
daa
cmc
shl
repnz
or
repz
jp
mov
xlat
stc
jecxz
int
add
and
mov
mov
out
mov
mov
inc
cmpsb
sarb
sbb
pop
popa
bound
movsl
fucomip
and
pop
mov
pop
mov
pop
imul
cmp
xchg
push
cmp
pop
sahf
lret
lds
test
pusha
push
inc
push
imul
inc
fisttpl
sub
stos
adc
leave
into
movsl
test
xchg
mov
mov
push
jns
addl
dec
in
mov
dec
out
mov
pop
or
mov
pushf
xchg
mov
add
or
xchg
lods
vpsubsb
ret
movsl
and
inc
mov
pop
push
fnstsw
test
aad
rorb
test
orl
iret
aad
pop
pop
cld
jmp
xchg
leave
inc
mov
or
mov
test
in
lret
xchg
lock
jge
pop
jp
popf
cmpsw
push
movsl
cmpsb
adc
lods
movsl
jge
js
test
shll
and
mov
insb
push
inc
gs
jae
in
and
mov
xor
push
mov
aad
and
pop
adc
push
das
hlt
push
addr16
or
inc
ss
and
mov
inc
mov
sub
into
mov
pop
pop
popf
inc
or
ret
mov
xorb
sbb
adc
dec
movsl
in
js
gs
int3
movsl
lods
and
sbb
lock
cli
sub
fistl
jle
mov
xor
data16
fstps
int3
sbbl
mov
jns
jp
sarl
add
dec
add
call
sti
and
xchg
adcb
mov
scas
out
xchg
cmp
sub
test
mov
xor
stos
in
sub
and
adc
incl
add
shrl
lods
and
leave
movsl
sub
push
mov
sahf
cmp
inc
add
or
das
cmpsl
and
cltd
and
jbe
mov
jmp
jbe
push
mov
mov
bound
lcall
cmp
xchg
sbb
ret
and
test
mov
arpl
mov
aam
enter
movsl
ret
sarl
movsl
and
cs
movsl
sub
cmp
mov
push
mov
sti
mov
das
movsl
and
sbb
mov
lret
mov
movsl
ljmp
bound
movsl
adc
cmpsl
pop
or
push
in
sub
aad
cmpsl
test
adc
push
fcom
mov
or
movsl
mov
add
push
sub
sbb
mov
icebp
fsubrp
movsl
pop
xlat
cmp
and
cmpsb
addb
inc
dec
adc
cmp
mov
loopne
movsl
cmp
les
sar
mov
pop
jne
sub
sbb
daa
add
into
lret
jmp
or
add
jno
fdivr
and
pop
and
jecxz
push
aas
mov
enter
movsl
cmp
sub
bound
xchg
mov
lods
mov
sbb
mov
movsb
sub
push
out
enter
je
ret
adc
inc
movsl
int3
out
rorl
xchg
xor
ja
nop
mov
loope
or
add
cmc
daa
int
fisttps
cmc
lock
mov
mov
ret
mov
outsl
movsl
jno
push
cli
sahf
call
jnp
int3
jmp
iret
lock
hlt
inc
sarb
sub
xor
xchg
js
pop
cmp
pop
and
push
inc
xchg
cmp
roll
jno
push
jge
dec
movsl
sub
push
outsb
jecxz
inc
cmp
adc
adc
psrlq
in
dec
stc
push
pushf
inc
ljmp
pop
ja
pop
addr16
outsb
mov
and
jl
roll
push
sbb
sub
cltd
lahf
lret
pop
jmp
movsl
pop
subl
movsl
and
mov
movsl
xlat
loopne
scas
mov
aad
dec
movsl
push
inc
sbb
pop
shll
movsl
adcl
and
outsl
std
push
xor
stc
jmp
movsl
hlt
sub
jle
add
mov
adc
movsb
lods
sbb
mov
movsl
xor
imul
inc
gs
imul
pop
inc
or
xchg
mov
ljmp
es
xchg
sub
leave
pop
jle
push
cmc
enter
daa
jle
xlat
add
lds
mov
gs
aad
sbb
fmull
mov
icebp
sbb
popf
mov
adc
jmp
in
jle
repz
outsb
mov
pop
sbbl
stos
cmp
in
xor
rclb
adc
movsl
stc
push
pop
loop
fadds
arpl
test
sub
testb
push
xor
add
iret
add
inc
call
out
mov
pushf
lret
sub
movsl
jbe
dec
push
mov
pop
and
cmpsb
push
and
sbb
mov
mov
iret
pop
lds
add
cli
in
add
and
push
clc
test
hlt
sbb
out
and
cld
es
andb
scas
imul
jnp
stc
leave
fisubs
jae
cli
insb
lds
pop
ds
inc
lds
daa
xor
jnp
sub
mov
push
sub
xor
push
dec
mov
xchg
inc
sub
aad
pop
movsl
pop
sub
dec
jp
fwait
movsl
mov
inc
psllq
mov
dec
push
ficompl
cmpsl
pusha
adc
arpl
ret
add
xor
or
dec
fucom
mov
push
test
call
push
rcrl
movsl
pop
sub
push
mov
or
and
stos
pop
and
aaa
push
movsl
cmp
inc
lcall
jg
in
fwait
inc
dec
xchg
push
movsl
iret
lahf
jnp
and
in
cmp
movsl
or
nop
imul
movsl
movsb
xor
das
andb
xchg
and
sbb
loop
es
dec
fisttps
or
jge
push
flds
and
pop
mov
sbb
jbe
lods
sarl
insl
scas
movsl
fucomi
jle
das
mov
mov
pop
ret
mov
rorb
or
push
cltd
dec
cmp
shll
cwtl
xchg
movsw
adc
inc
pop
iret
jb
fs
movsl
jae
sbb
cmpsl
aad
push
xchg
jno
push
xlat
dec
lret
add
dec
nop
jecxz
movsl
push
enter
mov
in
insl
pop
lock
push
cld
movsl
in
mov
and
push
mov
shll
into
movsl
inc
xor
jle
jmp
scas
movsl
in
jbe,pn
lock
icebp
mov
repz
out
jmp
fimuls
inc
push
sahf
ret
fstl
hlt
sub
dec
cmc
xchg
dec
dec
fdiv
mov
mov
icebp
rcll
aaa
push
jge
popa
arpl
movsl
mov
or
cli
movsl
loopne
int3
repnz
in
shlb
jo
mov
push
frstor
stos
jmp
movsl
enter
aam
cld
and
add
or
jle
into
movsl
xchg
xlat
push
sub
mov
xchg
das
pop
hlt
jb
mov
xchg
rorl
jg
push
imul
cmpsl
fiaddl
fcompl
mov
xor
adc
pop
jmp
mov
ret
cltd
popa
cli
cwtl
insb
fstpl
mov
int
inc
mov
xchg
pop
sub
jp
xorb
cmp
inc
pop
pop
xchg
icebp
icebp
adc
loop
loope
jp
pushf
add
xchg
lds
cmp
mulps
call
std
mov
icebp
dec
and
pop
jmp
movsl
mov
add
lods
movsl
shlb
jecxz
ss
and
lds
xchg
icebp
sbb
in
adc
inc
sbbb
jmp
lds
call
movsl
push
popf
cmp
cmp
stos
push
movsl
bound
xchg
clc
ja
imul
jmp
mov
dec
mov
nop
lds
dec
iret
mov
and
mov
pop
push
imul
movsl
popa
outsl
and
cmpsl
test
inc
mov
mov
shrl
pop
mov
rclb
movsl
lods
sub
int3
in
cmp
movsl
xchg
test
or
xchg
bound
push
jo
and
mov
sbbb
sar
jle
pop
int
cmp
scas
outsl
ret
inc
lock
aad
fcompp
add
sub
bound
or
cmp
movsl
loopne
rep
jo
cmpsb
sbb
adc
xchg
mov
and
lahf
cli
xchg
in
cwtl
pop
add
in
push
adcl
scas
mov
xchg
jmp
aam
mov
jle
movsl
cmp
popf
jae
cmc
mov
test
mov
xchg
mov
nop
sbb
popf
xor
into
cmp
dec
test
adc
add
rorl
movsl
imul
mov
xchg
movsl
xchg
es
arpl
mov
pop
and
mov
jb
movsl
fnstcw
and
mov
in
mov
sbb
movsl
mov
xor
xor
or
xor
movsl
aad
jae
xchg
adc
jmp
in
test
push
lds
xorb
dec
xor
nop
jb
shll
and
mov
lods
fidivrl
ds
jbe
push
ret
mov
add
cmp
mov
lock
dec
sti
and
sub
fcomp
movsl
lret
das
adc
movsl
xor
std
ljmp
imul
push
cmp
in
sbb
jmp
movsl
fsubrl
add
push
lock
fsubs
jg
in
push
movsl
subl
xchg
mov
test
sub
push
mov
xlat
adc
xor
xchg
daa
lods
push
pop
inc
vcvttss2si
lock
test
add
or
sahf
sbb
push
out
leave
xchg
rol
int3
rep
dec
dec
inc
mov
and
cmc
mov
xor
mov
test
push
adc
xchg
pop
cwtl
inc
fdiv
mov
cmpsl
mov
pop
int3
in
jp,pn
shlb
loope
adc
movsl
je
and
xor
aam
mov
sahf
or
stos
mov
movsl
adc
test
inc
movsl
out
mov
add
movsl
jnp
addr16
sub
lret
jle
movsl
jne
sarb
daa
mov
pop
movsl
test
pushf
mov
fldl
cld
imul
pop
les
push
mov
jno
jo
addb
fcmove
jp
cmpsb
js
mov
jb
jb
push
xchg
insb
sti
lods
movsl
mov
pop
jns
mov
mov
fs
mov
out
cmc
movsl
lret
xchg
bound
movsl
xor
aas
icebp
call
ret
sbb
clc
jecxz
movsl
push
aad
insl
mov
andb
notl
movsl
lods
iret
inc
xor
popa
subb
mov
push
loopne
test
sti
sub
mov
sub
mov
mov
ds
and
fld
movsl
daa
mov
imul
inc
incl
dec
mov
fs
push
mov
out
mov
mov
icebp
lds
ficompl
jb
mov
in
test
movsl
mov
ret
sbb
sbb
repz
push
dec
xchg
fwait
push
inc
je
jp
pop
movsl
into
shl
movsb
sub
mov
mov
dec
out
lret
add
mov
test
leave
dec
movsl
push
cmpl
pop
xor
call
mov
pop
movsl
jnp
pop
jo
fwait
lea
in
jg
dec
popa
in
cltd
cmpsl
loopne
stc
pop
loope
pop
sbb
js,pn
enter
out
cmc
loopne
pop
outsb
int3
movsl
leave
out
jns
imul
movsl
and
pop
test
mov
push
cld
jns
setae
imul
jo
mov
shlb
and
fs
not
add
movsl
js
push
push
xchg
faddl
sub
cmp
test
ret
int3
mov
xor
mov
les
lods
in
pop
xor
jo
cmpsl
fs
pop
jno
sub
aaa
outsb
roll
int3
dec
jne
lods
in
sbb
aas
movsl
xchg
sub
adc
mov
lds
in
sbb
mov
imull
movsl
incl
mov
daa
aad
push
fmuls
movsl
leave
lret
cs
fcmovu
js
inc
push
adc
xchg
push
clc
loop
add
sahf
xchg
lds
out
sbb
dec
pushf
mov
ja
jbe
mov
sbb
jae
adc
test
addr16
movsl
push
pop
testb
es
loop
ud1
push
movsl
jne
cld
add
movsl
or
adc
add
pop
ja
cmpxchg
mov
or
pop
dec
xchg
pop
movsl
aam
xchg
xchg
mov
dec
cwtl
xchg
mov
int3
xchg
dec
mov
in
mov
movsl
call
mov
jne
cmc
mov
dec
push
or
stos
add
ret
jmp
aaa
jb
stos
movsl
dec
std
cmp
pop
mov
in
mov
pop
pop
aam
movsl
push
cmpsl
adc
add
and
scas
in
adc
enter
vpmaxsw
xchg
out
movsl
lods
mov
jge
cmp
adc
and
and
push
aad
pop
mov
xor
sub
push
add
inc
ror
in
cmp
cs
movsl
dec
dec
inc
ja
lret
jle
pop
scas
cs
mov
aam
hlt
std
movsl
fildll
pop
mov
sbb
mov
xchg
sahf
push
lods
lcall
cmc
pop
dec
pusha
add
in
mov
ficompl
add
fwait
shll
inc
lods
popf
pop
mov
pop
pop
mov
lret
aad
iret
in
mov
sbb
gs
movsl
jmp
push
mov
push
dec
popa
lods
xor
mov
ret
xorl
and
or
test
test
addr16
in
inc
pop
rol
popf
add
or
pop
inc
gs
or
sahf
cli
stc
andb
sub
bound
push
add
ficompl
or
jo
lds
lods
jbe
imul
pop
push
mov
lock
dec
xchg
pop
push
dec
push
pop
or
imul
insb
lea
cmp
jne
leave
fldenv
ja
push
movsl
jae
fdiv
jbe
sbb
sahf
pop
adc
mov
push
pushf
fs
mov
adc
inc
cmc
js
mov
cmpl
in
in
push
insl
xor
mov
xchg
mov
xchg
cmp
inc
jns
in
jno
mov
cs
push
xor
rcr
push
movsl
imul
inc
or
loop
and
sbb
xlat
xchg
sub
xor
outsl
mov
cmpsb
pop
mov
nop
and
inc
adc
or
add
push
icebp
ret
int
pop
cmp
inc
add
add
mov
sbb
bound
jmp
lds
push
das
and
imul
or
pop
test
nop
popf
pop
in
jbe
add
hlt
or
xchg
gs
movsl
test
mov
fsubs
and
outsb
mov
cwtl
cmpsl
pop
imulb
int
and
aas
arpl
jne
popa
sbb
rorb
xor
mov
dec
xchg
and
jp
or
push
movsl
inc
push
stos
cmp
movsl
popf
adcl
inc
inc
xor
loop
lret
int
jecxz
pop
int3
push
push
mov
pop
leave
sub
in
mov
jle
lods
adc
mov
inc
frstor
stc
test
adc
or
mov
or
loope
push
jbe
pop
insb
or
push
pushf
dec
sbb
ss
fsubs
pusha
aam
mov
in
sub
insl
inc
mov
and
icebp
xchg
rep
mov
rol
push
int
jnp
pop
sbb
movsl
stos
shrd
jmp
pop
xor
leave
cmp
je
or
lahf
ret
lods
mov
pushf
jbe
push
xchg
sub
gs
pop
adc
add
push
xchg
xlat
mov
jmp
xchg
add
sub
outsl
in
call
into
mov
lds
xor
add
scas
mov
mov
pop
inc
fldenv
cmpsb
jl
pop
push
xor
jbe
stc
movsl
push
push
aas
aam
add
fists
ljmp
test
pop
arpl
xor
pop
out
or
and
mov
inc
jne
fbld
push
in
out
pop
add
popf
xchg
mov
in
mov
mov
dec
orb
movsl
sbb
cmpsb
mov
movsl
jbe
push
fcoml
mov
in
and
cltd
inc
or
lcall
xlat
clc
repz
in
faddl
dec
cmp
fnstcw
test
xchg
mov
lods
and
pop
mov
mov
fsts
outsb
movsl
in
out
je
add
data16
push
andb
dec
push
sbbl
lret
movsl
aad
test
test
pop
adc
sub
enter
gs
test
movsl
shlb
cmp
pop
cltd
movsl
cwtl
das
ljmp
and
movsb
mov
movsl
adcb
mov
adc
push
xor
daa
sbbb
pop
cltd
cmp
xor
rclb
push
dec
aad
xchg
push
pop
and
jecxz
dec
jle
imulb
and
push
pop
sub
sub
aam
movsl
inc
add
sahf
iret
push
mov
xor
mov
add
jnp
test
in
out
dec
push
sbbl
cmp
xchg
dec
outsl
gs
lock
in
sti
andl
cmp
cs
imul
push
cmpsl
adc
rol
jo
mov
fsubl
in
int3
sbb
shrl
frstor
sbb
sbb
imul
popf
imul
popa
insb
jle
mov
movsl
mov
cltd
sbb
jae
cmovno
mov
adc
movsl
jmp
imul
stos
cmpsl
ret
dec
pusha
stc
jnp
inc
movsl
add
sbb
hlt
lods
mov
not
in
pop
lock
xor
sbb
repnz
push
test
leave
cmc
fcomps
in
in
fistps
and
xor
mov
mov
sahf
test
js
xchg
jmp
dec
sti
xchg
test
movsl
mov
or
dec
fdivs
xor
out
cmp
shll
dec
or
jnp
jmp
std
movsl
jne
pusha
je
fs
jae
test
test
push
jecxz
sbb
sti
ja
pusha
dec
push
push
arpl
lret
movsl
testb
sub
adc
push
mov
and
les
cs
out
bound
das
sahf
fs
cmp
or
inc
inc
movsl
mov
xor
movsl
add
stos
sbb
lds
test
lods
xor
data16
movsl
iret
push
rcrb
stos
into
std
data16
jmp
add
mov
push
inc
popa
adc
movsl
and
pop
pop
mov
pop
jp
shll
jbe
aam
imul
lock
leave
movsl
js
push
hlt
xchg
and
xor
test
movsl
adc
aad
mov
ret
andb
cmc
faddp
adc
xlat
jge
mov
jne
and
push
dec
inc
xor
lret
push
mov
inc
mov
sbb
dec
push
add
insb
jo
and
movsl
sub
cld
fistpl
or
mov
movsl
jne
push
addw
xchg
dec
sbb
bound
movsl
xchg
sub
lahf
movsl
cmp
nop
test
insb
pop
dec
cld
movsl
add
mov
mov
fisubs
rcl
int
inc
movsl
xchg
imul
add
add
push
addr16
bound
sub
shll
ds
cmpsl
movsl
dec
jl
loopne
out
lret
lds
shr
call
pop
loopew
fs
xchg
rolb
in
sbb
ret
mov
movsl
std
inc
dec
sub
xchg
mov
mov
movsl
ja
push
cmp
cwtl
aaa
jmp
in
movsw
push
sbb
out
sahf
test
push
mov
sti
push
mov
faddl
movsl
js
fldl
into
or
outsl
push
pop
movsl
jle
cmp
adc
pop
mov
imul
test
popf
and
movsl
mov
std
jg
fldcw
or
cmp
pop
in
pop
movsl
xchg
jmp
xor
imul
mov
ja
pop
jnp
cmp
leave
jge
inc
movsl
push
or
fcmove
add
mov
mov
jae
sub
gs
jnp
jmp
movsl
sti
enter
fsqrt
push
movsl
adc
jp
xchg
mulb
sub
mov
sahf
jg
fnsave
xchg
inc
nop
lret
xchg
push
in
jmp
js
stos
sbb
gs
andl
fdivs
ja
aaa
movsl
pop
mov
daa
sbb
jae
push
outsb
popa
push
por
pop
test
test
call
pop
jno
shlb
dec
push
cmp
inc
mov
xor
jg
dec
das
movsl
mov
add
sarl
lea
xchg
mov
divb
mov
cwtl
rclb
xor
je
movsl
cs
sarl
push
movsl
mov
nop
lea
lods
sbb
pop
mov
fstps
out
push
out
lods
inc
mov
adc
in
pushf
aad
sub
mov
jbe
iret
mov
dec
dec
test
pusha
sbb
sub
lret
mov
xchg
setl
mov
xchg
arpl
sbb
jbe
adc
call
xor
or
ds
mov
aad
mov
xchg
je
leave
into
ljmp
adc
in
shll
sub
daa
aaa
xor
mov
test
jl
ficompl
mov
in
xlat
cmc
dec
and
mov
scas
mov
mov
in
mov
pop
adc
lods
pop
imul
adc
lcall
or
push
fsubp
xlat
test
add
ss
push
mov
daa
adc
cwtl
int
scas
and
jbe
rcrl
cli
mov
dec
jo
imul
or
mov
and
sbb
push
mov
dec
push
jge
inc
cld
movsl
mov
dec
imul
notb
inc
xchg
addr16
xor
lock
sahf
test
cmp
ret
jnp
lret
cmp
xchg
movsl
sub
inc
push
cwtl
rcll
mov
int
xchg
lahf
push
in
bound
daa
inc
xor
mov
fwait
sub
push
ja
xchg
mov
cmp
mov
add
movsl
mov
xchg
movsl
in
aaa
and
aas
and
mov
inc
pop
mov
cmp
cmpsl
cmp
add
cmpsb
fwait
xor
lds
xor
push
mov
into
push
movsl
xchg
sbb
cmovbe
mov
movsw
cwtl
test
cmpsb
adc
push
mov
jecxz
fstpt
les
mov
add
sbb
movsl
daa
int
cmp
outsl
pop
xchg
sbb
in
adc
in
xor
sarb
mov
nop
mov
mov
in
fwait
add
in
lcall
test
cmp
mov
movsl
mov
popl
inc
xor
movsl
mov
push
out
add
mov
fwait
rorb
ds
into
in
divl
sbb
mov
addr16
in
pop
jp
push
movsl
imul
clc
adc
cld
lock
sub
ds
sub
pushf
ja
push
mov
dec
popf
inc
insl
pop
push
in
or
mov
pop
mov
in
mov
in
loopne
shl
and
js
adc
scas
bound
pop
repz
jnp
pop
fmuls
mov
mov
enter
pop
dec
jbe
in
imull
jmp
movsl
push
sub
mov
sub
push
ficoms
shl
fsubl
ss
hlt
pusha
movsl
jmp
mov
mov
test
mov
js
and
inc
inc
cld
movsl
arpl
push
sbb
out
jle
outsl
add
pop
jl
xor
lods
movsl
mov
sti
shll
push
outsb
stos
iret
jp
xor
insl
xchg
rcr
hlt
and
jno
das
mov
in
push
jnp
stc
push
outsl
sbb
insl
jl
stc
pusha
mov
jl
mov
inc
sbb
push
pop
and
pop
in
outsl
xlat
fs
mov
cmpsl
in
mov
pop
fisubrs
mov
rolb
repnz
addr16
mov
fnstsw
mov
js
mov
xchg
mov
mov
jae
add
dec
movsl
mov
leave
jmp
hlt
mov
mov
dec
adc
mov
orb
pop
scas
mov
cmpsl
inc
movsl
push
add
popa
push
outsl
in
ljmp
add
iret
push
adc
mov
scas
dec
and
xchg
loope
movsl
fisubrl
lret
inc
imul
jb,pn
jl
movsl
push
jmp
xchg
mov
inc
lret
movsl
xchg
push
pop
out
mov
xlat
in
aad
jecxz
sub
add
fldenv
fdiv
call
cmp
cwtl
sahf
xor
mov
mov
outsl
mov
push
arpl
stos
or
and
out
push
ror
adc
mov
and
lock
in
push
cmpsl
sbb
jns
adc
lea
xchg
aaa
mov
pop
xor
xchg
in
movsb
inc
sahf
in
or
movsl
fldl
pop
inc
jle
sub
movsl
push
and
push
add
cmc
mov
push
push
in
mov
push
andb
lock
jbe
popa
out
loopne
out
inc
pushf
pop
pop
movsl
int
mov
lods
into
ljmp
in
mov
repz
mov
pop
loop
outsb
in
insl
xchg
sub
movsl
bnd
lods
stos
pop
mov
pop
xlat
scas
leave
test
mov
ja
mov
stc
enter
mov
pop
bound
movsl
adc
cmp
dec
dec
jnp
adc
fwait
sbb
in
imul
sbb
cmpb
movsl
cmp
inc
pop
mov
les
fbstp
fsts
sub
and
sbbl
add
add
lahf
aad
mov
pop
pop
mov
es
cmp
movsl
jg
sti
xlat
add
xchg
dec
or
push
fnstsw
cmpsl
pop
sbb
mov
adc
iret
lret
inc
cmp
cmp
xchg
and
loope
ds
mov
pop
ret
mov
mov
jne
out
je
mov
add
js
jbe
movsl
into
xchg
jmp
movsl
mov
insl
fxam
movsl
fs
sti
icebp
ja
jno
cld
mov
inc
sbb
or
mov
test
jo
mulb
ret
cmpsb
cmp
or
pusha
leave
and
movsl
loop
xor
push
int
addr16
incl
sub
call
mov
sbb
femms
lcall
outsl
mov
imul
ret
mov
sub
test
ds
lea
lret
add
fldcw
movsl
dec
aad
xor
or
int
stc
inc
sub
mov
mov
inc
cli
mov
add
leave
movsl
fwait
mul
dec
sub
xchg
jmp
loope
push
insl
nop
mov
outsl
push
dec
pop
enter
je
clc
shll
pop
inc
xor
sbb
fdivl
movsl
or
sahf
push
es
sbb
mov
call
cmpsb
movsl
mov
sub
mov
jno
je
adc
in
popa
dec
pusha
push
cmc
imul
ljmp
lock
push
and
cwtl
stos
fldenv
mov
movsl
xchg
pop
orl
pop
inc
movsl
clc
adc
push
mov
stos
and
push
sbbl
and
mov
dec
lds
add
rcrb
push
or
es
sbb
sahf
ss
out
add
dec
movsw
insl
or
push
pop
push
int3
outsl
fcomip
jbe
xchg
pop
mov
add
xor
push
lea
dec
pusha
or
jle
dec
ja
movsl
mov
inc
add
movsl
and
imul
and
sbb
int3
sub
sub
in
sar
int
inc
push
push
jmp
decb
mov
pusha
popa
outsb
shrb
lea
mov
sub
sbb
sti
push
xchg
icebp
jae
lods
xchg
sub
mov
jp
cmpsb
cmpsb
outsb
test
imul
fstpl
lds
jae
aas
cwtl
mov
imul
pop
hlt
shll
iret
jge
mov
out
and
aad
cld
jmp
std
shrl
movsl
fisttpll
lcall
popf
pop
cwtl
mov
ja
cmpsl
mov
pop
dec
lock
xor
mov
sahf
outsl
push
insb
mov
xchg
movsl
push
jmp
mov
std
add
inc
movsb
pop
out
mov
in
pop
sbb
lcall
and
loope
in
push
leave
mov
and
shlb
pop
inc
test
rcll
lret
movsl
pop
jl
push
ror
pop
xchg
mov
xchg
mov
add
sbb
sub
mov
movsl
js
dec
in
pop
mov
imul
fldt
adc
or
xchg
aam
in
sbb
cmp
roll
mov
addr16
sbb
lods
popa
movsl
leave
sub
lds
popa
imul
add
dec
jle
jmp
das
test
not
ja
data16
pop
pop
xchg
movsl
addps
sahf
sub
jmp
push
push
jge
outsb
lret
out
add
add
push
in
or
inc
rcrl
test
pusha
stos
arpl
ret
lds
dec
in
push
adc
inc
jno
jg
movsl
shlb
lds
inc
clc
es
inc
hlt
pop
sahf
xor
popa
repnz
fnstsw
test
lea
xchg
test
mov
loop
nop
cli
adcl
sub
roll
test
lahf
movsl
xor
inc
lret
in
or
push
jl
jns
mov
scas
pop
sbb
mov
mov
sbb
dec
in
fs
movsl
je
add
xchg
pop
mov
mov
cmc
rol
shlb
in
jno
fadds
movsl
roll
inc
sbb
mov
sub
xor
mov
push
push
jb
in
aad
jle
push
xchg
lods
xor
je
and
stc
movsl
mov
ror
mov
sti
mov
mov
pop
xor
xchg
in
xlat
in
stc
aas
mov
divps
in
mov
jmp
shl
sub
or
dec
jb
imul
inc
and
in
sti
jmp
lret
movsl
popf
inc
cmp
movsl
outsl
imul
out
mov
fbld
movsl
test
mov
and
dec
gs
jmp
lods
push
add
fsts
movsl
int3
cmc
push
inc
pusha
insl
inc
mov
add
mov
mov
lret
movsl
and
hlt
cmp
leave
push
add
lret
gs
push
cs
push
add
sub
mov
jle
movsl
mov
cmp
and
out
ljmp
les
pop
imul
js
mov
jl
xor
iret
push
in
shl
out
imul
pop
sub
jo
mov
jbe
pop
mov
stos
push
add
adc
adc
fisttpll
and
xchg
lods
and
push
dec
in
popa
out
pop
movsl
sbb
aam
add
lea
jmp
and
movsb
sbb
mov
lcall
std
mov
pop
mov
popf
jne
mov
jb
jbe
push
movsl
leave
sub
movsl
add
int
aam
into
rcrb
mov
mov
jle
add
ret
mov
sbb
add
or
daa
xor
sbb
test
xchg
jge
cltd
mov
data16
and
jno
orl
jbe
jge
mov
mov
out
sub
push
xchg
jmp
push
aad
ret
loop
jge
jecxz
mov
xchg
out
pushf
out
in
cmp
mov
outsl
mov
inc
sbb
pusha
xchg
mov
add
std
sbb
mov
mov
push
jo
fucomi
leave
ljmp
test
push
mov
mov
ds
sub
inc
fsubs
jle
inc
and
hlt
mov
mov
add
lock
int3
aaa
mov
push
xchg
push
jae
fst
loopne
or
movsw
dec
popf
pop
sbb
cld
sbb
xchg
sbb
mov
mov
mov
jb
loope
sbb
bound
or
add
in
data16
mov
pop
fcomps
das
dec
or
pop
sti
or
and
jg
mov
lods
adc
inc
sahf
in
mov
cltd
cmc
sbb
mov
mov
jmp
in
and
xchg
jp
jo
shr
push
adc
sbb
mov
mov
xchg
xchg
xchg
mov
pop
push
scas
sarl
sub
aam
sub
cmp
test
mov
mov
mov
cmc
adc
push
out
or
adc
or
adc
in
mov
mov
inc
icebp
ret
hlt
inc
cmp
repz
dec
movsl
sub
add
mov
mov
pusha
fcmovnb
push
roll
cmpsb
or
outsb
xchg
shlb
inc
dec
push
sahf
hlt
repnz
xor
pop
mov
sub
xor
sti
sub
mov
sub
int
scas
pop
push
and
push
pop
pop
arpl
sub
sub
adc
aad
adc
adc
or
mov
divb
std
in
adc
sbb
adc
rcr
pop
mov
xchg
push
push
push
pop
xlat
hlt
mov
faddl
clc
idivb
fdivr
pop
sbb
in
sbb
add
mov
out
movsl
inc
xor
sbb
insl
sub
xor
mov
mov
push
shll
and
and
insl
test
jl
movsl
call
bound
scas
adc
xor
stos
mov
test
popf
gs
add
pushf
dec
add
add
movsl
mov
xchg
sub
and
sar
sbb
xchg
jg
sub
test
call
leave
cld
in
ret
js
push
jno
xor
xorl
ret
lret
or
nop
movsl
fdivrl
pusha
movsl
push
sarb
repnz
out
in
jp
sbb
xchg
mov
mov
adc
fcomp
dec
movsl
gs
movsl
sbb
iret
ljmp
repnz
movsl
call
pop
xorb
decb
cwtl
daa
mov
insb
out
es
dec
sbb
inc
hlt
or
ret
fiaddl
fwait
jmp
movsl
pop
or
test
xchg
mov
or
cmpsb
lods
or
aad
mov
mov
call
movsb
stos
mov
xchg
sub
inc
jp
scas
pop
sbb
out
push
push
test
icebp
or
sarb
push
movsl
cmpsb
mov
repnz
xchg
movsl
pop
fs
xor
push
adc
andl
repz
loop
aad
sbb
mov
dec
leave
cs
pop
xor
xchg
xchg
shufps
mov
mov
imul
mov
mov
jmp
or
insl
pop
inc
pop
dec
popf
sub
enter
lods
cmpsb
sbb
testl
mov
fcomps
call
lahf
cmc
push
out
add
cmp
mov
ret
movsl
mov
dec
add
pushf
fcoml
mov
out
dec
jge
fucomi
movsl
fwait
jae
sub
test
pop
mov
fldl
movsl
xchg
sub
out
lock
xchg
and
movsl
cli
mov
xchg
ret
nop
mov
gs
mov
les
mov
xor
mov
xor
in
sub
movsl
cltd
add
mov
movsl
add
sbb
cmp
aas
cltd
cmp
cld
daa
and
inc
push
xchg
mov
adc
jmp
push
mov
dec
dec
lods
mov
inc
lods
or
fsubr
sub
loopne
dec
dec
cli
test
lods
mulb
push
lea
lods
push
movsl
loope
cmp
pop
movsb
dec
mov
push
movsl
cmp
or
movsb
push
movsl
push
jg
xchg
xor
in
movsl
jo
popa
addl
push
pop
movsl
push
xor
jg
xchg
test
movsl
ss
pop
fsubl
js
neg
aam
movsl
lret
or
sub
popf
fldenv
xchg
mov
pop
movsl
scas
mov
repz
loopne
stc
xchg
jnp
movsb
imul
clc
sahf
fsubrp
leave
mov
stos
scas
pushf
xor
xchg
mov
lods
add
movsl
adc
in
jl
repz
nop
inc
fldcw
std
xor
inc
aad
ss
lds
and
scas
fistpll
xor
int
mov
mov
xor
xchg
mov
lds
push
jo
jae,pn
mov
int3
movsl
je
mov
repnz
arpl
outsb
cltd
movsl
dec
rorb
mov
insl
lods
movsl
inc
pop
mov
in
pop
mov
stos
movsb
adc
clc
push
pusha
fs
movsl
jnp
addr16
cltd
mov
repz
loope
inc
ficoml
hlt
leave
or
sarl
fsubl
add
add
bound
in
adc
mov
movsl
sahf
lods
adc
mov
fxtract
movsl
out
shll
xor
pop
jns
movsl
scas
xor
mov
lock
scas
pop
sbb
jbe
dec
int
mov
jb
ljmp
sbb
loopne
mov
scas
mov
mov
int
int3
push
mov
pop
movsl
add
jb
mov
cli
jno
push
xchg
cmp
inc
inc
or
adc
sub
xchg
sbb
movsl
add
int
pop
dec
andb
add
mov
popf
rcl
xorl
jo
rcl
popa
xchg
test
mov
fcoms
mov
mov
movsl
test
mov
movsl
push
jae
cmp
lcall
rep
scas
daa
inc
fs
rol
mov
test
sti
xchg
loopne
sahf
daa
sub
iret
nop
out
cmpsl
sahf
idiv
clc
add
xchg
cmp
insl
movsw
mov
ret
inc
sub
lds
mov
loopne
or
inc
mov
movsl
mov
xor
xorl
push
jnp
shr
cli
dec
jb
dec
outsl
mov
or
cmc
stc
xchg
and
fstl
mov
movsl
insb
shr
xchg
cmpsb
adc
cmpsb
lcall
das
xchg
and
push
or
stos
cmp
out
jge
mov
pop
xchg
test
pop
inc
pushf
pushl
gs
or
cmp
aas
xor
mov
pop
cmc
jg
out
movsl
ret
outsb
pop
loope
adc
xchg
addr16
and
pop
dec
fsubl
pop
in
pop
and
adc
fs
fdiv
lock
pop
push
gs
adc
mov
add
or
stos
ja
mov
sub
aad
out
ficompl
movsl
and
cmpsl
add
fsubl
iret
or
xchg
movsl
ficoml
and
outsb
pop
lds
mov
cmc
push
fimull
mov
mov
mov
push
add
movsl
pop
pop
or
mov
or
int3
insb
bound
jne
imul
jle
pop
push
out
push
jecxz
pop
and
cmpsb
outsl
push
fwait
clc
jno
xor
pusha
sub
shll
inc
sti
xchg
movsl
pop
dec
div
mov
cwtl
les
xchg
pusha
and
and
movsl
jne
sbb
popf
lods
ficoms
xor
loopne
xchg
xor
movsl
adc
push
jmp
test
movsl
arpl
adc
movsl
inc
pop
cwtl
sub
lcall
scas
adc
clc
xchg
mov
mov
pop
stos
xor
in
mov
or
or
adc
mov
sub
push
mov
gs
test
stos
dec
gs
daa
inc
movsl
addb
sbb
adc
lds
sub
in
mov
lea
cmp
xor
mov
inc
push
mov
jae
cli
fildl
inc
movsl
cs
pop
movsl
mov
lods
pop
outsb
idiv
imul
jb
xchg
cmp
dec
repnz
lret
pop
imul
movsl
adc
pop
jmp
frstor
dec
jle
xor
add
insb
push
cmpsb
adc
stos
cld
movsl
mov
sti
iret
movsl
scas
jns
mov
popf
xchg
push
pop
mov
scas
movsl
mov
cmc
addr16
xchg
add
mov
movsl
lods
dec
xchg
ss
add
mov
lea
mov
pop
rclb
test
sub
mov
cwtl
movsl
pop
adc
rcll
or
cmp
cld
shlb
hlt
sub
jno
mov
fwait
mov
lds
mov
jnp
and
xchg
add
adc
cwtl
sub
fstps
cmc
dec
pushf
mov
nop
sahf
out
mov
inc
aas
sbb
sbb
mov
jmp
movsl
xchg
mov
sub
shl
aaa
in
mov
dec
test
test
sub
aad
aam
fucomp
fdiv
mov
movsl
or
cwtl
mov
cld
mov
movb
insl
mov
fistps
loopne
or
mov
mov
cmp
pushf
push
je
mov
out
movsb
sbb
sub
aaa
fstps
cmp
and
icebp
xlat
jae
push
sub
pushf
mov
icebp
test
out
sbb
pushf
xchg
and
int3
outsl
jecxz
adc
cld
dec
repnz
iret
scas
cmpsb
sbb
xchg
repnz
test
lret
mov
int
inc
sbb
and
or
cmp
mov
cmc
jne
scas
inc
fidivs
cltd
lods
xor
loop
and
sub
cs
cs
repnz
movsb
push
pop
xor
xchg
mov
adc
in
std
ret
mov
fldl
dec
push
outsb
xorl
stos
mov
xchg
or
xchg
mov
ror
jge
xchg
sbb
stc
pop
movsb
mov
mov
sub
or
test
adc
ret
mov
or
lods
in
sti
pop
inc
mov
divl
repz
lods
mov
or
mov
add
adc
icebp
mov
repz
sub
sbb
addr16
je
es
cmc
push
rorb
mov
and
mov
lods
jae
sub
das
adc
dec
fadd
into
aas
lret
sbb
js
out
scas
sti
cmpsl
popa
and
jno
mov
gs
ret
add
mov
lds
loop
out
sub
lret
addr16
sbb
xchg
sub
mov
mov
sub
jno
aas
sbb
mov
push
mov
mov
push
mov
cmp
das
test
lret
dec
cmp
fstps
lcall
pop
fsubs
lds
sub
mov
int3
in
sub
popa
test
xchg
pop
hlt
xor
rcr
das
adc
popf
mov
push
adc
sub
pusha
mov
pop
pop
in
or
mov
inc
in
pop
xlat
xchg
mov
cmp
int3
inc
in
xchg
out
and
ja
daa
imul
xchg
xchg
es
mov
push
andb
pop
cmpsb
orb
xlat
aad
rol
test
jge
add
pop
cmc
icebp
and
and
js
loope
jnp
popf
icebp
mov
sti
aaa
mov
lock
mov
jb
push
cli
cmp
or
jns
jmp
movsl
dec
xor
rcr
pop
out
shll
sub
test
mov
sub
test
pop
movsl
aam
sbb
xor
fs
in
xor
add
movsl
adc
es
ss
jmp
xchg
sbb
mov
mov
dec
xlat
lret
mov
out
les
cmp
movsl
in
into
mov
movsl
addl
jl
jmp
in
insl
adc
and
lods
lea
call
movsl
ds
add
movsl
fwait
lds
xor
shll
mov
sbb
cmpl
or
jno
jo
imul
adc
pushf
stc
aam
in
int
faddl
addb
dec
cld
fnstenv
movsl
xor
push
mov
push
cli
ljmp
and
adcl
cmpsl
or
xchg
mov
adc
lea
ss
mov
out
fisubs
inc
mov
and
inc
cmp
and
xor
fs
mov
and
in
shl
movsl
ja
ds
xor
jmp
xor
pop
movsl
jle
pop
inc
mov
and
jp
pop
daa
movsl
sbb
fnsave
les
pop
lds
in
fnstsw
popf
mov
flds
andb
xor
inc
movsl
aas
jnp
ja
inc
push
add
push
mov
pop
xchg
mov
pop
xchg
jecxz
mov
clc
inc
lcall
xchg
or
xor
lds
mov
fldt
sbb
in
das
insb
jno
fldenv
std
add
pop
pusha
mov
and
bound
push
movsl
inc
ja
mov
stos
mov
call
xor
movsl
mov
pop
movsl
dec
outsl
gs
jp
mov
mov
clc
mov
push
jnp
movsl
mov
popa
jo
adc
sbb
js
rol
movsl
ds
shrb
ja
jne
sahf
mov
jecxz
jmp
cli
out
pop
push
fstp
test
sbb
mov
jae
mov
test
clc
xchg
aaa
pop
mov
outsl
jne,pn
ret
test
push
outsb
out
loop
pop
mov
and
insl
lret
movsl
lret
and
or
sub
inc
outsb
fs
cmpsb
imul
stc
shll
inc
int
pop
mov
movsl
cmp
mov
movsl
and
repz
xchg
mov
outsb
movsl
cmp
adc
dec
mov
mov
sub
cmp
shlb
pop
cmp
mov
lds
dec
lock
pop
jl
push
addr16
out
sub
xor
dec
push
adc
push
mov
movsl
pusha
orl
mov
andl
pop
popf
clc
mov
jb
jl
pop
jne
lods
dec
ficoml
pop
ds
dec
scas
loope
popf
xchg
sar
in
dec
push
arpl
ljmp
lea
adc
js
push
inc
jge
scas
xchg
and
lahf
inc
adc
lret
repnz
pop
sbb
jae
cmpsb
pop
mov
movsl
xchg
lods
xchg
sti
adc
movsb
movsl
clc
pop
mov
push
movsl
cmovb
addr16
frstor
fadds
sti
mov
inc
cwtl
add
rorb
mov
ret
gs
mov
mov
push
cmp
notb
stos
inc
pushf
out
icebp
mov
or
mov
xchg
mov
xorb
cmc
mov
inc
int
cmp
je
js
imul
mov
flds
inc
cmp
and
ss
test
or
adc
arpl
fcmovnb
rol
enter
mov
repz
push
mov
movsl
inc
addb
jmp
lds
pop
testb
mov
leave
sub
dec
push
inc
out
mov
sub
inc
loop
mov
add
movsl
xor
std
out
and
add
loop
stos
cmp
xchg
mov
mov
mov
test
mov
xor
mov
jecxz
fnstcw
pop
movsl
data16
movsb
scas
add
call
jno
movsl
les
mov
pop
movsl
stos
mov
idivl
pop
sub
popf
add
mov
dec
movsl
mov
movsl
loope
movsb
or
push
outsl
push
out
movsl
or
aam
dec
add
cld
sbb
and
sub
pop
lock
push
movsl
shl
ss
and
push
movsl
xor
xchg
roll
test
addr16
movsl
jge
arpl
mov
sub
data16
sub
movsb
das
mov
mov
sub
jae
mov
and
test
adc
movsl
cmc
out
sarb
push
jl
dec
popf
frstor
jbe
arpl
xchg
push
adc
adc
scas
ds
lret
movsl
and
fnstenv
and
pop
mov
lock
subl
mov
add
xchg
sbb
in
je
call
mov
aas
fiadds
cmpsb
dec
mov
cld
js
cmp
icebp
mov
movsl
mov
addl
scas
cld
fs
loopne
sub
cwtl
mov
movsl
cmp
dec
push
mov
repnz
mov
lods
cmpb
mov
xor
adc
movsl
pop
and
lds
ljmp
stos
movsl
and
mov
lock
aam
push
xor
punpckldq
cmp
xchg
les
ljmp
cs
cld
mov
ret
add
push
cmp
dec
push
add
andl
add
imul
test
rcr
mov
imul
lds
out
inc
movsl
jecxz
jmp
popf
movsl
xchg
and
push
lds
xchg
or
inc
movsl
jnp
push
jg
addr16
into
fld
cwtl
push
xchg
in
stos
add
mov
lret
movsl
mov
nop
lret
mov
jo
add
gs
mov
mov
pop
xorb
or
mov
in
pop
mov
lret
movsl
cmpsb
mov
push
mov
inc
xor
or
pop
iret
adc
mov
mov
lods
dec
cmc
mov
jbe
pop
gs
xchg
sahf
xor
xlat
fldl
jae
dec
cwtl
movsl
push
push
sti
in
movsl
inc
hlt
lcall
jmp
out
arpl
adc
lods
outsl
movsl
sahf
sub
mov
xadd
das
into
push
pushf
outsb
jp
push
stos
jle
in
rolb
dec
add
enter
rorb
arpl
das
xchg
bound
sarb
dec
movsl
pop
cmp
fmul
out
movsl
mov
add
scas
jl
lock
adc
loopne
in
movsl
pop
loop
lcall
movsb
xchg
into
addr16
lahf
adc
sbb
sahf
outsl
sbb
pop
aad
test
xor
ret
lods
mov
jo
in
jno
inc
xchg
push
inc
pop
std
rcrb
push
push
movsl
mov
mov
mov
cltd
test
mov
push
lcall
inc
loop
stc
insl
jbe
sbbb
fcomps
cmc
jmp
call
mov
fisubl
in
jbe
movsl
mov
gs
push
mov
mov
mov
pop
out
cmc
test
add
inc
outsb
jle
shrl
je
sbb
mov
out
cli
ss
xchg
xchg
cmpsl
cmp
fisubl
xchg
and
xchg
subl
adc
pop
jmp
arpl
jnp
fistpl
lods
dec
call
outsb
mov
test
insb
lahf
pop
rcl
adc
jle
pusha
mov
dec
add
sbb
xchg
fdiv
fldcw
pop
inc
cmp
lret
or
cmc
push
pop
xchg
es
enter
in
pop
shll
lahf
push
add
sub
fcoms
and
sbb
pop
lods
arpl
xlat
std
mov
imul
sub
in
stc
icebp
push
enter
sti
rolb
push
jp
pop
shrl
sub
sub
fs
and
sahf
outsb
loope
jecxz
sub
sub
sbb
mov
sub
mov
jbe
sub
fs
movsl
test
pop
dec
pop
movsl
dec
jns
mov
outsl
inc
jno
xchg
ljmp
mov
push
cwtl
leave
fldenv
jns
pop
andl
jnp
or
mov
stc
repnz
arpl
mov
push
imul
cmp
movsl
aas
fstps
stos
mov
movsb
jg
pop
push
fldenv
je
bound
push
adc
ret
dec
test
leave
jmp
dec
addr16
mov
push
and
movsl
sub
jle
xor
dec
mov
jne
fldcw
mov
fld
lods
test
cwtl
cmpsl
movsl
xor
pop
out
aad
popa
movsl
out
icebp
sub
mov
loop
andl
lret
mov
push
movsl
scas
mov
jb
sahf
aas
movsl
stos
pop
ds
xor
adc
xchg
sub
stos
outsb
movsl
push
dec
jo
orw
xor
or
add
xchg
inc
movsl
inc
jne
pop
jns
jno
bound
pusha
aam
push
or
dec
inc
decb
adc
mov
movsl
dec
not
xor
js
bound
jmp
mov
mov
mov
jmp
jp
inc
mov
mov
mov
and
popa
adc
cmp
outsb
jb
rorb
push
out
cltd
or
mov
call
xchg
push
mov
add
out
mov
mov
pop
mov
aam
dec
dec
xchg
cmpsl
scas
in
or
in
cld
into
adcb
push
loop
mov
shlb
fsubl
fidivrs
and
out
jo
add
xor
adc
sub
mov
shl
pusha
frstor
in
xlat
int
lea
pop
shll
adc
decb
outsl
mul
in
test
idivb
iret
test
or
sub
pop
inc
rorb
lahf
mov
and
adc
pop
mov
cli
movb
mov
dec
imul
ret
pop
fdiv
pop
push
data16
orl
adc
idivl
push
jge
cmc
ja
lret
inc
pop
fldl
dec
cmp
add
je
movsb
in
xchg
cmp
xor
push
or
movsl
jnp
rorb
adc
push
arpl
lods
inc
enter
dec
jle
insb
mov
neg
jae
or
push
hlt
xchg
negl
sbb
adc
outsb
movsl
dec
inc
loop
jae
jg
test
movsb
movsl
mov
ret
pop
dec
movsl
fidivrs
mov
popf
shlb
jp
mov
repnz
movsl
or
in
xor
mov
adc
cmp
mov
int3
std
movsl
or
stos
test
dec
popa
inc
push
mov
test
xchg
out
aad
xchg
test
cwtl
fisubs
sti
jg
pop
jp
add
sub
movsl
or
ss
enter
test
mov
inc
lds
insb
or
movsl
pop
mov
sub
mov
fadd
call
inc
loop
add
and
insl
leave
fstpl
lret
call
movsl
push
test
pop
movsb
mov
fcomps
add
mov
pusha
push
inc
cmc
or
mov
arpl
add
add
loope
rolb
fstps
mov
mov
pop
sub
and
sti
pop
clc
movsl
sbbl
lret
stos
fistpl
push
popl
jno
or
bound
dec
movsl
pushf
cli
fsub
push
test
mov
bound
das
addr16
lods
pop
mov
xlat
inc
xchg
mov
mov
and
ret
sbb
or
mov
jb
xor
decb
pop
movsl
cmpsb
rol
fidivrs
lcall
mov
adc
repnz
mov
into
movsl
mov
xor
stc
mov
je
add
pop
and
push
cmc
lahf
mov
movsl
or
mov
out
and
filds
pop
sbb
mov
add
es
leave
pop
nop
xlat
sahf
hlt
in
add
inc
stc
push
movl
mov
push
negl
xchg
es
xor
mov
cmp
pop
push
adc
xchg
movsl
jb
stos
mov
movsl
mov
test
leave
les
fldenv
sbb
mov
add
out
cmp
sub
cmp
imul
popf
push
sbb
pop
stos
cmc
arpl
aas
xor
lret
push
sahf
fisttpll
adc
pop
adc
sub
push
ja
sbb
sbb
rol
movsl
xchg
test
bnd
pusha
out
movsl
repz
stc
leave
dec
int3
pop
rcll
or
sbb
adc
adc
repnz
jmp
movsl
pop
cs
out
fnstsw
cmp
inc
lock
xor
and
in
movsl
mov
movsl
arpl
lahf
cltd
pusha
clc
mov
addr16
nop
loope
sub
imul
es
push
mov
movsl
push
push
gs
daa
cmpsl
adcl
push
sbb
mov
scas
push
fs
leave
mulb
add
fisttps
cli
in
sarl
or
pop
xchg
xor
mov
das
jecxz
cmpsl
mov
movsl
mov
pop
jns
jl
mov
dec
mov
or
mov
mov
xor
sub
repz
outsl
mov
in
loope
dec
ja
movsl
pop
bound
or
mov
mov
movsl
mov
ss
xor
popa
pop
mov
in
sub
or
negl
mov
cwtl
xor
cltd
mov
inc
and
xchg
shrb
jmp
sbb
rolb
pop
xchg
in
movsl
dec
outsl
cmp
fwait
pop
imul
cmp
push
cmp
and
xchg
jno
xlat
mov
xor
inc
movsl
push
aam
repz
jne
mov
aas
or
movsl
mov
in
jge
aad
insl
jns
sub
sbbl
xchg
popf
das
xchg
pushf
xchg
dec
add
mov
jo
sti
inc
movsl
mov
shll
pop
dec
aad
aas
mov
movsl
jp
adc
cmp
push
cmpsl
movsl
mov
fisttps
lret
pop
jmp
and
mov
dec
lods
sub
loope
pop
roll
outsl
push
sbbb
fdiv
mov
push
cmp
mov
inc
imul
sub
fistpl
mov
mov
sbb
inc
testl
mov
mov
cmc
out
xchg
cmp
insb
and
movsl
xor
stos
test
movsb
or
scas
sub
jge
fs
addb
add
aas
push
mov
xchg
mov
nop
cmc
stc
pop
pop
and
jne
lea
imul
mov
lods
out
in
imul
mov
add
xchg
mov
or
movsl
pop
fwait
arpl
lret
outsl
add
insl
movsl
stc
add
jne
lods
adc
arpl
add
mov
xor
call
cs
ficoms
mov
imul
clc
dec
cwtl
sahf
xchg
es
in
fwait
cli
push
movsl
jmp
aad
arpl
push
jno
cmp
jbe
mov
and
es
sub
xor
jmp
and
pop
jg
push
movsl
outsl
popa
subb
movsl
sbb
rcrl
aad
pop
or
add
inc
mov
xchg
movsl
mov
das
pushf
adc
mov
jns
pop
cmp
add
xchg
mov
push
cmc
popf
sarl
mov
cmp
mov
ja
push
in
cmp
xchg
pop
mov
fisttps
out
pop
fsubs
xor
imul
jle
pop
lock
xchg
gs
and
sbb
jnp
movsl
mov
shll
mov
imul
push
mov
add
adc
loope
imul
sahf
pop
scas
int3
xchg
mov
movsl
fiadds
or
loope
mov
or
movsl
pop
testb
in
movsl
pop
mov
and
movsl
loop
inc
xchg
mov
lret
fstl
leave
and
mov
ss
cltd
xor
subb
andl
and
or
xchg
ffreep
xlat
adc
ja
push
dec
mov
add
adc
add
in
bound
xchg
push
push
xor
adc
mov
push
popf
in
movsl
rcl
in
outsb
repnz
stc
movsl
scas
ret
inc
mov
xchg
outsl
push
ffree
push
add
movsl
push
aaa
mov
hlt
lock
movsl
add
pop
jle
movsl
test
jmp
jecxz
repnz
mov
popl
popa
sbb
xchg
mov
push
mov
movsl
push
add
dec
push
dec
lret
ret
jmp
enter
outsb
pusha
outsl
or
pop
mov
in
bound
sbb
cmc
jl
shll
xor
movsl
icebp
loop
mov
movsl
lea
add
mov
sub
in
mov
lods
ljmp
inc
or
sub
enter
dec
adc
dec
sbb
mov
push
xor
xchg
and
push
sub
aam
mov
xchg
ljmp
pop
fdivs
push
mov
mov
outsb
push
adc
adc
sti
les
movsl
shl
faddp
pushf
shrb
pusha
aam
push
sbb
add
shll
ljmp
push
data16
movsl
inc
inc
cwtl
xor
push
out
std
push
jo
movsl
cld
js
push
mov
repnz
fldcw
cmp
sub
push
pop
xor
and
mov
in
shrb
movsl
xchg
shrl
ss
jbe
jl
inc
loope
mov
mov
fxch
sbb
cmpsl
jmp
movsl
hlt
lret
movsl
xor
cmp
inc
fcomps
pop
loop
pop
xor
mov
sub
mov
cmp
mov
cld
cli
inc
push
into
mov
imul
outsb
or
je
push
mov
sbb
or
imul
and
sub
cmp
aad
stos
mov
add
jl
nop
mov
data16
out
movsl
xor
test
shll
icebp
imul
in
inc
std
mov
mov
fldl
mov
add
cmp
push
jmp
and
lods
mov
imul
sbb
cwtl
and
movsl
sbb
addr16
movsw
mov
jmp
push
cld
rol
pop
mov
repz
jp
scas
lds
mov
scas
sbb
push
stos
xchg
or
fldcw
add
mov
aaa
and
mov
mov
jne
mov
pop
mov
lods
xor
mov
nop
jno
mov
xchg
pop
sub
xor
xchg
mov
stos
xor
inc
xor
and
pop
dec
in
inc
rorb
pop
fsubrp
mov
loop
mov
ss
sbbl
lods
fwait
cmp
notb
testl
movsl
out
pop
xlat
popf
lds
inc
mov
cmpl
test
mov
xor
in
cli
rorl
sbb
mov
dec
rorb
cmp
mov
push
in
inc
arpl
and
pop
aad
mov
mov
imull
icebp
in
or
hlt
and
sbb
ja
inc
adc
mov
pop
push
dec
jmp
cld
xchg
xor
aas
jmp
add
sub
ds
cmpsl
fbld
aam
call
push
mov
aas
jne
test
pop
ja
fmull
stc
int3
sbb
push
outsl
in
add
adc
mov
loopne
push
lods
mov
push
jp
ss
mov
pop
rcrl
divl
loope
shlb
jmp
movsl
test
dec
clc
mov
addb
pop
mov
xchg
loope
imul
sbb
rcrl
cltd
out
rclb
enter
xor
stos
popf
mov
ds
dec
movsl
add
inc
or
fildl
mov
push
mov
scas
xchg
movsl
lea
pop
movsl
lds
in
ror
ja
int
mov
xor
movsl
mov
xchg
sub
int
mov
jne
pop
push
lgs
push
sbb
rorl
in
movsl
sbb
inc
xor
dec
jmp
add
cmovl
push
fldenv
movsl
mov
outsb
std
mov
jbe
push
aas
dec
mov
inc
int3
aad
popa
pop
sahf
jb
xor
imul
rcr
and
stos
and
in
inc
mov
jae
xchg
adc
inc
call
xchg
push
push
dec
outsb
pop
mov
jl
adc
inc
adc
aaa
cli
push
add
xlat
repnz
movsl
es
push
mov
mov
inc
int
out
fs
movsl
add
xchg
btr
test
data16
ret
je
jno
nop
out
roll
les
jns
scas
mov
movsl
sbb
cmp
movsl
cli
outsb
jbe
lahf
sub
add
mov
fwait
sahf
sub
movsb
dec
mov
sbb
fisubs
pusha
cs
mov
js
ljmp
shlb
inc
xchg
push
pop
dec
jmp
mov
push
aam
mov
push
push
and
mov
outsl
push
lcall
inc
in
push
sbb
inc
mov
test
icebp
mov
test
enter
scas
and
in
xor
dec
add
stos
fdivr
mov
rcr
out
and
push
movsl
rorl
nop
inc
movsl
test
scas
xor
int3
out
adc
jecxz
inc
inc
push
negb
leave
cmp
aas
xchg
movsl
std
mov
sub
leave
jl
push
pop
mov
push
and
mov
pop
sbb
lock
ret
dec
mov
and
jecxz
mov
ds
jbe
mov
movsl
pop
pop
sub
loop
movsl
jo
mov
test
popf
fisubrs
or
mov
rclb
push
in
insl
in
rcrl
outsl
xchg
movsl
inc
int3
sbb
loop
neg
movsl
pop
test
mov
mov
fcmovbe
std
pop
rcll
and
or
ja
movsl
sub
dec
push
frstor
pop
cmc
add
mov
imul
in
call
fcmovu
and
gs
in
test
lcall
pop
movsl
and
adc
std
xor
movsl
sub
insb
repnz
popf
sub
push
mov
leave
push
or
fs
movsl
es
xchg
popf
cmp
pop
imul
push
loopne
jb
xchg
daa
insl
movsb
or
pop
adc
pusha
loope
mov
movsl
inc
pop
insl
xlat
inc
mov
movb
clc
jg
loop
in
or
out
inc
lret
movsl
add
fdivrp
fs
or
jno
mov
movsl
and
mov
pop
int
loop
movsl
xlat
mov
dec
xor
in
sbb
ja
jp
fldl
movsl
popa
cmpsb
sbb
xchg
pop
cmp
sbb
mov
mov
mov
dec
hlt
xor
sbb
pop
lgs
adc
das
test
mov
pop
fisubs
lods
mov
mov
in
out
repnz
and
mov
xor
jno
sub
mov
js
mov
hlt
mov
std
out
call
movsb
jle
add
jae
jl
mov
push
mov
jne
arpl
or
std
movsl
inc
mov
pop
mov
lock
dec
loope
push
lods
inc
dec
mov
add
mov
add
sub
xchg
in
fwait
stc
bound
dec
and
dec
and
cmpsb
ja
mov
out
xor
mov
jno
jo
shll
cmp
in
div
jbe
xor
sbb
jp
add
fistl
push
aas
push
nop
mov
mov
jp
arpl
leave
icebp
movsl
push
xchg
bound
add
test
xor
pusha
push
jae
iret
mov
lds
pop
jle
xor
inc
data16
movsl
jo
xchg
mov
and
lret
jecxz
sbb
into
lods
je
pop
adc
test
mov
mov
out
hlt
and
mov
in
cwtl
mov
shll
popf
xchg
mov
jle
fsts
and
mov
shlb
pop
push
xor
test
sahf
sub
scas
sub
or
fcoms
push
or
mov
sbb
and
and
push
inc
int
xlat
test
es
mov
bound
scas
in
add
sub
cmpsl
fistpll
repnz
into
sbb
xlat
lods
sub
mov
cmp
xchg
pusha
mov
push
mov
inc
popa
cmpsb
jne
sub
pop
in
mov
out
push
jmp
loop
mov
fiadds
sbb
rol
rolb
fs
daa
es
xor
int3
sbb
imul
es
mov
stc
inc
inc
movsl
and
jns
or
lods
rcrb
mov
pop
mov
sbb
dec
jnp
pop
ljmp
fsubr
movsl
sbb
arpl
movsl
ret
popa
push
cmp
enter
push
pop
push
xchg
iret
mov
pop
cmp
or
mov
mov
jno
add
movsl
out
out
lcall
pop
js
sar
lret
adc
sub
in
repz
adc
fsubrs
mov
add
out
xor
xor
pop
fstpl
lods
pop
in
into
mov
movsl
pop
mov
push
jo
mov
inc
loop
cmp
pop
mov
cmp
jmpw
cmp
fadd
push
inc
rorb
mov
fisubs
cmp
out
pop
incb
or
mov
test
jmp
loope
daa
cmc
pop
inc
adc
pop
sbb
aas
sub
pop
cmpb
lret
cmp
mov
popa
sub
movsl
xchg
adc
arpl
dec
dec
stos
aad
lret
jmp
ljmp
push
xor
jnp
in
sti
aaa
dec
dec
adc
cmp
add
ret
movsl
aam
push
call
push
in
and
mov
rolb
test
jg
fisttpll
aad
in
mov
adc
movsl
popf
sub
nop
and
ljmp
jp
movsl
inc
bound
dec
cwtl
outsb
fwait
sbb
out
movsl
mov
mov
bound
dec
dec
movsl
jle
xchg
test
jmp
mov
test
push
mov
fcoml
mov
dec
decl
mov
je
lds
lea
jmp
shl
mov
test
popa
cld
inc
movsl
add
dec
loop
jl
arpl
shlb
sbb
add
push
or
lds
sahf
lds
pop
push
dec
dec
lret
bound
ret
lds
andb
aaa
in
movsl
imul
lss
jl
into
sbb
popa
movsl
jb
jns
fadds
pop
or
xor
push
pop
push
inc
movsl
into
fldcw
loope
stc
mov
fisubl
mov
fsub
hlt
mov
mov
test
mov
adc
cmp
in
shl
xor
mov
pop
jae
pop
dec
jne
in
movsl
mov
daa
popf
movsl
shl
sub
cmp
add
nop
push
cmp
mov
mov
cmp
iret
xchg
out
out
into
lds
xchg
jbe
inc
imul
in
xchg
popa
inc
and
inc
mov
cmc
push
hlt
sahf
lds
fwait
or
sub
cld
popa
jo
mov
dec
fsubl
insl
push
fwait
sub
int3
jmp
pop
sbb
sbb
xor
iret
dec
movsl
inc
mov
inc
mov
add
xor
mov
fwait
adc
je
mov
shl
mov
push
or
sub
xor
add
pop
mov
cli
mov
cmp
mov
ret
sbbl
sbb
mov
test
rolb
and
sbb
or
dec
in
fsubrl
mov
inc
and
fs
mov
push
stc
lcall
mov
icebp
sub
lcall
movsl
out
or
mov
push
xchg
loopne
or
xor
fwait
loop
push
lods
andb
mov
cmpsl
andb
ret
testl
mov
xor
fs
mov
adc
push
mov
sbb
movsl
cmc
js
pusha
jg
adc
jno
idivl
mov
push
leave
in
mov
jae
mul
xor
dec
movsl
cld
orb
movsl
push
std
push
adc
nop
cmp
mov
lock
adc
lcall
movsl
lret
shl
cld
pushf
ret
orl
or
movsb
dec
mov
push
fucomp
icebp
enter
add
daa
test
jl
roll
adcl
mov
pop
lods
in
inc
loope
sub
pusha
movsl
push
xorb
loopne
pop
inc
stos
push
lods
jno
addr16
movsl
fcmovb
popf
mull
mov
or
mov
adc
leave
push
mov
lock
ds
or
cmp
movsl
cld
mov
nop
cmp
pusha
pop
and
adc
movsl
fsubp
rorl
mov
test
mov
mov
movsl
mov
and
stos
jmp
fidivl
add
inc
mov
imul
andb
ret
push
or
xor
push
call
xchg
cmpsl
mov
xor
hlt
sub
mov
loopne
dec
mov
jp
pop
call
movsl
xchg
rol
stos
or
aas
cmp
adc
add
data16
dec
pushf
mov
sti
shl
add
pop
cwtl
es
mov
cld
fptan
jb
movsl
adc
jbe
rolb
jle
or
adc
shll
js
or
mov
jnp
xor
add
out
cmpsb
push
cmp
call
mov
aad
cwtl
fbld
jl
cmp
mov
sub
dec
mov
cli
rcll
dec
xchg
mov
aaa
mull
lods
mov
or
lds
lods
jg
dec
arpl
xchg
lock
neg
fstps
push
push
stos
clc
movsl
repnz
cmp
ljmp
pop
add
add
inc
repz
movsl
stc
push
jl
or
mov
pop
in
pop
dec
int
jmp
and
movsl
lret
mov
movsl
lret
aam
push
pop
jnp
rcrb
xor
add
in
call
cmpsb
sub
jnp
imul
sub
repnz
jp
dec
sbb
xor
movsb
movsl
xor
mov
mov
stos
movsl
push
mov
mov
leave
and
adc
adc
cld
dec
movsl
imul
sbb
and
xchg
shll
test
movsl
mov
pop
lea
data16
sbb
mov
xchg
adc
sbb
push
pusha
in
sbbl
mov
out
loope
pop
inc
and
lret
mov
cltd
mov
in
and
aad
adc
sbb
pop
nopl
inc
aaa
or
shlb
cmp
call
pop
jbe
push
int
inc
mulb
dec
mov
xor
cmc
icebp
pop
popf
je
fdivrp
pushf
cmc
mov
in
pop
sub
hlt
movsl
sti
ret
push
sub
loope
leave
movsl
sub
mov
dec
movsl
push
jge
add
loope
call
sub
xchg
and
fndisi(8087
dec
push
movsl
dec
adc
aad
movsl
test
xchg
xor
push
jns
movsl
dec
outsl
imul
mov
push
and
popf
lcall
imul
decl
std
mov
inc
xor
ror
jl
mov
movsl
jno
pop
shlb
xchg
xor
sub
movsl
inc
push
xor
cld
adc
or
and
jle
push
pop
jns
pushf
fisttpll
mov
mov
movsl
loope,pt
cs
push
pushf
mov
push
movsl
orb
mov
xchg
push
cmp
out
sbb
scas
mov
rclb
mov
pop
fdivrs
scas
fbld
hlt
inc
fbld
xor
jl
out
add
sub
nop
fsub
dec
push
xchg
out
mov
scas
adc
std
enter
lea
fidivrs
sub
movsw
popf
or
sub
lds
outsb
inc
dec
and
in
loope
xchg
push
and
or
pushf
popf
mov
adc
push
cltd
inc
adcl
popf
fs
jle
in
and
jp
sbb
int3
stc
push
or
popa
cmc
out
pop
and
adc
aad
sahf
cmp
xchg
and
repnz
insb
mov
push
sbbl
aas
mov
mov
sti
pop
cmc
repnz
pop
jo
dec
leave
push
int3
popa
mov
arpl
out
mov
add
movsl
test
add
adc
out
or
leave
pop
shlb
fadds
stos
sti
loop
neg
or
mov
jb
dec
addr16
cmpsl
out
pop
jecxz
movsl
imul
push
aad
adc
mov
insl
mov
lcall
push
stc
sbb
push
icebp
loope
test
inc
leave
xchg
xlat
dec
addr16
mov
les
add
clc
sub
popa
xor
mov
jno
add
mov
icebp
pusha
xchg
jmp
out
jbe
sbb
daa
mov
pop
mov
push
add
cmpsl
call
xor
xlat
data16
pop
xchg
adc
movsl
icebp
jle
out
or
sbb
jnp
sarb
mov
sbb
fsubrs
jp
mov
ret
jmp
cld
fdivp
add
shlb
xor
addb
add
inc
in
xchg
sbb
stos
ss
and
movsl
fcomi
jl
add
jno
movsl
cli
mov
call
fnstcw
inc
movsl
ss
cmc
mov
js
xchg
mov
pop
or
aad
xor
xor
pop
or
add
js
push
lods
sbb
push
push
shl
inc
cli
movsl
xchg
cmp
sub
movsl
push
xchg
push
fwait
mov
sahf
aaa
negb
pop
jge
loop
cmp
xchg
lea
jo
movsl
stos
push
mov
and
pop
movsl
pop
mov
inc
fsubr
sbb
enter
lea
sti
lds
out
pop
mov
loopne
aad
out
jno
xor
pop
mov
xchg
mov
inc
pop
loope
and
mov
dec
stos
mov
inc
jge
add
movsl
test
clc
in
xchg
sub
sbb
mov
lcall
cli
repnz
mov
mov
inc
pop
lahf
push
aam
imul
jne
lcall
arpl
push
mov
jecxz
adc
mov
xor
adc
out
jae
mov
imul
cmpsl
cmc
jnp
inc
pop
movsl
push
mov
imul
mov
repnz
insl
adc
jl
cld
out
movsl
dec
lds
fldenv
out
test
ret
stc
xchg
pushf
dec
dec
fdivrs
mov
shll
gs
sbb
shll
inc
xchg
js
nop
gs
jle
std
cs
mov
fs
sbb
pop
dec
movsl
mov
mov
push
test
jnp
mov
pop
movsl
pop
pop
ds
outsb
pop
adc
jnp
inc
jns
xchg
mov
testl
ds
mov
add
filds
int3
in
je
inc
pop
push
push
loop
xchg
rcll
xchg
jmpw
jnp
popf
mov
arpl
fsubrl
std
mov
sub
lea
pop
movsl
hlt
add
stos
mov
mov
clc
in
jge
cmp
nop
mov
cmpsb
popf
dec
sti
movsl
in
jle
out
cmc
rorb
sub
push
or
ja
fdivrs
cmc
sub
scas
sahf
mov
or
outsl
sbb
popf
enter
and
or
lods
dec
add
inc
push
sbbb
jp
pop
jbe
cmp
movsl
xchg
sbb
das
pop
push
jmp
mov
loopne
ret
rcrb
lret
mov
push
lahf
jmp
lods
adc
inc
adc
xchg
mov
jl
nop
in
je
sub
mov
mov
cmc
popf
mov
out
enter
nop
in
mov
and
jge
jae
mov
sahf
cltd
push
adcb
or
xchg
fwait
scas
cwtl
es
out
jnp
addr16
push
add
xchg
aad
int3
jb
mov
scas
mov
sub
loop
and
push
push
sbb
fimull
xlat
sub
or
lods
repnz
mov
sub
mov
andl
mov
dec
mov
lret
pushf
cmpsl
or
in
movsl
flds
loope
jne
icebp
pop
mov
sub
xchg
mov
rsm
jbe
inc
imul
popf
movsl
fsub
push
dec
and
fildll
mov
bound
movsl
or
inc
lcall
xchg
test
in
repz
repnz
and
adc
mov
push
arpl
mov
mov
in
rcl
pop
cmpsb
bound
test
inc
js
mov
pushf
dec
fldcw
movsl
inc
movsb
mov
movsl
pop
in
pop
mul
sarb
xchg
ds
push
inc
push
add
int3
ret
jmp
movsl
mov
sub
jae
jo
adc
in
or
push
xchg
or
test
cmc
lea
dec
mov
push
xor
movsl
out
bound
xchg
fwait
dec
cltd
xchg
in
lds
xor
push
movsl
test
push
je
or
and
push
ja
insl
pop
pusha
imul
movsl
mov
das
adc
rcrl
test
fdivr
outsl
adc
adc
les
movsb
sub
int3
stos
ljmp
cli
mov
les
and
mov
xchg
aad
das
xorl
mov
mov
xchg
sarl
std
jo
loop
or
je
cmp
lods
sbb
mov
jg
mov
lock
data16
js
xchg
adcl
lea
xchg
mov
jmp
daa
es
repz
in
pop
sub
sub
sub
mov
adc
mov
mov
sarb
js
cs
fwait
xlat
dec
cmp
iret
fimuls
test
and
out
test
loopne
inc
dec
add
and
push
in
sub
xchg
xor
xlat
clc
add
orl
icebp
pusha
xchg
negl
jno
sub
pop
jne
mov
cmp
clc
push
int3
lcall
mov
jae
mov
dec
int
xlat
jl
lods
not
sbb
xchg
movsb
pop
popa
push
mov
push
jp
sub
add
mov
mov
and
and
cmp
icebp
iret
in
xor
imul
sub
std
sti
push
imul
xlat
testl
movsb
pop
sahf
ret
sbb
shlb
test
ret
adc
stos
sub
sbb
pop
mov
push
test
sub
pop
lds
subb
ret
dec
mov
or
add
addb
test
sbb
repz
fidivs
inc
popa
jmp
mov
fimull
popa
cmp
jge
out
in
mov
dec
push
xor
and
sbb
inc
sub
mov
outsl
js
push
mov
mov
movsl
inc
mov
dec
into
testl
pop
stos
stc
mov
andl
pop
movsl
jmp
jnp
ljmp
daa
aaa
movsl
mov
das
add
adc
dec
aad
push
out
movsl
ret
int
xchg
xor
pop
mov
mov
out
xor
mov
scas
jno
push
sbb
arpl
jg
inc
mov
js
out
mov
push
jle
jns
xor
pop
and
adc
lds
xchg
xchg
movsl
dec
dec
shrb
ss
cmpsb
sub
loopne
and
das
jmp
call
stos
stos
imul
lcall
lahf
pushf
xchg
cmp
mov
enter
movsl
jno
inc
in
call
arpl
mov
inc
xor
nop
xor
iret
and
pop
lock
data16
in
or
xchg
cwtl
mov
mov
mov
pop
sbb
cmp
sar
xor
bound
xor
dec
jbe
xor
scas
movsl
pop
stos
push
mov
movb
add
daa
fstpl
push
xchg
and
mov
jbe
dec
jmp
mov
les
mov
in
int
adc
in
sbb
icebp
aam
dec
aas
popf
sbb
and
fisubl
sbb
lods
xlat
lret
pusha
or
add
adc
movsl
sub
in
lds
cmpsb
and
lds
xor
test
jae
and
stos
mov
pop
push
xor
mov
into
roll
cmpsb
sub
mov
and
movsl
mov
test
add
repz
data16
lahf
and
dec
lock
pop
adc
inc
lret
xchg
in
fcomps
dec
ja
inc
addb
mov
xchg
loopne
or
mov
jge
leave
and
push
adc
jl
and
cmpsl
xorl
sbb
in
scas
enter
xor
and
out
test
add
jns
cmpsl
sbb
data16
sbb
mov
sbb
jo
dec
movsb
in
xor
ret
xchg
push
mov
or
test
in
out
arpl
sub
inc
xlat
ljmp
and
insb
mov
out
sbb
sahf
push
ret
cmc
stos
mov
test
mov
repz
icebp
mov
mov
pop
pop
sbb
sti
shrb
mov
stos
push
test
inc
sbb
leave
mov
jae
negl
lret
mov
lret
int3
xchg
in
insb
fistpll
gs
fadd
das
pop
sbb
xchg
pop
icebp
push
jnp
jnp
fdivr
in
loop
jp
sbb
rcrb
push
mov
ss
data16
fnsave
xor
insl
shl
add
or
xchg
lds
or
into
sbb
icebp
pop
add
mov
and
leave
into
or
xchg
rorb
lods
pop
int3
out
push
test
adc
xor
xchg
stos
add
fimull
adc
pop
xchg
test
je
les
mov
aaa
push
mov
jnp
mov
jmp
jno
pushf
insb
and
nop
cli
inc
mov
loope
xor
jnp
xchg
and
xchg
lcall
add
fdivrs
adc
jnp
inc
push
adc
repz
out
int
jo
cld
xlat
js
jecxz
push
add
sub
fst
popf
jg
xchg
sbb
sbb
lcall
ss
jg
inc
dec
sbb
popf
sub
jne
lret
lods
xchg
pusha
insb
jmp
mov
dec
xchg
into
comiss
ja
clc
arpl
push
sbb
sub
flds
cld
cmc
lods
xor
mov
cmpb
clc
cmp
data16
inc
inc
xchg
bound
stc
je
test
loope
neg
fs
push
dec
aad
fisttpl
or
and
shll
loop
dec
push
dec
push
enter
push
dec
repz
jno
add
mov
loop
jnp
mul
daa
add
jnp
pop
aam
negb
mov
popf
sub
push
jl
pushl
arpl
leave
and
mov
insb
dec
add
loopne
mov
xorl
jb
cmc
insb
sbb
mov
jnp
sti
sub
lcall
fwait
daa
icebp
mov
filds
xlat
sub
lods
mov
or
movsl
dec
mov
sbb
fdivs
jle
ss
ja
test
movsl
stc
add
cmc
add
dec
mov
clc
addr16
mov
in
cwtl
cmp
mov
dec
sarb
insb
lcall
in
insl
push
fstl
das
mov
movsb
mov
xor
adc
lods
xor
pop
test
push
fisubs
test
insl
nop
jne,pn
mov
pop
mov
leave
stos
mov
xor
outsl
xchg
outsb
push
int
mov
mov
pop
jp
dec
mov
jmp
mov
cld
sbb
adc
push
loop
in
pop
push
pop
imul
sub
shlb
jne
ja
pop
aad
int3
jns
sbb
mov
movsl
and
call
sbb
jnp
inc
in
in
push
sahf
xlat
mov
clc
mov
xchg
addr16
mov
jno
mov
adc
prefetcht2
jge
mov
movsl
test
adc
xor
movsl
scas
ljmp
sbb
mov
loop
in
hlt
fisttpl
inc
jge
mov
imul
jle
pop
movsl
cltd
push
cli
or
out
out
imul
into
mov
gs
dec
cld
jecxz
fyl2xp1
jnp
fldl
or
push
pop
scas
sbb
insl
inc
inc
nop
in
pushf
adcl
dec
fs
lcall
lds
enter
mov
aad
shr
out
movsl
xlat
sub
sbb
adc
das
popa
loop
xchg
cmp
sbbl
jne
out
shl
jmp
movsl
jmp
adc
shlb
xlat
insb
outsb
inc
sti
dec
mov
adc
or
in
jecxz
into
gs
or
movsl
cmp
insl
loopne
cli
mov
mov
loope
dec
incb
cmp
lods
mov
test
outsb
stc
shrb
cmp
aaa
adc
subl
scas
jle
lahf
popf
xor
mov
loop
movsl
out
insl
jae
pop
lret
mull
push
in
int
add
pop
stos
pop
leave
call
inc
pop
insl
push
movsl
xlat
xchg
fldcw
inc
out
movsl
int
or
test
clc
pop
mov
dec
sbb
push
sti
inc
movsb
cmpsl
lods
mov
or
mov
mov
mov
sahf
or
insb
rcll
mov
sub
in
mov
loope
fnstenv
push
rolb
or
in
fcomi
addl
mov
out
adc
or
mov
jbe
jle
dec
repz
subb
sbb
bound
jp
inc
andl
fs
shll
out
stos
mov
mov
adc
aad
int3
xor
ljmp
and
xchg
sub
mov
scas
imul
fwait
sub
dec
jmp
movsl
sti
mov
scas
sbb
and
inc
push
movsl
add
daa
nop
into
movsl
xor
int
sbb
inc
pushf
add
mov
scas
mov
sar
mov
lods
int3
movsl
jmp
sub
sub
and
add
xchg
hlt
movsl
es
mov
xchg
loope
movsl
loop
and
fs
sahf
repnz
icebp
aaa
vsubss
mov
sarb
movsl
imul
jge
or
mov
mov
lret
sbb
cmp
jae
and
pop
imul
pusha
mov
movsl
fidivl
xor
iret
addb
inc
addr16
aad
in
jecxz
cmp
add
mov
jmp
dec
jo
xchg
popf
test
mov
or
mov
pop
sbb
sbb
add
mov
or
jbe
fistpll
cltd
movsl
es
push
sbb
pop
pop
pop
push
ss
loope
push
in
jns
adc
pushf
ret
mov
bound
and
out
cld
push
in
movsl
xor
out
jmp
mov
dec
movsl
push
inc
in
jne
cmp
sahf
nop
data16
cmp
in
mov
xchg
mov
in
bound
fisttpll
mov
fnsave
mov
iret
fdivr
leave
lea
xchg
movsl
jnp
mov
aad
pop
pop
mov
les
pushf
mov
adc
sbb
pop
pusha
es
leave
sub
rcll
in
leave
pop
stos
movsl
sbb
mov
inc
mov
stc
add
cli
dec
push
shlb
fsubr
xchg
fwait
cltd
xor
movsl
adc
push
mov
mov
push
or
and
sbbb
mov
mov
loope
push
je
orb
push
ss
fidivl
add
sub
mov
in
iret
loopne
std
movsl
inc
jne
pop
jb
adc
add
or
movswl
inc
int3
ret
je
push
inc
test
sbb
mov
sti
icebp
movsl
fdivl
ret
inc
and
xorl
outsl
movsl
jg
out
pushf
ja
adc
pop
stc
jmp
repnz
jle
mov
or
or
sbb
jbe
movsl
dec
pop
mov
dec
xchg
mov
xor
scas
stos
inc
movsl
bound
and
movsl
pop
dec
adc
dec
hlt
push
movsl
leave
popf
movsb
sub
int3
dec
add
and
push
mov
insb
push
or
sub
arpl
add
es
aad
lret
pop
adc
jle
rcrb
roll
movsl
je
in
std
loopne
out
mov
lods
out
adc
aam
sbb
mov
insl
movsl
jns
out
pop
xchg
cld
movsl
inc
push
and
push
mov
lods
lcall
lret
movsw
push
call
mov
inc
push
jb
adc
mov
mov
mov
stos
mov
xchg
mov
lds
jbe
xchg
xor
int3
adc
ja
jp
lret
int
xor
movsl
adcb
cmp
pushf
aas
cmp
and
mov
and
and
xor
mov
cltd
lahf
xor
sbb
fisubs
lds
movsl
fstpl
outsb
dec
imul
movsl
nop
cmp
xor
mov
movsl
jo
jecxz
call
mov
adc
adc
je
mov
call
pop
out
fnstsw
mov
leave
mov
hlt
mov
pop
divb
popf
fistpl
sbb
xor
mov
mov
out
pop
xchg
loopne
mov
repnz
xor
inc
ljmp
mov
aad
es
cmp
lds
ds
lret
mov
aam
aad
std
fwait
dec
push
clc
andb
outsb
arpl
aas
push
mov
and
scas
movsl
xor
not
cmc
sbb
ud1
movsl
les
cld
leave
movsl
cwtl
fs
incb
mov
nop
lea
in
cmpsb
fldl
and
mov
push
xor
movsl
fwait
movsb
into
add
pop
sbb
je
iret
imul
lods
or
mov
rol
ret
and
popa
push
out
scas
aaa
push
es
andb
call
inc
xor
loop
aam
add
nop
push
cltd
mov
ror
cld
in
int3
jge
mov
dec
push
xchg
jnp
jno
cltd
ss
inc
mov
xor
dec
jbe
adc
cmc
cmp
negl
movsl
dec
dec
je
call
add
sub
pushl
movsl
mov
add
sbb
mov
or
cld
shrl
cli
sbb
xorl
adc
push
jbe
xchg
movsl
cmpsl
xchg
popa
loop
mov
in
imull
inc
push
lds
cmc
insl
push
pop
jecxz
enter
sbb
lret
in
push
push
xchg
faddl
cmc
je
movsl
sti
mov
div
movsl
test
aaa
jp
adcl
movsl
inc
xchg
push
mov
xchg
out
fsub
pop
ss
or
mov
movsl
cwtl
rcll
dec
not
pop
movsl
and
add
repnz
push
add
jle
stc
adc
in
decl
outsl
movsl
ljmp
and
js
imul
jle
rol
adc
test
iret
sbb
fldl2e
fldl
sbb
in
lcall
add
imul
sub
mov
xchg
inc
mov
sbb
and
loope
jo
movsl
xchg
xlat
icebp
and
dec
imul
adc
lds
xor
rorl
lods
bound
roll
out
pusha
mov
pop
mov
inc
es
sub
adc
or
js
enter
fdivrs
xor
xchg
mov
xchg
movsb
inc
sub
cmpsl
repz
icebp
xor
push
sub
adc
add
and
sbb
sbb
fistl
sub
mov
pushf
mov
xchg
and
test
mov
mov
mov
subb
popf
push
inc
pop
push
lahf
xchg
les
shll
xor
cwtl
cmc
sti
push
sub
xchg
pop
cs
push
bound
add
movsl
cltd
sub
ret
iret
fbld
mov
in
adc
aam
jo
inc
cli
inc
sub
mov
inc
movsl
mov
cmp
xchg
xor
adc
lahf
fcmovnb
ljmp
aad
push
or
jnp
cld
movsl
int
push
scas
ret
int3
and
std
jge
cwtl
in
aas
mov
adc
sbb
xor
pushf
mov
pusha
insb
cltd
daa
mov
movsl
test
pop
stos
dec
movsl
add
lea
push
rcll
frstor
cld
jne
sub
cmpsl
lds
shlb
in
in
movsl
mov
out
iret
stos
mov
sbb
pop
stos
orb
inc
dec
jg
push
jns
push
mov
mov
lea
and
ret
jne
bound
mov
sahf
out
sub
in
mov
outsl
jg
pop
jb
pop
sub
add
lods
cmc
xor
movsl
push
repnz
sub
movsl
data16
mov
loop
add
push
mov
lcall
in
and
movsl
mov
dec
sarl
ja
mov
in
push
insb
aad
add
test
movsl
sub
xor
mov
jbe
and
pop
sub
inc
jle
popa
push
js
clc
add
inc
out
fstpl
inc
popf
pop
js
mov
hlt
mov
xchg
lods
adc
orl
add
popa
xchg
cs
out
lea
and
and
or
dec
movsl
subl
jg
push
mov
mov
jnp
fwait
pushf
sbb
scas
sahf
or
add
hlt
stc
mov
movsl
aas
mov
in
mov
movsl
ljmp
adc
mov
inc
in
inc
pop
lcall
cmc
cmpsl
pop
mov
mov
aas
mov
jmp
or
pop
add
daa
sahf
insb
jecxz
jno
icebp
and
lcall
rcrl
sti
push
ror
pop
lds
jns
inc
lods
and
inc
and
pop
push
jp
aas
cld
ss
std
sub
inc
mov
int
cmp
adc
sbbb
adc
pop
lods
lods
mov
adc
out
or
in
push
js
lret
push
movsl
cmp
xor
cld
jl
jecxz
add
mov
shll
mov
movsl
sbb
lods
imul
in
pop
sub
dec
orb
mov
rol
jecxz
mov
adc
cmpsb
mov
mov
mov
cmp
jecxz
mov
popf
and
daa
dec
xchg
xor
or
adc
inc
int
imul
cmp
movsb
xor
movsl
sub
test
stc
dec
dec
jl
imul
lahf
aaa
inc
pop
pusha
test
add
movsl
sbb
iret
je
ret
faddl
jbe
push
movsl
xchg
add
sahf
sbb
xor
and
aaa
xchg
and
mov
ds
test
xchg
mov
scas
outsl
push
fsubs
movsl
inc
xor
sub
pop
mov
mov
push
adc
jp
loopne
push
xorl
in
leave
mov
loopne
pop
inc
push
out
iret
push
cmpsb
mov
mov
pop
push
sbb
movsl
pop
data16
repnz
movsl
popf
cmp
dec
lods
pop
movsl
into
movsb
add
mov
push
insb
arpl
add
fsub
orb
pushf
or
add
stc
push
xchg
adc
jno
push
adc
cli
pushf
mov
outsb
xor
stos
icebp
shlb
cmpl
push
and
and
mov
stc
aam
in
movsl
push
incl
lret
jmp
in
xchg
dec
jb
cli
movsl
mov
and
movsl
push
lock
adc
mov
mov
push
fisubs
cmp
mov
sbb
add
push
push
enter
out
movsl
gs
cmp
sbb
mov
push
mov
mov
jecxz
movsl
sbb
cli
cld
scas
mov
xor
mov
lret
insb
cmp
adc
ljmp
sbb
add
arpl
imul
cld
das
sub
repz
movsl
les
mov
ret
fsubs
push
mul
test
sahf
scas
mov
test
push
mov
lcall
dec
xchg
aas
push
repnz
push
sahf
je
sahf
es
add
test
dec
loopne
lods
sbb
das
xchg
stc
jo
push
gs
inc
cmp
push
insl
dec
push
jbe
mov
stos
outsl
cmpsb
add
jae
movsl
pusha
addr16
dec
addl
movsl
fsubrs
push
and
cwtl
in
stos
wrmsr
addr16
lods
mov
cltd
mov
cli
push
insl
adc
js
scas
movsl
xor
mov
or
sub
push
addb
loope
std
aam
inc
aad
pop
add
movsl
sbb
sbb
inc
mov
mov
fstpl
dec
lcall
cmc
jl
movsb
cmpsb
movsl
test
inc
aaa
daa
mov
sbb
test
mov
repz
jae
imul
cmovle
pop
test
inc
jnp
mov
gs
jb
stc
movsl
mov
adc
cmp
lds
push
movsl
push
in
add
mov
nop
xchg
jle
cmc
fisubs
pushf
sub
les
dec
cmc
insb
addl
das
inc
cmp
lock
sbb
mov
scas
out
jg
outsl
loopne
or
xchg
into
movb
pop
adcl
clc
sarb
fbld
xchg
push
mov
movsl
lret
sub
das
fnstenv
or
out
popa
cmp
movsl
pop
or
sub
mov
call
cmp
pop
inc
jne
loope
jecxz
test
fcompl
loop
or
mov
or
ret
xor
movsw
out
fcoml
mov
mov
aaa
hlt
pop
fildl
movsl
sbb
sbb
jle
movsl
xor
sahf
fidivs
or
nop
jb
sub
aam
jmp
xor
andl
out
mov
push
rcrl
loopne
pop
fidivrl
mov
mov
and
int
adc
jnp
into
repz
cmpsb
and
hlt
ljmp
in
ret
lret
xchg
and
mov
lret
in
cmp
inc
and
insl
adc
lds
gs
out
test
int
movsl
ljmp
hlt
push
testl
cmc
push
xor
xchg
jb
jmp
dec
movsl
and
mov
sbb
cmp
and
push
nop
daa
outsl
xchg
scas
inc
push
add
data16
fs
lods
mov
sub
stos
and
jge
mov
in
push
outsb
mov
insb
shr
dec
dec
push
add
lds
inc
test
fwait
mov
loop
out
in
xor
jg
lret
mov
push
ss
and
dec
in
rolb
mov
movsl
notb
mov
movsl
push
dec
pop
ja
sub
or
mov
and
push
call
loope
test
mov
dec
fwait
sbb
scas
cmc
inc
push
pop
mov
movsl
mov
inc
or
jno
jns
lods
add
add
je
lds
aad
rclb
inc
push
push
cmp
mov
dec
ljmp
xchg
mov
add
cmc
scas
pop
mov
inc
movsb
jbe
jno
inc
scas
int
repz
inc
cmc
lret
cmp
lea
or
sub
aaa
sti
sbb
add
inc
add
std
pushf
mov
sti
pop
dec
stc
mov
cltd
imul
lahf
rcrb
adc
mov
pop
fmul
das
fdivp
pusha
cmp
pop
lcall
mov
inc
loopne
and
loope
jbe
dec
insb
sbb
aad
mov
push
mov
mov
cmc
leave
mov
fistps
jmp
movsl
push
sbb
sysexit
lcall
rcrb
mov
lds
mov
push
incb
js
lock
fcmovu
sub
movsl
je
pop
jp
dec
sti
jmp
loopne
sub
outsl
movsl
insb
mov
dec
dec
adc
xchg
movsl
int
out
pop
jg
mov
adc
scas
movsl
or
xchg
shlb
fiadds
movsl
pop
stc
jb
xchg
out
unpckhps
push
movsl
int3
xchg
movsb
jnp
jbe
es
inc
mov
push
lock
xlat
movsl
cmpsl
aas
rolb
movsb
sahf
aad
adc
inc
cwtl
stc
into
loopne
cs
push
mov
lahf
mov
adc
pop
jmp
cs
fwait
setno
ss
movsb
adc
mov
dec
jno
iret
iret
ljmp
es
inc
gs
dec
movsl
pop
mov
dec
fstl
sub
rcl
por
movsl
xor
les
out
fcompl
lods
ja
ret
xchg
push
test
rcrl
sub
test
add
jecxz
movsl
lea
mov
adc
mul
fnstenv
lock
int3
movsl
sbb
jle
push
xchg
out
mov
popa
push
fcoml
mov
out
mul
pop
shlb
add
imul
sbb
and
mov
scas
lock
xor
cmp
sbb
push
dec
pop
sbb
movsl
inc
insl
out
sbb
pushf
aad
mov
movsl
insb
cmc
test
out
xorb
pop
sub
push
push
sbb
movsl
fs
inc
mov
xchg
mov
pop
pop
cli
mov
sti
jecxz
lods
inc
imul
rol
jbe
mov
test
jnp
movsb
movsl
dec
or
sahf
pop
in
push
test
ret
movsl
xchg
push
sub
jae
stos
mov
or
lock
jle
xchg
cmp
and
outsl
stos
stos
movsb
pop
movsl
dec
adcl
movsl
mov
pop
stos
ficompl
aad
xlat
cs
rcrb
cmc
push
fstl
in
fisubl
dec
dec
insl
in
repnz
fidivl
mov
push
mov
adc
bnd
dec
sbb
mov
movsb
or
mov
push
mov
rclb
push
mov
movsl
fadd
mov
jge
call
push
xchg
sbb
cltd
mov
pusha
movsl
pop
outsl
imul
sbb
push
xlat
xor
movsl
add
stos
mov
dec
or
mov
sub
sarl
das
mov
push
movsl
nop
xchg
adc
mov
iret
movsl
shrl
stos
andl
mov
das
inc
jno
xor
aaa
push
dec
cwtl
xchg
std
and
int3
movsl
mov
xchg
adc
sbb
sub
or
stos
cmc
sub
push
inc
popf
shlb
or
mov
pop
or
js
loopne
xchg
and
dec
sub
pusha
aam
jae
fldl
sbb
push
cmc
push
popa
lahf
xchg
pop
mov
xor
or
lods
add
lret
xchg
cmp
cmpsb
push
jo
sbb
nopl
cmp
lcall
in
enter
mov
push
inc
sub
cltd
out
add
daa
push
das
jne
popf
fbstp
es
mull
pusha
mov
and
sub
or
popa
rcrb
mov
xchg
jecxz
mov
movsl
shrl
das
jno
sub
sahf
mov
or
into
out
fmull
rcr
js
jns
mov
push
or
stos
jecxz
ljmp
nop
out
jge
movsl
test
cmc
push
sub
and
cli
jge
dec
push
mov
cmc
and
movsl
cmp
xchg
adc
movsl
aas
and
lock
pusha
pop
inc
push
inc
das
xchg
pop
movsl
pop
xor
pop
mov
and
orb
mov
test
repnz
and
xlat
movsb
stos
jns
jg
das
and
lret
movsl
sub
mov
mov
movsl
int3
test
loope
out
add
movsl
cmp
cmp
test
test
daa
cs
add
pop
cmp
push
movsl
iret
adc
mov
into
repnz
aam
das
mov
movsl
xchg
pop
inc
add
clc
adc
jecxz
sahf
ja
sbb
xchg
mov
lds
andb
pop
mov
adc
sub
dec
mov
gs
jle
cmp
and
mov
pop
push
mov
movsl
cmp
cmp
test
jp
insl
imul
movsl
add
xchg
ja
movsl
lcall
shlb
sahf
cmp
cmc
push
cmc
pop
popf
jecxz
inc
lcall
xchg
shll
mov
movsl
insl
mov
movsl
pop
jb
and
mov
cmp
mov
xchg
mov
or
pop
out
movsl
test
pop
aad
hlt
stos
jmp
cmp
jl
fcomi
cmpsb
jae
pop
mov
movsl
xor
pop
je
jno
mov
test
sbb
push
xchg
inc
sbb
lcall
pop
out
in
rcll
dec
fwait
xchg
ss
movsl
adc
cld
movsl
inc
into
test
movsl
or
stos
fdivr
adc
mov
rolb
sbb
movsl
jns
es
dec
insl
movsl
je
call
cmp
int
popf
adc
jge
pop
cmp
lods
jmp
pop
test
mov
dec
int3
repz
test
movsl
stos
sbb
mov
xor
xor
mov
sbb
pushf
cmpsl
leave
or
jle
lock
adc
inc
xorl
inc
repnz
pop
out
lret
sub
gs
mov
and
movsl
bound
pop
dec
jo
out
or
fildl
cmp
popa
and
pop
push
repz
movsl
test
dec
icebp
lods
push
enter
fldenv
push
adc
gs
test
movsl
out
test
loop
movsl
cmc
lcall
negb
mov
push
jnp
movsl
ss
in
iret
sbbb
movsl
jb
mov
xlat
movsl
and
outsb
loope
xor
pop
mov
loopne
aam
or
lods
scas
sub
shl
lds
adc
aaa
movsl
shlb
xchg
lahf
dec
lcall
jmp
popa
movsl
pop
or
push
adc
movsl
pop
mov
pop
outsl
xchg
inc
sub
popa
and
adc
aaa
in
dec
push
test
stos
mov
loopne
rcll
add
mov
mov
ret
hlt
imul
pop
fwait
mov
dec
sbb
mov
in
mov
push
jno
hlt
inc
movsl
sub
jge
and
insb
fmulp
lcall
push
fs
push
cmpsl
cltd
imul
dec
hlt
jecxz
pusha
mov
mov
push
in
sbb
js
pop
popa
out
in
or
dec
movsl
cmc
stc
push
adc
add
mov
lods
lock
insb
push
dec
mov
test
and
xor
lcall
push
jnp
faddp
ljmp
fucomi
push
and
push
xorb
xchg
mov
mov
addr16
sub
aaa
sbb
int
in
xchg
movsl
mov
in
loop
sub
fdivs
imul
and
inc
in
loope
movsl
lahf
xor
pushf
pop
dec
inc
setno
movsl
jne
das
adc
mov
stc
pop
cmp
xor
in
ljmp
scas
adc
leave
sbb
out
or
jns
adc
or
mov
movsl
data16
adc
ret
inc
xor
movsl
or
shll
mov
lahf
js
push
jp
movsl
cmp
je
pop
in
orl
into
movsl
insl
dec
jbe
insb
pop
or
lcall
cwtl
jb
mov
call
mov
pop
mov
push
cli
scas
add
pop
leave
hlt
iret
lock
cld
fildl
movsl
ucomiss
popa
sub
cli
mov
mov
cmc
stos
out
mov
sbb
and
leave
xchg
and
jo
xor
outsb
sub
aas
into
loope
icebp
pop
stc
imul
push
je
push
ljmp
je
orl
insl
sbb
call
dec
mov
xchg
push
idiv
fsubl
sbb
fwait
outsl
mov
pop
and
lret
sub
es
pop
ret
xor
mov
jecxz
push
sbb
loope
pop
imulb
pop
popa
inc
sub
push
xchg
sbb
push
xor
jg
push
cld
imul
jne
outsb
sbb
bound
and
cmc
lods
ror
popf
mov
shlb
push
popf
mov
aas
mov
arpl
aaa
push
sbb
jle
out
xchg
mov
aaa
sar
scas
adc
inc
push
stos
jo
push
ret
cmp
mov
sub
popf
shrl
push
fs
cld
xchg
nop
mov
push
lahf
adc
jnp
mov
movb
int
subl
push
out
add
cwtl
xor
mov
mov
push
sub
sbb
inc
nop
scas
mov
pop
iret
std
mov
icebp
rcrl
or
das
or
popa
movsl
test
inc
test
test
inc
jnp
leave
adc
icebp
and
xchg
add
dec
loope
xor
add
push
stc
pusha
mov
negl
inc
jecxz
fwait
pop
adc
mov
sub
pop
inc
dec
in
insb
dec
and
xchg
insl
rcll
out
or
cltd
cmc
data16
outsb
rcrl
push
cmc
cli
sub
mov
dec
gs
cmpsl
dec
pop
push
jecxz
fcmovb
mov
sbb
bound
dec
sbb
decl
xchg
inc
mov
or
loope
fdivrs
sub
mov
push
sub
xchg
jge
fcompl
inc
pusha
notb
popf
jnp
xor
and
or
mov
insl
sub
inc
rcrb
icebp
cld
sbb
movsl
js
movsb
clc
sahf
in
inc
loopne
dec
repz
lret
fstl
clc
pop
and
fs
mov
clc
pop
lds
popf
mov
and
sub
out
inc
sub
pusha
shl
and
mov
jl
push
imul
sbb
dec
cwtl
adc
div
lods
sbb
es
loope
cmp
stc
shl
mov
or
aaa
pop
sub
movlps
jecxz
lret
test
and
or
lret
adc
adc
push
dec
pusha
jecxz
hlt
sbb
add
sarl
or
dec
out
hlt
or
xlat
mov
mov
and
inc
in
es
in
mov
and
and
cmp
sti
sbb
dec
mov
pop
test
jmp
popf
and
mov
fnsave
push
sub
add
cmp
push
jg
loope
and
out
pop
pop
xchg
ja
push
jnp
ds
test
stos
aad
jns
push
lods
and
inc
and
movsl
icebp
cmp
out
xor
push
sbb
pop
sub
es
mov
sahf
xchg
adc
js
dec
std
or
pushf
push
ljmp
add
sbb
add
movsl
fcoms
loop
pop
sbb
mov
xor
in
jb
mov
adc
movsl
and
mov
xchg
dec
sbb
popa
jmp
xor
or
cli
sar
movsl
ja
out
mov
arpl
mov
inc
pop
lds
scas
inc
mov
pushf
cld
hlt
shl
push
inc
popf
fs
adc
sbb
gs
test
stc
mov
push
ds
pop
add
sbb
outsl
or
mov
test
fldcw
movsb
mov
dec
jecxz
xchg
cmp
je
xchg
out
add
out
lods
lret
leave
mov
push
xchg
mov
iret
cltd
movsl
test
pop
cmp
movsl
aam
xor
out
loopne
movsl
orl
icebp
ficompl
mov
mov
movsl
or
ds
mov
adc
mov
adc
sub
adc
dec
outsb
movsl
dec
pop
sti
fidivs
aas
lods
leave
dec
movsl
dec
std
inc
dec
jg
cmpsl
mov
lret
movsl
cli
and
mov
and
cmp
jg
ja
jl
pop
movsl
in
iret
pop
std
add
movsl
jnp
dec
daa
mov
inc
pinsrw
dec
push
fmull
loope
push
xchg
movsl
lods
push
or
test
pop
aad
jne
outsb
mov
adc
xchg
sbb
jmp
xor
movsl
xor
jge
add
pop
ret
sbb
cmp
rorl
and
in
push
push
inc
pop
mov
push
movsb
daa
or
scas
rcrl
adc
aaa
adc
mov
cmp
sub
xchg
addr16
ret
roll
adc
fiadds
in
add
dec
mov
mov
fptan
movsl
sub
fmul
cmp
mov
sbb
stos
cmp
jae
in
jp
jg
mov
push
rclb
and
sbb
cltd
scas
sbb
loope
js
in
movsl
repnz
xlat
movsl
outsb
out
fidivs
push
stos
movsl
mov
sbb
dec
movsl
push
push
and
cmp
ljmp
xor
ds
adc
enter
pop
movsl
lock
movsb
jmp
sbb
push
jg
data16
lods
lods
push
add
movsl
or
dec
std
mov
mov
int
idiv
sub
lcall
xor
sbb
stos
adc
pop
jnp
mov
in
loopne
imul
and
pusha
sarb
imul
outsl
imul
cmc
cs
xchg
cmpsb
lods
and
inc
push
inc
inc
lds
xchg
cmp
leave
xchg
mov
pop
jecxz
mov
in
push
jmp
aaa
fwait
into
jne
mov
mov
fldenv
dec
push
movsl
mul
aam
rorl
jns
nop
mov
pop
imul
jecxz
or
int
sbb
andl
lcall
cmp
movsl
inc
shll
cs
jne
movsl
jecxz
nop
xchg
ret
js
es
in
cmc
rclb
push
jbe
push
jo
and
xchg
aaa
in
mov
mov
pop
mov
stos
add
and
inc
fs
addr16
dec
lahf
lock
jp
ja
popa
in
cmc
je
lods
daa
inc
mov
and
in
or
mov
pop
mov
jno
inc
mov
pusha
addr16
jecxz
lds
inc
scas
sbb
movsl
in
test
sbb
lret
xchg
mov
and
movsl
sub
rolb
pop
fimull
movsl
xor
pop
pop
sbbb
fistpl
push
push
mov
scas
jo
movsl
adc
fimull
mov
and
sbb
inc
mov
jge
dec
push
lea
sbb
test
stos
outsb
mov
loope
idiv
std
movsl
sti
fcmovu
fldt
jle
and
mov
cmp
add
ss
lret
movsl
into
cli
add
or
js
in
clc
movsl
in
mov
lret
shlb
sub
test
mov
jb
dec
outsl
movsb
mov
movb
cs
inc
cmp
and
inc
jg
out
add
jmp
adc
jl
fwait
icebp
aaa
data16
and
in
xchg
ficomps
shr
movsl
loop
pushw
mov
into
inc
pop
lret
sub
insl
cmp
fisttpll
push
nop
push
pop
movsl
push
xor
and
popf
mov
cli
sub
cmp
inc
jae
push
push
pop
mov
or
pusha
test
inc
add
add
xchg
dec
in
pop
call
in
ret
mov
cmp
and
cmp
lret
or
test
mul
int3
mov
add
jbe
xchg
movb
sbb
add
je
in
sub
jge
imul
cmovbe
leave
push
int3
jno
ljmp
scas
mov
xor
imul
and
mov
sub
in
lcall
rcrl
dec
mov
or
lods
dec
pop
jp
test
lret
pop
movsl
pop
sbb
fdivp
out
movsl
arpl
int3
test
int
scas
cld
sbb
xor
mov
xchg
mov
gs
stos
or
movsl
xor
add
movsl
in
mov
sbb
jne
inc
sub
push
jl
mov
stos
loope
mov
adc
movsl
dec
aam
cmp
sbb
lret
sbb
push
push
shll
loop
rcrl
shll
push
cmp
cmp
sti
mov
in
pop
rclb
enter
xchg
jge
out
pop
mov
into
arpl
or
mov
sahf
mov
pushf
cmc
adc
mov
pusha
add
cmp
cmc
xchg
aam
jp
movsl
inc
xchg
lods
dec
mov
jg
mov
mov
repz
or
dec
movsl
inc
push
jbe
mov
pop
xchg
mov
outsl
fnsave
adc
xor
cs
fsubl
mov
fldenv
stos
js
in
cmp
push
ficomps
sbb
cs
push
rorb
fnstcw
movsl
mov
fidivrl
movsl
and
pushl
mov
movsl
sub
push
push
addb
movsl
and
insb
movsl
inc
cmp
sbb
xor
cmp
data16
add
adc
pop
xchg
dec
sahf
insb
addl
in
push
or
jnp
inc
mov
pop
push
test
mov
fsts
jmp
repz
jnp
mov
rolb
sbb
sub
cld
enter
xchg
stos
fwait
addb
xlat
add
fcoms
js
in
mov
xchg
and
mov
js
inc
cmp
push
mov
jmp
leave
inc
push
stos
pop
shll
outsb
dec
xor
push
orb
jo
aas
sub
lods
pop
aas
sbb
cmp
idivl
dec
lods
or
or
out
loope
xchg
in
xchg
int3
xchg
testl
jne
in
or
repz
pop
xor
and
adc
std
mov
movsl
repz
mov
jne
leave
in
sub
popa
ljmp
push
adc
or
mov
js
mov
push
inc
hlt
and
jne
shr
and
fildl
repz
clc
add
sub
mov
les
movsl
inc
push
pop
jae
push
xor
adc
sbb
ljmp
addr16
test
or
test
jns
xor
vandpd
lock
xor
shll
cmp
bound
xor
dec
pop
mov
orb
popf
adc
push
in
pop
pop
stc
std
cmp
int3
sub
outsb
in
scas
mov
mov
inc
fistpll
pop
cmp
inc
xor
mov
jns
mov
dec
stos
scas
xchg
sti
aam
xor
dec
movsl
enter
insb
and
clc
push
movsl
or
data16
mov
fldl
xor
aad
pop
test
xchg
vpsllw
insl
mov
push
in
pop
jecxz
popa
or
jnp
nop
xchg
xor
mov
sub
sub
sbb
adc
mov
mov
pop
fcompl
stos
ret
adc
sub
or
xor
mov
jns
mov
and
dec
fldenv
push
sti
stos
es
mov
mov
cmc
scas
fisttps
or
lcall
fcoml
xlat
inc
xchg
test
les
sahf
pusha
inc
sti
sub
pop
inc
mov
xlat
sbb
inc
adc
nop
icebp
or
jp
lret
xor
andl
in
mov
sbb
xor
decb
mov
and
mull
sbb
cli
xlat
cmp
mov
pop
dec
cmpsl
push
fldenv
push
sahf
repz
pop
xor
aad
fsubr
push
mov
xchg
jecxz
push
push
shll
sti
jge
imul
and
jp
fbld
mov
je
cmp
je
mov
cli
dec
out
inc
scas
into
subl
aad
or
lcall
xchg
sbb
and
add
sub
push
lods
jmp
ds
push
je
es
mov
mov
mov
ja
jg
insb
call
movsl
fists
int
add
cmpsb
mov
add
ret
lea
jl
clc
enter
dec
mov
insb
icebp
pop
pop
imul
std
mov
movsl
xor
pop
and
cmpsl
cmp
fldenv
enter
movsl
mov
xchg
mov
gs
mov
out
fucomp
pop
rcrb
push
pop
mov
outsl
inc
insb
push
sub
and
enter
pop
lock
fcmovnu
out
mov
mov
sahf
mov
mov
outsb
movsl
push
imul
int
inc
fisttpll
pop
sub
fld
sbb
adc
scas
test
dec
add
sar
insl
adc
movsl
xchg
int
movsl
jmp
int3
sub
imul
pop
lret
movsl
loopne
in
push
cli
fndisi(8087
sahf
cmc
std
xchg
mov
inc
dec
lods
gs
daa
movsl
adc
js
mov
or
das
icebp
sbb
add
pop
aam
stos
std
loop
mov
adc
push
fldenv
addr16
movsl
xchg
mov
jbe
dec
enter
movsl
cld
loope
add
xchg
clc
movsl
sub
fistpl
mov
movsl
jmp
or
lret
jnp
movsl
add
jb
pusha
in
pop
aam
pop
sarb
movsl
sbb
popa
popf
add
movsl
jnp
jg
dec
mov
pop
dec
or
insl
lea
or
es
daa
mov
push
movsl
js
pop
pop
jae
les
mov
in
inc
jmp
dec
cmp
imul
mov
pusha
adc
test
push
leave
mov
movsl
or
dec
xor
insl
cld
in
lods
adc
mov
inc
and
movsl
sbb
jns
xor
push
insl
movsl
xchg
out
jmp
sub
pushf
movsl
xor
lods
aas
mov
add
test
popf
inc
pop
push
movsl
aam
mov
xchg
cli
fwait
icebp
mov
call
outsb
xor
jb
push
jns
sbb
and
push
cmc
inc
aaa
adc
movsl
dec
mov
cs
in
mull
adc
aad
pusha
dec
jae
pop
jp
mov
and
stos
or
jnp
cmc
jp
lcall
iret
mov
xchg
outsl
xchg
hlt
add
in
xchg
jb
mov
js
sbb
movsl
dec
jbe
sbb
shlb
test
mov
jge
movsl
lret
adc
mov
sub
push
cs
je
movsl
shll
mov
arpl
sar
fstpl
add
in
ret
sbb
dec
idivb
jbe
movsl
aam
lock
fldcw
mov
mov
xchg
frstor
and
xchg
sub
lds
push
mov
rorb
dec
enter
adc
out
and
add
std
lds
push
or
sbb
mov
pop
in
add
in
push
movsl
or
inc
or
fnstcw
adc
jg
movsl
mov
test
mov
aam
jecxz
cmpsb
xchg
outsl
notb
xchg
xchg
cwtl
scas
xchg
movsl
or
fists
adcb
movsl
sar
dec
inc
jge
scas
movsl
enter
lret
pusha
movsl
push
mov
jns
pop
out
in
les
movsl
lock
hlt
jae
loopne
cwtl
mov
stos
cmp
xor
nop
push
pushf
int
sahf
and
popf
add
sub
push
repnz
insb
movsl
imul
fs
inc
in
rol
or
test
cmp
jbe
adc
imul
mov
xchg
sbb
add
mov
add
andl
fs
pop
movsl
jnp
jae
stos
mov
icebp
adc
dec
push
ja
movsl
or
fs
and
stos
mov
mov
in
jecxz
clc
outsl
in
leave
iret
add
movsl
xchg
test
jae
ss
imul
cmc
or
adc
xchg
mov
cld
mov
lret
mov
fsts
fbld
jmp
adc
inc
pop
dec
sbbl
rorl
dec
loope
sbb
jl
and
push
leave
movsl
xchg
ljmp
jmp
and
pop
movsl
outsb
arpl
ret
movsl
cmp
aas
data16
mov
out
insl
popa
rorl
std
sub
das
cmp
xlat
adc
push
movsl
fwait
or
add
out
addr16
int3
ja
jb
jnp
pop
test
mov
and
xchg
out
fisttpll
stos
outsl
movsl
mov
gs
test
push
inc
sbbb
jns
xor
sbb
pop
jl
dec
push
mov
mov
out
mov
xor
int
divb
movsl
adc
inc
filds
aas
mov
xchg
push
pop
fcompl
mov
pop
leave
nop
test
and
in
in
mov
movsl
adc
cmpsl
and
push
movsl
xchg
push
add
dec
fists
jecxz
rorl
pop
outsb
repz
sbb
mov
cmpsl
and
scas
inc
sub
cmp
mov
xchg
sbb
mov
and
mov
stos
loop
hlt
in
jae
bound
leave
jle
xchg
std
cld
inc
jno
mov
rcr
std
movsl
fisubs
mull
movsl
lock
ss
adc
clc
or
add
sub
clc
mov
push
int
pop
stos
mov
inc
rorb
dec
push
jge
scas
in
lock
flds
add
pusha
cli
mov
movsl
into
add
fxtract
add
mov
jnp
dec
cs
outsb
mov
aad
sbb
sahf
aad
stos
imul
in
stos
fsts
daa
repz
popf
sub
jae
fldcw
inc
xor
lret
shr
xor
in
out
pop
cld
pop
xorl
xor
xchg
insl
movsl
push
dec
hlt
add
sub
addl
test
jbe
mov
adc
scas
fsub
jo
iret
shl
xchg
movsl
leave
mov
lock
in
insb
loope
out
pop
sub
inc
lcall
or
call
cmpsl
lret
ljmp
xchg
imul
mov
xchg
movsl
lahf
mov
mov
movsl
fisttps
fstpt
iret
add
fs
shrd
or
push
mov
cmpsl
sbb
into
rolb
movsl
insb
lea
test
leave
repz
mov
push
sbb
jecxz
in
cmp
mov
leave
ret
dec
insl
movsl
push
inc
add
jl
mov
js
mov
xchg
jno
pop
push
ja
orb
popf
inc
sar
sub
pop
arpl
in
das
sbb
mov
and
into
sbb
in
and
add
add
and
add
sahf
shl
add
push
and
dec
push
and
push
repnz
jecxz
adc
sti
push
das
and
fisubs
mov
fwait
stos
movsl
dec
jne
add
loop
mov
dec
ffree
jno
imul
jge
movsl
xchg
je
jge
push
loop
movsl
adcl
cmp
call
es
xchg
pop
movsl
sub
or
lds
sbb
cmpsb
or
sbb
popf
cmp
adc
loop
mov
das
cmp
js
pop
in
test
inc
vminsd
pop
das
icebp
movsl
add
movsl
and
pop
pop
shrb
jmp
sbb
fnstsw
fsubs
mov
cld
add
mov
loop
add
aam
call
int3
xchg
movsl
mov
shl
jb
dec
cmpsl
xchg
movsl
mov
add
mov
in
sub
push
mov
sbb
mov
pop
movsl
repnz
or
jno
in
movsl
mov
and
cmp
stc
push
mov
cwtl
or
cltd
mov
or
mov
out
jmp
fcomps
dec
add
mov
roll
dec
pop
mov
lods
push
ret
push
inc
sub
xchg
push
pop
xchg
in
pop
negl
jmp
cld
outsb
movsl
push
fcmovbe
jge
movsl
fistps
pop
sbb
mov
stc
inc
js
sub
loop
pop
pop
push
jecxz
fmul
movsl
repnz
jb
xlat
call
testl
aas
jg
xor
mov
hlt
popf
xchg
mov
fwait
movsl
mov
jb
jns
sub
rcll
int
jne
inc
xchg
stc
mov
and
mov
add
loopne
shl
pop
stos
pop
xchg
and
inc
test
mov
mov
bnd
aad
sub
pop
sbb
mov
sahf
lahf
xor
xchg
mov
in
inc
data16
and
mov
xchg
push
rcrl
jbe
cmp
jne
push
mov
cmc
icebp
sbb
lds
push
pop
fldcw
andb
push
stos
stos
adc
jnp
sahf
test
push
int3
adc
and
loopne
mov
jnp
fmuls
mov
pusha
push
xor
mov
sub
lret
movsl
loope
sahf
popa
jo
rcr
push
cmp
fsubrs
jb
mov
stc
dec
arpl
mov
xor
les
mov
out
push
adcb
insl
movsl
sub
jns
cmp
jp
jo
add
movsl
jecxz
mov
add
fucomi
lret
xchg
movsl
xchg
jmp
cmp
notb
movsl
stos
cld
cmpsl
sbb
jo
jecxz
lret
test
dec
sahf
data16
pop
in
faddl
leave
pusha
or
movsl
fwait
lahf
cs
cmpsl
mov
lods
movsl
xchg
fildl
pushf
adc
mov
shlb
add
in
pop
xchg
mov
add
adc
sub
push
ss
sub
loop
das
mov
jb
orl
or
adc
movsl
jge
or
add
movsl
push
fsubp
add
divb
pop
mov
movsl
xor
popa
jbe
aad
jnp
repnz
dec
mov
sbb
bound
ds
mov
movsl
mov
movsl
dec
dec
push
loopne
in
sbb
rorb
loop
lods
mov
push
sbb
jne
sub
into
fimuls
movsl
adc
lret
mov
movsb
and
lcall
jle
in
cmpsb
movsl
and
repnz
pusha
mov
out
add
dec
cmc
lret
outsb
pop
movsl
push
push
jae
inc
mov
jp
in
cmpsl
xchg
repnz
mov
mov
xlat
xor
mov
movsl
jbe
popa
das
and
mov
sub
mov
cwtl
pop
jl
lds
ja
jb
push
or
aam
shll
shll
sub
sti
pop
jge
pop
test
movsl
in
push
inc
push
push
idivb
dec
dec
lds
xor
xchg
test
pop
repnz
adc
sbbl
fidivrl
sub
popf
clc
movsl
scas
test
or
xchg
insl
or
dec
adc
ja
dec
daa
leave
test
cmc
shlb
xchg
pop
movsl
dec
add
dec
rep
jge
push
repnz
test
sbb
imul
movsl
test
add
movsl
loop
in
fcomp
xchg
int
push
add
mov
fcomps
pop
jne
std
in
leave
iret
jmp
addr16
pop
sbb
clc
sahf
mov
out
lds
jae
mov
insb
movsl
xorb
js
movsl
iret
enter
dec
in
rcll
lock
movsl
add
mov
mov
xchg
movsb
movsl
sbbb
subb
jbe
xor
mov
jne
ret
mov
mov
dec
inc
add
push
sbb
inc
add
cmp
leave
jmp
and
cmp
pop
adc
dec
adc
mov
aas
cli
mov
and
movsl
add
gs
movsl
sub
ja
xlat
inc
pusha
movsl
arpl
mov
push
mov
adcl
movups
and
push
imul
movsl
push
jo
out
ficoms
movsl
cmp
aaa
ds
mov
jle
xor
movsl
faddl
imul
adc
int3
pop
xor
xor
inc
jmp
push
cmp
hlt
movsl
or
mov
add
cmp
pop
imul
into
jg
fiadds
cmpl
movsl
add
or
adc
ljmp
das
mov
mov
sbb
lret
cs
jle
xchg
rol
jns
movsl
bound
xchg
aad
xchg
movsl
mov
sub
and
incl
cmp
cltd
sub
jns
mov
and
icebp
enter
sti
dec
push
pop
fwait
mov
mov
in
and
jb
mov
adc
mov
daa
adc
xlat
fs
mov
orl
movsl
push
push
push
imul
inc
jecxz
int
movsl
jmp
aam
movsl
leave
cmpb
movsl
nopl
add
cmp
movsl
fsubs
imul
sahf
dec
lods
add
mov
mov
dec
xchg
inc
fsubrs
inc
sbb
adc
xlat
jecxz
testb
in
nop
xor
movsl
scas
movsb
pop
mov
ja
add
sbb
movsl
je
int
push
pusha
jne
adc
test
ret
popf
daa
lret
lret
mov
movsl
adc
and
lcall
sub
mov
out
xor
cmpsb
pusha
movsl
push
mov
das
frstor
jg
xchg
pop
mov
push
in
and
movsl
pop
mov
fwait
movsl
cmp
popf
lahf
ds
push
popf
fistl
dec
in
jl
lret
int3
movsl
enter
mov
add
adc
inc
fs
push
push
cmpsw
stc
fldt
jl
test
insb
xchg
nop
lods
push
and
and
inc
sbb
movsl
icebp
add
push
sub
out
and
mov
cmp
mov
stos
or
dec
xchg
jnp
mov
and
mov
push
repnz
in
scas
or
out
mov
push
pop
push
out
and
ret
jmp
shrl
daa
mulb
push
aas
icebp
repnz
inc
sbb
dec
sbb
movsl
addr16
add
push
adc
mov
bts
in
sahf
mov
cmp
mov
hlt
cmp
xor
dec
dec
in
loope
loop
movsl
bound
cmp
xchg
pop
fsubrs
sbb
stos
mov
mov
je
push
and
roll
and
ficoms
loop
add
mov
xchg
nop
fildl
scas
inc
mov
sub
cmpsb
sbb
sbb
insb
mov
test
movsl
out
enter
and
aas
mov
sti
aad
push
and
xchg
adc
lds
mov
cmc
mov
ficomps
bound
aam
jbe
movsl
addb
jg
push
repz
testl
sti
ds
add
out
adc
mov
cld
pop
push
std
mov
scas
push
fsubrl
mov
jge
dec
mov
das
aad
movsl
sub
xor
pop
insl
mov
scas
adc
sbb
xchg
fisubl
jns
lret
aas
xchg
mull
jae
addr16
std
xchg
sub
sbb
xchg
cmpsb
movsl
pushf
enter
xor
add
or
jb
movsl
jns
je
insl
notl
aam
mov
xorb
mov
mov
push
stos
imul
int
ja
iret
lret
icebp
arpl
mov
pushf
jo
jp
popa
push
movsb
mov
int
mov
loope
test
xchg
ds
stos
pop
sahf
mov
push
clc
push
ja
loope
in
mov
sbb
mov
or
fistpll
jno
sub
mov
movsl
popf
push
scas
iret
movsl
jmp
jle
cmp
inc
in
mov
in
adc
cld
je
sbb
ret
lods
aaa
sbb
pop
push
and
aam
stos
jnp
pop
test
enter
mov
xchg
xchg
out
mov
loopne
fidivs
inc
mov
sbb
movsl
sbb
icebp
pusha
imul
xchg
test
push
out
filds
mov
sbb
repnz
mov
and
ljmp
movsl
scas
cld
out
xor
popf
push
inc
in
inc
mov
cwtl
daa
pop
lds
and
mov
xor
sub
cmp
adc
jo
std
into
int
movsl
sub
add
cwtl
add
mov
pop
pop
in
repnz
add
inc
mov
mov
je
mov
in
movsl
mull
cmp
and
lods
daa
or
inc
out
seta
cli
jecxz
and
adc
mov
movsl
sbb
fsubs
and
cmpsb
stos
jmp
movsl
cmpsl
das
mov
add
jmp
in
mov
inc
test
inc
xor
xor
jp
dec
lods
in
incb
shlb
psrlq
xchg
sbb
cmc
icebp
fcompl
in
sti
add
les
cwtl
stc
es
dec
xchg
ljmp
pop
je
enter
lods
gs
adc
lret
adc
or
mov
pushf
jne
sub
cs
push
xor
lods
in
sub
fadds
cmp
leave
sbb
sbb
jecxz
push
lods
cmpb
mov
bound
and
orb
xor
mov
daa
mov
adc
scas
rol
dec
jnp
popf
fs
leave
mov
in
cmp
jbe
xchg
xchg
mov
lds
mov
and
loope
enter
pop
stc
icebp
scas
ds
movsl
jg
sub
inc
movsl
pushf
xor
adc
cmp
mov
push
in
jbe
sar
sbb
shl
outsb
mov
imul
push
mov
ja
inc
movsl
cs
cmp
out
mov
xchg
pop
or
movsl
jmp
in
push
mov
cmp
or
insl
inc
xlat
neg
mov
cltd
int3
cmp
imul
push
and
dec
pop
jnp
movsl
xchg
jmp
cwtl
and
inc
lcall
xchg
das
sub
in
ret
movsl
push
pop
pop
cmp
outsb
int3
inc
and
pop
stos
push
lds
mull
movsb
repz
xchg
dec
fsubrs
fwait
and
fstps
sub
adc
in
movsl
inc
inc
scas
pop
mov
cmp
adc
rol
daa
movsl
xchg
stos
cmp
jge
daa
xchg
lock
pushf
rclb
stos
push
out
andb
mov
dec
push
cld
cli
cmp
movsl
xchg
imul
popa
mov
xorb
movsl
lret
add
movsl
mov
lahf
stc
paddusw
cld
pop
into
andl
decb
movsl
inc
jb
mov
cld
lods
add
sbb
imul
movsl
aaa
movsb
gs
call
popf
fcoml
sub
lods
xchg
stos
adc
pop
xchg
in
roll
push
outsl
mov
push
jmp
sbb
dec
mov
ffree
adc
push
push
push
sub
mov
cmp
cwtl
ret
cmc
inc
mov
mov
sbb
bound
mov
mov
das
jp
test
mov
sbb
in
lods
mov
shll
movsl
push
orl
sbb
fiadds
call
xchg
movsl
xchg
sahf
mov
shlb
subl
push
pop
idivb
movsl
dec
insb
outsb
outsl
gs
stc
test
inc
movsl
mov
xchg
lahf
mov
ret
add
mov
popa
push
push
mov
movsl
pop
callw
dec
jge
movsl
push
addr16
push
fsubr
inc
xchg
gs
in
jne
mov
std
mov
cld
lods
mov
pop
xchg
mov
push
in
mov
dec
and
movsl
cmp
push
pop
dec
mov
mov
dec
lahf
mov
sub
and
and
push
sub
mov
fnstenv
movsl
notl
leave
movsl
inc
xor
mov
and
lret
das
std
out
out
adc
lea
push
mov
dec
sub
dec
notl
jmp
or
push
and
inc
pop
push
xchg
ds
fistpl
test
pop
iret
outsb
movsl
jecxz
dec
mov
mov
lret
int
testb
xchg
cli
movsl
and
mov
and
loopne
adc
add
popa
xchg
fildl
aad
dec
dec
clc
lods
andl
cmpsl
test
popa
inc
jg
ljmp
movsl
outsb
mov
mov
inc
data16
sub
sete
lds
mov
int
pop
hlt
xchg
mov
lock
cmc
mov
in
mov
stos
cmp
and
nop
xchg
inc
xor
ret
mov
rorl
movsl
int3
add
mov
repz
sub
and
sub
dec
pushf
mov
cmp
fsub
out
dec
outsb
jge
jb
movsl
js
mov
movsl
and
mov
jo
inc
pop
pop
mov
inc
inc
jb
shlb
cmpsb
in
cmp
mov
or
mov
movsl
cwtl
cmp
jno
mov
je
leave
xchg
icebp
pop
push
dec
push
jmp
lfs
mov
aad
push
out
xor
mov
shll
lds
sub
mov
pop
or
dec
in
adc
add
cmpsb
mov
mov
cli
xor
movsl
in
adc
xlat
dec
xorl
or
pushf
and
inc
test
movsl
in
inc
testl
movsl
mov
bswap
inc
test
sbb
pop
lret
mov
cmp
lcall
cltd
mov
lcall
xchg
mov
addl
addb
cwtl
cmp
push
and
mov
jl
cmc
cmpsb
es
sub
cmp
sub
mov
cmp
leave
int
scas
add
pop
pop
dec
inc
cmc
test
sub
xor
in
in
stos
mov
shl
xchg
movsl
fsubs
hlt
repnz
and
ja
movsb
mov
lahf
in
aas
mov
jnp
outsl
fs
rcl
fwait
sbb
xor
adc
add
or
jo
in
pop
jp
mov
jne
inc
lods
push
arpl
xor
jecxz
jnp
mov
movsl
popf
adc
mov
mov
insl
test
movsl
push
pop
cmp
test
movsl
or
add
movsl
sbb
mov
sbb
mov
in
add
dec
std
aas
movsl
stc
sub
fldenv
xorl
pop
push
mov
sti
inc
movsl
nop
jo
decl
std
test
movsl
push
ljmp
je
movsl
pop
pop
cld
mov
mov
or
sti
inc
cwtl
cmpsb
in
movsl
or
or
sbb
dec
pop
mov
std
cmpsb
cmpsl
daa
mov
and
popa
sbb
mov
mov
or
add
pop
sahf
pop
jo
pop
repz
jmp
imul
sbb
movsl
in
xchg
mov
xor
mull
movsb
sbb
mov
sbb
pop
les
mov
loope
int
ljmp
mov
xchg
test
fldenv
mov
es
mov
fildll
stc
inc
in
pop
negl
and
jno
cmp
push
movsl
mov
addr16
mov
out
test
cmp
xchg
cmpsl
mov
xlat
push
outsl
pop
jb
stos
fsubs
adc
jmp
in
fldl
pop
in
movsl
loop
jecxz
cwtl
mov
jno
cmp
lret
dec
movsl
or
cli
fildll
movsl
lea
fwait
pushf
xchg
sbb
xchg
sub
popa
stc
daa
pushf
or
in
sub
adc
fimuls
movsl
fbld
inc
stos
lods
mov
pop
adc
das
adc
mov
enter
movsl
dec
cmpsb
or
cwtl
and
mov
mov
sub
addr16
push
test
dec
xchg
push
in
shlb
dec
add
mov
fdiv
cmp
cmovbe
mov
movsl
inc
dec
dec
das
xchg
cli
testl
xchg
xor
stos
adc
mov
movsl
xchg
inc
mov
mov
push
xor
sub
add
je
push
cmp
pop
pop
rclb
xchg
sbb
xor
dec
add
sub
and
faddl
jno
pop
xchg
loopne
push
jmp
xorb
lcall
lock
mov
sbb
jge
or
fsubr
fsubr
push
ds
mov
and
aam
mov
ss
cmp
pop
movsl
add
cltd
jno
cmpsl
sahf
lret
pop
cs
insb
and
outsl
mov
xchg
dec
mov
mov
out
mov
sbb
jbe
mov
insb
pop
outsl
or
lcall
fbld
mov
jno
out
stc
sbb
cmp
push
cmc
jl
stos
rclb
test
cmp
cmp
mov
pop
ja
dec
and
icebp
mov
dec
push
dec
aas
ljmp
and
or
cmp
sub
popa
test
cmpsl
or
test
shl
mov
imul
pandn
sbbb
mov
jbe
push
adc
lods
cmp
mov
lret
push
push
sbb
xlat
repnz
jne
sbb
dec
cs
data16
inc
cmp
scas
lcall
loop
stos
mov
in
mov
mov
sub
cmpsb
es
xchg
dec
sbb
mov
mov
sub
dec
mov
lcall
xlat
sub
icebp
xchg
add
inc
pop
cmp
xor
out
icebp
inc
std
cmp
mov
lahf
xchg
sbb
sbb
xor
in
stc
xchg
jnp
mov
mov
xor
mov
sub
ficompl
xchg
stos
jmp
cwtl
iret
dec
mov
notb
cmp
hlt
sub
pusha
dec
push
add
out
xchg
sti
test
push
sbb
iret
ret
xor
cld
inc
or
sbb
cwtl
call
addr16
ss
fxch
sbb
cmp
mov
sbb
icebp
cmpb
clc
push
mov
or
clc
out
enter
mov
fisttpll
push
mov
adc
push
das
je
push
cmp
pop
sbb
lds
pop
push
sbb
leave
push
scas
icebp
movsl
into
jnp
outsb
pop
in
fldl
sbb
mov
roll
mov
adc
lock
or
mov
or
test
out
cmpsl
into
out
cltd
sahf
jbe,pt
fchs
inc
loope
dec
popf
mov
lods
movsb
sbb
push
cmp
push
pop
mov
pop
and
pop
jp
pushf
push
clc
mov
ret
das
cmc
subb
xor
push
pusha
dec
push
lods
loop
sub
mov
jnp
cmp
sti
cmpsl
mov
and
xchg
int
loope
fisubl
mov
ret
adc
imul
popa
or
sarb
xor
scas
jnp
xchg
cwtl
push
aad
or
ret
cmpsl
mov
ffree
inc
jmp
mov
sub
movb
cmc
sub
jae
hlt
mov
int
cmp
mov
pushf
jecxz
movsb
nop
add
and
mov
push
inc
movnti
adc
or
xchg
push
jno
sbb
adc
xor
insl
xchg
push
mov
popf
jns
mov
mov
ss
jns
scas
pop
jg
pop
and
sub
ret
daa
pusha
cmp
es
ret
mov
pop
inc
ret
xor
or
jge
shlb
pop
icebp
mov
add
into
arpl
mov
das
aam
jmp
stc
mov
adc
inc
insl
xor
jae
xchg
add
inc
movsl
push
jp
icebp
dec
lcall
pop
fldcw
not
ret
sub
push
jnp
mov
cmc
mov
movsb
icebp
xor
adc
mov
ficoms
int3
sub
lahf
sub
pop
xchg
sti
and
int3
pushw
or
jmp
mov
fnsave
mov
mov
jnp
and
je
addb
sbb
mov
xchg
loope
push
sbbl
adc
jns
lds
daa
cmp
hlt
jl
movsb
mov
xor
rorl
push
stos
fs
cmp
lahf
sti
jge
push
push
mov
cmp
adc
and
push
pop
and
stc
lock
jbe
inc
outsb
xor
mov
and
insl
in
sbb
fldl
or
dec
js
nop
mov
lods
pop
adc
mov
test
pop
xchg
cmpsb
xor
sbb
aaa
hlt
rcrl
sbb
inc
push
lret
cmp
out
lcall
cmpsb
rcll
adc
mov
dec
pop
aaa
push
or
in
les
sub
ja
mov
dec
sti
dec
xchg
pop
adc
xchg
lret
nop
pop
push
into
push
dec
add
shlb
mov
sub
mulb
in
mov
sbb
cs
std
js
pop
xchg
cmpl
lcall
aas
push
mov
xor
add
adc
dec
js
xchg
inc
in
cwtl
out
jl
inc
fnstenv
mov
and
jp
jmp
inc
add
mov
xchg
mov
cmp
xor
inc
pop
inc
push
cs
add
outsl
and
bound
test
cltd
test
cmp
inc
fnstsw
sub
mov
pop
inc
mov
adc
xchg
ss
or
movsl
sti
mov
imul
pushf
jns
stos
push
cmp
movsl
dec
cwtl
mov
push
mov
xchg
push
movsl
subl
lock
dec
jb
mov
push
xorb
sbb
lods
ljmp
mov
dec
pop
hlt
mov
test
subl
call
jne
stos
iret
das
outsl
out
movsl
lea
or
adc
dec
cmpsb
jns
sbb
mov
inc
fmuls
fs
push
jg
inc
adc
jle
movsl
pop
filds
mov
inc
mov
mov
and
xor
xor
inc
fistpl
push
out
inc
push
mov
add
lds
cmpsl
sbb
insb
call
cli
sub
loopne
inc
xor
cmp
mov
movsl
test
bound
mov
xchg
push
gs
jno
add
lock
mov
cmp
test
adc
int
add
loop
push
push
jge
xor
movsl
sbb
popa
xlat
jo
sahf
mov
jno
pop
out
fdivp
cli
mov
movsl
push
dec
fcomi
cld
cltd
ljmp
push
jecxz
or
or
fsts
inc
test
mov
or
pusha
xchg
bound
xchg
jl
lods
bound
mov
lahf
les
in
insb
adcl
loopne
lcall
call
add
xchg
lods
push
mov
mov
cmpsb
inc
call
or
sbb
outsb
pop
pop
jg
dec
push
inc
iret
inc
xchg
mov
adc
movsl
int3
mov
push
gs
in
push
aad
call
popf
sub
sbb
call
out
movb
movsl
jno
shl
cmp
lds
cmpb
lret
fsubs
roll
icebp
movsl
pusha
push
add
imul
push
sub
leave
shl
push
mov
mov
xor
stc
pop
in
inc
or
scas
test
sub
xchg
sub
mov
movsl
aad
mov
cmpsb
xchg
jb
aas
cmp
inc
enter
into
test
sbb
loop
scas
lret
movsl
shrl
hlt
cld
aaa
mov
cmp
out
mov
mov
test
scas
jb
out
idivl
popa
mov
int
mov
dec
outsb
lds
mov
repz
mov
fsubrl
jo
cmp
pop
movsl
add
mov
xchg
inc
cli
add
test
dec
je
aad
xlat
movsl
adc
arpl
lret
jnp
mov
xor
push
fdivrs
je
imul
fnstsw
cli
fsubp
icebp
test
loop
mov
cltd
lods
jp
rorl
enter
pop
mov
frstor
cmc
data16
movsl
in
loopne
sbb
lds
xchg
mov
loopne
add
push
out
ljmp
sbb
movsl
cmpsb
and
cmp
sbb
fisttpl
movsl
jecxz
out
lea
mov
xchg
and
add
mov
mov
lods
movsl
scas
add
jne
roll
dec
jl
pop
pop
jmp
cmp
or
testl
jle
arpl
cli
sbb
incb
push
movsl
jg
sbb
add
mov
leave
iret
cli
movsl
cld
sub
rcrl
xlat
or
movsl
or
pop
jmp
mov
movsl
sbb
lods
lcall
cmp
xchg
mov
sbb
imul
push
dec
in
pop
movsl
adc
mov
push
sbb
arpl
aad
pusha
pop
mov
cld
mov
add
inc
jmp
cmpsl
xchg
loope
notl
ja
push
jge
sbb
movsl
enter
dec
fsub
add
mov
mov
aad
inc
add
xor
add
push
cmpsl
les
adc
add
jnp
je
lds
movsl
movsl
pop
sub
add
test
shrb
movsl
mov
es
jno
xor
and
mov
xor
rcrb
out
movsl
pop
mov
jae
icebp
jp
aad
jl
movsl
fwait
push
mov
repnz
testb
movsl
jl
pop
push
test
xchg
into
mov
sub
sub
fcoml
sub
test
inc
or
push
lcall
movsl
outsb
jmp
inc
or
dec
pop
in
aam
test
clc
movsl
dec
cli
pop
icebp
and
sahf
call
stos
movnti
add
ja
and
je
dec
clc
inc
push
push
insb
push
inc
inc
nop
nop
xchg
adc
mov
sbb
mov
mov
sbbl
lds
psubsw
dec
cwtl
xchg
daa
nop
cmpb
loop
movsl
xchg
jmp
pop
fcoml
movsl
push
fnstenv
ret
movsl
fs
mov
sbb
or
sarb
movsl
ror
icebp
fiadds
lret
movsl
stos
and
es
or
sbb
movsl
push
sub
aaa
into
stc
test
push
movsl
aad
cmpb
add
and
sub
cmpsl
jnp
mov
jns
sbb
cwtl
xor
stos
movsl
adc
xchg
pop
test
jp
xchg
cmp
pop
int3
fld
std
lret
and
inc
out
sar
in
mov
xlat
insb
ljmp
insl
ja
mov
or
movsb
cmp
mov
in
xchg
movsl
sarb
mov
movsl
adc
test
fidivrs
movsl
inc
dec
call
gs
fistps
xchg
cmp
movsl
and
xor
dec
jns
inc
movsl
push
loope
sub
je
push
movsl
lods
cli
lods
pop
push
scas
sub
ds
cs
or
mov
iret
jmp
fs
movsl
push
push
cmpl
mov
movsl
loope
sub
and
dec
push
jmp
mov
xchg
iret
movsl
jl
inc
mov
sbbb
push
cwtl
lret
add
daa
movsl
xor
sbb
aam
pop
roll
xchg
sbb
jno
int
push
popa
movsl
lret
mov
dec
inc
push
cmp
lods
mov
repz
jno
int
pop
imul
insl
mulb
out
movsl
or
movsl
mov
pop
lods
or
in
pop
pop
or
imul
movsl
lret
sahf
leave
mov
aam
pop
pop
xchg
cmp
lcall
nop
popa
sbb
into
roll
ss
xor
mov
push
enter
in
inc
cs
sbb
jne
call
out
lret
jp
xchg
jecxz
sahf
hlt
push
xchg
add
movsl
cwtl
cmc
push
push
bound
ret
lea
jno
mov
movsl
in
std
cmp
push
sub
jno
push
fnstcw
xchg
fisttpll
mov
jne
js
clc
movsl
jl
xchg
and
out
mov
jg
cmp
push
push
call
lods
lret
movsl
xchg
dec
repz
movsb
mov
sbb
ret
jp
jle
jbe
lock
mov
pusha
lret
in
pop
test
jnp
sub
movsl
loope
outsb
orb
mov
pop
sbb
movsl
xchg
mov
shll
push
xchg
movsl
in
adc
jb
jecxz
movsl
fwait
popf
sbb
scas
pop
jne
mov
cmp
rcll
adc
sti
test
mov
push
shr
movsl
jnp
rorb
dec
movsl
sarb
dec
pop
in
mov
fnsave
mov
pop
imul
stc
dec
pop
or
xchg
stos
inc
loopne
out
or
mov
cwtl
lock
dec
dec
mov
mulb
int
hlt
in
jle
fadd
stc
in
out
sub
imul
lea
adc
pop
lods
inc
les
jl
in
jns
jne
movsl
clc
dec
sub
ret
movsl
jg
xchg
leave
pusha
lock
xchg
lds
ja
xchg
fbld
adc
lock
aad
arpl
or
pop
ja
enter
cld
mov
ret
add
jle
movsl
dec
insl
lods
add
xchg
and
pop
or
push
jb
daa
andb
fs
insb
std
push
int
movsl
in
dec
je
push
outsl
aam
mov
mov
mov
dec
pop
addb
pushf
ret
xor
fbld
ficoml
in
fprem
stc
push
jne
into
cltd
fsubrp
int
mov
xor
xor
mov
arpl
int
js
dec
jne
in
dec
in
mov
cmp
mov
imul
mov
pop
test
xchg
outsb
shll
push
bound
and
cmc
loop
popa
or
arpl
jne
movsl
push
sbb
add
test
lds
stos
and
cmpsb
icebp
mov
movsl
shl
cmc
int3
imull
repz
pop
sahf
mov
cld
loope
mov
pushf
cmp
shr
pushl
popf
outsb
ja
stos
cmp
loope
inc
xor
sbb
sbb
jne
inc
fldl
stos
mov
stc
leave
lret
icebp
and
sti
or
je
push
add
cmc
sub
xchg
ss
xor
daa
inc
push
mov
aad
and
bound
imulb
jg
rcl
mov
dec
std
loop
mov
mov
lcall
jnp
jne
jb
orb
xor
lds
es
movsl
negb
and
add
adc
adc
lods
and
or
mov
outsb
add
pop
lods
pop
dec
clc
mov
pushf
push
mov
xchg
mov
int
outsb
sbb
inc
not
pop
movsl
xlat
fstpl
ja
loope
pop
mov
mov
fstl
sub
push
mov
call
lret
daa
cmpsb
jge
and
add
and
mov
or
cmpsl
pop
ljmp
dec
cli
scas
ret
jp
mov
ljmp
fdivp
in
and
out
imul
movsl
push
orb
cmp
insl
adc
out
and
addr16
es
stos
push
movsl
push
jns
fcmove
jb
out
xor
stos
add
jnp
adc
adc
out
movsl
push
mov
lock
in
pushf
int
sub
and
adc
push
xchg
imul
loop
iret
rcl
je
das
add
addr16
sbb
repz
push
mov
jecxz
mov
jns
insb
dec
push
daa
cmc
test
sbb
movsl
cmp
int
sbb
xchg
sub
test
out
shll
xor
pop
adc
sbb
inc
inc
and
mov
dec
adc
pop
in
add
int
adc
jmp
aas
mov
popa
xchg
orl
movsl
js
mov
mov
sbb
pop
push
andb
dec
addr16
imul
push
xor
ja
dec
movsl
daa
ljmp
movsl
push
or
hlt
cli
sahf
mov
stos
push
pop
rolb
or
cmpsb
lods
or
ret
sub
mov
or
flds
sbb
arpl
pop
and
ss
jae
xchg
movsl
outsb
in
adc
fcompl
movsl
inc
out
mov
shlb
fbld
and
cwtl
mov
mov
pop
movsl
out
xchg
cmpsl
adc
sbb
movsl
mov
pop
popf
lcall
push
xor
or
data16
fstpt
lock
inc
ljmp
movsl
fbstp
adc
repz
lahf
xor
lcall
insb
or
jmp
lahf
in
mov
rep
mov
bswap
imul
movsl
je
neg
push
scas
in
adc
adc
lds
aas
bound
pop
add
sbb
ja
mov
movsl
repz
sub
mov
movsl
sahf
xor
ret
jecxz
into
arpl
pusha
mov
lea
bound
inc
or
and
jmp
cmc
popf
mov
int3
sbb
xor
ficompl
or
mov
movsl
or
leave
dec
int
outsb
shll
stos
cmc
ret
jecxz
addr16
movsl
xor
cmp
popf
xor
pusha
mov
add
jg
adc
push
jae
xchg
fldenv
push
pop
mov
fldl
repnz
lret
pop
in
int
lods
stos
movsl
xor
stos
testl
push
dec
push
add
je
lret
push
lahf
pop
add
mov
fdivrs
fwait
xchg
xor
mov
dec
sub
aad
rol
movups
push
xor
cmp
xchg
insl
addr16
xchg
xor
mov
mov
xor
dec
int
cmpsl
xchg
test
sbb
lods
movsl
rolb
orb
jb
push
mov
ret
add
or
pop
scas
pusha
lods
xchg
mov
or
lea
movsl
test
inc
or
add
inc
mov
pop
decb
mov
or
pusha
adc
jmp
in
divl
les
aad
scas
add
daa
movsl
xor
mov
fdivs
xor
leave
add
push
divw
bound
xor
popf
pop
xchg
ja
pushf
xchg
pop
ja
lods
movsl
sbb
adc
movsl
cs
cmpl
lods
mov
xchg
sub
mov
js
int
enter
or
aaa
movsl
lods
inc
mov
add
pop
cli
jb
movsl
jl
inc
insb
std
bound
mov
pop
jmp
push
test
es
dec
shld
add
das
pop
movsl
xor
jo
movsl
adc
add
pusha
xchg
fidivl
fsubrl
les
push
add
ds
movsl
pop
xlat
sbb
mov
mov
cld
ja
mov
mov
scas
imul
mov
enter
xchg
pop
adc
movsl
repz
popa
call
call
ljmp
dec
or
inc
popf
mov
loope
leave
adc
push
add
pop
push
push
jle
or
leave
xchg
inc
addr16
adc
mov
mov
sub
dec
mov
in
mov
aam
pcmpeqd
cmp
push
or
loop
dec
movsl
add
stos
je
add
in
sbb
mov
jle
iret
das
pop
sub
push
mov
mov
movsl
push
popa
xor
adc
int
movsl
sahf
or
lea
test
push
movsl
adc
test
mov
outsb
cmp
addl
and
mov
mov
jnp
in
push
loopne
aam
add
dec
stc
jmp
mov
push
call
imul
push
movsl
lret
repnz
aad
inc
leave
jg
cmc
fcompp
or
jle
into
ret
popf
repnz
or
clc
or
mov
push
or
mov
sub
pop
push
movsl
pop
loopne
loop
fcomps
mov
stc
mov
stos
sub
into
xchg
test
outsl
imul
xor
sbb
jae
adc
movsl
sub
data16
push
pop
movsl
imul
push
xchg
or
adc
in
movsl
cmp
jmp
movsl
rcll
mov
sub
sahf
insl
push
iret
inc
push
sbbb
mov
ss
cmp
cmp
addr16
nop
sub
sbb
fmull
and
mov
jb
hlt
and
sub
repnz
jge
movsl
pop
cmp
xlat
mov
mov
sbb
push
mov
add
xor
mov
je
mov
test
mov
lcall
es
cmp
xchg
shl
pushf
mov
sahf
movsl
cmp
aam
movsl
repnz
push
inc
push
scas
cltd
mov
dec
cld
mov
xchg
lods
jne
pop
inc
xchg
cmp
das
jp
shlb
leave
xchg
xchg
and
clc
loope
push
movsl
jge
jae
and
add
jmp
inc
into
push
fnstenv
mov
int
and
popa
dec
adc
fmuls
or
cmpsb
jg
xchg
jp
jmp
gs
int
test
and
jecxz
test
in
adc
rcrl
rorl
or
ljmp
rorl
fidivs
push
ljmp
subl
or
popa
push
adc
jge
movsl
xchg
test
mov
or
rcrb
ret
xor
xchg
sub
mov
ja
dec
out
imull
mov
xchg
pop
sar
test
dec
ud2
pop
sahf
mov
clc
movsl
fisttpl
loope
movsl
inc
bound
push
nop
scas
cmp
mov
loop
movsl
push
int
lcall
push
push
dec
movsl
pop
mov
movsl
inc
mov
and
jmp
stc
add
lea
rorl
inc
movsb
rol
dec
mov
mov
sahf
xchg
mov
std
mov
mov
int
stos
add
jge
mov
mov
pop
movsl
inc
test
add
out
movsl
stos
push
sub
and
fsubr
jae
cmc
popa
int
mov
dec
aad
or
rcl
int3
cmc
adc
inc
add
fdivl
data16
outsl
andb
movsl
mov
xchg
bound
movsl
in
add
cmp
or
stos
xchg
mov
push
jae
movsb
movsl
addr16
rol
cmpsb
or
sub
push
mov
cwtl
or
movsl
mov
mov
lcall
cwtl
add
fs
cs
js
cmove
movsl
cwtl
cmp
je
sbb
push
movsl
adc
loopne
push
mov
pop
je
jne
jno
insl
sub
push
outsl
inc
test
cmp
sub
jae
push
cli
imul
cmpsl
movsl
pop
mov
jp
into
outsb
or
and
mov
in
movsl
dec
iret
ficompl
test
std
adc
pop
xchg
mov
hlt
or
pop
lock
sbb
test
daa
call
ljmp
aaa
shrb
lahf
xchg
call
or
cmp
mov
inc
push
mov
loopne
dec
xchg
in
dec
ljmp
mov
pop
dec
jmp
mov
out
pop
xor
cmc
jp
shlb
add
mov
xchg
popa
push
lahf
mov
stc
cmp
lcall
lock
sbbl
fimuls
outsl
mov
popf
adc
jle
ds
daa
aas
movsl
xchg
pop
in
in
dec
lods
or
clc
rolb
mov
leave
xchg
push
jmp
cs
xchg
mul
aam
movsl
adc
in
add
inc
call
int
in
ljmp
lods
inc
mov
lock
aad
mov
and
in
pop
fdivrp
mov
movsl
in
xadd
lcall
add
popa
adcb
inc
movsl
jp
gs
les
or
lret
enter
push
rorb
andb
xchg
stos
ds
inc
cmp
cmp
or
fbld
call
jl
mov
push
sub
and
pop
jmp
and
xor
test
xchg
xchg
loopne
mov
dec
imul
jmp
mov
andb
inc
xchg
aas
mov
jmp
dec
movsl
push
sub
fldenv
adc
sbb
sbb
cmp
pop
lcall
out
mov
movsl
and
outsl
sub
mov
xor
in
mov
nop
cmp
arpl
inc
xchg
leave
and
add
jg
mov
push
movsl
mov
sbb
add
imul
inc
in
mov
push
jp
ret
sbb
xor
jle
jmp
sub
mov
mulb
adc
popl
loopne
in
insl
movsb
imul
inc
mov
cmp
std
adc
shl
pusha
and
mov
movsl
xlat
out
lock
jg
pop
movsl
xchg
call
je
xor
dec
sub
scas
hlt
movsl
or
xor
adc
movsl
xchg
xchg
cli
nop
out
fistl
xchg
mov
adc
mov
je
lock
pop
adc
movsl
ds
clc
sti
jbe
test
sbb
xor
xchg
sahf
test
lcall
mov
xchg
movsl
sub
pop
sbb
dec
movsl
inc
cmp
movsl
jl
pushf
lcall
lret
add
clc
out
ss
mov
push
adc
xchg
mov
aaa
movsl
fwait
int3
pop
push
adc
mov
sbb
cmpsb
shll
pusha
cmp
sbb
filds
adc
cmp
or
stos
xchg
sub
rclb
int
xorb
sbb
adc
push
test
inc
icebp
xchg
pushf
cld
or
aam
mov
test
imul
mov
pop
mov
lock
mov
mov
movsl
popf
cmp
out
adc
dec
cwtl
mov
int3
pop
inc
in
fsubrs
xchg
and
inc
inc
lods
ds
mov
movsl
das
xchg
sbb
js
call
adc
dec
enter
leave
stos
jle,pn
mov
cmpsb
das
movsl
int
sbb
or
cli
ss
mov
movlps
mov
adc
ret
imul
outsl
lea
mov
sbb
loope
xchg
shl
push
mov
xchg
mov
icebp
cmc
andb
rcll
mov
in
int
icebp
pop
or
or
cli
push
movsl
push
mov
movsl
mov
dec
dec
std
data16
icebp
lret
sbb
mov
lret
jp
mov
or
and
mov
les
fwait
mov
sbb
movsl
aam
xlat
push
inc
push
movsw
insb
pop
pop
cmp
ret
mov
int
mov
int
enter
cmp
sub
cld
test
mov
xor
or
xchg
or
sbb
faddl
push
and
push
mov
stc
mov
mov
dec
movsl
inc
fcmovb
xor
lret
leave
setbe
add
nop
enter
mov
mov
dec
movsl
jg
in
push
scas
movsl
int
hlt
adc
out
sbb
add
xor
movsl
sub
sub
or
in
and
mov
cmc
mov
pop
cmp
lcall
mov
lahf
xchg
das
daa
xchg
push
addb
enter
testl
out
cmp
sub
repz
in
arpl
arpl
movsl
sbb
scas
mov
movsl
mov
lds
div
push
movsl
and
aad
dec
mov
cmp
or
adc
adc
in
mov
cmpsl
jo
xchg
xchg
movsl
inc
sub
test
fs
dec
imulb
pushf
xchg
dec
ret
fldenv
xlat
push
jge
push
lds
movsl
cmp
mov
mov
je
frstpm(287
pop
add
scas
popf
inc
mov
imul
sahf
mov
das
movsl
and
jb
movsl
push
cmp
sbb
sub
stos
shlb
frstor
xchg
mov
mov
inc
iret
xor
mov
test
adc
es
adc
in
bsr
fsubs
xchg
leave
jbe
movsl
imul
mov
lcall
ja
push
mov
and
nop
xor
fsts
inc
sbb
mov
movsl
mov
inc
or
lahf
cmpl
inc
in
inc
adc
scas
sbb
pop
out
or
mov
in
addr16
push
movsl
push
outsl
imul
cmpsl
dec
dec
movsl
pop
pushl
add
mov
pop
addb
xchg
int3
xchg
mov
lcall
cltd
cmp
movsl
shl
daa
nop
add
movsl
fsts
xchg
outsl
lods
cmpl
aaa
push
jbe
ja
xor
roll
in
mov
push
cld
jns
lret
mov
out
cmp
xor
das
sbb
test
xor
rcll
or
lret
inc
fidivs
outsb
stos
movsl
and
movsb
jnp
mov
aad
ret
mov
movsl
or
fidivs
jle
add
not
jmp
daa
sbb
icebp
jb
insb
push
cli
dec
push
cmpsb
pop
popf
cmpsl
mov
lea
mov
sahf
jmp
stc
not
xor
mov
xchg
das
nop
add
shl
push
jbe
sbb
test
pop
mov
dec
fsubl
sahf
push
scas
or
cld
movsl
cmp
mov
add
mov
and
movsl
sub
xor
mov
outsb
movsl
sbb
cltd
movsl
ds
xchg
cs
scas
daa
movsl
mov
mov
mov
sub
loope
xor
aaa
movsl
nop
and
call
mov
mov
dec
or
sbb
das
and
nop
push
lahf
movsl
and
pop
mov
scas
and
push
cmp
test
add
pop
movsb
cmp
addr16
pop
gs
pop
movsl
jbe
mov
out
daa
fadd
imul
movsl
or
fimull
mull
inc
sbbl
cmp
xor
leave
lret
and
xlat
fnstsw
jmp
repz
cmpsb
sbb
or
adc
pop
mov
les
jns
push
sub
das
je
mov
sbb
call
and
push
std
pop
add
xlat
mov
clc
scas
and
add
fisubl
xor
daa
xchg
aas
lahf
xor
movsl
sub
sub
cwtl
pop
mov
test
test
test
xor
icebp
movsl
out
cmpsl
in
inc
outsl
fisubl
daa
sbb
jne
xor
xchg
lret
les
xchg
or
ja
push
jne
fisubs
into
test
or
ljmp
jmp
push
in
dec
rcrb
pop
mov
add
scas
movsl
dec
xlat
ljmp
push
mov
movsl
lret
fcoml
xchg
leave
cmp
cmc
or
cmp
addl
mov
mov
push
pop
push
dec
push
data16
jmp
cmp
aaa
aad
xchg
push
sub
in
lock
cwtl
pop
sbb
cmpsl
ret
xor
movsl
int
dec
icebp
or
dec
pop
orb
loop
xlat
or
popa
shll
jne
daa
pop
push
sbb
xor
mov
mov
xchg
cmpsl
add
loopne
xchg
adc
jns
shrb
pop
les
cmp
or
out
movsl
out
gs
mov
cmpsl
mov
mov
sti
clc
jl
mov
sahf
rcll
push
jno
pushf
es
or
mov
loope
stc
xor
negb
mov
jmp
xor
aam
stos
pop
jne
mov
push
mov
imul
push
cli
dec
enter
movsl
inc
pusha
test
pushf
cmpsl
js
movsl
sbb
fstp
movsl
mov
repz
xchg
enter
add
dec
jne
test
cld
inc
call
sti
adc
xchg
xchg
push
cli
insl
jb
bound
fcomip
adc
aam
cmp
or
mov
xchg
lds
cmp
sahf
test
dec
jmp
fcmovb
jp
jl
mov
sub
mov
mov
gs
loopne
in
cmp
into
movsl
rorb
lret
and
mov
shl
jecxz
and
dec
sbb
or
adc
adc
and
in
in
fildll
lock
out
shrl
jbe
fldl
orl
lods
movsl
jge
cmp
jns
push
movsl
ror
repz
push
sbb
mov
push
movsl
orb
out
cmpl
int
lahf
cwtl
xchg
lcall
or
das
movsl
iret
jl
mov
adc
mov
or
dec
mov
dec
dec
pop
loopne
flds
test
jecxz
mov
adc
xchg
cs
movsl
or
dec
lret
sti
mov
int3
fbld
xchg
loop
std
movsl
push
popa
jno
scas
andb
pop
shll
into
adc
push
stos
fwait
imul
push
pushf
js
shll
pop
jp
arpl
insl
andb
inc
cld
orl
push
addr16
call
mov
arpl
xchg
inc
movsl
aaa
jb
dec
popa
pop
bnd
mov
and
inc
inc
xchg
pushf
pop
test
add
mov
ss
imul
movsl
xor
sar
pop
xchg
aad
xlat
cs
movsl
aad
stos
or
ds
movsl
or
adcl
jmp
push
test
shl
shll
testb
sahf
mov
jg
popa
lock
mov
ret
ljmp
mov
ror
mov
pushf
sbb
sub
enter
push
addr16
push
dec
mov
int
movsb
aad
in
inc
je
inc
pop
outsl
push
jecxz
popa
mov
jnp
int
jl
movsl
andb
fwait
test
loope
rolb
iret
stos
icebp
in
inc
or
and
imulb
or
pop
sbb
lds
es
aam
adc
or
add
repz
add
enter
dec
push
mov
out
mov
xchg
movsl
mov
shll
and
mov
sbb
xor
movsl
sub
mov
mov
xor
dec
imul
in
cwtl
test
or
cmp
loope
pop
cmp
and
sti
enter
pop
dec
js
jne
dec
lock
ja
lods
push
mov
nop
push
data16
add
push
jecxz
ret
mov
xchg
fstpl
fwait
sub
mov
mov
pushf
push
cmp
inc
pop
cmc
inc
inc
cmp
movsl
mov
xchg
test
int
sbbl
sub
les
sbb
xor
movsl
xchg
and
insl
movsl
push
xor
call
dec
das
stc
add
mov
mov
outsl
sbbl
sbb
out
and
frstor
xchg
sub
test
daa
ds
ljmp
movsl
add
loope
mov
test
cmp
sub
sub
les
outsb
scas
jns
push
sahf
pop
inc
iret
push
push
dec
shlb
xchg
jbe
mov
push
xorb
popf
pushf
cld
std
cmc
pushf
pop
fsubs
cmp
es
pop
push
inc
test
loop
pop
and
adc
jbe
mov
sbb
fldt
inc
cmp
frstor
mov
mov
inc
lods
bound
mov
add
outsb
adc
js
movsl
push
icebp
jecxz
inc
in
sti
iret
in
push
pop
dec
adc
loop
mov
imul
add
xchg
xor
ret
and
jb
fldl
cmc
mov
hlt
mov
sbb
xlat
nop
and
adc
mov
icebp
ret
mov
test
mov
sub
enter
adc
add
dec
sub
pop
popf
push
jae
lahf
stc
cmp
sub
or
and
pop
in
add
jbe
push
cmp
fists
jg
xor
lret
mov
lods
int
and
fcom
stos
inc
dec
sub
mov
dec
mov
ret
inc
add
pop
or
loope
and
mov
add
ja
movsb
or
pop
addr16
popf
mov
aas
mov
inc
xor
sub
lea
out
mov
loope
cmpsb
lcall
les
pmullw
ret
seto
sub
cwtl
inc
mov
xor
lds
clc
inc
scas
hlt
aas
sub
adc
jbe
push
pop
aad
inc
cld
jbe
sub
inc
in
pop
jp
adc
loop
mov
push
dec
icebp
sahf
rclb
jl
movsl
add
xor
and
into
cltd
and
sarb
cmc
or
fisubs
loopne
jne
movsl
cmp
mov
xchg
mov
test
xchg
xlat
mov
inc
xor
mov
gs
jg
mov
int3
push
movsl
out
xor
push
pop
add
sub
lcall
jnp
jp
xchg
mov
sbb
inc
pop
mov
push
movsl
je
lahf
xor
imul
movsl
adc
fadd
lea
popa
movsl
icebp
sub
dec
jo
jge
movsl
test
inc
jbe
xchg
mov
clc
aad
ret
adc
test
shll
loop
mov
cmp
cmp
in
mov
xchg
mov
push
int3
imulb
pop
popa
inc
movsl
mov
and
mov
out
sub
mov
and
in
stc
int
in
lock
xchg
lds
sub
mov
sbb
mov
das
pop
mov
mov
je
movb
add
jge
push
jns
lds
sub
movsl
fldt
push
pop
pop
push
sbb
in
out
push
push
dec
lret
cmpsl
lcall
das
xchg
pop
sahf
and
leave
in
rcrb
pop
movsl
cmp
shl
cmp
mov
or
ljmp
mov
hlt
shlb
inc
adc
push
pop
xchg
mov
jo
sub
cmc
cmpsl
ret
scas
stc
ss
jb
adc
jo
pop
data16
sar
add
jmp
cmc
out
mov
in
in
leave
mov
push
data16
mov
fldl
cmpsb
popf
mov
or
add
ds
adc
push
push
xchg
movsl
in
xlat
inc
cmp
mov
dec
lret
mov
jno
cli
sbb
fcompp
aad
inc
sbb
adc
aad
and
add
mov
fdivp
mov
cmp
jge
xor
sbb
rorl
fdivs
ljmp
mov
pop
add
les
jg
dec
push
lods
insl
pop
mov
clc
mov
jle
call
jg
xor
add
mov
xorl
push
push
and
sub
addr16
into
mov
clc
shlb
insl
push
push
fmull
mov
pop
pop
fcmovnu
cmp
movsl
nop
mov
cmp
jmp
jmp
movsl
mov
out
jno
pop
push
fs
dec
loopne
ret
stos
movsl
hlt
fld
dec
mov
daa
jecxz
rclb
fists
ss
cmp
fwait
int
push
pushl
movsl
xor
mov
in
repz
xor
pop
push
jnp
into
add
popf
pop
inc
mov
add
maxps
jmp
sahf
gs
clc
out
lock
mov
lahf
insl
loop
mov
xor
lods
push
sub
cmp
or
push
adc
iret
xchg
mov
daa
push
aas
mov
pusha
adc
push
adc
xchg
es
loop
shl
adc
mov
arpl
mov
aad
movsb
and
nop
test
mov
movsl
xchg
xor
jo
test
jle
mov
leave
in
movsl
inc
outsl
stos
addr16
scas
test
movsl
xchg
xchg
or
pop
push
movsl
push
dec
fwait
outsb
nop
inc
cmp
sbb
inc
cmp
add
aas
pop
movsl
push
gs
in
int3
jae
movsl
lahf
cmpsl
xchg
test
imul
sbb
inc
cmp
pop
int
and
movsl
xchg
aaa
cli
adc
ss
movsl
pop
andl
lahf
or
out
xchg
loopne
push
roll
mov
or
movsl
cmc
push
cmpsb
mov
fwait
lods
filds
stc
add
or
dec
lcall
popa
cli
push
inc
or
add
xchg
jnp
mov
lock
aaa
movsl
sub
popf
cmp
popa
mov
dec
jbe
xchg
sbbl
stos
dec
pop
mov
and
cmp
mov
jmp
das
sub
js
mov
int
sti
scas
mov
adc
pop
fnstcw
movsl
into
pushf
dec
data16
dec
sub
and
movsl
dec
push
jge
xlat
lahf
inc
in
mov
cmp
pop
push
fsubrs
xor
or
enter
std
in
jge
loopne
movsl
and
imul
movl
out
lcall
mov
or
pop
in
ss
fisubl
sbb
mov
mul
fwait
popf
jecxz
or
push
xchg
loopne
aaa
lds
pop
ja
push
and
icebp
xchg
and
movsl
outsb
push
jge
popf
loop
adc
mov
jecxz
sub
js
hlt
or
jl
add
ss
inc
je
fcomip
in
adc
jne
pop
dec
lods
movsl
pinsrw
push
push
pop
jge
out
pop
inc
mov
xorb
sub
cmp
lods
and
pop
in
inc
push
movsl
cmp
jl
js
pop
das
mov
inc
mov
mov
fldcw
ret
cmp
jl
movsl
fisttpl
add
dec
xchg
pop
mull
scas
rolb
dec
cmpl
sub
pop
adc
je
fstps
divl
ja
andl
movsl
mov
fnsave
push
pop
pop
inc
mov
dec
bound
mov
movsl
repnz
dec
das
pop
push
in
mov
test
mov
push
and
cmc
fbld
xchg
aas
div
add
push
mov
arpl
fsubs
and
cmc
in
lods
and
sbb
dec
ja
push
je
push
iret
sti
movsl
mov
sbb
push
movsl
xchg
cmpsl
outsb
fwait
dec
xor
in
lret
mov
xchg
movsl
pop
pop
mov
and
jmp
xchg
sbb
pusha
add
and
out
test
mov
push
scas
in
or
inc
ljmp
mov
pop
and
push
jb
lds
test
pop
adc
fcompl
xor
xor
xor
sbb
cmp
ljmp
xor
in
loopne
inc
adc
call
jg
bound
inc
cld
fldenv
add
loope
or
out
in
push
cwtl
push
dec
xchg
sbb
and
adc
sub
pusha
addr16
sbb
xor
pop
mov
sub
leave
cs
adc
lret
rolb
stos
or
lods
and
or
and
nop
jbe
xor
lcall
cmc
mov
xcrypt-ofb
cmpsl
push
add
pop
pop
lret
aam
imul
push
movsl
xlat
sahf
ret
and
fldenv
call
or
sub
and
inc
cmp
enter
mov
int3
aad
loope
fstl
popf
adcb
lods
movsl
xchg
imul
jmp
xchg
cmp
sahf
cwtl
lcall
mov
outsl
mov
add
movsl
cmp
add
pop
out
movsl
pop
sbb
jbe
xchg
out
test
sbb
pop
mov
aam
test
xorb
jmp
inc
sub
shlb
scas
pop
push
movsl
jno
and
cmp
mov
iret
repz
pop
dec
sbb
jp
outsb
pop
jl
jle
mov
xchg
mov
cmp
sub
pop
lea
xchg
dec
mov
loop
cmc
inc
sti
test
test
and
es
cwtl
fcomps
jmp
sbb
testb
mov
cmc
sub
hlt
shrl
mov
decb
cld
mov
dec
push
or
sub
and
mov
nop
pop
and
mov
push
xor
sub
cli
cmc
xchg
leave
push
cmp
insl
fdivp
add
lock
stos
mov
enter
inc
les
je
rcrl
or
and
mov
xchg
or
stos
sub
lret
mov
nop
mov
inc
jl
mov
push
jmp
sbb
ret
xlat
mov
and
jecxz
sub
add
inc
dec
and
sbb
jle
jle
mov
cwtl
mov
sub
es
loop
cmp
push
fstpl
xor
push
scas
test
sbb
xor
pop
imul
movsb
inc
xor
inc
add
inc
mov
dec
push
or
fistl
mov
in
cmpsl
adc
data16
sub
out
fucomi
and
sub
and
or
call
in
fistps
mov
jmp
in
sub
mov
and
sub
sub
xor
cmp
push
push
pop
inc
movl
lods
dec
movsl
fwait
xor
es
cmp
ret
xchg
sub
scas
daa
movsl
mov
ret
rcrb
call
pop
loop
mov
xor
cwtl
xchg
xchg
mov
mov
push
push
movsl
in
js
xor
xchg
add
mov
sbb
movsl
dec
test
cmp
sub
sub
mov
inc
clc
xor
rcrl
lods
movsl
sub
out
mov
ret
std
xchg
shl
dec
cmc
loop
jmp
movsl
test
mov
and
fildll
stos
inc
movsl
iret
cli
adc
adc
pop
xor
cltd
xchg
sbb
push
push
and
or
inc
dec
or
std
iret
ds
pop
xchg
cmp
or
fbld
jno
jne
iret
mov
popf
and
cwtl
test
dec
sbb
cld
pop
aad
mov
mov
imul
movsl
jmp
shlb
movsl
xor
push
aaa
pop
pop
or
movsl
int3
test
out
xchg
cld
push
ljmp
mov
nop
movsl
sub
add
mov
iret
mov
dec
movsl
loope
insb
jb
cmp
imul
sub
and
fisubrl
bound
lods
syscall
mov
xchg
push
inc
pop
js
movsl
les
out
movsl
sbb
iret
dec
mov
adc
mov
add
movsl
pop
mov
nop
xchg
mov
fidivl
or
movsl
cmp
push
and
mov
sbb
mov
mov
loop
cmpsl
and
dec
sbb
in
dec
adc
out
cld
dec
pop
lret
into
vandpd
push
jl
bound
push
movsl
out
mov
sbb
mov
pop
sti
imul
mov
out
inc
add
test
add
movsl
dec
xchg
push
call
sbb
sub
cs
adc
movsl
lods
push
add
shlb
mov
or
lds
dec
out
movsl
jmp
in
or
jne
lahf
and
test
xchg
arpl
outsb
cs
aaa
ret
dec
movsl
push
cmp
mov
movsl
pop
jecxz
dec
xchg
addr16
in
adc
or
xchg
movsl
pop
notl
inc
xchg
lcall
daa
rolb
jb
ja
pop
mov
mov
pop
sbb
pop
push
popa
cmpsb
pop
xlat
lret
jb
cld
sub
repz
popa
and
mov
inc
push
push
mov
lcall
wbinvd
loopne
int
movsl
and
in
in
cmc
fwait
adc
loope
mov
movsl
test
inc
push
shl
out
pop
cmp
jnp
and
jo
lcall
pop
mov
mov
cs
pushf
inc
sub
imul
xchg
lea
cmpl
xor
ret
mov
std
shl
je
add
dec
push
pop
mov
lds
shlb
push
out
add
sti
shl
jno
gs
adc
jmp
loopne
daa
pushf
mov
sbb
ret
xor
xchg
push
lods
jbe
aas
mov
and
and
scas
movsl
add
cmp
bndstx
movsl
cmp
jo
mov
xor
push
movsl
mov
fwait
add
popl
fcmovb
in
mov
pmulhuw
leave
inc
jmp
xor
mov
jns
xchg
sbb
mov
hlt
frstor
mov
fbld
xchg
mov
adc
adc
movsl
ficoms
jl
faddl
xchg
jb
inc
push
add
mov
into
sbb
les
sub
cmc
stc
adc
jne
movsl
adc
sbb
iret
sbb
cmpsl
sub
stos
inc
movsl
aaa
mov
mov
dec
push
pusha
or
or
cmp
add
or
add
mov
movsl
push
jno
inc
push
in
fldenv
pusha
dec
fucompp
mov
insb
test
stc
cmp
and
fs
arpl
push
sbb
divb
data16
pop
outsb
hlt
sahf
mov
ffree
mov
and
in
shlb
push
scas
adc
mov
addb
fabs
lea
test
pushf
repz
or
daa
adc
test
cmpsl
fnsave
sbb
add
pop
shlb
mov
ja
cmpsl
jle
cmp
movsl
mov
xchg
mov
cmc
movsl
push
cmp
or
sub
aaa
stos
push
xchg
xor
lcall
add
arpl
test
push
xchg
xor
adc
mov
add
rcll
xchg
sbb
out
jecxz
inc
push
imul
enter
adc
sbb
mov
movsl
adc
stc
into
sbb
leave
mov
pop
cs
push
stc
add
mov
xchg
cmp
adc
or
fistl
inc
test
jmp
ja
out
sub
inc
xlat
in
out
movsl
out
cmp
xchg
cltd
es
sbb
mov
mov
add
sub
mov
cmpsb
sub
lret
mov
lahf
xor
adc
ret
xchg
push
movsl
push
sub
cmpsb
mov
movsl
arpl
in
add
mov
movsl
mov
fisttps
out
ss
ret
popf
or
lods
mov
int3
xchg
push
mov
sbb
push
add
movsb
add
pop
int
int3
lds
cmp
lea
inc
mov
add
jb
add
sbb
jno
mov
mov
jge
pop
insl
popf
add
inc
mov
notl
mov
mov
int
mov
mov
inc
iret
push
and
rolb
fadd
and
add
icebp
filds
lcall
dec
ja
sbbb
dec
movsl
add
mov
mov
sub
inc
movsl
inc
fs
dec
jp
mov
movsl
mov
rorl
dec
in
mov
and
xor
sub
mov
lods
pop
or
fistpll
add
mov
cmpsb
push
inc
and
dec
pop
sub
push
lcall
movsl
adc
xor
mov
mov
fisubs
jae
cmova
test
cmp
mov
arpl
push
addr16
movsl
or
jnp
movsl
sarb
daa
push
and
mov
lds
ss
xchg
and
bound
cmp
adc
stos
fdivl
es
mov
stos
lcall
mov
aas
adc
xchg
call
xlat
outsl
imul
mov
and
test
mov
xchg
mov
and
insb
js
and
imul
pop
jns
xor
inc
push
roll
leave
mov
cltd
cmp
cmp
rcrb
divb
or
xlat
out
and
sub
cmc
inc
xor
mov
testb
pop
sbb
stos
jmp
jecxz
gs
cli
psubsw
je
jp
adc
repnz
arpl
and
movsl
and
dec
xchg
mov
mov
jns
outsb
popa
jle
push
sahf
sub
push
add
mov
out
push
jle
and
lret
cwtl
sub
cwtl
jp
or
adc
jno
subl
mov
mov
repnz
mov
aas
push
jo
mov
ds
add
sbb
and
sub
and
icebp
scas
push
das
pop
std
jae
xchg
or
sub
cltd
sbb
arpl
cli
inc
dec
sub
xchg
push
aad
sub
clc
loop
add
cmp
sbb
fcoms
aad
je
and
out
sahf
fld
cmp
dec
test
sub
jl
shlb
push
adc
sbb
lret
pop
sbb
cwtl
stos
cld
in
dec
push
cltd
push
and
sbb
lret
adc
inc
xchg
lods
lods
and
xchg
jg
cmp
mov
cmc
xchg
xor
jo
fdivrl
aas
rcll
and
movsl
iret
lret
repz
jnp
xchg
stos
xchg
clc
aaa
outsb
negb
vmovaps
lea
call
xchg
scas
xorb
mov
jmp
test
xor
sbb
movsl
cld
inc
test
aad
mov
jns
cmp
cmpsb
addr16
test
lcall
xchg
mov
cmc
in
les
iret
mov
jne
rol
adc
push
add
movsl
sti
mov
jmp
movsl
add
call
mov
in
movsl
mov
mov
mov
and
fincstp
fadds
lret
std
scas
and
xlat
dec
mov
enter
pop
mov
cmp
jle
movsl
mov
pop
push
dec
movsl
inc
jns
movsb
jno
ljmp
mov
dec
movsl
mov
pop
inc
iret
adc
and
dec
push
adc
mov
mov
mov
add
in
arpl
stos
popa
cmpsl
leave
mov
mov
xchg
addl
popa
jo
adc
inc
xchg
lcall
movsl
in
insb
imul
aaa
daa
rol
aas
mov
sbb
in
cs
int3
prefetch
inc
xchg
mov
out
ftst
movsl
push
push
int
push
incl
movsl
int3
jnp
inc
push
loope
outsb
movsl
mov
nop
movsl
aas
sub
mov
and
add
sbb
mov
mov
movsl
mov
push
in
add
push
cmp
mov
push
movsl
in
xchg
inc
xor
mov
push
iret
ljmp
aad
or
gs
adc
and
mov
mov
xor
pop
sub
add
sbb
cmpsb
in
mov
out
cmp
cmp
into
xchg
fdivrl
push
push
mov
xor
dec
movsl
jecxz
or
adc
addr16
fistps
test
imul
adc
loop
sub
mov
add
cmpsb
adc
or
push
inc
xor
lods
and
int3
lds
sbb
ljmp
xor
imul
push
cmpsb
mov
lds
inc
and
pop
dec
mov
cmpsl
cmp
mov
jne
aad
in
add
in
dec
jbe
rorb
jl
imul
sbb
movsl
out
lahf
into
xchg
mov
loop
in
fisttpl
jmp
test
out
lds
dec
add
and
adc
ljmp
cmpsb
sub
sub
push
movsl
and
outsb
cmp
xchg
sahf
and
lock
mov
arpl
sbbl
iret
lds
movsl
dec
push
lock
movsl
jne
push
andb
ljmp
mov
lods
cmp
movsl
cmpsb
bound
movsl
push
adc
movsl
fucomip
insl
sbb
rolb
aad
add
fmuls
lods
push
ret
movsl
inc
clc
adc
dec
movsl
sbb
or
mov
pop
push
in
subl
ja
mov
inc
xlat
loopne
or
jno
int3
sub
fsubr
je
movsl
fwait
imul
fists
sahf
sub
dec
mov
test
imul
mov
repz
pop
lock
and
lret
jns
movsl
push
js
mov
mov
and
out
inc
dec
mov
stos
xchg
mov
outsb
pop
popf
add
movsl
scas
inc
mov
mov
stos
pop
mov
nop
movsl
push
xchg
dec
dec
stos
addr16
iret
jp
pusha
or
cmp
lret
out
leave
hlt
daa
lock
movsl
cmpsl
fstpl
sbb
mov
or
sub
mov
pop
cmc
jno
mov
push
pushf
call
daa
test
xchg
out
push
or
push
push
pop
sbb
and
lcall
fsub
movsl
or
xor
movsl
sarl
adc
mov
in
vmovq
adc
sub
adc
sbb
in
inc
ljmp
fimuls
pop
scas
lods
and
clc
adc
xor
pop
jl
push
stc
inc
and
scas
imul
add
xor
cwtl
inc
movsl
cmp
aam
cwtl
ja
pop
sbb
outsl
fistl
and
cwtl
jecxz
jecxz
and
inc
jne
push
stos
fisttpll
test
xchg
dec
xchg
mov
scas
movsl
mov
aas
push
and
cmpsb
movsb
in
arpl
mov
lods
hlt
test
lods
test
sbb
mov
fists
mov
inc
lods
cmpsl
fmull
xchg
pop
shrl
ljmp
sahf
lahf
shlb
xchg
jle,pn
mov
pop
sbb
inc
mov
test
mov
adc
movsl
mov
cwtl
adc
xchg
xchg
cmp
vsubss
loop
sub
mov
int3
mull
inc
xor
add
add
push
or
orb
push
mov
mov
push
pop
popl
add
imul
lret
movsl
pop
jge
cmpsl
int
mov
sub
movsl
lds
mov
je
movsl
pop
imul
lahf
stos
sbb
out
mov
movsl
js
ja
insb
xor
aad
fsub
leave
std
mov
push
movsl
lock
mov
imul
lea
inc
mov
popa
movsl
inc
xor
sbb
pop
sbb
loopne
aam
add
les
shll
dec
jbe
in
xchg
mov
jmp
push
aaa
add
mov
gs
mov
mov
pop
mov
mov
xor
test
ja
push
mov
test
lds
enter
nop
movsl
dec
mov
pushf
ficomps
es
jmp
les
pop
fnsave
and
mov
xor
inc
jb
xor
out
movsl
ficoms
xor
arpl
jp
jbe
mov
mov
repnz
jnp
jmp
call
pop
movsl
pop
out
mov
sub
mov
dec
push
shll
fwait
sbb
in
sbb
and
sti
in
push
fisubl
stc
pusha
into
in
repz
fnstenv
outsl
clc
ljmp
dec
sbb
fdivs
push
mov
push
bound
xchg
mov
jg
mov
mov
add
int
add
adc
movsl
dec
push
cmp
ret
lret
cli
in
inc
cmpl
jbe
add
add
in
das
lea
mov
fwait
movsl
gs
out
push
xchg
fbld
add
iret
xchg
lea
movsl
push
add
mov
jo
cwtl
movsl
int3
add
or
mov
sti
push
cmp
ljmp
mov
das
aas
movsl
cmpsb
xchg
dec
int
ret
mov
daa
cmpsl
add
mov
inc
lcall
lods
pop
mov
popf
adc
lods
cmpsb
in
cs
dec
and
popa
mov
dec
mov
mov
push
outsb
or
mov
jl
int3
or
movsl
mov
test
in
cltd
in
lea
and
cmp
scas
sbb
cmp
add
test
jecxz
pop
inc
out
xchg
rorl
and
or
lods
pushf
xor
mov
mov
cltd
mov
mov
push
dec
pusha
stc
test
rcrb
out
rcrl
sub
test
jmp
pop
aam
jns
shlb
out
std
ljmp
int
mov
andb
movsl
mov
mov
out
cmp
jmp
jge
mov
inc
aas
pop
js
movsl
lock
int
mov
fwait
sbb
sub
mov
mov
movsl
bound
pop
and
jg
in
movsl
jbe
pop
pop
je
mov
test
popa
nop
lds
scas
xchg
mov
fwait
arpl
pop
or
jno
push
add
mov
push
ljmp
shrl
cmp
arpl
sbb
push
jns
in
pop
cwtl
jne
xlat
scas
loope
push
out
ljmp
shll
sahf
fldcw
pop
add
les
jnp
out
inc
inc
in
and
sub
inc
loop
adc
add
addr16
adc
push
or
and
repz
fwait
js
repnz
sub
fwait
test
fisubl
scas
shl
mov
gs
ret
aas
std
mov
and
push
xlat
mov
push
xorl
icebp
neg
aaa
mov
mov
inc
bound
mov
mov
loop
iret
mov
movsb
es
clc
sti
das
faddl
sub
aaa
jp
mov
inc
loope
jne
in
lods
rcr
inc
push
mov
xlat
fimull
dec
cmp
in
loop
je
push
dec
sub
pop
jns
pop
mov
sub
and
fldl
mov
movsb
sub
cmp
sub
imul
sbb
pop
lret
push
decl
lea
or
popf
inc
xlat
or
or
in
in
inc
dec
inc
data16
inc
push
addl
and
scas
aam
cmpsb
cmp
push
sbb
ret
add
lds
popa
test
xor
testl
movsl
je
les
sar
add
fwait
jp
sub
or
icebp
shrl
lods
lcall
inc
or
or
test
sbb
mov
mov
xchg
ja
inc
pop
shlb
movsl
les
lcall
imul
arpl
test
mov
inc
sub
dec
mov
pushf
cmp
imul
sti
dec
insl
movsl
test
inc
or
and
mov
mov
sar
int
mov
push
dec
push
inc
jp
ror
cmp
scas
in
movsb
in
pop
or
or
mov
mov
enter
dec
incb
inc
mov
es
stos
pop
pop
xor
push
cmp
movsl
shll
and
addr16
pop
xchg
cmpsl
ljmp
lahf
sbb
movsl
inc
scas
and
xchg
inc
adc
push
sbb
popa
loop
or
std
mov
icebp
rorl
es
mov
adc
movsl
cmp
jmp
int3
and
mov
xchg
ljmp
push
movsl
mov
enter
movsl
mov
pop
and
movsl
xchg
gs
loope
mov
cmpsl
sub
in
fs
movsl
cmp
insb
inc
movsl
xlat
out
mov
movsl
pushl
or
shll
mov
jno
cmpsl
jbe
fbstp
jmp
scas
aaa
dec
in
push
cmpl
xchg
mov
pop
xorb
dec
and
mov
inc
jne
andb
sbbl
xor
popf
mov
cld
into
repz
mov
pop
xchg
ds
das
or
and
xor
adc
push
dec
insl
aad
inc
scas
pop
adc
fs
imul
icebp
cmpsb
fdivrs
movsl
testb
xchg
aas
test
xor
sahf
divb
lahf
sub
add
mov
mov
sub
ljmp
push
and
lds
aam
inc
xchg
mov
jo
mov
mov
push
pop
movsl
adcb
push
pop
sub
pop
gs
jnp
inc
push
ret
xor
cmp
andb
cmp
mov
mov
inc
or
loopne
dec
movsl
andl
ret
mov
mov
out
stc
jnp
nop
movsl
fdiv
mov
lock
add
add
cld
push
sbb
in
jp
add
int
test
cmp
mov
imul
cs
mov
dec
movsl
pop
push
jp
sub
mov
push
cmp
fsubrl
popf
mov
out
fsub
fcom
xchg
sbb
icebp
pop
sbb
test
mov
cmpsb
movsl
add
movsl
xor
fdiv
in
std
xlat
movsl
cmp
mov
jo
cwtl
sbb
push
ret
daa
mov
xor
mov
sbb
sbb
sbb
xor
rclb
scas
cmpsl
xor
shrb
loope
jl
xchg
movsb
add
movsl
mov
or
dec
shrb
fimuls
in
and
xchg
push
rolb
dec
movsl
pop
jg
pop
add
cwtl
cmpsl
movsl
icebp
sahf
sub
aad
popf
and
jmp
mov
js
adc
xchg
cmp
mov
out
movsl
sahf
mov
inc
mov
sbb
push
test
push
lods
in
popf
or
mov
scas
outsb
loope
es
cltd
movsl
mov
mov
test
icebp
addr16
mov
xchg
scas
jnp
adc
fdivrl
jb
pop
adc
rcll
adc
cwtl
daa
sbb
mov
std
out
push
mov
or
cmc
jne
and
data16
xchg
in
mov
stos
lcall
mov
add
popf
loope
fbstp
jecxz
inc
add
xor
rorb
idivb
insb
imul
pop
mov
mov
cs
lods
or
jno
out
ret
popf
inc
mov
out
pop
into
enter
inc
push
push
test
test
rorl
mov
and
sbb
das
lds
pop
popf
arpl
and
enter
pop
test
lds
call
push
and
aad
ss
movsl
imul
ljmp
ficoml
bound
shl
cld
popa
inc
push
outsb
jge
or
pop
add
mov
shl
movsl
repz
mov
add
lock
ja
xchg
arpl
mov
scas
push
hlt
fldenv
sub
add
ret
jne
mov
fnstsw
adc
sub
mov
addr16
lcall
and
and
cmpsl
mov
outsl
test
lahf
inc
pushf
call
sub
push
push
ror
imul
shlb
xor
mov
xor
test
movsl
adc
lea
mov
and
mov
cmp
jecxz
xchg
std
and
mov
sub
xor
mov
add
movsl
cld
jl
pop
je
lds
jmp
mov
cmc
jle
dec
mov
cli
add
rcrl
aam
sbb
shl
movsl
call
cmp
jno
jae
inc
popf
negl
pop
movsl
push
pop
jbe
pop
or
mov
inc
movsl
cmp
fistl
pushl
and
mov
lea
test
movsl
out
aam
mov
adc
jg
mov
push
pop
int3
hlt
movsl
mov
aam
les
sub
sar
adc
fimuls
or
stc
mov
insl
aam
movsl
call
int
pushf
push
add
add
das
movsl
add
sub
ret
lret
loope
mov
bound
fidivl
movsl
fs
pop
or
inc
cli
add
pop
pop
push
ret
mov
or
pop
pop
adcb
aaa
mov
xor
addr16
dec
add
xchg
lea
mov
cmp
jne
xchg
outsl
lahf
ficoms
jo
stc
lret
push
cmp
add
or
or
fdivr
jnp
cmp
mov
or
dec
adc
mov
add
jmp
mov
addl
mov
in
and
rcr
popa
sub
cltd
movsl
inc
xchg
mov
test
or
sbb
and
cmp
add
mov
fnstcw
dec
sar
push
loope
out
addl
ret
sbb
jp
push
xchg
mov
mov
std
movsl
push
sar
add
out
inc
movsl
stc
add
sbb
xchg
and
insb
out
lret
push
jb
sub
std
push
test
rclb
xchg
and
adc
pop
scas
movsl
sbb
sbb
ja
addr16
sub
xorb
sahf
adc
dec
inc
adc
icebp
xchg
mov
cmp
stos
movsl
mov
xlat
popa
in
stc
aam
sbb
out
or
jl
mov
xor
xchg
mov
movsl
cmp
or
inc
out
xchg
add
sarl
or
jmp
pushf
adc
fiaddl
mov
jno
stc
push
movsl
in
sub
mov
flds
cmpl
data16
jns
movsl
shr
lock
jbe
movsl
das
test
sub
mov
pop
stos
push
lret
andl
and
and
sti
inc
lods
shl
insl
test
mov
leave
movsl
pop
pop
inc
pusha
ds
cmp
add
xor
mov
sub
mov
cli
or
pop
ja
pop
in
out
adc
fcmovbe
movsl
cmp
jl
loop
lcall
xchg
mov
mov
das
rsqrtps
fsubs
or
jp
mov
xchg
sub
stos
mov
ds
mov
fdivs
cmpsb
jno
cmp
fsts
xchg
outsb
addr16
daa
add
add
push
arpl
adc
icebp
rolb
fmull
int3
hlt
and
mov
scas
sub
add
loopne
ret
frstor
mov
jmp
mov
and
jns
lret
mov
movsl
icebp
and
imul
addr16
mov
addl
mov
cmpsb
cmp
jle
stos
lret
dec
push
and
push
push
sahf
cld
add
mov
mov
stc
das
sub
mov
lret
dec
pop
mov
sub
lods
aam
xchg
stos
jo
aas
push
ror
pop
inc
xor
clc
movsb
pop
hlt
cmpsb
cmpsb
das
repz
ret
movsl
inc
icebp
mov
out
push
mov
xlat
jnp
sbb
dec
and
fbld
add
mov
jns
fsub
cwtl
push
int3
movsl
arpl
out
subb
imul
cmp
movsb
daa
je
push
loop
sbb
xor
jno
inc
mov
jo
push
lods
mov
movsl
movsb
jecxz
mov
in
push
cmp
jae
mov
loopne
and
lds
movb
flds
movsl
xlat
lods
je
das
mov
cmc
push
insl
lds
movsl
dec
fs
lea
jb
addr16
jne
movsl
jbe
iret
sarb
cs
aaa
bound
loop
imul
std
movsl
fdivl
lcall
xlat
push
cmpsb
outsl
movsl
aam
imul
or
cmp
sub
movsl
ss
fistl
cmp
pop
adc
movsl
mov
push
adc
in
stos
daa
movsl
insb
push
dec
jb
push
sbb
inc
movsl
sub
sbb
lahf
dec
loope
pop
popf
jne
sub
movsl
jno
arpl
aam
mov
pop
mov
imul
and
scas
mov
std
lods
sarb
movsl
imulb
sub
out
movsl
out
mov
and
xchg
xchg
std
pop
xchg
cmc
out
cmp
movsl
outsl
sub
push
lret
mov
popa
in
mov
bound
clc
mov
mov
push
and
test
movsl
cld
addl
int
in
and
push
mov
fdivrs
movsl
dec
xchg
pop
and
xchg
cmp
inc
insb
push
mov
xchg
mov
movsl
push
fildl
icebp
movsl
loop
mov
mov
cmp
mov
iret
bnd
xor
subl
cwtl
sahf
jns
jno
fmull
test
jmp
jg
push
cwtl
ret
pop
and
push
pop
nop
pop
inc
and
lds
mov
or
movsl
push
mov
fwait
movsl
cmp
push
jno
add
sub
mov
jmp
add
int
push
dec
clc
pop
psubw
xor
shll
mov
push
clc
stos
or
and
enter
pop
mov
jno
inc
popf
fwait
movsl
das
mov
cmp
inc
fidivl
ret
mov
mov
adc
movsl
rorl
leave
stc
vpsubd
cmp
and
cmpsb
mov
push
lods
andb
mov
xor
mov
sub
movsl
out
in
js
mov
imul
fxam
or
mov
pusha
lods
pop
movsl
and
int
sbb
push
imul
jge
shlb
adc
dec
movsl
clc
mov
inc
mov
pop
lret
shrb
mov
ret
out
pusha
cmp
xchg
mov
cltd
js
outsl
inc
cmpsl
cs
rol
and
mov
ljmp
enter
fstpl
mov
out
pop
xchg
aad
stos
or
pop
jmp
push
mov
add
pop
out
and
loopne
mov
roll
mov
cltd
xor
push
adc
movsl
xchg
shrb
daa
sbb
jb
jbe
and
out
mov
movsl
gs
or
fdivrs
cmpsb
mov
popa
mov
int
aam
adc
jae
push
divb
pop
pop
cli
dec
lds
fdivrp
in
bound
add
push
stc
ficompl
mov
cwtl
aas
andl
push
sub
lods
mov
sub
rcrb
or
in
in
movsl
sbb
cmp
sub
push
sahf
push
icebp
mov
sbb
mov
lcall
inc
mov
movsl
lret
jb
mov
mov
in
cmc
les
movsl
and
mov
daa
movsb
rcl
cmp
xchg
sub
inc
add
movsl
shl
call
mov
dec
in
andb
pushf
mov
in
out
test
out
mov
inc
sub
dec
imul
leave
ljmp
negl
pop
bound
lea
ja
sbb
icebp
push
add
mov
mov
test
mov
in
dec
jg
xor
cmpsl
rorb
pop
pop
popa
loop
movsl
push
mov
and
cmp
dec
cltd
xchg
add
std
dec
mov
inc
push
movsl
lret
outsb
subb
pop
psubsb
cmp
dec
rorl
rorb
nop
sub
or
mov
in
xchg
bnd
mov
xor
add
mov
adc
push
pop
cmp
cld
push
loope
dec
data16
test
clc
pusha
lret
mov
and
or
iret
stos
adc
lods
adc
mov
movsl
push
mov
inc
scas
cmp
mov
dec
cwtl
outsb
jge
mov
xchg
ret
or
sbb
mov
mov
movsl
xchg
xchg
mov
xchg
sub
in
xor
push
gs
out
movsl
aad
out
cmpsb
test
movsl
cmp
jno
pushf
push
ret
movsl
cmp
movsl
or
jg
sti
movsl
sbbb
stos
and
dec
push
outsl
movsl
mov
inc
out
push
popa
les
dec
or
lcall
insb
imul
jo
jb
fcoml
mov
cmpsb
adc
sahf
aas
mov
addb
xchg
nop
call
inc
insb
sub
leave
xchg
xchg
xor
negb
and
mov
or
mov
xor
or
stos
mov
movsl
outsl
push
js
xchg
shll
pop
ret
lods
and
mov
sbb
mov
dec
addr16
aaa
movsl
fstp
mov
movsl
rclb
bound
xor
pop
pushf
aas
pop
jl
aaa
mov
xchg
xchg
fsubs
mov
movsl
cmp
pop
sahf
movsl
cld
dec
pop
sub
insb
jno
popf
mov
je
in
mov
add
pop
insb
mov
and
sub
cs
xor
ret
dec
mov
scas
xchg
idivl
vpcmpeqb
imul
filds
push
movsl
dec
or
xor
repz
outsb
std
lahf
dec
mov
arpl
test
ret
fmull
xorb
adc
pusha
movsl
xchg
xchg
jmp
mov
inc
test
xor
cmp
or
fmul
movsl
out
pop
idivb
rorb
fwait
imull
aam
sub
imulb
in
cwtl
xor
ret
mov
loope
repz
movsl
sbb
clc
test
stos
mov
push
mov
add
mov
push
out
or
add
test
mov
add
xchg
stos
push
lds
je
test
inc
mov
jbe
stc
imul
cltd
add
push
and
inc
push
pop
fcmovu
movsl
add
movsl
sbb
iret
out
ret
leave
sbb
pop
aam
fwait
lahf
pop
stos
mov
xchg
cmp
or
scas
push
cltd
ret
mov
adc
xchg
sub
and
enter
movsb
add
mov
int
add
sub
frstor
loop
scas
stc
add
shrl
jmp
inc
lds
das
mov
movsl
pop
mov
fcmovnb
cmpsb
xor
div
jecxz
mov
sbb
ret
stos
jp
icebp
ljmp
cmp
rclb
fiaddl
lds
sub
lods
inc
popf
fnstsw
jb
mov
popa
outsb
arpl
inc
test
into
sub
and
xchg
pushf
push
cmc
jecxz
sahf
icebp
add
jo
or
arpl
arpl
movsb
enter
jne
int3
pop
cmc
push
mov
out
dec
lds
xchg
sbb
cwtl
cmpsb
pop
pop
sbb
mov
mov
inc
inc
daa
jle
fbstp
jns
pop
dec
mov
add
icebp
in
jne
gs
jns
jle
popa
sub
mov
cmc
adc
in
mov
in
mov
mov
push
sbb
fmuls
add
daa
xor
loopne
vpsllw
pop
or
cmp
mov
or
push
inc
pushf
cmp
jl
sub
or
sbb
rcrl
dec
jae
add
sbb
in
pop
pop
push
dec
mov
dec
int
pop
test
add
pop
add
aaa
pusha
bound
imul
sub
loope
rcrb
aad
sbb
movsb
pop
loop
push
inc
and
or
jecxz
mov
add
sub
mov
mov
push
mov
add
xlat
rcrl
add
inc
fnstcw
enter
mov
add
fstpl
add
pop
add
and
rep
popf
and
test
cmc
push
icebp
mov
sbb
addl
rcll
adc
pop
push
sbb
mov
popf
std
bound
fldl2t
xor
xchg
movsl
pop
icebp
in
loop
adc
movsl
iret
mov
add
test
cmpsl
mov
movsl
iret
andl
sti
mov
mov
push
lds
gs
or
add
sbb
mov
ja
and
pop
popf
and
pop
mov
mov
daa
dec
inc
pusha
shrl
pop
inc
lret
mov
pop
mov
cmp
addr16
lock
sbbl
push
sub
inc
insb
adc
pushf
fstps
cmpsl
in
pop
xor
and
mov
cmp
int
rol
loopne
out
hlt
push
mov
movsl
mov
lret
testl
pushf
lods
push
cmpl
push
xchg
fisttpll
fdivrs
or
test
dec
popf
sub
mov
loop
adc
mov
adc
rclb
and
cmp
lret
mov
cli
push
adc
or
cmp
adc
jno
imul
cmp
inc
enter
movsl
dec
add
pop
jne
or
mov
push
shlb
movsl
in
sbb
mov
push
adc
popa
push
outsb
add
mov
in
mov
ss
mov
adc
fmul
fwait
movsl
mov
sti
push
movsl
ret
sub
pop
lahf
sbb
jbe
movsl
add
mov
hlt
movsl
loop
push
jge
cs
aam
adc
inc
push
data16
jne
jns
push
jno
std
dec
imul
jp
stos
sub
sahf
and
mov
adc
movsl
push
outsl
cmpsb
fadds
out
int
mov
push
subb
mov
pop
test
int3
push
mov
jmp
sub
adc
dec
lods
jl
or
xor
cmpb
sub
imul
cmpsl
setp
popf
push
sbb
or
insb
push
jp
cmpl
pop
pop
fmuls
cmp
push
movsb
mov
adc
mov
inc
addr16
test
popf
mov
dec
lock
imul
movsb
movsl
push
jg
stc
stos
mov
adc
xchg
movsl
ds
movsl
movsb
add
adcl
arpl
outsb
iret
pop
movsl
mov
jg
mov
out
mov
rcrl
fimull
ret
pop
aaa
mov
test
popa
movsl
sbb
and
adc
into
mov
fnstsw
in
cmp
outsb
sti
lahf
mov
push
adc
inc
mov
jp
incb
sahf
pop
xchg
movsl
add
mov
neg
dec
xchg
in
rol
fiadds
mov
movsl
mov
push
test
les
xlat
mov
inc
enter
out
movsl
out
pop
sbb
adc
in
and
ror
jp
dec
push
je
xchg
movsl
dec
repz
mov
pop
sub
shll
xchg
cmpsl
push
movsl
lock
sbb
ljmp
add
inc
jle
and
lret
mov
inc
and
std
inc
dec
aad
movsl
dec
ljmp
movsl
jmp
cld
stos
cmp
mov
lcall
loope
xlat
inc
in
js
sub
imul
into
movsl
mov
sbb
out
insb
out
movsl
adc
lea
mov
movsl
and
ffreep
mov
add
aad
xchg
test
negb
mov
leave
push
pop
push
cmp
ds
xchg
movsl
les
cmpsb
addr16
add
push
fnstcw
dec
push
addr16
stc
jae
lods
frstor
xor
movsl
lahf
ror
loopne
jb
dec
adc
leave
xchg
mov
or
mov
test
xchg
jmp
dec
fmull
mov
add
or
mov
dec
fs
imul
icebp
push
sub
xchg
jl
ljmp
movsl
fimull
cmpsl
push
repnz
mov
imul
inc
movsl
je
mov
mov
mov
mov
cmp
xor
data16
mov
inc
gs
xchg
dec
or
leave
or
in
fs
push
outsb
dec
dec
movsl
ljmp
adc
lret
andl
add
call
jb
imul
cmp
shl
in
pusha
movsl
lret
sub
subl
imul
movsl
data16
or
pusha
movsl
aad
out
sub
mov
pop
imul
negb
mov
ja
ljmp
xchg
mov
test
mov
gs
push
mov
jle
decl
mov
cmp
inc
movsl
std
imul
packuswb
mulb
and
sub
shld
scas
or
nop
and
xor
xor
movsl
in
add
mov
das
mov
pushf
xor
adc
inc
hlt
add
cmpsl
cmpsb
movsl
imul
or
movsl
sub
notl
dec
cld
push
or
js
fldenv
stos
mov
icebp
jle
cmp
outsl
inc
scas
xchg
cmp
dec
adc
es
cwtl
inc
xor
cmp
inc
pushf
and
and
add
stos
mov
xchg
push
jnp
int3
cld
lea
ds
pop
in
sahf
dec
js
imul
fldl
inc
insl
movsl
jae
nop
adc
or
inc
add
cmp
arpl
test
insl
imul
jne
adc
cmp
xchg
pop
cwtl
sbb
movsl
xchg
push
push
fcomi
mov
cmc
xor
dec
xchg
insb
nop
imul
xor
jo
pop
jns
ljmp
aas
movsl
loopne
addr16
divb
scas
mov
shlb
pushw
adc
movsl
push
xor
mov
pop
rcll
adcl
push
inc
add
outsl
cwtl
mov
adc
sbb
aaa
js
out
aas
rcrb
dec
inc
je
incb
and
movsl
push
cmpsb
adc
outsb
ljmp
movsl
xor
lcall
inc
loopne
std
scas
mov
cli
fstl
push
scas
sub
pmulhw
je
test
mov
xor
aas
and
xchg
pop
lods
fwait
push
in
sbb
nop
adc
call
popa
movsl
loop
cwtl
push
pmaddwd
pop
lahf
inc
add
in
mov
xchg
mov
push
rcrb
push
stc
add
xor
mov
mov
cmp
fadds
iret
ja
movsl
fnstcw
cs
xchg
mul
mov
outsb
push
icebp
imul
call
push
sub
mov
test
xchg
sub
js
pop
fildl
cmpsb
outsb
stos
cmc
insb
out
fisubs
pop
push
add
dec
test
or
and
bound
movsl
fistps
cmp
cmp
leave
mov
loop
shrb
stos
shl
fs
mov
fwait
lds
or
jbe
pop
or
add
loopne
jmp
sarb
cmp
rcll
lea
sti
clc
scas
pop
inc
xchg
movsl
mov
mov
ret
in
andl
stc
mov
pop
jl
out
lock
movsl
inc
cld
clc
adc
mov
cmpl
ret
or
inc
mov
pop
test
mov
movsl
cs
sti
mov
ljmp
xor
sub
or
mov
dec
push
push
pop
xchg
ljmp
add
adc
push
add
and
push
mov
add
mov
cmc
mov
loop
cltd
cmc
std
jecxz
out
pop
movsl
mov
adc
outsl
arpl
or
add
stc
dec
movsl
jmp
jp
adc
lret
sbb
in
out
bound
jmp
or
mull
mov
pop
aad
out
or
test
inc
test
jnp
pop
movsb
adc
ret
and
cli
lods
ljmp
inc
test
mov
pop
ja,pt
cld
push
std
mov
and
pop
std
add
scas
sub
xchg
xor
xchg
cmpsb
mov
push
sub
inc
loope
hlt
jns
negb
fistpl
les
sub
xlat
fstpl
or
and
enter
mov
pop
into
or
and
aaa
push
insl
cwtl
and
push
and
push
sub
daa
adc
in
jae
and
lods
jge
out
test
push
rcl
mov
jno
icebp
icebp
or
jno
int
jmp
cmpsb
popa
xchg
test
leave
inc
mov
mov
cmp
add
daa
stos
aaa
std
sti
or
add
sub
inc
jno
nop
xor
and
imul
push
loope
pop
cmp
and
mov
jmp
mov
sub
dec
mov
outsl
add
clc
add
icebp
jmp
pop
or
adc
pop
mov
lea
addr16
negb
out
pusha
mov
sbb
sbb
push
mov
fisttpll
lock
lcall
loope
mov
fcoms
sahf
mov
daa
in
movsl
lret
imul
cs
iret
ljmp
cmpsl
hlt
pop
outsb
cli
stos
inc
repnz
or
cmc
js
cmp
js
pop
pop
test
mov
cld
rorl
mov
pop
test
movsb
pop
pop
outsl
test
mov
inc
mov
cwtl
cltd
in
jmp
push
cwtl
cmc
lahf
push
mov
inc
stos
sahf
fcomps
lcall
inc
lods
jnp
jle
les
jo
jo
and
or
pop
out
movsl
pop
inc
inc
mov
popl
jno
add
jnp
into
loop
push
push
xchg
pop
mov
mov
jns
in
jp
ret
push
inc
pop
inc
stc
and
fistl
push
out
lcall
or
repz
dec
jge
clc
in
inc
mov
lcall
xchg
sbb
jns
mov
push
cmp
jle
int3
mov
cs
lcall
or
pushf
inc
stc
sahf
pop
daa
push
push
enter
in
ss
inc
insl
dec
setae
and
outsl
fdivr
fnstcw
xchg
push
inc
fdiv
inc
movl
das
push
mov
fwait
rcr
jp
jecxz
iret
mul
std
rclb
xor
mov
mov
inc
inc
aad
sub
insl
add
data16
hlt
lods
pop
sti
or
sbb
xchg
loope
add
pop
adc
imul
lea
push
insb
movsl
push
jecxz
stc
mov
inc
cmp
shlb
inc
fbld
int
pop
pop
leave
lds
mov
mov
ljmp
lds
sbb
movsl
pop
insl
fxch
clc
push
das
test
mov
or
lods
movsl
jb
mov
loop
push
inc
push
push
or
sbb
or
repz
mov
movsl
iret
push
add
jmp
cwtl
lret
movsl
jne
movsb
scas
test
daa
pop
inc
stos
bound
push
mov
aad
mov
nop
or
repz
mov
or
stos
mov
movsl
mov
enter
movsl
jle
fildll
xchg
pusha
pushf
mov
sub
adc
xchg
movsl
push
push
enter
or
movsl
push
lods
mov
jae
sbb
and
arpl
push
push
int
cmp
push
push
fnstsw
movsl
push
hlt
mov
pop
mov
sub
je
mov
adc
movhps
xor
push
movsl
clc
cmp
xchg
push
out
int
lcall
movsl
mov
mov
add
cwtl
mov
inc
and
dec
hlt
shl
imul
int
into
mov
imul
xlat
mov
pop
dec
push
movsl
cmpsb
mov
xor
xor
jge
out
into
push
sbb
xchg
mov
sub
and
movsl
je
aas
fadds
jne
movsl
lret
in
push
sbbb
jg
lds
sbb
sub
movsl
aad
adc
movsl
jmp
lahf
inc
add
incb
inc
sub
xorb
add
aas
sti
and
jae
insl
cmpsl
lret
movsl
jg
push
jbe
lock
mov
and
out
or
mov
add
imul
mov
inc
je
idiv
lcall
js
adc
loopne
mov
lods
add
aad
sbb
and
xchg
xorb
shll
sahf
xchg
cmp
jb
fnstsw
movsl
xor
aaa
ss
or
or
pop
movsl
repnz
xchg
mov
lahf
adc
xor
xchg
pop
movsl
clc
stc
jno
sbb
push
and
push
push
xchg
push
cmpsl
pop
jge
sbb
inc
push
stos
filds
push
dec
and
jae
cmp
xchg
add
subl
ficoms
and
movsl
jmp
jle
pop
shlb
lock
bound
sbb
add
xlat
cmpsl
fs
ljmp
push
bnd
dec
jb
mov
cmp
movsl
or
in
movsl
out
stos
adc
xor
mov
lds
dec
push
movsl
imul
scas
pop
and
pop
popa
jle
mov
xchg
ret
adc
popf
mov
into
jnp
pop
sub
loopne
and
mov
clc
movsl
in
cmc
pusha
outsl
add
dec
movsl
test
das
bnd
fisubs
fstps
lret
mov
mov
cli
shrl
in
and
adc
nop
mov
inc
pop
cltd
movsl
jg
or
jmp
add
inc
imul
test
test
xchg
sub
movsl
int3
mov
icebp
add
jo
sub
negl
sbb
push
in
cmp
mov
es
adc
mov
pop
mov
lcall
xchg
stos
mov
ret
sub
dec
js
in
loopne
movsl
aam
fdivr
aad
por
sub
mov
sub
cmp
add
sti
lds
and
pop
aaa
in
cmp
insb
loope
mov
push
out
pop
xchg
jge
pop
in
mov
mov
mov
jb
jecxz
fiaddl
inc
movsl
arpl
cld
sbb
in
and
pop
cmpsl
aas
cmpsb
mov
and
or
data16
sub
adc
or
jne
cmc
push
dec
sbb
mov
mov
mov
cld
into
fst
out
movsl
bound
push
fucomip
push
pop
pop
imul
sti
into
fsubrp
sbb
scas
std
mov
xchg
lea
push
xchg
leave
icebp
mov
shufps
mov
es
out
push
lret
movsl
clc
pusha
pop
xor
mov
ds
movsl
enter
lahf
cmp
push
js
dec
sub
in
out
aam
xor
movsl
cltd
cmp
sbb
inc
stos
in
movsl
arpl
mov
mov
mov
lret
ss
test
xchg
movsl
stc
mov
cli
outsl
rolb
pusha
movsl
pop
cmpsl
fdivs
sbb
adc
movsl
cmpl
gs
inc
lea
ljmp
pop
test
jle
mov
adc
mov
adc
cmpsl
stos
xor
popf
sub
lret
scas
pop
movsl
dec
sti
pushf
mov
push
movsl
mov
lcall
push
jl
in
arpl
inc
mov
je
testb
movsl
sti
add
repnz
movsl
fistps
mov
or
xchg
adc
lcall
std
rorl
adc
cmc
mov
lahf
jb
xor
gs
pop
inc
jbe
aam
or
movsl
mov
dec
mov
outsl
pop
stos
movsb
adc
lds
imul
inc
aas
adc
inc
mov
bound
outsl
btr
cmp
or
int
popf
outsb
mov
jns
std
test
cltd
inc
xchg
and
inc
sbb
ret
lret
test
in
xlat
mov
pop
or
into
add
decb
cli
in
out
cmp
movsl
stc
push
ret
or
movsl
clc
mov
inc
out
dec
shlb
mov
dec
push
xchg
test
and
and
scas
test
cmpsl
dec
ja
lds
jl
std
fmulp
imul
mov
push
int
xor
movsl
arpl
dec
pop
dec
fsubl
mov
test
adc
mov
jecxz
jnp
nop
sarl
mov
popf
and
stos
in
inc
xchg
sub
jno
mov
cmc
ds
shlb
aaa
push
lret
dec
movsl
push
adc
int
jns
in
arpl
data16
jbe
imul
jg
hlt
inc
push
test
in
pop
leave
adc
mov
dec
movsb
mov
inc
or
add
aaa
mov
inc
scas
adc
fwait
out
stc
pop
push
adcl
leave
out
mov
inc
movsl
mov
pop
movsl
sbb
mov
shll
lahf
int
add
and
incb
pushf
xchg
jnp
jmp
dec
xor
je
pop
gs
xor
test
movsl
sub
mov
inc
and
mov
pusha
sbbl
scas
movsl
xchg
das
or
pushf
adc
cwtl
in
enter
popa
shrl
test
push
movsl
inc
add
mov
fisubl
mov
and
insl
push
pop
movsl
and
mov
or
pop
push
in
sahf
movsl
shrb
movsl
push
mov
popa
cwtl
adc
lea
jne
jg
dec
lds
in
shlb
out
pop
scas
mov
clc
cmc
jmp
sbb
xchg
movsl
mov
mov
gs
in
data16
jmp
sub
and
movsl
push
or
in
int
cli
out
movsl
icebp
in
cmp
lret
lods
jge
dec
loop
cmp
psrlq
in
and
and
lods
movsl
sbbl
std
jns
pop
mov
mov
add
push
cld
outsb
leave
xor
sub
fcompl
shlb
mov
daa
mov
lods
movsl
outsl
imul
movsl
fnstenv
repz
xor
sti
mov
jg
mov
mov
adcb
iret
movsl
leave
call
push
dec
push
cmp
movsl
or
and
mov
sub
movsl
add
mov
into
nop
or
iret
popf
cwtl
cmp
mov
add
cmc
or
mov
or
mov
movsl
sub
mov
xor
dec
dec
mov
cmpl
repz
stos
lcall
je
and
dec
cmc
test
lret
in
movsb
or
andb
in
sahf
inc
pop
movsl
mov
cltd
test
jmp
mov
in
pop
aad
rorl
mov
fbld
in
add
inc
lods
cltd
fisubrl
mov
xor
aas
xlat
lock
jmp
pop
aad
mov
mov
popl
in
stos
dec
outsl
dec
cmp
pop
mov
pop
in
aam
push
js
movsl
xor
imul
inc
sbb
fiadds
xorl
sub
jnp
cmp
jge
push
xor
aas
sti
fsub
movsl
sbbl
xor
xchg
dec
orl
sub
bound
pop
pusha
xchg
cmpsb
mov
loopne
test
inc
mov
and
movsl
nop
and
movsl
push
xchg
mov
cmp
out
hlt
xlat
xor
inc
cmc
cmc
lea
or
mov
movsl
sub
enter
push
cli
add
push
xor
xchg
js
pop
bound
jecxz
repz
mov
and
and
clc
xlat
je
shlb
inc
xor
movsl
jmp
and
and
addr16
jp
cmp
stos
cmc
and
mov
stc
aaa
call
mov
or
ds
adc
cmp
push
jnp
movsl
sub
test
push
test
stc
into
ret
sbb
leave
hlt
in
stc
aad
movsl
shl
mov
cmp
sub
adc
int3
movsl
iret
fstpl
fsubp
xchg
xchg
add
pop
pop
stc
pop
mov
call
mov
pop
loop
mov
dec
mov
movsl
mov
lock
ljmp
push
aaa
test
fisubs
adcl
lods
jb
movsl
and
js
mov
pop
jmp
cmpsl
push
lret
hlt
fs
jmp
dec
xor
in
push
inc
mov
jge
inc
pop
or
and
lds
or
lahf
cmp
ret
dec
aam
mov
movsl
jge
and
filds
add
push
movsl
bnd
xchg
mov
push
je
jle
cmpl
mov
and
mov
dec
mov
imul
pushf
mov
hlt
add
push
faddl
adc
mov
movsl
loop
dec
mov
negb
repnz
or
shrl
movsl
add
in
test
out
or
icebp
ficoml
mov
cmpsl
ret
rol
xchg
in
lea
jnp
inc
mov
mov
enter
push
movsl
lea
xchg
xor
mov
mov
adc
sbbb
jl
jo
dec
jbe
inc
test
sbb
jmp
das
cmc
mov
subb
das
stos
test
and
jnp
jecxz
dec
and
push
pop
dec
cmp
push
sbbl
decl
imul
dec
andl
jle
test
adc
lcall
in
lcall
pop
sub
cmp
cmc
movsb
icebp
rcrl
fdivl
sub
push
negl
arpl
inc
shrd
incb
lahf
inc
and
lock
lcall
int3
sbb
movsb
cmp
aam
sub
js
lcall
mov
or
cmp
jo
push
sbb
push
cmp
test
flds
data16
leave
xchg
fucomip
cs
loope
pop
mov
add
movsb
loopne
sub
test
loop
jbe
adc
xor
dec
adc
cli
xor
js
shll
xlat
sub
fs
rcr
aam
sub
fidivrs
xlat
and
sbb
xchg
sbb
aaa
adc
test
xchg
std
or
cmp
cld
fwait
loope
icebp
and
cmp
and
fadds
daa
movsl
mov
dec
mov
in
imul
push
dec
popf
sbb
lcall
sti
int
sub
fwait
sub
insb
xchg
adc
in
mov
push
jne
push
adc
jb,pt
cltd
sub
push
movsb
clc
and
adc
js
gs
jge
sub
jge
sahf
push
sbb
cmc
out
in
cmp
cmp
cmp
test
pop
ret
xlat
push
cs
nop
loopne
ss
add
lds
jmp
sti
sbb
lods
jno
out
mov
xchg
sbb
add
subl
bnd
sub
sahf
mov
push
movsl
xchg
popf
xor
jmp
popf
xor
enter
movsl
and
pop
aad
andb
mov
popf
insl
pushf
jmp
push
dec
jns
movsl
sub
push
pop
scas
or
xlat
mov
clts
push
clc
int
push
or
jecxz
jmp
pop
cli
add
push
jge
mov
pop
mov
pop
test
push
mov
mov
xchg
mov
sbb
mov
insl
inc
add
sub
movsl
or
cmp
imul
ja
push
notb
jmp
stos
push
mov
frstpm(287
inc
mov
cmpsb
dec
imul
out
jo
dec
and
lods
shld
push
test
mov
inc
pop
loop
pop
std
dec
add
enter
or
ds
jo
ret
int
popa
dec
outsb
frstor
xchg
mov
aaa
movsl
arpl
loopne
outsb
cld
lret
movsl
jo
pop
adc
adc
test
movnti
popf
mov
mov
mov
pop
mov
std
vcvtpd2dq
dec
xchg
xchg
fldenv
es
push
inc
sub
loop
repnz
sti
xchg
jecxz
cmp
xlat
xchg
enter
movsl
ror
call
movsl
bound
sbb
mov
add
cmpsb
in
in
fucom
adcb
jne
mov
lahf
xor
xchg
xchg
shlb
icebp
movsl
and
repz
xor
movsb
mov
jno
push
loopne
jne
int
in
fidivrl
pushf
imulb
mov
movsl
mov
cltd
xchg
mov
sub
sbb
cltd
cmp
adc
ret
cmp
xchg
pop
imul
push
add
or
cmpsb
xchg
test
cmp
je
lods
pop
push
mov
push
mov
leave
je
leave
movsl
or
shll
dec
movsb
mov
cs
hlt
cmp
es
loopne
adc
rcr
add
inc
js
fs
movsl
add
int3
into
andb
cmpsl
incl
adc
test
mov
adc
cwtl
movsl
pushl
cmp
xchg
loope
outsl
dec
data16
fld1
add
dec
add
push
repz
or
lcall
outsl
push
dec
jb
push
pop
push
test
add
cmpsb
add
inc
movsl
rolb
mov
aad
cli
mov
xor
mov
cmp
sub
lahf
pop
jp
push
pop
movsl
jg
mov
add
movsl
mov
adc
xor
fadds
cs
popf
jb
popf
movsl
adc
inc
xor
enter
mov
sbbl
sub
mov
jecxz
lds
cli
outsl
pop
test
cmpsb
stos
mov
pop
or
cmc
repnz
add
cld
ffreep
popa
xor
movsl
ljmp
push
and
in
add
loope
loop
call
fs
insb
outsl
add
mov
sarb
shll
call
mov
adc
jmp
test
lds
dec
push
cld
cs
pop
mov
ret
xor
bound
push
dec
rcrb
movl
dec
dec
outsl
jno
xchg
adc
fs
mov
jae
out
lahf
cmp
mov
mov
jns
test
inc
movsl
xchg
sub
jnp
fidivrl
and
cltd
sub
in
push
cmpsl
inc
xor
mov
fcoms
js
sbb
mov
add
aas
pushf
mov
cmp
mov
sbb
push
addr16
femms
fs
and
adcb
insl
pushf
loopne
out
shl
mov
cs
call
lcall
jecxz
lods
sti
sbb
leave
mov
mulb
mov
adc
cmp
call
bound
shlb
js
out
movsl
fldenv
jno
push
jbe
jmp
fmul
repz
adc
movsl
pop
cltd
test
aad
std
dec
mov
dec
push
or
or
mov
mov
scas
push
fcmovnb
punpcklbw
mov
arpl
pop
mov
andl
mov
push
cmc
add
jge
pop
lea
jg
aaa
movsl
xchg
lcall
movsl
add
pop
sub
push
imul
test
mulb
xor
daa
test
movsl
xchg
jae
clc
or
ljmp
jb
adc
mov
inc
inc
push
pop
sub
or
test
dec
movsl
push
lock
ret
std
pushf
jmp
movsl
jne
pop
push
cmpsl
add
xor
xchg
movsl
push
dec
xor
sub
push
pop
pop
pop
mov
dec
out
movsl
fdivrl
test
imul
sahf
std
or
loopne
push
or
mov
push
adc
scas
inc
stos
movsl
sbb
mov
mov
sub
movsl
das
mov
push
mov
adc
jmp
push
mov
sub
movsl
pop
data16
pushf
cmc
mov
movsl
sub
sti
loop
fwait
ds
inc
fcomi
mov
movsl
pop
jmp
and
movsb
xor
mov
rcr
movsl
cwtl
sub
jp
insl
movsl
rolb
cmp
push
cmc
jns
or
pushf
or
popa
in
adc
rcrl
xchg
mov
push
xchg
pop
test
xchg
adc
pushf
int
movsl
in
inc
call
cwtl
fbld
stc
movsl
aam
cmc
push
loop
flds
movsl
xlat
ljmp
movsl
adc
push
stc
movsl
add
lahf
das
mov
and
test
adcl
addr16
jnp
xchg
xor
movsl
cmc
int
inc
adc
xchg
and
mov
flds
arpl
sub
cmp
mov
sbbl
pop
imul
pop
cmp
pushf
xor
sub
popf
push
lret
aas
popf
pushfw
movsl
mov
pop
ret
das
inc
sbb
movsl
xchg
xchg
mov
shl
sub
out
add
cmp
stos
movsl
fcompl
hlt
leave
popa
inc
pop
movsl
stc
push
mov
mov
sbb
movsl
insl
sbb
mov
scas
pushf
scas
ficomps
or
or
cltd
sarl
push
dec
mov
scas
mov
pusha
insl
adc
inc
movsl
xchg
lret
sbb
outsb
movsl
pop
jb
loope
aam
in
test
jo
push
insb
and
call
mov
bound
in
adc
lahf
push
dec
pop
dec
adcb
sbb
loopne
notb
int3
pop
out
pop
in
xor
cmc
add
adc
sti
movsl
add
imul
xlat
dec
pop
push
insb
push
cmpsb
test
movsl
stos
xchg
fdivl
cmp
jmp
mov
movsl
mov
fdivl
fidivrl
lock
mov
push
daa
adc
cmpsb
movsl
fcmovnbe
int
pop
sub
xchg
and
jp
jo
push
mov
addb
ret
inc
cmp
cmc
and
repnz
icebp
pop
fmull
sbb
pop
fcoms
pop
test
cmpb
adc
loope
and
sub
std
mov
and
inc
cld
xor
inc
jbe
pop
xor
aas
sub
js
adc
leave
sbb
jmp
roll
notl
xchg
mov
mov
stos
mov
incb
clc
movsl
mov
in
pop
jbe
shrl
gs
rep
jp
js
cmpsl
jnp
fmulp
xchg
adc
pushf
arpl
mov
and
and
pushf
in
mov
push
repnz
popf
push
lcall
dec
sbb
sbb
lods
inc
movsl
cltd
ss
xor
movsl
gs
jecxz
inc
push
adc
adc
in
sub
and
ret
xor
mov
push
or
xchg
fildl
lds
xor
and
movsl
repnz
mov
push
mov
js
lods
pop
mov
push
icebp
xorl
pop
in
sarb
sub
subb
cmp
lods
in
mov
fsubp
cmpsl
jmp
mov
xchg
movsl
jecxz
sub
movsl
pop
ds
mov
movsl
adc
imull
push
imul
or
cltd
ds
movsl
and
loop
out
mov
test
mov
vcvttpd2dqy
imul
sub
push
inc
stc
std
jbe
cmp
shlb
mov
adc
or
pop
inc
movsl
mov
movsl
aaa
pushf
adc
movsl
mov
and
lcall
ficompl
test
mov
inc
adc
dec
lret
pusha
inc
jo
mov
shl
outsb
add
xchg
repnz
lea
imull
mov
or
movsl
adc
fdivrs
stos
inc
lcall
push
push
mov
int3
inc
hlt
daa
inc
movsl
cmp
jecxz
movsl
or
inc
movsl
pop
mov
mov
movsl
icebp
jp
add
pop
mov
pop
adc
gs
ljmp
jb
insb
mov
mov
push
pop
pop
movsl
xchg
mov
sub
push
fsts
ret
test
pop
push
and
idiv
clc
cli
ja
std
mov
rcrb
movsl
sub
mov
movsl
inc
sbb
pusha
sbb
push
movsl
mov
push
cmpsl
xorl
push
cli
movsl
js
push
push
inc
adc
mov
fs
xor
je
push
jg
mov
mov
pop
mov
mov
xor
shlb
dec
insb
mov
add
stos
inc
mov
mov
clc
lds
push
in
movsl
mov
sbbl
fnstsw
loope
mov
mov
mov
hlt
and
ret
sub
sub
enter
fcmovne
mov
aad
cmpsb
push
inc
popa
lret
out
jo
lret
outsl
idivl
pop
popa
pop
dec
test
dec
movsl
push
iret
sbb
scas
scas
xor
dec
jl
shrl
jg
into
das
xchg
sub
cmp
push
push
jae
clc
in
imul
or
xchg
push
movsl
jg
pop
fs
mov
adc
cmp
lods
movsb
test
popa
jp
std
les
push
mov
sbb
push
mov
jmp
mov
mov
push
inc
cmc
mov
rcrl
jmp
cmc
mov
add
pop
sub
jmp
jo
push
cld
pop
jne
xor
pop
out
jbe
sbb
mov
stc
mov
movsl
sbb
and
int3
loop
xchg
cmp
movsl
jae
fildll
iret
add
lret
inc
movsl
test
mov
inc
jo
test
pop
pop
push
mov
ret
repnz
push
cmp
in
fistl
add
nop
cld
je
movsl
jns
jle
pop
pop
cmpsl
sbb
movsb
aad
xorl
mov
inc
icebp
pop
dec
movsl
push
enter
call
dec
jo
aaa
xor
xchg
mov
xchg
mov
adc
dec
jno
fnstsw
movsl
adc
enter
mov
xchg
jp
lods
mov
and
dec
test
push
ret
inc
xchg
shll
xor
in
movsl
rolb
fistl
sbb
inc
std
xchg
pop
push
push
jnp
call
js
inc
popa
negb
add
push
aaa
mov
adc
xor
mov
mov
jae
jmp
and
mov
and
call
pop
orb
lds
or
jmp
mov
push
jl
add
mov
adc
loope
loope
fdivrs
std
movsl
imul
jp
mov
test
fcmovu
imull
push
addr16
test
lods
xchg
loop
adc
lret
adc
daa
and
pop
jmp
std
push
add
push
xchg
test
mov
push
movsl
dec
adc
and
inc
leave
shll
add
loop
sub
push
pop
pop
aad
and
pop
stos
or
mov
mov
flds
and
cmp
in
pop
or
fwait
xchg
cmp
cmpsb
hlt
add
jp
movsl
jo
jne
dec
sub
mov
aas
movsl
sti
mul
dec
je
and
dec
jo
pop
leave
mov
icebp
or
pusha
add
sub
inc
lea
std
add
cmp
sahf
cmp
mov
pop
dec
adc
pushf
jecxz
in
cmp
sbb
jmp
mov
jg
mov
fsubrl
je
inc
in
jmp
push
incb
sahf
sahf
xchg
fstpl
nop
sbb
mov
push
jae
adc
test
js
cmpsb
jg
movsl
insb
cld
lret
fdivr
jbe
and
enter
movsl
mov
test
iret
movsl
jae
inc
adc
decl
xchg
and
lods
mov
mov
fadd
inc
movsl
and
sar
js
and
arpl
in
cmp
adc
test
movsl
inc
stos
pop
mov
movsl
mov
imul
pop
jmp
mov
mov
dec
jl
arpl
int3
jmp
lcall
jg
mov
pop
ffreep
lods
push
mov
movsl
dec
mov
pushf
fsub
aam
andl
es
push
in
inc
sbb
scas
outsb
push
insb
dec
popa
out
in
addr16
sub
xchg
scas
pop
inc
pop
in
jns
es
add
enter
test
and
in
fs
add
add
adc
add
sub
or
jmp
cli
jle
iret
dec
adc
lcall
inc
mov
dec
add
mov
pop
movsl
imul
pop
push
push
push
and
push
push
mov
js
lods
mov
les
and
cmp
xchg
pop
imul
mov
mov
pop
stos
xchg
or
mov
pop
aad
out
push
or
ljmp
cltd
or
leave
call
xor
mov
push
insb
and
xchg
repnz
inc
inc
and
fiaddl
insl
pop
aad
mov
stos
in
rorl
cmc
enter
in
aad
jmp
sahf
mov
lds
adc
ror
xchg
mov
idivb
xor
pushf
addr16
mov
loope
pminub
xlat
pop
inc
outsb
dec
stc
mov
adc
in
mov
call
movsl
aas
xor
lahf
pop
insb
sub
pop
out
ljmp
in
lock
add
dec
mov
pop
idivl
sub
mov
into
mov
push
inc
xlat
icebp
and
add
mov
push
loopne
aad
mov
pushf
adc
dec
fsubs
dec
aad
mov
loop
lods
pop
mov
test
push
pop
pop
ja
push
icebp
js
push
fwait
mov
fmul
stc
sub
sbb
jmp
dec
dec
and
cs
xor
sti
cs
testb
mov
imul
cwtl
ds
mov
loopne
test
xlat
test
mov
jle
sbb
cld
lea
ret
sbb
or
cmp
rclb
out
stos
lods
sbb
add
idivl
stos
sub
idivl
clc
inc
sti
lcall
mov
popf
and
gs
cld
mov
inc
mov
inc
test
loopne
in
push
nop
lods
lret
fcomp
adc
add
test
mov
clc
hlt
outsl
jnp
push
fs
adc
fstl
cwtl
pop
fsubrs
imul
test
mov
test
scas
and
push
mov
lock
ss
sbbb
divl
jmp
push
les
sti
lods
addb
jb
and
movsl
lock
das
pop
lods
adc
mov
mov
xchg
repz
mov
sub
js
dec
jae
mov
mov
in
cmpsb
add
icebp
cmpsl
and
and
sub
sub
pop
push
pop
jne
and
leave
mov
mov
out
mov
add
mov
popa
stos
mov
mov
lods
push
jbe
xor
in
sahf
cmp
and
imul
pop
inc
je
test
and
pop
inc
cmp
jp
addr16
push
jle
in
cwtl
aad
xor
and
jnp
ja
xlat
lret
and
xlat
lret
andl
cs
frstor
push
mov
sarb
push
dec
cmp
sahf
movsl
mov
es
xlat
hlt
and
mov
ss
rolb
push
shlb
in
or
push
insl
lods
sbb
xchg
xor
dec
mov
xchg
aas
cmc
icebp
loopne
mov
bound
push
and
movsl
pop
jl
sub
inc
incb
or
jae
loope
mov
orb
cmp
out
mov
stc
ljmp
push
sbbl
mov
test
daa
pop
cmp
push
inc
jg
movsl
sub
out
dec
int
movsl
inc
lods
pop
stos
mov
repz
dec
adc
push
movsl
mov
dec
test
pop
dec
jl
cmc
mov
movsl
jbe
gs
mov
lret
call
in
fcomps
dec
adc
mov
inc
in
xchg
push
jmp
movsl
xor
mov
aam
jmp
cmc
std
dec
mov
scas
movsl
repz
imul
popf
iret
pushf
mov
jge
in
dec
lods
fyl2x
pop
inc
call
pop
cmpsl
fidivrs
movzwl
cmp
pop
dec
js
lcall
pop
sbb
pop
pop
push
or
jbe
test
scas
inc
movsl
sub
int3
jns
xchg
xchg
sub
inc
lods
mov
into
inc
das
lds
mov
mov
xor
pop
rorl
dec
jno
aad
add
add
jb
fs
cmc
movsl
pop
dec
test
sbb
cld
sbb
xor
mov
ret
movsl
mov
pop
and
movsl
lcall
test
pop
jb
shl
popa
scas
and
xchg
lret
and
xor
mov
stos
lods
push
movsl
jmp
popl
movsl
xchg
cmp
sub
or
nop
xor
sub
push
aaa
and
clc
cwtl
mov
mov
mov
iret
xorb
mov
mov
mov
movsl
pop
and
in
cwtl
push
mov
jnp
jb
jp
jmp
movsl
imul
xor
je
pushf
push
movsl
dec
insl
mov
sti
movsl
fcompl
jmp
imul
daa
movsl
jp
mov
mov
test
adc
cwtl
jg
out
movsl
rdpmc
mov
iret
xchg
test
addb
xchg
lret
movsl
cli
inc
test
ret
add
frstpm(287
pop
insb
jae
mov
dec
in
mov
cmpsl
dec
movsl
aad
push
loopne
mov
mov
out
movsl
scas
pop
jae
dec
adc
movsl
rcr
adc
push
jbe
movsb
movsl
xlat
in
xchg
and
mov
add
hlt
mov
mov
sub
push
pop
insb
mov
rol
xorl
in
out
stc
movsl
loopne
gs
adc
push
dec
mov
inc
sub
push
imul
lods
movsl
sub
insb
pop
pop
jg
jb
out
mov
scas
movsl
jae
cmp
out
movsl
pop
sbb
lea
and
or
mov
jmp
pop
push
pop
aaa
je
iret
or
std
int
or
pop
cmc
inc
addr16
xor
add
mulb
movsl
push
clc
lret
flds
pushf
sub
or
rcr
das
mov
sahf
mov
enter
pop
sbb
leave
jl
mov
lret
push
icebp
in
call
mov
push
in
pop
out
movsl
sub
enter
mov
lds
inc
inc
pushf
mov
add
movsl
ret
cwtl
xchg
daa
sub
and
push
fwait
movsl
push
sahf
js
data16
push
call
sub
or
inc
nop
adc
mov
xchg
shll
mov
inc
xchg
mov
push
dec
push
dec
shl
mov
movsl
testb
inc
pusha
push
add
movsl
dec
add
bound
shlb
repz
lds
nop
movsl
scas
iret
jmp
movsl
inc
aas
jp
data16
sub
xor
dec
scas
adc
push
sahf
dec
and
mov
inc
sub
cld
repnz
aam
pop
pusha
jle
adc
pop
dec
movsl
cmp
xlat
push
clc
call
add
out
in
xor
cmpsl
dec
sub
into
stos
mov
rolb
xor
mov
rcrb
movsl
pop
cmp
cmpsl
push
mov
leave
aad
mov
inc
out
movsl
int3
xor
pop
ljmp
int
cli
leave
mov
stos
sbb
jmp
inc
movsl
push
xchg
cmp
jge
clc
ret
scas
int
add
jp
adc
dec
sub
test
inc
jae
mov
xor
or
pop
test
xorl
and
mov
xchg
ss
lahf
enter
mov
mov
sub
pop
push
imulb
das
ret
movsl
cld
scas
stos
movl
pop
inc
mov
and
int3
lods
adc
loop
movsl
outsl
pop
out
fwait
pusha
int
movsl
inc
inc
lea
pop
dec
outsl
jmp
mov
divl
pop
ret
std
lret
pop
stc
mov
push
and
gs
into
sbbl
sahf
mov
adc
outsl
dec
fldenv
repz
add
push
and
inc
sbb
rcrb
jge
sbb
testb
aam
out
add
movsl
lock
sahf
popa
mov
aad
cmpsb
pop
mov
push
pop
rcrb
aaa
pushf
stos
push
adc
cmpsb
jb
jle
paddusw
push
fiaddl
jbe
xor
clc
mov
ljmp
adc
in
aam
push
xlat
cmp
push
push
jbe
ret
cmp
shrb
iret
popa
aam
movsl
fadds
in
jmp
and
and
cli
inc
ljmp
jmp
mov
sbb
xor
xchg
pop
xor
stos
movsl
ret
pushl
test
add
push
int
ljmp
sub
xchg
mov
xchg
mov
pop
inc
out
sarl
pop
cmp
inc
movups
push
movsl
mov
rol
in
les
popa
jo
ljmp
pop
push
cmp
lea
out
mov
ret
adc
lock
out
pop
shr
cli
std
aam
add
into
lds
test
push
stc
pop
pop
sub
jp
fsubrs
fbld
or
push
rol
loop
movsl
mov
je
mull
pop
loope
sub
mov
inc
push
in
inc
inc
xchg
movsl
popf
xor
movsl
add
jge
ds
movsl
insb
lcall
lcall
adc
leave
inc
movsl
jecxz
xor
in
movsl
cmp
cmp
fldenv
adc
push
lcall
data16
int
sti
lds
stos
or
mov
add
movsl
cmp
xchg
lret
add
std
int
fisubs
pop
test
xor
sub
movsl
jmp
xchg
mov
movsl
ret
cld
rcrb
mov
inc
fwait
adc
cs
test
and
cmp
adc
fisttpll
lods
inc
imul
fscale
jbe
fdivrl
and
movsl
lods
push
outsl
adc
loopne
movsl
add
bnd
push
adc
test
xlat
xor
fcomps
cmc
cmpsl
mov
stos
jb
xchg
push
push
lcall
std
stc
lahf
imul
jne
sub
cmc
shlb
push
or
movsl
stc
cmpsb
popa
sbb
pop
lock
xchg
jecxz
dec
fwait
movsl
cmp
and
mov
movsl
aas
mov
mov
ljmp
inc
addb
xchg
xor
jo
movsl
lret
in
mov
sahf
call
enter
mov
call
cltd
movsl
in
in
test
and
xor
das
mov
fcmovbe
pop
mov
sbbb
cld
lret
or
and
iret
hlt
scas
and
mov
cmpsb
adc
pop
dec
int
icebp
leave
movsl
test
popa
xor
mov
mov
movsl
mov
dec
mov
add
or
andb
loopne
add
arpl
xor
push
jns
pop
daa
sub
or
dec
mov
mov
sub
insl
mov
hlt
push
imul
movl
or
jmp
push
mov
lds
test
xchg
push
push
pop
mov
in
mov
adc
pushf
sub
mov
mov
push
mov
fcoms
dec
xchg
sub
mov
sub
out
pop
mov
push
int
outsl
cwtl
fldt
rorb
lods
subb
mov
cmp
movsl
cmc
in
sbb
pop
mov
mov
add
mov
push
inc
jge
out
lret
test
adc
pop
inc
movsl
notl
cwtl
movsl
rol
imull
xchg
cmp
or
and
pusha
call
dec
adcb
xor
xchg
int
psrlw
movsl
or
stos
mov
and
lods
jo
in
shl
add
int
mov
shll
pusha
xchg
mov
es
aam
stos
mov
stos
pop
fbld
mov
movb
xor
or
je
dec
inc
in
push
call
dec
movsl
sahf
inc
mov
xchg
or
dec
mov
adc
cs
mov
jno
mov
xchg
or
xlat
lahf
pop
or
xor
fisubl
add
xorl
mov
shl
sahf
dec
movsl
mov
lahf
mov
xchg
scas
pop
dec
dec
jo
jnp
xor
in
adc
sti
dec
insb
xchg
iret
mov
int
lods
sub
movsl
outsl
in
and
pop
test
movsl
inc
mov
push
movsl
jo
test
movsl
and
and
test
xchg
jmp
sbb
ud2
aas
or
aaa
mov
fcmovnu
mov
ret
in
mov
movsl
stos
lret
arpl
push
jg
mov
rolb
push
xor
sti
xlat
sbb
adcb
mov
mov
jbe
and
mov
imul
movsl
cmp
dec
mov
jae
add
jbe
mov
pop
xlat
lcall
loopne
mov
mov
outsl
or
imull
push
cli
mov
sub
push
jmp
sahf
add
out
enter
js
test
ja
unpckhps
xor
mov
mov
fs
push
aam
mov
mov
scas
push
or
pop
je
cmp
inc
popa
jge
sbb
sbb
insl
test
xor
imul
fisttps
mov
clc
fcmovnu
mov
repnz
dec
push
push
hlt
add
pop
jle
adc
in
jp
lea
or
ret
mov
movsl
mov
mov
jg
shlb
int
and
mov
movsl
ss
add
xlat
imul
movsb
xor
movsl
sbb
mov
jmp
testl
jns
mov
out
adc
pop
js
ret
repz
ss
push
xchg
fstpl
push
sbb
sub
movsl
xchg
push
aaa
mov
iret
xchg
shr
lret
lods
movsl
jl
leave
fchs
jae
mov
pop
cmp
xchg
fdiv
movsl
adc
iret
push
insb
pop
outsl
popf
ljmp
jge
push
movsl
fisttpll
mov
movsb
mov
in
aas
push
mov
add
out
ficoms
push
out
pop
jecxz
shll
push
add
sbb
cmpl
jne
mulb
shlb
movsl
or
clc
stc
data16
sbb
das
mov
ficoml
idivl
in
add
jmp
pop
int
push
or
lret
push
jnp
imul
pushf
das
movsl
test
cmpsb
cmp
adc
xor
jl
push
or
lds
movsl
push
push
cmpsb
xor
arpl
movsl
mov
js
add
enter
adc
inc
or
sbb
test
daa
js
xor
dec
fcomip
mov
les
lods
lods
mov
push
xchg
mov
mov
loop
js
jae
push
imul
mov
mov
imul
sbb
out
icebp
jge
sbb
mov
xchg
lret
out
add
aad
lahf
nop
sbb
test
iret
cmpsb
sub
pop
icebp
jmp
push
jns
movb
adc
outsb
xchg
movsl
jno
in
aaa
mov
pop
jge
hlt
mov
jmp
mov
pushf
in
mov
cmc
and
movsl
or
cmc
mov
movsl
test
pop
pop
push
push
sub
jns
cmp
out
movsl
leave
je
dec
jbe
out
mov
movsl
xchg
cltd
into
cs
fmull
test
pop
push
je
and
out
sbb
xor
fcom
fisttps
mov
and
sahf
jno
fiaddl
mov
es
movsb
mov
jp
mov
xchg
ret
fidivrl
adc
movsl
outsb
pusha
ja
out
push
enter
in
sbb
in
movsl
push
sub
test
daa
xchg
adc
lods
sub
sub
dec
out
cmc
sub
movsl
jb
inc
mov
mov
pop
or
sub
pop
cmpsl
movsl
adc
aad
cmp
jo
adc
sahf
sbb
movsl
add
lret
imul
pextrw
fidivrs
insb
add
adc
xor
imul
jae
jne
mov
addb
repz
pushf
xor
nop
mov
and
add
add
add
mov
lds
cmc
jae
xchg
pushf
xchg
das
je
jecxz
call
add
and
mov
jb
push
mov
movsl
adc
dec
jp
in
lods
outsb
out
fcomp
fsts
pop
rcl
dec
data16
lock
fstpt
fisttpll
std
aaa
mov
sub
jae
mov
push
pop
std
dec
in
jne
mov
imul
rcrl
out
jno
int
mov
and
lea
out
dec
cld
movsl
jmp
cmc
jmp
mov
test
push
ret
inc
or
mov
cltd
insb
out
pop
daa
movsl
mov
aam
push
jae
push
movsl
jns,pn
mov
imul
lahf
mov
pop
dec
pop
movsl
xchg
xchg
jmp
out
movsl
rcl
push
xchg
fs
leave
movsl
mov
jecxz
data16
mov
loope
xchg
aad
aam
and
in
xchg
aaa
sbb
ljmp
out
ret
ja
test
sbb
mov
jp
push
add
adc
and
push
jnp
ds
cli
movsl
ret
jecxz
lret
xor
cmp
jb
movsl
and
lea
sbb
inc
nop
fstl
les
add
push
push
push
movsl
adc
in
and
rcr
jne
push
sbb
shll
xchg
mov
xor
mov
inc
mov
decb
mov
add
lcall
je
push
popf
jg
pop
aam
sub
jnp
inc
mov
lods
sub
rorl
dec
mov
xor
mulb
mov
scas
or
movl
xor
stos
and
loop
loope
daa
and
inc
jns
jg
adc
movsl
mov
popf
imul
shlb
jbe
rcrl
ljmp
outsl
fmull
sub
inc
inc
inc
sbb
sar
movsl
cmpsl
fdivs
in
ljmp
int
or
sbb
dec
inc
or
gs
pushf
mov
ljmp
or
ret
loopne
sub
pop
push
cwtl
jne
adc
leave
jle
jb
sahf
jmp
ljmp
sub
andl
cmp
aas
adc
das
inc
popf
mov
push
inc
mov
and
mov
fwait
mov
add
dec
mov
cmp
xor
lcall
push
out
jp
add
mov
and
stos
xlat
loope
aad
add
es
push
aam
fnsave
sbb
cmpsb
rcr
mov
orl
jns
xchg
fcmovnu
and
xlat
cmpsb
repnz
testl
add
and
pusha
jb
adc
movsb
sbb
shrb
xlat
xor
stos
mov
rcr
push
loop
pop
dec
sbb
fisttpll
sub
jmp
cld
test
in
sti
fcmovb
fdivrs
aaa
xor
xchg
lcall
sub
lods
je
in
and
push
xchg
call
push
movsb
addr16
push
rorl
xor
mov
stos
sub
stc
jle
jo
test
mov
push
mov
shll
repnz
sub
iret
aas
icebp
stos
xor
pop
xlat
cli
sub
and
std
fnsave
sbb
loop
std
cmp
add
fildl
xchg
ja
int
loopne
adc
mov
ljmp
stos
push
imul
scas
mov
cwtl
sub
testl
std
addl
jp
pop
lcall
outsl
leave
pop
rcll
test
lret
cmc
mov
push
sub
mov
enter
adc
inc
add
stos
cwtl
pop
popa
mov
mov
cmp
sub
sbbl
mov
push
add
mov
cld
outsl
leave
mov
sbb
lods
sub
and
test
js
xchg
mov
ja
adc
sbb
pop
sti
fcmovbe
lods
les
mov
jecxz
pop
fsubrs
popf
push
cmp
mov
loop
shlb
aaa
lock
jmp
mov
cmpsl
test
sbb
push
ret
pop
outsl
cmc
std
push
add
sbb
dec
push
add
lahf
dec
mov
jmp
add
jp
add
sbb
jns
icebp
mov
inc
cltd
roll
roll
sbb
rclb
cli
sbb
movsb
sahf
sbb
lods
or
cli
leave
inc
movsl
js
fimull
mov
imul
test
xchg
sbb
lcall
sub
cmc
push
cmp
das
jnp
inc
push
push
xlat
push
call
in
mov
push
cmp
jnp
pop
cmp
mov
adc
mov
xchg
push
mov
sbb
stos
mov
cmp
fsincos
shl
movsl
lret
cmpsb
or
cli
add
jne
movsb
repz
aas
cltd
cmp
mov
add
incb
into
in
aas
mov
test
mov
mov
in
cmp
add
adc
scas
rcrl
jbe
int
push
repnz
addr16
call
mov
in
nop
fwait
mov
test
jb
jge
or
add
mov
and
jl
cld
loope
xchg
imul
scas
jne
cmp
pop
mov
cmpsb
popf
sub
ret
or
add
dec
sar
rcrb
and
cwtl
or
mov
movsl
sub
js
sahf
popa
push
or
movsl
mov
mov
add
scas
sahf
pop
mov
or
push
in
int
or
scas
sbb
mov
leave
xchg
loope
stos
test
or
or
xor
movsl
pop
fs
test
mov
jg
stos
cli
ss
cmc
sbb
xor
aam
loop
pop
aaa
movsb
mov
adc
ret
sbb
lds
mov
push
pop
and
stc
insb
shll
xchg
add
movsl
shr
mov
xchg
cmp
push
cmp
mov
bndstx
add
out
daa
lock
movsl
mov
pop
shld
adcl
mov
aaa
and
lods
loop
inc
xchg
mov
mov
jg
sti
ret
sbbl
sbb
mov
orl
pop
xor
xor
cmp
push
jnp
mov
lds
jno
xchg
push
sub
lods
or
mov
imul
daa
xor
mov
mov
xor
mov
mov
int
movsl
stc
leave
ljmp
ret
movsl
or
arpl
stos
sti
repnz
mov
popf
jne
pusha
iret
jmp
lods
jg
pop
leave
xchg
fsub
std
frstors
push
cmp
sbb
xlat
dec
in
in
vmovshdup
inc
dec
bound
push
adc
and
lds
into
adc
loop
aas
scas
mov
lods
js
inc
sti
sahf
push
insl
dec
inc
cmc
cmpsb
jl
pop
in
add
sbb
in
insb
jecxz
jno
ret
pop
sub
inc
mov
inc
add
punpckhbw
push
lea
mov
scas
movsl
adc
in
push
movsl
jl
fbld
add
popl
push
nop
adc
sbb
or
mov
and
lds
mov
lods
adc
mov
push
mov
cmp
xchg
movsl
sbb
pop
outsl
bound
or
movsl
pop
out
jns
mov
mov
shll
movsl
push
sub
dec
push
loopne
roll
xor
jp
dec
cmpl
movsl
push
add
xlat
movsl
test
lds
mov
mov
fldcw
mov
mov
flds
mov
lods
sarl
pop
mov
pop
or
add
cli
fdivs
mov
fwait
scas
movsl
cmc
dec
nop
les
divb
mov
test
fsub
pop
in
rcll
test
lret
cmpsl
sbb
push
or
imul
lds
sub
clc
call
in
ss
jg
fsubl
push
into
xlat
clc
jmp
sbb
inc
notl
pop
js
pusha
movsl
fs
xchg
into
arpl
dec
mov
fdivr
xor
imul
jne
inc
push
push
pushf
push
movsl
pop
mov
lds
shll
rolb
rcrl
dec
jb
sbb
aaa
in
testb
stos
mov
push
sub
cmpsl
sub
fistpll
inc
or
or
sub
enter
mov
in
test
pop
mov
stc
mov
adc
inc
aaa
fs
stos
push
test
add
shl
fstpt
fsubs
and
int3
out
cwtl
jns
pop
hlt
idivl
dec
push
arpl
and
in
lds
aad
icebp
sbb
mov
nop
mov
shlb
xor
cmc
add
push
pcmpgtb
inc
pop
jbe
popf
movsl
fwait
sbb
std
sahf
test
int3
pushf
leave
stc
pusha
jmp
pop
call
jl
push
gs
jmp
addr16
xor
sbb
mul
data16
aad
mov
test
movsl
mov
cmp
popf
push
and
ljmp
into
xchg
or
jl
push
lods
adc
push
mov
and
or
pop
xchg
rclb
cmp
mov
adc
movsb
add
mov
data16
mov
or
leave
mov
cmc
or
mov
test
movsl
sub
inc
push
mov
lods
lds
cmp
je
inc
inc
mov
data16
inc
xchg
cmpsl
xchg
jp
movsl
imul
sbb
repnz
ret
push
sub
cmp
or
inc
cmp
mov
lds
ret
jp
push
pop
pop
inc
addr16
out
jnp
testl
inc
jl
push
lahf
movsl
and
xchg
cmp
test
lahf
pop
jae
inc
xchg
cmpsl
inc
daa
punpcklwd
and
leave
xor
ror
movsl
mov
mov
sahf
jns,pn
bound
out
pop
dec
adc
xlat
movsl
loope
or
mov
sub
pop
xchg
cmp
and
jmp
movsl
call
cmp
les
and
movsl
jge
pusha
pop
out
inc
icebp
pop
lea
sbb
mov
into
push
mov
adc
sbb
push
addb
fsubrs
xchg
sbb
mov
adc
jle
adcw
loop
mov
mov
jb
and
icebp
inc
js
or
lods
sub
mov
or
pop
mov
pop
mov
mov
mov
enter
divb
gs
sbb
sbb
jbe
sti
dec
pop
add
xlat
movsl
sub
xchg
inc
out
pop
xchg
in
cld
sbb
outsb
sbb
inc
movsb
mov
cmp
addr16
xor
movsl
insl
or
adc
movsl
sub
leave
test
and
fdiv
jo
dec
movsl
or
mov
or
dec
aas
mov
icebp
in
aam
cld
movsl
sbb
insl
movsb
popf
dec
xor
cmpsl
bound
push
sbb
stos
mov
cmpsl
call
jle
dec
mov
sbb
pop
cmpl
inc
lods
fldt
lea
and
dec
pop
push
or
scas
shrl
movsb
mov
orl
test
insl
jmp
and
sbb
adc
fstps
std
xchg
xor
cs
jbe
in
icebp
andl
ret
cmpsl
outsl
dec
les
movsl
loopne
testb
mov
ret
sbb
mov
push
movsl
pop
je
rcrb
xchg
insl
inc
or
jns
xchg
and
mov
pop
movsl
fldt
sub
movsl
sahf
xor
xchg
fcomps
or
rcrl
and
mov
pop
ror
and
or
cmc
xorb
sub
sub
mov
mov
jl
repz
or
test
insb
xchg
movsl
mov
loop
mov
xlat
push
dec
test
cmp
imul
enter
addr16
loopne
repz
pop
dec
in
mov
xor
out
icebp
mov
aad
cltd
mov
jb
movsb
push
movsl
in
daa
pop
xor
add
lock
xlat
mov
insb
dec
and
adc
in
div
iret
add
movsl
stos
push
jns
pop
pop
les
stc
std
notb
repz
xor
movsl
push
shr
add
std
jmp
jmp
inc
test
pop
ret
dec
adc
cmpb
in
mov
test
mov
sahf
out
xchg
pushf
sti
neg
add
stos
cmpsb
pusha
jb
rolb
push
popf
ret
out
jns
ss
sti
mov
xchg
mov
jmp
push
subb
and
add
pusha
mov
and
cmc
mov
popa
sbb
mov
divb
sub
loope
sbb
fcoml
xor
icebp
push
mov
add
es
mov
sahf
loop
lock
push
ret
lret
jns
xlat
mov
leave
fisttps
xchg
fcomps
pushf
adc
sbb
lahf
movsl
push
pop
xor
ret
sbb
dec
lret
mov
adc
mov
movsl
out
push
enter
mov
cltd
inc
jmp
bound
test
add
jne
rcrl
and
je
mov
lds
pop
insb
cmp
xchg
seto
inc
sub
mov
das
mov
xchg
cwtl
testl
sbb
mov
pop
xor
cmp
and
add
lcall
pop
pop
push
insb
mov
xor
lret
cwtl
sbb
xchg
movsl
inc
fistpl
adcb
xchg
xchg
jno,pt
pop
pop
mov
lret
hlt
cmc
xchg
adc
cs
dec
ja
adc
sbb
scas
or
dec
js
movsl
push
mov
ret
movsl
pop
sahf
addl
aas
xor
adc
mov
sahf
mov
sub
ret
stc
dec
mov
mov
ret
cwtl
push
pop
jmp
scas
test
loope
mov
and
lret
scas
cmp
movsl
testl
aas
cwtl
pop
int3
jmp
dec
inc
out
mov
out
push
jne
popa
and
movsl
pop
and
inc
xchg
mov
push
xchg
jae
pusha
in
ss
xchg
mov
pushf
jbe
in
dec
imul
inc
inc
movsl
xor
aaa
scas
adc
cmpsl
add
and
mov
xor
mov
mov
out
jne
int
call
add
mov
ret
xor
jg
mov
xor
repz
fsubr
rcl
add
jmp
movsl
test
test
mov
mov
in
lret
fldenv
jl
push
jbe
cmpl
xor
mov
mov
das
and
jp
jl
dec
imul
or
sub
mov
movntps
xor
pop
in
sbb
mov
mov
divl
aaa
lcall
and
fdivrp
lock
pop
jecxz
notb
mov
adc
movsl
rolb
aas
mov
mov
jg
mov
cmpl
adc
and
and
inc
push
xor
adc
loope
cmpl
in
cmp
fistpl
pushf
negb
jge
int3
ja
loop
mov
and
out
and
adc
mov
in
pop
stc
cmpsb
scas
xchg
push
jecxz
jge
and
in
add
xchg
je
dec
loop
xor
adc
mov
or
andb
ret
sub
and
in
push
movsl
pusha
sub
sahf
push
or
test
outsb
movsl
daa
add
movsl
test
mov
enter
and
jbe
cmp
int
test
pusha
xchg
xchg
push
push
inc
vxorps
cmc
pop
sbb
or
push
mov
mov
test
mov
fwait
jb
shll
nop
cwtl
jg
movsl
sbb
jno
test
in
adcl
je
movsl
es
fs
fsubrp
adc
sub
into
mov
out
mov
sub
sub
push
popl
cli
cld
mov
fsubl
loope
cmp
jnp
cld
dec
pop
push
sbb
test
xchg
or
aas
test
sub
mov
out
shl
xchg
and
push
ljmp
dec
icebp
jge
movsl
out
mov
inc
xchg
mov
insb
mov
jb
out
loop
jmp
popf
pop
mov
dec
and
and
movsl
push
dec
mov
daa
arpl
dec
lods
push
shr
mov
mov
sbb
std
lock
popf
sub
ffree
mov
or
shll
js
movsl
aad
pop
into
in
dec
insb
movsl
inc
cmp
out
push
shll
inc
divl
lea
sbb
movsl
ljmp
adc
out
sbb
and
in
jbe
inc
jno
imul
pop
pop
out
test
mov
push
inc
mov
xchg
dec
push
xor
movsl
hlt
leave
data16
movsl
jmp
lods
sti
dec
dec
jl
add
mov
jge
jle
push
fs
popa
cli
mov
jp
mov
cwtl
cs
out
insb
dec
push
andl
inc
xchg
mov
and
inc
lds
ds
mov
movsl
xchg
sub
mov
sbb
movsl
lret
sar
movsb
pop
test
cmp
loope
out
fbld
cmp
sub
es
cmp
cmp
ds
ja
cmpsl
lds
mov
fwait
mov
dec
stos
add
cwtl
stc
scas
mov
and
lret
xor
in
or
movsl
inc
je
add
mov
mov
mov
aam
lods
xchg
xor
loop
lock
xchg
jno
jle
cmpsb
pop
aam
scas
movsl
nop
in
leave
fmull
adc
cmp
data16
mulb
movsl
pop
jmp
cld
fsubl
pop
lods
dec
sub
adc
push
sbb
movsl
fidivs
push
scas
and
out
sahf
push
inc
sbb
push
push
push
and
cmp
pusha
cmp
test
and
movsl
cmp
lock
shlb
lcall
lahf
jecxz
mov
or
pop
and
inc
punpckhbw
sbb
test
loope
add
ljmp
cmc
and
xchg
or
cmp
sbb
mov
adc
loop
or
arpl
call
fwait
popa
push
or
mov
std
mov
ret
lds
or
cmp
cmpsb
jno
fstl
cmpsl
xor
mov
es
and
mov
mov
pop
aad
jno
inc
jp
cmc
into
mov
ret
or
movsl
loop
lcall
cwtl
mov
xlat
xor
stos
or
mov
mov
test
aam
std
movsl
sbb
clc
or
pop
outsl
movsl
nop
inc
dec
or
in
movsl
dec
push
mov
movsb
ss
mov
andb
loop
add
movsl
mov
rcr
dec
les
movsl
xor
and
gs
jne
mov
rolb
dec
pop
mov
sarb
lahf
clc
push
daa
pushf
cmp
add
jno
movsl
frstor
adc
and
cmc
inc
cli
pop
cmp
jns
mov
dec
pop
add
mov
pushf
rcll
in
psubusw
cwtl
mov
mov
movsl
jmp
push
pop
mov
addr16
out
imul
fwait
pop
and
out
sbb
shlb
in
mov
movsb
add
cmp
xchg
sahf
xor
inc
push
fwait
cmp
icebp
mov
imul
rcr
sbbl
xlat
out
ss
movsl
inc
cmc
push
push
test
das
outsl
movsl
dec
pop
or
mov
sub
xor
cltd
movsl
xchg
loope
ds
cmpsb
adc
mov
mov
popf
cmp
dec
mov
inc
sti
pushf
movsb
xchg
stos
sahf
sbb
cli
aas
xchg
push
push
movsl
add
repnz
lea
mov
mov
shll
mov
rclb
movsl
call
out
jns
outsl
mov
movsl
nopl
fdiv
shr
sar
aam
inc
test
popa
jle
and
pop
push
out
fstpl
cmp
lret
popf
ja
call
int3
std
adc
pusha
and
push
into
adc
imul
mov
and
or
cli
inc
mov
xchg
cmpsb
push
popf
or
loope
daa
mov
jmp
mov
daa
adc
cmc
out
mov
xchg
and
repz
out
jge
scas
outsl
pop
mov
repz
or
int
and
fdivs
mov
sub
loopne
pusha
mov
adc
xlat
fs
aad
pushf
sbb
cmp
sarb
pop
or
aaa
mull
add
fnstcw
dec
xchg
mov
adc
ret
add
mov
add
dec
in
outsb
cwtl
test
mov
sahf
push
sbbb
sbb
arpl
inc
and
dec
fcomps
push
rcll
pushf
loope
imul
push
mov
push
sbb
cmc
xor
or
mov
or
xchg
in
lahf
test
test
in
mov
arpl
sub
es
cmp
mov
push
xor
jecxz
and
fisttpll
pop
adc
jno
loopne
out
mov
xchg
jno
lret
in
mov
sahf
rcrb
dec
fisttpl
sub
mov
push
aaa
test
push
movsl
jb
fldcw
push
insl
adc
shlb
mov
add
imul
and
fidivrl
loop
jg
dec
shrb
fs
push
jbe
push
data16
jecxz
div
mov
add
lods
inc
jg
pusha
adc
in
jl
lret
jge
fwait
mov
jmp
dec
mov
enter
popf
mov
loop
xchg
lock
inc
push
mov
jmp
scas
jbe
fwait
ss
mov
xchg
push
les
adc
inc
int
sbb
sbb
push
in
mov
shll
sub
jl
movsl
mov
fs
jmp
dec
fildl
test
lods
mov
movsl
in
mov
test
movsl
push
inc
mov
test
add
rcr
iret
and
sub
or
shrl
xor
xchg
gs
pushf
jbe
das
loope
jae
xchg
mov
loopne
js
iret
fistl
add
jno
loope
push
jmp
jne
xlat
in
and
xchg
test
jp
and
mov
or
int
in
pop
and
sbb
ffree
adc
adc
mov
adc
sbb
cmp
daa
add
sbb
add
cmp
xchg
jns
inc
push
cvttps2pi
or
inc
mov
cli
jns
std
popf
push
icebp
or
mov
adc
jl
pop
pop
je
jge
icebp
js
in
xchg
dec
mov
xchg
sub
mov
data16
pushf
push
dec
aad
or
adc
je
xchg
jns
or
adc
push
lahf
js
cmp
repz
mov
icebp
subl
in
cmp
aam
jle
dec
ja
jb
insl
loop
mov
cmpsl
mov
stos
sbb
hlt
leave
popl
sub
test
and
xor
lods
ja
test
mov
js
sbb
inc
movsl
stos
fdivl
mov
jecxz
lds
push
icebp
sub
adc
rclb
test
push
sar
adc
aad
loope
and
adc
pop
sub
notb
into
sbbl
jge
pop
hlt
pusha
add
roll
mov
cmp
fcompl
in
data16
enter
test
cmp
test
and
shl
push
xchg
rcrb
mov
jno
imul
nop
adc
popf
gs
fisttpl
dec
es
mov
jmp
mov
mov
or
xchg
inc
dec
int
or
lahf
or
ss
cmp
aas
out
dec
mov
push
xlat
icebp
sub
cwtl
pop
jae
popf
add
test
mov
sub
jno
arpl
test
cmc
jp
sub
idivl
push
outsb
pop
rolb
pop
stos
dec
popf
loopne
jmp
xchg
popaw
push
hlt
les
ret
and
sbb
cld
and
aad
xchg
inc
mov
out
jae
adc
inc
test
mov
incb
push
rcr
pop
mov
push
notl
sub
in
inc
int
adc
dec
fs
dec
js
pushf
dec
movsl
mov
xor
std
mov
dec
aas
pop
mov
sub
jbe
xchg
movsl
or
dec
cld
mov
scas
mov
pop
int
scas
mov
or
aas
mov
ret
adc
outsb
pop
push
test
pop
insl
jne
pop
and
mov
movsl
outsl
pop
xchg
pop
dec
xor
in
sub
sub
add
in
mov
sahf
xor
in
loopne
fsts
push
mov
arpl
add
sub
scas
movsl
push
je
cmpsl
js
ret
movsl
test
and
dec
xchg
xchg
lcall
fdivr
movsl
mov
scas
and
lods
or
aam
dec
mov
xor
jnp
mov
pop
les
adc
cltd
lcall
test
out
fdivs
xchg
nop
popa
jp
jmp
ret
or
test
mov
mov
adc
int3
shrb
movsl
xchg
mov
data16
adc
sbb
ljmp
jmp
jmp
out
pop
and
sub
sbb
lods
xchg
xor
mov
in
xor
jbe
pop
cmc
dec
mov
dec
cwtl
pop
cwtl
imul
popa
cltd
mov
inc
inc
std
lret
int
push
mov
cmpsb
ja
hlt
lods
mov
mov
push
fcoml
in
aas
mov
inc
add
mov
xor
pop
popa
mov
aaa
pusha
shrb
sbb
adc
push
js
mov
adc
mov
inc
data16
sbb
xor
popf
stos
movsl
add
cmp
push
mov
xchg
and
leave
sub
xchg
mov
hlt
scas
mov
int
push
mov
jge
sahf
jp
xchg
mov
mov
xchg
cmp
cmp
fwait
xchg
ret
jbe
xchg
xorl
loope
testb
xchg
and
movsl
xorl
lcall
mov
xchg
jecxz
mov
pop
outsb
aaa
pop
push
icebp
sbb
jns
sti
cmpsb
cltd
sub
add
xchg
mov
mov
mov
jno
aaa
fs
imul
jne
arpl
inc
xor
repnz
insb
ja
loop
xchg
or
bound
and
ret
mov
jae
andb
sti
mov
or
pop
xchg
jle
lods
in
jno
xor
fcmovnb
leave
movsl
push
and
mov
push
clc
mov
push
mov
movsl
fnsave
pop
cmpb
cld
pushf
cmc
jnp
xor
movsl
sbb
out
sub
add
mov
push
movsl
lock
dec
cmpsb
add
adc
or
sub
jg
xor
mov
sbb
fucom
mov
in
outsl
cmp
inc
hlt
cmp
fld
movsl
sbb
cmp
push
andl
cmpsb
cmp
mov
aam
std
dec
pop
pop
sub
stos
inc
movsl
cmp
repnz
adc
add
cmc
int3
mov
fs
fistl
xor
bound
mov
push
push
cmpl
mov
pop
int
push
movsl
add
ret
aaa
mov
jle
jnp
out
popa
mov
insb
mov
pop
pop
mov
push
inc
test
push
into
out
xchg
imul
jne
or
movsl
push
fists
not
fucompp
add
mov
sbb
lods
mov
pop
in
xlat
lret
test
in
mov
movsl
add
aaa
stos
je
outsb
jmp
lret
mov
clc
add
or
push
pop
adc
mov
movsl
push
jnp
lcall
imulb
pop
push
in
sub
pop
movsl
fistpl
gs
movsl
das
and
adc
add
sbb
xlat
xchg
and
lcall
dec
test
pop
pop
mov
cmp
and
xchg
xchg
ss
lods
aad
movsl
inc
dec
insb
aas
xchg
sub
movsl
int3
dec
and
jge
xchg
movsl
das
sub
mov
pusha
mov
leave
das
movsl
ja
push
jp
jae
or
into
pop
and
jno
aad
popf
adc
pop
imul
inc
xchg
mov
js
pushf
outsl
pusha
jnp
in
addr16
sbb
add
inc
shrb
movsl
jno
addl
movsl
and
mov
mov
lods
push
add
xchg
movsl
adc
divb
fcomps
mov
lds
aad
loop
push
xchg
jo
je
adc
in
lock
out
testl
dec
push
movsl
sub
es
xor
adcb
mov
sub
aam
repz
nop
mov
in
pop
test
fidivl
sbb
jnp
in
push
push
ret
scas
and
and
test
push
xlat
hlt
js
dec
cmp
xchg
das
outsb
mov
nop
ljmp
push
mov
fisubl
out
jmp
xchg
xchg
call
xchg
sub
fcmovnb
repz
mov
lds
mov
adc
xchg
popf
hlt
shll
subb
jmp
add
xchg
mov
ficoml
in
fdiv
movsl
out
jg
push
inc
neg
fldenv
pop
jae
loop
mov
mov
cmp
fwait
or
xchg
mov
xchg
movsl
push
addb
xchg
pop
jecxz
movsl
test
mov
jo
dec
fsubp
cmc
push
in
cld
xlat
jg
hlt
cmpsl
push
xor
xchg
push
and
mov
cmc
dec
test
popf
mov
push
pop
push
lods
int
sbb
cmp
sub
les
mov
leave
fldl
iret
je
out
movsl
in
dec
ds
ljmp
lds
pop
mov
lret
orb
xor
mov
sub
adc
lret
jg
outsb
movsl
sbb
movsl
xor
pop
pusha
push
ret
movsl
into
dec
std
or
shll
sub
mov
mov
jnp
ret
mov
loopne
bound
mov
lret
xchg
cs
xor
pop
stos
and
int3
sbb
sbb
inc
js
jle
push
jmp
into
or
pop
pop
pause
mov
movsl
loope
xor
pop
in
fsubr
addr16
push
dec
pop
inc
or
or
jle
jae
pop
jbe
mov
roll
pop
mov
jp
pop
jle
movsl
push
shl
mov
out
pusha
movsb
jno
jl
stos
push
loop
inc
push
sub
cmc
push
mov
inc
pusha
push
fistl
movsb
movsl
lds
add
mov
bound
mov
xchg
dec
mov
mov
mov
mov
fisubl
enter
mov
push
insb
mov
scas
inc
xchg
mov
lds
movsb
stos
sub
repz
movsl
dec
inc
jbe
aam
mov
sub
lds
pop
jle
jns
inc
jne
out
movsl
arpl
out
push
hlt
jno
movsl
push
sub
cmp
or
inc
in
dec
fs
jg
xchg
movsl
xor
dec
popf
decl
imul
mov
cmp
push
xchg
jo
inc
fwait
and
pop
rcrl
mov
xor
sub
or
cmp
mov
jnp
xchg
mov
fldt
add
mov
movsl
cmp
xchg
int3
jo
sub
and
adc
shlb
inc
sti
call
test
pusha
ret
cmp
inc
movsl
lret
inc
cmp
push
iret
pushf
jo
jbe
ja
aaa
jb
inc
int
cli
jp
movsl
adc
aad
mov
ret
and
cmpsl
xchg
and
mov
inc
xor
rcrl
movsl
or
jle
sub
xchg
sub
lret
data16
movsl
xchg
push
test
sub
movsl
xor
lea
inc
mov
xchg
mov
movsl
test
or
push
pop
stc
pop
movsl
jle
test
sahf
mov
cmp
sub
sbb
lcall
in
pop
jbe
xchg
scas
jl
in
aad
stos
mov
xchg
fs
mov
arpl
out
fisubl
and
loope
push
dec
mov
les
push
std
add
bound
pop
mov
mov
pop
lods
jo
pop
fidivrl
stos
mov
push
movsl
sub
ret
sbb
pushf
cmc
aad
adc
or
lcall
lret
fstp
pop
insb
call
aaa
shl
or
mov
sbb
push
aam
dec
xchg
sub
pop
fisttpl
stc
or
ljmp
iret
or
icebp
xchg
lods
push
cmp
es
dec
jbe
enter
add
sbb
pop
mov
sub
dec
fnstcw
push
lahf
xlat
ret
xchg
in
cmp
and
sbb
popa
sub
mov
sar
popa
sub
aaa
push
mov
pusha
loop
inc
adc
jns
stos
add
negl
or
sbb
gs
insl
dec
pop
rcl
cli
sbb
mov
or
test
inc
cs
push
xchg
dec
push
add
mov
lods
push
xchg
jp
je
movsl
pop
mov
or
sbb
xor
cmc
push
scas
sbb
xchg
movsl
idivl
std
lret
or
cs
sahf
lods
sub
lds
lahf
cmp
aam
pop
push
dec
lds
stos
lgs
sbb
mov
nop
xor
mov
mov
jae
insl
movsl
aam
push
or
pusha
pop
mov
dec
jb
jle
add
pop
popa
out
jmp
mov
fs
pushf
mov
les
dec
or
pop
xchg
and
jo
ficoml
pop
jecxz
movsl
mov
inc
push
jp
pop
or
scas
ja
ret
daa
nop
movsl
mov
mov
push
cmc
pop
data16
mov
push
push
outsl
cwtl
dec
outsb
and
xor
sub
cmp
je
jmp
out
call
test
fwait
scas
push
je
push
jb
mov
movsl
mov
mov
xchg
xchg
mov
enter
stos
movsl
call
and
movsl
test
loopne
pop
dec
lods
xlat
hlt
xor
xor
mov
sub
stc
stos
or
seto
xchg
push
stos
fsts
dec
or
push
movsl
fisubs
jg
movsl
cld
enter
jnp
out
dec
and
push
subb
movsl
ljmp
jle
lahf
cmp
push
mov
fsubrl
mov
je
in
adc
mov
les
mov
fwait
push
movsl
lret
jbe
stos
and
ds
pop
xchg
push
and
out
gs
pop
aam
mov
movsl
ja
scas
pop
cltd
sub
andb
cwtl
pushf
cmp
movsl
lds
pop
int
xor
mov
cmp
dec
and
cmpsb
add
xor
inc
shr
lock
mov
cltd
mov
mov
fstps
call
adc
movl
out
std
fimull
mov
jno
cmp
fbld
sub
int3
aaa
imul
sti
movsl
mov
inc
and
xor
sub
sub
sbb
push
cmc
ja
xor
popf
xchg
gs
and
adc
sub
repz
mov
pop
in
in
shlb
adc
inc
inc
lea
test
mov
inc
add
mov
loope
mov
test
ret
or
outsb
pop
lods
cs
lds
loope
mov
cmp
mov
and
mov
cmc
add
movsl
loop
jmp
sub
push
and
or
inc
stc
addb
jbe
inc
sarb
data16
inc
pop
dec
sti
repz
pop
lea
push
adc
loopne
sub
shll
dec
adc
bound
sbb
and
fldcw
mov
pop
aam
and
cmp
mov
push
mov
inc
adc
imul
in
inc
mov
adc
into
and
sub
push
mov
or
ljmp
sub
shlb
in
std
ja
sub
inc
or
in
testl
sarb
lds
mov
xchg
inc
movsl
and
leave
xchg
push
jno
jge
lret
sar
jl
jns
push
in
inc
movsl
sub
dec
movsl
frstor
movsl
test
dec
into
add
jns
cmp
dec
outsb
daa
faddl
or
movsl
popf
je
cs
es
lret
pop
push
in
xor
mov
and
xor
jmp
cmp
movsl
mov
inc
aaa
mov
mov
inc
sub
mov
cmp
ds
xorb
or
test
cmpsb
movsl
adc
jp
std
mov
js
sbb
cmp
movsl
cmp
jne
aas
pop
ds
mov
int
out
or
lds
nop
jmp
push
insl
pop
movsl
fs
push
rcrl
inc
jae
pop
xchg
cltd
mov
in
fadds
add
jecxz
ljmp
cli
lret
fsubr
jle
leave
jnp
push
sub
popa
andw
and
mov
in
xor
mov
mov
movsl
loope
jb
pop
pusha
out
lret
push
aam
jno
dec
in
insb
cmp
mov
cs
jp
xchg
movsl
into
out
scas
or
lcall
mov
popf
or
in
mov
mov
cmp
sub
xchg
enter
pop
push
iret
nop
movsl
xor
loopne
aad
pop
mov
or
iret
sbb
push
xchg
nop
dec
dec
cld
outsl
add
loope
cmp
push
pop
hlt
cmpsb
iret
leave
movsl
sbb
mov
fldcw
imul
xchg
inc
or
icebp
push
scas
xchg
ret
mov
mov
in
jmp
inc
mov
pop
push
sbb
jae
add
push
call
inc
adc
scas
inc
push
insb
movsl
movb
jle
repnz
jl
cltd
and
xor
mov
movsl
adc
andb
in
movsl
sbbb
jmp
icebp
xchg
push
xchg
mov
mov
push
mov
cmp
sti
movsw
and
push
adc
arpl
in
jno
std
movsl
aad
bound
pop
sbb
movsl
dec
in
sbb
nop
in
std
push
dec
jg
push
pop
jb
insb
fldl
notb
movsl
xor
pop
out
inc
push
dec
movsl
adc
xorb
jmp
add
push
popf
mov
pop
negb
add
add
rcll
movsl
shll
ds
jno
mov
fldcw
scas
aam
sub
and
pop
inc
imul
push
fsubl
adc
or
sahf
or
pop
insb
inc
adc
adcl
dec
jbe
ljmp
hlt
add
push
test
mov
movsl
inc
gs
mov
movsl
adcl
movsl
bound
cmp
in
dec
adc
add
fsubrp
mov
test
movsl
stos
push
data16
out
pushf
movsl
fimull
push
push
es
mov
mov
call
xor
sbb
dec
pop
imul
movsl
sbb
outsb
cmp
into
arpl
popa
and
int
xchg
stos
aaa
mov
divb
jo
incl
mov
push
mov
aas
sub
adc
mov
shll
dec
cmp
cmc
outsl
ljmp
movsl
cld
out
xlat
lock
leave
sahf
and
or
orb
xchg
pop
sub
xor
xchg
xchg
iret
push
cmp
fcmovne
xor
add
sti
into
mov
push
fmul
pop
insb
jnp
loop
pop
leave
insl
sti
jo
pop
ds
daa
clc
jnp
push
mov
mov
xor
nop
cmp
xor
inc
movsl
dec
stos
push
adc
add
std
jae
sbb
push
mov
and
mov
dec
pop
mov
pop
jg
mov
sub
sbb
nop
add
pop
decb
cmp
fisubl
call
mov
mov
mov
idivb
mov
cwtl
sti
test
sahf
shr
insb
pop
push
mov
shll
outsb
xchg
inc
sbb
movsl
int3
pop
imul
push
fmull
clc
jns
mov
jg
aad
mov
ficompl
popa
jb
imul
loopne
dec
aad
ljmp
jp
ja
arpl
pop
in
rcll
add
adc
mov
pop
cmp
aad
sbb
cld
pop
fwait
mov
and
cmovbe
sbb
mov
dec
addr16
cmc
in
adc
mov
add
das
orb
pop
in
jl
sbb
sbb
mov
test
scas
jo
negl
popf
fxam
pusha
mov
dec
mov
testb
std
jns
add
dec
cmc
xchg
xchg
sub
movsl
clc
lret
test
push
adc
movsl
xorb
push
xchg
ret
cmp
sub
shlb
test
jne
sub
insl
sbbb
push
sbb
adc
loop
leave
lahf
fbld
sbb
cmp
push
stos
es
in
test
or
mov
aam
out
movsl
in
test
cmp
in
sbb
out
jns
xchg
lcall
movsl
fadd
dec
out
scas
jae
movsl
addl
hlt
inc
and
push
jo
pop
in
repnz
js
movsl
test
mov
mull
movsl
add
ljmp
mov
rolb
movsl
pand
sub
out
je
mov
je
mov
dec
movsl
jge
out
ss
aam
movsl
add
mov
pop
mov
cwtl
adc
cmpsb
inc
jg
pop
pop
pop
stc
jnp
js
ljmp
scas
movsl
in
shll
dec
mov
scas
xrstor
sbb
insb
cmp
jb
inc
mov
stos
add
outsb
imul
pop
mov
mov
aaa
push
sti
dec
sub
sub
mov
aad
sub
gs
movsl
jno
lahf
cmpl
sbb
fiadds
ret
inc
stc
xor
and
test
sub
xor
in
dec
mov
cltd
insl
leave
adcl
ljmp
xlat
and
repz
add
xorb
push
movsl
xchg
mov
es
ljmp
inc
shrl
fwait
movsl
popf
sub
les
sub
movsl
scas
jg
into
pop
sbb
rcrl
out
dec
dec
lds
cltd
dec
mov
gs
scas
and
incb
lahf
xor
je
dec
in
fucomi
and
mov
test
int
lea
add
lds
mov
mov
sahf
sub
mov
and
or
cmpsl
cmp
and
jl
sbb
in
mov
and
pop
pop
or
mov
fsubrs
sbb
jae,pn
pop
cmp
movsl
or
push
cmp
addr16
pop
out
xor
ljmp
rcl
push
add
imul
and
mov
or
rcl
adc
outsb
dec
movsl
push
adcl
mov
loope
sti
mov
sarb
fists
insb
mov
xor
loope
lret
mov
adc
pop
lahf
test
mov
call
and
shr
out
mov
inc
insl
movsl
inc
cmc
std
lcall
mov
cld
mov
mov
mov
lahf
push
cltd
fnsave
arpl
mov
in
sbb
lods
jae
ret
mov
call
in
mov
fdecstp
jecxz
mov
pop
xor
fcmovb
pusha
inc
push
jne
xchg
cmp
in
mov
movsl
jle
push
jnp
mov
xor
lea
and
mov
xchg
mov
lock
push
and
cmp
das
sahf
sbbl
sbb
movsl
xor
loope
jb
into
shlb
mov
jmp
mul
push
mov
jge
fnsave
lahf
dec
ds
xlat
mov
dec
mov
add
sub
into
das
sbb
pushf
in
mov
sub
popf
inc
imul
jp
add
lods
jmp
popf
sub
push
fld
and
cmpsb
inc
cli
cwtl
mov
fstps
mov
es
sub
or
dec
sahf
stos
adc
int
push
cmp
aas
adc
inc
and
cmc
cs
stos
ret
xor
mov
ret
xchg
in
lret
mov
push
xor
ja
mov
icebp
push
adc
cmp
sti
sub
movsb
push
dec
daa
push
add
dec
pusha
dec
shr
push
icebp
or
jg
adc
sbb
andb
dec
mov
jle
dec
xchg
mov
cmp
pop
fidivrs
dec
sub
jo
push
outsl
mov
adc
fldenv
mov
mov
pop
test
repnz
cmpsb
andb
mov
fldl
pusha
bound
pop
push
sahf
in
aaa
inc
testl
push
std
sub
lret
pushfw
lret
cli
ja
inc
hlt
mov
mov
fldcw
jl
loopne
aam
xchg
imul
inc
fldcw
and
sub
inc
cmpsb
lock
fdiv
jp
mov
jnp
shrl
pop
mov
aaa
ljmp
xlat
and
pop
js
mov
mov
sbb
aad
xchg
stc
fadd
sbb
inc
mov
cmp
adc
adc
mov
inc
add
jbe
in
push
in
mov
in
arpl
enter
jb
loopne
stos
adc
mov
sub
lock
mov
mov
xchg
mov
fcom
xor
stos
aad
popf
insb
pop
les
jb
repz
outsb
loop
xchg
addl
sub
pop
inc
sbb
jno
daa
repnz
xchg
pusha
outsb
inc
fs
mov
mov
cld
movsl
and
pusha
push
ja
sub
mov
push
add
out
cmp
in
pop
fcmovnb
in
jecxz
xor
mov
mov
mov
movsl
call
xchg
cmp
imul
dec
lret
in
test
jl
test
sbb
cmc
dec
in
js
pop
sub
movsl
adc
sub
jne
cmp
xchg
ss
inc
lock
sti
push
addr16
add
cmp
movsl
int3
mov
xchg
movsl
and
mov
loopne
stc
cmp
xchg
jbe
out
mov
aad
loope
sbb
mov
inc
sub
ds
mov
dec
outsl
stos
push
scas
test
decl
out
pop
subb
mov
sbb
jno
addr16
pop
lret
jge
dec
negl
daa
sbb
adcb
movsl
add
add
lret
pusha
push
xchg
pop
or
push
clc
cld
in
xchg
test
movsl
lcall
sub
push
out
ljmp
loop
sti
aaa
in
roll
loopne
or
adc
iret
mov
repnz
jl
cmp
nop
xor
movsl
testb
cli
js
loopne
fidivrs
mov
cmp
stos
in
adc
sub
mov
push
movsl
sahf
mov
inc
loope
push
mov
movsl
mov
cmp
les
ja
jp
sbb
shlb
movsl
icebp
sbbb
push
pop
mov
sbb
sti
ss
sarl
or
hlt
push
movsl
sub
mov
dec
shlb
movsb
push
push
push
xor
lods
dec
andl
movsl
and
sarb
lret
sbb
movsl
mov
mov
movsl
mov
dec
cmp
movsl
mov
xlat
lret
jp
inc
sbb
push
pop
mov
adc
add
movsl
dec
dec
jnp
enter
movsl
out
adc
gs
pop
xor
cmpb
mov
popf
jle
mov
inc
sahf
cmc
mov
test
adc
fcoml
sbb
movsl
lock
loop
and
xor
shld
mov
mov
insb
push
jo
movsl
inc
aaa
mov
mov
movsl
repnz
add
repz
lcall
xlat
aam
mov
add
movsl
push
adc
mov
movsl
cli
in
ret
or
shll
dec
outsb
mov
cmp
dec
clc
mov
cmp
movsl
mov
cli
into
adc
pushl
aam
fsubrp
shll
lcall
push
mov
pushf
xchg
stos
sbb
xor
loope
test
push
jne
cmp
sub
sbb
aad
add
loop
pop
sbb
dec
inc
aad
imul
sbbb
repnz
movsl
jle
stos
cltd
insb
xor
xchg
rcrb
inc
mov
movsl
cmc
add
popa
xchg
fs
call
add
push
bound
xchg
fs
std
push
lds
sub
fsubl
rorb
xor
lahf
xchg
xor
andl
cld
sbb
movsl
sub
mov
xor
neg
push
out
mov
cmp
aam
jp
ja
in
pop
leave
cmp
movsl
je
int3
mov
loope
adc
sub
in
adc
movsl
inc
out
pop
sarb
push
xchg
mov
inc
dec
outsb
movsl
push
jns
mov
mov
or
cwtl
loopne
les
movsb
mov
jo
mov
xchg
in
push
movsl
sbb
mov
loope
xlat
or
inc
pop
movsl
xchg
and
lods
or
pop
xadd
lds
lret
cmp
xchg
mov
mov
in
aas
fsts
mov
add
pop
and
hlt
xchg
fistpll
ljmp
in
pop
mov
daa
iret
dec
add
mov
xchg
mov
xor
push
xor
or
jns
clc
push
movsl
cmc
mov
mov
movsl
cmpsl
mov
ss
ret
pushf
push
mov
shrl
nop
orb
sbb
xchg
xorl
or
adc
and
xchg
sahf
inc
mov
lds
out
sbb
push
ss
or
mov
in
fidivs
xchg
movsl
dec
fbld
das
xchg
xchg
sub
sti
iret
movsl
pop
mov
popf
popa
xchg
movsb
sub
push
xor
fs
adc
push
mov
not
adcb
add
ret
movsl
in
shl
aad
jmp
dec
push
lret
add
sub
negl
cmp
cmpsl
push
movsl
ds
cltd
shlb
int
adc
sbb
sbb
jnp
outsb
pusha
jge
movsl
sahf
aas
xor
int
loopne
in
enter
dec
mov
movsl
mov
cmp
jns
push
sub
test
mov
out
in
shr
jmp
pop
inc
adc
xor
movsl
add
int3
imul
int
sti
call
jo
out
xchg
movsl
inc
cmp
adc
adc
add
push
dec
push
mov
movsl
fadds
pop
out
jge
mov
mov
imul
imulb
lods
or
mov
pusha
outsb
xchg
mov
pop
cltd
mov
inc
es
mov
jns
ds
or
lret
filds
nop
pop
push
push
std
movsl
dec
pop
arpl
push
sbb
scas
xor
nop
adc
mov
cmp
xchg
mov
mov
movsl
repnz
dec
sub
test
movsl
insb
subb
sbb
inc
mov
aas
mov
mov
sahf
mov
sahf
jmp
pusha
aad
adc
movsl
ljmp
pop
and
enter
or
shlb
ljmp
or
mov
jmp
scas
xchg
movsl
cmp
es
out
cmp
jns
inc
cmc
cmp
xlat
popf
loop
ffreep
sub
cwtl
jp
test
data16
xorl
dec
jl
inc
mov
insb
movsb
movsl
push
fcmovbe
mull
mov
imulb
mov
aad
pop
jmp
aad
push
sbb
lret
sbbb
std
jno
jl
jo
movsl
jnp
jle
pop
clc
sub
cld
test
aaa
push
in
mov
mov
pop
and
or
dec
mov
pop
xchg
xchg
sub
mov
sbb
cmpsl
or
or
xor
movsl
std
scas
mov
adc
mov
lock
test
sbb
movsl
xchg
lods
xor
data16
pop
cmpsl
jmp
movnti
popf
xor
mov
movsl
push
or
cli
loop
jns
jl
sub
scas
jle
or
fcmove
xlat
cmp
movsl
xchg
mov
cmp
pop
movsl
jns
mov
mov
push
jae
adcb
mov
dec
scas
mov
shll
pop
jge
bound
jnp
xchg
ret
pop
mov
sbb
cmpsb
stos
or
imul
aaa
xchg
jle
divl
jge
jmp
andl
add
ja
adc
in
sub
movsl
or
test
movsl
out
xchg
mov
dec
int3
mov
or
les
adc
scas
xchg
outsl
and
add
aam
les
mov
adc
push
jmp
test
mov
cmp
aas
dec
mov
movsl
jb
in
enter
push
and
and
repnz
repz
push
push
and
insl
fmulp
sub
in
lods
xchg
leave
add
movsl
xor
mov
push
lds
outsl
xor
mov
mov
stc
lcall
movb
and
inc
xor
out
push
negb
xor
adc
sbb
jbe
sbb
jno
mov
test
mov
dec
aad
out
movsl
shrl
psubw
or
sbb
pop
xchg
test
mov
adc
enter
lret
pop
pop
mov
ljmp
outsb
ret
mov
addr16
movsl
pop
pop
push
mov
adc
mov
ret
mov
daa
scas
test
movsl
orl
enter
mov
je
lahf
fs
sbb
add
adc
mov
fists
repnz
movsl
add
pop
push
mov
mov
iret
cltd
popa
sub
mov
and
pop
test
or
frstor
and
sbb
mov
lods
mov
adc
aaa
add
push
sbb
stos
dec
pop
jl
mov
mov
jge
dec
movsl
aad
imulb
xor
cmp
movsl
xchg
adc
popa
insb
test
rclb
xor
jp
sbb
in
push
hlt
fistps
movsl
sbb
jl
call
fs
adcl
mov
pop
cmpsb
xlat
jp
fucomi
inc
in
std
popa
sub
sub
pushf
repnz
test
cwtl
vandps
aaa
mov
and
popa
stos
or
cmp
lahf
xorl
adc
and
add
or
mov
pop
test
push
pop
js
push
xchg
push
adc
and
mov
sahf
daa
adc
test
xchg
rorb
popf
dec
div
push
mov
jno
in
sti
pusha
sahf
pop
inc
mov
sbb
cli
out
and
clc
mov
or
mov
lret
cli
imul
pop
add
ja
pop
enter
mov
mov
jmp
imull
pop
xchg
ror
jge
rol
xor
and
cmp
sbb
test
mov
adc
std
lds
int3
and
dec
daa
pusha
loopne
sub
pop
or
loope
and
inc
je
gs
mov
or
pop
mov
push
je
les
lods
jecxz
mov
jg
push
cld
push
or
in
cmp
adc
stos
push
test
daa
mov
scas
cmp
ret
jb
lahf
loope
insb
cmp
sbb
jge
cmp
int
pop
testb
or
fucom
arpl
sahf
and
fistpl
dec
das
dec
mov
stc
enter
push
inc
push
sub
in
jle
sub
cmpsl
or
clc
pop
and
and
xchg
cmp
xchg
adc
movsl
mov
dec
stos
sbb
gs
movsl
dec
imul
lret
icebp
movsl
loop
jp
ret
or
aam
or
push
insb
iret
in
pop
mov
add
dec
push
orb
scas
pop
mov
add
lods
inc
adc
inc
xchg
mov
cmp
xlat
scas
in
jg
andl
mov
and
xor
daa
and
sbb
adc
mov
clc
movl
jbe
or
mov
and
xchg
lahf
cli
loope
into
out
fwait
jecxz
divb
or
les
fsubs
movsl
insl
xchg
xchg
cmpsl
icebp
xchg
or
cmp
lods
dec
andl
mov
movswl
mov
dec
mov
add
push
fisubrl
fdivr
test
dec
int
xlat
pop
daa
aam
jecxz
or
and
fisubs
sahf
sti
sbb
xchg
jp
pop
pop
adc
cmp
movsl
dec
sub
sahf
push
cmp
pop
mov
xlat
or
and
push
or
cs
ret
das
mov
sub
cmp
mov
rcrb
ret
mov
popf
dec
adc
popf
jle
jne
dec
cmp
pop
loope
xchg
mov
into
out
sbb
pop
xchg
adc
in
aaa
js
and
mov
and
xchg
test
lea
pusha
pusha
addr16
pop
stos
mov
sub
fcoms
adc
popf
xchg
lds
mov
cmc
imul
push
loopne
pop
lret
adc
fisttpll
dec
mov
push
popa
mov
in
repnz
out
fisttpll
push
repz
stos
je
mov
pop
pop
jge
fwait
mov
push
test
arpl
inc
lock
cwtl
push
icebp
ljmp
idivl
jbe
add
stos
adc
inc
jecxz
jle
repnz
stos
and
push
push
xor
test
lds
and
leave
jns
pop
mov
jmp
dec
jae
scas
lds
mov
mov
push
insl
inc
sub
movsb
pop
jmp
add
cmpl
cwtl
cmp
popf
jl
popf
adc
fistl
adc
push
add
mov
lret
inc
push
sub
cmc
ja
add
pop
sbb
adc
push
pop
icebp
std
fidivl
or
sbb
and
adc
push
aam
jne
xchg
fstpt
jg
fistpl
fcomip
bound
sub
cmpsl
adc
fbld
bound
inc
pusha
aad
mov
xchg
add
xlat
movsb
mov
sub
fistpl
fwait
ret
mov
push
sbb
push
push
sub
mov
test
pop
and
jnp
cmc
test
loop
or
aam
loopne
and
test
mov
lret
out
xchg
mov
xchg
xor
inc
jns
jecxz
fcompp
sub
mov
and
mov
movsl
nop
insl
add
test
mov
cmpsl
inc
xchg
int
mov
fcom
mov
mov
xchg
movsl
and
sub
movsl
iret
loopne
dec
pop
inc
lds
je
sub
std
xor
movsl
dec
push
jmp
mov
push
rcrb
push
loopne
push
dec
pushf
pop
jg
xor
mov
inc
rcll
xor
cmc
les
push
out
movsl
das
xchg
shlb
sbb
pusha
push
mov
addr16
std
add
mov
cmp
pop
test
pop
push
mov
and
aaa
stc
cli
pop
sbb
xor
xor
mov
js
mov
aaa
jns
inc
add
movsl
pop
hlt
lds
je
test
adc
xchg
dec
popa
jb
cs
call
movb
xor
mov
xorl
push
orl
daa
cmp
adc
fisttpl
popf
out
popf
mov
dec
xor
sub
mov
cmp
cmp
dec
out
clc
mov
rcll
in
cmpsb
call
int3
inc
repz
daa
mov
mov
movsl
loop
lret
jbe
lcall
in
out
fisubs
push
xchg
xor
push
movsl
lret
popl
jne
out
movsl
push
outsb
std
enter
inc
mov
add
adc
cs
mov
cmp
adc
nop
pushf
mov
push
push
movsl
lret
and
movsl
insl
add
test
push
sub
aad
test
dec
movsl
std
loope
push
repz
movsl
add
or
pop
and
ss
inc
out
movsl
in
icebp
dec
loopne
ljmp
dec
push
enter
lret
out
loope
insl
push
pop
push
inc
push
lds
mov
push
push
or
iret
arpl
ret
dec
movsl
fsts
or
gs
frstor
mov
mov
mov
and
push
dec
movsl
pop
lea
dec
add
in
popf
ljmp
fwait
push
outsl
in
xchg
ljmp
mov
testb
dec
cmp
xchg
aaa
repz
movsl
sub
fsubs
jno
popf
test
stos
xor
pop
pop
ja
xor
or
cltd
mov
insb
pusha
lds
pop
leave
dec
movups
movsb
cmc
pop
and
mov
or
cltd
incl
popf
xchg
fsubl
aas
mov
hlt
je
aaa
movsl
inc
adc
ret
pusha
lods
push
xchg
xchg
sbb
and
flds
pop
fiaddl
pop
pop
movsl
push
jl
pop
push
pshufw
aad
test
xchg
mov
mov
movsl
xchg
repnz
scas
fucom
pop
and
stos
imul
mov
mov
sub
xchg
adc
aad
push
or
imul
nop
aad
fsub
jmp
mov
dec
mov
js
sbbl
dec
int
mov
mov
adc
insb
push
insl
test
lcall
xlat
shll
into
inc
push
jno
lds
cld
movsl
jg
shrl
pminsw
sbb
cmpsl
push
neg
dec
adc
or
dec
vcvtdq2pd
movsl
pop
xchg
lahf
pop
jle
push
std
loop
stc
ficompl
insl
inc
shll
movsl
push
shr
adc
and
pop
insb
jb
jns
and
movsl
sahf
cmp
out
mov
rcr
movsl
xor
inc
jbe
in
cmp
add
cmpsb
movsl
jmp
mul
xchg
sbb
lock
or
icebp
aam
fsubl
stos
ret
cli
mov
sub
inc
inc
dec
in
cmp
imul
adc
adcb
pop
or
inc
add
in
mov
sbb
sbb
inc
stc
mov
andl
pop
mov
sbb
in
lds
sbb
or
push
cwtl
mov
stc
aaa
inc
shlb
out
mov
cmp
xchg
add
movsl
cmp
js
fdivrs
scas
lahf
stos
stos
movsl
adc
daa
xchg
sub
mov
mov
scas
movsl
in
loopne
fs
movsl
mov
pop
jecxz
mov
pop
jle
lds
pushf
clc
lock
movsb
mov
movsl
jp
mov
inc
sbb
push
cld
rclb
addl
cmp
pop
mov
cmp
or
loopne
xor
xchg
mov
test
scas
movsl
jle
rcll
push
mov
pop
mov
repnz
movsl
jmp
jecxz
mov
movsl
outsl
jno
push
test
xchg
jbe
inc
lods
std
push
hlt
cli
movb
popa
pop
in
notl
mov
shl
scas
loop
lcall
xchg
mov
popa
test
sti
and
arpl
lret
push
out
adcb
mov
sub
lahf
xor
adc
in
pop
add
jp
stc
jb
xor
dec
mov
push
pop
testb
pop
jae
jno,pn
or
push
movsl
mov
scas
test
inc
jmp
loopne
xor
xor
dec
sbbl
daa
int
fimull
xchg
enter
add
frstor
mov
leave
mulb
xchg
sub
mov
lea
jno
imul
mov
shl
xor
mov
mov
imul
mov
loope
scas
daa
movsl
stos
dec
cli
mov
movsl
mov
sahf
das
mov
mov
scas
xor
cmp
mov
test
dec
pop
arpl
mov
inc
movsl
cmc
out
jmp
movsl
test
mov
mov
stc
loop
jecxz
roll
fstpl
mov
mov
imul
adc
movsl
add
je
push
movsl
gs
sbb
cld
add
fbld
pop
popa
jb
sbb
dec
movsl
movsl
xchg
je
add
cmp
jl
dec
mov
xchg
mov
movsl
mov
adc
lret
movsl
xchg
dec
idiv
dec
jmp
jo
imul
sub
sar
jb
hlt
cmp
movsl
outsb
imul
jae
iret
xorl
jns
xchg
pop
push
movsl
sahf
pop
les
or
mov
sbbb
push
pop
mov
cmp
lds
inc
add
movsl
rorl
jo
cmp
mov
jne
decb
sub
push
adc
dec
adc
jns
mov
sub
xchg
es
test
jbe
cmpb
movsl
push
mov
shld
lret
adc
movsl
dec
repnz
movsb
push
push
sbb
dec
and
leave
lret
testl
mov
sbb
repnz
push
fdivs
pop
scas
movsl
mov
scas
sub
movsl
mov
adc
sub
pushf
pushl
fldcw
sbb
lods
fnstcw
lret
cltd
mov
and
test
ret
push
movsl
cld
ds
xchg
sbb
out
sub
cmp
imul
int
sti
and
in
mov
sub
jo
jb
cmpb
insb
cmp
add
shrl
mov
cmpsb
adc
inc
mov
into
aad
dec
dec
push
in
cld
or
mov
push
mov
pop
pop
les
cld
xor
std
aam
sbb
inc
in
test
in
add
insl
pop
aad
or
movsl
mov
add
and
mov
mov
cmpsb
and
movsb
mov
test
cmp
fsub
jae
cmp
xchg
movsl
insl
push
fdivp
and
nop
fldenv
mov
cmc
pop
and
lret
int3
push
movsl
sub
in
pushf
mov
or
jb
jecxz
call
sbb
push
mov
movsl
xchg
je
mov
shll
sbbb
out
adc
sarl
clc
mov
call
aas
mov
jecxz
push
cmpsb
cmpsl
movsl
or
pop
icebp
int
jge
or
movsl
jecxz
add
jmp
mov
lret
stos
fisubl
sti
and
cmpsl
setp
lret
xor
and
and
push
ret
mov
call
fstl
adc
lret
iret
or
out
movsl
in
jecxz
xchg
lahf
xchg
sub
mov
mov
sub
out
popf
add
bnd
push
movsl
test
mov
dec
mov
push
jp
sbb
and
lret
push
daa
jge
shl
movsl
movl
adc
mov
cmp
pop
add
lods
movsl
jg
xchg
xchg
leave
fldcw
pushf
fucomip
and
dec
hlt
imul
xor
sbbl
and
in
vpackssdw
outsb
and
jle
cmp
jo
mov
lds
jmp
inc
mov
mov
sahf
incl
inc
jge
loopne
jno
scas
insb
sub
pop
enter
movsb
outsb
iret
mov
inc
push
shr
jmp
add
cmc
push
push
push
mov
inc
movsl
adc
rcl
dec
dec
movsl
jbe
je
arpl
jl
movsl
pop
sbb
stos
popf
xor
push
pusha
icebp
mov
push
inc
cmp
jno
hlt
movsw
push
jle
xor
mov
movsl
inc
cwtl
and
dec
sub
push
mov
pop
cmpl
mov
cmp
movsl
mov
and
and
aad
lods
adc
sbb
inc
cmp
sub
xchg
in
mov
xchg
adc
movsl
mov
lds
scas
cmp
test
movsl
fs
sti
je
divl
aaa
sahf
pushf
and
popa
push
imul
mov
adc
mov
jecxz
xchg
movsl
mulb
into
stos
mov
std
sbb
mov
popa
leave
and
lret
outsb
sub
cmp
inc
scas
in
inc
adc
jne
stc
mov
popa
test
pop
jmp
movsl
iret
add
enter
xchg
stos
cmp
push
jge
pop
xor
sahf
dec
divb
movsl
fdivrp
jo
mov
mov
les
repnz
nop
int3
movsl
shr
mov
adc
ds
mov
loope
xor
sbb
mov
into
std
hlt
mov
lock
pop
ss
lret
repnz
in
mov
scas
jbe
je
mov
popf
lods
or
movsl
sub
xchg
add
fildl
pop
ja
out
iret
lock
std
cmp
cmpb
xchg
mov
test
pusha
jne
add
lret
inc
inc
mov
pop
mov
insb
sbb
mov
cld
mov
cmc
cmpb
fucom
dec
pop
mov
sahf
add
aaa
andl
call
popa
mov
fistps
add
jae
add
mov
dec
dec
sahf
icebp
push
not
cmc
mov
xor
arpl
andl
xchg
mov
movsb
ja
mov
mov
jb
fistpl
mov
mov
mov
lretw
sub
push
jbe
in
call
jo
push
addr16
mov
stc
jle
jle
std
mov
mov
jno
fistl
jecxz
fldln2
in
pushf
popf
ljmp
sub
adc
loopne
add
push
movsl
lods
fldl
mov
jb
imulb
push
sbb
mov
stos
and
inc
icebp
add
bnd
mov
jecxz
jnp
gs
movsl
leave
cwtl
and
push
hlt
fldenv
mov
add
or
into
fldt
out
fucom
repnz
mov
pop
push
std
movsl
inc
xor
mov
in
mov
lods
and
stc
push
mov
aad
mov
stos
and
pop
lahf
ds
sbbl
lods
scas
outsl
push
es
movsl
inc
stc
inc
xchg
dec
and
aad
in
mov
rolb
pop
pushf
cltd
aam
sbb
cmc
mov
xchg
mov
mov
roll
ljmp
cmp
inc
xchg
add
movsl
sti
push
push
jbe
jb
addr16
popf
lods
or
inc
in
xor
push
jno
sahf
mov
movsl
add
ljmp
pushf
movsl
xor
scas
lods
movsl
adc
cmp
or
and
inc
cld
clc
movsl
dec
cmp
xor
test
sahf
cmp
call
lds
stos
mov
mov
and
sbbl
lcall
fistl
inc
shr
and
xchg
inc
lock
sbb
adc
inc
mov
inc
out
sub
or
imul
je
pop
and
fldl
movsl
add
lret
std
loopne
leave
mov
movsl
push
sub
push
push
sub
aaa
mov
xor
popf
out
xor
dec
fidivrs
push
pop
mov
in
ror
push
adc
add
hlt
sbb
or
xor
mov
xlat
daa
mov
xchg
out
test
xchg
mov
daa
cltd
movsl
cmp
pop
lds
inc
push
mov
scas
mov
sub
sbb
dec
mov
repnz
dec
xchg
loop
sarl
mov
fstl
mov
xor
push
lcall
jae
mov
cmp
je
mov
fwait
pop
mov
sbb
or
mov
adc
push
ljmp
rcrl
cmp
and
aam
test
movsl
loopne
mov
or
mov
mov
pushf
inc
jb
cmp
movsl
and
xor
ret
cmpsl
in
movsl
in
lods
jbe
pop
jns
or
inc
shld
pop
dec
add
ljmp
cmp
lds
adc
movsl
in
mov
and
add
jmp
mov
dec
in
das
aad
movsl
mov
pop
cmp
xor
adc
cmp
outsb
and
dec
pusha
movsl
clc
mov
mov
mov
and
sahf
fbstp
jnp
and
mov
mov
iret
sub
push
outsl
cmc
xchg
push
pushf
movsb
sti
fsts
movsl
mov
mov
arpl
ret
jne
jns
es
popa
idiv
std
popf
dec
mov
xor
cmpl
dec
cld
jno
aad
mov
into
add
aam
and
cs
leave
mov
in
dec
clc
push
push
xchg
insb
movsl
stos
outsb
rcrl
sub
jl
add
lcall
jno
add
push
pusha
add
dec
jo
movsl
jp
and
call
movsl
idivb
mov
mov
mov
adc
shlb
push
movsl
mov
ret
movsl
xchg
and
inc
stos
push
iret
fistps
push
addr16
xorb
dec
xor
mov
in
or
mov
xor
xor
mov
fcmovnb
adc
push
imul
mov
cmpsl
sub
jmp
testb
rorb
fisubrs
in
xor
push
sti
and
outsb
and
mov
lods
hlt
call
mov
or
cmpsl
mov
jns
int
jmp
pop
push
leave
cwtl
jle
push
mov
cmc
fnsave
pop
js
inc
jecxz
lods
pop
push
or
cmpsl
mov
popl
jmp
cmp
icebp
ficoml
sbb
test
cmp
vunpcklps
call
jbe
mov
adc
fprem
cmp
mov
test
jp
pushf
pop
inc
or
mov
jl
ret
sbb
mov
jmp
es
test
movsl
jne
mov
icebp
pop
jae
std
inc
or
inc
mov
lods
sbb
sti
sahf
cmpsl
mov
pop
test
fs
nop
push
mov
and
aad
sbb
xchg
fwait
iret
dec
pushf
sti
loope
sub
daa
or
in
push
mov
mov
push
movsl
aas
popa
sub
les
sahf
sub
pop
mov
repnz
lds
sbb
pop
pusha
aas
xor
stmxcsr
icebp
in
fldcw
dec
jbe
in
xor
rcll
cmc
in
inc
adc
mov
idivb
enter
jecxz
outsl
sahf
mov
clc
jbe
jbe
pushf
jbe
inc
mov
in
push
xchg
mov
dec
pop
mov
mov
add
mov
push
push
add
or
sub
into
cwtl
push
ret
add
xor
and
sub
cmpsb
xlat
popf
addr16
mov
mov
test
cmp
stos
cmp
lahf
mov
scas
in
mov
mov
test
adc
fnclex
ret
dec
ljmp
stos
mov
stc
fstl
mov
icebp
jnp
leave
dec
fnstsw
pop
jne
rcll
popa
and
inc
sbb
in
lods
mov
fdivrs
dec
ret
std
sahf
fistps
and
popf
sbb
call
dec
jno
test
mov
nop
movsl
es
adc
js
mov
in
test
push
inc
sub
xchg
and
icebp
sarb
dec
jl
ror
movsl
dec
push
repz
push
cmp
movsl
pop
mov
push
add
repz
mov
and
out
cltd
movsl
ss
movsb
das
mov
or
bound
fadd
cmc
and
divl
sbb
or
sub
push
xchg
in
movsl
cmpsb
pop
and
mov
add
xchg
movsl
callw
pushf
sbb
sub
and
aad
push
movsl
mov
jmp
pop
sbbl
lret
movsl
dec
scas
and
and
mov
jmp
add
cld
out
and
fwait
cmp
outsb
mov
mov
ret
or
push
mov
lea
cmpsl
push
repz
jmp
or
fldl
jp
sbb
movsl
cmp
divb
out
sbb
subl
movsl
fucomp
hlt
xchg
sub
scas
sbb
pop
in
test
movntq
pop
dec
add
test
and
lock
inc
pop
xchg
push
dec
lods
mov
pushf
jmp
lcall
and
xchg
and
jg
cmc
cmpsl
and
test
outsl
pop
fistpll
pusha
je
notl
fstpl
aad
rclb
rolb
and
mov
daa
int
dec
xchg
mov
xchg
ret
sbb
xchg
daa
lcall
mov
movsl
push
jnp
push
hlt
stos
pop
subb
or
scas
popa
js
ja
loopne
in
mov
in
movsl
fwait
xor
dec
xor
cld
test
andb
lret
inc
cli
mov
add
ret
xchg
fimuls
jnp
mov
cli
iretw
pop
cwtl
push
movsl
push
dec
fildll
push
mov
dec
call
aas
movsl
mov
cmp
or
rol
mov
sahf
adc
cld
jno
xchg
and
ds
xchg
push
movsl
xor
cltd
cmpsb
aas
pop
rolb
mov
test
pop
xor
cli
hlt
out
sub
pop
pop
jge
adc
fstpl
fsubp
cmp
into
xchg
testl
dec
mov
or
je
lods
cmpsb
movsl
and
adc
mov
sbb
add
mov
scas
xor
inc
fsubrs
dec
movsl
push
pop
jle
mov
inc
test
push
inc
jne
movsl
mov
xchg
inc
scas
movsl
inc
out
xor
out
ss
xchg
jmp
sbbl
pop
shll
out
cwtl
rcrl
movsl
shlb
push
xor
jbe
scas
movsl
incl
or
xchg
mov
stos
cmp
sub
fnsave
jmp
pop
jne
movsl
mov
out
cmp
dec
push
sub
cmp
and
daa
neg
push
jb
push
movsl
popf
push
out
mov
int
aam
add
push
push
cmp
imul
inc
frstor
mov
pop
pop
bound
rolb
xor
or
arpl
in
rcll
movsl
mov
sbb
dec
popf
into
cmp
and
lods
dec
adc
cltd
or
outsl
inc
fs
cmpsb
push
or
in
sub
pop
movsl
cmp
std
js
out
mov
inc
in
mov
sahf
adcl
jg
mov
push
push
cli
ficoml
pop
data16
int3
xchg
jae
leave
cmp
jno
in
add
insl
dec
movsl
mov
adc
movsl
inc
scas
mov
frstor
sub
sbb
pushf
mov
and
test
lcall
repnz
adc
call
jne
jmp
xchg
cmp
adcb
xor
push
mov
imul
leave
push
mov
jl
movsl
fdivrp
jmp
ljmp
mov
adc
push
in
cmp
fcomps
inc
mov
xchg
test
lods
lds
mull
and
scas
xchg
and
push
sub
mov
test
cmp
sahf
xor
repnz
sbb
mov
in
testl
add
popa
arpl
dec
lods
dec
fisttpll
or
in
sub
int3
out
jmp
mov
movsl
dec
popa
in
ljmp
pop
imul
sub
mov
lret
fst
xchg
push
inc
sbb
iret
insb
mov
enter
mov
cwtl
cmp
stc
bound
test
loopne
push
sub
popf
std
jno
mov
pop
jp
divb
ret
or
mov
xor
sahf
aaa
adc
pop
shll
fidivl
repz
mov
xor
lret
nopl
or
jo
mov
or
aam
insb
lods
pop
jb
fbld
xchg
aad
push
or
movsl
xchg
pushf
lods
mov
aad
mov
sbb
movsl
or
mov
and
pop
jne
push
movsl
out
in
and
movsl
imul
iret
pop
mov
mov
jnp
stos
mov
in
mov
push
jno
cmovge
or
loopne
jle
fsubrs
xor
jmp
add
inc
arpl
sbb
push
mov
xor
gs
xor
lock
cmp
sbb
and
dec
bound
push
stc
je
cmpsl
jne
pop
mov
adc
lds
out
in
arpl
xchg
test
insb
clc
cmp
ret
adc
mov
movsl
sub
and
ficoml
sar
jle
jp
mov
push
push
arpl
pop
pop
fucomp
jae
lds
xor
mov
repz
xlat
cwtl
leave
mov
lret
shl
push
mov
loopne
shlb
fadd
ss
imul
int
rcll
mov
sub
out
decl
xor
jnp
lcall
loopne
aad
jne
cmc
fldl
sbb
lods
and
jg
outsb
test
sti
sub
popf
fs
movsl
dec
sub
add
mov
xor
lods
ret
movsl
bound
adc
add
push
sub
aas
ja
movsl
shlb
leave
adc
mov
ss
das
cmpsb
inc
idivl
and
in
aad
pop
mov
fstl
cmp
jmp
test
lea
test
movsl
dec
sbb
push
or
test
push
mov
addr16
sbb
movsl
lea
andl
and
lret
stos
adc
movsl
sub
mov
imul
jmp
mov
inc
aaa
jmp
in
dec
inc
mov
add
or
shlb
push
data16
push
stos
cmpsl
out
sbb
pop
stos
fildl
sbb
jo
mov
adc
pop
jbe
or
sub
fstpl
push
jae
incl
xchg
outsl
jo
sbb
movsl
add
int
int3
pop
jbe
movsl
jne
xchg
fldenv
add
inc
xor
andl
inc
jae
out
mov
or
fldenv
movsl
push
outsb
arpl
xor
stc
push
dec
mov
pop
push
and
sbb
sub
adc
pop
lcall
insl
imul
add
mov
ja
push
add
fnstcw
andb
rol
adc
jp
shlb
sbb
out
decl
sbb
icebp
mov
sub
out
imul
dec
push
outsl
mov
sbb
sub
jl
inc
cmp
push
pop
les
aam
fmul
push
in
adc
enter
push
enter
cmp
rcrl
cmc
insb
jo
or
push
xchg
xor
loope
ret
add
icebp
repnz
cmp
test
xor
enter
push
mov
jecxz
cli
inc
mov
das
adc
movsl
pop
inc
jno
sbb
mov
push
xchg
adc
jp
add
sbb
ret
arpl
mov
xchg
lret
push
add
xlat
pop
fnstsw
movsl
sub
add
jle
sub
mov
stos
daa
push
jbe
sahf
loope
mov
orl
push
pop
sbb
stc
mov
loope
mov
imul
ss
addr16
sbb
add
flds
lret
and
repz
sarl
dec
sbb
popa
inc
call
xchg
jmp
fstpl
mov
sub
jl
cmpsb
mov
fdivrp
imul
xchg
sub
sbb
sbbb
rol
fnsave
das
jnp
dec
mov
sahf
or
test
xchg
movsb
jns
and
mov
mov
adc
fwait
or
test
leave
xlat
sbb
and
scas
aaa
mov
loop
out
jbe
dec
or
adc
clc
mov
and
ds
sub
jge
rcrl
nop
testb
roll
mulb
jo
push
sti
sahf
mov
sub
in
fmuls
add
inc
daa
sub
push
loope
es
xchg
push
xor
outsb
push
icebp
sbb
shll
fnsave
in
jmp
push
lret
idiv
test
mov
arpl
lret
sbb
lds
movsb
push
movsl
mov
mov
dec
fs
lods
movsl
daa
add
pop
in
push
andl
test
movsl
add
mov
sbb
push
cmp
xor
pop
movsl
push
push
push
shlb
rcll
loop
test
add
stc
icebp
lds
loopne
pop
and
mov
pop
sbbl
movsl
pop
ret
adc
pop
movsl
into
test
mov
aas
jmp
out
or
movsl
push
dec
sub
in
mov
push
sbb
fadd
outsl
xchg
cmp
sub
add
shr
loopne
outsb
fnsave
fiadds
push
into
incb
test
push
pop
movsl
leave
test
push
outsl
gs
outsb
movsl
jecxz
push
data16
add
and
mov
mov
push
std
mov
pop
xchg
inc
aad
cmp
jbe
xchg
cmpsb
movsl
iret
sbb
addr16
push
ja
xor
push
add
lea
inc
add
std
add
es
mov
shll
aas
adc
mov
mov
push
jnp
sbb
sahf
cmp
mov
test
movsl
inc
push
negb
decb
cmc
movsl
jg
arpl
cs
outsl
lea
aad
and
mov
pop
and
fidivl
iret
add
sbb
mov
call
jb
addl
int
popf
test
outsl
pop
jl
xor
insb
sbb
orb
divl
das
nop
ret
dec
mov
stos
mov
movsl
adc
mov
add
push
mov
in
cld
movsl
and
add
push
scas
xchg
adc
inc
jecxz
xor
mov
pop
outsl
jmp
aad
clc
scas
adc
inc
mov
and
dec
lahf
cltd
lds
xchg
in
sub
pop
sub
stos
aaa
or
movsl
xchg
jp
es
jg
movsl
test
sbb
dec
jno
popf
imul
mov
lret
mov
pop
fwait
cwtl
movsl
jns
ss
and
test
mov
js
dec
movsl
daa
jge
fbstp
lahf
xchg
xchg
aaa
jo
movsl
inc
repz
xchg
aas
add
mov
mov
jl
mov
add
add
jne
es
jle
inc
add
lock
jae
movsl
push
pop
push
insb
out
mov
pusha
fs
mov
popa
mov
shl
lret
jmp
push
shll
arpl
js
push
mov
add
add
pop
sti
jl
lds
jbe
jle
insb
mov
popf
cmp
mov
ss
mov
mov
icebp
ljmp
and
pop
sahf
pop
sbb
test
rorl
movsl
fbstp
and
mov
mov
daa
xor
mov
xor
pop
bound
adc
push
movsl
jb
lret
pop
aad
stos
inc
cld
xor
not
xchg
movsl
out
fildll
push
cld
mov
in
mov
xchg
adc
inc
jb
xchg
cli
push
xor
fs
dec
jecxz
arpl
push
mov
mov
mov
out
enter
or
imul
jnp
dec
nop
add
dec
movsl
das
das
cmp
insb
movsl
push
es
out
fcomi
fcompl
add
jb
fcoms
dec
pop
pop
mov
pop
pop
push
js
movb
fxch
push
cmpb
call
pusha
movsl
pop
mov
sub
movsl
xchg
popf
clc
fndisi(8087
std
rcl
out
movsl
pop
sbb
nop
pushf
fistps
dec
test
in
inc
dec
insl
jle
in
in
movsl
pop
xor
nop
cld
cmp
cmpsb
popa
movsl
pop
testl
sbb
sub
mov
adc
fucomp
movsl
lret
pop
imull
andl
lds
out
out
int3
xorb
movsl
test
add
out
movsl
mov
mov
cmp
stos
or
mov
movsl
adc
push
jle
pop
sqrtps
and
jmp
imul
lcall
pop
push
adc
in
loopne
and
dec
ja
mov
ljmp
mov
movsl
fsts
pop
pop
das
jb
movsl
jmp
divl
add
xchg
loopne
xchg
movsl
fs
add
repz
sti
ss
jge
push
adc
sub
ja
loop
stc
loope
fsubrl
popf
pop
popf
cs
cmp
lds
mov
push
sub
ljmp
mov
test
jne
cli
out
repz
movsl
or
out
add
xor
insl
push
jecxz
vpsllw
movsl
fildl
jmp
mov
sub
shlb
mov
add
push
and
rcrb
std
in
aas
stos
rep
es
mov
lret
pop
mov
or
gs
movsl
int3
mov
mov
pop
cmp
cmpsl
xchg
dec
mov
movsl
insl
sbb
aam
pop
rcl
dec
std
stc
movsl
push
jne
jmp
sahf
daa
mov
adcb
in
repnz
movsl
punpcklbw
int3
xchg
mov
les
in
into
daa
inc
mov
movsl
scas
or
pop
movsl
pop
lods
clc
loopne
push
adc
xchg
stos
cmp
mov
lds
push
ficompl
fpatan
movsl
call
je
pop
xor
push
jmp
sbb
bound
sub
fisttpl
out
add
inc
fs
adc
stos
scas
bound
jnp
add
clc
inc
mov
addr16
adcb
shlb
in
sbbb
ds
cmp
add
mov
xor
mov
outsl
push
pushf
jnp
ja
mov
xchg
cwtl
es
pop
into
inc
in
in
fmuls
mov
je
or
adc
movsl
mov
sbbl
jae
fs
movsl
out
mov
hlt
mov
push
movsl
testb
jno
insb
adc
mov
xchg
stos
xchg
mov
movsb
daa
outsl
cmp
push
adc
popf
xchg
lds
ja
loop
fstpt
div
shrb
movsl
inc
or
cmpsb
xchg
push
inc
push
lds
outsl
mov
movsl
and
pop
jbe
jno
add
insl
inc
test
cltd
or
mov
mov
xor
enter
and
iret
mov
push
pop
dec
mov
rclb
or
movsb
sub
pop
add
sbb
movsl
in
dec
push
insb
sub
or
cmpsb
and
lds
pop
scas
dec
sbb
outsl
xor
mov
cmp
push
inc
aad
stos
fwait
cld
dec
movsb
mov
popf
and
push
mov
fwait
in
fsubs
mov
add
dec
scas
sub
lahf
adc
imul
loop
cli
pop
xchg
movsb
es
and
push
sbbl
jp
bound
dec
pushf
sub
mov
cmc
pop
xchg
and
mul
popa
inc
jae
lret
xor
dec
sub
mov
mov
leave
lcall
loopne
add
xchg
xchg
or
test
in
test
movsl
mov
or
stos
sub
scas
test
pushf
in
and
daa
jl
aas
aad
dec
lcall
lret
icebp
pushf
outsl
push
outsb
cmpsl
ss
mov
mov
push
shll
mov
jbe
pop
sahf
and
inc
jge
push
push
outsl
jb
pushl
lret
push
jecxz
mov
sub
inc
cmpsb
ftst
or
mov
repnz
popa
sub
and
ret
mov
push
fadds
adc
inc
and
lcall
sbb
movsl
adc
out
les
or
pushf
xchg
pop
and
push
and
or
jp
gs
and
scas
insl
adc
lods
cmp
je
fcoms
mov
mov
xlat
inc
mov
and
jb
test
lods
insb
dec
xchg
xchg
out
mov
jp
add
rclb
cli
loope
mulb
and
push
shrl
and
loop
mov
fsub
push
ljmp
cmc
mov
xor
in
xor
cltd
mov
rep
lcall
jns
sub
and
pop
movsb
das
xor
xchg
sbb
sbb
sub
add
xchg
pop
pop
pop
test
push
movsl
adc
adc
dec
mov
pop
imul
inc
or
addr16
push
jno
dec
icebp
jbe
daa
xchg
sub
hlt
enter
lock
pop
movsl
jns
sub
jl
iret
call
sbb
js
dec
imul
mov
jmp
aas
ds
movb
mov
popf
jge
arpl
xor
lahf
leave
xchg
pushf
cmp
push
test
jecxz
call
lds
mov
xor
jmp
push
dec
test
and
imul
lods
aas
mov
ljmp
movsl
dec
loopne
mov
and
xlat
pushf
addr16
jbe
sbb
enter
outsb
push
push
jnp
test
or
es
xchg
and
out
mov
jg
mov
or
lret
pop
repnz
in
fsubrl
imul
stos
loop
movsl
in
shl
cltd
or
lret
icebp
in
sbb
bound
xorb
fs
jb
clc
mov
adc
mov
sub
imul
fisubrl
movb
add
pusha
arpl
leave
sub
movsl
push
adc
cltd
das
pop
sub
jnp
fisubs
pop
mov
or
add
add
lea
adc
rcrb
fcom
jb
stos
mov
or
ret
xorb
out
sub
pop
and
movsl
loop
inc
frstor
aaa
jecxz
cld
xchg
test
xor
cmp
es
pop
cli
jmp
adc
in
jns
mov
mov
inc
outsb
cmpsl
lock
adc
xorl
and
out
mov
movsl
xchg
xchg
pop
and
inc
mov
mov
movsl
push
push
push
bnd
xlat
movsl
sbb
jb
lahf
sbb
sbb
inc
addr16
inc
pop
inc
in
xchg
xchg
popa
inc
je
dec
sahf
test
cwtl
and
int3
int
add
leave
sti
insl
add
lods
xor
lret
movsl
mov
out
movsl
fcoml
mov
xchg
das
jp
movlps
and
sbb
movsl
mov
sarl
adcl
sbb
fisttpl
mov
sub
loop
sbb
movsl
xchg
jb
mov
push
aaa
sub
push
push
test
mov
or
movsl
int3
insl
in
leave
clc
nop
push
test
movsl
movb
and
imulb
or
jl
jne
mov
and
inc
pushf
push
negl
test
enter
sub
frstor
mov
xchg
xchg
bound
imul
adc
adc
xor
mov
out
pushf
lret
movsl
or
shlb
inc
and
jp
lret
adcb
mov
jmp
jno
jle
mov
lahf
daa
mov
adc
jnp
xchg
fisubrs
negl
addr16
push
sub
movsl
popf
lods
mov
jb
in
rcll
dec
xchg
popa
movsl
enter
dec
fs
movsl
adc
mov
cmp
repz
pushf
xlat
lods
daa
sub
inc
nop
jb
cmpsb
and
xor
adc
mov
jle
fadds
movsl
repz
negb
add
jp
call
mov
xor
punpcklbw
mov
hlt
cmp
in
aam
jae
push
adc
lods
xor
daa
sti
movsl
repz
cmpsl
pop
xchg
aad
mov
pop
mov
cmp
fidivrl
mov
lea
icebp
lods
xchg
jecxz
js
mov
outsl
fsubs
lcall
negl
inc
mov
sahf
lahf
push
out
cmp
std
movsl
or
fwait
addl
or
daa
xchg
cmp
movsl
int3
push
out
cli
pop
movsl
ja
cmp
xchg
lds
xchg
js
dec
and
cld
push
jo
in
mov
cmpsb
movsl
insl
fadds
test
adc
xchg
mov
mov
lods
test
mov
jns
mov
fucom
add
xchg
int3
outsb
mov
inc
movsl
into
fsubs
jb
aas
mov
lret
mov
xor
bound
insb
jg
int3
mov
iret
mov
aaa
xor
mov
pop
stos
mov
fdivrp
push
in
repnz
movsl
gs
adc
mov
divl
andl
movsl
add
pop
mov
add
xchg
xchg
xchg
pop
adc
arpl
movsl
and
es
sbb
xchg
and
in
add
cltd
mov
popf
add
sarl
movsl
lret
cmpsl
in
into
jns
fdiv
push
int3
push
push
jmp
cmpsl
test
into
neg
or
popf
lahf
int3
jns
add
mov
cpuid
sbb
movsb
sbb
into
cmp
jns
out
cmc
cltd
ljmp
push
stos
mov
popf
xor
or
stc
lahf
mov
mov
xor
cmp
push
in
xor
loopne
ljmp
xor
dec
mov
movsl
add
push
movsl
xlat
shrl
ja
mov
fcompl
sbb
pop
movsl
push
sub
add
popl
adc
and
cs
sbb
mov
mov
mov
jg
stos
add
xchg
movsl
sub
fucom
repnz
sbb
xor
mov
enter
in
inc
or
mov
movsl
mov
xchg
cmp
xchg
sub
daa
iret
pop
mov
stos
gs
fisubrs
mov
adc
roll
pop
pop
addr16
lock
cmc
mov
pop
std
fisttpll
jmp
add
lret
mov
mov
and
jl
scas
push
xchg
and
insl
nop
jp
mov
cmpsb
aad
jecxz
mov
and
scas
sbb
std
cld
sarb
ja
xor
sbbb
out
pop
sbb
or
push
pop
dec
out
mov
cmp
pop
cmp
mov
inc
mov
xchg
inc
mov
aaa
movsl
xchg
add
lods
pop
sub
out
sub
mov
mov
insb
movsl
jmp
inc
push
pushf
inc
repz
sub
incb
push
testl
fs
xchg
outsb
jo
cltd
movsl
mov
aam
jge
popf
lock
cmp
pop
mov
and
mov
loop
in
mov
cmpsb
push
bound
rcr
pop
xor
mov
cmp
or
mov
loop
movsl
inc
push
pusha
jmp
movsl
mov
lods
or
lea
in
movsl
shrb
sbbb
sti
fidivrl
ja
inc
add
sub
movsl
sbb
rcr
pop
and
movsl
cwtl
scas
sysexit
mov
popa
movsb
imul
repz
loope
fmuls
sub
divb
jecxz
mov
jns
and
mov
mov
dec
aad
jmp
mov
dec
sbb
lock
cmc
push
xchg
je
stos
mov
movsl
inc
pop
jecxz
adc
lods
jmp
lcall
scas
repnz
push
popa
movsb
movsl
jg
adc
mov
out
popa
push
movsl
jp
jbe
outsb
dec
js
data16
xor
fidivrl
test
sahf
jle
jno
icebp
push
cmp
push
inc
pop
imul
in
std
icebp
mov
dec
mov
cmpsb
in
jle
jbe
insl
test
pop
xchg
xchg
inc
inc
sub
icebp
in
and
jge
xchg
mov
mov
inc
js
es
push
movsl
xchg
or
cwtl
xor
popa
fdivrs
aad
mov
jmp
out
inc
and
push
mov
sahf
vhaddps
mov
mov
clc
call
cltd
inc
pushf
push
pop
stos
and
cmp
inc
mov
cs
cltd
imul
gs
lret
movsl
shrl
mov
push
push
in
in
in
jp
dec
cs
cwtl
dec
and
xor
sbb
pop
neg
xchg
cmp
cmp
mov
xor
ja
pop
je
sub
test
pushf
push
cmc
popa
dec
imul
std
inc
call
shlb
popf
lea
inc
movsl
cwtl
and
movups
fstpt
adc
mov
scas
fsubl
and
int
mov
mov
in
or
push
movsl
dec
aas
sub
add
mov
es
divb
sti
xchg
mov
xor
int3
aad
dec
mov
int
dec
jno
push
jae
mov
mov
insl
pop
jmp
inc
movsl
inc
pop
dec
testl
movsl
int3
add
shrl
pop
das
in
and
jae
lret
fistpl
add
loopne
add
int3
icebp
add
mov
inc
xor
sahf
adc
jae
loopne
dec
push
pop
mov
fnstsw
xor
pop
push
and
inc
push
or
cmp
movsl
add
lods
mov
cmp
ds
lahf
ret
add
fcmovne
clc
mov
movsl
jl
popa
insb
addr16
mov
adc
xor
push
leave
outsl
movsl
jmp
xor
jno
mov
push
incb
aam
out
int3
movsl
jmp
push
loope
xchg
jg
xlat
loopne
sahf
push
ret
movsl
inc
and
arpl
mov
dec
mov
adc
mov
push
mov
movl
jne
push
mull
push
ds
clc
movsl
loop
sbb
negb
inc
movsl
jnp
push
ja
shr
movsl
stc
in
aas
std
mov
vunpckhps
and
movb
cwtl
leave
pop
movsl
dec
push
adc
lret
sbb
scas
jae
jmp
movsl
in
or
movsl
xlat
sub
mov
pop
sub
and
aad
mov
mov
faddp
pop
pop
jae
test
dec
in
int
in
gs
inc
mov
icebp
lds
pop
lds
jns
xchg
aam
fsubl
jb
shrl
inc
dec
mov
js
sub
dec
jl
xor
xchg
add
xchg
enter
movsl
lcall
mov
in
inc
cwtl
jp
dec
and
xchg
add
adc
mov
add
movsb
icebp
out
jbe
int
fs
push
pop
sarl
mov
mov
inc
imul
daa
fdivrs
pop
andl
stc
dec
testl
cmp
arpl
aaa
inc
mov
or
hlt
movsl
dec
add
popa
movsl
sbbl
xchg
leave
pop
cmpsl
xor
movsl
jmp
xor
movsb
push
or
xchg
aaa
sub
movsl
outsb
ror
add
inc
mov
mov
call
adc
test
movsb
dec
daa
add
sbb
add
adc
xor
mov
and
arpl
push
or
xor
xor
cld
sahf
rcll
mov
out
mov
mov
rcrl
shlb
mov
dec
mov
push
dec
mov
ret
pop
or
add
subl
cmp
sub
add
jecxz
enter
ljmp
dec
jnp
jmp
pop
mov
movsl
push
sub
sar
inc
add
add
cmp
jle
in
pop
adc
and
loop
add
leave
std
gs
movsl
imul
movsl
inc
outsb
cltd
sbb
rcrb
arpl
mov
sbb
ja
jne
pop
cmp
idivl
dec
mov
add
movsl
out
lods
fprem
push
imul
mov
test
sub
sarb
pop
adc
icebp
int3
mov
pop
mov
or
insl
in
popa
mov
roll
inc
and
xchg
sub
pop
push
sbb
aaa
or
cmpsl
inc
pop
movsl
adc
xor
inc
movsl
pop
and
sahf
xchg
movsl
adc
sbb
sbb
or
mov
loopne
movsl
out
outsb
nop
dec
lods
push
lds
repnz
inc
add
dec
sub
inc
andb
movsl
sahf
divb
push
sub
push
sarl
movsl
enter
xor
and
lock
mov
pushf
push
dec
push
movsl
jl
push
push
leave
jp
sbb
into
and
movsl
mov
sbb
mov
fcomip
cmp
xchg
push
pushf
insl
lods
shr
mov
mov
sbb
pop
aad
shlb
aad
push
movsl
std
cmp
fisubl
sbb
cmc
jb
mov
dec
int
flds
test
mov
movsl
xor
jl
fcmovnb
sbb
rcll
fcomps
mov
jo
dec
push
outsl
clc
movsl
leave
cmc
fisubs
bound
add
jae
adc
jne
frstor
sub
lds
pusha
mov
js
push
or
push
or
pop
lods
mov
mov
mov
iret
std
or
movsl
mov
pop
sti
dec
mov
push
and
add
pushf
xchg
lds
mov
movsl
sub
loopne
mov
adc
out
xor
inc
dec
stc
outsl
mov
pusha
lds
sahf
xor
xor
inc
add
mov
sbb
mov
pop
stc
cmpsl
cmpsb
faddl
pop
sub
sahf
or
ret
shll
data16
pop
pop
cmpsb
movsl
jns
daa
mov
lods
pop
cmc
xchg
add
adc
or
movsl
sub
and
cmpsl
cld
xchg
mov
pop
mov
push
sub
stos
pop
mov
test
movsl
jns
call
pop
fcomi
into
inc
cmc
gs
jmp
test
xchg
and
cld
int
and
push
cmpsl
out
dec
mov
mov
push
shll
adc
lods
or
stc
push
jle
nop
insb
dec
movsl
sti
cld
enter
cs
xchg
mov
icebp
mov
mull
gs
cmc
leave
movsl
mov
out
scas
mov
xor
stos
in
mov
fidivl
mov
adc
enter
js
rorb
push
mov
mov
push
jb
mov
test
mov
lret
repz
movsl
addr16
aad
adc
push
loop
push
dec
outsl
mov
ljmp
pusha
xchg
sbb
scas
push
int
aad
iret
mul
in
mov
fisubs
mov
fistpll
mov
into
sbb
rol
dec
pop
fsubrs
jp
push
lock
adc
pop
inc
cwtl
in
dec
push
xor
stos
test
cmp
in
and
sahf
bound
adc
arpl
loop
mov
lods
jbe
rcr
mov
fwait
pusha
std
popf
aam
fcompp
out
mov
inc
insb
pop
inc
and
stc
icebp
and
iret
push
cmp
mov
cmc
and
push
leave
inc
rol
call
mov
loope
lret
xchg
pop
in
out
cwtl
vcvtss2si
inc
jle
mov
sbb
xchg
pop
sub
fstpt
and
iret
or
mov
xchg
decl
pop
push
and
sub
ja
loopne
mov
xchg
daa
arpl
movsb
fldcw
sub
mov
pop
sbb
or
mov
mov
jnp
push
lods
mov
dec
fstps
mov
and
sub
xchg
fildl
cmc
scas
js
jg,pt
adc
rcrb
jge
imull
jmp
push
hlt
iret
out
pushf
cmp
loopne
mov
movsl
icebp
push
iret
in
loope
sub
adc
sbb
dec
add
mov
xor
out
dec
scas
sbb
mov
insb
ja
roll
jnp
movsb
insb
mov
int3
lahf
es
inc
adc
inc
movsl
icebp
je
cmpsb
pusha
pop
dec
adc
lds
in
mov
sub
and
adc
fdivrs
loope
push
add
rolb
jge
mov
scas
mov
add
fiadds
xchg
pop
in
icebp
movsl
inc
sub
inc
icebp
and
jge
push
dec
aam
add
push
ret
in
sub
mov
in
movsb
cmp
jp
mov
int
arpl
mov
movsl
push
loopne
scas
or
pop
push
shrl
lret
popa
add
mov
lcall
je
inc
fistpl
movsl
scas
fnstcw
clc
mov
in
xchg
mov
nop
mov
dec
shlb
pop
dec
outsl
xchg
cmpsb
stc
or
movsl
or
push
jp
rorl
and
jle
scas
data16
mov
sub
inc
pop
subb
in
lret
push
mov
inc
or
popa
push
sub
and
lods
inc
pop
shlb
pop
stos
pushf
das
mov
fldl
fcmove
lcall
popa
movsl
leave
jge
lods
rcrb
mov
fsubr
sub
insb
imul
rorb
jmp
dec
push
xchg
mov
lods
pushf
cmp
lods
data16
inc
mov
iret
push
mov
out
xor
and
jp
fimuls
mov
pusha
mov
js
insl
pop
repnz
ljmp
and
mov
xchg
push
movsl
or
lods
fadd
repnz
mov
in
jle
data16
mov
cmpsl
fs
xchg
das
xchg
push
cld
adc
neg
add
int
out
sti
movsl
push
lret
mov
outsl
mov
fcompl
stos
mov
xlat
adc
scas
lock
in
mov
test
mov
insl
jno
mov
adc
aad
lds
rolb
std
movsl
adc
or
lds
push
jle
xchg
or
or
cmp
outsb
adc
cmpsb
movsl
sub
lods
out
sbb
movsl
sahf
xchg
xor
movsl
mov
rcr
loop
stc
jo
inc
fadd
out
in
aad
lahf
sbb
jle
cmpsb
push
mov
lods
test
fstpl
shlb
lcall
sub
cmp
pop
imul
or
jb
sub
popa
dec
addr16
leave
and
mov
int
movsl
fwait
movsb
pop
mov
fdivl
or
adc
sbb
xchg
cmc
movsl
add
cmp
jecxz
in
push
xor
leave
and
pop
loope
inc
lcall
adc
movsl
lahf
adc
sbb
push
dec
imul
xlat
enter
push
jbe
in
fwait
mov
jno
out
incb
mov
and
mov
jp
cs
mov
loop
fstps
movsl
sahf
fcmovnbe
loope
rcrb
int
movsb
add
movsl
mov
push
shl
add
loopne
pop
push
jae
movsl
fsub
push
inc
mul
inc
int
push
insb
out
popa
jmp
pop
mov
mov
rolb
push
cmpsb
cmpsb
movsl
push
cmp
stc
xchg
test
sbb
and
jne
sarl
cmovno
pop
mov
push
dec
call
in
cmp
les
movsb
adc
mov
dec
in
jno
fisubl
pop
pop
ljmp
or
pop
jl
pop
dec
movsl
cmpsl
add
add
mov
sub
aaa
push
popa
and
movsl
test
outsb
cmpsb
repz
jb
sbb
setns
imul
mov
mov
sub
ss
mov
add
aas
lods
mov
cmp
xchg
inc
push
outsb
mov
dec
push
ljmp
arpl
into
jg
dec
iret
aas
popf
cmp
lods
xor
add
adc
mov
mov
sti
cld
pop
movsl
hlt
lock
pop
inc
call
test
popf
cmp
movsl
mov
mov
movsl
mov
push
std
cld
xchg
enter
jae
jo
cli
or
mov
mov
test
add
lds
dec
adc
in
and
movsl
inc
cld
sbbl
movsl
inc
jle
jnp
xchg
popa
js
pop
insb
cld
jecxz
jl
mov
sahf
sbbb
xchg
movsb
sub
inc
pop
pushf
mov
xlat
stc
shlb
movsl
pop
push
jnp
insl
outsb
insb
push
in
sbb
outsl
jg
xor
les
ljmp
pop
movsl
add
jb
pop
arpl
movsl
call
jle
dec
adc
loopne
mov
lret
push
test
jbe
jmp
mov
insl
lcall
sar
pop
movsl
xchg
mov
fstpt
scas
xchg
adc
inc
movsl
push
jbe
pop
inc
mov
and
pop
sbb
add
pop
push
xchg
mov
cs
inc
aaa
adc
negl
mov
mov
mov
into
sahf
push
orb
add
jbe
test
jo
mov
leave
and
andl
inc
ret
mov
int
movsl
jno
mov
or
cmp
loopne
push
sahf
or
in
and
jecxz
add
xchg
cld
cmp
push
cmc
in
movsl
negb
aam
fs
int
hlt
xchg
push
out
inc
and
push
fstl
ds
lahf
nop
lea
and
push
mov
xchg
mov
adc
jmp
add
or
movsl
cli
frstpm(287
add
nop
or
and
and
lds
mov
int
movsl
mov
es
sub
movsl
jp
lds
loop
rclb
rcl
call
xor
movsl
pop
rcrb
sbb
sti
xchg
jne
in
iret
cltd
mov
cli
mov
movsl
push
xchg
jb
xchg
repz
in
cli
mov
int
xchg
ja
jno
outsl
xor
cmc
out
pushf
lahf
dec
dec
jmp
mov
jecxz
xchg
cwtl
and
inc
lcall
push
pop
xchg
push
stc
movsl
sub
shll
sub
sti
or
int3
sub
mov
push
sub
movsl
jne
cld
sbb
movsl
and
das
mov
movsl
std
imul
movsl
jno
xchg
rcrb
cmpsl
movsl
push
pop
loop
pop
inc
pushf
testl
hlt
movsl
mov
push
adc
add
jbe
popf
sbb
mov
mov
mov
loope
xor
inc
cmpsl
fnstsw
in
lret
mov
pop
mov
lds
ja
lcall
mov
xor
movsl
cwtl
sahf
mov
cmpsb
xor
push
movsl
dec
sbb
jp
addr16
inc
and
popa
cmp
ret
jno
movsl
pop
cmp
movsl
aaa
xchg
cmp
add
movsl
cmp
sbb
je
mov
adc
mov
push
cmpsb
xlat
sbb
push
push
jbe
push
jns
enter
out
fstl
mov
mov
fsubl
xor
stc
xor
frstor
aas
cmp
test
adc
movsl
dec
dec
push
ss
push
inc
movsl
loop
out
int3
fbstp
push
xchg
outsl
dec
lds
ja
rolb
in
mov
arpl
cld
es
movsl
push
decb
movsl
in
xchg
nop
mov
jne
xchg
mov
mov
test
in
cmp
les
inc
push
cmp
shll
add
xor
sub
add
or
cmp
cli
iret
jmp
lds
cs
sahf
xchg
movsl
sub
xchg
push
movsl
ljmp
xor
mov
insb
dec
jg
lods
stos
lea
movsl
xor
mov
fisubs
xor
loop
mov
adc
leave
or
push
clc
xor
imul
mov
dec
cmp
movsl
out
in
ds
lcall
xlat
loope
into
and
mov
xor
and
fcmove
out
mov
adc
mov
addr16
movsl
lods
push
aaa
inc
add
call
inc
sub
popf
lea
jno
sbb
test
ljmp
sub
cli
and
stos
push
dec
xor
sahf
inc
lock
call
jl
fs
jp
movsl
fstl
cmp
out
sub
ds
lods
test
mov
stc
into
out
movsl
out
std
jge
movb
popa
sbb
call
lds
in
inc
imul
jmp
add
cwtl
mov
mov
outsl
and
push
cli
jmp
lds
stos
inc
jae
popa
lods
rcrl
push
js
adc
icebp
lcall
test
popf
push
inc
repz
sbb
mov
xchg
sub
mov
ret
nop
add
rcrl
fisubl
ja
xchg
push
enter
and
or
repnz
lcall
btc
or
jnp
and
push
or
icebp
sbb
dec
pop
and
in
jb
jl
xchg
mov
cmp
cmp
scas
jmp
pop
test
pop
sub
mov
ds
and
out
adc
lods
sub
outsl
dec
shrl
loop
into
mov
xchg
mov
and
pushf
sbb
pusha
loope
sub
roll
leave
adc
jge
data16
cmc
push
mov
cwtl
inc
mov
cmpsl
idivl
nop
sbb
and
loopne
jae
int
xor
sti
mov
and
cmp
push
cmp
pop
xchg
and
mov
nop
int
fstl
xor
dec
ficompl
xlat
dec
enter
sbb
inc
mov
or
jle
movsb
loop,pn
mov
jecxz
jae
cmpsl
lock
and
jbe
scas
mov
fstpl
stos
frstor
inc
fneni(8087
jbe
mov
sbb
sub
ja
xlat
add
lret
lods
in
nop
movsl
arpl
pop
mov
xor
mov
insb
bound
adc
dec
add
xlat
sub
rcll
mov
out
movsl
mov
les
movsl
xchg
sub
mov
int
adc
sub
mov
out
mov
sarb
jecxz
pop
movsb
mov
jno
jb
in
into
xchg
xchg
mov
mov
shll
add
jl
fwait
lods
mov
into
mov
call
push
inc
js
sbbl
seto
repnz
ljmp
cmpsl
mov
pop
sub
cmp
adc
pop
movsl
jb
inc
popa
gs
jle
mov
scas
xchg
cmp
cmpsl
in
sbbb
clc
cmp
fsubrl
xor
cmp
aad
into
push
andb
jae
push
movsl
push
push
gs
in
test
adc
sbb
movsl
cmp
xor
and
mov
push
pop
pushf
xchg
inc
lds
push
aam
movsl
lret
test
movsl
roll
lret
cli
sbb
jne
push
sbb
xchg
dec
sbb
push
int3
outsb
negl
sbbb
pop
in
or
aad
xchg
movsl
mov
mov
test
call
mov
sub
xor
outsb
jmp
daa
mov
in
out
mov
movsl
dec
xchg
sub
repnz
xchg
sbb
fs
jo
pop
cmc
movsl
pop
jle
push
push
mov
xchg
stos
lea
sub
and
or
pop
mov
mov
push
movsl
ficomps
cli
adc
cmpsl
test
lahf
movsl
xor
out
add
stos
lret
or
sbb
mov
icebp
iret
hlt
movsl
push
arpl
push
movsl
in
xor
ficomps
outsb
inc
jecxz
xor
or
decl
movsl
pop
push
test
int
movsl
dec
or
imul
jle
in
xchg
nop
icebp
movsl
ds
mov
ret
movsl
cs
inc
cmc
adc
test
movsl
mov
gs
mov
pop
imul
loopne
cmp
dec
pop
and
pop
and
jecxz
or
cmpl
adc
lds
insb
jo
negl
xlat
cmpsb
sahf
adc
aas
adc
cwtl
mov
add
aam
es
ret
jle
dec
add
fdiv
mov
out
in
in
movsl
mulb
arpl
mov
ja
loope
ljmp
movsl
mov
pop
cmpsl
movsl
sbb
out
or
mov
cmp
movsl
in
addl
movsl
adc
insb
sbb
cmp
lods
push
scas
sbb
fucom
movsl
aam
loopne
loop
movsl
lret
or
movsl
jle
lods
imul
xchg
ds
movsl
popf
or
xchg
and
sub
pop
lods
pop
add
out
popa
mov
leave
aaa
stos
lcall
and
push
xchg
mov
mov
out
xlat
lret
movsl
ret
mov
dec
cmp
mov
xchg
nop
cmpsl
pop
gs
push
xlat
sub
xor
loopne
xchg
lods
jae
add
sub
imul
xchg
into
ret
mov
arpl
pop
xor
lds
out
pextrw
xchg
mov
je
movsl
nop
adc
ljmp
mov
std
xor
js
mov
pop
pop
mov
mov
mov
mov
movsl
es
inc
repnz
cld
xor
in
movsl
idivl
add
les
push
sub
or
pminsw
int3
repnz
pusha
inc
mov
xchg
sub
popa
test
movsl
jecxz
lods
sub
movsb
movsl
leave
lcall
xor
add
movsl
adc
clc
aad
in
out
and
sub
hlt
dec
movsl
pop
sbb
aad
cmpsl
mov
mov
bound
mov
jne
jecxz
sahf
fnstcw
movsl
cmp
jnp
mov
xchg
das
xchg
repz
hlt
sbb
add
movsl
int3
jae
and
sti
jp
pop
popa
push
data16
xor
pushl
es
fadd
movsl
pop
push
push
sti
jbe
stos
movsl
xor
push
xor
mov
cmp
fisubl
out
xlat
jle
dec
wbinvd
pop
lret
fsubr
cmp
cmp
arpl
into
and
xorb
push
and
push
test
test
jae
or
test
add
jge
mov
rorb
mov
sbb
xchg
int
pop
cwtl
les
lds
fs
mov
xchg
and
bound
aas
cwtl
in
adc
test
push
insb
pop
jmp
xor
idiv
jbe
push
mov
aas
je
jecxz
cmp
cwtl
sbb
xor
and
xor
negl
mov
pop
mov
cmc
sub
xor
in
shlb
bound
rolb
std
xlat
mov
jae
pop
sbb
adc
cmp
lods
shld
lds
fwait
mov
movsl
sbb
and
cmp
jge
dec
xchg
dec
into
push
nop
xor
inc
or
pop
movsl
test
mov
lret
outsb
xorb
test
mov
movsl
in
sbb
popa
stc
movsl
inc
pop
pop
jno
je
icebp
movsl
loopne
mov
jl
fdivrp
in
iret
pop
pop
daa
adc
aad
enter
sbb
xchg
je
and
sub
add
bound
dec
jns
clc
out
leave
repnz
movsl
sbb
add
mov
jnp
cltd
and
mov
into
mov
movsl
jmp
xchg
xor
inc
add
roll
pop
movsl
orb
pop
mov
inc
adc
enter
sbb
arpl
movsl
xrelease
in
sbb
push
mov
sbb
ja
test
movsl
sbb
mov
stos
stc
mov
hlt
int3
out
cmp
xchg
aas
mov
pop
and
and
shl
adc
inc
imul
movsl
xor
add
fidivrl
adc
daa
mov
sbb
popf
and
jno
xchg
cmp
sub
movsl
out
xchg
and
test
movsl
xor
pop
or
pop
loopne
mov
dec
push
fwait
push
movsl
inc
push
orl
add
cmp
sub
imul
push
or
fstps
repz
mov
push
pop
lea
mov
jno
bound
xchg
xchg
push
pop
call
test
in
jle
xchg
mov
mull
aas
pushf
fcom
cld
jae
insl
in
pop
movsl
sub
ss
popa
xlat
mov
repnz
fcoml
insl
dec
mov
mov
std
incb
jb
mov
test
cmc
int
add
mov
mov
mov
xchg
xor
mov
aaa
xchg
or
loop
jbe
pop
insl
outsl
movsl
mov
push
inc
mov
jne
pop
mov
lds
cmc
je
sbb
shlb
dec
in
jb
mov
lods
cltd
sub
movsl
mov
mov
xchg
or
lret
test
inc
iret
xchg
movsl
add
dec
mov
sbb
dec
sbbb
iret
loopne
out
sarb
cmpsl
push
sub
std
test
rol
movsl
test
sub
lcall
lahf
sbb
sbb
movsl
and
push
mov
test
jge
call
shrb
add
cs
fucomi
lcall
test
inc
add
popa
pusha
fcoml
sub
repnz
pop
jecxz
movsl
sub
xlat
mov
repnz
movsb
and
mov
jno
add
pop
or
das
out
cmc
stos
int
ljmp
cmp
adc
movsl
and
popa
test
faddl
push
cmpsl
es
xlat
jp
push
cmp
icebp
push
xor
push
mov
mov
add
mov
enter
in
in
adc
decl
dec
mov
dec
jl
jb
mov
inc
mov
xor
inc
js
sahf
push
mov
mov
in
xchg
sub
dec
cmp
lods
mov
data16
icebp
add
icebp
stos
cld
clc
jmp
dec
jle
lea
sbb
fsubl
test
cwtl
adc
iret
add
cmp
sub
cmc
mov
xchg
jecxz
cwtl
push
jo
outsb
sbb
sbb
mov
add
leave
xlat
sub
xchg
addr16
frstor
ffree
icebp
mov
or
adc
mov
jmp
push
jns
in
cmp
xchg
xchg
sbb
sbb
add
or
jno
pop
inc
test
pushf
sub
xchg
lods
mov
mov
in
jno
leave
push
fnsave
stos
cmp
sbb
cmp
or
sbb
test
insb
mov
cmpsb
pop
icebp
mov
cmp
xlat
mov
push
mov
sbb
cmc
das
mov
cli
xor
pop
jae
adc
sahf
or
push
sub
cmp
adc
data16
rcll
push
movsl
sub
mov
out
pushf
sbb
and
repz
add
mov
add
sub
sbb
xchg
in
sub
sub
push
outsb
dec
movsw
dec
bound
lret
and
insb
mov
dec
sbb
nop
cmp
mov
add
out
stos
inc
or
not
xchg
mov
xchg
imul
in
add
shrl
mov
xchg
lret
add
cmpsl
fidivrl
xor
adc
sbb
movsl
sti
arpl
and
test
fs
cmp
repnz
mov
push
lahf
cmp
push
movsb
mov
sub
xchg
scas
sahf
or
fucomp
mov
fbld
movsl
icebp
xor
xorl
in
xchg
cmp
sub
cmp
inc
mov
push
mov
add
push
mov
movsl
mov
lea
push
repnz
pop
mov
neg
loopne
jno
mov
in
leave
jge
xchg
xchg
movsl
js
mov
mov
in
mov
mov
movsl
mov
cwtl
je
movsl
testl
imul
add
pop
movsl
mov
in
mov
leave
lock
shrl
mov
inc
inc
lods
in
xchg
das
xchg
pop
cmpsl
fistpl
push
cli
std
lret
clc
movsl
add
out
mov
mov
sbb
stos
sbb
iret
dec
shrb
cvtdq2ps
sbb
movsb
scas
cmpsl
lds
dec
xchg
xchg
and
cmp
std
sar
or
and
adc
or
pop
loop
xchg
xchg
push
and
lds
jns
aaa
xchg
imul
lock
mov
cmc
clc
adc
xor
cmp
test
shll
rcrl
xorb
mov
mov
mov
iret
push
int
mov
or
lcall
sub
xchg
movsl
pop
mov
mov
scas
dec
arpl
repz
jmp
add
mov
movsl
adc
ljmp
pop
push
sarb
fdivrl
pop
pop
ja
push
jle
push
push
pop
dec
aad
idivb
inc
jo
frstor
sbb
fidivrl
add
cmp
sub
dec
in
jns
adc
mov
imull
movsl
aas
insb
pusha
mov
add
test
lods
lds
movsl
mov
mov
andb
pop
int
cld
xchg
mov
jl
add
outsb
mov
pop
jbe
cmp
aaa
sbb
and
leave
mov
movsl
push
lods
sbb
fxch
jns,pn
push
sub
in
imul
addr16
call
testw
js
clc
and
aam
dec
push
movsl
dec
jle
or
repnz
sahf
lahf
sahf
cmp
sahf
pop
push
ja
mov
or
in
int
in
jle
sbbb
jmp
popf
call
add
sti
xor
movsl
mov
push
scas
push
hlt
and
movsl
outsl
imul
jmp
cmc
add
movsl
fnstcw
push
negb
mull
lock
movsl
orb
adc
xor
xchg
movlps
pop
jmp
test
mov
mov
mov
andb
cmp
cli
lods
das
lock
addb
clc
mov
int3
mov
push
mov
jle
mov
movsl
adc
sbb
into
rorb
mov
sub
movsl
in
pop
int3
jmp
jno
mov
movsl
add
cmp
into
int3
sahf
clc
dec
movsl
pop
or
mov
sbb
lcall
rcll
fadd
cld
cmpsl
sub
pushf
in
lret
mov
aam
fs
lea
mov
scas
and
jns
leave
jge
dec
lock
jp
or
stc
in
lods
xchg
aas
and
clc
int3
push
scas
add
xor
push
mov
add
inc
jo
mov
dec
jmp
lret
ficompl
stos
movsl
sub
sbb
iret
repnz
push
and
inc
sub
lret
sbb
movsl
xchg
xchg
in
loop
xor
movsl
xchg
dec
sub
push
add
imul
enter
mov
push
cmp
andb
cli
int
xor
xlat
sub
mov
adc
aas
cmpsl
cmpsb
lea
xchg
and
jae
in
fcomps
jle
aad
out
mov
xchg
movsb
lahf
ret
inc
push
push
and
jnp
mov
test
iret
xchg
inc
shr
insb
dec
adc
mov
add
mov
or
pop
mov
jae
dec
inc
sub
les
loope
sub
adc
adc
movsl
sti
or
add
insb
jl
inc
hlt
movsl
lret
shr
fidivs
popf
cmp
pop
push
movsl
ss
add
in
movsl
and
arpl
and
and
mov
and
add
and
pusha
jne
leave
ja
inc
pop
mov
clc
aam
fisttpl
leave
je
lea
mov
roll
lods
xor
das
aam
shrb
bsr
pop
movsl
fsubl
dec
scas
sbb
adc
sub
ret
test
inc
imul
sub
mov
adc
xchg
stc
repz
aam
bound
int
jge
pop
movsl
lods
scas
test
movsl
add
std
xor
and
fdivs
dec
pop
jg
popa
outsb
push
in
daa
xchg
xchg
test
and
cmp
fimuls
fwait
jle
ljmp
add
mov
fstpl
stos
cmp
movsl
ljmp
mov
enter
lahf
movsl
xchg
mov
mov
movsl
mov
daa
cmp
jo
cmpsl
xchg
stos
leave
icebp
outsl
or
fstl
popf
rclb
inc
fsts
mov
cmp
mov
fildll
cmp
rol
mov
mov
push
punpcklwd
jae
pop
sub
push
pusha
icebp
movsl
push
les
sub
lcall
mov
aas
loopne
push
popa
lret
and
movsl
jo
adc
mov
mov
mov
stos
push
xchg
mov
pusha
testl
fiaddl
lret
fsub
stos
mov
into
inc
out
sahf
and
mov
cmp
mov
lea
and
insl
lds
aas
push
fsubrs
push
pop
lock
and
xchg
pushf
das
sar
movsl
pop
jno
aam
andb
scas
outsb
movsl
jg
and
fsubs
mov
jns
ret
sbb
movsl
mov
sti
xlat
cli
movsl
xor
or
movsl
cwtl
sbb
cmp
sbb
sub
mov
movsl
xor
cwtl
lcall
es
scas
mov
hlt
icebp
adc
imull
bts
and
test
ja
das
jmp
movsl
adc
scas
mov
in
and
fldenv
sbb
sahf
inc
mov
cmp
mov
stc
cmc
or
hlt
int
mov
xchg
nop
aas
mov
xchg
pop
cmc
inc
in
stos
movsl
cld
sbb
repnz
lret
int
movsl
pop
ficomps
fldcw
movsl
and
fdivs
insl
dec
lahf
mov
sar
enter
movsl
or
adc
sub
lds
sub
stos
pop
push
movsl
insb
pop
jg
mov
xchg
ret
mov
fildl
sub
fisubl
mov
xchg
push
inc
push
hlt
push
xchg
movsl
gs
fnstsw
mov
out
cli
clc
in
pop
mov
ss
mov
mov
mov
add
push
jno
jne
ja
out
sahf
pusha
fcmovbe
call
inc
jae
mov
mov
shll
test
sbb
lea
rorl
cmc
roll
jb
movsl
dec
jle
sub
jg
idiv
push
movsl
or
dec
pop
push
movsb
leave
and
and
mov
mov
movsl
mov
in
pop
jg
cmp
sub
movsl
jle
mov
mov
pushf
cmpsb
dec
and
mov
test
arpl
mov
push
stc
push
mov
inc
negl
and
sahf
aaa
jmp
fcmovnbe
mov
movsl
icebp
mov
push
test
sub
cmc
add
add
out
jg
test
sar
ljmp
andb
jns
push
mov
in
sub
add
int
and
and
fcomps
sbb
mov
fstpt
in
pop
in
push
enter
jnp
xor
mov
outsl
das
or
add
mov
sarl
in
or
or
pop
xchg
pushf
out
add
sti
fimuls
inc
jmp
xor
popf
lcall
push
movsl
adc
fiadds
movsl
out
cmc
rolb
jmp
and
sbb
sbb
mov
mov
data16
sahf
and
dec
lods
jbe
mov
stos
and
mov
sar
xlat
leave
sub
mov
inc
mov
and
dec
rorw
cmc
inc
pop
jl
add
add
xchg
add
movsl
adc
loopne
leave
jle
dec
popf
and
sbb
popf
sar
jmp
xchg
sub
imul
pop
mov
mov
jo
ss
rclb
pusha
insl
jmp
aad
movsl
scas
jg
bound
setbe
mov
xor
sahf
ja
push
inc
push
mov
adc
mov
stos
mov
scas
and
jmp
add
enter
ds
adc
push
pop
ret
xchg
cmpsl
movsl
sbb
sbb
lock
jp
cmp
mov
movsl
jb
sbb
lock
sbb
movsl
fldl
pushl
inc
jg
or
xchg
rcll
in
adc
inc
sbb
cli
sbb
pushf
frstor
mov
add
js
push
xlat
movsl
or
hlt
sub
aaa
call
inc
lods
in
mov
push
movsl
sbb
jle
in
xchg
movsl
xchg
data16
fwait
stc
sbb
dec
jb
jle
jae
adc
dec
inc
dec
cld
fsts
movsl
dec
jg
in
notl
movsl
jecxz
aad
out
xor
movsl
cwtl
out
push
mov
mov
fwait
movsl
cmp
lcall
dec
fmuls
dec
outsl
loop
add
jo
sbb
xchg
sbb
jbe
mov
sub
pop
scas
mov
in
arpl
pop
sbb
inc
sahf
mov
in
and
out
add
mov
push
cmc
and
repz
jb
inc
ss
cld
iret
pusha
gs
jbe
push
mov
push
cmc
dec
addr16
movsl
jo
mov
in
call
push
sub
repz
mov
pop
gs
add
push
push
jae
imul
pop
shl
popa
lea
outsb
sbb
das
in
clc
inc
fdivr
xchg
divl
movsl
push
lods
popf
jno
mov
xor
pop
mov
cmp
in
scas
mov
mov
pop
pop
loopne
xor
loope
adc
sbbb
setge
jmp
popf
push
pop
jmp
sahf
sub
js
lret
lea
leave
and
out
lret
and
scas
pop
sub
ja
cli
js
push
push
cli
mov
je
dec
loope
mov
xchg
push
addr16
mov
lahf
popa
sub
mov
stos
dec
pop
push
leave
sahf
push
inc
out
cli
ret
in
or
jns
sbb
or
pop
sahf
push
ret
xor
mov
jecxz
cmc
push
xor
dec
push
sub
loop
addr16
in
sub
test
inc
lcall
jle
mov
mov
inc
ljmp
jl
sahf
lea
sahf
fmuls
xlat
jecxz
ret
cltd
js
add
adc
push
sbb
jmp
outsl
jno
icebp
xor
xlat
stc
cltd
push
xchg
out
inc
adc
dec
mov
insb
movsb
sub
push
sahf
mov
popa
dec
cmpsl
loope
mov
inc
fimull
dec
imul
cld
int3
pop
jbe
aam
loope
bound
movsb
aaa
mov
fildll
mov
add
lds
push
fnstsw
adc
sub
stos
cwtl
hlt
xlat
mov
cmpsb
rcrb
leave
dec
push
lds
hlt
in
lahf
je
mov
cmp
loopne
rcll
dec
out
or
jp
or
lock
outsb
clc
cmc
ret
outsb
jl
insb
scas
movsb
pop
xlat
hlt
jns
xchg
in
pop
mov
jae
out
jmp
xchg
repnz
mov
shlb
cmp
scas
jp
out
imul
dec
mov
loope
sub
stos
out
pop
cmp
jmp
in
icebp
fwait
jmp
jb
xlat
and
dec
int3
ljmp
add
push
xlat
pushf
mov
les
mov
daa
lods
mov
iret
fbld
aad
mov
push
pop
adc
es
sbb
std
aam
push
sbb
and
cmp
push
sub
inc
and
push
xor
sub
sub
xlat
pusha
and
pop
dec
movsb
js
ds
enter
in
and
lret
sbb
test
sbb
pop
movsb
mov
xor
push
push
bound
decl
and
fmuls
loope
mov
sub
aaa
popl
mov
movsl
andl
lret
out
jge
enter
pusha
mov
cmpxchg
std
sbb
mov
cmc
sbb
and
cwtl
shlb
xorb
sbb
or
cli
aam
push
pop
icebp
sub
dec
fcoms
mov
sahf
xchg
out
test
lahf
movsl
jbe
ljmp
fidivs
xchg
mov
pop
movsl
subb
shll
or
lods
movsl
lret
push
cmp
jmp
or
xchg
inc
mov
mov
jmp
movsl
les
fwait
sbb
add
mov
inc
jnp
xchg
pop
push
and
das
mov
cli
and
divl
sub
sarb
test
and
add
movsl
jbe
pop
dec
jl
lds
test
movsl
mov
and
mov
scas
or
incb
sub
inc
movsl
mov
jbe
out
rolb
call
sahf
ljmp
cmpsb
sbb
lahf
adc
ret
xchg
jecxz
pop
push
and
add
jl
insl
lahf
movsl
sub
add
je
test
sbb
out
and
cmp
negl
in
repz
out
andb
pop
push
inc
shrl
jl
leave
hlt
mov
mov
out
xlat
pminub
and
bound
lods
test
dec
lea
xchg
movsl
push
dec
xchg
push
or
lods
mov
movsl
scas
outsl
lcall
dec
movsl
pop
mov
dec
jp
push
movsl
mov
in
jb
xchg
mov
inc
or
jle
or
adc
insl
lods
mov
push
test
inc
push
inc
mov
jmp
and
int
or
push
scas
sahf
sbb
mov
ss
insb
lods
movsl
pop
das
or
test
cmc
out
adc
int3
dec
shr
push
fildl
pop
jnp
lea
xor
lret
mov
xchg
sbb
jg
adc
test
mov
pop
data16
jg
mov
mov
ds
movsl
notb
enter
cmc
rclb
or
ds
xchg
aad
fisubl
mov
in
movsb
imul
mov
mov
shr
shll
mov
in
leave
and
lds
vxorpd
lods
ljmp
sbbl
inc
xchg
adc
stos
out
icebp
arpl
imul
pop
lds
and
movsl
pop
mov
ret
lock
pop
xor
sahf
xchg
and
iret
cltd
pop
dec
movsl
adc
or
cmp
fiaddl
add
out
popa
in
ljmp
aad
mov
jbe
lret
addr16
xchg
xchg
inc
ljmp
adcl
dec
adc
xchg
sbb
mov
xor
cmp
push
mov
push
sub
xchg
and
mov
cmpsl
movsl
mov
and
movsl
mov
outsb
aaa
repz
movsl
inc
test
adcb
cli
pushf
jmp
sbb
xchg
mov
lods
call
mov
pop
subl
lds
lret
in
cmpsl
mov
aam
data16
mov
js
add
xlat
cmc
imul
mov
push
movsl
xchg
ficoml
testb
insl
dec
pop
and
jmp
movsl
xor
sub
push
fs
sbb
sub
inc
inc
xor
adc
movsl
cmpsl
andb
adc
movsl
imul
inc
xchg
es
jle
dec
mov
pop
in
mov
lcall
jge
jb
push
fcompl
push
push
dec
sbbb
add
pop
inc
jecxz
ret
pushf
sbb
push
xchg
in
inc
test
fbstp
into
pop
jae
orl
jecxz
or
stos
push
pop
aaa
adc
mov
mov
cmpsl
ss
pop
out
aaa
cli
xchg
cmp
js
ja
and
sbb
sub
jg
jp
sub
adc
or
movnti
movsl
inc
ret
jb
icebp
push
sbb
shll
stc
cmp
daa
in
or
cmpsl
sbb
pop
or
incl
test
test
cmpsl
and
int
addr16
movsb
iret
adc
mov
sub
sbb
jo
loope
movsl
out
pop
mov
test
push
movsl
sbb
imul
xor
sub
sub
push
jns
movsb
jmp
movsl
repnz
cmp
mov
arpl
fdecstp
cmc
mov
ds
xor
xor
insb
dec
popa
ljmp
stos
mov
sti
movsl
int
push
cmp
push
push
push
pop
xor
push
and
add
fisubs
xchg
jle
or
negb
scas
lcall
and
mov
mov
out
movsl
fcmovu
cli
aad
cmp
loope
rcrb
dec
cmc
jo
in
cmp
mov
jle
dec
data16
xor
test
sub
enter
or
mov
pop
lods
shlb
mov
push
movsl
add
stos
or
sbb
inc
movsl
addb
xor
pop
les
fisttps
sub
das
in
jno
push
movsl
and
jo
loopne
push
repz
adc
pop
jl
int
fs
popf
rorl
mov
lahf
xchg
inc
mov
pop
jge
jno
add
repz
pusha
repnz
movsl
inc
xor
xchg
cmp
outsl
push
or
and
dec
jae
lcall
scas
int3
out
in
shll
popa
inc
pushf
sarl
and
fs
dec
jno
lds
les
cmpsl
mov
sbb
popf
dec
pop
mov
and
inc
out
jle
out
movsl
lods
adc
and
dec
movsl
mov
mov
lret
movsl
sbb
xchg
push
popa
movsl
inc
insl
pop
push
fs
hlt
pop
out
iret
cli
out
cwtl
movsl
imul
dec
stos
add
in
mov
jge
cli
js
ror
shrl
xchg
in
push
pop
bound
popf
or
into
dec
in
add
xlat
dec
in
mov
movsl
or
push
jmp
loope
or
sarl
pop
mov
mov
mov
jae
unpckhps
cli
jne
inc
pop
jp
pop
std
dec
jle
loope
push
negb
pop
bound
lret
inc
movsl
mov
outsb
fisubl
popa
iret
jb
scas
mov
cmpsl
movsl
insb
push
addr16
mov
xor
pusha
loopne
jae
mov
jle
pop
pop
test
and
inc
faddl
push
mov
dec
ffree
jge
mov
addr16
das
test
movsl
or
inc
mov
scas
out
into
xchg
and
fcmovu
pop
push
lcall
test
push
je
aad
int3
es
lret
add
jl
cwtl
movsl
fmuls
loope
movsl
add
stos
jl
outsb
aas
movsl
pop
sti
pop
push
and
pop
pusha
fisubl
pop
addb
scas
sbb
xor
mov
subb
sbb
fsubrs
or
in
repnz
ficoml
jle
inc
add
push
movsl
and
movsl
lret
rcrl
out
sub
mov
mov
movsl
pushf
cmp
sbb
mov
ljmp
cs
inc
lods
out
adc
movsl
out
cmpsb
pop
je
mov
mov
in
dec
jg
cmp
adc
push
mov
sbbb
inc
rclb
pop
movsl
jnp
adc
add
pushf
movsb
mov
adc
movsl
pusha
rcll
ds
lds
push
int
pop
rsm
jecxz
iret
ljmp
jae
std
push
enter
addl
adc
inc
imul
jb
mov
movsl
bound
cmp
daa
mov
sub
rcl
out
fcoml
dec
lcall
addr16
int
mov
je
cmp
scas
or
das
call
mov
mov
in
push
or
movsl
movsb
sub
pop
lock
inc
mov
pop
stos
adc
nop
in
mov
push
movsl
cwtl
xchg
mov
mov
fcmove
cmpsl
movsl
and
inc
xchg
lds
fdivr
stc
or
movsl
outsl
leave
jns
cwtl
inc
mov
in
xchg
es
std
repnz
movsl
in
mul
int3
and
lahf
push
or
out
leave
mov
mov
dec
outsb
lods
jge
movsl
pop
and
sub
cwtl
push
movsb
ret
wbinvd
sbb
movsl
xchg
and
stc
jns
pop
jo
sub
into
int
push
out
stos
enter
cmp
test
cmc
xchg
pop
leave
movsl
sahf
inc
loopne
jp
adc
stc
loop
cmpsl
movsl
pop
fwait
int3
pop
push
shll
inc
movsb
pop
movsl
mov
or
stos
cld
add
push
fsts
aad
fmuls
pop
cmp
sbb
cmpsl
lahf
fwait
movsl
scas
ret
mov
and
pushf
popf
insb
imul
test
mov
flds
mov
clc
pop
adc
lods
adcb
out
movsl
xchg
sub
movsl
dec
or
mov
data16
stc
dec
mov
andl
rcrb
adc
jmp
testb
jnp
in
movsl
mov
and
lods
mov
fbstp
jmp
loopne
mov
mov
inc
push
sub
ret
andl
fsincos
mov
outsb
xchg
mov
int3
mov
jnp
js
das
xor
inc
movsl
mov
sbb
mov
movsl
xchg
push
in
jg
push
je
mov
cwtl
stc
jp
mov
imul
dec
dec
xor
loope
ljmp
cmc
sub
ret
adc
xchg
mov
ja
jp
cmpsl
stc
dec
movsl
frstor
insb
in
and
sbb
stos
sub
mov
cld
loope
sbb
mov
mov
fbld
mov
popf
movsl
mull
adc
loopne
cmp
arpl
push
and
mov
pop
std
faddl
and
movsl
pop
mov
sbb
movsl
stos
mov
lcall
add
movsl
mov
fwait
neg
out
xor
lcall
call
js
mov
mov
cmc
aad
mov
lock
cwtl
in
adc
fisubs
fimull
les
insb
sbb
movsl
mov
mulb
movsl
out
iret
leave
jmp
mul
pop
adc
mov
cld
adc
shrl
movsl
dec
in
push
movsl
stc
rolb
pusha
push
jmp
pushf
xchg
sti
xchg
mov
scas
push
mov
repz
cmpl
mov
push
push
push
jbe
sub
lock
xor
cmp
aam
enter
mov
cmc
sti
mov
dec
dec
lods
mov
xchg
jecxz
cmc
jmp
mov
jns
push
dec
push
movsl
pop
stos
inc
mov
fildll
scas
and
dec
shl
into
stos
and
jmp
out
adc
faddp
fsubl
movsl
test
mov
mov
fidivl
sub
movsl
fsubr
hlt
aam
inc
add
sbb
enter
mov
leave
cmpsl
out
test
and
aaa
xchg
or
ret
stc
mov
cmpsl
mov
or
in
mov
xchg
ret
popa
dec
test
movsb
and
lock
scas
jg
inc
call
dec
push
gs
movsl
pop
pop
outsl
xchg
inc
sbb
push
out
je
std
popf
pop
or
aad
pop
mov
pop
jo
js
aad
mov
stos
arpl
adc
daa
or
movsl
lock
iret
loopne
jge
movsl
mov
sub
mov
inc
int
ja
lods
add
out
sbbl
and
mov
aaa
cmc
mov
inc
lds
xchg
mov
mov
sbb
pushw
inc
xor
out
ret
sbb
mov
sbb
mov
dec
push
and
mov
cmc
mov
sbb
sbb
dec
repz
push
outsb
dec
jmp
stos
mov
cmp
popf
xchg
and
mov
addr16
pop
sti
loope
test
dec
test
mov
sub
int
je
fprem
pop
cmp
imul
insl
inc
in
sub
xlat
sub
leave
push
pop
divb
movsl
sub
std
mov
loope
popf
jg
push
cmp
dec
inc
mov
jl
and
xor
mov
push
add
add
push
or
dec
xchg
cltd
enter
ret
cwtl
cmp
pop
popf
popf
outsb
xchg
shl
pop
push
in
icebp
lods
xchg
jmp
aad
and
or
sbb
popa
stos
test
sarb
pop
fucom
imul
cmp
fcoml
pop
outsb
fsts
or
testl
mov
inc
idivb
cmp
sub
vpmaddwd
push
push
mov
jnp,pn
loopne
stos
mov
lods
push
outsl
outsl
or
fldl
into
fsts
push
cmc
lods
sbb
mov
xchg
or
data16
mov
jo
jb
andb
aaa
mov
sahf
movsl
fiadds
orl
dec
and
sbb
cmpsb
lods
push
movsl
stos
scas
js
dec
sahf
pop
xlat
out
jno
inc
leave
sub
aad
in
ljmp
xor
cmpsl
sahf
xchg
movsl
cli
inc
lea
adc
sbb
aam
ds
inc
mov
mov
call
stos
sub
lods
add
mov
movsl
pushf
add
cmp
inc
bound
cld
push
inc
jnp
stos
arpl
movsl
xor
leave
into
sub
mov
cld
xor
or
sbb
std
push
movsl
pushf
lahf
xor
push
movsl
or
movsb
mov
add
cmp
and
dec
aaa
in
mov
or
outsl
addb
pop
cmp
mul
push
adc
mov
movsl
cltd
inc
cmp
movsl
push
shll
mov
lcall
sbb
cmp
xchg
cmp
jno
cmp
loope
sahf
aam
out
movsl
std
pop
out
or
fsubl
push
aaa
inc
lds
cmpsb
mov
mov
iret
test
icebp
popf
cmp
jmp
and
sub
fstl
movsl
dec
xchg
test
ret
daa
movsl
imulb
cli
sub
popf
insl
jl
inc
fnstenv
push
movsl
movsb
mov
adc
loopne
mov
arpl
in
cwtl
pushf
sub
pop
lret
aaa
stos
movsl
lods
sbb
mov
in
pop
xchg
std
cmp
adc
mov
dec
mov
lods
push
je
ss
sub
movsl
and
out
filds
rcll
or
loope,pt
push
adc
mov
inc
or
mov
andb
leave
out
cmp
movsl
cwtl
aam
xor
push
jmp
xchg
sub
adc
sbb
loopne
daa
mov
je
jle
mov
test
outsl
add
scas
cmp
sub
repz
nop
push
pop
scas
or
pop
mov
dec
or
mov
adc
mov
and
xor
ljmp
out
pop
movsl
test
insb
cmp
mov
mov
rcr
dec
mov
inc
movsl
insl
mov
push
movsl
inc
repz
ds
lds
movsl
outsb
xchg
push
clc
movsl
or
push
mov
ret
cli
push
idivb
in
sbbl
lods
adc
movsl
ss
ret
sbb
movsl
mov
push
sub
movsl
movsb
xchg
xchg
repnz
add
push
cmc
in
arpl
lds
ss
xchg
sub
jecxz
stc
cmp
push
and
xchg
jmp
push
sahf
or
pusha
mov
movsl
stos
pop
scas
sbb
and
cld
lods
loope
pop
imul
lcall
les
jae
lods
cmp
inc
xchg
pusha
sbb
movsb
push
xchg
and
out
movsl
stos
jbe
adc
out
cld
icebp
xchg
lcall
les
sub
jge
movsl
mov
test
aam
out
mov
movsl
sbb
lahf
xor
stos
pop
or
out
and
stc
lret
dec
mov
sub
dec
pop
mov
inc
mov
pop
pop
xchg
nop
lea
enter
movsl
out
adc
xor
push
sahf
aaa
dec
aas
dec
adc
addr16
fwait
inc
sub
push
movsl
add
mov
push
xor
ret
scas
sub
xlat
movsl
jo
andl
inc
das
add
push
pop
pop
neg
cli
fsub
mov
enter
arpl
leave
in
mov
xchg
in
into
les
cld
aad
orb
movsl
mov
cwtl
fiadds
or
movsl
leave
jbe
add
fbld
je
nop
mov
shrb
pop
dec
pop
imul
adc
add
inc
lret
idiv
pop
int
xchg
subb
ficoms
notl
hlt
jmp
movsl
and
pop
shld
xor
add
add
in
movsl
in
pop
repz
insl
cltd
cmpsb
movsl
cmp
lods
inc
fisttps
andb
pop
adc
pop
je
pop
movsl
jnp
mov
lcall
lods
stos
mov
mov
jne
push
rcrb
mov
jno
inc
mov
mov
xchg
mov
fisubs
inc
insb
add
or
shll
cmp
ret
mov
imul
pop
movsl
lret
inc
movsl
repz
add
movsl
sbb
xchg
dec
cwtl
xor
lret
mulb
out
call
pushf
inc
scas
shr
addr16
xchg
mov
cmpsl
aad
and
scas
adc
and
out
clc
into
push
addr16
xor
sarl
movsl
sbb
add
mov
cmpsl
movsl
mov
in
sbb
cmp
xlat
and
sar
and
fimull
outsb
mov
test
in
mov
mov
add
jecxz
movsl
dec
cmp
movsl
fnsave
imul
jmp
sub
jb
negb
push
mov
test
sbb
mov
pop
dec
movsl
adc
xchg
mov
popa
push
imul
inc
and
int3
scas
out
in
movsb
std
pcmpgtw
enter
sarl
stos
xor
inc
sti
mov
aam
ret
and
pop
add
movsl
jne
stc
push
movsl
or
scas
fwait
mov
test
dec
add
test
movsl
cltd
repnz
or
dec
or
shll
les
out
movsl
iret
lret
jmp
dec
lcall
adc
mov
push
movsl
cmp
int
adc
mov
cltd
cmpb
xor
in
movsl
push
das
testb
fidivs
movsl
cltd
sbb
stos
adcl
pop
mov
sbb
or
test
int
xchg
lods
mov
movsl
mov
sbb
popa
inc
or
cmp
movsl
jo
sub
fsin
add
mov
xor
shlb
inc
gs
mov
fistps
movsl
lods
sbb
cwtl
movsb
sub
mov
ss
push
fcmovb
ffree
int3
lea
es
pop
and
movsl
xchg
push
inc
push
inc
call
xchg
cltd
mov
movsl
dec
bound
lret
mov
and
and
jle
cmc
push
push
jg
in
sub
mov
aam
push
iret
movsl
mov
enter
int
movsl
icebp
mov
sub
adc
movsl
stc
sti
enter
iret
pop
adc
aam
fsubl
fcomps
movsl
std
cmp
stos
push
inc
mov
cmpsl
or
testb
mov
push
jb
sub
mov
sbb
cmc
add
xorb
mov
pop
movsl
data16
add
pop
int3
mov
imul
ss
pop
sbb
sbb
jp
pop
in
std
pop
jmp
stc
xchg
sub
stos
push
mov
fldt
inc
push
mov
sub
in
sbb
jg
loop
std
xor
sbbb
jo
xchg
adc
movsl
inc
popf
jl
xor
jns
mov
jg
in
movl
mov
out
fsubrs
mov
and
jbe
imul
ljmp
movsl
movsb
inc
mov
cwtl
or
mov
or
mov
imul
mov
ret
in
movsl
mov
popa
je
shll
stc
dec
cmpsl
fisubl
fisubrs
fstps
mov
dec
push
jno
sbb
mov
pop
mov
xchg
leave
sahf
test
movsl
pushf
xor
and
sub
fstpl
pop
jge
orl
xchg
mov
movsl
and
movsl
outsl
ret
xlat
int
aaa
xor
movsl
and
inc
sbb
sub
cmp
push
inc
jmp
inc
in
aad
jae
mov
mov
data16
lods
and
lods
sub
movsl
mov
push
inc
jbe
idiv
ljmp
push
out
mov
in
bnd
push
xchg
pop
pusha
in
xor
out
lret
inc
inc
rcll
or
mov
or
sbb
and
insl
call
push
xchg
out
int3
fidivrs
xor
loop
fisubs
addb
movsl
xor
hlt
cmp
inc
mov
cli
inc
out
and
mov
test
movsl
cs
lahf
cltd
pop
movsb
adc
popa
mov
into
rcrb
xor
xchg
ds
lahf
xchg
flds
movsl
clc
sbb
mov
movsl
xor
addr16
imul
mov
adcb
fstl
aas
hlt
jns
ja
sub
std
push
inc
push
lock
mov
ret
sub
sbb
add
lea
cmp
mov
pop
in
cmc
jo
inc
movsl
cmc
dec
popa
jge
and
push
cld
pop
jecxz
cmc
jecxz
call
fidivrl
push
adc
mov
jbe
fld
mov
mov
push
scas
mov
mov
dec
xchg
in
std
push
cmp
ljmp
pop
ror
cli
mov
in
cmp
movsl
xor
dec
movsb
cmpsl
mov
xchg
movsl
or
imul
outsl
add
adc
ds
pop
push
pop
mov
mov
and
fwait
shll
pop
jmp
js
or
mov
push
popa
les
in
arpl
sbb
add
fsub
pop
dec
lea
xor
stos
mov
ljmp
mov
mov
pushf
scas
mov
and
cmpsl
sbb
mov
into
std
popa
and
sti
movsl
dec
out
sbb
xor
jmp
insb
dec
push
outsl
pusha
push
mov
mov
mov
mov
pop
pop
sarb
movsl
pop
mov
mov
pop
ja
outsl
shlb
xor
xchg
movsl
fmull
or
mov
pop
fldcw
and
lcall
out
sbb
mov
jg
mov
movsb
cli
push
mov
mov
movsl
roll
push
and
popf
mov
adc
lcall
xchg
cwtl
xor
dec
xchg
rcrl
sub
popa
movsl
mov
cmp
and
cmp
stos
mov
pusha
insl
leave
sahf
xor
mov
scas
pop
mov
aad
shr
movsl
xlat
out
inc
add
movsl
mov
sahf
push
pushf
xor
mov
inc
inc
cmc
fnstsw
and
stos
cld
or
in
test
xlat
fldenv
inc
in
and
push
testl
mov
daa
inc
push
mov
popa
sti
jecxz
jmp
jno
hlt
arpl
and
je
fcoml
jg
mov
and
and
pop
mov
jmp
xlat
cmpsl
rcll
push
pop
mov
xor
movsl
or
ss
movsl
lock
jb
xor
lea
movsl
xchg
inc
jge
cld
imul
sti
inc
or
movsl
mov
pop
mov
push
scas
movsl
mov
ss
xchg
aaa
sub
push
push
addl
sbb
fwait
pop
movsl
inc
lret
lods
pop
mov
jp
in
mov
mov
mov
dec
cmc
movsl
or
pop
dec
gs
xchg
and
addl
lcall
stc
mov
mov
fs
pop
inc
fsubl
lock
lods
pop
and
fiaddl
ljmp
adc
rorb
aam
fmul
mov
insl
in
gs
add
cmp
push
icebp
call
addb
das
push
enter
sub
xlat
out
in
into
clc
loope
shl
test
je
jmp
adc
test
jns
imul
cwtl
addr16
ret
mov
movsl
loop
leave
jg
pop
push
movsl
icebp
add
pusha
or
loope
push
int3
sbb
inc
out
jmp
mov
insl
push
je
push
mov
add
pop
subb
dec
sbb
adc
out
into
mov
xchg
mov
inc
mov
movsl
ret
adc
mov
movsl
lahf
add
xchg
cmp
add
lret
and
movsl
mov
int3
repz
fldcw
mov
pop
push
movsl
inc
stos
cmpsl
leave
xchg
stc
repnz
mov
movsl
jle
xchg
fcmove
test
js
mov
lds
test
loopne
sbb
mov
repz
jg
insl
add
movsl
inc
add
sub
es
sbb
stos
push
mul
movsl
repz
sub
jecxz
subb
imul
mov
push
mov
adc
mov
daa
mov
mov
ljmp
test
loopne
pop
movsl
test
cmpl
iret
sub
movsl
in
mov
xor
sbb
xchg
movsl
les
sahf
movsl
out
mov
ret
push
insb
repnz
fildll
cmp
jo
lcall
push
xor
and
ret
mov
mov
or
dec
js
sub
fcmove
repnz
rcrl
mov
insb
enter
inc
mov
fs
push
fisttps
pop
and
fiaddl
outsl
popaw
cli
mov
movsl
scas
insl
mov
sbb
movsl
cwtl
pop
mov
cmp
rolb
add
js
sbbb
daa
addl
fsub
cwtl
cld
int
ljmp
adc
dec
outsb
lods
movsl
std
ds
in
xchg
cmp
dec
jp
fisubs
add
xchg
out
js
fs
rorl
jo
sar
aaa
mov
cltd
ss
push
push
or
test
outsl
pop
movsl
mov
sub
or
leave
lahf
movsl
xchg
das
sahf
insb
push
fsubrp
fwait
rcr
push
pop
push
inc
jp
xor
into
push
popa
shl
jb
fdivp
vcvtdq2ps
dec
sub
push
jnp
push
dec
xor
mov
xor
sub
iret
xorb
xchg
mov
lods
mov
mov
out
jb
xor
ds
cmp
xor
das
fsubs
adc
stos
sbb
pop
mov
jmp
fbld
std
int3
dec
aam
mov
add
loopne
or
sub
mov
add
lcall
inc
and
push
push
roll
jmp
gs
inc
add
add
movsl
mov
mov
adc
js
mov
pop
sbb
je
ljmp
and
pusha
pop
movsl
jmp
or
scas
add
dec
les
std
jg
divb
mov
xchg
rolb
movsl
jecxz
lahf
fisttpl
push
jno
leave
jo
push
hlt
rcrl
mov
dec
in
sbb
addr16
add
mov
pop
xchg
sub
pop
in
fiaddl
stos
xor
push
xor
add
adc
jae
sub
jnp
scas
aas
fisubs
dec
hlt
and
sub
ret
int
mov
test
int
aad
push
dec
movsl
dec
xchg
jp
mov
sub
pop
adc
movsl
pop
jne
sbb
ret
stos
scas
dec
adc
push
mov
push
imul
pop
clc
xchg
sub
rorl
movsb
sbb
push
mov
sahf
cmp
jmp
adc
cmp
movsl
xchg
inc
jge
sub
aad
icebp
hlt
adc
jg
sbb
lea
xchg
dec
gs
mov
sbbl
fstp
jae
cmp
mov
adc
jecxz
movsb
dec
frstor
jbe
fldenv
popf
mov
clc
bound
xchg
movsl
sub
aaa
mov
movsl
add
lahf
sbb
js
or
dec
push
mov
mov
pop
cmp
sub
sbb
or
test
pop
ja
push
add
mov
fildl
cltd
fsubs
cmp
pop
cmpsl
ficoms
mov
xorl
jbe
mov
pushf
mov
inc
inc
in
push
leave
sti
movsl
and
cwtl
shr
out
xchg
pop
pusha
and
adc
movsl
fmull
adc
ss
in
adc
cmp
movsl
js
push
dec
sbb
into
inc
mov
ret
movsl
hlt
movsb
out
jno
sub
test
arpl
mulb
push
inc
movsl
cmpb
add
pusha
insb
cmp
jmp
pop
dec
pop
shrl
inc
push
or
xchg
les
mov
mov
mov
sar
pop
lds
out
mov
lea
jl
push
movsl
or
pop
mov
movsl
push
rclb
fs
rorl
mov
jecxz
jp
test
add
cmpsb
test
jle
sbb
rcl
or
insl
pop
inc
lea
syscall
stos
sbb
es
mov
cmp
cmpsl
mov
call
movnti
push
mov
pushf
icebp
dec
sub
mov
js
into
sbb
lods
lods
movsl
test
mov
cmp
popa
movsl
arpl
sti
cltd
int3
push
push
mull
dec
pusha
cmpsl
xchg
or
popa
les
movsl
into
jp
add
iret
movsl
ljmp
dec
fs
into
sub
lods
mov
aas
sbb
cwtl
lea
repnz
inc
hlt
add
xor
mov
int
mov
sahf
adc
push
ret
pop
movsl
sbb
leave
dec
add
push
out
stc
imul
push
js
nop
pop
movsl
cld
adcl
xor
sbb
test
and
mov
fsubrl
mov
inc
push
out
movsl
or
xchg
jo
jge
jmp
ror
ret
test
jle
pop
popa
aaa
movsl
subl
xchg
sub
movsl
xchg
aam
pop
sbb
enter
vmovntdq
or
outsb
jge
jno
pop
inc
mov
in
add
mov
out
jo
push
mov
mov
push
lea
mov
xchg
movsl
into
pushf
push
or
mov
jb
mov
xchg
aas
xchg
int
movsl
push
push
mov
sub
mov
es
scas
mov
inc
jecxz
sbb
cmpsb
mov
bound
mov
push
push
or
in
add
icebp
lcall
cwtl
add
std
stc
or
leave
xor
into
in
mov
mov
vcvtsi2ss
mov
outsb
in
pop
xchg
pop
cmc
jecxz
subl
jp
push
add
pop
movsl
sbb
or
shrl
imul
aas
fsubr
inc
stos
push
aad
inc
dec
rcr
mov
lcall
adc
mov
rcll
imul
pop
cmpsl
mov
and
scas
lret
xor
imulb
int3
nop
pop
cmp
sub
cli
sbb
pushf
sub
enter
jmp
mov
sbb
xor
fisubl
cmpsb
lcall
sahf
jbe
inc
jo
and
cmp
ja
sbb
popa
sbb
push
sub
sbb
jecxz
or
mov
sub
loope
mov
inc
shrb
add
and
pop
cwtl
mov
mov
mul
push
push
mov
mov
cmp
dec
lea
inc
pop
mov
fcmovnu
cmc
stos
pop
movsl
fwait
sbb
cmp
in
xchg
mov
sbb
fisttpll
shrb
pop
movsl
cmp
lahf
xchg
loopne
lods
mov
leave
xchg
mov
test
dec
xor
pop
xchg
mov
jno
sbb
stos
movsl
add
pop
movsl
mov
daa
cld
movsl
jno
mov
les
dec
jbe
imul
movsl
ret
sti
lret
test
pop
movsl
xor
add
inc
pop
mov
mov
hlt
movsl
mov
sub
mov
pop
movsl
loop
cmp
push
bound
les
outsl
mov
cmp
cmpsb
sbb
mov
sahf
xor
ja
cmp
movsl
push
mov
cmpsl
movsl
adc
push
push
clc
sbbl
movsl
cli
lods
fimuls
and
imul
jno
mov
movsl
dec
or
xchg
jmp
fisubrs
cs
cmp
popf
inc
push
xchg
sbb
cli
fmuls
rol
cmp
xchg
xchg
pushf
mov
js
push
add
dec
shlb
xor
xor
xor
and
stos
and
daa
xor
fucomi
jnp
mov
xchg
lret
and
sbb
mov
add
out
movsl
ja
sub
xchg
hlt
cmp
jnp
andb
cmp
test
lds
and
data16
mov
jb
cld
jg
cmp
cmpsb
mov
dec
mov
in
mov
shlb
dec
int
pusha
ja
mov
aam
lods
dec
ret
cltd
movsl
mov
sub
movsl
cmp
fcmovnb
pop
pop
xchg
movsl
inc
cmp
or
jle
mov
xchg
sub
nop
xchg
mov
pop
jmp
aad
inc
adc
iret
cwtl
lods
negb
fstl
popf
ljmp
jle
lahf
pmulhw
push
xchg
popf
gs
push
mov
jne
dec
stc
int
sub
ror
adc
sbb
and
ss
push
movsl
sti
add
pop
mov
mull
movsl
and
push
fwait
movsl
jmp
push
jl
xchg
iret
cmpsl
mov
sbb
repz
cmp
stos
mov
aaa
sahf
fcmovu
cmc
loop
push
mov
out
movsl
out
push
mov
imul
lcall
outsb
aam
jb
es
loope
inc
ret
mov
dec
cli
xchg
mov
mov
push
rep
adc
xchg
stc
jne
lds
sub
sbb
arpl
scas
push
and
xor
call
mov
pop
lds
mov
xchg
icebp
fmul
outsb
scas
jb
movsl
push
xchg
lahf
mov
dec
mov
fnsave
lcall
lds
movsl
inc
or
cmp
lock
dec
inc
les
pop
mov
push
push
add
sbb
std
dec
adc
js
xchg
test
lret
pop
in
fistpl
adc
movb
dec
cmpsl
dec
mov
add
cmp
pop
movsl
aam
in
das
dec
push
out
movsl
pop
outsb
dec
or
ja
push
sbb
xor
int
inc
mov
daa
lea
sub
pop
mov
jmp
lds
in
stc
and
int
out
nop
push
rolb
push
cmp
into
add
jno
stos
sbb
mov
shld
xchg
xchg
mov
sbb
fs
movsl
mulb
and
js
movsl
mov
lods
adc
clc
shlb
cli
jne
repnz
andl
cld
unpckhps
bound
ret
stos
push
sub
fiaddl
add
mov
cs
add
aad
aas
mul
mov
mov
ret
jecxz
push
clc
shrl
add
sarb
push
call
aam
pushl
sub
div
add
addb
add
movsl
and
jg
loop
jnp
cwtl
cld
data16
popa
sub
dec
stc
into
lock
imul
arpl
inc
xchg
xchg
add
jns
shrl
sub
lock
lods
sub
mov
push
data16
adc
mov
iret
movsl
icebp
lret
push
daa
adc
dec
andl
lods
mov
movsb
push
cmpsb
adc
sub
outsb
jle
pushf
bswap
pop
les
xor
jecxz
cli
xchg
and
jbe
rclb
xchg
jae
loopne
sbb
xchg
aad
movsl
dec
jne
xorl
stc
je
in
or
pop
movsl
loop
push
scas
adc
andb
out
call
push
pop
imul
push
cmp
fldt
mov
or
enter
dec
jg
rolb
push
sarb
lret
shlb
mov
pop
push
ror
add
mov
cwtl
cwtl
add
popf
or
adc
or
js
push
ss
sbb
mov
and
sub
mov
sub
lea
dec
mov
add
fisttpl
mov
or
push
test
sbb
insl
imul
sub
dec
scas
inc
testb
mov
add
and
lahf
inc
movsl
hlt
xor
cmp
leave
mov
movsl
or
jecxz
dec
fdiv
xchg
loopne
cmp
movsl
dec
scas
shl
sub
push
mov
mov
lds
add
shll
cmp
mov
mov
fwait
mov
js
mov
cmp
mov
push
in
jle
je
repnz
aad
test
inc
adc
shll
in
cmpsb
sbb
in
in
out
cmp
mov
cmpsl
lds
rcrl
pop
icebp
mov
xchg
sbb
and
dec
jle
push
mov
fidivs
dec
sub
insl
mov
sbb
mov
lods
loopne
movsl
push
pop
movsb
adc
cld
ds
into
test
cmp
ficomps
cmp
andb
in
jmp
cli
movsl
add
pop
lock
ss
into
cmpl
mov
xchg
jecxz
pop
mov
mov
leave
repz
mov
jge
jno
shlb
mov
lock
call
aaa
add
push
inc
les
jne
mov
inc
ss
in
loope
std
call
mov
movsl
lret
mov
je
pushl
cmp
and
daa
addr16
movsl
mov
inc
jne,pt
adc
adc
gs
popa
add
mov
xchg
in
mov
push
sub
cs
dec
lods
jmp
into
jb
mov
xchg
in
cltd
dec
ret
adc
xchg
das
mov
daa
or
leave
test
sub
mov
cmc
movsl
aam
mov
movsb
test
xchg
lcall
mov
jg
imul
stos
fdivr
loope
jno
cmpl
adc
xchg
xchg
cmc
cwtl
es
mov
push
xor
aaa
fstl
add
orb
scas
aad
fistpll
insl
addr16
lds
mov
mov
insb
xor
nop
insl
pop
movsl
inc
fdivrl
and
aaa
mov
xchg
add
cltd
movsl
mov
and
gs
add
movsl
clc
lods
fnstsw
movsl
pop
vcvtps2dq
out
outsb
lcall
mov
mov
test
xlat
sub
or
xlat
frstor
lds
sbb
inc
fildll
and
mov
cmp
movsb
arpl
mov
jecxz
pusha
out
dec
and
loope
sub
jp
out
vunpckhpd
adc
das
inc
mov
pop
inc
adc
nop
mov
popa
aam
lea
cmp
sbb
mov
scas
addr16
pop
push
sahf
mov
cwtl
in
sub
sbb
movsl
movsb
mov
gs
ljmp
stc
loopne
nop
and
hlt
pop
movsl
cs
inc
mov
out
ret
add
mov
in
sbb
xor
mov
movsl
inc
ja
push
lcall
xchg
xchg
loope
mov
sahf
and
movsl
daa
cwtl
je
cmp
movsl
in
dec
inc
rclb
icebp
aas
cmp
cmp
and
mov
loope
movsl
int3
jnp
das
xchg
movsl
rorb
pop
inc
pushf
mov
movsl
icebp
in
mov
push
movsl
or
pusha
arpl
mov
inc
sbb
xchg
inc
mov
cmp
bound
insl
push
outsb
xchg
std
mov
notb
sti
int3
jns
cmc
in
fistps
rcrl
outsl
jg
sarl
adc
or
pop
loope
sarb
movsl
dec
jmp
mov
movsl
add
adc
lret
mov
push
add
cmp
cmp
xor
adc
les
adcl
cmp
aaa
lds
pushf
movsl
cmp
push
mov
jns
push
movsl
add
lret
lahf
arpl
and
dec
js
jmp
sbb
dec
sar
pop
jnp
popw
sahf
sahf
dec
push
out
mov
push
xchg
in
or
jl
scas
push
movsl
adc
add
push
dec
cltd
leave
js
test
mov
sahf
lahf
or
pop
pop
inc
mov
lock
sbb
cli
mov
xchg
lret
cmpsl
ret
pusha
lds
insb
fmull
inc
movsl
mov
add
jnp
mov
stos
adc
mov
movsl
int
adc
mov
movsl
xchg
add
cmpsl
data16
sahf
movsl
fwait
das
lods
jb
and
andb
ljmp
mov
or
movsl
stos
out
xchg
sub
xor
push
rcrl
xchg
mov
xor
fidivs
mov
sti
test
fldenv
sub
je
fcom
inc
mov
push
mov
sub
insb
adc
das
mov
movsl
or
inc
xchg
aas
rep
lahf
fwait
subl
jg
dec
xorl
sbb
movsl
in
and
adc
imul
enter
in
fbstp
or
xor
std
or
add
mov
insl
rolb
cmpsl
movsl
jne
gs
loopne
fwait
push
movsl
ret
push
imul
or
adc
lods
add
jns
mov
push
cmp
mov
ficomps
mov
mov
std
xor
sub
xchg
jmp
add
stos
cmc
and
jno
cs
mov
movsl
ret
mov
inc
stc
movsl
push
jmp
add
mov
sahf
stos
push
jbe
mov
mov
mov
popf
xlat
out
mov
ljmp
jecxz
in
sub
inc
mov
pop
push
in
and
mov
pushw
inc
mov
movsl
inc
cwtl
cmp
xchg
adc
pusha
popf
inc
popa
loopne
sub
fdivrl
fs
dec
ja
cmp
fisttpl
lds
cli
pop
adc
stc
jmp
sub
and
add
insb
cmc
sbb
or
jno
aaa
push
sub
sbb
imul
loop
movsl
xchg
ds
cli
aad
pop
adc
mov
adc
and
sub
push
movsl
outsl
dec
subb
ret
mov
fisubl
ljmp
sub
outsb
gs
movsl
adc
adc
movsl
js
inc
jmp
movsl
int
push
sbb
and
fldenv
sub
sbb
call
movsl
inc
mov
lds
sub
mov
test
movsl
enter
pop
cmpsb
cmp
mov
mov
cld
inc
rol
cmp
pop
sahf
insb
leave
xchg
mov
sub
mov
enter
jl
or
cmp
movsl
pop
and
aad
jbe
pop
sub
cmpsb
add
movsl
fsub
mov
movsl
data16
push
xchg
sbb
int
adc
dec
std
push
mov
loope
or
pop
dec
lods
daa
or
adc
mov
nop
xor
adc
sub
xchg
addb
ja
ds
movsb
out
fdiv
leave
test
xchg
std
and
add
adc
mov
pop
in
pop
movsl
sbb
andl
mov
jnp
cmp
pushf
aad
pop
ficomps
mov
pop
outsb
cmp
popf
add
xor
add
inc
jle
or
fldenv
jno
fmull
or
mov
xchg
rorl
nop
movsl
or
xchg
jge
mov
mov
mov
mov
pop
shll
mov
and
pusha
inc
or
cli
out
xchg
mov
das
fdivrs
push
std
inc
nop
add
inc
mov
mov
jle
les
push
fwait
mov
ljmp
rclb
jle
fisubrl
and
adc
xor
stc
inc
cld
imul
das
test
test
movsl
and
jns
bound
push
adc
movsl
mov
stos
lcall
mov
dec
inc
jle
push
jg
xor
leave
push
stos
imul
add
jbe
mov
xchg
xlat
ret
in
outsb
mov
std
loope
cmp
mov
push
sub
fisttps
sti
movsl
push
adc
jae
scas
mov
ret
ss
rolb
push
cwtl
and
std
enter
push
jnp
shrl
andl
fcoml
mov
ss
mov
xchg
gs
outsb
sbb
stc
lcall
stos
jmp
pop
xchg
pop
cli
or
orb
add
in
addr16
es
pop
push
sub
fs
dec
out
and
lcall
jmp
ds
push
subb
mov
hlt
cmpsb
xor
mov
cmc
insl
cmpsl
mov
jl
and
fisttps
stos
leave
popa
test
pusha
in
loope
mov
lods
add
nopl
arpl
fs
int
movsl
mov
addr16
nop
shrl
xchg
out
mov
push
dec
jno
xchg
push
xchg
lret
sahf
push
es
mov
xor
andb
std
cmc
movsl
insl
lock
scas
std
pop
rolb
jecxz
rep
push
shr
sbb
jge
pop
js
rol
testl
stc
push
push
lds
imul
out
jmp
nop
insb
stc
sbb
movsb
dec
movsl
sarb
and
std
mov
jp
in
push
je
mov
xorb
inc
movsl
imul
or
mov
mov
movsl
xchg
xor
stos
xchg
xlat
hlt
movsb
push
fadd
adc
mov
nop
cmp
rorl
stos
push
outsw
mov
je
pop
pop
repz
mov
dec
test
cmp
faddl
mov
lahf
mov
popf
push
ret
and
jl
dec
mov
add
sti
jle
stc
add
pop
in
cmpsb
dec
dec
cmp
movsl
push
jo
arpl
lea
fld1
mul
push
mov
lret
sub
enter
push
inc
stos
mov
xchg
fstpl
mov
mov
repz
call
movsl
cmc
inc
add
pop
mov
push
inc
sbb
cmp
sahf
pushf
xlat
inc
sub
out
xchg
cmpsl
mov
mov
test
add
fs
pop
in
popa
bound
loopne
sub
inc
or
lods
pop
ds
dec
pop
or
popf
mov
cmp
dec
push
fsubs
sub
jle
pushf
repnz
mov
aas
cmpsl
lcall
xor
mov
sbb
movsl
stos
ret
sub
mov
ljmp
jle
pop
movsb
sub
or
mov
inc
test
mov
lcall
lcall
int
daa
sbb
mov
loopne
sub
rolb
sbb
popa
and
or
cmpsl
stos
lods
xchg
pop
and
push
inc
add
and
jb
pop
lock
aam
dec
dec
mov
test
in
repz
daa
aad
inc
pop
mov
inc
shrl
mov
bound
mov
cmc
mov
aam
mov
or
or
mov
bound
and
and
fmull
push
popf
or
ss
mov
insb
adc
sahf
js
leave
dec
sub
sbb
sbb
push
dec
and
arpl
shll
jge
and
movsl
sub
dec
outsl
repnz
cmp
in
adc
adc
in
pop
pop
xor
jmp
movsl
negb
dec
pop
in
push
sbb
sub
sbb
xchg
ja
test
cld
push
rol
popf
hlt
icebp
test
push
loop
pop
jecxz
aad
addl
sub
push
xor
mov
jge
js
daa
mov
sbbb
je
arpl
mov
test
clc
lret
pop
pop
movsb
pusha
mov
mov
jecxz
mov
fldenv
fnsave
jo
jno
sti
adc
in
bound
cmc
mov
fdivrp
fwait
mov
mov
test
mov
sub
pop
out
and
adc
lea
jle
jo
lcall
movsl
push
imul
fwait
in
stos
sub
push
cmp
mov
add
cmpl
arpl
mov
cmp
adc
out
jg
hlt
mov
jge
test
mov
adc
mov
shl
das
mov
xor
ss
fst
movsb
push
std
insl
mov
push
lea
or
test
ljmp
mov
stos
inc
gs
std
cwtl
sub
sahf
cltd
scas
pop
fistl
pop
inc
repz
sub
stos
and
mov
mov
mov
leave
pop
loope
lcall
add
jmp
es
sub
mov
xchg
adc
jmp
rcrl
inc
xor
cmpsl
pop
xor
adc
xchg
cmp
popf
out
and
cmp
imull
fstpl
popf
fsubrs
xchg
sahf
gs
xchg
daa
inc
sbb
rcr
pop
idiv
mov
nop
jecxz
push
inc
xchg
jecxz
gs
mov
dec
xchg
push
mov
jne
push
jg
and
sub
call
fs
fstpl
sahf
xchg
push
push
mov
push
cmp
aad
xor
je
sahf
jo
popa
and
or
pop
pusha
inc
mov
mov
lock
bnd
cmpsb
ja
inc
sub
andb
jno
ljmp
iret
or
mov
mov
insl
pop
cmpsb
std
fstl
inc
test
dec
sbb
in
loop
push
ds
leave
dec
jecxz
fisttps
mov
out
mov
cmp
cltd
fsubl
cli
pop
cmp
repz
push
movsl
sub
push
mov
pop
jle
sub
inc
jp
cmc
out
mov
mov
add
fadds
adc
in
lods
jo
or
test
add
lea
jb
stc
pop
stos
cli
test
jns
xchg
jge
mov
and
ret
push
daa
cmc
jle
popf
pop
xchg
gs
stos
ret
lea
push
add
cmc
mov
movsl
mov
adc
movsl
xchg
inc
loopne
iret
jae
movsl
sub
sbb
movsl
fldpi
aam
subl
cmp
sarb
jl
data16
lret
test
pusha
inc
mov
movsl
ja
shr
scas
jp
iret
movsl
sahf
test
jg
mov
leave
and
sti
iret
add
cmp
hlt
mov
loop
repnz
sti
lret
clc
and
gs
pusha
jne
movl
cltd
movsl
inc
jo
fdivr
and
addb
jmp
mov
in
adc
xchg
negb
fldcw
dec
add
movsl
int3
in
adc
inc
aam
adc
mov
negl
test
inc
push
out
loopne
jge
xlat
ret
push
shll
cmp
jle
shll
push
lds
sbb
sub
inc
mov
ljmp
out
movsl
mov
sub
and
lods
movsl
mov
in
out
call
outsl
pop
inc
mov
icebp
mov
arpl
cltd
movsl
mov
dec
dec
clc
xlat
loope
out
gs
fldl
mov
adc
movsl
decb
std
lret
jmp
sub
xor
mov
sbb
imul
cwtl
mov
mov
pop
movsl
jae
cwtl
fidivl
clc
push
movsl
inc
subl
xchg
mov
cmp
lods
jbe
mov
mov
push
fnstsw
mov
mov
pop
sbb
push
movsb
stos
movsl
jns
mov
xchg
and
int
sbbl
scas
push
test
xchg
test
adc
pop
call
pop
subl
scas
cs
cmp
add
lcall
movsl
xchg
cmp
xchg
sub
rorb
and
mov
pop
shll
jmp
je
lods
mov
movsl
xor
mov
mov
std
test
xor
and
int
movsl
sub
cwtl
sub
push
movsl
enter
pop
leave
movsl
lret
bound
xchg
movsl
decl
loopne
jmp
out
mov
in
insl
in
jmp
jle
and
in
sti
imul
mov
dec
sbbb
in
push
adc
mov
movsl
jg
dec
js
push
mov
mov
aaa
xchg
nop
movsl
movb
scas
jle
push
pop
jns
or
ja
movsl
push
xor
mov
lea
push
in
lock
xor
in
test
stos
loopne
movsl
and
testl
pop
and
dec
jno
ror
pop
push
or
loope
sahf
cwtl
imul
cmc
gs
outsl
movsl
mov
inc
enter
aaa
mov
ja
mov
test
fs
adc
jle
and
jecxz
jnp
fcomps
movsw
cmp
sbb
movsl
and
cmpsb
sbb
inc
sar
mov
push
mov
adc
adc
or
cs
in
repnz
popa
movsl
inc
imul
jl
cmpsb
pop
sbb
scas
or
and
push
ljmp
and
iret
cli
frstor
ljmp
lea
and
movsl
scas
ss
psubusw
mov
out
sub
aam
ljmp
inc
mov
xor
pop
movsl
sub
fsubl
in
push
jp
fxch
out
movsl
lret
jno
mov
dec
cmp
push
incl
add
in
and
xor
cmpsb
cmp
je
lret
movsl
ljmp
imulb
movsl
and
bound
movsl
pop
mov
sahf
push
ljmp
fisubrs
push
adc
popf
out
fsubs
orb
jl
sahf
add
data16
in
push
pop
xor
mov
jl
sbb
sub
gs
sub
and
movsl
push
les
cmp
adcl
mov
mov
out
jg
jb
mov
mov
pop
inc
stos
fcmovu
hlt
jmp
sub
or
and
or
movsl
xchg
rcrl
mov
and
daa
movsl
xor
xor
sti
clc
ss
mov
out
cmp
inc
scas
movsl
insl
lods
dec
popa
push
jle
mov
mul
push
movsl
xor
in
cmp
movsl
call
movsb
lcall
cli
dec
sub
repz
pushf
inc
les
in
mov
and
movsl
and
mov
pop
pop
in
cmc
mov
inc
movsl
rorl
or
rolb
aas
shlb
imul
jb
fwait
sbb
pusha
out
adc
inc
add
pop
pop
xchg
dec
fisttpl
movsl
test
hlt
and
sub
gs
pop
push
fists
inc
mov
pmullw
icebp
mov
shlb
sahf
push
fstpt
push
in
xchg
pop
outsb
lock
imul
shr
addr16
decb
add
fildl
loop
and
mov
sbbb
dec
pop
aaa
lds
out
es
movsl
dec
mov
cmpsl
or
cmpsb
and
aam
sbb
test
shl
cli
gs
xorb
stc
cld
ret
jle
aad
jo
movsl
inc
sub
sub
popa
movsl
in
pop
mov
or
fsubrs
in
push
sbb
mov
mov
adc
sub
pop
movsl
adc
mov
xor
cmp
movsl
cmpsl
jo
cmpb
pop
stos
movsl
sbb
scas
mov
jp
mov
movsl
sbb
subl
push
movsl
add
pop
mov
adc
pop
movsl
bound
push
outsb
cltd
cs
ss
xor
push
popf
mov
test
push
adc
jl
add
test
movsl
fwait
ds
imul
dec
add
push
insb
sbb
mov
ret
xchg
lret
movsl
out
lds
xor
repz
xchg
das
inc
xchg
or
xchg
movsl
mov
add
addr16
and
movsl
gs
es
pop
push
bound
mov
and
in
mov
test
imul
pop
repnz
xchg
adc
aas
mov
ret
push
call
out
jg
sbb
inc
mov
xor
cmp
sbb
adc
jmp
shl
in
mov
cmp
roll
out
shll
cltd
pop
xor
mov
adc
fsubrp
mov
sti
dec
out
inc
loope
adc
mov
dec
sub
aad
cmpsl
sub
shll
lcall
add
mov
dec
jle
sbb
and
test
scas
cs
mov
mov
out
jnp
xchg
ss
loopne
fcmovnu
movsl
inc
test
gs
sti
fs
xchg
shll
mulb
and
push
pop
je
add
mov
in
mov
test
ds
adc
nop
and
movsl
push
push
dec
sub
pop
xchg
pop
in
jno
mov
mov
ja
dec
push
orb
jge
scas
fs
inc
lretw
cmpsl
popa
clc
ret
pop
jg
int3
cmpsl
aas
and
xlat
cmp
call
add
mov
push
and
aad
in
pop
icebp
pop
and
mov
and
jge
outsb
mov
sbb
inc
adc
movsl
xchg
stos
and
test
test
movsl
sbb
sub
shrb
sbb
cmp
pop
inc
add
sub
icebp
jle
mov
cmp
mov
sti
test
push
jae
mov
lahf
loope
into
adc
icebp
push
dec
mov
mov
test
mov
data16
test
and
lret
scas
cmc
pushf
es
xchg
inc
add
jle
mov
sbb
mov
add
popa
xchg
or
push
xchg
stos
ret
sub
sbb
add
xchg
popf
insl
out
and
mov
sub
mov
test
push
je
push
test
cmc
mov
xchg
enter
jnp
lcall
mov
cmpsl
das
dec
addl
adc
xlat
outsl
jbe
mov
lods
pop
pop
mov
rorb
mov
sarb
jnp
shl
test
insl
push
or
jmp
mov
cmp
add
dec
xchg
dec
imul
mov
aas
xorl
push
outsb
fsts
mov
movsl
clc
xchg
and
push
movsb
add
ljmp
push
rcrb
gs
sbb
js
or
add
popf
test
xchg
cli
aad
loopne
jne
mov
mov
shl
movsl
ficoms
icebp
pop
mov
mov
push
in
xchg
jg
add
mov
pushf
mov
bound
movsl
sbbl
push
add
jecxz
out
sbb
push
adc
push
mov
call
mov
enter
dec
mov
mov
xor
ret
jnp
movsl
bound
adc
imul
cltd
add
movsb
pop
movsl
into
insl
mov
adc
jmp
movsl
orl
test
icebp
pop
roll
into
mov
or
xchg
sub
jmp
movsl
arpl
jbe
gs
mov
ss
mov
sbb
dec
test
adc
mov
movsl
cmp
idiv
into
cmc
out
movsl
loopne
hlt
push
inc
shrb
mov
stos
das
and
xchg
aam
shl
scas
fs
inc
push
lahf
sub
test
movsl
dec
dec
cld
jae
cmp
xchg
in
inc
push
fwait
insb
sbb
lahf
clc
pop
in
leave
and
cmc
add
loope
cwtl
mov
pop
xor
in
mov
std
movsl
mov
and
or
pop
andb
ftst
out
and
inc
mov
push
clc
mov
mov
xchg
sub
sti
sbb
xor
mov
pop
movsl
xchg
scas
sbb
leave
jne
xchg
xchg
mov
icebp
loope
repnz
movsl
data16
pushf
dec
pop
lds
jo
fsubrl
movsl
in
js
ss
jle
movsl
push
outsb
mov
sbb
popa
adc
fsubr
push
sub
in
shld
sub
push
push
xchg
adc
js
jmp
or
in
pop
inc
es
movl
out
mov
movsl
mov
mov
adc
jmp
fdivl
rcrb
movsl
and
jns
repz
movsl
mov
cltd
xor
pushf
mov
cmp
in
xchg
or
movsl
fdivp
and
hlt
jg
rolb
xchg
mov
rcrb
push
adc
add
mov
movsl
out
xchg
cmp
pop
pusha
out
arpl
enter
and
in
push
pop
ret
movsl
jle
sub
mov
cmp
cmp
ja
cwtl
movsl
pop
push
dec
fildll
jmp
popf
lea
sub
mov
imul
mov
out
lcall
fucom
add
loope
cld
leave
adc
dec
fidivrl
out
fs
movsl
shrl
sub
jns
aad
pop
mov
inc
add
fimuls
jmp
movsl
adc
mov
jp
stos
adc
out
sub
repz
je
lods
das
in
repnz
push
or
lods
imul
push
adc
and
xor
dec
or
movsl
mov
aas
cwtl
inc
movsl
jp
sbb
imul
mov
mov
push
inc
int
dec
data16
push
test
inc
fcmovu
in
in
mov
push
dec
je
loope
inc
add
rolb
xchg
xor
sub
and
cmpsb
aad
imul
sbb
dec
lret
in
insl
movsl
test
xor
movsl
xchg
aas
neg
xchg
call
loopne
push
mov
pusha
or
mov
test
movsl
aas
mov
adc
test
lret
push
jnp
lock
adc
int3
loop
mov
push
in
mov
jmp
test
and
in
fadds
lds
sbb
mov
lcall
adc
adc
push
add
sbb
hlt
fneni(8087
xor
xchg
in
dec
enter
sahf
imul
or
test
mov
ljmp
or
test
push
push
movsl
sub
sbb
movsl
mov
or
jb,pn
cld
sbb
subb
mov
pop
movsl
push
dec
push
test
and
movsl
mov
xchg
jne
fwait
xor
scas
loope
or
sub
cmpsb
sahf
in
push
popf
push
xor
add
sbb
lods
pushf
fmuls
inc
ss
scas
movsl
sbb
les
adc
push
gs
mov
movsl
imul
push
movsl
aad
out
in
xor
mov
add
stos
mov
js
das
inc
and
pop
push
insb
out
xchg
sub
loop
xchg
mov
adc
mov
inc
movsb
mov
sbb
ja
movsl
inc
mov
loop
movsl
sti
ret
imul
pop
je
pop
movsl
aad
addr16
mov
in
movsl
repz
ja
bound
movsl
mov
xchg
xchg
std
out
cmpsl
shlb
pop
mov
adc
sbb
add
mov
sub
pop
adc
out
sbb
adcl
dec
lahf
add
fadds
mov
fistpl
je
scas
stc
mov
mov
jmp
imul
inc
subl
out
in
mov
pusha
xchg
pop
push
xlat
movsl
in
cmp
inc
add
fcomi
jne
jno
arpl
and
sbb
movsl
dec
jne
notl
mov
cmp
mov
mov
shrl
add
call
xchg
test
ja
mov
inc
mov
imul
lods
andl
movsl
push
or
inc
call
push
outsb
xchg
cmp
adc
mov
pop
pop
shll
daa
jge
repnz
lahf
push
lock
sti
leave
add
sbb
cmp
aaa
lods
mov
xchg
push
add
addb
clc
mov
fstl
outsl
in
cltd
add
movsl
fsubrp
mov
xor
shll
mov
loopne
test
pop
cmpsl
pop
in
int
sbb
xor
adc
ffree
in
insl
fstpl
out
lods
inc
movsl
std
enter
fldcw
mov
add
hlt
cmc
or
movsl
mov
adc
push
insl
aas
sbb
pop
in
xlat
stc
int3
pushf
gs
or
and
enter
adc
dec
cmc
loopne
movsl
in
insl
mov
and
or
adc
mov
pop
mov
xchg
jno
mov
dec
inc
xor
sbb
scas
mov
mov
adc
movsl
ds
or
and
xchg
cltd
shll
mov
fidivrl
mov
daa
cmp
jbe
push
scas
movsb
sbb
sar
cmp
adc
in
xchg
movsl
lea
outsl
or
xchg
fildl
pop
sahf
movsl
cmpsl
add
pop
and
xlat
movsl
xchg
fcmovnbe
dec
lcall
out
inc
add
int3
inc
fwait
push
aad
jl
sbb
fmul
sub
fidivs
movsl
inc
iret
xchg
repnz
lods
pop
movsl
lret
out
aad
pop
cmp
movsb
or
pop
sub
test
movsl
mov
inc
adc
addr16
mov
pop
movsl
gs
fucomp
mov
push
data16
leave
mov
icebp
mov
sbb
movsl
lock
rcll
loopne
popf
pop
cmpl
cltd
movsl
xlat
mov
mov
ljmp
call
inc
popf
add
sahf
stos
inc
xchg
mov
mov
dec
ss
or
xchg
jbe
icebp
mov
and
mov
pop
and
mov
push
jge
jb
popa
sub
test
mov
test
pop
lret
adc
sbbb
push
rcrl
fnsave
mov
fildll
and
mov
stos
push
mov
sub
push
ja
sahf
xchg
arpl
or
js
stos
cmc
jp
icebp
call
std
push
daa
xchg
sub
es
and
addr16
jg
lock
dec
push
mov
dec
xchg
mov
popa
imull
push
push
repnz
push
cli
or
stos
sbb
dec
and
arpl
mov
and
sahf
ffree
pop
mov
idivb
dec
push
ret
stos
cs
stc
sub
push
cmp
cli
adc
mov
adc
inc
cwtl
scas
insb
ljmp
aad
pop
inc
adc
das
sbb
jnp
pop
and
jns
or
mov
js
leave
adc
dec
sahf
mov
jle
in
cmpsb
imul
and
mov
cmp
and
jecxz
es
aaa
add
stos
sbb
icebp
movsb
cmpsl
imul
loopne
pop
ret
cmc
ss
pop
cmc
icebp
shll
jae
arpl
inc
test
mov
fdivl
out
or
pop
lds
mov
shrb
pop
sbb
mov
sub
xchg
push
rcrb
push
repz
stos
sbb
mov
lods
push
test
hlt
ret
or
and
or
fisubs
or
cmp
movsl
pusha
and
scas
hlt
or
inc
ljmp
sub
inc
and
inc
pop
and
outsl
xchg
push
pop
stos
cmp
pop
bound
lahf
and
lds
mov
outsl
xor
add
push
movsl
fsubrs
mov
ss
rorb
sbb
or
jb
stos
out
dec
pop
cmc
mov
mov
cmp
inc
xchg
fst
lahf
leave
sub
js
cltd
or
fninit
popf
inc
into
rcl
pop
sbb
fcoml
jmp
mov
inc
jp
adcl
mov
mov
int3
mov
mov
icebp
popf
jo
jns
jnp
or
mov
clc
mov
out
lcall
pop
and
sahf
pop
inc
stos
cmp
cmp
aaa
xlat
shrl
mov
shrl
and
sbb
pop
cmpsl
xchg
je
pop
or
sti
jns
movsl
pop
sbb
das
push
cwtl
cltd
sub
or
sbbb
cmp
adc
mov
iret
test
inc
and
cwtl
in
cmpsl
cld
sub
sub
mov
cmp
arpl
into
jp
jns
cld
jns
icebp
xchg
jecxz
out
adc
dec
outsb
lock
mov
mov
adc
cmp
jle
sub
xchg
fidivs
insb
in
andl
aad
xor
inc
sbb
xsha256
cmpsb
adc
add
loop
loopne
shl
or
mov
outsl
and
jecxz
stos
xchg
sub
jp
pop
ret
sbb
mov
lret
xchg
inc
cmp
adc
pop
sub
cmc
jbe
imul
int3
adc
dec
cmpsl
into
movsl
lret
cltd
and
inc
movsl
push
ds
fisubs
mov
pushf
loop
movsl
mov
sub
ret
cs
lods
into
sahf
in
outsb
repnz
push
jbe
mov
jne
popa
push
rep
push
aad
ficomps
mov
inc
divps
sbb
movsl
nop
pop
iret
call
in
shll
out
push
xorl
leave
inc
movsl
pop
xor
std
sbb
mov
inc
inc
cmpl
adc
dec
imul
xlat
jb
push
lret
in
sub
pop
movsl
cmc
mov
jp
movsl
xor
mov
add
xor
sub
std
add
movsl
sarb
repnz
mov
xor
loopne
jnp
cmp
enter
mov
jge
insl
push
xor
test
movsl
stos
push
inc
xchg
and
push
and
jge
icebp
insl
inc
push
lds
scas
or
movsl
adc
aas
es
movsl
fmull
dec
jnp
jae
push
sub
mov
loope
add
dec
jg
int
enter
roll
xor
cmpsb
lods
or
dec
in
inc
ljmp
fcomip
sub
movsl
push
int3
or
clc
jbe
pop
sahf
gs
aas
mov
xor
aad
cmpsb
or
mov
push
sbbl
addr16
push
mov
mov
fistps
pop
mov
sub
mov
and
movsl
stc
inc
out
mov
jmp
stc
pusha
lcall
lcall
push
adc
fs
lcall
repz
xor
data16
ret
rcrl
dec
clc
jmp
lds
lds
and
das
movsl
mov
mov
enter
pop
pop
jnp
inc
mov
shlb
add
rcl
sti
and
fsts
pop
mov
movsl
neg
int3
stc
add
jae
dec
pop
in
mov
pop
movsl
mov
cmpsb
dec
lock
or
repnz
mov
arpl
std
and
xchg
and
mov
movsl
loopne
in
sub
movsl
test
pop
push
mov
or
ja
adc
hlt
mov
sbb
xor
inc
ja
int3
sahf
cltd
movsl
iret
lahf
cmp
xchg
stc
and
cli
loopne
mov
movsl
jne
push
insl
stos
cltd
push
adc
mov
sbbl
lds
sbb
loop
movsl
dec
insl
pop
jo
lock
adc
sahf
cltd
lods
xchg
fstp
xchg
dec
movsl
xor
outsb
daa
sbb
and
cmpsl
pushf
test
ja
mov
test
and
jge
mov
movsl
imul
fcompl
mov
and
mov
in
add
xchg
std
inc
mov
ret
mov
push
jle
fsubs
push
or
jno
andb
ret
pop
in
pop
cmp
lret
frstor
out
sub
movsl
push
add
dec
mov
mov
out
adc
out
sub
outsb
arpl
pusha
jns
pop
pop
gs
call
push
sub
ror
gs
inc
scas
xchg
xor
dec
mov
sbb
mov
loopne
movsl
negb
outsl
mov
lods
adc
ret
pop
stos
es
push
cmp
adc
out
inc
out
stos
std
and
mov
jmp
mov
aas
xor
cmp
push
inc
sbb
movsl
mov
jg
pop
or
sahf
movsl
cmpsb
cmp
in
jle
insb
movsl
pop
dec
mov
cs
xchg
mov
mov
dec
push
jo
lret
scas
pop
jmp
cmc
sub
add
hlt
movsl
mov
imul
add
frstor
cli
jl
xchg
movsl
shrb
dec
je
std
fnsave
xlat
jl
in
movsl
jae
and
movsl
aas
jle
imul
lods
lahf
movsl
mov
inc
outsb
dec
mov
in
mov
cmp
xchg
jl
mov
pushf
jg
add
hlt
push
lcall
shlb
sub
std
aam
dec
jne
adc
add
push
cwtl
fsubs
test
mov
pop
nop
or
push
loopne
adc
test
and
aaa
mov
adc
jecxz
xchg
mov
leave
jp
ljmp
xlat
add
pop
sarl
roll
xchg
pusha
mov
in
aad
lock
sub
je
sti
pop
jns
push
dec
imul
sbb
aaa
loop
adc
inc
jns
movsl
sub
or
pop
pop
mov
inc
push
jge
shll
and
or
loop
adc
fdiv
clc
je
mov
jns
aad
sub
aad
dec
jmp
sbb
insb
dec
sbb
stos
cmp
ret
ljmp
lock
movsb
push
jmp
in
prefetch
inc
movsb
hlt
jp
movsl
bound
cmp
push
popa
mov
mov
in
xchg
movsl
xor
outsl
loope
lcall
or
pop
mov
mov
add
inc
aaa
clc
mov
idivl
push
sbb
rep
push
lods
sbb
and
stos
paddd
in
lds
push
cmpsb
adc
mov
movsl
rolb
cmp
pop
sbb
je
in
daa
cwtl
dec
lods
pop
mov
inc
pop
lds
xchg
cli
icebp
inc
and
sub
and
or
pop
movsl
into
mov
fsts
psraw
inc
jp
xlat
jecxz
and
popa
sbb
pop
and
stc
mov
mov
hlt
insb
enter
imul
pop
test
in
in
decb
imul
cmc
popa
and
ljmp
imul
stc
arpl
loope
sar
adc
shll
adc
dec
stos
sbb
cmc
adc
fstpl
cmp
jbe
dec
sub
test
mov
mov
in
lds
sub
push
test
push
sahf
popa
cmpsl
flds
sbb
stos
ret
sub
and
jbe
push
jne
movsl
push
sub
test
lods
std
push
aad
sub
sub
daa
push
cmp
scas
lahf
loopne
sub
push
mov
in
icebp
sbb
subl
mov
pusha
cmp
push
int3
shlb
nop
pop
pusha
sub
out
aaa
pop
jae
rorb
pop
pushf
or
pusha
add
std
ds
and
sti
data16
repz
daa
add
push
jbe
jg
mov
adc
aam
stos
popa
pushf
sbb
cmc
jns
aam
jno
jge
and
lret
inc
std
dec
lods
test
sti
imul
test
mov
sbb
or
jge
xchg
mov
cld
movsl
fnsave
pop
xchg
cmp
lods
lret
pusha
js
or
push
mov
mov
insl
test
daa
push
leave
mov
in
add
sbb
mov
test
pushf
popa
mov
imul
sarb
aas
notb
int
adc
jae
fsubs
icebp
cmc
pushf
sub
xor
jg
jno
or
movsb
push
mov
xchg
sti
clc
shl
stos
in
pop
mov
lea
stos
push
xchg
xlat
movsl
repnz
mov
xchg
push
dec
mov
cmpsb
scas
stos
adc
movsl
into
lods
mov
pop
aaa
xchg
and
sti
jecxz
inc
add
or
and
adc
jp
push
movsl
xchg
mov
in
lret
and
mov
repnz
aas
push
bound
movsl
adc
movsl
cld
add
jae
int
shlb
mov
add
mov
movsl
xchg
cltd
mov
ret
movsl
jnp
pop
icebp
pop
jg
iret
jbe
aad
call
mov
stos
pop
xchg
in
std
dec
add
pop
pop
data16
add
push
xchg
pop
mov
addps
fsts
iret
lahf
sub
dec
push
imul
sbb
mov
das
mov
jecxz
mov
aad
mov
out
or
inc
add
inc
psubw
pushf
aad
shrb
int
jge
mov
lret
outsb
add
shlb
scas
movsb
sbb
mov
fsubrs
or
movsl
out
mov
pop
es
and
mov
inc
cmc
repz
jle
out
pop
out
in
movsl
or
int
test
xchg
shll
cmp
lcall
pushf
rcl
leave
hlt
push
and
lea
inc
popf
fwait
aas
mov
orb
out
movsl
or
sub
sub
jp
mov
clc
out
jl
popa
andb
jmp
addr16
pop
sbb
movb
mov
movsl
xor
mov
inc
iret
movsl
or
in
sub
repnz
cmpsl
xor
mov
mov
dec
aas
push
movsl
test
fwait
rorb
nop
pop
jb
ss
or
ljmp
std
push
pop
fistpl
into
aad
movsl
shlb
fmul
roll
sbb
jbe
lods
pop
sbb
arpl
lret
std
mov
or
bound
mov
loopne
movsl
outsl
aam
shr
sub
out
sub
in
push
push
ret
cmpsl
mov
cmp
sahf
mov
test
mov
push
mov
pop
push
jnp
push
xorb
out
das
leave
pop
out
arpl
xchg
lcall
or
jp
push
and
bound
mov
dec
js
imul
sbbb
adc
mov
movsl
pop
dec
imul
cld
movsl
iret
aad
xchg
imul
adc
fs
dec
movsl
adc
in
sahf
popa
out
movsl
dec
insl
push
jp
scas
fistpll
mov
cmp
xor
insb
stc
movsl
inc
ss
jns
mov
mov
inc
in
adc
dec
movsl
shr
andl
cltd
mov
xchg
mov
scas
loope
popa
movsl
adc
popl
leave
idivl
mov
sub
nop
insb
int
mov
ret
cmp
fs
and
test
xchg
mov
add
movsl
push
mov
movsl
fdivrl
mov
pop
insl
ss
push
push
mov
and
ja
ljmp
xchg
int
out
stos
test
push
sbb
pop
add
jl
xchg
movsl
sbb
into
pop
std
movsl
lcall
pop
leave
cmp
fs
jns
sub
lods
cld
jg
movsl
and
mov
sbb
push
repnz
scas
mov
shl
xchg
aaa
test
andb
add
arpl
scas
shld
ljmp
iret
movsl
push
cmp
rcrl
jb
movsl
cld
xchg
inc
fmulp
mov
and
sub
lds
rep
insb
lods
push
push
sub
movsl
cmc
fnstsw
jecxz
cmp
push
lds
add
leave
movsl
in
test
sbb
cld
in
push
sbb
pop
and
add
pop
arpl
xor
mov
jmp
pop
mov
or
xchg
lods
mov
and
sub
movsl
xor
lods
cmp
mov
jle
adcl
ja
stos
xchg
xchg
es
pushf
std
movsl
fcmove
cmc
outsb
stos
gs
xchg
movsl
xchg
lea
das
jle
ret
lock
int3
addl
fisubs
sbb
mov
mov
fcmovne
lock
adc
pop
jns
nop
lds
dec
jl
in
jo
jnp
mov
lret
push
test
xchg
ljmp
dec
insl
mov
pop
push
ret
sub
aaa
cltd
dec
cld
mov
inc
and
mov
cwtl
in
in
mov
negb
iret
test
pop
add
dec
outsl
sbb
fs
movsl
inc
scas
in
das
out
iret
movsl
loop
ret
add
imull
adc
cs
sub
movsl
push
mov
xchg
inc
mov
loope
jg
cmc
lret
mov
xlat
fsubrl
clc
sbb
jmp
pop
adc
cmp
add
mov
js
int
iret
movsl
into
pop
insl
mov
sbb
fmull
sbb
outsl
dec
and
dec
js
shll
sub
jbe
sbb
aaa
jg
and
pop
sub
mov
and
cmp
mov
pushf
mov
sar
rcrb
movsl
xlat
fxtract
rorl
mov
xor
jb
and
fs
jg
jmp
in
out
inc
mov
movsl
and
pop
lds
mov
mov
sarb
and
pop
mov
adc
jbe
scas
movsl
cwtl
data16
ret
call
dec
ret
jmp
test
jbe
inc
lds
mov
sub
movsl
in
add
jae
sbb
insb
xlat
mov
push
mov
dec
mov
mov
int3
fsubs
jo
and
xchg
adc
jle
jmp
and
call
cmpsl
mov
movsl
rolb
std
jae
sbb
pushf
shrl
pop
in
push
call
cmp
sub
in
push
xor
pop
sbb
loopne
mov
dec
lahf
jmp
xchg
push
int3
or
repnz
je
leave
pop
movsl
mov
push
push
loopne
jae
cmc
sub
pushf
mov
or
add
lds
aam
icebp
out
and
xchg
push
push
xchg
adc
fldenv
pop
pop
shrb
test
and
repz
add
lret
push
jns
decl
add
repz
lods
lahf
push
cwtl
sub
sbb
mov
mov
xor
popa
jo
inc
popf
add
mov
not
or
in
dec
cmpsl
addr16
fldcw
push
loope
mov
mov
movsl
arpl
sub
iret
xchg
cli
sahf
mov
mov
xchg
sbb
push
jp
inc
mov
xor
mov
jno
add
cli
into
ret
sbb
jnp
insb
into
fisubl
imul
icebp
mov
repnz
pop
lods
adc
hlt
imul
pop
in
or
shlb
sbb
mov
mov
xor
daa
jo
xchg
xchg
adc
pop
data16
mov
sti
inc
ja
fsubrs
and
test
inc
sahf
fcoml
mov
clc
shr
stc
aam
sub
lds
cs
cltd
movsl
test
dec
inc
xchg
xchg
movsb
mov
hlt
lcall
inc
and
shrb
xor
dec
xchg
push
lods
imul
xlat
mov
sbb
mov
je
aaa
dec
in
mov
ret
inc
mov
cmp
scas
sbb
add
or
out
out
pop
dec
int
stc
pop
add
lret
movsl
imulb
xchg
mov
aam
dec
outsb
sub
jp
pop
lea
lods
or
add
pop
mov
pop
xchg
sub
pop
in
cltd
adc
sbb
cmp
xchg
mov
shll
sbb
pop
movsl
fdivr
fisttpll
hlt
mov
inc
dec
lods
or
stos
or
stos
lret
movsl
and
popf
bnd
mov
addr16
int3
movsl
ret
push
push
in
inc
mov
jg
pop
in
out
inc
pop
gs
in
int
push
enter
push
jae
add
or
jp
cmc
pop
test
stos
sbb
sahf
mov
into
loop
in
push
leave
xor
mov
mov
sub
xchg
outsl
fldenv
pop
jo
insl
mov
pop
fsub
push
iret
repnz
mov
out
xor
xor
and
fimuls
roll
movsl
and
in
add
in
rcrb
pusha
dec
add
or
rcrb
mov
inc
pop
dec
sub
push
sahf
sub
gs
jno
dec
je
movsl
je
scas
movsb
pop
xchg
das
mov
andl
shll
std
enter
stos
xchg
js
and
xor
popf
and
mov
scas
shlb
mov
sbb
or
movsl
xchg
adc
or
outsb
jbe
xchg
xchg
add
pop
in
nop
mov
add
popf
out
pop
in
lret
in
jmp
rcr
cmp
negl
mov
and
xchg
sti
mov
xchg
and
jl
pop
sbbl
mov
outsl
adcb
mov
mov
xor
push
and
inc
sti
popf
dec
lcall
stc
jbe
sahf
imul
push
push
jp
push
cmpsb
xchg
mov
mov
add
das
imul
and
mov
mov
pop
jmp
jno
inc
cld
pop
aad
xlat
sahf
push
sub
jmp
enter
push
mov
scas
test
loop
jnp
mov
xor
int3
jl
arpl
mov
in
add
and
movsl
shlb
lret
jbe
shrb
imul
mov
jg
enter
jnp
push
cmc
shl
int3
movsl
movsb
lret
lcall
jle
xchg
pop
fistps
sbb
movsl
sti
lret
les
jmp
cmp
mov
mov
test
jmp
or
xor
movsl
sub
sti
push
iret
lock
movsl
rcrb
jecxz
jo
or
adc
mov
enter
es
adc
pop
mov
fsub
sbb
cmc
lcall
mov
and
movsl
xor
pop
movsl
out
lock
pop
movl
cmp
mov
movsl
popf
dec
mov
and
ret
movsl
rorb
ds
xchg
in
imul
subl
mov
and
lret
lds
cli
ds
movsl
dec
xor
xorb
test
ss
mov
push
sbb
aad
dec
stc
movsl
inc
out
inc
adc
mov
cli
icebp
mov
sub
lds
shld
mov
call
xor
aas
or
xchg
mov
add
pop
loopne
lock
movsl
inc
negl
cmc
lods
ss
xchg
sbb
enter
jae
stos
cld
mov
mov
mov
pop
dec
stos
xor
pop
ss
aaa
movsl
add
imul
leave
mov
pop
adc
jb
pop
push
into
cld
js
rol
cmp
mov
lods
xlat
fdivs
push
lds
xchg
cli
int
sbb
and
xchg
frstpm(287
out
aam
test
sbb
mov
mov
rcll
fs
movsl
fcomps
push
fmulp
clc
adcl
aad
lock
cli
lret
jl
push
xlat
mov
mull
sbb
jno
andl
cmp
pop
adc
outsb
mov
push
inc
addl
xchg
mov
insb
dec
fstp
repnz
std
popf
dec
xchg
test
sub
movsl
sahf
mov
fcoml
fimull
xchg
in
aam
pop
imul
imul
outsb
lds
inc
pop
pop
repz
aas
mov
sbb
inc
xchg
rcl
pusha
xor
loope,pn
cmp
movsl
jbe
push
push
test
jle
cmp
dec
pop
jns
xchg
or
arpl
inc
push
lahf
jp
lds
pop
pop
imul
movsb
js
inc
jb
mov
jae
ljmp
in
and
and
jl
mov
inc
leave
lret
cwtl
and
movsl
jge
in
daa
sub
test
xchg
stc
cwtl
mov
xor
xor
adc
lds
or
fadd
stc
les
test
xchg
ret
fsts
xchg
test
mov
stc
add
mov
jge
popl
fldl
rorb
sub
ret
sahf
les
lock
rol
mov
cmpsl
aad
adc
ss
xchg
cmova
movsl
jle
pop
push
adc
mov
out
push
movsl
xchg
push
push
int
jb
push
sub
dec
inc
mov
fwait
dec
push
imul
jb
call
pop
sub
loop
pop
mov
das
repz
call
and
cmc
inc
sub
add
movsl
push
jecxz
cltd
cmp
inc
movsl
mov
jle
ret
pop
andl
movsl
mov
or
cmc
xchg
popf
shll
cltd
stos
pop
push
movsl
inc
mov
test
movsl
pop
xchg
push
movsl
dec
jl
mov
dec
jo
movsl
push
ja
push
adc
repnz
outsl
notb
pushf
sbb
sub
push
pop
mov
subl
scas
push
inc
push
movsl
xchg
or
je
in
into
movsl
enter
ljmp
stos
pop
lret
dec
mov
mov
adc
test
pop
jecxz
leave
insw
in
iret
jb
movsl
cmpsb
mov
xchg
add
pop
push
stc
bound
lods
loop
lret
cld
icebp
mov
push
push
xor
shll
movsl
push
push
cmpl
mov
jl
xor
cmpsl
inc
aaa
or
adc
test
mov
xor
adc
sbb
ret
and
test
add
mov
pop
sbbb
popf
sub
or
aaa
and
sub
pop
sbb
les
add
scas
test
div
enter
mov
int3
add
movsl
cmpsb
out
cs
dec
mov
jl
sbb
xor
pop
push
movsl
movsb
or
shrl
cwtl
sahf
sub
les
push
inc
mov
hlt
cmpsl
and
dec
adc
lret
call
pop
frstor
add
ss
sub
and
sbb
pop
jge
push
ljmp
add
hlt
movsb
shll
jecxz
hlt
les
or
test
jmp
mov
push
je
and
repz
and
leave
rcr
and
ss
in
dec
sbb
jbe
push
push
mov
icebp
sub
or
mov
insb
jecxz
scas
inc
mov
sbb
xchg
and
and
jnp
inc
out
hlt
pushf
les
test
sub
cmc
into
and
dec
int
cmc
sub
push
dec
jl
repz
cmp
icebp
cmc
idiv
inc
mov
fstp
pop
and
gs
int3
mov
xchg
jnp
sub
loope
sbb
cmc
pop
cwtl
jne
cmp
pop
loop
push
inc
andb
lods
xor
sub
into
mov
xor
call
icebp
scas
movsl
xchg
pop
ljmp
negl
push
pusha
push
je
mov
cmp
fnstcw
and
push
lret
and
jae
sahf
xchg
rcl
or
mov
mov
les
or
ja
popf
dec
movsl
cmpsl
lret
fsubrl
aas
fisubl
push
xor
lods
das
pop
fs
fstl
clc
mov
popf
pop
ja
cmp
xchg
movsb
xchg
loopne
test
rorb
xchg
sub
mov
cmp
cli
scas
xor
pushw
lcall
cmp
movsl
add
sub
pop
mov
shll
arpl
std
in
lock
inc
mov
test
xlat
movsl
loop
fisttpll
outsb
jno
and
out
imul
add
lahf
xchg
pop
test
and
or
pop
dec
jo
mov
jle
inc
xchg
aas
scas
push
movsl
jb
sar
outsb
lea
jmp
cli
movsl
push
inc
imul
and
adcl
mov
fs
movsl
jne
aam
pop
and
in
or
addr16
movsl
stos
pop
inc
inc
jns
and
mov
movsl
cmp
pusha
repz
gs
inc
lock
out
fsts
mov
xchg
cmp
xchg
xor
pop
pop
sti
fidivs
push
pop
xchg
push
pop
mov
inc
scas
or
sub
adc
call
ret
inc
out
mov
mov
xchg
mov
lods
mov
je
jb
fidivl
and
xchg
lds
out
mov
jecxz
enter
nop
sbb
adc
jge
hlt
movsl
test
negb
mov
repnz
rcr
notl
jge
out
adc
pop
cmp
stos
insl
imul
ja
popf
pusha
jp
or
shll
movsl
mov
and
lcall
add
lds
or
in
movsl
fcomip
in
mov
or
int3
and
imul
push
or
clc
fnstcw
fisubl
arpl
inc
push
mov
dec
icebp
rol
lahf
mov
andb
inc
jo
sbb
bound
push
imul
fwait
mov
lret
movsl
pop
iret
ljmp
lds
mov
sbb
out
in
dec
mov
mov
loope
ljmp
mov
out
test
movsl
iret
sub
sbb
scas
push
rep
add
add
movsl
shl
push
std
enter
movsl
aas
inc
pushf
xchg
repz
pop
movsl
fistps
xchg
fs
popa
repnz
and
stos
xchg
inc
das
es
mov
movsb
xchg
and
lods
inc
and
sub
push
movsl
push
outsb
inc
ljmp
jmp
iret
push
fldl
sbb
lods
and
mov
movsl
test
xchg
cmp
sub
sub
lds
es
push
add
dec
subl
loopne
mov
cli
rol
mov
movsl
out
jae
sub
mov
aad
push
dec
movsl
jb
aas
fucomip
aad
dec
add
or
int
test
sahf
into
int
orb
addr16
jge
pop
test
jle
shll
movsl
cmp
mov
mov
ret
push
movsb
cmp
stc
mov
jg
gs
popa
xchg
lds
stc
cli
pop
pop
sbb
enter
outsb
movsl
push
lret
ljmp
xchg
in
les
pusha
mov
out
push
inc
repnz
xchg
inc
mov
in
out
sti
scas
sub
lock
rolb
into
pusha
int
repz
cmp
inc
push
movl
bound
gs
ja
cmp
enter
mov
jo
mov
cmc
xor
jb
in
xchg
push
pop
sti
fdiv
repnz
movsl
inc
cmp
and
jno
jb
movsl
arpl
fsubs
sbb
iret
mov
sbb
rorb
push
call
inc
xchg
jge
inc
push
iret
ljmp
movsl
arpl
das
movsl
ds
mov
pop
js
dec
adc
in
out
int
pop
pop
and
movsl
cmc
js
push
stos
cli
lods
jmp
movsl
mov
cmp
fisubl
and
mov
nop
cld
test
xchg
movsl
mov
popa
fs
fcompl
push
mov
lods
movsl
sub
cwtl
jmp
dec
sbb
jbe
fwait
mov
sti
movsl
out
test
push
and
push
push
add
cmpsl
mov
and
lods
movb
mov
movsl
jae
dec
hlt
jns
mov
xor
cmpsb
cmc
fidivs
xor
imul
movsl
aam
shlb
je
lret
test
dec
cmc
mov
stos
movsl
push
dec
int3
xchg
push
jbe
push
cwtl
pop
jp
aad
inc
movsl
dec
scas
adc
mov
cli
mov
dec
adc
mov
push
inc
push
ja
out
xchg
loope
pusha
imul
mov
xor
adc
dec
xlat
imul
in
shll
cmpsb
clc
mov
lds
lea
jecxz
mov
hlt
outsb
movsl
aad
inc
add
cmp
test
leave
iret
add
mov
pop
jnp
jae
add
pushf
scas
lret
pop
sbb
mov
or
pop
and
fstp
inc
pop
mov
mov
ret
add
xor
in
mov
int3
movsl
clc
outsb
lahf
aam
lds
mov
sub
imul
xchg
or
pop
lds
fsubp
lock
shr
jne
popl
ljmp
cmc
dec
push
movsl
sub
push
pushf
add
iret
jnp
adc
fisubrs
vpunpcklwd
lock
pop
adc
test
dec
jo
mov
pop
popf
mov
adc
in
es
xor
xor
jecxz
movsl
loop
sub
in
movsl
xor
jmp
shlb
ret
outsb
movsb
sahf
mov
aam
mov
xchg
xchg
push
xor
jnp
xor
cld
repz
movsl
std
xchg
mov
test
sbb
adc
andb
pop
scas
pop
movsl
ror
inc
dec
adc
and
add
or
pop
mov
push
push
scas
or
xchg
ret
sbb
cld
bound
jl
xor
sub
mov
push
pushf
pop
addl
inc
adc
inc
fimull
cmp
push
insl
inc
mov
push
add
mov
sbb
mov
push
movsl
hlt
jl
dec
jne
pop
test
das
lea
mov
test
es
loop
jne
cmp
cld
aad
lahf
xchg
repnz
leave
adc
fcom
lds
mov
or
loope
adc
and
rcll
xchg
sbb
lds
stos
add
inc
insl
fxam
fs
mov
cmp
add
loope
fldl
popf
sub
popf
mov
lods
and
movsl
pop
cmc
int3
test
mov
add
imul
movsl
in
in
pop
or
in
xor
mov
loop
stc
inc
movsl
aam
add
pop
jp
jnp
in
test
inc
movsl
sahf
xchg
cs
lods
loop
mov
and
ljmp
cmp
fucomip
push
es
mov
movsl
repnz
jecxz
mov
aaa
push
sbb
push
movsl
jmp
andb
jp
insl
fdivrs
xchg
dec
pushf
mov
sub
arpl
mul
mov
adc
fstpl
or
or
dec
sub
mov
and
out
adc
in
movsl
cmpsl
arpl
adc
mov
and
mov
mov
int
movsb
add
xchg
and
daa
inc
incb
es
cmpsl
mov
jecxz
fcompl
ljmp
movsl
dec
out
or
adc
xor
js
pop
jae
pop
ljmp
adc
scas
daa
and
push
push
mov
leave
mov
sahf
insb
mov
pop
push
xor
mov
cltd
push
data16
imul
mov
out
pusha
push
sub
vpaddb
fcoms
jne
out
repz
inc
adc
mov
sub
test
mov
jp
das
jl
inc
add
pop
push
pushf
mov
jl
stos
add
icebp
fdivs
aad
das
pop
es
xchg
inc
ds
outsl
cmp
dec
icebp
stos
sbb
fnstenv
cltd
popf
movsb
es
xlat
sub
in
ja
jle
mov
push
js
xchg
and
stos
loope
cmpsb
je
sbb
and
movsl
mov
push
ret
inc
in
outsb
or
jbe
mov
sarb
cmpsb
mov
or
dec
jecxz
scas
inc
ss
sbb
repz
xchg
stos
icebp
and
push
sub
push
pusha
fldenv
std
adc
pop
sbb
jl
aad
cmpsb
and
shl
fsts
sub
cwtl
xor
shlb
dec
ss
sbb
sbb
mov
outsb
push
movsl
add
jne
and
pop
mov
cmpsl
add
mov
icebp
cmp
jmp
mov
shll
in
test
mov
mov
or
out
xlat
mov
lahf
fwait
cmp
test
aas
jnp
jl
jno
xorl
and
lret
cwtl
fadds
or
pushf
imul
push
movsl
pop
push
mov
pop
call
loop
dec
push
imul
enter
das
sbb
pop
stos
aaa
inc
mov
inc
mov
imul
or
iret
mov
dec
insb
in
or
mov
inc
ljmp
jbe
mov
insb
daa
fld
stc
mov
lock
movsl
inc
mov
ret
xchg
sub
adc
insb
sbb
jns
imul
jmp
mov
jns
js
pop
pop
je
inc
fiadds
enter
in
jae
mov
popa
mov
mov
out
pop
lcall
push
dec
inc
jl
aad
imul
xor
pushf
cmpsl
cmpsl
and
inc
adcb
pushf
cltd
and
ss
sub
mov
mov
movsl
lcall
jb
push
jecxz
out
adc
pop
inc
pop
jno
sahf
bts
sub
orb
test
mov
decb
in
sbb
push
cmp
push
fldenv
jae
push
andl
sbb
sub
movsb
adc
test
mov
push
repz
mov
scas
cmpsb
stc
xor
inc
mov
adc
push
xchg
movsl
and
out
pop
cmc
loop
sub
aaa
add
in
xchg
fcmovbe
stos
stc
bound
push
push
cli
popf
arpl
pop
in
jl
sbb
dec
and
inc
dec
push
cmp
int3
and
pop
rcr
lcall
mov
push
add
add
xchg
aas
or
movsl
mov
cwtl
pop
mov
cmc
shrb
pop
push
and
push
int
loopne
movsl
inc
fcoms
bound
sub
aam
mov
adc
jmp
movsl
xor
jp
dec
in
popf
inc
xor
movsl
dec
out
loop
shlb
incb
mov
nop
xor
aas
movsl
mov
mov
add
push
not
xor
fs
test
movsl
loopne
fcomps
mov
bound
jle
in
rclb
xchg
or
ljmp
test
mull
fcompl
xchg
mov
cmp
movsl
add
jmp
jnp
cmpsb
adc
mov
mov
cmp
sub
or
movsb
movsl
ret
jp
dec
dec
je
jecxz
jb
push
ss
insb
and
xor
push
jle
push
xor
jb
cmp
test
movsl
push
insb
dec
dec
hlt
loope
push
movsl
fmuls
inc
and
sbb
cmpsb
inc
sahf
dec
add
push
mov
repnz
mov
sbb
mov
jne
test
mov
mov
int
pop
add
js
cmpsb
mov
in
lods
mov
es
loope
daa
xchg
popf
cmp
push
mov
nop
movsb
add
pop
sahf
add
cmc
push
gs
outsb
mov
lahf
movsl
push
push
and
icebp
jecxz
mov
loop
into
movsl
mov
adc
sbb
dec
mov
or
fldenv
flds
dec
mov
rol
mov
sub
jp
fbstp
ja
fadd
notl
cwtl
xor
sub
mov
insl
mov
xor
and
sahf
fnsave
outsb
dec
loopne
mov
jb
push
shrb
out
push
jp
ror
add
movsl
pop
jnp
aam
cmp
mov
leave
push
js
inc
clc
repnz
mov
lock
jg
pusha
jb
and
stos
sbb
andb
inc
movhps
sbb
repz
lock
fnsave
les
mov
mov
mov
movsl
xchg
mov
gs
movsl
mov
sahf
sub
push
cmp
mov
pop
push
in
cld
data16
punpcklwd
push
lock
int3
jmp
imul
sbb
mov
in
mov
es
sub
test
sahf
rcrb
mov
call
mov
lds
int3
jo
lock
inc
movsl
test
xchg
jg
jns
clc
test
addr16
jbe
movsl
in
enter
movsl
cltd
inc
ss
xchg
dec
pop
movsl
mov
les
movsl
adc
ja
sarb
cmp
subb
mov
insb
fucomp
mov
andl
in
mov
mov
aad
cwtl
andl
mov
xchg
test
scas
addr16
movsb
pop
ret
jb
movsl
adc
lea
test
aaa
push
cmp
inc
sahf
test
add
xorl
cld
mov
sub
movsl
mov
std
pop
int3
mov
mov
int
sahf
cmp
aaa
movsl
xor
test
xor
movsl
mov
arpl
loope
movsl
or
jo
cld
rcrb
sub
addl
cmc
mov
sub
fadds
jno
movsl
sbb
lret
mov
scas
and
dec
aam
call
mov
fisubl
add
int
dec
inc
movsl
imul
mov
pop
xchg
xor
adc
mov
leave
call
mov
movsl
xor
or
push
jmp
daa
sahf
xchg
cld
fldcw
in
add
into
mov
adc
and
adc
sub
pop
pop
rol
mov
mov
nop
xchg
jbe
pop
jge
inc
push
cltd
lds
or
in
fstps
mov
scas
in
jg
xlat
rep
add
popa
push
lahf
sbb
mov
movsl
test
xor
xchg
movsl
shl
or
xor
lds
lock
movsl
out
xchg
mov
cmp
data16
add
movsl
dec
popa
lds
lds
mov
and
outsb
pusha
cmp
das
and
xchg
push
sbb
movsl
fcomps
out
nopl
movsl
sbb
test
mov
mov
xor
push
inc
stos
mov
or
inc
icebp
add
outsw
mov
adc
test
mov
daa
mov
sub
xchg
movsl
movsl
jb
mov
call
xchg
movsl
xor
xchg
and
push
in
movsl
push
jmp
add
aad
rclb
popf
faddl
loop
dec
dec
cld
movsl
ds
out
fs
pushf
aas
movsl
mov
mov
outsb
movsl
cmpsb
adc
frstor
sbb
fsubl
xchg
ds
inc
hlt
adc
in
das
pushf
pop
mov
xchg
adc
lods
shll
mov
fmull
adc
inc
inc
sbb
pop
outsb
rcrb
mov
sbbb
fucomp
movsl
mov
jb
movsl
mov
lds
movsl
fnstenv
pop
or
inc
popa
cmp
dec
adc
retw
xor
adc
xchg
lock
mov
pop
and
in
movsl
mov
scas
ss
sbbb
push
mov
arpl
pop
aam
jmp
repnz
in
andb
bound
adc
push
loopne
push
not
mov
outsb
adcb
aas
fnstcw
xor
mov
jo
mov
pop
push
gs
mov
dec
lock
mov
scas
xchg
in
sub
sub
xor
inc
or
gs
out
enter
lahf
lods
dec
jge
rcrb
ss
adcl
mov
mov
out
inc
mov
sahf
and
push
mov
scas
adc
and
cmp
mov
or
lods
pop
jno
mov
pushf
pop
inc
jne
mov
ret
pop
repnz
xchg
test
test
movsl
xchg
adc
mov
cwtl
sub
pop
adcl
aas
movsl
ja
xchg
stos
jb
out
loop
cmpsl
movsl
out
les
dec
adc
mov
mov
popa
js
int
shlb
inc
movsl
out
iret
and
inc
fwait
negb
movsl
cmp
sub
mov
cmp
bound
xor
movsl
and
fiaddl
out
jmp
fildll
mov
call
mov
pop
je
pop
jge
push
stos
in
mov
mov
insb
mov
movsl
sar
cld
clc
xchg
push
fcoms
int3
popa
sahf
movsl
ficoml
sub
enter
mov
inc
cli
lods
add
imul
cmp
ljmp
loope
mov
sti
xchg
stos
adc
shl
popa
stos
xor
xchg
daa
sub
sahf
dec
pop
js
cmp
cmpsb
add
mov
push
gs
mov
mov
sub
mov
int
leave
into
inc
sub
es
shl
xchg
sub
int
les
jbe
pop
pop
push
in
cld
lds
rep
lahf
adc
jbe
jmp
enter
lds
dec
fiadds
shll
insb
jg
stc
pushl
shrl
fcoms
es
clc
mov
ret
dec
dec
mov
mov
test
sbb
arpl
movsl
mov
add
ljmp
movsl
xorb
sbb
bound
xchg
sub
test
mov
xchg
pop
ss
test
mov
pop
mov
repnz
cltd
loopne
and
out
bound
xchg
xor
jae
jmp
int3
repz
mov
push
sbb
inc
sub
movsl
fs
popf
lea
imul
ds
stos
movsl
push
aad
fwait
or
xor
dec
pandn
popa
test
mov
lods
sbb
mov
fsubrs
pop
lods
mov
sbb
cli
aad
adc
mov
adc
movsl
push
in
mov
out
movsl
mov
cmp
mulb
cmp
movsl
and
push
arpl
test
xchg
ds
xchg
ret
xchg
cmp
adc
pusha
jb
loopne
bnd
out
pop
mov
lods
call
movsl
xchg
cmp
outsl
or
movb
mov
stos
xor
imul
loop
mov
movsl
inc
iret
pop
dec
out
mov
insb
movsl
jl
and
rcrl
fisubs
and
and
pop
and
fimull
push
clc
call
data16
jl
push
aaa
in
jp
psrld
xchg
dec
mov
or
dec
sahf
in
scas
or
sbb
lahf
inc
fsubs
mov
ljmp
mov
or
les
in
mov
ret
mov
push
mov
in
jb
mov
in
mov
test
shll
hlt
movsl
pop
add
imul
addr16
dec
stos
xchg
mov
sub
es
inc
add
xchg
pop
dec
jnp
xor
and
in
icebp
xchg
mov
ja
mov
nop
add
rcll
sub
or
adc
xchg
scas
add
mov
inc
das
test
add
adc
sub
xchg
jecxz
add
xchg
addr16
mov
inc
lods
pop
push
mov
movsb
adc
inc
mov
cmpsl
jge
xor
insl
out
push
jmp
mov
jle
mov
std
or
xlat
pushf
pop
push
jbe
ljmp
ret
pop
pop
add
pop
push
add
mov
es
icebp
push
mov
push
sub
mov
fcoml
pop
rorl
pop
mov
and
sub
stos
dec
push
pop
ljmp
outsb
dec
repz
mov
add
mov
xor
aad
daa
es
inc
cmp
jge
loope
xchg
mov
jne
pop
les
push
pushf
sub
pop
mov
or
movsl
or
test
inc
cld
xlat
jbe
pop
xor
aas
cli
cmpl
pop
sbbb
push
pop
ds
cmp
xchg
mov
mov
jge
sbb
xchg
adc
xor
leave
aaa
adc
fwait
xor
xor
jnp
mov
sarl
hlt
lea
dec
test
les
popf
lock
jbe
loop
out
sti
test
push
push
xchg
mov
push
ret
enter
mov
xor
mov
cmc
sub
jle
xor
lahf
loope
clc
sbb
jl
repnz
rcrb
in
and
inc
decb
add
js
jg
push
repnz
ljmp
push
negb
mov
loop
push
or
xchg
int3
inc
adc
mov
xor
adc
mov
clc
cmp
or
cmp
sahf
in
push
in
popa
mov
push
lret
xlat
iret
add
loopne
fistl
push
pop
popa
inc
loop,pt
cmp
popf
pop
fdivs
xlat
icebp
sbb
loopne
push
addr16
repnz
adc
pop
and
imul
lock
lock
ss
adc
fmull
sbb
daa
xchg
adc
loope
jp
add
test
repz
xchg
sub
mov
outsb
loope
add
or
or
inc
xchg
xchg
les
mov
mov
dec
in
jle
push
imulb
loopne
sub
mov
inc
add
icebp
jnp
ret
add
lret
push
lahf
cwtl
out
sbb
popa
daa
pop
adc
jg
decl
fstps
mov
dec
leave
insl
icebp
mov
cmp
into
mov
pop
int3
cmc
int
ja
jge
xlat
scas
sbb
std
iret
push
fisttpll
lea
mov
test
std
hlt
pop
sahf
test
inc
inc
push
loop
inc
or
or
mov
mov
fwait
xchg
jge
sbb
adc
mov
adc
dec
iret
das
in
iret
js
sub
xchg
mov
fwait
and
icebp
or
jbe
fstl
pop
pextrw
mov
sub
ja
or
loope
sbb
icebp
in
jno
add
pop
sbb
dec
lea
sub
lods
pop
push
add
icebp
mov
jo
xlat
loopne
call
imul
xlat
testb
add
xchg
and
lret
out
mov
loopne
mov
popf
mov
mov
mov
dec
sti
shl
icebp
sbb
jl
dec
jb
push
pop
sti
jbe
inc
inc
loopne
iret
mov
sti
popf
das
mov
jbe
fwait
push
mov
push
jp
jnp
ret
jg
int
lret
imul
aad
lods
jl
jnp
mov
out
and
or
cmp
shll
loop
aaa
jl
das
push
loopne
cmpl
adc
xor
sbb
mov
cmpsb
and
outsl
icebp
fs
push
jne
jge
mov
lods
xor
ror
in
pop
in
cwtl
lds
sahf
loopne
cld
inc
xor
pop
lea
cmp
cmp
mov
hlt
test
mov
aaa
push
mov
into
cmp
pop
or
cmp
mov
iret
sbbl
or
xor
mov
mov
dec
out
fidivs
mov
jnp
stc
sbb
jle
jp
xchg
hlt
imul
mov
andl
popa
cwtl
lcall
mov
int
bnd
mov
lahf
pushf
xlat
mov
sub
pop
cld
jg
xchg
aaa
mov
or
movsb
push
sti
sbb
inc
or
cmp
sub
mov
mov
mov
jge
add
fwait
es
mov
shrb
push
mov
mov
sbb
insl
push
and
ljmp
push
xor
adc
pop
shrb
or
mov
insb
into
ret
fadds
addl
into
adc
es
jnp
adc
mov
in
daa
pop
cmpsb
sbb
xchg
pop
cmp
cli
cmp
mov
outsb
inc
or
push
and
jno
adc
test
mov
push
lds
push
xchg
movsl
inc
mov
pop
fs
je
rcrb
ss
rcll
inc
dec
lea
stos
lods
push
mov
movsl
sub
jbe
movsl
out
lret
adc
les
movsl
jle
mov
add
sbb
leave
call
in
movsl
jbe
mov
mov
lods
xor
adc
xor
mov
add
add
jecxz
loop
lods
stc
jl
and
or
popf
movsl
jno
sub
iret
jecxz
add
sbb
or
pop
mov
jl
dec
ljmp
movsl
cmp
out
je
aad
test
mov
lods
movsl
aaa
pushf
loopne
in
sti
out
pushf
cmpsl
adc
jno
pop
movsl
in
jle
fdivs
not
or
ror
movsl
jne
push
cmp
ja
stc
test
movsl
stos
add
imul
and
mov
fs
movsl
jecxz
sbbl
cmp
pusha
movl
movsl
pop
js
inc
mov
lea
push
jbe
lods
addr16
jne
sahf
out
inc
in
fldl
lea
jno
pop
add
shrb
iret
leave
adc
scas
aad
jg
movsl
add
sahf
xlat
push
jo
movsl
xchg
inc
fwait
lods
sbb
adcl
cmp
in
xchg
fwait
popa
mov
fstpt
loop
add
or
xlat
test
out
add
insl
movsl
xchg
ds
adc
mov
movsl
mov
divl
jmp
pop
aad
push
jg
hlt
gs
das
mov
movsl
ret
dec
cli
push
fidivl
aad
mov
cld
pop
inc
dec
add
fiaddl
jbe
shl
data16
or
jmp
cmp
stos
movsl
jae
cmp
ss
mov
and
xchg
ja
movsl
xchg
push
pop
call
and
xlat
aad
xor
mov
mov
inc
mulb
bound
into
int
xor
in
lret
clc
cmp
jns
xorl
les
mov
popf
sub
movsl
lock
out
ja
in
jnp
dec
test
and
in
sbb
scas
ja
int3
pop
divb
lea
dec
pop
fsubr
mov
hlt
sbb
push
mull
lods
push
movsl
adc
jbe
leave
cmp
iret
ficoml
out
jae
mov
rcll
mov
jbe
jno
or
sbb
nop
push
jne
js
adc
mov
loope
xchg
xchg
dec
dec
jle
movsl
pop
jl
pusha
inc
inc
mov
test
mov
cmp
movsl
cmpsb
pop
mov
mov
imul
lock
inc
mov
adc
gs
and
mov
inc
lahf
ja
mov
test
adcl
xor
adc
ja
sub
aaa
xchg
or
sub
xor
mov
dec
shr
or
or
jecxz
cltd
fldenv
cmpsb
pop
js
fs
sbb
fbld
movsl
nop
xchg
dec
das
mov
loopne
add
lcall
sbb
out
movsl
cmp
xor
mulps
and
shlb
xor
movsl
or
hlt
cld
inc
je
adc
ja
jo
jle
rclb
or
movsl
jle
test
dec
or
adc
shr
gs
sti
shl
imul
or
inc
aaa
adc
jg
lods
xlat
cli
shlb
mov
hlt
inc
sti
movsl
cmp
aas
je
sub
adc
xor
add
daa
aaa
mov
pop
and
loopne
sub
sbb
fistps
movsl
lcall
movsl
sub
push
lret
movsl
call
pop
in
inc
lods
in
mov
mov
jnp
or
inc
in
test
test
pusha
sbb
imul
lods
xor
xchg
popa
ja
fidivrl
sbb
rolb
push
movsb
bound
pop
iret
push
addr16
mov
inc
movsl
or
fdiv
cld
movsl
fiaddl
and
cmpsl
cmpsb
adc
or
pusha
mov
shrl
in
mov
mov
in
lret
mov
pop
and
in
cmpsb
push
mov
xor
outsb
movsb
ss
xchg
adc
test
movsl
repnz
push
fildl
adc
movsl
fisttpll
mov
frstor
add
mov
mov
xor
mov
andl
popf
adcb
test
lret
sti
push
inc
add
add
hlt
mov
test
sahf
sahf
movsb
push
lahf
in
imul
dec
movsl
insb
dec
add
xchg
movsl
xchg
cli
fistpll
mov
pop
dec
inc
xor
push
mov
movsb
mov
inc
sbb
lods
stos
push
fisttps
movsl
lea
rcl
out
out
mov
inc
cmp
push
sub
xchg
adc
jp
fnstcw
jo
shlb
inc
das
lret
pop
mov
push
push
pop
inc
push
cmc
sub
xchg
pop
gs
pop
and
ret
fsts
lds
cmpsl
movsl
nop
push
pop
jo
jp
inc
mov
sub
pop
ja
mov
dec
dec
push
das
cmp
mov
xor
fcmovb
pop
mov
movsl
lcall
rcrb
std
test
or
movsl
repnz
mov
mov
mov
xorb
dec
pop
flds
cmp
mov
xchg
adc
mov
loope
ss
dec
imul
stos
mov
movsb
mull
cmpsl
out
mov
inc
lods
stos
push
dec
sub
add
aas
or
movsl
xorl
in
mov
movsl
lods
ficompl
mov
jmp
cmp
out
xorb
push
and
or
movsl
cs
jl
jae
outsl
cmpsl
addr16
ret
push
into
out
data16
stos
adc
mov
fisubrs
movsl
xchg
sahf
sub
movsl
and
int
jp
inc
movsl
mov
xchg
xchg
mov
push
outsb
and
xor
mov
adc
pop
roll
lods
popf
bound
movsb
lret
xor
enter
xor
mov
lahf
in
cwtl
arpl
mov
sbb
xchg
outsb
in
stc
mov
mov
cmpsb
leave
hlt
cmpsl
and
push
das
mov
adc
push
cmp
xchg
push
sub
mov
pop
mov
lcall
pop
loop
movsl
sub
data16
enter
mov
sbb
push
cmpsl
lock
pop
stc
lret
pop
fists
lds
mov
pop
mov
and
insl
imulb
inc
gs
scas
sbb
movsl
mov
movsl
divb
mov
push
lahf
out
test
dec
pop
jne
movsl
sub
rclb
scas
sbb
lahf
adc
mov
xchg
mov
cmpsl
mov
movsl
add
pop
cmpsb
xor
adc
iret
ljmp
in
dec
cmc
jmp
xchg
movsl
pusha
out
repz
cmpsl
dec
or
lds
imull
jne
movsl
mov
movsl
pop
push
shlb
jne
imul
cs
cmp
es
insb
cmc
or
arpl
lahf
fdivs
cmp
movsl
test
addl
and
outsb
loopne
dec
movsl
test
sbb
and
out
dec
pop
jo
movsl
dec
test
lds
pop
out
addb
push
les
scas
sub
push
pop
pop
aam
inc
xor
movsl
test
jb
leave
cltd
mov
sub
addr16
loop
xlat
nop
mov
dec
fcomps
adc
add
aaa
cwtl
daa
sbbb
in
adc
mov
mov
inc
sub
mov
imul
mov
pop
dec
iret
push
sahf
inc
ret
sub
mov
outsl
ret
into
sbb
shll
cld
fsubrl
cmc
fmuls
jno
jnp
test
stc
or
or
cmpl
sub
pop
push
movb
test
xor
inc
jno
sbb
xchg
jns
push
push
or
push
in
jns
cli
xchg
or
outsb
or
enter
lcall
push
mov
mov
popf
pop
sbb
jle
test
pop
loopne
inc
xchg
aaa
addr16
push
lcall
mov
in
rcrl
fsubr
mov
pop
xor
test
mov
cmpsb
stos
shlb
sahf
jmp
push
push
frstor
cmpsb
sub
insl
test
lcall
test
mov
sbb
jnp
test
fcomps
fisubrs
cs
pop
xor
pushf
cwtl
dec
aas
add
bound
roll
pushf
inc
fdivrl
mov
stc
in
add
jp
sub
cs
sbb
push
mov
pop
outsl
mov
enter
mov
jbe
mov
pusha
sub
out
xorl
add
mov
call
and
int
xor
mov
push
dec
and
mov
jmp
cwtl
mov
push
int3
movsl
cs
in
fisubl
dec
mov
test
mov
mov
mov
pop
add
jge
jns
call
ds
hlt
call
add
std
and
sub
xchg
lahf
shlb
mov
inc
add
xor
push
test
das
js
inc
cmc
icebp
mov
mov
out
loopne
add
jp
inc
insb
mov
sub
fstpl
cld
or
test
movsb
push
fdivrl
pop
add
jg
jnp
pop
pop
out
loope
loope
mov
cmp
test
dec
js
sub
inc
xchg
xchg
roll
popf
movl
loop
or
or
mov
pop
mov
push
fcom
push
and
sbb
or
out
in
andl
sbb
pusha
add
mov
pop
insb
jg
inc
lock
jbe
rcl
shlb
rcll
fbstp
ret
out
mov
inc
mov
or
sub
stc
js
sbb
mov
cld
push
add
push
sarl
push
jp
imul
pop
nop
lret
loop
ljmp
ljmp
lcall
cmp
cmc
jns
mov
mov
enter
icebp
sbb
push
jge
sbb
loope
movsb
adc
sbb
mov
mov
addr16
rcll
inc
mov
imul
fcmovu
icebp
stos
push
out
push
cmpsb
dec
cld
mov
pushf
sub
push
sti
fyl2x
movsl
xlat
or
repz
leave
std
out
movsl
les
sub
loope
cmp
push
mov
dec
jae
jle
push
scas
movsl
mov
mov
mov
push
testl
cwtl
andl
les
aad
xchg
iret
and
push
or
add
inc
leave
movsl
ss
lcall
cmpl
jb
dec
ja
jns
popa
mov
mov
stos
pop
xor
repz
dec
hlt
arpl
mov
divl
sbb
repz
mov
mov
out
movsl
aas
aam
clc
addl
cmp
mov
sbb
cmpsb
mov
push
adcb
jg
pushf
fstp
jl
add
test
push
xchg
add
xchg
das
hlt
dec
and
aam
pop
add
xchg
mov
movsl
jmp
cmpsl
xor
test
and
movsl
outsb
pop
pop
incb
add
out
and
mov
inc
xor
xchg
mov
lea
int
dec
jne
push
rol
sbb
fcoms
inc
movsl
hlt
xorb
call
shll
mov
mov
jp
xchg
movsl
mov
jbe
movsl
push
xchg
lcall
std
fs
sbb
cld
add
xchg
in
fs
fiadds
jecxz
sbb
ljmp
mov
xor
sub
shr
cld
in
jbe
ret
pop
xchg
ffree
imul
in
pop
mov
dec
movsl
sti
aad
call
dec
shrb
mov
xchg
sti
lcall
out
cmc
fidivrs
pop
nop
jge
out
cwtl
mov
into
push
sbb
xor
stos
sti
jno
pop
movsl
pop
jmp
loop
roll
pop
ljmp
aad
outsb
std
mov
ss
mov
int3
movsl
mov
icebp
mov
xor
adc
lcall
push
adc
adc
cmp
xchg
inc
or
repnz
in
xchg
inc
dec
movsl
xor
sbb
std
movsl
ljmp
xchg
xor
stc
call
cli
movsl
push
mov
jge
movsl
fcmovne
pop
mov
outsl
in
leave
sti
testl
loopne
dec
jns
inc
sbb
or
or
pusha
shr
cmp
mov
adc
push
dec
inc
mov
ss
xor
xlat
mulb
xchg
fadds
xor
movsl
jae
pusha
push
push
jns
push
fistpl
divb
pop
mov
and
xchg
add
fildl
clc
fisubs
mov
faddl
push
and
pop
fsubrs
stos
or
in
movsl
stc
pop
in
add
pop
test
enter
sub
push
lods
movsl
pop
fs
repnz
mov
mov
movsl
xchg
mov
mov
and
xor
rcrl
sbbl
xchg
cmp
pop
mov
sahf
popf
push
jecxz
mov
and
mov
js
and
xchg
or
notl
xor
std
push
cmc
aas
ret
xchg
adc
mov
test
subl
or
cltd
rclb
xchg
cwtl
xchg
cmc
pop
and
mov
mov
jp
insb
je
sbb
movsl
fwait
xchg
push
testl
or
cmp
lahf
hlt
sbb
or
lcall
aad
mov
push
or
add
fmul
rcll
movsb
gs
mov
mov
mov
movsl
xchg
sbbb
bound
movsl
push
jl
inc
jnp
fxtract
mov
ljmp
das
mov
loop
pop
mov
movsl
lret
clc
sub
dec
mov
and
sub
imul
mov
lods
shlb
adc
jle
pop
imul
lret
fnstcw
hlt
outsb
fisubl
adc
mov
pop
jg
cmp
push
mov
stos
pop
movsl
popa
and
out
movsl
fidivrs
mov
mov
loop
in
int3
jns
mov
movsl
mov
dec
dec
dec
cmpsb
fldenv
cld
and
inc
shlb
pop
dec
hlt
fsubs
mov
jno
mov
out
or
push
and
mov
mov
dec
test
xor
leave
mov
cmp
xchg
xor
fmuls
gs
test
sti
aas
call
repnz
jb
out
xchg
jl
test
sub
mov
jno
sub
mov
inc
sbb
dec
jne
movsl
rcll
add
push
pand
insb
lret
push
dec
jge
andb
xchg
jbe
sbb
lcall
movsl
int3
dec
xor
or
and
movsl
sub
xchg
lods
sbb
stc
rol
movsl
pushf
shll
test
std
lock
inc
sbb
daa
xchg
movsl
cwtl
xchg
cli
push
addr16
mov
ret
push
ljmp
and
pop
and
jbe
pop
mov
divl
mov
fsubs
popf
das
cmpsl
and
loope
cmpb
rcl
lret
adc
movsl
sub
and
aam
out
imul
pop
aaa
cmp
movsl
lods
and
xchg
nop
inc
or
movsl
mov
mov
or
mov
xchg
daa
stos
js
sub
mov
movsl
sub
mov
mov
leave
dec
cmpsl
insb
shrl
and
repnz
stc
sub
inc
dec
lcall
sahf
in
test
fucomip
mov
aaa
lock
xor
cmp
push
mov
rcll
sub
les
mov
inc
lds
cs
adc
mov
lret
nop
ljmp
cwtl
xor
pop
scas
mov
int
add
popa
dec
push
xchg
xchg
push
imul
pusha
cltd
dec
lods
jle
mov
mov
movsl
xchg
xchg
aas
push
or
jmp
fidivrs
das
movsl
mov
add
loope
mov
dec
popf
sbb
and
adcb
mov
push
rcrl
xchg
or
out
push
mov
mov
and
push
push
xchg
inc
mov
dec
popf
pushf
dec
inc
mov
mov
xchg
fisttpll
dec
or
push
cmpb
aad
movsl
pop
das
ja
movb
movsl
stos
lcall
stc
or
movsl
adc
jmp
mov
xchg
roll
add
add
aad
movsl
sarb
and
add
xchg
ficompl
cmp
pop
xlat
push
ret
pop
aad
enter
movsl
fsubl
jbe
push
and
jl
dec
inc
mov
inc
jp
adc
mov
outsl
movsl
bound
cmp
movsl
add
sbb
cmpsb
movsl
adc
or
movsl
jns
cld
cmpsl
into
or
dec
or
adc
or
divl
movsl
or
mov
push
push
cmpsl
xchg
cmp
cmp
sub
ss
out
sbb
mov
push
push
movsl
mov
jno
pop
popa
pusha
test
ja
mov
ret
xchg
and
xchg
mov
stc
ja
push
aas
push
adc
inc
cmpsb
outsb
ds
adc
pop
movsl
dec
stos
mov
mov
mov
rcll
pop
xchg
jle
in
lret
fcoms
mulb
dec
filds
movsl
cld
call
and
scas
mov
pop
daa
jbe
mov
mov
jmp
mov
in
xchg
sub
mov
mov
imul
movsl
stos
xchg
addb
fdivr
data16
cli
mov
xchg
jns
into
cmp
sbb
xchg
movsl
xor
push
or
arpl
sub
xor
xchg
testl
push
lahf
aad
ljmp
jg
shll
dec
mov
sub
sbb
outsl
not
push
inc
arpl
push
in
cmp
aaa
mov
test
mov
movsl
in
dec
mov
out
movsl
loop
pop
mov
mov
movsl
cltd
and
xchg
das
mov
cmp
xchg
xchg
sbb
mov
or
sub
sahf
xor
lock
scas
push
cmpsb
dec
movsl
subl
inc
int3
int
mov
xor
and
movsl
iret
adc
pop
stos
or
insb
push
movsl
and
mov
in
mov
sti
movsl
sub
xor
inc
clc
dec
in
cmpsl
push
je
pop
imul
decl
mov
cld
sti
inc
adc
xchg
in
std
pop
cmpsb
hlt
int
fisubrl
lds
mov
sub
xchg
pop
data16
movsl
adc
xchg
sti
inc
call
pushl
cmp
daa
pop
or
sbb
and
call
add
lock
pushf
sahf
lahf
ret
test
push
ret
pop
push
adc
cltd
and
sub
testl
push
arpl
loop
fabs
mov
dec
dec
mov
dec
mov
incb
icebp
bound
cmp
out
xchg
inc
popf
addr16
insb
or
nop
lahf
pop
mov
jae
mov
leave
cmpsl
inc
xchg
sbb
pop
test
cmp
movsb
rcrl
mov
push
ret
xchg
sub
repnz
cmp
jno
xor
dec
cld
arpl
dec
mov
lret
cwtl
dec
lcall
push
inc
xor
jbe
sahf
aad
es
rclb
and
add
lds
loopne
cltd
lret
movsl
dec
test
aam
and
adc
dec
mov
sti
into
arpl
push
and
ljmp
int
movsl
mov
pop
imul
bound
xchg
ds
push
test
mov
adc
inc
sub
popf
mov
xchg
cmp
movsl
fstl
sahf
adc
and
fisubrl
loope
pop
jg
fdivl
movsl
mov
sbb
call
xor
scas
frstor
mov
fdivl
push
stc
add
jne
mov
movsl
lea
xchg
mov
cmp
in
push
jmp
test
jle
pop
and
xchg
mov
fisttpll
into
adc
fmul
test
jne
jle
dec
pop
out
cs
push
ss
lock
add
popf
clc
mov
repnz
sbb
adc
movsl
lea
mov
out
icebp
repz
ds
lock
pushf
imulb
mov
popf
sub
adc
adc
jb
movsl
or
enter
push
subb
cmpb
clc
popf
pushl
inc
push
cmpsb
jecxz
fldl
and
mov
es
dec
cmpsl
je
jbe
jnp
mov
mov
loop
jl
pop
cli
decl
iret
mov
mov
daa
push
movsl
fildl
cltd
ret
pop
movsl
sbb
jb
aad
hlt
mov
fs
repnz
lea
std
xor
mov
xlat
outsb
scas
scas
dec
jle
mov
cmp
or
jge
push
lods
std
movsl
sub
or
mov
mov
shll
addr16
lea
or
movsl
mov
mov
andl
mov
sbb
mov
cmpsl
cwtl
pop
fisttps
stos
outsb
mov
sub
cmp
leave
sbbb
test
pop
or
into
aaa
mov
movsl
inc
add
movsl
aas
or
mov
sub
movsl
pop
jae
cmpsb
push
divb
mov
rorl
and
pop
sbb
bound
or
and
popf
cmp
and
lods
xor
sub
ja
or
sarb
or
cmc
pushf
in
in
push
movsl
movswl
or
jp
out
andb
adc
fsubrs
movsl
es
lret
cs
jle
mov
jo
shll
arpl
pop
mov
pop
xchg
andl
add
es
mov
les
loope
mov
loopne
xor
pop
ret
aaa
scas
test
movsl
and
xchg
and
mov
xor
movsl
xor
cmp
shrb
cmp
jmp
xlat
mov
insb
movsl
lahf
inc
mov
movsl
sub
sbb
insl
imul
arpl
je
orl
roll
divl
jp
mov
jb
and
int3
mov
enter
ret
push
popa
out
fucomp
lock
sub
mov
inc
xchg
mov
push
mov
mov
dec
gs
movsl
ds
inc
addr16
jecxz
ret
xchg
into
jg
arpl
dec
xor
jbe
pop
movsb
pop
movsl
jo
loop
or
jp
imul
push
in
test
enter
movsl
or
fldcw
mov
xchg
adc
dec
cmp
mov
stos
mov
xor
clc
inc
cmp
jge
jg
cmpsb
xlat
pop
lods
lods
imul
sbb
inc
movsl
pop
mov
or
push
dec
inc
aad
sub
ret
xchg
in
pop
mov
adc
daa
scas
out
dec
fwait
inc
ljmp
push
inc
hlt
push
movsl
js
lret
out
lcall
imul
jp
adc
inc
or
enter
movsl
jmp
and
test
in
adc
jmp
inc
pop
aad
dec
mov
pop
mov
andb
xorl
add
enter
mov
add
mov
cmp
aam
jg
cmp
hlt
sbb
les
cmp
in
movsl
fstl
cltd
fcmovu
inc
lock
xlat
mov
add
dec
stc
or
and
and
pop
sub
add
push
addl
in
inc
mov
insb
sahf
in
adc
movsl
in
icebp
cmc
daa
fisubl
xor
or
xchg
dec
hlt
movsl
fnstcw
inc
pop
out
mov
or
jbe
or
fucomip
vpsubusw
cmp
or
movsl
pusha
call
pop
mov
push
fdivrs
mov
loopne
movsl
sbb
enter
xchg
cwtl
jle
nop
sbb
stc
push
in
and
ret
jmp
sbb
cmp
movsb
test
ror
in
jmp
in
leave
mov
dec
push
push
cltd
inc
jae
addr16
in
lret
scas
std
movsl
xchg
and
or
mov
fisttps
inc
adc
push
stos
jns
jmp
scas
imul
stos
or
arpl
jnp
cli
xchg
nop
or
mov
pushf
cltd
lods
mov
or
rcr
lret
gs
test
data16
and
sarb
lds
daa
movsl
xchg
jl
shl
cld
out
sub
xor
into
xchg
pop
dec
lods
jnp
inc
cmp
push
mov
inc
cmp
push
jne
int3
mov
mov
jae
sub
or
into
add
xchg
rcl
sahf
sbb
in
and
fs
xchg
mov
sbb
arpl
sbb
dec
push
mov
sub
sahf
jns
arpl
sbb
or
shlb
cli
sahf
jbe
push
sbb
adc
pop
pop
loopne
movsb
daa
fucomp
push
mov
sub
xchg
adc
mov
int
mov
cwtl
xchg
scas
inc
rcll
xchg
cmpsb
sbb
in
lret
add
mov
lahf
fwait
orl
movsl
filds
and
sbb
mov
xor
ret
xchg
mov
loopne
fisttpll
es
mov
movsl
push
in
cmpsb
cltd
adc
mov
pusha
adc
pushf
divb
lret
aad
dec
pop
movsl
inc
lods
jnp
int
mov
jbe
jns
clc
push
rcl
xchg
inc
mov
jmp
push
xchg
movsl
daa
test
add
jle
cld
fisubl
lea
push
push
in
notl
sbb
push
movsl
mov
adc
movsl
mov
cmpsb
cmp
scas
aaa
dec
imul
mov
cld
in
mov
xchg
aam
jmp
inc
sub
jbe
and
sbb
sub
movsl
out
int
push
outsl
andl
in
jns
sbb
xor
loope
mov
push
fstl
insl
sub
rcr
inc
adc
sbb
cmp
test
imul
stos
cli
outsb
fadds
out
enter
xchg
sbb
lods
aad
andl
and
push
push
pop
sbb
aad
cmpsb
jnp
sbb
dec
fstps
ljmp
movsl
adc
mov
cmpsl
movsl
adc
and
add
cmc
fst
pop
jmp
addb
sub
sbb
push
xor
leave
pop
xor
and
stos
and
mov
xor
cmovno
das
test
stos
adc
add
clc
sti
jl
sbb
mov
xlat
scas
cmpsl
mov
adc
loope
in
mov
enter
push
jle
mov
and
mov
lret
jle
hlt
jmp
icebp
adc
adc
push
idivb
add
rorb
in
or
xlat
bound
pop
mov
pmaddwd
in
dec
lods
loop
xor
hlt
push
popa
cwtl
push
jmp
lods
popa
push
hlt
xchg
jmp
and
push
icebp
xchg
mov
sbb
pop
lahf
pop
mov
xlat
push
sub
and
sahf
pop
inc
sbb
fidivrl
inc
push
or
lret
sbb
cs
jb
cmp
imul
jecxz
cltd
and
test
jnp
mov
xlat
test
es
add
dec
mov
xchg
add
cmp
xchg
sub
cmp
mov
sub
shlb
shll
icebp
and
fucomi
cmc
repz
jbe
jno
push
push
sub
in
add
js
xchg
repnz
pop
popa
add
cmc
sub
mov
or
sub
es
pushf
cmc
sub
lcall
jbe,pt
inc
ja
lret
sbb
mov
and
sbb
jnp
pop
clc
adcl
pop
aas
xchg
loope
fistps
in
dec
pop
shll
movsb
mov
xlat
inc
int3
jle
sti
out
ret
mov
test
aam
lods
pop
jae
mov
int3
in
push
cwtl
sahf
sbb
stos
loop
and
sti
push
mov
test
mov
or
ficomps
scas
leave
stc
dec
notl
ljmp
popa
inc
js
adc
mov
cmpsl
pop
adc
mov
frstor
int
push
sbb
mov
mov
sub
pop
cmc
repz
and
xchg
cli
loope
mov
ja
pop
mov
call
adc
hlt
jmp
and
cmpsb
jo
xchg
adc
cmp
movsl
nop
sub
leave
mov
je
arpl
jno
push
lods
mov
cs
add
sbb
int
sbb
mov
pop
inc
fcmovbe
push
cmc
jle
movsl
shll
mov
mov
push
movsl
mov
add
int
mov
in
es
mov
in
cmp
push
cmp
mov
add
lahf
test
mov
fisubl
pop
jl
fcomip
movsl
push
arpl
inc
mov
push
in
pushl
movsl
pop
rorl
cmpsl
adc
push
inc
xlat
lock
jle
inc
mov
in
and
movsl
out
xor
and
mov
ds
movsl
xor
enter
xchg
movsl
lea
int
movsl
in
lods
adc
and
lcall
divb
sarl
pop
dec
lock
jbe
mov
call
ja
cwtl
mov
mov
inc
sub
inc
call
dec
xchg
mov
mov
sbb
mov
adcb
sahf
rol
add
fcoml
loope
or
mov
dec
rcll
ret
jecxz
or
mov
sbb
mov
mov
push
loop
or
and
xchg
xchg
sub
fldt
adc
iret
movsl
andps
icebp
mov
stc
mov
std
cld
push
xchg
addr16
pop
lock
vcvtpd2dq
gs
push
pop
imul
add
pop
mov
lds
movsl
and
push
movsb
sbb
lea
stos
mov
mov
ljmp
or
sbb
push
scas
movsl
mov
mov
jns
xchg
mov
cwtl
std
scas
sub
sbb
lahf
popf
mov
pop
addr16
push
jle
dec
out
leave
popf
out
mov
jb
sbb
and
shlb
aam
not
gs
movsl
pop
nop
inc
and
movsl
clc
popf
cmp
xchg
aas
cli
cmp
sbb
or
cld
mov
movsl
loop
adc
and
je
lahf
xlat
add
jnp
movsl
pop
push
jg
pop
enter
inc
jp
pop
sbb
xchg
cmpsl
stos
sub
test
mov
or
in
loopne
dec
xchg
ret
xor
loop
mov
fisubrl
mov
push
movsl
cmp
cmp
sti
int3
and
cmpsl
and
jnp
call
pop
or
xor
addr16
cld
cmp
sahf
inc
sbb
push
pop
push
call
leave
pop
dec
icebp
fsubl
movsb
jo
mov
ret
incl
jb
outsb
loop
nop
inc
setbe
ds
repz
movsl
lock
cmp
pop
repnz
xchg
andb
mov
pop
cmc
mov
jge
mov
in
sub
pop
outsl
cmpsb
adc
das
movsl
rolb
addr16
push
sbb
xor
loope
jmp
lret
jecxz
addb
movsl
mov
addr16
cmpsl
pop
mov
lds
lds
jmp
fnstsw
movsl
sbb
add
push
mov
push
inc
xchg
pop
mov
add
jmp
mov
movsb
lcall
std
xchg
sub
xlat
ljmp
dec
mov
les
ret
movsl
dec
lahf
inc
je
fbld
arpl
xor
sbb
mov
movsl
jmp
jl
xor
adc
mov
stos
inc
dec
sbb
movsl
fists
jmp
movsl
xor
test
xor
sti
add
jae
stos
jl
imul
movsl
cld
mov
push
test
out
outsb
adc
roll
jns
movsl
shrl
mov
shlb
cmc
pop
jae
movsl
mov
and
scas
test
mov
push
sub
movsl
rorb
sbb
adc
mov
cmpsb
mov
dec
jns
push
mov
out
pop
push
std
mov
into
lret
mov
scas
fldt
jno
movsl
sbb
xchg
call
arpl
es
insl
jae
pusha
pop
jmp
loop
push
cltd
fiadds
aad
rolb
mov
call
adc
movsb
sbb
adc
js
xor
push
push
mov
movsl
ss
pop
cmpsb
sarb
and
xchg
pop
xor
add
mov
fld1
push
pop
cmp
mov
bt
bound
push
loopne
xor
xorb
movsl
pop
push
imul
pop
outsl
pop
push
imul
icebp
pop
popf
test
bound
aad
hlt
push
mov
lret
lds
push
pop
and
inc
lcall
xor
inc
cmpsb
adc
jecxz
mov
movsl
adc
je
scas
dec
pushf
mov
movsl
rcrb
js
cmpsb
insb
mov
ret
dec
out
incb
xlat
add
adc
aas
repnz
pop
mov
in
push
xchg
adc
insb
int
jmp
mov
sub
pop
or
inc
push
pop
movsl
in
lds
movsl
inc
jnp
cmpsb
push
and
movsl
add
jmp
movsl
pop
dec
mov
and
fstl
mov
shll
shll
jecxz
push
movsl
xlat
out
push
push
pop
xchg
lds
xor
add
inc
lods
and
out
or
adc
das
add
cmp
jmp
ds
inc
add
dec
movsb
movsl
imul
xchg
or
mov
outsl
gs
andb
mov
in
xor
lahf
not
pop
movsl
cmp
scas
fcoml
out
out
cmpsl
cwtl
push
mov
push
ficoms
movsl
xorl
hlt
inc
movsl
jns
pop
mov
mov
sbb
xchg
movsl
outsb
dec
push
mov
movsl
in
mov
or
inc
subl
or
data16
cmp
sarl
xor
int3
mov
mov
pop
movsl
sub
in
adc
mov
dec
xchg
jecxz
ja
xor
fcomps
mov
aam
inc
xor
sub
fs
fisttpll
mov
adc
add
adc
lcall
pop
sub
and
movsl
jp
aam
adc
cmp
xchg
cmp
mov
jne
insl
loop
stos
lahf
stc
ret
ss
push
mov
shll
add
out
jle
movsl
ret
into
inc
cltd
scas
add
repz
push
movsl
popf
loope
sbb
fs
movsl
cmp
in
rcrb
cmpsl
movsl
idiv
push
inc
pop
mov
popfw
lods
xor
movsl
cs
ficoms
lods
test
mov
push
cmp
xor
pop
jo
and
icebp
lcall
adcb
dec
in
add
mov
mov
pop
mov
inc
xchg
sub
push
lods
pop
sub
addb
or
sahf
lods
in
jne
mov
push
hlt
pop
adc
test
and
add
push
push
push
push
js
jnp
and
xchg
cmp
mov
xor
mov
sub
loope
dec
movsl
dec
add
in
jl
and
icebp
mov
movsl
push
jo
cwtl
xor
movsl
xor
dec
mov
and
movsl
lea
inc
test
pop
dec
jmp
aam
push
push
idivl
iret
mov
xchg
dec
or
pop
dec
rcr
dec
adcb
and
or
mov
aam
shll
sub
movsl
pop
iret
shrb
or
roll
enter
jmp
inc
sub
jp
ljmp
loope
pop
jns
jge
xor
pop
cld
fadd
cwtl
xchg
stos
les
rcrl
xchg
pop
out
xchg
cmp
je
aaa
test
out
xchg
and
cmp
cli
popa
dec
int
inc
test
and
jle
mov
add
pop
jmp
das
cmp
fisttpl
out
mov
cmc
les
dec
insl
lds
lret
movsl
inc
aaa
pushf
ljmp
in
push
std
in
mov
and
push
dec
pop
sub
xchg
dec
idivl
mov
push
push
push
xchg
xchg
push
mov
addr16
lahf
sub
movsl
xchg
mov
das
cmp
movsl
int
scas
nop
lods
shlb
pushl
movsl
mov
sbb
nop
and
add
xchg
xchg
inc
clc
aad
mov
sub
lret
hlt
shll
jle
and
fucomip
movsl
aaa
je
xlat
addr16
in
test
jecxz
aad
cmc
arpl
movsl
dec
xor
cmp
popf
movsl
aaa
ljmp
sti
movsl
cmp
scas
mov
mov
shl
jecxz
mov
push
movsl
orb
cs
push
inc
movsl
sub
lock
aas
pop
repz
ljmp
lret
cmp
jle
xchg
icebp
push
ds
cmpsl
loope
stc
jmp
addr16
push
xchg
sbb
js
push
jecxz
xchg
bound
jbe
adc
xor
fxch
movsl
sbb
rolb
test
push
cmp
scas
or
push
inc
frstor
roll
stos
test
fsubrs
xchg
movsl
dec
loopne
mov
add
adc
mov
dec
sub
cmp
aas
testb
push
imul
push
adc
lods
and
das
lea
sbb
daa
cmc
les
mov
add
ss
scas
movsl
mov
hlt
and
jmp
scas
sbb
cs
cli
lcall
shll
js
push
movsl
sar
mov
stos
call
popf
cltd
lods
loope
adcb
dec
movsl
mov
ret
mov
jnp
inc
movsl
or
xchg
mov
push
mov
movsl
xor
in
add
mov
dec
insb
movsl
imul
shr
adc
sbb
loop
stos
jne
push
add
rcrl
mov
jecxz
or
shlb
adcl
mov
pop
xor
movsl
mov
add
fmull
mov
insl
jb
and
ret
pop
add
pushf
mov
fidivrl
dec
mov
mov
imul
pop
mov
push
lock
movsl
insl
sbb
cmpsl
sahf
adc
hlt
int
inc
sahf
mov
cmpsb
test
push
shlb
stc
add
loopne
mov
popa
sub
and
sub
lock
sbb
jbe
xchg
addr16
jmp
fcmovb
dec
or
add
rcrb
sbb
mov
mov
sub
movsb
jp
and
cmc
loopne
or
jnp
cmc
aaa
push
mov
arpl
xchg
xor
add
cmpsl
and
sahf
jmp
add
cmpsb
hlt
dec
lret
push
sbb
dec
bnd
inc
sti
mov
inc
leave
xlat
mov
icebp
xchg
in
insb
mov
and
cmp
and
add
lcall
sarb
rcll
lods
mov
dec
add
cmpsl
rep
mov
in
dec
push
imul
add
stos
cmc
sub
sarl
and
add
aas
xchg
dec
out
icebp
mov
loope
lods
lea
mov
imul
cmpl
ds
cli
scas
pop
mov
sbb
add
inc
fscale
sbb
or
push
push
shll
xor
ja
fwait
xchg
lret
imul
lret
push
cmpb
dec
mov
lcall
nop
dec
imull
mov
sub
fistpl
and
leave
ljmp
xor
sbb
pop
enter
mov
jp
jp
popa
xor
cmp
or
lds
rorb
jmp
adc
cmpsl
cld
add
push
test
sub
ror
ss
sub
jo
and
sbb
mov
jmp
popf
leave
test
sti
mov
in
or
fnsave
aaa
lret
cmpsb
and
xor
iret
inc
repz
xor
push
add
call
mov
repnz
sub
ss
fwait
mov
notl
mov
bound
outsl
jg
sbb
movsb
push
and
adc
aad
and
dec
sub
sub
jne
add
sub
shlb
aad
scas
cld
cmc
clc
adc
fwait
adc
bound
add
sbb
mov
fwait
sbb
fisttpl
jmp
sbb
lahf
mov
stos
and
xchg
call
stc
js
adc
mov
sbb
sbb
mov
mov
xor
out
dec
scas
in
loopne
pop
ds
cmp
and
movsl
xchg
pop
pop
xor
adc
and
xor
fsubrs
dec
cld
fidivl
out
push
jno
jmp
imul
mov
lods
lret
dec
rcl
dec
fadds
add
pop
aas
mov
cld
and
pop
inc
cmpsb
and
mov
xlat
or
gs
jl
add
clc
loope
repnz
fucomi
pop
enter
push
in
lret
add
adc
jp
jns
jg
adc
popf
mov
dec
mov
std
testl
push
xor
shl
les
fimuls
icebp
in
out
loopne
int
adc
mov
push
sbb
jecxz
leave
stc
cli
aam
and
inc
aaa
adc
rcl
sub
mov
es
adc
pop
hlt
sub
sub
cwtl
sub
add
add
js
cmc
mov
adc
pop
int3
sti
or
fstl
not
mov
lcall
cmp
enter
jge
ficoms
mov
pop
inc
cmp
adc
lds
xchg
jbe
xor
and
ficoml
or
sbb
sbb
clc
jecxz
inc
stos
mov
nop
xchg
mov
lret
cmpsb
inc
scas
mov
sub
call
xlat
aad
inc
pop
and
push
inc
imul
and
add
es
add
aad
dec
mov
cmc
xchg
inc
sub
icebp
insb
sub
jmp
mov
pop
pop
and
nop
jle
jecxz
push
inc
adc
dec
outsb
in
or
push
inc
and
aad
push
icebp
cmpsb
lods
stos
cltd
push
or
push
movsl
push
daa
push
and
fmul
leave
xor
jp
dec
orl
cwtl
push
scas
jecxz
loope
or
gs
je
popf
ljmp
inc
and
lds
mov
lds
sahf
lock
pop
push
cmpsl
or
mov
movsl
dec
mov
pop
xchg
movsl
and
mov
and
add
daa
movsl
or
inc
cmp
xchg
and
shr
push
mov
std
jns
pextrw
xor
or
andb
inc
mov
xchg
cmp
pop
mov
and
cwtl
mov
xchg
movsl
shl
pop
fldenv
lods
mov
movsl
cs
xor
add
or
xchg
shlb
popa
jl
imul
xorb
in
in
lret
push
xlat
movsl
pushf
dec
pop
jge
inc
xchg
cmp
jbe
sbb
shlb
mov
inc
xchg
sub
cltd
pushf
or
movb
ja
push
in
adc
movsl
pushf
mov
mov
pusha
or
stos
jnp
movsl
xor
jle
mov
movsl
push
inc
dec
clc
in
rorb
lods
xchg
pop
ret
imul
inc
outsb
fs
mov
dec
addl
mov
mov
xchg
frstpm(287
adc
adc
jl
lds
jnp
xor
movsl
mov
adcl
mov
popa
in
pop
push
push
insb
inc
dec
stos
cld
adc
add
js
imul
jmp
movsl
push
gs
pop
jbe
cltd
inc
adc
cs
mov
adc
xchg
adc
outsb
add
xlat
movsl
cmpsb
jecxz
push
fsin
dec
mov
sub
in
mov
xchg
movsl
xchg
jmp
shrb
movsl
fstl
jp
insl
adc
cwtl
movsl
dec
pop
ljmp
sbb
mov
lds
stc
int3
jnp
inc
movsl
pop
negl
sbb
mov
ljmp
movsl
adc
xor
and
movsl
addr16
pop
mov
or
movsb
shlb
mov
xor
xchg
mov
pop
es
fxch
dec
push
repz
mov
cwtl
aas
shld
aaa
mov
lds
pop
movsl
adc
imul
jbe
iret
andb
cmp
movsl
jl
cmc
std
pushf
xchg
mov
lods
ss
sub
mov
rolb
movsl
bound
fs
movl
cltd
scas
aam
hlt
pop
in
sub
stos
and
and
enter
add
cmp
jge
leave
lock
and
sub
adc
xor
add
xchg
push
sub
subl
movsl
sbb
fistpll
movsl
stc
inc
clc
xchg
xchg
pop
mov
mov
aam
cmp
or
out
enter
js
push
movsl
xchg
inc
push
jp
jo
mov
mov
and
cmp
or
lods
lds
test
pop
mov
jnp
mov
pop
push
imul
movsl
mov
adc
hlt
or
dec
pop
mov
cmp
mov
add
mov
repz
popa
mov
sub
pop
movsl
jno
test
aaa
cmp
pop
movsl
int3
xorb
xor
or
push
fsubrp
std
movsl
mov
or
movsl
cmpsb
imul
dec
sti
test
mov
lret
dec
iret
movsl
jae
push
sbb
idivb
bound
xchg
es
mov
popa
sbb
test
movsl
jb
lret
lea
cmpl
add
mov
loopne
mov
mov
pop
xchg
daa
aad
jge
or
movsl
mov
test
ljmp
mov
or
sahf
xlat
lret
testb
mov
push
out
or
mov
sbbl
movsl
ja
insb
and
call
xlat
xor
mov
mov
daa
movsl
aaa
mov
in
fisttpl
mov
cwtl
push
filds
dec
pop
in
pop
mov
popf
push
jl
out
pop
pusha
push
popf
cmp
leave
push
ja
xchg
test
jle
arpl
aas
pop
loope
or
icebp
or
sbb
push
xchg
cmp
popa
dec
mov
adc
into
bound
inc
gs
mov
jno
inc
mov
leave
loop
mov
and
ja
in
adc
jmp
adc
test
mov
mov
push
movsl
jg
stos
mov
mov
orb
adc
add
dec
scas
insl
test
jl
sub
lods
mov
cmp
cmpb
enter
fnsave
movsl
mov
add
mov
cmpsb
aad
sbb
fwait
popf
xor
andb
aaa
cltd
dec
add
jecxz
jmp
addl
xchg
dec
cli
xorl
in
mov
movsl
mov
pop
or
pop
movsl
sahf
and
inc
mov
stc
loop
arpl
out
movsl
pop
in
aas
push
cmp
shlb
sti
mov
fdivrs
movsl
and
inc
inc
in
mov
sub
or
lcall
mov
hlt
shll
in
sbb
jle
scas
jne
push
adc
nop
daa
popa
lahf
and
lret
adc
mov
lret
pop
push
int
mov
in
cld
pop
out
add
stos
xor
cltd
xchg
mov
std
out
sub
clc
movsl
mov
cmp
scas
leave
inc
movsl
push
push
repnz
movsb
and
insl
jno
cmp
jns
movsl
mov
test
insb
add
jo
enter
repnz
inc
sbb
adc
data16
push
movsl
sbb
or
jns
inc
mov
sbbb
pop
rclb
lds
or
out
into
sbb
iret
xchg
push
mov
popa
jnp
push
inc
scas
mov
mov
xchg
and
and
test
xchg
repz
movsl
push
inc
inc
or
outsl
hlt
pop
popa
out
movsl
imul
ret
mov
sti
cli
jp
arpl
jo
in
and
cmp
inc
lea
add
pop
setp
das
rorb
mov
out
mov
cmpsl
nop
pushf
adc
filds
adc
xor
loopne
cwtl
repz
mov
movsl
movb
lcall
mov
rcr
addr16
out
xchg
mov
sub
xchg
aad
inc
clc
fisttpll
loop
aas
push
xor
mov
scas
cmpsb
mov
sti
movsl
push
in
mov
inc
movsb
movsl
in
sub
xor
insl
push
sub
andb
fs
push
pop
or
test
add
testb
xchg
xor
shl
inc
or
movsl
mov
stc
aaa
movsl
inc
mov
jecxz
xchg
pmulhw
mov
and
mov
out
mov
ficomps
mov
lea
movsl
inc
inc
neg
lock
dec
movsl
sub
push
pop
cld
cmp
call
popf
inc
sub
aaa
test
inc
push
je
sahf
rcrl
push
and
sbb
mov
decl
and
out
xchg
shll
fs
ljmp
add
adc
mov
dec
add
sbb
mov
ja
movsl
test
xchg
xchg
shrd
movsl
mov
dec
outsw
mov
and
fcoms
push
scas
das
mov
js
idivl
jp
xlat
arpl
cld
mov
pusha
clc
dec
cbtw
dec
leave
sti
into
mov
shrl
movsl
pusha
mov
iret
jecxz
add
sahf
out
lret
jbe,pn
inc
adc
pop
sbb
dec
repnz
outsl
xlat
and
cmp
cmpl
test
mov
loopne
dec
ja
addl
in
add
ret
setns
inc
cmp
jnp
outsb
fmull
sub
stos
add
xchg
mov
psraw
andl
enter
push
imul
sub
dec
out
pusha
add
movsl
jp
sub
mov
jb
call
jl
jo
aad
test
cmc
mov
leave
mov
sbb
leave
or
das
or
xor
into
enter
aas
pop
dec
mov
dec
dec
push
in
loopne
sahf
push
rorl
cmpsb
xor
jmp
push
mov
shlb
inc
test
and
sub
cli
sub
fisubl
ret
repnz
mov
cld
shrl
lods
sub
in
and
les
scas
xor
adc
pop
dec
sbb
dec
push
push
adc
ds
mov
arpl
int
lds
test
inc
and
mov
in
pop
repz
dec
adc
and
xchg
push
jp
out
sarl
rolb
es
mov
mov
cs
pop
mov
xchg
filds
sub
mov
dec
hlt
mov
add
jl
inc
cmp
cmpsl
sub
sbb
int3
xchg
pop
sbb
pusha
push
mov
mov
test
lds
xor
sti
movsl
ror
and
xchg
daa
test
in
mov
movsl
push
jecxz
push
adcl
xchg
mov
aaa
jmp
mov
dec
data16
sahf
out
cmc
leave
pop
inc
mov
push
adc
movsl
int3
into
ss
jns
andb
cmpsl
int
aam
movsl
out
jno
je
cmp
inc
popa
push
add
push
jg
jae
fdivr
jnp
shl
aad
mov
xchg
adcl
lds
mov
xchg
push
cmp
in
fucomp
std
stos
xchg
adc
pop
pushf
push
cmp
fldenv
movsl
out
add
push
lret
enter
popa
adcb
jp
orb
rcrl
pop
xor
movsl
pusha
push
ja
push
sbb
rolb
lock
pushf
cwtl
sub
mov
mov
mov
shlb
add
bound
shll
jecxz
xor
push
mov
xchg
addr16
loop
add
inc
ss
mov
std
movsl
roll
in
insb
push
jg
or
movsl
mov
push
int
movsl
pop
fs
jmp
add
int3
lock
outsb
call
clc
int
cmp
xor
mov
lods
or
push
inc
mov
xor
mov
out
mov
rcrl
cmpsb
test
jle
fsubrl
in
pop
out
mov
ret
scas
cmp
enter
or
sbb
sbb
mov
les
aad
pop
ret
mov
push
cltd
dec
movsl
popf
ss
icebp
jne
movsl
inc
mov
or
xchg
movsl
test
shrb
bound
shrb
cli
adc
xlat
dec
inc
insb
cmpsb
call
inc
xchg
or
movsl
mov
aas
cld
js
push
ja
cmp
pop
mov
mov
jmp
andl
sarb
adc
mov
fdivp
movsl
daa
ror
add
outsb
cmpsl
movsl
lea
stos
sbb
sub
adc
insl
or
je
inc
or
pop
and
jb
inc
mov
add
cmp
xchg
arpl
fisubs
jp
push
lds
jo
push
fsubs
std
std
mov
pushf
testb
sbb
fbld
shlb
mov
les
jne
test
dec
std
dec
iret
mov
movsl
mov
lock
ficompl
lret
iret
jo
cmc
stc
stos
pop
adc
popf
jb
pop
movsl
repz
movsb
movsl
gs
sub
mov
add
pop
push
mov
ljmp
pop
ret
pop
push
xchg
inc
dec
js
lds
jl
jns
mov
mov
lret
aad
jnp
imul
adc
xchg
leave
mov
cmp
jmp
adc
out
jbe
push
movsl
jns
mov
in
pop
ljmp
xchg
and
repnz
call
mov
sti
aaa
movsl
and
mov
adc
xchg
add
or
pusha
insl
fiadds
jle
dec
test
test
mov
ljmp
stos
push
mov
neg
out
push
sbb
stos
add
lds
push
mov
test
in
rol
cmp
icebp
movsl
push
mov
out
loop
fistps
std
push
setb
mov
add
cmp
cmp
rcrb
lds
adc
xchg
call
cmpsb
and
push
sub
insb
add
pop
es
adc
shll
dec
cltd
adc
mov
movsl
sbb
mov
pop
movsl
ljmp
adc
or
sbb
xchg
lahf
sub
cmc
ffreep
adc
adcb
movsl
lret
and
push
idivb
stc
ljmp
lods
mov
or
pusha
push
mov
xor
jp
xor
adc
cmpsl
movsl
insb
pop
notl
lds
inc
movsl
adc
in
or
push
pop
movsl
and
jge
loop
arpl
insl
lock
movsl
xchg
or
mov
rolb
sahf
mov
pop
jle
cmp
push
dec
mov
and
std
in
sub
adc
fwait
lds
testl
mov
lret
imul
push
icebp
cmc
lret
movsl
rolb
incb
movsl
js
clc
mov
or
pop
sub
or
mov
and
movsl
ds
jns
push
repz
scas
fs
mov
jo
movsl
or
test
pop
movsl
cmc
ftst
cmp
sub
xlat
or
cli
dec
sbb
add
movsl
jo
dec
and
pop
adcb
cs
aas
add
mov
cmp
xchg
cmp
pop
movsl
add
mov
pop
mov
cmp
xchg
or
mov
les
mov
test
fildll
movsl
or
push
mov
pop
add
mov
lret
testb
or
xchg
push
int3
imul
jmp
movsl
inc
ja
mov
adc
lret
mov
xchg
sub
std
aaa
pop
inc
add
adc
jl
loop
adc
repz
stc
les
movsl
in
mov
or
add
xlat
hlt
push
inc
fildl
sub
int
mov
cmc
pop
cmpsl
mov
int
mov
mov
loope
adc
mov
test
xor
movsl
fcomip
pop
xorl
insl
je
xchg
mov
mov
and
movsl
loop
sub
mov
or
pushf
sbb
in
in
pop
and
lock
add
mov
aam
ja
leave
xlat
and
shlb
in
xchg
fldt
push
mov
loop
ret
cmpsb
movsl
mov
pop
rorb
arpl
mov
push
es
xor
movsl
inc
sbb
lock
jl
in
cmp
enter
mov
sarl
lret
aam
adc
sbb
sbb
clc
std
insb
ljmp
push
and
andl
movsl
cli
aad
sub
les
xchg
movsl
jb
pop
jbe
aas
adc
or
mov
mov
jns
rcr
xchg
or
mov
fldt
movsl
pop
inc
xchg
stos
nop
or
mov
mov
cmp
lret
push
in
cmp
adc
mov
addr16
movsl
mov
sub
fucomi
jne
ja
sub
movsl
rcrl
dec
insb
outsl
pop
inc
loopne
movsl
mov
mov
or
xor
or
imul
lcall
mov
xchg
out
sti
mov
and
mov
movsl
sub
xor
push
js
adc
mov
lds
lret
sbb
push
push
pushl
std
and
or
mov
mov
mov
xor
fbld
addr16
inc
not
jecxz
imul
jmp
jnp
xchg
inc
cmp
aad
movsl
lret
push
inc
adc
inc
push
test
sub
cmpsl
xchg
or
xchg
cmp
pop
pop
push
lods
cmc
in
stc
xchg
or
adc
and
sbb
addb
arpl
das
loopne
aam
lock
cmc
and
push
jp
fldenv
xor
lcall
pusha
test
adc
movsl
pop
jl
dec
bound
orl
movsl
popf
in
call
cmpsl
sbb
sbb
rcrb
movsl
xchg
cmp
inc
mov
xlat
in
rorl
push
mov
in
xchg
stos
push
js
movsl
stos
in
mov
mov
adcb
dec
mov
xchg
and
cmp
aaa
pushf
adc
lds
mov
cwtl
lock
clc
into
movsl
sbb
mov
jnp
sub
testb
xchg
out
jecxz
xor
pop
arpl
jns
nop
leave
sbbb
and
mov
aaa
fs
cmc
fbld
add
fildl
cli
fwait
pop
xchg
aam
fstps
and
mov
lahf
daa
add
mov
out
rol
pop
mov
imulb
and
outsl
popa
jnp
push
pop
inc
sbb
out
push
mov
sbb
les
inc
ret
mov
insl
mov
mov
lods
sub
jle
addr16
jbe
cmpsl
andb
and
mov
movsl
icebp
imul
jae
inc
xchg
cwtl
jo
adc
push
push
insl
out
jecxz
xlat
cli
inc
mov
fnsave
adc
mov
dec
pop
sub
mov
movsl
sbb
nop
fwait
lods
push
xchg
and
movsl
xchg
pop
mov
fnstenv
xor
sub
or
in
insl
or
loope
inc
cmp
xor
mov
inc
test
push
loop
xor
shl
lds
cs
pop
cmp
mov
stos
loope
ss
mov
jae
pop
xor
stos
inc
ja
movsl
lcall
sbb
stc
mov
loop
addl
call
stc
pop
popa
and
out
out
inc
fstl
jecxz
movsl
inc
loope
movsb
mov
xor
ljmp
ret
pop
bound
repz
mov
lds
sub
aaa
sahf
shlb
call
xor
or
xchg
loope
mov
xor
pop
jmp
notb
sbb
jmp
mov
js
addl
fnstenv
push
lods
out
mov
stc
popa
loopne
pushf
aaa
cli
xchg
pusha
push
test
mov
stos
adc
sbb
xlat
mov
imul
mov
int3
inc
out
or
jns,pn
aad
into
dec
addr16
dec
lcall
inc
mov
lea
jmp
fnstcw
dec
movsb
das
ret
sub
inc
dec
sbbb
cmp
dec
adcb
inc
add
fs
movsl
lds
add
fnstsw
popf
xor
fsts
xchg
movsl
leave
aad
cli
add
jmp
fcmovnbe
aam
mov
mov
out
movsl
or
dec
inc
addr16
push
sbb
cmp
bound
test
cmc
or
sub
mov
mov
test
and
faddl
outsl
mov
jo
cs
pop
mov
insb
or
shlb
ret
movsl
jb
lods
cmp
cmc
loopne
xchg
pop
hlt
lock
stc
mov
sahf
dec
or
dec
mov
mov
vmovdqu32
loope
xor
inc
ljmp
movsl
gs
add
or
mov
sahf
cmpsl
lcall
adc
fs
icebp
cli
jne
into
fiaddl
inc
lods
lahf
inc
movsl
sbb
das
fnstsw
arpl
movsl
adc
push
jb
jno
push
lods
pop
cmc
push
add
mov
mov
mov
cld
ss
in
adcl
or
mov
push
sub
sbb
inc
xchg
rclb
mov
int
enter
fs
int3
jg
jb
movsl
fstpl
push
aaa
mov
mov
insl
insb
jp
push
xchg
mov
lcall
mov
aam
in
push
repz
lods
jmp
cmp
int
in
lret
scas
jns
movsl
mov
add
pusha
inc
lods
xchg
movsl
inc
and
shrb
cmp
movsl
ret
por
push
mov
mov
or
loopne
pop
ja
dec
jae
int3
pop
pop
pop
mov
mov
mov
mov
pop
sbb
pop
shll
add
ret
adc
mov
in
fdivrs
and
in
inc
jno
lahf
loope
rorb
jp
mov
mov
lods
movsl
sbb
cmp
test
xchg
insb
jae
jp
pop
xlat
push
cmpsb
popa
lock
scas
insl
cmp
daa
mov
cltd
xchg
call
xchg
int3
xchg
movsl
lods
cmp
imul
cmc
into
stos
jnp
popa
mov
mov
push
hlt
add
insl
mov
add
movsl
mov
or
sahf
push
adc
cmp
pop
scas
mov
icebp
lods
in
sbb
and
pop
pop
dec
push
es
xchg
ret
sbb
lods
cmp
xor
in
or
and
mov
push
and
cmp
in
scas
push
sbb
pusha
dec
jle
jns
sub
xor
movsl
mov
aam
xchg
or
andb
jbe
sahf
jl
arpl
lds
cli
add
sbb
inc
pop
testl
orl
or
or
add
add
movsl
stc
inc
adc
cltd
mov
or
mov
adc
lods
push
out
movsl
stc
mov
arpl
inc
sub
sub
out
xchg
mov
inc
cld
mov
dec
sbb
sbb
and
lds
cmp
push
fcoms
ret
push
inc
jb
sub
xchg
stc
fdivrl
push
sbb
mov
sti
dec
fnstcw
dec
inc
add
test
adc
movsl
clc
out
adc
pop
dec
jae
mov
mov
push
pop
in
inc
cli
cld
movsl
repnz
movsl
push
mov
arpl
cld
mov
ret
subl
out
scas
aaa
movsl
in
shrl
add
pop
jge
pop
data16
xor
out
mov
push
aam
sar
xchg
adc
fidivrs
cmc
mov
sub
movsl
in
sti
dec
daa
stc
repz
push
and
cwtl
sub
push
jns
push
jle
stos
mov
rol
pop
aaa
mov
sbb
mov
fistpl
adc
popa
xchg
cmp
push
inc
fs
movsl
push
sub
leave
mov
mov
mov
xor
xorl
jl
pop
sbb
int
mov
lcall
xor
ficoml
out
sub
sub
or
push
sub
xchg
movsl
mov
loop
dec
movsl
nop
push
aaa
movsb
jmp
inc
icebp
xchg
mov
cld
mov
adc
cmp
aas
adc
mov
movsl
push
mov
int
pop
adc
dec
rclb
int
jns
clc
movsl
in
neg
aam
std
out
or
test
mov
addr16
xchg
mov
lds
test
sti
movsl
int3
jmp
loope
cwtl
into
and
movsl
leave
push
jl
add
sahf
vaddsubpd
loop
lds
sbb
or
and
add
movsl
lret
imul
popf
mov
fldenv
sub
or
insl
xlat
lret
push
loopne
andb
jbe
movsl
xchg
cmpsl
jmp
or
sub
ror
adc
pop
js
lahf
in
insl
jnp
in
test
xchg
pusha
pop
movsl
mov
aam
cmp
push
imul
pushf
xchg
int
xor
cmc
das
sub
lcall
fcoml
adc
push
xor
fiaddl
mov
shll
imul
movsl
mov
pop
inc
jo
pop
pop
test
mov
js
hlt
andl
loope
je
sub
xor
mov
sub
movl
xchg
sub
xor
pusha
inc
imul
nop
scas
mov
pushf
call
lcall
mov
adc
pop
movsl
jnp
mov
mov
mov
jmp
inc
adc
xchg
rolb
sbb
dec
in
fistl
mov
iret
je
mov
mov
jbe
fisubl
xchg
gs
mov
mov
push
data16
pushl
mov
sub
sbb
inc
lods
or
sbb
js
add
cmp
test
mov
inc
lods
mov
mov
and
mov
lock
mov
in
out
and
shl
cwtl
stc
les
dec
insb
arpl
std
pop
jmp
mov
or
fsubl
into
imul
or
adc
cld
cli
ja
sbb
push
loope
adc
xchg
mov
movsl
mov
or
fsubr
loop
les
inc
test
movsl
mov
popa
sub
dec
jo
add
xor
sbb
lods
hlt
aad
insl
xor
sub
jbe
push
mov
xchg
lods
and
mov
jge
inc
cmp
arpl
je
stos
out
mov
xor
int3
adc
push
adcl
xor
in
arpl
fs
lcall
adc
mov
mov
push
push
mov
aad
push
mov
std
into
cmpsl
and
sub
mov
fcoms
iret
fucomip
push
mov
in
mov
mov
mov
inc
cs
jnp
sbb
pop
leave
and
cltd
ds
insl
mov
or
and
aam
push
fs
movsl
es
cs
popf
push
add
test
xchg
sbb
movsl
and
int3
in
xchg
mov
movsl
ljmp
insb
movsl
xor
addr16
rcrb
movsw
arpl
int3
push
dec
sbb
incl
adc
mov
mov
and
jge
mov
movsl
cli
inc
insw
inc
fs
aaa
mov
movsl
mov
into
jnp
outsl
gs
push
xchg
xlat
sub
or
and
jae
xor
icebp
repnz
in
js
push
jne
xchg
movsl
add
mov
jnp
pop
in
mov
or
inc
wbinvd
andl
fs
movsl
sub
cmc
or
aad
adc
movsl
cmpsb
and
mov
xchg
or
fs
pop
jmp
add
mov
movsl
or
comiss
out
in
dec
movsl
sti
fiaddl
dec
subb
add
push
mov
jle
movsl
cmp
fisubs
dec
cmpsl
shl
pop
in
sub
mov
ret
nop
enter
jge
in
push
dec
jne
mov
insb
movsl
mov
mov
movsl
out
and
movsl
push
dec
jp
inc
and
imul
xchg
das
movsl
lds
pop
xlat
lahf
jo
in
loop
or
movsl
sub
mov
dec
push
aad
mov
stos
cmpsl
movsb
cmpsl
sbb
call
sbb
leave
movsl
xchg
cmp
mov
mov
adc
or
fcmovnu
movsl
repz
xlat
fldl
adc
inc
xchg
cmc
pop
fidivl
push
or
mov
iret
jg
xor
and
mov
dec
push
fcompl
pop
jae
push
dec
testl
and
inc
xor
movsl
mov
into
jg
mov
mov
add
lret
shll
mull
dec
jns
mov
and
in
adc
adc
xor
pop
movsl
pop
mov
push
mov
pusha
lds
incl
inc
cld
mov
cmpl
lcall
and
push
cli
pop
movsl
lea
push
sbb
int3
adc
inc
cmp
das
mov
mov
pop
jl
test
dec
xchg
movsl
out
sub
cli
loope
or
pop
loop
xchg
and
mov
stos
mov
scas
pop
stc
and
movsl
inc
lret
xchg
pop
fisubl
adc
mov
cmp
fdiv
aad
mov
mov
lcall
out
jmp
sub
xchg
dec
fsubl
loop
jg
dec
cmpb
rcrb
movsl
or
and
filds
leave
sub
movsl
test
popa
fs
scas
inc
movsl
or
mov
xlat
movsl
mov
mov
sbb
xchg
push
xor
and
dec
xor
adc
push
movsb
lret
inc
mov
sbb
loope
jno
mov
mov
jbe
popf
cmp
out
sbb
filds
int
scas
jecxz
mov
int
scas
pusha
add
repnz
divl
enter
pop
ret
xchg
cmc
ja
inc
jle
movsl
iret
jb
movb
mov
jo
and
pop
movsl
jae
lods
scas
jge
mov
sbb
fcmovne
cltd
testl
sbb
out
jns
mov
cmc
pop
jl
in
lret
movsl
out
rorb
imul
ret
mov
roll
std
add
movsl
lret
xor
repz
dec
dec
movsl
push
outsb
xor
and
mov
arpl
push
in
fneni(8087
clc
fldcw
in
mov
add
orl
sbb
shll
cmpsl
inc
movsl
and
mov
jp
cmp
insl
out
into
testl
stc
and
inc
test
jg
movsl
rcl
inc
mov
or
and
sbb
xor
jge
dec
mov
add
adc
add
mov
sbb
and
mov
lcall
popa
and
xchg
lock
in
cld
pop
mov
pop
pop
int3
dec
neg
out
movsl
mov
sub
pop
add
xchg
sub
andb
int3
js
movsl
out
push
dec
cmpsl
and
lods
lds
movsb
add
shll
cmp
and
push
iret
std
mov
or
jnp
jle
and
jmp
mov
mov
push
pop
aaa
mov
pop
cmc
cmp
jno
xchg
and
push
jae
mov
movsl
lret
or
insb
pop
pop
inc
hlt
lds
lret
movsl
add
mov
xchg
cmpsl
pop
or
dec
into
test
mov
sbb
mov
out
mov
jecxz
pop
push
loopne
or
xchg
mov
xor
andb
mov
xor
gs
movsl
adc
pushf
in
lret
lds
xor
pop
test
pop
gs
int
movsl
shlb
mov
mov
cs
rcrb
lret
hlt
test
testl
mov
adc
mov
movsl
or
sbb
es
icebp
mov
add
dec
adc
xchg
cmp
scas
and
js
out
mov
cmpsb
das
jae
or
mov
test
in
loop
or
fstl
cli
iret
scas
push
movsl
aad
mov
jae
inc
xor
dec
roll
and
stc
in
mov
sbb
pop
mov
inc
pop
pop
cmc
jge
mov
mov
mov
sti
xor
movsl
add
shlb
xor
dec
movsl
or
sbb
push
mov
and
mov
inc
enter
pop
and
incl
and
jmp
movsb
or
xchg
lods
or
inc
push
mov
movsl
sbb
out
shlb
xchg
movsb
jb
xor
mov
xchg
xchg
cmc
andl
dec
rcrb
or
aas
int
call
movsl
fwait
sub
inc
roll
aam
xchg
inc
lds
sub
movsl
pop
outsb
push
imul
xor
lret
cli
pop
shlb
imul
icebp
add
iret
mov
xor
rclb
xor
nop
sub
movsl
dec
sub
inc
shlb
inc
aas
mov
jmp
daa
jno
pop
movsl
lock
int
rolb
nop
iretw
adc
out
movsl
call
jg
mov
insb
lret
cmp
add
and
movsb
mov
jmp
sarb
into
push
pop
xchg
jns
iret
insl
adc
lds
add
mov
int3
test
dec
test
pop
xchg
xchg
rorl
adc
mov
jle
ja
shl
lret
ret
movsl
or
and
fdiv
in
xchg
xor
fsubp
mov
mov
xor
arpl
inc
lods
ds
pop
cmp
cmc
addr16
loop
mov
and
sti
adc
or
mov
sub
daa
es
mull
mov
data16
fdivp
mov
cmpsb
xchg
cmp
mov
imul
jecxz
sub
and
push
cmp
mov
je
push
or
xchg
push
fldcw
sbb
add
ja
cmp
into
sbb
das
loop
sub
inc
negb
cmp
cmp
test
mov
int
mov
testb
xchg
decb
fsubl
sub
and
cltd
push
dec
or
pop
push
test
pop
push
or
jecxz
sub
pop
pop
mov
push
lcall
test
addb
mov
xchg
and
loop
data16
ljmp
push
loopne
movsl
fcmovnu
push
lods
cmp
loopne
pop
cmp
dec
frstor
and
add
pop
ret
lods
hlt
xor
mov
mov
pop
fadds
repz
mov
and
sbb
cli
pop
dec
je
loopne
jb
cmp
jecxz
int3
jnp
sbb
push
and
and
fstl
push
add
xchg
add
cmp
fmull
lds
out
cmp
and
enter
mov
and
cmp
inc
adc
daa
sub
mov
movsl
repz
cmpb
sub
loope
pop
pop
shlb
jnp
dec
cwtl
pop
cmpsb
std
sbb
popa
sub
mov
lock
fnstsw
popa
mov
sbb
sub
test
jle
cmp
adc
stc
std
jae
loop
movsl
icebp
jno
clc
mov
jae
leave
jnp
test
xor
push
fildl
std
mov
mov
mov
mov
aas
mov
and
cmpsb
add
lret
sar
adc
dec
sbb
mov
lock
pushf
inc
inc
mov
pushf
aam
shll
mov
mov
fnstsw
sub
fnstcw
xor
mov
mov
inc
call
mov
in
mov
into
fwait
pop
sub
adc
mov
xchg
lret
popf
lret
pop
loope
icebp
popf
sbb
mov
cmpl
mov
add
cs
mov
fisubs
stos
inc
movsl
add
fs
inc
push
mov
jl
dec
fmuls
add
pop
adc
dec
popf
dec
repz
arpl
add
push
movsl
fs
je
outsl
out
lcall
adc
mov
sub
cmp
inc
push
fnsave
adc
dec
pop
jp
aad
lds
test
in
clc
cmc
mov
adc
and
xchg
adc
das
push
cli
std
cmp
lcall
push
sub
pop
movsl
dec
sbbb
mov
call
insb
movsl
or
movsl
sbb
leave
adc
jg
bound
lods
sub
gs
mov
and
and
sub
xor
je
movsl
clc
push
push
inc
mov
imul
aam
aas
or
pop
in
adc
out
in
cmp
and
aas
cmc
push
sbb
cmc
add
fxch
cmp
ret
imull
mov
mov
lods
or
mov
cld
bound
pop
pusha
movsl
out
call
jnp
scas
cmpsl
movsl
jmp
test
adc
mov
pop
imul
sbb
insb
pop
mov
movsl
in
jge
sbb
lcall
out
movsl
mov
sti
cwtl
addl
pop
sbb
ljmp
mov
inc
shlb
mov
sbb
andb
scas
jno
clc
and
xchg
xchg
dec
xor
jmp
mov
pushf
movsb
loope
shrb
shl
cmp
or
hlt
in
jecxz
sbb
mov
jmp
mov
sub
mov
in
pop
adc
pushl
shll
test
add
outsb
movsl
lahf
mov
inc
mov
movsl
adc
iret
testb
sbb
test
pop
ja
loop
xor
pop
sub
or
push
xchg
movsl
int3
mov
aad
sbbb
inc
dec
movsb
sub
push
xchg
mov
sbb
insl
push
out
pop
push
cmp
sub
hlt
add
dec
cld
pop
cwtl
scas
sti
stos
aad
or
mov
pop
push
cmpsl
adc
mov
push
out
xor
and
dec
data16
outsl
sahf
sub
jp
adc
loope
or
aaa
mov
movsl
iret
dec
mov
sub
movsl
pop
pop
cmp
xchg
movsl
cld
mov
test
mov
add
into
pop
lds
adcl
fucompp
adc
mov
call
sub
test
clc
adc
ret
movsl
out
adc
and
cltd
leave
stos
mov
data16
ljmp
cld
fsts
in
pop
push
pop
in
test
std
fs
or
test
xor
ljmp
fdivl
rol
add
push
mov
pushf
repnz
movsl
cmpl
loop
adc
enter
rorl
inc
and
cmpsl
or
sbb
xor
movsl
mov
push
das
xor
fbld
push
xor
push
mov
adc
out
mov
clc
xorl
add
and
test
xchg
xor
mov
scas
pop
stc
div
mov
mov
mov
call
lea
cld
outsb
leave
out
movsl
push
jecxz
hlt
fldl
shlb
jb
adc
daa
mov
gs
movsl
and
xor
pop
jbe
movsl
inc
jb
dec
jae
sub
movsl
bound
mov
pop
imul
push
xor
shll
mov
push
mov
lds
mov
rcl
sbb
add
mov
jnp
push
jl
lret
jo
inc
test
sub
dec
cli
mov
push
iret
push
jae
movsl
leave
push
inc
fistl
ljmp
mov
aas
cmpsl
scas
xor
int3
inc
int
mov
cmp
movsl
mov
adc
push
mov
pop
add
lods
stos
jnp
pop
negl
aas
pop
or
mov
inc
popa
int
in
cmp
jns
cmpb
stos
and
inc
bnd
movsl
and
call
fdivp
out
movsl
sub
sahf
daa
add
js
fsub
dec
cwtl
cmp
pusha
je
adc
dec
sbb
decb
jmp
roll
and
call
loopne
sar
in
lret
movl
movsl
push
jne
mov
movsl
sub
xchg
sahf
xor
jno
enter
push
cs
or
mov
xor
pop
addr16
inc
imul
adcl
and
js
push
inc
xlat
or
jmp
xor
fcmovnbe
lods
and
daa
cmp
mov
stos
movsl
jae
inc
jns
adc
cltd
movsl
insl
pop
mov
rcll
lret
fucomi
shlb
test
cmc
loopne
push
ja
dec
cmc
nop
mov
cmp
inc
insl
cld
int3
imul
sub
mov
mov
cltd
cmc
jl
in
mov
out
das
dec
in
push
movsl
ja
and
cmp
sbb
movsl
or
inc
pop
mov
or
aad
adc
popf
mov
mov
inc
mov
in
xlat
lods
dec
out
lret
add
out
call
movsl
jle
sub
and
inc
jp
fldenv
movsl
sbb
xor
test
inc
mov
mov
scas
sub
filds
mov
push
push
adc
xchg
adc
xor
jecxz
mov
and
movsl
push
cmp
jb
adc
mov
mov
aad
mov
gs
insb
outsl
fwait
into
xchg
sbb
push
cmp
and
dec
out
cs
in
aas
xor
das
jge
pusha
fistl
movsl
aam
mov
jp
stc
stc
mov
mov
mov
test
pop
movsl
adc
inc
mov
pop
fistps
movsl
loop
push
cmp
mov
mov
mov
push
test
lds
cmp
mov
cli
lret
mov
into
mov
pushf
cmp
movsb
in
pop
subb
xchg
inc
scas
mov
mov
push
cmpsb
aam
cli
iret
ljmp
movsl
dec
shl
mov
gs
stos
cli
cld
subl
push
ds
stc
enter
addb
sub
and
pushf
test
pop
jae
hlt
cwtl
int3
leave
pusha
movsl
add
shrl
call
jecxz
and
mov
ret
adc
test
in
sub
xor
or
pop
stos
das
std
imul
lahf
in
jmp
insb
imul
test
mov
inc
sar
movsl
jae
jle
scas
movsb
pop
mov
or
imul
sub
push
or
es
and
pop
dec
imul
xchg
mov
cmpsl
dec
pop
xor
add
mov
ds
imul
shrb
dec
and
int
mov
push
stc
cmc
sahf
dec
sar
leave
mov
cmc
bound
jle
std
inc
test
cmp
hlt
xlat
les
repz
mov
mov
pop
lret
pushf
pushf
js
jmp
and
sub
cmp
adc
lods
int
test
sbb
xchg
scas
cmpsl
sub
push
adc
in
pushw
and
mov
je
iret
sbb
inc
jecxz
out
stos
mov
xchg
adc
xchg
sbb
mov
sbb
sbb
hlt
pop
jecxz
jmp
ror
sbb
xlat
popf
leave
add
notb
in
lret
jno
in
xor
mov
dec
cmp
das
push
das
cmpsb
mov
loope
inc
pop
nop
pop
sti
jle
inc
repz
ret
xor
mov
clc
fsubrs
cmpsb
add
jge
cmpsb
push
in
jle
popa
nop
push
xlat
leave
xchg
push
inc
push
flds
dec
lds
xor
pop
inc
fldenv
and
sub
cmp
push
sub
ja
mov
fnstcw
push
not
lcall
sub
in
lcall
popf
push
jno
jp
dec
jae
fstpt
in
fwait
mov
cmc
aad
push
pop
cs
data16
cmp
pop
lods
and
xor
fucom
jecxz
xchg
mov
inc
loope
fisttps
mov
lahf
pop
repz
xlat
xor
sub
fstpl
push
stos
cmp
push
inc
mov
inc
jle
sahf
ret
dec
pushf
sbb
iret
push
idivb
adc
xchg
xlat
and
clc
ret
add
mov
dec
scas
ss
aad
mov
cmp
mov
addr16
pop
les
push
push
arpl
pop
jns
jne
pop
push
addr16
popa
js
cmp
pop
movsl
add
lods
cld
in
mov
dec
adc
lret
jp
mov
movsl
test
ja
mov
in
shrl
mov
mov
cmp
fs
cmp
fsubr
fnstsw
xchg
lahf
dec
movsl
pushf
aam
sahf
inc
dec
shll
mov
rorl
push
stos
ljmp
xchg
or
movsl
data16
int3
out
movsl
rcll
add
hlt
movsl
xchg
flds
adc
movsl
stos
mov
mov
add
jae
imul
pusha
push
jne
sbb
add
stos
leave
add
fld
jmp
mov
add
and
cmc
jnp
lods
movsl
ret
xchg
fisttpl
or
test
jecxz
in
mov
hlt
aaa
loope
cwtl
scas
xchg
stos
sahf
inc
push
bound
dec
mov
movsl
sbb
inc
adc
or
push
sbb
leave
sub
fbld
pop
cld
lods
test
mov
mov
pop
testl
dec
push
outsb
dec
movsl
pop
in
lds
ss
jp
mov
aas
jmp
mov
dec
and
adc
and
bound
imul
in
sbb
lcall
or
movsl
pop
nop
mov
lcall
inc
xchg
xor
in
lds
in
lds
mov
push
cmc
nop
xor
insb
inc
js
cmp
cmp
add
mov
fcmovne
popa
out
cmp
push
adc
jmp
loopne
push
adc
push
fucom
shlb
sahf
inc
ret
sbb
adc
and
inc
test
fs
andl
movsl
push
addr16
adc
imull
mov
iret
in
ljmp
cmp
popf
sub
fnsave
inc
ror
movsb
out
mov
bound
enter
dec
add
out
call
mov
outsl
mov
std
mov
mov
ss
lcall
and
movsl
jge
xor
decl
sbb
and
sub
adc
mov
jae
lret
icebp
sub
in
enter
mov
adc
fists
mov
push
icebp
cmp
stc
or
lds
icebp
jno
data16
mov
movsl
movsb
xchg
inc
fwait
icebp
rcrl
out
mov
or
outsb
push
jle
xor
pop
mov
mov
test
dec
fiaddl
idivl
xchg
mov
in
inc
imul
ret
stc
in
movsl
aam
jo
mov
dec
insb
jae
pop
mov
mov
add
or
ss
adc
inc
pop
mov
hlt
int
ret
insl
or
sbb
out
jecxz
in
mov
fsubl
int
fsubs
aas
leave
cld
arpl
test
sarl
xor
mov
add
sbb
into
loop
push
movsl
ljmp
mov
and
aas
movsl
repz
jecxz
mov
stos
rolb
cmpsb
fwait
mov
fdivrp
daa
lods
and
lock
movsl
jmp
cs
bnd
xchg
inc
xchg
xchg
sub
arpl
movsl
jmp
lea
sahf
pop
xor
repnz
popa
inc
mov
outsb
cld
mov
xchg
sub
push
repz
add
dec
add
pushl
push
aas
pop
and
push
lock
int3
and
jg
aam
in
outsb
jmp
sbb
or
mov
pushf
mov
push
sbb
movsl
or
les
sub
loopne
fldenv
lock
add
bound
add
mov
insb
or
cmp
ds
mov
mov
push
popa
push
fprem1
pop
mov
lcall
push
dec
lret
insl
inc
outsb
test
fwait
inc
out
inc
push
jo
pop
gs
xchg
aaa
jl
nop
push
push
inc
or
loopne
push
jg
in
loope
dec
inc
outsl
add
into
xchg
movsb
mov
jbe
inc
mov
push
repnz
std
push
sahf
pop
jg
cmpsl
movaps
push
dec
cmpsb
lds
and
in
and
xor
add
and
adc
inc
add
fisubs
cmpsl
movsl
pop
xor
movsl
stc
sub
enter
jmp
ret
movsb
add
popw
stos
test
add
insb
int
neg
add
out
mov
test
lahf
movsl
and
pop
jg
push
pop
jle
jns
test
xchg
data16
cmp
or
lds
movsl
out
push
imul
bound
mov
inc
sub
popf
jge
fcomip
daa
sahf
jne
sbb
int
pop
adc
lods
ret
movsl
jo
ror
push
xor
in
mov
dec
addr16
dec
jnp
adc
ljmp
lahf
movsl
sub
or
cld
add
push
xchg
scas
dec
mov
movsl
out
and
sbb
icebp
adc
test
mov
int3
add
pop
loopne
fs
mov
imull
jns
int3
inc
or
das
cmp
movsl
jbe
fwait
enter
adc
scas
daa
call
or
and
das
adc
push
mov
pop
mov
sti
mov
cmp
pop
lds
pop
loop
data16
cmp
and
cmpsb
push
testl
jb
idivb
addr16
daa
vpsraw
sub
stos
mov
test
pusha
cmp
mov
adc
inc
push
lret
or
adc
xor
jbe
scas
ret
dec
add
shlb
xor
jle
cmp
pop
mov
mov
out
movsl
mov
clc
jge
push
xor
adc
mov
xchg
cmp
fmull
fldenv
movsl
mov
jns
adc
popa
movsl
inc
inc
lcall
xor
movsl
xor
orl
test
xor
mov
movsl
pcmpgtw
push
xchg
popf
cmp
mov
adc
mov
ret
sbb
pop
sbb
out
movsl
push
dec
xor
cmpsb
xchg
fisubs
or
sbb
out
mov
addr16
scas
mov
lds
xor
mov
movsl
flds
pop
stc
lea
adc
dec
movsl
inc
xchg
push
imul
lds
ret
xor
scas
jo
movsl
fisttps
mov
lods
ljmp
sub
sbb
inc
add
dec
push
int3
vpmuludq
jle
mov
add
push
xchg
mov
push
cmpb
sbb
inc
movsl
das
mov
stos
inc
adc
sbb
fdivs
or
dec
lahf
adc
movsl
bound
lcall
mov
mov
into
int
test
or
xchg
movsl
add
pusha
pop
mov
jae
xor
jle
jl
adc
fwait
mul
pop
mov
scas
inc
ja
fmulp
adcb
sbb
jg
inc
sarb
popa
ja
int
and
movsb
mov
jne
mov
imul
dec
dec
add
pop
filds
pop
movsl
in
dec
pop
rolb
icebp
movsl
ficomps
mov
movsl
bound
inc
push
add
inc
pop
jb
mov
push
inc
push
movsl
cmp
jmp
in
jle
movsl
xor
xlat
cwtl
cltd
and
movsl
add
lcall
mov
ret
call
shrb
lods
and
loopne
shll
pop
lds
mov
jae
fdecstp
lret
fsubrs
or
mov
jo
mov
pop
inc
aad
aaa
pop
xchg
pusha
and
dec
insl
cmc
fwait
loopne
pop
movsl
fdivp
sub
out
jb
pop
mov
mov
mov
movsl
mov
daa
sub
stos
jmp
aad
bound
addr16
ds
dec
pop
adc
lds
cmp
stos
pushf
xor
insb
movsl
cmp
pop
jo
scas
lds
test
sahf
sbb
jp
aam
xchg
sub
xchg
push
and
add
daa
xor
inc
fstp
inc
js
push
lock
mov
jbe
rorl
or
sbb
std
cwtl
mov
test
mov
add
scas
mov
mov
mov
test
ljmp
mov
xor
jmp
pusha
adc
push
inc
dec
or
stos
movsl
popa
jo
addr16
cmc
lret
out
movsl
repnz
js
pusha
dec
xchg
cmpsb
sbb
fldt
push
lahf
aam
repz
push
xchg
add
lret
hlt
in
movsl
mov
mov
push
or
psllw
and
mov
and
inc
and
add
pop
into
movsl
test
shl
aad
movsl
pop
pop
xchg
flds
push
jb
movsl
xchg
sub
scas
movsl
adc
std
cmp
xor
and
das
fsubl
adc
push
jb
cmp
xchg
movsl
xchg
inc
add
and
aad
iret
cld
repz
loopne
xchg
sub
mov
xchg
add
jns
movsl
ljmp
push
movsl
lcall
bound
xor
loopne
cmp
scas
xchg
outsl
ljmp
mov
mov
sub
mov
ljmp
out
push
movsl
int
lods
dec
mov
movsl
js
add
push
cs
and
jne
imul
push
and
rorb
stc
jno
scas
test
iret
xor
lea
sbb
mov
pop
cmp
pop
push
imul
ljmp
mov
dec
testl
mov
test
in
lods
insb
or
mov
movsl
jle
pop
ja
sbb
pop
jecxz
dec
inc
lds
ss
mov
xchg
adc
and
stos
scas
lcall
dec
enter
inc
jbe
sbb
stos
jb
mov
mov
xchg
scas
mov
in
push
pusha
jmp
call
pop
push
movsl
push
stos
mov
inc
pop
xchg
mov
inc
push
sub
and
xchg
push
jns
cltd
jo
pushf
mov
pop
push
inc
outsl
std
mov
xchg
mov
mov
cli
nop
cli
jge,pt
test
popa
test
pop
mov
mov
jo
xor
int
mov
movsb
std
or
clc
xor
push
rcll
mov
and
cmpsl
and
cmp
pop
or
out
mov
cmpsb
adc
imul
sub
jnp
xchg
mov
leave
call
das
jp
add
in
xchg
pop
sti
push
mov
loope
sbb
xor
movsl
bound
loop
inc
inc
adc
hlt
fldenv
sub
inc
inc
sub
int
dec
push
loopne
sub
movsb
inc
cmp
xchg
mov
icebp
xor
dec
lds
cli
movsb
jnp
lahf
mov
sbb
xor
pop
xor
mov
out
mov
dec
push
divl
std
inc
adc
dec
hlt
test
xchg
mov
sahf
pop
push
dec
stos
bound
out
sbb
xchg
popf
sub
sbb
popf
in
sbb
and
mov
in
clc
mov
pop
fcmove
loope
mov
or
ja
cld
push
push
fcomps
test
mov
dec
iret
lods
arpl
push
inc
sahf
std
shl
cmp
mov
js
jae
fistps
mov
outsb
pop
enter
jmp
inc
cmp
ljmp
aaa
xor
inc
lods
dec
movsl
roll
leave
sub
leave
aaa
out
inc
cmpsl
lret
int3
add
cltd
aam
add
sub
xchg
orl
jns
movsl
std
pop
dec
js
shll
xchg
xchg
lds
jl
mov
lock
push
iret
push
cmp
jecxz
dec
test
jno
push
mov
lret
sbb
cmpsl
add
insl
repnz
pop
xlat
cmpsb
shl
and
mov
ret
or
pusha
iret
inc
mov
scas
fs
and
and
dec
xor
sub
push
jae
mov
in
xchg
or
and
out
lcall
and
loopne
jle
push
mov
push
movsl
stos
cs
loope
push
dec
and
repnz
and
cmp
inc
jg
push
outsb
dec
rep
lea
mov
sahf
cmp
or
xchg
and
adcb
sbb
pop
aad
or
lcall
jnp
lcall
loop
adc
xor
scas
icebp
mov
mov
in
fsts
int3
stc
in
cmp
jns
push
lds
lret
mov
ljmp
jbe
movsl
push
xchg
in
mov
and
lock
sub
in
in
sbb
ret
orl
push
in
pop
cmpb
movsl
ret
adc
aaa
xchg
mov
lea
mov
popf
xor
dec
add
dec
arpl
movsl
mov
inc
mov
xchg
push
test
lds
xchg
inc
movsl
lahf
adc
mov
pop
cltd
pop
movsl
inc
and
jnp
movsl
xchg
mov
fcoms
push
push
repnz
insl
clc
pop
movsl
inc
movsb
fadd
mov
xor
popa
js
lret
leave
push
mov
cmpsb
imul
rcl
shl
movsl
push
popa
in
dec
loope
movsl
fmull
mov
movsl
aad
pop
scas
xchg
psubusw
sbb
xor
lock
ljmp
movsl
sbb
pop
outsl
mov
mull
mov
pusha
andb
mov
mov
lgs
mov
adc
bound
mov
mov
add
sub
je
js
movsl
push
test
test
outsb
mov
andb
sbb
aaa
cmp
test
into
mov
cmp
mov
sub
mov
mov
stos
sub
xchg
insb
pop
adc
mov
push
frstor
jmp
xchg
xchg
outsb
cmp
in
loop
push
hlt
push
jecxz
inc
mov
ja
dec
push
mov
cmpsb
in
mov
mov
out
mov
andl
sahf
add
pop
cmp
pop
int3
faddl
outsb
sbb
push
or
cld
aas
dec
mov
dec
data16
push
lret
in
adc
jo
mov
push
in
mov
sub
jb
mov
imul
fdivr
in
insl
sahf
inc
push
sbb
test
mov
or
in
aam
mov
jge
xchg
adcl
test
cmp
movsl
fidivl
or
xchg
adc
cwtl
push
fidivrl
sbb
pop
scas
mov
mov
cmp
movsl
sbb
test
daa
push
movsl
push
jmp
add
divl
inc
inc
aad
in
icebp
pusha
inc
les
movsl
outsl
js
sbb
xchg
dec
cli
imul
inc
add
cld
ljmp
add
testb
pop
mov
push
adc
movsl
push
roll
ror
imul
cwtl
movb
or
pop
lock
inc
roll
aad
lea
inc
xlat
mov
cmc
mov
arpl
adcl
mov
push
add
rcll
mov
mov
sub
into
sbb
mov
inc
add
or
shlb
stos
ss
cwtl
mov
inc
sbb
or
mov
cmp
adc
test
repnz
xchg
insl
pop
movsl
sbb
in
jbe
addr16
mull
call
dec
jb
and
xor
pop
loopne
in
jle
mulb
push
mov
lock
mov
loop
imul
movsl
sbb
xor
jmp
movsl
push
imul
pop
xchg
cmp
xor
fwait
mov
add
aad
cmc
or
pusha
sbb
addr16
int3
push
cmp
movsl
jae
imul
add
sarl
push
dec
mov
sbb
cmpsb
lods
into
mov
pop
add
pop
and
cmc
pusha
rcrb
push
movsl
ja
cltd
aam
adc
shlb
inc
decb
gs
lret
cmp
sbb
stc
aaa
push
repnz
cmp
cmc
sbb
movsl
jnp
xchg
sub
xchg
les
cmp
test
push
push
push
jle
movsl
mov
stc
push
mov
test
cmc
into
mov
xor
mov
icebp
mov
mov
sbb
dec
sbb
fs
int
push
test
out
fadd
sub
leave
adc
movsl
scas
dec
insb
sbbl
dec
mov
iret
in
jae
mov
das
inc
movsl
xor
loopne
push
adc
andb
sub
inc
jns
sub
sahf
push
jno
jl
inc
xchg
mov
shl
xchg
insb
test
addl
int3
movsl
jmp
adc
add
pusha
movsl
mov
mov
and
addr16
test
scas
xchg
jge
jne
bound
addr16
dec
movsl
lds
movsb
ss
pop
fldenv
pop
je
cmp
lret
mov
push
adc
dec
add
movsl
outsl
mov
sbb
mov
push
push
adc
pop
mov
sub
daa
push
jg
sub
push
xchg
pusha
into
cli
test
clc
outsl
mov
ja
fstpl
lahf
inc
cmp
movsb
popf
mov
movsl
sub
ret
andl
sbb
pop
movsl
into
lods
or
popa
enter
jmp
xchg
sbb
test
and
mov
std
int3
stos
or
add
es
xor
cmp
adc
test
sahf
andb
xadd
pop
push
jge
adc
pop
inc
movsl
popf
xchg
mov
sbb
or
es
ljmp
sbb
fs
sbb
sbb
push
hlt
cmpsb
movsb
dec
sub
rcrl
inc
es
adc
movsl
pop
ss
mov
mov
es
fcomi
in
iret
mov
mov
pop
cmc
inc
pop
movsl
pop
cmp
mov
je
subb
cld
iret
in
and
pushl
test
cmp
inc
movsl
gs
cmc
push
shr
das
leave
dec
movsl
test
jle
sub
mov
xor
mov
sbb
sahf
jge
adc
shlb
pop
xchg
pop
sub
neg
movsl
repz
insb
nop
das
out
ljmp
loopne
lods
push
sbb
in
pushf
dec
lods
jecxz
inc
fs
push
xchg
lahf
mov
cwtl
mov
xor
clc
popa
pop
fsubp
repz
vpcmpeqw
xchg
outsb
pop
hlt
pop
and
lret
sbb
clc
cmp
mov
shlb
cmp
xlat
mov
test
daa
mov
fs
outsb
jecxz
cltd
mov
movsl
cmp
mov
xchg
bndldx
push
mov
lods
adc
inc
push
fsubl
push
je
test
adc
mov
and
or
mov
movsl
cmp
mov
mov
cmp
int
mov
xor
sbb
daa
jo
mov
and
jo,pt
movsl
sbb
and
dec
adc
mov
pop
in
movsl
push
pop
mov
repnz
push
lret
add
mov
aad
add
xchg
and
cmpsb
sub
in
imul
xchg
push
dec
mov
cltd
push
cmc
jg
push
sbbl
ds
jnp
push
mov
cmpsl
bt
add
out
push
clc
xlat
sti
les
or
in
cmpsb
iret
add
std
lcall
inc
mov
push
mov
mov
pop
jae
xchg
pop
subl
cmp
test
int
mov
repnz
push
xor
adc
cmc
sahf
sbb
dec
xor
popf
xor
scas
sahf
dec
add
push
cmc
xor
xchg
nop
cmc
popf
mov
fisubs
daa
mov
jns
es
dec
add
outsb
push
add
fldl
pop
lods
mov
jmp
negb
shlb
sahf
imul
xorl
sub
pop
cmp
mov
sbb
and
sub
xchg
cmc
pop
hlt
test
cmp
pop
or
test
dec
in
pushf
sub
imul
xlat
cmc
lds
es
mov
pop
jl
fwait
xchg
pop
mov
cmp
push
sbb
hlt
push
cld
daa
out
jnp
dec
adc
dec
cli
cmp
mov
or
mov
iret
pop
add
add
lcall
sub
lods
cmp
add
xchg
cmc
sub
es
sub
adcb
mov
sbb
push
lds
or
call
test
sbb
sahf
push
shlb
and
test
mov
fs
xchg
popa
or
mov
pop
sub
add
sbb
lea
xlat
sbb
sbb
lret
push
ret
jae
insb
es
pop
call
mov
lods
out
insl
cmpsl
add
jmp
es
mov
inc
mov
dec
jno
sbb
and
mov
shl
fmuls
pop
aaa
xchg
lahf
mov
push
xlat
lock
cmp
ret
cld
add
or
jbe
pop
insl
cmpsl
dec
in
cmpsb
push
lds
fnstsw
sbb
jae
std
inc
iret
xchg
or
sbb
cmpl
jge
out
imul
ljmp
cwtl
inc
push
test
imul
xchg
and
dec
mov
out
das
inc
stos
scas
push
loope
fsubrs
jbe
pop
fs
mov
in
jmp
jle
popa
std
inc
push
adc
inc
dec
sbb
ret
jne
in
aaa
sub
imul
fcmovu
jge
lock
loopne
add
pop
push
mov
aad
pop
xlat
pushf
adc
outsb
loope
push
cwtl
je
enter
push
cli
mov
shrl
out
dec
test
stos
lahf
push
lods
cmp
int
sub
push
dec
jns
xchg
pop
mov
pop
adc
ja
push
mov
push
inc
sbb
pop
and
push
sbb
addr16
jb
cwtl
mov
shll
stos
mov
xchg
cld
pop
mov
icebp
sbb
and
dec
cmpsb
leave
push
call
sahf
aam
jmp
arpl
push
and
mov
aam
mov
pusha
sbb
clc
lret
add
xor
dec
shl
jmp
dec
mov
jle
sahf
pop
movsb
loopne
lret
iret
clc
popf
inc
scas
or
ret
jecxz
mov
fmull
mov
or
ffree
cli
imul
jo
ret
sub
sub
cmp
mov
lea
lock
es
testl
xor
push
subl
dec
mov
pushf
lcall
add
test
mov
sbb
ret
lret
push
aam
sbb
aad
int
scas
cmc
cmpsb
cld
icebp
cmp
jnp
dec
mov
sbb
addb
adc
mov
sarl
movsl
stos
xlat
icebp
dec
push
sbb
sahf
inc
cmp
bound
jp
pop
inc
mov
sub
icebp
mov
cld
rol
into
inc
das
sub
lret
aam
hlt
mov
aad
sub
mov
sub
jge
and
or
add
fcompl
xchg
adc
orb
icebp
push
sbb
inc
jge
add
rcrb
inc
jge
hlt
mov
sbbl
jl
pop
insb
movl
addb
rol
stc
movsl
push
mov
cmc
push
mov
push
fstl
xchg
call
ds
inc
insb
sahf
push
movsl
jno
repz
push
bnd
movsl
das
pushf
sbb
movsl
xchg
stos
cmp
dec
rclb
or
hlt
cs
iret
mov
mov
mov
add
aad
adc
jb
sbb
cmp
mov
sahf
push
fmul
sbb
lahf
movsl
sub
or
movsl
ret
ja
pop
ficompl
adc
fldenv
dec
out
sbb
dec
lret
inc
mov
jmp
movsl
aad
jp
jle
xchg
jl
mov
rclb
inc
gs
movsl
outsl
pop
or
frstor
xor
xchg
loop
add
lds
lret
aam
mov
cwtl
cmpsb
sbb
adc
sub
in
xchg
xchg
outsl
inc
jo
push
in
iret
pusha
outsb
dec
test
mov
in
xor
inc
icebp
mov
sbb
jmp
movsl
push
jbe
mov
lret
sahf
movsb
mov
mov
incb
pop
lock
rcrl
xor
mov
call
mov
jecxz
rclb
jmp
or
scas
push
dec
adc
movsl
andb
lret
xor
mov
lods
inc
push
aas
pop
xchg
scas
aad
or
fwait
sub
adc
inc
add
shrl
ljmp
xchg
movsl
xor
enter
or
aad
jl
jl
movsl
fs
iret
pop
shll
add
popa
push
addr16
push
outsl
ja
sub
mov
ss
dec
jmp
in
push
jb
fsubl
pop
leave
sti
mov
sbb
mov
movsl
fucomi
out
adc
pushf
pop
movsl
jne
dec
dec
test
inc
movsl
add
mov
movsb
push
sti
int
in
mull
xorb
movsl
movsb
cltd
stos
jae
inc
inc
lods
movsl
mov
add
sub
insl
push
xchg
rcrb
out
jbe
shld
call
xchg
inc
jg
movsl
sbb
mov
push
mov
xor
xchg
and
js
sbb
and
cltd
sub
out
and
add
pop
push
sbb
int
add
addr16
lds
pop
cmpsl
in
mov
add
int
orb
loope
es
int3
scas
icebp
movsl
sbb
mov
and
daa
lea
movsl
fistps
jmp
sbb
and
xor
pop
insb
jbe
inc
pop
bound
lret
sbb
movsl
hlt
into
aas
notl
movsb
or
pop
pop
mov
sbb
inc
push
add
icebp
mov
sub
lcall
and
ret
xchg
loopne
jae
loopne
adc
sub
inc
mov
iret
addl
adc
fbld
inc
insl
xor
sbb
mov
lods
xor
in
mov
movsl
andl
repnz
in
sahf
mov
movl
pop
movsl
stc
iret
mov
push
cmpsb
mov
enter
inc
sti
test
mov
cmpsl
cmp
push
or
loope
repz
mov
sahf
pusha
dec
pop
popa
mov
jbe
cmp
jg
add
sbb
and
imul
jle
shr
movsl
test
mov
and
subb
inc
cmp
idiv
stc
fisubl
mov
arpl
cmpsl
add
dec
andb
jecxz
ret
push
push
popf
femms
push
aam
lret
dec
lods
pop
loope
and
xor
mov
pushf
sbb
idivl
in
adc
daa
jl
leave
mov
loope
sbb
clc
rorb
fbld
arpl
in
imul
push
popf
inc
movsl
outsb
dec
fnstsw
push
imul
xchg
xor
movsl
lea
rorb
mov
movsl
mov
popf
cmp
or
jmp
pop
shll
xchg
lds
xchg
ret
imul
loope
dec
ss
ret
cmpsl
movsl
lcall
lock
ja
imul
pop
into
pop
push
shrb
in
mov
and
stos
sbb
cmp
mull
outsb
adc
cs
mov
push
pop
rcrb
mov
shll
ret
mov
out
int
movsl
sbb
mov
cld
movsl
pop
sbbb
adc
movsl
outsb
add
insl
outsl
dec
movsl
testb
mov
dec
ret
mov
mov
int
cltd
cmpsl
mov
xlat
les
jae
jae
in
lret
add
movsl
in
xor
outsl
mov
mov
push
dec
xor
adc
scas
mov
mov
dec
aas
out
mov
lahf
sub
fnstcw
adcb
inc
das
jmp
push
mov
fnstsw
js
add
pop
mov
pop
test
xlat
in
pop
lds
sarl
or
cs
test
test
cmp
call
add
inc
jl
inc
cltd
movsl
xchg
test
or
insl
movsl
in
sbbb
movsl
push
push
pop
outsl
aam
movsl
cli
icebp
enter
popf
movsl
lds
popa
scas
cmp
fnstsw
mov
mov
xchg
shrl
icebp
jnp
sub
mov
sub
cmp
out
pop
loop
sub
pavgw
lods
or
popf
mov
scas
cmp
cmp
sbb
mov
stos
or
cmpsb
shlb
fbstp
cmp
jo
pushf
out
int
cld
sahf
enter
mov
jl
xchg
mov
sti
inc
fists
testl
loopne
jge
cmc
inc
fildl
lahf
fbstp
mov
movsl
push
mov
imul
test
mov
mov
cmp
xor
and
jecxz
int
and
imul
and
test
and
add
pop
in
ret
add
add
xchg
mov
sbb
je
aad
push
movsl
out
mov
xchg
dec
push
mov
sub
lea
lcall
or
scas
mov
sub
mov
inc
add
xchg
inc
outsl
movsl
dec
ret
adc
movsl
test
jge
push
int
movsl
leave
dec
cwtl
mov
xor
cltd
lds
and
aad
icebp
lahf
lds
sub
and
test
mov
fisubs
mov
mov
mov
pushl
mov
mov
sbb
cmpsl
pusha
imul
dec
jns
add
movsl
adcb
mov
sbb
inc
popa
mov
inc
ss
mov
jecxz
notl
xor
movsl
xor
push
sub
test
rolb
cmp
mov
push
cmp
inc
leave
nop
movsl
outsb
rol
mulb
dec
lock
out
sbb
adc
aad
jnp
pop
cli
push
arpl
and
mov
stos
push
push
inc
add
jle
fucomip
mov
sub
arpl
roll
stos
cmpsb
fnstenv
and
pop
sub
pop
in
gs
pop
push
adc
int
movsl
loopne
mov
stos
lods
inc
iret
movsl
inc
insb
pushw
test
test
jbe
sbb
dec
and
push
jl
decb
in
rorb
movsl
shll
dec
and
add
jmp
jg
ljmp
loope
mov
mov
and
nop
icebp
movsl
repnz
cmpsb
pop
test
or
inc
jo
movsl
mov
scas
lret
test
mov
loope
dec
pusha
pop
or
fisttpl
mov
pop
mov
or
cld
mov
dec
movsl
and
xor
xor
loope
inc
je
mov
test
pop
fsubs
pop
sbb
or
mov
xchg
movsl
push
dec
cmp
imul
xchg
in
sbb
push
pop
dec
adc
adc
push
mov
notl
or
stc
sbb
aam
mov
mov
sahf
test
mov
mov
lock
fsts
mov
divb
push
movsl
stc
aam
jbe
jo
and
mov
and
sti
imul
shll
stc
or
movsl
jne
mov
xchg
int3
imul
in
out
in
repnz
mov
jb
mov
test
jl
cli
movsl
bound
aaa
call
loop
repz
and
and
push
icebp
sub
lods
out
push
in
and
mov
add
xchg
xchg
and
scas
jne
and
stos
adc
adc
cmp
inc
dec
loope
neg
jns
daa
ret
out
mov
dec
ja
mov
shl
cltd
sub
mov
lods
cmp
pop
loopne
icebp
insl
jno
mov
sub
xorb
xchg
repnz
cmp
mov
push
fcoms
mov
mov
dec
inc
arpl
iret
xor
pop
jb
aaa
shll
sahf
das
stos
and
mov
lods
sbb
mov
pop
cmp
enter
movsl
dec
jnp
fmulp
jmp
sub
dec
outsl
out
xorb
test
or
jns
out
xlat
movsl
mov
test
rep
rcl
jmp
pop
jnp
in
fdivrl
sahf
xchg
daa
lcall
aam
gs
shlb
ja
sub
mov
movsl
scas
pop
dec
add
add
pop
xchg
stos
mov
test
dec
inc
fs
mov
idiv
fisubrs
in
out
movsl
aas
lods
cmp
sahf
mov
push
jae
imulb
in
add
sar
int
jl
movsl
imul
stos
mov
inc
lods
push
inc
add
sahf
inc
jno
jbe
jge
pop
jg
pop
into
jecxz
shll
fimuls
in
push
movsl
mov
mov
push
test
adcl
pop
dec
fst
pusha
scas
testl
in
or
mov
add
inc
cltd
hlt
movsl
push
push
subb
jp
movsl
cmpsb
push
pop
movsb
or
add
insb
movsl
outsl
insl
inc
ss
xchg
mov
jne
in
jle,pn
insb
stc
scas
adc
movsl
into
fiadds
push
pop
sub
mov
mov
nop
loopne
adc
and
cwtl
mov
pop
push
mov
push
jle
push
movsl
imul
cmp
scas
ret
movsl
sahf
xor
mov
clc
in
fsubl
sti
cmc
sahf
xor
lock
jae
sbb
mulb
scas
shlb
and
add
in
cmpsb
adc
or
pushf
xor
mov
movsl
nop
mov
jp
std
cmp
pusha
mov
aad
adc
push
imul
mov
das
jl
movsl
and
dec
int3
pop
push
mov
stos
shll
in
pop
pop
fsubl
cmp
les
lds
cmpsl
lods
mov
movsl
xchg
inc
mov
lock
pop
imul
daa
mov
popf
mov
cmpb
add
into
subb
xor
push
ljmp
inc
adc
adc
sub
sub
mov
lods
xchg
cmp
and
lahf
mov
or
mov
xchg
mov
add
int3
aaa
movsl
sahf
push
cltd
inc
cmp
nop
sub
cli
stc
in
movsl
mov
rorb
inc
ja
ret
adc
jg
cld
mov
scas
jns
adc
aad
push
shlb
movsl
or
or
dec
xchg
bound
arpl
shll
cli
cmpsb
cmp
hlt
inc
cmp
inc
mov
mov
pop
pop
out
in
lcall
movsl
cmp
daa
dec
shrd
movsl
pop
iret
mov
mov
or
pop
inc
js
pusha
jmp
adc
cmp
decb
mov
dec
aad
push
or
popf
ds
lds
sbb
shl
jecxz
push
sbb
movsl
pop
lea
cli
and
sbb
cmpsl
xchg
in
out
add
cs
pop
movsl
mov
fdivs
movsl
addr16
sbb
adc
xor
inc
jp
pop
jno
fldcw
push
cmp
add
mov
movsl
sub
imul
jg
lds
shr
movsl
jns
testl
xor
jg
lret
mov
mov
or
test
subl
add
cld
rcll
movsl
loopne
aad
pop
sbb
movsl
xor
dec
add
jle
in
pop
scas
push
mov
sbb
cmp
shll
mov
int
scas
xchg
jp
pop
push
out
insb
push
push
outsl
movsl
ret
adc
lock
add
lahf
std
movsl
xor
mov
cmp
inc
dec
loopne
aaa
test
clc
mov
mov
cmc
xchg
pop
mov
mov
mov
xor
call
or
in
sub
and
xchg
push
subb
aam
in
outsl
movsl
mov
ds
cmp
add
inc
enter
push
movsl
pop
sti
push
rcll
cmpsl
mov
or
cmp
push
test
movsl
mov
sbb
add
aas
or
filds
adc
pop
push
push
jge
dec
daa
cwtl
mov
popf
inc
es
mov
adc
inc
int
pop
sahf
and
aas
and
gs
adc
hlt
aad
ret
mov
in
mov
popf
movsl
cmpsb
adc
and
rcrb
pushf
sub
bnd
pop
nop
mov
stos
sbb
lcall
ret
xor
pop
xchg
ss
cmp
inc
inc
push
jge
mov
mov
xor
jae
shrl
in
sbb
pandn
mov
or
jmp
mov
leave
pushf
xor
in
adc
mov
ds
jl
in
sub
push
data16
test
add
movsl
gs
je
push
or
jge,pn
adcl
out
xchg
mov
push
mov
jmp
movsl
fs
jae
jne
add
push
push
mov
mov
mov
cmpsl
std
push
cmpsl
aas
scas
adc
lods
movsl
lcall
adc
aad
loopne
inc
xor
mov
out
in
add
jns
enter
inc
movsl
mov
or
movsl
push
inc
lret
lock
movsl
mov
orl
movsl
loopne
ss
sub
hlt
inc
movsl
insb
int
push
jle
shlb
pushf
ret
ljmp
jns
ret
mov
movsl
daa
cmc
mov
mov
mov
mov
cmp
fsts
mov
jmp
loopne
hlt
mov
sbb
mov
xchg
xchg
add
leave
mov
inc
cmp
daa
pop
popf
lret
testb
xchg
les
cs
lods
xor
cmpsl
out
cmp
cmc
jecxz
scas
xchg
dec
movsl
dec
jl
into
cli
rcrb
iret
movsl
pop
cmp
lods
movsl
inc
popa
fucomi
test
movsl
in
cli
mov
movsl
test
sbb
out
repz
jne
add
in
pop
fwait
rcr
jmp
movsl
repnz
dec
jb
fsubr
movsl
iret
stos
sbb
int3
add
lahf
pushf
and
in
lret
pop
das
sub
mov
aad
cmp
lock
pop
shlb
xchg
mov
adc
aad
add
mov
add
test
sub
or
or
inc
mov
adc
adc
loop
jnp
push
and
movsb
movsl
add
inc
test
rorb
cmp
in
gs
movsl
test
sti
or
push
cmp
gs
sbb
sub
popa
mov
in
and
or
fldenv
repnz
clc
sub
or
movsb
jge
call
test
aad
xlat
repnz
out
insb
sub
flds
mov
mov
mov
push
shll
mov
lcall
push
sti
or
xlat
inc
sub
jnp
or
jmp
xchg
bound
aaa
sub
mov
in
cmp
xchg
sar
add
sbb
push
sub
pop
mov
int
sub
mov
loopne
mov
arpl
mov
cmp
into
push
inc
je
pop
in
sub
dec
dec
imul
push
popa
cmc
sub
pop
pop
sbb
bswap
cmp
call
dec
sbb
xor
shl
and
inc
icebp
outsl
mov
nop
push
cmpsl
mulb
push
mov
and
fnstcw
jecxz
leave
add
pusha
ss
testl
push
das
aas
fwait
mov
jle
push
and
add
cmc
adc
mov
push
sahf
fistps
mov
ja
insl
pop
jl
mov
sar
aad
sub
sub
adc
aaa
sahf
mov
xor
mov
aaa
data16
and
imul
cmc
jno
adc
andl
sahf
popa
cmpsb
shrl
subb
jge
lods
mov
adc
or
lds
and
dec
cmpb
lods
mov
popf
dec
fnstsw
sarb
loop
or
sbb
punpckhdq
and
xorl
mov
sbb
xchg
test
sbb
dec
add
daa
mov
arpl
dec
cmpsb
popf
adc
pop
mov
pop
push
sbb
das
pop
mov
lahf
test
pop
popa
ja
sti
add
movsb
push
cmpsb
adc
pop
rorb
mov
sbb
mov
test
out
lods
int3
jg
xor
lcall
cmpsb
mov
sub
rorb
inc
xchg
popf
mov
in
lods
cld
adc
push
shrl
cwtl
or
sbb
adcl
push
scas
pusha
in
jmp
sub
mov
jns
jno
js
stos
cmovo
nop
xor
imul
ss
js
dec
push
cs
mov
sbb
sahf
push
add
jge
andl
mov
repnz
and
mov
pushl
mov
in
imul
movb
movsb
fnsave
jmp
fsubr
movsl
iret
leave
addr16
scas
mov
sahf
cmpsl
sbb
jb
and
stos
in
xchg
ret
sub
repnz
loop
mov
fwait
dec
push
jo
mov
xchg
mov
movsl
aam
imul
movsl
jo
dec
std
cld
dec
xchg
ljmp
pop
jp
mov
or
stc
mov
movsl
inc
int
fs
cld
lock
int3
cmc
pop
adc
mov
movsl
push
xchg
xor
push
das
outsb
sbb
stos
or
cli
scas
sub
dec
sbb
subl
daa
movsl
fadds
fbld
lock
outsb
push
movsl
shlb
insl
and
mov
aaa
xlat
jge
fwait
mov
mov
mov
add
frstpm(287
out
dec
push
fs
movsl
int
rcrb
and
andl
or
enter
push
inc
repnz
in
mov
push
movsb
push
movsl
pop
dec
addr16
pushf
inc
data16
in
repz
mov
lds
movsl
mov
js
in
pusha
mov
pop
loopne
push
ljmp
test
xchg
lcall
mov
mov
mov
add
inc
cltd
jmp
mov
xorb
bound
add
scas
cmovge
fbld
popa
scas
mov
jns
loope
lods
dec
push
and
cmp
pusha
stos
icebp
loopne
mov
imul
jle
movsl
cmc
and
aaa
repnz
jbe
jb
movsl
cld
lods
inc
daa
lret
lahf
movsl
push
push
xchg
cwtl
sbb
bound
cmc
stos
and
iret
xor
xor
out
in
add
mov
std
jl
aaa
frstor
dec
cwtl
sahf
aas
movsl
stc
call
sti
test
addr16
bound
dec
dec
lds
cmp
push
ret
andb
lods
xchg
or
out
push
sarl
mov
cmp
nop
and
lds
inc
ret
mov
shrb
cmc
movsl
lret
out
add
arpl
jle
xchg
mov
movsl
lret
repnz
nop
ljmp
mov
lahf
jp
test
cmp
sbb
movsl
cli
jns
repnz
aad
mov
sbbb
int
imul
cmp
fxam
inc
sahf
sub
cpuid
mov
push
aam
xor
inc
jle
rolb
leave
call
into
xchg
push
inc
out
cmp
xchg
lahf
les
lock
and
pop
movsl
ror
jle
push
jno
pusha
cld
aaa
aas
add
mov
xor
mov
push
mov
outsb
push
and
mov
fadd
notb
int3
stc
jne
pop
bound
lret
mov
and
jnp
adc
mov
push
call
ret
xchg
xor
call
push
rep
sub
jns
inc
push
and
xchg
int
dec
movsl
sahf
std
or
mov
mov
nop
add
and
xchg
xchg
cmp
xchg
out
out
ss
jo
lcall
inc
push
dec
push
jae
mov
imul
cmpsl
stos
push
dec
mulb
lret
movsl
ljmp
mov
test
bound
in
xchg
and
movsl
mov
jmp
pop
stos
leave
add
jmp
mov
aaa
pop
dec
mov
sahf
inc
xchg
mov
jb
mov
in
pushf
jmp
into
ret
js
test
flds
mov
movsw
rcll
sbb
xchg
clc
push
popf
lds
cmc
and
iret
insb
and
push
movsl
jns
enter
push
pop
movsl
pop
sbb
mov
cmp
iret
sbb
mov
cli
aad
sub
push
mov
js
mov
cmc
push
mov
and
or
mov
ss
adc
dec
mov
movsb
jp
mov
xchg
movsl
and
or
hlt
movsl
cltd
lock
rcrl
fs
cmp
movsl
cmpsb
xor
lret
jmp
aam
xchg
mov
notl
stos
jne
ror
jg
cld
mov
dec
dec
cli
push
dec
repz
lea
in
cs
push
or
pop
inc
scas
adc
mov
fbstp
mov
movsb
or
ja
jl
xchg
or
push
xchg
movsl
mov
mov
repnz
fs
push
out
cli
dec
sahf
inc
inc
cmc
ljmp
mov
out
inc
mov
mov
sbb
pop
pop
inc
push
popa
pop
movsl
cmp
pop
mov
daa
bound
adc
pop
out
mov
push
jge
and
or
pop
in
cmp
scas
aaa
mov
or
ljmp
mov
dec
and
stc
push
or
in
outsb
test
mov
pop
stos
into
movsl
jmp
fldl
lds
and
pop
xor
movsl
push
cmpsb
mov
insl
movsl
dec
arpl
inc
pop
adc
or
mov
cltd
or
imull
lea
mov
sub
xlat
movsl
adc
lods
cltd
fdivrp
jo
lret
add
pop
rcrl
mov
in
cltd
add
repnz
push
gs
lahf
mov
xchg
out
insb
xchg
cmpsl
mov
inc
push
iret
sbb
mov
cmp
sar
xor
test
inc
call
pop
mov
sbb
aad
jns
xchg
mov
jg
mov
popf
mov
cmpps
inc
push
cmc
out
jae
push
dec
add
mov
aad
mov
sbb
out
fnstsw
jb
mov
mov
aam
repz
pop
jmp
mov
xor
cwtl
movsl
inc
imul
leave
test
dec
movsl
xchg
push
dec
lods
sti
push
and
or
xor
pop
movsl
fwait
xchg
fildl
lds
mov
sbb
fdivs
outsl
movsl
fs
mov
mov
mov
xor
ss
insl
inc
scas
cs
sub
dec
pop
movsl
sbb
int3
push
sbb
stos
lahf
aam
divl
cmp
pop
adc
xchg
or
nop
hlt
rep
les
lcall
notb
test
mov
sbb
lods
push
dec
cmc
ja
aaa
sbb
repnz
xchg
clc
push
sbb
stos
and
jecxz
pop
mov
movsl
add
jg
xchg
sbb
mov
push
push
fs
mov
shlb
gs
cli
mov
movsl
mov
outsb
in
loope
mov
in
call
lds
in
fistps
icebp
int3
jbe
push
mov
movsl
jp
imul
mov
das
movsl
xchg
sub
lret
shlb
out
loopne
and
sahf
inc
arpl
cmp
adc
movsl
mov
stc
sub
movsl
sub
nop
fs
lods
sub
cmp
add
movsl
ds
and
and
lea
adcb
xor
pop
mov
arpl
xor
cmp
aaa
lds
in
and
or
push
push
inc
pushf
movsl
push
jnp
sahf
jo
testb
std
sub
push
sub
cmc
sub
int
mov
call
ljmp
shll
inc
std
mov
jge
sarl
out
out
jl
movsl
fbstp
imul
pop
outsb
mov
daa
sahf
sub
mov
test
enter
and
stos
imul
dec
lds
or
test
cmp
push
pop
adcb
sahf
cmp
xchg
outsb
mov
jb
push
icebp
mov
movsl
cs
aad
cmpsb
movsl
push
dec
xor
jae
bswap
aaa
adc
movsl
cld
sarb
push
movsl
in
fistps
adc
pop
jg
je
lea
ds
pop
enter
sbb
popa
push
mov
test
push
es
xchg
xlat
stos
movb
movsb
pushf
cwtl
mov
cmp
cmpsl
out
lock
mov
push
mov
and
mov
mov
mov
std
ret
outsb
imul
movsl
inc
cmc
out
fdivp
or
roll
popa
movsl
and
sbb
movsl
adc
pop
hlt
movsl
repnz
add
loopne
int3
dec
or
shufps
mov
mov
cmp
movsl
sub
or
arpl
mov
ret
pop
dec
mov
add
scas
lea
pop
sbb
add
movsb
out
movsl
jb
cmp
mov
inc
mov
push
pop
ret
aad
movsl
and
mov
push
push
imul
pop
jno
jge
out
in
decl
inc
sbb
fnstenv
add
mov
in
jb
fwait
dec
adc
imul
frstor
in
movsl
xor
xlat
inc
push
push
movsb
pushf
mov
imul
sub
daa
sbb
pop
cmpsl
shll
pop
rcrb
sti
enter
and
insl
sahf
mov
xchg
cld
iret
lds
ret
jle
pushf
cmp
xchg
test
popa
loop
mov
dec
loopne
dec
out
xchg
call
movsl
lock
ret
lea
movsl
popf
js
es
dec
jge
movsb
cmpsb
movsl
mov
mov
enter
pop
mov
dec
lret
out
mov
sbb
and
ljmp
and
add
into
jl
les
in
fistpl
xor
sbb
lret
inc
dec
pushf
loopnew
pop
aaa
in
nop
das
add
sbb
jmp
ret
mov
fabs
je
adc
aad
outsb
ljmp
scas
loopne
cmpsb
stc
loopne
xchg
leave
aaa
sub
push
add
icebp
inc
sbb
mov
sbb
je
es
scas
lea
mov
mov
leave
test
sti
scas
fdiv
sub
push
pop
arpl
pop
lret
mov
pop
frstor
mov
adcb
lea
cmc
xor
mov
add
add
dec
pop
outsl
sub
outsb
rcr
cld
lods
mov
and
jg
lods
or
add
lods
sbb
leave
cmp
push
sub
pop
in
push
fwait
loopne
pop
or
mov
mov
clc
or
stc
movsl
popf
popa
stos
jecxz
out
xchg
mov
xor
es
pop
dec
subl
xlat
push
sub
push
mov
push
int
cmc
xor
fistpll
push
push
sub
inc
movsb
cmpsb
pop
repz
ret
jl
adc
push
cld
or
and
add
sub
cmp
outsb
addr16
data16
sti
in
popa
sub
int3
sbb
arpl
std
dec
addb
std
sub
jnp
pop
push
cmpsl
pop
pop
sbb
test
je
out
pop
adc
int
aam
mov
mov
ljmp
push
imul
mov
std
adc
sub
aas
mov
les
sub
mov
out
es
push
mov
fcoms
sbb
xlat
inc
cmpsb
sbb
xor
push
call
jl
addb
sbb
icebp
divl
push
xlat
jnp
and
idiv
cmp
or
jecxz
iret
pop
sbb
fcoml
dec
sub
jns
icebp
xchg
pusha
jl
test
out
imul
jmp
mov
int3
adc
subl
fimuls
mov
rcrb
je
std
jns
xchg
mov
fucomp
jecxz
movsl
outsb
pop
mov
jnp
movsl
xlat
mov
inc
xchg
mov
ss
daa
sbb
and
pop
movsl
jne
inc
ss
jae
adcl
movsl
mov
push
stc
cmp
xchg
dec
in
fisttpl
sub
ret
movsl
pop
mov
clc
shll
mov
adc
push
movsl
enter
jns
aaa
adc
mov
int
test
dec
movsl
in
repz
arpl
sbb
movsl
adc
mov
push
add
xchg
loopne
sbb
call
mov
push
or
das
dec
vmovupd
movsl
push
std
add
loopne
insl
push
add
movsl
pop
in
xchg
cwtl
pop
imul
testl
xlat
jmp
movsl
fidivl
inc
scas
pop
push
ret
ljmp
dec
adc
ljmp
mov
lea
popf
movsl
iret
and
cwtl
pop
push
fwait
jg
mov
ja
clc
frstor
rcll
movsl
and
lahf
cltd
sub
scas
xor
push
pop
fdivr
mov
std
inc
int
push
movsl
xchg
push
rol
jnp
sbb
push
into
push
out
inc
pop
dec
mov
movsl
jp
call
popa
lock
jmp
push
movsl
and
xchg
bound
cmpsl
jle
sbbb
pop
aam
imul
lret
addl
mov
mov
mov
inc
inc
dec
movsl
jle
je
pop
xchg
movsl
adc
mov
sub
movsl
adc
jae
cmpsl
fcompl
aaa
xchg
mov
xchg
adc
xchg
movsl
dec
add
movsl
sbb
mov
daa
lods
fbld
pop
push
pop
lea
rcll
jbe
jne
xor
push
data16
add
lret
xchg
mov
xor
imul
repz
popf
mov
movsl
dec
mov
in
push
add
in
movsl
cmp
repz
or
shlb
add
das
pop
mov
inc
test
add
iret
loope
sahf
push
push
sarl
imul
sbb
jecxz
cmpsb
jns
movsl
xchg
push
push
jp
rorb
pusha
fmul
and
mov
sbb
dec
movsl
cmp
push
or
mov
outsl
push
dec
sar
jns
std
loopne
cld
iret
cmovl
jle
shll
push
movsl
es
and
sbb
xor
adc
xchg
push
dec
scas
das
push
xchg
lock
sarb
popa
xchg
fdivr
addb
cmc
xchg
xchg
jne
mov
xor
scas
mov
mov
inc
mov
shll
into
mov
fbld
test
std
jp
xchg
mov
sti
sub
push
test
stos
or
sub
jmp
or
pop
dec
es
ret
jae
bound
inc
lea
pusha
sub
mov
mov
cmp
test
loope
movsb
adc
pop
mov
mov
sbb
movsl
cmpsl
xor
inc
push
push
fsubl
int
add
sub
jecxz
sbb
mov
stos
sbb
shl
add
fs
dec
mov
rcr
test
xchg
pop
outsl
xchg
movsl
jle
push
addb
fsubp
js
jno
roll
or
push
lahf
ss
mov
imulb
sub
icebp
mov
out
outsl
fbld
aas
and
cmp
ror
int3
call
cmp
stc
ljmp
and
addr16
add
adc
insb
add
or
inc
inc
push
movsl
aam
sub
scas
jbe
movsl
xlat
pop
cmp
stos
mov
lods
dec
sahf
xchg
push
pop
mov
add
mov
add
ljmp
mov
mov
xchg
outsl
shll
cmpsb
popa
push
xor
in
cmp
xchg
cwtl
xor
in
push
xchg
movsl
jecxz
lods
call
movsl
fsubrs
mov
lret
mov
xchg
movsl
push
rolb
add
mov
test
and
insb
in
jb
movsl
cld
insl
loop
jmp
sbb
mov
mov
push
in
push
push
lods
cmpsl
and
popf
ljmp
lret
aam
xchg
cmp
or
inc
sub
xchg
lods
or
mov
movsl
pop
in
inc
mov
pop
into
fstpt
movsl
call
repnz
movsl
mov
add
and
ret
shll
insb
cmc
imul
mov
movsl
mov
fwait
popf
mov
or
push
adc
movsl
add
xor
inc
cmp
es
test
lcall
add
inc
pop
mov
sub
mov
sarb
pop
sbb
adc
mov
dec
stos
test
push
aad
or
lods
mov
lods
clc
dec
cmp
mov
sbb
movsl
cmp
lock
or
out
pop
jmp
cmc
inc
std
mov
cmp
ljmp
out
fxam
mov
repnz
frstor
mov
fmulp
and
sbb
movsl
jo
jl
xor
aas
inc
movsl
xchg
inc
sahf
push
mov
mulb
dec
xchg
gs
mov
pop
loopne
inc
add
mov
xchg
scas
lret
stos
ja
sbbb
jg
popf
add
ret
cmc
call
mov
nop
xchg
pcmpeqw
movsl
dec
je
mov
sbb
mov
mov
sub
fstps
test
int
mov
insl
outsb
aad
jb
xlat
sbb
adc
push
test
sub
lea
aaa
inc
push
shll
movsl
rolb
add
fdivr
mov
lret
lea
jno
test
jne
mov
inc
addr16
aaa
lcall
popf
jbe
mov
rorb
mov
andl
mov
call
bound
mov
test
in
or
mov
aaa
sub
out
adc
in
pop
cli
and
sub
mov
ficoml
mov
mov
sbb
fnstenv
dec
push
fs
xchg
xlat
lcall
sub
aas
loop
cmp
jg
lods
andl
fisttpll
pop
imul
rolb
lret
movsl
js
mov
inc
mov
lods
push
std
xchg
cltd
xchg
and
mov
insl
movsl
lods
sbb
lods
orl
mov
andb
js
in
sub
mov
bnd
mov
fwait
mov
out
in
dec
clc
aaa
xchg
push
add
in
out
movsl
dec
negl
or
dec
movsl
cs
loop
insl
cmp
ret
jg
push
out
lods
bound
lcall
aad
jmp
mov
push
movsl
mov
lock
sbb
cmp
inc
in
es
les
out
and
inc
in
fisubl
incb
shl
lret
bound
mov
mov
outsb
push
and
lods
jno
adc
in
icebp
aad
call
add
push
lds
dec
fcompl
outsl
movsl
mov
jno
or
fnstenv
movsl
xchg
and
stc
cmp
call
leave
and
mov
mov
lods
cmpsb
in
cmpsb
fs
inc
mov
cmp
hlt
xchg
mov
mov
lret
mov
mov
sub
xchg
pop
jno
popa
jmp
and
mov
scas
je
pop
mov
and
sub
cwtl
dec
jb
push
inc
jl
push
inc
test
stos
xchg
mov
in
jns
ss
jle
and
cmp
push
pop
lcall
lock
pop
jne
pop
icebp
jmp
xor
xchg
mov
inc
sub
dec
dec
in
jmp
sahf
les
int
xor
nop
push
jbe
cmp
test
popf
popf
xchg
jbe
cmp
in
xor
hlt
add
stc
sub
rclb
or
add
xchg
in
orb
dec
in
cmc
inc
out
sub
fidivrs
push
inc
outsb
out
std
icebp
mov
pop
movsl
sahf
repz
mov
xchg
xor
adc
cli
pop
cmc
xlat
lret
sbb
lahf
scas
sub
das
cmc
add
out
sub
sbb
int
push
xor
dec
addb
or
mull
lahf
or
mov
clc
push
or
adc
jbe
inc
xlat
in
inc
outsb
xchg
or
push
jae
movsl
int
test
cmp
addr16
insb
dec
rcrl
shr
push
scas
xchg
in
pop
movsb
xor
or
xor
stos
cmp
rcr
inc
lds
inc
inc
int
ret
popf
fldz
movsl
jne
sbb
ljmp
inc
xchg
cmpsb
adc
mov
scas
shlb
mov
gs
aaa
push
inc
sahf
pop
frstor
in
pop
mov
mov
rcl
movsl
iret
jmp
xor
sub
mov
add
pop
scas
sbb
dec
xchg
dec
pop
arpl
xchg
mov
sbb
out
push
xor
fdivrl
cmpsb
shll
mulw
sbb
mov
in
repnz
stc
aaa
loope
mov
sbb
or
mov
inc
xchg
pop
pop
notl
mov
sub
push
add
scas
popf
stos
sbb
movsl
lret
bound
dec
adc
jnp
pop
pop
gs
pop
rcr
movsl
pop
inc
xchg
sub
sar
test
cmpsb
movsl
loop
lahf
ja
in
xchg
movsl
jne
outsl
inc
xor
mov
movsl
xchg
lcall
pushf
mov
test
pop
jb
je
xchg
icebp
filds
mov
or
mov
popf
jmp
into
xchg
movsl
jnp
push
xchg
push
pushf
jle
mov
jmp
movsl
lock
push
mov
int3
movsl
xorl
sbb
movsl
mov
jae
in
dec
movsl
add
jge
sahf
push
adc
test
in
xchg
pop
and
push
outsb
jo
jg
imul
sbb
iret
jae
sub
inc
movsl
sub
sti
adc
stc
and
xchg
out
popa
in
stos
adc
xlat
clc
movsl
int3
mov
addl
mov
movsl
sub
incb
out
xchg
pop
andl
inc
sahf
fcmovb
jmp
movsl
cmova
lcall
sbb
sbb
xor
loop
stos
xor
mov
push
mov
ljmp
fs
ja
sbb
movsl
push
adcl
inc
cmp
pushf
lds
testl
imul
inc
fsubl
es
movsl
adc
xchg
fldenv
mov
xor
lret
es
xchg
addr16
fcoml
lods
or
pop
jle
mov
sbb
movsb
movsl
test
cltd
fwait
mov
ss
dec
outsl
pop
ret
sbb
fwait
movsl
xor
add
mov
lock
cltd
sahf
and
int3
repnz
movsl
cwtl
sub
test
lea
mov
push
cmp
in
stos
cmp
out
addr16
xchg
stc
daa
sbbl
pusha
pcmpgtb
movsl
xchg
mov
xor
mov
sbb
ljmp
lret
and
dec
stc
adc
test
mov
push
rorl
mov
pop
outsb
and
shlb
ret
jge
data16
orl
movsl
fisubs
push
push
ficoml
push
mov
dec
dec
ret
enter
movsb
inc
movsl
pop
aaa
cwtl
jge
iret
jno
test
fisubl
fucom
xor
pushf
movsl
mov
push
and
iret
cmp
outsb
loope
in
push
in
pop
mov
movsl
inc
xor
push
or
jae
xor
inc
fwait
shll
push
push
movsl
ret
imul
movsl
push
sarb
adc
xchg
pop
mov
ficompl
stos
xchg
jge
movsl
je
ljmp
pop
mov
xor
movsl
push
aam
int
sub
xchg
sub
inc
repz
mov
mov
in
mov
movsl
and
mov
les
fildl
testb
jne
insl
mov
mov
in
push
outsl
mov
fisubl
push
inc
mov
inc
shr
and
xchg
adc
js
addl
mov
jg
xor
jb
movsl
fcomip
pop
imul
movsl
adc
int
loop
jg
out
xlat
in
dec
movsl
push
jge
mov
xchg
cmp
xchg
popa
in
fstl
or
movsl
test
ja
jno
lcall
dec
xchg
add
repz
jl
outsl
fidivs
jns
test
fucomi
or
shl
add
sbb
movsl
aad
das
xchg
stos
mov
movsl
daa
mov
jnp
dec
xlat
scas
test
lods
aad
mov
xchg
test
dec
mov
rcrl
addr16
test
mov
movsl
push
pusha
cmc
into
sar
jecxz
movsl
in
fstps
mov
mov
mov
or
sbb
sub
cmp
movsb
cmp
sbb
popa
lods
movsl
dec
add
add
push
xchg
in
or
cmp
mov
lods
fwait
and
pop
cld
aam
out
in
lods
out
mov
xchg
les
push
std
push
imull
lahf
into
fldz
mov
movsl
mov
add
movsl
xchg
mov
jle
push
in
out
adc
pop
cmc
push
shrl
adc
adc
test
lods
pop
sbb
sbbl
lock
data16
leave
and
push
jp
mov
test
push
push
add
inc
pop
mov
mov
leave
xchg
bswap
std
daa
mov
cs
fstl
in
cmp
jb
mov
push
push
xchg
jecxz
ss
movsl
fucom
sub
ror
xchg
into
cmpsb
addb
pop
in
popa
fnsetpm(287
fnstcw
out
ret
cmp
mov
lret
aad
or
mov
jecxz
pop
jp
je
imul
lods
mov
mov
jbe
les
mov
sbb
mov
sub
pop
pop
pushf
aam
jae
cmpsl
push
mov
movsl
fisttps
pop
jne
cmp
xchg
adc
sub
adc
lds
xor
dec
sbbb
jp
mov
dec
scas
add
test
movsl
hlt
xchg
or
pop
lcall
mov
adc
popf
mov
inc
mov
push
addr16
stos
cmpl
fidivrl
xchg
push
push
negb
xchg
mov
add
rorl
enter
cmpsb
lret
and
push
lds
inc
ljmp
dec
xor
or
int
ret
xchg
push
sahf
sarl
push
jg
push
mov
jmp
loope
in
adc
xchg
out
lds
gs
lahf
pop
cmpsl
dec
popa
int3
push
cmp
fucom
es
movsl
pop
gs
mov
inc
mov
jecxz
mov
movsw
pop
mov
aas
mov
pop
movsl
out
mov
cmpsb
movsl
inc
ljmp
xchg
mov
scas
and
test
pusha
pusha
cmp
adc
mov
inc
movsl
sub
adc
cwtl
aam
mov
mov
mov
pop
push
jns
lods
movsl
cltd
push
negb
repz
xchg
cmp
inc
movsl
or
movsl
in
aaa
hlt
lcall
in
rcl
ljmp
push
mov
push
repz
popf
or
inc
popa
fisttpl
movsl
cwtl
inc
pop
mov
pop
or
or
sub
ffreep
iret
pushf
divl
int3
std
aam
cs
hlt
adc
shl
stc
inc
test
xor
push
dec
and
inc
pop
cmp
xor
sbb
ljmp
dec
lds
in
mov
fs
clc
mov
pushf
psubq
mov
stc
mov
neg
push
iret
jmp
add
movsl
call
fldcw
add
mov
sarl
iret
in
push
mov
and
popf
xchg
test
imul
nop
adc
pop
movsl
shl
loop
repz
jno
jmp
xchg
jae
cmpb
or
movsl
jecxz
stos
sub
sbb
xchg
loope
cs
movsl
loopne
pusha
dec
cmpsl
syscall
mov
cmp
movsb
leave
int3
mov
popl
out
movsl
test
cmp
call
insb
dec
sahf
inc
mov
fiadds
sbb
rcrb
mov
push
in
add
mov
orb
imul
adc
addr16
lea
inc
sbb
fldenv
jo
and
test
xchg
mull
and
sub
pop
push
sub
sub
jp
and
cli
cwtl
insb
int
push
pushf
js
and
jp
push
push
push
cmp
call
or
add
cmc
jns
xor
mov
lea
popa
jnp
jno
loop
cmc
xlat
loope
and
pop
in
cwtl
sbb
insl
icebp
mov
aas
test
popa
cmc
sub
testb
or
mov
lret
pusha
pop
in
and
lahf
push
lret
cmc
std
pop
inc
adc
sti
mov
jg
in
sub
movsl
jmp
or
xor
lds
dec
repnz
push
aad
cli
scas
sbb
push
aad
stc
icebp
lock
push
sub
leave
mov
mov
adc
ja
inc
cmp
dec
call
xchg
test
mov
cltd
adc
cmp
xlat
ficompl
pop
pop
sub
jne
mov
das
push
mov
sub
mov
xchg
out
xlat
cmc
pop
dec
mov
pop
out
lret
dec
and
or
mov
xlat
add
cmc
mov
push
movsl
mov
cmc
mov
outsl
inc
imul
popf
call
scas
xchg
and
push
jle
popa
ret
sub
dec
xor
adc
pop
cld
fadd
lcall
imul
mov
and
dec
in
xlat
sub
sbb
daa
movsl
push
outsl
inc
sub
movsl
cli
pop
lock
repz
mov
inc
lcall
inc
xor
cli
leave
movsl
xchg
sub
or
mov
or
adc
and
in
out
or
lret
add
mov
mov
inc
hlt
int
subb
mov
mov
shll
movsl
and
out
lret
stc
popa
jl
or
lcall
dec
pop
add
lods
mov
loopne
flds
jne
les
lods
xchg
inc
je
in
movsl
loope
pushf
sbb
adc
xchg
aas
in
xchg
sbb
movsl
fldt
outsb
and
pop
andb
push
dec
popf
fwait
stos
mov
shlb
mov
jmp
icebp
movsl
mov
scas
jb
xchg
mov
pinsrw
mov
add
aaa
test
xor
inc
xchg
je
lock
mov
ret
mov
rolb
push
mov
xchg
imul
aad
in
xchg
call
daa
mov
in
stos
xor
aad
mov
sub
xchg
movsl
pop
mov
cltd
mov
cmp
push
loopne
mov
lret
mov
adc
fs
jo
cmpsb
call
sbb
pop
xchg
lock
lcall
movsl
jecxz
cmp
hlt
pop
gs
lods
and
adc
jae
aad
jmp
pusha
shld
divb
stc
pop
mov
add
ljmp
inc
mov
stos
sbb
push
or
movsl
std
jo
mov
movsl
flds
inc
mulb
xchg
or
adc
lea
movsl
mov
adc
movsl
mov
aad
sbb
mov
mov
push
movsb
sub
dec
cmc
jge
stos
or
andb
in
into
mov
or
add
popf
xchg
xor
inc
mov
lock
mov
into
enter
popf
in
jbe
jne
out
bound
cmp
jno
pop
lock
lret
xchg
stos
mov
dec
push
jb
pop
jge
lret
push
ret
adc
mov
push
jne
mov
outsb
jmp
xchg
ret
popf
xchg
mov
lea
test
in
fucomi
or
dec
jo
cmpsb
inc
adc
xchg
fs
sbb
ret
movsl
stc
cld
sub
xlat
mov
das
mov
popf
mov
and
pop
sahf
cmc
out
mov
push
sbb
bound
imul
mov
nop
sub
outsl
stos
leave
xchg
out
mov
or
jae
cltd
sub
lds
imul
jecxz
jno
xchg
mov
inc
push
mov
jnp
orb
xchg
stos
mov
pop
jp
popf
sub
movsl
sub
add
sahf
xchg
imul
push
rcl
add
mov
and
add
dec
cmc
inc
cmc
xor
push
ljmp
lods
fisubl
hlt
int3
movsl
arpl
rcrb
ret
out
push
xor
dec
imul
jl
pop
pop
movsl
cli
or
cwtl
jl
movsl
scas
inc
xor
xor
in
popa
lret
or
movsl
dec
jne
mov
mov
fldl
or
mov
cltd
int3
cmc
sarb
clc
call
jecxz
inc
xlat
sar
imul
fidivs
shrd
mov
inc
or
cmp
imul
loope
mov
sahf
lds
push
movsl
cmc
sub
sarb
stos
inc
jb
icebp
pop
mov
cmc
mov
xchg
cmp
fidivl
cmp
sbb
mov
into
and
rorl
gs
lret
or
cmp
mov
jb
xchg
sub
and
hlt
aam
mov
movsl
in
repz
dec
data16
pop
shr
xor
or
mov
shl
scas
movsl
jno
or
or
cmp
movsl
pushf
inc
cmpsb
and
mov
movsl
popf
repz
push
push
jnp
movsl
cmp
out
push
iret
sbb
jbe
dec
mov
shl
push
xchg
jns
hlt
mov
adc
xor
shrl
xor
adc
pop
movsl
mov
sbb
pop
add
and
stc
push
es
test
push
jno
pop
movsl
lret
jmp
sbb
dec
xor
lods
cli
fldl
negb
in
pop
mov
xor
inc
or
mov
stc
sbb
lds
mov
jbe
inc
test
movsb
mov
enter
aad
sahf
test
popa
out
movsl
cmpsb
arpl
add
sub
movsl
dec
insl
mov
inc
fs
movsl
fwait
dec
inc
jl
push
push
mov
imul
sbbb
pop
cmp
jno
jo
pushf
out
ljmp
push
or
loop
mov
or
and
icebp
repz
movsl
lahf
xchg
xor
pop
je
mov
mov
mov
leave
cmpsl
and
pusha
pop
inc
push
adc
xlat
lcall
jge
inc
movsl
jnp
mov
push
stos
sbb
cltd
test
cmp
xorl
xchg
sbb
mov
push
lcall
shll
adc
and
inc
sub
sbb
push
cmp
cmp
ss
mov
dec
andb
outsb
jecxz
fnstcw
xchg
sbb
js
movsl
sbb
mov
bound
or
cmp
inc
stos
hlt
aas
rolb
movsl
xchg
mov
mov
adc
adc
lds
mov
lahf
clc
loope
test
daa
cs
add
mov
mov
or
movsl
or
sbb
jg
cmp
movsl
fucomi
mov
and
movsb
mov
adc
or
pushf
dec
daa
es
and
push
scas
xchg
pop
movsl
stos
sbbl
mov
mov
cmp
inc
xchg
adc
mov
sub
rolb
push
mov
mov
jnp
fucom
into
bound
mov
cmc
push
mov
sub
es
movsl
sbb
inc
imul
sti
lods
xorb
jg
xchg
pushf
imul
popa
ljmp
xor
mov
xlat
notb
and
fcoms
cmp
adc
mov
push
movsl
scas
and
inc
xor
and
imul
adc
adc
or
mov
shl
ficompl
mov
sahf
fdivp
or
lds
mull
iret
hlt
and
scas
mov
sub
leave
sti
cmp
movsl
into
out
push
out
sub
inc
sahf
xorb
pop
les
pop
inc
sub
and
test
out
movsl
xchg
cmpsb
xor
bound
mov
jbe
test
movsl
daa
mov
rcrl
push
popf
cmp
push
je
pop
out
mov
mov
stos
mov
popa
lods
std
outsl
movsl
ret
push
aaa
scas
jbe
repnz
sub
xchg
clc
xor
popf
dec
gs
xchg
movsl
dec
xor
xchg
movsl
inc
test
inc
popa
fstl
icebp
jg
mov
mov
cmpsl
lock
cwtl
push
mov
lahf
leave
andb
leave
sub
ja
adc
sub
clc
inc
shll
faddl
jns
stos
mov
cli
call
cmpsl
sbb
jbe
pop
cmc
xor
mov
jp
sahf
in
dec
loope
xchg
loopne
cmp
jo
sti
sahf
pop
ret
lret
lret
leave
inc
dec
push
and
xorb
call
outsl
fdivl
movsl
shlb
or
ret
int
out
cmc
das
inc
xchg
pushf
test
dec
pop
adc
movsl
jno
inc
sub
lock
push
add
frstor
out
pop
jns
movsl
pop
data16
pop
cmp
push
sti
xchg
xor
movsl
out
jp
cmp
movsl
push
sbb
jmp
adc
jp
insl
fdivr
push
in
movsl
pop
sbb
push
aas
movsl
cmp
add
movsl
jg
stos
jle
test
fdivs
stos
pusha
inc
leave
adc
cmp
in
pop
iret
andb
es
loope
jne
scas
repz
lcall
cmpsb
xchg
fnsave
movsl
ljmp
cmp
cli
add
rcll
xchg
or
scas
orl
or
cmpsl
movsl
dec
push
fsubr
movsl
repz
jo
xor
mov
inc
int
jle
dec
movsl
mov
mov
mov
int
cwtl
mov
sub
add
or
pushf
inc
xchg
cmpsl
daa
sar
xchg
adc
xlat
pusha
push
movsl
add
xchg
cmpsb
dec
sub
ret
repz
aad
imul
stos
jmp
pop
orl
clc
iret
push
movsl
sub
movsb
movsl
jo
sti
jmp
sahf
dec
popa
inc
repz
iret
pop
jge
xor
mov
xchg
fcomip
push
icebp
inc
movsl
inc
dec
lahf
nop
sarl
cmp
orl
or
mov
pop
arpl
cwtl
jmp
pop
adcl
test
lahf
movsl
fstpl
adc
and
pop
mov
mov
jne
inc
sbb
xchg
dec
cmpsb
mov
pop
cmp
stos
pop
push
lds
xchg
adc
xor
and
neg
iret
or
in
test
push
inc
rcrb
sub
movsl
scas
push
mov
mov
into
adc
cmc
inc
shr
sbb
push
adc
push
shlb
push
mov
sub
push
fidivs
addb
inc
pushf
jl
dec
ds
add
lea
push
in
stc
pop
ret
stos
lods
movsl
xor
pop
es
pop
xchg
fildll
lds
jge
divl
je
mov
jb
push
cmpl
xchg
adc
movsl
fadd
jp
mov
jns
xchg
xchg
xchg
movsb
movsl
popl
icebp
add
ja
xor
dec
jno
fisubrl
xor
dec
or
add
decb
jnp
movsl
popf
xchg
mov
xor
movsl
ds
sti
rolb
inc
movsl
and
in
mov
aas
push
xchg
xor
ljmp
aaa
mov
call
add
and
into
cmpsb
lods
adc
jl
mov
ds
insb
js
sahf
cld
and
xor
jecxz
jno
std
in
pop
clc
rep
rclb
sahf
icebp
test
shlb
movsl
push
gs
ss
les
add
mov
pop
repz
mov
into
jmp
pop
lahf
mov
andb
push
xchg
sti
stc
movsl
addr16
push
mov
ss
jb
rcrl
es
jno
imul
bound
mov
insb
popa
fnstcw
cmp
pop
bound
push
cwtl
das
push
aaa
mov
lods
mov
int
mov
xor
fstl
pushf
jb
incb
mov
sub
gs
dec
or
sub
cli
xchg
hlt
or
mov
push
out
or
outsb
push
xchg
inc
stc
repnz
jl
out
sbb
sub
pop
bound
std
insl
scas
push
cld
iret
stc
popa
or
fiaddl
mov
adc
adc
push
sbb
stos
addr16
pop
jnp
and
sbb
inc
loope
sbb
cmc
ds
sub
cld
and
repz
push
and
into
sti
jp
aad
xlat
imul
shll
andb
test
js
pusha
dec
pop
sti
insb
mov
sub
inc
inc
xchg
mov
lods
sbb
and
mov
mov
and
aam
adc
inc
xchg
mov
outsl
enter
push
movsl
mov
lret
xor
stos
mov
push
mov
fnstsw
cmp
shlb
adc
xchg
insl
fidivl
icebp
lds
rol
lods
addb
pop
mov
movsb
sbb
or
dec
dec
out
and
outsl
out
scas
jg
sarl
pop
fnstsw
mov
and
loopne
ja
or
pop
sbb
push
jbe
cmp
push
pushf
push
push
loope
xor
mov
movsb
into
imul
jns
bswap
test
mov
inc
and
aas
sbb
addr16
pop
in
sub
add
or
add
dec
xchg
pushf
sub
lea
mov
xor
fstpt
inc
mov
push
aam
stc
leave
push
xchg
and
ret
mov
scas
xchg
dec
stos
aad
popf
negb
mov
xchg
movsl
iret
dec
xlat
icebp
stc
push
pop
sbb
pop
subl
jge
lcall
shl
push
pop
inc
mov
loope
enter
cmp
jge
lock
ja
lock
repnz
hlt
sbb
adc
or
sbb
mov
lret
movsb
or
mov
fnstcw
sub
ficoml
mov
xlat
ja
pop
mov
dec
mov
ja
stos
popf
das
add
xor
and
imul
test
test
repz
mov
cmpsl
dec
pop
iret
cltd
pop
sub
movsb
xor
divb
jmp
add
in
xchg
aaa
and
loopne
inc
repz
mov
fwait
nopl
dec
mov
sbb
xchg
jbe
lahf
bound
sarl
popf
pop
dec
push
mov
pop
icebp
mov
and
rclb
cmpsl
pushf
sbb
sbb
mov
fcmovne
jge
mov
inc
add
push
imul
or
test
push
repz
pop
mov
fwait
test
xor
out
add
push
imul
jecxz
cmp
cmp
mov
cmp
cmpsb
sub
ret
movsl
icebp
mov
cli
jnp
out
jl
ret
adc
sub
cmp
jne
push
movsb
cld
enter
stos
add
xor
mov
jmp
gs
icebp
call
pop
fdivr
daa
sbb
mov
stc
fcoml
icebp
mov
cli
and
mov
loop
clc
insl
repz
mov
int3
add
fists
sub
push
xor
js
jg
xchg
dec
je
sub
mov
in
aaa
push
inc
push
pushf
mov
repz
filds
std
add
bound
lock
jb
shlb
dec
mov
test
movsl
icebp
sbb
ja
jp
and
mov
cwtl
aaa
pop
into
fucomip
negb
mov
inc
adc
inc
sbb
out
ljmp
mov
push
icebp
testl
add
int
xchg
popf
dec
add
cmc
push
or
sbbl
jae
fldt
push
loop
mov
sbb
movsl
addb
cmp
cmp
mov
sbb
or
pop
lret
fbld
mov
lock
mov
ret
sbb
or
sbb
ret
loope
sti
jge
mov
mov
mov
pop
fucom
call
fmull
out
emms
mov
loop
dec
inc
xchg
dec
cmp
jnp
jne
lds
pop
dec
loop
pop
xchg
xchg
sub
xchg
mov
insb
clc
adc
cmp
hlt
test
and
in
xchg
in
jnp
movsl
mov
pop
jae
movsl
jg
imul
inc
sub
sbb
lock
movsl
or
shlb
mov
mov
loope
and
dec
pop
xor
and
pop
lcall
and
pop
push
dec
xchg
add
js
adc
pop
inc
push
push
push
shl
xchg
inc
push
test
sbb
pop
movsb
xor
fldl2e
or
outsl
cmpsb
cmpsl
mov
jne
in
popa
les
jns
push
dec
movsl
xor
movsl
inc
test
mov
mov
mov
movsl
sub
dec
std
cmc
movsl
or
ljmp
int3
jmp
inc
inc
bound
jb
scas
or
fisttpl
clc
repz
jp
sbb
test
sbb
jne
call
dec
movsl
cmp
sahf
cmp
mov
sbb
inc
cmc
mov
jae
inc
outsl
mov
xchg
bound
movsl
push
dec
mov
movsw
xor
ficoml
add
movsl
cs
sahf
cli
adc
out
stc
and
pop
add
daa
scas
adc
mov
fdiv
or
aas
lcall
fstpl
xchg
sub
jl
jns
cmpsl
inc
adc
pop
jle
push
popa
insb
push
orb
push
mov
xchg
addr16
nop
cmp
lahf
add
jb
cmp
push
mov
orb
adc
andb
sub
data16
lcall
or
cs
and
sub
test
or
and
pushf
xlat
cmp
mov
add
xor
in
stos
mov
mov
ljmp
mov
fcmovb
cwtl
clc
mov
mov
fcom
dec
jne,pn
ds
push
add
js
mov
hlt
inc
fists
push
push
dec
sub
sahf
mov
push
movsl
push
xlat
dec
loope
in
and
sub
icebp
mov
js
adc
aas
insb
iret
lods
popa
in
sbb
mov
fldenv
lcall
sub
movsb
mov
gs
in
adc
xlat
mov
jae
ret
mov
cwtl
lods
or
xor
test
mov
iret
lret
test
sbb
sbb
testb
in
sahf
lods
adc
mov
test
jmp
sub
scas
loopne
stos
xor
pop
sub
xchg
outsb
push
inc
imul
cmp
add
lods
cmp
movsl
mov
or
pusha
xor
sub
fcoms
icebp
jecxz
jle
inc
sub
and
cmpsb
push
sbb
lds
mov
cmp
pushl
mov
sub
sbb
pop
and
xchg
pop
adc
pop
in
les
std
int
mov
in
loope
lods
sub
loope
sbb
lea
cwtl
xlat
les
lcall
sarl
clc
enter
sbb
notb
jle
cltd
aad
mov
and
inc
fdivrs
sbb
and
ret
push
gs
icebp
jbe
xchg
sbb
fucomp
adc
sub
mov
addr16
sub
lds
scas
bound
stos
fisubl
cmp
stos
or
bnd
into
mov
iret
lret
mov
push
add
pop
xchg
aaa
mov
add
in
xchg
or
jge
or
out
pop
daa
mov
mov
leave
mov
je
clc
push
popf
inc
sub
in
imul
lods
test
and
andl
or
movb
add
mov
movsl
xor
fdivrs
je
sub
sbbl
stc
push
insl
in
rorb
iret
xlat
daa
add
mov
mov
lds
aad
in
inc
jns
and
or
nop
movsl
mov
adc
scas
test
jmp
ds
mov
push
int
push
insl
xor
dec
std
xchg
cltd
movsl
xchg
mov
cmpsl
and
repz
js
mov
adcl
mov
arpl
dec
push
subb
dec
popa
test
jno
xchg
sbb
inc
xor
sub
mov
pushw
mul
leave
push
insb
mov
movsl
decb
cltd
cmp
add
shll
pushf
mov
nop
jbe
adc
mov
push
out
in
mov
movsl
cli
fucom
aaa
mov
dec
sub
cmp
jmp
in
jle
xorl
adc
push
jl
jbe
lahf
fstl
enter
jl
movsl
loopne
fcomp
imul
lret
push
cmc
outsl
mov
fsts
mov
fstl
jo
sbb
outsb
movsl
pop
popf
in
rclb
mov
xor
movsl
sbb
test
sar
add
leave
movsl
add
dec
ja
jle
cwtl
xchg
mov
int3
push
mov
movsl
jno
mov
or
rorl
pusha
imul
dec
in
sahf
int
sbb
aam
mov
shrb
movsl
fidivrl
inc
xchg
ljmp
loope
movsl
ret
mov
jg
dec
push
jp
and
mov
sbb
cmpsb
movsl
cld
cmpsl
mov
xchg
pushf
adc
xchg
cmp
nop
sub
mov
in
cmpsl
dec
imul
xor
push
setb
cmp
fcomi
pop
push
and
movsl
fidivl
shr
mov
movsl
daa
mov
insb
lret
test
cmpl
mov
fadds
jns
in
js
push
mov
jp
int3
dec
pop
mov
xor
gs
pop
in
out
movsl
ret
cmp
movsl
shlb
fcomps
inc
add
mov
test
test
clc
pop
loope
cli
imul
stc
jb
xchg
psubusb
in
jecxz
movsl
clc
cs
rcll
dec
mov
cld
lods
shrl
popf
pop
push
xchg
ss
push
sub
and
sbb
lahf
xchg
mov
stos
ficomps
xor
in
enter
movsl
ficomps
push
jg
clc
je
cmp
test
inc
xchg
mov
clc
bound
xchg
inc
mov
and
fs
mov
dec
dec
je
iret
in
lea
loop
mov
mov
sbb
and
xchg
jle
sub
xor
movsb
mov
hlt
test
adc
les
mov
cltd
push
sti
nop
shlb
movsl
sbb
xchg
subl
mov
inc
pusha
or
stc
mov
addr16
xor
adc
xchg
in
movsb
pop
push
test
jmp
movsl
outsb
js
nop
and
aad
fsubr
dec
cmp
and
ss
movsb
or
in
and
lock
lea
daa
and
sub
mov
movsl
fcoms
aad
test
sbbb
lds
out
lcall
mov
movsl
enter
nop
movsl
dec
xchg
cmpsb
mov
push
jl
mov
cmc
pop
or
cmp
in
jbe
dec
mov
sar
movsl
xchg
xchg
sbb
ret
push
test
in
jbe
fisttpl
cmpsb
movsl
enter
ja
fmull
dec
add
scas
and
jns
sub
xor
movsl
sub
xchg
cmp
cmpsl
in
mov
sub
test
push
movsl
loop
dec
andb
add
iret
int
push
test
sub
inc
pusha
push
mov
inc
add
xor
cltd
das
mov
push
les
jno
adcl
data16
xchg
sbb
sbb
jns
outsl
push
pop
ljmp
mov
cmp
mov
in
movsl
mov
xchg
pop
sbb
push
pusha
and
in
insl
clc
movsl
enter
lods
push
push
movsl
in
cmp
jge
cs
mov
cld
in
xchg
push
fbld
test
mov
data16
sub
or
stos
movsl
jae
add
in
out
pop
nop
push
lods
mov
aas
dec
movsl
jb
xor
sub
movsl
enter
inc
push
mov
aaa
jae
aad
cwtl
pushf
sahf
das
or
int3
cmp
ds
in
xor
fisubs
enter
pop
adc
sub
inc
int
jne
inc
movsl
cmp
push
int
imul
addb
pop
movsl
popf
jecxz
push
movsl
idivb
dec
lahf
and
inc
adc
scas
lret
mov
jo
das
mov
sbb
movsl
mov
dec
movsl
mov
inc
push
fidivrs
mov
dec
mov
add
mov
scas
movsb
in
sub
lock
cwtl
movsl
pushf
dec
hlt
fcompl
movsl
and
xchg
scas
movsl
ja
push
fs
xchg
movsl
pop
in
xchg
sub
divl
adc
mov
or
push
mov
jmp
push
stos
movsb
mov
pop
clc
in
leave
jnp
xor
aaa
mov
test
inc
inc
mov
mov
add
sbb
push
push
or
cmpsb
mov
inc
ud1
scas
jb
cmpsl
lods
mov
jne
outsb
inc
addr16
insl
sbb
inc
and
dec
fisubrl
or
ss
add
data16
dec
xchg
cmpsl
mov
add
gs
orb
cli
dec
sub
pop
sub
in
popl
sub
cld
nop
cmpsl
mov
push
push
jg
in
shlb
fcomps
cmc
or
cmpsl
shll
mov
mov
and
xor
pop
push
xchg
stos
hlt
movsl
inc
add
leave
int
out
mov
push
xchg
scas
push
and
and
adc
jp
out
mov
dec
add
dec
xchg
pop
push
push
popa
or
cwtl
mov
std
movsl
cli
mov
in
pop
movsl
aam
in
roll
mov
xchg
and
enter
dec
push
jp
pop
push
ja
push
xchg
imul
jo
movsl
lock
cmp
jae
inc
or
mov
adc
add
lds
mov
dec
imull
dec
jae
inc
dec
test
mov
jnp
jecxz
mov
stos
mov
movsl
leave
and
xlat
adc
iret
pop
outsl
lcall
cld
xlat
cwtl
dec
push
jmp
test
fldenv
pop
lods
cmp
sub
mov
jae
out
in
in
mov
and
adc
sti
loopne
push
xor
shlb
out
std
stos
jl
mov
je
pop
imul
cld
js
add
mov
or
leave
pushf
fbld
pop
in
xchg
pop
cwtl
out
and
shll
es
cmc
sub
lods
jae
scas
adc
adc
ss
lds
popa
sub
sub
test
filds
adc
dec
add
pop
popf
fsubrs
push
add
hlt
stc
inc
sahf
aad
add
sti
loope
lods
dec
decl
fildll
add
fnstenv
fistpl
sub
cmpsl
jnp
xchg
push
mov
cld
mov
add
jne
lahf
movsb
sbbl
sub
push
xor
popf
mov
les
add
fwait
enter
ljmp
sbb
push
ret
test
lcall
push
jns
out
clc
cmpl
add
loop
pop
push
add
dec
xchg
jge
incb
xor
clc
xor
rorb
jbe
orb
enter
loope
sbb
mov
add
dec
adc
jo
xor
push
and
sub
push
enter
dec
mov
inc
int3
cmp
or
repz
add
inc
sub
mov
mov
mov
loop
adc
int3
xchg
mov
movsl
xchg
icebp
ret
negl
sbb
mov
mov
test
aad
jl
fldcw
inc
test
pop
mov
cld
cmc
test
push
lcall
icebp
out
jl
jge
and
outsb
std
outsb
mov
leave
aam
icebp
test
xor
lock
addr16
shlb
mov
cli
jp
test
hlt
jbe
jmp
fcomp
push
dec
aas
sub
cmc
xchg
jge
in
inc
sbb
das
loopne
and
mov
mov
sub
faddl
pop
pusha
pop
pop
cmp
jle
xor
sti
and
cld
mov
scas
adc
mov
push
xorl
daa
or
dec
and
aaa
test
sbb
cmp
jne
fprem1
lcall
xor
test
inc
sub
in
bound
dec
add
in
pop
xor
mov
jl
lds
test
pop
xchg
popf
decl
mov
jmp
leave
mov
orl
and
pop
lcall
inc
pop
push
outsb
xchg
imul
jl
mov
stc
or
cmc
popa
push
icebp
loop
into
sbb
aam
popf
mov
pop
mov
mov
sub
shll
jno
rcll
jb
aas
rclb
dec
mov
test
mov
test
mov
and
sub
dec
dec
bound
cmc
jo
or
xchg
cmp
movsl
push
in
sbb
imul
adc
in
bound
rorb
movsl
mov
jmp
stos
shlb
cmp
inc
pop
pop
mov
loope
add
movsl
es
movsl
mov
fdivrl
call
call
mov
lds
rorl
cld
sub
mov
cmp
inc
fnstsw
clc
mov
mov
and
lds
ss
dec
enter
lods
pop
movsl
fld
adc
add
xor
adc
sbb
push
jg
push
adc
fwait
in
lds
popa
fincstp
sar
mov
pusha
push
adcb
test
pop
outsb
jo
daa
xchg
movsl
rol
xor
jge
movsl
testl
jl
gs
movsl
add
lods
ret
movsw
in
es
dec
pop
push
movsl
lea
jg
and
pushf
dec
cwtl
push
xchg
mov
and
mov
idivb
fwait
cltd
sub
mov
movsl
pusha
pop
out
rcrb
sysret
mov
add
icebp
inc
push
mov
int
loop
int3
cmp
jo
and
lods
jle
ret
dec
rcll
movsl
cli
ja
aas
inc
out
pop
movsl
scas
into
jns
and
cmpsb
mov
push
mov
shrb
loopne
push
mov
xlat
sahf
imul
dec
dec
adc
sub
movsl
push
je
fcmovb
xor
fstps
movsl
xor
ffreep
add
push
cmp
shll
gs
or
or
movsl
das
jb
jge
cmp
ja
xor
mov
lahf
xchg
sbb
push
xchg
shlb
bound
out
test
push
pop
xorb
movsl
dec
jge
les
nop
popf
movsl
shlb
mov
push
mov
in
icebp
data16
mov
inc
mov
loopne
jecxz
decl
sbb
xor
cmpsl
push
lret
dec
jge
dec
push
sar
jbe
mov
shlb
xchg
in
mov
outsb
fdivl
stos
mov
cmp
inc
int
lahf
and
adc
popl
loope
testl
lds
scas
sub
inc
inc
push
ss
sti
sar
hlt
xlat
jbe
iret
jb
jno
inc
sub
xor
mov
ds
inc
in
lods
movsl
push
mov
cmp
add
leave
enter
xchg
mov
xchg
push
in
gs
or
inc
inc
push
jmp
movsl
fcoml
pop
out
movsl
push
xor
arpl
and
inc
cwtl
movsl
jne
add
in
adc
cltd
fsubrp
pop
into
lret
sub
push
data16
movsl
dec
xor
andb
jmp
pop
int
movsl
mov
jmp
dec
mov
hlt
into
test
inc
testb
push
cmp
mov
or
push
fiaddl
insb
subb
and
jle
movsl
in
and
mov
outsb
push
mov
jecxz
jo
mov
lahf
pop
pop
les
add
cltd
or
test
out
mov
or
fnsave
pusha
leave
test
lret
lcall
jb
cmp
lods
jge
mov
xchg
inc
jno
mov
jmp
add
subl
rcrb
dec
adc
jno
push
add
push
fiadds
mov
lret
jns
movsl
fldl
cmp
push
xor
fs
mov
andl
mov
movsl
popf
incb
cmp
xlat
jle
subb
icebp
push
lock
mov
push
xor
inc
std
stc
mulb
pop
dec
cwtl
mov
mov
push
hlt
pop
movsl
pop
mov
ret
mov
adcb
movsl
push
imul
inc
lahf
xchg
inc
stc
xor
xchg
push
popa
hlt
inc
or
fldl
popf
push
push
push
scas
dec
or
movsl
pop
mov
add
js
movsl
mov
aas
add
and
movsl
jge
jbe
pop
mov
cld
mov
push
addr16
cmp
push
lock
cld
movsl
jbe
shl
call
jg
dec
dec
pop
push
in
mov
push
rcrl
jl
scas
jno
pop
mov
pop
sbb
into
add
in
test
cmpsb
jge
incb
xchg
sahf
dec
dec
stos
lods
mov
mov
outsb
cli
lret
stos
in
das
sub
push
movsb
in
stc
sahf
xchg
sti
ljmp
push
movsl
addr16
aas
ret
in
aam
in
arpl
and
mov
or
jb
imul
ficomps
inc
cltd
inc
xchg
lahf
push
in
frstor
out
movsl
cmp
int3
add
in
ss
and
dec
and
aaa
cmp
xor
repnz
xchg
sti
lods
lahf
rclb
jb
imull
mov
push
push
movsl
sahf
mov
daa
xor
dec
js
jecxz
sbb
lds
lret
std
add
out
movsl
fiaddl
sbb
mov
or
xchg
fiaddl
loopne
jle
movsl
int3
jecxz
mov
mov
adc
xchg
dec
cmp
inc
pop
add
dec
xor
push
push
sub
jno
adc
push
aaa
stc
mov
in
sbb
lds
movsl
inc
xchg
repz
je
dec
hlt
fsubrs
pop
ljmp
xchg
stc
push
test
addr16
out
int
mov
rcll
sub
lods
add
iret
in
inc
mov
shlb
icebp
in
pop
movsb
mov
out
in
push
xchg
xor
pop
movsl
push
test
fsubs
or
movsl
imul
sbb
mov
mov
lcall
outsl
insl
movsl
pop
shrl
push
cmp
or
pop
jns
mov
lods
mov
ret
daa
movsl
test
bound
aas
insb
mov
scas
push
cmp
stos
int
lock
das
sbb
lods
push
ret
jge
mov
pop
icebp
test
punpckldq
dec
movsl
jg
mov
xor
leave
mov
xchg
cmc
cmpsl
add
sbb
ljmp
popa
xchg
mov
cmpsb
lds
cmp
jmp
outsl
dec
and
lcall
dec
mov
fnsave
ljmp
mov
lods
mov
fs
fidivrs
gs
or
in
mov
pusha
add
dec
mov
dec
call
pop
shl
add
cmc
data16
loope
rorl
mov
jg
jbe
fnsave
mov
and
enter
movsl
xor
sub
movsl
xor
jmp
movsl
iret
adc
sarl
movsl
popf
mov
sub
je
gs
cmp
mov
scas
or
sahf
stc
mov
lock
in
fisubl
nop
faddl
pop
out
mov
mov
inc
test
cmc
mov
outsb
lods
jge
out
cwtl
inc
jle
lds
mov
movsl
jno
inc
add
sub
movsb
push
scas
and
data16
call
and
pushf
mov
add
stc
adc
aad
aas
dec
in
inc
in
cwtl
xchg
andb
ljmp
int3
arpl
ficomps
push
pop
pop
xor
int
popf
jns
dec
jmp
mov
in
negl
and
imull
aad
and
andb
sub
mov
fistpll
shl
addr16
jl
out
dec
mov
add
notl
shll
shlb
je
jmp
adc
dec
stos
fstl
sub
lea
into
ret
call
mov
repnz
loop
lcall
sbb
pop
mov
mov
xor
dec
lds
push
icebp
mov
pushf
cmp
repnz
js
popf
sbb
xchg
orb
inc
sahf
xlat
icebp
jl
jb
lods
stos
das
push
les
sub
xchg
pop
stos
push
pop
sub
loopne
ja
push
pop
jnp
push
add
mov
sbb
push
dec
and
push
dec
fsubrs
mov
adc
out
ss
clc
icebp
jno
and
scas
jnp
sub
adc
push
jo
dec
loope
cmp
xchg
mov
je
jne
sub
idiv
mov
enterw
in
call
pop
xchg
int3
push
cmpsb
in
xchg
lods
faddl
fstps
lods
aaa
and
push
and
pop
jbe
idivl
and
pop
idivl
stos
out
adc
adc
xchg
add
sub
mov
cmp
div
mov
cmc
cmpsl
sbb
outsl
imul
inc
sub
add
clc
push
adc
jnp
test
test
sub
insl
xchg
nop
data16
clc
jl
jp
jmp
sbb
loope
dec
mov
in
mov
adc
push
out
xchg
sub
jo
sbb
insl
sti
xchg
repz
xchg
loopne
mov
mov
ss
decl
out
xchg
cltd
jl
cli
popa
xchg
out
andb
add
bound
mov
sub
pushf
gs
mov
fsub
lods
jl
jg
sub
and
sub
stc
sbb
or
loop
cwtl
jl
and
pop
mov
popa
fstl
mov
jl
sti
insb
adcb
sbb
movsb
divb
jl
add
outsb
rcl
mov
fldl
aam
jne
push
mov
es
cs
addl
mov
lock
jno
scas
sub
push
leave
fcomps
sub
jnp
adc
or
fstpt
cmp
les
dec
pop
repnz
icebp
pop
imull
rcr
jp
insb
adc
pop
or
mul
xor
sbb
sti
jo
arpl
sti
pop
in
mov
sbb
iret
mov
push
jnp
bound
add
jne
push
lods
jbe
ret
in
pusha
jns
movsl
ds
and
jno
movsl
fists
mov
and
and
daa
movsb
clc
cmpsb
mov
inc
mov
in
popf
mov
cltd
testb
push
jecxz
int
bound
sbb
push
cwtl
setae
jb
loop
or
add
push
mov
xchg
mov
cmp
lods
xor
shld
add
pop
xchg
movsl
loopne
adc
movsl
lods
mov
int
pop
add
stos
jns
inc
mov
mov
mov
lret
pop
test
add
popf
cmp
and
adc
sahf
outsl
add
mov
jle
pop
xchg
call
lods
cmp
imul
cmpsl
mov
inc
nopl
in
in
enter
andl
sti
loopne
jae
iret
and
out
pop
ja
mov
test
imul
arpl
rcrb
aas
mov
movsl
sub
test
mov
lock
out
and
fisubrl
sub
stc
fcomi
mov
pusha
pop
xchg
push
les
int
jmp
enter
fcomps
mov
add
cmp
stos
enter
sar
mov
test
in
lahf
push
sub
dec
jnp
addr16
and
imul
pop
je
shlb
add
pop
inc
sbb
loope
icebp
sbb
mov
pushf
sub
xchg
sbb
xor
lods
hlt
dec
jecxz
pusha
xor
add
out
mov
sub
sub
outsl
xchg
add
inc
push
cmp
in
mov
test
je
inc
push
sub
repnz
aas
data16
or
out
lock
push
cmc
mov
das
sub
sti
mov
xor
shlb
cmp
xchg
jge
mov
dec
adc
adc
ret
popf
and
lock
mov
je
or
jno
aad
mov
adc
pop
pop
test
scas
push
adc
push
inc
movsl
test
out
xchg
dec
sbb
shl
in
jl
add
mov
bound
movsb
loope
dec
jp
je
add
aam
imul
in
std
jge
popa
pop
lods
mov
cwtl
test
ds
clc
out
pop
out
push
mov
jb
sti
aam
outsl
dec
xchg
into
fsubp
int3
arpl
sarb
push
loop
xlat
mov
shlb
ja
repz
or
mov
push
loop
push
mov
mov
shl
movb
pusha
mov
out
cmp
mov
cmp
movsl
test
nop
or
mov
pushf
std
fisubl
divb
xor
popf
imul
jo
mov
dec
sahf
push
mov
sub
mov
out
movsl
cmp
adc
pop
pop
mov
shr
stos
movsl
add
stc
add
sub
jmp
mov
adc
test
gs
pusha
je
cli
cmp
insl
add
and
sub
jnp
inc
xor
add
cmc
push
xchg
xchg
and
ret
mov
fisubs
lds
movsl
jmp
mov
imul
movsl
sbb
leave
movsl
inc
mov
or
adc
inc
std
test
cmp
ficompl
pshufw
test
push
out
cmc
insl
cmp
movsl
sbb
pop
ss
imul
movsl
daa
stc
xor
mov
repnz
call
xchg
mov
mov
movsl
fstp
xor
mov
jg
rcrb
movsl
inc
sbb
pop
inc
movsl
cmp
xchg
movsl
jle
call
cmp
cmp
adcl
pop
sbb
jmp
divb
data16
sbb
push
jne
pop
in
mov
cmpsl
fisubrl
imul
fsin
lock
repz
mov
out
xor
xchg
sbb
scas
pusha
sbb
and
sub
jmp
fwait
movsl
gs
icebp
int
insb
mov
push
and
sbb
adc
jo
mov
push
loope
mov
xchg
inc
jge
jg
jmp
pop
sbb
aam
mulb
pusha
lds
sahf
push
pusha
call
xchg
adc
neg
cli
dec
adc
push
push
bound
xchg
push
push
rorb
xor
stos
fwait
arpl
je
jbe,pt
popa
out
lret
cld
mov
inc
and
movsl
cmc
scas
dec
lds
xor
dec
rolb
insl
mov
xchg
pop
cmpsl
inc
std
movsl
dec
or
add
outsl
push
xor
sbb
movb
fmull
add
arpl
adc
mov
mov
xchg
push
xchg
iret
xchg
movsl
and
aaa
scas
ret
gs
movsl
mov
push
mov
push
xor
xor
adcl
shl
dec
pop
scas
std
mov
ja
fidivl
int3
daa
ds
pop
dec
sbb
lock
shll
sub
dec
test
jmp
mov
mov
mov
mov
popl
pop
scas
movsb
cmpsb
shrl
scas
loope
pop
jecxz
in
cmp
xor
or
adc
jge
pop
icebp
movsl
scas
pushf
mov
cmpsl
sub
movsl
xor
out
movsl
jg
cmp
add
push
fs
icebp
mov
int
imul
and
repz
movsl
push
and
bound
mov
movsl
mov
scas
imul
cld
and
test
xor
xchg
mov
pushf
add
loope
mov
fisttpll
ljmp
ret
and
movsl
ret
cmpsl
lret
push
loope
push
test
fcomip
movsl
data16
imulb
dec
std
lods
mov
fnstcw
movsl
lcall
bound
mov
sbb
adc
sti
add
in
sbb
adc
movsl
lahf
adc
enter
das
movsl
enter
mov
in
movsl
xor
movsl
lods
popa
jge
movsl
mov
lea
inc
insw
or
mov
mov
xor
and
lds
outsl
dec
hlt
mov
sbb
fldl
ja
push
mov
dec
int
push
scas
movsl
ss
fpatan
addr16
in
movsl
daa
fwait
jle
push
and
mov
push
movsl
sub
sahf
cltd
push
shlb
leave
mov
outsl
mov
add
call
stos
jecxz
movsl
pop
jne
jl
push
outsb
mov
dec
mov
repnz
mov
sbb
lret
std
scas
test
movsl
aam
pusha
add
faddl
add
inc
sub
ss
scas
stc
xor
insl
loop
xchg
popf
and
outsb
divl
lcall
jecxz
fucomip
sub
std
popf
rolb
or
shll
test
xor
shl
je
jns
in
add
int
dec
dec
push
adc
rcl
pop
pop
ret
xchg
mov
clc
loopne
cmc
or
sub
xorb
vshufpd
add
das
in
and
lret
in
add
sahf
adc
adcl
inc
xchg
pop
push
subb
shlb
mov
xor
movsl
popa
and
testb
movsl
iret
sub
incb
aaa
pop
xchg
dec
lods
mov
fwait
cltd
add
cmpsl
jb
cmp
std
insl
xchg
jecxz
lods
jns
je
aad
js
xor
repnz
lock
mov
pop
jp
insb
movsl
int3
and
call
mov
push
cmp
jae
movsl
push
xor
cli
mov
jnp
pop
push
push
jnp
mov
xor
push
add
imul
cld
jb
jecxz
pop
daa
clc
dec
push
movsl
add
sbbl
out
push
fucomp
lods
and
xor
dec
aaa
push
pop
sbb
pop
xor
inc
movsl
jae
push
loopne
pop
and
jle
mov
movsl
pop
repz
leave
cli
or
fldt
shll
dec
out
loope
in
movsb
push
movsl
sbb
adc
arpl
jnp
fistpl
add
nop
repnz
daa
pop
pushf
test
icebp
movsl
add
rcrb
movsl
mov
inc
push
xor
mov
pop
andb
dec
xor
mov
clc
or
inc
adc
add
mov
mov
push
andb
testl
mov
mov
fbld
cs
xor
sbbl
int
out
stos
cmp
mov
in
movsl
mov
cmp
cmc
mov
inc
ss
stc
push
sahf
pop
cli
jecxz
adc
mov
push
jbe
pop
lret
in
into
dec
jge
frstpm(287
adc
sbb
xchg
in
push
xchg
push
mov
jb
test
push
out
jp
sub
push
sbb
jle
arpl
ds
lcall
push
mov
jg
cld
movsl
out
sub
dec
mov
mov
stos
clc
sti
cmc
movsl
mov
sbb
pop
sbb
sbb
in
std
cmc
push
cmp
hlt
int
leave
in
movsl
icebp
cli
loope
jno
jecxz
call
sub
xor
add
pop
dec
jecxz
push
add
outsl
pusha
dec
xchg
push
lcall
inc
hlt
add
cmp
rcr
or
jb
aam
jmp
adc
cmpb
movsb
push
sbb
xchg
mov
data16
movsl
aaa
sub
repz
out
movsl
negl
and
xchg
pop
xchg
rclb
cmp
mov
out
jb
xchg
push
jle
cmc
insl
push
dec
lods
xchg
cld
inc
dec
in
negl
movsl
rcll
movsl
push
test
fsub
loope
cli
inc
test
mov
sub
jb
mov
sbb
cmc
dec
mov
mov
mov
xlat
push
in
mov
jmp
stc
xchg
sub
mov
jo
test
add
int
movsl
data16
xor
repz
push
movsl
popa
and
sub
mov
icebp
std
push
in
mov
jbe
jle
push
pop
shll
sbb
mov
fisubs
jge
mov
mov
lea
pop
xchg
sbb
inc
mov
sub
cmc
mov
cmpsb
loop
push
lcall
adc
mov
scas
aaa
jbe
pop
fwait
mov
push
movsl
stos
adc
fldenv
popf
fcoms
jmp
icebp
test
sub
stos
insb
ds
mull
sub
sbb
add
movsl
dec
pop
enter
jno
movsl
mov
inc
jmp
mov
push
push
push
pop
in
adc
sbb
adc
mov
fimull
mov
mov
das
jp
mov
movsl
mov
es
mov
pop
jmp
mov
popl
in
int
mull
mov
out
loopne
fimuls
jns
pop
mov
imul
jle
dec
cmc
cltd
mov
fimull
mov
mov
mov
arpl
mov
sbb
bound
jbe
mov
fisttpll
jmp
or
mov
call
mov
jl,pn
xchg
testl
pop
inc
push
mov
out
lds
mov
nop
cmp
rcrl
aad
cld
cmp
cmpsb
imul
fsubl
popf
mov
lods
sbb
xchg
mov
lcall
lods
movsl
insb
lds
out
int3
loope
inc
dec
xchg
inc
mov
sahf
stc
jne
inc
scas
push
cmc
std
mov
jl
shll
sub
clc
outsl
scas
je
cmp
xor
movsl
out
mov
imul
xor
adc
mov
cmp
scas
stos
fwait
loope
pop
sbb
movsl
pushf
iret
mov
xchg
push
ss
adc
js
arpl
dec
pop
test
xchg
lahf
ljmp
inc
or
cli
pusha
movsl
into
les
cwtl
lea
popa
jno
cmp
clc
movsl
addr16
xor
and
push
in
leave
fimull
sub
fwait
sahf
scas
movsl
mov
loope
int
pop
mov
push
mov
xor
rorl
dec
addr16
fisubrl
mov
push
dec
loope
js
sbb
mov
mov
jmp
movsl
loop
clc
popf
xor
in
jge
in
mov
xlat
test
cli
movsl
xchg
das
pop
fldl
add
out
lret
mov
popa
loope
add
jle
cmp
cld
jnp
movsb
sbb
xchg
adc
sub
inc
dec
pop
sti
gs
and
cmc
jno
sbb
je,pn
adc
jo
divl
clc
stc
sarb
sti
movsl
dec
pushf
jnp
decl
xchg
loope
inc
adc
fstl
shl
dec
movsl
andl
pop
cmc
bound
out
roll
mov
push
xchg
movsl
mov
scas
mov
or
movsl
add
mov
sbb
movsl
jbe
push
xchg
sbb
push
in
outsb
xchg
inc
cmp
sahf
jmp
and
fwait
add
and
loop
rclb
or
adc
cmpsl
or
xchg
fldenv
rorl
fisttpl
add
mov
ficomps
xorl
jle
cmpsl
test
push
xchg
sahf
fldt
sub
xchg
jecxz
rcr
leave
dec
arpl
mov
or
rcrl
in
inc
lcall
sbb
or
cwtl
add
aam
xor
out
cmp
mov
out
sbb
add
int
cmpsb
test
sahf
mov
jl
sarb
imul
in
les
mov
sub
xchg
iret
lods
call
mov
jp
cmpsl
xor
xlat
mov
add
popa
test
inc
es
movsb
mov
sbb
enter
and
stc
sar
testb
dec
xchg
push
cmpsl
inc
mov
ret
pushf
xchg
cmp
mov
fnstsw
sub
add
jecxz
inc
aas
pop
sarl
sahf
xor
mov
clc
fnstenv
repz
mov
int
sub
scas
or
aad
stos
and
sbb
mov
adc
ret
sub
xor
test
sbb
mov
add
xorl
mov
insb
leave
xor
mov
jbe
lods
pop
test
leave
sub
stos
dec
jl
cmpsl
ss
add
loope
jmp
popf
test
cmpsl
sub
lds
stc
es
push
push
xchg
insb
stos
and
xor
fs
cmpsb
mov
imul
xlat
jnp
add
pop
inc
mov
fisttpl
call
or
repnz
daa
sbb
std
cmpsb
xchg
fcomps
dec
call
pop
push
movsl
mov
aam
sti
cmc
sahf
pop
incb
data16
shr
lods
movsl
lds
sbb
adc
add
popa
jns
jge
sub
insb
pop
movsl
in
xchg
cwtl
pop
adc
loopne
mov
or
mov
or
imul
adc
sub
pop
inc
add
call
dec
jne
push
jecxz
insl
scas
orl
push
ja
pop
fucomp
decl
std
dec
inc
push
pop
repz
enter
pop
pop
lds
push
fs
push
movsl
outsb
ljmp
xor
bound
mov
ja
cli
pop
lcall
push
push
xorl
mov
ljmp
adc
mov
subl
pop
repnz
int3
cmc
jne
cmpsb
mov
test
rep
adc
fildl
clc
jae
pop
test
movsl
adc
mov
sarb
movsl
push
sbb
jnp
jmp
in
jae
sbb
dec
scas
mov
sbb
aaa
and
jo
test
in
jne
inc
dec
mov
push
fimuls
cltd
dec
dec
leave
xchg
les
fnstsw
push
aaa
aam
lcall
jl
cmpsb
mov
mov
xor
and
js
cmc
mov
mov
xor
jl
dec
ds
adc
mov
pop
push
stc
or
cwtl
push
lds
xor
out
stos
notl
pusha
dec
cwtl
or
out
movsl
cli
cmpb
push
outsl
or
lock
int3
ja
pop
sbb
push
push
mov
iret
in
mov
lods
movsl
xchg
daa
leave
into
loop
imul
jle
mov
mov
cmp
movsl
xchg
iret
lock
test
inc
mov
jbe
mov
fs
lock
mov
cmp
add
dec
mov
mov
jns
pop
sub
mov
movsl
int
mov
cmp
popa
in
pop
fists
dec
adcl
movsl
add
fcmove
and
mov
pop
mov
dec
mov
hlt
test
out
std
sub
pop
xchg
inc
mov
sbb
push
out
cli
mov
test
and
mov
ds
push
adcb
popf
scas
mov
es
mov
repnz
add
stos
sbb
jecxz
lret
add
xor
shrl
mov
fucomip
call
test
in
lods
imul
jg
movsl
push
sbb
pop
push
sbb
movsl
loop
push
xchg
mov
std
jmp
sahf
cmpsl
mov
das
aad
xor
cmp
mov
pop
aad
dec
dec
xchg
pop
lret
movsl
cmp
ss
out
fimuls
pop
mulb
jbe
gs
pop
jp
rclb
sub
push
fidivl
sar
and
loope
test
sbb
movsl
and
out
cld
cmp
mov
movsl
mov
in
add
cmc
mov
ljmp
or
pop
push
push
pop
xchg
cmp
movsl
xchg
jg
movsl
in
stos
jnp
stc
jne
outsl
ror
cmp
add
push
push
fldenv
pop
mov
push
mov
push
movsl
mov
xchg
xchg
or
mov
mov
into
and
and
cld
cmp
popf
repnz
sub
stos
mov
movsl
jmp
sub
xor
dec
lds
cmpsb
xor
push
movsl
xchg
test
mov
popf
ja
inc
and
aaa
jecxz
cmpb
in
push
xchg
addr16
sub
and
ljmp
mov
mov
lcall
icebp
clc
in
mov
and
cmp
dec
xchg
rcl
or
addl
inc
fs
ljmp
dec
adc
movsl
add
rorb
lret
inc
sti
in
dec
ret
adc
insl
jle
pop
in
in
pop
cmp
inc
jne
sbb
je
into
lods
jmp
sub
inc
jbe
adc
fldl2e
sahf
pop
pop
push
lea
movsl
cwtl
pop
and
je
cmp
cmp
imul
cs
or
or
pop
mov
shlb
add
aas
ret
shl
push
add
push
sahf
dec
or
dec
movsl
sub
jb
test
sbb
arpl
add
cmp
aas
pop
jbe
movsl
fildll
out
cmp
movsl
or
inc
ret
roll
pop
pop
mov
adc
sahf
andl
mov
mov
sub
daa
scas
or
mov
jecxz
cmpl
sub
mov
sub
mov
jl
cs
push
xchg
push
adc
imul
push
push
ret
jns
movsl
mov
cmp
insb
imul
sbb
clc
leave
adc
pop
inc
sahf
movsl
and
inc
movsl
jns
push
jo
mov
jae
popf
mov
jnp
pop
sets
std
cmp
or
punpckhwd
sub
mov
int
pop
cmp
outsb
jge
push
out
lds
shlb
xor
or
mov
xchg
fldcw
mov
lea
mov
mov
fdecstp
add
mov
jno
jg
popa
rcrb
sbb
sbb
pop
negb
and
xor
into
or
ret
out
test
sbb
aas
push
movsb
scas
adc
imul
movsl
call
repz
insb
jl
addl
cmp
mov
fildl
scas
sub
xchg
mov
rcrl
loop
aad
fisubl
inc
cltd
cwtl
sarl
dec
movsl
stc
in
fcomps
movsb
pop
cmpsl
and
repnz
shr
cs
nop
insb
dec
movsl
inc
cmp
into
sti
push
sbb
jo
test
test
into
in
mov
cmp
fld
push
cmp
push
lods
sub
daa
add
mov
or
movsl
push
cmp
add
inc
jbe
cmp
ret
shr
inc
into
pop
fadd
push
movsl
inc
ret
push
out
pop
sbb
mov
movsl
mov
add
mov
push
jg
movsl
inc
iret
sub
pop
cltd
aam
jnp
cli
pop
cmpsl
jl
call
loopne
pushf
mov
sub
sbb
sub
mov
movsl
ja
or
mov
mov
push
movsl
xchg
jl
mov
data16
ds
fidivs
out
fidivl
adc
divl
cwtl
mov
int
mov
mov
sub
hlt
cmpsb
add
fbstp
addb
je
inc
cmc
jg
js
mull
imul
int
movsl
mov
stc
and
dec
repz
stos
subb
cmp
in
arpl
popf
mov
and
adc
mov
movsl
xchg
aas
sbb
shll
enter
test
in
je
dec
imul
out
pop
js
test
mov
inc
sub
dec
jp
xor
mov
movsl
sbb
call
in
fildll
inc
iret
bound
movsl
cs
sbb
lcall
daa
inc
je
jmp
movsl
outsl
cmp
xlat
sbb
lock
mov
icebp
xchg
xchg
adc
test
adc
mov
inc
mov
leave
lods
movsl
cmp
je
xchg
xor
aam
mov
push
xchg
cmpsb
and
push
jecxz
ret
movsl
and
enter
inc
js
xchg
cld
pop
jnp
mov
addr16
movsl
stc
lahf
cmc
dec
andb
mov
ljmp
xor
push
scas
je
jmp
ja
jecxz
mov
enter
pop
out
lcall
xor
icebp
adc
pushf
movsl
test
inc
in
cmp
mov
mov
aam
les
mov
dec
test
sahf
jbe
fiadds
in
shl
lds
movsl
lds
lods
fadds
rol
ret
stc
jb
inc
hlt
js
pusha
iret
jmp
pushf
mov
and
popa
or
mov
mov
and
aaa
adc
inc
push
cmpsl
mov
jnp
in
lret
das
movsl
mov
jmp
jmp
and
inc
in
test
mov
push
add
movsl
out
in
pushl
mov
movsl
push
sbb
repz
sub
out
popa
add
rcl
xor
sub
aad
cli
sbb
icebp
pushf
lret
movsl
dec
cmpb
mov
fwait
jle
daa
xchg
fstps
out
lds
movsl
xchg
call
lock
and
scas
or
ja
inc
dec
cld
movsl
ror
sti
fidivs
sbb
mov
call
xchg
pop
and
stos
in
jecxz
cmp
movsl
cwtl
aaa
adc
test
ficomps
scas
movsl
jmp
subb
xchg
lcall
popa
fsubr
push
movsl
pcmpgtb
xor
mov
movsl
or
or
gs
push
pop
stc
mov
and
mov
hlt
flds
iret
in
inc
test
push
push
in
lret
stc
sub
fwait
movsl
cmc
fst
sub
xchg
push
and
loope
lret
pop
xchg
ret
test
ljmp
ja
mov
mov
ljmp
and
mov
lea
xchg
jg
mov
stos
test
adc
and
cmp
inc
movsl
and
pop
jb
xorl
add
outsb
shll
in
mov
test
ret
int3
enter
cmpsb
push
addr16
mov
ficomps
jmp
jmp
into
cld
mov
push
iret
cmc
mov
jb
sbb
mov
movsl
mov
cmpsb
push
xchg
and
sahf
dec
dec
cltd
push
cmp
test
movsl
mov
cmp
cmpsb
test
repz
xchg
mov
stc
mov
mov
or
adc
sub
out
out
mov
imul
pop
jnp
cmp
call
dec
movsl
jp
jns
arpl
test
movsb
movsl
xchg
mov
fsubrp
fnstsw
inc
cmp
dec
sbb
inc
jbe
movsl
scas
daa
subb
into
mov
shrb
and
div
adc
rcrb
push
popf
xchg
out
enter
mov
sbb
cmpsb
pop
mov
scas
jbe
mov
out
js
xchg
in
xor
pop
aad
add
std
in
rcrl
fwait
sub
pushf
push
ret
dec
sahf
dec
fisttpll
mov
lods
push
inc
movsl
pop
pop
pop
pop
mov
or
xor
fneni(8087
cmp
test
push
or
lret
inc
lea
mov
mov
cmc
jno
fnsave
cmpsl
mov
fcompl
cmp
fistl
enter
lret
sub
shlb
sub
movsl
xchg
xchg
lds
in
mov
inc
in
fimull
cs
jnp
lock
push
and
push
out
faddl
mov
call
adc
leave
sbb
sub
mov
xlat
xor
mov
movsl
dec
inc
js
push
add
aad
add
cmp
test
add
movsl
push
inc
mov
adc
jns
popf
pop
out
loope
movsb
lret
movsl
or
lods
js
dec
pop
and
xor
push
mov
sub
pop
insb
xchg
push
or
sahf
add
adc
inc
cld
xchg
or
scas
sti
in
pop
push
and
or
movsl
cwtl
test
jl
jg
sahf
int3
sbb
xor
mov
pop
xchg
add
aad
push
loopne
scas
int3
xchg
jmp
mov
dec
pop
pop
push
movsl
sbb
shr
out
mov
sub
out
sbb
das
movsl
mov
sbb
movsl
fiadds
aam
pop
lret
dec
adc
movsl
out
xchg
adc
outsb
pop
cmp
into
cli
jle
jg
mov
sbb
insl
cmc
mov
hlt
jmp
movsl
jns
loop
pop
scas
mov
fldcw
jbe
jg
test
ja
movsl
push
dec
ds
mov
data16
dec
xchg
in
xchg
mov
movsl
mov
je
movsl
mov
repz
movsl
daa
inc
lret
in
pop
lods
sbb
movsl
fwait
add
push
movsl
cmp
daa
aas
sti
movsl
fnsave
insb
test
lret
sbb
mov
jmp
mov
or
mov
push
movsl
add
adc
mov
push
bound
mov
pusha
sbb
or
cld
loope
xchg
int
xchg
dec
cmp
fstps
push
mov
inc
lds
cli
cltd
hlt
iret
leave
lods
adc
lahf
mov
inc
mov
adc
dec
pop
mov
into
jne
jmp
sub
popf
inc
jle
jl
movsl
lcall
mov
shlb
movsl
dec
in
daa
mov
mov
push
add
clc
aas
mov
jnp
rorl
add
insb
sti
in
aam
push
inc
mov
mov
mov
cmc
mov
negl
scas
jns
movsl
aam
push
fsubr
xorb
sbb
loopne
std
cmp
jae
inc
movsl
divl
lods
push
xchg
dec
icebp
xor
jo
les
mov
cmp
push
cmp
and
ds
nop
in
repz
aam
xchg
ja
jle
rcrb
fimuls
inc
xor
outsb
movsl
ss
adc
mov
lea
xchg
or
cmp
and
rcrl
add
leave
ljmp
mov
jae
clc
enter
inc
test
aam
js
addr16
in
add
movsl
pop
push
push
mov
mov
cmp
stos
mov
and
xor
push
loopne
movsl
xchg
in
dec
stc
sub
push
movsl
push
out
iret
pop
repz
jb
mov
lret
xor
je
fildll
mov
sbb
mov
xchg
notb
push
lods
rorb
test
jb
mov
inc
negb
movsl
call
xor
xlat
in
sub
lds
fstps
add
test
mov
jp
jmp
movsl
push
cld
add
push
or
mov
fidivs
les
lock
scas
and
adc
fldenv
pop
jge
mov
cmp
or
movsw
push
icebp
addr16
in
dec
out
mov
inc
nop
xor
pop
mov
sbb
loop
movsl
decl
push
ret
mov
mov
jae
pop
ret
fxch
out
push
movsl
arpl
push
or
ljmp
jg
dec
sbb
scas
push
and
je
movsl
cmc
jmp
repnz
ss
lcall
rcrb
pop
movsl
out
inc
std
cmp
fldl
pop
sub
jecxz
push
movsl
or
aad
dec
adc
leave
mov
cmc
jns
movsl
gs
inc
jno
jg
int3
lds
leave
cld
movsl
cmc
sbb
leave
mov
popa
mov
aaa
in
ret
cmp
daa
or
movsl
imul
movsl
test
push
mov
movsl
stc
mov
jo
xor
xchg
mov
pop
sbb
aaa
add
hlt
jg
xor
lock
movsl
mov
in
movsl
out
jno
hlt
xchg
dec
lods
dec
mov
repz
test
pop
bound
dec
xchg
mov
jnp
loopne
adc
adc
push
and
call
icebp
pop
mov
sbb
test
add
mov
pop
es
lods
stc
test
xchg
dec
in
lock
movd
push
cmp
sahf
inc
lds
pop
aad
out
and
cmpsb
add
in
in
out
jnp
arpl
fdivrs
ljmp
or
push
sub
sub
movsb
or
movsl
icebp
out
mov
fcompl
mov
xchg
add
int
std
pop
pop
in
sahf
xorl
push
ss
cmc
rcll
pushf
or
and
sbb
or
test
and
in
mov
add
mov
push
mov
xchg
push
jns
stc
add
jbe
int3
rol
icebp
stos
incb
popa
hlt
pop
mov
iret
nop
lret
lds
and
out
ljmp
movsl
sarl
jp
add
pop
lahf
movsl
push
cmpl
mov
cwtl
cmpsb
adc
movsl
push
mov
mov
movsl
loop
icebp
pop
jmp
dec
mov
mov
and
lds
in
popa
lock
inc
push
ror
jne
icebp
movsl
test
xchg
leave
lret
hlt
outsb
movsl
inc
scas
test
out
movsl
xlat
mov
icebp
push
xchg
push
mov
sub
andl
sbb
lret
movsl
sub
and
into
rorb
andb
lds
inc
dec
addb
fstps
cmp
xor
dec
movsl
mov
pop
lods
pop
and
ret
movsb
inc
cmp
in
fcomi
mov
dec
popf
jno
push
push
arpl
cmc
cmc
pop
loop
mov
sahf
inc
test
jmp
out
clc
imul
out
es
mov
shll
inc
mov
mov
pop
and
jg
xlat
sub
je
pop
inc
bound
out
sub
add
fldenv
or
sbb
stc
jbe
mov
daa
shll
movsb
sub
xchg
push
sti
push
push
inc
sbb
aaa
xlat
scas
std
xor
les
out
movsl
push
mov
sub
lods
loope
sar
or
cmp
mov
popa
bound
pop
sti
sub
sbb
and
pop
and
sub
push
test
inc
xchg
fsts
mov
jb
lahf
push
mov
std
push
add
pop
push
xlat
rcrb
mov
icebp
mov
sub
ja
inc
ss
aad
mov
outsb
gs
pop
mov
push
inc
push
mov
push
mov
cs
aam
gs
xchg
and
dec
popa
faddp
dec
and
pop
or
pop
adc
fcos
mov
mov
sbb
popa
push
jnp
sahf
jecxz
or
add
jns
xor
mov
pop
push
sbb
push
mov
scas
jae
or
fildl
clc
loop
inc
jns
test
sbb
js
mov
data16
push
adc
sub
push
mov
sub
mov
das
rclb
pop
maxps
pop
jg
ja
ret
movsl
mul
jmp
cli
movsl
out
xchg
mov
mov
inc
cmp
adc
pop
nop
cmp
pushf
cwtl
sub
xchg
and
lret
loop
insb
cmp
jge
cmp
and
and
xchg
xchg
in
shll
mov
mov
cmc
dec
and
mov
xor
dec
sahf
pop
aad
cmp
mov
add
jle
mov
and
adc
movsb
movsb
test
xchg
je
add
movsl
les
push
sub
xchg
mov
movsl
push
in
gs
mov
int
jge
xchg
notl
adc
mov
mov
movsl
pop
mov
ljmp
or
adc
mov
jbe
scas
xchg
movsl
call
rep
jmp
xchg
popa
mov
pop
je
movsl
jp
out
jg
clc
push
aad
aam
stos
sti
mov
mov
mov
mov
inc
popl
icebp
mov
xor
push
enter
cmpsl
cmp
mov
out
js
add
enter
shrb
shl
ret
and
movsl
imul
pop
push
pop
mov
mov
out
add
jmp
movsl
fmulp
clc
loopne
jp
mov
ret
pop
jns
aad
andl
in
and
test
fidivl
out
scas
cmpl
jbe
sahf
popf
andb
in
aas
lods
imul
movsl
lods
stos
adc
insl
pusha
adc
testl
push
pushf
stos
mov
lock
lret
lds
gs
dec
ficoml
push
adc
les
sbb
repz
iret
movsl
add
in
shrb
movsl
add
adcb
xchg
xor
into
movsl
pop
dec
mov
cmc
mov
pop
mov
movsl
jg
sbb
inc
mov
movsl
xor
test
movsl
mov
push
movsb
out
and
sub
cli
jle
xchg
jb
imul
dec
in
outsl
les
add
lods
movsl
lahf
fwait
xlat
pop
dec
pop
js
movsl
mov
sbb
jae
add
push
rol
push
xchg
mov
add
mov
aaa
jmp
test
sarl
movsl
test
xchg
es
stc
fimuls
jge
hlt
xchg
and
inc
leave
aas
das
mov
pop
clc
rcl
adc
movsl
xor
dec
fs
mov
pop
das
mov
xchg
scas
cmp
add
icebp
inc
sahf
dec
and
xchg
les
mov
rcll
in
add
scas
shl
adc
stc
dec
mov
mov
movsl
in
mov
sub
push
lret
movsl
in
or
dec
pop
outsl
xor
adc
mov
ja
repz
movsl
stos
mov
jne
xchg
js
pop
push
adc
adc
sub
jmp
sub
lahf
or
add
cmc
adc
je
aaa
movsl
adc
aas
xchg
jle
sbb
test
neg
xchg
xlat
pushf
cmpsl
in
pop
inc
mov
test
insl
xchg
stos
andb
jbe
lds
cmp
inc
popa
mov
jge
mov
or
jmp
inc
in
imul
movsl
xchg
lods
jg
mov
pop
in
dec
aad
mov
mov
sbb
scas
testb
rolb
test
mov
lret
into
mov
push
test
inc
daa
mov
scas
dec
or
shll
movsl
mov
nop
sub
xor
clc
sbbb
inc
in
push
lret
js
movsl
pop
or
jmp
mov
and
fbstp
sbb
inc
and
jns
adc
and
mov
hlt
cmp
mov
sub
aad
fdivrs
int
rcll
xchg
stc
add
cwtl
adc
movsl
jl
dec
bound
das
xor
test
loope
movsl
pop
pushf
or
pop
jp
mov
nop
sub
cmp
inc
mov
cld
std
sbb
mov
mov
mov
mov
sbb
lret
inc
aad
jge
jnp
xchg
into
adc
rcr
xchg
lret
hlt
pusha
insb
inc
and
in
add
movsl
and
cmpb
xlat
cld
pop
push
lea
std
mov
push
aam
inc
jae
inc
cmpsb
in
xor
dec
cltd
push
gs
arpl
mov
aam
fsubrs
push
data16
dec
fsubl
xor
mov
sbb
imul
jge
aaa
adc
mov
adc
js
lods
jl
or
aas
pop
jmp
test
test
movsl
nop
mov
xchg
frstor
adc
jp
movsl
inc
and
test
pushf
gs
flds
add
pop
out
mov
jecxz
dec
lds
fwait
pop
jae
jg
repnz
leave
je
add
add
fwait
mov
enter
mov
xlat
bound
xchg
push
gs
lds
movsl
sub
insl
enter
jbe
iret
and
sbb
lds
lea
push
xor
rol
dec
and
jmp
cld
cli
dec
movsl
pushf
lcall
and
ja
movsl
out
loop
mov
shlb
add
or
cmc
jns
push
cmp
inc
inc
xchg
xchg
in
imul
jl
push
mov
push
xchg
arpl
bound
and
xor
rcrl
push
cmpsl
sub
sbb
pusha
dec
loope
notb
shrl
or
mov
or
data16
pushf
and
xchg
in
adc
imul
sub
fwait
adc
leave
in
push
cmp
clc
add
sarb
sbb
push
movsl
stos
mov
add
sub
rcl
mov
lock
in
push
imul
add
cmp
inc
mov
inc
movsb
sub
pop
in
cmp
repnz
icebp
lods
in
lods
mov
dec
push
jl
jo
movsl
pusha
jno
add
movsl
push
enter
xchg
shld
pop
lea
insl
movsl
push
dec
fisttpll
psubd
sahf
push
sub
je
xchg
add
xor
stos
cmp
mov
or
adc
icebp
enter
adc
pop
call
xchg
sbbl
push
xorb
into
movsl
add
pushf
xchg
popa
xchg
and
sahf
ficoms
rep
cmpsl
psubusb
jl
sti
movsl
loop
ss
mov
data16
sbb
jne
cltd
cmp
mov
cmp
fs
notb
sub
fildl
pusha
test
fbstp
mov
jno
pop
sbb
mov
jmp
clc
push
sub
pushf
mov
lods
sbb
shl
inc
dec
cmp
stos
loopne
and
xchg
pop
jo
mov
lods
sbb
movsl
push
jbe
cmp
sub
rsm
or
xor
mov
movsl
lock
sub
jp
add
or
movsl
movsb
add
cmc
sub
movsl
mov
cltd
cmp
mov
dec
sub
bound
sti
movsl
mov
mov
push
adc
jp
pop
sbb
test
movsl
lods
popf
or
fwait
sbb
mov
sbb
lret
js
das
cmp
mov
movsl
lods
push
dec
lcall
iret
mov
dec
movsl
sbbl
movsl
jo
ljmp
mov
lods
lods
and
pop
dec
das
mov
push
je
mov
shlb
jg
loop
js
lods
enter
dec
loopnew
push
mov
mov
sahf
add
ja
movsl
orl
xor
loope
add
cmp
mov
adc
clc
movsb
ss
out
test
sbb
movsl
pop
xchg
loop
test
call
decl
mov
inc
movsl
add
popf
test
movsl
mov
xchg
sqrtps
movsl
jb
dec
pop
pop
adc
movsl
pop
jecxz
dec
addr16
scas
movsl
push
lods
cmc
pop
cltd
push
mov
iret
in
add
pop
xorb
jmp
xchg
sub
add
fisttpll
jbe
mov
jmp
into
jb
push
jns
mov
mov
push
pop
jle
mov
push
repz
jno
xchg
inc
and
movsl
stos
aad
sub
or
mov
shll
push
mov
cmc
adc
adc
pop
pop
push
mov
sub
arpl
cmp
mov
mov
mov
sub
pushf
jg
insb
shl
adc
dec
inc
lds
lcall
out
and
lods
mov
btr
pop
sahf
pushf
sbb
add
aad
je
add
dec
cmp
add
out
in
aas
cwtl
mov
mov
inc
movsl
xlat
fwait
mov
xchg
or
mov
mov
add
call
shl
iret
repnz
and
les
and
cmp
lret
popf
cmp
or
sbb
repnz
sar
mov
mov
ficoml
leave
stc
loope
mov
cmp
in
sub
popf
aaa
mov
pop
imul
dec
jnp
sbb
movsl
nop
inc
mov
cmpsl
or
aas
mov
call
pushf
sub
fldcw
mov
lcall
movsl
sbb
lret
pop
xlat
stos
mov
and
jb
dec
movsl
outsb
pop
mov
frndint
int
movsl
push
lahf
adc
pop
test
in
and
pop
xchg
cmc
out
jno
movsl
jne
test
insl
xor
lds
dec
mov
lds
lea
in
lahf
mov
cmp
out
inc
dec
orb
fcmovbe
mov
dec
mov
movsl
inc
testb
sub
stc
dec
cmp
adc
add
mulb
aad
shld
and
cmpsb
pushf
fadd
insb
xlat
popa
xchg
dec
fwait
pop
cmpsl
pop
mov
testb
loop
inc
jge
dec
movsl
hlt
mov
push
inc
jmp
movsl
loop
addr16
push
lds
push
idivl
add
pop
inc
testb
fnstcw
repz
das
movsl
out
and
and
xchg
test
sub
aaa
lods
cwtl
shll
mov
xchg
mov
insl
jle
cli
mov
sbb
mov
or
fistpl
enter
xlat
addr16
movsl
mov
ret
movsl
stos
xchg
mov
mov
lret
push
std
sarb
jbe
xor
sbb
shl
add
rolb
lret
jno
mov
psubsw
movsl
mov
orl
mov
icebp
std
pop
je
sbbb
inc
push
jno
outsb
stc
fsub
out
dec
movsl
dec
jl
cli
flds
dec
push
sub
pop
jae
daa
mov
xchg
mov
out
pop
cmpb
pushf
std
movsl
aad
filds
xchg
in
rolb
cmpsb
test
test
mov
dec
lock
dec
and
adc
mov
mov
xor
jmp
jnp
jle
jecxz
stos
cld
out
movsl
mov
adc
fldenv
movsl
idivl
pop
adcl
jnp
into
movsl
negb
mov
add
and
pop
push
mov
cld
jno
fsubr
gs
xchg
mov
xor
addr16
sti
call
adc
sub
mov
and
sub
pop
lock
leave
orb
push
das
mov
nop
inc
cltd
movsl
xchg
aad
aam
clc
mov
xorb
push
outsl
addl
in
jns
xor
jmp
mov
sti
xchg
out
cli
jb
lahf
jmp
jge
add
imul
mov
movsl
fs
push
in
loopne
mov
mov
fstpl
pop
xchg
mov
into
push
aam
mov
cli
pop
jno
push
push
xor
aad
fbld
mov
xor
in
test
push
movsl
cmp
jmp
movsl
sub
out
stos
pushf
cmc
mov
je
mov
in
push
mov
movsl
test
in
add
pop
mov
aad
xchg
dec
outsl
mov
push
jl
movsl
lock
int3
mov
test
inc
in
out
mov
sub
movsl
daa
or
ret
pop
jmp
fists
xchg
pop
dec
lcall
mov
mov
lret
icebp
movsl
movb
ja
pop
or
cmpsl
stos
movsl
mov
dec
movsl
mov
jp
mov
rcl
pop
imul
aad
dec
ds
out
out
adc
cli
xchg
mov
ffree
xlat
call
xor
sub
rorb
xchg
or
lds
add
mov
push
jmp
adc
adc
repnz
rcr
mov
mov
adc
mov
lds
mov
pop
lods
mov
inc
jl
nop
mov
pop
jbe
jmp
cmc
pop
adc
mov
lea
pusha
aaa
mov
lds
dec
incb
jnp
pop
movsl
inc
test
nop
xchg
mov
mov
mov
xchg
sub
add
jle
inc
mov
popa
addl
mov
fcomp
repnz
inc
movsl
jg
out
psubsb
push
lods
pop
dec
in
pop
push
dec
fld
mov
faddp
loopne
dec
js
push
rorl
mov
movsl
inc
addr16
neg
fldl
out
adc
ds
mov
inc
add
mov
test
les
movsl
in
into
ret
rorl
mov
mov
movsl
popf
loop
loope
cmpl
xor
pop
pop
lods
movsl
sbb
and
sub
cmpsb
sbb
dec
loope
sub
xchg
xor
push
pop
push
lea
push
shr
out
popa
push
imul
movsl
ficomps
jl
popf
mov
push
loop
icebp
mov
push
cmc
les
imul
dec
adc
leave
mov
andb
or
loope
mov
or
ds
out
push
mov
cmpsb
adc
lea
stos
xchg
sub
lock
rcr
jb
push
ss
cmp
push
rcrl
hlt
mov
pusha
imul
pop
pop
imul
jb
and
out
les
pop
jbe
shll
inc
adc
test
aaa
popa
sarb
mull
orb
adc
sqrtps
pop
mov
loopne
pop
cli
movsl
sbb
xchg
inc
fs
push
xchg
test
movsl
lret
repnz
mov
rol
push
jl
movsl
xchg
sbb
add
push
mov
xlat
movsl
mov
inc
and
out
adc
and
cltd
cmp
vrcpps
mov
shr
imul
outsl
push
mov
inc
int
fmul
add
cmpsb
mov
mov
mov
ljmp
movsl
xchg
int
cli
std
sbb
xor
arpl
adc
ficoms
jns
in
imul
mov
movsl
test
push
jl
push
push
mov
mov
push
lret
ljmp
sbb
push
mov
pop
mov
fstpl
stos
mov
repnz
cmp
jg
fcomps
clc
stos
in
bswap
out
mov
stos
ret
sbb
hlt
orl
pop
movsl
mov
dec
enter
fucomip
loopne
adc
mov
mov
adc
add
rcrl
adc
mov
dec
std
shl
mov
jbe
lds
loope
popf
cmc
fwait
pushf
sub
push
stos
jp
mov
idiv
int
addr16
mov
cmpsb
in
rcl
cmp
inc
scas
xchg
cmp
add
push
jno
bound
mov
pop
in
pop
insl
or
jo
sbb
repnz
jp
out
hlt
arpl
mov
add
push
loope
xchg
xchg
aaa
pop
fs
pop
push
scas
out
mov
pushf
sbb
movsl
cmpsb
lahf
fists
and
rcr
jno
lds
sahf
push
dec
or
movsl
xchg
movsl
stos
inc
mov
dec
movsl
mov
out
xchg
cltd
sahf
shlb
test
adc
inc
movsl
jge
ds
push
mov
bound
mov
mov
lods
mov
mov
sub
mov
in
fcmovne
aaa
and
lods
cmpsb
bound
lret
out
sub
and
xor
xchg
les
jle
mov
cmp
or
push
jmp
bound
jge
xor
movsl
cs
cltd
push
cmp
test
add
sahf
icebp
mov
xor
and
movsl
cld
push
out
pop
push
stos
or
mov
dec
xor
mov
mov
fs
pop
jp
add
cwtl
xor
sub
pop
mov
adc
jge
xchg
pop
aas
cmp
pop
stos
clc
test
movsl
fcmovnb
pop
pop
jns
push
imul
add
xor
and
push
and
pop
jp
movsl
test
popa
sbb
aaa
or
and
cmp
mov
jg
or
xchg
stos
adc
mov
neg
call
in
or
stos
dec
mov
xor
aaa
stc
movsb
add
pusha
sub
test
mov
imul
mov
xchg
loop
ljmp
pop
push
sbb
push
fwait
loop
shrb
push
pop
jmp
dec
cmc
outsb
in
sub
jne
xchg
shll
pop
or
popa
mov
loope
repnz
lret
sar
movsl
jo
inc
cli
add
mov
repz
cmc
add
xor
push
test
dec
cs
movsl
xor
fs
scas
lods
cwtl
stos
jecxz
add
insl
movsl
dec
pusha
mov
sahf
lods
cmpb
nop
adc
adc
sbb
sbb
repz
into
inc
test
mov
into
adc
push
jne
loop
lret
pushf
cmp
xor
xchg
daa
addb
arpl
int
in
repz
push
test
fldl
loop
sbbl
ja
in
xlat
push
push
jbe
pop
sbb
test
dec
xchg
pop
mov
test
out
cmp
mov
aam
pop
mov
leave
push
lahf
mov
pop
out
ja
ror
or
xor
cmc
loopne
sub
hlt
mov
in
movsl
in
pusha
mov
outsl
test
mov
pop
cltd
push
flds
stc
movsl
inc
fstpl
add
scas
pop
dec
movsl
out
mov
mov
add
orb
sbb
pop
push
popa
jo
jge
jle
adc
jmp
cs
mov
cwtl
cmpsl
or
out
addr16
std
push
imul
in
push
sub
mov
test
popa
sbb
xlat
test
movsl
scas
out
mov
cld
enter
dec
out
insl
inc
sub
mov
hlt
out
loop
or
pop
xlat
movsl
pop
push
movsb
cwtl
nopl
int
cld
leave
test
movsl
or
sbb
lds
test
mov
sar
std
pop
jns
inc
fs
sub
jo
in
jecxz
filds
movsl
push
rorl
sub
jge
lods
scas
pop
movsl
jb
loope
dec
jo
sbb
mov
mov
movsl
or
pop
je
pop
fsub
andb
xchg
movsl
ds
add
xor
xlat
in
cmp
test
sbb
clc
lds
adc
push
pop
fsts
stos
adc
sahf
cmp
imull
shll
ret
movsl
mov
lahf
mov
movsl
aaa
or
fdiv
or
les
fcmove
push
aas
cmc
push
mov
jle
out
lea
push
cmp
mov
push
sti
sub
push
cmp
loop
aad
lret
jle
fistps
and
ja
dec
test
shlb
shll
int
jg
mull
jge
jno
mov
mov
in
xchg
mov
mov
mov
or
lds
lea
mov
aas
das
xchg
and
fcomi
movsl
int3
sahf
fldl
mov
push
movsl
in
cmp
xchg
jo
mov
in
pop
mov
daa
and
in
rolb
outsb
add
in
stc
push
call
outsl
fisubs
adc
dec
fldcw
dec
jmp
mov
shl
imul
jge
out
xchg
sbb
pop
cmp
mov
mov
mov
scas
sahf
dec
testl
adc
add
outsl
lds
dec
cmp
leave
mov
xor
mov
add
lret
adcb
js
notl
movsl
ficoms
mov
mov
jnp
mov
xor
pop
les
les
push
rcrl
push
fisubs
push
xchg
lret
ret
push
test
movsl
add
pushf
pop
shr
repz
jmp
jo
in
jecxz
adcl
jb
outsl
fstps
iret
mov
outsb
imul
lods
push
jp
sbb
movsl
ja
jg
xor
aam
insb
push
out
sahf
out
sub
mov
push
cmp
adcb
ljmp
lret
rcrl
movsl
les
stc
popf
push
push
sbbb
lods
pop
pop
adc
in
sbb
les
mov
mov
cmp
shl
fnsave
jl
adc
mov
mov
popf
cmp
enter
push
xor
or
mov
mov
mov
mull
mov
push
cmp
sar
mov
fcoms
or
mov
mov
testl
pop
push
cmpsl
test
mov
cmpsb
movsl
movsb
cmp
test
push
repz
pop
jmp
movsl
pop
cmp
mov
insb
xor
movsl
xchg
sbb
mov
movsl
push
leave
and
pushf
mov
rorl
test
cld
jmp
mov
mov
pop
mov
adcl
adc
xor
xchg
lods
loop
add
push
xchg
fs
shll
clc
pop
or
movsl
cmp
out
cmp
mov
mov
lcall
mov
movsl
cmpb
or
pop
pop
movsl
call
inc
fsubrl
xchg
cwtl
or
adc
testb
int3
movsl
xor
pop
inc
mov
sahf
scas
enter
js
pop
cmpsl
ret
sbb
mov
or
xchg
aas
inc
shlb
test
sub
test
movsl
fucom
inc
mov
or
loopne
sbb
lret
add
pop
out
repz
movsl
cmp
icebp
dec
cwtl
bound
pop
mov
push
subl
pop
and
mov
or
movsl
jp
scas
or
inc
sti
in
mov
outsb
mov
shrl
xchg
ja
loope
push
movsl
outsl
movsl
inc
test
nop
rcrb
out
int
jle
lcall
inc
lds
pusha
mov
popf
mov
push
loop
mov
sar
jb
or
fldl
fdiv
movsl
es
fstl
sahf
cltd
imul
in
nop
cmp
sub
and
pop
movsb
sub
lea
rcrl
mov
fidivs
dec
mov
je
and
scas
push
fbld
addr16
inc
jnp
dec
inc
push
pop
pop
xchg
shrl
popf
lcall
dec
mov
dec
pop
mov
jmp
fldcw
cmc
xor
xchg
push
rolb
das
scas
hlt
add
stos
xor
xchg
idivl
mov
cmp
mov
adc
or
xchg
imul
inc
repz
push
pop
lock
movsw
jo
hlt
jle
mov
lods
and
leave
push
and
cmp
mov
or
insl
mulb
cmp
shll
xor
les
xchg
cmp
mov
xchg
rcrl
inc
js
aad
stos
scas
movsl
add
inc
shlb
add
aad
adc
mov
fldt
mov
pop
dec
movsb
ret
sub
hlt
xlat
pop
mov
mov
xchg
cs
push
pop
lea
mov
inc
jp
or
sub
call
jecxz
idiv
jne
push
js
push
lret
dec
inc
inc
rclb
and
xchg
xlat
lods
movsl
std
xorb
hlt
and
pusha
shl
add
xchg
add
mov
add
xchg
and
xor
sti
pushf
shrl
and
xchg
or
in
push
and
xorl
ror
jmp
movsl
mov
jecxz
jnp
xchg
lea
jp
loopne
movsl
and
sub
jge
pushf
je
movsl
cmp
mov
shl
into
sub
shlb
and
insb
arpl
lcall
xorb
ud2
insl
orb
ds
loope
inc
mov
iret
mov
mov
xor
stos
and
or
cld
std
xchg
movsl
push
ret
call
push
or
mov
mov
movsl
push
dec
dec
cmp
xchg
fwait
movsl
imul
or
pop
mov
push
add
shr
mov
or
das
lods
arpl
mov
mov
dec
dec
or
rolb
pop
stos
imul
mov
mov
insl
fnstcw
data16
repz
push
sub
mov
movsl
cltd
sahf
call
pop
movsl
jne
loop
inc
push
or
pushf
cli
fistpll
or
or
xchg
aam
inc
mov
das
xchg
push
pop
inc
sbb
inc
push
in
inc
test
lcall
pop
test
cwtl
sub
into
lcall
inc
bound
lds
inc
xor
xchg
icebp
jo
mov
addr16
idiv
insl
imul
push
cmc
fisttpll
jbe
fisubs
in
insl
add
sti
cmpsl
dec
jbe
rcrl
mov
scas
sbb
or
inc
lods
xor
sub
cmpsl
xor
push
lahf
sub
inc
in
and
add
in
xor
mov
int
xor
pop
and
push
push
inc
jo
inc
jp
insb
add
mov
fnsave
jb
movsl
jl
insl
jge
or
movsl
xor
outsl
push
btl
pop
mov
int3
lret
pop
inc
outsl
sub
pop
push
push
mov
cmc
lahf
mov
xchg
in
sti
loope
repnz
movsl
and
test
movsl
rcrl
movsl
out
js
cmpsl
mov
cmc
cmpsl
add
out
push
lods
sub
fldt
dec
adc
sub
mov
in
mov
jno
cmp
sub
xchg
jb
testl
xchg
push
mov
sbb
mov
jmp
movsl
xor
jae
push
push
mov
movsl
mov
cwtl
jbe
or
mov
xchg
stos
in
cmpsb
or
movsl
xchg
or
jecxz
push
mov
test
cmp
pop
rolb
adc
push
cmp
movsl
and
or
pop
bound
cmc
mov
cs
xchg
fstpl
sub
push
shlb
sub
movsl
iret
in
bound
xchg
mov
ret
into
cmp
and
sbb
stc
movsl
loopne
add
mov
pusha
sub
mov
cwtl
orb
outsb
movsl
dec
mov
adc
sbb
mov
adc
aaa
mov
andb
xor
cli
movsl
dec
push
add
adc
rcrl
push
sbb
adc
popf
cld
pop
fidivl
cwtl
cltd
shlb
ljmp
dec
popl
jmp
mov
nop
mov
lods
movsl
pop
mov
jbe
outsl
stos
adc
aaa
in
fisubl
divl
jnp
xchg
movsl
inc
lahf
inc
xchg
sub
jne
movsl
fdivp
adcl
xchg
xlat
dec
pop
movsl
pop
shl
push
stos
adc
push
cmpsb
mov
fldl
movsl
xchg
aas
rolb
and
mov
sahf
push
cmp
fwait
cmp
mov
mov
lock
dec
movsl
fsubl
xlat
cli
sahf
dec
clc
int
movsl
sbb
sub
icebp
xor
sti
pop
aas
data16
mov
out
jle
mov
mov
ljmp
addl
push
movsl
imul
add
movsl
mov
pushf
jecxz
push
pop
fiadds
xchg
and
dec
loope
dec
movsl
ljmp
xchg
xchg
das
sub
adc
inc
ret
mov
sbb
or
jl
pop
dec
insl
sub
sub
push
addl
mov
inc
daa
test
movsl
in
cli
dec
push
movsl
add
cmpsl
mov
sahf
sbbl
xchg
shll
movsl
mov
pop
or
mov
pusha
pop
pop
andb
adc
int3
sbb
into
inc
cmpsb
mov
movsl
add
shrb
push
jmp
loop
add
int3
sbb
add
shl
rep
mov
cmp
adc
stos
mov
dec
cmc
je
ljmp
scas
jno
lcall
aam
movsl
dec
or
push
or
in
mov
jne
cltd
sbb
imul
cld
cs
xchg
pop
or
int
mov
sarb
mov
mov
xchg
pop
pop
add
in
cmc
repz
int3
mov
ljmp
jne
push
push
adc
arpl
enter
mov
movsl
shrb
ret
add
fs
pop
test
mov
lds
push
push
push
lret
insl
mov
ret
adc
xchg
pop
mov
push
jle
sub
movsl
lret
in
pop
cmp
jp
mov
into
lea
jnp
adc
push
mov
push
pop
stos
lret
mov
xchg
sub
push
mov
push
and
jl
sbb
add
xor
movsl
test
add
push
xchg
adc
mov
inc
stos
pop
pop
xor
popf
lcall
int
mov
out
movsl
inc
mov
mov
xchg
mov
outsb
inc
divl
in
ret
in
out
aam
hlt
loope
sbb
movsl
inc
addr16
and
aas
mov
mov
leave
imul
lret
out
lock
bound
leave
cmc
enter
mov
xor
clc
inc
loopne
decl
clc
pushf
mov
add
out
pop
xor
test
mov
add
push
mov
sbb
add
ret
xchg
mov
adc
pop
ret
fdivs
xor
rcll
movsb
adc
xchg
fdivrl
movsl
out
jmp
add
inc
lds
cs
stos
pop
movsl
add
shl
mov
shrl
cwtl
mov
push
lahf
mov
dec
cmpsb
push
pop
inc
and
lds
mov
out
popa
pop
jge
and
mov
or
clc
ss
in
rol
add
dec
movsl
imul
push
movsl
pop
pop
jnp
jns
les
xchg
movsl
jecxz
xor
mov
push
test
xchg
jno
dec
fldl2t
repnz
mov
sbb
inc
mov
outsb
sbbl
mov
adc
ret
leave
push
in
pop
lock
in
out
rorb
test
add
lahf
mov
movsl
stos
mov
aas
inc
popf
dec
xor
lea
jmp
pop
mov
cwtl
dec
movsl
mov
or
adcb
xor
add
pop
sub
rcl
xchg
je
cmpsl
xor
mov
sbb
testb
cmp
adc
or
xor
jmp
and
test
push
int3
and
stc
stos
sbb
inc
and
in
std
mov
test
and
popa
popa
mov
ret
xor
xchg
mov
fidivrs
jecxz
mov
pop
add
clc
jbe
cmpsl
cmc
xchg
in
push
fdiv
xchg
imul
lds
sar
fdiv
jmp
pop
jb
insl
movsl
xchg
jge
pushf
xor
mov
mov
adc
mov
inc
push
add
xlat
neg
mov
jo
test
out
cmp
dec
movsl
stc
add
test
pop
in
cmp
and
movsl
dec
test
mov
mov
into
movsl
clc
and
inc
es
or
mov
adc
sub
movsl
push
lods
sbb
movsl
adc
sbb
pop
shr
ror
cwtl
mov
mov
adc
mov
sub
sbb
xchg
stos
jmp
add
ret
out
add
popf
push
in
mov
add
xor
call
mov
pop
sub
int3
fadds
pushf
cli
dec
adc
mov
mov
aad
flds
jne
popf
int
cwtl
xchg
and
and
jg
lcall
add
push
das
mov
icebp
sbbl
in
mov
iret
add
mov
das
xchg
movsl
xchg
sbb
pop
jmp
inc
dec
in
or
push
fsubrl
repz
jle
sbb
xchg
cmpsl
mov
fs
and
adc
add
repz
mov
imul
push
out
sbb
stc
xor
test
mov
popf
dec
mov
push
cmpsb
push
adc
sbb
ret
mov
fstpt
fucomp
out
movsl
insb
cmp
or
xchg
jmp
mov
mov
mov
divb
or
cmc
ffree
adc
es
stos
cmp
mov
mov
aam
and
movl
fbld
cmpsb
push
mov
mov
in
shrb
dec
movsl
xadd
push
fldl
jge
add
xor
jbe
in
dec
aaa
out
rorb
movsl
int3
pop
addr16
mov
jle
lods
and
mov
in
icebp
out
mov
popa
in
aad
pop
movsl
mov
cmpsl
xor
movsb
mov
push
xchg
push
int3
lea
mov
sbb
lds
cmpsb
outsb
push
test
push
pusha
mov
lret
and
in
loope
movsl
fmuls
pop
dec
sbb
xchg
mov
aam
and
sub
pop
jno
pusha
rcll
dec
cmp
repz
enter
push
dec
push
loopne
mov
pop
pop
movsl
inc
jne
jno
xchg
push
movsb
movsl
aad
lahf
sub
movsl
maxps
add
jmp
andb
rep
mov
add
je
shl
dec
jns
push
data16
sub
es
xchg
jbe
lret
fstps
stos
stos
dec
mov
jle
lods
int
mov
pop
sbb
out
add
jmp
ret
sbb
xor
cltd
sub
cmp
dec
xlat
bound
sbb
cli
xchg
fsubl
sbb
mov
or
cmp
jl
cwtl
sbb
fstpt
testb
mov
div
stos
fistl
xchg
mov
inc
xlat
pop
push
ljmp
xchg
std
gs
sbb
gs
jge
dec
mov
mov
sub
iret
imul
dec
scas
push
stos
and
rcrb
pop
sbb
orl
add
inc
les
ret
stos
sub
inc
shlb
movsl
pop
aam
cs
xchg
inc
mov
adc
cmpsb
push
push
or
fcomps
adc
or
loop
inc
cmpsl
dec
insb
and
int
sbb
std
lds
jae
pushf
jo
stos
or
icebp
cmp
cwtl
int
mov
xlat
mov
mov
or
test
sti
push
scas
out
xor
popa
sub
cmc
jae
adc
movsl
sbb
mov
xchg
daa
rcrb
aaa
bound
adc
lea
adc
xor
xchg
push
push
popa
jne
push
pop
xchg
mov
mov
fmuls
in
pushf
out
dec
ja
popf
icebp
imul
fstpl
mov
lds
je
ljmp
add
je
adc
sbb
sub
lcall
popf
push
popf
jno
pushw
pop
popl
in
sub
or
stc
sbb
sahf
aas
and
sub
mov
xor
xor
fmuls
mov
fwait
inc
sbb
test
stos
cmp
mov
arpl
sbb
icebp
ja
mov
add
push
xor
sbb
cmc
jbe
jle
cmp
inc
and
inc
mov
test
jl
ss
dec
pop
mov
sub
dec
push
sbb
in
or
jo
rolb
sbb
lods
bound
nop
cwtl
adc
adc
cmc
fsts
mov
push
inc
pop
outsl
xchg
cmpsb
repz
cmpsb
xchg
sbb
mov
and
inc
inc
mov
jle
mov
mov
xor
popa
adc
mov
xor
xchg
ds
mov
test
sahf
loopne
movsl
orl
fsubs
iret
clc
push
sahf
mov
add
call
pop
mov
test
insb
movsl
sbb
pop
sub
movsl
aaa
sbb
adc
clc
int
test
xlat
xchg
mov
pop
int3
pop
lds
movsl
aam
sbb
mov
movsl
pop
jp
aas
mov
ds
sbb
das
adc
lods
jae
pop
inc
cltd
ss
mov
push
hlt
sbb
xchg
shll
out
push
movsl
or
add
push
movsl
add
push
popa
mov
ljmp
push
fdivrl
mov
mov
xor
cld
add
add
mov
sbb
and
cmp
lea
lods
or
js
dec
std
movsl
fcmovu
add
pop
jnp
ret
aad
sub
fxch
jge
lods
sahf
rcrl
cmc
mul
enter
sub
sbb
fdivrl
jae
test
mov
mov
sbb
in
push
and
mov
push
pop
mov
cld
dec
push
outsl
ret
shll
lcall
xchg
cwtl
test
cmpsl
sbb
movsl
pop
xchg
out
fistl
ret
adc
and
aam
pop
sub
and
fiaddl
dec
sub
in
xchg
fmuls
pop
leave
jge
inc
mov
jmp
push
xchg
cmp
or
cld
dec
add
popf
sahf
adc
aam
in
movsl
mov
push
jo
xchg
into
jmp
lods
movsl
dec
mov
cmp
lods
call
lahf
imul
ficomps
rcl
in
int3
lret
dec
mov
mov
out
stos
sub
xchg
mov
test
lea
fxam
stc
push
add
les
mov
aas
gs
mov
lret
xor
in
aad
scas
or
rol
mov
adc
push
sbb
mov
fs
push
or
aad
inc
inc
dec
mov
or
int
jmp
leave
std
adc
xor
xchg
push
and
jge
lret
das
push
in
push
movsl
jae
push
ja
mov
push
movsl
mov
shr
add
out
je
mov
mov
inc
lcall
outsl
and
std
stc
in
loopne
cmp
iret
int
pop
icebp
cmp
sub
daa
repz
xchg
xor
aaa
cli
xchg
sub
xchg
ja
movsl
imul
movsl
out
mov
mov
push
mov
or
pop
ljmp
sbb
dec
mov
rorb
mov
aaa
mov
leave
mov
movsl
mov
sub
sbb
lret
adc
jno
cmpsl
mov
inc
mov
push
js
and
movsl
or
mov
add
ficoml
sbb
lds
loopne
pop
lods
insb
mov
pop
pusha
movsl
jnp
movb
in
cmc
pop
movsl
pop
push
stc
push
mov
fbld
in
dec
in
dec
mov
sti
cwtl
call
in
mov
movsl
push
pop
imul
add
imul
cmc
cmpsl
mov
pop
imul
mov
xchg
loopne
movsl
fildl
mov
cmp
lea
mov
and
pop
cwtl
and
mov
mov
es
test
fistpl
xchg
mov
push
and
mov
sub
pop
in
sub
iret
cmp
enter
jbe
nop
push
push
cpuid
mov
jl
pop
lods
aad
mov
inc
mov
cmpsl
pop
mov
stos
xor
jnp
sub
xor
mov
xchg
mov
or
cmc
insb
cmp
pop
jecxz
add
imul
xor
out
sub
pop
movsl
xchg
in
shr
neg
jb
jecxz
loope
into
jg
pop
mov
xchg
int3
jl
lods
adc
sahf
cmp
stos
mov
fwait
aad
pop
mov
js
sbb
frndint
mov
clc
cli
cmp
or
stos
push
scas
aad
incl
filds
rorl
fistl
adc
mov
andl
inc
iret
jb
cli
dec
test
ret
in
in
clc
js
inc
pushf
xor
mov
sub
xor
fistpll
add
movsl
adcl
js
fstpl
mov
in
cmc
xlat
outsl
pop
movsb
dec
dec
gs
pop
adc
fmul
push
lds
cmpsb
call
sbb
dec
vpshufhw
xchg
mov
cltd
fwait
inc
or
pop
cli
movsl
lcall
lds
lock
movsl
out
add
leave
xor
lret
js
fcoms
insb
push
dec
mov
cwtl
lcall
movsl
mov
xor
sub
les
mov
daa
mov
push
outsb
push
xchg
sub
push
test
mov
and
dec
xorb
mov
xor
addr16
inc
sbb
imul
xchg
in
dec
or
js
push
mov
jle
movsl
jmp
mov
sbb
add
pop
gs
dec
mov
jae
mov
sub
stos
dec
ss
xlat
pop
sbbl
ja
push
push
sahf
or
xor
jb
movsl
jge
outsb
inc
mov
popa
sbb
movsw
pop
xchg
fnstsw
movsl
jecxz
shlb
add
mov
xchg
into
flds
sbb
cwtl
sbb
hlt
cmp
push
aam
jp
jmp
mov
rorl
fnstsw
sub
xor
daa
pushf
aam
lock
pushf
jecxz
pop
in
int3
movsl
sbb
or
loope
ljmp
bound
lds
xor
aam
jae
int
loope
movsl
popa
subl
jne
clc
outsl
out
sub
loope
mov
jno
or
mov
xor
push
xchg
movsl
pop
jge
mov
xchg
mov
or
add
movsl
hlt
bswap
clc
divb
jmp
jg
dec
insb
movsl
inc
in
dec
fdivr
aas
hlt
mov
jl
arpl
mov
popa
inc
xchg
stos
aaa
popa
cld
mov
pop
mov
mov
dec
sbb
mov
fcomi
xchg
mov
cmpsb
xchg
stos
push
scas
in
mov
cmp
int3
pop
jnp
dec
push
cmp
cmp
pop
mov
mov
mov
fsubrl
add
or
xchg
cmp
mov
lods
movsl
or
subb
sahf
rorl
and
inc
push
sbbl
fmull
pop
in
add
inc
lods
movsl
stos
or
fsubr
jno
mov
inc
cmpsb
jle
xlat
sbb
push
push
mov
cmp
mov
jmp
mov
inc
ret
inc
cltd
movsl
fucom
push
xor
cmp
fimuls
push
test
mov
add
push
sbb
lods
fwait
inc
jmp
jecxz
pop
stos
adc
insb
push
xchg
cmc
les
mov
loop
es
pusha
out
in
xor
iret
cmp
adc
test
movsl
lea
ret
clc
xchg
movsl
je
pop
jnp
pop
outsl
inc
xchg
dec
mov
xor
dec
jl
out
mov
lods
inc
dec
mov
pop
test
jnp
in
mov
xchg
movsb
mov
orl
inc
outsb
pop
mov
sbb
dec
mov
pop
icebp
int3
push
out
in
jle
add
orl
jns
jmp
repz
mov
or
push
pushf
into
mov
dec
jbe
mov
rcl
xor
aad
stos
inc
xchg
popa
movsl
test
jo
cmp
sbb
sub
iret
and
push
push
mov
fdivrl
loope
jae
sub
add
sar
fldl
aad
jne
cmc
add
rcll
lock
cmc
jbe
mov
inc
mov
or
movsl
or
and
jns
mov
xchg
daa
sub
and
loopne
cs
adc
movsb
inc
icebp
hlt
xchg
sbb
leave
aaa
sbb
sub
icebp
in
or
adc
mov
mov
outsb
mov
cmpsb
scas
cmc
fstpl
xor
mov
in
std
mov
loop
in
stos
out
xchg
clc
mov
sbb
fmuls
or
icebp
push
icebp
aas
out
sbb
push
in
cmp
or
mov
jg
pusha
mov
aas
cmpsl
stos
loope
sub
rcrl
push
jl
fldlg2
push
dec
movsl
aad
sysexit
lahf
es
cmc
movsl
js
ret
mov
pop
leave
add
pop
popa
movsl
call
outsl
sti
inc
movsl
xchg
je
pop
in
fmuls
cmp
xor
mov
iret
add
or
pop
sahf
arpl
jae
or
xlat
in
inc
push
jmp
mov
iret
test
jp
sti
or
daa
sbb
mov
jge
mov
std
push
mov
mov
xchg
pmulhuw
inc
ja
mov
fnstcw
vpsubusw
mov
out
movsb
mov
leave
mov
jne
in
repnz
jbe
loop
jg
out
mov
pop
jg
lcall
sub
stos
insb
fucomp
in
lret
movsl
das
mov
push
inc
push
push
inc
fidivl
dec
movsl
sbbb
fidivs
push
ss
loop
and
push
imul
leave
cmc
movsl
and
dec
in
xchg
mov
repnz
jmp
mov
cwtl
xchg
leave
xor
ljmp
sbb
movsl
adc
adc
movsl
sub
daa
stos
and
popa
jp
clc
movsl
sub
xchg
lea
popf
lds
in
test
in
movsl
icebp
aam
jb
fdivrs
lcall
sbb
mov
rcll
jnp
adc
cmpsb
add
add
xchg
movsl
pusha
or
movsl
aad
hlt
neg
add
pop
mov
bound
aad
call
repnz
imul
cmp
sbb
add
mov
out
mov
popf
lahf
lods
xchg
cmpsl
pusha
fists
decb
movsl
jl
into
loop
pushf
movsb
shll
repnz
push
js
rcll
xchg
inc
imul
jp
gs
cmp
rcr
jo
sub
jmp
cmp
mov
sub
mov
xchg
lds
pop
scas
movsl
xchg
mov
push
xchg
mov
or
fcmovu
mov
leave
shld
cmp
lcall
xchg
imul
ss
mov
adc
pop
adc
aas
hlt
mov
shll
mov
mov
sbb
dec
movsl
and
ds
fistps
cmp
adc
pop
out
adc
imul
pushf
mov
rol
mov
xorb
mov
cmp
jno
stos
mov
xchg
adc
jmp
lds
mov
lcall
jmp
sbb
fisubs
cld
sub
and
mov
pop
insl
mov
and
fs
movsb
jae
jbe
mov
movsl
pop
xor
and
movsl
mov
js
pop
xor
out
into
mov
rcrl
push
cmpb
push
movsl
out
cmc
rolb
mov
aaa
pushf
push
ljmp
or
and
mov
pusha
lods
int
das
popa
movsl
test
cmpl
std
sbb
mov
cmc
xor
xor
or
std
cli
mov
inc
std
mov
lea
clc
aam
push
outsl
pop
cld
inc
or
sub
int
rcrb
movsl
ret
out
mov
outsb
jns
js
lea
hlt
pop
mov
pop
cmp
add
cmc
aad
push
aam
imul
inc
dec
jge
insb
or
mov
movsl
dec
dec
insl
pop
jmp
pop
movsl
mov
mov
mov
fstps
mov
dec
mov
ljmp
cltd
cmpsl
addb
pop
sbb
in
mov
cld
pop
jge
pusha
cmc
cmp
stc
xchg
movsl
push
mov
int
movsl
sbb
add
andl
test
xchg
mov
movsl
jp
es
and
scas
cli
fstpl
mov
cmpsb
loopne
sbb
in
sub
fcoml
push
and
sub
cmpb
rclb
repz
cmp
movsl
or
mulb
into
cmc
movsl
mov
xchg
fldenv
inc
cltd
adc
cmpsb
push
stc
fildll
pop
loop
call
int
in
loope
dec
inc
gs
shr
fsubrp
in
filds
fstl
lds
aad
movsl
mov
sbb
movsb
movsl
mov
aas
push
xchg
xor
fsub
loopne
sub
add
popf
sub
iret
push
movsl
or
out
scas
in
push
int
push
je
movsl
mov
lds
pop
dec
aad
push
sahf
scas
shll
cmp
iret
cmc
out
mov
xchg
jg
cmpsl
int3
mov
push
inc
cs
mov
test
sub
dec
repz
in
and
adc
push
in
cld
lret
xlat
in
cmp
xor
cmpsb
jne
sub
leave
dec
movsl
pop
std
lgs
or
xchg
les
add
mov
dec
shll
ja
imul
sub
or
ret
and
cmp
ljmp
lcall
clc
mov
rolb
mov
popa
mov
pop
movsl
pop
inc
popf
test
mov
movsl
jo
sbb
out
gs
fdivrl
test
aaa
mov
xor
movsb
movsl
push
mov
cld
add
out
sub
ljmp
cs
daa
push
mov
cmpsb
into
icebp
and
add
mov
adc
mov
arpl
imul
mov
jmp
movsl
sti
dec
push
jl
cmpsl
jmp
or
ficoms
test
xchg
mov
pop
push
in
testl
movsl
adc
mov
fistl
mov
and
mov
js
icebp
test
sub
pop
sahf
sbb
push
push
inc
jmp
push
mov
xor
xor
std
movsb
or
fwait
lock
jg
mov
xchg
ficoms
nop
cmp
xchg
stos
sbb
sahf
xor
icebp
loop
jo
aas
sub
movsl
jbe
loope
lea
movsl
and
push
cmp
dec
jb
fs
push
or
scas
cmp
mov
adc
adc
outsb
out
in
icebp
movsl
mov
lcall
add
xor
sbb
sar
mov
mov
call
mov
fndisi(8087
xchg
hlt
sbb
mov
ret
shll
decb
out
adc
stos
ret
movsl
mov
cmpsl
sbb
push
inc
hlt
inc
sub
push
dec
ja
mov
sbb
in
and
and
adc
in
lret
mov
movsl
rorl
outsl
movsl
push
add
adc
test
push
sub
roll
pop
icebp
sarb
movsl
pop
dec
lock
push
movsl
arpl
test
push
fucomip
cmp
test
pop
sbb
cltd
orl
in
nop
mov
cmc
fs
outsl
push
push
inc
ja
imul
dec
loope
add
jnp
movsl
nop
xlat
cmpsb
ss
jns
ds
mov
jle
fwait
movsl
sbb
lahf
fcmovnu
pop
sub
xor
jnp
mov
or
andb
js
subl
mov
and
cmpsl
mull
dec
inc
sub
push
and
int3
jbe
mov
jno
cmpsl
inc
in
pop
movsl
dec
jo
xlat
hlt
or
mull
inc
jnp
cmp
shl
subl
arpl
mov
pusha
std
jne
mov
in
pop
movsl
jle
jp
sbb
iret
mov
call
movsl
and
push
inc
mov
pusha
lods
xchg
neg
test
mov
mov
movsl
leave
call
out
movsl
jecxz
push
jb
mov
or
lock
sti
movsl
dec
push
cmpsw
add
loopne
cmovb
dec
cmp
sub
mov
cmp
sahf
sub
inc
daa
jge
mov
jmp
andb
aad
js
and
sbb
sbb
sahf
cmp
std
jbe
lea
in
sbb
out
inc
mov
cmp
inc
add
inc
movsl
pop
popa
pop
push
outsl
cwtl
jb
push
in
sarl
jg
movsl
mov
fsubs
dec
jne
sbb
loope
sub
or
imul
scas
loop
es
mov
cmp
daa
mov
mov
hlt
mov
inc
iret
pop
jle
cli
push
stos
push
xchg
pop
pop
sbb
add
cltd
fidivl
incl
push
xorl
stos
je
rol
flds
arpl
scas
jnp
jl
dec
in
test
pop
mov
bound
xchg
movsl
push
mov
ret
lds
test
lea
push
and
and
in
mov
adc
dec
sbb
rcll
xor
lods
daa
push
lcall
sbb
jne
sub
pop
jbe
and
push
push
inc
push
dec
dec
fwait
cli
adc
cmpsb
or
in
mov
and
das
xor
mov
in
in
mov
fistps
mov
sub
aas
xor
mov
xchg
outsb
dec
pop
jmp
push
push
arpl
sahf
jl
popa
repnz
and
lds
and
pop
mov
mov
rcll
lods
xor
movsl
push
arpl
fisubl
jo
fadds
push
in
xor
aad
jge
js
es
lock
stos
shlb
mov
loope
lahf
test
fbstp
push
out
orb
pop
bound
xchg
pop
xchg
shlb
mov
or
shll
and
enter
sbb
cmpsb
inc
loope
cmp
or
push
and
sub
sti
shrl
push
pop
mov
pop
loopne
stos
mov
imul
or
popa
and
mov
sbb
movsb
repz
lods
jmp
xor
and
cmpsl
es
repz
jmp
mov
adc
xchg
hlt
pop
addr16
movsl
iret
mov
pushf
ret
pop
test
inc
or
sbbl
sbbl
mov
sub
rolb
pop
pushf
jbe
fcmovbe
jns
and
aam
pop
hlt
in
pop
je
cmpsl
sbb
fisubs
fwait
clc
jecxz
int
into
fld
cmc
sub
loope
shl
int3
sbb
in
test
fs
push
hlt
aas
lds
test
mov
adc
mov
push
xlat
stos
mov
iret
sbb
mov
js
ja
lock
or
std
in
pop
icebp
xor
inc
shrl
inc
repnz
cmp
sbb
push
cs
add
and
or
lahf
icebp
ja
mov
and
sbb
movsl
xor
sbb
inc
shll
ja
add
dec
mov
test
out
push
pop
fldl
cmc
and
add
imul
xchg
jns
dec
mov
cmp
aaa
addb
mov
and
cmp
lahf
fstpl
push
jmp
mov
shll
lods
push
cwtl
hlt
outsl
inc
stos
xor
add
sbb
pop
sahf
test
xchg
stc
mov
pushf
lret
sahf
or
dec
addl
inc
and
jb
inc
sti
in
push
enter
shll
xor
jo
lods
adc
test
movsl
push
mov
mov
movsl
xchg
cltd
xor
lret
mov
mov
push
movsl
lea
fstps
jns
int
mulb
or
push
and
cld
bnd
movsl
mov
xchg
imul
in
inc
ss
fwait
xor
or
call
movsl
outsb
jno
cmpsb
sub
rcr
arpl
push
lds
cmc
inc
leave
pushf
movsl
jne
movsb
sbb
fwait
jmp
or
movsl
in
pusha
push
in
rolb
cmc
shrb
scas
jb
sahf
mov
cmp
mov
scas
ja
dec
jle
cmp
mov
pop
xchg
push
cmpsb
in
mov
inc
or
std
pop
movsl
lret
pop
push
inc
add
test
pop
popf
inc
inc
jno
xor
lret
stos
sub
movsl
sar
xchg
xchg
sti
loop
gs
xchg
or
orb
js
jmp
rcl
jo
push
mov
scas
add
mov
mov
icebp
int
call
sub
mov
mov
sbb
clc
lret
movsl
aad
add
cmovno
mov
mov
mov
add
nop
mov
mov
shr
ljmp
mov
movsl
mov
in
ret
sbb
jo
inc
cltd
jb
adc
ds
movsl
lods
lods
sbb
adc
stos
into
movsl
gs
rorb
xchg
and
mov
mov
jge
mov
loopne
sbb
hlt
mov
movsl
cmp
sbb
xor
movsb
call
fimull
jns
in
leave
mov
incb
std
or
mov
jbe
movsl
dec
push
mov
shld
std
inc
ja
lcall
xor
gs
adc
cmp
sub
movsl
jle
jl
das
xchg
outsb
movsl
cmp
mov
cld
icebp
int
push
outsl
stos
movsb
mov
adc
aad
inc
mov
mov
cmp
sbb
push
les
push
lret
ret
movsb
jo
pop
imul
in
leave
push
clc
lret
iret
mov
and
mov
loop
mov
xor
repz
scas
movsl
pop
adc
push
push
mov
mov
stos
cmp
push
and
cmp
sub
int3
popf
push
xlat
ljmp
mov
push
mov
cld
movsb
loope
cmpsl
test
inc
movsl
add
sar
adc
scas
lcall
xchg
fsub
mov
jno
cmp
movsl
mov
or
push
stos
jp
xchg
cmpsb
test
pop
add
jle
pop
in
push
repz
rol
and
xor
jno
movsl
mov
dec
inc
sbb
mov
addr16
inc
push
psrad
mov
adc
push
jp
mov
cmp
pushl
imul
add
mov
xchg
pop
lods
cld
movsl
aad
xchg
ds
pop
das
imul
ret
stos
dec
movsl
jno
cwtl
aas
test
fisttpll
int
repnz
popa
test
into
mov
lds
in
movsl
mov
ret
orb
fisubs
mov
sahf
std
mov
mov
in
dec
repnz
or
outsl
cmpsl
inc
js
xor
test
xlat
test
mov
sub
sbb
rcrl
lcall
and
ret
jae
stc
jmp
push
pusha
sbb
pop
movsl
outsb
mov
test
data16
inc
mov
mov
or
lds
movsl
xchg
stos
int
incb
movsl
in
into
jecxz
inc
imul
std
loope
loop
movsl
shll
add
aam
mov
jae
sti
rcr
cmp
les
ret
test
mov
jge
cld
outsb
roll
mov
ret
jmp
movsb
shll
mov
imul
mov
sub
in
adc
fisubs
pop
cld
das
stc
popf
in
add
push
insb
sbbb
sub
rcrb
mov
aad
ficomps
stc
mov
mov
fs
in
dec
push
movsl
cmpsb
and
clc
jno
shlb
daa
iret
mov
inc
jns
push
mov
jp
imul
dec
movsl
insb
push
out
mov
mov
mov
mov
dec
adc
cmp
rolb
jae
mov
movsb
pop
mov
movsl
mov
mov
xchg
out
adc
cmpsb
sbb
aad
or
and
adcl
shl
test
sub
mov
loope
jge
adc
shl
mov
sub
loop
pop
movsl
movsb
lret
setne
icebp
test
in
xchg
push
or
shlb
movsl
std
inc
fwait
insl
add
pushf
xchg
cmp
mov
addr16
mov
and
dec
in
jp
movsl
imul
nop
rcrl
clc
and
jmp
fnsetpm(287
out
in
cmp
outsl
movsl
push
repz
sub
dec
out
and
lcall
push
shlb
mov
out
cmpsl
pop
push
lret
test
mov
movsl
fst
fnstenv
inc
xchg
movsb
pop
sbb
clc
xor
and
fwait
push
ret
pop
insl
aaa
xchg
dec
add
test
or
inc
mull
sarl
outsl
jmp
adc
push
or
out
movsl
and
mov
clc
adc
popf
and
dec
dec
jnp
pusha
push
orl
mov
mov
test
push
cmc
out
int3
mov
adc
movsl
mov
mov
mov
push
out
pusha
rcll
jl
push
mov
ret
mov
lea
movsl
sub
cmp
std
rol
movsl
int
xchg
sbb
mov
jb
cltd
jns
scas
jae
or
pop
loopne
andb
movnti
js
inc
mov
sub
sbb
sarl
xchg
test
and
xchg
stc
lds
mov
loop
pop
adc
or
inc
adc
add
fldenv
ror
jmp
mov
pop
mov
cmp
push
mov
movsl
out
lock
cld
out
mov
add
sbb
ds
push
in
in
cwtl
push
cmpsl
movsl
int3
jg
push
sbbb
and
lods
shlb
adc
mov
dec
andl
movsl
data16
fisubrl
notl
inc
stc
dec
adc
in
mov
repz
ja
add
pusha
add
lds
mov
sbb
data16
mov
push
or
repnz
sbb
scas
mov
sub
xchg
mov
dec
push
movsl
addr16
repz
inc
mov
in
mov
frstor
mov
mov
inc
xchg
inc
or
push
dec
cmp
adc
inc
add
mov
lds
shl
mov
insb
xchg
push
clc
jle
hlt
call
mov
das
and
inc
xchg
outsb
lds
mov
test
sqrtps
jns
or
andl
aaa
and
sub
pop
dec
loopne
cwtl
aaa
sbb
add
lods
inc
hlt
scas
lcall
mov
pushf
aaa
sahf
jo
stos
mov
sub
mov
lea
bound
sar
sbb
pop
lock
jmp
push
fxch
out
add
mov
movsl
or
inc
mov
movsl
jno
or
les
add
ret
add
xchg
lahf
out
in
pop
mov
cmp
sbb
lds
xor
aad
ds
mov
pop
scas
cmpsl
mov
cmc
aad
lds
sub
push
xchg
add
aaa
mov
test
adc
outsl
cs
cmp
mov
mov
mov
movsl
jmp
pushf
jge
addb
mov
mov
inc
movsl
sub
cmp
fwait
stos
or
movsl
inc
mov
mov
stc
jge
movsl
adc
lret
jg
mov
jp
jnp
outsb
scas
pop
es
push
sarb
or
sub
fstps
add
movsl
mov
jecxz
hlt
ljmp
mov
movsb
and
inc
push
cmp
mov
aam
mov
out
dec
lods
ljmp
inc
imul
adc
pop
jno
mov
mov
lds
sbb
into
in
xchg
iret
sbb
pop
cmpsb
or
or
lcall
mov
mov
pop
psrlq
add
test
sahf
neg
dec
aad
popf
stos
mov
mov
jbe
cmpsb
dec
popa
insl
inc
sub
aas
sub
divl
in
lds
in
cmc
fwait
mov
test
pop
pop
movsl
jle
leave
in
loop
or
stos
in
inc
sub
mov
fldl
mov
sub
jg
js
fwait
push
pushf
repz
test
mov
mov
addr16
enter
add
push
shlb
add
mov
mov
das
mov
jns
push
stc
in
clc
mov
push
loop
push
and
fstpt
mov
hlt
stos
jle
mov
cmp
adc
push
sbb
mov
shrb
movsl
add
cmp
outsl
icebp
jmp
fcmovb
call
jne
inc
xchg
movsl
push
pop
into
sbb
mov
inc
sbb
mov
inc
movsl
mov
bound
outsl
xor
mov
cmpsl
stos
ljmp
mov
dec
or
push
push
stos
dec
xchg
mov
jmp
leave
pop
inc
data16
mov
in
inc
or
dec
cwtl
adc
and
xor
or
aad
xorb
adc
ja
lret
mov
push
std
cmc
ljmp
lock
movsl
push
pop
and
les
or
dec
outsl
sbb
sub
in
in
xchg
fwait
popa
inc
aam
xchg
cmp
call
int3
imul
rep
sub
mull
xchg
sti
and
pop
sbb
inc
xchg
xor
jne
and
movsl
adc
ja
movsl
sbb
popl
out
and
mov
sarl
dec
mov
stos
mov
and
jle
cmp
and
xchg
inc
jecxz
mov
dec
mov
ret
frndint
sahf
xor
jmp
movsl
cmp
cwtl
xchg
leave
imul
add
and
sub
jae
adc
and
mov
ljmp
movsl
lcall
insb
and
lret
add
negb
movsl
xor
test
xchg
pop
dec
aam
movsl
pop
xlat
repz
push
pushf
sarl
xor
jle
cmpsl
lahf
movsl
aaa
xchg
sub
in
lods
cmc
movsl
into
dec
leave
repnz
aam
xor
mul
add
in
mov
sbbb
sbb
ljmp
sbb
dec
sti
inc
jb
movsl
adc
jge
div
cli
sub
push
sbb
movsl
ss
mov
cmp
daa
and
xchg
int3
scas
mov
mov
mov
movsl
imul
add
mov
xor
cwtl
xchg
lret
cli
in
es
shlb
inc
cmp
mov
test
xor
hlt
dec
in
int
mov
cmpsb
outsl
push
and
mov
sub
cmpsl
xchg
movsl
ffree
stos
mov
in
inc
cmc
or
movsl
and
push
mov
hlt
imul
inc
add
jbe
xor
scas
xchg
outsl
and
xchg
stos
xor
mov
xchg
mov
sbb
sbb
push
jb
adc
xor
aaa
lods
movsl
jae
arpl
popf
push
mov
xor
movsl
lock
mov
cmp
mov
pop
pop
aas
les
pop
pop
negb
adc
inc
in
test
shl
dec
addr16
push
cwtl
in
cmp
push
sarl
jmp
push
or
out
fwait
in
addr16
and
shll
lret
loop
fdivl
out
das
mov
pop
pushf
andb
fnstcw
fs
dec
fbstp
adc
jle
rolb
pop
add
movsl
sbb
cmp
out
arpl
mov
add
ret
push
aas
movsl
pop
stc
fwait
imul
mov
jge
rcrl
icebp
inc
xchg
sbb
jmp
in
arpl
fcmove
movsl
stos
fstps
cmpsl
mov
and
in
fsubs
movsl
ljmp
ret
loop
movsl
jnp
push
add
movsl
inc
and
ret
lea
inc
jb
push
neg
leave
cmc
and
movsb
clc
fbld
arpl
shll
sub
ja
movsl
xchg
mov
daa
push
movsl
mov
jno
mov
fisttpl
add
fyl2xp1
into
aas
movsl
push
icebp
ror
sbb
std
movsl
inc
adc
mov
mov
dec
andl
adc
xor
movsl
xchg
enter
pop
pop
mov
mov
pop
xchg
movsl
mov
jp
test
sub
pop
sbb
enter
or
or
shlb
mov
mov
pop
mov
imul
lret
ret
and
in
pop
clc
adc
fisubrl
iret
negb
addr16
notl
lahf
mov
stos
cltd
aaa
push
leave
aam
imul
cmp
or
sub
mov
mov
mov
je
mov
push
shr
sbb
sbb
and
cmpsl
movsl
js
sbb
mov
cli
scas
or
lds
mov
in
add
lods
add
mov
push
pop
mov
mov
lds
fst
movsl
fdivr
leave
fwait
aam
cmc
ficoml
addr16
push
add
inc
lods
icebp
mov
inc
loop
xor
jp
and
adc
mov
and
pop
ret
cmp
inc
xchg
cmpsl
push
and
fsubrs
insb
mov
out
xor
push
icebp
cmpsl
and
push
inc
mov
cmpsl
mov
add
shll
xor
stc
push
pop
in
aam
inc
popf
out
lds
ss
add
cmpsb
cmpsl
movsl
test
sub
jge
add
fisubrl
in
xchg
mov
adc
xchg
mov
push
imul
jecxz
add
rorl
push
leave
fcompl
and
shr
je
movsl
add
imul
push
and
test
jae
cwtl
push
lcall
add
adc
addr16
add
pop
call
repz
and
lret
mov
in
testl
rorb
jno
or
movl
cli
int
mov
movsl
cmp
inc
ljmp
jbe
ss
cmpsb
cmpsb
push
int
mov
dec
and
cs
jnp
loopne
sar
mov
aam
call
das
out
es
in
mov
pop
jecxz
ljmp
mov
push
in
cmpsb
mov
push
jnp
subl
dec
sub
jno
cld
test
xor
mov
and
loopne
mov
addr16
nop
xor
dec
mov
aad
push
xlat
fstps
and
scas
iret
das
mov
dec
dec
js
aas
in
int3
sub
adcb
stos
iret
pop
out
or
js
aaa
inc
jmp
mov
jo
insl
pop
jle
cmp
xlat
push
fadds
xor
popf
ds
or
ret
mov
mov
jg
push
jbe
mov
popf
ret
pop
push
mov
push
insb
wrmsr
fucomp
cwtl
cmp
mov
mov
addr16
movsl
push
adc
jge
pushf
push
stc
pop
imul
movsl
ss
inc
push
pop
sub
cli
out
push
sbb
jbe
roll
mov
lock
movsl
cltd
xor
xor
mov
xor
dec
push
leave
or
jmp
xorl
cmpsl
movsl
jne
bound
xchg
aad
daa
in
roll
popf
ret
lcall
xchg
and
movsl
xchg
gs
int3
popa
outsl
fisubl
test
mov
movsl
mov
inc
add
mov
movsl
jge
push
xchg
test
sbb
imul
stc
ljmp
push
add
loopne
pop
mov
cld
mov
jmp
int
sbb
movsb
push
ljmp
cmp
test
mov
out
or
push
sbb
movsl
xchg
inc
sti
insb
jg
shlb
push
flds
dec
cmpb
scas
cwtl
and
jecxz
fildll
outsb
sbb
jns
loop
push
dec
fcoms
shr
mov
ret
out
mov
push
mov
inc
push
loope
cmp
mov
fisttpl
imul
push
andb
sbb
mov
cmp
fwait
dec
pop
add
mov
mov
jne
movsl
pop
push
scas
dec
mov
mov
mov
loop
push
pop
sahf
fstpl
clc
push
jne
cld
ret
mov
sub
or
cmp
sbb
movsl
cmp
out
aam
lret
jmp
or
jmp
cmc
push
cs
and
outsb
push
jbe
or
movsl
in
rcll
cmp
mov
mov
popa
in
int
in
and
aam
pop
push
fwait
movsl
push
ljmp
mov
out
js
shlb
je
inc
sub
cmc
iret
and
mov
jbe
mov
bound
mov
sub
fstpl
add
xchg
cmp
mull
cwtl
popf
test
fbld
inc
push
jmp
lret
jbe
int3
xchg
xchg
pushl
movsl
cmp
mov
imul
xchg
add
movsl
aad
cmp
ss
mov
movsl
iret
cmovle
movsl
xchg
test
ja
and
lods
or
sub
daa
mov
jnp
fisttpl
outsb
mov
dec
or
mov
lds
loopne
dec
sbb
sub
enter
mov
mov
sbb
iret
repnz
jp
push
test
movsl
dec
fstp
pop
fcmovnb
scas
sbb
dec
dec
mov
pushf
adc
std
add
mov
adc
pop
mov
out
movsl
lret
into
push
cmp
sub
clc
insl
loop
test
mov
pusha
mov
mov
movsl
jae
push
lock
cmc
or
in
mov
lahf
movsl
aas
insl
or
xchg
sub
mov
cmp
mov
mov
lret
jo
movsl
jl
sbb
add
mov
icebp
mov
pop
adc
inc
mov
xor
scas
daa
sbb
inc
xchg
mov
cltd
xor
out
hlt
in
xorl
cmp
scas
sahf
mov
and
lods
testl
and
and
out
scas
inc
inc
pop
mov
or
mov
inc
aad
popf
fcom
movsl
mov
and
fnsave
sarb
movsl
jl
push
xchg
cs
jl
test
fdiv
rcrl
mulb
mov
daa
pop
int
sbb
push
mov
sti
imul
push
dec
aam
out
fucomi
cwtl
ds
and
aaa
in
mov
in
sbb
adc
repnz
je
dec
inc
addr16
add
ljmp
in
jmp
mov
mov
mov
stos
lds
movsb
mov
movsl
xor
xchg
sbb
movsl
inc
dec
xor
popf
mov
inc
adc
pop
movsl
add
repz
dec
ficoml
or
inc
pop
movsl
iret
push
call
insl
dec
data16
fisttpl
cmp
mov
sti
fst
pop
add
add
xchg
in
in
lds
mov
xor
ret
or
ds
in
or
dec
insl
dec
in
stc
mov
push
dec
movsl
sbb
in
enter
or
insl
mov
lods
sti
movsl
push
loopne
shll
xor
inc
mov
lds
call
lcall
movsl
hlt
ljmp
mov
movsl
pop
mov
push
out
in
add
push
pop
mov
xor
mov
jge
jb
jecxz
fnsave
fdivrp
andb
imul
jnp
int
mov
push
mov
andl
cld
xor
cmp
in
cltd
pop
lods
movsl
arpl
lds
ljmp
mov
push
cmp
xchg
mov
push
movsl
stos
or
and
mov
xor
sbb
movsl
pop
jb
dec
shrb
xchg
mov
adc
inc
in
cmp
loopne
add
fadd
andl
pop
aas
popf
jo
cld
clc
movsl
push
sub
mov
cmp
or
shlb
xor
outsl
fs
push
jp
dec
aad
add
rol
inc
shll
inc
pop
pop
test
neg
leave
fxch
jl
movsl
pop
jno
test
lea
mov
rcl
cmc
mov
shll
jmp
mov
mov
js
movsl
popf
mov
sbb
das
add
lea
in
scas
andb
jmp
mov
mov
inc
pop
mov
push
gs
mov
inc
ds
and
cmpsb
pop
movsl
xor
stos
or
add
movsl
stos
jns
sarl
cmpsl
stos
test
mov
pop
sahf
bound
aas
stos
xor
loopne
mov
cmp
ret
mov
dec
dec
leave
xchg
sub
in
adc
pop
push
cwtl
lret
mov
movsl
add
movsl
pop
adc
leave
and
out
inc
stc
jp
mov
pop
sbb
cmp
mov
pop
add
pushf
sti
mov
pusha
xor
mov
push
aam
leave
shll
aad
push
in
scas
test
or
sub
insb
data16
cmp
pop
jne
mov
out
in
movsl
dec
aas
hlt
jmp
dec
and
movsb
mov
cmp
jl
pop
fnstsw
pop
sub
add
push
push
jne
arpl
inc
cld
fildll
dec
sub
outsb
push
mov
sbb
jge
push
movsl
add
je
mov
xorl
jns
cld
and
or
in
adc
pop
add
jae
or
jno
mov
lds
clc
movsl
add
stos
cwtl
push
movsl
cmpsb
xor
push
in
fcmovnu
mull
ja
jne
push
xchg
shll
fidivs
lods
movsl
scas
nop
jmp
lcall
jecxz
outsl
mov
movsl
cli
xlat
loope
rcrb
pop
aad
or
dec
sarl
add
add
xchg
icebp
jb
xlat
sub
xor
push
ror
movsl
mov
popf
ds
inc
sbb
out
mov
out
into
pop
jg
xchg
clc
movsl
fld
jnp
pusha
push
inc
movsl
xchg
js
sbb
and
mov
mov
shrl
mov
pop
pop
mov
mov
sbb
test
pop
cmc
clc
fbld
test
sbb
andb
lret
shll
stc
sub
cld
int
adc
test
sbb
pop
mov
or
movsl
clc
aaa
out
sbb
dec
lret
fbld
xor
push
jge
mov
aad
ljmp
stos
sbb
mov
jp
inc
lds
add
nop
add
mov
js
jb
add
pushf
adc
mov
bound
sub
mov
insl
push
or
test
pop
ret
adc
sub
pusha
inc
aaa
into
icebp
cwtl
je
push
pop
lret
cltd
popa
icebp
iret
push
popa
cmp
xlat
in
imul
inc
mov
mov
mov
pop
std
icebp
or
inc
mov
shrb
xlat
xchg
insl
mov
lret
sub
cld
dec
dec
insl
and
sub
int
mov
dec
sbb
jns
push
push
pop
or
and
dec
jnp
jg
addr16
jns
andb
sbb
xor
pop
fs
std
movsl
jmp
outsl
call
in
orb
add
mov
pop
or
dec
outsb
adc
gs
pop
mov
lcall
stos
xchg
cmpsl
ret
mov
scas
push
add
mov
dec
movsl
jmp
pop
cwtl
div
push
shll
fwait
cmp
fldl
mov
fsub
ds
add
jmp
pushf
imull
push
xchg
lret
out
push
hlt
movsl
dec
inc
pop
nopl
mov
xchg
jnp
cmc
xlat
cmpsb
movsl
out
push
lock
es
jae
movsl
fwait
adc
inc
lahf
stos
jo
sti
jno
sbb
hlt
out
inc
mov
pop
ret
cltd
mov
loopne
add
mov
or
cmp
movsl
pop
mov
shlb
mov
imul
jo
push
jmp
movsl
cwtl
cmp
adc
push
es
gs
xchg
mov
jbe
adc
ljmp
mov
mov
ret
movsl
rorl
xor
lcall
and
push
test
or
dec
loope
pop
adc
mov
xchg
sub
push
pusha
outsb
arpl
rcr
cmp
divl
insl
lcall
out
cmc
mov
inc
movsl
es
clc
or
aas
xchg
mov
push
outsl
and
dec
mov
leave
in
jae
test
movsl
arpl
aam
or
pop
icebp
loopne
std
movsl
pop
insb
popf
cmpsb
sbb
movsl
fldl
or
or
inc
cli
xchg
scas
ffree
fstp
movsl
mov
cmp
xor
lds
iret
out
pusha
jae
ret
rcll
add
jmp
mov
ret
push
ret
lods
mov
aad
enter
out
inc
out
sub
sub
push
cli
movsl
shrb
sub
sti
out
xchg
push
xor
call
mov
in
cmpsl
adc
out
adc
popa
adc
pop
jnp
loope
push
pop
out
enter
int
push
xchg
bound
inc
push
adc
push
push
shl
movsl
aam
sub
jmp
test
sarb
cmc
mov
stos
cmp
mov
fwait
movsl
scas
pop
scas
jo
pop
jge
imul
int3
movl
mov
movsl
ljmp
nop
call
sub
pop
sbb
fcomp
mov
aad
movsl
push
xchg
mov
loope
into
cmp
lods
inc
imul
pop
adc
roll
movsl
add
lret
xor
je
push
mov
jae
pop
jl
xchg
sub
mov
xor
mov
pop
and
dec
outsb
xorb
fs
pop
popa
add
in
lods
cmpsl
andb
sub
movsl
mov
mov
incb
push
dec
mov
sbb
movsl
xor
xchg
movsl
jnp
scas
xchg
js
add
mov
jb
pop
pushf
mov
fsubrs
mov
cmc
sbb
fwait
mov
xorb
stos
movsl
jg
pop
jge
loopne
cmp
cmpsb
lcall
or
xchg
imul
pop
dec
mov
mov
sahf
jae
mov
push
jl
dec
adcl
xchg
movsb
adc
mov
cs
dec
pushf
sub
cmp
insb
xor
daa
mov
cld
push
lahf
movsl
adc
jecxz
mov
bound
sarl
ja
movsl
push
sub
jo
mov
or
sbb
jno
push
je
jbe
ret
cs
and
cld
jle
dec
in
sub
fucomp
mov
pushf
test
mov
jnp
inc
mov
jb
movsl
pop
popa
hlt
push
movl
xchg
ds
aas
std
cmp
out
int3
mov
sub
ficoms
gs
test
cli
mov
inc
lahf
cmp
pop
xchg
pop
mov
jne
sub
mov
ljmp
push
out
fisubs
sub
xchg
push
push
mov
pop
or
int
cmc
add
in
stos
jp
popa
ret
dec
nop
inc
scas
movsl
add
push
sub
xchg
xor
fcomps
movsl
nop
xlat
pop
jb
mov
test
repnz
add
cli
ret
and
popf
xor
xchg
jp
pop
xchg
push
sbb
in
fisttpl
dec
repz
xchg
and
imul
cmpsb
fsqrt
int3
lcall
out
mov
flds
movsl
push
emms
and
mov
movsl
pop
pop
mov
loopne
es
fdivr
xchg
and
inc
movsl
jl
in
aam
out
jecxz
in
btc
xor
or
sbb
push
lods
adc
mov
rcl
mov
pop
xor
jl
cltd
adcl
jecxz
lea
sub
mov
cmp
fwait
in
cmc
loop
fisubs
mov
jle
bound
fisubrl
movsl
daa
loop
fwait
mov
iret
andb
push
dec
cmp
inc
jns
movsl
ds
cli
in
jmp
aam
shlb
cmp
jmp
scas
insb
sti
ret
movsl
outsb
fs
sub
mov
push
and
nop
insl
in
mov
syscall
mov
pop
push
dec
movsl
cmc
das
adc
adcl
dec
push
cli
and
mov
mov
shlb
or
movsw
push
sbbb
dec
cli
pushf
inc
fs
daa
in
add
add
adc
and
mov
pop
mov
and
scas
pop
pop
je
rol
push
push
and
mov
add
hlt
mov
das
testl
xchg
pushf
inc
cmp
push
repz
testl
mov
lods
push
movsl
inc
cli
sbb
xchg
jp
sub
iret
sbb
pop
pop
sbbl
sbb
and
mov
fistpl
jg
inc
stc
cwtl
mov
inc
jl
push
lds
movsl
in
shll
jns
inc
movsl
cmp
daa
outsl
movsl
jg
aad
call
int
push
movsl
ljmp
pop
bound
hlt
es
enter
cltd
ficoml
sub
dec
pop
loope
imull
ljmp
pop
adcl
sbb
mov
leave
clc
out
add
movsl
add
jns
outsl
push
scas
movsl
aam
neg
jecxz
push
loopne
jbe
rorl
andb
bnd
daa
ljmp
jmp
pop
push
xchg
insl
push
and
shl
in
cmc
mov
rclb
xchg
test
sbb
movsl
xor
fld1
sbb
or
pop
pop
mov
shrb
pop
xor
test
filds
mov
lds
movsl
mov
ds
movsl
ret
sbbb
pop
and
sub
in
in
test
add
dec
inc
clc
dec
jmp
movsl
int
add
sub
cmp
push
and
mov
adc
xchg
sbb
pushf
xor
nop
sub
push
mov
test
es
arpl
aas
lea
cs
mov
movb
mov
xchg
xchg
mov
jns
dec
inc
xor
popf
push
mov
cmp
xor
lret
xor
rcrb
dec
movsl
inc
icebp
rcrl
fiaddl
andl
loopne
int3
mov
mov
push
shlb
pushf
cmp
sbb
mov
stos
out
jae
push
dec
or
aad
and
sbb
adc
push
pop
repnz
movsl
cmpsb
or
xchg
out
pop
push
arpl
in
sub
inc
push
push
xchg
lds
jecxz
arpl
jmp
push
mov
cmc
fcoml
adc
fisubrl
bound
enter
xchg
loope
out
and
loopne
xchg
mov
lahf
dec
test
repz
lret
sahf
loop
int
or
cmp
xchg
xchg
aas
xor
out
in
cli
mov
movsl
sbb
fnstsw
mov
in
dec
push
ja
xchg
in
paddb
fdivrs
push
movsl
mov
and
jl
xor
add
loop
movsl
pop
das
jp
clc
int
movsl
push
pop
pop
ret
push
pop
inc
ds
xchg
lods
xor
popf
aas
leave
jecxz
mov
test
lret
inc
mov
cld
cmc
pop
lds
mov
pop
and
jl
movsl
addb
sahf
cmp
inc
mov
repnz
adc
sahf
xchg
lahf
movsl
cltd
sub
mov
jb
ja
fwait
sbb
popf
ljmp
add
and
push
jecxz
add
mulb
scas
mov
fsubl
into
shrl
and
lret
out
hlt
sbb
in
movsl
push
inc
add
mov
lods
sbb
adc
jnp
xlat
int
xchg
aas
sbb
pop
sbb
enter
sub
mov
aaa
arpl
mov
inc
mov
testb
sbb
loop
in
stos
in
mov
fs
movsl
xlat
mov
mov
sub
add
lods
sahf
adc
mov
xchg
cmp
insb
dec
cmc
dec
push
imul
repz
fcmovu
outsl
jnp
jbe
out
lods
or
shlb
in
aam
xlat
cmc
mov
jns
andl
sub
and
ret
movsl
xchg
mov
jo
movsl
out
adc
add
clc
cmp
repnz
or
in
adc
mov
pop
cmp
jl
sbb
js
mov
push
sub
movsl
bound
loopne
adc
in
mov
imul
ja
rcll
push
push
adcb
divl
or
pusha
jmp
das
mov
dec
push
dec
cmp
or
adc
push
dec
pusha
imul
add
cld
add
jle
into
mov
adc
in
div
je
adc
jns
mov
xchg
mov
adc
sahf
loope
sub
adc
test
stos
dec
adc
mov
in
add
xor
ss
xchg
test
imul
cmc
mov
lock
jecxz
push
dec
in
jbe
cmp
je
in
in
jae
shlb
pop
aad
and
jg
mov
fsubl
lods
sbb
mov
movsl
push
cmpsl
mov
jp
pusha
movsl
adc
xor
movsl
sarb
push
mov
push
movsl
or
add
mulb
mull
stos
inc
mov
sahf
mov
adc
test
or
jno
cmc
xor
xchg
add
push
scas
outsb
xchg
stos
cmp
je
add
ja
mov
jmp
scas
cmp
xor
pusha
xor
mov
mov
scas
and
sub
arpl
mov
jne
push
insb
call
mov
xchg
xor
xor
movsl
xor
jnp
into
cld
mov
jns
mov
movsw
xor
inc
test
adc
stos
mov
or
pop
and
lret
insl
imul
or
iret
lea
rcrl
test
mov
lock
jecxz
movsl
or
cmp
dec
popf
xchg
movsl
scas
sbb
out
movsl
aam
jbe
sub
sti
enter
or
call
enter
hlt
dec
inc
sub
jno
in
pop
push
mov
cltd
adc
mov
pushf
sbb
scas
rcr
fwait
stc
mov
adc
sub
sub
mov
mov
lret
and
mov
mov
lock
xor
and
es
pop
ds
xlat
pop
out
sbb
cmpsl
sbb
addr16
mov
addr16
xchg
sub
icebp
sbb
aas
xor
rcrb
dec
push
sbb
pop
leave
mov
sbbb
bound
mov
cmc
or
cwtl
clc
cmp
das
stos
dec
rclb
xchg
jmp
in
out
in
adc
xor
in
push
xchg
mov
rcr
push
daa
and
add
int3
stos
xor
mov
out
rcr
movsl
push
add
dec
jle
jge
movsl
xchg
sub
outsl
mov
movsl
sahf
xchg
and
es
hlt
int
fists
cs
les
sbbl
imul
jl
push
mov
std
movsl
jge
lods
pextrw
xchg
fdivl
movsl
xor
xchg
rclb
mov
lahf
inc
aas
in
mov
movsl
mov
lock
push
fisubs
pushf
and
fisttps
dec
movsl
push
and
insb
dec
shr
and
movsl
aaa
hlt
leave
mov
jb
and
pop
mov
push
pop
ja
add
orb
movsl
adc
sbb
push
in
fdivr
add
frstor
bound
rolb
sub
cmpl
cmp
roll
cli
inc
push
fstl
sub
out
sbb
outsl
mov
lods
jle
test
pop
push
mov
jne
clc
push
je
dec
mov
movsl
flds
popa
lret
shll
stos
call
scas
outsb
cli
cmp
cmp
lods
stos
cmpsl
movsl
sbb
xchg
loope
int3
gs
movsl
jnp
fidivrl
mov
inc
je
mov
gs
and
aad
mov
bound
pop
sub
lods
jne
sarb
pop
out
ljmp
xchg
mov
push
mulb
cwtl
inc
mov
outsb
dec
adc
dec
data16
movsl
xchg
or
into
clc
pop
sahf
es
cmp
lds
test
sbb
in
mov
das
sub
rcr
into
ljmp
icebp
mov
movsl
adc
sub
arpl
iret
out
xor
test
outsl
pushf
stos
or
in
jne
pop
push
movsl
pop
mov
or
mov
jbe
sub
pop
or
adc
sub
dec
mov
jbe
lahf
jns
add
mov
inc
inc
in
pop
mov
movsl
or
cli
andl
mov
mov
cmp
xchg
add
pop
leave
push
push
mov
adc
mov
pop
xor
in
aaa
cmp
inc
ret
push
in
xlat
sbb
xor
icebp
mov
push
mov
cld
pop
movsl
sbb
sbb
mov
dec
dec
jne
in
lock
movsl
and
mov
xor
push
sub
movsl
sbb
leave
pop
in
movsl
push
push
mov
notl
sbb
sbb
shll
xor
xor
xchg
pop
and
stos
movsl
xor
xchg
mov
xchg
ret
test
test
pushf
in
scas
fsubp
xor
movsl
jns
cmp
cmpsb
mov
mov
push
xor
dec
outsl
movsb
movsl
dec
jp
xchg
or
add
and
pop
insb
push
pushf
xorl
mov
movsl
fld
imul
out
in
pop
sbb
add
insl
fidivs
inc
stc
sub
xor
or
sbb
enter
fmull
xor
std
xchg
sub
mov
or
push
push
jo
movsl
mov
add
pushf
sti
sub
in
dec
adc
cltd
ss
clc
or
add
movsl
lret
push
lret
mov
adc
sbb
and
pop
pop
shll
push
add
mov
mov
jp
in
lods
push
popf
lea
leave
lods
mov
cmp
loope
mov
movsl
ljmp
test
cmp
xchg
xchg
or
movsl
ja
jle
out
mul
push
movsl
ret
xchg
fldenv
xor
rolb
bound
dec
mov
insl
xorl
les
pop
bound
neg
mov
in
shrl
push
or
lds
incl
call
sti
aaa
pushf
cmp
movsl
sbb
out
pop
mov
adc
stos
jecxz
negl
lods
int
andb
ret
xchg
imul
push
scas
fldenv
inc
cli
movsb
movsl
mov
dec
dec
cld
xchg
xlat
enter
lret
int
cmp
movsl
or
sarl
cmpl
pop
lock
cwtl
add
sbb
fstl
movsl
lcall
bound
in
ret
sub
mov
add
sbb
rolb
movsl
mov
pop
sbbl
int3
inc
mov
jge
std
les
jo
pop
lahf
bound
mov
adc
push
adc
add
mov
mov
jmp
jmp
flds
or
les
movsl
xorb
jne
jle
repz
sbb
mov
fidivrs
movsl
ds
cmp
xchg
fcmovnu
addl
mov
and
int
movsl
loope
jne
pop
xchg
xorb
pop
insl
mov
lcall
pop
andb
sahf
mul
movsl
mov
xchg
int
pop
inc
decb
xchg
cmp
sub
out
pop
add
loopne
aas
jmp
test
mov
mov
push
pop
pop
in
or
popa
jmp
jne
sub
sub
xchg
inc
dec
stos
cmp
pushl
push
icebp
fidivrs
adc
add
jne
and
pop
test
ljmp
cmp
shlb
flds
sbb
dec
xchg
in
dec
addr16
xor
divb
cmpsl
or
mov
sar
sub
mov
repnz
sbb
lea
pop
into
sti
pop
lret
mull
int
pop
jae
test
subl
sub
les
push
es
sahf
cmc
pop
loope
mov
test
mov
insb
mov
or
and
pop
and
or
jp
inc
jb
cmp
inc
mov
mov
push
dec
adc
loopne
mov
inc
movsl
push
jnp
mov
movsl
test
pop
frstor
pop
int
bound
enter
popf
ljmp
sub
mov
movsl
mov
add
add
adc
xchg
xchg
movsl
cmc
lock
add
or
mov
xchg
jge
adc
daa
mov
sbb
cmc
mov
add
clc
pushf
sub
loopne
in
dec
cwtl
pop
scas
mov
insl
push
insb
ss
mov
dec
adc
push
mov
cmc
lahf
bound
mov
movsl
mov
lock
or
rep
fadds
sub
aaa
jb
cwtl
pop
movsl
inc
fucomi
jno
movsl
dec
jl
data16
aam
mov
inc
int3
roll
pop
icebp
stos
push
xor
movsl
in
push
rolb
sbb
dec
ret
mov
xor
add
es
lods
xor
mov
mov
insl
pop
mov
fnsave
sub
jg
enter
ss
sbb
adc
movsl
mov
mov
xchg
pop
cld
lods
lahf
fwait
das
xor
pushf
push
mov
cmp
loopne
pop
aad
add
rolb
fistpl
jmp
test
outsb
and
scas
lahf
and
mov
xchg
imul
add
xchg
cmp
fildll
xchg
xchg
loope
push
lea
mov
or
xchg
sub
or
pop
aad
push
mov
jge
in
jns
lret
and
sub
mov
mov
ffree
movsl
lahf
xchg
sub
movsl
sahf
add
xor
les
mov
pop
imul
testb
jo
pop
out
xor
push
movsl
jg
mov
call
test
xchg
shll
mov
movsl
pop
in
out
stc
das
movsl
out
mov
add
xor
jge
pushf
mov
movsl
sub
movb
insb
jl
and
out
imul
scas
daa
fstps
lods
sbb
mov
int
pop
push
mov
movsb
cmpsl
mov
movsl
mov
cmp
out
in
aam
fwait
and
and
pop
shlb
cmpsl
pusha
pop
movsl
push
mov
lret
daa
movsl
cmp
or
cmp
mov
movsl
xor
ljmp
hlt
jle
fimuls
test
pop
pop
cwtl
test
enter
push
dec
push
xchg
movsl
dec
addl
imul
movb
or
jp
outsl
mov
ljmp
sbb
popf
movq
loope
mov
cltd
jbe
mov
les
cld
fwait
mov
mov
jae
push
mov
test
call
cwtl
or
mov
testb
dec
jne
and
shlb
leave
hlt
lock
jo
pop
movsl
cmp
and
sbb
test
imul
push
add
std
cmp
mov
rol
push
int3
adc
push
mov
in
sbb
roll
out
mov
and
das
xchg
jmp
movsl
fwait
inc
mov
shlb
call
fwait
jg
movsl
and
mov
and
mov
xorl
outsl
in
movsl
or
adc
inc
rorb
sbb
add
xchg
mov
popf
sbb
push
stc
dec
mov
popa
fcoms
bound
pop
movsl
pop
loopne
call
movsl
push
dec
add
int3
jne
movsl
scas
mov
ljmp
dec
test
mov
rcrb
fwait
jo
pushf
inc
in
movsl
and
daa
add
push
jge
movsl
pop
xor
das
std
adc
xchg
inc
or
xlat
xor
int3
and
cmc
fsubrl
inc
xchg
movsl
cmp
out
movsl
cmp
mov
pusha
insl
add
shlb
dec
fmull
pop
push
in
mov
mov
iret
stos
sahf
pop
ret
movups
popf
sub
in
or
sub
mov
jo
movsl
int
pop
inc
jp
push
movsl
hlt
dec
stc
out
rorl
pop
jns
fisubl
imul
addl
pop
or
jne
popa
clc
xchg
into
add
inc
mov
push
movsl
loope
lret
popf
cmpsb
and
cmpsl
pop
mov
push
mov
jge
xor
cli
mov
push
mov
mov
or
mov
cmpsl
cmp
cmp
jne
shlb
arpl
lods
lock
movsl
push
push
aaa
add
mov
outsb
nop
imul
cmp
movsl
sbb
mov
xlat
idiv
movsl
push
and
cmc
sub
test
inc
xor
cmp
adc
jns
sub
cmp
xchg
data16
mov
add
fwait
mov
paddusw
mov
push
rcrl
ljmp
xchg
and
imul
add
push
std
add
in
mov
adc
mov
or
cld
sbb
movsb
cltd
movsl
and
bound
movsl
sub
xchg
shll
fildl
and
or
xor
push
pop
inc
jbe
or
fstpl
lret
nop
iret
mov
movsl
pop
cltd
movsb
xchg
bound
sbb
pushf
insb
add
movsl
lods
cmpsb
icebp
dec
rol
ja
jae
imul
push
mov
mov
adc
out
movsl
lcall
pop
push
cmp
out
sti
movsl
shlb
imul
les
sbb
fucomip
sub
ret
jl
gs
jns
mov
add
aam
addr16
fucom
mov
rcrb
cmp
adc
lods
mov
ss
imul
in
loope
out
or
filds
sti
ds
pushf
or
xor
movsl
fnsave
xchg
and
xchg
pusha
pop
pushf
cwtl
inc
shl
in
push
mov
shl
mov
fstpt
push
and
or
loop
mov
sub
test
jmp
mov
pop
mov
mov
insl
xchg
xchg
daa
movsl
cmp
mov
push
out
jmp
fsts
push
js
repz
mov
popf
ret
or
sub
movsl
inc
retw
jo
and
pop
xor
mov
mov
outsl
shlb
mov
cmp
push
jg
pop
jae
loop
lds
pop
outsb
xchg
lea
adc
movsl
mulb
sub
or
push
and
xchg
sub
sub
pusha
mov
mov
fcomps
jg
clc
mov
push
jns
idivb
pop
scas
icebp
jbe
push
movsl
mov
xor
and
adc
movsl
mov
mov
movsl
mov
aaa
inc
xchg
dec
in
movsl
adc
add
call
stos
pop
jmp
in
in
test
loop
fwait
lahf
arpl
xchg
pop
fcmovne
andb
xchg
loope
fadd
mov
popa
and
in
clc
cltd
push
xor
sub
mov
movsl
mov
jne
aam
sbb
nopl
dec
loopne
and
mov
in
cmpsb
lds
data16
jl
inc
jnp
insl
push
ds
movsl
cmp
in
movsl
arpl
inc
mov
movsb
sbb
push
in
movsl
inc
add
xor
xchg
mov
pop
jo
jge
xchg
push
outsl
inc
sbb
sbb
cltd
clc
push
je
cs
xchg
stos
push
add
cld
les
movsl
repz
jbe
shlb
or
cmp
inc
or
pop
movsl
jno
cmp
jmp
dec
pop
movsl
push
fisttpll
push
mov
adc
movsb
je
fsubs
dec
leave
into
daa
xchg
cwtl
xor
movsl
cmp
inc
push
mov
jo
mov
dec
mov
sti
xchg
testl
lds
test
or
movsl
movsl
and
out
dec
movsb
mov
adc
jnp
int3
movsl
popa
bound
pop
push
jb
addb
shlb
sub
mov
cmpsb
es
pop
aaa
mov
in
inc
in
or
xchg
dec
xlat
cmp
ss
insb
jl
mov
out
cmc
repnz
pop
push
mov
enter
mov
imul
rcrb
popf
push
xlat
cmpsb
mov
inc
loope
ja
cmpsl
cltd
loope
and
pop
fsubs
sbb
mov
daa
es
fdivs
sub
int
icebp
scas
xchg
cwtl
dec
xor
xor
mov
xlat
rorb
pop
shrb
lods
out
jmp
and
or
in
sub
cmp
mov
cmp
popf
scas
scas
ja
shll
stos
mov
mov
pushf
and
dec
lods
pop
cli
sub
mov
sbb
adcl
aad
inc
leave
aam
mov
clc
std
stos
cld
mov
mov
jns
xor
xchg
dec
and
sub
sub
and
scas
enter
out
popa
sub
xchg
xlat
mov
faddp
sub
adc
inc
pop
pop
and
ss
mov
movsl
mov
jl
fsubs
or
scas
mov
adc
fsubr
popf
int
fdivrs
mov
popa
pop
shr
cld
shll
inc
xchg
int3
or
adc
movsl
imul
mov
jo
pop
scas
movsl
or
cmp
adc
ret
in
jg
test
lret
push
jae
repz
jecxz
xchg
fcmovu
dec
scas
stos
inc
movsl
sbb
imul
pop
test
cld
daa
xchg
out
in
cmp
mov
add
push
xchg
test
or
adc
push
pop
aas
das
cltd
icebp
jmp
movsl
dec
rcl
test
jecxz
or
pop
test
push
add
mov
jle
sarl
ja
cs
jl
out
ficoms
adc
jo
movsl
loopne
pop
add
pusha
test
add
dec
jg
addl
xor
cmp
dec
movsl
pop
icebp
cmp
push
adc
movsb
pop
mov
lcall
imulb
cmpsb
movsb
fcmovnb
and
les
dec
mov
movsb
pop
loopne
mov
xchg
adc
mov
inc
clc
xchg
mov
mov
inc
add
pop
daa
add
push
cmp
sahf
push
ss
sub
arpl
ror
cmc
lahf
adc
mov
test
xlat
add
aad
mov
cmp
pop
inc
push
ljmp
mov
push
in
mov
adc
scas
leave
xor
jle
xor
inc
shlb
mov
add
push
xor
ljmp
clc
frstor
and
mov
xchg
clc
jns
lahf
cmc
icebp
add
mov
adc
adc
jns
sbb
stc
lods
clc
jne
clc
aaa
test
out
jne
es
sbb
cmp
lods
test
pushf
fdivs
cwtl
cmpsb
sarl
sbb
sahf
movsl
push
icebp
pop
inc
cmp
je
fnsave
and
push
sahf
hlt
sbb
cmc
aas
loope
mov
dec
fnsave
mov
mov
mov
stos
and
push
popf
xorl
out
dec
test
fwait
insl
les
repz
add
orl
nop
inc
xchg
push
sub
cwtl
aas
jl
add
cmpsl
movsl
xorb
in
ja
jmp
fwait
das
shrl
call
mov
adcb
mov
and
scas
movsl
inc
ds
adc
xchg
pop
jae
mov
mov
xchg
mov
sub
scas
fdivrp
pop
sbb
jns
rcl
push
xor
mov
or
bound
jp
pop
mov
loop
pop
aaa
or
jg
push
push
inc
movsl
pusha
mov
leave
and
mov
mov
mov
push
std
jbe
pop
imul
dec
push
mov
pop
movsl
flds
daa
mov
loope
in
sbb
in
add
add
jns
xor
movsl
mov
daa
js
sbb
mov
and
fldenv
test
xchg
xor
movl
xor
or
cmp
pop
jb
jle
push
jmp
mov
sub
pop
and
out
into
enter
popa
push
movsl
cmp
int
or
mov
xchg
sbb
mov
sbb
sub
dec
in
enter
lods
or
cmp
gs
aad
push
mov
ret
dec
and
and
movsl
jge
int
sarb
add
ds
push
out
lret
adc
loopne
aaa
mov
das
mov
xchg
push
leave
addr16
mov
sub
lcall
movsl
sbb
sub
adc
in
jge
popf
pop
lea
adc
ret
daa
inc
mov
push
loope
popf
and
and
jnp
rcrb
fildll
int
and
and
ficoml
mov
adc
clc
mov
adc
sub
lret
pop
cmpsb
ret
pushf
cwtl
cmc
cmpsl
fwait
and
xor
icebp
mov
sub
repnz
jp
mov
and
sbb
in
push
jns
sub
jp
movsl
xor
push
lods
xchg
aaa
cmp
jne
cwtl
in
imul
sub
icebp
sahf
push
adc
or
dec
frstor
mov
lods
sbb
das
sbb
mov
daa
and
inc
push
fstpl
push
sub
aaa
mov
sbb
cmpsb
rorb
ror
in
mov
mov
icebp
add
sti
jno
xchg
test
jg
or
pop
lock
sbb
stos
insl
pop
adc
loop
inc
adc
cli
cltd
jecxz
insl
push
fldcw
push
mov
pop
pusha
mov
pop
imul
push
jl
call
mov
jno
mov
std
call
data16
stos
ss
and
inc
mov
and
hlt
rcrb
test
jg
adc
and
push
mov
jge
push
stos
movsb
test
and
jnp
xchg
pop
xor
arpl
popf
sub
je
mov
ss
out
mov
push
ljmp
daa
or
lcall
jp
int3
jge
mov
sbbl
lahf
pop
sti
dec
xor
popf
out
push
xchg
mov
and
push
dec
and
ret
sbb
lret
iret
scas
push
sub
pop
push
jbe
inc
mov
xlat
add
or
es
icebp
mov
mov
scas
loopne
pop
in
xor
cmp
ss
sbb
out
leave
inc
in
pop
or
mov
std
mov
inc
mov
xor
add
hlt
iret
popf
push
fstps
icebp
popf
push
sub
imul
sahf
push
pop
fs
mov
or
sub
jb
xchg
add
test
mov
and
jns
and
pop
mull
insl
pop
jle
jb
mov
in
or
fnstsw
shll
test
or
dec
gs
shrl
addr16
cs
mov
and
or
cmp
and
sahf
lds
aam
mov
mov
sub
fldenv
cmc
in
movsl
push
icebp
das
mov
and
mov
cmpsb
adc
or
adc
jle
popf
icebp
fwait
cld
add
push
jecxz
mov
dec
fldl
pop
pop
jl
movsl
mov
ret
cmp
loope
and
mov
push
push
movsl
inc
mov
movsb
add
fmul
dec
in
daa
pop
push
xor
movsl
jo
add
scas
call
mov
out
into
fiadds
fbstp
sbb
add
push
sbb
je
lret
adc
and
sbb
jbe
das
mov
lds
sahf
dec
sub
call
cmp
jp
test
js
movsl
push
adcl
movsl
sbb
sub
out
int3
dec
jbe
aam
mov
iret
xor
mov
add
jecxz
jns
out
movsb
sbb
lea
lcall
sub
rcrb
nop
popf
mov
in
lods
sbb
scas
xor
das
or
lods
sub
push
sub
lods
xchg
aas
movsl
or
cmp
stos
add
mov
and
inc
pop
mov
inc
mov
popf
loope
lahf
xchg
xchg
xor
popl
sahf
cmp
mov
fbld
movsl
repz
mov
sub
mov
scas
or
jl
inc
js
jp
or
xor
in
out
movsbl
adc
adc
and
xor
xor
adc
jb
pop
or
imull
xchg
and
mov
movsl
inc
call
loop
movsl
adc
inc
add
mov
mov
mov
sbb
fadds
ret
movsl
sbb
aas
adc
out
pop
xor
in
neg
loopne
cmc
movsl
test
inc
insl
push
idivb
xlat
mov
pop
popa
inc
mov
mov
or
add
push
notl
sbb
mov
adc
movsl
pop
lret
adc
stc
test
xchg
and
movsl
nop
lock
push
daa
or
lret
sub
sti
scas
ret
movsl
sub
xchg
and
cmc
fisubrs
mov
int3
sbb
sbb
iret
repnz
movsl
loope
mov
push
movsl
mov
in
add
stc
loopne
inc
cmp
and
sub
movsl
hlt
leave
jmp
loop
xchg
xchg
daa
or
add
aam
in
in
or
sbb
xor
sahf
not
push
jnp
dec
jno
dec
je
cs
es
or
inc
jae
shl
data16
or
push
test
mov
jp
sbb
roll
sub
cmpsl
out
or
addr16
mov
fs
movsl
popf
pop
adc
lret
cmp
aam
cmp
and
xchg
in
and
inc
adc
pop
lods
insl
out
push
mov
jns
movsl
repz
pop
sub
mov
popa
movsl
stos
aaa
xor
or
push
xlat
xchg
mov
mov
lret
mov
mov
adcl
and
or
test
jmp
sub
lods
xor
fnsave
mov
or
cmpsl
in
xor
mov
fldl
fidivs
dec
bound
andb
dec
in
test
mov
mov
mov
movsb
ret
sbb
inc
xor
cld
loop
fdivr
mov
jp
jge
incb
data16
in
out
and
loopne
movsl
mov
arpl
cmp
imul
adc
mov
iret
mov
mov
shrl
mov
std
fisubrl
pop
jo
in
xor
xor
mov
decb
scas
jge
cmp
xor
mov
sahf
mov
pop
sti
dec
loop
repnz
or
xor
into
cmc
add
stc
sub
sbb
pop
push
jmp
repz
push
pop
inc
movsl
iret
mov
imul
sarb
xchg
aad
in
movsl
jae
push
ja
or
and
inc
fcom
stc
in
daa
pop
cmp
and
fisttps
add
movsl
loope
push
pop
pop
pop
or
int
repnz
cmp
fwait
or
clc
aad
movsl
mov
movsl
mov
lock
push
rcrl
mov
movsl
add
jp
jmp
sub
in
ds
jl
icebp
sbb
fmull
mov
leave
sub
push
or
jmp
xchg
xorl
mov
sahf
ret
bound
mov
sbb
mov
sbb
stos
push
adc
xor
movsl
mov
adc
xor
aaa
movsl
pop
dec
pop
arpl
fnstsw
movsl
dec
jno
dec
dec
jle
scas
movsl
push
loope
imul
leave
jle
movsl
out
shl
ljmp
ds
clc
xchg
fsubl
mov
leave
inc
dec
out
mov
stos
add
xor
xor
movsl
and
leave
sbb
lcall
mov
pop
mov
adc
adc
pop
iret
lret
mov
arpl
mov
fiaddl
and
inc
loopne
sbb
xor
jbe
push
ret
pop
lock
outsb
xchg
mov
add
mov
jge
loope
jecxz
xrelease
pusha
sbb
xchg
cmp
repnz
cs
xchg
cmp
out
jmp
fldenv
ja
les
and
daa
movsl
sub
sbb
mov
in
movsl
xchg
sub
dec
sub
cmp
inc
sub
and
insb
imul
add
jo
and
lds
aaa
mov
test
lcall
shl
mov
lods
movsl
dec
repnz
pusha
and
fidivs
push
in
es
mov
push
cmpsb
add
mov
jle
or
movsl
loopne
pop
cli
cmp
repz
movsl
data16
dec
sbb
pop
jae
icebp
aam
test
add
mov
push
mov
cmp
fdivs
sti
incb
mov
iret
mov
mov
outsl
imul
dec
inc
mov
iret
clc
test
loop
std
add
xchg
cmp
mov
or
push
in
neg
insl
addr16
in
mov
inc
ret
stc
lock
mov
pop
mov
mov
iret
in
push
jmp
cld
and
add
bound
loopne
lahf
stos
sbb
int3
clc
popa
movsl
add
loope,pn
movsl
and
call
mov
cmp
mov
insb
movsl
iret
into
dec
call
and
mov
adc
and
pop
push
sahf
in
dec
es
cld
sbb
aaa
hlt
add
xor
lods
mov
adc
cmp
sbb
popa
fnstenv
mov
inc
pop
loope
loope
xlat
testb
ret
in
xchg
pop
pop
imul
push
clc
je
popa
insl
scas
popf
movsl
xchg
push
mov
push
add
jbe
shlb
dec
aam
repnz
xchg
sub
out
jle
ljmp
push
cwtl
push
loop
in
cmp
mov
mov
mov
movsb
sbb
mov
sarb
cmp
ja
movsl
lods
mov
xchg
movsl
popf
mov
lods
outsb
mov
int
push
or
mov
mov
movsb
cmc
movsl
or
pop
in
and
aaa
movsl
jg
call
pop
mov
leave
push
popa
cmc
push
and
sbb
hlt
movsl
inc
scas
jecxz
jge
dec
push
movsl
fcomi
lods
add
add
ljmp
lds
dec
dec
mov
mov
mov
add
mov
idiv
xchg
fs
xchg
sbb
xlat
mov
imulb
into
adc
and
pop
mov
iret
dec
repz
fdiv
in
clc
pop
and
mov
int3
sbb
xchg
xor
or
xchg
fs
dec
pop
xlat
stc
dec
negb
xorl
fxch
cmp
fwait
or
js
lret
pop
insb
aad
mov
push
fimull
fsub
std
mov
or
inc
sub
adc
sbbb
pop
inc
xchg
stos
add
fwait
ror
movsl
or
dec
cwtl
fidivs
mov
jg
mov
sub
test
pushf
mov
sub
fcomps
mov
sbb
pushf
in
or
sub
out
xchg
addr16
sbb
loope
pop
mov
sbb
rcrb
lret
mov
push
stc
cli
adc
or
push
ffree
mov
jl
movsl
inc
pop
and
ret
push
sbb
dec
jl
std
test
lods
and
pop
lock
outsl
pop
leave
or
mov
mov
push
in
js
sahf
pop
inc
mov
cld
popf
lahf
int3
out
pop
cwtl
sbb
das
fmuls
jmp
adc
and
inc
ljmp
out
adc
jge
adc
cmp
jecxz
movb
mov
aaa
mov
test
movsl
adc
mov
movsl
push
stos
mov
nop
cmp
stc
iret
pushf
in
mov
scas
sub
sub
gs
movsl
insb
sbbb
add
loopne
lods
adc
nop
movsl
and
fmulp
call
push
mov
jb
movsl
dec
orl
loopne
imul
notb
fcoml
rclb
mov
das
fs
jg
rolb
cmc
add
push
movsl
in
sarl
mov
test
mov
lcall
clc
cs
sbb
add
mov
movsl
filds
lahf
ss
out
aad
dec
fmul
out
data16
clc
std
roll
negb
stc
cmpsl
mov
shll
movsl
fimull
pushf
cmp
movsl
mov
xchg
jl
sbb
jne
rcrl
mov
lret
scas
and
push
sarl
or
cmp
cltd
pop
aad
mov
sbb
mov
push
add
js
popf
lods
testb
popf
roll
pop
adc
icebp
loope
cmp
mov
mov
xor
xor
nop
mov
pop
gs
cmovo
push
dec
lods
ret
movsl
xlat
push
and
jmp
inc
popa
in
ret
jbe
movsl
mov
out
data16
pop
insl
loopne
lds
scas
je
scas
movsl
xchg
into
pop
xor
jle
xor
enter
jmp
add
fstps
jo
dec
jns
nop
loope
xchg
jne
test
loop
push
pusha
add
pop
lods
insb
sub
sahf
mov
movsl
pop
jae
or
fld1
repnz
popa
hlt
push
mov
cmp
inc
lods
sbb
jge
add
lock
mov
pop
adc
popa
add
mov
popl
cmp
imul
cmp
ret
jbe
and
fiadds
sti
or
push
sub
inc
ljmp
movsl
push
std
sbb
das
xchg
test
push
adc
mov
popa
cmpsb
test
test
xor
in
xchg
add
movsl
dec
push
outsb
push
out
pop
movsl
xchg
jns
fucomp
mov
movsl
jbe
ds
dec
clc
fistpl
mov
stos
mov
fdivs
in
pop
popf
push
pop
movntps
incb
aad
movsl
icebp
cmp
and
jecxz
mov
ljmp
adc
push
fsubs
jbe
testl
lcall
ljmp
inc
mov
ret
mov
fdivs
jb
inc
int
sbb
jl
and
mov
mov
insl
fnstenv
or
sbb
cmp
mov
in
push
push
movsl
mov
xor
sbb
and
ja
xchg
fs
sbb
sti
mov
jmp
movsl
sbb
shl
xor
and
lods
add
mov
pop
dec
or
data16
stos
mov
add
sub
push
aaa
mov
sub
out
cld
push
cmp
cmpsb
decl
ret
shld
testb
js
cli
jecxz
jno
pop
inc
push
sbb
push
lea
mov
push
or
addr16
push
test
inc
ljmp
test
in
hlt
mov
arpl
or
rcll
and
mov
xor
outsl
in
cmc
clc
cmp
movsl
mov
xor
or
sbb
sub
lock
dec
movsl
inc
mov
sub
or
mov
mov
lcall
push
adc
aad
jg
push
sbb
loope
repnz
lret
cmpsb
dec
shl
movsl
out
or
fwait
inc
stc
imul
movsl
or
pop
enter
lret
mov
testl
in
leave
movsl
mov
push
aam
movsl
mov
cmp
in
sbb
movsb
rolb
fsts
and
sbb
and
movsl
nop
test
lret
mov
lds
xchg
jnp
sub
xchg
sbb
cmpsb
shlb
movsl
cmp
inc
xchg
ja
mov
mov
bnd
dec
adc
into
cmpsl
and
lock
pop
pop
movsl
push
clc
push
adc
xchg
mov
test
pop
movsb
sbb
push
imul
mov
test
roll
lock
mov
xchg
movsl
or
scas
mov
jge
mov
out
lret
leave
xchg
test
dec
or
movsb
shlb
lret
je
mov
xor
pop
and
rclb
test
in
out
push
mov
mov
fcmovne
lret
xchg
mov
cmp
jg
push
push
int
or
cmp
mov
in
sbb
adc
push
lcall
mov
adc
mov
push
std
and
cmpsb
aad
pop
sahf
jl
jmp
cmc
pop
test
in
clc
decb
dec
jne
pop
xchg
mov
fisubrs
lds
jmp
add
in
je
ljmp
pop
mov
int
or
ret
scas
push
push
lds
cmp
mov
sub
stos
adc
fldenv
cli
xchg
mov
repz
mov
or
mov
push
cld
sti
cmpsb
dec
pusha
loope
cmp
movsl
leave
mov
cwtl
adc
xor
or
mov
sti
aam
mov
aas
arpl
arpl
pop
movsl
jb
cld
pop
cmovl
mov
xchg
adc
ja
jne
loope
lcall
aas
mov
fmull
cmp
shrb
int
neg
mulb
jge
mov
sub
aad
lods
xlat
adc
pop
jne
push
popa
vpshlb
lcall
and
lea
mov
lret
jl
movsl
jmp
dec
and
mov
rcll
sub
xchg
loopne
push
cmp
imul
mov
std
pop
sbb
sti
lods
pop
mov
mov
cmp
je
push
push
mov
fildll
xor
add
pop
loope
and
shl
push
stos
lds
cmc
xchg
notb
stc
movsl
fnstcw
andb
xor
addr16
lea
sbb
xor
in
fildl
jno
xchg
add
imul
and
mov
mov
popf
sbbl
inc
data16
adc
dec
push
mov
mov
movsl
inc
cld
dec
mov
leave
scas
inc
movsl
dec
mov
shll
xor
cmpsb
movsl
mov
push
push
xchg
pop
xor
sub
add
movsl
cld
inc
mov
pop
cli
push
jp
imul
movsl
adc
test
pop
cmp
cli
xchg
and
std
mov
xor
movsl
jnp
bound
movsl
dec
dec
loop
sarl
xchg
xchg
je
movsb
movsl
pop
and
mov
cs
mov
iret
movsl
xor
mov
stc
push
mov
mov
mov
sti
dec
das
pop
cmc
ficoml
call
mov
movsl
push
xchg
shll
loop
popf
lea
insb
clc
adc
mov
aaa
fs
lods
push
outsb
xchg
dec
je
push
inc
in
inc
add
or
and
jno
and
pop
push
mov
mov
in
add
jle
push
push
popf
sahf
shrl
add
pop
xlat
out
loopne
sub
cmpsl
and
lock
xchg
xchg
daa
icebp
jecxz
xlat
mov
cli
push
pop
xchg
mov
add
loope
loope
sub
inc
leave
xchg
movsl
push
sbb
es
hlt
xchg
mov
cmp
pop
out
adc
pop
inc
inc
adc
stos
sahf
icebp
dec
and
sahf
sub
mov
enter
pop
aas
repnz
and
sub
shlb
aas
cmc
test
rcrb
sub
mov
lahf
stos
lret
sahf
mov
daa
xchg
shlb
mov
stos
movsl
adc
push
shlb
mov
jbe
lss
lods
notb
lods
fsubs
mov
xchg
stos
jg
insb
mov
jmp
sbb
dec
popf
adc
xorb
shrl
movsl
sub
pop
inc
stc
mov
sub
lods
xchg
sahf
mov
cmpsb
mov
adc
movsl
mov
das
inc
shlb
lcall
shll
xchg
lea
inc
cmp
outsl
xchg
adcb
popa
jo
cmp
repnz
rol
xor
xor
aaa
mov
mov
sbb
cs
mov
sbb
pusha
cmp
outsl
movsl
xchg
cwtl
cmp
shll
xchg
shrd
movsl
stc
lods
mov
and
push
fmuls
cmc
xor
sbb
or
leave
mov
mov
sbb
movsl
jb
cmpsb
cmp
cmp
aas
lods
shrl
fsubrl
popl
cs
movsl
sbb
shrb
fnclex
test
std
pop
hlt
leave
jne
shll
aas
sbb
and
cmp
outsb
insl
inc
imul
fsubs
es
pop
adcl
push
inc
push
xchg
sbb
cmc
lods
je
mov
or
or
in
call
lret
xchg
push
xchg
pop
pop
mov
negl
scas
lret
sbb
hlt
xchg
out
sub
mov
pop
adc
cwtl
scas
and
and
lcall
aaa
movsl
push
pop
cmp
sti
pop
rcll
enter
cwtl
js
mov
lea
xor
and
test
or
sub
mov
push
mov
push
aam
mov
pop
push
adc
and
shlb
pop
xor
push
fstpl
mov
cmp
daa
out
movsl
pop
pop
inc
adc
icebp
popf
lock
pop
int3
sbb
lods
xor
int3
in
inc
sbb
pop
dec
shlb
sub
xlat
pop
rcr
fdivl
cmc
ss
in
test
std
inc
add
lcall
cltd
enter
rep
mov
cmc
pop
sub
jl
pop
cmp
pop
out
sbb
aaa
sar
repnz
and
pop
popf
movsb
clc
push
adc
out
out
ret
and
sub
subl
int3
jne
push
cmp
sbb
mov
pop
push
popaw
or
add
sahf
bound
pop
cmp
aad
jle
orb
jmp
fists
add
loop
test
mov
cwtl
dec
sbb
xor
dec
sti
std
sub
les
movsl
shrb
popf
and
aad
lock
jg
ss
add
jmp
mov
pop
movsw
jne
add
lock
nop
adc
call
repz
pop
jp
movsl
push
sub
shr
mov
fnsave
pop
xchg
mov
mov
mov
or
xchg
sahf
cmp
imul
fs
pop
dec
jge
adc
add
movsl
pusha
jg
mov
dec
adc
pop
data16
mov
icebp
loopne
pushf
mov
sahf
dec
mov
in
jle
mov
dec
movsl
jge
push
jle
push
icebp
mov
lret
jg
movsl
imul
push
movsl
les
aaa
push
loopne
xchg
movsl
jge
push
fidivl
jl
inc
dec
lcall
mov
icebp
aad
fstps
jbe
cmc
mov
fsubrl
roll
movsl
movq
mov
xor
cwtl
lods
and
movsl
jns
cs
or
lahf
dec
lds
movsl
mov
adc
jle
cmp
sahf
shlb
iret
xchg
rol
rorl
mov
cwtl
inc
mov
mov
into
aam
movsl
and
cmp
popf
inc
xchg
movsl
and
pop
repz
arpl
cmp
popa
inc
dec
mov
mov
xchg
rcr
aad
movsl
pop
mov
pop
movsl
mov
movsl
into
xor
sub
mov
aad
imul
mov
out
in
gs
test
dec
inc
in
lods
test
rorb
mov
bnd
loopne
in
xlat
add
or
lcall
sbb
test
fisubs
xor
cld
les
cmp
mov
es
sahf
push
jmp
pusha
loope
xchg
fcom
jb
lret
movsl
in
ss
mov
sbb
mov
mov
popa
bound
fsubrl
ljmp
movsl
lret
inc
ss
test
movsl
mov
fs
lea
mov
jl
sbb
clc
cltd
and
xchg
cmc
mov
sahf
insl
jbe
adc
pop
sbb
subl
imul
movsl
jnp
dec
cltd
pop
test
pop
iret
mov
fs
push
movsl
das
dec
out
dec
pop
mov
or
and
movsl
jns
dec
push
jae
add
mov
lds
cmp
mov
sti
lods
cli
loope
inc
or
jecxz
movsl
and
add
add
sbb
mov
mov
hlt
movsl
sub
clc
sti
push
jae
pushf
ret
fs
mov
inc
jne
dec
scas
std
test
fcom
neg
push
cmp
iret
decb
pop
jns
mov
pop
movsl
sbb
js
enter
in
mov
push
lods
je
adc
pop
movsl
gs
inc
popf
jge
aas
ret
mov
jle
loope
gs
mov
lock
loop
je
pop
scas
pop
out
shld
mov
xchg
ljmp
adc
lods
clc
lea
mov
aas
mov
xchg
fisubs
scas
or
mov
cltd
xor
in
xchg
loop
mov
xor
inc
rorb
arpl
xchg
popa
loope
pop
mov
popf
sub
arpl
pop
dec
ja
lods
jne
movsl
rclb
and
int
addr16
push
in
xchg
fldl
out
pop
sub
jnp
int
aas
mov
jl
test
xor
ljmp
cmp
lock
cmp
in
fs
add
out
ljmp
adc
cwtl
pop
and
fisttpll
cld
inc
jne
push
push
pusha
fucomip
jo
hlt
cmc
mov
rol
sbb
pop
jno
and
sbb
outsb
adc
xchg
adc
jle
daa
rol
adc
pop
xor
push
sub
and
movsl
nop
jecxz
xchg
ja
push
xchg
mov
fisttpll
mov
or
loop
mov
sarb
andps
das
out
sub
in
mov
popf
gs
testb
cmpsb
mov
icebp
pop
jle
jbe
pop
jne
in
jge
iret
out
movsl
loop
loopne
mov
adc
pop
pop
adc
movsb
or
cwtl
das
ds
addl
xchg
lret
xchg
push
arpl
inc
mov
int
movsl
imul
movsl
inc
dec
dec
add
lods
add
repnz
and
xlat
dec
call
ljmp
rclb
jo
std
pop
movsb
cld
mov
negl
push
and
mov
movsl
dec
sub
test
mov
fcompl
test
jb
out
fwait
movsl
pop
rclb
movsl
mov
dec
cs
push
rol
push
push
sbb
jo
mov
push
jno
jl
stos
mov
inc
aad
jno
call
sbb
or
and
inc
mov
and
movsl
das
and
adc
out
dec
pop
jae
jle
cmp
stc
mov
lods
inc
in
mov
movsl
jge
cli
push
dec
test
movsl
add
daa
sub
push
sub
mov
xchg
pop
cmp
loop
pop
mov
movsb
pop
mov
cmpsl
and
push
and
jg
lds
jecxz
popf
negb
call
movsl
sysexit
pushf
xchg
mov
nop
sbb
iret
xor
sbb
mov
mov
jle
rcll
add
jae
test
mov
jl
movsl
or
jne
jae
or
movsl
loop
fwait
add
adc
stc
push
icebp
mov
sbb
pusha
lret
xchg
stos
jae
cld
sbb
lret
xchg
xchg
xor
ret
mov
movsl
add
arpl
stos
mov
sbb
inc
jecxz
xchg
pop
movsl
mov
xor
lods
cmpsl
add
fwait
dec
xor
inc
cmpsl
aam
dec
repz
xchg
cmp
mov
mov
ret
sbb
movsl
add
outsb
xchg
popf
xchg
iret
into
loopne
fcomps
sub
cmpsb
sub
pop
push
daa
mov
rcrb
mov
push
test
movsl
loopne
in
inc
push
int3
nop
shll
mov
xor
xchg
cmp
pop
sub
lds
movsb
mov
dec
pop
ret
adc
sub
pop
pop
mov
filds
notb
icebp
out
inc
push
into
imul
movsl
pusha
mov
jmp
pcmpgtd
repnz
lds
and
clc
xlat
pop
aas
movsl
xchg
cwtl
cmp
sbb
sbb
mov
lds
mov
and
mov
movsl
push
and
in
aam
jl
call
adc
mov
fcmovu
jns
pusha
testl
pop
movsl
fistps
ret
or
jg
vpunpckhbw
mov
pop
sub
call
sbb
movsl
test
fcomp
mull
jo
cmovno
adc
mov
mov
bound
loope
xchg
push
movsl
cli
mov
and
cmp
and
movsb
jo
mov
inc
mov
test
ljmp
mull
xlat
lock
lea
sbb
pop
dec
pop
popf
nop
fstp
cmp
lea
push
dec
lds
jae
movsl
inc
add
mov
xchg
push
out
dec
mov
xchg
repnz
fs
sbb
int
xlat
pop
push
and
lods
jle
jg
mov
andl
dec
xchg
dec
xlat
pusha
jno
sub
push
or
or
fidivrs
mov
divb
repnz
xchg
adc
cmp
sbb
popf
or
adc
mov
jo
sub
xor
sahf
jnp
jno
ret
xchg
adc
cmc
sub
adc
test
shlb
push
aad
lret
push
mov
das
andb
dec
dec
pop
inc
fsub
cmpsl
js
xor
dec
std
mov
xchg
test
push
test
movsl
xchg
xlat
mov
fxam
pusha
xchg
dec
rcrb
cmp
and
jbe
in
xchg
ds
add
out
loope
mov
dec
ljmp
int
daa
mov
fstpl
decb
bound
loope
xor
sahf
pop
pop
mov
xlat
bound
mov
clc
call
sub
int3
loope
pushf
movsl
inc
popf
aas
test
out
shll
ret
push
ljmp
fst
in
fisubl
mov
movsl
jo
pop
loopne
push
les
sub
xor
inc
jo
mov
loope
ljmp
push
jae
into
movsl
mov
pop
adc
adc
mov
lods
mov
jno
popf
js
das
jne
arpl
out
lods
inc
movsl
push
imul
into
lock
cmp
add
mov
cmp
cwtl
xchg
lds
cld
out
mov
sahf
inc
clc
lods
outsb
cs
mov
scas
mov
in
pop
jge
or
xlat
push
test
ret
rclb
adc
push
inc
mov
and
mov
in
pop
inc
divb
lock
out
xchg
dec
movsl
imul
pop
jecxz
ja
mov
das
movsl
dec
mov
mov
out
mov
inc
fst
in
mov
mov
lock
mov
in
and
cltd
inc
pop
sbb
xor
popa
sub
fldenv
mov
in
in
push
loopne
movsl
gs
nop
and
addr16
outsb
inc
int
mov
xor
shr
fldl
jbe
movsl
int
push
movsb
cltd
loope
iret
scas
fisubs
push
and
push
test
into
movsl
and
enter
sub
cs
jnp
test
and
fidivrl
je
divl
js
jnp,pt
lods
movsl
hlt
push
sti
repz
in
sub
ljmp
jecxz
push
jl
xchg
lcall
scas
test
lahf
movsl
dec
xor
xor
xchg
loopne
rclw
subl
cmc
fldl
xchg
xchg
xchg
sbb
int
in
in
int3
push
movsl
testl
mov
pushf
pop
orl
sbb
imul
in
cwtl
and
fnsave
imul
inc
dec
ds
mov
adc
std
scas
pop
push
insb
mov
cmp
push
mov
in
insl
enter
popa
cld
loope
cmp
adc
sbbl
stos
add
or
sub
pop
icebp
jno
mov
lods
mov
cmc
and
pop
pop
dec
jl
mov
test
leave
inc
xchg
or
inc
mov
pusha
std
pop
pop
scas
lcall
lods
dec
out
movsl
mov
xrelease
movsl
je
in
loopne
in
or
out
push
mov
out
lods
pop
movsl
pop
popl
jno
movsl
xchg
leave
test
add
jnp
repz
movsl
pop
inc
jmp
fldenv
inc
xchg
rcrl
mov
mov
sub
pop
movsl
cmp
dec
hlt
adc
push
sbb
xlat
insl
ret
dec
adc
lock
vminsd
sahf
bnd
sub
xor
movsb
movsl
sbb
xlat
and
and
mov
dec
adc
add
ret
jmp
mov
movsl
enter
mov
aam
sahf
outsb
add
mov
mov
inc
ljmp
repz
jp
push
pop
inc
divl
nop
cmc
mov
shlb
xchg
inc
sbb
fimuls
xchg
push
out
lcall
sub
lahf
in
cmp
pop
inc
mov
std
js
jnp
addl
sub
movsl
push
insl
ficompl
in
and
pusha
pop
jmp
jecxz
movsl
mov
jns
dec
movsl
fistpl
dec
movsl
sti
pushf
inc
cmp
movsl
pop
out
jg
mov
ss
test
insb
cmp
cwtl
sub
fnstenv
push
movsl
arpl
mov
mov
pushf
movsl
inc
lcall
imul
nop
xor
fdivrs
push
sub
pusha
in
mov
mov
add
loop
push
dec
mov
in
into
movsl
cs
pop
adc
push
les
sbb
movsl
leave
push
out
fimuls
inc
mov
push
loope
mov
rcrb
jge
aaa
mov
mov
movsl
pop
imul
leave
mov
int
out
repnz
incb
cmpsl
add
dec
js
movsl
inc
xchg
loope
insl
cmp
daa
imul
jo
repnz
fadd
lcall
push
jecxz
mov
dec
stc
xchg
movsl
xchg
mov
or
movsl
lods
inc
jl
jne
repz
bound
lock
cmp
inc
mov
pop
xor
std
or
mov
jo
mov
xchg
fists
lret
in
dec
test
movsl
or
sub
scas
push
xchg
movsl
femms
xor
xchg
pop
outsl
je
les
cmp
ss
and
pushf
movsl
mov
push
dec
cld
movsl
jge
jl
and
sbb
scas
dec
mov
push
dec
mov
jmp
andb
push
movsl
lret
icebp
cs
daa
jne
cmc
xchg
aad
push
arpl
jno
ret
push
sbb
mov
sahf
pop
xchg
jl
xchg
push
mov
xor
es
xor
movsl
add
xorb
movsl
cmp
imul
loope
in
ljmp
jecxz
mov
xchg
mov
in
mov
ljmp
lcall
pusha
aad
inc
mov
nop
add
mov
xchg
dec
dec
loope
sbb
sbb
cwtl
jecxz
aad
jl
je
movsl
pop
ds
sub
cli
dec
xchg
fsub
mov
pop
add
cmpsb
sub
and
movsl
repz
xor
dec
lods
mov
xchg
aas
lods
inc
push
jl
dec
movsl
bound
mov
inc
repz
pop
fdivl
orl
pop
sub
sahf
fdivs
mov
scas
pop
imul
lcall
fidivs
mov
mov
fs
out
or
jbe
cmp
cmp
add
inc
mov
adc
push
push
inc
pop
mov
mov
sar
mov
mov
notl
repnz
xchg
jmp
mov
out
movsl
lods
xorl
movsl
movsl
hlt
fcmovnu
call
data16
insl
cltd
lret
cmp
ret
movsl
mov
inc
lcall
mov
inc
add
shll
fxch
movsl
imul
mov
mov
divb
loopne
ljmp
lahf
push
adc
inc
ffreep
stc
xchg
aas
ret
cmpsb
movsl
adc
fdivp
mov
mov
inc
sbbl
or
orl
dec
data16
aaa
in
pop
jae
fnsave
mov
adc
dec
add
xchg
jno
jle
test
dec
inc
mov
movsl
pop
dec
mov
xchg
adc
and
mov
andl
imul
cmp
in
ljmp
aad
clc
scas
movsl
push
fsubrp
sub
loope
mov
lods
mov
lods
pushf
mov
pop
movsl
push
out
xor
adc
mov
cmpsb
xchg
mov
dec
jno
mov
mov
in
inc
movsl
fisubs
gs
pop
mov
or
ret
xchg
mov
out
sti
sahf
cmp
push
js
sub
aad
ds
ret
movsl
cmp
shlb
subl
bound
pop
ljmp
filds
in
and
push
movsl
xlat
dec
pop
lret
push
std
movsl
sbb
adc
xchg
js
xor
outsb
aaa
in
inc
add
add
mov
es
iret
mov
sarb
xor
stos
add
jecxz
movsl
fcompl
pop
lds
xchg
lea
and
xchg
outsb
xchg
cmp
mov
movsl
jge
push
pop
dec
xlat
insb
dec
mov
test
mov
sbb
imul
popa
jge
pop
pop
cmpsb
mov
movsl
adc
sbb
xchg
sub
sbb
sub
push
cmp
push
jns
inc
mov
xor
aas
clc
in
xor
push
es
out
add
xor
push
mov
adc
in
orl
sub
call
fcompl
mov
fimull
mov
jmp
mov
icebp
adc
or
cmc
xlat
push
call
mov
adc
les
sub
or
push
lods
imull
sbb
iret
cmpsl
and
sar
inc
mov
cmc
sbb
imul
and
bound
or
in
cmpsl
movsl
or
dec
pop
jns
push
jne
jno
push
inc
imul
movsb
xor
sahf
xchg
aaa
std
in
jmp
call
popa
or
loope
mov
lcall
pushf
aaa
sub
clc
dec
lods
push
sbb
mov
ds
push
inc
xor
cmp
xor
movsl
lahf
mov
add
lds
pop
cli
fsubs
in
pop
nop
mov
orb
popf
fnstsw
sti
and
pop
ss
xchg
js
lock
ljmp
andl
das
ret
push
xchg
mov
out
test
push
frstor
cmpsb
mov
movsl
pop
mov
add
ret
push
pusha
data16
mov
outsl
mov
xchg
sahf
push
push
in
mov
mov
mov
push
push
ret
mov
aam
cwtl
push
jge
dec
movsl
mov
sarl
out
jecxz
add
xchg
mov
jns
sar
ficomps
in
in
adc
mov
addr16
cmp
pop
and
jmp
fsts
movsb
cmpsb
cwtl
xchg
mov
lcall
clc
out
stos
pop
mov
cs
int
femms
int
jo
aam
dec
into
pushf
movsl
lahf
xor
inc
sahf
and
xchg
fists
pop
adcl
mov
push
test
add
mov
xor
movsl
fisubl
out
mov
inc
xor
loope
les
sti
adc
movsl
cwtl
fcmove
stc
sbb
push
insb
pop
push
ret
and
jo
cmpsl
pop
add
dec
jle
jg
mov
xchg
dec
push
inc
mov
pop
dec
insl
mov
cmp
mov
ja
shr
push
insb
mov
clc
adcb
push
dec
in
mov
mov
lds
adc
pop
cs
bound
imul
in
into
jmp
movsl
int
imul
std
sahf
negb
inc
mov
std
stos
cld
fs
lcall
jp
subl
iret
cmc
inc
jmp
sbb
out
es
aad
int3
cmp
pop
xchg
mov
test
mov
mov
ror
vrcpss
test
or
mov
pop
and
rcrl
mov
ss
sahf
data16
movsl
push
cmc
bound
lahf
pop
jae
dec
push
movsl
jge
push
pop
sub
in
aad
in
out
pop
aas
stc
insl
movsl
out
pop
inc
cltd
pop
lock
cmpsl
inc
int3
scas
sbb
movsb
sbb
jne
xor
cmp
mov
pop
cmp
xchg
jbe
lea
lods
movsl
insl
pop
jns
arpl
lock
fs
or
mov
or
cmpsb
and
and
int3
pusha
dec
lds
jb
ret
movsl
or
mov
adcb
movsl
xchg
mov
mov
leave
scas
add
fistpll
xchg
jg
sub
fisubl
push
pop
into
dec
negl
sub
jbe
add
and
mov
iret
fwait
aad
int
aas
xchg
jb
add
or
mov
sbb
cmp
ret
mov
cmpsb
push
insl
int3
std
shlb
xor
mov
faddp
xchg
jecxz
jmp
cwtl
xor
cmp
or
pop
cmpsb
popf
daa
mov
lcall
and
jg
mov
rcll
repz
movsl
in
xchg
cmp
lret
or
movsl
mov
xor
fcomps
aad
aam
insl
mov
cmp
loope
sbb
lcall
pop
jge
imul
dec
popf
add
cld
inc
push
inc
daa
xor
ljmp
fildll
mov
adc
dec
frstor
stc
adc
out
sub
stos
movsl
adc
add
std
pop
int3
sbb
aam
movsl
add
hlt
dec
xchg
pop
ds
jbe
ret
push
out
xchg
in
cmp
int
std
movsl
sub
or
sbb
cwtl
sti
int
mov
mov
xor
cmc
lock
int
in
scas
movsl
xchg
cld
mov
xor
mov
mov
push
outsl
dec
xor
popa
in
sbb
pop
push
cmpsb
and
pop
shlb
pop
pop
das
movsl
jmp
sub
xor
sbb
ret
in
loopne
stc
lret
xor
rcl
dec
in
jae
ficomps
movsl
adc
jb
jne
shll
pop
flds
es
imul
int
stos
sbb
repz
js
sti
nop
pushf
cmc
sbb
in
aas
lret
sbb
loop
testl
jo
call
push
push
outsl
xor
bound
fs
adc
jl
mov
aad
add
movsl
mov
jp
xor
fmull
scas
xor
cmp
adc
jns
loope
xchg
push
jbe
mov
lds
inc
addr16
movsl
xchg
int3
sub
pop
leave
pop
adc
inc
push
cli
mov
dec
cld
into
jae
in
cmpl
int3
xor
and
push
dec
adc
sbb
inc
push
sub
in
daa
xchg
pop
mov
pop
subl
inc
cmp
mov
lcall
insl
mov
dec
inc
mov
out
mov
add
mov
in
mov
push
jne
ror
add
mov
dec
jge
jnp
xor
ret
negb
sbb
mov
jnp
jns
sbb
push
ja
mov
adc
loopne
and
loope
mov
movsl
adc
xchg
jp
movsl
orl
aam
dec
push
movsl
bound
push
leave
fxam
movsl
stc
inc
jnp
enter
pop
mov
and
adc
hlt
sbb
mov
movsl
fcoms
jno
mov
stc
cmpsl
jecxz
mov
xchg
sbb
push
add
cld
add
pop
int
addb
lods
and
mov
push
insl
xchg
mov
dec
mov
push
insb
push
cmp
loopne
int
push
movsl
rolb
cli
lret
cs
xor
jne
adc
dec
adc
daa
movsl
out
lock
sub
aad
xchg
movsl
aam
xchg
ret
inc
sbb
jns
mov
mov
icebp
fisubs
aad
dec
mulb
cli
scas
leave
dec
jae
movsl
out
mov
and
lahf
or
enter
push
movsl
sti
add
movsl
into
push
cmp
repz
lods
or
lea
mov
xchg
iret
lods
out
cwtl
lods
in
fs
mov
aad
sub
orb
dec
movsl
test
iret
inc
inc
mov
ja
cmp
out
or
push
sbb
cltd
movsl
lds
xor
into
gs
xor
cwtl
loopne
jmp
push
out
mov
roll
daa
xchg
lods
mov
imul
and
out
movsl
shrl
cmp
push
cmc
loopne
push
mov
inc
push
outsl
enter
mov
into
aad
ss
push
and
cmp
fildll
movsl
cmc
loop
cli
ljmp
adc
add
iret
loopne
sti
daa
orl
add
movsl
movsl
cltd
stos
pop
and
nop
or
pushf
in
gs
sbb
das
xchg
outsb
std
and
inc
sti
or
lret
mov
lds
lret
pop
push
push
clc
leave
sub
ljmpw
imul
into
sbb
loop
xchg
shll
jge
xor
cmpsl
insl
mov
pop
push
and
nop
jno
pop
cmp
aad
sahf
es
fidivl
into
hlt
cmp
movsl
sub
imul
ret
rcrl
push
jno
dec
movsl
loope
daa
xor
lea
movsl
or
jnp
sub
out
pop
xchg
push
xlat
push
cmp
sub
or
jmp
adc
std
xor
mov
mov
nop
jns
add
pop
add
and
stc
das
jmp
into
movsl
sub
and
scas
movsl
and
and
pop
and
enter
lds
and
into
arpl
popa
inc
xchg
push
lret
mov
push
xchg
out
rolb
aaa
pop
jno
or
mov
int3
fcompl
sahf
pop
mov
mov
sub
pushf
repnz
mov
add
push
cmp
push
movsl
push
ja
cli
xchg
mov
mov
iret
mov
mov
jl
sarl
and
push
test
mov
jl
sub
movsl
jae
popa
mov
cli
mov
stos
movsb
pop
jmp
movsl
jle
pop
xchg
push
pusha
movsl
sbb
ljmp
push
cmpsl
sbb
out
fnstcw
and
inc
mov
mov
push
pop
loopne
aam
cwtl
in
jle
mov
into
fdivrp
out
movsl
and
xchg
mov
cmp
cmc
movsl
sarb
push
stos
and
adc
repnz
sub
mov
int
sahf
jmp
aaa
hlt
cmc
push
mov
jns
repz
cli
fmuls
popa
push
mov
scas
out
movsl
out
lret
stc
cmpsb
cltd
fisubrl
dec
addr16
lret
adc
movsl
roll
jmp
mov
cmpsl
adc
std
and
shll
cmc
icebp
sahf
push
int3
repz
pop
mov
cs
loop
lcall
in
pop
outsb
pop
das
push
aas
inc
push
outsb
arpl
loope,pn
incl
in
mov
das
dec
mov
mov
daa
faddp
sub
sub
pop
dec
jge
out
jbe
jae
movsb
or
xchg
mov
mov
sbb
xor
cmc
jp
inc
sbb
or
mov
popa
sub
popa
mov
loop
sbb
push
push
movsb
or
fidivrl
and
and
fsubs
push
test
arpl
mov
dec
cmc
cmpsb
ficoml
out
dec
sbbl
addr16
aaa
xchg
xor
adc
inc
mov
stos
lret
subl
xor
lods
sbb
movsl
sub
sbb
push
inc
jns
mov
repnz
movsl
jmp
jecxz
fldt
or
add
add
mov
or
mov
add
add
xchg
pusha
pop
addr16
aad
je
push
cmp
daa
mov
movsl
xchg
pop
or
cmp
popa
movsl
and
fisttps
jae
mov
ljmp
sub
test
je
jo
jl
movsl
jb
fisttpl
stc
cmp
fwait
inc
xchg
mov
rcrb
lock
mov
add
fbld
sbb
pushf
mov
es
fdivrs
roll
push
out
push
cli
pop
pop
lret
mov
daa
bound
js
ficoms
icebp
jecxz
das
popf
sub
test
stos
xchg
mov
cmp
cwtl
movsb
lods
clc
imul
imul
idivl
cmp
out
sub
es
push
push
insl
lock
inc
jmp
cmpsl
inc
insb
inc
jmp
pop
mov
cwtl
and
jecxz
js
sbb
int
clc
pop
jbe
inc
pop
in
sub
movb
mov
es
sbb
mov
vmaxpd
sbbl
jbe
adc
scas
mov
sub
hlt
cmc
lods
cmc
hlt
sub
add
lret
adc
dec
cs
fdivrl
fldt
sahf
and
pop
push
push
out
in
sbb
xchg
inc
jbe
ss
and
stc
leave
adc
push
ret
aad
adc
push
sbb
pop
mov
addl
enter
inc
xchg
sbb
pop
dec
mov
ja
xchg
jbe
sbb
mov
sbb
in
adc
ret
adc
loop
sbb
pusha
sbb
cld
dec
rolb
sarb
xor
and
cwtl
or
out
std
pop
adc
sub
pop
pusha
arpl
xor
push
push
pop
fbstp
imul
icebp
mov
cmc
mov
cmp
fsubs
cmpsl
push
in
lock
mov
mov
mov
cli
ret
or
in
cltd
roll
sahf
stos
jo
dec
dec
add
push
adc
pop
pushf
inc
jno
sbb
insb
stc
mov
in
jne
stos
adc
jmp
jno
sahf
rcrl
adc
scas
sub
jmp
ret
push
cmc
jmp
into
lock
and
scas
call
adc
sub
movsl
and
pushf
lea
push
xchg
sbb
mov
cmc
add
mov
cmpsb
stc
imul
dec
xor
movsl
and
push
cmc
sahf
aam
leave
adc
sbb
sbb
mov
inc
mov
push
inc
cmpsb
subl
aad
fstl
xchg
mov
and
rcrb
in
outsb
push
movsl
adcb
cli
enter
mov
test
mov
or
sahf
daa
xchg
lahf
neg
dec
push
xchg
leave
pop
mov
inc
dec
out
lock
movsl
dec
addb
in
in
lods
stos
stos
movsl
adc
dec
aas
movsl
daa
inc
jge
cmc
or
in
xchg
pop
push
jbe
lahf
xlat
jecxz
movsl
add
pop
lods
sahf
movsl
in
hlt
xchg
mov
lds
jge
add
push
push
insb
lods
inc
in
push
xchg
or
lea
mov
imul
push
gs
cmc
in
push
fisubs
jb
or
push
int
aam
sub
arpl
jne
and
clc
das
jmp
mov
or
bound
push
mov
orl
inc
aam
lcall
ret
sub
mov
cmpsb
lds
mov
aam
fldcw
xchg
adc
std
faddl
into
scas
loop
sti
mov
or
and
push
in
std
mov
push
aam
xchg
sub
sub
mov
xchg
jge
mov
cwtl
call
sub
xor
mov
sub
sahf
mov
sub
pop
xchg
xchg
pop
push
ja
arpl
iret
mulb
xchg
xchg
mov
and
jge
cwtl
sbb
cs
lock
sbb
mulb
fcmovnu
dec
mov
icebp
pushf
test
jg
ja
mov
out
shll
sub
inc
lret
jne
sbb
dec
lock
popa
and
lds
mov
leavew
fisttpl
stc
lcall
pop
cmpsl
or
cwtl
and
mov
push
pop
jge
cmc
fs
jno
add
rcrb
add
icebp
pushf
out
fstpt
xor
mov
push
stos
stc
movsl
loopne
xchg
xlat
add
sti
mov
imul
cmpsl
dec
ret
movsl
pop
xor
notl
lret
dec
loopne
cmpl
lds
inc
lods
ss
mov
sub
mov
mov
push
fs
das
jl
add
jl
std
lock
hlt
cmp
mov
push
aaa
daa
test
jl
das
mov
and
cmp
mov
outsl
xchg
andb
aad
leave
adc
std
imul
mov
popf
jns
adcb
xchg
push
jle
lods
mov
sub
inc
mov
and
daa
cmp
sbb
fwait
jne
loope
std
test
xlat
pop
test
insl
or
push
cwtl
xchg
je
stos
sahf
cwtl
loope
inc
cmp
pusha
nop
push
push
jne
inc
xchg
xchg
mov
cld
es
jmp
lea
int3
inc
mov
push
adc
leave
insl
jne
shl
stos
push
sub
mov
fldl
leave
out
xchg
mov
fdivr
mov
adc
fmull
mov
or
lret
pop
in
fcomps
adc
rol
or
dec
movsb
sbb
in
int3
lock
add
in
mov
shl
fwait
sub
push
imul
cwtl
sbb
jge
iret
push
scas
out
cwtl
xor
shlb
xor
lcall
dec
aad
mov
cmp
es
cmp
dec
xor
lds
mov
fbld
mov
jae
les
aas
call
mov
sub
jge
cmp
lds
dec
or
aad
adc
leave
inc
sub
cmpl
lcall
lcall
popf
xor
mov
sar
mov
and
popa
cmpsl
std
sub
xchg
decl
sbb
inc
es
popf
xchg
push
xchg
dec
out
push
fbstp
mov
enter
mov
jb
cli
cmc
push
jbe
cmc
pop
jl
xchg
xchg
js
insb
inc
jp
xor
loope
arpl
cwtl
fsubrl
or
mov
mov
jb
xchg
rolb
sti
loopne
inc
test
or
scas
mov
adc
movsb
int
mov
test
stc
out
cmp
movsl
mov
sub
je
sbb
lods
pop
mov
movsl
lds
xor
add
pop
mov
popf
push
out
inc
jmp
xor
push
cmp
sahf
aaa
adc
jno
gs
ja
hlt
inc
insl
sub
xchg
push
and
push
cmpsb
movsl
mov
cmp
cld
or
mov
movsl
gs
and
inc
test
and
ret
adc
mov
push
shlb
loopne
dec
arpl
in
mov
mov
into
sub
data16
out
cli
mov
jecxz
cmc
pop
daa
xchg
sub
push
scas
clc
filds
mov
int
int
lods
pop
idivl
fldcw
xchg
popa
push
arpl
in
push
mov
sub
jne
xchg
lcall
mov
sub
pop
mov
cmc
test
fdivrs
fstl
mov
stc
stc
adc
xchg
push
fistl
lods
cltd
jmp
pushf
jg
and
xor
xchg
cmp
mov
xlat
inc
pop
cs
andb
incl
notb
lret
data16
and
cmp
fdivrp
loope
jp
lds
xor
sbb
push
mov
iret
sbb
add
lods
jae
ja
push
ljmp
sub
and
xchg
aas
dec
jno
cmpsl
sbbb
icebp
and
inc
lcall
sbb
add
je
cli
pop
andb
adc
or
pushl
mov
test
add
jne
sub
lock
repnz
scas
push
test
out
or
fadds
aas
inc
fs
shlb
sbbb
sahf
data16
mov
pop
jbe
inc
pop
inc
mov
lret
push
pop
jge
pop
jl
leave
clc
push
decb
or
js
push
stos
movsl
mov
sub
ljmp
mov
movsl
xlat
mov
inc
jbe
arpl
loopne
lods
cld
movsl
or
mov
divl
pop
ficoms
push
movsl
std
jae
int
sbb
in
cmp
xchg
aas
mov
add
in
clc
sub
lcall
inc
inc
lds
andl
xchg
pop
seto
ljmp
int
lret
sbb
in
mov
mov
aad
mov
xchg
out
lahf
mov
mov
adc
movsl
cmp
in
int3
stos
push
cmp
jle
cli
leave
rorl
dec
cmp
sbb
movsl
pop
scas
loope
mov
push
mov
gs
movsl
xor
sub
ret
shlb
leave
subb
mov
mov
jg
mov
dec
mov
jecxz
jne
rol
cmovbe
or
push
cmp
lods
mov
movsl
data16
or
sub
stos
sbb
sbb
cltd
sub
popf
and
sub
inc
mov
and
test
jge
add
inc
movsl
mov
jbe
ss
xchg
dec
call
fdivp
in
aam
imul
arpl
pushf
or
stc
sbb
mov
sub
test
fmul
cwtl
in
mov
and
cmp
loop
sub
repz
push
adc
iret
out
lret
les
test
scas
lods
cmpsb
dec
movsl
add
push
push
mov
in
out
sbb
aaa
stos
movsl
xchg
mov
mov
faddl
sar
enter
rorl
jp
ja
sahf
pop
adc
js
and
fstps
movsl
inc
inc
mov
push
sbbl
mov
fnsave
jecxz
xchg
int3
mov
movsl
mov
inc
sub
into
in
les
or
lret
aas
jg
pop
sbb
inc
je
push
insl
movsl
imul
out
cld
dec
or
and
sbb
mov
arpl
in
sub
iret
mov
or
mov
ljmp
jae
loopne
jno
pop
push
cli
pushf
cmpsl
dec
pop
imul
ret
lds
movsl
sti
loop
aas
cmc
sub
xor
scas
das
xchg
add
insb
test
flds
jae
les
sub
pop
fstl
jle
pusha
jns
out
aaa
movsl
dec
adc
js
lock
movsl
outsb
push
adc
movsl
sbb
call
cmp
add
mov
movsl
push
push
cwtl
sub
out
je
ret
sbb
icebp
cmp
inc
popf
cld
cmp
lahf
in
xor
sbb
cmp
lahf
mov
movsl
mov
cmp
cmpsl
jg
movsl
add
adc
imul
or
xchg
mov
movsl
mov
aaa
cld
test
jmp
adc
pop
sub
cld
and
inc
popa
gs
ja
add
movsl
sbb
outsl
pop
mov
push
cmp
xor
dec
leave
loope
sbb
cmp
into
mov
mov
aam
shr
xchg
push
cmpsl
arpl
movsl
sub
in
scas
jbe
inc
sbb
ja
loope
sbb
mov
fbld
add
xchg
ljmp
pop
jbe
movsl
shrl
lret
cmpsl
mov
push
movb
sarl
push
gs
dec
in
jg
imul
jge
pop
sbb
mov
std
mov
pop
arpl
jae
aam
mov
inc
adc
jbe
icebp
xchg
movsl
out
sarb
pop
je
movsl
iret
mov
in
dec
add
pop
in
ret
mov
rcr
push
xchg
and
push
movsl
inc
mov
mov
movsl
in
in
pop
dec
add
shll
lea
rolb
inc
addr16
fucom
sub
dec
sahf
fcomip
rcrb
sub
jmp
movsl
xor
lock
rolb
mov
or
pop
sbb
mov
pop
xor
pop
mov
cmc
lods
lea
sub
sub
stc
xor
in
jbe
dec
ss
adc
push
mov
movsl
jae
enter
gs
mov
movsl
dec
sub
pop
stc
clc
pop
adc
pop
dec
adc
xchg
lret
and
sub
fmul
imul
pop
jmp
loope
adc
mov
add
mov
sbb
loop
sbb
mov
int
mov
cltd
xchg
rorl
push
adc
pusha
mov
movsl
sub
lret
sub
jns
or
push
loopne
xchg
lcall
iret
rep
enter
out
xchg
sub
xchg
mov
dec
rorl
and
cld
jo
and
insl
cmc
jb
rolb
add
movsb
xchg
add
cmp
movsl
xchg
pop
jmp
push
movsl
lcall
leave
movsl
incb
fsubr
jl
imulb
push
jp
jg
dec
movsl
and
cmp
movsl
mov
xchg
cmc
movsl
push
sbb
sub
inc
lods
je
movsl
mov
icebp
pop
or
popf
sub
jo
cmpsl
mov
fsubr
cmp
repnz
cmp
or
out
jbe
push
lods
mov
test
add
jp
stc
leave
xchg
in
inc
insb
mov
cmc
ror
jp
movsl
mov
loopne
out
lock
sub
insl
test
shr
mov
add
push
ljmp
aas
jl
mov
add
mov
insb
push
jg
hlt
ret
xor
mov
inc
jae
cmp
and
bound
ja
popf
mov
gs
mov
xchg
mov
ja
leave
inc
add
sahf
xchg
in
sbb
lret
mov
andl
pop
movsb
fwait
mov
push
es
mov
mov
lahf
mov
bound
fld
movsl
je
icebp
out
lods
movb
lahf
dec
jbe
pop
movsl
out
jl
bound
jns
dec
sub
xor
movsl
pop
adc
pop
lods
jns
inc
movsl
insl
loop
notl
add
mov
pop
divb
jmp
roll
shr
and
inc
aad
jnp
je
movsl
lds
jmp
movsl
insl
imul
stos
fisubl
lds
aam
xchg
bound
stos
in
movsl
hlt
jnp
popa
jo
sbb
mov
test
mov
movsl
xor
addr16
je
pop
movsl
mov
mov
daa
xor
mov
pop
sub
cli
loop
xorl
ja
ds
push
pop
jmp
xchg
outsl
movsl
pop
aad
fdivrl
cmc
fwait
push
fldt
dec
cmc
cld
or
test
movsl
repnz
pop
test
sub
inc
mov
add
in
push
sub
test
movsb
and
js
adc
jns
xchg
ja
xchg
dec
lds
outsl
movsl
fldl2e
inc
loope
pop
sahf
mov
sbb
cmc
loopne
movsl
cmpsb
push
sub
mov
mov
ret
sub
push
sahf
fdiv
push
jge
mov
add
fidivl
insb
loope
pop
xchg
sbb
imul
popa
push
clc
outsl
inc
and
leave
pop
into
rolb
lds
je
push
jbe
mov
imul
scas
aad
ljmp
xchg
jmp
mov
and
cmc
jmp
sub
call
movsl
push
icebp
pop
jg
xchg
xlat
xchg
mov
enter
popa
sub
jl
test
sahf
in
adc
stos
add
push
sub
sub
sub
cld
pop
and
add
mov
sahf
test
jecxz
xlat
popa
sub
sahf
les
and
or
shll
and
rcr
mov
push
into
mov
sub
mov
icebp
cmp
out
mov
xchg
ret
cld
not
jno
sub
fwait
add
mov
inc
lock
inc
push
fs
add
arpl
fs
xchg
jnp
lods
js
test
pop
sahf
cmp
loopne
push
dec
pop
js
sbb
cmc
outsb
fistpl
pop
in
or
fwait
fs
in
sbb
js
xchg
mov
mov
xchg
mov
pop
inc
fbld
xlat
pop
and
sahf
mov
lahf
add
addr16
sub
jp
dec
jne
lds
sbb
add
call
and
cmp
cwtl
mov
inc
pop
xor
test
in
pop
xor
gs
push
push
xlat
loopne
sbb
lds
jo
paddsb
dec
imul
sbb
sbb
movsl
pop
enter
mov
and
lea
add
and
mov
mov
loope
ds
movsl
fsubrl
inc
mov
adc
in
sub
push
jg
push
mov
leave
xchg
ja
push
mov
and
or
mov
in
xchg
shl
jecxz
jle
inc
xchg
adc
movsl
addr16
pop
adcl
int3
mov
xchg
jbe
jnp
adc
mov
lret
or
add
add
loopne
pop
cmc
insl
in
mov
inc
scas
push
cmc
xor
pushf
out
imul
movsl
lods
sbb
or
adc
mov
pop
fcomi
fiadds
and
shlb
sbb
jns
add
pop
movsl
sub
pop
jns
dec
lock
or
jb
outsl
dec
jp
fcmovnb
movsl
xchg
xchg
cld
test
inc
jbe
cmp
movsl
xor
push
adc
not
std
movsl
inc
daa
pop
xor
xchg
or
ds
xlat
out
pop
movsb
jae
inc
out
mov
dec
mov
lds
mov
test
mov
stc
les
xchg
xor
loopne
lods
jbe
push
rcl
mov
jbe
imul
push
cmp
mov
add
movsl
outsl
sbb
adc
mov
mov
imul
scas
test
adc
jmp
pop
sarl
movsl
fldt
dec
movsl
out
aaa
or
mov
sti
dec
jae
mov
mov
jge
lret
xchg
cmp
fld
sub
add
mov
sahf
aam
daa
push
inc
imul
das
test
popf
xchg
ret
xchg
in
mov
dec
or
aam
movsl
pop
push
sbb
sbb
stc
xchg
pop
jns
dec
sahf
xorb
int3
fsubl
test
out
jp
xchg
add
mov
adc
push
in
xor
push
mov
insl
push
sub
repz
not
aad
outsb
push
pusha
pop
jge
mov
add
dec
in
lods
repnz
cmp
push
movsl
mov
rol
movsl
or
neg
dec
pop
sub
jg
mov
popf
movsl
adc
mov
das
sub
mulb
sub
movsl
and
mov
jp
ja
mov
mov
mov
cmp
dec
std
movsl
je
mov
or
xchg
mov
xorb
std
inc
jo
pushf
dec
push
xorl
sti
roll
jnp
sbb
sbb
in
jge
repnz
jmp
subps
sbb
movsl
fstpt
mov
movsl
or
dec
push
loope
shl
mov
pop
cs
outsl
mov
vpsubsb
push
rep
push
daa
fbstp
cltd
and
xchg
mov
push
sbb
and
mov
add
cmp
mov
cmp
mov
mov
mov
dec
mov
mov
dec
add
movsl
cmp
rol
movsl
push
sub
pushf
test
xor
xchg
and
inc
imul
ret
sahf
idivl
xchg
movsl
ds
adc
dec
or
jecxz
movsl
mov
sbb
bextr
movsl
inc
pop
jp
dec
jmp
imul
push
mov
movsl
and
cltd
xor
sub
out
in
inc
ret
xchg
sub
movsl
cmp
xchg
adc
inc
movsl
fstpl
arpl
decb
test
pop
movnti
sub
in
outsl
push
add
xor
popa
in
pop
push
or
test
inc
or
lock
leave
sar
enter
xor
mov
mov
ret
movsl
pop
pop
jb
pop
and
mov
les
cmovbe
ret
movsl
mov
xchg
les
negb
pop
xor
mov
outsb
ja
push
add
aam
adc
popa
into
loope
aad
push
mov
and
cmp
js
xchg
xchg
cmp
add
fistl
xlat
cmpsl
aas
movsl
das
test
bound
dec
mov
or
dec
les
jmp
mov
mov
cmp
sbb
xchg
icebp
movsl
test
xor
mov
cmc
xchg
sub
seta
push
xor
xor
daa
lcall
insl
inc
enter
scas
lods
movsl
or
xchg
test
jnp
fdivrs
cmc
dec
data16
call
push
movsl
xchg
and
ret
stos
test
or
sub
movsl
lock
jg
lcall
push
push
mov
dec
dec
add
out
adc
push
sub
adcl
ret
mov
sbb
enter
movsl
and
int3
into
out
cmp
call
mull
pop
xchg
movsb
es
sbb
xchg
stos
mov
xchg
mov
xor
int
jecxz
mov
lds
and
subl
pusha
pop
push
lds
xchg
mov
and
in
push
push
out
jb
cs
and
movsl
cmp
jmp
adc
nop
mov
andb
iret
add
movsl
or
repz
lahf
add
mov
or
movsl
and
mov
out
insb
andb
mov
repnz
pop
int
cmp
push
loopne
outsl
std
mov
cmpsl
movsl
dec
test
pop
leave
push
push
orl
movsl
add
inc
jns
and
mov
popf
ljmp
jmp
xor
sbbb
call
adc
mov
cwtl
jae
sub
push
lds
scas
lds
jb
outsl
movsl
enter
sbb
mov
or
jb
jg
dec
fsts
test
ds
movsl
mov
sub
sbb
test
dec
in
ja
rorl
scas
arpl
mov
mull
mov
push
test
mov
repnz
sub
movsl
dec
test
pop
dec
jmp
aam
arpl
or
mov
cmpsb
xlat
xchg
out
out
jge
or
rcr
psubq
jecxz
icebp
pushf
cmp
xchg
cmp
lcall
out
jbe,pt
push
mov
in
jg
push
stos
push
sti
rcrl
and
adc
ds
mov
mov
enter
xor
and
stos
dec
mov
push
sub
lds
jne
adc
test
bound
mov
shlb
add
inc
and
stos
in
mov
loope
dec
movsl
clc
and
sub
xchg
mov
inc
lds
test
dec
push
movsl
insb
cmpsb
sub
xchg
xchg
cmpsl
aad
cld
or
sbb
push
movsl
test
xchg
popa
or
movsl
mov
iret
cld
shll
shlb
jl
or
test
movsl
jnp
jbe
sbb
inc
movsl
call
test
daa
cmovg
add
mov
xor
ret
imul
sti
cmp
data16
addl
dec
shll
jb
inc
movsl
loop
lock
jmp
inc
movsl
xchg
outsl
mov
pop
or
sub
and
outsb
movsl
pop
xlat
mov
or
and
sub
xorl
pusha
sbb
mov
mov
cmp
inc
aad
mull
dec
add
mov
push
imul
lods
cltd
push
shr
adc
aad
popf
test
adc
xchg
sbb
jle
jg
mov
mov
mov
push
dec
orl
jbe
popf
cmp
lahf
and
fucomip
inc
lock
jbe
add
loope
in
call
jae
fwait
pop
or
das
mov
clts
out
mov
jl
in
xor
mov
test
shlb
cmp
sub
jge
adc
aad
in
inc
pop
pop
dec
mov
xor
fldl
neg
movsl
cmp
cmp
adc
push
lahf
leave
pop
lods
adc
mov
movsl
xchg
push
addr16
mov
movsl
adc
out
add
inc
pop
jle
inc
dec
inc
sub
fnsave
je
push
fidivrs
fstl
pop
inc
ror
mov
daa
jne
loopne
test
popa
or
ja
sub
sti
out
in
lret
mov
adcb
push
sahf
movsb
push
push
cltd
imul
in
add
imul
pop
pop
mov
inc
in
inc
sub
push
push
dec
stos
pop
or
lods
mov
fistpl
imul
les
cmc
cwtl
mov
xor
cmp
jno
cmc
push
sahf
jno
push
insb
xchg
adc
and
pop
das
adc
ret
add
dec
sbb
stos
inc
xchg
shrb
jmp
add
mov
repnz
inc
lahf
adc
push
arpl
mov
fs
mov
shrb
sub
pop
inc
cmpsl
fnstsw
pushf
xchg
std
or
mov
push
add
cmp
movsb
cmc
mov
add
in
in
pop
lret
in
cltd
and
icebp
scas
inc
jo
add
movsl
or
cld
scas
pop
xor
push
std
cmc
sub
sub
inc
sub
movsb
leave
test
jbe
stc
sub
int3
pop
xor
pop
pushl
ror
mov
lock
or
jmp
icebp
sbb
lret
xor
or
xor
pop
xor
lcall
pop
std
pop
dec
or
adc
adc
mov
xchg
scas
insb
ljmp
fcmovnb
inc
sbb
mov
push
fmuls
dec
cmpsb
addl
cmpsl
test
mov
mov
push
pop
sub
sub
adc
pop
arpl
movsl
add
xchg
mov
popf
out
std
xor
xorb
ret
mov
mov
cwtl
sub
pop
jge
stc
mov
adc
push
push
int
cmc
push
adc
jecxz
inc
stc
fadds
outsb
out
pop
gs
nop
sub
push
mov
popa
sbb
xchg
push
mov
lds
mov
and
imul
sub
cld
cli
dec
popf
jle
aam
mov
jno
bound
jo
pop
push
pusha
movsl
sbb
mov
movsl
mov
sub
and
inc
arpl
add
jle
iret
xchg
test
pop
in
mov
enter
cld
push
push
movsl
cmp
je
aam
enter
pop
outsb
add
sub
fstpt
testl
add
jle
xchg
movsl
out
push
fs
out
roll
daa
and
icebp
lret
test
mov
push
imul
movsl
mov
pop
sub
fs
pop
adc
inc
push
dec
fucomip
sub
lods
movsl
test
jne
pop
and
ret
sar
aad
pop
cmp
cwtl
int3
sti
jmp
movsl
xchg
dec
aam
push
inc
pop
mov
cwtl
mov
ds
push
clc
test
insl
mov
jnp
xchg
in
cwtl
jle
mov
push
leave
sbb
js
fwait
outsl
xchg
sbb
not
movsl
andb
or
daa
jae
in
xchg
pop
mov
and
dec
lds
icebp
int3
jg
outsb
enter
movsl
inc
fisttpl
dec
dec
bound
movsl
rolb
daa
inc
xor
movsl
push
data16
fmulp
mov
arpl
sub
xchg
lods
push
pop
or
movsl
jns
jb
cmc
loopne
mov
scas
lds
das
xor
pop
shld
sti
mov
movsl
clc
mov
add
and
dec
mov
add
test
mov
ret
jmp
loop
scas
push
clc
popf
inc
mov
pop
popa
test
mov
data16
push
leave
data16
cmc
push
rorl
jl
aad
cltd
inc
cmc
mov
sti
cmpsl
idivb
push
sub
mov
jb
xor
sub
adc
orl
mov
loope
mov
test
jecxz
jno
mov
out
mov
sub
mov
xor
mov
jmp
leave
hlt
stos
sar
test
icebp
out
adc
cmc
loope
sub
stos
mov
sub
xchg
cli
cs
jnp
lods
or
mov
hlt
ja
into
pusha
pop
icebp
cmpsb
mov
pop
mov
lret
mov
ficomps
jecxz
popf
inc
mov
cmc
lods
dec
xor
cmpsb
fcoms
mov
jns
fsubrl
subl
fisubs
fldl
pop
outsb
pop
jo
pusha
dec
xchg
push
inc
movsl
mov
xchg
inc
dec
movsl
xor
testl
sbb
dec
movsl
cmp
jl
cmp
sahf
pop
imul
mov
fwait
movsl
xchg
mov
sbb
movsl
add
jmp
sub
test
jp
fwait
jae
add
movsl
ja
or
das
push
cmp
incb
pop
mov
popa
movsl
test
in
out
les
fbstp
lcall
and
xchg
stc
mov
xor
inc
mov
cmp
movsl
cmp
cmp
jecxz
push
andl
movsl
rorb
aad
add
adc
cmp
push
jns
orb
push
mov
pushf
xchg
out
lret
andb
ja
shll
cmp
movsl
and
loop
jns
jge
out
mov
xchg
sbb
sub
lret
push
lods
in
dec
sub
in
sbbb
popf
gs
sahf
xchg
mov
pushf
insl
aad
fistps
adc
popa
insb
das
dec
sbb
cmc
ss
xchg
repnz
ljmp
stos
push
jmp
call
fdivrl
sahf
xchg
xor
push
inc
movsl
xchg
push
xlat
fistpll
adc
icebp
mov
in
stc
scas
pop
mov
or
mov
aam
rol
sub
inc
movsl
stos
or
pop
test
scas
lods
push
xchg
call
shr
lret
stos
mov
mov
cmp
incl
negb
sub
dec
dec
divb
mull
xlat
inc
mulb
cli
xor
movsl
mov
xchg
xchg
jecxz
xchg
inc
cmp
xor
dec
pop
sahf
pop
sbb
sbb
inc
das
jne
mov
data16
movsl
ret
fsubs
insb
xlat
jb
push
movsl
cmp
xor
mov
stc
inc
lret
inc
and
mov
in
sbb
clc
jg
pop
js
mov
addr16
in
inc
orl
movsl
ret
mov
fmul
repz
loop
stc
mov
mov
ret
fwait
jle
jecxz
xlat
jbe
sbb
pop
pushf
icebp
mov
mov
add
popa
sbb
sqrtps
and
xchg
xchg
shll
imul
test
xchg
aaa
mov
hlt
push
mov
mov
adc
sbb
and
imul
mov
mov
in
addl
rcrb
repnz
mov
dec
rorl
jno
push
xlat
inc
push
sbb
iret
lods
jbe
xlat
imul
enter
sub
push
std
xor
mov
adc
repnz
mov
iret
and
inc
jns
stos
sub
and
pop
pop
inc
andl
idivb
cld
stos
popf
push
xlat
mov
jb
pop
lds
jne
xchg
fadd
stos
dec
jno
ja
or
in
icebp
adc
xchg
lea
xor
cltd
and
cmp
pop
aad
lahf
and
ret
sbb
pushf
fldcw
xorl
imul
mov
ret
sub
popa
sahf
xchg
std
repnz
xchg
mov
and
jns
and
mulb
sub
sbb
es
push
loope
push
imul
pop
lret
push
add
mov
loop
leave
rorb
ja
lret
icebp
xchg
fadds
enter
adc
adc
push
sbb
sub
outsb
push
inc
mov
icebp
scas
jbe
cmc
addr16
pop
add
pop
jae
add
cmp
movsl
lret
sub
loopne
lahf
and
inc
sbb
and
aaa
jl
mov
in
stc
push
shrl
cmpsb
ja
add
shl
add
sbb
mov
popf
adc
jecxz
mov
push
mov
add
and
jecxz
fbstp
inc
fcoms
pop
mov
cmp
lahf
mov
adc
int3
cltd
subb
adcl
add
pop
xor
mov
dec
pop
sbb
lahf
ss
mov
or
inc
jecxz
inc
cmpsl
clc
popf
clc
outsl
cmpsb
jge
sbb
mov
sub
fldcw
sub
jl
push
jecxz
fdiv
ja
push
xchg
int
adc
mov
mov
in
push
add
dec
cmpsb
cltd
jl
mov
adc
fwait
imul
lods
loopne
fdivs
hlt
sub
and
andl
sbb
push
and
inc
xor
and
fnstsw
xlat
roll
add
dec
fistpl
mov
add
inc
jge
out
hlt
subb
dec
addr16
das
dec
fs
mov
outsb
pushf
subb
repz
or
pop
iret
mov
lock
add
add
fiaddl
mov
xchg
sbb
lods
add
mov
sbb
sbb
cmp
lret
arpl
sbb
orl
cmp
push
in
inc
push
scas
sbb
cs
add
sub
pop
mov
cmpsb
push
mov
movsl
aaa
inc
stos
pushf
sub
sub
mov
movsl
scas
mov
ret
add
pop
shrd
push
sahf
cmp
cs
sbb
movsl
and
cli
iret
xchg
in
jb
ja
mov
dec
enter
jns
and
cmpsb
iret
leave
sub
mov
dec
lods
mov
mov
lock
movsl
mov
lods
and
cmp
sbb
int
jmp
inc
imul
repz
adc
in
add
stos
pop
outsb
dec
push
cmp
test
sti
call
aam
movsl
ffree
hlt
and
xchg
stc
mov
sub
iret
cmpsb
movsl
dec
and
mov
jmp
adc
xchg
insb
push
xchg
sahf
mov
sbb
sub
rcll
pop
movsl
cmpsl
std
pop
push
shll
and
xchg
and
sti
cmpsb
test
dec
fwait
test
popl
ja
es
sub
add
and
into
or
out
push
mov
jmp
movsl
arpl
fldenv
aam
in
mov
jecxz
lret
ja
mov
push
fdivrs
rcll
mov
and
or
mov
sbb
cmpsl
fs
scas
push
in
les
dec
rcr
mov
outsb
rcl
mov
mov
fbstp
popf
out
or
jecxz
lahf
movsl
xor
enter
jno
xchg
imul
adc
shll
and
fnsave
nop
fwait
scas
xor
hlt
mov
aaa
jmp
aad
sbb
and
sub
mov
test
arpl
inc
jb
loopne
in
sahf
push
xor
frstor
mov
scas
dec
test
repz
mov
cmc
nop
movsl
popf
pushf
or
paddsb
sub
mov
mov
xor
mov
ja
rorb
and
movsl
shr
xchg
int3
jns
int
movsl
xchg
dec
sub
sbb
inc
les
popa
mov
lock
jecxz
pushf
test
into
and
frstor
mov
or
mov
jle
pop
mov
and
sahf
movsl
sbb
into
and
movsl
jge
jno
pop
enter
dec
shr
cmc
jnp
pop
jmp
fsts
popf
daa
xchg
mov
cld
je
push
cmc
gs
and
lret
xchg
pop
adc
push
mov
scas
pop
mov
xchg
shld
add
in
loopne
iret
std
fmuls
xchg
leave
dec
call
movsl
add
pop
adc
add
push
shl
push
movsl
insb
jg
dec
pop
and
adc
adc
pushf
cmp
movsl
fsts
pop
and
pop
out
movsl
bound
xchg
push
dec
pop
out
movsl
mov
adc
mov
in
shll
scas
sub
enter
mov
icebp
movsl
ficomps
push
jo
add
mov
mov
rol
lret
test
mov
movsl
pop
pop
jb
dec
fadds
push
sbb
mov
movsl
mov
jb
testb
movsl
xchg
mov
ror
clc
lods
movsl
rcll
movsb
xchg
enter
and
std
jns
stc
lret
cmp
lcall
inc
aaa
or
lock
in
fstp
imul
push
int3
out
push
add
movsl
add
xlat
sbb
cmp
sbb
pop
mov
jbe
mov
data16
or
enter
movsl
insb
stos
push
jae
int
push
movsl
arpl
das
sub
add
sbb
cmp
rcrb
jno
xlat
mov
jle
push
call
movsl
xchg
repnz
js
cwtl
movsl
frstor
mov
cmp
adc
aad
je
xchg
call
ljmp
movsl
mov
loope
hlt
sbb
cmpsb
mov
inc
movsl
push
dec
idiv
push
mov
xchg
mov
inc
cmp
enter
hlt
ja
mov
or
movsl
cmpb
stos
or
mov
mov
mov
or
xchg
iret
mov
dec
in
imul
jp
pop
xor
jmp
movsl
lahf
jo
fildll
adc
in
mov
je
dec
xchg
ret
jle
add
xor
sarl
sbb
repz
pop
in
jg
movsl
add
leave
xchg
movsl
hlt
stc
mov
dec
movsl
imul
xrelease
add
lcall
sahf
loope
mov
add
mov
mov
rclb
cmpsl
add
mov
mov
std
call
dec
movsl
repnz
sarl
movsl
add
and
push
and
movsl
scas
mov
mov
out
mov
daa
call
rclb
hlt
bnd
mov
popf
adc
add
stc
int
imul
xchg
push
in
pop
cmc
jbe
mov
rcrl
sub
cmpsl
push
mov
outsl
cmp
movsl
pop
mov
lret
movsl
inc
push
loopne
hlt
in
mov
add
insl
stos
mov
scas
and
mov
ret
add
es
loop
outsl
movsl
jne
mov
addr16
pop
movsl
std
outsb
push
out
divb
ret
lods
arpl
and
pop
jle
loopne
pop
mov
mov
push
or
ret
rep
std
fsubrl
fidivrl
pop
jmp
xchg
movsl
lods
cmp
fwait
mov
inc
mov
adc
cmp
movsl
pop
gs
add
nop
pop
mov
rcl
fildl
jae
test
out
es
sub
ja
sub
pushf
cmpsl
movsb
cmp
movsl
lcall
mov
sub
and
js
inc
inc
mov
xchg
mov
mov
in
mov
pushf
sub
mov
jns
mov
cmpsb
xchg
and
push
adc
cmp
movsl
leave
dec
movb
mov
setle
movsl
xchg
in
mov
aad
stc
in
push
mov
lock
inc
jno
xchg
arpl
dec
mov
test
hlt
push
sub
repz
mov
push
lea
sub
imul
inc
mov
pop
pop
add
push
xor
inc
mov
and
mov
loopne
aad
pop
paddw
je
mov
mov
movsl
dec
gs
leave
cmc
mov
or
movsl
sub
andl
sahf
stos
cmp
leave
bound
jne
movsl
shrb
mov
sahf
cmp
fbstp
dec
repz
adc
fimuls
lock
repnz
xchg
mov
jbe
mov
lods
and
lds
jne
lret
push
push
xchg
and
loop
enter
jmp
pop
adc
jae
in
div
stos
movsl
pop
daa
lret
pop
xor
sub
inc
push
movsl
jp
or
sbb
lods
lods
cltd
pop
xchg
push
pop
movsl
lret
xlat
inc
testb
mov
push
mov
inc
cltd
jl
movsl
imul
adc
sub
cwtl
pop
lcall
lcall
out
iret
loopne
imul
data16
jno
js
sbb
icebp
jge
jno,pt
shlb
movsl
pop
push
nop
xchg
out
add
fbld
leave
fidivrs
pop
clc
adc
or
push
xchg
in
out
int3
add
pop
lret
xchg
cmp
push
mov
jns
nop
pushf
push
push
data16
movsl
insb
aad
mov
ret
xcrypt-ecb
cmpsl
or
mov
movsl
dec
jge
push
scas
rcr
movsl
push
jnp
dec
dec
les
adc
daa
cltd
in
xor
adcb
dec
es
fnstsw
mov
sahf
xor
pusha
jp
xchg
xchg
xchg
jnp
inc
arpl
mov
xlat
jmp
daa
adc
sub
test
sub
jns
fnstsw
mov
movsl
int3
inc
add
or
mov
data16
aad
es
or
mov
push
fnstsw
sbb
adc
lret
xchg
push
in
mov
popa
cmc
cmp
push
arpl
movsl
out
ljmp
adc
mov
xlat
add
out
in
pusha
dec
int
sub
es
add
loopne
sti
ja
jo
inc
push
std
ret
fs
pop
loope
shr
sbb
clc
sbb
xor
jno
sub
fsubrl
movsl
and
cmc
lods
add
xchg
mov
andb
or
mov
sbb
mov
into
div
pop
loope
ret
cld
add
cmc
inc
xor
adc
mov
popa
loopne
mov
stc
bound
push
hlt
rcrl
and
jp
mov
jle
mov
xchg
jl
pop
loope
jo
pop
loop
cmp
neg
icebp
xor
mov
scas
mov
jbe
sarl
jb
test
cli
aad
cmpsb
cmp
ss
jecxz
lcall
or
add
movsl
insb
inc
mov
lea
sub
xchg
lahf
repnz
jo
movsl
cltd
sti
lock
aaa
mov
movsl
subl
lret
add
fsubs
arpl
mov
adc
movsl
inc
sti
add
xchg
sub
addr16
in
pop
sbb
in
jmp
pop
pop
sbbb
push
in
std
test
adc
cmp
adc
dec
xchg
leave
adc
repz
test
mov
shrb
cmp
movsl
cltd
lea
movsl
lret
hlt
out
lock
jp
mov
and
lds
mov
jmp
dec
dec
es
fwait
cmpsl
movsb
movsl
sub
mov
notb
push
or
pop
jge
ss
movsl
pop
icebp
lods
das
or
shl
test
lds
sti
aaa
stc
sub
fcomps
imul
fcmovbe
and
into
mov
jmp
mov
adc
scas
shrl
and
ret
orl
dec
movsl
lret
mov
lret
xchg
movsl
jle
dec
addr16
test
movsl
in
stos
or
movsl
enter
pusha
jnp
jmp
out
rcl
inc
cmpsl
test
clc
inc
fisubl
in
lds
fs
jne
xchg
pop
test
aas
xchg
mov
mov
pop
mov
repz
mov
xchg
insl
outsb
push
jge
movsl
fiaddl
outsl
fadds
aaa
loope
movsb
inc
js
mov
popf
test
mov
push
sub
stos
push
test
and
xchg
cwtl
xor
cltd
sbb
lods
stos
pop
mov
xor
sbb
or
mov
cwtl
push
inc
insl
inc
or
pop
cmp
fisubs
fmuls
jecxz
movsl
mov
insb
pop
pop
jmp
stc
cli
adc
movsb
stc
fcomps
out
out
in
fiaddl
insl
add
mov
xchg
pop
mov
xchg
add
insb
push
inc
and
adc
add
mov
xchg
sbb
mov
adc
pop
jns
inc
movsl
inc
xchg
and
inc
movsl
cmp
xor
xchg
pop
and
adcl
movsl
sub
adc
mov
xor
loope
cmc
xor
fsub
mov
push
ljmp
movsl
xchg
inc
sub
call
and
cmp
stos
inc
movsl
or
icebp
mov
inc
lcallw
adc
sbb
push
shr
mov
dec
push
lds
push
movsl
rorl
ret
shr
clc
ret
in
pusha
xlat
jns
jno
test
mov
xor
cmp
in
inc
mov
jns
icebp
dec
movsb
ds
dec
mov
scas
jp
loop
adc
pop
or
adcb
sub
xor
loop
xor
xlat
scas
sahf
jl
sarb
cmc
mov
cmp
movsb
xlat
cmc
inc
jg
pop
adc
pushf
test
roll
in
insl
push
pop
pop
notl
add
push
dec
mov
mov
jecxz
outsb
inc
cltd
lcall
xor
das
sub
test
pop
popf
xchg
inc
and
and
push
inc
call
or
mov
or
mov
popa
in
pop
fcomps
push
enter
clc
ja
push
out
in
fsubrs
mov
lret
adc
cmpsl
push
push
xchg
cmpl
sub
pop
in
or
mov
sub
rolb
rcr
xlat
xor
les
imul
adc
pop
pop
repz
insl
push
adcl
jae
pop
sub
mov
xor
aad
pop
sub
mov
push
cmp
lds
inc
adc
sbb
sbb
cmp
ret
into
repz
or
push
out
fcompl
adc
mov
lea
pushf
movsl
jne
popa
je
stos
jbe
pop
lret
inc
imul
or
mov
xchg
fisubl
repz
jmp
movsl
jno
push
mov
add
aaa
push
cld
dec
dec
xor
push
fs
mov
test
inc
mov
pop
xchg
out
lds
in
in
dec
jmp
movsl
mov
add
xor
leave
or
movsl
fadds
lea
xor
loopne
cmp
xchg
fnstsw
es
in
push
notl
ss
hlt
leave
jns
je
mov
rorb
add
push
mov
add
xchg
adc
xor
push
rorl
add
int3
xchg
mov
out
and
mov
or
icebp
push
push
xlat
and
jo
jnp
push
adc
fsubl
dec
xor
fists
shll
xchg
ds
cltd
stos
mov
sub
dec
fwait
pusha
push
mov
repnz
fwait
xchg
mov
mov
call
mov
xchg
sbb
ret
inc
pushf
mov
push
ret
add
not
add
jp
add
xchg
out
fdivrs
fadds
dec
or
and
adc
xor
sbb
inc
repz
ret
hlt
adc
sti
into
jne
xchg
sub
imull
arpl
es
cmc
sti
dec
sbb
push
hlt
fldt
and
jp
or
jle
mov
mov
in
xchg
jae
das
sar
not
lea
insl
add
mov
push
arpl
subl
js
movsl
sbb
fcomi
movb
pop
mov
ret
sbb
mov
mov
mov
mov
add
push
and
xor
push
inc
mov
movsl
xchg
repz
jmp
xchg
pop
adc
movsl
pop
pop
mov
lods
popa
mov
push
mov
in
cmp
js
xchg
cmpsl
data16
dec
push
push
arpl
outsl
test
pop
add
push
aam
mov
hlt
push
movsl
xor
push
sub
movsl
and
mov
movsl
shll
stos
jmp
mov
push
dec
movsl
cmpsb
bound
sub
ror
js
lret
mov
je
jnp
push
lock
loopne
xchg
int3
inc
xor
fisttpll
ficoms
repnz
pop
insb
jno
mov
test
lods
cmpsl
in
sahf
mov
mov
mov
or
ja
lds
movsl
sbb
xchg
sub
scas
xor
or
scas
push
popf
pop
test
cmp
aam
push
sbb
test
mov
jl
push
cmpsl
movsb
push
mov
push
dec
xorl
outsb
mov
jae
or
andb
and
sub
xchg
lods
sbb
inc
movsl
inc
jl
mov
movsl
pushf
pop
sub
stos
ja
pop
movsl
or
sarb
aas
imul
mov
add
shll
into
mov
sbb
int3
mov
pop
cmc
sbb
xchg
sub
leave
movsl
or
mov
repnz
xchg
out
xlat
imul
or
mov
sub
push
bound
mov
mov
cmpsb
popa
movsl
add
ret
mov
push
js
insb
inc
pushf
push
andb
test
or
mov
sbb
rcr
xchg
dec
test
enter
xchg
pop
in
mov
hlt
fidivrl
sbb
lcall
mov
popf
das
test
xor
ljmp
mov
mov
stc
xlat
in
cltd
cmp
popf
and
mov
mov
jo
lods
adc
ds
sub
fldt
decl
lock
xchg
xchg
xchg
das
inc
test
leave
movsl
fldl
jns
notl
pushf
movsb
inc
pop
in
stos
adc
addr16
outsl
jne
mov
cwtl
mov
scas
pop
mov
out
xlat
dec
jae
stos
scas
bound
movsl
out
lcall
pop
call
inc
movsl
push
inc
insb
fildl
in
popf
cmp
xor
movsl
adc
inc
pop
testl
or
lock
int
mov
test
imul
fstl
testl
mov
sbb
gs
mov
lcall
sbb
fistps
andl
mov
fnstsw
cmpsl
movsl
push
ja
fdivp
sub
insl
push
jb
iret
idiv
lahf
push
inc
push
pop
ret
ret
pop
or
nop
sub
mov
test
leave
or
push
stc
test
movsl
pop
adc
or
push
adc
loop
test
jmp
std
orl
inc
test
sub
push
adc
adc
mov
movsl
mov
call
dec
mov
inc
mov
movsl
sub
aas
sahf
ja
cs
test
push
jp
aam
cmp
sub
adc
add
cmp
push
stos
mov
xchg
mov
adc
enter
mov
rclb
cmpsb
in
daa
and
push
fnstcw
push
in
fs
xchg
jmp
movsl
push
cwtl
shll
pop
shrb
sbb
movsl
push
cmovo
lret
out
daa
mov
sub
fwait
pop
faddl
cmc
testb
cld
lods
loope
movsl
pop
jle
push
jne
xchg
xor
enter
mov
mov
jbe
dec
scas
xor
movsl
lcall
scas
movsl
enter
ja
dec
dec
movsl
shlb
push
scas
adc
mov
sahf
mov
sar
insl
movsl
enter
ljmp
or
in
add
mov
fsts
sahf
repz
ret
sbb
in
out
outsb
push
ljmp
and
in
push
iret
fbstp
int
pusha
pop
jb
mov
or
pop
pop
add
mov
movsl
ret
sbb
push
jne
xlat
mov
xchg
aas
inc
push
add
xor
movsb
rolb
test
lret
out
popa
jle
lcall
push
ljmp
and
stos
push
push
dec
cmpsl
pop
xchg
xchg
or
mov
inc
pop
jbe
movsl
clc
cmp
adc
movsl
lahf
cmp
and
adc
sysexit
jb
nop
movsl
sub
fwait
sub
inc
movsl
push
jecxz
push
dec
clc
into
fldenv
or
lahf
xor
cmp
xchg
or
sbb
fdiv
sarl
scas
push
imul
psrlq
mov
xchg
shll
into
jne
sub
adc
jecxz
outsb
lods
mov
pop
movsl
cli
loope
jg
cmpb
je
aad
shll
clc
mov
jno
sub
cmp
mov
cmp
mov
movsl
xchg
dec
in
test
dec
gs
jbe
xor
push
and
ficoml
in
loopne
and
movsl
aam
inc
sbb
pushf
out
lret
out
push
jns
jp
pop
pop
movsl
and
sahf
lcall
sub
sbb
out
mov
sti
lock
enter
stc
or
mov
xchg
in
scas
jmp
test
ds
cmp
and
or
in
push
loop
movsl
push
ret
xlat
add
sbb
jne
rcll
adc
in
ss
mov
jp
popf
imull
clc
jge
sbb
aam
rorb
cld
jl
push
sbbl
pop
pop
rclb
movsb
jae
add
ljmp
fidivrl
movsl
mov
push
jmp
cmp
sub
adc
in
aaa
jae
jno
movsl
les
imul
mov
cmp
fwait
ds
inc
jae
dec
jno
inc
jne
jg
xchg
inc
pop
js
lock
cmp
enter
mov
sbb
jecxz
jmp
inc
mov
xor
adc
mov
or
mov
fldl
dec
aam
cmpsl
sbb
mov
cmpsb
adc
pop
add
loopne
and
xchg
ret
std
jne
out
sbb
out
dec
push
and
xchg
addr16
add
xor
xchg
leave
and
ja
es
mov
bound
rcl
mov
mov
pop
jo
cli
in
cmc
and
dec
pop
push
dec
psubq
movsl
cmc
dec
lds
fnstenv
jl
mov
iret
ljmp
jmp
imul
ret
xor
les
cmp
movsl
mov
cmp
mov
clc
cmpsl
push
movsl
xchg
xchg
adc
les
movsl
sub
nop
inc
hlt
sbb
loope
xchg
fidivl
loop
jo
mov
fbld
lock
lea
fimull
jno
ja
je
movsl
inc
addl
arpl
mov
mov
mov
dec
xchg
movsl
jmp
lea
jb
adc
ljmp
scas
mov
aad
js
fisttpll
movsl
xchg
iret
and
es
cmp
sti
arpl
and
bound
mov
lods
rorl
or
xor
and
testb
sub
nop
mov
fistl
shl
adc
mov
jl
xor
icebp
enter
add
pop
addr16
movsl
add
fidivrs
icebp
out
sub
outsb
cmp
mov
mov
cltd
rcl
fstl
movsl
xchg
hlt
ss
inc
test
sub
xor
jle
and
xchg
movsl
mov
popf
push
mov
mov
dec
sarl
pop
mov
in
mov
pop
or
sub
jmp
xchg
pop
call
dec
lret
pop
xor
in
jge
xchg
movsl
insb
aad
jmp
pop
sub
xor
aam
inc
push
push
es
stc
mov
sahf
or
orb
jbe
popa
adc
jle
jg
das
in
out
mov
stos
iret
popf
fsubl
xlat
ja
jmp
push
movsl
xchg
scas
sbb
dec
adc
pushf
fadds
add
push
push
dec
addb
test
and
lret
pop
out
leave
movsl
ja
fstpt
and
je
jg
outsl
dec
jno
cmp
pop
fs
pop
jp
mov
jb
sub
es
ljmp
hlt
lcall
jecxz
clc
int
jo
pop
movsl
sub
dec
test
es
or
cmpsb
pop
mov
dec
jbe
xchg
popf
push
ja
negb
sti
and
mov
mov
or
mov
pop
imul
jae
mov
es
cwtl
jge
loop
fstl
popa
sub
sbb
cmc
mov
xlat
repnz
xlat
inc
or
cltd
and
pop
sub
mov
jmp
or
subl
push
setne
notl
loopne
push
inc
fcoms
daa
call
sub
js
cs
je
nop
arpl
mov
icebp
and
out
dec
jle
js
sbb
inc
hlt
iret
sub
jnp
dec
lds
movsb
xlat
inc
sbb
movb
sub
pushf
scas
mov
push
or
pop
fdivr
xchg
mov
and
das
sbb
push
lods
orl
add
inc
push
adc
and
mov
movsl
bound
mov
sbb
enter
cmpsl
es
sub
lahf
or
clc
inc
mov
xor
insb
or
mov
fisubs
cld
push
sub
leave
xchg
jecxz
lods
arpl
mov
repnz
negb
cs
pop
inc
pop
cltd
pushf
jg
pushf
int3
mov
push
std
pushf
fildll
fnstsw
push
aad
xchg
cwtl
fsubrs
mov
repnz
clc
test
jge
sti
xor
pop
push
mov
lcall
daa
ret
adc
cmpsl
pop
fistpll
popf
mov
push
movsb
insl
cmp
or
dec
aaa
test
lods
mov
shlb
mov
jge
push
jbe
push
fisttps
jnp
out
dec
jo
adc
into
mov
cmp
ljmp
rclb
dec
fs
sbb
jbe
in
xchg
adc
sbb
into
mov
popf
popf
stos
mov
sub
test
mov
pop
stos
pop
sub
shll
fbld
cwtl
push
mov
fnstsw
pusha
sub
scas
push
in
call
fucomp
jns
sti
push
movsl
sbb
les
xchg
jo
sarb
inc
psubw
xchg
mov
adc
push
dec
jnp
dec
sbb
push
inc
movsl
mov
aam
je
jge
push
mov
push
cli
pop
push
cld
or
mov
ret
sub
out
sub
jnp
xor
inc
sbb
imul
xlat
sti
aad
xor
iret
add
push
pop
ss
lods
arpl
movsl
rcll
pusha
movsl
test
stos
adc
imul
jno
pop
inc
sti
movsl
adc
mov
inc
movsl
sahf
aaa
pop
jae
push
sub
movsl
rcll
fdivr
mov
mov
dec
dec
stos
cld
aam
jmp
mov
movsl
sub
test
or
sbb
stos
mov
push
movsl
push
push
cli
cmc
adc
xchg
jge
jl
stos
lret
jmp
mov
fsubl
push
sahf
jp
and
pop
or
scas
push
test
in
movsl
jge
push
pop
pop
jns
jb
insb
mov
dec
mov
mov
inc
push
or
xor
or
jne
push
iret
movsl
testb
enter
lods
aas
sbb
and
popa
addb
loop
adc
movsl
inc
mov
loope
out
loopne
rol
in
movsl
jg
add
enter
mov
into
mov
xchg
sub
test
clc
inc
imul
jmp
out
and
insl
dec
pop
adcl
mov
lret
loop
les
or
and
mov
movsl
shrb
loop
imul
jbe
adcb
ljmp
int3
sti
test
movsl
test
mov
cmpsl
mov
pop
sbb
in
mov
adc
cmp
or
movsl
adc
lods
xchg
and
inc
push
dec
nop
ss
xor
ja
dec
movsb
inc
stc
cmp
push
jge
movsl
pusha
stc
fdivs
dec
xchg
jle
sub
loope
lock
ja
pushf
aaa
movsb
sbb
xor
int3
pop
add
jne
sarl
insb
xlat
add
movsl
imul
js
push
xorl
mov
mov
fldcw
movsl
subb
popl
add
and
xor
cs
pop
stos
add
and
std
hlt
fs
das
xchg
int
xchg
daa
xor
mov
dec
push
std
les
or
pop
notl
hlt
or
xor
das
cmpsb
adc
push
pop
push
movsl
lods
rep
xor
ffreep
cwtl
movsl
jmp
dec
sbb
lcall
mov
in
inc
mov
movsl
outsl
dec
shrb
movsl
loopne,pt
dec
inc
add
mov
movsl
lret
out
imul
movsl
inc
jb
jns
adc
sub
mov
mov
inc
cwtl
lods
jle
lea
in
stos
movsl
data16
icebp
lock
adc
cmpsl
inc
movsl
add
jp
jns
jbe
iret
cmpsb
mov
and
fs
sbbl
and
inc
xchg
repz
dec
sub
add
daa
pushf
jl
mov
fdivrp
mov
cmp
and
cmp
mov
inc
in
inc
arpl
adc
and
jl
lods
xchg
fstl
shll
ja
push
pusha
aam
inc
bound
push
mov
stos
in
out
out
and
imull
lds
cltd
hlt
fisttpll
jns
mov
aas
int
rcrb
imul
cs
xchg
js
dec
shl
mov
jae
imul
adc
push
movsl
js
adc
dec
ja
aad
imul
mov
sahf
lcall
or
mov
repnz
or
inc
adc
movsl
xchg
loopne
add
mov
xchg
movsl
jbe
push
call
fsts
cmpsl
xor
sub
xor
mov
push
sub
xchg
lret
dec
mov
and
mov
movsl
xor
icebp
aam
movsl
jl
out
xchg
xor
add
jno
inc
popf
sbb
add
mov
es
loopne
mov
xor
mov
gs
dec
jo
add
mov
in
lcall
dec
movsl
stos
dec
shl
push
cld
jno
movsl
fcoml
imul
sbb
jo
push
jae
push
pop
gs
dec
pop
xchg
stc
mov
loop
push
push
add
mov
xor
mov
lahf
sub
movsl
aas
rcr
adc
mov
inc
mov
mov
lds
pop
stos
dec
xchg
adc
xor
aaa
cmp
and
les
jmp
std
cmc
lods
imul
movsl
dec
scas
adc
mov
xor
int
push
outsl
movsl
gs
stos
mov
inc
mov
pusha
popf
lock
fstl
pushf
test
sbb
push
inc
arpl
bound
push
movsl
int3
out
pusha
mov
and
xchg
mov
mov
lahf
hlt
popf
and
inc
ret
jno
mov
mov
in
shlb
adc
and
inc
mov
jno
add
add
xchg
mov
loop
aam
je
aad
shrb
movsl
iret
es
inc
in
mov
jmp
filds
adc
out
and
rcrl
xchg
mov
push
movsl
in
insl
dec
rcr
hlt
add
out
lds
add
pop
sbb
fisubs
insb
xor
lods
and
and
movsl
jnp
enter
mov
adc
or
fcomi
test
icebp
fsubr
mov
lds
mov
mull
cmp
movsl
sbb
xchg
clc
add
pop
xchg
pop
bound
pop
sbb
push
outsl
icebp
rcl
inc
movsl
push
fwait
push
add
sub
adc
jmp
xor
ds
mov
mov
ss
mov
movsl
and
cld
cltd
lods
mov
fstpt
imulb
stc
jns
popf
js
mov
mov
incl
cmp
outsb
out
mov
and
ret
sub
lods
je
movsl
ljmp
movsl
popa
andl
inc
movsl
ja
ret
and
int
dec
stos
and
cwtl
pop
mov
add
not
les
lock
inc
ljmp
fldl
pop
sbbb
ret
xchg
mov
or
pop
xor
jmp
dec
mov
cmp
movsl
fldcw
shll
push
cmp
mov
cmpsl
ss
mov
add
cmc
mov
movsl
sbb
sbb
dec
jbe
lcall
mov
iret
pop
rep
stos
jmp
mov
orb
leave
lret
mov
add
das
movsl
rol
inc
imul
push
imul
divb
mov
or
dec
popa
mov
jns
add
fcmovu
mov
cmpl
sbb
or
test
jmp
add
shll
xor
popf
movsl
inc
jl
pop
xorl
pop
jmp
xor
movsl
mov
mov
notb
or
mov
mov
pop
je
pop
in
popf
push
jg
leave
xchg
sub
fisttpl
pop
cli
jge
popf
lods
mov
jl
adc
cs
inc
movsl
fwait
adc
xchg
push
dec
xchg
sbb
jb
insl
shr
movsl
lret
inc
pushl
xlat
movsl
dec
adc
in
testb
push
test
imull
popa
inc
mov
jmp
ret
jle
push
bound
loope
in
ds
sub
movsl
add
icebp
push
divb
sbb
sbb
hlt
and
adc
fldenv
pop
mov
jmp
mov
jle
dec
divb
ret
or
or
and
add
shll
jb
mov
shr
imul
mov
xlat
sbb
adc
sahf
aam
inc
mov
cwtl
nop
rolb
push
dec
aad
sub
insb
adc
movsl
and
push
fsubrl
das
push
mov
push
vmaxss
ljmp
pop
jb
jecxz
les
pop
cld
arpl
int
or
int
xchg
jle
test
sbb
jmp
cld
dec
dec
jge
imull
icebp
push
adc
scas
movsl
rcll
push
into
inc
xchg
test
cli
cmp
push
sbb
jecxz
sub
stc
wrmsr
andl
or
into
pop
inc
addb
inc
pop
dec
adc
pop
push
shlb
sub
lret
sbb
cmpsb
push
sbb
jae
aaa
sbb
jnp
inc
push
pusha
inc
mov
dec
andl
add
mov
test
sahf
pop
lahf
pop
adc
popa
je
sub
mov
popa
test
rcrb
movsl
sub
jnp
mov
sbbl
or
stc
outsb
lods
jno
and
adc
iret
out
loopne
rcl
adcb
js
sbb
bound
adc
test
and
lret
adc
inc
or
stos
popaw
jge
outsl
sbb
std
icebp
mov
pop
lds
daa
jbe
mov
movsb
pop
pop
ja
shll
mov
nop
xchg
int
mov
jmp
xchg
sbb
je
sbb
or
adc
mov
lret
in
mov
icebp
push
mov
jmp
push
gs
insb
push
sub
or
xchg
xchg
cmp
nop
movsl
icebp
pop
jns
sub
sahf
rclb
ljmp
popa
std
frstor
jo
decl
sarb
add
ljmp
sub
pop
dec
shll
mov
ficompl
jno
fdivp
xchg
out
xlat
rorl
stos
movl
and
icebp
pop
cwtl
out
sbb
sbb
imul
sti
arpl
pop
sub
aam
xor
xlat
or
and
ja
pushf
clc
adc
ret
sbb
data16
pop
xor
jne
add
int
shlb
dec
std
or
and
sub
sbbb
das
cltd
or
sbb
in
push
sub
int
xchg
xor
test
push
sbb
les
add
std
push
pop
or
adc
into
sbb
xchg
sub
mov
xchg
out
cmp
jns
xchg
xor
sub
cmp
aam
add
or
movsl
mov
mov
in
shl
int3
jo
pop
jne
lods
jbe
movsl
arpl
push
insb
outsl
popa
fs
movsl
aad
sub
mov
ret
inc
rcll
add
jmp
cwtl
loopne
dec
mov
fsubrl
inc
xchg
mov
insl
out
movsl
sbb
fcomp
jg
out
or
adc
mov
pop
xor
in
fmull
movsb
in
dec
push
cwtl
movb
push
inc
dec
jno
cs
jecxz
repnz
insb
movsl
cld
test
fcomip
movsl
shl
popw
and
sbb
push
lahf
daa
xor
inc
mov
movsl
sbb
mov
shll
lds
sub
inc
inc
mov
dec
lcall
jle
inc
lds
dec
stos
cld
mulb
andl
aad
enter
shll
push
mov
jge
aad
out
pop
and
movsl
sti
fisubrs
movsb
test
push
movsl
jl
mov
add
testb
lea
mov
add
movsl
testl
cld
inc
leave
inc
movsl
mov
or
pop
test
xor
ss
in
insl
clc
sbb
cmpsl
in
add
popl
xchg
xchg
jle
ficoms
scas
aad
cmp
cmp
repz
pop
dec
push
dec
shrb
cltd
push
inc
or
adc
mov
fdivs
pop
sub
lods
xchg
ljmp
add
mov
subb
lods
repz
rcll
shll
frstor
or
jnp
data16
push
sub
in
push
movsl
leave
in
pop
jle
pop
andl
xchg
lock
hlt
jnp
aad
cmc
icebp
stos
arpl
fnstenv
lret
inc
cli
add
push
pop
dec
rcrl
test
jecxz
pop
sbb
xchg
mov
pop
xor
cmp
aas
cmp
ret
out
lea
cmp
or
mov
pop
cmp
test
shlb
mov
aas
or
xchg
mov
pop
movsl
and
inc
add
push
scas
scas
sbb
mov
ljmp
lcall
mov
cltd
loop
mov
sbb
xchg
add
adc
repnz
cwtl
push
and
sub
mov
xor
aad
incb
pop
lret
push
xor
repz
shll
jbe
movsl
cmp
dec
aaa
push
aad
jne
repnz
stos
or
sti
fisubl
mov
mov
mov
inc
mov
mov
sbb
xorb
dec
xor
push
movsl
inc
mov
xchg
movsl
lret
and
movsl
scas
add
cltd
fwait
xchg
pop
mov
xor
les
into
hlt
xor
dec
sub
imul
in
pop
movsl
sub
push
pushf
aad
scas
mov
mov
pop
jae
jnp
lahf
xor
movsl
jno
ds
pusha
lea
pop
or
or
mov
daa
mov
sbb
or
in
add
xchg
js
ret
lds
push
movsl
shl
je
rcrb
test
stos
dec
addr16
fdivrp
or
fistps
mov
mov
rcll
xlat
xor
js
jbe
movsl
loopne
adc
xor
in
rcrb
mov
iret
dec
enter
fcompl
and
push
movsl
adc
aam
inc
movsl
cs
lods
mov
mov
sbbb
pop
push
movsl
lods
cmpsb
adc
movsl
lret
outsb
xor
aam
sbb
push
pop
jp
movntq
out
push
repz
std
call
int
jle
mov
pop
dec
out
int3
pusha
lock
nop
fnstsw
xchg
iret
shl
xor
add
add
fbld
push
repnz
outsl
jae
mov
cmpsl
mov
mov
lods
pop
push
sahf
mov
push
xchg
mov
xchg
shl
push
and
push
pop
mov
loop
call
movsl
icebp
mov
cmp
movsl
lea
or
pop
lcall
jns
into
movsl
aas
sahf
insb
in
lahf
cwtl
sbb
mov
les
cltd
imul
push
mov
mov
ret
sti
mov
or
ret
push
mov
pop
adc
jnp
mov
push
mov
movsl
aaa
xchg
pushf
ss
mov
das
aas
daa
mov
jb
rorl
jle
cld
xlat
jle
in
rolb
daa
shlb
movsl
or
mov
movsl
imul
cmp
adc
movsl
and
repnz
ret
push
lret
xchg
movsl
pop
jg
pop
cmpb
movsl
mov
jns
fbld
imul
adc
xchg
insb
jae
leave
out
cmc
call
mov
mov
movsl
dec
test
cmpsb
jge
notl
cmp
sbb
andl
lds
movsl
cld
cmp
sub
mov
dec
or
inc
enter
push
pslld
movsl
loopne
lcall
push
movsl
cmp
and
and
adc
and
sbb
pop
inc
mov
stc
and
clc
mov
fwait
into
push
sbb
pop
cld
jg
movsl
out
xor
fsubs
je
dec
popa
ja
mov
into
int
test
mov
mov
xchg
cmc
add
adcl
push
jp,pn
loopne
mov
aaa
sti
loope
inc
addr16
movsl
pushl
imul
dec
push
mov
mov
arpl
in
and
sub
movsl
jg
xchg
adc
cmpsl
movsl
add
ja
inc
addr16
aas
mov
mov
int3
cmp
scas
movsl
push
pop
xchg
and
mov
jmp
lock
and
jecxz
loopne
fsub
fldln2
mov
or
movsl
lea
loopne
cmpsl
movsl
push
cwtl
lretw
cli
mov
fs
pop
jbe
movsl
xchg
mov
movsb
xor
and
mov
aaa
cmpsl
ret
iret
int3
sbb
jg
or
bound
xchg
cmc
in
pop
mov
and
inc
cld
movsl
int
lcall
cmp
imull
jae
rep
in
xor
or
xchg
sub
movsl
pop
pop
add
enter
lods
or
hlt
mov
pop
jno
add
mov
jbe
shl
mov
push
lods
xorl
xchg
lds
leave
movsl
sub
cmp
dec
fwait
insb
mov
mov
push
aaa
mov
sbb
pop
jl
movsl
inc
mov
pop
test
pop
mull
inc
movsl
xchg
xchg
rcll
cmc
int3
in
cs
cmpsl
jae
fdivr
add
sbbl
into
sahf
push
mov
daa
add
notl
dec
adc
xchg
fists
fprem
push
inc
push
movsl
ret
and
pop
loopne
adc
cmp
mov
movsl
pop
popa
orl
rorb
lcall
add
jne
jp
sbb
sbb
test
fcomps
outsl
in
mov
mov
push
sub
out
popa
shll
leave
sbb
aaa
mov
call
and
jle
xlat
cmp
psubusw
xchg
mov
add
in
jns
pop
movsl
sbb
inc
test
mov
or
dec
je
xor
cmp
enter
mov
dec
movsl
sbb
push
push
jo
jg
leave
cmpsb
insl
dec
outsl
clc
push
movsl
add
mov
sub
xchg
sub
sub
popf
inc
pop
cmpsl
sahf
pop
test
cmp
insl
dec
icebp
xor
ret
mov
fstl
cli
mov
cmpl
and
aaa
frstor
scas
lock
stos
mov
imul
fcom
and
fstps
or
xchg
in
icebp
adc
xorb
and
dec
pop
sbb
icebp
popf
mov
xor
or
out
dec
xchg
bound
jmp
cmp
xchg
push
sub
xlat
cmp
sub
cmc
fisttps
inc
xchg
mov
cli
in
dec
mov
sbb
adc
shlb
add
inc
aaa
aad
jb,pn
negb
aas
loope
pop
shlb
sbb
xchg
inc
cld
test
adc
cmp
pmullw
and
xchg
les
and
push
cmp
jno
lds
popa
rorb
je
cmp
fildl
jecxz
sar
mov
mov
xor
out
cli
clc
fldl
push
outsl
push
sbb
fnstcw
sbb
decb
and
icebp
xchg
popa
pop
stc
jbe
aas
faddp
inc
inc
and
pop
mov
dec
les
cmpsl
shrl
sbb
int
cmc
mov
push
std
pushf
je
iret
sbb
lcall
pop
lahf
add
adc
or
je
inc
shrl
not
lds
fadd
sbb
jecxz,pt
push
lods
jge
out
mov
and
rcr
icebp
inc
mov
repnz
cwtl
pusha
dec
in
and
ss
pop
gs
sbb
fistps
cwtl
mov
xchg
and
add
xor
pop
xor
lcall
ficoms
cmc
lock
mov
mov
xchg
insl
int
xlat
cmp
aaa
movsl
mov
aam
imul
fiadds
movsl
jae
loop
push
xchg
mov
sbb
push
inc
insb
test
xchg
cmpsb
popa
dec
jae
pop
mov
daa
mov
and
mov
pop
push
stos
or
clc
movsl
xchg
cmp
fidivl
dec
jmp
or
int
mov
mov
movsb
pop
jge
insl
push
movsl
push
mov
out
ftst
je
aad
pop
stos
lock
push
in
out
jmp
mov
xor
das
scas
arpl
stc
mov
adc
movsb
xor
mov
cmp
test
sbb
mov
mov
cmp
leave
fisubl
push
scas
movsl
push
add
and
cwtl
loope
mov
xchg
lahf
fiaddl
out
add
xchg
sub
scas
sub
mov
addb
pop
and
in
out
pop
gs
xchg
mov
inc
add
std
movsl
nop
mov
or
in
sti
movsl
hlt
mov
xchg
push
jmp
mov
in
jecxz
scas
dec
mov
jo
cli
add
sbb
lods
movsl
sahf
jmp
inc
stos
or
sub
movsl
adc
push
movsl
sbb
mov
cltd
scas
or
mov
cld
xlat
dec
testl
ret
dec
imul
movsl
inc
dec
or
jno
es
add
aas
sbb
movsl
shl
mov
popf
cmp
cwtl
xchg
stos
ja
fisubl
xor
sbb
into
aad
xor
andb
cli
mov
movsl
out
js
pop
sub
mov
mov
in
outsb
pop
dec
insl
mov
xchg
in
adc
arpl
in
das
movsl
scas
mov
xchg
pop
dec
loop
movsl
in
outsl
lock
ss
jg
xchg
jle
leave
lret
mov
stc
in
test
adc
in
pop
vmovlps
out
movsl
fadd
call
movsl
jg
dec
gs
pop
insl
pop
lds
bound
aam
or
into
adc
mov
das
nop
mov
mov
movsl
and
rorb
sti
adc
add
inc
imul
mov
xor
leave
mov
mov
imul
pop
push
movsb
sahf
or
ret
sbb
enter
leave
and
jno
in
jecxz
cs
insb
xor
mov
mov
cwtl
mov
test
icebp
int3
hlt
jmp
ljmp
lock
xor
aad
lods
movsl
in
addr16
and
inc
shld
ret
pop
leave
lock
repnz
add
xchg
push
test
pop
cmp
out
jg
lcall
in
jecxz
movsl
or
mov
mov
mov
add
lods
movsl
pushf
sbb
popf
andl
jns
fwait
pop
stos
call
pop
movsl
add
jo
arpl
dec
pushf
mov
test
sub
lea
push
sarl
and
xchg
mov
jp
dec
or
rorl
cmpsl
xchg
adc
cmp
adc
fistpl
sub
cmp
sbb
repnz
sub
xchg
or
int3
test
sahf
mov
dec
jne
push
js
or
popf
int
shll
movsl
in
xchg
lret
xchg
fstpl
test
in
repz
int3
cmp
movsl
xchg
mov
mov
imul
sti
adc
std
cmp
cmc
movsl
jns
enter
call
dec
ja
push
insl
dec
ljmp
in
shll
into
mov
jbe
cmpsb
fldl
pusha
movsl
mov
xlat
dec
cs
lods
call
cmp
mov
lcall
or
dec
movsl
mov
jnp
insb
push
movsl
sub
pop
ljmp
push
mov
sub
sub
divb
aad
icebp
repnz
fidivs
lahf
cmp
cmc
push
andb
mov
sti
movsl
inc
lret
popf
fldl
movsl
repz
leave
outsl
movsl
mov
push
or
mov
imul
mov
enter
lds
outsl
pop
jmp
mov
pusha
cmp
movsl
add
sbb
push
jno
lret
sarl
dec
pop
je
sbb
imul
movsl
and
out
icebp
into
test
dec
jno
enter
jecxz
dec
gs
ljmp
pop
fistpll
movsl
lock
mov
movsl
mov
adc
sbb
jns
cmp
xchg
mov
movsl
leave
sub
add
push
ret
mov
scas
in
mov
movsl
inc
xchg
pop
xlat
inc
cmp
push
sub
scas
cmpsl
ret
mov
adc
mov
sar
shll
inc
mov
sbb
adc
push
jp
loop
popf
mov
mov
dec
stos
sbb
mov
aas
or
or
stos
mov
cmp
repz
out
movsl
int3
arpl
push
gs
mov
movsl
sahf
push
xchg
cmp
xor
aad
es
stos
dec
xchg
xchg
pop
xchg
add
push
mov
jge
mov
xchg
fstps
clc
push
aam
mov
ret
out
loop
cs
mov
dec
movsl
sub
jg
jl
test
out
sub
lea
mov
scas
mov
adc
mov
pop
mov
inc
outsl
test
push
out
loop
rorl
inc
stc
dec
jo
int
pop
xorl
inc
pop
lret
daa
adc
xorb
rorb
lods
mov
xchg
out
loop
aad
popf
and
das
xchg
test
aad
push
movsl
or
int
fwait
xchg
lds
shrd
cmp
mov
pop
pop
push
and
call
push
into
ljmp
insb
push
adc
mov
addr16
movsl
rorl
cmp
push
cmc
xor
sub
sbb
mov
movsl
jmp
push
sbbl
push
call
stc
jbe
fnsave
cmp
sub
cmpsl
gs
in
in
fcomp
jne
fidivrl
or
and
addb
push
in
stos
jns
xor
icebp
movsl
clc
fucom
stc
loopne
lahf
jae
pop
sub
movsl
mov
sbb
movsl
or
inc
int3
imul
sarb
lods
or
outsl
and
jmp
cli
adc
pop
dec
cmp
xchg
add
push
jecxz
pop
cmc
incl
movsl
inc
pop
std
ja
sbb
jle
call
fldenv
jbe
push
jns
lret
adc
imull
sahf
loope
sub
aad
test
and
mov
sbb
andb
adc
push
push
test
mov
add
outsl
fiadds
test
adc
in
popf
movsl
jle
xlat
jo
jbe
test
push
jb
aaa
jecxz
sub
push
cli
pop
cmp
inc
sub
or
xchg
push
icebp
cltd
xlat
js
and
aas
popa
pop
sub
or
aad
repnz
hlt
add
pop
inc
stos
inc
dec
mov
xchg
and
cmp
xchg
cmp
bound
adc
adc
aas
pop
popf
mov
out
repz
and
jnp
int3
push
cmpsb
and
xor
insb
dec
jb
mov
cmp
loope
jecxz
push
and
sbb
mov
push
xchg
sahf
loopne
movsb
pushf
and
cmpsl
xchg
cmc
and
negb
dec
jo
mov
cmpsb
cmp
rolb
cld
mov
add
sub
inc
jecxz
movsl
sbb
mov
pop
lret
mov
adc
pushf
mov
sub
jg
sub
popa
sub
orb
ret
rcrl
mov
xchg
xchg
lods
movsl
pop
shr
stos
inc
out
leave
jbe
or
and
pop
and
add
je
andl
jmp
dec
enter
push
outsb
jae
jp
push
imul
push
sbb
pop
idivb
mov
cmp
or
add
clc
cmp
into
lods
aad
mov
inc
data16
push
dec
je
adc
andb
int3
xchg
int
sbb
orb
test
out
addr16
cmp
mov
cltd
add
sbb
enter
inc
push
idivb
clc
jae
sbb
roll
mov
hlt
dec
push
jns
es
push
mov
xchg
aam
cmpsb
call
jge
shrb
out
fists
sub
dec
and
push
push
in
js
or
je
pushf
sub
xor
jae
push
adc
pop
nop
dec
data16
push
mov
adc
movsl
gs
fs
js
imul
mov
roll
xor
bound
pop
pop
outsl
in
or
jle
jge
mov
stos
push
jl
mov
xchg
mov
xchg
mov
sbb
stc
xor
or
call
pop
das
jmp
pop
cwtl
std
sbb
and
xor
mov
leave
fldl
and
test
out
xchg
in
cmp
mov
add
push
roll
loop
insl
adc
mov
mov
mov
lahf
xor
cmpsl
cmpsl
and
push
shll
shll
inc
inc
fidivrs
inc
mov
adc
pop
repnz
sarl
xor
ret
pop
loop
jecxz
pushf
mov
popa
jmp
insl
idiv
dec
xchg
sbb
adc
adc
lds
in
push
dec
lcall
mov
les
mov
jmp
push
fsubs
xor
fisubs
mov
sti
loopne
sub
arpl
mov
or
mov
scas
ret
push
pop
and
push
dec
mov
movsl
mov
and
xchg
fcomps
sbb
sti
jns
cmp
fwait
dec
movsl
icebp
out
mov
popa
mov
or
incl
leave
test
movsl
xchg
add
pop
push
add
push
mov
in
lds
dec
lahf
xor
mov
xchg
in
or
mov
cwtl
in
sub
mov
movsl
add
pop
jae
call
loopne
fcomps
in
shll
pop
mov
imulb
stos
popf
and
jmp
and
pop
ljmp
movsl
mov
cld
sbb
movsl
cmp
push
test
insb
mov
sub
pushf
mov
icebp
mov
outsb
bound
ret
stos
jmp
mov
mov
push
test
cmp
xchg
sar
push
and
dec
adc
ss
stos
loop
adc
mov
jge
in
icebp
movsl
pop
push
inc
jl
and
lcall
xchg
dec
sbb
add
iret
movsl
jnp
popa
std
jo
mov
lods
andl
into
popf
mov
fmul
divl
inc
mov
leave
pop
lods
xchg
cmpb
test
mov
ds
sahf
dec
jb
movsl
bound
or
movsl
sub
adc
xor
repz
movsl
inc
fs
jl
jle
out
xor
lds
cmpsb
or
push
inc
jle
mov
das
xchg
aas
lea
and
or
test
movsl
pop
icebp
mov
pop
movsl
inc
imul
mov
cmpsb
movsl
aad
pop
pop
mov
and
das
mov
call
jb
outsb
or
push
xchg
xor
xchg
add
scas
jmp
mov
movsl
mov
aas
outsl
or
jbe
into
jg
mov
mov
fsubr
in
stos
movsl
add
jnp
sbb
add
mov
aam
xchg
mov
xchg
in
lods
outsb
sbb
xor
movsl
xchg
pop
push
imul
aad
sahf
cltd
mov
faddl
add
lahf
sub
shlb
xchg
movsl
leave
cli
jecxz
in
ljmp
lahf
and
setl
pop
push
repnz
sbb
inc
mov
movsl
dec
std
int3
add
enter
ss
pop
aam
in
je
rorb
in
push
loop
out
mov
jb
dec
dec
inc
pop
jg
mov
mov
sub
xor
fsubrp
adc
gs
arpl
and
nop
push
data16
mov
cmp
sbb
dec
cltd
xchg
inc
xchg
jl
je
shrl
and
xlat
and
pusha
imul
sub
sub
push
data16
inc
fisubl
lods
mov
sbb
rcrb
cli
hlt
mov
lahf
mov
scas
push
mov
shl
jno
or
adc
mov
daa
and
mov
aaa
xchg
pushf
lds
cmp
pop
gs
mov
imul
or
ss
xor
shll
mov
scas
xchg
movsl
jmp
dec
imul
mov
movsl
pop
and
sbb
xor
dec
neg
dec
jo
sahf
xlat
mov
fnsave
movsl
xchg
gs
clc
mov
adc
sbb
fsubp
jns
in
mov
push
stos
shll
shrb
movsl
repnz
ffreep
and
and
fisttpll
sbb
inc
popf
jg
mov
inc
mov
sub
movsl
sbb
jge
daa
sub
cli
push
je
addl
adc
pushf
sahf
pop
sti
shrb
push
inc
inc
mov
test
pushf
pop
mov
push
mov
fldl
mov
mov
push
pop
in
push
iret
xchg
push
jb
dec
push
addr16
add
cmc
sub
stos
loopne
push
icebp
sahf
dec
pop
inc
adc
cmp
pop
sub
dec
inc
pop
lods
mov
gs
dec
fucomip
frstor
xlat
divb
push
push
push
nop
in
movsl
icebp
adc
popf
hlt
mov
ljmp
popa
cmpsl
not
jnp
xor
stos
push
sub
mov
fidivl
inc
imul
loop
and
dec
cmpsl
jne
or
adc
into
cmp
cli
decl
pop
or
mov
or
shrb
test
pushw
shrb
push
testl
dec
lock
pop
in
sub
push
mov
mov
mov
sti
adc
in
dec
fs
jl
mov
jne
or
repz
and
xor
in
jp
movsl
js
insl
dec
xorl
cmpsb
movsl
mov
iret
lret
adc
jmp
sbb
jnp
clc
mov
sub
push
movsl
aad
pop
fs
aam
movsl
jmp
fsts
dec
push
push
movsl
jbe
jmp
add
nop
mov
and
movsl
add
or
movsl
rclb
lods
pop
jle
pop
mov
in
cmc
pushf
loop
pop
enter
sarb
fcompl
cwtl
add
movsl
adc
push
cmp
movsl
inc
pop
push
hlt
xor
fsubl
jbe
mov
cmpsb
push
inc
push
loope
movsl
mov
out
into
test
sbb
movsb
rep
in
inc
in
fisttpl
pop
loopne
mov
mov
test
cmpsl
dec
pusha
and
or
daa
cwtl
mov
mov
not
push
xlat
pop
mov
jo
dec
loope
mov
mull
sbb
shr
push
mov
lds
scas
and
fwait
ja
out
movsl
jbe
xlat
seto
shlb
mov
movsl
outsb
movsb
dec
sub
mov
dec
lahf
pop
xor
dec
movsl
call
sarl
movsl
jo
arpl
test
in
lret
test
or
sahf
aam
mov
pushf
stc
lcall
stos
call
ljmp
xor
jp
popa
fldpi
push
out
mov
inc
cmp
jno
adc
into
out
vmovaps
push
xchg
movsb
dec
adc
stos
dec
divb
cmpsl
cmc
movsl
ss
std
push
hlt
dec
xchg
add
dec
push
jae
xor
daa
ss
leave
setle
stos
mov
repnz
add
out
movsl
js
jp
xchg
movsl
ds
add
xor
outsb
add
sub
mov
pushf
cld
dec
xorb
hlt
sub
sbb
ljmp
lods
movsb
or
mov
adc
push
push
enter
movsl
loop
push
lret
clc
test
movsl
cmp
out
imul
dec
cmpsb
test
andb
xor
in
jae
dec
in
mov
movsl
jge
xchg
repz
int3
xchg
rcrl
cmp
or
pusha
imul
mov
xchg
inc
and
push
scas
testb
xchg
sbb
stos
out
xchg
ljmp
movsl
jge
push
daa
lret
mov
add
lcall
sbbb
imul
xor
les
stos
sub
xor
jns
frstor
cwtl
mov
push
in
daa
movsl
xor
iret
icebp
xchg
sub
jnp
jne
add
in
cmpsl
ja
movsl
mov
adc
mov
add
movsl
push
jnp
mov
pop
push
xchg
lret
imul
cmc
mov
sub
pushf
stos
lcall
test
cmp
cmpsb
sub
mov
ds
mov
movsl
mov
mov
mov
add
fwait
adc
mov
insl
mov
dec
mov
lret
mov
std
push
andl
sahf
stos
pop
movsl
add
popf
adc
arpl
cli
movsl
fldcw
shr
insb
popa
out
sahf
and
or
cs
pop
jbe
into
test
jnp
enter
pop
in
fdivr
jecxz
xchg
stos
jb
mov
inc
iret
and
cmp
push
fs
or
mov
push
shl
mov
inc
push
pop
add
push
pop
movsl
testb
xchg
xchg
out
int
std
rcl
cld
lock
stos
mov
add
int
clc
adc
mov
mov
mov
out
mov
adc
fildl
fdivrl
push
push
inc
popa
outsb
icebp
in
vpinsrw
mov
sbb
lds
out
and
jge
mov
jge
pusha
fnstsw
movsl
repz
mov
lahf
xor
sbb
cs
ret
mov
xchg
in
out
or
mov
aas
jb
mov
mov
je
jbe
lret
cs
mov
mov
hlt
mov
repnz
out
in
jb
movsl
or
mov
das
scas
lods
imul
sbbl
mov
stos
xchg
in
idivb
movsl
out
xor
pop
ja
movsl
fwait
pop
js
mov
sub
aas
in
test
or
dec
bound
movsl
and
aaa
xchg
jmp
dec
sub
stos
push
int
xorl
les
xchg
mov
or
inc
or
inc
mov
lods
xchg
mov
imul
xchg
add
push
sti
test
roll
cmp
leave
push
fdiv
and
and
mov
in
test
movsl
hlt
leave
test
fs
dec
push
xor
pop
sub
fistpll
xchg
xchg
fs
gs
or
push
add
inc
mov
setp
push
jl
pop
mov
movsl
loopne
push
dec
dec
cmc
lea
movsl
bound
pop
imul
fsubrl
pop
test
inc
mov
sub
mov
mov
push
cmp
or
xor
mov
xlat
adc
fbld
lods
fldenv
pop
bound
outsl
movsl
in
mov
call
aaa
scas
push
ss
int
xchg
xchg
cwtl
andb
ret
movsb
sbb
sbb
movsl
xor
pusha
or
ret
in
pop
cmp
movsl
leave
in
movsb
and
pushf
fisttps
lcall
lcall
movsl
push
xor
or
cmp
add
xor
in
out
test
xor
push
clc
mov
mov
pushf
mov
sbb
into
cltd
sub
rorb
push
jl
lret
mov
xchg
pusha
add
add
aad
sbbb
testl
mov
push
sbb
pop
jnp
decb
fs
xlat
out
xchg
inc
pop
in
mov
movsl
push
or
out
es
mov
cmpsb
dec
movsl
adc
movb
sbb
push
or
ja
push
pop
outsl
movsl
loop
and
jb
push
clc
and
aaa
cwtl
movsl
xchg
fiaddl
pop
ds
movsl
and
repnz
fisttpll
add
add
fwait
cs
jbe
push
sub
repnz
cmp
lock
cmpsl
inc
movsl
daa
xchg
addl
imul
mov
in
cmp
enter
mov
bsf
movsl
lds
arpl
xchg
mov
lods
rol
outsl
dec
andb
xchg
xor
mov
cmpsb
sbb
mov
pop
push
mov
ret
ret
sbb
xor
sbb
sbb
mov
fdivrs
push
inc
mov
inc
out
lds
scas
int
movsl
cmp
mov
and
shlb
sbb
jno
inc
in
cld
loop
int3
inc
jne
mov
frstor
shld
mov
call
cmp
mov
movsl
add
and
gs
mov
mov
scas
inc
movsl
pusha
imul
int
stos
cmc
pop
ret
xor
and
test
mov
jbe
xor
add
stos
psrld
dec
scas
and
and
xchg
fistpll
mov
mov
cmp
dec
movsl
test
aas
mov
je
pushf
jne
ds
movsl
fadds
stos
add
shlb
movsl
sahf
xchg
ss
icebp
xchg
outsl
movsl
pop
in
in
out
dec
movsl
loopne
fidivl
mov
in
inc
jecxz
dec
notl
dec
jns
movsl
sti
data16
jl
movsl
jp
cld
dec
lcall
leave
nop
xlat
sahf
add
incl
movsl
scas
test
and
out
lods
jle
mov
mov
cmp
bound
mov
add
inc
xchg
mov
ret
mov
loope
and
out
loop
mov
cli
add
pop
fisttpll
adc
sbb
int3
outsl
or
jae
dec
mov
adc
repz
scas
pop
push
adc
out
pop
push
dec
ds
or
movsl
divb
ficomps
shlb
cs
repnz
in
mov
xchg
in
dec
cwtl
push
mov
lods
inc
xor
push
add
xor
or
out
into
lahf
mov
movsl
or
cli
mov
xlat
jns
xchg
jge
movsl
in
fistps
mov
movsl
pop
movsb
aad
pop
out
outsb
xchg
push
jecxz
lds
sbb
fistpll
sbb
mov
mov
push
pop
and
sbb
fsubr
movsl
sub
jae
and
and
push
jge
push
mov
lret
fnstcw
cmp
leave
sbb
or
aad
lea
movsl
cld
or
mov
sub
test
pop
mov
mov
pop
jle
scas
cmpsl
sbb
frstpm(287
lcall
movsl
dec
push
and
pop
sbb
xchg
nop
push
das
mov
lahf
stc
or
mov
movsl
jp
outsb
inc
lock
lret
mov
ja
inc
sub
xchg
ret
cmp
jb
add
mov
xchg
pop
aaa
add
fstl
inc
and
inc
repnz
jbe
and
std
bound
fsubr
mov
jg
jmp
test
dec
adc
and
cld
cmp
and
cmp
pushf
stos
mov
leave
mov
bound
and
push
pop
mov
je
inc
fdiv
and
cmc
icebp
pop
sbb
fisttps
inc
mov
cwtl
xchg
hlt
push
leave
clc
mov
mov
pushf
mov
outsl
js
add
pop
movsl
fnsave
cmp
lods
mov
and
sbb
test
inc
sub
es
data16
subb
movsb
inc
rorb
and
mov
xor
inc
out
jae
cmp
fisubs
inc
fbld
jne
adc
std
sbb
xorl
mov
popa
test
sub
insl
je
inc
sahf
sti
mov
xor
mov
jp
rol
push
loope
or
popa
mov
sub
pop
or
test
adc
jl
inc
sbb
stc
pop
cmp
inc
je
scas
pop
xor
sbb
int
nop
pushf
or
xlat
sub
mov
xchg
loope
and
pop
push
leave
xor
sub
mov
filds
inc
mov
int3
ds
sbb
clc
sbb
push
scas
mov
negb
mov
jle
mov
add
loopne
mov
mov
sbb
xor
ret
xor
adc
inc
dec
pop
popf
and
mov
and
xchg
test
div
jge
fwait
pop
sub
loope
in
daa
and
hlt
and
push
out
push
inc
stc
leave
cmpsb
mov
popa
adc
pusha
outsb
jnp
test
cli
aas
sbb
stc
and
mov
jge
add
and
cmpsl
ss
fldcw
fsub
push
pop
in
std
jmp
aam
iret
add
or
dec
shl
jno
sahf
loopne
sub
push
add
inc
in
scas
sbb
lcall
pop
jecxz
mov
jg
and
adc
fcmovb
pushf
mov
push
xor
sub
mov
cwtl
aaa
aad
clc
inc
push
jnp
lret
fsubrp
pop
lea
jnp
xchg
cwtl
lret
push
inc
push
xchg
gs
scas
mov
imul
adc
sub
mov
pop
add
fdivl
scas
pop
jl
dec
jp
jl
mov
adc
sti
mov
ss
sub
add
stos
jmp
cmpsl
sub
int
push
push
cmc
and
mov
dec
sub
jl
pop
jne
fucom
push
testb
push
mov
jp
stc
clc
je
decl
cmp
cmp
les
mov
ja
outsb
mov
int
mov
jno
adc
mov
jbe
sub
sub
jg
ret
frstor
xchg
sbb
sahf
sbb
push
mov
sbb
loope
gs
jns
daa
sub
shlb
cmp
icebp
shrb
loopne
clc
or
insb
and
je
clc
push
int3
ror
cld
jecxz
fisubrl
cwtl
inc
std
sub
jge
sbb
imul
fcmovu
movsb
lock
jne
js
xor
fcmovnb
pop
sbb
add
push
pop
pop
ljmp
mov
js
aam
imul
popa
in
icebp
je
rcll
jmp
lahf
sub
or
inc
sbb
jge
push
dec
add
imul
dec
mov
mov
cltd
and
es
jge
mov
sbb
xchg
xchg
mov
fistps
adc
loope
xchg
neg
lods
out
ret
jb
xorb
fisubs
inc
xor
or
cmp
fsubp
adc
in
popf
lds
adc
cmp
ficompl
add
leave
xor
push
mov
inc
movsb
fsts
xlat
popa
mov
pop
cmp
or
or
hlt
push
inc
ficomps
cmp
and
sub
xlat
sub
in
in
lds
pop
in
xchg
lods
addr16
dec
lds
add
dec
std
int3
mov
sub
dec
pop
roll
in
pushf
imul
adc
sub
out
and
mov
pop
mov
pop
mov
negl
xlat
inc
insl
pop
pop
aas
ss
mov
lds
icebp
adc
roll
adc
sti
shll
pop
fdivl
adc
shrb
ljmp
cwtl
and
outsb
jp
inc
push
mov
cmpsl
test
popf
sbb
mov
xchg
cmpsl
aam
addr16
inc
ss
mov
jle
cmpsl
int
inc
ja
pop
inc
pop
out
mov
pop
shlb
add
stos
jle
int3
nop
inc
xlat
ret
loope,pn
pop
cld
and
negl
and
ja
pop
inc
icebp
out
icebp
imul
pop
scas
imul
ret
mov
sub
lcall
sub
xor
insb
or
sbb
shlb
cs
dec
dec
je
or
in
pop
mov
jno
jnp
mov
xor
popa
outsb
lock
rcrb
xor
pop
and
mov
sub
ret
inc
and
scas
push
cli
pop
adc
jecxz
cmc
adc
mov
fbstp
movsl
sub
fs
or
mov
rcrl
and
std
xlat
fs
push
inc
add
push
out
or
rcrb
icebp
push
leave
push
jbe
xor
mov
or
mov
sub
insl
shrb
enter
adc
int3
and
scas
and
aas
cmpsb
jbe
add
je
or
push
insb
or
and
iret
inc
std
popa
dec
jns
es
test
xchg
mov
mov
and
into
aaa
rcr
scas
xchg
sbb
icebp
mov
loope
push
outsb
adc
sahf
int3
push
iret
js
sub
mov
or
lret
shll
ret
or
out
fisubl
mov
jns
hlt
aad
test
leave
ret
cmp
enter
xchg
and
pusha
popf
mov
test
add
fsubs
add
push
enter
fdivr
pop
add
jnp
test
dec
cmpsl
shrl
xor
push
lret
and
cmc
stos
mov
ds
mov
jns
push
jg
fcoml
xlat
repz
jp
in
insl
adc
repz
fadds
xor
push
dec
or
sub
scas
negl
daa
out
push
leave
adc
mov
shl
nop
sbb
jns
mov
or
inc
call
movsl
sbbb
mov
push
jecxz
movsl
mov
push
arpl
mov
imul
push
rclb
mov
push
movsb
xlat
or
test
add
movsb
or
mov
mov
stos
adc
mov
lods
sbb
fisubl
jb
dec
setle
dec
insb
mov
data16
adc
movsl
adc
fwait
mov
dec
mov
cmp
sbb
adc
mov
push
lds
add
add
shr
cmc
xor
aam
inc
push
movsl
negl
jbe
gs
stc
nop
or
adc
loopne
fsubl
hlt
cli
movsl
je
cmp
dec
fs
lcall
inc
insw
fsubs
sbb
in
and
or
dec
jg
mov
dec
inc
js
fisubrl
ja
fldenvs
sub
loopne
in
nop
iret
mov
or
pop
dec
dec
mov
testl
movsl
pop
ret
imul
jmp
cs
loop
aaa
sub
std
add
in
cli
outsl
call
int3
add
push
xchg
push
scas
push
mov
cmp
push
test
or
mov
movsl
add
daa
cmpsl
adc
rcll
ljmp
cmp
dec
dec
test
das
mov
out
cmp
ljmp
jnp
popl
sahf
cmp
push
jno
int
sub
xor
aas
xchg
and
mov
add
icebp
cli
out
mov
test
rorb
imulb
pusha
jne
sbb
or
pop
in
jl
testb
push
imul
leave
test
pushf
jne
push
js
movsl
dec
cld
iret
fsubr
roll
scas
xor
xlat
jb
sahf
adc
push
sub
sub
sub
pop
test
pop
pop
insb
xlat
in
nop
xor
lds
adcl
mov
cmpsw
xchg
movsl
cmp
cmp
xor
and
jge
test
push
fs
adc
jnp
and
mov
push
pop
push
push
in
movsl
shll
lds
outsl
sbb
stos
mov
mov
dec
cmpsb
xlat
sbb
movsl
and
movsl
or
mov
fcomps
sub
jno
xor
mov
int3
loop
cwtl
or
ds
pop
mov
mov
mov
and
jns
cmc
insl
add
std
push
bound
pop
call
xor
cmc
sub
sub
pop
pop
out
movsl
pushf
adc
jmp
lahf
iret
mov
cmp
jne
rorl
sahf
inc
movsb
push
or
popl
xor
cld
fwait
movsl
pop
in
push
cmp
jo
or
ffree
jmp
mov
test
push
shll
insl
pop
dec
and
inc
pop
bound
mov
xchg
test
pushf
int3
pop
fldl
test
movsl
fwait
repnz
push
ja
pop
and
pop
mov
scas
cmc
mov
movsl
pop
ljmp
out
movsl
pop
es
cld
sbb
push
movsl
les
aas
or
jle
cmp
xor
ds
and
cs
lea
xchg
add
jno
lods
push
mov
pop
jl
pop
in
out
cmp
scas
mov
cltd
lods
adc
mov
pop
push
test
daa
mov
push
xor
popf
dec
fcomi
bound
pfcmpgt
push
cmp
jl
rcrl
jmp
int3
test
popaw
mov
lcall
lods
mov
inc
mov
sub
addb
loopne
and
shlb
lret
or
pop
sbb
int
into
ljmp
loope
test
push
mov
rcr
pop
push
xorb
mov
in
orl
xchg
push
xor
xchg
mov
sbb
add
test
mov
mov
cmp
dec
stos
cmpsb
call
out
fwait
out
xor
lret
scas
scas
push
dec
pop
mov
xor
les
sahf
add
repnz
sbb
mov
test
popa
push
jecxz
pushf
mov
stc
lods
inc
and
out
lcall
cmc
mov
ja
cwtl
push
loopne
adc
lret
pushw
push
sub
push
sub
cmpsl
pop
pushf
in
je
or
adc
sbb
jl
mov
loope
fadds
dec
mov
rol
cld
and
out
notl
out
cmp
in
sub
sub
in
xchg
imul
mov
ljmp
fstpt
insb
mov
add
sub
cld
and
test
je
adc
mov
inc
xchg
jge
adc
push
hlt
fcomp
popf
sahf
jne
sbb
mov
xchg
outsl
fildll
rcl
push
in
inc
mov
daa
aad
popf
jno
clc
sub
clc
lcall
cmp
mov
outsb
fadds
fstpl
subl
pop
xchg
mov
dec
stos
adc
icebp
and
push
sbb
sub
jle
dec
mov
jbe
and
leave
ljmp
cltd
movsl
cmp
cmpsl
xor
and
aam
in
dec
arpl
push
outsb
inc
movsl
sub
fcmovnb
xchg
cmp
mov
adc
rcll
movzbl
xchg
inc
mov
gs
inc
movsl
add
fisubrs
aas
xchg
adc
jg
enter
movsl
or
sub
movsl
into
pop
insb
sub
das
mov
movlhps
movsl
popf
cmp
movsl
in
or
addl
movsl
lods
xor
pop
mov
or
stos
mov
jl
hlt
shlb
jb
and
in
pop
in
int
mov
lods
mov
cmc
shr
fiadds
adc
out
aam
icebp
inc
shlb
sbb
push
je
xlat
int
popl
movsl
and
lods
outsb
mov
lcall
mulb
pop
jbe
imull
push
inc
lcall
cld
xor
mov
cltd
imul
fimuls
xchg
mov
jmp
dec
dec
push
scas
or
mov
push
cmp
gs
sti
push
or
movsl
cwtl
popf
lods
mov
movsl
lock
adc
jbe
lret
or
in
sub
push
mov
xchg
xor
pop
enter
movsl
pop
arpl
sub
xchg
xor
int3
movsl
data16
imul
adc
pop
mov
cmovs
outsl
adc
movsl
pop
jbe
fsubrp
ss
inc
xor
test
cmp
insb
lea
cmp
jnp
mov
scas
xchg
in
inc
dec
push
push
pushf
je
dec
sti
clc
push
dec
add
jmp
mov
sbb
in
in
ds
call
xchg
mov
aad
cmp
mov
ss
sub
fs
lahf
sub
bound
pop
mov
in
fsub
mov
pop
pusha
jp
imul
mov
repnz
mov
push
jle
jecxz
pop
ss
into
jo
jbe
pop
gs
and
int
fcmovb
in
test
xchg
cmp
je
movsl
sub
and
das
test
or
mov
cs
and
cmp
cmpsl
xchg
movsl
dec
pop
jo
pop
out
mov
mov
push
mov
mov
movsl
aas
dec
test
movsl
adc
lahf
fiaddl
je
jnp
out
push
cmpl
fcos
fcoml
or
adc
jnp
lcall
jmp
fdivrp
mov
push
inc
lods
pushf
ficompl
jg
xchg
aam
inc
test
movsl
add
sub
imul
lea
jne
push
jge
cwtl
out
sub
inc
push
testl
adc
movsb
xor
jne
movsl
sbb
ror
cmp
movsl
mov
aas
stc
or
movsl
sbb
test
push
add
dec
cwtl
sbb
cmp
jecxz
mov
pop
insb
inc
andl
movsl
mov
rolb
mov
sbb
insl
in
push
popa
or
test
iret
and
lods
lahf
lcall
jmp
xchg
lcall
outsl
lds
popa
sub
push
add
jmp
movsl
jmp
cmpsb
repnz
movsl
lea
mov
rorb
movsl
add
stos
test
push
cmpsl
icebp
out
mov
jae
xchg
mov
ret
mov
lea
fcomp
adc
pop
popa
andb
or
movsl
pop
shl
arpl
cmp
loopne
mov
mov
and
scas
inc
xchg
into
push
and
xor
shrl
mov
movsl
or
xchg
inc
xor
shll
test
loopne
add
test
fwait
movsl
and
rorb
lea
ret
add
rcrl
movsl
add
push
cmovbe
inc
movsl
mov
cmc
shrb
movsb
mov
add
outsl
in
add
stos
adc
scas
movsl
cmc
rcrb
movsl
cmpb
jae
andl
outsb
or
cmp
sbb
xchg
movsl
mov
ja
sub
movsb
add
rep
jp
and
jmp
movsl
sub
mov
adc
push
dec
in
je
ss
adc
push
cmpsb
testl
test
lret
out
cmpsl
jle
pusha
aad
movsl
cmp
in
sar
neg
lods
jb
xor
insb
cmp
sub
and
and
data16
adc
add
push
sbb
ja
out
int
out
add
addr16
lret
in
pop
lds
movsl
add
movsl
std
not
insb
imul
test
cmp
inc
jns
subl
mov
notl
add
std
sub
popa
jle
sbb
lahf
stc
fwait
hlt
movsl
xor
sub
pushf
pop
aas
test
aad
xchg
test
and
mov
sbb
jmp
movsb
scas
push
jg
movsb
push
sbb
jl
push
sbb
mov
stc
movsl
sub
xchg
add
fucomp
in
mov
xchg
in
arpl
push
and
mov
jl
ret
xlat
idiv
add
daa
cwtl
mov
movsl
insb
cmpsl
lock
clc
scas
pop
push
movsl
dec
xchg
lea
repnz
fsubl
xor
or
pop
leave
mov
clc
scas
cltd
in
movsl
mov
insl
cld
shrl
ret
ror
jmp
lret
in
add
cmp
jecxz
inc
shr
bound
cmp
frstor
aam
xor
movsl
lds
imul
jbe
or
mov
lds
andb
push
mov
in
xchg
mov
sub
xor
mov
jecxz
add
mov
jbe
xchg
xchg
xor
test
movsl
push
jge
pop
mov
push
lcall
movsl
cmp
adc
sub
pop
pop
movsl
test
sbb
fdivrp
jbe
rcrl
or
bound
inc
aad
stc
mov
repz
cmp
aaa
mov
mov
push
pop
sbb
pop
ret
repnz
cmp
mov
jl
ficompl
lahf
mov
mov
dec
cmc
ja
ret
movsl
subl
fisubl
movsl
subb
enter
pop
adc
push
jb
stos
inc
xor
cmp
jne
adc
sub
inc
popa
insb
jle
daa
icebp
movsl
icebp
das
in
and
push
loope
cmp
push
shll
xor
in
lcall
shl
pop
and
pop
inc
movsl
sti
daa
jnp
xchg
aad
pop
aam
mov
popf
inc
mov
movsl
mov
push
pop
aam
jp
enter
popa
in
cmp
or
aam
addr16
movsl
clc
jg
cmp
ret
movsl
inc
loop
ss
lods
pusha
adc
inc
std
aaa
stc
fnstsw
xor
test
add
addr16
data16
or
cmpl
bound
cwtl
push
sahf
push
gs
push
in
jne
in
mov
xor
movsl
es
xor
mov
out
or
aaa
movsl
xor
push
sahf
mov
inc
popf
xchg
out
lret
icebp
cmc
jle
movsl
shll
xor
movsl
xchg
mov
mov
or
or
lahf
mov
popa
scas
mov
push
jge
pop
loopne
mov
lds
mov
sub
mov
mov
movsl
dec
dec
subb
xchg
movsl
pop
sbb
sub
or
inc
dec
gs
cmc
in
xor
movsl
dec
pop
into
sub
mov
cmp
cmpsl
mov
loopne
dec
ret
in
call
mov
imul
push
pop
aaa
push
add
mov
push
jmp
xchg
xchg
jno
popf
dec
jne
inc
push
mov
rorb
mov
js
sub
loopne
test
jmp
xor
movsb
sbb
xchg
fs
xor
lods
out
aad
mov
mov
xchg
inc
xchg
sub
cmp
xchg
shll
stos
sbb
dec
sub
or
adc
and
data16
mov
fsts
in
push
movsw
sub
push
hlt
test
mov
push
dec
push
add
adc
and
sub
test
jnp
test
movb
je
cmp
pusha
inc
push
insl
dec
movsl
imul
push
test
movsl
jmp
xchg
inc
mov
adc
outsb
fstps
cmp
mov
xchg
mov
pop
push
int
jge
imull
fdivr
jmp
xchg
sub
push
in
mov
rcll
das
sub
push
enter
and
add
lret
mov
jne
into
ret
xchg
rorb
mov
inc
cmpsl
insl
movsl
jp
es
push
add
movsl
fs
add
movsl
mov
adc
mov
out
pusha
add
fs
add
stc
call
sahf
ds
cmp
andb
hlt
inc
xlat
cmovl
pop
frstor
push
xor
js
movsl
adc
adc
xchg
rorb
sbb
lcall
cmp
mov
leave
inc
and
or
dec
lods
out
popa
push
jo
cs
test
mov
mov
mov
pop
rcrl
imul
sti
aam
movsl
faddp
xchg
ja
pushf
push
scas
dec
stos
iret
icebp
mov
repz
xchg
lahf
adc
movsl
pop
ja
pop
sub
cmpsb
mov
pop
sbb
out
loope
repnz
daa
mov
mov
jmp
xchg
aam
xchg
std
ss
lahf
leave
jb
sub
push
cmp
fisubrl
popf
mov
popl
mov
jle
pop
in
sub
lods
push
or
adc
push
popf
mov
sahf
xchg
or
mov
out
push
sbb
mov
xchg
push
and
mov
sub
push
dec
pop
jo
jne
mov
outsl
scas
jae
or
inc
insl
movsl
ret
sub
stc
push
cmp
mov
insl
push
test
mov
jp
xor
repnz
jecxz
cmpsb
pop
xchg
jecxz
in
daa
jmpw
int
testb
inc
pop
xchg
mov
jle
movsl
in
test
mov
movsl
aaa
fwait
sub
push
or
inc
jne
insb
loope
dec
sub
pop
mov
fwait
sbbb
test
test
inc
push
lods
cwtl
sbb
movsl
aas
cwtl
push
in
loop
sub
aaa
ja
shlb
in
mov
push
inc
std
movsl
or
sub
jp
mov
inc
xor
aad
mov
repz
movsl
cs
push
movsl
adc
es
dec
out
test
movsl
jo
inc
mov
lea
enter
push
lret
mov
xor
add
push
rcl
push
rcr
leave
mov
push
arpl
mov
rolb
enter
movsl
jbe
mov
daa
loope
ja
les
dec
aad
cmp
dec
inc
popl
mov
out
enter
jmp
nop
cmc
mov
jb
mov
pusha
movsl
cltd
dec
push
cmovge
mov
push
or
movsl
and
movsb
add
dec
mov
sbbl
xchg
leave
aad
mov
out
sbb
cld
fsts
and
push
ror
cmc
dec
sbb
sub
sahf
or
or
movsl
push
ret
push
cltd
xor
mov
pop
pop
movsl
shl
cli
mov
mov
sub
inc
scas
movsl
mov
xchg
test
sub
aam
dec
dec
push
dec
lock
cmc
jg
cwtl
adc
icebp
mov
leave
in
mov
ret
mov
mov
adc
repnz
pop
stc
orl
xchg
lods
cs
int3
movsl
nop
xchg
into
pusha
mov
lcall
pop
push
cmpsl
in
adc
fwait
xchg
aam
jno
dec
movsl
pop
ret
dec
dec
mov
movsl
sbb
mov
jl
cmp
jb
movsl
out
outsl
int3
dec
imul
jmp
fnsave
lds
stos
adc
mov
push
roll
movsl
dec
jmp
xor
dec
pop
cmpsl
sbb
cwtl
push
movsl
ret
inc
sahf
cmc
mov
bound
cmp
cmp
stos
movsl
ret
scas
jb
movsl
mov
sub
movsl
jge
ret
jno
loopne
jne
fcomps
adc
test
add
inc
fnstsw
std
fidivl
arpl
push
add
cmp
cs
adc
lcall
cmp
xor
xor
jb
loope
movsl
pop
insb
dec
jne
mov
add
push
mov
scas
movsl
fimull
call
shlb
popa
sub
cmpsb
movsl
add
incl
adc
inc
vpackuswb
mov
les
or
out
and
ss
movsl
je
movsb
jmp
test
int3
xchg
ret
and
fsubs
addr16
mov
push
insl
lea
popa
jp
gs
jo
jns
das
sub
push
mov
les
movsl
adc
pusha
pop
jl
sub
out
sub
mov
xor
jle
jno
dec
je
or
lea
rorl
mov
inc
dec
stos
mov
shr
rcll
jg
or
test
cmpsb
cmp
pushf
aas
or
cwtl
sahf
xor
jp
shll
fisubrs
and
std
movsl
daa
and
movsb
loopne
inc
es
out
dec
xchg
jno
in
or
mov
jecxz
cmp
and
aad
hlt
movsl
mov
arpl
pushf
movsl
add
inc
lahf
and
rcrb
jns
lea
movsl
mov
mov
mov
adc
adc
inc
xor
adc
mov
aam
push
xchg
adc
jae
cmc
xor
movsl
leave
out
sub
test
pop
scas
mov
aam
movsl
inc
cmpsb
in
test
or
ljmp
mov
dec
data16
leave
shld
pop
ja
xor
popa
imul
or
stos
mov
movsb
insl
movsl
dec
jl
in
or
sub
xor
dec
dec
movsl
xor
jl
add
dec
fnstcw
sub
xchg
insb
in
je
inc
pop
mov
ljmp
cmp
xchg
or
lods
inc
movsl
wbinvd
push
cs
arpl
dec
movsl
insl
adc
or
mov
mov
cmpsb
add
pop
jb
pop
data16
jle
fsubl
repz
out
dec
mov
inc
je
xchg
jmp
mov
cmp
hlt
pusha
sbbb
and
xor
lcall
pop
pushf
nop
mov
pop
imul
ror
mov
data16
mov
pushf
sub
mov
mov
pop
mov
outsb
and
cmp
xchg
pushl
xchg
mov
lds
adc
cmp
pop
out
sbb
stc
pop
mov
xchg
inc
adc
xchg
pop
enter
sub
mov
movsb
mov
sti
xor
sbb
mov
mov
pushf
jg
imul
int3
idivl
pop
push
pop
mov
lds
or
sbb
push
movsl
or
js
sarb
nop
scas
xchg
xchg
mov
lret
lods
movsl
je
mov
fwait
movsl
xor
cmp
fcoms
movsl
jl
sarb
movsl
gs
insb
push
out
pop
popa
mov
aad
jmp
xchg
int
dec
inc
push
andl
fcomps
jo
mov
mov
sub
cld
pop
mov
or
in
movsl
sti
lret
or
dec
and
cmpsb
xchg
jne
adc
fs
movsl
loope
mov
shr
int
push
or
popf
dec
inc
stos
cli
xchg
jnp
adc
mov
pop
lds
adc
daa
repnz
xor
pop
enter
push
mov
or
ds
inc
mov
jecxz
loope
iret
out
movsl
jmp
dec
lcall
pusha
push
sbb
popa
shlb
dec
int
jmp
mov
stos
mov
shrb
xor
mull
sub
mov
mov
mov
xor
push
out
jle
and
mov
push
into
xor
adcb
cs
movsl
or
and
and
popa
inc
mov
push
imul
jl
call
divb
hlt
in
outsb
inc
push
mov
adc
lds
jge
xchg
lds
aad
mov
adc
shl
xchg
cmpsb
movsl
cmp
pop
mov
add
imul
push
and
dec
mov
stos
sub
test
jbe
je
lds
lret
into
add
jae
or
popa
movsl
adc
pop
jne
les
pop
mov
and
mull
push
icebp
adc
stos
movsl
js
bound
movsl
gs
cltd
ja
in
xchg
out
popf
mov
outsl
lahf
test
popf
lods
adc
xchg
and
bound
nop
cmc
add
movsl
jl
mov
aaa
push
xor
adc
xchg
add
fisubrs
jmp
xchg
gs
stc
mov
xor
push
lock
pop
jns
cwtl
lcall
pop
sbb
push
fwait
push
push
bound
sbb
sub
pop
inc
faddp
ret
and
orl
lods
mov
xchg
ss
mov
jmp
movsl
xchg
cmpl
stc
xchg
xchg
mov
jo
gs
cmp
pop
subl
addb
fbld
incb
pop
aad
xor
pop
movsl
push
sbb
in
mov
movsl
sbb
pop
icebp
leave
add
aad
or
call
push
add
pop
xor
decl
lods
jnp
testl
movsl
jmp
inc
lods
aaa
sahf
repz
arpl
fadds
lods
insb
jle
jl
or
dec
loope
lret
push
or
lret
jbe
inc
pop
stos
push
or
sti
lds
add
sbb
enter
fsubl
bound
je
sahf
fldl2e
push
pop
or
aad
mov
out
dec
mov
sub
dec
incb
push
stos
popa
jno
mov
pop
sub
sbb
int
movsl
mov
mov
inc
lock
xchg
stc
imul
mov
testb
sbb
push
in
or
inc
pop
and
into
fistpll
lcall
ljmp
mov
inc
lods
sbb
pop
lret
mov
ja
push
xchg
sub
xor
xchg
or
pushf
loope
sti
je
cmp
nop
stc
dec
sbb
sahf
loop
cmpsb
push
fwait
cmp
dec
sub
xchg
lds
jbe
xlat
mov
repnz
ficoml
pushf
mov
mov
rorl
adc
mov
leave
push
cmp
jbe
orb
pop
out
push
xchg
sbb
mov
dec
cli
movsb
jo
js
cmpsb
rorb
fnstsw
arpl
fnstenv
or
scas
or
and
sbb
pushf
pop
mov
lods
std
cwtl
push
push
mov
ss
mov
clc
mov
sbb
dec
xchg
daa
adc
repz
ds
stos
pop
cmc
xor
icebp
xor
int
pusha
adc
andl
pop
paddusb
adc
js
mov
sbb
enter
lcall
cmpl
cmp
mov
inc
mov
or
lcall
adc
bound
inc
mov
jg
lods
js
rol
mov
mov
mov
lret
out
mull
add
shlb
jmp
int
mov
movsl
ss
or
lret
xchg
dec
fisubs
adc
test
jae
push
movsl
dec
fs
dec
outsl
imul
inc
adc
rorl
pop
sub
int3
mov
stos
jle
mov
mov
loop
adc
int3
movsl
sub
dec
lahf
or
fstl
push
addr16
hlt
fldenv
add
push
jae
pop
movsl
xlat
push
test
call
cmpsl
cmpsb
mov
daa
mov
movsl
andb
lds
xchg
dec
lds
hlt
movsl
inc
xorb
and
movsl
stos
add
mov
movsl
jl
loopne
jmp
or
movsl
aad
inc
dec
xchg
push
and
mov
roll
jno
lods
mov
loope
cmpsb
fwait
movsl
xor
lea
adc
shll
in
fs
adc
push
push
sbbb
cmpsb
xor
add
mov
mov
or
ja
leave
xlat
mov
shr
jae
cmpsl
xchg
movsl
cmp
add
movsl
in
push
jns
or
movsl
sub
cmp
loope
lds
call
pop
dec
cli
inc
stc
or
sbb
push
flds
aad
fs
sub
adc
add
push
dec
data16
movsl
push
sbbl
aam
inc
xlat
ret
out
or
mov
cmpsb
mov
cltd
pop
mov
xchg
mov
jmp
movsl
jo
leave
mov
test
pop
cli
orb
in
shll
dec
in
lret
movsl
jmp
lock
testl
imul
push
jne
jecxz
mov
sti
out
imul
and
fiaddl
sarb
mov
popf
aam
sbb
push
imul
fistl
in
jmp
mul
dec
jb
pusha
movsl
mov
lds
gs
leave
icebp
movsl
rorl
loope
scas
push
movsl
add
add
es
and
inc
pop
mov
movsl
cmp
mov
in
loopne
pop
and
popf
fndisi(8087
dec
dec
andb
loope
movsl
fisubs
std
dec
popf
mov
test
scas
mov
movsl
mov
stos
add
jno
dec
movsl
aam
or
call
cli
movsl
ds
pop
movsl
pop
out
cmp
les
out
pop
mov
inc
movsl
jnp
pop
jle
push
loop
movsl
mov
aad
pop
xchg
pop
jns
cs
xor
or
movsl
or
dec
popf
mov
aam
mov
fldenv
ret
and
fadds
jle
movsl
mov
and
movsl
add
cmp
sbb
movsl
jg
int3
jbe
inc
scas
inc
adc
shld
xor
push
adc
sbb
mov
mov
push
jbe
aad
loopne
or
movsl
shlb
xor
lret
lahf
stc
jb
xchg
in
pop
pop
or
cmc
push
xchg
add
test
andl
movsl
push
sbb
ret
gs
sbb
and
andl
sarl
pop
fwait
test
jb
adc
aaa
test
xor
cmpl
insb
mov
and
packuswb
sub
lock
inc
rol
mov
ljmp
sbb
xchg
lock
neg
flds
cmp
addr16
sbb
das
xchg
ss
dec
xchg
out
cltd
push
jl
mov
xor
cli
fcoml
add
sbb
outsl
add
push
fs
sbb
push
std
cmc
inc
mov
rorb
xchg
jp
adc
pop
fsubs
pop
mulb
pop
in
out
mov
out
push
jns
push
push
in
lds
fnsave
cltd
jnp
stc
pop
pop
inc
sbb
dec
sti
jae
pop
and
movsl
xchg
fsubs
lret
sahf
sub
data16
pop
fdivl
push
jl
jns
mov
mov
aaa
inc
lds
icebp
into
loope
rcr
bound
in
mov
push
or
or
cmovbe
mov
shufps
cmovns
sbb
jle
or
mov
pop
loop
or
push
mov
mov
inc
cmc
bound
hlt
or
inc
call
jecxz
pop
loope
push
jecxz
lods
xchg
cmp
pop
xor
sub
pop
inc
pop
adc
es
pusha
ljmp
stos
fcomi
rolb
and
jns
repz
outsl
sti
and
mov
pop
comiss
jbe
add
xor
push
or
mov
fnstsw
mov
cli
clc
push
pushf
sbb
mov
clc
push
mov
xor
adc
jae
mov
inc
roll
flds
adc
leave
mov
in
and
fistpl
xchg
add
int3
xchg
dec
mov
push
inc
lds
movsl
or
call
les
repnz
mov
loopne
add
inc
addl
xchg
and
sbb
test
mov
and
jns
js
pop
sbb
inc
movsl
adc
lahf
xor
std
pop
imul
movsl
cmp
dec
push
add
imul
sarb
icebp
shll
inc
mov
movsl
lret
aad
push
jle
inc
movsl
lock
mov
movsl
push
pop
xchg
fmul
mov
inc
enter
fisubs
cs
push
pushf
mov
push
movsl
mov
cmp
movsl
decl
mov
es
repz
les
movsb
mov
and
and
mov
xchg
mov
int
les
aas
or
scas
insb
sbb
sub
lods
cmpsl
and
movsl
and
xor
inc
lods
inc
jmp
fisttps
pop
andl
popa
xchg
lea
outsl
xor
sbbb
aad
mov
in
gs
xchg
movsl
push
pusha
jge
adc
or
and
mov
mov
mov
sub
inc
add
adcl
popl
sbb
mov
xchg
out
daa
xor
aas
xchg
and
nop
mov
test
std
push
jne
and
lret
je
sbb
div
mov
shlb
mov
ret
sbb
push
test
movsl
pop
pusha
outsb
cmp
push
inc
dec
movsl
xchg
faddl
jne
int
adc
push
push
cmpsb
scas
dec
sbb
sub
imul
repz
bound
les
push
mov
in
arpl
movsl
fs
jl
lret
dec
movsl
dec
jbe
pop
xchg
xor
mov
js
xor
jmp
mov
and
pextrw
mov
sbb
jmp
stc
push
adc
xor
adc
mov
sbb
movsl
fxch
aam
xor
jle
mov
lock
mov
test
jmp
popa
push
shrl
movsl
aad
inc
rdmsr
shrb
xchg
nop
movsl
mov
test
movsl
jbe
dec
adcl
fistps
adc
push
or
adc
lcall
int3
sbb
movsl
xchg
xor
push
pop
pop
loope
jae
call
sbb
fbstp
pop
movsl
mov
cmpsb
inc
sbb
icebp
or
inc
xor
push
or
popa
movsl
aam
repnz
pop
addr16
mov
adc
jl
xlat
jge
and
xor
mov
sahf
pop
gs
movsl
shrb
mov
in
dec
mov
fs
add
loop
mov
and
cmp
push
pop
movsl
gs
xchg
loop
push
imul
sbb
mov
xor
mov
jnp
movsl
cmpsl
addr16
lds
inc
cmpb
inc
cld
lods
mov
jle
arpl
je
push
lods
aam
in
movb
push
je
adc
pop
mov
adc
adc
push
jb
sbb
iret
les
xchg
dec
add
test
shl
aad
xchg
aam
sub
mov
sarb
movsl
dec
stos
call
push
mov
or
scas
sub
add
and
sub
jmp
dec
and
sbb
out
inc
out
mov
movsl
das
imul
adc
leave
mov
fsub
mov
push
lahf
cmc
push
outsl
andl
mov
mov
xchg
pop
mov
mov
daa
inc
dec
popa
cmp
leave
in
jmp
add
imul
movsl
mov
ljmp
xchg
jecxz
mov
mov
mov
jno
outsb
sub
inc
fst
out
int
and
scas
repz
xchg
xchg
mov
sbb
roll
pop
movsl
leave
jecxz
int
loop
or
jle
and
cli
or
inc
xor
mov
into
lds
movsl
xor
lahf
add
sbb
pop
in
pop
mov
shlb
mov
sub
movsl
lock
outsl
movsl
sti
iret
adc
je
int
daa
mov
jns
movsl
mov
and
xchg
jno
sti
lds
jg
js
mov
xchg
sub
ds
and
clc
mov
jns
vcvtps2dq
cmpsb
movsl
fwait
pushf
stos
mov
inc
sub
int
inc
mov
lods
inc
xor
xchg
rolb
sbb
notb
adc
jae
lret
fs
jmp
push
mov
jbe
movsl
shll
cmp
pop
inc
movsl
aam
pop
movsb
push
dec
push
jae
cmp
movsl
and
mov
and
call
lods
movsl
mov
add
pop
popa
movsl
add
pop
dec
movsl
inc
xchg
cmp
loop
add
outsb
mov
mov
sbb
mov
and
in
mov
sub
pusha
jmp
in
jp
xchg
fstpl
sahf
or
or
test
movsl
add
adc
imul
mov
test
pusha
or
dec
popf
ds
shld
mov
shll
nop
jb
sub
jl
in
out
add
insl
movsl
mov
xchg
into
push
push
scas
mov
inc
es
test
mov
das
jbe
imulb
pop
or
adc
movsl
nop
push
aad
push
dec
shr
bswap
cltd
xor
cmp
or
aam
mov
mov
push
lods
or
sub
movsl
pop
cmp
cmc
or
mov
push
fnstcw
movsl
mov
dec
imul
adc
pop
lds
in
jl
pop
movsl
or
or
dec
fldcw
cwtl
pop
jo
mov
xor
test
movsl
sti
stos
jmp
xchg
in
push
les
sub
out
loope
and
pop
movsl
cmp
out
and
push
imul
lods
mov
cwtl
mov
jno
sub
cmp
add
add
in
lret
inc
in
push
add
int
jns
sbb
cmp
sahf
addr16
jnp
pop
pop
add
rorl
sbb
cmp
xchg
inc
dec
imul
sbb
mov
rorb
loopne
and
imul
sbb
lret
add
mov
mov
cmp
movsl
pop
mov
inc
adc
xlat
shlb
add
je
stc
xor
dec
imul
mov
dec
arpl
lret
movsl
pop
or
and
push
mov
mov
test
rcrl
adc
bound
insl
jle
cmc
fisttps
sub
sub
jnp
out
shlb
xlat
stos
sbb
fwait
pop
push
push
pop
repnz
fldt
incl
add
cmpsl
pusha
pop
jns
call
pop
in
sahf
bound
pop
rcl
add
aas
pushf
adc
fldenv
stc
hlt
adcb
mov
cmp
jae
pop
and
imul
iret
and
loope
testl
mov
xchg
xchg
push
pop
push
or
and
and
fisubs
sub
in
push
add
enter
ret
sbb
test
movsl
mov
jle
shlb
push
jo
pop
movsb
loopne
or
loop
cmp
shrl
icebp
adc
jmp
testw
xor
fbstp
and
in
xchg
scas
adc
popl
mov
sub
imul
mov
je
movsl
stos
jl
pusha
arpl
sbb
xchg
cmpsb
movsl
popa
xchg
sub
cmp
jnp
arpl
movsl
out
jbe
pop
test
mov
aas
dec
addr16
push
mov
mov
lods
scas
inc
mov
add
and
movsl
jo
adc
loope
mov
movsl
fdivr
aam
push
inc
addr16
sahf
add
fisttps
das
jp
jmp
or
ds
insb
fcmovne
scas
and
movsl
adc
imul
movsl
xchg
nop
xchg
movsl
xor
dec
dec
mov
addr16
push
push
iret
int3
sahf
sbb
repnz
dec
movsl
xor
inc
mov
push
add
dec
mov
adc
lahf
movsl
fs
data16
movsl
jg
hlt
inc
and
mov
push
pop
and
ss
mov
mov
aas
movsl
xchg
inc
stc
inc
inc
sahf
mov
adc
insl
stos
push
push
cmc
aaa
push
adc
movsl
fsubr
out
mov
movsl
shrl
or
outsb
mov
and
es
mov
lret
and
sub
push
je
jge
divl
adc
mov
out
mov
repnz
xchg
scas
xor
jge
movsl
mov
pop
mov
push
sbb
mov
mov
mull
xchg
movsl
sub
adc
mov
movsb
pushf
iret
movsw
test
jmp
add
add
or
test
int
fldl
faddp
ret
popf
lret
pop
mov
pusha
bound
outsl
loope
push
in
movsl
call
mov
enter
mov
mov
xor
mov
sbb
jne
movsl
outsb
xor
cmp
mov
pop
mov
xchg
imul
movsl
pushaw
testb
enter
lcall
nop
pop
lock
ss
lds
xchg
jo
mul
mov
lret
inc
push
loopne
sahf
js
movsl
outsl
mov
jne
jmp
xchg
in
xchg
cmp
xor
cmp
fs
test
out
jns
das
xor
test
and
hlt
loope
and
push
jecxz
mov
mov
fisttpl
pop
lods
mov
adc
stos
jnp
pop
sbb
xor
cmc
sbb
inc
out
dec
cmc
xlat
dec
add
mov
stos
xchg
or
jg
mov
or
ret
hlt
int
icebp
pushf
xchg
movsl
pop
in
mov
out
xchg
cld
fisubrs
and
sbb
pop
sub
fldpi
getsec
fdiv
movsl
sahf
cmp
push
mulb
inc
cmc
jecxz
std
push
cmp
push
hlt
aam
sbb
sub
into
int
out
jns
sarl
mov
sbb
add
shrb
test
or
les
in
fstpl
imul
mov
out
sbb
jp
lods
pop
fstpl
sub
and
les
and
mov
adc
sub
xor
out
push
sub
lret
lods
sub
out
dec
jb
jo
cmp
sub
lahf
test
adc
xchg
xlat
adc
sub
cmp
lahf
push
pop
push
outsb
cld
loopne
sub
lcall
adc
pop
push
cmp
into
adc
pop
mov
lahf
addr16
popa
lods
sub
cmc
and
mov
inc
shrb
mov
add
sti
cmc
ds
call
ss
dec
inc
cld
sbb
lods
xchg
or
fsubs
test
xchg
imul
pop
lret
rolb
jbe
js
dec
nop
in
popf
aaa
popa
fisttpll
stc
cmp
mov
sbb
fisttpll
sub
stos
push
sub
js
fwait
mov
sbb
cmpl
cmp
mov
mov
mov
nop
xchg
ja
lods
sub
sti
lahf
or
imul
sbb
fmul
xchg
loopne
dec
dec
xlat
mov
pop
movsb
xchg
sbbl
enter
rolb
lock
mov
movsb
testb
sbb
mov
enter
sarb
xor
push
dec
pop
sbb
sub
or
es
push
sbb
xchg
gs
adc
mov
sarl
daa
fwait
sub
lods
aad
and
sbb
movsl
repz
pop
jl
xor
movsb
ror
lea
xchg
movsl
mov
aad
shlb
xor
daa
xchg
inc
mov
adc
in
mov
jp
xchg
movsl
pop
out
lods
sub
std
movsl
nop
insl
push
data16
or
or
and
movsl
gs
jno
fs
jbe
dec
jg
test
stos
sbb
movsl
xor
mov
xchg
lcall
imul
lahf
es
mov
sbb
movsl
mov
jne
shlb
push
cli
addr16
mov
jae
ret
ud1
inc
mov
lods
or
mov
movsl
dec
jnp
adc
fisttpll
or
mov
ret
aad
loopne
inc
cmc
xchg
cmp
add
lea
xchg
les
xchg
lret
cmpsl
mov
mov
xchg
xor
or
xchg
sbb
push
mov
test
xchg
cltd
inc
adc
repnz
inc
mov
pop
mov
xor
push
mov
fbstp
movsl
out
icebp
dec
xchg
sub
les
inc
xor
arpl
insl
xchg
mov
movsl
jmp
pop
pop
movsl
loope
outsb
mov
push
hlt
inc
xchg
sub
xlat
pop
sti
push
fisttpll
mov
add
pop
mov
sub
mov
ljmp
inc
lock
daa
mov
push
dec
sub
into
das
jbe
mov
lahf
movsl
pop
ds
cmp
loopne
inc
call
xchg
fistpl
test
popa
dec
movsl
fldcw
mov
and
pusha
mov
mov
mov
add
push
mov
movsl
lods
scas
andl
inc
movsl
sar
mov
daa
mov
das
sub
adc
xchg
mov
mov
pop
mov
popa
cld
movsl
clc
mov
dec
bound
icebp
cmp
mov
adc
jecxz
fsts
mov
xchg
movsl
out
in
stc
gs
dec
pushf
pop
jp
adc
cltd
adc
test
sbb
mov
push
mov
mov
aas
push
mov
and
xchg
push
cwtl
daa
push
call
enter
add
movsl
fmull
pop
mov
imul
dec
and
mov
stc
leave
mov
xorb
push
pop
mov
sbb
rol
cmp
or
in
clts
movsl
fcom
push
data16
xchg
int
mov
aad
mov
push
sbb
das
stos
mov
rcrb
add
mov
aad
shll
fstpl
mov
not
sbb
sbb
jns
movsl
sub
movsb
lahf
rorl
xchg
arpl
push
and
adc
movsl
cmp
icebp
fwait
movsl
and
fisttpl
shrb
aam
and
movsl
pop
ja
adc
popl
frstor
mov
shrb
lcall
sbb
int3
sbbb
shll
in
fsts
mov
or
stc
jno
mov
or
jmp
popa
and
sarb
bound
scas
push
add
jno
popa
pop
mov
xor
or
mov
cmp
jae
xchg
jl
cmpsl
mov
pop
lds
mov
sbb
mov
cmp
adc
xchg
or
hlt
push
leave
mov
xor
sbb
outsb
sub
movsb
push
mov
popa
insl
jecxz
dec
popa
jae
inc
cmc
sub
in
inc
data16
test
sahf
dec
cwtl
sti
pop
movsl
cmp
pop
cld
je
icebp
fs
and
adc
movsl
insl
ror
in
sahf
jg
popf
pop
sbbb
mov
test
into
movsl
pop
pop
bound
mov
sbb
mov
movsl
addr16
cmovbe
sbb
les
xchg
xor
mov
mov
movsw
pop
push
orb
fs
lcall
sahf
addr16
push
pop
sbb
adc
mov
push
in
mov
test
stos
std
xchg
mov
loop
movsl
mov
sbb
arpl
sahf
xchg
movsl
mov
cmc
test
jmp
jns
or
jmp
movsl
int
rolb
inc
iret
movsl
roll
mov
mov
jl
jno
xor
push
scas
xchg
movsl
push
popa
lock
leave
add
movsl
outsb
push
data16
in
std
jne
or
and
shrl
mov
leave
dec
scas
test
xchg
jae
ja
sub
xor
notb
loop
pushfw
dec
iret
inc
xchg
sub
sbbl
sbb
dec
inc
out
and
lcall
imul
inc
add
addr16
mov
mov
popf
fs
lds
mov
jecxz
mov
pop
push
cmc
mov
xor
lods
mov
loop
fcoms
pop
cmp
inc
add
jb
std
and
adc
movsl
inc
fucomi
int
push
xchg
mov
mov
mov
mov
loope
or
sbb
pop
stos
movsb
movsl
inc
cmpsb
mov
mov
push
xchg
leave
xlat
adc
inc
lods
mov
into
lret
js
cmp
push
movsb
mov
sub
popa
les
movsl
xor
add
imul
cmpsl
ret
pop
nop
sub
sbb
in
xor
dec
pop
xchg
sti
movsl
daa
xor
mov
mov
ficomps
ljmp
xlat
sub
movsl
mov
cld
sub
in
stos
movsl
mov
cmpsb
add
fucompp
andl
stc
movsl
pop
bound
decb
cltd
mov
cmp
push
jp
pop
and
pop
subl
cmp
xchg
loopne
or
lret
lea
adc
shrb
push
cld
cmc
mov
xchg
or
shlb
out
stc
inc
mov
or
pushf
push
mov
mov
test
sbb
dec
xchg
out
movsl
stos
sbb
cmpsb
adc
pushf
or
and
movsl
pop
sahf
jecxz
jmp
aaa
into
enter
mov
imul
sub
push
mov
sbb
arpl
mov
inc
movsl
and
movsl
lret
dec
out
mov
pop
cmp
stc
iret
sbb
mov
or
cltd
lds
jmp
js
test
adc
or
adc
mov
or
cmc
icebp
add
bound
cmp
lret
loope
jg
jne
add
dec
movsl
fistpl
mov
mov
insl
cmp
test
fisttpll
sbb
movsl
jne
in
mov
jmp
loopne
movsb
xchg
jl
movsl
outsl
lds
jg
add
insl
call
test
sub
clc
ja
mov
out
cmc
pusha
jle
jecxz
dec
and
fwait
pop
arpl
mov
jmp
jg
movsb
xchg
in
es
cmp
push
pushf
clc
mov
cmpsl
mov
sub
mov
mov
mov
or
or
lret
sahf
pop
je
ss
mov
dec
fisttpll
movsb
aaa
add
push
pusha
outsb
fldenv
dec
in
pop
jnp
je
pop
movsl
sub
xchg
xor
cltd
mov
call
in
inc
int
adc
ss
in
pop
gs
popa
mov
jbe
cmc
dec
sub
xchg
jb
outsb
mov
inc
xchg
inc
sahf
call
pushl
notl
xchg
adc
fs
pushf
ret
roll
int3
sub
xlat
sub
and
roll
int3
inc
or
push
xlat
dec
sahf
inc
xor
cmpsl
popf
in
sbbb
mov
sti
sub
xchg
mov
fs
ljmp
mov
pop
test
add
outsb
sub
sub
push
sub
mov
cwtl
push
shl
rorl
dec
cmp
push
push
shr
cmp
dec
call
mov
movsl
pop
pop
movsb
es
sbb
xchg
or
daa
dec
rolb
inc
hlt
add
mov
movsl
popa
sub
stos
in
sbb
xchg
sub
xchg
ret
repnz
movsl
mov
out
cmc
popa
sub
cltd
int3
inc
lods
test
adc
xor
sbb
out
push
push
add
cmpsl
or
std
mov
sahf
mov
repz
cmp
std
xor
js
outsb
popa
adc
cmp
pusha
sub
xor
cmc
sub
push
cmp
lcall
aas
push
fdivl
pop
xchg
sbb
stos
imul
je
es
fs
lret
das
movsl
jnp
push
scas
mov
jae
icebp
cli
mov
std
inc
outsl
or
pop
lahf
inc
xchg
repz
sub
ficoml
mov
fwait
aad
and
cmc
pushf
cmp
xchg
in
inc
inc
mov
inc
pop
pop
fldt
xor
mov
fsubrp
ds
sbb
dec
popf
mov
fadd
push
adc
dec
mov
sbb
inc
sbb
imul
std
jp
or
fptan
xchg
and
or
stos
mov
mov
fdivs
lret
sub
xlat
lods
adc
xchg
add
rorl
push
int
sbb
in
movsl
je
arpl
test
movsl
sbb
mov
xorb
std
shlb
cmp
aam
repz
out
imul
in
cmp
roll
xor
lret
jnp
jle
lcall
sti
movsl
and
cmp
movsl
sub
xchg
arpl
fs
test
movsl
or
xlat
std
pop
movsb
mov
pop
leave
pop
jg
pusha
mov
fsub
jmp
add
or
outsl
ljmp
pop
cmc
push
out
mov
pop
das
outsl
inc
cmp
inc
orl
mov
lret
mov
adc
vcvttps2dq
xor
movsl
ficompl
into
mov
sub
andl
lcall
xor
pop
pop
dec
pusha
inc
insb
push
idiv
outsl
movsb
push
adc
cli
aad
in
loope
sahf
and
lcall
hlt
sbb
fwait
popf
mov
int
in
shlb
mov
xchg
push
jmp
movsl
enter
outsl
imul
mov
lea
sub
mov
push
mov
jns
dec
pop
or
add
mov
loop
shlb
push
mov
mov
or
stos
or
mov
mov
pop
movsl
and
mov
jl
adc
cwtl
aad
test
aas
insb
jno
leave
sub
cmp
mov
outsl
fs
mov
adc
push
adc
fdivp
or
popf
lcall
ret
sbb
xchg
pushf
push
sbb
inc
fcomp
mov
mov
orl
xchg
sub
es
test
decb
movsl
xor
int
stos
shlb
repnz
stos
fisubs
xchg
imul
push
pop
jle
mov
mov
push
cmp
pop
and
xor
add
add
add
mov
inc
dec
dec
je
hlt
lcall
shll
cmc
inc
js
dec
in
adc
xorb
and
mov
sar
shlb
movsl
cld
cltd
es
psllq
stos
pop
or
movsl
mov
push
and
movswl
jo
out
movsl
int3
sub
jp
lret
inc
xchg
mov
movsl
mov
xor
sahf
adc
xor
adc
add
push
inc
sbb
stos
scas
mov
js
pop
jp
in
pop
xor
rorl
mov
sahf
push
pusha
jmp
ret
lds
jno
shll
pop
inc
int
xchg
loopne
in
adc
jmp
movsl
cmpsb
xor
pop
imul
dec
in
out
into
jl
pop
cmpsl
loope
and
movsb
movsl
sub
xor
dec
push
shl
cld
in
xchg
inc
inc
dec
pop
movsl
adc
es
movsl
adcl
dec
jbe
ja
negb
fwait
cld
in
sub
subl
in
pextrw
mov
shl
pop
stc
js
cld
movsl
addr16
sub
loopne
daa
mov
push
movsl
dec
hlt
inc
sub
into
icebp
adc
int
leave
movsl
jae
fists
mov
jnp
mov
push
aas
jns
movsl
inc
cld
xchg
mov
movsl
dec
jecxz
call
movsl
sub
adc
mov
loope
movsl
orl
shl
or
test
and
popf
sti
inc
sahf
xchg
inc
cmp
pop
pop
movsl
pop
jg
or
and
stos
loopne
cli
push
mov
pop
xchg
mov
sti
aad
sbb
iret
in
call
dec
sti
mov
movsl
jecxz
cmp
aaa
lahf
mov
call
movsl
loop
fstpl
push
mov
and
mov
or
push
mov
lds
push
insb
push
fdivr
int
fists
xchg
sub
xor
in
or
xlat
insb
movsl
cli
xchg
adc
mov
and
add
loope
sbb
xchg
xchg
test
ss
push
movsl
scas
or
movsl
sbb
sti
icebp
js
movsl
jecxz
lock
into
jne
pop
push
enter
push
cmpl
xor
inc
sbb
mov
and
jmp
mov
xchg
fnsave
cmp
sub
shrl
call
jb
sbbb
int3
inc
in
mov
in
lret
out
mov
inc
xorl
mov
mov
scas
push
movsl
or
xor
movsl
nop
repnz
dec
mov
add
shl
hlt
fildl
push
fldenv
jno
aaa
push
pop
add
in
loope
mov
in
fs
cmpb
out
fcmovbe
movsl
in
xchg
mov
xchg
fnstsw
dec
mov
mov
in
ror
clc
add
mov
mov
scas
gs
xor
mov
sub
push
mov
dec
movsl
dec
sbb
popw
jg
mov
js
out
in
jmp
pusha
jle
mov
push
push
xchg
repz
mov
out
cli
shr
insl
leave
das
in
push
movsl
pop
pop
sbb
cwtl
aas
sub
fbld
dec
test
fiaddl
out
dec
jns
dec
jmp
stc
jmp
cmpsl
enter
mov
movsl
jo
in
addr16
cli
andl
nop
fistl
xchg
or
add
bound
ljmp
aaa
or
inc
push
and
pop
movsl
stos
mov
je
movsl
andl
add
in
mov
jp
push
loopne
xorb
mov
loope
dec
aas
mov
mov
jae
pop
push
cmpsl
adc
imul
movsl
je
leave
adc
dec
lods
sbb
and
es
ret
leave
stos
iret
scas
cmc
sbb
rorl
movsl
mov
adc
outsb
lret
lods
std
movsl
test
add
cmp
add
add
in
or
dec
xchg
push
or
cmp
xchg
enter
cmc
movsl
sbb
test
repnz
cmpl
jmp
lds
popf
movsl
xor
sbb
movsl
cmpl
je
iret
popf
sahf
mov
pop
inc
out
fucomi
repnz
dec
sub
mov
pop
loop
leave
push
popa
mov
or
aas
gs
insl
mov
jge
xchg
test
xchg
popf
pop
aad
in
mov
movsl
and
mov
pushf
movsl
sarb
in
sbb
es
jb
inc
mov
ficompl
ljmp
sub
jmp
fidivrl
rorl
outsl
xchg
push
sub
ficompl
movsl
pause
stos
cmp
sub
mov
mov
dec
ja
loopne
sti
mov
nop
mov
jno
mov
xchg
movsl
and
pop
push
movsl
push
dec
xlat
aam
push
scas
add
movsl
xor
aas
push
movsl
lcall
imul
cmp
mov
test
xchg
pushf
cmp
xchg
inc
sub
inc
pop
xchg
insb
sub
movsl
sahf
xchg
mov
pop
adc
movsl
in
sub
mov
jns
xor
cmc
aaa
jbe
mov
test
push
clc
pcmpeqb
push
popf
arpl
in
jae
lea
movsl
pop
jl
scas
mov
sbb
push
imul
das
inc
lods
inc
movsl
mov
mov
adc
push
jg
movsl
in
xchg
xchg
das
mov
popa
xchg
cmc
pop
enter
test
cmp
pop
mov
and
inc
push
add
or
movsl
mov
push
pusha
inc
mov
fnstsw
and
lret
popf
jbe
pop
xlat
nop
sbb
mov
popa
in
xchg
mov
jecxz
sub
test
cmpsl
add
lret
lods
cltd
jnp
jno
jns
push
clc
in
lock
xchg
mov
push
push
push
dec
push
inc
sti
dec
sbb
negb
je
jg
and
mov
repz
jle
sub
ficoml
lds
pop
jne
decb
popf
cli
cmp
addl
jmp
sbb
mov
jle
cmp
int
add
hlt
and
xor
mov
mov
cmp
adc
and
lea
lret
jbe
cmp
pop
lcall
loope
sub
std
aas
inc
mov
divb
push
sub
and
fnstcw
aad
lea
xchg
sbb
dec
addb
movsl
cmc
sub
and
and
scas
aaa
cmp
es
xchg
es
or
pushf
cmpsb
stos
cmc
inc
icebp
daa
in
mov
pop
xlat
jecxz
lds
jo
bound
repnz
flds
dec
lods
mov
sub
add
bound
and
adc
cmp
ret
mov
mov
int
insl
mov
leave
pop
jecxz
push
test
lock
mov
sub
push
cmc
bound
in
cmp
add
lock
push
xor
and
ret
lods
mov
arpl
frstor
pop
jg
pop
lcall
add
xchg
bnd
and
add
scas
jbe
fisubrl
loope
ret
jle
cmp
or
jnp
sbb
test
mov
xor
push
inc
sub
out
xor
andl
cmp
das
sub
sbb
mov
mov
xlat
dec
xchg
out
sub
js
sub
jnp
data16
xchg
jl
and
stc
filds
das
enter
sti
mov
cli
pop
ffree
pop
jle
push
jmp
adcb
jecxz
test
mov
js
or
sbb
sub
or
je
xchg
dec
std
outsl
lock
testb
not
shl
pop
mov
or
or
sahf
je
add
cmpsl
into
sbb
and
in
jp
rcll
pop
lods
flds
pop
inc
stos
mov
mov
stc
stos
sub
popf
xlat
mov
popf
std
ljmp
cmp
pop
push
stc
loopne
out
movsb
jmp
mov
fnsave
clc
cld
and
mov
popf
test
sub
or
into
imul
jmp
adc
out
or
icebp
dec
movsb
das
loope
jns
sub
push
cmp
sub
dec
push
pushl
adc
xchg
andl
cmpsb
addr16
lahf
stos
movsl
add
jp
mov
out
sbb
pop
hlt
pop
inc
fisubrl
int3
mov
mov
xchg
push
push
insl
es
jge
dec
int3
jle
pop
xchg
add
ficomps
andb
xor
cmc
mov
pop
push
mov
gs
push
sbb
ror
aam
and
aaa
push
jge
push
and
sahf
xlat
arpl
pop
mov
nop
js
sub
push
shlb
jns
jae
xchg
add
mov
cmpsb
dec
pop
xchg
movsb
lahf
sub
xchg
pop
or
xor
fwait
sbbl
push
mov
adc
imul
and
pop
mov
movsb
push
pop
jle
and
repz
test
in
into
cltd
sbb
ffree
mov
dec
inc
lret
sbb
xor
adc
stos
mov
push
das
lock
adc
inc
push
pop
in
sub
xchg
pop
popl
or
popa
sub
pop
and
and
lock
push
movsb
lahf
mov
div
sbb
aas
stos
btr
sub
bswap
sbb
fisubl
xchg
pop
adcw
push
mov
jbe
xor
ficoms
pop
pop
push
xor
popf
pop
push
fcmovnbe
sti
cmp
pop
test
cmp
ret
aad
lods
in
xchg
ret
xchg
div
adcl
decl
jo
imul
sbb
hlt
push
sub
and
push
cmp
mov
inc
fstpl
mov
dec
cmp
sahf
dec
cmp
movsb
stos
mov
mov
push
push
inc
push
sub
push
jns
xor
imul
mov
inc
out
sbb
inc
sub
jl
push
jp
daa
dec
mov
jns
outsb
cld
rcrb
jle
inc
cmp
pushf
cmc
or
and
movsl
or
jecxz
adcl
iret
cltd
sbb
pop
hlt
leave
gs
lock
push
lods
cmp
mov
unpckhps
xor
dec
or
adc
mov
xchg
or
pop
jbe
mov
xchg
fisubl
lds
fnstenv
mov
arpl
jge
in
sbb
mov
mov
push
dec
popa
and
fimull
sbb
fdivl
push
push
int
jecxz
fsub
cmc
cmp
add
imul
enter
sbb
sbb
sbb
jg
dec
sbb
jge
fcomps
adc
pop
xor
xchg
or
push
loopne
mov
sub
or
jle
js
mov
sbb
add
gs
js
in
in
movl
pop
movsl
mov
xorb
rorl
or
stc
subb
shll
movsl
push
les
sub
dec
cltd
ds
jmp
movsl
push
pop
sub
lock
ret
add
callw
adc
cmc
mov
cmp
inc
je
push
xor
jmp
out
mov
pop
sbb
ret
mov
xchg
xor
leave
push
cmc
mov
sbb
outsb
xchg
inc
imul
ds
jo
daa
test
neg
xchg
jno
pop
cmp
out
mov
faddp
cmpsl
adc
lock
and
inc
pushf
inc
aaa
movsl
sub
adc
ret
movsl
pop
lea
xor
xlat
dec
mov
pop
test
dec
movsl
addr16
push
outsb
cmp
shlb
pop
adc
shll
dec
lods
add
mov
pop
dec
movsl
jo
adc
mov
mov
mov
es
into
shlb
mov
repnz
outsl
xchg
inc
and
inc
imul
fsqrt
hlt
int
movsl
daa
sub
add
test
cwtl
ret
lods
shlb
sub
movsl
xor
outsl
cs
mov
shll
ret
mov
sub
movsl
xchg
fsubs
aad
pop
test
push
mov
inc
xorl
sbb
incb
pop
rcrl
xchg
popf
loop
int
xor
and
sbb
mov
iret
add
inc
mov
fbld
in
push
cmc
cs
mov
outsb
or
add
jne,pt
add
sahf
int3
sbb
lcall
movsl
dec
pcmpgtb
divl
cli
and
lcall
int3
sub
bound
gs
cmp
jns
movsl
rol
out
inc
jne
xor
icebp
rorb
mov
cmp
out
xor
jg
xor
movsl
xor
call
shl
das
movsl
inc
lahf
xchg
daa
mov
call
xchg
sbb
sbb
aaa
aad
movsl
pushf
xlat
add
xchg
scas
or
popf
outsb
imul
cmp
movsl
out
cmp
scas
cmpsb
mov
ret
push
sbb
test
mov
mov
dec
movsl
or
mov
xchg
pop
sbb
push
push
xchg
movsl
sbb
dec
jg
cmpsl
mov
movsl
jmp
imul
jle
add
movsl
andb
popw
out
out
cmc
mov
mov
xchg
sti
in
nop
mov
movsl
ja
pop
outsl
sahf
in
iret
loopne
repnz
es
out
ljmp
push
pop
xchg
inc
mov
add
lock
movsl
fiadds
cmp
cmp
pushf
fucom
test
mov
mov
shrl
jmp
jb
pop
push
inc
ja
mov
pusha
jg
shlb
movsl
sti
pop
mov
mov
sbb
dec
inc
cmp
cwtl
je
dec
cmpsl
or
fstpt
stos
and
pop
addr16
pusha
xchg
jb
arpl
mov
and
mov
xor
sub
mov
lods
sbb
imul
mov
cltd
rorl
push
push
jbe
in
icebp
sub
scas
lods
stos
sbb
jne
mov
adc
pushw
push
push
cwtl
pop
mov
test
or
movsl
cmc
fisubrs
pop
adc
pusha
push
or
or
xor
lds
pop
mov
and
xor
sub
insl
xor
fmulp
xlat
dec
cmp
jnp
mov
xor
pushf
add
mov
sbb
ss
lahf
scas
movsl
sbb
psrld
xchg
movsl
outsb
lcall
movsl
inc
hlt
lahf
cli
rcl
and
and
adc
lret
dec
fcoms
out
movsl
mov
ja
dec
jo
fsubl
clc
or
mov
daa
cwtl
mov
movsl
cmp
test
sbb
jno
dec
fisubrl
dec
enter
lds
movsl
lahf
xor
and
stos
mov
and
jo
pushl
mov
sbb
pop
mov
mov
scas
cmp
xchg
sbb
push
popa
push
add
pop
mov
sti
movsl
repz
mov
movsl
ljmp
jecxz
iret
xchg
in
dec
stos
push
adc
movsl
out
and
jle
test
mov
xchg
sbb
popf
push
les
aad
mov
movsb
push
mov
jmp
mov
mov
out
jno
dec
std
call
sbb
pop
dec
pushf
xor
movsb
cmp
pushf
rolb
scas
shl
movsl
jg
dec
jae
push
mov
clc
aad
popa
lahf
push
push
movsl
xor
in
xchg
pusha
jmp
enter
xlat
lods
cld
ja
cwtl
and
add
iret
xchg
jno
sbb
lret
aam
jno
scas
movsl
dec
push
sahf
pop
jnp
rolb
xchg
sub
mov
out
jge
pop
dec
xchg
add
pop
sahf
mov
cmpsl
sbb
pusha
push
dec
cmc
pop
fs
pop
mov
and
repnz
fxam
cmp
mov
popf
aaa
mov
rcll
jmp
xlat
mov
or
movsl
pop
std
xor
pop
iret
lcall
in
arpl
mov
pop
mov
push
ret
xor
mov
movsl
cmpsb
dec
dec
insl
rol
cmp
into
leave
jno
popa
inc
fsubs
dec
dec
inc
push
cwtl
inc
insl
repnz
mov
cmp
lret
mov
movsl
push
adc
and
xchg
xor
jp
clc
cld
dec
fsubp
shll
adc
sbb
mov
mov
lods
test
imul
mov
cwtl
movsl
mov
out
mov
repz
in
or
cld
and
ficoml
insb
rcpps
or
xor
push
jg
inc
pop
loopne
fsub
mov
jp
stos
mov
movsl
ret
fwait
in
xor
adc
lods
pushf
movsl
fcomp
call
mov
xchg
fdivrs
inc
cld
cwtl
mov
mov
int3
adc
movsl
and
fadds
movsl
push
adc
imul
mov
mov
bound
pop
mov
gs
mov
aad
movsl
filds
mov
mov
inc
lret
leave
cli
add
sti
test
pop
clc
icebp
lods
movsl
rolb
jo
aad
outsl
cwtl
jb
xchg
movsb
xchg
mov
fsubl
push
into
add
sbb
mov
sti
int
mov
mov
scas
testl
push
mov
leave
jbe
mov
adc
arpl
mov
movsl
test
mov
jbe
mov
mov
or
sahf
jge
push
data16
loop
outsb
mov
jecxz
outsl
push
roll
movsl
xor
cld
out
adc
ja
or
int3
pop
pop
out
mov
sub
and
inc
repnz
arpl
jae
test
stc
aad
mov
jl
adc
adc
addl
add
pop
cmpsl
xchg
push
movsl
gs
add
xor
into
sub
pop
cmc
stos
push
movsl
xlat
in
jle
out
popa
mov
push
adc
adc
fisubs
fisubrl
jg
movsl
and
outsl
test
xlat
xchg
push
dec
insl
mov
adc
cmpsb
mov
xor
and
mov
push
arpl
decl
mull
movl
add
pop
adc
mov
mov
jo
aam
addr16
ljmp
movsl
cmp
push
lret
push
mov
mov
and
movsl
test
add
push
inc
loope
cmpsl
roll
cmpsb
ret
xlat
in
sub
adc
jl
in
xchg
xor
mov
shlb
inc
shll
mov
xor
cmc
outsl
repz
push
cmpsb
cmp
pushf
lea
cwtl
cwtl
dec
cmpsb
rcrl
fisubl
inc
cmpsl
cmp
or
data16
mov
xor
adc
imulb
fnstcw
sub
bound
incb
jl
cmp
inc
arpl
int
insb
adcl
jge
push
movsl
scas
adc
scas
out
sahf
push
inc
in
mov
and
cmp
cmpsb
int
dec
jbe
arpl
jmp
cmpsb
or
aaa
and
sbb
popa
and
or
cmp
sbb
icebp
lock
aad
sahf
pop
fwait
jle
daa
lret
jmp
xchg
fiaddl
push
inc
andl
or
shl
xlat
mov
jmp
dec
sub
pop
mul
push
mov
dec
mov
lock
sub
sti
cmc
pushf
dec
aas
pop
addr16
push
clc
ficompl
outsl
push
pop
icebp
dec
pushf
outsb
inc
icebp
rcll
push
rol
xor
mov
xor
sbbl
mov
leave
mov
inc
test
repnz
rcl
scas
sub
sbb
mov
cmp
sbb
vmaxpd
leave
pop
cmp
das
and
push
cmp
lock
mov
or
mov
insl
or
mov
and
pop
and
inc
ret
push
int3
sub
sub
and
stos
mov
fxch
in
add
inc
ds
mov
outsb
out
xorl
cmp
call
dec
sbb
faddp
sub
sub
mov
cmc
ja
repnz
in
mov
adc
and
jecxz
or
add
sub
ja
add
mul
fidivrl
mov
mov
cmp
lods
clc
sarb
mov
sbb
fld
aam
jle
inc
movsl
aad
xchg
lds
pop
rolb
imul
pop
push
pop
icebp
xor
add
or
adc
inc
loopne
stc
imulb
push
call
ljmp
rcll
sti
inc
cwtl
fisubs
orl
inc
pop
pop
pop
add
mov
dec
pop
and
std
add
pop
enter
loope
mov
jl
cmp
scas
pop
cmc
ja
adcb
pop
pushf
mov
inc
stos
mov
lea
and
inc
into
in
add
scas
jecxz
sbb
sub
mov
pop
shl
mov
ds
scas
jne
mov
ret
icebp
mov
cmp
inc
and
xchg
insb
cli
sahf
pop
add
pop
into
stos
into
icebp
popf
in
clc
lods
jle
lods
ds
and
push
sbb
xchg
mov
movsb
mov
mov
into
cwtl
movb
mov
out
pop
mov
sahf
mov
dec
rcll
dec
fsubrs
push
sbb
aas
dec
sbb
push
addr16
fnstsw
mov
and
ja
mov
lahf
lods
push
inc
adc
lods
jo
popf
cmp
jle
and
pop
inc
popa
mov
add
jae
mov
add
je
sbb
out
mov
leave
cmc
fidivrs
or
cltd
mov
jge
stc
pop
adc
movsl
mov
jle
fstpl
jl
movsl
sbb
add
hlt
out
sahf
loope
repz
adc
push
dec
mov
xchg
dec
mov
mov
popf
arpl
stos
jp
addr16
inc
bound
mov
movsb
and
cmc
add
addl
jge
push
jmp
insl
mov
jne
fnstcw
xchg
aaa
mov
rcl
sub
xchg
rol
add
sbb
or
mov
lock
or
aaa
adc
testl
fldl
loop
cmp
dec
jae
sub
push
push
jns
mov
jae
jg
xor
lods
inc
mov
aas
iret
dec
add
mov
data16
adc
movsl
mov
xor
mov
movsl
repz
lret
and
push
jnp
cmpb
and
add
sbb
sbb
xor
sbbb
pusha
lock
fwait
dec
cmp
pop
test
movsl
pop
add
xlat
push
pushf
fisubrs
mull
add
push
mov
mov
cmpsl
jae
adc
cmp
jecxz
data16
jmp
mov
gs
movsl
mov
adc
sbb
jns
aam
in
inc
inc
sbb
xchg
in
cwtl
inc
add
movsl
dec
movl
jp
mov
movsl
mov
movsb
stos
push
movsl
mov
sbb
xchg
cmp
iret
movsl
out
inc
inc
pop
xchg
cmpsl
mov
push
rcll
pop
push
in
fimull
movsb
ficomps
std
inc
movsl
jnp
pop
pop
push
mov
cmpsl
xorl
cwtl
aaa
sub
std
out
pop
sbb
adc
addb
xor
test
cmp
xchg
sub
ret
outsl
cmp
and
data16
fs
in
add
dec
sbb
movsl
out
cmpsl
add
mov
idiv
or
cltd
and
and
sarb
movsl
pop
push
dec
mov
sahf
adc
inc
cmc
sub
adc
frstor
push
mov
mov
test
mov
clc
lds
cmp
mov
xor
test
sub
pop
pushf
addr16
repnz
pop
and
mov
ret
out
scas
pop
xlat
ljmp
aad
aad
inc
xchg
adc
aaa
pop
jmp
popa
adc
jmp
xlat
fnstenv
pop
repnz
sbb
icebp
cmpsb
stos
outsl
jb
adc
cmp
xchg
dec
std
push
push
and
fwait
popa
icebp
inc
mov
mov
xor
xor
fistpl
mov
xor
sbb
mov
in
testl
inc
test
std
and
sub
adc
shrb
sub
sub
lods
pushf
pusha
sub
jns
mov
cmpsl
into
sub
stos
shrb
cmp
and
les
out
fistl
popa
pop
fsubs
cwtl
shlb
sub
mov
icebp
xorl
ja
or
and
jle
lods
xlat
lahf
xchg
jp
cmp
enter
jb
int
sahf
rorl
dec
fstps
incb
push
adc
jle
lea
fimull
enter
repz
fxch
adc
mov
mov
jl
cwtl
enter
pop
test
lods
rol
je
xchg
mov
out
lds
cmc
std
in
xchg
push
add
insb
push
sarb
es
mov
aad
outsl
adc
sahf
pop
jle
sub
iret
jecxz
leave
pop
enter
add
pop
cmp
mov
sub
xor
and
sbb
pop
xchg
add
stos
adc
loope
lret
mov
addr16
loop
enter
lods
xlat
sbb
dec
push
or
cltd
std
test
pushf
or
mov
cmp
pop
or
insb
shl
std
sahf
pop
add
in
sbb
and
ja
js
and
sbb
in
adc
adc
push
into
mov
sub
cli
push
push
incl
sub
jmp
out
xchg
inc
cmpsl
std
fnstsw
pop
jnp
iret
pop
xchg
xlat
shrl
das
push
sbb
imul
sbb
loope
idivb
xchg
pop
fmuls
iret
dec
shlb
in
pop
cmpsl
ds
in
dec
popf
or
jns
shl
js
lea
push
daa
lret
into
jmp
pop
popf
std
leave
dec
aad
icebp
rcl
nop
je
fisttpll
pop
sbb
pusha
into
gs
sbb
loope
cli
pop
jno
aam
pop
shrb
insl
fldl
or
js
mov
fsub
int
sahf
sbb
call
aas
push
mov
out
mov
sbb
push
and
lods
push
jo
popf
aad
test
mov
lret
xchg
sbb
cmp
cmp
mov
xchg
xchg
inc
incb
and
iret
add
mov
ljmp
pop
and
adc
out
cmc
and
sub
testb
jp
xchg
in
addr16
adc
inc
popf
cmpl
test
jge
jg
into
divb
aaa
push
js
mov
call
subl
rorl
inc
rcll
mov
mov
mov
mov
in
pop
sub
pushf
mov
pop
movsb
sub
into
mov
cs
ljmp
xor
push
adc
icebp
and
mov
int3
push
je
movsl
or
movsl
jmp
adc
movsl
dec
js
xor
xor
mov
in
movl
call
pop
in
or
stos
icebp
and
mov
stc
movsl
loop
add
out
out
jae
movsl
mov
insl
push
mov
je
cmpsb
push
cmpsl
adc
sub
aaa
xchg
fs
mov
pop
sti
nop
mov
scas
adc
movsl
jo
cwtl
cmp
sbb
mov
sti
lret
pop
fsubrp
mov
sub
adcl
out
ficomps
mov
imul
and
mov
out
xchg
loopne
sub
and
gs
mov
pop
jle
lret
mov
add
movsb
mov
add
bound
in
pushf
icebp
aam
insb
push
pop
sbb
stos
fwait
or
sbb
jmp
push
outsb
jge
int3
out
mov
push
call
pop
sbb
pop
dec
mov
rcrl
test
bound
and
loop
sti
fadd
daa
aad
or
popf
xchg
push
insb
movsl
lret
lds
aas
movsl
insl
mov
gs
pop
sbb
ret
das
mov
popa
adc
jno
dec
dec
enter
dec
std
lahf
les
jmp
loope
sbb
popf
lds
in
movsl
test
dec
movsl
lods
mov
mov
sahf
outsb
loop
movsl
add
js
xchg
jo
jb
dec
sub
and
orb
sub
insl
mov
add
mov
in
mov
cmp
mov
and
lods
sbb
fsubs
mov
xchg
mov
inc
stos
pop
movsl
mov
out
and
rorl
mulb
fcomip
and
cmp
in
cmp
jmp
push
add
in
mov
cwtl
inc
pop
cld
inc
push
xchg
mov
cmp
mov
in
dec
mov
filds
add
aam
cmp
movsl
xor
movsl
out
dec
push
pusha
jmp
cmp
andl
pushf
or
add
add
jnp
pop
out
gs
adc
dec
sbb
cmp
pop
nop
ret
mov
shll
sbb
lods
pop
movsl
stos
mov
mov
pop
test
inc
in
es
xchg
and
xor
scas
and
lds
aaa
lahf
and
ljmp
and
jmp
push
addr16
test
movsl
fstl
push
gs
leave
mov
vzeroall
fsts
or
push
cmc
xchg
cmp
mov
repnz
in
xchg
mov
ret
movsl
sbb
nop
cmp
xchg
arpl
xor
and
cmp
movsl
xor
adc
jle
push
movsl
jae
add
mov
mov
push
cmc
repnz
int3
pop
pop
jno
adc
or
in
mov
xor
pop
imul
xchg
movsl
pop
xlat
andb
subl
dec
jp
frstor
imul
inc
mov
movsl
loopne
in
data16
cmp
mov
mov
xchg
in
pop
sbb
mov
movsl
mov
lods
or
std
cmp
cmpsb
and
mov
cli
cmp
outsl
dec
rcrl
push
jb
movsl
adc
out
rclb
js
imul
add
and
dec
movsl
push
nop
mov
mov
xor
adc
mov
popf
cltd
jne
inc
movsl
cli
cld
xchg
arpl
in
dec
mov
push
sahf
pusha
fstpt
xor
sub
mov
mov
movsl
je
inc
stc
fiaddl
pop
testb
sbb
mov
sub
xchg
ret
cmc
pop
push
push
fsub
fstl
mov
xchg
push
push
dec
movsl
and
pop
pop
movsl
imul
nop
or
xor
scas
in
movsl
bound
xor
popf
mov
and
push
ret
sbb
xor
push
lods
ljmp
pop
icebp
into
movsl
cmp
les
cmc
out
movsl
insl
arpl
out
enter
scas
inc
stc
add
test
popa
data16
inc
push
pop
mov
push
xor
je
mov
movsl
shll
mov
pop
xchg
jbe
mov
inc
jnp
movsl
xchg
push
loope
pop
fstl
xor
aaa
jbe
push
fdivp
push
movsl
cmp
sbb
or
lcall
clc
jge
mov
bound
out
xchg
mov
mov
lods
or
movsl
loop
out
call
lds
fbld
std
mov
xchg
popa
inc
add
je
movsl
lea
jp
xchg
pop
sub
sub
dec
adc
mov
loopne
dec
imul
mov
idivb
les
imul
xchg
in
sbb
sbb
mov
mov
push
ljmp
sub
xchg
pop
cmpl
mov
movsl
inc
cmp
jge
pop
ljmp
out
imul
decl
rcrb
mov
pop
jmp
int3
movsl
test
xor
movsl
inc
xchg
popf
in
dec
outsb
add
inc
movsl
xor
pop
cmp
sub
mov
push
insl
pop
cmc
outsb
insb
movsl
push
icebp
in
pusha
mov
movsl
push
les
aaa
ss
call
ficomps
xor
mov
cltd
sbb
mov
pop
es
xchg
in
jge
or
outsb
sti
xor
lcall
lret
movsb
icebp
pop
movsl
add
or
mov
in
call
hlt
adc
stos
movsl
sbb
xchg
aad
sahf
add
movsl
and
mov
fcompl
sbb
jno
lcall
je
movsl
and
in
or
popf
xchg
cmp
dec
or
add
mov
in
add
fisubs
iret
fcmovnbe
jmp
movsl
mov
nop
adc
insl
jg
popf
dec
inc
cmpsl
push
cmp
pop
push
mov
lods
pop
jno
or
and
adc
cli
daa
sbb
sbb
and
lods
sub
pushf
sub
mov
loop
stc
aam
out
repnz
add
movsl
push
dec
adcl
xor
movsl
xor
sbb
sahf
add
mov
mov
lds
iret
and
jo
pushf
add
or
arpl
mov
jg
cmp
hlt
dec
movsl
fcomp
int3
outsl
popa
sahf
mov
shl
out
loopne
push
cwtl
adc
mov
jne
shll
dec
movsl
mov
jns
pcmpgtw
lea
aaa
mov
stos
mov
leave
pop
shrb
jmp
and
mul
in
leave
sbb
push
mov
push
dec
test
stos
pop
jnp
fnstsw
rorl
pop
and
jg
sti
jmp
cmp
push
mov
fsubl
xor
fdivs
cli
hlt
and
adc
fsubrp
movsl
dec
mov
push
call
add
add
jecxz
lahf
mov
mov
xchg
rcrb
ret
xchg
sub
test
les
insb
sti
pop
imull
pop
cmp
mov
jmp
movsl
inc
mov
mov
push
movsl
dec
cltd
mov
mov
jmp
pop
and
std
pop
mov
dec
xchg
mov
mov
leave
dec
or
mov
inc
xchg
cwtl
movsb
cmp
scas
or
xlat
jp
jg
sub
lock
push
cwtl
and
pusha
jnp
arpl
daa
mov
mov
mov
mov
inc
std
or
scas
mov
xchg
pop
and
inc
movsl
or
in
pushf
mov
dec
lret
push
sar
or
imul
sahf
pop
and
mov
cmpsl
mov
movsl
repz
jle
in
movsl
jbe
loopne
jp
xor
push
mov
fsubp
in
addl
jle
outsb
push
jge
shll
int
movsl
xchg
jmp
movsb
or
movsl
lods
mov
cmpsl
mov
jmp
sub
jb
mov
popf
jnp
daa
mov
or
mov
mov
rcrb
sbb
mov
movsl
aaa
test
fstl
push
cs
mov
xchg
xchg
ret
push
imul
in
mov
jle
push
cmc
popf
repnz
jecxz
movsl
xchg
push
icebp
ja
mov
xchg
movsl
int3
push
adc
push
adc
outsb
es
xor
jl
push
movsl
lods
cwtl
xor
xor
pop
mov
sbb
or
lods
lock
lcall
lahf
test
and
int3
shl
fstp
mov
js
movsl
aad
inc
mov
pop
in
data16
xorl
in
mov
in
and
lock
push
jle
inc
movsl
xchg
fnstsw
imul
push
outsl
gs
insb
movsl
sub
pop
jmp
and
sbb
ss
scas
push
mov
popf
sbb
cltd
add
shr
sahf
jmp
lock
lea
dec
scas
stc
push
movsl
add
lahf
and
les
add
repz
xchg
popf
adc
sarl
add
lds
in
out
lock
xlat
jne
and
popf
insb
arpl
in
stos
pushf
xor
jbe
int
pop
pop
imul
fidivs
xchg
mov
xchg
stos
scas
inc
jp
dec
and
ljmp
es
mov
inc
in
sti
movsl
test
in
sarb
movb
aas
in
addr16
sbb
ficoml
mov
adc
std
ret
xor
movsl
jmp
fdivs
sub
cld
shl
lock
in
mov
test
add
mov
xor
pusha
mov
movsl
test
rol
clc
mov
outsl
adc
push
pop
mov
pop
std
xchg
movsl
pextrw
push
pop
imul
fnstenv
dec
xchg
cwtl
movsl
int
lods
in
sahf
push
fstpt
xor
inc
adc
js
mov
sbb
out
in
movsl
ljmp
call
jl
jp
in
jle
mov
aaa
adc
test
dec
dec
mov
movsl
jmp
add
clc
sahf
das
jmp
in
jl
dec
arpl
jp
in
cmp
and
movsl
lea
cmp
clc
movsl
fwait
adc
ret
adc
bound
pop
mov
lahf
scas
xor
movsl
insb
mov
pop
and
xor
or
fidivl
xchg
movsl
fisubrs
test
jo
push
mov
jns
mov
jecxz
pop
push
cmpsb
push
pop
adc
jmp
lds
fwait
movsl
ss
fistpl
pop
mov
pop
push
imul
inc
addr16
clc
cmp
xchg
test
add
push
jae
pop
jbe
in
lcall
enter
push
pushf
cmp
cmpsb
pop
imul
shrl
and
mov
mov
movsl
test
adcl
mov
xchg
xor
leave
and
cmp
mov
cs
loopne
mov
stc
xor
pop
loope
leave
ljmp
and
or
in
call
push
push
sub
add
lock
repz
ficoms
testl
movsl
inc
imul
movsl
data16
fs
mov
inc
mov
inc
mov
pop
imul
adcb
xchg
xchg
cmp
mov
movsb
mov
out
mov
push
movsl
xor
xor
cmp
push
inc
cld
cs
and
pop
frstor
popa
push
movsl
outsb
sbbb
mov
pop
das
leave
sub
dec
aam
jl
out
mov
push
repnz
shlb
adc
scas
test
jne
fs
sub
mov
jo
inc
dec
jg
movsl
pop
jae
adc
mov
cmp
push
fcompl
add
imul
arpl
into
clc
in
icebp
andl
inc
dec
shr
add
push
push
mov
xor
scas
into
testl
test
in
mov
and
cmpsb
and
mov
sti
and
cs
std
mov
add
je
dec
cmc
fdecstp
push
cld
cli
mov
iret
jae
lds
popa
psubd
and
ja
jnp
jbe
out
sahf
in
pop
divb
xor
call
jns
lds
lods
inc
adc
and
and
incl
fmull
imul
addr16
mov
jmp
nop
and
js
pop
sbb
jns
movsl
jge
lds
add
inc
in
fcomps
out
loop
hlt
or
mov
jle
enter
mov
or
dec
aad
aad
fisubs
rcrb
stc
popf
mov
je
cli
adc
xor
and
jl
xor
jmp
xor
adc
adc
ret
dec
popa
fdivrl
push
mov
mov
mov
pop
xor
pop
or
test
and
movsl
stc
shr
and
and
mov
lret
add
mov
fcmovnbe
in
dec
dec
movsl
idivb
and
mov
cmp
subb
mov
movsb
pop
mov
add
mov
xchg
mov
in
repz
mov
push
aas
pop
js
sti
popf
stos
mov
movsb
jns
loope
lods
push
xchg
int3
imul
loopne
sbb
fidivs
adc
int3
nop
mov
and
loopne
pop
and
dec
inc
sbb
movsl
int
sarb
adc
mov
cmpsl
in
inc
pop
in
xor
test
mov
sti
push
out
shlb
hlt
inc
outsl
mov
jb
cmc
in
out
jge
in
repnz
movsl
lea
mov
nop
xor
std
xor
mov
shrb
push
cltd
movsl
push
icebp
push
orl
mov
sbb
push
xorb
pop
xor
andl
scas
std
lret
cli
pop
imul
sub
mov
jb
sub
gs
mov
int3
cmpsl
lret
and
xchg
daa
mov
mov
in
movsl
mov
xchg
mov
sub
aaa
movsl
xchg
stos
pop
lock
mov
insl
movsl
shrb
lret
movsl
xchg
out
xorb
mov
in
push
add
scas
jbe
iret
jmp
mov
xor
orl
pop
pop
add
test
sbb
js
mov
repnz
push
test
movsl
or
push
add
sbb
stos
ret
mov
movsb
in
pop
mov
cmp
ret
movsl
aaa
gs
cmpsl
sti
jge
push
lds
push
movsl
mov
cmp
fadd
adc
pop
lods
adc
or
pop
pushf
add
or
stc
mov
mov
imul
and
inc
xchg
pop
push
popf
xor
in
dec
pop
dec
jne
arpl
add
xorl
push
sbb
popf
call
xor
test
jo
cmp
adc
push
lretw
iret
jp
dec
mov
dec
xor
push
fistpll
xlat
xor
in
imul
or
xor
dec
add
pusha
adc
cmp
pop
push
movsb
in
xchg
adc
push
cmc
lds
dec
pop
les
adc
movsl
sbb
mov
nop
cmp
add
xchg
cwtl
aas
pop
ja
movsl
pusha
ret
dec
popf
xor
movsl
push
jns
jp
push
lock
or
inc
ljmp
pop
add
mov
cmpsb
pop
mov
adc
push
je
and
and
lret
jge
scas
cmc
sbb
movsb
fdivl
cwtl
shrl
sub
mov
test
inc
push
mov
out
testb
aam
fldl
ret
sahf
cmovae
popf
cmp
out
stos
mov
sub
mov
mov
out
iret
xor
cmpsb
push
add
dec
mov
mov
lods
fwait
jecxz
mov
sub
inc
mov
push
cli
out
mov
daa
xchg
iret
stos
jae
push
or
xchg
movsl
les
xchg
xor
mov
stos
push
icebp
movsl
mov
push
cmpsb
pop
leave
and
cmp
xor
repz
rol
movsl
sbb
mov
hlt
pop
movsl
pop
xlat
arpl
mov
lock
inc
lds
movsl
rcrl
xchg
test
scas
movsl
inc
mov
test
repz
mov
movsl
push
mov
jecxz
mov
movsl
scas
out
addr16
jne
inc
sahf
push
xchg
lea
jl
jno
or
jae
movsl
imul
mov
es
push
adc
xchg
sub
jge
clc
inc
mov
mov
movsl
pop
sub
jbe
stc
rep
popf
cmp
dec
movsl
inc
jb
test
pusha
ja
scas
movsl
mov
and
movsl
or
std
xlat
push
push
mov
pop
in
or
cs
mov
mov
movsl
inc
xor
push
movsl
mov
leave
cmpsb
inc
adc
add
lds
shlb
stos
jmp
add
les
mov
jbe
out
and
cwtl
lcall
movsl
arpl
jns
aad
shll
add
inc
movsl
and
push
imul
jp
cmpsl
cmpsl
in
jle
and
movsl
das
lds
call
sbb
push
xor
push
adc
add
das
jb
fwait
xchg
movsl
xchg
mov
mov
lods
rep
xor
lahf
or
and
sub
shrl
push
in
sbb
in
xchg
xor
out
push
call
rclb
pop
lds
jg
lahf
push
movsl
rcrb
jo
mov
and
cmpsb
or
fimull
xchg
cmp
lds
sbb
ljmp
xchg
xchg
mov
movsl
loop
push
sbbl
dec
aam
int
out
call
das
popf
popf
push
adc
fidivrs
sbb
and
movsl
adc
inc
jle
push
inc
movsl
outsl
into
mov
out
or
movsl
inc
es
sbb
in
in
mov
mov
aas
cmp
push
and
cwtl
lahf
cmpsl
dec
jno
mov
stos
pop
push
pop
xchg
push
add
in
jecxz
stos
mov
movsl
sbb
dec
dec
movsl
and
pop
aam
xor
jo
mov
mov
mov
xchg
jb
mov
mov
adc
fwait
movsl
add
push
imul
loopne
xlat
xchg
int3
movsl
std
pop
cmpsl
mov
inc
arpl
lret
bnd
jo
add
mov
cld
movl
fisttpl
dec
neg
mov
outsl
cmp
push
dec
add
mov
jne
xor
sahf
sbb
add
and
aas
movsl
mov
sub
push
mov
mov
fcomp
lcall
xchg
lea
popa
std
loopne
mov
xor
and
in
pop
jo
movsl
push
testb
je
shl
jge
mov
fistpl
jne
div
mov
lea
clc
jl
jns
sahf
push
cmc
sub
mov
cmp
loop
fdiv
push
in
out
xor
lock
ds
adc
lret
adc
mov
push
lods
cmp
aaa
mov
movsl
mov
pop
pop
shl
ret
fucomp
dec
cld
dec
sbb
hlt
iret
lcall
movsl
in
or
xchg
sub
push
iret
cs
sahf
aas
loope
dec
movsl
xchg
inc
popf
dec
in
push
movsl
jmp
hlt
adc
out
sbb
jecxz
shlb
fcomip
movsl
jne
sbb
sub
leave
cmp
or
mov
aaa
fstp
jmp
repz
sbb
movsl
ds
sub
leave
test
dec
cmpsb
dec
add
push
mov
mov
add
xor
std
lods
nop
lret
icebp
push
shl
jl
test
addr16
movsl
jno
mov
add
ljmp
mov
mov
mov
jae
sub
dec
sti
out
xlat
clc
incb
scas
jmp
add
lock
cwtl
aam
clc
and
jg
bound
mov
push
jl
test
rcrl
fstpl
ljmp
adc
pop
dec
ja
movsl
add
mov
jne
cwtl
or
jns
adc
xchg
and
push
cmp
sbb
push
push
stos
data16
ror
out
push
jne
xchg
inc
imul
sarl
pushf
mov
and
mov
pop
xor
mov
movsl
xchg
mov
mov
dec
jne
push
or
mov
movsl
adc
aas
push
inc
movsl
push
shll
daa
push
xor
mov
sub
out
scas
mov
adc
fdiv
jecxz
repnz
pushf
dec
jmp
fisubl
xchg
arpl
insb
jge
cmp
cmpl
xchg
punpcklwd
adc
fdivp
xchg
int
movsl
in
fiaddl
movsl
insb
jmp
je
popf
push
sub
mov
in
test
mov
ret
xchg
push
and
sbbl
cmp
mov
dec
or
pop
mov
data16
pushf
mov
adc
scas
mov
pop
push
add
shrb
loope
inc
adc
cmp
add
movsl
xchg
imul
stos
adc
mov
test
in
or
xchg
mov
ret
cmp
movsl
icebp
cmp
andl
xchg
rolb
sbb
clc
xor
sub
sub
add
fldt
insb
jg
sbb
mov
push
es
movsl
dec
lcall
sahf
jbe
popf
cmp
jp
pop
lds
js
movsl
addr16
cmp
xchg
mov
cwtl
push
cmp
jmp
neg
push
sub
lock
ret
fcomip
movsl
addl
cmpsl
mov
mov
add
bound
pop
es
test
xchg
cmp
inc
cmp
into
lds
jecxz
movsl
mov
push
cmp
mov
adc
aam
sbb
loop
xchg
out
iret
in
mov
xchg
cmp
dec
in
cmc
jecxz
in
ljmp
push
and
sti
cmp
fisubrs
dec
insl
sub
sbb
out
into
push
jle
jge
xor
mov
bnd
mov
sbb
mov
push
pop
div
push
inc
sbb
cs
lcall
pusha
add
jecxz
movsl
lock
js
pop
push
pushf
daa
sub
ds
cmpsb
aad
js
std
cld
inc
xchg
or
cmp
fbld
not
mov
jp
addr16
stc
aam
gs
mov
sbb
imul
les
mov
pusha
or
mov
add
inc
shll
push
mov
jbe
push
out
shl
lret
inc
sbb
std
mov
pop
add
push
mov
xchg
in
mov
fstl
xchg
in
addr16
jmp
mov
mov
mov
jne
jno
cmp
cs
or
sub
cmp
fdivl
movsl
inc
push
pop
add
or
std
decl
ret
popa
js
adc
scas
push
popa
std
rol
stos
jns
movsl
lea
add
dec
movsl
pop
gs
cwtl
mov
mov
es
dec
movsl
jae
insl
cmp
fwait
popf
scas
adc
pop
and
jmp
sbb
das
aas
pushf
xchg
cmp
push
addr16
movsl
push
inc
xchg
adc
adc
mov
ja
testl
inc
movsl
inc
sub
or
cmp
aaa
imul
les
cmp
mov
sahf
xchg
or
xchg
movsl
daa
push
jecxz
repnz
pop
test
cmp
push
mov
sahf
mov
mov
rol
sbb
mov
pop
xor
fildl
rclb
mull
scas
push
push
adc
xor
jno
addr16
pop
xor
sbb
dec
popf
roll
fsubs
movsl
cltd
gs
mov
loop
ljmp
sbb
aam
les
cmp
into
stos
pop
pop
cltd
jl
pop
in
sub
pop
sti
clc
rorl
pop
lods
movsb
movsl
or
jo
lds
mov
xchg
mov
loope
movsl
mov
xchg
adc
push
fwait
jmp
je
lret
cmp
push
sbb
push
add
scas
fisubs
jns
xchg
arpl
lds
aaa
lcall
enter
sub
xchg
mov
movsl
xor
mov
mov
rcr
fnsaves
addb
scas
and
mov
sub
cmp
icebp
ja
inc
and
push
stc
in
mov
lea
stos
es
insl
pop
jns
inc
jne
lea
inc
push
pop
xor
mov
cmpb
rcll
ss
jecxz
lock
daa
mov
mov
sub
clc
ss
stc
movsl
fiadds
not
fbld
push
sub
mov
mov
mov
movsl
inc
cmp
xor
cmp
aad
jmp
outsb
fsqrt
push
movsl
adcb
cmc
and
clc
repnz
lods
xchg
js
je
push
lahf
mov
hlt
xchg
les
mov
adcl
std
arpl
in
xor
data16
pusha
loopne
movsl
push
adc
jae
pop
mov
movsl
lcall
iret
movsl
adc
addl
sub
xchg
scas
movsl
mov
test
leave
push
bound
inc
xlat
imul
mov
jle
sbb
rcll
push
jp
sbbb
leave
iret
stc
lret
dec
mov
mov
inc
sbb
leave
std
push
repnz
aam
loop
clc
sbb
lods
or
adc
and
pop
outsb
imul
cltd
mov
cmp
xchg
jae
pusha
xor
lcall
and
insl
sub
filds
push
mov
movsl
mov
rcrb
movsl
and
ror
out
add
icebp
data16
lock
shll
movsl
loope
add
and
or
cld
popa
and
mov
push
mov
mov
sub
in
inc
mov
call
mov
adc
in
dec
int
ja
push
je
lahf
das
inc
outsb
imul
add
pushf
cmp
call
aad
mov
movsb
or
jg
in
jo
fisttpl
loop
aad
mov
adc
in
stos
pop
call
inc
xchg
push
inc
stos
xor
mov
insb
mov
sub
scas
sarb
lods
xor
push
mov
mov
iret
xor
jno
jp
out
movsl
jg
xchg
out
movsl
jbe
sub
xor
and
sbb
mov
dec
xchg
cmp
push
test
cld
leavew
icebp
enter
bound
popf
adc
mov
mov
mov
xchg
adc
mov
dec
or
or
pusha
scas
cmp
xchg
and
ret
jp
sbb
xor
pop
mov
sti
jecxz
repz
jg
daa
mov
movsb
or
inc
push
push
mov
scas
test
scas
int3
es
jbe
movsl
bound
cmc
mov
pop
sbb
loope
add
pop
loopne
icebp
mov
out
mov
mov
pop
pop
enter
and
iret
in
in
bound
jbe
popa
jb
mov
push
sahf
xor
mov
and
and
mov
btc
scas
jl
cli
jnp
cs
push
aam
daa
cmpsb
mov
mov
xlat
inc
hlt
pop
mov
in
lahf
cld
jnp
nop
fcomip
lcall
roll
ja
addr16
and
and
or
xchg
movsl
push
push
xor
xchg
lret
fs
int
sbb
pop
mov
mov
mov
sahf
fsubrp
stc
leave
in
xchg
dec
out
pop
ja
mov
or
lret
cwtl
fstl
movsl
in
pusha
mov
and
add
jmp
mov
movsl
push
mov
cld
flds
inc
fdiv
cs
lods
pop
xchg
xchg
xchg
cmc
xchg
or
sti
mov
arpl
push
and
lds
shll
imul
add
int
movsl
xor
test
sbb
cmpsb
xlat
movsl
adc
sbb
xor
mov
rcrb
cmc
fdivl
movsl
pop
cmp
imull
xor
movsl
icebp
add
add
and
pop
xor
enter
popl
sub
add
mov
mov
fisttpll
and
je
lods
xchg
cmp
sub
mov
aaa
mov
add
mov
movsl
popa
loop
pop
inc
addr16
add
xor
push
movsl
add
xchg
shrb
or
pushf
cmp
movsl
add
out
fwait
mov
push
movsl
fcomps
mov
movsl
test
mov
push
and
movsl
mov
xchg
ret
push
sbb
jo
sti
pop
movsl
repnz
notl
sbb
mov
pushf
lret
ljmp
clc
les
add
push
jp
sbb
lds
mov
mov
ret
pop
pop
imul
mov
inc
in
sub
add
mov
xchg
mov
movhps
movsl
int
sbb
shrl
jecxz
xchg
int
stc
lods
push
movsl
push
jg
adc
mov
push
xchg
aas
xor
in
xor
lret
add
adc
dec
out
gs
daa
sub
and
ret
sub
scas
lahf
cld
xchg
dec
pusha
scas
in
dec
bound
jbe
into
scas
or
in
movsb
push
jne
in
xchg
enter
sbb
xchg
sub
insl
dec
movsl
push
gs
add
sbb
movsl
test
cmp
mov
mov
cmp
dec
xchg
push
aad
movsl
xor
add
movsl
mov
subl
in
enter
imul
pop
sbb
dec
insl
movsl
out
enter
fdivr
je
and
repnz
adc
xchg
mov
cmp
mov
in
out
mov
lods
mov
cmp
cmp
in
cld
daa
out
and
add
mov
scas
or
or
movsl
fucomip
pop
scas
xor
insb
movsl
dec
sub
mov
cld
in
mov
addb
inc
and
mull
mov
and
push
jl
ret
mov
int3
pop
sar
add
addr16
xchg
mov
insb
mov
fs
fisubrl
push
pop
sbb
loop
xchg
mov
xchg
and
clc
xor
test
js
bound
outsl
stc
enter
fadd
test
mov
test
lret
or
mov
add
cmp
aad
jmp
stc
jle
lea
stos
dec
mov
ss
int3
popf
shrb
ss
xor
lret
cmp
int3
dec
xchg
mov
lock
mov
pop
inc
test
lcall
adc
ret
mov
int3
jne
imul
movsl
sbb
rol
testl
adc
adc
jb
push
and
sbb
out
jecxz
xor
enter
outsb
and
in
cld
scas
mov
pop
mov
ja
test
push
sub
movsl
xor
pusha
fidivrs
jp
movsl
in
dec
pop
mov
lods
mov
shll
sub
cmpsl
jb
push
mov
and
paddw
in
push
loope
movsl
cli
add
in
pop
in
fidivs
outsb
inc
pop
jge
rorb
mov
addr16
xor
arpl
aad
push
xchg
mov
pop
push
hlt
xor
mov
pop
jmp
pop
xchg
and
aaa
jne
cmc
sarl
movsl
xlat
dec
addr16
jb
out
les
and
movsl
loop
cmp
outsl
enter
test
out
ficoms
mov
cld
xchg
lahf
in
das
dec
leavew
shlb
jl
mov
push
loopne
movsl
sub
xchg
scas
in
shlb
ss
je
jbe
jp
cmp
mov
sub
dec
aam
xlat
mov
pop
pop
call
movsl
std
mov
add
jge
mov
dec
fstpl
sbbb
in
movsl
je
add
movsl
jp
sahf
outsl
inc
cmp
in
out
andb
mov
test
addr16
mov
cmpsb
sbb
in
scas
xchg
lods
cmp
loope
sub
andl
pop
sbb
mov
movsl
mulb
or
leave
xlat
mov
push
adcl
push
das
mov
dec
test
pop
xor
inc
in
cmpsb
js
int
movsl
lret
fdiv
pop
push
jle
je
dec
int3
arpl
sub
movsl
addr16
in
shl
mov
adc
add
lods
pushf
or
xchg
loopne
test
test
pushf
mov
rorl
addr16
popf
movsl
xor
ja
xchg
xlat
nop
cmpsb
enter
outsl
icebp
scas
into
push
xchg
stc
sahf
sahf
mov
cs
lods
sbb
mov
adc
out
mov
sub
insb
imul
test
ja
add
movsl
dec
push
fiadds
call
out
in
clc
fdiv
sub
cmc
dec
out
fchs
in
movsl
and
adc
and
cmovge
inc
push
std
mov
and
je
aas
mov
mov
mov
adc
int3
mov
xchg
femms
xor
ret
ffree
mov
lcall
stos
sbb
sbb
in
push
imul
and
cwtl
xchg
movsl
leave
cwtl
ret
call
into
inc
mov
add
add
xchg
sbb
sbb
stos
das
loope
push
pop
call
mov
aas
adc
inc
test
rorb
cld
movsl
testl
hlt
movsl
leave
mov
test
cmp
mov
mov
std
xchg
push
out
movsl
jg
lret
cmp
adc
xor
cmp
dec
mov
xor
fidivl
mov
push
in
jg
xchg
cli
mov
arpl
dec
push
sub
lods
sar
xchg
dec
mov
in
bound
mov
icebp
out
jmp
cmp
in
add
out
fisubs
mov
shrb
cmp
movsl
mov
adc
das
movsl
xchg
sbb
add
jo
sbb
inc
icebp
lret
pop
mov
leave
movsl
shl
std
fdivrl
mov
mov
lcall
arpl
out
adcb
and
movsl
mov
movsl
shl
jne
lock
mulb
repnz
ds
sub
sub
jge
cli
in
cmc
fmuls
xor
jo
or
movsl
shlb
gs
mov
push
test
cmc
mov
mov
jns
test
fadds
movsl
jo
cmp
ljmp
sbb
jne
pushf
or
jg
arpl
es
sahf
sub
gs
movsl
mov
inc
xchg
shll
scas
xor
inc
icebp
or
xlat
out
dec
in
mov
jle
popf
jge
sub
xchg
mov
xchg
movsl
mov
mov
xchg
mov
sbb
sub
hlt
push
icebp
mov
mov
arpl
mov
lcall
fcmovb
xlat
les
data16
pop
mov
cmc
icebp
lahf
pop
lods
xchg
int
ss
loop
cmpb
and
sub
testl
incb
ret
movsb
popf
les
adc
cmp
inc
push
mov
lret
out
fldt
dec
mov
jle
popa
lods
push
hlt
loopne
xlat
push
fucomp
cltd
xor
xor
xchg
adc
clc
cmp
push
loope
add
test
push
cwtl
sub
or
and
mov
insl
sbb
movl
loope
es
sub
xchg
and
flds
nop
test
outsl
mov
jno
mov
xchg
jp
icebp
inc
fisubs
push
adc
clc
test
cmp
filds
jg
pop
imul
rcrl
addr16
movsl
jo
xor
movsl
xchg
mov
adc
mov
xor
sub
push
cltd
enter
leave
mov
clc
sbb
lods
cmp
out
mov
jg
jle
iret
mov
jecxz
mov
movsl
adc
dec
outsb
mov
cmp
cwtl
movsl
mov
std
lods
inc
push
test
jb
andl
xor
addr16
addb
orl
sbb
leave
xor
std
loop
pop
xchg
leave
cmp
jno
mov
lds
xchg
mov
dec
add
outsb
roll
lods
insl
xlat
lock
mov
bnd
lret
iret
js
stos
movsl
lock
sti
movsl
mov
sub
lods
leave
stc
mov
loop
sbb
hlt
test
xchg
mov
fcompl
sbb
lods
xor
fstps
lods
xchg
cwtl
shrb
mov
jmp
push
mov
in
cmc
inc
cmp
fsubs
pop
mov
dec
mov
int
mov
shll
mov
gs
in
or
movsl
sbb
fildl
and
call
mov
into
or
clc
int
inc
daa
in
out
shll
fwait
dec
inc
movsl
ficompl
sub
out
push
pop
mov
xchg
stc
xchg
das
movsl
int
and
cwtl
popf
pop
test
int
xchg
push
dec
movsl
lods
adc
leave
cmp
andl
xchg
pop
sbb
cmpsl
movsl
xor
popf
inc
rcr
lods
cmc
nop
xchg
mov
add
adc
in
jle
arpl
push
popf
lcall
ret
mov
and
push
sub
mov
jl
dec
mov
mov
mov
and
rcrl
movsl
nop
lahf
psubw
scas
iret
mov
adc
lods
or
xchg
movsl
sbb
and
mov
addb
and
stos
movsl
mov
lods
fisubrl
add
mov
movsl
cmpsl
mov
sbbl
movsl
orl
icebp
in
adc
jmp
and
push
xor
in
fbld
cltd
in
mov
movsl
test
stos
cmc
dec
dec
xchg
mov
loop
int3
sbb
fcomps
jmp
sahf
cwtl
ret
pop
movsl
lock
shr
cli
icebp
movsl
aaa
jmp
nop
movsl
and
and
sbb
popf
pop
jle
lcall
mov
xor
push
sbb
mov
and
mov
xor
mov
lcall
mov
faddp
jns
xchg
dec
movsl
pop
push
ret
scas
sahf
std
les
test
mov
mov
pop
std
aas
cmp
and
push
dec
and
xor
mov
adc
loope
mov
push
sub
sub
int
in
pop
mov
and
xor
or
mov
xchg
lods
mov
sbb
shll
mov
movsb
sub
rorl
in
pop
inc
std
inc
cmpxchg
pop
xchg
xchg
fimuls
and
adc
stc
ljmp
add
mov
movsl
insl
add
ficoml
imul
adc
xorb
popa
enter
daa
movsl
adc
adc
or
mov
jnp
pop
push
fwait
out
pushl
movsl
dec
dec
push
test
lods
adc
stc
andb
pop
movsl
jle
pop
aaa
iret
jl
sbb
loop
mov
push
add
mov
or
sahf
inc
fsubrl
mov
subb
cld
mov
lret
mov
mov
stc
add
and
in
movsl
repnz
ficoms
pop
cwtl
int3
repz
popf
mov
mov
mov
outsl
loopne
cmc
pusha
jecxz
movsl
pop
arpl
jbe
test
stc
mov
daa
loop
lret
push
and
add
jmp
cs
leave
in
test
movsl
xor
dec
icebp
pop
out
push
and
cmp
clc
movsl
xchg
xchg
mov
and
mov
cmp
sub
xchg
in
aaa
adc
cmp
sbb
mov
pop
sub
adc
movsl
inc
xor
xorl
jg
add
mov
mov
jae
dec
js
cmp
dec
inc
mov
lret
enter
movsl
add
pop
cmpsl
lds
and
xchg
mov
popa
aad
jmp
sbb
xchg
xorb
arpl
icebp
loopne
aad
push
je
push
movsl
arpl
sub
leave
inc
movsl
mov
mov
jno
addr16
rolb
pop
enter
jae
mov
pop
mov
out
mov
stos
push
adc
push
mov
fistpll
mov
push
cs
shrb
mov
aam
mov
mov
push
test
push
pop
lcall
sti
cli
frstor
dec
adc
outsl
in
mov
ficompl
pop
mov
pop
ret
lds
or
add
movsl
inc
sbb
movsl
mov
fcomps
pushf
lret
icebp
ss
mov
pusha
pop
fbstp
mov
mov
insb
out
xchg
movsl
mov
cltd
jb
mov
mov
testb
mov
in
shrb
jecxz
cmp
shlb
jmp
scas
sbb
mov
pop
imul
and
leave
jbe
and
sbb
xchg
pop
or
ljmp
sub
loop
outsl
pop
outsb
or
into
or
push
testb
inc
loop
jmp
aad
cmc
cmpl
mov
cmp
sub
mov
add
xchg
sbb
push
mov
jp
das
push
add
mov
pop
inc
enter
mov
aaa
lret
fisubl
movsl
inc
or
clc
movsl
push
fcoms
jecxz
or
or
push
sub
sub
xchg
or
in
cmp
pusha
insl
sbbl
enter
add
aam
add
sti
fildl
lret
push
mov
clc
daa
inc
xor
loopne
in
addr16
mov
cmp
push
cltd
dec
xorb
xor
xchg
pusha
movsl
daa
rolb
lahf
movsl
popa
rclb
sahf
mov
and
push
mov
jecxz,pt
cltd
dec
mov
ljmp
movsl
jp
lret
rolb
aas
ljmp
ret
nop
fistpl
into
rcl
adc
push
in
xor
dec
movsl
and
mov
pop
hlt
fcmovne
xchg
nop
fcomps
push
pop
inc
aad
jmp
movsl
push
mov
js
add
movsl
lea
test
movsl
sub
inc
testb
mov
cld
lea
mov
movsl
xor
mov
cmc
movsl
aam
aas
mov
test
fidivrs
cwtl
push
jg,pt
imul
dec
mov
xchg
lds
pop
jp
or
push
lret
xlat
mov
mov
daa
ja
inc
ret
mov
inc
popa
inc
lds
push
dec
shll
cs
cmpsb
push
sbb
test
ret
lahf
sub
push
xlat
icebp
and
test
push
daa
cmpb
ret
push
fucomp
mov
sarl
xchg
rcr
dec
adc
mov
sub
mov
and
pop
and
sub
pop
dec
adc
mov
icebp
notl
loope
and
fdivr
lods
push
cwtl
pop
push
mov
mov
pop
lods
repz
std
aas
lcall
lea
not
push
sbb
in
add
xor
dec
imul
adc
add
inc
and
xor
addl
mov
loope
add
cmp
hlt
cwtl
mov
js
inc
sbb
mov
lock
leave
mov
pop
jmp
xor
into
sahf
jecxz
fld1
add
mov
pop
es
in
push
mov
lret
ja
mov
cmc
fsts
imul
cmpsl
pop
jge
loopne
add
pop
scas
xchg
inc
es
movsb
ja
mov
sub
jns
cmp
jmp
test
lea
sub
stos
inc
fs
and
int
mov
outsb
mov
aaa
inc
pmullw
imul
jno
or
aas
popl
mov
sahf
cmpsl
cmp
insl
in
lock
adc
nop
sub
sahf
ret
stos
mov
mov
pop
ja
mov
xor
insb
inc
sti
sbb
add
sbb
xor
mov
and
stos
inc
inc
pusha
stos
lcall
push
loopne
and
push
stc
aad
cmc
lods
add
mov
xchg
jg
mov
test
sbb
in
push
icebp
out
scas
outsb
xor
test
leave
movsl
xor
into
out
add
lcall
mov
fldenv
mov
pop
dec
call
cmc
mov
scas
pop
mov
sub
cmc
sbb
mov
jae
xor
lahf
pop
test
xchg
mov
icebp
mov
dec
jecxz
sti
sbbb
mov
xchg
imulb
jno
scas
loop
shlb
adc
inc
popf
push
dec
jb
cmpsb
sub
sti
in
rorb
inc
xchg
incb
dec
nop
cmp
jbe
outsb
cmc
icebp
push
inc
gs
in
mov
ljmp
adc
fcomip
sbb
icebp
push
fisubrs
mov
jecxz
push
pusha
cmc
cmp
test
and
icebp
jle
mov
cmp
xor
or
mov
mov
sub
out
ret
mov
and
mov
cli
sti
pop
int3
sahf
xchg
bound
in
lods
cmc
xlat
pop
movsb
mov
adc
movsb
sub
incl
or
jns
lahf
mov
subl
fdivrs
outsl
xchg
xchg
icebp
dec
and
mov
push
jge
xchg
lret
and
push
lods
xlat
jmp
xor
fimull
popa
insb
mov
jno
push
dec
sbb
cmp
cmpsl
movsbl
pop
push
loope
movsb
xlat
pushf
icebp
movsl
cmp
xor
cmc
sub
popf
inc
aam
and
mov
jge
hlt
mov
sub
mov
std
lock
mov
or
sti
roll
pop
xor
jmp
jge
ja
mov
cwtl
test
in
sub
ljmp
push
sbb
je
loopne
int3
leave
loope
movsl
in
ret
adc
mov
push
test
sub
movsl
outsl
inc
orb
fists
pop
fsubrp
jae
movsl
dec
je
cmp
scas
lods
aas
add
bound
sahf
xchg
aaa
inc
popf
aad
mov
dec
mov
cmc
xor
adc
xchg
push
inc
btc
pop
xchg
xor
mov
mov
repz
mov
shl
adc
jle
lds
add
cmp
jnp
shll
mov
leave
jno
sbb
out
arpl
movsl
mov
aam
mov
adc
xchg
sbb
mov
xchg
ss
mov
fwait
cmp
cmp
xlat
mov
test
push
push
and
sub
pop
lds
pop
pop
lahf
jl
in
or
outsb
movsl
add
jg
push
cmp
cwtl
movsl
xorb
movsl
cmp
iret
out
subl
arpl
aad
and
push
ja
jge
adc
cmpsl
jno
xchg
sub
or
movsl
mov
int3
sub
mov
adc
imul
mov
cmpsl
lret
in
out
pop
push
jg
das
je
cmpb
push
movsl
or
sub
pop
scas
mov
call
mov
dec
movsl
dec
cs
iret
lret
jle
out
mov
rorb
dec
xchg
mov
dec
insb
cmove
clc
sub
pop
dec
xchg
movsl
or
lods
les
adc
ljmp
sbb
movsl
sbb
fdivrl
adc
in
mov
enter
movsl
dec
out
leave
in
sbb
xchg
and
inc
lds
xchg
lods
mov
sub
xchg
mov
lret
movsb
jns
je
mov
icebp
xlat
push
ror
movsl
adc
sbbb
adc
add
and
scas
push
sub
int3
arpl
lock
lods
maskmovq
notl
jne
es
pop
movsb
cmc
movsl
cmp
fdivr
je
mov
sahf
movsl
xchg
pop
push
mov
add
add
out
mov
outsl
ret
sarb
pop
mov
mov
cmp
xchg
mov
add
xchg
push
pop
xchg
add
rorb
pop
xchg
inc
push
mov
cmp
cmp
mov
cmc
cmpl
in
mov
mov
out
and
add
in
sbb
out
dec
movsl
or
jne
xor
dec
movsl
fadds
push
cmp
xchg
inc
xor
movsl
dec
ja
adc
scas
push
pop
movsl
fdivr
hlt
js
popa
mov
divl
xor
and
inc
or
mov
mov
and
movsl
popf
adc
imull
out
fwait
inc
stc
in
inc
into
pop
in
add
mov
push
add
shll
iret
sub
movsl
push
popa
adc
add
cmp
andb
push
ja
sub
andl
mov
xchg
xchg
rorl
jl
inc
test
mov
shl
jp
movsl
push
dec
hlt
mov
push
sbb
mov
mov
js
movsl
loop
sahf
imull
xchg
aas
and
icebp
xchg
adc
and
jne
movsl
dec
fwait
cmp
and
test
daa
cmp
mov
movsl
inc
push
adc
divb
xor
rcrb
dec
movsl
push
add
sbb
mov
fwait
mov
movsl
mov
insb
test
or
out
addl
mov
inc
inc
mov
imul
sub
adc
lahf
cmp
dec
jl
xchg
sti
pop
dec
xorl
pop
movsl
mov
mov
jg
dec
or
movsl
fstpt
loope
test
cltd
mov
cmp
pop
movsl
nop
xor
push
movsl
outsl
sub
sahf
sbb
movsl
xchg
test
cmpsb
push
xor
or
mov
lcall
pop
movsl
scas
test
push
movsl
push
int
lods
movsl
xor
shlb
popf
in
xor
lods
xchg
xor
xchg
push
popf
mov
adcl
movsl
shrd
mov
lea
xor
mov
cmp
movsl
jle
pop
jge
sbb
pop
les
mov
push
jno
dec
lods
imul
fistpll
pop
movsb
repz
aad
xchg
add
rcll
ficoms
mov
add
movsl
lock
sbb
cwtl
movsl
stos
scas
mov
and
add
int3
imul
mov
pop
int
loopne
xor
push
insb
imul
pushf
dec
dec
jmp
pop
movsl
sti
rcrb
mov
lods
push
mov
add
lds
dec
push
movsl
mov
add
cmp
in
push
jne
push
es
test
in
sti
add
ljmp
xchg
mov
jno
cs
push
inc
loopne
sahf
shr
mov
enter
dec
cmp
mov
inc
mov
movsl
xchg
mov
cmp
push
sarl
lods
fwait
stos
sbb
or
sahf
movsl
mov
mov
shr
xchg
xchg
inc
xor
ret
cmp
popf
or
jb
xchg
movsl
xchg
or
pushf
loope
int3
mov
divb
jo
mov
or
test
mov
cmc
sar
mov
stos
mov
add
mov
stc
outsb
movsl
pop
lock
loop
ret
movsl
aad
add
out
nop
inc
lcall
dec
push
cwtl
sub
mov
xor
push
popa
movsl
insb
aaa
or
mov
cmp
cmc
sub
cmp
add
stos
outsl
dec
mov
ljmp
cmp
aas
push
leave
and
imul
mov
push
iret
pop
and
push
cli
mov
mov
in
imul
mov
cmp
cmc
loopne
mov
sti
sub
cmp
jp
lock
push
stos
jo
dec
and
gs
pop
inc
pop
int3
in
flds
mov
jo
sbb
pop
movsl
xchg
imul
cmp
cmp
movsl
xor
jns
dec
fstl
jnp
mov
inc
adc
in
lret
movsl
hlt
jle
add
sbb
popa
lods
or
xor
ljmp
mov
or
movsl
call
mov
jg
push
int3
mov
movsl
pop
fisttpll
outsb
lods
inc
mov
daa
add
loope
cmp
or
push
mov
iret
imul
pop
data16
adc
mov
lods
xchg
mov
insl
mov
movsl
push
mov
adc
movsl
jle
test
imul
testb
lods
add
jmp
inc
adc
cmpl
jp
add
inc
dec
xchg
movsl
daa
lea
cmp
lock
movsl
cli
cmp
add
ss
movsl
sub
push
sti
mov
xor
lods
jle
enter
pop
movsl
mov
out
adc
in
adc
out
pop
int
movsl
pop
xchg
mov
xchg
test
int
push
dec
lods
and
push
add
fidivl
add
xor
addr16
and
je
inc
jnp
jge
movsl
out
xor
or
mov
add
ficomps
into
jle
int3
lds
pushf
xor
sti
ds
fwait
jmp
movsl
xchg
ret
cwtl
mov
cltd
movsl
mov
add
jnp
mov
in
leave
aad
popf
and
fistpl
repz
fwait
movsl
add
pushf
sub
fmulp
add
pusha
jp
leave
add
icebp
movsl
int3
repz
out
xchg
daa
stos
adc
lcall
rcrb
inc
loope
cld
xor
rol
insb
pop
pop
faddl
sbb
cmc
xlat
mov
movsl
xor
push
shr
and
imulb
mov
pop
jnp
xor
movsl
lods
pop
pop
rclb
xlat
in
je
cmpsl
mov
cmp
andl
jg
shlb
dec
fs
mulb
cmp
adc
stos
mov
data16
cmp
lods
jnp
bound
push
xchg
decb
mov
mov
pop
into
xchg
mov
jno
fstl
push
movsl
or
cmp
adc
pop
pusha
jne
popa
mov
rorl
jl
std
xchg
sarb
popa
aas
xchg
das
xchg
lods
hlt
lret
test
and
jno
push
sub
fs
loop
pop
cs
aad
inc
in
mov
fsubrs
push
ret
out
adc
and
xchg
add
int
jmp
std
inc
jne
pop
outsw
inc
movsl
mov
cwtl
out
mov
sbb
inc
mov
mov
lods
ljmp
jbe
push
xor
shll
int3
ficompl
pop
into
adc
cwtl
fstpl
xchg
mov
gs
js
movsl
test
or
pop
popa
mov
fucom
dec
je
and
icebp
sbb
adc
xchg
gs
movsl
cld
push
push
sbb
inc
inc
outsb
pop
jnp
bound
add
lods
mov
sbb
mov
inc
inc
adc
dec
adc
loopne
add
inc
jb
cltd
add
out
jg
movsl
inc
jno
mov
pop
pop
icebp
jnp
jmp
nop
fcomps
cld
int
popf
push
rol
mov
ja
dec
jnp
stc
loope
pop
sar
and
pushf
sub
movsl
xrelease
adc
xchg
fs
pop
sbb
jno
test
cmc
ss
testl
xor
movsl
push
sub
movsl
jbe
pop
sub
sti
aas
sub
cmpsb
insb
jo
add
pop
pop
gs
add
cmc
xchg
or
lock
movsl
imul
pusha
pop
jl
cmp
les
jge
int
cmp
sbb
fsubl
mov
mov
scas
scas
lods
movsl
xchg
xor
popl
in
pop
mov
movsl
push
gs
int3
movsl
add
out
loopne
jb
pop
movsl
lea
xor
mov
or
pushf
test
pop
mov
inc
jo
mov
mov
mov
pop
movsl
and
adc
inc
mov
sbb
rorl
mov
movsl
fucomip
sub
scas
movsl
adc
out
jmp
int3
insb
mov
xchg
push
push
inc
jp
mov
stos
ljmp
fcmovnu
enter
aas
pushf
movb
dec
rorl
movsl
aam
jge
push
scas
scas
imul
movsb
movsl
sub
xor
pop
and
mov
movsl
bound
in
in
lret
mov
xor
xchg
push
mov
dec
inc
lock
or
lahf
mov
mov
js
adc
test
in
add
movsl
stc
mov
inc
popa
sbb
mov
jge
movsl
xchg
adc
adc
jecxz
cmpsb
mov
stos
add
adc
add
mov
movsl
pushf
xchg
scas
mov
movsl
insb
jmp
inc
dec
fs
and
mov
movsl
leave
lods
cmp
and
sub
and
aam
ss
mov
imul
add
imul
xor
test
or
pusha
inc
pop
les
movsl
mov
sub
movsl
sub
cld
add
mov
js
push
lds
lea
hlt
mull
fwait
inc
xchg
lods
jno
pop
inc
mov
in
mov
movsl
sti
push
imul
pop
andb
mov
mov
arpl
cmc
jmp
movsl
repnz
push
mov
sbb
cmpsl
pusha
movsl
xchg
nop
imul
sbb
daa
movsl
add
mul
ror
ljmp
lods
sub
dec
call
cltd
mov
xor
mov
adc
in
add
inc
movsl
cmp
xor
movsb
sbb
sbbb
sahf
xor
into
mov
in
arpl
mov
xchg
mov
rclb
movsl
push
jo
pop
mov
popa
nop
les
out
mov
push
sbb
iret
pop
add
stc
out
lcall
lcall
int3
into
movsl
hlt
shr
in
dec
push
addr16
push
dec
jo
in
in
rcr
adc
jns
mov
rorl
and
sub
jno
stc
in
andb
mov
movsl
and
or
movsl
mov
js
cmp
adc
test
leave
movsl
sbb
inc
in
cmp
xchg
add
or
movsl
nop
es
loop
sahf
orb
clc
jno
push
inc
fsubs
daa
or
mov
cmp
js
movsl
loopne
dec
and
cmpsl
cmovp
pop
jbe
movsl
mov
push
pop
mov
mov
movsl
jae
xor
jo
in
sti
call
fdivp
lret
out
int
jmp
mov
lea
insl
fmuls
ficompl
mov
out
in
pushf
jge
addr16
loopne
jmp
movsl
cmpsl
jle
push
xor
xor
lret
mov
out
add
ja
push
hlt
mov
add
call
pop
ret
adc
movsl
mov
and
or
inc
lea
mov
or
ds
lahf
adc
jno
movsl
aad
stc
push
scas
mov
adc
push
xor
int
sahf
cmp
mov
movsl
fsts
ret
popa
movsl
jp
scas
cmp
idivl
stc
into
jmp
add
test
movsb
adc
or
pop
mov
jbe
fisubl
dec
je
or
xor
mov
mov
lds
out
sbb
dec
jnp
ret
outsb
in
shlb
movsl
mov
push
imul
bound
xchg
in
lret
pop
movsl
stos
xor
or
movsl
ror
out
hlt
jb
jmp
cmpsl
aad
and
fdivrs
and
leave
cmp
cmp
sahf
pushf
cmp
mov
ljmp
pop
pop
stos
xchg
push
andl
movsl
shl
shlb
cmpsl
xchg
lds
add
pop
fsubl
sar
stos
xor
iret
push
aam
xor
int
shrb
movsl
dec
adc
jno
cmp
sbb
movsl
push
cmpsb
in
sub
pop
xorb
inc
cmp
mov
lds
pop
mov
movsl
mov
call
movsl
arpl
xor
movsb
mov
movsl
sbb
xchg
or
mov
in
xlat
pop
out
sbb
popf
test
jmp
inc
xchg
cmp
push
lcall
mov
mov
push
movsl
dec
in
fsubs
movsb
pushf
movsl
fstps
xchg
movsl
lods
pop
xor
jge
xchg
sub
stc
inc
sbb
loope
pop
bound
and
mov
mov
das
test
mov
or
sbb
aaa
ljmp
cmpsl
and
data16
andb
fsubs
xlat
mov
mov
stc
sbb
not
movsl
push
pop
in
cwtl
mov
jl
daa
mov
cmp
insb
pop
sub
pop
lcall
pop
repnz
es
pop
popa
movsb
iret
es
xchg
mov
sub
push
repz
mov
sbb
sbb
jbe
fstps
pop
add
jle
fldl
shrb
xchg
sti
sti
lcall
out
int
jns
push
andb
popa
test
jp
adc
icebp
mov
mov
bound
in
aas
mov
mov
mov
mov
cmpsb
push
adc
jp
xchg
mov
mov
xchg
pop
mov
mov
filds
dec
or
sbb
scas
and
push
sbb
add
sbb
jg
es
gs
sub
and
loop
ja
dec
stos
sub
sahf
pop
inc
mov
push
mov
aad
daa
mov
lcall
and
sarl
pop
js
inc
adc
mov
sub
cmpsb
ret
stos
add
cmp
insl
mov
movsl
lods
fwait
call
jne
js
and
sub
push
outsb
faddl
test
xlat
insl
jmp
sbb
int
pop
lret
pop
scas
inc
mov
mov
leave
push
sarb
push
mov
outsb
inc
xchg
push
jmp
mov
dec
adc
out
cmc
jns
std
icebp
hlt
mov
pop
cli
int3
sahf
sbb
cmp
and
iret
add
mov
add
cmp
sub
push
and
cmp
out
lahf
jnp
push
popf
loop
xor
cmpsb
sbb
cs
test
daa
pushf
cmp
dec
clc
pushf
mov
mov
fwait
push
xchg
xchg
or
scas
inc
dec
std
push
inc
mov
pop
mov
sub
int
sub
stos
ret
andb
xchg
fbstp
rcrb
out
lock
push
push
inc
in
fmull
mov
xchg
lret
mov
xor
mov
call
mov
movsb
andl
inc
xchg
andb
adc
sbb
movsl
lcall
leave
movsl
pop
jmp
or
repz
or
les
cmc
pop
or
aaa
xchg
movsb
adc
adc
add
loopne
pushl
mov
jae
pop
in
mov
mov
xorb
sbb
sahf
mov
push
cltd
test
test
cmp
inc
imul
jge
xchg
cs
movsl
pop
aam
and
call
pop
bound
in
mov
jbe
adc
push
in
add
inc
lcall
stc
inc
ja
dec
xor
in
sahf
adcb
inc
test
jmp
call
ja
xor
dec
imul
movsl
loope
inc
cwtl
xchg
mov
movsl
lahf
mov
adc
les
movsb
mov
cmp
scas
mov
movsl
jo
dec
imul
sahf
xchg
movsl
inc
xchg
mov
data16
mov
in
and
xchg
cmc
cs
and
add
lods
mov
pushf
das
test
xchg
mov
mov
into
jns
loopne
lcall
fcompl
dec
movsl
or
movsl
inc
lock
xchg
and
setae
push
lods
lock
jne
mov
subl
test
mov
mov
mov
or
inc
test
sbb
movsl
adc
cmpsb
add
cmp
mov
in
cmp
mov
push
mov
pop
movsl
mov
outsl
sbbl
jae
arpl
add
pop
stos
call
mov
fimuls
out
dec
mov
xchg
aas
cmp
movsl
subb
shll
mov
clc
lods
mov
jno
xchg
movsl
xchg
loope
cli
loop
or
in
lods
mov
xchg
sbb
jl
sub
dec
fbld
push
int
cmp
test
fisttpll
js
and
in
shr
stc
fidivs
gs
xlat
or
mov
movsl
lret
int
push
arpl
hlt
mov
jno
xor
jp
scas
inc
push
mov
mov
mov
cmp
mov
fwait
rcrl
mov
negb
cwtl
sbb
mov
les
jns
push
jo
loopne
arpl
add
mov
sub
stc
movsl
int3
jnp
loopne
add
fcomps
push
movsl
pop
out
dec
cli
jl
inc
insb
scas
int3
movsl
dec
gs
jle
ds
mov
dec
lods
imul
lds
or
or
lcall
aam
or
fbld
inc
lcall
fsubl
fs
pop
or
lret
and
add
add
push
loopne
lret
fwait
in
push
mov
adc
rep
leave
push
outsl
cmp
movsl
mov
mov
mov
add
xchg
fucomp
movsl
ljmp
mov
ja
xchg
aad
outsl
xchg
xor
cwtl
cmp
adcl
inc
call
shrb
sbb
movsl
sbb
mov
add
fdivp
mov
movsl
dec
jl
push
dec
data16
lahf
shrb
movsl
repz
pop
mov
movsl
sbb
ja
sbb
mov
adc
mov
adc
dec
mov
fdivl
movsl
gs
out
jae
add
movsl
jmp
bound
add
imul
or
loopne
pop
fcomip
push
jle
movsl
js
lods
mov
rcl
jg
movsl
mov
fisttpl
aas
movsl
sahf
cwtl
test
scas
and
adc
mov
push
lock
pusha
push
xor
out
movsb
xchg
mov
movsl
notb
jmp
in
pop
mov
jecxz
out
call
cwtl
or
xor
aaa
in
add
jp
mov
or
ja
mov
icebp
cmp
push
xchg
cmpsb
sub
fsubr
and
or
jo
repz
mov
add
fcoms
lcall
and
test
out
loopne
subb
cmc
ljmp
jb
push
incb
popa
xorb
add
mov
fsts
pushw
jo
mov
xor
lds
movsl
inc
lds
jle
leave
xchg
xor
imul
or
loop
in
or
outsl
repnz
cmpsl
adc
rol
sbb
xor
pop
jae
sahf
je
ss
rol
jbe
sti
stos
pusha
dec
jno
adc
push
inc
ljmp
push
dec
fcoms
decl
movsl
push
jns
add
hlt
movsl
fwait
cmpsb
insb
cmp
pop
push
xor
and
testb
mov
push
mov
dec
pop
cmp
or
sub
jge
sub
movsl
and
scas
or
movsl
push
pop
push
sti
stc
loop
pusha
sub
hlt
movsl
dec
int
jp
dec
sub
movsl
jae
jle
es
and
push
adc
mov
add
cmpsb
dec
movsl
out
jle
cmc
jmp
iret
push
and
dec
pop
int3
test
roll
pusha
dec
cmpb
mov
cmpsb
cmp
push
mov
pop
movsl
jae
ljmp
sub
lcall
mov
lods
mov
dec
mov
add
movsl
pop
pop
cmc
mov
es
movsl
in
and
cs
ds
stos
pop
jle
in
and
lret
xchg
push
push
aam
test
mov
movsl
jae
sbb
and
ja
pop
jecxz
in
mov
add
jl
int
and
xor
hlt
pinsrw
sub
popa
mov
dec
mov
imul
daa
mov
sub
movsl
inc
sarl
sub
push
mov
jno
std
imul
pop
insb
mov
sub
testl
sub
xchg
out
pusha
dec
push
aad
cmp
movsl
sbb
fs
pop
fadd
nop
stos
cld
movsl
jle
and
add
cmpb
mov
jge
dec
movsl
gs
das
mov
scas
pop
ss
xlat
add
rcr
add
clc
orb
int3
test
adc
pop
movsl
mov
mov
scas
jno
loopne
iret
movsl
pop
or
mov
movsl
sub
cmpsl
pop
rcll
fisttps
xchg
fdivrp
add
adc
aam
pop
cwtl
and
xor
push
pushf
mov
pop
xchg
das
inc
xchg
ds
mov
adc
movsb
dec
dec
out
pushf
mov
mov
ljmp
push
add
pop
cmc
and
dec
dec
bound
mov
loopne
shll
ret
sahf
mov
mov
and
and
mov
mov
sbb
push
popf
nop
mov
pop
pop
shl
fs
lahf
movsl
xchg
cmp
xchg
sub
xor
sbb
push
xor
cmpsb
leave
mov
mov
imul
pop
test
cmp
cmpsl
icebp
jbe
pop
mov
lret
and
add
add
fidivrs
mov
sbb
bound
sahf
outsb
dec
fldl
push
movsl
pop
js
inc
xchg
icebp
xchg
dec
dec
fimuls
nop
pop
fisubrs
pop
mov
repnz
add
mov
es
divb
and
insl
mov
add
movsb
xor
add
test
stos
ljmp
repz
lcall
popf
cmpsl
sub
std
imul
fs
pop
sarb
cmp
sub
or
xchg
iret
mull
into
out
int3
sbb
mov
cmp
push
in
sbb
or
push
bound
imul
pop
fdivr
mov
jb
mov
loopne
push
enter
or
movsl
xor
jnp
mov
push
lods
movsl
loopne
cmp
jle
jge
adc
sbb
jg
xchg
enter
sub
cmpsl
mov
js
lcall
outsb
or
movsb
push
mov
mov
mov
fmull
aas
inc
leave
xchg
cmp
into
jb
fwait
inc
pop
popa
insl
out
je
mov
incb
sahf
pop
aas
sub
ret
popf
lret
icebp
sub
and
cmp
cmpsb
push
push
mov
xchg
je
inc
mov
hlt
cmc
ja
in
xchg
pop
pop
jge
test
cmpsb
insl
lock
cmp
dec
jae
xor
push
test
orb
lea
dec
mov
test
sbb
movsl
xor
push
inc
movl
aas
mov
movsl
sub
mov
adc
mov
jle
int
imull
and
adc
sbb
jmp
mov
sahf
dec
jo
clc
dec
push
inc
cmpsb
lds
rorb
xorb
repnz
lahf
add
pop
sbb
sbb
repnz
xor
inc
rcl
out
xchg
mov
movsl
sbb
lret
movsl
inc
or
popf
jp
mov
jno
shl
xbegin
adc
or
mov
pop
movsl
jg
sub
xchg
add
jb
xchg
and
mov
addr16
lds
mov
in
mov
movsl
negl
movb
sub
xchg
mov
mov
insb
and
inc
mov
push
lods
test
jb
and
imul
movsl
mov
adc
movsl
dec
push
pop
mov
imul
push
sahf
arpl
inc
lds
cmp
movsl
decl
jmp
idivl
or
xor
mull
jno
out
or
shr
movsl
xchg
sub
in
shl
mov
pop
xorl
adc
add
leave
aas
dec
adc
pop
repnz
in
and
mov
int
cli
ficomps
jmp
js
outsb
jb
push
jle
pop
cmp
out
push
out
mov
nop
test
fnstcw
lahf
pop
xor
popf
sahf
hlt
shll
cmc
or
dec
and
sub
arpl
push
xchg
xor
push
lret
out
into
enter
pop
fs
pop
mov
insl
mov
movsb
out
add
andl
movsl
clc
aad
arpl
ja
sahf
dec
mov
out
pusha
dec
movsl
idivb
in
ljmp
fiaddl
test
nop
lods
cmp
rclb
mov
fstpt
and
push
insl
dec
hlt
add
movsl
inc
rcrl
adc
stc
je
or
pushf
xor
fnstsw
cltd
in
push
stc
jmp
fcompl
pop
pop
xor
jnp
shld
jno
cmp
xchg
popf
arpl
lods
cmc
jp
movsl
xchg
and
push
inc
xchg
pop
and
push
das
lcall
pushf
sahf
test
sahf
jge
pop
dec
push
out
repnz
ss
or
push
mov
push
movsl
pop
cwtl
mov
and
sub
fisttpll
andb
mov
pop
sub
pop
add
or
ds
movsl
adc
xchg
addl
arpl
mov
std
add
enter
fsubs
pushf
stos
mov
movsl
add
pmaxsw
sbb
pop
mov
movsl
aaa
adc
enter
pop
xchg
out
push
push
xchg
cs
movsl
sbb
shlb
push
jae
mov
xchg
xor
push
nop
mov
pop
adc
xchg
insb
inc
dec
ja
movsl
cltd
std
push
je
loope
add
jno
fidivl
sub
mov
or
test
cmp
comiss
or
mov
rcrl
enter
push
andl
ret
lds
iret
and
movsl
pop
push
cmpsb
test
repnz
cmp
add
push
popf
add
loopne
cpuid
scas
loope
mov
in
lea
and
dec
les
push
movsl
movsb
jge
or
or
das
pop
nop
hlt
movsl
sub
mov
mov
lahf
push
int
xchg
movsl
cmpl
push
movsl
mov
ljmp
je
and
out
movsl
mov
std
aaa
push
popf
adc
int
rcrb
cmc
jmp
pusha
mov
inc
mov
xor
ror
inc
addl
daa
movsb
call
fstpl
push
pushl
xchg
movsl
lret
call
mov
xor
ds
enter
pop
movsl
mov
and
ds
movsl
arpl
testb
mov
push
outsl
pop
push
jo
repz
adc
adc
cmp
je
pop
adc
fimull
popf
mov
inc
jmp
ret
cmp
xchg
add
movsl
fisubs
leave
iret
in
xchg
shl
movsl
out
push
in
addr16
jmp
mov
inc
stos
cli
cmpsl
push
mov
add
jo
jle
movsl
lahf
sbb
mov
mov
xchg
aad
in
movl
fnsave
push
movsl
hlt
mov
dec
movsl
scas
cmp
addr16
mov
inc
movsl
mov
cmp
sbb
arpl
sub
mov
jne
into
adc
clc
and
test
add
orb
mov
dec
repnz
fimuls
or
xchg
popw
out
pop
call
xchg
inc
mov
repnz
push
ljmp
pop
sbb
aas
push
mov
inc
mov
movsl
xor
xor
movsl
lcall
ret
cwtl
test
sbb
add
iret
loop
mov
jo
in
aam
das
push
xchg
stc
popf
and
xchg
fbstp
adc
mov
xchg
ljmp
movsl
ret
xlat
dec
jle
repnz
pop
push
dec
mov
out
dec
icebp
ss
cmp
movsl
pop
lret
je
scas
and
push
movsl
cmp
neg
push
dec
jg
xchg
in
jge
add
into
mov
cmp
fstps
xor
add
xchg
in
pushf
adc
add
push
insl
movsl
push
adc
movsl
sub
bound
lods
cwtl
cmpsb
lds
mov
push
stc
inc
jg
mov
popa
and
mov
push
lea
cmp
outsl
xchg
pusha
movsl
orl
adc
movsl
cmpsb
data16
cmp
pop
jp
test
inc
or
sti
andb
pop
pusha
sahf
movsl
dec
sub
ljmp
xchg
inc
imul
cmc
mov
jl
repz
shlb
ja
pop
pop
xchg
scas
daa
ret
xor
xor
mov
sbb
out
inc
and
outsb
or
xchg
pop
mov
dec
mov
mulb
pop
jmp
pop
rorl
outsb
arpl
insl
push
sbb
sub
cmpsl
jbe
cmp
jmp
pop
inc
andl
cli
mov
scas
movsl
insb
sbb
sbb
stos
add
xor
mov
into
sbb
test
add
lret
les
aaa
jb
push
jno
push
movsl
scas
aas
outsl
jbe
dec
outsb
movsl
push
cld
push
cmpxchg
icebp
xlat
xchg
lock
mov
xor
sub
cmpsb
out
or
adc
and
or
mov
xchg
incl
testb
mov
mov
or
or
cmc
push
mov
leave
mov
cmp
push
movsl
xchg
nop
push
dec
enter
mov
movsb
out
in
adc
movsl
inc
insl
push
movsl
je
imul
repz
sub
mov
dec
movsl
out
xor
movsl
xchg
xlat
and
xchg
addr16
sbb
push
jb
movsb
inc
orl
enter
jg
sub
movsl
cmp
jne
movsl
pop
or
push
lock
or
xlat
subl
or
mov
or
mov
movsl
xor
pusha
mov
adc
in
or
outsl
movsl
fdiv
push
push
jns,pn
bound
outsl
jle
push
fwait
pop
fdivp
leave
mov
mov
mov
pop
adc
inc
adc
lock
jge
cmc
cmpsl
xchg
pop
dec
pushf
sbb
mov
mov
sub
inc
ss
loope
cmpsl
lods
sub
es
push
and
test
adcl
icebp
mov
dec
mov
pop
dec
jp
jmp
lods
movsb
test
inc
int
sub
pop
push
dec
and
mov
cmp
negb
sub
es
mov
call
mov
stos
inc
push
pop
fcoms
jo
or
add
add
popf
cmp
stos
dec
mov
mov
xchg
in
adc
adc
sub
push
movsb
mov
or
es
inc
test
xor
adc
lret
imul
fistps
add
in
sub
iret
dec
push
jl
cmc
aam
sarb
popa
push
test
mov
push
cltd
sub
sbb
add
cmpl
pop
xor
imul
and
sbb
add
test
xor
ss
lahf
add
sahf
jno
ret
sub
andb
dec
jecxz
icebp
bound
cwtl
mov
and
pop
push
test
aad
pop
es
cmp
sbb
push
das
adc
repz
shll
icebp
cmp
xlat
push
adc
hlt
popf
jle
scas
test
pop
jo
mov
sub
outsl
mov
rol
imul
mov
jns
iret
xchg
popf
and
cmp
pop
sbb
mov
js
or
xlat
xchg
xor
and
pop
sbb
out
jl
ficoms
arpl
cmovne
lds
ret
test
mov
push
adc
mov
insl
bnd
fstl
loope
insb
mov
pop
cmp
lret
mov
adc
int
insb
stos
movsl
cmp
cmpsb
jecxz
mov
dec
into
aad
fwait
adc
lds
xchg
sub
sbbb
sysenter
ret
fmul
push
pop
inc
or
sbb
adc
jne
lds
out
push
dec
orl
inc
lcall
inc
jl
fstl
dec
vcvtdq2ps
movsl
or
mov
cmp
sub
adc
mov
mov
mov
add
or
mov
mov
int
mov
dec
sbb
stc
push
cmp
mov
jle
dec
fsubs
lret
leave
call
inc
mov
ret
mov
mov
rolb
mov
lret
push
data16
mov
mov
jp
faddl
je
push
lret
lea
adc
xorb
insb
or
enter
stos
or
mov
shlb
xchg
jo
ljmp
xor
cmp
pusha
push
movsl
cmp
sub
xchg
cs
movsl
mov
aam
mov
in
mov
stos
xchg
movsl
lahf
cs
bound
aad
cmovbe
cld
mov
mov
and
mov
mov
adc
mov
movsl
jnp
mov
pop
mov
push
mov
lods
mov
cmpsb
mov
pop
js
push
out
movsl
popa
pop
xor
push
inc
out
movsl
jno
ficoms
movsl
enter
cld
leave
shl
add
and
addr16
jmp
jns
out
lods
push
cmp
pop
scas
cmpsb
movsl
popf
lods
and
inc
push
sub
movsl
mov
sbb
imul
rorl
mov
mov
scas
in
cmp
jmp
dec
loope
and
pop
mov
sbb
adc
test
pop
mov
lds
pusha
add
mov
adc
loop
push
fstpt
jne
xor
mov
movsl
ds
cli
dec
xor
or
shl
jnp
pop
pop
inc
pop
jns
dec
pop
push
push
fs
les
mov
xor
es
sub
mov
dec
into
imul
lahf
fldenv
cmc
in
xchg
xor
adc
in
insb
das
movsl
xchg
ljmp
and
sbb
scas
movsl
lds
xchg
push
aam
mov
jge
or
or
mov
sbb
pop
movsl
inc
add
sahf
in
adc
scas
or
dec
fnstenv
shlb
dec
mov
mov
push
sahf
movsl
jae
aas
ds
es
andl
and
and
in
cwtl
lcall
inc
addl
in
jae
push
push
add
sti
pop
movsl
sbb
out
pop
call
xchg
aam
imul
psubsb
inc
mov
ljmp
pop
movl
in
pop
lea
jns
movsl
xchg
roll
js
push
xchg
mov
jo
fsqrt
call
mov
push
inc
outsb
pop
mov
sbb
sub
mov
mov
test
xchg
mov
adc
mov
movsl
inc
dec
xlat
pop
outsb
inc
movsl
mov
jne
xchg
lea
mov
js
jnp
lds
jno
inc
and
mov
lret
insb
notb
cltd
cmpsb
adc
movsl
cs
pop
sbb
add
lods
call
test
repz
jno
add
fnstcw
int
pop
mov
mov
ficompl
movsl
mov
cmp
scas
mov
push
in
notb
loope
bound
dec
adcl
cmpsb
stos
movsl
imul
js
test
mov
pop
sub
lcall
mov
push
movsl
loop
push
pusha
addb
jbe
fnsave
or
jmp
and
mul
or
insl
mov
mov
mov
movsl
cmc
mov
pop
test
adc
pop
dec
ja
sbb
jmp
jae
cs
cmp
push
or
cwtl
sbbl
shrl
aam
jecxz
or
imul
xchg
and
mov
xchg
lahf
call
jns
xchg
lcall
cmp
test
cmp
negb
cli
lret
in
sub
movsl
std
imul
xchg
mov
cli
sti
push
push
ljmp
loopne
inc
mov
movsl
nop
jne
shr
int
mov
aas
jno
cmp
lock
push
fwait
push
jns
sbbl
or
inc
imul
test
lcall
shll
aad
lods
jno
mov
movl
movsl
xor
mov
cmp
lds
pop
mov
mov
movsl
or
jbe
push
push
cmpsl
movsl
xchg
lret
ret
pop
cmc
jl
or
push
xchg
mov
mov
mov
rclb
jp
cmp
jmp
jb
pop
bndstx
xchg
xchg
lds
dec
push
movsl
loopne
mov
dec
lds
xchg
popa
adc
movsl
rol
les
mov
inc
mov
cwtl
movsb
movsl
shlb
xchg
dec
dec
cs
mov
cmc
sbbb
or
or
maskmovq
push
cmp
mov
into
je
loop
xchg
ss
xor
cmp
adc
mov
sbb
push
push
pop
adc
inc
imul
test
add
sub
adcl
mov
mov
movsb
jno
cmpsl
adc
push
dec
push
fildl
inc
std
jmp
cmp
xor
or
in
lea
cwtl
adc
push
inc
lds
mov
dec
inc
mov
sub
ret
dec
push
outsl
mov
fsubl
movsl
cmp
mov
loop
cmc
movsl
into
add
repnz
or
xchg
movsl
mov
loop
and
movsw
mov
push
sarb
dec
sub
push
pop
adc
mov
mov
fwait
movsl
out
bound
pushf
inc
jbe
loopne
push
add
jns
jb
dec
dec
ja
fs
lods
sbb
adc
movsl
inc
test
movsl
and
fcompl
mov
mov
std
pop
movsl
scas
jmp
inc
mov
aad
inc
daa
cmpsb
mov
inc
jge
sbb
movsl
mov
push
mov
xlat
pop
and
gs
movsl
cmc
out
adc
push
mov
mov
mov
mov
inc
cmp
test
or
push
push
jno
add
xchg
mov
cmp
movsl
scas
pop
pop
stc
jno
arpl
loopne
add
pop
lods
push
movsl
push
add
sbb
mov
fcmovb
jb
xchg
das
mov
movsl
mov
jnp
int3
lret
test
or
aas
ret
sub
test
mov
loope
movsl
push
in
inc
jb
mov
xchg
xchg
push
pop
pop
mov
mov
sbb
sti
mov
mov
push
fbstp
movsl
pop
push
dec
dec
xor
fcmovu
addr16
and
test
loope
loop
mov
ret
and
lods
cmp
in
movsl
sub
movsl
ja
scas
mov
jb
pop
lods
andb
popa
pop
fstpl
cmc
jmp
mov
dec
aad
mov
sbb
sub
xchg
xor
xor
in
or
shrl
mov
enter
fdivp
rclb
movsl
jge
mov
xchg
inc
and
je
jmp
xlat
movsl
imul
test
pushf
adc
ret
das
xchg
cmp
pusha
sahf
xor
jbe
rolb
and
data16
push
mov
sti
xchg
and
es
enter
or
lcall
lret
xor
pushf
sbb
pop
stos
test
scas
mov
xlat
clc
xchg
jl
cmpsb
xchg
jae
cmpsb
fisttps
jns
and
pop
adc
fisubl
xchg
inc
push
das
jmp
pop
push
stos
xor
pop
cli
test
in
shlb
stos
mov
xchg
inc
xchg
enter
pop
out
in
aam
and
push
sub
push
and
add
xchg
jecxz
test
cmpsb
sub
js
pop
pop
jmp
pminub
xor
shlb
testb
out
out
pop
inc
jae
sbb
mov
fs
in
arpl
pushf
and
test
sub
inc
inc
sub
std
loope
fisubrl
mov
cmp
inc
and
frstor
adc
pop
fiaddl
sarw
sub
in
ret
mov
sahf
adc
lock
ss
inc
pop
inc
sub
mov
movsb
mov
rcll
xlat
push
ljmp
iret
mov
xchg
scas
inc
xchg
dec
jbe
jge
out
popa
dec
xchg
inc
push
adc
scas
dec
movsb
jle
es
mov
icebp
mov
push
xchg
sub
lahf
mov
out
scas
jne
fs
adc
sbb
cwtl
inc
dec
and
addb
mov
inc
call
enter
xor
sti
cmp
lret
fstpt
out
inc
sbb
pusha
shl
mov
adc
xchg
aad
ret
leave
mov
mov
arpl
das
sub
xor
and
cli
mov
push
movsl
mov
mov
mov
aaa
test
inc
dec
movb
cmp
lea
inc
or
pop
sbb
enter
outsb
lea
xlat
fdivr
es
test
sahf
add
bound
into
movsl
aaa
mov
xor
sbb
repz
addl
mov
movsl
clc
jecxz
jo
fs
mov
jle
je
mov
out
repnz
or
mov
push
ret
jno
movsl
dec
rol
popf
xor
js
sbb
sbb
xor
mov
cmp
int
arpl
jb
jno
movsl
enter
in
andb
cmp
dec
xor
stc
daa
movsl
mov
mov
push
movsl
pop
cmp
inc
pop
push
movsl
sub
add
inc
movsl
hlt
mov
mulb
cld
movsl
mov
add
cmp
sub
movsl
int3
lret
push
push
dec
push
imul
sbb
push
push
movsl
push
push
mov
in
dec
xor
adc
pushf
addr16
push
jae
in
xlat
push
xor
and
and
movsl
call
jp
inc
sbb
clc
aam
push
mov
cmpsb
push
fildll
fiadds
or
mov
xchg
mov
pmaddwd
cmp
sbb
sbb
pop
jb
cmpsb
shrl
aam
and
mov
loopne,pn
jnp
mov
movsl
sub
cmp
push
pop
jne
jp
std
movsl
test
xlat
adc
lret
cmp
movsl
nop
roll
lcall
dec
jge
and
cmp
push
xchg
ret
adc
dec
imul
shl
mov
in
lcall
clc
jle
push
push
bnd
mov
inc
in
std
xchg
rep
xor
dec
mov
mov
sbb
fstpt
xchg
push
mov
adcb
in
movsl
fcomp
repz
fstpt
jo
cwtl
aaa
pop
mov
mov
test
mov
int3
push
pop
add
movsl
iret
lock
js
jmp
out
movsl
aam
fcompl
movsl
testb
xor
lret
movsl
push
fs
movsl
or
dec
push
out
cmpsl
fstl
movsb
ficompl
loopne
negl
sub
jne
aad
shlb
mov
cmp
push
shld
pop
loopne
jae
repz
lds
lcall
mov
cmpsl
lea
mov
xor
cs
xor
push
in
sbb
add
aam
push
sti
lret
push
or
movsl
pop
and
mov
pop
mov
inc
push
inc
aaa
fsub
mov
or
mul
xorl
movsl
jge
and
scas
mov
and
xchg
mov
cmp
sub
mov
xchg
mov
arpl
and
mov
fsubrp
mov
mov
es
cmc
test
jns
into
testb
repz
mov
dec
cmp
roll
frstor
mull
icebp
fstl
movsl
in
jae
mov
or
test
mov
push
aaa
push
dec
in
xchg
test
jmp
jae
stos
cwtl
mov
sub
movsb
and
xchg
popf
sbb
mov
int
ja
mov
push
fldl
mov
mov
js
cmp
movsl
adc
sahf
jne
mov
inc
movsl
out
pop
and
test
call
mov
in
jmp
xchg
ret
mov
push
push
insl
add
push
stos
push
dec
cli
cmp
movsl
push
adc
or
xchg
jmp
movsl
popa
dec
cmpsb
xor
fistpl
loope
or
movsl
xchg
cmp
xchg
push
xor
movsl
popf
dec
push
subl
sub
jno
fcomp
movsl
lods
and
mov
adc
pop
push
adc
mov
mov
stos
pop
xor
mov
xor
out
hlt
frstor
shlb
push
push
pusha
jae
arpl
mov
mov
mov
xor
inc
and
push
lock
sbb
movsl
cli
mov
mov
push
sbb
fstpt
mov
andl
out
ret
cmp
and
sub
mov
test
mov
push
push
arpl
xchg
movsl
adc
xor
movsl
push
push
sar
or
add
es
xchg
movsl
sub
mov
mov
rcll
test
test
in
movsl
mov
push
adc
nop
movsl
jbe
in
fcomi
movsl
jg,pt
jp
adc
daa
filds
mov
jno
or
bound
jle
ljmp
das
dec
sarb
push
rcl
cwtl
sub
sub
xchg
pop
mov
jno
mov
xor
pop
adc
movsl
lock
test
stos
movsl
adc
pop
or
in
stc
int3
pop
loopne
push
das
popa
imul
sahf
lea
xchg
sbb
andps
sub
mov
lds
movsb
movsl
add
jb
adc
and
adc
mov
cmp
cmp
and
sbb
addl
jecxz
loope
xchg
icebp
jnp
jl
sbb
inc
and
mov
movsb
lahf
mov
add
mov
iret
repnz
add
and
out
cmp
movsl
stos
dec
mov
test
mov
in
add
cld
inc
add
loope
test
mov
movl
data16
movsl
sti
es
add
stos
cmpsl
popf
or
shll
in
mov
mov
add
and
xor
movsl
lods
mov
ret
xor
popa
outsb
popf
es
cmpsl
pop
mov
sub
push
xchg
or
fs
cwtl
push
movsl
test
add
jo
push
sahf
inc
push
insw
and
xchg
idivl
movsl
lcall
jbe
pop
fdivrl
cmp
jno
ret
push
jge
pusha
testb
clc
insl
mov
mov
repnz
push
fsubrl
rcll
orb
scas
xor
cld
mov
in
push
mov
movsb
pop
cmpsl
movsl
mov
rep
call
jbe
je
mov
int3
mov
roll
pop
sbb
movsl
sub
inc
movsl
popf
cmp
dec
out
into
shl
std
add
rcll
scas
aaa
pop
lods
jmp
ret
sub
mov
in
loopne
xchg
stos
ljmp
imul
outsb
mov
add
lret
cmp
dec
add
add
bound
lods
movsl
add
pushl
movsl
or
ficoml
dec
jg
arpl
lcall
scas
dec
jmp
push
inc
mov
pop
into
fwait
imul
sub
dec
movsl
jno
dec
jl
adc
cmpsb
movsl
lods
sbb
sub
and
iret
arpl
jo
xor
mov
mov
sbb
movsl
test
xor
push
scas
xchg
mov
out
movsl
pop
or
push
mov
cmovge
adc
sbb
add
test
xchg
xor
jp
lret
cs
jae
jns
pop
je
sbb
xlat
stc
mov
jmp
lret
int
inc
inc
sti
jmp
mov
xor
testl
scas
lods
pop
sub
mov
xor
cmp
push
add
push
insb
jmp
scas
sub
adc
xchg
call
inc
sub
std
fwait
popf
push
movsl
and
sbb
cltd
jns
movsl
dec
sbb
fcoms
or
cs
dec
sarl
imul
loopne
and
adc
jbe
shlb
adc
inc
mov
adc
dec
cmp
movsl
das
sbb
mov
nop
fdivrs
inc
mov
jp
movsl
je
jbe
orb
lcall
inc
pusha
and
movsl
pop
push
rclb
mov
test
and
pop
lret
enter
std
pop
popa
jno
es
sub
data16
xor
sahf
out
psllw
aas
dec
mov
hlt
daa
es
icebp
xlat
mov
pop
lods
movsb
loopne
mov
testb
jns
lcall
idivl
xlat
data16
cmp
pop
cmc
jns
movsl
inc
in
xorl
repnz
into
in
xchg
push
inc
xor
shrb
sahf
sbb
push
leave
or
push
sub
pop
in
sbb
xlat
inc
push
push
mov
push
stos
int3
push
leave
push
pop
or
and
clc
dec
jo
cmp
jp
lret
scas
movsl
cmc
adc
loop
ret
sbb
or
inc
hlt
push
mov
or
les
pop
mov
jg
lcall
and
sub
mov
ljmp
out
sub
stos
out
mov
lock
pop
add
stos
mov
fmuls
sub
into
rcr
xchg
or
sbb
cli
mov
push
test
insb
jl
sbb
xchg
cs
dec
push
cltd
inc
xchg
imul
cwtl
or
stos
lds
lods
fsubs
inc
push
push
out
or
cmovge
sub
pop
aaa
dec
cmp
and
outsb
test
pop
jp
sbb
data16
or
loopne
push
jns
jne
sahf
dec
pop
xlat
leave
sbb
jle
ror
test
addl
call
xchg
pop
cmpsl
pop
call
sbb
jae
and
loopne
sahf
pop
lret
mov
movsb
sbb
iret
mov
out
adc
sub
stos
les
inc
shlb
jecxz
cld
or
and
cli
xchg
icebp
popf
ret
sub
and
sbb
xchg
sbb
sbb
mov
mov
cmp
push
sbbl
jecxz
movl
push
ljmp
popf
pop
xchg
add
push
pop
jle
add
inc
mov
cmpsb
fstpl
daa
sbb
daa
daa
sbb
sti
adc
jge
icebp
sbb
cmp
pushf
shll
loop
cmpsl
jl
add
push
or
mov
pop
adc
daa
std
fwait
inc
mov
pop
and
andl
mov
dec
xchg
inc
movsl
push
je
jb
push
addl
cltd
cmp
dec
mov
movsl
or
mov
in
f2xm1
movsl
jge
xchg
dec
jg
leave
ljmp
fdivs
repz
jne
sahf
jg
lret
out
push
xchg
inc
out
and
xchg
mov
movsl
shll
das
push
add
pop
movsl
leave
cmp
mov
adc
arpl
pop
out
je
sub
xchg
and
add
mov
inc
je
cmc
aaa
int
es
imul
ret
incl
lahf
add
ffreep
movsl
and
into
daa
xchg
mov
cwtl
and
lds
mov
cmp
lods
dec
jne
out
lods
cmpsb
arpl
mov
add
dec
cmp
push
pop
fwait
test
cltd
mov
adc
idiv
into
test
in
movsl
sbb
sbb
and
aad
leave
out
gs
push
mov
dec
or
mov
xchg
sbb
test
dec
and
xor
jge
mov
loop
jl
mov
movsb
movsl
mov
fcom
dec
in
and
pop
jbe
scas
mov
cmp
out
or
mov
in
arpl
cmc
arpl
sbb
cmp
es
test
lock
add
mov
mov
enter
in
loop
mov
dec
leave
mov
add
and
shr
pushf
jno
clc
leave
lret
shlb
mov
ret
arpl
subl
push
inc
fstl
call
sub
cwtl
cmp
add
jnp
movsl
sti
xor
mov
mov
shll
fldcw
jbe
mov
adc
lds
xchg
pop
fmulp
je
and
add
push
cmpsb
push
pop
movsl
sub
pop
sti
mov
jmp
push
dec
sbb
push
movsl
stos
pop
fistps
movl
jp
pop
push
pop
sub
jl
mov
adc
fadd
jle
cmp
mov
test
jno
jl
cmpsl
in
test
movsl
sarl
push
test
mov
jo
mov
repnz
inc
xchg
push
pop
add
push
lods
jle
dec
sub
inc
mov
int
lds
sub
mov
mov
or
jmp
dec
add
sbb
add
jp
loope
pop
dec
dec
cmp
mov
fstps
jl
in
xor
adc
mov
push
test
mov
inc
jecxz
cmova
xchg
popa
test
pushf
mov
jno
imul
out
es
push
push
ja
push
movsl
test
and
inc
sbbb
sub
sahf
popa
imul
adc
idivl
into
sbb
test
movsl
sub
mov
inc
negb
push
push
lds
lods
lahf
push
or
cmc
or
adc
insl
pop
pop
pop
lahf
mov
gs
pop
push
aaa
movsl
mov
popf
jl
andl
cmpsb
xlat
adc
movsl
cltd
dec
xor
mov
call
push
lods
or
movsl
xor
mov
sbb
cmp
dec
shrl
movsl
jl
test
or
push
xchg
xchg
es
adcl
inc
cmc
roll
pusha
ja
dec
sbb
jp
lds
lcall
mov
cwtl
sub
cmpsl
popf
dec
pop
jnp
fcompl
cltd
cmp
jae
pmullw
jnp
jecxz
sbb
sbb
in
and
popa
inc
insl
imul
data16
or
or
movsl
rcl
mov
xor
pushf
sbb
inc
and
test
aas
or
pop
mov
ss
in
imul
mov
testl
cmc
xchg
in
inc
pushl
movsl
sbb
leave
in
dec
mov
jmp
jg
aam
stc
test
mov
movsl
push
cwtl
scas
bound
insb
inc
lret
movsl
mov
jg
pop
roll
icebp
in
and
cmp
or
cmpsb
test
les
hlt
orb
pop
xchg
sahf
orl
ret
jg
mov
mov
push
in
pop
xchg
addr16
fistps
loop
mov
sbb
out
mov
or
pop
pop
jo
lods
ret
mov
inc
std
aam
jle
movsl
je
rol
in
push
and
mov
cmp
mov
aad
fadd
stc
stos
jb
iret
into
mov
daa
xor
jo
in
cmpsl
call
cmp
test
ret
or
movsl
xchg
xchg
inc
add
loop
movsl
mov
je
retw
xchg
and
loopne
out
fidivs
int3
mov
loope
ljmp
jo
outsb
movsl
pop
cli
inc
test
movsl
adc
add
mov
xchg
in
andl
or
or
movsl
jae
adcb
mov
xchg
dec
aad
arpl
push
out
sub
in
bound
lds
ds
movsl
jns
mov
outsb
mov
stos
popl
rorl
ljmp
add
inc
jb
in
vpaddb
sub
cmpsb
stos
lea
out
js
rcll
mov
dec
lret
insb
pop
gs
test
in
adc
mov
add
xor
ss
pop
movsl
or
mov
stos
mov
lods
or
mov
push
sub
cs
repnz
lret
shlb
adc
cwtl
and
jne
mov
dec
in
and
scas
movsl
push
jl
imul
pop
xor
stos
cwtl
orb
ds
lret
adc
add
xchg
test
dec
repz
in
movsl
movsb
push
and
stos
mov
out
jle
mov
jae
pop
xchg
cmp
movsl
adc
pop
xchg
movsl
sysexit
mov
repnz
add
and
inc
jno
xlat
movsl
and
into
sub
loope
or
mov
cmpsl
adc
mov
in
loope
scas
and
sbbl
jb
mov
pop
mov
arpl
or
in
add
andb
mov
movsl
adc
sahf
mov
repz
test
xchg
xor
ja
shlb
ljmp
adc
mov
popf
call
in
mov
shrb
fnstcw
loop
adc
movsl
mov
mov
je
dec
pop
cmp
jb
fdivr
push
shl
iret
mov
inc
mov
inc
icebp
xor
pop
fisubrs
xchg
pop
jge
push
dec
mov
test
loope
mov
mov
ret
jno
ret
mov
push
outsb
jbe
cmpl
bound
mov
mov
ret
jge
xor
movsl
sbb
lds
sub
cmp
pop
pushf
adc
dec
test
push
shrl
add
in
movsl
fdivp
sar
loopne,pt
cmpsb
dec
mov
fcoms
mov
lahf
popf
aas
push
xor
arpl
mov
pushf
sbb
lods
js
ja
mov
push
clc
ffree
xor
mov
stos
mov
stos
cmp
pop
movsl
ss
or
sbb
pop
xlat
aas
xor
sbb
pop
cmp
call
aas
xchg
pop
and
mov
movsb
insl
mov
mov
add
push
mov
and
out
add
mov
mov
jae
mov
jnp
inc
divb
fs
sbb
xchg
popf
cli
sub
or
popa
loop
xchg
inc
sti
mov
das
popf
cmp
movsl
rolb
pop
movsl
loopne
out
jge
or
movsl
outsb
rcr
clc
or
xor
add
xchg
and
aas
cltd
in
jne
add
pop
mov
jo
push
xor
rclb
mov
test
mov
mov
xor
push
fsubs
fisubl
pop
daa
leave
dec
adc
dec
les
xchg
mov
adc
mov
arpl
mov
cwtl
sbb
mov
lods
mov
mov
sub
push
and
movsl
adc
mov
inc
sahf
rclb
into
shl
pop
mov
push
mov
aam
cmc
divl
adc
arpl
cwtl
pushf
lods
push
mov
movsl
add
movsl
jl
mov
into
iret
dec
adc
imul
xchg
test
gs
arpl
andl
xchg
mov
jae
mov
imul
xor
inc
sub
fsubr
movsl
sti
mov
out
sub
stos
sbb
xchg
lock
je
fprem
push
lret
in
sti
and
addl
cmp
sbb
repz
pusha
sbb
mov
repz
fldenv
aaa
in
lds
sub
pop
dec
mov
in
or
aad
movsb
es
hlt
movsl
arpl
add
out
mov
lods
adc
andl
xlat
in
push
xor
lret
ljmp
or
popa
dec
add
mov
dec
cmpl
sbb
lods
outsb
mov
dec
std
das
shrb
ds
movsl
rclb
and
jae
cmpsl
xlat
pop
and
adc
cmp
rcrl
pop
mov
mov
and
movsl
int3
and
dec
frstor
insb
clc
lods
mov
popa
push
mov
ud0
mov
mov
rorb
push
test
cmp
adc
xchg
mov
sbb
ja
orl
cli
xchg
xor
insl
lds
test
jne
pop
xor
dec
inc
xor
or
pushf
popf
push
cmpsb
ret
cmc
loopne
inc
loope
pop
jl
dec
nop
pusha
movsl
or
xor
mov
sbb
aad
stos
mov
leave
test
dec
sbbl
mov
loop
cmpsb
sub
mov
scas
stos
std
lcall
and
and
mov
repnz
cmpsl
pop
xlat
cwtl
xor
cmp
pop
into
add
pop
and
loopne
movsl
out
xlat
mov
lcall
mov
pop
mov
stos
stos
fildll
mov
fistl
roll
clc
in
adc
xchg
pusha
sbb
mov
and
call
mov
cmpsb
fisttpll
cmc
cmc
in
aad
mov
cmpsl
imul
mov
jns
adc
in
cmpsb
pop
and
pop
push
icebp
fidivrl
test
pop
sbb
cmc
stos
xor
in
iret
dec
add
mov
mov
insl
inc
movsb
pusha
fnstenv
js
es
dec
mov
push
lods
sub
in
test
mov
ret
xchg
xor
mov
mulb
int3
bnd
shlb
fsubr
insb
flds
push
stos
scas
aad
jecxz
mov
or
test
je
inc
xchg
in
and
push
out
jae
sbb
mov
jne
pop
aad
dec
mov
clc
sub
dec
and
push
sub
xchg
sahf
loop
mov
sbb
inc
sbb
fbld
adc
dec
add
and
sahf
loopne
lahf
frstor
add
adc
out
js
or
add
mov
lret
arpl
insl
push
or
lods
sub
jbe
push
mov
sbb
adc
and
mov
sarb
icebp
mov
xor
push
xchg
fistpl
lahf
leave
pop
cmp
push
lock
mov
call
or
notb
mov
test
ror
fwait
arpl
mov
fst
fiadds
push
mov
test
sahf
leave
dec
and
add
std
and
fs
fidivl
and
std
sbb
mov
flds
cmp
in
cmpsl
lods
leave
mov
mov
inc
mov
and
sub
sub
cmp
sub
test
movsl
stc
mov
and
xchg
mov
dec
shlb
icebp
cmc
cmp
mov
and
shrl
and
cld
fcompl
xchg
test
cmc
push
jno
adc
push
lods
adc
repnz
aas
cmc
loope
inc
sub
mov
xor
ret
xchg
xchg
loope
cli
inc
lods
fiaddl
or
roll
push
imulb
fldcw
sbb
sti
repnz
addb
imul
clc
rcl
aam
ja
push
pop
scas
daa
shrb
inc
test
aad
in
add
addr16
sub
sbbl
test
dec
mov
mov
cmp
fsubrs
dec
in
clc
icebp
mull
mov
inc
pop
xchg
add
lea
mov
and
stc
pop
cmc
jg
cld
pop
andl
insl
mov
add
add
inc
mov
popf
rol
and
into
clc
sarb
jecxz
dec
mov
xchg
out
lcall
repnz
mov
or
jb
in
adc
jne
push
ss
gs
sbb
adc
std
icebp
popf
mov
repnz
mov
sub
xchg
fld
mov
lahf
sti
mov
dec
cmpsl
lcall
aas
fucomp
jle
movsb
xorl
dec
push
test
pop
pop
sbb
cwtl
clc
stos
sub
scas
popa
cltd
mov
inc
sbb
movsb
xor
cmc
xchg
dec
and
add
pop
add
jno
int3
ffree
inc
jbe
push
ds
xchg
daa
mov
sub
sbb
push
lock
sub
pop
cmp
xchg
lcall
xor
mov
fstps
popa
js
push
adc
sub
bound
outsl
and
stos
add
jl
add
and
loop
loop
mov
mov
push
sub
mov
lods
pop
fucom
xchg
in
int3
ret
sbb
jle
pusha
imul
in
mov
movsl
outsb
jnp
vcvtsi2sdl
mov
xchg
cmp
lea
std
fidivs
dec
dec
sbbb
in
enter
sarb
mov
fbld
shlb
bound
imul
mov
les
icebp
jno
cmp
rcl
cli
ljmp
fldenv
xchg
push
call
mul
fucomp
movsl
sub
fldt
mov
push
xchg
jbe
inc
aaa
scas
pop
inc
lret
xchg
push
sub
mov
in
ja
insl
mov
mov
mov
rcr
lds
mov
push
cmpsb
test
mov
and
xchg
out
idiv
mov
xchg
xor
adc
rcl
jge
mov
stos
movsb
fwait
loope
popf
insl
movsl
adc
out
mov
orl
loopne
and
bound
ret
out
pop
mov
dec
int3
movsl
outsl
sbb
lcall
fldenv
mov
mov
sub
xchg
movsl
cmp
shlb
outsl
jecxz
dec
mov
vunpcklpd
stos
xchg
fnstcw
sbb
add
pop
in
xchg
shrb
mov
dec
std
or
dec
fldenv
popa
lods
push
dec
movsl
imul
enter
or
aad
mov
push
lcall
dec
inc
scas
shrd
push
movsl
and
and
movsl
test
add
movsl
out
xor
push
mov
push
pop
jecxz
mov
or
inc
cs
cmp
movsl
bound
adc
ret
movsl
pop
mov
pop
jecxz
jmp
cwtl
adc
cmp
movsl
xchg
sbb
jecxz
xchg
adc
push
insl
push
jae
imul
fcomip
cltd
add
mov
arpl
inc
jo
xchg
push
pushf
adcl
dec
addr16
imul
mov
dec
daa
nop
mov
stc
push
push
inc
push
mov
ret
movsl
subl
mov
sub
or
jge
cltd
mov
movsl
cmp
pop
popa
into
scas
test
fdivs
arpl
push
hlt
xor
js
jecxz
imul
fs
mov
add
adc
movsl
mov
mov
movsl
int
lods
mov
movsl
jns
push
ja
std
stos
stos
insl
cmp
pop
lods
xor
push
shl
lret
sbb
jle
push
aad
sub
fldenv
push
sbb
sbb
movsl
or
dec
mov
mov
cmpsb
mov
lret
or
sub
in
and
data16
movsl
insb
loop
sbb
or
lds
inc
mov
lcall
dec
jle
inc
adc
in
popa
repnz
mov
inc
movsl
jge
mov
loop
pop
mov
cwtl
mov
pop
es
adc
enter
mov
or
mov
sahf
lret
sarl
mov
sbb
push
and
xor
fxch
movsl
pop
nop
mov
pop
movsl
test
test
adc
xor
pop
in
ret
je
add
test
xlat
cwtl
insl
movsl
add
roll
jp
imul
inc
ja
or
shl
xlat
in
lock
jbe
mov
dec
in
aad
fwait
xchg
pop
xchg
cltd
mov
movsl
mov
mov
xchg
jno
in
int
leave
les
je
aaa
mov
cwtl
push
js
inc
jecxz
adc
sub
sarb
add
inc
sbb
rclb
sahf
fsubl
call
sbb
mov
sbb
and
dec
popf
sub
lock
mov
pop
pop
aad
cmc
push
fnstcw
pop
xchg
iret
lcall
jbe
dec
sbb
jle
movsb
std
outsb
xchg
mov
jecxz
add
dec
push
cli
or
sbb
sub
jae
fcmovbe
rcr
sbb
xor
adc
icebp
mov
scas
pop
pop
jp
sbb
mov
sarl
sbb
pop
repz
pop
mov
xlat
sbb
or
and
dec
pop
jbe
and
and
jb
mov
jnp
das
fbld
pop
pop
cmp
cmp
imul
mov
mov
idiv
subl
mov
movsl
mov
cli
mov
mov
pop
insl
ret
mov
movsl
inc
icebp
in
inc
shrl
shl
cmc
add
popa
les
pop
popa
sahf
mov
sahf
xlat
fiadds
lds
adc
xchg
out
ljmp
adc
repz
sahf
xchg
daa
call
sbb
lcall
scas
in
xor
hlt
mov
outsb
and
mov
scas
mov
or
cmpsl
cli
cmc
testb
jecxz
mov
jg
inc
or
ret
mov
icebp
mov
stos
jge
and
xor
push
xchg
and
ss
jge
xchg
leave
cmp
mov
lret
mov
or
mov
push
push
std
cmc
ficompl
inc
jl
hlt
push
aas
icebp
and
movsb
jbe
xlat
xchg
sub
ret
dec
dec
bound
lret
lret
inc
iret
or
mov
bound
jnp
js
je
dec
imul
call
push
std
inc
js
aad
icebp
sbb
add
xchg
jecxz
scas
pop
cwtl
adc
cld
cmc
sub
das
loope
pop
adc
adcb
vcvtpd2psy
push
adc
mov
mov
nop
cmp
cmp
sbb
jae
cmc
jmp
or
add
sbb
jle
leave
and
mov
daa
aaa
mov
imul
dec
push
xor
xor
add
cld
iret
jl
movsl
test
cmp
jbe
mov
jp
xchg
movsl
lret
in
pop
imul
data16
movsl
sub
ljmp
ficompl
aam
adc
pop
or
mov
sar
in
mov
xor
cmp
push
loope
lret
rclb
mov
dec
add
inc
aas
xchg
mov
lock
movsl
xchg
inc
scas
rol
into
pop
push
add
or
outsb
movsl
test
xchg
int
push
shll
movsl
sbb
movsb
dec
jl
int
hlt
dec
add
inc
addr16
jb
mov
imul
dec
pop
push
lods
mov
lcall
mov
aad
das
mov
ja
movsl
divl
int3
neg
adc
movsl
imul
dec
clc
sbb
outsb
fadd
sbb
int
out
jno
mov
rclb
jmp
pushf
inc
test
fsubrl
cmp
jg
xchg
mov
xor
sbb
pusha
push
mov
mov
inc
push
xchg
subb
sub
add
jecxz
jecxz
stos
and
cmpsl
push
mov
pusha
sub
mov
sbb
aaa
add
jp
and
push
sub
pop
cmp
and
sbb
in
xor
in
icebp
sub
ss
test
loopne
xor
mov
rcrb
dec
out
loope
mov
pop
div
outsl
jecxz
ret
popa
movsl
xchg
orb
sahf
andl
cmp
push
fxch
ja
gs
sbb
fwait
mov
inc
pop
fdivrs
and
xchg
ljmp
gs
popf
mov
lahf
push
hlt
repz
hlt
fsub
dec
pop
aad
ds
jbe
pop
inc
dec
mov
test
sub
mov
in
sub
adcl
cmp
lret
lds
mov
movsl
fcomi
fs
pop
dec
push
loop
test
icebp
inc
sbb
jns
out
lcall
xchg
mov
push
cmpsl
movsl
es
mov
into
dec
pop
dec
retw
ss
mov
negb
add
inc
sbb
jmp
shlb
cmp
xor
sbb
leave
adc
lcall
adc
xlat
pop
push
ficoml
sub
pushf
std
sti
icebp
insl
jp
pop
into
xchg
jl
lret
push
clc
pop
dec
ss
jle
pop
mov
cmp
add
xchg
es
push
scas
pmuludq
push
pushf
cmc
pop
add
icebp
mov
popf
popf
xlat
aam
mov
repz
repnz
and
cmp
inc
aad
in
jbe
sub
pop
sbb
movsl
in
lret
out
dec
addr16
jb
pop
mov
fdiv
outsl
sbb
out
adc
rcrb
sub
xchg
pop
jmp
mov
popa
ja
jb
insl
movsl
in
ficompl
add
cmp
je
in
movsl
pop
gs
sti
mov
inc
andl
mov
xchg
sbb
or
out
outsb
mov
pop
in
mov
loope
add
push
sbb
cli
movsl
jecxz
inc
pop
cmc
std
jae
movsl
pusha
in
jo
aam
stos
pop
and
cltd
movsl
and
int
and
fdivp
movsl
pop
sar
mov
jnp
jbe
movsl
inc
push
pop
xchg
push
dec
pop
xor
and
outsl
call
sti
jae
pushf
push
fs
ja
clc
in
test
movsl
add
cli
ss
mov
rcll
ja
movsl
push
jge
leave
add
and
test
mov
xlat
movsl
mov
jnp
sub
cmp
ret
push
xchg
xchg
jmp
xlat
loopne
gs
and
mov
fwait
push
xchg
add
aam
movsl
js
jp
mov
sub
or
pop
hlt
icebp
xchg
pop
and
movsl
es
push
push
std
jecxz
dec
push
movsl
lcall
xor
xchg
pop
icebp
aas
jmp
dec
mov
in
int
dec
add
enter
popf
mov
movsl
push
sbb
loop
icebp
add
test
movsl
push
push
dec
dec
stos
insl
adc
movsl
test
cltd
and
popa
jbe
pop
iret
adc
sti
fs
mov
test
mov
mov
xchg
mov
and
jns
das
movsb
push
in
and
into
cmp
add
push
fwait
xchg
xchg
andl
mov
push
shrb
and
faddl
clc
popf
mov
movsl
xor
pop
enter
inc
jo
jecxz
sti
stos
sub
sub
dec
nop
dec
pushf
test
and
hlt
xchg
xchg
movsl
ss
sub
sbb
in
movsl
fsts
push
andb
inc
ja
movsl
arpl
pop
fsubrl
test
sbb
adc
cld
cmp
mov
fs
add
or
add
pop
dec
int
test
sbb
push
jne
lret
dec
movsl
in
repz
loope
mov
pop
dec
xchg
push
mov
scas
movsl
data16
xor
insl
pop
stc
mov
cmp
popa
jl
pop
push
fsubrs
push
call
and
sbb
xchg
movsl
popf
ret
imul
movsl
or
ret
add
addr16
sub
test
mov
cmpsb
cmpsb
mov
inc
mov
test
jo
push
push
sarb
adc
stos
shl
sbb
insb
outsl
pop
movsl
mov
inc
popf
xchg
and
adc
xchg
cmovns
lds
lret
jmp
lods
adc
sahf
add
inc
push
mov
mov
movsl
mov
push
jge
popf
pop
jno
repz
nop
xchg
or
and
adc
mov
fcoml
sub
add
mov
mov
dec
jb
dec
movsl
push
mov
push
stos
pop
jbe
pop
jmp
in
vpshad
mov
push
cmpb
scas
lea
add
andb
data16
inc
pop
int
rcl
pop
dec
xor
mov
jmp
pop
cld
cli
lods
mov
js
push
push
inc
pop
xchg
mov
adc
sbb
popa
cmp
movsl
and
movsl
add
pop
and
out
movsl
imul
in
test
movsl
cmp
cmp
aam
xor
lcall
lods
jmp
outsb
push
inc
mov
imul
xchg
jmp
popa
xor
out
movsl
repnz
inc
push
test
call
and
push
push
rcl
cltd
pop
and
mov
popf
es
addr16
or
xor
repnz
aad
in
je
aaa
movsl
adc
mov
or
sbb
cpuid
pop
mov
data16
mov
mov
mov
fstpl
hlt
fbld
and
aad
aam
imul
xor
push
jl
jnp
je
mov
dec
lods
add
mov
movsl
int
cmc
pop
pop
jecxz
inc
out
movsl
dec
jle
insl
clc
sahf
ficoml
xchg
daa
adc
outsl
pop
pop
or
movsl
cmpsl
push
movsb
jmp
je
and
into
lods
out
jno
xor
xor
mov
ret
or
lds
pop
dec
xorb
in
arpl
repz
xlat
xchg
jge
test
lcall
scas
popf
inc
pop
movsl
insl
push
mov
push
mov
fdiv
mov
movsl
lret
add
pop
fstl
jne
jle
xchg
popa
mov
lods
fldenv
movsl
cld
push
shrb
add
xor
lret
fildl
jl
insb
or
cwtl
test
mov
loopne
incl
movsl
lret
push
dec
insl
cli
sti
movsl
cs
and
aam
inc
dec
jmp
jno
outsl
mov
dec
jl
mov
push
and
lea
movsl
inc
std
dec
insl
lahf
mov
test
jbe
and
iret
mov
mov
xchg
cmp
bound
xlat
cmp
movsl
ret
lcall
cmp
push
arpl
xchg
enter
xlat
inc
and
adc
movsl
dec
cmpb
fiadds
push
loop
mov
enter
xlat
rsqrtps
ret
pop
movsl
sub
pop
mov
add
cwtl
cmp
mov
pop
test
movsl
and
push
rcrb
sbb
enter
shll
aam
fwait
xchg
or
and
movsl
cltd
xchg
jg
xor
inc
mov
mov
sti
sub
test
movsl
pusha
adc
popa
or
xorb
rorl
and
mov
mov
out
jp
movsl
add
xor
movsl
mov
rcrl
les
testl
xchg
mov
mov
loope
mov
jge
adcb
lds
pop
in
popa
movsl
inc
out
push
pop
jmp
movsl
jne
cli
cmp
sub
movsl
mov
add
push
adc
push
mov
fiadds
and
imul
in
pop
adc
lds
lock
std
jge
xchg
inc
movsb
adc
inc
movsl
mov
out
ja
add
insl
jno
inc
jmp
jae
loop
movsl
stos
dec
sahf
fwait
adc
xchg
cmp
xchg
cmp
pushf
out
movsl
outsl
dec
push
cmpsb
push
add
cli
jmp
in
clc
add
repnz
cld
inc
pop
or
xchg
movsl
imul
popf
inc
pop
dec
pop
movsl
sub
mov
faddl
pop
add
repz
push
mull
adc
cwtl
sar
mulb
add
lods
fldenv
push
insb
jg
stc
movsl
ljmp
add
cwtl
mov
aam
xchg
in
inc
bound
pop
jns
gs
jnp
popf
test
jae
fwait
inc
xchg
icebp
mov
push
mov
lret
push
sahf
inc
jl
mulb
lods
xchg
mov
icebp
add
aam
data16
cwtl
std
fsubs
pushf
mov
cltd
shrl
mov
jmp
orb
cmp
and
lcall
mov
shrd
or
mov
jle
in
push
pop
imul
pop
pop
mov
adc
mov
dec
jmp
movsl
int3
repz
scas
cwtl
lods
test
xorb
in
sbb
mov
mov
cmp
imul
stos
and
jle
fldl
lds
rol
mov
adc
mov
int3
cmc
jl
js
xor
scas
movsb
mov
mov
and
clc
cmpsb
and
xchg
ret
out
popf
daa
movsl
je
dec
or
enter
and
test
insl
push
movsl
adc
mov
inc
outsb
jnp
mov
mulb
cmp
and
scas
inc
dec
movsl
mov
push
add
movsl
fsub
out
stos
mov
into
movsl
outsb
ja
push
cld
fsubs
inc
and
jmp
cmc
fisttps
movzwl
inc
in
inc
sti
jo
mov
test
movsl
mov
inc
mov
xchg
or
out
adc
movsl
fs
mov
ja
arpl
sbb
jnp
sbb
lret
xorb
and
xchg
shl
andl
fcoml
dec
test
int3
mov
pusha
daa
pushf
movsl
aam
xchg
jnp
fisubrl
scas
out
pop
dec
andl
loop
mov
xor
in
ss
inc
out
subb
fisubl
inc
sti
loope
int3
arpl
jecxz
jmp
jmp
lods
xor
rcr
mov
xchg
aad
adc
mov
ljmp
and
or
mov
ljmp
mov
pusha
pop
movsl
ljmp
xchg
inc
js
gs
xchg
in
mov
sbb
or
movsl
int3
add
dec
mov
fmulp
lcall
push
outsb
sub
repnz
fwait
popf
movsl
testl
cmp
test
int
fwait
mov
add
cmpsl
sub
mov
xchg
ss
cmpsb
mov
loope
in
jne
inc
shll
dec
add
into
movsl
push
cmpsl
mov
mov
inc
subl
mov
movsl
xor
push
jne
push
pop
mov
movsl
out
sbb
sub
jbe
loope
cmc
mov
push
mov
sbb
dec
iret
add
leave
mov
and
call
movsl
push
mov
rcrl
mov
adc
sahf
dec
ds
cmp
inc
frstpm(287
in
push
xchg
popa
gs
lds
mov
imul
and
scas
mov
in
out
lret
rcr
xchg
xchg
inc
test
add
shlb
adc
scas
mov
imul
test
mov
pop
scas
mov
xlat
lahf
fsubl
mov
or
xor
out
mull
outsl
fcoml
ret
jnp
dec
aad
movsl
repz
push
and
in
cmp
arpl
stc
outsl
dec
movsl
mov
movsl
cmp
ljmp
sbb
dec
jae
arpl
mov
inc
push
loope
mov
pop
lahf
jbe
jg,pt
in
jp
js
push
mov
inc
push
out
sub
mov
pop
movsl
lods
pop
nop
push
xchg
xchg
cwtl
sbb
dec
lds
xchg
movsl
les
subb
adc
sub
shlb
and
test
jp
movsl
inc
lret
and
mov
jmp
movsl
dec
adc
mov
mov
adc
mov
sbb
scas
je
pop
movsb
jns
shld
xor
and
xor
shlb
pop
mov
sub
mov
in
jo
clc
pop
cmc
leave
push
mov
mov
imul
int
jp
outsb
adc
movsl
call
sbb
test
leave
cltd
push
xchg
jl
push
xor
mov
dec
sbbl
movsb
insb
mov
sub
andl
aad
test
repz
mov
outsb
or
or
mov
ljmp
stos
adc
or
daa
and
pop
into
fisubs
push
repnz
pop
cli
fistl
push
stc
add
add
jae
adc
aam
cwtl
inc
or
addb
movsl
out
andps
jle
mov
ja
jl
and
pop
sub
sarb
fsts
mov
push
aad
js
jge
mov
mov
jnp
pop
push
adc
stc
adc
cld
lret
mov
jb
stos
xchg
movsl
pop
cmp
hlt
movsl
mov
sub
test
mov
mov
mov
js
mov
mov
push
push
xchg
mov
out
lds
dec
xlat
sub
adc
mov
in
ret
mov
jge
dec
sbb
mov
xlat
loopne
push
cmp
ja
fdivrl
jecxz
in
push
es
aaa
data16
ljmp
and
pop
cmpsl
push
movsl
push
inc
sbb
push
cmp
or
movsl
call
fst
adc
int3
mov
mov
das
mov
movsl
ret
push
stc
cmp
movsl
pushf
mov
sbb
movsl
sar
in
lods
jg
push
movsl
pop
inc
imul
imul
mov
lcall
and
ret
mov
jp
movsl
imul
add
xchg
movsl
enter
test
andl
test
mov
movsl
test
out
ljmp
push
pop
movsl
xchg
push
or
inc
es
pop
xchg
js
stc
fdivrs
movsl
pop
xor
pop
lret
jne
push
movsl
mov
ror
push
xchg
popf
movsl
xor
add
sub
popa
lcall
mov
mov
inc
push
out
mov
inc
inc
mov
pushf
iret
insb
add
ja
call
in
jb
out
and
test
inc
mov
pop
push
push
cmc
movsl
loopne
sbb
xchg
jo
test
movsb
popa
mov
pop
dec
cltd
loop
leave
ret
out
sbb
add
enter
sub
xchg
adc
mov
scas
ds
shrl
or
mov
push
pop
rcr
sbb
sub
sub
movsl
aam
push
xchg
std
idiv
fisubl
sbb
scas
push
into
xchg
movsl
test
add
jns
test
or
js
mov
jp
lret
leave
mov
sahf
dec
dec
daa
push
sbbb
xor
push
xlat
movsl
pop
imul
ret
dec
xchg
adc
movsl
insb
pop
jnp
hlt
aas
or
sub
jmp
pop
addr16
aad
in
movsl
cmp
out
lcall
xchg
shlb
dec
in
pop
fcmovnb
sbb
sub
fwait
es
add
scas
jb
fs
mov
mov
loope
js
adc
inc
or
xor
cmp
inc
cld
stos
mov
ja
mov
dec
movsl
push
inc
sar
inc
and
pop
add
or
mov
jg
call
xor
scas
mov
adc
bound
dec
jae
adc
xor
inc
bound
int3
out
imulb
movsl
cmpsl
pop
sub
in
movsl
es
mov
cmp
pop
rolb
mov
cmp
cmp
ja
xor
inc
xchg
cmc
push
popa
sahf
rcrl
ret
stc
test
push
aaa
int
sub
in
and
adc
movsl
popa
sub
cmpsl
inc
push
aaa
loope
pop
cmp
fs
movsb
jmp
xchg
cmp
pusha
jno
sbb
xlat
test
push
sub
stos
rorb
clc
pop
dec
incb
jp
pusha
jle
pop
divl
jmp
push
xchg
mov
lcall
sti
mull
cmpsl
inc
jns
pop
mov
movsl
inc
sahf
fldl
cmp
out
mov
andb
icebp
and
std
xor
scas
xchg
pop
stos
mov
push
mov
and
in
aad
or
push
sahf
fadds
hlt
cmp
scas
push
test
pop
pop
fmuls
movsb
pushf
xchg
jge
sti
and
out
mov
adc
clc
jg
pop
enter
sub
and
mov
cs
imulb
rorl
jl
cmp
sub
pop
push
push
hlt
mov
add
jge
out
std
push
leave
arpl
icebp
popa
and
nop
dec
cs
mov
cmpsb
fdiv
xor
test
jbe
jecxz
push
das
mov
dec
cld
cmp
sub
stos
cli
mov
cmp
cmp
popf
int3
sub
fs
mov
dec
sbb
and
les
into
mov
mov
cli
or
adc
cmp
jb
mov
push
dec
mov
clc
mov
pushf
sub
sbb
mov
xchg
sbb
sub
jns
inc
andb
scas
scas
sub
add
mov
push
xor
pop
lds
jne
inc
stos
pop
jae
in
sub
sub
movsb
xchg
jp
and
xor
jo
pop
push
mov
das
loopne
or
push
jp
pop
pop
pop
icebp
loopne
mov
inc
les
and
mov
mov
call
int
int3
sbb
sbb
sbb
sub
and
cmpsb
xor
insl
jecxz
test
and
sub
cmp
test
out
or
jo
mov
dec
loop
cwtl
or
cmpsl
and
out
mov
shlb
fldl
sahf
popa
push
neg
push
jle
fstpl
jo
into
lock
push
cmpsl
jne
and
sub
lret
ss
hlt
cmpsb
and
test
stc
jg
stc
fists
cmpl
jge
jp
dec
popa
mov
cwtl
mov
adc
out
jle
jecxz
scas
pop
jle
pop
in
mov
cmp
rcr
xlat
inc
fistl
push
inc
xchg
in
movsl
js
lock
fsubrl
xchg
pop
in
adc
sub
push
hlt
dec
in
mov
mov
and
icebp
dec
inc
mov
xchg
fisubs
push
sti
ret
push
lock
aaa
xor
sub
jmp
lcall
div
in
std
cltd
movsl
add
pop
stos
shlb
add
dec
mov
outsl
popa
xor
ror
mov
adc
stos
loope
pop
int3
lock
hlt
sti
into
mov
cs
fsubl
push
or
repz
stos
inc
shl
lret
iret
xchg
fnstsw
movsl
fldt
lea
cmpsb
stos
movsl
add
pop
xchg
andl
jecxz
mov
sbbb
mov
cld
jmp
sbb
mov
daa
adc
std
push
xor
test
pop
push
fcmovnbe
lock
lea
ficomps
fucomip
jb
push
arpl
fwait
cmpsb
or
loopne
inc
mov
dec
wbinvd
dec
pop
movsl
pop
out
push
rolb
pushf
add
or
xorl
lea
mov
sbb
jmp
inc
insl
add
xchg
cwtl
mov
mov
movsl
add
lret
shl
lahf
scas
movsl
xchg
cmp
jo
hlt
movsl
imul
adc
push
sub
cli
push
and
icebp
mov
jne
mov
jle
cmpsl
lods
movsl
cmp
or
pop
aaa
movsl
les
test
pop
ja
adc
cmp
cmp
jecxz
cmp
int
xchg
pop
push
imul
dec
movsl
test
xchg
scas
and
pop
in
dec
dec
neg
aam
movsl
xlat
imul
adc
push
push
filds
xor
cwtl
mov
sahf
xor
movsl
addr16
mov
mov
push
lods
mov
ret
jmp
push
in
mov
das
popa
test
dec
outsb
movsl
cmp
arpl
mov
cmp
push
ds
jae
push
fadds
mov
movsl
cmp
push
cmpsb
xchg
out
push
cmc
mov
mov
aam
leave
adc
test
outsb
lods
adc
out
mov
sbbb
in
movsl
add
mov
mov
vmovlpd
arpl
cld
sub
popa
mov
push
add
ljmp
sub
and
add
push
stos
cltd
or
pop
mov
ds
in
mov
roll
sub
mov
movsl
pop
dec
push
fs
movsl
adc
sbbb
movsl
lds
gs
movsl
pop
dec
fnstsw
mov
stc
int
mov
mov
outsl
cmpsl
movsl
xchg
aas
pop
fucom
movsl
std
lret
mov
mov
repz
jg
adc
fldl
movsl
aas
xchg
xchg
adc
scas
xchg
mov
out
movsl
lock
push
js
movsl
mov
mov
mov
adc
lret
test
mov
sahf
clc
loopne
stos
call
jle
push
mov
bound
pop
cmp
imul
or
ret
xor
shl
push
fucomp
scas
push
mov
jg
test
enter
popa
jle
fnsave
or
mov
jmp
cli
ret
insl
out
fldl
lods
fiaddl
ss
push
rcrb
aad
leave
lods
pop
mov
movsl
addr16
and
movsl
test
jmp
outsl
jmp
js
sub
push
dec
movsl
pop
mov
pop
jnp
mov
dec
push
js
shlb
ds
jmp
sbb
mov
test
stos
cli
in
mov
jno
pushf
mov
cmp
xchg
insb
push
jp
insl
or
mov
bound
movsl
jnp
push
cmp
sub
movsl
jb
mov
xchg
and
mov
ret
jbe
pop
pop
xchg
mov
and
or
aam
int3
mov
movsl
ljmp
jno
movsl
rorb
js
aad
into
movsl
dec
push
in
push
insl
int
divl
syscall
mov
xchg
inc
movsl
out
test
xor
movsl
jmp
lret
lock
jp
hlt
movsl
leave
fisubl
nop
mov
sbb
xor
adc
mov
or
fnstsw
call
and
add
in
in
mov
mov
push
addb
movsl
adc
gs
movsl
sbb
mov
lret
xlat
ljmp
movsl
outsl
dec
dec
pop
jge
pop
movsl
jl
icebp
pop
jp
pop
rcrl
in
fucom
mov
mov
dec
movsl
or
cmpsb
lret
push
imul
sbb
and
inc
sbb
sbb
mov
mov
push
mov
movsl
repz
xchg
xor
or
mov
enter
adc
pop
movsl
mov
ja
bound
js
or
adc
xor
push
loopne
push
movsb
sahf
sbb
mov
movsl
pop
pop
pusha
add
add
jl
call
fwait
lcall
pop
mov
movsl
pushf
inc
loope
in
jmp
ret
jmp
vmovd
pushf
aad
dec
dec
mov
stos
shll
mov
fstpt
cmp
xchg
int3
enter
push
xchg
pop
icebp
jge
dec
movsl
insl
loop
stc
lahf
rcrl
mov
dec
dec
nop
pop
mov
flds
mov
cs
sahf
cmp
sbb
mov
mov
jmp
movsl
imul
mov
ds
pop
negb
xchg
sub
pop
addr16
arpl
popa
jo
push
inc
mull
nop
ss
sbb
stc
xchg
fsubs
loop
ss
ret
xchg
stos
and
inc
lahf
in
lcall
bound
mov
decb
jo
mov
test
stos
mov
sub
in
mov
aad
xor
or
lds
push
hlt
test
je
mov
or
movsl
lods
xchg
repz
arpl
movsl
or
push
in
cld
leave
pop
int
xchg
int3
push
add
fs
dec
popf
subb
repnz
outsl
movsl
sbb
mov
dec
jns
sbb
out
pop
mov
scas
ficoml
mov
sub
push
cmp
xchg
hlt
mov
cmpsl
loopne
in
or
cmovno
jbe
rcrb
lods
or
aam
jns
add
inc
movsl
cmc
daa
adc
inc
mov
pop
aaa
xchg
in
inc
cmp
insl
or
mov
push
movsl
mov
mov
repnz
cwtl
fldl
dec
push
orb
cmp
stos
add
xor
adc
ror
mov
mov
dec
push
data16
cltd
and
pop
mov
aad
movsl
std
jecxz
scas
jb
cmp
xor
sub
sbb
aam
jmp
movsl
and
callw
jae
jnp
pop
movsl
adc
shl
mov
jp
sti
loop
imul
lcall
mov
add
and
mov
push
lods
xchg
loope
jbe
ret
hlt
xlat
jl
aaa
cmp
movsl
in
sub
sbb
stos
xchg
push
push
pop
pushf
movsl
or
jge
adc
xchg
outsl
mov
ljmp
leave
bound
push
popl
int
and
movsl
adc
mov
adc
push
popa
xlat
rorl
mov
scas
sahf
or
pop
jge
movsl
adc
push
stos
sub
push
and
sub
xchg
ja
adcb
addb
fdivrl
add
jge
insb
add
pop
sbb
mov
mov
fsts
movsl
pop
js
jmp
insl
addr16
movsl
jle
and
inc
int
movsl
pop
jecxz
or
movsl
mov
out
sub
movsl
push
mov
pushf
incb
xchg
test
inc
fs
inc
jge
movsl
ficompl
lds
movsl
sbbl
sti
fcmovbe
addb
mov
inc
push
andl
shl
int
in
pop
movsl
stos
mov
ret
xor
sub
push
shrb
mov
mov
xor
pop
push
jg
test
ret
outsl
jle
mov
and
aad
mov
cwtl
cli
or
sub
in
mov
lret
and
fnstsw
movsl
test
xlat
mov
andl
cmpsl
pop
jbe
mov
push
sbbb
pushf
xchg
sahf
in
mov
pop
or
dec
push
xor
adc
sbb
xor
rclb
push
mov
dec
xchg
jnp
int
movb
sbbb
ljmp
in
cmp
xchg
push
aad
mov
mov
ffreep
std
adc
popa
and
pop
das
pop
sub
xchg
pop
stc
pushf
dec
fisttpll
mov
sub
js
pop
mov
pop
cltd
mov
mov
dec
movsl
je
movsb
push
lahf
pushf
inc
xchg
mov
loopne
push
fcoms
mov
jmp
hlt
mov
adc
das
test
subb
sahf
inc
lods
xor
xchg
xchg
sbb
movsl
xor
add
movsl
sbb
mov
leave
pop
push
jnp
inc
xchg
pushf
je
movsl
inc
or
gs
and
shr
int
lds
fucomip
ja
mov
xchg
call
pop
leave
pop
jmp
call
aam
mov
test
popf
lods
shr
pop
in
jle
cli
fildl
sbb
test
inc
movsl
cli
push
and
xchg
jge
idivb
test
outsb
push
movsl
inc
addr16
jbe
pop
loopne
push
xchg
xchg
cwtl
mov
inc
push
movsl
push
dec
arpl
movsl
fs
test
cmpsl
dec
out
pop
cld
push
outsb
and
sbb
popa
xor
ret
or
test
mov
movsl
shl
lods
fistpl
inc
movsl
xchg
fdivp
jmp
movsl
add
icebp
int3
mov
pop
mov
dec
cmpsl
push
and
mov
stc
test
mov
aam
cmp
jae
xor
je
shr
movsl
xor
xchg
daa
nop
xchg
or
test
cwtl
xchg
or
cmc
mov
cmp
cmpsl
xchg
push
and
lea
cmp
jno
rcrb
push
cmp
pop
movsl
adc
and
fsubrl
mov
in
nop
cmpsl
xchg
push
in
lods
adc
cmp
push
movsl
cmp
mov
pop
lods
lret
orb
iret
xchg
ret
cmp
dec
sti
dec
push
leave
mov
in
sub
fcmovne
nop
rcll
dec
testb
jmp
cmpsb
push
fadds
or
das
lahf
pop
movsl
loopne
outsl
ja
push
jbe
sahf
ret
mov
push
movsl
sti
dec
jmp
and
out
push
lds
hlt
pushf
outsl
movsl
adc
int
repnz
int
jno
addr16
xlat
sarb
mov
xchg
sbb
roll
dec
popf
pop
push
and
in
add
cmc
jecxz
lods
lret
xchg
in
jp
dec
movsl
dec
jle
fistpll
sahf
dec
pop
test
movsl
jmp
lds
mov
lods
mov
and
cmp
fidivl
push
movsl
mov
test
pop
sbb
sbb
pushf
dec
adcl
sbb
pusha
sbb
push
adc
leave
push
lahf
mov
in
xor
mov
repnz
movsl
jnp
xor
testl
mov
movsl
addr16
dec
scas
movsb
mov
popf
lahf
ss
movsl
mov
xor
sub
xor
movsl
add
lret
in
ja
inc
cwtl
imul
andl
lods
mov
lds
jbe
and
pop
rcrb
movsl
into
jle
lret
int3
adc
pop
push
pop
jmp
movsl
mov
shl
icebp
lret
clc
fildll
imul
sub
inc
lds
push
mov
stc
int3
xchg
loopne
inc
xchg
cmpsb
icebp
movsl
push
mull
stos
adc
mov
ret
aad
jecxz
jno
inc
pushf
cmp
movsl
push
push
inc
insb
mov
push
pusha
in
mov
sub
call
inc
mov
ja
movsl
dec
js
out
xor
lret
add
mov
stc
xchg
test
into
arpl
add
sub
cs
cmp
bound
add
movsl
push
dec
mov
pop
and
movsl
jmp
lret
jns
and
mov
es
push
insb
movsl
add
stc
loop
and
jae
mov
inc
add
jl
iret
je
cmpsb
lods
ss
test
jbe
clc
out
js
add
or
shl
das
or
and
sub
movsl
fs
jp
in
ds
jae
jmp
mov
mov
in
inc
jo
movsl
js
out
jmp
loopne
nop
mul
or
sbb
mov
out
mov
cmp
mov
aas
cwtl
sahf
pop
mov
in
lds
fidivs
cmp
mov
mov
mov
xchg
call
movsb
movsl
pop
mov
movsl
xchg
jle
dec
lods
sarl
fwait
nop
mov
mov
mov
inc
push
push
sbb
rcrl
and
stc
xchg
adc
mov
movsl
mov
popa
dec
pop
xchg
sbb
rclb
push
cltd
pushf
ret
imul
pop
jns
dec
ficomps
aam
push
sub
scas
sbb
and
fs
mov
mov
adc
clc
mov
or
movsl
sahf
fcmovnb
dec
mov
arpl
in
idiv
jp
enter
scas
fcoms
sahf
daa
mov
movsl
xor
jbe
xchg
out
xchg
xor
pop
stc
jle
and
mov
sahf
nop
in
outsb
in
aad
enter
xchg
lahf
fsub
mov
sar
insl
push
inc
cmp
xor
mov
mov
push
pop
leave
in
ss
sahf
mov
rorb
push
inc
outsl
repz
mov
mov
inc
mov
mov
movsl
pop
das
xchg
stc
dec
insl
lahf
sub
xchg
lret
js
pop
mull
scas
xchg
mov
jge
sbb
cmpsl
mov
scas
or
mov
lock
dec
jmp
lret
mov
cwtl
cmp
adc
int
cs
push
test
lea
cmp
fucomip
and
out
xchg
jmp
pushf
fldenv
sbb
add
mov
arpl
sub
stc
pop
gs
sub
mov
fsubrl
lcall
call
stc
loopne
fwait
and
jno
data16
lds
mov
insb
and
scas
add
adc
jp
and
cmp
mov
sbbb
dec
add
rcrl
and
rolb
or
arpl
cmpsl
push
sti
cmc
add
cmp
sbb
adc
call
pop
int3
scas
push
mov
sub
in
in
sar
int
movsl
xor
test
add
cltd
cwtl
sahf
push
movsb
movsl
mull
rorb
and
addr16
clc
mov
add
ret
push
movsl
das
sti
push
rcrb
negl
sub
mov
jg
cmp
sbb
out
enter
add
aad
xchg
mov
jl
add
filds
sbb
sub
pop
ror
movsl
test
jae
pushf
dec
jns
call
addr16
test
movsl
aas
and
or
push
sub
xchg
jno
movsl
mov
xor
sub
in
xor
add
scas
incb
xor
loope
xor
inc
fwait
in
icebp
aaa
loopne
jns
cmc
fisttpll
lods
mov
and
rolb
lcall
push
lods
mov
mov
orb
aad
pop
mov
push
movsl
jbe
adc
dec
mov
out
test
cmp
in
fdivs
in
iret
pop
inc
push
pop
or
les
in
das
test
sub
jmp
cmc
jmp
movsl
jge
mov
adc
sbb
movsl
hlt
lds
loopne
or
mov
fldl
sahf
lods
sbb
xchg
in
sbb
pop
in
mov
inc
addr16
lods
mov
mov
sbb
lods
movsl
push
pop
repz
adc
mov
or
lods
add
into
idivl
mov
shlb
das
and
popf
clc
dec
movsl
int
dec
js
xorb
cmp
fcomps
jecxz
adc
jg
dec
jnp
xor
loopne
xor
movsl
push
adcl
cmp
inc
pop
das
pop
notl
pop
test
sub
sbb
popl
icebp
cmp
lock
mov
add
and
ljmp
sub
or
jge
inc
sbb
stc
imul
sbb
cmp
lcall
push
les
mov
inc
lods
arpl
je
les
out
pop
leave
sub
jno
in
cwtl
sti
int3
scas
cmp
sbb
dec
jo
or
sbb
popa
test
mov
xor
cltd
and
mov
and
cmpsb
xchg
xchg
inc
repz
movsb
loope
das
fisubrs
pop
mov
cld
jmp
xor
shlb
mov
pop
repz
jns
cmc
mov
jno
jmp
and
loope
sub
in
and
mov
in
scas
imul
and
cld
fnstenv
fldl
push
insb
pop
punpckldq
sub
inc
std
dec
mov
xlat
adcb
push
outsl
cmc
push
push
jo
jo
mov
mov
mul
cmc
pop
jp
jo
add
jne
mov
aad
push
das
sahf
cwtl
push
popa
mov
leave
add
and
sub
adcl
mov
sbb
sub
push
push
mov
lods
push
xor
push
outsl
mov
in
sub
stos
ret
js
mov
lods
mov
test
movsl
jg
mov
movsl
sarb
jb
dec
cmp
movsl
sub
or
repnz
movsl
dec
jl
jo
inc
data16
push
inc
ja
dec
dec
pop
push
in
push
mov
lds
lret
nop
mull
outsb
sbb
fwait
test
movsl
jle
cli
xchg
testb
lcall
cmp
movsl
movl
or
xor
icebp
movsl
gs
xchg
pop
pusha
push
mov
test
movsl
dec
and
dec
pop
cmp
push
pop
imul
pusha
cmpsb
or
rcll
inc
stc
adc
in
pop
pop
lahf
pop
push
dec
insl
hlt
cmc
mov
sub
and
xlat
movsl
mov
push
cli
movsl
jno
jns
test
aaa
add
cmp
mov
outsl
mov
punpckhbw
rorb
movsl
insb
aam
jmp
movsl
pop
sub
jo
xchg
add
mov
mov
loope
lock
jbe
pop
clc
movsl
aam
xor
in
cmp
ret
jno
imul
dec
jae
movsl
mov
and
sub
leave
mov
pop
mov
push
movsl
pop
cmp
pushf
sub
add
push
pop
mov
mov
adc
mov
xchg
ss
xchg
xchg
movsl
jne
dec
pop
pop
push
hlt
push
movsl
pop
fnstsw
sub
imulb
movsl
inc
out
pusha
je
mov
xor
or
data16
jnp
jne,pt
add
out
mov
cld
aad
sub
xchg
movsl
mov
das
enter
repnz
in
fdivr
lds
mov
jge
dec
mov
into
lods
push
movsl
loop
add
push
movsl
adc
pop
jb
popa
or
mov
shrl
data16
scas
jae
popf
repz
imul
add
in
sub
int
mov
rcll
leave
mov
rolb
cmp
movsl
stos
cmp
adc
clc
push
cmp
jnp
mov
mov
mov
lahf
pop
adc
adc
test
test
or
lods
sbb
rolb
iret
dec
sbb
pop
movsl
scas
in
jl
mov
lods
movsl
enter
inc
sub
mov
mov
outsl
push
movsl
xor
clc
fldenv
sub
sahf
xor
movsl
jo
dec
stc
push
inc
orl
adc
inc
pusha
loopne
movsl
mov
sub
inc
sbb
loope
jp
xor
movsl
cwtl
repnz
pop
jmp
popf
bound
popa
clc
cli
dec
aaa
cmp
fisubrs
cmpsb
movsl
add
mov
xchg
sub
loop
movsl
jae
aad
dec
je
jp
cs
pop
imul
ret
push
movsl
ficoms
pop
aam
sbb
in
pop
inc
mov
adc
cli
cmp
sbb
mov
ds
movsl
jns
lahf
fsubp
notb
mov
jl
jle
inc
clc
pop
cmp
pop
inc
mov
movsl
dec
out
push
outsl
sub
in
push
shl
mov
or
rclb
movsl
cmp
xchg
fisubs
add
add
mov
stos
push
jnp
dec
movsl
cmp
mov
adc
int
js
push
xchg
test
pusha
negb
add
popf
xchg
repnz
aam
mov
adc
test
dec
and
sti
mov
out
dec
sbb
xor
scas
insb
fucom
notl
add
test
fldenv
repz
add
mov
xchg
cmovnp
movsl
sbb
bound
movsl
jb
jl
popa
in
and
inc
gs
insl
pop
mov
cmpb
out
or
movsl
in
mul
fs
pop
mov
inc
pop
mov
shll
mov
cmp
sub
std
inc
imul
push
popl
mov
js
sbb
daa
xchg
aas
mov
aas
lcall
mov
lret
pop
add
lds
pop
push
sbb
inc
cltd
arpl
in
das
frstor
in
sub
jl
adc
imul
and
das
insb
das
inc
sahf
xchg
shll
sbb
inc
sbb
in
jecxz
mov
std
cmp
lcall
ret
std
aaa
jno
jo
mov
xor
rcrl
inc
pushf
xor
enter
inc
leave
dec
inc
ficoml
add
sbb
shrl
sahf
in
push
icebp
dec
hlt
imulb
dec
pop
push
pop
mov
xlat
rcl
add
adcl
popf
inc
or
and
in
sub
enter
mov
ret
aam
es
jne
mov
mov
daa
inc
ds
in
div
pop
aam
push
mov
es
in
sahf
push
add
sbb
mov
pop
and
and
lret
adcl
sbb
cmp
sbb
or
mov
xor
cmpsb
icebp
scas
sbb
divb
mov
out
push
xchg
sbbl
scas
test
sub
in
in
pop
jae
bts
xchg
cmc
pop
sbb
push
repnz
mov
loope
test
jmp
and
push
push
subb
jp
and
and
inc
popf
or
arpl
mov
push
icebp
subl
mov
cwtl
dec
insl
jmp
clc
push
xor
mov
pop
mov
fucomp
jne
xchg
pop
movsl
xor
pop
sahf
fidivl
movsl
call
sbb
adc
popf
dec
jle
cwtl
loope
mov
icebp
rcll
int
mov
inc
fbld
test
or
movsb
lahf
movsl
sub
xor
add
mov
cmpsl
outsl
repnz
xchg
aam
dec
jp
sub
roll
bound
lock
adc
sbb
movsl
cmpsb
pop
add
aaa
cltd
movsl
ss
cmc
into
cmpsl
add
jns
and
sahf
in
dec
inc
test
or
cwtl
jmp
mov
pop
aaa
pop
adc
andb
mov
mov
jmp
cld
sbb
out
push
mov
out
sbb
mov
movsl
push
lahf
dec
push
daa
mov
movsb
mov
fisttpll
loopne
pop
push
add
push
out
mov
or
movsl
adc
mov
andb
xor
mov
stos
mov
mov
push
push
sbb
pop
fnstsw
mov
mov
cmpsb
std
adc
inc
mov
lds
movsb
jo
lods
push
mov
outsb
mov
pop
push
cmp
cli
sbb
out
mov
xchg
mov
je
orb
inc
imul
ljmp
stos
and
in
lock
xchg
push
xchg
lods
roll
or
mov
pop
lcall
jmp
add
movsl
jno
cs
xor
mov
jb
dec
arpl
fsubl
ljmp
nop
push
cmpsb
arpl
test
loope
hlt
inc
outsb
push
pushf
outsl
xchg
jmp
scas
mov
ss
test
pop
and
outsl
mov
scas
pushf
dec
movsl
es
fstpt
enter
sbb
cmp
sti
rclb
push
flds
insl
mov
push
movsl
mov
cmp
push
xchg
imul
aam
jbe
jb
add
movsl
imul
mov
movsl
or
mov
in
and
movsl
shr
jmp
mov
xlat
aam
push
xor
js
out
and
lock
imul
in
or
adc
mov
lret
jp
popf
inc
add
sub
lock
mov
shlb
fstps
and
jp
cld
jle
sbb
or
add
mov
leave
fwait
mov
jne
jnp
dec
push
mov
stos
cmp
ljmp
cmp
cltd
shlb
pop
xchg
fldt
dec
shll
pop
and
into
movsl
cmc
dec
dec
std
ljmp
cli
jo
lret
test
lods
rolb
nop
jne
dec
jae
lret
add
jmp
imul
mov
inc
jecxz
mov
mov
stos
cltd
cmp
movsb
aam
xchg
cmp
cmp
jle
loopne
adc
fisttps
push
call
cmp
inc
dec
lahf
mov
pop
in
lods
inc
and
jle
xlat
adc
lcall
cmpl
mulb
iret
pop
jo
ds
jne,pn
or
lods
dec
repnz
out
test
rcl
cmp
push
push
fcoms
jns
jo
ja
fdivl
aam
inc
inc
lds
mov
movsl
ret
out
loopne
mulb
push
sbb
out
mov
movsl
sbb
std
movsw
gs
enter
das
sahf
cmp
pop
add
bound
insb
imul
pop
cmc
icebp
lcall
pop
adc
jno
movsl
xchg
xor
idivl
scas
mov
pop
mov
imul
gs
dec
add
loop
push
lods
lds
ret
pop
sbb
lock
rep
push
movsl
cmp
loop
mov
push
or
repnz
or
or
loope
jp
je
les
hlt
jg
mov
cs
mov
stos
dec
movsl
cmpsl
xchg
jbe
jl
inc
hlt
xlat
inc
dec
pop
inc
lods
and
ja
mov
scas
pop
ljmp
rcll
lock
and
inc
jg
dec
sti
inc
add
cltd
fisttpl
dec
movsl
jnp
stos
js
je
lock
push
fwait
sbb
fisubl
add
or
xchg
mov
mov
movsl
push
add
test
cmpb
xorb
aam
push
pop
imul
sbb
lods
sbb
pop
inc
push
outsl
cmp
sahf
jne
repz
cli
aaa
std
xchg
daa
icebp
inc
pop
cmp
xchg
and
and
push
fsts
mov
pop
jmp
out
fs
fadds
movsl
std
shlb
adc
movsl
adc
in
aas
push
dec
cld
and
movsl
out
call
movsl
xor
inc
xor
shll
movsl
ret
insb
inc
jae
sub
and
loop
inc
jo
mov
iret
push
movsl
inc
or
in
out
pushf
mov
lods
rorb
cltd
testl
inc
mov
leave
jp
xchg
movsl
mov
mov
xlat
or
movsl
movsb
mov
mov
rcrl
push
dec
jg
dec
movsl
push
ret
inc
jne
shld
pop
mov
xchg
out
pop
mov
and
pop
lds
and
nop
jle
gs
mov
jl
pop
movsl
enter
xor
ds
mov
in
push
loopne
xchg
mov
fcomps
mov
add
pop
mov
fisttpll
int
out
and
dec
jb
jo
mov
mov
inc
jbe
movsl
sahf
fs
scas
mov
push
mov
pop
dec
inc
xlat
scas
int3
mov
and
inc
mov
daa
test
out
jae
inc
sub
jecxz
add
in
call
int
push
adc
sbb
sbb
mov
sahf
fcoml
jns
mov
mov
push
jne
mov
imul
or
rclb
rcl
test
add
add
imul
dec
cltd
jnp
xor
cmp
aad
into
push
xorl
sbbl
movsl
stos
jbe
scas
adc
mov
sahf
popf
sbb
test
fldenv
lea
xor
mov
dec
out
movsl
mov
jecxz
lahf
movsl
test
popa
jne
ret
les
in
adc
jl
push
movsl
inc
dec
rcll
and
lds
addb
lods
mov
pop
pop
insb
fmul
call
jo
in
fwait
stos
popf
and
xchg
fs
sub
popa
jb
insb
add
mov
mov
lret
sub
iret
int3
sbb
and
cli
mov
lds
xor
leave
jae
mov
sahf
inc
aaa
gs
mov
mov
cmc
or
movsl
and
cmp
xor
cmpsl
movsb
imul
shl
pop
movsl
jno
fxch
jp
stc
sti
lods
fwait
movsb
mov
sbb
outsb
inc
lock
inc
test
test
xchg
imul
pop
rcr
mov
out
adc
and
test
movsl
fistps
lea
xchg
fistpl
sub
cs
and
ret
xor
mov
xchg
inc
push
pop
mov
shlb
je
icebp
dec
mov
pop
inc
cwtl
fnstsw
jecxz
pop
mov
dec
and
xchg
loopne
ret
daa
mov
and
jecxz
mov
and
jne
cmpsb
enter
xchg
pop
insb
lds
incb
loope
in
and
jb
imul
mov
das
mov
sbb
push
push
dec
mov
xlat
outsb
add
out
xlat
jp
daa
js
bnd
daa
aad
icebp
inc
rcll
dec
mov
imul
adc
test
mov
mov
adc
addr16
nop
movsb
push
lock
sbb
jp
or
mov
icebp
mov
ds
cltd
add
cmpsb
aaa
and
or
cmp
int
dec
cmp
add
mov
cwtl
jo
into
shr
aad
jbe,pn
cmp
push
sahf
in
cmc
idiv
icebp
sub
mov
mov
and
in
xlat
dec
jne
sbb
jns
in
lock
daa
outsb
rcrl
pop
sahf
pop
pop
fidivrs
sbb
cmpsl
arpl
test
test
xchg
mov
mov
stc
jns
negb
pop
aaa
aam
in
and
int3
dec
mov
divb
dec
sbb
je
mov
mov
in
ret
sahf
push
mov
xchg
lahf
mov
dec
or
sahf
or
test
cmpsb
and
cmc
pusha
js
push
xchg
mov
xchg
xlat
or
push
movsb
call
cmp
into
xor
lret
fistpl
push
inc
xor
add
xchg
out
ret
pop
inc
aad
fcomps
xchg
out
mov
mov
movsb
xor
in
repnz
dec
adc
fptan
les
ret
dec
jns
fidivs
es
test
xlat
jmp
pushl
jp
sub
pusha
loopne
stos
mov
std
loope
into
pop
decl
mov
shlb
jbe,pt
scas
dec
in
pop
add
sbb
mov
cmp
jae
shrl
pop
negl
push
sub
je
movsb
add
mov
lds
popa
jnp
dec
dec
mov
and
std
jb
jb
pop
lds
fistl
addr16
out
sbb
loope
xor
hlt
mov
ret
std
xor
movsl
pop
or
pop
iret
cs
cmc
push
sbb
xchg
mov
repz
int3
icebp
jno
xor
mov
loope
daa
sbb
sbb
mov
sub
sub
and
mov
mov
mov
and
sub
or
sbb
sub
lahf
inc
leave
insb
lods
leave
sbb
addl
insl
xchg
flds
add
std
add
mov
mov
xor
roll
movsl
sbb
dec
dec
jl
adc
test
push
pop
dec
push
pushf
test
loop
icebp
fidivrs
push
and
rcrb
in
jge
jo,pt
and
sbb
sbb
cli
cld
popf
jmp
jp
pushf
hlt
jno
idivb
rcl
inc
cwtl
xchg
sub
pop
fsubrl
stos
mov
push
nop
pop
lods
and
ja
and
sbb
sti
cmpsl
mov
jmp
daa
inc
push
jns
call
pop
cmp
adc
xor
mov
pop
sbb
jo
inc
push
movsl
into
pop
push
imul
or
mov
pop
addr16
inc
sub
clc
jnp
ss
je
inc
out
jp
scas
dec
mov
insb
sub
sar
pop
sti
push
or
mov
psubd
xchg
fiadds
mov
push
xchg
pop
std
out
jno
test
test
pop
les
sbb
fmuls
jecxz
or
test
and
add
nop
rcrl
test
repz
xor
mov
dec
jg
sarl
movsl
mov
sub
sub
jne
stos
adc
push
mov
inc
in
fs
imul
push
cwtl
ds
xor
mov
mov
rcrl
lret
lcall
bound
add
mov
adc
sub
in
insb
mov
or
and
dec
and
fildll
leave
pop
shlb
cmc
sbb
aaa
or
scas
pushf
pop
std
loop
in
cmpsl
and
pushf
shl
stos
push
mov
pop
popf
mov
jmp
fildll
int
aad
sbb
loopne
inc
adc
aas
dec
push
xor
push
pusha
push
andl
or
cmc
pop
jne
cwtl
inc
loope
xorl
test
jae
and
or
leave
addb
add
push
insb
pop
dec
xchg
jnp
push
lcall
jle
push
icebp
sbb
or
int
sbb
rclb
mov
cmp
mov
lret
mov
fdivl
pushf
cmp
mov
lock
xchg
add
xor
jne
mov
mov
cwtl
les
jmp
mov
ja
int3
push
movsl
push
xorb
push
mov
pop
add
push
in
and
cmp
mov
popa
xchg
sub
pop
and
fcmovb
or
xchg
fstps
push
movsl
sbb
add
cmp
movsl
shl
xor
push
mov
addr16
lock
movsl
dec
inc
xor
xchg
mov
xlat
jp
test
icebp
mov
mov
or
imul
jmp
js
jle
hlt
mov
cltd
pusha
mov
movsb
sbb
mov
mov
into
movsl
push
mov
mov
mov
movsl
sbb
iret
out
mov
adc
mov
inc
lods
test
ret
sbb
fbld
lret
out
dec
push
jne
mov
insl
mov
sbbl
in
ror
mov
ficoms
pop
loop
adc
xor
or
fistps
cli
push
imul
dec
lahf
cltd
lods
lds
test
mov
push
mov
mov
das
add
xor
lds
dec
push
cmp
xchg
push
or
enter
sub
mov
sbb
inc
in
dec
mov
jae
inc
pop
scas
jle
into
cmpb
sahf
inc
lahf
xor
sub
lods
movsl
lds
imul
fidivrs
clc
sbb
ljmp
pop
cmp
jns
xorl
outsl
cmp
add
ss
jbe
cmp
push
push
movsl
cwtl
jle
outsb
dec
push
ret
xor
jmp
xchg
je
pop
push
movsl
jb
adc
int3
lcall
outsl
pop
dec
or
mov
aad
popf
stos
or
in
push
jnp
in
idivb
roll
push
sbb
aam
cwtl
mov
into
aad
les
scas
insb
movsl
scas
cmovle
push
cmpsb
dec
lods
push
movsl
mov
call
sbb
icebp
scas
divl
cld
mov
fwait
movsl
and
dec
icebp
jmp
testb
out
rcr
cmp
push
xlat
ljmp
sub
and
mov
jp
mov
and
push
dec
mov
cmpsl
pop
jge
jbe
shlb
xchg
jns
inc
fildl
les
push
call
add
mov
sbb
mov
sahf
mov
mov
adc
roll
cltd
movsl
push
in
das
xor
inc
jle
mov
int3
fincstp
jns
outsl
xor
pop
lret
xchg
jmp
push
push
xlat
fwait
jne
add
jge
neg
lsl
popa
bnd
cmp
and
shll
jne
sub
les
ret
je
mov
out
pop
xor
jmp
mov
movsl
add
pushf
insl
sbb
adcb
enter
lret
bound
pop
adc
inc
mov
push
icebp
adc
add
mov
test
cmp
in
adc
movsl
rcrb
test
das
jmp
xchg
pop
mov
movsl
sar
jae
andb
in
push
popf
ljmp
pop
movsl
adc
movsl
enter
push
test
lock
in
je
lahf
pushf
or
mov
and
mov
shrl
int
cmp
in
push
movsl
scas
push
mov
jl
iret
dec
movsl
or
mov
mov
xchg
pop
sub
mov
fnstenv
rol
xchg
mov
cltd
mov
int
nop
mov
mov
mov
aam
inc
add
movsl
in
dec
dec
hlt
rol
in
movsl
loopne
cmpsl
mov
push
ja
fcmovnu
jne
mov
movsl
out
loope
outsl
jl
push
int
movsl
das
lea
cmp
out
jae,pn
jns
push
sahf
adc
testl
and
mov
lock
imull
and
or
cmpsb
ret
mov
inc
pop
stos
mov
mov
pop
pushf
rorb
pop
mov
ljmp
add
scas
cwtl
ds
push
out
jae
push
xor
cmpsb
inc
mov
movsl
dec
pop
mov
hlt
adc
cmp
enter
xlat
std
rorb
movsl
popf
push
aad
adcl
lock
dec
mov
push
fisubrs
dec
add
xor
push
dec
movsl
cmp
stos
syscall
stos
imul
test
cmp
lea
xor
mov
cmpsb
insb
pop
add
or
out
mov
mov
pop
dec
int
iret
adc
jp
pop
ss
lods
push
mov
jmp
out
lcall
insl
movsl
sub
xchg
mov
inc
jecxz
scas
fstps
loope
xchg
lahf
sahf
dec
ret
mov
arpl
popf
test
sbb
scas
movsl
inc
dec
mov
jmp
fldt
sbb
cmp
lea
push
repz
fnstenv
setl
clc
movsl
mov
adc
in
mov
xor
popa
imul
test
cmc
sbb
ret
cmovge
fxch
sbb
xchg
or
mov
in
cltd
shll
test
push
out
fbld
jg
jno
mov
scas
pop
xchg
push
push
cltd
loop
test
sbb
xor
pop
mov
into
pop
dec
lods
movsb
push
divb
movsl
xor
mov
lahf
and
mov
push
popa
pop
and
shrl
mov
movsl
fs
icebp
xor
pushf
and
popa
xor
cmp
ss
test
push
pusha
rol
cli
pop
xlat
inc
test
movsl
jnp
cmp
mov
stos
or
push
clc
enter
mov
mov
movsl
test
dec
int3
cmp
lret
or
pop
jae
scas
lods
xchg
movsl
std
pop
cmp
dec
xlat
fadds
pop
and
sbb
push
mov
roll
movsl
es
jge
std
adc
and
js
mov
pop
mov
movsb
adc
or
push
add
movsl
fwait
mov
add
aas
sbb
mov
cs
in
addr16
movsb
pop
push
out
movsl
mov
cmpsl
shr
ja
test
mov
jbe
mov
and
pop
or
inc
movsl
pop
mov
and
jnp
in
mov
jmp
mov
movsl
mov
ret
sbb
xchg
pushf
sbb
into
mov
shrb
or
movsl
and
add
lret
test
pmullw
movsl
xchg
in
testl
push
mov
icebp
mov
jge
out
push
sbb
movsl
adc
add
xchg
test
pop
hlt
aas
cmp
lcall
push
xchg
sub
into
cmp
dec
push
jae
scas
movsl
sbb
or
pop
xor
frstor
xor
xchg
xor
in
movsl
scas
mov
mov
sbb
cwtl
cmp
lods
test
push
cmp
pop
repz
cli
in
clc
adc
push
and
lods
addr16
inc
test
or
icebp
movsl
mov
mov
movsl
repnz
ret
shl
movsl
in
cmp
movsb
fwait
mov
in
popf
unpcklps
das
dec
cmp
or
movsl
xchg
inc
mov
nop
test
sub
in
into
je
dec
movsb
lds
mov
movsl
adc
lret
outsl
mov
mov
repnz
cs
pop
cmp
mov
movsl
mov
scas
inc
jecxz
int3
jo
into
jb
sbb
movsl
fists
xor
mov
xchg
movsl
mov
and
movsl
lea
cmp
pop
push
push
jbe
je
dec
push
nop
push
inc
pop
and
daa
sub
jle
dec
pop
cmc
inc
icebp
sub
inc
lret
insb
push
pop
cld
cmpsl
in
pop
mov
lcall
push
mov
lods
mov
movsl
testb
mov
xor
jmp
mov
xchg
xlat
shlb
push
fcomip
popf
dec
cmp
push
in
sub
jno
push
and
sti
pushf
sbb
movsl
pop
cwtl
scas
sbb
aam
jle
jge
je
adc
inc
lods
rcrb
fs
inc
daa
sahf
movsl
sbb
ja
jl
in
std
movsl
mov
hlt
testl
mov
stos
cmp
jmp
movsl
xchg
lcall
pop
leave
xor
xchg
inc
mov
inc
xchg
cmp
sub
xor
gs
sbb
lea
pop
in
sbb
repz
lcall
cmc
out
xlat
push
dec
daa
sub
add
outsb
jg
jne
call
mov
loope
add
in
mov
negb
in
loopne
push
push
movsl
xorl
push
dec
add
fisubrl
pop
movsl
ljmp
cld
sbb
add
cltd
in
and
cld
inc
xchg
and
lret
and
shrb
fnstsw
xor
loope
push
jbe
dec
jno
pop
popf
jmp
insl
fnstenv
sbb
pop
movsl
stos
xchg
daa
xor
push
jbe
movsl
jle
jl
sbb
pop
jge
arpl
xchg
push
sbb
test
push
lods
jo
pop
xor
repz
and
test
cmc
jo
cwtl
movsl
lret
test
cli
add
cmp
das
fbld
lea
movsl
hlt
inc
push
popa
or
cmpb
xchg
ret
sub
pop
js
in
push
jle
sub
movsl
pop
je
dec
jp
sbb
pop
mov
mov
icebp
cmpb
cli
movsl
jge
adc
aaa
test
mov
xor
mov
mov
movsl
nop
shr
divl
stc
in
dec
notb
movsl
shll
add
push
arpl
lahf
movsl
xchg
popf
inc
sub
mov
repz
fdivrl
mov
flds
jno
pop
jg
mull
sub
in
leave
rcrl
jo
adc
movsl
lcall
jb
mov
jbe
xchg
movsl
sahf
sub
sbb
leave
shr
shl
movsl
sbb
stc
dec
movsl
xor
sti
xor
pop
movsl
rcll
add
jmp
sub
ficompl
imul
mov
or
movsl
mov
sbb
ds
mov
test
in
dec
lods
stc
fsubrs
and
inc
cld
and
aas
push
dec
imul
mov
push
inc
push
and
mov
sti
shl
jo
int
dec
add
xchg
adc
hlt
popf
xor
mov
aam
out
movsl
and
push
xchg
add
aas
xchg
mov
leave
idiv
push
inc
in
movsl
sbb
fisubs
aam
sub
jp
or
mov
pextrw
orb
sahf
aad
jle
mov
cmp
std
push
pmulhw
aad
jmp
pop
mov
stos
fnstenv
dec
cmpsl
les
imul
push
dec
pop
or
shl
nop
xor
test
cmc
int3
push
cmp
push
xchg
mov
fincstp
lods
push
data16
lods
lds
movsl
jns
mov
add
mov
cmc
jge
adc
leave
pop
movsl
lds
inc
fbld
dec
out
in
xorb
rclb
mov
or
xor
insl
jno
cmp
mov
mov
movsl
scas
sbbb
jno
push
mov
cmp
arpl
aaa
lret
pushf
and
jle
mov
jp
jle
arpl
inc
scas
in
mov
outsl
movsl
mov
loope
test
and
jp
inc
les
repz
stos
mov
out
in
xor
packuswb
pop
xor
inc
sbb
int
stc
jo
add
adc
ja
inc
nop
mov
adc
jmp
movsl
xchg
js
mov
xor
mov
mov
movsl
and
subl
icebp
fdivrl
mov
fldl
push
lock
and
mov
and
mov
jne
dec
je
pop
pop
call
stos
xchg
std
cli
stc
test
movsl
adc
or
in
xor
add
lods
movsl
inc
or
push
adc
fdivrp
movsl
ror
mov
out
lds
adc
push
outsl
movsb
lahf
movsl
aas
test
movsl
jns
loopne
test
jg
jnp
fstps
mov
xchg
icebp
inc
jg
fnsave
sbb
jns
cs
movsl
pop
lock
icebp
nop
test
mov
xchg
inc
das
pushf
add
and
ret
adc
push
push
aaa
sub
and
cwtl
pusha
dec
loopne
push
xor
xchg
movsl
xor
mov
test
icebp
roll
clc
xchg
scas
or
add
es
mov
popf
cmp
xchg
and
pop
out
in
mov
adc
les
scas
out
out
jbe
orb
push
push
xchg
inc
popf
xchg
out
fistps
add
test
daa
out
movsl
cmp
and
mov
sti
ja
pop
dec
fldenv
pop
dec
lds
out
lods
into
scas
andb
imul
inc
mov
inc
push
jbe
lcall
lock
shr
dec
mov
cmpsl
leave
cli
movsl
xor
arpl
movsl
xchg
lcall
pop
inc
btc
movsl
hlt
aad
or
jne
pop
fldl2t
or
aas
sahf
movsl
mov
movsl
mov
dec
fdivrl
popf
in
in
aad
jmp
xor
fisubrs
bound
jbe
ljmp
dec
movsl
jae
cmpsl
mov
aad
test
push
int
mov
js
pushf
movsl
mov
push
xor
mov
inc
sbb
or
int
les
and
push
cmp
cmp
mov
sbb
ret
adc
scas
push
xchg
push
jne
fs
arpl
ja
cli
inc
and
mov
cld
leave
cmp
mov
sub
push
adcb
aas
popa
inc
movsl
filds
int
test
fisubl
test
cli
lret
in
int
hlt
xchg
imul
jp
pop
push
movsl
xchg
sub
fwait
inc
ret
movsl
mov
in
fisttps
inc
xor
or
movsl
stos
adc
and
iret
cmpsb
mov
cmp
out
mov
push
add
bound
add
sbb
in
inc
int3
movsl
sbb
mov
sub
pusha
out
icebp
mov
pusha
adc
adc
cmp
mov
mov
outsb
or
mov
xchg
ljmp
fwait
sub
ja
imul
xchg
inc
loopne
movsl
shr
mov
push
movsl
aaa
xor
decb
loop
dec
insb
into
xchg
icebp
mov
mov
sub
and
enter
in
jge
repnz
fists
mov
movsl
or
loopne
jg
es
fs
cmp
xlat
movsl
sahf
stos
pop
and
lods
push
mov
pop
or
mov
add
sub
int
inc
test
dec
pop
pop
xorl
add
xlat
cmp
popf
cmp
mov
sbb
ja
icebp
jb
cltd
stos
mov
inc
sub
push
int
sbb
fdiv
jmp
mov
or
jmp
pop
sbb
addl
dec
cmp
rclb
cli
out
sbb
lock
imul
dec
js
int3
sub
adc
movsl
jnp
cli
icebp
push
lea
mov
shlb
sbb
dec
lods
adc
sub
or
shll
rcrl
push
add
nop
aad
mov
aaa
testl
or
xchg
cwtl
aam
pop
movsl
sub
movsl
or
cli
mov
movsl
aam
in
pop
orb
fistps
rcrl
dec
arpl
into
rol
cli
dec
test
movsl
jmp
xlat
add
stc
pusha
icebp
popf
popl
xchg
push
rcl
sbb
cs
aam
fdivrl
test
test
repz
orb
adc
or
xor
movsl
ret
xor
push
xchg
sbb
frstor
inc
outsl
push
insb
jecxz
in
sti
ret
movsl
mov
xor
inc
scas
fadds
scas
xchg
movsl
add
ja
movsl
jnp
xor
out
push
jno
dec
inc
sub
inc
adc
xchg
loopne
push
into
mov
loope
out
fstpt
pop
int
sahf
mov
mov
jl
fildll
adc
jecxz
shlb
fsubs
popa
enter
add
mov
dec
or
pop
fldl
mov
adc
xor
cmc
bound
andl
dec
add
sahf
fwait
insl
loop
lds
movsb
scas
add
int3
mov
movsl
adc
pop
test
jge
fsubs
push
add
mov
mov
pop
movsl
dec
arpl
dec
push
jecxz
popa
sbb
add
cmpsl
mov
in
imul
ljmp
shlb
xchg
movsl
das
pop
jbe
notb
xchg
aad
add
and
nop
xchg
into
mov
or
in
lods
cmp
mov
std
adcl
repnz
lcall
scas
stos
pop
lahf
mov
lods
push
mov
mov
xor
inc
lcall
xchg
cmpsb
mov
cmp
test
hlt
cltd
jbe
aam
add
notb
clc
and
hlt
fucomp
insb
in
ret
out
movsl
adcl
jbe
sahf
dec
scas
push
out
stos
popa
incl
mov
icebp
jnp
and
insl
sub
addr16
ret
lcall
shll
inc
inc
or
into
pop
push
mov
adc
and
jecxz
je
iret
sbb
pop
scas
fucom
jl
fwait
mov
fstl
hlt
pop
inc
dec
aad
lds
push
mov
mov
loop
lret
dec
sub
pop
sahf
fsubs
xchg
mov
inc
cmpsl
es
mov
movsl
pop
and
xchg
in
sub
sub
cltd
xchg
ret
in
push
cmp
cmp
imul
jl
lods
push
fs
lock
mov
leave
test
jl
xor
sysret
js
popf
fwait
xor
rcrl
mov
cmp
xchg
pop
call
pop
ljmp
sbb
andl
pop
mov
jmp
mov
pop
ds
or
mov
push
and
xor
aad
out
jp
out
cmp
cmc
scas
sbb
sbb
add
mov
ficompl
mov
add
adc
sub
pop
movsl
js
repz
xor
add
push
xchg
aas
pop
les
movsl
aaa
add
movsl
lahf
jbe
mov
or
cmp
pushf
jae
pusha
js
lret
mov
cmp
pop
fs
jns
cmp
adc
and
leave
ja
adc
scas
fnsave
sahf
jl
and
pushf
push
in
jg
adc
push
insb
imul
stos
pop
mov
xchg
fisttpll
push
jmp
movsl
in
xor
adc
mov
xor
das
movsl
out
lcall
sti
in
loope
jecxz
add
movsl
in
arpl
jne
and
lock
pop
sbb
das
mov
cmp
in
insl
dec
roll
push
in
jp
mov
aad
add
sbb
ror
test
and
aam
pop
pop
or
scas
mov
daa
stc
inc
in
cmp
mov
xchg
test
cld
hlt
shlb
mov
push
movsl
aas
mov
jae
fildl
and
fisubrs
out
jg
movsl
inc
insl
pop
cmp
jecxz
andb
test
je
push
dec
jp
movsl
out
jecxz
in
int3
movsl
add
fstp
sahf
arpl
les
mov
dec
bound
dec
movsl
inc
or
push
cmpb
xor
mov
aad
movb
lret
cwtl
lock
out
mov
fdiv
fldl
subl
mov
mov
movsb
sbb
int3
or
icebp
les
add
mov
mov
pushf
decl
in
mov
movsl
xchg
jg
je
push
add
jb
fistl
fucom
in
jno
shl
movsl
ljmp
jne
xchg
cltd
mov
imul
push
mov
movsl
gs
jg
dec
outsb
sbbb
stos
movsb
add
push
jnp
mov
scas
sub
jle
icebp
nop
jmp
sbb
pop
mov
xchg
inc
lea
std
lcall
sti
movsl
inc
push
sbb
xchg
fsts
cs
xchg
sahf
test
mov
xor
movsl
roll
push
int
leave
jne
jns
insl
addr16
add
out
mov
inc
shrb
int
movsl
adc
lret
cmpsb
pop
movsl
imul
fsubl
pop
ret
test
add
scas
push
sub
insb
lods
in
sbb
movsl
jno
pop
inc
mov
inc
movsl
loopne
loope
lret
xchg
call
movsl
lret
pop
je
or
push
jg
dec
shrb
pop
sub
cmp
push
and
hlt
dec
push
in
xlat
push
lret
mov
sub
addl
fsub
ficomps
cli
xlat
add
dec
push
jno
push
int
mov
pushf
jmp
or
scas
mov
jl
pop
in
add
movsl
mov
pop
imul
dec
int
ljmp
fldl
aam
mov
adc
sbb
pop
std
loop
xor
imul
movsl
mov
xor
sbb
mov
or
test
lods
and
pop
stos
movsl
mov
bound
pushf
loope
movsl
rcrl
push
cwtl
out
dec
pop
ja
icebp
out
xor
daa
daa
jmp
repz
movsl
xchg
scas
mov
xor
xor
sub
lret
add
test
cwtl
into
sti
movsl
or
in
stos
push
movsl
hlt
fs
scas
das
cmp
movsl
mov
sbb
movsl
inc
loop
sbb
push
mov
mov
loopne
sti
mov
pop
mov
cmp
out
mov
mov
sarb
dec
dec
jg
popa
jo
xor
pop
ja
sbb
lds
mov
in
ud1
ja
add
pop
je
xchg
push
dec
outsl
ficomps
in
out
cmc
mov
cld
in
std
pop
movsl
call
arpl
dec
movsl
xor
outsb
cmp
insb
mov
pop
cmpsl
mov
in
std
movsb
mov
movsl
sub
stos
inc
loopne
test
popa
ja
js
imul
stos
fs
aam
mov
inc
xchg
xchg
mov
adc
jbe
pop
int
jle
insb
repz
xchg
push
hlt
mov
movsl
cmp
test
fisubl
pop
out
mov
nop
lds
jge
pop
push
movsl
cmp
out
dec
sub
jo
movsl
pop
xor
gs
pusha
lods
mov
lahf
push
dec
adc
mov
fs
xchg
insb
mov
out
movsl
sti
push
imul
dec
movsl
dec
ljmp
movsl
cmpsb
lret
push
jle
call
lods
sbb
xchg
or
sbb
dec
mov
test
lret
mov
inc
pop
mov
movsb
push
orl
into
shl
loope
inc
movsl
ss
jmp
movsl
insb
pusha
int3
mov
movsl
shlb
and
sbb
rcrl
xchg
xor
cmpsl
movsl
fisubl
movsl
pop
add
leave
in
adc
sub
test
mov
fstpl
cmc
pop
arpl
push
add
movsl
call
push
in
movsl
outsb
sahf
test
and
add
fstl
out
adc
mov
ret
movsl
jmp
loop
push
mov
sahf
push
aam
fldl2e
movsl
aad
sbb
dec
xlat
sti
les
fbstp
je
movsl
mov
scas
push
pop
popf
push
in
or
in
xchg
xorb
stos
fsubrl
mov
in
leave
wbinvd
mov
mov
mov
push
mov
adc
and
test
outsb
movsl
pop
mov
and
pop
jp
inc
arpl
sbb
test
pop
pop
std
sub
movsl
adc
mov
mov
cmp
aad
mov
inc
out
push
movsl
fistpll
repnz
push
sbbb
add
cltd
shrl
call
enter
ror
pop
jmp
repz
dec
jg
xchg
mov
push
xchg
xor
rcll
or
daa
rclb
xchg
xchg
inc
ds
bound
cmp
pop
mov
mov
aam
cltd
jmp
or
movsl
sub
mov
movsl
jecxz
xor
pop
fucomip
jl
xlat
dec
jbe
sub
movsl
iret
push
mov
pop
pop
dec
or
cmp
or
cmp
insl
mov
subb
imul
shlb
mov
popf
out
lods
movsl
imul
into
dec
and
sub
sbb
out
or
subb
in
inc
adcl
pop
imul
sti
sbb
dec
scas
sahf
pop
fs
lcall
add
and
and
sbb
lret
xchg
in
xchg
rcrl
xlat
stos
loopne
aad
mov
or
sbb
mov
xor
mov
jnp
rolb
or
dec
in
or
imul
xchg
and
call
mov
mov
movsl
icebp
loopne
stos
mov
lea
and
rclb
in
push
in
mov
push
sub
jecxz
repnz
lea
ret
or
pusha
jns
into
jge
imul
add
movsl
or
xor
inc
dec
fisubl
or
adc
movsl
jne
xchg
xchg
int
xor
ja
mov
outsb
pop
jnp
leave
in
jecxz
adc
into
push
sub
mov
mov
js
sahf
rorb
pop
lock
jmp
push
decb
jno
push
pop
gs
popf
pop
xchg
inc
ljmp
pop
fbld
mov
test
shl
mov
push
push
or
sub
cmp
stc
aam
add
loop
xor
xor
leave
in
add
lahf
sub
inc
mov
insl
dec
xchg
imul
in
xor
add
loopne
cmc
fists
pop
into
scas
movsl
movb
icebp
aas
mov
and
cmpsl
testl
cmp
leave
scas
iret
repz
or
sub
mov
jp
filds
test
cs
add
fldcw
cwtd
adc
adc
sbbl
xor
cmpsl
mov
sbb
inc
movsl
repnz
pop
jl
pop
pop
and
sahf
mov
das
mov
sbb
xchg
or
sub
mov
adc
mov
test
jmp
fsubrs
mov
aaa
movsl
enter
add
inc
gs
cmc
nop
sub
movsl
push
sbb
jne
mov
inc
movsl
xchg
ljmp
mov
sbbb
loopne
push
adc
add
in
cmp
lret
xchg
mov
mov
or
std
aad
push
cmpsl
lods
test
push
movsl
pop
ja
sub
lcall
mov
mov
mov
in
push
call
xor
movsl
sbb
dec
push
xchg
jo
adc
sub
leave
inc
cmp
mov
jge
nop
das
xor
mov
stos
inc
mov
inc
sub
xchg
test
out
movsl
ss
sub
pop
jae
lds
add
sub
xor
stos
xor
ds
fiadds
arpl
out
dec
and
cli
add
lds
mov
popf
les
jle
shll
dec
dec
cmpsl
sbb
jbe
and
movsl
push
pop
ret
xor
fs
jmp
inc
in
mov
nop
movsl
pushf
dec
mov
in
loope
fldenv
cld
out
lods
popa
pop
movsl
imul
xor
movsl
mov
stos
inc
rcrb
push
adc
fucomip
jno
movsl
es
popf
lret
mov
js
push
jne
out
daa
cmp
aaa
movsl
jns
add
aaa
movsl
xor
cmp
into
push
mov
cltd
fsubp
lods
adcl
mov
or
lods
jo
pop
cmc
std
jno
loopne
movsl
pop
mov
xor
add
mov
pushf
aam
push
lock
fs
inc
nop
pop
mov
movsl
mov
xchg
pop
pop
addl
or
pop
movsl
inc
xchg
mov
and
xor
mul
cmpsb
mov
or
cmp
shlb
pop
jmp
addr16
imul
pop
mov
movsl
jbe
push
fdivl
movsl
add
add
or
and
ss
cmp
daa
movsl
xchg
cmp
mov
push
xchg
lret
lea
push
shll
ficoml
mov
movsl
xor
and
fs
dec
lcall
in
jo
pop
jle
jl
and
lds
jecxz
inc
fisttpll
dec
push
pop
ja
aas
push
jbe
cmp
in
std
iret
jo
movsl
clc
mov
movsw
inc
sub
and
movsl
mov
enter
in
ret
sti
fldt
popf
fwait
sbb
xor
inc
mov
roll
in
lock
mov
mov
in
pop
jp
inc
or
in
daa
and
jmp
push
and
xor
dec
push
notl
outsb
mov
movsl
pop
sbb
push
stos
je
fbld
loopne
in
clc
movsl
leave
shl
in
mov
adc
shrd
fcomip
xor
push
mov
shl
mov
out
into
sbb
or
mov
insl
push
inc
mov
movsl
cmpsl
xchg
push
lcall
mov
jno
es
sub
pop
movsb
movsl
xchg
mov
fucomp
shl
pop
pop
sahf
xor
cmc
aaa
mov
loope
sbb
jae
flds
mov
mov
sbb
stc
enter
int3
sbb
movsl
mov
inc
imul
jl
or
out
and
cmp
add
sti
xor
pop
stos
sub
loope
push
int3
add
data16
jae
mov
adc
push
lock
and
dec
imul
adc
cmovne
andb
lds
neg
and
notb
popf
ss
xor
mov
cmpsl
push
insl
jg
or
cmp
pushf
arpl
negl
mov
dec
and
pusha
adc
mov
sti
mov
push
mov
cld
loope
jecxz
xchg
fildl
in
rorl
jle
mov
jmp
xchg
rsm
and
adc
lock
aam
jne
mov
sbb
cmp
mov
xor
std
mov
xchg
stc
xlat
cli
push
mov
sbb
aaa
ret
cmp
mov
pop
jp
cli
out
out
add
ds
jle
movsl
ret
mov
lret
ljmp
mov
add
mov
inc
add
faddl
out
add
das
lahf
call
rcll
mov
fadds
lds
push
or
mov
xchg
cmc
cmp
add
pusha
adc
jp
mov
out
pop
sub
les
movsl
icebp
lea
lods
movsl
sarb
push
movsl
mov
sti
adc
lods
xchg
xor
mov
movsl
outsl
loopne
and
dec
push
movsl
jo
das
and
ret
lods
pop
movsl
cmpsl
jnp
mov
mov
loopne
leave
cmpsb
inc
xor
fnstcw
movsl
push
mov
pop
mov
cmp
fwait
sub
jb
dec
adc
sti
loopne
lds
fwait
mov
jp
or
xor
jg
in
sub
pop
fwait
movsl
and
adc
add
stc
cmp
or
outsl
or
mov
jl
jg
push
inc
mov
je
repz
test
adc
movsb
movsb
fwait
movsl
ljmp
in
movsl
mov
xor
cmp
mov
ret
adc
jg
xor
lret
push
mov
movsl
pop
sbb
scas
or
mov
xor
adc
adc
cmp
and
sub
outsl
imulb
adc
movsl
mov
mov
jl
push
push
insb
into
inc
int
mov
and
incb
movsl
aam
xchg
arpl
mov
shrb
loope
in
sub
movsl
adc
insl
dec
call
in
cmp
mov
or
scas
jno
sbb
movsl
test
sub
add
mov
shlb
xor
sub
adc
sti
fisubs
mov
shrb
mov
andl
xchg
cwtl
stos
dec
xchg
and
push
loope
test
mov
test
sub
add
mov
xchg
push
pop
insb
pop
int
stos
movsl
and
sbb
arpl
push
xchg
inc
pop
lret
movsl
aad
xlat
jnp
push
call
sbb
push
cmpsb
and
mov
out
lahf
sub
xchg
sub
xlat
cmc
sub
les
sub
mov
imul
or
jo
sbb
xorb
sahf
push
lods
mov
rcrb
sbb
in
sti
mov
cmc
mov
sub
mov
push
lods
inc
inc
add
or
cli
loop
daa
hlt
in
xchg
popa
jmp
pop
sbb
xor
and
jge
mov
cmc
imul
outsb
cmc
aam
lods
leave
cmp
scas
jmp
hlt
cmp
bswap
mov
and
pop
dec
out
loopne
mov
movsb
jp
mov
xchg
mov
imul
and
std
lock
movl
sbb
enter
repz
sbb
pop
movsb
in
pop
or
lcall
sub
jbe
jns
mov
mov
pop
in
sahf
pusha
test
push
sub
inc
dec
jae
jnp
or
loope
roll
popf
dec
aam
addr16
in
aaa
imull
and
mov
popf
hlt
adc
pop
mov
pop
mov
add
lock
lds
sahf
daa
movsl
xor
mov
or
jle
fyl2xp1
or
fbld
loopne
pusha
movsl
out
xorb
sub
xchg
shll
pushf
scas
scas
sub
cltd
xchg
cmp
negl
push
movsl
adc
cwtl
loope
xor
and
rolb
test
xchg
subb
movsl
aas
mul
into
add
mov
xor
fisubrl
jno
movsl
or
imul
inc
dec
sbb
cli
call
add
or
mov
pop
xor
adc
pop
pop
cmp
fwait
popa
das
outsb
mov
fisttpll
and
pop
push
lods
push
or
stos
lahf
inc
cmp
fdivrl
movsl
fdivrs
jge
mov
mov
int
call
movsl
push
outsl
dec
test
popa
sbb
imul
jmp
popf
pusha
pop
mov
sbb
movsl
pushf
das
and
and
pop
and
jae
mov
xchg
aad
das
and
mov
loop
loopne
popa
push
movsl
lock
aaa
pop
jmp
jb
mov
jg
pop
lds
stos
cmpsb
jmp
mov
xor
mull
pop
jb
add
lds
sbb
jbe
cmp
sahf
inc
js
scas
pop
stos
ss
sub
xchg
push
add
sbb
mov
adc
or
and
xchg
mov
mov
movsl
jl
cmp
leave
mov
pop
outsl
lret
push
mov
lods
add
mov
mov
loope
testb
in
out
jns
xor
and
sub
movsl
dec
sahf
xor
rclb
movsl
push
movsb
adc
ret
sbb
test
dec
in
in
mov
and
jb
daa
test
add
jmp
ljmp
in
xchg
mov
stos
and
mov
stos
popf
inc
xchg
rorl
movsl
ret
push
push
mov
and
adc
xchg
movsl
push
mov
dec
cmp
push
mov
movsl
mov
lahf
and
stc
ja
negb
mov
setns
in
cli
insl
jb
pop
or
inc
jno
movsw
imul
inc
rcl
push
sbb
in
mov
or
loope
out
sub
mov
and
sbb
mov
repnz
test
test
leave
pop
mov
or
outsb
sahf
cli
out
ss
or
xchg
mov
xlat
pushw
ret
in
out
sub
ljmp
in
mov
xlat
jp,pn
jge
push
int3
sbb
arpl
int3
stos
pop
add
jbe
repz
movsl
test
push
gs
lock
movsl
fnstenv
test
mov
push
dec
outsb
mov
sbb
sbb
sbb
adc
mov
push
testb
mov
jecxz
and
nop
push
dec
cmpsl
adc
ljmp
out
push
cmp
sub
ret
push
jbe
pop
addr16
inc
inc
lcall
cwtl
das
cmp
imul
jecxz
jb
inc
jle
leave
cli
les
pop
fbld
scas
icebp
cwtl
nop
je
lods
sub
insb
aad
pop
mov
xchg
enter
jecxz
xlat
pop
in
fwait
xchg
pop
cwtl
sub
stos
or
pop
xchg
insb
aaa
jp
lods
ja
and
sub
jle
sub
add
sbb
sub
push
pop
push
cmc
jmp
in
movzbl
movsl
sub
push
stc
std
stos
popf
inc
push
mov
loope
sub
test
adc
repnz
xchg
mov
xor
jmp
mov
mov
inc
cltd
cli
lods
or
bound
inc
xor
xchg
and
sub
push
cmpsl
sar
movl
pop
adc
sub
mov
dec
inc
push
loopne
repz
popf
cmp
pop
dec
xlat
jbe
add
dec
push
jne
mov
sub
in
arpl
loope
fldcw
adc
nop
mov
inc
adc
and
xchg
mov
jo
aam
in
stc
xorl
pop
mov
sub
subl
push
sahf
in
fsubs
aad
jl
push
jbe
ret
sbb
iret
jns
leave
push
test
push
sbb
push
sub
push
scas
jl
orl
imul
scas
dec
jmpw
aas
mov
mov
xor
pushf
jns
adc
cltd
loopne
mov
addr16
aad
jnp
inc
adc
mov
and
xor
daa
or
dec
jle
sub
sbb
dec
mov
lcall
sbb
xchg
dec
cwtl
ret
xlat
bnd
popf
sbb
lds
loop
fstps
mov
jbe
mov
cs
popa
cli
cmp
in
test
sbb
pop
add
and
aas
dec
popf
cld
loopne
scas
xor
cmpsb
popa
mov
add
mov
jl
sbb
mov
sub
and
inc
cmp
das
mov
push
stos
inc
sub
cmp
push
push
leave
lahf
push
pop
inc
mov
cltd
xor
add
icebp
jno
outsb
sbb
mov
mov
mov
pusha
adc
outsb
and
dec
mov
jbe
jns
shll
stos
jb
imul
and
mov
jl
or
dec
inc
and
aad
pop
rcrb
cmc
int
jl
mov
ficomps
cmp
stos
jbe
pop
pop
cmc
dec
push
das
icebp
xchg
sbb
sar
inc
cli
shlb
insl
mov
int3
sbb
jecxz
push
xchg
pop
outsb
adcl
cmp
xorl
test
push
pushf
adc
lcall
enter
rorb
sbb
push
push
sbb
adc
dec
iret
xchg
add
insb
jbe
and
lods
mov
sub
mov
scas
inc
mov
loope
popf
icebp
sub
addr16
push
arpl
mov
cmpsb
out
scas
add
and
pop
xor
xchg
stos
pushf
stos
inc
sahf
sbb
sbb
and
icebp
js
dec
sbb
aaa
and
sub
xchg
push
ret
push
jbe
and
push
mov
in
cltd
fwait
sarl
sti
jne
pusha
push
sahf
loopne
fsubs
sbb
cmc
mov
rcr
xchg
mov
shrb
pop
test
xchg
jecxz
repz
jle
push
cld
sbb
inc
jns
ror
mov
test
sbb
rcll
mov
fnsave
in
or
in
cmp
jp
inc
jl
inc
mov
bound
push
and
sub
add
daa
dec
sahf
dec
xor
cltd
fildl
stos
mov
lds
push
mov
inc
jae
stc
push
adc
cs
sub
push
pop
test
jnp
inc
jns
push
sbb
dec
icebp
xchg
mov
icebp
adc
jle
mov
inc
loope
cmc
lds
sub
rcrb
test
push
ljmp
push
add
sahf
sbb
lds
dec
mov
xor
insl
out
mov
roll
scas
inc
cmp
sub
enter
pop
sub
push
push
ds
mov
sbb
sbbb
pop
cmc
addr16
mov
xchg
jnp
out
add
mov
popf
fnsave
pop
adc
jg
pop
xchg
push
adc
imul
jbe
push
repz
fstpl
cmp
pop
mov
xchg
lahf
jge
std
in
mov
ret
add
fists
or
movsl
sbb
mov
outsl
fcoms
jne
in
dec
es
mov
jnp
sbbb
ljmp
jle
jg
scas
call
xor
jmp
mov
inc
es
aam
frstor
mov
fcmove
add
jmp
ficoms
sbb
loopne
mov
popa
and
mov
or
out
mov
cs
xor
xor
enter
xchg
movsl
in
les
ja
inc
fbld
xchg
fcmovnu
pop
negl
xchg
movsl
sub
ljmp
orb
add
mov
in
sbb
pop
dec
push
scas
and
imul
test
push
movsl
or
pop
sbb
lret
sub
cltd
mov
movsl
adc
cmp
movsl
or
daa
jbe
imul
movsl
mov
or
shlb
mov
lret
push
outsb
dec
inc
js
mov
imul
fcmovnb
iret
xor
cmp
test
adc
movsl
dec
aam
mov
in
sub
mov
std
sbb
xor
test
or
orb
out
movsl
mov
jmp
gs
lods
mov
shl
movsl
mov
insb
aad
pop
movsl
mov
lds
repz
filds
jle
inc
shll
loop
test
jnp
mov
jp
stos
test
pop
movsl
test
cwtl
scas
sbb
cld
lods
pop
jo
pop
pop
add
movsl
jge
orb
mov
and
ja
movsl
pop
cmp
sarb
fdivrl
int
mov
mov
stos
in
repnz
in
sar
cmpsl
dec
sbb
adc
fnstsw
sbb
pop
cli
mov
out
imul
sub
andb
lock
movsl
rolb
sbb
movsl
stos
mov
cmpsl
mov
cmp
fcmovb
movsl
in
push
xor
mov
daa
ljmp
outsl
pop
jl
out
nop
bound
fwait
movsl
pop
lock
push
je
movsl
or
push
out
mov
and
mov
inc
fistpl
dec
in
call
in
in
mov
mov
inc
enter
pop
mov
add
and
clc
std
movsl
push
and
xchg
sti
add
call
mov
lds
add
xchg
mov
movsl
sahf
mov
xchg
stos
and
imul
movsl
and
cmp
push
push
pop
movsb
push
stc
enter
andl
outsb
push
dec
mov
push
cmpsb
in
pusha
jbe
movsl
std
outsl
mov
bound
mov
push
pop
mov
mov
mov
or
movsl
xchg
dec
pusha
jmp
ja
pop
cmpsl
add
mov
mov
fcmovbe
jg
lds
popf
sbb
lcall
xlat
xchg
dec
jl
aad
xchg
adc
aaa
pop
lds
add
lret
loopne
or
inc
insl
push
or
mov
sti
add
ficoms
movsl
nop
and
or
jae
les
jne
fs
and
sbb
popa
pop
fistps
cmpsl
bound
xchg
mov
ja
loope
push
nop
popf
ds
inc
jecxz
xchg
ret
or
pop
xchg
test
add
std
jo
bound
mov
pushf
movsb
add
mov
and
xorl
sub
lds
icebp
jecxz
inc
sbb
push
sbb
dec
cmpsl
sub
movsl
sbb
daa
sub
jmp
adc
pop
mov
in
scas
in
xchg
andl
mov
mov
repz
pushf
inc
xor
sbb
and
mov
lods
mov
fsubr
enter
movsl
sbb
xor
adc
dec
mov
and
test
iret
leave
movsl
fcompl
pop
movsl
push
stos
xchg
pop
mov
push
xor
adc
jg
test
out
das
inc
mov
lods
shr
mull
test
xor
mov
pusha
ss
jmp
iret
test
mov
movsl
dec
jbe
popf
jne
or
adc
cmp
in
in
jl
sbb
or
fbstp
addr16
xchg
clc
leave
mov
dec
lock
ret
inc
fisubs
mov
gs
jmp
lods
test
sbb
popa
pop
imul
xchg
mov
in
cmc
and
dec
add
icebp
shrb
inc
jne
testb
popf
and
push
mov
sbb
dec
cld
inc
xor
push
or
inc
sub
shll
cmpsl
imul
popf
sbb
add
jl
cmc
xchg
pop
cmp
inc
movsl
inc
iret
jp
arpl
cmp
pop
add
push
dec
jno
div
incl
test
lcall
mov
dec
add
push
sub
fs
out
stc
jle
aad
notl
movsl
cmp
pop
sbb
mov
loopne
lock
shll
stos
jecxz
ftst
xchg
outsl
ficoms
movsl
push
pop
roll
ror
fstps
movsl
imul
int3
in
pop
jge
test
mov
or
aas
dec
and
or
push
pop
imul
inc
jmp
cwtl
fnstsw
mov
pop
mov
and
fistl
push
sbb
movsl
mov
jl
shl
lcall
adc
add
push
pusha
stos
movsb
mov
pop
lds
pop
dec
popf
inc
jmp
lock
mov
mov
jle
loopne
and
push
testb
mov
mov
pop
movsl
mov
out
fldenv
add
arpl
mov
sarb
call
testl
movsl
pop
mov
push
jge
sbb
cld
in
movsl
repz
fcmovu
cmc
test
mov
adc
lods
pusha
pushf
imul
movsl
cs
ja
cwtl
sbb
daa
hlt
inc
fnstcw
dec
dec
inc
hlt
in
imul
xchg
pop
mov
sbb
movsl
xchg
fwait
ret
rcrb
test
sub
aaa
sti
mov
mov
sub
xchg
pusha
pop
cmp
xchg
xchg
cs
lcall
add
and
mov
data16
or
xchg
pop
sub
mov
mov
popa
xor
andb
aaa
stos
jns
je
test
in
movsl
pop
insl
loope
ljmp
mov
push
mov
cmc
test
ret
sbb
test
adc
xchg
lods
mov
jbe
xchg
inc
mov
shl
fsubrl
sub
push
movsb
mov
loope
rcll
in
add
pop
inc
out
popf
fs
movsl
cmp
outsl
insl
mov
push
mov
mov
stc
fcomip
cld
lds
mov
leave
mulb
add
test
mov
pop
out
inc
movsl
pop
out
outsb
mov
xchg
adc
jnp
addl
movsb
push
bound
mov
lods
dec
dec
imul
xor
cmc
mov
in
arpl
mov
ja
cmpsl
popa
movsl
mov
call
lock
pop
bound
xchg
xchg
or
adc
in
scas
mov
aam
fsub
mov
inc
std
jl
inc
enter
jmp
test
fisubl
cmpsl
inc
jnp
movsl
pop
insl
push
push
add
in
loopne
adc
movsl
aam
ds
int
and
mov
ss
lahf
cmp
jno
inc
pop
rorb
and
out
xchg
inc
pop
adc
and
ret
mov
sbb
stos
es
aam
std
popf
je
cmpb
add
xchg
mov
sti
test
push
dec
fdivrp
xor
outsl
shr
repnz
sahf
popa
xchg
cmpsb
in
jle
and
pushf
rcrl
fisubrs
and
xor
xor
pop
ret
jb
mov
loope
mov
lret
clc
xchg
repnz
fldenv
int3
addb
sbb
mov
xorl
ret
int
lahf
ret
push
ds
scas
dec
sti
es
arpl
and
push
pop
dec
xchg
repz
out
pop
in
pop
in
sbb
or
das
inc
push
pop
sub
lret
xchg
jmp
lock
roll
mov
push
pop
ljmp
pop
push
or
leave
jl
lds
mov
add
bound
in
pop
push
cmp
sbb
mov
adc
pop
loope
sub
bound
cs
sbbb
mov
and
sbb
es
jns
movsb
or
add
int
stos
pusha
sti
add
adc
es
pop
jp
xor
cmc
mov
lds
lret
ret
or
cltd
jb
cmp
pop
pop
movsb
pushf
xchg
jns
pop
cmpsl
mov
xchg
xor
pop
sub
cld
mov
loope
adc
mov
inc
mov
add
jle,pt
int3
mov
dec
inc
adc
xchg
sbb
inc
mov
test
nop
mov
out
insb
stos
or
xorl
jmp
jl
xor
mov
add
push
sahf
icebp
not
fwait
push
orl
dec
cmp
mov
jae
aad
fmuls
jbe
jle
icebp
lcall
xchg
add
jbe
addr16
cmc
sub
push
mov
arpl
jmp
out
pop
inc
negl
xor
je
loopne
mov
mov
cld
sub
sahf
repz
js
mov
jmp
xchg
jbe
repz
and
popa
stos
sbb
in
paddd
js
jb
mov
pushf
cmp
or
sub
mov
aam
out
xlat
mov
lcall
jl
setle
fisttps
xchg
pop
nop
cmp
push
mov
ret
mov
dec
pop
jns
xchg
loop
pop
jno
pop
jmp
test
mov
mov
cmp
popf
xchg
cmp
inc
jnp
push
xor
mov
jo
sub
pop
mov
cmp
push
pop
test
movsl
sbb
in
repnz
decb
xchg
in
lods
pop
mov
aas
xchg
movsl
xor
xor
ds
add
jns
ret
push
sbbl
lds
mov
jnp
mov
adc
mov
pop
mov
inc
add
sahf
popa
ds
in
loopne
cmpsb
sbb
cmp
repz
inc
jg
inc
movsl
dec
jns
xchg
outsb
inc
fcompl
lock
out
out
adc
subl
movsl
xor
or
mov
jb
insb
lods
cmpsb
xchg
movsl
ds
cmp
mov
movsl
xor
enter
adc
dec
popf
aaa
push
movsl
out
out
add
cmp
icebp
movsl
lret
jno
add
das
scas
xchg
jg
inc
add
data16
movsl
mov
cld
clc
int3
movsl
mov
mov
je
sub
jmp
pop
add
jl
add
arpl
push
fs
xchg
jae
movsl
pusha
out
call
jnp
ffreep
addl
pop
sub
jp
push
out
bound
add
ss
mov
fadd
int
lret
adc
mov
pusha
rcll
roll
not
add
push
ljmp
leave
imul
movsl
inc
mov
loopne
movsl
push
pusha
sbb
jle
cwtl
movsl
mov
int
outsl
dec
sub
mov
push
mov
push
pop
subb
jmp
inc
icebp
in
xchg
cwtl
inc
dec
cmp
test
stos
jno
in
sbb
dec
sti
push
cmp
and
mov
in
movsl
xchg
xor
sbb
outsb
lods
xorl
mov
sarl
mov
lods
and
add
add
pop
movsl
dec
jecxz
aad
or
mov
std
jl
fisttpl
jle
lods
add
movsl
mull
test
in
leave
and
clc
mov
mov
mov
xor
add
jecxz
push
mov
test
fsubr
inc
clc
push
lods
stos
repz
add
mov
cmp
jge
mov
cmp
sbb
lds
sbb
test
movsl
je
inc
push
jae
mov
shll
outsb
call
movsl
push
mov
out
or
cmp
movsb
in
mov
jae
cmp
je
imul
xchg
movsl
lds
test
xchg
or
push
mov
mov
movsl
fadds
push
aam
jmp
repz
outsb
in
pusha
jnp
add
pop
inc
rolb
push
in
mov
test
std
mov
mov
pop
je
out
in
pop
mov
outsb
mov
jae
jb
movb
push
shl
les
or
stos
inc
pop
push
lcall
add
mov
mov
jno
push
out
addr16
adc
jo
aaa
pop
lcall
clc
xchg
pushf
and
aad
sbb
mov
jmp
cld
cmc
inc
mov
fistpll
stos
cmc
rorl
adc
pop
sbb
jno
mov
mov
les
mov
dec
pslld
arpl
je
inc
adcb
sahf
cld
pop
jae
adcb
and
sbb
mov
iret
or
loopne
sub
faddl
add
sub
in
push
test
jmp
jg
dec
dec
std
and
xor
fstps
pop
or
sahf
xor
pop
inc
mov
jmp
xchg
lods
jne
add
lods
les
pop
mov
stos
out
sbb
mov
pop
ficoml
xlat
cmpsl
nop
push
sbb
mov
jnp
cmp
lods
or
cwtl
orb
aad
andl
jmp
std
aad
sub
mov
sub
mov
fistl
mov
lods
cmp
pusha
mov
xchg
mov
dec
clc
sub
cmpsb
jecxz
test
xchg
out
testb
cmpsb
popa
xchg
cmp
cli
stos
and
inc
add
in
adc
push
jnp
jns
inc
ret
fnstsw
cmc
cmp
lods
mov
adc
out
jns
sub
inc
mov
pop
dec
xor
pushf
pushf
cli
clc
add
push
mov
cmc
inc
imul
call
fstps
shrl
and
inc
inc
shll
pusha
pop
movsb
jnp
repnz
lods
lock
mov
inc
fstpt
add
push
xchg
icebp
sahf
ret
lods
mov
or
push
mov
jmp
popa
mov
sbb
xchg
pop
push
jmp
xchg
add
mov
gs
or
pop
adc
scas
mov
daa
aam
mov
mov
pop
pusha
mov
sbb
add
mov
mov
pushf
jge
adc
mov
gs
outsl
jl
aaa
notl
test
out
mov
movsl
push
and
movsl
fs
movsb
inc
xchg
sbb
movsl
insb
sbbb
cld
stos
add
iret
lcall
xchg
jmp
add
scas
icebp
gs
sub
out
adc
ljmp
enter
cmpsb
mov
fwait
shlb
in
pop
dec
insb
inc
movsl
cld
xlat
mov
jbe
shl
dec
data16
mull
movsl
loopnew
jns
adc
dec
imul
mov
push
js
mov
push
sub
frstor
or
mov
ret
adc
shl
movsl
out
iret
in
loop
add
movsl
mov
mov
mov
outsl
jns
das
push
js
lds
out
xchg
hlt
cmpsb
in
sbbb
call
inc
movsl
inc
jae
pop
int
pop
movsw
loope
xor
pushf
fwait
jne
movsl
jle
push
movsl
fidivl
adcb
stos
pop
pushf
xor
cli
jbe
sub
push
dec
dec
movsl
hlt
jne
sbb
mov
test
inc
andl
sbb
pop
int
push
movsl
mov
dec
ljmp
hlt
stc
mov
mov
pop
fisttpll
adc
inc
int3
call
and
xor
movsb
xchg
sbb
test
cltd
test
pop
lcall
imul
inc
out
mov
call
in
movsl
dec
lret
mov
push
movsl
push
aam
inc
cltd
pop
mov
movsb
movsb
movsl
scas
add
xlat
dec
gs
mov
push
xchg
jp
out
insl
out
mov
imul
movsl
mov
or
mov
inc
imul
loop
mov
push
pop
movsl
mov
movsb
jmp
movsl
mov
add
es
fs
dec
outsl
repz
aam
int
cltd
decl
cli
dec
mov
cmpsb
mov
xadd
or
mov
mov
out
pop
sbbl
stos
jp
add
adc
sub
pop
xchg
out
fidivrs
mov
stos
movsl
cmp
pushf
jo
shl
movsl
jns
enter
sbb
add
ss
mov
and
xchg
lods
imul
movsl
sub
mov
aas
mov
cltd
adc
sub
mov
scas
mov
mov
cmpsl
fsubr
jno
pop
repz
jbe
inc
cs
mov
sar
movsl
pop
fs
sub
scas
mov
mov
inc
and
jbe
cmc
pop
movsl
aaa
out
daa
mov
aas
mov
pop
sbb
or
je
jbe
push
ljmp
sbb
cmp
in
push
pop
shlb
add
push
sbb
pop
in
bound
cltd
mov
mov
lea
and
insb
cmpsb
movsl
inc
pop
mov
out
mov
mov
xchg
iret
fsubr
mov
push
mov
mov
mov
ss
iret
dec
aad
jl
lds
and
mov
in
jmp
loope
cld
flds
xchg
in
sub
movsl
mov
dec
mov
adc
rclb
stc
movsl
mov
shrl
in
clc
dec
repnz
inc
sub
fld1
out
out
xchg
cmpsb
les
xchg
adc
fcoml
rcrl
jnp
sbb
js
mov
cmp
repnz
xor
adc
adc
ret
mov
stos
dec
stc
lock
popf
in
mov
scas
xchg
aam
sbb
xor
xchg
scas
push
movsl
pop
jecxz
orb
pushf
movsl
pmaxsw
jo
arpl
pop
mov
push
push
lahf
add
loopne
fldenv
arpl
mov
int
movsl
rcrb
mov
stos
in
enter
push
test
cmp
sbb
or
sbb
les
icebp
bound
pop
or
dec
cli
popa
faddp
xor
inc
push
mov
stos
cmpsb
orb
das
inc
xchg
mov
jae
je
movsl
or
add
stc
insb
mov
rcrl
and
dec
push
test
cmp
xor
popa
ljmp
es
pop
dec
push
jmp
jl
adc
add
mov
movsl
or
sbb
movsl
test
cmp
mov
cmp
movsl
rcl
loopne
dec
jae
pop
pop
lds
mov
clc
jo
add
adc
in
cs
xchg
ljmp
mov
dec
imul
and
pushf
sub
ds
push
dec
mov
test
adc
in
bound
xchg
mov
sub
ja
push
iret
add
add
clc
cmpsb
jo
add
mov
fildll
sub
mov
or
out
scas
jo
push
andb
jb
fadd
in
pop
mov
wbinvd
outsb
stos
lods
pop
loop
into
jbe
pop
popa
in
xchg
movsl
pop
fwait
sbb
jmp
out
mov
movsl
lret
xchg
fiadds
aaa
arpl
movsl
pop
insb
cmp
xchg
sahf
daa
and
cwtl
mov
movsl
cmc
push
out
loopne
movsl
test
mov
faddl
lret
inc
mov
or
lret
jge
rclb
ret
adc
xchg
in
addl
mov
fs
pop
cmc
lods
imul
jno
imul
push
data16
mov
mov
aam
bound
test
xchg
and
mov
jl
inc
xchg
jo
not
idiv
inc
out
movsl
sub
add
movsl
push
or
push
daa
imul
dec
mov
xor
inc
incb
fidivrs
in
jp
adc
or
jb
loope
jmp
xchg
jo
loopne
in
rorb
mov
adc
shr
lcall
in
pop
cli
imul
or
mov
adc
cmp
push
movsb
fwait
in
inc
loopne
fs
mov
fbld
jg
mov
inc
nop
sahf
sti
enter
aam
ja
sbb
inc
into
sub
dec
mov
pop
mov
xchg
das
xor
insb
cmp
adc
pop
aaa
or
mov
jno
adc
in
in
add
mulb
movsl
enter
cmp
out
add
or
mov
movsl
cli
adc
cmp
sahf
sbb
push
xor
movsl
scas
ret
fdivl
cmp
push
out
cmc
fsub
mul
fldl
mov
or
lret
je
sbb
mov
movsl
int
pop
outsl
push
loope
std
ficomps
push
in
jae
andl
adc
mov
push
daa
stos
xor
dec
int
movsl
icebp
mov
in
cmpsl
sti
cmp
arpl
or
jbe
bound
enter
popf
and
sbb
jne
in
or
or
inc
movsl
dec
push
pushf
filds
jae
mov
popf
lcall
push
pop
daa
outsl
hlt
in
lret
insl
cmp
scas
pop
and
mov
sbb
xchg
mov
in
js
or
in
fildll
push
inc
adc
ss
cmp
mov
sti
mov
lds
std
movsl
adc
and
xchg
testl
sbb
dec
cmp
mov
cmp
cmp
dec
jb
scas
pushf
mov
loope
mov
cmpsb
ficoms
xchg
push
push
mov
inc
fsts
test
andl
int3
out
push
pop
cmc
addr16
sbb
fistpll
pop
test
sub
js
mov
movsl
test
mov
mov
pop
int3
pusha
mov
testb
dec
cmp
pop
lds
lret
hlt
fistps
sahf
push
ret
daa
movsl
mov
jbe
xor
mov
into
frstor
dec
stos
stos
cmp
cmpsl
into
add
pop
mov
cmp
stos
mov
clc
sbb
divb
pushf
xor
iret
push
adc
adc
into
sub
mov
rorb
mov
ljmp
movsl
push
ret
inc
movsl
scas
mov
mov
xchg
and
cmp
xchg
xor
jne
mov
aaa
mov
adc
xlat
ret
add
aaa
mov
std
push
mov
push
push
ret
xchg
movsl
mov
lcall
push
sub
mov
mov
mov
mov
repz
test
cmp
das
mov
aas
mov
arpl
lods
mov
xor
sub
xor
daa
sbb
mov
jne
jmp
lods
pop
movsl
jle
int
xchg
dec
dec
mov
mov
sbb
sbb
jl
push
push
jp
bound
cld
fcmovne
sub
or
movsl
mov
out
imul
sbb
push
sbb
orl
mov
jle
mov
cwtl
or
sub
and
in
into
in
jle
out
in
pop
sbb
cmp
shrb
das
mov
fsubp
clc
fs
inc
xchg
repz
mov
dec
scas
movsw
push
push
sub
adc
test
cmp
int
xchg
xchg
mov
or
and
and
mov
bound
push
xchg
sbb
fnsave
push
test
scas
movsb
pop
mov
mov
in
fwait
dec
add
jg
cmc
dec
cmp
movsl
jmp
test
and
mov
pop
dec
ja
arpl
aam
test
movsl
mov
mov
add
in
fstpl
in
jo
pop
vlddqu
arpl
call
sbb
mov
push
pop
adc
dec
mov
ljmp
add
lret
xor
cmp
fs
nopl
mov
sahf
test
sbb
mov
popf
dec
scas
scas
movsl
inc
xchg
ficomps
mov
or
es
repnz
mov
dec
sub
data16
movsl
enter
imul
movlps
adc
push
movsl
cmp
and
movsl
mov
fadds
movsl
sti
out
lock
insl
inc
subps
imul
arpl
lret
lret
imul
stos
fcomi
lods
lea
mov
mov
in
movsl
dec
je
adc
mov
or
call
and
pop
test
cltd
movsl
jg
pop
mov
movsl
and
and
sbbb
out
aaa
movsl
daa
out
xchg
sub
adcb
jecxz
fiadds
aas
adc
sbb
loop
mov
dec
jo
outsl
ror
mov
push
jge
int3
mull
cmc
inc
out
mov
jae
movsl
dec
repnz
leave
xchg
fsubrs
out
pop
add
lock
test
int
movsl
aam
sub
push
sbb
nop
movsl
pop
sbb
into
lock
popf
adc
dec
movsl
in
mov
pop
sar
mov
mov
xchg
fdivs
lcall
fistl
popf
fwait
add
xchg
es
jg
sub
jb
jle
faddl
dec
jmp
mov
nop
daa
sub
les
and
imul
clc
call
ja
xlat
movsl
jae
test
ret
adc
mov
les
movsl
iret
int
mov
cmc
cmp
movsl
mov
add
push
mov
fadd
hlt
jmp
mov
clc
imul
and
iret
xchg
test
mov
out
ret
movsl
dec
fnstenv
and
xor
or
lea
push
push
pop
pop
cmp
mov
adc
adc
sub
jl
test
push
cld
stc
inc
in
jecxz
js
xchg
xchg
into
idivl
xchg
fisubl
jae
dec
xor
and
aas
mov
dec
mov
mov
out
lds
jg
and
xchg
cmpsl
dec
arpl
lret
inc
cwtl
lods
xchg
add
inc
xor
adc
adc
lods
in
push
cltd
xor
cmpsb
jo
stc
add
rolb
and
xor
xchg
fbld
movsl
push
clc
leave
add
movsl
push
ret
inc
addr16
enter
scas
movsl
fcmove
dec
xchg
xlat
movsw
xchg
sbb
cmpsb
mov
je
inc
jl
fdivrp
out
add
cwtl
ret
fs
mov
mov
fstpl
lds
std
pushf
inc
mov
pop
xchg
mov
imul
popa
rcrb
sti
sub
xor
dec
std
ficoms
outsl
dec
ljmp
xchg
test
xchg
mov
cmp
mov
mov
adc
in
in
fwait
ss
or
shll
xor
sub
mov
movsl
scas
and
sbbb
mov
xchg
cmpsl
cmc
movsl
mov
fbld
movsl
push
test
cmp
mov
or
adc
sub
push
icebp
lret
out
ljmp
loop
lret
adc
in
inc
push
mov
cltd
pushf
sbb
in
cmpb
pop
fnstcw
aam
testb
shll
push
push
cmp
sti
mov
mov
push
insb
pop
lahf
iret
mov
stos
test
xchg
ds
jb
lahf
fwait
mov
push
les
clc
jae
cmpsl
pop
mov
mov
mov
sbb
int
mov
cmc
jp
test
sahf
aas
add
dec
push
lock
das
test
add
cmp
or
or
pushf
movsl
pop
xchg
mov
inc
fidivrl
addr16
xchg
adc
cld
ljmp
jno
aad
push
mov
dec
inc
outsb
inc
jbe
fisttps
or
inc
or
out
cld
xor
enter
ljmp
in
pop
pushf
aam
or
mov
inc
sub
push
cmc
mov
imul
ljmp
popa
out
mov
imul
and
out
hlt
dec
cmp
mov
mov
add
mov
bound
arpl
pop
push
pop
outsl
xchg
push
dec
enter
movsl
fdivr
pop
pop
in
mov
cmp
adc
call
es
xorl
mov
jne
pop
xchg
jno
movsl
fwait
cmp
pushf
xlat
lods
loopne
mov
jnp
push
movsl
addl
enter
mov
repz
pushf
pop
mov
sarb
jmp
into
test
stc
lods
push
movsl
xor
rcll
inc
mov
gs
push
dec
sub
sbbl
dec
push
jnp
cmp
mov
movsl
fnstenv
mov
mov
dec
inc
aad
cmp
jmp
movsl
pop
xchg
mov
cmp
mov
in
lods
pop
dec
mov
mov
mov
sbb
pushf
shlb
dec
cmp
iret
lret
mov
or
sub
xlat
aad
in
pop
popf
pop
push
xor
sub
push
jp
and
insb
mov
clc
mov
test
mov
and
mov
cmpsb
jp
jns
insl
push
lret
addr16
push
lret
jb
fisubs
sub
and
es
in
fisubrl
stc
hlt
xchg
in
movsl
test
rcll
scas
lds
add
pop
cmpsb
cld
scas
mov
outsb
push
movsw
pop
into
rcll
push
cmpsb
push
sub
leave
cmp
das
bound
xchg
jae
xor
pop
sub
lahf
dec
sub
mov
mov
stos
inc
rolb
call
xor
repz
jge
movsb
pop
movsl
subb
or
jp
daa
xlat
ss
pop
jnp
dec
mov
outsb
movsl
shl
std
jmp
dec
je
mov
stos
pop
aad
aad
icebp
sbb
jae
clc
into
inc
loop
mov
std
enter
push
cmp
cld
and
movsl
xor
push
lret
daa
mov
sbb
mov
cwtl
outsb
call
mov
popa
sub
xchg
mov
imul
mov
dec
fidivrl
bound
js
mov
pop
nop
sbb
sti
pop
scas
or
cmpsl
push
inc
pop
sbb
or
test
push
and
xchg
jp
mov
push
outsl
adc
adc
cmc
js
adc
mov
sbb
jo
ja
sub
icebp
int
je
jnp
add
dec
sti
rcr
dec
mov
and
push
jge
sarb
push
cmp
mov
pop
sbb
push
mov
sbb
xchg
or
mov
mov
lock
gs
and
loope
add
or
mov
dec
lret
divb
dec
dec
test
lahf
push
test
mov
cmc
repz
ss
and
xchg
cmp
adc
xchg
or
and
cli
adc
sbb
cltd
clc
mov
mov
lock
lcall
xor
lret
in
into
xor
or
xchg
bswap
repnz
sbb
mov
decl
sub
clc
movsw
pop
mov
mov
xchg
xor
mov
or
adc
roll
push
mov
push
jecxz
test
jecxz
jnp
push
sbb
adc
dec
leave
push
mov
clc
push
cmp
arpl
or
faddl
leave
mov
pop
fdecstp
mov
cmp
scas
push
pop
incl
cmpsb
push
pop
push
incl
mov
mov
sbb
inc
jnp
faddl
inc
cmp
xlat
mov
xorb
mov
push
cld
mov
and
sub
lret
or
in
inc
pop
cmp
dec
sub
pop
fxch
call
inc
push
mov
in
xchg
gs
fistl
gs
popa
lods
cmpsb
ss
sub
stc
movsb
cmpsb
mov
movsb
pop
inc
movsl
lahf
add
sub
jle
mov
sbb
xor
cmp
and
mov
icebp
in
push
xchg
sub
lcall
stos
mov
push
fdiv
cltd
mov
sub
stos
inc
aam
xor
cwtl
push
inc
pop
sub
clc
loopne
add
jl
or
rorb
stos
inc
xchg
push
mov
jno
sub
push
mov
and
sbb
addr16
hlt
cmp
sub
mov
fwait
daa
icebp
mov
cmp
lods
pop
adc
or
sbb
and
pop
ds
les
in
dec
test
pop
xor
pop
inc
fucom
or
cli
cmp
pop
ja
ja
icebp
shl
enter
xor
pop
aad
jo
add
jp
cltd
or
andl
adc
sbb
mov
jno
dec
les
and
mov
mov
test
pop
pushf
ljmp
daa
dec
pop
adc
xor
cltd
lds
adc
mov
shll
mov
insb
in
sub
jnp
adc
fwait
outsb
inc
inc
mov
push
cwtl
leave
mov
std
sahf
fildll
dec
pop
fstps
cmp
dec
cwtl
inc
xchg
jno
das
jecxz
insb
jge
sbb
and
flds
sbb
sub
sub
and
mov
xchg
rorb
stc
incl
fbld
dec
and
lods
out
pop
cmp
push
and
cltd
mov
mov
mov
mov
jmp
sub
pop
mull
es
jnp
shl
test
imul
loopne
add
stos
mov
xchg
and
cltd
lock
adc
pop
loopne
mov
push
aaa
test
add
mov
lock
out
pop
aad
cmp
sub
stos
add
and
mov
pusha
xchg
loop
mov
addr16
push
jnp
test
shr
pushf
arpl
cwtl
and
and
cmp
jle
orb
sub
fnsave
sbb
jecxz
cmp
daa
fsts
or
adc
xchg
push
adc
mov
inc
cmp
mov
pop
sbb
or
scas
sbb
cmpsl
mov
rcr
test
dec
iret
push
dec
inc
arpl
aam
in
mov
pop
jb
or
sub
call
dec
or
mov
rep
pop
mov
push
ljmp
pop
sahf
add
shrl
fdivrs
test
adc
testb
popf
pop
out
fwait
xchg
and
in
imul
xor
aas
nop
jl
push
and
shr
loopne
jbe
xor
scas
add
pop
and
or
popa
sbb
inc
movb
je
es
iret
repnz
ja
mov
icebp
pop
and
sbb
add
popf
sub
popa
shl
std
inc
test
xchg
sbb
bound
loope
cmc
inc
xchg
and
sub
clc
loop
lcall
and
idiv
jae
push
mov
fildl
pusha
xorl
jp
fcompl
mov
paddb
and
pop
mov
mov
mov
add
in
cwtl
cmc
fstp
mull
pusha
hlt
sbb
rolb
mov
sbb
inc
cs
inc
sbb
inc
nop
cwtl
xchg
imul
xor
ror
adc
or
hlt
ret
clc
or
and
cmpsl
imul
ljmp
test
sbb
popa
das
jne
sarl
pushl
jne
push
and
xor
or
mov
fidivrs
shrl
jbe
fldcw
mov
cmp
call
insl
in
pop
clc
mov
push
push
lret
in
sbb
test
ret
mov
movsl
cmp
gs
dec
bound
ja
add
sub
int
add
jecxz
loop
pop
jl
repz
andb
adc
inc
pop
pusha
sbb
lret
call
sahf
ja
jbe
fldl
aad
outsb
add
cmp
loop
mov
inc
ja
pop
fmull
int
movsl
cmp
or
inc
in
dec
mov
frstor
and
stos
sbb
mov
movsl
subl
pusha
inc
inc
lahf
xor
bound
les
jmp
add
lds
mov
sbb
das
stos
dec
cmp
xchg
rolb
frstor
mov
sbb
jbe
dec
movsl
xchg
push
rclb
movsl
out
call
sub
cmp
lahf
movsb
or
lods
cmp
pop
aas
xchg
mov
pushf
out
pop
movsl
jp
icebp
fcomps
push
roll
and
fs
or
adc
lahf
mov
daa
loop
scas
xchg
add
xor
stc
add
in
sub
jmp
xchg
cmp
sbb
pop
pop
cmpsl
pushf
push
ret
outsb
inc
test
mov
mov
adc
adc
lds
and
loope
iret
mov
imul
mov
pop
ljmp
in
je
inc
movsl
sub
xchg
pop
pop
inc
pop
cltd
stc
jecxz
fsubp
popa
js
push
or
sbb
fs
stos
movsl
adc
mov
les
lock
stc
or
push
mov
sbb
lea
jecxz
movsl
push
pop
in
pop
int
add
jmp
sub
xchg
mov
out
movsl
or
loopne
xor
and
movsl
sbb
jmp
ret
lock
lahf
scas
mov
stos
mov
or
cmpb
xchg
cld
scas
mov
mov
jmp
add
mov
pop
mov
in
mov
mov
cli
movsl
cmp
pop
movsw
push
mov
popf
cmp
jg
aas
mov
jmp
add
cmp
in
push
inc
movsw
cmc
int
add
in
out
cmpsb
jge
rcll
ja
mov
into
std
scas
sbb
xor
mov
arpl
loopne
gs
fcmove
movsl
outsl
xchg
xchg
orb
sub
pop
dec
adc
loopne
out
and
xor
pop
jno
sti
pop
push
movsl
arpl
sub
inc
lea
jl
les
movsl
in
and
xor
xor
push
lods
test
adc
pop
mov
pop
inc
mov
xchg
add
lahf
loop
add
movsl
ljmp
fisubl
hlt
pusha
int
aad
test
xor
inc
adc
pop
add
or
push
mov
xor
stos
ja
movsl
add
fsubs
movsl
or
sub
jecxz
call
adc
mov
mov
pop
mov
insb
lds
fsubs
mov
adc
int
into
push
sarl
mov
inc
in
sbb
int
and
aad
cmc
daa
ljmp
xchg
mov
jne
xchg
movsl
cmp
in
popf
lods
gs
bound
mov
scas
xchg
aas
mov
xchg
outsb
sbb
jbe
imul
mov
xchg
mov
loop
ljmp
icebp
fisttpll
jle
pop
pop
movsl
scas
mov
aam
movsl
divl
cli
sbb
lods
mov
adc
and
xlat
movsl
in
mov
mov
fwait
adc
push
jg
or
mov
rorl
mov
ljmp
dec
xlat
or
hlt
jb
fisubl
dec
inc
insb
jg
inc
mov
jae
ret
lcall
sbb
sarl
mov
cld
pop
movsl
pop
outsl
pop
jbe
mov
or
ds
fisubl
call
cltd
pushf
xchg
inc
in
int
dec
adc
xchg
in
adc
clc
movsl
out
mov
es
loope
movsl
sub
xor
inc
hlt
std
movsl
cmp
inc
imul
arpl
pop
into
jnp
xor
inc
mov
or
shl
repnz
imul
jle
stc
pop
or
dec
movsl
lcall
movsl
dec
lret
cmp
sbb
sbb
xor
imul
ret
cmp
scas
mov
and
test
xchg
pop
data16
inc
loope
scas
or
cmp
and
mov
outsl
add
lret
cmp
xor
push
int
inc
movsl
jne
sub
inc
push
add
adc
adc
lods
bswap
ror
mov
adc
outsl
cmpsl
cli
inc
movsl
test
sub
dec
leave
mov
xchg
test
cmpsl
cltd
int
mov
lock
stos
mov
movsl
cmpsl
mov
out
mov
sub
mov
pop
ja
ret
bound
movsl
cmp
add
movsl
jae
addr16
int
gs
and
push
lds
or
add
jns
jl
dec
ss
movsl
in
fsubr
in
push
push
jmp
rcll
cwtl
movsl
stos
sub
and
dec
outsl
push
out
xlat
rorb
cmp
lds
or
inc
adc
movsl
lods
sub
mov
mov
cmp
fwait
sahf
fcmovb
loope
xlat
xchg
int3
pop
push
in
cltd
test
cmc
cs
std
xor
movsl
aas
push
cmpsb
cld
and
jb
adc
sahf
in
lret
jne
fisttpll
or
sub
gs
aam
pop
push
jmp
or
shlb
pop
addr16
movsl
iret
mov
jge
xchg
js
dec
hlt
add
xor
out
ja
js
xor
cmpsb
in
aad
scas
mov
movsl
test
xchg
test
insl
pusha
lcall
pop
lods
dec
jne
lcall
out
sub
push
push
aad
mov
mov
je
push
push
xchg
dec
adc
sub
in
mov
jae
fnstenv
ja
fistpll
movsl
cltd
adc
in
lret
int3
mov
repz
loope
and
movsl
mov
inc
gs
jmp
and
call
ret
mov
or
les
jge
mov
push
pop
lds
add
xchg
movsl
mov
inc
add
mov
jmp
xcrypt-ctr
cmpsl
sbb
jne
data16
and
fcmovu
scas
shr
bound
ret
mov
lret
outsl
scas
inc
jl
mull
jle
push
lods
pop
cmpsb
mov
xchg
test
cmpsl
lret
daa
lcall
bound
out
imul
lods
bound
sub
pop
mov
xlat
andb
mov
cld
and
push
out
ret
or
pop
lret
aad
cld
dec
jl
cmc
out
scas
aam
into
and
bound
shlb
ljmp
mov
aaa
inc
lea
push
pop
pushf
dec
je
shll
cmp
and
mov
cmpsb
bound
mov
cs
lods
imulb
das
cmovb
ds
outsb
lods
lret
scas
movsl
mov
adc
cmc
fisubrl
movsl
dec
ja
jmp
push
pop
movsl
jg
nop
inc
cmpsl
push
into
enter
arpl
xlat
pop
movsl
insb
aad
cmpb
cwtl
xchg
xchg
push
pusha
test
int
push
jg
orb
out
mov
test
mov
leave
movsl
sub
mov
movsl
add
out
ret
sbb
jl
out
mov
daa
lret
repnz
movsl
push
xchg
mov
scas
movsl
clc
cmp
mov
loop
shrl
pop
movsl
cli
orl
sti
mov
movsl
xchg
mov
rol
or
mov
mulb
dec
pop
push
push
fstpl
or
xor
icebp
adc
push
fwait
jp
adc
lret
or
cld
push
add
pop
lds
addr16
dec
or
push
aas
std
mov
cmpsl
pop
mov
cwtl
dec
repnz
loop
movsb
std
adc
dec
push
and
rcrl
in
jne
push
icebp
ss
jge
sub
pop
lea
mov
jo
ljmp
xchg
leave
enter
jle
xor
sub
and
pop
lret
je
pushf
pop
pop
cmc
mov
adc
sbb
inc
clc
repnz
shl
and
cld
pushf
clc
je
iret
inc
jle
push
jg
pop
inc
lahf
and
sub
or
daa
subb
cmp
add
sub
mov
sub
mov
xchg
push
pusha
mov
movsl
pop
mov
mov
daa
jbe
inc
xchg
or
xchg
jp
jge
std
shlb
leave
insl
jne
add
mov
aam
xor
push
aad
test
mov
sub
sub
and
test
dec
cmc
push
inc
mov
jle
lds
jmp
mov
inc
pop
fnclex
inc
mov
jecxz
jge
adc
sub
sbb
movsb
in
mov
vpunpcklqdq
dec
add
les
das
jmp
add
into
mov
dec
and
cmc
pop
push
push
je
inc
pop
mov
fnsave
mov
xor
push
inc
stc
cmp
jb
pop
push
xchg
pop
add
sub
shl
cmc
inc
int3
fdivs
mov
mov
add
mov
xor
and
sub
pop
imul
lcall
add
stos
popf
inc
mov
rolb
repz
dec
adc
jae
repnz
fdivp
mov
loopne
mov
call
jl
xchg
aam
ffree
popa
imul
movsl
jae
fidivl
xchg
mov
mov
movsl
sbb
jmp
fisttpll
push
movsl
sti
dec
adcl
push
movsl
xchg
xor
sbb
out
mov
icebp
fwait
jl
xlat
or
stc
movsl
movsb
xor
mov
add
loope
in
das
pop
lock
loopne
mov
and
in
sub
jecxz
movsl
cs
orl
add
mov
jle
movsl
mov
sahf
in
call
dec
push
in
ss
lods
dec
movsl
jb
push
inc
add
int3
sbb
adc
pop
mov
adc
ja
add
xchg
in
int
andl
test
pop
mov
ja
loope
insl
rcrl
outsb
mov
add
xorl
movsb
iret
or
pop
outsb
sub
jnp
stos
push
jecxz
push
push
imul
mov
test
dec
jl
mov
in
or
movsl
aas
mov
mov
movsl
and
add
xor
andl
stos
pop
movsl
jae
sahf
aaa
and
cmp
movsl
add
int
movsl
xor
enter
in
and
push
inc
xor
inc
imul
out
movsl
add
and
movsl
pop
xlat
mov
loopne
sub
lea
add
sbb
arpl
or
mov
movsl
xchg
popf
clc
jecxz
in
fldcw
push
test
fs
xchg
movsl
es
lods
xchg
fcmovne
inc
lds
push
int
std
cmp
mov
fs
cmp
bound
movsl
cmp
aaa
outsb
ljmp
lds
sahf
test
xor
push
cmp
jns
xor
test
fnstcw
and
inc
fwait
popf
sub
movsl
or
stos
movsl
loope
dec
xor
in
into
jb
jle
push
and
xchg
shrl
mov
frstor
pushf
sbb
inc
lods
imul
lcall
cmc
cld
xchg
les
data16
ds
jbe
pop
mov
inc
test
and
inc
pop
dec
retw
js
scas
mov
cmc
cs
jbe
xchg
jp
movsl
pop
add
repz
fcoms
jae
inc
push
and
inc
int
and
or
dec
xchg
je
pop
loopne
xchg
adc
fs
mov
xor
test
clc
sbb
xor
push
out
in
pop
movsl
pop
mov
loop
jl
cmp
or
fsubl
lock
dec
push
push
add
and
scas
movsl
pop
fldl
mov
xchg
mov
push
sbb
test
push
in
addr16
xor
jae
push
push
fildll
mov
out
xor
pop
mov
cmp
sti
add
cli
adcl
pop
sub
jne
test
insb
sub
or
divl
xchg
adc
sbb
imul
lcall
inc
movsl
mov
cmpsl
xchg
fwait
cmp
or
dec
mov
out
xor
sub
rcrl
movsl
ret
rorb
jle
roll
es
pop
movsl
pushf
iret
add
adc
fwait
imul
movsl
shrl
clc
mov
mov
add
repz
mov
std
xchg
or
les
in
add
xor
cwtl
enter
xorl
mov
xchg
fisubl
add
daa
movsl
rorl
or
push
cs
movsl
mov
cmp
cmc
lret
in
popa
push
loope
je
sub
xor
lea
daa
xor
push
mov
dec
add
or
popf
fimuls
sti
cmpsb
and
movsl
xchg
cwtl
inc
xor
fchs
mov
fmull
pushf
test
sbb
push
dec
movsl
add
stos
fwait
hlt
mov
xchg
and
cmc
jo
movsb
add
sarl
pop
mov
or
inc
lods
scas
add
inc
in
pop
push
mov
cmpsl
mov
or
mov
movsl
pop
mov
mov
movsb
push
or
add
jns
xchg
xor
adc
lds
push
cmp
jnp
pop
lds
push
or
add
movsl
and
xor
ret
jno
sbb
into
pop
jmp
aam
out
mov
outsb
sti
loopnew
add
jnp
testb
cs
push
outsl
inc
xor
dec
shlb
push
inc
sbb
movsl
insb
fstpl
pop
jp
ret
movsl
jns
dec
rolb
push
pop
outsl
xchg
cmp
ljmp
lcall
outsb
movsl
sbb
add
cld
mov
loope
or
cmp
ss
push
xor
dec
aad
push
sub
movsl
mov
iret
call
in
cmpsb
incb
movsl
xlat
jo
outsb
xchg
mov
dec
jns
mov
xchg
movsl
mov
cmc
dec
and
addr16
jo
cmc
js
out
pop
icebp
stos
inc
dec
repnz
stc
mov
rolb
pop
int
movsl
popl
fnstenv
mov
xor
scas
cmpsb
xor
fisubrs
aad
or
jecxz
cli
push
sub
sbb
add
movsl
mov
jno
int
movsl
pop
mov
mov
mov
sahf
adc
andb
sbb
xor
movsl
add
lods
pop
jl
dec
imul
jb
cmp
mov
frstor
push
jl
adc
cli
lret
pop
cmpsl
sbb
xor
pop
in
or
mov
dec
popa
xchg
adc
in
jbe
mov
clc
adc
xor
int3
mov
gs
test
jb
mov
or
ja
movsl
xor
loop
stc
shrl
xor
inc
movsl
xor
aam
pop
mov
cmpsl
test
cmp
adc
sub
pop
sahf
inc
push
test
movsl
lods
adc
add
bound
mov
mov
add
dec
icebp
xor
sub
loope
aam
xor
and
adc
push
les
loop
jge
sahf
call
dec
inc
or
mov
adc
xchg
scas
scas
sahf
movsl
pop
fldenv
jl
pop
mov
leave
add
movsl
cmp
pushf
mov
rclb
mov
cmpsl
fwait
cmp
and
push
movsl
dec
mov
pop
cmp
cltd
cmpsl
jmp
out
repnz
popf
shlb
pop
rol
adc
stc
sub
out
mov
mov
ret
sub
ja
cs
sub
xchg
or
ljmp
push
mov
stos
movsl
dec
aas
push
test
jl
in
mov
out
imul
sahf
sub
mov
enter
or
jbe
rcrl
pushf
lds
push
fstpt
sbb
and
rcll
xchg
mov
sahf
movsl
mov
out
add
int3
movsl
mov
cmc
in
movsl
jae
aam
scas
jo
rcll
mov
ljmp
dec
add
fs
test
dec
xchg
int
mov
call
mov
data16
pusha
push
mov
mov
aam
imul
test
xchg
xor
movsl
pop
addl
xchg
mov
mov
notb
xor
push
push
xlat
mov
jle
sbb
sarb
or
fsubrs
loop
adc
sti
push
xchg
mov
pop
ret
hlt
adc
push
les
xor
popf
outsb
popf
push
call
sbb
fwait
mov
pop
pop
xlat
adc
scas
out
mov
stos
mov
sahf
jns
pop
lds
pop
sub
cmc
in
sub
pop
jle
mov
xchg
not
lods
mov
sti
test
and
mov
pop
pop
jmp
movsl
jecxz
in
push
adc
movsl
push
sbb
cmc
push
push
insb
pop
inc
js
jo
orb
push
popf
or
jp
sub
out
sbb
lds
xchg
push
push
add
mov
xor
pusha
adc
mov
movsl
push
cmpsb
or
mov
lock
dec
in
ds
int
movsl
fs
shlb
adc
adc
or
movsl
test
mov
iret
icebp
stos
push
stc
xlat
ror
call
outsl
dec
gs
mov
push
lods
lahf
rcrl
push
push
pop
les
inc
fadds
mov
or
jns
mov
push
fistl
and
xchg
pushf
mov
addr16
push
dec
sbb
pop
jecxz
or
cli
cmc
push
mov
push
pop
gs
sub
push
inc
xchg
je
data16
and
jbe
arpl
cmpsb
fistps
std
mov
hlt
add
jecxz
sbb
shlb
cmp
sbb
xchg
es
popf
les
sub
scas
sub
popl
or
pop
enter
pop
shlb
repz
mov
or
lcall
sbb
ja
xchg
in
lods
fnstenv
push
push
pusha
aad
cmp
sub
mov
lcall
mov
iret
jnp
fdivrs
lds
fstl
mov
push
jecxz
xchg
dec
loopne
cld
shl
sub
jmp
fldl
jns
aaa
mov
sbb
and
or
push
sub
sbb
and
scas
jl
rcrl
or
sub
sbb
cwtl
or
test
mov
mov
push
js
fs
mov
mov
and
push
out
xlat
ljmp
lea
push
loopne
popf
lcall
sbb
push
xlat
sub
clc
pop
push
add
mov
icebp
xlat
xchg
pop
int
fstp
mov
sbb
pop
jb
ljmp
adc
pop
lds
ret
and
fimuls
jnp
lds
pushf
sub
mov
sahf
push
mov
data16
mov
xchg
adc
pop
call
sub
cmp
pop
sbb
sub
out
xchg
into
mov
mov
pop
loope
loope
arpl
sub
out
stc
fldcw
mov
loope
dec
andb
dec
je
add
pop
pop
ja
shl
jg
add
pop
fnstenv
addl
test
movsl
push
jnp
dec
movsl
sahf
test
xchg
in
add
push
xlat
movsl
cs
mov
imul
js
sbb
mov
mov
gs
mov
push
call
stc
scas
or
push
out
push
push
pop
lds
inc
popf
mov
pusha
push
test
and
push
or
dec
je
data16
mov
jne
inc
cmc
stc
jl
dec
movsl
fsubr
clc
lock
mov
jecxz
or
sbb
in
sti
lcall
mov
adc
cli
mov
scas
movsb
in
lret
int
add
jb
in
and
push
lahf
out
sbb
loop
movb
lea
inc
add
xor
dec
jge
mov
mov
pop
les
movsl
imull
es
out
xchg
mov
sub
sti
and
jnp
fs
add
int
xchg
inc
notl
jbe
pop
lahf
sub
imul
sub
cmpl
xchg
xchg
jg
lcall
out
idivb
jg
mov
cld
or
xor
cmc
es
addl
inc
arpl
shl
movsl
fldt
rorb
inc
fsubs
dec
mov
mov
inc
sahf
popf
idiv
xchg
mov
nop
pop
mov
xchg
xor
add
pusha
xchg
xor
leave
movsl
js
inc
ds
and
dec
or
in
std
cmpsb
outsl
mov
sub
add
ffree
iret
fiadds
dec
nop
add
lret
dec
or
test
inc
sub
ljmp
in
and
sti
es
cmp
add
fdivrp
xlat
es
mov
fucomp
and
jno
push
leave
lret
adcl
inc
subl
add
fistps
or
adc
xchg
add
cltd
xchg
sbb
mov
adc
mov
ret
in
icebp
mov
add
inc
pop
mov
mov
sbbl
adcl
adc
mov
out
dec
inc
lds
movsl
sar
xchg
sbb
in
adc
adc
mov
mov
xchg
adc
icebp
scas
pusha
mov
xchg
mov
in
and
lret
movsl
ret
cmpsb
es
pop
insb
dec
mov
mov
shl
dec
add
push
movsl
aad
sbb
pusha
movsl
lea
xchg
inc
cwtl
icebp
fs
out
pop
inc
js
jae
stc
movsw
jnp
fdivp
jecxz
out
les
sbb
pushf
jnp
pushl
adc
rcrl
or
cld
movsl
movl
mov
iret
inc
jp
inc
shl
inc
and
and
lods
pop
mov
pop
outsl
out
jbe
xor
push
lret
lds
ljmp
push
push
cltd
adc
movsl
fdivs
inc
popf
inc
mov
andl
mov
inc
xor
popl
into
adc
arpl
inc
test
rcrb
daa
xchg
cli
insb
movsl
mov
jmp
push
outsl
gs
xchg
lcall
pushf
xchg
mov
and
loope
jnp
fnstenv
mov
enter
orl
movsl
subb
xchg
es
jp
sti
mov
cmp
aad
or
xor
jp
mov
pop
add
xchg
push
xchg
sub
popa
rcr
jae
iret
shlb
cmp
call
aam
push
jns
push
adc
jbe
xor
cmc
outsb
leave
xchg
pop
xchg
movsl
ljmp
ror
sbb
insl
lods
and
dec
or
lret
jle
sub
pusha
jbe
movsl
mov
mov
mov
insl
popa
jno
frstor
mov
ret
pmaddwd
pop
iret
shl
movsl
jnp
roll
movsl
aad
fs
sub
mov
ds
movsl
mov
loope
adc
in
mov
into
jo
and
js
leave
pop
push
jp
or
movsl
cmc
add
clc
push
pop
notl
dec
xchg
xor
in
push
pop
mov
movsl
and
into
push
inc
and
adc
movsl
adc
insb
imul
pushf
test
lret
gs
add
rcll
test
inc
lcall
xor
mov
xchg
popf
aaa
push
adc
sarl
fmuls
movsl
xor
xchg
sub
xchg
sbb
mov
sub
mov
and
movsl
cltd
mov
movsl
testl
outsb
and
bound
lret
fucomi
mov
mov
ret
sbb
xchg
mov
shrb
mov
movsl
call
dec
inc
jno
shll
movsl
dec
jnp
sub
cwtl
mov
mov
test
movsl
xchg
mov
test
shlb
movsl
add
push
outsb
mov
pop
adc
out
jecxz
xchg
jle
add
inc
push
movsl
lret
mov
pop
hlt
add
shll
and
in
push
int3
testl
imul
gs
stc
mov
xor
sbb
popf
cmpsb
dec
adc
lcall
pop
ljmp
lods
lea
xchg
ljmp
pop
mov
or
ret
imul
movsl
ret
sbb
fbld
push
pop
test
adc
stos
and
loope
jp
ror
cmp
lret
inc
sub
xor
push
jge
mov
daa
lock
adc
rcrb
mov
dec
movsl
icebp
fsubl
pop
aaa
fbld
movsl
pop
rcl
add
sbb
sbb
inc
fstps
pop
xlat
nop
mov
aas
cmpsl
movsb
xchg
out
mov
lea
push
jno
movsl
and
push
mov
movsl
add
scas
and
cmp
pop
sarl
dec
popa
inc
insb
xchg
sub
adc
xchg
rclb
movsl
sbb
jne
mov
mov
inc
dec
push
jns
mov
pop
pop
cltd
inc
cmp
xor
test
movsl
add
push
and
dec
lcall
clc
es
adc
movsl
mov
testl
je
push
cmp
xchg
or
inc
cmp
sbb
loopne
xchg
aaa
dec
enter
push
push
and
lds
cltd
xchg
cmpsb
or
cmp
sbb
jnp
xchg
scas
outsl
movsl
imul
push
adcb
movsl
mov
ljmp
ret
lea
stos
out
movsl
jecxz
gs
mov
lds
adc
stos
rclb
xor
movsl
mov
jb
scas
das
ljmp
rorb
dec
inc
sub
xor
outsb
cmpsb
lds
sti
mov
scas
mov
adcb
fcmovb
dec
adc
cwtl
sbb
inc
das
jne
dec
in
lret
rol
jmp
stos
loopne
sahf
mov
inc
andb
or
movsl
push
pop
insb
scas
fstpl
sbb
jmp
adc
lcall
sahf
sub
std
push
push
inc
addr16
mov
mov
rorb
nop
ret
aad
pop
stos
int
fadds
outsl
aas
movsl
fsubrp
mov
movsl
inc
inc
and
mov
push
and
adc
push
lock
std
rcll
stc
int3
lretw
pop
push
bound
lret
adc
sub
and
int
rcll
fs
rol
nop
cmp
movsl
pop
inc
mov
test
fstpt
sbb
test
out
dec
jb
rol
lds
movsl
addr16
mov
movsl
push
push
jb
rclb
mov
cmp
or
mov
std
add
imul
mov
xor
push
movsl
jbe
inc
add
lds
movsl
dec
add
popf
sbb
cwtl
and
xor
mov
test
movsl
cmp
ficomps
movsl
pop
jbe
inc
push
cmp
fidivs
into
sti
aad
jmp
jb
movsl
inc
gs
xchg
dec
dec
js
jecxz
xchg
jbe
adc
movsl
mov
pushf
jb
movsl
add
adc
enter
aad
in
fidivs
mov
cmp
xorb
mov
inc
inc
dec
andl
xchg
xor
adc
cltd
and
popa
pop
imul
pop
mov
insb
nop
mov
cli
fidivs
scas
movsl
aad
pop
es
rolb
popf
and
mov
push
dec
and
fbld
movsl
divl
dec
in
and
and
aam
xor
faddl
adc
dec
movsl
cmpsb
test
sub
sahf
movsl
inc
pop
xlat
adc
xchg
mov
mov
mov
and
in
mov
lahf
xchg
mov
sbbl
repnz
jle
xchg
adc
mov
mov
icebp
hlt
fbld
pop
in
dec
jl
jo
xchg
push
push
movsl
stc
push
sbb
mov
gs
mov
push
pop
movsl
fdivrl
shl
mov
adc
aas
shl
popf
adc
jp
jb
mov
sahf
and
repnz
jo
mov
xchg
dec
shlb
sbb
mov
mov
jmp
pop
es
hlt
shl
add
or
jge
aaa
movsl
dec
ret
cmpsl
dec
mov
test
inc
imul
xor
movsb
lcall
pushf
lods
ds
inc
mov
movsl
or
ds
inc
addr16
movsl
out
mov
mulb
adc
in
jmp
movsl
into
pop
pop
lds
mov
repz
nop
mov
popf
movsl
mov
mov
fdivrp
jnp
movsl
pop
jae
lret
pushl
scas
dec
mov
add
inc
sub
mov
fiadds
mov
jecxz
pop
movsl
or
sbb
mov
add
inc
xchg
inc
sbbl
popa
incb
cmp
inc
pop
mov
sub
xlat
repnz
test
out
mov
lea
imul
mov
xlat
sbb
shll
mov
lea
fldln2
mov
out
push
mov
shll
jge
stc
les
pop
fadds
mov
testb
es
and
es
and
push
pushw
inc
push
mov
std
shl
out
cwtl
pop
lret
adc
sti
movsl
inc
xor
outsl
push
add
cltd
jp
ret
movsl
outsb
inc
xchg
out
lahf
mov
popa
movsl
js
cld
xlat
cmp
pushf
out
pop
add
dec
mov
push
lahf
sbb
xchg
and
push
mov
push
outsb
jle
jnp
mov
mov
adc
loop
test
mov
xorb
inc
shlb
pusha
aam
mov
cmc
stos
js
push
xchg
add
sti
mov
jbe
aas
psllq
rcrb
pop
adc
sbb
je
ja
out
mov
faddl
sub
lret
pop
int
xchg
in
jle
jg
int
mov
outsl
popa
fsubs
jge
int
sbb
sahf
adc
shlb
testl
mov
int3
movsl
add
jp
mov
std
push
pop
mov
sahf
lcall
mov
jle
out
xchg
inc
pop
xor
sahf
jb
imulb
mov
int
cs
sub
shr
pop
pop
icebp
stos
fldenv
push
ja
sbb
lret
hlt
push
inc
lret
mov
xor
mov
xchg
iret
ja
andb
in
push
in
movsl
clc
scas
mov
jo
pop
inc
in
sbb
movsl
das
cmp
mov
and
mov
cwtl
inc
lods
cli
leave
cmpb
pop
aas
xor
add
jg
pop
outsl
sbb
test
mov
pop
mov
adc
push
jmp
vpaddusb
stos
fnsave
out
dec
int
or
xor
mov
jae
push
ret
hlt
pop
sarl
pop
push
movsl
and
shll
lea
mov
jnp
xchg
mov
push
insl
sbb
fcomps
and
pop
andl
mov
mov
adc
pop
push
lret
jmp
add
pop
movsl
cmpsb
adc
sti
cmp
xlat
mov
mov
cmc
lcall
into
mov
mov
sub
movsl
cmp
mov
and
inc
scas
or
fbstp
arpl
push
lods
inc
ss
mov
cld
std
jmp
mov
nop
in
jns
in
xor
test
data16
sub
gs
movsl
xchg
pop
pop
mov
movsl
ror
out
jno
pop
sti
mov
ja
loope
cmp
xchg
xchg
jmp
cmpl
xor
push
jo
in
movsl
ljmp
mov
arpl
cld
push
add
mov
add
fdivrs
and
xlat
mov
repnz
push
scas
in
imul
movsl
call
xchg
shrl
push
xlat
fdivs
aad
outsb
push
push
lods
add
add
ds
lods
xchg
mov
mov
test
in
jle
fisubs
jno
js
mov
movsl
in
fwait
sub
loop
movsl
add
testb
xchg
scas
and
movsl
cmp
dec
xor
movsl
push
fs
dec
push
andl
cmp
adc
mov
out
adc
jbe
fcomps
mov
lcall
cmpsb
cmp
mov
pop
push
sub
shlb
xchg
daa
mov
jmp
pusha
and
or
ss
add
sarl
mov
xchg
jle
loope
adc
sbb
mov
cmp
scas
movsl
mov
clc
sbb
xchg
sbb
mov
dec
movsl
jge
in
fdiv
push
pusha
pop
jmp
sbb
pop
ja
movsl
xchg
les
movsl
mov
jmp
jbe
push
lds
sub
movsl
loope
mov
andb
mov
inc
imul
ret
movsl
jmp
subl
iret
and
outsl
dec
xchg
ficomps
lods
faddl
roll
scas
test
or
lret
dec
sub
cmc
movsl
jmp
pop
sahf
inc
loopne
mov
lods
and
jmp
push
stc
pushf
xor
jle
sahf
call
lods
lds
nop
outsl
xor
mov
xor
xor
sub
cmc
pop
mov
in
in
fcomps
push
add
movsl
pop
mov
inc
push
pushf
jge
adc
pop
sti
push
cmpsl
sbb
inc
mov
scas
and
add
and
out
jl
push
pop
mov
adc
test
aad
mov
adc
lods
mov
repz
mov
jmp
mov
hlt
sub
andb
shrl
movsl
je
xor
sbb
cmp
sahf
inc
mov
and
das
jmp
ljmp
dec
sub
jge
mov
mov
dec
push
movsb
or
push
aam
sbb
div
jecxz
popf
cs
gs
in
add
jmp
mov
imul
xor
out
cs
loope
or
xlat
shr
iret
roll
hlt
call
dec
cmp
lcall
inc
sbb
hlt
movsl
lret
stc
cmp
rcr
cli
outsl
xchg
inc
cmp
mov
cltd
movsl
xchg
nop
and
out
add
or
add
lcall
adc
lcall
stos
shl
nop
scas
imul
movsl
fcom
sub
sbb
addl
sahf
adc
aad
scas
and
addr16
add
mov
push
lret
push
push
fbld
pop
movsl
out
das
sbb
pop
add
movsl
jbe
and
in
bound
imul
add
mov
popa
add
mov
sbb
sub
in
imul
and
add
movsl
add
jmp
sbbb
dec
lds
dec
push
pop
push
or
lock
std
fcmovbe
push
lret
jns
sbb
dec
insb
movsl
das
enter
xchg
sahf
scas
sahf
push
push
int3
mov
pushf
in
stos
lods
and
push
fxtract
fsts
xor
clc
dec
pop
add
jecxz
inc
movsl
mov
jg
call
push
lret
movaps
sbb
mov
push
fcomi
mov
movsl
mov
aaa
pop
shll
pop
imul
insb
in
test
test
shll
dec
ret
mov
mov
pop
mov
lcall
xlat
in
out
push
movsl
inc
or
and
sub
mov
lods
mov
ret
test
fistpll
xor
dec
cmp
pop
aam
lods
jecxz
adc
add
ret
sahf
mov
test
ss
movsl
loop
adc
leave
xchg
popf
xor
rcl
movsl
mov
andb
cltd
bound
jns
dec
push
cmp
push
ror
jmp
jge
mov
lock
mov
mov
adc
movsl
lods
pop
jns
les
fsubrs
loop
adc
fwait
bound
cltd
lea
cmc
movsl
pusha
mov
push
and
jns
add
pop
movsl
je
sub
pop
xlat
ret
aaa
sar
out
out
push
cli
movsl
fdiv
inc
fs
jg
lds
mov
gs
stos
mov
mov
std
lds
pop
movsl
dec
sub
insl
movsl
inc
or
movsb
mov
cmp
movsl
jo
aas
add
sbb
mov
je
jl
test
in
test
pop
scas
push
nop
mov
mov
inc
lcall
cli
sbb
es
jbe
ret
sahf
mov
and
in
nop
add
xchg
mov
mov
cmp
das
jb
ud2
out
clc
popf
inc
sub
fwait
sbb
out
inc
sub
cmpsb
in
sub
sahf
sbb
push
loop
mov
xor
inc
loop
xchg
movsl
jecxz
add
popa
or
mov
sub
mov
arpl
and
loop
mov
shlb
dec
xlat
xchg
dec
fmull
cmp
iret
fyl2x
movsl
lret
in
jge
sahf
or
js
es
adc
and
push
inc
cmpsb
lds
sub
fistpl
mov
dec
orb
movl
call
leave
out
or
ret
repz
xor
and
adc
das
xchg
movsl
mov
cmp
cmp
fwait
adc
ja
movsl
aad
xor
and
int
out
movsl
xor
dec
subl
cmp
pop
mov
lret
push
movsl
jae
cmp
sbbb
add
sbb
mov
fisttpll
test
push
inc
das
mov
clc
fwait
xchg
leave
pop
mov
cwtl
inc
lods
test
movsl
scas
sahf
push
test
stos
into
ljmp
cmc
hlt
in
movsl
mov
add
scas
test
in
inc
test
stc
sbb
movsl
lock
aad
leave
movsb
movsl
and
dec
cmc
sbb
mov
pop
mov
nop
sub
mov
fldl
shrl
pop
enter
out
mov
jp
pop
arpl
movsb
pop
ret
fsubr
out
in
int
jae
pop
imul
popf
xor
andl
lret
movsl
aad
push
and
or
cmc
mov
xchg
mov
iret
loopne
rol
movsl
icebp
in
mov
sbb
repnz
push
wrmsr
pop
mov
aas
sbb
pop
loopne
inc
stos
sbb
ror
not
cwtl
insb
outsb
pop
sbb
mov
das
pushf
sarl
es
in
add
bound
popa
movsl
iret
cli
sub
sub
mulb
cmp
out
dec
jp
push
ret
xchg
mov
lahf
not
push
lcall
lea
sti
lret
js
addr16
ljmp
xchg
pop
ret
add
sub
divb
mov
pop
or
stc
pushf
pop
push
sbb
dec
push
inc
fnstcw
cmp
jbe
dec
clc
int3
in
sub
iret
movsl
iret
xchg
call
into
pop
xlat
mov
dec
testb
inc
dec
mov
stc
push
fstpl
pop
les
and
inc
and
aad
push
popf
in
xchg
pop
cmpsl
or
cmc
pop
call
dec
jl
xor
into
jae
pop
rclb
push
xorl
cmp
sbb
or
shrl
movsl
icebp
jecxz
adcl
movsl
fsubl
add
jns
enter
andb
leave
mul
push
scas
dec
movsl
add
ret
mov
cmp
es
or
movsl
sahf
rcrb
cmc
movsl
add
fucomp
imul
xor
das
cld
cmp
mov
mov
out
lcall
and
jne
out
out
dec
stos
das
movsl
or
fwait
scas
sub
xchg
pop
movsl
sub
pushf
mov
adc
out
int3
push
out
movsl
test
mov
mov
jae
jle
pop
aaa
mov
iret
leave
sti
movsl
faddl
adc
fisttps
je
mov
cmp
movsl
mov
pop
jo
adc
rcll
cmc
movsl
jnp
lods
fwait
and
iret
xor
inc
add
mov
add
call
sbbl
inc
movsl
mov
insl
push
imul
or
sub
test
pusha
test
mov
cmp
pop
mov
pop
push
in
dec
mov
testl
and
xchg
shl
in
mov
test
push
jmp
fstl
or
movsb
push
mov
inc
scas
sbb
xchg
fimull
adc
popf
push
hlt
imul
movsl
xchg
jg
enter
out
add
movsl
jecxz
cltd
inc
cmp
xchg
shll
mov
into
mov
mov
xchg
daa
in
std
mov
ret
dec
mov
push
sub
in
aad
call
inc
sub
inc
pop
xor
test
lea
movsl
adc
pop
inc
movsb
push
dec
stos
test
or
and
xchg
pushf
sub
mov
push
jae
cmc
jmp
loop
call
mov
lea
jg
push
add
movsl
shl
out
enter
movsl
fs
adc
stos
imul
mov
mov
cltd
pushf
int3
movsl
sbb
jecxz
sbb
mov
sarb
repnz
movsl
xlat
dec
fs
lock
dec
and
pop
xor
cli
sub
cmpxchg
test
xor
pop
xor
or
fwait
stos
lahf
pop
lds
xor
pop
inc
pushf
cmpsb
mov
add
jge
arpl
push
movsl
sbb
daa
and
cltd
std
sahf
loope
fisubrl
sti
xchg
lds
movsl
js
jecxz
mov
sbb
push
jmp
leave
jp
out
data16
movsl
and
fxch
mov
rcll
in
add
xchg
adc
sbb
enter
movsl
in
lock
fwait
push
cli
and
das
jl
leave
dec
pop
out
call
push
orl
xchg
movsl
push
add
dec
loopne
xlat
fsts
xchg
movsl
ds
push
and
aad
sahf
test
mov
mov
movsl
mov
repz
pop
xlat
mov
js
mov
jne
je
add
pop
jno
dec
dec
jg
ss
stc
add
movsl
and
sahf
mov
inc
push
mov
xchg
cmpsl
and
lahf
test
movsl
ljmp
mov
adc
add
push
flds
add
aam
gs
xlat
jmp
pushf
sahf
daa
xor
xchg
fildll
push
inc
push
shrl
shll
inc
push
pop
gs
push
movsl
int
out
faddl
adc
mov
scas
outsl
je
adc
inc
movb
lock
bound
movsl
rcr
out
iret
cmc
inc
imul
lods
push
shl
andb
jg
cmpsl
cmp
push
movsb
push
cwtl
or
inc
adc
sbbb
pop
int
cmc
inc
fldt
pushf
pop
and
jmp
aas
loopne
lds
xchg
inc
movsl
cmpsl
cs
stos
bswap
mov
cmpl
sbb
fisttpll
push
cmp
insb
sbb
mov
out
sbb
movsl
stos
adc
addl
cmc
negl
inc
pusha
jmp
jns
xchg
movsl
gs
mov
aaa
stos
xchg
push
out
mov
fwait
ds
sbb
lods
cmp
pushf
xchg
sub
fcoms
notb
xchg
push
lret
testl
mov
push
fildll
pop
movsl
inc
jne
loope
popf
test
push
rdmsr
cmpsb
sub
into
movsl
cld
fstl
push
arpl
mov
ja
lcall
shlb
dec
lock
and
sahf
into
or
push
jae
jge
notl
jp
adc
shll
and
test
cli
xchg
call
inc
loopne
testb
add
inc
xor
call
out
jmp
lret
rolb
mov
mov
test
push
movsl
jecxz
mov
adc
add
cmp
sub
sub
jno
mov
movsl
mov
pushf
cmp
mov
xchg
sbb
mov
mov
mov
out
in
repz
movsl
dec
cmovne
xor
mov
mov
rcrb
cmc
ret
movsl
mov
lods
data16
leave
lods
or
xor
in
and
jle
andl
outsl
pop
mov
imul
mov
sub
xchg
lea
xchg
js
movsl
sub
add
pop
scas
xchg
lahf
pop
dec
cmp
repnz
mul
in
out
push
lock
mov
ds
hlt
in
inc
gs
loop
jmp
pop
sahf
lock
int3
mov
push
add
mov
xor
lods
setnp
dec
mov
jmp
and
cmpsl
pop
mov
mov
add
test
imul
movsl
mov
pop
pop
icebp
enter
mov
sub
or
pop
or
fildll
popa
sub
ficompl
cmp
sbb
sti
lods
popa
icebp
xor
pop
or
scas
pusha
mov
pop
inc
pop
sbb
pop
mov
mov
and
cmpsl
loopne
mov
enter
jb
ja
hlt
loope
outsl
fsubp
pop
sarl
cmc
cmpsb
ljmp
icebp
outsb
pop
stos
psubusw
and
popf
arpl
outsl
stos
or
andl
test
rcrb
jb
jp
pop
xchg
aad
or
add
fidivrl
inc
les
and
xchg
sub
mov
lcall
sbb
inc
sub
push
rcrb
cmc
mov
cmc
or
das
adc
stos
aaa
lcall
dec
sbb
mov
adc
pop
divb
push
mov
mov
insl
xlat
xchg
cli
filds
loope
ja
gs
push
js
pushf
stc
out
dec
cmpsb
in
ret
leave
cld
jns
filds
cmp
int3
pop
icebp
or
jnp
addl
popf
sub
leave
jo
test
adc
lcall
xchg
testb
jle
fists
rcr
adc
test
or
adc
dec
jl
push
jo
sarl
shl
loop
mov
aaa
jae
jns
aad
pushf
cmp
jne
out
pop
icebp
dec
or
popa
sub
xchg
adc
jp
push
es
xchg
push
loope
xor
xlat
sub
aad
dec
inc
sub
popf
mov
sbb
jl
into
sahf
movsb
and
lock
cmp
movsb
in
inc
int3
into
add
dec
aad
mov
push
or
mov
and
inc
loop
addl
push
or
std
icebp
into
cmp
mov
and
fidivl
push
push
test
push
sub
mov
inc
mov
loope
movsb
mov
sbb
in
stc
repnz
loopne
xchg
dec
insl
and
pop
aam
inc
sub
mov
mov
bnd
into
in
mov
enter
ja
data16
mov
bound
jecxz
negb
push
out
aam
dec
ret
jl
xchg
lret
outsb
mov
jbe
cs
orl
out
dec
aas
cmpsb
cmp
dec
dec
cwtl
into
add
icebp
cmp
push
out
or
int3
mov
mov
jge
jns
inc
push
cld
cmpsl
lret
fwait
push
jg
and
icebp
outsl
icebp
ret
out
xor
cmp
sbbb
test
or
out
ret
jnp
cmp
mov
call
repnz
repz
fwait
jno
cmp
or
jge
jp
sub
dec
movsb
dec
daa
test
fwait
icebp
xlat
lcall
mov
hlt
xchg
sub
push
movsb
cmc
outsb
in
icebp
das
scas
add
mov
stos
pop
push
int
pop
xchg
inc
push
push
std
mov
mov
inc
sub
adc
cmpsb
fwait
sub
or
adc
or
mov
pop
pop
push
mov
push
pop
ds
arpl
sub
add
lahf
push
enter
mov
push
repnz
or
scas
and
inc
movsl
mov
repnz
and
push
mov
sub
xchg
mov
loop
lds
adc
pop
jns
cld
in
inc
fisubs
and
insl
add
pop
aas
mov
push
mov
mov
and
xchg
sbb
add
fdivrl
mov
push
loopne
or
mov
fisubs
mov
sbb
inc
clc
cmp
daa
lea
scas
xchg
xor
xchg
aas
sub
jle
push
data16
and
into
sahf
mov
push
mov
and
push
in
in
pusha
mov
in
out
or
jb
mov
sub
scas
sub
int
mov
stos
pop
mul
and
outsl
in
and
ja
scas
movsl
js
dec
scas
add
aad
out
lea
mov
and
mov
cmp
or
rorb
inc
dec
lcall
sbb
xchg
mov
leave
xor
scas
mov
cmc
xor
in
out
lock
push
cli
add
mov
aaa
stos
fsubs
loop
mov
dec
and
push
dec
fsubr
mov
movsl
mov
jae
call
mov
sub
in
inc
js
pop
ja
fsubr
push
loop
out
and
pop
push
xchg
movsb
mov
add
movsl
fsubrl
xor
push
dec
jns
fwait
data16
dec
movsl
nop
inc
or
movsl
xor
xchg
out
push
shll
xchg
ds
sahf
pop
cli
jb
sbb
lods
mov
push
mov
in
lock
leave
movsl
xchg
stos
sub
movsl
loopne
add
adc
rcrl
rclb
out
adc
dec
pushf
lcall
movsl
pop
adc
enter
insl
lahf
in
mov
pop
rclb
inc
ss
in
movsb
push
mov
cmp
adc
push
push
mov
and
mov
and
out
in
test
cld
in
sbb
fcmovnu
nop
out
fdivr
in
movsl
inc
jg
in
add
jne
pop
pop
inc
adc
movsl
mov
push
andl
sub
mov
xchg
movsl
mov
dec
adc
jge
in
gs
and
and
xorl
and
bound
jp
jns
movsl
je
cli
cld
into
test
repnz
and
sbb
mov
mov
movsl
aam
aad
and
enter
or
loope
les
add
movsl
xor
aas
mov
mov
sbb
adc
subb
jmp
js
hlt
jecxz
push
xchg
fsubl
int
imul
data16
or
mov
into
cwtl
inc
lret
jbe
pop
jns
mov
sub
and
xor
sub
cmp
movsl
mov
sub
sub
cmpsl
xlat
dec
adc
pop
jmp
cmp
push
rcrl
pop
movsl
jl
aad
pop
loopne
addb
pop
fprem
add
lret
cmp
mov
mov
push
in
adc
popa
pop
leave
lea
inc
mov
push
shlb
and
movsl
dec
test
sbb
jmp
frstor
movsl
push
inc
sti
cld
jae
movsl
insl
add
cmp
outsl
cmp
imul
popf
je
and
cmpsl
or
xor
std
negl
cmc
mov
pop
test
in
mov
inc
das
mov
mov
jne
inc
dec
shlb
jl
inc
notl
mov
and
sub
movsl
xchg
pop
push
stc
cwtl
and
push
and
mov
movsl
mov
imul
daa
fists
jle
sbbb
hlt
cmp
dec
jp
scas
mov
cmc
stos
mov
push
xchg
mov
push
andl
fcmovu
jmp
pop
movsl
mov
aaa
stc
cmp
pusha
outsl
addb
lods
lcall
sahf
in
mov
lds
mov
mov
or
out
adc
lods
pop
aas
jecxz
lcall
xchg
push
cwtl
jnp
pop
mov
mov
xchg
push
movsl
fsubp
cld
xlat
insl
mov
xchg
add
mov
lret
int3
aad
mov
xchg
and
shrb
mov
addl
movsl
or
xor
cli
pop
lods
mov
xchg
aaa
mov
notb
dec
lret
movsl
mov
cld
movsb
adc
test
dec
cs
movsl
fsubrs
popf
dec
lods
into
scas
loopne
shl
jmp
bound
pusha
pop
sarl
sbb
and
test
or
cmp
pushf
jne
fs
popf
pop
mov
mov
push
xor
cmp
movsl
sbb
mov
popf
and
jmp
mov
or
mov
adc
mov
in
les
lret
or
js
lds
fs
data16
add
sub
js
movsl
pop
jge
icebp
in
or
and
xor
loope
push
dec
aad
mov
xchg
inc
test
test
imul
sbb
pop
dec
imul
xchg
call
movsl
mov
imul
stos
and
adc
fmuls
jbe
push
mov
stc
in
sbb
pop
out
add
movl
pop
movsl
adc
vcvttpd2dqy
loope
in
movsl
and
movsl
test
loope
movsl
push
idivb
add
lock
jecxz
loope
mov
mov
shr
lds
jp
mov
stos
lods
and
pop
jmp
push
inc
cltd
add
jmp
pop
and
mov
shll
mov
cltd
cmpsb
mov
nop
sub
scas
adc
xor
inc
sbb
pop
mov
mov
mov
movsl
add
insl
cmp
movsl
repnz
xchg
repz
dec
mov
andl
cmc
lahf
inc
popf
lods
movsl
and
jbe
cld
fucom
ljmp
push
xor
cmp
repnz
xchg
repz
push
js
jae
sbbb
sbb
xchg
add
insb
jmp
pushf
cmc
add
sbb
cmp
mov
sub
add
fldl
aam
movsl
jg
xchg
lea
xorb
dec
cli
int
jmp
nop
sar
xor
ds
stos
movsl
push
in
cwtl
xchg
por
jno
cmp
push
rcll
xchg
jo
aas
in
jmp
movsl
popf
mov
add
adcl
adc
arpl
call
jmp
fs
neg
js
mov
mov
pop
dec
fnstcw
xchg
out
test
cmp
das
mov
sub
xchg
sbb
mov
roll
xor
movsl
mov
xchg
daa
cmp
dec
cld
movsl
add
adc
push
cmpsb
data16
inc
cmp
in
sub
sbb
lock
movsl
sbb
xchg
mov
icebp
inc
es
jne
mov
rcrb
mov
lods
pushf
scas
add
or
jns
sti
test
movsl
clc
cmp
or
out
mov
mov
fsubl
mov
add
std
movsl
add
subl
xlat
sti
in
adc
and
dec
loopne
mov
adc
stos
sbb
lods
pop
pop
leave
sub
lret
mov
xor
mov
mov
lock
push
movsb
in
adcb
inc
dec
iret
shrb
cwtl
in
cmc
xchg
jbe
sub
je
test
inc
pop
arpl
rorb
mov
pop
test
mov
ss
and
xchg
jecxz
movsb
jno
sbb
cmpsl
adc
loope
pop
jns
mov
hlt
xchg
pop
cmc
imul
sahf
and
lods
mov
push
popf
mov
cmc
xlat
and
dec
dec
sbb
fcmovnu
mov
or
out
jmp
fs
icebp
ret
sbb
in
push
sbb
inc
adcl
aad
pop
push
fisttpll
scas
icebp
inc
test
cmp
mov
cmc
xor
cmpsl
lds
stos
add
sub
sbb
xchg
notl
ljmp
mov
pushf
xchg
nop
std
adc
pop
inc
sbb
mov
dec
mov
imul
ret
loopne
mov
loope
pop
roll
mov
xor
stos
loopne
xchg
adc
movsl
push
pusha
jge
or
sbb
sub
icebp
movsl
shll
les
and
xchg
pop
pop
stos
adc
es
mov
xchg
int3
mov
lock
ret
ss
cmp
dec
xlat
ret
xchg
sub
pop
lret
fisubs
sbb
mov
popa
cmp
pop
repz
int3
repz
dec
hlt
loope
fstpl
inc
bound
mov
xchg
cmp
clc
iret
mov
hlt
adc
pop
lahf
arpl
sbb
cli
inc
jg
sbb
xchg
iret
lods
cmpsl
inc
add
scas
int
xlat
add
pop
sti
push
pop
and
xor
fdivr
daa
or
jns
pop
in
in
sub
cmc
pop
incb
sbb
pop
mov
inc
testb
xchg
push
scas
out
lcall
fstpt
jne
dec
sbb
movsl
mov
dec
push
lods
movsl
or
dec
sub
movsl
lret
cmp
inc
mov
movsb
push
test
pop
add
adc
pop
mov
mov
pop
jae
jb
movsl
imul
in
popf
test
xchg
movsl
test
pushf
repnz
xchg
lock
insb
dec
shll
xor
mov
ret
into
push
mov
xchg
mov
mov
adc
lods
xchg
sbb
in
shrb
pop
add
and
sub
pop
jle
pop
add
in
hlt
push
movsl
in
idivb
movsl
pushf
push
adc
movsl
adc
dec
insl
push
inc
or
xchg
mov
dec
wbinvd
cmc
or
mov
imul
ljmp
mov
and
xor
mov
push
mov
mov
jne
movsl
cld
and
js
mov
icebp
and
ja
movsl
jmp
neg
jecxz
out
pop
pop
in
mov
jmp
cmpsb
mull
add
pop
xlat
pop
hlt
add
cmc
lds
pop
push
xchg
and
aas
repnz
pop
fs
dec
insl
movsl
imul
push
jns
sub
dec
daa
aaa
sub
sarl
int
movsl
mov
cmpsl
andb
sbbl
dec
int
jb
pop
jae
movsl
mov
insl
inc
sub
sub
sbb
mov
mov
jecxz
repz
gs
mov
mov
jne
sub
mov
in
fcoms
data16
movsb
mov
leave
daa
pop
in
repnz
test
mov
ljmp
push
sub
shll
adc
mov
sub
neg
fbld
dec
cmp
cmp
mov
sbb
mov
xor
xchg
ds
xor
sub
or
mov
jle
inc
ret
testb
shr
test
movsl
jns
jl
and
push
enter
stos
mov
adc
fnstsw
jge
fsub
or
and
out
loopne
movsl
fstps
pop
pop
mov
or
in
inc
pop
xchg
in
jp
sub
mov
push
stos
sbb
and
cwtl
in
cmpsl
sub
pop
ficomps
in
cltd
jnp
out
lods
cmp
repz
shll
mov
pop
and
push
sub
movsl
jle
sbbl
jmp
push
mov
lds
mov
movsl
dec
dec
addr16
pusha
mov
lock
cmc
aad
loopne
inc
push
arpl
mov
rolb
in
aam
cwtl
xor
rep
mov
cmp
push
push
jle
movsl
dec
mov
cli
mov
stos
out
xor
mov
movsl
aam
push
js
inc
insl
movsb
movsl
cltd
arpl
cld
flds
movsl
ret
dec
dec
fcomi
test
lcall
sbb
mov
out
int3
mov
das
cmp
enter
dec
push
push
fwait
dec
push
push
ret
dec
jae
imul
sbb
movsl
mov
push
mov
movsl
sub
dec
xchg
xorl
rcll
cmp
enter
movsl
call
xchg
sahf
into
push
int
lods
dec
or
or
filds
and
clc
ja
movsl
xor
stc
sub
imul
add
and
dec
pop
adc
sbbb
lods
dec
fs
mov
aaa
and
push
movsl
sbb
movsb
mov
mov
jb
gs
lds
mov
lea
scas
adc
jmp
adc
cmp
inc
push
movsl
scas
rclb
mov
shll
jp
daa
mov
lds
stos
push
cmc
rclb
repz
movsl
shl
orl
sbb
mov
or
int
out
sub
cmpsl
out
movsl
cmp
mov
xchg
fs
inc
rorl
sbb
mov
mov
xchg
inc
dec
aam
loope
add
arpl
jl
cmp
ss
or
iret
aam
lcall
movsl
push
inc
nopl
mov
xchg
or
leave
cmp
xchg
movsl
vpmuludq
movsl
ja
mov
inc
popf
jbe
arpl
and
adc
jg
adc
fstp
into
mov
stc
lods
aas
inc
mov
movsl
push
fnstenv
or
call
int
test
pop
add
std
mov
lds
mov
test
ficoms
add
mov
jp
std
xchg
sub
rcl
in
xchg
dec
add
data16
push
movsl
add
enter
leave
dec
and
out
adc
xchg
and
jo
stc
xor
aad
cmp
sub
lcall
pop
dec
jmp
imul
sbb
add
inc
adc
movsb
pop
movsl
or
hlt
cld
in
mov
mov
push
shl
pop
vpshld
movsl
fwait
lahf
andl
aaa
mov
lret
sub
push
pop
ret
jmp
and
rorl
dec
in
ret
movsl
pop
mov
or
cmpsl
push
movsl
subl
mov
mov
stc
and
movsl
je
lock
or
popf
out
and
mulb
dec
imul
cmpsl
push
mov
push
lods
arpl
add
lret
inc
inc
cwtl
mov
xor
std
xor
rclb
xchg
lahf
movsl
dec
int3
nop
or
add
movsl
add
jp
cmp
mov
mul
inc
sbb
adc
jne
repnz
js
movsl
dec
in
iret
int
and
cmp
in
clc
mov
inc
popf
inc
xor
push
mov
add
push
into
xor
mov
dec
sub
cmp
push
jb
dec
mov
test
pop
test
inc
movsl
shrb
sub
dec
movsl
jae
pop
in
hlt
cli
sub
rcr
lahf
xchg
push
popf
sbb
les
jbe
movsl
pop
push
add
sbb
xchg
cmp
mul
movsl
adc
dec
lods
push
shll
out
mov
movsl
pop
pop
inc
xchg
scas
pop
shll
push
adc
mov
ss
dec
stos
mov
in
mov
or
or
lret
lea
mov
add
movsl
leavew
sbb
jno
xor
jge
in
bound
add
mov
movsl
cmp
jns
mov
mov
jp
push
repz
movsl
jo
mov
sarb
xchg
xchg
mov
dec
jno
pop
cmp
xchg
mov
mov
fiadds
movsl
inc
push
notb
inc
lcall
dec
pop
add
mov
inc
xchg
daa
divl
adc
jle
movsl
shr
loopne
aam
pop
in
fsubs
pop
ja
sub
push
clc
sarl
movsl
lock
xchg
mov
cwtl
cli
in
pop
sbb
or
arpl
dec
xchg
mov
lods
and
jecxz
sub
push
lret
cmp
push
in
popf
cmpsb
dec
hlt
dec
and
mov
push
notb
jns
daa
fildl
stos
cmp
mov
push
mov
xchg
pop
push
loop
push
jns
movsl
sbb
mov
cltd
sub
inc
xchg
test
push
xchg
das
stos
mov
mov
xlat
sub
out
mov
daa
adc
push
xlat
mov
pop
and
jno
lahf
mov
testb
fists
push
imul
sub
mov
mull
shlb
xchg
out
fstpl
in
xchg
mov
imul
mov
add
out
mov
jmp
shrl
xchg
sti
and
cs
and
jbe
daa
popa
mov
push
daa
icebp
es
sarl
xlat
mov
lcall
dec
mov
jp
mov
ja
cwtl
out
jnp
jmp
inc
fldcw
mov
pop
and
cs
insb
push
shl
dec
dec
ds
or
movsl
and
lret
push
sbb
or
jg
daa
xchg
imul
and
push
loop
test
mov
inc
std
push
inc
leave
add
test
sub
mov
subl
jnp
sub
div
and
push
clc
into
icebp
mov
pop
sti
inc
scas
rcrl
cmc
movsl
in
jb
fs
movsl
jecxz
jp
cmp
icebp
push
mov
mov
inc
shll
cmpsl
outsb
movsl
sahf
in
or
inc
movsl
sub
mov
or
jl
push
jo
sub
cltd
add
movsl
es
loopne
jmp
sti
push
inc
xchg
add
xchg
rolb
sub
shrl
call
jmp
sub
movsl
into
call
mov
jno
sub
movsl
pop
push
add
neg
mulb
mov
ret
sti
movsl
jmp
andb
movsb
outsb
movsl
dec
loope
sub
movsl
fwait
sub
mov
movsl
push
fs
es
xor
nop
add
or
out
lret
push
clc
enter
xlat
in
inc
pop
jle
shlb
push
in
cld
hlt
movsl
jl
xorl
pusha
jp
xchg
dec
arpl
jecxz
jns
mov
mov
jmp
xorl
mov
lcall
push
push
and
push
test
mov
mov
xchg
int3
out
movsl
lea
xchg
stos
stos
lcall
cld
mov
scas
movsl
test
aas
cli
sarb
pop
mov
shll
xor
inc
push
repz
out
mov
movsb
sbbb
push
jl
push
mov
sahf
push
xor
clc
xor
xchg
xor
in
lcall
fcoms
pop
jmp
pushf
adc
in
rcl
out
sbb
adc
movsl
aad
mov
je
sahf
xchg
inc
mov
lods
data16
jg
gs
inc
push
movsl
sub
mov
xchg
movsl
mov
mov
repnz
dec
push
jns
sub
adc
sti
sbb
movsl
mov
cmp
mov
addr16
sub
mov
fisubl
cmp
adc
jmp
icebp
push
mov
loope
leave
inc
in
sub
movsl
stos
jb
aam
mov
mov
and
lock
adc
sbb
lods
mov
movsl
fldl
enter
lea
dec
push
cmp
icebp
sub
xchg
mov
test
cmp
imul
push
imul
int
lock
pop
sti
cld
mov
lods
scas
or
inc
mov
lret
das
sbb
xchg
daa
movsl
loop
shr
pop
insl
sbb
rcpps
ret
sub
ret
movsl
call
and
or
subb
push
imul
mov
movaps
adc
inc
int3
movsl
outsl
rolb
pop
movsl
loop
or
mov
jp
fbld
push
stos
nopl
enter
addr16
mov
imul
movsl
mov
mov
stc
pushf
xchg
lea
add
xor
push
fwait
inc
and
pushf
lods
mov
dec
xchg
xchg
mov
xchg
push
and
in
in
cld
int
lcall
inc
sahf
pushl
fildll
addr16
pop
outsl
movsl
dec
add
push
js
movsl
jle
cwtl
jns
sbb
mull
jbe
push
addr16
xor
mov
mov
mov
filds
xchg
push
call
ljmp
jmp
jle
das
sub
jae
xchg
xchg
inc
in
sbb
movsl
flds
sbb
jmp
mov
jbe
in
scas
test
mov
cmp
add
mov
push
mov
data16
xchg
sbbb
fs
lea
push
popa
outsb
add
movsb
or
xorl
movsl
flds
mov
subl
adc
mov
daa
test
movsl
mov
xchg
lret
sub
push
bound
movsl
sub
call
fdivp
jecxz
cmp
mov
test
data16
xchg
sbb
xor
and
cmpsb
mov
gs
cmpsl
pop
cmp
in
mov
ret
lret
cmp
fs
pushf
or
clc
add
loop
test
ret
xchg
fcoml
or
adc
jl
pop
movsl
add
pop
push
movsl
lods
mov
jne
bound
mov
aad
movsl
je
ljmp
adc
and
inc
pushf
cli
jle
jo
push
shrl
movsl
sub
add
movsl
adc
lods
mov
adc
or
movsl
sbb
fidivs
mov
sbb
repz
pop
movsl
mov
xor
xchg
movsl
ss
xor
popf
dec
mov
outsl
inc
xor
movsl
nop
and
scas
test
ja
fdivp
into
push
iret
loopne
cmp
pop
bound
lods
test
jns
mov
test
mov
sub
cmpsb
cmp
andl
clc
push
jle
xor
inc
shlb
movsl
call
mov
adc
into
out
iret
ja
jmp
dec
mov
pop
pop
or
ds
movsl
push
cmpl
add
bound
add
inc
adc
fstpl
sbb
movsl
icebp
dec
notl
imul
inc
push
in
jae
xor
movsl
xchg
sub
out
idivb
push
push
scas
nop
movsl
mov
jmp
int3
hlt
mov
int
movsl
push
ljmp
mov
push
repnz
mov
push
or
mov
std
mov
sub
xor
xchg
xlat
jno
push
push
inc
cmp
repz
sbb
sbb
pop
bound
dec
arpl
inc
outsl
jp
out
imul
lret
mov
xchg
jne
aas
mov
leave
out
movsl
xor
hlt
shl
pop
add
or
cmp
test
add
call
movsl
test
push
jne
incl
fmull
jmp
mov
jae
out
mov
hlt
movsl
fisttpll
imul
xor
mov
lods
out
clc
loope
es
adc
scas
mov
sbb
push
add
int
fstpt
sti
mov
and
cmc
mov
cwtl
xor
test
mov
pusha
mov
insb
dec
mov
sub
leave
xor
jg
fadds
xlat
sbb
dec
mov
dec
fwait
pop
in
and
xor
mov
inc
cmp
push
pushf
movsb
add
stos
adc
mov
push
mov
movsl
popf
pop
push
fsubr
ljmp
pop
inc
test
je
cmp
repz
xchg
push
cmpb
insl
sub
push
aam
into
pop
xchg
shrl
push
mov
mov
cmp
movsl
addb
mov
lods
lret
adc
stos
sbb
jge
out
fs
int
leave
in
pop
rcll
inc
lods
incl
add
cmp
mov
jmp
scas
push
and
pop
je
lret
in
rcll
adc
mov
inc
rcrb
jbe
push
fbld
subb
inc
cmc
lds
pop
or
push
xor
jp
pop
shld
jo
jle
cmp
stos
push
shr
and
mov
andl
and
or
mov
adc
test
sbb
int
xchg
xchg
push
mov
movsl
adc
pop
jno
xchg
xor
lds
out
mov
pushf
mov
xchg
xor
frstor
mov
adc
movsl
pop
mov
sarb
add
inc
shll
dec
mov
les
push
inc
xor
fldenv
jmp
aam
inc
das
xchg
mov
add
imul
mov
outsl
movsl
hlt
and
movsl
add
arpl
movsl
int3
add
jno
mov
mov
adc
sub
test
je
inc
pop
jbe
mov
in
sbb
push
addr16
sahf
mov
les
xchg
or
adc
aaa
sbbl
inc
movsl
dec
stc
or
repnz
movsl
xchg
insb
or
fiadds
lret
sub
sbb
cmp
movsb
mov
movsl
shl
loopne
xchg
nop
cmp
stc
les
jnp
dec
rolb
xlat
push
fsubs
dec
movsl
fnstenv
and
mov
lods
adc
rol
movsl
testl
mov
push
mov
roll
in
les
jbe
icebp
imul
and
fbstp
imul
aad
cld
movb
neg
or
jb
in
and
cli
jns
orl
fstp
lds
and
xchg
loope
movsl
lea
or
pop
popf
aam
loopne
dec
inc
mov
ss
mov
cltd
out
mov
push
push
push
pop
movsl
sbb
mov
cltd
das
sub
jl
xchg
xor
inc
push
jp
inc
hlt
mov
movsl
push
lret
or
adc
iret
shl
dec
dec
std
push
add
xor
sub
in
mov
ds
and
jecxz
fs
pop
mov
push
inc
out
movsl
cmpsb
rorl
nop
xchg
movsl
sbbb
jbe
call
rcl
movsl
repnz
jne
arpl
hlt
test
add
repnz
fs
enter
or
in
and
outsl
stos
push
into
cmp
ss
jb
and
pusha
movsl
scas
jnp
test
and
aaa
push
add
ljmp
rclb
imul
and
jnp
in
jo
aad
sbb
bound
adc
push
flds
add
dec
cmpsl
scas
movsl
iret
xchg
and
dec
push
cli
inc
xchg
push
fnstenv
out
int
mov
cmpsl
adc
ss
and
sbb
jnp
mov
pop
or
call
pop
scas
lods
mov
lcall
movsl
cmp
in
adc
lcall
and
and
enter
inc
mov
mov
ds
movsl
add
sbb
lcall
mov
pop
outsl
add
enter
movb
mov
nop
popa
mov
movsl
outsl
arpl
add
scas
sub
add
in
pop
outsl
movsl
lcall
pop
pop
sub
cmpsb
dec
dec
andb
in
repnz
in
mov
movsl
movsb
dec
insl
comiss
ficomps
movsl
jbe
or
dec
in
lods
movsl
cmp
stos
arpl
hlt
scas
mov
push
and
and
inc
fsubr
lcall
add
mov
pushf
movsb
and
mov
xchg
cmp
test
out
in
enter
mov
int3
jl
and
not
push
jmp
mov
movsl
lods
loop
ror
mov
push
outsl
orb
jo
pushf
movsl
into
shr
push
fucomp
jne
movsl
insb
pop
add
sbb
and
push
arpl
cmpsb
mov
or
cmpsb
dec
mov
rcl
mov
imul
aad
jmp
aaa
sub
inc
mov
xchg
inc
cmp
test
stc
movsl
dec
cmpsl
imul
les
lods
rcrl
idivl
jns
imul
pop
rorb
dec
push
pop
int
movsl
test
bound
or
xchg
movsl
xchg
mov
sub
fldcw
data16
test
call
fldt
mov
xchg
mov
xchg
imul
movsl
addr16
dec
push
inc
push
mov
adc
movsl
jbe
dec
cmpsl
test
fdivrs
jmp
push
movsl
mov
mov
pop
cmpsb
movsl
ficoms
insl
cmp
xchg
movsl
out
mov
inc
in
or
mov
mov
movsl
mov
inc
sbb
xor
out
jne
movsl
fldcw
movsl
mov
cmp
ret
cmc
push
and
fdivrs
or
pop
dec
mov
insl
sbb
scas
push
sbb
mov
fldenv
fstps
mov
lds
or
cmp
mov
push
mov
ss
jl
adc
lods
rcrb
mov
mov
mov
or
imul
mov
jmp
cmpsb
mov
sub
outsl
push
pusha
lds
add
movsl
in
push
push
adc
scas
mov
movsl
lods
rcrb
fbld
pop
aam
sbb
mov
dec
mov
mov
iret
fcmovu
movsl
jo
add
jp
insb
mov
scas
pop
sbb
mov
xlat
in
adc
xchg
clc
in
and
mov
mov
and
int3
movsl
push
rorb
mov
test
movsl
out
pop
hlt
xor
xlat
or
movsl
adc
dec
inc
out
shrb
aas
lcall
leave
imul
jmp
dec
xor
mov
push
insl
cmp
in
mov
dec
mov
jns
ret
dec
popf
dec
xchg
and
add
in
mov
popa
stc
cmpsl
add
in
adc
les
fnstsw
mov
cmp
or
and
mov
add
mov
sbb
mov
mov
dec
push
aad
pop
jg
setp
jmp
movsl
insb
fwait
or
gs
dec
andl
xchg
pushl
stc
movsl
mov
movsl
cmp
xor
mov
arpl
cld
lds
adc
lahf
jns
insl
movsl
adc
rol
xor
mov
or
adc
mov
rclb
mov
cld
stos
popf
cltd
sub
bnd
rcr
push
xor
fsubs
shlb
push
hlt
jnp
mov
xchg
test
jp
push
int
inc
xlat
movsl
cmp
movl
int
lods
adc
cld
test
push
mov
hlt
jb
ftst
ja
jmp
aas
cmc
lret
loopne
inc
mov
mov
sti
sarb
mov
push
and
cmp
in
fdivs
iret
jl
aas
cmp
sbb
xchg
mov
inc
lock
fsubs
jmp
nop
mov
call
gs
mov
pop
fbld
test
jnp
dec
cltd
and
je
xor
sub
jmp
cmp
or
in
enter
icebp
inc
in
sbb
movsl
leave
xchg
stos
inc
and
paddsb
popf
cmpsl
sbb
icebp
fildll
movsb
lock
in
pop
jbe
into
push
int
mov
adc
xchg
sti
faddl
scas
mov
sub
rclb
adc
pop
nop
mov
ds
mov
xor
push
mov
cmp
mov
mov
xchg
fldl
fldenv
repnz
mov
icebp
or
jle
out
xor
add
push
loopne
pop
mov
inc
or
mov
jo
sahf
in
inc
scas
cmp
mov
ret
jecxz
lods
sbb
in
adc
cld
loope
nop
clc
or
dec
cmpsb
sarl
sti
cs
sub
mov
mov
movsl
sub
inc
xchg
adc
xchg
sbb
inc
into
cli
shll
outsb
pop
fists
mov
mov
cmc
push
call
inc
mov
lds
in
mov
sub
movsl
shl
iret
dec
inc
gs
push
movsl
call
bound
movsl
adc
int
movsl
pop
out
sar
sub
jae
movsl
sub
xchg
lods
jmp
stos
dec
movsl
or
push
jge
call
imul
in
cli
pushf
sub
shl
out
loope
xchg
xlat
add
xchg
aaa
frstor
nop
movsl
mov
adc
movsl
xor
lods
adc
inc
movsl
mov
insb
popf
pushf
movsl
sub
imul
or
cmc
sub
add
lds
dec
movsl
adc
xlat
aad
mov
movsl
lods
hlt
out
insb
and
jae
pop
jl
addr16
cmpb
cmc
fadd
jmp
aam
orb
pop
ret
lods
or
movsl
pop
or
mov
xchg
xor
or
scas
lods
lds
inc
in
out
lock
mov
xchg
mov
push
test
push
jbe
push
jg
movsl
pop
cld
dec
test
movsl
les
in
sbb
int3
loop
sbb
fwait
in
movsl
outsl
mov
mov
imul
xbegin
mov
or
ds
movsl
out
sbb
mov
in
push
inc
add
jl
stos
jo
je
mov
mov
xor
xor
mov
mov
and
pop
popf
fcmove
push
push
push
repnz
push
loope
hlt
lret
flds
gs
mov
ljmp
adc
mov
and
scas
and
mov
pop
mov
stos
stos
movsl
push
push
pop
inc
std
in
lret
cli
int
cmpsl
je
pop
jno
jp
outsb
shll
or
mov
mov
sbb
shrl
mov
orb
movsl
dec
cmpl
rcrb
test
clc
stc
add
mov
loopne
roll
pop
jp
dec
jno
pop
dec
push
or
lods
mov
popa
cli
push
out
clc
xor
leave
inc
jne
movsl
adc
mov
movsl
call
out
jne
pop
and
leave
out
movsl
lahf
jnp
orb
ret
adc
push
xor
int
bound
lock
jbe
xchg
pop
pop
xor
in
jb
jg
mov
movsl
xor
test
movsl
mov
icebp
into
push
movsl
jne
stc
jb
insb
add
movsl
leave
rcll
loop
sbb
jmp
or
test
in
repnz
into
cmc
mov
xor
in
jbe
inc
adc
movsl
jnp
mov
xlat
and
mov
xchg
mov
shr
ljmp
mov
clc
mov
pop
icebp
add
push
cwtl
pushf
subb
in
andl
inc
dec
push
and
es
inc
lret
ljmp
xor
mov
shlb
xchg
mov
sbb
mov
rcr
push
mov
mov
movsl
scas
movl
ljmp
push
lcall
mov
dec
outsl
movsl
cld
arpl
bound
mov
adc
mov
or
inc
push
mov
movsl
xor
add
int
stc
pop
push
push
cmp
das
ss
movsl
fcom
repz
push
pop
cs
popa
sbb
inc
movsl
aad
lock
fwait
and
xchg
mov
negb
movsl
sbb
cmp
push
jp
fucompp
repz
jae
inc
lods
push
popf
rolb
mov
scas
ja
mov
inc
cli
imul
push
ret
shlb
inc
movsl
or
call
push
adc
mov
shlb
imul
jne
hlt
loop
inc
icebp
movsl
add
jp
jl
mov
adc
movsb
cmp
in
mov
adc
inc
std
sub
inc
sti
movsl
jb
and
dec
sub
movsl
dec
arpl
loop
lds
fs
jae
cmc
movsl
mov
cltd
xchg
filds
and
push
lock
movsb
movsl
mov
xchg
sub
mov
xor
cmp
movsl
aad
push
es
pop
movsl
icebp
sti
xchg
mov
cmp
cld
jnp
rcr
cmc
enter
out
sahf
aas
xor
or
mov
js
pop
int
test
xchg
sub
or
stos
add
out
sub
jbe
mov
movsl
jmp
mov
insb
pop
nop
jb
add
rcrb
xchg
push
scas
xor
aaa
test
add
xor
pop
push
in
scas
pop
xchg
sbb
jo
notl
fnstenv
in
mov
cwtl
cmp
mov
lret
dec
mov
sub
ljmp
jl
dec
mov
sahf
mov
imul
pop
call
xchg
sbb
sbb
inc
movsl
lret
repnz
aad
pop
mov
mov
movsl
xchg
sbb
nop
pop
pop
andb
jmp
movsl
repz
pop
mov
mov
movsl
out
jg
test
xchg
mov
mov
out
jb
stc
pop
ljmp
imul
mov
mov
frstor
iret
adc
push
push
xchg
aad
xor
add
inc
ja
adc
popa
loopne
decl
jnp
and
popa
shll
xchg
xor
movsl
lcall
jmp
push
pusha
btr
test
lahf
lds
jl
cmp
xchg
fucom
repnz
pushf
or
call
nop
sub
arpl
jge
bound
call
add
movsl
mov
or
int
pop
not
movsl
int3
insl
or
lock
jmp
jbe
aas
mov
mov
nop
add
leave
popa
icebp
jle
imul
or
movsl
xchg
mov
stos
pop
mov
aad
jo
xchg
movsl
cmc
xor
jle
mov
mov
xor
in
loopne
push
int3
push
sti
into
add
movsl
scas
jb
test
push
mov
mov
jmp
pop
push
int3
sbb
popa
push
in
in
mov
je
mov
shrl
loope
or
movsl
cmp
push
lret
int
dec
jp
sar
cmc
shr
movsl
ds
push
shlb
mov
pushf
pop
out
in
lods
and
movsl
xchg
mov
hlt
cli
aam
fsubr
ljmp
push
dec
jb
mov
sahf
xor
xchg
popf
mov
rolb
pop
mov
movsb
mov
stos
test
jb
pop
stos
push
xchg
in
xor
push
and
xor
pop
adc
cmp
movsl
xor
or
push
outsb
push
push
mov
adc
fiadds
les
addr16
popf
mov
and
mov
movsl
jp
hlt
fs
pop
cmp
shlb
movsl
push
push
mov
das
mov
pushf
andb
and
pop
or
sbb
xchg
leavew
aad
xchg
es
iret
daa
dec
mov
and
cmp
jnp
mov
xor
pusha
test
push
cmpsb
rcrb
aad
cmpsb
mov
rolb
scas
data16
into
fst
test
lret
sbb
mov
sti
adcl
andb
pop
inc
push
repz
push
pop
pop
add
mov
pushf
in
fisubs
mov
or
jmp
adc
adc
pop
sbb
mov
das
into
aas
aam
pop
and
push
push
repnz
lret
fistpll
je
lret
dec
pusha
popa
aad
sub
es
xor
sbb
cmp
mov
mov
imul
movsl
in
clc
pop
push
imul
pop
and
scas
jns
adc
shll
jnp
js
rcll
or
mov
popf
push
xor
popf
ret
lret
inc
cmp
sbb
pusha
sti
bound
cmpsl
cmc
cli
into
ficoml
pop
mov
jne
mulb
cmc
into
jbe
inc
inc
call
or
stos
sarl
fiaddl
and
cmpl
pop
popa
sub
push
and
sub
inc
movsl
and
pop
loope
cmp
sub
jg
push
fiadds
popa
sbb
mov
fildl
sahf
or
push
pusha
add
pop
inc
pusha
cmp
movsl
popa
sub
sub
xor
jo
xor
mov
pop
xor
sahf
push
mov
mov
mov
mov
popa
sub
aam
mov
sbb
or
aad
sub
jbe
sbb
fcomp
push
in
sahf
shrb
mov
xchg
movsl
aas
xchg
xor
movsl
inc
mov
out
sti
rcll
mov
lock
leave
sbb
fisubl
cmpsl
jge
clc
call
sbbb
fldenv
out
ljmp
inc
pop
push
lods
xor
sbb
nop
movsl
addr16
pop
or
and
push
movsl
mov
mov
xchg
movsl
in
outsl
add
mov
sbb
xchg
mov
clc
cmp
pop
outsl
movsl
scas
inc
cmp
dec
sbb
xor
leave
mov
or
mov
dec
popf
in
xor
add
rol
movsl
adc
aad
gs
pop
enter
jecxz
movsl
adcb
fwait
or
cs
aaa
pop
mov
insl
push
dec
js
add
fisttps
adc
adc
xchg
leave
push
hlt
nop
xchg
xor
adc
int3
pop
mov
sahf
out
test
mov
stos
imul
cmpsl
dec
popf
adc
push
mov
pop
test
std
mov
jns
xchg
sar
movsl
outsb
push
adcl
adc
jle
sub
testl
add
xchg
xchg
ss
mov
clc
and
push
daa
loop
les
or
sarb
movsl
push
xchg
push
sbbb
fmull
icebp
out
movsl
outsb
imul
ds
popa
fs
adc
in
lahf
std
movsl
xor
push
jg
fbstp
push
ljmp
lahf
sub
or
stos
mov
cmpsb
dec
aad
repz
add
in
lcall
movsl
xchg
insb
rolb
push
movsl
stos
adc
jmp
je
push
pop
jg
lock
movsl
adc
ret
xchg
imul
add
shl
push
push
cmpb
gs
inc
ds
movsl
mov
nop
or
cmp
cltd
mov
dec
jge
out
and
and
push
mov
movsl
xchg
sbb
cltd
sahf
loop
movsl
inc
fcompl
rep
dec
mov
adc
push
xchg
sahf
xor
ret
xchg
movsl
sbb
movsb
pushf
cwtl
mov
test
pop
mov
aad
push
inc
movsl
in
fmuls
out
pop
aaa
sub
jmp
movsl
in
mov
lcall
mov
sahf
cmp
sbb
imul
lds
lret
xor
pop
mov
movsl
aad
cmpb
xchg
mov
jp
cs
xchg
gs
popa
jmp
loopne
cmp
movsl
rolb
mov
movsl
jb
shl
push
xor
mov
mov
es
xchg
mov
jb
lods
outsb
lods
xchg
xor
movsl
sbb
test
adc
push
gs
int
addr16
hlt
movsl
stos
out
xorb
and
cmc
sbb
dec
sub
mov
movsl
subl
jmp
jle
sub
fcoml
stc
fiadds
insb
lods
in
movsb
movsl
or
leave
inc
jl
dec
fsubs
adcb
movsl
arpl
push
repnz
cs
mov
add
mov
je
sbb
jmp
jge
frstor
xchg
add
ret
das
andl
or
mov
cmc
jecxz
mov
enter
sub
dec
cmp
xorl
ljmp
xor
mov
xchg
mov
mov
pop
ja
pop
cmpsb
mov
mov
jne
push
pop
imul
add
jge
xchg
movsl
movsb
fimull
loop
add
loopne
nop
mov
cwtl
sub
and
fldenv
dec
outsl
aad
movsl
in
jmp
lods
mov
lcall
mov
fucom
add
mov
movsl
jne
xchg
push
fsubrp
xor
sub
mov
mov
movsl
bound
test
scas
jbe
mov
xor
adc
inc
mov
call
imul
mov
imul
mov
mov
mov
cmc
or
push
lds
jle
out
leave
movsl
sbb
xchg
fnstsw
bound
mov
push
movsl
rcr
aaa
xchg
adc
subl
mov
mov
movsl
jmp
pop
cmp
pop
popa
pop
out
aaa
mov
int
popf
leave
iret
jmp
jno
mov
mov
and
sbb
je
movsl
imul
notb
inc
xor
fisttpll
push
sub
mov
ja
je
ss
mov
icebp
lock
push
lcall
and
cltd
inc
mov
andl
push
movsl
pop
jne
insl
sar
xchg
push
out
in
pmullw
scas
sahf
cmp
dec
pop
adc
mov
shl
push
lret
fwait
pusha
aam
lods
cmp
cli
cwtl
in
mov
loope
or
pop
or
or
mov
sub
int
xchg
movsl
and
add
rcll
std
shll
xor
std
push
jne
stc
fldt
jae
aad
push
dec
outsl
in
pop
movsl
push
mov
imul
mov
lea
or
xor
pop
xor
sub
movsl
push
mov
cmp
xchg
imul
movsl
mov
cmp
mov
mov
add
andl
leave
daa
movsl
loope
sarb
popa
pop
mov
xchg
fcomps
sub
mov
mov
mov
lds
mov
cmpsb
fcoms
mov
fcompl
jmp
and
out
movsl
enter
jl
movsl
adcl
rcrl
mov
scas
or
daa
mov
jb
adc
movsl
xchg
sub
out
movsl
repnz
js
mov
or
mov
scas
aas
adc
pushfw
push
sub
add
fs
test
xor
std
or
iret
jge
mov
adc
fnstenv
repnz
imul
inc
mov
lods
xchg
in
cli
mov
scas
cmp
mov
mov
movsl
add
les
jp
in
hlt
push
push
pop
mov
xchg
pop
mov
ret
mov
push
pop
jle
into
xchg
add
xchg
xchg
sub
xor
inc
xchg
push
movsb
cli
cmp
in
call
std
cmpsb
and
ffreep
fs
pop
add
cmpsl
jo
jb
dec
mov
dec
adc
sub
inc
xchg
mov
and
lods
outsl
pop
pop
cli
mov
xchg
filds
mov
mov
hlt
aas
stos
cmc
push
arpl
mov
push
jns
ljmp
shll
cmp
and
jp
jle
pop
shl
pop
mov
jmp
lock
jns
ret
mov
xlat
out
pop
movsl
imul
adc
add
xchg
add
imul
mov
leave
test
mov
in
adc
ljmp
test
xor
xor
in
in
adc
dec
std
sarb
aaa
mull
and
in
pop
movsl
adc
adc
mov
mov
dec
push
lock
mov
jge
and
movsl
dec
jle
insl
fldenv
adc
mov
pop
std
mov
sbb
dec
mov
in
aad
cmp
pop
lea
movsl
adc
pushf
decl
mov
aas
cld
movsl
mov
push
ljmp
movsl
and
mov
movsl
jbe
dec
movsb
or
rorb
inc
roll
stos
repz
movsl
pusha
mov
jp
xchg
cmp
jl
sahf
lock
and
cs
sub
mov
mov
push
push
in
jg
or
js
jno
scas
add
sub
cwtl
cmp
jo
xor
inc
pop
mov
fstps
and
or
in
aad
cmpsb
xchg
lahf
mov
cwtl
in
stos
int
cmpsl
xchg
outsl
outsb
xor
mov
movsb
dec
loope
add
shl
rolb
ret
cli
fsub
stc
add
incb
jp
movsl
cmpsb
mov
mov
int3
mov
subl
mov
movsl
fstpt
xchg
or
or
pop
addr16
movsl
cmpl
xor
and
pop
jmp
push
loop
lods
scas
sbb
icebp
les
sahf
mov
mov
sbb
ret
ja
scas
adc
loope
mov
add
outsb
mov
shl
shr
push
lods
sbb
movsl
cmp
cmp
pop
xor
xor
pusha
mov
xor
loopne
mov
push
sub
mov
dec
mov
pop
push
sti
mov
fld
cmpsl
les
cmp
mov
jae
jns
mov
popf
cmp
adc
lahf
mov
test
and
mov
mov
out
mov
pop
and
imul
lret
les
call
lds
cmp
mov
jno
lret
stc
jp
movsl
mov
shll
aad
adc
bnd
mov
pop
sbbb
jns
imul
sti
movsl
dec
adc
mov
movsl
push
pop
mov
cltd
xor
add
test
inc
daa
mov
ljmp
les
add
leave
cli
lcall
mov
addr16
mov
scas
mov
xchg
cmpsb
add
loopne
loope
in
jmp
test
sbb
movsl
mov
or
mov
shll
or
xor
aaa
mov
in
push
orb
cmp
xlat
shll
fwait
sub
pop
movsl
test
dec
add
movsl
jl
out
xor
mov
cmpsb
fwait
xchg
sub
xchg
roll
sub
iret
cmp
movsl
xchg
lds
gs
mov
lods
add
sub
push
or
pop
in
jge
add
pop
xchg
sub
imul
call
lods
add
nop
dec
or
dec
cmc
movsl
push
jg
enter
pop
movsl
mov
pop
arpl
inc
iret
js
jo
pop
pop
add
call
add
aas
push
jp
dec
in
movsl
repnz
dec
dec
in
mov
sbb
movsl
mov
mov
insb
push
lds
movsl
clc
jl
jno
inc
sub
mov
jle
ds
cmp
or
mov
cmp
jp
in
sarl
jg
repnz
movsl
insl
pop
mov
fsubl
pop
repnz
lcall
daa
cmp
mov
hlt
pop
pop
call
movsl
mov
inc
jle
xchg
jne
mov
inc
add
jecxz
testb
aad
pop
clc
ret
adc
and
out
scas
ljmp
popa
adc
mov
test
stc
fidivrs
push
mov
cmp
push
mov
popf
aas
inc
rorb
push
popf
mov
lret
push
adc
test
push
dec
imul
inc
ret
pop
out
jecxz
sbb
add
nop
movsl
pop
push
test
pushf
loop
pop
dec
cli
test
sub
shl
movsl
out
pop
push
mov
mov
stc
repnz
negb
push
push
and
sbb
adc
lret
je
inc
enter
fsub
mov
add
les
mov
js
int3
call
not
push
idivl
scas
xlat
fucom
pusha
push
lock
inc
daa
subl
insb
fisttps
xchg
gs
sbb
dec
and
lret
cld
adc
xor
lds
ret
stos
mov
std
testb
fucompp
jmp
mov
les
mov
pushf
vpcomq
stc
push
and
pop
mov
push
jg
cmp
aam
push
add
mov
pop
inc
iret
jmp
scas
add
idivb
mov
add
push
into
rorl
movsl
aam
fs
jnp
addr16
fdivr
dec
sbb
pop
jbe
jl
mov
sahf
jo
push
dec
cmp
icebp
in
movsl
xchg
leave
aad
jns
add
sahf
add
test
add
mov
and
push
je
and
dec
mov
sub
movsl
jae
inc
lcall
outsl
adc
cmc
jl
movsl
dec
jecxz
pop
or
jns
shr
adc
hlt
pop
inc
movsl
adc
pop
adc
jge
xor
js
movsl
push
cmpsl
sarl
movsl
xorb
call
enter
xchg
mov
push
mov
or
clc
adc
repz
ret
sub
jnp
icebp
loop
pushf
adc
fldl
fsubrs
lods
and
popf
movsl
xchg
xor
or
cmp
shl
adc
mov
in
int3
outsb
sahf
lcall
mov
out
jge
movsl
in
not
mulb
scas
inc
xchg
movsl
push
cmp
inc
lret
xchg
xchg
movsb
shrb
cmp
jae
movsl
push
cltd
js
sub
pop
cmc
scas
loopne
fdivr
shlb
cld
cld
xlat
lds
movsl
movsb
fldenv
data16
cmp
inc
sarl
and
mov
mov
adc
mov
xor
and
in
jmp
fildl
pop
lret
popa
mov
cld
xor
fwait
cmp
pop
or
in
out
xor
daa
lcall
cmc
int3
movb
xor
cld
push
xor
push
jb
in
scas
movsl
sub
adc
scas
movsl
add
jmp
iret
movsl
push
cld
aam
loope
frstor
pop
pop
cmc
push
lds
idiv
movsl
jle
in
sub
inc
pop
insb
mov
add
lret
dec
adc
movsl
xchg
or
adc
xchg
mov
or
sub
or
outsb
xor
dec
mov
loopne
lret
push
dec
movsl
sub
aaa
das
mov
mov
xchg
xor
ja
jnp
pop
movsl
bound
or
sub
xchg
pop
cwtl
daa
mov
in
xlat
fstpt
movsl
xchg
mov
mov
je
and
les
int3
pop
mov
xchg
mov
dec
in
xor
mov
roll
xor
xor
and
mov
or
mov
mov
dec
cli
inc
ficompl
movsl
loop
jnp
or
cwtl
aaa
pushf
mov
fiaddl
movsl
in
pop
mov
loop
enter
ret
aam
cmp
fstp
ljmp
cmp
call
sahf
js
sarb
lock
adc
mov
push
pop
jge
adc
mov
inc
popf
stos
movsl
xchg
mov
aad
sbb
and
fldenv
iret
or
push
stos
loopne
movsl
mov
je
shlb
add
push
xchg
hlt
test
adcb
popa
sahf
pusha
fidivrs
filds
dec
hlt
iret
xchg
int
cmp
scas
aaa
nop
test
lret
cmpsb
push
adc
add
dec
movsl
jge
subb
push
movsl
mov
or
pop
rcl
movsl
ficoms
sub
pop
movsl
push
jge
shlb
out
movsl
pushf
int3
gs
fsubr
push
pop
orl
inc
adc
jae
mov
scas
sub
movsl
xchg
push
fs
fstp
das
addr16
inc
insb
out
movsl
cld
adcb
movsl
mov
shlb
xor
jmp
sub
loope
std
in
movsl
xor
lret
fists
movsl
rol
xchg
mov
movsl
test
and
fdivs
pop
testl
or
jg
movsl
mov
call
sub
xchg
cmp
dec
push
movsl
mov
sbb
xchg
ds
movsl
and
dec
or
adc
bswap
lahf
mov
iret
mov
cmp
xchg
jne
sbb
xor
rcrl
nop
pop
cmp
and
sub
pop
xor
lods
popf
andl
outsl
repz
fldl
es
movsl
leave
lret
adc
inc
push
mov
mov
mov
clc
cmp
out
xlat
dec
mov
mov
movsl
jnp
jae
xchg
in
push
push
nop
mov
mov
jb
mov
add
inc
popf
sbb
cmc
cwtl
fmuls
or
outsl
sti
mov
xchg
shrl
inc
xlat
test
adc
push
sub
icebp
test
xchg
dec
lods
lea
repz
push
xchg
movntq
sub
filds
in
in
mov
xor
scas
sar
add
mov
mov
sub
xchg
enter
shrl
mov
xlat
fstps
mov
iret
jns
push
cmp
mov
mov
aaa
test
mov
es
das
lret
scas
pop
mov
std
jp
into
loopne
xlat
jbe
aad
lods
mov
cmp
and
mov
push
in
mov
int3
xor
inc
mov
mov
ret
mov
mov
jbe
add
dec
add
loopne
scas
repz
cltd
sub
mov
dec
popa
push
sub
inc
daa
clc
inc
sbb
mov
adc
push
inc
fldl
mov
dec
cwtl
roll
call
jle
mov
sbbl
out
popa
sub
mov
sbb
cmc
fst
add
add
imul
loop
jb
mov
sbb
icebp
daa
or
sub
out
mov
pop
popf
enter
cli
jmp
pop
jle
push
loopne
push
cmp
scas
scas
out
movsl
pop
push
add
ret
sbb
and
sbb
and
cmp
inc
sub
in
icebp
test
fstp
cmpsb
out
movsl
bound
js
inc
and
sbb
icebp
mov
sub
xchg
add
jbe
aad
lds
ret
mov
pop
bound
mov
scas
icebp
pop
clc
xchg
or
xlat
mov
and
test
sub
cmpsb
stos
scas
push
or
xor
xacquire
mov
sub
lds
loope
fistps
push
mov
pushf
jp
mov
daa
mov
pop
cmp
aaa
pop
inc
es
cwtl
sub
xlat
cmc
int
fcoml
rol
pop
out
cld
int3
std
movsl
mov
cli
adc
mov
shl
fidivs
mov
pop
cmpsb
test
dec
jle
jae
shll
movsl
stc
fisubl
filds
xchg
enter
in
cmp
sub
movsl
cmpsw
in
cltd
cmpsb
or
mov
mov
or
jo
push
movsl
test
dec
icebp
popa
xchg
pop
fcompl
loop
and
add
repnz
ficomps
jne
mov
cmp
mov
sub
mov
xchg
or
jecxz
sti
cmc
jmp
scas
cmp
mov
outsb
bound
sti
lret
in
popf
sub
cmpsl
movsb
xchg
movsl
push
and
movsl
rclb
stos
pop
push
ret
xchg
sub
fs
dec
iret
xchg
add
mov
mov
jne
movsl
sub
jecxz
dec
fistl
loope
jge
xchg
sub
mov
mov
push
mov
cmp
js
dec
pop
cmpsb
inc
movsl
or
mov
out
movsl
stos
or
mov
frstor
inc
outsl
dec
cmpb
xor
jne
pop
outsl
jmp
andl
pop
jns
push
mov
mov
cli
jmp
ror
jmp
sahf
pop
jecxz
jl
cmp
ja
movsl
sub
xor
fldt
test
sbb
int
movsl
sbbb
pop
sbb
movsl
jnp
adc
in
pop
pop
movsl
sub
sub
cmp
rcrb
mov
sub
xchg
mov
shll
sbb
clc
mulb
mov
fwait
mov
movsl
and
insb
popa
pop
pop
jge
push
aad
cmp
or
psubd
movsl
int3
xlat
mov
push
mov
cmp
pop
jae
push
addr16
mov
in
fildll
pop
movsl
call
xchg
add
jb
je
xchg
sub
loope
and
movsl
dec
jae
jecxz
repnz
jge
pop
aam
hlt
inc
xchg
and
adc
inc
cli
cltd
inc
lods
shld
inc
push
sahf
dec
jg
mov
and
in
pop
mov
stos
sbb
orb
rcrl
movsl
xchg
xchg
ja
lods
pop
daa
push
mov
mov
xchg
and
in
movsl
es
mov
cltd
fiadds
push
pop
and
mov
aas
sbb
sarl
cmp
mov
push
aad
mov
pop
mov
fdivrs
repz
cs
je
popa
insb
andl
or
pop
mulb
xor
lcall
adc
fstl
adc
cmp
scas
movsl
loopne
cmp
movsl
fistpl
xchg
ret
mov
mov
pop
test
mov
xchg
fldenv
inc
or
movsl
pop
fsubp
mov
movsl
pop
fwait
xchg
cmp
jl
dec
addr16
push
fidivl
dec
mov
icebp
movsl
sub
mov
cltd
dec
adc
mov
xchg
cmp
ljmp
aam
leave
movsl
imul
xor
mov
fwait
adc
cmc
push
movsb
movsl
scas
rclb
fildl
fwait
ja,pt
movsl
push
mov
aas
popf
sahf
add
in
ror
jne
pop
push
mov
aad
or
fldenv
jo
jge
and
aas
in
cld
cmc
push
dec
push
int
or
lods
movsl
mov
nop
cmp
inc
sub
in
mov
and
adc
mov
mov
in
or
xchg
sub
mov
xchg
mov
fisubl
xlat
ljmp
xor
lds
call
in
cwtl
mov
scas
test
movsl
enter
sbb
in
cmpb
and
jl
rcrb
out
pushl
xchg
dec
jbe
pop
movsl
fmull
mov
pop
and
jno,pt
add
cmp
movsl
int3
sar
hlt
popf
cmp
pushf
adc
or
dec
insl
addr16
push
mov
mov
scas
or
popf
lea
push
mov
pop
rolb
in
popf
sahf
mov
stos
shll
addl
lea
lods
movsl
mov
xchg
cmp
loope
outsl
pusha
sbb
in
mov
cltd
dec
mov
mov
neg
in
jbe
fadds
movsl
adc
xlat
push
movsl
int
and
insb
aad
movsl
pop
pop
out
push
les
shlb
inc
inc
addl
in
mov
adc
ja
loop
movsl
jl
loope
push
lret
movsl
mov
jmp
cmp
dec
lock
test
mov
pop
cli
push
push
clc
sahf
movsb
and
movb
aad
movsl
mov
cmc
adc
movsl
mov
xchg
jno
adc
movsl
out
lods
lods
test
jge
push
mov
neg
pushf
into
pushf
inc
jp
dec
bound
imul
sub
es
jnp
mov
cmpsb
sbb
fbld
into
stc
jmp
adc
push
xchg
repz
arpl
lock
and
mov
xchg
mov
mov
xor
jo
jnp
mov
cmc
pop
mov
das
mov
test
adc
mov
aad
mov
test
mov
icebp
push
and
mov
cmp
mov
pop
shl
or
andl
push
add
fwait
push
testb
mov
mov
pop
mov
in
icebp
lods
int
xor
cld
cmp
add
cmpsl
pop
sbb
andl
dec
cmp
or
cmpsl
arpl
cmpsb
in
dec
jne
in
xchg
jb
notb
fcmovnu
imul
movsl
mov
insb
fldl2e
movsl
push
push
or
mov
cltd
xchg
or
test
divl
add
pusha
imul
outsb
mov
das
push
xchg
mov
mov
popa
test
and
push
adc
cmp
das
scas
cmp
sti
lods
add
adc
addb
loope
aaa
jae
mov
out
scas
cmp
add
lds
mov
mov
mov
push
movsl
outsl
and
push
popa
lea
add
andl
adc
add
and
js
cs
jecxz
sarl
fsubrl
pop
inc
jae
mov
clc
lods
out
movsl
fwait
aad
dec
addr16
jbe
imul
push
imull
sahf
outsb
aaa
add
pushf
and
loopne
testl
adc
icebp
vpmaddwd
adc
inc
add
inc
pop
adcb
fldt
adc
xchg
lcall
testl
xchg
mov
test
jbe
cmpsl
sbb
mov
rep
xchg
and
mov
rolb
addl
lds
movsb
xor
or
hlt
test
jecxz
and
cs
mov
daa
mov
sub
je
or
lods
inc
cwtl
pop
hlt
cld
pop
lahf
mov
vpacksswb
push
movsl
mov
dec
jne
lock
sbb
push
popa
or
fsubl
mov
mov
push
jae
fucompp
lcall
fsub
push
movsl
inc
scas
std
jnp
in
bound
push
jns
shr
push
into
fistpl
shll
int
cltd
inc
out
or
notb
mov
in
orl
sarl
xchg
lret
xchg
cmc
into
pop
pop
cmc
out
movsl
xchg
stc
or
dec
sbb
cmpsl
pop
jae
movsl
outsb
movsb
popf
fcmove
insl
and
inc
mov
xor
sub
in
out
movsl
int
mov
mull
dec
xor
cmp
popa
sbbl
outsl
bound
sub
in
inc
or
adc
fnsave
popf
pop
sub
dec
sub
mov
push
popa
clc
insl
shl
pop
adcl
fs
imul
scas
mov
popf
popfw
mov
sti
sbb
mov
stos
pop
or
sti
stc
imul
and
clc
leave
ficompl
dec
daa
sbb
jnp
pop
test
dec
sbb
mov
mov
xchg
fdiv
lds
aaa
fndisi(8087
mov
jmp
popa
jl
rcrb
pop
sub
cmpsl
out
jle
mov
mov
daa
lods
notl
xchg
leave
sahf
lret
xlat
pushf
rcrl
cmp
sub
lds
and
rcr
xor
xor
xchg
ja
std
push
lahf
jb
xlat
test
inc
movsl
sbb
es
push
and
inc
xchg
jns
in
sub
lods
loope
jne
lcall
cmp
lock
pop
ret
pushf
repz
cmp
icebp
push
out
xor
mov
or
out
and
push
xchg
loop
pop
loope
in
pushf
xor
sbb
test
mov
orl
mov
xor
out
add
repz
int
or
ds
pop
sar
fcompl
sub
push
sub
out
xchg
inc
insl
test
jge,pt
dec
pushf
jp
daa
dec
adc
std
stc
arpl
pop
lcall
sub
add
je
xchg
push
lods
rolb
fdecstp
push
test
mov
add
adc
jae
mov
mov
outsl
inc
mov
jmp
xor
sti
ds
sbb
lahf
lcall
and
and
sub
jp
cmp
dec
aaa
pop
push
sub
mov
nop
xor
mov
dec
pop
pop
jbe
cmc
movsl
or
add
push
sbbb
mov
pop
pop
dec
adc
pushf
sbb
sarb
mov
xor
icebp
mov
cmpsl
push
adc
cli
xor
adc
xchg
testb
movsl
push
loope
mov
xchg
sbb
xchg
xor
vmovaps
inc
xlat
ljmp
cli
push
movsl
sub
mov
xor
sub
jl
xor
sub
shrb
and
sub
push
stos
sbb
or
dec
loope
mov
andb
repnz
mov
pop
loope
je
sbb
cmp
pop
cmp
cld
stos
scas
push
sbbl
call
xor
das
js
jecxz
fmuls
sbb
lods
inc
add
and
ja
jns
das
cwtl
or
into
cmc
xchg
icebp
rorl
lods
adc
movsb
mov
sub
mov
lods
adc
cs
pusha
into
fwait
es
popa
dec
push
loopne
iret
movsl
stos
adc
mov
mov
lcall
pop
inc
sub
movsl
cmp
mov
sahf
testl
cmpsl
imul
sahf
ret
push
push
mov
pop
jl
movsl
jnp
les
movsl
and
mov
test
movsl
mov
in
aam
fld1
jecxz
pusha
dec
imul
dec
mov
add
push
jne
int
out
mull
xchg
sbb
inc
iret
add
test
movsl
adc
fwait
xor
test
jp
mov
movsl
xlat
xchg
cmpsb
pop
or
push
movsl
fwait
add
xchg
and
icebp
int
int
inc
std
enter
xor
lahf
shlb
cmp
dec
add
mov
mov
push
jb
scas
shlb
mov
outsb
lret
test
mov
imul
mov
sub
movsl
mov
mov
cmpsb
fstpt
adc
lods
mov
jb
pusha
leave
cltd
cmc
in
sbb
xchg
sbb
frstor
stos
fstp
xchg
mov
outsb
add
mov
dec
aad
jo
xchg
jle
pop
movsl
mov
mov
jecxz
pop
in
mov
mov
mov
movsl
jg
pop
in
ret
aam
and
cmpsl
pop
push
outsb
movsl
cmp
fcmovnu
outsl
jl
shll
cmp
mov
outsb
stos
shlb
add
and
dec
popf
fwait
daa
lcall
mov
mov
stos
adc
xor
enter
mov
rcl
xor
mov
ds
ffree
pop
push
test
and
call
movsl
fsubrs
push
cmpsl
gs
movsl
mov
sub
xchg
fs
mov
pop
mov
xchg
ret
in
mov
dec
and
cltd
leave
mov
imul
shlb
lods
mov
movsl
push
cmc
push
cmp
mov
lahf
and
mov
fwait
xor
sub
movsl
xchg
cmp
xchg
mov
je
cmpsl
aaa
daa
stos
pop
pop
fidivs
sub
mov
movsl
xchg
jmp
fists
adc
das
movsl
sahf
mov
mov
movsl
adc
adc
mov
and
scas
and
jb
mov
movsw
bound
lods
out
or
movsl
jp
push
sarb
jle
mov
push
out
sub
das
mov
mov
movsl
addr16
jno
or
movsl
out
lret
dec
sbbl
mov
in
aam
in
jns
xchg
jns
push
addb
fstpl
mov
jmp
movsl
push
in
dec
adc
push
leave
movsl
das
stos
enter
fnstcw
jmp
push
and
inc
test
mov
sbb
push
in
inc
incl
push
mov
jecxz
mov
push
subl
jge
in
stc
fisubrl
adc
fs
pop
imul
add
dec
and
xchg
loope
in
fidivs
sbb
inc
test
mov
and
mov
mov
movsl
sti
out
into
cmpsl
push
stos
mov
and
iret
cmp
xchg
lret
jns
aad
jmp
mov
push
movsl
adc
ds
mov
and
sbb
xor
rol
cli
jns
mov
inc
out
jb
roll
aad
dec
roll
lds
test
or
enter
dec
std
push
movsl
mov
aam
xchg
sbb
test
jecxz
repnz
adc
or
and
loope
cmp
inc
push
jb
dec
out
movsl
mov
mov
dec
push
push
fidivrs
loopne
pop
rol
incb
push
xchg
pop
dec
andl
and
inc
push
movsb
fidivrs
jp
pushf
nop
sub
mov
or
ret
mov
mov
jo
sbb
movsl
dec
add
pop
test
push
cmp
xchg
test
loopne
lahf
mov
jge
outsl
pusha
in
mov
mov
jns
aaa
pushf
int
sbb
sub
and
loop
mov
lahf
sbb
add
xor
rolb
adc
push
addr16
dec
ja
lods
scas
sbb
imul
mov
popf
aas
inc
in
push
lods
xchg
inc
push
js
mov
scas
push
imul
iret
mov
movsl
in
adc
sbb
add
xchg
jge
mov
xchg
cmpsb
xorl
push
mov
lock
lods
cmpsl
jbe
or
xchg
movsl
xchg
adc
adcb
sub
add
adc
xchg
or
adc
ficomps
or
imul
jmp
movsl
inc
jbe
iret
out
aam
leave
and
loope
add
stc
iret
xlat
adc
outsb
test
jnp
std
and
sub
cmc
jl
fsubp
fbld
pop
addl
mov
inc
movsl
fists
repnz
pushf
mov
sbb
sbb
mov
imul
pusha
repz
popa
cmp
call
dec
jl
add
mov
in
insb
into
push
pop
outsb
jo
pop
leave
pop
cmpsl
nop
and
popl
dec
iret
push
ds
jne
popa
pop
or
imul
sbb
sbb
xor
mov
in
inc
loope
mov
inc
add
adcb
mov
add
or
movsl
pop
fdivr
push
or
imul
pusha
add
mov
mov
push
pop
or
movsl
mov
xlat
cltd
fsubs
cmp
movsb
mov
cmpsl
ja
mov
clc
pop
imul
push
int3
mov
lret
mulb
mov
mov
cmp
out
aad
aaa
push
sahf
cmpsb
sbb
xchg
stos
push
lods
add
adc
call
cmpsl
mov
push
sbb
lds
cld
outsb
sbb
cmp
and
sub
movsl
add
imul
stc
addb
leave
fst
sbb
pop
xchg
lret
jl
dec
movsl
mov
ds
rorl
fldenv
mov
dec
retw
and
movsl
mov
mov
outsl
les
cmpsb
call
pop
cmc
jnp
test
xchg
scas
lahf
mov
icebp
pop
movsl
mov
jnp
std
scas
enter
mov
lds
mov
repz
inc
popa
movsl
pop
bound
pop
and
or
mov
or
and
sub
mov
jecxz
loopne
ja
cld
loope
mov
mov
add
imul
pop
mov
cli
push
aad
int
scas
in
pop
dec
mov
sub
xor
and
movb
orl
jne
int
rep
push
ret
mov
hlt
daa
cli
xchg
lods
inc
call
sbb
js
xor
xchg
cmc
loope
pop
jl
test
jle
sahf
in
cmp
into
int
sub
ret
arpl
loope
xchg
sbb
pusha
aas
popf
and
xchg
movsl
sub
inc
lret
sti
aaa
in
popa
stos
fsubs
xor
sti
add
mov
mov
sub
mov
out
mov
call
mov
adc
dec
mov
movsl
push
repnz
adc
daa
adc
xchg
sub
enter
ss
cmpl
es
ljmp
movsl
scas
mov
sub
lret
subb
insl
imul
pop
add
addr16
xchg
popf
ret
sub
inc
sbb
sub
int
lods
in
xchg
cmp
fstpt
scas
mov
sbb
jnp
enter
sbb
rcrl
push
stos
loope
xchg
out
sti
js
mov
push
xchg
add
sahf
sub
arpl
mov
add
pop
xchg
cmpsb
es
jl
mov
sbb
and
mov
rorl
or
jp
leave
mov
in
inc
push
mov
pop
jmp
xchg
loope
xor
inc
pop
jns
lds
stos
add
mov
xchg
std
sarb
add
cmp
mov
pop
dec
pop
ja
mov
adc
push
sub
js
mov
leave
mov
or
adc
subl
fmul
out
add
ret
ds
and
pop
loopne
pop
fwait
movsb
sub
or
lds
sbb
inc
mov
rsqrtps
add
ja
or
int3
not
movsl
push
out
pop
ret
mov
in
pop
jb
mov
imull
sub
movsl
mov
sbb
loop
popf
dec
dec
fcomp
nop
outsb
ret
mov
pop
ljmp
xchg
cwtl
sbb
bound
push
dec
cli
aam
jl
movsl
adc
mov
test
jae
dec
dec
ss
test
neg
in
movsl
nop
inc
mov
xacquire
jo
cld
mov
push
xor
pop
jmp
movsl
call
filds
mov
movsl
jne
int3
and
clc
aaa
mov
movsl
mov
jno
lcall
scas
outsb
lods
add
loopne
bound
sbb
cmc
popl
xchg
andl
fwait
push
xor
test
js
inc
sub
movsl
dec
pop
sbb
daa
push
pusha
outsl
mov
in
dec
sub
mov
pop
faddl
xor
movsl
lock
fs
frndint
jl
push
iret
bnd
outsb
je
shlb
call
fs
sbb
cmp
in
dec
out
movsl
cmpsb
ja
in
mov
fiadds
loopne
jmp
into
movsl
mov
lds
std
push
in
out
rcr
jno
rol
les
outsb
movsl
jb
repz
and
movsb
dec
test
push
movsl
out
in
cwtl
andl
movsl
or
scas
add
mov
adc
movsl
push
mov
out
jb
jg
std
add
lea
xchg
mov
pop
mov
inc
lock
fdivs
sahf
pushl
clc
ljmp
lret
inc
mov
pop
clc
int
mov
fsubrs
cmp
or
sub
lods
out
mov
or
movsl
dec
sub
lret
movsl
sar
mov
mov
xchg
mov
aaa
hlt
mov
jo
xchg
les
lahf
inc
mov
sahf
or
xor
testl
popa
frstor
enter
movsl
inc
int
or
pop
in
mov
dec
dec
pop
in
sarb
mov
ljmp
lea
jecxz
stos
mov
movsl
imul
ljmp
flds
int
idivl
movb
push
mov
sbb
lret
into
ja
xor
rol
adc
movsl
mov
dec
jno
stos
leave
jge
xor
mov
and
ret
ds
or
clc
out
jmp
mov
push
imul
out
movsl
or
pop
jbe
insb
leave
pop
push
scas
add
sub
in
fsqrt
mov
ja
fisttps
and
rcrb
popa
ljmpw
jmp
mov
sbb
and
loope
test
les
xchg
cmpsb
in
clc
dec
outsb
movsl
fs
or
mov
mov
stc
xchg
iret
in
movsl
push
dec
mov
into
and
movsl
test
repnz
or
mov
movsl
xchg
mov
test
cmp
inc
cmp
movsl
mov
and
popf
mov
pop
xor
aad
rolb
pop
dec
sti
pop
mov
sbb
mov
jl
jb
push
daa
xchg
jle
push
in
inc
mov
mov
ja
lods
fwait
dec
and
pop
jle
mov
mov
clc
jnp
pop
in
leave
pop
xchg
js
int
in
sub
cmp
sub
enter
icebp
xor
mov
sti
jecxz
in
pop
cmp
test
pop
call
cld
lock
pop
push
loop
lret
lahf
out
xchg
mov
push
flds
dec
mov
ds
je
leave
je
neg
fs
mov
cmpsl
mov
xchg
orl
push
or
inc
movsl
dec
scas
scas
mov
jae
movsl
aad
lock
add
imul
jecxz
aad
inc
test
imul
xor
insb
aad
nopl
mov
flds
jmp
mov
mov
lds
mov
dec
fldt
add
lret
jl
mov
push
add
in
cmp
add
sub
cmp
std
andb
imul
mov
pop
lock
cmp
das
jb
into
fdivp
push
add
push
fisubl
dec
push
dec
arpl
insb
sub
popf
cmp
scas
sbb
jmp
mov
mov
cmp
mov
movsl
pop
lods
or
data16
loope
push
js
test
dec
pushf
inc
xor
mov
mov
adc
push
mov
stc
pop
sub
dec
and
mov
pop
push
movsl
adc
andb
hlt
cmp
int
in
and
or
fdivr
lea
andb
imul
xor
add
mov
ret
push
repnz
mov
pop
jmp
mov
movsl
pop
mov
lds
xchg
dec
mov
push
sbb
clc
mov
mov
cmpsb
stos
dec
lds
mov
xchg
lds
movsl
xlat
dec
in
int
ja
data16
pop
pause
movsl
inc
cltd
dec
xchg
jbe
push
sbb
push
push
inc
dec
addr16
movsl
inc
push
lds
mov
mov
dec
popf
mov
adc
rclb
fstpl
testl
xchg
sub
and
sbb
or
mov
mov
test
sub
pusha
mov
cmpsb
xor
cwtl
inc
popa
lret
mov
cmc
cmpsl
in
lds
cs
mov
test
js
add
push
sahf
mov
stos
cmp
mov
clc
mov
sub
adc
xlat
jb
cli
and
pop
data16
cmp
test
pop
or
pop
xchg
movsl
into
lret
push
mov
movsl
and
insb
dec
pop
aam
adc
jmp
add
movsl
int3
dec
popa
out
int
movsl
mov
or
daa
cli
nop
push
lea
mov
mov
in
dec
ret
jmp
fldenv
mov
pop
movsl
push
setg
mov
sbb
mov
rorb
mov
ss
test
movsl
adc
and
iret
movsl
and
sub
movsl
jae
mov
mov
adc
adc
enter
movsl
imul
xlat
movsl
in
dec
cli
fstps
push
movsl
mov
lcall
and
mov
pop
mov
nop
lods
fadds
ja
adc
movsl
push
mov
popa
inc
bound
dec
ja
cmp
mov
inc
and
ja
fcmovb
js
sub
negb
jmp
xchg
mov
cs
movsl
out
lods
pop
mov
outsb
rcl
cli
test
adc
add
scas
movsl
ret
add
pop
xor
xchg
push
imul
jge
lret
rol
movsl
mov
aad
jnp
notb
jno
daa
adc
ljmp
mov
cmp
movsb
sarl
inc
pop
movsl
mov
loope
aad
mov
daa
or
pop
add
pop
mov
in
aad
add
xchg
movsl
push
add
dec
fs
lods
movsl
ret
mov
or
sub
adc
outsl
pop
movsl
out
int
test
mov
rcr
dec
mov
adc
imul
lcall
and
add
aaa
add
mov
push
out
sub
jge
mov
adc
test
movsl
loopne
xor
cmpsl
jns
or
jb
pop
push
shll
into
push
lret
pop
pushf
or
jb
or
xchg
cwtl
std
jg
jle
xchg
xor
or
sub
cwtl
aas
mov
pop
jb
jo
adc
add
jle
in
icebp
mov
in
es
jne
in
cs
and
push
loopw
add
jl
arpl
into
clc
cmc
jnp
rcrl
loope
adc
movsb
add
lods
sbb
jno
fsts
std
movsl
aam
icebp
lods
in
mov
stc
daa
mov
mov
cmp
or
arpl
insb
nop
sbb
inc
lret
mov
push
jge
mov
std
cmp
xlat
call
push
push
in
loope
stc
sub
mov
xchg
jno
je
jl
and
add
jp
xor
mov
xor
std
in
repz
xchg
data16
push
sub
fidivs
cltd
sub
adc
and
and
ret
jne
popf
roll
sub
out
loop
sbb
or
das
arpl
and
push
xchg
repz
stos
mov
cwtl
bound
mov
scas
cmp
dec
mov
fistpll
push
lea
shll
jmp
movsl
sub
add
lret
movsl
jmp
add
iret
ljmp
inc
xchg
mov
inc
push
add
test
movsl
mov
mov
loopne
and
mov
aad
adc
xorl
insb
movsl
push
dec
lods
sbb
mov
test
adcl
mov
jl
test
push
add
mov
daa
mov
movsl
inc
adc
pop
push
xchg
imul
jbe
sbb
pushf
sub
sti
add
rcl
push
leave
movsl
addr16
sub
mov
dec
push
ja
inc
mov
or
cmp
pushf
inc
stc
pop
pop
mov
inc
jb
dec
movsl
dec
insl
pop
jp
repnz
shll
mov
pop
ds
movsl
cmp
jle
cmp
sub
sub
mov
sub
movsl
adc
fldcw
mov
movsl
frstor
mov
sbb
adc
mov
xlat
daa
stos
mov
mov
push
movsl
mov
cwtl
lds
mov
dec
andl
xchg
ss
mov
clc
inc
imul
fdivr
jnp
mov
scas
jg
nop
andl
repz
pop
jle
shrl
xchg
jg
jae
push
mov
ljmp
stc
jb
aaa
xchg
scas
aad
std
rep
mov
xchg
add
lcall
xor
inc
dec
xor
stos
insl
insb
arpl
mov
outsl
pop
aaa
mov
mov
xor
xor
mov
insl
push
inc
enter
pop
jno
jno
loope
popf
inc
mov
sbb
imul
ds
movsl
adcl
jl
stos
lahf
test
cwtl
or
iret
xor
movsl
pop
jge
jbe
cmpsb
add
movsl
pop
sbb
rorb
sahf
popf
sbb
shl
inc
stos
lock
and
movsl
ljmp
sub
mov
fwait
xchg
inc
movsl
mov
aam
daa
xor
adc
or
jl
pop
sarb
in
and
into
mov
push
jns
mov
pusha
push
and
add
dec
add
movsl
or
jae
movsl
sub
int
adc
xor
in
xchg
inc
mov
push
mov
ret
jnp
ret
adc
movsl
push
pop
pop
mov
movsl
cmp
stos
cltd
mov
mov
push
xor
push
push
and
inc
lock
push
jno
movsw
fstps
adc
movsb
sbb
stos
cmp
jmp
xchg
addr16
test
les
push
movsl
inc
nop
mov
mov
mov
shll
lcall
ljmp
jb
cmp
das
mov
pop
int
dec
out
and
cmc
adc
sahf
and
mov
push
xor
daa
scas
or
mov
cmp
pop
cld
movsl
xor
ret
shlb
out
enter
dec
movsl
lahf
sub
xor
aad
ljmp
inc
push
push
or
jp
ja
das
popa
jae
fmul
in
jno
ljmp
popa
adc
and
leave
fcomi
movsl
pmaddwd
clc
sub
mov
inc
cmp
lods
mov
movsl
cmp
mov
movsl
insb
js
out
xchg
mov
test
loop
dec
lea
inc
jle
and
or
cmpsb
push
test
ret
les
and
sar
or
mov
xchg
subb
mov
aad
aas
add
es
push
cmp
adcl
push
jp
leave
jo
mov
out
ficompl
xor
xor
aas
iret
pmullw
pop
lea
icebp
mov
dec
ja
add
jecxz
cmp
xchg
add
in
jl
movsb
loope
out
pop
sahf
pop
mov
ret
sbb
ss
jg
xchg
dec
dec
dec
lahf
inc
movsl
mov
and
sbb
dec
sti
ljmp
xor
loopne
sbb
data16
roll
popa
cld
jmp
jmp
sbb
icebp
lods
iret
inc
mov
inc
fists
lds
mov
movsl
push
sub
mov
mov
pop
xor
movsl
daa
mov
js
mov
pusha
inc
xchg
sbb
rcrl
add
test
or
lds
test
xor
inc
std
fadds
mov
dec
mov
jg
add
push
notl
movsl
fcmove
les
aad
jnp
inc
and
rolb
movsl
pop
shrl
int3
pop
add
ficoml
icebp
cmc
out
movsb
fwait
movsl
pushf
fadd
add
movsl
mov
and
xchg
in
jno
mov
test
std
gs
pop
push
pop
stos
push
movsl
mov
cmpsl
push
and
or
cmp
xchg
xchg
movsl
fstps
stos
push
movsl
fsub
push
test
cltd
call
inc
xchg
cmpsl
cmp
dec
stc
jo
push
les
push
jmp
jae
sahf
scas
lods
in
and
pop
mov
cmpsl
and
popa
scas
mov
cwtl
and
int3
std
mov
movsb
mov
sti
cli
subl
je
aas
dec
mov
divb
fdivrs
movsl
add
sub
push
lock
inc
test
xor
movsl
sub
test
sahf
daa
mov
add
int3
mov
lods
int
into
mov
scas
pop
dec
add
sbb
dec
scas
jl
jae
movsl
adc
pop
mulb
int3
cmp
je
push
mov
mov
mov
inc
jb
mov
xchg
inc
push
fmull
pushf
cmpsl
and
xchg
xchg
aam
lret
bound
enter
add
lret
sahf
cwtl
jmp
mov
ret
mov
push
or
lcall
add
jp
push
pop
movsl
int
imull
rcll
mov
lods
xchg
sbb
dec
adc
lds
cltd
push
nop
fisubl
xor
jmp
out
jle
imul
xor
fwait
sbb
mov
xchg
push
or
jp
dec
lret
add
adcl
cmp
movsl
mov
das
or
popf
ficompl
subl
movsl
cmp
and
shr
test
or
popf
pushf
shl
xchg
dec
hlt
adc
loop
push
mov
movsl
wbinvd
dec
shl
cmpb
loopne
arpl
cmp
jmp
pushf
dec
mov
jnp
popf
bound
xchg
movsl
and
gs
ja
enter
cmovne
jb
pop
push
jo
loopew
rcr
push
in
xor
mov
movsb
cmp
imul
lods
movsl
outsb
add
into
in
jno
xlat
sti
fsubp
mov
shlb
jo
fwait
mov
into
mov
leave
hlt
xlat
aaa
or
cmc
mov
movsl
ljmp
sti
add
cmpsl
mov
mov
divb
int3
movsl
jp
lods
retw
jge
outsb
jns
dec
shrb
xorl
shll
sub
shlw
out
lds
inc
pop
cs
call
paddd
sub
rclb
movsb
sbb
inc
adc
and
js
inc
mov
in
inc
std
or
mov
movsl
cmpsb
jge
lcall
mov
cmp
push
inc
push
fdivr
cmpsb
jecxz
repnz
and
xor
stos
sub
or
rcrb
test
dec
xchg
stos
lods
stc
movsl
adc
cld
lods
sahf
sub
mov
test
inc
xor
mov
adc
popa
je
ror
pop
add
jmp
data16
cmp
dec
xorb
push
ja
pop
jge
and
fs
test
or
cmp
leave
sub
test
dec
sahf
cwtl
movsl
rcrl
cmpsb
push
add
add
jle
dec
mov
xchg
push
xchg
ja
fsubl
pop
mov
mov
sbb
icebp
pop
and
jmp
movsl
in
inc
sahf
jp
outsl
fsubl
daa
xchg
mov
cmp
sbb
xor
pop
inc
sbb
and
fsts
scas
pop
scas
aaa
mov
mov
fwait
mov
cwtl
mov
jmp
repz
imull
sbb
in
lcall
movhps
std
push
cmpsb
cltd
sahf
out
sar
movsl
cmc
mov
outsl
insb
or
push
pop
je
pop
rorb
loopne
loopne
int3
push
xor
inc
and
xor
sahf
out
mov
add
sub
repnz
mov
clc
cltd
mov
fwait
test
mov
xor
pop
insb
push
scas
inc
in
push
sti
mov
cmp
dec
pop
stos
js
mov
cmpsb
pop
xor
push
xor
or
push
cmc
arpl
movsl
inc
jae
movsl
pop
rolw
movsl
inc
push
pop
jg
icebp
and
pop
push
mov
add
cld
xchg
shlb
mov
pop
mov
enter
sbb
or
dec
in
push
scas
adc
and
mov
push
dec
cmpsb
jno
inc
movsl
push
pop
dec
inc
ljmp
sahf
inc
add
dec
sbbb
xchg
cmc
cmpb
mov
movsl
or
imul
movsl
jmp
cmp
movsl
cmp
loopne
add
lds
and
adc
cli
outsl
movsl
or
test
sti
and
ds
iret
mov
dec
mov
and
arpl
cmp
roll
mov
aas
movsl
xor
cmp
imul
scas
movsl
out
sub
add
les
pop
shlb
cmp
lock
cmp
ffreep
inc
xchg
adc
inc
movsl
outsl
pop
mov
jp
or
xbegin
or
movsl
adc
adc
mov
add
popf
dec
sahf
fisubl
and
sub
xor
push
aam
je
adcl
and
xchg
sahf
mov
iret
cmp
inc
sbb
outsb
xchg
mov
clc
shll
mov
lcall
in
mov
pop
insb
and
adc
filds
movsl
cmp
out
xor
xlat
cmpsl
sbb
sub
dec
add
scas
push
pop
push
mov
movsl
ret
mov
or
mov
out
pop
leave
mov
push
gs
test
and
popl
cli
push
push
movsl
mov
and
or
jl
mov
insl
sbb
ret
mov
mov
mov
hlt
sahf
in
pop
mull
mov
push
cmp
movsl
mov
jns
sbb
movsl
sbb
test
or
mov
cmpl
sub
mov
xor
rcrl
lret
or
mov
fistpl
movsl
scas
jge
dec
cmc
sahf
add
movsl
push
fs
add
push
push
adc
fst
leave
ret
movsl
stos
cmp
stos
mov
adc
dec
orl
dec
leave
push
xchg
shll
pushf
imul
xchg
xchg
clc
rolb
jae
xor
pop
lea
jg
jne
inc
xchg
mov
cwtl
or
pop
jno
out
orl
cmp
inc
cmp
push
sub
push
xchg
jns
mov
sbb
fiadds
pop
mov
inc
adc
push
mov
jle
shlb
mov
pop
stos
cmpsl
mov
movsl
ror
nop
jmp
or
add
test
xor
ja
sub
movsl
cwtl
jnp
lea
jge
pop
xchg
sub
sub
xchg
aad
mov
test
xor
push
mov
mov
ficoms
push
jnp
mov
movsl
or
sub
xchg
push
jo
pop
pop
xor
push
movsl
adc
inc
negl
popa
repz
dec
movsl
cmp
scas
cwtl
and
sbb
sub
nop
or
cltd
xchg
mul
jmp
sbb
dec
or
movsl
pushf
stos
shrd
test
leave
dec
cmpb
gs
sbb
jo
ss
es
iret
push
movsl
mov
or
test
movsl
add
sarb
int
adc
add
clc
mov
mov
mov
movsl
insb
jl
push
adc
cmp
push
mov
sbb
mov
adc
movsl
lods
or
push
mov
xor
out
popa
insb
push
out
into
xchg
jmp
lcall
and
lea
out
movsl
inc
out
cmovp
leave
hlt
push
jmp
fsts
pop
jnp
inc
sbb
inc
xor
movsl
nop
xor
aad
call
scas
push
cli
movsl
xor
or
movsl
dec
xchg
push
dec
add
lds
es
cmp
add
ds
mov
mov
andl
pop
movsl
push
das
outsb
ficomps
add
xchg
cmpsl
lret
in
movsl
test
push
xlat
gs
mov
and
xor
insl
sbbl
movsl
loopne
ljmp
and
shlb
dec
cli
cld
or
in
push
lret
out
andb
clc
lds
sbb
mov
push
xlat
out
loope
in
cld
sbb
aad
int
in
mov
mov
or
push
stos
xchg
loopne
mov
scas
cli
and
jl
aaa
test
cwtl
push
in
pop
inc
fcomip
mov
cmpsl
in
mov
jecxz
inc
leave
xrelease
sub
adc
xchg
daa
sbbb
lock
shr
movsl
adcl
adc
inc
movsl
push
sbb
loopne
mov
push
scas
lods
mov
pop
xor
jge
movsl
adc
and
mov
xchg
fwait
mov
jecxz
in
fnstenv
cmpsb
inc
mov
add
fistl
push
aad
lds
or
lds
test
shrl
cmp
cld
out
fsubl
lret
clc
sarb
movsl
aas
sarl
adc
outsb
push
mov
mov
mov
ja
imul
cmp
jle
dec
sbb
jnp
cmp
or
lret
mov
xchg
jno
mov
dec
lods
and
add
movsb
inc
pusha
or
jmp
leave
push
std
mov
enter
adc
xor
add
cmp
repz
xchg
rolb
sbb
xchg
or
and
je
cmp
xchg
dec
and
xchg
and
and
aas
mov
scas
mov
fwait
sbb
loope
jecxz
push
loope
mov
cmc
int
add
sbb
cmp
shlb
pop
mov
mov
and
loope
sahf
dec
lret
sbb
mov
ljmp
inc
push
insl
clc
mov
mov
xchg
movsl
jle
pop
addr16
push
push
xor
add
adc
mov
mov
pop
xchg
fwait
or
cmp
and
fstps
stc
mov
add
rclb
fwait
pop
out
movsl
mov
sbb
lods
aad
jecxz
mov
or
in
pop
lret
or
jge
cmp
mov
andl
dec
mov
mov
movsl
mov
adc
mov
mov
aad
stc
push
mov
arpl
lods
mov
sbb
mov
sbb
sbbb
movsl
sub
push
and
clc
fwait
push
loopne
cmpsl
sbb
cld
icebp
dec
lods
or
add
or
fbstp
mov
in
lcall
mov
addr16
imul
and
xor
nop
fwait
adc
add
leave
movsl
or
das
push
jno
into
movsl
les
mov
int3
or
mov
sub
and
xchg
sbb
mov
lods
mov
jp
out
fcmove
or
mov
mov
xchg
add
dec
mov
adc
addr16
lea
adc
aam
sarl
push
mov
movsl
jecxz
jmp
xlat
cltd
xor
rorb
mov
fbstp
dec
mov
mov
ljmp
cwtl
mov
fsubs
rclb
sbb
sub
movsl
inc
lcall
pop
mov
and
pop
incb
in
adc
stc
ja
movsl
xor
or
or
push
pop
dec
pop
into
data16
cltd
sub
movsl
or
subl
mull
imul
xchg
add
mov
pop
xorl
movsl
popw
jo
hlt
out
xchg
mov
shl
icebp
xchg
pop
mov
sbb
push
popf
sahf
movsl
getsec
ljmp
mov
jns
inc
sub
iret
pop
jg
xor
mov
gs
fldt
xor
fisubl
movsl
stc
jle
jno
mov
sbb
adc
or
or
pop
das
into
push
fsubs
mov
and
lret
adc
fwait
xchg
mov
orl
outsb
push
aas
push
add
sti
addr16
movsl
insb
sub
fsubl
and
jecxz
xchg
adc
jmp
movsl
test
cmc
lret
je
ds
movsl
add
fdivs
out
movsl
loopne
sub
stc
aaa
rcr
inc
sbb
mov
jns
pop
movsl
pushf
sahf
dec
add
jo
stos
shl
popa
andb
fsts
jns
aas
or
push
movsl
mov
aad
mov
push
push
and
sbb
movsl
xor
in
test
xchg
sub
aas
mov
shll
sbb
jns
movsl
test
cld
imul
icebp
lea
movsl
pop
inc
adc
imul
pop
inc
sahf
mov
fisubrl
enter
adc
xor
lock
pop
push
movsl
leave
mov
and
fcmovnb
cmp
icebp
sub
and
push
jecxz
cld
pushw
add
mov
or
mov
rcll
xchg
ss
rorl
cmp
cmp
adc
andb
mov
out
fnstsw
cld
cmp
xorl
jge
and
loopne
es
add
xchg
push
popf
aaa
jnp
jns
sbb
js
mov
xor
adc
lret
aam
ds
xorl
xchg
add
xor
lods
rcrl
jl
sbb
sbb
rclb
mov
scas
mov
jnp
fucom
dec
fsubs
xchg
mov
movsl
inc
cltd
pop
cld
mov
cmp
cwtl
mov
mov
icebp
andl
js
jmp
bound
mov
ret
mov
jnp
movsl
gs
or
mov
call
adc
dec
inc
movsl
mov
pop
mov
inc
out
mov
push
fcmovne
mov
test
mov
push
xor
dec
mov
in
jne
std
and
into
pop
push
add
movsl
cmp
lret
cld
sahf
mov
stos
pushf
jle
cli
pop
mov
addl
jb
sbb
imul
stos
or
push
clc
inc
push
add
inc
sbb
lret
andb
push
jle
sahf
sub
inc
sub
movsl
pushf
std
add
sbb
stos
shlb
or
loopne
in
push
mov
lahf
inc
jle
nop
pop
mov
adc
mov
cmc
aam
movsl
pushf
adc
jb
outsb
mov
ret
test
sbb
movsl
inc
mov
in
push
movsl
sub
mov
fdivrs
pextrw
jp
mull
sahf
mov
sub
in
lds
jno
cmp
pop
aas
jmp
adc
pushf
out
movsl
mov
lods
fcmovne
add
movsl
fs
and
rorl
xor
cmp
clc
dec
inc
aad
aam
sbb
adc
sbb
sahf
cwtl
pushf
cmp
jl
iret
test
lock
stc
fwait
pop
outsl
movsl
orl
pusha
jecxz
cltd
lds
pop
rcrl
mov
dec
add
mov
ds
pushf
push
js
mov
mov
lret
mov
push
inc
and
jp
mov
adc
mov
pusha
loope
addb
fistl
jle
or
scas
scas
and
lahf
js
flds
xor
popa
jg
arpl
imul
shll
test
jle
movsl
imul
mov
and
mov
mov
and
mov
cmp
push
adc
mov
movsl
aad
daa
lahf
xor
movsl
cmc
push
push
pop
nop
in
movsl
push
dec
addr16
fisttpl
sbb
push
jle
pop
xchg
jbe
subl
stos
das
push
pop
push
adc
movsl
mov
and
push
fwait
sub
sbb
cld
movsl
dec
addr16
scas
jne
insb
push
or
jle
and
shrl
push
sbb
nopl
mov
in
pop
mov
lods
imul
jnp
xor
bound
push
mulb
xor
movsb
fiaddl
test
mov
xchg
test
mov
inc
inc
add
in
sbb
adcl
and
jb
mov
pop
jno
sbb
mov
and
movsl
sub
adcb
cs
adc
mov
xorl
cli
pusha
aam
xchg
push
xor
movsl
mov
pmaxub
fwait
mov
test
movsl
sbb
std
loop
adc
cmp
adc
dec
xchg
pop
fidivl
movsl
jo
out
mov
cltd
fcmovnb
mov
test
jg
sub
lcall
stc
sbb
rcll
pop
and
xor
mov
mov
sub
adc
push
add
adc
jb
lds
and
jno
std
mov
loope
hlt
cmp
mov
fstl
mov
int
push
std
clc
sahf
xchg
js
adc
test
mov
mov
arpl
and
leave
and
mov
sbb
nop
jns
dec
xchg
mov
mov
mov
push
movsl
cmp
inc
and
divl
mov
jb
data16
sub
mov
and
mov
jb
mov
mov
push
aaa
mov
sbb
test
or
xchg
movhps
push
iret
adc
cmp
out
inc
inc
inc
pop
ljmp
rcrb
adc
jmp
neg
scas
push
xlat
dec
jp
ret
cmp
pop
push
adc
jmp
stc
inc
and
lds
dec
sub
popa
pop
movsl
jmp
jl
dec
xchg
add
roll
cmpl
int
movsl
dec
mov
fbstp
push
cmp
cmp
mov
mull
mov
jbe
xor
push
push
fwait
mov
js
and
test
rcrl
xchg
ljmp
fbstp
ds
mov
call
jecxz
xchg
add
adc
mov
adc
mov
and
movsl
push
jl
lahf
jecxz
lods
pop
and
pop
in
aaa
sub
jno
mov
jo
cmp
shll
jecxz
lods
adc
dec
pop
mov
movsl
aam
push
mov
add
mov
or
sub
fldenv
push
mov
movsl
sbb
rcll
movsl
insl
daa
jo
pop
in
cmc
movsl
shrb
dec
out
and
add
imul
pusha
mov
movsl
sbb
int3
pop
push
jmp
cmp
xchg
mov
and
inc
loope
lahf
xchg
push
stc
mov
loope
dec
adc
mov
mov
rorl
movsb
push
add
add
adc
add
std
sbb
mov
jg
aam
test
adc
xchg
xchg
rol
jl
add
stos
rcrl
pop
adcl
mov
add
xchg
aad
outsb
push
sbb
mov
xor
fdivrs
pop
cltd
mov
movsl
icebp
popf
lea
adc
mov
lea
push
push
mov
xor
lock
dec
pop
dec
push
inc
xchg
inc
push
cmp
xor
push
sub
bound
adcb
xchg
xor
ja
jb
imul
pop
xor
push
xor
dec
xor
mov
xor
xor
xor
cmp
sub
andb
and
and
pop
and
dec
and
ds
scas
and
mov
fwait
ljmp
andb
and
pusha
and
push
and
inc
and
aaa
and
and
mov
xchg
ljmp
and
jbe
insl
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
adc
mov
cmp
in
out
out
out
out
out
out
fnstcw
out
out
out
out
out
out
out
adc
or
icebp
pop
ficoms
xchg
dec
push
cmp
push
sub
bound
adcb
addb
jp
jno
insb
xor
data16
pop
xor
push
xor
inc
xor
xor
xor
xor
cmp
sub
andb
and
pusha
and
push
and
dec
and
cmp
sub
jb
xchg
cmp
pop
addl
insl
xchg
xchg
pop
xchg
xchg
inc
xchg
aas
or
call
sub
cwtl
xchg
ficoms
jle
pop
jle
jne
jo
outsl
ds
in
arpl
pop
ds
ds
ds
ds
ds
ds
cmp
xor
xor
cs
dec
lcall
cmp
jge
js
ja
jb
imul
pop
sub
push
sub
dec
sub
cmp
cmp
sub
lods
mov
mov
scas
mov
jg
jp
jno
insb
cmpsl
imul
cmpsl
push
cmpsl
push
cmpsl
dec
cmpsl
inc
cmpsl
inc
cmpsl
cmpsl
xor
cmpsl
sub
add
lea
xor
je
jae
outsb
xor
pusha
sub
pop
xor
dec
xor
inc
xor
xor
xor
xor
mov
cmp
sub
jnp
jbe
insl
and
bound
push
and
mov
test
jmp
ljmp
out
mov
and
jp
lock
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
enter
cmpsl
inc
sahf
mov
push
xchg
dec
xchg
inc
mov
mov
test
subl
sub
je
jae
insb
sub
fs
sub
sub
sub
sub
sub
sub
sub
sub
mov
jmp
test
and
jbe
jae
data16
out
out
out
out
out
jne
add
xor
xchg
jmp
ljmp
jae
jmp
or
pop
ds
sarl
into
movb
add
push
in
or
adc
mov
fadds
shlb
or
repnz
sbb
test
addb
sbb
mov
test
push
pop
cmp
fisubs
sar
pop
xchg
cmp
inc
lds
cmp
mov
and
iret
cli
sahf
adc
cld
or
loope
inc
xchg
dec
into
xor
sub
mov
lods
popl
test
call
mov
pop
or
scas
sub
cmc
adc
stos
arpl
jnp
aam
cltd
test
movsb
pop
incl
ds
sahf
leave
jle
pop
mov
add
pop
dec
push
cmpsl
int
xchg
mov
mov
test
outsl
add
cmp
sbb
jecxz
xlat
popf
dec
xchg
into
mov
inc
push
and
pop
dec
pop
add
inc
les
and
xor
incl
lret
pop
rorl
add
sar
ret
inc
push
or
push
pop
in
rclb
or
sub
xor
xor
push
cmp
xor
in
frstor
ret
and
cmpsl
pop
aam
jmp
ljmp
pop
out
out
out
jg
mov
xchg
cmp
xor
pop
add
push
std
jmp
cmp
mov
mov
fidivrs
mov
xchg
rclb
or
xlat
nopl
mov
mov
push
cli
push
mov
adc
rcl
popa
or
sbb
test
stos
dec
mov
xchg
mov
add
mov
mov
enter
sbb
sbb
push
aaa
pusha
sbb
jmp
mov
ficomps
int
leave
out
ljmp
inc
mov
push
xchg
dec
mov
cmp
push
sub
inc
sub
mov
mov
fmuls
fldl
xor
mov
fistl
sbb
pusha
push
aam
int3
sub
insl
out
cmpsb
adc
test
fists
cmp
mov
arpl
mov
clc
sahf
jo
jmp
pop
ds
lret
ds
test
cmp
test
js
insb
sub
and
sub
test
jmp
ljmp
push
out
out
out
out
ja
lret
int
negb
add
pop
jnp
enter
popa
out
and
fidivl
imul
movsl
loope
xlat
scas
dec
lods
cmp
mov
jle
movsb
xlat
sbb
cmc
in
push
cwtl
or
icebp
cld
push
mov
pop
sbb
dec
push
inc
inc
cmp
mov
test
ds
fcompl
or
fwait
xchg
fiadds
stc
jl
xchg
pop
dec
bound
xor
int
add
les
xchg
fidivrs
mov
std
pop
mov
add
in
in
fistps
adc
mov
push
mov
jae
push
or
or
push
repz
adc
fcoms
fxch
adc
or
fadds
push
xor
test
int
add
sti
loopne
push
pop
enter
fidivl
std
fsubp
ds
popf
rcll
scas
xor
xchg
sbb
cmpsb
scas
aam
dec
stos
lds
mov
fists
fldl
mov
add
rcll
xchg
xor
mov
es
or
and
add
pop
xchg
mov
xchg
cmp
lods
test
mov
add
adc
fisubrl
scas
fisubs
inc
sahf
or
or
add
inc
sarb
adc
adc
jecxz
imul
cmp
xor
dec
sub
lods
nop
test
fcmovbe
pop
fmul
vpslld
lret
into
inc
loopne
mov
sahf
xchg
imul
inc
push
scas
leave
lea
mov
pop
in
int3
jle
test
pop
rcl
xor
aad
mov
push
adcb
lods
into
fwait
test
popa
add
unpckhps
ud2
ret
pusha
mov
jle
sahf
adc
mov
les
dec
mov
cmpsl
mov
mov
aam
ds
pop
xchg
cs
mov
dec
sub
pop
bound
dec
sub
and
das
fsub
xchg
pop
or
fistps
xor
cmp
aaa
xor
fwait
cmp
int3
shll
add
ret
sub
and
jle
out
pop
stos
lret
cmpsl
mov
fstl
fcoms
lods
movl
adc
push
push
jecxz
sahf
mov
add
push
icebp
dec
fldl
cmp
hlt
les
jmp
mov
inc
jmp
dec
sti
lods
mov
add
push
xchg
ret
arpl
push
jp
in
iret
cmp
mov
mov
popa
mov
js
call
sub
xor
scas
cmc
out
mov
push
jae
out
pop
cmp
xor
sub
mov
mov
fmul
fucom
out
jle
pushf
icebp
sahf
pop
in
jae
ds
popf
leave
xor
and
rolb
fs
xchg
pop
daa
pop
push
test
or
call
in
adc
fstl
pop
xor
mov
lds
mov
and
pop
xchg
push
lods
dec
stos
cs
loope
cld
je
out
jle
fstpt
aam
sarl
into
ds
ds
ds
xor
and
or
add
dec
push
mov
cs
cwtl
mov
pusha
push
add
jg
cmc
cmp
xor
sub
inc
test
in
adc
adc
push
xor
adc
inc
mov
mov
jmp
roll
xchg
pop
popf
inc
add
loope
dec
push
cmp
adc
push
repnz
in
pop
mov
mov
fstps
test
out
xchg
cmpsb
bound
notb
lods
mov
sub
add
fisubrs
push
bound
or
xchg
es
pop
stos
jecxz
xchg
int
insl
scas
pop
lods
inc
stos
sub
movl
push
call
mov
jb
in
push
push
mov
sub
sbb
push
cmp
mov
lods
push
mov
mov
jge
out
push
in
out
sti
mov
xchg
adc
or
sbb
vunpckhps
jne
push
mov
add
in
int
shll
lret
test
and
adc
push
jg
loope
fiaddl
roll
or
pop
repnz
out
sahf
adc
mov
pop
dec
inc
repnz
mov
mov
scas
fldt
aaa
loop
mov
jmp
fists
addr16
fstps
jge
mov
mov
ror
ja
in
in
test
cmpsb
test
mov
rcl
cmp
adc
shll
ljmp
pop
or
jecxz
insl
mov
mov
add
xchg
mov
or
ja
out
pop
rorb
lcall
enter
out
imulb
pop
xor
rcrl
jmp
cmp
push
or
xchg
add
ljmp
loope
mov
mov
jne
enter
mov
jl
cmc
ret
mov
iret
pushf
or
jno
or
shl
cli
fidivs
pop
push
add
outsb
xchg
enter
push
inc
xchg
cmp
sub
mov
call
adc
addr16
ret
sbb
pop
mov
stc
out
or
lods
sbb
pusha
adc
inc
dec
cmp
xor
test
in
leave
call
pop
in
ret
sahf
mov
jne
repz
xchg
lods
mov
test
jmp
pop
xor
stc
sub
lods
icebp
adc
push
mov
add
fsubs
mov
push
repnz
loop
cmp
xchg
jg
xor
push
xlat
sahf
adc
int3
mov
enter
jmp
ljmp
sbb
jg
or
pop
dec
mov
mov
adc
and
daa
movsl
adc
or
pop
popf
xchg
or
xor
pop
std
fsubrp
mov
test
pop
loop
out
mov
sti
test
and
shlb
inc
mov
add
jmp
mov
jbe
jge
add
xlat
push
add
hlt
shrl
pop
push
mov
mov
mov
mov
scas
sub
and
rcl
cmp
or
out
aaa
or
lahf
mov
add
xchg
pusha
flds
das
jge
cwtl
cmp
jle
pop
and
jbe
push
loopne
mov
incb
icebp
pop
xchg
pop
mov
or
or
loopne
pop
xor
shr
push
in
out
out
jmp
in
call
pop
shl
stc
mov
call
std
shlb
xlat
scas
lret
stos
sub
mov
or
xchg
fiaddl
add
xlat
mov
addl
int
or
mov
pushf
fsts
jno
je
and
lahf
add
psubd
xchg
xchg
popa
sbb
enter
rolb
mov
mov
scas
into
lods
ds
mov
not
std
int
ljmp
adc
add
jns
in
pushf
push
adc
and
adc
std
mov
les
adc
popa
inc
pop
cmp
xor
lods
cwtl
mov
pop
bound
sbb
lea
imul
cld
mov
lret
mov
dec
filds
mov
test
jmp
ljmp
mov
mov
jmp
add
mov
mov
xchg
je
imul
cmpsb
lods
adc
scas
mov
or
push
fdivrs
push
jge
cltd
xchg
out
mov
std
and
xchg
jecxz
shlb
inc
cli
cli
cmp
push
bound
ss
xor
mov
push
rcrl
xchg
pop
orb
in
dec
inc
and
dec
js
cmp
adc
jbe
fildll
mov
mov
add
lock
pusha
push
int3
cmp
enter
out
out
pop
or
cmp
bound
test
adc
iret
mov
out
dec
pop
dec
popf
xchg
add
fidivrs
loopne
fsubl
into
pop
lea
stc
imul
xlat
jmp
or
out
dec
ljmp
in
loopne
cmpsl
leave
shr
push
jmp
ljmp
and
jno
xor
sub
popa
cmc
mov
jno
dec
cmp
or
clc
ds
mov
add
cmc
in
in
jl
rcr
mul
sbb
test
icebp
negl
cmp
pushf
add
andl
sti
loope
pop
movsl
xchg
int
and
sbb
cmp
adc
pop
jmp
inc
lods
mov
adc
nop
stc
add
imul
fdivrp
ds
popf
mov
jl
loopne
sti
out
call
cwtl
gs
shrb
jbe
in
test
sti
in
arpl
movsl
pop
sti
stos
xchg
jmp
cmc
loope
test
mov
iret
xlat
lret
inc
es
hlt
mov
faddl
hlt
push
repnz
jle
daa
inc
pop
or
pop
clc
push
inc
dec
mov
negb
and
sub
add
push
in
xchg
loopne
mov
jno
xchg
setl
leave
push
out
shll
mov
iret
pop
inc
push
xor
leave
or
xchg
in
dec
dec
pusha
sub
dec
pop
ds
das
int
mov
pop
bound
mov
aad
cmp
out
test
lods
fxch
or
jmp
mov
mov
mov
fistl
pop
fcoms
xchg
mov
adc
pop
inc
inc
add
shlb
les
mov
jl
jmp
pop
test
leave
xchg
arpl
xor
add
fnsave
iret
iret
mov
pop
arpl
mov
enter
jmp
cmp
je
popf
paddsw
mov
fstl
repz
or
sti
in
out
out
cld
xor
pop
pop
cmpsb
aad
or
xor
mov
lret
and
bound
jns
cmc
sbb
dec
mov
lods
jb
stos
push
jno
adc
xchg
aam
jmp
ljmp
pop
lret
sbb
enter
push
fisttps
xchg
xor
enter
test
scas
pop
repz
jl
pushf
mov
xchg
mov
xor
add
adc
icebp
mov
inc
pop
and
xchg
or
sti
adc
and
pop
div
pop
push
ds
xchg
mov
push
flds
adc
push
shlb
cmp
adc
and
dec
adc
fistl
mov
ret
ret
aad
bound
adcb
jle
cmpsb
pop
or
sti
mov
adc
or
mov
adc
into
push
and
cld
xchg
out
ficompl
mov
push
call
xchg
fidivl
daa
mov
or
std
jmp
ljmp
test
leave
sub
and
jmp
push
lods
lods
stos
sbb
popa
add
leave
scas
xchg
std
add
aam
lret
popl
mov
add
cmp
mov
mov
fsubrp
cmp
jmp
sub
jl
popf
icebp
sbb
mov
fisttpll
adc
ret
add
or
sar
loopne
inc
mov
jecxz
out
pop
sbb
clc
pop
inc
pop
mov
and
ljmp
adc
inc
jmp
ror
cmp
adc
add
in
adc
loopne
inc
popa
and
or
pop
pop
call
add
cld
cwtl
int3
jge
sbb
sbb
movsl
stc
ljmp
push
jecxz
pop
mov
xor
adc
adc
scas
roll
pop
pop
call
out
inc
xor
cmp
mov
jmp
adc
push
jge
out
cwtl
pop
jge
sub
mov
adc
mov
lds
adc
in
fsub
in
out
out
fucom
call
push
cmp
popf
jmp
mov
cmp
rcll
lods
pop
sbb
test
jecxz
push
addl
cmc
jecxz
rcr
jmp
std
mov
enter
out
adc
mov
pop
pop
inc
mov
adc
call
lods
dec
sarb
jno
jecxz
mov
fdivs
or
xor
dec
cmpsb
mov
mov
jb
cmp
cmp
push
rol
pop
ret
mov
mov
sbb
add
ljmp
in
ljmp
adc
xchg
mov
pusha
cmp
cmc
or
mov
pop
pop
push
dec
enter
adc
mov
insb
lods
ljmp
mov
jnp
call
push
sarb
adc
add
jmp
pop
ds
and
sbb
call
add
or
sbb
out
cmp
add
lods
popa
mov
mov
mov
scas
and
lock
rcr
cli
push
adc
push
repz
loop
shll
scas
mov
mov
mov
xlat
stc
sbb
inc
out
mov
and
xor
mov
and
out
mov
daa
icebp
ret
out
fstl
push
cmpsl
pop
pop
mov
inc
jmp
cld
out
and
fisttpll
dec
shll
sahf
adc
ljmp
pop
add
sti
movhps
or
cli
pop
jmp
pop
out
test
or
add
das
into
xlat
mov
jle
push
popf
cmp
enter
scas
sahf
sti
and
lods
inc
push
pop
add
mov
js
mov
aad
popf
adc
adc
mov
push
icebp
scas
lods
adc
push
aaa
sbb
out
cmp
pop
push
pop
mov
mov
adc
or
loop
aad
int
lods
test
or
ds
loopne
test
imul
cwtl
test
arpl
iret
and
js
ljmp
xchg
jmp
cli
add
xchg
loope
push
jge
rorl
out
add
jg
xchg
enter
push
and
fstps
test
imul
lds
or
pop
lret
enter
int
pushl
cld
loopne
call
sti
mov
push
cmpsl
jecxz
scas
push
add
repz
dec
stos
mov
xchg
jp
out
rol
xor
mov
call
mov
jp
add
add
xchg
mov
mov
dec
cwtl
aad
pop
lods
leave
stos
mov
jl
xchg
jg
or
lock
and
jecxz
and
lods
jmp
ja
add
adc
cmp
and
sbb
jbe
pop
insb
adc
shrl
cld
gs
mov
test
testl
push
add
jae
in
lcall
mov
push
out
jl
or
mov
xchg
test
sahf
cld
leave
sahf
mov
ret
and
and
adc
mov
mov
mov
mov
cld
loope
notl
jo
and
cmpb
push
fdivrs
int
push
dec
jne
out
out
sarl
std
and
imul
sub
sub
mov
mov
mov
xlat
add
out
aad
mov
push
mov
xor
inc
loopne
pop
ret
add
push
sbb
xchg
adc
push
jae
lret
add
std
push
fucomi
pop
movl
aad
sub
lret
mov
decb
adc
aam
mov
ret
cmc
pop
dec
push
movsb
int
mov
mov
fildl
adc
push
shll
fsubs
ss
add
inc
loopne
add
mov
xchg
mov
mov
sbb
sbb
add
inc
stos
pusha
std
adc
repnz
imulb
inc
sti
dec
popf
std
in
mov
popf
test
xchg
and
mov
in
xchg
mov
or
jno
or
ret
cmp
rolb
jmp
cwtl
mov
repnz
int
lock
jbe
pop
push
pop
pop
mov
sbbl
adc
adc
pushf
xchg
jmp
std
addr16
sbb
jns
push
in
fstl
shrl
bound
cld
jns
jecxz
or
stos
mov
fcmovnu
adc
imul
ret
out
cmc
xor
rcrb
shrl
mov
xchg
nop
inc
and
xor
leave
mov
jecxz
in
movsb
add
mov
in
xor
int
xor
out
mov
cli
lock
mov
lods
testl
or
or
test
xchg
pop
cmp
mov
jge
jecxz
push
xchg
arpl
xor
sysret
and
cmp
pop
xchg
out
mov
ficoms
mov
xchg
mov
adc
pop
and
pop
push
inc
lret
mov
cmp
adc
mov
and
ja
fiaddl
leave
xchg
mov
call
out
push
or
sub
sti
movups
dec
lods
cld
out
int
call
mov
in
test
inc
loopne
sub
jle
inc
lock
leave
test
in
rcll
or
clc
sti
push
mov
jl
stos
je
shlb
lahf
lods
test
xor
mov
insl
jle
fistpl
mov
out
jbe
loopne
pop
stc
or
cmp
push
mov
xchg
mov
lcall
cltd
mov
push
test
fisttpll
fstps
scas
or
add
push
aam
fidivrl
or
xchg
inc
inc
arpl
push
mov
cmp
mov
int
and
lret
andl
add
sub
loop
stc
int3
jl
pusha
mov
dec
bound
mov
and
mov
scas
loop
mov
out
sub
ljmp
orb
mov
jge
call
sbb
push
out
pop
int
push
stos
push
dec
and
xchg
cmpsl
test
leave
pushl
popa
mov
repz
fs
pusha
call
add
out
xchg
xchg
pushf
and
mov
xchg
mov
idiv
cwtl
mov
scas
sbbb
pop
outsl
sbb
pop
push
enter
rcll
pop
sub
sahf
mov
fisubrl
dec
incb
mov
xlat
int
leave
cmpsl
shlb
mov
popf
test
fwait
add
mov
and
add
add
mov
adc
lods
mov
push
mov
add
mov
lods
xlat
sti
data16
scas
mov
pop
ljmp
adc
cmp
test
push
mov
fadds
add
adc
dec
ljmp
cmp
jg
add
xchg
pop
inc
cmp
icebp
push
xchg
push
ds
adc
int
add
add
fisttpl
sar
inc
mov
mov
jmp
ljmp
adc
pushf
into
mov
fdivp
test
mov
imul
imul
jl
loopne
fstpt
mov
mov
test
ds
popf
scas
xchg
loope
adc
mov
or
mov
fadds
fidivl
mov
jno
arpl
ds
daa
inc
cld
xchg
fcoms
roll
dec
mov
xor
and
mov
mov
inc
mov
cmpsl
mov
adc
loopne
pop
lret
cwtl
jns
int
lds
pop
inc
out
pushf
decl
std
mov
rorb
fistl
push
fdivr
inc
cli
outsb
test
stc
cmpsl
jle
popf
out
test
cmc
jmp
lahf
push
call
iret
hlt
insb
popf
add
in
clc
cld
lods
in
sbb
jae
out
cwtl
shrb
xchg
or
cmp
or
lods
xor
enter
mov
sub
mov
add
js
sahf
enter
jno
xor
mov
inc
jb
jecxz
test
pop
jg
or
scas
aad
mov
or
push
pop
pop
fcomps
sbb
xchg
lock
cli
or
sahf
std
jle
pusha
push
or
sbb
rol
or
sub
repnz
mov
aam
cld
js
repnz
cmpsl
mov
pusha
int3
xchg
pop
sub
or
test
lods
cmp
mov
movl
sbb
mov
sub
test
xchg
cmp
and
int
dec
daa
cmc
adc
dec
imull
push
std
xchg
and
mov
and
in
pusha
mov
jecxz
lret
and
test
sbb
push
enter
out
out
jns
int3
jno
fsubrl
or
in
lret
xchg
loop
mov
add
ljmp
cmpsl
xor
cmc
push
mov
sbb
push
popa
cltd
pop
cmp
add
mov
cmpsl
mov
mov
mov
ljmp
test
mov
push
and
sbb
mov
mov
and
adc
mov
mov
add
pop
arpl
ret
cmp
push
adc
loope
insl
sub
orl
mov
xchg
divb
scas
icebp
or
xchg
pop
imul
shrb
ss
out
lcall
invd
fldenv
mov
or
lock
cmp
jbe
shr
stos
adc
push
aad
fdivl
iret
scas
fcompl
and
xor
xor
sub
add
sub
es
cmpsl
cli
stos
sbb
inc
cmpsl
ffree
push
or
jl
push
clc
mov
mov
ret
add
insl
pminub
ret
sbb
in
test
xchg
jmp
add
lods
and
aad
scas
scas
test
andl
in
sahf
fsubs
cmp
and
push
inc
mov
mov
lods
daa
and
out
sbb
jno
and
fstpl
pop
mov
iret
mov
push
or
scas
rcll
push
sbb
sahf
repnz
mov
cmp
fwait
leave
movsl
sub
ljmp
mov
xchg
xchg
xchg
dec
addl
cmpsb
test
aad
cmp
xchg
mov
pop
in
out
out
out
out
out
jbe
pushf
cld
mov
lock
push
pop
pop
std
out
notb
fisttps
dec
ds
cmp
rcl
test
out
or
ror
lods
fsubr
inc
cld
cmp
loopne
mov
mov
mov
repnz
in
fdivs
push
xor
insb
sahf
mov
out
xor
xchg
mov
jl
mov
pop
mov
xor
test
in
mov
push
test
stc
jmp
repnz
mov
shll
adc
jne
setae
mov
in
adc
sahf
je
pushf
out
int3
mov
push
or
out
fxch
ret
adc
xor
mov
cmp
mov
add
cwtl
hlt
int
repz
sbb
int
jmp
cmpsl
loope
sbb
aad
ror
stos
int
lret
stc
xchg
push
ret
pop
rol
mov
pushf
adc
cmpsb
fcomp
add
jmp
cwtl
mov
mov
sbb
pusha
mov
test
out
lcall
addr16
xor
sub
std
sbb
mov
push
mov
sti
test
in
shlb
out
xchg
xchg
xchg
push
addl
pop
inc
mov
or
fmuls
add
mov
out
stos
xor
add
pop
xchg
dec
xchg
ret
sbb
push
mov
pop
jno
jnp
push
xchg
or
pop
iret
insb
jmp
into
inc
mov
add
aam
mov
mov
mov
xor
call
push
in
aas
mov
xchg
test
and
pop
cmpl
add
test
mov
and
mov
movb
push
xchg
xchg
xchg
push
mov
push
mov
test
subb
test
mov
ja
jno
xlat
insb
sub
imul
mov
test
scas
push
test
adc
cmp
icebp
or
pop
sahf
add
cmp
addl
dec
mov
scas
test
aad
jbe
cwtl
fstps
fimull
cmpsl
or
xlat
fdivr
lods
scas
hlt
pop
jecxz
ljmp
or
out
pop
jmp
sbb
aad
fdivl
mov
rcll
rcrl
dec
jmp
and
pop
out
shl
pop
cmp
dec
sti
mov
sbb
cmpsl
rclb
and
mov
movsb
stc
sbb
cwtl
loopne
nop
cmpsb
push
pop
push
mov
xlat
adc
xchg
jle
jnp
jne
jbe
sbb
sti
jne
mov
popa
and
pop
jmp
pop
or
scas
pop
iret
jge
inc
xor
cmpsl
mov
xor
das
or
and
test
xchg
inc
popf
leave
or
in
cwtl
cmpl
and
aad
icebp
cmp
mov
ret
sub
jo
insb
enter
sbb
add
adc
xchg
aam
jge
std
xchg
mov
lods
add
arpl
shll
call
out
popf
push
or
mov
std
add
out
fmuls
out
cmp
scas
test
sarl
in
mov
xchg
pusha
mov
in
lods
in
jge
adc
xor
cli
add
lock
and
xor
sbb
mov
cli
fs
lds
xor
lods
inc
mov
push
shl
adc
inc
test
add
movsw
or
pushf
xchg
std
icebp
out
aad
pop
test
add
in
test
adc
cltd
std
mov
int3
pop
rclb
icebp
pushf
aad
inc
test
clc
pop
fidivrl
in
sarl
or
std
cld
insl
int
xlat
xchg
push
jp
int
jnp
repnz
ljmp
fucomp
aad
loope
or
cmp
test
divb
inc
hlt
mov
idivb
rol
mov
testb
data16
cli
repnz
stc
mov
xor
int3
or
fldt
shl
stc
and
cld
movl
bound
cmpsb
adc
jecxz
pop
mov
shrb
jecxz
mov
scas
stc
int
inc
call
pop
popf
add
adc
imul
xchg
xchg
lret
ret
in
mov
cmp
out
adc
mov
mov
mulb
test
movsb
shlb
mov
shlb
out
out
cld
test
fxch
dec
mov
add
sti
in
cmp
repz
add
gs
lcall
jmp
mov
sbb
in
test
add
push
push
sbb
and
mov
and
mov
incb
sahf
enter
mov
add
xchg
cmp
push
cmp
mov
aam
popl
or
cli
cld
sbb
jl
sbb
pop
fcom
pusha
or
pop
in
stos
sbb
jp
xor
dec
mov
int
sub
xor
dec
xchg
jae
cmpsl
cmc
fnstsw
ja
aad
pop
fcoms
adc
inc
adc
rcrl
pusha
rorl
jbe
mov
mov
loopne
or
stos
ljmp
call
mov
jecxz
mov
fnsave
std
sbbl
lods
add
mov
pop
out
outsb
jmp
aad
shr
pop
mov
cmp
cmp
xor
xor
mov
adc
adc
xlat
jl
sahf
test
enter
push
jge
hlt
or
icebp
push
pop
inc
fidivs
cmpsl
sub
mov
ljmp
stc
ja
rorl
out
mov
sbbl
ret
std
and
test
push
ror
popa
dec
mov
or
lcall
pushf
adc
or
xchg
add
out
in
jecxz
int
fildll
mov
shl
xchg
mov
scas
int
stos
test
dec
and
imul
push
mov
faddl
or
adc
mov
add
jl
mov
test
mov
loope
push
hlt
push
adc
or
cwtl
or
lock
mov
dec
and
cmpsl
mov
test
or
push
add
rcll
lret
sbb
int
and
rcr
lret
xchg
jp
pop
aad
xor
mov
or
int
ret
les
lcall
and
leave
push
scas
sbb
push
iret
adc
iret
shrb
jle
sub
xor
sbb
out
sbb
aad
lods
les
xchg
mov
mov
pop
pop
push
xor
push
iret
lods
pop
jno
test
pop
and
and
sbb
push
mov
cld
adc
rcll
xchg
xchg
rorb
add
test
fnsave
lods
jl
popf
add
inc
add
pushf
fxch
xorl
arpl
push
cmp
aas
xor
jmp
popa
jmp
jns
call
jecxz
int
popf
imull
mov
fcomps
scas
repz
adc
fistl
inc
adc
or
je
std
dec
pop
popa
negb
and
mov
cwtl
push
loopne
push
jl
mov
push
jecxz
push
mov
and
std
mov
aam
and
push
stc
jmp
adc
call
add
sti
jecxz
notl
pop
repz
out
pop
cmpl
cmpsl
scas
pop
test
add
push
mov
ljmp
cmpsl
push
push
jno
sub
dec
jge
mov
add
fdiv
sti
mov
in
jle
jmp
push
xlat
loope
aad
jecxz
rcl
movsb
xchg
xchg
lret
sbbl
lret
rcr
out
out
je
sbb
mov
scas
add
hlt
jle
nop
mov
xor
cld
out
xor
out
pop
xchg
jecxz
push
sub
lds
and
shll
xor
jno
scas
cmp
fcmovnbe
adc
cld
adc
ljmp
xchg
cld
imulb
rcll
xchg
mov
mov
jmp
or
or
cmp
bound
pop
popf
sbb
adc
mov
push
pop
cwtl
loop
add
xor
mov
cwtl
xchg
pusha
ljmp
xchg
fisttpl
clc
test
mov
push
rorb
test
lods
and
or
push
mov
mov
bound
stc
inc
sahf
lret
cmc
ds
xor
in
add
fdiv
stc
popf
mov
repz
movb
mov
pop
fcom
jmp
pop
mov
imul
leave
add
xlat
inc
call
iret
stc
stc
jle
mov
loop
sub
or
mov
cwtl
mov
pop
mov
cmpl
scas
pushf
test
out
out
jne
adc
mov
mov
and
lret
sbb
stc
movsl
lcall
enter
jle
inc
enter
cmp
sbb
sahf
not
mov
ja
lock
fiaddl
lcall
jl
and
push
ja
or
adc
call
xchg
xchg
jge
fdivl
pop
sub
sbb
mov
or
mov
add
push
rcrl
add
mov
test
mov
xchg
mov
adc
out
jl
aad
mov
cmp
aam
leave
not
and
popf
fwait
or
shrb
mov
int
mov
divb
mov
fmul
jmp
xchg
stos
mov
aad
cmpsl
xlat
sti
cwtl
and
sbb
push
inc
sbb
in
cmp
adc
mov
in
cwtl
lahf
pop
mov
lock
push
and
cmpsl
add
mov
scas
clc
or
mov
fistps
cwtl
popf
loope
xor
repz
daa
aad
or
int
push
popa
fstpl
xchg
stos
cmpl
out
xchg
xchg
xor
das
mov
imulb
jl
xchg
icebp
jmp
out
out
movl
int
and
in
inc
adc
in
sub
adc
jl
pushf
or
in
movsl
int
cld
pop
pop
lock
push
push
and
dec
hlt
dec
inc
jmp
sub
pop
or
pop
adc
jb
jmp
mov
rcr
lods
ret
inc
fstps
cmpsl
and
jae
pop
shlb
pop
xchg
mov
fcmovnu
in
repz
push
dec
pop
inc
stos
popf
lea
jle
adc
out
int3
cmp
or
mov
xor
daa
stos
stos
cwtl
out
shr
mov
and
mov
jns
fs
out
popf
addl
pop
sbb
cmpsb
jmp
xor
shll
adc
jmp
xchg
in
xchg
jmp
jmp
jecxz
adc
fbstp
cld
or
mov
mov
sbb
in
sar
cmpsl
pusha
mulb
fsubs
stos
or
in
xor
std
int
stc
adc
add
sub
fsubs
or
rcr
and
sub
les
les
aam
pushf
pop
sbb
mov
adc
cmc
jbe
popf
cld
push
popf
test
cli
jmp
ljmp
xor
mov
sbb
scas
out
add
jnp
in
sbb
mov
cmpsb
sbb
jge
test
imul
lds
test
jge
mov
shr
test
ficoms
cmpsb
stos
sbb
in
hlt
sub
pushf
jp
testl
sub
test
rcll
dec
xor
mov
rcrl
in
aad
jl
jmp
iret
into
neg
lcall
dec
into
popa
mov
inc
int3
loop
fucom
mov
or
movsl
xchg
mov
insb
repz
lods
cmp
push
sbb
leave
add
int
push
add
jmp
add
cmpsl
test
and
hlt
inc
lods
or
stc
mov
insl
pop
ljmp
xor
mov
adc
test
stc
sar
pop
popf
cmpsl
dec
xchg
cmpsl
scas
xchg
push
lods
fsubr
cmp
das
popa
adc
sbb
cmp
pusha
out
adc
mov
aad
cmp
pop
sub
fcomps
into
aad
shrl
sbb
sbb
shlb
ret
mov
fdiv
setle
xor
lods
jp
loope
mov
xchg
or
push
std
faddl
xlat
jge
out
pop
rcrl
jno
and
fidivrl
mov
push
rcrb
aad
sbb
xchg
in
mov
adc
push
cmpsl
or
ficoml
cmp
into
add
xor
adc
ja
loopne
mov
mov
jne
jecxz
sub
adc
test
fstps
mov
or
jno
fidivl
and
sbb
pop
jmp
jecxz
mov
stos
les
sbb
nop
cmp
sahf
inc
jge
jno
out
adc
cmpsl
push
cmpsl
lret
icebp
mov
jmp
mull
xchg
jmp
gs
pop
pop
enter
xlat
or
leave
aad
testl
shll
sbb
ja
fiadds
pop
or
cmc
aam
test
in
add
push
sbb
std
fldcw
jns
jnp
pop
movsb
jp
pop
sti
adc
lea
in
jmp
add
mov
fdivp
pop
jno
icebp
or
jecxz
jmp
std
sarl
pop
lds
enter
icebp
adc
xchg
mov
adc
jle
dec
sahf
mov
mov
jecxz
sahf
or
and
in
sub
jmp
jae
cmp
mov
cwtl
and
fstl
ds
pop
cltd
adc
and
dec
add
in
fnsave
sahf
into
mov
mov
and
rcr
in
aam
xchg
xchg
fcmovne
int
std
and
sbb
lods
push
je
loopne
arpl
lret
cld
cmp
and
cmpsb
negl
mov
test
pop
or
xchg
iret
stc
mul
inc
hlt
mov
cmpl
loopne
testb
and
test
mov
dec
arpl
test
mov
pushf
test
adc
push
std
test
add
xchg
popa
repz
dec
out
out
je
lods
mov
pop
pop
add
mov
roll
iret
xor
mov
lds
cmp
fistpll
rcl
testb
jle
shll
cmpsl
push
pop
jecxz
mov
lods
cmpsl
xchg
dec
bound
jge
outsb
push
imul
dec
idiv
adc
rcll
sbb
mov
or
insl
sbb
sbb
popf
aaa
mov
or
adc
cli
cmp
ret
fdiv
fistpl
mov
mov
or
adc
stos
or
add
rorb
mov
and
outsl
add
rorl
in
int
adc
in
push
fsubrs
mov
movsb
out
loopne
popf
lcall
lret
xchg
pminsw
push
loopne
pop
std
sub
int
dec
sbb
insb
xor
stc
adc
clc
hlt
ja
or
stc
repnz
ja
adc
cmp
lret
inc
int3
mov
adc
jle
loopne
jge
and
outsb
movsb
popf
rcr
sbb
shl
xchg
xor
or
adc
mov
mov
pop
mov
push
out
movb
insl
fsubr
jge
loop
mov
movsb
jcxz
cwtl
scas
movb
scas
loope
mov
add
jle
inc
scas
push
test
mov
mov
mov
jno
xorb
icebp
hlt
jl
sub
fiadds
or
cltd
mov
fsubr
stc
mov
in
mov
imulb
mov
xchg
js
insb
xor
fcoms
mov
xchg
arpl
inc
test
jmp
xchg
xor
sbb
adc
pop
enter
xchg
pop
fcoms
mov
pop
xor
repz
incb
cmp
inc
fstl
jmp
xor
jl
adc
mov
int3
add
add
sti
sbb
daa
stos
mov
mov
xlat
fcmovu
clc
mov
cld
ja
shr
cmp
frstor
into
cmpsl
or
lods
int
jns
pop
lcall
scas
std
test
stos
lods
mov
leave
ja
jmp
icebp
insl
jecxz
or
pop
loopne
pop
add
out
mov
jmp
mov
pop
xlat
leave
aad
push
add
adc
scas
in
aam
jle
aad
push
ficompl
fwait
jl
add
rorb
int
sbb
jle
pop
popf
int
jle,pn
shl
imul
or
inc
adc
mov
jb
idiv
rolb
data16
cld
cmp
and
xorl
mov
cmc
testl
add
incl
sti
repz
repz
in
mov
cli
in
shl
gs
or
cmp
mov
push
dec
iret
mov
repz
xor
mov
mov
xor
add
push
icebp
push
cwtl
jbe
ret
pop
push
int
std
cmp
or
das
add
and
or
je
lcall
scas
scas
xchg
push
mov
out
ja
fmuls
in
adcb
pushf
adc
jp
inc
out
push
shlb
test
sub
adc
sbb
loope
cmp
cli
sahf
fldenv
jecxz
enter
cmpsl
mov
test
adc
xchg
out
sbbl
rcll
movl
lret
or
ret
leave
sbb
or
popf
mov
mov
arpl
aam
add
fists
lcall
sti
jns
or
scas
push
cmpl
loopne
push
out
cwtl
dec
mov
and
and
jecxz
into
pushf
sbb
roll
sbb
add
pop
and
test
fmul
push
and
jecxz
mov
call
lods
add
add
sbb
pop
std
sbb
pop
mov
rorl
rcrl
rcl
xchg
mov
mov
xchg
in
lods
adc
cli
xchg
push
mov
out
pop
loopne
dec
div
idivl
push
pop
jmp
xchg
int3
in
add
std
push
push
xorl
pop
scas
add
pop
lds
js
lret
stc
cmc
jmp
and
push
push
ficompl
test
xchg
push
xor
adc
fs
or
jl
pushf
add
inc
pop
les
xor
mov
jmp
in
sti
pop
pop
xor
test
or
loop
add
and
mov
int
ds
fsubrl
adc
xor
sbb
add
lods
fsub
pop
jno
mov
add
in
mov
fcomip
xchg
mov
inc
or
jno
mov
fsub
aaa
pushf
sbb
fmuls
jmp
cmpsl
xor
mov
repz
mov
lock
xor
decl
sub
std
add
and
push
sbb
jmp
jl
pusha
testb
out
sbb
fcmovnb
adc
ljmp
out
scas
or
popf
jge
and
add
jle
ljmp
mov
and
rorb
jl
pusha
mov
clc
and
test
test
or
ds
sbb
int
repnz
ficompl
pop
jl
loopne
mov
mov
mov
mov
js
or
jb
aad
cmpsl
nop
cld
mov
repz
shlb
movsl
or
push
arpl
mov
or
pushf
dec
lret
shlb
sbb
adc
or
or
mov
pop
pop
jle
mov
maskmovq
imull
clc
pop
fucomip
mov
or
and
xchg
cmpsl
or
jae
sbb
int
loope
cmpsl
mov
aad
cmp
fld1
or
scas
jl
pusha
les
lods
mov
sahf
mov
adc
pop
pushf
cs
repz
psubsb
or
fldl
jecxz
loopne
inc
daa
mov
scas
popf
aad
popf
lods
std
and
mov
fiaddl
push
adc
cld
std
lock
in
sbb
sbb
dec
subl
or
pop
inc
mov
xchg
add
sbb
or
and
pop
sahf
and
or
mov
jl
and
in
jge
lret
add
lods
cwtl
push
aad
push
xchg
mov
ljmp
hlt
jno
lds
stos
cmpsl
lods
in
push
cmpsl
lods
fstps
push
inc
and
and
or
push
xchg
inc
xor
sbb
mov
mov
or
outsb
arpl
sub
out
lods
sub
roll
out
sbb
jge
mov
push
js
sahf
sbb
out
in
fimuls
xor
fdivr
lds
call
mov
xchg
or
sbb
mov
push
pop
leave
add
aam
mov
inc
lret
sub
inc
arpl
je
mov
mov
xchg
sub
insb
test
pop
jg
or
push
jl
negb
add
and
add
push
pop
es
and
sbb
or
sahf
test
or
cmp
int
call
mov
push
cmp
fmull
mov
shr
cld
mov
adc
mov
lds
and
out
iret
out
pop
fmull
pop
cmpsl
adc
or
fmulp
loope
push
loopne
lret
mov
mov
shl
aas
ljmp
cli
mov
xlat
nop
rcrl
outsl
aad
jle
xchg
fucomi
mov
jne
call
repz
adc
out
pop
jno
adc
pop
pop
rcl
ret
sub
cld
jnp
lret
fstpl
in
jbe
add
in
mov
xchg
fbld
daa
inc
lret
insb
test
or
push
pop
idiv
mov
fsubs
pop
xchg
push
sbb
mov
jl
scas
sbb
jnp
xchg
rep
cli
nopl
push
fcmovbe
out
jbe
mov
insl
add
add
and
mov
popf
aad
cli
push
or
pop
jnp
and
jg
mov
inc
cmp
sub
adc
sbb
gs
cmpsl
test
inc
ljmp
pop
adc
call
mov
addl
jnp
shrl
movsb
pushf
int3
into
lods
or
push
adc
sub
adc
sub
in
xchg
std
repz
xlat
lods
jge
orb
pop
leave
rclb
stos
xlat
adc
mov
stos
and
pop
out
adc
fsubs
rcrl
adc
out
cld
sub
cmc
adc
add
pop
mov
pop
hlt
mov
push
xchg
test
lods
push
pop
pop
mov
test
incb
lea
add
js
scas
arpl
in
sbb
or
push
rcl
xchg
ret
or
xchg
mov
rcrl
out
loopne
std
mov
fists
mov
fdivrs
sbb
push
out
inc
cld
mov
sbb
mov
addb
stc
fdiv
in
xlat
out
hlt
enter
or
test
inc
and
lds
sbb
mov
or
jmp
mov
sti
int
mov
xchg
cmp
dec
and
jmp
xchg
xchg
rcrl
push
mov
push
or
adc
mov
jmp
f2xm1
out
jg
hlt
xchg
leave
xor
mov
and
and
stc
cmp
in
stc
out
jle
int
test
or
call
jecxz
loopne
cmpsl
lds
cli
mov
adc
adc
loop
jmp
adc
ljmp
cmp
jo
popa
or
out
popf
loope
std
adc
repz
mov
xchg
arpl
lods
and
hlt
or
mov
sahf
cmp
jmp
mov
stos
cmpsb
adc
adc
push
shrb
jg
fcmovnb
loopne
sbb
or
hlt
idivl
jecxz
add
repz
cmpsl
ficompl
loop
and
call
out
jmp
inc
or
ret
xchg
sbb
inc
icebp
loopne
repz
fbld
roll
and
or
push
push
icebp
pop
out
cmpsl
shr
lods
jne
in
bts
xlat
adc
push
sbb
leave
sar
mov
sti
pop
fnstenv
lds
push
outsb
jecxz
ret
add
lods
xchg
or
jecxz
or
iret
sti
lods
icebp
push
mov
leave
jnp
movsl
mov
sbb
out
mov
rcll
std
cmpsl
pop
lret
pop
sbb
int3
jl
inc
les
iret
and
mov
por
dec
cmc
and
mov
sbb
push
ret
mov
adc
or
loop
push
aad
add
loope
sti
loopne
divl
fdiv
or
mov
inc
lret
cmp
fmul
mov
pop
leave
cmp
mov
mov
dec
sbb
test
cmp
std
xchg
adc
mov
push
std
or
add
stc
scas
cmc
aam
push
out
and
test
jecxz
loope
movsl
neg
sub
in
sbb
clc
pop
in
jmp
fldl2e
scas
jge
scas
push
sbb
sbb
pop
fcomp
mov
dec
popf
shlb
and
lds
rcrl
in
jecxz
loope
mov
nop
mov
insl
idivb
stos
or
nop
ficompl
stc
pop
mov
fstpt
cwtl
xchg
call
adc
std
pushf
std
sbb
pop
test
in
rcrl
jle
aad
loop
and
rcrl
cld
aad
shlb
pop
jno
insl
repnz
fstpl
jge
xor
xchg
add
sbb
mov
cltd
jle
pushf
int3
outsb
sti
sbb
push
outsl
fucom
mov
and
shll
rcl
xchg
out
repz
or
sbb
stc
jmp
lret
push
fnsave
test
jno
xchg
lret
shrl
or
je
fimull
push
add
lods
push
mov
les
adc
int
call
mov
or
jns
mov
sbb
mov
addb
dec
call
push
test
sbb
fadds
aam
jg
std
popa
adc
mov
xchg
lds
cld
leave
pop
xchg
pop
mov
or
mov
adc
dec
cmp
fnsetpm(287
shlb
into
popf
test
stos
in
cwtl
aas
aad
sbb
jecxz
imull
test
sub
and
jg
inc
or
mov
fstl
push
lods
mov
cmp
mov
jnp
push
or
mov
push
mov
int
push
shl
xchg
sbb
in
sbb
add
add
mov
ds
rep
push
mov
popf
loope
test
cmpl
add
lods
mov
inc
sahf
call
lods
dec
shr
test
fnsave
lahf
push
fstps
or
mov
push
lahf
dec
sti
pop
outsb
and
sbb
pop
dec
pop
adc
push
push
add
pop
int
and
scas
mov
rorb
rorb
les
lahf
push
in
sbb
fistpll
ficompl
aad
push
pushf
add
mov
add
and
mov
in
and
pop
insl
int
in
xchg
mov
mov
out
out
jbe
add
xchg
fxam
rorl
jbe
sbb
loopne
or
enter
xlat
or
aad
add
sti
adc
loop
movsl
insl
bound
xor
cmp
movsb
mov
or
pop
vaddsd
loope
or
mov
mov
aad
xchg
sbb
push
fldenv
bound
outsb
pushf
adc
mov
in
xchg
or
sbb
rcrb
fmul
pushf
lock
test
lea
in
rclb
dec
adc
cmp
sbb
push
mov
mov
adc
sub
add
push
xchg
inc
enter
sar
xchg
mov
jp
filds
imul
push
dec
adc
cld
inc
fcmovnbe
fisttpll
popa
adc
int
popa
push
push
jo
movsl
mov
or
pop
mov
push
into
stc
test
das
in
into
xchg
in
jne
add
movsl
and
or
or
rorl
push
push
mov
xchg
popf
lea
aam
rorb
mov
inc
mov
out
adc
mov
mov
std
stc
in
test
mov
add
add
xchg
lds
push
lds
push
repnz
lds
or
seta
xchg
or
pop
pop
jge
push
mov
aad
add
clc
mov
inc
sbb
cld
xchg
push
pop
adc
pop
iret
sti
add
and
addb
stc
adc
mov
loope
adc
mov
adc
popf
aam
lods
xchg
pop
xor
fnsave
sub
lods
pop
mov
xchg
push
jmp
and
sbb
add
jne
or
rcl
mov
xor
and
add
fisttpll
and
cmp
mov
and
add
pop
fisttpl
adc
sbb
fnsave
push
popf
mov
addl
add
in
push
and
mov
cmc
push
in
inc
scas
xlat
in
iret
movsb
pushf
ljmp
int3
loope
fst
lcall
dec
test
dec
stos
push
ficomps
cmpsb
popf
xchg
or
sbb
mov
pushl
inc
std
dec
icebp
and
nop
mov
add
add
or
frstor
adc
cltd
mov
xchg
stos
lcall
jmp
add
loop
mov
repz
cmc
sbb
rclb
pop
cmp
subl
dec
inc
mov
loopne
loopne
jecxz
sahf
es
loopne
jae
xchg
mov
cmp
addb
call
jmp
adc
add
adc
pop
jmp
sbb
mov
popf
mov
sbb
mov
mov
popl
sbb
mov
mov
cmp
sbb
aad
adc
je
fsubs
andb
xchg
add
popf
jl
jle
adc
push
adc
add
sbb
cmp
mov
fst
adc
rorb
std
repz
jb
scas
or
mov
stc
add
sahf
and
cmpsl
mov
adc
add
push
mov
add
xchg
test
in
test
aam
outsb
ret
add
iret
mov
sbb
fldcw
pop
push
push
mov
mov
test
xor
sbb
cwtl
out
popa
dec
test
add
ret
mov
mov
cwtl
or
sar
cmpsb
add
cwtl
or
pop
cli
push
or
and
xchg
jae
icebp
pop
lods
inc
fdivs
push
dec
rcll
mov
test
arpl
popf
adc
pop
and
je
fsubs
int3
and
mov
dec
fdivrs
jg
add
inc
dec
andl
sbb
push
fucom
fisubl
out
lods
or
cmpsb
or
adc
inc
xchg
or
cwtl
push
mov
push
or
or
je
pusha
and
je
inc
out
fs
and
sti
mov
aas
filds
repz
ss
inc
fmul
jo
xlat
xchg
xor
das
jmp
aad
cld
shrl
jge
sbb
rcrl
or
push
lock
mov
xchg
movsl
imul
out
roll
fdivrs
mov
xchg
dec
std
cli
imul
fsubs
mov
jecxz
cld
and
push
add
vphsubdq
lds
fmuls
test
add
lods
jle
sbb
xchg
or
xchg
mov
mov
ljmp
mov
sbb
fcmovu
or
or
std
jecxz
in
push
testl
sbb
leave
fadds
clc
aad
popf
lods
add
shrl
out
and
xchg
cwtl
jg
imul
das
dec
stos
stc
rcll
fildll
push
xlat
xchg
or
hlt
pusha
outsl
in
lea
xlat
in
dec
lds
inc
xchg
xchg
lods
adc
arpl
mul
cwtl
fwait
mov
psubd
pop
dec
lods
lds
mov
add
int
add
call
hlt
loope
fwait
dec
push
adc
pop
push
jne
pop
xlat
xchg
stc
mov
stos
push
fwait
push
jmp
push
mov
in
rcrl
pop
push
adc
xchg
pop
and
add
adc
sbb
xchg
sub
or
mov
aad
repz
mov
mov
jmp
add
jl
loopne
lret
mov
rorb
rcr
into
sbb
shl
mov
in
adc
cmp
in
rcrl
xchg
in
out
cmc
cmc
or
add
lret
sarl
adc
loope
xlat
fcmovnbe
adc
and
test
int
mov
out
out
sbb
mov
add
cmpl
cmp
aad
add
mov
inc
fadd
in
lods
mov
into
jbe
ret
mov
adc
scas
mov
mov
out
popf
in
stos
sti
or
pusha
and
pop
push
jb
stc
sbb
pop
xor
xor
xchg
test
or
push
sti
sbb
mov
bound
inc
fcoms
jbe
xor
fldl
mov
sub
adc
or
fst
adc
and
das
jae
rcrb
fbld
or
loopne
xorb
in
cmpsl
sbb
out
loopne
push
push
mov
add
shll
sbb
inc
jecxz
fisttpl
in
pop
fsubrl
mov
mov
ds
mov
xchg
mov
daa
lock
fstp
fwait
aad
pop
jle
adc
int
xchg
lret
lds
mov
int3
cld
movsl
push
inc
push
test
or
lea
inc
pop
cli
int
in
cmpsl
pop
mov
pop
adc
scas
xchg
sub
jl
cld
stos
lods
testl
lcall
push
or
mov
cmp
scas
mov
xor
ficoms
mov
pushf
rol
mov
test
push
bsr
bsr
push
bsr
shld
btc
push
rcl
mov
dec
cmp
mov
neg
mov
and
inc
call
add
insl
gs
jae
je
push
pusha
pusha
movb
lea
call
call
pop
das
or
jnp
ljmp
inc
test
cmpb
int3
mov
fisubl
dec
mov
orb
insl
jmp
mov
sbb
imul
cmp
dec
imul
mov
sbb
rcr
xchg
push
jno
lret
jmp
psubq
inc
in
push
rorb
xor
cmp
sbb
ret
add
pushf
push
mov
stc
jmp
movw
lea
call
push
jmp
jmp
call
sub
rclb
jmp
inc
movsl
jne
jns
jne
dec
pop
loope
test
loopne
insb
dec
sub
mov
ljmp
call
push
pop
sub
xchg
mov
enter
loope
pop
push
cltd
mov
pusha
icebp
push
mov
repz
and
or
clc
push
fldl
daa
sti
and
add
mov
mov
ret
xor
in
xor
outsl
cwtl
xchg
pop
test
mov
test
orb
adcb
add
or
loopne
inc
and
in
xlat
push
lea
jne
pushf
stos
pushf
push
pusha
push
lea
jmp
pushf
cmp
pusha
lea
jae
push
add
pusha
mov
push
pushf
push
lea
jmp
cli
mov
pop
jmp
push
outsb
jbe
jle
xor
and
cmp
jb
add
lret
xor
mov
or
and
mov
or
adc
xor
adc
cmp
divl
imul
jbe
js
lret
clc
insl
sbb
mov
dec
and
arpl
rclb
xor
ffreep
shlb
mov
js
or
or
lods
push
cwtl
jl
iret
xlat
inc
int3
dec
push
mov
xchg
mov
jmp
sub
sbb
out
cmp
mov
push
pop
cwtl
lock
xor
cmc
or
paddusw
stc
dec
mov
ret
add
pavgb
push
add
push
cmc
push
cmp
pushl
pusha
jmp
clc
call
jmp
add
add
pusha
jmp
cmp
cmp
jmp
add
push
gs
imul
popa
addr16
jb
jo
dec
jg
imul
push
es
bound
in
mov
movsb
pop
cmpl
pop
scas
pop
adc
lds
ja
dec
fs
gs
xchg
pop
out
xor
fsubrs
cmc
xor
fidivrl
pusha
jno
push
inc
mov
jne
mov
imul
mov
adc
sbb
dec
test
jnp
ja
outsl
movsl
jae
ret
add
pop
into
cmp
mov
pushl
pushf
lea
je
test
bsf
btc
jmp
xchg
mov
and
ret
pusha
push
mov
gs
sbb
jmp
ja
mov
and
xor
aas
in
hlt
and
and
int3
mov
cwtl
gs
sbb
iret
out
insb
out
int
das
shlb
in
repz
pop
in
xchg
mov
or
add
push
sahf
pop
xchg
add
sbb
fwait
cltd
jns
clc
adc
hlt
add
xchg
xchg
adc
adc
add
nop
push
imul
add
adc
in
dec
push
pusha
lahf
dec
repz
notl
sti
movnti
stc
xor
aas
hlt
jg
movsl
push
mov
jl
and
pop
jecxz
ss
es
sbb
dec
sahf
sub
test
mov
cld
aam
movsl
dec
xchg
pop
das
aad
fidivl
ret
mov
push
push
jns
or
or
sbb
xchg
ret
add
adc
repz
adc
xor
std
add
loope
int
aad
out
xchg
jp
sbb
or
pop
jae
cmpb
outsl
popf
imul
xchg
fs
pop
icebp
or
int
or
xor
push
mov
fstl
adcb
jo
jp
fwait
lods
test
mov
gs
push
mov
adc
fstpl
scas
xor
add
or
pop
jmp
ret
add
inc
lea
sbbl
xor
cs
insb
add
lret
cmp
xor
test
ds
sub
les
dec
andb
pop
fnstcw
pop
lods
cmp
add
shlb
fidivl
inc
pop
and
sbbb
jbe
mov
pop
sbb
mov
ret
adc
leave
jle
enter
test
lea
jbe
outsb
lcall
jb
dec
mov
add
add
and
or
and
add
fwait
push
movsl
cmp
or
mov
fisubrl
xchg
jno
inc
lods
dec
xchg
cmp
imul
add
ror
and
dec
sbb
inc
in
ss
mov
outsl
xchg
mov
sbbb
mov
push
fmuls
ret
add
mov
push
cmc
jmp
add
pushf
clc
pusha
cmp
mov
push
clc
stc
cmp
test
pushl
movb
jmp
add
cmc
mov
lea
js
pusha
ror
bt
stc
sub
jl
push
neg
pushl
lea
jne
call
jmp
mov
movl
jmp
ja
pusha
push
jmp
lea
jae
pusha
push
cmp
jmp
lea
je
push
push
adc
pusha
pushf
mov
lea
jmp
cmp
notl
aad
loope
lahf
xchg
pop
cmpsb
xchg
push
xchg
pop
mov
ja
jmp
mov
cmc
mov
in
push
pop
stos
pop
loopne
push
cmpl
cmp
jmp
mov
mov
stc
ffreep
ficomps
daa
sub
outsl
aas
std
inc
adc
popf
pop
mov
jb
pop
loope
clc
sbb
dec
repz
test
sti
inc
mov
jge
pop
xlat
cmpsl
jno
ret
add
adc
xor
pushf
inc
stos
adc
push
sub
aam
les
fcoms
clc
xor
cmp
rcll
insb
decl
testb
pop
fs
stos
stos
mov
insl
xchg
inc
movsl
pop
lea
pop
fisttps
iret
lret
push
add
push
sbb
fidivl
push
jno
fs
sbb
push
enter
les
fists
out
xchg
mov
and
jle
mov
pop
mov
ljmp
nop
mov
xor
lock
roll
dec
pop
sbb
sbb
dec
sub
xor
add
mov
lds
or
and
and
cmp
mov
jne
imul
adc
or
push
bound
cmp
jecxz
push
test
fmuls
mov
jmp
mov
push
into
mov
push
stos
push
xchg
jbe
jbe
bound
aaa
xchg
lods
sarb
scas
testb
test
test
inc
sbb
subb
fs
sbb
test
shl
push
out
cli
out
idiv
and
push
repz
and
fldcw
imul
ret
add
aaa
shr
sbb
add
enter
add
add
jo
sub
add
add
int
sub
add
add
adc
sbb
add
add
sbb
add
add
add
add
add
sbb
add
add
outsb
and
add
add
add
mov
add
pushf
cmp
add
push
mov
add
cmpsl
sbb
ret
icebp
sub
inc
inc
sub
leave
cmp
sbb
add
add
add
lea
ja
stc
imul
test
cmp
test
add
pushf
lea
jmp
lea
call
movw
pushf
pushf
movl
movb
pushf
pushf
lea
jmp
jno
orl
out
jle
cmp
lds
cmc
add
and
add
jmp
dec
mov
test
adc
cmpsl
xchg
mov
jge
dec
outsb
sbbb
and
dec
adc
dec
pop
mov
sti
gs
xor
adc
cmp
aaa
jg
vpcmpgtd
fcompl
xor
sub
and
or
ret
add
mov
shlb
and
mov
mull
mov
pushf
pushf
and
pushf
pushf
stc
call
lea
ja
mov
pusha
inc
pushf
pusha
movb
call
clc
sub
push
jmp
push
outsb
shlb
rcl
push
stos
xchg
int3
jl
dec
cwtl
js
jl
je
dec
cli
xor
xchg
orb
test
call
fwait
mov
jg
push
mov
mov
ljmp
jae
lods
xchg
mov
stc
mov
shll
pop
dec
lods
mov
inc
sahf
sbb
adc
xor
cmp
push
pop
xchg
nop
cs
psubsb
sahf
jbe
or
leave
ja
aaa
sbb
fld
push
pop
mov
and
mov
ja
shrb
outsb
test
mov
loopne
hlt
or
cmpsb
rorl
xchg
scas
cmpsb
jg
inc
inc
insb
bound
in
add
add
orl
mov
ljmp
cmc
and
sub
sub
push
hlt
pushf
cmp
lock
loopne
aam
enter
rclb
fisttps
aam
enter
loopne
loopne
pop
cli
or
cltd
mov
mov
dec
dec
mov
or
cmp
ret
add
push
sahf
jno
ja
mov
idivl
sbb
and
test
cli
or
inc
insb
push
xchg
jp
push
andl
scas
in
cmp
fs
ret
int3
shrb
mov
pop
mov
sbbb
adc
sub
scas
stos
aas
adc
out
xor
jnp
ja
inc
ret
add
ss
ja
xorl
and
daa
repz
stos
addr16
push
mov
mov
cmp
mov
mov
cs
in
in
arpl
cmp
inc
call
push
sahf
mov
mov
out
mov
add
cmp
xchg
jo
aad
icebp
scas
jno
cmpb
in
rorb
push
loopne
lock
add
addl
stos
data16
into
es
cs
loop
fldt
sub
xor
and
and
test
je
inc
fadds
mov
jl
lret
sub
mov
sub
pop
mov
ljmp
jb
loopne
ss
sbb
mov
and
cmp
or
xor
ret
add
aaa
xor
inc
jns
decl
adc
pop
xchg
repz
repz
aad
mov
stos
xchg
mov
int
loope
lds
cmc
and
or
cmp
scas
cli
pause
mov
insb
clc
ja
hlt
add
adc
xor
int3
vcomiss
negl
rorl
sub
ljmp
or
dec
pop
ficoms
jo
jecxz
cli
out
cmp
mov
js
scas
xor
test
dec
movsl
arpl
add
scas
addr16
pusha
mov
pushl
jmp
adc
ret
fistl
inc
cwtl
inc
movsb
fcomps
pop
mov
mov
icebp
or
push
cmp
cltd
dec
pop
mov
aad
sbbl
jo
push
sahf
push
add
push
xor
inc
mov
mov
out
dec
jne
jne
push
mov
mov
mov
add
xor
push
dec
or
adc
xor
dec
mov
aad
lds
std
inc
xchg
inc
xchg
stc
daa
dec
lret
jge
mov
divl
mov
shrb
fdivl
scas
nop
sub
leave
lds
int3
shlb
in
mov
push
dec
jno
adc
iret
jnp
xchg
jae
gs
outsb
stos
cltd
add
pop
scas
lock
lds
clc
xor
cmp
sbb
in
sub
push
aad
fistl
scas
jno
or
jge
ret
add
inc
subl
add
or
lock
fsubp
mov
cmp
sub
and
sub
add
sti
xor
jl
in
out
xor
sub
inc
fucom
pop
mov
ror
int
fildll
xor
les
add
adc
cmp
and
inc
pushf
cwtl
dec
jmp
pop
test
inc
popf
dec
lods
pop
cmpl
add
add
add
cwtl
cmpsb
bound
sub
push
stc
xor
sub
jecxz
sub
outsl
je
ja
inc
loope
inc
mov
cltd
outsl
orl
cs
addr16
rcrl
imul
dec
sub
lock
adc
rcrl
in
icebp
or
mov
mov
divl
add
xor
fs
or
push
sbb
aas
jmp
cmp
xor
xor
ss
sbb
ljmp
mov
xchg
mov
jl
jl
jo
fs
mov
xchg
mov
in
loopne
or
mov
je
push
scas
dec
push
or
mov
add
fisubrl
dec
insl
push
cmpsb
inc
adc
mov
shl
pop
xchg
pop
lods
inc
jl
test
mul
or
mov
gs
mov
int3
das
add
xchg
sub
cli
sbb
mov
mov
lock
pop
cld
inc
push
and
out
push
add
addr16
mov
test
add
int3
add
ss
int
pop
addr16
mov
sbb
cmp
adc
psubsw
push
hlt
mov
daa
repz
mov
gs
inc
push
outsl
xor
pop
aas
xchg
xor
hlt
fcmovnb
push
push
mov
ljmp
xchg
test
pop
ud0
lock
push
aam
and
sbb
aam
test
mov
xchg
aaa
loope
out
jbe
insb
xchg
push
mov
int3
push
hlt
fsubs
fmull
enter
shlb
lea
mov
std
aad
loope
lds
xchg
sub
sub
out
push
je
dec
cmc
add
nop
and
js
rsm
mov
jb
in
iret
mov
jl
test
adc
add
idiv
and
mov
pop
cld
xor
mov
mov
fxch
add
xchg
inc
subb
mov
mov
iret
or
in
lea
bswap
bswap
pop
push
mov
pushf
movb
pushl
ret
lea
jae
push
movb
cmp
push
jmp
xchg
call
neg
jmp
pop
pop
xchg
push
mov
lea
not
not
call
scas
xchg
insl
popf
jae
sub
lret
jmp
imull
sti
pop
rcll
cmpsl
pop
cmpsl
push
mov
mov
jb
inc
mov
cmpsl
push
or
cltd
add
push
mov
loopne
jge
fsubrs
in
das
ds
xor
movsb
and
xchg
push
mov
incl
inc
scas
dec
jle
add
ss
out
ljmp
jo
dec
ret
add
int
and
dec
sti
inc
lods
mov
jmp
cmpb
cmp
push
lret
out
and
js
mov
insb
lock
push
cmc
xchg
jl
and
push
cmpsl
popa
pushf
mov
sahf
sarb
push
loope
mov
loopne
stc
shll
mull
mov
mov
mov
sub
adc
sub
aaa
ret
add
jo
out
sbb
jge
jns
dec
adcl
cmp
cli
test
add
movsl
cmp
popf
add
out
mov
pop
dec
jnp
call
add
sbb
loopne
pushf
jo
inc
lcall
add
jg
inc
xchg
repz
or
out
cmp
mov
test
pop
push
xchg
cmp
int
jae
adc
adc
mov
pop
mov
jo
jo
pop
mov
stos
jo
add
lret
or
inc
cmp
sub
xchg
lea
pushl
test
adc
mov
xor
mov
call
call
icebp
iret
add
or
out
sbb
aas
cmp
and
add
add
adc
bound
sub
push
mov
out
pushf
arpl
jae
stos
jb
xchg
adc
push
mov
sbb
sbb
sbb
lret
inc
sarb
stos
shl
inc
jl
jo
outsl
xchg
jo
mov
lods
dec
xchg
inc
mov
mov
jo
fs
ret
add
sub
lret
push
gs
fs
imul
sub
andl
add
mov
sbb
call
dec
inc
add
xchg
movzbw
mov
dec
or
cmc
stc
mov
push
cmp
movw
pushf
xchg
adc
xor
cmc
rcl
mov
clc
sub
push
rep
movzbw
movw
mov
pushl
movb
pusha
movl
lea
jmp
lea
ja
setb
bswap
jmp
dec
sbb
cmp
push
addr16
jl
push
test
insb
lods
insb
pushf
pop
xchg
inc
xchg
cld
and
lret
aas
shl
rcrl
dec
mov
pop
cmp
adc
add
shrb
cmc
add
imul
pop
pop
das
ror
xchg
ds
inc
shrb
fstl
mov
and
mov
jne
inc
mov
dec
lahf
push
mov
and
push
popf
bound
leave
lea
call
iret
fwait
jae
push
test
pop
mov
jns
adc
sbb
cmp
leave
call
gs
icebp
sbb
aas
sbb
cmc
imul
test
fsts
push
fidivrs
dec
inc
pop
sub
cwtl
inc
test
in
cli
lock
dec
cmpsb
cmpb
push
repnz
pop
cli
or
out
sbb
push
add
fwait
and
cmp
daa
icebp
pop
cltd
pop
jmp
ret
add
xor
shrl
fs
in
jmp
sub
bound
jp
negb
cmp
pop
cmp
ret
pop
cld
pusha
pop
lcall
mov
idivb
sbb
and
repnz
cli
loopne
rcl
push
jge
mov
mov
cmc
fst
xor
cmc
loope
add
pop
ror
mov
sub
pop
aaa
nop
jg
jge
movl
add
ret
loope
std
sbb
xor
or
ret
add
jl
dec
pushl
lea
je
push
jmp
pop
pusha
test
je
mov
jb
push
cli
and
sbb
fidivs
rorb
pop
xchg
aaa
inc
jp
mov
sub
iret
adc
push
push
cmc
dec
mov
inc
ret
lret
shl
and
push
and
mov
mov
aam
das
mov
in
cmp
jo
fs
pop
pop
subb
mov
inc
scas
imul
cmpsl
jo
pop
jl
mov
cs
and
xchg
ja
shlb
loop
ljmp
loop
push
adc
outsl
mov
scas
test
push
aam
inc
push
test
aad
lea
dec
lcall
xchg
rcrl
cmc
in
and
push
fstl
mov
adc
dec
push
imul
dec
cmpsb
push
lahf
imul
or
loopne
loopne
clc
cld
mov
xorl
jge
stos
data16
adc
cmpl
icebp
filds
bound
movsl
xchg
aam
sbb
movsl
mov
mov
add
xor
pop
mov
add
sbb
and
jmp
push
mov
pushf
popl
add
cmp
loop
into
mov
mov
lds
scas
sub
outsb
rcl
pop
xchg
sbb
inc
adc
push
sbb
es
icebp
adc
fwait
mov
and
adc
or
and
repz
cmp
adc
xchg
rorb
daa
std
in
xor
les
push
aam
ret
add
mov
pop
push
jnp
test
in
sbb
xchg
inc
mov
dec
push
xchg
mov
sbb
out
push
lock
cmp
adc
cwtl
stos
stc
sub
pop
lret
adc
adc
xchg
clc
loope
push
fwait
imul
ja
mov
pop
call
adc
out
or
sub
es
xchg
mov
sahf
lret
cltd
lret
cmpl
popf
dec
test
outsl
mov
lods
out
outsb
movsb
pushf
sbb
sbb
mov
nop
jmp
jne
insl
mov
mov
ret
add
in
and
add
sub
push
jae
add
sbbl
cmp
sub
pop
jae
add
sub
inc
sub
add
sub
pop
jno
add
sub
imul
add
add
add
sub
add
sub
add
sbb
pop
sub
add
sub
mov
sub
add
add
add
add
add
popf
sbb
push
jae
add
sbb
jo
sub
xchg
jae
add
sbb
js
sub
cltd
jae
add
sbbl
subb
pushf
pusha
pushf
stc
ror
stc
call
bsr
lea
add
shrd
adc
push
mov
not
inc
sar
mov
pusha
pushl
repnz
jmp
lea
ja
push
lea
jb
bt
cmpb
pushf
lea
je
push
lea
jne
btr
mov
pushf
pushf
pushf
add
cmc
stc
movzwl
add
push
movzbw
mov
jmp
jmp
mov
add
sar
clc
cmc
mov
test
stc
pushl
sub
lea
jge
rep
movsbw
pop
push
lea
jmp
push
lea
jne
shrd
bsf
mov
bt
push
call
ds
adc
mov
nop
pop
and
es
ss
and
push
imulb
repz
or
xor
push
lcall
add
adc
lahf
dec
in
jae
mov
jg
mov
cld
andb
jecxz
xchg
ret
or
cmp
es
xor
imul
pop
pop
cwtl
push
nop
inc
test
dec
nop
inc
xorb
or
add
mov
xchg
movsb
loop
mov
daa
lcall
pop
mov
ss
cmpsb
adc
iret
add
push
cmpsl
pop
xchg
popf
mov
ds
shll
es
mov
rcll
sarb
pop
mov
lret
and
loope
out
lock
xchg
add
push
inc
mov
cwtl
jns
or
addr16
sub
cmp
aaa
xchg
arpl
data16
add
lock
icebp
daa
icebp
pop
int
aad
fnstenv
std
das
mov
add
fcoms
out
shrb
or
mov
orb
cmpsb
fiadds
ret
iret
sbb
repz
repz
pop
xchg
mov
xchg
aaa
xor
mov
insb
shr
enter
inc
mov
xchg
faddp
push
push
xlat
mov
in
adc
push
mov
mov
cli
mov
push
hlt
ss
loopne
int3
sbb
add
fwait
push
movsl
mov
and
add
mov
ja
jae
addr16
cmp
pop
out
ror
sbb
cltd
sahf
mov
fisubl
push
dec
ud1
push
push
cmpsl
lret
orl
mov
test
mov
jge
pop
scas
dec
dec
cltd
mov
push
lret
out
sarb
sarb
clc
inc
subb
sbbb
add
and
adc
xor
dec
movsb
scas
jnp
repnz
test
xor
cmc
hlt
mov
repnz
and
out
mov
imul
js
fs
mov
inc
nop
ret
sbb
dec
mov
push
xchg
cmpb
ret
daa
icebp
xor
cwtl
jle
xchg
rorl
std
push
test
pop
jb
enter
or
ds
and
jecxz
in
pusha
push
and
icebp
sbb
cmpsl
inc
cltd
rcrb
pop
sahf
pop
mov
mov
cmpl
fwait
inc
pop
adcb
je
clc
scas
das
mov
adc
bound
les
ret
add
cltd
pop
pusha
inc
or
xor
into
ret
nop
scas
xchg
inc
xchg
push
xchg
push
push
into
jbe
jbe
repnz
or
adc
mov
xor
scas
jne
pop
push
mov
pop
jp
cmc
ja
push
jmp
aaa
addb
mov
jge
pop
add
dec
mov
test
jle
push
jne
dec
addr16
outsl
jnp
movsb
push
xchg
jp
cli
jno
and
sbb
or
adc
add
push
ret
add
aam
ljmp
mov
add
bsr
cmc
btr
clc
mov
sub
add
rcl
inc
mov
test
pushf
or
sbb
mov
clc
clc
push
push
sub
call
pushf
movl
xchg
mov
mov
push
stc
sub
pusha
jmp
pushf
lea
ja
jmp
dec
ja
push
mov
lcall
sub
push
loop
push
adc
sbb
shrl
lock
dec
mov
sub
rolb
fwait
sub
ja
lods
adc
and
adc
push
add
jl
lcall
and
test
xchg
lods
scas
jbe
push
mov
jo
push
stos
push
sbb
push
pusha
pusha
movl
mov
pushf
movl
push
pushf
mov
lea
jmp
jne
mov
mov
xlat
negl
out
jecxz
negl
shll
ret
das
test
insl
xchg
outsb
xchg
jnp
test
flds
sub
mov
cmp
gs
out
fcmovbe
decb
aam
or
xchg
test
cld
adc
dec
stos
xor
jecxz
imul
push
add
psubsw
stc
xor
pop
leave
add
ret
add
push
cltd
jbe
lea
ja
push
pushf
push
inc
lea
jg
inc
jmp
mov
adc
sar
mov
clc
bt
repnz
push
push
pusha
jmp
clc
movw
mov
bt
add
bt
bt
call
dec
ja
inc
test
adc
sarl
pop
cltd
popa
mov
xchg
imul
jno
xchg
dec
cltd
push
adcl
dec
lods
jle
jo
jo
adc
push
out
mov
in
sub
lret
mov
lahf
imul
adcb
or
pop
sub
into
cmp
pushl
cmpsl
lea
lods
gs
lods
pop
mov
inc
mov
sbb
jne
inc
mov
shr
ss
icebp
xor
jge
aad
clc
mov
leave
inc
xchg
xchg
add
js
pushf
jno
mov
call
out
loope
bound
jmp
lret
xor
aad
dec
push
cld
or
adcb
mov
pop
pop
cmp
push
aam
shr
sub
mov
adc
nop
pop
aaa
sti
sub
ficompl
or
dec
or
add
lret
std
and
or
and
pop
orb
mov
outsl
movsl
mov
stos
cmpsb
xor
outsb
mov
push
mov
xor
inc
sbb
outsl
inc
mov
cmp
stos
dec
push
add
into
dec
or
xorl
push
mov
cmc
adc
jle
in
les
std
xor
fildll
and
iret
add
repnz
and
cmpsl
mov
mov
xor
nop
pop
xchg
push
dec
ljmp
cmp
dec
lods
inc
outsb
xchg
mov
push
cmp
lock
adc
mov
aaa
rorb
gs
push
mov
adc
stos
push
dec
add
loope
adc
cmpsl
xor
iret
add
fnstsw
dec
andb
cmp
pop
movsb
dec
cltd
mov
pop
add
mov
ret
rorb
cmc
sub
int3
xor
cmp
call
out
jno
dec
mov
lods
xchg
cld
lods
push
mov
fcomip
cmc
push
daa
fdivrl
sub
mov
cs
push
adc
std
push
sub
les
push
ljmp
jle
xchg
inc
adcb
shlb
jmp
push
xor
les
mov
sbb
xchg
insl
mov
xchg
rol
jecxz
adc
div
fcoml
xor
hlt
inc
mov
xchg
fwait
push
xchg
inc
jno
mov
movsl
outsl
lods
ficomps
add
in
and
inc
cmpb
mov
fnstcw
and
in
fisubl
fistpll
mov
popf
inc
jg
and
and
out
xlat
xchg
xor
jmp
xchg
inc
xorb
push
ficomps
pop
sbb
test
mov
push
int3
push
mov
cmp
cmp
lcall
daa
lds
test
inc
int3
into
xlat
add
inc
stos
dec
test
gs
sarl
mov
ja
loopne
cmp
pushf
pusha
fwait
jns
sub
xchg
aaa
and
iret
add
aas
mov
sbb
sti
cmp
loope
push
push
dec
scas
pop
int
xor
lahf
push
xchg
ja
xlat
stos
imul
mov
and
imul
lea
loop
clc
pop
sub
rcrl
and
jo
outsb
dec
mov
icebp
outsl
les
in
arpl
hlt
aas
in
movl
ds
cmp
xor
outsl
ret
les
arpl
andb
jle
jl
addb
pop
xchg
jmp
dec
cli
lods
cmpb
mov
call
shl
call
mov
cs
dec
pop
enter
cmpsb
push
popf
imul
leave
sbb
jle
insb
ja
and
push
push
hlt
fdivr
and
adc
lods
mov
adc
jmp
test
xchg
jbe
jo
ja
mov
movsl
outsl
lods
andl
push
out
push
ret
cmp
out
dec
mov
nop
test
jb
cwtl
mov
jecxz
ss
clc
mov
lret
adc
or
xor
xorl
jno
xchg
js
sbb
cmp
xor
pop
sub
fdiv
cmp
arpl
xlat
into
sub
push
pop
je
into
mulb
in
sbb
inc
outsl
icebp
jmp
cmpsl
pusha
push
pop
xchg
loope
fs
out
xor
xor
hlt
insl
jecxz
mov
or
cli
xor
mov
lea
jp
dec
xchg
mov
ja
sub
mov
push
int3
fsubr
jbe
dec
jnp
andl
hlt
ret
int
push
ret
dec
mov
inc
pop
mov
stos
imul
cmp
cmp
in
adc
lods
mov
and
ret
and
push
dec
scas
rorb
out
sub
shrb
movsl
jo
jne
or
ljmp
push
mov
dec
xchg
mov
xchg
inc
outsl
xchg
je
outsb
jg
popf
sti
inc
repnz
xor
dec
push
xchg
mov
dec
inc
push
fs
mov
repnz
leave
addr16
mov
aas
adc
or
cmpsb
xchg
pop
jno
jae
rolb
push
lahf
mov
cmp
in
fisubrs
push
xchg
inc
ret
or
sub
aad
pop
mov
cmp
int
stc
adc
arpl
mov
sub
les
xor
out
cwtl
mov
mov
jle
jbe
outsb
mov
jns
push
sub
movsb
sbbl
cltd
pop
lea
sbb
rclb
cs
sub
out
or
pop
xor
popf
movb
mov
icebp
sub
jne
gs
cltd
inc
mov
pop
jmp
mov
leave
scas
jmp
push
orl
push
push
fs
jno
ss
sbb
sbbl
js
or
sarb
test
dec
mov
dec
gs
add
inc
pop
dec
jle
flds
mull
stos
add
jmp
stc
xor
add
flds
mov
add
jo
dec
sub
or
adc
movaps
shl
into
insl
mov
shlb
ljmp
loop
cmpb
xlat
or
dec
loop
push
lea
cmpsb
xorb
fwait
xor
inc
insb
mov
xchg
test
test
outsb
lods
outsb
inc
or
add
fwait
cli
xor
imul
test
jne
push
popa
jg
sub
jmp
and
lret
lahf
add
pushf
jmp
or
jb
orl
ljmp
or
into
add
lret
mov
cmpsb
fs
add
shl
daa
sti
and
aas
xor
mov
ffree
js
in
adc
loopne
lret
pop
rcrl
cltd
out
or
std
aas
sub
sti
movsl
mov
data16
adc
pop
imul
add
xor
or
and
mov
push
outsb
inc
mov
dec
jl
shrl
mov
sub
pop
movl
test
add
mov
out
outsb
mov
in
cmp
add
mov
aad
or
and
arpl
enter
pop
mov
orl
dec
pop
popf
lret
dec
cmp
sbb
repnz
add
dec
pop
sub
inc
xchg
pop
xchg
mov
push
rorl
xchg
mov
cs
jae
outsl
lods
dec
pop
rorb
sar
ss
mov
imul
dec
movsl
pop
xchg
xor
frstor
push
fmul
adc
clc
xor
add
cmp
sarl
iret
shlb
fldl2e
and
repnz
fstpl
jb
jo
test
cs
adc
mov
lock
cli
push
mov
mov
adc
std
sub
std
mov
pop
push
inc
mov
dec
pop
nop
mov
outsb
jp
jl
es
or
inc
mov
mov
mov
out
push
aaa
xor
or
push
xor
fistpll
mov
rclb
mov
shr
lahf
mov
mov
ds
xor
je
andl
test
sbb
mov
stos
push
fnstsw
lods
or
push
mov
dec
mov
fiadds
sbb
cmp
adc
jp
mov
jbe
adc
fmuls
lret
pop
int3
push
loop
inc
test
out
outsb
or
sahf
xchg
cmp
or
xor
and
syscall
clc
and
in
sar
add
cmp
add
call
pop
lock
xchg
enter
ficoml
cmpsb
xchg
mov
dec
jmp
fdivrs
in
xchg
daa
std
shll
addr16
inc
movsb
inc
in
test
mov
punpcklwd
popf
inc
dec
int
bound
mov
pop
test
popf
jno
mov
cmp
ja
lcall
cmp
push
push
rclb
fucomi
fs
xchg
cwtl
push
inc
cltd
mov
sahf
into
out
and
and
das
into
xchg
shr
cmp
insb
mov
aad
daa
fcmovnb
adc
inc
mov
lcall
sub
into
loopne
push
pusha
bound
insl
xchg
bound
inc
mov
fdivrs
cli
pop
pcmpgtb
les
xor
fists
fstl
sub
push
les
rorb
pop
shl
test
pop
xchg
pop
adc
jecxz
je
sbbb
sbb
loopne
repnz
das
or
icebp
movsb
outsb
dec
cltd
shrl
lock
jmp
sbb
pushf
inc
sahf
pop
aas
loop
inc
add
sub
mov
xchg
jns
and
and
jnp
incl
cmc
aad
fistpll
sbb
or
cltd
mov
xor
aas
pop
fbld
cmc
mov
movsl
inc
or
cmp
adc
mov
lahf
aad
ljmp
daa
add
sub
xor
sbb
inc
mov
stos
jns
scas
or
and
movsl
outsl
mulb
inc
cmp
and
or
lds
or
xor
jmp
mov
lret
int3
adc
sbb
cmpsb
adc
lcall
lahf
mov
inc
lea
loope
add
pop
test
aam
and
addb
popa
xchg
test
es
test
add
out
popf
mov
stos
mov
imul
sub
incl
inc
xchg
push
add
adc
imul
mov
xlat
test
shll
sub
add
stos
outsl
sub
adc
or
in
shlb
fs
and
xlat
push
cmp
mov
fwait
mov
push
mov
xchg
cltd
lods
or
and
aam
mov
and
add
and
and
psllq
sub
ljmp
sbbl
mov
or
cld
ss
iret
int
xchg
cmpl
dec
orb
push
push
sub
jmp
or
xor
mov
popa
push
or
inc
cltd
inc
xchg
mov
faddl
jne
jne
movsb
push
les
stc
xchg
jnp
pusha
mov
out
mov
lds
or
mov
mov
insb
inc
add
sub
sub
std
push
add
sub
fidivl
cmpl
xlat
cmp
daa
adc
punpckhdq
push
arpl
bound
mov
lods
jo
bound
pusha
dec
mov
mov
lds
clc
lahf
sar
icebp
push
ljmp
lret
clc
xor
movsl
mov
sub
pop
cmp
imul
mov
inc
ficoms
lods
mov
fists
out
pop
in
pop
push
stc
mov
das
add
movsl
xlat
add
xchg
repnz
fimuls
fisubs
pop
aad
and
mov
xorb
fisttps
jge
inc
nop
mov
jno
pop
xchg
ja
into
mov
sahf
jb
dec
xchg
aad
aaa
adc
jmp
rcrl
cmp
ss
cmp
dec
xchg
inc
faddl
mov
loop
mov
mov
dec
push
mov
test
popa
jne
dec
imul
mov
jmp
jmp
lret
ffreep
push
testl
incb
jmp
fisubs
jmp
or
sbb
sti
xor
dec
gs
add
ret
adc
and
add
fisttps
int
jne
jp
mov
pop
xor
xlat
mov
test
mov
jmp
and
hlt
adc
lea
jge
add
sarl
lods
test
lcall
inc
jg
xor
ret
push
xor
cmp
mov
mov
xchg
lea
fiaddl
jb
push
mov
mov
in
sbb
daa
jmp
leave
adc
clc
xor
mov
mov
xchg
jns
out
cwtl
lcall
push
nop
int3
pop
jle
jl
or
inc
insl
push
xorb
adc
mov
cmpsb
mov
jns
push
stc
sbb
xor
push
js
mov
data16
lret
jns
sbbl
in
out
divl
push
mov
pop
rclb
mov
push
lea
mov
jbe
dec
or
dec
mov
rcl
out
push
shl
or
sbb
into
mov
dec
add
lock
pushl
add
sbb
xchg
mov
rcll
xor
sub
sbb
sbb
rol
sub
cmp
sub
jecxz
or
xchg
ss
cmp
sbb
jae
popa
cmpl
stos
jp
lcall
mov
cld
in
dec
les
out
aaa
in
das
xor
or
inc
xchg
push
cmp
mov
cmp
and
gs
pop
iret
add
adc
or
arpl
je
clc
xor
xor
add
jle
lea
mov
in
adc
sarl
sahf
out
sub
fstl
xlat
add
push
dec
test
aaa
cmc
loope
push
dec
dec
rcll
add
test
push
fstl
lret
icebp
xchg
mov
mov
insb
jle
scas
pop
mov
cli
and
std
push
jg
mov
insb
jnp
shl
lret
sub
inc
sbb
dec
test
push
inc
pop
cld
jg
shr
jecxz
ret
cmp
sub
loop
int
js
mov
mov
in
inc
sbb
jno
xchg
lret
out
adc
xor
lea
push
xchg
lea
sbb
fs
aaa
rol
sbb
sub
jmp
xor
inc
xchg
loopne
adc
fnstsw
rcrb
add
daa
idivl
rcr
and
cmp
adc
mov
pop
pop
push
insb
mov
cwtl
outsb
jno
pop
xchg
xorl
mov
push
jecxz
cmc
daa
push
xor
fidivs
mov
adc
test
xchg
or
pop
addl
data16
mov
xchg
inc
mov
lds
mov
into
sub
sahf
andb
int
rorb
lahf
inc
data16
mov
ds
mov
xchg
mov
mov
jmp
sti
rorl
shl
leave
in
mov
push
test
xchg
dec
xchg
testb
rorb
push
adc
nop
fdivr
inc
sub
adc
adc
testl
data16
nop
sbb
fdivrl
fmuls
cli
and
stos
cmp
out
adc
lahf
push
into
lcall
mov
or
cmp
adc
adc
aaa
pop
std
mov
push
push
dec
scas
mov
shrl
sub
mov
mov
das
ds
insl
sbb
jno
jae
xchg
xor
xchg
mov
inc
test
fists
dec
and
lret
clc
fdivs
push
fdivrl
dec
int3
int3
push
lods
je
popf
dec
ljmp
push
xchg
inc
bound
mov
and
lds
and
cmpsb
jno
stc
cmp
pop
pop
mov
imul
subl
lock
pop
adc
bound
xor
cs
imul
xchg
xchg
insb
mov
lret
addl
adc
aaa
hlt
je
jno
stos
test
sbb
int
xchg
aaa
xor
adc
clc
add
sub
sti
fnstcw
cld
xor
xor
push
fdivr
sbb
mov
inc
cmp
xor
ss
and
xor
mov
pop
pop
mov
dec
ljmp
or
in
lea
adc
sbb
stos
leave
nop
prefetch
stos
enter
xchg
pusha
lods
jp
imul
inc
mov
ss
dec
mov
insb
inc
jo
call
lahf
push
push
leave
push
inc
jns
jnp
adcb
cmp
sti
je
cmp
cmc
adc
sbb
lods
mov
std
jb
inc
mov
lahf
mov
test
std
loope
mov
pushf
mov
pop
pop
adc
push
int
daa
or
and
fistl
ds
mov
pop
fidivrl
sbb
jle
mov
mov
lret
add
sarb
js
pushf
pop
cs
ficoml
rolb
cltd
stc
stc
popf
cmpsl
addr16
mov
arpl
stos
push
jo
pop
popf
mov
pop
sti
loop
push
jnp
mov
xchg
jbe
adc
pop
mov
pop
xchg
inc
in
mov
adc
ret
xchg
cmp
xor
lds
sbb
cmp
aad
int3
add
test
sbb
and
cli
cmp
out
sbb
ljmp
xor
lds
push
pop
cmpsb
dec
cltd
dec
push
cmp
gs
ja
inc
lcall
cli
jecxz
push
push
and
dec
fsubs
jp
pop
dec
xchg
scas
dec
jb
mov
push
xchg
repnz
sub
insb
dec
popf
xor
mov
push
xor
pop
popf
bound
add
and
popf
dec
test
mov
fs
xchg
pop
dec
out
cmpsl
movsl
mov
test
cmp
in
out
pop
std
aaa
stc
xchg
arpl
adc
xor
icebp
dec
test
repnz
pop
aad
mov
repnz
ja
outsl
cltd
inc
pop
hlt
adc
faddl
mov
sub
pop
cmc
sbb
fisttps
xlat
or
scas
mov
fsts
ja
aam
scas
cmpsl
insl
push
out
sub
jns
out
cmp
sbb
ror
sbb
xlat
sbb
cmp
sarb
out
repnz
xchg
jns
test
mov
subb
mov
repnz
insl
mov
test
cwtl
mov
pop
subl
inc
outsl
in
addr16
add
cmp
cs
mov
movsb
popf
mov
sbb
sar
dec
imul
dec
mov
out
fisubrs
cmp
neg
add
mov
std
or
fcoml
int
stos
sub
scas
pusha
add
out
or
add
frstor
sbb
fidivrl
pop
mov
jbe
mov
sbb
in
aas
adc
out
sbb
adc
int
dec
inc
shlb
pop
cwtl
jp
test
jne
out
and
mov
mov
stos
mov
fmuls
mov
jmp
lods
cwtl
daa
and
mov
orb
xchg
cltd
push
and
mov
test
mov
and
inc
ret
mov
xor
repz
and
and
cmp
sbb
mov
xchg
cmpsb
insb
xchg
mov
dec
popf
push
mov
fwait
xchg
sub
fisubs
repz
pushf
jo
int3
loope
add
xchg
push
push
sbb
aam
or
mov
out
stc
add
and
mov
jecxz
cmp
mov
sahf
inc
pushf
dec
das
loope
in
ja
pop
andb
aam
cmp
adc
or
mov
das
mov
cmp
mov
imul
jle
inc
xchg
inc
lea
sar
cmp
pop
jo
lret
lds
xchg
and
sbb
sub
and
fiadds
es
dec
dec
xchg
jmp
loop
push
ficoms
adc
pop
push
fistpll
in
lcall
or
mov
pushl
cmc
cmp
pop
les
inc
mov
das
call
mov
ret
lds
mov
repnz
jge
mov
lahf
push
out
pop
aas
jecxz
loope
adc
cltd
pop
js
sti
sbb
ret
aas
es
sub
jbe
fisubrs
in
pushl
pop
dec
insb
sbb
cmpb
lock
popa
mov
loop
cmp
adc
push
popa
mov
adc
js
popa
dec
int3
pop
in
sbb
jle
jle
ds
xor
push
int3
mov
jmp
ja
inc
inc
xlat
movsl
test
pop
mov
cli
mov
xor
cmp
or
out
fistpl
or
cwtl
mov
mov
popa
test
xchg
repnz
scas
push
xlat
insb
sbb
and
nop
test
pop
mov
sub
mov
mov
imul
aam
xchg
fdivrp
sub
leave
scas
ds
jl
jnp
push
mov
cmovnp
or
aam
in
xor
add
or
les
and
mov
fcompl
imul
or
int
adc
shrl
jecxz
and
jns
sbb
ljmp
stc
sub
cmp
sbb
sarb
inc
hlt
pop
cmp
dec
sub
out
push
les
xor
arpl
add
aad
or
icebp
fs
mov
cwtl
mov
push
lods
inc
xchg
cli
xor
mov
outsb
mov
cmp
adc
cmpsl
fst
sub
call
sub
loope
rcll
fdivr
cs
mov
mov
data16
aad
jecxz
out
push
jmp
mov
inc
scas
ret
add
inc
cld
inc
stos
mov
loop,pn
testb
ds
xor
cmp
std
add
ret
test
mov
and
dec
xchg
lds
xor
out
aaa
enter
lods
lods
sarl
mov
xchg
mov
mov
pop
mov
sbb
je
sub
enter
aas
dec
ret
pusha
cli
xchg
push
xchg
jmp
ret
ds
sbb
pop
mov
xchg
dec
mov
test
pop
xchg
das
jmp
mov
lock
jmp
cmpsl
loope
test
pop
or
imul
lret
and
inc
inc
cmp
xchg
jmp
sbb
inc
mov
out
cwtl
aam
gs
sbb
jns
pop
je
mov
cmp
inc
xchg
xor
and
clc
mov
lds
cmpsl
jns
adc
xlat
xor
add
add
in
hlt
add
sarl
inc
lods
jl
xor
sbb
sbb
xor
loopne
arpl
adc
loop
mov
fmuls
fcomps
push
cmp
push
ret
lods
mov
jp
lods
mov
mov
inc
mov
bound
adc
mov
adc
add
adc
clc
or
dec
push
stos
sarb
jle
pop
loop
and
pop
mov
aas
in
and
pop
ffree
add
mov
cmp
pushf
lea
jae
bt
cmp
test
pusha
cmp
call
pop
adc
arpl
les
test
fdivrl
adc
adc
xor
add
sarl
scas
stc
inc
adc
push
clc
dec
inc
and
sbb
lahf
imul
pop
jb
repnz
push
mov
sub
cli
mov
cwtl
es
mov
ret
xor
add
imul
mov
sbb
enter
jno
xor
jbe
filds
xchg
popa
xchg
push
pop
clc
adc
stos
aas
mov
ljmp
sahf
loopne
cwtl
push
jle
add
fcoml
push
or
mov
mov
jb
cs
jnp
mov
imulb
aas
ror
test
stos
xchg
daa
mov
enter
aaa
and
adc
aas
xchg
pop
cmc
fstl
subl
or
jo
sti
and
rcrl
mov
mov
adc
pusha
mov
sbbl
push
xor
mov
fwait
inc
mov
jns
xor
inc
mov
jle
jb
jecxz
xchg
mov
pop
xchg
pop
mov
mov
pop
ss
adc
jne
rcrl
jo
into
pop
cmp
jb
cmp
jmp
or
adc
mov
sbbl
aad
xor
add
mov
inc
jbe
notl
fmull
push
xchg
nop
mov
inc
pop
sti
adc
out
and
cs
enter
call
ret
add
cmp
sub
push
in
fs
jp
dec
andb
xchg
pop
mov
pop
out
push
arpl
mull
xchg
movsb
lds
pop
out
mov
cmpsb
lea
cs
fwait
push
push
daa
jae
jns
pop
rol
inc
daa
jbe
insl
dec
mov
mov
sbbb
leave
pop
ljmp
cmp
sbb
xor
enter
lock
fadd
add
jecxz
insl
in
jl
aad
and
xor
leave
and
or
jno
aas
hlt
dec
mov
int
and
push
es
nop
mov
dec
mov
fst
lock
jle
and
xchg
lods
incb
aam
lock
iretw
cwtl
xchg
jbe
dec
lcall
push
sahf
je
pop
ret
add
adc
push
cmp
repz
push
fsubrl
xchg
jo
inc
test
xor
lahf
adc
out
bound
sbb
pop
outsl
subl
jb
cltd
dec
dec
mov
ss
rcr
stos
scas
inc
push
test
stc
add
pop
xchg
cmp
in
cs
aad
pusha
fisubrl
iret
adc
lcall
aad
out
ret
insl
fisttps
lret
sbb
dec
xchg
ficoml
push
repz
pop
out
xchg
arpl
arpl
das
jmp
inc
dec
sub
jl
sub
std
sti
minps
pop
data16
and
and
arpl
inc
int3
push
jecxz
push
pop
test
mov
mov
fwait
and
sbb
sub
sbb
inc
movsb
mov
cwtl
ja
inc
mov
int3
loop
jns
lret
add
and
pop
icebp
dec
mov
arpl
mov
push
cli
push
in
dec
mov
mov
pop
mov
jbe
inc
outsb
mov
lret
jecxz
aam
repz
comiss
jg
dec
jp
je
imulb
aad
push
or
sbb
lock
imul
js
adc
or
mov
scas
dec
mov
test
xchg
popf
pop
and
stc
xor
push
mov
sbb
ficompl
cmpsl
pop
pop
call
pop
jge
aas
sti
sbb
fists
fisttpl
out
out
add
jle
pushf
push
call
jno
jg
mov
fcompl
test
mov
inc
sub
iret
lds
imul
add
cmp
sbbl
xchg
and
mov
jnp
dec
fmuls
and
cli
mov
mov
pusha
xchg
jns
pop
dec
push
or
pop
and
sti
pop
mov
test
push
mov
ret
add
lods
push
mov
psubusb
out
ds
push
cmpsb
push
mov
sub
jmp
cmp
rorl
aas
icebp
mov
adc
push
jae
mov
lcall
push
adc
dec
jne
fdivrs
aaa
xor
adc
in
lds
sub
addl
leave
cld
in
loop
test
fstpl
mov
sti
jl
and
mov
xor
sbb
or
adc
push
clc
and
es
int3
push
fmuls
call
mov
inc
and
scas
call
pushf
movl
pusha
jmp
fisubrs
fisubrl
iret
sub
pop
fbstp
repz
out
xlat
and
and
mov
inc
mov
pop
pop
adc
fdiv
jbe
cmpsb
xchg
in
lock
xchg
scas
inc
xorl
xchg
jbe
call
or
fstpt
lds
int
stc
das
test
stc
pop
test
mov
fs
jne
mov
movzbw
movb
lea
push
lea
movsbl
lea
jmp
pushf
call
icebp
cwtl
dec
cwtl
jbe
daa
sub
sub
in
and
sub
repz
mov
orb
sub
loopne
ret
stc
sub
sbb
lods
mov
mov
push
out
cmpsb
incb
cmp
fisubl
shll
and
xchg
mov
xlat
or
shll
mov
int
inc
ror
rcl
sub
call
inc
lea
call
aaa
jnp
imul
lret
cli
ds
push
cli
sbb
ds
lock
ror
xchg
inc
sub
pop
xchg
repnz
out
idivl
and
cmc
or
add
push
xchg
movsb
xor
mov
jnp
jl
movsb
repnz
inc
adc
cli
bound
push
enter
dec
repnz
jns
or
mov
adcb
push
inc
std
rcrl
lret
out
clc
ds
push
rcrb
push
int3
cs
ret
add
pushf
popw
rol
rcr
cmc
pushf
mov
stc
cmc
rol
cmc
add
push
bt
ror
stc
push
neg
test
pushw
popfw
pushf
inc
lea
jl
push
pushl
movb
adc
lea
pushf
mov
pushf
movb
pushl
ret
pushf
xchg
jmp
lea
jl
pusha
push
mov
mov
push
pushl
ret
cmc
pushl
popl
mov
clc
jmp
mov
pusha
pushf
pushf
pushf
lea
jmp
movl
call
lds
sbb
ja
jns
sbbl
dec
std
sub
inc
into
lret
lret
cmp
add
pop
divl
mov
leave
pop
xor
lcall
fwait
and
cmpsb
ja
sbb
adc
sub
xor
add
push
int3
add
xor
ret
add
cmp
pusha
jmp
lea
je
bt
setge
add
add
inc
dec
and
mov
push
pushl
add
movw
clc
test
jmp
test
ja
cmp
jle
iret
icebp
flds
icebp
xor
or
inc
mov
mov
push
xor
insb
pop
enter
pop
arpl
movl
imul
test
test
sbb
clc
test
loop
test
adc
xor
adc
push
pop
pushf
aaa
fisubl
ljmp
js
push
sahf
pusha
stos
push
push
fbld
decb
rcr
sub
rol
js
movsbw
bt
mov
pushf
stc
stc
movb
sub
cmp
pushl
popl
jmp
jmp
imul
jge
cmp
sbb
push
jmp
psllw
je
incb
call
or
and
mov
mov
adc
pop
and
fsin
xor
or
insb
subb
lcall
das
push
inc
in
sbb
pop
xchg
mov
bound
push
jp
add
das
sub
cmc
or
mov
sub
xor
int
jmp
dec
test
adc
js
pop
inc
xchg
rorb
iret
inc
movsl
cld
add
into
loopne
aad
jle
mov
cmp
dec
pop
push
aad
test
int
fldenv
mov
mov
sbb
test
push
mov
bound
aad
mov
inc
mov
pop
ljmp
popf
push
sahf
imul
jae
or
pop
cltd
pop
popf
jge
dec
movsl
pop
popf
pop
xchg
mov
lods
cmp
les
leave
xchg
enter
jo
inc
mov
jg
jne
jno
shl
cmp
in
aaa
lret
nop
push
push
adc
je
cmpsb
pop
movsb
insb
sbb
sbb
mov
jmp
imul
sub
adc
sub
xor
cmp
or
xor
ret
add
and
push
or
ret
add
ficoml
out
ret
sti
sub
cmp
jmp
push
sub
lods
or
sbb
mov
hlt
xor
hlt
pop
add
jmp
pop
fadds
adc
sbb
xchg
push
les
sub
aam
aam
xor
lret
mov
xchg
push
xchg
pop
xchg
push
xchg
inc
sti
sbb
outsb
xchg
push
mov
pusha
pushl
ret
xor
jmp
stos
outsb
add
loop,pt
ret
push
cld
es
cmc
in
cmp
stos
push
jle
push
push
andb
lds
mov
sbb
bound
test
das
rol
pslld
cmp
jg
dec
push
jg
psraw
xor
out
and
xor
mov
addb
mov
xchg
or
or
or
dec
ret
insb
cmpsb
ret
add
jae
pop
in
popa
aam
push
addr16
mov
dec
cld
sub
or
add
push
add
xchg
pop
stc
push
inc
cmp
dec
aad
xchg
push
dec
lret
dec
loopne
ja
in
or
inc
pop
cltd
test
and
out
mov
cmp
lds
xlat
xor
mov
loope
cmp
bswap
add
pop
cmc
sbb
pextrw
cmp
ret
add
fs
jne
cmp
rcl
shr
cmp
sub
cmp
bt
dec
mov
sar
rcr
bt
cmc
add
neg
setle
call
out
cmp
sub
ret
dec
hlt
sub
and
or
or
add
xor
adc
xlat
push
into
in
sbb
aam
popa
cmc
add
cmpsb
lea
mov
fildl
lea
jb
push
pop
scas
lods
movsb
dec
mov
jo
dec
adc
stc
add
add
xor
les
cmp
sub
fstpt
cmp
sbb
cmp
inc
stos
ret
add
std
and
xor
xor
imul
cmp
add
sub
or
add
mov
in
adc
sub
inc
mov
cmp
mov
xor
rolb
mov
sub
or
lock
or
movsb
loopne
ljmp
orl
scas
xor
cmpl
pop
jmp
or
aas
ret
add
lahf
rolb
inc
repz
rclb
push
dec
sbb
sub
and
or
xor
sub
jb
outsb
into
je
jecxz
jecxz
sbb
xor
lds
mov
loope
xchg
dec
mov
mov
fs
mov
pop
adc
sbb
leave
mov
cltd
scas
scas
mov
mov
fistl
scas
adc
mov
pop
fwait
jge
jns
add
imulb
jo
pop
and
shrb
sbb
inc
mov
pushf
pop
lcall
mov
sub
xor
iret
leave
rsm
jno
fiaddl
and
xor
dec
lock
mov
xor
push
lret
test
nop
dec
out
adc
fs
das
xor
mov
sub
out
ret
add
sti
pop
repz
arpl
and
or
sbb
xor
or
movsb
mov
xor
repz
pop
lods
dec
sbb
shrl
lahf
mov
mov
movsl
pop
jno
mov
clc
sub
jle
cld
add
push
jmp
add
orl
xchg
xor
xor
stos
rclb
les
shll
push
mov
cmpsb
push
cmpsb
pusha
xchg
dec
scas
ret
add
fildll
pushl
sbb
popa
out
push
loop
ret
push
cmp
ss
xchg
mov
movb
adc
loope
rolb
stc
mov
sarb
nop
mov
cmpsl
popa
jns
stos
in
arpl
jecxz
xchg
repz
rcrb
pusha
jno
lret
xchg
and
mov
cltd
cmp
and
jb
outsb
xchg
inc
addb
les
ret
add
mov
es
dec
jns
push
subb
mov
mov
sahf
dec
mov
ljmp
out
pushf
xchg
popa
add
fsubl
jp
sbb
rol
mov
pop
mov
mov
stos
jns
push
xchg
stos
mov
mov
inc
in
fnstsw
clc
adc
pop
mov
lahf
add
repz
push
cld
pop
add
sub
aas
iret
pop
loope
leave
cmp
aaa
in
inc
stc
ret
add
int3
ret
incl
shl
shl
neg
shrd
mov
clc
xor
bt
bt
repnz
pusha
lea
jne
and
xchg
and
mov
movsbl
sub
clc
mov
pusha
sub
jnp
pusha
sub
bt
clc
pusha
pushl
popl
cmc
jmp
call
lea
ja
call
cmp
mov
jno
out
aas
pushl
fisttps
shll
fbld
inc
mov
loope
popa
in
sub
push
jb
xor
adc
inc
out
mov
xor
xor
lret
out
push
jle
mov
jo
inc
xchg
es
pop
lret
jge
push
jle
jnp
jns
test
cmpsl
and
jecxz
add
std
stc
or
sub
xchg
bound
push
loopne
loopne
enter
cmp
shrb
add
add
ret
fs
pushf
lea
jmp
adc
jo
in
sub
xabort
xor
je
pop
xchg
je
push
mov
shlb
sub
cmp
xchg
pop
mov
loope
ljmp
mov
jp
dec
lods
sbb
xchg
mov
fcmovnb
xor
and
or
aas
jbe
pop
icebp
fxch
xchg
add
cmc
loope
sub
loopne
sub
xchg
enter
mov
retw
add
xor
sub
and
test
in
sub
xor
jo
sbb
add
sbb
mov
stos
add
cwtl
xchg
pop
adc
shlb
and
loop
push
shll
jle
nop
jbe
mov
pop
aas
movsl
outsl
jae
adcl
mov
cmc
pop
lret
adc
push
inc
inc
push
mov
hlt
std
jmp
mov
lds
sbbl
jno
inc
mov
jp
jbe
es
cs
sbb
push
fadd
add
stos
pushf
lea
jmp
mov
pop
aam
out
sahf
push
stos
inc
mov
ljmp
out
xor
in
adc
aaa
mov
dec
mov
jle
fcoml
jns
pop
in
cli
adc
and
in
rcr
mov
pop
pop
fcompl
push
xor
cmp
vminpd
xor
mov
dec
fcomip
sahf
and
aaa
sub
add
adc
mov
mov
jne
int
movsl
pop
dec
mov
mov
je
mul
xchg
cmp
movl
mov
jmp
insl
xchg
jge
jge
jno
ret
add
call
repz
stc
pop
std
add
cmp
sub
movsl
adc
std
lea
sbb
cmp
dec
mov
adc
movhps
adc
data16
dec
cltd
adc
clc
cs
xlat
into
aam
lret
jbe
cmpl
movsl
push
push
movsl
in
xor
dec
push
ja
subl
xchg
inc
xchg
inc
test
cltd
ja
dec
test
pop
ret
add
push
rolb
add
add
ret
out
cmp
pop
movl
decl
mov
jae
call
out
incl
add
aam
aas
lcall
aad
jle
xchg
rorl
jge
and
ret
movsl
inc
jo
fsts
test
xchg
lods
jb
jp
inc
mov
xor
cs
loop
pop
sbbl
icebp
inc
sahf
je
mov
notb
scas
pusha
scas
je
dec
xchg
mov
mov
xor
pushl
and
or
in
in
mov
outsb
ret
add
fnsave
sbb
pop
mov
mov
xchg
pop
inc
xchg
lds
mov
pushl
rcrl
xchg
mov
sub
sbb
mov
mov
mov
pop
fwait
jns
add
adcb
sbb
pop
repz
xor
fimuls
and
shrl
es
or
ret
add
jnp
pop
icebp
in
subb
xor
cmp
rcrl
pop
xchg
cmp
sbbl
sub
mov
and
cmpsl
xchg
arpl
test
xchg
xchg
inc
fdivp
or
jle
cs
insl
mov
mov
popa
fcmovne
and
xor
push
lds
and
sub
cli
cmp
pop
decl
cmp
iret
adc
sbb
and
pop
mov
pop
test
add
or
pop
in
lcall
sbb
cmp
pop
cmpsb
data16
dec
xchg
push
mov
sbbl
mov
pop
xchg
inc
outsb
es
sub
dec
pop
lea
inc
mov
cwtl
popa
dec
lret
and
lret
or
mov
cmp
pushf
xchg
or
sbb
data16
jbe
dec
fisubl
insl
out
sub
aam
rorl
and
in
hlt
add
ss
push
les
in
movsb
dec
ret
add
jo
add
pushf
pushf
cmp
call
inc
data16
add
sub
ds
adc
es
out
mov
adc
imul
rorb
xlat
and
or
fmull
loopne
mov
daa
aad
cltd
imul
fwait
jle
jg
insb
jnp
adc
outsb
aam
lods
ljmp
dec
lods
popf
sbb
lock
and
leave
call
adc
inc
data16
mov
dec
xchg
and
sbb
cmp
jmp
push
add
push
push
nop
stos
int3
mov
mov
js
lea
pop
out
add
hlt
xor
es
mov
dec
jge
jp
jle
pop
cli
dec
mov
mov
lcall
cwtl
cmpsb
shl
sbb
xor
or
call
pop
jae
inc
ret
add
int3
jecxz
pop
loope
testl
testb
out
pop
xchg
out
and
dec
inc
scas
clc
inc
imul
jp
js
insb
mov
pusha
mov
lcall
push
xor
call
pushf
lea
jae
call
pop
ja
lahf
cld
stos
sbb
js
jbe
jae
std
xchg
add
lods
inc
pop
add
cmp
ljmp
ja
dec
incl
pop
pop
ja
xor
femms
jmp
or
pushl
xor
jmp
and
das
adc
incb
push
or
in
ljmp
das
insb
cli
pop
add
push
xchg
sbb
lods
pop
pop
ja
insl
push
and
ja
mov
movsb
fcmovne
movsb
pop
ja
jb
push
push
ret
clc
pop
ja
fcos
push
mov
pop
das
adc
dec
jp
push
dec
pop
ja
or
std
xor
jnp
aaa
pop
jbe
cmp
incl
pop
add
push
fistps
movsl
push
fcomps
sahf
and
fsubl
and
xchg
pop
add
lods
stc
dec
and
push
imul
push
pop
cmpsb
mov
insb
pusha
std
sub
add
add
fnstsw
pushf
rcll
mov
push
bound
repz
maxps
or
fdivl
pop
ja
pop
cs
das
mov
pop
ja
int
push
and
xchg
pop
ja
push
push
inc
sbb
pop
pop
jbe
pop
sti
inc
popf
cmpsb
pusha
out
jbe
pop
js
add
push
pop
das
adc
outsb
popf
bound
ja
add
std
fsubl
sbb
stc
pop
ja
in
push
inc
cmp
pop
ja
mov
push
and
adc
pop
ja
fcos
push
and
xchg
jbe
xor
in
fwait
adc
pop
das
adc
loop
jbe
pop
ja
icebp
push
and
in
iret
pop
jbe
and
fidivs
pop
ja
jns
push
and
das
adc
fs
or
inc
or
das
pop
lods
js
fistpl
cmp
subl
mov
cwtl
inc
mov
push
divb
cld
shll
aas
and
ss
repz
mov
popa
aad
movsl
int3
inc
mov
pop
orl
dec
inc
inc
icebp
in
lds
bsr
mov
jmp
ret
xchg
inc
push
nop
orps
sbb
icebp
and
pop
mov
jge
pop
cltd
addr16
xor
lea
das
cmp
das
psllw
sbb
sub
push
stos
mov
lods
scas
dec
mov
in
outsl
mov
sub
pop
int
mov
lods
fdivrs
xor
xor
and
stos
int
lcall
or
test
inc
insl
cmp
rclb
xor
or
jl
jo
jl
jl
ret
add
rolb
sbb
mov
loop
mov
repnz
sbb
sbb
jecxz
push
dec
andb
push
adc
mov
cmpsb
pushf
out
or
lret
xor
sub
ljmp
leave
mov
push
jecxz
repnz
sbb
inc
mov
or
jno
insl
cmpsl
inc
push
mov
and
add
sti
aaa
out
and
data16
outsb
mov
dec
fisubs
pushw
lock
stos
adc
lods
xchg
jge
pop
xchg
dec
lea
xor
movsb
js
xor
div
sti
cmp
ret
shrb
jns
mov
ja
iret
ficomps
cmp
shl
test
push
adcb
shrb
xor
shrb
cmc
or
insb
jl
sarl
xlat
and
fildll
pop
xchg
dec
mov
add
fisubs
or
lods
movsb
int3
push
outsb
dec
mov
jp
jb
ss
push
mov
mull
push
test
lock
push
lods
outsl
dec
jnp
and
add
add
es
fwait
lahf
pusha
xchg
jge
xchg
xchg
sub
movsb
mov
lcall
loopne
std
icebp
das
add
lods
adcl
dec
xchg
jne
pop
popa
xchg
ret
add
sub
add
add
jo
sub
add
add
int
sub
add
add
adc
sbb
add
add
sbb
add
add
add
add
add
sbb
add
add
outsb
and
add
add
add
mov
add
pushf
cmp
add
push
mov
add
cmpsl
sbb
ret
icebp
sub
inc
inc
sub
leave
cmp
sbb
add
add
lods
xchg
jle
pusha
mov
ret
push
notb
data16
inc
scas
pop
sahf
int3
sub
in
or
dec
mov
sbb
or
stos
pop
mov
mov
movsl
sbb
push
push
mov
jmp
xlat
xchg
pop
add
sbb
xchg
inc
pop
mov
mov
or
ds
cmp
filds
out
out
fucomp
push
jnp
iret
bound
adc
sub
jl,pn
pop
in
cmp
out
jo
sarl
js
lahf
mov
loopne
loop
sub
icebp
les
test
dec
gs
jo
pop
dec
mov
lods
pop
insb
mov
gs
popa
jnp
jno
aam
mov
scas
scas
xchg
jnp
popf
jae
mov
ds
fdivl
sub
fld
xor
cmp
add
mov
popa
cmpsl
iret
addb
pop
lcall
fs
push
mov
ljmp
stos
ja
outsl
mov
xor
imul
cmpsl
pop
addb
sbb
push
fisubs
mov
jg
or
cmp
int
xchg
push
sbb
test
stos
fnstenv
cwtl
or
mov
jnp
adc
arpl
sub
fadd
pusha
ja
pop
jo
pop
jnp
nop
dec
nop
bound
xor
bound
add
add
adc
in
xor
addl
decb
lods
popf
push
jb
inc
hlt
push
enter
into
mov
addr16
mov
jno
push
xor
adc
pop
lds
stc
and
ret
add
scas
call
push
pop
stos
inc
clc
in
ret
lds
mov
pop
mov
jge
cltd
aas
push
xchg
xchg
call
loop
jecxz
fmull
gs
arpl
into
hlt
stos
lock
jo
fs
sub
sub
and
into
fistpll
outsb
aas
fisubrl
mov
jbe
jno
les
and
cmc
sbb
add
nop
cmp
cmp
enter
mov
mov
jbe
push
fdivrs
cld
ds
mov
shl
roll
add
pushl
popl
push
stc
cmp
movw
pushf
lea
ja
adc
ror
sub
dec
movsbw
call
inc
dec
dec
inc
push
dec
xor
cs
insb
add
lods
jecxz
rcr
mov
call
pusha
movl
lea
jae
bt
stc
cmp
call
and
push
ficompl
mov
push
nop
js
pop
xchg
dec
test
test
loopne
or
shll
jo
lahf
popf
aas
mov
sub
sub
cmp
in
cld
cmp
add
xchg
push
push
sbb
pop
aad
insl
data16
push
lods
inc
lods
imul
and
sub
popa
mov
jp
push
ret
cmp
mov
fbld
test
inc
rorl
xchg
jle
push
mov
ret
add
sbb
pmullw
xor
insl
xor
stc
adc
and
add
sub
cmp
bnd
add
pushf
testl
push
int3
in
add
push
dec
lcall
clc
outsb
xchg
aam
sub
imul
loope
mov
pop
dec
test
andl
andl
sbb
and
inc
mov
pop
fidivrl
sub
add
call
mov
xlat
loope
add
xor
push
into
ss
adc
inc
mov
sbb
jp
mov
pop
mov
push
mov
loop
sub
xor
push
add
sub
sbb
pop
aaa
lods
inc
mov
ret
xlat
stc
mov
pop
jns
xchg
dec
mov
mov
cmp
cmp
or
sub
add
adc
dec
divb
ret
add
dec
stos
push
movsl
mov
fcompl
rorb
adc
inc
mov
test
test
pushf
lods
into
out
xor
jp
push
xchg
mov
jne
ja
test
call
cmp
mov
inc
pop
scas
addl
jb
insl
inc
sub
adc
sub
subl
test
je
jl
mov
test
xchg
push
xchg
imul
icebp
ret
add
mov
pop
cmp
pop
sbbl
xor
psraw
addr16
test
adc
loope
lock
sbb
push
pop
loope
outsl
pop
lock
jns
dec
pop
loop
neg
fbld
fcomi
cli
jmp
test
inc
test
cltd
mov
push
or
adc
or
loop
sbb
xchg
inc
stos
pop
jno
jge
call
mov
xor
add
adc
cmp
je
add
lea
jae
not
mov
push
setae
call
movw
mov
lea
jae
stc
setae
mov
btc
shl
inc
inc
mov
not
mov
push
jmp
jmp
pop
sub
jns
cltd
adc
shrb
ret
pop
ljmp
movsb
dec
call
jl
jbe
scas
cmp
sub
in
dec
pop
adcb
shlb
cmp
jg
jle
pop
arpl
ja
jo
icebp
loopne
xor
or
jecxz
stc
outsb
inc
push
mov
scas
lcall
sahf
mov
rcrb
aam
fnstsw
inc
xor
shll
out
or
xor
and
xlat
sbb
add
lea
call
dec
add
sub
repnz
mov
push
scas
inc
scas
jb
outsb
mov
add
arpl
sub
dec
and
ja
ljmp
fwait
xor
and
in
icebp
in
into
bound
test
lret
adc
jmp
imul
das
lods
test
test
inc
mov
aas
int3
jae
mov
add
pop
mov
int3
loopne,pn
add
adc
or
and
inc
push
shlb
bnd
popf
jge
sub
fisttpl
cli
push
in
jno
xchg
lock
jae
cwtl
gs
and
mov
push
sbb
and
jge
pop
or
add
xchg
push
jo
outsl
sub
cmp
sub
sub
cmp
jo
or
jne
jnp
adc
insl
xchg
gs
insl
outsl
mov
mov
sti
jno
outsl
and
cmp
fsts
or
jae
in
push
or
or
repz
repz
jmp
out
outsl
lock
push
jmp
jbe
push
out
loopne
ljmp
fcoms
std
subl
lods
or
pushl
js
out
mov
push
push
mov
cli
cmpsb
push
sbb
insl
loopne
clc
jge
xchg
xor
lods
mov
add
pop
push
add
or
cmp
jge
outsl
sbb
mov
aas
xlat
out
jg
sti
imull
mov
in
adc
loope
sahf
pop
stos
xor
push
jle
in
or
sahf
add
or
lods
into
push
loopne
or
adc
push
mov
pop
jae
jmp
push
jp
mov
cmp
js
incl
in
pop
std
jnp
and
jmp
bswap
int3
or
and
cli
push
xchg
push
fists
jg
sti
out
clc
sbb
shl
adc
aas
shrl
jns
out
movsl
lahf
xor
out
int3
nop
push
push
add
insb
adc
push
mov
mov
jno
add
sub
mov
out
pop
mov
push
push
inc
lods
xchg
rcrl
pop
or
add
adc
fistpll
push
lea
and
rorl
adc
sbb
mov
sti
jnp
cmp
bt
loope
mov
ljmp
xor
push
xor
mov
adc
fbstp
mov
push
pop
xchg
repz
outsl
outsb
pop
jae
push
out
jbe
jbe
repz
inc
int3
jo
cmpsl
in
frstor
sub
stos
insl
ret
and
jnp
adc
outsb
aam
mov
sqrtps
out
fnstcw
addr16
xlat
ret
sahf
shrb
fs
xchg
adc
rcrl
int
push
inc
or
lock
sub
xchg
mov
sbb
xchg
bound
adc
jmp
clc
add
xchg
in
in
add
push
cmovbe
xchg
test
jecxz
jno
int3
out
sub
adc
arpl
add
mov
sub
inc
insl
jecxz
xchg
jb
negb
orl
adc
adc
addl
iret
adc
cmp
iret
lock
jp
add
mov
push
jp
aas
mov
push
popa
or
popf
xlat
pop
mov
xchg
sti
into
arpl
mov
daa
inc
in
sub
dec
jb
mov
ss
mov
ret
mov
and
mov
xchg
ret
in
pop
js
and
mov
aam
or
icebp
push
in
repz
sub
push
mov
lock
mov
out
sbb
cmpsl
ljmp
ljmp
push
xchg
xchg
repz
pop
push
adc
jmp
sti
sar
loopne
mov
mov
or
add
fwait
xchg
out
lock
and
addr16
add
enter
mov
stos
push
xor
call
iret
out
add
pop
jb
adc
aas
jge
lea
inc
enter
mov
add
and
add
cmp
cmp
mov
jmp
xor
xor
enter
test
test
pop
fistpll
add
repz
lahf
fistpl
adc
mov
adc
jmp
push
pop
pushf
xchg
jb
and
sti
call
test
inc
loop
cmp
push
mov
sbb
lods
jmp
xorl
cli
adc
jle
insl
lret
xchg
roll
jge
jg
shll
pusha
scas
bound
add
mov
mov
xchg
jae
in
cmpb
in
pop
or
test
movmskps
cmp
add
push
push
cli
bound
arpl
adc
cmpsb
or
pop
push
push
mov
push
gs
cmp
call
jns
inc
lret
clc
ret
sbb
push
or
adc
jg
mov
push
pushf
lods
cmp
cwtl
shlb
add
mov
sti
pushf
ret
push
mov
ret
inc
xchg
fadd
cmc
cmp
sbb
cltd
cmpl
lock
lock
inc
out
cwtl
fld
jno
mov
pop
jae
or
cmpsl
outsb
fmuls
les
cld
fnsave
mov
shr
das
sub
js
mov
insl
sbb
adc
mov
fucom
sub
mov
out
jbe
mov
sub
enter
repz
fildl
pop
add
mov
ficompl
mov
out
lock
sbb
add
fucomip
inc
pushl
mov
push
pop
js
jmp
mov
mov
adc
and
push
add
loope
mov
dec
ror
push
shrl
lcall
mov
jo
sahf
adc
sbb
sahf
and
cmp
cld
xchg
sbb
icebp
movsb
stc
test
add
cmp
out
shll
or
in
loop
jae
js
imul
cltd
add
cmpl
mov
cld
adc
or
mov
sti
or
push
shll
jl
push
popf
or
sub
add
adc
mov
enter
mov
repnz
jne
out
dec
jae
sahf
fcmovnu
jnp
cmp
in
repz
xchg
push
push
pop
adc
addr16
repz
fwait
adc
xor
imul
cmp
cmp
int3
out
iret
shll
subb
xchg
lret
inc
orb
call
dec
icebp
clc
outsl
imul
pop
into
scas
mov
clc
repz
sar
int3
pop
pop
mov
push
mov
jge
call
das
stos
movsb
sti
int3
push
jae
nop
add
adc
jmp
push
test
ja
inc
sbbb
imul
out
cmp
call
add
negl
jno
fmuls
cltd
fnstsw
adc
dec
adcb
lds
aad
cmc
mov
mov
lods
and
add
adc
movsl
icebp
mov
fyl2xp1
mov
test
adc
movsl
repz
mov
stos
sbb
mov
scas
adc
divl
cmpsl
and
add
adc
movsl
lock
fdivr
mov
test
fdivr
mov
lods
adc
les
add
adc
movsl
repnz
mov
stos
pop
fdivrp
mov
scas
pop
divb
cmpsb
mov
push
movsl
jno
cltd
pop
jns
mov
imul
lea
insl
sub
test
gs
xchg
push
movsl
jae
fwait
pop
jnp
mov
imul
pop
jg
dec
movsl
outsl
das
xchg
push
ja
xchg
addr16
mov
push
movsl
jo
cwtl
pop
js
mov
push
cmp
dec
movsl
insb
sub
push
je
test
and
bound
jb
lcall
push
sahf
pop
jle
mov
outsb
cs
push
jbe
xchg
movsw
mov
and
pushf
sbb
pop
sahf
movsl
push
cltd
sbb
movsl
sbb
pop
xchg
movsl
push
xchg
adc
movsl
adc
jle
mov
mov
mov
add
pop
xchg
in
add
jl
jg
jle
jns
clc
js
jnp
jp
jne
hlt
je
ja
jbe
jno
lock
pushf
bnd
out
insb
out
outsl
fucom
xchg
in
imul
jmp
out
out
in
popa
loopne
jecxz
loop
loope
pop
fcompl
ficomps
movsl
pop
fcomps
pop
ficompl
movsl
push
aam
xlat
push
push
aad
push
rclb
push
rclb
movsl
dec
int3
dec
iret
dec
into
dec
int
dec
enter
lret
movsl
inc
les
movb
inc
rolb
ret
movsl
cmp
mov
mov
cmp
mov
mov
mov
xor
xor
scas
das
scas
lods
movsl
sub
sub
cmpsl
daa
cmpsb
es
into
mov
xchg
sbbb
sbb
xor
sub
sbb
call
or
pop
xor
xchg
insb
rcrl
outsl
add
add
sbb
out
lods
data16
sbb
adc
adcb
repz
mov
mov
mov
std
jl
sar
cmp
test
out
fiaddl
out
les
repnz
lcall
push
mov
adc
mov
xlat
jns
fwait
pop
lea
lods
cmp
mov
ss
or
outsl
add
lcall
out
jns
int3
jmp
cmp
sub
jb
pop
int3
xchg
add
xor
pop
in
mov
popa
jbe
jne
inc
shrl
sbb
lods
jge
hlt
test
xor
outsl
adc
aaa
mov
lcall
fstl
aas
int
imul
inc
cli
scas
hlt
nop
repnz
dec
shlb
push
fistpll
push
and
cli
jo
mov
adc
fisubs
cmp
xchg
add
xor
adc
shlb
sbbb
mov
pop
out
out
imul
adc
repnz
imulb
in
xor
and
inc
in
cmp
adc
clc
xor
dec
mov
stc
repz
add
jo
gs
push
and
aam
jl
cmpsl
jns
sahf
daa
mov
imul
add
add
sub
orl
lock
cmp
pop
into
mov
jl
cmp
pop
xchg
icebp
mov
stc
test
jo
cmp
test
add
xchg
jl
adc
adc
popf
orl
ds
lahf
cmpb
jns
lret
sbb
xor
je
icebp
jae
insb
pop
mov
arpl
rcl
arpl
insb
outsb
shrl
rclb
xchg
lret
es
aam
mov
int
andl
shrl
inc
out
sbb
pop
push
jae
iret
cmpsb
sarb
dec
cmc
xchg
rorb
and
adc
sbb
icebp
nop
movsb
sbb
sti
dec
xchg
adc
push
out
movsl
incb
xchg
mov
iret
mov
push
sbb
dec
js
xchg
and
push
add
test
cld
xchg
sbb
popa
or
cli
push
or
xchg
insl
xchg
call
xchg
adc
add
arpl
pop
add
cltd
xchg
js
jg
and
sbb
sub
inc
cld
xchg
inc
aas
xchg
rcrl
fistpl
jae
je
inc
adc
sbb
jge
fists
dec
pop
push
xchg
mov
sub
fwait
dec
daa
push
and
negb
clc
mov
nop
in
adc
adc
repz
jecxz
jne
xchg
xchg
xchg
fldcw
aam
or
mov
adc
xlat
fisttps
ljmp
jae
adc
ljmp
pop
test
jmp
sbb
shrl
sahf
hlt
mov
fwait
addr16
lods
repz
js
icebp
fildll
push
loope
push
int3
mov
icebp
lcall
pop
xrelease
mov
pop
repz
push
js
mov
cmp
push
es
es
xchg
xlat
mov
gs
fldenv
scas
lods
pusha
dec
fs
adc
fdivrp
push
and
js
adc
bound
xchg
xchg
in
enter
jle
lds
pop
cmc
xor
jmp
out
insl
insb
lcall
in
jl
mov
jmp
in
push
iret
mov
insb
insl
pop
jmp
mov
data16
xchg
jno
sub
jmp
sub
cld
sarb
sahf
adcb
lret
fdiv
pusha
das
in
gs
sti
gs
mov
gs
lret
mov
xor
cmp
aaa
jb
pop
fsubrl
sahf
sub
pop
andb
or
addl
outsb
push
loop
sbb
clc
aam
or
int3
jmp
out
imul
mov
push
mov
add
dec
sbb
sbb
outsb
jge
call
push
or
adc
jae
push
fwait
adcb
adc
jne
xchg
sahf
sbb
jae
or
leave
push
fnstsw
loopne
dec
sbb
push
icebp
xor
jb
xor
push
adc
pop
xchg
add
std
outsb
jge
jne
adc
mov
adc
push
stc
test
aaa
lret
or
jge
repz
adc
icebp
xor
sbb
pop
call
ss
jg
insb
adc
sbb
imul
lds
jmp
andl
into
jne
cmp
mov
jbe
cwtl
cmp
je
mov
mov
outsl
push
sbb
cmp
lods
addr16
repz
mov
mov
push
std
add
mov
mov
mov
iret
mov
adc
into
sbb
xchg
aad
adc
stc
jns
mov
jmp
je
fdivrl
sbb
jno
add
or
js
push
jmp
adc
jmp
int3
lods
jne
ds
jb
or
cmp
jge
ss
jge
std
sti
or
pop
cs
jo
jne
push
mov
jecxz
push
ds
aad
jo
mov
mov
stos
jge
xlat
add
into
adc
outsl
sbb
idivl
or
xorb
imulb
sub
xor
or
sbb
ficompl
adcl
push
add
or
xchg
push
data16
test
ficomps
imul
lahf
jno
shll
dec
enter
jmp
or
mov
mov
fcom
frstor
or
mov
push
or
out
dec
push
testl
xchg
sbb
push
in
iret
js
pop
out
into
inc
stc
jne
push
sub
shr
repnz
cmp
imul
push
or
cld
sbb
mov
call
sbb
mov
sbb
loope
add
xacquire
roll
sbb
iret
ss
dec
pusha
jns
jns
fnsave
sbb
mov
insl
ljmp
sbb
incl
pop
cli
push
xchg
sbb
popf
scas
pop
lcall
and
mov
cmp
jo
jecxz
mov
insb
xchg
dec
push
mov
jge
popf
ficoml
jb
rcll
pop
add
xor
aas
js
lea
enter
in
jae
insl
fsubs
xor
outsb
lcall
xchg
aam
jno
push
lock
cmp
bound
mov
in
inc
repz
test
adc
lcall
push
std
jp
out
add
add
fucomi
add
mov
mov
out
xchg
mov
pushf
jp
out
in
sub
push
lods
jle
lcall
stos
notl
mov
rcrl
pop
jg
jg
push
pop
stc
sar
std
or
sti
push
add
outsb
mov
lods
out
rorb
pop
sbb
insl
mov
push
add
mov
add
mov
cmpsb
hlt
jne
nop
stc
push
mov
sahf
jns
xchg
popf
cmpl
push
enter
dec
mov
arpl
push
xchg
jo
pop
scas
pop
adc
popf
call
cmpsl
clc
fs
lock
mov
lds
ror
or
dec
jo
sbb
jbe
add
repnz
imul
cmp
aas
aam
sahf
dec
gs
inc
jmp
and
and
jae
xchg
jl
push
leave
imul
add
icebp
fcomi
outsb
ret
dec
jecxz
outsb
fmul
and
inc
sub
sub
sbb
out
cmpb
cld
sahf
repz
mov
adcl
jne
and
jns
sbb
clc
jmp
or
or
xor
lods
cld
mov
lea
jae
xchg
repnz
repz
pop
in
xlat
test
data16
cld
mov
xlat
loope
xor
lret
xchg
cmp
jl
mov
ljmp
ja
ret
push
or
or
jecxz
jge
jle
mov
je
inc
bound
push
mov
mov
and
push
sbb
mov
push
lcall
ss
adc
lea
in
sbb
cwtl
es
mov
leave
jge
sbb
frstor
popf
mov
and
jl
out
popf
xlat
and
push
sbb
mov
cltd
fisttps
in
sbbb
mov
lahf
lret
mov
incl
pop
and
addl
add
cltd
pop
and
or
xchg
sbb
push
fistps
adc
clc
fwait
sbb
lock
sbb
mov
cld
and
jne
sahf
lea
push
fstpl
pop
cmpsb
mov
add
xchg
add
pop
mov
adc
mov
xchg
pop
add
sbb
lea
lea
jl
adc
add
xchg
dec
sbb
lea
shll
xchg
adc
jge
mov
icebp
lea
cltd
sti
lea
adc
sbb
add
adc
add
pop
or
enter
add
pop
push
sbb
or
push
mov
fwait
test
dec
lods
nop
lea
mov
pop
fbstp
mov
xchg
and
repz
cld
push
fbld
cwtl
int
lea
aad
add
mov
sbb
sbb
mov
mov
sahf
or
iret
gs
cltd
out
or
sbb
add
jmp
gs
test
xor
or
and
jmp
xchg
and
or
vmwrite
adc
outsl
cli
mov
add
and
je
add
pop
out
or
pop
sti
jae
dec
adc
js
mov
sti
dec
or
add
jnp
adc
test
add
imul
push
scas
stc
test
mov
mov
and
mov
frstor
sub
and
sbb
push
rclb
cwtl
cld
icebp
mov
popf
fstl
lea
pop
fildl
bound
lea
lods
mov
xorl
adc
xchg
pop
repz
mov
lea
lea
in
fildl
nop
call
frstor
add
push
push
sbb
mov
adc
aad
push
cli
fwait
sbb
push
pop
sbb
push
push
nop
lea
sbb
add
test
xor
pop
pop
mov
std
repz
inc
pusha
fdivp
aad
jge
jle
sbb
lea
dec
lret
mov
jecxz
lea
adc
loope
cltd
icebp
sbb
mov
andl
sbb
xor
stc
or
nop
lea
dec
or
lea
push
sbb
or
mov
mov
in
fstl
adc
adcl
adc
sbb
mov
xchg
adc
fiadds
fistl
pop
in
xchg
fst
xor
inc
jmp
sbb
jns
sub
jl
mov
sbb
xchg
xchg
or
lock
add
sbb
mov
push
add
or
jne
pushf
shll
adc
adc
rcrl
sub
add
nop
adc
out
iret
lea
push
rorl
add
dec
rcll
or
push
jmp
mov
pop
sti
nop
pop
and
add
adc
push
adc
lea
mov
push
mov
loope
add
adc
jb
mov
sbb
lea
je
fists
ja
js
or
out
lea
icebp
jl
out
cs
fimuls
add
lea
lods
jmp
clc
add
shll
add
pop
dec
std
pop
adc
fstl
adc
iret
and
and
loopne
push
mov
pop
pop
mov
push
or
lea
or
lea
fsts
jns
in
cli
out
mov
stc
lea
mov
add
and
lret
sbb
outsl
mov
fcoms
adc
adc
mov
and
mov
adc
cli
and
rcl
mov
notl
filds
popf
and
std
add
sbb
lret
sti
repz
out
mov
pop
add
fstp
add
in
add
pop
pop
pop
or
sbb
jmp
aad
mov
arpl
mov
ret
lea
aad
add
lahf
mov
sbb
mov
mov
lret
cli
pop
adc
xlat
pop
sahf
sbb
jecxz
mov
jmp
rolb
lea
lcall
sbb
pop
pop
push
adc
pop
lret
cltd
sbb
cli
sar
loope
pop
and
dec
stos
pop
mov
and
xor
adc
pop
and
pop
mov
xor
shl
sbb
pushf
jns
push
stc
mov
add
aam
and
mov
push
out
xorl
mov
xor
popf
fwait
mov
out
jecxz
std
dec
push
js
cltd
sti
clc
jnp
mov
lcall
push
jp
pop
dec
mov
xchg
fwait
leave
sbb
dec
add
or
jp
out
leave
jp
pop
rcrb
or
lods
repz
xor
aad
or
or
sbb
sub
sbb
mov
repz
lock
mov
pushf
stos
mov
sbbb
addb
mov
out
push
mov
clc
incl
insl
mov
jmp
mov
sbbl
stc
sti
push
mov
iret
popf
mov
in
jns
push
mov
insb
hlt
and
lahf
insb
sti
fstpt
inc
not
adc
jp
js
inc
lret
call
cs
out
sbb
cltd
inc
sbb
loope
or
sbb
fstpl
jbe
cld
or
repz
loope
jg
insb
dec
ret
adc
test
adc
push
into
mov
jmp
sbb
pop
mov
mov
icebp
push
lcall
outsb
xor
cmp
adc
les
lds
xchg
inc
mov
inc
lea
sahf
push
out
inc
dec
jmp
xchg
loope
insl
ljmp
push
outsl
jbe
repz
jo
icebp
lcall
push
sbb
sbb
test
cmpsb
clc
xchg
jbe
int
inc
mov
inc
add
int
jp
rcr
sub
jae
out
mov
sar
ss
call
sub
aaa
xchg
dec
cmp
mov
and
jge
mov
push
dec
xchg
sti
inc
add
mov
pop
adc
outsl
push
stos
adcb
adc
xorl
insl
sbb
jecxz
adc
add
adc
xchg
sbb
xor
dec
adc
xor
icebp
out
lods
stos
dec
rcll
int3
jp
fiaddl
jo
xchg
add
rorl
jecxz
add
cmp
push
ret
adc
fisttps
xor
int
cmp
cmpsl
xor
outsl
mov
sub
ljmp
rcl
cwtl
jb
test
adc
pop
adc
jno
sub
fs
outsb
test
lock
std
call
or
adc
inc
mov
xchg
insb
enter
push
mov
arpl
icebp
stos
sbb
pop
mov
lock
push
push
ret
xor
push
lods
cltd
in
icebp
orl
mov
jge
dec
adc
jl,pt
leave
nop
int
sti
mov
ds
repnz
outsb
cmp
mov
jbe
jle
lret
in
push
int3
insb
mov
in
cmp
bound
cmpsl
daa
inc
cmpl
cmp
or
popl
add
ret
stc
sub
mov
icebp
sub
cmc
insl
sbb
fs
pop
xor
push
sbbl
pop
stos
out
ret
or
sbb
rcr
adc
ljmp
sub
stos
out
dec
enter
jp
push
je
fsincos
mov
cmpsb
sub
pop
insb
jecxz
push
je
shll
xchg
lret
sti
outsb
xchg
jo
repz
mov
movsb
xchg
arpl
add
jmp
clc
out
ljmp
sub
adc
std
int
outsl
cmp
aas
mov
repnz
and
fldl
loope
shl
mov
push
adc
xchg
in
loop
mov
imul
add
fisttpl
adc
add
add
add
or
push
aas
cmp
mov
jae
jbe
fs
mov
es
jo
cmpsb
fldt
ljmp
idivl
aas
pop
cmpsb
fsubr
lods
add
jnp
push
jp
nop
insl
ljmp
and
cmp
push
mov
or
add
push
or
jmp
inc
das
jne
pop
or
test
nop
push
pop
or
or
sub
int
pop
repz
jl
scas
mov
add
lahf
push
mov
out
inc
test
movsb
gs
scas
lds
nop
mov
jne
cmovle
rcll
xor
stc
pop
jl
imul
add
fsubr
out
push
jns
test
pop
or
shll
jmp
mov
jne
sub
scas
out
sub
or
imul
aas
push
out
in
pop
fisubrl
je
aaa
out
pop
sub
icebp
xor
cld
mov
fcoms
out
pop
sahf
push
xchg
aam
pop
or
js
sbb
cmp
jl
push
ja
cmp
sub
jle
push
push
adc
in
imul
retw
fdivrs
mov
sub
mov
mov
pop
lods
dec
ja
mov
dec
jno
mov
lahf
and
imul
lahf
pushf
repz
sbb
mov
pop
sahf
adcl
adc
adc
pushf
xorl
mov
or
and
sbb
cmc
sbb
lahf
lcall
ss
shr
adc
sbb
std
adc
or
adc
insl
aad
xchg
push
pop
lahf
or
xchg
out
push
dec
lahf
int
nop
xchg
adc
in
mov
mov
xchg
lahf
icebp
cltd
sbb
or
sbb
mov
cltd
sbb
cltd
mov
mov
setg
xlat
clc
xchg
mov
sti
loopne
xchg
jnp
or
rcrl
lahf
stc
cltd
mov
jne
or
hlt
add
cld
inc
test
in
xor
or
xchg
sarb
adc
rol
dec
lods
std
fistps
mov
repnz
repz
cmp
icebp
repnz
lahf
jb
and
push
lahf
aas
push
push
mov
lahf
cmp
push
lahf
mov
push
and
and
mov
and
push
sbb
push
or
lahf
push
aam
aas
sbb
push
xor
pop
out
in
xchg
push
push
inc
pushf
std
int3
pop
repnz
push
aas
lahf
lahf
push
sub
dec
lds
sbb
push
push
lahf
fwait
push
or
ret
or
push
lahf
out
xchg
push
lahf
pop
mov
lahf
cmpsl
mov
sbb
addr16
fstpl
andb
or
mov
cltd
and
push
sbb
adc
shl
rcll
dec
mov
pop
andl
out
push
lahf
sbb
stc
jb
cwtl
lahf
icebp
mov
pop
out
inc
fwait
sbb
sbb
outsb
and
push
popf
xchg
pop
push
mov
inc
xchg
cwtl
mov
and
lahf
insl
cltd
xchg
or
adc
in
insb
add
cmp
cwtl
mov
and
xlat
cmp
lahf
in
outsl
add
xor
mov
jnp
cli
and
xlat
jp
mov
repz
in
jae
mov
mov
pop
js
mov
icebp
or
or
sbb
xor
sbb
mov
xlat
jne
add
pop
mov
hlt
loopne
xchg
repnz
jge
push
fstpl
rorl
lds
cmp
sub
and
lret
sbb
les
lahf
cld
mov
pop
jl
lds
jl
or
adc
in
call
add
sbb
and
ljmp
adc
sbb
ret
mov
push
lds
sbb
push
push
lahf
stos
in
test
xchg
clc
xor
or
mov
push
loope
out
lds
cli
add
push
popf
mov
fnstenv
cmp
or
mov
mov
andb
mov
test
xchg
mov
call
mov
and
adc
and
jl
and
mov
mov
add
mov
cmc
xchg
sbb
sbb
mov
push
sbb
mov
andb
pop
add
add
out
test
add
push
jmp
pop
cmp
lea
or
dec
fnsave
iret
icebp
fsubrs
push
call
mov
sbb
or
push
mov
repz
lea
outsl
adc
pop
dec
cs
mov
push
test
pop
jmp
insb
sbb
bound
fwait
add
daa
jge
jmp
sbb
clc
mov
inc
mov
sub
dec
cs
mov
out
mov
pop
scas
sarl
inc
jb
je
push
push
scas
ja
xor
fcomp
sbb
jns
push
push
xchg
jb
int3
dec
dec
fildl
rol
inc
jl
shll
jb
aam
lcall
je
jne
cltd
call
cwtl
jb
dec
repz
sti
or
imul
xor
mov
xor
jns
fdivr
adc
jecxz
in
rcr
test
or
cld
movsl
gs
roll
adc
or
add
push
jl
sbb
out
lods
hlt
jge
std
ds
adc
addl
mov
inc
push
addr16
fstps
imul
gs
inc
cmp
std
stos
xlat
shl
ss
jg
add
adc
sahf
sub
xlat
in
mov
push
negl
call
icebp
ret
dec
lret
nop
push
dec
imul
test
outsl
cmpsl
gs
addl
cli
jge
lahf
cmp
imul
mov
push
test
mov
pop
movsl
int3
sub
hlt
out
cmp
test
or
xchg
inc
adc
lock
aaa
rcl
mov
mov
repz
iret
dec
mov
sub
clc
fsubrs
mov
and
aas
lea
push
or
ret
sbb
lock
and
stc
or
roll
ljmp
push
push
into
popa
add
fwait
add
outsl
stos
xchg
imul
xchg
xchg
push
or
xchg
xchg
mov
jns
hlt
push
mov
lret
push
mov
cli
xchg
sbb
test
int3
jmp
xchg
stc
dec
mov
cwtl
sbb
test
enter
fildl
or
addr16
add
mov
push
in
and
mov
lsl
add
repnz
lods
stos
test
xchg
mov
cltd
in
ds
movsl
cmpsb
loopne
jae
mov
push
cmp
mov
inc
and
xor
movsl
test
gs
jmp
hlt
repz
les
inc
xchg
mov
sbb
xor
lds
mov
out
sbb
stos
movsl
arpl
leave
pop
lods
mov
test
enter
lods
fwait
jmp
mov
fiaddl
fs
mov
mov
push
movsl
adc
movsl
test
xchg
xchg
leave
fstpt
xchg
std
mov
push
fdivr
pop
and
sub
mov
imul
and
fiadds
mov
push
and
cwtl
int
mov
aad
adc
pop
xchg
vandnps
jmp
test
rorl
into
fwait
push
neg
or
mov
in
cli
pop
push
insb
or
cwtl
sbb
ficoms
sbb
pop
mov
sub
lock
popf
adc
aaa
lret
push
xor
or
icebp
enter
xchg
test
jo
cli
sub
cmp
pop
dec
or
je
fisttpl
adc
clc
push
fsubs
mov
sbb
jecxz
aaa
lahf
adcb
xorb
dec
test
clc
mov
mov
xlat
fisubs
or
and
xchg
jmp
fistps
add
add
pop
data16
mov
pop
fdivl
adcl
orl
ljmp
cmpsb
pop
ret
sbb
popf
loope
mov
mov
roll
je
imul
icebp
lds
in
lock
add
in
jecxz
mov
les
jne
mov
push
andb
fwait
and
movsb
mov
in
jnp
test
and
es
cmpsw
sbb
pushf
cwtl
mov
mov
jecxz
aad
lcall
popf
pop
rclb
sub
popf
frstpm(287
push
mov
or
adc
std
push
or
and
in
xchg
xchg
in
and
xchg
push
std
push
cwtl
popf
fwait
xchg
push
and
mov
inc
aad
decl
mov
fnstsw
sbb
movsl
stos
cmp
inc
xchg
lds
nop
insl
movsl
pop
xchg
mov
mov
in
jae
lahf
add
popf
inc
cmp
mov
adc
cltd
push
lea
in
pushf
mov
add
pop
movsl
test
outsb
movsl
cmp
popa
xchg
movsl
and
xchg
xchg
rorl
and
movsl
fsubl
movsl
roll
movsl
incl
in
and
xchg
dec
movsl
mov
movsl
adc
popa
push
sbb
adc
mov
shrb
dec
movsl
retw
adc
movsl
nop
push
jl
movsl
fisttpll
es
or
adc
test
or
push
mov
and
mov
xchg
push
mov
out
pop
loope
and
push
xchg
xchg
add
outsb
movsl
pop
adc
xchg
in
das
and
and
xor
and
and
pop
in
test
xchg
es
xchg
sub
stos
repz
and
es
sbb
popf
es
es
in
es
xchg
and
dec
fisubs
es
data16
xor
popf
jecxz
es
mov
lock
dec
in
int3
sub
lahf
push
mov
push
add
push
test
stos
pop
arpl
jp
in
clc
mov
out
xchg
sahf
movsl
es
addr16
sbb
test
jle
cmpsb
jg
movsl
cmpsb
pop
inc
adc
movsl
movsl
sub
movsl
jg
movsl
cmpsb
pop
in
sbb
movsl
movsb
sti
inc
pop
inc
movsl
daa
das
and
movsl
es
sbb
movsl
sub
in
or
pop
movsl
es
push
es
jge
test
movsl
cmpsl
jge
movsl
es
call
jge
or
xchg
cmpsl
orb
in
pop
movsl
sub
cwtl
in
xor
cmpsb
mov
and
test
xchg
popf
xchg
movsl
mov
mov
sbb
sub
movsl
movsb
jnp
movsl
push
movsl
sub
rcll
add
lcall
inc
movsl
stos
adcb
fmul
rep
xor
mov
data16
adc
movsl
daa
insb
xchg
movsl
mov
pop
mulb
test
adc
in
and
and
sbb
movsl
cs
sub
es
cld
leave
movsl
int3
test
out
es
xchg
inc
jecxz
scas
push
pop
es
sti
push
push
mull
movsl
cld
adc
movsl
es
and
mov
xchg
and
in
xor
xchg
inc
movsl
cmp
lds
movsl
sub
and
movsl
daa
or
in
pop
inc
movsl
cmpsl
orb
push
inc
es
xchg
xchg
movsl
es
inc
movsl
es
lock
cmpsb
xchg
mov
movsl
cmpsl
xchg
in
movsl
imul
ret
xchg
es
xchg
xchg
movsl
es
lea
in
popa
pop
push
jnp
movsl
jp
ret
lds
rol
es
push
es
sbb
dec
push
movsl
cmpsb
mov
sub
or
leave
push
pop
movsb
ss
sub
movsl
es
push
es
fwait
sub
xchg
std
popf
inc
and
inc
push
mov
in
vunpcklpd
mov
push
mov
in
repnz
xchg
mov
add
stc
pop
sbb
test
sbb
xchg
mov
add
pop
adc
int
loope,pt
push
add
adc
in
sbb
fwait
add
mov
sbb
adc
add
cli
sarl
out
jecxz
aas
xchg
mov
stos
adc
call
ret
mov
popf
add
xchg
mov
out
add
lret
loope
push
call
adc
sti
sbb
push
pop
nop
sbb
adc
add
pop
pushf
adc
add
rcrl
pop
mov
popf
add
pop
hlt
or
addb
pop
add
in
pop
or
test
xchg
stos
popa
mov
lods
pop
loope
in
adc
add
pop
mov
adc
mov
loop
add
notb
pop
xchg
sti
xlat
in
pop
out
pop
adc
adc
add
pop
pop
ficomps
adc
cltd
adc
imul
jno
xchg
rcrb
sbb
addl
xchg
pop
fadd
gs
test
lea
sub
pop
cwtl
jge
xchg
test
mov
jg
sbb
mull
mov
adc
pop
xchg
sbb
out
sub
xchg
lods
call
add
mov
add
pop
adc
popa
std
pop
sbb
movsb
aaa
movsl
and
cwtl
jge
inc
mov
ret
jo
pop
shl
and
xchg
mov
movsl
je
xchg
adc
call
mov
pop
lret
sub
adc
add
adc
jl
dec
mov
jg
movsl
shll
nop
pop
adc
add
pop
add
cmpsb
movsw
nop
inc
mov
out
pop
pop
pop
test
pop
orb
cmpsb
cmpb
nop
push
mov
out
pop
pop
and
push
test
pop
sbbb
and
and
mov
out
pop
pop
aaa
test
pop
andb
inc
pop
adcb
and
mov
out
pop
mov
out
pop
pop
sub
push
pop
xorb
and
and
mov
out
pop
pop
dec
test
xchg
test
pop
subb
push
and
mov
in
mov
pop
jmp
push
outsb
fcmovnu
mov
xorl
push
pop
and
jmp
sbb
or
ret
popa
int3
cmp
popa
mov
xchg
add
and
add
and
add
and
shll
ret
sbb
or
sbb
into
sti
or
pop
mov
out
jo
call
push
out
cmp
dec
icebp
inc
cmpsb
gs
repz
cli
sbb
sbb
cmpsl
out
lods
repz
je
add
imul
lock
push
add
push
sbb
jmp
call
icebp
xchg
and
dec
xchg
add
shl
add
pop
in
icebp
frstor
mov
add
outsl
fdivr
mov
mov
out
mov
mov
dec
xchg
jmp
out
add
adc
or
push
jno
fdivrs
enter
orb
imul
mov
imul
adc
repnz
mov
cmc
xchg
add
mov
ja
inc
negl
jae
mov
repnz
ds
test
inc
pop
mov
dec
ds
mov
or
in
gs
insl
jb
into
mov
pop
mov
mov
shr
mov
sbbb
pcmpgtw
ret
jg
sbb
sbbb
jmp
push
and
and
cmp
sbb
sbb
sbb
in
fiadds
sbb
sbb
sbb
sbb
movsl
mov
add
movsl
adc
xchg
imul
ficompl
and
mov
jb
pop
mov
dec
or
jecxz
fcomps
jbe
outsl
push
sar
cmp
adc
out
jl
push
dec
push
cmp
pop
push
sahf
sbb
pop
push
and
adc
add
mov
fimull
mov
in
les
push
xchg
pop
ret
outsl
in
stos
in
in
mov
movsl
sub
or
xor
pop
ror
mov
pop
sub
mov
xor
dec
popf
inc
out
movsl
out
xchg
inc
pop
push
dec
lds
movsl
imul
movsl
mov
aaa
outsl
jns
dec
movsl
stos
inc
arpl
pusha
cli
movsl
cwtl
vpunpcklqdq
in
lock
daa
scas
cmp
mov
and
xchg
and
push
out
test
movsl
push
insl
pushl
sahf
imul
cmpb
lahf
mov
push
movsb
roll
mov
fxch
add
push
and
mov
cmpl
mov
cmp
xor
mov
in
cmp
sbb
movsl
inc
dec
stos
lret
xchg
nop
ret
dec
movsl
cli
push
pop
les
sahf
push
inc
test
movsl
and
and
mov
sbb
adc
out
mov
movsl
xchg
jno
xchg
xorl
mov
cs
xchg
movsl
xchg
dec
lret
mov
movsl
push
mov
mov
movsl
jl
rcrl
pop
xor
data16
movsl
xchg
pop
out
repz
mov
stos
jns
pop
inc
xchg
mov
or
in
test
pop
and
fs
mov
and
jp
sahf
sub
movsl
xor
dec
sbb
loope
cmpsl
movsl
xchg
aaa
lock
mov
sub
mov
adc
sbb
mov
inc
movsl
mov
cmp
cmp
and
movsl
mov
andb
loope
dec
mov
push
xchg
movsl
mov
int3
cmp
add
mov
xchg
imul
push
sbb
xchg
dec
pushf
icebp
jp
arpl
push
popf
mov
mov
mov
mov
adc
mov
cmp
xchg
popa
lahf
stos
shld
lds
lret
aam
sbb
add
jmp
cmpb
add
push
push
fwait
adc
pusha
sbb
jo
jecxz
movsl
repz
in
outsl
lahf
shl
lods
in
movsl
pop
mov
es
pop
xchg
into
mov
mov
add
sahf
lods
mov
icebp
test
pop
cmpsb
shlb
sub
mov
out
xchg
xor
cmpsb
movsl
mov
cmp
in
push
movsl
mov
ss
and
fiadds
cmc
int
mov
imul
or
sub
sub
jp
shlb
jl
enter
mov
dec
xchg
stos
cld
mov
addl
test
in
out
mov
insl
add
adc
aad
outsb
xchg
or
push
mov
movsl
inc
sbb
adc
movb
fdiv
movsl
lret
mov
in
dec
notl
movsl
cmp
mov
mov
xor
je
test
test
scas
xlat
push
in
imul
and
pop
sub
jb
call
movsl
loopne
inc
pop
sbb
leave
mov
into
mov
or
mov
xor
xchg
ss
mov
loop
mov
sub
out
pusha
mov
aas
sbb
popa
mov
xor
in
cmp
hlt
in
in
in
sahf
movsl
mov
pushf
mov
jae
insl
into
lock
flds
out
sbb
mov
aad
mov
pusha
and
rorb
test
jb
sub
movsl
cmc
mov
xor
movsl
out
pop
cld
in
cmp
mov
movsl
mov
push
lods
test
dec
inc
inc
mov
ds
dec
push
adc
test
sbb
les
rclb
adc
and
aas
movsl
lea
sti
inc
jb
nop
movsl
pmulhuw
dec
leave
cld
jno
movsl
and
or
lret
push
ficomps
cmpsb
and
mov
xchg
lock
inc
js
push
adc
xor
loopw
hlt
cli
movsl
inc
fiaddl
rcrl
inc
sarb
mov
movsb
cmp
stos
xor
jg
into
mov
ds
bound
movsl
sar
nop
xor
stos
jmp
jnp
mov
dec
mov
fsts
jecxz
pusha
mov
sbb
push
xor
mov
or
push
push
adc
mov
movsl
xchg
aas
movsl
rclb
jecxz
xor
add
push
jno
dec
mov
xor
movsl
mov
jae
inc
mov
into
vcvttsd2si
add
mov
daa
in
ljmp
hlt
or
pushf
outsl
movsl
or
sub
add
enter
ret
in
das
in
insb
stos
sub
movsl
mov
imul
pop
or
mov
movsl
lcall
dec
mov
add
shrl
mov
xchg
inc
subl
add
lock
sub
ret
mov
fcompl
pop
pop
pusha
mov
movsl
rol
xor
aad
jmp
push
ficompl
cwtl
popf
movsl
mov
sbbl
out
mov
ja
popf
les
xchg
pop
movsl
pop
ficompl
fnstcw
mov
movsl
dec
mov
scas
pop
idivl
xchg
in
call
mov
dec
sti
push
push
jecxz
jne
movsl
sbb
sbb
mov
sbb
pushl
call
cmp
repz
movsl
jp
push
fcompl
xchg
movsl
mov
or
dec
scas
mov
sbb
loop
test
fwait
js
lea
out
icebp
movsl
push
mov
xchg
or
xchg
popf
xchg
mov
js
dec
movsl
pop
add
in
mov
mov
sub
daa
in
pop
mov
mov
pusha
inc
mov
sti
dec
test
sarl
xchg
test
movsb
dec
popf
loope
cmp
push
jle
jbe,pn
movsl
out
stos
add
xchg
movsl
jmp
sbb
sub
nop
sbbl
out
in
push
cmpb
mov
fiadds
lds
mov
movsl
adc
inc
hlt
mov
xorb
mov
sbb
leave
xchg
xchg
aaa
in
adc
pop
sbb
pusha
aad
sahf
lock
pop
cmp
dec
fcomps
inc
stos
test
jp
cs
fistl
sarl
fidivl
mov
add
mov
adc
push
mov
outsb
xchg
ja
montmul
cmpsb
add
sbb
mov
movsl
inc
inc
data16
mov
adc
jae
jg
cmc
enter
dec
movsl
xchg
jb
jecxz
adc
push
mov
mov
leave
mov
add
lds
addr16
hlt
enter
push
shll
jecxz
dec
int
adc
sub
add
test
movsl
xor
add
mov
pusha
add
inc
enter
cmp
cmp
mov
xchg
mov
pop
dec
pushf
nop
in
shr
push
pop
mov
ja
mov
adc
arpl
ret
adc
movsl
fnstcw
mov
movsl
movsb
gs
cmp
call
imulb
pop
mov
int3
xchg
in
xor
mov
lock
cmp
lcall
std
pop
data16
movsl
fs
fcompl
clc
mov
mov
xchg
mov
scas
sub
testb
mov
out
mov
or
add
in
movsl
sti
adc
mov
cltd
mov
gs
push
add
pop
repnz
pop
mov
inc
mov
cmp
push
sbb
sub
xor
sbb
pusha
fcompl
adc
enter
adc
mov
add
insb
jae
mov
hlt
out
mov
or
sub
mov
lods
movsl
push
sbb
mov
daa
adc
movsl
mov
shlb
jne
add
and
mov
and
out
movsl
and
jle
leave
jns
mov
sahf
mov
mov
and
mov
mov
pop
in
push
adc
push
rclb
iret
pushf
mov
shlb
sbb
dec
movsl
insl
xchg
shrl
sub
pop
jmp
add
nop
push
push
mov
jg
int
mov
scas
or
mov
cmp
pushf
add
int
loop
in
lds
stc
lcall
mov
inc
mov
mov
jecxz
jp
dec
cmp
cmp
aaa
mov
xor
adc
inc
mov
push
das
xchg
movsl
cmp
jg
nop
in
or
adc
push
mov
fwait
sub
xchg
movsl
adc
jmp
mov
imul
ljmp
mov
lds
in
sub
popf
stc
imul
mov
pop
push
jle
ljmp
push
cmp
mov
pop
out
lret
sbb
lahf
movsl
xchg
lock
jmp
movsl
pop
pop
add
mov
daa
mov
out
in
subl
sub
loop
call
in
and
mov
mov
and
insl
and
lock
test
movsl
repnz
mov
inc
sub
shlb
inc
repz
les
insl
mov
push
cmp
cmp
lcall
leave
mull
movsl
cld
cmpsl
jo
jle
popf
data16
fmuls
call
fnstcw
aam
ret
add
and
addl
add
or
adcl
xchg
fbld
sub
jb
movsl
mov
imul
movsl
dec
cli
ffreep
test
add
std
cmp
sahf
jns
test
hlt
ss
je
loop
bnd
stc
fldenv
sub
mov
andl
jbe
xchg
movsl
mov
dec
imul
dec
mov
push
push
add
insb
push
cmpsb
xor
jb
xor
or
adc
test
shrb
das
mov
loope
sub
sub
imull
lods
leave
sets
das
movsl
cmp
movsl
dec
and
or
adc
mov
and
test
pushaw
movsl
shrb
jp
add
fildl
movsl
cmp
movsb
pop
pop
sub
movsl
jle
cmc
ja
xor
mov
test
movsl
pop
xor
sub
pop
push
sahf
dec
ss
jl
mov
mov
repnz
mov
movsl
popa
enter
shl
mov
cmp
in
mov
movsl
ja
adc
movsl
xchg
fcmovnbe
ret
out
mov
movsl
jge
sbb
cli
jp
movsl
and
pop
inc
shl
cmp
mov
cltd
jg
push
inc
jge
int3
sahf
cmp
aad
mov
outsl
loop
adc
pushf
inc
and
push
outsl
movsl
fisttpll
add
pop
xlat
pop
rcr
dec
sti
rep
pop
test
adc
in
movsl
fldt
dec
out
ficompl
movsb
mov
fxch
mov
inc
mov
sub
push
movsl
mov
mov
movsl
xor
pop
scas
mov
sub
mov
pop
dec
nop
ret
repz
inc
xchg
stc
in
int
in
mov
movsl
popa
sti
mov
jns
arpl
call
mov
push
movsl
sarl
out
shll
into
jl
lea
mov
ret
sbb
push
mov
jnp
roll
ret
lea
add
push
push
movsl
pop
sarb
pop
xchg
and
in
push
lret
loopne
dec
sbb
push
enter
dec
lock
scas
jnp
jae
int
adc
inc
jbe
add
leave
mov
fdivl
adc
mov
hlt
inc
das
lcall
jb
movsl
leave
pop
rcrl
sbb
lock
or
jbe
xchg
inc
and
push
lds
and
mov
outsb
mov
leave
inc
mov
movsl
test
push
mov
push
jo
stc
push
jp
std
movsb
push
push
add
sbb
scas
imul
movsl
push
inc
jb
and
imul
outsb
mov
pop
fwait
sbb
roll
xchg
movsl
mov
adc
iret
movsl
push
ret
and
pop
movsl
dec
or
je
ficomps
dec
pop
jb
sbb
insl
or
movsl
mov
scas
pop
mov
jne
arpl
in
jae
mov
aaa
hlt
and
xchg
scas
cmpsl
push
xchg
mov
xor
stc
clc
lahf
mov
inc
jns
push
push
mov
add
jp
mov
outsb
jge
pop
popf
and
inc
addr16
sbb
push
xor
mov
fisubrl
xchg
xchg
andb
out
push
andl
sub
jno
push
mov
xchg
movsl
mov
sub
in
ds
xor
cmc
inc
and
movsl
lcall
add
ss
jmp
sarb
movsl
in
insl
pop
mov
insb
adc
push
sahf
sahf
lahf
push
inc
icebp
dec
push
jno
aad
xor
add
cmp
scas
xchg
mov
pop
adc
mov
mov
adc
leave
xor
movsw
cmp
pop
jmp
xchg
out
pop
mov
fstl
mov
das
stc
cmpsl
sti
movsl
cmc
add
mov
sarl
les
sub
scas
test
movsl
cmpsb
pop
leave
lsl
push
sahf
sti
and
xchg
mov
add
movsl
cmp
jnp
andl
aad
pusha
cmp
call
movsl
mov
into
std
xor
push
movsl
es
xchg
fnstenv
pop
ficomps
cs
test
notl
sub
movsl
push
dec
cmp
movsl
mov
xor
dec
cmpb
xchg
scas
es
xchg
test
popf
movsl
add
xor
fisubs
adc
jns
fnsave
mov
add
popf
pop
movsl
push
mov
mov
lahf
outsl
rolb
shll
push
inc
in
cmpsl
mov
movsl
cld
sub
ljmp
fsubr
mov
mov
jl
stos
scas
bswap
or
daa
mov
movsl
adc
fisubrl
test
mov
insb
jg
cmc
out
sub
cmp
xor
clc
fstpl
dec
in
add
mov
loope
cli
jo
jno
movsl
mov
aam
shlb
mov
dec
movsl
js
and
movsl
lea
dec
movsl
jmp
inc
sahf
aas
xor
iret
or
movsl
nop
ljmp
movsl
push
mov
ds
mov
movsl
sbb
cs
test
movsl
mov
scas
jg
movsl
jo
sub
movsl
mov
test
and
loopne
dec
adc
sub
sub
sub
push
sbbl
insl
call
jns
add
xor
xchg
jecxz
push
fcomp
adc
cmpsb
pcmpgtb
inc
sti
adc
sbb
fildll
xor
mov
dec
jge
in
mov
mov
inc
ljmp
movsl
je
jne
jge
pop
jnp
sub
jno
mov
ret
mov
or
adc
dec
pop
pop
ljmp
lods
xchg
jne
movsl
dec
push
xor
movsl
sarl
cmp
enter
dec
notl
inc
test
cmpsb
dec
xlat
xor
push
fwait
adc
adc
ficoms
repnz
imul
fldt
pop
mov
dec
movsb
lahf
xchg
push
pop
pextrw
xchg
add
mov
out
and
stos
xor
shlb
dec
int
in
mov
inc
repnz
movsl
push
push
movsl
fisubrl
popf
jns
les
in
stos
pop
sub
repz
push
pop
movsl
xor
or
leave
shll
pop
mov
jmp
inc
xor
mov
pop
push
dec
push
repz
movsl
int
test
inc
imul
mov
mov
outsl
pop
aaa
mov
stos
mov
jns
fisubl
cwtl
movsl
out
fsqrt
rep
rol
daa
movsl
lock
scas
sbb
and
xor
in
and
movsl
sar
push
idivb
cmc
andl
cmp
mov
daa
push
pop
sbb
shll
xor
cmp
pop
push
or
imull
cmpsl
lahf
movsl
ds
cmp
adc
jns
xchg
add
inc
mov
lret
stos
dec
cli
dec
ret
nop
movsl
les
leave
inc
push
sahf
adc
and
and
sbb
movsl
enter
adc
stc
icebp
lcall
dec
lret
xchg
mov
movsl
frstor
mov
cmp
or
stos
lret
xchg
push
inc
mov
cmp
mov
cmp
movsl
ficompl
fldenv
inc
and
movsl
pop
repz
pop
mov
testl
stos
adc
jno
arpl
test
movsl
and
xchg
mov
and
jp
movsl
int
ret
sub
leave
lods
cmpsl
inc
loope
lock
xchg
add
cmp
pushl
enter
popa
mov
cmpsl
inc
push
movsl
mov
ss
addl
cmp
insl
sub
movsl
cmpsl
dec
jb
add
and
movsl
xor
sbb
out
cmp
xchg
and
push
daa
mov
icebp
dec
xchg
mov
mov
mov
push
mulb
xor
mov
ror
jne
xchg
dec
inc
testl
aam
inc
dec
lret
mov
fwait
dec
mov
test
and
fwait
push
xor
sbb
sbb
test
mov
fxtract
shll
pop
popf
es
sbb
addr16
lods
sahf
test
push
mov
insl
movsl
and
cmpsb
sub
jp
in
jae
cmp
out
or
movsl
insb
and
cmpsb
mov
cmp
jb
aaa
cld
mov
fiadds
addb
loope
mov
or
pop
and
ss
clc
cmove
pop
jp
xchg
aaa
add
lahf
mov
popa
mov
cmc
shll
cs
inc
shll
jnp
out
faddp
add
leave
lods
stc
jno
movsl
repnz
adc
aad
icebp
mov
mov
inc
pushf
andb
jnp
adc
enter
mov
hlt
movsl
fdiv
dec
in
and
cmp
movsl
push
dec
mov
movsl
pop
je
into
xchg
push
repz
imul
mov
sbb
sub
pop
or
mov
pop
inc
cld
loopne
leave
in
sbb
into
sbb
xchg
movsl
or
mov
fucom
movsl
mov
dec
pushf
xor
xchg
loop
cmp
add
aaa
dec
movsl
test
popa
sbb
je
int
pop
xor
dec
orb
hlt
mov
sahf
in
movsl
in
repnz
negl
mov
lock
insl
jno
insb
movsl
cmp
out
ds
mov
jmp
and
sti
test
adc
sub
andb
into
cmp
movsl
cld
xor
ss
movsl
repnz
into
movsl
js
inc
inc
or
mov
sub
mov
js
pop
test
shlb
cmp
mov
mov
popf
lea
repnz
ret
movsl
jno
leave
ja
xchg
and
lret
pushf
mov
sbb
push
hlt
mov
and
pop
nop
movsl
xchg
mov
or
loopne
js
push
cmp
and
stos
cmp
push
movsl
loop
sbb
movsl
and
rolb
mov
xor
mov
sbb
into
out
movsl
pusha
fisubs
adc
cld
movsl
rcrb
js
nop
push
jmp
jno
sbb
jnp
dec
mov
adc
fldcw
xchg
pop
jne
in
sbb
xchg
movsb
xor
or
mov
ja
es
xchg
aas
hlt
pop
movsl
pop
jecxz
rcr
push
fwait
movsl
xor
add
dec
push
jno
mov
rorb
sub
pusha
adc
into
int3
add
push
sub
outsb
insb
mov
insl
add
mov
into
push
or
movsl
popf
or
adc
outsl
add
aad
das
in
sti
imul
or
ror
pop
adc
imul
aad
movsl
lcall
les
add
or
mov
xchg
addr16
or
mov
add
lds
ret
fsubl
movsl
rclb
xor
inc
lahf
xchg
lds
pop
add
idivl
mov
popf
out
movsb
lock
and
ja
movsl
push
aad
fwait
loope
xchg
pop
mov
fscale
movsl
inc
mov
movsb
mov
pop
call
movsl
mov
push
sti
dec
mov
jle
jecxz
sbb
sbb
sahf
fwait
mov
in
mov
mov
push
and
insb
push
out
mov
xchg
mov
pop
into
push
sbb
push
movsl
mov
push
mov
movsl
cmc
dec
adc
dec
lret
xchg
movsl
imul
xchg
add
dec
in
fwait
lods
and
add
icebp
mov
adc
dec
xchg
popf
xchg
movsl
jmp
sbb
int
cmpsb
pop
movsl
dec
gs
in
cmc
out
mov
cmpsb
push
daa
rolb
mov
aad
pusha
sahf
fmull
movsb
aam
mov
movsl
jmp
test
test
dec
sbb
push
movsl
into
cmp
jbe
ja
add
xor
shlb
lods
adcl
fucom
pop
or
mov
and
dec
inc
or
adc
je
push
fldcw
xor
and
sbb
out
xchg
cmc
not
pop
mov
adc
inc
fldenv
js
mov
dec
in
cmp
stos
inc
xchg
sbb
idivl
lods
movsl
fldt
movsl
mov
pop
rcl
popf
mov
add
add
test
xor
xor
repnz
mov
inc
fnstsw
jg
jae
cmp
movsl
xor
pop
movsl
jb
push
aad
mov
into
pop
leave
daa
mov
and
ds
movsl
fs
insb
push
enter
push
popf
movsl
pop
dec
jecxz
data16
adc
sub
or
mov
add
xor
jns
insb
mov
or
enter
movsb
cmp
mov
and
cmc
lea
xchg
sbb
lret
pushf
push
aad
shll
inc
ja
adc
fwait
xchg
adc
ret
arpl
jle
add
sti
dec
mov
vlddqu
ret
or
xchg
fsts
push
mov
mov
sti
lds
cmp
push
push
mov
jge
push
lcall
cmp
sub
pop
fcompl
clc
xchg
cmc
mov
and
xor
sub
dec
out
add
out
imul
add
nop
popf
mov
sti
in
cltd
xchg
push
push
movsl
mov
movl
mov
xchg
test
stos
mov
sbb
sub
nop
sbb
push
mov
imul
insl
cmp
movsl
test
je
push
in
jae
movsl
dec
out
stos
scas
movsl
js
mov
add
ljmp
sbb
faddl
adc
gs
movsl
mov
jecxz
mov
jne
jp
mov
and
sub
pop
out
movsl
mov
cwtl
jns
mov
lahf
pop
mov
xor
mov
popl
adc
cmp
pop
mov
stos
lea
adc
sbb
xchg
insl
dec
sub
cwtl
sub
movsl
cltd
dec
adc
push
push
add
sbb
cmpsb
push
nop
sbb
adc
in
bound
mov
pop
movsl
or
test
movsl
test
add
loop
jecxz
lds
std
jae
negb
outsb
mov
dec
mov
push
pop
movsl
cmp
cmp
cltd
cmpsb
aaa
push
or
fnsave
lds
adc
lock
adc
cmpsl
fs
push
mov
lds
jmp
les
cmc
add
sbb
stos
or
movsl
ljmp
mov
pop
lds
xor
movsl
push
mov
push
movsl
push
xchg
adc
jns
mov
imul
and
movsl
mov
data16
jle
lahf
movsl
and
out
lock
gs
jmp
jmp
and
aad
fs
out
bswap
imull
and
or
fucomp
movsl
loop
in
push
je
mov
or
and
in
jno
dec
repnz
cmc
sub
cmp
xor
adc
pop
data16
cmp
jge
push
lcall
dec
stc
ficomps
adc
cmp
hlt
movsl
dec
fdivrs
aaa
push
add
ljmp
addl
stos
mov
cmpl
stc
push
or
movsl
sti
sub
std
jnp
and
jp
movl
movsl
js
add
out
mov
out
ljmp
js
jne
movsl
das
loop
shll
ja
movsl
pop
or
lea
imulb
xor
dec
mov
mov
imul
xor
lds
dec
testl
in
mov
or
shlb
stos
jno
mov
mov
sub
dec
or
lods
insl
movsl
testl
cmp
out
es
and
adc
xchg
in
and
test
sub
lods
jecxz
xchg
sub
jp
stos
popf
movsl
sbb
sub
pop
movsb
stos
jle
aas
xor
mov
cmpsl
movsl
pop
pop
xor
xor
ss
push
pop
aaa
mov
mov
xor
insb
sbb
mov
mov
mov
aad
mov
mov
inc
mulb
xchg
movsl
ret
out
sbb
jge
sarb
inc
pop
add
mov
lds
movsl
dec
sarl
mov
movsl
cltd
sub
loop
outsl
cmpb
cmp
pop
mov
cmpsl
push
mov
adc
movsl
pop
repz
dec
pop
adc
call
out
xlat
or
gs
call
xchg
pop
mov
cld
aam
cmp
push
fistpll
mov
pop
ds
mov
scas
cmc
add
xor
movsl
and
loope
nop
dec
pusha
test
repz
in
int
popa
movsl
mov
cmp
pop
mov
shlb
lcall
lahf
dec
mov
aad
movsl
push
les
repnz
and
dec
mov
outsb
iret
dec
pmullw
xchg
push
sub
sbb
mov
shrl
movsl
ljmp
lea
sub
daa
mov
push
dec
lods
push
xchg
xor
push
push
lods
dec
loopne
test
popa
xor
dec
sahf
dec
test
movsl
pop
jae
inc
cmp
icebp
les
js
and
pop
xlat
mov
mov
lret
inc
movsl
adc
pusha
inc
hlt
divb
push
movsl
leave
jb
jae
popf
rcrl
movsl
scas
pop
lock
jp
mov
movsl
or
cmp
or
inc
xchg
fsubrl
inc
mov
xor
inc
leave
test
mov
mov
std
xchg
jp
pop
mov
push
movsb
pop
and
sbb
iret
test
inc
push
dec
imul
and
pop
mov
in
sbb
rorl
bound
ds
shrb
add
and
cmpb
sbb
shll
jb
enter
mov
movsl
or
scas
jbe
arpl
lods
mov
xor
cmp
add
pop
jle
movsl
mov
xchg
stc
movsl
xor
das
mov
xchg
icebp
lods
mov
push
add
ret
hlt
movsl
adc
or
movsw
jge
stos
inc
sub
pop
cmp
push
add
movsl
lds
mov
pop
xchg
nop
dec
mov
or
daa
adcb
movsl
stos
pop
fcom
add
stc
xchg
xchg
pop
push
data16
mov
data16
jecxz
movsl
aad
mov
stos
movsl
dec
leave
jne
fwait
ss
mov
out
mov
mov
insb
call
dec
icebp
inc
jno
and
incl
outsb
fldenv
cli
mov
xchg
pop
inc
xchg
movsl
jg
mov
mov
push
popa
xor
adc
data16
out
xchg
stos
test
sub
repnz
mov
das
lret
movsl
add
sti
sbb
mov
shll
shrb
les
add
leave
pop
sti
push
lcall
imul
and
xorl
insb
xchg
xlat
cmp
or
lcall
ja
cmp
xor
movsl
into
sti
es
stos
mov
gs
mov
mov
push
and
daa
test
push
xchg
sub
jmp
cmp
test
lret
xor
testb
xchg
cmp
cmpsl
xchg
popf
out
mov
add
pop
or
movsl
loopne
das
mov
dec
popf
mov
jbe
pop
adc
push
pop
popf
pusha
xchg
movsl
mov
mov
loop
and
shlb
shll
jge
mov
leave
inc
movsl
or
ljmp
xchg
lods
stos
movsl
cmp
daa
push
movsl
in
xor
adc
jle
test
in
pop
xor
insb
xchg
mov
cmc
xor
cmp
jbe
pop
lret
popf
mov
in
sub
add
sbb
mov
mov
in
and
mov
out
or
fwait
and
movsl
xchg
call
movsl
lea
dec
fs
sahf
inc
movsl
xor
fcomps
xor
rorl
xchg
mov
in
ljmp
cmc
in
push
movsl
call
push
shrl
adc
sbb
andb
cltd
idivb
and
mov
adc
test
mov
inc
pop
pop
or
dec
mov
sub
das
movsl
dec
and
mov
pop
lock
insl
mov
jecxz
or
fcmovu
push
mov
push
cmpsb
std
adc
gs
movsl
mov
cmpsl
fbstp
sbb
dec
or
mov
dec
mov
inc
pusha
popa
push
xor
imull
daa
movsl
sub
loopne
xchg
push
movsl
jno
ret
int3
out
movsl
dec
ds
inc
movsl
adc
ljmp
test
in
xor
sbb
mov
shll
cwtl
cmp
insl
cmp
enter
push
mull
dec
and
xor
movsl
pushf
ficoms
out
loop
repnz
mov
rorb
inc
jge
and
lods
dec
leave
mov
push
lahf
scas
fs
test
movsl
pop
cmpb
movsl
sub
jb
movsl
sarb
sbb
movsl
in
inc
jno
mov
and
jmp
cmpsb
sahf
jg
call
out
jp
dec
cmpsl
sbb
in
jl
mov
and
loopne
sahf
jbe
fistps
mov
mov
andb
mov
inc
and
les
mov
cltd
call
sbb
sbbb
popa
mov
ljmp
in
xchg
in
mov
sub
inc
push
xchg
and
and
and
sbb
data16
out
out
out
push
xor
xchg
push
xor
aad
repz
xchg
adc
xchg
sbb
adc
shll
mov
mov
aad
and
mov
mov
sahf
xchg
xor
stc
mov
push
and
popf
nop
sbb
mov
jmp
mov
push
push
sbb
daa
fistps
or
iret
pop
out
adc
negl
mov
add
pop
out
cmpsl
add
loopne
add
rclb
add
pop
lock
clc
sbb
pop
call
fcompl
sbb
in
adc
sbb
in
movsb
add
loop
add
ret
add
pop
repnz
cli
sbb
pop
ljmp
sbb
pop
out
adc
negb
mov
pop
add
pop
out
cmpsb
add
inc
adc
adc
add
cmp
mov
dec
pop
imul
pop
jge
cmp
pop
insl
adc
jne
xor
pop
adc
sbbl
adc
adc
add
cmp
mov
dec
pop
imul
add
aas
adc
adc
add
aaa
adc
adc
jnp
sarb
xlat
and
rcrl
roll
mov
add
roll
push
roll
pushf
les
pop
pop
roll
jl
add
roll
mov
add
add
sub
roll
xchg
les
push
pop
roll
je
add
roll
test
add
add
and
roll
mov
roll
add
inc
pop
roll
xchg
les
push
pop
roll
jb
add
pop
roll
lcall
jp
add
pop
roll
mov
add
roll
push
add
pop
roll
sahf
les
pop
pop
roll
jle
add
pop
roll
mov
add
roll
outsb
les
cs
roll
xchg
les
push
pop
roll
jbe
add
pop
roll
xchg
add
roll
les
es
sar
nop
sbb
add
push
pop
std
sbb
adc
add
pop
add
adc
icebp
sbb
sbb
adc
add
pop
add
adc
repz
sbb
adc
jmp
sbbb
nop
add
pop
xor
xor
nop
ret
inc
xchg
pop
hlt
sbb
sbb
adc
and
pop
sbb
add
pop
pop
adc
add
xchg
adc
xchg
fwait
popf
lahf
sbb
pop
pushf
adc
call
pop
enter
adc
call
nop
pushf
mov
xchg
lahf
and
xchg
mov
shll
mov
out
pop
pop
adc
adc
rcll
sbb
lret
cld
testl
call
rcrl
lcall
cmp
or
or
mov
add
mov
fs
pop
adc
add
sbb
and
push
pop
or
push
adc
add
pop
in
adc
add
lds
icebp
or
pop
jmp
sbb
mov
or
cmc
push
std
lds
test
xor
in
insl
jle
xor
sbbl
adc
sbb
and
cwtl
in
jle
sub
xor
xor
and
and
push
sahf
sub
mull
clc
jo
and
imul
inc
fs
cmp
or
fs
bnd
sti
xchg
unpcklps
push
push
jmp
stos
repz
ljmp
sahf
sti
sbb
push
in
loop
nop
mov
sbb
icebp
xlat
inc
rclb
push
inc
push
out
pop
lock
sub
sbb
jg
rorl
popa
std
sti
adcl
sahf
add
add
add
clc
arpl
lret
pop
fdivrl
loopne
imul
push
in
cmpl
out
lret
sub
and
bsf
pop
jb
lock
shlb
aaa
loop
pop
enter
mov
pop
int3
sti
cmp
pop
outsb
jns
sbb
xor
int3
ljmp
out
dec
jb
dec
test
jecxz
lock
jb
jb
outsl
ljmp
mov
out
icebp
add
adcb
add
push
imul
sbb
mov
add
push
sub
push
xor
cwtl
cwtl
cmp
or
icebp
icebp
outsl
xor
rorb
hlt
dec
xchg
in
out
adc
mov
push
add
dec
mov
inc
add
or
addb
imul
add
cld
fisubrs
lahf
jg
xchg
icebp
cmp
cltd
adc
and
mov
js
in
in
jle
stc
fsubr
xchg
in
test
aad
loopne
push
loopne
scas
popa
or
and
std
outsb
or
add
scas
mov
es
icebp
pop
rclb
js
jns
mov
sub
call
add
clc
pop
imul
xchg
lods
xor
mov
dec
add
scas
mov
clc
cli
fldl
mov
cmp
xchg
or
bound
cli
scas
not
in
adc
fmul
or
xchg
inc
jmp
pop
std
dec
icebp
sbb
pushf
mov
popf
aam
loop
jb
arpl
adc
imul
or
arpl
xorb
or
adc
push
dec
rclb
push
fadds
jnp
xor
mov
iret
push
clc
sahf
popl
pop
xchg
push
push
ss
mov
push
out
cmpsb
enter
jno
mov
mov
test
fimuls
enter
lret
lret
pop
fldenv
add
jmp
cmc
bound
mov
xor
inc
divps
add
in
fdivrs
fwait
sbb
sub
sbb
in
pop
jge
adc
xor
adc
add
loope
mov
std
mov
mov
jae
mov
call
cli
out
pop
inc
jge
adc
clc
rcrl
outsl
imul
sub
xchg
cmp
mov
jb
xchg
add
cmc
lock
popa
mov
sbb
in
push
and
mov
in
cmpsl
gs
mov
push
xchg
and
sub
int
push
sahf
in
test
repz
loopne
sbb
aam
repnz
stc
xchg
pop
cmp
mov
jmp
fcomp
cmpl
andb
andnps
ret
xchg
xchg
out
repz
dec
push
in
vpmullw
mov
movsl
mov
and
shl
mov
movsl
fyl2xp1
mov
and
shl
mov
movsl
mov
sbb
mov
adc
xlat
divl
and
shl
mov
movsl
fdivr
mov
sbb
or
movsl
aam
mov
in
and
shl
mov
movsl
mov
pop
movsl
fdivrp
mov
pop
movsl
divb
mov
xchg
push
jno
cltd
movsl
pop
jns
mov
sub
lea
sub
xor
mov
xchg
push
jae
fwait
movsl
pop
jnp
mov
sub
dec
outsl
das
xchg
movsl
push
ja
xchg
daa
mov
nop
push
jo
cwtl
movsl
pop
js
mov
sub
dec
insb
sub
movsl
push
je
test
mov
xchg
push
jb
lcall
push
sahf
movsl
pop
jle
mov
cs
mov
inc
lds
in
lds
std
fnstsw
mov
in
int
and
jecxz
ret
sbb
fstpt
mov
jmp
stos
and
loope
rcrl
fnstcw
mov
jmp
fbld
mov
out
iret
movsl
scas
add
cmpsl
mov
cltd
jns
cmp
mov
sub
fwait
jnp
cmp
mov
sub
xchg
jne
xor
sub
lahf
jg
movsl
aas
xchg
ja
aaa
outsl
dec
movsl
das
xchg
daa
and
loopne
rcrb
fdivrs
mov
call
loop
ret
fidivrl
mov
ljmp
mov
or
add
fisubs
mov
out
into
movsl
scas
pop
out
cmpsb
mov
cwtl
js
cmp
mov
sub
lcall
movsl
xor
jl
movsl
cmp
je
xor
insb
dec
and
fs
and
push
std
xchg
jbe
mov
xchg
lds
push
push
push
movsl
std
cmc
in
in
aad
lds
cltd
xchg
mov
popa
pop
push
dec
inc
movsl
cmp
sub
sbb
or
idiv
inc
movsl
loopne
ror
sarb
nop
mov
pusha
pop
push
dec
inc
cmp
mov
or
sti
cmc
mov
lret
ret
mov
fwait
xchg
mov
movsl
pop
push
dec
inc
cmp
sub
movsl
sbb
or
cli
repnz
mov
lcall
bound
cmp
sub
movsl
sbb
or
stc
icebp
jmp
leave
sarl
lea
pop
int
movsl
inc
cmp
adc
lods
in
int3
les
xchg
mov
pop
push
dec
inc
cmp
sub
movsl
sbb
or
push
out
out
iret
mov
lahf
xchg
popl
movsl
pop
push
dec
inc
aas
aaa
das
daa
movsl
pop
pop
sysret
imul
out
into
mov
sahf
xchg
mov
movsl
pop
push
dec
inc
ds
jge
jae
es
push
cmp
push
jl
insl
lret
sbb
subb
ljmp
fdivr
fcomi
test
gs
push
test
mov
outsb
in
sbb
ljmp
sub
mov
fwait
ja
pop
push
xchg
fisttpl
out
jns
outsb
or
ret
and
mov
pop
jl
jae
fs
loope
sbb
in
fcmove
xor
scas
arpl
jne
divb
jbe
xlat
std
sub
mov
repnz
pop
and
mov
jle
fstp
sarl
nop
push
daa
mov
pop
repz
icebp
clc
push
mov
out
jo
rolb
sti
aas
push
cli
pop
inc
sub
mov
mov
jle
mov
pop
testb
lock
test
xchg
or
add
mov
insb
mov
mov
mulb
or
xor
shrb
sbb
insl
ficompl
stos
test
dec
xor
fisubl
jb
fs
lcall
imul
mov
addr16
sub
mov
mov
in
jns
pop
dec
test
test
push
in
aad
jnp
repz
hlt
js
ja
and
movb
imul
adc
lock
mov
mov
decl
popf
jge
sti
sbb
roll
test
add
js
mov
sbb
aam
adc
int
lods
mov
jb
add
dec
jge
mov
adcb
pop
dec
cmp
mov
jno
call
ret
pop
mov
adc
mov
pop
fwait
movsl
xchg
test
lods
push
pop
sbb
jmp
out
icebp
mov
scas
ret
data16
dec
lods
fcmovnu
sub
int
inc
out
cmp
xlat
cli
aad
addb
movhlps
icebp
push
sbb
xchg
imul
push
mov
or
mov
mov
pop
cmp
mov
cmc
int
jecxz
imul
mov
insb
into
andb
lcall
xchg
xorb
pop
mov
push
test
sub
ja
sti
stc
jmp
movsl
or
idiv
lret
pushf
jge
ret
add
push
inc
repz
test
outsb
adc
pop
xchg
jp
jnp
sbb
dec
sbbb
rorl
test
insb
lds
mov
or
add
inc
fcmove
add
xchg
jmp
out
inc
xchg
sbb
push
addb
push
test
lcall
sbb
inc
jl
decb
test
decl
pop
add
push
push
orps
ret
dec
jae
dec
mov
mov
dec
and
dec
mov
jnp
add
stc
pushf
or
add
sub
sahf
adc
fisttps
adc
addl
test
ljmp
clc
xor
icebp
icebp
and
mov
xor
orps
cmp
ret
insl
pop
in
mov
or
mov
test
xchg
flds
adc
jmp
xlat
leave
in
fldt
jl
mov
in
adc
push
jmp
clc
imul
cmp
xchg
clc
inc
xlat
in
out
ficompl
push
sbb
sbb
lea
clc
sub
push
add
or
jae
fcomi
in
sbb
addr16
fcomps
adc
or
dec
stos
adcl
incl
push
and
xchg
adc
sbb
xor
jg
stos
inc
stc
stc
insb
shll
popl
outsb
adc
sub
add
or
movups
push
pop
push
pop
xchg
roll
xchg
cmp
mov
dec
repz
adc
cwtl
inc
adc
adc
xchg
jmp
rorl
xchg
lret
in
cwtl
in
adc
jg
push
pop
jmp
outsb
mov
frstor
xchg
gs
mov
std
pop
push
pop
add
fildll
xchg
jl
cmp
int
adc
lea
or
in
rcll
fists
stc
daa
sbb
sbb
adc
dec
mull
imul
enter
jge
push
rorb
test
dec
rorl
or
std
sub
jle
mov
out
mov
dec
xlat
jge
jb
pop
jmp
push
cwtl
out
fstps
push
pop
aas
sub
cld
stos
push
add
enter
fiaddl
sbb
outsl
cmpsl
pushf
xchg
hlt
iret
push
xchg
cmpsl
sti
loopne
popf
incl
push
mov
insl
jo
fsubl
pop
or
fldenv
xchg
popf
jp
in
cwtl
jns
jl
jle
test
xlat
in
xlat
jnp
jge
xlat
mov
stc
cmp
test
xchg
movsb
inc
mov
fsubr
fsubp
fistl
push
mov
rorl
adc
fcompl
pop
iret
sub
pop
inc
pop
rcrl
or
lock
addb
hlt
repz
mov
inc
pop
adc
and
adc
lds
adc
fwait
or
add
fucom
rorl
add
rcrl
adc
and
or
icebp
push
popa
add
adc
mov
sbb
das
sbb
cltd
adc
push
outsb
add
lcall
icebp
jnp
adc
out
dec
rorb
out
pop
push
outsb
sbb
sbb
cmp
mov
push
pop
dec
arpl
daa
push
mov
stc
das
hlt
stc
or
stc
lret
mov
out
inc
sbb
xlat
mov
adc
jp
lcall
xchg
subb
cmpsl
mov
mov
ds
jge
subl
mov
ds
xadd
mov
mov
or
adc
stc
xor
cli
iret
cmpsb
aaa
nop
out
add
mov
or
addl
out
xchg
arpl
pop
jmp
lret
cmp
jae
daa
fsubrs
mov
lahf
call
into
xchg
xor
xor
rorb
fwait
push
cmpl
iret
xchg
jle
popl
fdivs
jmp
adc
jno
cmp
xorl
jbe
into
repnz
push
add
adc
adc
out
fadds
pop
dec
js
je
mov
or
and
sti
xor
push
or
and
test
mov
int3
mov
cmovp
nop
push
xchg
cmp
add
jo
cmp
push
out
idivb
push
cltd
dec
xchg
and
int3
mov
jmp
add
jg
subl
cld
push
clc
sub
sbbl
adc
dec
mov
int
push
pop
outsb
dec
sti
imul
sbb
scas
xchg
push
pop
sub
cmp
push
repz
sub
fstl
dec
xchg
sbb
add
mov
iret
icebp
mov
or
inc
or
cmp
jmp
test
xchg
jge
adc
in
cmovg
push
sub
shrl
inc
stos
mov
add
cmc
lret
idiv
enter
scas
je
fisttpll
test
gs
fsubrs
ror
sbb
or
pop
stc
xchg
lock
push
mov
or
call
push
jne
mov
push
pause
cld
jbe
daa
sbb
mov
add
ror
mov
scas
addb
iret
adc
insb
lret
dec
jno
sub
out
repz
stos
adc
jmp
or
pushf
in
adc
ret
stos
xchg
mov
stos
gs
fildll
inc
push
adc
lock
stos
dec
fdivs
sub
or
mov
cmpsl
mov
add
jmp
jle
adc
inc
jl
jecxz
mov
test
lods
fldl
or
inc
roll
imul
xor
je
aad
mov
jae
and
push
imulb
xchg
out
sbb
repz
xchg
and
add
cmp
sti
sahf
xor
jbe
std
inc
out
mov
stos
dec
fsubs
test
cld
shr
inc
in
stc
imul
scas
pop
js
jp
dec
lock
imul
cld
std
or
add
or
add
call
pop
loopne
mov
shl
repz
js
and
pop
jecxz
hlt
lcall
jmp
sub
jnp
sbb
insl
pop
xchg
xchg
dec
repnz
dec
mov
jl
add
sub
fwait
adc
pusha
rcrl
outsl
in
push
stc
add
loope
xor
push
fsubrs
shlb
jo
fcmovne
outsb
mov
jb
sub
jb
fisubl
adc
nop
popf
mov
xchg
or
andl
outsl
xor
adc
jle
push
insl
shrl
jae
out
rorl
fwait
pop
stos
icebp
data16
jge
push
add
mov
dec
sbb
push
pop
jne
lock
and
icebp
das
repz
sti
pop
out
cmp
jl
jmp
push
data16
into
clc
pop
mov
in
jle
and
pop
adc
mov
mov
je
nop
mov
cmp
pop
adc
movsb
js
xchg
test
jae
nop
xor
jle
or
sbbl
adc
scas
pop
jle
in
stc
xchg
or
icebp
lds
mov
popf
jge
das
arpl
jmp
icebp
push
jmp
push
std
enter
pop
repnz
imul
rcrl
into
xchg
int3
mov
push
outsl
adc
cmp
lock
adc
xor
ljmp
cmpsl
push
mov
lahf
ja
lea
mov
jne
pmulhuw
out
sbb
test
push
lea
pushf
or
mov
mov
and
in
enter
insl
std
std
imul
sub
adc
pop
jmp
jecxz
rcr
fildl
mov
in
or
xor
mov
pop
outsl
repnz
add
pop
out
adc
std
jnp
jb
and
mov
movsb
nop
pop
add
sub
es
xlat
sbb
fmul
sti
sbbl
fwait
rolb
xor
cld
jp
rorb
jge
fildl
adc
loop
jns
sub
adc
sti
sub
add
mov
popf
xchg
ja
sbb
sbb
fildl
add
add
or
mov
adc
mov
add
outsl
adc
cli
mov
orl
add
add
or
dec
rcrb
addb
movsl
pop
add
sar
jecxz
clc
pop
xchg
das
sbb
rolb
in
sbb
xchg
lock
or
pop
rorb
arpl
scas
xchg
or
sti
into
mov
ljmp
stos
jmp
pop
adc
cli
insl
add
jecxz
enter
enter
lods
in
push
add
dec
inc
pusha
cli
enter
add
xchg
sub
cmpsb
jbe
out
mov
int
shl
dec
out
mov
xor
push
pop
add
xor
and
mov
std
and
clc
xchg
inc
cmpsb
push
mov
push
ja
adc
sub
pop
lcall
jge
cmp
add
push
sbb
testb
push
jl
pop
dec
dec
add
or
xchg
fnsave
add
xchg
mov
adc
lcall
jg
add
rcr
clc
outsl
push
fdiv
mov
adc
dec
fcoml
lea
mov
test
jno
push
daa
sarl
push
pop
lea
cmp
pop
push
fbld
inc
out
rcrb
mov
xchg
xchg
cld
lea
das
inc
add
jnp
xchg
addr16
cwtl
clc
sub
mov
shll
loopne
lahf
sbb
in
pop
jmp
andl
xor
jae
lret
cld
popa
sbb
pop
aam
fsqrt
xchg
in
jmp
ljmp
jle
adc
shrl
shr
push
xor
int3
jle
mov
ds
rcrl
or
divl
mov
call
aaa
mov
jl
jae
pop
pop
xchg
imul
das
stos
jmp
daa
lcall
sub
ss
dec
mov
loopne
and
mov
jle
icebp
lea
ficoml
jne
dec
add
imul
jmp
lea
push
andb
push
add
int3
cmc
mov
add
jg
cmc
mov
repnz
jb
stos
mov
inc
ficoms
notb
adc
rorl
rcll
dec
jns
test
lret
or
xchg
loope
clc
or
push
mov
mov
in
jmp
int3
add
icebp
aaa
stos
push
je
shl
nop
rep
push
xchg
out
xchg
xchg
enter
ljmp
dec
out
ret
inc
jmp
cmpsb
xchg
cmp
test
repz
insb
push
xor
into
xor
or
mov
xlat
adc
hlt
xchg
ds
push
mov
addl
ret
adc
mov
push
cmpsb
enter
loop
clc
fidivrs
or
fwait
sbb
sbb
mov
or
mov
scas
inc
inc
cld
mov
sub
jle
and
adc
int3
jb
test
call
in
lret
jecxz
push
shll
popf
sbb
sti
push
sar
ret
pop
or
repz
movsb
cmp
sbb
adcb
out
mov
adc
popa
cs
shrl
dec
shlb
add
mov
je
das
jle
pop
cmp
cmp
jle
xor
add
add
push
test
mov
lods
or
jbe
jne
daa
nop
jmp
js
sbb
or
jmp
jl
sarl
jb
nop
mov
sub
gs
push
pop
jno
xlat
jle
cli
js
mov
xor
in
jmp
popf
fistps
adc
add
and
mov
popa
lds
rcll
fldl
out
add
sbb
lods
ljmp
add
adc
test
loope
notl
push
add
lods
push
jmp
pop
lret
sbb
adc
jbe
add
or
cltd
cmpsl
push
add
pop
icebp
adc
sbbl
adc
out
sti
adc
and
stos
imul
out
std
adc
xor
adc
add
pop
adc
stos
outsb
adc
add
jecxz
repz
cltd
push
mov
adc
add
out
icebp
sbb
adc
add
jecxz
stc
adc
add
mov
out
mov
adc
add
pop
push
push
stos
insb
adc
add
jmp
mov
test
iret
rcrl
sbb
sbb
cmpsl
insl
and
add
repz
push
cltd
mov
enter
adc
add
pop
adc
out
add
sbb
cmpsl
repnz
ret
sbb
adc
clc
adc
jbe
jae
icebp
ds
dec
or
jbe
in
pop
adc
add
mov
lahf
je
adc
fstl
adc
stc
cld
jp
or
pop
fistpl
adc
xchg
push
repz
outsl
pop
jb
jg
fistl
jns
icebp
add
pop
mov
sbb
sar
popa
or
jmp
adc
jbe
lock
xlat
repz
jo
xlat
js
icebp
lea
adc
fwait
test
js
adc
or
sti
add
push
and
and
pop
cld
and
cmp
push
xchg
cmp
andb
fistl
mov
and
imul
dec
inc
fwait
clc
cmp
in
lcall
xchg
adc
add
add
jnp
jp
sbb
jo
ret
insl
imul
mov
imul
jmp
jecxz
loop
loope
movsl
pop
fistpl
pop
fsts
movsl
rclb
push
rclb
dec
movsl
int3
enter
lret
movsl
inc
rolb
ret
sarl
mov
mov
mov
mov
xor
sub
stos
sub
loopne
and
inc
test
or
push
inc
cltd
add
movsl
dec
and
cmpl
adc
push
loop
nop
mov
lods
std
fwait
dec
cmp
lret
sbb
xchg
sub
mov
ljmp
or
cld
and
mov
push
mov
mov
popf
and
add
pop
mov
sbb
pop
lds
in
in
sbb
and
loope
jbe
push
mov
push
test
pop
push
icebp
push
popf
fimuls
sbb
pop
xchg
mov
and
xchg
lods
or
xchg
ja
push
jl
iret
or
adc
cmp
inc
aad
lea
loope
pop
mov
sbb
jmp
cld
or
adc
pop
adc
add
mov
cltd
xchg
or
mov
sar
lea
add
jno
sbb
jmp
das
jo
insb
or
fldenv
sti
cmp
inc
mov
ds
fsubs
sub
scas
insl
mov
dec
insb
outsb
jns
cmp
shll
jmp
mov
jp
push
add
sbb
push
enter
sbb
out
setae
fistpl
movl
sbb
shll
std
imul
dec
cmpsl
dec
xor
dec
out
iret
sbb
mov
fwait
outsb
jbe
and
pop
jecxz
or
mov
lea
lds
mov
cltd
pop
push
cmc
or
add
cmp
add
sbb
std
ljmp
adc
dec
mov
sub
xor
in
fists
mov
dec
hlt
cmp
xor
outsb
sbb
adc
bound
inc
mov
ret
or
in
pop
sub
xchg
add
fwait
mov
mov
jle
adc
dec
outsb
push
mov
xor
inc
xchg
or
dec
mov
scas
dec
arpl
add
or
dec
repnz
stos
jo
pop
sahf
insb
ret
add
rorb
movsbl
not
lea
mov
push
movb
push
movl
pushl
pushl
mov
mov
mov
movl
pushf
pushl
ret
jns
mov
movsl
sbb
sbb
xor
std
sub
sbb
adc
mov
pop
jno
or
jns
sub
and
mov
pop
sub
pop
add
addr16
mov
shlb
mov
fwait
scas
push
xlat
enter
and
cmp
and
dec
push
ret
adc
repnz
jae
in
ja
add
pop
or
rolb
sbb
out
xchg
xchg
cmp
dec
shl
and
out
loop
sbb
je
adc
add
add
jl
add
std
cmp
and
pop
xchg
cmpsl
pop
mov
hlt
push
les
mov
jb
lahf
jne
testb
mov
in
cs
xor
push
dec
les
xor
or
ficoms
pop
aam
outsb
movsb
bound
imul
sbb
sti
cmp
inc
jg
mov
lock
sbb
inc
cld
or
and
sub
adc
add
test
test
jmp
pushf
seto
lods
jmp
mov
lea
je
bt
sub
cmc
cmp
jmp
lea
jbe
shr
mov
pushf
xchg
mov
test
add
lea
xor
shr
bts
mov
shl
add
push
not
movl
shld
pusha
adc
test
mov
sub
test
cmp
call
sub
cmc
pusha
pushl
popl
sub
jbe
pusha
cmp
push
jmp
mov
call
sti
mov
sbb
xchg
imul
inc
addl
xchg
xchg
mov
xlat
lods
sti
iret
pop
lods
inc
push
xchg
xor
insb
inc
adc
sbb
cmpsl
vshufps
push
sar
dec
cmp
roll
ja
push
xchg
mov
lcall
mov
lods
dec
mov
out
sbb
sti
cmp
fldt
in
or
fwait
inc
mov
jmp
adc
popf
pop
popf
dec
cltd
jg
pop
cmpl
adc
shll
pushf
jmp
call
mov
add
addl
out
ficoms
ljmp
mov
stc
leave
mov
dec
push
pusha
mov
cli
or
add
add
or
xchg
fdivr
rol
and
daa
cmp
inc
movsb
mov
mov
outsl
adcb
xchg
scas
xor
inc
arpl
dec
inc
xorl
lret
and
xchg
dec
ret
add
idivl
mov
pusha
rep
pusha
movsbw
mov
mov
push
mov
lea
jmp
add
pushf
inc
loop
inc
popa
lea
jns
pop
lea
jne
pop
fwait
jno
xchg
mov
shlb
xchg
es
mov
cmp
lret
pop
lret
popf
mov
or
jbe
les
and
jecxz
mov
pop
mov
addr16
pop
xchg
add
mov
dec
mov
scas
cmpsb
stc
fdivl
cmp
sbb
sbb
sbb
ret
add
dec
test
and
aas
adcl
ficomps
into
adc
jp
and
shrb
sub
ljmp
pop
mov
pop
pop
rorb
add
mov
int
sub
push
fmull
mov
sbb
mov
mov
mov
cmp
call
and
fwait
mov
test
pop
mov
ljmp
add
add
scas
in
das
fcomps
mov
adc
movsl
ret
add
and
lds
test
xchg
scas
xchg
dec
addr16
mov
mov
mov
mov
jl
fisubrs
jl
xchg
in
fdivrp
sbb
repnz
add
sbb
test
ret
in
repz
loopne
dec
push
mov
add
cmp
sti
inc
mov
cmpsb
ret
int3
adc
push
call
adc
rolb
les
ret
add
fwait
pop
clc
call
fstpl
out
xchg
dec
jge
jb
push
ss
cs
push
shlb
shll
bound
insl
push
fiaddl
clc
or
push
fcomps
lock
xchg
cmpsb
jns
sarb
addr16
sub
adc
imulb
aam
and
and
push
add
loopne
in
bnd
jmp
sbb
xlat
jmp
aad
std
adc
in
push
test
mov
cmp
add
jp
adc
imul
jge
cmpsb
sbb
sarb
pop
xor
inc
imul
aad
mov
pop
lahf
test
adc
movsl
leave
adc
cmc
add
adc
ret
rol
call
push
aam
in
sbb
ret
add
test
xchg
bt
pusha
ror
cmc
neg
clc
shr
pushf
lea
je
pushf
adc
pushf
push
pusha
lea
jmp
jmp
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
bsr
add
shl
push
sar
or
stc
mov
bts
btr
sub
bsf
test
push
ror
ror
push
rcl
test
pusha
mov
neg
aas
ror
bsf
mov
cmp
or
das
mov
clc
call
call
es
xchg
cmc
sti
insl
outsl
jae
jnp
xlat
subb
pusha
mov
jmp
call
xchg
sbb
xchg
cs
cmp
shrb
mov
inc
pusha
or
mov
push
pop
dec
ret
mov
movsl
add
jg
in
subb
cmpb
jp
fwait
mov
xchg
jg
inc
sub
aas
mov
ret
inc
mov
leave
test
out
adc
or
mov
dec
inc
std
or
sbb
test
int3
sahf
dec
cmp
outsb
ror
dec
jmp
sub
ss
xchg
or
inc
int
es
mov
leave
or
push
dec
lret
inc
sub
enter
dec
or
add
jo
xlat
xchg
mov
sub
push
nop
ficoml
js
jns
lds
outsl
lahf
fcoms
mov
sbb
ret
dec
mov
aas
sbb
scas
push
dec
cmp
std
scas
dec
lret
sbb
enter
mov
movsl
inc
dec
mov
mov
adc
cmpsl
inc
icebp
sahf
sahf
mov
sbb
rorl
jo
ja
movsl
jp
call
in
out
je
mov
loop
popf
bound
xor
jae
idivl
fstl
popf
sub
push
in
pushl
clc
repz
or
inc
lret
mov
shl
repnz
lcall
mov
rol
add
mov
sub
mov
add
loopne
stc
mov
dec
lret
mov
inc
jle
roll
cmp
jns
mov
and
inc
lret
mov
inc
popf
cmp
ret
xor
ret
dec
xchg
or
ljmp
lds
jmp
xchg
jecxz
push
jp
inc
adc
xchg
pop
bound
add
adc
mov
or
jns
ds
xor
push
lds
or
sbb
movsb
clc
in
dec
cmp
and
cli
fcmovne
in
pusha
repz
cmp
pop
cmp
pop
or
mov
adc
icebp
push
jne
mov
cmp
ja
mov
sub
fsubl
lods
cmp
lea
loop
dec
inc
dec
flds
xor
jp
mov
nop
xchg
mov
or
push
pusha
cmp
cmp
int
leave
test
jmp
enter
fisttpll
xor
js
push
pop
pop
inc
mov
es
repnz
add
cwtl
push
jbe
in
lods
lods
push
lods
sub
pop
movsl
and
lea
push
xchg
push
adc
or
push
mov
test
mov
fmull
push
push
cld
call
fists
fcmovbe
jge
sbb
jge
lods
mov
stos
lea
rolb
into
call
push
test
lods
in
mov
cld
cmpb
cmp
mov
mov
pusha
push
popa
jge
inc
test
fdivrs
push
stos
add
add
mov
mov
or
xchg
lods
pop
cwtl
sarb
leave
stos
das
pop
ret
aas
movb
cwtl
lock
cld
test
ret
push
jmp
xchg
sbb
enter
inc
pop
aad
inc
scas
mov
sub
out
mov
les
in
lods
mov
fmulp
cmp
add
jge
sbb
mov
fstps
dec
push
inc
enter
daa
rorl
in
ds
mov
mov
xchg
push
cwtl
mov
sub
mov
lea
jbe
sbb
push
sti
mov
insl
fstpl
jnp
in
fimull
cmp
sbb
in
jo
dec
or
rorb
xorb
fadd
ljmp
mov
adc
inc
sub
push
movsl
fiadds
inc
cmc
lods
rorl
mov
mov
adc
mov
ds
sub
add
btc
push
mov
mov
xor
in
cwtl
cmp
pusha
nop
jp
out
push
and
sbb
add
cmp
lock
popa
into
pop
sub
movsl
push
in
lret
or
dec
cs
adc
cmc
adc
testl
mov
idivl
xor
aam
jo
xor
in
sbb
outsb
push
mov
jle
into
inc
inc
int3
inc
iret
inc
dec
lock
movl
pop
jge
mov
dec
int3
xchg
mov
cmpsb
stc
sub
push
xchg
cmp
dec
aam
mov
xor
ret
movsb
sahf
jg
test
in
lock
gs
add
sbb
aam
or
and
xchg
inc
movsl
ds
ret
movsl
inc
lods
inc
into
or
inc
sub
leave
lret
inc
scas
and
and
inc
xor
cmp
fnstenv
sbb
cld
pop
imul
and
orl
out
add
and
jge
cs
cwtl
and
jae
push
pusha
lods
js
in
pop
push
pushf
sbb
cmpsb
sub
xchg
lret
mov
add
jmp
lods
push
xchg
ds
add
lea
sub
cmp
daa
cmp
clc
xchg
push
xor
test
jno
add
mov
aas
or
shl
mov
xchg
rcr
push
fcompl
add
stos
int
push
sub
fs
leave
add
out
insb
ljmp
jp
cltd
sarl
push
lock
xlat
lcall
xchg
sarb
jne
xor
sahf
mov
jae
sbb
lea
add
repz
or
ret
pop
pop
aam
rolb
pop
test
xchg
cmp
mov
mov
decl
jne
push
orb
push
rol
lcall
cmp
stos
mov
cmp
lret
popf
out
mov
stc
mov
gs
addr16
sbb
ja
dec
arpl
sbb
mov
jno
adc
xchg
fsub
pop
mov
aas
inc
push
pusha
xor
or
push
popf
mov
or
mov
scas
cmp
std
aas
shll
into
or
jmp
jp
stc
gs
adc
mov
sbb
out
add
jl
fmull
cmp
or
pop
popl
jb
sbb
or
jnp
and
inc
sarb
mov
outsl
adc
enter
adc
dec
inc
rcl
pop
inc
scas
inc
xchg
mov
divl
addl
lret
jge
addr16
je
iret
cmp
or
or
adc
lret
pushf
sti
xlat
daa
je
add
sbb
pop
or
push
or
or
sub
adc
roll
pop
shlb
mov
shl
cld
push
ffreep
cmp
dec
push
mov
hlt
push
jae
test
sbb
mov
jb
ja
sbb
scas
xor
lods
aam
xor
lahf
popf
dec
inc
ds
clc
cld
fdiv
xor
decb
cmp
mov
jns
pop
enter
xor
ljmp
mov
dec
stos
mov
cmpsb
enter
pushf
mov
outsl
mov
dec
jp
mov
pushf
push
or
push
pushf
clc
sahf
mov
inc
or
push
in
jnp
dec
dec
enter
xor
ljmp
adc
add
jnp
xorl
fsts
insb
fadds
jmp
enter
mov
cmp
outsb
outsl
xchg
pusha
dec
sbb
and
lea
repnz
lret
ds
iret
aas
cwtl
and
psubusw
les
push
lret
in
xchg
jb
gs
push
in
inc
and
dec
pop
test
sub
mov
arpl
ja
or
xlat
ret
mov
rcrb
repnz
cmp
adc
cmp
in
adc
fnsave
movsb
jb
push
addb
test
lret
or
sub
test
jne
rolb
and
and
lods
mov
push
mov
cld
lea
iret
insl
and
insb
xlat
cmp
test
mov
cmp
test
dec
xchg
or
jle
push
int3
sbb
mov
lea
sub
push
lds
xor
pop
jecxz
sub
lcall
out
cld
movsl
add
push
insl
repz
popa
mov
inc
mov
std
inc
mov
andl
push
pop
movsl
inc
and
mov
add
int
cltd
fldcw
lret
fisubrs
mov
aaa
nop
jecxz
imul
insl
jno
or
xchg
mov
push
aas
mov
mov
jo
in
inc
cmp
int3
int
ss
rorl
aam
cmc
dec
lret
mov
mov
add
es
test
jp
and
jge
push
sub
dec
push
fcomps
jle
je
pop
pushf
mov
push
fnstenv
rcrl
inc
mov
test
jnp
cmp
enter
mov
sti
mov
xor
dec
inc
ja
lret
and
adc
dec
roll
ret
jbe
icebp
jns
push
and
sub
sub
icebp
lret
sbb
pop
and
cmp
mov
cmp
lcall
out
jb
add
pusha
mov
in
ss
inc
int3
push
cmc
push
enter
mov
das
jae
xchg
repnz
inc
jb
stos
call
xorl
int3
or
push
mov
imul
loopne
sti
in
xchg
clc
dec
pop
movsb
cwtl
sarl
enter
xchg
jge
lea
lds
orb
call
scas
jmp
lea
imul
adc
dec
std
movd
mov
xor
or
inc
sub
mov
push
xchg
cmp
jle
xchg
insl
fdivr
aad
mov
sbb
shrl
outsb
xlat
loop
ss
push
xor
sbb
sarl
xor
sti
es
clc
jmp
clc
adc
add
xchg
loope
jge
mov
push
roll
cmp
ret
mov
std
cmp
bound
xchg
ret
and
stc
ror
fidivl
push
in
testb
ret
push
xlat
adc
int3
pop
xor
pushf
aas
dec
xchg
aad
sti
sti
lock
mov
inc
fcoms
gs
stc
xchg
jl
jecxz
bound
sub
mov
push
adc
movsb
mov
mov
outsl
je
cmp
rol
sub
sbb
repz
cmp
push
add
sub
in
rcl
push
push
cs
add
mov
xchg
mov
jmp
cld
aas
mov
adc
sbb
mov
sbb
mov
adc
lea
mov
xchg
dec
cmpsb
dec
fcoms
inc
jmp
push
push
dec
sbb
cmp
cmp
shll
incb
cwtl
dec
daa
adc
pop
or
mov
mov
repnz
std
mov
adc
mov
dec
std
xor
cwtl
mov
stos
imul
dec
ja
push
pop
stos
dec
pop
and
jg
jmp
outsb
stc
frstor
ret
xor
rcll
mov
inc
leave
stos
mov
mov
les
fs
pop
addr16
jle
and
leave
mov
sub
sbb
jle
or
xor
enter
stc
xor
leave
ret
fdivrs
stos
pop
ret
inc
js
sarl
adc
mov
adc
leave
lock
mov
scas
insb
cmp
cmp
dec
jecxz
test
and
lcall
stos
push
add
xchg
enter
mov
mov
dec
xchg
mov
aaa
cld
daa
jae
enter
outsl
lock
sbb
jle
loop
popf
enter
add
lcall
leave
mov
stc
jecxz
daa
cmp
int
add
inc
js
das
mov
rorl
cmp
mov
jg
adc
sbb
mov
movsb
xlat
xchg
jge
jecxz
push
clc
int3
sahf
pop
adc
clc
mov
mov
lea
pop
into
adc
add
imul
das
mov
sub
imul
ds
insl
cmp
pop
enter
or
arpl
sub
call
out
orl
jae
xchg
lret
fsubrs
je
lods
je
add
pop
sbb
mov
inc
insl
xor
and
add
lea
mov
cmc
adc
sub
pop
cli
cmp
gs
mov
xor
mov
mov
ljmp
lahf
sbb
faddl
xchg
outsl
adc
mov
ds
adc
out
or
ja
daa
push
xchg
pushf
and
mov
sbb
in
mov
orl
les
push
xchg
add
adc
aas
stc
daa
pusha
mov
cmc
shlb
cwtl
cmp
sbb
jecxz
iret
ret
imulb
loopne
lea
mov
mov
repz
test
adc
cli
pusha
ret
cmp
push
sahf
cli
add
adc
adc
fistl
ss
outsb
jp
cmp
xchg
mov
mov
inc
mov
repz
and
stos
outsl
and
loope
lret
sbb
lret
push
popa
pop
dec
leave
stos
mov
das
mov
aad
test
sbb
or
jae
xchg
adc
jge
jno
mov
rcl
je
ficoml
out
dec
movsl
sub
shll
shrb
xor
data16
shrb
test
add
testb
add
mov
push
jg
adc
jge
push
rcr
lds
xor
and
jae
pop
mov
insl
add
inc
loop
repnz
dec
mov
cmpsl
inc
scas
sbb
xor
adc
mov
push
pop
sub
into
fstpt
add
in
aam
sbb
dec
sub
ficompl
lea
inc
mov
jae
ja
pop
inc
sbb
stc
stos
shr
subl
insl
and
push
out
insl
or
mov
ds
mov
mov
pop
xor
dec
imull
add
dec
repnz
je
mov
lret
int3
push
sub
lret
mov
sbb
adc
jmp
jne
popf
inc
dec
add
rclb
testl
mov
das
push
mov
push
fwait
dec
test
clc
lret
xor
loopne
imul
push
push
repnz
sub
or
push
faddl
roll
pop
jb
out
fsubrp
inc
lods
sbb
mov
pop
lea
and
fdivrs
dec
in
and
fs
push
sbb
fiadds
pop
xor
inc
jmp
inc
insb
inc
hlt
add
pop
int
int
repnz
aam
jg
jmp
jge
mov
pop
or
std
divl
fistpl
ljmp
addb
adcb
cmp
mov
inc
outsb
push
aam
xor
lds
lea
or
lea
shrl
xor
mov
clc
push
mov
pushf
pushf
xor
fiaddl
or
addr16
orb
sub
or
add
sub
addr16
inc
push
in
neg
and
cwtl
jbe
xchg
or
mov
jl
jl
xor
mov
sarb
mov
mov
sbb
stos
sub
test
clc
cmpsl
addr16
insl
lods
push
sbbl
or
mov
lea
psubsb
sbb
scas
inc
aaa
cmpsl
dec
cwtl
movsl
rclb
fdivl
aas
sub
dec
pop
dec
mov
xor
pop
jns
mov
mov
xchg
imulb
pop
jmp
and
iret
cltd
jge
mov
xchg
or
or
dec
inc
mov
int
pop
mov
dec
lods
add
jmp
mov
mov
push
xlat
out
cld
xchg
or
ja
mov
outsb
div
or
je
fistps
push
int3
sbb
add
gs
jne
lock
xchg
xor
or
cmp
push
cmpb
cmpsb
inc
xor
in
pop
daa
or
clc
insb
sti
nop
and
mov
ds
movsb
fistpl
fwait
jle
std
dec
inc
fnsave
pop
das
jmp
std
add
les
hlt
or
arpl
mov
sbb
and
insl
pusha
ds
in
aas
stos
jmp
inc
cmp
cmc
insl
in
cli
jg
insl
mov
push
mov
mov
push
data16
mov
subl
and
loopne
mov
fs
insl
lock
popf
enter
add
lret
movsb
sbb
jns
in
pop
arpl
sub
inc
repz
sub
mov
mov
add
popa
enter
mov
cmpb
add
ja
out
mov
push
push
pop
orb
addr16
mov
lcall
lea
xor
test
cmp
das
je
or
add
xchg
mov
leave
inc
push
cmpsl
cmp
sub
fldcw
sub
mov
pop
inc
rcll
push
or
insb
push
in
xlat
mov
mov
add
int
enter
mov
push
cmp
add
jg
stos
out
inc
inc
inc
sub
mov
sti
cld
xchg
test
inc
in
mov
aad
mov
mov
xchg
je
loop
jg
lds
lds
cld
xor
dec
lea
push
movsb
push
aam
and
out
or
dec
xlat
adc
xor
inc
push
fldl
xchg
shr
leave
fsts
push
loop
inc
rcl
inc
pop
les
out
clc
jb
leave
inc
insl
lret
dec
rcrl
repz
or
enter
ds
jbe
aaa
out
adc
outsl
adc
ret
push
push
dec
or
std
cmp
jb
in
repz
call
out
pop
add
mov
fdivrp
cld
fmuls
test
lods
xchg
pop
sbb
push
or
icebp
mov
stc
and
fcomps
addl
jns
mov
add
fsubs
movsb
pusha
lds
sub
call
test
mov
lret
jae
shlb
xchg
dec
lret
xlat
xchg
mov
test
cmp
sbb
mov
xchg
sbbl
mov
mov
gs
mov
dec
popa
mov
leave
movsb
cmp
mov
or
xchg
mov
lods
aaa
mov
push
xor
xor
hlt
pop
in
pop
mov
call
testb
fsubl
cmpl
loope
xlat
stos
imul
and
and
push
mov
mov
or
lret
lret
stos
fldt
popa
dec
iret
addr16
les
dec
adc
ds
enter
pop
xchg
jp
imul
push
sbb
dec
push
icebp
pop
xchg
jne
push
lock
cmp
pop
out
push
je
sub
jle
sti
mov
je
dec
jle
gs
loop
stos
mov
iret
jmp
dec
and
xlat
mov
dec
push
push
or
or
fstpl
inc
pop
jg
or
repnz
jb
icebp
pop
icebp
jno
push
push
pop
ljmp
add
fdivs
hlt
lea
popl
jbe,pt
and
add
movsb
shl
and
mov
fst
pop
xchg
cld
cmp
in
enter
roll
and
push
or
cltd
push
adc
inc
adc
inc
cltd
in
cwtl
adc
cmpsb
popf
sbb
popf
jmp
ret
xchg
mov
add
sbb
dec
mov
or
pop
mov
push
loop
lds
out
jmp
jo
repz
jo
cmc
xor
movb
bound
pop
pop
and
frstor
popa
aam
xchg
push
sbb
and
pushl
cli
mov
pop
and
pop
sbb
rolb
jmp
data16
and
xchg
mov
mov
push
ret
push
in
std
cmp
leave
loope
mov
mov
adc
add
and
xchg
fistps
sahf
in
mov
lds
fstl
xlat
xchg
sbb
cltd
jae
add
pop
enter
mov
sbb
lcall
int
jb
pop
jmp
jno
pop
sbb
imul
stc
jbe
adc
cmc
pop
or
sbb
add
out
inc
sbb
mov
add
push
sahf
stc
pop
imul
jmp
arpl
or
mov
jmp
lcall
sbb
je
fwait
add
cmpsl
cmp
sbb
inc
jp
lcall
xchg
cmpl
and
in
xchg
pushl
sub
mov
sbb
or
or
add
sahf
jno
add
icebp
dec
es
mov
jmp
pop
lods
repnz
add
sahf
mov
sub
xor
das
mov
or
xchg
jmp
xchg
and
pop
jns
aad
mov
setns
dec
mov
mov
lds
adc
test
mov
xor
popa
into
popa
xchg
sub
lods
mov
iret
sbb
add
and
or
fisubs
loope
repz
mov
cmc
xchg
add
and
loop
mov
and
mov
jge
pop
test
std
fsubrl
push
and
and
and
sahf
push
stc
xor
clc
and
mov
in
add
or
nop
fistpl
ret
push
sbb
in
lods
je
scas
ficoms
mov
jbe
daa
imul
add
lahf
mov
shll
sbbl
sub
shr
insl
nop
popf
sahf
cltd
call
push
inc
std
jmp
dec
and
xor
popa
push
xor
xor
mov
mov
mov
push
mov
sbb
ficoms
mov
out
lahf
sbb
lcall
xchg
shll
sbb
cmc
mov
mov
loop
loopne
and
inc
add
adc
fcoml
ret
into
in
or
or
sbb
ficoms
ret
mov
out
push
mov
mov
loope
xchg
rclb
mov
mov
sub
mov
ficompl
mov
add
rclb
movsl
sbb
or
mov
push
jae
lds
sbb
lods
addl
add
or
cwtl
jmp
mov
sbb
shll
pop
popf
mov
inc
scas
imul
pop
cmp
dec
and
testl
daa
fcomi
mov
loope
mov
or
lcall
mov
inc
and
xchg
push
jmp
sub
fisttpll
add
pop
in
mov
or
sub
pop
mov
cmp
pop
int3
mov
loope
mov
pop
int
mov
fs
test
rclb
xchg
xchg
lret
outsl
in
add
pusha
jecxz
jb
push
pusha
mov
pop
pop
ds
jmp
test
pop
ds
jmp
jmp
idivl
lods
jmp
inc
int
fs
movsl
roll
in
std
subl
mov
lods
arpl
fbld
rorl
fsubs
mov
popf
sahf
andl
mov
mov
cwtl
mov
jecxz
lret
pop
or
stos
cmc
movsl
xor
test
mov
inc
leave
cld
movsl
lods
mov
subl
cmc
js
fstpl
mov
cltd
xor
push
in
mov
adc
test
inc
nop
mov
mov
push
and
scas
push
sub
adc
lret
idiv
lds
jmp
insb
pop
dec
movsl
cmpsb
mov
fsts
std
pusha
shr
int3
push
dec
idivl
sti
mov
and
ret
push
int
outsb
xchg
divb
push
xorl
ret
loopne
sahf
je
sub
mov
pop
bound
insl
in
sbbb
iret
rorl
sbb
scas
sbb
add
pop
push
adc
add
clc
adc
add
pop
out
adc
add
fcompl
sbb
adc
add
pop
adc
add
mov
lods
add
popf
sbb
push
add
pop
add
call
sti
add
pop
icebp
adc
add
jecxz
ficomps
aam
rolb
into
pop
leave
adc
add
mov
test
iret
xlat
insl
pusha
mov
mov
pop
popf
and
sldt
stc
pop
in
sbb
adc
add
pop
adc
jnp
push
pop
popf
push
adc
add
lock
call
add
pop
enter
mov
and
adc
pop
add
sti
adc
add
pop
fistl
rolb
int
pop
mov
lods
adc
pop
adc
or
add
pop
out
sbb
adc
add
pop
enter
sbb
and
pop
or
call
push
sbb
adc
add
pop
fcoms
shlb
dec
dec
pop
jo
jge
in
fiadds
int3
pop
adc
cltd
push
mov
add
pop
sti
adc
add
loop
xlat
sbb
adc
add
pop
mov
and
or
add
adc
add
loope
fstps
rcll
les
mov
subl
or
or
adc
add
call
adc
add
pop
rclb
add
and
and
adc
push
add
cli
pop
in
sbb
adc
add
pop
int
ret
test
pop
mov
sbb
adc
add
pop
ljmp
lret
sbb
adc
and
mov
adc
cltd
add
add
pop
jmp
faddl
ror
pop
mov
add
push
adc
add
pop
add
cli
adc
add
pop
loopne
filds
xlat
mov
enter
popf
rcrb
pop
mov
cltd
test
dec
pop
jnp
les
xor
popf
and
mulps
adc
add
cli
pop
repz
adc
xorb
push
movsl
ds
into
lock
jmp
movsl
sbb
adc
add
out
push
shll
fsubrp
lods
shll
fbstp
push
data16
clc
and
sbb
iret
adc
sbb
ljmp
movsl
pusha
popf
mov
or
ret
in
call
cmc
inc
movsl
test
movsl
jnp
push
insb
fcomi
mov
mov
ret
frstor
inc
es
movsl
xchg
inc
cmp
jo
movsl
dec
scas
xor
jb
mov
or
divl
lret
js
xchg
and
in
pusha
pop
inc
cmp
divl
push
fwait
cmpsl
js
int3
or
add
pushf
orl
pop
in
notb
adc
bound
mov
loop
cld
adc
sbb
lea
cltd
cmp
mov
scas
or
or
push
jmp
mov
xchg
cmpsb
pop
sbb
mov
add
aas
lcall
jnp
sbb
dec
subl
test
cmp
mov
push
mov
scas
pop
and
aas
pushf
xor
sub
or
lcall
jo
movsl
popa
fbstp
hlt
pushf
mov
sbb
add
movsl
push
clc
movl
sub
jbe
ljmp
std
pop
inc
push
ljmp
cwtl
xor
rdmsr
cmp
in
adc
mov
xchg
movsl
jg
add
test
movsl
ret
mov
lret
add
mov
gs
int3
sahf
adc
icebp
mov
leave
and
outsb
movsl
jne
cmp
jle
aaa
xchg
mov
inc
in
loope
mull
cmpsl
out
int3
pop
jle
movsl
nop
loopne
xchg
test
pop
push
dec
into
imul
data16
stc
push
lahf
sbb
xchg
adc
mov
shlb
ja
stos
add
inc
nop
imull
out
dec
mov
mov
loope
sub
pusha
add
and
mov
mov
mov
xchg
adcl
lods
adc
rcrl
push
mov
enter
cmp
jge
mov
adc
pop
mov
pop
ret
or
mov
test
ret
xor
movsl
loopne
and
cmc
enter
stc
jmp
les
fisubl
mov
loopne
cltd
imul
pop
mov
push
rcll
movsl
in
ror
add
jmp
clc
movsl
lods
lcall
movsl
xor
stc
adc
mov
push
mov
out
sub
sub
pop
out
in
gs
int
movsl
adc
and
mov
in
mov
add
movsl
mov
sti
aas
in
mov
add
shrl
adc
test
jecxz
gs
orb
popa
in
cmpsl
pop
and
dec
movsl
jno
loopne
xchg
stos
negl
bndldx
insl
and
adc
popf
mov
test
push
movsl
cltd
dec
jnp
imul
mov
inc
xchg
push
stos
sbb
mov
pop
sti
mov
je
clc
bound
mov
stos
rcll
movsl
sarl
stc
pop
cmpsb
lahf
movsl
cmp
out
mov
adc
xchg
scas
mov
adc
dec
nop
add
xor
call
movsl
movsb
dec
js
iret
cmp
out
pop
inc
jbe
xchg
stc
inc
xchg
pop
sbb
cmc
bound
push
idivl
adc
jg
xchg
leave
xchg
enter
sbb
dec
pop
pusha
icebp
movsl
sbb
imul
sbb
movsl
repnz
test
pop
mov
je
push
movsl
mov
inc
xor
movsl
int3
push
xchg
add
in
jge
lret
lods
mov
or
xchg
xchg
arpl
xor
push
mov
xor
dec
fldl
inc
out
mov
aad
pop
push
fs
movsl
pop
dec
or
jmp
mov
mov
mov
sub
neg
iret
movsl
or
mov
imul
ljmp
xor
push
dec
sbb
xor
add
sub
adc
insl
dec
jp
lcall
out
imul
jmp
popa
fs
mov
xchg
sahf
in
ja
inc
jb
xchg
movsl
xchg
inc
testl
movsl
cmpsb
aad
cltd
xchg
adc
movsl
jb
and
dec
mov
movsl
inc
dec
loop
rorb
inc
movsl
aaa
pop
daa
lds
movsl
lock
cmp
push
sahf
mov
xlat
xchg
jno
aam
xor
call
movsl
mov
movsl
fimull
loope
test
dec
call
movsl
mov
add
jne
subl
movsb
xchg
in
test
mov
xchg
insl
rclb
sbb
dec
adc
inc
adc
jge
test
mov
in
fbld
loop
dec
lret
test
add
jl
adc
xor
jge
add
and
mov
int
clc
push
cltd
mov
cmpb
cwtl
movsl
das
adc
xchg
mov
fucom
adc
mov
loop
dec
movsb
sbb
jb
jl
imul
and
mov
xorl
mov
fsubs
fidivrl
push
int3
repnz
call
in
push
mov
out
push
cmp
lds
mov
inc
jp
push
movsl
jno
mov
inc
inc
push
inc
pop
insb
push
sub
aad
adcb
movsl
loopne
popf
fwait
sub
xor
lds
dec
dec
pop
adc
pop
mov
lds
movsl
lods
sbb
test
popf
lahf
addr16
cmp
hlt
aaa
testl
in
mov
cwtl
hlt
jb
loopne
leave
movsl
add
testl
mov
shll
mov
xchg
xchg
cmp
xchg
sub
jb
mov
and
lds
adc
push
stos
movsl
cs
xor
push
movsl
cmp
imul
out
mov
sbb
add
cld
je
mov
ljmp
cli
out
mov
sub
testl
leave
rcl
inc
in
ret
or
xchg
in
xchg
movsl
jecxz
mov
mov
mov
imul
fidivrl
xorb
dec
inc
jl
bound
sbb
int3
movsl
mov
xchg
or
push
push
adc
push
push
dec
add
rorb
mov
stc
movsl
jle
in
in
or
out
mov
mov
movsl
imul
and
adc
dec
pusha
adc
movsl
mov
or
ja,pt
movsl
in
insl
pop
movsl
lret
out
pop
mov
js
adc
je
sub
jns
pop
lret
dec
pop
mov
adc
xchg
movsl
test
jmp
stos
sbb
mov
loop
jae
fwait
repnz
pushl
dec
pop
std
repz
mov
or
test
xchg
jae
outsb
add
shrl
movsl
jp
add
seto
push
add
lret
sub
mov
stc
cwtl
addr16
dec
pop
sbb
out
mov
push
cmpsl
xchg
cmp
lock
mov
jmp
test
dec
add
mov
jns
movsl
pushf
push
ljmp
imul
movsl
movsb
roll
aas
icebp
mov
pop
mov
aad
cwtl
xchg
repnz
movsl
bound
sbb
test
gs
fdivl
inc
movb
mov
outsl
movsl
cmp
outsb
dec
divl
sti
inc
xlat
or
push
movsl
pop
lcall
add
clc
movsl
add
xchg
sbb
in
mov
outsl
cmp
shrb
push
or
inc
in
mov
popf
out
imul
idiv
xchg
movsl
test
adc
mov
mov
mov
mov
pop
push
pop
mov
xor
int
adc
pop
mov
add
movsl
push
push
xchg
sub
inc
xchg
pop
dec
hlt
sub
mov
adc
lock
lret
movsl
icebp
roll
jg
movsb
movsl
fmuls
and
dec
xor
mov
icebp
push
cmpsb
or
cmp
lods
mov
sbb
cmp
xchg
ljmp
mov
jmp
pop
bound
cmp
dec
movsl
push
repz
pushf
push
jl
call
adc
jno
inc
cmpsb
add
movsl
loopne
dec
icebp
sbb
xchg
outsl
popf
inc
lods
cld
jb
mov
xchg
xchg
push
movsl
sub
test
aas
sub
sub
iret
outsb
das
aaa
stc
scas
push
jnp
inc
movsl
cmp
outsl
mov
pop
mov
jne
sub
pop
push
sub
and
leave
or
lock
xchg
lds
popf
loope
push
inc
movsl
sub
cmpsb
jp
jl
mov
mov
adc
mov
aaa
and
push
pop
lods
lods
das
mov
sub
cmp
test
pop
inc
int3
sub
jl
pop
je
insl
out
stc
pop
adc
lret
mov
movsl
mov
jmp
movsl
das
fidivs
xchg
cld
lret
xchg
sub
call
mov
repz
hlt
jge
xor
pop
inc
icebp
mov
sub
sbb
data16
movsl
andl
popa
pop
lods
shrb
mov
imul
mov
gs
pop
mov
std
popf
hlt
push
out
add
mov
sahf
bound
pop
shl
xchg
pop
fcoms
push
sub
cmc
dec
mov
std
call
push
movsl
cmpsb
push
xchg
cmp
mov
or
daa
adc
pop
jne
std
sub
bound
xchg
movsl
loope
xor
fnstenv
adc
das
or
movsl
dec
insl
jns
ljmp
lock
xor
xchg
aaa
and
ss
pop
icebp
and
in
cwtl
in
js
adc
mov
and
mov
shll
cmpsl
and
fldcw
lahf
shll
mov
jmp
or
push
xlat
imul
mov
and
outsl
sti
loopne
inc
xor
pop
push
not
aam
stos
movsl
jge
pop
xor
ficoml
mov
int
push
cli
cwtl
sbb
sbb
clc
addr16
add
rcrl
cltd
pusha
std
add
jb
adc
mov
pop
into
leave
movsl
mov
popa
movsb
cmp
fildll
ljmp
add
aad
addr16
adc
adc
xor
sub
movsl
dec
scas
popf
sti
imul
or
xor
addr16
movsl
sbb
cmp
ss
cmc
push
lds
sahf
add
scas
push
into
insb
movsl
pop
rcrb
or
or
scas
and
in
push
loope
test
fnsave
and
arpl
pusha
mov
mov
pushf
int
xchg
lahf
add
sbb
inc
icebp
scas
movsl
mov
sbb
insb
aas
push
call
aad
les
movsl
mov
adc
movsl
xor
into
in
dec
or
adc
stc
mov
lret
xchg
jg
pop
test
decb
sub
jle
daa
in
scas
mov
movsl
fwait
jo
sub
imul
clc
shll
mov
rcrl
cs
lea
cli
icebp
outsl
movsl
add
leave
shrl
jne
jns
in
cmp
mov
xor
add
mov
in
in
stos
mov
add
test
in
movsl
cmp
scas
pop
add
mov
pusha
rep
sbb
mov
int
popf
movsl
stos
fwait
inc
dec
jp
dec
inc
xchg
sbb
sahf
and
push
push
mov
pop
lods
pop
mull
rcll
movsl
popa
aas
push
or
arpl
imul
adc
lds
or
out
movsl
lret
jbe
and
mov
gs
daa
jle
popa
aad
insl
popl
or
popf
lcall
pop
sub
test
add
shrb
popa
push
jl
lds
aam
out
xchg
sub
or
mov
add
aaa
sub
movsl
sahf
or
std
xor
into
mov
sbb
movsl
je
loope
mov
mov
shll
adc
mov
lods
adc
sarb
dec
ljmp
out
subb
dec
mul
shr
cli
mov
rcrb
xor
loop
mov
stos
movsl
stc
mov
inc
pop
popa
jne
jle
pop
cmpb
mov
sub
jbe
int3
fsubl
ja
fstpl
leave
lds
hlt
adc
xor
push
lahf
in
pop
push
movsl
pop
icebp
fistps
fcmovbe
inc
std
mov
test
adc
test
mov
jnp
pop
shlb
lcall
shll
jo
movsl
xchg
xor
jae
repnz
movsl
xor
dec
pusha
movsl
lods
adc
or
imul
add
xchg
xchg
and
xor
enter
mov
or
jecxz
mov
jne
add
cmp
or
out
pop
xchg
push
add
sbb
int3
fisubl
std
test
lret
movsl
cmpsl
mov
insb
cmpsl
dec
mov
xor
movsl
neg
ljmp
mov
sarb
fsubrl
pop
or
jmp
jl
icebp
into
in
loope
inc
shll
test
les
add
or
mov
pop
mov
add
pop
mov
bound
dec
and
out
push
addl
cmc
stc
mov
imul
movsl
sub
test
xchg
and
add
dec
sbb
jae
movsl
into
mov
outsl
popf
adc
addr16
xchg
cmpsl
mov
xor
inc
das
push
or
mov
jecxz
jbe
repz
movsl
jns
xchg
xchg
xlat
sub
pop
jg
sahf
xor
outsl
popa
movzbl
out
cli
test
out
add
mov
test
pop
stos
push
js
movsl
dec
jb
adc
and
addl
aam
arpl
pop
mov
movsl
aad
cmp
in
xor
sub
mov
movsl
aas
or
rcrb
xchg
call
aam
test
sub
mov
pop
push
mov
jecxz
xor
stc
imul
push
dec
inc
mov
movsl
fistps
in
lds
jns
jb
adc
fnstenv
cli
stos
pop
in
inc
and
jo
or
pop
mov
jge
call
sub
inc
movsl
xchg
mov
and
movsl
loopne
pop
fimull
jno
movsl
sbb
push
push
imul
push
movsl
icebp
in
pop
popf
lods
das
or
insl
push
dec
adc
movsl
cmpsb
push
mov
dec
test
xchg
pusha
jnp
jno
bound
in
inc
adc
xor
mov
push
xor
sub
data16
xchg
mulb
cltd
cs
mov
sub
shrb
pop
pop
stos
and
mov
jp
in
test
jns
std
in
call
pop
movsl
mov
sbb
nop
or
movsl
into
cli
das
jp
dec
loopne
inc
adc
call
ret
pop
outsb
pcmpeqw
incl
rcrl
jp
jnp
cmp
mov
xor
fistpl
xchg
movl
stos
pop
fistps
xor
bound
cltd
fdivrp
das
movsl
sahf
push
mov
xchg
jp
je
call
mov
pop
shrb
daa
adc
popa
shlw
pop
mov
sub
nop
mov
les
adc
inc
add
inc
lea
in
mov
test
and
cmp
xor
repz
dec
inc
aaa
shl
cmpsb
mov
sbb
push
jo
shlb
out
jp
ja
pusha
int3
or
cmpsb
movsl
xchg
cmp
mov
fidivrl
add
adc
or
dec
jmp
daa
pushf
not
outsl
movsl
add
bound
sbb
mov
push
sub
jae
xor
pop
add
xchg
xor
adc
std
bound
or
and
ds
or
testl
out
pop
and
pop
push
inc
xchg
aam
int
lock
movsl
cmp
sahf
dec
shlb
cmc
movsl
sbb
xchg
cwtl
mov
pop
sbb
shrb
lret
jl
fists
outsl
je
das
push
es
dec
cmp
mov
insl
xchg
inc
test
push
cmpsl
xor
in
in
movsl
jae
aam
sub
mov
int
sbb
lock
movsl
pop
movsb
xorb
or
movsl
xor
mov
ss
pop
adc
or
mov
mov
dec
ljmp
out
fxch
jecxz
xor
push
shl
or
loop
test
in
pop
stos
pop
and
aam
mov
and
jmp
arpl
outsb
pop
movsl
aas
into
lods
fsubrl
xlat
and
jnp
test
jnp
xchg
mov
adc
adc
pop
push
jp
ret
push
ljmp
mov
arpl
in
shll
jmp
stos
dec
xor
fisttpll
ds
cmp
cli
or
les
test
cmp
mov
xchg
mov
icebp
sbb
pop
mov
jo
adc
in
adc
sub
cwtl
ret
movsl
mov
loopne
cmp
imul
push
pop
lcall
pop
movsl
jno
sub
mov
xor
dec
imul
pop
xor
inc
ficoms
andb
cmp
insb
outsb
sbb
les
addr16
mov
aas
loope
cmc
mov
cs
push
movsl
xchg
lcall
leave
dec
icebp
xchg
rcrb
addr16
mov
xlat
xor
sub
xchg
movsl
lsl
add
movsl
fdivrl
xor
movsl
shrl
sub
pop
shrl
clc
movsl
aam
xchg
adc
movsl
pusha
and
je
inc
ljmpw
cmpsl
in
out
adc
lahf
int3
shld
imulb
pop
rcl
xchg
pop
jns
test
xchg
ficoml
push
cmp
push
movsl
int3
js
icebp
push
scas
jge
mov
jo
std
out
nop
popf
test
movsl
mov
jmp
mov
orb
movsl
mov
filds
xchg
cmp
in
or
jmp
mov
scas
push
push
popf
xor
shll
jle
jo
movsl
xor
inc
test
add
cltd
mov
sbb
jne
popf
jmp
out
pop
lahf
out
movsl
push
inc
imul
dec
ss
out
repz
xchg
lds
movsl
jmpw
mov
dec
nop
movsl
mov
mov
or
or
dec
or
jb
push
add
clc
dec
cmpsb
push
mov
mov
scas
push
roll
lds
and
stos
push
pop
mov
movsl
sti
jmp
mov
lea
call
jmp
mov
movzbw
bswap
mov
push
movb
pushl
pushl
ret
pusha
pushf
push
lea
ja
not
call
xlat
push
mov
fwait
mov
jne
std
lret
cmp
xor
adc
mov
daa
sub
pusha
mov
push
int3
mov
sub
fcomi
out
dec
sarl
xor
jno
xchg
mov
repz
mov
loope
mov
or
daa
ja
mov
mov
imul
loope
lds
rol
flds
mov
xchg
mov
mov
xor
mov
jge
push
test
or
lods
mov
je
fwait
mov
scas
or
or
int3
adc
clc
fcmovne
xor
mov
jmp
sub
jnp
pop
lds
mov
mov
pop
ret
fistpl
leave
cmpb
sbb
cmpsl
cmpsb
xchg
out
add
into
ret
add
dec
xchg
mov
in
push
nop
cmpsb
imul
dec
stc
inc
lcall
repz
jmp
adc
pushl
inc
loopne
mov
push
adc
inc
js
pop
pop
push
mov
add
testb
xchg
out
mov
int
mov
in
sbb
mov
xor
mov
das
stc
cmp
sbb
cmp
or
dec
sbb
js
fs
jl
inc
stos
jo
ret
add
aaa
not
addr16
xchg
insl
mov
in
fistl
adc
je
and
dec
movsb
js
dec
mov
loop
lret
adc
sbb
pop
mov
aad
aad
out
add
out
cmp
mov
out
sbb
sarl
popa
xor
add
je
xor
and
sub
lcall
in
and
insl
mov
ljmp
and
dec
push
repnz
daa
xor
pop
call
fcompl
or
or
sahf
cmp
adc
stos
leave
ret
cmpl
and
mov
loopne
ds
std
cmp
fwait
dec
scas
insl
mov
sub
adc
bound
and
or
mov
imul
xlat
rcrb
out
aas
pop
icebp
filds
push
sti
xorl
sub
inc
xorb
xor
aam
sbb
xorb
xor
cwtl
js
dec
xchg
inc
mov
test
pop
lock
fbld
mov
mov
add
jmp
ljmp
xor
add
push
fmul
and
in
int3
push
jo
jbe
xor
dec
jns
or
or
mov
mov
cltd
push
xchg
and
push
cmpl
icebp
daa
in
loope
leave
ret
add
dec
cmpl
rol
mov
shr
sub
add
stc
neg
mov
stc
clc
test
call
nop
xchg
dec
repnz
xchg
lods
pop
mov
cltd
pop
test
jns
push
sbb
lock
js
sub
shlb
popf
pushf
mov
gs
push
sub
pop
xchg
sub
outsb
out
es
xchg
push
dec
loopne
aas
retw
jmp
sub
stc
sbb
adc
cmp
jae
jle
mov
jl
mov
inc
icebp
stc
data16
jbe
dec
mov
push
mov
jbe
add
int3
add
pop
leave
aad
add
mov
lea
insl
fnstcw
cmc
sbb
fisttpl
or
jb
mov
inc
gs
cmpsb
add
pop
pushf
gs
je
xlat
aad
adc
out
sub
mov
jbe
into
dec
stos
insl
jns
inc
cmp
xor
push
js
pusha
cmpsl
pop
mov
outsb
aaa
adc
fcompl
and
loopne
or
xchg
mov
fcomps
cmp
cld
add
sbb
jbe
add
ret
add
cmp
pop
add
pushl
jmp
mov
mov
inc
cwtl
pop
subb
js
jl
push
ljmp
into
sub
faddl
pop
xchg
test
jne
xchg
mov
and
jns
fsubl
xor
ljmp
sub
mov
inc
fbld
xor
dec
cmpsb
dec
pop
jns
inc
dec
mov
adc
cmp
cmp
lahf
and
insl
xorb
jp
cmpsb
scas
mov
scas
jp
jp
mov
lret
mov
jns
gs
mov
mov
gs
mov
jbe
mov
gs
sahf
push
mov
xchg
mov
outsb
scas
push
lret
mov
cmp
mov
xorb
popf
push
cmp
and
sbb
adc
sbb
adc
add
lret
jbe
ljmp
jns
fidivrs
fidivs
sbbb
push
mov
xor
dec
mov
scas
lcall
mov
jae
jmp
repnz
comiss
das
cmp
cmc
sahf
and
aaa
mov
xchg
jge
inc
stos
imul
in
lds
out
inc
push
pushl
pushl
ret
xchg
bswap
ror
shr
pusha
mov
cmp
test
stc
sub
pushf
movw
pusha
mov
rep
pushf
mov
mov
pushf
mov
movb
lea
jmp
in
push
mov
in
push
push
ficoml
xchg
dec
stos
jle
push
out
or
xlat
sbb
jmp
ja
insb
int
pop
subl
xlat
es
adc
jnp
rcrl
or
lret
pop
fwait
cli
lahf
fwait
fs
sti
lret
push
lock
std
ljmp
ss
mov
ss
xchg
ret
add
adc
stc
pusha
mov
repnz
pushf
movb
jmp
jp
test
cmp
sbb
or
mov
xchg
dec
icebp
xor
outsl
xor
jg
jbe
daa
pop
icebp
shlb
shrb
adc
sbb
clc
aas
push
in
bound
ljmp
mov
sub
and
cmp
push
es
cmpsl
jbe
push
dec
add
cmp
sarl
sahf
cwtl
cmpsb
push
mov
out
mov
lock
imul
out
inc
mov
and
shl
mov
or
iret
loopne
es
out
sub
test
fs
movsl
mov
and
xchg
xchg
and
iret
and
loop
jg
xchg
js
push
mov
pusha
ret
add
fistpl
cmp
xchg
xor
or
add
call
movb
lea
je
stc
add
pusha
pusha
cmp
pushl
pushl
lea
jb
stc
cmp
call
pusha
call
lea
je
stc
sub
pusha
pushl
cmp
test
cmp
jmp
sub
jne
jmp
jl
jnp
fsubl
test
pusha
mov
mov
adc
ret
test
es
cmp
shr
std
in
pop
es
mov
rol
pop
pusha
sbb
shl
leave
and
mov
ror
mov
mov
lds
cs
pop
push
add
int3
stc
cmp
test
call
cmp
fwait
insl
mov
pop
ret
add
out
pmaddwd
pusha
pusha
call
xor
sub
out
ud1
adc
or
adc
fstp
cs
push
mov
pop
das
shll
cmp
out
cmp
ret
adc
std
and
lods
cmp
and
and
inc
ret
mov
test
mov
xor
pop
std
stc
xor
sar
in
sbb
shll
adc
in
sbb
mov
in
sub
dec
mov
adc
es
add
cmpsl
outsb
cltd
sub
hlt
dec
xchg
adc
adc
add
sbb
and
adc
push
fisubs
cmp
push
pop
int
mov
xchg
pop
adc
faddp
sbb
sub
es
xor
xchg
pushf
mov
pop
outsl
pop
into
aas
test
sub
not
add
xor
test
mov
cltd
outsl
cmp
adc
clc
popa
lea
pop
inc
loope
sbb
fcomi
ss
sbb
mov
push
enter
enter
mov
xor
pop
sub
or
push
in
or
push
int3
adc
add
jecxz
movsl
pusha
sub
pushf
pushf
jmp
ds
adc
mov
jae
pop
outsl
mov
dec
dec
stos
sbbb
sbb
repnz
sbb
mov
addr16
in
push
sub
cltd
mov
test
jno
leave
sarb
push
enter
xchg
mov
mov
dec
mov
lods
sub
in
add
and
dec
push
mov
les
lock
add
mov
jmp
dec
jb
insb
inc
push
xor
sub
flds
std
cmp
pop
cmpsb
out
push
pop
xor
adc
pop
cmp
cmp
in
xchg
jbe
add
pushf
mov
call
inc
out
fwait
lahf
pusha
ljmp
popa
mov
mov
jg
sbb
leave
add
sbb
xor
mov
xchg
dec
pop
add
push
iret
out
pusha
jmp
sub
pusha
jmp
jmp
bound
test
xor
enter
in
and
cmp
xor
clc
mov
sub
out
adc
out
cs
pop
push
mov
pop
push
sub
in
and
xor
and
pop
scas
push
dec
mov
rolb
mov
xchg
push
pop
icebp
out
or
test
dec
fs
fstl
xorl
jb
ja
lea
jns
mov
jo
and
pop
mov
jo
and
ret
add
jl
dec
push
pushf
lea
call
pushf
pushf
pushf
mov
pusha
lea
jmp
mov
movb
lea
jmp
fwait
repnz
sub
movsl
pop
stos
pushf
imul
lcall
sti
aas
fbld
std
or
in
mov
fldl
test
sub
or
push
xchg
ficomps
pop
and
jae
fldlg2
notb
loope
jae
push
aad
out
rorl
subb
daa
rorb
enter
cld
lock
mov
lcall
sub
sub
ret
add
pusha
mov
adc
sar
ds
add
push
repnz
repnz
or
movsb
iret
cmp
ds
xor
mulb
cs
movsl
jnp
pop
mov
outsl
lahf
and
ja
xchg
xchg
push
and
es
pushf
xchg
push
int
call
and
jmp
mov
xchg
dec
lea
and
fcompl
dec
movsb
or
popl
clc
pop
sbb
lds
in
rcrl
addr16
ret
add
aam
xor
shlb
inc
js
test
mov
subb
mov
cmp
iret
int
into
icebp
xchg
mov
xchg
icebp
insl
dec
adcl
add
xor
mov
es
faddp
cmp
push
repz
insl
xchg
mov
movsl
pop
or
nop
cmc
dec
pusha
jno
mov
push
outsl
aad
in
es
nop
add
cld
and
das
int
das
stc
js,pt
push
mov
mov
cmp
xlat
inc
lcall
lret
or
ret
ret
add
inc
andl
test
bnd
adc
lea
jae
call
lea
pushl
mov
jmp
add
out
pop
ret
std
aad
shrl
stc
pop
lods
dec
cmc
push
movsl
mov
insb
comiss
or
scas
popa
js
jp
aaa
and
sbb
je
ret
push
test
outsl
test
pop
push
dec
xchg
add
data16
popa
in
add
aas
and
lock
roll
out
ret
sbb
adc
lahf
cmp
xchg
pop
ret
add
fcoms
out
movb
dec
pushf
lea
jne
adc
inc
bsr
mov
cmc
call
jmp
lea
je
pushf
stc
pushl
pusha
add
pushf
test
pushf
pushl
cmp
call
ror
pushf
mov
dec
call
pushl
pusha
adc
pushl
lea
call
ja
pusha
pushl
lea
jb
push
pushl
ret
xchg
fnstsw
pop
push
pop
mov
mov
pushf
insb
sbbb
xchg
inc
lcall
cmp
sar
dec
jle
lret
lods
mov
xor
and
mov
jb
dec
pop
das
sub
js
push
jbe
xchg
jo
pushf
mov
xchg
or
cmp
push
mov
push
cmp
int
daa
cltd
outsl
xorl
dec
xchg
inc
popf
ret
add
es
sbb
pop
stos
iret
mov
xchg
dec
scas
ja
push
mov
xor
mov
popa
pop
ss
sbb
sub
and
mov
out
mov
xchg
outsl
dec
addr16
jp
xchg
sbb
and
cmpsl
lret
decl
hlt
in
adc
mov
sub
mov
jnp
addl
faddl
orb
loop
xor
sti
xor
out
ret
add
test
or
into
push
cld
call
mov
adc
daa
call
scas
dec
mov
popf
mov
repnz
in
sub
jno
test
dec
pop
test
jo
add
imul
fstps
mov
xchg
xor
jo
stos
inc
push
imul
sub
ds
and
push
mov
mov
push
ret
add
push
fbstp
pusha
mov
lea
call
cmc
jne
cmp
push
lea
jae
test
pusha
mov
cmp
pusha
jmp
dec
jb
inc
cwtl
mov
push
push
sar
pop
sbb
jg
dec
cmpsl
pop
mov
nop
jno
dec
es
lea
cmc
popa
xchg
jo
pop
and
lods
pop
fwait
xchg
cmpl
scas
mov
iret
negb
adc
sub
popa
ret
mov
add
das
push
rorl
inc
xchg
add
loopne
outsl
cltd
ja
ss
and
add
jle
jb
push
in
hlt
push
in
rclb
ret
add
test
movl
movb
mov
cmp
clc
test
pushf
push
pushf
lea
je
clc
jmp
bt
imul
test
stc
add
pushl
movw
pushf
mov
lea
jmp
lock
cwtl
jb
sbb
lock
enter
lock
cmp
sbb
push
aam
bound
out
pop
je
mov
jns
jb
mov
jno
iret
and
cltd
inc
jb
dec
gs
cmp
aaa
fprem1
fimull
mov
movsb
pop
mov
daa
aam
add
mov
jnp
daa
popf
pop
imul
addr16
stos
cld
pop
ret
sbb
mov
mov
das
xchg
push
test
sbb
ret
add
dec
xorl
inc
add
push
shll
dec
xchg
outsl
xchg
dec
xchg
addr16
ja
mov
rolb
and
adc
xorb
inc
cs
adc
cmpsb
inc
mov
inc
test
sbb
mov
cmpsb
inc
jae
arpl
popf
leave
pop
xchg
cltd
adc
sbb
ss
xor
insl
movsl
sub
out
adc
daa
jecxz
cmc
fstpt
add
sub
xor
sub
pop
cmc
fsubs
lock
fmull
mov
icebp
sub
std
in
pop
test
mov
stc
pop
jae
or
int
test
add
aas
fidivs
lock
pop
ljmp
xor
sub
std
xchg
push
cmpb
xchg
ret
shll
xor
cmpsb
dec
orb
cmpsb
push
aaa
popa
inc
movl
push
mov
mov
ficomps
ficoms
sub
std
test
add
inc
enter
aaa
ret
sub
add
insl
movsb
pop
lock
je
popa
pop
sub
shll
sbb
mov
push
into
add
enter
fwait
mov
in
jne
loopne
fdivrs
dec
stos
xchg
sub
sbb
fisttps
dec
xlat
imul
ja
aas
sbb
or
stc
xorl
in
icebp
pop
stc
cmpxchg
add
or
jecxz
enter
add
add
repnz
xchg
lea
jb
clc
cmpb
call
cmp
cmp
mov
lea
lahf
movzbl
mov
mov
mov
call
jo
scas
jp
es
mov
or
pop
in
shrb
rorb
sbb
xchg
fistps
std
xchg
popa
out
pusha
lret
pop
int
rolb
and
mov
fimuls
pop
dec
mov
aaa
xor
aam
test
insl
cmpsb
insb
fcomi
jno
xchg
mov
lret
dec
fdiv
in
faddp
es
inc
std
push
js
xlat
adc
ret
xor
mov
rcr
fsubp
xor
sbb
cmp
lret
adc
push
int3
ds
sub
fdivs
fcompl
call
movl
and
ja
pushf
pushf
sub
call
cmc
fwait
ja
jno
out
sti
jle
and
and
push
sub
push
out
xor
sub
adc
pop
loop
sub
gs
fistl
test
nop
mov
xor
sub
hlt
sbb
sub
in
rcr
pop
test
jg
xor
loop
outsl
inc
push
mov
xchg
popa
rclb
xchg
cmp
enter
arpl
push
testb
enter
xor
mov
or
aaa
in
or
add
mov
push
add
inc
gs
popa
jbe
inc
imul
add
fildll
lret
cld
les
fs
ja
cmp
sub
stc
add
pushf
push
lea
jmp
test
pusha
jmp
jmp
dec
jge
inc
mov
and
fisttpll
test
jl
add
add
js
dec
cmpsb
hlt
sbb
push
icebp
sub
daa
nop
ljmp
jl
orl
movl
call
pushl
lea
jg
push
lea
call
pusha
lea
jp
push
pushf
adc
jmp
jmp
mov
push
popa
lahf
and
in
jmp
insl
test
pop
inc
scas
out
scas
nop
repz
loope
inc
cmc
scas
xor
in
sub
jmp
mov
imul
sub
add
lds
leave
pslld
sbb
push
adcb
sub
lret
rol
int
mov
movsl
jmp
mov
and
cmp
mov
sbb
mov
add
clc
cmp
xor
movl
call
cmp
adc
jns
adc
into
push
ljmp
inc
or
cmpl
xor
dec
repnz
sub
jnp
mov
mov
push
sbb
and
cld
adc
imul
mov
shrb
icebp
insl
arpl
fidivrs
xchg
outsl
movsb
fcoml
mov
add
in
sub
scas
cmpsb
push
xchg
add
mov
xchg
inc
sbb
adc
imul
in
icebp
fcomi
fbld
jne
pop
mov
xchg
sub
add
test
pusha
push
lea
jb
jmp
call
or
xchg
mov
push
mov
scas
mov
popf
in
insb
mov
fisttpll
push
add
dec
mov
pop
or
sub
in
mov
pop
mov
shlb
sub
xor
sarb
pop
xor
push
inc
scas
mov
pop
mov
call
cli
rorl
iret
fstpt
jge
jecxz
inc
mov
mov
lret
sbb
add
adc
btr
jno
popa
xchg
mov
insl
xlat
imul
fiadds
cs
test
rcr
xchg
setns
movzbl
mov
and
ror
bt
cmc
mov
call
inc
pushf
not
mov
mov
push
jmp
or
sbb
xchg
test
lea
popa
addl
mov
imul
add
cmp
sbb
sbb
sub
mov
mov
call
loope
ficoms
insb
jne
xchg
testl
out
pop
aam
and
enter
xchg
outsl
lods
dec
sub
mov
add
or
aam
loopne
shlb
add
dec
ret
add
cmc
cmp
jge
andl
push
lret
cmp
push
ficompl
jbe
jp
push
mov
faddp
not
or
nop
bound
aad
mov
nop
mov
or
sub
movsb
push
xor
test
fdiv
fs
inc
scas
push
dec
mov
dec
fcompl
fsubrl
add
shlb
popa
mov
test
lods
into
fstps
push
push
jge
lds
adc
nop
inc
push
je
dec
mov
cmp
or
adc
add
xchg
push
je
jmp
add
dec
gs
popa
addr16
outsl
js
add
std
idiv
decl
xor
pushf
pushl
movl
pushl
ret
add
inc
gs
outsl
fs
gs
imul
add
test
repnz
out
sbb
pusha
add
lea
jo
movzwl
and
adc
pushf
mov
stc
movw
add
pushf
cmp
mov
cmp
test
push
jmp
imul
pushf
add
pusha
pushf
push
lea
jmp
scas
ja
repnz
inc
test
adc
test
pusha
mov
clc
cmp
xchg
xor
fwait
das
in
xor
jbe
mov
push
sbb
jae
or
xchg
dec
lret
jle
loopne
stos
mov
and
cmp
add
cmp
outsl
nop
stc
sti
out
loopne
das
xchg
sub
ss
sub
int
cmpl
lods
imul
xchg
and
adc
sub
add
movnti
sar
pop
stc
movzwl
stc
mov
cmc
add
pushl
mov
call
mov
movsbw
mov
test
cmp
jmp
jb
test
xchg
incb
adc
sub
xor
sub
add
pop
fldt
out
in
cmpsb
inc
cwtl
insb
fsubrp
cmpsb
xor
inc
pop
mov
xlat
xor
or
mov
cmp
xchg
mov
and
icebp
push
cmc
daa
jnp
push
je
sbb
movsb
inc
pop
adc
inc
mov
lds
pop
and
dec
imul
mov
lret
jne
dec
mov
arpl
mov
mov
or
and
xor
sub
filds
jg
out
fisubrl
inc
insb
adc
aam
sbb
hlt
or
sbb
sub
mov
in
les
test
mov
xor
or
adc
push
and
push
pop
adc
cmp
aam
stos
inc
repz
dec
xchg
or
jb
adc
cmp
adc
std
sub
dec
aas
sbb
data16
enter
hlt
push
test
mov
mov
pop
aas
lods
ret
pop
repz
in
loop
ficoml
repnz
add
and
sub
adc
lds
add
adc
imul
mov
lds
subb
pop
mov
mov
or
insl
out
insb
mov
lcall
loopne
sbb
sbb
mov
inc
cltd
fucomip
arpl
adc
dec
add
mov
inc
mov
leave
test
adc
movsl
out
test
ret
and
in
pop
dec
dec
mov
insl
mov
imul
xchg
push
jbe
pop
mov
mov
out
fldcw
cli
sbb
ss
es
push
ret
adc
fidivrs
xor
dec
mov
adc
mov
pushf
mov
xchg
xrelease
aad
cwtl
mov
sbb
pop
adc
loop
adc
or
pop
mov
add
imul
in
xchg
sbb
stc
leave
jae
pop
test
loope
rorl
iret
sbb
out
or
add
pop
push
cli
mov
fs
ja
call
call
call
push
lea
jmp
pushf
lea
jb
push
movw
pushl
ret
add
mov
cmc
cmpb
jns
pusha
mov
lea
jne
sar
add
jmp
pusha
pushf
mov
mov
pushf
pushf
not
lods
mov
call
inc
das
repz
rorl
dec
rclb
sahf
push
mov
push
xchg
push
out
adc
sbb
mov
icebp
push
loop
push
outsb
mov
inc
mov
outsl
or
cmp
mov
daa
jb
xor
into
filds
das
jp
jnp
push
dec
ja
roll
test
sbb
xchg
jg
pop
mov
lods
inc
popf
ja
ret
add
inc
and
xchg
and
decl
xchg
pop
add
pushf
sub
cmp
inc
add
add
inc
cmp
shrd
shld
mov
jmp
pusha
pushf
jmp
inc
sbb
or
std
daa
mov
fwait
lods
pop
mov
jb
pop
push
mov
pop
fisubrs
sub
sti
or
push
pusha
push
pop
xor
cmp
fstps
cmc
dec
lahf
fwait
fs
sub
cmpl
push
pop
in
push
fnstcw
pop
ret
cld
divb
movb
out
xchg
js
je
js
add
add
popa
addr16
imul
outsl
jbe
add
xorl
jb
pop
ljmp
sbb
int
loope
rcrl
call
ljmp
adc
stos
inc
pop
loopne
scas
or
xchg
cmpsb
je
enter
dec
add
add
xor
sbb
dec
movsb
push
ds
push
ret
add
mov
and
ror
call
fwait
xlat
sub
or
pop
mov
jle
sub
or
jp
push
fiaddl
call
add
xchg
push
cmp
ds
daa
lret
dec
xlat
pushl
cld
int3
and
cmp
idiv
xor
adc
lock
std
enter
dec
adc
insb
jp
imul
test
into
sbb
sub
xor
and
bound
add
sbb
dec
ret
add
add
or
adc
xchg
scas
jnp
or
pop
ret
jae
pop
xor
test
fbld
aad
dec
adcb
add
add
sub
leave
mov
in
jmp
or
or
adc
cmc
int
ror
jne
aad
adc
ret
sub
sbb
sub
cmp
adc
js
xor
sub
out
push
mov
sbb
mov
push
mov
mov
sahf
push
faddp
add
jl
jl
addb
out
das
fistl
cmpsl
inc
xchg
ja
mov
mov
cmp
mov
pusha
inc
cmp
mov
arpl
jns
jge
cmpsl
bound
test
cmpsl
fiaddl
nop
mov
cmp
xorb
sbbb
xchg
bound
aam
cmp
out
lahf
mov
stc
lods
push
test
sbbb
lds
icebp
aaa
xchg
pop
mov
addr16
push
ret
add
adc
sbb
ja
not
mov
pusha
rcr
shl
mov
call
clc
cmp
call
jmp
mov
movw
lea
jmp
movl
mov
pushf
pushf
movb
lea
jmp
add
dec
outsl
arpl
inc
jb
add
nop
js
mov
sub
loope
icebp
sub
and
sub
nop
dec
xlat
xor
cmp
jg
xchg
or
std
in
xor
das
out
adc
or
adc
pop
movups
mov
cmc
jns
dec
cmp
and
cltd
mov
test
xor
inc
and
out
push
sub
cmp
and
xor
cmp
pop
stos
jl
add
add
and
push
xorl
sbbl
sbb
xor
sub
pop
mull
negl
sub
xchg
mov
sub
cmovp
dec
bound
xor
and
mov
mov
filds
jae
cmpsl
cmpsb
mov
pop
out
notb
inc
xchg
add
call
sbbb
mov
fs
scas
inc
cwtl
inc
xchg
pop
cld
dec
hlt
or
ss
sbb
ret
add
bsr
mov
xor
sar
mov
jmp
call
lea
je
pushf
sub
call
shr
xor
and
in
push
insb
xor
pop
pushf
inc
movsb
push
rclb
pop
mov
std
popf
ret
scas
js
mov
mov
das
sub
or
fdivrs
adc
loop
ja
imul
push
sti
fldt
into
ret
push
sbb
into
push
loopne
les
cld
pop
mov
dec
xchg
push
nop
ret
add
pushf
cmc
sub
cmp
bt
cmp
pusha
lea
jae
pusha
movb
pusha
lea
jmp
pusha
movb
not
inc
lea
not
inc
or
xchg
bswap
ror
cmp
sbb
mov
clc
mov
pushf
stc
cmc
mov
rcl
bswap
push
mov
cmp
pushf
sub
jmp
add
lods
je
ljmp
jns
pop
cltd
add
pop
mov
test
imul
lret
shrb
movsb
fs
dec
stos
mov
mov
lcall
add
inc
and
cmc
mov
call
movb
movl
pushf
movl
pusha
pusha
pushf
lea
jmp
pop
inc
shlb
movsb
xor
cli
cld
sub
inc
mov
push
mov
fidivrs
push
lea
sub
pop
xor
jno
sahf
mov
xchg
mov
cli
pop
inc
jl
das
pop
hlt
xor
jp
cmpl
pop
in
xlat
ljmp
xchg
adcl
jne
add
sti
ret
add
mov
js
mov
lods
or
pop
lods
fs
cltd
outsl
jle
popa
aas
mov
pop
gs
lcall
mov
xchg
mov
push
jg
test
xchg
loop
clc
xchg
xchg
jno
mov
fisubrs
testl
notb
scas
jns
jne
pop
stos
jno
dec
mov
add
stc
lea
and
pushf
sub
neg
movsbw
pusha
lea
push
stc
push
jmp
call
sar
scas
imul
push
sahf
ds
push
cli
es
and
push
loopne
push
lcall
pusha
xchg
nop
inc
adc
adc
xor
ret
loope
fdiv
add
add
loop
xor
dec
mov
pop
mov
sbb
push
notl
out
test
jae
pushf
outsl
jle
add
xchg
mov
movsl
add
add
std
pusha
test
shrl
in
xorl
dec
xchg
jl
mov
xchg
out
pop
sahf
push
mov
add
sahf
push
xchg
je
mov
or
enter
int3
cmp
or
or
xchg
cli
jns
xor
xor
lea
out
xor
sbb
mov
popa
in
movsl
dec
popa
jmp
sub
push
push
pop
ja
subb
jle
rcl
lret
xchg
pop
xchg
mov
mov
sahf
dec
outsb
inc
sub
or
ds
shlb
nop
jp
dec
xchg
add
out
cs
pushf
lea
jne
bswap
mov
jae
clc
cmc
sub
xor
neg
neg
bswap
mov
call
lahf
stc
add
pop
lock
xor
xchg
movsb
push
out
cmp
jg
addr16
xor
dec
mov
or
pop
test
inc
mov
lret
sub
adc
fiaddl
sub
mov
jne
jno
sub
pop
mov
or
subl
jecxz
fidivrl
lret
fisubrl
aad
sbb
sub
and
shlb
sbb
addb
push
push
outsl
gs
mov
aas
std
pop
fnsave
leave
sbb
add
stc
adc
lret
xchg
jns
pop
cmpsl
push
mov
jecxz
xchg
pop
xlat
xchg
scas
inc
not
movsl
xor
inc
scas
mov
call
rcl
and
lldt
add
mov
fisubl
int
ret
xchg
mov
scas
mov
adc
incl
jae
dec
je
cmp
sbb
aaa
mov
jg
outsl
ret
add
rolb
add
push
cmpsl
dec
cmpsl
jne
sub
repz
add
shll
stc
sbb
add
cld
pop
test
scas
js
or
or
jns
ss
mov
inc
movsl
aam
cmp
sbb
stc
ja
inc
outsl
pushf
jb
bound
pop
mov
cli
sahf
pop
lret
cli
int
sub
pop
loop
inc
cld
imulb
ljmp
cmp
add
add
pop
std
std
xorb
outsb
in
mov
ret
jns
std
out
int
bsr
arpl
adc
pop
cwtl
ss
imul
dec
dec
add
push
les
out
and
test
mov
sahf
inc
inc
mov
add
mov
inc
jbe
mov
xchg
push
mov
fs
shrd
bound
ror
mov
jp
mov
push
gs
gs
mov
mov
gs
mov
jbe
mov
gs
sahf
push
mov
xchg
mov
outsb
scas
push
lret
mov
xchg
jno
dec
mov
jmp
jne
pop
mov
sbbl
pushf
inc
mov
adc
sub
mov
pop
enter
add
negl
adcl
ss
out
adc
add
adc
xor
ss
dec
mov
and
sbb
fisubs
and
jle
inc
stos
sti
xchg
mov
rolb
stos
dec
inc
adc
out
insb
subb
mov
out
loop
imulb
ret
add
mov
xchg
inc
imul
jmp
jns
jge
push
lea
pushf
dec
mov
adc
fwait
pop
mov
cmp
mov
xchg
push
mov
cmp
shll
dec
icebp
dec
mov
out
push
sahf
cmp
aaa
fnstsw
cmp
xchg
bound
adc
push
in
add
mov
stos
dec
add
hlt
lret
ljmp
sub
jbe
cmp
ja
mov
dec
lret
into
add
rcll
push
stos
inc
or
es
mov
popa
mov
cs
cmp
repnz
inc
repz
dec
nop
xchg
ds
movsl
pop
ret
add
aad
cmp
xor
inc
mov
fucomi
sub
xchg
pushf
dec
push
sbb
jnp
pop
xchg
push
mov
inc
pop
cld
bound
ret
or
jl
stos
jge
mov
push
sub
mov
outsl
mov
scas
popa
pop
addr16
mov
enter
mov
inc
mov
or
outsl
dec
rolb
data16
daa
sti
adc
and
sub
add
ljmp
pusha
lahf
xchg
sbb
out
cltd
insb
insb
dec
sbbl
push
xchg
inc
dec
aaa
lock
push
cli
subb
dec
add
in
lock
into
xchg
adc
mov
mov
push
mov
pop
cmp
cmpsl
nop
movsl
jbe
popf
das
mov
ret
or
gs
mov
inc
ret
add
pushf
jp
ljmp
mov
cmp
cmp
jae
movsl
push
lods
test
mov
test
xor
cmp
test
lods
leave
xchg
adc
xchg
insl
lahf
dec
loopew
insl
arpl
test
aaa
fistpl
aad
ja
movsb
inc
movsb
push
test
fistl
jne
lret
and
cmp
lret
xor
pop
stos
push
mov
mov
test
data16
cltd
inc
mov
imul
adc
outsl
mov
jno
pop
mov
add
es
ljmp
mov
dec
lods
lea
sbb
jae
repz
mov
imul
jl
sub
outsb
jo
leave
pushf
jbe
pop
scas
adc
fistl
adc
cmp
fs
jb
or
adc
cmp
call
xchg
push
fcoml
xor
psrld
inc
pop
mov
push
cwtl
es
inc
push
or
aam
aad
cmp
sub
pop
inc
in
and
or
ret
add
pop
out
daa
aad
in
adc
gs
cs
adc
and
and
add
push
mov
pushf
data16
hlt
and
mov
jle
loopne
cmp
adc
aad
xlat
es
loopne
fcomps
jno
dec
popa
js
insl
jnp
pop
fwait
lahf
push
add
jg
sti
scas
arpl
frstor
icebp
aaa
fstpl
fmulp
ja
push
sbb
add
cmp
pop
cmc
pop
xchg
dec
ret
add
xor
or
push
adc
inc
data16
mov
jle
push
mov
mov
or
pop
mov
cli
sub
loop
jbe
shrb
sub
push
out
push
jae
lea
xlat
int3
cwtl
push
mov
mov
outsb
and
add
insb
leave
outsb
addb
hlt
call
mov
inc
cmp
shll
jge
push
popa
mov
inc
test
mov
mov
mov
xchg
lea
or
gs
imul
sub
add
push
int3
mov
cld
xor
or
jne
out
icebp
fidivrs
mov
stos
push
inc
mov
and
stos
rolb
adc
inc
mov
mov
lock
cmpsb
mov
push
mov
clc
sbb
sbb
mov
xchg
les
dec
fbld
pop
call
lods
dec
xchg
inc
test
mov
pop
aas
cmp
ret
or
dec
push
mov
pop
mov
gs
out
cli
add
mov
mov
movsl
push
xchg
lods
push
mov
ret
mov
xchg
je
pop
ss
lock
les
lods
inc
mov
loopew
fsubrl
inc
mov
xchg
clc
scas
inc
mov
dec
lret
rorb
rorb
adc
xor
push
scas
in
and
add
mov
adc
push
movb
sub
add
push
testb
enter
cltd
or
movsb
mov
mov
pop
shrb
mov
cmp
sub
int3
outsl
fdivrs
add
out
int
pop
adc
mov
jbe
shll
xor
sub
pusha
pushf
mov
ja
daa
popf
pop
test
or
add
loop
mov
xchg
mov
negb
loop
loop
repnz
ds
and
lods
push
sbb
or
dec
pop
push
cmpsl
jno
in
sbb
mov
xchg
and
test
enter
lock
les
cld
adc
ds
add
shlb
mov
neg
clc
or
pushf
add
sbb
mov
cmp
bt
test
pushf
jmp
lea
je
bt
clc
sub
test
clc
cmc
cmp
pushf
lea
ja
cmc
clc
stc
imul
bt
bt
add
pusha
pushf
pushf
movb
lea
jmp
dec
stc
clc
call
lea
je
bt
jmp
mov
ret
or
sbb
push
mov
outsb
movsb
mov
insl
push
cs
gs
sbb
clc
push
mov
mov
iret
out
mov
mov
fs
push
pop
js
or
in
push
xor
and
frstor
pusha
pop
out
ret
das
fisttpll
cmp
daa
xchg
pop
cmpl
lods
sbb
cs
pusha
mov
xlat
sub
push
and
cs
jb
jbe
data16
into
sbb
movsb
testl
pop
mov
pop
sbb
push
push
push
rcll
xchg
cmpb
xchg
and
clc
jmp
inc
mov
lods
push
mov
bound
stos
jl
addb
out
into
or
ret
add
and
push
lea
jb
pushf
pushf
pushf
pushl
ret
divb
repz
mov
pusha
mov
sub
push
test
and
jg
pop
dec
mov
mov
inc
inc
mov
repnz
cmpsl
jo
dec
xchg
xchg
dec
pop
pop
mov
jnp
xchg
cmp
xchg
test
mov
mov
inc
insl
lods
adc
filds
rorl
inc
xchg
dec
adcl
lods
ljmp
in
and
xchg
pop
mov
jne
and
add
xchg
ja
arpl
xor
xor
cmp
out
test
stos
je
popa
and
int
imul
push
enter
nop
mov
jge
mov
or
mov
cltd
pushf
xchg
xchg
jae
mov
and
lea
mov
mov
jp
aam
and
pop
sarl
jl
imul
adcb
xchg
imul
loop
enter
xlat
into
cmp
sbb
rcrb
dec
mov
push
sbbl
aaa
mov
cwtl
sbb
adc
test
xor
loope
loope
xchg
arpl
add
jge
ljmp
cmpsl
addr16
push
xchg
adc
mov
adc
imulb
jae
fsubrl
dec
dec
subb
dec
or
mov
xor
xor
mov
lret
push
clc
pop
ds
mov
ror
popa
jg
ret
xor
rcrl
adc
xor
mov
inc
lahf
jno
int
outsb
mov
js
sbb
sub
xor
push
jp
jg
mov
sub
adc
push
add
mov
or
cltd
cmp
add
scas
dec
fs
gs
adc
mov
fsub
add
cmp
add
insl
sub
clc
scas
inc
push
pop
call
test
aad
stc
sbb
ret
add
jmp
sub
push
lea
jl
pusha
pushf
lea
jne
pusha
push
pushf
movb
lea
call
pushf
pushf
mov
movw
lea
jmp
test
test
pushf
mov
lea
je
dec
bt
mov
rcr
clc
mov
add
neg
movsbw
bsf
mov
push
test
pusha
mov
pushl
jmp
pushl
lea
call
jmp
adc
pushf
movb
lea
jae
jae
pushf
lea
jne
pushf
jmp
mov
xor
cmc
add
std
sbb
inc
mov
sub
xor
adc
inc
fcomi
or
int3
or
inc
sti
or
fwait
lods
push
inc
lea
cmpsl
cli
inc
push
cmc
stc
ror
or
pop
pop
cmp
mov
test
inc
adcb
and
daa
test
cmp
cmp
fistpll
ja
outsb
stc
sti
adc
adc
dec
lahf
push
jge
dec
ret
add
test
btr
mov
call
xor
push
pushf
pushf
call
pushf
call
sub
pusha
mov
call
jmp
pushf
lea
jne
pushf
call
push
pushf
pushf
jmp
call
scas
adc
std
scas
adc
std
mov
mov
adc
xchg
adc
sub
or
mov
mov
mov
or
mov
adc
lods
mov
mov
scas
adc
jg
adc
ds
or
adc
mov
adc
loop
adc
cmp
adc
xorb
mov
or
adc
loope
adc
xor
mov
mov
mov
adc
pop
mov
or
mov
adc
int3
scas
adc
std
scas
adc
std
mov
adc
xlat
scas
adc
jg
adc
popf
scas
adc
jg
adc
ret
or
mov
mov
mov
mov
mov
mov
scas
adc
loope
adc
mov
adc
jg
adc
mov
adc
hlt
mov
or
mov
adc
shlb
adc
push
mov
adc
mov
adc
loope
adc
or
adc
ja
adc
loop
adc
cltd
mov
adc
mov
adc
xchg
mov
adc
dec
lods
adc
loope
adc
fs
adc
or
mov
mov
adc
icebp
mov
or
adc
push
mov
or
mov
or
mov
adc
sub
adc
int3
lods
adc
stos
adc
cmpb
mov
mov
or
adc
cmp
adc
outsb
mov
or
mov
mov
stos
adc
xorb
or
mov
mov
adc
xchg
mov
adc
mov
adc
hlt
mov
or
mov
adc
mov
adc
cltd
mov
or
adc
pop
mov
mov
mov
mov
lods
adc
loope
adc
push
mov
or
mov
mov
mov
mov
adc
bound
adc
mov
or
adc
loope
adc
xchg
adc
outsb
mov
or
adc
fs
adc
shlb
adc
shrb
adc
xchg
mov
or
mov
mov
mov
or
mov
or
mov
mov
mov
or
lods
adc
mov
adc
bound
adc
loope
adc
dec
mov
adc
mov
adc
mov
adc
icebp
mov
adc
or
or
mov
or
lods
adc
mov
adc
dec
mov
or
adc
outsb
mov
adc
mov
adc
outsb
mov
mov
mov
or
adc
shrb
adc
ds
or
mov
adc
cltd
mov
or
mov
adc
xchg
adc
xchg
mov
adc
ds
or
scas
adc
or
adc
push
mov
or
lods
adc
mov
adc
bound
adc
lret
mov
mov
adc
lods
mov
or
lods
adc
mov
adc
bound
or
mov
or
adc
xchg
mov
or
mov
or
mov
adc
push
mov
or
mov
mov
mov
adc
divl
adc
scas
mov
adc
push
mov
or
mov
or
mov
adc
outsb
mov
or
mov
adc
bound
adc
lret
or
adc
bound
adc
lret
mov
mov
adc
loope
adc
lret
or
adc
bound
adc
lret
mov
mov
adc
or
adc
bound
adc
pop
mov
mov
adc
cmp
sbb
call
stc
call
jmp
mov
call
pusha
pushl
popl
push
pushf
lea
jmp
call
and
pusha
jmp
neg
mov
pushf
cmc
xor
pusha
cmc
cmp
not
cmp
neg
pushf
clc
xor
stc
test
xor
movb
call
pushf
popl
jmp
sub
pusha
mov
adc
mov
pushf
mov
push
stc
clc
sub
bt
test
movb
cmc
shl
pushf
call
seta
mov
mov
sar
cmp
mov
jmp
mov
jmp
movb
dec
cmp
call
add
push
call
push
ror
bt
cmc
test
push
add
jmp
pushl
popl
movl
pusha
pushf
push
lea
jmp
pusha
mov
pushf
popl
pushl
call
pushf
popl
call
mov
mov
mov
pushf
mov
mov
mov
push
lea
jmp
pushf
mov
pushf
call
push
cmp
add
call
jmp
pushf
mov
pushl
call
shr
mov
shl
ror
mov
bt
pushl
popf
movb
pushl
ret
div
mov
call
add
call
bts
test
movsbw
cmp
movzbl
setns
setg
xor
btr
stc
rol
ror
btr
bt
rol
not
cmc
rol
btc
lea
rol
adc
bts
rol
xor
shrd
btc
mov
cmp
add
pusha
mov
pusha
pushf
push
pushf
lea
jmp
jmp
jmp
mov
pusha
call
push
jmp
pushl
call
call
mov
shrd
add
not
stc
lea
rol
jmp
pusha
push
mov
pushf
pushf
pushf
pushf
lea
jmp
jmp
pushf
mov
repz
popl
pushf
mov
pusha
mov
movb
mov
push
call
pushl
popl
mov
movb
lea
jmp
xchg
mov
cmp
xadd
sub
sbb
mov
dec
pusha
rcr
mov
add
jl
add
pushf
cmc
pushf
shrd
mov
mov
jmp
lahf
mov
mov
mov
jmp
pushl
popl
pushl
mov
lea
jmp
mov
pushf
jmp
mov
push
call
clc
btr
rol
sbb
xor
pop
btc
movzbl
rcr
pushl
mov
bt
jmp
pushf
call
dec
call
test
stc
cmc
shr
jmp
test
movb
bt
add
pusha
call
repz
push
push
jmp
pushf
pushf
movb
pushf
repz
popl
push
cmc
xchg
pusha
pop
pop
stc
xchg
bt
shrd
xchg
test
test
inc
stc
mov
cmp
xchg
xor
mov
xor
mov
sub
inc
push
add
rol
pushf
pushl
popl
sbb
dec
push
movl
cmp
clc
jmp
lea
jle
pushf
mov
movw
pushl
lea
jmp
sub
pushf
mov
mov
pusha
pushf
movb
pushf
lea
jmp
rcl
or
rcl
cmc
mov
cmp
xor
clc
bt
call
call
push
mov
push
pushf
popl
jmp
mov
pushf
mov
pushf
lea
jmp
repz
popl
push
jmp
pusha
setno
cmp
not
mov
test
test
push
xor
pushl
not
push
pushf
push
test
neg
cmc
bt
jmp
pushl
call
push
mov
pushf
movb
pushf
mov
lea
jmp
push
mov
push
bswap
mov
pushf
popl
call
repz
popl
call
push
inc
movb
call
mov
movw
mov
jmp
shld
call
sub
pushf
pushf
pushf
call
mov
movb
mov
lea
jmp
push
mov
pushf
push
lea
jmp
call
bt
shr
movb
jmp
call
sar
mov
not
mov
jmp
shrd
mov
inc
shld
jo
cmp
mov
clc
call
and
mov
cmc
setle
adc
stc
mov
test
jmp
pushf
popl
call
movzbw
mov
bt
call
pusha
repz
popl
pushl
jmp
movb
call
pusha
jmp
inc
lea
jne
push
pushf
decl
jmp
call
pushf
mov
pushl
push
pushf
lea
jmp
call
sub
jmp
pushf
pushf
movb
mov
pushf
mov
mov
push
push
pushf
mov
pushf
mov
pusha
push
pushf
lea
jmp
pushf
mov
jmp
bt
add
mov
push
clc
sub
pushf
movw
mov
push
pushf
mov
movb
lea
jmp
movb
call
pushf
mov
mov
mov
movw
pushf
movw
lea
jmp
not
mov
bt
cmc
add
pusha
lea
jns
pushf
mov
pushl
pushf
call
pushf
jmp
pushf
mov
call
inc
rol
jmp
pushf
call
mov
movl
mov
mov
movw
movl
lea
jmp
mov
mov
call
stc
cltd
rdtsc
cmc
jmp
call
movb
mov
push
movw
pushf
mov
push
pushf
mov
movb
mov
mov
call
rcl
mov
call
pushf
call
pushf
popl
pushf
call
lea
js
push
movw
mov
push
call
movw
pushl
mov
call
call
jmp
setno
pushf
mov
pushf
mov
pushf
pusha
movw
lea
jmp
rdtsc
pusha
jmp
push
movb
lea
clc
bt
sub
call
lea
jne
push
movb
pusha
call
pushf
or
setbe
lea
push
cmp
mov
cmp
call
pushf
pushf
pushl
popl
mov
mov
movw
movw
lea
jmp
movzbw
bswap
mov
pusha
lea
jmp
pusha
pushl
popl
mov
mov
lea
jmp
dec
bt
mov
push
stc
ror
call
add
add
pushf
lea
je
pusha
bt
stc
pushf
xor
test
bt
xchg
pushl
mov
jmp
mov
pushf
lea
js
push
mov
pusha
mov
jmp
clc
pusha
not
test
clc
clc
test
not
clc
pusha
pushl
sub
push
test
cmc
call
setg
sets
mov
mov
pushf
call
cmp
bt
mov
call
shr
pushf
bsr
sar
mov
shl
pushf
add
test
and
sar
push
xor
lea
and
shrd
ror
shrd
mov
cmp
cmc
clc
shl
pusha
test
test
shr
movw
pushf
or
push
push
xor
pushf
call
mov
mov
jmp
mov
pusha
push
lea
jmp
mov
push
pusha
pushf
lea
jmp
clc
bswap
cmc
bt
xor
movb
pushf
bt
ror
clc
cmc
xor
pusha
clc
not
mov
cmc
call
push
pushl
push
repz
popl
mov
call
call
pop
push
pusha
pushf
mov
pusha
lea
pushl
pushf
push
movb
mov
not
pushf
movsbl
jmp
pushf
mov
pushf
mov
lea
jmp
call
jmp
push
mov
jmp
jmp
call
mov
call
pushf
pushf
popl
movb
pusha
pushf
pushl
popl
pushl
lea
jmp
mov
mov
lea
cpuid
clc
clc
bt
cmp
sub
cmc
cmpl
jmp
mov
pushf
mov
pushf
jmp
mov
call
pushl
popl
pushf
mov
pushf
lea
jmp
and
pop
shr
lea
mov
stc
bt
sub
jmp
jmp
pushf
push
and
call
call
pushf
pushl
pushf
pushl
popl
pusha
push
lea
jmp
mov
jmp
mov
repz
popl
pushf
jmp
push
repz
popl
pushf
movb
movb
call
add
push
mov
pushf
pushl
movb
lea
jmp
movb
ror
push
not
cmc
lea
jne
rol
call
mov
pushf
mov
lea
jmp
pushf
pushf
jmp
mov
mov
pushf
popl
push
lea
jg
popl
pushf
movb
mov
push
lea
jmp
btc
shl
mov
clc
stc
shrd
lea
mov
stc
not
bt
not
test
pusha
test
jmp
call
mov
mov
call
mov
push
mov
call
lea
jne
bt
test
xorb
pushf
bswap
pusha
movb
mov
movb
lea
jmp
call
dec
stc
setl
bts
mov
clc
inc
pushf
pushl
add
call
mov
mov
call
jmp
cmc
mov
pusha
ror
rcr
cmc
mov
cmc
cmp
cmp
sub
cmp
pushf
test
shl
pusha
pushf
jmp
pusha
sub
stc
add
jmp
pushf
call
stc
call
call
not
mov
cmp
stc
add
push
push
movb
push
lea
jmp
btr
or
mov
mov
jmp
lea
js
dec
clc
call
pushf
pusha
pushl
lea
ja
das
bsr
mov
rcr
rcr
btr
lea
add
inc
movsbl
sub
btr
shr
clc
lea
ror
bsf
rcr
and
adc
xor
bts
sub
jmp
pushf
decl
pushf
call
mov
jmp
push
mov
push
push
jmp
jmp
mov
mov
pusha
jmp
mov
pushf
lea
jmp
neg
mov
pushf
sub
jmp
mov
pushf
mov
pushf
pushf
lea
jmp
sbb
mov
cmc
cmc
pushl
popf
mov
mov
lea
jmp
cld
call
sub
pusha
call
push
pushf
popl
movl
pushf
jmp
mov
pushf
jmp
mov
pushl
call
pushf
mov
pusha
push
mov
push
lea
jmp
pushf
pushl
call
mov
std
jmp
jmp
mov
mov
lea
jmp
call
bt
clc
jmp
pushf
call
btc
mov
bt
pusha
jmp
jmp
jmp
pushf
pushl
dec
clc
cmp
sub
pusha
call
mov
pusha
lea
jmp
call
pusha
mov
movb
push
push
mov
call
mov
pushl
popl
movb
mov
push
push
lea
jmp
mov
call
push
lea
jne
pusha
mov
jmp
push
mov
jmp
call
pushf
popl
pushf
call
movb
push
mov
call
xor
stc
push
jmp
jmp
repz
popl
pusha
push
jmp
aas
adc
mov
btr
shr
cmp
mov
rol
sar
movsbw
bsf
mov
pusha
pushf
sub
pusha
push
call
neg
aas
xchg
cmp
mov
rol
mov
cmc
clc
stc
stc
sub
cmc
bt
shl
push
mov
push
jmp
xor
call
mov
call
mov
btc
pushf
neg
mov
pop
mov
inc
cmp
mov
rcl
not
btc
mov
btc
shld
test
shrd
mov
stc
jmp
jmp
rol
push
lahf
mov
push
mov
call
call
mov
clc
inc
call
call
pushf
pushf
jmp
shl
rcr
ror
add
mov
clc
shl
mov
test
stc
test
add
push
pushf
mov
mov
pushl
movl
lea
jmp
pushf
popl
pushf
pusha
push
pushl
popl
movb
pushf
push
lea
jmp
mov
mov
mov
mov
pushf
mov
jmp
mov
mov
lea
jmp
jmp
pushl
sub
bt
jmp
mov
pusha
pushf
movb
lea
jmp
call
pushf
pusha
movb
pushf
popl
jmp
mov
mov
call
pusha
add
jb
mov
test
and
bt
mov
bt
sub
clc
bt
shr
pusha
call
movb
mov
jmp
mov
mov
movb
call
cmp
sub
clc
pusha
clc
xor
clc
pushl
bt
movw
mov
cmc
cmp
push
pushf
sub
pushf
jmp
add
jmp
pushf
jmp
push
mov
movb
mov
pushl
lea
jmp
pushl
movl
pushf
mov
push
mov
lea
jmp
mov
push
mov
push
push
movl
pushf
lea
jmp
call
pushf
setp
daa
pushf
mov
clc
sbb
btr
lea
mov
stc
push
add
pusha
mov
pushl
pushl
lea
jmp
jmp
mov
mov
pusha
mov
mov
call
movb
pushf
pushf
mov
jmp
mov
jmp
mov
pushf
lea
jmp
ror
inc
sub
mov
stc
sub
test
add
jmp
push
stc
ror
mov
bt
cmp
test
xchg
pushf
movb
add
bt
pushf
bt
ror
bt
stc
call
pushl
popl
movb
mov
movl
lea
jmp
mov
pusha
mov
jmp
shl
lea
mov
cmc
pusha
cmp
add
pusha
call
pushl
call
pushf
popl
call
cmp
cmc
xor
bt
cmc
bt
mov
call
jmp
aas
mov
neg
mov
call
call
clc
test
xchg
pushf
cmc
test
add
jmp
call
movb
call
and
call
push
pusha
mov
pushf
jmp
push
mov
call
jmp
setl
lea
mov
movsbw
push
call
jmp
mov
pusha
push
mov
pushf
lea
jmp
mov
pusha
cmp
push
pushl
sub
pushf
call
bts
aam
lahf
mov
pushf
bt
test
xchg
cmp
push
pushf
add
stc
add
stc
ror
clc
add
pushf
clc
clc
xchg
test
add
mov
jmp
shrd
movzbl
sub
mov
shr
jmp
mov
movb
pushf
mov
movl
mov
pusha
lea
jmp
mov
call
mov
pusha
call
pusha
push
call
repz
popl
call
call
pushl
call
pushf
movb
pushf
mov
pushf
push
push
mov
push
mov
pushf
movl
lea
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
jmp
aam
rcl
mov
bsf
dec
sar
movsbw
mov
call
neg
mov
bt
call
jmp
pusha
rol
cmc
stc
sub
sub
jae
cmp
cmc
pushf
xor
push
stc
pushl
jmp
xchg
pushf
movb
mov
movl
pushl
mov
pushf
pushf
mov
pushf
mov
pushf
pushl
ret
push
pusha
pushl
mov
mov
push
lea
jmp
mov
jmp
rep
adc
btc
shl
jmp
mov
movb
pushl
mov
call
pushf
pushl
popl
pushf
push
lea
jmp
mov
cwtl
cwtl
bt
mov
rcl
sub
mov
pushf
mov
add
pusha
push
mov
pushf
push
push
push
lea
jmp
mov
push
jmp
pusha
pushf
popl
push
movw
jmp
xor
lea
jb
test
lea
test
stc
pusha
cmp
sub
pusha
mov
pushf
lea
jmp
push
mov
pushf
pushl
pushf
lea
jmp
pushl
popl
push
pushl
mov
lea
jmp
pushf
stc
clc
add
jmp
pushl
popl
mov
mov
mov
mov
lea
jmp
jmp
push
pushf
sub
call
pushl
push
mov
push
push
mov
lea
jmp
pushf
push
push
mov
movb
pushf
pushl
pusha
mov
jmp
pushf
pushf
inc
mov
cmp
lea
rcr
sub
sub
btc
shld
mov
bswap
rcr
mov
shl
add
xchg
shld
pusha
mov
clc
mov
sbb
xor
ror
btr
add
movsbw
pushf
bt
rol
pushf
call
call
neg
ror
mov
xchg
rcr
dec
mov
inc
dec
ror
adc
mov
call
clc
ror
bswap
movzbw
dec
inc
shrd
xor
xor
pushf
sar
lea
xor
mov
cmc
add
jmp
cwtl
pushl
jmp
pushf
pushl
pushf
popl
pusha
jmp
bt
sub
sub
je
add
push
jmp
cmc
push
add
pushf
mov
push
pusha
lea
jmp
mov
push
lea
jmp
jmp
mov
mov
pushl
pushf
movb
lea
jmp
mov
movb
call
lea
jne
cmc
xor
pushf
pusha
call
aaa
bswap
dec
shrd
mov
pushf
bt
call
not
not
pusha
bt
neg
sub
shl
adc
sub
bswap
shl
bsr
bt
and
pop
shrd
lea
mov
call
test
sub
call
jmp
call
pushf
popl
jmp
jmp
pushf
mov
push
jmp
pushf
movb
repz
popl
pushf
push
mov
pusha
mov
pushf
jmp
call
mov
movb
call
mov
call
mov
call
xor
test
clc
pusha
cmp
mov
jmp
mov
pushl
popl
push
lea
jmp
sub
stc
mul
pushf
mov
mov
pushf
mov
lea
jne
push
pushl
pushf
popl
pushf
pushl
popl
pushf
pusha
mov
lea
jmp
jmp
jmp
pusha
sub
pushf
pushf
jmp
movb
mov
jmp
call
pushl
mov
pushf
lea
jmp
clc
pushl
jmp
bt
test
stc
add
mov
call
pusha
pushl
popl
movb
lea
jmp
call
pushl
pushf
mov
pusha
push
mov
lea
jmp
mov
pusha
push
movb
mov
pushf
push
lea
jmp
mov
movw
pushf
popl
mov
call
mov
push
pushl
ret
pushf
mov
mov
mov
pusha
mov
push
lea
jmp
pushf
popl
call
call
sub
call
mov
movb
mov
call
shr
jmp
pusha
mov
pushf
movb
lea
jmp
push
bt
shrd
pushl
call
pushf
pushl
mov
mov
call
pusha
sub
jmp
movzbl
not
xor
mov
pusha
pusha
movzbw
dec
pushl
btc
call
pusha
add
pusha
mov
pushf
lea
jmp
mov
pusha
pushf
pushf
pushf
mov
jmp
mov
mov
mov
movb
push
mov
call
call
mov
mov
mov
movb
mov
push
jmp
mov
call
pushl
popl
mov
mov
lea
jmp
dec
push
not
pushf
pop
add
neg
bsf
call
mov
pusha
pushf
pushl
movb
pushf
popl
pushf
pushl
popl
mov
movl
mov
mov
lea
jmp
cltd
and
lea
rdtsc
mov
shrd
aaa
pop
neg
setge
pop
setno
push
call
das
clc
bswap
and
notl
daa
btc
mov
pushf
clc
pusha
pushl
sub
cmc
and
pushf
pushf
pushf
popl
call
pushf
jmp
pushl
pushf
mov
pushl
pushf
mov
lea
jmp
pusha
push
mov
pushf
mov
mov
lea
jmp
push
mov
movb
mov
pusha
jmp
movw
call
cmp
push
jmp
call
clc
sub
pusha
movb
lea
jg
mov
pushf
lea
jmp
mov
mov
mov
mov
jmp
mov
movw
mov
pushl
lea
jmp
push
movzbl
bswap
movzbw
setg
movzbl
dec
not
btc
xor
not
ror
sub
rcr
not
cmp
neg
push
btr
xor
test
xor
not
sbb
shl
movzbl
cmc
cmp
mov
cmc
mov
push
or
jmp
movzbl
pusha
dec
mov
call
mov
divl
pusha
mov
push
call
call
add
cld
cmc
pushl
popf
pusha
push
lea
jmp
cmp
cbtw
stc
bt
cwtl
call
aaa
aad
mov
sbb
clc
lea
mov
clc
add
jmp
rol
add
call
