push
mov
push
push
andl
push
call
mov
jmp
mov
movzwl
imul
add
mov
inc
cmpb
jne
testl
je
push
push
mov
mov
xor
xor
mov
and
mov
pop
pop
mov
leave
ret
cmpl
jne
xor
jmp
push
call
mov
or
xor
divl
xor
mov
mov
div
pop
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
mov
add
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
sub
test
add
push
movb
call
push
call
lea
push
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
cmp
add
push
lea
push
mov
mov
mov
mov
rep
push
mov
push
pushl
mov
push
call
test
mov
je
push
call
mov
movzbl
lea
cmpb
jne
movb
mov
mov
mov
rep
mov
mov
mov
mov
lods
mov
sub
sub
cmp
xor
stos
add
mov
rol
push
add
pop
jne
mov
mov
mov
movzbl
imul
xor
lea
test
lea
test
jne
cmp
jne
pushl
pushl
pushl
call
mov
mov
mov
rep
pushl
pushl
pushl
call
push
push
xor
push
push
mov
call
push
push
pushl
mov
call
xor
lea
test
pop
pop
pop
leave
ret
push
mov
sub
addw
add
push
push
xor
cmp
push
je
mov
jmp
push
mov
call
cmp
mov
je
cmpl
jne
lea
call
mov
xor
cmp
push
setne
push
push
push
mov
mov
call
mov
cmp
mov
jne
xor
jmp
mov
mov
mov
rep
pushl
pushl
pushl
push
call
mov
sub
mov
add
cmpl
je
push
pushl
push
call
mov
jmp
mov
mov
test
je
mov
add
mov
push
mov
call
push
call
push
call
mov
mov
push
mov
call
push
call
push
call
mov
movzwl
lea
mov
movzwl
lea
push
mov
call
push
call
lea
push
push
push
push
call
pushl
pushl
call
mov
mov
sub
xor
cmp
mov
je
mov
cmp
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
add
sub
mov
mov
mov
add
addl
addl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
pushl
pushl
call
test
je
cmpl
je
mov
call
mov
mov
mov
add
mov
movzwl
xor
test
mov
jbe
mov
mov
mov
addl
subl
push
pop
rep
mov
add
add
sub
mov
movzwl
add
cmp
jb
push
push
pushl
mov
call
mov
push
call
push
call
push
call
pushl
mov
pushl
add
pushl
pushl
call
pop
pop
pop
leave
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
mov
mov
mov
mov
ret
push
mov
sub
subb
sub
push
push
xor
mov
push
call
push
call
push
push
pushl
push
call
test
mov
je
inc
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
push
add
pop
jne
push
call
push
call
mov
push
push
pushl
push
call
test
jne
jmp
xor
jmp
mov
mov
mov
mov
rep
mov
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
subl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
cmpl
jb
push
push
mov
mov
mov
add
sub
mov
lods
xor
stos
sub
cmp
add
add
test
sub
sub
ror
lea
test
jne
pop
pop
pop
ret
push
mov
push
push
xor
mov
mov
scas
je
lea
test
jmp
mov
mov
pop
leave
ret
push
mov
sub
sub
mov
andl
mov
mov
add
mov
add
sub
mov
push
lea
push
mov
mov
mov
mov
rep
mov
mov
mov
mov
sub
addb
sub
mov
lods
xor
stos
add
sub
sub
sub
sub
ror
lea
test
jne
mov
sub
add
mov
imul
add
mov
mov
neg
imul
add
add
add
mov
push
lea
push
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
mov
mov
mov
mov
rep
mov
add
add
decl
mov
mov
jne
addl
subl
pop
pop
leave
ret
push
mov
sub
cmp
sub
push
push
push
xor
push
mov
call
push
call
pushl
call
mov
cmp
movzwl
lea
mov
jbe
add
add
mov
mov
xor
test
je
mov
and
neg
sbb
and
add
sub
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
push
mov
call
push
call
lea
push
push
pushl
push
call
test
je
mov
movzwl
incl
add
sub
cmp
mov
jb
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
addb
add
push
push
mov
mov
push
xor
push
add
mov
call
push
call
lea
push
push
push
push
call
mov
cmp
mov
je
lea
cmp
mov
je
mov
mov
add
push
call
push
call
push
call
test
mov
je
mov
add
andl
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
mov
mov
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
lea
push
xor
mov
movb
movb
movb
mov
call
cmp
pop
je
mov
jmp
cmp
jne
cmpl
jae
movzwl
test
jne
push
pushl
pushl
push
call
jmp
push
push
push
push
call
push
mov
call
xor
pop
leave
ret
push
mov
add
sub
push
push
push
xor
push
mov
call
push
mov
call
push
push
push
mov
call
push
push
mov
call
push
mov
call
push
push
mov
call
push
push
push
mov
call
mov
cmp
je
push
push
mov
call
mov
cmp
je
push
xor
movl
lea
stos
stos
stos
lea
push
push
mov
call
test
pop
je
push
mov
call
push
mov
call
push
mov
call
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
push
call
push
call
lea
push
push
push
push
call
test
je
add
mov
add
add
add
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
xor
add
cmp
jbe
add
sub
cmp
jb
xor
inc
leave
ret
mov
push
cld
mov
mov
lods
mov
pop
ret
push
mov
push
push
push
pushl
mov
push
call
mov
push
pushl
call
cmp
je
cmp
jne
push
push
pushl
mov
call
mov
jmp
push
mov
push
push
push
mov
mov
call
push
push
pushl
call
xor
pop
pop
pop
ret
inc
jno
add
add
push
add
push
inc
aaa
rcr
popa
ljmp
lock
rol
sub
lahf
cli
loope
int
xchg
fwait
mov
ja
out
insl
push
call
fwait
mov
lcall
lahf
jo
daa
pop
fmul
out
sub
mov
fstp
test
dec
sbb
jno
fidivl
xchg
hlt
xor
xor
jp
jmp
test
ljmp
scas
sub
sub
and
into
stos
cltd
in
setp
lret
imul
pop
les
ja
add
sbb
sbb
lds
repnz
sub
mov
mov
ja
enter
ret
jnp
iret
xor
push
and
fnstsw
sti
das
xchg
sahf
inc
das
adc
in
js
add
mov
pop
test
in
sub
jecxz
gs
add
lods
push
adc
lods
push
xchg
mov
call
sarb
inc
bound
cmp
adc
mov
push
addr16
shrl
xchg
psubsw
inc
enter
pusha
loopne
loop
push
cs
cmpsl
in
leave
cmp
sub
lods
ret
xlat
call
cwtl
jle
je
decb
std
sahf
sar
scas
ss
or
mov
inc
mov
test
adc
and
mov
or
add
nop
mov
push
mov
xchg
pop
test
add
sbb
aas
sub
cmp
out
jns
inc
les
pop
negl
les
sarb
jnp
lods
xor
push
test
inc
push
jo
dec
aam
pop
sub
ja
and
arpl
outsl
adc
inc
ljmp
and
lods
int
xchg
adc
sbb
push
or
das
cmp
push
pop
push
idivb
jno
fwait
pushf
xor
pop
movsl
sti
rclb
lods
dec
imul
test
adc
leave
fcoml
cmp
icebp
int
jnp
js
test
repz
xor
and
and
popa
in
ljmp
jge
loope
add
mov
nop
jae
ja
addb
sbb
dec
dec
movsbl
sub
or
mov
mov
mov
or
mov
cmp
cwtl
lahf
mov
or
inc
sbb
cmovbe
push
sub
jge
dec
imul
dec
pop
lret
jno
pop
cmp
fldt
pop
shl
xchg
jnp
andb
pop
pop
fs
ja
icebp
movsb
sbb
pop
inc
int3
mov
mov
lods
gs
mov
mov
sbb
cwtl
add
sub
xchg
fisttps
push
sahf
roll
test
xor
sbb
xchg
adc
sbb
lcall
ss
sub
mov
jecxz
cmp
adc
aam
pop
scas
dec
mov
insb
adc
imul
test
sub
sbb
bound
sbb
jno
pop
xchg
mov
sahf
or
mov
sbb
imull
and
mov
arpl
xor
dec
pushf
loopne
sbb
cmp
jmp
xchg
mov
ffree
or
lea
or
cmpsb
xor
test
xchg
clc
pop
incb
xor
dec
inc
fmuls
pop
sahf
xor
fistpl
psrlq
xor
cmpl
adc
push
pop
cmp
pushf
fsubrl
cli
mov
arpl
iret
in
push
cmp
push
jnp
pop
sub
je
fwait
cli
cmp
xchg
leave
out
push
xchg
adc
lods
inc
icebp
jg
mov
or
sub
movb
scas
jl
dec
push
lret
or
push
xor
lock
imul
dec
in
jge
mov
pop
mov
and
xchg
lods
nop
outsb
pop
int
mov
cmpsb
ss
call
jne
xor
and
enter
add
mulb
stos
sbb
pop
test
cwtl
dec
testb
sub
or
outsb
sbb
pop
add
aad
sbb
das
lods
inc
ljmp
xchg
ss
mov
pusha
pop
xchg
leave
sti
push
bound
push
and
xor
movsb
push
xor
push
mov
xchg
sub
mov
cmp
test
jae
insb
mov
dec
xor
out
dec
jmp
dec
add
insb
lahf
pop
sbb
movsb
arpl
rorb
push
lcall
in
mov
mov
mov
mov
xlat
mov
xor
xchg
or
or
loope
ja
push
adc
jge
mov
lds
in
les
pop
mov
jae
nop
sub
daa
movsb
jp
dec
or
pop
ret
lds
cmp
add
add
repnz
pop
mov
add
xchg
gs
divb
push
repnz
inc
out
stc
sub
std
es
push
imul
xor
rcll
fdivrl
sub
scas
out
lcall
xor
cmp
inc
fldl2e
mov
and
adc
dec
add
xor
leave
add
cmp
mov
sar
push
aam
jnp
insb
enter
sub
inc
fucomp
lret
outsb
dec
add
andb
xor
jp
mov
js
mov
adc
cmpsb
cmpsb
mov
pusha
pop
cli
fdivl
out
std
sub
inc
orl
insb
sub
mov
lret
je
mov
adc
mov
subb
mov
jno
lds
gs
or
stos
pop
cs
adc
outsl
cli
cmc
and
jmp
test
push
xchg
inc
icebp
cmpsb
jne
into
jo
ror
push
out
mov
js
pusha
inc
popa
cmpsl
add
xchg
push
xchg
inc
xchg
in
sub
xchg
bound
jne
mov
or
cmpsb
dec
push
mov
add
add
pop
jbe
sar
call
or
movsl
xchg
sti
lret
rolb
or
aam
mov
xor
xchg
pop
shll
push
jle
inc
add
repnz
testl
inc
or
adc
inc
cltd
nop
in
mov
sub
and
aas
es
jo
xchg
pop
pop
adc
lcall
inc
mov
imul
fisttps
mov
pop
cmp
je
mov
cmc
xor
vaddsubps
or
je
xchg
pop
in
adc
inc
add
fwait
dec
and
push
andb
jp
xchg
add
int
int
adc
push
mov
lods
ficomps
in
mov
ficoml
cmpsl
popf
sub
fisubrs
lahf
xchg
sti
loope
push
jmp
cmp
ffreep
inc
rcrb
ror
div
aas
test
call
popl
dec
dec
aam
pushf
jmp
mov
dec
xchg
fmull
shl
mov
jo
cli
cs
imul
sbb
call
dec
push
add
adc
js
mov
inc
ds
scas
stos
mov
js
out
enter
das
mov
adc
aam
push
adc
in
stc
sub
ds
xchg
cmp
mov
cli
mov
fistps
dec
mov
cld
sub
mov
fwait
mov
jo
les
ja
mov
shll
push
jmp
push
iret
inc
enter
xchg
mov
push
sarl
mov
pop
push
in
insl
xchg
push
ret
inc
mov
inc
adc
mov
idivb
and
jge
sarl
adc
hlt
mov
push
adcb
call
ret
in
repz
xchg
and
out
cld
loop
daa
ret
cld
pop
xor
fnop
fsubs
push
sub
push
add
daa
push
jmp
xchg
addr16
fucomip
lret
cli
xor
insl
mov
push
mov
fs
mov
lcall
pop
cmp
sub
xor
mov
jg
rolb
sbb
dec
dec
loope
adc
cmp
cmpb
ljmp
popa
cwtl
rcrb
dec
or
into
shrl
repnz
aad
jns
ljmp
push
sbb
insl
cmp
mov
enter
add
pop
inc
orl
cmc
or
jmp
mov
addr16
mov
cmp
lahf
insl
lock
mov
daa
or
ds
xor
or
push
add
pusha
fadd
aam
test
call
ljmp
pop
cwtl
xchg
xchg
mov
xchg
fabs
sbb
push
add
test
out
ret
aad
inc
imul
das
loope
mov
xorb
pop
rol
xchg
pop
jle
pop
sbb
dec
in
sbb
mov
jne
jae
lret
cmp
movsl
mov
mov
sbb
add
pop
pop
aad
scas
sahf
movsl
or
xchg
jno
sub
in
mov
add
ret
pop
loop
inc
jb
gs
mov
mov
mov
cmpsb
in
jmp
ret
lock
push
cld
mov
sub
adc
mov
mov
sbb
cmpsl
aas
pop
lret
push
fs
jg
test
aam
xchg
push
in
sub
int
rcrb
pop
xor
cmp
out
out
lods
pop
nop
rep
fucomi
std
outsb
jp
ret
pop
je
daa
das
lret
mulps
inc
mov
cmp
pop
mov
ss
rorb
mov
mov
scas
into
sti
rcll
in
cld
jmp
test
jno
dec
cmp
push
pop
ds
js
lods
fwait
mov
adc
lret
outsl
pop
jp
leave
add
fldenv
mul
icebp
in
jbe
data16
mov
pop
jbe
cmp
pop
push
cmp
and
adc
lret
push
mov
fistpl
shl
cltd
icebp
mov
sbb
aad
mul
fisttpll
push
mov
das
mov
inc
arpl
aad
leave
insl
pop
pop
pop
nop
xchg
adc
lods
push
jmp
add
std
imul
out
rolb
dec
mov
mov
test
hlt
lcall
push
ja
sbb
cld
neg
mov
xlat
push
and
mov
xlat
sbb
and
jne
or
pop
imul
shr
dec
xchg
mov
push
xor
test
enter
aaa
scas
pusha
inc
dec
xor
bound
repnz
cli
dec
dec
stc
xor
jae
dec
mov
out
aam
lods
xchg
and
das
xor
push
insl
xchg
xchg
jb
pop
push
nop
ss
loopne
test
adc
pop
xchg
jno
std
xor
bound
fldl
push
lock
inc
out
jb
lds
fistl
pop
in
and
mov
sbb
mov
mov
cld
js
dec
fistpll
cmpl
mov
dec
add
xchg
ljmp
dec
xorb
inc
outsb
mov
cld
cwtl
fprem1
leave
dec
cs
xchg
sbb
push
loope
push
ljmp
out
out
in
out
add
pop
jge
inc
pop
sub
jo
shlb
sub
add
adc
mov
ljmp
icebp
mov
mov
pop
jp
cmp
push
mov
jle
gs
aas
mov
cmpsb
push
sub
in
cld
sbb
mov
es
cwtl
lds
fnstsw
adc
add
je
fimuls
inc
mov
push
leave
push
into
add
bound
cwtl
shll
int
mov
dec
push
adcb
outsl
and
loope
jo
daa
xchg
mov
adc
pop
push
mov
repnz
mov
pop
push
sbb
jnp
icebp
dec
pop
sub
sub
movsl
movl
addr16
inc
inc
push
shlb
inc
movsl
test
adc
jo
inc
push
add
xchg
int
lods
cltd
adc
push
sbb
in
push
sahf
mov
aad
push
cltd
movl
outsb
repnz
jle
jns
pushf
add
xchg
testl
sub
xor
test
lods
mov
jp
add
ja
push
sub
test
es
pop
sub
movsb
push
popf
mov
in
js
push
jg
jo
iret
into
pop
scas
pop
sub
pop
or
cltd
mov
ja
out
subl
loopne
xchg
sbb
xor
gs
xor
mov
adc
cmpsb
dec
leave
push
pop
push
jb
loope
das
sbb
add
pop
add
std
in
and
xchg
insl
adc
add
pushl
xlat
cmp
xchg
xchg
out
inc
stos
orl
out
add
sti
and
add
mov
or
loopne
jl
test
adc
clc
enter
mov
pop
stos
sub
mov
gs
adc
sbbb
xchg
lldt
jne
jbe
or
xchg
inc
mov
sbb
and
bound
out
dec
nop
cmp
stos
data16
in
ret
adc
mov
test
iret
stos
shrb
scas
pop
mov
or
es
dec
insb
aad
cmpsb
jmp
scas
int
loope
mov
xchg
mov
cmp
xchg
push
xor
fidivs
aas
in
nop
and
pop
or
sub
arpl
ds
mov
xor
and
push
inc
inc
imul
out
or
aad
push
pop
sbb
push
pop
das
adcb
popf
sub
mov
mov
cld
jno
mov
lock
jns
dec
mov
sbb
inc
repnz
push
daa
daa
rolb
inc
fstpt
xrelease
jmp
xchg
xorb
mov
ljmp
sub
dec
pop
pop
aas
sbb
fdivs
pop
push
lahf
insl
rcl
lahf
pop
orb
xorl
outsl
out
loop
xor
or
arpl
pop
xchg
mov
cli
mov
xchg
jmp
push
das
mov
push
or
frstor
add
daa
scas
and
mov
push
daa
icebp
xlat
pop
dec
mov
mov
jae
push
out
xor
jg
scas
arpl
or
mov
push
mov
mov
jmp
movsl
js
sete
adc
xlat
outsl
std
aaa
cmpsl
mov
pop
pop
popa
add
fidivs
aas
hlt
jo
fsts
push
shll
mov
cmp
mov
and
xchg
aas
cli
push
jno
push
js
push
xchg
inc
fnsave
mov
popa
mov
out
cltd
jmp
mov
xchg
pop
pop
dec
add
testb
xor
lods
mov
or
mov
nop
out
sbb
ja
aas
movups
xor
push
jb
mov
jbe
dec
pop
mov
add
nop
mov
enter
adc
setbe
das
stos
ja
sub
mov
add
mov
pop
out
stos
je
xchg
cmp
fmul
fstl
pushf
xchg
lret
lods
jnp
jnp
sub
out
clc
pushf
arpl
or
adc
test
into
push
fildl
push
rclb
jle
loope
inc
insb
add
push
xlat
push
aas
in
mov
hlt
and
out
fs
sbb
xor
xor
shld
test
xor
dec
mov
sbb
push
test
cmp
arpl
push
adc
std
push
mov
out
or
mov
enter
and
js
push
iret
inc
aam
and
cmp
fs
cli
push
lcall
add
mov
pop
hlt
xchg
std
inc
mov
jo
mov
das
shll
mov
icebp
or
test
cs
gs
movsl
inc
mov
jle
xor
add
es
mov
popf
aaa
dec
and
hlt
dec
pop
sub
mov
mov
enter
mov
addb
shrb
push
mov
scas
sbb
push
push
mov
cmp
pop
xchg
outsb
daa
inc
out
pusha
mov
test
adc
xor
cmc
sub
into
jns
rol
xor
and
ret
mov
inc
cmp
add
mov
push
add
jbe
lods
xor
cmp
test
dec
and
icebp
jno
icebp
jp
pop
jge
jg
sar
sbb
stos
sbb
sub
frstor
push
and
dec
push
adc
out
jg
jle
jbe
ds
cli
rcr
sahf
xor
outsl
scas
pushl
push
sarb
aam
mov
out
xchg
sbb
dec
sahf
push
jge
cmp
dec
or
mov
jnp
pop
mov
ss
insb
test
jg
jl
or
jmp
cmp
outsl
mov
dec
xorb
xor
cmp
aam
inc
sub
xor
dec
mov
out
pop
sub
xor
stc
jle
fisubrs
adc
rorb
jg
push
jnp
lret
jo
pop
daa
sub
js,pn
dec
in
pop
jno
inc
pop
bound
mov
xchg
out
pop
addr16
out
nop
call
sub
xor
arpl
push
push
outsl
mov
or
out
fs
mov
ret
cmp
lods
not
sti
xchg
shl
and
xor
add
das
das
sub
mov
fldenv
xor
dec
cmp
push
adc
ljmp
dec
sahf
push
aas
icebp
add
push
xlat
dec
mov
xlat
imul
fnstcw
adc
adc
mov
stc
in
jmp
ret
push
mov
xor
sbb
sbb
or
jl
ja
rclb
push
xchg
aaa
push
cmp
les
int
andl
andl
mov
dec
imul
or
pop
divb
aaa
pop
adc
sarb
mov
mov
enter
stos
insb
les
js
add
add
fisubl
test
lock
adc
bound
int
bound
popa
dec
cmpsl
cmp
pop
hlt
add
shll
lods
cmp
sbb
mov
shrb
push
inc
xor
inc
or
ja
xor
pop
sub
mov
test
xor
gs
dec
cmp
cli
push
add
scas
sbb
into
push
imul
xlat
xorl
sub
push
loop
jae
je
ja
lock
dec
andl
push
ret
jae
arpl
cld
inc
mov
push
loopne
inc
push
jne
sub
pop
imul
or
jge
push
xchg
push
out
subl
push
aad
jmp
adc
lods
aas
jbe
pop
jp
jne
lods
aaa
push
mov
sbb
loopne
mov
stos
dec
inc
mov
je
jbe
lds
pop
cmp
pop
ret
add
sbb
test
fists
sahf
inc
bound
ja
popa
ljmp
movsl
mov
adc
mov
ret
add
testb
lahf
das
out
sarl
or
inc
mov
into
loope
xchg
fwait
jmp
dec
add
ss
fs
int
lcall
fs
rcrl
loope
gs
sbb
or
int3
clc
das
int3
sbb
movb
insl
sbb
leave
jno
cmp
inc
sti
xchg
inc
add
pop
addb
push
frstor
push
cmp
repz
ja
dec
out
sub
mov
cwtl
ljmp
xchg
imull
sub
xor
aas
int
cmp
popl
cwtl
jo
lret
dec
add
call
mov
dec
jno
out
push
cs
in
arpl
xchg
test
loope
xchg
int3
xchg
pusha
adc
lods
fmuls
ror
push
pushf
gs
dec
pop
int
dec
scas
adcb
jne
stos
lds
push
rol
sbb
sbb
imul
dec
pusha
dec
cmpsb
daa
pop
push
clc
push
mov
push
add
test
inc
mov
cmpsl
imul
xchg
push
inc
nop
lds
ja
jo
and
stos
cwtl
test
mov
stc
jae
icebp
insb
adc
dec
jne
add
lret
xchg
stos
cld
aam
inc
mov
jns
sbb
dec
mov
je
imul
roll
inc
xor
cmp
cld
sbb
cmp
fiadds
mov
pop
jo
cli
in
test
lret
adc
mov
push
adc
nop
dec
jl
pop
ret
loopne
or
jecxz
adc
cltd
jecxz
jmp
loopne
mov
push
int
sbb
mov
aad
jo
or
ja
adc
test
dec
add
nop
cltd
mov
gs
and
sbb
jb
pop
pop
idivb
nop
fisubrl
pusha
aad
dec
sbbb
bnd
mov
xchg
mov
lods
pushf
mov
ja
add
inc
mov
sbb
cwtl
dec
pop
outsb
aas
mov
andl
dec
or
pop
xlat
sbb
clc
movsb
icebp
mov
clc
and
mov
shlb
lret
mov
incb
jmp
jno
lods
sbb
into
ret
dec
pushl
addr16
xchg
push
jae
add
cwtl
ret
push
sti
pop
adc
mov
ret
cmp
repz
rcl
and
mov
mov
mov
outsl
mov
push
dec
ret
jne
xchg
add
pop
popa
sub
bound
rcrb
mov
pop
test
push
outsl
sub
std
pop
loope
nop
lahf
mov
xchg
xchg
mov
imul
enter
fldcw
inc
stc
fstps
idivl
sbb
adc
fldenv
in
inc
pop
or
jg
shlb
sub
clc
sbb
xor
lods
lods
xchg
adc
imul
and
cmp
test
jp
push
xchg
les
add
loope
das
xchg
add
dec
push
out
fchs
flds
cmp
hlt
xchg
inc
mov
mov
shrl
fsts
push
xlat
xor
mov
pop
inc
enter
push
sahf
outsl
mov
mov
sysenter
xchg
push
test
pop
movsb
jl
insb
mov
cmpsb
mov
orl
xor
cmp
pop
jp
js
ret
jp
stos
or
and
sahf
xchg
sbb
mov
in
es
pop
in
pop
daa
aaa
push
sub
mov
sbb
dec
pop
test
out
xchg
arpl
inc
jl
sub
daa
out
ror
adc
sub
dec
aaa
mov
insb
rcr
xchg
fcompl
fdivl
daa
jp
xchg
inc
cmpsb
cmp
addr16
out
mov
inc
aad
in
fwait
mov
sub
insl
xchg
incl
pop
les
adc
cltd
adc
dec
xor
shll
push
cmpsl
cmp
test
xor
add
add
xor
cmpl
inc
arpl
sahf
scas
xlat
shll
out
xchg
mov
into
xchg
mov
pushl
pop
or
pop
dec
pop
out
fildll
and
mov
outsl
add
xor
ret
adc
fwait
inc
xchg
sti
popa
or
icebp
fs
mov
or
jle
mov
xor
fidivl
add
orb
ljmp
das
pop
adc
xchg
adc
push
pop
scas
inc
iret
stos
sub
xlat
loopne
mov
xchg
int3
mov
testb
pusha
push
add
in
add
lcall
jl
cmc
inc
test
test
xor
sbb
add
jnp
stc
iret
dec
aas
cmpsl
mov
inc
outsl
aad
sub
cld
sub
push
push
jnp
xchg
mov
in
pop
data16
pop
cmp
push
int3
cmpsb
in
movsl
js
shl
jbe
cmp
jno
mov
jae
cmp
jbe
leave
movsb
adc
in
fstpl
jbe
mov
shll
pop
sub
out
mov
lods
shl
arpl
shll
or
sbb
sub
scas
push
sbb
cmp
mov
ret
je
imul
stc
mov
xlat
aad
pop
dec
in
mov
sub
xor
xor
dec
push
js
pop
cmpsl
cmc
mov
inc
sub
mov
push
enter
cmpb
jae
push
mov
push
dec
jb
ljmp
or
inc
adc
xor
sbbl
out
adc
ss
cwtl
sub
pop
ret
sahf
push
nop
fsub
inc
insb
adc
lods
aam
adc
sysexit
fsubl
fisubl
faddp
lcall
cs
xor
adc
inc
mov
out
idiv
jb
mov
int
fdivl
popa
push
sti
cmp
in
sub
jns
pop
scas
xor
lahf
pushf
int3
std
push
loop
call
aad
aas
cmpsl
orl
sub
push
or
mov
enter
or
sbbl
fidivs
sbb
jb
mov
movsb
shl
pop
and
ljmp
xor
xchg
sti
sub
scas
pop
testl
mov
cwtl
pop
pop
fistpl
mov
sub
divl
xchg
cltd
push
data16
mov
rcrl
scas
test
aaa
jno
lds
inc
dec
stos
or
aad
lods
cmpsl
imul
daa
xchg
mov
inc
rcrl
outsl
pop
xchg
inc
adc
cmp
jnp
test
mov
push
loop
pop
sti
rolb
iret
ljmp
cmpsl
push
hlt
sub
mov
dec
pushf
and
xor
lret
xor
arpl
ljmp
cmp
mov
xor
pop
pusha
ret
xorb
xchg
push
pop
scas
mov
mov
test
push
xor
pop
lods
popf
sub
push
push
pushf
xor
movsl
xor
scas
cmp
adc
loop
or
dec
xorb
jns
push
lret
into
outsl
aam
fcmovne
fs
dec
sbb
push
lock
sti
xchg
cmp
push
push
push
mov
push
mov
lock
xor
in
dec
sub
pushl
loop
xor
sbb
shlb
ret
out
jp
or
insl
ret
icebp
lock
jnp
out
sarl
jmp
mov
jne
lods
imul
stos
push
mov
fbld
add
cmovl
and
ja
add
or
mov
aas
ret
pop
dec
imul
stc
or
mov
sahf
popa
fistpll
mov
mov
fbld
sub
stos
ljmp
mov
aad
imul
leave
lods
jnp
xchg
dec
and
sbb
lret
ds
pop
mov
fidivl
jg
sbb
push
iret
jle
sbb
push
cs
repnz
aam
mov
and
lahf
outsl
fadd
pop
fdiv
mov
scas
xchg
cmpsb
daa
and
aam
lret
jmp
sahf
stos
lock
mov
call
fs
jb
lods
jp
pop
loope
inc
mov
inc
popf
icebp
jmp
jmp
sbb
inc
lea
mov
sbb
popa
enter
lock
and
imul
xchg
lret
sarb
sub
imulb
test
fisttpll
xor
int3
xlat
push
enter
ja
or
cs
addr16
mov
pop
mov
add
xor
nop
mov
adc
js
xchg
xchg
in
and
insl
cs
push
or
cli
int
jns
sbb
add
push
mov
pusha
pop
mov
mov
insl
stos
dec
movsb
inc
push
sub
mov
mov
popf
pop
mov
sbb
add
scas
insl
arpl
mov
dec
dec
push
bound
xchg
lods
leave
lods
repz
jle
sbb
cmp
outsl
pop
iret
adc
sbb
pusha
in
std
add
aas
js
pop
outsb
imul
adc
dec
pop
mov
daa
mov
fst
testb
xchg
jno
outsb
scas
loopne
mov
xchg
mov
dec
add
in
xor
sub
leave
pop
push
test
ret
loope
lahf
jl
sbb
imul
mov
sbb
jno
stc
std
sub
adc
lea
mov
inc
mov
cmpsl
add
add
and
adc
mul
daa
je
dec
in
add
inc
aaa
jbe
or
int
push
jne
pop
sub
popa
push
daa
das
inc
sub
fdivs
mov
jo
out
xchg
roll
fxch
add
mov
cmpsl
or
dec
fisttpll
adc
in
xchg
mov
ljmp
xor
out
orl
xor
push
fucomip
pusha
xchg
add
mov
sbb
cwtl
pop
push
clc
push
dec
scas
xor
testb
es
or
xchg
xchg
xor
rcl
cmp
loop
adc
sbb
bound
fisubrs
jecxz
adcb
cmp
int
lock
jl
mov
dec
pop
and
sbb
pop
xor
decb
js
push
or
mov
inc
bound
adc
push
add
fisttps
out
sbb
adc
js
mov
xchg
mov
jno
sbb
jp
mov
xchg
xchg
hlt
and
adc
shlb
and
fnstsw
adc
inc
fadds
inc
add
repnz
fisttps
out
into
jno
ss
aam
icebp
sarl
push
bound
adc
mov
loopne
xlat
arpl
jle
rcrl
or
mov
imul
xchg
out
dec
and
and
repnz
cltd
in
jae
js
cmpsb
add
addr16
jbe
sbb
mov
push
jo
fs
mov
mov
in
imul
pop
into
push
mulb
inc
jecxz
insb
mov
jae
xor
mov
adc
int3
mov
and
lods
popa
mov
add
mov
out
xor
adc
add
ljmp
out
cmpsb
sbb
es
icebp
repnz
jo
jl
dec
out
add
ds
rcrb
pop
mov
sub
add
xor
cmc
sub
int
or
push
mov
xor
test
cli
cmp
xchg
dec
push
cmp
scas
push
cwtl
fwait
in
loop
lret
scas
leave
cmc
inc
cld
call
out
cmp
rcll
out
xlat
outsl
add
xchg
xchg
fwait
scas
add
inc
and
bound
popa
adc
pushf
sub
dec
js
lods
pop
daa
add
movsb
mov
push
push
fimull
mov
rcrb
push
dec
pop
mov
aam
push
hlt
test
imul
inc
or
jge
pop
shll
jl
mov
loop
ds
inc
dec
shrl
rcl
ret
mov
lods
shl
mov
loop
add
cmpsb
mov
xchg
mov
movsl
loope
jbe
add
popf
jnp
sbb
cmp
add
mov
push
mov
sub
ds
in
les
adc
pop
sbb
adc
cli
cmp
cmpsb
insl
mov
sbb
lds
jecxz
sub
je
mov
and
mov
arpl
sub
mov
jbe
sub
rcrb
mov
ds
dec
decb
daa
iret
dec
and
jge
inc
cmp
fmul
pushf
icebp
pop
push
pop
imul
mov
mulb
ret
sub
stos
xor
out
pushf
jecxz
pop
jp
dec
inc
push
dec
sbb
sbb
dec
std
repnz
dec
iret
xchg
sbb
mov
mov
iret
push
dec
or
ror
xorb
xor
mov
decl
jmp
push
lret
lret
push
xor
test
sar
pop
dec
xchg
push
sbb
ret
bound
jbe
fsubp
outsb
cmp
mov
mov
es
lea
add
test
leave
mov
call
push
js
icebp
rcl
inc
scas
pop
xchg
lcall
insl
movsl
pusha
sbb
sbb
dec
mov
fisubl
cs
data16
or
pop
cmpsl
push
js
mov
cmp
and
mov
or
punpcklwd
sahf
test
push
cmpsl
out
pop
cmpsl
or
add
lods
insl
xor
jecxz
mov
dec
adc
leave
ret
rdmsr
inc
ljmp
pop
test
and
scas
or
cmp
pop
insl
mov
sub
sbb
lret
repz
cmp
mov
lret
push
repz
xchg
int
mov
fldt
push
out
inc
bound
negl
xor
out
std
subl
scas
cli
aas
in
xor
xlat
pop
inc
lret
loope
and
and
sahf
mov
shll
imul
adc
mov
xor
mov
ffreep
inc
push
mov
xor
mov
aad
xchg
fstpl
jnp,pn
popf
push
imul
popa
adc
insb
add
dec
jecxz
push
cltd
push
xor
adc
sub
push
lock
je
dec
mov
int
test
pop
in
lahf
inc
cmc
dec
push
xchg
rcrb
add
push
mov
mov
lea
mov
popa
mov
push
sarb
call
mov
shl
icebp
mov
xor
insb
jae
or
sbb
pop
cwtl
fmull
je
andnps
add
dec
push
adc
inc
repnz
push
cmp
mov
push
cld
in
aam
jno
inc
xchg
push
jp
shl
sub
add
in
xchg
push
push
lahf
pushf
mov
repz
gs
bound
hlt
dec
mov
loop
test
pop
inc
cmpsb
adc
fildl
push
push
pop
xchg
das
pushf
pushf
pop
shl
icebp
xlat
loopne
pop
js
andl
lret
jnp
xchg
mov
sbb
outsl
fistps
and
add
fnstcw
in
cmp
cs
hlt
xchg
xor
cmp
pop
lea
movsl
psubb
mov
jno
jmp
sbb
ret
sub
repz
or
call
outsl
scas
inc
inc
push
roll
shlb
loopne
dec
lods
cmpl
adc
xchg
jo
or
xchg
stos
pop
xor
faddl
dec
iret
mov
xchg
out
sbb
push
xor
rol
or
std
sub
test
pop
aas
stos
pop
insl
dec
orb
sub
lahf
js
pop
nop
les
jbe
pop
xor
das
repz
fdivrs
push
fwait
arpl
push
xchg
xchg
jbe
inc
clc
cmp
dec
jl
pop
sbb
fimuls
scas
jns
mov
std
sub
adc
aad
pop
xor
inc
jl
or
fcomi
sub
pop
jecxz
int
fcoms
jp
imul
mov
leave
leave
lret
jno
sbb
jbe
incb
loopne
dec
lock
lcall
ds
xchg
and
les
mov
xchg
repnz
int3
sbb
fs
loopne
scas
in
orb
or
mov
int
push
adcb
xor
sbb
lea
mov
dec
aas
mov
out
outsb
out
jge
pop
orb
xor
roll
sub
mov
rcr
cmp
inc
jl
es
sub
incb
dec
rolb
and
inc
outsl
xor
sub
outsl
lock
push
lahf
ds
daa
cltd
pop
test
adc
mov
push
and
cmp
inc
pop
lcall
les
dec
outsb
xor
faddl
push
cmpsl
cmpsl
dec
cmp
clc
mov
jg
lock
sahf
mov
or
inc
push
orb
mov
cltd
pop
push
testb
pop
test
sub
test
or
out
mov
insl
ret
dec
insl
ss
xchg
inc
jmp
or
movsl
fldcw
sub
out
cwtl
push
cli
fmuls
mov
inc
call
clc
xchg
mov
lock
int
xorb
jg
test
test
das
hlt
fnstsw
subb
imul
stc
mov
pop
out
mov
outsl
out
outsb
xchg
pushf
xchg
push
mov
sub
fldcw
out
adc
push
jns
mov
test
cmp
push
mov
push
add
jo
mov
mov
pop
mov
mov
ljmp
xchg
addb
addr16
ljmp
lea
stc
pusha
or
mov
sbbb
pop
xor
dec
sbb
inc
stc
arpl
xor
lods
cld
jge
sbbb
rol
rolb
xchg
or
pop
fcompl
or
add
sbb
push
scas
jne
sbb
inc
mov
jle
add
pop
sub
lds
leave
xor
loope
lods
bound
sbb
dec
jno
dec
cmpsb
iret
jg
movsl
mov
jbe
pop
sub
int3
sbb
mov
xchg
movsb
mov
repnz
mov
rep
out
mov
add
adc
push
jno
fsubr
int
mov
enter
adc
cmp
sbb
lret
and
cmc
bound
jecxz
dec
in
jne
test
mov
imul
mov
enter
ret
ss
cmp
cmpsl
int
pusha
pushw
add
outsb
lcall
iret
test
outsl
push
mov
rorb
mov
ret
push
jne
rcll
iret
outsl
push
mov
inc
loop
arpl
mov
push
adc
shl
jo
add
xchg
flds
jns
cmp
jb
jge
popa
mov
adc
fisttpl
mov
and
pop
divb
pop
pusha
pop
xchg
pop
push
jno
out
push
mov
ret
add
rcrb
mov
push
push
sbb
cmp
pop
lret
adc
mov
inc
test
test
dec
in
mov
fisttps
xor
lret
cmp
lods
cmp
dec
popf
pushf
push
enter
xchg
fwait
jnp
jecxz
inc
or
rcrb
cmp
cmp
popa
push
or
pusha
add
imul
pop
js
test
prefetch
jg
add
mov
adc
jae
inc
movsb
xor
push
jmp
aas
ss
pop
and
mov
cmp
adc
insb
ljmp
lds
faddl
mov
ljmp
popf
pusha
imul
ja
loop
fwait
mov
cmp
adc
lds
fwait
mov
jge
jge
popa
sbbb
daa
les
xlat
sub
cmp
and
rorl
push
and
nop
sub
loope
iret
xlat
insb
xor
xor
mov
or
inc
jg
daa
out
mov
lret
enter
sub
sbb
sub
mov
repnz
sbb
pop
and
js
iret
and
dec
xorl
xor
cmp
mov
ror
jae
sub
pop
aam
pop
mov
cli
pop
ja
xchg
xor
sub
jnp
lahf
mov
xor
fdivl
in
sbb
mov
pop
dec
xchg
pop
sub
xor
jbe
daa
popa
ljmp
pop
mov
pop
push
mov
jb
dec
mov
aaa
mov
push
insl
dec
movsb
mov
lods
js
adc
mov
jne
insb
mov
inc
mov
ds
jl
mov
jmp
jl
addr16
enter
xchg
pop
cmp
out
cmp
and
shl
lods
lahf
mov
js
add
mov
mov
mov
popa
sub
lea
scas
sarb
cmp
shlb
jns
loopne
orl
adc
pop
stc
popa
inc
and
fidivrs
ja
push
imul
fs
add
ja
aas
jbe
push
xor
leave
lret
out
test
es
lret
adc
mov
sbb
cwtl
divl
mov
cltd
xlat
das
add
aas
cwtl
xor
out
sbbl
mov
sub
xor
in
call
sarb
mov
scas
rcll
xchg
dec
icebp
cmp
dec
sbb
sbb
ret
inc
xchg
inc
sbb
gs
adc
mov
and
ficomps
jg
in
sahf
adc
andb
fwait
cltd
dec
jne
imul
mov
jae
sub
int3
jg
mov
std
movsl
out
inc
das
ret
shrb
jbe
pop
outsb
sub
hlt
imul
jmp
push
addl
aaa
bound
out
add
in
iret
jne
scas
mov
add
mov
and
mov
pop
jle
xchg
std
mov
mov
aaa
loope
pop
iret
pop
jle
or
adc
lret
adc
loope
lcall
adcl
push
xchg
insl
dec
mov
adc
les
mov
cmc
cmp
popf
test
push
jecxz
cmp
adc
inc
ss
cltd
xor
jle
out
xchg
pop
mov
clc
cld
xchg
and
inc
sbb
cmpsb
inc
rorb
cmp
out
insl
mov
or
call
and
push
movsl
inc
mov
sbb
iret
jae
pop
mov
into
outsb
bound
fs
enter
les
cmc
xchg
inc
push
push
decb
cltd
repnz
jp
push
leave
push
jbe
sub
iret
inc
xor
adc
rolb
das
gs
stc
pop
cmp
push
ljmp
scas
pop
jbe
and
pop
imul
aaa
aad
mov
insb
mov
mov
bound
das
movsl
pop
pop
jmp
jl
aad
mov
ljmp
fnstsw
insb
ljmp
mov
inc
push
nop
lea
sbb
jmp
out
lcall
insb
adc
lret
adc
inc
dec
cltd
pop
cmp
mov
push
pop
test
xor
sarl
adc
lea
adcb
xchg
ljmp
mov
outsl
mov
adc
vmovntps
mov
int3
mov
das
test
or
pop
jmp
cmpsb
fisubl
addb
repz
push
jl
rcr
sub
inc
stos
adcl
aad
sbb
test
inc
repnz
push
xor
dec
pushf
push
cmp
cmp
aad
lret
jo
orb
or
and
cmc
adc
movsb
mov
lahf
cmp
sar
insl
jecxz
dec
pop
and
scas
xor
fisubrs
xchg
jo
fisttpl
je
mov
dec
in
insb
js
insb
pmaddwd
jp
mov
inc
movsl
pusha
mov
jnp
cltd
fwait
pusha
and
out
mov
ficomps
mov
addr16
mov
mov
push
jo
push
arpl
out
push
fnsave
jno
in
pusha
fidivl
add
xor
dec
sub
fisubs
cwtl
sub
inc
and
pop
in
in
stos
jno
sub
pop
scas
test
xchg
push
xchg
push
sub
aas
adc
test
jns
rcrb
sub
outsb
js
sbb
fidivrs
in
iret
push
jnp
popa
rcr
mov
repnz
stos
test
daa
out
jne
adc
dec
aad
movsl
loopne
mov
jg
cltd
sbb
jno
add
test
mov
pushf
adc
jbe
cwtl
sahf
cmpsb
jle
or
nop
in
mov
lret
add
add
push
cmp
les
jg
iret
or
repnz
int
or
jnp
lret
mov
scas
jae
jle
jbe
pop
jbe
sbb
inc
jle
fprem
movb
adc
jl
mov
stc
inc
inc
inc
xor
add
aas
xor
dec
mov
mov
roll
and
inc
dec
sub
mov
sub
push
mov
mov
dec
xor
or
xchg
and
sbb
adc
cmp
aam
mov
jae
rolb
hlt
mov
icebp
fimuls
loopne
in
sbb
sbb
mov
mov
cmp
adc
dec
push
lret
xchg
cmp
icebp
mov
pop
mov
jb
cmp
or
std
fimuls
iret
mov
pop
inc
xchg
xchg
idivb
mov
fdivrl
rorl
outsl
sub
cmp
adc
lcall
das
rolb
xchg
push
repz
bound
jl
cmp
mov
in
inc
adc
aad
pop
sahf
pop
enter
push
mov
lods
pop
push
push
mov
hlt
jnp
lds
das
arpl
insb
out
dec
push
pop
mov
daa
push
stos
pop
sbb
into
adc
mov
dec
test
shr
rorb
std
and
std
pop
movsb
rcrb
jp
xchg
push
dec
jmp
jae
inc
lods
adc
push
fnstsw
cmp
dec
xorl
ret
fldenv
jae
scas
out
push
dec
xchg
xchg
aam
lahf
rolb
push
ffree
xlat
mov
sbb
cmp
adc
xor
jns
jmp
dec
xchg
jge
cmp
jmp
sahf
jne
aas
adc
sub
push
jmp
fcmovnb
test
int
repnz
cmp
push
add
mov
mov
out
es
xchg
xor
mov
rcll
aaa
in
scas
mov
sahf
xchg
fisubrs
inc
ds
int
fs
jg
je
scas
enter
cmp
cs
bound
outsl
jnp
dec
jnp
roll
mov
outsb
and
es
in
xchg
sub
es
or
adc
and
mov
pop
mov
mov
or
ficoml
sub
mov
xlat
pop
scas
jb
cli
and
addr16
mov
add
or
andl
inc
frstor
lret
inc
fldl
insl
sub
and
gs
stos
rclb
dec
or
cmp
push
int3
adc
xchg
int
xor
pop
cltd
mov
push
xor
mov
cld
cmp
push
mov
pop
jo
addr16
inc
xor
xor
ds
push
test
rcrl
mov
jg
int
or
out
jbe
jbe
daa
mov
mov
or
and
in
stc
nop
jb
fsubl
out
jle
std
roll
adc
nop
cmpl
pop
xchg
sub
jle
mov
out
fbld
sbb
test
pop
loopne
or
xchg
aaa
nop
dec
lods
ja
cmp
dec
mov
jns
loop
and
fstpt
mov
addb
clc
mov
dec
test
insb
add
mov
stos
sub
and
adc
inc
jg
jle
mov
ss
push
lret
mov
add
ds
jnp
daa
les
or
jbe
or
loope
mov
cmp
test
mov
push
push
push
or
pop
inc
rorb
mov
and
adc
sub
mov
mov
out
in
adc
or
fwait
pop
hlt
imul
cwtl
push
jno
sub
xchg
push
loop
jns
cltd
pop
fsubp
push
xchg
in
cmp
mov
aaa
xchg
adc
testl
xor
jae
mov
iret
movsl
and
jp
in
mov
mov
es
adc
xchg
cs
test
sarb
push
ret
mov
cmp
rclb
inc
inc
ljmp
out
xor
fnstcw
pushl
fwait
icebp
dec
imul
in
xchg
test
dec
mov
jb
push
pusha
mov
xor
cmp
sbb
mov
cmc
lret
pop
lock
push
and
pop
jb
push
sti
fistpll
mov
mov
push
inc
addb
mov
hlt
cmp
fst
dec
adc
pop
jnp
incb
cmp
dec
mov
and
gs
mov
jno
xchg
rcr
sub
mov
fstpl
lea
repz
push
popa
iret
push
adc
movsl
lcall
sti
subl
xchg
test
mov
adc
sbb
lahf
shrl
shll
mov
fsubrs
jne
dec
cmp
les
pop
push
call
sub
stos
cmp
mov
int
sub
mov
sub
xor
daa
xchg
insb
mov
loop
pushf
popf
jo
lods
push
lods
les
mov
cltd
pop
mov
jno
and
loopne
sub
push
dec
sbb
mov
imul
xchg
and
ror
sbb
sbb
mov
mov
sbb
ficompl
jne
push
inc
nop
or
sub
pop
test
jecxz
xor
sbb
cmpsb
nop
test
push
mov
fcmovnb
test
inc
fs
xor
gs
cwtl
add
movsb
pushf
movsb
mov
jae
xor
xor
add
or
mov
adc
dec
jmp
cmpsb
leave
das
and
add
mov
faddl
sub
mov
cmp
fnstenv
rcr
mulb
xor
pop
lods
imul
popf
fmuls
cmp
sahf
xchg
lcall
pop
insl
pop
lahf
test
cmp
sbb
cmpsl
std
shr
adc
jge
call
inc
cmp
pop
sub
or
mov
cmp
xchg
int3
mov
aam
add
movsb
fs
out
fs
xor
shl
sahf
jmp
lods
shll
add
xchg
arpl
test
or
mov
dec
dec
arpl
mov
add
sub
adc
push
add
cmp
rclb
pushf
mov
cmpsb
pop
aam
enter
adc
add
fs
test
pop
jge
shl
ret
pop
mov
pop
negl
mov
scas
rcrl
mov
fucomp
jecxz
movsb
es
xor
aas
cmp
aaa
orl
xchg
xchg
fsub
xor
mov
pop
xor
adc
dec
fidivrs
cmp
push
cmp
mov
mov
pop
inc
mov
pop
clc
pop
rolb
rorl
in
fmull
lahf
xchg
xor
mov
pop
xchg
mov
out
pop
cmc
sti
pop
inc
xchg
in
inc
les
adc
dec
xchg
hlt
lods
mov
insl
jp
mov
cmpl
out
sahf
xorl
push
xor
or
cmpb
pop
mov
jnp
sbb
ret
es
and
pop
nop
dec
aas
adc
jle
mov
mov
test
stos
shll
jmp
pop
mov
inc
outsb
inc
or
xchg
mov
sarb
int
pop
ljmp
sub
ds
pop
bound
adc
and
push
xor
xor
xchg
insl
cwtl
subl
stos
adc
sub
mov
xor
adcb
mov
adc
hlt
fstps
jne
jae
subl
xor
push
mov
jns
jecxz
adc
sbb
sub
xor
xor
in
ja
xchg
pop
lock
push
cld
mov
jg
arpl
sub
fdivrs
repz
mov
leave
movb
sub
popa
xchg
add
fistpll
js
arpl
mov
rcrl
sub
sti
lret
adc
aam
cltd
dec
jecxz
cs
sub
imul
popf
mov
xchg
sub
test
popa
pop
adcb
xchg
push
jae
call
loop
mov
sub
iret
adc
inc
lcall
test
je
enter
lods
outsb
cmp
sub
mov
arpl
xchg
out
mov
aad
xchg
cmpsl
or
mov
test
cs
repz
push
icebp
ss
shrl
sti
mov
xchg
inc
mov
mov
sbb
subl
adc
sub
push
sub
in
in
in
into
cmp
lret
movsb
jge
test
jl
mov
inc
dec
xor
dec
fs
adc
test
add
push
mov
mov
mov
stc
lods
fimuls
adc
je
inc
pop
lret
adc
xchg
fcmovne
scas
in
dec
sbb
pop
iret
fnstenv
loope
jno
insl
cmp
or
std
sahf
inc
mov
push
jmp
sbbb
shll
sbb
arpl
jge
in
dec
addr16
pop
sbb
cmp
test
sub
addr16
jp
movb
dec
ret
mov
mov
insb
test
cs
mov
fldt
pop
pop
add
ljmp
fwait
sub
pop
mov
or
xorb
and
xor
sub
rolb
fldl
mov
push
or
roll
daa
lcall
mov
ret
add
orb
in
xor
movsl
inc
mov
push
pop
movlps
mov
lea
pusha
data16
dec
mov
loope
mov
cmp
and
in
and
movsl
or
jl
outsl
enter
push
and
push
mov
dec
imul
adc
inc
jle
fimuls
loopne
cli
mov
out
pushf
mov
aad
test
mov
divb
sub
pop
insb
mov
pop
inc
sub
test
or
lods
mov
popf
sbb
jg
aad
or
aas
in
repnz
and
pop
dec
mov
adc
mov
inc
xchg
xchg
and
ret
testb
fisttpl
sbb
dec
inc
addr16
insb
cltd
fistl
inc
cmp
aam
jo
xchg
insb
call
mov
xchg
xchg
or
test
in
shlb
stos
cwtl
orl
xor
adc
scas
imul
shll
rolb
cmpsl
adc
shll
lock
jecxz
adc
pop
pop
inc
jb
outsb
sbb
lcall
pop
inc
mov
repnz
repz
or
mov
sub
mov
iret
push
mov
imul
cltd
push
pop
jle
pop
jg
repz
rorb
push
repz
push
into
sub
and
xchg
adc
dec
sahf
aam
pop
mulb
sub
ret
adc
cld
add
insl
mov
xchg
clc
shlb
cmp
fistpl
dec
jmp
test
leave
or
dec
dec
mov
es
rcr
call
inc
adc
pop
ss
test
mov
cwtl
xorl
gs
mov
popa
sbb
sbb
lcall
movsl
pop
jne
xchg
lret
inc
outsb
inc
fsubr
testb
dec
adc
xor
add
mov
push
dec
stos
mov
loope
xor
mov
data16
popf
xchg
inc
push
arpl
loopne
sti
sbb
sub
push
loope
cmp
fwait
adc
fdivs
mov
arpl
ret
add
idivl
cmp
loope
or
scas
sub
push
mov
lahf
pop
enter
mov
mov
jae
stos
movsb
insl
fs
cwtl
xor
enter
inc
mov
xor
ja
pop
mov
subl
inc
repz
fbld
cwtl
xchg
stos
or
cmp
lahf
or
push
loope
add
add
fildll
and
inc
mov
and
jl
pop
adc
sti
int
pop
xchg
test
inc
popf
lds
jl
nop
mov
jl
xchg
iret
cmpsl
fsubs
xchg
out
adc
or
mov
inc
fs
fwait
sarb
lea
mov
test
in
in
stos
push
loop
loopne
fisttpll
lcall
and
inc
or
cmpsb
cmp
xor
fistpll
push
pop
dec
cmc
xchg
pushl
in
add
repnz
pop
ljmp
xchg
jbe
roll
sbb
xchg
movsb
add
mov
lods
xchg
xchg
subl
hlt
test
jo
and
mov
lea
mov
adc
sbb
fxch
adc
mov
cwtl
mov
lock
lods
xchg
mov
jae
fwait
and
jge
cmp
push
iret
iret
adc
test
std
push
adc
xor
fstps
mov
xchg
jbe
sub
pop
jno
xchg
nop
push
gs
adc
aaa
or
xor
iret
dec
sbb
push
mov
fwait
xchg
adcl
jnp
mov
in
and
dec
add
shlb
pop
inc
add
jnp
or
sub
and
cmp
push
fwait
leave
inc
cmp
icebp
jg
or
mov
lock
cli
out
jp
js
push
fistpll
outsb
jmp
orb
shll
xchg
adc
das
cmpsl
std
sbbl
int3
cmpsb
jb
add
rorb
jbe
cmpl
pop
cmp
pop
xchg
mov
lea
adc
sbb
cmc
lock
movsl
sub
mov
mov
cs
incb
cs
leave
xor
xor
mov
push
mov
sub
pop
mov
cmp
mov
push
cmp
fidivrs
insl
and
scas
in
les
pusha
popf
mov
pinsrw
arpl
vmovddup
insb
xor
rcrb
lds
hlt
arpl
xchg
es
std
add
mov
push
push
loopne
adc
sbbb
outsb
lret
pop
add
sbb
pop
stos
push
mov
out
pop
sub
sbb
xchg
or
lods
pop
inc
cmc
jb
mov
das
mov
add
jae
add
adc
push
cmp
mov
inc
outsb
dec
in
test
popa
das
int
sub
out
js
fsubrl
lock
stc
stos
idivb
push
inc
or
movsl
out
jns
push
scas
jne
mov
adc
mov
inc
pop
adc
or
jns
inc
mov
and
adc
icebp
es
sbb
cmp
cmp
add
pop
cmp
fwait
mov
sbbb
or
aas
xchg
mov
sbb
loope
cmpsl
mov
push
adc
jbe
push
js
test
mov
fdivrs
pop
add
cmp
enter
movsl
subl
pop
movsb
sbb
and
mov
sbb
scas
in
mov
xor
cmp
insl
mov
movsl
je
pop
jle
mov
dec
jmp
push
adc
push
adc
mov
xchg
or
jae
jno
cmp
aas
test
dec
fwait
and
scas
lds
repz
add
jnp
repnz
mov
iret
dec
fsubl
divb
push
aaa
xchg
xchg
jp
adc
sbb
movsb
out
pop
in
cmp
xchg
jmp
repz
mov
fstps
mov
stos
dec
das
xchg
jle
aaa
sub
insb
mov
shlb
repnz
or
aaa
mov
fsts
jle
pop
sbb
push
out
int
inc
jl
ret
mov
aas
add
inc
cmp
mov
cmp
sub
push
or
aas
fnstenv
loop
jmp
add
ds
movsl
xor
mov
push
imul
test
push
lock
test
jnp
out
inc
pusha
cli
sahf
fistpl
lea
clc
outsb
cmp
cmp
xchg
ret
cmpl
and
cmp
lds
push
negl
mov
cli
dec
sbb
mul
xor
scas
mov
enter
fiaddl
inc
or
xchg
adc
pop
hlt
pop
in
mov
nop
fimuls
aam
push
shrl
and
fldl
insb
in
push
jne
dec
jns
rol
aam
sahf
roll
adc
daa
push
shll
test
mov
scas
sbb
call
cmpsl
add
sarb
out
shrl
test
gs
and
push
out
das
push
pop
mov
xchg
cmp
and
mov
push
jb
outsb
adc
and
mov
aad
outsl
movsl
lret
popa
ds
fwait
inc
mov
and
mov
and
and
test
ljmp
leave
mov
cmp
mov
mov
sub
mov
fcomps
mov
pop
out
sub
sbb
in
xchg
push
enter
sub
sar
jge
pop
popf
adc
lods
sahf
sub
int3
dec
mov
dec
pop
fldl
bound
xorb
in
rolb
imul
mov
jnp
mov
push
sub
movsl
dec
enter
jp
add
js
testb
mov
enter
lds
and
add
loope
sbb
aam
or
dec
enter
and
inc
mov
jne
add
xchg
out
ret
fmul
stos
lcall
add
dec
out
les
push
mull
ds
in
repz
outsl
sub
pop
lods
mov
add
mov
push
add
jbe
mov
mov
leave
lcall
xlat
dec
dec
mov
sub
mov
sbb
inc
pop
pushf
in
out
add
jns
cmp
mov
dec
outsb
or
mov
rolb
pop
cmp
test
xchg
mov
inc
pandn
je
cmp
pop
aas
movsl
test
jl
mov
fadds
insb
xchg
loope
scas
dec
in
js
and
cmpsl
or
aaa
push
cwtl
aaa
cmpsl
inc
push
rolb
fcoms
xlat
push
and
out
adc
sub
cmp
pop
or
hlt
pop
dec
push
jg
sbb
push
mov
inc
inc
add
add
gs
mov
ret
pop
jl
int
xchg
daa
inc
test
push
pusha
pop
add
orb
call
or
push
ljmp
mov
sbb
push
push
fsubr
orl
push
or
arpl
bound
out
sbb
pop
and
or
jne
sbb
jno
add
xor
aas
jmp
pop
sub
lods
push
test
daa
fxam
or
jp
push
leave
iret
andl
aas
xchg
dec
fidivl
lcall
sbb
push
scas
mov
cmp
shl
add
mov
icebp
add
push
pop
xor
adc
and
in
cmp
lock
cmpsb
jge
mov
and
aam
mov
jo
clc
sbb
push
popf
insb
dec
sub
add
in
xor
addb
sbb
out
hlt
inc
aaa
cmp
into
pop
mov
dec
adc
push
adc
cld
stos
stos
push
lahf
hlt
add
add
fidivl
loope
xor
into
repnz
jnp
add
popa
popa
xlat
mov
xchg
mov
pop
jecxz
pop
jl
mov
jge
add
push
vpsadbw
negb
enter
shrl
lods
sbb
frstor
subb
stos
push
inc
jbe
lea
jb
movsb
loopne
mov
stc
loopne
fwait
sub
pop
pop
test
in
jne
sub
repz
mov
inc
mov
fcomi
mov
inc
or
xlat
fstl
loopne
mov
mov
movsl
flds
jae
mov
dec
xor
mov
pop
ss
cmp
mov
mov
hlt
fdivl
adc
daa
dec
add
push
sti
pusha
pushf
mov
and
aad
out
cmpb
shlb
aad
sar
and
pushf
sub
cmp
pop
subb
or
test
push
xor
push
int3
sahf
inc
cmp
mov
pop
fildll
pop
inc
clc
inc
es
and
clc
dec
mov
addr16
pop
iret
adc
fwait
inc
ss
pop
lahf
out
aaa
neg
insb
xor
cmp
jns
iret
fnstenv
cmp
add
iret
out
sti
das
int3
sub
jbe
leave
add
xchg
dec
dec
adc
jg
jecxz
lods
repz
mov
dec
stos
push
lret
cmpl
stos
add
ret
lret
dec
pop
std
popa
jae
int3
inc
mov
inc
xor
mov
inc
out
cltd
cmc
movsb
int3
or
insl
dec
inc
jle
in
fnsave
repz
jp,pt
enter
adc
or
mov
mov
sbb
clc
push
flds
in
dec
pop
fs
rcrb
sbb
ret
xor
hlt
sbb
lret
inc
xor
in
inc
cmp
stos
jg
or
cmp
fwait
leave
inc
mov
dec
cmp
lea
popa
enter
adc
ret
jl
jnp
jno
mov
arpl
aam
push
aad
outsb
cmp
pop
insl
ret
jnp,pt
es
mov
and
int3
cld
mov
sarb
aad
mov
sub
test
es
sbb
xor
iret
push
add
cwtl
and
add
imul
or
les
sub
and
xchg
mov
loop
fistpl
mov
xlat
in
imul
xchg
test
jle
cmp
push
dec
outsl
into
pop
mov
push
shl
sahf
sbb
jmp
add
pushf
jp
jo
test
inc
inc
push
lock
nop
repnz
mov
test
and
fistpll
dec
outsl
sbb
jnp
mov
mov
lahf
and
xchg
adc
or
movsl
jl
jmp
outsb
hlt
loop
lcall
jo
xor
negb
addr16
and
fsts
imul
fsubs
jnp
movsl
sahf
inc
ret
jge
scas
rorl
mov
pop
sarl
and
sbb
pop
xchg
idivl
cmpsl
leave
push
mulb
mov
out
mov
cmp
scas
in
shll
aas
xor
ja
je
arpl
loope
mov
dec
lcall
repz
sbb
adc
pop
cmp
mov
scas
cmp
or
jle
sbb
popf
loope
sub
xor
cmpsl
push
mov
divl
or
test
xlat
iret
fcoml
sub
bound
bound
cmpsl
dec
cs
int3
inc
xorb
adc
pop
sub
mov
add
lods
pop
jne
pop
pop
push
mov
sti
mov
pop
push
cmpsb
out
loopne
adc
bts
mov
dec
dec
test
cmc
sub
out
cmp
lods
dec
into
pop
adc
pop
mov
push
imul
cld
sub
jp
jae
and
es
setne
enter
xchg
rorb
jns
jne
imul
insl
sbbb
enter
push
ret
aad
push
popf
int
idivb
imul
test
or
ja
test
sub
test
outsl
pop
lcall
pop
das
or
test
and
or
sbb
and
cmp
push
cwtl
jno
xchg
sti
add
inc
fldenv
mov
and
jmp
inc
sbb
inc
mov
js
mov
inc
test
mov
xchg
pop
nop
mov
xor
adc
jge
das
xor
jle
movsb
rol
mov
inc
sub
lret
fimuls
jp
sub
out
dec
cltd
add
mov
cli
mov
icebp
mov
pop
push
movsl
push
jg
ret
das
pop
cmpsb
lahf
movsb
clc
or
adc
sub
es
leave
shr
cltd
fsubrs
ret
ja
jbe
stc
mov
push
out
xchg
sbb
xchg
or
and
ljmp
jo
aas
std
hlt
sbb
gs
dec
cmp
sub
jmp
and
stos
aam
jmp
inc
stos
test
nop
pop
sbb
push
lret
ret
lret
mov
mov
icebp
or
mov
fadd
enter
sahf
mov
sbb
cmpsl
scas
js
pop
mov
mov
dec
add
mulb
jle
int
jecxz
lods
or
fcmovb
xchg
sub
jo
dec
jp
mov
popf
jbe
mov
mov
inc
and
cltd
js
repz
cmpsb
pop
adc
sub
mov
lds
adc
dec
je
jnp
movb
mov
dec
inc
push
stos
bound
xchg
insb
out
dec
dec
in
or
jg
xor
adcl
add
into
test
shl
or
data16
test
push
pop
push
ljmp
cli
mov
outsl
das
popa
jmp
aam
fcoml
pop
mov
xchg
gs
push
out
lea
or
inc
mov
sub
dec
mov
cmp
loop
push
cs
or
pop
pop
add
aad
dec
pop
mov
lock
jno
push
inc
shrl
jecxz
cmc
and
or
cltd
lea
cmp
mov
cmpsb
add
cld
in
cmp
jne
jl
pop
dec
out
mov
in
je
mov
mov
popa
cmp
sub
fwait
pop
test
in
ja
cmc
es
into
gs
pop
roll
sub
sbb
push
test
mov
and
outsl
add
test
sub
repnz
push
adc
pop
aas
xchg
cltd
xchg
popa
xor
xchg
in
jo
divl
in
jge
mov
loope
bound
xor
andb
jne
xchg
mov
scas
ds
sub
sbb
je
or
sub
and
lea
je
and
shufps
pop
mov
adc
cmp
and
out
mov
mov
outsb
ljmp
pop
lea
ss
sub
dec
lods
xchg
jmp
data16
fiadds
jmp
cli
sbb
mov
push
out
xor
add
fdivrp
arpl
fwait
in
fildl
cli
pop
js
lods
push
cld
mov
xchg
imul
adc
mov
xor
xchg
inc
adc
adc
inc
repz
scas
mov
ja
mov
and
cmp
leave
xchg
cmpsb
jmp
fdiv
add
clc
cmp
lods
int
mov
mov
sub
pop
sbbl
sbbb
mull
or
int
push
mov
mov
cmp
pop
loope
popa
pushf
mov
pop
dec
sub
rcrl
bnd
insb
lods
test
add
add
jae
add
add
jae
outsl
je
imul
add
add
add
add
outsl
add
sub
add
push
add
