pop
mov
out
adc
pop
inc
arpl
jbe
sbb
ret
ljmp
adc
cli
daa
pop
inc
push
stc
ds
and
push
cmp
pop
jae
je
gs
xor
rcrb
push
add
or
push
sbb
cmp
xor
xorb
shl
adcl
push
pop
or
int
pop
arpl
lds
rol
roll
and
arpl
rcll
scas
int3
loope
roll
lods
stos
sbb
inc
stc
pop
adc
cmp
adc
push
cmpsb
dec
xor
push
dec
shlb
sub
cmc
test
sarl
shll
in
icebp
aam
xchg
sub
fs
jns
pop
jnp
in
jle
hlt
adc
sbb
and
cwtl
adc
jle
lret
lcall
mov
or
out
cld
ret
lcall
cwtl
inc
xor
cwtl
sbb
cwtl
add
dec
out
push
xchg
jmp
adc
adc
jp
inc
lcall
adc
fiaddl
pop
jmp
outsb
mov
ds
adc
pop
pop
push
nop
push
adc
sbb
xor
enter
cmovno
adc
jl
cld
dec
dec
dec
jb
add
addr16
dec
mulb
mov
pop
adc
fyl2x
mov
and
fs
out
enter
in
outsb
cwtl
push
lcall
stos
into
out
int
push
fistpl
sub
mov
cld
lret
or
lods
adc
pop
sbb
adc
cli
pop
adc
clts
push
out
jbe
push
sub
fs
or
scas
mov
dec
dec
pushf
popf
xchg
loope
in
cmpsb
movsb
notl
dec
jle
xchg
cld
cld
sbb
das
adc
call
stos
dec
arpl
xor
sbb
pop
cmp
pop
xchg
imul
out
jo
sbb
cli
and
dec
int3
int3
lahf
outsb
test
lcall
ljmp
push
pop
leave
rcrb
cli
or
out
dec
popa
addl
mov
push
xchg
dec
out
adc
cmpsl
movsb
or
lcall
nop
out
mov
scas
pop
cli
sbb
lret
cld
nop
notl
push
cwtl
bound
sbb
shr
or
sub
cmc
adcb
xchg
mov
sbb
aaa
xchg
cmp
in
sbb
push
stc
dec
jno
adc
adc
sbb
push
imul
add
mov
pop
leave
jmp
pop
out
call
lock
cmp
add
cmp
cvtps2pd
repnz
cli
jp
sub
dec
dec
mov
test
arpl
push
mov
add
bound
xor
adc
dec
lret
or
add
xchg
gs
fistps
out
xchg
xchg
mov
adc
dec
adc
pop
imul
sub
fs
mov
add
fdivs
test
xlat
mov
je
stc
aaa
pushf
shrl
lock
lock
jp
testl
nop
shr
push
sub
add
addr16
iret
lret
les
cmp
pop
mov
pop
pop
out
int
adc
push
mov
add
and
cmpsb
enter
in
sahf
add
dec
push
push
lahf
add
sbb
pop
inc
add
jge
push
fsubrl
cli
push
insl
push
int
xchg
ljmp
or
push
dec
sti
nop
aam
hlt
sarb
xor
push
daa
jne
and
lods
adc
pop
or
bound
cmpsb
push
adc
adc
mov
lret
jp
xor
lods
in
mov
rcrl
sahf
push
sub
outsb
and
adc
movsl
mov
adc
push
cld
push
push
lcall
imul
sub
scas
sub
pushf
adc
aam
aad
cmpsl
mov
inc
adc
aaa
std
mov
xor
jbe
mov
mov
das
aaa
notb
pop
sub
gs
jle
std
mov
pop
dec
mov
lahf
ljmp
cmp
fcompl
adc
push
sbb
imul
add
mov
loop
ret
cmp
sbb
push
inc
inc
push
jge
adcl
ret
xor
pop
cli
inc
insl
sub
fs
mov
push
mov
dec
arpl
insb
add
push
add
cmp
add
leave
xor
inc
mov
jbe
xor
cltd
and
pop
adc
pop
lea
sub
xchg
dec
clc
pop
cmp
stos
pop
ret
in
xchg
aad
aaa
xchg
lret
daa
enter
rcl
mov
xchg
add
mov
push
add
jo
adc
ja
into
scas
dec
icebp
sub
inc
mov
jns
or
lahf
outsb
out
xor
cmp
cltd
xchg
sub
rol
sbb
cmp
xor
lcall
xlat
jns
push
push
mov
add
xchg
cmpsb
cmpsb
xchg
sub
push
push
test
jmp
loope
xor
mov
in
adc
cmpsb
lcall
add
mov
jle
stos
add
xlat
adc
lock
add
es
cmp
xchg
hlt
and
sbb
jp
sarl
dec
bound
dec
push
loop
stc
outsl
push
notl
or
xor
jp
lret
pop
adc
xlat
jns
icebp
jbe
push
jmp
mov
dec
add
xor
popa
fs
pop
aas
push
fmulp
xchg
insb
in
adc
adc
pop
out
ja
xor
xchg
or
addb
stos
dec
dec
out
inc
in
sub
sbb
nop
push
push
incb
sbb
nop
jmp
jmp
pop
jge
push
xchg
ret
push
jmp
mov
dec
out
mov
lcall
rcrb
cmp
and
jl
jg
stc
add
repnz
inc
lcall
xor
cli
or
scas
mov
adc
sbb
add
stos
xor
add
lar
sub
mov
fists
dec
push
fistl
cwtl
sahf
rclb
ljmp
adc
xor
push
jle
pop
dec
aaa
push
adc
adc
outsl
test
adc
jbe
xchg
sti
test
add
outsb
sbb
add
pop
outsb
bound
add
pop
xchg
fistl
cmpsl
shr
xor
stos
adc
sbb
rcll
dec
mov
or
nop
call
adc
in
lret
nop
bnd
fucom
cmpsb
cmp
and
out
out
imul
movsb
out
cmp
leave
adc
clc
sbb
insb
mov
cltd
adc
repz
sbb
sub
leavew
and
mov
adc
xchg
arpl
adc
xchg
mov
mov
or
and
dec
inc
in
and
inc
subl
push
sbb
leave
scas
iret
sahf
arpl
adc
xlat
lods
and
mov
aas
cmp
or
loope
in
mov
int
insb
pop
cmp
fnstenv
addr16
xor
sbb
jge
or
xor
fisubrl
loope
jg
inc
in
mov
sub
dec
inc
adc
shll
add
je
xor
dec
mov
mov
cmp
cmp
hlt
in
adc
jns
or
stc
sbb
aas
fsubrl
shr
adc
icebp
push
mov
xor
test
faddl
inc
sbb
sbb
pop
mov
iret
inc
es
sbbl
sbb
push
push
cwtl
pop
sub
mov
aam
ret
js
mov
add
icebp
nop
or
out
push
add
sbb
and
pop
cmp
xchg
loopne
mov
lods
subb
rcrl
pop
xor
aam
adc
inc
push
pushf
xchg
pusha
xor
aas
push
jnp
dec
icebp
inc
imul
sbb
cmp
adc
adc
mov
adc
jno
xor
add
xchg
cmp
xlat
int
adc
xchg
mov
into
mov
ljmp
mov
lret
adc
out
lcall
es
adc
adc
dec
pushf
inc
mov
shlb
leave
dec
ret
movsb
inc
dec
fstpl
push
sub
or
ficomps
in
xchg
sub
sbb
negb
scas
xchg
dec
negl
scas
test
dec
pop
add
xor
mov
imul
pop
cwtl
dec
sbb
cmpsl
sarl
enter
outsb
arpl
push
jge
push
stos
and
cmp
and
frstor
pop
rolb
popf
push
sbb
imul
aad
fs
addr16
xchg
add
sub
cmp
push
in
dec
cmp
icebp
inc
adc
rorb
pop
adc
das
jnp
int
sti
xchg
cli
xor
cli
js
mov
cmpsl
faddl
adc
add
les
insb
ret
cli
cmovbe
fs
ficoms
dec
sub
sbb
stos
stos
sbb
jnp
mov
xchg
std
inc
push
xchg
inc
ret
cwtl
repnz
cmc
push
mov
cli
push
in
add
pop
xor
mov
lock
ljmp
fdivrs
push
lret
sahf
mov
popa
inc
jmp
sbb
std
add
push
test
out
sbb
mov
loope
sub
fs
mov
xchg
sub
aaa
push
pop
loope
icebp
fimull
aas
push
in
mov
in
ja
sub
pop
std
sbb
xor
push
add
push
in
ljmp
stc
sub
pop
mov
adc
mov
repz
lock
subl
push
aad
jecxz
addl
in
dec
lcall
mov
dec
push
sub
fs
bound
call
pop
cmpsl
add
xchg
xor
je
xor
cmp
lret
jmp
push
pop
sbb
lods
push
inc
out
sbb
scas
fsubl
cmp
cmp
inc
sub
sbb
adc
das
and
fsubrl
xor
fnstsw
add
jno
mov
aaa
or
test
adc
cmp
rcrl
mov
cmp
nop
popf
sbb
les
xor
add
jle
xlat
jmp
xor
std
gs
jmp
test
int
setb
adc
sub
hlt
pop
mov
push
sbb
rcrl
or
mov
mov
sbb
xor
addl
repz
nop
not
pop
dec
nop
mov
hlt
sub
adc
pop
push
das
in
jge
lcall
out
add
jb
add
cmp
rclb
cmpsl
icebp
push
pushf
jle
adc
cmp
insb
push
jg
out
mov
cmp
stc
jns
sti
cmp
mov
xor
out
sbb
es
adc
cmp
add
push
lcall
test
je
xchg
outsb
pop
cmp
adc
dec
xchg
xlat
pop
or
movsb
push
pushf
jg
pop
mov
fidivl
sbb
dec
or
mov
push
aad
insl
xor
fnstcw
in
rcrb
dec
adc
xor
in
xchg
ret
adc
pop
xor
loopne
mov
int3
cmc
dec
cli
sub
cmc
xchg
ja
fidivrs
jno
enter
or
xor
jno
lea
ja
or
and
xchg
push
xchg
sbb
xchg
gs
das
movb
pop
ss
xchg
or
inc
cmp
mov
add
pushf
adc
lahf
aam
leave
in
cli
sub
add
sbb
ljmp
outsl
add
cmpb
xchg
mov
jns
faddl
push
dec
cmp
lret
sti
les
mov
pop
out
adc
mov
add
mov
add
in
movsb
jno
cli
adc
fidivrs
jno
xchg
mov
sti
stc
std
pop
cmp
adc
adc
shrb
clc
fsubs
cli
or
fxch
jnp
jge
sub
and
popa
sarb
int3
iret
jp
clc
mov
push
push
fs
faddl
and
rcll
idivb
add
mov
pop
mov
push
sub
lret
cmpsb
rol
sbb
sub
insb
shrb
in
push
xchg
ljmp
mov
repz
mov
outsb
add
sub
mov
rolb
inc
sub
jg
dec
fs
roll
andb
cmpsl
xor
sbb
call
xor
out
or
jle
add
rcl
imul
xchg
lock
mov
sub
dec
xor
in
pushf
insl
sub
or
in
or
test
push
in
xor
cmp
lret
out
imul
sbb
outsb
ja
pop
adc
ja
clc
mov
xchg
clc
adc
lcall
mov
or
gs
sub
rclb
adc
lret
bound
lcall
mov
aaa
movsl
or
mov
dec
push
lret
outsb
stos
cmp
inc
arpl
adc
data16
mov
mov
adc
xchg
out
push
fistps
xor
cli
add
sarb
mov
test
hlt
xchg
sbb
cltd
icebp
add
out
lock
rcrb
loop
cwtl
sarb
or
inc
inc
jge
and
scas
fstl
sbb
fwait
xorps
adc
cmp
jae
cmp
js
call
dec
dec
gs
and
clc
dec
add
xchg
int3
xor
out
out
test
cmp
cli
and
sbb
sub
data16
leave
into
or
lock
imul
fdivl
sbb
data16
out
push
cli
pop
out
outsl
pop
imul
out
aam
cli
lea
pop
push
cmp
push
jo
adc
pop
mov
sbb
add
rcll
in
hlt
mov
adc
and
cwtl
and
xchg
ss
nop
lock
sbb
mov
gs
rclb
or
cmc
xchg
insl
pop
or
cmp
jl
nop
cmpsl
mov
es
rcll
or
sarb
outsb
into
jae
adc
push
push
test
das
jle
adc
push
pop
aas
cli
inc
insb
pop
pop
xor
insb
push
push
call
imul
or
leave
lret
and
push
sbb
call
push
pcmpeqw
cs
push
push
push
jmp
push
lea
inc
rcrb
xor
outsl
jecxz
xchg
or
jp
or
call
cmpsb
push
stos
xor
loop
hlt
mov
dec
cmp
cmp
xchg
cmpb
in
mull
sbb
and
and
mov
es
sub
iret
sub
cwtl
adc
jae
aam
xchg
jecxz
imul
cmpl
stc
scas
movsl
inc
sbb
pop
jns
pop
cmp
fstp
or
ret
out
out
out
jle
add
xchg
inc
push
fnstenv
mov
push
sub
xor
ss
fcmovu
dec
out
out
out
out
push
xchg
sbb
nop
dec
push
hlt
sbb
mov
push
into
pop
jbe
jecxz
jae
xchg
out
out
out
xor
in
je
movsb
popa
cmp
push
les
imul
cmp
mov
popf
clc
xchg
fcoms
cmpb
cmp
out
out
out
mov
cmpsl
add
inc
sub
and
sub
fwait
notb
mov
out
out
out
mov
cli
outsl
mov
jnp
or
aaa
ret
stos
push
addr16
cmp
xchg
nop
aaa
push
ret
sbb
out
adc
mov
adcl
repnz
jmp
dec
lea
jecxz
push
vcvtdq2pd
lock
out
out
out
out
imul
int
das
test
pop
mov
mov
repnz
push
sbb
fadds
jle
out
pop
pop
cmc
mov
sub
and
mov
aam
push
out
dec
out
out
popl
xor
inc
mov
es
dec
xor
cwtl
call
ss
out
out
out
scas
mov
dec
int3
xchg
jg
xchg
fwait
adc
aad
fs
les
add
fldt
fwait
adc
or
out
in
test
fs
adc
mov
gs
call
das
in
push
rcll
inc
in
cmpsb
adc
mov
or
xor
xchg
xchg
test
mov
dec
cmpsl
mov
ds
and
and
dec
adc
sbb
add
sbb
ja
popa
cli
shr
ja
ja
mov
xchg
ja
shll
add
out
out
inc
pop
push
inc
inc
push
inc
push
dec
push
jle
jge
jg
dec
push
je
popa
jns
dec
inc
inc
pop
adc
inc
pop
decb
jp
jo
fs
repnz
cmp
cli
inc
mov
daa
lret
pop
out
pop
imul
push
adc
dec
sbb
push
int
ret
cmp
lods
sub
lea
add
rcrl
dec
popa
std
rorl
mov
shl
jnp
mov
sbb
aas
iret
scas
jg
sbb
sbb
jne
adc
mov
rorb
int
adc
es
push
mov
jg
out
inc
pop
push
xchg
leave
outsl
mov
mov
leave
aas
add
repz
cmp
int
xlat
adc
dec
int
xchg
dec
mov
out
or
cld
sub
gs
sbb
sbb
stos
cmpsb
scas
nop
add
pop
lcall
or
repnz
xchg
push
movb
daa
lcall
push
jle
test
jge,pt
leave
sub
xor
int3
xor
adc
push
and
mov
xchg
shl
jg
stc
sbb
push
inc
or
jecxz
mov
jo
inc
out
rorb
cmp
lcall
aas
bound
cmp
inc
fs
cli
test
xchg
repz
push
ja
stos
push
ja
rcl
inc
loope
insb
jns
dec
in
insl
loopne
out
lock
scas
mov
loope
pop
inc
and
adc
inc
in
lcall
lcall
rcl
pushf
ret
and
sub
mov
int
cmp
jns
inc
sbb
popa
sbb
lock
out
inc
jmp
jle
cmc
jecxz
outsb
adc
movsb
pop
mov
stc
bound
or
sub
xlat
into
jmp
pop
jl
fnstsw
add
and
push
cmp
jnp
or
cli
sbb
xorl
adc
inc
push
inc
inc
mov
dec
xchg
scas
or
clc
or
cli
fs
out
outsl
scas
rcll
cli
xchg
rclb
rorb
stc
or
xor
dec
lock
inc
inc
mov
fistps
bound
mov
fimull
push
adc
xchg
xchg
add
nop
sub
xor
pop
add
mov
dec
mov
ds
and
out
ret
mov
sbb
mov
shl
dec
jno
sub
jmp
pop
gs
xor
addr16
inc
or
cmp
xor
jg
sub
popa
pop
inc
jae
imul
sbb
inc
mov
pop
imul
daa
in
inc
sub
insb
jg
rcl
adc
adc
or
ljmp
inc
jns
and
jnp
or
mov
or
mov
push
adc
cmp
into
adc
push
out
repnz
pop
cltd
data16
push
sbb
xor
adc
adc
rorb
ds
lcall
mov
test
imul
shlb
mov
push
stc
dec
inc
inc
inc
inc
inc
jge
pop
loope
push
xor
xor
cmpsb
cld
jae
dec
and
dec
cmpsb
pop
pushf
aaa
in
mov
test
xchg
jno
in
mov
mov
divl
sbb
out
cmp
sub
jne
cmp
xchg
repz
incb
test
clc
fimull
or
iret
jl
fcom
sbb
dec
iret
push
adc
push
shrl
gs
sub
sbb
out
xchg
mov
cmp
add
gs
cli
jno
pusha
call
out
xchg
stc
adc
gs
inc
sub
cmp
gs
cmpb
out
cmpsb
cmpsb
add
xor
pop
ds
aaa
cli
cmp
mov
pop
aaa
mov
fdivrp
nopl
mov
fists
inc
or
mov
cli
sbb
add
and
flds
sbb
shrl
sbb
add
lods
xor
cs
cmp
or
insl
sub
jmp
sti
pop
adc
lcall
jmp
sti
push
jmp
bound
lcall
xor
lcall
push
fidivrl
sbb
add
test
and
jno
cmp
aam
mov
inc
pop
jmp
mov
cmc
mov
mov
shrl
mov
rorb
loope,pt
dec
jp
cmp
xchg
call
jno
fcmovbe
fs
mov
loope
scas
and
push
sbb
inc
lcall
push
xchg
daa
mov
or
or
in
psllw
lsl
hlt
test
add
push
ds
popf
adc
lods
dec
jle
push
jecxz
pop
and
inc
mov
loop
or
leave
jp
cwtl
dec
sbb
insl
sub
outsb
not
adc
jns
faddl
pop
sbb
popa
mov
iret
mov
push
add
xchg
fucomp
bound
push
push
xlat
adc
sbb
out
inc
ficoml
push
dec
lcall
into
lods
and
dec
pop
popf
or
lret
or
cmp
jno
jmp
dec
into
adc
cmpsl
cmp
aaa
sbb
push
je
mov
adc
outsl
inc
outsb
mov
out
xchg
shll
fst
cltd
add
mov
pop
jno
es
lret
mov
cmp
in
adcl
lret
cmp
loop
or
mov
add
adc
sub
jl
lods
dec
dec
or
pop
fiaddl
adc
lcall
outsb
dec
repz
inc
insl
push
roll
sub
sbb
xchg
pop
jno
add
nop
adc
sbb
push
xchg
shl
vmwrite
pushf
loopne
dec
out
insl
or
jns
sub
or
push
insl
jbe
xchg
xor
das
adc
dec
adc
sbb
jle
scas
dec
std
inc
stos
mov
push
daa
pop
xchg
das
cmp
lds
pop
popa
mov
pop
out
in
adc
mov
xchg
pop
shrb
xchg
fsts
stos
push
and
fs
push
adc
and
push
sbb
sbb
std
sbb
shl
out
fwait
daa
sbbl
xchg
fsubp
insb
out
inc
mov
add
inc
or
xchg
inc
popa
push
fmulp
fadd
jae
insb
sbb
imul
js
inc
loopne
or
add
add
clc
lcall
cmp
jg
mov
jmp
out
pop
lret
jmp
push
dec
push
aaa
test
inc
add
or
adc
sbb
rcrb
lret
scas
stos
test
push
outsb
or
loope
lret
dec
sbb
dec
jno
jg
cli
adc
add
or
outsl
cmp
jno
xor
icebp
out
inc
clc
scas
and
push
dec
ja
push
adc
add
dec
cwtl
inc
in
nop
cmp
dec
mov
sub
fstpl
call
in
aad
mov
das
cmc
mov
and
adc
cmpsl
adc
sbb
adc
xor
add
nop
aad
loopne
in
xchg
dec
jmp
push
cli
dec
pushf
jg
nop
in
out
push
xchg
push
fistps
insb
cmp
stos
add
lret
test
push
cmp
mov
insl
mov
jmp
lret
push
mov
aas
ffree
push
and
sbb
xchg
and
insl
dec
jae
mov
test
push
in
inc
mov
inc
sub
dec
iret
or
int3
sub
mov
adc
push
pop
xchg
stos
cli
stc
push
adc
clc
aas
dec
lret
push
ds
ja
and
adc
and
adc
gs
pop
and
cmc
adc
fcoml
sub
sub
pop
sarl
pop
addl
test
rolb
dec
or
and
dec
adc
in
es
jl
or
xor
scas
in
mov
sbb
push
jmp
fwait
std
add
xor
add
add
loop
jns
fisubrs
jo
insl
sub
scas
sub
stos
mov
sub
arpl
dec
pusha
cmp
cmpps
mov
je
jmp
pop
mov
jmp
adc
dec
push
mov
nop
pop
jmp
clc
inc
cwtl
fcomi
sub
pop
or
out
mov
or
pusha
test
lea
cwtl
sbb
pop
ret
adc
sbb
push
sub
pop
aaa
pop
xchg
mov
push
bound
in
scas
scas
mov
out
adc
pop
cli
sbb
or
or
sbb
adc
lcall
aam
sbb
pop
dec
orl
test
icebp
mov
clc
inc
jmp
adc
pop
xchg
iret
hlt
test
sub
inc
js
sbbl
xchg
add
jecxz
lds
dec
sbb
push
jecxz
imul
cmp
xchg
shll
in
xchg
scas
in
dec
fs
pop
insl
or
lret
insb
push
cmp
cld
insl
or
enter
repnz
add
cli
hlt
and
jge
cwtl
stc
cli
add
dec
sub
jb
xchg
xor
and
scas
dec
test
insb
aaa
sti
outsl
xor
loopne
outsl
adc
out
xor
call
push
mov
mov
in
cmp
aas
fstl
stos
gs
jg
outsl
pop
fiadds
or
pop
daa
pop
xchg
sbb
mov
fs
cwtl
cld
popa
in
xlat
inc
cli
cmp
sbb
mov
clc
adc
lret
jl
push
ss
jne
out
cmp
rorb
push
sbb
std
inc
or
clc
cmp
fwait
outsb
mov
xchg
mov
inc
and
mov
enter
inc
mov
mulb
and
lock
iret
dec
sbb
mov
xor
jle
ss
ja
dec
xlat
out
pop
outsb
fwait
pop
fwait
inc
adc
gs
sub
sbb
add
addr16
lret
dec
add
lcall
insb
pushf
outsb
sbb
add
jno
or
out
cld
jb
ds
cli
jg
rcll
in
loop
inc
cwtl
les
sbb
dec
aas
adc
jecxz
or
aas
roll
test
or
insl
pushf
mov
roll
into
cmp
es
fiadds
and
loopne
sbb
rclb
cmp
push
test
out
xor
lds
repz
movsl
inc
jns
jo
adc
mov
jb
and
dec
rol
test
jle
dec
jbe
stos
iret
xor
mov
nop
iret
dec
push
cmpsb
cltd
cld
shr
mov
scas
cmp
mov
inc
ss
mov
aad
js
mov
inc
sar
xchg
mov
pop
or
mov
dec
cmp
into
sub
dec
and
cmp
sbb
cmp
popf
js
sbb
in
cmc
and
or
inc
inc
iret
das
sub
fimuls
in
mov
pop
nop
scas
push
stos
xchg
xchg
rcrb
ljmp
sbb
add
xchg
mov
inc
mov
mov
xchg
sub
inc
push
jns
push
dec
fiadds
stc
sar
and
xchg
mov
xor
sub
rol
stc
xlat
dec
roll
mov
and
and
xchg
sub
push
imul
dec
xorb
sbb
dec
adc
mov
sbb
jne
or
push
push
in
sbb
pop
dec
loope
dec
in
pushf
push
adc
ljmp
std
lcall
adc
inc
jb
push
sub
inc
mov
push
inc
xor
or
sbb
ja
push
mov
xchg
mov
insl
jle
gs
push
mov
into
mov
adc
roll
dec
xlat
xchg
or
dec
test
jge
enter
dec
push
dec
cs
adc
adc
icebp
xchg
pop
adc
sbb
rol
dec
lret
jmp
jp
arpl
jge
and
imul
jge
aad
gs
jle
jbe
jo
jns
jo
je
add
int
ret
mov
imul
xlat
push
incl
jbe
or
adc
stc
push
adc
xor
gs
or
xor
or
jge
cmpl
mov
mov
lock
push
stc
insl
ds
dec
ud0
pop
cmpsb
std
push
jbe
or
nop
jg
adc
pop
mov
and
mov
jnp
inc
loop
sbb
jb
lods
add
call
cmp
adc
push
loope
xchg
sbb
aas
pusha
mov
dec
cmc
cli
pop
pop
cmc
lods
cmc
stos
mov
aas
or
sti
sbb
es
xor
gs
cmp
xor
lret
sub
negl
std
mov
arpl
inc
jo
or
daa
or
mov
mov
jb
in
inc
jle
gs
je
je
inc
imull
jo
je
fisttps
outsb
xchg
adc
sub
dec
sub
sub
xchg
aam
icebp
or
sbb
in
xchg
inc
lea
sub
add
add
pop
add
outsl
jg
iret
add
dec
sbb
push
xor
pop
add
jle
xor
sub
mov
cli
and
and
mov
lcall
cli
pop
or
subl
inc
sbb
xchg
xchg
inc
lock
nop
push
stc
push
lcall
adc
pop
cmp
movsl
inc
sub
lcall
adc
sbb
shl
adc
add
mov
hlt
inc
loope
pusha
sti
push
jne
push
jnp
pushf
inc
in
jns
aas
mov
mov
jecxz
add
pushw
cmp
int
aaa
rol
mov
sbb
lock
loope
das
test
push
pop
mov
leave
loope
adc
aam
xor
jecxz
adc
adc
sbb
jmp
xchg
xchg
cmp
adc
xchg
aam
xlat
adc
xchg
or
xchg
adc
or
test
jb
adc
mov
jge
loopne
stc
shll
pop
mov
pop
mov
sbb
mov
mov
sbb
push
xchg
pop
ja
mov
test
imul
cmp
out
push
mov
mov
push
pop
sub
loop
push
pop
push
dec
adcb
mov
sbb
push
test
jb
add
daa
scas
sub
xor
cmp
sub
sbb
mov
sub
sub
insb
add
out
add
ss
xchg
adc
mov
sub
mov
add
shrb
aam
lret
xchg
shlb
mov
sub
mov
dec
adc
fildll
or
sub
stos
das
pop
push
popf
lahf
mov
inc
pop
cmc
jne
pop
jne
sbb
dec
repnz
sbb
mov
or
jge
daa
mov
ret
fnstenv
xchg
pop
push
adc
sub
shr
pop
or
loope
stc
cmc
or
push
icebp
int
jne
push
pop
vpaddusw
aad
push
pop
or
test
andl
lea
test
or
or
imul
jge
jne
jne
push
jno
xor
lea
cmp
or
or
cltd
fldenv
out
scas
add
mov
inc
daa
orl
test
mov
mov
jbe
cltd
or
push
xchg
sbb
loop
sbb
out
and
xor
xor
xor
icebp
xchg
sbb
repnz
sbb
div
and
xor
xor
xor
rcll
ret
and
xor
mov
leave
enter
xchg
sbb
xchg
sbb
xchg
sbb
rcl
sbb
xlat
and
xor
xor
xor
mov
mov
and
xor
xchg
test
xchg
sbb
xchg
sbb
dec
arpl
fnsave
push
lahf
cmc
nop
jge
gs
adc
testl
pop
adc
sbb
adc
push
pop
and
adc
mov
push
imul
cmp
xor
imul
arpl
jo
dec
or
sub
or
push
adc
pop
ja
je
xchg
push
pushf
push
cmpsb
cmc
lret
jo
sbb
dec
push
arpl
sub
inc
inc
sub
add
xor
movb
cmc
loope
add
and
std
daa
shlb
sbb
sbb
pop
inc
inc
mov
inc
mov
out
sbb
addr16
push
xorl
jg
je
xor
and
daa
out
arpl
addr16
ja
jle
dec
inc
jb
inc
xor
dec
inc
sbb
dec
sbb
mov
out
push
mov
mov
or
pop
popa
sbbl
adc
sbb
cmpsl
or
jg
scas
dec
je
inc
jno
mov
sbb
sbb
test
inc
push
push
jne
out
inc
jg
dec
addl
push
dec
add
test
inc
jle
jg
jge
push
jge,pn
mov
push
jo
gs
sbb
dec
fnstenv
or
sbb
push
xor
adc
xor
xor
mov
push
jb
bound
cltd
jge
pushf
addl
inc
xchg
inc
addr16
xchg
inc
arpl
je
or
inc
int
add
and
gs
jp
subl
xor
sub
sbb
jnp
push
jp
inc
push
dec
imul
jo
mov
add
add
xor
cli
daa
jge
push
jo
jne
cmp
xlat
arpl
pop
dec
pop
jae
push
enter
arpl
mov
add
mov
cwtl
jbe
adc
xor
inc
inc
push
adc
mov
adc
ds
inc
jo
je
jo
mov
add
aas
es
lea
bound
mov
sub
adc
lahf
jns
popa
adc
icebp
pushw
fisubl
shlb
les
mov
sbb
push
out
data16
mov
pop
shrb
ret
sbb
xchg
icebp
out
pop
loop
jmp
test
out
adc
rcll
cltd
pop
ret
sti
dec
dec
cmp
cmp
add
shlb
out
cli
adc
jmp
pop
and
or
xor
js
out
popa
adc
adc
icebp
out
lods
cltd
out
inc
movsl
push
dec
adc
xlat
push
out
cmp
push
push
out
cmpsb
sub
inc
xchg
std
adc
enter
nop
sbb
sbb
arpl
je
enter
nop
jne
xchg
mov
adc
into
cld
jle
into
cmp
xchg
cli
adc
cmp
adc
ljmp
int
fwait
sbb
jae
into
cmpsl
adc
ret
icebp
lock
mov
ror
ror
ror
rorl
cmp
adc
aad
rolb
jmp
lds
inc
adc
jne
jno
adc
and
fwait
out
outsb
mov
xchg
notl
xchg
out
adc
lcall
rorl
lret
jnp
jnp
adc
push
or
or
es
adc
jmp
lds
cmp
sub
fisttpll
shr
adc
pop
xchg
add
xchg
push
inc
loope
push
cwtl
mov
jle
sub
push
push
mov
out
cmp
cmp
insb
sbb
push
sbb
sbb
inc
jb
fwait
sub
add
push
icebp
popa
mov
lds
test
scas
and
cmp
or
aas
lcall
vucomiss
faddp
aas
jnp
sub
pop
cmp
mov
andl
cmpsb
sbbb
int
std
add
dec
test
out
bound
push
xchg
insl
pmaxsw
gs
sub
cmc
leave
add
fnstenv
rol
adc
adc
mov
and
or
or
aas
dec
sub
ss
or
repz
data16
pushf
inc
adc
lods
loope
lods
es
sub
push
inc
das
xor
adc
lcall
aaa
or
cmc
inc
subl
mov
fstl
incl
mov
loope
in
out
jmp
pop
push
stc
cs
adc
sbb
es
lcall
jb
jne
or
xor
into
push
inc
cltd
add
sbb
iret
out
xchg
incb
xchg
and
test
cwtl
mov
xchg
xchg
inc
leave
adcl
dec
test
outsb
xor
dec
adc
adc
ficompl
int3
cwtl
push
enter
jle
jbe
adc
dec
test
hlt
fiadds
cwtl
xlat
and
sbb
leave
jmp
and
add
fwait
das
sub
sbb
sub
xor
sbb
imul
cmp
gs
push
loope
push
frstor
sbb
rcll
sbb
push
call
adc
dec
imul
addr16
mov
sub
aad
xor
ljmp
or
cmpsb
xchg
lret
adc
lods
or
jp
popf
cmp
rcll
lcall
sbb
lcall
dec
mov
aaa
push
push
and
adc
test
std
andb
in
adc
jmp
mov
gs
cmp
xor
sbb
mov
stos
or
cmp
xchg
pop
jecxz
pushf
dec
out
pop
mov
jle
stc
cltd
push
imulb
int
out
stos
roll
sbb
in
fidivrl
movsb
xchg
ret
push
aas
add
test
add
cwtl
fs
inc
inc
sbb
bound
and
xchg
insb
negb
aaa
bound
shrb
enter
loop
sbb
pop
mov
loope
inc
inc
lret
or
dec
push
lcall
outsb
loope
xchg
cmp
sub
js
xor
scas
pop
out
rcll
rolb
mov
mov
outsb
add
push
outsl
sbb
fwait
shl
or
shlb
aam
shl
or
dec
dec
scas
shl
cs
pop
pop
inc
xor
jge
dec
pop
jo
adc
std
jl
cmpsb
ds
jae
adc
stos
push
stos
mov
pop
push
xchg
adc
mov
mov
scas
out
adc
out
leave
cmp
popa
in
adc
pushf
cmpsb
add
outsb
mov
test
xchg
clc
push
push
xchg
adc
sti
aam
inc
add
jmp
sbb
mov
dec
and
add
jmp
gs
push
ljmp
inc
push
xchg
pusha
out
or
jae
xchg
sub
addr16
cwtl
sarl
xchg
enter
cli
pop
and
xor
mov
add
cli
sub
or
pop
adc
in
push
xor
jge
xlat
cmpsl
mov
out
ficomps
cwtl
das
sbb
adc
mov
repz
jmp
mov
int
clc
out
sahf
lds
fstps
call
push
jge
inc
fsubr
stos
bound
bound
pop
cmc
cmpsb
jle
lret
adc
call
adc
push
sub
adc
add
pop
das
fwait
nop
jle
jle
adc
sub
addr16
xor
push
cmpsb
int3
or
add
sbb
aam
push
test
xchg
jmp
mov
popa
xchg
inc
pop
cwtl
mov
xchg
or
add
push
and
scas
adc
sbb
mov
icebp
shl
test
cmp
xor
sbb
sbb
fbld
out
pop
jns
adc
and
rorl
pop
stc
ficomps
cwtl
jmp
xchg
shl
push
adc
add
icebp
pop
mov
das
mov
sub
insb
cmp
jg
ss
jmpw
jmp
or
outsb
leave
stos
xchg
jl
sbb
pop
mov
out
mov
adc
movsb
hlt
pop
scas
pop
leave
xor
push
stos
jb
pop
sub
cli
push
adc
stc
iret
pushf
test
fidivs
or
push
aam
and
mov
cmp
sbb
mov
xor
sbb
test
inc
cwtl
repnz
adcb
cmp
outsb
nop
lahf
xor
pop
fwait
adc
dec
dec
popa
sub
pop
mov
outsb
ja
push
jmp
imul
in
insl
loop
insb
jecxz
scas
jns
xlat
add
add
mov
and
insb
adc
outsl
adc
daa
sbb
sbb
mov
add
mov
push
imul
out
mov
bound
or
inc
pop
pushf
movsl
pop
push
je
cmpsb
jle
stos
cli
cmp
out
mov
push
dec
add
gs
scas
sub
out
lret
outsl
adc
aas
dec
pop
rclb
adc
or
stos
jg
je
jne
dec
or
sti
inc
ja
pop
pop
push
pop
mov
xchg
cmpsl
or
rorb
pop
stos
sub
lds
out
sbb
in
insl
or
aaa
mov
jg
sub
sbb
cli
ljmp
push
gs
mov
cltd
aad
sub
cmpsb
ja
sbb
xor
ss
lock
ja
mov
cli
cmovp
fsubl
sbb
movsl
cmp
adc
fwait
dec
cli
scas
inc
lds
sbb
inc
sbb
arpl
stos
inc
mov
in
ret
sbb
pop
mov
push
push
xchg
cld
mov
gs
pop
fs
jmp
cld
mov
or
stc
cltd
or
repnz
pop
adc
call
or
rol
pop
push
sbb
jg
imul
push
imull
fiaddl
lea
mov
mov
cs
cmp
movsb
lss
cli
push
sbb
or
push
repz
xchg
xchg
mov
xor
cld
xor
xor
xor
out
jp
add
xor
add
scas
out
cmp
add
fs
cmp
sbb
adc
daa
dec
or
cmp
or
push
push
cwtl
sub
icebp
jb
pusha
xlat
inc
pop
adc
jp
dec
jle
sbb
ja
jb
pop
mov
sub
stc
sti
outsb
pop
xor
push
pop
lock
lock
mov
adc
xlat
push
xor
je
dec
and
inc
lret
js,pn
add
inc
and
add
loop
loopne
int3
out
lock
int3
or
dec
enter
mov
es
leave
enter
out
dec
push
out
push
cmp
cmpsb
scas
ljmp
fs
pushf
push
stos
sbb
mulb
lock
adc
and
pushf
scas
int3
cmp
adc
push
pop
loopne
clc
push
leave
imul
xchg
out
add
dec
mov
adc
xor
pop
push
imul
out
push
add
cld
cli
push
ja
mov
outsb
jne
add
xor
gs
jl
int3
ljmp
jl
and
rcll
dec
pop
cld
jne
xor
add
push
add
pop
shrb
sbb
out
cmpsb
mov
les
lret
or
jmp
or
cmp
out
out
cmp
mov
lret
mov
jecxz
adc
ret
pushw
xchg
xor
jbe
into
jl
jmp
cmp
sbb
lret
movsl
xchg
dec
jns
xchg
sbb
ss
mov
inc
test
jmp
sbb
cmp
xor
jg
pushf
into
add
adc
dec
mov
pop
xor
adc
stos
int3
xlat
push
notb
iret
push
cli
add
mov
sbb
push
mov
xor
pop
pop
jns
inc
lret
rol
inc
fwait
mov
xlat
inc
xchg
pop
mov
popf
shll
into
sub
es
fwait
inc
xor
lds
push
fiaddl
call
push
pop
or
pop
inc
rorl
xor
xlat
sbb
fstps
shrb
sbb
movl
int
adc
jp
sub
push
push
push
adc
sub
push
cli
out
mov
cmpb
gs
mov
lds
test
inc
mov
stc
dec
mov
adc
sbb
mov
aaa
inc
adc
dec
jp
rolb
jge
add
mov
adc
test
adc
cmpsb
pushf
push
push
pop
cmp
dec
je
sbb
xor
push
cmc
xorl
xchg
sub
xchg
xlat
adc
sbb
mov
adc
aas
adc
mov
call
add
std
subl
xlat
popa
std
sbb
ret
xor
stc
mov
xchg
arpl
sbb
or
jbe
ja
push
jno
adc
cmp
ljmp
mov
and
mov
das
leave
sbb
cld
push
gs
pop
sub
loope
adc
nop
mov
scas
jns,pt
lcall
jge
sub
add
fnsave
jbe
jno
mov
std
xchg
leave
add
cwtl
adc
dec
dec
in
or
adc
jle
fs
push
push
xor
stos
jle
jae
adc
stos
sbb
or
nop
lcall
outsl
clc
xchg
sub
xchg
call
inc
ds
jns
xchg
pop
xchg
popa
xor
test
sahf
std
mov
adc
cmp
sbbb
mov
sbb
mov
test
xchg
in
push
xorl
xor
xchg
adc
movsl
jg
cmpsl
cmc
sbbl
rcrl
xchg
push
cmpsl
pop
mov
add
loope
loop
inc
icebp
mov
scas
into
stc
mov
xor
out
cmp
gs
pop
lahf
pop
lock
xchg
repz
fsubl
adcl
rorl
pop
jl
outsb
push
mov
out
sbb
cmp
mov
xchg
mov
sub
sbb
fucom
inc
dec
out
push
pop
in
cs
stos
test
cmpsl
dec
cltd
push
sub
pop
insl
push
xor
std
jbe
stos
aad
nop
cli
outsl
stos
fnstenv
add
xchg
rorb
lods
testb
pop
std
and
clc
aas
sahf
in
gs
cli
mov
push
or
std
std
push
lahf
out
sbb
jg
stos
test
sbb
js
bnd
cli
aaa
xor
sbb
sub
aam
je,pn
push
add
add
adcb
or
pop
cmp
jb
xor
sub
ds
fs
lds
sbb
cmp
or
into
ljmp
or
push
jae
or
dec
jmp
in
cmp
shlb
mov
out
out
unpcklps
js
adc
mov
sub
rclb
fcompl
rolb
pusha
cmp
ja
cltd
cs
dec
mov
dec
lds
mov
mov
sbb
jae
sbb
adc
cmp
adc
ljmp
cwtl
adc
push
scas
lods
xlat
xchg
mov
mov
pop
fstps
movsl
test
adc
push
lods
shr
ljmp
inc
xchg
jnp
lods
xor
jle
lcall
insb
fcomp
lods
lahf
adc
adc
lods
scas
adc
adc
mov
mov
cmp
sbb
and
cld
leave
push
inc
adc
stos
adc
push
cld
xor
pop
sub
jne
pop
xchg
cmp
jo
cli
daa
jnp
mov
cmc
sbb
adc
sarl
repz
mov
push
mov
inc
xchg
pop
adc
adc
imul
and
data16
add
push
sub
jb
dec
or
adc
add
cmp
jae
mov
imul
inc
mov
out
stos
lods
mov
arpl
or
jne
mov
fcoml
xchg
imul
bound
inc
jae
adc
out
inc
je
sbb
insl
or
dec
test
out
add
sbb
and
fucomi
cmpsb
fs
add
sbb
inc
add
cltd
jo,pn
cli
or
fcmove
mov
sub
inc
push
sbb
mov
inc
mov
adc
sbb
xchg
lret
and
jo
cmp
out
fstpt
add
cmpsb
mov
add
add
xchg
push
sbb
push
xorl
lods
sub
stc
mov
cmpsl
mov
sbb
push
shll
pop
in
sqrtps
icebp
icebp
adc
mov
mov
enter
bound
aaa
int3
cmp
mov
sbb
mov
jl
jae
jl
sbb
je
aam
pop
loope
in
sahf
cmc
lock
pop
pop
cmp
mov
movsl
pop
icebp
or
inc
mov
cwtl
xchg
xor
jecxz
cmp
jl
pop
adc
cwtl
fstl
push
lcall
aaa
in
jg
rclb
sahf
aaa
pop
pop
jbe
adc
fnstenv
adc
adc
dec
subl
sub
inc
mov
es
push
and
pop
cli
mov
xor
cli
xor
adc
mov
sbb
sbb
sbb
pop
lret
fcomps
dec
mov
mov
sub
xchg
sbb
mov
xchg
adc
sbb
rcl
pop
ja
push
insb
push
addb
orb
out
fmul
nop
aad
int
lcall
xchg
jecxz
xchg
xchg
cmpsl
mov
cltd
mov
mov
nop
out
and
out
out
in
pop
mov
test
stos
push
cmp
fs
rcrl
rcrl
jge
jb
add
push
fldl2t
dec
fstpl
rorb
mov
push
out
in
pushf
push
sub
leave
inc
cli
dec
mov
jne
dec
mov
or
mov
sbb
mov
popf
sbb
push
orw
cmpl
xchg
imul
rcll
sbb
cmpsl
pop
pop
push
sbb
shl
push
int3
int3
sub
imul
mov
adc
mov
mov
loope
pop
inc
and
popa
fsub
inc
pop
cmp
int
push
ficoml
lea
or
add
enter
mov
incl
mov
mov
push
mov
mov
aam
mov
mov
xor
push
inc
test
aam
loopw
mov
int
in
imul
arpl
push
push
mov
or
movsb
sahf
xor
sbb
add
out
push
fmuls
xchg
or
hlt
ret
xor
roll
mov
cmp
sub
test
movsl
mov
sbb
lods
mov
aas
sbb
add
sbb
adc
leave
cli
mov
push
sbb
add
ja
pusha
dec
test
shrl
ja
sub
loopne
in
fwait
adc
scas
sarb
pop
pop
imul
lcall
insl
add
sub
fwait
sbb
sbb
clc
lcall
scas
nop
lds
pop
xchg
fsubr
push
xchg
fsubs
adc
add
and
xchg
or
and
push
mov
mov
and
inc
std
mov
cmc
rclb
mov
or
inc
add
mov
mov
dec
mov
xor
sub
arpl
and
nop
repz
add
adc
push
xor
inc
dec
xchg
aad
lcall
mulb
cmp
out
je
ja
js
pop
outsl
xor
pusha
jns
push
mov
add
cmpsb
pop
mov
pop
pop
sub
jmp
or
ss
mov
aaa
push
fs
gs
cmpsb
in
aad
push
daa
mov
call
jnp
add
in
mov
dec
jecxz
mov
aas
leave
mov
mov
fisubrs
leave
and
std
inc
mov
int
sub
cli
cmp
out
es
fwait
dec
es
cmp
arpl
push
cltd
push
out
fwait
adc
mov
out
pop
out
fisubl
xlat
adc
cmp
push
xchg
add
bnd
pushw
or
loopne
das
shll
jne
adc
sbb
jbe
mov
sub
icebp
movl
int
sbb
cmc
ja
adc
cmpsb
cmp
jmp
rcl
stc
sbb
mov
mov
lods
cli
enter
pop
jge
stos
add
adc
into
sbb
push
pop
push
add
mov
dec
test
jecxz
mov
or
enter
add
out
push
xchg
sbb
adc
sub
test
iret
add
shll
sub
cmp
pop
pop
add
scas
dec
dec
mov
xchg
sub
ds
adc
fs
in
jg
loopne
aas
jnp
push
sub
or
fiaddl
sbb
adc
jmp
pop
fs
imul
pop
pop
xor
and
loope
arpl
mov
or
dec
lret
cwtl
cmpsl
push
pop
pop
pop
xchg
pop
stos
or
lds
rclb
ds
or
mov
lds
stos
push
or
cmc
mov
add
stos
pop
outsb
pop
push
pop
jne
cmc
or
or
subl
sub
jns
dec
jecxz
sti
rol
test
push
mov
leave
leave
test
xor
popf
call
cs
sbbl
xor
cmp
test
test
push
and
daa
out
xor
addr16
xor
stos
rcll
hlt
xor
int
xor
aad
pop
mov
adc
das
xorl
stc
jmp
pop
push
inc
jmp
nop
pop
push
test
mov
xchg
cmp
xor
add
and
sbb
fcoml
addr16
shrl
fucom
jb
jl
dec
add
jne,pt
mov
jne
enter
xor
adc
sbb
pop
jns
sbb
jns
xor
inc
pop
adc
mov
xor
sub
fs
xchg
sub
loop
orl
fdivrl
or
pop
es
dec
loope
dec
push
rcrl
sbb
std
adc
cmpsl
jmp
lret
in
cmpsl
jnp
test
dec
xchg
push
pop
test
add
add
movsl
xor
jne
mov
inc
pushf
addl
adc
pusha
shlb
sbb
add
pop
adc
rclb
dec
adc
mov
int3
test
hlt
ljmp
in
push
test
int
mov
leave
mov
dec
mov
pop
rorl
cmc
add
mov
out
adc
push
arpl
popa
jo
je
imul
sahf
sbb
jl
stos
ss
mov
adc
push
popa
lea
icebp
mov
pop
popf
push
loope
push
xor
pop
jns
lods
mov
jp
jne
orl
fsubl
push
inc
sub
push
and
dec
ret
xor
add
ret
push
or
mov
pop
push
in
in
std
push
mov
ret
cmc
push
leave
int
lds
movsl
fisttpll
aad
sbb
fdivr
and
rcrl
cmc
mov
push
mov
adc
jmp
pop
daa
ss
mov
mov
mov
mov
mov
xorl
mov
cltd
and
sbb
mov
ret
sbb
popa
sbb
jge
jns
enter
jne
mov
mov
movsl
dec
ja
adc
add
pop
leave
mov
pop
daa
ss
dec
movsl
push
loope
enter
sub
jne
mov
and
movsl
xor
fdiv
or
and
add
xor
test
insb
adc
arpl
int3
and
and
adc
cmp
sbb
cmp
pusha
mov
xor
fcompl
mov
sbb
out
lock
test
and
test
jne
pop
inc
das
or
fsts
rcl
mov
adc
mov
test
pop
xchg
imul
xchg
mov
add
lsl
mov
push
pop
or
test
jno
arpl
sbb
aad
push
jg
dec
xlat
push
stos
cmp
xchg
mov
loope
xor
enter
push
xchg
and
rcrl
imul
arpl
arpl
mov
mov
fcomps
lea
mov
in
xchg
in
xchg
stc
jno
xor
loop
cltd
cmc
fstps
mov
adc
dec
sub
inc
arpl
stos
hlt
cmp
dec
gs
mov
dec
sbb
inc
sbb
je
dec
jne
sub
lock
push
add
jne
or
arpl
lods
sbb
cwtl
es
fstps
push
add
nop
lods
add
js
dec
rclb
fwait
out
fucomp
adc
inc
je
pop
jle
push
jle
jg
mov
or
dec
cmc
adc
adc
mov
jge
cmp
rcll
mov
sub
sub
adc
fwait
cmp
cmpl
adcl
jo
fisttpl
adc
adc
or
or
std
adc
sbb
xor
xchg
push
popf
add
fadds
addb
push
bound
xor
cmpb
jne
sbb
xchg
test
test
test
jp
pushf
push
push
xchg
sub
push
push
inc
fidivl
sbb
arpl
aam
mov
ret
xchg
sub
or
cmpsl
add
movsb
inc
rolb
pop
test
push
leave
sbb
add
jnp
dec
adc
popa
push
mov
out
repnz
outsb
lcall
insb
and
insl
lret
stos
add
adc
movsb
adc
aas
movsl
sbb
dec
add
lcall
sub
jmp
push
xor
adc
adc
jmp
imul
rorl
lcall
dec
mov
loope
lcall
sbb
mov
sbb
sbb
lods
jmp
sub
fs
mov
pushf
movsb
add
insb
in
dec
cmp
sub
outsb
mov
adc
lcall
add
int
testl
push
sub
lret
fwait
dec
mov
or
xor
add
inc
add
sbb
add
inc
lcall
jmp
outsb
aas
and
inc
sbb
add
xor
add
es
fcomp
addb
mov
xor
stc
jno
das
adc
fs
inc
push
insb
push
movsl
jge
lds
push
add
testl
adc
adc
addr16
roll
push
das
push
rcrb
ss
push
call
mov
cmp
or
nop
test
xchg
mov
bound
cli
lcall
ficompl
outsb
sub
stos
loopne
mov
xor
push
jns
pop
jp
out
xor
cld
mov
shll
xor
jmp
or
dec
loope
push
and
xchg
rcll
or
jp
push
int
xor
rep
minps
std
lret
jo
data16
rcll
shlb
xorl
sahf
fwait
cs
cmp
rorl
pop
leave
nop
imul
jne
mov
gs
xor
dec
lret
mov
adc
cmpsb
int
in
mov
or
add
les
ja
loope
js
jnp
mov
stos
cmpsb
fnstcw
dec
push
pushf
enter
jnp
dec
subps
stc
lret
xchg
enter
xor
adc
cmc
insb
xor
imul
cltd
sub
push
cmpsb
jns
insb
pop
jne
sbb
xor
xchg
jne
aad
rol
sub
or
cmp
lcall
inc
rorb
int
push
in
sbb
sub
or
ret
in
mov
sub
fwait
push
sbb
aad
jmp
cwtl
pop
sbb
jnp
sbb
stos
in
fwait
sti
xor
xchg
out
sub
inc
sti
dec
cmp
adc
cltd
fwait
cmpsl
fwait
push
mov
shlb
out
addb
lret
arpl
gs
cli
add
adc
push
call
inc
sbb
mull
jo
setp
xchg
mov
pop
sti
sbb
ljmp
push
lcall
xor
mov
stos
sub
xchg
test
adc
lea
dec
sbb
loopne
cli
xchg
and
sbb
adc
xchg
pop
xchg
cli
mov
push
inc
pop
jnp
mov
movsl
enter
sbb
shlb
jecxz
in
rorl
sub
out
sbb
nop
sbb
mov
xor
push
cmpsb
add
pop
adc
or
jns
push
xor
lea
movsb
icebp
adc
push
sbb
gs
adc
add
jl
pop
sbb
add
jmp
mov
push
pop
mov
data16
dec
add
sub
push
push
daa
or
adc
and
repz
xlat
jmp
movl
test
out
jge
in
cmp
cmp
add
icebp
lret
daa
add
adc
aam
pop
cmp
add
lret
add
mov
notl
adc
mov
pop
xchg
pop
jmp
dec
popf
mov
mov
in
xor
clc
jecxz
icebp
int
pop
in
mov
in
fwait
arpl
movsb
and
pop
xchg
jae
rep
in
inc
mov
rcr
cwtl
cmp
std
rclb
cmc
sub
mov
imul
xor
cmp
pop
dec
mov
add
rcr
cmpsl
shrl
adc
xchg
orl
shlb
js
pop
rorb
lds
xor
ds
cmp
mov
mov
mov
jno
insb
movsb
xlat
sbb
dec
mov
dec
arpl
popf
fcmovnbe
pop
dec
adc
mov
cwtl
sarb
sbb
jne
aam
fwait
sbb
xor
sbb
mov
cltd
pushf
sbb
inc
aam
sub
adc
push
xor
jbe
dec
std
mov
adc
sbb
sti
sbb
ss
mov
jns
or
xchg
xor
inc
push
add
xor
test
xchg
daa
or
test
fisttpll
jge
pop
inc
insb
nop
or
sbb
ret
les
add
mov
adc
imul
xor
xchg
xor
sarl
sbb
hlt
js
or
shrb
add
cltd
inc
mov
test
rcrl
cwtl
or
int
or
out
sti
cmp
pop
cwtl
sub
fs
or
jbe
ja
cmp
xchg
lods
lock
sbb
xor
sarb
jae
mov
sub
mov
sbb
rcrl
ds
push
aas
inc
and
push
pop
pop
push
xor
push
cwtl
popf
sahf
out
xlat
push
mov
imul
int
cwtl
shll
add
mov
or
arpl
adc
insb
sbb
sbb
and
pop
lret
adc
daa
pop
cmp
xor
push
pushl
cmc
in
mov
sahf
or
cli
push
push
movsl
mov
filds
loopne
cmp
insb
cmpsb
mov
cmc
push
lea
sbb
or
popf
or
pop
fwait
aaa
cmp
inc
or
lahf
pop
mov
add
mov
cs
rcll
or
lods
jae
mov
sub
adc
nop
add
or
cmp
dec
dec
cmp
cwtl
push
cltd
sub
mov
add
enter
pop
xchg
push
dec
xchg
sbbl
pop
loop
loope
push
inc
les
cs
rclb
adc
push
jb
lock
stos
cmp
mov
lcall
push
xchg
sbb
mov
out
repnz
push
xchg
push
int
add
mov
sti
adc
fstl
xchg
mov
cmp
out
adc
jne
push
lods
adc
jl
add
xor
cmp
negb
lret
out
pop
xchg
fsubp
push
out
sbb
push
push
pop
sub
mov
test
shrb
add
add
lods
test
addl
or
mov
test
sub
and
inc
xor
aas
lds
cmp
mov
push
adc
push
dec
sbb
inc
adc
dec
adc
rcll
adc
mov
push
mov
je
enter
adc
jle
adc
cmp
pop
add
cmc
or
out
mov
nop
mov
andl
push
adc
mov
push
test
and
lds
out
imul
call
jmp
adc
popf
leave
adc
push
dec
pop
pop
in
das
aam
decb
lds
sub
inc
sbb
loope
cmc
stos
loope
cmpsl
out
filds
add
adc
adc
push
mov
rcrl
movsl
icebp
xchg
jmp
imul
mov
cmpb
adc
sbb
mov
mov
sarb
test
xor
rcrl
shl
cmp
xlat
mov
cmpsl
sbb
loope
ret
xchg
insb
mov
inc
adc
fbstp
sub
xchg
mov
in
call
cwtl
mov
lcall
xlat
mov
inc
lea
xchg
loop
roll
add
fwait
jl
or
stos
loop
inc
hlt
leave
dec
ficompl
push
std
inc
pushf
sbb
adc
outsl
push
sbbl
ja
jge
pop
or
popa
add
adc
inc
pop
sbb
push
test
mov
dec
imul
and
xchg
adc
jns
js
sbb
mov
push
pop
mov
dec
push
pushf
xor
cmp
rorl
ds
cmp
dec
test
loopne
into
cmc
mov
sbb
pusha
xor
dec
test
jno
cmp
mov
dec
cwtl
xor
cltd
test
stc
lcall
inc
cld
jo
pop
mov
push
jae
push
stos
or
cli
add
cmp
loope
pop
in
cmc
inc
and
mov
leave
jnp
daa
lret
mov
sub
leave
mov
popf
xchg
xchg
daa
jns
push
mov
add
lahf
in
mov
xor
push
pop
outsb
mov
loop
jge
in
mov
ret
adc
arpl
sub
enter
pop
loope
inc
xchg
inc
repnz
psrlq
mov
cmp
or
add
push
cmc
test
fadds
rcll
pusha
xchg
mov
jo
gs
fistps
lds
jecxz
xchg
mov
push
ja
push
pop
jns
ret
sub
or
leave
inc
gs
push
movsl
into
lahf
and
add
aaa
or
cmpl
sub
or
lock
adc
sbb
add
xlat
int3
test
and
push
cmp
push
sahf
lret
and
fcom
or
and
and
loopne
sub
pusha
mov
add
repnz
cmp
jb
out
lds
xor
jns
and
shrl
cmpl
aad
sbb
sbb
mov
dec
ja
jmp
jns
push
sbb
jo
sub
imul
sub
rcl
pop
adc
mov
pop
into
or
mov
xor
push
xchg
xor
mov
stos
sbb
lds
stc
xchg
ds
push
dec
inc
push
inc
pop
inc
inc
push
push
inc
push
rorb
jb
xor
gs
xor
xor
jl
mov
jge
xchg
pop
adc
dec
aaa
ret
iret
decl
aas
je
aas
jb,pt
inc
lret
sbb
push
push
jl
jo
cmpsb
adc
push
xor
adc
out
ss
add
rcll
adc
add
or
out
out
int3
inc
xorb
fcmovu
fcompp
lret
enter
iret
stos
push
jo
into
icebp
lock
hlt
sub
out
in
gs
cmp
adc
xor
icebp
out
into
adc
and
and
and
sub
push
push
push
push
icebp
enter
rorl
xor
mov
movsb
outsb
adc
xchg
push
xor
adc
scas
pop
adc
stc
sbb
pop
adc
pop
xor
and
push
pop
and
dec
jno
popa
ret
ret
cltd
orl
rcr
and
leave
icebp
stc
loope
mov
adc
add
js
mov
cmp
sub
mov
adc
je
adcl
pop
sub
mov
test
jge
xor
or
addl
test
dec
rclb
das
push
dec
inc
push
not
rcrb
xchg
insl
sub
lcall
xor
pop
sbb
cs
stc
pop
push
dec
or
or
xor
mov
roll
daa
push
adc
rcrl
shll
sbb
adc
dec
jbe
inc
pop
adc
fildll
xchg
pop
sbb
push
fildll
mov
and
jbe
push
mov
fdivp
pop
std
dec
sub
adcl
shll
mov
xor
push
mov
push
pop
add
sub
sub
jbe
rcrl
lods
jg
cmp
pop
lods
sahf
or
fldcw
clc
fucomip
dec
jno
cmp
sbb
pop
stos
mov
push
push
add
pop
sub
mov
data16
xchg
xor
push
xor
xor
inc
push
jo
icebp
push
adc
or
loope
xchg
adc
xchg
adc
push
out
fcoml
inc
sbb
inc
adc
dec
adc
sbb
inc
add
bound
or
pop
adc
push
add
add
push
cltd
sbb
push
pop
adc
jg
out
push
adc
js
jne
jo
push
adc
dec
int3
insl
cmp
push
jg
ss
adc
sbb
test
sbb
jo
arpl
jo
mull
ds
cmp
add
insb
not
das
pop
jb
bound
cmp
pop
jge
mov
jb
dec
daa
out
data16
jge
adc
adc
and
enter
or
jle
popa
jg
pop
and
cmp
cli
mov
jl
arpl
cmpsl
jne
adc
dec
fidivrl
jno
cli
adc
cmp
add
xchg
push
arpl
cmpsb
add
mov
add
inc
push
andb
ja
pusha
push
or
inc
je
jp
js
popa
mov
pushf
jg
add
mov
adc
push
sbb
gs
lahf
enter
and
push
add
fisubrl
add
jb
bswap
bound
adc
push
pop
adc
mov
je
mov
std
lock
jle
pop
es
mov
jl
sub
push
push
jge
rclb
bound
sbb
add
rclb
sbb
add
push
cmpsl
out
mov
mov
insl
push
jge
jbe
add
pop
or
adc
jg
jp
push
es
adc
xchg
push
push
xchg
test
sbb
adc
loopne
fnstenv
cli
sbb
loop
push
daa
je
jge
insb
fs
out
out
rorb
adc
addr16
jge
lods
leave
pop
lods
xor
je
and
lea
gs
or
inc
inc
daa
out
scas
xor
sbb
arpl
lock
arpl
inc
and
movsl
push
push
gs
inc
push
out
cmp
adc
int
mov
cmp
ja
jle
pop
sbbb
negl
push
add
adc
test
insb
jp
jbe
fdivrs
push
je
xchg
jns
lcall
push
cmp
push
cmp
int3
adc
mov
push
loope
int3
xor
push
pop
insb
jge
cmp
out
int
xor
cmp
fnstenv
pop
jl
fs
ss
cmp
ss
push
xor
arpl
or
mov
mov
sub
push
or
fiadds
xchg
jg
sbb
sbb
xor
icebp
scas
xor
cmpb
mov
jo
mov
push
in
cmpl
and
js
xchg
pop
repnz
jb
push
out
lock
add
mov
jo
sub
es
and
lods
pop
ret
lcallw
mov
arpl
cmp
xor
gs
inc
test
jbe
xlat
popf
sbb
lods
adc
adc
jb
in
fdivs
insl
jle
push
adc
add
popa
sbb
sbb
shlb
insb
xchg
and
push
jl
test
push
lock
out
add
jae
sbb
dec
or
push
pushf
inc
ja
push
movl
dec
xchg
and
xchg
add
adc
sbb
adc
sub
pop
mov
push
sbb
cmp
add
js
imul
pop
pop
pop
sub
sbb
ret
or
ja
cmp
xchg
adc
xor
push
cmp
loopne
add
shll
add
insb
sbb
dec
ljmp
cmc
push
in
je
cs
push
lret
push
sar
mov
js
jp
ljmp
jg
xorb
jo
pusha
popa
cmp
cs
lods
xor
pop
data16
in
fwait
int
add
inc
mov
xor
enter
scas
xor
add
push
sbb
cmp
push
and
push
cs
lahf
cmp
je
mov
and
push
maxps
out
out
out
mov
sbb
call
roll
xchg
or
ja
inc
lods
push
out
out
sahf
xor
push
insl
sbb
xlat
test
mov
out
out
out
pusha
pushf
gs
stos
or
sub
fidivs
add
xchg
mov
push
cmpsl
sbb
out
out
out
out
and
mov
test
mov
xchg
mov
sti
lea
mov
fldz
out
out
out
jbe
jmp
ret
dec
jle
sti
bound
aad
cmp
sub
sub
out
out
out
out
fistl
jle
fcomps
ja
jae
sub
and
lock
push
xchg
out
out
out
out
or
add
mov
add
cwtl
push
cmpl
sbb
mov
out
jle
out
jbe
jns
gs
add
mov
stos
xor
adc
jae
outsl
push
out
out
out
out
and
sbb
fstpl
and
pusha
pop
dec
addl
adc
out
push
push
lods
sti
xchg
test
out
sbb
test
in
mov
sbb
fsubp
hlt
mov
cltd
xor
movsb
push
xor
das
push
mov
dec
aaa
cmp
aad
mov
or
dec
nop
hlt
addr16
cmp
inc
adc
mov
enter
out
scas
in
out
out
test
mov
dec
push
lea
out
push
sahf
mov
mov
scas
fisttps
sub
or
jae
mov
in
rcr
dec
cltd
mov
adc
lcall
xor
dec
fcompl
pop
cmp
adc
rolb
repnz
adc
jp
cli
pop
cltd
cmp
out
out
out
imul
das
fcompl
iret
insb
outsl
loope
mov
out
pop
mov
out
out
out
out
sbb
mov
dec
inc
fbstp
sub
cmp
mov
and
out
out
out
out
loop
xor
add
bt
sub
ljmp
mov
dec
hlt
inc
inc
out
outsb
xor
neg
lods
ds
xor
in
out
and
and
sub
push
inc
xor
les
cwtl
dec
int
test
xchg
inc
and
out
out
out
sahf
xor
lods
daa
inc
xor
lahf
js
xorb
add
bound
pusha
fdivs
out
out
out
out
lahf
scas
push
pop
jge
or
daa
std
ds
mov
scas
cmp
leave
out
out
xor
sub
mov
jnp
sbb
leave
inc
mov
push
out
out
out
out
dec
and
movsb
outsb
push
or
sub
xchg
aaa
out
inc
scas
add
movsl
out
out
out
out
jmp
movsl
pusha
xchg
sbb
and
sbb
push
pop
dec
out
inc
aad
sbb
out
out
repz
or
xor
clc
popa
stos
pop
out
adc
jbe
icebp
push
pop
cmp
andl
mov
out
out
pop
jmp
sbb
jmp
add
loope
adc
mov
dec
xchg
test
pop
pop
fiadds
out
sbb
fnstcw
push
je
rcl
lods
add
push
daa
push
pusha
cltd
cmp
or
out
out
out
out
test
shrl
in
xchg
jp
nop
inc
or
sbb
out
es
out
adc
testb
xor
hlt
add
jecxz
es
xchg
inc
ret
mov
fldcw
or
daa
pop
jge
pop
testl
xlat
aam
outsl
cwtl
or
ficoms
jg
out
out
mov
ds
or
lds
push
stos
adc
sbb
out
out
out
out
iret
int3
ds
sbb
sbb
jp
repz
fcmovnu
inc
jae
push
mov
fidivrs
lea
lea
out
out
out
mov
je
in
pop
push
xchg
bound
imul
pop
sub
sub
adc
out
out
out
jg
rcr
sub
xchg
push
icebp
inc
in
cmp
jno
out
cmp
xchg
lods
mov
outsb
mov
cmpsb
fistl
fiadds
inc
aad
test
in
dec
ss
out
out
out
cmp
hlt
out
xchg
fisubl
lcall
rcl
jl
inc
pop
cmp
out
out
out
out
and
pusha
sbbl
cwtl
test
sti
or
and
cli
pop
clc
lcall
jle
out
out
mov
or
lcall
in
mov
adc
andl
cmpsb
pop
das
xchg
pop
mov
test
into
mov
push
inc
imul
out
scas
jns
ror
aam
and
push
push
xor
enter
mov
pop
pushf
inc
lahf
or
fdivl
jmp
push
stos
sahf
imul
add
add
lock
les
out
out
enter
xchg
cmp
mov
jle
andb
sub
out
out
into
and
sub
inc
xlat
ret
mov
inc
xchg
fstpl
add
repz
adc
fsubrp
out
into
jmp
dec
mov
cmp
cltd
or
or
ja
push
jne
enter
out
out
out
data16
mov
mov
pop
xorb
jae
push
xor
or
xchg
out
out
inc
out
lock
mov
xchg
rol
adc
pop
pop
adcb
stc
mov
loopne
pop
in
out
out
fdivp
ret
movsl
fadds
in
addr16
loop
push
nop
mov
jb
and
es
out
out
out
scas
and
xor
imul
insb
mov
imul
inc
mov
or
out
out
out
sub
inc
pop
lcall
mov
and
cmp
in
and
dec
out
out
out
out
xchg
fwait
mov
push
or
pushf
mov
jl
stos
out
jae
stos
pop
lahf
jns
inc
mov
cmp
icebp
adc
out
jbe
shrb
cmp
popa
push
pop
jg
pop
push
pop
out
out
scas
in
mov
lahf
push
mov
sahf
pusha
test
insb
or
jns
stos
pop
inc
xchg
out
out
out
out
cmp
stos
xchg
jmp
mov
mov
jp
jl
imul
xchg
xor
scas
shr
nop
add
add
xor
jecxz
mov
in
scas
test
and
dec
andl
lds
pop
push
jae
js
clc
mov
test
repz
ficoml
hlt
out
out
outsb
nop
aas
inc
jno
mov
sbb
rolb
icebp
je
xor
mov
out
add
mov
sbb
stos
jmp
andb
sti
shr
out
outsb
lock
mov
add
sbb
push
dec
and
push
inc
xchg
mov
xor
inc
out
into
icebp
out
sub
jno
out
mov
jl
cmp
ja,pn
mov
rcll
out
out
out
out
in
add
mov
ja
or
or
add
ficomps
jg
out
out
out
xchg
pop
xor
mov
js
push
cmp
ret
xchg
scas
mov
jo
mov
hlt
aam
sbb
sbb
mov
int3
jne
stos
mov
cmc
ret
or
out
dec
lcall
mov
out
jo
mov
mov
or
mov
icebp
fidivs
adc
out
out
out
adc
adc
fisubrs
mov
adcb
loope
inc
out
out
out
ret
jb
jg
stos
cmpsb
fildll
mov
mov
push
or
out
out
out
in
lahf
les
sbb
aad
outsl
xchg
cld
inc
addb
xlat
push
jmp
jle
out
jle
out
push
gs
lock
xchg
xchg
iret
cmp
sti
popf
dec
mov
out
loopne,pt
or
std
rcll
xchg
pop
xor
sub
xchg
add
leave
out
out
out
out
test
pop
xchg
mov
pop
inc
and
dec
push
jns
arpl
fidivrs
out
out
out
adcl
shll
add
fcomip
cmp
push
and
or
adc
adc
outsl
out
dec
jmp
outsb
stc
sub
movsl
push
mov
dec
in
cmp
dec
cmp
dec
mov
add
in
out
sbb
popa
dec
add
or
insl
mov
out
out
repz
outsb
sub
mov
push
pop
sbb
loope
movsb
scas
pop
jg
inc
push
mov
jmp
in
cmp
dec
push
xchg
xor
sub
out
out
pop
xchg
xchg
out
jmp
movsl
imul
aas
xchg
out
ds
pop
nop
call
pop
out
mov
in
adc
xchg
out
into
sti
adc
es
sbb
dec
pop
mov
jns
out
out
out
push
inc
xchg
mov
mov
mov
add
push
push
push
aam
mov
fisubs
stos
mov
xor
push
pop
pop
ljmp
dec
sub
lret
outsb
stos
movsl
lods
sub
aam
outsb
ret
setle
push
sub
jmp
clc
imulb
mov
jb
dec
mov
jle
and
xor
notb
out
out
out
jg
xchg
ss
lcall
cmp
push
xor
popf
gs
xchg
sahf
lds
fsubr
out
out
out
sub
cli
movsl
hlt
mov
sub
jp
mov
test
push
dec
outsb
push
sbb
test
out
out
pop
andb
lret
inc
or
push
mov
xor
sahf
lret
shlb
out
sbb
push
je
mov
js
xchg
or
gs
adc
push
mov
push
pushf
and
int
out
out
out
arpl
in
test
xchg
notl
into
enter
test
scas
shr
test
inc
movsb
push
push
bound
pop
jb
or
add
dec
lret
leave
out
out
out
dec
pop
shl
repnz
mov
movsl
sub
inc
rcr
and
or
add
out
shll
or
out
mov
xchg
out
test
or
xchg
mov
cltd
fadd
test
lcall
loope
push
int
or
scas
xchg
xor
out
xlat
addb
pop
les
out
test
aaa
dec
fsubrs
lret
les
lea
imul
pop
push
mov
outsb
je
out
out
out
out
ljmp
outsl
sbb
add
loope
sahf
aas
pop
fnstenv
loope
pop
push
aaa
xchg
out
dec
icebp
out
jno
inc
hlt
pushf
mov
lods
insl
pop
xchg
xchg
outsl
mov
adcb
inc
jnp
dec
pop
xor
lcall
in
jo
pop
mov
into
sti
out
out
js
into
out
push
push
mov
insb
shl
inc
mov
rclb
out
out
out
sahf
mov
xor
pop
push
scas
in
mov
std
mov
xchg
and
sbb
sbb
andnps
std
arpl
pop
lods
imul
lahf
dec
xchg
or
and
dec
inc
out
inc
dec
daa
mov
es
out
xlat
movsb
int3
jmp
out
cmp
test
xchg
xor
out
scas
in
ds
lret
sbb
mov
sub
fwait
inc
mulb
inc
lcall
lret
jg
movsb
xor
nop
out
out
out
add
lea
icebp
and
push
fdivrl
mov
xchg
jns
out
out
out
cmpsb
mov
fs
cmpsb
inc
dec
mov
fdivl
sbb
or
cmp
jle
out
sbb
pop
aad
or
jbe
seto
pop
jl
jmp
dec
sub
out
out
out
sahf
inc
add
imul
shrb
ja
int3
cwtl
jle
pop
sar
mov
push
out
sub
mov
pusha
cmpsl
add
jecxz
pusha
sahf
adc
and
in
out
popa
ja
mulb
inc
cmp
lcall
pop
adc
or
out
xchg
out
mov
sub
cmp
outsl
clc
js
push
fcom
push
jp
nop
jb
loope
out
adc
out
les
xchg
jle
int3
incl
push
xchg
cmpsb
sub
sbb
scas
pushf
arpl
cmpsl
and
fisubrl
or
mulb
jbe
or
mov
mov
cmc
enter
daa
in
or
pop
lock
pusha
out
out
jle
sub
and
fadds
scas
mov
pop
mov
inc
out
out
out
out
repz
stc
pop
add
push
jl
and
inc
es
jbe
dec
jecxz
push
pop
mov
cwtl
out
rcl
adc
ficomps
insb
push
inc
add
scas
sub
cwtl
out
out
dec
xchg
into
pop
cmp
add
repz
or
xchg
and
push
inc
fwait
inc
jbe
enter
into
ret
in
cmp
mov
mov
out
out
sti
sbb
xor
cmp
lods
sbb
mov
pop
xor
je
rorl
sbb
in
push
cmp
cmp
inc
jno
xchg
adc
adc
mov
out
jnp
mov
cmpsb
mov
aam
pop
push
js
test
addb
ds
jb
lret
pop
inc
inc
dec
ret
int
dec
out
jle
loopne
arpl
loopne
sbb
push
test
lds
mov
scas
aam
ficompl
in
jnp
mov
xchg
movsb
out
mov
jns
bound
in
out
out
xchg
gs
dec
sbb
sbb
jnp
push
negl
mov
es
cwtl
push
pop
jns
scas
stos
movsb
popf
and
sub
mov
pushf
mov
aam
movsb
pop
jmp
jecxz
enter
inc
arpl
call
loopne
and
icebp
sub
inc
inc
sub
xor
out
xor
mov
ljmp
push
or
inc
and
push
xor
mov
popf
out
inc
idivb
call
mov
call
aaa
popf
jecxz
xor
scas
xchg
fisubrl
pop
jg
arpl
adcb
repz
sahf
cmc
out
test
jae
fnstsw
lock
or
movsb
dec
out
outsb
test
out
fucom
fisubl
sbb
push
inc
sub
mul
adc
pop
lea
clc
mov
sbb
jl
mov
out
push
jecxz
push
cmc
mov
xchg
jno
pop
push
mov
adc
dec
add
out
out
pop
fstps
sahf
ret
jecxz
mov
ret
mov
mov
call
rolb
add
rorb
fsubr
out
and
mov
mov
add
and
push
std
or
call
adc
dec
sub
outsb
test
out
insb
jecxz
cli
ljmp
popa
inc
pop
test
pop
cmc
out
out
out
mov
test
icebp
cltd
push
hlt
mov
mov
mov
xor
ss
xchg
repnz
push
cmc
xor
push
sahf
cmc
out
outsb
sbb
outsl
xchg
pop
sbb
test
mov
push
lods
mov
in
out
sti
in
rol
fsin
push
imul
pop
out
out
xor
adc
push
sub
out
mov
test
mov
out
push
fsubr
daa
lcall
hlt
mov
test
fcompl
out
xor
stos
test
mov
xchg
sbb
shlb
test
rolb
in
out
push
xor
mov
sub
insl
js
xor
int3
imul
jge
loope
push
sti
cmpsl
pusha
sbb
jno
sub
inc
pop
adc
cltd
cltd
and
lret
imul
test
aas
push
mov
jnp
xchg
mov
add
dec
stos
clc
cs
out
out
jnp
and
je
cmp
or
xchg
sbb
pushf
push
out
push
jecxz
stc
mov
es
jae
fdivrp
imul
aad
adc
jmp
pop
out
sahf
pop
push
or
xor
sbb
xorl
dec
icebp
mov
and
fsin
int3
and
xchg
xorl
out
mov
aam
repz
mov
lea
fdiv
mov
cmp
or
mov
cmpsb
int
prefetchw
in
out
sahf
js
repz
cmpsb
and
pop
repz
lret
outsb
stos
cs
cli
add
call
inc
mov
adc
stos
cmp
add
add
out
or
fwait
hlt
arpl
aaa
pop
add
out
xor
out
fcoml
clc
and
mov
or
scas
xchg
pushf
adc
mov
out
outsb
xor
mov
aam
arpl
fucom
jae
mov
xchg
ljmp
mov
out
sahf
cmc
mov
stos
fs
data16
cld
adc
movb
outsb
test
lods
cli
push
sub
addb
loop
flds
pushf
jb
in
out
sahf
lds
decl
mov
or
outsl
cmp
push
enter
enter
xlat
test
out
out
scas
mov
data16
push
fiaddl
fsubr
mov
and
pop
xchg
bound
shll
jb
xchg
scas
rcll
pop
dec
stc
mull
lods
add
movsl
pop
mov
jle
out
out
cmpsb
add
popa
xchg
js
leave
push
jle
mov
scas
test
popf
outsl
inc
fistpl
idivb
out
out
inc
sub
hlt
cmp
rclb
movsb
ret
es
in
mov
xchg
dec
scas
push
in
pop
inc
push
out
out
sbb
sbb
push
cld
mov
inc
out
clc
pop
pop
hlt
add
aas
mov
out
outsb
nop
out
ficoml
test
jge
jbe
fstl
push
scas
push
arpl
out
mov
test
xchg
sbb
pop
ja
jmp
in
cmp
jge
clc
sbb
pop
in
out
out
scas
inc
addr16
sub
xorl
cmp
lods
out
out
inc
or
mov
rcr
adc
push
cmc
and
add
ds
out
out
stos
push
icebp
adc
mov
in
pop
jno
inc
dec
inc
aam
cwtl
jbe
dec
aas
mov
out
out
mov
adc
clc
ret
ja
push
cmp
leave
loopne
mov
mov
or
out
out
dec
out
mov
mov
insl
pop
popa
sbb
cmpsb
movsl
mov
mov
sbb
jle
xchg
out
xchg
call
push
jmp
adc
xchg
out
cmpsl
imul
test
aaa
inc
dec
add
sub
out
outsb
cli
out
jmp
pop
and
mov
nop
sbb
push
aad
push
lcall
pushl
xor
loopne
das
cltd
jo
sahf
jg
pop
and
ret
outsb
mov
push
nop
push
lock
fadds
notb
fdivs
cmp
jmp
arpl
or
push
sbb
dec
in
jae
test
adc
mov
jle
out
dec
sarb
dec
push
sahf
push
add
jne
jp
stos
mov
stos
aad
das
and
xchg
mov
mov
cld
mov
cmpsb
out
sarl
jnp
sbb
adc
inc
jg
rolb
or
sbbl
lret
pop
stos
pop
inc
xor
xchg
xor
mov
int
mov
loopne
xchg
push
push
aad
test
dec
mov
loopne
inc
leave
xchg
movsb
mov
add
cmp
nop
cld
jle
jne
sbb
out
out
inc
jae
imul
mov
push
ror
mov
shll
xor
cmp
pop
add
sub
pop
mov
xlat
repnz
orb
clc
insl
jl
es
xor
les
shr
dec
daa
push
out
out
xor
jg
cmpb
sbb
inc
into
out
aad
pop
pop
xor
push
out
icebp
ds
loope
pop
mov
into
inc
pop
out
pusha
daa
cs
cmp
sarb
ja
mov
push
daa
cltd
pop
out
out
mov
test
jno
sarb
out
sbb
loope
push
js
push
cmp
out
into
shlb
sbb
jg
js
stos
mov
es
pop
or
fldenv
or
das
jecxz
mov
jb
jg
dec
jmp
data16
cmpsb
xor
pop
push
movsb
xchg
mov
push
into
cli
out
out
out
or
sbb
and
pop
scas
push
js
mov
insb
paddw
out
lret
push
pop
pop
fstpl
dec
subl
loop
pop
mov
loope
arpl
ret
push
out
jmp
in
pop
adcb
fistpl
stc
in
insb
lock
repz
mov
jl
and
adc
test
push
or
div
mov
sub
test
lock
push
out
lret
dec
insb
shrb
clc
aas
jmp
sahf
sarb
and
adc
out
out
out
out
add
fcmovbe
js
fiadds
bound
sbb
jno
call
cmp
out
out
out
out
mov
mov
es
cmp
xchg
lods
sbb
call
adc
mov
lods
out
es
pmaxsw
push
push
int
inc
lds
ret
dec
stc
insb
or
pop
notb
xor
sub
mov
ja
cmc
push
std
lds
xchg
sub
out
out
out
mov
fildl
adc
in
cmp
scas
fdivs
out
out
out
scas
sub
jo
icebp
out
mov
std
adc
jb
je
sbb
jne
in
pop
es
cwtl
iret
mov
stos
xchg
push
inc
mov
rcl
dec
pop
dec
xorl
jns
fcomip
movsl
lret
into
lock
add
into
stc
out
outsb
push
mov
in
inc
arpl
jge
mov
sbb
jmp
call
out
clc
in
out
cmpsl
or
inc
dec
add
inc
mov
lods
push
sub
mul
test
cmpsb
jmp
xchg
or
stos
cmc
int3
jbe
inc
out
push
fsubr
push
lods
out
out
cmpsb
lret
arpl
pop
aad
push
mov
cmp
inc
mov
jg
sbb
movsl
push
es
sbb
lcall
mov
add
xchg
or
lret
dec
orl
out
repnz
ret
into
mov
xchg
hlt
shr
xchg
loope
loope
jns
or
in
das
xor
out
out
out
out
or
adc
or
jg
jns
sub
repz
cmpsb
add
adc
or
out
pop
in
sub
daa
mov
sahf
pop
lea
mov
add
gs
pushf
out
sahf
repz
sub
loopne
push
push
sbb
out
out
out
scas
or
pop
add
popf
out
xchg
cmpsb
push
icebp
inc
stos
sbb
inc
jo
scas
shll
out
out
out
out
es
mov
xor
sbb
jle
lcall
sub
outsb
sub
mov
out
out
push
jmp
or
sahf
lods
hlt
inc
adc
pop
aam
filds
fldl
loope,pt
scas
dec
add
bound
xchg
mov
mov
mov
push
out
out
out
out
cmpsl
adc
in
daa
jo
inc
test
rcrb
add
xlat
pop
int3
int3
bound
mov
fidivs
out
into
repz
xor
mov
mov
mov
shrb
fisttps
imul
out
out
out
les
ret
popf
xor
js
movsl
pop
or
and
daa
ljmp
add
jnp
jo
cli
out
out
and
sub
out
out
sbb
ds
out
es
pop
sahf
stos
mov
test
sbb
mov
nop
adc
xor
out
and
inc
xchg
pop
cmc
xor
jge
das
jmp
out
dec
jecxz
adc
dec
scas
das
mov
jbe
xchg
add
pop
loope
add
cmp
xchg
mov
push
cmp
adc
out
out
es
jmp
fisubs
and
pusha
or
xchg
sbb
push
lahf
inc
addl
sahf
std
push
sub
mov
jmp
movl
xlat
out
out
out
mov
psrld
ret
or
loope
imul
adc
out
out
out
mov
aam
add
mov
sub
jle
push
les
or
es
out
gs
sbb
push
bound
push
adc
adc
out
out
out
xor
mov
sbb
rcrb
mov
enter
add
test
inc
dec
mov
insb
sbb
sub
adc
xor
ja
imul
mov
out
test
test
test
push
inc
scas
mov
out
xchg
es
fbstp
push
mov
xchg
jp
jo
std
ret
outsb
xchg
out
je
leave
out
cwtl
pop
sbb
mov
inc
into
insb
pusha
jae
shrl
push
add
imul
das
sub
fldenv
mov
int3
jp
cmp
mov
mov
push
call
enter
adc
sub
jmp
es
mov
sub
enter
push
xor
das
jne
fs
jg
outsb
xchg
out
xchg
lods
inc
jecxz
mov
xor
popl
xchg
push
mov
fucomi
out
into
stc
sub
adc
cmp
clc
lret
iret
mov
sbb
lods
mov
jl
and
jge
sub
cmpsb
addb
inc
or
out
jno
xor
icebp
mov
adc
jbe
xchg
sub
out
mov
loopne
dec
daa
pushf
stos
cmpsb
xchg
jns
lret
or
int3
or
inc
cmpsb
out
push
xor
pusha
rol
pop
sub
je
fimull
jl
xchg
jp
out
out
xor
ja
fwait
test
dec
xchg
jnp
jae
mov
mov
cmp
out
outsb
xor
jb
jne
xor
jecxz
cs
xchg
push
leave
inc
sub
lods
rcrl
sub
inc
into
subb
aam
mov
pop
and
jns
push
jecxz
rolb
xchg
pcmpgtb
out
dec
xchg
mov
in
push
mov
aaa
mov
out
push
fsubr
in
push
repz
mov
and
mov
push
out
xchg
push
mov
lret
or
or
scas
lods
aam
in
pop
fcompl
aam
rclb
or
arpl
jge
fidivrs
mov
push
insl
loopne
lahf
lods
jbe
push
scas
cmpsl
cmc
adc
std
stos
xor
dec
cmp
aad
mov
dec
call
out
dec
in
out
sti
icebp
jp
ds
cmc
dec
jmp
pushf
repnz
stc
and
push
lods
in
xor
out
jle
out
addr16
aas
xor
sidtl
add
lods
mov
ror
sub
xchg
rcrl
scas
loope
mov
bnd
outsl
sbb
enter
push
xchg
pop
das
ja
test
out
out
push
jmp
repnz
xlat
cwtl
imul
shrb
sub
lcall
out
out
out
inc
sub
outsb
cmp
dec
jp
cltd
test
in
sbb
mov
sbb
xchg
adc
xor
adc
adc
loopne
and
sbb
jle
inc
push
rorb
pop
scas
lds
js
gs
inc
fs
mov
scas
movsb
push
jle
adc
jle
push
je
sub
mov
inc
jae
add
movsl
inc
cmpsb
add
push
jle
imul
jae
or
push
vpcmpeqw
insb
ret
jl
shrb
jae
cld
xchg
sbb
jne
jge
jae
inc
jg
xor
cmpsb
jo
or
jge
pop
mov
cmp
sbb
push
add
sbb
outsl
lret
xchg
inc
stos
jne
bound
loope
outsl
clc
daa
out
push
arpl
push
imul
or
je
popa
mov
mov
jle
inc
push
jne
sbb
pop
adc
add
out
arpl
jne
dec
bound
pop
jle
fs
adc
mov
jns
sbb
mov
jle
leave
daa
pop
xchg
or
push
jge,pt
xchg
ja
dec
adcb
sbb
cmpsl
push
dec
je
insb
mov
adcl
cli
pop
loopne
mov
sbbl
mov
cmpsl
inc
aas
fnstsw
xor
and
jp
lods
push
add
cmp
fdivrl
mov
jmp
push
or
fldenv
pop
inc
push
sub
jge
dec
cs
push
cmpl
push
das
out
mov
push
mov
adc
push
vmread
inc
or
push
enter
addr16
out
add
mov
fildl
push
and
mov
or
sbb
orb
or
daa
or
jg
pop
jne
js
ja
and
inc
jle
fidivs
push
das
jp
out
push
sbb
push
lock
test
iret
jno
stos
pushf
stos
jo
popa
popf
mov
daa
cmc
cltd
and
add
adc
mov
push
lret
sahf
mov
pop
mov
xor
jbe
fisubrl
xor
sbb
dec
pop
fmuls
xor
ds
pushf
jbe
push
lods
push
popf
xor
leave
dec
pop
pop
je
pop
lahf
push
inc
adc
jge
pop
mov
scas
add
sar
push
jle
popa
xor
daa
es
and
mov
iret
je
push
sbb
imul
or
jg
outsb
jae
arpl
dec
jge
rcll
pop
adc
xchg
out
addr16
push
adc
sbb
or
cmp
icebp
adc
or
xchg
mov
sbb
mov
adc
ljmp
sbb
out
cmp
add
lods
fidivl
rcr
add
adcl
adc
loope
cmp
push
pop
push
push
enter
jne
addl
xor
decb
ljmp
pop
std
push
inc
inc
addr16
shll
sarl
lahf
mov
loop
bound
shll
push
mov
adc
and
adc
arpl
inc
je
adc
xor
inc
leave
pop
mov
jmp
aaa
lcall
dec
or
adc
ret
loopne
adc
adc
adc
adc
push
adc
adc
adc
adc
adc
adc
adc
jno
adc
push
adc
inc
cli
sbb
push
push
adc
fs
lcall
arpl
test
adc
fs
lcall
add
adc
sbb
add
cmc
and
xchg
stc
adc
shl
sbb
out
gs
aam
lret
lcall
add
adc
fs
lcall
add
xor
lret
lcall
add
adc
sbb
add
cmc
xchg
rclb
nop
in
adc
out
out
xchg
rclb
add
addr16
fwait
adc
push
push
pop
fs
jb
out
out
sbbl
adc
loopne
fdivrp
pop
out
out
out
dec
cwtl
out
cmc
adc
adc
sub
cs
fs
push
fwait
dec
adc
rcl
add
cli
stc
adc
cwtl
push
xchg
adc
leave
repz
jno
adc
sub
xchg
and
adc
adc
inc
xchg
sbb
xchg
fwait
push
push
sbb
gs
call
inc
out
xchg
shll
cwtl
adc
out
xchg
mov
sarl
adc
out
out
stos
adc
adc
inc
inc
jnp
inc
inc
out
les
xchg
xor
jno
outsb
dec
inc
inc
inc
inc
inc
out
les
pushf
push
xor
aad
jmp
std
xchg
clc
jmp
xchg
clc
xchg
nop
mov
jmp
push
push
push
dec
pop
add
nop
nop
nop
nop
mov
sub
push
call
mov
cmp
jae
xorb
inc
jmp
ret
