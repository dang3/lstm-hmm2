inc
add
cmp
add
mov
dec
adc
xchg
add
sub
mov
and
or
dec
adc
dec
add
and
add
adc
dec
popa
add
and
jne
lret
push
add
pushf
and
xor
add
or
sub
mov
add
bound
xor
andb
or
and
xor
sbbl
xchg
pop
adc
addb
mov
pusha
rolb
pusha
adcl
adc
jo
xor
mov
push
pop
and
or
add
lcall
add
inc
add
xchg
inc
and
mov
and
and
add
adc
addl
fiaddl
cmp
adc
cmp
add
adc
cmp
dec
xor
add
adcl
sbbb
or
and
add
jae
jo
scas
xchg
or
nop
inc
addb
dec
mov
inc
nop
add
xorb
jl
and
shll
sub
push
ret
mov
adc
or
push
push
pop
push
pop
test
js
add
add
adcl
nop
dec
pusha
and
orb
adc
je
add
add
adc
add
push
inc
xor
add
sbbb
pop
inc
dec
mov
adc
add
add
cmp
add
push
add
add
push
or
xchg
dec
add
and
les
insl
sbb
nop
cmp
rcll
push
pop
or
dec
gs
add
cmp
adc
add
jmp
inc
test
test
push
and
add
jmp
or
add
add
inc
mov
add
adc
sbb
test
add
inc
add
js
push
push
movsl
or
add
add
pusha
mov
sbb
add
inc
or
sub
adc
adc
push
sbb
adc
adc
add
inc
or
orl
or
inc
xor
orb
add
add
add
add
add
enter
adc
adc
sbb
and
bound
and
or
rcrl
inc
adc
lock
movsb
sub
add
and
and
test
inc
subb
add
or
add
add
or
and
add
test
push
and
inc
push
inc
add
jo
and
push
add
andb
sub
pop
push
inc
add
in
push
add
push
orl
or
inc
add
pop
adc
or
push
mov
cwtl
mov
xor
sub
or
rcll
add
inc
and
mov
xor
adc
inc
inc
add
inc
or
push
add
sbb
add
or
xchg
adc
sbb
add
adc
or
xchg
add
movsl
les
and
xor
or
les
data16
add
pop
addb
dec
adc
or
add
add
or
sub
dec
sbb
add
mov
and
add
adc
cmp
push
add
add
mov
inc
inc
adc
and
push
add
mov
add
rolb
add
sub
push
rolb
inc
add
add
adc
imul
aam
and
and
add
nop
xor
add
and
test
add
enter
jo
add
add
add
sub
add
mov
adc
push
add
add
rolb
hlt
inc
and
lcall
cmp
or
xchg
in
pusha
push
or
inc
fs
adc
subb
xchg
sbb
cltd
inc
mov
arpl
push
test
add
test
add
push
adc
inc
add
add
or
adc
and
xchg
aam
rolb
in
add
sub
xor
or
add
adc
and
xorb
adc
orb
add
adc
mov
add
adc
rclb
sub
dec
test
and
add
mov
add
mov
or
pushf
bound
add
lret
add
adc
addb
adcl
add
enter
cmp
dec
adc
inc
inc
add
or
cwtl
dec
push
add
mov
add
add
add
adcb
ret
sbb
add
dec
or
and
or
jo
and
mov
xor
add
and
add
adcb
add
mov
adcb
add
jno
inc
aam
or
ficoml
add
or
dec
mov
or
andb
loopne
add
and
add
or
test
test
ret
shrb
add
add
adc
add
or
push
or
mov
mov
orl
test
jb
orb
or
or
orb
sub
sbb
xor
xor
lds
and
add
inc
add
or
dec
and
loopne
pusha
fadds
add
adc
inc
pusha
pop
adc
adc
cmp
add
sbb
and
js
inc
and
rorb
add
adc
or
push
adcb
adc
addl
dec
nop
add
test
add
arpl
or
adc
sub
sub
test
addl
cmp
inc
sbb
inc
fimull
add
lods
dec
pusha
and
adc
adc
movsb
add
cwtl
mov
mov
pop
addl
adc
sbb
or
add
xchg
and
dec
add
addb
and
and
icebp
add
adc
adc
movsl
sbb
sbb
add
inc
dec
inc
xchg
and
pop
push
xor
adc
or
cmpsb
lldt
add
shlb
add
add
sub
and
and
mov
mov
shlb
add
aaa
inc
shll
and
and
pop
and
add
or
addb
add
rclb
pop
inc
or
sub
adc
sub
push
inc
add
push
push
add
movsl
add
xchg
xor
orb
mov
dec
pop
and
add
nop
mov
lock
add
andb
push
adc
icebp
add
mov
mov
add
xor
shlb
adc
inc
rclb
push
movsb
and
inc
addb
push
add
test
add
add
sbb
mov
pop
adc
and
mov
add
add
add
cwtl
pop
add
add
outsl
and
popa
and
add
pusha
add
add
xor
or
add
sub
adc
dec
add
inc
inc
mov
adcb
xchg
sbb
and
add
inc
call
adc
int3
xor
loopne
and
mov
mov
and
dec
dec
add
push
insl
sbb
xchg
inc
add
add
adc
and
adcb
adc
or
and
adc
inc
add
sbb
sub
add
or
or
or
push
push
add
adc
dec
add
xor
xchg
and
daa
and
xchg
addb
adcb
or
add
add
pop
add
dec
push
and
push
inc
add
adc
mov
and
mov
orl
add
or
or
add
add
and
cmp
addb
adc
fs
in
or
dec
inc
sbb
add
adc
fcoms
add
shlb
inc
or
inc
addl
add
inc
pusha
cmp
cmp
mov
inc
inc
adc
andb
pusha
cwtl
adc
and
add
add
and
add
sub
jo
or
or
movb
add
mov
adc
mov
add
adc
and
int3
or
inc
adc
xor
add
addl
adc
adc
jl
add
or
subl
push
add
add
mov
and
mov
add
lea
test
xchg
add
dec
ret
add
or
andl
and
add
add
and
add
add
add
inc
xorb
or
xchg
pusha
or
adc
add
mov
cwtl
inc
sbb
inc
nop
rorb
jecxz
or
aam
addb
sbb
cmp
xor
inc
and
add
add
test
add
add
inc
sub
add
test
pop
or
and
add
or
lock
adc
cmpsl
or
ret
adc
add
add
inc
fstl
xchg
jge
adcl
push
jecxz
inc
adc
and
add
jo
mov
nop
or
sub
fcoml
pop
and
orb
adc
nop
adc
add
push
dec
nop
and
lds
sbb
mov
dec
add
add
and
and
pusha
and
addb
mov
adc
add
adc
add
and
add
inc
add
sbb
mov
test
add
add
add
aam
add
add
add
mov
add
inc
addb
xor
add
add
sub
add
dec
add
and
pop
jo
nop
sub
and
add
or
inc
add
nop
addl
or
add
rolb
inc
adc
add
adc
inc
loope
add
icebp
push
xor
sub
mov
or
or
inc
movsb
dec
addl
mov
push
add
adc
rcrb
icebp
or
and
addb
and
pop
cmp
inc
and
cmpsb
sub
xor
test
add
sbb
adc
or
inc
mov
xor
orb
add
xor
add
or
or
adc
xor
inc
or
and
add
add
add
test
xor
inc
sub
lock
and
nop
sbb
adc
add
addb
and
inc
pusha
inc
loopne
add
add
add
adc
or
and
nop
add
ret
roll
add
test
push
push
sbb
sbb
add
sbb
dec
and
add
mov
inc
add
add
addb
mov
adc
push
or
and
add
adc
add
pop
xchg
sub
add
add
add
sub
inc
inc
push
mov
pop
add
lret
lods
or
xchg
add
sbb
xor
mov
xchg
push
xor
sub
sbb
sbb
int
and
mov
addb
sbb
adcb
inc
or
add
inc
cs
add
pusha
add
add
add
subb
and
inc
push
sbb
ret
sbb
pop
bound
xchg
cmp
adc
adc
add
adc
mov
inc
mulb
mov
jo
and
arpl
push
pusha
add
dec
movsl
rclb
and
inc
inc
mov
inc
or
sub
stos
push
es
push
and
push
or
add
xchg
xor
adc
xchg
add
addb
or
inc
add
dec
add
inc
and
mov
inc
add
or
or
cltd
sbb
bound
pop
andl
inc
pusha
aas
add
and
add
inc
test
adc
repz
add
cmp
or
sbb
or
das
or
lea
and
mov
or
mov
or
inc
mov
xorb
or
orb
add
add
add
and
dec
and
or
es
adc
add
nop
add
add
adc
add
add
inc
andb
mov
popa
add
mov
add
add
add
add
inc
sbbb
loopne
inc
cwtl
pop
sub
or
adc
or
add
add
add
adc
add
enter
and
les
andb
cmp
push
adc
xor
and
xchg
mov
and
xchg
enter
and
push
or
dec
push
add
add
add
or
pusha
or
mov
shlb
mov
inc
add
add
nop
xor
and
sbb
and
add
inc
addb
add
cli
orb
or
add
pop
xor
add
adc
cmp
add
inc
add
or
fdivs
sbb
add
orl
dec
add
or
adc
push
rorb
inc
mov
adc
and
sahf
ret
xor
add
popa
rolb
add
dec
lar
adc
add
and
or
adc
addb
add
and
inc
and
inc
add
add
inc
popa
sbb
mov
add
adc
addl
lods
or
and
fcomps
lods
or
add
add
adc
and
add
int3
add
sbb
add
push
add
or
adc
add
inc
adc
adc
mov
orl
addb
add
mov
push
andl
mov
aaa
adc
inc
add
pusha
mov
adc
adc
add
or
push
inc
inc
andb
push
add
andb
adc
dec
sbb
add
addl
or
mov
add
andb
addb
lds
js
and
or
or
jb
xchg
add
or
add
mov
add
add
and
call
push
xchg
adcb
adc
sbb
adc
add
add
adcb
sub
sub
push
push
add
add
inc
adc
or
cmpb
add
and
adc
nop
inc
add
mov
add
movsb
inc
sub
xor
addb
sbb
adcb
add
push
add
add
mov
test
call
adc
or
inc
fmull
adc
add
add
add
adc
push
call
adc
mov
test
add
sub
add
and
dec
push
jo
pusha
inc
rclb
or
add
addb
pop
add
addb
add
and
and
and
and
or
add
inc
fadds
add
adc
sbb
add
add
add
add
add
inc
or
xchg
rclb
pop
inc
xchg
adc
add
addb
or
dec
and
or
es
or
xor
add
test
add
or
les
fdivr
or
and
xor
roll
subb
sbb
mov
add
adc
addl
adc
sbb
inc
and
add
dec
roll
cs
push
addb
push
or
mov
adc
cmp
inc
add
jo
or
inc
xchg
loopne
inc
sub
and
and
sub
clc
lcall
add
adc
add
adc
inc
bound
and
and
sbb
xchg
add
loopne
inc
pop
jecxz
push
inc
adc
dec
or
inc
push
add
adc
rclb
inc
or
and
adc
rcll
add
adc
push
das
adc
add
or
roll
inc
or
lea
add
inc
add
push
inc
test
andb
or
dec
popa
add
and
jo
inc
xor
inc
adc
xor
sub
jo
mov
push
rorb
pop
xchg
adc
sbb
orb
adcb
sub
add
and
add
mov
or
or
add
adc
add
cmp
adc
jo
push
jo
push
sub
and
inc
addb
in
sbb
fs
or
test
add
sbb
les
rolb
es
addb
add
add
mov
andb
add
lock
les
add
or
add
test
add
dec
addl
or
andb
dec
adc
add
add
add
mov
add
add
add
mov
add
test
add
pusha
test
and
inc
inc
pop
pusha
les
or
test
adcb
inc
bound
and
add
add
add
add
sbb
adcb
dec
add
test
lea
add
add
roll
add
add
add
or
mov
addb
popa
adc
push
mov
or
add
inc
add
and
xor
add
or
into
adcb
inc
push
jne
adc
add
adc
pusha
push
push
adc
or
arpl
mov
add
inc
push
add
adc
add
adcb
mov
xor
mov
sub
mov
rclb
push
mov
push
lock
sbb
adc
and
test
and
aam
add
add
adc
and
test
addb
dec
orb
and
mov
add
adc
push
and
and
push
sbb
add
mov
stos
add
add
inc
inc
push
or
or
inc
orb
add
add
push
das
add
add
adc
pop
add
inc
addl
sub
add
add
andb
pop
rolb
nop
xor
adc
push
mov
andb
sbb
and
and
mov
and
mov
adc
and
mov
orb
nop
adc
fs
xchg
nop
mov
inc
add
add
adc
and
test
inc
mov
add
add
and
shll
add
add
add
add
jl
adc
or
add
adc
dec
and
inc
lock
lds
pushf
or
orb
add
mov
or
pushf
add
test
jo
rorb
mov
or
push
add
and
or
adc
push
inc
adc
push
mov
test
or
inc
add
gs
sbb
adc
xor
add
adc
add
loopne
add
int3
xor
add
add
add
add
sub
orl
push
push
inc
inc
and
or
push
andb
adc
add
mov
adc
add
push
dec
pop
add
add
xor
inc
test
push
les
lret
mov
adc
orb
dec
adc
xor
or
add
add
inc
and
int3
nop
rcrl
or
andb
addb
and
add
inc
inc
and
add
push
adc
or
xchg
sbb
test
sbb
inc
int3
inc
add
mov
inc
cmpsb
push
or
ret
adc
inc
adc
movl
sub
add
and
ret
or
addb
inc
inc
push
xchg
and
add
or
pop
or
sbb
sub
sbb
add
add
mov
and
sbb
and
dec
les
or
or
xor
adc
push
and
adc
inc
fiadds
add
adc
add
or
mov
mov
inc
add
movsb
add
add
sub
or
test
sbb
inc
stos
andb
adc
orb
mov
fwait
adc
nop
add
sbb
adc
roll
mov
add
and
lods
lcall
push
addb
and
add
sbb
xor
jo
and
add
mov
inc
add
add
mov
dec
add
inc
test
jo
jb
add
add
xchg
test
pusha
addr16
or
add
add
test
and
add
test
xor
add
dec
inc
add
nop
sbbb
mov
sub
or
test
add
add
pop
add
add
add
adc
adc
rorb
cmp
add
add
popa
add
inc
adc
add
xchg
and
fs
push
test
add
cwtl
test
addl
adc
add
add
xor
adcb
adc
mov
add
push
add
xchg
add
or
or
adc
call
add
and
or
xor
inc
inc
adc
sub
xor
push
sub
mov
add
adc
add
push
or
sub
xchg
jb
add
adc
xchg
addb
push
inc
add
adc
dec
xchg
and
xchg
or
xor
lret
add
add
xor
in
push
adc
adc
add
push
inc
mov
orl
adc
add
jo
ret
adc
and
adc
add
rorb
pusha
pusha
or
add
dec
aam
andb
push
adc
mov
mov
or
add
cwtl
inc
add
adc
mov
add
add
and
shrl
push
or
add
mov
inc
inc
xchg
or
add
mov
rclb
sarb
test
add
and
ret
jo
sub
push
xor
test
add
add
adc
lea
or
addb
mov
and
sub
and
inc
sub
add
dec
and
adcl
add
lea
sub
and
or
roll
jo
push
and
and
inc
adc
sbb
push
add
inc
inc
movsb
sbb
xchg
add
xchg
add
sub
add
and
push
adc
jne
adc
xor
pusha
adc
dec
andl
and
push
add
inc
add
push
add
sbb
adc
adc
orl
and
pop
jo
addb
add
and
or
or
cmp
leave
nop
pusha
or
data16
adcb
andb
and
inc
adc
inc
icebp
xor
add
add
add
add
adc
and
dec
or
or
movl
rolb
adc
adc
mov
cmp
or
addb
add
adc
stos
inc
add
or
add
sub
add
sbb
data16
mov
mov
xor
mov
pusha
add
or
jp
test
xchg
inc
inc
mov
xor
add
mov
adc
add
adc
or
add
or
inc
add
adc
mov
inc
add
adc
or
and
inc
xchg
adcl
add
xchg
addb
adc
and
aam
or
push
orb
inc
add
and
rcrb
les
add
sub
add
or
or
or
adc
add
add
nop
add
add
and
push
pusha
or
andb
sub
enter
roll
and
sub
and
dec
adc
sub
and
nop
inc
adc
adc
and
adc
add
push
nop
sub
xchg
pop
js
push
add
add
lcall
mov
rclb
add
aam
add
or
xchg
add
xchg
mov
add
add
and
es
add
add
xor
sbb
or
adc
add
adc
mov
add
add
add
addb
add
add
addl
or
loopne
addl
add
inc
add
movsb
addl
rolb
andb
mov
and
ljmp
loopne
sbb
pusha
inc
add
mov
add
and
add
sub
cmp
les
inc
ret
and
or
add
gs
lret
add
sub
mov
sub
pop
ds
add
add
add
and
addb
add
movsb
and
sbb
inc
mov
add
inc
subb
adc
add
add
or
add
add
inc
jo
push
loopne
adc
xchg
push
add
inc
xchg
or
or
add
inc
push
sub
push
inc
add
inc
and
push
and
add
or
and
inc
pop
adcb
mov
add
and
add
cwtl
add
push
pop
and
lock
add
or
lods
push
xorb
and
and
xor
push
les
sbbb
add
pop
or
push
and
andl
xchg
test
add
pop
add
add
push
pop
push
or
adc
add
inc
or
add
adc
je
add
mov
rolb
loopne,pn
and
test
sub
mov
add
add
cwtl
add
add
inc
push
xor
sub
sub
inc
les
dec
inc
add
and
sbb
int
and
push
or
add
push
inc
enter
rolb
add
adc
orb
addl
add
mov
add
or
add
cwtl
push
ret
and
inc
sub
cmp
adc
adc
pop
mov
test
add
inc
orl
and
add
add
add
add
add
inc
and
adc
adc
adc
subb
nop
xchg
push
and
add
and
add
or
sbb
or
adc
and
adc
orb
daa
adc
add
test
add
or
test
add
add
dec
adc
mov
inc
add
pop
sbb
add
shrl
sbb
add
add
adc
les
sbb
addb
dec
add
dec
mov
inc
ds
sbb
add
or
add
sbb
and
mov
add
adc
and
and
dec
inc
xor
mov
or
inc
dec
adc
add
add
push
add
addb
mov
xchg
dec
and
add
inc
addb
add
fdivrs
aaa
dec
and
add
xor
inc
add
add
and
es
xor
sbb
or
add
inc
add
or
add
mov
push
add
xchg
xchg
or
addb
xchg
cmpb
add
add
mov
add
or
enter
push
adc
add
or
adc
add
pop
add
push
addb
push
push
or
roll
aam
add
add
adc
dec
sbb
add
add
subb
xchg
add
pusha
add
pusha
add
xor
add
in
xor
add
inc
add
adc
push
dec
add
orl
adc
adc
adc
inc
and
mov
orl
add
and
add
inc
inc
add
sub
cmp
mov
add
and
inc
adc
inc
xor
subl
xchg
and
push
pop
test
push
inc
pop
or
shlb
test
adc
push
dec
mov
add
pop
dec
mov
and
ret
and
adc
xor
or
add
adc
mov
movsl
pop
add
ret
add
mov
adc
add
mov
rorb
add
adc
inc
fs
mov
pusha
or
pop
mov
xor
xchg
adc
nop
or
addb
and
add
add
cwtl
add
sub
push
test
mov
addb
add
addb
add
add
jb
xchg
add
push
add
test
cmpsb
xorb
dec
add
add
adc
aam
pusha
pusha
and
add
mov
enter
mov
mov
cmp
nop
sub
sbbb
imul
inc
push
inc
sub
add
test
add
add
push
dec
popa
inc
and
or
mov
and
jae
inc
nop
add
mov
es
sbb
lcall
jno
adc
ljmp
shrb
mov
push
adcb
add
addb
and
cmp
add
inc
push
add
mov
and
popa
pusha
add
add
or
mov
push
arpl
add
cmp
add
adc
and
dec
or
add
lcall
add
cli
add
add
sub
or
push
inc
inc
add
or
mov
adcb
or
mov
adc
or
sub
sbb
add
inc
add
adc
aad
push
dec
xchg
subb
and
and
or
pop
add
adc
add
popa
adc
andb
add
adc
or
xor
loopne
test
add
inc
push
add
and
add
mov
nop
adc
and
adc
orb
add
adc
add
and
add
inc
adc
stos
add
or
roll
test
or
test
adc
add
inc
add
pop
adc
add
push
push
cmp
and
adc
sub
or
xchg
add
add
add
mov
adc
add
add
or
rolb
and
lods
pusha
adc
mov
adc
or
xchg
add
or
push
and
mov
add
repnz
inc
addb
push
adcl
mov
add
adc
add
inc
inc
rolb
add
xchg
adc
pusha
sub
and
push
or
gs
push
inc
sbb
inc
dec
or
and
add
or
sub
add
nop
add
or
sbb
add
add
pop
dec
addb
sbb
add
and
inc
or
or
add
inc
inc
and
add
and
sub
add
rclb
dec
inc
pusha
xor
test
mov
xchg
add
inc
and
shlb
daa
inc
mov
xchg
add
sub
les
inc
int
push
call
sub
pusha
movsb
add
inc
or
adc
inc
xchg
mov
jno
push
or
bound
cmpsl
aam
or
adc
mov
cmp
and
inc
test
inc
inc
add
rorb
add
add
orl
push
pusha
push
add
enter
and
inc
inc
and
add
add
pop
addl
inc
mov
inc
xchg
push
sub
add
sbb
add
xor
inc
and
les
xchg
push
and
add
adc
adc
addl
rolb
add
add
adc
xor
inc
flds
or
adc
pop
adc
and
push
push
push
adc
or
daa
je
adc
dec
xor
sbb
inc
adc
xor
sub
test
inc
shlb
adc
or
rclb
and
pusha
add
add
dec
add
add
dec
stos
les
popa
mov
add
cltd
adcb
test
push
adcb
adc
add
sub
add
adc
add
or
inc
add
add
add
addb
ret
push
add
and
mov
push
inc
out
sbb
xor
inc
inc
add
sbbb
sub
adc
pop
or
sbb
add
add
add
mov
push
xchg
push
add
dec
inc
push
xchg
or
test
inc
inc
add
adc
adc
mov
xchg
add
add
add
in
add
ret
inc
inc
and
adc
add
and
rol
inc
pop
mov
inc
and
inc
adc
test
xchg
inc
test
lcall
sub
add
popa
add
add
adc
sbb
or
add
or
add
adc
add
add
or
adc
push
add
add
rolb
adcl
adc
or
add
add
ret
mov
test
add
xor
xchg
fsubs
rolb
inc
addl
inc
nop
nop
lea
jo
addb
or
add
inc
adc
lock
sub
adc
add
or
and
cwtl
add
sbb
ss
orb
mov
adcl
xchg
nop
mov
sub
enter
cmp
push
add
xor
data16
adc
inc
cmp
add
xchg
inc
add
adc
add
push
sbb
and
inc
add
add
or
sbb
add
cmp
or
popa
dec
dec
nop
addl
nop
orb
add
adc
xor
roll
pop
push
add
adc
addb
add
add
adc
lret
add
inc
mov
pushf
inc
pop
and
xor
add
add
nop
add
add
add
adc
mov
and
in
add
addl
add
inc
add
add
add
dec
sbb
mov
xor
scas
add
push
inc
sbb
fimull
sub
add
addb
sub
push
add
inc
add
sbbb
adc
addb
or
bound
add
and
inc
adcb
sbb
and
inc
inc
add
and
push
mov
add
push
pop
sub
orb
nop
xor
and
or
adc
nop
xor
lcall
or
and
or
and
add
or
sub
add
nop
or
or
addl
add
add
addl
and
inc
add
addb
or
adc
and
sub
cmp
inc
and
add
add
and
and
and
mov
mov
fs
and
adc
add
adc
add
sub
adc
adc
add
fadds
and
add
bound
or
dec
inc
inc
addb
bound
rclb
push
or
andb
or
or
dec
adc
inc
adc
inc
add
add
data16
add
sub
and
add
inc
adcb
xchg
push
inc
adcl
add
push
add
add
in
sub
add
xchg
or
add
adc
ret
inc
push
inc
xor
inc
xchg
add
addb
push
or
mov
add
addb
add
or
or
add
sub
sub
inc
ret
mov
or
add
inc
add
js
add
pop
add
add
nop
add
add
test
or
push
inc
add
add
add
inc
push
or
cmp
test
xor
add
cmp
xchg
inc
and
stos
push
inc
add
and
inc
inc
sub
mov
add
add
test
or
pop
mov
adc
mov
xchg
add
add
push
mov
inc
add
and
inc
roll
inc
orb
adc
pusha
or
and
and
add
inc
shlb
mov
add
addb
add
adc
or
or
add
rorb
inc
sbb
inc
inc
pop
inc
and
inc
sbb
sub
inc
inc
bound
add
xorb
or
add
add
rolb
adc
enter
fs
jle
xchg
add
adc
xor
lods
or
or
mov
add
xchg
add
adc
xchg
rorl
rol
add
inc
and
push
add
and
inc
push
adc
add
add
test
inc
add
xor
and
pop
shlb
xor
sub
or
dec
xchg
inc
addb
or
adc
and
and
add
test
add
inc
adc
sbb
or
insb
add
and
or
xchg
orl
lock
or
adc
loopne
shrb
inc
and
and
dec
mov
cwtl
addb
add
cwtl
sbbb
cmp
inc
add
add
and
sub
push
adc
add
lods
xor
add
or
or
add
add
rolb
add
or
sub
movsb
test
add
dec
add
adc
add
xor
and
sbb
mov
and
and
test
adc
inc
orl
add
xchg
stos
cmp
add
add
adcb
leave
addb
or
pop
mov
mov
add
cwtl
mov
jp
add
add
andb
mov
xorb
or
add
add
pop
or
add
or
adc
push
gs
inc
adc
xor
or
push
or
insb
nop
dec
add
or
sbb
adc
add
xchg
adc
or
add
and
cwtl
cwtl
shl
push
addb
cmpl
inc
addl
orb
xchg
add
add
add
add
xor
and
xor
push
add
or
push
dec
add
add
adc
sub
add
xchg
data16
test
add
and
add
adc
or
rorl
addb
add
nop
inc
sub
bound
add
or
mov
dec
adc
es
and
add
push
aad
cwtl
mov
add
inc
or
add
sub
or
mov
adc
sbb
pusha
jb
adc
add
addb
add
add
mov
adc
and
shr
mov
add
add
add
mov
add
inc
add
fimull
mov
push
add
dec
add
mov
adc
adc
sub
xchg
addb
test
push
or
mov
push
xor
adc
add
inc
aam
add
nop
mov
adc
and
pusha
aam
add
add
xor
sbb
adc
test
or
adc
adcb
add
popa
lds
add
mov
stos
and
jno
dec
add
mov
adc
rorb
add
pushf
add
xor
add
add
sub
scas
add
movb
inc
or
and
adc
dec
mov
addb
inc
and
dec
push
add
add
add
jmp
mov
add
or
dec
pusha
and
inc
or
or
sbb
rclb
add
lret
jae
inc
nop
add
add
sbb
add
sub
nop
add
add
jecxz
or
push
add
mov
sbb
sbb
adc
data16
inc
add
and
inc
and
or
shrl
mov
and
and
inc
pop
push
addb
adc
imul
add
les
adc
add
add
sub
inc
and
shlb
stos
adc
or
mov
inc
or
sbb
xchg
add
adc
inc
adc
xchg
and
sbb
and
add
xor
orb
lea
xor
add
mov
push
les
add
adc
inc
orb
dec
add
add
dec
insl
mov
add
sbb
stos
adc
inc
xor
adc
or
or
and
add
inc
pop
push
adc
and
pusha
pushf
jb
push
or
adc
add
adc
rolb
add
sub
add
and
mov
xor
inc
inc
dec
adc
adc
sub
ja
xor
add
or
or
and
and
push
add
inc
or
inc
pop
or
or
xor
add
push
cmp
xchg
test
bound
stos
adc
add
add
cwtl
or
sbb
je
xor
and
add
sbb
push
and
jl
push
and
inc
add
add
cs
jne
add
and
or
inc
adc
adc
add
pusha
sbb
push
sbb
or
adc
adc
dec
cwtl
sbb
or
jb
inc
add
pusha
add
pusha
add
add
ljmp
xchg
add
add
inc
mov
adc
add
xor
test
xorb
xchg
test
add
sbb
add
dec
daa
sub
inc
inc
or
and
lea
subl
adcb
sub
push
add
adc
add
or
loopne
mov
or
add
mov
push
inc
pop
or
add
sbb
sbb
mov
mov
or
and
add
push
addb
cwtl
lahf
adc
add
add
sbb
add
or
inc
addb
mov
or
push
add
pop
pop
dec
add
and
call
rolb
inc
inc
or
adc
dec
add
and
add
int
add
add
add
pop
mov
test
or
nop
mov
add
inc
cmp
add
add
push
xor
and
leave
push
xchg
cmp
add
add
ret
inc
or
adc
sbb
and
or
dec
mov
push
adc
test
arpl
popa
add
add
or
inc
add
pusha
and
inc
orb
test
mov
add
adc
andb
adc
and
xchg
es
add
adc
arpl
mov
jge
push
adc
or
xor
adc
adc
and
or
mov
cmovo
or
sbb
push
add
jno
addb
inc
test
orb
add
xor
xchg
inc
adc
je
xor
pusha
or
cmp
mov
rolb
add
or
adc
or
nop
sub
xor
mov
or
add
or
test
or
sbb
xchg
test
subb
cmp
push
and
add
add
xchg
mov
rclb
sbb
xor
pushf
aam
dec
and
adc
add
add
rolb
inc
xchg
loope
dec
mov
sub
add
inc
adc
xchg
add
sub
inc
inc
orb
mov
and
les
or
mov
add
adcl
push
add
push
dec
add
inc
adc
add
xor
push
adc
add
addb
jecxz
inc
adc
pop
dec
or
and
sub
mov
addb
pop
xchg
push
add
add
fwait
add
test
test
and
add
add
add
mov
sub
or
or
add
adc
dec
cmp
mov
add
stos
adc
inc
adc
andb
add
inc
orb
inc
adc
add
add
mov
rolb
add
or
addb
mov
loop
cmp
and
adc
nop
dec
push
mov
add
add
push
nop
inc
and
add
xchg
rorl
xor
sbb
sbb
cmp
adc
xchg
push
or
inc
add
pusha
or
push
add
add
add
add
xor
add
dec
sbb
bound
mov
xorb
mov
pop
and
mov
mov
into
xor
andl
add
sub
adc
add
and
add
sub
sub
and
add
dec
inc
or
xor
arpl
inc
sbb
or
adc
and
add
adc
add
push
add
inc
or
inc
add
and
add
add
add
add
int3
push
adc
mov
add
push
push
pop
nop
add
enter
and
mov
or
rolb
and
pop
dec
adc
mov
test
or
add
or
add
js
jo
add
cmpl
cmp
push
adc
inc
or
push
mov
push
pusha
dec
add
movsb
and
or
inc
and
adc
or
add
and
shll
orb
inc
pusha
xchg
xor
and
cmp
or
adc
add
add
and
xor
add
and
add
inc
jo
xor
and
jbe
pop
inc
inc
push
inc
add
add
cltd
mov
adc
add
add
orl
and
add
inc
add
orb
movsb
shlb
or
lods
add
add
or
sub
add
add
movsb
int3
nop
add
add
xchg
sbb
lret
and
add
mov
adc
or
mov
pusha
adc
or
pushf
or
add
add
or
adc
xor
adc
adc
les
or
add
and
pusha
or
pop
xor
xchg
cmp
or
adc
and
push
inc
adc
inc
add
inc
add
xchg
sbb
andb
sbb
mov
add
cmpb
add
and
adc
and
adc
sub
or
inc
adc
andb
or
pusha
add
add
cmp
addb
push
xchg
and
sbbl
add
inc
and
or
and
add
or
add
add
dec
pop
add
sbb
add
sbb
add
sbb
xor
fadds
and
test
add
rol
add
inc
sub
add
xchg
dec
sbb
les
arpl
or
and
sub
ret
sbb
add
add
add
inc
ret
pusha
pop
les
sbbb
push
or
add
int
adc
add
add
lock
mov
push
add
pop
add
pusha
shl
xor
xor
push
or
int3
or
add
push
inc
addl
andb
sbb
inc
or
add
loop
adc
xchg
push
sub
push
add
or
cmc
cltd
xchg
test
dec
and
loopne
inc
rclb
xor
and
and
or
mov
add
je
sub
xchg
and
and
movsb
js
loopne
add
ret
or
inc
test
add
mov
out
and
mov
add
sbb
pop
adc
or
and
add
and
push
inc
bound
dec
or
andb
sub
addb
push
add
bound
cwtl
add
and
add
nop
es
insb
mov
inc
pop
or
or
add
add
add
inc
and
mov
push
push
pop
dec
add
xor
dec
adc
xor
push
or
add
and
test
or
addb
es
add
inc
add
pusha
add
add
push
jo
rorb
and
xchg
adc
lcall
and
adc
add
mov
inc
or
add
stos
addl
add
sub
sbbb
inc
or
add
mov
add
add
enter
and
inc
push
pop
nop
push
rclb
sub
mov
push
adc
xchg
push
add
xchg
adc
push
nop
add
mov
lods
adc
loope
sarb
add
addl
adc
or
cmp
sbb
and
or
enterw
add
cwtl
add
ret
test
add
add
les
push
mov
inc
inc
add
cmp
xor
shlb
push
add
add
or
add
add
cwtl
dec
push
sub
enter
and
nop
add
push
xor
movsb
sbb
add
add
add
xchg
adc
adc
addb
push
add
sub
xor
inc
add
add
and
inc
add
test
add
or
add
or
add
or
adc
add
add
or
or
nop
add
and
adc
pusha
add
addb
pop
inc
ret
push
or
dec
add
mov
push
add
dec
inc
push
push
sub
inc
addb
add
add
adcb
inc
add
test
addb
add
add
add
xor
add
adc
add
xchg
or
add
and
pop
inc
or
addb
and
movsb
inc
pop
pusha
sbb
xor
inc
mov
add
mov
addb
push
add
es
mov
or
inc
or
add
pusha
nop
sbbb
xor
inc
test
add
add
add
and
adc
mov
add
add
add
or
add
adc
add
xchg
add
subb
adcb
or
adc
inc
and
inc
adc
and
add
add
inc
mov
aam
inc
add
add
dec
add
je
pusha
and
and
add
and
add
inc
add
or
inc
inc
les
add
add
or
addb
add
and
les
add
sub
add
add
addb
or
mov
adc
xor
xchg
or
push
les
adc
add
xor
xor
and
add
sbb
add
inc
add
add
or
scas
add
inc
or
or
inc
add
cwtl
add
inc
or
or
or
and
add
inc
add
add
add
add
inc
add
cmp
or
subb
pushf
add
or
addl
add
add
orl
push
add
or
add
rclb
pusha
adcb
add
inc
add
inc
adc
xchg
push
add
add
and
pop
cwtl
adcl
sbb
jbe
add
adc
xor
add
add
sub
adc
add
adc
test
or
mov
add
xor
inc
add
push
inc
and
inc
mov
or
add
add
or
sub
add
adc
add
test
push
or
sub
add
push
pusha
and
xchg
addl
add
sub
add
adc
add
inc
add
and
imul
inc
add
push
adc
push
inc
enter
dec
add
addb
add
dec
add
xor
inc
rclb
add
loopne
adc
andl
push
add
addb
add
add
and
xor
dec
dec
push
adc
add
addb
inc
mov
and
adc
add
add
inc
push
add
dec
inc
add
and
add
cwtl
cmp
inc
adc
mov
add
add
movsb
add
add
inc
addl
inc
xor
xor
add
nop
andb
add
add
les
push
add
add
or
push
and
add
movsl
addl
add
add
add
inc
and
add
or
mov
add
add
ret
pop
add
and
adc
push
add
test
add
add
sarb
add
add
add
add
add
adc
or
push
or
push
add
add
inc
add
rolb
add
dec
add
add
add
add
and
inc
xchg
add
sbb
bound
add
andb
inc
inc
adc
add
push
sbb
push
xor
adc
add
add
adc
add
add
add
and
pop
adc
or
add
sbb
add
addl
add
pusha
and
push
add
add
add
add
add
dec
dec
and
adc
add
or
lods
add
push
mov
enter
and
addl
subb
xor
inc
addb
or
push
inc
call
and
add
or
add
add
adc
mov
or
add
add
xor
and
inc
or
adc
and
sbbb
test
xor
push
rolb
adc
add
add
and
pop
add
and
add
jmp
push
addb
inc
sbb
add
add
inc
addb
test
push
rolb
add
add
add
test
and
add
inc
add
xchg
add
add
add
adc
and
adc
add
add
inc
and
lea
add
jo
test
add
add
add
rolb
push
or
sbb
or
inc
add
push
inc
and
add
add
pusha
or
dec
inc
adc
add
add
dec
and
and
add
add
add
and
xor
add
jno
inc
push
inc
adc
or
add
sub
dec
add
add
cmp
add
add
add
sub
and
add
inc
or
mov
mov
add
mov
adc
or
xchg
inc
add
nop
or
inc
add
mov
inc
pop
test
push
add
flds
add
add
add
add
add
push
add
and
inc
or
insb
add
or
add
sbb
or
xor
add
add
add
add
inc
leave
adc
add
dec
adc
sbb
add
jno
push
and
dec
add
add
dec
inc
orb
sbb
ret
bound
mov
add
add
mov
push
sub
mov
push
inc
push
inc
dec
and
add
inc
or
mov
adc
add
push
add
add
and
and
add
push
push
or
mov
xor
addb
or
or
push
inc
dec
add
addb
popa
arpl
and
cmp
add
inc
jo
add
or
data16
mov
mov
addb
add
add
addb
adc
xor
sbb
sub
and
add
add
dec
dec
add
add
addb
int
and
add
adc
and
add
adc
add
test
and
insb
add
or
inc
add
es
add
mov
push
inc
rorb
add
mov
inc
add
nop
inc
rorl
and
addb
add
xor
mov
test
addb
sub
add
xchg
or
add
inc
adcb
mov
inc
into
sbb
add
inc
add
and
dec
and
popa
inc
add
add
and
add
or
add
dec
adcb
add
add
ret
sub
popa
add
or
adc
adc
add
add
add
rclb
or
add
mov
and
push
add
add
addb
and
and
adc
add
andb
add
add
orl
mov
or
add
inc
add
add
add
push
add
add
mov
or
add
add
subb
add
sub
pop
adc
mov
or
and
cltd
add
add
enter
inc
addb
add
sbb
push
sub
add
sbb
inc
add
add
inc
sbb
add
les
add
add
add
and
mov
add
add
test
add
addb
inc
add
dec
inc
add
lret
sbb
add
inc
add
or
inc
test
or
sub
inc
add
adc
or
inc
or
and
push
add
xchg
or
inc
inc
mov
or
add
add
adc
pop
add
adc
and
pusha
inc
cwtl
add
add
push
nop
pusha
inc
push
xor
pusha
adc
add
adc
add
xor
nop
add
addb
add
adc
and
and
add
add
add
add
sub
push
pusha
add
add
or
inc
add
rclb
add
or
inc
test
add
adc
pop
inc
mov
add
inc
add
dec
call
add
dec
add
cmp
push
add
add
mov
rolb
and
add
add
adc
inc
add
pusha
mov
add
inc
dec
mov
adc
add
orb
adc
add
test
add
add
adc
and
add
xor
add
add
add
add
or
addl
inc
add
inc
nop
inc
rclb
add
add
add
add
inc
dec
and
adc
adc
imul
add
inc
test
push
or
addl
adc
sub
inc
add
adc
inc
xor
test
mov
adc
mov
inc
inc
adcl
and
andb
add
adcb
add
mov
add
add
add
and
add
sbb
or
add
mov
inc
popa
sbb
or
adc
add
add
dec
inc
and
addl
add
push
add
sbb
roll
add
inc
rorb
inc
inc
adc
add
sub
test
inc
nop
and
add
add
and
add
and
inc
add
addb
add
mov
or
addb
adc
push
adcb
or
adc
test
inc
or
inc
rolb
add
add
sldt
and
add
andb
add
and
push
sbb
popa
shlb
addb
add
inc
inc
adc
push
adc
adc
add
addb
add
adc
add
add
add
add
adc
addb
add
or
sbb
add
cmp
add
adc
add
and
and
movsb
andb
adc
and
dec
pusha
add
adc
or
or
dec
addb
add
add
add
xor
push
add
adc
add
or
add
les
adc
add
test
sub
add
add
and
adc
add
push
gs
xor
add
adc
inc
or
inc
test
adcl
mov
orb
add
add
inc
sub
inc
add
add
add
inc
add
add
push
xorb
add
add
or
jl
add
add
add
add
add
add
add
add
addb
adc
add
addb
add
addb
adc
dec
xchg
mov
pusha
add
test
or
adc
inc
or
add
mov
add
or
add
mov
adc
and
add
inc
adc
cltd
rclb
bound
add
adc
dec
mov
and
inc
xor
xor
push
or
inc
inc
and
or
add
add
add
or
inc
adc
pop
sbbb
adc
addb
mov
or
or
pusha
adc
push
cmp
adc
adc
adc
add
xchg
addb
addb
add
and
pusha
andb
adc
shlb
andl
adc
inc
or
push
add
dec
push
add
push
sbb
add
movsb
inc
or
xor
add
add
adc
add
cwtl
rolb
addb
addb
mov
add
pusha
add
add
adc
mov
inc
add
adc
inc
push
add
adc
add
xor
add
and
inc
add
shl
movb
add
add
add
add
add
add
xor
adc
cmp
adc
dec
inc
sub
add
mov
and
mov
addb
push
fs
add
jo
and
mov
add
add
inc
adc
add
sbb
add
add
and
and
adc
add
addb
mov
or
add
enter
add
sub
add
add
or
add
add
push
addb
call
sbb
inc
sub
or
inc
add
cmp
inc
or
adc
add
add
or
andb
xor
in
je
adc
test
and
or
inc
or
add
add
add
into
mov
add
add
add
add
or
pop
addb
dec
inc
push
pop
inc
pusha
add
inc
lock
add
out
enter
adc
xor
add
or
adc
les
add
add
add
add
add
sub
add
sub
add
or
add
add
and
adc
add
add
or
mov
add
cmp
push
add
xchg
nop
or
add
add
test
dec
rcll
or
add
add
add
add
add
add
sub
nop
add
add
push
mov
add
or
add
adc
xor
add
cwtl
adc
add
xchg
rclb
addb
dec
add
mov
adc
popa
movsb
mov
sub
or
add
add
andb
jo
addb
popa
and
xchg
add
nop
nop
mov
add
add
adc
xchg
inc
add
adcb
cmp
or
push
data16
inc
adc
add
imul
add
xchg
adc
add
mov
and
pop
nop
nop
mov
pusha
roll
add
adc
jne
inc
add
icebp
cwtl
add
add
add
or
inc
inc
sbb
push
add
add
add
ljmp
sub
mov
in
push
inc
sti
movsl
pop
sbbl
addr16
mov
and
out
cld
mov
outsb
cmp
cmc
add
or
aad
add
int
icebp
repnz
push
div
outsl
imul
testb
ljmp
or
cmc
out
lock
repnz
in
repnz
jno
push
mov
wbinvd
jg
push
xchg
lea
psubb
mov
movsl
insl
icebp
add
and
test
push
cmpsb
mov
and
incb
mov
loope
mov
andb
loope
std
add
add
insb
mov
jne
xchg
mov
enter
pop
sbb
xchg
stos
push
or
sub
jp
fs
insb
jge
dec
add
jbe
xchg
push
out
int
push
push
imul
mov
xchg
addb
jmp
mov
or
mov
pop
xchg
cmp
aad
repnz
cmpb
mov
mov
pusha
inc
and
sti
inc
sbb
divl
test
cmp
xchg
scas
add
test
or
or
sub
push
pop
xchg
cmpb
xchg
jg
pop
or
fistps
xorb
mov
subb
mov
lret
aas
lea
or
fdivrl
xchg
popa
mov
idiv
insb
push
test
adc
push
aaa
cmp
or
outsb
lahf
pop
xchg
cmpb
add
popa
mov
not
inc
sub
gs
clc
inc
test
test
cmp
jmp
mov
sub
mov
lea
aam
insl
fcompl
subb
jmp
loope
add
dec
and
das
xchg
loope
in
fs
mov
pop
pop
push
pop
hlt
movsb
lret
sub
sahf
loop
pop
xchg
mov
pop
push
int3
shll
sub
sahf
shlb
xchg
mov
push
jg
js
xor
sbb
jmp
pop
jge
je
and
mov
insb
jg
je
mov
ljmp
pop
out
lds
cmp
cli
mov
adc
cmp
cld
stc
pusha
pop
mov
jne
mov
in
mov
add
shlb
cmp
cmp
mov
bound
xchg
jno
xchg
aam
jmp
bound
jne
push
rcl
adc
and
orb
mov
dec
mov
insl
push
out
or
add
test
ss
mov
imul
js
dec
sahf
jmp
pop
push
mov
sbb
testb
xchg
out
and
inc
pop
jns
sbb
nop
imul
out
lock
ret
fs
insb
dec
lods
movsl
insl
lock
out
mov
fs
popa
mov
sub
testb
add
or
pop
stc
hlt
pop
jle
add
xor
iret
xchg
js
push
xchg
xchg
aam
mov
out
mov
imul
jge
xchg
xor
mov
clc
and
mov
and
out
aas
incb
mov
or
add
jecxz
inc
fsubr
in
jle
cmp
div
insb
jecxz
inc
bound
notb
jmp
std
insl
fs
add
dec
shl
out
test
and
outsb
je
xchg
sub
test
popa
xchg
sarb
out
fs
add
sub
push
jne
test
pop
xchg
sub
xchg
xchg
mov
in
xchg
sub
lea
mov
dec
shl
test
xorb
popf
fistpll
xchg
cmp
pusha
in
or
bound
testb
out
out
xor
push
add
test
pop
xchg
sub
mov
or
bound
testb
xchg
cmpb
cltd
push
and
add
adc
popf
pop
js
xchg
cmp
push
jns
arpl
testb
rolb
cmp
divl
or
jmp
sbb
idivl
jecxz
dec
jecxz
enter
jp
enter
mov
jne
and
xor
push
sahf
sub
pop
xchg
fucomp
fdivr
mov
push
jg
popa
lret
rorl
mov
add
icebp
hlt
cmp
stc
sub
jmp
or
iret
insb
xchg
ds
mov
inc
mov
movb
jg
push
xchg
jmp
push
testl
push
jle
sub
jo
jo
or
xchg
cli
je
mov
mov
add
add
in
testb
or
ja
mov
cli
insb
mov
jns
xchg
or
aam
xlat
or
push
inc
xor
jo
xorb
stc
sub
lock
imul
cli
insb
adc
movl
push
jne
iret
clc
add
or
adc
adc
aam
insl
sbb
sbbb
lahf
popa
loope
ljmp
mov
xor
and
sbb
test
add
inc
jmp
mov
aam
testl
popf
or
lods
sbb
cmpsl
divb
gs
push
push
sbb
add
mov
jbe
fs
cmp
iret
mov
add
out
or
jmp
xchg
adc
roll
sub
jle
insb
sbb
push
lock
jg
cmp
in
cli
jo
jecxz
sub
not
insb
mov
and
int3
stc
dec
and
cmc
add
and
cmc
and
push
add
add
pop
add
add
pusha
add
push
or
imul
test
fcmovnbe
sbb
out
add
dec
inc
roll
ss
dec
ds
or
mov
dec
aad
outsl
int
or
jmp
icebp
repz
or
nop
push
sbb
movsl
fistps
loope
aam
xor
adc
or
out
ljmp
fadd
int
bound
out
jne
ss
inc
inc
push
fidivrl
add
mov
and
sbb
cmpsl
sbb
dec
dec
out
or
test
adc
sub
pop
aaa
cs
pop
out
test
inc
mov
in
lds
lret
push
int
push
push
pop
stos
sub
test
int3
push
imul
jnp,pn
inc
jmp
hlt
push
dec
and
xor
push
or
xchg
pop
pop
adc
into
pop
lock
out
adc
movl
mov
cmc
fcoms
ficoml
lds
pusha
lods
ficoml
in
xor
adc
add
adc
mov
nop
mov
fisubs
iret
push
mov
jle
inc
add
add
adc
je
clc
into
add
dec
inc
inc
fsubl
test
outsl
jne
sub
arpl
sbb
mov
fmuls
dec
inc
dec
pop
out
cld
push
cmc
jae
add
lods
push
hlt
cmp
and
jbe
ja
adc
pusha
dec
cld
ficoms
aas
jbe
loope
fprem1
push
adc
push
cmp
pop
int
cli
push
in
or
xchg
mov
xor
cli
scas
sbb
or
or
mov
add
inc
ja
jbe
mov
sub
test
pop
or
dec
je
aam
cmp
add
setp
shlb
jg
jne
jmp
aad
nop
addr16
imul
lods
add
cmp
adc
pushf
jbe
gs
jle
fadds
fdivl
out
test
lock
pop
jne
jmp
addps
add
push
add
pop
push
arpl
jbe
jl
push
xlat
mov
add
aam
cmp
adc
push
cmp
pop
jmp
popa
mov
pop
cld
icebp
daa
add
test
or
int3
jbe
js
icebp
add
repz
addr16
cli
lods
or
pop
add
sbb
iret
xchg
inc
fs
outsl
mov
add
inc
loope
pop
repz
push
xor
fldenv
lock
mov
xor
lock
jo
data16
jle
fisubl
dec
inc
mov
jecxz
cmpsl
push
adc
jp
adc
adc
push
inc
arpl
adc
add
daa
cwtl
jb
sbb
cmp
inc
push
jnp
jg
rcr
cwtl
inc
scas
cmpl
mov
lret
cmp
idivb
dec
fldt
jb
int3
inc
js
inc
inc
add
jo
daa
pop
xchg
fucomip
inc
aam
stc
andl
pop
je
and
pop
and
mov
fs
out
stc
push
dec
cli
xor
incb
roll
xchg
lock
cmc
lahf
in
outsl
and
mov
aad
pop
and
rcll
or
arpl
andl
inc
out
add
jne
ds
call
lods
xchg
pop
jmp
lods
jmp
mov
adc
push
push
mov
icebp
mov
push
scas
cmc
rcrb
pop
and
inc
out
pop
sub
stc
imul
pop
and
insb
adc
dec
mov
adc
neg
pop
dec
mov
sub
hlt
or
add
pop
movsb
xchg
add
testl
mov
or
cmc
inc
pop
call
add
insb
lock
fsubl
imulb
cli
out
push
cmp
add
add
stc
dec
mov
add
fistl
add
or
pop
cmp
ljmp
shll
stos
add
aaa
fs
imul
fstl
repz
adc
cmc
jl
andl
movsl
pop
addb
or
add
xor
add
adc
xor
js
dec
int
out
or
insl
sbb
out
xor
iret
dec
lock
add
inc
push
cmp
gs
dec
arpl
subl
movsl
rorb
xor
xor
inc
icebp
lahf
inc
jle
or
push
cmpsb
jne
jb
ss
loopne
lock
movsl
je
pop
les
or
xchg
dec
xor
push
sub
int3
test
movsb
sbb
daa
add
in
jecxz
fists
test
es
fsubl
cmp
xor
push
div
ljmp
add
add
xor
jge
sti
mov
xchg
jle
or
movsl
pop
push
inc
pop
add
mov
mov
std
leave
pop
mov
or
cmp
cmpl
mov
push
cmp
test
xchg
sti
cmc
test
adc
and
adc
js
lcall
loop
or
adc
fs
or
gs
sbb
roll
dec
jne
psubq
xor
or
pop
shr
cld
sbb
inc
xchg
inc
shr
add
repz
outsb
popa
jl
imul
fldln2
xchg
out
pop
jbe
jecxz
notb
cmp
xchg
push
fidivrs
dec
push
test
pop
push
in
movsb
cmp
test
jge
add
push
test
loop
pop
mov
sbb
mov
test
jge
mov
mov
cmp
xchg
pusha
loop
push
test
aad
icebp
cli
mov
and
push
push
roll
mov
adc
rcrl
fs
cmp
adc
push
cmc
sbb
jp
lock
xchg
repz
loope
push
jo
add
sbb
adc
add
iret
and
xchg
mov
fiadds
jg
icebp
and
divb
mov
cmp
ss
fnstenv
push
icebp
hlt
rorb
xchg
jno
xor
ljmp
xor
pop
int
out
insb
or
adc
mov
mov
fcmovu
sbb
push
les
add
and
add
dec
sub
pop
xchg
jle
pusha
xchg
add
aaa
lods
stos
jnp
mov
and
sti
adc
or
pop
push
notl
mov
cltd
mov
outsb
mov
dec
lds
fstl
ret
std
out
push
mov
aas
jbe
insl
sub
jle
add
lret
xchg
pop
jmp
lock
inc
xchg
sbb
pusha
add
jl
ja
or
es
idivb
sbb
jbe
cs
sub
dec
out
aam
enter
out
sub
sub
add
mov
imul
mov
clc
xor
cmp
lahf
add
mov
adc
mov
cwtl
fiadds
mov
enter
push
xorl
dec
xchg
jne
insl
cmc
cli
pop
xchg
dec
hlt
pusha
lret
sbb
stc
sub
addl
cmc
dec
add
or
mov
das
pop
and
pusha
cmp
in
test
push
lock
dec
loope
xor
pushw
mov
dec
mov
mov
es
sbb
dec
and
fs
jg
lds
out
xchg
insb
push
add
mov
add
pushf
pop
iret
and
aad
jbe
lea
push
mov
pusha
xor
inc
cmp
gs
mov
repnz
dec
adc
movsl
and
and
mov
gs
xchg
and
imul
adc
add
lcall
xchg
inc
sti
jge
adc
neg
sti
or
add
mov
icebp
mov
push
pusha
sbb
adc
movl
push
dec
jbe
jns
add
jno
in
sub
imul
push
cmc
mov
frstor
pushf
gs
inc
mov
or
ss
inc
mov
mov
adc
out
push
notb
adc
insl
add
popa
or
stos
test
test
mov
gs
dec
in
popa
fprem
xlat
pop
bound
in
xor
ljmp
repnz
adc
dec
sub
lock
or
sbb
mov
lds
or
xchg
std
fisubl
int
clc
stos
xchg
sub
mov
jecxz
inc
and
lea
loopne
jmp
cmp
mov
or
add
movsb
jg
lea
lock
push
xchg
pop
sbb
cmpb
push
std
xchg
add
add
addr16
pop
cs
pop
add
and
adc
in
push
cmpsb
lret
cwtl
xor
cmp
icebp
sar
test
shrb
fsubrs
cmc
sahf
pop
push
push
stos
or
push
mov
orb
jnp
or
in
adc
loope
mov
repnz
fsubrl
sbb
sub
xor
fnstcw
dec
jo
push
xor
xorl
data16
cmpsb
add
mov
pop
icebp
ss
dec
test
js
add
dec
cmp
push
xchg
pmaxub
and
pop
popa
mov
insb
pop
jnp
push
ret
ja
inc
fs
push
push
add
hlt
add
lea
repz
ss
decb
loop
aaa
add
adc
or
mov
or
fists
mov
mov
xchg
out
or
test
inc
scas
cltd
xchg
add
jns
mov
xchg
or
imul
outsb
xorb
mov
pop
aam
fisttpl
stos
push
and
push
xor
fs
mov
and
add
je
fcoml
stos
imul
jmp
shr
sbb
shr
push
mov
inc
movsl
lret
lods
sbb
fsubrl
cli
mov
or
mov
insl
insb
icebp
inc
inc
sub
icebp
add
cmp
shl
arpl
xor
fsubrp
fistpll
ss
movb
out
ja
sub
sahf
inc
mov
mov
jb
insb
imulb
inc
stc
test
mov
cmp
nop
test
test
stos
jmp
mov
test
arpl
inc
mov
ret
or
cmp
pop
sti
sub
push
mov
out
cmp
cmp
add
dec
roll
pop
push
mov
out
mov
add
testb
out
cmp
hlt
repz
ret
loopne
mov
sahf
xchg
adc
and
push
cmpsb
notb
push
incb
push
cmp
add
mov
sbb
push
out
stc
sub
lea
test
mov
fistpll
add
dec
xchg
xchg
repz
jo
jne
repnz
aaa
subl
fisubs
nop
xchg
dec
add
jmp
fidivrl
lods
fdivs
mov
sub
jb
push
cmp
sahf
and
fs
das
pop
ss
iret
outsb
mov
or
enter
or
mov
shrb
cmc
mov
lock
shrl
das
fs
jb
scas
add
or
testb
or
hlt
mov
fs
ds
and
or
faddl
or
js
idivb
push
add
push
lock
adc
sahf
xchg
cmp
test
pop
xchg
inc
daa
mov
inc
stos
mov
dec
fbld
aam
lcall
ja
pop
add
mov
sbb
xor
pop
dec
mov
dec
addl
push
es
cmpsb
cmc
dec
jle
jne
cltd
test
pop
add
mov
movsl
lahf
sub
idivb
mov
jb
mov
jg
nop
loope
out
push
mov
cmp
setbe
ja
lds
mull
xor
in
cltd
xchg
mov
jae
lcall
mov
cmpsb
outsl
push
jecxz
je
rcll
test
add
roll
and
pop
cmc
gs
aam
fs
push
fcomi
add
inc
out
jge
orl
mov
pop
addb
sub
roll
rolb
movsb
mov
add
mov
mov
test
adc
or
or
lahf
pcmpgtb
jle
pop
push
out
cmc
mov
xchg
xor
adc
mov
arpl
mov
scas
sub
pop
mov
jb,pn
and
fsubl
mov
iret
jg
movsb
mov
mov
mov
addr16
shlb
decl
ret
xchg
cltd
pop
xchg
add
add
and
imul
mov
xor
fs
addr16
insb
adc
rcll
inc
mov
xchg
ds
out
mov
or
mov
es
loope
shlb
lock
std
scas
mov
cltd
mov
jae
ds
loope
rcll
repnz
insl
inc
add
outsl
push
sbb
bound
testb
sbb
fnsave
adc
outsb
and
cmc
bswap
pop
out
pop
aaa
mov
mov
jg
push
aam
mov
add
and
js
push
out
jle
dec
and
cmpsb
mov
mov
mov
xor
ds
mov
fadds
testb
inc
xchg
push
cmc
or
mov
add
inc
jle
push
in
cmpsl
add
out
imul
sti
jo
clc
pop
mov
jb
popa
scas
fisubs
ret
test
add
mov
out
push
cmp
pop
mov
xor
dec
and
movl
sti
lds
negb
gs
pop
or
dec
scas
incb
sbbb
xchg
adc
mov
adc
push
or
fs
add
xchg
out
daa
pop
cli
movsb
loope
push
jnp
js
inc
movsb
testb
sub
loope
xor
dec
shll
popa
pop
sub
or
adc
lahf
popa
sbb
in
stos
lods
dec
mov
in
cmp
adc
cld
mov
mov
int
push
cltd
insb
lods
adc
outsb
in
data16
push
cmp
je
push
xchg
pop
push
xchg
notb
push
ret
out
xor
sbb
mov
pop
je
adcl
jp
femms
out
pop
lret
mov
mov
sahf
mov
jae
sbb
sub
movsb
xorb
jle
sbb
roll
and
arpl
pop
test
lret
jp
inc
frstor
xlat
pop
sub
out
aam
movl
imul
in
pop
idivb
or
call
fs
mov
mov
pusha
jg
ret
pop
jno
ss
cmpsb
in
ja
and
daa
cs
lods
gs
pop
pop
testb
jo
add
sub
iret
subl
aaa
and
gs
inc
fstp
dec
lahf
xlat
sbb
inc
hlt
ja
scas
data16
add
and
sahf
jmp
lods
test
jle
add
out
sub
push
mov
mov
pop
mov
scas
testb
cmc
mov
stc
ja
stos
sub
ss
mov
mov
loopne
add
sbb
test
jge
xchg
add
push
push
pop
and
fs
cmp
mov
jo
aad
sub
notb
sbb
push
jle
mov
pop
inc
mov
lds
sub
lds
decl
fs
enter
push
sub
add
push
push
mov
arpl
lds
rcrb
cmpsl
hlt
aaa
ror
aam
fcomi
icebp
into
mov
test
xchg
scas
add
sub
popa
mov
test
xchg
in
add
and
fs
aas
test
push
ds
fiaddl
push
pop
and
mov
adcb
or
testl
popa
stos
inc
xchg
adc
sahf
mov
aaa
repnz
aad
add
mov
push
push
mov
or
imul
push
push
sub
add
pop
sbb
push
cli
mov
loopne
mov
rclb
repnz
mov
cmp
ljmp
xor
loope
shl
push
and
mov
xchg
movsl
add
loope
dec
sti
fs
push
pop
adc
xor
test
add
add
hlt
in
pushf
sub
dec
or
sar
stos
add
xchg
popa
fcomi
test
fcmove
xor
popf
add
jl
test
add
fcoml
div
adc
aam
test
mov
daa
push
dec
negb
push
ret
out
icebp
jns
test
push
outsb
fs
test
lcall
xlat
jne
jmp
out
jb
fsub
ds
fs
shl
mov
add
sub
movsb
cs
aad
ficoms
mov
or
daa
sub
jmp
div
or
sub
cmpsb
stc
sub
push
mov
in
repz
add
popf
cmp
sbb
jo
leave
adc
jne
add
iret
shrb
into
xchg
out
and
ret
push
mov
pop
push
mov
pop
outsl
xor
lds
testb
or
test
jne
sub
mov
push
jmp
xchg
rol
scas
cmpl
orl
fbstp
lock
testb
jae
popl
or
adc
xchg
je
iret
mov
pop
loopne
mov
mov
imul
pop
dec
sub
jns
imul
pop
mov
negb
cmc
js
mov
add
adc
xor
aaa
jmp
mulb
xchg
push
mov
cmpsl
fwait
add
dec
and
fs
lcall
lret
js
jl
mov
in
jo
push
inc
push
cmp
and
mov
lcall
repnz
pop
dec
nop
test
xchg
add
iret
sti
ret
inc
add
je
push
pop
addb
adc
mov
inc
xor
imul
inc
sub
push
mov
xor
jg
nop
and
mov
adc
repz
jae
mov
push
and
daa
add
fildl
cmp
icebp
mov
mov
pop
cmp
scas
cli
push
cmp
shrb
call
or
add
xor
inc
mov
rcr
andb
push
test
aam
sbb
and
cli
pop
push
push
out
pop
fs
out
popf
ds
jmp
iret
shl
or
mov
push
jecxz
mov
and
clc
stc
in
push
lods
add
push
ljmp
cmp
test
add
fiaddl
mov
cmc
push
mov
fisubs
push
lahf
pop
add
jg
cld
int
ret
jp
mov
std
mov
sbb
pop
in
call
sbb
cmp
scas
adcb
push
sub
in
xchg
testl
stos
cmp
pop
mov
inc
xchg
mov
and
mov
loop
out
add
rol
add
popa
inc
in
je
xor
sub
mov
or
divb
jne
repnz
lock
repz
or
addr16
incl
std
mov
or
ret
or
add
arpl
fcoms
fimull
add
testb
fs
cwtl
mov
xchg
add
fisubl
add
int3
jmp
lock
fdivrl
sub
inc
clc
add
cli
jae
idivl
sbb
xor
sub
pushf
shrl
js
imull
xor
ja
mov
int3
test
cmp
sahf
fs
dec
and
out
cli
or
and
add
and
icebp
add
mov
clc
pop
xchg
gs
imul
cmpsl
xchg
sti
aas
cwtl
ret
inc
and
inc
dec
add
mov
insb
mov
ljmp
std
dec
mov
jae
adc
subl
mov
cmp
aad
add
mov
mov
in
fs
cwtl
rclb
je
add
add
add
pop
hlt
pop
mov
add
fldcw
push
mov
and
xchg
aam
aaa
dec
and
and
les
mov
lds
inc
hlt
in
mov
and
mov
mov
pop
push
lret
cmc
mov
and
pop
in
add
outsb
pop
jo
aaa
shll
lret
je
pusha
or
out
add
ss
inc
idivb
pop
aam
rcrl
leave
jnp
add
pop
nop
mov
and
adc
jmp
sbb
jg
cli
adc
icebp
out
out
mov
daa
adc
test
dec
sahf
or
jae
jl
into
cmp
ds
lahf
sbb
aam
push
aad
das
repnz
mov
mov
mov
add
in
imul
testb
or
xlat
adc
push
repz
cmovnp
stos
push
jbe
cmp
nop
or
xchg
add
mov
popa
data16
aam
mov
gs
or
mov
cli
xor
mov
mulb
test
pop
inc
add
cs
xor
xchg
xchg
inc
push
scas
sub
pop
push
bound
push
push
push
test
insl
pop
adc
xor
xor
add
cmp
out
cmp
push
sti
ret
sub
test
sti
jg
jl
xchg
ror
loopne
negb
inc
jb
add
popa
addb
xor
sbb
sbb
test
inc
cld
clc
sbb
mov
test
push
enter
xor
mov
add
jecxz
jo
test
inc
imulb
jle
in
in
cli
jne
bound
data16
out
fadds
fsubrl
push
popl
xor
popa
jmp
lds
mov
fisubrl
sahf
bound
cmp
negl
xlat
sbb
jle
in
ja
and
or
mov
ret
in
insb
push
push
inc
sahf
pop
add
or
jo
clc
or
inc
std
scas
add
jb
arpl
cmc
cs
push
jge
fnstcw
aad
lea
xchg
sti
mov
mov
sub
stc
jno
orl
aad
cmp
adc
in
xor
add
xchg
mov
popf
sub
fs
sbb
punpckldq
or
or
imul
stos
adc
hlt
jne
movsb
icebp
add
adcl
ja
xchg
lea
adc
mov
in
sub
jo
push
div
add
arpl
repz
or
sbb
aam
rolb
adc
mov
das
popf
jno
xor
je
es
test
insb
jmp
pop
movsl
pop
stc
fs
popf
testb
sbb
loope
test
push
ss
subl
xor
add
mov
out
jmp
dec
xchg
loop
mov
paddw
xor
xchg
punpckhwd
testb
roll
sbb
fidivl
add
stos
out
adc
add
and
dec
add
mov
inc
adc
inc
in
mov
test
and
lea
add
or
fs
popf
pop
and
cwtl
sbb
mov
dec
push
xor
movsb
sbb
imul
xor
out
inc
xor
add
aad
xchg
lds
dec
cmp
andl
arpl
mov
xchg
add
js
cs
les
push
mov
adc
mov
sbbl
daa
add
fisttpl
add
subb
xchg
push
cmp
ss
fs
les
jnp
int3
std
je
in
xor
push
arpl
cmp
andl
cmp
daa
inc
jmp
rorl
adc
adc
mov
mov
sbb
icebp
data16
rcl
jne
frstor
and
inc
mov
fwait
sub
xlat
adc
xor
fistpl
divl
pop
pop
ret
in
iret
fildl
arpl
cld
xlat
fs
iret
cltd
loope
addb
jmp
push
sbb
add
jno
inc
adc
push
or
fimuls
adc
arpl
shl
jg
jmp
cmp
mov
icebp
in
push
pushf
mov
fistps
mov
or
mov
mov
fsubs
pop
mov
in
add
adc
xchg
adc
mov
mov
lods
mov
mov
lcall
cmpsb
jecxz
xchg
add
add
sti
sub
lret
mulb
mov
push
lods
or
testb
aas
adc
aad
fs
jecxz
dec
fsts
add
movsl
adc
divb
sub
or
rorl
xor
scas
cli
jno
inc
add
sar
push
lcall
stc
loopne
sti
fs
es
jle
mov
mov
mov
mov
mov
imul
mov
xor
js
bnd
out
adc
lea
push
dec
pop
and
add
dec
cmp
xor
jbe
fisubl
add
jl
push
fs
adc
push
add
adc
lock
mov
jle
shlb
sub
das
cmp
in
mov
out
add
inc
sti
mov
add
inc
int
inc
sub
cmc
and
and
sbb
push
cmc
cmp
sub
hlt
or
clc
cmp
loopne
jl
or
inc
cmp
loopne
lcall
rcl
mov
in
and
sbb
icebp
cmc
xchg
stos
insl
fmuls
lret
outsl
movsb
add
push
cmp
ds
mov
into
shll
sbb
dec
jmp
add
cs
movsl
jne
cmp
adcb
sbb
lcall
dec
negb
loopne
xchg
dec
cmc
out
cmp
xchg
jmp
dec
insl
sbb
jns
stc
xchg
lds
xor
add
jnp
jb
fnsave
aad
repnz
loope
aas
adc
xchg
or
movsl
add
push
shll
test
xor
add
dec
popa
fistps
or
cld
jmp
cmc
jl
xchg
adc
icebp
add
and
push
lret
testb
dec
xchg
add
add
pop
fs
cs
and
mov
add
aas
loope
outsb
sub
push
daa
movsb
add
push
jl
movsb
dec
lahf
adc
test
pop
leave
mov
decb
mov
jge
popa
jmp
gs
and
mov
add
pusha
pop
dec
loop
adc
das
push
pop
stos
hlt
add
pop
je
sub
jno
and
cmp
cmp
aad
fisttpl
or
push
out
pop
or
push
push
negb
mov
sub
or
jns
imull
jbe
sub
dec
jns
add
in
movsb
dec
arpl
imul
inc
or
add
lock
xchg
dec
inc
push
cmp
adc
cmc
daa
mov
nop
test
adc
test
push
iret
movsl
push
mov
adc
or
sub
std
add
pusha
push
mov
cmp
int3
aaa
cmp
test
fs
lcall
sbb
insl
mov
in
or
cmc
sbb
xchg
adc
jmp
mov
jmp
pop
insb
pop
rcrb
mov
dec
sub
inc
fs
adc
adc
std
addr16
lret
pop
loop
adc
lcall
pop
insl
daa
stc
cmp
es
sub
shll
jbe
popf
leave
sub
and
add
mov
push
clc
dec
adc
leave
aad
in
xor
lret
mov
sub
int3
or
ljmp
adc
lds
lret
out
dec
fiaddl
fs
cmp
or
jns
pop
movsl
testl
xchg
mov
mov
iret
lods
mov
lods
out
test
jmp
lods
and
inc
inc
add
push
loop
lock
push
jno
cltd
jae
mov
enter
call
dec
aaa
pushf
andb
testb
xlat
xor
add
cmp
or
dec
ret
or
jp
pop
xchg
push
out
aad
mov
mov
inc
xor
add
jg
cmp
fs
pop
sub
push
fbld
movsl
sarl
cmp
xorl
inc
push
ret
jg
dec
pop
cmp
in
int3
xlat
std
xlat
and
test
xchg
xor
testb
push
pop
jmp
adc
fildl
jmp
test
jl
sbb
add
pop
mov
cmp
shll
js
scas
jl
mov
dec
iret
cmp
cwtl
aad
test
inc
and
mov
mov
out
add
int
push
xchg
leave
test
ja
add
sub
add
xchg
movsb
mov
xor
in
jge
test
aaa
aas
cmpb
nop
xchg
fadds
mov
jno
lods
mov
notb
iret
das
rclb
call
mov
shlb
xchg
jns
inc
test
xchg
push
inc
lock
clc
popa
ds
jmp
push
in
out
repz
adc
cmp
xchg
mov
mov
add
pushl
pop
rclb
negb
or
ja
popf
lds
add
out
fstps
add
movb
lea
mov
adc
xchg
sub
sub
jb
neg
pop
scas
xchg
es
mov
stos
push
jbe
inc
fs
in
scas
mov
in
fiadds
repnz
mov
pop
sbb
jecxz
adc
add
mov
sub
lods
jg
mov
les
fs
int
adc
mov
xor
fs
arpl
iret
xchg
movsb
sbb
cltd
mov
inc
in
jno
in
push
and
mov
mov
adc
mov
imul
pop
es
aad
fdivrs
xor
pusha
or
hlt
fnstenv
pop
jle
add
inc
pop
add
fdiv
jo
fcmovnb
bound
data16
lret
fwait
mov
mov
mov
adc
xchg
shrb
ret
and
cltd
pop
push
ret
and
adc
adc
push
sbb
cmc
mov
in
dec
das
push
ja
pop
popa
mov
lds
lods
imul
fstpl
lahf
iret
add
mov
ds
inc
cmc
andb
or
mov
lret
fsubs
cs
pushf
aad
leave
mov
mov
pop
dec
insl
ljmp
or
sti
dec
call
data16
cmp
aam
add
xchg
fnsetpm(287
loopne
js
push
pop
push
lea
test
dec
ja
add
aaa
sub
negb
xor
aas
mov
push
loop
dec
clc
mov
cmp
pusha
add
inc
xor
adc
and
push
imul
push
mov
add
and
movsl
popa
dec
pop
xchg
and
pop
mov
rorl
mov
shlb
adc
add
ss
in
ret
or
bound
push
stos
jp
ja
inc
inc
les
jb
jne
cmp
stc
adc
and
mov
shlb
inc
push
imul
scas
or
mov
dec
cmp
xchg
sbb
add
cs
xor
ds
stos
dec
pusha
xchg
call
jae
add
cmc
lock
rorb
jmp
push
push
fsts
fsubl
in
mov
inc
inc
fisubl
aaa
sub
stos
and
mov
cmc
or
fs
mov
fsub
add
insl
or
push
lds
sbb
pop
push
aas
dec
inc
out
or
fmull
adc
pop
xchg
sti
cwtl
lret
subl
mov
add
cmp
xchg
add
mov
add
push
rclb
ja
cld
adc
adc
inc
test
add
subb
adc
loope
jbe
push
or
and
negb
nop
out
mov
pop
sar
std
in
in
fistpll
stc
sbb
mov
leave
jmp
clc
lret
mov
adc
adc
adc
cmpsl
out
jmp
iret
insb
repnz
mov
dec
mov
cmp
jmp
pop
cmpsb
and
push
sub
jno
push
jo
scas
add
aaa
js
mov
pop
or
mov
adc
xor
xchg
nop
add
scas
fst
cmc
int
fstps
push
imul
in
ss
incb
adc
add
test
sub
cltd
in
pop
fiaddl
sub
out
cmc
test
add
ret
rcll
mov
popa
lahf
jecxz
push
add
das
sbb
xorl
sbb
fldenv
or
int3
fmul
jne
pop
inc
cmp
out
cwtl
push
je
inc
cwtl
jae
add
push
cmpsb
mov
outsb
pop
testl
cmpsb
fistpll
test
dec
imulb
jns
xchg
les
adc
popf
ss
jne
add
mov
adc
jge
jge
cmp
jne
popa
sub
imulb
jecxz,pn
pop
cltd
add
test
shlb
pop
mov
add
or
jle
clc
adc
inc
fs
push
and
add
cmc
aaa
add
out
in
adcb
fs
lods
adc
fnsave
adc
lcall
sbb
add
or
add
mov
call
scas
fs
push
add
gs
mov
or
pop
mov
negl
mov
and
adc
cmp
das
insl
cmpsl
mov
jo
jbe
lcall
and
xchg
inc
push
std
das
inc
mov
adc
popf
imul
xchg
sub
pop
sbb
cmp
mov
sti
cmpsb
mov
dec
push
pmaxub
push
aad
int3
pop
cmp
mov
insb
mov
cmp
mov
jno
dec
cmp
sar
dec
jle
fcoms
mov
dec
mov
imulb
xchg
xchg
imul
and
shl
lea
adc
enter
or
cs
pop
xor
sti
shlb
repnz
xlat
mov
jno
in
adc
pop
sbb
jb
or
cld
and
je
dec
xorl
add
gs
scas
jmp
lods
filds
sub
shl
insl
pop
adc
fs
add
mov
cwtl
cmovbe
cmc
adcl
mov
ja
decb
movsb
mov
aad
repz
mov
mov
mov
dec
sbb
cmp
xor
es
fwait
cmp
xchg
idiv
jmp
and
int3
pop
pop
dec
insl
es
pop
leave
icebp
xor
arpl
idivb
es
neg
cmc
inc
imul
inc
push
push
mov
and
ss
jle
fstpl
aad
ret
xor
dec
dec
decl
into
stos
push
sti
jp
cmp
jecxz
fs
sbb
or
jmp
mov
inc
arpl
out
adc
test
sbb
adc
fsubl
push
clc
pushf
add
enter
lret
jmp
xor
sub
add
sbb
mov
and
cmc
icebp
jbe
pop
loope
pop
cmpsb
data16
mov
jmp
pop
repnz
cmc
mov
xchg
dec
or
cmc
cltd
push
push
pop
popa
insb
inc
out
cmpsb
sbb
lret
inc
jb
js
nop
and
lcall
pop
rcrl
ds
push
sar
xor
mov
xchg
testl
pop
sahf
mov
out
and
dec
sub
out
daa
call
pushf
movsb
adc
jnp
adc
xlat
hlt
std
je
pop
pop
mov
repnz
in
sub
mov
push
dec
int
nop
repnz
fcoms
out
lods
in
imul
aam
jns
imul
adc
insb
mov
icebp
push
jle
idiv
sbb
sahf
sbb
in
or
jl
mov
xchg
fs
aas
mov
imul
pop
mov
divb
pop
mov
cltd
push
push
popa
daa
imul
sbb
push
push
dec
icebp
jmp
js
push
or
jmp
mov
and
jno
lcall
call
xchg
xor
inc
sahf
mov
shl
popa
mov
test
popa
jp
adc
xchg
aaa
add
xlat
mov
push
mov
ja
in
imul
loope
decb
les
incl
movsb
stc
fldl
jge
sti
loop
out
add
aaa
repz
push
jbe
outsb
cmp
add
add
pop
or
in
jge
inc
pop
jp
in
jbe
dec
xchg
adc
jl
mov
pop
repnz
adc
fwait
cmp
mov
sbb
cmpsl
mov
xchg
aas
sbb
or
arpl
mov
inc
cli
iret
mov
sbb
pusha
pusha
clc
or
loope
cli
repz
jmp
pop
ss
outsb
push
pop
adc
in
or
and
sub
jae
adc
xor
xchg
inc
mov
and
sub
xchg
pop
inc
add
in
std
mov
hlt
dec
add
inc
cli
fstpl
ret
add
inc
add
cld
xor
pushf
cmc
test
xchg
mov
and
adc
jnp
ficomps
push
imul
cs
aam
test
scas
or
aam
pop
les
ret
cli
mov
fnstenv
gs
xor
jno
pop
jecxz
aaa
cmpsb
sbb
mov
dec
add
cmc
jl
dec
xlat
scas
lahf
mov
test
test
pusha
cmc
bound
pushf
dec
cli
loope
push
pop
or
xor
cmp
xor
ss
faddl
sbb
mov
cmc
adc
nop
rep
clc
test
pop
testb
and
sub
add
rcll
icebp
or
bound
cmp
sbb
and
aas
sti
mov
mov
insb
or
add
mov
dec
mov
stc
push
and
ljmp
inc
cmp
idivl
pop
std
hlt
js
sub
mov
loopne
dec
sub
das
mov
rcl
dec
add
test
or
repnz
icebp
insb
addl
fnstsw
pop
push
and
loop
sub
sti
in
inc
mov
idivb
jmp
loopne
or
push
fmulp
std
mov
fs
inc
and
call
ja
push
jge
lods
testb
sarl
cld
or
mov
hlt
add
xor
mov
ret
mov
icebp
inc
popf
insl
mov
fs
adcl
stos
cmpsb
fisubl
outsl
xchg
mov
subl
mov
out
mov
stc
int
jmp
aad
sub
cli
js
inc
loope,pt
hlt
outsl
push
push
popf
addl
fldenv
pushf
jge
in
in
or
notb
imul
mov
xchg
cmp
mov
sub
divl
add
xchg
or
cmp
pop
jne
xchg
and
into
jmp
cli
adc
stos
jbe
movsb
aam
mov
jmp
ss
push
fs
cmovs
add
xor
sarl
adc
push
idivb
cli
jbe
pop
xchg
xorl
in
mov
in
rclb
xchg
jle
outsb
imul
mov
test
xorb
add
push
loop
or
loop
popf
mov
add
inc
or
popf
ret
bound
cli
js
pop
gs
sbb
adc
pop
pop
dec
jge
sub
fs
mov
xchg
inc
and
pop
pop
popa
jmp
inc
gs
cli
outsb
push
sub
xlat
mov
mov
add
dec
cmp
inc
fs
sbb
xor
fimuls
inc
loope
fs
cmc
xlat
mov
inc
or
and
push
adc
sbb
lods
add
sahf
xchg
add
mov
lock
cmp
imul
mov
inc
xor
ret
test
add
and
in
sub
pop
jno
add
push
lods
xor
mov
cmp
lcall
xor
insb
sub
mov
mov
xchg
xlat
adc
std
pop
sub
repz
or
arpl
jbe
push
add
arpl
push
push
xchg
xor
cmpsl
test
test
dec
jmp
jno
mov
push
mov
test
in
in
fcom
roll
aaa
inc
sahf
sbb
aas
mov
dec
int
push
cmp
push
outsb
ror
and
arpl
jmp
frstor
int
sub
xor
shrb
push
or
and
fldenv
cmpb
mov
or
or
add
add
mov
lret
cli
jns
sub
pushf
clc
add
in
cli
out
movl
jns
xchg
imul
ret
ss
sbb
cmc
pop
or
add
mov
sbb
xchg
jmp
mov
sahf
fs
loopne
sub
and
loopne
insl
out
repnz
pop
test
bound
pop
loope
pop
ret
scas
mov
iret
cmpsb
xor
das
cwtl
adc
sub
mov
push
mov
fwait
mov
sarb
jg
scas
or
dec
test
mov
adc
ficompl
pusha
add
jecxz
push
out
add
push
jecxz
imul
cmp
mov
pop
add
inc
stc
and
scas
add
inc
push
adc
addl
jl
icebp
call
insl
or
inc
xor
fidivrs
in
stc
xchg
divb
int
sub
clc
sahf
call
sbb
add
sbb
clc
inc
mov
mov
sub
pop
fisubs
subb
adcl
jne
repz
into
cli
mov
fs
adc
jmp
mov
jbe
pop
neg
in
sub
les
jbe
hlt
mov
xchg
or
cmpsb
mov
outsl
adc
push
push
mov
mov
cmp
lea
test
mov
or
xor
inc
push
sar
dec
mov
ret
mov
cltd
add
cmp
cs
mov
and
pop
cmpsl
add
push
sbb
push
and
repnz
inc
push
and
fildll
js
cmc
xor
in
popa
inc
lock
iret
mov
fs
stc
dec
mov
fsts
inc
add
dec
rorb
insl
sub
test
pushf
popa
mov
add
je
jle
lds
inc
add
or
jbe
add
and
fstpt
pop
loope
scas
fs
add
fildl
jle
xchg
sbb
lahf
inc
bound
icebp
iret
push
jno
and
sbbb
lahf
nop
lret
movsl
lea
add
or
insb
outsb
jmp
mov
andl
in
sbb
jmp
inc
cli
int
cmp
or
fisubrs
xchg
jbe
std
mov
or
imul
mull
movsl
jp
lods
mulb
cld
mov
cmp
xor
add
dec
inc
in
int
pop
fldt
jle
lock
inc
sbbb
shl
xchg
add
arpl
and
mov
add
dec
outsl
cmc
out
fs
inc
sub
and
shlb
jae
sbb
xchg
sbb
loop
arpl
divl
clc
js
dec
fists
std
jg
push
pop
inc
add
xor
roll
div
pop
cmc
push
les
push
pop
fwait
sub
jge
pop
ss
lret
push
in
cmp
es
sbb
mov
mov
add
mov
sub
mov
cmc
sub
das
xor
mov
adc
jmp
ljmp
hlt
test
test
xchg
pop
imul
cltd
adcl
add
out
xor
out
or
dec
xchg
add
cwtl
out
mov
sti
xchg
add
sbb
cmp
sub
cmp
stos
mov
ja
mov
push
popf
and
sub
add
sbbb
repz
ja
pop
sbb
aad
and
lock
ret
or
cs
add
add
cmp
inc
xchg
popa
dec
shll
sub
xlat
imul
add
test
jle
push
dec
xchg
popf
inc
fs
add
add
mov
mov
adc
das
sbb
negb
test
stc
cmc
or
test
aam
add
pop
jnp
insl
pop
sub
fstps
mov
in
add
xchg
xchg
adc
lea
and
mov
loope
aam
jb
in
gs
mov
ds
xor
inc
xchg
div
pushf
test
and
or
mov
jno
stc
pop
mov
test
andb
add
int
sahf
pop
mov
fcomi
fdivrs
repnz
stc
or
out
or
lea
outsl
inc
sbb
fmuls
sub
loopne
int3
data16
aas
xor
lea
or
in
and
inc
and
loopne
jmp
ret
mov
test
std
jnp
jb
sti
adc
push
or
sub
pop
das
adc
ljmp
jae
pop
push
dec
adc
inc
cwtl
fs
pop
sub
or
mov
rcrb
cmp
adc
repnz
add
out
in
jae
sbb
lods
mov
lret
pop
pop
push
ret
icebp
push
adc
inc
scas
xchg
or
pushf
lods
ret
shll
or
pop
fs
mov
adc
bound
add
int3
adc
push
xchg
sbb
or
sbb
or
and
mov
pop
into
scas
mov
jp
push
repnz
and
or
push
push
add
rol
mov
cmp
fcmovnbe
cmc
sarb
mov
add
inc
sbb
sub
adc
dec
andb
stc
popf
sbb
out
mov
les
ja
xor
in
add
fnstcw
sub
movsl
nop
xlat
incl
ret
rorb
or
push
add
outsb
imul
jmp
fsts
loope
add
div
xor
test
repnz
sub
dec
adc
sahf
jne
cmpb
lods
fs
std
int
lret
stc
enter
sbb
lock
pop
jecxz
cld
ror
xchg
inc
push
mov
mov
pop
repz
inc
lret
dec
jbe
sbb
add
push
mov
xor
xor
sub
cli
xchg
xor
add
lret
div
pop
push
add
dec
add
in
push
pusha
cmc
pusha
icebp
and
outsb
mov
jnp
fildl
stc
dec
add
xor
jg
inc
les
es
or
mov
mov
sbb
stos
pop
push
fs
orl
outsb
sub
cmp
aad
inc
mov
push
cmp
hlt
pop
out
or
ds
into
jmp
pop
fdivs
addr16
cltd
add
pop
dec
inc
pop
cmp
xchg
and
xchg
bound
pop
testl
enter
mov
rcrl
or
pop
leave
or
pusha
push
das
xchg
sti
or
and
insb
dec
repz
mov
dec
into
mov
in
mov
lods
mov
adc
fildll
pop
xor
fisttps
loopne
inc
pop
sti
mov
sub
push
push
add
or
pop
aad
nop
jmp
dec
jge
fdivrp
jmp
mov
pop
adc
imul
push
sbb
add
in
sbb
and
adc
mov
cmc
sbb
loope
cmc
add
mov
inc
xlat
xor
std
cmc
aaa
or
push
enter
push
add
sub
mov
mov
repnz
adc
jb
movsb
or
repz
bound
jnp
rcrb
cmpsb
mov
loopne
xchg
sub
inc
es
stc
ret
jl
dec
xor
add
push
stos
test
sbb
mov
cmp
push
sbb
cs
xor
jae
mov
add
push
out
icebp
popf
or
mov
add
roll
data16
xchg
lods
pop
divb
add
push
cmp
lds
aas
bound
loope
call
lds
aas
in
imul
lcall
xchg
icebp
add
jg
inc
push
test
xchg
fs
push
fucomp
lock
xchg
std
mov
cmp
xchg
xchg
pushf
cwtl
insb
sub
xor
dec
rorl
les
mov
mov
mov
movsl
enter
sbb
sbb
mov
jb
cmp
jno
in
pop
shlb
mov
sbb
dec
push
repz
add
imul
or
push
push
in
pusha
enter
out
add
in
test
mov
jmp
xchg
movsb
iret
add
ret
sti
fs
in
dec
or
shll
add
xchg
inc
mov
pushf
aam
add
xor
outsl
out
movsb
jne
iret
test
divb
cmp
ds
shlb
cmp
cld
jnp
cmc
lret
inc
fiadds
cli
addl
push
add
subl
add
data16
aas
pop
adc
shr
or
sbb
add
add
mov
and
push
loope
leave
out
and
js
or
nop
sub
pop
mov
cli
pop
mov
add
and
mov
iret
mov
roll
and
sbb
inc
mov
scas
loop
cmp
add
push
xchg
mov
mov
lar
icebp
lock
xchg
add
add
rcrl
lcall
dec
inc
dec
push
ret
add
ljmp
inc
lea
push
push
pusha
imul
jbe
and
and
call
sub
sbb
add
inc
cmpb
mov
xchg
and
sti
and
push
xchg
out
pop
in
cmp
or
movsb
inc
add
adc
popa
popf
inc
mov
sbb
mov
das
test
pop
mov
std
fs
inc
inc
jne
clc
add
mov
stos
xor
loop
add
lret
hlt
add
lods
push
fnstcw
cmc
ljmp
das
ret
sub
or
nop
adc
xchg
orl
roll
pop
decb
sbbl
jbe
aam
nop
jne
cmc
outsl
ljmp
cmp
and
pop
or
repz
stos
cmpsb
call
addb
cmc
sbb
pop
sahf
and
xor
and
rclb
lret
adc
add
ds
or
arpl
out
inc
and
push
hlt
adc
lcall
aas
xor
pop
xor
mov
loopne
flds
imul
jb
inc
scas
fsubp
fistpll
xchg
push
lcall
mov
jg
adc
rorb
add
inc
ljmp
pop
add
push
addps
pusha
hlt
or
push
add
mov
pop
adc
popa
aam
notl
movsb
test
cs
xor
test
fcomps
add
sbb
xchg
pop
sbb
js
fdiv
push
cmp
jl
pop
insl
cwtl
lcall
xchg
jmp
xor
xchg
movsb
xchg
fucomip
loope
xor
in
or
or
repz
loope
faddp
fists
add
pop
mov
cmc
mov
jg
js
lods
sbb
stc
jmp
js
pop
inc
dec
data16
and
movsb
push
insl
add
sub
push
lret
pop
repnz
je
and
inc
add
inc
lea
lods
call
cwtl
popf
out
nop
jno
out
mov
cs
pop
sbb
fldt
sbb
pop
jbe
test
lea
jmp
pop
mov
daa
push
cmp
cmpsl
fidivl
add
xchg
push
cmc
ljmp
adc
pop
mov
gs
push
xor
icebp
notb
jns
xor
lret
xchg
testb
inc
movsl
jb
pushf
push
cltd
push
adc
je
mov
sub
fstpl
addb
cmc
and
cmp
stos
jg
add
cmp
out
and
leave
xchg
or
or
es
in
pop
or
jb
nop
jmp
aam
mov
aad
ss
add
lock
cltd
lods
or
shlb
ffreep
repnz
xchg
in
add
bound
hlt
inc
jmp
dec
aas
aad
cld
roll
and
and
stc
xor
add
sub
in
hlt
jnp
push
add
mov
xor
dec
frstor
xchg
arpl
cmp
push
dec
mov
mov
xchg
cmpsl
or
int
jno
addl
inc
inc
mov
lock
mov
sub
test
lea
push
lret
or
fs
xlat
sbbb
outsb
add
lret
popf
es
xor
or
jp
jle
cmc
or
frstor
jge
mov
and
push
add
push
sub
popa
aaa
pusha
jge
mov
inc
xchg
adc
pop
fisubrs
fnstenv
dec
pop
ss
jl
adc
and
push
fists
cmp
pop
xchg
sahf
xchg
pusha
pop
leave
dec
pop
gs
outsb
add
ss
icebp
inc
loope
mov
ss
jmp
js
mov
lahf
into
sbb
jbe
or
test
cmc
and
cmp
add
leave
cmp
callw
adc
mov
sti
inc
and
sub
add
cmp
data16
test
scas
xchg
or
mov
push
adc
out
repz
jmp
and
sbb
xchg
add
insl
ret
cwtl
push
popf
scas
leave
hlt
cmp
movhps
jnp
mov
dec
jae
faddl
mov
sbb
sbb
cmpsb
add
test
adc
inc
pop
or
loope
cmp
mov
or
add
sub
mov
sbb
mov
pop
out
push
or
leave
inc
inc
dec
push
mov
push
nop
fs
stc
mov
sub
sbb
lea
xor
inc
sbb
sbb
cmp
negb
push
pop
cmp
or
fisubs
cmp
gs
mov
out
cmc
cmp
mov
pop
xlat
icebp
mov
out
shl
xchg
or
dec
or
inc
pop
jbe
dec
stc
test
pop
push
fsubl
inc
adcb
mov
in
and
pusha
add
lods
add
fs
decw
add
sub
loope
push
out
cmc
orl
das
add
gs
dec
push
pop
and
xchg
add
pop
adc
into
jns
cmc
out
or
pusha
loope
push
shlb
loope
dec
popa
inc
das
or
sbbl
jbe
rcr
mov
gs
cmc
mov
xchg
xor
push
popa
leave
fsubs
add
lea
ja
loop
cmc
jle
inc
divl
jmp
out
ficompl
andb
fisubl
jp
jo
lret
jbe
arpl
cmc
adcb
and
sti
cmovns
xchg
gs
loope
cmp
fs
std
out
clc
adc
adc
push
xlat
loope
lock
and
std
test
mov
cmc
add
dec
sub
stc
stos
scas
cmpsl
push
pop
push
inc
fs
jmp
cmp
sbb
xchg
les
mov
push
pop
and
arpl
shlb
roll
jl
sbb
pop
enter
add
test
mov
imulb
cmp
lock
jecxz
add
arpl
adc
mov
add
inc
mov
cmp
push
arpl
aaa
out
mov
jbe
rol
cmc
orl
push
mov
mov
xchg
push
movsl
mov
sbb
inc
jg
mov
movsl
in
ficompl
int
pop
jne
mov
and
fs
ljmp
add
popa
leave
pop
fdivp
and
adc
and
mov
or
sub
dec
mov
jmp
dec
xor
popf
or
stc
add
ret
mov
sbb
fdiv
int
lods
and
inc
inc
jb
adc
es
mov
mov
insl
movsb
out
clc
imul
and
out
lret
adc
repz
push
fbld
xor
push
cmp
lea
in
xchg
andl
bound
shlb
sub
mov
je
lret
pusha
add
jge
pusha
ljmp
fadd
jne
mov
cmc
mov
out
xor
add
dec
sbb
push
xor
test
push
mov
insl
push
xor
pop
test
dec
repnz
mov
xlat
jecxz
xor
out
in
inc
js
add
push
shll
push
adcl
push
xchg
jl
pop
aam
mov
mov
or
add
repnz
loope
dec
ror
out
subb
mov
sbb
add
inc
mov
addl
adc
daa
add
negb
lods
loopne
lods
sub
mov
pop
or
jge
ljmp
pop
xchg
dec
aam
cmc
add
sahf
rclb
push
cmp
fldl
in
cmc
sti
fldenv
sbb
pop
and
or
jl
rcll
test
stos
push
gs
pop
adc
sub
pop
cmp
ja
stc
push
loop
mov
roll
dec
adc
aaa
hlt
sbb
ret
push
loopne
sti
jne
cmpsb
rolb
add
push
xor
cmpsb
shlb
stc
cld
cmc
into
hlt
xchg
sahf
outsb
insb
jbe
sbb
mov
outsl
inc
add
gs
xchg
and
sub
lds
push
fisttpll
call
mov
iret
mov
add
les
loop
add
iret
add
sub
xchg
add
dec
inc
mov
or
inc
in
pop
rcll
sbb
xor
or
divb
dec
mov
clc
add
rol
xchg
xchg
pop
popa
icebp
icebp
dec
mov
mov
icebp
mov
mov
dec
fbld
xor
pop
and
sub
jbe
jne
mov
out
fs
jns
lahf
stos
enter
cmp
jecxz
cmpsb
aas
mov
aaa
andl
add
add
ss
pop
jbe
fs
jg
mov
inc
movb
and
clc
hlt
test
jmp
adc
dec
cltd
inc
push
faddl
mov
add
jl
icebp
lcall
lcall
inc
adc
add
adc
xlat
pop
fdiv
push
mov
rcll
or
jge
inc
jbe
aam
test
add
adc
adc
mov
ss
sub
mov
jle
out
imul
outsl
xchg
idiv
cmc
inc
loope
cmpsl
push
sbb
cmp
and
mov
dec
jbe
fs
sbb
out
cmp
loopne
dec
sbb
add
cwtl
sarb
inc
push
loop
cmc
inc
fwait
jne
idivl
int3
dec
add
push
xor
dec
dec
jl
clc
lret
mov
popa
addb
add
mov
cmc
je
mov
adc
xchg
xchg
in
imul
or
adc
sti
icebp
fstpl
inc
xor
adc
sti
in
cmp
sbb
imul
fs
mov
jmp
in
lds
es
ljmp
sub
or
push
in
cmp
cmpsb
mov
cmp
shl
cwtl
popa
push
std
jg
addl
btrl
les
add
pop
add
push
jo
gs
or
adc
xor
jmp
arpl
adc
sub
shr
imul
xor
or
repnz
roll
ss
cmpsb
add
dec
sbb
lods
loop
xlat
cmp
add
popa
insb
or
pop
jne
cmc
inc
nop
rcrb
inc
daa
jecxz
push
popa
in
jne
pop
iret
repz
add
xchg
push
rclb
jg
roll
mov
fs
mov
xchg
cmp
sub
inc
andb
mov
add
add
lret
jge
or
pop
cmp
cmp
daa
or
and
test
in
sub
or
scas
xor
adc
stc
mull
pusha
sub
test
aaa
add
cmp
in
fdivl
int
loope
cwtl
lds
xor
aad
or
ret
cld
xor
setbe
ret
movsb
push
ret
pop
sub
pop
inc
dec
fists
gs
add
fcom
cmpsb
add
iret
cld
mov
inc
orl
push
nop
test
inc
xchg
test
pop
jo
cmp
popa
mov
movsb
shll
arpl
notb
pushf
xchg
cmp
dec
push
inc
pop
cmc
xchg
sbb
jbe
pop
mov
cmp
aaa
sub
popa
pusha
add
or
scas
fxch
aaa
pop
repz
add
insb
ss
lds
enter
idivb
xlat
push
enter
push
add
stc
xor
push
dec
xchg
add
mov
and
pop
ds
jge
xor
int3
in
sub
push
cmc
pmuludq
arpl
xlat
inc
mov
add
mov
and
add
sub
inc
repz
cmp
or
jno
leave
aad
movsb
inc
cli
push
enter
in
pushf
push
jg
xor
pop
adc
scas
stos
loope
xchg
dec
test
push
pusha
or
ficoml
sub
insl
imul
add
push
add
loop
addr16
aas
sbb
imulb
push
int3
roll
mov
add
xlat
iret
leave
mov
sub
out
scas
js
or
test
std
add
sbb
adc
je
fildll
dec
sbb
or
cmc
pop
push
mov
out
test
mov
out
ss
int
sbb
inc
fpatan
mov
xor
lock
dec
dec
iretw
cli
nop
arpl
insl
movsl
mov
inc
iret
fs
and
sbb
in
xchg
enter
std
mov
adc
shlb
or
mov
mov
insl
fs
xchg
inc
xor
mov
add
fwait
push
stos
gs
mov
adc
test
pop
inc
and
das
jmp
xchg
incb
lcall
out
test
adc
inc
data16
cltd
add
aam
jae
fildl
pusha
pop
int
leave
fs
aaa
dec
cmp
push
sbb
push
push
movsb
les
test
ret
pop
shlb
icebp
cltd
popa
test
push
or
cmc
and
xchg
incl
mov
popf
cmp
outsl
imul
sbb
adc
cmc
out
and
outsb
mov
add
mov
orb
xchg
jns
and
sub
sub
lcall
inc
popa
out
int
fmull
test
xor
jecxz
int
push
call
sarb
xor
xor
sub
and
pushf
mov
popf
shll
push
scas
fs
inc
enter
push
ror
lds
imul
cmpsl
fs
add
lcall
sub
pop
dec
test
clc
cmp
or
mulb
es
iret
add
popf
or
xchg
xor
inc
ss
out
insl
sbb
sub
icebp
cmpsb
add
pop
push
dec
div
xorb
push
inc
std
and
loop
pop
inc
mov
xor
jns
aaa
add
lahf
inc
movsb
adc
cmp
mov
stos
cmp
add
or
sbb
fistpl
vmovaps
or
int3
sbb
movsb
aad
mov
stos
divl
and
daa
dec
cmc
lds
cmc
adc
pop
cmp
adc
add
or
add
lods
ljmp
test
imul
repnz
pop
mov
add
jbe
sbb
cmc
pop
jmp
push
test
mov
jns
lock
int3
mov
inc
in
std
cmc
pop
pop
pop
mov
push
lods
or
in
mov
and
aas
mov
fcompl
inc
xor
out
sub
mull
sub
or
fucomp
add
sub
inc
sbb
and
inc
mov
mov
push
jns
std
jne
sbb
inc
repnz
std
ja
pop
popa
ss
into
add
xchg
mov
sbb
fmul
ja
jno
adc
arpl
jb
sbb
mov
push
jle
arpl
mov
push
pushf
push
roll
ret
mov
in
loopne
cmp
dec
and
fmull
repz
push
in
cmc
adc
sub
xchg
mov
mov
xor
adc
pushl
pop
ja
push
aam
add
or
nop
lret
lea
icebp
add
adc
mov
jns
test
push
lahf
sub
push
fcmovnbe
pop
inc
repz
mull
mov
test
lcall
inc
jmp
xor
loopne
outsb
or
push
jmp
cmpsl
xor
in
cmp
jb
sbb
in
or
or
imul
xchg
and
enter
add
inc
cmp
scas
jg
bndstx
icebp
mov
prefetch
push
push
shlb
in
adc
test
ljmp
mov
or
test
inc
orl
ror
add
cmpsb
nop
mov
push
push
daa
test
or
add
test
jbe
sti
pop
mov
fldl
inc
test
xorb
sub
sub
lret
inc
fs
fildl
mov
sti
push
inc
jne
push
xor
mov
sbb
arpl
call
xor
std
call
dec
ret
xchg
aas
shll
mov
adc
mov
andb
or
pop
sub
adc
mov
xchg
xchg
push
bound
sbb
jne
jle
call
es
movsb
add
test
dec
add
xor
clc
out
inc
ds
jbe
add
jbe
sbb
sub
jo
cmc
and
loopne
arpl
cli
cwtl
xchg
hlt
mov
cld
pop
cmpsl
inc
fst
imul
loopne
jnp
lcall
jno
push
scas
rcll
mov
sbb
lret
lea
or
fisttps
lahf
cmp
mov
sbb
movsb
xchg
iret
outsb
mov
fstps
push
inc
mov
insb
jle
inc
push
clts
mov
and
or
mov
in
repz
xchg
shll
mov
and
push
sbb
lds
addl
mov
dec
mov
mov
les
test
mov
popa
adc
insl
mov
mov
or
outsb
ret
cli
arpl
cmc
lret
lds
js
add
inc
push
add
inc
data16
inc
sbb
push
dec
inc
movsb
jle
push
aam
pop
jl
mov
mov
add
hlt
paddq
cmp
popl
fldt
vpsrad
loope
gs
cs
cmpb
mov
sbb
inc
mov
push
stc
repnz
fistpl
jmp
xchg
inc
cmp
xor
pushf
jne
jge
daa
mov
push
xchg
add
sbb
xor
fisttpl
imulb
mov
push
mov
cmp
icebp
test
in
jp
push
push
jmp
push
jns
pop
fs
test
outsl
and
pop
cmp
jmp
or
mov
out
pop
shrl
je
arpl
aaa
push
push
cmpsb
add
out
movl
dec
cmp
mov
andb
aam
mov
or
and
cmc
or
addb
sarb
in
ljmp
into
lea
dec
push
add
push
inc
aam
fs
fnsave
ljmp
fdivp
xchg
loop
dec
lea
adc
test
iret
loope
aam
mov
inc
mov
add
and
inc
mov
xchg
rolb
fistps
pop
push
js
and
test
add
jo
sub
push
mov
and
jns
cltd
jg
xor
jns
cmp
inc
loop
add
xchg
push
ss
jne
pop
inc
xchg
imul
inc
mov
lahf
idivl
adc
cwtl
imul
data16
add
and
cld
hlt
jo
and
arpl
lock
jnp
sub
dec
and
and
cld
lret
outsl
dec
mov
and
cltd
mov
out
jmp
or
inc
xchg
gs
leave
inc
enter
test
roll
inc
fcoms
icebp
inc
rolb
rorb
int
jmp
sahf
xchg
in
icebp
cmc
fcmovnbe
idiv
pop
out
addl
jmp
xor
and
add
pusha
dec
sbb
sti
xor
ja
leave
movsb
call
mov
inc
mov
addb
add
jmp
in
sahf
out
xchg
enter
iret
bound
inc
mov
mov
jp
cli
inc
xor
ret
push
cli
mov
loope
lcall
leave
sub
out
cld
repz
js
dec
mov
clc
shll
push
dec
out
sub
enter
jne
sbb
cmp
into
aas
mov
or
adc
cmp
lods
lahf
dec
negb
in
mov
imull
add
jne
fdivrp
sbb
test
and
push
xor
out
icebp
mov
pop
or
leave
or
or
clc
sub
cld
cmc
gs
in
imul
aam
cmp
aad
add
out
addr16
fdivs
and
push
adc
scas
or
add
adc
loope
loopne
cmc
inc
mov
lahf
add
add
cmp
sar
cli
addr16
and
cltd
incb
std
pushw
push
pusha
push
bound
mov
xchg
movsb
gs
in
fistps
fdivr
jmp
add
or
test
mov
clc
mov
add
fwait
jae
cs
fs
xchg
xor
push
dec
rcl
add
mov
stc
jge
or
cmp
out
xchg
xor
mov
and
pop
aaa
mov
not
fsub
adc
jne
jbe
mov
fnsave
cmp
pusha
fs
icebp
xchg
jp
dec
aam
out
xchg
cli
in
roll
hlt
lret
xchg
aaa
push
push
mov
movsb
les
cli
and
lea
adc
testb
pop
insl
adc
mov
or
divb
inc
shrb
scas
add
cmc
cs
mov
bound
push
xor
mov
add
adc
fildll
add
xchg
out
int
es
jg
mov
and
cmc
inc
repz
or
xor
out
and
rcr
inc
xor
pop
dec
xchg
ss
cmp
icebp
dec
dec
push
mov
loopne
mov
jle
sub
faddl
mov
xchg
scas
lods
stc
or
and
inc
mov
xor
and
mov
ret
xchg
mov
mov
mov
xor
gs
mov
inc
aad
stc
sub
cmc
mov
mov
out
push
inc
sbb
add
leave
aaa
inc
sbb
pop
in
lea
lds
and
jl
push
mov
movsl
jns
cmp
mov
push
hlt
and
add
clc
adc
cli
pop
inc
cmp
arpl
push
out
add
pop
inc
imulb
rorb
stos
loopne
push
popa
or
cwtl
and
pop
xorb
add
in
in
loope
xchg
add
pop
jge
popa
in
cmc
sahf
add
mov
bound
pop
cmpl
add
ret
pop
push
outsl
fs
test
jb
cmp
dec
or
mov
movsb
push
loop
jb
inc
add
sbb
imul
jnp
add
fcmovne
jnp
add
insb
in
arpl
jb
pop
popa
fs
insb
lahf
pop
stc
push
in
or
xor
sbb
jmp
jl
or
lea
add
lock
sahf
and
sub
and
add
testl
flds
inc
sti
add
in
roll
fwait
or
cli
inc
cmp
add
add
mov
cltd
lcall
adc
push
add
mulb
je
push
lcall
xchg
test
push
push
cmp
or
fs
jl
jmp
and
std
push
jbe
add
or
ror
in
movaps
stc
sahf
les
add
or
popf
mov
ja
sub
pop
dec
add
insb
jl
out
mov
dec
dec
inc
pop
adc
gs
and
aam
add
aam
pop
push
iret
mov
mov
dec
imulb
sbb
xchg
xchg
add
daa
sub
dec
adc
inc
cmp
cmp
fisttpll
and
add
dec
shr
adc
cmp
xor
out
sbb
add
sbb
loop
pop
push
fldenv
add
and
out
mov
add
adc
scas
add
pusha
repnz
and
ret
dec
int
jb
addr16
add
add
xor
pop
mov
cmp
sub
aam
sub
dec
xchg
pop
mov
xor
mov
xorb
out
and
and
push
mov
pop
pop
hlt
add
int3
cmp
mov
or
pop
inc
out
cmp
mov
fs
add
inc
ljmp
rolb
lds
bound
movsl
inc
ljmp
sub
into
adc
add
xor
add
ret
sarl
jp
pop
pop
dec
and
leave
mov
sub
pop
mov
iret
dec
gs
pusha
pop
add
in
aas
pop
in
jns
push
sbb
fsts
add
repz
out
mov
xchg
adc
jno
jecxz
stc
and
idivb
mov
or
imul
inc
pop
stc
or
pop
jle
sbb
sub
mov
inc
cmpb
lods
xor
or
sub
mov
out
sbb
push
cwtl
arpl
cli
push
mov
and
push
pop
pop
addr16
add
mov
push
mov
aad
in
pop
clc
jecxz
push
jae
arpl
loope
adc
or
push
and
push
mov
nopl
ds
aam
and
add
mov
fsubrl
dec
loope
imul
ficoms
jp
jbe
cmp
lds
xchg
xor
mov
insl
inc
ss
lcall
outsb
popa
mov
inc
lods
jns
or
xchg
testb
add
mov
and
gs
and
xor
imul
pop
or
jb
test
mov
mulb
push
add
pop
out
push
mov
fs
fstpt
shll
mov
mov
loope
sbb
in
jecxz
and
inc
mov
testb
inc
mov
or
pusha
testl
fs
jl
adcb
mov
cmc
sbb
fs
mov
cmpsl
int
adc
jnp
mov
dec
mov
notl
ja
push
and
mov
pusha
inc
notb
lods
test
mov
mov
sbb
pop
jmp
arpl
xchg
mov
movb
xchg
mov
int
jecxz
out
add
or
pop
nop
sub
rcl
sarl
mov
mov
out
shlb
ds
sub
fs
lret
ret
jg
jmp
add
push
inc
xchg
cmp
or
pop
insl
in
gs
ss
add
xchg
mov
in
sti
inc
xlat
xchg
aad
cmc
popa
clc
lret
pop
stos
and
insb
or
xchg
sahf
push
fstl
aad
daa
sbb
jg
insb
add
aad
cld
inc
or
fnstenv
aad
dec
aad
repnz
inc
dec
push
dec
arpl
mov
jg
pop
in
inc
pusha
mulb
test
sti
cmp
mov
sub
add
test
add
mov
or
push
add
insb
fwait
mov
pop
sub
xchg
movsb
ja
add
mov
in
inc
mov
fldenv
mov
push
test
fs
sub
xor
cmp
and
xor
rorb
shrb
cmp
pusha
fsubr
int
add
rcll
and
pop
pop
enter
push
mov
lcall
add
and
aam
popa
pop
lret
xchg
hlt
shlb
sti
add
hlt
rcrl
jge
sbb
icebp
mov
outsb
aaa
jae
jae
lea
lret
pop
scas
fnstsw
hlt
jo
icebp
lahf
add
rclb
adc
test
pop
push
mov
jne
jge
add
aas
xor
call
sahf
mov
or
and
jb
sub
or
mov
ret
repz
frstor
push
pop
in
or
hlt
dec
sbb
cmp
cmpl
ds
xchg
call
leave
jle
mov
loop
movsb
mov
cltd
ljmp
ljmp
hlt
out
cmp
sbb
enter
fstpl
or
fucomip
lahf
mov
jno
jecxz
cmpsl
movsl
rclb
mov
test
movsb
sti
pop
mov
ret
add
movsb
push
sub
fnstsw
adc
dec
mov
mov
add
loopne
and
adc
frstor
test
test
push
jbe
and
movsb
and
fs
dec
ret
xchg
aad
pop
stc
sbb
sbb
cmp
xor
mov
sub
cwtl
fs
mov
idivb
push
push
push
shrl
push
sub
insb
and
rorl
pop
orl
xchg
cmp
mov
lcall
jmp
aad
add
mov
xor
inc
test
dec
jmp
jle
lds
cld
mov
imul
push
test
pop
cmp
mov
dec
cmp
testb
orl
add
mov
xor
cmp
lcall
dec
push
fs
jbe
div
dec
test
fwait
or
lahf
sub
shlb
fmulp
xor
mov
ret
xchg
sti
mov
mov
and
sbb
fistpll
xor
or
icebp
imul
out
jmp
int3
inc
jg
inc
cmpl
push
add
jle
sbb
test
mov
out
inc
decl
pop
std
jbe
movsb
mov
es
hlt
pusha
mov
int3
xor
mov
adc
dec
add
in
mov
lods
sahf
sub
pop
pop
fs
in
ror
dec
add
call
mov
mov
mov
stos
push
fs
shrl
add
out
sbb
rclb
mov
add
jo
add
dec
add
sub
ss
sahf
add
xchg
shlb
mov
sarl
cli
add
mov
test
cmpb
add
mov
lock
pop
mov
in
icebp
pop
and
and
or
rclb
jge
fs
inc
xchg
xchg
push
cmp
add
es
adc
pop
cmc
sbb
sub
adcb
ss
or
out
cmp
add
fcomps
leave
popa
loop
pop
clc
stc
clc
or
inc
cli
lahf
jl
inc
jmp
shrl
adc
arpl
cmpsl
clc
cmc
leave
pop
xor
or
push
or
test
mov
dec
testb
ret
jg
leave
add
aas
mov
shll
cli
arpl
mov
jae,pn
mov
ss
push
add
sbb
add
fincstp
xchg
add
iret
subb
inc
push
ret
insl
pusha
push
push
cmp
add
xchg
dec
and
cmc
rcl
fidivl
pop
xlat
push
push
dec
fisubs
dec
inc
mov
insb
mov
bound
mov
add
testb
loope
xor
fs
push
adc
ljmp
inc
sarb
or
cmp
jb
or
add
sbb
sbb
enter
inc
frstor
cmp
add
lods
aas
into
jb
imul
cmp
cld
repnz
gs
or
and
jle
push
cmp
xchg
stc
cmc
div
xchg
inc
mov
cmp
add
mov
cmc
jp
or
add
jecxz
or
fs
fs
add
sbb
mulb
mov
je
shl
push
test
das
mull
test
push
mov
cmc
imul
lcall
mov
cmp
inc
sbb
fs
cmc
or
cmp
lds
lods
mov
lods
shll
push
or
int
push
jne
bound
cld
pop
movsl
idiv
push
loope
xchg
pop
cltd
mov
hlt
lea
or
in
daa
pop
loope
or
add
xchg
sbb
or
in
sub
cltd
xchg
mov
add
xor
mov
jmp
or
gs
shr
adc
dec
stc
fcom
popf
jge
pop
and
into
repz
jp
in
cli
jmp
pop
ja
cld
adc
dec
cmp
and
stc
mov
push
icebp
dec
shl
jb
aam
daa
add
out
loop
notb
cltd
sub
ror
in
add
and
test
gs
mov
out
push
xchg
pop
jge
pop
rcrl
add
orl
xor
add
mov
enter
and
add
push
std
jne
leave
repnz
mov
clc
lea
cld
jmp
sarb
jg
jecxz
aam
icebp
mov
cltd
sub
mov
sbbb
xlat
push
adc
fisubs
cmp
push
aas
popf
inc
jp
mov
int
inc
push
mov
jge
and
xchg
stos
neg
push
ja
imul
jo
imul
jge
jp
rolb
insb
add
mov
ss
pusha
lret
mov
addb
jne
and
in
pushl
ljmp
mov
mov
mov
sub
aas
negb
sbb
sbb
into
daa
dec
int3
sbb
bound
dec
cmpsl
test
sub
sbb
mov
repnz
cmc
adc
das
in
out
orl
pop
inc
cmpb
hlt
cmp
ljmp
pop
xor
pop
or
add
gs
mov
sahf
in
fs
sub
int
sub
fildl
push
aad
or
mov
sbb
lret
pop
bndstx
jle
out
lds
movsb
test
cmp
pushf
add
int
xchg
stos
fs
insb
dec
out
xchg
cli
aas
xor
push
mov
orl
jecxz
mov
mov
pop
andb
jl
data16
xor
and
idivb
call
add
jmp
inc
xor
push
mov
adc
lret
xor
or
pop
cmp
fadds
jp
arpl
into
int
jno
imul
frstor
pusha
xorl
sub
mov
iret
and
xchg
aas
pop
notb
and
dec
jbe
push
lret
or
icebp
arpl
sahf
push
call
add
fbstp
es
push
jae
shlb
in
dec
mov
loope
sbb
fs
mov
les
fs
dec
push
je
int
pop
pop
fwait
sub
icebp
adc
xor
clc
out
adc
hlt
jb
add
and
or
fs
mov
into
addl
rcrb
mov
xor
cmc
gs
jl
adc
push
aad
js
adc
adc
jno
mov
mov
clc
sub
add
test
add
jge
cmc
and
pop
and
or
xor
movsb
jle
out
pusha
icebp
int
filds
loop
pop
push
add
and
lcall
mov
notb
fiadds
push
push
daa
push
add
jns
pop
fs
stos
outsl
inc
int3
test
mull
push
fnstenv
movsl
addl
dec
scas
stos
mov
push
sbb
cltd
sub
add
jle
lock
dec
push
xor
in
add
mov
push
incb
sub
movb
cmc
fwait
mov
xor
add
adc
pop
mulb
lock
pop
mov
push
es
adc
jbe
cmpsb
ljmp
lahf
jge
ljmp
imul
push
cmp
movsb
test
dec
add
push
scas
inc
lcall
adc
add
push
inc
xchg
imul
mov
jne
pop
cld
repz
mov
or
fs
out
adc
test
jno
outsb
jbe
int3
shrb
add
imul
sub
push
dec
aaa
clc
lock
xchg
mov
loope
popa
sahf
mov
sbb
push
push
dec
inc
pusha
or
insl
pop
add
ja
cmp
xor
sbb
push
rolb
movsb
adc
fidivl
aas
adc
in
scas
pop
les
sbb
fs
mov
and
mov
enter
ss
sub
das
inc
add
dec
push
sub
jecxz
jb
mov
arpl
notb
mov
call
jle
cld
mov
xor
pop
pop
icebp
int
cmp
add
mov
xchg
mov
cmc
popf
push
jns
ret
shlb
and
loop
pushf
stc
lods
div
jne
test
stc
jns
mov
mov
movsl
xchg
add
imul
mov
xchg
negb
xchg
adc
push
or
jno
scas
ret
pusha
popa
sti
mov
insl
push
imulb
iret
orb
cltd
scas
push
mov
mov
inc
js
sti
and
jle
sbb
ret
rorl
push
jge,pt
push
dec
jae
mulb
call
inc
cs
inc
lods
imul
sbb
jl
int
push
repz
mov
xorb
mov
imul
sbb
pop
adc
or
mov
bound
in
inc
push
gs
out
ja
addr16
mov
add
aaa
xor
jo
mov
push
ds
sbb
lcall
pop
jae
mov
jns
push
fiaddl
decb
rorl
xchg
stos
push
fs
jo
subb
cmp
cmp
lret
cli
in
inc
push
or
outsb
jecxz
jnp
fs
mov
cmp
cmc
adc
sbb
cmc
xchg
jl
cmp
bound
sub
inc
xchg
adcl
pop
mov
and
das
jecxz
cmpsl
mov
push
sarl
jns
add
sbb
jne
mov
cli
xlat
mov
or
cmpsl
je
xchg
pop
xchg
imul
push
cmp
pop
sub
or
inc
mov
movsl
std
jne
mov
sub
jne
dec
push
call
jbe
bound
test
or
imulb
pop
popf
adc
push
cmp
add
fdivrs
addr16
push
notb
jge
add
adc
jmp
push
pop
add
popf
add
lret
lret
clc
adc
sub
push
mov
sub
sub
ret
stos
insb
out
fwait
out
mov
jmp
das
leave
gs
pop
add
cwtl
pushf
sbbb
ret
xlat
daa
lods
in
fbstp
repz
ret
mov
add
mov
int
xor
mov
jbe
cltd
fnstsw
push
leave
orb
sbb
add
jmp
and
adc
sub
adc
cmp
or
fs
inc
imul
mov
mov
pop
pop
les
test
es
add
pop
lods
outsb
push
cmc
fcoms
into
aaa
inc
scas
or
push
ja
mov
push
dec
mov
push
or
aaa
inc
repz
push
cs
addl
pop
imulb
mov
lahf
add
repz
and
mov
ret
add
pushl
in
enter
inc
pop
repnz
mov
xchg
push
mov
jl
repnz
lcall
insb
add
sahf
inc
cmp
cmc
cmp
pop
jnp
inc
dec
add
dec
xchg
mov
insl
testb
movl
bound
lcall
adc
xlat
lds
or
in
or
sti
push
sub
mov
add
ret
push
cmp
fwait
fs
xchg
shrb
xchg
ret
mov
xor
lea
imul
push
dec
stc
fdivp
ret
dec
sti
fdiv
cs
push
lcall
movsb
stos
les
out
testb
dec
dec
repnz
or
leave
xor
sub
jp
jecxz
mov
inc
mov
push
mov
in
mov
pop
cmp
xorb
lahf
pop
daa
lds
mov
add
xor
xchg
mov
sbb
xor
pop
movsl
mul
sbb
in
push
or
iret
mov
lea
jecxz
movsl
cmc
sub
push
cmpsb
adc
or
ss
addr16
inc
cmc
mov
fwait
jae
add
lds
sbb
xchg
testb
and
jle
inc
fs
int
push
sbb
add
je
adc
push
fs
mov
movsb
adc
add
dec
pop
hlt
es
sbb
cltd
faddl
popa
xlat
in
add
adc
jae
push
mov
mulb
or
ja
add
cmc
loope
andl
in
pop
cli
adcb
dec
push
jp
mov
xchg
test
or
mov
jmp
je
sub
push
pop
gs
xchg
mov
cmp
ss
popf
std
cli
std
out
jno
jne
dec
ffree
sub
and
pushf
xchg
mov
movsl
and
xor
or
test
jge
cs
lret
xchg
add
fstps
das
scas
pop
cmpl
ficomps
out
add
add
repz
xor
mov
adc
stc
cli
xor
je
pop
out
outsl
pop
subl
xor
movsb
cmp
lahf
xlat
push
ja
cmp
int
jmp
stc
mov
or
insb
outsl
or
sbb
inc
and
inc
sbb
inc
inc
mov
jg
je
and
into
cwtl
daa
out
mov
popf
clc
sbb
or
jecxz
jle
mov
sub
inc
fadds
imul
mov
push
es
sub
inc
sbb
push
incb
fs
clc
sbb
pusha
pop
cmp
push
add
dec
dec
jge
add
int
and
xor
pop
xor
xor
pop
add
les
aaa
jl
shl
adc
xchg
inc
in
cmpsl
sbb
addb
add
jbe
fdivrl
dec
add
test
mov
es
sub
movsb
pusha
clc
lea
divb
fcompl
pop
call
fildl
jecxz
or
ja
js
andl
std
dec
clc
mov
stos
xor
sahf
out
repnz
pop
push
jae
mov
or
adc
out
xchg
js
scas
xor
pop
decl
adc
xchg
imul
add
cmp
popaw
xchg
mov
mov
jno
xor
mov
lock
mov
fnstcw
sahf
mov
xchg
inc
in
jne
jmp
rorl
sub
sbb
andl
andl
xlat
movsl
sbb
fdivp
nop
cmc
jnp
inc
cmp
add
xchg
or
jmp
gs
inc
xchg
lods
fs
out
sub
cmp
inc
push
push
les
in
fs
pop
mov
out
xchg
sbb
nop
push
xchg
popa
mov
cmp
or
scas
std
push
pop
and
ret
jns
dec
stc
outsb
fisubl
and
imul
mov
insl
stc
cld
scas
rcll
popa
dec
xor
jp
ss
fcomip
dec
ja
jle
adc
dec
jmp
and
lret
xor
mov
xor
mov
inc
sbb
sbb
cmc
enter
ss
dec
mov
cmc
mov
hlt
dec
add
or
or
arpl
push
in
incb
jl
pop
arpl
mov
mov
std
xor
add
xchg
mov
mov
jmp
add
xchg
fwait
icebp
dec
fs
cli
and
xchg
jg
cli
pop
mov
jecxz
ror
pop
cmp
fs
bound
fwait
push
add
addr16
add
mov
cmp
mov
cmc
shr
dec
leave
mov
and
enter
rorb
into
add
orl
aad
push
mov
in
jle
test
roll
mov
sub
das
gs
stos
cwtl
pop
call
insl
xor
daa
negb
jmp
mov
stc
pushl
mov
mov
and
xchg
negl
insb
push
or
fs
int3
and
mov
add
inc
adc
add
adc
fdivr
sbbb
fs
aas
mov
push
cli
sahf
adc
mov
into
rcrl
mov
xlat
inc
push
add
pop
inc
and
dec
pop
popa
je
add
insl
and
out
pop
icebp
hlt
test
inc
roll
add
xchg
in
clc
cmp
add
out
inc
cmc
incl
loopne
xchg
js
jmp
or
xchg
jmp
xchg
fs
jne
add
fldl
dec
inc
mov
in
mov
out
loop
ss
mov
bound
jo
ret
and
push
inc
int3
cmp
insb
mov
hlt
adc
popa
rorl
test
jno
fs
pop
pusha
jmp
ss
scas
rolb
push
insb
aam
xchg
mov
loope
or
xchg
testl
push
adc
inc
outsb
jl
pusha
mov
daa
or
sub
jb
xor
ljmp
push
xchg
sub
jnp
pop
aad
or
les
adc
sub
add
das
and
add
and
aad
arpl
repnz
or
arpl
fs
fldt
repz
mov
stc
cmp
popa
std
mov
pop
xor
fxch
xchg
fs
out
cmc
push
inc
imulb
mov
hlt
xchg
xor
xor
cmp
fidivrs
into
jl
fadds
popa
call
loope
inc
mov
push
ja
add
inc
push
in
dec
or
sbb
scas
xchg
or
lock
jl
pop
push
mov
cmp
sarl
das
test
add
sub
inc
push
pop
mov
cld
insl
dec
fisttpll
orb
mov
scas
pop
mov
hlt
insb
xor
mov
loop
push
lods
repnz
into
mov
xchg
pusha
inc
notl
push
add
xchg
adc
cli
out
xor
or
adcl
orl
adc
shrb
in
or
jns
lock
arpl
js
inc
arpl
shlb
shll
sub
movsb
aad
or
les
xchg
nop
and
or
xor
inc
cmc
or
push
inc
fisubrs
cld
ljmp
inc
dec
push
and
jmp
pop
push
scas
mov
or
push
jmp
andb
mov
xorps
adc
xchg
icebp
jne
mov
test
ljmp
add
cs
fs
pop
aad
push
lahf
fbld
jbe
movsl
or
pusha
jno
pop
add
mov
push
enter
inc
sbb
and
or
popa
aad
stos
mov
adc
mov
inc
sub
popa
xor
aaa
call
pop
dec
push
cmp
inc
insl
adc
cmp
xchg
mov
imul
pop
push
sti
push
adc
rorl
inc
add
aad
or
and
or
fistpll
or
add
add
mov
jbe
lods
adc
les
cmp
push
or
test
sub
and
imull
scas
add
sbb
jge
ja
cmp
mov
hlt
loopne
dec
add
sub
lds
cltd
cmc
pop
adc
lods
and
mov
pop
dec
cld
push
std
loopne
rolb
or
outsb
and
inc
xor
std
ret
popf
jbe
inc
or
jecxz
jmp
mov
repnz
mov
add
or
xchg
pop
or
mov
or
sub
sub
shlb
mov
iret
lods
xchg
push
push
je
clc
sti
mov
xorl
mov
into
pop
movsl
dec
mov
lods
sti
sti
and
jle
add
and
ljmp
cli
imul
mov
in
loopne
xchg
pop
test
push
mov
aas
nop
jl,pt
sti
insl
jo
or
xor
and
jp
fs
inc
mulb
rcrb
nop
add
or
fs
pop
pop
out
testb
mov
pop
sub
xlat
cld
fsubs
and
stos
sbb
add
push
leave
movsb
notl
sti
data16
push
repnz
or
fcmovb
bound
mov
pop
mov
cmp
popf
push
jno
or
fs
mov
test
and
out
mov
cli
pop
adc
outsl
dec
lock
inc
xchg
and
xor
sbb
imul
scas
inc
sub
imul
mov
rorb
fisubl
in
repnz
lret
repnz
push
xor
sbbl
jmp
stos
movsb
inc
add
sti
sbb
adc
fisttpl
xor
mov
scas
push
in
out
les
jo
xchg
les
add
jbe
push
rolb
inc
pop
filds
rorl
out
dec
sub
mov
add
inc
test
stos
sbb
cwtl
std
sbb
xor
jmp
sub
mov
cmp
repz
shlb
jb
lcall
sahf
movb
cmp
xchg
aaa
jl
pop
xchg
dec
repnz
andb
outsb
jge
ljmp
mov
inc
leave
dec
mov
or
add
fs
fisubrl
notl
fisttps
mov
aaa
add
xchg
jecxz
fwait
shr
inc
imulb
mov
pop
xor
add
or
imul
mov
addr16
leave
popa
dec
out
and
push
scas
pop
cmc
mov
test
es
movsl
or
sbb
mov
and
and
stos
add
cmp
adc
pushw
in
jl
cmc
jo
add
xchg
iret
jno
jne
enter
decb
sub
icebp
hlt
cmc
xchg
add
push
inc
or
adc
je
divl
sti
ret
cltd
dec
mov
hlt
lea
test
popf
cli
daa
xor
xchg
mov
sbb
xchg
jne
js
pushf
cwtl
divb
push
stos
jg
jns
mov
les
repnz
pop
or
cmp
test
xor
adc
pop
mov
mov
shlb
popa
insb
cmp
and
hlt
add
shrb
push
fs
into
lret
outsl
leave
insb
int3
cmc
push
rorl
pop
and
cmp
lods
jb
inc
add
nop
out
mov
push
addr16
fldt
movl
gs
dec
sub
push
aad
aam
lea
movsl
lret
xor
pop
in
hlt
or
sbb
cs
cli
push
push
in
inc
testb
cmpps
sahf
insb
fwait
add
ds
sub
xchg
pushf
out
jecxz
cmpsb
mov
subl
lahf
mov
add
sbbb
fs
add
cli
jbe
inc
popa
or
fstpt
int
mov
cmp
push
bound
and
shl
cli
and
je
push
lret
jp
cmp
lock
out
or
mov
sbb
push
pmaxub
in
lahf
dec
in
xlat
cmc
das
ljmp
inc
mov
xchg
cld
stc
sub
push
add
sti
xchg
lods
fnstcw
je
pushl
dec
cld
pop
adc
xor
filds
cld
pop
fs
int3
pop
inc
shrb
mov
inc
test
and
mov
push
jne
fs
adc
sub
pop
test
daa
mov
pusha
test
mov
ficoms
jge
movsb
ficoml
pop
test
in
sbb
dec
faddl
fidivs
mov
inc
xor
out
inc
aas
push
cmc
jge
pop
aas
neg
push
xor
testl
mov
mulb
scas
les
lea
jle
cmp
or
xchg
icebp
sub
int
imul
popf
mov
test
mulb
xchg
push
bound
cmpsb
xchg
sub
les
cld
std
inc
add
mov
mov
and
in
push
inc
mov
test
xchg
aad
mov
ja
aam
sbb
add
mov
loope
cmp
stos
loopne
pop
dec
gs
into
mov
das
mov
and
sub
cmp
divb
cmpsb
mov
inc
inc
loopne
mov
mov
xor
adcl
mov
xchg
in
push
repz
aaa
add
jmp
mov
xchg
les
in
or
out
inc
and
repz
ret
cmpsb
xchg
jle
mulb
add
cld
jno
les
push
dec
out
add
ljmp
and
fs
test
aad
pop
and
adc
or
xchg
div
int3
adc
adc
lret
mov
or
scas
cmp
cmp
and
es
ret
fldenv
ret
fldenv
mov
pop
clc
add
mov
xor
fprem1
and
mov
cmp
call
add
stos
frstor
insb
pop
div
xor
fnstcw
push
push
jle
ds
testb
add
inc
xchg
test
adc
sbb
pop
popf
inc
and
add
test
add
add
add
xor
and
in
or
mov
push
andnps
pushf
cmovs
mov
mov
imull
lea
mov
push
hlt
mov
add
fs
addr16
iret
cltd
int
movsb
add
cs
or
cmp
popl
movsl
xchg
sub
push
add
lret
mov
ljmp
or
inc
jge
inc
adc
sbb
hlt
lret
add
gs
adc
mov
pop
xchg
jp
adc
inc
and
daa
js
add
or
fs
std
gs
jmp
sub
lahf
cmp
pop
sbb
jp
addl
add
xor
lds
shrb
lret
push
aam
add
dec
jnp
or
mov
and
pop
pop
add
fiadds
and
pushf
loope
std
mull
adcb
aam
enter
in
addl
mov
mov
xchg
add
out
stc
negb
xor
mov
outsl
jecxz
xchg
cmp
out
pop
mull
testb
imul
inc
xchg
add
outsb
xchg
js
outsl
aad
inc
mov
roll
in
stos
cmp
mov
mov
mov
push
rcr
or
outsb
mov
sbb
hlt
fs
inc
mov
jns
mov
or
pop
imul
iret
adc
dec
test
cmc
enter
mov
jno
push
or
mov
cwtl
std
or
xor
iret
les
cmc
out
mov
xlat
xor
or
jmp
sbb
add
xor
iret
dec
je
repz
xchg
mov
ds
mov
add
sub
adcl
sub
mov
cmpsb
xlat
and
mov
in
sub
arpl
mov
cltd
stc
pusha
jle
bound
jecxz
push
push
and
dec
lret
push
fldenv
xchg
cmp
pop
gs
ja
pop
sbb
outsb
aas
adc
mov
out
jbe
stc
or
aam
cli
mov
outsl
daa
add
aad
in
sub
mov
pop
ret
mov
out
jb
shlb
mov
dec
fs
mov
cwtl
aam
iret
sbb
push
scas
int
jno
pop
out
pop
out
push
int3
jno
ja
pop
lcall
inc
pop
mov
xchg
xlat
jnp
push
add
add
je
inc
cmp
test
dec
outsl
inc
add
sbb
sub
cmpsb
sub
or
imul
jecxz
ja
cmp
xchg
mov
push
mov
jb
lret
cmp
fwait
pusha
mov
ds
ja
jbe
lods
lea
lret
out
hlt
aad
mov
jmp
and
cmc
cli
sbb
inc
gs
mov
icebp
out
cmp
mov
idivl
fidivrs
out
add
sbb
rcrl
popf
sub
in
xchg
add
dec
add
std
mov
movsb
xchg
daa
in
cmp
cli
cmp
dec
sub
outsb
adcb
sub
notb
jp
aaa
xlat
icebp
dec
or
es
jae
loopne
test
testb
mov
mov
xor
xor
je
or
ret
adc
imulb
jecxz
lds
notb
push
or
add
adc
cmp
pushf
jno
stos
add
xor
dec
lea
cmp
loope
sahf
pop
inc
adc
mov
orb
push
jns
jo
fldt
mov
add
test
js
xchg
xchg
lahf
jge
mov
cmpsb
push
test
dec
cmp
lds
add
popa
fstpl
outsb
sub
scas
cmp
mov
jns
lds
fs
daa
cs
fdiv
jle
add
add
test
mull
les
inc
or
icebp
cmp
je
and
outsb
imulb
inc
cmp
push
mov
sbb
pop
sahf
push
es
adc
inc
push
add
popf
fucom
int
popa
pop
xorl
and
or
add
push
test
cs
fists
or
lods
jmp
clc
fildll
pop
pop
fs
push
sbb
in
in
mov
pop
sub
mov
in
add
adc
or
push
adc
idivl
les
mov
inc
or
nop
and
lea
ja
ret
push
jbe
cmp
add
mov
int3
xchg
out
push
add
dec
xchg
ret
sbb
inc
xchg
or
or
int
add
or
adc
adc
repz
sbb
stos
das
xchg
jecxz
push
nop
xchg
jmp
movswl
xor
mov
mov
out
jecxz
leave
add
pusha
js
add
cmpsl
or
arpl
cltd
sub
sti
sets
ja
rolb
sub
xchg
xor
call
mov
or
daa
fs
push
out
mov
sub
int3
add
or
xchg
lcall
mov
dec
or
popa
scas
scas
imul
dec
aas
and
jmp
aaa
push
clc
mov
mov
cltd
and
push
shlb
push
movsb
sub
cli
mov
inc
mov
bound
pop
scas
mov
fwait
push
sbb
mov
popa
push
add
push
add
cmp
xor
xchg
arpl
sub
xchg
shl
push
lds
push
lds
mov
sti
inc
je
cld
cmc
repnz
movb
leave
xorl
cwtl
inc
dec
dec
fs
insl
add
aaa
es
sbb
rcll
test
fwait
pushf
data16
or
xorb
aam
cmc
mov
add
sahf
add
mov
sti
cmp
fwait
clc
aam
pop
xchg
jne
inc
pop
pop
and
outsl
xchg
into
inc
push
and
icebp
gs
cmp
fiadds
mov
add
inc
rcrl
mov
add
ljmp
lcall
cmc
fs
jge
neg
jb
cli
add
cmp
jbe
pop
imul
repz
push
sbb
nop
std
xor
xchg
xchg
repnz
jbe
gs
in
sbb
mov
filds
ficoml
fs
shlb
fadds
add
push
jno
fnstcw
cmpl
and
add
ds
scas
mov
add
push
cmp
fstpt
mov
mov
pusha
sbb
add
fdivp
adc
or
mov
mov
ror
imul
lods
dec
or
push
jle
jo
jno
fisubl
add
sub
xor
pushw
int3
aad
sti
xor
pop
pop
add
sub
js
xor
jae
push
leave
movsl
in
popf
sub
inc
jbe
xor
stos
mov
psubq
add
decb
cmp
call
lds
add
arpl
push
negb
lock
add
xchg
shl
ret
mov
pusha
testl
jle
lods
sbbb
sbb
neg
out
fiaddl
fdivrl
rolb
push
cmp
sub
sbb
mul
pop
dec
sub
aaa
stc
and
cld
imul
sub
hlt
push
add
mov
jns
cs
push
aas
add
sbb
or
scas
out
bound
fcomp
cli
mov
pop
into
nop
popf
mov
or
int3
dec
sbb
add
addr16
ret
jp
adc
test
shlw
movsb
push
cmpsb
inc
test
ret
repz
mov
lret
xchg
add
pop
adc
incl
sub
loop
xchg
fwait
pop
and
orl
fmull
aas
iret
push
pop
scas
cmp
xor
inc
loope
add
dec
pop
ret
loopne
xchg
pop
mov
cmc
in
mov
mov
call
scas
repnz
stc
cmc
cmp
loopne
push
push
test
and
or
jg
pop
hlt
inc
pop
pop
jmp
ds
clc
or
insb
out
in
and
outsl
add
push
mov
mov
adc
sub
iret
in
adc
add
and
std
sbb
mov
sub
imul
dec
ds
push
and
out
mov
sub
icebp
cmc
and
imul
mov
scas
xchg
xchg
movsb
divb
pop
push
and
pop
xchg
cmpsb
pop
sbb
in
jns
jl
cmp
push
mov
gs
adc
es
push
movsb
mov
pushf
dec
pop
pop
lret
repz
js
sub
and
icebp
pop
or
cmpsb
cmc
push
push
test
sub
mov
pushf
aad
stc
idivl
cmp
push
jnp
bound
sbb
jmp
add
stos
mov
fsubp
sbb
add
xchg
push
cmc
out
pop
adc
pop
push
icebp
loop
imul
jns
stos
and
xor
mov
insl
lock
and
adcb
mov
and
jbe
jecxz
ja
pop
or
arpl
sbb
shll
pop
mov
negb
test
inc
adc
cld
push
add
ret
and
fsubp
and
add
stc
sarb
push
out
sbb
sbb
add
inc
lock
or
shlb
and
test
fs
pop
mov
fcomip
imul
mov
or
or
sar
nop
addr16
sahf
into
push
or
cmc
fstpt
in
rcll
xor
pop
and
popa
int3
test
pushf
and
push
mov
shlb
lods
sub
js
leave
pop
leave
divb
addl
jmp
mov
jp
mov
cmc
and
mov
inc
fs
mov
pop
je
inc
push
test
mov
mov
int
mov
aas
inc
mov
add
cmc
rcrl
mov
add
cmp
add
push
adc
sub
lock
movsb
adc
mov
add
addr16
jb
adc
fcomip
pusha
imulb
pop
fsubrs
inc
cwtl
data16
aas
nop
cmp
or
fwait
dec
add
add
and
add
pop
push
inc
push
mov
pop
insb
shrl
push
incb
out
xor
xlat
fwait
push
and
aaa
gs
mov
test
mov
cltd
orb
push
enter
and
lahf
adc
pop
or
and
xchg
into
mov
pusha
loopne
and
mov
push
or
movsb
lcall
add
daa
fwait
add
gs
dec
dec
dec
sbb
je
pop
pop
int
jl
push
leave
push
sub
push
lret
and
adc
or
pop
hlt
or
adc
pop
insl
ja
mov
insb
pop
out
add
dec
mov
fs
mov
xlat
add
add
mov
xchg
out
pop
fbstp
insl
test
sbb
shll
pop
call
mov
inc
sbb
dec
or
cmc
sbb
sub
sbb
xor
jb
cld
jbe
out
and
testl
movsb
xchg
iret
aad
ja
and
stc
xchg
and
fdivr
popa
pop
push
or
jnp
mov
fs
bound
mov
fwait
cld
mov
pop
jae
testb
cmp
inc
out
jle
inc
addr16
out
repz
movsb
mov
sub
xor
pop
fisttpll
and
stc
clc
cmc
mov
aad
inc
push
das
fwait
add
mov
push
cmp
dec
icebp
add
negb
or
push
cmp
orl
add
dec
ror
in
pop
xor
pop
or
push
push
popa
insb
pop
cwtl
add
mov
test
imulb
daa
imul
sub
inc
xchg
in
mov
add
mov
xor
inc
data16
ret
or
int
xchg
sbb
shll
mov
gs
repz
addb
cld
mov
pop
push
scas
xchg
sub
div
mov
repz
in
lods
adc
push
add
push
inc
mov
inc
cltd
lea
and
mov
fxtract
out
dec
movsb
sub
insl
lds
sbb
jbe
sti
sahf
xchg
je
int
add
push
aad
xchg
loope
mulb
jmp
jle
xor
aas
outsl
inc
mov
arpl
test
pop
in
add
sub
into
add
xchg
and
cltd
add
jmp
int
add
fnstsw
and
dec
sbb
pop
mov
mov
xor
push
enter
cmc
or
stc
jle
xchg
mov
faddl
lret
cs
mov
adcb
and
jbe
lock
addr16
xor
cmp
faddp
and
or
outsl
rcrb
cmc
adc
addb
cmp
dec
movsl
and
fs
loop
sub
pop
add
inc
push
sbb
push
adc
pop
xor
imul
clts
cld
cmc
or
jnp
pop
cmpsb
fs
in
les
cld
add
or
clc
mov
fisubs
out
jecxz
sub
push
cmc
mov
push
and
xor
dec
cwtl
cmpsb
clc
pop
adc
push
pop
stos
shl
inc
imul
jle
scas
add
mov
mov
mov
add
mov
cmp
fbld
addr16
pop
push
sub
or
decl
mov
orl
xorb
jmp
std
pop
lds
mov
inc
nop
and
add
ret
inc
rclb
outsl
stos
or
jbe
sbb
jle
mov
out
mov
jne
test
inc
mov
fildl
incl
nop
testb
inc
cmc
push
push
subl
mov
sar
push
push
pusha
xchg
lcall
add
ffreep
mov
std
shll
xchg
repnz
lret
gs
fucomp
jl
or
cmp
adc
sub
sbb
mov
add
iret
rcrb
jne
ss
pop
addb
cltd
in
or
pop
and
fs
mov
rorb
enter
cmc
add
fdiv
jns
jle
or
xchg
and
addr16
nop
les
adc
out
jbe
sbb
add
cmc
imul
dec
or
dec
decl
das
xchg
add
test
arpl
dec
test
popa
insl
add
jns
inc
adc
mov
mov
mov
gs
xchg
and
adc
xchg
cmp
mov
push
jmp
addl
cltd
dec
push
loopne
add
stos
xchg
imul
mov
fs
mov
lods
lds
stos
inc
mov
je
imul
repz
fcomip
int3
std
pop
stc
xor
xor
shl
arpl
arpl
mov
mov
sbb
std
jne
push
negb
push
insl
mov
xchg
mov
in
inc
sbb
pop
push
mov
ret
jge
and
or
lret
jo
dec
add
mov
jle
vpunpcklbw
xchg
fistps
pop
push
pop
repnz
sbb
das
cmp
ret
xor
out
mov
out
stc
jae
cmp
ljmp
cmp
xor
idivb
cmc
jmp
add
and
adc
and
popa
push
loope
adcl
or
pop
mov
inc
fstpt
mov
hlt
jmp
or
adc
xor
out
sub
adc
sub
or
das
mov
cmc
outsb
cs
or
add
cmc
dec
jo
sti
loop
dec
add
jp
cld
ret
dec
jmp
out
pop
out
cmc
divl
cli
add
scas
jo
loope
push
lock
std
rol
fsubrs
cmc
stos
repnz
add
mov
jno
push
mov
push
rolb
rolb
xchg
out
faddl
test
xchg
add
stos
ret
es
call
jp
std
add
bound
jae
inc
mov
sbb
stos
push
out
lahf
sbb
xchg
lods
in
daa
mov
js
sti
shrb
ret
and
mov
jnp
sbb
add
inc
pop
mov
movb
int3
pop
jle
movsb
jmp
test
arpl
ljmp
pop
pop
repnz
xor
and
and
outsb
lret
cmp
fwait
mov
and
sahf
mov
test
divb
xchg
dec
mov
cmp
jns
dec
fs
mov
mov
add
adc
testb
push
iret
daa
sub
cmp
push
or
mov
fs
out
or
lock
cmp
mov
shll
pop
ljmp
test
repz
lret
xchg
test
mov
jbe
lret
sti
or
mov
out
add
inc
cmp
and
std
dec
roll
sub
sub
add
xchg
cld
cmc
fisttpl
dec
stos
cmp
std
mov
popa
fmull
push
popa
das
hlt
inc
ficoml
cmp
cmp
adc
sahf
stos
lods
orl
mov
xchg
sbb
std
popa
mov
add
jns
scas
shrl
xlat
cli
and
push
enter
lret
or
movsl
push
mov
fs
cmpl
push
es
loope
or
sahf
pop
movsl
dec
mov
mov
pop
add
sbb
xchg
test
sbb
testb
pusha
cmp
inc
push
icebp
add
fs
insb
popf
rclb
movl
test
mov
sbb
aas
push
fldenv
sub
sbb
test
imul
mov
mov
dec
jl
test
std
add
cld
out
pusha
stos
adc
sbb
sub
gs
add
fisubs
out
mov
int
adc
fcomps
lods
xchg
jecxz
stc
aad
cltd
test
xchg
fisubs
push
pop
jecxz
pusha
or
mov
sbb
vcomiss
orb
and
push
jl
scas
es
inc
xchg
adc
inc
pusha
or
fimull
xchg
mov
cld
mov
outsb
ljmp
lcall
mov
xchg
and
icebp
in
js
adc
mov
clc
or
mov
fidivrs
push
sbb
scas
fimull
mov
jbe
popa
sbb
cltd
mov
icebp
insb
and
jns
mov
ja
inc
and
push
pushf
mov
cmp
xor
test
mov
fwait
adc
fs
jge
xchg
inc
mov
jge
inc
inc
lcall
cmp
stc
and
lods
sbb
cmpl
pop
mov
cmp
adc
hlt
test
les
push
gs
lret
shr
fwait
insb
fs
adc
fimuls
jne
repz
mov
cmp
arpl
notl
cmp
mulps
hlt
cmp
or
dec
loopne
mov
or
or
adc
push
aam
sub
xor
add
in
jno
push
fdivr
shrb
stos
sbbb
sub
cmpsl
xchg
call
add
dec
and
push
push
pop
imul
icebp
cld
and
test
add
mov
ss
ds
pop
fs
lahf
aad
lret
push
pop
rorl
mov
testl
adc
inc
addl
fisttpl
mov
les
jno
push
adc
mov
fs
mov
and
fisttpll
repz
das
xacquire
or
daa
sbb
push
inc
sub
sti
mov
loope
inc
inc
jge
add
or
call
mov
pushw
rolb
rdmsr
lea
add
data16
out
sub
pop
or
xchg
xchg
ds
in
mov
insb
leave
es
or
add
arpl
loope
mov
outsb
jae
cmpsl
add
adc
jb
rorl
mov
mov
shr
mov
adcl
xor
xchg
adc
inc
sbb
outsb
xchg
mov
fnsave
mov
jmp
or
add
out
repz
test
sbb
sbb
sbb
add
adc
push
cmp
cmc
inc
testl
cmc
fs
inc
dec
jnp
mov
and
pop
xlat
sahf
add
test
daa
negb
addr16
jb
sbbl
fdivr
sub
fs
lahf
outsl
cmp
sub
aas
add
inc
lahf
fwait
mulb
negl
sbb
or
adc
xor
icebp
idivl
stc
test
mov
add
fisubl
imul
mov
jmp
or
out
adc
cwtl
sti
lret
and
or
ss
lahf
shll
lds
pop
push
fsts
cld
sbb
cli
adc
movl
pop
and
adc
xor
fdivrl
inc
jle
shll
sbb
jne
and
cmp
pop
imul
cmp
push
sub
rolb
lcall
enter
filds
fs
jo
loop
push
cmp
and
adc
xchg
iret
repnz
icebp
mov
stc
mov
dec
mov
push
pop
add
push
mov
pop
jbe
inc
nop
xchg
pop
mov
xchg
ret
mov
jmp
and
insl
jp
repz
push
jb
fdivs
shrl
out
sub
sahf
inc
or
jne
push
stc
add
jbe
pop
xchg
shrb
mov
idiv
cmp
inc
test
or
jg
cld
push
dec
pop
and
and
test
movsb
imul
in
mov
add
andb
jle
xchg
rolb
jle
loope
negb
shrb
cmp
push
jp
cmp
cmpsb
mov
push
mov
incb
push
xchg
sbb
add
mov
or
aad
mov
xchg
push
ss
or
pop
jp
out
imul
lods
push
cs
mov
hlt
and
mov
xor
add
add
pop
xor
into
xchg
xor
in
or
pusha
pop
imulb
pop
jmp
pushf
imul
jb
test
add
clc
cltd
ds
mov
xchg
mov
fisttps
or
roll
pop
and
mov
pop
mov
ficoms
jecxz
lahf
mov
rorb
lds
gs
mov
push
gs
cmp
iret
push
xchg
aas
std
push
inc
jecxz,pt
xor
loopne
daa
xchg
hlt
les
filds
inc
and
xor
jo
jl
sub
xchg
notb
std
dec
fwait
or
roll
push
pop
rolb
or
es
sbb
push
sbbl
jl
rcr
sbb
xor
pushf
mulb
cmc
inc
or
in
repnz
push
mov
neg
add
or
or
xchg
out
arpl
out
jge
out
dec
fcomi
scas
sub
les
mov
data16
mov
xchg
sbb
cmpsl
sbb
pop
cmc
insb
pop
idiv
mov
call
fwait
movsl
add
push
and
or
jne
inc
jle
test
popa
aad
pop
sub
xor
imul
sub
mov
xchg
mov
loop
add
shl
mov
outsl
test
int
call
out
xchg
adc
fs
orl
fisubrl
mov
jp
shll
and
shll
clc
add
sbb
fsubs
sbb
dec
rorb
pop
adc
movl
addl
inc
daa
push
das
sub
adc
jle
fs
push
and
clc
xchg
xor
add
popa
add
in
inc
aad
popf
ret
gs
ret
dec
data16
pop
xchg
xor
xor
dec
ror
add
mov
or
lret
inc
inc
add
out
stos
mov
jp
shlb
jp
incl
aad
add
in
fiaddl
shl
pop
push
mov
imul
push
testb
testb
jle
addr16
iret
sub
fstpl
fs
xchg
jl
add
cmp
imull
mov
inc
push
xchg
int
fsubs
inc
data16
mov
stos
mov
cmpsb
sti
mov
dec
inc
push
xor
scas
test
popa
mov
mov
insl
inc
sub
mov
addl
repnz
pusha
mov
add
rcrb
jg
inc
and
cli
fistl
sti
out
addb
popa
aad
dec
out
inc
test
inc
xor
addl
scas
pop
mov
xchg
fs
pop
push
jp
fsubp
loopne
ds
and
das
int3
adc
jne
and
stos
cs
or
jp
divl
sub
cmp
daa
rcrl
jbe
mov
lret
cmc
jl
out
fisubrl
aad
add
adc
pop
fbstp
fs
mov
pop
popf
jge
inc
xor
mov
mov
nop
and
addb
add
jl
jle
push
cwtl
ja
in
and
sti
and
xor
add
jmp
cmp
pop
ljmp
in
sahf
shll
cld
adc
test
cmc
or
imul
outsb
sub
add
jecxz
cmc
dec
lock
negb
gs
add
push
leave
fwait
pcmpgtw
cmpsb
adc
into
fwait
aad
out
mov
gs
push
fmuls
adc
std
cmp
add
aaa
mov
cmc
stos
pusha
arpl
push
fistl
push
fucomp
sbb
jae
clc
xor
jp
adc
ret
pop
in
into
repnz
jne
dec
xorb
lea
outsb
mov
hlt
xorb
add
dec
push
sahf
bndldx
rcr
xchg
scas
hlt
test
test
or
dec
lret
iret
movsb
cwtl
add
sbb
add
xchg
gs
xchg
jne
dec
cmc
pop
cld
testl
movb
mov
test
insl
sar
pop
or
sbb
lock
imul
inc
popa
adc
cmp
sti
mov
fdivs
arpl
sbb
jp
jae
mov
lds
cmp
jne
adc
xchg
add
add
add
mulb
mov
retw
popf
and
fsts
pop
shl
inc
push
mov
add
inc
cmc
sti
jne
outsl
mov
ljmp
les
ret
dec
xchg
int
add
out
cmpsl
addl
and
xchg
pop
xor
and
idiv
add
out
cmc
sbb
stc
sbb
pop
push
aas
xchg
add
add
or
es
mov
push
add
les
and
sbb
imul
cmc
nop
and
hlt
shl
xchg
stc
es
movb
sub
ret
in
daa
or
faddl
scas
arpl
dec
adc
inc
inc
xchg
repnz
inc
in
xor
lds
std
add
ds
ret
sub
fs
mov
fildl
lds
add
repnz
inc
and
fisubs
inc
orl
push
sub
mov
notb
mov
popa
mov
test
cs
add
pop
cmp
xchg
in
xchg
fnstcw
xor
popf
pop
sbbl
push
add
insl
add
lock
in
inc
ror
aas
movsl
xor
pop
mov
inc
out
mov
in
sbbl
mov
cli
int
aam
test
cltd
sbb
add
jmp
inc
fs
fiadds
bound
mov
add
cmp
out
cmc
sbb
sub
scas
call
sbb
adc
push
or
pop
mov
shl
mov
and
loop
sbb
inc
ja
and
je
inc
daa
repz
fidivl
sbbb
enter
clc
add
xor
jl
adc
inc
data16
lods
push
pop
call
pop
repz
sub
add
aad
shrb
and
repz
jg
fsubl
lret
scas
je
push
mov
mov
xchg
add
enter
sbbb
sub
bound
repz
jmp
out
adc
sbb
mov
cmp
sbb
mov
push
cmp
es
test
sbb
or
adcl
fbld
pop
jle
push
adc
es
icebp
rol
rcrl
sbb
pop
out
shlb
lock
fisubs
sub
xor
mov
sbb
fsubrp
int
adc
adc
cmp
and
icebp
repz
loop
test
push
nop
xorb
mov
scas
fiadds
cmpsl
insl
jl
pop
adc
push
dec
aad
adc
gs
ss
xor
and
fisubrs
setge
push
lds
outsl
hlt
in
je
cmc
or
mov
jae
xchg
xlat
cmc
xor
aad
adc
adc
add
pop
mov
or
mov
lcall
int
mov
push
or
ljmp
dec
xchg
inc
push
mov
in
add
push
dec
xor
in
sub
sub
pop
sbb
test
je
adc
outsb
addr16
int3
pop
sub
arpl
inc
jmp
jne
jecxz
jno
mov
pop
adc
loopne
and
inc
lret
mov
xchg
inc
mov
adc
mulb
mov
popf
test
and
jo
add
lcall
pop
stos
xchg
aam
sub
aas
xchg
cmp
mull
and
test
push
cld
out
cmc
idiv
pop
std
imul
in
add
insl
pop
fs
push
dec
testl
aam
lods
repz
and
sub
loopne
in
xchg
and
cld
xchg
add
cltd
jmp
int
pop
cltd
shlb
fisttpl
ret
push
mov
mov
sub
cmpsb
jp
test
scas
adc
pop
pop
outsb
jns
test
xchg
add
xchg
pusha
fucomp
ret
cmp
test
and
fwait
or
pop
add
push
add
aaa
ss
roll
push
out
sbb
or
aas
popa
push
jge
pop
inc
aam
or
mov
psubb
add
mov
out
pop
push
testb
mov
les
xor
sub
push
ret
mov
outsb
dec
imulb
das
repnz
out
fwait
inc
mov
testb
mov
jne
clc
insl
arpl
pop
mov
call
pop
jae
or
mov
pop
int3
adc
cmp
mov
out
mov
negb
jo
add
mov
inc
jbe
scas
xchg
test
fistl
mov
es
enter
loopne
sahf
cmp
sub
push
cmpsl
testb
cmp
fmulp
faddl
outsl
and
daa
mov
bnd
mov
js
sub
mov
and
mov
adc
andb
roll
cli
mov
add
inc
aas
outsb
repnz
add
inc
cli
mov
movb
or
or
repz
data16
out
add
lds
mulb
inc
pop
arpl
dec
cs
and
sub
jmp
xlat
enter
xor
jns
push
test
out
lock
dec
idivb
pop
gs
leave
cmc
push
faddl
inc
hlt
shl
ficoms
jmp
add
inc
and
push
mov
mov
jmp
sahf
jmp
addb
aam
sti
jns
popa
popf
leave
je
cmp
pop
push
fs
xlat
addr16
adc
inc
inc
push
data16
fs
pop
lcall
mov
cmp
sarb
jmp
pop
pop
inc
add
mov
or
les
imulb
fidivrl
jmp
nop
cmp
mov
aaa
test
sti
jecxz
mov
adc
cltd
jle
add
or
dec
int3
movl
mov
sbb
inc
add
andl
push
push
sti
out
adc
mov
pop
or
or
or
out
jecxz
das
mov
inc
mov
pop
push
inc
mov
arpl
cmpl
cmpl
xor
jne
loopne
sbb
add
jns
cmc
aaa
aad
cmpb
mov
inc
xor
mov
pusha
mov
cmp
adc
push
out
sub
mov
cmpsb
pop
xchg
ds
arpl
cmp
mov
imul
pop
mov
ds
sti
out
jge
bswap
fs
and
clc
inc
pop
cmp
add
scas
ja
sbb
out
jo
fcomps
and
icebp
test
icebp
add
aad
xchg
gs
ljmp
adc
push
add
adc
add
leave
or
stos
inc
fidivl
out
inc
mov
sbb
repnz
dec
push
lcall
ficoml
xchg
and
movsl
add
add
adc
push
or
fucomip
add
xlat
mull
insb
jns
mov
jae
outsl
inc
mov
sahf
sbb
rorl
or
cltd
leave
push
in
insl
out
xchg
mov
add
inc
dec
loope
and
or
mov
jl
out
add
lock
dec
ljmp
or
cmp
pusha
sbb
iret
test
add
and
ud2
cmp
push
popf
subl
stos
pop
es
inc
push
and
xchg
mov
and
stos
or
adc
mov
jmp
add
mov
not
or
add
or
iret
push
xor
shrl
push
push
mov
popaw
je
scas
scas
jl
xor
mov
arpl
in
lret
or
sbb
xchg
fnstsw
ljmp
xor
cld
push
inc
andl
sbb
sub
ljmp
rdpmc
cmp
out
pop
pop
aas
add
sub
pop
testl
cwtl
mov
cmp
movsl
jg
fdivrs
xchg
int
dec
cmpl
xchg
faddl
ret
sub
cli
fs
mov
loope
add
mov
mov
clc
and
int
les
push
out
repz
xor
lret
ljmp
sar
cwtl
sub
xchg
pop
pop
push
jae
push
aam
or
negb
xchg
in
out
mov
fisubrl
dec
divl
xchg
pop
cwtl
inc
icebp
loop
adc
insb
movl
stos
cwtl
pop
gs
add
cmc
lahf
push
push
mov
fistl
mov
cmp
arpl
mov
sbb
add
lret
and
push
push
xlat
pop
add
mov
sub
dec
clc
sbb
mov
push
add
cmpsb
inc
mov
and
fcomi
xchg
and
xchg
and
and
or
push
lods
mov
and
scas
rcll
and
cmovnp
xor
mov
jle
xchg
pop
das
add
ds
pushf
ficoml
stos
mov
inc
lock
stos
xor
int3
add
pop
jns
mov
inc
jb
cld
lcall
push
in
mov
loopne
lahf
leave
sbb
or
js
rcl
pop
pop
pop
fs
cmpl
jo
add
push
mov
and
outsb
int3
insb
mov
inc
nop
dec
push
add
xchg
out
xchg
sbb
xchg
adc
xchg
push
inc
sbb
jl
movsb
cmc
fs
sub
mov
sub
inc
xchg
pop
lcall
repz
out
dec
pushf
in
or
aad
xchg
fiaddl
sbb
mov
ljmp
ss
repz
add
cmpb
bound
xor
and
shrl
addb
cli
outsb
inc
arpl
or
loope
lcall
cli
cmp
int3
xorl
xor
dec
hlt
push
cmp
cmc
or
pop
or
ljmp
xor
outsl
jnp
push
add
in
lods
push
fstpl
lea
jno
test
dec
je
aad
and
rorb
mov
loop
popa
and
fimull
je
lods
add
push
jp
mov
or
inc
adc
outsl
repz
ret
gs
jl
and
jmp
inc
fs
mov
add
or
mov
push
test
test
shl
aad
push
push
and
sub
stos
lret
rorl
jg
addr16
lahf
push
daa
add
dec
arpl
sub
dec
cmc
fldt
adc
imul
adc
mov
add
mov
mov
dec
nop
push
mov
add
pop
in
push
lds
push
lret
pop
aad
and
push
shlb
mov
into
dec
aam
pop
lret
xor
push
xor
mov
cmp
cmpl
mov
out
pop
sub
adc
enter
std
loope
or
test
sub
adc
adc
mov
xchg
ds
adc
divb
or
add
popa
push
sbb
arpl
mov
and
mov
in
inc
aad
jle
inc
jl
lret
gs
pop
xchg
rclb
jns
pop
push
jno
or
adc
pop
push
push
inc
mov
enter
adc
ss
cmp
imulb
into
js
dec
add
add
dec
push
hlt
push
mov
sub
ficompl
iret
clc
inc
test
cmc
int3
mov
jecxz
dec
loope
jae
fsubrl
lods
ds
sti
cmp
xchg
add
cmc
add
cs
inc
push
and
sarb
incb
and
xor
repnz
test
adc
icebp
xchg
push
mov
leave
inc
mov
cs
sti
or
push
popa
push
shl
jb
add
xchg
pop
and
push
add
loope
cli
rclb
sub
mov
xlat
add
mov
fnstenv
mov
jecxz
cmc
test
es
rep
sbb
mov
adc
out
mov
sub
mov
data16
or
add
movsb
outsl
pop
or
mov
sub
loope
xor
push
fs
ret
out
pusha
repz
test
loope
arpl
sahf
hlt
dec
out
add
cmp
arpl
mov
adc
lea
inc
rcr
scas
loopne
in
or
add
orl
daa
out
inc
popa
sti
add
sub
cltd
mov
lret
xchg
out
stc
jbe,pt
add
test
jg
sahf
add
push
push
cmp
idivb
push
cmp
pusha
faddl
adc
es
scas
fsubp
push
testb
out
aam
fldenv
loope
or
ficoml
imulb
mov
fdiv
sbb
sbb
add
push
ficoms
mov
cmc
mov
push
out
cs
push
fistpl
notb
dec
rolb
scas
lcall
clc
imul
or
and
je
dec
add
mov
sarb
imul
cs
push
mull
aam
shl
push
add
pusha
out
cltd
mov
adcb
dec
sub
movsl
popa
mov
fisubl
pop
cmp
shlb
mov
xor
pop
test
lret
xchg
xor
mov
add
out
mov
xchg
add
popa
pop
in
pop
inc
add
loope
jne
dec
mov
shr
sarl
gs
add
dec
xor
insl
movsl
push
add
push
out
push
mov
aas
adc
loope
test
into
mov
sub
in
push
add
xchg
cmpsl
mov
jg
rorl
add
mov
cmc
lock
aaa
xor
outsl
add
xor
fs
or
mov
xor
xchg
data16
and
out
inc
imul
je
xchg
notb
or
sbb
sub
sarb
jmp
push
or
jmp
lds
out
sbb
xchg
ljmp
push
mov
xchg
cmp
pop
push
or
nop
cmpsl
jno
or
popl
jmp
adc
test
insb
cld
ret
dec
data16
jle
out
and
jle
add
out
or
and
add
insl
cmp
es
jecxz
int3
cmp
or
out
jbe
jmp
lods
mov
out
repz
fs
ljmp
add
data16
sbb
cmc
lods
shll
addb
in
push
mov
mov
repnz
or
repz
mov
sub
lock
xor
add
pushf
fidivrl
fs
fs
or
mov
aad
icebp
loope
cli
data16
pop
add
gs
cmpsl
add
jp
sub
fs
scas
pop
bnd
sbb
adc
inc
jo
in
push
mov
mov
in
andb
loope
call
push
xchg
jae
cld
stc
ss
xor
xchg
cld
test
dec
pop
movb
mov
adc
mov
addl
mov
push
loop
push
stc
fs
jp
jmp
into
lock
or
fstps
push
fldcw
push
push
xor
lock
stc
pop
cmp
add
sub
rolb
push
dec
and
add
pop
in
xlat
mov
add
fs
lds
add
jb
cld
xchg
fcomi
ret
add
mov
or
mov
hlt
in
fs
dec
loope
jb
pushl
sarb
and
aam
data16
xchg
movsl
pop
cltd
jae
ljmp
pop
mov
cmp
mov
cli
mov
movsl
dec
cmc
sbb
gs
into
loopne
pop
inc
test
cli
sub
bound
jge
pop
add
fisttpll
test
push
divb
test
cs
sbb
std
fs
mov
cmp
mov
sarb
mov
push
cld
sub
sbb
pushf
add
test
sbb
popf
push
mov
stos
gs
jne
pop
es
lret
add
adc
jno
add
pop
dec
test
cmp
cli
xchg
paddq
lds
adc
add
lods
pushf
jge
pop
and
dec
test
shll
in
negb
push
dec
cs
and
cmc
loope
outsb
lds
sti
daa
and
leave
sub
push
out
test
fs
popf
and
loop
xor
xchg
mov
adc
push
fst
inc
ljmp
ficompl
sub
inc
jne
int
mov
inc
out
pop
mulb
bound
or
test
push
loope
pop
sub
mov
cld
xor
movsb
repz
jg
mov
add
leave
push
pop
push
mov
inc
inc
push
pop
andb
scas
mov
fs
fscale
repz
rcll
shlb
jae
add
rcll
xchg
outsb
add
out
and
cli
je
sti
jg
imul
dec
add
test
adc
call
xchg
add
xchg
in
add
mov
adc
xchg
out
mov
dec
add
out
icebp
jle
int
sbb
inc
mulb
and
add
jnp
enter
fs
or
loope
mov
cmp
pop
hlt
imul
adc
test
mov
int
push
aad
cs
std
xchg
daa
xor
jb
xchg
xorl
push
push
xor
imul
push
xor
lds
mov
adc
sub
or
xchg
mov
xchg
scas
adc
sub
rol
xor
sbb
sub
in
arpl
cmpl
inc
pop
outsl
ss
pushw
orl
sbb
out
pop
push
xchg
add
jbe
add
out
in
and
add
mov
pop
mov
push
movsl
and
cwtl
or
sbb
sbb
adc
add
sbb
pop
add
cltd
pop
mov
test
mov
ret
aad
xchg
into
mov
mov
fistl
push
inc
xor
adc
xor
into
xor
add
xchg
punpckhbw
test
add
lods
mov
add
mov
jns
daa
xchg
pop
add
aam
mov
inc
iret
jecxz
enter
imul
xchg
or
push
mov
popf
int3
fs
loopne
mov
jnp
stos
shll
movsb
mov
cmp
rcrl
ds
mov
push
es
pop
testb
stos
add
inc
add
insl
gs
mov
xor
xchg
jge
in
sbb
addr16
sub
add
sub
xchg
insl
add
pop
push
jmp
or
pop
clts
and
lahf
popl
nop
jle
repz
mov
mov
inc
xchg
mov
test
mov
enter
sbb
cld
cli
orb
xlat
inc
cmp
popf
aaa
orb
cld
xorb
shll
sbb
pop
mov
mov
fwait
hlt
mov
jns
adc
mov
inc
mov
fucomi
push
leave
fstpt
ficoms
add
mov
add
or
lods
leave
outsb
inc
hlt
sbb
adc
and
mov
xchg
sbb
mov
faddl
mov
push
fadds
add
xchg
add
and
jp
es
in
stc
out
dec
mov
sub
sub
add
out
lods
mov
clc
ficoms
pop
loopne
testb
cmc
sbb
movsb
cmp
adc
aaa
pop
pop
add
add
cmp
cmc
out
imul
add
out
mov
cmpsb
mov
xor
stos
or
lods
cwtl
aas
imulb
xchg
dec
rcl
pop
sub
lahf
mov
and
sub
push
movsb
xchg
xchg
std
mov
xchg
pop
pop
cmp
sbb
pop
insb
jnp
or
cmpsb
cmp
cmp
scas
orb
mov
sub
fistpl
push
icebp
sbb
movsl
dec
pop
inc
sbb
imul
mov
pop
add
aas
lret
imul
jecxz
cmc
or
cmp
sub
sti
testb
cmp
inc
push
cmc
std
or
bswap
cmp
cld
lods
andb
xchg
movsl
xor
or
xchg
inc
clc
sbb
adc
dec
push
stc
push
call
mov
inc
or
shl
sbb
add
inc
ror
mov
mov
add
push
inc
scas
pop
add
cmp
adc
push
or
pop
cld
iret
imul
mov
add
mov
mov
imulb
flds
pop
fcompl
mov
aaa
out
movb
adc
outsl
cmp
cmp
xchg
mov
add
sbb
mov
or
push
or
push
pop
stos
and
lcallw
stos
gs
hlt
xchg
flds
dec
pop
mov
adc
pusha
idiv
fildll
add
imul
and
fs
or
aaa
jge
xor
decb
inc
stc
aam
int3
jno
add
add
adc
ljmp
dec
ret
adc
or
sbb
inc
add
sbb
mul
outsb
sbb
sbb
pop
roll
jmp
out
in
andb
adc
je
mov
stc
pop
jle
and
out
arpl
sbb
into
jae
out
into
sub
cwtl
and
inc
sub
data16
mov
idivb
stc
mov
add
dec
lods
and
fs
jle
jecxz
and
data16
arpl
div
mov
bound
imul
and
jl
and
imul
pop
scas
sbb
pop
loop
push
fs
pop
mov
pop
cli
stos
mov
dec
outsb
cld
dec
idivb
je
adc
inc
cwtl
lods
cmp
mov
mov
dec
stos
movsb
jnp
fsubrl
or
cmp
push
das
push
cmp
stc
mov
add
std
add
stc
aam
add
notl
jbe
lret
movsl
lods
push
adc
add
cld
sub
repnz
pop
xchg
and
fdivr
stc
stos
inc
adc
dec
divb
leave
fidivrs
mov
popa
leave
in
and
movsb
inc
add
xor
andl
rolb
pop
dec
or
and
adc
mov
mov
or
enter
sahf
cmpsl
hlt
xchg
push
stos
data16
bswap
mov
inc
ss
mov
icebp
fsub
sbb
in
xlat
in
dec
cmpsb
jge
cmp
pop
jae
mov
sbb
insl
fs
jne
mov
cmp
imul
mov
loop
fwait
pop
call
stc
fcmovnb
add
mov
stos
aaa
jb
jnp
add
push
mov
or
mov
push
and
adc
cmp
push
lea
push
popf
cmpl
popa
jle
mulb
xor
inc
push
mov
loop
leave
out
sub
or
jbe
mov
add
push
mov
ds
pop
xchg
jmp
sbb
jns
mov
aad
adc
xor
xor
add
pop
aad
mov
mov
sub
mov
jl
jo
ja
jmp
jmp
cmp
push
mov
lcall
sar
pop
imul
xor
sahf
and
add
and
push
div
mov
xlat
push
sbb
pop
mov
cmp
in
add
adc
adc
jle
arpl
jns
test
mov
xor
in
or
push
xchg
add
mov
sbb
mov
fs
pop
cmp
mov
pop
aad
dec
stos
jnp
test
push
mov
cltd
lcall
repnz
roll
or
ret
ret
in
push
adc
aas
xchg
jge
push
sbb
or
dec
fstl
cmpl
push
lcall
add
jb
loopne
fnstenv
jae
pop
not
xchg
mov
dec
xor
xor
sbb
jo
push
adc
sbb
add
push
cwtl
or
xchg
jp
aaa
movsl
jmp
jbe
aaa
insl
test
pop
jle
dec
out
jmp
and
mov
mov
or
xor
loop
test
fisttpl
das
mov
int3
out
xchg
mov
daa
mov
subb
mov
sub
fs
adc
pusha
add
dec
dec
and
sub
pop
in
mov
pop
sub
jb
push
pop
push
add
in
je
fs
inc
popa
pusha
and
stos
popa
popl
push
sbb
andb
jecxz
and
jmp
xchg
xorl
outsb
inc
xchg
lcall
test
lds
stos
divb
or
add
cmp
fcompl
aam
cmp
int
bnd
les
push
jbe
mov
cli
ja
dec
out
add
xor
xor
jb
sti
mov
daa
imul
mov
or
test
out
cmc
insb
adc
mov
in
mul
sti
pushf
add
imul
cmc
daa
mov
fcmove
int3
decb
cmp
cmp
jmp
aad
jge
cli
addb
outsl
shlb
jge
div
leave
pushfw
addr16
and
add
sub
inc
mulb
lods
push
call
jnp
iret
jecxz
notl
jg
add
ret
inc
nop
outsb
or
lret
push
cmc
xor
cwtl
or
cmpsl
push
clc
dec
cmp
adc
cmp
mov
icebp
adc
xor
das
xor
das
call
mov
pop
add
jg
shll
inc
jl
add
xchg
inc
xchg
loopne
jbe
or
cmp
sbb
gs
xor
push
aam
add
sahf
imull
pop
aam
ss
test
stc
call
add
fbstp
in
ss
div
xlat
cmp
push
test
pop
mov
jae
add
mov
dec
insl
loop
pusha
hlt
or
jl
sub
stc
sbb
testb
hlt
add
in
andl
repz
sub
out
stos
out
aas
jecxz
testl
sub
cmp
insb
mov
out
roll
inc
mov
je
add
inc
adc
imul
mov
sbb
pop
add
jnp
xor
popa
mov
xchg
jns
jnp
cmp
sbb
and
pop
rcrb
add
outsl
loope
insb
mov
mov
adc
pop
mov
dec
cld
mov
and
lods
xchg
add
inc
lret
js
add
mov
adc
add
mov
testb
mov
add
xor
push
stc
jp
dec
sub
movsb
stc
add
push
jno
dec
fs
test
jns
in
leave
fildl
jb
sub
and
adc
les
inc
add
decl
paddb
cli
jmp
in
bound
fiadds
inc
push
push
daa
push
data16
jg
fs
in
pusha
loopne
lcall
mov
inc
push
or
xchg
fs
leave
adc
add
mov
mov
push
ljmp
push
xchg
xor
test
notb
mov
cld
xor
inc
pop
or
leave
std
push
test
stc
cmp
stos
pop
pop
cmp
or
adc
add
add
push
adc
mov
shlb
aas
fdivrs
js
mull
mov
pop
out
gs
add
add
mov
sbb
lret
push
or
mov
sub
outsb
add
int
sbb
xchg
push
fcomps
jge
fs
jecxz
pop
insb
push
pop
cmp
adc
add
nop
fimuls
std
addb
stos
icebp
je
and
adc
hlt
sub
sbb
cli
aas
popa
bound
in
cld
sbb
xor
or
cs
dec
loope
add
mov
sarb
fs
jl
or
and
cmp
cmp
scas
push
negb
daa
icebp
sub
xchg
test
fists
stc
add
cmp
ds
push
add
lret
or
or
in
into
push
adc
cltd
pop
dec
add
fbstp
imul
sbb
pusha
add
cmp
push
pop
sbb
cmc
movsb
lds
xor
pop
aam
lret
cli
std
inc
test
ljmp
xchg
addl
leave
mov
notl
subw
mul
inc
jecxz
jg
and
xchg
pop
sbb
out
push
or
and
repz
cmp
push
or
icebp
pop
jbe
pop
repz
maxps
call
pop
pop
dec
fsubp
sar
in
mov
and
mov
roll
arpl
cmp
iret
adc
add
sti
pop
add
push
add
push
push
rorb
aam
test
stos
subl
sub
jg
push
rolb
lahf
lock
xor
jmp
and
mov
push
push
push
mov
sub
jo
adc
adc
add
push
les
ret
roll
push
push
mov
movsl
jb
xlat
inc
adc
xor
sub
adc
test
cmp
aas
jge
fs
xlat
sub
sbb
and
inc
sbb
int3
pop
ds
mov
push
pop
mov
stc
jae
imul
sbb
sbb
fnstenv
fs
lret
dec
ss
movsl
add
pop
out
in
and
loop
cmp
mov
gs
add
jmp
dec
test
push
mov
add
mov
adc
dec
adc
sbb
testb
movsb
jns
repz
shll
pop
push
xor
and
xor
in
mov
xchg
pop
idivb
insl
push
addb
bound
cltd
out
bound
add
fnsave
xor
or
and
pop
cmpsb
iret
xor
add
jp
sbb
xchg
shrl
imulb
out
jg
cmp
xor
ds
add
dec
xchg
arpl
rol
xchg
jl
pop
and
push
jbe
int
add
int
sub
add
stos
aad
stos
xchg
push
push
popa
movnti
push
cmc
fildll
negb
lock
dec
gs
lret
icebp
dec
add
mov
mov
xor
fiadds
dec
xchg
jns
jge
jb
sbb
sub
add
in
cmp
and
ret
add
pop
mov
sub
or
fidivl
jp
fimull
sub
sbb
cld
adc
int3
pop
push
es
jp
inc
outsl
rcll
hlt
xchg
cld
sbb
add
scas
and
ljmp
fcom
dec
pop
lcall
popf
cli
inc
je
mov
and
add
cmp
fsubrp
add
pop
pop
lea
bound
inc
scas
pop
adc
fisubl
pop
pop
test
outsb
sub
push
adc
aam
lods
add
rol
mov
repz
cltd
mov
shll
xor
push
dec
and
and
lods
test
xchg
add
cmp
sbb
push
movsb
add
pop
pusha
jecxz
xchg
imull
ss
push
rorl
push
fsubr
adc
std
sahf
ucomiss
mov
jmp
jno
shlb
ja
push
xchg
xor
jmp
imul
pop
jbe
lcall
pop
adc
add
repz
pop
fisubrs
lret
pop
ss
pop
ror
cwtl
scas
in
lea
and
push
add
clc
dec
mov
adc
xorb
add
pop
dec
inc
insb
add
cmpsl
adcb
or
outsl
inc
jmp
call
inc
leave
popa
out
sti
add
jns
sahf
push
fs
pop
pop
fsubrs
incl
loop
mov
cli
test
sub
dec
lock
pshufw
add
popf
and
repz
sub
mov
mov
sahf
dec
aas
cmp
push
addr16
sub
add
xor
gs
push
nop
mov
repnz
sti
xor
xchg
inc
aaa
je
mov
sub
ljmp
addl
stc
js
fidivl
pop
imul
dec
cld
movsb
out
and
mov
filds
or
push
or
int3
ss
subb
jns
push
prefetch
jg
mov
push
cltd
sbb
test
lret
insb
xor
popa
pop
add
mov
lods
inc
mov
jns
loope
sbb
add
or
rcrl
lret
push
jb
adc
jg
xor
inc
inc
mov
dec
js
push
stos
test
loope
lds
xchg
add
sti
pushf
sbb
dec
scas
cld
icebp
fidivrs
es
dec
pop
add
cmc
push
inc
lret
movsb
call
filds
push
cmp
sub
ret
hlt
xor
jmp
jns
es
lods
xchg
ret
in
sub
stos
pop
sbb
jl
stos
xchg
and
aad
or
and
rolb
test
stc
jns
outsl
arpl
push
in
add
inc
mov
jmp
outsb
loop
add
fprem
mov
xchg
in
xchg
mov
mull
push
hlt
pop
scas
xchg
jge
mov
sub
cmc
and
sarb
cmp
ljmp
push
push
add
in
call
ror
idiv
outsb
xchg
mov
or
add
icebp
pop
lretw
ja
or
jbe
mov
icebp
roll
push
jnp
rolb
add
fnstsw
addl
push
add
adc
fs
xchg
aas
call
cmp
add
dec
or
xor
movsb
shll
out
in
lods
arpl
and
xchg
jnp
out
xor
loope
adc
or
push
insb
dec
insb
dec
int
icebp
neg
mov
cmpsb
jecxz
pushf
add
cmc
jns
or
inc
cltd
rcl
popa
test
dec
lret
fiaddl
leave
lret
mov
data16
ret
xor
out
mov
pop
mov
sub
jns
push
inc
jo
fmuls
inc
test
pop
lods
ljmp
test
dec
in
cli
loope
sbb
or
popf
xchg
outsb
mov
sbb
push
add
adc
add
test
cld
push
idivb
or
sbb
bswap
pop
loop
popf
push
movsl
xchg
arpl
stos
orl
push
and
test
xchg
xor
testb
sbb
imul
mov
cmpsb
mov
loopne
inc
push
addl
adc
cmp
ret
fs
and
jnp
mov
std
jle
bound
push
test
call
push
sub
pop
xlat
js
fisubl
fs
out
dec
enter
pop
or
add
sbb
fnstenv
jl
testb
cmp
and
mov
adc
cmc
in
jle
lea
jnp
pushf
pop
popf
ljmp
inc
andl
jnp
and
pop
cmp
and
push
les
push
dec
dec
xor
cltd
test
add
sub
adc
sbb
cmc
les
and
jb
xor
pop
xlat
push
push
push
or
pop
shll
pop
inc
add
icebp
and
orl
roll
in
fmuls
incb
cmp
or
or
stc
adc
cs
add
fs
mov
xlat
orb
mov
rol
cld
fmull
dec
subb
movsb
add
test
test
sbb
mov
andps
and
daa
pop
mov
adc
nop
icebp
test
lock
adc
and
dec
pop
or
stc
nop
cltd
jne
pop
mov
add
mov
add
cmp
rolb
inc
jl
into
xchg
xorl
es
frstor
mov
dec
aam
ret
data16
aad
dec
mov
inc
std
in
ss
ficoms
negb
out
push
or
pop
arpl
fcoms
insb
sub
sbb
out
jns
out
popa
mov
enter
mov
and
add
shr
jecxz
push
gs
int
out
in
arpl
testb
jge
fistps
rclb
test
dec
push
test
push
adc
dec
test
aas
fnstsw
sub
mov
xor
or
les
mov
mov
adc
int3
sbb
xchg
pop
iret
stc
push
addr16
jmp
mov
xchg
bound
into
cli
cmc
lret
cmp
add
push
ret
add
or
cmp
cmpsb
testb
out
mov
and
add
sbb
push
sbb
inc
push
fs
sub
cwtl
fs
pop
xchg
or
test
inc
fs
in
mulb
out
add
movb
movl
or
xchg
push
inc
mov
mov
add
mov
int
shll
add
pop
leave
push
icebp
fs
lods
movsl
aaa
inc
inc
lea
mov
or
cmc
cmc
push
in
or
cmp
std
stc
add
in
inc
shr
in
test
push
sub
and
xchg
aad
sahf
adc
pop
out
ds
in
cmc
and
clc
jae
xor
cli
push
or
ss
pop
imul
add
push
mov
sub
or
add
cmp
push
lret
fs
xor
inc
sbb
add
jnp
mov
xchg
jbe
test
cmp
add
jb
pusha
cltd
aaa
xchg
sub
gs
jb
and
or
lods
fdivr
adc
add
bound
mov
mov
das
testb
cli
pop
jg
push
add
adc
cmp
jb
in
add
or
mov
dec
lretw
or
mov
jo
fildl
sub
daa
pop
out
icebp
dec
repz
and
ret
shrb
jo
mov
mov
xchg
outsb
cs
dec
cmp
stos
and
mov
imul
or
adc
add
ret
dec
add
jle
add
xchg
test
mov
cli
jbe
inc
push
cmp
mov
or
repnz
cld
test
inc
inc
jmp
adc
mov
add
sbb
lret
inc
pop
xlat
into
in
cltd
divb
loop
aad
sbb
lret
fidivs
add
push
pop
adc
add
mov
or
lock
shufps
push
xor
ret
xor
dec
cmpsl
adc
data16
pop
sbbl
int
push
lock
xchg
pop
push
mov
add
xchg
jmp
cmp
fucomip
sbb
cmpl
dec
sbb
adc
icebp
outsb
add
popa
cli
mov
inc
out
jns
andb
jecxz
hlt
lods
lods
test
or
icebp
sub
or
leave
inc
lods
test
and
adc
mov
push
flds
lahf
into
xchg
mov
sbb
sub
mov
jne
aaa
fwait
shrb
lea
pop
rolb
fisubrs
mov
dec
std
pop
andl
and
cld
movsl
loope
add
in
push
push
mov
ret
or
and
jge
xchg
int3
jns
fs
mov
test
sti
cmc
aam
fstpt
repz
add
inc
bound
xor
fisubl
jbe
incb
xor
push
add
je
ja
cmp
cmc
push
icebp
ss
fbstp
repz
xchg
cld
iret
aam
daa
push
fistpll
mov
enter
inc
popa
mov
arpl
sti
push
or
fldenv
sbb
gs
int3
arpl
inc
mov
test
jmp
cs
dec
sbb
out
add
divps
adc
insl
jno
testb
pop
mov
add
lock
filds
push
lret
int
and
sahf
pop
mov
jnp
adc
call
add
lret
pop
fmull
push
lds
inc
and
js
pop
int
add
popa
pop
lcall
cmp
rcrl
pop
dec
lea
in
loop
incb
cltd
cmp
cltd
inc
push
adc
sbb
in
lret
ss
or
imul
xchg
jb
lods
dec
hlt
and
mov
out
mov
sub
add
cs
or
scas
clc
push
dec
popa
adc
stos
fs
sub
jo
pop
mov
jne
jbe
xchg
cmp
sbb
add
xor
rorl
xchg
mov
pop
push
mov
push
or
push
stc
in
into
xor
lea
jne
mov
add
adc
rcrl
fs
jg
push
pop
hlt
add
icebp
adc
cmp
cmc
ds
jg
pop
mov
or
test
xor
or
inc
cs
jno
inc
jae
cmc
insl
fnstsw
jge
xchg
mov
pusha
add
pop
int3
pop
mulb
test
xchg
or
inc
add
dec
pop
jbe
pop
test
pcmpgtb
cmp
cli
or
pop
movsb
std
dec
and
mov
fldl
add
lods
pop
cmc
adc
xchg
mov
and
cmp
fsubl
popf
and
sbb
add
jmp
xor
cmc
fwait
sahf
push
pop
imul
and
popa
jmp
push
push
push
jp
movsb
add
cmpsl
and
xor
xchg
add
repz
push
mov
stc
insl
inc
push
pop
notb
fbstp
push
jnp
mov
mov
xor
mov
or
iret
testl
jmp
fwait
jp
mov
push
mov
out
loop
fs
push
popf
mov
add
mov
pop
in
cmc
jns
testb
sub
out
pop
adc
cmc
lea
fs
pop
mov
fstpl
mov
loope
cli
cmp
xlat
cmc
mov
lock
shl
das
in
inc
pop
fldt
test
fadds
sub
and
add
inc
popf
jns
mov
cmp
test
xchg
inc
mov
sub
fsubs
dec
fisubl
fnstenv
fnsave
or
ficoml
jns
cld
ljmp
fstpt
dec
inc
iret
mov
loopne
hlt
xchg
pop
das
add
and
sbb
pop
cld
cmp
popa
lods
push
dec
add
mov
or
add
test
add
call
cmp
ret
fimull
sbb
add
jns
scas
mov
rcll
in
pop
gs
lods
inc
add
imul
dec
fs
js
push
xchg
clc
mov
fs
pop
out
jge
and
push
jecxz
xchg
fisttps
movsb
mov
jae
add
sbb
shlb
push
push
mov
lds
push
dec
push
push
cli
adc
cmp
cld
jno
repnz
mov
in
pshufw
aam
icebp
pop
add
addl
or
aam
pop
out
or
push
popl
sahf
sahf
jle
dec
mov
jle
out
xor
and
or
add
out
mov
pavgb
cmp
repz
pop
dec
clc
mov
xchg
jge
aad
shll
cmp
das
adc
add
dec
mov
lahf
std
pop
lock
clc
enter
xchg
pop
cmpsb
aas
cmp
sbb
in
xorl
dec
imulb
adc
icebp
rcll
ss
mov
cmc
ficoml
in
or
mov
push
adc
mov
add
xchg
add
and
js
inc
shrb
jbe
mov
or
and
adc
dec
add
sbb
mull
fwait
repz
xchg
js
lock
xor
mov
xorl
pop
cltd
hlt
sar
add
fwait
scas
test
adc
dec
sub
pushl
or
mov
push
dec
mov
aas
into
in
pusha
ret
push
ja
sbb
push
imul
or
inc
push
ja
arpl
add
stc
push
or
add
pop
repz
mov
lock
loopne
rol
repz
fs
xor
dec
inc
sti
cmp
jbe
sbb
aam
std
sub
xchg
cmp
sub
sub
add
inc
test
frstor
push
sbb
jno
push
xchg
add
fadds
or
mov
mov
cmpsb
arpl
pop
pop
and
inc
or
es
jbe
nop
out
je
cmc
fdivr
or
add
loopne
or
push
mov
in
outsb
mov
xchg
or
add
mov
mov
dec
adc
addl
lahf
and
pop
push
dec
or
adc
mov
add
jg
cmp
sub
push
inc
mov
xchg
sub
cmp
idivb
xchg
jno
mov
aam
and
push
add
cld
loopne
cld
xor
sbb
adc
mov
or
or
and
lahf
stos
and
xor
adc
mov
xor
jne
sub
xchg
jns
jmp
in
cwtl
jno
jo
add
adc
push
cli
sbb
adc
push
out
jbe,pn
mov
out
pop
fs
cwtl
pusha
mov
lock
push
and
inc
add
sti
pop
xchg
clc
add
loopne
ja
adc
jno
fs
pop
pop
insl
cmc
sbb
mov
ret
mov
jae
jp
xchg
cmp
mov
push
push
rolb
icebp
push
push
sti
xor
insb
cmp
and
int
pop
testb
shl
loop
out
or
enter
das
or
jle
scas
into
hlt
into
test
cmp
cld
adc
push
push
fisttps
push
push
lahf
jmp
push
jbe
push
mov
dec
xadd
in
pop
add
xor
test
mov
mov
decb
mov
add
pop
add
gs
test
sub
cmp
outsl
lds
sub
es
rolb
mov
fnstcw
int
push
dec
es
out
cmc
pop
pop
jns
sub
xorl
adc
das
push
adc
push
push
je
push
and
fisubs
insb
add
and
cmp
cmp
add
dec
pop
aaa
push
pusha
pop
add
popa
xchg
sub
jp
mov
and
js
mov
inc
aad
xchg
fadds
pop
scas
or
sub
in
or
pop
add
and
imul
dec
add
jne
loop
ds
sbb
daa
add
push
mov
notb
lcall
mov
push
arpl
mov
ss
call
test
sub
mov
and
xorl
pop
xor
sbb
dec
testb
sbb
adc
dec
cmp
popa
cmp
outsl
cmp
mov
xchg
fcoml
adc
push
arpl
sti
inc
ret
stc
xor
push
add
test
mov
xchg
lock
push
dec
push
inc
daa
push
cli
or
imull
push
testb
inc
popa
arpl
pop
pop
aas
cld
mov
push
xchg
js
mov
xor
mov
andl
jl
add
xchg
je
cmp
mov
out
fs
stos
cs
jl
dec
ljmp
stc
push
push
inc
add
les
dec
stos
xchg
imulb
data16
testb
in
int
int
leave
jns
fs
outsb
pop
mov
and
jg
add
cmp
int
cli
or
dec
dec
fwait
mov
sbb
int
dec
aas
adc
add
popa
mov
xor
inc
lret
loope
pop
fs
pop
idivl
add
ss
movsb
in
sub
push
mov
pop
mov
or
cmp
fidivs
mov
push
inc
fiadds
push
cmp
shr
add
mov
or
pop
lds
push
add
push
cmc
stc
lahf
in
xchg
add
push
mov
and
xchg
jns
jg
ret
inc
or
lods
movsl
in
in
daa
mulb
mov
fs
inc
or
push
mov
jle
pop
fs
sub
shll
out
hlt
jne
and
icebp
fs
cmp
insb
cmp
movsl
je
mov
inc
out
jge
mov
add
jne
insl
sbb
add
lods
adc
loop
ret
push
mov
mov
push
add
or
jecxz
sti
rclb
or
movsb
mov
sbb
push
mov
daa
sbb
cmp
jae
testb
sub
add
loop
push
cmp
sbb
daa
jae
scas
add
rclb
mov
inc
lret
ljmp
and
pop
shl
movsb
pop
mov
inc
mov
ffree
inc
daa
mov
mulb
bound
or
cld
pop
repz
cmp
and
xchg
int
jno
insl
loop
addr16
nop
add
xchg
lret
dec
pop
mov
fisubl
pop
nop
inc
mov
test
mov
rolb
cltd
imul
cmp
ficoml
inc
lods
add
xchg
lds
sbbb
sbb
or
sarb
ja
orb
inc
add
idivl
rclb
icebp
and
mov
iret
or
enter
pop
cmc
mov
mov
jbe
mov
insb
dec
push
push
pop
test
aas
and
and
or
jecxz
fldt
add
test
add
outsb
sar
out
add
xchg
stos
mov
out
xor
and
cltd
mov
xchg
stos
sbb
or
rorb
cli
and
add
lods
or
push
adc
push
xor
das
and
sbb
andl
jns
sub
add
adc
scas
fcompl
push
dec
and
into
icebp
add
test
gs
scas
out
pop
rorb
int3
in
sub
add
sarb
in
popa
add
out
mov
cmp
or
sub
jmp
dec
jl
scas
push
scas
cmc
sub
data16
mov
inc
sbb
aaa
loopne
cmp
pop
fists
rolb
xor
js
mov
dec
data16
xor
in
sbb
jmp
add
jb
addr16
adc
inc
or
pushf
das
lret
inc
std
add
or
sub
add
test
ljmp
dec
dec
into
repnz
cmp
add
imul
lahf
adc
lcall
imul
out
adc
jb
bound
cs
cmc
mov
rcrl
xor
sbb
das
sbb
cmpsb
fldl
testb
int
mov
movsl
insl
mov
mov
xchg
ret
cs
movsb
xor
jg
pop
movl
pop
stos
addl
lcall
addl
inc
div
out
outsb
or
jne
in
fadds
das
loopne
dec
sbb
shlb
inc
push
add
cmp
cmp
push
push
adc
shl
xchg
xchg
iret
loope
adc
jge
and
sub
ds
cli
stc
jns
pop
sbb
leave
inc
pop
and
ret
and
cltd
adc
dec
and
add
mov
xchg
out
push
mov
cs
je
cli
js
enter
mov
sub
test
push
aad
adc
xorl
mov
inc
push
lahf
ficompl
pop
gs
sub
icebp
data16
mov
dec
filds
daa
nop
jbe
or
fs
jp
and
jecxz
dec
cmpsl
notl
sbb
cmc
pusha
fs
clc
rcrb
sbb
aad
xchg
adc
jbe
push
addr16
mov
divl
insl
test
divb
cmpl
cs
xchg
mov
sbb
cmc
ret
adc
loop
push
loope
testl
insb
xor
pop
inc
jbe
fstl
cmovl
and
test
out
mov
rcrl
stos
mov
cwtl
imulb
sbb
xor
ret
addl
xor
push
push
add
push
in
dec
leave
and
sbb
pop
add
mov
mov
and
pop
adc
loope
jbe
call
ds
cmp
sbb
call
lret
fs
adc
loope
sub
aad
cmp
int3
imul
mov
add
bound
adc
imul
sti
mov
icebp
arpl
add
shll
idivl
or
mov
or
jge
lea
inc
push
sarl
sbb
push
jbe
sbb
push
push
aas
lret
inc
sbb
sbb
js
or
and
fs
subb
std
push
incl
sbb
and
mov
je
mov
decb
das
mov
push
pop
and
inc
bound
test
pop
lea
and
mov
enter
cmp
push
pop
add
das
pop
sbb
shrb
movsb
add
nop
inc
std
out
pop
sub
ds
mov
push
js
scas
xchg
xchg
dec
and
cmpsb
clc
rclb
shl
in
add
dec
sub
arpl
ds
jne
add
add
jnp
sbb
sub
out
sub
jge
aad
adc
jbe
jl
repz
pop
lock
and
add
mov
into
cmc
sbb
stc
add
mov
xchg
inc
aad
pop
add
jns
xor
cltd
data16
add
clc
divb
lcall
and
sbb
push
inc
mov
xchg
push
sub
andl
xchg
push
or
mov
mov
add
jns
cmpl
pop
data16
xor
int3
and
inc
outsb
subl
sbb
sub
or
and
sarb
push
ds
push
or
or
sub
sub
out
mov
push
sbb
movsb
add
sbb
add
or
pop
mov
pop
dec
aaa
cmpsb
push
xchg
stc
dec
add
push
push
nop
cmp
push
clc
fisubrl
fst
inc
cmc
mov
mov
or
js
push
and
inc
jbe
bound
movl
xchg
insb
inc
es
or
scas
add
loopne
mov
lahf
mov
push
cmp
clc
imul
leave
pop
cmpsb
fs
xor
iret
add
je
pop
pop
fs
xor
and
mov
xchg
fcomps
aas
push
fs
fidivs
push
cmp
push
mov
add
dec
cmp
or
mov
gs
popf
fs
in
into
sbb
cmc
add
jo
outsb
clc
pop
sbb
cmp
out
scas
repz
in
test
mov
dec
inc
push
mov
daa
mov
jne
bound
sbb
mov
fs
hlt
mov
cltd
mov
nop
pop
add
sbb
jo
xchg
sub
cmp
fistpll
data16
xor
and
bound
cmovle
inc
mov
adc
aad
jae
add
mov
sub
cmc
jns
jns
in
es
and
pop
rorb
add
mov
jecxz
xor
roll
push
pop
add
imul
add
push
inc
pop
enter
imul
cli
sbb
inc
shll
testb
scas
sbb
sub
push
push
push
sbb
pop
sti
shr
mov
add
mov
and
sub
in
es
sub
out
ret
insl
lock
push
adc
cltd
insb
xchg
xchg
or
lahf
stos
jecxz
lods
ficoml
idivb
mov
push
mov
and
mov
std
sbb
adc
mov
in
or
xchg
addr16
jbe
pop
ss
jl
or
fnstenv
sbb
push
divb
int3
inc
insl
add
insb
pop
cld
popf
outsl
xor
in
fs
cld
xchg
or
mov
cmc
outsb
ret
pop
rolb
decb
mov
repnz
adc
mov
aam
and
jne
iret
inc
loop
and
push
mov
fcmovne
add
mov
or
cmp
adc
mov
mov
mov
inc
mov
mov
jne
pop
inc
mov
out
nop
sahf
fmul
cmp
test
inc
mov
sub
loop
inc
push
aad
in
add
scas
sub
rcrb
mov
mov
out
mov
inc
outsl
xchg
add
js
mov
fs
sbb
adc
scas
cmp
fsts
loop
mov
mov
mov
mov
aam
mov
xor
add
imul
rcll
mov
jbe
sub
mov
lea
daa
mov
add
or
das
jp
not
and
adc
lret
sbb
sbb
cmc
imul
and
repz
mov
xchg
inc
inc
sbb
in
or
mov
sbb
and
jbe
sbb
lods
fs
mov
aam
cmpsl
test
les
js
mov
xchg
imul
cmp
lcall
jmp
xchg
leave
arpl
push
mov
movsb
shrb
fs
stc
push
outsb
dec
xor
ret
push
popa
ja
jmp
jmp
mov
xor
lret
decb
mov
mov
lret
mov
add
inc
loope
jmp
pop
idiv
and
sub
movsb
cmp
fs
fwait
out
and
aam
dec
mov
cmpsb
jg
es
pop
add
sbb
cmpsb
sbb
fmull
lea
test
xchg
and
sbb
mov
sub
testb
stc
out
ds
xor
loop
cmp
add
add
insb
out
adc
insl
inc
jns
push
dec
sbb
mov
test
fs
or
or
and
jo
fcomps
outsb
xchg
fs
loope
cmp
xorl
mov
sub
add
mov
andl
aaa
add
rorb
sub
dec
cmp
push
xchg
mov
lret
xchg
push
xchg
inc
mov
sub
push
outsb
xlat
loop
xchg
std
insb
add
inc
push
clc
add
fs
adc
and
xor
cmpsb
dec
arpl
add
mov
add
les
inc
xchg
imul
push
cli
xor
stos
add
jmp
divb
scas
sbb
jp
cmc
push
lds
or
ja
add
cmp
testl
or
popf
dec
push
shl
pop
lods
repnz
push
leave
push
or
add
dec
stos
shl
adc
hlt
cld
mov
sub
insb
popf
xor
mov
icebp
push
pop
dec
cmp
mov
pop
ss
popf
add
fistl
scas
mov
and
push
lods
jbe
jns
adc
popf
cltd
jmp
hlt
push
inc
into
sbb
in
inc
mov
xor
inc
fs
test
add
sahf
jmp
sti
xchg
push
cmp
insl
cmp
test
push
push
cmc
add
sbb
jge
loope
test
jecxz
mov
ret
cli
dec
add
imul
out
mov
xor
push
mov
movsb
stos
and
dec
add
inc
pop
into
hlt
push
pop
sub
lods
xchg
mov
loopne
sbb
fs
jns
push
in
sti
leave
or
inc
inc
or
inc
fs
adc
out
mov
mov
mov
sub
aad
lock
iret
fs
push
mov
out
or
cmp
or
ret
add
std
mov
push
add
dec
out
pop
and
dec
cltd
mov
mov
jmp
push
mov
rorl
js
mov
jle
add
dec
xchg
pop
or
cmc
loope
scas
mov
test
lods
push
pop
addr16
cmc
xchg
sahf
and
mov
roll
test
andb
aam
mov
adc
or
adc
add
je
or
cmp
mov
cmp
and
cld
repz
add
aaa
mov
adc
bound
cmc
or
dec
aas
xchg
bound
hlt
sar
adc
or
pop
jnp
lock
push
cltd
insb
pushf
mov
mov
lret
addr16
bound
fs
mov
cs
add
movsb
mov
and
add
loop
xchg
stc
cmc
add
scas
sti
mov
mov
add
inc
fdivs
push
sbb
lret
popf
adc
out
fidivrs
sub
inc
dec
push
dec
or
pop
and
outsl
cmc
nop
add
jl
incb
push
inc
cmp
arpl
xchg
add
daa
sbb
ljmp
fwait
and
add
or
fmull
pop
adc
fsubs
jo
cmc
jnp
lret
push
push
or
dec
jb
mov
cmc
out
dec
mov
mov
cmp
out
pop
adc
mov
push
dec
xchg
sti
pop
fdivrp
out
lret
test
enter
mulb
call
xor
les
add
icebp
push
sbb
arpl
sub
sahf
ljmp
into
inc
pop
std
sti
lea
out
mov
inc
loopne
loope
mov
loope
push
jl
add
sub
jmp
xchg
add
sti
mov
insl
jo
mov
push
xchg
imull
cld
js
inc
and
negl
jge
sbb
jecxz
add
aaa
int
frstor
pop
xchg
mov
jecxz
fimull
push
dec
hlt
inc
cltd
imul
cmp
push
std
mov
sti
xor
cld
mov
xor
pusha
push
insl
mov
mov
sbb
push
cwtl
add
lods
sbb
jecxz
add
test
fistpl
xor
xchg
test
out
add
dec
and
push
fs
mov
push
push
cmp
dec
js
xor
jmp
mov
push
pop
or
or
outsb
repz
aaa
or
xchg
adc
and
adc
jbe
sub
push
cli
fs
sub
daa
add
lea
adc
insl
addl
std
sbb
int3
push
jno
xchg
cmc
sub
dec
idivl
insl
sahf
mov
loopne
sti
mov
ret
outsl
je
cmpsb
insb
scas
add
jns
adc
xor
cvtps2pd
ret
xor
cwtl
in
test
rorb
sub
cmc
clc
xor
xor
mov
inc
add
pushf
push
sbb
dec
lret
mov
insl
pop
xchg
pop
bound
dec
add
sub
arpl
sbb
pop
sbb
inc
jle
testb
divb
push
in
sahf
pop
dec
pusha
cmp
subb
imul
test
xchg
xbegin
lods
in
inc
lcall
xchg
jmp
pcmpeqd
jg
cs
push
or
or
jnp
pop
test
dec
and
notrack
mov
ficompl
and
mov
pop
stos
fs
add
int
shl
xor
mov
test
int
mov
or
or
cmpsb
mov
cltd
icebp
push
pop
pop
pop
test
test
sub
and
add
adc
add
jl
and
push
out
arpl
call
sub
mov
cs
scas
add
cmc
cltd
testb
and
jbe
push
inc
cwtl
aam
loope
lret
sub
or
js
cmc
data16
filds
adc
add
pop
bound
cmp
cmc
cmc
mov
sbb
xchg
sub
mov
je
call
adc
int
xchg
jne
rcrb
jmp
out
fs
aam
mov
jns
push
add
push
dec
sub
data16
fimull
in
scas
pop
stc
add
push
sbbl
add
sub
add
sbb
fs
ss
or
cmp
cmp
fprem
testb
add
or
sub
cmp
adc
push
sarl
jmp
xchg
lret
cwtl
int
add
clc
or
mov
xchg
add
ds
and
sahf
std
and
ficoms
imulb
xchg
mov
cs
sub
add
xor
scas
inc
dec
adc
jg
icebp
cmp
or
divl
mov
sub
clc
sbb
int3
aas
lock
in
or
add
push
pushf
sub
lods
lahf
and
sub
aaa
or
in
scas
daa
jbe
push
cmp
or
je
mov
push
out
or
addl
or
fsubs
add
sbb
stos
repnz
mul
hlt
dec
inc
lock
xor
add
sub
lods
into
add
adc
sub
lret
push
rolb
insl
testb
sbbb
test
inc
sbb
ljmp
lea
insb
and
adc
sub
jne
pusha
gs
outsl
or
outsl
dec
popa
jp
push
add
adc
jmp
and
stc
ret
push
push
daa
push
cmpsb
dec
add
inc
xlat
popf
add
inc
xor
in
xchg
jge
fwait
loope
dec
add
adc
mov
je
imulb
xchg
xor
clc
or
or
dec
adc
jbe
cmc
adc
adc
cmpsl
add
pop
add
mov
loop
push
nop
push
inc
add
pop
push
sbb
adc
popa
fmulp
cwtl
and
push
outsb
shrl
negb
pusha
adcl
push
sbb
and
add
jl
sub
fs
sbb
pop
enter
add
mov
pop
adc
or
enter
and
mov
repz
shl
or
xchg
push
dec
loope
push
mov
xor
fs
and
movl
inc
insb
addr16
fnstsw
pop
mulb
sarb
icebp
shrd
fadds
push
idivb
dec
mov
mov
adcl
or
inc
loop
xor
sbb
inc
rorb
fs
icebp
ret
adc
loope
add
mov
pop
jp
bnd
les
test
cmp
push
jg
orl
sbb
loop
adc
jno
faddp
cwtl
test
inc
out
pop
cwtl
dec
jne
addr16
nop
loopne
in
enter
jns
dec
push
add
pop
pop
xor
xlat
or
jp
divb
xchg
rcll
popf
into
aam
push
push
mov
push
into
arpl
fwait
mov
hlt
jns
or
add
dec
dec
out
outsl
adc
pop
dec
cli
sub
jns
adc
add
out
cmc
pop
push
sub
lcall
add
sti
gs
sbb
ret
push
fldt
std
leave
adcb
cmp
inc
arpl
cmp
dec
and
push
cwtl
mov
add
scas
inc
mov
out
lods
cmp
xor
in
call
rcr
decb
push
push
push
xor
stos
pop
xor
arpl
sub
sub
jno
xor
and
add
fisttps
arpl
cmc
add
in
gs
inc
in
ds
scas
jecxz
xchg
sarl
mov
xor
xor
enter
nopl
mov
push
or
cmp
dec
mov
les
repz
neg
or
outsb
mov
lock
adc
aad
pop
imul
into
hlt
loopne
adc
adc
repz
cmpsl
into
mov
xor
jl
or
push
mov
aad
adc
or
fs
fcmovnu
pop
cs
cld
add
sahf
sbb
idiv
mov
mov
sub
lret
add
adc
sub
rorb
loop
test
jns
jne
insl
faddl
out
xor
ret
repnz
test
xor
mov
mov
test
and
mov
in
in
add
arpl
sbb
out
jmp
jo
dec
pop
or
lds
xchg
xchg
inc
push
xchg
xlat
cmp
fdivrs
mov
cltd
test
jmp
insl
stos
dec
add
sbb
icebp
push
pusha
cmp
mov
ss
fbld
out
js
insb
lcall
mov
pop
jbe
outsb
mov
in
sub
mov
jge
into
divb
inc
xchg
aaa
xor
push
dec
add
xlat
je
adc
insl
pop
aad
jae
push
mov
popf
pop
sbb
dec
push
cmpsb
add
sbb
add
lods
les
packsswb
in
aam
test
dec
insb
mov
mov
insl
mov
sub
mov
cmc
mov
pop
aaa
push
lock
pop
out
add
movsb
sbb
sub
sbb
addr16
xor
lret
mov
push
xchg
sub
orl
into
mov
test
inc
pop
mov
movsl
popf
sub
pop
and
inc
popa
mov
push
sarl
stc
into
pop
out
add
nop
jne
test
lds
cli
mov
pop
or
dec
fs
daa
imul
out
lcall
or
xor
repnz
push
sahf
ljmp
sarl
je
mov
fidivs
xchg
add
sub
jl
ds
stos
mov
arpl
cmp
cmc
ja
mov
push
jge
jbe
arpl
inc
and
add
sarl
and
mov
mov
dec
xor
push
add
xor
sti
rorl
jp
cwtl
sub
add
sbb
fs
mov
dec
mov
loopne
push
nop
popf
and
jne
cwtl
add
icebp
ret
cmp
inc
ret
xchg
sahf
xor
push
out
fs
rcrb
fwait
ds
mov
fisttpll
cmpb
adc
mov
daa
bound
clc
add
hlt
push
mov
fsubs
mov
jp
in
sar
mov
sbb
lret
fs
jo
js
sbb
and
data16
adc
add
cmp
mov
repz
xchg
cmp
stos
add
lods
call
iret
inc
bswap
add
mov
in
pop
fdivs
imul
frstor
inc
push
mov
cmc
lahf
andl
outsl
and
lds
aas
sbb
ret
xchg
push
dec
or
inc
or
and
xor
clc
dec
clc
xchg
pop
add
arpl
ljmp
mov
rep
leave
sbb
lods
in
mov
popa
jg
mov
add
push
mov
in
and
cmp
push
notb
xchg
ret
mulb
stos
iret
add
xor
xchg
jbe
dec
pop
je
xchg
pop
bound
cmpsl
int
orl
out
sub
pop
adc
jl
cmc
adc
sbb
push
lock
jnp
adc
lea
mov
push
hlt
or
iret
jg
inc
je
push
sti
xor
sub
ret
mov
jmp
mov
cmp
or
mov
push
adc
pushf
sub
mov
addl
repz
sbb
adc
cmp
clc
pop
cld
sub
jbe
xor
jne
in
mov
mov
repz
fwait
enter
add
mov
mov
loope
fisttpl
add
sahf
mov
or
fs
popf
dec
adc
push
stos
add
pushf
sub
testb
out
mov
movl
jae
ss
fcom
inc
xchg
negb
xchg
mov
xor
and
jmp
pushf
adc
cltd
jg
leave
cmp
mov
add
fsubs
loope
xchg
stos
sbb
fisttpll
jg
add
adcl
movsb
gs
sbb
mov
push
xor
and
sahf
cmp
lods
cmp
bound
sahf
add
xchg
lcall
aas
jbe
push
jb
ds
aam
out
cmp
xchg
addr16
cltd
insb
xor
xchg
push
inc
shl
push
sub
adc
hlt
jnp
sahf
int
lock
mov
stos
rcrb
add
inc
negb
sbb
dec
add
jmp
and
pop
out
clc
sahf
frstor
ss
sti
jno
and
out
add
jle
cmp
push
push
or
cs
dec
dec
add
xlat
adc
lds
into
cwtl
add
aad
xor
cmp
data16
adc
imul
out
or
dec
cmp
loop
sbb
inc
jne
std
lahf
adc
mov
mov
dec
pop
or
cmp
xchg
fistpll
xchg
sbb
rolb
stc
cmc
jnp
lods
int3
cs
popa
push
cli
sub
and
pop
xorl
or
xchg
ret
xor
pusha
stos
imul
xor
pop
xor
jnp
or
dec
daa
imul
pop
shll
jb
mov
in
dec
add
cvtpi2ps
cld
adc
call
adc
fstpl
lcall
cld
in
inc
add
sbb
push
leave
popa
lcall
sbb
out
testb
int
sbb
ja
add
js
jl
idiv
and
mov
ret
jge
or
push
lret
loope
cmp
xor
dec
add
cmpsb
xchg
xorl
imul
insb
in
pop
aam
in
enter
loop
add
into
pop
pop
pop
jmp
mov
and
test
jns
push
sbb
subb
stos
icebp
or
les
nop
andb
xlat
test
test
xchg
inc
inc
int
mov
xchg
stos
dec
cmpl
pop
jle
mov
and
and
adc
or
push
add
lds
icebp
add
icebp
fimuls
std
mov
stc
repz
pop
loope
xchg
jecxz
pop
add
js
jae
js
in
mov
les
add
cmp
inc
pop
fs
repnz
sbb
lret
popa
and
pop
push
andl
dec
gs
pop
repz
std
movl
fs
cli
fisubl
mov
movsl
popf
fwait
xchg
cli
fs
cmp
imul
movsb
clc
mov
fs
xchg
repz
out
jnp
dec
pop
sub
dec
inc
shrl
push
cmc
or
fs
pop
sbb
push
cmp
movsl
rorb
or
notl
xor
jbe
inc
aam
ss
arpl
fcompl
push
pop
dec
mov
mov
into
jmp
inc
sbb
or
push
sti
pusha
ss
fwait
mov
jne
test
add
push
mov
ficomps
cmc
or
pusha
cmp
mov
lret
adc
or
adc
xor
das
push
ds
fs
repnz
add
add
jmp
or
or
rorl
hlt
adc
pusha
test
mov
adc
add
and
mov
ss
and
push
pusha
mov
and
enter
mov
jp
add
js
das
pop
lret
lret
cmpsl
faddl
ss
insl
fdivs
bound
addr16
xor
icebp
push
outsb
lods
xchg
popa
popa
adc
fstl
vmovddup
rcll
les
mov
sar
mov
mov
data16
movsl
push
mov
xchg
lea
sbb
jns
int3
loop
aam
test
cltd
push
mov
lds
testb
fdivp
lods
xorl
mov
mov
cmp
cmc
sub
js
and
out
inc
pop
add
mov
icebp
mov
add
testl
inc
add
jo
sarl
pop
push
adc
daa
dec
adc
into
xchg
aas
je
int
fs
lahf
test
cmp
xchg
sarl
lret
aas
imul
add
adc
in
jne
and
in
mov
testb
inc
mov
and
push
adc
ret
cmpsl
jl
jle
in
adc
jmp
push
clc
into
add
pop
outsl
nop
or
jne
xor
int3
pop
and
std
aaa
shll
dec
addr16
jecxz
pop
notb
mov
pop
pop
add
std
ljmp
cli
int3
sbb
das
arpl
xchg
popa
daa
mov
mov
mov
dec
sbb
xor
clc
sahf
or
hlt
out
mov
outsb
pushf
jbe
arpl
cmc
aad
or
add
out
out
cmp
fld
es
pop
fs
inc
jbe
aas
jge
pop
aad
and
pop
out
push
push
loopne
lods
sbb
add
and
jg
xor
fmul
push
lds
xchg
sub
or
data16
cmc
mov
cmp
icebp
int3
and
jno
mov
cmp
pushw
push
adc
jl
add
push
pop
cltd
fstpl
cmc
dec
pushw
cli
in
jl
cwtl
push
mov
push
cs
lahf
add
pop
out
cmp
repnz
sar
imul
test
xchg
out
inc
ljmp
jge
adc
repz
lea
mov
cmp
movsb
fldenv
mov
gs
cmpsl
hlt
pop
cmp
xlat
aad
imul
test
dec
mov
leave
add
repnz
adc
lretw
les
or
jecxz
sbb
imul
push
cld
imul
dec
popa
push
scas
mov
dec
into
push
lock
mov
or
movsb
sarb
lds
mov
cmc
pop
xchg
sub
jbe
addb
ret
fs
in
pop
stos
jp
stos
popa
movsb
add
adc
hlt
add
sar
add
call
das
push
arpl
or
ds
insl
notb
insl
sub
je
addl
mov
xchg
pop
mov
shll
xchg
mov
mov
push
cmpsb
fs
xor
js
sbb
shlb
push
stc
addl
lock
js
cli
adc
popa
stos
cltd
outsl
cmpsb
mov
add
es
fiaddl
movsb
or
dec
test
push
xlat
inc
rcrl
ds
jne
mov
in
mov
mov
push
add
stc
hlt
xor
fs
sub
fisttps
int3
pop
mov
or
cmp
cmc
mov
mov
bnd
sub
movsb
xchg
add
rcrb
fadds
mov
dec
aam
pop
movntps
aam
popa
xchg
in
mov
orb
pop
and
mov
cmp
cli
inc
insl
ss
jno
xchg
mov
xor
pop
aad
xor
fwait
ss
dec
test
into
or
pop
hlt
test
dec
pop
push
jb
or
or
jecxz
sbb
mul
add
orl
dec
in
cmp
add
fstpl
mov
cmp
or
repnz
addb
or
push
and
add
or
movsl
es
xchg
neg
subl
push
sti
jecxz
adc
ret
pushf
lds
inc
in
cmp
call
jg
sbb
fs
std
outsb
sbb
cltd
sbb
and
adcl
cld
and
jl
popa
inc
in
mov
sub
adc
leave
imul
mov
add
xchg
arpl
add
mov
imul
mov
aaa
and
shlb
adc
add
jo
test
inc
ja
add
mov
fcoml
test
arpl
rcl
add
mov
rcr
push
lea
jle
pop
imul
and
outsl
outsb
or
aas
bound
out
jecxz
stos
mov
cmpsl
add
inc
sbb
mov
add
shrl
imulb
mov
cmp
pop
lock
jbe
push
jecxz
fs
xor
cmp
fldenv
inc
sti
mov
sbb
add
lock
mov
adc
adc
dec
in
cmp
push
sub
jp
clc
adc
idivl
adc
jmp
push
out
in
cli
in
dec
mov
jmp
movsb
dec
sub
add
and
insb
leave
mov
dec
in
jmp
pop
imul
fs
jnp,pn
or
lret
mov
or
or
cmpsb
mov
inc
aad
les
leave
inc
cmc
sbb
rolb
lahf
sub
loopne
add
xor
jecxz
sub
sub
in
mov
mov
aam
mov
out
inc
add
mov
xor
imul
out
je
out
sbb
pop
movsl
fs
test
jnp
call
test
or
pop
xchg
pop
jl
mov
in
xor
repz
sbb
jmp
in
shll
fucomi
leave
and
clc
lcall
dec
fs
fnstenv
popf
pop
push
sub
jne
sbb
adc
out
mov
jp
insl
mov
bound
mov
push
sub
mov
add
bound
or
ret
xor
or
pushf
stc
fs
sbb
daa
push
loop
sbb
cmpsl
aam
sarb
add
xchg
mov
out
mulb
inc
pop
icebp
sti
adc
jmp
out
lahf
divl
lret
gs
lods
and
mov
out
out
iret
pop
lahf
pop
mov
cmc
pop
and
inc
or
int
dec
or
adc
jmp
dec
lret
pop
sub
das
push
adc
scas
fiadds
out
bound
jg
cmp
add
jbe
sbb
mov
cmp
jo
jg
ret
dec
out
fs
and
push
push
idivl
cmc
fsubr
pop
std
aaa
sbb
xchg
out
pop
mov
testl
leave
nop
cmp
fsqrt
xchg
rcl
or
leave
hlt
xor
push
adc
shlb
repnz
or
mov
ret
ds
add
mov
jge
adc
mov
pop
add
lcall
cmc
mov
arpl
icebp
add
data16
inc
js
test
pushf
add
scas
loope
push
dec
inc
sub
xchg
sbb
jecxz
insl
and
and
dec
add
ds
ficompl
loop
out
xchg
lods
xor
aaa
scas
add
repz
jo
pop
fs
adc
or
jne
add
mov
adc
imull
inc
mov
mov
inc
sbb
es
push
add
sub
lock
dec
adc
push
scas
idivl
jae
jb
lods
push
xor
fimuls
in
rclb
es
or
mov
xchg
mov
clc
and
push
pop
jl
add
mov
cmp
dec
dec
fs
xchg
jne
add
filds
inc
call
push
addl
fs
jmp
cmpsb
lock
xchg
pop
push
popf
clc
pop
inc
xchg
arpl
xchg
movsb
enter
sbb
sahf
movsb
out
shl
cmc
inc
xor
mov
inc
insl
mov
sub
hlt
lret
movsb
add
in
xchg
mov
pop
sbb
add
pushl
adc
and
xor
push
inc
mov
subl
adc
mov
mov
mov
decl
clc
add
imul
and
arpl
jne
xor
and
lcall
sbb
in
mov
leave
or
or
xchg
mov
orl
sarl
add
dec
pop
sbb
sahf
sub
push
test
or
cmp
pop
adc
leave
adc
push
loope
jecxz
mov
add
lods
jmp
sub
int
xchg
mov
sbb
dec
pusha
jge
xchg
fs
and
repz
mov
sbb
mul
loope
jecxz
xchg
sbb
push
hlt
mov
test
aam
test
jne
pop
add
inc
rcll
xor
cmp
add
jl
hlt
add
jns
mov
fisttpll
sub
retw
cmpsb
and
mov
int3
adc
push
adc
imulb
push
jbe
xchg
icebp
sti
push
cmp
pop
push
adc
xchg
mov
addl
xchg
jbe
in
aam
lcall
pop
xor
fs
xlat
sar
in
iret
stc
add
ljmp
test
mov
adc
and
in
ja
call
push
xchg
and
out
clc
decl
cmp
adc
push
or
pop
xor
stc
xor
add
adc
mulb
addr16
xor
daa
fidivl
sbbl
add
arpl
lods
decl
fidivrs
call
or
push
push
jne
mov
pop
mov
aaa
or
daa
and
mov
es
jbe
ret
pusha
popa
ds
jae
push
into
pop
insb
jnp
jg
cmp
std
and
scas
pop
mov
sbb
push
into
notb
add
imul
xchg
cmp
push
ds
movsb
pop
jns
push
add
roll
or
mov
cs
lods
loopne
add
lods
imull
dec
fadds
push
addr16
mov
in
aas
outsl
xchg
shl
push
adc
or
xor
adc
or
in
push
mov
sti
ds
in
xchg
xor
mov
fs
mov
mov
pop
and
mov
fwait
push
gs
in
cli
mov
mov
outsb
out
pushf
xor
outsb
xor
push
jl
and
fwait
aad
imul
js
add
sbb
leave
fisttpll
cmp
insb
pop
addl
or
jecxz
les
popf
imulb
lods
push
es
test
subb
shlb
or
jne
out
pop
sbb
call
sbb
andb
addb
test
push
aas
pushl
add
sub
ss
test
cld
pop
out
sahf
sti
mov
shl
insb
add
shrb
stc
cmc
rcrl
icebp
cmp
insb
shll
sbb
add
xor
xchg
inc
mov
aas
in
xor
scas
cmc
fsubs
mov
aas
stc
inc
sbb
in
fisubrl
push
pop
or
cmc
inc
mov
addb
add
jmp
xor
sub
rcl
adcb
stos
and
ret
ss
clc
sbb
mov
or
sub
jno
sbb
imul
out
pop
mov
mov
jo
fs
loop
cli
enter
inc
xor
xchg
jns
leave
out
out
pusha
sbb
inc
pop
and
into
lcall
aaa
movsl
pop
inc
add
inc
icebp
cmp
mov
mov
mov
cmc
mov
adc
push
mov
push
in
mov
add
rorb
jno
cmp
add
pusha
mov
sti
push
into
pop
fs
sbb
sub
out
mov
push
imul
push
mov
mov
jp
fsubr
call
insb
icebp
cmc
shl
add
es
fnstenv
xchg
and
das
rol
aaa
inc
xchg
mov
mov
andl
sub
push
adc
or
mov
lock
cli
push
scas
mov
lahf
pusha
cld
das
cmc
loop
jo
mov
cli
sub
mov
xchg
pop
push
out
ret
shrl
sbbb
inc
xor
divb
inc
les
push
je
add
mov
xor
das
sbb
idiv
xor
incb
push
xor
mov
shl
xchg
sub
idiv
pop
add
ret
and
lret
sub
int
mov
add
inc
out
add
inc
cmp
imul
xchg
sub
add
jno
xchg
mov
dec
testb
outsb
xchg
xchg
add
mov
xchg
xor
aam
jae
xor
sbbb
lret
jmp
into
out
aad
test
xchg
pop
scas
jmp
add
mov
das
int
jle
scas
sub
testb
rorl
sbb
mov
xor
and
addr16
testl
pop
stc
outsb
movsl
fst
add
addr16
test
and
add
andl
or
cmp
sbb
cmpsb
mov
ja
fs
mov
outsb
bound
add
and
or
pop
mov
xor
push
mov
mov
mov
jne
push
cmpl
or
mov
and
inc
xchg
dec
xorl
push
nop
or
and
jge
adc
stc
pusha
leave
cltd
push
inc
cmp
mov
fs
icebp
popa
jmp
inc
mov
fcompl
inc
add
xchg
cmp
or
xchg
fcmovnbe
aas
fucomi
add
out
pop
shrb
fs
ss
and
ds
adc
daa
test
setae
adc
mov
adc
shll
mov
pop
jmp
pop
mov
lock
lcall
test
xor
xchg
adc
inc
outsb
rorb
in
gs
add
mov
and
sti
xlat
pusha
les
adcl
negl
cs
stc
push
lods
mulb
or
push
fdivp
jmp
add
mov
int
out
xchg
jp
sahf
add
mov
lret
pop
aas
cmp
int
add
aad
iret
xchg
pop
testb
xorl
fcos
int3
sti
or
arpl
or
add
jne
jp
or
mov
jp
pop
sub
ficompl
mov
rorb
or
vpackuswb
popl
pop
lret
adc
incb
dec
ret
and
pop
inc
repnz
cmc
sbb
and
insl
gs
lds
xor
out
in
pop
jae
lods
mov
aaa
pop
fadds
mov
or
add
push
or
mov
dec
movsb
int
jl
add
jg
add
in
rcll
sbb
cmp
cmpsl
cs
adc
loopne
stc
lret
push
xor
idiv
hlt
cmc
aad
pop
sarl
repz
pop
mov
call
xor
lds
movl
inc
dec
insb
sub
arpl
push
sub
pop
das
jne
shlb
gs
and
std
stos
push
popa
jbe
iret
cld
lret
and
incb
std
cmp
mov
or
pop
mov
imul
pushf
rolb
sti
add
loopne
push
xlat
xor
cli
inc
aaa
and
sub
mov
xor
add
call
mov
icebp
imul
adc
subb
mov
mov
iret
adc
add
test
aad
je
notb
cltd
or
add
inc
inc
push
adc
in
in
xchg
lds
mov
lds
js
push
mov
repnz
insb
mov
notb
or
or
mov
neg
imul
xchg
or
aam
xchg
mov
cmpsb
cmpsb
in
add
push
imul
mov
ror
cli
lea
dec
xor
out
jb
popa
lcall
in
cmc
jmp
repz
and
movsb
mov
push
push
mov
inc
pop
pop
dec
xlat
fs
lret
dec
inc
add
ds
jle
cmp
inc
mov
push
out
les
push
pop
int
arpl
or
icebp
mov
imul
and
adc
cli
pop
test
ret
out
xchg
fistpl
xor
testb
stos
lcall
sub
pushf
inc
fs
push
sti
xchg
jns
and
jns
inc
cmp
addb
rorb
sti
ja
mov
dec
inc
outsb
out
cmc
pop
inc
les
mov
add
in
loope
push
dec
or
mov
add
jmp
mov
mov
repnz
nop
dec
popa
add
das
scas
testb
insb
dec
cmp
aad
rorl
mov
inc
stos
push
pushf
inc
arpl
leave
fs
jmp
mov
push
out
add
lds
adc
test
out
ret
sub
call
cmp
push
mov
jbe
test
mov
xchg
loop
add
sub
push
inc
rclb
add
daa
xor
fiaddl
push
pop
test
and
mov
fs
jmp
movsl
or
rcrl
js
sub
xchg
xchg
testl
fcmovbe
cmp
sub
push
jg
leave
int3
das
int3
out
push
xchg
adc
dec
inc
test
inc
or
xchg
adc
jo
cmc
pusha
pusha
dec
std
push
ds
sarb
bound
roll
sbb
inc
loope
fs
sahf
nop
iret
cwtl
ja
add
xchg
and
cmpsb
and
jbe
add
pop
sete
lock
adc
or
add
push
sbb
and
testb
test
iret
popa
outsb
inc
cld
jmp
icebp
fs
jmp
add
fisttpl
movsb
dec
push
leave
clc
mov
inc
movsb
shll
or
icebp
sbb
cmp
fisubrs
mov
or
rcr
push
push
adc
inc
cli
lods
fs
das
cmp
mov
sti
jle
mov
jbe
insb
mov
aam
sub
popf
adc
mov
mov
push
dec
out
xchg
test
cld
pop
idiv
xchg
mov
mov
fcoml
in
xor
and
push
cmc
mov
int
test
and
in
mov
das
loopne
test
mulb
xor
push
pop
out
cmpsb
pop
mov
incl
decb
cmp
inc
sbb
push
xchg
add
imul
hlt
ret
int
daa
pusha
divb
lods
shl
insl
sub
add
push
add
cli
add
and
pusha
jg
clc
pop
mov
dec
push
jnp
stc
or
add
pop
lahf
pop
fs
mov
aaa
add
lret
cltd
xchg
shl
inc
adc
add
das
pushf
add
push
icebp
and
adc
loope
xchg
pop
cmp
lock
xorl
inc
lods
pop
into
jecxz
mov
add
mov
cmp
fs
mov
adc
add
pop
pop
or
cs
cltd
std
aaa
iret
cmc
sub
pop
scas
out
dec
cmp
xchg
add
inc
adc
or
daa
cld
cmc
dec
jns
sub
add
jp
mov
fs
lock
ss
push
and
inc
sbb
lcall
test
mov
mov
lret
cmc
cld
cmpsb
ffreep
hlt
or
mov
push
clc
mov
dec
gs
stos
out
fld
jmp
xchg
dec
pop
cmpl
add
cmc
add
subl
jg
adc
mov
clc
xlat
push
xchg
es
icebp
cmc
mov
adc
sub
and
xchg
sahf
arpl
fmull
add
jg
push
ljmp
jp
out
xchg
sti
int
and
hlt
add
sbb
lock
or
scas
xor
xor
or
xorl
rcll
into
sbb
add
pop
or
outsb
mov
stc
scas
pop
xor
cmp
mov
psubusb
add
pop
ficomps
xchg
jno
in
popa
mov
mov
dec
std
hlt
popa
sub
push
mov
cld
in
mov
es
or
loope
inc
aas
mov
sbb
adc
add
rclb
dec
fs
add
testl
cli
into
ret
inc
pop
push
mov
mov
xor
jl
push
fidivrs
inc
inc
ret
and
sbb
mov
inc
xchg
dec
je
mov
cmc
pushf
popf
repnz
mov
mov
or
imul
sar
mov
test
sbb
inc
mov
xor
cmpsb
xorb
and
das
popl
pop
notl
sub
add
sub
and
sbbb
mov
fidivs
push
out
shld
mov
arpl
adc
sbb
cmc
test
inc
enter
xor
and
push
pop
idiv
push
popa
push
cmp
idivl
daa
mov
bound
test
outsb
fdivl
fisttpll
jecxz
aad
les
xchg
mulb
sbb
add
cmpb
xor
dec
xchg
pop
mov
loopne
xchg
add
mov
ret
fistps
and
in
repnz
lcall
cmp
mov
dec
lds
mov
popf
lea
or
sbb
aad
push
notl
push
fcmovnu
pop
and
sub
sbb
dec
mov
jmp
cs
cli
push
add
and
inc
sbb
stc
shrb
mov
rcrb
mulb
out
xchg
insl
cmp
dec
jns
lock
or
pop
xchg
in
sbb
or
cmp
loop
lock
clc
lea
pop
test
add
mov
es
fstl
jo
add
cli
add
loop
lds
cltd
movl
mov
cmc
xchg
inc
fisubl
jb
push
loopne
lods
mov
dec
mov
xchg
push
dec
mov
lea
jge
mov
lret
adc
xchg
push
lcall
dec
ds
iret
stos
lods
in
xchg
mov
jne
imull
adc
adc
add
lock
mov
in
andl
std
sbb
and
cmp
pop
and
mov
ljmp
push
pusha
std
jbe
lret
add
ss
xchg
xor
jne
jns
add
inc
inc
mov
test
cmc
pop
mov
aam
in
fwait
cmp
incl
shll
mov
jns
minps
aam
and
negb
jecxz
xchg
xchg
cmp
arpl
push
lcall
lea
cld
xchg
and
es
fldenv
stc
lret
lcall
dec
xlat
int
jmp
sub
or
enter
xor
ss
std
into
movsl
aam
int3
mov
add
push
sbb
mov
data16
xor
in
adc
xor
and
add
ret
arpl
jl
movsb
mov
push
int
adc
dec
test
cmc
popa
sub
movsb
add
cmp
push
aaa
fs
mov
xlat
or
sub
stc
jge
bound
cld
jl
inc
cmc
testb
push
dec
push
add
pusha
add
fistps
cld
call
inc
jbe
mov
lock
sti
xor
or
push
adc
in
je
imul
setae
data16
std
in
inc
fidivl
mov
mov
or
rolb
pop
cmpl
add
in
or
hlt
imul
xchg
negb
movsl
icebp
pop
movsb
inc
sarl
xor
cmp
pop
xchg
cmc
rolb
outsl
aaa
xchg
push
xor
leave
xor
test
mov
pop
scas
sbb
xor
sbb
pop
push
inc
out
cltd
pop
mov
bound
fisubrs
test
shll
inc
enter
and
xchg
popf
jmp
push
pop
int
push
inc
loope
add
ror
fwait
sub
jmp
movsb
fsin
mov
lods
hlt
cmpsl
shll
pusha
lea
add
push
addr16
cwtl
pop
in
movsl
fiaddl
loop
leave
addl
pusha
sbb
mov
aaa
pop
adc
rcrl
add
fs
test
dec
in
aad
lret
sti
xlat
xchg
lret
gs
jmp
pop
add
repz
push
into
add
xor
mov
mov
inc
pop
negb
adc
mov
hlt
ret
cmp
sub
frstor
aad
push
mov
jecxz
push
add
popf
pop
jb
xor
fwait
jge
push
add
movsb
cmpsw
sahf
lds
insb
fwait
popa
push
in
cmc
xor
loope,pt
xor
stc
or
shrb
stos
jno
dec
sbb
addb
es
inc
ds
cli
aaa
sub
dec
mov
push
rclb
and
loopne
inc
dec
bnd
jecxz
inc
push
repz
movsb
cmp
daa
push
vpsllq
std
icebp
sbb
cmp
sbb
test
sbb
imul
shlb
lods
fstpl
dec
movsl
inc
pop
push
add
adc
and
mov
xchg
pushf
shll
or
insb
mov
les
std
pop
add
adc
mov
jmp
test
mov
repnz
xchg
inc
mov
fdivrs
xchg
xor
imul
or
in
cld
jmp
rcrl
negb
aad
fsub
push
sbb
sbb
dec
ret
mov
ret
es
jle
fstl
inc
ds
mov
jge
add
inc
dec
roll
aas
or
adc
mov
loop
xor
mov
pushf
dec
clc
pusha
loopne
mov
pop
or
arpl
or
movsb
add
adc
aaa
jp
fmulp
dec
aaa
out
pop
add
mov
cmc
adc
mov
mov
roll
inc
cltd
in
push
add
add
fstpt
inc
add
lods
mov
cltd
add
push
push
and
fs
test
add
aam
adc
lock
test
in
jne
scas
loopne
mov
aas
lret
or
pop
jmp
add
das
dec
and
pop
je
testl
mov
add
dec
jns
cmc
aad
mov
push
enter
sub
popf
sbb
sub
popa
stc
pop
push
or
or
xor
pop
clc
cmp
inc
push
mov
and
mov
add
fcmovnb
jae
jne
sti
movb
adc
xchg
xchg
or
in
sbbw
inc
cmpsl
dec
daa
jmp
bound
inc
insl
in
cli
dec
imul
cs
push
add
lods
xor
dec
daa
push
bound
push
xchg
ds
and
mov
mov
add
jg
addl
add
pop
out
xchg
testl
push
dec
add
outsl
inc
inc
rcrl
fs
lea
sub
les
in
gs
inc
jecxz
jne
inc
negb
jmp
or
and
push
xor
lock
icebp
fcmovb
mov
or
pop
add
jle
loope
popa
test
stc
cld
xor
push
or
mov
std
mov
in
jns
js
cld
cmp
aas
es
cmp
jmp
in
icebp
sub
xor
in
cmp
loopne
mov
and
mov
xchg
popa
mov
lds
mov
imul
xor
jne
xchg
cld
xor
imul
insb
jns
xlat
adc
std
adc
add
inc
les
ss
xchg
push
or
pop
jne
pushf
sbb
fs
jbe
push
cmc
flds
repz
pop
xchg
outsb
cld
addl
iret
rorb
jo
adc
cmc
add
insb
es
or
jnp
scas
insb
xchg
add
xacquire
outsl
push
repnz
jne
jae
ss
repz
pop
push
add
dec
sarl
repnz
sub
add
loope
es
mov
add
push
enter
push
add
insl
test
adc
mov
cmc
xchg
lea
mov
mov
movsb
cmp
test
xchg
fstl
cli
jno
or
shlb
dec
xchg
add
fwait
icebp
lcall
cmc
inc
or
fs
add
int
adcl
mov
push
clc
jb
lret
filds
xchg
div
movsb
movsb
xor
hlt
std
cmc
outsl
lds
fmuls
add
test
mov
and
and
mov
add
mov
cmpsl
imull
test
pop
pop
ja
xor
and
push
and
testb
fwait
je
test
mov
bound
sbb
call
dec
xchg
ja
sub
add
xchg
in
incb
jbe
and
jge
pop
mov
lea
out
lahf
out
hlt
sub
lret
in
jbe
subl
testl
enter
mov
loope
dec
test
or
test
into
or
lods
lock
jp
rolb
shrb
add
pop
xor
fs
rcrb
pushl
mov
mov
mov
or
aad
push
push
out
push
int
jns
imul
sub
mov
lock
in
lret
repnz
or
mov
cld
pop
xchg
ja
call
jmp
cltd
loope
fadds
mov
fadd
fs
lret
into
fstp
sahf
adc
cmp
fnsave
mov
add
sub
mov
or
insl
divb
adc
jl
in
fadd
test
push
fs
cli
daa
xchg
test
repz
adc
icebp
mov
hlt
sub
sti
in
cmp
add
lods
cmp
adcl
popf
out
add
js
jecxz
jae
sbb
add
inc
in
lods
xchg
add
rolb
loop
push
xor
movl
data16
sbb
xor
gs
xchg
inc
sub
mov
bswap
out
push
pop
dec
pop
adc
adc
mov
cld
push
call
aad
adc
add
jl
mov
or
or
pop
divl
xor
mov
out
bnd
add
inc
xchg
es
scas
or
inc
push
adc
push
cmp
popa
xchg
mov
jne
fcomps
mov
push
roll
in
rcrl
mov
idivb
sbb
int
lock
and
xlat
cmp
lret
out
insb
inc
aad
adc
cmp
mov
adc
notb
repnz
shll
pop
addr16
test
hlt
movsl
dec
add
imul
insl
adc
stc
mov
mov
mov
add
mov
pusha
sti
inc
pushf
jg
or
arpl
imul
mov
mov
xor
sub
dec
push
sub
movsb
popf
mov
outsb
sbb
popf
loopne
add
ds
fs
vxorpd
adc
mov
mov
push
out
pop
sbb
insl
mov
xor
mov
stos
inc
xchg
push
and
push
adc
stc
std
sub
jns
out
ret
pop
mov
add
bound
insb
pop
xchg
rclb
outsl
add
cmp
sub
into
adc
or
or
lds
repnz
sub
cmc
cmpl
clc
int3
faddl
and
xchg
pop
add
cmp
cmc
inc
aam
fstpt
call
sub
por
sti
stos
cmpsb
push
mov
inc
adc
call
fisubrl
cmp
sbb
cmpsb
lret
fdivr
std
fidivrs
push
repnz
xchg
mov
scas
mov
aad
out
flds
push
push
clc
lds
push
loope
ja
sbb
add
pop
and
pop
add
aad
idivl
jno
xor
dec
pushf
push
or
add
or
imulb
xor
push
xor
or
adc
call
inc
aaa
dec
inc
cmp
nop
add
mov
outsl
les
add
sbb
fnstenvs
pop
push
js
mov
outsb
ret
mov
and
pop
jmp
jbe
cs
popa
mov
cmp
loop
pop
add
mov
popa
shl
out
decl
lea
andb
mov
jbe
push
push
sbb
xor
es
dec
cmp
js
cs
xor
mov
push
hlt
hlt
movsb
push
mul
xor
mov
jp
outsb
test
add
fs
pop
inc
adc
addr16
xor
std
aam
fimull
fs
loopne
jmp
adc
pop
mov
xor
out
pop
lods
mov
out
pop
call
into
push
add
or
add
idivb
loop
stos
inc
mov
add
shrb
sbb
hlt
andb
leave
mov
out
pop
push
inc
loope
pushf
mov
sub
push
lahf
jmp
in
xor
add
sbb
or
push
int3
pop
aad
add
adc
pop
sub
or
call
ret
mov
mov
or
fsts
push
inc
addr16
and
mov
lds
add
mov
or
sbb
xor
jg
add
add
pop
and
pop
xchg
cmpsl
xchg
jp
push
dec
cwtl
rcrb
push
push
pop
or
sti
xchg
aad
test
clc
cmp
inc
lcall
stos
in
rolb
adc
or
shll
adc
loope
push
movsl
pop
aaa
jo
ror
xchg
ja
or
push
movb
loope
fiaddl
mov
dec
pop
cmpsb
xchg
xor
xor
fistl
and
es
call
xchg
andb
pop
iret
ss
fistl
pop
loope
or
test
add
and
cld
xchg
cmpb
ds
jae
bound
mov
and
inc
out
add
lcall
sub
jg,pt
ds
pushf
jbe
cmpsb
push
xchg
stc
xor
out
push
cmc
jns
jmp
add
pop
cli
lods
cmc
pop
loopne
mov
inc
mov
ja
add
fisubs
xor
das
add
push
cmc
out
mov
add
into
pop
sub
pop
loopne
rcrl
xor
mov
cmp
add
stc
inc
push
in
inc
mov
mov
cmpl
roll
lock
addb
negl
and
mov
test
push
pop
push
cwtl
adc
inc
es
imul
inc
or
test
mov
push
iret
push
fstpl
aam
pop
jge
lock
sbb
mov
mov
xchg
cmp
mov
pop
enter
xor
mov
sarb
push
push
in
xorb
popf
bnd
jmp
cmc
push
cmp
idiv
pop
add
dec
out
cwtl
sub
and
sub
iret
or
jo
notb
xchg
aad
popa
cltd
cmp
jmp
jecxz
imul
jp
imul
ds
sub
push
loope
loopne
inc
scas
in
outsb
adc
loope
mov
mov
and
pop
into
loop
add
bound
and
adc
add
adc
lock
pop
mov
aam
push
add
movsb
add
pop
insb
orl
shrb
pop
dec
rcrl
adc
cld
xchg
and
xchg
push
or
jmp
test
adc
fprem1
jno
mov
sahf
sub
pop
mov
leave
lods
into
sti
cmc
rcrb
pop
push
aaa
or
mov
imulb
push
call
nop
test
test
pop
dec
xchg
data16
dec
xor
push
mov
jno
in
test
insl
push
pop
mov
cmc
dec
mov
jp
cmc
stos
mov
mov
cmc
pop
push
adc
out
rorl
inc
nop
jle
add
jnp
xchg
jmp
mov
mulb
div
dec
inc
pop
add
pop
or
xchg
andl
or
adc
push
cli
inc
and
bound
jg
ret
test
stos
inc
and
leave
jmp
mov
push
cwtl
cmp
add
aad
dec
pop
hlt
inc
pop
int
mov
jecxz
mov
popa
icebp
xchg
loop
in
dec
cmp
xor
divps
mov
mov
push
sarl
ja
lods
mov
dec
sbb
mull
inc
loopne
cwtl
dec
xor
adc
lods
mov
add
jecxz
test
movsl
inc
cmp
pop
pop
int
cmp
push
jne
push
imul
shrl
out
lret
jbe
imul
insl
mov
ret
out
adc
subb
je
jmp
js
add
int
sub
adc
lods
cmpsb
fs
sbb
adc
dec
and
ss
fs
pushf
div
ret
es
add
sahf
mov
inc
enter
ja
xchg
and
push
pop
push
lea
and
xchg
cltd
cmp
lds
into
mov
lahf
push
orl
adc
jle
inc
out
daa
add
les
mull
ss
mov
aaa
fs
jecxz
push
jp
stos
jae
mov
push
inc
sarl
sub
loopne
and
arpl
pop
adc
jl
ljmp
movsb
push
xor
out
fs
lds
test
lret
data16
sarl
test
inc
into
leave
sub
mov
lret
or
ss
aam
aaa
push
push
cwtl
or
mov
jnp
add
or
and
and
or
mov
clc
movsb
or
ljmp
pop
or
std
push
or
pop
idivb
lahf
xchg
lahf
adc
and
push
andb
pop
and
xchg
idivb
mov
xor
pop
add
lret
add
hlt
rcll
mov
jg
test
std
sbb
lret
sub
xor
jo
mov
add
cmp
pop
add
add
mov
jecxz
es
jo
cmpl
in
testl
iret
mov
push
mov
jns
xchg
int
call
cmp
daa
pop
std
jp
aam
adc
inc
dec
add
inc
sbb
rcl
insb
cmp
clc
stos
sbb
push
xchg
jbe
scas
add
inc
bound
push
shll
icebp
iret
fs
jge
and
loopne
or
adc
push
insb
cmpb
jge
or
xchg
sbb
sub
mov
xor
cmp
pcmpeqd
ret
insl
repnz
cpuid
fiaddl
cmp
lret
les
out
add
daa
add
std
inc
stos
pop
movb
add
lret
mov
hlt
cmpsb
inc
sub
in
or
inc
cli
enter
mov
sbbb
inc
lods
adc
mov
mov
lahf
imul
mov
hlt
inc
es
out
add
mov
cmp
fldcw
movsb
fwait
push
pop
pop
mov
sbb
lods
add
cmpl
test
cwtl
push
aaa
and
fmuls
lret
sub
push
inc
and
enter
dec
bound
std
pop
test
pop
fldt
inc
adc
and
lret
scas
mov
jb
sub
movsb
insl
cmc
add
out
rcl
je
and
mov
insb
cltd
movsb
movsb
xorl
sbb
xchg
cmp
jp
push
divb
outsb
sbb
insl
testl
or
popa
add
les
subb
bound
gs
cld
loop
stos
roll
push
xor
or
mov
mov
add
hlt
inc
hlt
xchg
add
das
clc
lods
in
std
cmc
fcoml
mov
dec
add
mov
pop
mov
adc
pop
xchg
xchg
push
push
fs
adc
or
or
adc
add
lret
adcl
je
je
add
jmp
adc
inc
push
movsb
cld
test
lret
push
pop
cmp
test
mov
add
jmp
sti
cmpsb
fs
push
sbbb
repz
inc
cmp
pop
pop
ret
add
data16
mov
xlat
sub
sti
aad
int
imul
pop
or
push
testl
aaa
sbb
andl
jge
xchg
push
repnz
das
adc
mov
test
or
push
pop
add
inc
inc
std
arpl
pop
xchg
mov
xorl
xchg
jecxz
cmp
pop
aam
push
mov
pop
push
inc
push
xchg
add
in
dec
xor
jmp
mov
nop
add
jl
aad
arpl
sub
pop
adc
push
imul
fs
sahf
test
clc
sbb
repnz
mov
cli
in
pop
in
out
fsubl
xor
popa
repz
xchg
rorb
mov
push
mov
int3
xchg
repnz
mov
sub
xchg
adc
fscale
gs
xchg
or
inc
lods
sub
aaa
add
mov
popf
aad
lret
minps
fwait
or
dec
lret
jbe
dec
pop
lea
in
aas
bound
xchg
or
fstp
cwtl
das
rclb
xchg
adc
aam
mov
in
shl
mov
test
add
fwait
jecxz
or
add
fxch
adc
cltd
bound
stc
lret
jmp
or
cmp
mov
callw
xor
jbe
bound
lods
xchg
mov
lret
xlat
push
sbb
jg
mov
les
repz
aas
in
pop
inc
aad
dec
sub
mov
add
test
pop
jne
ljmp
cwtl
sub
inc
decl
das
and
in
sbb
ja
pop
push
or
inc
data16
gs
imul
push
rcrb
push
enter
xor
xchg
cli
sbb
and
cmp
outsb
pushf
lret
jge
dec
rolb
enter
sahf
xchg
loop
out
mov
out
call
dec
and
and
int3
setge
pusha
push
inc
push
and
jae
test
xchg
xor
adc
jns
adc
loopne
scas
xor
xor
sbb
aad
insl
mov
mov
sub
imul
shrb
sbb
nop
xchg
aad
pop
add
add
in
es
icebp
sbb
jmp
stc
xchg
popa
or
jg
adc
fwait
enter
mov
lahf
adc
mov
pop
xchg
xchg
add
std
test
fs
add
xor
inc
std
cmpsl
lret
and
sub
and
lret
jb
push
dec
loop
mov
out
or
aad
push
xchg
jp
jmp
test
mov
mov
testl
scas
adc
adc
outsb
test
mov
jb
sub
mov
lahf
es
push
out
sarl
add
push
jp
cmc
push
lret
xor
sub
lods
and
add
movsl
fidivs
into
sbb
das
pop
dec
fmull
sub
cmc
ret
dec
jmp
pop
test
into
mov
neg
add
adc
mov
add
pop
fisubl
insb
scas
or
and
xor
xor
or
mov
jne
add
cmpsl
pop
ljmp
jg
add
aam
fdivs
cli
fucomip
and
sub
push
imul
fcom
fimull
jmp
lret
xchg
add
cmc
xchg
imul
sub
divb
or
dec
arpl
popf
out
daa
xchg
jo
je
pop
add
adc
pop
ficoml
mov
out
fcomp
dec
lock
add
cmc
dec
inc
add
bound
pop
pushf
out
sub
out
xor
or
jge
fs
std
mov
xor
adc
pusha
insl
push
cwtl
xchg
jnp
adc
imul
add
jae
sub
mov
mov
fdiv
test
stos
mov
popa
ds
add
das
add
shl
aaa
daa
adc
adc
jne
push
push
xlat
lods
push
push
idivb
inc
cmp
add
push
pop
and
inc
add
faddp
fsubrp
adc
sbb
mov
sbb
mov
mov
mov
or
outsl
mov
lret
cmp
push
fadds
test
addl
popf
add
adc
or
xlat
xor
push
add
xchg
add
je
xor
push
sub
jb
mul
addr16
jnp
xchg
add
pop
sbb
divb
xlat
enter
ret
cmp
sub
cmp
addb
cmp
orb
fadds
sbb
shr
incb
shrb
sub
cmc
daa
pop
ds
push
and
cld
popf
xor
pop
add
push
cs
pop
fs
test
cld
mov
rclb
lret
scas
add
pushf
add
mov
mov
xor
pop
arpl
cmpsb
mov
insl
mov
adc
sbb
or
push
inc
int
bound
adc
mov
cld
or
mov
aam
notl
fs
aaa
push
jnp
ds
icebp
fnstcw
lods
jno
adc
inc
adc
sub
sti
mov
lret
cmpsb
test
or
adc
cld
add
imul
popa
movsb
mov
cmp
or
xchg
xchg
pop
and
jnp
adc
cmc
mov
fildl
ja
or
sub
sub
movsl
mov
cmc
or
mov
sqrtps
push
add
insl
aas
imul
adc
pop
or
ret
imull
cwtl
mull
dec
dec
push
in
sub
mov
testb
ret
xor
hlt
cmpsb
xchg
xor
in
repnz
xchg
insl
sbb
push
test
inc
repnz
in
and
or
adc
cmpb
push
xchg
xchg
inc
pop
mov
jnp
mov
pop
pushf
dec
xor
sub
push
movmskps
orb
jbe
inc
in
mov
in
mov
sub
arpl
ficoms
cmp
idivb
lret
ret
mulb
xchg
in
add
cli
aam
clc
push
bound
or
loope
cmpsl
and
sbb
lock
scas
test
jo
inc
push
mov
add
xor
add
bound
adc
mov
test
aam
add
jmp
scas
add
aad
sub
push
sub
aaa
cmpsb
or
dec
mov
add
pop
dec
test
fs
jmp
mov
lds
fcomip
mov
fs
adc
aam
mov
ret
pop
xor
push
push
outsl
gs
sarl
xchg
loope
fistpl
outsb
cmc
or
in
addb
pop
xor
hlt
mov
es
and
mov
ret
orl
pop
inc
faddl
cmp
es
push
lds
xor
adc
cmp
dec
shll
sti
mov
jae
and
jmp
add
lods
pop
add
leave
mov
sbb
fs
flds
aam
xor
dec
lret
push
es
add
mov
xchg
pop
jge
leave
movsb
cmpb
clc
je
pop
into
repz
cmp
testl
jno
cmp
add
push
add
mov
mov
clc
xchg
shlb
jle
ljmp
repnz
aad
aam
or
mov
pop
push
gs
aaa
xor
pushf
popa
inc
das
loop
sbb
pop
dec
scas
mov
es
inc
add
dec
icebp
add
add
sub
add
mov
loope
shlb
dec
in
and
fsubrp
inc
mov
pop
addl
imul
push
jl
ret
and
in
shlb
aam
dec
jge
aaa
movsb
mov
jmp
mov
fs
mov
cmc
inc
pop
std
div
jp
fsubs
push
cli
jne
in
in
mov
pop
cmp
jp
fsub
fcmovb
mov
and
jo
mov
mov
in
sahf
adc
ja
mov
lock
xchg
adc
or
das
sub
or
sbb
inc
pop
out
enter
dec
fpatan
adc
std
out
std
aad
in
inc
jge
nop
push
pop
test
aaa
mov
add
js
jnp
std
sbb
sahf
rcrb
iret
out
push
dec
cs
cmc
or
aas
sahf
sbb
push
lock
or
aam
sbb
mov
push
pavgb
imul
jbe
mov
ds
lods
adc
fs
hlt
sbb
and
test
sub
loope
mov
xor
xchg
cld
mov
loop
mov
inc
push
lock
mov
in
jl
push
mov
add
call
adc
inc
jl
test
sar
out
dec
pop
or
out
push
data16
mov
or
test
pop
pop
js
pop
cmp
add
push
xchg
cmp
pop
stos
in
rcr
xchg
ret
pop
mov
ss
or
movb
pop
pop
push
jmp
add
mov
mov
or
sub
int3
jb
loop
push
ss
rorl
mov
cli
cmp
lret
test
in
add
inc
lret
cmp
stos
lock
or
or
lcall
sub
enter
and
and
in
jns
or
ret
testl
xchg
add
mov
out
dec
inc
mov
add
ret
dec
hlt
jmp
lds
ss
cld
mov
cmp
mul
dec
clc
pop
nop
gs
jo
add
push
leave
mov
subb
add
lods
sub
notb
sbb
roll
out
mov
fs
ds
int3
stc
sub
popa
add
sbb
lahf
and
aas
xor
andb
add
mov
sarl
cmp
dec
adc
cmpsb
jnp
cmp
nop
pusha
shlb
xchg
or
fs
jg
dec
lcall
cmp
mov
cmc
mov
xor
and
or
jb
add
test
pop
dec
add
cli
fsubs
jno
add
or
dec
aad
imul
cmp
add
mov
es
int
ljmp
sub
movsl
jo
cmc
inc
gs
rcrl
sbbb
adc
jno
ljmp
xchg
xchg
inc
out
clc
dec
dec
cmpsb
add
xchg
stc
push
push
popf
lcall
lock
add
lret
cltd
mov
inc
or
mov
loope
sbb
xor
mov
psrlq
dec
jp
daa
in
push
shr
mov
add
mov
cmc
pop
dec
ds
cwtl
ljmp
lret
mov
sub
hlt
push
fs
dec
push
sbb
add
ss
cmpb
fst
jl
movsb
mov
test
lret
pop
popf
or
out
idiv
jb
jnp
add
mov
jbe
rcrb
fs
cmp
xchg
cmc
jle
pop
add
fcompl
repz
lahf
sub
out
add
lock
mulb
jbe
mov
rolb
in
in
push
inc
mov
std
fs
sbb
je
and
iret
testl
push
fistps
arpl
add
adc
jne
popf
je
shrl
setl
xor
push
and
in
fisttps
xlat
mov
ljmp
xor
arpl
popf
add
in
insl
lcall
in
inc
dec
add
aaa
das
bnd
pop
and
jo
in
outsb
out
cmp
mov
lods
sub
mov
fs
xchg
cli
jo
loop
mov
jle
add
sub
jg
cmp
add
fldcw
sub
push
jmp
popa
xor
jp
test
mov
loop
cli
scas
scas
loop
and
or
rcl
push
push
pop
sub
pop
jno
shl
fdiv
testl
and
inc
loope
mov
loopne
add
add
loopne
fs
inc
xchg
mov
fildl
sbb
jne
stos
test
cli
xchg
or
mov
bndldx
push
or
adc
mov
gs
push
out
mov
pop
or
insb
push
or
pop
xor
repz
sbb
push
add
mov
aam
add
xchg
xchg
inc
jno
xchg
mov
add
xor
fisubl
adc
cmpsl
mov
mull
and
pop
sbbl
std
cmc
test
cmc
into
and
add
sbb
mov
std
lock
dec
dec
pop
incb
jecxz
aad
aaa
hlt
cmc
vsubps
jne
aam
add
inc
cmp
cmp
mov
add
mov
jno
les
pop
mov
fbld
xor
insl
adc
test
icebp
xor
cmpsb
repnz
push
cli
add
lea
mov
addb
push
mov
mov
jp
adc
cmp
mov
and
mov
std
int
pop
inc
or
inc
push
in
sahf
imul
inc
add
pop
and
sbb
adc
push
xchg
add
popf
sub
and
xchg
testl
scas
hlt
fcomip
cmp
and
and
and
jg
aad
dec
mov
out
mov
out
test
inc
or
cmpsl
and
and
jmp
pushf
inc
int3
push
nop
cmc
push
fucomip
add
mov
aaa
loopne
in
or
mov
xor
mov
add
pop
push
inc
cld
cmp
imul
push
xor
add
hlt
mov
scas
sbb
notb
and
daa
add
add
jecxz
cmc
jmp
fldt
push
inc
sbb
or
or
js
jl
mov
xor
sbb
btc
add
pop
xchg
xchg
sub
jmp
jno
lods
adc
add
mov
inc
xchg
xchg
test
add
pop
ljmp
lret
mov
in
je
pusha
lock
inc
in
movsb
xchg
xchg
xchg
pusha
xor
ja
lret
aad
fdivrp
add
fbstp
inc
sub
stos
add
lcall
xor
and
mov
mov
mov
jnp
ds
pop
mov
jmp
bound
rcr
mov
int3
ret
movsl
repz
push
and
xor
std
leave
pop
call
jbe
cmc
hlt
xorb
adc
inc
or
loope
bound
out
ficoml
aad
insb
adc
aas
xor
ja
idivb
xchg
jl
add
and
sub
xor
icebp
jo
dec
push
mov
xchg
xchg
mov
adc
cld
sub
xchg
sti
sub
sub
shrb
dec
cmc
ja
or
xlat
and
xor
and
lret
lds
cld
jecxz
dec
je
mov
and
push
adc
sahf
lock
add
loop
cmp
popa
rcrl
fcompl
lods
sub
or
or
cli
ret
push
psrad
add
scas
in
movsb
cmp
mov
lds
xor
push
jb
mov
adc
arpl
cltd
xchg
xchg
fs
push
dec
lods
fsubs
add
repnz
dec
rol
fs
out
arpl
imul
fsts
decb
cmp
xchg
lock
leave
push
call
push
cmp
arpl
jl
data16
push
movsb
and
in
pop
imul
cli
inc
notb
movsb
outsb
test
movb
jmp
js
dec
cmpsl
shrl
stc
adcb
pop
add
ret
or
push
popa
mov
jg
xchg
into
jbe
push
cltd
sbb
or
test
jnp
adc
mov
sub
mov
inc
fs
jg
outsb
jo
fcmovbe
dec
out
add
and
lret
inc
jo
js
xchg
xlat
and
rcrl
xor
in
pop
inc
jo
mov
add
push
push
cmp
xor
mov
idivl
adcb
lret
mov
in
enter
mov
stos
movaps
adc
imul
into
in
pop
jnp
cld
jo
jno
testb
sbb
movb
stc
push
and
adc
cmp
mov
or
test
icebp
inc
push
fs
xor
adc
gs
xchg
ljmp
mov
clc
sar
or
dec
insl
fnsave
ds
push
inc
negb
aas
int3
xchg
add
adc
inc
in
icebp
cmc
shrb
add
in
add
mov
mov
jle
outsb
push
movsb
or
inc
or
nop
scas
mov
inc
scas
xor
rcll
add
sub
sbb
sti
cmpsb
lret
aam
gs
imul
inc
jp
dec
or
into
or
out
push
and
rorb
mov
sub
adc
enter
lret
cmp
sahf
out
mov
dec
cmpsb
mov
clc
gs
jg
in
data16
add
push
mov
adc
xor
cmp
mov
xlat
push
jnp
test
icebp
jmp
scas
outsl
rolb
imul
push
cs
pop
jmp
mov
inc
inc
pop
hlt
adc
sarb
mov
cwtl
xor
addr16
out
cmpsl
shl
mov
loope
sub
ret
sbbb
es
aam
imull
pushf
mov
ss
outsl
add
mov
and
add
jnp
push
jb
dec
inc
or
sti
cmp
dec
rorb
pop
jl
repz
fs
stos
aaa
addr16
xchg
rol
ds
out
dec
fdivl
fstpl
jae
in
fstl
scas
xor
add
iret
notl
push
pop
jecxz
imulb
std
cmp
test
testb
sbb
loop
das
push
leave
arpl
jne
pop
inc
sbb
adc
daa
jbe
add
jg
mov
and
or
hlt
push
xchg
jns
lcall
inc
pop
xchg
aas
dec
adc
mov
pop
add
ljmp
not
adc
pop
adc
mov
into
or
push
cmp
cmp
inc
push
push
pop
dec
subb
jmp
iret
adc
ror
xor
and
cwtl
sbb
add
gs
push
fldenv
mov
lea
sub
lds
loope
sahf
pop
iret
add
mov
mov
mov
push
or
testb
inc
in
pop
jmp
sub
sub
test
mov
inc
adc
jno
sub
jmp
test
fs
jae
or
xchg
sub
mov
add
ljmp
sub
pop
cmpsl
add
inc
shl
in
ret
aam
addb
outsb
outsb
or
add
add
mov
add
cld
loopne
pop
xchg
jo
pop
jo
cmc
ficoml
sub
add
idivb
call
jns
mov
in
out
add
inc
sahf
mov
xchg
jmp
enter
mov
xchg
add
mov
push
mov
jne
mov
sbb
orb
leave
mov
and
jae
xlat
jg
adc
or
lods
imulb
cmpsl
loopne
int
push
mov
push
ds
ficompl
sub
test
xchg
add
pop
sub
xor
xor
jae
push
and
inc
mov
mov
cmp
cs
sbb
fsubrl
mov
fisttpll
adc
jecxz
fsubl
orl
jg
bound
jle
add
outsl
jmp
loopne
movsb
fs
aas
sbb
push
cli
mov
js
dec
push
fsubrs
push
pop
repnz
repnz
push
xor
in
loope
mov
mov
out
adc
aas
sub
and
aaa
adc
or
mov
outsb
cs
insb
popa
shr
inc
add
xor
mov
out
mov
popa
fsubrl
cmc
mov
hlt
call
cmc
mov
pop
pop
push
mov
idivb
mov
aad
popf
dec
or
hlt
out
mov
daa
or
js
mov
jbe
xchg
clc
imul
push
sub
mov
or
sub
and
jo
inc
cmpl
dec
mov
outsl
jb
cmc
or
lock
or
add
into
cli
push
cmpsb
pop
int3
rcrb
jl
dec
or
test
insl
or
or
adc
filds
fs
lahf
in
pinsrw
add
dec
test
adc
cli
and
int
test
sub
jne
mov
sbb
sub
add
pop
sbb
add
fs
dec
xchg
mov
push
push
dec
shll
idivb
movsl
xor
imul
subl
jmp
or
push
jmp
cli
fiadds
add
fdivr
jg
inc
insb
inc
jne
push
cmp
cmovno
adc
pop
or
sbb
xchg
cmc
cltd
xchg
sbb
jb
testb
pop
std
adc
dec
and
inc
imul
pop
push
pop
into
add
fs
sub
mov
sti
out
out
add
loope
outsl
aam
cmc
cmpsl
mov
mov
sti
mov
ret
push
gs
insl
popa
cmp
or
mov
fidivl
nop
mov
dec
cld
icebp
fldl
fadds
jp
jecxz
sbb
xlat
inc
test
and
dec
adc
imulb
rorb
out
insb
aad
add
inc
mov
mov
xchg
cltd
jne
adc
icebp
ds
sub
pop
dec
and
test
fisubrs
xor
incl
popa
in
lock
mov
addr16
adc
push
fstl
insb
popa
jle
sarl
pop
xor
in
xorl
xor
rorb
push
add
push
out
stc
ret
hlt
movsl
rcrl
loope
inc
test
mov
add
lods
jbe
dec
adc
testb
mov
pop
push
jo
sbb
stos
lret
popw
ffree
adc
repnz
xor
lahf
xchg
pop
add
js
nop
lock
lret
ds
push
dec
mov
or
lds
xlat
dec
negb
lods
repz
add
add
test
clc
movsb
dec
scas
in
cmp
dec
add
cmc
stc
lret
add
sti
pop
sub
cmp
int3
jne
lock
lret
push
xchg
add
movl
insl
mov
popf
shrl
fs
in
cmpsb
jbe
add
and
push
js
jge
pop
fisubs
add
pop
add
push
outsl
pop
iret
xor
dec
add
sbb
or
ljmp
push
add
mov
or
imulb
cmp
push
add
and
cmp
sub
insb
push
and
xchg
hlt
imul
rcl
add
or
lcall
jg
cs
std
xchg
inc
adc
inc
adc
ds
movsl
and
cmp
mov
add
pop
jne
icebp
popf
out
test
jge
out
ss
lods
sbb
push
shll
mov
jmp
hlt
add
dec
xlat
aaa
test
sub
inc
mov
push
adc
sbb
scas
xchg
sahf
movsl
orb
mov
add
fists
iret
fs
xchg
jge
inc
push
or
xchg
nop
adc
mov
test
stos
add
fstpt
mov
movsb
ret
or
dec
repz
popa
fstps
adc
fsubrl
cmc
test
cmp
int
add
add
jae
cmp
cmp
dec
loope
ret
xor
in
lock
movsb
mov
call
push
jnp
push
fisubl
es
sub
pushf
add
test
into
inc
sub
pop
or
lock
and
outsl
adc
data16
or
push
push
mov
pushf
add
adc
aam
cmp
call
add
into
lret
xchg
inc
ss
popl
dec
pop
add
mov
out
jl,pn
fwait
pop
mov
cld
add
or
mov
pop
jg
bound
xchg
push
frstor
inc
add
insb
movsb
subl
fs
dec
movsl
arpl
lods
pop
add
xchg
lret
test
in
repnz
popf
or
jns
mov
jo
and
mov
lods
jecxz
mov
push
mov
sbb
shrb
out
sub
cmc
imul
push
jl
test
pop
jnp
add
inc
add
adc
xor
mov
fdivp
jnp
sti
aam
push
lea
adc
jle
xchg
arpl
cmc
add
mov
mov
mov
int
mov
out
sbbl
xor
mov
repnz
xchg
out
cmp
fidivl
cld
nop
fs
ja
push
ds
add
pop
push
ljmp
fs
bound
add
or
stc
shlb
mov
xchg
out
add
push
cld
js
push
in
xorb
cmp
in
adc
mov
gs
pop
pop
xor
adc
pushf
pop
mov
add
pop
test
in
es
rcrb
or
popa
movsb
jl
aaa
mov
fs
cmp
cmp
sub
and
pop
je
jle
xorb
and
fiaddl
adc
add
jg
pop
xor
pop
jmp
inc
jns
test
cmpsb
mov
lock
adc
ljmp
add
jo
decb
repz
adc
cmp
pop
popa
or
addb
mov
mov
push
xchg
adc
jecxz
iret
fs
or
movsb
outsl
pop
cmp
and
outsb
push
lret
lret
sub
popf
lods
out
cmp
pusha
push
ficompl
pop
fdivr
fs
orb
ljmp
mov
push
inc
dec
adc
jns
jge
and
cltd
push
test
cld
mov
mov
mov
fadds
and
mov
gs
xor
jae
inc
cmpsb
push
shlb
push
sub
pop
or
add
test
sbb
out
pushf
in
faddl
adc
mov
mov
out
inc
sti
push
mov
in
xchg
les
leave
add
adc
hlt
jge
inc
add
cmp
sbb
push
sbbl
das
jb
add
aas
stos
mov
add
rolb
hlt
data16
in
incb
shll
jle
addr16
out
mov
push
iret
orb
lds
fs
clc
sbb
inc
pop
movsl
inc
movb
jb
fwait
clc
push
fldl
sub
les
mov
add
add
sbb
loope
mov
into
cld
outsb
xchg
daa
or
mov
mov
mov
aaa
loope
pmaddwd
mov
dec
ret
xchg
fnsave
bound
js
xchg
test
and
mov
add
fildll
sub
adc
scas
cmc
fscale
and
fldz
in
in
notl
imulb
jae
push
stc
out
imul
jl
jo
sti
sbb
mov
xchg
loop
andl
or
sub
loopne
xor
inc
test
out
ss
pop
xchg
mov
ret
or
mov
fiaddl
into
pop
or
dec
out
sbb
add
into
cmc
insl
leave
mov
cmc
sub
lods
adc
dec
adc
lcall
cmp
test
adc
xchg
xchg
dec
sub
arpl
inc
and
and
adc
cmp
adc
add
stc
cs
xchg
pusha
push
inc
or
pop
out
shlb
icebp
scas
mov
cmp
imul
movsb
dec
les
out
push
repnz
outsb
xchg
pushf
scas
test
dec
xchg
xchg
push
cmc
fists
hlt
fmull
sub
add
add
pop
leave
fnsave
push
cmc
repnz
sbb
sbb
in
inc
xchg
jecxz
enter
inc
pop
stc
sbb
sub
int
add
xchg
add
push
jo
in
nop
sub
mov
es
dec
arpl
jne
cs
mov
cmp
xor
and
fisttpl
xchg
enter
fs
stc
add
lods
jg
movsb
incb
push
jl
cmp
jbe
xchg
xchg
jge
and
sbb
in
mov
cmp
insb
callw
mulb
push
insl
aad
je
jmp
inc
les
adc
add
cmp
jl
mov
add
pop
inc
mov
cmp
inc
mov
push
orl
incb
adc
cld
add
ja
xor
test
jg
jno
lcall
insl
dec
les
and
mov
into
add
js
xchg
add
orl
xchg
sbb
andb
push
mov
call
mov
jno
out
inc
insl
lret
rorb
xor
in
pop
mov
sub
fs
aam
jns
add
fadds
jbe
pusha
movsl
nop
xor
dec
sarl
mov
mov
lods
popf
mov
and
dec
cmp
push
lock
lcall
idivl
xchg
sbb
cmp
out
outsb
or
add
in
jmp
sbb
imul
insb
push
push
cli
inc
ss
and
scas
adc
mov
fwait
iret
std
filds
lods
or
test
ja
fs
add
fiadds
mov
adc
mov
adc
xor
lods
and
outsl
adc
xchg
push
adc
cmpsb
mov
fs
sub
dec
movsb
sbb
aad
or
fs
push
xchg
aam
testb
call
in
add
dec
sbb
xchg
enter
xchg
dec
jns
add
cltd
mov
jno
sbb
pushf
test
push
into
ficoms
mov
ret
dec
add
pop
cmp
fsubs
div
or
mov
mov
or
cmp
les
int3
fs
push
xorb
add
add
push
xor
sbb
cli
mov
jo
push
orl
andl
xchg
pop
dec
lret
inc
fnstcw
cmpsb
fwait
add
rclb
pop
and
pop
pop
subl
pusha
or
in
jbe
mov
and
xor
enter
xor
xchg
inc
mov
call
lea
popa
fiadds
iret
inc
jnp
ds
push
jbe
add
test
jbe
and
arpl
xor
adc
fs
xchg
xor
add
out
add
arpl
bound
and
add
repnz
mov
push
cmp
sbb
add
inc
in
dec
hlt
push
loope
iret
fs
daa
icebp
or
push
push
cld
in
fwait
andw
jnp
push
sti
inc
mov
popa
stc
movsl
shll
dec
mov
jg
adcl
fs
sub
sahf
or
sar
add
ret
jns
and
lret
or
xchg
xor
cmp
inc
pop
push
jecxz
in
xor
sarl
popa
add
push
cmpsb
in
das
pushf
subl
and
add
pop
xchg
xchg
jmp
aas
aad
bound
sahf
nopl
ret
add
imulb
incl
or
add
inc
daa
mov
add
mov
sub
faddl
mov
sbb
mov
cmp
push
mov
enter
in
push
sbb
imul
sbb
shl
sbb
jnp
jmp
sbb
decl
movsl
filds
xor
inc
cmpsl
fs
ficoml
out
push
sahf
push
icebp
inc
pop
shl
jb
cmc
jbe
jns
dec
and
mov
mov
mov
jne
add
in
outsb
cmp
adc
or
and
icebp
push
lret
xor
xor
scas
repnz
ss
cs
inc
cs
rol
xchg
out
xor
fs
mov
fbstp
icebp
jp
push
sub
jge
fwait
and
push
loopne
ja
arpl
lcall
insl
mov
lds
aad
mov
cmc
in
xor
arpl
add
leave
adc
sub
sub
pushf
aam
std
test
dec
jge
repnz
psrad
idiv
enter
js
jne
rorb
daa
mov
sub
sarb
neg
fistpl
into
add
bound
and
les
adc
pop
loop
jo
clc
dec
and
rcll
fdivrl
mov
lret
mov
mov
in
mov
sti
dec
add
lock
mov
xor
scas
dec
xlat
push
std
xlat
lods
push
popa
adc
xchg
add
sub
in
fistpl
fdivs
inc
cwtl
and
xor
lock
jo
dec
addb
loopne
sub
int
fsubrs
xorb
sbb
push
cmc
imul
lock
sbb
adc
push
out
pusha
roll
test
out
add
pushf
js
les
add
push
popa
push
fs
add
aaa
pop
xor
add
mov
lret
cld
repnz
or
frstor
or
inc
pop
and
outsb
mov
pop
dec
jb
mov
sbb
insb
or
and
mov
or
jb
add
insb
incb
data16
into
test
add
dec
xchg
xchg
push
push
sbb
repnz
jo
clc
fbld
out
and
ds
adc
popa
adcb
push
add
inc
xor
sub
das
test
lcall
outsl
shl
test
push
add
les
or
into
add
pop
insl
popf
movb
fmuls
fldl
shrb
cs
cmp
rcll
cmp
push
mov
xor
sub
xor
mov
ficompl
cli
test
fs
dec
xor
leave
add
push
fldt
pop
repnz
imul
jg
pop
jne
fldt
or
pop
dec
mov
lds
cli
or
mov
mov
lock
imul
scas
test
clc
pop
cmc
or
lods
inc
pop
imul
sub
inc
xor
xlat
inc
inc
aam
lcall
inc
sub
out
std
mov
pop
pop
aas
lods
popa
jg
add
std
add
mov
sub
dec
cmp
call
xchg
or
lea
out
sbb
gs
dec
lahf
push
loop
sti
shll
mov
add
cmp
aam
xor
notb
test
sahf
sub
movsb
add
pop
ljmp
mov
jecxz
xchg
adc
cmp
inc
mov
arpl
add
and
cmc
sub
dec
pop
mov
mov
push
mov
cwtl
loop
add
add
fdiv
pop
push
xchg
push
inc
or
ficoms
push
xchg
cmp
xchg
pop
mov
jge
insb
sti
cmp
or
xchg
ja
add
es
jl
push
imulb
fcomps
add
cmovns
sub
sbb
jne
cmp
gs
cmpsb
dec
xor
in
das
pop
sbb
and
adc
pop
jae
mov
pop
add
add
in
or
sti
pop
pushf
ficoml
loop
movsb
add
out
repz
inc
sub
jns
int
sarb
pushf
mov
ja
pop
adc
fs
mov
inc
cwtl
add
xchg
aam
negb
into
cmpsb
dec
sti
jmp
mov
xchg
add
es
sub
inc
pop
rclb
test
xchg
mov
lods
testb
adc
mov
pushf
lret
inc
dec
movsb
add
push
mov
andnps
sbb
shll
add
adc
mov
divl
pusha
lock
fimuls
and
and
inc
out
imul
pop
cld
jnp
dec
pop
jbe
sbb
fildl
hlt
push
push
pop
rorl
cmp
xchg
lds
pushf
mov
lahf
and
int
sub
push
imulb
xor
cwtl
pop
mov
das
popf
xchg
fs
xchg
stos
popa
jbe
fcoml
or
testb
int3
xor
or
add
addr16
arpl
fnstsw
sub
fisubl
or
jl
sub
sub
or
push
sub
and
bound
outsl
scas
push
add
dec
jg
xor
push
dec
mov
and
mov
je
popf
loop
mov
sahf
or
idivb
add
pop
sti
cmc
aad
and
xor
pop
imul
add
out
add
xchg
dec
cmp
js
test
cmpsb
rcrl
lret
fs
jle
inc
and
mov
add
mov
inc
sub
sub
inc
lret
iret
in
ds
mov
push
loop
add
fisttps
or
jp
inc
and
xchg
popa
adc
out
and
cld
add
push
xchg
jmp
dec
sbb
mul
sub
sbb
cld
mov
sbb
testb
into
repz
loope
idivl
xchg
adc
cmc
dec
das
out
fistpl
jnp
lock
lods
lret
pushf
adc
stos
dec
mov
inc
mov
push
push
pusha
pop
or
sti
arpl
rcrl
sub
xchg
add
sbb
mov
stos
scas
movsb
xchg
not
lds
add
mov
dec
jecxz
cmc
out
dec
xor
pop
popf
or
mov
sub
out
cmp
xchg
add
cmp
test
shld
cmc
leave
sbb
lods
sbb
adc
movsl
mov
test
jecxz
push
mov
outsb
lea
mov
popf
cli
cmp
mov
or
jl
jp
dec
inc
inc
push
mov
data16
fdivl
jbe
aas
sub
addb
mov
mov
movsb
sbb
testb
mov
ljmp
mov
xchg
out
cli
mov
push
add
ds
iret
leave
inc
fs
cmp
sahf
add
dec
out
xchg
iret
add
inc
pop
cmp
daa
lea
jmp
outsl
xor
shll
test
ss
lcall
or
mov
testl
out
mov
adc
fcomps
popa
jmp
repz
and
cmp
sti
pop
dec
push
xchg
add
inc
int3
rolb
aas
divb
pop
ljmpw
push
data16
loope
mov
out
xchg
inc
pusha
mov
aaa
push
pop
cmpsb
mov
pop
dec
addl
and
js
ds
test
adc
call
sub
or
popf
orb
clc
iret
add
test
xor
cmp
pop
add
inc
in
sub
adc
jecxz
mov
add
xchg
push
pop
dec
inc
fstl
cs
jmp
cli
cltd
stos
add
rorb
jg
lods
aaa
movb
adc
movsb
push
cli
scas
jl
push
loopne
mov
push
cmpsb
out
dec
sub
cmp
or
fs
shll
mov
push
sbb
sti
cmp
fwait
mov
fisubrl
push
popa
dec
add
cs
jecxz
add
mov
int
inc
lahf
xchg
or
jg
lahf
ja
adc
fnstenv
outsb
dec
int
sub
shll
jl
sub
mov
push
sbb
mov
push
pusha
add
add
add
dec
inc
ss
add
or
mov
clc
outsb
popf
movsb
xchg
dec
xchg
sbbb
add
cld
sbb
fldenv
cmp
xchg
dec
iret
or
test
outsl
sub
in
push
lahf
stos
or
dec
xchg
add
lods
inc
test
adc
add
fmul
xor
or
mov
mov
iret
adc
xchg
add
add
jle
in
and
sahf
mov
add
xor
jmp
adc
xchg
jp
pop
je
inc
pop
jo
je
sbb
pop
lcall
or
not
lods
push
hlt
rorl
aaa
jbe
enter
mov
int
sub
pop
xchg
jge
adc
test
movsl
fs
add
sarl
rcrl
mov
mov
data16
or
stos
cmc
subb
subb
push
push
mov
push
test
out
bound
addb
loope
outsb
stc
stos
testb
jns
sub
loop
daa
into
and
movb
dec
adc
adc
cs
out
jno
ljmp
push
xchg
je
dec
pop
add
add
inc
rorb
xchg
subl
dec
js
scas
mov
xor
aaa
sbb
or
push
or
rcrb
add
add
sub
dec
arpl
sbb
cmp
sbb
test
mov
in
inc
mov
add
push
xor
test
enter
xor
mov
ret
inc
call
push
aad
and
int
jecxz
aas
and
sbb
lcall
and
xor
movsl
fs
fwait
mull
or
sahf
add
popa
fidivs
fadd
xor
inc
fwait
jmp
inc
add
outsb
sub
push
imul
mov
cmp
jmp
imulb
rol
add
or
push
ss
addr16
clc
cmp
daa
mov
lret
mov
inc
add
test
addr16
and
call
mov
add
pop
cmp
sub
movsb
jmp
in
cmp
dec
mov
andl
and
cmc
cmc
cmp
or
cld
cmpsl
add
cmc
add
hlt
add
push
lret
mov
inc
cmp
lock
add
repnz
inc
out
sahf
sub
test
dec
test
loope
xor
jbe
xchg
sarb
mov
loope,pt
mov
loopne
call
mov
xchg
adc
mov
push
hlt
mov
and
inc
and
ljmp
add
and
shll
pop
stos
sahf
dec
arpl
leave
mov
aaa
daa
js
xor
push
pop
repz
or
loop
int
mov
test
notl
mov
cmp
xor
sub
arpl
adcb
repz
dec
fwait
fs
lret
adc
and
dec
xchg
add
fs
and
dec
sub
jl
repnz
pop
sub
lret
mov
jge
jecxz
popf
int3
fs
dec
or
scas
lds
int3
xor
inc
mov
xchg
push
sbb
imul
xchg
pop
cli
inc
xor
push
hlt
fnstcw
pop
jbe
sbbl
or
rclb
add
data16
ret
mov
sti
xlat
shll
mov
sahf
bound
cmc
loop
inc
je
and
idivb
imul
push
jg
idiv
js
pop
mov
dec
repnz
rcll
gs
loope
mov
ret
or
into
add
push
sub
dec
add
jle
add
mov
xchg
sbb
pop
jne
mov
sar
gs
cmc
adc
cmp
mov
mov
inc
fbld
fsubl
add
inc
mov
mov
add
dec
out
mov
repnz
repnz
pushf
or
push
mov
fisubs
ja
push
adcl
lcall
jge
sbb
add
pop
testb
int3
cmpsb
adc
xchg
dec
cmp
sub
add
mul
ds
add
mov
and
add
or
shl
test
adcl
ret
add
sub
add
fs
test
or
add
xchg
aad
fldcw
popa
mov
cmp
add
push
sbb
enter
stc
shl
adc
cli
mov
orb
jg
adc
mov
lea
pop
pop
fs
inc
mov
popa
or
push
andb
gs
rcl
pop
loopne
out
sbb
out
addl
arpl
cmpsb
inc
movsb
add
stos
push
sub
cmp
notb
adc
mov
and
mov
int
lock
andb
xor
mov
jae
stc
xchg
push
pop
inc
fbstp
divb
mov
cmp
rclb
add
addr16
lock
push
adc
pop
out
inc
scas
lea
pop
mov
lods
cmc
xchg
mov
cmpsb
dec
add
dec
aas
add
dec
mov
aam
movsl
imul
sub
or
testb
inc
test
rolb
push
sbb
inc
add
mov
mov
das
pop
js
pop
add
lcall
sub
ljmp
cwtl
cld
rcll
and
add
pop
lret
data16
addb
add
out
in
es
push
repz
push
pop
inc
cmc
sahf
in
xlat
sti
andb
mov
pop
add
and
outsb
sbb
mov
or
jg
pop
mov
rcrb
inc
jne
push
mov
lods
mov
les
lds
add
loope
add
ds
cmp
adc
push
adc
push
shlb
inc
fldenv
das
cmpsl
loope
dec
jg
jns
adc
out
xor
jmp
pop
push
std
aad
dec
je
dec
bound
mov
pushf
adc
test
xchg
sub
or
adc
inc
or
dec
push
daa
out
mov
inc
sub
lret
lret
inc
mov
sbb
jmp
jmp
jbe
nop
movsb
cmp
or
insl
mulb
jno
fbstp
ljmp
fnsave
push
lds
lea
into
in
mov
cmpb
shll
mov
stos
ds
push
adc
es
xchg
inc
xor
adc
daa
imul
sarb
cmpsl
sbb
mov
ret
pop
je
out
sbb
or
xor
sti
cmc
fs
clc
aas
inc
add
push
les
daa
pop
repnz
sbb
ljmp
popa
repz
inc
add
repnz
or
or
adc
out
icebp
pop
stc
rolb
lahf
pop
enter
mov
jp
sub
pop
repnz
arpl
xor
gs
fisubrl
xorl
cli
in
in
cmp
into
into
or
jns
testl
mov
in
loopne
push
pop
pop
or
mov
adc
mov
add
cld
jmp
xor
add
divl
popa
aas
fisttps
dec
rol
ds
push
je
add
mov
sub
jl
adcl
ret
lock
in
inc
icebp
add
dec
loopne
dec
fs
xchg
cmp
repnz
xor
pop
xor
fcoml
xchg
pop
mov
int
ds
pop
sbb
shlb
adc
aas
daa
iret
sbb
leave
popa
daa
cmp
mov
into
test
or
or
cltd
cltd
mov
shrb
leave
inc
test
dec
sbb
mov
add
mov
out
pop
lods
pop
idivb
sub
xlat
add
jl
pop
mov
jle
mov
adc
adc
jne
scas
xor
fs
jp
mov
xor
add
gs
cmpb
add
push
addr16
movsl
xor
insb
jge
cwtl
push
fs
dec
mov
mov
out
repnz
xor
and
sub
pop
push
inc
mov
sbb
cmc
jecxz
lea
repnz
add
jle
es
je
bound
xor
push
ret
sub
incl
popa
mov
ret
mov
push
or
clc
nop
arpl
inc
aas
push
cmc
pusha
jl
fldl
ret
es
mov
sahf
dec
out
jmp
add
add
outsl
jecxz
in
xlat
sti
mov
ror
mov
push
add
cmp
or
neg
movsl
jno
movsl
sub
sub
cltd
xor
adcb
push
inc
sti
xchg
xor
inc
imul
sbb
loope
mov
mov
mov
mov
je
shlb
and
cmpsl
rcrb
xor
pusha
xchg
mov
inc
jb
ret
add
fmuls
in
dec
pop
popa
mov
push
movsl
push
test
testl
mov
sub
push
es
cmc
pop
hlt
insl
sbb
inc
mov
inc
int3
adc
xlat
aad
mov
inc
and
cmc
push
pop
cmc
fidivs
jecxz
test
notl
addr16
roll
cmpsl
or
in
cmp
pop
push
xor
iret
cmc
push
shl
sub
xor
fisubl
addr16
data16
dec
or
gs
addl
inc
add
pop
or
popf
out
insl
shl
push
into
or
push
adc
push
xchg
sub
push
ljmp
frstor
sbb
mov
lds
shrb
mov
or
cs
push
test
jns
mov
imulb
mov
in
inc
mov
dec
lret
aad
jbe
push
fdivs
bound
dec
enter
sbb
jmp
imul
mov
cmpsb
insl
ds
incb
and
lods
in
cmc
jo
ret
add
xchg
mov
or
in
mov
inc
and
or
stos
add
fs
sub
jp
cmp
dec
and
and
push
fs
sub
xor
push
data16
mov
and
push
or
cmp
daa
mov
mov
cltd
iret
iret
lds
cs
add
lea
push
scas
cmp
mov
adc
imul
xlat
xchg
imul
aad
sahf
add
outsl
clc
cmc
dec
jbe
xorl
int3
orl
mov
and
cwtl
into
mov
add
pushf
mov
push
cs
adc
inc
cmp
sub
xchg
push
outsb
fisttps
add
mov
leave
out
movsb
loop
mov
xchg
es
push
pop
cmp
insb
mov
adc
sahf
notb
mov
cmpsl
pcmpeqd
out
and
fimuls
testb
xor
lret
cmc
inc
dec
mov
sahf
imulb
movsl
mov
add
sub
add
mov
lock
or
test
adc
sub
add
mov
popa
push
mov
aam
fcoml
daa
fnstenv
mov
push
add
adc
cltd
pop
or
or
add
cmp
lea
pop
loopne
adc
pop
xor
xchg
pop
sbb
adc
int3
cmp
sub
and
gs
ljmp
push
or
add
out
jns
or
xor
repz
dec
mov
inc
lock
mov
inc
in
insb
lea
inc
xor
lods
icebp
xor
sbb
lret
xchg
enter
and
jno
popa
hlt
xchg
in
sub
dec
ljmp
mov
xchg
or
addr16
cmp
pop
or
popa
jo
push
nop
popa
jbe
movsb
scas
mov
sub
hlt
cli
ss
mov
out
add
and
in
pop
add
rcll
add
and
ja
lock
gs
fisubl
out
mov
mov
and
imul
add
pop
addl
ret
or
cmc
xor
lret
sti
in
add
out
sub
cmp
sahf
jmp
mov
jmp
out
sub
movl
sub
push
popf
add
adc
cmpsb
negl
cmc
ja
or
shrb
out
inc
imul
lea
and
neg
test
sub
add
mov
add
cmp
and
pop
ja
or
mov
cli
outsb
sub
loope
divb
pop
test
sahf
jle
and
pop
cmpsl
test
cld
jmp
add
cmc
add
cmc
add
lret
data16
inc
ret
push
adc
mov
pusha
sbb
int3
leave
pop
xchg
and
xchg
fs
cmp
jmp
lods
mov
add
jbe
xor
loope
add
cmp
cmp
enter
sub
movb
clc
orb
std
jmp
jmp
fistps
xlat
mov
cmc
sub
imul
adc
mov
loop
cmp
nop
stc
test
push
pusha
xchg
jg
xchg
mov
sbb
jae
xchg
sar
or
sbb
cmp
jb
fs
sub
cmp
sbb
aad
or
stos
iret
jo
add
dec
pop
jg
add
inc
test
mov
into
stos
adc
push
ljmp
je
iret
push
push
mov
daa
jmp
loopne
rcll
iret
fs
out
out
sti
cmp
inc
dec
and
fs
jmp
xchg
add
outsl
jmp
mov
mov
mov
cmpsb
push
xchg
jne,pn
sub
jno
jl
js
jbe
sub
test
add
pop
and
outsl
sbb
or
aad
out
adc
scas
repz
or
sbb
testb
data16
and
add
insl
mov
jg
imul
sti
or
push
orl
test
mov
mov
mov
lret
and
xor
stos
mov
or
shrb
les
adc
test
and
enter
psubsw
in
add
movsl
out
lahf
dec
fs
mov
repnz
cltd
sbb
inc
je
bound
cmp
pusha
popa
xor
mov
jge
sbb
sbb
inc
add
lods
dec
push
push
in
dec
call
rcll
sti
mov
hlt
loopne
cmp
stc
mov
ja
cmp
cltd
inc
arpl
js
lret
dec
idivb
cwtl
jns
add
jg
xchg
decb
inc
xchg
jbe
sbb
push
add
rcl
xchg
cmp
and
aad
push
sbb
aaa
clc
mov
addr16
daa
inc
mov
xor
daa
push
xchg
data16
mov
or
sti
pusha
mov
inc
aaa
jle
pop
mov
jns
xchg
and
stos
aam
jne
lods
add
dec
pushf
jno
fwait
in
mov
inc
and
or
fdivrp
add
push
and
jo
or
sub
push
mov
mov
testb
sub
loope
mov
cmc
scas
lret
out
jb
inc
push
add
pop
arpl
mov
pop
leave
cmc
inc
mov
loopne
or
or
jb
into
popf
fisubl
and
outsb
stc
pop
pop
add
mov
add
addr16
jne
xor
push
scas
cmpb
xchg
sti
popa
xor
pop
je
js
push
cmp
add
add
dec
or
adc
js
data16
sub
lahf
rol
push
jmp
and
or
aas
or
les
sbb
cmp
stc
add
clc
xlat
adc
add
jp
inc
jmp
push
xor
imul
inc
dec
lahf
add
add
nop
fwait
xor
decl
sbb
sub
and
cmc
jo
or
add
cltd
xlat
mov
iret
cld
mov
jle
shrb
push
mulb
push
mov
adc
movsl
movd
cmp
pop
and
outsl
or
xchg
sbb
sbb
dec
sarl
hlt
pop
mulb
arpl
in
sbb
sub
and
mov
or
dec
inc
es
mov
fsubs
in
clc
int
cmc
xor
adc
xchg
hlt
inc
or
dec
add
fistpl
push
in
in
mov
fsubrl
jge
lds
outsb
push
xchg
and
add
or
aad
arpl
jmp
nop
xor
add
jle
insb
dec
pop
and
int3
ja
xchg
pop
dec
xchg
adc
fs
mov
xor
lods
cmp
add
push
sti
mov
adc
scas
mov
xor
clc
push
xor
sbb
mov
mov
shl
mov
xor
inc
sti
push
and
das
test
jbe
paddq
aas
pop
notb
cmpsl
imul
popf
imul
out
lock
inc
and
adc
test
lcall
addl
sbb
mov
push
add
addr16
pushl
push
movsl
mov
inc
add
xchg
sbb
sbb
add
aam
movsl
mov
loop
push
or
fs
and
out
icebp
sub
or
xor
sbb
arpl
mov
popa
test
in
and
inc
add
sbb
gs
cmp
xchg
jmp
or
test
cmp
outsb
cmc
mov
sub
mov
fimuls
jb
jbe
push
outsl
mov
add
imul
push
add
insl
or
pusha
pop
lret
inc
or
or
cmpsb
mov
inc
test
push
mov
aas
cmp
imul
sbb
inc
aam
jnp
xor
lret
aaa
or
int
in
adc
mov
loop
pop
fs
xchg
insl
mov
add
inc
dec
add
adc
flds
in
arpl
dec
fs
mov
cmc
jae
hlt
mov
fs
mov
jle
popa
sub
push
es
and
sub
and
adc
add
push
mov
iret
push
or
pop
test
push
notb
mov
mov
aas
jp
cld
cmp
mov
push
add
icebp
or
lret
lcall
cmp
jl
xchg
stos
pop
mov
cs
mov
insb
cmp
ds
cs
cmc
jae
mulb
cmp
add
dec
mov
adc
jns
add
out
out
pusha
pop
xchg
cs
out
rclb
and
inc
push
inc
push
out
push
mov
fistl
icebp
jo
inc
in
sbb
imul
fildl
mov
mov
sar
add
mov
mov
ljmp
cmp
cs
mov
out
mov
mov
popa
ljmp
and
and
mov
mov
mov
cmp
out
lds
mov
xor
mov
jne
or
sub
fisttpl
mov
out
cmc
jae
mov
test
decl
xchg
inc
imul
xchg
sbb
sbb
nop
loope
push
movsb
pop
leave
add
inc
xchg
push
sub
fstl
movsl
cmc
loope
dec
or
shrb
loope
jle,pt
add
mov
fcomps
push
aad
inc
push
fwait
mov
cmpsb
adc
xchg
inc
lock
fucomip
das
or
add
sbb
insl
mov
xlat
aam
mov
repz
mov
das
add
aad
adc
jno
xlat
hlt
pop
mov
pop
mov
pop
add
rol
mov
push
or
mov
push
add
inc
sub
roll
daa
or
inc
jns
roll
mov
popa
push
cmc
js
divb
pop
ljmp
add
lds
call
cmp
lds
pop
add
sub
push
cmpsb
arpl
jns
popa
mov
insb
xchg
inc
out
push
mov
hlt
mov
sar
divb
clc
xchg
cmp
add
jle
out
xchg
outsb
imulb
div
sub
ds
add
sbb
out
out
xlat
dec
inc
sub
ficoms
sub
jns
add
dec
xchg
push
jecxz
sbb
or
jne
out
add
or
mull
imul
xor
aam
jge
and
jl
rcrl
lret
dec
push
or
cmc
dec
cmpsl
fs
bound
iret
push
jae
jmp
jb
cmove
popf
dec
test
xchg
xor
daa
dec
sbb
sti
xchg
in
sub
call
mov
movsb
mov
in
inc
xchg
jge
add
jg
arpl
pop
cld
inc
lcall
mov
cmp
fcmovb
push
cmp
mov
xchg
cmp
or
in
bound
cmp
out
pop
lahf
jne
mov
add
scas
jg
ds
jmp
mov
sub
repz
add
sub
jle
pop
jmp
adc
push
xchg
mov
jne
test
or
inc
lgs
scas
push
mov
mov
pop
add
js
jo
cwtl
jo
cld
push
stc
sub
aam
adc
ljmp
inc
dec
add
mov
xchg
loope
in
je
jb
add
pop
add
pop
adcb
mov
scas
fnsave
add
push
cmp
xchg
pusha
fs
in
mov
std
out
int
inc
adc
arpl
jbe
loope
adc
cmp
jl
cmp
std
push
dec
add
mov
fs
mov
jae
add
push
push
cmc
in
pop
push
mov
xchg
roll
inc
lea
cmp
cmc
jle
stc
fdivs
add
push
add
shll
inc
cmp
sbb
rcrb
stos
lret
cli
cltd
add
pop
movsl
movsb
out
std
test
aam
iret
and
aam
sub
data16
nop
mov
pop
add
mov
cmpsl
pop
icebp
hlt
rorl
add
insb
icebp
mov
loopne
repz
mov
mov
dec
arpl
push
popw
jl
mov
mov
xor
xor
clc
std
add
pop
cmp
aas
stc
aaa
aam
mov
out
sub
mov
out
test
push
inc
gs
xchg
adc
jno
push
into
addr16
mov
mov
lods
lds
mov
pop
push
decl
push
mov
cmp
xchg
leave
in
jp
aam
push
jne
scas
jne
inc
les
sbb
cmp
icebp
or
lret
push
iret
loope
add
mov
mov
pop
or
xchg
jns
jp
push
xchg
les
jp
add
adc
mov
leave
or
ret
stc
sub
xchg
or
pop
push
mov
and
jne
ret
sub
out
gs
movsb
adcl
in
sub
imul
pushl
add
dec
fbld
xchg
lds
mov
mov
cmpsl
add
inc
icebp
xor
gs
cmc
call
sub
das
rcll
mov
test
divb
pop
push
cmp
decb
push
scas
das
pop
ret
mov
push
mov
inc
cmp
stos
mov
jb
lods
inc
or
std
cmp
cmc
mov
xor
pop
in
imul
popa
push
add
div
sbb
add
adcl
ss
inc
sbb
xor
sub
inc
jae
pusha
sti
sbb
fs
rclb
push
and
add
mov
and
push
loope
repz
idivb
or
scas
insb
add
cmp
rorl
sbbb
xor
lcall
and
pusha
hlt
mov
je
pop
and
add
inc
xchg
xchg
inc
mulb
aas
inc
outsb
out
aad
in
mov
insb
or
iret
les
xor
mov
popf
cld
ret
sub
sub
add
popa
fs
fildl
lods
mov
in
mov
mov
jl
pop
cltd
aas
es
push
out
jmp
lock
insb
lds
std
testb
in
and
addr16
lock
into
mov
and
loop
dec
cmc
mov
pop
fs
mov
test
mov
ds
test
lret
data16
mov
je
inc
in
test
mov
pop
out
hlt
shll
lcall
out
loopne
adc
push
pop
or
mov
sbb
or
sub
fs
call
ds
add
cli
inc
scas
push
in
pop
xor
fst
xchg
outsl
add
je
sahf
frstor
fdivrl
mov
sbb
pop
push
cwtl
inc
sub
jno
idiv
pop
sarl
pop
divb
nop
add
adc
jmp
fiaddl
mov
sub
xchg
std
cs
psraw
xor
or
inc
aaa
jl
push
xchg
pop
int3
push
pop
or
push
pop
test
lods
enter
xchg
movsl
pop
movsl
add
mov
xchg
fs
sub
fcmovnu
daa
inc
jne
add
xchg
ret
and
fs
test
add
enter
inc
dec
in
bound
ret
and
and
lret
movsl
testb
sbb
adc
xlat
push
fs
or
jle
dec
adc
std
mov
adc
cmp
fwait
mov
mov
pusha
and
xor
rolb
or
test
ss
ss
int3
scas
cli
sbb
sbb
adc
js
sub
jbe
xchg
mov
daa
or
and
test
pop
push
das
enter
imul
xchg
addr16
or
xchg
inc
adc
sub
movsb
fs
fisttps
insb
mov
lahf
cli
inc
pop
scas
mov
push
loope
sti
fs
js
fs
sbb
cmp
push
mov
loope
or
pop
jecxz
xor
add
xchg
jo
mov
jo
push
xchg
nop
or
and
mov
sbb
or
add
adc
pushf
fdivrl
sub
jno
jecxz
jns
sbb
pushl
imul
cld
add
fistps
xchg
add
sbb
cli
ss
pop
or
push
mov
add
push
push
enter
mov
mov
fdivl
mov
lods
xor
jl
out
test
cmp
sti
ret
imul
es
jns
adc
adc
dec
loope
mov
add
jle
es
cmc
ds
popa
mov
jg
mov
call
fs
imul
push
add
add
and
push
and
push
lret
fnstsw
repnz
jecxz
je
xor
cli
sub
jge
repz
jp
cli
add
push
insl
mov
adc
idivb
ficomps
cmp
add
test
mov
testb
mov
push
sub
aam
pop
fadd
adc
sbbb
ret
and
push
jmp
inc
jl
mov
fs
dec
adc
jmp
mov
mov
fcomp
xor
inc
daa
mov
aas
push
in
push
mov
jg
mov
sbb
jno
add
sub
imul
out
cmp
imul
push
and
pop
dec
mov
add
or
in
fs
mov
mov
add
xchg
add
sub
xchg
add
dec
out
push
add
test
lods
xchg
jo
negb
inc
add
pop
pusha
sub
push
inc
sbb
in
mov
lcall
and
push
jno
push
iret
lock
movsb
pop
orl
lcall
add
and
push
inc
push
cmc
mov
or
mov
mov
fnsave
cs
insl
scas
cmp
pop
sbb
mov
xchg
sbb
sbbl
pop
inc
cs
xchg
inc
fs
push
mov
leave
and
cmc
and
clc
fwait
ror
mov
lahf
ja
les
and
dec
push
jmp
movsl
repz
inc
sti
repz
xor
arpl
add
mov
jp
arpl
popf
out
into
inc
push
pushf
aam
adc
sub
das
sbb
idivb
mov
pop
outsl
xor
addl
cmc
sub
icebp
push
xor
inc
add
pop
dec
imul
xor
test
test
cmp
call
insb
lock
cmp
pop
push
and
jno
outsb
add
xchg
fcoms
popf
add
mov
andl
cld
jmp
cmp
test
movb
shl
sbb
scas
mov
imulb
push
adcb
fldcw
jl
aad
gs
fbld
and
push
ds
mov
shll
pushf
xor
dec
aas
out
cld
sahf
fsubrs
sbb
jecxz
inc
cmp
fs
fistps
in
mov
ljmp
leave
fists
mov
scas
outsl
cld
lds
and
xchg
ljmp
push
dec
fprem1
push
bound
adc
gs
data16
push
fs
jmp
daa
push
add
xchg
movsb
leave
cmc
mov
pop
xchg
repz
or
bound
xorl
aam
incb
test
es
pop
dec
popf
inc
inc
xor
add
into
mov
add
xlat
pop
gs
xor
adc
pop
lods
cmp
popa
out
popa
jmp
dec
insb
pop
xchg
les
shrb
pop
jne
xchg
add
movl
xor
out
add
or
fs
cld
inc
sub
enter
pop
or
fimull
outsb
mov
sub
add
mov
mov
ljmp
mov
arpl
add
out
xchg
lahf
test
in
dec
mov
cli
int3
push
xor
orb
shl
fnstcw
sbb
into
and
push
sbb
push
repz
divb
ja
jae
pop
sub
xor
data16
fs
xor
cltd
jecxz
aam
je
jle
inc
or
inc
stc
xor
iret
arpl
aad
mov
sarb
push
popf
outsl
jne
test
jmp
mov
mov
add
bound
test
lods
mov
mov
sbb
in
add
shrl
stos
and
repnz
popa
and
mov
and
mov
push
sbb
addr16
mov
cmp
es
lods
add
into
in
push
enter
sbb
jp
dec
daa
sub
and
daa
xlat
adc
adc
shrl
dec
jl
mov
mov
pop
cmpsb
dec
push
pusha
add
adc
decb
inc
or
sub
fdivrs
and
and
cld
std
out
dec
cmp
popa
aam
mov
mov
xchg
lock
daa
pop
mov
divb
adc
movsb
xchg
mov
and
lods
add
xchg
xor
out
sub
push
or
cmpsb
pop
mov
xchg
add
xor
cmc
xchg
sbb
jp
xchg
cli
sbb
cmp
pop
mov
adc
mov
divl
pop
sarb
xorl
loop
inc
mov
mov
fs
dec
mov
pop
test
pop
repnz
push
push
xchg
test
hlt
add
push
add
xor
mov
push
lock
cmc
push
xor
jo
test
sub
insl
push
gs
mov
out
rolb
mov
mov
and
test
and
imul
bound
or
pop
jne
or
lahf
adc
test
inc
leave
test
lock
jl
jecxz
pop
or
xor
shl
imul
dec
outsb
add
mov
rcr
xchg
mov
xor
mov
push
and
fs
inc
push
xorl
xchg
stos
and
les
add
add
sub
lock
leave
mov
jbe
sub
add
push
call
xchg
mov
int
mov
lea
sti
cmpsb
scas
fmull
comiss
cltd
push
add
subl
or
jmp
push
dec
test
pop
add
push
icebp
jmp
mov
sti
add
push
add
push
push
stos
add
and
cli
or
push
icebp
popf
sbb
mov
arpl
daa
sahf
xchg
or
cld
into
filds
sbb
fildl
into
ret
aam
stc
adc
insb
fs
push
jno
add
jecxz
movsl
inc
fs
shl
insl
in
in
xchg
xor
out
repz
pushfw
popa
movsl
popa
rcrl
repnz
sti
cwtl
or
xchg
add
int
xor
add
xchg
jno
xor
out
fbld
iret
addb
loopne
add
in
pop
divb
lods
and
pop
dec
pushf
ret
aam
aad
std
adc
movsl
or
daa
pop
jmp
mov
popf
daa
sti
push
jg
notb
clc
cmp
shrl
in
mov
cmc
pusha
decl
pop
inc
mov
mov
or
popa
dec
or
inc
fs
xchg
xor
test
repnz
sub
enter
xchg
add
dec
fcmovnb
pusha
add
push
sub
xchg
iret
mov
daa
pop
jno
ljmp
mov
adc
push
hlt
outsl
pop
ficomps
adc
lock
and
andb
mov
mov
push
test
test
ret
fisubs
loope
sbbb
or
in
xchg
pop
xchg
cmpsb
jmp
imul
cmc
cmp
dec
xor
push
loopne
jmp
sub
fistps
enter
push
xchg
in
and
mov
mov
or
add
push
cli
ret
js
es
mov
xchg
fs
sbb
xlat
mov
sub
or
xchg
test
ja
rcl
negl
mov
test
jo
vfmadd231sd
mov
insl
jne
jmp
sub
call
lods
add
add
xchg
cli
xor
or
mov
push
idivl
add
in
mov
mov
mov
sbb
roll
mov
hlt
mov
les
or
psubusw
mov
pusha
add
xchg
add
add
dec
and
lds
add
mov
dec
and
sub
faddp
data16
dec
xchg
test
sbb
inc
and
shll
push
jnp
add
sbb
mov
add
sbb
cmp
or
add
into
insl
pop
test
or
sarl
int
sub
lea
imul
adc
push
add
insb
sbb
or
lock
jne
aaa
add
rcrb
inc
add
cmc
ss
mov
adc
out
sbb
not
fndisi(8087
push
mov
mov
sbb
mov
mov
hlt
fucomi
sahf
in
adc
add
cmp
add
or
inc
outsb
push
dec
jae
movb
fucomp
adc
cmc
sbb
fistpll
push
push
push
push
sti
lock
dec
rorb
add
push
mov
sbb
inc
les
inc
std
add
sbbb
ss
lods
in
xchg
out
out
add
jnp
jae
lock
push
cmp
inc
mov
loope
sbb
pop
xchg
mov
add
in
cmp
fs
add
ret
cmpsl
add
cmp
cmc
out
sub
int
test
test
test
pop
mov
cmc
gs
jge
cmp
adc
add
push
insl
cmpsl
push
testb
cmpsb
sub
rorl
outsb
xor
xor
xor
es
mov
aad
xlat
jl
mov
cmp
imul
pop
out
pop
push
mov
or
mov
cmp
add
inc
pushf
fadds
xchg
add
pusha
cmovbe
sbb
push
mov
test
push
test
mov
les
mov
add
enter
jecxz
and
mov
ljmp
mov
fs
add
test
ja
out
push
pusha
inc
mov
xor
cmpsl
xor
filds
cmpb
cmp
adc
xchg
jge
xor
xor
add
inc
add
mov
sar
jnp
and
push
dec
cmpsl
outsb
sub
mov
xor
subl
fldl
jno
add
iret
std
enter
setns
out
hlt
or
jmp
cmp
add
xchg
and
push
out
orl
dec
pop
sub
push
mov
inc
add
inc
and
nop
dec
and
sbb
inc
inc
roll
loope
cmp
mov
xchg
adc
inc
jae
mov
scas
or
mov
xchg
cmp
lcall
cld
push
imul
cmp
mov
add
inc
and
cmc
inc
pusha
mov
add
inc
scas
and
mov
outsb
fimull
loope
jne
rclb
inc
sub
mov
cmc
insl
pop
jo
idiv
mov
mov
sub
cmc
xchg
mov
das
mull
cmp
sbb
push
dec
stos
stc
mov
xchg
mov
push
in
xor
rcll
pmaddwd
jae
add
lock
hlt
add
mov
mov
jmp
sub
mov
push
sbb
cmp
iret
test
and
ja
outsl
inc
rcr
mov
idiv
cmp
cli
pusha
xchg
data16
pop
rorb
adc
dec
test
add
jle
movsb
in
movsl
lea
out
mov
push
mov
mov
push
bound
ds
fs
in
sahf
jg
movsl
ds
mov
lock
or
cmpsb
jo
and
imul
push
add
jnp
push
cmpsl
pushfw
ljmp
adc
cmp
ds
sti
mov
mov
sub
lds
add
ja
dec
or
aad
fmulp
or
add
pop
cmp
movsl
mov
mov
stos
mov
arpl
lds
cld
inc
mov
pop
xchg
add
cwtl
or
fwait
pop
mov
int
mul
insb
pushf
add
inc
jbe
jbe
pop
xor
push
in
data16
ds
jmp
push
push
sbb
imul
cld
mov
std
mov
negb
sbb
or
sbb
aaa
dec
sub
sub
inc
fldt
mov
nop
mov
lds
outsl
decb
pop
add
or
mov
andl
in
or
cmpsb
add
in
xor
fs
jno
pop
push
mov
xor
xlat
inc
mov
push
call
aad
mov
or
add
dec
xchg
mov
push
adc
mov
xor
adc
cmc
or
push
sbb
cmp
jbe
mov
sub
mov
mov
punpckhdq
xchg
push
lock
inc
inc
cmp
daa
les
pop
add
xchg
ljmp
jb
mov
loope
xchg
jg
and
push
fildll
icebp
lahf
ret
push
jbe
and
cli
sti
add
xor
and
outsl
test
add
leave
cmp
jns
dec
dec
negb
adc
test
insb
lods
add
and
sub
test
jae
pop
fstpt
imul
push
fdivrl
sti
xor
sbb
jl
xchg
inc
sub
dec
aas
add
or
xchg
int
xor
xor
cli
lds
in
mov
ret
imul
cmpsl
fs
stc
movsb
sbb
jbe
imul
outsb
pushf
lcall
loope
in
inc
push
adc
movsb
mov
js
fmull
call
loopne
add
shll
push
shrb
or
rcr
flds
jecxz
mov
sti
mov
fwait
sub
rorb
mov
in
lcall
lock
rorl
loopne
sub
fs
ss
adc
imul
scas
in
jge
movsb
in
lds
adc
add
enter
xchg
mov
and
loopne
or
rcrl
push
or
cmp
loop
scas
js
repz
inc
jns
cld
rcrb
movb
xor
movsl
cmp
rcll
call
shl
test
out
adc
mov
adc
adc
inc
cmp
sub
or
push
aad
sub
lods
add
sub
dec
std
xchg
add
adc
aad
fadd
push
mov
loop
xchg
cltd
jns
shr
mov
rclb
lods
ss
add
jb
dec
push
mov
test
lret
xchg
xchg
daa
sub
hlt
mov
cmc
fstl
jne
fs
aas
lea
or
add
mov
int3
test
in
add
je
add
mov
lea
sub
adc
orb
test
mov
pop
inc
test
mov
das
push
out
mov
scas
pop
aaa
sbb
ljmp
push
sahf
mov
or
fs
dec
adc
dec
jns
add
mov
and
out
mov
pop
loope
inc
adc
mov
or
cmc
fs
shlb
out
movsbl
fisttps
jnp
inc
mov
pop
loop
xor
les
sti
icebp
divl
fdivrp
cmp
pop
test
xchg
arpl
int
lods
test
add
lea
rcll
mov
cwtl
mov
and
lods
push
fisttps
sti
xchg
fmulp
movsl
dec
aam
and
mov
jp
jmp
out
loope
dec
cld
cli
xor
pop
mov
daa
mov
adc
neg
cmp
sar
mov
in
movsb
lods
out
inc
nop
test
pop
icebp
les
push
add
xchg
test
in
lds
fs
es
cmp
dec
call
les
adc
stc
mov
jecxz
add
cli
fadd
icebp
and
iret
cmc
adc
leave
inc
nop
lods
movsl
xchg
add
mov
pop
cmp
jbe
or
sub
push
mov
arpl
test
or
sub
xor
in
fcoms
jbe
or
xchg
xor
xlat
fs
lea
repnz
aaa
inc
pop
push
lock
cltd
adc
dec
and
push
in
mov
add
adc
stc
and
movsl
stc
inc
roll
xor
mov
stos
mov
push
mov
enter
je
stc
mov
add
std
dec
aam
sub
pop
jp
inc
adc
fsts
shll
gs
xor
add
inc
jnp
cmc
js
mov
jg
test
push
mov
out
hlt
dec
incb
bnd
lcall
push
dec
mov
enter
fmuls
fs
add
push
xor
sub
mov
loopne
inc
add
ret
popa
inc
les
stc
inc
shll
ret
mov
cmp
scas
add
cmc
inc
nop
aam
addr16
sub
idiv
add
stc
or
dec
sti
jne
and
xor
aas
out
sbb
mov
fldt
shr
add
das
mov
mov
addl
jp
pop
add
push
sub
incb
popa
out
inc
icebp
in
popa
in
negb
icebp
hlt
andb
and
push
scas
lds
cmp
std
fistps
add
stos
insb
adc
sbb
push
sub
stc
push
es
std
inc
ret
sub
pop
pop
cld
add
adc
and
cmp
ret
or
fsubrs
xchg
sub
cld
cmp
fs
popa
jae
or
test
in
testb
aad
and
ja
gs
mov
pop
add
dec
arpl
push
daa
cmp
push
and
outsb
push
add
ret
cmp
sbb
sbb
xchg
xchg
arpl
fsub
fs
testb
add
and
gs
repnz
roll
lea
add
filds
notl
std
jge
xor
aas
and
mov
cs
rcrl
jo
sub
jg
sub
fldcw
ljmp
fs
hlt
sub
inc
sbb
mov
and
xchg
and
ja
lea
cmc
and
xchg
cmc
sar
and
or
test
add
ljmp
adc
push
inc
mov
add
loop
repz
in
testb
test
gs
lahf
scas
and
popf
cmp
push
jbe
insb
fisttpl
ss
dec
push
mov
mov
aad
push
arpl
inc
enter
jle
add
jae
js
cltd
inc
cs
xchg
add
inc
lods
aaa
adc
inc
cmp
or
inc
es
sbb
pushf
add
lds
cmp
mov
cltd
out
dec
jae
jge
cltd
pusha
roll
xchg
inc
je
out
xchg
sbb
xor
pushf
jo
and
fs
out
imul
call
push
mov
jo
frstor
psrlw
frstor
xorb
es
lea
dec
pushf
add
dec
lret
xlat
out
fs
mov
pop
pop
add
push
ljmp
add
mov
push
pop
add
sahf
lock
inc
fnsetpm(287
xchg
sti
add
aad
mov
sub
aam
and
popa
pop
std
add
mov
mov
cli
xchg
aad
pushf
push
movsb
or
and
movsb
lret
and
jne
sbb
sbb
xchg
lcall
push
imul
test
idiv
mov
fcomps
out
testb
fs
xor
mov
or
mov
cmp
adc
mov
pop
add
fists
ja
and
lcall
add
sbb
add
in
imulb
sub
outsb
xor
jge
add
or
xor
aaa
notb
int
bound
push
or
fs
hlt
pop
arpl
adc
idivl
or
and
filds
fimuls
add
or
mov
imul
pop
sarl
stos
xor
mov
sti
jl
and
lods
xchg
rcrl
cltd
adc
les
pop
add
pop
pop
lds
outsb
push
imul
incb
aam
cmp
mov
lahf
cmp
xor
fwait
clc
jg
add
inc
and
test
xlat
add
sbb
jno
pop
xor
mov
jns
repz
sub
lcall
dec
stc
in
int3
add
cmpsb
add
xor
addl
or
test
andb
sbb
push
popl
adc
cmp
in
xchg
adc
jo
stc
add
xor
popf
adcl
inc
and
pusha
mov
aas
xor
test
sub
and
xlat
inc
push
fdivl
add
pop
dec
mov
xor
sub
test
sti
enter
cmp
test
std
repnz
cmp
inc
int
or
jb
mov
in
mov
xlat
enterw
push
daa
push
inc
movsb
or
or
push
pop
jb,pn
push
push
adc
sbbl
aad
mov
mov
jecxz
aaa
repnz
add
or
push
hlt
and
loop
push
scas
std
rclb
loop
push
or
cld
push
or
imul
aam
call
or
popa
ja
adc
or
mov
push
mov
subb
fcompl
dec
cmpsb
pop
in
ja
jne
cli
inc
sbb
inc
sti
shlb
lods
out
push
cwtl
sub
sub
test
dec
push
addl
test
scas
and
add
inc
push
std
imul
cmp
subl
pop
pop
add
addl
jns
pop
mov
jo
rcrb
clc
mov
mov
push
or
ljmp
jae
inc
rcrb
test
adc
lret
inc
je
or
outsb
cmc
cwtl
insb
insl
xchg
mov
or
push
add
sarb
das
sub
jmp
xchg
fcoms
lods
add
movsb
and
push
xchg
add
mov
adc
adc
sub
sbb
fmul
add
or
daa
mov
push
add
add
das
or
or
or
push
cmp
xor
test
cltd
sahf
mov
and
or
jns
push
in
pop
xor
add
sbb
int3
mov
cltd
push
push
pop
pushf
ljmp
mov
shrl
hlt
or
pop
mov
iret
pop
out
decb
loop
push
rcrb
clc
add
push
pop
aas
daa
mov
add
cmp
xorl
adc
addr16
cld
repnz
les
sub
mov
adc
flds
sbb
enter
sub
popa
sub
andl
mov
cli
loopne
aad
ret
inc
fs
push
mov
aam
pop
andl
mov
mov
cmpsb
dec
jl
xchg
arpl
orb
add
adc
in
or
lret
idivb
inc
cmc
dec
and
cmpsb
jb
std
in
std
aas
insl
insl
pushf
pop
add
repnz
lock
add
fsubrl
icebp
int3
inc
xor
jo
jl
inc
push
stos
arpl
das
mov
scas
and
mov
sub
loope
inc
cmp
ret
jae
incb
sbb
or
addr16
and
aas
movntq
test
push
and
gs
inc
stos
ja
add
xor
inc
fs
push
leave
je
addr16
add
mov
enter
pop
xor
rorl
orb
rcll
mov
dec
loop
sbb
xrelease
int
addb
pusha
cmpl
and
mov
pop
jge
and
push
inc
movsb
jmp
mov
sbbb
mov
ja
mov
pop
mov
cmc
clc
ja
jo
jle
aam
aas
or
mov
ljmp
dec
inc
bound
fbld
scas
sub
jl
inc
inc
lods
ret
xor
movsb
fs
jno
sbb
out
repnz
mov
inc
aas
xorl
pop
in
inc
leave
sahf
pop
add
sar
popa
mov
dec
mov
push
out
xchg
or
lock
out
inc
pop
inc
inc
push
jno
popf
fs
jo
adc
fldcw
leave
mov
andl
lret
jne
add
insl
xchg
std
adc
pop
sbb
mov
xor
push
add
xor
lds
ret
cmc
mov
insb
out
push
cli
add
dec
adc
in
fs
test
es
adc
mov
ja
aad
daa
or
test
add
orl
add
pop
inc
ja
fs
loop
mov
mov
cmp
sub
dec
adc
inc
push
sbb
imulb
cmp
gs
movsb
adc
nop
dec
dec
and
xor
pop
fs
loop
jle
sbb
test
cltd
test
mov
popl
jmp
stos
dec
add
dec
push
add
lods
loope
hlt
inc
jg
shll
pop
lcall
mov
cmc
aad
pop
dec
mov
movsb
mov
add
push
add
subl
imul
into
jne
add
stos
mov
pop
add
jmp
jne
call
sbbb
mulb
or
dec
wbinvd
out
jmp
stos
add
mov
jne
movsl
push
push
and
xor
fildll
or
loope
out
mov
cld
in
dec
faddl
in
imul
adc
sbb
sbb
sub
movsl
ljmp
decb
cmp
mov
imul
stos
movsl
or
pop
lock
cwtl
add
add
jle
mov
fs
lods
enter
pop
arpl
stos
or
jns
inc
pop
mov
es
push
mulb
xor
insl
mov
add
lods
inc
jmp
je
negb
sbb
arpl
add
jae
int
mov
adc
dec
push
dec
imul
inc
dec
je
and
or
push
fwait
cmp
lds
xor
in
mov
xchg
mov
or
jne
pop
notb
push
add
or
add
mov
inc
inc
sub
loopne
aad
mov
sub
add
add
in
pop
cmp
xchg
mov
roll
pop
add
test
movsb
insl
inc
push
and
test
addr16
pop
imul
pop
pop
cwtl
adc
pushf
sub
push
push
out
add
cltd
ror
cmc
dec
fldl
repz
or
fcomip
jge
test
mov
push
mov
or
ret
divl
jecxz
sbb
pop
leave
jg
and
outsb
adc
sbb
jbe
mov
mov
adc
jle
add
cmp
insl
cmpsl
jne
xor
cmp
pop
lds
daa
cmp
roll
and
neg
lock
ds
cmp
jnp
ret
insb
sar
outsl
lret
stc
push
fnstsw
inc
push
test
orl
push
mov
fs
je
mov
repnz
adc
ja
gs
xor
add
out
orl
cli
xchg
sahf
push
lock
dec
jge
in
imul
mov
cmp
adcl
js
popf
cmpsb
sbb
ds
jge
and
push
lods
push
icebp
inc
sbb
push
aad
and
jmp
jg
pop
jae
roll
js
in
jns
aaa
jecxz
dec
jns
or
sbb
icebp
enter
jl
fwait
xlat
adc
paddd
scas
mov
cmp
in
dec
testb
pop
stc
mov
add
imul
gs
jae
fwait
shll
xchg
mov
dec
adc
add
xchg
xorl
mov
dec
cltd
pop
pop
stos
add
stos
dec
xchg
or
fs
out
lds
cmp
push
push
mov
xor
mov
mov
jge
push
dec
fwait
pusha
jbe
xor
sbb
add
rol
lea
hlt
subb
out
xchg
fsubrl
mov
add
orl
mov
loopne
pop
faddp
jmp
fisttpll
aas
int3
leave
adc
push
orl
jne
add
dec
fs
ss
xorl
adc
mov
fs
outsb
or
xor
shl
pop
arpl
jle
or
popf
stos
bound
pusha
subl
movsb
sbb
mov
in
inc
jbe
ret
jg
xchg
testb
lock
leave
xchg
shll
and
pop
ficoms
or
dec
mov
sub
imulb
add
mov
leave
je
push
cmp
mov
pop
out
adc
call
cmc
outsb
lret
scas
or
decl
pushf
add
push
mov
jne
xchg
insl
push
fs
repnz
or
or
bound
adc
mov
subl
dec
jb
add
inc
mov
and
aam
cli
add
repz
mov
lcall
arpl
sbb
int3
out
mov
dec
sub
cmp
leave
mov
arpl
push
pop
push
jle
popa
paddb
out
mov
ret
add
les
lods
scas
add
and
dec
ljmp
call
add
mov
clc
add
pop
add
pusha
or
je
hlt
mov
cmpsb
stc
pusha
mov
jbe
push
lea
xorl
aas
and
pop
push
fs
fsubl
je
cmpsb
push
rcll
add
fimuls
pop
mulb
sub
cmp
xlat
mov
data16
adc
test
das
add
or
outsb
or
outsb
movsl
mov
push
inc
arpl
movhps
mov
in
insb
inc
nop
and
add
cli
aas
loop
sub
adc
jmp
jnp
movsb
add
add
jo
jae
cld
add
jns
testb
fsubrl
js
daa
xchg
les
das
in
in
xchg
inc
mov
cmc
test
mov
lods
jl
shl
fs
gs
add
mov
add
ss
in
push
clc
ror
jmp
add
mov
out
push
iret
add
add
jnp
and
adc
pusha
lds
inc
xchg
mov
aad
mov
addl
sub
movl
aam
imulb
dec
addr16
and
add
sbb
fcomi
sub
jp
xor
xor
in
aaa
mov
rolb
lahf
loopne
mov
add
inc
sbb
test
add
jmp
and
inc
cmpsl
repnz
aaa
test
push
cmp
test
testb
movsl
mov
and
mov
sti
scas
push
jbe
add
push
add
mov
lahf
cmp
jne
lcall
fisubrl
mov
cmp
add
xchg
es
push
mov
add
mov
test
fscale
push
test
cltd
pop
stc
or
repnz
adc
pop
add
lock
icebp
arpl
cmc
out
add
leave
pushf
ret
call
clc
ret
pop
inc
lcall
mov
sti
sub
decb
and
add
loop
sub
push
jnp
cwtl
sbb
pop
inc
out
cld
push
daa
in
mov
adc
rcll
add
dec
mov
pop
inc
pop
arpl
jns
or
rol
stos
push
repz
in
add
loopne
xchg
add
pusha
inc
xchg
in
push
adc
xor
js
out
pop
xlat
roll
sbb
out
add
subl
es
jg
int3
cmpsl
aam
dec
into
lds
add
xchg
dec
fsubl
dec
in
or
lea
pop
outsb
cwtl
test
daa
jmp
xor
cli
dec
mov
pop
xchg
adc
insl
movsb
fstps
imul
inc
lret
stc
mov
push
notb
pop
cmp
add
push
repnz
inc
adc
add
add
cmp
in
hlt
and
mul
scas
mov
mov
add
lea
test
or
or
out
sbb
fs
adc
aaa
dec
dec
cld
mov
and
cmp
mov
in
and
js
in
xlat
lret
decl
out
push
aad
movsl
loopne
lods
inc
inc
add
xchg
out
pop
cmp
jg
test
in
adc
rorb
cld
and
daa
jns
dec
add
pop
psllq
and
adc
je
and
jo
push
sbb
mov
data16
out
add
or
inc
test
or
mov
cld
dec
add
inc
and
adc
push
dec
or
stos
or
mov
gs
add
lock
fdivrl
movsl
or
fcomi
scas
lret
cmpsl
pop
inc
rcr
sbb
cmpsl
idivb
cwtl
push
mov
inc
and
shrl
jmp
iret
add
neg
shlb
loope
pop
or
sar
and
mov
rcrb
repnz
sarb
push
loope
inc
ds
into
sbb
je
cmp
stos
and
push
popa
xor
dec
rcll
dec
dec
sub
add
adcb
pop
mov
mov
pop
ljmp
cs
aad
push
fs
inc
inc
push
jns
insl
xchg
popa
ja
jo
adc
adc
out
popf
std
inc
idivl
cmpsb
push
mov
or
mov
mov
xor
xchg
pop
stos
pop
gs
sub
scas
mov
insl
in
int
divb
outsb
in
push
pop
call
and
sbb
xchg
sbb
pop
test
dec
cmp
daa
pop
sbb
pop
testb
jl
push
xchg
repz
xchg
pop
xor
jbe
add
push
lret
nop
push
in
mov
fmuls
cwtl
lds
js
sbb
lret
clc
ds
sbb
jns
loopne
in
cmp
mov
sar
adc
out
out
or
mov
rorb
mov
and
adc
adc
dec
movsb
testl
mov
aad
mov
adc
inc
pop
lret
push
dec
push
not
and
shr
add
addl
fiadds
jl
sbb
loopne
fdivl
sti
mov
inc
mov
into
jmp
add
adc
mov
inc
jae
add
out
fldz
inc
push
mov
aam
fnstsw
push
stos
cmpsl
mov
aam
add
inc
hlt
cs
in
add
push
add
sbb
data16
jmp
testb
in
jmp
cmp
cmp
cs
in
sub
imul
pusha
fsubl
jbe
push
test
push
sbb
cmp
or
or
jno
jp
cli
outsb
std
inc
into
aaa
or
mov
mov
sbb
cs
add
or
sub
clc
shl
ljmp
pusha
insb
or
in
dec
pop
adc
mov
cmp
push
dec
rcl
add
loopne
imul
pushf
ja
add
fidivs
xchg
dec
sub
fwait
dec
jnp
xor
sbb
data16
sbb
push
mov
data16
pop
jl
dec
xchg
mov
mov
vandnps
out
push
sub
sub
push
jp
or
jb
or
cs
sbb
dec
dec
aam
addr16
pop
test
mov
adc
inc
daa
push
cmpsb
imul
mov
rorl
vpsubw
neg
movl
pusha
subl
xor
sbb
movsb
mov
hlt
xor
out
jne
fiaddl
dec
add
jmp
mov
jbe
adcl
mov
nop
insb
cmp
mov
mov
inc
daa
das
fs
lahf
xor
mov
adc
cmp
out
call
popa
or
xor
pop
es
inc
sub
pop
jl
or
mov
xor
mov
mov
sbb
add
in
pop
sbb
mov
loope
xchg
xor
test
inc
in
clc
out
adc
fadd
filds
cmc
or
scas
scas
aam
testl
jg
faddp
out
in
insb
push
and
xchg
in
js
test
push
movsb
push
xlat
aas
or
mov
dec
sbb
cmp
shll
ret
push
leave
es
out
jmp
inc
add
inc
push
xorl
pop
sti
jno
adc
push
push
sarl
push
inc
mov
popa
test
cltd
mov
and
shrl
mov
ljmp
iret
enter
shrl
fs
cld
sbb
sbb
lret
or
leave
in
push
sub
fs
or
out
dec
inc
fdivrs
adc
sub
nop
xchg
sbb
cmp
fs
inc
push
adc
xchg
dec
add
adc
arpl
sbb
xor
out
ljmp
ds
or
pop
jns
jp
movsl
movsl
pop
fadd
out
jge
xchg
negb
sub
adc
les
push
daa
lds
aaa
pop
scas
test
fs
ret
or
pop
pop
in
pusha
xchg
mov
push
adc
xchg
jno
filds
dec
arpl
push
inc
mov
seto
inc
sub
testb
fdivrl
cmp
cli
ja
or
push
stc
jo
mov
ret
cmc
loope
and
jecxz
pop
add
and
add
fs
mov
imull
lahf
sub
bound
test
mov
loope
inc
sbb
mov
jmp
and
cmp
or
push
add
push
or
or
xchg
psubb
jmp
push
pushf
cmc
sub
mov
test
jb
iret
and
scas
iret
cmp
mov
imul
daa
mov
loopne
loopne
in
add
cli
das
xor
xor
add
and
lods
out
aad
adc
cmc
loopne
dec
mov
xchg
mov
inc
pushl
sub
arpl
dec
out
aad
rolb
scas
enter
inc
adc
leave
ret
ds
adc
loop
mov
jmp
or
inc
pushf
movsb
outsl
insb
hlt
in
push
or
aad
xor
or
push
les
sub
push
stos
fmuls
ds
ss
in
mov
mov
inc
leave
icebp
ja
xchg
outsb
mov
mov
or
pop
scas
js
negb
xchg
push
insl
xor
mov
mov
popf
arpl
orl
mov
cmp
imul
inc
ljmp
and
mov
and
pop
icebp
divb
sub
dec
cmp
push
hlt
lea
inc
inc
movsb
out
dec
push
addr16
cmp
dec
mov
jmp
std
mov
cmp
sarl
notb
mov
inc
or
jge
cmp
dec
mov
cmc
xchg
and
xchg
cli
mov
or
fst
or
mov
pop
ljmp
xor
pushl
add
add
subl
and
cmc
pop
sub
pop
test
add
shlb
mov
lock
dec
rclb
negl
ds
ljmp
pop
or
cmc
fdivs
push
aaa
pop
mov
add
adc
push
inc
push
sbb
mov
cli
insb
test
push
cli
sbb
dec
mov
adc
je
adc
cmc
cmp
xor
xchg
jae
mov
add
in
aas
jmp
mov
add
push
dec
mov
or
repz
adc
or
loope
xchg
dec
sti
mov
popf
inc
ret
add
push
hlt
or
outsl
xor
fstl
or
mov
lods
pop
mov
xor
or
xor
fstpt
mov
sbbb
sub
add
pusha
stc
fdivrs
sub
add
xor
jge
data16
sbb
mov
ds
sbb
jo
pop
push
add
add
das
mov
vshufps
adc
cmp
add
pop
roll
add
cmp
std
add
mov
sbb
into
insb
pop
or
add
pop
mov
in
jle
xchg
add
pop
vpsrld
push
lahf
xchg
movsb
add
add
pop
out
push
fs
adc
mull
mov
push
call
pop
cmp
sub
push
lods
adc
test
mov
negb
push
test
stc
jnp
jp
adc
outsb
mov
int3
add
xor
mulb
mull
push
lcall
pop
fsubl
clc
fs
scas
inc
mov
inc
xchg
add
inc
testb
movl
sub
inc
jbe
negb
sbb
popa
add
aam
mov
out
test
test
jnp
ror
add
lods
add
adc
cltd
push
mov
adc
roll
fwait
out
pop
xchg
orb
mov
sar
push
mov
add
xchg
andl
sbb
test
test
xchg
mov
xchg
inc
rolb
les
sub
decl
fmuls
popa
jge
div
das
adc
inc
adcl
fiadds
jle
push
repnz
pop
and
sahf
daa
aad
aad
inc
ss
or
lahf
gs
ja
pop
lds
lret
mov
mov
out
test
jmp
mov
pusha
cwtl
mulb
adc
imull
inc
add
xor
pop
add
lret
push
dec
in
pop
rcll
pusha
hlt
add
movb
ss
cli
test
push
xchg
in
aas
push
cmp
or
and
pop
es
adc
add
xchg
lds
sbb
lds
sub
fs
sub
or
mov
mov
mov
push
andb
sub
mov
mov
inc
iret
and
push
lock
mov
imul
mov
sbb
test
and
std
and
cmp
mov
test
fadds
js
xchg
add
lret
cli
pop
test
lock
push
idiv
lods
mov
jo
mov
movsl
cmp
popa
pusha
inc
sub
xchg
testb
jp
ret
add
add
rolb
cli
arpl
into
hlt
push
repz
xchg
rcrb
in
push
stc
or
xor
or
mov
add
loop
and
mov
test
add
jp
pop
ret
add
out
fs
jl
dec
push
and
sub
sbb
jno
jmp
aad
clc
cmc
addl
sub
add
test
jl
fs
xor
movsb
outsb
xor
inc
or
push
push
sbb
cmp
in
inc
add
fs
fldl
mov
mov
add
jmp
pop
test
adc
xchg
pop
add
in
dec
pop
pop
stos
out
dec
out
in
or
add
imul
jno
outsl
pop
int3
insb
add
jle
and
fs
shl
sub
mov
add
fcompl
outsb
cwtl
add
iret
mov
xchg
mov
testb
movsl
xchg
add
push
sub
push
filds
cmpsb
add
out
pop
aad
fs
sub
lods
jns
jge
fs
jae
pop
push
test
fistl
aad
in
loope
xor
scas
mov
insb
shl
sbb
mov
mov
xor
popa
and
sbb
inc
sub
sub
ret
fcomip
jge
lds
insb
es
jae
out
loopne
fisubs
rcl
idivl
not
inc
jmp
imul
sbb
mov
sbb
pop
repnz
aas
loope
sub
testb
jmp
ret
jle
or
dec
mov
sbb
insl
or
mov
dec
mov
mov
stc
aam
inc
sbb
aam
push
movsl
mov
add
or
arpl
daa
lahf
fs
pop
dec
insb
push
in
push
sbb
repz
dec
loopne
push
cmpsl
lret
pop
in
mov
lret
in
flds
mov
xor
xchg
lcall
and
sub
inc
clc
les
out
xchg
popf
pop
xchg
inc
jbe
shl
dec
add
sbb
insb
xor
sbb
lea
fs
clc
xchg
bound
adc
out
rclb
fisubs
enter
jge
add
or
mov
jne
xorb
pop
sub
test
fs
sub
sbb
mov
je
inc
dec
adc
mov
movsl
xor
sub
sahf
and
adc
sub
subl
cld
mov
enter
add
mov
mov
lock
add
ret
mov
jmp
sbb
jo
std
int
lcall
data16
insl
out
js
loopne
cmp
sahf
push
add
or
icebp
rcll
sub
pop
mov
pop
stc
or
not
int3
and
sti
sarl
add
or
push
sahf
leave
cmp
and
mov
sub
jo
hlt
xor
sbb
sarl
push
add
pop
dec
pop
xor
out
push
cmp
inc
sbb
and
jno
dec
mov
jmp
xor
push
loope
mov
shll
adc
inc
add
add
pushf
insl
movsl
gs
lret
jl
xlat
add
cs
xorb
scas
mov
adc
mov
sbb
adcl
iret
andb
mov
insl
fiaddl
insb
or
into
pop
mov
jl
ljmp
xchg
pusha
inc
sbb
pop
pop
rorl
std
cmc
out
sub
out
loop
in
add
stos
sahf
or
and
push
or
loope
adc
in
pusha
xor
add
dec
pop
mov
negb
sbb
add
cli
pop
add
sysret
sti
negb
nop
ss
andb
push
hlt
repz
cmp
fidivs
fstps
cmp
popa
xchg
testb
push
push
gs
syscall
out
fwait
dec
mov
movsl
data16
pop
push
aaa
inc
jno
ds
adc
pop
mov
test
loope
sahf
push
movsb
cld
xchg
in
shlb
iret
jmp
cwtl
std
ret
je
cltd
and
cmp
sub
add
fwait
sbb
adc
xor
cmc
andl
popa
stos
adc
nop
xor
mov
lret
add
dec
stos
ret
add
fsts
aas
into
sbb
jno
pop
fs
jne
sar
jb
roll
es
icebp
outsl
movsb
loop
dec
or
std
push
je
adc
dec
mov
mov
shrl
jo
add
push
loopne
mov
add
jne
std
mov
pusha
jp
jge
or
lret
jnp
std
fcomi
push
aam
add
js
mov
dec
mov
mov
andl
jecxz
inc
mov
add
xor
cs
add
scas
inc
stc
icebp
add
pop
cmp
decb
mov
cli
into
fwait
sbb
mov
das
in
gs
mov
add
push
adc
or
lcall
sbb
stos
cli
test
loope
mov
into
leave
sbb
imul
pusha
test
call
test
int3
dec
movsb
mov
subl
sub
and
bound
xchg
inc
and
add
add
testl
jle
push
out
sbb
dec
jne
jp
add
sbb
cmp
and
inc
mov
add
adc
sti
cltd
pop
mov
add
sub
add
jo
out
jle
push
lods
sbb
roll
add
imul
add
mov
and
add
loop
adc
decl
out
movsl
mov
adc
cwtl
popa
dec
adc
inc
fmull
cmc
sub
scas
add
and
adcb
icebp
pop
inc
mov
sbb
mov
call
roll
fs
adc
push
and
shlb
xlat
inc
dec
pop
ret
inc
xor
mov
ret
fs
push
sbb
je
push
loope
mov
call
rorl
cmpsl
je
divb
daa
or
sbb
arpl
push
out
push
add
sbb
add
cs
cmp
sub
mov
out
js
push
add
jge
mov
hlt
cmc
insb
or
and
xor
mov
inc
xchg
les
mov
mov
cmc
xchg
add
leave
loopne
sub
jmp
lret
rolb
xor
cmp
popa
add
mov
pushf
xchg
mov
push
adc
clc
push
adc
pop
movsb
push
push
and
pusha
lods
in
and
add
adcb
insb
leave
sub
lret
push
xchg
add
test
jp
xor
popa
xor
loope
loop
xadd
stos
daa
sub
xchg
lock
out
add
or
fprem
fs
inc
idivb
repnz
xchg
sub
jle
push
sub
les
mulb
insb
ljmp
outsl
add
jb
push
mov
pop
xor
mov
cmc
sub
lods
jo
inc
xchg
mov
pop
add
cwtl
sub
push
mul
stos
or
out
les
sub
iret
data16
push
add
aas
add
adcl
mov
inc
scas
adc
push
out
pop
loopne
test
not
lahf
or
out
outsb
leave
push
shl
and
faddl
mov
shlb
jl
or
fs
sbb
aad
cmpsb
pop
sub
push
movsb
or
popa
jns
sub
neg
stc
in
add
xor
popl
mov
add
and
cli
fucompp
loope
mov
mov
insb
je
test
test
jge
mov
and
or
es
mov
push
sub
movsl
xchg
dec
sub
jecxz
xor
pop
xchg
rolb
inc
int3
xchg
mov
inc
push
push
lods
icebp
lods
mov
decl
in
mov
push
addb
mov
and
inc
or
and
xchg
ds
add
jb
mov
mov
idivb
in
mov
mov
sub
das
mov
jecxz
enter
ss
cld
lret
cltd
notb
push
into
xor
inc
das
push
sahf
icebp
ss
adc
xchg
jne
dec
mov
fldl
call
and
inc
rorl
jo
mov
in
xchg
and
lahf
ret
add
in
test
mov
ficompl
fs
pop
into
inc
sbb
jp
add
bound
push
testb
in
fwait
ljmp
int3
sub
mov
jmp
enter
push
sbb
push
xchg
test
dec
lock
adc
push
mov
movsb
jge
add
jbe
js
pop
jbe
sbb
jbe
repz
dec
lods
std
in
fs
jmp
inc
mov
hlt
jg
sub
fbld
or
fsub
xor
aad
in
add
pop
adc
xor
iret
add
cmc
mov
and
incl
sahf
gs
inc
sbb
ret
mov
decb
in
and
jecxz
aam
out
cmp
and
xchg
cs
push
pusha
popa
cltd
sbb
in
adc
add
adcb
mov
ret
insl
icebp
rorb
cmc
dec
pusha
adc
mov
jl
push
dec
push
fisubs
mov
mov
push
mov
js
pop
and
push
mov
cmp
lods
cmp
or
out
jl
call
push
jmp
repz
cmp
iret
out
outsb
add
push
inc
sarb
push
lret
mov
or
cmp
pop
push
adc
shll
js
test
cmc
cmc
push
sub
daa
mov
dec
add
add
lretw
mov
xchg
testb
sub
addb
push
mov
divb
add
imul
mov
add
out
mov
fs
repnz
push
adc
mov
dec
lahf
xor
das
adc
out
aad
add
cmp
cli
jno
mov
sbb
rcll
add
mov
cmp
cmp
popf
cs
dec
ss
dec
xchg
imul
out
or
arpl
jge
add
mov
jmp
mov
fmul
clc
pop
nop
jne
scas
loopne
sub
add
push
add
push
xlat
xor
mov
imul
daa
pop
push
idivl
mov
in
add
or
xor
mov
sahf
test
and
repz
mov
movsb
and
stos
out
jge
and
mov
mov
movl
add
dec
push
or
roll
push
test
push
xchg
jge
movsb
inc
in
add
nop
sbb
add
sarb
inc
popa
daa
lcall
push
push
dec
call
cltd
pcmpgtb
dec
cltd
movl
pop
push
xor
neg
xor
out
repnz
jne
mov
sarl
jle
sbb
clc
push
or
mov
in
adc
in
add
mov
xor
push
cld
les
and
pop
and
xchg
add
mov
cmp
cmp
or
mov
xchg
and
fadds
inc
fisubrs
insl
push
push
mov
xchg
popa
add
cmc
shlb
movsl
out
pop
lcall
rcr
cmp
dec
andl
or
pop
jbe
or
pusha
dec
jbe
jmp
jne
xlat
std
jns
add
pop
push
in
dec
shrb
push
and
mov
fisttpll
jbe
mov
idivl
xchg
in
frstor
inc
jp
jge
mov
inc
roll
fs
test
inc
cmp
push
push
or
dec
cltd
repnz
stos
sub
sub
std
ja
out
inc
sahf
loop
fbld
push
and
push
push
popf
addr16
xor
cmp
imul
or
mov
repz
jl
into
sbb
ja
pop
test
mov
adc
dec
pop
inc
xchg
or
mov
cmp
xor
rcll
nop
sub
mov
or
mov
jecxz
add
or
xor
ret
push
cmp
adc
or
aaa
into
out
add
pop
ss
add
inc
nop
jne
dec
pop
aas
mov
popa
out
inc
neg
add
push
and
cmpsl
pop
add
icebp
testl
pop
adc
repz
out
inc
mov
icebp
cmp
movsl
mov
movsb
add
cmpsl
pop
dec
test
or
mov
jle
mov
or
addr16
testb
add
dec
int3
cli
repz
test
cmpl
rorb
loop
mov
mov
cmpps
testb
in
shlb
popa
faddl
loop
cmp
roll
addr16
lods
fidivl
or
hlt
int3
gs
scas
dec
mov
icebp
sbb
add
sbb
xchg
jge
jg
fidivrs
cmp
jg
push
mov
push
insb
push
xor
int
mov
jbe
adc
les
adc
lock
push
lods
out
dec
add
cmpl
imul
cmc
xchg
rolb
dec
icebp
mov
jne
push
fs
xor
ret
addr16
mov
adc
fxch
inc
push
test
out
rcll
push
loope
or
mov
idiv
xor
sub
xor
add
mov
push
testb
push
push
ja
add
mov
dec
fadds
popa
in
lods
and
add
enter
stc
das
out
adc
jmp
stc
sarb
mov
cmpsl
andl
xchg
sbb
sub
and
mov
int3
or
ja
xchg
cmp
xor
gs
sub
es
add
pop
jae
lock
fs
sub
cmp
xchg
mov
add
mov
sti
repnz
and
mulb
in
mov
repnz
add
mov
cmc
into
fmuls
cli
xor
testb
dec
js
inc
push
jne
pop
testb
mov
xlat
cmc
cli
jo
in
pop
data16
mov
mov
sub
pop
add
sub
repz
jmp
das
xchg
mov
repnz
test
or
test
and
testb
icebp
xchg
add
push
or
xchg
in
or
pop
mov
pop
xchg
leave
xor
cmp
cwtl
mov
dec
fcompl
add
fs
sbb
hlt
xchg
cmp
shrb
pusha
notb
xor
popf
inc
add
out
roll
mov
pushf
int
std
roll
jmp
fstpt
add
out
jne
fs
in
xchg
add
sub
cwtl
xchg
aam
inc
and
cmp
sbb
adc
xor
pop
and
jns
pop
mov
push
clc
inc
jae
pop
test
mov
mov
adc
pop
cli
mov
loopne
add
inc
adc
mov
sub
sub
jns
push
mov
into
adc
inc
inc
add
imul
es
je
dec
imull
movsl
pusha
adc
xor
add
xor
das
xor
sbb
jns
inc
sbbl
aas
jnp
test
movb
and
push
or
icebp
jno
sbb
xor
cltd
mov
or
pop
jge
cmp
cmc
mov
jb
ss
repnz
pop
mov
movsl
ret
push
cmpsl
test
xor
add
push
push
xchg
jne
maskmovq
divl
pushf
fisttps
xchg
sbb
and
dec
push
xchg
cmp
add
mov
inc
in
jle
push
xchg
fs
jne
inc
nop
dec
mov
lods
mov
mov
addl
adc
inc
xor
jb
push
notb
mov
xchg
add
and
sbb
fs
mov
cmpb
movsl
cltd
xchg
push
call
imul
mov
in
inc
jae
inc
mov
dec
nop
push
mov
std
mov
push
fs
inc
xor
lahf
add
movsb
cld
mov
inc
rclb
dec
inc
testl
ss
sbb
cld
stc
fdivs
sbbb
icebp
imul
clc
inc
ja
and
lds
mov
fwait
divb
outsb
dec
xor
in
add
xor
sub
sbb
shlb
push
mov
lcall
mov
push
or
faddp
push
test
sub
in
pushf
jge
jmp
xor
sbb
lods
scas
xchg
xchg
bound
fs
movsb
mov
ret
lret
fs
test
sub
fs
jne
sbb
xchg
push
xorl
mul
icebp
sub
add
sub
jbe
dec
das
xchg
adc
push
and
sub
adc
mov
xor
lods
inc
adc
sub
adc
xchg
pop
jl
and
imul
call
add
sbb
lods
sub
dec
bound
sub
rcrb
add
xchg
xchg
mov
dec
repnz
push
inc
sti
in
mov
adc
mov
jbe
lock
pop
sbb
gs
andb
and
sbb
cwtl
in
bound
es
idivb
aas
repnz
fidivl
rcrb
stc
and
je
xor
jno
out
ja
jbe
stos
rolb
push
sahf
mov
cmpb
mov
jle
and
pop
dec
fs
mov
and
adc
inc
cmp
stc
pop
js
lods
mov
out
repnz
sbb
cmp
inc
push
adc
mov
popa
movups
jle
sub
mov
sahf
dec
xchg
xor
pop
lock
mov
or
dec
nop
jne
xchg
cmp
pop
adc
sbb
adc
push
cwtl
cltd
add
in
je
cld
cld
xor
xchg
clc
push
mov
and
cmp
insl
jle
sub
fsubl
aam
cmc
pop
dec
outsl
push
test
in
lret
cmpsl
adc
jo
sub
push
out
fcoml
fs
rolw
xor
lea
and
fs
bound
push
fisubrs
or
insb
dec
test
dec
push
xor
insb
data16
jle
mov
mov
lds
in
shr
push
or
ljmpw
sbb
and
test
xchg
test
nop
jns
mov
or
xchg
mulb
push
add
pop
test
inc
fs
cmp
mov
add
movsb
and
insl
dec
xor
xchg
arpl
les
loope
xchg
inc
testb
jne
push
loopne
ds
sbb
fs
push
or
or
cmp
add
adc
sub
mov
dec
add
movsl
sbb
icebp
adc
fdivr
iret
inc
out
in
add
cmpsl
iret
or
cltd
aam
dec
add
xchg
mov
or
or
add
or
and
mov
sub
fs
adc
rorb
cmp
aam
imul
cmc
ja
add
jbe
sub
xchg
pusha
mov
pop
add
pop
push
xlat
add
testb
push
fs
dec
pop
fcomip
jno
mov
or
mulb
cmp
pop
push
stc
jae
mov
push
std
cltd
push
mov
cli
movsl
ss
cs
and
std
fs
pop
adcl
loopne
fwait
popa
fs
push
fistpll
jbe
fs
imul
imul
mulb
inc
sti
fnstcw
add
adc
xchg
cmc
jne
int
adc
subb
cmp
add
enter
lock
iret
data16
das
add
cld
add
ja
js
push
rolb
pop
adcl
or
cmp
jnp
or
xchg
shrl
jl
imulb
and
adc
sub
or
leave
jns
pop
sbbl
aas
adc
dec
repz
fdivrp
push
pop
jae
cmc
fistl
mov
cmc
and
fst
pop
div
adc
lods
pusha
clc
push
add
lock
add
jg
frstor
push
mov
out
xor
lock
add
dec
add
push
shll
arpl
jb
push
sbb
rcrb
ja
adc
hlt
xchg
and
add
dec
sub
adc
arpl
mov
in
adc
add
pop
jo
adc
and
fwait
pushf
and
lret
cmp
test
outsb
fiadds
mov
shll
mov
in
jl
imul
int
sub
push
subl
inc
pop
mov
sub
add
ja
repz
or
gs
or
es
mov
cmp
test
out
stos
lods
push
cmpsb
cmp
mov
and
cmp
imul
arpl
push
adc
pop
xchg
jnp
push
pusha
xchg
js
icebp
cmp
aam
add
and
inc
subb
imul
sub
les
mov
xchg
dec
cld
inc
repz
and
test
jbe
inc
notb
inc
pop
push
das
jl
add
adc
mov
mov
cmp
jne
inc
mov
pop
dec
cs
or
dec
adc
add
cmp
cmpb
mov
ljmp
call
test
incb
fst
insl
andb
add
mov
push
sti
cmc
jnp
sbb
push
arpl
adc
jl
dec
add
pop
push
js
dec
xor
rolb
mov
cmp
mov
out
in
roll
xor
sub
stc
dec
cltd
sahf
scas
push
xchg
xchg
shlb
in
les
sti
sub
sahf
aad
push
push
xor
add
mov
cmp
and
test
add
pop
dec
ljmp
shr
xor
or
sbb
or
mov
loope
pop
pop
add
push
movsl
cmp
daa
jns
xor
xor
pop
jl
jl
imulb
pop
sbb
xchg
je
adc
mov
xlat
mov
call
daa
sti
xchg
cltd
fdivp
rolb
incb
jbe
push
push
or
lret
mov
sub
add
pop
sbb
mov
dec
notb
add
mov
xchg
in
out
push
mov
add
cld
pmulhuw
lcall
rorl
inc
pop
cld
mov
loopne
cmc
adc
movsl
repnz
je
faddl
dec
add
stc
sbb
arpl
push
aas
pop
outsl
push
idivl
lds
mov
daa
dec
out
adc
jg
add
xchg
cmp
std
inc
add
ljmp
mov
stc
mov
push
addl
lock
and
test
add
popa
roll
sbb
test
insl
shll
add
dec
add
add
cs
push
in
xchg
frstor
cmp
iret
fs
ds
scas
cmp
test
hlt
xchg
adc
outsl
add
sub
cmc
sub
jno
add
fbstp
cmpsl
neg
pop
mov
and
in
inc
push
xchg
out
inc
stc
repz
popf
aam
movsb
adc
adc
add
fistps
cmp
add
decl
xchg
pop
popa
inc
inc
jecxz
jnp
xor
mov
fs
and
cmc
sbb
lea
cmc
or
lods
rorb
xor
pop
add
js
jmp
pop
mov
pop
shr
sbb
jno
test
ss
out
aam
sar
dec
add
jg
hlt
jae
repz
aam
mov
mov
std
inc
cli
orl
out
rorl
or
add
dec
cld
jae
arpl
out
pushf
mov
add
pop
mov
inc
sahf
ret
add
loop
xor
aad
loop
into
jbe
test
icebp
ss
mov
andb
add
nop
daa
movsl
mov
xchg
es
mov
inc
push
pop
fisubl
fs
sbb
insb
add
inc
add
pop
cmpsb
lock
cltd
and
out
and
jmp
jmp
fs
cli
lods
lds
add
aas
add
push
fadds
sbb
ljmp
inc
sub
in
mov
add
add
add
clc
data16
dec
jo
jmp
jbe
daa
mov
dec
mov
mulb
rcll
xchg
mov
ficoms
pop
imul
adc
mov
push
insb
mov
pop
lcall
adc
cmpl
add
sarl
roll
cmp
push
xor
jmp
in
or
jge
in
pop
add
scas
and
in
mov
pop
loop
mov
sarl
pop
les
adc
repz
cmp
aam
sub
leave
movb
syscall
fs
aas
xchg
cmp
dec
jp
lds
sub
or
and
add
idivb
lods
xchg
mov
push
mov
mov
in
aas
jo
dec
inc
and
fiaddl
cmp
adc
iret
insb
imul
jg
enter
mov
jmp
pop
cmp
dec
mov
cltd
mov
rcr
cmp
decb
sbb
iret
stos
movsb
mov
add
push
sub
cmp
test
xor
jmp
cmp
sbb
in
push
jbe
mov
not
add
pop
dec
movsb
sbb
sahf
cmp
cmp
in
sbb
adcl
adc
loope,pt
mov
push
test
gs
aad
or
sub
and
not
imul
or
les
ja
jno
mov
stos
rolb
aaa
lds
rclb
psubb
arpl
clc
jmp
push
movsl
and
in
test
stos
push
add
jge
test
mov
mov
gs
push
pop
lret
xchg
neg
sbb
mov
daa
mov
mov
addl
push
negb
inc
call
add
inc
int
inc
pop
fisubrs
mov
roll
jecxz,pt
movsb
add
mov
pop
add
rolb
repnz
or
sahf
cltd
and
mov
fisubrs
dec
leave
ffreep
inc
test
stos
arpl
cmc
rcrl
mov
add
ss
mov
cmpsb
pop
ret
aam
inc
push
inc
lret
roll
push
loop
fs
out
sbb
ljmp
popa
adc
inc
dec
or
arpl
sub
sahf
jo
jne
cmp
mov
sub
mov
mov
xor
jb
inc
mov
pusha
cwtl
ss
sub
mov
sti
push
lods
inc
mov
ret
pusha
movsl
fadds
pop
add
jo
dec
clc
adc
xchg
mov
mov
cmp
and
ffree
data16
cmpsl
jb
les
dec
mov
jmp
aam
jb
sbb
loop
pop
addl
add
repnz
je
lret
gs
sbb
sbb
or
es
pop
inc
push
cmpl
addl
fs
xor
and
add
test
jne
jl
stos
lahf
adc
pop
mov
adc
sbb
sarl
jmp
movsb
mov
fucomp
popf
aad
inc
push
fs
pop
jo
inc
ss
in
fadds
mov
cmp
mov
aas
outsb
mov
add
loop
sbb
int
shl
jge
popf
cmp
clc
add
xor
cmp
and
fs
enter
add
movsb
sbb
ja
mov
inc
test
cmp
add
lods
xchg
fdivl
daa
repz
add
mov
ja
arpl
bound
sar
adc
mov
sub
inc
inc
xor
cmpsl
dec
movsl
push
xchg
add
mov
outsl
mov
xchg
mov
je
cmp
add
pop
sub
fisttps
rcrb
sbb
aam
imul
iret
aam
aas
mov
sbb
icebp
or
test
and
rep
mov
add
add
mov
mov
andb
clc
movsl
cmc
jge
sub
call
idiv
fsts
add
ja
testb
mov
pusha
or
or
es
and
iret
loopne
shrl
int3
fs
cmp
fs
pop
fs
loop,pt
sbb
and
fcoms
add
mov
cli
add
sbb
stos
add
fs
inc
cmpsl
jne
test
xor
ja
loope
xchg
cld
addr16
mull
or
sub
xorl
pop
cs
mov
sbb
test
dec
lods
pop
jmp
jo
jge
cmc
mov
mov
cmp
in
fs
ficompl
inc
add
xchg
inc
add
pushf
push
nop
loop
les
sbb
data16
xchg
std
fcompl
mov
xchg
hlt
lods
arpl
dec
and
hlt
test
add
mov
mulb
fchs
mov
push
popf
pop
cmp
sbb
int
jmp
adc
add
mov
ficoms
repnz
and
jecxz
sub
popf
out
rorb
loopne
arpl
fbld
xorl
mov
pop
xchg
lock
popf
or
fwait
movsl
sbb
repz
mov
movsb
push
add
inc
out
lret
pushf
int3
cmc
xchg
push
clc
cmp
push
cmp
call
sbb
sub
das
dec
mov
dec
test
sbb
ljmp
pop
imul
sti
add
add
shrb
imul
pop
and
ljmp
int
push
fdiv
pusha
notb
popf
inc
filds
xchg
push
in
inc
imulb
shr
add
add
jbe
jecxz
lea
sahf
cmpsl
inc
test
jnp
jbe
cwtl
int
out
sahf
imull
shll
mov
add
sarb
rcll
add
stos
aas
fs
iret
or
push
pop
imulb
out
push
dec
cmc
data16
andl
sbb
aas
pushf
pop
dec
cmpsb
ljmp
mull
xor
ds
scas
or
sbb
add
popf
add
cmp
idivb
push
gs
daa
push
mov
pushf
cld
aad
mov
cmp
insb
cmp
fiadds
cmp
push
clc
or
repz
test
in
hlt
loope
cmp
pop
stc
stos
inc
in
adc
es
cmp
addr16
mov
mov
add
or
dec
pushf
data16
mov
cmp
adc
es
enter
push
xchg
loope
es
fdivrs
andb
sub
pop
imulb
outsb
in
out
popa
jg
roll
test
mov
fs
xorb
mov
test
cmpl
pop
dec
mov
sub
sub
in
test
scas
mov
fadd
xchg
cltd
in
out
out
rolb
jmp
fisubrs
sbb
inc
add
in
and
fs
add
add
in
cmp
fidivl
divb
add
fwait
mov
cmp
cmp
and
in
mov
cli
lods
pop
mov
xchg
mov
imulb
push
rorl
icebp
sbb
sbb
sub
imul
adc
pop
dec
push
jne
add
je
frstor
fs
lahf
push
negl
test
cmc
mov
popa
imul
loope
out
movsl
stos
idiv
rcll
cltd
rcrb
push
push
cmp
push
fmull
cld
mov
sub
imul
add
pop
push
adc
jno
leave
xor
pop
das
ret
ret
or
xor
adc
rcrb
pop
out
enter
pop
lret
repz
int
xor
jecxz
in
bound
mov
add
pop
rolb
sub
cmp
daa
mov
shrb
ds
je
sub
push
stc
or
mov
enter
mov
fs
fnstenv
std
cmc
or
inc
jnp
push
push
aaa
push
scas
outsl
pushf
sbb
inc
sub
gs
xor
rolb
scas
or
add
pushf
es
ret
int
fcoml
testb
movb
xor
movsb
sub
je
inc
mov
cmp
inc
pop
je
cmpsb
or
in
mull
mov
iret
mov
or
adc
sti
mov
mov
pop
loop
mov
stc
cli
das
sar
inc
add
push
dec
mov
mov
es
inc
or
xchg
cmp
mov
and
pop
fdivl
ds
loopne
mov
xchg
mov
arpl
mov
addr16
dec
pop
add
cmc
inc
jecxz
sbb
icebp
adc
push
cmp
lock
push
pusha
jmp
dec
push
cmc
jp
insb
add
add
shll
cli
gs
push
into
adc
inc
jg
popf
stc
jmp
mov
std
int
pusha
sub
or
insb
lds
testl
movsl
movsl
add
js
dec
stc
fldenv
mov
lock
push
or
cmpsb
inc
or
dec
pop
jle
push
decl
adc
xchg
incl
fsubs
mov
and
cmp
adc
loopne
jle
je
lods
fldenv
jg
std
hlt
add
add
adc
mov
data16
xor
mov
int3
jae
add
mov
mov
loope
lret
cmc
inc
dec
jl
data16
mov
hlt
sub
clc
int
sti
dec
addb
mov
push
inc
daa
test
shlb
cmp
lret
mov
pop
clc
pushf
loopne
sub
movb
sub
and
rclb
negb
cmp
jp
addr16
add
jge
jno
fs
push
xor
leave
test
in
stc
sti
into
aam
mov
mov
or
pop
fwait
push
std
cmp
or
push
xchg
cmc
cwtl
andl
xor
xor
add
inc
mov
nop
pop
icebp
arpl
aas
pusha
ret
sub
xchg
insl
fdivrs
lods
fstps
mov
fucom
inc
gs
sbb
popf
jl
pop
lock
sub
inc
shlb
test
add
sbb
ljmp
or
mov
add
loop
jno
jle
add
dec
test
inc
test
test
shlb
pop
mov
push
mov
push
arpl
xor
push
mov
insl
mov
sahf
outsb
addr16
out
aas
jbe
add
gs
hlt
fstps
sarb
xor
ret
aam
ret
in
sbbl
into
imul
jp
sahf
sbb
jp
adc
mov
cld
pop
js
dec
iret
pop
add
outsb
aaa
inc
in
or
sti
push
pop
jne
mov
neg
les
cmp
inc
push
cmpsb
arpl
push
data16
cmp
inc
xor
insl
adc
inc
xor
and
sub
andl
pop
cs
pop
sub
push
pop
ja
in
lcall
mov
jnp
loopne
fistl
pop
inc
out
inc
dec
sti
pop
mov
std
xchg
and
or
ds
and
pcmpgtb
data16
lds
mov
push
dec
cld
adc
ja
push
sbb
divl
xchg
std
lret
inc
int
sbb
aas
push
lahf
add
movsb
rcrb
pop
subl
mov
dec
and
pop
ja
fdivr
in
jb
lret
mov
pop
cs
fsubrp
sub
and
sub
out
ds
andb
add
data16
pusha
mov
test
addr16
xchg
call
pop
add
sti
jmp
mov
ficoms
mov
icebp
int3
stos
addb
mov
jns
lock
enter
and
dec
shll
icebp
add
stos
cmp
mov
mov
ds
aas
aas
int3
push
lods
or
fiaddl
or
add
sbb
ds
popa
sahf
sti
push
lret
inc
xchg
add
out
icebp
cmp
sub
or
shl
and
imul
sbb
add
or
lock
je
jl
dec
sub
jne
inc
lret
in
and
int
sub
dec
pop
pusha
sub
cmc
mov
add
mull
clc
jne
sbb
push
pop
add
sbb
mov
and
add
call
sti
rol
sub
push
fprem1
sub
popf
cmpsb
inc
mov
ds
fwait
jbe
push
ret
stc
mov
ret
and
cltd
enter
fiadds
cltd
into
xchg
and
movsl
add
roll
jne
nop
enter
scas
cmc
push
fmulp
mov
repz
div
mov
pop
popa
lds
popf
jno
add
das
add
xchg
jo
stc
sub
push
outsl
in
pop
pop
jmp
aas
and
cmp
movsl
sbb
sub
add
mov
push
or
jo
cmp
push
testb
ds
lods
data16
arpl
xchg
movsb
fistps
outsb
xchg
pop
cmp
int3
mov
sbb
lcall
adc
fs
or
popf
dec
mov
and
xchg
fstpl
aad
mov
fs
cmp
cmp
xor
cmp
popa
xor
dec
std
subb
and
sbb
jns
cmp
inc
mov
jp
test
pop
fs
mov
sbb
gs
stos
cmpsb
add
mov
or
lock
sub
add
inc
inc
mov
repnz
xchg
movsl
mulb
call
js
lret
jns
xlat
mov
ret
loopne
adc
sbb
mov
and
hlt
test
xchg
scas
andb
sbb
test
jg
adc
test
loopne
bound
mov
or
mov
mov
pop
fiadds
pop
xchg
mov
fildl
lret
jl
inc
repnz
fcmovnbe
cmc
std
adc
repz
and
adcl
pop
hlt
jge
addr16
add
mov
push
pmullw
lods
jnp
add
mov
xor
add
add
icebp
mov
call
dec
data16
and
add
xchg
cmp
xchg
inc
fadds
out
imul
popa
lock
xchg
aam
int3
or
adc
inc
add
ds
hlt
ret
adc
mov
aad
mov
mov
mov
mov
push
imul
mov
subb
adc
popf
test
mov
sbb
mov
insb
fstpl
push
loop
test
test
test
and
imull
sub
rclb
jmp
add
inc
cltd
mov
push
xchg
jg
arpl
mov
and
mov
and
lods
add
das
stos
inc
pop
popf
fstpt
push
cmc
mov
je
call
pop
sbb
mov
or
mov
xchg
push
stc
and
add
add
push
out
add
dec
test
jbe
test
xor
arpl
pop
xor
mov
mov
adc
scas
xchg
push
icebp
ret
cmc
mov
enter
lods
xor
lds
sub
lahf
scas
sahf
xor
aaa
fsts
lea
add
xchg
icebp
push
movsb
cmpsl
jbe
movsl
fwait
cmpsl
push
mov
js
fstl
ss
popa
in
es
sbbl
movsb
jl
das
push
lret
int3
sub
mov
insl
shlb
mov
int3
and
sbb
ret
pop
add
lods
pusha
popf
jae
push
push
jge
inc
ljmp
add
or
repnz
scas
movsb
int
fdivrs
or
add
xor
push
in
js
pop
fs
mov
mov
mov
mov
mov
sub
hlt
inc
pop
sbb
adc
jb
fbld
pop
xchg
sub
aaa
test
pop
inc
cmp
icebp
call
add
inc
adc
outsb
pushw
mov
scas
cmp
xor
push
xor
inc
mov
inc
aas
test
add
xchg
or
jns
inc
shl
push
test
inc
aam
dec
add
dec
add
shrl
inc
pop
popf
fcomi
faddl
popa
lods
mov
pop
addl
or
xor
add
push
and
xchg
push
mov
sbb
or
pop
or
cmpb
insl
fisubl
cmp
fs
outsb
or
add
in
or
jnp
leave
xchg
push
movsb
fsubs
dec
insl
or
cmpsb
jbe
aam
sub
loop
adcl
test
loope
repnz
andb
adc
iret
mov
pop
push
mov
test
dec
pop
aam
xchg
aaa
stc
iret
je
inc
and
sbb
enter
push
inc
fwait
testb
xchg
cmp
adc
jnp
inc
push
dec
adc
pop
shlb
subl
ficompl
scas
loopne
cmp
dec
movsb
cmp
ret
iret
fmuls
xor
imul
loope
fidivl
lds
ss
pop
fwait
les
out
xor
gs
xor
aad
sbb
push
add
inc
jecxz
sub
sub
fnstenv
mov
stc
sub
scas
pop
aam
add
inc
fwait
icebp
mov
xor
aam
add
stos
aas
mov
movsb
xchg
popa
sahf
dec
fs
add
iret
loope
mov
and
push
enter
mov
xor
inc
test
jnp
shr
add
cmp
mov
outsl
ja
inc
lods
incl
dec
push
or
pusha
add
sub
cli
inc
or
in
data16
fs
lods
outsb
mov
inc
inc
jmp
xlat
cltd
adc
outsl
dec
sahf
or
mov
add
repnz
imul
mov
adc
popw
shrl
and
addb
lods
mov
loopne
hlt
int
and
add
test
leave
fs
fs
mov
outsb
into
dec
fs
in
inc
inc
jecxz
popf
andb
xor
jbe
sti
flds
sbbl
mov
dec
sbb
inc
mov
xchg
dec
ret
and
stc
gs
and
xchg
inc
cltd
dec
aad
pop
and
into
jl
in
pop
ret
aad
loope
leave
add
jbe
or
cli
push
sahf
add
lahf
cmp
testb
jl
xchg
mov
cld
jg
mov
mov
addb
in
test
imul
jge
push
add
sub
add
mov
push
mov
fmull
jge
add
clc
test
out
stc
movsb
cmp
imulb
cld
rorl
mov
loope
in
adc
bound
imul
and
push
pusha
pop
in
add
pop
out
fnsave
rorl
outsb
xchg
rclb
lcall
jg
push
add
xchg
fisubl
sti
inc
addl
mov
or
lahf
sub
pop
movsl
or
adc
testl
xchg
negb
flds
inc
jle
adc
push
xor
and
dec
dec
rolb
enter
pop
add
cmp
xchg
jnp
test
negb
adc
les
ds
test
adc
incb
xchg
fdivr
cmc
lods
outsb
xor
fildll
pusha
stos
call
daa
adc
ret
mov
pop
mov
mov
or
ljmp
int3
inc
adc
clc
int3
test
xlat
scas
addr16
xor
ja
xor
in
sbb
mov
inc
sbb
ja
mov
aas
add
mov
arpl
popf
push
push
xor
adc
xor
mov
lods
lcall
dec
xor
push
inc
scas
lods
inc
shl
xor
jae
mov
bnd
fldl
testb
call
inc
xchg
or
movb
jno
jg
dec
imul
push
jge
cmovp
cmpxchg
jne
mov
ja
dec
test
stos
fs
jp
push
adc
sbb
pop
pop
popa
into
sbb
add
mov
sbb
orl
xchg
movsb
aam
fs
xchg
xor
pop
add
lahf
cmp
lods
cmc
cmp
sbb
lods
mov
iret
inc
sbb
clc
andl
pop
inc
gs
int
jmp
jl
cli
pop
xchg
adc
iret
test
mov
pop
int3
out
jno
mov
ljmp
rcrb
aam
cli
test
or
push
fldl
and
dec
add
ss
shl
cmp
rcl
pop
inc
call
sub
pop
dec
add
aad
int
dec
or
imul
notl
mov
idivb
aas
imul
loop
dec
mov
push
jmp
and
lahf
and
push
out
mov
ret
mov
pop
popa
lret
add
stos
movsb
add
cmp
icebp
iret
push
rcr
mov
and
sub
mov
cli
and
add
gs
daa
iret
or
subb
adc
mov
sub
ds
fs
in
cmp
jno
xor
jbe,pt
inc
sti
call
dec
jne
dec
cmp
jmp
or
ljmp
adc
jae
pushf
idiv
add
cs
or
fs
pop
iret
push
out
daa
divb
popa
inc
shrl
in
imul
idiv
and
and
outsb
cmp
adc
repz
lock
add
jle
pop
shrl
cmc
pop
fwait
dec
test
xchg
test
popa
inc
sub
and
mov
out
pop
add
imul
div
daa
fildll
add
test
daa
adc
mov
cmp
test
push
mov
dec
add
repnz
push
pop
dec
add
push
fs
add
mov
pushf
xchg
mov
mov
cmc
xchg
sbb
imul
mov
repz
lea
arpl
insb
adc
roll
cmp
jb
pop
outsb
pop
jecxz
cmpsb
sbbl
xor
idiv
push
iret
sbb
fs
or
xchg
pop
push
repnz
fdecstp
fs
pop
fs
scas
add
cli
pop
aaa
xchg
outsb
imul
cmpsb
cmp
out
rorb
js
cmp
shlb
push
fiaddl
arpl
test
je
inc
sub
xor
popa
xor
or
add
jo
hlt
dec
pop
lds
mov
cmp
add
scas
pop
je
fs
and
lret
enter
cltd
sub
and
inc
pop
lret
inc
xor
push
imul
pop
add
pop
pop
pop
push
fwait
aas
sti
push
outsb
das
das
pop
cli
pop
movl
out
adc
cmp
add
lea
adc
push
dec
testb
jne
add
sbb
lret
adc
fsub
icebp
sbbl
add
xchg
fcoms
stc
mov
xchg
test
movsl
fnstcw
sti
cmp
sahf
gs
sbb
mov
pop
lret
in
jl
pusha
add
xor
fmuls
adc
mov
in
push
sti
lods
add
fmuls
imul
jns
fs
adc
je
and
roll
push
lods
xchg
adc
sbb
popa
pop
sbb
add
sbb
xchg
fs
mov
jmp
sub
sarl
inc
xor
cmp
add
dec
fs
imul
shrl
inc
leave
jne
int
push
divb
scas
fimull
push
or
insl
imul
push
mov
std
sub
imul
push
je
negl
add
inc
dec
int3
out
push
xchg
aad
mov
sub
lds
call
ljmp
fs
repnz
aam
inc
in
adc
test
fildll
les
shr
push
arpl
mov
cwtl
in
cmp
adc
test
lahf
les
lods
test
ret
pop
enter
test
adc
fiaddl
xchg
pop
cltd
insb
cmc
pop
cmp
test
scas
repz
dec
out
add
in
push
mov
mov
out
dec
ds
pop
notb
js
notb
push
dec
mov
add
or
inc
sti
gs
add
daa
test
imul
add
cld
in
cmp
loopne
scas
movups
fwait
lret
jbe
fildll
sub
inc
insb
mov
je
add
pop
arpl
push
aas
movsl
hlt
and
aad
bound
jmp
fs
adc
push
test
cmpsl
dec
into
jb
and
jbe
out
inc
pop
rolb
popa
dec
movsl
outsb
mov
push
cmpsl
daa
insl
adc
pop
xor
adc
fdivrs
push
mov
data16
gs
aas
push
lods
dec
repnz
test
add
inc
andl
pusha
rep
or
sub
mov
fistps
mov
repnz
std
cmc
jbe
or
sarb
dec
jmp
daa
fnstcw
sbb
sahf
scas
ljmp
incl
fldcw
test
psrlw
sbb
in
mov
mov
popa
fwait
scas
out
add
setno
xor
dec
pop
inc
or
enter
fidivs
sbb
cmp
rorb
test
sub
xor
pop
and
sub
add
mov
ds
in
insl
mov
daa
sub
inc
sub
js,pt
cmpsl
jb
inc
jg
int
addl
fs
jecxz
gs
push
push
add
ss
cmc
ljmp
dec
popf
dec
fsubl
int3
popa
into
push
lahf
mov
push
test
ds
pop
iret
add
sti
mov
shl
push
add
aad
push
lods
data16
loope
jno
hlt
or
sub
minps
adc
dec
mov
and
sub
inc
imul
mov
push
fs
std
push
test
or
inc
pop
scas
test
test
andb
sub
mov
mov
inc
hlt
push
sti
pop
mov
add
subl
add
xchg
push
or
iret
mov
push
out
mull
inc
movsb
aaa
xchg
int
adc
inc
gs
mov
add
ret
mov
paddb
add
xchg
mov
jecxz
mov
decl
or
xchg
add
pop
push
fimull
pusha
mov
pop
sub
sub
fcompl
sbb
lea
cmc
adc
rcrb
pop
aad
add
mov
std
into
push
iret
adc
leave
insb
bound
pop
push
jmp
add
adc
lret
fs
fst
fdivl
cwtl
adc
add
std
clc
out
mov
xor
adc
and
rcl
add
pushl
push
inc
cmc
setg
xchg
stos
in
lahf
jmp
mov
xlat
push
push
call
movsl
nop
mov
stc
test
pop
push
cmp
inc
add
ds
sar
dec
add
in
es
in
in
xchg
dec
dec
mulb
data16
addb
testb
xchg
adc
data16
dec
and
pop
js
dec
stc
aaa
adc
mov
testb
pop
xor
xchg
adc
and
ja
div
pop
out
cld
dec
pushf
and
leave
mov
adc
fstp
and
outsl
aam
repnz
out
mov
cs
mov
add
push
ds
push
std
outsl
iret
adc
dec
outsl
add
lods
mov
popa
data16
popa
mov
sbb
in
jne
inc
or
xor
adc
mov
dec
pop
test
cld
xor
loopne
xchg
int
pushf
push
mov
xchg
pop
int3
in
mov
inc
push
jmp
inc
add
jecxz
fldenv
jmp
out
dec
in
xchg
out
pushf
mov
mov
mulb
xchg
xchg
pop
enter
test
or
adc
or
in
daa
add
mov
jbe
cmc
testb
imul
cltd
jb
inc
mov
mov
fs
out
dec
lods
dec
stos
mov
mov
scas
popa
and
xor
or
or
les
je
test
xor
enter
cmp
popf
mov
xlat
insb
testl
bound
loopne
stc
mov
cmp
orps
jne
and
sbb
add
enter
fs
dec
in
xchg
pusha
cmp
pop
mov
dec
or
dec
and
ret
adc
stos
and
repz
jmp
lea
mov
test
push
aam
cltd
mov
fs
xchg
pop
fadds
dec
push
es
adc
bound
push
mov
cmp
adc
mov
ljmp
mov
pop
xor
push
dec
add
iret
push
rorb
jne
faddp
out
jns
add
loope
adc
xchg
add
jne
std
xor
mov
mov
add
sahf
shl
push
jl
divb
add
and
xchg
add
push
andb
mov
dec
imul
iret
mov
dec
loope
mov
jge
push
dec
cmc
add
test
lcall
sub
lret
fnstcw
adc
or
pop
add
add
sbb
push
gs
rcll
and
insb
pusha
cmpsb
mov
cld
cmc
cmp
xchg
cmpb
das
xchg
rolb
inc
aaa
push
pop
jle
aad
mul
leave
sbb
jne
mov
cmp
sub
arpl
xor
ljmp
cmc
pop
push
add
insb
dec
bound
mov
cltd
mov
mov
imulb
ja
imul
xlat
jmp
xchg
add
test
cli
rcrl
and
mov
out
mov
pop
sbb
lret
jo
add
pusha
mov
xlat
fs
mov
pop
fistl
incb
lods
sbb
in
jmp
mov
mov
les
mov
sbb
outsb
fimuls
jns
push
push
sti
xor
mov
fs
fs
mov
add
and
cmc
sbb
icebp
out
mov
mov
hlt
sub
and
imul
push
mov
fidivs
inc
int3
add
inc
jnp
or
jecxz
cmc
rolb
repz
cld
mov
pop
add
inc
sbb
mov
pop
negl
push
std
mov
add
daa
mov
pop
push
dec
sbb
sbb
movl
insb
mov
pop
pop
mov
xlat
mov
pop
pop
iret
scas
mov
xchg
or
psadbw
fidivs
push
idivb
out
shl
mov
cmp
testl
ror
lods
cmp
mov
add
push
mov
fsubs
add
and
sbb
frstpm(287
scas
xlat
cmp
sbb
or
mov
ret
cmp
adc
fwait
aad
test
rol
movsb
add
loopne
add
or
movl
or
xchg
in
mov
or
push
loopne
fisttpll
dec
pcmpgtw
loopne
add
sbb
add
mov
inc
pushf
mov
jmp
add
ljmp
insb
jmp
imul
in
xor
js
cli
pusha
pop
sub
clc
fs
out
jbe
add
sbb
cmp
pop
imul
shll
cmp
xor
leave
adc
rol
mov
mov
jae
xchg
imul
cmpsb
shl
imul
in
popa
shrb
jno
or
cmpsb
inc
jecxz
mov
mov
shll
lods
cmc
aaa
cmp
or
mov
movsl
cld
popf
call
or
adc
repnz
dec
and
xchg
or
std
adc
lret
int3
pop
and
or
push
jno
outsl
add
push
or
dec
aad
jle
scas
rcll
or
lock
in
mov
xchg
push
sahf
push
or
sub
mov
mov
inc
or
add
cwtl
adc
dec
xchg
sub
popf
cld
and
insb
jmp
mov
push
hlt
sahf
fidivrl
movzbl
inc
mov
out
dec
sbb
mov
sbb
adc
mov
mov
xchg
adc
add
adc
dec
xchg
testb
jb
push
xchg
xor
adc
pop
push
push
movsl
popa
popf
xchg
pop
xchg
cltd
ss
out
fnstcw
inc
add
mov
dec
mov
push
bound
popa
push
icebp
outsl
xor
and
cmp
loopne
xorb
push
idivl
notl
sub
popa
hlt
add
xor
stc
fs
into
sbb
xor
ret
mov
cmp
fs
or
mov
outsl
sub
addr16
pop
dec
ret
mov
jo
popa
out
add
inc
dec
stos
add
push
xchg
testb
add
sub
mov
rclb
xchg
jp
add
dec
mov
push
mov
jmp
or
inc
add
pop
in
std
jle
incl
and
mov
add
popa
and
jmp
jae
add
fs
push
gs
sbb
dec
jb
inc
mov
aad
adc
testb
sub
add
push
stc
subl
ss
or
sbb
add
les
popf
sbb
in
lds
add
cmp
loopne
out
mov
cltd
add
imul
adc
fidivrs
mov
cmpsb
pop
sbb
sub
popa
jno
xchg
push
adc
jp
sbb
test
bound
inc
add
and
sti
jle
push
outsl
add
or
cs
subb
or
sahf
mov
push
shll
outsl
negb
lock
sbb
xchg
jo
xor
push
orl
or
adc
xor
xchg
in
sbb
adc
lds
pop
sbb
xor
cmc
or
jnp
inc
pop
or
pop
inc
add
jne
mov
and
and
xchg
aas
and
xor
popa
sbb
cltd
and
dec
push
jecxz
ljmp
inc
insb
push
xor
incb
xchg
imulb
stos
test
lret
in
pop
push
push
and
filds
sub
sub
push
xchg
xor
sbb
jno
jecxz
cltd
test
sti
lods
mov
fnstcw
sbb
cmp
and
and
inc
inc
rcr
mulb
add
daa
popa
add
fs
xor
adc
cwtl
std
stc
cmpsb
and
aas
jno
or
push
pop
mov
and
jns
dec
push
dec
imul
mov
stos
dec
std
imul
mov
mov
movlps
push
pop
iret
sub
and
aas
jmp
mov
jmp
mov
dec
xor
push
push
aad
out
xchg
gs
insb
scas
add
xor
inc
mov
jne
out
xlat
pop
repnz
cmpsl
mov
inc
lds
cmp
fs
inc
dec
ret
pusha
cmp
pusha
test
add
fidivl
jg
add
fidivrl
test
ret
mov
or
aam
jo
in
or
ss
insb
jmp
mov
shr
jge
shrl
dec
aam
xor
cltd
push
add
sub
stc
icebp
add
push
and
lcall
add
adc
adc
mov
icebp
lret
xlat
shll
push
iret
add
arpl
or
xchg
mov
add
or
cmpsb
lahf
adc
rcrl
mov
hlt
clc
js
mov
imul
adc
cmpsl
int
adc
cmc
and
xor
cmp
aad
dec
add
hlt
jno
sbbl
aad
in
movl
nop
add
pop
mov
sub
jle
int3
and
dec
push
popf
cmc
stos
pop
adc
inc
fs
ficomps
cmpsb
rcrl
decb
mov
call
jge
xchg
mov
add
sbb
dec
jbe
or
pop
fldt
dec
xchg
push
lds
dec
jmp
sbb
adc
jno
call
dec
fistl
jmp
out
and
int
clc
add
call
dec
xor
popa
dec
popa
int
test
ffreep
inc
or
test
ss
sarb
adc
sub
std
dec
sbb
clc
xchg
stc
xchg
out
pop
xor
dec
clc
bnd
lret
add
inc
cltd
and
fs
js
cmpsb
out
movsl
sub
mov
aad
in
daa
push
nop
orb
adc
pop
sub
dec
in
cld
mov
mov
inc
or
pop
fwait
add
iret
mov
jbe
push
cmc
adc
cmp
add
out
fs
inc
and
int
add
cmp
les
xchg
pop
daa
sbb
addb
mov
push
in
insl
popf
adc
lcall
leave
dec
jmp
movsl
vxorps
dec
repnz
mov
sub
cli
dec
jae
xor
flds
jl
cwtl
push
fs
orl
push
leave
popa
sbb
es
mov
in
arpl
xlat
xor
mov
fsub
add
cmpsb
add
mov
pop
pop
pop
fisubl
int
xor
les
popf
into
es
inc
nop
jns
jle
add
sub
adc
lock
mov
rorb
push
loop
adc
and
add
and
inc
in
or
add
jecxz
jp
dec
shll
iret
dec
insl
dec
add
arpl
mov
add
cmc
out
in
cwtl
pop
push
jbe
popa
adc
add
adc
insb
lock
and
inc
das
xchg
shr
fldcw
cmp
es
dec
mov
mov
lea
add
fsubrl
mov
pop
das
inc
add
mov
leave
push
out
push
and
mov
xchg
cld
add
adc
movl
add
mov
inc
add
xchg
test
xchg
push
pop
sar
add
mov
sub
pop
imulb
dec
subl
add
cmp
cmp
xor
test
das
add
cmc
adc
adc
out
or
repnz
lret
pop
mov
add
pop
fdivl
inc
fs
stos
mov
pop
cmp
or
push
mov
hlt
xor
jns
das
imulb
mov
stos
insl
dec
sub
insb
inc
decb
xchg
mov
dec
movsb
mov
sbb
iret
mov
cmp
push
cwtl
inc
jmp
cld
add
fmull
out
fs
xchg
jno
or
lahf
rol
add
pop
adc
or
sarl
mov
sahf
pop
outsb
or
xor
mov
sbb
sub
fsubs
and
pop
movsb
lret
arpl
add
test
sub
roll
adc
add
push
int
add
push
cltd
pop
xchg
adc
pop
dec
clc
sub
or
stos
jp
movsb
shl
ret
pop
xchg
add
fs
xchg
movsb
popf
push
movsl
inc
into
in
inc
repz
rol
xor
repz
popa
jno
gs
add
pop
jle
mov
add
aad
add
scas
aaa
int
nop
mov
in
fdiv
mov
imul
pop
add
mov
mov
mov
push
mov
insb
sbb
cmpsl
push
dec
cltd
cmp
and
insb
or
insl
imul
dec
push
inc
imul
sahf
sub
ds
daa
cmpb
cmc
cli
shlb
inc
or
xor
mov
and
xor
xchg
pop
fcmovb
pop
cmp
add
dec
jl
sub
into
lret
js
in
stc
add
sar
add
pop
adc
cmpsb
data16
fs
jae
cld
fdivs
clc
fildl
imull
jbe
or
icebp
dec
inc
arpl
xchg
popa
mov
jb
sbb
not
cltd
mov
fcompl
jne
sub
shlb
stos
insl
call
pop
jle
je
jns
pop
in
loope
lret
popa
cwtl
xor
jmp
sub
xchg
cmc
fs
mov
mov
inc
jp
or
call
stc
or
sbb
add
daa
push
dec
pop
popa
sub
xchg
add
rclb
pop
adcb
je
idivl
arpl
test
pop
std
inc
comiss
jb
idivb
sub
das
sub
movsl
add
ja
shrb
insb
mov
js
jo
insb
pop
sbb
jmp
fstl
adc
pop
adc
or
loop
dec
bound
pop
lock
mov
shrl
mov
nop
and
outsl
aaa
out
cwtl
mov
nop
push
jle
repnz
fldl
jnp
cmp
jne
dec
bound
inc
push
adc
cmp
in
inc
push
cmc
int
cmp
stc
push
loop
jnp
inc
imul
ret
inc
xchg
add
dec
push
and
bound
repnz
add
in
je
add
rolb
jbe
push
or
fmuls
mov
push
pop
and
add
stos
out
xchg
stos
mov
popf
imul
push
mov
push
imul
divl
add
cmp
fimull
inc
int
in
dec
incb
jecxz
mov
outsb
push
notb
jg
xchg
test
push
push
jae
aas
sub
pop
repnz
inc
ljmp
xor
mov
cwtl
movsb
push
dec
out
dec
sub
cmp
addl
mov
jae
sti
popf
xchg
xlat
das
push
adc
xchg
lods
mov
and
sub
sub
add
xor
and
popf
in
mov
add
xchg
rcl
sbb
movsb
ljmp
popa
inc
dec
push
enter
mov
enter
sub
adc
cli
mov
fiaddl
xchg
add
cmp
add
notb
fmul
xchg
add
insb
into
ds
adc
enter
popa
sbb
ficoml
sbb
push
inc
out
sti
out
iret
movsl
testb
sbb
mov
add
xorb
fs
ja
xchg
push
jo
iret
add
cmp
jnp
jnp
cld
mov
mov
push
sbb
shrb
loopne
pop
lods
in
jns
popa
in
das
test
pop
and
in
cli
dec
sbb
cmpsl
xchg
cs
bnd
push
fucompp
or
cwtl
shll
insl
jge
mov
jns
call
idivb
repnz
sbb
fst
and
dec
mov
add
popa
add
adc
jo
inc
xor
ret
sub
add
test
aam
jb
xchg
arpl
xor
push
sbb
in
aad
jbe
andl
lods
and
xor
incl
int
and
andb
movsb
cmc
gs
pop
xorb
in
and
or
push
sbb
cmp
data16
repnz
and
aad
push
test
or
sbb
lds
inc
jbe
mov
popf
negb
pop
aam
jbe
push
fldl
mov
mov
inc
pop
shrl
push
lods
jmp
pop
stos
mov
sbb
cmc
mov
jecxz
lret
movsl
enter
sbb
xchg
xchg
push
popl
jo
add
loope
sbb
xchg
jmp
dec
lcall
jb
mov
or
xchg
pop
lcall
cmp
mov
jg
fbld
inc
insb
and
dec
in
dec
ret
out
test
test
jnp
jmp
add
jle
andl
sahf
xor
inc
or
xchg
mov
xchg
out
shr
repz
aaa
cli
es
pop
add
add
jecxz
cmp
dec
jns
xor
xchg
callw
or
push
imul
pushl
shl
inc
test
cmp
jle
jl
sub
stc
cmp
lea
xchg
out
in
mov
inc
daa
mov
push
and
insb
popf
adc
out
mov
rorl
add
fcmovnu
aas
mov
sarb
add
mov
or
jne
inc
cs
sub
push
mulb
inc
jns
adc
fisttps
out
xchg
sub
xchg
in
je
lcall
sti
jl
mov
in
and
add
pop
add
sub
cld
frstor
add
inc
xor
aaa
in
and
pop
fwait
inc
das
pusha
int3
xor
push
data16
adc
in
fs
mov
inc
push
fdivp
popa
and
xchg
sbb
jns
mov
cwtl
mov
leave
dec
xchg
outsb
loope
cmp
pop
add
cmp
aas
ss
std
cmc
popf
repz
jl
xor
shr
cmc
sub
mov
fdivr
pusha
jge
std
mov
add
sub
iret
mov
lea
cltd
jl
lret
js
in
icebp
aad
add
test
xchg
xchg
shlb
cmp
or
inc
aaa
pop
adc
loop
pusha
cmc
mov
mov
add
jbe
push
aas
rorl
fnstsw
mov
xchg
sarb
and
add
adc
in
test
or
or
je
xor
cmc
pop
sub
sti
adc
lods
insb
jbe
xor
add
in
and
punpckhdq
xor
into
out
cmc
add
add
pop
xchg
jg
add
adc
aaa
pop
dec
sub
cmp
push
sub
and
cmp
xchg
call
fimull
scas
xchg
sbb
cmp
btr
and
cmp
push
sbb
pop
xor
cmp
ret
flds
lret
xchg
ret
testb
out
imul
fs
dec
shl
and
add
dec
nop
pop
testb
pop
lahf
mov
pop
aaa
add
inc
and
mov
lock
push
cli
fidivrl
pop
mov
pusha
and
and
fs
xchg
aam
cld
mov
mov
push
sarl
in
or
pop
jns
int
push
idivb
loopne
lahf
popf
add
cmp
cld
inc
push
mov
xor
add
imul
lret
jbe
idivl
in
add
mov
push
popa
and
jno
xchg
dec
test
pushl
inc
test
and
mov
lds
or
sub
add
rorl
push
mov
and
pop
push
mov
jo
aas
xlat
jecxz
or
cmpb
test
out
ret
sti
cmp
pop
or
test
and
inc
xchg
push
add
dec
add
mov
dec
negb
les
aas
mov
ds
jae
mov
adc
rol
jmp
repnz
insb
mov
or
add
ljmp
add
or
inc
jo
test
das
or
stc
sub
sbb
sbb
xchg
inc
inc
xchg
mov
mov
sbb
xor
xor
mov
jbe
sahf
testb
push
dec
jne
add
and
aad
in
add
sbb
sub
add
jbe
xor
cmp
or
aad
adc
mov
and
add
add
jb
hlt
jl
push
test
push
pop
popa
or
adc
dec
aaa
push
pop
icebp
test
jbe
push
stc
loop
addl
dec
and
dec
sub
xchg
adc
adc
add
mov
push
popa
mov
fldl
jmp
test
push
loopne
out
aam
add
sub
jne
repnz
es
mov
or
hlt
orl
lods
in
fwait
mov
jns
insb
jne
icebp
pushf
xchg
xor
dec
push
pop
add
pushf
sbb
cltd
mov
adc
int
sbb
testb
push
decb
push
add
cmc
push
sbb
xchg
add
add
add
sti
movsl
fs
movl
ss
imul
cld
negl
mov
and
mov
mov
loopne
dec
jne
push
fs
cmpsl
imul
push
push
ffree
test
loop
or
cmp
and
mov
add
test
dec
inc
push
imul
aam
cmc
add
cmp
mov
mov
add
in
aad
jbe
cmpl
cwtl
data16
xor
cmp
or
stos
clc
aam
fs
dec
pop
adc
ljmp
into
std
lock
je
repnz
add
mull
xchg
iret
test
jne
sbb
adc
out
das
out
mov
mov
loope
icebp
and
inc
xchg
fbstp
addl
mov
xor
push
das
jae
sbb
lds
mov
repz
scas
movsb
pop
mov
mov
inc
mov
cmpsb
lds
into
jl
push
add
insb
dec
sub
inc
pusha
jb
push
hlt
lods
mov
lods
inc
rolb
add
dec
and
jb
xor
arpl
sub
scas
adc
hlt
sarl
sub
movsl
fcomps
mov
push
ljmp
hlt
sbb
jmp
in
cld
mov
push
or
and
iret
add
or
inc
add
sbb
in
out
lods
aad
les
sbb
cwtl
inc
test
pop
push
gs
stc
ss
test
sbb
popa
xor
xlat
push
jp
jne
dec
jbe
pop
inc
inc
xor
and
je
loop
pop
add
stos
jle
jb
retw
inc
cli
sarl
push
mov
mov
sbb
xchg
fs
into
pusha
ret
mov
out
sbb
jle
adc
insl
push
ss
fisubs
or
out
cmp
xlat
arpl
cli
jae
mov
mov
mov
daa
mov
mov
ss
sub
pushw
fwait
mov
sti
popa
test
sub
or
in
lock
cmp
fs
sbb
sub
shrb
add
ss
cmp
or
leave
loop
pushf
add
dec
aad
inc
cmp
xor
pop
pop
mov
pusha
fiaddl
xchg
or
iret
clc
add
stc
or
push
sti
push
mov
out
cmp
imul
in
ds
add
inc
or
sbb
mov
insl
fs
jecxz
lahf
inc
inc
popa
cs
out
add
cmp
loope
cmpsl
sub
cmc
jp
and
jl
add
adc
ljmp
orb
std
add
jle
xor
mov
data16
xchg
rorb
repz
cld
incl
call
xchg
loop
cmc
ja
sub
repnz
mov
hlt
negl
mov
adc
jb
adc
xor
js
pop
jns
push
adc
int
cmp
scas
xchg
ljmp
jle
fs
xor
pop
sti
adc
and
arpl
jo
orl
mov
add
pop
add
rolb
adc
ljmp
and
icebp
pop
push
orl
out
repz
add
xchg
push
mov
and
push
sar
daa
ror
ds
inc
push
pop
jno
repnz
jmp
cmp
shll
add
loope
sub
pop
test
cmp
xchg
mov
ja
push
inc
jecxz
and
cmp
sbb
sub
hlt
and
add
and
test
adc
jo
add
inc
adc
inc
jo
pushl
push
mov
fs
lret
push
ja
adc
in
add
push
pop
imulb
add
ljmp
dec
in
fs
mov
call
push
bound
cmp
push
shl
mov
arpl
lock
inc
ds
loopne
pop
leave
inc
add
fdivrl
dec
xchg
xchg
cmp
xor
aaa
rclb
test
in
pop
out
jge
lods
ror
or
pop
ds
and
xchg
mov
in
imul
jno
inc
in
push
and
arpl
xchg
insb
push
add
and
fcmovnb
pmullw
movsb
push
jbe
xchg
dec
mov
test
fdivs
vcvtsd2ss
or
jbe
sbb
xor
repz
and
mov
or
cmc
cwtl
repnz
jmp
test
in
into
sahf
add
add
mov
adc
insb
mov
cmpsb
add
mov
push
pop
mov
lea
inc
out
pop
cmp
push
and
sub
xor
and
inc
dec
cmpsb
fisttpl
add
xchg
pop
pop
fs
fnstsw
sbb
cs
mov
cmc
and
testb
push
into
cs
aad
dec
inc
in
popa
lods
addr16
jno
lea
aad
add
fadds
hlt
std
fs
xchg
push
movsb
mull
lock
gs
inc
popa
mov
rcll
mov
and
jne
inc
jg
xchg
loope
pop
jge
xchg
notb
rcr
repz
xor
or
cli
mov
cmp
movsl
xchg
xor
sbb
dec
adc
add
mov
cmp
sub
pop
push
or
or
sahf
add
ja
loope,pn
xor
in
popa
xchg
lret
add
jmp
pop
jg
push
iret
incb
mov
fnstenv
xor
push
push
add
pop
add
into
sti
fsubr
in
aam
lea
cmp
push
leave
xor
fs
insb
test
popa
xor
cmp
xor
rcrb
lds
jmp
inc
mov
xor
lock
or
imul
sarb
sbb
ret
add
add
sbb
or
inc
movzbl
imulb
lods
xchg
frstor
les
mov
inc
push
adc
add
dec
scas
ret
imul
dec
jbe
push
call
xor
add
in
ret
fs
ss
push
sbb
shrl
seta
sbb
adc
hlt
in
xor
mov
aas
addb
es
jle
testb
mov
mov
aaa
outsl
repz
into
stos
xchg
lods
mov
stos
loope
out
adc
xor
lcall
cmc
add
cmc
or
jl
sub
pusha
shr
mov
pop
mov
popa
shl
or
scas
je
pusha
and
add
aam
outsl
dec
and
or
add
and
jmp
cmc
add
sbb
sbb
call
push
ret
inc
loopne
add
bound
popl
stos
add
xchg
xchg
adc
push
pusha
jmp
cmpsb
movsb
test
cs
fcomip
sub
or
addb
lret
andb
scas
or
int
pusha
jnp
add
or
test
push
push
callw
dec
imul
mov
mov
add
and
sub
or
dec
ss
imul
dec
xchg
dec
outsb
mov
lcall
jg
sub
or
pop
shlb
scas
testl
incl
pushl
repnz
mov
subb
mov
ljmp
daa
mov
mulb
std
out
test
sbb
cld
push
xorb
and
add
add
mov
push
mov
sbbb
imul
mov
push
and
ret
inc
xor
sub
and
lock
mov
jnp
cmp
sbb
fwait
call
test
push
mov
push
cmp
xor
mov
adc
jo
fcmovnu
test
inc
neg
xchg
int
adc
push
cmp
pop
adc
int3
insl
xor
nop
fstl
sbb
add
adc
cmc
movsl
or
sub
es
dec
adc
add
test
adc
pusha
std
dec
jle
cltd
lea
push
jge
or
push
dec
add
push
movsl
xchg
fldenv
aam
imull
dec
add
xchg
pop
xor
push
sti
adc
lahf
xor
pop
xor
mov
cmc
repz
sarl
data16
pop
inc
lods
cmp
push
xor
stc
push
divb
or
push
gs
mov
fs
jmp
ljmp
gs
jecxz
in
cmc
xchg
add
cmp
add
stos
mov
xor
es
fucomi
jne
fnstenv
mov
and
pop
inc
test
les
adc
ja
aad
mov
movsl
sti
incb
inc
inc
loop
jmp
mov
push
rcll
sub
pop
pop
mov
push
pop
sahf
push
cltd
or
adc
in
push
sub
push
cmpsb
call
mov
add
or
and
and
aam
xlat
add
hlt
lcall
std
int3
movsb
add
sub
and
push
dec
jle
stos
icebp
in
inc
imul
movsl
mov
sahf
cmc
jmp
icebp
mov
add
out
das
addl
lods
xlat
stc
stc
mov
rorb
sbb
lds
and
dec
ljmp
neg
and
lcall
jle
jle
mov
data16
push
mov
mov
sbb
pop
dec
gs
add
incb
ffreep
mov
cmc
shlb
incl
stc
int3
btc
fldl
add
inc
imul
xlat
popa
repz
in
and
out
pop
sub
shl
es
cmc
das
xchg
stc
jle
lret
cmc
and
fs
stos
test
push
fadds
ret
mov
jbe
call
dec
testb
ja
push
ss
stc
jae
mov
xchg
fldcw
add
jle
sbb
add
cmpsl
not
lock
loope
testl
in
cmc
repnz
in
jbe
mov
mov
add
pushf
loop
cmc
xchg
inc
aad
int
and
jno
add
adc
adc
ja
js
mov
push
lods
and
aad
aad
out
add
andl
lcall
sbb
fcmovnbe
std
aad
mov
dec
add
pop
lods
xchg
adc
mov
loopne
add
ss
fildll
loope
sbb
xchg
fldl
leave
mov
fs
jmp
rolb
pop
jg
out
pop
or
jno
popa
scas
push
inc
scas
scas
sub
sbb
std
xchg
flds
lcall
sbb
cmpl
mov
sub
mov
pop
or
xchg
push
orb
add
cmpb
add
addb
or
setae
fnsave
shlb
icebp
inc
inc
sub
sbb
ss
add
popf
scas
or
je
in
mov
sti
xchg
test
insb
icebp
sbb
roll
and
jle
xchg
call
notb
pop
lods
add
jmp
cld
icebp
popf
inc
mov
mov
divb
adc
movsl
adc
mov
sub
mov
mov
sub
mov
je
cmp
aad
jp
mov
adc
enter
shl
lret
adc
popa
dec
push
mov
xor
mov
ss
out
jg
add
fimuls
or
jle
scas
cmc
push
mov
or
jle
mov
mov
inc
cmpsb
loop
loopne
arpl
lret
pusha
xor
add
imul
pop
sbb
ljmp
fwait
mov
stos
cmp
push
push
inc
int
mov
dec
insl
in
pop
sbb
sti
push
jg
loopne
pop
dec
sub
xlat
adc
cmp
and
jo
fs
out
fs
jns
mov
arpl
add
std
push
ficoms
xor
xchg
inc
push
adc
iret
adc
pop
aas
mov
fnstsw
and
adc
mov
sub
mov
loop
in
adc
out
jne
cmc
les
sub
pop
mov
mov
jle
clc
jne
or
shr
testb
xor
sub
xor
cmc
push
inc
lea
add
push
insb
jg
pusha
stos
shl
inc
popa
and
mov
xorl
dec
lock
fs
xor
push
movsb
push
jno
or
mov
imul
popa
pop
sar
popa
fucomip
movsl
inc
std
jmp
sbb
lret
jge
xor
inc
stos
pop
rcl
jne
daa
cmpsb
outsb
jmp
and
cld
mov
repz
xor
imul
jmp
and
inc
dec
and
std
int3
enter
lods
add
dec
je
adcb
push
lret
test
hlt
cmpsb
outsb
jecxz
mov
mov
pusha
xor
das
lcall
push
insb
imul
adc
cld
loope
add
in
pop
test
adc
mov
or
add
pop
push
ficoml
add
ret
ds
sahf
or
xchg
add
iret
fs
imul
ret
sbb
in
xor
repz
jnp
test
ret
jmp
clc
add
inc
test
fst
dec
dec
add
roll
in
and
orl
sub
inc
test
mov
std
mov
push
push
arpl
inc
mov
and
popa
int
div
or
adc
in
pop
leave
add
inc
or
mov
out
gs
jge
dec
add
in
mov
or
push
ljmp
insl
pushf
stc
jmp
in
xchg
mov
rcll
add
or
or
xor
fs
lods
sub
add
mov
shlb
decl
mov
lock
jns
aaa
cld
xor
push
fldl
mov
xor
scas
test
inc
dec
push
add
sti
mov
aaa
ss
jmp
add
ret
cmp
out
gs
jb
daa
xor
sbb
scas
jbe
or
ds
sarl
push
push
mov
arpl
add
pop
mov
adc
add
sahf
push
aaa
add
cltd
in
cmpsb
sti
push
push
rorl
mov
addr16
loop
mov
int
mov
js
addb
mov
stos
cmp
pushf
test
ss
and
cmp
ret
dec
xchg
mov
aad
sub
cmpsb
test
or
add
sbb
jne
adc
cmp
adc
inc
mov
mov
inc
mov
mov
int3
or
outsb
jns
cltd
cmp
add
xchg
lcall
roll
push
out
imul
inc
inc
xor
loope,pn
add
filds
sarl
sub
loop
imul
popf
arpl
or
mov
sub
add
ss
testb
orl
jae
iret
inc
js
jbe
repz
insb
add
inc
cmp
cli
sbb
pop
xchg
adc
fs
cli
mov
and
or
sbb
aad
lret
cmc
fldcw
mov
jne
add
adc
sbb
pusha
push
adc
popa
add
jno
int3
pop
fs
add
xor
fadds
and
jmp
jne
sbb
fwait
add
cmp
adc
push
mov
mov
mov
adc
add
out
mov
pop
add
or
lret
loopne
add
or
xchg
add
mov
nop
pop
or
jp
jnp
or
pop
jb
enter
or
add
or
lods
jno
mov
add
out
sub
cmp
push
or
jmp
stos
insb
dec
ficomps
add
sub
or
test
add
popa
inc
mov
fmulp
mov
out
stos
nop
adc
orw
sbb
mov
je
mov
and
lret
ljmp
in
popa
mov
pop
cltd
loope
pop
imul
popa
sbb
mov
inc
shrb
scas
ror
mov
je
sarb
cld
cmp
leave
cs
mov
shrb
inc
add
dec
mov
lods
mov
mov
mov
cmc
sub
lods
test
cmpsb
test
fistpll
xor
xor
fmull
jg
aad
add
and
adc
jecxz
mov
imul
clc
in
lret
add
ret
leave
mov
iret
loop
push
and
movsb
inc
jnp
hlt
cmp
movsb
icebp
fisttpll
in
movsl
rolb
out
rol
adc
clc
and
outsb
fildll
in
push
test
cmp
outsl
repnz
pop
enter
mov
fs
mov
dec
cmpsb
jae
int3
add
popa
arpl
leave
popf
xor
sahf
pop
aam
fs
or
push
add
or
rol
push
mov
xor
add
aas
push
stos
xchg
movnti
and
inc
inc
addr16
xlat
jl
cmpsl
pop
gs
add
sub
mov
mov
cmp
scas
xchg
push
add
andb
scas
and
loop
nop
pop
jl
inc
insl
orb
test
stc
jle
adc
mov
push
daa
mov
stc
add
sahf
add
mov
sbb
enter
inc
js
popa
xorl
cmp
sbb
cmp
outsl
dec
scas
and
jmp
rorb
or
mov
push
sub
enter
push
add
push
pop
pop
add
scas
sbb
push
inc
and
or
pusha
xchg
orl
andl
jl
push
cli
add
pop
push
lret
stc
fs
psubq
mov
in
push
mov
enter
lods
dec
popf
stc
outsl
pop
iret
adc
jecxz
loop
stos
and
dec
mov
add
jnp,pt
jbe
mov
lds
mov
dec
xchg
and
sbbb
bound
sub
ffreep
push
or
sub
sub
cmpb
cmp
out
mov
mov
mull
fwait
jle
xor
add
jmp
jbe,pn
push
inc
mov
cmp
push
adc
popa
push
dec
inc
lret
cs
fstl
incb
lret
adc
inc
cmc
inc
idivb
push
repnz
pop
xlat
lock
loopne
pop
out
jno
jo
push
icebp
jae
cmp
adc
nop
inc
add
push
daa
int
pop
mov
popa
push
or
loop
xor
fildl
fldt
jb
daa
out
xchg
sbb
in
jmp
out
cli
repnz
dec
inc
fst
sbb
add
add
add
nop
aaa
testl
fdivr
cmp
xor
or
jnp
in
dec
dec
cld
mov
xor
mov
pop
dec
add
inc
adc
push
xchg
aad
jo
vmovsd
sub
arpl
out
jmp
xor
cmp
inc
xorl
dec
or
sub
mov
mov
adc
fincstp
sbb
fcmove
clc
mov
jbe
lret
ss
or
sbb
sbb
mov
inc
xchg
sub
test
xor
push
je
jge
lods
in
and
mov
push
fstps
ljmp
sbb
fs
pop
adc
sti
adc
and
adc
sub
inc
mov
outsb
sbb
cmc
inc
aad
xchg
or
mov
stc
ja
push
das
insl
or
adc
xor
and
sbb
lcall
shr
jns
popa
sti
imul
lods
xchg
mov
testb
or
and
xchg
notb
in
call
sahf
fcomi
add
pop
mov
ficoms
sub
and
loope
pop
out
test
rorb
sahf
les
xor
outsl
cmp
jg
cmp
cmc
push
mov
inc
and
test
bound
jmp
inc
sub
test
add
push
es
sub
clc
xor
push
ss
stc
mov
rolb
add
test
push
leave
cmc
adc
inc
inc
cmp
inc
sbb
pop
wbinvd
push
leave
add
dec
jno
stc
dec
enter
inc
std
sub
sbb
clc
sbb
mov
cltd
dec
mov
mov
mov
outsb
loope
cmp
mov
pop
mull
movsl
jp
stos
gs
out
cmp
inc
inc
data16
jbe
int
sub
negb
js
mov
push
insb
cwtl
cmp
fcmovu
adc
xchg
or
pop
pop
mov
add
jg
add
imul
pop
fs
pop
aas
jmp
pusha
or
cli
sub
cmp
fs
mov
das
aad
mov
add
add
ucomiss
push
xchg
aam
xor
xor
rolb
push
cmp
mov
cmp
mov
sbb
out
pop
or
or
fucomp
mov
fsubs
incl
shll
cmp
repz
adc
jg
jg
aam
mov
out
stc
sahf
cwtl
jb
or
pushf
push
inc
push
call
bound
faddl
mov
jmp
bound
je
cli
fdiv
push
or
adc
int3
cmp
fcompl
adc
sub
les
out
cli
add
cli
pop
or
xchg
pop
aaa
rcll
cmp
ljmp
push
adcl
jge
lret
xor
ret
insb
in
cmp
jns
push
sub
add
sbb
fcomip
fs
pusha
or
adc
or
lret
aad
ja
std
cmpsl
dec
and
mov
scas
clc
out
xor
outsb
mov
and
sbb
xchg
push
jmp
leave
xorl
cmc
or
jb
ret
pop
lahf
aas
out
fs
cld
ret
scas
popf
inc
flds
inc
lss
mov
lea
xor
sub
adc
push
sub
pop
test
in
and
jge
scas
mov
fimuls
add
cmp
lcall
icebp
aad
sbb
mov
dec
lea
movsb
decl
dec
sahf
std
cmc
scas
enter
addr16
xchg
and
ljmp
std
cmc
xor
test
add
jge
dec
ljmp
xchg
xor
xchg
add
aaa
aas
sahf
mov
bound
addb
popf
inc
add
dec
pusha
mov
mulb
stos
mov
push
adc
xchg
pop
lea
push
psubsb
sbb
sbb
cmpb
lea
or
cmpsl
adc
xor
ret
jbe
imul
sub
mul
xchg
ljmp
push
les
pop
or
fcomps
inc
xchg
xor
lock
imulb
loope
cmc
lahf
push
fwait
addb
xlat
repnz
in
pop
or
xchg
test
mov
notb
mov
out
pushf
arpl
adc
sub
fdiv
test
mov
add
mov
dec
movsl
ss
int
icebp
sub
jae
xlat
fldcw
push
sti
mov
xor
fwait
outsb
cld
sub
add
add
stc
icebp
out
cmc
ja
pop
push
jbe
xchg
stos
lea
mov
cmpsl
es
repz
jb
movsb
inc
lods
sub
cmp
jne
add
iret
int3
push
pop
sub
sti
std
je
push
dec
jge
mov
out
fcmovb
add
jmp
jno
insl
lea
test
divb
cltd
clc
paddd
mov
jnp
cmc
inc
insb
xchg
inc
cmp
popf
lar
rolb
inc
out
pop
and
or
shll
aad
mov
add
jp
subb
cmpsl
dec
outsb
inc
into
scas
rorl
out
or
sbb
pop
sbb
xchg
lcall
adc
jns
add
les
popa
std
rolw
sub
cld
cltd
add
pusha
dec
xor
insl
xchg
dec
mov
je
or
pusha
jmp
cmp
cmp
push
shll
jmp
add
push
fdivp
test
and
pop
and
gs
bound
mov
insb
out
inc
lds
sub
xor
pusha
adc
jnp
fisubl
inc
mov
js
mov
gs
iret
xor
push
nop
gs
push
aas
mov
mov
xchg
mov
adc
int
xchg
popf
xlat
jbe
push
add
mov
pop
fidivl
in
cli
int
repnz
add
inc
sub
testb
movsb
or
xchg
mov
fistl
xchg
and
cwtl
cmc
les
pop
xchg
or
jle
mov
add
sub
call
push
push
mov
incb
testb
stc
xchg
cmp
push
roll
bound
sbb
aam
cmp
stos
js
dec
and
iret
in
repnz
xchg
inc
mov
pop
adc
outsb
shrl
pop
xchg
pop
test
push
out
test
sbbl
add
cld
inc
add
push
xor
fisttpll
das
adc
fs
clc
lods
jns
cmp
sbb
adc
cld
cmp
test
ret
mov
stos
or
les
jbe
mov
shll
xor
popa
mov
inc
and
add
in
andb
cmovne
and
sub
xchg
xchg
push
fistpll
push
dec
imulb
sahf
sub
or
mov
movsb
add
mov
test
sahf
add
jne
dec
popf
cmp
repnz
je
lds
or
neg
mov
xor
push
add
add
or
xchg
mov
adc
jge
push
xor
lahf
jns
bound
or
fistl
fldt
ljmp
add
enter
decb
pop
testb
stc
or
cld
fstpl
out
dec
jne
mov
push
cmc
adc
add
push
out
int
fs
cld
repz
dec
jno
sub
sub
push
push
cmpsw
xor
popa
in
sub
mov
ja
leave
sarb
mov
sub
xchg
xor
adc
pop
aad
loop
lock
cltd
sbb
or
mov
sub
push
dec
sub
mov
or
adc
push
pusha
fs
jg
lock
jns
push
and
fdivrs
cmp
pop
test
ljmp
rcrb
xchg
cli
jb
mov
in
sub
gs
test
cmp
repz
add
or
out
pop
dec
shlb
inc
incb
subb
fs
pusha
in
cs
dec
rcr
subl
jbe
stos
mov
adc
fs
jbe
adc
push
mov
sbb
add
inc
int
aam
adc
pop
cmpsl
inc
pushf
sub
sahf
xor
cmp
sub
mov
arpl
jne
movsb
lahf
stc
inc
bound
jbe
sahf
addr16
push
testb
lret
out
or
xor
pop
pop
adc
sbb
fidivrs
fcompl
or
fs
icebp
repz
ss
popa
or
lcall
jbe
sub
out
pop
jle
push
jbe
mov
stos
mov
pop
roll
add
dec
add
out
adcl
fs
loop
and
test
sbb
or
or
fdivl
pop
enter
daa
push
add
xchg
push
testb
out
inc
dec
inc
sub
adc
push
xor
mov
notb
xchg
inc
and
cmpl
and
mov
imul
cmc
int3
add
pop
fisubs
shl
cmp
jnp
popf
scas
add
out
push
push
out
and
push
or
rolb
xchg
add
adc
repz
ss
aas
mov
cli
idiv
lods
icebp
aaa
pop
in
xchg
adc
out
in
dec
insb
repnz
push
and
adcb
pop
sbb
add
mov
lcall
pop
sahf
aas
xor
mov
jo
mulb
mov
mov
jp
xor
add
out
insl
cmp
or
jg
fdivs
xchg
daa
mov
or
sti
push
ds
aam
push
add
icebp
mov
cltd
sarb
push
sub
and
test
push
pop
cmpsb
ljmp
sub
cmp
loop
cmpsl
in
mov
push
jmpw
in
mov
and
add
dec
dec
dec
xchg
out
adc
les
jmp
or
test
movsb
mov
mulb
add
or
push
adc
mov
cmp
cmp
pop
outsb
ds
pop
ja
in
js
jecxz
testb
pusha
sub
inc
fs
sbb
push
call
test
or
aad
add
pop
pop
dec
addr16
mov
inc
pop
add
nop
movsl
iret
fs
sub
cmp
mov
push
roll
jecxz
xor
mov
and
clc
js
cmc
cli
sahf
fldenv
xchg
dec
out
pushf
pusha
or
loop
add
aad
or
ret
mul
in
daa
sbb
sbb
fcomip
iret
fiadds
orb
cmp
adcl
ds
pop
popa
or
es
mov
mov
lock
or
cmp
fisttps
repnz
out
out
cmp
xchg
int
int3
pop
add
shrb
fnstenv
and
test
enter
add
mov
pop
lds
xchg
aad
add
adc
test
pop
push
and
xor
into
mov
push
inc
fdiv
sub
mov
daa
or
mov
mov
push
insb
dec
add
and
ret
andl
sti
pop
or
movsl
cli
outsb
stc
aaa
adc
jp
inc
cmpsl
sbb
cmc
jecxz
jbe
and
mov
aas
push
rorb
jp
cli
mov
cmc
imul
cli
ds
aas
outsb
insb
push
stos
into
cmp
addl
sbb
in
sub
popf
test
mov
adc
jo
testb
jns
mov
add
movsl
shl
adc
adc
mov
int
test
pop
push
push
outsb
cwtl
add
jbe
jae
repnz
mov
sub
mov
pop
popa
loope
xor
gs
push
mov
gs
je
push
or
adc
incl
or
sub
mov
xchg
lahf
inc
mov
xchg
mov
shlb
ret
jbe
add
imul
or
das
daa
push
outsb
add
pushf
lret
mov
mov
mov
out
xor
sub
ss
fdivrl
xchg
jo
mov
outsb
mov
out
insl
cmp
sub
jp
cmp
ljmp
xchg
or
es
test
cmc
int
or
push
jl
imul
and
in
js
cmc
push
mov
add
pop
mov
jo
outsl
xor
or
adc
push
hlt
mov
iret
add
xor
lahf
xor
and
mov
inc
jecxz
fldenv
add
dec
iret
add
add
movsb
ss
das
adc
scas
data16
mov
cli
inc
add
adc
and
aaa
inc
cmp
mov
gs
add
aad
outsl
inc
sub
ja
sbb
outsb
adc
push
icebp
or
inc
icebp
add
popa
mov
jmp
negl
jl
add
fdivs
add
imul
mov
xchg
mov
pop
sti
out
int
push
and
cmc
lret
mov
add
inc
mov
push
pop
xchg
fs
movl
bound
inc
jecxz,pt
daa
data16
fdivrl
push
scas
mov
jmp
xchg
and
sbb
out
cmc
inc
mov
adc
cmp
jo
insb
push
push
pop
lret
push
leave
dec
outsl
flds
sbb
popa
mov
sbb
les
in
cld
mov
sti
and
and
add
loope
push
mov
cmc
test
popf
ret
mov
mov
push
aam
push
movsl
lock
add
stc
add
add
adc
hlt
dec
sarb
les
notb
xor
mov
fimull
insb
pop
cld
in
sti
fnstsw
inc
inc
mov
mov
popf
pop
repnz
je
lods
push
lods
enter
imul
psrad
xchg
clc
inc
sub
popf
pop
pop
testb
leave
dec
fdivrs
testl
test
jnp
or
push
cltd
cs
pop
or
cwtl
addr16
sub
imul
add
flds
inc
jmp
pop
add
jp
in
rorb
sub
xchg
xlat
jecxz
xorl
in
jo
dec
push
adc
inc
xlat
pop
pusha
mov
and
popa
out
mov
pop
loop
jbe
addr16
clc
sub
sbb
aas
sarl
inc
insl
out
lock
hlt
mov
lea
xchg
into
test
loopne
push
out
cli
mov
out
incb
enter
int
or
pop
xchg
xor
or
add
sbb
insl
inc
pop
dec
push
xchg
xchg
pop
fdivrs
add
and
and
test
sahf
or
mov
ja
fs
fdivs
or
pop
aas
inc
idivb
push
xor
lahf
mov
mov
aad
xor
xchg
add
dec
cs
cld
mov
mov
pop
mov
xchg
fnstenv
add
std
cmp
shlb
ss
icebp
mov
shl
cmp
xchg
fs
xor
das
in
sbb
pop
add
xchg
popa
outsl
push
or
hlt
cmp
add
sti
dec
adc
inc
inc
add
mov
data16
cmp
ja
push
aad
or
mov
add
shrb
xchg
sbb
insb
dec
out
sub
cld
clc
jnp
add
push
and
jl
and
add
add
into
or
repz
cmpl
jbe
pop
add
inc
push
aas
notb
add
aad
in
adc
imul
pusha
push
lock
mov
cmp
and
cmpsb
pushf
cmpsl
into
test
sub
push
jg
mov
push
mov
mov
fiaddl
les
addb
jle
sbb
pop
sub
and
flds
push
negb
push
mov
insl
xor
loopne
push
add
int3
std
ss
pop
pop
jbe
lods
and
jecxz
inc
ret
mov
jb
loop
frstor
or
dec
jmp
pusha
jl
xor
xchg
je
fcomp
sti
pop
testb
xor
sub
or
sub
or
iret
inc
xor
jge
jae
mov
jne
add
sub
sub
adc
xorl
dec
lea
push
mov
xchg
iret
aad
add
or
sbb
add
dec
fs
jns
xchg
sbb
jmp
imulb
add
inc
arpl
movsl
std
movsb
pop
mov
out
int3
rcrl
decb
ret
add
mov
cmpsb
inc
xor
aad
daa
fdivr
icebp
clc
bnd
imul
pop
pop
icebp
aas
test
stos
xchg
xchg
nop
daa
sbb
push
add
mov
in
loopne
shl
int
add
and
cmpl
ret
imul
fs
add
pop
mov
fdivrs
lahf
fmuls
inc
loopne
sbb
xlat
and
pop
adc
inc
inc
test
pop
dec
scas
push
mov
aas
and
add
add
dec
les
movsb
hlt
sub
xorl
test
dec
sbb
adc
and
mov
and
push
test
xor
out
mov
push
adc
xor
cmp
adc
mov
adc
sbb
push
lcall
inc
and
jmp
pop
jnp
lock
shl
dec
push
gs
jno
inc
sbb
in
xor
add
mov
popf
notb
movsb
sbb
mov
push
daa
or
testl
cmp
add
cmc
ljmp
xor
pop
outsb
xchg
or
jge
sbb
sub
test
cmp
and
sub
ret
repz
mov
jo
add
repnz
stos
push
cmpb
movsb
adc
arpl
in
mov
and
andl
data16
std
shll
jg
xor
cli
cmc
cmp
aas
and
rcll
cmc
js
push
mov
fadd
add
dec
cmpl
add
fnstsw
add
mov
inc
out
xor
push
dec
cmp
test
jmp
ja
popa
ljmp
lods
ss
js
push
add
lock
sbb
or
cwtl
mov
xor
dec
arpl
sub
das
sub
push
jae
sahf
int
add
addr16
out
adc
dec
cmp
push
xlat
out
add
mov
insb
imul
mov
rcrl
vxorps
xchg
in
hlt
add
ret
add
dec
adc
jo
popf
dec
stos
jmp
mov
xchg
pop
mov
push
into
add
les
inc
popa
jl
adc
sub
outsb
push
and
add
sahf
scas
cmp
cmc
test
xchg
jl
mov
je
mov
gs
arpl
pop
ds
rcl
and
dec
add
push
or
scas
push
scas
mov
add
push
icebp
add
fs
add
mov
add
cmp
mov
fs
jbe
movsb
or
jg
inc
and
cs
add
lea
lods
testl
pop
cltd
sbbb
call
mov
add
xchg
test
ret
mov
sbb
js
xchg
pop
lds
fsubl
cli
and
or
gs
popf
mov
fmuls
xor
adc
loopne
out
fldt
xchg
mov
mov
mov
ret
sbb
daa
imul
xor
cmpsb
sti
fadds
sahf
imul
mov
sub
mov
loop
mov
outsl
jle
xor
testb
test
jo
add
incl
push
fs
icebp
dec
adc
push
imul
mov
cmp
movsb
outsb
repz
arpl
jecxz
cli
fdivs
neg
imul
pushw
lcall
push
pop
cmpsb
stc
or
jns
fs
fsts
je
mov
test
and
not
mov
xchg
cmp
pop
cmc
cld
dec
dec
xor
sub
sub
sti
jne
scas
sbb
popa
repnz
movl
mov
je
jecxz
xor
loopne
pop
fadd
add
lock
popa
scas
iret
xor
add
or
jbe
sbb
aad
pusha
push
inc
sbb
sub
iret
lahf
sub
popa
jne
fisttps
jbe
jae
dec
and
push
pop
pop
jnp
xchg
jbe
jp
and
popw
xchg
pop
es
bound
mov
fldcw
mov
ficompl
mov
add
cwtl
in
sbb
xor
in
or
pop
cmc
mov
or
xchg
mov
jge
std
push
clc
mov
es
divb
icebp
mov
cmp
jne
cwtl
xchg
pop
cmp
movsl
adc
filds
fwait
mov
add
mov
test
popa
cltd
hlt
std
and
mov
es
testb
andl
mov
daa
inc
dec
mov
cmpsw
dec
les
push
or
iret
sub
daa
and
inc
pusha
cli
or
cmp
mov
loopne
xchg
adc
flds
leave
xlat
lods
movsl
outsl
rcll
jno
push
or
cmc
daa
stos
xchg
and
and
outsl
lds
sub
push
sahf
xor
cmc
imul
or
add
fcmove
inc
jle
xor
xlat
popa
cli
popa
mov
sub
mov
mov
arpl
sbb
cmp
out
pop
aaa
add
das
mov
sub
jbe
pop
mov
or
jns
add
and
jg
cli
pop
jmp
cwtl
divb
mov
mov
frstor
movsb
dec
pop
clc
subb
inc
mov
bound
jmp
filds
mov
mov
pop
lcall
insl
push
push
cs
icebp
or
loopne
lret
icebp
adc
movb
ss
es
repz
push
mov
xchg
in
adc
xor
fnstsw
inc
aad
mov
xchg
in
or
or
pop
mov
dec
ds
push
decl
iret
sub
xor
and
pop
in
int
add
lret
mov
leave
cmp
mov
xchg
xchg
pop
and
arpl
push
mov
and
cld
adc
jg
popa
xchg
push
or
adc
cli
scas
cmc
in
push
cmp
scas
add
fisubl
mov
lock
adc
outsl
or
mov
inc
aam
jae
sahf
cmc
mov
xor
add
jns
je
mov
jo
stc
and
xchg
xor
mov
cli
movsl
daa
ss
scas
ja
pusha
jno
or
jb
push
sahf
daa
ret
and
into
push
mov
jmp
loopne
dec
jmp
subl
in
mov
add
fs
into
mov
enter
mov
xorl
inc
lock
xchg
in
mov
in
adc
push
movsb
sti
dec
cmp
sbb
sbb
pop
add
sbb
mov
and
pop
jecxz
sahf
shll
sub
negl
fiaddl
mov
lea
cmpsb
shrb
test
push
je
push
xor
shlb
push
jp
mov
popa
pop
push
dec
add
sbb
fiadds
inc
addr16
decl
in
jb
movsb
pushf
cmc
gs
adc
clc
pop
aas
dec
fisttpl
adc
lcall
pop
lret
push
scas
fs
sti
xor
xor
loopne
sar
das
xchg
inc
shll
pop
sbb
sbb
cmpsb
pop
or
ja
cmp
gs
jns
pop
xchg
popa
pushf
aad
pusha
insb
sti
push
call
inc
mov
outsl
mov
add
test
stc
fs
mov
push
jb
pop
lret
mov
or
das
push
shrl
xor
ficoms
popa
cmp
imul
sub
sbb
adc
mov
sub
mov
sbb
and
popf
jle
pop
popf
repz
sarb
cmp
in
das
cmc
xchg
xor
daa
lcall
arpl
popa
and
jp
in
or
cltd
mov
mov
pushf
loop
hlt
mov
cmp
out
jmp
cs
cltd
pop
lea
flds
pop
and
out
mov
andl
and
jno
mov
mov
xor
xor
pop
and
and
or
add
scas
cld
test
out
movsl
pop
fwait
sahf
mov
pop
scas
dec
sub
push
loope
test
lret
fstpt
fiadds
inc
clc
xor
ljmp
or
xchg
das
icebp
jle
pusha
xchg
cmpb
data16
repnz
inc
fs
in
xor
xor
add
or
push
jbe
leave
popa
xchg
aaa
andb
std
add
addr16
pop
push
je
add
adc
rol
out
loopne
add
xchg
or
or
mov
xchg
scas
ret
sbb
mov
dec
sbb
inc
fs
std
sub
add
sub
loope
adc
add
inc
popa
rorl
arpl
adc
inc
pop
adc
idivb
iret
inc
xor
ss
pop
mov
inc
je
mov
mov
outsl
cmp
imul
xor
jno
pop
pop
fs
into
xlat
and
out
mov
arpl
and
hlt
cli
or
mov
mov
or
aam
add
mov
pop
testb
mov
sbb
pushf
cld
xchg
data16
notb
inc
lahf
sub
in
int3
lea
popa
sbb
mov
mov
jns
dec
sbb
test
adc
in
es
push
insl
or
push
enter
jno
adc
orl
xor
inc
clc
lods
add
ljmp
dec
rcrl
add
ja
mov
cmp
or
inc
mov
int
cmc
enter
cmp
lods
test
cmpsb
mov
jae
dec
jno
fs
xor
ljmp
cmp
adc
popa
mov
in
jle
movsb
sbb
push
sbb
jl
data16
hlt
or
movsb
push
jp
sarl
xor
cld
pop
cmp
cmpsw
ja
lahf
out
loopne
inc
je
int
xor
or
jo
xor
mov
xor
cmc
add
jne
adc
negb
xchg
aad
daa
or
jno
mov
add
stos
roll
lcall
popf
jmp
and
push
push
insb
sbb
shrb
sbb
test
add
sbb
arpl
add
jl
addr16
in
insl
cmc
pop
mov
addb
and
popf
push
fucomip
xor
cmp
mov
neg
and
std
mov
mov
gs
pop
stos
adc
repnz
add
clc
pop
jo
rolb
cmp
in
mov
out
add
add
add
aaa
push
pop
sbb
xchg
push
sub
dec
arpl
in
pop
inc
fsubr
add
xchg
jo
and
adc
lods
add
test
repz
cmpb
mov
div
sub
push
xor
cli
cmp
adc
xchg
sbb
shl
stc
out
vpsllq
in
or
sbb
icebp
jne
in
dec
or
inc
incl
xchg
push
movsl
cmp
fwait
out
and
shll
ja
lea
into
jmp
in
clc
and
jle
inc
cmp
imul
adc
pop
cli
outsl
sub
mov
xchg
jl
pop
test
and
stos
sbb
add
or
mov
ja
out
xor
das
or
mov
leave
cmc
and
dec
push
sbb
loope
cmc
sub
loopne
add
push
and
jb
out
pop
add
push
add
ljmp
push
test
icebp
pushf
and
or
les
push
cld
arpl
scas
stc
test
mov
pop
ret
push
dec
mov
adc
add
sbb
push
sbb
jbe
jecxz
push
cli
rcrb
fstpl
mov
cli
mov
push
fbstp
hlt
fstps
push
rcr
adc
scas
adc
jmp
or
adc
or
das
icebp
test
insb
push
xor
push
add
add
pushf
xchg
jmp
add
mov
loopne
and
divb
add
mov
add
push
sahf
sbb
in
fs
sbb
inc
cmc
mov
sbb
push
xchg
ja
push
fs
movl
add
sahf
into
sahf
ds
dec
in
popf
fwait
adc
pop
cmp
inc
or
inc
popf
jns
shrb
add
cmp
cs
xchg
pop
sbb
mov
dec
mov
mov
jne
jns
pop
inc
fmull
and
decb
pop
mov
cwtl
cmp
negl
sub
mov
out
push
add
andb
stc
pop
mov
pop
je
add
pop
mov
int
lea
adc
fisubrs
xchg
mov
or
out
hlt
dec
rcll
inc
adc
push
mov
loop
pop
cmp
mov
decl
mov
outsl
push
cmp
jmp
push
dec
movsl
adc
adc
add
xchg
push
dec
sbb
mov
ja
add
daa
in
gs
inc
inc
das
cwtl
sti
mov
mov
popa
push
inc
scas
sub
out
sub
inc
movsb
mov
ss
adc
mov
add
imul
mov
add
outsb
fsin
test
sub
dec
add
mov
lret
insb
xor
or
add
repz
les
shrl
add
test
xor
pop
test
icebp
adc
enter
mov
stos
add
adc
testb
push
mov
bound
sbb
nop
sti
aam
aad
loop
inc
push
mov
pop
cmpsb
jecxz
push
jb
aad
pop
rcll
push
dec
push
and
loop
cmp
push
add
sub
cmp
cli
test
or
testl
or
mov
sarb
inc
aad
push
sub
push
push
dec
popa
add
push
pop
jb
mov
and
xlat
add
fucomip
lret
or
stc
imul
cmpsb
mov
out
pusha
adc
cld
add
leave
xchg
add
stc
fwait
testl
mov
mov
aas
divb
aam
push
leave
mov
inc
roll
add
out
icebp
xchg
fbstp
xchg
add
adc
imul
std
fists
lods
sbb
fmuls
scas
hlt
cmc
test
mov
and
outsb
and
repz
ret
adc
sub
add
dec
mov
fs
hlt
loop
jle
sub
jo
lret
icebp
mov
sbb
and
sub
cmp
mov
icebp
movsb
hlt
in
fisttpll
movsl
fs
mov
lahf
rcl
jbe
or
cli
adc
ds
adc
jbe
pop
enter
hlt
hlt
pop
xlat
or
push
pop
dec
and
xor
jae
es
test
cmpsb
rorl
cmp
and
and
xchg
sub
aas
ja
push
jg
addr16
cmp
mov
stc
xor
stc
aad
and
es
fiaddl
or
xchg
sub
cmc
jno
adc
pop
leave
js
add
loope
pop
dec
decl
and
in
inc
enter
mov
in
mov
leave
or
adc
adc
lds
push
testb
or
addl
push
test
outsl
movsb
adc
lods
stc
cmp
sti
mov
jle
jae
sti
lds
xchg
je
sub
jl
sub
popf
aam
cmp
test
jnp
aad
add
scas
sub
out
fadd
push
lds
fwait
bnd
pop
push
mov
mov
sbb
pop
push
lret
sbb
sub
out
das
pusha
imul
and
push
push
test
cli
mov
clc
movsl
add
lret
add
adc
gs
push
iret
jecxz
lcall
xchg
push
ss
loope
cmc
lock
mov
subl
aaa
sub
lods
imul
in
push
inc
cld
or
out
push
rcll
rorl
mov
add
out
mull
mov
add
hlt
push
or
mov
xor
rolb
repnz
jge
add
and
pop
leave
pop
cmp
cli
sbb
insl
call
decb
mulb
add
xor
imull
stc
and
mov
add
add
imul
adc
jbe
or
fistpll
pop
repnz
adc
sbb
adc
xchg
flds
and
negb
pushf
mov
hlt
fidivs
call
dec
add
imulb
dec
push
js
mov
negl
and
idivl
cmpsl
add
repnz
loop
add
daa
sbb
and
adc
push
sti
push
out
pop
ret
sub
mov
mov
data16
pop
or
jo
lret
or
cld
dec
lods
sub
jno
aaa
adc
and
pop
adc
fidivrs
add
or
mov
idivb
shrl
cmpl
and
xor
xchg
call
fs
or
and
adcb
aam
jnp
inc
add
div
out
jns
icebp
or
and
inc
cmc
insb
pop
mov
xchg
mov
or
and
aam
pop
sarl
nop
imulb
and
mov
ret
ds
icebp
adcl
fistpl
imul
cld
data16
lods
add
in
rcrb
sarb
sub
lods
divb
movsb
sub
push
aam
add
xor
ds
lock
pop
pop
movsb
repz
push
or
jo
add
pop
scas
cmc
in
call
into
dec
or
and
sarb
shrl
cmp
adc
notl
iret
add
cmc
cli
inc
in
lret
adc
pusha
or
mov
pop
jl
adc
ja
fs
sub
cmp
push
push
push
jge
jno
pop
xchg
int
mov
mov
les
cs
lret
inc
add
dec
rorl
cmp
cli
xor
adc
sbb
sub
adc
in
test
lahf
std
mov
gs
stos
daa
out
lds
negb
push
lods
mov
or
imul
sub
and
rolb
and
fwait
testb
cmpb
or
pusha
orb
push
inc
es
lds
mov
push
adc
pop
jns
cwtl
adc
add
test
loope
pusha
mov
mov
mov
test
loop
cmc
inc
imul
scas
dec
and
movsl
notb
cmc
or
xlat
faddl
in
dec
repnz
add
fs
pushf
adc
mov
inc
or
in
add
inc
sub
jnp
and
mov
filds
dec
fadds
call
loope
je
mov
pushl
dec
push
addl
movsb
sbb
int
adc
inc
or
out
decl
addb
ja
and
lds
mov
and
add
pop
out
push
jne
and
jbe
xchg
push
out
xor
inc
mov
pop
push
mov
rorb
xor
add
psrad
stos
andl
push
sub
ss
push
push
hlt
stc
inc
add
insb
push
lahf
cmc
and
or
cwtl
adcl
and
and
je
add
or
loop
xor
idiv
mov
inc
lret
outsl
jns
rorl
popf
cs
xchg
inc
and
inc
sbb
and
adc
loop
and
loope
add
scas
cmp
data16
pushf
adc
add
popa
or
adc
sub
pop
arpl
add
push
lock
ret
imul
daa
mov
aaa
call
cmp
sti
push
and
mov
xor
add
arpl
mov
int
mov
inc
mov
mov
fsubp
fs
ja
sbb
mov
test
cmp
ljmp
sub
daa
and
mov
add
mov
mov
pop
pop
dec
cli
es
in
lea
dec
push
out
lds
or
mov
sub
add
mov
inc
and
inc
xor
inc
scas
jmp
imull
push
cmc
dec
jbe
std
or
and
gs
fs
fs
lea
pop
rolb
add
adc
mov
negb
lahf
add
jae
jmp
jmp
lock
mov
pop
imul
mov
mov
or
pop
inc
dec
divb
popf
in
push
dec
mov
push
xchg
xor
icebp
or
mov
out
data16
stos
idivb
lods
inc
int
in
add
jmp
gs
fidivs
jne
fs
cmpsb
inc
mov
add
into
pop
add
fisubrs
fidivl
sub
pop
or
loopne
mov
mov
decb
mov
xor
pop
test
xchg
push
push
adc
mov
pop
dec
outsl
or
iret
repnz
add
xlat
lret
arpl
adc
rol
and
jl
add
or
sbb
inc
add
dec
inc
bound
and
or
mov
add
mov
subps
dec
iret
dec
mov
and
adc
lock
mov
mov
add
jp
testb
sbb
add
sahf
and
or
sti
push
jg
add
cmp
or
or
lea
xor
or
pop
xor
je
imul
jecxz
in
adc
cmpsl
fbld
cmp
shlb
xchg
mov
scas
test
test
and
cmc
arpl
ds
gs
add
and
call
int
or
test
dec
jbe
incb
and
push
cmp
pop
in
int3
enter
je
shrl
hlt
push
imull
jl
mov
ret
xchg
xor
dec
add
inc
ds
push
push
add
adc
push
jmp
das
xor
gs
jmp
dec
loopne
shl
fnstsw
hlt
pop
out
mov
cld
dec
mov
inc
arpl
add
jmp
sbb
sbb
cltd
dec
jmp
add
lds
call
es
mov
sub
dec
or
dec
sub
scas
xchg
mov
pop
add
mov
enter
testb
mov
imul
pop
negb
adc
out
shrl
sti
into
pop
and
adc
orl
daa
push
mov
insb
out
mov
jns
sub
or
bswap
mov
shlb
jae
pop
pop
fs
popf
push
popa
pop
dec
out
push
push
xorl
add
int
ja
xchg
cmc
fdiv
xchg
cmp
xor
lahf
scas
aam
mov
stc
hlt
fs
add
xchg
les
addl
push
or
fsts
xor
push
popa
and
out
and
fidivl
sbb
mov
push
adc
movsb
out
sbb
pop
flds
push
ret
ljmp
mov
pop
inc
add
in
pop
pop
push
push
adc
dec
shr
jo
mov
hlt
andl
cmp
or
push
js
shll
arpl
test
jg
ss
inc
push
enter
dec
xchg
xchg
loop
popa
add
adc
pop
mov
in
lods
pop
sub
cmp
bound
call
push
fists
add
icebp
mov
addr16
cli
shl
fucomi
stc
mov
les
or
push
dec
xchg
scas
or
push
push
mov
adc
clc
jecxz
pop
enter
loop
mov
cmc
jp
jb
mov
add
mov
sub
in
and
cmpl
mov
jl
adc
cmp
fs
fisubl
inc
or
push
jb
mov
js
lret
sbb
testl
xchg
inc
shlb
bound
mov
inc
and
dec
push
pusha
lock
testl
mov
dec
add
xor
lcall
ss
cmp
push
pop
jge,pn
js
in
jb
xorl
mov
out
in
sahf
aas
mov
sti
jge
inc
lret
ja
je
ret
inc
hlt
mov
mull
ficoml
movsb
out
push
jg
adc
call
xor
mov
mull
popf
mov
loop
scas
into
cmc
lods
mov
push
mov
mov
loopne
movsb
out
fs
or
xchg
leave
add
or
mov
push
cmpsb
add
call
out
jne
in
jae
cmpsb
adc
push
cmc
dec
test
scas
add
fs
jb
jnp
add
popl
outsl
jg
mov
testl
repz
pop
xor
lcall
add
popf
into
cmc
enter
sbb
movb
inc
lds
sti
aad
es
shll
xor
ret
subl
cmpsb
push
out
xchg
xor
insb
call
jne
cmp
inc
xchg
xchg
push
out
icebp
dec
xchg
jp
mov
jne
add
fs
push
jle
add
mov
movb
sub
sub
mov
outsb
or
mov
push
sbb
jae
xchg
loope
pop
add
or
pop
fiadds
testb
fiadds
mov
cld
xor
test
or
add
pop
or
aas
add
test
loopne
rcll
hlt
fcmovne
pop
cmpsl
xor
stos
sub
into
lret
leave
insb
jmp
fdiv
cli
push
pusha
pop
or
cli
into
icebp
add
rorl
and
add
stc
test
aaa
mov
xor
push
leave
jle
fs
sar
jnp
pop
popa
or
add
test
divb
cli
cmc
push
jbe
dec
push
rolb
and
nop
popf
insb
mov
jne
pop
or
aad
xor
sbb
imulb
in
pop
cltd
movsl
aas
lret
and
cli
test
jae
xchg
daa
idivb
push
mov
jnp
roll
cs
jle
arpl
std
mov
insb
sub
add
mov
loopne
in
ret
addr16
cs
imul
adc
popf
or
mov
test
or
gs
add
cmp
fwait
mov
mov
fs
loopne
shlb
and
mov
mov
ja
notb
sub
or
xchg
add
in
and
pcmpeqb
xorb
sti
int3
add
xorl
dec
or
inc
loope
and
and
out
and
xor
test
dec
test
ja
jmp
xor
dec
inc
and
push
add
mov
fs
add
and
inc
xor
fs
arpl
je
mov
push
in
inc
lods
icebp
sbbb
lahf
jns
mov
les
mov
mov
cmp
push
and
notb
mov
jo
add
xor
mov
or
sti
cmp
xchg
cwtl
add
and
sti
movb
xchg
pusha
gs
dec
push
jg,pn
call
cmp
xchg
enter
idivl
sbb
enter
jne
fisttpl
xchg
arpl
jecxz,pt
xor
aam
add
or
pop
inc
arpl
divb
dec
jns
fidivl
in
push
and
and
fsubrs
and
lret
sbbl
push
fadds
push
push
mov
jmp
pusha
imul
push
sub
cmc
pop
ret
std
add
or
jnp
sub
push
ret
fs
push
divb
out
stc
das
inc
mov
popa
les
rcl
or
fwait
int
lods
sti
or
nop
movsb
aam
rclb
inc
ljmp
dec
cmpsl
inc
in
lock
imulb
into
add
cmp
jecxz
loope
out
ja
jb
enter
negb
loope
test
punpckldq
sub
movsl
clc
jo
rcll
push
cmp
fdivs
pop
add
inc
mov
lea
mov
mov
jns
ficoms
test
and
fnsave
loopne
aad
lods
repz
add
mov
orl
xchg
jle
gs
loopne
es
lods
sarl
jne
arpl
sbb
loop
adc
popf
jno
inc
mov
std
xchg
std
xlat
jmp
jnp
push
mov
sarl
in
into
dec
inc
out
sbb
stc
maskmovq
testb
sbb
inc
jns
sbbb
data16
std
andl
and
dec
popf
mov
jle
pop
or
xor
mov
cmp
adc
dec
cli
add
push
or
lcall
adc
sti
inc
mov
and
pusha
add
xor
daa
sbb
aam
or
clc
int
lods
out
andb
imul
push
xor
lods
mov
xchg
test
stos
mov
mov
add
add
adc
lret
orb
sbb
sub
and
test
enter
cld
cs
lods
fs
xchg
movsl
stos
add
xor
and
test
lret
adc
popf
ds
fsubl
mov
shl
rcll
lret
pop
pushf
cli
lods
pop
sti
testb
cmp
dec
jle
bound
xchg
cli
pop
xor
cli
pop
adc
xor
cmp
notl
xchg
lret
inc
not
push
fwait
loope
lea
push
xchg
cmc
rcrb
pop
lea
inc
inc
testl
add
add
mov
mov
fld
adc
out
push
mov
or
lahf
sti
push
out
pop
cld
les
jp
add
out
and
pusha
into
fcomi
adc
cmp
movsb
ret
sub
icebp
add
add
rorb
gs
cmp
outsb
test
repnz
dec
inc
cmc
addl
rorl
cmpl
mov
movsl
inc
lret
mov
adc
sti
and
jb
sub
mov
hlt
sbb
xorl
rclb
int3
jne
push
loope
imul
addb
cmp
or
test
or
stos
scas
decl
stos
mov
adc
inc
test
std
cmp
test
xchg
sub
add
push
jnp
jle
cmp
cmc
ss
adc
fistps
fistpll
test
ret
push
xchg
dec
xchg
out
sarb
xchg
stos
pop
pusha
ljmp
loopne
push
or
and
jnp
mov
jle
and
call
pop
pop
adc
imul
test
push
fcmovu
or
push
sbb
pushf
int3
insb
popl
pop
push
call
mov
pop
adc
mul
out
lea
hlt
aam
aam
jge
test
cmp
jae
imul
pop
mov
mov
lods
add
out
add
jecxz
divb
and
and
push
cmpsb
inc
mov
adc
push
sbb
fwait
xlat
jo
and
test
jae
enter
and
test
and
popa
ss
add
mov
push
add
dec
sbb
inc
push
clc
xchg
mov
mov
pop
mov
imul
add
mov
ja
ss
cmc
pop
xlat
jg
pop
addb
adc
std
xchg
inc
in
dec
xor
xor
lret
aam
das
sbbb
js
and
sbb
pop
adc
rcrb
jl
fisttps
pop
mov
lahf
adc
push
jbe
popa
sbb
clc
and
inc
or
popa
mov
ret
add
in
push
mov
loope
in
ds
jbe
pop
incb
repz
mov
ficompl
int
sub
add
pop
mov
out
add
adc
jne
mov
jle
and
nop
push
xchg
or
nop
outsl
and
ljmp
jle
xchg
sahf
push
out
dec
int
xor
test
sbb
jne
pop
fstl
jl
push
aaa
jo
or
mov
inc
call
sub
int
sbb
fisttpll
xchg
testl
adc
mov
in
adc
push
or
movsl
and
fsub
lret
adc
sub
push
or
mov
lds
cmp
ss
call
loop
rorb
insl
add
sbb
testb
add
stc
loope
or
clc
sti
and
pop
test
fidivrs
mov
cld
mov
arpl
jecxz
pushf
daa
out
popf
fadds
test
out
or
dec
dec
lods
adc
inc
rorl
lcall
sbbl
xor
xor
lcall
add
and
cmp
inc
or
fistl
sbb
outsb
in
scas
or
je
ret
sbb
adc
adc
pop
inc
jbe
in
mov
jmp
movl
inc
stos
xorb
insb
jne
or
leave
or
sbb
jns
fistps
fwait
data16
jmp
addr16
ja
stc
push
xor
mov
adc
add
inc
cmp
gs
das
cmp
test
pop
fsubrl
ja
aad
xchg
ret
fstps
or
push
and
lret
jo
sbb
sub
sbb
cmp
movsl
add
xchg
pop
shrl
adc
push
fs
pushf
push
sbb
mov
push
popf
mov
ds
pusha
into
dec
or
jg
in
adc
cltd
jnp
adc
xor
add
push
add
movsl
das
add
cmpsb
add
push
xchg
or
mov
sbb
jbe
add
fimull
repz
mov
lock
pop
xor
mov
and
add
mov
xchg
or
or
dec
jmp
shll
push
pop
ljmp
xchg
xchg
mov
inc
or
mov
push
dec
xchg
int3
jno
mov
call
mov
and
adcl
push
jne
jbe
or
stc
or
clc
adc
and
mov
cmp
negb
dec
adc
into
xchg
mov
imul
ja
and
add
out
pop
add
inc
fstpl
add
sarl
lods
nop
push
push
fs
or
movsl
sbb
sub
in
scas
sarb
pop
add
fdivrs
jl
xchg
mov
push
sbb
insb
and
mov
cmp
or
and
push
movsl
dec
loopne
out
repz
jmp
inc
sub
pop
add
pop
out
cmc
mov
jle
mov
cld
lahf
sub
popa
pushl
push
adc
loop
and
xchg
cmp
pop
pop
movsl
push
gs
lahf
add
stos
aaa
rolb
xor
mov
sti
mov
mov
rolb
fcoml
pop
mov
mov
push
adc
frstor
push
jne
sub
push
shlb
imul
cli
fs
pop
xlat
testl
and
dec
stos
mov
stos
sbb
jmp
rolb
dec
mov
mov
popa
pop
or
enter
xor
inc
jmp
ret
sbb
inc
inc
xor
pop
lret
jns
cmc
es
push
std
adc
mov
jecxz
jmp
bound
in
sub
iret
iret
mov
fwait
jle
jg
out
xor
xor
sub
jecxz
out
mov
stos
push
popfw
sub
orl
mov
movsl
jb
popa
push
mov
lods
xor
jl
and
adc
cld
lock
inc
iret
pop
sti
sub
dec
push
fdivrs
aad
aaa
or
mov
mov
adc
data16
ja
push
andl
add
pushf
leave
outsl
fs
dec
jp
lcall
cltd
jb
shrl
pop
add
push
fistps
jp
es
andb
add
cmc
xchg
cmc
push
pop
cmp
xor
inc
add
pop
sub
notb
pop
pop
push
and
add
dec
fwait
jns
adc
sar
and
pop
clc
push
incb
sahf
loopne
out
pop
inc
out
cs
jmp
ljmp
xchg
mov
adc
incl
dec
cmpsl
inc
mov
loope
xchg
pop
push
mov
xchg
xchg
push
inc
sbb
sbb
or
sub
add
or
cmp
fwait
lods
add
add
je
shrb
repz
mov
push
aad
inc
popf
add
inc
int
arpl
clc
sti
mov
addl
push
in
fistps
cmp
mov
mov
testl
iret
or
push
add
dec
push
xchg
push
and
inc
std
out
push
cld
test
jae
add
mov
repz
andb
test
mov
fcomps
mov
outsl
clc
movsb
jns
xchg
fmull
pusha
mov
xchg
dec
mov
adc
mov
mov
push
gs
xchg
pop
fsubp
cmpsb
fsubr
hlt
and
icebp
bound
jne
icebp
add
lahf
in
and
pop
loop
psadbw
and
hlt
loope
orb
and
in
test
inc
testb
scas
lds
mov
enter
shlb
and
insb
inc
and
xor
clc
push
loop
sub
stos
fdivrl
hlt
mov
mov
push
cli
fs
stos
rol
sbb
xchg
adcb
movsb
in
repz
mov
mov
fs
add
ljmp
into
add
cmp
popf
push
pop
fdivs
int
mov
and
fs
gs
std
into
mov
gs
inc
add
pop
mov
mov
data16
push
mov
push
in
push
fisttpl
push
jns
adc
inc
and
push
pusha
sbb
or
inc
push
mul
push
mov
ljmp
xor
push
jbe
ficomps
stos
das
pop
adc
inc
jb
pop
aas
jbe
popf
popa
popa
sbb
in
push
pop
imulb
cmc
fdivr
adc
xlat
int
mov
insl
inc
push
out
stc
movntq
out
movsl
dec
pop
mov
xlat
out
jge
dec
jl
leave
loope
sti
je
shrb
pop
add
sub
stc
add
xor
dec
xchg
dec
adc
popa
fldl
mov
xchg
mov
mov
jmp
inc
xor
cmp
or
hlt
pop
push
in
arpl
sbbb
mov
dec
add
loope
outsb
ds
pop
pop
adc
repz
in
dec
and
adc
dec
cmp
xor
sub
arpl
mov
cmp
fstps
sbb
call
push
jg
jmp
inc
aam
int3
stc
add
icebp
push
fcompl
outsb
or
decl
out
adc
jns
xchg
les
xor
flds
push
adc
popl
imulb
pop
pop
cmp
inc
jb
test
inc
gs
imul
icebp
movsb
subb
mull
insb
xlat
lds
popa
movlps
test
xor
inc
popa
cmp
cmc
fisubs
pop
jbe
decb
sbb
ret
push
sbb
popa
fbld
add
inc
lahf
icebp
loope
add
mov
aaa
jmp
dec
adc
xchg
pop
xor
push
filds
jbe
cmpl
pop
mov
out
es
lret
sbb
xor
aaa
cmc
lea
pop
stc
mov
sbb
dec
push
sub
ljmp
dec
les
cmp
pop
pop
fs
add
push
adc
dec
inc
push
xchg
repnz
leave
fiaddl
fs
xor
jl
xchg
movl
and
movsl
andb
fs
subl
fs
cmp
mov
inc
enter
js
popa
imul
test
loopne
mov
cmp
lret
aam
push
inc
mov
mov
in
sub
fstl
sub
sub
popa
xlat
sbb
lcall
pop
subl
adc
mov
addr16
js
push
fs
ja
cmpsb
dec
or
or
cmp
cmc
lds
lock
add
std
xor
cmp
stc
bnd
add
test
cs
ljmp
inc
or
ret
nop
mov
bswap
lretw
cld
cs
push
mov
push
clc
add
push
cmp
sbb
xchg
clc
add
insb
fwait
lods
add
pop
sub
mov
xchg
mov
fsubl
test
mov
push
imulb
pop
xchg
ja
int3
repnz
mov
adc
mov
xor
xorl
fs
mov
mov
xor
imulb
rol
xlat
adc
xchg
mov
fs
lock
repnz
movsb
sar
ds
shl
daa
loope
mov
out
cmpsb
not
mov
add
hlt
inc
adc
bound
or
icebp
fisttpll
pop
ds
int3
adc
lds
bound
inc
lcall
push
lods
inc
xor
and
insl
dec
xlat
cmp
and
es
add
test
insl
adc
sub
sbb
adc
xor
xlat
imul
shll
xchg
and
xchg
push
cmp
dec
jbe
cmpsb
xchg
pop
mov
enter
and
add
xchg
out
arpl
data16
int
push
mov
inc
dec
inc
jp
gs
add
inc
test
xlat
mov
lds
mov
jmp
and
imul
in
js
cld
cmc
jne
or
jge
lahf
bound
dec
xchg
sub
push
mov
sub
add
xchg
bound
imul
xor
mov
lahf
jmp
mov
loope
cmc
inc
add
jb
xchg
cmp
sbb
repnz
jne
das
mov
stc
xchg
ffreep
lahf
lock
adc
sbb
subb
leave
or
mov
sub
idivl
mov
sub
scas
add
jo
pcmpgtb
xor
insb
jmp
hlt
ret
cmp
icebp
xor
pushf
js
push
pop
sbb
fdivrl
imul
push
cmovbe
gs
pop
or
jb
cmp
lods
adc
andl
cli
dec
inc
stos
lcall
enter
or
and
mull
adc
or
add
test
and
pusha
cmp
insb
aam
add
jae
sub
data16
js
cmp
mov
push
cmp
addr16
ja
jmp
fs
loope
or
or
or
sbb
jle
and
repnz
jecxz
inc
push
mov
cld
add
movb
mov
add
add
or
in
fwait
fs
xchg
mov
hlt
add
add
cli
lret
in
xor
or
push
add
movups
sbb
testb
imul
in
stc
je
sub
repz
test
sub
ds
jecxz
push
or
dec
xchg
sbb
es
std
pop
push
add
adc
ss
popa
clc
jl
faddl
mov
arpl
scas
les
out
xchg
jns
mov
mov
and
add
fmuls
cmc
cmp
ljmp
cld
roll
pop
xor
orb
outsb
cli
inc
gs
push
push
loope
cmp
jmp
sub
or
pop
lret
lret
icebp
xor
ret
cld
hlt
adc
loope
and
adc
test
push
ds
loopne
mov
cltd
lock
and
notl
adc
xor
xchg
lock
lcall
adc
push
xor
scas
cmpsb
add
loope
ret
sbb
xchg
adc
out
in
jl
and
test
pop
outsb
and
in
movsl
jge
fcomi
aam
mov
adcl
addl
sbb
cmp
add
xchg
inc
and
mov
std
enter
add
sub
movsb
or
fs
xor
enter
inc
add
popa
inc
shl
in
adc
add
or
stc
pop
popa
adc
push
push
add
or
sti
das
dec
js
or
aad
push
pop
add
inc
sub
push
add
xchg
sub
popa
hlt
cmp
fdivrp
pop
test
scas
cmp
je
in
xlat
xchg
jns
push
cli
loopne
jbe
push
inc
push
stc
shlb
movsb
pushl
mov
lahf
jg
mov
add
jmp
inc
add
in
xchg
and
test
popf
xor
seto
and
jge
andl
cltd
sbb
dec
in
mov
mov
mov
mov
cmpl
repz
cmp
or
arpl
js
test
std
or
and
iret
lret
cmc
scas
sub
int
sti
adc
cmc
adc
pop
into
leave
aad
call
sbb
mov
sbbl
stos
xchg
add
cmpsb
xchg
test
xor
pop
test
in
sbb
push
lock
dec
and
dec
add
pop
aam
add
mov
cli
js
loope
stos
jne
cmc
testl
add
out
sub
repz
pop
mov
push
movsb
inc
fdivs
loope
into
xor
ljmp
shl
cli
cmp
pop
mov
mov
mulb
mov
out
jge
aaa
imull
inc
mov
test
in
jg
sbb
aad
sbb
push
data16
enter
inc
mov
scas
jg
sbb
cmp
imul
inc
and
add
lret
rolb
pop
std
inc
insb
pushw
sub
std
mov
es
fxch
cld
mov
push
xchg
dec
out
jno
add
or
or
push
push
inc
jno
inc
sbb
or
or
cwtl
js
mov
pop
inc
pop
popa
add
and
pop
out
fs
dec
push
mov
out
pop
jg
fdivrs
imul
insb
or
outsl
xor
daa
and
sarb
mov
inc
dec
fs
mov
sbb
add
shr
mov
lcall
aas
lahf
or
inc
xchg
cmp
and
inc
mov
sbb
jbe
negb
xchg
bound
push
dec
aas
stos
push
pop
aaa
fs
and
clc
jle
bound
xor
xchg
cld
cs
je
icebp
cli
add
aas
inc
out
cmc
iret
or
xchg
fisttps
xchg
clc
call
sub
mov
das
mov
outsb
pusha
shlb
icebp
jne
fsubr
xchg
inc
or
mov
jbe
and
paddsb
or
mulps
inc
push
jbe,pt
lods
das
cli
jge
frstor
dec
test
stc
sub
dec
add
add
imul
sub
fstl
inc
popa
jno
or
inc
outsb
and
loopne
pop
and
cmp
push
push
int3
fidivs
or
cmc
or
cmc
or
pop
ret
and
add
arpl
mov
lock
cld
push
pushf
adc
cmpsb
add
mov
push
mulb
mov
andl
icebp
jecxz
dec
arpl
pushf
add
cmp
xor
movsb
mov
inc
addl
lods
jb
xchg
adc
mov
jb
cmpsl
cld
xor
xor
es
add
push
sub
mov
cld
push
xchg
in
mov
push
aam
cmc
dec
mov
repz
das
hlt
jb
incb
test
nop
jle
push
lods
and
xor
aad
aas
lods
jbe
xor
pop
int
jle
mov
sti
push
push
int3
idiv
outsb
mov
xlat
push
jle
add
xchg
sub
int
sbb
jnp
pop
flds
xchg
mov
push
push
icebp
cmpb
mov
and
scas
insb
xchg
or
hlt
div
addr16
jno
xchg
js
call
hlt
add
ret
hlt
push
into
cld
inc
cmpl
gs
arpl
add
xor
popf
pop
xorb
out
test
sub
into
mov
iret
and
xor
popa
or
xor
push
mov
adc
in
xchg
jmp
cmp
aad
xor
repnz
mov
adc
xchg
daa
cs
mov
loop
add
call
mov
lret
pusha
inc
sub
cmp
mov
test
fwait
add
stos
fwait
inc
aad
out
xchg
je
bound
out
cld
and
pop
cmpsb
in
jbe
arpl
daa
adc
add
dec
mov
bound
loopne
loop
ds
lock
in
test
fs
shll
xor
mov
add
fldcw
iret
bound
push
in
orl
mov
sbb
test
sub
jae
add
pop
sbbb
call
sti
push
inc
push
sub
inc
out
cmc
pop
negb
cmpsl
arpl
add
out
add
fwait
xacquire
shll
inc
add
jl
jb
lds
nop
sub
sbb
or
add
in
xchg
sbb
add
adc
idivl
mov
add
test
or
adc
cmc
pop
and
mov
ffree
insb
add
aas
movsb
out
and
add
inc
xchg
mov
test
in
jne
add
and
sahf
or
pop
outsb
fisubrl
add
inc
mov
push
repnz
inc
cld
jge
in
fs
out
dec
add
mov
sub
imul
scas
cmp
fidivrl
in
hlt
imul
iret
sbb
shll
sbb
in
and
call
jo
and
lret
adc
sub
jp
add
ja
push
mov
pop
or
cmp
int3
mov
fs
mov
movb
or
aam
or
lea
xor
daa
adc
push
inc
sti
scas
cs
data16
out
nop
add
icebp
or
xor
push
sti
pop
std
fiadds
sahf
fidivl
pop
push
insl
adc
repz
addl
pusha
dec
pop
dec
loopne
and
out
and
mov
pop
xchg
mov
ret
lods
add
cmp
push
xor
sbb
daa
cmp
add
int3
inc
out
sub
pushf
xor
jbe
jb
je
addr16
ds
pop
jbe
mov
shlb
xchg
insl
adc
dec
lret
mov
add
push
testb
lock
adc
and
andb
pushf
jmp
iret
rcl
idivb
cmpsl
arpl
or
out
dec
jmp
mov
lea
mov
xor
ds
shll
fstpt
stc
or
jmp
ret
leave
fs
scas
mov
jae
cmpsl
divl
das
outsb
mov
insb
std
test
std
stc
inc
mov
and
sub
lods
je
and
mov
pop
push
out
loopne
nop
lods
out
push
inc
cmp
mov
sub
fisubs
inc
mov
sarb
imul
xchg
jmp
loope
insb
add
adc
add
fcompl
mov
mov
test
dec
add
cmp
mov
mov
cmp
or
push
mov
add
pop
arpl
aas
or
lds
add
jl
sbb
inc
and
cmc
cmpsl
dec
xchg
icebp
nop
mov
arpl
jae
fs
dec
fiaddl
xor
aam
mulb
les
add
hlt
adc
mov
and
popf
sti
mov
in
mov
jnp
das
adc
cmp
mov
mov
dec
mov
adc
imul
fs
xchg
mov
call
out
shll
fwait
sub
int
and
cmp
xchg
or
inc
gs
adc
xchg
push
cmp
call
dec
fs
shrl
pop
add
jecxz
sub
mov
in
mov
shl
or
lock
fs
cwtl
out
push
cli
js
movsb
inc
ror
mov
lcall
pop
pop
aas
sub
and
push
lock
or
cmc
negb
add
insl
in
call
xor
xor
mov
and
xchg
sub
inc
scas
adc
js
inc
gs
test
push
movsb
or
lock
cmp
cmpl
or
pop
xchg
filds
add
das
fs
and
test
and
lods
popa
inc
push
mov
cld
sbb
mov
push
dec
cmc
outsb
movsb
idivb
js
jns
push
add
or
or
mov
xchg
sub
jmp
shll
les
adc
sbb
ja
xor
inc
fsubrs
out
or
inc
jg
fisubs
rcr
faddl
adc
repz
cmp
add
fs
rcl
xor
ljmp
push
out
pop
test
fisubl
pop
or
in
mov
testb
hlt
mov
xor
lahf
gs
std
pop
stc
jb
adc
das
or
movsb
addr16
ja
in
in
dec
leave
inc
pop
fs
adc
imul
sbb
xchg
fdivl
dec
call
outsb
inc
mov
std
and
pushf
or
mov
clc
pop
icebp
add
dec
cmc
sub
fs
push
repz
and
push
fs
fnstenv
loop
dec
cwtl
pop
mov
testb
mov
or
hlt
add
mov
test
xor
nop
and
cmp
inc
dec
add
sub
sbb
fistps
out
sub
jne
xchg
lret
rorb
adc
into
jnp
cmp
rolb
into
xor
xchg
cmp
stc
mov
adc
sub
test
popf
clc
mov
jecxz
mov
mov
jmp
movsb
repz
pop
aad
ss
test
push
jmp
jno
mov
shlb
cmp
lock
add
imul
shlb
les
sbb
lods
cli
jae
sbb
test
repnz
mov
add
cld
lret
aaa
and
pop
add
pop
iret
mov
dec
lret
arpl
mov
daa
pop
or
add
xchg
imul
mov
adc
data16
stc
xchg
repnz
and
movsb
sub
stc
and
jp
push
cmp
xor
push
jno
adc
sub
test
aas
xor
mov
sarl
pop
orl
push
jnp
push
xchg
add
cmc
shl
repnz
push
nop
xor
push
repz
adc
xor
dec
push
rcl
push
cmp
pop
cmpsl
shl
adc
mov
inc
push
mov
sbb
inc
mov
xor
mov
aad
jecxz
je
jmp
adcb
dec
cmpsb
cli
dec
dec
repz
and
mov
fninit
loopne
add
sbb
mov
imul
adc
cmp
jp
jl
xor
fstl
add
cmpsb
call
fs
ss
out
inc
push
cmp
inc
lret
ret
mov
mov
repnz
adc
mov
cmp
xlat
add
mov
adc
lcall
mov
adc
mov
sahf
mov
or
adc
inc
int
jg
gs
ret
mov
push
in
lret
fs
data16
jb
test
in
lret
pop
shll
mov
stos
iret
cmp
jo
push
push
fildll
mov
dec
add
dec
iret
add
inc
lret
outsl
inc
xor
lods
mov
jno
addr16
adc
in
sub
xor
fs
mov
cmp
call
sbb
cmp
xor
cvtps2pi
pop
cld
rorl
jecxz
mov
arpl
cmc
and
adc
hlt
mov
loop
int3
cli
fstps
dec
stc
in
mov
lcall
add
std
xor
push
aam
mov
or
or
mov
jo
cmc
aad
stos
mov
xchg
dec
adc
call
adc
xchg
or
ds
nop
push
push
mov
shr
push
out
jge
out
push
push
dec
stc
mov
sub
sbb
insb
mov
inc
je
loopne
clc
jae
insb
sub
jmp
data16
push
or
push
cmc
lret
or
cmpsb
mov
or
mov
pop
dec
cmc
fstps
fidivrs
ss
pop
lea
test
or
xchg
gs
inc
lea
and
das
xor
add
cmpb
aam
fistpll
xor
je
dec
inc
push
xchg
test
je
push
mov
dec
mov
ljmp
xchg
lock
fs
pop
mov
push
dec
mov
pushf
in
gs
stc
cmc
dec
mov
mov
xchg
and
xchg
adc
mov
xor
hlt
es
cmp
out
in
jp
je
pop
add
add
push
cmc
fisubrl
and
arpl
ret
and
sub
and
inc
cs
outsl
fs
mov
loop
xor
fst
jae
pop
push
push
cmc
hlt
mov
bound
xchg
add
fiaddl
jmp
icebp
dec
mov
add
outsl
mov
or
sbb
mov
xchg
add
mov
cld
xor
and
sbb
cmc
in
imul
hlt
aam
sub
clc
inc
sbb
push
mov
inc
or
and
jmp
loop
pop
mov
mov
ljmp
lahf
stc
repnz
cmp
out
push
adc
jmp
xchg
ja
jmp
pop
insb
lahf
xchg
push
jp
push
leave
sbbb
sub
dec
sub
xor
js
xchg
insb
scas
add
fidivrs
outsb
cmpsb
or
cs
cs
xorb
fstl
jp
sbb
cmc
movsl
mov
into
mov
or
pop
lret
pop
inc
xor
sub
jb
inc
xchg
notb
cltd
pop
adc
nop
push
add
push
data16
push
lock
inc
add
mov
lds
mov
cmp
dec
stos
divb
fldl
add
lds
pop
pop
adc
cmp
mov
aam
and
cli
xlat
sub
ret
pop
loop
xchg
mov
idiv
sub
movsb
adc
lock
les
fstps
xor
shrb
mov
in
xchg
fldt
pop
or
mov
xor
sub
jle
add
and
dec
cmp
push
and
inc
mov
jne
cmc
sub
xchg
push
or
and
fs
stos
fs
xor
xor
data16
in
cli
aaa
in
repz
int
adc
adc
clc
xchg
sub
sahf
jb
into
flds
or
testb
lea
jmp
mov
jns
popf
adc
fs
cmp
outsb
notl
insl
sub
out
into
pop
popa
fsubr
mov
fadds
xchg
movsl
sub
or
jle
test
cmp
add
imul
rol
fildll
fs
shrb
fsub
out
xor
int
add
test
mov
add
icebp
sti
add
test
in
wbinvd
sub
std
aad
rolb
add
loope
or
fdivrl
sbb
inc
lock
imulb
inc
push
cli
add
inc
mov
and
sahf
stos
push
or
shrb
add
jb
mov
sub
xor
sub
int
movsl
or
dec
subb
inc
jl
popf
mov
mov
add
or
push
push
cli
xor
and
push
aad
mov
and
sbb
sbb
jb
dec
pop
sbb
les
push
push
outsl
aas
push
push
addr16
loop
popa
pop
add
pop
add
fs
cmp
sub
sub
stos
out
lock
pop
adc
not
lret
adc
aam
jne
or
inc
pop
outsl
fs
std
call
int
push
push
imul
add
shlb
lock
int
mov
xchg
sub
aas
roll
es
and
xchg
jmp
or
lods
insb
mov
repz
mov
xchg
xchg
roll
dec
add
sub
pop
sbb
imull
and
xchg
mov
pop
outsb
in
mov
jb
dec
add
jecxz
subl
mov
into
push
mov
or
fisttpl
dec
fmull
fsubrl
ret
repnz
pop
xchg
aad
out
adc
out
add
and
mov
leave
test
cmp
sub
sbb
jmp
bound
fbld
mov
push
ds
push
mov
or
sti
mov
popa
cmpsb
add
std
inc
add
filds
add
mov
xlat
or
mov
cmpsl
les
fucomp
rcrb
cmp
in
mov
push
xor
mov
icebp
enter
push
out
in
lret
push
imull
inc
outsb
pop
dec
icebp
mov
scas
mov
jg
mov
cmpsb
es
or
sbb
icebp
or
fildl
sbb
mov
data16
lds
adc
rorl
jp
mov
sbb
lods
andl
das
out
jbe
cli
cmp
jbe
imul
add
arpl
jmp
add
fsubl
jbe
or
sbb
or
lret
cmc
xchg
stos
cmc
push
mov
testl
push
in
sbb
lret
sbb
loope
xor
cmp
fs
mov
push
arpl
mov
cmp
daa
es
mov
xchg
sbb
ds
xorl
dec
std
xchg
ret
jl
testl
data16
subb
in
sbb
jecxz
sbb
add
sub
pop
popf
out
mov
dec
add
sti
fisubs
test
sbb
pop
pop
test
out
push
sub
sub
mov
mov
sti
popf
scas
xchg
and
lret
jns
push
sti
push
push
jle
push
andl
out
xor
xor
loop
add
add
jge
sbb
outsb
bound
sbb
and
add
shl
jge
jbe
cmpsb
les
and
ret
scas
mov
add
or
inc
out
add
add
lahf
ljmp
or
push
lret
jle
fisubl
out
mov
jne
imul
pop
add
sbb
jg
fs
out
cmc
mov
pop
add
mov
jmp
out
in
cmp
add
adc
roll
int
jno
fsubl
cld
sub
repnz
test
stos
pop
rcrl
jmp
pop
pop
add
aad
les
add
lea
or
into
or
cld
jmp
ss
pop
xchg
repnz
lods
in
pop
mov
je
add
sub
jbe
xor
pop
sub
mov
mov
addr16
dec
or
cltd
pop
int3
cld
sti
icebp
and
out
cmc
add
subl
or
pop
pushf
int
jecxz
add
jno
adc
add
rorb
jle
jnp
and
add
aaa
scas
jne
push
pushf
xor
gs
mov
cmp
jle
out
mov
add
loopne
adc
inc
push
scas
int
stc
sbb
lahf
cmp
imulb
insl
mov
das
in
shl
lret
orb
pop
fs
push
sbb
daa
jns
leave
rcr
clc
mov
nop
fistpl
inc
xlat
in
popa
lret
mov
int
adc
cmpl
das
xchg
or
add
inc
jb
inc
das
popf
sub
xor
movsl
out
call
mov
pushf
std
pop
jge
sub
rcrl
outsb
ss
imul
add
hlt
jno
or
insb
dec
pusha
add
lds
fstl
jmp
mov
jecxz
jle
insl
xor
enter
addr16
xchg
loop
sub
mov
lock
and
aam
dec
ret
lods
add
mov
sti
mov
mov
dec
rcll
pop
mov
push
scas
and
cmp
sbb
jg
add
pop
loope
fisubrs
test
pushf
add
nop
pop
adc
jmp
sbb
clc
add
add
test
adc
std
xchg
testb
fimull
sub
adc
arpl
movb
scas
sahf
cmpsb
sbb
pop
ljmp
sbb
and
or
push
in
or
pop
mov
xor
push
sub
sbb
sbbl
and
test
std
lcall
push
fistps
lds
add
repz
ss
jo
xchg
add
popa
cmpsl
mov
std
and
mov
jmp
sub
popf
lods
fdiv
inc
roll
in
jl
mov
addr16
ret
sarl
mov
loope
imul
roll
movsl
add
imul
inc
call
add
movsl
push
in
sti
out
push
push
fs
dec
aaa
shlb
inc
lcall
xchg
mov
xor
cmp
xor
imul
mov
adc
inc
outsb
and
fwait
sarb
and
scas
inc
push
popf
out
mov
movsb
into
adc
add
xor
dec
jno
fcmovbe
mov
xchg
mov
pusha
insl
jle
xor
sbb
mov
mov
pop
fnstsw
add
xor
pushf
push
sub
push
mov
add
pushf
or
inc
cmpsb
fnstcw
addr16
aam
push
arpl
lret
aam
adc
cmc
sbb
sub
subl
add
inc
out
inc
fs
das
pop
mov
adc
lcall
push
adc
arpl
adc
test
push
add
bound
arpl
imul
jmp
jg
cmp
cmp
xchg
test
cmpsb
adc
lea
scas
xchg
fdivs
movsl
in
xorl
add
add
dec
pop
je
ret
jb
cmc
push
add
add
jne
movsl
add
adc
sub
sbb
push
repnz
mov
ljmp
add
insb
mov
test
pop
xchg
push
lret
ds
push
sbb
in
push
mov
aam
repz
movsb
or
lret
in
and
icebp
jne
adc
fs
shrl
out
or
fcompl
mull
out
movsb
popa
divb
inc
or
aad
lock
jmp
xchg
scas
aaa
js
push
mov
adc
cmp
icebp
int
orl
mov
movsl
xor
push
cmp
out
add
movsl
adc
cmp
jne
push
inc
sbb
jge
jnp
lret
std
add
push
aad
inc
fs
hlt
xchg
sbb
daa
fldl2e
sti
iret
sbb
pop
testb
das
mov
rorb
xchg
and
cmp
sbbb
stc
inc
push
mov
xor
jns
add
adc
inc
pop
cmp
mov
mov
add
inc
pop
dec
push
fisttpl
or
pop
in
adc
cmpl
das
and
and
xor
data16
ljmp
inc
dec
mov
std
add
fcomi
ds
adc
aaa
add
imul
iret
push
add
inc
iret
aas
orb
xchg
mov
cmc
insb
sbb
repnz
fstpt
add
cmpsb
adc
xor
imulb
xlat
dec
push
incl
out
out
fs
and
mov
loope
aam
mov
in
adc
mov
cmc
mov
jne
pop
add
mov
dec
mov
jo
cmp
cmp
ss
push
add
cmp
int
mov
push
negb
mov
sub
xchg
int3
mov
out
xor
push
ret
imul
dec
cltd
fwait
inc
cmp
or
sahf
dec
notl
ja
cmpsl
jno
test
and
js
inc
sub
inc
fdivs
inc
xor
add
lret
add
clc
sbb
stc
mov
int
inc
gs
stos
or
hlt
idivb
mov
outsl
ret
aad
lods
or
fnsave
dec
arpl
hlt
je
xchg
out
clc
repz
and
arpl
lcall
stos
push
pop
xchg
lcall
stos
popa
pop
insl
inc
in
test
aam
idivl
iret
and
repnz
sti
movsb
add
xchg
ret
adc
pop
inc
mov
aaa
xor
sti
lcall
inc
add
sub
in
inc
mov
or
pop
inc
cmp
sub
mov
add
lret
dec
lcall
add
std
jns
cmp
in
mov
movsb
mov
xchg
fisubs
push
aas
cwtl
loope
add
ror
jb
cmp
out
lods
add
push
adc
fdiv
repz
pop
popa
push
jnp
jl
mov
pushl
dec
out
or
jno
push
je
xchg
cmp
pop
in
mov
std
testb
out
or
andl
push
sti
iret
push
out
mov
xchg
loop
repz
push
stos
out
ja
pop
pop
in
dec
mov
adc
xchg
shll
imulb
hlt
mov
cmp
les
fs
sbb
jo
add
insb
xchg
shl
fs
lcall
popa
jecxz
arpl
rcrl
gs
xor
xor
rclb
xchg
add
sub
xorl
aam
mov
push
dec
mov
add
mov
mov
loope
lds
daa
insb
std
mov
pusha
ss
jb
push
xor
clc
add
jl
jnp
pop
sbb
mov
loopne
loope
pop
leave
sub
jle
cmp
insl
push
mov
syscall
pop
or
pop
test
movsl
test
fdivrs
adc
repnz
and
arpl
scas
inc
push
mov
in
fistps
in
adc
or
and
stc
in
fstpl
add
push
negb
xor
std
addl
mov
loopne
xor
arpl
add
mov
jbe
das
or
fs
imul
mov
jbe
dec
jbe
pop
xchg
add
div
dec
push
push
es
adc
jmp
and
dec
mov
repz
test
iret
js
sti
adc
cld
jmp
jmp
pop
and
sbb
push
lods
mov
data16
add
fnstsw
add
lock
imul
inc
je
xchg
hlt
cmc
pop
mov
fiaddl
popf
and
daa
fs
in
ss
jge
push
imul
push
jg
int3
xor
iret
cs
xorl
sahf
ja
incb
rorb
in
std
jmp
outsl
ja
and
scas
pop
cmpsb
or
mov
sbb
cmc
jns
mov
fs
mov
and
clc
pop
ljmp
xor
ds
gs
cmc
mov
ss
mov
jle
cmp
cmp
or
rolb
pop
popa
pop
out
mov
add
out
sarl
data16
data16
cmpl
inc
mov
loopne
sub
fs
call
add
pop
jg
mov
jle
fsub
and
int
fs
test
mov
fs
insb
add
ljmp
adc
cmp
push
inc
subb
lds
lea
das
repz
sar
lds
add
std
inc
push
out
inc
pop
lret
xchg
adc
inc
loopne
mov
cmp
or
out
add
xor
inc
stos
fwait
mov
jg
mov
xchg
pop
pusha
push
dec
into
in
mov
pop
cltd
lret
dec
push
sbb
xchg
mov
or
loop
mov
mov
pop
dec
ss
xor
mov
mov
int
sbb
xchg
loope
lret
dec
jb
js
stc
jae
adc
add
jge
out
aaa
inc
testb
inc
addl
mov
mov
jmp
shll
loop
in
cli
insl
sub
ja
jle
loope
pop
pop
in
ljmp
or
fmul
les
out
add
lods
mov
jp
pop
std
jnp
push
xchg
mov
and
std
inc
pop
popl
inc
pop
jnp
add
push
or
subb
es
jg
mov
in
sbb
clc
arpl
inc
rcrl
and
orl
xchg
adc
push
push
ds
popf
movb
mov
add
out
sub
idivl
mov
sub
add
add
jmp
decb
cmp
mov
movb
cmc
aad
mov
in
pop
push
push
cmc
adc
cmc
xchg
push
std
xlat
xchg
je
mov
ds
cld
cmc
mov
test
push
cmp
loope
shll
cmp
xchg
scas
add
sub
jae
add
mov
xor
test
test
enter
jge
sbb
inc
addr16
xchg
pushf
adc
and
pusha
adc
hlt
outsl
sub
decb
aad
imul
ret
add
inc
add
xchg
adc
sub
pushf
pop
jae
dec
push
cwtl
jbe
xchg
loope
add
xor
mov
jp
cli
add
jnp
inc
repz
mov
add
sub
jb
add
hlt
push
mov
pusha
mov
repz
cmp
jns
push
adc
and
lods
lods
and
es
lock
lret
fisttps
cmc
jl
insl
fistpl
mov
lret
pop
jns
out
mov
in
sahf
pop
in
fisttpll
mov
ficoms
adc
stc
mov
xor
fiaddl
or
daa
xchg
mulb
rcl
loop
std
ds
push
inc
push
xchg
sub
cmp
fs
sbb
adc
cmc
pop
pop
jo
add
fs
push
jbe
jno
push
into
sub
shll
cltd
sbbl
pop
dec
cmp
inc
push
ss
xchg
aam
push
jmp
xor
cld
mov
frstor
test
sbb
pop
nop
inc
idivb
dec
add
arpl
xchg
mov
adc
xchg
xchg
arpl
cltd
or
sahf
repz
das
jbe
imul
rcrl
jnp
arpl
popa
add
idivb
pop
mov
mov
sbb
mov
enter
and
arpl
add
and
outsl
dec
inc
in
nop
cmp
inc
fisttpll
cli
adc
mov
arpl
and
push
movsb
xchg
push
inc
stos
repz
sbb
cmc
flds
mov
or
or
adc
lret
lcall
mov
popa
inc
push
push
jge
jno
sbb
sub
lret
or
lods
lret
iret
insb
mov
jne
roll
sub
shl
out
jge
xor
fs
add
mov
clc
cli
add
jg
or
mov
add
xorl
mov
cld
add
dec
jp
mov
imul
cmp
cmp
jecxz
ljmp
lea
inc
add
add
out
dec
pop
negl
fs
adc
xchg
adc
lret
push
add
imul
cmp
inc
lods
loopne
insb
inc
psadbw
xchg
push
pop
add
jmp
pop
fs
adc
cmc
jg
bound
lret
clc
repnz
xchg
mov
jne
std
aad
sbb
inc
jp
jmp
int
loopne
lods
sub
mov
pop
add
push
inc
lds
hlt
int
rcrl
xlat
sbb
push
cmp
fwait
jge
jbe
push
cmpsb
dec
mov
and
or
xchg
and
cmp
setns
daa
xchg
testb
and
lret
sub
out
or
and
add
lods
mov
cs
ss
movsl
jae
add
clc
push
or
jmp
jle
fcomi
add
sub
mov
pop
add
pushl
fbstp
sub
popf
inc
cli
jns
mov
shrl
jns
sbb
jmp
adc
lock
cli
test
repz
mov
sub
mov
inc
loope
stc
rorl
push
xchg
ret
outsb
aas
mulb
sbb
adc
push
xor
aam
ds
mov
cwtl
mov
gs
es
mov
stc
push
xchg
xor
mov
das
lret
push
xchg
out
imul
in
sub
fs
jb
int3
inc
into
fdivrl
sub
xor
cld
cmc
ss
adc
outsb
addr16
sahf
testb
jecxz
push
ljmp
inc
orb
sub
test
xor
enter
add
lea
dec
aad
mov
jge
pop
xchg
inc
adc
jne
bound
iret
enter
mov
test
sub
gs
lock
adcl
mov
repnz
mov
dec
inc
pushf
dec
pop
mov
in
xlat
sub
adc
xchg
data16
pop
leave
xchg
mov
stos
adc
push
mov
bound
mulb
push
push
sbb
addb
cmp
xor
fsts
ret
add
push
sarb
das
int3
sahf
gs
scas
cmc
adc
xchg
nop
lret
inc
ljmp
stc
aas
or
stos
pop
xor
fwait
out
repz
pop
in
and
push
or
shrb
dec
popa
mov
dec
and
jne
idiv
dec
mov
dec
cmp
aaa
mulb
ret
outsl
ds
jns
mov
sti
dec
fdiv
mov
push
adc
mov
lcall
inc
add
dec
bswap
lret
mov
in
test
fs
mov
int
mov
pushf
jnp
cltd
cmp
test
pop
mov
add
xchg
ds
push
inc
add
ss
aam
sbb
lds
imul
cmc
push
cmpsb
insl
loop
icebp
popf
ljmp
push
aam
out
inc
cmc
cmp
adc
dec
add
add
rolb
cli
and
daa
xchg
jle
inc
cli
arpl
sti
rolb
push
add
cld
in
mov
inc
out
jno
add
mov
pop
popa
loopne
push
xchg
jne
les
or
insl
faddl
idivl
xchg
ja
mov
popa
popa
jmp
into
mov
inc
mov
xorl
push
inc
sti
jb
jle
xchg
xchg
mov
add
fimull
inc
mov
loopne
testb
loopne
les
inc
pop
sub
stos
dec
pop
ljmp
scas
mov
pop
push
std
dec
mov
sar
cli
jg
inc
fs
mov
add
in
hlt
pop
lea
aad
cmp
scas
fs
mov
aam
pop
imulb
mov
jne
push
mov
and
jno
xchg
fs
rolb
inc
add
sbb
inc
sti
inc
mov
out
popf
jmp
cli
movsb
jo
sbb
add
outsb
iret
shl
and
out
adc
adc
pop
and
cmpsl
mov
in
or
sub
out
jecxz
es
inc
shrb
add
cmpsb
notb
xor
and
lock
subl
ss
addb
and
mov
mov
outsb
repnz
add
hlt
addr16
pop
ljmp
iret
ds
sub
and
sub
clc
das
and
or
out
stos
popf
aas
push
iret
add
and
pop
ss
idiv
mov
mov
mov
and
dec
enter
push
inc
mov
gs
rolb
mov
imul
repnz
arpl
in
mov
outsl
sbb
loop
cmpsb
mov
sarb
inc
data16
cmc
and
pop
dec
lds
cltd
rcrl
jmp
sbbb
rcl
mov
inc
adc
inc
xorl
hlt
test
inc
xor
gs
mull
push
dec
arpl
adc
mov
jg
lds
jp
sahf
mov
or
repz
jbe
cwtl
push
sahf
scas
fs
push
mov
daa
arpl
push
icebp
dec
push
arpl
lcall
movsl
inc
ss
sbb
adc
je
or
mov
gs
leave
fdivs
add
loop
stc
icebp
fsubl
testb
cwtl
mov
xchg
sub
das
insb
or
testb
add
pop
xor
add
cmpsl
mov
add
cld
sbb
mov
cmpsb
cmp
js
add
mov
xchg
sbb
inc
or
ret
add
jno,pt
int3
push
cmpsb
pop
mov
sub
stos
pop
inc
test
ret
sub
daa
movsb
bound
pop
and
xor
cltd
dec
push
test
jl
mov
xor
mov
fwait
pop
scas
repz
push
mov
inc
dec
jbe
or
shlb
in
cli
mov
test
or
cli
inc
add
test
test
int3
shlb
testl
jno
je
pop
jne
jmp
jmp
add
jge
jns
dec
inc
aad
push
inc
add
and
mov
and
pop
add
repnz
dec
sti
jg
or
push
fs
xor
xchg
stos
flds
fsub
xchg
lcall
rcl
sbb
repz
jmp
inc
lock
and
test
hlt
mov
sarb
test
shll
and
mov
stc
add
fiaddl
stos
jae
in
lock
sti
cmc
out
add
pusha
dec
push
cmp
jmp
jae
inc
xor
sub
cli
add
add
aas
aaa
hlt
mov
or
nop
or
js
add
in
repz
pusha
add
aas
add
sahf
mov
adc
inc
pop
lods
dec
mov
mov
dec
inc
out
pop
insl
pop
arpl
adc
popf
jecxz
aad
cltd
or
movsl
in
cld
add
hlt
in
ds
push
jns
outsb
xor
jmp
std
bound
xchg
fs
lock
in
mov
sub
adc
mov
out
adc
cmpsl
insb
ja
test
decb
je
test
mov
jecxz
aad
adc
cld
aaa
adc
xor
les
cmp
inc
out
sbb
call
xchg
std
rcr
fdivr
das
mul
inc
test
cmpsl
sub
loope
inc
sbb
xor
add
xchg
inc
es
lret
inc
stos
fs
leave
pop
cmp
jmp
or
cmpsl
push
pop
out
test
sbb
dec
jb
negb
dec
cmp
sbb
add
and
lock
or
jmp
cmp
sbb
and
popl
divb
mov
xorb
mov
addr16
mov
repz
clc
push
or
hlt
mov
pop
mov
push
cmp
push
mov
fwait
leave
out
xor
cltd
or
jb
lea
insl
fldenv
mov
jl
clc
push
sub
pop
outsb
jl
and
shr
sbb
pop
data16
cli
aad
out
add
cmc
addr16
lret
fldl
sahf
fwait
test
xor
xchg
in
ror
movsb
jmp
push
inc
stos
xchg
rcrb
sub
cld
lods
shlb
cmpsl
add
les
jmp
xlat
lods
cmp
fildl
pushl
sub
stc
lods
and
mov
shlb
inc
rolb
mov
pop
jp
add
push
jbe
jg
sbb
push
call
jl
jnp
int
lock
es
mov
jecxz
add
mov
popf
cmc
xchg
xlat
adc
jno
ljmp
jbe
loope
scas
xchg
insb
fisttpll
bound
divb
pop
push
pop
push
aaa
mov
xchg
sub
bound
adc
xchg
gs
pusha
fs
bswap
rclb
pop
add
insl
xchg
jp
push
inc
outsb
cmc
fs
fucompp
inc
out
fadds
test
sbb
testb
lret
pop
jle
pop
leave
dec
and
fxtract
jp
mov
mov
es
push
in
xor
stos
sbb
sbb
testb
mov
addr16
push
sub
sub
mov
mov
lcall
mov
xorl
sub
push
pop
lock
mov
dec
outsl
adc
dec
or
fimull
ds
mov
aam
pop
or
inc
add
dec
jmp
sbb
or
int3
icebp
clc
mov
fwait
rorb
or
mov
sbbb
stc
or
sahf
cs
mov
movb
shrb
int
into
std
mov
fildl
push
rolb
mulb
xchg
lds
fdivrs
ljmp
in
inc
aaa
call
call
sti
cmc
mov
mov
jns
testb
sub
mov
leave
inc
imul
xor
scas
orl
fdivs
sti
mov
adc
in
inc
sti
loop,pn
fs
popa
dec
mov
leave
add
cld
add
shrl
aam
adc
add
stos
inc
in
add
clc
sub
adc
incb
push
lcall
cwtl
add
xor
push
divb
lock
leave
call
test
cwtl
fs
sub
jl
jmp
outsl
sbb
mov
xor
icebp
popw
and
sbb
aad
lds
pop
jns
push
negb
sub
add
lock
mov
sub
inc
pushf
inc
and
sub
fdivr
int
xor
cmc
pop
faddl
sbb
shll
movsl
sbb
mov
hlt
sar
or
clc
test
adc
inc
add
rcr
and
lret
add
test
xchg
push
push
cli
in
lret
outsb
jg
aad
mov
jbe
sbb
or
mov
sbbb
pop
movsb
push
sub
pop
mov
insl
mov
jg
mov
push
not
das
scas
clc
and
jo
sahf
movsb
stos
repnz
adc
int3
sarl
push
or
fs
xchg
dec
aam
push
subl
cmp
mov
inc
mov
mov
sbb
cld
fstpt
and
std
hlt
xor
shll
std
call
xor
mov
pop
int
jnp
xlat
movb
nop
add
fbld
roll
and
add
aas
add
pop
or
xchg
add
mov
hlt
or
daa
fcomp
mov
cmc
orb
lock
mov
cmp
jmp
cmc
les
sub
mov
and
xchg
push
cmp
push
addr16
inc
lcall
loopne
xor
xchg
inc
xchg
loop
push
ljmp
lods
mov
jl
rorl
mov
add
rcl
rolb
addl
sbb
repnz
jne
dec
and
mov
xor
int3
sbbl
ficomps
add
dec
popa
xchg
fs
call
push
mov
jne
or
sub
sbb
xchg
add
xchg
cmpsb
ds
loope
mov
pop
xor
loopne
lcall
sti
test
dec
nop
xorb
or
imull
mov
and
ror
xchg
cmp
add
adc
or
movsb
test
push
xor
dec
xchg
adc
nop
xchg
in
xor
and
cld
repz
ja
jecxz
jo
scas
fisttps
cmp
jecxz
push
into
add
stos
mov
mov
mov
jg
fs
scas
mov
mov
xchg
and
xor
clc
hlt
imul
and
and
push
add
test
sbb
fimuls
mul
add
jmp
mov
and
js
jne
push
test
mov
call
in
inc
leave
sub
gs
out
dec
inc
out
inc
add
pop
lret
aas
adc
andb
cmc
popa
das
mov
add
mov
loope
sub
insb
xchg
xor
sbb
fs
cmp
loopne
sbb
repnz
xchg
loop
addr16
lds
or
jge
xor
push
lock
in
in
int3
xchg
daa
call
or
cmpsb
inc
cmp
adc
shl
jle
mov
mov
inc
cmp
lret
add
jecxz
aas
push
cmp
or
or
mov
rorb
gs
add
xchg
jle
in
push
data16
add
push
arpl
mov
add
add
inc
add
cmp
jg
das
pop
movsb
sbb
push
mov
test
mov
push
je
test
popf
mov
or
fwait
or
inc
fs
xchg
int
xchg
not
pushf
add
inc
xor
icebp
sar
shlb
test
sbb
pop
nop
lods
testb
ljmp
dec
mov
adc
mov
dec
pop
bound
cld
mov
and
add
jmp
mov
in
push
push
cmp
loope
add
in
mov
sti
push
jp
pop
add
jmp
adc
sub
cvtps2pi
je
add
mov
test
sbb
mov
in
lret
das
inc
xchg
pop
popf
loope
imulb
xor
data16
add
fldt
xchg
jmp
and
outsl
mov
mov
pusha
lret
shrl
sbb
int
daa
popa
mov
jge
add
sub
rorl
lcall
mov
dec
adc
mov
cmp
mov
fs
ret
dec
sub
xchg
movsb
sbb
test
adc
adc
pop
xchg
imul
aad
lret
faddl
movsb
xchg
push
fwait
sbb
pop
mov
and
jbe
pop
ds
outsl
fs
das
add
inc
xor
fs
aaa
pop
pop
ss
add
sub
jg
movsl
in
fildl
cwtl
adc
or
jb
push
mov
mov
xchg
outsb
fnstenv
pop
pop
jo
and
filds
cmpsl
add
or
mov
cld
cli
adc
jle
loopne
add
pop
addl
pushf
xor
cltd
insb
mov
in
xor
in
cltd
pop
test
push
sub
jle
sbb
scas
fsubs
add
mov
fdivr
inc
shrb
adc
and
out
js
sbb
in
in
and
ds
inc
xor
cs
ret
insl
sti
xchg
ja
or
xchg
ret
inc
adc
lds
sbb
inc
test
add
popa
dec
hlt
or
mov
aad
fistpl
add
outsb
push
insb
fstl
testl
mov
inc
insl
jp
push
lea
jnp
in
ds
xor
ret
fs
scas
cmp
mov
push
xchg
shrb
fs
in
sbb
pushf
cmpsb
cmp
add
jno
pop
icebp
sub
sub
mov
rsqrtps
loope
addl
push
dec
mov
xor
inc
fdivrs
fisttps
sub
shrb
popa
orl
add
stc
add
add
into
in
and
add
pop
bound
mov
lret
and
inc
mov
push
daa
xchg
shrb
gs
cmpb
aad
jno
add
sub
mov
stos
loope
aad
sub
jne
and
lret
aaa
push
adc
pusha
inc
cmc
mov
jecxz
sbb
repz
jg
mov
mov
fiadds
mov
jp
jo
std
jns
es
sbb
xor
rol
in
sbb
mov
jnp
pop
incl
fcompl
mov
adc
jno
pop
cmp
push
in
clc
data16
mov
pop
outsl
int3
and
xchg
leave
fs
xchg
imul
xchg
data16
stc
push
add
mov
cld
test
in
push
push
shll
fs
cmc
outsb
jno,pn
mov
push
testb
lcall
stos
addb
js
xchg
lcall
pop
movsl
dec
and
xor
push
push
add
pop
test
sub
dec
xchg
inc
std
mov
test
or
dec
inc
xchg
xor
cmp
add
sub
cmp
dec
adc
cmovbe
mov
add
punpcklbw
into
movsl
mov
je
dec
ja
adc
sbb
dec
sbb
jae
mov
xchg
movsb
popa
push
loopne
les
shll
stc
std
jnp
in
inc
push
aam
mov
in
push
add
mov
add
pop
pop
adc
adc
xchg
les
in
push
bound
out
push
xor
add
mov
jb
fs
push
inc
jbe
mov
or
stos
inc
sub
pop
fwait
int3
into
xor
insb
ljmp
int3
pushl
fstpl
push
movd
jge
inc
sti
testl
add
jno
into
inc
jbe
outsl
test
jb
int
aam
push
pop
mov
incb
jle
jnp
pop
popa
clc
lea
stc
xchg
loopne
ljmp
or
es
mov
shll
cli
dec
add
lods
or
mov
and
fsts
sahf
xlat
cmp
imul
sub
icebp
fnstcw
es
jbe
sub
mull
fsubr
pop
and
dec
mov
in
shl
test
jno
bnd
testb
xchg
sub
sti
add
sbb
idivl
testb
popf
pop
or
mov
outsb
cmpsb
js
cmc
jecxz
jle
test
add
add
dec
test
fwait
cmc
mov
scas
jmp
ljmp
fiaddl
decl
xorps
fcoml
adc
test
int
cmc
fisubrs
cmc
stos
dec
and
jne
and
out
cmp
ljmp
test
adc
data16
loope
add
movsl
and
xchg
stc
out
and
movsl
sbb
bound
jno
loopne
ds
add
cmp
pop
add
pop
jecxz
rorb
mov
test
add
lea
sub
hlt
push
cmp
loop
ljmp
push
xor
aam
pop
xchg
jmp
lret
pop
or
out
add
inc
dec
adc
sbb
test
add
push
outsb
and
popf
ss
cmp
add
push
mov
add
mov
cmc
mov
test
pushf
push
add
mov
in
es
mov
lea
fisubrs
jmp
xchg
mov
idivl
je
lea
xchg
push
gs
adc
into
adcl
notb
inc
fcom
iret
iret
mov
mov
sbb
jne
pop
insb
or
adc
inc
add
inc
jecxz
sahf
repnz
mov
jmp
ja
lret
add
jno
fninit
push
xor
das
cld
pop
push
insb
sbb
out
cmp
mov
scas
mov
ljmp
gs
mov
inc
jo
iret
inc
mov
adc
stc
or
add
ja
push
mov
lock
sahf
mov
jle
and
add
and
and
inc
inc
in
or
jg
mov
pushf
adcb
test
sub
adc
sahf
lods
mov
dec
jnp
xor
lds
subl
lcall
pusha
or
ljmp
test
adc
daa
dec
and
shlb
mov
stc
and
shl
cmp
mov
jne
add
mov
or
pop
in
inc
movsb
and
sbb
shrb
stos
inc
mov
outsb
sahf
ja
cwtl
add
add
sub
lret
stc
add
add
std
pop
int3
mov
ret
fs
sbb
nop
push
mov
movsl
sub
movsb
add
adc
movsb
aam
popa
cmpsb
int3
ficoms
xchg
xor
sbb
sub
fbstp
xor
popf
icebp
ret
jecxz
jl
jne
add
popf
lock
sub
negb
rclb
or
lea
in
fs
jle
push
lcall
cmpsl
cltd
xor
rorl
cld
cltd
pop
shl
arpl
mov
adc
add
sub
add
popa
xchg
cmpsb
jne
std
lea
addb
pop
xor
push
xchg
pop
fs
icebp
jb
sbb
push
mov
pop
shll
in
in
cmc
mov
jae
mov
fcmovbe
dec
icebp
hlt
cmc
movsl
add
leave
divl
and
push
sub
ud1
push
psllw
movsb
int
arpl
inc
loopne
jbe
aam
mov
into
cltd
test
hlt
out
pop
sub
scas
pushf
rcrb
xor
xchg
sub
dec
sbb
cli
fcoml
je
mov
out
and
xor
sarb
xor
lds
cltd
dec
add
cwtl
je
or
jne
push
testb
cmp
jnp
sub
mov
mov
xor
test
push
inc
xor
notl
fiadds
lahf
push
imul
sbb
mov
cmp
out
inc
std
testl
mov
int
or
dec
mov
lahf
lcall
movsl
mull
mov
push
add
xchg
xor
add
cmp
leave
loop
xor
or
pop
pop
or
adc
pop
adc
setge
hlt
incl
es
cmc
insb
pop
sti
stos
add
add
push
fwait
lods
es
add
sbbb
fs
or
js
test
test
mov
and
mov
mov
and
inc
cmp
pusha
jne
pusha
push
xchg
lea
daa
ficoml
iret
ficoms
mov
mov
negl
cs
and
xchg
xor
mov
sub
flds
add
pop
inc
mov
push
decb
add
stc
xchg
cmp
mov
jns
add
or
out
cmc
scas
mov
push
loopne
lahf
add
inc
mov
not
out
stos
add
cmp
adc
popa
in
add
push
inc
pop
mov
scas
movsl
adc
xor
fs
loope
test
jno
push
sbbb
int
rcrl
pop
outsb
lds
lds
add
je
xchg
out
faddl
xchg
test
adc
lret
push
pop
mull
pop
xchg
addb
movsl
popf
xchg
xor
leave
or
add
xchg
int
fsubl
lods
movsb
mov
mov
mov
inc
adc
sbb
add
fwait
mov
and
in
push
add
mov
add
jl
push
std
js
xor
shrl
dec
ja
and
xor
call
imul
adc
popa
pusha
add
xchg
fbld
ret
or
ss
add
idiv
push
lret
sbb
push
out
decl
dec
inc
popa
mov
test
fisttpll
out
jae
sub
sbb
arpl
rcr
add
dec
sub
into
inc
and
cmc
jl
jp
in
out
lock
in
jbe
lret
mov
lea
fs
push
xchg
add
xor
add
je
arpl
negb
mov
or
and
jbe
push
and
aaa
xchg
jp
lret
xchg
adc
bnd
mov
sbb
pop
xchg
xchg
cmp
addr16
push
idivb
mov
mov
push
or
scas
jb
adc
xor
cwtl
sbb
cmp
incl
hlt
fistps
adc
push
and
fisttpll
mov
jg
scas
pop
and
ret
xor
or
inc
adc
push
out
movsb
jmp
add
and
outsb
imul
xor
fcompl
imul
jle
testb
cmp
xor
cmp
xchg
pop
arpl
fisubrl
aaa
out
add
pushf
ret
xorl
jmp
xchg
xchg
hlt
add
cmc
xor
das
jo
xchg
xchg
scas
add
and
xchg
movsl
cs
aam
lock
movsb
adc
adc
in
and
fs
call
xor
inc
lcall
test
mov
ljmp
and
mov
js
xchg
adc
fs
cmc
mov
rol
and
div
add
lock
dec
add
aas
inc
daa
popfw
sbb
in
ficoml
int3
cmc
pop
add
int3
push
shll
testb
xchg
nop
cs
add
and
xlat
push
popa
mov
mov
sub
sbb
sub
or
and
jne
pop
imull
fs
cld
jae
cmp
andps
loopne
imulb
add
sbb
mov
stos
add
mov
xor
aas
xor
in
imul
fists
sarb
inc
imulb
nop
sub
dec
fxch
xor
or
jg
out
jns
repz
dec
out
inc
cmp
pop
test
mov
push
mov
cmp
sbb
repz
shrb
into
idiv
lods
sub
sub
xor
lahf
sahf
push
dec
lds
cmc
fs
mov
repnz
mov
add
inc
mov
pop
div
testl
test
loope
jne
xor
loopne
and
int
hlt
shrb
mov
lcall
inc
xor
jbe
push
pusha
xchg
enter
xchg
cld
loop
pop
inc
pop
add
or
pop
out
xchg
sub
stos
out
popf
sti
cs
test
aaa
out
pop
ljmp
aad
mov
or
lcall
clc
hlt
fimull
or
mov
sub
jae
test
fisttps
fs
add
pop
hlt
adc
sar
fs
add
fs
jbe
dec
repz
das
or
cmc
fsubrl
sarb
mov
adc
lods
dec
cmc
sub
push
leave
and
ret
add
fxch
dec
mov
or
lret
das
hlt
mov
sub
adc
cmp
dec
push
and
movsb
mov
mov
popa
jge
popf
mov
or
in
andl
sbb
lcall
gs
push
stos
ds
loopne
clc
test
loopne
stc
sub
dec
add
jbe
out
or
mov
and
add
test
jbe
sub
pop
adc
push
testb
push
repnz
mov
rcll
mov
inc
std
dec
rolb
cltd
jno
and
inc
jmp
mulb
std
leave
mov
sbb
inc
jbe
lcall
mov
in
sub
pop
jg
pop
mov
cmp
daa
mov
add
and
les
or
inc
addr16
cltd
xchg
repz
aad
fstl
mov
bound
jge
shlb
lods
add
push
lock
pop
mov
and
pop
add
jmp
out
icebp
fs
xorb
aam
fadd
movsb
sbb
add
fsubs
sbb
fiaddl
add
mov
aad
adc
inc
shlb
pop
mov
into
sbb
lods
jge
sub
psubq
add
fldt
inc
dec
pop
xchg
ds
push
bound
mov
push
imul
movsl
mov
call
push
rcr
scas
push
cmc
scas
cli
and
ss
movsb
mov
or
add
test
hlt
cltd
jne
lea
push
in
mov
pop
push
push
les
xchg
psubw
lods
hlt
add
add
loopne
cmc
cmp
scas
cmc
add
mov
xor
or
or
test
iret
mov
push
sar
cmp
cld
add
cmc
int
dec
jb
leave
aas
or
popa
les
jp
fwait
pushl
xor
loope
cmp
and
adc
daa
das
cmp
and
mov
dec
xchg
mov
push
add
adc
fsts
testb
fwait
arpl
xchg
jl
add
push
outsl
sbb
fs
xchg
xchg
jp
in
inc
test
inc
ljmp
sbb
or
imul
pop
data16
mov
mov
into
cmp
in
je
mov
jmp
adc
mov
out
cmp
fstpt
fildl
repnz
mov
push
cmpsl
or
and
sub
insl
fst
and
shll
or
cmp
jg
adc
into
inc
lahf
mov
pop
out
add
jb
decl
incb
test
push
popa
movsl
ja
dec
leave
and
idivl
add
adc
dec
rcrb
out
jmp
pop
adc
pop
or
sbb
inc
nop
push
in
dec
movsb
xor
inc
fidivl
jle
lock
cmp
test
test
mov
mov
sbb
add
pop
rorl
dec
jo
loope
add
cmp
aas
cmpsb
cmp
push
in
repz
fsubs
in
sub
pushf
and
lds
mov
test
or
push
jnp
pop
popa
xor
sbb
mov
pop
and
jl
mov
sbb
scas
enter
cmp
sub
fldl
sbb
and
jns
icebp
leave
add
and
daa
pop
mov
dec
repz
add
or
cmc
push
jge
repnz
sub
stc
sub
xor
pop
rcr
movsb
pop
ss
int3
test
lret
rorl
add
or
lods
sub
mov
or
lods
jge
in
inc
mov
jne
mov
dec
aas
fcoms
imull
fbstp
push
ljmp
insl
mov
add
shll
daa
jae
dec
add
out
add
push
icebp
jne
sbb
xorl
inc
dec
hlt
cli
popa
mov
jae
inc
push
dec
inc
add
sti
sbb
sub
or
aad
mov
sub
jl
add
icebp
movsb
inc
pop
xchg
add
mov
std
jmp
ljmp
andl
loopne
lock
fmulp
xor
cmc
cmp
jl
test
lods
add
adc
out
fs
push
mov
or
mov
xchg
lcall
add
push
mov
arpl
xchg
push
lods
cmp
and
push
in
out
adc
outsl
shr
pop
popa
and
lea
sti
xorl
push
jb
shll
cli
sbb
xor
xchg
xadd
cmp
icebp
xchg
adc
hlt
or
out
mov
cwtl
test
xchg
add
sbb
in
aam
aaa
pop
add
xchg
ljmp
loope
jmp
pop
sbb
xchg
pop
imul
or
movsb
add
clc
mov
xchg
out
jmp
sub
mov
mov
jb
dec
testb
cmpsb
xor
push
cmp
mov
sbb
pop
sbb
pop
add
adc
pop
test
gs
add
mov
clc
jle
psllw
stc
push
shl
mov
fnstenv
cmp
scas
and
pop
arpl
clc
popa
loope
sub
pop
cltd
dec
sub
lock
fs
mov
and
xor
xor
stc
pop
movb
inc
cs
scas
js
push
push
imul
lds
push
cmc
or
add
and
testl
adc
repnz
je
fisubrs
jbe
ljmp
sbb
insl
add
dec
fbstp
push
outsl
push
inc
cli
popf
jmp
loop
lock
ret
int3
test
loope
jns
cmc
adc
add
jl
mov
and
cltd
cs
testl
div
push
icebp
sub
xchg
lds
cltd
cmpsl
push
or
int3
jmp
icebp
jmp
add
jnp
add
sbb
icebp
xor
add
dec
ljmp
data16
out
sub
sbb
jbe
xchg
jne
test
sbb
jle
idivb
pop
sub
daa
sbb
sar
mov
or
xchg
std
mov
dec
into
and
fwait
inc
sbb
jle
loopne
mov
add
cmp
popa
adc
pop
dec
lea
add
imul
jge
cmp
sbb
sarl
iret
aas
mov
data16
add
mov
sbb
icebp
clc
inc
cld
push
fs
mulps
je
mov
stos
loopne
cli
push
sub
adc
xorb
or
jp
cmpsb
je
xchg
add
ja
adc
je
push
cmp
push
cmpsb
sbb
aas
in
mov
cld
cmp
xchg
fs
inc
out
into
xor
rorl
popa
clc
dec
push
fadd
adc
push
jg
mov
dec
xchg
xchg
shr
jae
sbb
out
or
call
ffree
cmpb
dec
movsb
cmp
jnp
xchg
add
mov
add
adc
sar
lods
lds
ds
add
mov
sbb
sbbb
lea
cmp
leave
mov
imul
add
jmp
mov
sbb
mov
mulb
push
fs
dec
xor
nop
mov
mov
jg
pop
mov
fsubrs
sbb
mov
int
neg
inc
jb
or
pop
jbe
jg
movb
mov
xor
or
pop
jge,pn
push
dec
push
sti
add
mov
inc
mov
mov
inc
or
jbe
test
xor
in
sbb
sub
mov
cmc
hlt
pusha
add
orl
add
and
add
or
mov
sbb
push
fnstsw
out
lods
add
test
cmp
stos
loopne
sub
mov
push
cwtl
imul
int
int3
and
push
dec
adc
inc
push
lods
jbe
jle
mov
pusha
shl
in
adc
cmp
add
enter
push
xor
push
mov
ret
add
add
jo
in
shl
lahf
cmp
mov
daa
cmp
cmc
lods
sub
push
fs
fiadds
and
cmpsb
dec
pop
outsl
and
xor
divb
icebp
test
int3
push
adc
aad
push
xor
es
dec
sbb
and
add
movsl
faddl
ss
xchg
or
ja
push
jns
push
imul
popf
or
pop
push
jg
cmpsb
cmp
add
and
out
add
dec
mov
hlt
loopne
adc
add
xchg
xor
pop
push
add
or
cmp
adc
fcoml
mov
add
stos
movsl
push
js
cld
mov
inc
push
fistl
push
movsl
or
inc
pop
push
add
pop
icebp
lock
add
push
pop
lods
mov
rsqrtps
or
mov
adc
adc
sarl
in
jp
arpl
push
popa
xor
push
and
sahf
sub
ffree
mov
xor
sub
mov
add
lret
pusha
cmp
adc
ss
mov
mov
sar
and
sti
pusha
jo
data16
push
outsb
add
lea
xchg
push
cmc
xchg
clc
cmp
cmp
push
ret
clc
std
imul
xchg
or
fmull
es
sub
sbb
xor
cmc
sbb
orb
cwtl
rcr
mov
xor
iret
mov
cmp
vmread
jl
mulb
sti
inc
and
add
add
arpl
or
and
cmp
pop
call
push
lret
sbb
aaa
inc
arpl
sbb
cs
xlat
xchg
in
or
addl
and
mov
sti
repz
pop
mov
push
and
pop
sub
mov
sbb
dec
add
stc
cld
add
xor
cs
add
xchg
inc
outsb
add
cmp
inc
inc
xchg
add
pop
rclb
lea
stos
adc
loop
cltd
into
xor
jns
fisttpl
inc
ljmp
push
or
and
jo
add
xor
stc
cmp
pop
jo
sti
sub
pop
test
gs
mov
mov
das
mov
outsb
test
jmp
sarl
ds
cmp
sbb
or
and
cmc
lcall
xchg
dec
inc
pop
cmc
mov
jmp
add
xor
or
mov
iret
and
test
sahf
idivb
cmpsb
add
out
xchg
cld
clc
cmc
outsl
jne
mov
js
jp
loope
scas
test
add
pop
sub
imul
and
jge
add
or
mov
sbb
aad
cltd
loop
cmp
pop
mov
or
sub
aaa
sahf
push
leave
cmpl
cld
inc
sahf
push
add
gs
lret
push
enter
lds
mov
ret
loope
pop
add
cmc
testb
cmp
out
and
jae
fwait
xor
pop
push
repz
mov
mov
movsl
add
add
test
fdiv
popa
adc
scas
pop
xor
movsl
inc
push
cmp
xlat
repnz
test
mov
add
inc
in
fsubr
or
popf
inc
lea
testl
shll
dec
lret
xchg
sbb
mov
push
add
adc
add
jo
gs
dec
dec
jge
roll
and
lds
mov
sbbl
push
idiv
adc
int
in
scas
pop
mov
aas
or
sarb
pop
mov
divb
js
imul
adc
out
inc
fbld
rep
or
ja
lret
jbe
arpl
popa
cs
jne
sti
sub
pop
add
add
test
dec
insl
popa
out
in
dec
sbb
inc
jle
push
and
mul
xor
add
movsb
push
es
insl
inc
js
lcall
shl
leave
out
fs
jge
repz
jmp
mov
xor
adc
push
negl
shl
popf
mov
scas
xlat
flds
dec
mov
call
negb
or
or
repnz
bound
adc
test
lret
push
addr16
dec
and
mov
or
sub
iret
pop
dec
xchg
mov
rclb
add
lahf
decl
cmpsl
ljmp
add
ds
cmp
add
js
movb
loope
adc
sbb
pop
ret
sub
xor
loope
out
mov
cmc
mov
icebp
inc
mov
add
or
daa
test
inc
movsl
cmp
stos
clc
jge
aas
pushf
pop
dec
add
push
icebp
dec
inc
mov
jp
jle
jmp
arpl
pop
idivb
popa
pop
in
andb
cmp
loopne
push
insb
arpl
add
inc
lods
mov
push
and
lods
push
pop
xor
pop
fwait
mov
or
pop
adc
xorb
iret
pop
xchg
scas
inc
mov
sbb
or
mov
mov
cmc
xor
addl
fsubs
jg
lock
adcb
lret
xchg
in
scas
out
add
sti
mov
add
movsb
dec
or
add
push
pop
test
gs
loopne
rcll
lahf
scas
pop
aas
adc
jp
gs
xchg
cld
sub
cmc
xchg
test
imul
add
and
imul
jecxz
dec
lahf
inc
mov
xor
xor
rclb
pop
mull
ss
scas
dec
add
add
ljmp
int
and
fistps
data16
lds
ret
subl
add
adcb
fs
ja
xor
sahf
iret
fadds
add
mov
fs
mov
ja
loope
add
std
inc
cmc
or
or
pop
mov
adcb
pop
in
insb
sbbl
fucomp
insb
push
push
add
mov
enter
push
cmp
pop
ds
std
or
outsb
loope
or
rcl
shlb
pop
dec
cmpsb
out
out
pop
add
adc
jp
subb
xor
pop
pop
adc
les
inc
xor
cmc
movsb
sbb
cmp
or
stc
pop
add
xchg
lret
adc
mov
sub
icebp
add
clc
xorb
cmp
pop
aad
adc
cmpsb
add
sub
int3
push
outsl
xor
cs
sbbl
orl
fs
dec
movsl
testl
loop
xchg
adc
test
push
cmpsl
push
jle
mov
out
inc
cmp
push
xchg
repz
pop
xor
jp
add
icebp
lds
movsb
cmp
xchg
fs
inc
xor
add
out
in
lods
out
lods
cmp
inc
mov
mov
in
and
push
or
mov
inc
jmp
xor
es
sbb
int
aam
insb
push
jecxz
mov
mov
xchg
stc
jae
shrl
clc
pop
and
mov
divps
addl
movsb
lods
inc
inc
pop
sub
and
stos
mov
sbbb
rolb
imul
call
jle
mov
inc
prefetch
pop
mov
add
mov
xor
clc
and
jnp
add
jmp
sub
aad
clc
ja
pop
out
push
cld
cmc
add
cmp
fwait
xchg
or
iret
testb
xor
and
mov
rclb
or
test
add
adc
shr
add
lahf
dec
adc
pop
push
push
lret
fs
fmul
arpl
add
and
or
cltd
cmp
lock
aam
add
imul
jo
mov
mov
add
push
lret
aad
fs
out
cmp
cltd
pop
inc
add
adc
test
or
adc
cltd
out
jl
std
fmuls
jne
push
mov
mov
push
lahf
inc
nop
div
int3
hlt
insl
push
push
mov
std
loop
jb
or
test
mov
xchg
jge
or
add
mov
cmc
pop
mov
push
xchg
movsb
jle
imul
lahf
push
add
mov
jl
and
mov
sbb
mov
hlt
jne
outsl
testb
jb
xor
add
inc
mov
ja
movsb
clc
ljmp
cmc
lret
sarb
fistpll
test
enter
xchg
test
fs
test
sub
xor
ds
dec
std
xchg
inc
cmp
adc
aas
mov
adc
jne
or
mov
xchg
pop
sbb
fs
loope
add
mov
fs
stos
incl
or
push
sbbl
lret
fbstp
and
jo
add
jbe
or
ljmp
xor
sbb
add
push
jecxz
notb
and
flds
sbb
mov
out
jbe
or
push
in
ss
ret
ror
add
out
into
adc
mov
pop
cwtl
inc
jg
push
cld
rcrl
repz
cmc
sbb
popf
sti
jnp
daa
leave
inc
aaa
insb
addl
add
or
cmp
xor
add
sub
adc
cwtl
pop
mov
push
cmc
data16
das
adc
or
jo
inc
gs
mov
dec
scas
test
mov
fs
jecxz
jge
jmp
arpl
inc
addl
jp
bound
fs
mov
test
mov
mov
mov
dec
add
sbb
sbb
fs
mov
rolb
ss
fiadds
xchg
insw
lea
pop
icebp
pop
xchg
bound
or
sahf
mov
inc
and
sbb
aas
idivl
jnp
inc
cmp
push
das
cld
lods
ret
imul
ds
fsubl
xchg
int
adc
fwait
xor
push
pop
push
xchg
stc
mov
sbb
dec
stos
or
jle
mov
adc
mov
mov
movsb
mov
test
xchg
inc
mov
or
or
shl
sbb
adc
sub
scas
lods
cli
fs
push
testl
mov
sbb
popf
movsb
or
jl
stc
cmp
add
push
jbe
cli
mov
push
arpl
inc
dec
jns
loop
cld
test
nop
hlt
jge
inc
dec
jbe
mov
insl
xchg
or
or
adcb
idivb
add
pop
and
or
icebp
loope
inc
pop
dec
push
negl
pushf
les
fisttps
xor
mov
imul
mov
int
mov
sbb
mov
fs
jge
stos
imul
mov
mov
insl
imul
imul
mov
add
xchg
icebp
aas
inc
fs
lods
adc
pop
outsb
int
push
fdivrl
add
fcmove
shl
add
pushf
xchg
push
jo
popf
fdivl
mov
pop
loop
jae
cmc
loope
inc
sbb
add
dec
and
pop
movsb
aad
sqrtps
lret
sbb
jno
hlt
xchg
push
test
ja
rorl
or
mov
or
mov
mov
rcr
cwtl
iret
pop
icebp
pop
lahf
clc
add
mov
mov
int3
cmc
cmp
inc
sbb
sbb
push
in
rorl
mov
mov
setg
repnz
cmc
movsl
jo
xchg
fmuls
ss
pop
jns
daa
jle
rolb
xchg
inc
and
inc
pusha
divb
in
in
pop
push
cli
add
push
inc
inc
arpl
jmp
into
or
or
and
lods
subb
inc
xor
test
xchg
sbb
mov
stos
cmp
stos
inc
xor
icebp
add
xchg
and
aas
fs
in
call
add
sub
cmc
imul
adc
inc
je
insb
or
mov
pop
stos
and
pop
mov
test
adc
imulb
sub
push
clc
xor
je
mov
add
popf
add
pop
and
bound
mov
out
cmpsl
push
jl
movsl
mov
negb
repnz
fidivrs
add
mov
popa
mov
cmpb
dec
outsb
jl
pop
sti
and
les
cmp
std
or
mov
xchg
popa
addl
and
outsb
call
add
mov
scas
mov
jle
inc
mov
and
add
adc
add
xchg
push
testl
daa
lret
leave
mov
fs
sahf
aam
cmc
mov
pusha
or
add
cld
test
xchg
cmc
xchg
jecxz
dec
push
push
out
test
push
pop
lret
add
adc
in
cli
push
xor
ret
sub
add
sub
or
popa
push
stos
stc
sub
fistl
fisubs
test
std
inc
xor
or
xorl
cmp
mov
add
add
dec
or
pop
mov
xor
sub
pushf
insb
fs
dec
fstpl
inc
pop
out
and
sub
leave
jmp
mov
ss
leave
lar
adc
fidivs
and
cmp
jne
stos
jl
push
inc
add
in
sub
add
or
push
repnz
ss
xor
adc
pop
stc
or
and
jmp
mov
jb
pop
fsubs
sbb
mov
outsl
mov
cmpsl
mov
inc
inc
hlt
sub
aaa
mov
pop
push
sar
xor
sahf
cmc
sbb
xchg
cmp
add
aam
xor
cmpw
jnp
mov
popa
aas
add
call
sub
int3
mov
mov
cmc
and
xchg
xor
add
repz
or
ss
fidivs
rcrb
add
cmp
and
dec
sbb
testb
mov
jbe
fdivrp
iret
out
aas
add
icebp
daa
inc
loope
std
shrb
aas
call
jecxz
popa
aam
into
or
mov
push
xchg
out
inc
ret
jne
cmp
lock
aad
mov
pop
hlt
arpl
addb
pop
jne
inc
call
push
loope
inc
cmc
jg
ret
dec
adc
mov
cmpsb
sbb
pop
fs
loopne
xchg
push
sbb
cmp
add
mov
cmc
add
adc
and
xor
std
aaa
dec
mov
in
rcl
mov
pop
push
fimuls
cwtl
inc
je
sbb
stos
add
push
jns
icebp
jne
scas
insl
mov
notb
sbb
rclb
test
mov
sbb
idiv
sahf
loop
gs
cmp
div
out
adc
mov
pop
jp
lds
sub
out
aad
xor
adc
insl
dec
mov
push
sub
lret
arpl
icebp
xor
stos
dec
add
inc
mov
mov
fprem1
inc
lret
and
es
jbe
pop
inc
mov
pop
mov
bnd
arpl
push
pop
cmpl
mul
jl
scas
out
hlt
mov
idivl
mov
mov
jmp
mov
aam
sahf
lahf
mov
bnd
mov
dec
push
and
pop
sbb
insb
jae
push
lret
repz
add
cmp
les
int3
mov
adc
mov
loopne
push
data16
aaa
inc
lcall
pop
mov
push
dec
outsl
and
dec
xor
or
xor
add
xorl
not
mov
sub
adcl
add
mov
cmp
inc
add
popf
push
nop
fdivs
xor
rcl
add
fidivrs
mov
fs
or
sbbb
cmp
xor
jo
sbb
jbe
loop
sbb
sbb
addb
mov
ss
inc
xchg
addl
push
push
fwait
int
insl
inc
testb
sub
pop
jl
in
or
mov
mov
arpl
leave
es
icebp
aas
mov
jns
push
push
in
xchg
fdivrl
pop
test
pop
add
test
mov
push
sub
jecxz
cmpsb
push
mov
inc
lcall
test
xor
sub
adc
mov
pop
fsts
adc
inc
xchg
outsb
or
repnz
or
mov
xor
dec
clc
push
jb
sti
fs
pop
pop
lods
sbb
testb
add
fsts
mov
shlb
cld
out
push
roll
jno
push
test
inc
jle
mov
adc
gs
or
push
inc
add
push
loopne
mov
rol
mov
nop
and
rorb
in
add
adc
mov
fs
in
pop
sub
lahf
pusha
add
arpl
cmc
in
shrl
jle
fistpll
loopne
sub
mov
into
push
cmpsb
mov
movsb
pop
sub
mov
sbb
xchg
jb
bnd
stc
sbb
dec
lock
dec
ltr
test
mov
add
jmp
lds
lock
enter
or
filds
and
ds
lret
inc
jno
mov
sub
add
add
or
jg
inc
xor
inc
arpl
jl
popl
mov
movsb
int3
xor
jmp
inc
lock
mov
in
adc
cld
add
lds
add
orb
scas
in
dec
and
aam
pop
adc
xchg
fcmove
push
or
jp
shll
inc
subl
fwait
add
idiv
mov
push
pop
shll
mov
push
or
add
add
testb
mov
mov
js
add
push
imul
jmp
cs
inc
and
sub
xchg
cld
loop
adc
loope
mov
xchg
clc
fs
mov
pushf
or
push
mov
jg
fists
mov
je
sub
cmp
sbbl
and
add
je
in
aam
pop
or
jnp
aad
adc
mov
or
ljmp
jge
bnd
add
xchg
add
cmp
sub
add
and
out
fs
or
xor
sbb
into
std
add
andps
call
inc
mov
xchg
adc
mov
and
xchg
inc
adc
int
mov
adc
data16
out
adc
fcoms
mov
adc
popa
add
imull
notb
mov
pop
pop
insb
mov
jge
jecxz
push
push
sarb
mov
push
popa
sbb
xchg
mov
cli
arpl
and
push
mov
add
xchg
orl
dec
and
inc
mov
cmp
or
rorl
insb
rcrl
fcoml
lock
data16
push
int3
cli
ss
jg
out
in
iret
movsl
sar
push
repz
sub
cmc
xor
mov
xor
push
repnz
ljmp
divb
cli
pop
inc
dec
cli
andl
jno
clc
add
sub
jg
push
loope
and
or
or
fs
cmp
repz
fiadds
loopne
lahf
popa
mov
jmp
hlt
mov
mov
sub
movb
das
out
mov
pusha
sarb
push
sub
or
mov
adc
aaa
stc
or
or
mov
inc
inc
mov
cmc
es
aam
test
addl
pusha
scas
and
outsb
jnp
aam
test
incb
and
sbb
mov
mov
jbe
sbb
lret
dec
add
adc
jne
movl
or
in
sbb
xor
add
scas
push
push
xchg
cmpsb
sub
cli
in
sub
pop
pusha
or
cmp
cmp
jno
sub
std
cmc
sub
push
mov
lret
pop
push
xor
in
leave
xchg
pushf
addb
fiadds
pop
and
xlat
mov
cmp
xor
and
add
ffree
gs
sub
sub
mov
fiadds
std
sbb
xchg
hlt
add
std
lret
es
dec
and
add
pop
movb
std
jnp
pushf
cmpsb
hlt
jmp
movsb
aas
cli
xor
shll
push
and
add
pop
iret
fs
sub
add
cmp
adcl
lea
add
out
in
outsl
negb
sbb
inc
movsl
push
sbb
mov
inc
sahf
cmp
roll
mov
dec
incl
add
add
or
fucomi
fcoms
gs
mov
lock
fwait
cwtl
or
add
dec
or
and
rcl
mov
in
in
loope
mov
testb
enter
adc
or
cltd
xchg
dec
pop
repnz
add
adc
cmp
cmp
cmpsl
xlat
int
inc
add
push
push
icebp
inc
jmp
mov
and
and
fnsave
popa
pop
cmp
xchg
gs
std
push
jb
lahf
sbb
outsl
rcr
insb
test
inc
or
int
or
data16
int3
xor
pushf
pop
or
aam
fiadds
in
push
movl
idivb
cmp
mov
ds
adc
cli
hlt
mov
jns
stc
test
dec
add
sbb
insb
adc
popa
cmc
das
wbinvd
clc
movsl
lods
inc
jle
pop
in
add
notb
mov
and
je
jbe
stc
enter
sub
jge
xor
mov
test
mov
hlt
push
xchg
aad
fistps
enter
call
add
aaa
or
jbe
and
gs
aam
mov
xchg
out
add
rolb
fstps
xchg
addr16
xchg
fildl
add
in
les
gs
int3
ds
mov
push
xor
and
mov
dec
pop
jge
or
push
imulb
push
mov
jecxz
push
sub
push
cmp
js
xor
jno
lcall
lock
idivb
mov
jno
inc
ss
xchg
push
fs
inc
outsl
pop
fistpl
in
and
in
xor
fcompl
inc
dec
mov
repnz
dec
add
ljmp
mov
xchg
adc
data16
fcomps
adc
adc
xchg
test
lahf
mov
outsl
add
jp
xchg
push
and
loopne
add
fwait
sbb
sub
sahf
fstl
ss
data16
aad
mov
aad
pop
jne
out
dec
icebp
add
mov
pop
push
pop
push
jns
add
pop
pusha
cmc
ljmp
icebp
es
sub
cwtl
jecxz
mov
cmpsl
add
notb
push
fs
pushf
ss
jg
aam
loop
pop
add
mov
xor
cmp
movsl
jg
int
fs
jp
test
add
xchg
test
pop
into
xchg
inc
mov
shlb
and
je
loope
mov
scas
mov
jns
add
mov
js
repnz
and
subb
fisubl
enter
pop
cld
xchg
sbbl
cmpsl
pop
jle
fs
into
push
push
int
jmp
mov
xchg
lahf
sarb
cmc
inc
out
or
fstp
sbb
mov
stc
fsubrs
add
fs
xchg
push
cmp
idivl
in
push
mov
add
push
add
mov
enter
into
in
notl
adc
sarb
divb
aaa
mov
or
sahf
shrb
stc
add
xchg
into
inc
sbb
stos
shl
call
jmp
outsb
or
les
cmc
fwait
jb
in
add
jge
stos
leave
cmpsl
test
cs
cmc
mov
mov
pushf
mov
push
sbbl
pop
cmp
daa
cld
xchg
mov
adc
xchg
pop
fldl
std
cmp
clc
mov
sub
sarb
fs
mov
fadd
cwtl
mov
prefetch
daa
icebp
pop
jle
roll
push
rol
pop
or
pop
lods
sub
xchg
jecxz
repnz
add
ds
add
aaa
dec
out
cmpsl
adc
xor
outsl
nop
pop
cmc
or
adc
jmp
add
adc
outsb
push
adc
pop
aas
adc
hlt
ret
add
push
int3
mov
sub
dec
cmpsb
stc
int3
add
cs
clc
fs
mov
cmc
jmp
shll
add
cmp
sbb
repz
cmc
adc
mov
add
add
mov
xor
pop
shlb
sub
push
jns
or
andl
outsl
fs
xchg
pop
xor
aad
int3
jmp
xor
in
mov
int3
add
pusha
pop
mov
and
xchg
dec
inc
jge
add
enter
sbbb
out
cmpsb
inc
gs
or
popa
fcoms
xor
test
fmuls
cmpsl
mov
or
or
push
add
sbb
push
cmp
mov
jo
inc
push
pushf
sub
popa
dec
cli
leave
sub
loop
pop
cmpsl
stc
add
cs
cmp
pop
aaa
sti
inc
pop
xchg
cmpb
adc
sub
xchg
add
sbb
shlb
loope
movsb
or
sbb
add
mov
and
out
pop
dec
cmp
sbb
fisubrl
add
shrl
sbb
pop
xor
in
dec
mov
and
sbb
jecxz
xlat
push
cli
jb
add
cmp
or
out
out
pusha
stos
sbb
addr16
add
adcb
sbb
and
inc
adc
or
int3
adc
xor
jle
adc
pop
inc
add
les
add
in
andb
inc
adc
jle
js
add
xchg
in
fs
loop
push
psllw
push
jno
fwait
add
inc
fs
int3
jne
inc
loop
sbb
aas
add
subl
sahf
xor
jns
add
mov
mov
add
jne
imul
dec
dec
stc
adc
add
push
dec
mov
test
ret
push
ja
mov
sbb
stos
pop
cmp
lret
dec
push
andl
arpl
test
add
mov
cld
pop
testb
add
push
add
cmc
and
dec
sbb
into
pop
int
mov
addb
loop
rcll
mov
pusha
cld
aam
add
daa
inc
stos
sbb
or
cmp
push
movsl
frstor
push
pop
jns
mov
mov
popf
and
cmc
sbb
loope
out
int
jbe
sarb
addr16
lcall
add
xlat
filds
rcl
sbb
add
lods
add
pop
fcomip
and
push
adcl
sub
fnstenv
fdivrl
mov
inc
add
idivb
aam
data16
sbb
pusha
and
arpl
or
daa
push
out
xor
in
mov
out
sub
jbe
xor
xor
and
push
xor
addl
cmp
or
pushf
inc
push
cld
jne
pop
shll
aam
sbb
out
fnsave
loopne
aad
add
xor
sub
aam
int
add
ret
dec
or
test
xor
cs
sbb
push
and
clc
or
sub
mov
scas
xchg
nop
jnp
fs
imul
mov
pop
ds
xchg
faddl
jp
lahf
int
cmc
sub
flds
xchg
mull
fsubrl
add
adc
mov
cmpsl
jp
inc
adc
add
jl
lret
or
push
and
adc
push
inc
adc
cld
pop
xor
cmp
fcmovbe
adc
cs
add
push
sti
push
xchg
adc
test
cmp
pusha
push
push
push
mov
lods
fs
mov
or
push
lea
xor
dec
push
int
inc
add
sbb
push
sti
add
or
sbb
cmc
mov
cwtl
add
mov
fisttpl
push
or
vhsubpd
out
cmp
and
cmp
cmp
push
int
mov
add
sarl
shlb
xchg
faddl
mov
ss
add
pop
mov
ss
xchg
lret
popa
pop
xchg
xlat
and
add
sti
xchg
xlat
pop
je
les
xor
mov
rol
sub
leave
add
and
or
inc
and
clc
icebp
mov
out
inc
lds
inc
adc
aam
ds
aaa
lea
rorb
jo
push
mov
xchg
add
or
stc
int
xlat
cmp
mov
les
out
add
and
xchg
leave
out
inc
xor
aad
inc
stc
stos
or
out
gs
sub
out
in
iret
lea
cmc
inc
mov
mov
imul
lock
push
pop
mov
dec
fs
mov
into
mov
xchg
test
adc
imul
and
push
icebp
in
and
xchg
lret
add
lcall
shl
pop
add
or
out
add
es
test
scas
arpl
ficoms
add
jmp
mov
push
aad
fs
mov
test
sar
push
and
sbb
cmp
je
pop
jmp
and
lea
push
pop
lods
push
inc
sarl
hlt
pmulhuw
cli
push
addr16
adc
sar
fadds
in
mov
push
cmc
push
into
jns
repnz
test
xor
inc
add
sbb
aam
adc
nop
testb
dec
mov
or
jmp
in
sti
mov
les
loope
sbbb
push
pop
cmpsl
add
mov
cmp
inc
mov
push
incb
roll
pop
sub
add
push
aas
stc
lds
sbb
cli
pop
notb
lods
sbb
mov
nop
stc
xor
divb
nop
leave
mov
add
addr16
js
clc
cmp
jmp
pop
inc
push
xchg
add
xchg
int
add
fdiv
insb
pop
xor
jae
mov
xchg
pop
pop
pop
nop
add
mov
gs
adc
imul
add
loope,pt
andb
dec
mov
ljmp
call
aaa
inc
loopne
or
push
cmc
std
ds
fwait
jl
out
mov
aaa
jp
data16
sahf
adc
xor
xchg
mov
outsl
es
jp
cli
sar
and
aam
mov
jg
lret
sbb
dec
add
lds
or
xor
mov
imul
push
cmp
mov
out
je
mov
adc
movsb
push
or
fs
cli
pop
add
pop
hlt
scas
and
xchg
push
mov
jmp
loope
xchg
or
pop
clc
pop
rcll
jp
movsl
fbld
sahf
mov
or
in
fs
out
xor
mov
xor
or
lea
negb
ret
push
das
pop
loop
sbb
movsl
cli
fiaddl
in
jecxz
cwtl
push
mov
jns
notb
dec
cmpsl
push
data16
imul
dec
xchg
add
inc
adc
aam
pop
mov
outsb
inc
lret
jl
sub
or
rorb
adc
xor
mov
xchg
imul
and
out
inc
pushf
pop
xchg
mov
or
sub
or
and
js
testb
std
ja
add
adc
dec
add
pop
negb
lret
rcll
out
cmp
or
xor
ret
pop
jg
sbb
xchg
pavgb
jmp
sti
lods
xor
add
aaa
mov
jae
roll
out
je
inc
loope
imul
lods
les
cmc
sbb
in
notb
dec
xorb
add
push
mov
cmc
jle
fcoml
dec
or
add
push
push
lret
pop
or
pop
add
jne
and
clc
fdiv
or
or
inc
rolb
dec
jecxz
out
les
fcomps
or
std
mov
clc
inc
lds
adc
push
jp
add
les
sbb
jp
mov
int
jl
test
xor
hlt
stc
xchg
cmp
lock
mov
ja
aas
push
sub
sub
push
add
xlat
test
adc
jp
icebp
push
cmp
arpl
mov
xchg
mov
mov
jne
fs
mov
add
pop
mov
mov
cmpb
gs
inc
push
mov
movsl
dec
sub
pushf
pushf
rolb
gs
imul
jge
sahf
mulb
xor
xchg
or
or
adc
mov
scas
pop
rdtsc
mov
in
add
xchg
lcall
shll
sbb
idiv
lret
adc
sbb
mov
push
mov
les
push
sub
mov
or
not
ret
or
push
icebp
das
push
pop
adc
or
sbb
inc
add
cmp
adc
popa
in
daa
jmp
lds
es
jmp
inc
sub
arpl
popa
sub
add
push
movsb
test
mov
jne
xchg
jl
and
jns
inc
fildll
xor
push
pushw
scas
add
adc
popa
push
push
arpl
jmp
inc
jl
jmp
xor
add
mov
pop
jmp
sbb
xor
negl
arpl
jmp
sub
jnp
inc
call
mull
aam
and
repnz
out
daa
pop
add
adc
dec
divb
in
push
xor
mov
gs
cmp
xchg
popa
pushf
ror
mov
mov
aas
lahf
push
xchg
clc
out
cld
inc
mulb
xor
es
in
out
xchg
mov
pop
mov
pop
dec
add
shl
jle
add
and
add
sbb
push
push
mov
and
mov
es
mov
int
notb
jmp
inc
or
addr16
or
inc
pop
fs
popf
adc
cltd
xchg
push
mov
push
inc
loop
dec
dec
fcomip
pop
jmp
or
out
sar
lock
je
sarb
and
jae
sahf
pop
xchg
pop
movsl
add
jbe
sbb
pop
dec
fcomi
and
add
and
pushf
push
loop
negb
pop
and
pop
stos
addb
jbe
insb
push
cmpsb
stos
pop
push
into
pop
sub
clts
mov
fbld
fbld
mov
ja
ss
movsl
bound
ret
bound
xor
lret
xor
pop
pop
bound
xchg
aas
or
jmp
idivl
into
xchg
adc
dec
inc
dec
mov
xor
movsl
icebp
add
fcomps
jne
lea
mov
jbe
mov
cmp
cmc
push
call
xor
add
add
sbb
stos
cs
cmp
fs
jno
xchg
inc
data16
mov
fsubs
push
ja
add
push
and
cltd
in
leave
bound
push
sub
into
add
cmp
aaa
stos
ss
jno
dec
mov
pop
sbb
pop
in
sti
adc
or
cmc
xor
cld
int
and
insl
int
mov
aaa
add
push
inc
mov
pop
mov
aad
push
shlb
inc
ficoml
ret
test
push
imul
fcmovb
cmp
fsubs
xchg
imul
and
jg
push
mov
hlt
cmp
mov
or
loopne
divb
cmp
mov
fidivl
cmp
popa
push
jmp
mov
adc
xlat
sub
cmp
fs
aaa
fisubrs
mov
aam
sbb
mov
cmp
push
in
add
rcr
jl
inc
add
hlt
outsb
inc
enter
imul
add
in
scas
dec
xchg
test
or
cli
jecxz
push
or
or
incb
fnstenv
stc
icebp
adc
mov
inc
cld
test
aam
or
and
in
loop
mov
hlt
lcall
jbe
add
cmpb
daa
xlat
in
icebp
xchg
daa
arpl
ss
in
dec
fcmovu
lock
int
adc
or
nop
cmp
sbb
lock
shl
fimuls
fs
subl
or
jg
add
loopne
pop
fs
shlb
and
add
pop
jecxz
cmp
std
cmp
mov
movsb
sbb
xor
sub
int3
rorl
gs
add
and
pop
inc
mov
xor
mov
fs
and
lret
lods
repz
mov
push
pop
inc
in
jg
pop
data16
or
jge
cmpsl
pop
in
or
and
mov
mov
and
add
mov
fprem1
ljmp
and
loope
divb
pusha
and
and
aam
add
loop
test
testb
push
pop
push
mov
xor
ds
loopnew
mov
xchg
jb
add
mov
mov
pop
ret
loope
add
call
div
out
adc
mov
fs
inc
and
in
fcoml
iret
lds
sub
and
add
xchg
shrl
iret
add
cmc
or
dec
test
insb
and
adc
inc
adc
add
clc
test
add
pop
mov
pop
mov
insl
jo
cmc
or
xchg
arpl
and
add
add
call
ds
bound
movsl
insl
add
sbb
xchg
arpl
jecxz
jl
int3
add
mov
xlat
sub
rcll
in
sti
mov
push
mov
add
imul
xchg
testb
adc
loopne
xchg
ljmp
cmc
int
filds
inc
or
hlt
loope
lds
sub
cmp
or
push
sub
lods
inc
std
push
int
insb
jp
jmp
add
jecxz
xchg
pushw
ja
test
mov
add
orb
cltd
es
lds
cs
lds
std
shl
or
pushf
or
push
mov
mull
subb
stos
addr16
out
push
or
test
test
sbb
jnp
sub
or
xchg
pop
or
sti
js
push
sti
faddl
addr16
or
loope
jmp
cmp
jne
sbb
jl
xor
xlat
add
repnz
stos
leave
stos
xor
negb
mov
sub
fldl
repz
jle
dec
dec
inc
or
int3
jmp
flds
testb
shl
xor
ljmp
insl
jbe
sbb
jl
addr16
scas
or
scas
sub
insl
sub
xor
int
aas
sub
add
push
or
xlat
in
push
int3
push
xchg
or
cmc
ds
stc
cs
add
lods
sarl
and
mov
mov
inc
les
out
push
jp
add
mov
ja
clc
into
adc
mov
and
into
jmp
hlt
aam
les
in
sub
cmp
and
loopne
imul
gs
test
jp
mov
and
inc
push
or
add
hlt
add
and
movb
and
icebp
add
and
rcll
cmp
jecxz
out
pop
mov
xor
sahf
repz
shrl
add
and
sbb
stos
idivb
fistl
jle
es
xor
movsb
pop
mov
dec
pop
stos
inc
sub
xchg
xor
adc
enter
and
push
ss
fs
in
pusha
xor
push
out
dec
in
and
repnz
movsb
xchg
call
inc
mov
mov
mov
mov
sbb
or
mull
cltd
adc
mov
negb
loop
popf
cmp
mov
inc
add
fidivl
repz
cmp
mov
iret
push
in
out
out
jno
fs
shr
rorl
std
in
fsubr
lcall
out
pop
cmpsl
mov
push
shlb
add
clts
lock
cld
push
xlat
cmpb
jl
inc
add
stc
out
dec
shlb
test
pop
add
mov
rcrl
aam
add
jne
andl
enter
loop
enter
mov
cmp
sbb
das
or
xchg
lods
rorl
lods
add
subb
jecxz
imul
sub
daa
push
mov
int
aam
movsb
or
mov
and
pop
jbe
mov
jl
stc
pop
dec
sbb
push
jo
aad
rorl
inc
push
mov
insl
xchg
out
fcmove
js
push
fs
cmp
mov
pop
es
gs
dec
sbb
or
adc
dec
fwait
and
mov
data16
add
cmp
mov
mul
sbb
add
imul
movsb
add
ret
popa
or
cmc
dec
ja
mov
jne
cltd
mov
add
jnp
cmp
pop
incb
movsl
sbb
and
add
shll
inc
scas
lret
fs
push
addr16
out
add
leave
dec
lret
push
mov
pop
adc
xchg
inc
push
loop
ja
faddl
xchg
mov
test
dec
loope
cli
in
mov
stos
add
loop
push
mov
mov
loopne
mov
adc
pop
adc
in
xchg
nop
loope
xor
adc
mov
cmc
push
or
xlat
mov
sbbb
enter
and
and
sbb
pop
mov
daa
sub
jg
xchg
jp
int
inc
cmp
cmc
in
test
jo
pop
test
dec
inc
sbb
clc
adc
sbb
jb
test
pop
push
push
cmpb
call
fs
mov
xor
bound
call
jbe
iret
fcoms
pushf
sahf
or
rep
and
mov
movsb
popf
cmp
add
fadds
in
or
aaa
jmp
fstps
fmull
les
push
arpl
mov
and
aam
mov
jne
outsb
mov
aas
xor
dec
jle
clc
inc
test
xchg
add
das
int
mov
and
nop
sub
xor
adc
int3
add
test
cmpsb
dec
daa
add
and
ss
daa
rorl
arpl
mov
jo
add
mov
scas
push
cmp
ds
jmp
rcrb
mov
mov
out
bound
xor
push
ret
jns
sub
or
iret
sub
cmp
pop
std
mov
inc
jnp
movsl
xor
inc
inc
xlat
pop
mulb
inc
sahf
inc
pop
out
je
add
mov
adc
out
lds
add
add
mov
rclb
fs
pushl
popa
in
aad
inc
aad
mov
pop
dec
mov
into
bound
or
out
adc
adc
and
fsubp
add
aam
stc
lods
sub
cmpsl
or
mov
shll
pushf
daa
hlt
sti
xor
push
hlt
jo
add
mov
lret
shl
std
or
add
xchg
sbb
call
mov
or
pop
dec
push
dec
push
add
movsb
loope
push
or
mov
sbb
mov
mov
daa
aaa
iret
out
mov
xor
jo
sub
testb
in
mov
sbb
fs
sub
push
sarl
ret
ss
cmp
testb
push
test
fs
sub
ljmp
and
sbb
sub
push
mov
mov
add
cmp
or
add
cmc
fimuls
ja
into
and
add
push
mov
mov
in
aas
leave
pop
push
push
push
push
test
push
repz
mov
arpl
cmc
sub
insb
lods
outsl
add
sahf
pop
push
mov
call
inc
push
ss
in
ficompl
add
outsl
xor
inc
mov
jbe
add
addb
xchg
cmp
push
add
jb
mov
in
pop
outsl
mov
in
pop
aad
add
scas
sub
lahf
and
pop
sub
aad
ds
aad
andl
push
adc
xor
lods
mov
add
mov
das
negb
or
adc
std
dec
xor
fs
int
push
xor
sub
push
pop
testb
and
int
insl
scas
cmpsb
popa
or
lds
gs
das
inc
pop
mov
shlb
mov
fiadds
jno
gs
mov
jno
adc
sbb
cmp
dec
mov
pop
out
pushf
sbb
flds
adcl
pop
jae
push
lock
mov
or
cltd
cwtl
xor
pop
insb
imulb
out
jne
jle
mov
inc
jno
arpl
out
push
add
mov
jl
leave
dec
movsl
mov
fs
enter
jbe
or
dec
inc
push
loope
push
test
and
sbb
and
inc
mov
shl
insb
or
and
jae
dec
lds
div
adc
xor
add
and
pop
sub
mov
popa
xlat
jg
mov
push
adc
xor
pop
ret
mov
lds
pop
insl
add
je
ss
xchg
sbb
jne
mov
adc
jge
or
sti
lret
loope
lods
xor
xor
rcl
rol
sub
mov
pop
xorb
dec
add
cmp
xchg
ficomps
mulb
inc
push
or
dec
lods
cs
xlat
mov
lahf
rcl
mov
rclb
push
iret
add
nop
dec
test
clc
in
out
xor
sti
xchg
sbb
enter
sbb
cmp
xchg
push
add
pop
test
addr16
jbe
hlt
ret
inc
add
pop
iret
add
bound
les
mov
sbb
sub
inc
or
imulb
into
outsb
and
fldenv
icebp
cmp
popa
lcall
cmp
add
cmp
pusha
jns
add
lods
sub
imul
aaa
adc
cs
das
sbb
push
pop
fwait
xor
shr
icebp
movsb
cli
cld
stos
mov
aam
repnz
shll
rcl
sbb
test
icebp
adc
mov
sub
cmpsb
movsl
mov
lret
in
xchg
outsl
sub
cmp
dec
inc
nop
or
loopne
movsl
mov
mov
lret
insl
cs
ret
stc
inc
imul
mov
daa
fs
notl
mov
shll
popa
int3
loope
aas
adc
scas
data16
adc
div
es
mov
sub
std
lock
lret
fstp
pop
shl
rclb
mov
push
sub
movsb
jne
loop
dec
popa
pushf
cmc
push
push
pop
push
jbe
les
in
ss
push
int3
cmc
or
out
hlt
xor
add
inc
push
xchg
imul
or
les
cmp
jmp
ror
inc
fs
xor
aad
cmp
mov
mov
mov
inc
aas
mov
lret
cwtl
icebp
adc
outsb
jbe
divl
dec
mov
mov
leave
fs
mov
in
push
pushf
sbb
sub
dec
daa
and
dec
ret
jmp
test
or
notl
js
inc
icebp
mov
cmpsb
je
shl
rolb
int3
add
adc
and
dec
dec
jnp
imul
xchg
add
test
bound
lret
push
xchg
mov
jg
sub
or
jle
cmp
and
imul
test
jmp
cmpsl
mov
cld
push
xchg
xchg
cli
cwtl
inc
popa
std
lods
xor
sbb
xor
xchg
test
cmp
stos
jbe
movsl
jno
lock
or
push
loop
mov
fdiv
lods
stc
fs
or
inc
pusha
add
push
push
xchg
in
in
test
cli
loope
into
sub
sbb
in
arpl
pop
int3
flds
lock
mov
inc
std
movsb
in
loope
jbe
paddw
xor
cmc
lret
jl
inc
iret
test
adc
dec
fs
stos
sbb
pop
pop
js
clc
lret
fs
lcall
cld
ret
cmp
or
loop
sbb
pop
sub
sbb
into
adc
mov
sub
test
add
or
dec
push
or
negb
xor
fadd
mov
lahf
lods
mov
pushf
mov
into
pop
insw
add
cmp
into
pop
addr16
push
shll
in
xor
xchg
pop
push
mov
test
sub
pop
jmp
mov
rolb
push
add
pop
into
sbb
cwtl
sub
mov
stc
lea
popa
mov
stos
cld
inc
add
add
inc
sub
and
sub
add
ds
loope
in
ret
jne
push
xorb
popa
sti
mov
loop
loop
jl
negb
and
in
mov
or
pop
xlat
sbb
notb
xchg
ss
pop
pushf
adc
push
leave
call
or
aad
movsl
jle
clc
add
sbb
push
mov
adc
loopne
test
adc
mov
sbb
jle
repz
pop
std
faddl
popa
pop
ret
inc
cmc
lods
inc
add
daa
adc
inc
sti
dec
jp
addl
das
icebp
pusha
sti
negb
adc
add
lods
andb
fwait
pop
cmp
mov
nop
lods
mov
pop
jnp
orl
mov
idiv
jns
insl
cmp
not
pop
stc
aaa
test
fadds
mov
push
xchg
scas
movsb
shl
movsb
jne
sbb
imulb
arpl
and
xlat
push
jae
mov
test
and
adc
xor
inc
fs
inc
popf
cmpsb
and
sbb
mov
fildll
xor
lea
add
xchg
into
mov
arpl
movsb
scas
cmp
add
fcompl
cmp
je
fwait
insb
sbb
xchg
mov
test
mov
mov
out
fs
repnz
xor
pop
push
outsb
call
shll
inc
mov
out
or
and
and
cltd
add
ljmp
dec
divb
fstps
sub
xor
push
pop
cmp
je
ret
test
jge
push
jp
pop
arpl
mov
out
mov
push
pop
test
and
divb
and
mov
sub
xor
mov
inc
ficompl
rcll
add
pusha
daa
orb
lahf
repz
ds
jbe
test
shll
scas
popa
loope
dec
jmp
fs
scas
xlat
leave
pop
lret
add
mov
add
fdivp
js
mov
lcall
adc
mov
add
adc
lret
add
or
xor
add
jge
mov
add
stos
shlb
and
mov
ret
cmp
dec
imul
pushf
fmull
ds
outsl
pop
call
cld
lods
addr16
xchg
fs
movl
xor
adc
sbb
repnz
cmpl
test
shr
mov
adc
or
in
xchg
and
xchg
xor
adc
and
mov
ret
pop
pop
push
lds
fistl
icebp
mov
xchg
test
fs
push
mov
stos
push
xchg
ja
in
mov
add
mov
inc
out
loope
jbe
add
lret
add
inc
sub
jp
mul
and
jp
jecxz
fprem1
sahf
add
dec
push
ret
mov
cld
xchg
push
outsl
out
add
add
pop
int3
call
pop
cmpsl
cs
pusha
shll
and
negb
push
ja
mov
dec
idiv
xor
pop
jmp
in
ja
adc
add
xlat
andl
push
jg
adc
dec
cmp
inc
inc
add
test
or
sub
cmc
mov
jge
jbe
pop
movsb
popf
lock
test
inc
push
idiv
inc
xchg
pop
and
fs
hlt
aas
xchg
pop
fsts
push
dec
dec
cwtl
dec
sub
cmc
push
mov
popf
clc
add
scas
shr
je
neg
cmp
xor
mov
xor
add
xlat
loope
sub
ds
test
lcall
sub
arpl
loop
pop
pop
jbe
aam
adc
add
loope
dec
cmp
lret
stos
loopne
xchg
jecxz
hlt
outsb
pop
push
xor
ss
xor
and
cli
es
cli
adcb
add
jno
adc
loope
inc
mov
negb
jle
pop
xor
add
xor
negl
dec
lods
mov
adc
add
ficompl
mov
dec
out
cli
or
push
inc
or
outsb
out
negb
out
and
pop
sbb
je
dec
dec
iret
mov
test
mov
popa
mov
pop
push
pop
jmp
cmc
int
aad
in
add
pop
imul
pop
mov
cs
inc
leave
sahf
or
movsl
fistpl
and
sbb
xor
ss
pop
add
mov
push
jns
mov
shlb
sar
sbb
ret
outsb
aaa
imulb
dec
shl
add
pop
shll
fs
in
test
add
jno
in
adc
cmc
add
dec
and
add
push
int3
adc
xor
cmc
data16
jbe
dec
add
or
pop
fcmovne
shlb
repz
inc
xchg
inc
and
pop
inc
fs
inc
jbe
fnstcw
cli
adc
int
sbb
mov
lods
add
xchg
xchg
lds
neg
mov
mov
add
lock
fs
jns
inc
mov
stc
or
xor
aad
sar
data16
xlat
and
ljmp
repnz
pop
cld
jno
dec
inc
clc
fwait
outsl
cmp
cmc
div
sahf
daa
xchg
jp
xor
add
xor
scas
inc
cli
pusha
sarb
add
jo
push
mov
mov
movsb
mov
jmp
scas
das
sub
xchg
pop
mov
fdivl
add
or
sbb
mov
cmp
out
repz
add
rolb
cmovb
cmp
outsb
sarl
cmp
or
es
xchg
jbe
pop
decl
inc
push
and
mov
add
iret
pushl
ds
push
sbb
or
inc
push
jno
mov
mov
cmc
or
repz
and
add
test
notl
lock
push
adc
test
jne
stc
decl
mov
insl
dec
add
nop
insl
or
cmc
rcr
out
pop
enter
add
xor
mull
xchg
push
xchg
loope
push
pop
push
fcmovnbe
and
cmc
inc
jl
and
nop
xchg
out
mov
in
inc
std
mov
pop
jmp
fsubl
pop
mov
jge
and
cli
pop
ss
jecxz
outsl
test
fnstenv
les
dec
mov
add
fstpt
pop
mov
push
es
lods
add
bound
inc
imul
ror
arpl
pop
adc
adc
jg
push
and
lea
add
dec
js,pn
mov
scas
cmc
add
xchg
add
gs
add
in
mov
cwtl
aam
add
outsl
mov
jbe
fisubrs
aas
xorl
lea
in
and
dec
mov
add
fucomi
cltd
add
push
inc
dec
ja
cmovbe
ja
pusha
and
rcll
jl
adc
fisubl
or
cmp
mov
aaa
or
roll
jmp
popf
and
lret
inc
or
push
mov
inc
cmpsb
add
pop
sub
fs
scas
mov
push
sti
sub
ret
dec
xor
push
in
pushl
in
pop
stc
inc
push
mov
data16
jne
pop
xchg
lcall
ja
ret
add
xchg
shll
lock
push
add
cmpsl
xacquire
push
notb
inc
mov
imul
sub
mov
in
out
jno
icebp
popa
fs
lret
in
out
loop
imul
cmc
nop
push
out
out
fsubs
and
fdivl
fadds
add
sub
dec
in
jns
cmp
addr16
mov
into
cmc
cli
sbb
fimuls
sbb
dec
add
push
in
pushl
adc
jge
cmovo
stos
jne
add
push
push
testb
pushf
inc
or
call
add
dec
jno
sbb
mov
cmc
cltd
adc
sbb
xor
imul
xor
fs
fisttpll
inc
cld
aam
and
xor
insb
sarb
shll
test
ss
add
lret
jmp
shlb
add
or
stos
aas
add
pop
loop
mov
jle
outsb
cld
hlt
inc
sti
ja
push
mov
mov
dec
add
and
mov
enter
pop
leave
aam
insb
in
lcall
add
adc
faddl
arpl
push
cmp
cmp
jl
or
sbb
mov
fwait
xor
adc
cmpb
fcomps
dec
pop
mov
es
lock
stc
bound
enter
add
rorb
adcb
repnz
mov
push
clc
jg
lahf
push
dec
stc
jp,pn
or
fs
push
dec
ljmp
shl
cmc
mov
push
xchg
pop
push
sub
mov
stc
pop
das
pop
pop
mov
or
je
adc
mov
or
ss
ficompl
fs
add
mov
pop
lock
cli
add
sub
lret
push
cld
xchg
leave
imul
sahf
gs
scas
das
aaa
movsb
clc
xor
pop
arpl
pop
add
mov
movsb
aam
sbb
jno
test
add
mov
sub
cmpsb
inc
notb
sub
add
cmc
lcall
fmull
movsl
or
outsb
adc
jne
fcmovnu
ret
jg
lea
mov
inc
pop
adc
leave
ret
pop
jge
push
mov
jno
jp
test
jns
fs
push
pop
in
pop
lret
cli
and
push
ss
push
sahf
push
pop
inc
scas
into
or
cmc
jns
sub
jg
and
std
ficomps
dec
pop
or
pop
lea
adc
daa
adc
popf
mov
in
loop
cmp
dec
add
lret
dec
and
mov
add
addr16
iret
xchg
adc
pop
mov
mov
pop
dec
push
leave
inc
inc
jb
icebp
cmc
test
and
push
push
jne
aas
lods
push
sbb
fs
push
std
mov
dec
outsl
fstps
mov
xor
daa
push
lcall
push
sub
sarb
imulb
adc
popl
jne
fdivrs
push
add
mov
pop
lods
sub
xorl
aad
test
lcall
sub
ja
add
pop
in
arpl
rclb
dec
jl
and
loope
dec
pop
sarl
testl
push
jb
cltd
pop
rcrl
inc
call
sub
popa
pop
add
pushf
loope
add
subl
sub
and
and
cli
fdivl
dec
push
jbe
adc
pop
icebp
cli
lea
mov
mov
nop
div
and
sbb
roll
lock
xor
ret
mov
push
aas
and
mov
sbb
rcl
mov
in
or
mov
call
xchg
push
add
rcr
faddl
mov
in
gs
lcall
pop
data16
jne
mov
jnp
in
xchg
sub
jae
int
mov
pushf
push
shlb
rorb
add
cli
jecxz
xchg
pop
or
repnz
lea
push
jge
test
jge
arpl
add
jns
pop
mov
xor
inc
adc
outsl
icebp
in
int3
pop
add
int3
jb
xlat
das
loope
adc
cltd
flds
out
fbstp
pop
push
test
mov
cld
or
and
pusha
ss
divb
mov
add
pushf
sub
adc
gs
jns
pop
and
data16
mov
inc
in
mov
mov
fs
xchg
inc
push
mov
push
outsl
push
and
jnp
and
dec
into
or
stos
cli
cmp
xlat
movb
mov
aad
outsl
enter
mov
pop
gs
mov
jo
add
inc
cmp
popf
stos
inc
push
xchg
push
xor
div
add
jge
shll
jo
add
jg
add
lock
push
cmc
cli
or
inc
addb
and
dec
pusha
cltd
icebp
xchg
call
and
push
and
xchg
xchg
fstps
add
and
mov
jne
mov
push
mov
fs
mov
sbb
call
icebp
dec
mov
test
pop
xor
mov
mov
jns
or
add
lds
and
add
jne
mov
les
loopne
movsl
pop
loope
jb
xchg
adc
cld
fwait
out
xchg
fcmovne
nop
std
sahf
cmp
clc
subb
cltd
ror
add
push
sub
push
add
sub
dec
push
fsubs
cmpsb
push
aas
shlb
and
jo
sbb
or
cli
shrb
ja
or
fisttpl
je
xor
or
aas
daa
cmp
cmc
out
lret
lds
or
mov
mov
test
inc
gs
loope
inc
aam
negb
mov
lds
adc
in
adc
push
out
push
xor
mov
push
fs
fisttpll
imul
add
and
cmp
std
in
push
mov
add
adc
sbb
dec
cmp
ljmp
sbb
repnz
add
fs
iret
and
stos
jmp
add
adcl
cwtl
clc
repz
daa
nop
faddl
add
jmp
xchg
test
and
xor
mov
pop
add
push
add
pop
in
inc
sbb
ds
rcrl
xor
mov
push
bound
or
je
add
inc
jp
mov
dec
add
mov
mov
mov
imul
jl
sbb
cmp
das
jmp
xchg
fs
stos
push
ljmp
pop
push
nop
and
fisubl
push
cwtl
xchg
lods
data16
cmp
add
push
xor
call
and
not
sbb
jecxz
add
into
aaa
adc
pop
dec
aas
dec
mov
ds
enter
push
mov
pop
lods
cmc
cmc
pop
pop
scas
in
scas
call
and
loopne
dec
clc
jb
sub
arpl
pop
ficoml
sar
in
xchg
cmc
outsb
test
idiv
in
sub
lahf
sahf
or
bound
pusha
jg
mov
mov
mov
and
add
inc
sub
mov
cmc
aam
fcmovne
mov
gs
test
jmp
enter
lods
pop
or
pop
mov
sub
dec
push
subl
mov
push
dec
sbb
in
popl
cmpsl
push
push
or
arpl
adc
xchg
movsb
or
pop
loop
scas
test
clc
dec
je
push
divb
js
adcl
jae
and
and
ffreep
jmp
lret
jge
or
and
mov
leave
inc
clc
xchg
fwait
jae
add
scas
aaa
mov
push
loop
jo
daa
ret
cmc
mov
out
les
sub
rcl
cmc
cs
mov
pop
stc
fs
jb
stos
leave
fists
add
inc
and
ficomps
in
je
icebp
add
xchg
lret
addr16
pop
add
push
sbb
add
xchg
or
jmp
loope
lret
xorb
cmp
int
mov
xchg
or
out
add
or
xor
cmpsb
dec
ds
enter
and
push
js
inc
cmp
pop
xchg
push
pop
and
cmp
sub
cmp
jo
xchg
imul
jbe
pop
adcl
jle
fldl
add
insb
jge
mov
sub
cltd
cmp
mov
pop
sub
ret
ss
inc
stc
jecxz
sub
test
jns
or
add
inc
sbb
fdiv
push
dec
fists
lds
and
sub
mov
shrb
jmp
push
or
dec
add
mov
mov
add
lahf
add
iret
das
mov
push
sub
popa
stos
adc
push
insl
push
subb
mov
scas
shll
jae
inc
ret
test
icebp
or
pop
shl
rclb
fwait
arpl
add
push
scas
add
aaa
add
add
fs
push
mov
testb
sub
adc
push
fs
sbb
pop
or
notl
stc
fucom
dec
and
jmp
fistl
inc
mov
shrb
scas
iret
in
sub
add
aas
mov
lods
stc
add
pop
nop
mov
imul
add
cmp
repnz
pusha
ret
insb
stc
sub
loope
xchg
dec
iret
adc
or
pop
cld
and
in
inc
inc
adcl
jne,pt
fucomp
insb
lahf
and
das
or
push
mov
or
xlat
test
xor
not
push
cmp
arpl
cli
insl
or
fsubs
ljmp
fs
es
or
xor
sub
cmp
scas
add
cmp
cmc
pushf
adc
mov
js
add
add
add
out
leave
test
adc
xor
dec
push
stos
jns
fs
and
repz
add
jmp
fcmovu
mov
imulb
out
mov
pop
ja
stc
test
mov
adc
push
add
lods
push
pop
push
pop
jno
fbstp
in
fwait
mov
pop
pop
pop
jb
pop
data16
lods
aas
sub
and
push
pop
stos
mov
nop
in
popa
or
jl
popf
ss
dec
lahf
add
jo
fnsave
int
shlb
mulb
push
xchg
sub
mov
push
and
das
cli
aad
xor
inc
mov
xor
mov
ss
lods
adc
mov
inc
sbb
out
ss
movsl
ret
jecxz
adc
lret
xchg
call
pop
addr16
or
push
add
or
mov
cs
mov
lcall
fnstenv
pop
xor
cmc
cmp
cmp
arpl
inc
sbb
not
cli
xor
cli
sbb
pop
add
aas
icebp
cltd
push
adc
mov
subb
push
pop
sub
sbb
inc
xchg
aas
mov
push
xchg
stc
adc
or
add
mul
insb
mov
adc
mov
pop
icebp
add
dec
sbb
push
mov
jmp
inc
ss
mov
lods
addl
hlt
jge
cmp
adc
enter
pop
in
or
xchg
icebp
arpl
aad
ret
addb
jle
sub
xlat
mov
and
das
or
mov
xor
stc
sbb
in
aad
es
lds
fwait
hlt
out
or
pop
xor
xor
mov
sbb
and
cmp
pop
test
pop
repz
in
jmp
add
mov
jmp
rcrb
fs
jnp
add
cmp
push
rol
enter
hlt
add
mov
les
mov
or
stc
inc
cmp
push
sub
jmp
dec
inc
xchg
add
ficoms
or
xor
insb
in
sub
mov
jmp
pop
loop
pusha
cwtl
imul
bound
add
push
sbb
fistps
sub
aas
jecxz
rcl
out
cmp
add
cs
lods
xor
movsl
add
add
sub
testb
adc
pushf
xor
and
jbe
sbb
cltd
repz
in
aas
or
rcr
jno
negl
out
fs
ficoml
bound
mov
jae
adc
sub
mov
sahf
sub
sahf
lock
in
das
xor
xchg
cld
inc
loop
fs
loop
bound
sti
inc
pop
aad
xor
std
mov
cmc
adc
iret
add
xlat
and
and
jmp
lahf
or
loopne
test
xchg
aad
mov
int
pop
popf
and
mov
les
mov
sub
insl
dec
and
or
cltd
adc
xchg
pop
loop
push
mov
mov
xchg
scas
cmpsl
jmp
xchg
out
lcall
xor
pop
das
arpl
or
jmp
pop
pop
add
lcall
test
adcl
push
add
add
imul
add
push
add
loopne
mov
xor
cmc
push
aas
loope
negl
xchg
inc
add
or
mov
push
sti
js
lods
dec
sbb
pop
aad
push
add
add
xor
lds
sub
shlb
ljmp
xchg
insl
xor
adc
add
pusha
add
mov
leave
dec
nop
fidivs
jnp
inc
fsubp
stos
cmp
cli
orb
lahf
test
add
push
add
sub
pop
adc
aas
xor
cli
mov
mov
sbb
cmp
int
mov
dec
and
xor
xchg
inc
orl
pop
xchg
mov
jle
fs
insb
jmp
loopne
nop
add
call
imul
es
add
loop
mov
outsb
push
test
adc
pop
and
mov
add
jae
das
push
cs
push
lret
cmc
insb
out
add
mov
clc
add
or
daa
mov
scas
cmc
sub
loope
mov
test
xchg
loopne
int3
and
lock
addr16
adc
addl
mov
in
pmuludq
pop
jg
xor
add
sub
shr
les
jns,pt
xor
or
or
pop
push
sbbl
sbb
mov
push
bound
or
hlt
pop
mov
cmpsb
add
or
aam
cmpsl
fwait
cmc
cmc
dec
sub
jbe
repnz
pop
mov
jge
das
aaa
test
push
in
test
ss
add
xor
stc
cmc
and
aad
decb
mov
push
pop
aas
icebp
mov
pop
fs
cmp
push
or
fucomip
xor
xchg
arpl
pop
or
lcall
adc
sarb
sbb
fs
inc
or
lds
dec
je
jmp
cmp
mov
pop
add
repnz
or
stos
mov
xlat
mov
gs
aad
and
jbe
imul
push
add
pop
daa
ret
enter
insl
mov
inc
imul
sub
or
out
sbb
je
jnp
ss
fildl
push
test
ds
mov
dec
fs
ds
pop
js
cmp
sub
fs
dec
ret
pop
pop
xchg
gs
scas
adc
idivb
fdivr
jno
out
add
add
xor
mov
and
lahf
mov
ret
pop
sub
es
jne
loope
out
pop
outsb
add
sbb
addr16
jecxz
andl
push
lods
sub
push
sub
movsl
xchg
addl
shlb
pop
add
in
out
inc
ds
rol
test
aam
add
or
xchg
pop
xchg
adc
loopne
stos
test
xchg
add
push
dec
dec
pop
xor
out
xor
dec
ffree
inc
dec
mov
loopne
pop
loopne
mov
decb
add
pop
lret
cli
and
pop
jmp
jbe
push
das
scas
cmc
xlat
jmp
out
push
andb
andl
xchg
sbb
pop
icebp
inc
andl
adc
ds
push
mov
imul
out
adc
dec
xchg
movsl
fcmovnu
inc
fs
ja
cmp
out
fists
adc
and
inc
movsb
adc
hlt
pop
leave
loopne
pop
mov
sub
or
xchg
dec
add
xchg
psllw
arpl
xchg
mov
mov
dec
mov
filds
mov
das
loop
jno
jg
repnz
call
jnp
sbb
pop
mov
sub
insl
jnp
sbb
mov
push
loope
pop
loop
inc
stc
aam
mov
test
or
push
test
out
imul
std
cmp
scas
push
leave
shrl
and
pop
push
push
repnz
mov
mov
es
addb
cmc
xor
es
jmp
mov
mov
mov
mov
sub
jp
nop
pop
jo
mov
cmp
mov
lea
jecxz
mov
and
test
in
and
mov
fiadds
adc
push
aam
cmp
add
fadds
stc
fmuls
inc
fimuls
adc
iret
add
fs
push
adc
sub
imul
or
fisttpll
xchg
mov
lods
fidivs
or
nop
fistl
sub
inc
test
shlb
push
fsubs
jp
testl
xor
xorb
xchg
dec
imul
xchg
sub
pop
push
icebp
dec
add
rolb
sbb
push
add
ds
sbb
pusha
imulb
outsb
insl
movups
les
movl
loopne
stc
inc
enter
add
testl
cmc
xor
add
je
add
xchg
pop
dec
subl
jbe
in
push
movsb
fs
pop
je
or
add
mov
cmc
les
js
mov
cld
std
repnz
or
std
or
pop
lods
insl
or
test
push
push
enter
inc
push
lods
clc
jns
cmpsl
pop
add
add
sub
scas
xchg
shll
xchg
jno
push
fs
aad
aaa
or
aam
xchg
sarb
movsb
dec
imul
jne
test
jb
in
dec
mov
pop
xchg
scas
xchg
pop
xor
cmc
cmpsb
pop
div
mov
dec
jae
xor
push
mov
mov
add
dec
adc
fstpt
adc
push
pop
sub
sti
pop
pop
jge
in
in
lahf
fnsave
repnz
push
loope
bound
push
mov
addr16
xor
push
dec
hlt
push
sub
jns
mov
cli
lret
sbb
or
push
lds
cmpsl
inc
dec
test
and
add
les
lods
fs
sbb
cmpsl
insl
out
fabs
or
mov
fs
sahf
jmp
addl
rorl
dec
shl
inc
fcmove
stos
les
cltd
or
sar
jmp
nop
ret
inc
mov
add
stos
lret
xchg
neg
inc
adc
incl
mov
test
fs
mov
cli
data16
imul
lret
mov
out
clts
xor
xor
insb
out
add
ds
std
out
adc
aas
je
repz
std
add
dec
mov
pop
and
adc
je
into
fists
pop
dec
push
les
fstp
cmpsl
add
add
add
int3
add
xchg
cmp
pop
push
test
and
ds
loope
das
mov
popf
movnti
in
shl
ljmp
je
out
loope
outsb
cmc
dec
mov
cvttps2pi
push
fs
enter
pop
cmpsb
in
jmp
aad
cmc
mov
ja
stos
inc
inc
jl
mov
push
mov
push
adc
xlat
sahf
sbb
imul
enter
jne
sub
jne
xchg
fxtract
inc
jmp
loope
xchg
shll
cmp
mov
sub
xor
pushf
mov
cmc
mov
hlt
add
add
mov
das
lock
push
arpl
xchg
inc
adc
or
cvtps2pi
cmp
sti
fiaddl
testl
scas
leave
xor
cld
xchg
rep
fnstsw
push
dec
add
mov
and
pop
bound
adc
jle
dec
push
aam
movsb
mov
add
roll
push
sub
imul
ss
out
pop
inc
movnti
add
call
lea
sbb
in
nop
loopne
sub
pop
fs
lea
add
faddl
dec
shl
add
pop
and
ds
pop
popf
sbb
mov
sbb
dec
cwtl
test
scas
pop
adc
adc
cmc
leave
mov
or
or
sub
cmc
dec
pop
fs
or
mov
cmc
iret
adc
popa
adc
jne
out
and
inc
lds
notb
xor
addl
fidivrl
pop
push
pop
test
sbb
add
in
mov
adc
cmpsb
mov
adc
rcr
mov
insl
cltd
mov
cmc
fcmovnb
dec
push
mov
subb
test
addl
xchg
xchg
sti
aad
pop
jmp
clc
mov
jg
and
mov
push
add
add
iret
inc
decb
es
add
cli
leave
add
testb
scas
fs
xchg
sarb
fists
and
out
and
in
jne
mov
or
or
fs
jp
or
cmp
stc
add
mov
idivb
sbb
adc
clc
inc
les
jmp
or
cmc
imul
add
push
repz
outsl
jg
cmc
cmpsb
sbb
fidivs
arpl
push
sub
inc
loope
loope
fnstsw
aad
push
icebp
inc
and
lret
pop
aad
stc
or
fnstsw
jl
adc
mov
mov
or
mov
add
inc
adc
mov
mov
test
sahf
xor
add
mov
and
or
shll
data16
pusha
arpl
insl
gs
adc
jno
fs
movsl
jne
mov
mov
lcall
lods
mov
aam
xorl
push
inc
mov
jb
imulb
xor
ss
push
lods
dec
movsb
sub
pusha
fidivrs
push
fninit
mov
test
loope
mov
xor
arpl
sub
int
pop
add
dec
xchg
sbb
add
and
jmp
xor
push
add
mov
std
cmc
fsubp
rolb
pop
mov
insb
lock
inc
adc
xchg
test
aam
test
push
fists
jge
xchg
stos
lock
imul
int
jmp
push
dec
ror
clc
add
push
add
iret
in
pushf
add
mov
imul
xchg
in
pop
cli
out
xchg
add
pop
sbb
mov
push
add
sbb
jmp
sbb
mov
scas
dec
push
movsl
jg
add
lret
or
fcomi
jle
adc
sub
out
adc
inc
push
idiv
xor
jecxz
lock
clc
cli
or
movsl
std
inc
cli
xor
mov
lcall
in
xchg
mov
sub
pop
mov
sbb
aas
dec
cld
ds
cmp
push
addr16
ss
xor
les
test
xchg
sbb
out
mov
fidivs
lods
negb
inc
outsl
inc
lock
cli
push
mov
dec
add
ret
fstl
mov
ret
add
push
cmp
aad
push
stos
scas
out
outsl
cld
or
push
fs
test
mov
cmpsb
sahf
movsl
shlb
pop
outsl
dec
add
movsl
cmc
xchg
fbld
sbb
fldcw
into
push
sbb
subl
jbe
movsl
mov
xchg
in
sub
cmpsb
push
stos
sbbl
hlt
jge
inc
push
xchg
repnz
idiv
sub
jae
scas
lods
inc
sbb
cmpsb
cltd
sub
dec
pop
push
or
push
mov
mov
lods
gs
sbb
lahf
jecxz
aas
sbb
hlt
mov
xchg
or
daa
sub
les
and
fs
nop
and
cmc
int3
inc
sbb
lods
les
in
inc
mov
and
sub
push
push
js
push
movsl
rol
push
les
jl
js
xor
hlt
addl
pop
add
mov
adc
inc
xorl
mov
call
ret
push
addb
cmp
std
imul
or
roll
cs
mov
add
or
lret
xchg
out
xchg
gs
and
push
sti
sbb
mov
int
jo
dec
sbb
push
in
cs
push
clc
pushf
xor
push
jno
dec
push
roll
jne
and
inc
lods
data16
aas
out
add
push
adc
imul
and
cmc
sbb
mov
push
adc
test
mov
xchg
stos
sbb
sbb
or
loope
imul
xorb
sbb
mov
xor
add
and
test
or
xor
outsl
cmp
add
aam
sbb
insl
out
test
out
pushf
es
add
int
and
add
mov
ljmp
iret
call
or
in
cltd
mov
idiv
cmpsl
push
bound
push
or
add
shll
sbb
xlat
mov
movsb
lods
inc
and
pop
xchg
aas
int
add
mov
insl
mov
or
xor
xchg
icebp
movsl
mov
dec
push
xor
ja
ret
mov
jmp
and
scas
lds
sar
add
mov
mov
call
in
jmp
sub
cld
fsubs
stos
or
lods
movsb
xchg
imul
push
push
add
scas
jecxz
cli
leave
adc
xchg
mov
int
adc
popf
rdtsc
pop
out
fs
inc
pop
and
insl
inc
cld
inc
aad
hlt
sbb
xor
insb
cmc
xor
popa
or
xor
lds
jmp
push
out
xchg
push
movsl
cld
dec
movsb
push
jo
or
lds
add
rcrl
addr16
lret
mov
cmc
aam
sub
sbb
add
sbb
pop
es
testb
in
in
push
outsl
test
mov
lods
cwtl
insb
fs
sbb
pop
mov
add
or
subl
popf
dec
jno
ret
cmp
leave
cmc
es
fists
mov
cmpsl
xchg
fdivrs
adc
das
fimull
in
cmpsl
loopne
mov
notb
inc
add
mov
push
add
fstl
mov
mov
lret
push
jecxz
or
xchg
adc
dec
arpl
sub
ss
in
jmp
mov
data16
mov
and
arpl
or
fistl
enter
sub
xor
loopne
pusha
xchg
aad
lock
add
xchg
addr16
sbb
cwtl
xchg
outsb
mov
loop
pop
addr16
fnsave
add
fs
push
fsubl
fistps
and
insb
sbb
scas
cmp
push
mov
adc
inc
xor
aad
fwait
shrl
dec
push
daa
mov
data16
mov
test
mov
stos
xor
cmp
or
push
mov
pushf
and
scas
notl
mov
mov
negl
cs
in
enter
loope
xchg
adc
scas
loope
scas
sub
dec
pop
lret
mov
jecxz
iret
jg
xchg
lret
test
and
stc
fidivrl
arpl
xchg
mov
or
fs
js
iret
or
and
xlat
int
jno
js
push
or
popf
and
test
jne
int3
mov
in
data16
test
arpl
out
jo
rorl
lock
pop
and
xchg
std
mov
push
push
aam
sbb
in
inc
mov
xchg
out
addr16
pusha
popa
std
ds
popf
addl
cmp
pop
test
cwtl
andb
cmc
add
jge
jno
loopne
add
pop
aas
adc
xor
mov
js
orl
jno
in
and
sti
in
and
and
rorl
xchg
cmpsb
sub
loope
cmp
scas
es
das
iret
popa
push
pop
and
je
bound
into
call
add
push
sahf
mov
lods
mov
inc
clc
adc
mov
push
lea
leave
testl
ss
dec
arpl
add
aad
cmc
jle
popa
fs
xlat
movsb
movsl
in
push
jmp
es
mov
push
sbb
xchg
gs
adc
jno
cli
push
in
jns
gs
dec
jb
lock
jbe
add
out
push
dec
adc
movsl
sbb
test
mulb
movsb
mov
inc
test
push
fsts
rcrb
orl
mov
aam
imul
cmp
mov
out
test
rcrb
add
outsl
andb
testl
mov
test
sub
in
out
push
stc
lds
mov
or
and
out
pop
leave
in
pop
pop
add
movsl
shl
sub
popa
dec
mov
in
cmp
jmp
jg
lea
add
insb
shll
xor
cmc
push
in
mov
lret
add
insb
rcr
push
adc
andl
pop
push
dec
aam
add
jge
das
sub
fs
lret
cmpsl
packssdw
cld
bound
stos
xor
notb
mov
pushf
or
xchg
jmp
imul
sub
repnz
stos
xor
aaa
or
insb
jnp
jg
mov
in
mov
mov
sbb
sahf
pop
xor
fwait
cmpsb
fcmovbe
mov
or
pop
adc
out
add
cld
popa
add
pop
sub
int
nop
sbb
scas
aaa
jecxz
hlt
into
cltd
in
add
mov
repnz
cmp
outsl
lahf
add
jg
fsubrs
jb
cmp
mov
push
xorl
mov
sub
ret
pop
jno
lds
incb
lea
adc
dec
fs
call
push
incl
test
fisubl
pop
jbe
push
aad
jnp
push
push
and
bound
push
lds
jmp
out
push
mov
mov
cmp
outsl
movsb
push
mov
out
sub
add
xor
mov
imul
out
lea
test
dec
cwtl
jbe
xor
and
push
or
fldenv
cmp
and
sub
movsl
add
dec
jnp
inc
loop
push
inc
enter
mov
pusha
cli
dec
sahf
inc
push
inc
loope
mov
insb
ljmp
js,pn
test
inc
repz
adc
rcrb
xlat
sub
push
inc
ljmp
outsb
or
fwait
add
lahf
pusha
int
scas
rclb
sbb
or
adc
jns
stos
pop
into
mov
add
inc
jmp
xchg
jmp
sbb
jge
fisubs
mov
jl
mov
xchg
inc
mov
pop
lea
fmul
sbb
std
sbb
idiv
lret
cmp
add
xor
inc
xor
and
cltd
rorb
jecxz
mov
mov
call
jbe
pop
aaa
jmp
je
cli
push
aam
jecxz
pop
mov
popa
pop
jecxz
mov
sub
add
cltd
ror
jl
push
mov
imul
cmc
addr16
sbb
add
mov
add
push
mov
dec
rcr
cmc
int3
sub
push
add
add
adc
mov
cmp
mov
loope
nopl
and
ja
xor
or
int
dec
lock
mov
gs
gs
inc
inc
mov
push
push
xchg
mov
add
adc
movsb
or
lock
bound
fistps
or
call
mov
or
imul
lahf
jg
aam
add
ja
xchg
andl
add
daa
leave
and
fs
cmp
test
cmp
pop
lock
or
cmp
sbb
scas
xor
jo
jns
mov
iret
dec
and
xor
cwtl
xchg
ficoms
xchg
and
jg
xchg
inc
insl
mov
out
mov
or
fsubrs
fiadds
test
sti
or
test
std
out
movsl
arpl
or
in
xor
jl
dec
push
test
cmc
adc
or
adc
push
mov
sbb
cmc
movl
stos
daa
aad
add
hlt
into
push
pop
xorl
iret
rolb
mov
push
aaa
sbb
icebp
aam
sub
push
std
adc
fwait
das
pop
lahf
inc
icebp
push
popf
pop
add
shll
sub
adc
subb
add
into
loopne
or
es
dec
les
add
add
mov
ljmp
pop
dec
pop
dec
or
pop
adc
dec
loope
mov
orl
arpl
lcall
xchg
cmp
mov
mov
sbb
and
push
mov
xchg
imul
and
lock
sbb
jl
fs
mov
sbb
mov
aad
in
add
sahf
test
push
fs
sti
mov
mov
les
sub
mov
gs
push
f2xm1
repz
icebp
fldt
mov
inc
xchg
das
pop
or
clc
pop
fs
cmp
jnp
dec
add
je
sti
inc
jge
mov
outsl
adc
sub
pop
xchg
and
loopne
inc
inc
fs
xchg
mov
lods
mov
jle
push
movsb
inc
shl
stc
data16
je
add
cmp
sub
sbb
scas
xchg
mov
cmp
sub
mov
popf
mov
cmc
hlt
xor
das
dec
xchg
es
jb
pop
or
pop
or
xor
cmp
les
push
sbb
dec
sahf
xor
dec
nop
fs
rol
push
jp
pushf
in
xlat
adc
imul
out
xchg
aam
jnp
xlat
fs
lock
pop
adc
add
insl
pop
shll
mov
cmc
push
ljmp
add
pop
aas
mov
add
cmc
sub
mov
jae
addr16
js
add
xor
int
xor
hlt
add
pop
dec
xchg
jp
sbb
scas
xor
imul
sub
or
imul
sub
testb
jl,pn
xor
jnp
sub
fidivs
stos
fs
mov
ror
mov
xor
jge
loopne
roll
lcall
bswap
imul
faddl
pop
push
adc
pop
jg
dec
lods
pop
movsb
xchg
sbb
dec
add
sarb
pop
cmc
jno
fs
mov
dec
ret
or
mov
loope
mov
mov
push
jl
scas
cmc
sbb
hlt
lds
cld
sub
add
movl
push
lret
xchg
aaa
add
fwait
ret
mov
mov
arpl
cmp
pop
imul
dec
arpl
sbb
push
jl
and
icebp
mov
and
test
cld
insb
xchg
and
fsubr
ss
hlt
mov
cmp
adc
sub
xor
xchg
add
leave
cmc
pop
cmp
fs
iret
add
or
sub
and
int
les
iret
add
xchg
scas
sub
push
jg
add
scas
and
or
cmpsl
push
sub
xchg
cmp
mov
imul
test
push
jmp
jnp
and
stos
cmpsb
in
incb
call
popf
lcall
push
sub
jg
mov
rolb
or
stos
adc
mov
out
stos
mov
mov
in
jne
add
cwtl
xlat
inc
add
or
inc
jge
inc
jmp
fwait
or
sbb
pmullw
xor
cmc
call
arpl
push
add
add
out
dec
shll
enter
cmpsb
icebp
adc
in
cmp
out
mov
aam
add
std
repz
xchg
cmp
inc
enter
push
arpl
jae
or
add
imul
and
and
dec
lcall
into
push
aam
aad
xor
cmc
pmaxsw
daa
shl
adc
adc
jmp
and
iret
aam
repz
sbb
ds
arpl
sub
testb
xor
add
adc
push
fs
filds
cld
mov
lahf
add
jo
shl
pop
out
cli
fcmovnu
cmp
add
stc
les
div
and
loopne
icebp
add
adc
cmp
jecxz
es
repz
push
and
add
mov
clc
lock
xchg
adcb
inc
sti
pop
pushf
aad
xor
xchg
ret
movsb
lock
imul
mov
xor
movsb
adc
aam
cmp
lds
mov
jno
or
or
inc
arpl
pop
dec
pop
std
xlat
add
add
je
sub
add
adc
fsub
mov
dec
mov
sub
mov
jecxz
enter
xchg
aas
out
cmp
mov
and
cs
loope
xchg
fisubrs
inc
add
cltd
es
les
das
notb
mov
and
dec
clc
add
inc
stc
popa
xor
cmp
jbe
jbe
std
and
lret
cwtl
xor
add
push
sbb
xlat
add
ljmp
cli
mov
pcmpgtb
outsl
xlat
sar
lcall
call
testb
push
push
mov
dec
cmp
cs
rcrl
inc
es
jmp
lods
sti
rcl
mov
sbb
test
or
pop
adc
and
sbb
out
or
inc
add
dec
ja,pt
pop
add
les
stc
sar
add
inc
lds
loop
dec
inc
push
cmp
and
lock
jns
adc
jne
repnz
add
dec
popa
sbb
aaa
ja
nop
xchg
add
pusha
fiaddl
popa
fs
test
shll
adc
xor
xor
jp
ror
lea
iret
cmp
enter
xor
pcmpgtb
stc
xorl
sub
and
daa
mov
cmp
mov
mov
fs
loope
jnp
test
sarl
mov
cmpl
mov
push
shlb
add
pop
jns
lret
test
push
pop
jecxz
or
scas
insl
in
lret
fs
in
shll
pop
sbb
sub
pop
sbb
mov
ljmp
add
pop
cmp
xchg
mov
adc
inc
push
adc
shlb
mov
in
inc
lods
dec
push
inc
icebp
add
movsb
pop
dec
cmp
rolb
inc
shl
ljmp
mov
in
mov
inc
decl
fmull
pop
jbe
push
adc
aaa
jns
call
rcl
push
dec
roll
lds
push
sarb
adc
jae
enter
sahf
fstp
and
sub
popa
movsb
adc
into
or
add
loop
pop
sub
bound
cmpl
add
andl
popf
stos
pop
iret
gs
xor
insb
test
adc
add
testb
and
cmp
cmp
and
out
adc
adc
pop
xchg
push
out
popa
dec
add
sbb
stos
mov
sbb
or
stc
filds
push
jns
push
enter
aam
push
ljmp
insl
fs
jne
int3
add
xchg
inc
mov
sti
sub
xchg
inc
movsl
test
cmp
mov
pop
add
xchg
fs
aas
arpl
js
jns
add
and
hlt
xchg
movsb
fldt
add
cmp
add
pop
push
xor
xor
sub
jl
adc
mov
and
and
add
pop
imul
loope
aaa
es
adc
arpl
sahf
je
dec
imul
xchg
sahf
add
push
xchg
rorb
gs
lods
mov
sbb
jae
push
xchg
enter
and
push
push
or
add
xchg
xchg
xchg
idiv
dec
mov
fwait
mov
imulb
pushf
jl
idivl
lea
and
imul
inc
out
sbb
out
loope
imul
lahf
lods
daa
out
adcl
xor
iret
sub
inc
incb
enter
pop
push
inc
jmp
xchg
xchg
lcall
or
mov
bound
xchg
idivl
xchg
movsb
mov
xchg
inc
mov
mov
scas
aas
mov
fs
stos
shll
inc
adc
not
popa
clc
adc
mov
adc
test
fistpl
add
jecxz
xor
push
and
testb
add
ds
xchg
add
lea
cltd
enter
cld
adc
add
fs
cmp
insb
xlat
in
shll
add
mov
sbb
adc
insl
xor
int
mov
fidivrl
cmc
pop
decb
or
rolb
add
jle
ja
add
out
fs
cmp
push
add
faddl
sbb
rorb
ja
lahf
dec
xchg
dec
xchg
add
add
sbb
lcall
icebp
and
inc
jmpw
add
xchg
mov
jne
rcl
movsb
pop
push
or
xor
adc
lods
sar
inc
cltd
lahf
add
insl
bound
mov
in
and
cmpsb
inc
xlat
cld
push
add
or
mov
lret
jae
cmc
add
and
push
cmp
scas
mov
mov
test
call
cmpsb
xor
movsb
jo
push
add
loop
adc
sub
cmc
mov
and
and
fs
bound
std
addb
xchg
inc
in
or
fldenv
cmp
inc
cmp
insl
bound
sub
push
sbb
sub
hlt
xchg
stc
and
ss
fadd
mov
pop
adc
jbe
lock
out
scas
test
jecxz
hlt
cmp
cmp
ja
cmpsl
and
cmc
lahf
adc
lods
out
push
add
mov
js
or
lds
insb
out
cwtl
push
stos
pop
iret
add
mov
add
cmp
mov
push
cmc
xchg
mov
mov
mov
and
addr16
cld
clc
sbb
jo
pusha
xor
mov
and
cld
mov
sub
shlb
xor
and
pop
mov
jg
mov
inc
cld
or
shlb
gs
call
repnz
out
cmpsl
and
outsb
and
cmp
imull
mov
mov
loop
das
lret
jo
insb
push
ja
fdivr
lret
stos
test
sub
push
xchg
adc
inc
xor
cld
cmc
or
cs
imul
push
cmpb
in
lods
mov
stos
pop
or
mov
rorb
push
cmp
ret
fildl
repz
push
sub
loopne
testb
aaa
cmc
cmp
pushf
inc
test
addr16
divb
fmuls
pop
or
add
pop
fmull
jp
inc
in
adc
adc
orl
arpl
bound
loope
add
mov
or
sub
fildll
sti
pop
mov
pop
cmc
ret
cmp
lret
gs
sbb
gs
jg
push
cmp
jecxz
popa
dec
movsb
sbb
add
scas
xor
insl
out
imul
mov
sbb
repnz
jb
fsub
sbb
cmc
insb
imul
bound
arpl
cmc
sbbb
mov
add
or
jge
inc
test
mov
sbb
sti
dec
pop
andb
push
adc
mov
jae
cmp
test
sbb
shl
or
inc
insb
mov
mov
xor
lret
cmpsb
jmp
test
into
mov
cld
xor
pusha
cmp
data16
movsl
lock
pop
add
adc
add
rolb
lods
repnz
shll
mov
adc
mov
cmp
add
sbb
or
aam
flds
std
sarl
insb
movl
lretw
add
push
add
dec
dec
cmc
add
in
les
add
lods
or
xchg
add
or
jae
test
xchg
xchg
xchg
and
and
lds
jb
inc
lods
dec
js
aad
or
aam
fnstenv
ds
out
mov
push
pop
cmp
mov
xor
xchg
outsb
outsb
or
inc
sti
daa
addl
out
fcom
xor
cld
xor
or
les
xchg
sub
pop
pop
sub
jmp
or
icebp
or
gs
int
testb
in
push
movsb
sub
cmp
dec
jbe
test
icebp
cmc
cmp
cmp
add
pop
pop
dec
mov
dec
div
popa
cltd
out
les
and
add
or
add
add
in
cmpsl
aam
pop
incl
or
push
fneni(8087
mov
add
je
rolb
add
add
test
add
fucom
popf
stc
decl
sbb
insl
push
js
xchg
push
jae
test
lea
out
fcmovnbe
jnp
ljmp
jns
or
cmp
jbe
adc
mov
jae
inc
add
fs
xchg
dec
sti
and
insl
arpl
xchg
sub
cmc
mov
outsb
mov
and
add
cmp
or
and
sub
add
cmp
sti
push
dec
lods
add
test
popf
push
or
pop
insl
loopne
mov
adc
inc
fs
xchg
and
stos
in
mov
sarl
xor
subw
mov
mov
flds
and
loope
jmp
jle
xlat
mov
push
and
pop
addl
and
xor
mov
insb
shlb
pop
xchg
jns
out
push
inc
stc
xchg
xor
add
mov
pop
clc
sbb
fwait
mov
bound
add
push
or
fnstenv
bound
add
out
and
pcmpgtd
repnz
stc
inc
or
popf
lret
add
movl
or
fs
cs
insl
add
and
mov
fs
es
loop
adcb
push
ja
sbb
imul
out
fs
adc
adc
xor
rcr
sub
addb
mov
ss
fimuls
xchg
jmp
jmp
mov
or
inc
daa
insl
push
xchg
stos
jno
push
push
push
insb
add
fidivrl
pop
jecxz
into
mov
js
and
loope
arpl
movsl
add
inc
and
repnz
aam
and
and
aam
adc
popa
out
lret
pop
mul
lods
sub
add
jmp
ss
mov
ror
out
loopne
arpl
negb
cld
adc
adc
sub
lock
test
hlt
fstpl
push
aaa
repnz
negl
add
dec
sub
xor
or
sbb
ror
stos
or
mov
add
or
mov
roll
cmp
incl
aas
in
das
and
lret
push
cmc
mov
std
out
mov
jb
push
aas
xchg
fsubs
in
mov
ds
lcall
ds
lea
cmp
mov
movsl
mov
clc
add
xor
popa
idiv
in
arpl
mov
push
or
xchg
jb
mov
adc
add
pop
arpl
or
dec
add
or
fwait
test
push
stos
repnz
inc
outsl
fstpl
mul
andl
insb
or
ret
mov
inc
push
dec
inc
popf
or
adc
mov
xchg
push
cmp
add
lods
push
icebp
adc
mov
push
xchg
aam
shll
add
push
mov
aad
cmp
dec
dec
dec
jae
andb
pop
or
das
mov
insb
xlat
xchg
cmpsb
and
jp
or
out
adc
mov
loope
data16
sub
shrb
cmc
fs
imul
pop
lods
add
rcl
jle
in
orl
fs
imul
xchg
cmp
popa
test
aas
and
mov
xchg
test
arpl
in
mov
push
fcmovne
push
xchg
xor
and
pop
or
fwait
lock
dec
sbb
iret
scas
aas
int
push
jmp
out
push
inc
repnz
subb
push
inc
ds
and
or
pop
add
fcompl
mov
scas
xor
xchg
cli
cmpsl
stc
hlt
push
jl
xor
add
sbb
rorb
cmc
enter
xor
ds
sbb
push
sbb
adc
cltd
add
push
add
or
sbb
incl
cltd
cmp
adc
jnp
mov
ss
xchg
inc
jns
and
inc
test
and
jp
cmc
push
jne
sahf
daa
and
jg
imul
jns
test
and
mov
vunpcklpd
xchg
loopne
sub
sub
push
add
cmp
sets
iret
pop
pop
ror
out
scas
cmc
mov
fstl
or
loopne
pop
daa
out
cmc
lock
leave
lds
jl
or
or
loop
cmc
std
push
xor
cmp
cmp
mov
lods
mov
dec
imul
out
or
call
fsubl
shl
cmc
pop
enter
dec
loope
rcrl
nopl
mov
in
add
stc
daa
insb
xor
scas
xchg
leave
jns
aad
inc
loop
jl
test
popa
jge
loope
mov
lea
cmp
fnstenv
pop
xor
add
cmpsb
shrl
add
xchg
cmc
gs
pop
rcrl
loopne
mov
pop
mov
leave
inc
pop
adc
iret
and
aad
fstpt
js
dec
cmp
adc
lock
mov
incl
add
popa
sbb
das
sub
shll
les
cs
das
push
xchg
ficomps
xchg
std
stc
inc
pop
add
mov
imulb
pop
fs
or
pop
es
sbb
scas
pop
push
pop
cmp
mov
int3
loope
mov
xor
mov
lds
mov
inc
pop
aad
cmc
data16
cmp
jecxz
and
push
cmp
xchg
and
xor
xor
mov
and
xchg
cmpsb
push
cmpsb
test
jbe
pop
pop
mov
dec
push
or
lods
pop
popa
ror
cmp
xchg
sub
test
adc
cmpb
js
push
fsubp
cmc
aam
and
rolb
clc
pushl
shl
sbb
mulb
sub
jbe
mov
cmp
js
hlt
add
ret
fcoms
notl
mov
ficoms
sbb
sub
xchg
xor
cltd
inc
pop
and
push
mov
testb
mov
pop
mov
mov
cmp
mov
mov
push
or
ret
or
sbbb
andb
fs
sub
mov
jmp
cli
add
and
push
movsl
sub
stos
ret
cmc
add
mov
jb
testb
fsubr
sbb
ljmp
push
sbb
push
xchg
sub
pusha
aam
and
ljmp
icebp
cmc
push
mov
xor
add
mov
cwtl
into
mov
and
imul
adc
sti
es
sbb
test
fs
xor
and
das
add
inc
inc
pop
ret
xchg
adc
add
shl
scas
std
add
xor
cmp
sub
cld
dec
or
mov
rolb
jle
in
dec
es
leave
mov
ja
call
mov
lock
lock
add
mov
outsb
push
adc
add
jl
mov
add
cwtl
push
add
sbb
xchg
add
std
insl
cmp
fisttpll
or
jmp
sbb
mov
out
lahf
lock
gs
shll
movsl
out
shll
ss
sbb
push
xlat
les
pmuludq
jge
add
arpl
mov
cmp
inc
jecxz
cmp
jnp
xchg
adc
fnsave
daa
or
push
mov
push
push
std
xor
mov
mov
lea
pop
sbb
out
aad
mov
lret
arpl
xor
mov
or
add
xchg
add
shrl
add
leave
sbb
idivb
cmc
pop
call
sbbb
mov
sbb
data16
into
pop
add
push
push
jne
push
ljmp
xchg
ds
repz
leave
sub
fldl
movsb
movb
jne
or
cmc
inc
test
mov
cmp
xor
ret
add
adc
adc
vaddsubps
insb
loope
lret
fmulp
cmp
in
shll
in
or
es
push
add
pop
js
gs
subb
sbb
pop
shr
and
movsb
daa
push
push
lahf
sbb
cmp
enter
in
es
aam
sub
add
or
or
sahf
mov
pop
js,pt
mov
ds
push
pop
cmpsl
and
sub
inc
mov
cli
lret
pop
not
fsubl
adc
jp
testb
inc
lret
cmovnp
data16
ret
call
adc
jmp
jne
cli
je
mov
subl
sub
jno
xchg
mov
xor
pop
mov
repnz
push
sub
sbb
lods
flds
xlat
xorl
outsb
mov
pop
sbb
and
xchg
jmp
cmp
ror
je
in
mov
imul
jnp
sub
add
sbb
add
mov
mov
and
or
add
inc
ret
sub
sbb
insb
or
in
fs
fnstenv
cmp
pop
addr16
add
ljmp
into
and
in
sbb
add
ljmp
lea
incl
sub
add
jecxz
iret
lds
shrl
add
push
dec
push
add
ljmp
add
test
das
jbe
inc
arpl
das
int3
bound
lret
dec
mov
rcrl
pop
add
pop
inc
int
test
cmc
adc
ljmp
add
daa
lret
pop
sbb
dec
fldcw
cmpsl
enter
loope
dec
inc
mov
push
int
mov
xchg
jns
leave
inc
push
jbe
mov
mov
fldcw
stc
rorb
inc
cmp
insl
jmp
cmp
fwait
add
out
adc
mov
mov
adc
mov
es
lock
xchg
add
mov
xorl
out
insb
xchg
fists
sub
sub
mov
or
mov
xor
mov
xchg
or
pop
bnd
xor
lods
pop
mov
shlb
mov
push
xchg
sub
mov
push
jmp
pop
lods
loopne
arpl
push
or
incl
cmpsb
sub
mov
inc
scas
shll
push
sbb
add
movsb
sub
add
add
or
xor
xlat
cmp
ljmp
inc
dec
push
or
mul
sbb
xchg
aas
pop
add
cwtl
pop
adc
cwtl
pop
and
adc
fstl
sbb
in
popa
test
push
aad
in
cs
popa
mov
mov
lcall
push
push
jl
lds
shl
mov
je
or
outsb
adc
xchg
or
insl
mov
mov
cmc
shrb
aas
movb
insl
xchg
repz
imull
mov
cmpl
add
pop
xchg
pop
add
jmp
or
inc
or
inc
xor
fnstsw
inc
adc
and
insl
push
xor
hlt
in
into
xchg
pop
push
imul
rep
jne
add
mov
hlt
adc
add
inc
mov
fstps
cmc
rcll
fs
and
mov
jae
cmpb
xchg
and
faddl
shll
lea
sub
cmp
scas
add
inc
gs
sbb
adc
in
addl
inc
and
stos
movsb
insb
pop
hlt
push
cli
jb
hlt
sub
orl
adc
sbb
sti
fs
in
or
sbb
test
cmpsl
es
daa
mov
pop
inc
jbe
ss
fldt
and
lret
mov
ss
xor
inc
add
test
xor
or
notl
dec
inc
cmp
pop
sub
out
dec
aad
xorl
pop
add
add
push
mov
jmp
fs
jae
scas
jae
xor
or
repnz
push
pop
leave
sbb
popf
mov
ficoms
icebp
test
inc
jl
arpl
out
ljmp
mov
jne
leave
mov
dec
pop
testb
push
jl
shrl
xchg
cmp
in
gs
dec
dec
int3
fs
sbb
xor
es
in
pop
aas
cwtl
cmp
push
sub
mov
xchg
aaa
mov
es
xor
addr16
insl
and
dec
pop
addl
adc
mov
fnstcw
mov
push
add
mov
incb
jne
out
mov
loope
aad
cmp
test
add
pop
sub
divb
push
xor
fistl
xlat
jmp
shrb
add
or
mov
xor
lahf
push
push
push
cmp
mov
je
mov
loope
cmp
add
push
dec
dec
testl
lods
inc
and
enter
push
xor
mov
loope
test
push
stos
mov
popf
je
fs
dec
or
jmp
cwtl
jns
int
and
jge
movsb
negl
push
mov
dec
shlb
add
push
xchg
add
push
data16
lods
lods
and
dec
testl
std
rorl
add
stc
in
repz
add
arpl
adc
inc
pushf
jbe
in
push
cmc
arpl
mov
negb
gs
nop
out
add
loop
mov
xor
pop
add
push
imul
dec
insb
cld
repnz
jne
fpatan
hlt
sbb
pop
outsb
or
sub
dec
ljmp
hlt
pop
scas
sub
mov
in
lds
fs
movsl
push
jns
mov
add
inc
sbb
jg
rorl
inc
jno
scas
add
fs
nop
fildll
lret
imul
sub
jo
jge
neg
stc
mov
xchg
dec
add
ss
lods
mov
jns
lock
sbb
sub
lcall
enter
scas
and
std
out
inc
fldt
popf
add
fdivp
jmp
jnp
inc
aam
sti
push
cmp
outsb
inc
fs
shr
mov
hlt
sub
int3
mov
cmc
cmc
enter
fs
xchg
loope
repnz
sub
push
mov
addb
sub
or
data16
movsb
add
lea
fimuls
push
popa
and
jp
xchg
jns
cmp
add
jmp
in
gs
out
pop
inc
push
icebp
jmp
inc
add
int3
mov
iret
add
arpl
fsubl
cwtl
inc
inc
clc
imul
sub
fsubs
inc
xorl
sbb
sub
push
enter
add
and
dec
xlat
pop
xor
call
sub
add
mov
inc
add
in
push
mov
jnp
xchg
stc
jle
sub
js
jl
imulb
lahf
lods
dec
mov
and
fildl
dec
or
cwtl
sub
jmp
xchg
out
push
popa
add
jne
pop
add
clc
int
add
sti
pop
iret
cmp
mov
in
adc
add
xchg
and
sbb
add
nop
xchg
fwait
jo
jne
mov
jno
les
inc
push
cltd
clc
add
mov
cltd
inc
popa
cmp
movsb
lods
and
jecxz
clc
lea
mov
sub
jno
and
fadds
jns
fldt
fs
dec
pushf
inc
aas
sbb
push
inc
fimull
aaa
mov
es
sti
mov
dec
sbb
sub
mov
lock
add
imull
movsb
adc
mov
es
std
sub
add
ss
testb
dec
cmc
jge
pop
lods
add
push
sbb
cmp
mov
insl
cmpsl
fs
inc
pushf
mov
or
and
lock
cli
xchg
and
dec
jecxz
add
sub
xor
imul
and
cmp
fsts
cmp
fbld
in
push
pushf
in
xor
or
out
add
inc
mov
xchg
xrelease
sub
rcrl
sbb
ret
aam
ljmp
ja
adc
jne
rcl
ret
add
lcall
mov
insb
mov
addr16
cmp
inc
cmc
pop
push
scas
in
addr16
std
add
xor
fmull
mov
out
cltd
inc
mov
push
jbe
int
roll
sti
testl
pop
imul
inc
imul
dec
lcall
cmp
xor
add
loope
ret
mov
nop/reserved
inc
lods
sbb
fdiv
or
xor
sbbl
sub
mov
in
jne
jno
daa
rcr
add
cmc
or
jp
test
adc
test
fs
fiadds
nop
inc
cmc
or
out
push
mov
cmp
mov
pop
popa
add
inc
out
mov
fimuls
xor
roll
fldl
arpl
inc
xchg
insl
int3
stos
dec
xchg
push
das
test
in
xor
fnclex
fs
int
inc
push
add
aas
add
insl
push
pop
jmp
push
pop
sub
div
or
negb
popf
and
sub
mov
or
xor
or
addl
sub
sub
jmp
clc
add
mov
sbb
cmp
jecxz
call
add
sbb
mov
pop
sbb
pop
ret
jns
fldenv
outsl
test
cmp
lds
lret
test
popa
add
xchg
insb
push
jo
iret
aam
add
or
or
ja
sub
inc
dec
ret
inc
testb
jmp
mov
imul
mov
je
imul
mov
add
stos
pop
lock
dec
pop
add
ljmp
xchg
sti
add
xor
pushf
out
or
rcll
movsl
je
sbb
push
movsl
sub
add
add
push
add
arpl
cld
cmc
add
or
jne
push
scas
lea
ret
push
xor
inc
jb
fs
xchg
insb
in
fstpt
out
aad
cmpsl
pop
jbe
fs
cwtl
sbb
mov
xchg
add
in
xor
cli
xchg
fldt
aaa
dec
mov
sbb
vcvtsi2ssl
mov
bound
mov
out
and
xor
fsubr
inc
pop
jbe
arpl
cli
lret
enter
mov
pushf
popa
popf
stos
push
mov
or
push
bound
sub
insl
or
mov
inc
roll
jbe
ja
jle
dec
xchg
not
jmp
cld
jmp
adc
repnz
loopne
or
inc
pusha
push
mov
cli
lret
inc
test
lcall
call
fwait
and
inc
call
loop
nop
add
aas
lds
dec
cmc
lods
arpl
aad
insb
xor
pop
insl
testl
sub
inc
mov
decl
cmc
jno
adc
shrb
cmp
xchg
dec
int
shll
dec
bt
js
xchg
sub
inc
jle
int3
sbb
dec
lret
push
adc
and
push
push
add
add
cli
daa
ficompl
dec
adc
outsb
dec
lret
add
push
pop
jp
les
cmp
mov
sub
sbb
sbb
int
mov
divb
daa
out
cmp
in
int3
in
jecxz
cmpsb
jnp
cmp
push
mov
mov
push
hlt
cmp
hlt
es
ds
add
jl
xor
or
cmc
fnsave
jb
setbe
mov
in
sub
rorb
mov
test
push
fiadds
or
hlt
or
dec
movsb
pop
into
in
and
lret
lock
cli
clc
sbb
cmp
bound
jbe
loop
inc
cmpsl
call
jae
push
sub
add
xchg
mov
and
out
mov
jmp
cmp
in
jae
fisubrl
adc
lret
in
lcall
arpl
xchg
ss
popa
sub
cmpsl
fcoml
push
mov
push
xchg
mov
repz
mov
loope
jne
sti
add
xchg
sbbl
iret
fildl
mov
rclb
push
jg
push
or
enter
sbb
sub
add
imul
push
and
inc
mov
mov
jno
and
jne
fs
sti
sub
test
fmul
sti
iret
jmp
adc
test
data16
mov
add
int
xchg
orb
xchg
scas
std
lods
xor
add
pop
mov
jo
sub
sub
ss
andl
sub
pop
mov
push
mov
mov
and
lret
or
xor
sub
arpl
dec
pop
jno
jns
sub
insb
lcall
movsl
daa
cli
mov
into
cmpsb
mov
pop
rclb
dec
push
out
or
mov
fs
pusha
insl
stos
mov
scas
jne
push
mov
in
icebp
xor
push
jmp
punpckhbw
out
add
es
pop
and
fisttps
xchg
xchg
adc
pop
push
hlt
aam
push
fisttpll
push
aad
mov
ss
xchg
cmpsl
bound
mov
sti
cmp
xchg
jo
pop
je
sub
scas
bnd
pop
add
xchg
sti
pop
enter
js
xor
xor
pop
movb
xchg
btc
mov
dec
cmp
dec
jle
mov
divb
lock
movsl
jle
jno
fisttpl
xor
xor
fs
add
cmpsb
repz
fs
xchg
inc
mov
add
fwait
orl
jne
es
inc
insb
adc
sar
repnz
add
test
testb
xor
jne
sbb
scas
popa
sub
dec
push
cmpsb
xchg
sub
inc
lea
into
scas
push
add
mov
movsb
negb
std
hlt
add
daa
push
mov
push
lret
push
add
in
mov
dec
sub
mov
or
test
pop
jne
mov
or
cmc
adc
test
adc
jno
add
xor
mov
daa
fs
or
pop
fldt
data16
and
fs
mov
pop
xchg
push
sbb
pushf
mov
push
fcoml
fdivl
sti
or
int
inc
pushl
mov
mov
adc
aas
lds
shr
aas
ljmp
iret
rclb
lret
outsb
inc
addl
mov
subl
lock
sahf
in
mov
fadds
in
shl
and
and
xlat
les
ret
outsb
test
sub
insl
xor
pop
pop
mov
pop
mov
xor
stos
xchg
sbb
xchg
add
cs
or
and
jne
es
jne
inc
xchg
dec
les
push
mov
xchg
sbb
fs
repz
fimuls
or
xor
repnz
mov
mov
popf
sub
data16
lret
xlat
lock
pop
push
cmc
mov
lods
adc
xchg
lret
add
mov
ret
negb
int
sti
pusha
popf
pop
jmp
mov
sbb
int3
lahf
cmp
rorl
cmp
mov
jnp
xchg
sbb
sub
mov
xchg
or
popl
repnz
pusha
inc
sti
cli
lcall
out
test
std
xchg
repnz
sbb
lea
add
cmc
sti
mov
add
add
sub
scas
inc
out
and
adc
ud1
addr16
xor
fs
add
fisubrl
xor
dec
or
dec
and
insb
fs
xchg
addb
pop
insb
inc
test
add
test
sar
xchg
outsl
mov
cmc
xor
fdivs
ret
jb
filds
stc
mov
fidivs
jbe
or
mov
and
xchg
rcr
or
arpl
mov
pop
add
pop
mov
arpl
sbb
fsts
jbe
cmp
cmc
inc
add
and
out
xchg
push
divb
pusha
or
push
sbb
inc
add
outsl
xor
add
mov
mov
push
mov
dec
mov
pop
cmp
lock
fwait
mov
mov
mov
inc
pop
xor
pusha
lea
pop
xchg
mov
aam
push
add
stc
mov
add
sbb
xchg
and
xor
adc
jle
fs
mov
xorb
mov
push
pop
imul
xor
xor
and
or
mov
aaa
sti
rcll
dec
pop
adc
movsb
dec
sbbb
adc
jmp
push
enter
hlt
hlt
lds
orb
or
lock
jb
shr
push
fsubr
jp
push
repnz
scas
lret
lock
adc
jns
sub
cs
mov
gs
aam
rcrb
push
lret
cmp
dec
mov
not
cmovb
xchg
nop
mov
xchg
sub
fs
fs
cmp
push
sti
clc
or
or
sub
inc
fiadds
mov
push
ja
clc
mov
jp
cmc
xchg
add
xlat
pop
imul
add
mov
push
arpl
add
out
cmp
inc
inc
andl
push
add
outsl
or
sti
mov
dec
mov
and
pop
add
xor
dec
and
adc
pop
add
sbb
add
sarb
repz
xchg
add
cs
jg
cmc
mov
fidivrl
icebp
add
jns
fldcw
jb
insb
adc
sbb
cld
ret
adcl
or
lock
cwtl
cmp
and
lods
sbb
fwait
out
in
test
inc
subb
add
cmp
inc
sti
rclb
mov
je
inc
or
jp
mov
or
cs
inc
jo
iret
jno
shlb
add
jmp
mulb
xor
add
pop
sbb
xchg
into
sbb
aaa
fs
jmp
cli
movsl
pop
add
cmpsl
out
cld
xor
or
push
and
add
fs
or
jecxz
dec
ficomps
mov
hlt
fs
aam
jmp
xchg
fwait
insb
and
fnstcw
mov
insl
testb
inc
mov
js
cmpsl
xor
jp
jbe
jg
je
into
lahf
and
dec
mov
mov
or
mov
ds
jno
add
sbb
fdivp
add
inc
ljmp
pop
sub
inc
mov
inc
inc
addr16
xor
cmp
inc
ror
scas
roll
pop
cltd
add
std
jp
jmp
xchg
cmp
add
cmp
aad
es
popf
xor
insl
adcb
imul
or
sub
sbb
out
sub
dec
jbe
pop
cmc
mov
push
add
mov
jnp
pop
cmp
and
fisubrl
dec
sbb
sbb
sbb
adcl
daa
pop
push
test
sbb
cwtl
pop
lret
out
idiv
test
fsts
sahf
pop
ds
out
out
and
add
les
xchg
xchg
insb
and
jp
push
test
mov
add
mov
sbb
lds
add
dec
stos
inc
mov
push
add
push
xchg
mov
imul
iret
cmpsb
lds
and
dec
push
ja
xchg
stc
or
add
mov
push
or
mov
mov
movsb
add
lret
sbb
ja
pop
daa
mov
dec
leave
or
add
test
cmpb
fbstp
sar
jnp
test
sti
push
jmp
adc
fwait
imul
jae
adc
or
pop
test
lds
notl
frstor
mov
adcl
clc
push
add
ficomps
ss
mov
in
mulb
mov
popf
add
int
or
push
andb
mov
and
mov
sub
sbb
out
cmc
cs
shr
dec
pop
jmp
lret
dec
aam
jne
push
cmp
jmp
pop
push
pop
dec
into
cmpsb
add
popa
imul
fs
cmc
clc
pop
scas
test
dec
shlb
dec
pusha
stc
add
test
stos
int
stc
sbb
outsl
add
jno
mov
push
sbb
jmp
jbe
jo
mov
pop
jle
add
sub
cmp
fucom
fstps
jbe
push
mov
lcall
or
test
mov
pusha
movsl
ret
sub
dec
add
idivb
mov
addr16
jecxz
push
adc
mov
std
mov
cld
add
inc
aaa
push
mov
pop
pop
sahf
je
test
fs
int3
cmp
add
xor
jmp
sbb
jmp
test
jb
std
xor
inc
gs
arpl
mov
stos
test
cld
or
int3
sub
inc
mov
repz
xchg
insl
sub
ficomps
and
add
adc
lea
mov
inc
aad
and
or
add
mov
sbb
scas
enter
les
fadds
mov
int
or
and
cmc
jl
mov
xchg
mov
mov
fs
sub
xchg
dec
out
in
test
outsl
mov
push
lcall
leave
or
push
push
or
push
cmpsl
cmp
adc
test
and
sub
jmp
mov
add
dec
pop
test
mov
sbb
add
std
adc
shrl
push
mov
and
add
xor
push
jno
or
pushf
lcall
gs
push
sub
jb
popa
and
or
sti
mov
in
insl
shlb
daa
pop
xchg
neg
cmp
shlb
sbb
add
insb
mov
mov
add
mull
xchg
add
mov
dec
mov
sbb
sti
xchg
adc
movsb
sub
cltd
mov
iret
dec
dec
roll
daa
sti
and
or
sahf
jns
pop
jg
fs
shl
dec
add
jl
enter
or
pop
dec
xor
in
pop
mov
xchg
into
xor
call
xchg
mov
pop
insb
fldl
repnz
enter
rol
add
imul
pop
mov
sub
jne
pusha
or
sub
cld
jo
testb
jnp
mov
sahf
jl
sti
mov
add
inc
add
sbb
pop
scas
aad
in
push
and
cli
inc
clc
pop
adc
add
push
test
push
lock
aas
push
fs
stos
jns
add
mov
ds
test
mov
fs
add
push
lret
xtest
dec
xor
ljmp
hlt
cmp
push
fs
add
pop
leave
lahf
and
cwtl
ljmp
add
fbld
repz
loope
xor
push
xchg
sbb
es
inc
inc
in
orb
out
cmp
or
pushf
add
bound
outsb
bound
div
mov
sahf
std
movsl
pop
inc
push
sub
xor
jnp
xlat
test
xchg
mov
xchg
mov
data16
push
sub
divb
sbb
push
sub
mov
and
addb
or
mov
cwtl
xor
sbb
popa
add
push
add
xchg
icebp
addl
fidivrl
or
push
lock
into
jnp
cmc
pop
and
inc
mov
adc
fsubrs
aas
gs
pushf
out
jmp
cmp
movsb
addr16
mov
xor
enter
sarl
sbb
pop
sbb
or
or
inc
inc
bswap
push
push
fs
inc
mov
push
cmc
addl
cmp
fisubs
pop
fiaddl
add
ljmp
addr16
push
pop
xlat
popa
jnp
and
in
adc
fsubs
das
ds
cmpsl
add
out
jbe
fs
ja
jbe
push
xor
cli
inc
fdivrs
orl
mov
or
hlt
hlt
insb
xlat
jge
lea
cmpsl
inc
pop
add
pop
out
push
cmpl
and
add
add
stc
dec
and
or
pop
or
sub
add
or
xor
leave
stos
add
loop
sub
pusha
pop
rcr
es
xor
test
imul
pushf
jge
sub
incb
aad
sbb
fs
and
not
ss
mov
loop
push
push
sbb
push
push
inc
inc
call
xor
add
mov
aas
jmp
in
adc
cmp
xchg
add
pop
es
adc
int
mov
mov
jno
mov
fimull
inc
insb
add
xor
mov
int3
iret
inc
xchg
adc
shrb
out
pop
lahf
sahf
ret
jmp
lea
lret
cmpsl
adc
or
inc
clc
fsubr
je
hlt
xchg
loopne
negb
nop
fcmovb
insl
cmp
repnz
mov
mulb
dec
xchg
jnp
or
loopne
dec
popa
push
jb
jae
jecxz
es
rcrl
inc
mov
sbb
push
movsb
push
sti
mov
add
pusha
and
push
and
sbb
test
pop
inc
jb
clc
add
bound
cmc
push
shlb
add
call
cld
add
mov
clc
repz
sub
xor
adc
dec
pushf
pop
ret
cli
in
fld
cmp
insl
cmp
dec
outsl
sbb
add
mov
sbbb
loope
movsl
jae
lcall
shll
mov
aam
add
pop
and
andl
inc
xcrypt-cfb
cmpsl
mov
shll
adc
lods
aam
faddl
pop
mov
out
sbb
sbb
push
jp
testb
push
pop
cmpsb
xchg
int
inc
jbe
cmp
mov
xor
mulb
jno
adc
scas
rcrl
add
pop
pop
mov
xchg
dec
cmc
and
cmp
flds
sbb
dec
aaa
ss
icebp
dec
jns
mov
rorl
leave
pop
and
jle
pop
mov
pop
push
sbb
test
sahf
fstl
mov
pop
lods
mov
int3
data16
sbb
sub
out
jmp
add
into
push
fcompl
mov
sub
gs
pop
mov
decb
stos
fnstenv
js
add
xchg
pushf
aam
jns
lahf
cmc
rcr
jbe
shrb
push
or
movsb
inc
pop
mov
daa
ret
mov
dec
imul
jae
adc
or
rolb
pop
clc
insb
xchg
add
jg
rclb
cli
cmc
repz
mov
hlt
add
push
jae
shlb
sti
mov
in
add
push
icebp
mov
jae
movsl
mov
adcb
dec
ja
add
mov
test
lock
dec
es
inc
pop
or
repnz
mov
loopne
int
cmpsb
loop
loop
imul
test
aam
push
pop
sahf
and
in
xchg
xchg
and
inc
fsqrt
jnp
cmp
mov
pop
xor
sub
stos
data16
ret
jmp
push
mov
inc
xchg
and
or
jns
or
mov
cli
cli
pop
add
test
ljmp
out
cmp
add
cmp
jns
push
in
mov
dec
lds
shlb
mov
sbb
shrl
andl
push
sub
out
int3
dec
or
dec
jnp
sub
add
cmc
jge
aad
push
add
je
test
push
jmp
mov
inc
fstpl
adc
ret
add
fs
enter
arpl
cwtl
cmp
fs
daa
ficoms
cli
loope
pop
fmuls
test
adc
adc
out
stc
or
xchg
notl
pop
fisttpl
cmp
ljmp
lods
dec
fs
xor
add
sti
movsl
test
xor
push
jbe
paddq
into
fs
pushf
aam
fptan
fldcw
xorl
cmpsb
inc
movsl
sahf
lock
xlat
pop
mov
lret
cmp
out
mov
shlb
xchg
sahf
scas
mov
sub
jmp
ficoml
lds
jmp
loope
push
pop
js
xchg
add
aad
lcall
xlat
xor
and
imul
les
sub
xlat
gs
dec
lahf
sti
jmp
push
cld
xchg
and
shll
pop
add
scas
cmp
cmp
add
mov
push
std
and
xor
mov
push
aad
add
mov
notb
mov
cltd
cmpsl
lds
push
iret
popa
outsb
inc
rorb
inc
mov
add
add
and
sbb
cli
int
scas
roll
mov
mov
addr16
gs
pop
and
and
dec
bound
fnstenv
xor
inc
push
mov
aaa
rclb
pop
test
add
movsl
lock
xor
stc
aaa
adc
add
cltd
adc
adc
mov
out
imul
mov
fimull
sub
ljmp
divb
enter
cli
cli
jne
add
insl
test
jo
lcall
in
js
push
ds
mov
push
push
pusha
jno
ror
sub
test
add
pop
insb
pop
pop
fs
push
or
cmp
ds
inc
xchg
cmc
sbb
and
fwait
push
inc
roll
xchg
repz
outsb
mov
fildll
add
test
inc
cmc
ss
inc
pop
mov
xor
lret
stos
imul
lar
int
sub
or
orl
push
jecxz
int3
test
sahf
cmp
adc
cld
adc
jp
or
xchg
lret
divl
lods
adc
cmc
dec
xchg
xchg
fwait
xchg
pop
add
std
popa
mov
ljmp
sub
add
push
imul
xlat
or
or
mov
fcoms
jns
cmpsb
mov
aas
mov
dec
clc
in
inc
dec
push
jp
out
bnd
add
les
enter
ds
jne
add
push
mov
lret
pop
rolb
pop
inc
mov
test
enter
inc
movsl
sti
popf
movsb
shlb
aam
leave
cld
stc
add
and
adc
imul
cli
repz
or
lahf
ret
in
push
dec
xor
jnp
push
icebp
mov
in
xchg
push
dec
hlt
mov
jmp
sahf
add
xchg
out
lods
dec
inc
or
pop
add
sbb
mov
mov
or
pop
cs
mov
data16
and
dec
and
pop
mov
testb
jne
iret
or
add
sbb
fs
mov
into
adc
mov
lcall
cli
add
insb
negb
xchg
xchg
push
push
stos
sbb
dec
xor
pop
xchg
xor
or
adc
arpl
adc
cmp
fcoms
or
mov
fldl
jo
push
hlt
mov
add
je
ja
imul
jno
pop
push
loope
mulb
add
push
and
std
sub
dec
mov
xchg
xor
lcall
shlb
pop
add
cmpsl
sub
data16
sub
popa
xor
dec
cld
sub
cmp
xor
push
adc
mov
jne
shll
out
inc
cmpsb
adc
clc
jno
push
cmc
cmpb
cmp
into
leave
add
pusha
clc
mov
xchg
jne
xor
push
in
pop
inc
pushf
shll
pop
adc
push
add
hlt
sbbl
call
je
in
in
jmp
inc
xchg
lret
fldenv
rorl
daa
mov
inc
fs
xor
add
inc
mov
cli
or
repnz
repz
fmull
cld
loope
pop
inc
push
fistps
and
fs
push
xchg
mov
std
sub
test
jl
xchg
call
popa
stos
loope
nop
inc
add
xchg
mov
adc
xchg
add
sbb
fcmovbe
mov
out
cmp
mov
rcll
mov
add
pop
mov
imul
adc
lcall
push
xchg
clc
add
push
adc
jp
mov
mov
dec
jl
divl
add
sahf
orb
mov
lock
push
or
dec
lock
cltd
repnz
idivb
cmc
inc
bound
movsl
add
mov
icebp
hlt
cmc
les
push
push
jne
cli
shrl
jmp
mov
dec
pop
outsb
loope
movsb
cmc
outsb
pop
mov
cmp
sbb
jb
into
cmc
pop
cmp
jbe
xchg
daa
popa
pop
es
and
out
pop
inc
pop
pop
add
adc
dec
jle
sub
aam
test
push
movsb
add
push
es
movsb
mov
lods
in
mov
pop
xchg
cmp
insb
sub
pop
sti
dec
add
or
fs
or
xor
aad
sahf
mov
or
loopne
idivb
sahf
incl
in
fucom
or
and
addr16
pop
add
jmp
fs
mov
mov
cli
add
xchg
pop
andb
cwtl
test
outsl
negb
sbb
insb
add
inc
ds
mov
fs
sub
xor
adc
jmp
inc
popf
jl
testb
int3
sbb
data16
das
mov
movsl
stc
xchg
xchg
dec
scas
pop
cmp
movb
ja
movsl
popa
fsts
or
xchg
lods
push
jbe
xor
inc
imulb
jno
ret
loopne
loop
stc
addb
cmp
data16
stc
sub
mov
gs
jle
add
xlat
mov
hlt
mov
popf
stos
adc
fstl
cmp
push
movzbl
dec
repz
jmp
mov
push
jge
jle
add
xorb
xor
push
rdmsr
add
mov
mov
test
loope
dec
push
data16
push
fsubs
inc
pop
inc
outsb
mov
pop
and
sub
cmpsb
fsubrs
mov
cmp
shl
sbbb
sub
add
add
sbb
jle
popl
aaa
sahf
dec
rclb
mov
jmp
loopne
jg
out
mov
clc
test
add
push
dec
or
push
xchg
push
mov
cwtl
loop
repnz
push
mov
add
movsb
inc
cld
push
push
lock
mov
shlb
xor
or
sbb
mov
idivb
addr16
sbbb
iret
addr16
dec
ret
cmpsb
jb
sti
jbe
add
push
or
jecxz
repnz
push
movsb
testb
aaa
or
es
mov
lahf
inc
xchg
xchg
or
fs
into
sub
cmp
scas
psubb
adc
gs
fs
je
adc
ljmp
jmp
jne
out
push
cmp
xor
jnp
push
scas
xlat
pop
in
out
dec
notl
lock
sub
jns
sbb
add
push
sahf
pop
or
fs
in
pop
mov
cmp
mov
adc
scas
pmaxsw
adc
jle
out
repnz
cmpsb
jge
xchg
push
insl
sub
adc
lret
cmc
adc
imul
add
xor
push
rorb
nop
cmc
outsb
fucomp
rcrb
mov
sarl
faddl
cmp
or
pushf
or
xor
scas
rolb
add
in
ljmp
dec
shl
xchg
rorb
addl
out
bound
mov
out
push
xchg
int3
push
inc
leave
push
jecxz
push
ss
push
orb
cmc
mov
xor
push
xor
push
add
scas
es
adc
jbe
or
sar
imul
mov
xchg
or
jae
clc
adc
popf
jo
mov
add
rcrl
jp
leave
mov
pop
or
inc
mov
ja
cmc
data16
xor
test
decb
pop
je
test
pop
lock
pop
cli
dec
mov
mov
inc
div
and
je
push
iret
hlt
lcall
dec
and
jbe,pn
add
inc
ret
cld
bound
pop
cmc
imul
jno
mov
xor
inc
syscall
loopne
fcomip
shl
mov
in
aas
xchg
pop
paddq
inc
movsb
mov
adc
lods
test
jg
cmp
in
add
rcr
out
rcrl
mov
call
lods
fincstp
test
ret
adc
ret
inc
add
fs
fsts
incb
inc
pop
push
cli
ror
push
xor
mov
pop
pop
cmc
enter
push
and
cs
scas
into
clc
xor
push
leave
xchg
iret
or
mov
arpl
stc
jge
jg
test
mov
add
adc
cmp
aad
jbe
out
testl
inc
call
out
and
shll
cmp
push
sub
xchg
mov
jo
xchg
mov
into
fs
ss
and
xor
faddl
bound
dec
mov
add
dec
fldt
dec
and
cmp
fs
sti
test
addb
mov
testb
scas
inc
fists
das
push
notb
fs
bound
js
push
pop
lret
add
out
dec
mull
mov
stos
add
mov
inc
div
inc
and
xchg
mov
daa
mov
mov
mov
xchg
and
or
fsubs
fs
jge
stos
jo
adc
leave
pop
arpl
xchg
in
daa
sbb
popf
sbb
cmpsb
mov
add
fists
jl
in
dec
notb
repnz
cltd
add
clc
movl
sbb
pop
cld
aam
add
addb
int
inc
xchg
sub
mov
and
enter
inc
sub
dec
testb
neg
jns
adc
pop
mov
push
cmp
lods
imul
jns
xor
add
shlb
idivb
inc
icebp
incb
enter
push
inc
push
cs
add
xchg
xor
add
push
lods
leave
fcomps
outsl
movsb
add
adc
inc
mov
clc
ret
mov
notb
cmp
sbb
cltd
aaa
pushl
popa
xor
add
es
into
stc
pop
enter
push
or
sbb
xchg
jns
fs
int
cld
mov
push
incb
das
adc
aad
in
pop
repnz
cli
cmpl
cmpb
pop
enter
es
lahf
and
dec
jmp
cmc
mov
or
rolb
mov
ds
sbb
inc
jmp
push
mov
push
xlat
mov
mov
push
loopne
push
test
rorl
sbbb
std
in
jg
xlat
fs
fisubrs
stos
xlat
sbb
mul
lods
and
xchg
lret
fildll
jl
mov
imul
icebp
xor
arpl
sbb
cmc
mov
cmpsl
jno
jbe
push
outsl
nop
sarb
push
pop
iret
sub
inc
adc
scas
ss
push
sbb
push
movb
shl
ds
daa
cmc
stc
cltd
outsl
clc
cmp
insb
cs
pusha
repz
popf
push
adc
sub
pop
popf
mov
movsb
pop
fwait
mov
arpl
movsb
add
sbb
adc
std
in
mov
and
pushf
testl
rolb
xor
jbe
pop
repz
xchg
loope
and
popa
mov
aam
int
inc
sub
fldenv
xchg
fs
repnz
stos
bound
in
mov
mov
dec
cmp
inc
pop
shl
clts
adc
jle
fnstsw
jg
aas
jg
fs
lea
int
std
sti
sub
divl
sbb
lahf
add
pop
cmp
sti
sbb
mov
ret
ds
ljmp
and
not
add
mov
bound
lea
mov
mov
adc
jo
xlat
fsubs
mov
lods
je
push
sbb
lock
testb
jnp
mov
out
push
fadds
nop
mov
loope
int
shrl
fbld
sbb
les
add
pop
push
and
pop
divb
or
pop
sub
push
add
mov
adc
aaa
das
inc
push
mov
mov
inc
insl
mov
ss
mov
fidivrs
mov
pop
shlb
cmp
out
int3
cltd
fs
dec
sbb
add
pushw
pop
xor
xchg
sbb
push
call
insb
add
in
push
add
ljmp
push
push
xchg
roll
fldl
lods
test
push
push
and
and
push
mov
pxor
sub
push
pop
jg
xchg
fldl
xchg
movsb
lods
pop
pop
pop
mov
gs
imulb
call
test
sub
sar
dec
mov
push
fldl
shll
push
or
test
fs
gs
add
mov
push
test
mov
mov
loope
les
sbb
jbe
pop
out
cmc
pop
addr16
xor
movsl
pop
dec
cmp
xchg
push
inc
pop
push
scas
mov
stos
cmp
sbb
push
je
jmp
cmp
push
mulb
pop
and
mov
xchg
sbb
mov
test
adc
push
jp
repz
or
dec
xchg
into
mov
pusha
mov
sub
int3
mov
mov
in
int3
loopne
cli
daa
and
movsl
fdivl
push
lods
dec
pop
sbb
cmc
jo
insb
jecxz
loopne
sti
pop
jno
jae
dec
jb
and
push
push
loope
mov
arpl
adc
cs
aaa
pushf
inc
and
test
jns
jecxz
outsb
cli
divb
sub
les
jmp
lret
in
scas
and
xchg
mov
sub
jmp
inc
in
mov
add
fwait
or
ss
aaa
out
xchg
xchg
insw
insl
ret
add
jnp
lret
lret
enter
adc
std
jle
push
movb
add
clc
sub
dec
testb
push
aad
hlt
mov
divb
and
aam
adc
andl
xlat
sub
add
neg
add
gs
loope
dec
xor
jne
lret
or
mov
lds
fs
das
push
test
or
pop
sti
int3
cmpsb
lea
fidivs
inc
test
test
and
mov
cli
cli
xchg
add
lret
je
and
and
ret
inc
sbb
sbb
cli
ss
push
and
add
cmp
outsb
push
xchg
ds
fbstp
in
ret
jb
lahf
xchg
jb
dec
add
dec
xchg
xor
fs
push
mov
sub
and
mov
in
or
mov
cmc
sub
scas
xor
ss
ds
cmc
mov
adc
lods
add
loop
or
pop
pop
cmp
xchg
push
fadds
mov
push
add
pop
push
fisttps
inc
cwtl
orb
adc
cmp
hlt
xlat
or
insb
dec
adcl
sbb
add
add
mov
pop
mov
mov
push
jp
and
test
adc
dec
movl
fstps
adc
std
add
test
xor
cli
xor
iret
mov
mov
xor
add
push
pop
add
dec
mov
test
pop
iret
aad
insb
add
shll
je
or
mov
data16
mov
mov
ds
divb
ret
cwtl
mulb
xchg
out
mov
sbb
test
mov
lds
mov
add
movb
push
add
jae
add
jmp
sub
mov
fs
loopne
jecxz,pn
mov
xchg
add
daa
and
aaa
add
aam
cs
ret
in
pushf
stc
insb
and
push
idivb
sar
flds
add
mov
and
add
or
sub
das
shll
pop
add
dec
ds
sti
mov
pop
sbb
mul
in
cwtl
test
mov
fbld
inc
pop
jns
xor
test
movsl
mov
jmp
dec
xor
int3
pop
adc
shl
cmp
cmp
inc
mov
push
add
xor
pop
lds
out
cmc
neg
mov
vmovshdup
adc
incl
ret
and
aam
lahf
gs
sarl
out
nop
fldcw
adc
cmp
nop
or
out
mov
rorb
fstl
sbb
and
adc
pop
pop
push
push
into
add
mov
jns
cmp
call
leave
mov
cmpsb
mov
testb
pop
je
jmp
and
or
aad
jns
aaa
negb
push
out
mov
sbb
and
call
cmp
add
add
sti
mov
daa
ljmp
int
mov
fst
lds
jl
push
adc
repnz
mov
rcrb
cld
mov
popf
test
xchg
push
sbb
movsl
adc
dec
pop
xchg
nop
aad
imul
inc
mov
dec
mov
cmp
mov
into
loope
mov
push
jns
in
test
mov
out
mov
xchg
gs
shlb
jne
adc
mov
aam
xchg
mov
outsl
or
ds
push
xor
inc
outsb
insl
mov
mov
int3
jge
popl
xchg
jo
jp,pn
xor
js
clc
ss
mov
pop
fsqrt
out
daa
mov
sub
jp
add
movsl
clc
pop
xor
ja
add
pop
outsl
and
mov
inc
push
mov
arpl
dec
add
push
stos
data16
jecxz
xchg
cld
adc
pushf
push
insl
sbb
push
call
imul
mov
arpl
insl
inc
jp
arpl
fstpt
jmp
pop
adc
mov
pop
bound
fcomps
les
rcrb
pop
out
lret
bnd
sub
std
lods
cltd
ss
jmp
xor
sub
icebp
xor
mov
pop
mov
aad
jo
push
out
mov
loope
mov
mov
pop
test
pop
and
pop
push
in
sti
sbb
adc
xlat
add
aad
js
push
and
mov
dec
dec
pop
cmc
push
jmp
arpl
jne
popa
scas
sub
xchg
sbb
add
scas
xchg
jmp
clc
stc
inc
arpl
aad
xchg
loopne
jge
or
nop
repz
push
mov
fs
subl
imul
sub
sbb
stos
in
fucom
outsl
aad
rol
mov
mov
inc
push
add
push
and
loope
mov
in
add
sbb
and
sub
and
add
out
xlat
icebp
pushf
mov
mov
xchg
sarb
xchg
movsl
jno
pushf
test
push
js
mov
mov
push
shrb
cmpsb
mov
std
movsb
push
outsl
lahf
mov
mov
sub
ficoms
cmpsb
xchg
push
fwait
lods
jno
xchg
xchg
nop
add
leave
xchg
adc
add
jge
testb
fcmovb
mov
subl
jmp
add
mov
lcall
or
sbbl
loop
gs
test
cmc
cmc
xchg
int3
lret
mov
aad
jns
adc
stc
out
xlat
pop
cld
in
insl
movsb
xchg
jmp
repz
push
push
andl
sub
scas
cmp
aam
ret
out
out
repz
testl
push
jecxz
icebp
out
lahf
adc
pop
or
pop
xor
pusha
shl
in
jns
add
add
cmp
sub
or
lahf
gs
mov
icebp
popf
clc
fnstsw
inc
popf
test
aas
inc
cmp
add
xor
add
ja
mul
data16
movsl
std
xchg
lods
add
loope
je
fs
insb
adc
xchg
add
jb
repz
insl
cmpsl
mov
pop
mov
xchg
and
iret
inc
xchg
stc
leave
lahf
dec
push
add
mov
lds
pop
cmp
sbb
out
cs
rcl
faddl
push
out
jne
orb
jb
xor
pop
clc
mov
lcall
and
clc
and
insl
and
jmp
test
mov
bound
cltd
jbe
sbb
add
inc
or
lds
xor
jb
or
cmp
movsb
push
and
jo
sbb
nop
or
mov
xchg
jmp
mov
nop
outsl
divb
or
ret
or
fstpt
push
into
test
imulb
daa
cmp
fadds
add
adc
addr16
mov
pop
lods
mov
in
xchg
or
idiv
aas
popa
mov
pop
mov
je
jb
sbbl
jg
inc
rolb
imul
test
gs
xor
xchg
add
and
or
jns
mov
cmp
and
popa
adc
sahf
repz
hlt
lods
push
cmp
push
sahf
fstps
stos
cmp
imul
mov
mov
add
movsb
add
ret
pop
in
mov
dec
popa
sub
xchg
add
xor
repnz
adc
aaa
xor
pop
es
pop
mov
mov
adc
push
cmp
mov
xchg
pop
xchg
push
scas
push
push
cs
cmp
lcall
push
pushf
push
xor
insl
pop
push
lahf
les
insb
adc
ss
push
pop
push
inc
fildll
out
add
cmp
gs
sub
sub
sub
mov
dec
mov
loopne
or
pushf
stos
and
mov
jp
mov
jns
cmpsl
or
add
ficoml
xchg
jb
dec
sbb
popf
pop
rorl
jg
dec
add
pop
cmp
loope
cmc
in
sub
je
dec
mov
inc
mov
xor
mov
pushf
aad
xchg
das
lock
js
loope
sub
push
sub
pop
repz
cmp
mov
add
adc
addl
mov
fcmovnu
cmp
inc
fstps
int
mov
iret
adc
popa
jl
popa
xor
je
xchg
jbe
data16
std
dec
notb
dec
enter
jmp
cltd
jge
cs
dec
pop
jge
pop
mov
jo
push
iret
inc
dec
sbb
pop
cmp
loope
ret
inc
xchg
imul
pop
push
gs
sbb
and
adc
popa
stos
xcrypt-cfb
cmpsl
out
xchg
or
pop
add
xchg
scas
sahf
add
out
iret
out
or
ljmp
mov
xor
int3
int
loope
stc
or
dec
xor
jae
lahf
adc
sub
adc
popf
dec
nop
shlb
jg
add
shrl
add
xorl
mov
pop
add
or
mov
push
je
shlb
or
push
mov
ljmp
and
aas
in
add
cs
in
fists
call
push
or
cwtl
mov
aas
popw
sbbb
add
push
scas
icebp
cmc
xor
jecxz
fwait
insb
test
fidivl
pop
xchg
adc
adc
cmp
dec
push
inc
imull
repz
mov
std
mov
and
insl
adc
push
dec
div
cmc
pusha
jne
inc
sbb
add
das
cld
add
test
int
imul
mov
sbb
add
getsec
fldenv
jmp
xor
xchg
cmc
push
mov
add
movsb
add
in
xchg
mov
addb
lea
sbb
add
xor
frstor
cltd
jno
testl
and
dec
add
test
push
hlt
fldcw
xorl
sahf
adc
lret
cli
pop
pop
push
xor
adc
xchg
imulb
pop
adc
cmp
jne
lds
stc
lahf
imul
sti
jno
adc
cmpsb
sub
mov
lock
cmpps
cmc
xchg
out
push
and
adc
mov
push
inc
data16
xorb
add
xchg
cmp
add
fsubr
imul
shlb
xor
outsb
cmp
movsb
mov
push
fdivs
mov
pop
ljmp
sbb
andl
dec
sub
dec
dec
pop
and
leave
mov
jmp
test
cs
ja
arpl
jns
in
addr16
cmp
xchg
fst
lcall
std
mov
out
aad
mov
aad
sbb
mov
and
iret
or
mov
sub
add
inc
bound
cmc
outsb
mov
je
and
push
add
or
mov
adc
inc
in
hlt
mov
fmull
xor
mov
add
dec
cmp
mov
outsb
mov
ret
imul
cmp
in
std
xchg
gs
xchg
adc
xor
sti
aas
jmp
iret
in
sbb
push
out
or
sub
das
lea
push
cmp
fiaddl
sub
mov
inc
cmpb
sub
int
mov
in
jns
sub
insb
ret
test
sahf
or
add
daa
ja
aaa
jle
xchg
push
int
icebp
cmpsb
clc
or
bound
shr
dec
lea
or
pop
or
daa
inc
jnp
sbb
fs
out
call
sub
pop
and
into
cmc
in
cmc
stos
sbb
jno
push
push
add
pop
adc
lods
popa
faddl
add
adc
into
popa
roll
jge
mov
add
loope
jns
sbb
or
sbb
in
aaa
mov
adc
jmp
pop
adc
push
rcll
push
jo
inc
fs
shlb
push
or
fwait
push
xor
insl
cmpsl
mov
sahf
add
xlat
loop
xchg
outsl
push
daa
lea
je
in
mov
or
xchg
add
adc
imulb
xor
or
add
scas
je
pop
fs
pop
inc
ja
add
and
inc
inc
add
cmp
add
add
pop
or
pop
jo
in
mov
repnz
xor
jmp
scas
push
push
push
mov
add
push
jecxz
mov
xchg
scas
test
fwait
popa
dec
add
xchg
jns
je
cs
jmp
sar
movsl
pop
sbb
dec
jecxz
cmp
mov
dec
pushf
xchg
jge
insb
push
and
inc
add
add
xchg
push
insb
icebp
nop
mov
mov
jne
fadd
add
ja
pop
cmpsb
or
and
add
imul
add
add
add
push
mov
pop
sti
fsubs
sub
mov
repz
adc
cli
and
shll
les
pop
call
cmc
adc
jae
xchg
push
dec
and
inc
out
pusha
push
jle
and
fucomip
add
dec
in
dec
in
ja
and
pusha
es
mov
push
and
inc
cmc
or
pop
jne
orb
je
fidivs
popa
add
inc
adc
movsb
inc
sbb
sub
jbe
mov
add
or
push
xlat
mov
xchg
test
aam
sub
bound
add
popf
in
dec
shr
es
add
mov
dec
repz
mov
les
js
cmc
inc
loopne
cmc
sbb
bound
fstl
push
outsb
repz
divb
mov
push
leave
and
add
in
push
mov
decl
dec
jmp
pop
or
leave
push
std
clc
rorb
scas
icebp
pusha
int
adc
mov
mov
add
jae
cmpsl
test
push
fwait
movsb
or
push
pop
jl
stos
imul
or
mov
loopne
loope
xchg
lret
out
add
int
out
push
cmp
add
or
jecxz
std
mov
push
pop
sbb
imulb
aas
dec
mov
or
out
adc
add
push
js
jp
insb
dec
rolb
jmp
xchg
test
pop
push
sbb
in
std
jbe
aad
jl
sti
test
inc
mov
sub
pushf
pop
out
out
insb
jns
shll
mov
in
sti
pop
cmp
cmc
cltd
imul
insb
les
mov
fadd
xor
mov
lea
sub
mov
psadbw
cmpsl
lds
test
clc
rcrb
mov
movsb
add
xchg
ror
imul
fs
sbb
dec
and
sub
ds
xchg
fs
orl
arpl
adc
leave
cmp
mov
sbb
bound
nop
js
adc
sti
cmp
add
das
movsb
lods
daa
push
out
jne
sub
mov
js
mov
test
mov
mov
mov
in
rcr
push
cmc
adc
shl
add
or
mov
sub
call
cmc
in
xlat
je
push
inc
xchg
clc
hlt
add
add
push
loop
test
insb
add
and
rol
inc
cli
cmc
ret
jmp
cmp
sbb
sbb
mov
push
cmp
cmp
or
inc
fmull
adc
adc
push
mov
and
pop
fldl
das
adc
add
int3
cld
repnz
mov
xchg
roll
or
cmp
dec
sbb
jge
fadds
cld
lret
imulb
testb
mov
push
ss
cmp
int3
fstpl
repnz
sbb
pop
sti
in
movsb
pminub
sub
clc
inc
sub
lods
fs
ret
sbbb
adc
fadd
int3
adc
jb
xor
call
call
mov
adc
push
notb
ss
pop
sub
or
xchg
in
or
and
scas
cli
incb
imul
xor
or
inc
push
adc
mov
and
mov
dec
or
ror
std
cmc
sbb
in
pusha
add
push
mull
fs
xlat
repz
mov
enter
inc
mov
adc
adc
out
andb
or
cmc
and
idivb
pop
mov
adc
addw
mov
cmc
mov
cmc
cmp
or
dec
push
or
sbb
adc
xchg
pop
clc
dec
add
fdiv
dec
pop
fidivrs
repz
testb
sub
mov
lcall
fs
lret
xchg
pop
xchg
xchg
mov
pop
add
inc
inc
daa
sub
dec
cwtl
sbb
add
push
rcll
inc
push
test
in
jae
jns
and
pushf
testl
pop
in
jne
cmp
jno
jbe
lock
aad
fs
in
mov
push
push
daa
and
aad
jg
fdivp
add
sub
js
mov
lock
add
popa
inc
push
inc
cmp
stc
enter
or
not
les
push
push
ja
and
cltd
out
or
movsl
cmp
jne
jbe
out
sbb
out
in
add
mov
movsb
mov
lahf
xchg
insl
cmp
rcr
mov
adc
stc
and
or
loopne
popf
add
insl
into
jg
dec
mov
xchg
push
jb,pt
notl
and
jl
ret
adcb
push
stos
push
pushf
imul
aaa
cwtl
jle
out
pop
sbb
mov
aad
adc
cmc
lcall
cld
pop
std
push
lret
shll
fsubs
shl
in
mull
dec
xlat
jno
add
dec
xchg
stos
jecxz
push
sti
cmp
xor
inc
and
mov
adc
fdivrs
fdivp
sub
fs
popf
and
aas
inc
and
and
or
loop
pop
cmc
repnz
orl
fnstsw
aam
pop
testb
xor
lods
mov
aam
aad
sbb
adc
add
movsb
movl
fs
mov
adc
mov
jg
xor
mov
push
call
inc
lods
flds
test
xchg
add
lock
xchg
xor
test
mov
pop
hlt
xchg
test
pop
sub
outsb
setbe
and
pop
data16
aad
or
ret
xchg
and
jb
adc
inc
repz
test
xor
ds
sub
aaa
dec
and
cli
pusha
jecxz
mov
xchg
mov
or
insb
mov
repz
dec
jno
and
call
push
mov
pop
sbb
aas
dec
adc
lods
sub
xor
aad
sarb
data16
loope
lock
adc
movsl
rorl
ljmp
adc
scas
movsb
js
les
xchg
add
mov
pop
mov
call
fwait
outsl
les
and
enter
fs
add
dec
je
mov
push
add
and
addr16
out
test
or
aad
lds
mov
xchg
adc
add
insl
fs
fs
dec
adc
push
dec
add
fistpll
xor
xchg
addr16
cmp
push
push
and
or
cmpsl
test
hlt
push
cwtl
jo
add
loope
push
xchg
scas
and
dec
inc
inc
mov
mov
fs
sbb
push
push
adc
test
dec
in
pop
mov
movsl
adc
sbb
rorl
out
test
cmp
imul
adc
jne
mov
das
into
insl
sub
cld
mov
sub
add
insl
jl
add
mov
mov
jl
loop
and
xchg
inc
out
test
jmp
repnz
cltd
shll
sbb
sbb
fs
pop
adc
fs
inc
in
out
mov
shll
mov
inc
mov
mov
int
es
add
pop
or
imulb
sub
adcb
add
dec
add
je
out
fcomps
or
mov
lds
jmp
pop
inc
scas
ficomps
popa
cmp
pop
or
sahf
clc
xchg
jmp
ss
fs
int3
push
or
lds
or
and
and
and
bound
inc
mov
repz
push
push
mov
jbe
push
pop
stc
dec
xor
lahf
xchg
push
or
sbb
push
or
sbbl
xchg
and
xchg
push
add
xchg
je
xchg
pusha
xchg
pop
jb
push
mov
out
std
imul
sub
pop
loopne
inc
xchg
inc
aad
decb
inc
inc
cmp
in
or
popf
idivb
loope
ret
mov
rcrl
test
push
xchg
xchg
js
sub
inc
aas
imul
adc
fadds
je
popf
popf
outsl
cld
out
rolb
sbb
fmul
fs
jp
je
adc
lock
cltd
xchg
mov
nop/reserved
adc
in
mov
sbb
mov
aaa
mov
int3
imul
data16
pusha
sub
add
jecxz
loopne
frstor
sbb
mov
dec
push
imul
adc
fs
loop
ja
hlt
dec
stc
add
or
mov
jg
jno
xchg
jg
add
rolb
pop
and
shlb
and
or
clc
test
fstpl
add
mov
push
or
es
and
add
xchg
stos
scas
pop
xorl
in
dec
xor
mov
cltd
or
jo
test
sbb
es
cmp
add
gs
mov
xchg
fs
xor
dec
sbb
in
fstl
pop
rcl
jne
arpl
sbb
push
pop
sbb
jl
enter
jl
xor
daa
mov
cld
add
adc
lds
inc
mov
mov
push
mov
imulb
mov
jle
mov
outsl
jno
insb
addl
incl
add
cmp
cmc
sub
jmp
push
mov
divb
fsubrp
fs
test
push
mov
imull
dec
out
xor
xchg
and
xchg
arpl
and
lea
cmc
dec
cmp
adc
sub
loopne
sar
cmc
pop
lret
pop
cmp
xchg
sub
mov
aas
fs
fnstenv
mov
mov
pop
xchg
xor
scas
dec
notb
loop
sub
cli
stos
mov
fs
mov
jno
jne
popa
mov
sahf
lock
insl
adc
and
lcall
incb
push
push
outsl
dec
imulb
xor
imul
add
xchg
test
adc
and
dec
js
sub
fisttps
ja
nop
xor
add
inc
std
inc
dec
das
xor
call
inc
popa
and
adc
bound
and
dec
in
mov
add
test
daa
inc
sbb
jp
inc
loope
int
popf
testl
sbb
mov
jle
jb
in
shl
xchg
cld
ja
icebp
leave
pop
push
add
mov
sub
jno
lcall
or
int
mov
rolb
cmc
loope
js
sbb
lcall
sbb
xor
in
cmp
and
test
shrl
and
sbb
loope
repz
addr16
int3
hlt
mov
add
shr
and
repnz
add
cmpb
out
imul
pop
dec
mov
sbb
jg
test
cmc
push
rcrb
push
outsb
cmpsl
int
xor
add
lahf
add
jmp
imul
mov
add
push
cmp
jmp
cmc
or
mov
jmp
and
xchg
cmp
sbb
adc
arpl
in
aam
adc
push
test
jge
cli
jns
or
scas
std
call
pop
push
insb
mov
cmc
dec
jmp
mov
mov
movsb
pop
incl
data16
xchg
jnp
jb
bound
mov
push
mov
in
ja
jo
pushf
add
int
and
repz
push
add
and
sbb
dec
and
fcompl
test
pop
xchg
or
ror
cmp
out
test
rcrl
popa
testb
cld
daa
add
gs
lahf
or
mov
dec
pop
aad
out
mov
in
aas
add
cmp
sub
jns
sbb
out
movsb
ja
inc
mov
imull
out
int
pusha
es
sti
rorl
jae
popa
mov
lock
ret
lea
add
mov
add
imul
add
leave
xor
notb
lds
jb
sbb
aas
loope
xchg
inc
pop
adc
movsl
repz
add
inc
add
mov
sbb
push
push
out
je
mov
scas
mov
push
mov
int3
cmc
mov
mov
or
insb
lret
nop
xor
in
lock
pusha
cmp
sbb
aas
out
cmp
cmp
cwtl
sbb
cli
push
mov
imul
mov
cmpsl
adc
add
add
xchg
jg
push
mov
push
imulb
pop
xor
aas
std
cmc
xchg
sbb
jae
push
xchg
push
adc
lods
mov
add
mov
outsl
xlat
sbb
add
and
sub
lods
inc
pop
test
add
cmp
sbb
scas
sbb
lret
into
ja
je
fstpt
or
rorl
or
mov
aam
in
sarb
arpl
mov
add
sarl
in
outsb
dec
cmp
push
sahf
adc
mov
pop
sbb
dec
mull
test
xor
out
add
imul
cmc
imul
mov
jge
mov
add
lret
stc
or
fs
outsl
add
int3
and
bound
or
xchg
mov
imul
jmp
cmpb
daa
add
sub
mov
stos
loope
xchg
push
fsubs
clc
add
or
mov
and
push
popa
mov
int
imul
xor
scas
hlt
cs
mov
out
mov
or
xor
cmp
sub
add
sub
insb
sub
mov
testb
sahf
dec
in
push
lods
sbb
jno
sub
mov
push
inc
negb
mov
inc
jo
mov
add
sub
adc
push
ror
fldl
jp
aas
lcall
add
adc
addb
dec
mov
lea
mov
add
into
mov
inc
push
sub
cmc
clc
push
and
insl
add
insl
jns
call
sub
in
cltd
mov
pop
add
mov
jmp
add
fisttpll
sub
fs
in
cmp
adc
xchg
je
icebp
sar
add
mov
push
cmp
ret
es
imul
push
leave
inc
push
mov
push
jne
cmpsb
xchg
fs
adc
push
jns
push
movsl
pop
int3
in
mov
cmc
or
push
and
fsubl
or
negb
mov
pop
jb
or
fs
jecxz
call
sbb
push
repnz
adc
sub
movsl
aad
mov
jmp
push
hlt
aad
push
cld
js
outsl
mov
fsubs
ss
lcall
inc
adc
pop
aaa
dec
mov
jmp
bound
icebp
add
test
insb
xchg
mov
push
jns
lahf
or
jae
pop
xchg
xor
push
push
push
add
repz
cmc
sub
or
jns
add
mov
adcb
es
test
jbe
paddsw
push
hlt
cld
syscall
call
das
ss
and
lret
fstps
or
dec
push
arpl
inc
lret
jae
adc
cmp
add
adc
dec
rclb
popa
pop
jns
add
jbe
rcrb
jecxz
in
pop
mov
jnp
in
into
out
add
adc
or
fs
add
pop
adc
sub
es
data16
xor
push
leave
ja
add
inc
dec
add
bnd
mov
inc
jmp
arpl
ret
int
inc
cwtl
aaa
nop
xchg
and
orb
add
sub
mov
xchg
cmp
bound
mov
pop
jbe
pop
add
push
xchg
std
adc
mov
nop
xor
lods
dec
or
mov
imul
jb
or
out
and
mov
jmp
cmp
add
mov
mov
in
repz
icebp
ret
gs
jno
jmp
test
pop
icebp
popf
sub
pop
in
out
adc
gs
push
sbb
clc
inc
push
test
fs
lret
mov
pop
xchg
add
in
insl
jns
jmp
and
jge
sub
mov
xchg
adcb
dec
out
xor
and
add
mov
inc
cltd
ja
ret
sarl
adc
bound
je
dec
dec
in
xlat
jle,pt
cmp
inc
cmp
aam
xchg
aas
ret
sub
sub
or
sub
xchg
nop
xchg
pop
stc
push
inc
hlt
xchg
in
cwtl
jne
jo,pt
mov
filds
jno
idiv
cmp
arpl
aad
push
das
or
add
int
iret
jno
fisttpl
push
fs
sahf
loope
push
pop
icebp
xchg
inc
lahf
aas
xchg
mov
gs
aad
inc
cmc
gs
push
push
pop
mov
fs
push
cs
fisttpl
lret
lea
aam
pusha
inc
jg
lea
xchg
add
das
jp
mov
mov
in
xchg
add
insl
mov
or
pop
pop
adc
jo
das
push
dec
or
add
cmp
xor
sbb
aad
mov
jno
iret
xchg
lcall
clc
sbb
inc
adc
mov
cmc
shll
mov
adc
mov
mov
fs
decl
or
xchg
sub
xchg
ret
adc
idivb
mov
sub
lea
nop
out
inc
popa
repz
outsl
xchg
arpl
in
jecxz
mov
cmp
divb
js
jnp
add
add
in
fs
mov
cmp
cmp
notb
inc
orl
push
push
aaa
outsl
jb
and
pop
jmp
inc
data16
add
push
jo
mov
adc
or
into
pop
imul
out
cmp
jmp
xor
fs
ror
or
loopne
sbb
mov
fidivl
xor
aam
pop
test
xchg
push
cld
adc
nop
popa
xor
mov
push
ss
pop
jge
jle
in
cli
je
testb
iret
nop
add
rclb
arpl
add
jl
mov
je
fsts
ds
push
in
sti
xor
mov
cmp
and
add
and
cwtl
in
mov
ret
add
pop
sub
in
clc
inc
or
daa
mov
test
xor
out
xchg
mov
xchg
inc
pop
add
cmp
sub
mov
hlt
mov
or
sahf
add
dec
ret
add
fs
std
rcl
or
lods
add
pop
cmpsl
aad
push
or
out
cmc
cmp
inc
repz
jge
jo
ljmp
pop
add
test
cmp
xchg
jnp
cmp
cmp
pop
test
sbb
dec
cwtl
fnstsw
add
or
add
popa
inc
jge
hlt
push
repz
pop
add
lea
repz
out
jbe
test
ljmp
div
xor
insl
pusha
xchg
into
xor
xor
sub
pop
sbb
push
cmc
dec
sti
adc
cmp
icebp
jns
aas
stos
add
inc
adc
sbb
cmp
jmp
popa
inc
pop
or
xor
popa
nop
negl
jmp
jl
pop
mov
xor
adc
aaa
mov
shlb
fs
mov
test
add
jnp
lock
inc
cmc
mov
dec
inc
aaa
jp
hlt
in
test
jne
es
icebp
mov
movl
mov
mov
mov
repnz
test
add
imul
fcomp
push
hlt
cli
or
test
push
movsb
or
jl
fs
and
loope
daa
fdivrp
imul
and
fcmovne
lret
pop
fisttpll
mov
jno
jle
lret
cli
fwait
inc
or
enter
fldenv
mov
into
or
iret
repz
mov
jle
xlat
insb
jne
fildll
cld
loope
push
enter
sbb
add
cmp
repz
jmp
cmp
ja
insl
xor
out
fs
adc
push
push
repz
xchg
stos
bound
sar
aaa
dec
cmp
andb
sbb
adc
sbb
hlt
shrb
jmp
add
sbbl
pop
fdivl
shl
pop
inc
add
test
fs
cmc
dec
pop
jno
mov
scas
icebp
pop
add
daa
testl
adc
mov
insb
add
mov
jle
mov
adc
mov
or
or
or
sbb
pop
cmp
or
sub
shlb
sub
mov
movsl
push
mov
push
fucomp
add
stos
add
outsb
sbb
sub
rolb
pop
rcr
pop
test
jge
movsb
xor
cwtl
jb
dec
add
shll
fs
jne
pop
in
movsl
repz
xchg
add
arpl
xor
or
push
jecxz
pop
mov
cmovle
ret
push
pop
pushf
iret
in
fs
out
loopne
aad
mov
daa
mov
xor
adc
dec
movsb
add
xlat
sub
test
nop
outsb
fnsave
aam
pop
jmp
sbb
and
gs
fs
lcall
je
test
stc
xchg
mov
sub
movsl
jb
dec
mov
cltd
adc
inc
adc
mov
fs
inc
ss
sub
add
push
xor
jecxz
mov
fs
loope
dec
std
mov
inc
fadd
jne
popa
sbb
and
pop
add
inc
mov
jbe
inc
add
or
xchg
lret
shll
inc
add
fwait
pop
jg
loope
pop
push
adc
xchg
cs
cmp
dec
clc
loope
test
cmp
xchg
inc
ffree
mov
adc
ret
rep
in
xchg
jg
int
dec
imul
dec
fldcw
aam
std
and
test
or
xor
xlat
leave
jge
pop
fimull
pop
and
neg
arpl
rolb
js
repz
dec
das
lods
leave
shl
imul
mov
sbb
add
imulb
adc
or
or
notl
adc
lcall
out
add
insb
pmaxsw
push
sbb
push
mov
and
xor
and
sbb
and
and
sub
leave
mov
iret
dec
add
and
and
add
jnp
addr16
arpl
insl
xchg
int3
into
aad
mov
push
iret
into
mov
into
mov
mov
gs
bound
push
mov
cmp
jge
dec
push
les
out
cltd
sbb
xlat
inc
dec
xor
stos
lret
add
xchg
inc
faddl
lcall
pop
push
dec
xor
sub
add
pop
shrl
or
in
or
add
push
add
mov
imul
cmp
dec
pop
cld
test
and
int
cmpsl
sub
mov
dec
dec
push
sbb
test
sub
and
fcmovb
xchg
push
fnsave
pop
pop
push
add
mov
mov
xchg
in
lahf
jl
incl
and
push
icebp
movsb
xor
insl
sbb
sar
loop
and
jo
in
sbb
pop
daa
mov
shlb
incb
leave
sub
mov
cmpsb
iret
in
mov
lods
mov
push
cltd
ret
js
cmc
inc
repnz
out
add
add
dec
mov
and
cwtl
lcall
frstor
mov
dec
xchg
bound
push
in
loopne
xchg
dec
rcrb
fidivrl
int3
mov
cmp
enter
aad
push
or
pop
imul
add
mov
cmpb
ret
xchg
inc
outsl
pop
jl
aad
pmaddwd
jmp
std
imul
daa
jns
ds
mov
cli
pusha
push
lods
add
jmp
aad
fs
es
bound
and
shl
dec
arpl
cs
and
push
popf
push
xor
gs
xor
push
pop
lock
add
pop
ja
push
push
es
add
xchg
add
sti
mov
push
shll
or
push
xchg
dec
cwtl
out
sti
xlat
divb
mov
sub
push
or
push
cmc
out
ret
cmc
mov
inc
sbb
push
imul
call
popa
cmp
outsl
add
xor
lahf
enter
popa
int3
pop
das
cmp
ss
aad
call
sti
enter
ficoms
addl
popf
enter
in
out
int3
xchg
lods
lcall
int3
mov
pop
sbb
sbb
cmc
add
int
or
add
inc
fs
xor
add
clc
dec
pop
or
cmc
mov
dec
add
fidivl
sbb
adc
mov
mov
add
push
jmp
or
xchg
jnp
ret
adc
dec
fs
popf
inc
sub
and
fstpt
and
je
repnz
jns
je
xchg
arpl
rcll
and
push
add
jecxz
je
pusha
push
ret
xchg
dec
test
dec
sub
xchg
cmc
or
in
out
jbe
jecxz
cld
or
and
imul
xor
xor
sub
in
sub
mull
mov
in
add
loope
cmp
pop
push
and
leave
je
pop
cld
neg
mov
loop
inc
testb
fs
sti
int3
gs
push
and
mov
aas
mov
dec
sahf
data16
fldenv
push
int3
lea
aaa
and
in
nop
xchg
int
in
je
xchg
sbb
test
or
testb
jne
and
rclb
push
fildll
stc
add
mov
sub
cld
add
inc
hlt
std
inc
scas
arpl
scas
cmc
ss
shlb
out
loope
jmp
test
or
loope
push
or
dec
jo
jg
dec
icebp
add
inc
rol
adc
stos
lret
mov
pop
lods
or
popa
repnz
jno
xor
std
cld
sar
fmull
int3
stos
add
xor
sbb
jno
shlb
inc
fisttpll
mov
add
loop
sub
mov
and
fwait
mov
aam
sub
sbb
xchg
arpl
lods
fs
fs
aam
jge
sub
or
stos
add
enter
add
jmp
xchg
fstps
rcr
iret
and
test
inc
insb
lea
inc
fldl
leave
mov
ss
int3
sti
cmp
push
notb
inc
adc
and
jbe
xor
das
mov
mov
lds
dec
xchg
mov
outsl
es
jp
mov
mov
lods
push
mov
sub
sub
inc
adc
cli
sahf
adc
jmp
push
cwtl
cmpsb
dec
fs
cs
out
push
jne
mov
push
or
testb
adc
sbb
test
add
imul
sbb
dec
fs
jmp
add
cld
jae
mov
outsl
adc
xor
mov
mulb
cwtl
adc
xchg
lock
sub
mov
loop
jns
add
shll
mov
xchg
jp
cmc
mov
mov
movsb
enter
dec
mov
push
inc
sbb
xchg
lret
pushf
mov
dec
adc
loope
cltd
repz
in
fs
fldl
in
cs
enter
and
sub
and
mov
xchg
test
push
jne
jno
in
jae
fisubrl
sub
add
and
jae
adc
lock
loope
stc
push
mov
ficoms
pop
fdivr
jb
out
sub
sbb
or
mov
adc
divb
dec
push
add
int
or
popf
add
clc
enter
xchg
rorl
sar
clc
push
or
mov
jle
push
push
mov
sub
add
adc
lret
lock
fstl
out
outsb
mov
adc
or
fildl
loope
jl
mov
mov
iret
pop
mov
mov
xor
adc
pop
and
int3
scas
cmc
inc
inc
popa
hlt
pop
cld
dec
pop
inc
sti
pop
jbe
mov
and
xlat
sbb
jmp
and
sbb
and
lea
mov
lcall
ja
push
xchg
xor
jbe
sbb
aas
bound
test
cmp
insw
adc
insl
scas
movsb
pop
mov
aam
jl
loope
sub
test
dec
addr16
cmc
or
mov
idivb
xor
pop
or
int
mov
arpl
aam
invd
dec
lret
test
jo
sarb
push
outsb
push
int
xchg
popa
or
test
inc
std
in
fs
jge
or
cmpsl
icebp
xchg
cmc
call
jae
testl
xchg
cs
into
mov
divb
inc
pop
push
pop
add
cli
and
ljmp
xor
mov
inc
mov
sub
sbbb
into
mov
sub
add
cmovs
lret
fs
fmulp
push
sbb
mov
popa
stc
push
incb
add
push
jmp
es
ficoms
add
movsb
xchg
add
or
or
xchg
and
jae
sbb
dec
or
out
push
push
leave
ret
gs
xor
pop
and
push
fsubl
aaa
push
xchg
add
shl
mov
mov
arpl
or
imul
in
xchg
sbb
fdiv
imul
pop
xchg
xchg
mov
push
sub
adc
stc
lcall
cld
aas
enter
es
mov
fdiv
pop
fs
xlat
cli
push
cwtl
dec
push
push
add
cmp
cltd
call
aam
cmp
sbb
imul
fcomps
mulb
sbb
sti
jecxz,pt
mul
into
repnz
inc
lods
popf
stc
inc
mov
or
cmp
push
mov
mov
dec
sub
inc
dec
loopne
and
mov
and
mov
popa
pop
push
aas
add
cmp
mov
lds
rcrl
jnp
out
adc
pop
pop
push
gs
xchg
push
mov
pop
popa
push
adc
push
xchg
popf
dec
rcl
or
adc
xchg
mov
jns
int3
pop
div
aam
mov
stc
and
loopne
in
xor
aad
ret
jnp
loope
sar
jmp
cmp
cltd
je
xchg
sbb
dec
fs
addr16
lcall
cld
repnz
stc
in
and
pop
add
cmp
add
dec
imul
xchg
add
test
mov
cmpsl
and
push
or
cltd
sarl
imulb
jns
push
pop
xor
sarb
pusha
ret
pop
in
psrld
loope
movsb
iret
lods
cmpsb
dec
cmp
mulb
xor
outsl
add
outsb
and
inc
popa
mov
pushf
outsb
js
femms
or
adc
xchg
or
pop
push
pop
sub
mov
das
int
pop
xchg
mov
mov
adc
dec
orb
mov
or
cmp
sbb
fwait
test
cmp
inc
mov
inc
in
aaa
and
packsswb
jae
mov
int3
fdivs
adc
cs
loopne
push
cmp
fldcw
test
jge
and
ret
cltd
and
or
enter
ret
fsubs
xor
sbb
pop
xchg
aaa
test
rcrl
fnstenv
movb
lock
xor
mov
mov
cmc
mov
pop
mov
add
stos
fadd
sub
or
ljmp
rolb
in
inc
cmp
hlt
aam
notl
lock
push
rclb
cwtl
pop
push
and
cmc
dec
repz
test
push
cmp
clc
fs
sbb
iret
ja
shll
jne
add
inc
pop
xchg
shl
jle
out
mov
loopne
testl
fs
aas
push
pop
test
and
add
push
push
daa
testl
jbe
xlat
out
jge
add
cmp
ds
cld
hlt
in
inc
add
ficompl
or
sub
in
pop
cmp
mov
sbb
jecxz
mov
adc
popa
popa
adc
lret
out
aaa
jb
xchg
cmc
pop
add
filds
lods
xchg
mov
ja
add
enter
idiv
pop
sar
lcall
jb
sbbb
xor
es
pop
or
inc
adc
popa
mov
movl
cmp
repnz
push
dec
and
loopne
add
fiaddl
sbb
test
nop
pop
test
adc
pushf
fwait
or
test
or
jo
mov
mov
xchg
shll
je
pop
cmp
enter
outsb
lock
mov
sub
add
test
add
xchg
icebp
pop
repz
add
jge
cli
cmc
popa
out
dec
js
adc
push
dec
pop
mov
or
lahf
clc
rorl
data16
pop
js
cwtl
sub
mov
fdivrs
dec
pop
ss
rorb
inc
add
jmp
fwait
mov
fwait
mov
je
in
mov
repz
dec
ljmp
icebp
adc
lret
je
push
ret
dec
clc
jmp
and
es
sbb
cmp
sub
dec
add
call
mov
test
cmp
fs
jp
lret
sub
sub
jne
push
and
cli
insl
dec
lock
jno
test
idivb
fcmovb
stos
or
in
xchg
xchg
lret
xchg
in
aam
push
stc
xor
or
fbld
inc
pop
add
test
shl
lock
xchg
lret
mov
dec
xchg
mov
gs
lret
aas
push
dec
call
clc
ljmp
test
popf
daa
xchg
test
scas
mov
xchg
int3
loop
aad
add
mov
pusha
test
out
das
faddl
add
push
bound
imull
leave
mov
xchg
in
scas
incl
sahf
es
mov
in
std
jne
es
xchg
add
jnp
dec
js
and
popf
jl
mov
jl
push
mov
je
movsb
jle
lock
nop
push
pop
jl
pusha
test
sub
jg
jmp
les
jb
inc
mov
nop
cli
bound
lock
leave
mov
sub
xchg
leave
inc
pop
adcb
cmp
das
cmp
aam
lds
add
or
xchg
cmpsb
sub
int3
adc
sub
pop
push
pop
test
pandn
cmp
inc
ss
leave
and
fs
pusha
sub
push
nop
add
sahf
cmp
loop
push
dec
add
cmpsl
jmp
lea
mov
das
dec
lock
hlt
mov
pop
push
or
in
add
in
jecxz
jecxz
add
out
outsl
and
add
sti
pop
loopne
test
in
ljmp
sbb
xchg
and
mulb
or
arpl
addr16
inc
mov
mov
das
jle
pushf
loopne
and
mov
xchg
test
in
cmp
mov
imul
push
push
dec
xor
andb
sub
xor
xor
test
imul
adc
fstps
shll
xchg
xchg
mov
jne
call
or
or
cmp
call
fadds
out
mov
jb
aas
xor
and
push
dec
cld
addb
adc
mov
pop
and
fs
int
mull
push
mov
fcompl
or
cmp
scas
ror
inc
dec
push
cmp
ds
jno
aas
loope
xor
inc
jbe
rclb
gs
aad
shl
adc
sbb
push
mov
inc
add
in
pop
xchg
cmpsl
jne
xor
xchg
mov
aaa
repz
dec
push
mov
mov
mov
filds
xlat
add
loopne
or
jne
cmp
xor
jge
xchg
sub
std
sub
loop
fiadds
outsl
ds
data16
loopne
push
negl
test
repz
test
divb
fiadds
add
jae
and
in
nop
inc
xchg
inc
push
mov
test
popf
mov
ss
lcall
xchg
icebp
add
lds
jmp
add
in
repnz
jg
sahf
popa
or
push
pop
lods
out
add
inc
ljmp
jmp
jecxz
cmpsb
pop
inc
lods
popa
call
xchg
stos
inc
fldenv
inc
xlat
sub
and
mov
dec
mov
ds
cmp
push
mov
push
bound
fmull
adcl
xor
xchg
shl
jmp
roll
jecxz
or
or
loope
xor
or
push
repz
dec
and
mov
push
movsb
out
xor
push
add
and
jno
mov
iret
fwait
adc
in
aam
dec
out
cld
mov
clc
addb
js
sbb
arpl
and
push
stc
xor
insb
jmp
scas
ja
ljmp
mov
jl
test
xchg
add
lds
mov
jecxz
cwtl
mov
add
xchg
fsubrl
pop
fs
cmp
in
mov
inc
sub
clc
pop
jbe
movsl
mov
jl
testb
xchg
and
shl
iret
test
mov
mov
or
ret
push
mov
inc
and
mov
pop
sub
add
stc
not
imul
mov
lret
push
xchg
mov
in
or
cmp
inc
ficomps
or
stc
int
daa
pop
int
test
lcall
mov
rcr
or
out
mov
pop
fs
mov
lods
movsb
mov
cmp
pop
jmp
cmc
cmp
gs
fsubrs
or
push
cwtl
jno
dec
call
pop
add
mov
pop
insb
mov
jp
pusha
mov
push
dec
mov
pop
adc
or
add
rol
adc
mov
mov
or
xchg
fs
adc
adc
stc
adc
xor
mov
xlat
movsb
push
fnstenv
mov
xor
push
jno
mov
les
and
xchg
cmp
mov
lds
fwait
push
call
imull
es
push
cmp
in
xchg
sub
cli
pop
jmp
sub
push
fadds
or
jl
fidivrl
sub
lret
jne
into
scas
add
jne
jns
fs
mov
in
add
dec
jmp
adc
and
sub
push
add
mov
hlt
fbstp
sub
pop
filds
dec
add
mov
gs
clc
add
cmp
sub
xor
pop
notb
leave
pop
hlt
add
add
lea
es
mov
inc
push
test
xchg
jo
jbe
pop
fs
data16
in
test
sub
cmp
cmp
push
add
aam
shlb
adc
sub
test
jp
test
cmp
call
lret
dec
cmp
jge
inc
insl
xchg
cmc
xor
jmp
aad
lea
pop
add
adc
test
mov
dec
push
push
inc
inc
adcl
mov
sub
shl
mov
sbb
adc
jo
dec
imul
gs
or
gs
aam
xor
xchg
pop
sub
aad
sub
cmp
aam
xor
push
mov
outsl
jg
pop
shll
fstl
sbb
inc
jmp
ficompl
test
fsts
pop
or
xor
inc
add
hlt
and
lcall
jmp
int3
pop
pop
mov
push
pusha
clc
sub
and
ret
mov
cmp
test
mov
lock
mov
mov
mov
jecxz
imul
outsb
mov
fidivrs
push
add
xor
lret
add
fs
pop
cmp
adc
incb
pop
pop
dec
mov
add
arpl
xchg
mov
push
rolb
hlt
inc
inc
and
fs
icebp
or
pop
push
shrb
shl
ret
hlt
test
inc
iret
cmp
or
xor
xacquire
dec
aaa
cmpsl
in
cmc
test
fidivrs
fcoml
or
and
outsb
sbb
loopne
out
inc
movb
dec
sub
aas
mov
pop
inc
push
adc
jb
loopne
pop
xor
jbe
dec
or
into
push
add
mov
notb
nop
jp
mov
leave
add
in
rcrb
test
imul
enter
fldcw
rolb
aad
add
loope
lret
xchg
fmull
fidivl
arpl
dec
mov
mov
and
xchg
pop
push
loope
out
nop
cmp
test
das
sbb
and
call
loopne
and
js
xorl
dec
push
gs
push
xor
xchg
notl
pop
or
repz
inc
push
xchg
jmp
fs
hlt
and
dec
or
fisubrs
push
pop
int
shll
inc
roll
fwait
mov
sahf
cmp
sub
mov
push
add
add
mov
es
test
mov
daa
test
sbb
cmp
notb
dec
cs
push
push
fs
mov
sbb
movsb
mov
je
xor
in
std
mov
fs
cltd
repz
data16
xor
sbb
xchg
adcl
lret
in
lods
andl
imul
ret
add
sbb
fisttpll
mov
scas
cmc
gs
scas
sbb
inc
outsb
sbb
jno
or
add
lds
add
imul
sub
mov
cld
sub
jmp
jmp
loope
xor
sub
lret
adc
imul
push
sbb
cltd
dec
daa
and
out
imul
cld
cltd
shlb
dec
insb
xor
add
aas
add
sub
add
sbb
add
scas
push
mov
fmul
push
sbb
sti
cmp
gs
pextrw
sub
add
pop
push
outsb
and
shl
lds
inc
fildl
pop
xchg
in
dec
mov
cwtl
cmc
mov
cmp
out
add
push
mov
cmc
mov
or
push
mov
pop
sbb
pop
inc
add
push
lret
vmovntps
sti
and
es
or
add
mov
jbe
hlt
mov
add
xchg
push
inc
add
hlt
test
int3
movsl
sbb
rorl
xchg
cltd
sub
test
push
cmp
sub
outsl
mov
popa
daa
pop
mov
enter
add
popa
mov
insl
arpl
dec
mov
cmpsb
mov
add
scas
dec
dec
dec
mov
push
mov
mov
jg
aas
xchg
outsl
jg
or
mov
aaa
shll
nop
mov
inc
daa
dec
xchg
jmp
popf
or
mov
dec
or
mov
inc
popa
dec
ficoml
dec
lret
push
ret
pop
sahf
xor
push
pop
cs
es
push
jns
jb
fldt
pop
insb
ss
dec
aaa
pusha
pop
cltd
add
out
xchg
mov
xor
xor
mov
adc
mov
arpl
push
mov
imul
shrb
std
xor
arpl
lods
cli
testl
cld
movsb
mov
push
sbb
pop
leave
xor
cmc
sbb
cmp
mov
jl
rolb
in
popa
and
addb
std
imul
hlt
in
iret
xor
inc
and
mov
fs
pop
mov
mov
mov
cmp
sbb
jle
iret
add
cltd
xchg
sbb
push
loop
cwtl
xor
pop
cmp
jl
mov
jle
fwait
add
ret
clc
imul
jbe
lret
and
push
adc
inc
out
arpl
xchg
push
inc
ss
filds
div
mov
sub
mov
daa
sbb
or
mov
cld
arpl
mov
popf
add
stc
pop
mov
jo
jbe
jmp
fisttpll
jg
jmp
jnp
testb
pop
fdivl
lret
cmp
xchg
psllw
jne
dec
jmp
insb
add
add
xor
xor
xor
xor
in
mov
and
or
xor
movsl
negb
adc
add
and
jge
arpl
pusha
test
shll
aaa
mov
test
es
sbb
in
push
add
aad
adc
das
mov
add
test
icebp
int3
inc
loope
adc
enter
mov
daa
mov
notl
xor
push
xor
push
sub
mov
pmullw
jmp
and
pop
push
add
add
inc
aad
sbb
pop
add
aaa
mov
roll
rolb
push
pop
aam
shrb
and
mov
pop
cli
mov
aas
cltd
and
and
jp
push
test
mov
and
inc
pop
test
add
popa
out
rorl
add
lock
out
dec
or
pop
add
or
or
add
jmp
stc
mov
inc
push
loope
mov
lcall
pop
out
or
test
ljmp
aad
aas
cmp
cmp
les
xchg
or
int3
add
ffreep
or
push
div
mov
pushf
adc
int
subb
cwtl
shrl
push
cmc
push
testl
dec
ljmp
or
cmp
and
adc
inc
arpl
into
or
mov
add
scas
ljmp
int3
or
imul
add
xchg
in
rclb
sti
out
loope
sub
cmp
add
lods
shrl
loopne
into
xor
test
inc
mov
push
sbb
push
ss
cmpsl
pop
shl
add
ss
and
and
cwtl
insb
lods
cmc
xchg
daa
stc
xor
add
in
nop
or
jne
add
mov
and
cmc
and
andb
push
push
lcall
jp
idivb
pop
cltd
in
or
xor
xlat
pop
jbe
dec
cltd
cs
fs
pop
rcll
aaa
xchg
and
jmp
or
test
pusha
add
xchg
loope
cmp
or
cmp
dec
repz
mov
add
xor
pop
dec
fidivs
and
fs
mov
xor
popa
xchg
add
je
push
rorl
movd
mov
call
aaa
sbb
pop
dec
shll
insb
lret
adc
sahf
stos
dec
sahf
stc
lret
sti
fs
mov
sar
stos
aad
or
in
mov
testb
test
insb
pop
or
mov
loope
mov
fprem1
popa
icebp
xor
dec
add
sahf
add
addl
into
xor
out
dec
fisttps
loop
or
add
xchg
shr
repz
decl
mov
jne
and
pusha
cmp
xor
and
popa
add
and
sar
dec
lods
pop
xor
stc
pop
ret
lcall
add
adc
mov
sbb
add
mov
sub
test
enter
scas
ret
and
das
pop
sub
xchg
out
sub
pop
gs
les
cmc
adc
scas
jle
loope
in
std
unpcklps
pop
jne
xchg
adc
aam
sbb
idivb
dec
test
popa
fiadds
loope
aaa
push
arpl
lret
lret
push
cli
xlat
imul
and
mov
and
incb
or
push
movsl
repz
jae
jbe
pop
into
mov
add
sub
adc
daa
idivb
xchg
in
sbbl
jb
push
mov
jnp,pt
push
outsl
and
xor
pop
add
adc
cmpsl
fs
lahf
xchg
test
stos
inc
push
ja
mov
fs
cmp
mov
pop
insb
add
xchg
mov
sbb
ja
mov
adc
pop
sub
out
movsb
add
sbbb
xchg
aas
jae
cltd
popa
xor
scas
add
mov
sbb
adc
fs
ret
pusha
pusha
pop
mov
add
imull
sub
in
mulb
rorl
lret
pop
adc
leave
cld
in
data16
add
mov
je
outsl
and
sbb
push
rolb
enter
daa
sub
iret
je
out
and
adc
add
insl
pop
xchg
cltd
negb
sbb
or
cmp
adc
jl
shlb
mov
out
push
fs
paddusw
jnp
scas
mov
add
mov
fisttpl
cmc
xchg
aaa
std
sub
hlt
push
add
xlat
shr
iret
aam
mov
dec
sbb
mov
inc
sarl
mov
cmp
add
cmp
sub
push
sbb
or
pop
add
cmp
xor
push
cmp
out
or
jnp
cmp
and
fiadds
xchg
adc
adc
adc
stos
jg
test
das
adc
cmp
arpl
lds
insb
or
sbb
pop
sub
mov
or
roll
inc
and
fmul
mov
in
lahf
push
xor
xor
sbbb
movsl
jae
fstp
adc
sti
lcall
fstpt
or
xor
fistpll
sbb
inc
div
loope
sub
lock
jg
xor
testb
call
or
jg
pop
test
out
pop
loope
jbe
pop
or
ret
mov
pop
ss
inc
sbb
cmp
popa
lock
and
cmp
loop
cmc
add
pusha
sbb
mov
mov
pop
icebp
push
ja
jbe
jae
incl
or
lds
out
int3
xchg
movsb
sbb
pop
mov
lcall
test
popf
mov
nop
idivb
sub
mov
xchg
data16
sbb
xchg
cmc
inc
imul
gs
mov
repz
add
push
push
rolb
loope
fcompl
jle
mov
dec
cltd
neg
push
aam
pop
sub
push
int
push
aam
lcall
or
adc
js
lds
out
pop
into
lret
inc
add
cld
out
gs
je
enter
ljmp
imul
mov
fildll
lods
fsubr
push
pop
into
mov
std
adc
insb
xchg
cld
out
push
inc
push
sti
popa
mov
inc
loopne
mov
cmp
leave
mov
into
dec
or
loop
pop
cmp
cmp
add
in
dec
pop
ret
hlt
dec
pop
cmp
jae
xchg
mov
pusha
aad
sbbb
or
dec
cmp
sahf
jnp
dec
loop
orl
stc
punpcklwd
imul
jecxz
movsb
shl
fcompl
cli
jne
sti
jl
or
aam
popa
fs
aam
cmp
in
add
cwtl
sub
loop
add
push
mov
bound
mov
jne
dec
push
lods
fidivrl
fdivr
sbb
cli
adc
je
sbb
xor
es
in
cmc
cmp
scas
rcll
div
push
xchg
aam
scas
ljmp
cltd
mov
mov
icebp
sti
lea
sti
mov
mov
test
mov
and
sub
push
cmp
mov
je
inc
push
inc
push
mov
popa
sahf
jnp
mov
xlat
test
bnd
repz
adc
cmp
pop
popa
mov
xor
adcl
sub
arpl
data16
lret
popf
mov
addb
call
xchg
divb
push
pusha
push
sub
out
lods
mov
xchg
push
xor
mov
in
xchg
push
add
adc
into
aaa
shll
lret
stc
repz
pop
adcb
or
mov
out
clc
dec
and
pop
iret
aam
mov
int
in
das
imul
mov
or
es
dec
or
push
push
mov
mov
imul
inc
test
pop
imul
aam
cmc
dec
imul
addr16
std
jne
dec
add
aaa
jg
jge
push
idiv
push
mov
dec
adcl
inc
xor
loope
aaa
out
loop
pop
daa
das
pop
insb
jo
and
enter
cmc
jmp
mov
xchg
add
pop
rol
fstps
dec
jle
add
inc
notl
and
adc
les
enter
std
dec
mov
xchg
adc
pop
inc
fcmovnbe
in
pusha
dec
stc
sub
cwtl
lret
add
movsl
xor
outsl
insb
test
dec
or
jmp
les
loop
inc
mov
add
xor
scas
inc
repnz
addr16
cs
hlt
jle
arpl
inc
or
inc
sbb
and
punpckhdq
jmp
std
aam
add
data16
test
cli
imul
add
and
int
arpl
pop
les
mov
adc
inc
mov
sbb
ljmp
les
add
stc
fnstenv
inc
xor
lahf
leave
in
cli
sahf
add
xorl
fs
addr16
daa
filds
cmc
mov
jmp
push
or
add
pusha
test
int
mov
in
clc
fdiv
movsl
fwait
xor
out
inc
iret
add
lods
sbb
negb
decb
adc
push
sbb
or
fwait
cmc
fs
jmp
sub
xchg
fists
sbb
sub
in
arpl
and
loope
shll
xchg
test
mov
dec
xor
icebp
add
cmp
divb
pusha
jbe
inc
xor
mov
push
fcoms
loopne
or
shl
hlt
inc
aaa
push
outsb
pushl
sbb
roll
test
inc
popa
fisubs
sub
cmp
pop
sbb
push
mov
leave
pusha
jns
in
hlt
pushf
mov
js
popf
sbb
js
xor
lahf
loopne
clc
out
shrl
mov
cmp
cli
and
push
and
lret
out
xor
and
aas
movb
inc
sbb
pop
in
or
cmc
jmp
push
ret
in
loope
sub
mov
in
fidivl
pop
add
aas
pop
add
jo
jbe
orb
pop
sub
cli
mov
sbb
jb
inc
add
and
push
into
fbld
push
enter
mov
sub
push
loopne
add
add
sbb
pop
or
mov
mov
jbe
in
ljmp
push
je
mov
sbb
sarb
ja
sub
push
movsl
adc
sbb
add
push
mov
and
jne
jmp
fs
dec
pop
lahf
and
inc
out
and
sbb
xchg
jg
mov
js
mov
repz
outsb
pop
loop
xchg
sub
pop
repnz
or
lock
inc
nop
bound
je
imull
rol
stos
cmpsb
pop
addl
push
movsb
stos
mov
aaa
clc
sahf
es
mov
pop
scas
mov
mov
aam
inc
js
bound
data16
mov
hlt
inc
cmp
xor
ret
inc
add
cwtl
movsb
in
or
cmp
cmpsb
pop
lods
mov
jne
lret
fidivrs
lock
mov
out
out
lahf
and
or
aaa
lea
cwtl
sub
adc
cmpsl
add
inc
xor
cs
jno
loop
xor
xor
pop
add
pop
sub
mov
push
pop
sahf
sbb
and
add
arpl
push
add
lret
sub
push
adc
and
adc
pop
sub
mov
in
add
outsl
mov
xchg
movsl
pop
pop
iret
test
subb
xor
jmp
mov
add
movaps
and
repz
out
cmc
lahf
fdivs
push
aas
popa
out
or
pop
insl
popf
in
cmpsb
imul
and
jge
dec
push
popa
cmp
mov
xor
push
add
filds
lds
insl
jge
stos
inc
sbb
test
mov
dec
call
ja
daa
cmc
sbb
je
mov
xor
sub
push
dec
xchg
push
inc
daa
out
sub
add
sub
lock
mov
pusha
sahf
cmc
jle
into
xchg
mov
int
lahf
repz
decl
repz
pusha
and
dec
cld
xlat
or
stos
and
jge
fs
decl
add
ret
stos
test
xor
push
push
sbb
cli
add
xor
stos
enter
out
repnz
icebp
xor
fcmovnb
repz
add
enter
adc
push
icebp
mov
and
dec
push
jne
cmpsl
adc
mov
inc
push
push
sub
add
and
sbb
mov
pop
stc
sbb
xor
pop
aad
jbe
aam
sub
test
push
cli
sahf
jmp
andl
inc
xchg
jp,pn
sub
inc
push
rolb
ljmp
lahf
test
movsb
fisubl
sti
outsl
sbb
inc
inc
xchg
push
and
cmp
xchg
and
add
data16
icebp
mov
popa
or
xor
push
mov
out
mov
in
ja
cmp
jmp
or
push
sub
push
neg
in
iret
jo
cli
xor
mov
out
add
rorb
fsubs
sbb
xchg
rolb
or
xlat
fs
imul
add
idiv
scas
and
add
ss
push
es
sbb
xor
or
test
inc
push
fs
loope
xor
cmp
add
insl
add
xor
fs
cmp
int
int3
adc
or
fnsave
mov
aaa
cmp
into
sbb
or
mov
pop
xor
fiadds
jmp
sbb
add
lds
scas
movsl
sub
pop
sub
adc
inc
in
push
push
inc
mov
fnstcw
push
clc
lea
xchg
mov
add
jle
cmp
adc
mov
push
adc
scas
add
and
sub
data16
push
xor
imul
xchg
lret
fcomip
shrb
add
ljmp
aam
inc
cmp
and
sbb
and
test
arpl
test
xor
hlt
and
or
add
push
gs
push
or
xchg
jnp
shlb
bound
xchg
pop
adc
repz
int
ror
jmp
sti
and
or
pop
add
dec
push
add
cmp
mov
imul
xchg
inc
and
mov
cmp
mov
sti
cltd
mov
mov
push
jge
mov
add
clc
bnd
push
je
add
aas
pop
cltd
nop
cmp
jg
or
das
ljmp
mov
or
inc
dec
push
movsl
rorl
sub
xor
test
pop
lcall
aaa
mov
out
lcall
movsb
add
xor
or
inc
ljmp
xor
add
cmc
mov
push
mov
mov
push
dec
jmp
shlb
sarb
or
clc
or
or
addl
pop
aas
pop
mov
stos
push
adc
jns
add
inc
shrl
sub
jmp
cwtl
lret
xchg
rcrl
adc
repz
mov
in
push
scas
inc
and
mov
iret
and
mov
popaw
ljmp
xor
dec
pop
mov
add
jno
push
pop
adc
fdivp
xor
cmc
inc
xor
push
adc
imul
cli
mov
add
rcrb
fdivr
loope
aas
dec
lods
cmpsl
mov
pop
xchg
add
add
add
pop
lret
iret
jmp
sbbb
std
sbb
jmp
insb
add
jbe
insl
aaa
lock
fcmove
pusha
pop
add
adc
test
cmc
test
add
enter
jb
imul
insb
lret
sbb
lret
sbb
negl
andl
pop
dec
mov
rcl
mov
push
pop
or
fs
jns
dec
inc
cmc
sbb
ss
ljmp
push
sbb
vpor
call
shrb
cwtl
jns
and
in
ds
push
mov
adc
mov
daa
push
sub
dec
and
xchg
pop
pop
nop
cmc
out
stos
add
shlb
pop
rorl
mov
in
insb
adc
loop
xchg
test
shl
jae
imull
shlb
movsb
nop
into
sbbl
pushf
jbe
adc
jmp
push
add
adc
cmp
push
cmpsb
aad
push
add
xchg
out
add
sti
dec
fs
inc
loope
lret
arpl
pop
fsubs
aaa
mov
adc
cmc
loopne
loope
les
pop
scas
jb
fnstenv
sti
jns
mov
adc
cwtl
push
mov
std
and
roll
rolb
jns
cmp
ljmp
sbb
mulb
or
cmpsl
aad
jmp
inc
jg
mov
push
pop
jno
pop
lcall
ljmp
hlt
or
test
push
dec
nop
mov
pop
add
and
sbb
lahf
dec
sub
imul
mov
rolb
mov
mov
add
in
les
stos
sub
xor
add
aas
sbb
fs
adc
imul
btc
jge
cmp
push
and
xlat
jne
ret
mulb
outsb
sbb
stos
xchg
lahf
pop
sub
das
in
movsb
dec
and
shlb
icebp
jbe
sub
cmp
xor
in
cmp
inc
repz
icebp
test
imull
jne
lahf
shlb
imul
pop
add
lret
adc
and
push
xchg
data16
add
inc
test
aas
rolb
loop
sbb
and
fs
lea
out
xor
push
das
push
cmp
jns
scas
cmp
imul
dec
sub
adcl
xor
push
mov
sub
and
in
es
test
mov
fistl
stos
add
das
push
sub
xor
or
leave
cli
or
mov
rcl
push
fimull
nop
add
imul
mov
idivb
sahf
and
sti
rorl
test
jbe
add
pop
repz
mov
movb
imul
jg
leave
cmp
mov
arpl
mov
xor
push
icebp
and
mov
cs
jae
cmp
in
adc
and
adc
daa
mov
cmp
imull
fimuls
cltd
ret
add
push
cmp
add
sub
sbb
or
push
aam
and
mov
xor
adc
enter
sbb
cmc
pop
jle
xchg
sub
gs
and
sub
in
loope
push
pop
or
pop
adc
sub
push
rolb
fs
fwait
cli
ljmp
enter
int
lock
movsl
dec
inc
cmpsb
call
push
sub
add
cmp
scas
das
cli
in
and
arpl
imul
js
mov
add
out
gs
push
mov
cld
or
loope
lods
add
imul
xchg
add
dec
cwtl
pop
fs
out
mov
mov
inc
test
xchg
xorb
fcmovu
in
cmc
xchg
fsubrs
je
add
dec
pop
pop
mov
out
add
jmp
in
xchg
add
pop
insb
pop
fidivs
inc
xchg
les
mov
adc
aad
nop
gs
and
xchg
movsl
mov
adc
push
pop
or
dec
sbb
sub
add
mov
mov
cmc
adc
dec
shl
cmpps
mov
push
mov
cmc
mov
lock
outsb
mov
xor
int
imul
xchg
lods
push
add
notl
sub
insl
add
lods
stos
adc
xchg
pop
sbb
lds
add
xor
or
les
mov
cmp
xchg
incb
inc
test
insl
and
test
imul
scas
xchg
repz
insb
pop
jmp
cmp
js
add
cmpsl
pop
loopne
sti
pop
inc
cltd
inc
insb
or
jp
xor
repnz
stc
and
nop
fs
bound
aas
je
xchg
jne
rorb
je
in
std
jecxz
outsl
lahf
hlt
repnz
add
mov
nop
negb
test
popf
repz
pop
adc
out
fists
imul
aam
andb
sub
pop
testl
ficompl
rclb
or
adc
or
sbb
ds
in
daa
lret
xor
sbb
jne
dec
in
aad
lods
repnz
push
inc
ret
jg
ret
and
test
movsl
movsb
xchg
pushf
stos
xor
pop
cmp
sbb
pop
cmp
pop
lahf
std
mov
xchg
into
mov
fwait
popa
mov
mov
filds
adc
popf
adc
or
cld
mov
js
test
aad
and
rcrb
adc
ret
inc
sbb
add
in
xchg
and
dec
std
out
inc
lds
fs
out
scas
sar
sbb
outsl
shll
decb
outsb
andl
shll
dec
popf
xchg
xchg
mov
push
out
gs
cmc
jns
lock
outsb
sub
or
mov
outsb
pop
push
push
movsb
loope
sub
pop
lahf
adc
stos
icebp
lds
out
into
inc
sbb
cld
xchg
out
es
cli
mov
ds
xlat
push
push
imul
aad
jle
push
cwtl
inc
lds
imull
fcmovnb
popa
pop
ds
fstpl
popf
dec
inc
daa
cwtl
xchg
xchg
mov
inc
or
popa
cld
cmpsl
add
jl
icebp
jns
int3
mov
adc
ret
bound
stos
adc
jmp
andb
in
push
mov
or
or
mov
pop
or
or
add
bound
sub
mov
out
pop
inc
int
data16
mov
xor
jne
pop
hlt
sbb
mov
jnp
shll
cmc
dec
xchg
sub
out
inc
mov
test
rcrl
inc
lock
or
dec
das
xor
fs
lods
stos
ljmp
aas
cmpl
push
neg
test
pop
sbb
ss
add
mov
add
aad
add
or
jbe
push
and
inc
pop
shll
pushl
mov
or
jno
sti
xor
test
icebp
hlt
add
xor
arpl
shlb
int
inc
mov
pushf
mov
and
mov
fs
pop
ljmp
mov
mov
sub
int
test
cli
hlt
les
inc
add
xchg
pop
inc
insb
jbe
jp
iret
cli
mov
addl
loope
and
cmc
mov
sub
mov
xor
shl
or
and
std
cmc
fninit
push
clc
dec
dec
xchg
xor
call
push
adc
dec
es
mov
sbb
xor
jnp
inc
cmp
add
push
js
stc
out
jno
icebp
insl
in
lahf
add
divl
ja
popa
sub
xor
and
pop
rcll
mov
adc
jae
movsl
and
std
test
dec
repz
mov
popa
pop
mov
jle
mov
add
adc
fs
leave
rcrb
add
sub
cli
lcall
lods
gs
pop
addb
add
push
mov
inc
fs
jbe
jg
adc
push
lret
cmp
mov
scas
jge
xor
xlat
add
jo
idivb
mov
cmp
pop
xchg
or
sti
jg
cld
andb
sbbb
lock
or
scas
xchg
cmp
add
lds
sarb
std
sub
fists
and
cmp
jbe
negb
pop
sahf
or
mov
sbb
test
ljmp
cmc
add
adc
adc
xchg
xchg
sub
add
dec
jg
mull
stos
cs
sbb
loopne
test
mov
imulb
cmpsb
cmp
xchg
lret
imul
stc
xchg
add
loop
dec
pop
jnp
sub
mov
push
or
cmc
sub
push
fxsave
arpl
in
gs
xor
dec
sbb
test
ljmp
mov
jne
push
add
scas
neg
sbb
mov
pop
rolb
test
or
xchg
push
xchg
jg
inc
clc
add
mov
insb
in
or
add
xorl
dec
sub
jecxz
push
mov
adc
push
ret
adc
sub
decl
jne
jns
and
sub
cli
xchg
lahf
int
loope
dec
sahf
jno
jbe
add
loop
jnp
addr16
add
inc
sbb
xchg
or
cmc
jne
aam
stos
lock
adc
mov
fs
cld
xchg
or
roll
or
jge
xchg
popa
idivl
pop
ds
pop
xor
out
cltd
aaa
pusha
pop
inc
jbe
mov
outsb
cmp
add
cltd
sub
andl
sub
add
and
stos
fiaddl
mov
push
push
fcmovnb
clc
inc
add
ja
data16
jp
mov
cmpb
cmc
popa
pop
pop
sti
dec
sub
mov
fs
add
insb
add
push
hlt
jg
fildll
testb
add
mull
inc
push
movsl
divb
sub
imul
iret
pop
inc
ret
cmp
imul
test
sbb
or
andb
inc
pop
repnz
jmp
xchg
xor
jle
rcll
and
cmc
inc
mov
iret
loope
ror
call
cmp
in
cmpsb
cmp
xchg
les
mov
ret
pop
fsubrs
clc
mov
aas
sti
adc
adc
cmp
or
movsl
add
pop
ljmp
out
andb
pop
ret
lret
mov
mov
divb
jl
in
cmp
inc
popf
cli
icebp
pop
ret
mov
fs
mov
ret
push
roll
in
jl
idivl
or
enter
stc
call
pusha
or
or
pusha
je
xchg
ds
lea
dec
xchg
enter
cmpsb
lock
add
adc
mov
notb
and
mov
scas
arpl
les
add
data16
es
je
rolb
adc
and
neg
xchg
sbb
jl
scas
scas
adc
dec
bound
xchg
jbe
test
and
out
push
sub
add
xor
mov
mov
sbb
aad
mov
shlb
out
jbe
add
add
cld
jmp
iret
pusha
adc
mov
mov
gs
mov
ss
test
cs
xchg
movl
sti
dec
or
mov
lds
lret
jnp
jnp
loope
loopne
jmp
add
imul
fldl
or
mov
dec
es
divb
push
sub
fiaddl
sbb
enter
add
insb
pop
sahf
jg
push
xchg
pop
jbe
jmp
cmc
notl
mov
pop
jmp
fldl
idivl
shrl
dec
call
sub
cmpsb
sahf
inc
jne
hlt
add
mov
dec
sbb
adc
mov
call
fstps
cmc
gs
jg
xchg
mov
sbb
pop
fs
cmp
sbb
shlb
out
sub
daa
aad
pop
add
pusha
sbb
adc
xlat
push
out
mov
xor
in
pop
push
mov
xor
outsl
cmp
js
arpl
leave
clc
cld
or
add
iret
mov
cli
aam
insl
xor
roll
add
mov
es
pop
das
jo
jbe
adc
sub
ja
inc
add
add
sbb
mov
pop
add
or
cmpsb
or
idiv
int3
in
xchg
stc
cmp
addl
in
negb
xor
jne
adc
mov
mov
add
inc
scas
orl
push
mov
dec
fstpt
jg
fs
rcll
mov
pop
lcall
inc
icebp
lock
lret
ss
push
add
xor
lods
sub
pop
adc
fs
test
scas
outsl
add
fwait
stos
jo
in
test
sbb
bound
outsl
inc
mov
mov
movsb
in
inc
push
enter
ljmp
xor
lret
daa
popa
iret
loop
push
sbb
shll
fimull
rcll
push
cmc
lret
adc
jl
out
fs
into
fwait
mov
jne
fadd
push
pop
shl
int3
loopne
icebp
scas
and
xchg
xlat
out
lcall
fcomip
mov
cmc
mov
dec
lea
out
xchg
pop
cmpsb
fsqrt
or
adc
push
xchg
subb
pop
xor
movsl
xor
repz
out
mov
es
aas
out
lret
sbb
pop
cmc
dec
sub
data16
jae
sub
fld
jne
notb
ficoms
repnz
dec
cli
ljmpw
sbb
push
or
mov
fwait
and
mov
jbe
jl
lock
jmp
loopne
adc
rorb
int
aas
jae
rcr
pop
bound
iret
ret
test
add
idivb
jl
push
movsb
xchg
fmulp
add
js
cli
test
dec
cmp
mov
imul
push
aam
push
repnz
filds
fsubp
lock
call
movsl
push
in
inc
add
push
ret
repnz
add
jmp
mov
and
arpl
int
dec
jecxz
fs
ret
sbb
test
repz
hlt
or
aas
cmp
jno
cltd
dec
add
jle
xchg
mov
aam
push
push
or
jnp
inc
sub
mov
into
mov
xlat
cmp
add
mov
divl
mov
mov
cs
out
or
pop
jge
insb
jno
push
loope
xor
inc
push
aam
notb
out
test
jge
push
iret
dec
or
sti
fs
sti
xlat
cwtl
fwait
pop
mov
xor
or
pop
pop
add
pushf
jno
cmp
jae
je
shlb
lds
lods
addr16
lahf
add
inc
aad
inc
outsb
xchg
cmc
data16
loop
xchg
outsl
popa
pop
out
and
movsb
testl
jp
call
mov
and
je
lret
xchg
mov
in
jg
sub
cli
std
jo
add
jmp
lods
cltd
xchg
ret
push
pushl
mov
adc
sbbl
cli
sbb
flds
imul
jae
loop
incb
xchg
jnp
inc
cmp
pop
push
ss
into
stos
fdivrp
mov
lcall
cmc
xchg
popf
mov
std
or
stc
outsl
test
or
cmp
push
mov
repz
les
testl
inc
cmp
push
xor
mov
adc
sti
xor
lds
and
mov
imull
push
lods
push
roll
pop
dec
fisubs
mov
subb
mov
jl
lahf
add
cwtl
sbb
popf
mov
in
hlt
movsl
bound
add
popa
loope
sub
dec
and
push
push
mov
inc
sbb
or
out
sti
cli
loopne
das
aad
and
repz
cmp
jns
ret
mov
fcomip
inc
push
jno
in
pop
push
jl
or
testl
ds
xor
adc
flds
pop
or
add
popa
or
out
adc
fnstsw
lcall
xchg
inc
cmp
mull
push
test
shrl
xlat
add
mov
fdivr
sub
lea
outsb
cwtl
cmp
nop
shr
imul
mov
cltd
fs
inc
add
fiaddl
daa
movb
sahf
ret
or
adc
or
in
add
adc
pop
testb
jecxz
scas
xor
aas
int3
mov
cmc
inc
stc
nopl
int3
enter
xor
adc
push
or
clc
add
mov
pop
cmc
sub
push
or
inc
add
movsb
mov
or
data16
push
xchg
cmp
cld
sbb
adc
or
es
iretw
cmp
fs
loope
push
push
stos
push
outsl
pop
movsb
mov
hlt
inc
insl
arpl
out
inc
stc
negb
xchg
scas
lds
sbb
loop
pop
xchg
hlt
lock
test
pop
cmp
outsl
xor
cmp
sub
clc
sahf
jnp
notb
repz
cld
ds
sub
push
mov
cmc
cmp
shrl
fidivs
add
iret
aaa
jno
pop
filds
popa
jp
jg
xchg
cmpsl
cmp
sbb
dec
stc
out
leave
push
aam
jmp
pop
xchg
jecxz
sbb
mov
jne
xor
hlt
xor
jo
subl
roll
aam
sti
daa
mov
addr16
cltd
test
movsl
mov
or
or
out
aam
adcl
cli
movsl
push
movsb
jbe
adc
sub
and
pushf
arpl
hlt
and
xor
imul
add
cmp
in
mov
fsubs
inc
test
sub
pop
jbe
cmc
fcmovb
out
fidivs
dec
bound
push
aam
popf
mov
push
sbb
pop
inc
push
adc
push
mov
gs
mov
fs
out
pop
sub
lock
imul
ret
push
mov
leave
test
and
sbb
call
xchg
sbb
cli
cmc
dec
cmp
pop
nop
cmp
pop
add
icebp
xchg
sbb
and
fs
cmc
lods
xor
pop
int3
xor
iret
stos
push
decb
xlat
roll
push
stc
insl
mov
push
push
emms
aad
enter
cmp
add
gs
xchg
or
jp
shrl
add
pop
mov
fcoms
adc
orl
mov
mov
and
sbb
push
pop
insb
sub
jbe
push
lods
dec
jne
in
aaa
inc
outsb
and
or
iret
inc
insl
and
push
adc
inc
add
sbb
lds
lods
loope
stc
mov
sahf
pop
and
sub
mov
jnp
pop
int
xor
idivb
loop
xchg
add
or
mov
fs
leave
mov
gs
aaa
pop
pop
or
das
adc
xchg
add
fcmove
jbe
push
or
insb
into
icebp
hlt
sbb
push
cmp
add
sbb
cli
dec
push
xor
int
jecxz
sub
add
ret
hlt
dec
divl
add
dec
and
es
and
dec
add
rcr
cwtl
addb
pop
xchg
push
jecxz
fidivs
shrl
add
pop
xor
sbb
jl
pop
insb
push
xor
jecxz
in
aas
push
imulb
and
leave
jbe
int3
add
inc
xorl
sbb
inc
inc
dec
push
jle
or
fldcw
and
mulb
testl
cmp
testl
cmc
pop
loope
hlt
xor
and
in
push
and
cld
mov
cmp
testb
ds
mov
pop
arpl
dec
lcall
pop
add
ret
rcr
mov
inc
negb
sub
and
out
push
inc
jle
sbb
movsb
daa
fwait
jle
jb,pt
add
aad
rcr
mov
ret
jge
cmc
jge
out
add
test
inc
out
ret
jo
rorb
aad
sti
jns
cmp
sub
sahf
shll
sub
xchg
or
or
fistpll
add
dec
lds
adc
xchg
mov
arpl
jbe
push
inc
out
mov
dec
jne
enter
dec
outsb
std
push
imull
cmp
cmpsb
adc
movsl
add
fs
sub
lods
xor
add
stos
mov
rcrb
cmpsl
popa
ret
das
fisttps
lahf
mov
and
mov
ja
mov
adc
int
lds
push
fdivl
pop
xchg
xor
dec
gs
ret
iret
and
movsl
in
lods
and
and
or
xchg
cmpsb
push
and
xchg
das
mov
cmp
sub
sub
or
test
cmpsb
xchg
fsubrl
fistps
pop
adc
inc
mov
repz
jg
add
insb
imul
inc
popa
mov
jne
jmp
or
data16
jne
or
sub
add
outsl
sub
cmc
loop
leave
sub
les
jecxz
enter
jecxz
imul
add
cmp
push
insb
idivb
ds
jae
mov
sahf
out
aam
mov
stc
sbb
push
ljmp
testb
int3
aad
sahf
insb
pop
loop
xor
gs
pop
loop
pop
jbe
jb
mov
test
mov
js
movsb
imul
hlt
mov
testb
cmc
push
int
divl
mov
aas
sub
cmp
mull
sub
pop
test
cltd
adcb
lahf
cmp
add
cmp
pop
lods
daa
dec
ja
les
dec
loop
xchg
dec
stos
pop
add
cmp
scas
fidivs
sub
push
cmp
push
icebp
add
in
cld
les
pop
inc
add
or
xor
arpl
push
lock
dec
add
das
sbb
sub
fnstsw
adc
arpl
inc
cltd
dec
cmp
pop
jecxz
xchg
sbb
out
sub
or
inc
xchg
push
push
or
adc
fcomps
push
or
mov
push
cmp
mov
sahf
push
int
int
fstps
inc
add
add
es
in
lods
imul
fdivrp
xchg
fwait
xchg
cld
imul
stos
inc
addr16
pavgb
sub
mov
movb
sti
icebp
xor
mov
dec
ja
iret
cmc
mov
lock
jns
jb
gs
pop
sub
add
adc
out
ljmp
mov
and
les
add
mov
xor
cmc
or
or
insb
mov
pop
test
leave
popf
ljmp
push
pushf
andl
push
xor
inc
push
fs
test
gs
adc
jecxz
rorb
mov
push
fs
jp
lods
sbb
lods
sarl
mov
fs
ds
inc
insl
loopne
dec
xor
vminpd
testb
scas
repz
pxor
sub
js
pusha
jge
out
fnstenv
std
or
das
dec
jb
add
out
and
in
mov
inc
jns
enter
movsb
xchg
pop
add
adc
jnp
data16
xchg
add
out
repnz
je
ja
push
mov
sub
cmp
ds
int
lret
mov
or
out
loopne
or
or
xor
mov
repnz
pop
jmp
lods
cmp
inc
add
aas
sub
loope
jns
shrb
fbld
out
sbb
in
push
icebp
pop
lds
jne
cmc
mov
fcoml
or
ljmp
jne
or
aam
or
jmp
add
pop
and
loope
fwait
inc
cmc
mov
and
xor
push
es
xchg
cs
in
mov
pop
xchg
out
xlat
and
jl
mov
adc
xchg
cmp
add
add
fisubs
cmp
pop
icebp
push
testl
push
andl
cltd
inc
jbe
in
les
ja
idivb
dec
sub
add
dec
sbb
jge
rolb
ljmp
loope
pop
cs
xor
xchg
outsb
add
das
in
xor
mov
cltd
pushw
sti
cmpb
mov
jp
add
sub
icebp
and
aas
add
adc
test
cwtl
add
repz
mov
ss
sbb
sbb
filds
lods
adc
movsl
pop
mov
mov
adc
ret
hlt
sbb
sbbb
pop
popa
cltd
dec
dec
or
aas
es
sub
repnz
cltd
gs
inc
or
fdivr
lcall
inc
dec
cmpsb
inc
push
aam
loopne
imul
push
cmpsb
cld
push
sbb
push
in
dec
int
jle
xorb
loop
dec
bound
rcrl
and
mov
mov
adcl
mov
lods
test
shrb
jne
or
xor
jno
aad
dec
in
sub
pop
or
jmp
or
inc
xchg
pop
inc
loopne
popf
cmc
fimuls
mov
and
in
push
sub
jp
and
xchg
test
mov
shll
cld
inc
ja
add
mov
leave
mov
pop
add
dec
lock
fisubrl
shlb
clc
add
sub
jmp
or
cmp
dec
pushf
jge
adc
std
sub
jg
inc
or
in
in
insb
mov
out
idivl
jbe
sub
pop
test
cmp
negb
aaa
pop
xor
insb
xlat
cli
dec
mov
xchg
adc
sub
mov
div
iret
rcrb
push
mov
mov
out
sub
loope
daa
sti
cmpb
jns
dec
movl
mov
fs
pushf
inc
addr16
arpl
add
in
shll
test
mov
loope
jmp
pop
pop
xchg
adc
pop
sub
test
add
pushf
lods
insb
add
dec
pop
loop
mov
bound
arpl
xchg
and
or
sbb
xchg
push
inc
and
popa
push
adc
add
xor
popa
pop
sub
js
or
aas
jge
je
and
sbb
pushf
push
mov
repnz
ficoml
push
add
adc
repnz
xor
out
cld
fs
out
cli
sub
stos
sub
lret
repnz
shll
das
movsl
inc
push
add
mov
adc
adc
popa
outsb
decl
imulb
mov
cmpsl
ljmp
stos
pop
jb
lahf
inc
pop
icebp
or
and
bound
sub
mulb
dec
push
mov
outsb
loopne
push
inc
scas
fidivl
int3
xchg
fsubs
dec
nop
sti
loopne
push
xchg
rolb
arpl
js
aaa
and
neg
push
fsts
add
mov
popf
pop
sahf
imulb
mov
inc
stc
fadds
out
push
fstpt
add
fs
fs
xor
cmp
jne
mov
cmc
enter
inc
loop
adc
add
subl
push
dec
jnp
and
sbb
addr16
in
outsb
sahf
dec
add
mov
mov
add
lret
push
fiadds
test
mov
es
outsl
inc
in
sbb
and
in
jnp
imul
mov
cmp
and
jae
sub
sub
fs
push
inc
jg
dec
pop
bound
test
movsb
add
jae
mov
jb
push
push
push
or
inc
or
xchg
adc
cmp
mov
jp
xchg
cmc
mov
dec
push
addb
fcmovbe
cmp
jmp
movsb
add
mov
fiaddl
pop
dec
jge
pop
push
mov
cmp
sti
inc
dec
mov
xor
dec
and
sbbl
pop
and
fs
mov
or
mov
pop
dec
ficomps
aas
adc
subl
push
shrl
repz
shlb
pushfw
jo
or
js
and
add
adc
mov
mov
fisttps
add
push
lcall
cmc
out
pop
movsl
inc
mov
sub
xchg
insl
jno
pop
mov
out
add
lock
xchg
sti
jb
fwait
or
mov
mov
or
mov
inc
add
sub
sub
mov
insb
mov
adc
cmc
jo
icebp
add
add
add
mov
xor
fildll
adc
fdivrs
and
out
adc
into
les
xchg
and
mov
jae
cli
stos
ret
or
nop
arpl
mov
rolb
and
loope
iret
lock
popa
dec
ljmp
fcompl
arpl
adcb
add
out
cmpps
add
imul
icebp
inc
add
or
sub
in
sub
leave
pop
jno
push
cmp
adc
mov
xchg
mov
pop
jno
outsl
mov
dec
shll
sub
mov
cmpsl
inc
or
push
add
mov
sahf
or
out
cmpsl
insl
push
add
or
enter
ja
xchg
aas
out
adc
dec
add
lret
call
ret
in
data16
xor
es
test
add
inc
popa
into
lret
test
stos
lret
adc
lods
xchg
inc
out
push
mov
push
jmp
jmp
sbb
or
lock
mov
arpl
mov
repz
or
icebp
inc
pop
andb
nop
in
push
inc
enter
dec
push
push
push
jl
push
jecxz
shl
push
adc
aas
xor
jns
aas
int
int
or
subps
jmp
mov
sbb
adc
data16
je
adc
add
mov
fnop
adc
xchg
jbe
das
pop
fmull
adc
cmc
sbb
nop
mov
or
test
adc
mov
out
loop
jecxz
lret
jle
pop
sti
cmpsl
shlb
cmpb
sub
not
jb
sub
dec
push
addb
mov
push
divps
dec
and
xchg
stos
xchg
jg
adc
hlt
insb
clc
xor
fs
or
push
shlb
sbb
hlt
mov
data16
ret
push
add
ror
push
insb
data16
sbb
lret
movl
ficoml
push
outsl
repnz
pushl
add
mov
push
dec
fsubs
add
mov
pop
dec
push
pop
inc
gs
add
jne
and
xor
rol
mov
or
push
mov
inc
or
adc
mov
cmp
enter
loope
inc
and
jo
movsl
shlb
xor
lods
popf
aas
jb
jecxz
icebp
add
out
lods
jo
adc
mov
sbb
aaa
sahf
add
xchg
sub
inc
call
lahf
sarl
push
aaa
push
adc
cmp
test
add
fst
dec
cmc
stos
int
fstl
add
and
pop
movsb
fcoms
movsl
sbb
out
jle
adcb
pop
mov
jle
iret
xor
mov
pop
jno
fldenv
sbb
and
arpl
mov
negb
hlt
jmp
jnp
pop
stos
fisubl
hlt
adc
std
push
sbb
pop
xor
data16
inc
inc
dec
mov
lret
mov
inc
mov
fs
pushf
rcr
add
shl
imul
cmpsb
jo
fs
shl
das
aam
push
add
or
test
out
arpl
inc
add
in
lret
icebp
cmc
ret
inc
in
pusha
jge
or
std
pusha
add
test
fxtract
in
sbb
pop
pop
mov
mov
mov
cmc
outsl
and
mov
fsubs
out
cmp
xor
push
or
sub
js
mov
add
cld
and
sub
cmpsb
jno
mov
mov
decb
fs
pop
test
sbb
push
cmc
pusha
sub
cltd
mov
dec
subb
aaa
and
xor
push
clc
sbb
divps
or
push
add
push
loope
dec
jnp
loope
js
add
mov
jg
clc
lock
movsb
rcrb
lahf
add
vmovups
mov
push
cmp
cmpl
push
sub
clc
push
jecxz
inc
out
mov
add
imul
fs
cmc
enter
xchg
into
inc
lahf
inc
xchg
imul
pop
in
cmc
inc
cs
ja
push
cwtl
hlt
mov
fs
out
push
add
jbe
iret
xor
clc
xor
jo
mov
div
cwtl
fnstenv
jl
sarl
pusha
pop
cmpsb
pop
fldl
dec
fisttps
sbb
xchg
push
and
dec
fs
faddl
inc
adc
xchg
push
inc
or
imul
or
in
xchg
add
sbb
insb
loop
xor
mov
cmovno
adc
xchg
xchg
mov
lds
sub
and
incb
in
xchg
mov
aas
add
fsub
mov
cmc
adc
hlt
fs
xor
add
fsubrs
inc
iret
sub
xor
or
jp
mov
clc
scas
hlt
loopne
out
les
fwait
call
inc
filds
pop
or
iret
sbb
xchg
fcomps
test
adcl
inc
or
jmp
sarl
sbb
push
push
ficoms
ja
imul
pushl
flds
lods
sbb
adcb
je
xor
in
cmc
and
cmp
clc
ja
cmp
add
fldl
cltd
idivb
arpl
cmc
sahf
pop
adc
push
xchg
jp
stos
movsl
ljmp
and
nop
jne
ret
mov
add
or
pop
imul
add
mov
ss
pop
cmpsl
xchg
mov
or
mov
xchg
mov
test
push
lods
add
pop
adcb
push
arpl
xchg
jb
test
mov
insb
xchg
aad
pusha
add
out
sbb
imulb
out
out
inc
sarl
mov
inc
in
rclb
jne
or
push
cmc
add
in
jge
popa
data16
cmpps
pop
icebp
or
jecxz
cmpsl
adc
div
sub
je
lea
dec
cmp
cmc
and
cld
sahf
mov
xor
push
fstpt
push
insb
jnp
push
jns
jg
mov
push
addr16
ljmp
sub
out
or
push
push
int3
popa
push
xchg
inc
and
arpl
cwtl
jecxz
movsl
or
fldcw
lret
leave
push
inc
movsb
push
fs
pushf
lds
xchg
mov
jmp
out
fs
fidivs
idiv
cmc
or
mov
mov
mov
or
or
or
insl
xor
xchg
ja
add
jge
ret
or
cmp
testl
cli
adc
lcall
aam
jo
jns
xor
es
mov
ret
dec
cmpsl
add
frstor
iret
enter
fldl
push
lahf
xor
notb
les
loope
cmp
push
fwait
jmp
sti
push
fs
sub
mov
bound
pop
or
xlat
inc
xor
rcll
aas
jl
jno
or
mov
dec
add
mov
pusha
mulb
ljmp
popf
pop
sub
pop
pop
mov
mov
rep
xor
jne
inc
lret
jl
mov
ja
and
pushf
mov
repz
es
jecxz
pop
push
cmp
testb
lea
inc
push
adc
xchg
push
stos
testb
idivl
insb
das
pop
sbb
and
sahf
add
xlat
sub
std
repnz
cmpsl
lock
add
out
les
addr16
push
fadds
jl
inc
add
aas
ds
adc
lret
and
or
sti
insl
jl
add
xchg
jecxz
mov
popf
and
in
xchg
test
lods
ljmpw
cltd
testb
lds
fisttps
testb
call
pop
add
dec
xor
cmpsl
xor
aas
negb
jp
xchg
add
sub
cmp
inc
jmp
daa
ss
mov
fs
mov
stc
adc
add
jb
xchg
inc
push
fld
sub
cmp
repz
fs
aaa
ret
and
dec
add
pop
addr16
mov
sahf
hlt
fdivrs
mov
subl
mov
sbb
mov
push
sbb
test
sub
mov
imul
icebp
add
icebp
arpl
adc
je
push
add
add
sbb
dec
mov
xor
divb
mov
cltd
and
inc
pop
xchg
ret
int
xchg
adc
ds
lods
in
sub
push
cmc
pop
and
adc
dec
jbe
out
add
cmc
mov
je
add
cmc
adc
gs
push
test
sub
and
into
dec
push
repnz
dec
fs
fcompl
bound
and
stc
fsubl
mov
push
jg
in
cmpsb
mov
pop
negb
adc
fldl
dec
xor
jmp
in
mov
shr
add
loopne
sub
push
or
xchg
movsb
jmp
add
and
popf
test
aam
sbbl
aam
sbb
in
sub
sub
testl
fs
mov
inc
cmp
ret
mov
stc
or
popf
mov
mov
or
xchg
divb
imul
xor
cltd
xor
fs
movsb
or
sar
add
sub
rclb
mov
mov
fiaddl
mov
imul
cmc
xchg
xor
movsb
sub
lods
jb
and
push
jge
cld
jae
scas
hlt
js
aad
mov
nop
jne
or
fdivs
adc
jae
xchg
mov
dec
movl
cmc
sbb
cmp
into
imulb
shll
sub
xchg
mov
mov
mov
xor
or
push
sbb
mov
mov
das
jb
add
daa
xor
div
pop
mov
ss
outsl
pop
add
dec
push
cmp
enter
ret
mov
xchg
add
push
jno
cmpsb
pop
or
cmc
jmp
xor
imull
ljmp
adc
pop
lds
inc
test
test
imul
lds
test
add
dec
cli
xor
fs
inc
mull
les
mov
jmp
cmpl
sbb
pop
roll
jmp
in
pop
mov
push
dec
pop
leave
jnp
add
sbb
inc
movsl
jo
test
sub
add
mov
addl
or
aad
cmp
xchg
lods
out
inc
jg
pop
movsl
js
fsts
sub
int3
xchg
repz
inc
roll
insb
xor
push
xchg
jge
and
stos
arpl
cmp
daa
and
iret
fcoms
insl
add
test
pop
mov
pop
xor
mov
js
xchg
fs
xchg
and
xchg
add
mov
jge
push
hlt
push
push
adc
insb
andb
and
fldcw
add
jmp
inc
xor
push
jo
daa
int3
dec
les
and
xlat
popa
aas
and
jge
shrb
sbb
dec
xor
xlat
rep
and
imul
xor
push
xchg
je
cmc
mov
inc
mov
cld
adc
jge
orl
leave
inc
rcll
xorl
mov
add
je
idiv
arpl
icebp
lea
pop
jg
sahf
ja
div
icebp
gs
addr16
fidivl
rcrl
mov
jno
pop
push
scas
cmc
lods
sbbb
pop
mull
jb
xchg
testb
inc
adc
enter
pushf
xor
jo
lahf
pop
imul
mov
test
stc
aad
push
cmp
pop
sbb
sbb
xchg
sub
xchg
xchg
xchg
cwtl
adc
inc
adc
sub
test
fs
dec
mov
push
mov
clc
outsb
xor
sbb
dec
pop
das
popa
fstp
test
add
inc
sbb
fs
cmpsb
inc
xor
enter
sbb
add
outsb
stc
push
mov
mov
data16
notl
stc
repnz
insb
push
cmp
or
or
jmp
jecxz
mov
mov
sahf
add
sbb
cmc
add
iret
cld
xor
sahf
and
xchg
add
adc
js
and
dec
hlt
adc
stc
sbb
loopne
ljmp
nop
pop
aaa
cld
fistl
mov
inc
jno
add
insb
pop
enter
outsb
clc
inc
mov
push
add
or
and
push
push
lret
and
std
xchg
aam
lret
call
pushf
jo
xchg
fs
pop
fs
and
mov
mov
cmc
jno
mov
sbb
aad
in
or
mov
pop
std
adc
mov
mov
xchg
push
cmp
cli
xchg
adcl
lret
pop
subl
sarl
mov
cmp
ja
inc
lods
int
dec
les
inc
add
jle
les
cmpsl
movsb
repz
ja
mov
ljmp
mov
mov
and
imul
dec
mov
add
lods
xor
lret
xor
js
xor
jne
push
fbstp
sub
xchg
and
mov
mov
add
jns
cmp
mov
nop
sub
cmp
pop
mov
into
clc
adcb
add
fcompl
push
push
xor
jmp
sti
cmp
mov
fxch
pop
add
loop
or
rclw
ret
or
mov
mov
cli
mov
test
jmp
jno
xchg
mov
fists
pop
lahf
fs
icebp
int3
adc
addb
in
mov
mov
dec
pop
out
add
xor
push
fdivl
push
sub
sbb
cmp
add
pushf
bound
push
xor
scas
ret
mov
sarl
movsl
bound
test
mov
dec
pop
push
cmpsb
mov
xor
mov
and
pop
push
cmovl
xlat
inc
movsb
and
xchg
jle
lahf
fs
dec
pop
mov
sbb
add
js
in
outsl
cmp
cmp
sbb
adc
cld
cmc
lea
cmp
pop
je
push
mov
jns
insl
fiadds
mov
lret
movsb
pusha
popa
fxch
lods
cmc
inc
mov
mov
or
pusha
cld
int3
cmp
push
cmpsb
pop
push
add
ret
out
repz
clc
bound
gs
fnsave
leave
cld
gs
stos
shll
dec
adc
cli
add
ret
push
out
xchg
sub
fcompl
xchg
add
mov
jmp
fcoml
adc
xchg
lds
divb
mov
sti
aad
cmpb
out
int3
negl
xor
xor
mul
and
and
xor
scas
dec
and
mov
int3
out
jns
inc
add
adc
pusha
inc
cltd
inc
or
idivl
test
mov
adc
jge
cmc
iret
hlt
fwait
or
cmp
lcall
or
jno
daa
fwait
insl
shl
inc
xchg
jbe,pn
add
dec
mov
std
cmc
dec
insl
insl
push
loop
fdivrs
push
xchg
mov
sub
enter
xorb
push
jbe
popw
hlt
and
cmp
cmp
outsb
and
std
incl
psubsw
movsl
pop
sub
cmp
push
insb
movsl
push
stc
divps
jecxz
sub
imul
cld
add
xor
sub
inc
cmc
in
adc
fimuls
nop
mov
test
sbbl
repz
lock
rorb
test
pop
sub
and
insb
jnp
shlb
lods
sub
add
mov
imul
pmaddwd
divb
pop
jne
pop
fwait
jnp
rorb
ret
test
adc
and
fildl
pop
repnz
or
inc
and
add
js
cmp
or
in
xlat
jp
cli
sbb
jae
push
and
mov
push
scas
testb
vmovhps
int
mov
mov
popl
je
aas
arpl
or
mov
add
sar
jno
add
jp
mov
mov
pop
adc
in
add
jl
push
sahf
sbb
mov
aam
lods
clc
stos
lds
cmp
divl
mov
add
and
push
cli
repnz
jnp
stc
fs
inc
and
and
psrad
out
imul
gs
mov
xor
mov
add
or
and
cmp
incl
mov
and
mov
out
mov
test
push
and
sbb
data16
js
add
sbb
or
adc
fcomps
sub
addb
add
test
loope
fiaddl
adc
or
or
push
or
or
or
mov
push
jle
push
xchg
adc
mov
xchg
addl
stos
push
mov
popa
cld
mov
scas
add
lahf
pushf
insb
cmp
xchg
cmp
push
add
cld
cmc
sub
sbb
rorb
dec
push
pop
idivb
ja
jge
jecxz
push
add
or
push
add
mov
aad
dec
inc
test
or
inc
add
jne
and
adc
cli
cmp
add
lcall
mov
pop
not
ds
add
jle
std
cmp
pushf
gs
mov
imul
adc
jmp
hlt
inc
mov
fcompl
push
dec
outsl
add
out
out
sbb
stos
push
xchg
out
xor
rcrb
pop
jae
or
add
test
cmp
push
js
fstpl
popa
jl
lods
mov
xor
lcall
in
aad
nop
push
cmp
out
inc
jmp
add
cld
jl
lcall
aas
rcrb
mov
cmc
or
and
xor
sbbb
and
mov
dec
xchg
lds
icebp
inc
push
out
clc
cmc
movsb
lret
xchg
cmp
sub
add
cmpsl
call
rcrl
inc
incb
or
mov
data16
pushf
das
push
and
jmp
add
in
add
sub
cmp
sub
xlat
imul
cmp
jne
pop
push
je
mov
mov
mov
stc
cmc
in
rep
adc
mov
dec
inc
adc
or
add
mov
fcompl
add
pop
imul
dec
mov
out
stos
ja
pop
and
popa
add
sbb
daa
mov
loope
add
sub
mov
jnp
xlat
ret
out
add
mov
shrl
sti
adc
inc
fiaddl
push
int
push
imulb
adc
fs
add
mov
add
mov
inc
fs
aas
das
mov
loop
sbb
add
in
shrb
or
stos
ss
mov
daa
pop
je
cmp
stc
hlt
xorl
fucom
fistl
shrb
push
add
fdivrl
mov
and
fldenv
adc
std
pop
test
dec
pop
sti
stc
movsl
push
lahf
lea
jae
add
mov
loope
jnp
movsb
mov
arpl
sbb
jne
pop
adc
out
nop
testb
inc
sbb
fidivl
lock
or
test
cmp
icebp
out
lret
and
lahf
dec
loope
movsl
mov
shr
loope
cmc
or
mov
imul
push
aas
lods
fsubp
repnz
sbb
cmp
aas
mov
test
icebp
inc
outsl
fnstenv
xchg
nop
push
imul
sbbb
in
push
loope
je
mov
fcmovu
mov
dec
pusha
icebp
insb
adc
pop
or
mov
sti
pop
xchg
add
and
aas
push
imul
neg
addr16
testb
mov
scas
push
adc
pop
xchg
or
insl
pusha
stos
jle
xchg
dec
mov
popa
cmpsb
in
add
sbb
dec
adc
mov
fs
daa
aaa
pushf
jecxz
mov
imul
mov
mov
and
pusha
mov
push
pop
test
push
inc
mov
and
popa
jle
sbb
sub
fs
decl
mov
add
lahf
pop
inc
add
jp
and
cld
movsl
sub
in
lods
add
shufps
or
sti
mov
cmp
in
out
cmp
xchg
add
cli
pop
negb
or
add
fdivrl
xchg
mov
lds
sbb
push
fiadds
adc
mulb
mov
sub
incl
dec
xchg
rol
add
pushf
std
cli
and
mov
lar
in
clc
lock
inc
test
adc
pop
xchg
popa
popa
and
mov
mov
inc
xchg
jbe
pushf
loopne
add
popl
lea
add
std
mov
add
cmpsl
or
xchg
or
cmp
push
cmp
repnz
dec
add
dec
mov
xor
sbb
cmc
prefetcht1
add
jo
aad
test
sbb
add
mov
cmc
out
or
pop
aas
and
adc
stos
inc
or
outsl
add
xorl
push
and
mov
sub
xchg
popa
add
mov
sub
stos
push
pop
es
ficoms
outsl
repz
sub
aas
pop
shl
inc
cwtl
ss
ljmp
out
cmpsl
pop
mov
test
xor
mov
pop
addr16
pusha
out
scas
push
mov
sbb
cwtl
dec
mov
pop
test
dec
rolb
mov
test
inc
push
mull
cmp
rcr
pop
aaa
dec
fs
mov
xchg
add
xchg
inc
and
pop
or
stos
data16
pop
pop
add
jnp
enter
xor
mov
int
jge
jmp
rorl
cmp
loope
andl
fildl
cmp
cld
loope
popa
inc
imul
xchg
sbb
stc
add
sbb
jl
daa
cmp
cmp
jne
je
loope
add
mov
cmc
repz
cmp
sbb
gs
fadds
arpl
notb
idivl
mov
xchg
cmp
cmc
pop
sti
inc
cmp
sbb
iretw
add
mov
sti
push
mov
pushl
faddl
cmp
movsb
adc
and
loope
clc
test
mov
add
xchg
lods
mov
xor
dec
ja
inc
ss
roll
push
push
or
inc
xchg
add
aam
push
icebp
rolb
outsb
arpl
loop
dec
xchg
mov
adcb
cld
inc
and
int3
jmp
push
push
scas
mov
mov
dec
and
xor
das
mov
imul
ret
mov
ds
and
in
jmp
shrl
mov
xor
icebp
xchg
xor
ja
mov
and
push
jp
sbb
out
int
fs
fbld
push
push
out
pop
mov
push
jg
mov
xchg
ss
hlt
or
out
or
gs
les
data16
jo
rol
cmc
cmp
or
cli
sub
add
cmp
pop
fs
test
xchg
add
pop
mov
out
sbb
xor
testl
or
loop
cmc
rcrb
imul
jle
inc
push
notb
add
push
lret
into
cwtl
xchg
cmc
test
lea
shr
mov
xor
xchg
out
and
movsb
imulb
rolb
outsb
mov
add
cs
pop
loope
into
inc
fiadds
lods
icebp
xlat
or
inc
sub
mov
jp
push
push
icebp
and
movsb
leave
daa
push
dec
jno
add
pop
adc
jmp
fwait
cmc
push
rorb
mov
xchg
add
dec
into
stos
add
or
jbe
push
enter
sahf
das
sbb
in
xor
mov
test
sub
in
pop
cmp
add
xchg
lret
mov
clc
sahf
xchg
mov
or
jmp
add
aaa
inc
cmpsb
push
adc
iret
movsl
pusha
ljmp
fs
aad
icebp
mov
jmp
es
sbb
out
rolb
int3
add
cmp
adc
xchg
int
add
xchg
dec
es
insl
jle
adc
repnz
shr
jo
dec
or
adc
lods
mov
fs
or
or
rcrb
inc
je
into
test
sbb
lret
mov
mov
mov
cmp
std
int
fiaddl
mov
mov
and
or
inc
inc
sarl
sub
paddusb
imul
xchg
add
xchg
in
xchg
arpl
push
dec
or
aaa
dec
in
mov
push
adc
xchg
lods
push
popa
cld
push
push
sbb
lods
xlat
pop
pop
add
std
jge
lods
pusha
cmc
divl
sti
dec
roll
cwtl
neg
add
mov
in
push
lcall
xor
add
pop
andl
push
add
daa
daa
push
mov
testb
xchg
or
bnd
xor
push
and
jecxz
jge
fcoms
or
mov
jo
xorl
shlb
jecxz
stc
icebp
push
jecxz
imulb
xor
mov
cmpsb
add
cmc
and
add
xchg
into
add
subl
cmp
push
jmp
es
mov
xchg
mov
cmc
sub
mov
jo
sub
cmp
out
in
push
sub
mov
fistl
out
rcrb
bsr
jle
mov
adc
stc
xchg
inc
imul
inc
xor
pusha
not
mov
pushf
popa
add
ret
xchg
ds
push
push
mov
pop
push
aas
pop
xor
int
aad
inc
fs
inc
and
movsb
push
push
jge
js
repnz
cmp
add
xchg
ja
jmp
pop
or
out
fsubs
mov
into
push
in
outsb
popa
push
or
lea
repz
lods
add
mov
notb
and
roll
popa
add
mov
std
cmp
pop
aam
xchg
cld
es
loop,pt
jbe
orb
sub
insl
ljmp
loopne
orb
icebp
xor
add
popf
dec
sbb
rcl
inc
jnp
pop
and
or
ljmp
inc
cmp
sub
jns
clc
loopne
jne
push
nop
mov
hlt
cmp
fistpl
and
int3
inc
sub
mov
pop
adc
dec
ds
mov
mov
insb
xor
cs
incb
jmp
inc
ss
rclb
aas
push
ds
ds
adc
loop
adc
mov
notb
pop
sbb
inc
stos
repnz
shll
idivl
inc
dec
inc
xor
mov
push
jnp
repnz
push
popa
out
icebp
loope
in
fdivrl
mov
inc
sbb
push
inc
sub
inc
insb
scas
fcoms
data16
nop
cmc
inc
hlt
cmp
add
cmpsb
inc
testl
pop
cmc
fistl
pop
in
jo
add
lcall
add
addr16
sti
pop
popw
mov
add
xor
inc
fwait
push
jmp
adc
mov
xchg
shrl
add
pop
cmp
addb
or
push
lcall
xchg
int
mov
push
push
repnz
mov
add
adc
push
imul
jp
aad
sub
add
add
sbb
jne
mov
std
idiv
push
daa
shrl
push
xchg
mov
inc
int
idivb
daa
sahf
xchg
adc
jecxz
xchg
in
leave
mov
push
aaa
mov
imul
xor
adc
insl
xchg
cmc
inc
mov
mov
cmova
mov
insb
pop
out
cmc
fisubrl
cli
arpl
fstpt
es
jg
pop
negb
sub
sbb
and
stos
mov
addr16
cli
or
push
jp
mov
xchg
fs
mov
fs
ljmp
inc
pusha
pop
std
mov
xchg
inc
neg
out
xchg
mov
dec
popa
pop
ficomps
pop
repz
mov
add
ss
ret
test
ret
sbb
aam
cli
faddl
pmaxsw
rcrb
add
pop
mov
add
cmc
test
mov
lds
fbld
subl
repz
ja
jo
ss
dec
popf
and
lea
inc
mov
dec
push
imull
cli
cwtl
xchg
rorl
aad
sub
inc
sbb
pop
rol
in
jbe
bnd
add
pushf
adc
shll
add
xor
mov
insb
xchg
inc
cmp
mov
mov
test
inc
push
mov
test
fcoms
cmp
adc
or
arpl
adc
or
mov
bound
ret
dec
cld
or
jns
mov
mov
inc
mov
xor
lret
stos
sti
push
outsl
add
push
add
cmc
int3
mov
cltd
or
out
xchg
mov
jno
mov
pop
icebp
cmp
mov
mov
or
cmc
or
and
mov
fisttps
jge
cltd
iret
add
fidivl
icebp
mov
and
icebp
in
jp
shll
adc
std
lret
jl
add
das
lods
sti
ja
mov
ds
and
pop
scas
add
call
mov
sbb
adcl
sbb
mov
mov
daa
testl
lods
cmp
dec
inc
ficompl
dec
add
cmpsb
ret
je,pt
out
adc
cli
repz
push
loope
test
push
loope
in
jmp
es
in
jle
lock
fs
push
xor
dec
sbb
sbb
mov
testb
cs
push
pusha
lea
adc
stc
das
sbb
mov
adc
push
ret
subl
jb
movsl
sub
xchg
popa
out
and
popa
adc
push
pusha
sarb
bound
mov
push
xchg
inc
arpl
addl
fs
cmp
jecxz
xor
lods
clc
push
andb
mov
inc
xchg
movsb
push
pop
ds
icebp
add
pop
sbb
out
xchg
jae
js
jmp
stos
popf
push
cmpsb
mov
mov
add
mov
out
repz
xor
adc
jae
mov
ja
daa
addr16
cmp
inc
dec
scas
in
stc
mov
pop
xchg
xchg
mov
icebp
in
out
inc
outsb
pop
nop
gs
addr16
mov
and
loope
js
cmpb
ret
mov
lea
insb
ljmp
sub
rcrl
mov
fsubl
pop
sbb
movsl
call
decb
clc
aas
in
mov
fs
fisubrl
shrl
repz
mov
aam
stc
inc
loope
mov
cmc
idiv
lcall
cmc
inc
sbb
mov
jae
add
xor
movsb
rcll
negb
test
cmp
dec
dec
pop
adc
cld
pop
sub
daa
incb
or
xor
repz
cmp
mov
cld
jno
or
push
pop
add
lods
ds
and
xor
inc
loop
repz
imul
imul
test
sbb
fld1
add
mov
fcomps
pop
stos
cmp
add
jne
sub
jnp
add
rorl
insl
movl
jl
pop
push
pop
and
jbe
rclb
lock
add
in
ficomps
loope
add
mov
ficompl
xor
pop
mov
fadds
lret
mov
jle
out
dec
jns
add
call
popf
cmc
push
sbb
ja
inc
rcrb
adc
mov
data16
bound
xor
add
insl
pop
jno
add
add
sbb
fs
dec
adc
scas
xor
pop
add
movsb
adc
fwait
cwtl
lcall
cld
add
hlt
cmp
xchg
stos
loopne
jp
and
inc
aas
int
xchg
push
stc
sahf
cmpsb
add
jbe
jp
shll
inc
outsb
jle
popf
pop
cmp
push
sub
xchg
and
sbb
inc
sbb
cmc
sbb
and
lahf
xchg
mov
sahf
cmc
xchg
adc
sahf
cmp
out
xchg
adc
inc
cmovge
xorl
add
add
scas
dec
rorb
testb
xor
stc
fildl
fists
test
pop
scas
sbb
sbb
cmc
sub
les
lock
jmp
mov
mov
push
push
hlt
add
cmp
sti
fnstenv
mov
xor
cmpsb
add
add
xchg
pop
sub
lcall
mov
sbb
cmp
or
sti
push
push
or
inc
jmp
add
rcr
push
mov
mov
outsl
sbb
lret
add
push
cmp
in
sbb
mov
data16
xor
add
pop
pop
jmp
stos
mov
jecxz
divb
popf
add
xchg
into
cld
lds
adc
repnz
popa
cld
add
cmp
test
cmpsl
imul
icebp
cld
push
rorb
jne
push
test
or
adc
imul
in
pop
xor
add
add
or
sbb
xor
in
add
les
dec
sar
adc
fsubr
fdivrl
je
mov
arpl
popa
pop
cmc
cmc
jecxz
sbb
push
dec
shl
mov
xchg
xchg
dec
or
imull
push
xchg
ficoml
xchg
scas
fnstsw
xor
jle
push
mov
faddl
mov
pusha
and
mov
mov
and
inc
leave
pop
movsb
mov
dec
sahf
in
ret
or
repz
mov
je
cmp
xchg
add
mov
mov
arpl
push
jbe
xchg
pop
addl
insl
rol
mov
notb
aam
in
or
add
fs
jns
push
rcrl
pop
dec
mov
enter
xlat
shlb
or
or
pop
or
xchg
cli
jp
adc
sub
cmp
fldenv
popf
out
jl
jo
je
push
ss
sbb
repnz
notb
xchg
inc
movsb
xchg
movsl
cmpsl
sbbl
xor
loopne
cmc
into
jp
lret
push
imul
lock
and
push
jg
cltd
fs
add
imul
aas
fs
rcrl
cmp
repz
scas
add
mov
lea
lods
pop
xchg
outsb
add
add
movsl
or
pop
je
add
or
fimuls
iret
mov
mov
sbbb
syscall
inc
inc
enter
push
inc
stc
in
mov
fsts
mov
fdiv
jge
add
loope
push
icebp
lea
and
sbb
xor
push
mulb
dec
es
sub
adcb
test
pop
call
inc
fs
pop
push
shll
xchg
loope
fwait
std
pop
xlat
lods
shl
mov
jne
je
adc
jns
dec
movsl
cmp
mov
outsl
push
or
dec
mov
or
push
movsb
pop
arpl
pop
in
shr
jb
mov
int3
mov
repnz
mov
fucomip
imul
mov
ds
and
adc
pop
sbb
adc
popa
jmp
xchg
sub
mov
and
iret
pop
loopne
sbb
fs
sahf
pop
cli
loop
fcmovnb
into
ljmp
inc
idiv
ljmp
and
icebp
or
fdivl
mov
add
xchg
push
pusha
mulb
mov
push
inc
outsl
mulb
notl
mov
out
movsb
iret
icebp
imul
inc
adc
ljmp
in
dec
imul
add
and
pop
push
push
ret
mov
or
sub
pusha
jo
outsb
xchg
aaa
mov
fmuls
incl
or
sbb
pusha
aad
cmpsb
loope
pop
add
es
xchg
inc
das
sahf
lds
in
add
dec
add
fnstenv
and
popa
in
xor
addr16
and
jg
popa
popa
xor
inc
data16
pop
or
int
xor
cmc
sarl
add
fisttpll
pop
push
push
lods
aad
cmp
push
cmc
or
movsl
mov
sub
or
je
mov
ss
or
xchg
or
fildl
adcb
popf
cli
xor
lcall
add
pop
cmpsb
ss
adc
jg
fldl
call
outsl
daa
cmp
push
jmp
inc
aas
or
mov
or
mov
mov
adc
stc
outsl
add
dec
outsb
testl
aam
push
sti
iret
dec
or
mov
lds
sub
sbb
or
out
sarb
mov
sbb
fs
cmpsb
sbb
inc
loope
imul
pop
xchg
arpl
repnz
push
mov
mov
mov
pop
divb
and
xchg
xchg
fucom
or
push
cmc
push
sub
lcall
ficoms
aas
nop
rcll
xchg
cmp
movsl
divl
leave
add
movl
xchg
pop
hlt
into
adc
or
pop
mulb
sbb
pop
and
outsl
icebp
pop
aam
loope
inc
cld
ds
jne
jnp
stos
lods
cli
jo
sbb
xchg
xlat
stos
adc
rcl
rcrl
cmpsb
sbb
inc
lock
notl
aam
lret
sub
jmp
and
xchg
fidivs
movsl
push
cmp
icebp
xchg
lds
inc
jbe
out
stos
decb
in
mov
into
int3
inc
mov
pop
lods
data16
push
add
cmpl
push
popa
xor
dec
sbb
movsb
aaa
shlb
xchg
xor
stos
aaa
lcall
lret
mov
and
pop
and
push
idivb
cmp
not
mov
sti
mov
ljmp
fs
add
mov
in
sti
add
pop
add
and
and
mov
popf
nop
xchg
sbb
mov
fs
leave
rcrl
negb
orb
pop
xor
push
out
pop
stc
fsts
and
jbe
add
xchg
call
test
dec
jp
push
rorb
test
ret
test
jo
inc
sub
xchg
test
jns
jle
addr16
mov
xor
negb
repnz
add
dec
clc
testb
out
std
dec
jge
jmp
int
or
stos
add
mov
cmp
xchg
inc
cwtl
push
imul
add
out
jmp
pop
adc
cmp
push
mov
inc
adc
inc
sbb
inc
ret
mov
shlb
repz
dec
jbe
shr
cmc
int
adc
inc
sub
test
shll
jbe
cmp
sti
and
sub
insb
mov
pop
ljmp
add
movsb
pop
cli
or
push
ss
ds
lods
add
push
sbb
sbb
pusha
es
mov
test
and
cmc
mov
xchg
sub
mov
mov
popa
das
xchg
cmpsl
mov
fnstsw
push
jecxz
add
stos
es
push
notb
cld
adc
ja
enter
sub
scas
add
loope
push
sub
je
sbb
or
imul
out
popa
fwait
fs
aam
sbb
inc
popa
stc
mov
out
repnz
fiaddl
fsubrp
push
ds
adc
sbb
cmp
gs
inc
push
ss
cmp
or
mov
fs
sbb
sub
sub
cmp
add
ffreep
push
cmp
or
adc
jp
sbb
negb
cs
push
pop
lock
rorb
aad
and
or
ss
or
into
jne
scas
nop
sbb
movsl
and
test
enter
sti
add
cs
cs
out
inc
dec
jne
gs
call
outsb
out
mov
and
cmpsb
popa
lds
xchg
les
and
xor
arpl
push
xchg
xchg
je
xchg
fsub
push
push
inc
xor
adc
jl
gs
inc
cmp
lods
add
push
inc
mov
push
test
js
fmuls
bound
arpl
jb
cmp
js
cmp
push
mov
xchg
mov
inc
inc
ljmp
xchg
and
call
jbe
add
dec
rcr
mov
int
ret
jecxz
ret
enter
test
mov
fisttpl
test
push
negl
mov
mov
xchg
sub
popa
fnstenv
clc
mov
out
lock
add
mov
mov
jp
filds
push
xor
aas
xchg
pop
daa
push
or
lods
gs
aaa
cmp
filds
pop
test
add
gs
adc
in
dec
mov
mov
sahf
fnstenv
rcr
jns
testb
cmp
add
mov
and
mov
movsl
lds
hlt
aad
cmc
cmp
dec
xor
jl
lds
add
and
pop
xchg
or
insl
popa
jle
and
xor
mov
in
adc
and
cmp
jbe
dec
inc
xchg
inc
sub
jne
iret
jno
lret
adc
fisttpl
imul
cmp
das
out
add
or
adc
xlat
lea
xor
loope
dec
adc
testb
sti
js
or
adc
sbb
pop
push
dec
not
imul
das
and
jp
push
imul
in
inc
ficomps
insl
xchg
jecxz
nop
ret
rorl
push
call
add
xchg
pop
push
xchg
cmpsl
scas
pop
test
inc
aam
jns
xor
cmpsb
orl
mov
add
lea
rcr
imul
adc
jnp
add
jge
ljmp
mov
xchg
in
inc
inc
dec
jmp
push
test
adcb
icebp
and
sub
aaa
cwtl
jecxz
pop
test
iret
lds
add
mov
push
pop
cs
int3
dec
xchg
in
std
and
add
jl
pop
loopne
out
ja
mov
push
adc
stos
fisttps
lret
adc
repz
popa
fdivrs
fwait
mov
and
or
mov
lods
mov
pop
cmc
xor
adc
pop
dec
scas
rorb
inc
test
pop
call
fcomps
pop
xlat
push
pop
outsb
sub
stc
sbb
movsb
xor
add
int
ficoml
jecxz
mov
loopne
mov
fs
iret
leave
lods
inc
inc
push
jo
fstpt
sbb
aaa
subb
es
add
imul
ljmp
jnp
in
add
rorb
cmc
bound
es
mov
cmpsb
add
pop
add
ss
addl
pop
mov
sub
lds
cmp
cltd
xlat
fldenv
push
fs
clc
xchg
fcoml
orl
jg
jl
mov
insb
add
js
adc
and
fsubl
add
pop
imul
push
add
lock
add
fdivs
add
xchg
test
int
int3
in
dec
push
cmc
test
sub
repnz
xchg
mov
stc
or
inc
mov
inc
loop
ficoms
sbb
mov
cmp
loop
rcrb
mov
push
mov
leave
mov
mov
add
mov
mov
rcr
inc
sarl
mov
ss
xor
fcmovbe
mov
subb
movsb
xchg
jb
adc
fbld
lahf
jle
jne
jecxz
pop
mov
xchg
push
bound
ja
sub
xchg
loope
mov
mov
cld
daa
jb
inc
call
inc
shl
sbb
push
adc
pop
dec
fisubs
not
cmp
sbb
movl
test
add
loope
xchg
cmp
aaa
and
and
mov
push
xchg
pop
mov
into
jge
jno
idivl
inc
add
xchg
ja
mov
jge
sbb
leave
fcomip
sbb
call
adc
jecxz
xor
or
or
lret
lea
mov
push
xor
inc
mov
mov
call
xor
sbb
js
mov
mov
and
sub
aaa
jo
add
shll
fbld
negb
je
fcmovne
add
push
mov
mov
add
mov
lcall
into
mull
sub
push
cmp
aaa
jbe
inc
adcb
insb
xchg
add
testb
mov
push
push
pop
mov
adc
xor
int
sti
add
dec
push
add
lods
in
sti
lock
imul
inc
mov
sti
or
cmpsl
cmp
push
xchg
mov
inc
adc
or
insb
xchg
leave
xchg
mov
sbb
shl
mov
inc
inc
aaa
inc
testl
inc
add
and
fadd
add
push
lock
hlt
shll
out
mov
add
or
std
fwait
testb
xchg
push
cld
jge
repnz
push
cmc
inc
sbb
fcoms
ret
cmp
ljmp
jne
fcompl
xchg
aas
inc
add
xchg
cmp
fs
sar
in
push
setge
cmp
push
sub
sub
call
jl
in
add
aam
push
mov
inc
cmpsb
daa
popa
sbb
add
arpl
or
push
push
jbe
je
notb
notl
ss
daa
and
jbe
mov
mov
mov
xchg
dec
insb
out
jb
xchg
mov
or
pop
js
fdivrs
fsts
and
aas
clc
xchg
sbb
fisubs
and
inc
pop
popa
inc
mov
out
rcr
in
cmp
incl
mov
out
cmp
cld
dec
adc
mov
push
push
scas
push
sbb
and
aam
inc
inc
cmp
inc
push
add
mov
pop
or
test
cld
dec
daa
mov
addl
loop
cmc
mov
mull
push
push
cli
je
ficoms
xorb
adc
and
test
add
xchg
push
rclb
in
inc
jmp
cmp
pop
push
aaa
pop
sub
aam
cmp
xlat
inc
andb
pop
idivb
xor
or
das
test
pop
jg
fimuls
mov
rclb
pop
jb
sub
ds
popa
int3
divb
fs
or
dec
fs
shl
aam
rep
inc
mov
sub
mov
clc
pop
add
cmc
xor
icebp
jecxz
push
ss
or
and
enter
jne
sbb
das
inc
in
sbb
std
aam
andb
sub
sti
inc
fldcw
aam
mov
stos
adc
fsubs
aam
movsb
jp
mov
or
push
dec
std
in
mov
dec
mov
xor
lods
pop
lret
scas
jl
jns
out
add
sbb
or
add
pop
mov
icebp
jno
rcll
pop
mov
mov
jne
push
outsb
cli
mov
imul
mov
pop
jbe
sbb
enter
mov
sar
inc
loopne
incl
stc
mov
fldt
cmp
xor
jno
or
add
xchg
jb
add
stc
jge
subl
add
arpl
shrl
std
into
int
mov
repz
pop
mov
jne
jmp
das
nop
dec
cmp
cmp
add
sub
lret
or
outsb
pop
fs
dec
in
sbb
rcrb
mov
add
xorb
pop
jo
outsb
std
hlt
sub
add
push
pop
or
call
stos
test
inc
aaa
pusha
mov
mov
fisttpll
in
xchg
and
or
or
and
add
pop
push
js
data16
add
popa
cmp
test
adc
xor
pop
lods
add
scas
insl
mov
push
and
xchg
add
dec
popf
loop
fs
mov
cmp
inc
cli
push
repz
or
push
mov
push
cmovne
dec
pop
cmp
loope
clc
bound
idivl
int3
xlat
cmp
shlb
add
sub
mov
pushf
and
addl
xchg
jno
push
adc
ret
and
jae
xchg
adc
inc
rcl
cmp
pop
sti
insb
aas
fdivrs
cmp
pop
xchg
or
sub
stos
insl
cli
stc
arpl
jle
or
adc
lcall
cmpl
xor
push
les
sbb
inc
icebp
fbld
mov
inc
add
fsts
test
mov
jbe
mov
clc
add
dec
fsubs
nop
stos
unpcklps
mov
sub
popf
add
inc
xor
outsl
and
sarl
ret
jecxz
out
inc
or
sbb
in
mov
out
push
shlb
out
or
add
fstpt
push
es
roll
mov
leave
dec
push
js
imul
enter
inc
imul
add
cmp
inc
pop
or
or
mov
sbb
or
lret
out
push
pop
cli
rclb
lds
cwtl
cmc
cmc
push
popf
sti
aaa
loopne
push
add
pop
movsb
push
cmp
or
aam
sub
fcoms
mov
xchg
xor
imul
lods
lcall
ror
jne
insb
sub
jp
movsl
fistpll
cld
mov
pushf
roll
lock
fs
lahf
sbb
sbb
data16
adc
sbbb
sbb
lret
test
imul
inc
test
sarl
or
scas
jne
cmp
clc
popf
or
lock
setl
das
fs
neg
cmp
lea
sub
lea
inc
sarl
fmull
and
pop
int3
pop
mov
push
in
add
ror
xor
mov
dec
push
cmp
add
cli
push
nop
xchg
cmc
dec
jecxz
xlat
fs
aas
inc
ds
mov
pop
push
in
add
movsl
push
cmp
adc
sbb
call
push
inc
fsubs
mov
mov
cmc
lods
dec
or
mov
nop
out
push
test
push
mov
testb
jg
inc
rol
les
out
push
adc
mov
adc
outsb
clc
sub
lahf
negl
or
xchg
cmp
adc
lea
push
or
mov
jle
mov
xor
jnp
sbb
pop
arpl
test
mov
mov
scas
mov
sub
stc
flds
cmc
aad
cli
and
lds
aad
lret
and
pop
aaa
pop
daa
jbe
into
xor
jl
mov
sub
sbb
xor
into
mov
jg
jl
cmpsl
xchg
pop
and
add
push
pop
outsl
movsl
push
sbb
fistpl
pop
push
push
notb
sbb
cli
in
push
aaa
dec
mov
jnp
cmp
lds
mov
imul
mov
sbb
popl
popf
push
xor
jb
pop
divb
lock
push
dec
mov
add
pusha
mov
jae
movsl
cli
in
jg
cmc
adc
xor
mov
std
inc
ds
pushf
jecxz
push
sub
dec
sub
inc
mov
adc
inc
and
lods
sbb
add
pop
sub
fs
outsb
repnz
mov
rcrb
mov
fdivrl
movsl
pop
lret
or
sub
icebp
mov
std
into
push
bound
test
dec
add
mov
cmp
or
and
cmpb
sti
pop
lahf
ds
in
sub
push
icebp
jno
fcomp
jo
rcll
cmp
and
inc
lods
adc
mov
lock
or
cmp
xchg
fs
mov
lods
xlat
push
mov
shll
and
or
mov
add
nop
xchg
dec
pop
testl
add
scas
inc
inc
aaa
xor
xchg
cmc
shlb
push
mov
push
add
xchg
int3
js
movsl
divb
lock
cmp
jo
and
enter
notb
push
sub
xchg
cld
add
mov
adc
mov
dec
loop
shl
sub
mov
or
mov
inc
fistl
std
out
jnp
inc
mov
or
or
pop
shlb
push
sub
pop
loopne
dec
std
sub
or
daa
jl
imulb
in
roll
push
or
cmc
pushw
insl
add
push
mov
xor
mov
fs
cmc
je
lret
inc
icebp
imul
push
or
out
add
or
mov
cmc
adc
mov
add
fadd
fs
xor
push
add
nop
outsl
sti
sbb
cmc
jbe
orl
adc
ljmp
popa
clc
jae
dec
pop
xor
adc
cmp
xor
notl
push
jbe
dec
mov
mov
add
xor
dec
pop
out
adc
pop
fnstcw
in
aaa
sub
fs
fidivl
add
in
imul
push
jecxz
pusha
div
add
fldenv
or
pop
out
movsl
int
xchg
sub
hlt
mov
jmp
or
mov
std
lea
aas
jle
iret
stc
cld
xorl
or
adc
push
add
nop
sub
ret
sbbl
fwait
inc
mov
lret
inc
gs
rolb
test
sub
sbb
loope
jns
out
mov
push
rolb
sete
push
cmpsb
pop
add
xchg
in
test
icebp
sub
xchg
scas
subb
sub
sbb
sbb
xchg
or
test
or
ror
pop
xor
aad
adc
dec
sbb
cli
push
lahf
lds
stos
fs
das
dec
xor
lret
int3
clc
and
sub
sub
cmc
enter
xorl
push
xor
sbb
xchg
loop
icebp
mov
scas
pop
lahf
ss
or
adc
shrl
fimuls
mov
imul
inc
sub
push
pushf
pop
loopne
movsl
fwait
aaa
pop
iret
xlat
leave
icebp
sar
dec
lods
fdivrl
popf
insb
out
adc
int3
add
and
in
xor
lea
bound
push
pop
xchg
xchg
lcall
test
inc
push
rol
jno
xchg
aaa
mov
sti
lret
je
jo
testl
inc
fnstsw
es
notb
loope
addr16
cmc
sbb
add
mov
inc
cmc
jl
pop
pop
and
and
add
inc
push
cwtl
fs
rorl
adc
out
adc
in
sbbl
adc
cwtl
inc
push
ss
jge
cmp
popa
add
movsl
pop
mov
sub
add
pop
jae
sub
imulb
push
jg
mov
cli
sub
out
out
repnz
adc
pusha
inc
xlat
sbb
ds
sti
shrl
inc
lcall
add
mov
mov
mov
mov
in
sbb
adc
repz
pop
sti
ret
in
rcrl
cmc
mov
imul
cmp
push
push
in
adc
inc
fs
push
loop
and
pop
adc
jle
fmuls
or
pop
idivb
or
lds
xor
loopne
cli
scas
push
push
or
movsl
add
or
fnstenv
shl
mov
fnsave
push
xor
sbb
push
rol
fs
cwtl
sub
add
push
in
clc
stos
sbb
repz
rorl
and
pop
rcl
addb
add
pusha
insl
push
cwtl
xlat
xchg
call
loop
add
mov
icebp
fs
pop
push
out
mov
pop
or
in
idivb
jae
cmp
fadds
testb
mov
test
cmp
adc
fs
add
fiadds
inc
daa
lods
or
xor
divb
cmp
adc
sbb
and
lods
push
lea
in
imul
mov
ficompl
nop
adc
add
or
mov
mov
mov
pusha
jmp
out
sahf
rolb
xor
addb
inc
fadd
fs
push
inc
test
lret
testb
push
ss
lcall
aaa
xor
pop
jns
add
xlat
or
in
and
test
jecxz
out
and
into
mov
jns
push
dec
fadds
mov
pop
inc
jb
adc
out
or
jns
pop
dec
popf
sbb
popf
jmp
cmp
insl
dec
fldenv
xchg
or
mov
push
sub
das
testb
mov
lret
add
pop
jg
and
jge
loope
or
dec
fst
je
or
pusha
mov
dec
icebp
sbb
inc
adc
mov
iret
cmp
sbbl
sbb
cmp
dec
into
mov
add
in
push
cmp
repnz
xchg
mov
sbb
sub
dec
add
push
out
imul
push
mov
popa
ljmp
mov
jne
dec
out
pop
insl
pop
mov
fidivrs
add
push
xor
sbb
push
sub
pop
sbbl
divb
mov
or
pop
add
aam
adcb
push
lds
fs
shll
cmp
add
fsts
adc
lcall
mov
xchg
and
in
inc
xchg
negb
leave
push
leave
add
add
push
mov
enter
jecxz
clc
mov
sbb
imul
sub
mov
test
and
std
adc
out
add
add
adc
out
xor
fistl
and
inc
sub
out
pop
mov
pop
jns
mov
sar
xor
lret
dec
fmulp
mov
xchg
add
dec
mov
outsl
testb
push
push
sbb
push
sti
cmp
adc
idivl
sbb
mov
repnz
mov
test
mov
adc
popa
cld
and
fisubl
out
jo
or
je
rolb
outsl
pop
xchg
out
or
cwtl
or
cmp
fnop
fs
fcompl
pop
sahf
push
inc
ja
idivl
jge
testl
aaa
aad
add
loopne
dec
mov
dec
or
insb
add
scas
mov
xlat
lret
dec
mov
sarb
add
ret
xchg
les
repz
sbb
imul
pop
movsb
cmp
sarl
push
cmp
aam
push
xchg
test
cmc
mov
jle
or
add
clc
adc
xor
or
rclb
pushf
and
test
test
xlat
cli
out
pop
jns
je
daa
mov
sbb
add
mov
add
ret
cmp
push
or
ljmp
jae
xchg
fs
xchg
xor
cld
mov
add
pop
mov
push
inc
std
std
fstpt
gs
loope
dec
add
mov
rol
xchg
push
lret
test
sub
ss
jbe
cmc
pop
ficompl
xchg
outsb
add
mov
inc
cmc
or
ret
mov
jecxz
iret
mov
sti
testb
mov
mov
jp,pn
and
roll
fdiv
je
frstor
insb
lcall
sub
js
add
arpl
add
dec
stos
icebp
scas
sahf
mov
out
daa
mov
mov
push
add
push
add
ss
lcall
xor
mov
hlt
repnz
add
ret
pop
in
scas
cli
jecxz
jne
lret
insl
test
test
push
push
push
pop
in
stc
cmpsb
xlat
push
push
fsub
ljmp
pop
shrb
aam
sahf
aad
loope
and
sti
or
sbb
fstl
out
pop
fmuls
shll
mov
xchg
add
pushf
mov
add
xchg
jp
idivb
or
sub
loope
adcb
icebp
mov
cli
out
xor
inc
add
hlt
aas
mulb
popf
jle
outsb
add
int
daa
imul
nop
jl
das
mov
movsl
insb
frstor
cmp
lea
jmp
scas
lods
inc
test
add
inc
sahf
and
out
lds
iret
icebp
lea
movsl
xor
adc
repnz
inc
call
dec
cld
orl
fsubl
adcb
jb
jbe
sbb
loope
imull
int
fdivl
out
sti
std
or
imul
push
pop
sub
mov
add
jbe
aaa
scas
adc
sub
or
fdivl
sbb
inc
out
gs
add
push
mov
add
add
mov
xor
loope
repnz
test
out
subb
pop
cmp
add
sbb
and
and
add
imul
xchg
cltd
mov
test
adc
test
cmp
push
lret
add
sub
add
outsb
xor
mov
lds
cmc
nop
int
das
jbe
lcall
push
sub
scas
jno
add
sub
jmp
enterw
int
std
pop
jb
pop
mov
push
inc
or
mov
lock
lods
dec
fidivrl
add
mov
adc
lahf
xor
cmc
push
ret
jno
jge
sub
sbb
mov
or
xor
addr16
dec
std
and
push
hlt
lock
jns
pop
addb
mov
dec
and
mov
pop
push
movsb
pushf
push
lock
lahf
add
std
push
xlat
in
mov
xor
mov
jge
fiadds
sub
ljmp
mov
add
in
add
je
popa
sti
popa
aas
dec
ret
sbbb
idiv
push
add
sbb
inc
testb
cmp
pushf
imul
cmpsl
test
notb
xchg
jmp
pop
add
incl
testl
test
in
push
test
paddusb
push
addb
add
dec
cmp
push
cmc
fwait
aas
add
push
jne
mov
jne
mov
les
adcb
push
mov
out
fstpt
or
adc
andb
xor
aad
pop
add
cmpsb
ret
inc
inc
stos
add
pushf
or
movsl
xor
cmp
and
sub
in
jp
push
mov
xor
jne
punpckhwd
aam
ds
xor
push
repz
call
imul
inc
out
jg
sti
loop
pusha
scas
mov
inc
jno
idiv
lret
cltd
daa
jg
fs
inc
cs
ror
dec
inc
or
jnp
xchg
xor
sub
jle
or
scas
ret
scas
inc
xor
push
out
and
or
repnz
ret
jbe
movsb
pop
add
cmp
test
xor
push
push
cmc
out
gs
sub
add
inc
popa
stos
data16
inc
testl
and
or
push
ret
movsb
adcl
xchg
add
push
sbb
push
xchg
lods
rcll
xchg
and
fs
data16
std
jmp
push
lcall
pop
mov
hlt
xor
lahf
or
lcall
fistpll
dec
loope
std
pop
or
inc
out
sub
and
add
push
addr16
cmp
out
pop
adc
jp
xchg
out
mov
lods
dec
adc
push
gs
scas
outsl
test
and
dec
add
icebp
inc
out
rcr
stc
fs
dec
adc
das
dec
insb
cld
dec
jecxz
cmc
aas
inc
aas
sub
outsl
sub
xor
orl
bound
test
imul
out
aas
test
mov
stc
mov
add
sti
fwait
add
jl
addb
arpl
dec
clc
inc
xor
outsl
sbb
repz
sbb
cmp
xlat
fs
es
jp
sbb
add
inc
stc
sub
inc
adc
notl
mov
cmp
pushf
inc
test
pop
lock
dec
adc
dec
and
js
lret
jb
pusha
pusha
mov
loope
mov
push
inc
inc
iret
aas
add
pop
fwait
mov
fiaddl
dec
xor
fs
jnp
insb
add
das
push
add
xor
in
jmp
popf
jno
arpl
xchg
sarb
xor
push
or
push
sbb
mov
cmp
bsr
jae
cmp
push
mov
rolb
sbb
push
cmp
int
int3
mov
add
pushw
fcompl
lea
push
pop
aam
jg
sbb
xor
push
popa
add
xlat
mov
dec
stc
inc
rolb
jecxz
data16
cmc
daa
mov
int
jmp
test
ss
test
mov
mov
fdivrp
ret
adc
and
test
inc
or
inc
roll
add
sub
sbb
out
adc
push
loope
mov
jp
jl
cmp
add
mov
cltd
mov
add
pop
mov
adc
sbbl
loope
testb
cmp
push
mov
cltd
jnp
xchg
aam
mov
js
adc
add
mov
mov
inc
out
push
push
push
stos
and
inc
sbb
adc
mov
cld
js
dec
and
lret
xor
push
inc
add
jo
sti
add
cmp
push
shll
jmp
fs
insl
addl
jge
sbb
daa
and
xor
imul
test
add
adc
add
or
cmc
out
pop
inc
les
push
jb
test
jl
nop
adc
add
or
fidivrs
adc
sub
ljmp
sub
sub
jmp
xchg
pop
ss
add
inc
push
cmp
sub
imulb
jmp
in
xor
lods
in
and
lret
shll
lret
xor
add
or
cmp
xor
scas
cmc
jp
mov
sti
push
add
ret
pusha
jo
scas
add
and
repz
fsub
jge
jb
adc
pop
data16
aad
dec
mov
lds
add
and
cli
mov
xor
dec
pop
rolb
mull
jl
mov
cli
adc
in
sahf
adc
out
icebp
mov
dec
sbb
cmp
sub
or
es
add
xlat
xchg
gs
lahf
mul
ds
jnp
rorb
add
std
add
sbb
jl
push
add
pop
inc
mov
ja
mov
shlb
lea
add
pop
iret
aad
mov
sahf
mov
or
push
add
iret
pop
cmp
adc
cmp
inc
js
enter
jecxz
adc
ret
leave
movsl
in
enter
jge
xchg
aam
scas
sbbb
mov
icebp
dec
sti
or
mov
mov
sbb
push
imul
add
cli
pop
out
xor
jne
mov
jp
push
xchg
dec
filds
sub
jo
sub
sahf
cltd
fs
and
push
push
loopne
pop
add
mov
aad
push
jne
je
inc
movsl
xchg
hlt
xchg
flds
adcb
inc
call
fs
add
add
lods
outsl
fmul
cmc
fsubrl
or
xor
shrb
shr
not
cmc
xor
data16
mov
es
adc
rolb
rorl
cltd
pop
add
sbb
sbb
cmc
stc
fnsave
nop
divb
pop
std
mov
pop
jp
inc
mov
fisttpll
mov
mov
mov
xchg
inc
mov
lcall
pusha
fildl
out
arpl
xor
fst
scas
fs
and
or
cmc
into
jp
hlt
adc
ret
gs
push
cmp
add
and
jnp
ret
adc
cmc
fimuls
js
out
adc
add
insl
jno
mov
push
xchg
in
xchg
fcmovb
mov
pop
pop
rcrl
inc
and
inc
pop
cmpl
lcall
shll
fs
xor
sub
inc
pusha
push
loope
push
mov
xchg
mov
shll
insb
jp
xor
in
ja
in
cltd
ja
ss
addr16
xchg
cli
adc
lea
xor
sub
jns
shll
out
xor
lea
aas
mov
imul
das
mov
ror
add
mov
and
jbe
fcmove
out
cmp
push
notb
cmc
out
icebp
mov
xchg
jae
adc
fists
loope
inc
inc
movsl
cwtl
mov
mov
rorb
add
das
jmp
or
adc
xchg
xor
inc
mov
mov
nop
scas
call
repz
pop
cmpsb
xlat
mov
inc
fldl
xlat
push
sbb
adc
add
xchg
add
movsb
repz
fs
or
adc
inc
lds
in
rcrl
cmp
and
shll
or
adc
scas
xchg
and
xor
sub
daa
jmp
pop
xchg
cli
daa
jbe
shlb
sar
sub
sbb
lret
cmp
sbb
inc
lds
clc
mov
sahf
fs
xchg
mov
pop
out
pop
sti
add
je
pop
mov
fs
push
or
xchg
dec
add
divb
stos
scas
pop
inc
push
stc
shlb
xchg
add
sar
jle
adc
mov
fs
pop
add
cltd
xor
adc
fs
cmpsb
cmp
test
andl
ret
mov
cmc
cmp
inc
flds
push
xchg
push
fcompl
mov
je
add
and
sti
sbb
push
in
adc
repz
pop
fimuls
jns
mov
add
jp
fnsave
shrl
sbbl
in
jae
jns
loop
push
aad
cmc
xor
cli
lods
or
add
mov
ljmp
iret
test
push
or
enter
and
icebp
push
mov
fidivs
mov
sub
inc
sub
pop
test
xlat
test
jns
scas
insb
lock
add
jmp
add
add
and
adcb
mov
adc
cmc
addb
testb
sbb
adc
push
sbb
movsb
xor
inc
pusha
inc
cmp
mov
cmc
mov
addr16
cmpsl
in
gs
mov
ss
cmp
dec
adc
lret
inc
shll
in
lods
js
add
mov
das
negb
mov
loop
cmpsl
and
scas
sbb
call
fsubs
or
add
rorl
out
negb
mov
out
mov
je
ret
jp
jbe
adc
cwtl
test
sub
loope
dec
or
dec
insl
and
add
stos
int3
push
testb
ljmp
out
cli
hlt
mov
inc
mulb
push
or
or
and
jge
push
loopne
scas
cwtl
icebp
divb
sub
push
mul
jp
daa
push
inc
sub
inc
cld
or
jbe
mov
inc
lret
or
pop
ljmp
xchg
arpl
sti
ret
clc
dec
lods
repz
add
ds
or
inc
pop
and
add
jne,pt
push
popf
push
push
movsb
mov
cmpsb
or
mov
inc
mov
in
sbb
in
notb
fcomps
or
pop
ret
jle
and
xchg
or
int3
fs
outsb
psubsb
hlt
push
cld
add
adc
clc
aad
leave
jno
cltd
loope
lahf
fisubrs
jp
nop
add
or
add
mov
inc
jecxz
add
mov
push
or
and
gs
and
icebp
mov
adc
fstl
subb
xor
sbb
das
push
loop
xor
sbb
add
pop
fs
mov
ret
sbb
mov
sbb
fs
lea
add
andb
dec
cmc
mov
add
push
movsb
mov
repnz
vpunpcklbw
or
push
stc
fistpll
push
adc
push
fisubrl
push
sarl
test
push
popl
or
sub
clc
mov
adc
hlt
pop
ss
inc
dec
jo
cmc
in
data16
ss
inc
ss
gs
fs
inc
movsb
xchg
sti
lock
push
out
pop
mov
sbb
lcall
adcl
add
pushf
xchg
test
push
push
gs
sbb
or
and
jmp
stc
nop
push
aad
je
add
push
inc
and
cli
mov
or
adc
out
incb
xor
xchg
cmc
push
pop
das
scas
and
add
test
rcr
imul
mov
shlb
mov
cmp
lcall
std
xor
dec
fdiv
push
imul
shll
adc
adc
cld
or
xor
mov
mov
and
rcll
push
les
in
xchg
jl
add
sahf
stc
pusha
add
sub
and
sbb
rcrb
nop
adc
push
and
ja
mov
and
scas
fs
adc
into
mov
mov
lods
not
popa
push
out
and
lods
cmp
add
popf
mov
cmpsb
into
pop
aas
dec
adc
jb
or
mov
add
push
sub
repz
or
sbb
push
cmp
movsl
mov
cmp
or
or
aaa
mov
cs
cmp
lret
adc
enter
adc
cmp
inc
mov
and
lock
dec
insl
clc
sbb
mov
add
shlb
popa
in
mov
lock
pop
adc
loopne
shll
cmc
clc
mov
cld
inc
or
lds
clc
nop
dec
cmpsl
and
cmc
lds
sti
nop
dec
inc
jno
xor
dec
mov
loop
sti
jbe
flds
push
add
int
sti
mov
sub
xchg
push
sti
insl
repz
add
mov
mov
loope
fs
inc
jecxz
dec
mov
or
cs
notl
inc
pushf
out
aaa
mov
cmc
fld
pop
sbb
or
shll
roll
lock
and
push
outsb
aad
inc
or
mov
xchg
jae
out
mov
test
sbb
mov
rcrl
sub
sti
xchg
bound
fidivl
clc
out
arpl
mov
add
push
pop
inc
repnz
testb
add
mov
adc
sub
das
loope
andl
add
cld
fnsave
push
test
xlat
adc
add
movsb
pop
sbb
add
pushf
in
add
xor
test
fucom
lds
jbe
jmp
scas
out
xor
jge
out
add
sub
pop
imulb
test
fsubs
dec
pop
rclb
rclb
mov
ds
out
xchg
and
lea
adc
add
mov
lea
in
adc
adc
mov
mov
pop
arpl
movsl
cld
xchg
sub
fildl
out
cmp
iret
pusha
loop
fldcw
icebp
mov
movsl
fs
inc
popa
push
and
inc
add
cltd
icebp
mov
call
loopne
cmpsb
push
aad
out
mov
push
test
or
test
mov
repz
nop
testb
out
inc
push
lds
add
stc
push
loopne
movsl
jl
mov
std
adc
mov
aad
movsl
mov
fstl
pushf
add
sub
xchg
mov
add
xchg
adc
mov
pop
incl
scas
sub
or
dec
or
adc
scas
cmp
push
addl
mov
add
jmp
mov
jbe
push
gs
mov
loope
data16
std
jae
jbe
fwait
adc
mov
or
addr16
push
ljmp
jno
xchg
outsl
mov
jg
and
pop
inc
push
adc
lea
adc
test
or
cmc
les
inc
fsubl
idiv
adc
push
add
and
or
out
inc
daa
outsl
dec
loop
cmc
push
aam
scas
push
or
adc
push
insl
adc
pop
mov
and
mov
mov
mov
mov
es
insl
std
jo
add
pop
iret
je
scas
dec
jmp
add
dec
jecxz
mov
test
shll
mov
push
cmp
dec
testl
sbb
scas
rcll
add
sub
dec
out
push
push
mov
xchg
es
lock
mov
cli
inc
cld
xchg
in
pop
int
popf
adc
cmp
sti
mov
cld
insl
push
cmpsb
mov
dec
bound
cli
cmp
push
pop
icebp
push
xchg
imul
inc
xorb
leave
gs
daa
jb
popa
add
roll
adc
test
push
mov
inc
dec
rolb
imul
andb
int
push
push
mov
enter
aas
mov
jbe
push
jle
pop
xor
sti
stc
dec
or
cli
xchg
push
pop
fld
cmp
xor
dec
sbb
adc
xorb
shll
and
mov
sbb
push
sti
xchg
jl
add
outsb
pusha
push
stc
or
mov
mov
insb
mov
out
add
icebp
rclb
jl
mov
add
add
cmp
shl
imul
adc
aaa
js
mov
test
cmp
ss
popf
in
push
data16
loope
and
les
lret
mov
sbb
movb
or
neg
jae
jb
imul
out
mov
cmp
sbb
movsl
add
xor
push
push
jmp
sbb
sub
push
pushf
push
sub
add
xchg
pusha
jg
and
inc
add
sbb
fs
add
adc
mov
pop
cli
sub
test
adc
push
addr16
pop
out
data16
neg
sbb
cmp
out
pop
loope
into
sbb
dec
push
push
xor
inc
cs
scas
pop
scas
in
xlat
jo
cmp
inc
scas
and
add
jle
push
fwait
mov
bound
sbb
cmp
ficoml
pop
mov
cltd
ja
inc
clc
pop
fs
loopne
lock
mov
mov
pop
lea
jmp
adc
sub
add
cmpsl
push
lock
xlat
dec
jle
test
into
mov
pop
outsl
cmpsb
push
int
xchg
fbld
inc
push
mov
ds
cltd
push
and
sub
xchg
fwait
out
jns
pop
mov
fs
orb
cld
rcll
insb
fs
xor
sub
adc
out
sub
mov
hlt
and
mov
pop
push
sub
mov
loopne
cmp
add
loopne
sub
sti
fidivrl
loop
adc
dec
adc
cwtl
test
push
idivb
popa
fiadds
add
jb
ss
push
mov
out
mov
sti
cmp
sub
enter
outsl
loopne
jne
es
hlt
mov
shrb
xchg
fisttps
add
sub
call
pop
push
mov
mov
movsl
into
idivl
out
sub
and
or
jne
mov
test
icebp
sbb
cmp
or
cli
adc
in
xor
xchg
inc
loope
or
and
test
cmp
neg
xor
jg
sub
mov
movsb
in
add
out
aad
dec
repnz
dec
fcomip
fildll
xchg
icebp
sbb
push
xor
std
jmp
fwait
pop
fbld
push
push
pop
fidivrs
fildll
adc
pop
jne
adc
ljmp
cli
lds
pop
jns
fiaddl
sub
mov
sub
cmc
in
mov
xlat
and
andb
mov
scas
jle
pop
pop
notb
cmp
out
mov
add
jl
jns
fs
cld
cmc
movsb
sbbb
addr16
adc
lds
push
sub
rcl
mull
dec
sbb
inc
addr16
scas
push
push
cltd
jle
adc
dec
xor
inc
stc
cmc
test
mov
dec
test
ljmp
add
inc
and
push
push
jo
es
into
popf
ja
push
daa
mov
bound
addl
pop
add
dec
sahf
push
inc
mov
mov
lret
pusha
cmp
push
mulb
inc
add
lretw
fisubrl
adc
rcrb
push
lret
cmp
stos
cmp
test
push
out
add
sbb
mov
dec
stc
fs
xor
enter
add
jmp
mov
xor
jge
daa
cmpsb
inc
ret
push
pusha
xor
outsl
inc
arpl
jg
cmc
lock
cmpsl
xchg
xchg
into
stos
loope
and
push
or
fs
jbe
adc
out
adc
out
sub
data16
add
ds
lahf
dec
fildl
sub
repnz
clc
xor
cli
int3
or
add
ljmp
flds
cmp
pop
fnsave
or
test
jbe
lock
push
sarb
push
out
ss
es
cmp
loop
cli
xlat
and
xor
pushf
insl
or
fs
mov
inc
add
imul
divb
add
add
mov
or
mov
pop
push
mov
in
push
sbb
push
mov
jle
mov
xor
cs
imul
shrl
cmc
out
mov
nop
mov
pop
cmp
cmp
or
jno
cmp
stos
inc
mov
jp
in
outsl
adc
push
or
sub
insb
mov
mov
adc
dec
fs
ds
pop
add
les
dec
adc
mov
shlb
xor
cld
loope
push
push
ljmp
add
lea
loopne
sub
push
or
dec
rcrb
cs
mov
pop
fsubrs
add
push
testb
or
add
push
cmp
rolb
mov
arpl
push
data16
or
or
or
rclb
cmp
push
push
les
ret
testb
or
test
lods
inc
inc
or
fs
mov
cmp
jnp
into
cmp
in
mov
jb
cmp
xchg
dec
hlt
or
mov
pop
testb
out
fimuls
xor
push
loope
push
jnp
pop
daa
clc
add
out
stc
outsl
outsb
mov
xor
inc
lds
xchg
addr16
clc
addb
pusha
sbb
sbb
imul
or
and
data16
pop
int3
loope
pop
lret
add
getsec
cltd
lods
test
insb
dec
add
pusha
cltd
les
lods
sbb
and
gs
xlat
dec
lock
fs
stc
insl
pop
cmp
xchg
cmp
call
jbe
in
hlt
in
and
push
xchg
enter
adc
jns
add
movsl
jo
sub
or
ljmp
rcl
mov
xor
outsl
adc
push
mov
inc
mov
cltd
cli
cli
lds
lea
testb
repz
pop
mov
clc
pop
jmp
jne
aad
test
cmp
movsb
mov
or
xchg
cmp
mov
pop
lods
arpl
imul
or
lods
out
sti
or
dec
mov
imul
dec
aaa
mov
xchg
imulb
pcmpeqd
int3
jle
clc
or
cmpsb
rep
or
jbe
mov
iret
xchg
ds
or
sbb
repnz
adc
lods
mov
lcall
rcl
sti
les
xor
push
outsl
repnz
dec
jmp
rsqrtps
add
or
and
outsl
cmp
push
push
add
cmc
pop
icebp
sti
mov
xor
dec
dec
fwait
notb
call
pop
movsl
pop
mov
push
jbe
mov
icebp
inc
mulb
addr16
cld
sbb
loopne
es
jnp
pop
addl
xor
push
lds
mov
and
aaa
add
daa
ret
jge
in
pop
add
in
adc
scas
add
out
stos
lods
mov
das
add
ret
jecxz
cmpsl
push
sbb
push
inc
add
add
push
sub
int
lahf
pop
mov
cmp
in
mov
repnz
sub
outsl
mov
jge
out
pusha
lds
loopne
lcall
fwait
add
or
jge
add
ja
mov
popa
pop
adc
or
adc
mov
out
jecxz
int
ljmp
dec
lods
movsb
divl
pop
lods
xchg
cmp
and
hlt
pop
subl
and
cmp
ror
mov
adc
add
call
push
cmp
cmc
or
xchg
stc
push
pop
add
inc
fidivs
sbb
sbb
pop
gs
in
jmp
test
popa
mov
cli
and
xchg
pop
mov
cs
pop
mulb
fistpl
aam
cmpb
add
cld
cmp
mov
roll
mov
loop
sbb
movsb
repnz
movsl
jb
ret
loopne
fldt
xchg
imul
pop
add
inc
decb
mov
mov
insb
sbb
or
scas
movsl
cmp
xor
lock
push
testl
jae
iret
add
cmc
jns
or
testl
test
ja
cwtl
cli
test
jns
mov
add
lds
adc
jle
cmpl
push
in
inc
push
adc
test
jecxz
dec
or
fbld
xchg
js
insb
add
enter
pop
icebp
jmp
xchg
mov
adcl
es
mov
and
cmpsb
js
jp
mov
test
or
push
inc
mov
sbb
pop
xor
aad
pop
jp
mov
jge
fists
add
xor
fs
sub
pop
out
jmp
enter
mov
or
cmp
xor
scas
or
or
int3
add
out
mov
out
aas
aam
jns
repz
data16
shll
insb
sti
jle
push
decl
sbb
testb
cmpsl
add
rorb
pop
out
add
xor
jmp
xchg
aas
xor
mov
adc
xor
push
test
cli
add
mov
cmp
jmp
add
mov
mov
xchg
sbb
add
dec
push
mov
and
std
inc
mov
push
add
or
insl
add
mov
std
mov
dec
jns
mov
add
cmp
sub
imul
push
add
cmc
lock
pop
shrl
es
add
gs
xorl
jge
mov
daa
add
sar
pop
enter
rclb
pusha
das
mov
pop
jbe
add
or
jnp
xchg
jp
sub
and
fidivs
jo
scas
ljmp
push
xor
mov
pop
cmc
pusha
scas
push
cmp
push
test
jae
in
negb
sarb
add
loopne
aad
add
icebp
xor
lods
fsubl
inc
or
xor
gs
mov
or
pop
sub
xor
stc
adc
xchg
sub
fisttpll
xchg
fs
mov
orl
push
out
sbb
xchg
loop
aaa
dec
xor
andl
sbb
mov
or
lods
xchg
or
xchg
int3
sti
jle
mov
sub
in
in
mov
mov
pop
iret
call
dec
inc
gs
mov
aad
lods
xchg
ds
notl
mov
mov
ja
xchg
movsb
add
shrl
mov
sbb
loopne
sar
push
xor
stc
mov
xor
xchg
scas
or
imul
mov
sub
inc
ljmp
pop
dec
movsb
aad
into
in
in
addr16
shlb
add
sub
push
fs
in
cli
add
loopne
push
lock
mov
mov
cmp
inc
fs
filds
pop
jns
pop
inc
fisubs
pop
mov
jnp
jmp
mov
add
clc
and
mov
push
mov
dec
add
add
pop
pop
xor
arpl
mov
inc
mov
add
cmp
pusha
orl
rcll
loope
call
push
inc
es
and
xor
or
mov
int
gs
idiv
stc
sub
add
cld
push
push
jge
aam
pmullw
and
ja
js
xchg
in
adc
push
push
punpcklbw
aas
push
stc
repz
mov
notb
or
pop
dec
dec
push
mov
or
int
movsl
cmp
sti
imul
xor
or
into
inc
das
jle
fmull
cld
add
or
cmovbe
sub
push
mov
out
jp
jnp
fdivr
cwtl
cwtl
adc
mov
sbb
aad
pop
sub
out
adc
pusha
divb
js
js
loope
pop
or
push
sahf
and
cmc
sbb
test
nop
aaa
xchg
clc
scas
loop
test
int
repnz
add
and
push
mov
and
imul
jecxz
jl
jo
push
add
add
jecxz
pop
testb
lds
testb
sub
mov
and
movsb
sbb
and
add
xor
testb
push
addb
xchg
push
or
sbb
pop
repz
jg
inc
cmc
inc
fbstp
lds
add
test
push
cmp
add
out
dec
inc
or
mov
sahf
mov
and
push
fucomp
adc
in
xchg
or
xchg
enter
aas
add
pop
pop
fmulp
mov
add
ret
and
xchg
call
adc
aas
add
scas
inc
popa
push
stos
add
add
mov
push
push
mov
adc
icebp
in
into
mov
add
or
cmp
bound
mov
jno
movsb
rolb
add
xchg
mov
dec
inc
das
sub
test
and
push
sahf
in
cmp
es
sub
mov
scas
inc
xor
dec
mov
add
xchg
cmp
gs
dec
sbb
jl
cmp
js
aad
cmp
pop
inc
in
insl
icebp
add
inc
and
clc
mov
adc
add
push
pop
jge
jnp
mov
cltd
imul
add
mov
mov
test
fistpll
add
and
add
fwait
aam
decl
and
dec
stc
xchg
sti
testb
mov
bound
in
or
dec
fisubl
out
sub
jmp
inc
fsts
mull
stos
cwtl
inc
lods
add
loope
pop
call
add
pop
lcall
stos
inc
mov
push
fs
repz
lcall
enter
mov
adc
push
in
cld
aad
dec
outsb
or
aas
xor
std
add
lods
daa
sbb
js
cmc
in
es
in
add
adc
push
lds
dec
or
insb
and
iret
adc
sub
xchg
mov
fdivs
mov
out
adc
xchg
add
jmp
loop
inc
mov
lods
and
push
cmp
rorl
mov
scas
add
push
outsb
mov
mov
sahf
mov
mov
add
push
cmc
hlt
insb
shr
jo
call
cli
mov
int3
dec
inc
jbe
dec
divb
aaa
in
pop
sub
or
pop
orl
add
in
inc
and
add
push
shlb
sti
jmp
and
rolb
mov
and
pop
fidivl
shlb
mov
adc
inc
jl
dec
mov
cmp
pop
rcll
sarl
sti
cli
arpl
xchg
jno
add
loopne
out
test
mov
iret
xor
std
mov
inc
cmp
mov
jmp
out
ffreep
test
add
insb
mov
vmovlps
push
aam
in
leave
add
in
test
or
rol
nop
adc
adc
sbb
mov
xor
cmp
ret
push
test
or
add
mov
lock
sti
cld
pop
or
xlat
adcb
aaa
adc
pop
jae
xor
mov
into
call
push
mov
push
or
xor
xchg
xchg
mov
or
xchg
push
cmc
sbb
std
mov
push
shlb
mov
movups
sti
incl
mov
movsl
fs
xchg
enter
out
imul
adc
pop
pop
adc
push
push
cmp
or
stc
jmp
xor
aad
out
shll
and
and
ds
push
inc
mov
fs
inc
call
add
sbb
cs
inc
in
inc
insb
aam
or
hlt
add
pop
inc
add
mov
add
ret
and
add
out
in
fs
jge
dec
push
or
movsl
ror
fmul
pop
xchg
pop
fs
or
add
es
rcll
jns
dec
adc
aas
jo
xor
pop
push
cmp
insb
dec
imulb
xor
cmpsb
fs
add
loope
test
mov
push
mov
fs
cmp
dec
aaa
push
add
xor
js
or
in
call
test
int3
mov
dec
cli
and
insb
hlt
cmp
jmp
rolb
dec
inc
divb
mov
push
add
and
dec
jb
xchg
and
push
xchg
add
std
movsb
ss
adc
mov
call
push
iret
cmpsb
repnz
push
mov
mov
les
testb
cmpsl
mov
cld
dec
add
fidivrs
cli
test
xchg
les
cs
jecxz
loopne
scas
fs
push
sbb
dec
inc
aas
frstor
and
out
add
in
dec
add
xor
pop
mov
xchg
adc
popf
shlb
push
and
add
repz
push
scas
inc
scas
mov
jg
aam
add
dec
popa
pop
sbb
movsb
lods
pop
lds
mov
add
sub
or
sbb
aad
push
xchg
add
xchg
sar
mov
stos
xchg
lods
fs
adc
sub
dec
pop
add
aaa
jecxz
xor
lea
aad
inc
add
sub
outsb
stc
cmp
push
jmp
pop
imul
adc
cltd
adc
lcall
push
add
push
xchg
gs
xlat
add
imul
int
pop
into
shlb
xchg
jno
test
add
iret
sub
lock
fdivr
jmp
cmp
push
sbb
pop
cli
fs
aam
xchg
push
inc
enter
pop
add
sahf
cmc
add
mov
cmp
xlat
or
bound
inc
and
adc
cmp
testb
pop
movsl
into
and
data16
test
mov
enter
gs
and
test
push
mov
add
int3
testb
adc
cmc
mov
ljmp
xchg
add
add
mov
push
mov
test
rolb
add
enter
mov
je
adc
sti
sub
lds
imul
das
push
push
adc
ret
add
loop,pn
mov
mov
add
mov
fcomps
pop
aam
popf
mov
adc
in
lahf
push
mov
and
sbb
add
dec
add
mov
mov
adc
je
mov
out
idivb
cmp
cmc
and
pushf
js
inc
pop
mov
or
addr16
icebp
xor
es
fs
or
pusha
mov
jecxz
cmc
icebp
pop
imul
outsl
jb
std
and
add
xchg
inc
in
xor
xchg
pushf
or
or
xadd
sub
lea
fildl
test
sbb
sbb
clc
sub
lods
filds
sarb
ja
iret
cld
xchg
push
mov
fsubs
push
sbb
test
arpl
or
in
test
dec
out
xor
ret
inc
daa
xchg
sti
int
jle
push
hlt
js
out
or
sbb
lods
add
jmp
or
lahf
inc
jbe
mov
dec
lahf
fisubrs
mov
cmp
iret
sub
addb
test
cmc
call
pop
add
or
insb
mov
jge
mov
and
cmc
add
add
arpl
lds
pop
sub
or
cmp
filds
adc
movsb
shl
js
add
test
lds
push
sbb
loop
faddl
dec
or
pop
outsb
jns
lahf
sub
sahf
fs
pop
movsb
and
cwtl
lret
push
or
adcl
cmp
adc
test
out
xchg
add
inc
stos
stc
pop
cmp
xchg
adc
hlt
repz
fisttps
pop
mov
rorl
test
jnp
sahf
aas
in
add
sub
imulb
out
imul
dec
dec
dec
outsb
xlat
lock
aaa
bswap
test
lret
cmp
push
arpl
ror
sub
inc
iret
xorb
adc
pop
sar
lds
inc
and
stos
lahf
add
outsb
filds
ljmp
push
jae
imul
mov
insl
dec
movsb
popa
sub
mov
xor
outsb
fwait
mov
arpl
inc
pop
into
xchg
or
pop
outsb
xchg
and
ds
sti
loopw
push
jecxz
mov
mov
in
inc
add
pop
iret
int
add
outsb
cli
add
movsl
rolb
faddl
in
aam
fcmove
aad
inc
add
leave
inc
pop
jno
and
testb
and
sbb
into
add
shll
lret
sbb
inc
mov
cwtl
ret
xchg
pop
mulb
push
push
cmc
out
inc
add
stos
shlb
sub
pop
pop
push
push
movsb
dec
add
daa
add
test
mov
sbb
sbb
scas
push
clc
and
sbb
push
push
lcall
cld
push
pop
dec
cli
sbb
push
into
add
dec
mov
mov
xor
xor
xorl
sub
jle
test
test
mov
das
fnstsw
sub
negb
pusha
shrb
adc
mov
xlat
int
lock
xchg
scas
std
or
or
or
cltd
or
hlt
ds
push
mov
xor
movsl
rcr
lret
add
fdivl
stos
sub
push
arpl
fisubrs
xor
bsr
fs
cli
pop
add
out
std
push
mov
add
mov
popa
es
out
mov
fildl
stos
push
push
ds
out
testl
and
sub
fs
or
cmc
pop
sahf
jne
add
mov
sahf
lods
mov
fs
add
popf
shll
xchg
mov
insl
dec
stc
xor
or
mov
pushw
and
jne
jne
xchg
popf
test
push
pop
mov
jecxz
sbb
fs
out
std
lret
in
or
pop
testl
sub
lea
add
push
xlat
mov
sbbl
fldcw
iret
jmp
mov
mov
cli
xchg
fnsave
neg
movsl
stc
addl
cld
add
push
mov
daa
adc
mov
test
cs
jp
movsb
xor
sub
mov
adc
push
loopne
sub
xor
xchg
cmp
push
and
popa
adc
push
jns
insl
add
sub
movsb
shr
aas
cs
das
cld
fistpll
in
and
outsl
mov
add
jmp
cmp
incb
popa
and
jecxz
xor
lds
ds
insb
cmp
sbb
ss
in
lods
push
xchg
cmp
icebp
mov
pop
push
push
sbb
mov
fs
dec
pop
pushf
mov
adc
imul
xchg
mov
add
shlb
mov
test
sub
dec
out
jp
and
sub
sub
xchg
push
mov
xchg
adc
push
xchg
std
inc
not
pop
inc
cmp
pop
adc
jns
adc
push
jle
inc
arpl
test
jge
inc
or
sbb
xchg
repz
in
sub
push
dec
clc
push
dec
repnz
fs
cmp
jmp
mov
sub
leave
aad
imul
test
sub
sub
mov
fs
rclb
out
add
add
iret
stc
xchg
testb
int
xor
push
in
arpl
std
shrb
roll
pop
mov
sub
jae
jl
lret
scas
cmp
roll
adc
stc
pusha
push
or
jns
push
fildl
adc
inc
push
cmp
imul
add
lods
add
bound
push
jno
push
or
add
mov
push
lcall
mov
mov
or
cmp
mov
fcmovb
stc
outsb
xchg
iret
popa
aam
push
xorl
jmp
pop
knotb
mov
sub
add
push
cmp
popa
test
loopne
mov
stos
mov
mov
ret
out
pop
fisttpll
xchg
out
pop
sbb
jb,pn
add
lods
mov
out
lods
add
icebp
cmp
push
push
add
imul
or
add
mov
adc
jle
jle
cmc
cmp
sub
cmc
idivb
inc
negb
ljmp
mov
mov
jnp
push
mov
dec
pop
jecxz
cs
out
xor
fisttps
add
call
pop
xor
loope
out
cld
lods
test
std
jp
and
inc
push
sub
idiv
mov
xchg
inc
insl
lahf
or
mov
inc
call
mov
int
je
jge
sub
divb
jne
push
arpl
fisttpll
call
sbb
jmp
ljmp
sti
push
pop
loopne
pop
aas
xor
push
inc
test
xor
inc
xchg
dec
into
and
add
cmp
idiv
lahf
adc
mov
and
fldl
out
inc
sarb
leave
dec
je
push
pop
leave
fld
adc
xor
mov
push
and
test
xchg
mov
dec
add
xchg
popa
clc
dec
test
pop
test
scas
call
xlat
orl
shlb
adc
or
nop
add
loopne
inc
test
cmc
inc
add
adc
test
xchg
scas
aam
testb
inc
cmp
jmp
push
scas
lret
xor
xor
sub
push
mov
dec
push
clc
dec
sbb
hlt
mov
sbb
push
imul
inc
fnstenv
mov
addr16
repz
lods
dec
ss
inc
inc
testb
imul
push
cmc
xor
test
sub
clc
mov
push
and
add
shll
xchg
cmpsb
fs
mov
aam
push
roll
cwtl
inc
popa
add
xor
push
and
das
aad
outsb
scas
and
and
lret
add
mov
jp
mov
movsl
fcmovu
cmpsl
xor
stos
or
jbe
jp
retw
popa
imul
adc
sub
xchg
dec
cpuid
add
in
push
inc
pusha
xor
cmpsb
jg
rorl
jne
xor
pop
jno
jmp
adc
out
data16
pop
and
les
popa
pop
out
in
sbb
push
push
in
xor
repz
push
or
jp
mov
nop
sbb
sti
xlat
out
adc
lcall
test
repnz
sahf
ds
cmp
cmp
outsl
cmp
testb
mov
or
into
pop
inc
sbb
push
sbbl
es
mov
fwait
push
mov
inc
add
jo
sahf
data16
idivb
and
mov
add
pop
add
test
scas
lds
fucomp
iret
and
inc
hlt
pop
cld
push
jbe
and
lret
imul
xor
sbb
out
jle
cwtl
inc
stos
psubsb
push
add
and
fcoml
mov
cmp
leave
jb
loopne
arpl
int
fsts
out
sbb
movsl
adc
insb
inc
push
mov
push
xchg
and
fs
jle
lret
or
add
mov
repnz
dec
sbb
sbb
jge
pusha
jge
aad
sarb
std
in
mov
outsb
mov
pop
mov
push
mov
cli
mov
int3
inc
das
add
inc
push
cmc
dec
push
jmp
and
adc
cmc
sti
loop
int
leave
ss
jp
add
add
adc
leave
cli
push
push
repz
mul
mov
cs
add
loope
xchg
cld
push
mov
sub
roll
adc
and
loop
mov
xor
or
in
test
notb
loopne
add
adc
mov
or
mov
out
and
std
jecxz
fists
add
insb
std
jne,pn
sti
cli
out
insb
mov
shlb
add
or
icebp
in
inc
xor
mov
jne
xlat
xor
inc
sahf
loope
mov
es
jmp
push
pop
mov
stos
aad
cs
mov
or
cli
add
xor
and
hlt
scas
js
jbe
mov
dec
adc
arpl
pushl
in
add
add
popl
pop
jp
test
mov
sub
and
gs
sti
add
pop
int
lods
pop
out
cmc
push
dec
in
fucomp
loope
push
mov
adc
loop
cmc
shrb
mov
inc
enter
cmpsb
movsl
ljmp
jl
mov
out
jle
mov
push
mov
aas
imul
in
push
bound
incb
mov
xorb
cmp
dec
sbbl
add
mov
push
and
out
inc
aaa
push
addl
cs
btr
xchg
shrb
adc
lds
jmp
aam
add
loope
add
and
add
arpl
stc
mov
pop
or
fcomps
cmc
bound
push
xchg
sbb
popa
add
jp
inc
daa
push
pop
dec
mov
ds
or
js
cmp
or
dec
or
dec
cmp
dec
cmc
pop
les
sub
push
imul
jp
mov
mov
movhps
les
repz
sti
xor
sub
lcall
call
and
fs
xlat
push
std
inc
fwait
sub
push
add
movsb
or
mov
pop
jmp
movsb
daa
subb
add
aas
sub
dec
mov
jg
add
stos
xchg
aad
pop
adc
add
cmp
fists
fbld
aam
sub
fsub
iret
shl
pop
add
sbb
js
xor
pop
inc
aas
or
add
push
inc
pop
jnp
and
push
fs
cli
inc
xor
cltd
loopne
adc
hlt
pop
and
xchg
add
push
fmuls
push
icebp
clc
cmpsw
mov
mov
pushf
adc
dec
add
mov
int
testl
jmp
pusha
cmc
test
xor
scas
add
push
adc
lea
sub
adc
push
test
js
jns
in
jbe
stos
mov
scas
add
roll
scas
sub
insb
mov
mov
jl
divb
test
fiadds
pusha
jp
out
and
das
shlb
xchg
adc
xchg
xchg
imul
jnp
pop
fdiv
push
in
scas
inc
and
lods
xor
sarb
out
sbb
jbe
cmp
repz
stos
cmp
in
jnp
push
jae
cmp
jae
imul
mov
ss
cmp
cmp
or
or
fildll
iret
movsl
xchg
add
fisttpl
push
aam
add
je
dec
jmp
out
lock
fldl
subl
push
sub
rcll
add
movsb
rdtsc
enter
add
sahf
inc
pop
mov
fdivr
cmp
mov
add
add
or
mov
cmc
enter
lds
incl
imul
rorl
movl
mov
insl
xchg
dec
jle
sahf
sub
adc
and
inc
or
push
data16
push
movsb
popa
icebp
push
bound
push
shll
jnp
dec
sub
daa
fst
int
movsb
hlt
xchg
mov
movsb
push
inc
push
inc
call
fcmovbe
xor
xor
out
xchg
gs
inc
stos
add
movsb
or
xchg
push
and
shll
sbb
hlt
push
aad
shlb
ss
mov
xlat
add
mov
sti
mov
xchg
arpl
add
lret
or
imul
out
xchg
or
mov
stos
sahf
shr
fldl2t
cli
fcomi
sbb
add
icebp
faddp
sahf
int3
cmpsl
push
add
mov
inc
pop
jno
aaa
out
push
imul
add
jo
fcoml
fs
jle
jmp
sub
cmpsl
cmpsl
push
add
sub
pop
stos
push
pop
mov
jnp
push
inc
jbe
popf
int
cmp
xchg
mov
fdivr
cmp
jge
mov
pop
inc
mov
mov
cld
out
push
arpl
shrb
popf
negl
pop
ljmp
test
out
push
pop
aas
pop
xor
push
lahf
or
add
push
loop
lods
inc
sbb
icebp
add
inc
adcb
addr16
xor
push
or
inc
jge
and
hlt
xor
cmp
push
lret
in
rol
les
fs
cmp
adc
mov
mov
or
cmp
add
incl
xor
pop
jmp
mov
jmp
fldl
aad
out
jnp
dec
add
dec
clc
gs
push
sti
xchg
out
popa
or
test
and
add
push
mov
push
jle
stos
sbb
popf
loope
add
loopne
mov
or
pop
adc
mov
fmuls
jl
xchg
cmc
cwtl
callw
aas
cmp
mov
cmpsb
mov
shll
imulb
cmp
adc
mov
bndstx
xchg
idiv
adc
cmp
inc
mov
fstps
gs
in
sub
bound
xchg
hlt
cmc
int3
nop
shl
and
jbe
mov
imulb
je
mov
int
xor
div
or
fs
fmul
add
sub
xor
mov
sbb
add
inc
out
pop
ds
stc
gs
int3
std
mov
dec
dec
push
or
mov
das
js
cmp
jge
fs
push
or
add
lock
sub
idiv
pop
mov
push
popa
rcrb
cli
adc
or
ffreep
fs
mov
add
push
fucomp
imul
push
aas
ds
iret
das
mov
push
add
out
pop
mov
scas
jecxz
or
inc
icebp
push
aad
fstps
fdivl
je
fs
dec
xor
adc
imul
xor
or
fs
fxch
mov
js
mwaitx
jo
inc
pop
es
lret
inc
mov
cltd
push
push
outsb
adc
or
cltd
mov
stc
cmc
add
xor
sahf
adc
dec
jb
mov
cmp
mov
mov
outsb
cld
js
sarl
and
xlat
movsl
or
xor
push
ja
add
mov
mov
pop
add
add
or
jb
out
jmp
movsl
repnz
sbb
inc
jo
ss
cmp
xchg
mov
pop
xorl
arpl
cmp
push
add
sub
fimull
outsl
divb
push
push
and
add
repz
adc
ss
cmc
lret
inc
push
sti
xchg
negb
scas
in
mov
mov
push
shr
test
mov
aad
cmc
insl
xchg
popa
xchg
mov
in
jbe
adc
push
dec
hlt
nop
movsl
and
push
cmp
clc
xchg
das
mov
out
pop
adc
lods
aam
add
sarl
jle
mov
testb
bound
adc
adc
sbb
js
push
inc
bnd
std
loop
das
stc
sahf
mov
xchg
outsl
sbb
inc
mov
and
rolb
dec
popf
jge
inc
pop
inc
lret
loope
dec
or
gs
mov
imul
rorl
adc
adc
sub
jb,pn
icebp
inc
xchg
fs
fs
aad
mov
add
negb
sbb
inc
push
data16
ret
out
mov
stc
add
xor
imul
push
sub
and
daa
les
push
rcrb
jg
push
scas
pop
fildl
add
add
hlt
push
mov
push
roll
sub
leave
xor
jb
mov
into
scas
jmp
negb
jmp
mov
inc
and
out
push
test
jmp
pop
add
cld
aam
jae
sbb
mov
xchg
add
push
ljmp
add
dec
sub
int
test
cmp
stc
test
push
ja
fs
data16
mov
inc
jp
pop
nop
in
aas
xchg
fcomps
xchg
pop
cld
addr16
aaa
pop
add
jo
lret
sahf
add
cmc
inc
adc
fldcw
inc
adc
inc
pusha
sbb
outsb
aam
cli
iret
jge
mov
shll
lock
push
movsl
adc
cmpsb
pop
scas
or
lret
xchg
cmc
pop
push
inc
pop
push
imul
mov
popa
xlat
mov
aam
gs
jecxz
daa
inc
lea
pop
pop
imulb
pop
test
jle
push
mov
shrb
not
dec
movsl
mov
push
and
repz
mov
jg
fisttps
jl
out
rorb
or
stc
sti
cmp
jecxz
adc
test
pop
cmc
xchg
rcl
hlt
adc
xchg
dec
push
push
pop
bound
mov
gs
je
stc
icebp
mov
idivl
add
movq
in
and
mov
test
imul
je
jg
adc
lock
rcll
add
sbb
add
sti
dec
out
xchg
sahf
add
shl
insb
mov
xchg
sub
jecxz
adc
rcrl
popa
add
loopne,pt
push
outsb
sahf
mov
add
ds
mulb
mov
add
jo
pop
jb
add
adc
jne
pop
icebp
cmc
lret
adc
mov
add
or
shl
cmp
or
sub
push
ret
loope
fcompl
dec
loope
imul
lcall
out
inc
mov
or
in
leave
sub
sub
push
cmc
sub
mov
lods
add
fisttpl
xlat
aas
jmp
xorb
out
sbb
call
bnd
lods
add
adc
pop
mulb
mov
mov
or
add
shll
test
out
mov
add
mov
dec
data16
popa
dec
push
add
jge
test
into
mov
inc
arpl
xor
mov
icebp
into
add
inc
mov
push
xor
xchg
fidivrs
or
xchg
lcall
dec
push
test
repz
hlt
das
arpl
adc
es
es
mov
cli
movsl
sbb
lock
inc
lock
sar
mov
je
loopne
mov
sbb
cmpsb
inc
subb
add
shlb
or
dec
in
ljmp
lods
testb
insb
imul
xchg
sbb
xchg
jne
jns
or
inc
jb
inc
xor
es
test
jle
shr
inc
fadds
and
sbb
data16
sbbb
pop
xchg
stos
es
aaa
xor
in
imul
pop
lods
add
sbb
add
daa
sbb
xchg
icebp
push
xchg
ja
movsb
add
lret
jmp
mov
cmp
add
push
fprem1
adc
jg
jp
cmp
scas
in
jbe
add
scas
cmp
into
ret
aad
sub
adc
xchg
pop
testb
psllw
loopne
lea
fwait
ds
pop
add
xor
xchg
xlat
cmc
stc
int3
pop
push
inc
dec
push
mov
xor
pop
push
call
fldcw
call
in
out
add
xchg
scas
int
sub
xchg
cwtl
pop
mov
adc
sub
push
stos
adc
xchg
or
imul
adc
sub
mov
inc
lds
loop
mov
mov
mov
mov
adc
fs
and
int3
les
pop
add
aad
mov
pushf
popf
fs
xor
test
xchg
in
lods
jbe
push
ds
popa
popf
xor
daa
xchg
out
pop
push
fadds
scas
cmc
jge
cs
fs
cmp
rolb
pop
out
mov
insb
mov
mov
jmp
add
pop
xchg
lret
js
cmc
cli
pusha
sub
fwait
add
jmp
cli
push
lret
mov
mov
sti
popa
movsl
or
ret
out
mov
or
fwait
clc
icebp
fs
sub
or
pop
and
out
add
out
xchg
push
insl
aad
jecxz
lock
cmovl
cli
pop
adc
add
mov
fucomi
sub
aas
test
xchg
and
cs
pop
fmull
cmp
fdivl
add
xchg
test
adc
movsl
cwtl
add
lods
jmp
call
push
pop
pop
mov
movsb
repnz
test
lds
imul
or
xchg
push
cmp
aas
pop
mov
idivb
push
pushf
and
andl
lret
mov
scas
in
stc
sub
insb
arpl
in
xchg
out
add
jecxz
mov
fs
out
das
ss
loopne
xchg
shll
mov
jo
lea
push
mov
jns
add
adc
push
rclb
inc
add
jecxz
jno
cmp
push
testb
or
je
lock
sbb
pop
sub
push
outsl
rolb
jle
add
jg
imul
push
mov
sub
sahf
dec
fs
adc
adc
out
add
sbb
cmc
jge
pop
insl
xchg
sti
test
add
or
das
or
popf
shll
mov
and
sti
cli
xor
adc
jl
lods
not
testl
call
insl
fildll
fs
push
jnp
push
das
push
add
xchg
xchg
loop
adc
neg
mov
add
mov
add
push
push
and
xchg
add
dec
add
jge
add
lret
out
setnp
lea
add
cmc
out
mov
sti
test
xorb
cmp
adc
fdivrs
add
add
mov
pushf
xor
xchg
inc
in
push
xchg
cld
call
pop
add
mov
aam
mov
sti
mov
sbb
cmc
aad
inc
jmp
outsl
data16
pop
xor
movsl
mov
dec
inc
je
insl
cli
add
mov
shrl
fs
xor
push
and
pop
mov
sahf
aam
faddl
mov
cmc
cli
lods
mov
dec
dec
push
mov
cmp
adc
lds
adc
mov
out
lds
sti
jge
lahf
int
stos
sub
divb
or
push
xor
idiv
cld
cld
in
outsb
push
cli
add
jge
push
enter
push
cmpsb
mov
inc
jl
test
inc
call
xor
testb
jae
add
inc
mov
push
cmpsb
es
xchg
jmp
add
xchg
jo
popf
pop
sbb
push
data16
jmp
inc
jl
add
cmp
hlt
aas
dec
mov
imul
enter
add
sbb
cld
ljmp
xchg
mull
cmp
sbb
pop
sub
std
mov
mov
les
inc
add
cmp
mov
xor
mov
hlt
test
or
pop
imulb
xor
in
push
add
bound
sub
lds
inc
jns
inc
outsb
sti
cmc
insb
inc
or
pop
int
xchg
pop
sub
hlt
sub
inc
push
jp
push
jae
inc
add
jb
out
mov
dec
in
inc
add
or
in
fprem
popf
and
inc
in
push
std
add
mov
mov
cmpsb
pop
mov
mov
push
imul
in
mov
lret
es
lods
xchg
or
out
mov
and
mov
sti
add
or
popf
add
lods
mov
sbb
push
arpl
hlt
stc
or
fs
ds
gs
int
xor
insl
push
add
or
dec
mov
push
ds
and
inc
insb
or
sbb
and
inc
ret
xchg
incb
out
loope
cmpsb
or
lret
add
mov
loope
inc
and
add
fisubrs
pop
push
pop
inc
int
jbe
shl
cli
out
push
neg
aam
push
or
add
cmp
incl
sub
imul
or
jbe
jecxz
test
adc
push
mov
in
stos
out
xchg
add
jnp
lcall
mov
jno
aas
int3
loopne
or
inc
ds
fwait
es
and
sbb
pop
mov
lods
jl
loope
jbe
xor
mov
jmp
fs
sub
xchg
cmpsl
int3
mov
lret
in
bound
dec
shll
or
dec
cmpsb
cmp
push
imul
roll
cmpsl
dec
pop
add
out
jecxz
aas
or
popa
sarl
fldcw
sub
movsb
inc
mov
jnp
cld
and
mov
test
jle
add
movsb
cmp
ret
fs
aam
add
and
adc
sbb
jecxz
nop
pop
scas
or
stos
add
movsl
insl
fs
int3
mov
cwtl
inc
mov
fwait
cmc
aam
popa
push
cmpl
mov
cmpsl
push
fsts
cli
cld
sbb
and
mov
xchg
mov
ljmp
sub
jbe
xchg
repnz
adc
pop
daa
or
scas
cmc
in
cwtl
mov
dec
add
xchg
add
pop
adc
lret
aaa
scas
or
cmp
sub
jp
call
adc
aas
imul
mov
dec
or
mov
and
lcall
add
inc
fwait
test
push
test
ret
cmpl
mov
mov
adcl
push
cmc
jb
js
testb
mov
cwtl
pop
icebp
add
fsubl
inc
and
and
cmp
push
sub
add
adcl
daa
mov
push
sub
int
fstl
imulb
and
add
xchg
cli
mov
jge
jne
push
imulb
adc
inc
cmc
mov
mov
add
xor
mov
gs
test
shr
adc
mov
push
add
push
sub
fiadds
lret
ret
cmc
jno
push
lods
push
inc
and
jp
in
add
mov
mov
pop
int
inc
loop
cmc
lods
push
incl
sbb
inc
loope
dec
xor
jbe
inc
jg
jne
inc
mov
pop
ja
cmp
mov
mov
push
cmp
xor
es
mov
mul
jecxz
and
cmpsl
inc
insb
scas
js
dec
mov
or
xor
pop
sub
inc
repnz
pop
gs
fs
and
and
sbb
pusha
push
in
xchg
ss
mov
das
jb
lret
out
jmp
std
dec
mov
cld
out
push
jns
pop
lock
and
je
sbb
inc
dec
mov
and
out
add
and
testb
add
push
and
add
dec
xchg
lds
loope
inc
add
inc
fisubl
hlt
rolb
cmp
popf
in
lret
or
rorl
sbb
xor
push
sarl
call
loop
xchg
mov
add
fs
push
mov
jne
daa
in
shlb
roll
or
pop
xor
adc
sub
stc
xchg
cli
pop
mov
arpl
mov
jmp
test
jmp
mov
daa
cld
test
push
or
add
add
lret
xor
test
mov
jp
mov
pop
cmpl
mov
movsl
and
adc
lret
sarl
insl
stos
pop
sub
jmp
jge
sbb
mov
add
xor
imul
lds
pop
push
aam
jle
xchg
adc
add
pop
xchg
idivb
ljmp
add
mov
scas
adc
push
add
bound
lds
add
aad
fstp
hlt
mov
inc
out
stc
mov
je
pop
xor
add
enter
jo
inc
add
idivb
not
jmp
adc
and
inc
push
pop
inc
fisubs
cmp
mov
add
adc
cmp
or
cmp
add
std
out
fs
fsub
xor
leave
sbb
clc
out
jb
xor
push
push
fnsave
das
cli
sub
push
push
xor
icebp
andl
and
in
push
js
popa
mov
pop
mov
cli
push
leave
mov
mov
adc
xlat
test
pusha
int
push
pop
out
inc
out
add
enter
arpl
inc
mov
dec
xorl
add
outsl
insl
repz
inc
adc
repz
repz
std
filds
outsl
loope
cmp
in
rclb
inc
cmp
popf
sub
and
js
cmpsl
jb
ljmp
leave
cmc
jg
xor
jbe
add
sub
notl
enter
mov
enter
jg
sbb
nop
pop
add
mov
inc
sti
add
je
xchg
mov
leave
cmpsb
enter
movsl
add
aaa
sbb
and
push
sub
push
push
out
lock
jle,pt
aas
imulb
pushf
xchg
push
mov
fnstsw
or
negb
add
inc
xor
ficoml
cs
sahf
mov
lret
mov
add
sbb
stos
xor
pop
std
mov
push
ds
mov
push
mov
push
ss
add
int
andl
lock
dec
cmp
idivb
mov
push
movsl
cltd
mov
in
fimull
jp
imul
mov
or
jbe
loopne
sarb
inc
notl
lock
out
arpl
or
or
sub
clc
in
stc
pop
and
cmp
shl
push
test
clc
fldenv
and
and
add
push
dec
pop
cmp
lds
adc
cltd
jp
arpl
insb
xchg
in
ja
xchg
xor
dec
add
sub
insb
xchg
jbe
jecxz
push
jns
pop
idiv
and
sbb
mov
mov
or
nop
test
imulb
add
or
sbb
inc
and
jmp
mov
aas
xor
push
loopne
insb
shl
std
nop
jns
add
imul
pop
call
ret
cmp
jg
xchg
jbe
arpl
enter
fcoms
mov
lahf
sbb
sbb
cmc
sbb
jg
shll
lds
pop
push
test
dec
add
daa
sub
popa
addl
push
xchg
cltd
ds
in
jecxz
sbb
stos
std
dec
inc
data16
jno
and
dec
xor
dec
add
pop
insl
push
mov
mov
xchg
das
adc
push
fs
sti
jmp
aam
rcrl
daa
testb
inc
stos
add
idivb
xor
pop
lock
test
aaa
push
jle
mov
adc
pop
and
mov
fs
movsb
repnz
jmp
cmc
cmc
inc
adc
nop
add
insb
loop
mov
jge
fdivrl
push
push
dec
ds
cwtl
jecxz
jmp
or
fldl
in
sbb
es
push
xchg
mov
in
jg
in
jnp
jg
aad
push
sub
cld
mov
movsb
cmc
mov
in
jno
add
jb
mov
or
cmc
or
mov
mov
data16
xor
inc
hlt
cli
dec
add
push
xor
stc
fiaddl
aaa
xchg
xchg
sti
into
test
xchg
das
adc
incl
or
dec
fists
loope
imulb
subb
mov
push
arpl
call
inc
fs
mov
pop
pop
pop
cs
clc
and
adc
cmp
scas
arpl
ljmp
mov
pop
rcrb
xchg
and
fs
roll
fs
fisubrs
mov
jmp
add
xlat
push
in
cmp
int3
leave
add
mov
and
add
scas
aam
ljmp
jg
inc
cmpxchg
xchg
mov
roll
adc
ret
push
outsl
mov
and
ljmp
xor
addr16
cmp
negb
insb
xor
pop
imul
pop
mov
ret
and
test
sub
addl
add
sub
push
xchg
in
idiv
push
test
das
cmp
cmp
inc
pop
cmp
jbe
cmc
imul
sbb
cmp
mulb
add
inc
imul
inc
lret
add
pop
jg
out
stc
leave
frstor
fcmovne
andl
dec
imul
sbb
pop
lock
imul
cld
cmp
cmc
loopne
aam
insl
cmp
flds
push
cmc
fs
cmc
ret
mov
jl
xchg
decb
add
mov
ljmp
ret
sub
call
aam
push
pop
frstor
push
cmp
add
fstps
push
and
push
aam
pop
push
push
pop
pop
in
inc
ljmp
lods
sub
notl
das
inc
xchg
cwtl
add
mov
std
pop
pop
imull
or
sub
orl
add
pop
adc
cld
jo
or
lcall
mov
pcmpgtb
pop
cwtl
cmp
mov
or
loop
cmp
pusha
mov
and
in
es
and
shll
loop
sbb
push
inc
dec
fsubl
push
cmp
std
cmc
jge
mov
in
cmc
loopne
pop
aas
nop
sub
cmc
cmc
movsl
lock
out
pusha
enter
xor
jae
mov
xchg
pop
into
sti
outsl
and
dec
add
adc
in
xor
cs
cmc
leave
inc
test
adc
xor
imul
xchg
bound
and
int
mov
std
int3
stos
cs
gs
sbb
sbb
pop
movsl
jle
div
sub
fiadds
jg
jbe
adc
add
push
out
mov
js
pop
insb
sbb
lock
inc
dec
int3
cmc
jo
sub
fbld
lds
add
cmp
xchg
sahf
bound
mov
adc
fadds
int
call
push
add
xor
bound
sub
popa
mov
push
cmp
es
out
loop
cmpsb
pop
notb
inc
dec
add
filds
insl
iret
fs
cs
dec
inc
imul
xchg
and
pop
scas
adc
loope
pusha
push
popa
push
mov
sar
add
orl
adc
in
loopne
add
js
dec
cmp
mov
xchg
sti
xchg
xor
xchg
shr
into
int
cmpsl
dec
cmpb
fs
hlt
scas
sub
pop
aas
outsl
jnp
or
clc
cmc
mov
jmp
xchg
rcl
jne
aam
shll
leave
aas
test
cmp
cmpl
lret
sub
jp
orb
arpl
call
addb
mov
add
xor
and
pop
xchg
out
ret
enter
and
out
fcmovnb
popa
jmp
loop
pop
mov
push
adc
sbb
movb
dec
or
cmpb
cltd
aam
jns
push
pop
mov
xor
cmp
cmp
bound
hlt
loopne
cli
xor
pop
fsubs
cmp
notb
and
cmpsb
mulb
pop
mov
aad
idivl
loopne
arpl
sbb
lds
sbb
pop
sbb
and
and
push
ljmp
adc
push
ret
sbb
aam
insb
aam
pop
cmp
arpl
xchg
pop
and
lock
sub
push
push
mov
sub
out
stos
adcl
fists
ds
add
sub
ja
mov
insl
cmp
sbb
mov
loop
shll
arpl
push
pop
push
adc
push
xor
andl
into
lcall
jg
xor
push
int3
cmp
cmp
add
or
int
mov
cld
add
lock
mov
jmp
mov
sbb
jbe
rclb
mov
jecxz
adc
mov
jg
and
and
dec
mov
rcr
mov
inc
mov
and
xor
mov
call
add
dec
pop
add
add
push
std
out
and
inc
cmp
push
cmp
inc
ret
clc
dec
inc
sbb
popf
pop
xor
test
hlt
fs
push
sbb
and
add
xor
jge
int3
fs
hlt
pop
scas
xor
xchg
cld
pop
fmuls
sbb
jl
ret
and
mov
push
sub
popf
sbb
aad
xchg
push
jge
inc
out
rsqrtps
cmp
mov
xchg
cmp
jne
data16
pop
pop
notb
clc
outsb
divl
movsb
jle
sub
test
and
ret
add
sub
mov
into
loopne
aad
adc
aaa
xchg
mov
dec
rep
enter
xor
xchg
cmp
and
incl
mov
jbe
int
nop
fs
adcb
push
fidivl
shl
sbb
iret
mov
and
cmpsb
dec
fdivl
out
gs
jecxz
xor
std
sahf
add
mov
cmp
sub
cmp
mov
les
in
pushf
pop
idivb
test
push
vcvtsi2ss
pop
mov
adc
aaa
push
movnti
cwtl
add
xor
frstor
or
btr
add
insb
push
shl
insl
orl
cmp
pop
xchg
shlb
pop
out
ja
push
gs
add
rorb
push
fs
mov
mov
sbb
sub
das
mov
icebp
lcall
dec
iret
push
dec
push
fdivl
mov
jno
add
jecxz
iret
sub
imul
cld
add
add
je
sub
cmc
in
mov
ret
hlt
gs
jp
jne
cmpl
push
mov
sub
es
es
xchg
jp
push
loop
cltd
lcallw
mov
leave
and
or
push
out
sbb
pushf
sbb
cmp
insl
mov
add
test
push
push
mov
xchg
adc
adc
jp
std
fmull
stos
mov
out
push
ss
mov
cmc
push
pusha
data16
cltd
push
jg
adc
out
inc
outsb
jecxz
jle
ret
xchg
and
insl
ds
mov
mov
adc
jp
inc
stc
lods
arpl
add
movsl
mov
push
mov
outsb
test
fisttpl
popf
clc
aaa
jno
add
ja
stc
push
xor
cmc
faddl
dec
mov
add
cs
imul
xorb
lock
fcompl
scas
or
push
cmpsl
jbe
ret
push
fs
ret
sahf
clc
xor
inc
cmpb
pushf
adc
mov
movsl
jmp
push
scas
cmc
aad
mov
das
add
pusha
jle
test
stos
mov
add
call
pop
out
test
push
push
out
das
aam
jns
dec
and
mov
sbb
mov
cmp
sti
push
sbb
adc
cmp
push
cmpsb
adc
fldl
sub
aad
sbb
lock
lea
xchg
add
call
cmp
or
imul
sub
cmp
add
add
jo
int3
cmp
hlt
repnz
sbb
in
xchg
adc
and
fs
rcll
jnp
mov
add
mov
xor
pop
and
dec
cmc
xchg
out
gs
pusha
jno
dec
outsl
sub
or
jbe
loopne
or
fistps
pop
mov
inc
jbe
inc
dec
data16
push
lret
mov
xchg
jne
cmp
addb
out
nop
testb
mov
pop
cwtl
add
pop
or
outsb
sbb
or
mov
fmuls
xchg
adc
xchg
cmpl
ret
aas
sar
or
jo
addr16
pop
push
icebp
bnd
loopne
mov
sti
xchg
loop
movhps
test
add
enter
lahf
in
gs
ljmp
cmp
jl
xchg
add
pop
cmp
lahf
xor
lods
pop
fadd
sti
mov
jg
imul
pop
sbb
stc
jmp
repnz
cli
popf
jnp
cwtl
clc
shl
mov
loope
inc
sbb
and
inc
scas
add
mov
and
nop
push
pop
or
pop
adc
pop
mov
jp
xchg
xchg
and
add
and
cmp
in
or
or
inc
mov
pop
push
lods
add
testl
or
add
jo
es
inc
jle
jge
int3
cwtl
or
clc
jecxz
ret
call
mov
out
add
xchg
addl
push
scas
or
not
test
sub
lret
or
pushf
cmc
push
add
xlat
in
rorl
jno
adc
clc
mov
ja
test
add
or
fsubrs
inc
out
ljmp
pop
shll
add
test
imul
add
mov
mov
and
jmp
jne
pop
testb
jne
mov
or
sahf
mov
je
or
fs
push
into
inc
add
in
push
sub
or
fs
push
into
add
jbe
test
xor
hlt
add
and
push
pop
inc
push
cli
and
outsb
bound
ljmp
outsl
mov
movsb
mov
sti
jo
adc
and
fcom
mov
add
dec
and
notb
fs
fstl
adc
xor
add
adc
lea
pop
push
xchg
adc
push
add
xchg
or
and
xchg
popf
in
fisubrl
pop
addb
pop
shll
lds
push
fld
sub
arpl
cwtl
cs
mov
mov
xlat
aad
int
repnz
xchg
loopne
xchg
jne
inc
cmc
inc
cld
sub
ds
fwait
test
test
into
es
jns
xchg
mov
jnp
pop
xorb
pop
or
push
cmp
cmc
mov
insb
add
lea
jmp
mov
aas
sbb
popf
and
sbb
movsl
fisttpll
adc
fs
xchg
jmp
cld
into
mov
sbb
xchg
and
fstpt
fcom
addb
int3
jne
fstpl
or
add
addb
test
or
loope
fs
pop
adc
mull
pop
cmp
dec
sbb
pop
ficoms
xchg
push
iret
sahf
movsb
pop
nop
inc
adc
cmp
mov
or
arpl
std
push
mov
sub
jl
shll
enter
adc
roll
or
in
sub
out
inc
fstpl
jmp
jg
xchg
xor
cmp
mov
orl
or
lods
shlb
mov
mov
or
ret
jmp
cmc
mov
xchg
dec
nop
fnstsw
pop
xor
aad
lods
xor
adc
sbb
sub
pop
int
push
pop
ja
in
cmc
mov
fcmove
xor
dec
add
adc
test
sarl
data16
inc
add
test
stc
sbb
pop
repnz
rcrl
clc
repnz
add
dec
sbb
or
xchg
mov
inc
add
pop
push
or
popa
mov
pop
jno
mov
push
add
and
pop
repnz
mov
filds
fistps
cmp
or
aas
inc
out
pop
incl
sbb
testb
mov
and
xor
xchg
out
lods
std
jl
leave
fcomi
add
loopne
inc
shlb
and
scas
mov
ret
loope
es
testl
inc
out
test
imul
aaa
push
or
ret
add
mov
xchg
pop
lds
mov
dec
out
rcll
test
adc
jns
stos
cmp
xbegin
inc
lock
add
jns
ss
cli
jp
gs
mov
fsubs
dec
xchg
fldl2t
cmp
or
adc
mov
pushl
mov
pop
fs
nop
je
int
loopne
mov
movsl
mov
hlt
in
lock
ret
aam
push
adc
sarl
xlat
cmc
sub
fldl
jne
and
adc
cli
clc
and
xchg
popa
movsb
dec
clc
shl
cmc
cmc
sub
cmp
dec
scas
clc
repz
orb
testb
sub
je
std
adc
icebp
pop
scas
leave
imul
pop
lds
xchg
mov
mov
xor
adc
test
adc
xlat
std
testb
clc
or
sub
arpl
or
loope
add
sub
or
sbb
mov
push
fidivs
out
pop
inc
into
mov
flds
add
and
pop
dec
push
sbb
pusha
fmuls
js
xchg
mov
pusha
adc
adc
cmc
aaa
test
jl
mov
adc
jae
lcall
sbb
mov
and
movsb
cmp
das
inc
mull
jle
test
gs
push
in
repnz
pop
push
lods
lea
mov
cli
shll
notb
pushl
sub
lcall
out
lock
loopne
je
add
dec
mov
adc
enter
and
fcom
add
aad
popf
sub
inc
mov
stos
rorl
js
aaa
add
arpl
hlt
shll
push
mov
add
add
jns
sti
stc
cmc
das
loopne
shlb
mov
or
fbstp
fiaddl
mov
pop
clc
out
pop
or
add
mov
jns
imulb
and
fwait
int
aad
rclb
cld
loop
cmp
xchg
sub
mov
mov
ds
pop
out
and
mov
adc
jge
lods
enter
sub
ret
lahf
movsb
test
cmp
arpl
mov
in
cmc
lcall
jnp
out
out
insl
sbb
pop
mov
jns
frstor
xchg
xchg
lds
adc
je
add
les
add
mov
subl
sbb
add
fimull
xchg
mov
cmp
repnz
es
mov
adc
popa
sub
aad
inc
cmpsl
mov
fs
add
dec
rcr
jns
divb
int3
incl
data16
push
sub
repnz
test
test
push
imul
test
lret
sub
add
sub
loope
sbb
clc
in
and
xchg
pcmpgtb
push
cwtl
sub
inc
pop
pop
inc
inc
dec
aas
push
mov
or
dec
push
mov
decb
les
fisubs
data16
in
testb
aam
xchg
decl
adc
cmpsb
int
cmp
mov
cmpsb
sbb
fs
imul
shll
fstps
or
dec
das
testl
or
aam
xorl
popa
aam
int3
and
mov
push
jmp
add
iret
cmc
jl
mov
fsubs
loop
mul
lret
mulb
fnstcw
mov
lds
leave
shlb
add
sub
xor
xor
incb
cmc
dec
movsl
jl
aad
ja
add
repnz
cli
jmp
pop
jno
fs
cmp
fldl
sbb
movb
xchg
pop
add
lcall
aad
rcrl
pop
idivl
lcall
sub
push
push
jbe
loope
or
push
nop
sar
sub
jno
out
fs
xchg
int
imul
rorb
repnz
mov
cmc
fldcw
add
mov
adc
and
push
roll
scas
sub
test
push
imul
pop
inc
rcrb
in
movsl
mov
ss
out
outsb
add
add
scas
jmp
cmp
daa
adc
test
pop
insb
pop
mov
sub
inc
add
imul
fs
mov
xchg
fists
add
cs
adc
add
pop
scas
ljmp
iret
test
fcomps
push
fisubrl
or
jb
jnp
cmp
lods
insb
add
mov
push
popf
sbb
jno,pt
sti
fmuls
push
shl
mov
add
xor
jae
jmp
adc
sbb
jbe
inc
xlat
outsb
jo
les
jnp
test
dec
jbe
testb
jge
arpl
sub
dec
stc
xchg
xchg
xor
popf
sbb
inc
lcall
rcl
data16
mov
xchg
shlb
mov
add
adc
cmc
enter
push
cld
pop
fimull
dec
in
adc
insl
cmpsb
test
or
daa
repnz
les
push
and
cmp
xchg
lock
clc
push
ror
add
test
pop
inc
inc
test
sub
add
xor
mov
clc
and
data16
test
shl
imull
sub
shll
ss
mov
jb
cmp
pop
sbb
shlb
sbb
es
jle
daa
xor
js
pop
xchg
arpl
cmc
std
int3
in
dec
loope
into
loope
fcom
fadds
pop
inc
loop
ss
test
int
xor
call
cmp
pusha
sbb
test
xchg
mov
int
mov
pop
and
cmp
xchg
jbe
cmp
sbb
gs
sbb
pop
dec
pop
xor
jmp
add
pop
fs
inc
fiaddl
add
popa
add
imul
xlat
push
out
inc
cltd
cmp
iret
add
adc
ret
popa
loopne
scas
rolb
leave
insl
nopl
adc
stc
std
sub
pop
cmp
add
rol
fdivr
in
push
cld
sub
sbb
popa
adc
nop
mov
push
push
popa
lock
pop
mov
movsb
test
add
mov
push
jl
push
cmpsb
fs
scas
repz
add
fdiv
add
cmc
sar
cmc
push
lock
cld
ja
icebp
orps
repz
push
mov
inc
not
int
into
sbb
rcll
push
cld
xor
cmc
lods
movsb
push
inc
sbb
add
call
jmp
cmc
or
sbb
in
iret
push
sahf
das
xor
add
mov
sbb
pop
mov
fcmovb
push
jns
jno
stos
cmp
notb
inc
ret
aam
add
sub
dec
aad
out
stos
shll
neg
mov
shrl
incb
lds
mov
mov
mov
and
ja
inc
cmp
lahf
sbb
dec
mov
lock
push
jne
out
xchg
cmp
xchg
xchg
cmp
div
inc
aas
out
dec
sbb
nop
movsb
inc
mov
mov
test
jge
xchg
or
cmp
xor
jns
test
in
xor
add
jne
push
or
shl
mov
push
pop
jae
add
push
ror
xor
push
or
outsl
and
dec
gs
xor
and
je
push
jmp
into
add
call
sti
add
and
test
cli
lock
push
fidivs
in
mov
cmp
jge
adcb
dec
push
jo
inc
fisttps
add
stos
mov
add
inc
jne
mov
popa
addb
cmc
mov
sbb
leave
in
inc
pop
fsqrt
pop
dec
outsb
test
cwtl
test
mov
cmc
cli
jb
or
out
jmp
inc
ficoml
mov
hlt
xchg
push
loope
mov
and
idivl
push
xlat
clc
mov
dec
ja
mov
jns,pt
and
cmp
sar
ss
repz
dec
sub
movsb
addb
pop
push
and
push
pop
rorb
xor
push
test
add
popl
dec
or
pop
mov
out
cmp
into
sysenter
jl
and
or
fistpl
push
cwtl
add
fimull
cmp
arpl
aad
add
movb
hlt
mov
lcall
stos
push
sbb
cmp
cmpsb
push
imul
and
ds
sub
jno
adc
mov
pop
adc
sub
xchg
sbb
add
push
lds
pop
mov
in
jle
dec
xchg
sti
xchg
inc
iret
clc
lods
sub
xchg
pop
fyl2x
jae
sbb
sbb
jns
ss
jl
in
jb
add
leave
insl
out
sbb
loop
jl
jmp
and
movsb
aas
cwtl
cmpl
xchg
sbb
pop
or
inc
xor
cmpl
jnp
dec
testb
mov
std
push
pusha
pop
in
stos
iret
push
jne
mov
lods
jno
xchg
mov
push
jno
mov
add
cmc
out
lods
cmc
jb
mov
sub
sub
and
sbb
icebp
bound
sahf
mov
pop
push
fisttpl
pop
leave
lods
jb
mov
popa
iret
sub
add
sbb
cmc
js
sub
call
fisubrl
jge
xor
inc
std
cld
cmp
int
and
sub
enter
sahf
sub
push
sti
add
sub
or
loope
jg
aam
loope
arpl
fisubl
enter
sysret
imul
gs
and
adc
cltd
dec
pop
sbb
adc
fldl
dec
bound
clts
sbb
add
and
push
adc
push
add
nop
sub
xor
insb
iret
dec
mov
outsl
pusha
std
mov
jmp
or
negb
enter
imul
push
xor
push
or
in
push
dec
sti
scas
xchg
lods
shll
jge
cs
cld
or
js
ljmp
shl
dec
gs
fs
iret
je
fldenv
add
pop
mov
cli
xchg
hlt
add
pusha
movsl
sti
pop
clc
add
mov
scas
int
xor
ljmpw
mov
mov
or
sub
notl
add
inc
jns,pt
scas
enter
in
int3
dec
xor
idivb
movsb
inc
outsl
add
arpl
mov
test
loop
jns
insl
jb
lods
imul
mov
xchg
mov
add
xchg
cwtl
imul
popf
xorb
pusha
jns
paddusw
shl
in
in
loop
clc
stos
int3
jne
mov
push
or
ja
daa
divb
movsb
sub
inc
jge
stc
invd
mov
mov
rcrl
mov
inc
cmp
jnp
adc
xor
mov
push
jne
inc
jno
dec
das
or
pushl
add
aad
push
pop
cmp
sub
push
ljmp
clc
xor
xchg
test
cmp
imulb
addr16
mov
mov
add
sbb
cmp
repz
and
roll
add
xor
push
scas
outsl
in
add
addr16
or
movsl
gs
cmc
outsl
and
push
add
adc
imul
call
xorb
cwtl
push
js
push
xchg
daa
fimuls
fildl
sbb
mov
aam
pop
hlt
rorb
aas
stc
je
jns
out
shll
push
xor
mov
cmp
dec
inc
pusha
aad
mov
sti
inc
push
push
adc
test
push
jle
add
inc
in
push
pop
stos
out
cmc
lcall
addl
fs
add
xor
xchg
jge
jg
push
mov
pop
inc
push
and
xchg
adc
inc
sbb
lods
sbb
scas
pop
out
push
or
jmp
test
sub
sub
xchg
mov
pop
dec
add
mov
lock
nop
sahf
shr
insb
iret
inc
mulb
push
jmp
and
test
sahf
add
mov
xchg
add
call
or
movsb
out
ss
lock
add
jle
in
jl
notl
int3
add
push
sarl
cmp
lods
loope
in
outsl
nop
pop
xchg
or
cmp
dec
jmp
sbb
in
add
dec
push
or
shll
lock
or
sub
test
rolb
dec
add
xchg
cmc
pop
gs
mov
stos
inc
add
sbb
jl
pop
ss
shl
and
movsb
add
inc
mov
into
pushf
jecxz
ljmp
add
or
inc
xchg
xor
movsl
push
pop
out
mov
mulb
fisttpl
addl
xlat
dec
or
out
jg
sub
stos
push
or
loopne
pop
add
cmpsl
adc
jbe
pop
scas
aad
fcomps
push
push
sbb
or
ss
jne
adc
mov
adc
outsb
xlat
mov
push
ret
andl
in
pop
imulb
ja
or
mov
cmp
hlt
cli
add
mov
push
adcl
comiss
dec
sti
inc
adc
cli
adc
and
pusha
jb
orl
stos
jp
push
fiaddl
out
cmp
pusha
stos
ucomiss
xchg
mov
xor
mov
and
mov
filds
mov
push
notb
fiadds
cmp
sbb
bound
push
cld
cmc
test
jmp
sub
pushf
dec
add
inc
lret
lock
scas
add
push
rolb
push
fadd
mov
int3
sti
imul
pop
int
and
xchg
dec
dec
cli
nop
repz
call
lea
fwait
mov
aam
mov
shrl
cmp
aaa
pop
fs
fisttpl
sub
pop
mov
add
push
pop
repz
dec
or
pushl
dec
popf
adc
xchg
scas
sbb
mov
inc
or
imul
shrb
rclb
popa
rcrl
loopne
in
insl
dec
and
add
and
ss
pop
push
add
out
xchg
testl
hlt
pop
test
cmp
or
xchg
xchg
push
test
aad
cmp
movsb
sbb
lret
aaa
or
jge
xchg
and
iret
out
add
add
test
dec
add
and
mov
add
dec
push
mov
inc
mul
imulb
loopne
in
pusha
outsb
popa
mov
rcrb
imul
jle
hlt
add
stos
repz
sub
or
loope
icebp
add
mov
add
inc
scas
sbb
imul
mov
sub
mulb
test
insb
fldcw
add
popf
in
and
add
es
pop
mov
or
sarl
int
inc
mov
mov
aaa
add
loop
mov
cmc
sub
mov
add
test
cmpsb
dec
fs
jne
xor
sbb
insl
test
aam
ret
ja
mov
xor
xchg
bound
mov
test
inc
sbb
int
hlt
out
inc
jp
sub
call
cmp
mov
push
jecxz
jae
in
clc
or
lcall
or
jl
mov
aas
mov
mov
adc
rclb
mov
roll
cmp
int3
popfw
fbstp
and
stos
and
daa
push
cmp
adc
fwait
add
popa
enter
cmc
jg
push
stc
mov
sti
subl
jbe
dec
icebp
jge
adc
cmp
xchg
fwait
movsl
mov
add
pop
in
inc
jmp
movsl
shrb
scas
in
in
unpckhps
xchg
testb
lock
fs
add
lods
daa
mov
pushf
stc
add
fidivrs
add
ss
testb
fisubrl
cmp
xor
repz
aas
cld
dec
mov
es
lods
add
enter
inc
push
push
cmc
std
out
std
cli
adc
and
mov
and
test
add
jmp
mov
pop
push
rolb
inc
data16
sbb
sub
xor
cmp
mov
and
inc
xchg
insl
into
bound
push
inc
cmc
into
xlat
rclb
xor
add
je
pop
out
or
adc
jae
cmp
push
clc
testl
xchg
aad
xchg
fisttpll
stos
lock
outsl
inc
cmp
gs
in
gs
arpl
and
jl
lcall
es
je
and
cmc
pop
outsl
jno
dec
and
jbe
pop
pop
or
dec
push
mov
out
add
xchg
pop
add
xchg
int
jmp
fmul
cmp
push
sub
add
div
js
push
cld
hlt
mov
mov
add
jb
push
movsb
push
lock
hlt
mov
or
xchg
pop
cs
aad
sarl
aaa
jne
inc
mov
pop
cmp
jno
adc
lods
shlb
inc
in
movsb
subl
stc
jnp
cmc
pop
cld
mov
lret
subb
inc
out
cmc
or
add
push
adc
pop
hlt
push
cmp
icebp
mov
cwtl
and
data16
or
mov
addb
loopne
jge
xor
rorb
loop
adc
mov
pop
pop
jmp
outsb
cld
or
pop
out
add
sbb
lret
or
stc
add
mov
movsb
add
test
sarl
in
lods
addr16
add
and
pop
ljmp
adc
push
lahf
inc
lea
imul
cli
add
mov
test
repz
fs
inc
aas
shll
add
mov
leave
push
fs
es
xor
jo
lods
jnp
jmp
or
ss
icebp
in
add
lock
cs
test
mov
adc
cmp
and
dec
int3
andl
push
cmp
hlt
and
mov
jg
lret
push
stc
cmc
aam
mov
ja
stos
in
mov
push
pop
iret
out
jg
sti
insl
mov
and
rorl
fmulp
adc
lock
pop
adc
pop
mov
scas
aam
mov
add
pushf
xchg
dec
neg
scas
pop
out
addr16
push
pop
sbb
lea
push
call
aas
out
cmc
dec
das
push
data16
adc
les
add
lock
xchg
mov
pop
add
mov
mov
lret
pop
adc
cmp
or
mov
fsubrl
lret
or
ds
mov
push
jae
cmp
ficoms
fildll
jge
add
jb
dec
dec
xchg
xlat
sbbb
addr16
repz
or
xchg
div
adc
in
add
xchg
add
das
mov
pop
out
sti
push
cmc
fldl
cmp
pop
cmc
mov
adc
notb
fsubrp
push
cli
in
jne
fdivrs
fs
push
push
scas
movsb
pminsw
add
xor
in
gs
sub
sub
pusha
lret
out
jne
into
jne
flds
xor
push
xor
xlat
jg
leave
adc
push
sti
mov
lahf
mov
sub
scas
or
cmp
cld
rcl
andb
adcl
ja
bnd
ja
mov
loopne
dec
loop
arpl
mov
stos
lahf
mov
subb
jno
dec
fidivrl
push
mov
stc
pop
ret
cld
ds
and
xor
inc
scas
pop
cli
push
in
idivb
add
call
fadds
inc
mov
das
out
sub
sbb
mov
xchg
pop
pop
mov
fmull
sarb
inc
jmp
aam
mov
push
add
loop
adc
pmaxub
add
jns
or
xchg
sub
mov
cwtl
loope
insb
lods
mov
lret
add
dec
fs
es
push
mov
xor
popa
cmc
sub
clc
out
in
inc
pushf
jae
mov
sbb
jnp
nop
test
push
xchg
mov
in
xor
sub
sub
insb
mov
jno
or
ficoml
mov
into
inc
popa
in
cmc
add
push
xchg
shr
lock
add
push
jmp
adc
lea
xchg
or
data16
in
popa
add
daa
cmp
cwtl
push
fs
rorl
mov
push
loop
or
cmc
and
insb
lcall
out
jg
fcomi
xchg
inc
out
lea
inc
movsb
xor
fs
jae
sbb
xchg
add
pop
push
shr
sbb
pop
xor
lock
push
sbb
add
fstl
in
mov
cs
lea
rcr
push
jmp
push
lcall
push
or
insb
mov
fisttpll
add
pop
out
push
dec
mov
push
arpl
cmp
ds
sub
mov
add
cwtl
cmpsl
out
push
jle
notb
mov
fstps
jne
inc
test
notb
jo
movsl
add
xor
into
test
push
push
or
pop
add
or
add
push
pop
pop
add
add
int3
adc
xchg
xor
int
pop
icebp
icebp
lahf
test
outsb
cli
dec
xchg
push
inc
mov
outsb
mov
aad
adc
jge
or
or
inc
ss
std
lock
lods
imul
sbb
pop
fmull
add
rorl
xor
push
xchg
jbe
pop
into
add
adc
or
or
or
adc
sub
test
popa
push
fsubs
testl
into
pop
add
std
dec
sub
imul
xor
int3
call
cmc
xchg
arpl
aad
add
je
leave
enter
adc
leave
and
xor
je
xchg
xchg
jmp
or
and
mov
rorl
out
cmp
repnz
mov
push
sbb
lret
push
add
test
push
xchg
mov
cmc
loopne
sub
xchg
add
outsb
das
sbb
cmc
pusha
js
in
lds
cwtl
mov
stc
pop
and
cmc
xor
fwait
in
ja
scas
jb
lock
sub
movb
push
jo
cli
bound
add
add
scas
ret
clc
or
inc
sub
inc
divl
outsb
popa
andb
clc
jmp
and
out
pop
fs
pushf
xchg
adc
popf
jl
dec
or
test
or
or
ret
ss
mov
ja
cmc
xchg
push
cwtl
mov
push
add
pop
clc
sar
and
lret
xchg
insl
icebp
push
or
sub
inc
or
push
punpckldq
out
std
lods
mov
adc
mov
mov
stos
dec
pop
in
add
in
ja
addr16
and
fs
inc
sub
daa
fnstcw
ljmp
xor
lret
dec
jbe
jle
pop
bound
cmc
fucomip
add
push
int
and
mov
stos
adc
pop
jns
lock
es
sbb
movsb
or
mov
xchg
arpl
faddl
inc
in
hlt
call
testb
add
insl
in
ret
stos
repz
inc
sbb
sbb
jae
testl
xor
dec
daa
adc
fs
mov
push
push
pusha
cmpsb
mov
lods
fdivrl
lods
add
or
jno
decb
gs
es
mov
pop
sbb
cmp
or
mov
mov
sub
les
into
lods
xchg
testl
ret
add
mov
jnp
lret
pop
sbb
stos
ja
negb
pop
mov
pusha
or
mov
ret
cwtl
and
jbe
jnp
push
lcall
add
xchg
cmpsb
aad
jo
pop
dec
dec
fs
addr16
dec
xor
add
sbb
pop
push
pop
outsb
rcll
clc
add
sarl
sub
shl
daa
jae
stos
add
sub
and
xor
sub
jnp
add
inc
jl
test
pop
fists
loopne
loope
testb
and
mov
mov
adc
mov
push
lds
cwtl
mov
in
out
add
cmp
mov
mov
test
add
je
rol
inc
rcr
gs
gs
mov
pusha
inc
nop
add
sub
mov
lcall
mov
mov
in
pop
insl
or
push
imul
pop
icebp
xchg
int
popa
mov
dec
sbb
mov
ret
mov
add
inc
pop
nop
int
pop
testb
mov
cmp
cmp
cmpsb
jae
daa
aam
xchg
sub
es
loopne
adc
orl
mov
add
adc
addl
out
popa
fs
jbe
popf
mov
mov
mov
sahf
or
sahf
lahf
test
std
movsb
sti
testb
push
scas
mov
sub
je
or
add
enter
xor
dec
negb
cli
sahf
adc
pop
adc
fstl
cmc
push
cmc
xchg
jne
lcall
mov
jno
clc
jmp
dec
cmp
jmp
ds
shl
adc
je
dec
jno
adc
and
mov
pop
xchg
jnp
sbb
mov
jbe
cmpsl
push
stos
push
lahf
sahf
mov
fs
daa
xchg
inc
out
xor
push
push
mov
shll
lret
ja
ds
adc
push
test
cltd
xorb
gs
out
test
mov
lret
leave
idivb
cmp
xchg
or
lret
loope
mov
data16
das
lea
mov
nop
pop
sub
add
iret
adc
add
out
lods
dec
adc
xlat
cmc
cmpsb
jge
movsl
xor
dec
lods
jno
fnsave
xchg
pusha
add
push
ret
iret
lahf
sti
aam
jmp
push
adc
ds
add
shll
cmp
pushf
sub
add
into
movsb
mov
cmc
adc
push
scas
push
das
lcall
sbbb
cli
imulb
jns
out
popa
xchg
stos
dec
dec
mov
push
ljmp
test
test
test
or
pop
or
lea
punpckhdq
es
testb
xchg
inc
push
cmc
add
lods
nop
int
fs
movsb
add
lock
dec
jecxz
hlt
add
mov
aad
fs
mov
mov
clc
push
lret
mov
out
fs
xchg
mov
sahf
adc
stos
fs
repz
mov
mov
add
or
or
sbb
xor
das
movsl
daa
sbb
sbb
into
sbb
in
xorl
dec
push
add
cmc
xlat
cmc
fidivrs
aad
inc
dec
inc
fisttpl
dec
add
xor
xchg
les
or
mov
jge,pt
ja
or
add
fadds
xchg
adc
fs
add
add
cmp
decb
and
and
movsb
add
or
daa
jb
jb
dec
mov
js
or
aad
pop
push
push
sub
aam
xchg
cs
pop
cmp
fistps
jbe
mov
out
mov
mov
or
loope
jle
imul
and
icebp
pop
hlt
inc
add
rcr
ss
add
inc
outsl
mov
and
sbb
add
setne
shl
cmpsb
add
sub
hlt
dec
jmp
jbe
add
in
mov
inc
dec
add
loopne
lcall
cmpsl
sbb
movsl
add
popa
mov
jmp
nop
leave
ds
fcomip
or
ljmp
gs
mov
push
jo
lcall
lods
sahf
and
loope
je
xchg
mov
fs
or
leave
aam
sarl
std
lret
lahf
in
into
add
movsb
aad
outsl
hlt
cmp
and
add
pop
cmpsb
push
cmp
adc
popa
sahf
in
mov
cmp
pop
adc
sti
ret
jns
pushf
cmpsl
repnz
push
xor
fwait
test
int3
adc
jle
hlt
mov
outsb
push
and
std
mov
repnz
fs
xchg
pop
sub
stc
addr16
mov
negb
ret
add
adc
cmpl
add
and
movaps
mov
insb
mov
fldenv
int
dec
rolb
push
and
sub
cmc
test
fs
lock
and
jb
xor
repz
sarl
xchg
push
out
hlt
add
sbb
mov
adc
inc
faddp
sbb
or
push
lock
add
xor
scas
and
inc
lahf
cwtl
xchg
loope
cmpsl
stos
xchg
repnz
mov
mul
cmc
lods
and
mov
fs
inc
gs
sub
cwtl
mov
push
cmc
sahf
add
sub
xorb
add
jo
je
rcll
push
pop
test
xchg
cmpsl
adc
pop
add
mov
xor
mov
mov
xchg
imul
fldt
icebp
and
mov
adc
clc
jae
add
push
pop
jmp
push
pushf
stc
test
add
insb
pop
repz
or
pop
mov
add
xor
or
pop
cmp
fsubrl
jno
gs
lcall
ss
xchg
cmc
dec
std
pop
out
mov
cmp
add
adc
fimuls
jecxz
out
sti
rolb
jle
jno
es
and
push
adc
push
mov
push
add
icebp
ror
add
dec
dec
mov
adc
out
or
inc
dec
cltd
adc
aad
shl
xchg
scas
pop
and
cmpsl
pop
inc
cmc
in
ljmp
pop
loopne
rorb
push
in
jnp
pop
inc
push
jo
out
and
cli
aaa
cmpsb
push
push
inc
pop
insl
pusha
sahf
popa
shl
shrl
add
jne
insl
test
fwait
push
enter
lret
cmp
scas
jmp
mov
jle
aam
gs
jo
lret
imul
shrl
addr16
sub
mov
ret
or
dec
jbe
mov
lcall
adc
sti
mov
enter
sti
adc
adc
enter
jg
jnp
push
imul
xlat
jne
pop
add
cmc
ret
or
nop
sbb
mov
add
push
or
call
add
sub
add
xlat
inc
arpl
lds
add
pop
pusha
cs
popf
popf
xchg
in
adc
cld
insl
xchg
jmp
mov
cmpl
icebp
sbb
fsubp
mov
jle
mov
mov
pushf
sub
pop
fildll
cmc
mov
test
pop
pop
adc
sub
out
add
xlat
pushf
add
lods
clc
je
and
call
adc
xchg
cmp
cmpsl
shr
lea
jns
cmp
sbb
push
mov
out
cltd
mov
sub
inc
push
ss
mov
sub
filds
adc
insb
or
add
fs
shl
cld
pop
test
lret
out
xor
mov
and
add
adc
add
cmc
aam
xchg
inc
aad
and
negl
fs
lea
jge
cmp
sub
decl
cmpsb
cmc
and
test
mov
xor
push
inc
int
filds
jbe
inc
mov
hlt
scas
xchg
cmp
or
mov
push
loope
popf
cvtpi2ps
testb
xlat
aad
push
add
dec
mov
sbb
in
lret
sub
pop
hlt
mov
popa
mov
in
mov
add
adc
jmp
fs
stc
adc
add
scas
mov
adc
xchg
adc
mov
roll
or
push
add
outsb
sbb
sub
jp
pushf
mov
cwtl
das
imulb
xchg
sbb
lods
test
clc
cmp
push
int
js
jne
inc
adc
jbe
bound
mov
or
loopne
loope
adc
xor
and
inc
fcos
xchg
pushf
fs
test
push
loop
lds
sbb
test
outsl
push
add
cmp
int3
out
clc
ja
or
das
arpl
sbb
sbbb
outsl
add
mov
clc
cmc
hlt
ret
xchg
cmp
loope
cli
cmc
lret
jmp
mov
cmpsl
mov
ret
add
movsl
dec
fs
mov
arpl
stc
mov
push
andl
and
js
dec
fnstenv
push
std
xchg
add
or
xchg
out
push
cmp
idivb
ss
cmp
xor
out
in
hlt
sbb
prefetch
jbe
add
es
ja
ret
push
pop
pop
mov
shll
or
pop
sbb
stos
in
or
mov
jp
fisubs
jle
inc
jo
neg
cmp
push
and
add
popa
push
mov
pushf
sbb
cld
jmp
pusha
inc
xchg
adc
xchg
pop
gs
fidivs
fs
or
cld
or
sarl
in
mov
sbb
rcr
ja
and
popa
xor
cmp
jmp
stos
gs
and
loope
xchg
and
mov
ss
fs
sbb
shll
cmpsb
out
imul
mov
or
fst
cmp
mov
lahf
cld
popf
cmp
mov
mov
mov
sbb
movsb
pushf
mov
lret
imulb
arpl
shlb
lock
lds
mov
push
inc
mov
addl
inc
lods
testl
movsl
inc
jle
lock
out
into
jb
mov
cmp
mov
leave
add
arpl
push
rcl
xchg
add
fs
sbb
leave
lods
shl
fwait
in
lret
test
mov
insb
jmp
sbb
xor
xor
ret
orl
insb
inc
into
sbb
push
aas
pop
adc
icebp
loope
rclb
add
out
sbb
cli
and
call
push
adc
or
fs
out
sub
iret
dec
int3
jmp
cld
data16
jmp
sub
push
mov
push
cld
out
pop
mov
push
pop
movsb
xor
rcll
rorl
int3
jne
popa
mov
les
cmc
clc
test
push
pop
cli
dec
fcmovnu
and
add
mov
std
test
fisttps
xchg
jno
and
std
cmpsb
aas
and
xchg
gs
mov
out
dec
loope
sub
out
mov
add
add
sbb
imulb
lds
icebp
jle
jae
jns
and
and
jbe
aam
mulb
or
fimull
jns
add
push
and
cmp
add
add
aas
repnz
lock
pop
addr16
pop
mov
pop
push
add
sbb
add
mov
add
pushf
cmp
rclb
add
add
flds
jl
lock
dec
jno
fwait
popa
mov
inc
dec
stos
ja
loope
clc
aas
add
shl
popf
mov
test
imulb
adc
pop
and
sub
jne
fsub
repz
ds
fs
fs
in
xlat
in
fs
or
and
test
mov
jne
jnp
ljmp
dec
fisttps
cmc
subl
adc
mov
fistps
and
pop
sbb
cltd
dec
mov
adc
pop
test
mov
xorb
test
roll
and
push
stos
fs
push
repnz
cmp
or
add
insl
push
jno
mov
popa
loope
in
aas
add
mov
inc
fs
jg
xor
or
insl
add
daa
xor
lcall
sub
cmp
sbb
pop
jg
push
inc
arpl
jne
sti
cld
push
bound
sub
fbld
jnp
sti
ss
std
into
pusha
jecxz
add
movsl
loop
out
push
cmpsb
cld
sbb
xor
adc
jecxz
loopne
or
pop
cld
mov
test
mov
mov
jge
imul
mov
out
fwait
jne
fnsave
and
stos
loop
stc
inc
and
pop
mov
popf
push
iret
mov
cli
pop
mov
or
push
jae
in
pcmpeqb
mov
out
inc
and
or
mov
push
and
adc
cmc
out
ss
mov
mov
fwait
cmp
inc
rcrl
jae
pushf
stc
xchg
add
adc
loopne
arpl
mov
popa
clc
fsts
dec
add
push
cmc
sub
in
pop
sahf
pop
xor
inc
sub
cltd
ret
inc
and
inc
aas
repnz
in
pop
add
hlt
add
sub
aam
jb
add
out
push
push
jb
adc
mov
push
ja
add
clc
jmp
xchg
dec
aam
lods
cmpsb
xchg
inc
in
and
into
mov
stc
gs
jmp
push
cmpsl
test
add
or
cwtl
xchg
push
mov
aas
idivb
mov
jg
cltd
add
add
jge
push
mov
push
ja
inc
sub
add
ret
xchg
popa
ljmp
sarl
out
cmpsl
jo
pop
cmc
and
cmp
push
xorl
mov
adcb
mov
add
push
pop
imul
idivb
cmp
repnz
movsl
rcl
out
cmpb
fs
push
rcrb
test
xlat
xor
cmc
xor
xlat
cmp
mov
pop
sub
loop
inc
pop
dec
push
mov
push
ss
rolb
fs
sarl
sub
outsl
mov
rolb
jle
pop
adc
mov
push
add
jnp
outsb
outsl
fs
pop
out
insb
mov
sub
adc
sub
arpl
stc
mov
sarl
pop
jg
mov
mov
mov
push
cmp
loope
cmp
test
jbe
pusha
mov
push
mov
shll
sbb
movsb
xor
mov
stc
cmp
js
xor
or
ljmp
inc
adc
and
scas
inc
repz
out
test
add
cmpsb
mov
rcrb
push
in
adc
pop
adc
movsb
cld
pop
push
adc
sub
les
xchg
adc
add
cmp
scas
inc
testb
push
jae
fdivr
add
or
xor
test
jmp
hlt
inc
sbb
movsb
dec
and
in
jl
popf
adc
std
and
cmc
scas
push
mov
xor
sbb
std
lret
test
mov
or
or
je
sti
out
enter
test
or
and
or
sub
daa
cltd
cmp
arpl
rcl
bound
sub
mov
fsts
cmp
imulb
dec
icebp
jb
jle
inc
mov
loopne
test
icebp
popa
les
sub
into
mov
and
enter
adc
jp
push
xchg
cmpsl
dec
xor
or
mov
jno
add
xor
popa
xchg
mov
push
sub
add
mov
call
inc
or
jno
in
adc
fs
jg
call
rcl
ja
add
or
in
cmp
cmp
jl
pushf
in
push
daa
mov
popf
adcl
cld
int
push
pop
daa
fiadds
mov
mov
shlb
cmpl
js
xlat
sbb
outsl
add
sbb
xor
inc
sbb
loopne
es
push
dec
into
mov
test
into
daa
cs
insl
inc
add
jno
push
mov
in
xchg
pop
ljmp
movsl
jae
stos
aad
fxch
into
pop
orl
sbb
sbb
mov
mov
ljmp
mov
je
aas
push
mul
pop
leave
inc
xor
int3
add
imul
xor
pop
faddl
arpl
and
fldcw
dec
popf
cld
and
shl
inc
sbb
fs
cld
jmp
ret
fs
loope
je
or
aam
inc
push
add
fnsave
dec
mov
rorl
ret
fwait
sbb
adc
insl
aas
data16
fs
andb
testb
sub
jo
cmp
push
lcall
push
jle
or
cmc
jg
cmp
xchg
and
xor
daa
outsb
add
mov
jmp
aaa
pop
add
dec
inc
sbb
or
jmp
or
pop
inc
mov
pop
mov
xor
cld
xorl
mov
or
mov
test
xor
mov
in
jns
lcall
and
mov
sub
add
add
jns
inc
add
fisttpll
add
mov
call
es
loope
cld
test
stc
adc
cld
shll
jge
notl
mov
jbe
sbb
fimuls
mov
push
add
cmp
iret
xor
fs
dec
lods
pop
pop
fstl
add
adc
arpl
cmp
pop
lods
cli
xor
imul
push
and
dec
imul
leave
add
cmp
leave
imul
aad
add
sub
inc
jge
lcall
mov
pop
sub
add
push
dec
mov
pop
das
push
test
add
push
xlat
jecxz
jecxz
cwtl
fs
or
and
daa
add
add
into
inc
push
inc
je
dec
scas
pop
aam
inc
imul
mov
arpl
xchg
xchg
or
ficomps
fstpl
gs
inc
out
in
into
jcxz
mov
cmpsb
repnz
imul
bound
push
inc
mov
jb
arpl
xchg
aam
fnstcw
dec
adc
mov
push
mov
leave
add
sbb
enter
lock
cmp
hlt
sbb
or
popa
xchg
ljmp
and
popa
xor
call
or
dec
scas
adc
add
sub
cli
xorl
imul
cwtl
mov
add
enter
test
fisttpl
fstp
cltd
and
orb
lea
sub
pusha
jb
inc
decb
sbb
mov
andb
arpl
negb
leave
imul
push
insb
xchg
popa
xor
leave
adc
pushf
and
mov
pop
sub
shlb
adc
jns
in
jge
adc
xchg
out
mov
hlt
mov
gs
and
mov
xor
push
xor
scas
inc
xchg
jbe
out
xlat
adcb
fadd
mov
ljmp
jle
cli
sti
cmp
enter
xchg
mov
testb
mov
push
add
rolb
int3
and
add
push
push
mov
dec
xchg
inc
insl
push
dec
fs
inc
loopne
xchg
mov
fnsave
movl
inc
sub
xor
vcvtpd2ps
and
jle
popf
andl
mov
pop
sub
xchg
pop
test
es
pusha
inc
leave
ss
movhps
mov
push
sbb
loope
pushf
xchg
loope
clc
fs
stos
xchg
mov
in
add
pop
lock
idivb
jmp
in
xor
mov
loope
cmpsb
mov
hlt
mov
mov
ret
sti
xor
mov
sub
xchg
rolb
test
push
jo
add
or
sahf
dec
xchg
or
cmp
aam
add
loope
jns
fs
shlb
jb
insl
jb
add
and
je
pop
adc
data16
sbb
out
adcl
or
in
push
sbb
data16
adc
jge
cmpsb
add
cmp
scas
cmc
int3
jge
leave
mov
mov
cwtl
addr16
ficoml
add
fimuls
lock
add
sub
mov
adc
sbb
or
lods
in
repz
inc
push
in
in
mov
clc
or
int3
mov
or
ret
add
add
fwait
mov
out
or
mov
imul
jp
sub
push
rcrb
iret
sbb
into
outsl
lcall
mov
mov
cmp
repz
mov
call
lock
sub
mov
fcomps
or
dec
fs
sbb
es
mov
adc
sarb
call
aaa
cmp
enter
jbe
sti
xor
jns
cmc
add
pop
mov
jb
arpl
fisubrs
xchg
xchg
cmp
sti
push
cmc
sub
adc
int
add
into
rcll
std
jl
or
xor
jecxz
ret
sub
imul
cltd
push
inc
mov
mov
dec
mov
mov
mov
pop
or
insb
push
adc
pop
sahf
scas
cmc
aad
inc
mov
add
cmpsb
pop
pop
cltd
xchg
cmp
or
add
lahf
mov
lds
adc
hlt
inc
cmp
pop
or
cmp
xchg
or
xchg
fildl
xchg
call
pop
jne
bound
loop
mov
cmp
jmp
sar
clc
pop
test
cmp
orl
xor
pop
xchg
lods
or
sbb
lea
int3
jo
adcb
push
lods
xchg
push
dec
xchg
mov
mov
adc
les
jmp
stos
fadd
add
mov
icebp
enter
and
jae
adc
mov
repnz
movsl
xchg
ret
mov
jmp
mov
inc
adc
testb
bound
add
xchg
aaa
inc
int
cmp
cmp
fs
inc
push
add
stos
gs
cmc
rorl
and
inc
pop
fucomp
scas
cmc
iret
rcr
mov
push
xchg
add
fstpl
es
rcrl
xchg
int
jg
sbb
iret
add
dec
pusha
flds
lea
icebp
mov
iret
clc
inc
xchg
cli
cltd
pop
and
pop
lret
push
test
cmp
inc
adc
sarl
cmpsl
push
push
add
xchg
add
lods
gs
push
sbb
scas
jmp
or
mov
pop
pusha
push
mov
fidivl
fcmovb
hlt
inc
and
mov
lea
pushf
xor
mov
ljmp
pop
add
filds
xchg
and
loop
sbb
sub
ljmp
cmp
adc
xchg
jno
mov
pop
jmp
xchg
jge
iret
add
dec
pop
cmc
mov
adc
ds
fsubr
cs
push
orl
inc
add
outsb
mov
movsb
jp
imul
out
push
insl
popa
adc
xor
mov
cwtl
data16
clc
mov
sbb
imul
add
mov
jmp
jmp
inc
das
add
daa
lock
sub
cwtl
notb
gs
pop
push
or
pop
and
movsl
cmp
pop
pusha
push
mov
addl
sub
or
push
div
or
insb
xor
fs
stc
enter
or
shrl
push
sarb
pop
sub
sub
hlt
and
cmp
inc
in
cmc
movsl
sub
cmc
lea
in
xor
fistps
dec
test
dec
movsb
sub
shll
cwtl
sbb
cmpsl
pushf
jb
mov
pop
jle
pushf
push
testb
fs
lret
sub
and
andl
addl
arpl
adc
inc
dec
push
dec
int
hlt
push
xchg
fbstp
sub
scas
lahf
or
data16
sub
fwait
jnp
sahf
xchg
xchg
repz
xchg
sarl
cmp
fs
scas
pop
in
pop
out
add
inc
push
iret
xor
xchg
sbb
mov
sub
into
leave
push
imul
or
jecxz
add
or
imul
shrl
or
cmp
pop
insl
and
mov
adc
adc
outsl
sbbb
test
lahf
notb
push
sub
insb
js
call
test
shrb
cltd
scas
fcoml
clc
cmc
mov
push
add
fs
sahf
cmp
jns
mov
sbb
cmp
xchg
add
aad
push
lods
mulb
push
sti
add
adc
hlt
loopne
cmp
jg
aas
fisubl
shll
dec
pushf
fisttpll
add
ja
push
test
cmp
cmc
mov
cs
int
mov
pop
add
insl
rcl
pusha
fs
xchg
outsb
cmpl
scas
dec
data16
xor
cld
jae
pop
xchg
hlt
push
mov
fildll
daa
cmp
mov
jne
mov
mov
add
mov
test
add
xchg
xor
bound
rcrl
push
cmp
imul
sub
sub
mov
lods
or
leave
push
leave
xchg
mov
pop
or
int
dec
in
out
mov
add
mov
lahf
cs
shl
cwtl
shl
icebp
cli
addr16
out
mov
cmp
jecxz
loopne
out
jae
pop
add
test
in
mov
lock
add
and
pop
out
xchg
mov
sub
insb
enter
cmpl
and
das
jns
xchg
arpl
cmp
add
sub
popa
dec
aad
jo
rep
fnstsw
mov
adc
mov
sub
adc
cs
add
push
fstps
in
inc
add
ja
push
ret
sbb
and
xor
jmp
insl
dec
add
imul
sbb
jne
fstps
xor
js
xchg
sbb
cmpsl
ljmp
jge
lahf
sub
add
sbb
leave
sub
scas
insb
stos
and
imul
inc
cmp
aas
inc
stos
repnz
mov
int3
xor
add
dec
jae
mov
add
cmp
repnz
std
jb
jmp
push
aam
in
aad
fisubl
in
mov
or
in
rorb
je
pusha
movsl
add
adc
roll
divb
leave
add
dec
stc
or
jp
cltd
mov
add
cmp
ljmp
jl
push
mov
inc
not
push
mov
sub
add
adcb
fcomip
mov
pusha
mov
or
repz
fsubs
dec
adc
notb
sarl
mov
lds
dec
neg
lods
or
xchg
dec
es
movups
xor
test
fs
xlat
ret
cmp
ja
jae
jo
sbbb
rolb
cmp
inc
and
cld
xchg
std
in
addl
mov
jne
cltd
outsb
sbbb
aas
fimuls
leave
add
and
mov
cmpsl
stc
ficomps
jmp
inc
inc
ds
popa
imulb
call
int3
cmp
xchg
pop
cld
jl
xchg
inc
mov
rolb
pop
jne
popa
fs
not
mov
daa
dec
lret
shll
mov
aad
cmpsb
movsb
out
sbb
pusha
and
cmp
fs
fsubl
aad
add
mull
fdivrs
inc
or
fs
lret
pusha
pop
addl
mov
and
popa
dec
cmp
sub
shl
cli
or
fdivs
cld
add
inc
fistpll
ret
inc
mov
enter
mov
cmc
adc
fs
jge
ret
pushf
sub
xor
xor
sub
stos
xor
leave
inc
sub
dec
dec
mov
jle
jo
mov
pusha
mov
cmpsl
jg
cmp
cmp
add
notl
out
idiv
inc
mov
push
add
scas
por
rol
inc
lods
cmp
inc
push
testb
mov
add
jge
xor
push
loopne
fwait
or
sub
jecxz
mov
add
adc
data16
inc
stc
cmc
jne
ds
insb
aam
adc
push
les
stos
push
pop
jle
jl
shl
insl
adc
jae
dec
mov
sbb
sbb
scas
stc
lods
out
lds
jmp
and
xchg
mov
fcoms
shll
out
clc
sub
out
dec
add
cmovnp
jmp
pop
mov
xchg
add
insb
sbb
xor
xchg
inc
movsb
or
in
adc
add
roll
les
xlat
or
cmc
shrl
nop
pop
xchg
push
xchg
pop
dec
negb
add
into
cmp
add
shlb
sti
jae
add
sub
imul
loope
pop
sti
scas
cmc
nop
inc
movsb
dec
lds
mov
add
and
es
pop
stos
jo
imul
add
adc
lahf
rcll
ljmp
arpl
daa
sarl
add
cmc
push
xor
adc
fdivr
dec
add
push
pop
add
stos
cmp
add
inc
cmp
cmc
fwait
jg
and
divb
mov
movsb
mov
add
pop
lahf
sub
fidivl
shll
int3
aam
sti
cmc
adc
pop
xor
add
mov
stc
mov
xchg
add
imul
jmp
int
movsb
inc
inc
mov
cmc
mov
lock
dec
add
incb
push
mov
dec
sbb
fs
cmc
pop
push
sti
loope
stc
mov
in
and
cmc
ss
addr16
mov
lods
pandn
xor
cmc
or
test
pop
or
mov
rcr
mov
or
out
sti
xchg
or
arpl
std
fstps
or
push
sub
fildl
mov
mov
divl
add
add
xchg
outsb
adc
aad
add
pop
fisttps
nop
ljmp
add
and
sbb
aam
sar
stc
add
mov
adc
sbb
stos
out
xor
inc
cld
add
sbb
loop
jo
out
pop
fistl
inc
aam
add
shr
jecxz
pop
clc
and
insl
dec
hlt
sarb
adc
sahf
shll
pop
loopne
cli
test
cmp
data16
mov
xchg
mov
cltd
in
or
xor
in
xchg
lret
mov
jns
add
and
and
loop
pop
in
ja
push
cmpsb
lcall
fsubs
jmp
cli
das
inc
sarl
cmpsl
lods
add
or
roll
or
jge
sbb
xchg
mov
push
mov
cmc
and
and
xchg
jge
add
gs
push
add
sbb
xchg
lods
push
lods
mov
inc
sub
cmp
dec
dec
inc
add
xor
or
ret
int
in
or
nop
or
sbb
mulb
mov
insb
call
repz
std
pop
jne
stos
pushf
orb
aam
pop
aam
iret
adc
fsts
cmp
push
xchg
loop
fs
add
out
xchg
cltd
or
fldl
cmp
loopne
fs
adcl
mov
addr16
insb
add
push
cmp
out
dec
dec
not
push
fisttps
add
daa
push
test
ret
mov
mov
or
cmp
incb
add
mov
repz
jmp
sti
inc
cli
xor
lea
xchg
mov
movsb
hlt
mov
inc
add
mov
icebp
cmc
notb
xlat
adc
pop
fcomp
mov
jo
popf
adc
fistl
mov
adc
cmp
xor
push
jp
mov
xor
fisttps
movsl
sub
or
xchg
cltd
xchg
mulb
out
in
repz
leave
test
dec
enter
bound
mov
push
sbb
mov
es
xchg
data16
or
dec
mov
dec
pop
mov
xchg
xchg
sbb
ss
push
aad
psadbw
ja
lcall
cmpsl
in
sbb
les
or
aam
pop
test
inc
movsl
push
push
xor
adcb
dec
popf
push
aas
and
sub
xor
mov
adc
mov
imul
mov
enter
mov
mov
lea
adc
xlat
ja
mov
popf
mov
daa
cmp
test
jmp
out
fsubs
cmp
mov
inc
aad
cmp
xchg
jl
xchg
ds
adc
mov
and
jg
movsb
mov
lods
push
sbb
add
fstl
test
fs
inc
and
and
push
inc
adc
dec
jge
xchg
and
scas
add
xchg
xor
fstl
ljmp
mov
xchg
fdivr
lock
dec
push
aam
dec
sti
dec
xor
pop
loopne
add
loopne
fldenv
push
jmp
cmc
xor
lret
ja
pop
push
dec
push
mov
xchg
lcall
jbe
jbe
es
sub
imul
test
scas
jbe
cmc
or
cmpsl
sub
cmpsb
mov
jo
inc
into
cmc
lar
inc
adc
jl
mov
incb
jae
jb
arpl
test
movsb
pop
adc
stos
inc
and
push
pop
in
hlt
pop
xlat
xchg
in
aaa
stc
mov
clc
sub
jno
add
js
out
push
mulb
pop
xor
inc
dec
lret
std
out
out
lock
ret
fs
jg
cmp
sbb
cmp
lret
mov
das
hlt
inc
mov
popa
push
push
mov
add
pusha
mov
sub
inc
int
cmc
mov
jmp
popf
pop
inc
or
xor
or
repz
testl
imul
mov
fs
leave
add
aad
scas
imul
adc
lods
nop
movsl
and
popa
insb
fdivr
cmc
adc
mov
jnp
leave
adc
jne
push
cmpsl
divb
out
loope
xchg
push
inc
xchg
les
out
ds
xchg
addr16
dec
insl
or
jns
iret
mov
add
repz
lds
adc
in
jns
in
mov
popf
movaps
mov
leave
cmc
jno
rorl
clc
dec
mov
loop
cmc
jo
stos
adc
outsl
scas
adc
or
add
mov
int3
sub
add
sbb
add
jle
lcall
adc
shl
push
add
rorb
cli
movsl
int3
popa
stos
mov
imul
or
cmc
and
in
adc
sahf
and
rorl
or
mov
inc
decl
mov
cmp
cmp
jp
sti
sub
mov
fucomip
lods
into
popf
insb
inc
cmc
pop
mov
and
sbb
push
fldcw
insb
cmp
jmp
sbb
cmp
xor
mov
stos
inc
cli
sub
hlt
add
jmp
leave
sbb
add
pop
sbb
icebp
addb
and
jne
cmp
cmc
sub
es
inc
aam
push
mov
mov
mov
and
add
fwait
cltd
sub
cmp
lret
mov
jle
adc
jbe
cmp
les
xor
loope
stc
inc
cld
and
mov
enter
push
xchg
iret
notb
aas
imul
adc
cmp
pop
add
add
cmp
pop
sub
add
iret
sbbb
pop
add
mov
test
out
push
add
rcrl
mov
xchg
pop
xor
mov
notb
testb
popa
popa
fs
mov
aad
add
xchg
jge
xchg
and
cs
sub
jnp
inc
inc
sub
addb
sbb
jge
lock
repnz
adc
mov
orb
cmpsb
andb
ds
popa
icebp
aas
push
mov
xlat
pushf
pop
add
paddq
mov
add
mov
fnsave
or
fidivrs
pop
inc
adc
mov
or
out
cmc
rolb
call
pop
pop
and
push
cmp
es
mov
repz
lods
cmp
add
aaa
cmpl
arpl
lods
or
mov
imul
push
out
jnp
shlb
cmp
push
jb
dec
ss
fimuls
pushf
fsubs
in
pusha
adc
pop
push
pmaxsw
insb
inc
fcmovu
imul
or
test
hlt
clc
push
test
pop
sub
rep
sbb
icebp
ffree
dec
sti
test
loope
mov
mov
lea
stos
sub
push
pop
pop
or
arpl
inc
in
das
and
movsb
aas
push
push
push
test
addr16
aaa
and
push
or
mov
xchg
nop
inc
repnz
and
mov
movsb
add
xchg
into
xchg
cmp
push
sub
push
xchg
add
icebp
cmp
xor
or
outsl
mov
gs
dec
add
jle
push
testb
ret
cltd
xlat
call
out
sbb
push
add
push
shr
hlt
test
rcll
insb
add
cmp
or
fs
gs
dec
gs
xor
cwtl
mov
add
push
loop
test
push
xchg
push
add
dec
inc
push
ljmp
mov
ss
addb
vpmacsswd
clc
das
cmp
xor
dec
inc
cmpsb
test
incb
add
inc
arpl
mov
clc
xor
lods
pop
add
lock
repz
pop
xor
mov
in
scas
push
dec
xchg
cmpb
in
and
cwtl
popa
std
xchg
xor
clc
popf
push
push
fnstsw
gs
test
jge
std
dec
mov
sub
jns
inc
or
aas
mov
aad
add
mov
dec
out
add
fs
shrl
shl
adc
push
mov
loop
adc
gs
pop
rclb
inc
or
hlt
add
neg
div
push
ljmp
rorb
pop
mov
inc
add
sub
loop
cmpsb
in
testb
xchg
sbb
add
cmp
mulb
xor
aam
sarb
jmp
out
fcomi
and
cmp
fisubs
cmp
cmp
pop
sub
sbb
out
cs
enter
pop
push
xchg
cmc
stos
int
loope
frstor
cmp
stc
ret
lods
xor
inc
cld
mov
call
lahf
mov
sbb
and
insb
out
sbb
mov
movsl
push
in
fnstenv
loope
adc
stc
pop
adc
sub
jg
loopne
push
iret
mov
ja
adc
sbbl
sbb
add
les
xchg
push
xchg
imul
sbb
fidivl
mov
sahf
movsl
adc
jne
push
push
ljmp
mov
popl
mov
and
jmp
push
adc
and
and
rcll
repz
cmp
cmpsl
adc
push
es
decl
std
clc
mov
add
bound
mov
lods
inc
adc
sti
jmp
add
push
movsb
daa
fsubp
aam
cli
fcmovnb
mov
mov
scas
and
and
inc
in
popa
add
sub
inc
testb
inc
cs
dec
lock
pop
out
loopne
test
popf
or
std
aam
cmp
cmpsb
or
jne
mov
and
cmp
xor
add
push
das
hlt
ret
lods
data16
push
test
hlt
out
cwtl
sarl
pop
jns
pusha
mov
and
test
lds
cmp
jns
insb
fisubrs
xor
inc
scas
aam
cmp
xchg
out
aam
insb
popf
lea
push
push
mov
add
outsl
fs
icebp
push
iret
popa
stc
inc
push
mov
jge
enter
xchg
divb
xor
andl
jb
inc
into
movsb
clc
and
xor
insl
jbe
loop
mov
in
loop
or
inc
mov
repnz
rcll
sarb
and
in
add
loopne
sbb
pusha
fwait
testb
fsubs
mov
sub
push
hlt
sarl
xor
pop
imul
or
imull
and
in
incb
movsl
imul
cmp
xchg
incb
outsb
xor
pop
movsb
jno
fdivs
pop
jp
and
sbb
dec
xchg
and
add
fnstenv
movsb
jle
sub
fisubs
xchg
aaa
mov
arpl
repz
movsb
inc
sti
mov
jl
notb
jmp
cmc
sub
mov
and
ljmp
inc
adc
test
dec
xor
inc
loopne
mov
dec
shr
popa
outsl
push
push
mov
xor
imull
cli
jge
pop
fiaddl
push
adc
dec
ljmp
mov
dec
add
mulb
mov
add
gs
outsb
lds
les
clc
cmp
mov
in
xchg
cmc
mov
adc
sub
adc
dec
mov
gs
xchg
push
and
mov
popa
pop
in
pushf
add
in
xor
das
pop
mov
lock
outsl
pop
lods
lds
adc
inc
test
fs
or
pop
jnp
dec
or
aad
mov
add
jle
fdiv
iret
mov
andl
jae
les
data16
sub
jae
fs
mov
iret
in
bound
ds
and
cmc
sub
jg
ret
xchg
and
add
jne
pusha
mov
dec
cmp
fisttpl
xor
mov
lock
cmc
mov
or
push
cmp
ds
cmp
hlt
lret
jae
pushf
mov
movsb
add
mul
xor
mov
mov
add
es
add
add
pop
sarl
fimull
ja
lahf
movsb
cld
inc
mov
divb
js
mov
push
or
cld
test
sarl
sahf
insb
mov
cmpsb
pop
ret
inc
gs
push
sahf
psrlq
push
das
mov
shl
cli
inc
stos
je
sbb
xchg
cli
data16
fsubrs
inc
add
and
dec
dec
mov
add
jb
and
push
add
add
std
out
and
push
ret
add
cs
and
out
cmc
in
or
daa
adc
push
pop
out
jp
xchg
adc
sub
aad
dec
sbb
add
imul
fcoml
hlt
xor
or
testb
mov
rclb
sahf
ret
rolb
out
data16
xor
cmpsb
lds
in
cld
sti
out
dec
adc
inc
adc
push
shlb
ss
aaa
les
out
mov
fsub
mov
sub
repz
sti
cwtl
xchg
imul
jb
fnstenv
pop
insb
addl
aas
mov
mov
aaa
loopne
add
and
cli
xchg
fstps
mov
lret
push
jge
pop
xchg
shl
pop
or
arpl
jmp
pop
and
popf
daa
cmpsb
xlat
cmpl
fcomi
pop
lcall
add
adc
loope
nop
in
mov
push
or
and
dec
and
ljmp
fildl
orb
cli
aaa
orb
push
out
imul
in
ljmp
pop
adc
hlt
cmc
push
adc
aam
or
sub
xchg
cld
bound
pslld
sub
jno
pop
xchg
popa
lfs
jge
dec
lret
mov
push
mov
inc
divb
les
adc
test
mov
dec
cltd
mov
mov
pop
pop
pop
inc
xchg
and
out
push
push
mov
and
or
jne
mov
add
sub
lea
incl
aam
jmp
cltd
add
jle
push
inc
std
hlt
push
cmp
mov
scas
push
ljmp
xchg
xchg
imul
les
hlt
pop
gs
dec
push
mov
sbb
scas
es
cmp
sbb
adc
pusha
jne
out
adc
sub
dec
repnz
pop
das
mov
sub
dec
cs
movsl
in
push
inc
jne
ret
add
pusha
inc
clc
shrb
xor
add
add
adc
ljmp
add
and
sti
xor
jecxz
add
cmc
or
cmpsl
js
mov
sub
push
jno
xor
jbe
sbb
mov
cld
cmp
sbb
test
test
and
out
ret
and
push
insl
inc
push
push
adc
mov
sbb
sub
or
xchg
push
pop
sbb
je
mov
mov
orb
fiadds
fs
push
mov
jae
sbb
push
jecxz
jo
dec
das
jmp
fdivr
ja
mov
xchg
push
xchg
jne
push
in
push
out
fs
aam
xor
mov
xchg
adc
ds
mov
out
test
sbb
xor
pushl
add
popf
jg
push
push
aad
pop
mov
adc
pushf
test
in
in
ret
mov
loope
and
ja
test
iret
pop
fwait
adc
add
popf
push
das
insb
jnp
add
dec
or
xchg
repnz
fs
add
mov
ret
or
roll
or
or
fs
xchg
scas
add
rorl
idiv
cmc
adc
mov
fisubrs
dec
add
xor
add
aas
icebp
jge
add
mov
cwtl
mov
or
out
sbb
out
loope
add
popf
pop
insl
cli
mov
sti
orb
add
mov
push
dec
xchg
sbb
imul
or
nop
outsl
cltd
into
push
repnz
mov
fucomi
mov
cmp
mov
cs
call
push
mov
insb
or
xor
idivl
sub
xchg
icebp
or
or
sub
xor
iret
gs
nop
mov
jecxz
fcmove
iret
test
and
ret
or
stc
cmpsb
fldl
push
sub
sub
xor
or
jae
sbb
roll
adc
lcall
or
arpl
sti
incl
stos
or
test
lcall
in
jmp
cmp
pop
sub
mov
pop
or
inc
add
and
mulb
and
movsb
shrl
or
jle
in
pop
ficomps
imul
jns
sub
pop
add
shll
mov
aam
add
lods
cld
pop
rorb
hlt
shrl
mov
les
add
in
daa
cmp
cmp
cmc
je
divb
sti
jbe
sub
push
dec
adc
adc
cmc
iret
daa
xor
push
add
sbb
or
divb
sub
cld
aam
loop
xchg
sarl
lods
add
fsubr
and
xor
scas
notl
xchg
push
sbb
int3
fildl
sub
lret
sarb
sahf
aad
push
adc
pop
movb
and
hlt
in
daa
push
sti
test
scas
push
or
call
jl
stc
sbbb
adc
push
imul
out
jae
adcl
ss
xor
add
mov
ljmp
add
inc
add
xlat
or
push
add
iret
and
mov
scas
ss
aad
or
cs
and
lds
mov
rcrl
shl
dec
add
fidivrs
or
inc
arpl
xlat
xchg
fldl
jge
add
int
repnz
push
jnp
jle
popa
je
add
dec
cld
insl
fnsave
push
mov
push
cs
xchg
xor
or
mov
int3
inc
push
xchg
bound
cmp
stos
loop
dec
and
add
scas
mov
xchg
cmpl
jns
pcmpeqw
jae
in
leave
mov
cld
pop
ja
cmp
fdivp
lret
xor
ss
test
mov
cwtl
and
mov
or
cmc
pop
pop
add
daa
push
push
inc
push
inc
clc
fs
aaa
push
push
js
aad
pop
rcrl
mov
adc
mov
cs
dec
add
lods
lock
and
push
les
mov
clc
xchg
push
ss
inc
rclb
insl
jecxz
std
out
loopne
inc
adc
dec
sub
add
xchg
cli
pushf
rcll
pop
sti
pop
xchg
cmp
jp
lahf
mov
pop
js
pop
push
pop
in
cli
in
shll
in
push
lds
push
cltd
filds
ss
insl
jle
les
int3
hlt
rorl
xor
mov
mov
in
int
jge
insl
or
cli
cltd
data16
mov
popa
jae
movnti
in
xchg
and
xchg
or
mov
sbb
jmp
xor
in
sbb
jge
push
add
addr16
bnd
icebp
fs
and
stc
mov
jmp
sub
repnz
push
sbb
mov
stc
mov
adc
jne
es
dec
loopne
into
aam
push
loop
bnd
mov
nop
pop
enter
sbb
add
jg
inc
int3
and
cmp
gs
xchg
sub
pop
adc
cltd
es
je
fs
std
push
mov
sub
add
sbb
out
cmc
decl
test
push
repnz
xor
pop
mov
daa
push
push
pop
test
mov
insl
xchg
mov
out
jb
cmc
inc
xchg
xchg
out
and
mov
inc
lahf
push
push
add
sbb
std
in
leave
imul
int
mov
daa
je
sbb
mov
sub
je
nop
outsl
or
cmpsb
subl
mov
stos
sub
jmp
add
or
add
mov
mov
cmpsb
add
addl
dec
in
std
cmp
por
out
inc
sbb
dec
sbb
lock
jmp
mov
shlb
add
subl
mov
sbb
fistpll
jns
xchg
and
dec
in
out
in
hlt
int
mov
mov
pop
add
mov
lret
loop
inc
icebp
fs
xchg
shlb
cmp
inc
inc
js
cmp
jno
lods
sarl
mov
add
dec
rcrl
sbb
aaa
mov
imulb
add
mov
jmp
mov
add
xor
ret
pop
pop
fmull
andb
mov
mov
fs
lea
pop
sbb
mov
pop
sub
adc
imul
or
test
sbb
or
dec
jge
adc
jb
loopne
das
mov
jp
push
inc
cmpps
or
pop
jno
jne
add
test
icebp
dec
loope
add
sub
and
jmp
andb
pop
lret
cltd
mov
stos
aam
cmpsb
xor
push
insl
push
iret
shll
js
loope
jmp
gs
xchg
adc
gs
outsb
pop
push
xlat
and
mov
jmp
divb
and
inc
cltd
cmp
cld
mov
add
sti
add
lret
ffree
xor
push
and
sub
add
xchg
stc
cmc
loope
jmp
jp
mov
sbb
jl
jg
fs
pop
hlt
jae
insb
loop
pusha
add
scas
mov
mov
mov
push
les
test
sub
icebp
adc
add
int
leave
fdivl
push
cmp
push
sub
jne
sub
neg
les
cmc
and
out
mov
push
add
iret
pop
lods
sbb
iret
sbb
and
add
les
fists
fs
ljmp
iret
add
enter
push
push
mov
mov
or
popa
xor
add
adc
and
push
cmp
jnp
nop
jl
sbbl
imul
pop
sbb
jecxz
push
add
push
std
mov
add
fs
cmp
mov
dec
add
inc
xor
inc
inc
push
repnz
arpl
stos
test
sub
inc
inc
out
add
jbe
jmp
mov
cmp
push
and
jns
mov
push
data16
frstor
aas
xchg
mov
loope
int
negb
push
push
out
sti
xlat
push
sbb
adc
push
mov
add
add
loopne
inc
mov
into
xor
jp
cmp
cmp
in
cmp
xchg
push
add
cmp
stos
pusha
adc
jp
mov
cmc
subl
adcl
add
push
aaa
xchg
mov
cmp
sbb
jbe
push
push
push
clc
add
add
int3
popf
or
xchg
push
mov
in
pop
sbb
push
movsl
jns
and
push
out
push
es
sbb
and
xlat
fdivr
scas
push
sbb
ja
adc
dec
int3
fs
or
aam
js
int
imul
daa
add
pop
movsl
ror
xor
stc
add
movsb
clc
shl
and
inc
sbb
add
mov
sub
xor
xchg
arpl
mov
jecxz
inc
loopne
cwtl
add
insl
cmpsl
sbb
add
pusha
sub
cli
jo
cmc
push
push
hlt
dec
pop
pop
icebp
cltd
aas
inc
fmulp
pop
in
cmp
sbb
movsb
cmp
mov
pop
and
lea
xchg
push
movzwl
out
dec
add
push
inc
out
xchg
fdivl
add
add
mov
in
std
dec
and
add
movsb
push
sbb
in
cmp
pop
jp
popa
add
adc
fcoms
outsb
adc
mov
neg
imul
mov
inc
and
hlt
pop
rolb
inc
clc
jl
dec
js
repz
mov
popl
int3
cmpsb
ss
std
jbe
push
in
hlt
dec
andb
sbb
es
daa
mov
push
cmp
pushl
mov
inc
mov
movsl
push
adc
loope
mov
cld
out
add
xchg
or
icebp
int3
add
lock
notl
or
lds
icebp
add
sub
out
gs
add
aad
aad
not
mov
jae
dec
cmp
adc
or
test
xor
cli
fs
add
inc
jbe
adc
in
dec
enter
movsl
fucomp
cmp
cs
fs
aad
insb
aas
sahf
xchg
sbb
fwait
imul
stc
out
add
shll
pop
adc
xor
pop
ficoms
lea
mulb
stos
aaa
or
mov
lods
ret
gs
lds
xchg
inc
sbb
out
leave
xchg
add
push
fs
rorb
fstl
adc
sbb
jg
mov
mov
js
imulb
ret
dec
lea
out
js
test
adc
shll
ficoml
in
and
and
test
popa
shl
sbb
ja
inc
iret
in
imul
sub
jp
cmc
popf
sub
adc
cli
add
cmp
popf
push
add
sub
loop
sbb
dec
test
mov
dec
xor
popf
mov
pop
ljmp
fldenv
test
out
shll
push
xor
push
in
aaa
sub
cmc
mov
into
idivl
jmp
sub
scas
jecxz
push
xor
pop
punpckhbw
push
mov
movsl
out
jecxz
add
dec
in
aad
imul
mov
or
mov
sbb
dec
cmp
ficoml
inc
jnp
pminsw
scas
pop
popf
sub
xor
loope
fs
push
jbe
notb
imul
inc
fists
pusha
add
repnz
sti
dec
mov
push
arpl
jmp
mov
mov
test
add
push
push
push
aad
mov
pop
xor
jbe
sub
lock
push
lock
hlt
pop
lcall
insl
jp
pop
aas
jp
fs
daa
add
add
lret
add
sahf
jbe
cmp
adc
dec
add
insb
pop
lock
ljmp
jne
push
mov
sti
add
dec
in
cld
mov
aaa
mov
cmp
sar
mov
int
test
jno
sti
fs
xchg
popa
adc
pop
mov
movsl
add
imul
pop
push
xor
push
les
out
push
add
mov
scas
mov
mov
push
mov
jecxz
and
mov
fs
add
pop
push
xchg
dec
add
sti
mov
adc
mov
aad
sub
fldl
xchg
out
xchg
add
add
adc
test
movsl
cld
fcomp
jns
in
repz
into
jg
inc
lea
stos
dec
xchg
mov
xchg
aam
pop
subl
outsb
jecxz
inc
adc
sahf
sub
sbb
xor
cmp
or
mov
scas
lret
shrb
xor
sub
mov
xor
inc
xor
cmc
or
es
inc
dec
mov
and
adc
loope
incb
bound
into
push
and
jne
fs
xor
jmp
add
out
or
mov
xor
xchg
fnsave
push
inc
mov
aad
leave
inc
hlt
ficompl
jnp
sub
add
adcl
push
and
inc
mov
repnz
ret
nop
jne
add
mov
gs
fs
pusha
jne
enter
int
test
cmpsb
test
sbb
and
jo
and
pop
xor
xor
sub
xchg
push
push
add
repz
add
test
mov
sbb
lds
adc
push
dec
fwait
lret
je
fstpl
add
push
mov
shlb
dec
and
add
inc
add
or
jge
cltd
shl
decl
ret
in
inc
stc
cmp
dec
jp
or
add
add
jp
and
pop
pop
push
cmp
mov
orl
jne
ljmp
enter
mov
imulb
mov
test
adc
lods
xor
cmc
ljmp
mov
popf
shlb
add
fdivrl
es
mov
xchg
sub
xchg
adc
push
push
std
sbb
sub
push
xlat
mov
add
ja
jnp
das
ficoms
sbb
pop
jno
out
mov
add
pusha
jno
cli
imul
cmp
ss
andl
movsl
lret
xlat
pusha
movsb
lds
mov
aad
fwait
push
mov
cmp
aam
jle
in
adc
mov
sub
adc
pop
bound
jae
test
pop
das
pop
xorl
lahf
adcl
cmpsb
out
test
ss
xchg
fs
lods
mov
enter
or
pop
mov
xchg
dec
or
insb
iret
fs
inc
or
data16
pop
mov
inc
adc
loope
cli
push
push
xchg
mov
ds
enter
xor
movb
xorl
data16
mov
push
add
xchg
out
notb
mov
push
jge
int
add
out
dec
jb
pop
jp
bnd
dec
mov
cmc
test
outsb
or
inc
sub
fnstcw
adc
lds
xchg
add
cmpsl
add
mov
push
mov
fdiv
sub
notb
orl
and
and
and
clc
xchg
cli
outsb
jge
in
sub
xor
push
xchg
repnz
cmp
cwtl
adc
fs
divb
add
push
jmp
std
mov
cmp
push
add
mov
pop
fcoml
jbe
gs
pop
mov
xor
out
adc
call
push
leave
outsb
jp
sub
and
and
inc
fs
insb
xlat
pop
arpl
add
mov
xor
mov
add
mov
inc
add
rol
adc
imul
jecxz
fmuls
push
test
adc
and
imul
or
inc
xlat
dec
stc
andb
pop
jge
adc
dec
inc
in
outsl
data16
mov
into
adc
fwait
mov
cmpl
in
add
sti
sbb
xchg
mov
push
inc
mov
jmp
in
std
cmc
ss
add
sub
jmp
lock
loopne
fisttpl
divl
xchg
cmp
adc
adc
loopne
fstpt
fucomip
scas
inc
adc
inc
mov
shlb
and
decl
or
lds
ret
add
pop
adc
mov
push
xor
aad
data16
or
je
inc
mov
stos
jmp
addr16
testb
aas
add
xchg
ds
enter
ds
dec
fsubrs
xchg
push
push
xchg
xchg
push
add
jb
jmp
xbegin
shll
icebp
lock
xchg
dec
pop
xor
add
xor
fwait
jge
loopne
mov
sbb
cmp
jne
mov
shr
loopne
push
testl
movsb
out
push
andb
jg
jl
hlt
lods
imul
mov
xor
push
movsb
cmp
div
mov
mov
mov
adc
cwtl
mov
std
pusha
repnz
addr16
mov
cmp
cli
es
pop
or
fsubrs
pop
add
or
movsb
push
std
mov
hlt
aas
pop
jbe
imulb
adc
and
xchg
adc
notl
fs
int
add
cld
fisubl
add
lds
imul
cld
cmc
inc
in
cmp
test
lods
testl
mov
sti
cmpsb
mov
xor
push
pop
shll
and
aad
lods
ds
add
insb
movsb
loope
fs
arpl
out
xchg
mov
and
mov
xchg
and
inc
jmp
adc
mov
sub
or
test
xor
mov
addr16
andb
insl
rorl
mov
jl
dec
test
repz
pop
popa
ja
shl
adc
mov
scas
or
stc
pop
mov
hlt
mov
pop
inc
add
repz
sahf
jnp
add
pop
fisubrl
jge
outsl
arpl
fs
ffreep
cmpl
cs
loope
idivb
xchg
pop
pusha
icebp
xchg
popf
mov
aam
sbb
push
pusha
add
outsl
ja
lock
fsincos
repnz
sbb
cmc
or
cmp
mov
xchg
push
shrl
pop
sub
mov
sub
xchg
dec
or
orl
outsb
cmp
pop
imul
sti
popa
add
jg
jge
mov
ss
fdivs
andb
sbb
arpl
adcb
mov
mov
jle
xchg
dec
imul
and
push
jp
or
fs
adc
mov
or
aam
xchg
ss
mov
fimuls
jmp
adc
add
adc
ror
jne
cmc
jb
xchg
popf
repz
or
cmp
movsl
jns
adcl
insl
adc
xchg
jecxz
dec
bound
sbbl
loopne
inc
mov
jae
xor
addr16
pushf
inc
ss
fsubl
add
cltd
lcall
mov
pusha
push
mov
ljmp
fs
push
lods
popf
sahf
cmc
test
add
loopne
aaa
es
mov
clc
sar
cld
push
push
fs
mov
out
mov
jne
add
jno
data16
repnz
std
add
das
rolb
xchg
in
fisubl
xor
iret
mov
les
inc
mov
sub
inc
add
pop
jne
cli
fs
stc
cmc
adc
sbb
sbb
dec
test
mov
push
adc
and
je
in
inc
imul
xor
pop
minps
stc
outsb
jp
es
in
ret
inc
mov
lds
test
jle
in
lds
sbb
mov
mov
lret
scas
ss
dec
xchg
add
add
shlb
sbb
adc
add
xlat
shlb
aaa
cmc
int3
test
ficompl
jle
cmp
mov
dec
mov
aas
push
ds
test
decl
add
and
push
pushf
mov
mov
insl
sti
enter
std
or
adc
add
lret
fs
xor
lds
xlat
leave
sbb
cmc
inc
and
xor
sbb
stos
movb
sahf
xor
mov
mov
jp
shl
addr16
int
jns
adc
adc
inc
test
mov
repnz
sub
jge
aam
add
push
aad
push
push
cli
aas
mov
xchg
in
loopne
pop
jb
movsb
fistpl
popl
xorb
nop
mov
in
inc
outsl
sbb
mov
xchg
insl
inc
dec
popf
push
stc
scas
rcl
or
cmp
aam
mov
fisttpll
stc
or
add
clc
jg
test
jne
jmp
loop
insb
mov
push
pop
inc
notb
dec
and
or
clc
and
loop
add
popa
sar
in
adc
into
mov
push
jle
arpl
mov
and
mov
mov
lods
mov
xlat
cmp
xchg
xchg
stc
mov
add
xchg
and
jno
fdivrs
xor
nop
enter
fs
pop
pop
daa
lock
mov
add
jmp
test
mov
loope
jge
pop
je
xor
xchg
jle
cmp
xchg
jg
orl
mov
xchg
inc
add
rcr
ds
lret
cmp
pop
nop
jae
aaa
or
repnz
push
divps
clc
addl
and
cmpsb
pop
call
pop
mov
add
dec
fcompl
cwtl
jmp
and
jp
push
ljmp
test
mov
lret
push
xchg
and
dec
int3
fistpll
push
imulb
pop
mov
mov
mov
xchg
sub
mov
stos
add
loope
push
xchg
daa
lea
pop
imul
adc
mov
jl
lea
or
cmc
inc
inc
cli
repz
sbb
and
mov
sub
js
aad
in
inc
add
inc
or
outsl
add
jecxz
push
mov
mov
mov
adc
outsb
sub
clc
shr
lods
jne
in
jmp
fcoms
dec
push
movsb
or
push
notl
ja
pop
jle
pop
add
jnp
adcb
or
add
enter
int
mov
stc
cli
or
popf
imul
ret
add
lahf
frstor
scas
dec
call
mov
sub
outsb
push
adc
cmc
int3
movsb
testl
xchg
fiadds
out
add
fcompl
inc
pop
push
testl
jns
xor
or
push
outsb
pushf
popa
xor
mov
pushl
test
add
ss
shlb
into
lcall
ret
add
sub
xor
repz
int
push
push
movsl
dec
sahf
mov
mov
ror
jnp,pt
mov
and
adc
popf
jl
insl
add
push
sbb
rcll
repnz
push
add
push
xchg
pop
les
test
imulb
out
mov
xchg
jae
dec
sbb
ss
loop
imul
call
sti
movsb
add
jns
repz
popf
mov
in
scas
mov
add
aad
inc
sub
pop
arpl
je
push
xchg
filds
rcll
pop
in
repz
add
and
mov
add
jle
or
sbb
xor
icebp
orb
scas
int
stos
notl
inc
into
or
xchg
add
test
pop
lods
inc
mov
mov
push
or
inc
push
insb
xchg
inc
jmp
dec
divb
add
push
movsl
cmp
fs
sbb
pushf
inc
bound
add
inc
gs
lods
cs
dec
inc
ss
insl
imul
fimuls
testb
or
sub
cmp
movb
mov
push
es
cmp
jp
iret
push
shl
push
dec
cmp
add
mov
je
fs
adc
dec
adc
out
ds
push
dec
xor
inc
arpl
push
outsb
movsb
push
enter
out
and
jo
cmp
adc
testl
add
test
inc
fs
lods
jge
icebp
or
push
aam
mov
lea
mulb
mul
and
add
cli
cmc
jge
mov
andl
jp
loopne
inc
xor
clc
add
inc
int
daa
push
pushf
cmc
sub
xor
or
add
adc
arpl
gs
icebp
repz
test
test
ds
dec
xor
arpl
stos
cmp
adc
adc
add
mov
outsl
or
or
inc
leave
pop
add
push
out
gs
insl
mov
jne
and
sahf
add
inc
xor
jecxz
rorl
imul
movsl
and
push
inc
xchg
fiadds
mov
mov
pop
mov
mov
add
out
shrb
cli
sbb
fstpl
xchg
fadds
movsb
pop
cmpsb
mov
movsl
pop
push
cli
sub
or
fistpll
push
add
jge
dec
imul
mov
xor
pop
and
and
jno
adc
jno
ss
test
push
jle
or
js
arpl
jb
icebp
movl
test
mov
add
jbe
lods
and
push
sbb
sbbl
adc
leave
adc
add
push
gs
notb
jecxz
lcall
lods
idiv
push
sarl
jmp
aam
push
je
cli
add
stc
idivl
pop
mov
push
out
push
pop
cmc
xorb
repnz
call
pop
incb
jae
shl
gs
lock
cmp
or
incl
adc
jbe
add
mov
cld
int
and
repz
loope
or
in
push
dec
jbe
lcall
leave
not
out
sti
or
loop
rorb
nop
jle
lds
sbb
xchg
movb
out
and
inc
cmp
rolb
push
divb
xlat
or
pushf
and
sub
repnz
test
pop
popl
cmp
adc
add
vunpckhpd
or
mov
loope
ja
mov
xor
and
arpl
adc
add
jbe
sub
sbb
lock
xchg
insl
pusha
add
stos
xchg
xor
cmc
jp
shrl
jg
data16
or
jne
jg
movsl
dec
add
xchg
lock
repz
dec
mov
and
add
ds
ret
jae
add
xor
inc
xchg
mov
or
cmpl
add
lods
push
scas
push
pop
xchg
add
push
xchg
jge
je
inc
mov
std
aaa
or
add
lods
fs
cmp
inc
icebp
push
jecxz
in
mov
popl
js
mov
push
add
inc
adc
and
insb
testb
add
mov
push
add
mov
movsl
and
int
bound
fs
fs
ss
into
and
push
imul
pop
pusha
dec
not
mov
dec
and
sub
adc
pop
cltd
idivb
sbb
or
add
pop
scas
jmp
add
outsl
push
test
cmp
xor
jns
daa
dec
lods
xor
into
stos
lock
pop
sub
push
aas
cmp
dec
mul
ret
cld
sbb
inc
mov
and
cs
imul
pop
xchg
ss
clc
mov
pop
pop
add
rolb
push
add
and
push
push
cltd
daa
rcl
add
jmp
fs
jle
popf
in
sub
adc
sub
cmpsb
cmp
iret
ss
adc
in
imul
add
pop
mul
push
sub
pushf
add
xor
jge
add
scas
and
add
stc
ss
sub
or
rolb
xchg
adc
hlt
mov
pop
sti
aaa
fwait
lods
rcr
shlb
jmp
fmulp
adc
idiv
lcall
mov
daa
notb
in
lahf
sbb
xchg
repz
pop
inc
ss
lcall
push
insl
jmp
xor
mov
add
imul
movsl
iretw
inc
lcall
aad
sbb
dec
add
push
int
jno
out
adc
cmp
inc
bound
movsb
dec
jae
hlt
shlb
data16
sti
pop
or
fisubs
aam
mov
bound
add
and
dec
clc
shl
add
int
sub
jle
mov
rolb
aam
in
mov
out
pop
cli
xor
sub
int
call
sub
add
gs
jne
and
sahf
sbb
add
out
add
nop
pop
jle
push
dec
imul
mov
mov
scas
xchg
push
out
sub
sub
lcall
push
push
xchg
add
mov
out
iret
and
jno
or
rcl
jecxz
filds
and
lds
cmc
add
and
or
out
cld
push
inc
inc
push
sar
repz
add
pop
into
mov
mov
sbb
dec
cltd
dec
add
jmp
cmpsb
sbb
lea
mov
lds
outsb
cmp
stos
gs
stc
mov
xor
negb
negb
cmpsl
mov
add
jne
xor
xor
mov
clc
lds
clc
pushf
mov
cmpsb
ds
add
pusha
and
int
mov
testb
add
lcall
inc
enter
xchg
repnz
cwtl
dec
divb
sarl
pop
add
ss
pop
les
add
out
adc
fcmovbe
stc
xor
mov
inc
ja
fs
jle
and
fcoml
sbb
arpl
aas
mov
out
lret
and
out
push
arpl
shr
cwtl
adc
jbe
nop
jp
fldenv
mov
add
or
lret
shll
ds
popa
jp
movsl
inc
js
fs
push
cli
gs
or
and
pop
sub
hlt
jp
cmc
addr16
call
leave
sub
lods
lahf
mov
fisubl
fs
rcrb
cli
mov
stos
mov
mov
sbb
adc
hlt
adc
push
je
leave
mov
and
div
sti
jne
sbb
repnz
imulb
push
fs
xor
je
jnp
sub
testb
lods
ljmp
adc
adc
fiaddl
outsl
repnz
cmp
scas
subl
jmp
xchg
daa
push
fadds
mov
in
subl
test
aaa
les
in
and
cmc
loop
add
pop
mov
sbb
sub
lcall
stc
pusha
and
jbe
add
fcompl
fisubs
rcrb
mulb
jle
mov
cmp
add
adc
and
clc
add
mov
xor
sbb
testb
jo
push
dec
insl
jl
shrl
loope
xor
inc
rcrb
mov
dec
add
push
jg
pop
push
testb
jecxz
inc
cld
pop
push
cmc
rcll
es
sub
or
test
stos
adc
andb
xor
imul
fildll
pop
in
or
sbb
jne
or
leave
push
pop
mov
push
insb
cmpsl
adc
mov
pushf
icebp
in
sahf
jmp
ja
lret
fsubrs
ret
imulb
cwtl
mov
dec
arpl
push
jnp
push
in
ljmp
dec
je
inc
pop
cmp
jecxz
outsl
sti
fcomps
and
cwtl
pop
cmp
jne
aad
jmp
xchg
icebp
in
jns
imul
xlat
xor
inc
pop
mov
insb
push
add
out
flds
outsb
icebp
icebp
xor
sti
sub
fs
and
adc
fcmovbe
insl
mov
push
daa
ljmp
fists
push
or
in
out
subl
jb
inc
in
or
xchg
ss
bound
aad
pop
lods
test
sbb
add
inc
pusha
pcmpeqw
xchg
stc
pop
xor
mov
xlat
adc
jmp
pop
idivb
pop
jns
mov
rolb
dec
cmp
adc
sti
sub
add
int
mov
std
js
mov
adc
add
inc
lea
out
movsb
add
xor
inc
int3
mov
and
mov
rcrl
fs
lret
daa
ffreep
movsb
add
out
cmp
aam
aaa
ja
mov
and
push
stos
push
scas
pop
lret
fisubrs
pop
sub
clc
clc
sub
loopne
dec
aas
and
popa
leave
and
pop
xchg
cltd
pop
pcmpeqd
cmp
xchg
jl
loope
cmp
mov
add
pop
inc
adc
enter
std
or
mov
mov
cmp
sti
das
iret
pop
roll
data16
mov
inc
add
movsb
jb
mov
pop
incl
push
mov
add
and
cmp
ds
push
adc
or
in
mov
mull
movsb
xchg
adc
loope
repnz
and
mov
addl
sar
test
fimuls
rorl
push
push
and
cmpsb
insb
outsb
pushf
fsubl
xchg
nop
outsl
inc
add
popa
and
or
sub
and
mov
or
push
cli
rolb
sub
cltd
testl
xor
insb
or
add
sub
xor
nop
add
leave
shrb
loope
es
fiaddl
cs
hlt
sub
inc
stos
je
divl
mov
mov
and
fwait
lahf
fcomp
xchg
fcomip
push
cmc
test
sarb
mov
hlt
mov
adc
sti
in
sbb
pop
pusha
or
jne
push
in
fs
adcb
sub
add
stc
or
push
clc
mov
pusha
sbb
into
cmc
loopne
imul
and
mov
cs
cmp
popa
push
pop
cld
js
cmc
mov
add
andb
inc
xorb
inc
push
testb
leave
dec
aam
movsb
into
add
xor
fs
out
xlat
stc
lods
push
rolb
cmpsb
add
and
xchg
test
loop
ja
sbb
dec
sbb
or
mov
inc
add
fsubr
cli
ja
add
xlat
ret
push
rorb
add
xchg
movups
and
add
and
jecxz
add
sbb
add
xor
subl
movsb
les
pcmpgtw
fs
xchg
xchg
test
or
fsubs
bound
add
fistl
pop
outsb
jecxz
jo
cwtl
cli
ret
pop
jbe
stos
lea
push
cmc
push
mov
push
fs
andb
in
int3
push
roll
xchg
mov
jge
dec
testb
inc
xchg
test
mov
push
mov
push
mov
push
xor
test
int3
or
xchg
mov
dec
clc
mov
dec
mov
sub
add
sahf
ret
sar
out
test
inc
je
pop
lock
fidivrs
cmp
jno
mov
out
xchg
insb
add
outsl
sub
pop
xor
cmp
add
cmp
scas
sub
lods
icebp
cld
xchg
mov
out
sub
adc
hlt
sub
add
pop
jmp
sbb
gs
add
pop
stc
adc
add
xor
cmc
add
repnz
dec
fisubs
push
data16
js
sti
std
add
or
mov
jmp
cmc
outsl
mov
roll
popf
bound
pop
sti
sarl
das
sbb
cmp
and
sub
aad
sahf
jle
pop
push
or
or
push
mov
mov
adcb
mov
in
cmp
sbb
and
test
loopne
adc
into
lds
sub
add
push
push
push
dec
jmp
repz
popf
dec
arpl
jno
rorb
or
pop
test
out
xchg
sbb
push
mov
cld
sub
jp
lods
mov
xchg
add
add
dec
fs
fstps
add
pop
icebp
int3
and
jg
add
incl
js
jge
movsb
int
dec
lods
lret
sbb
and
jbe
andl
dec
mov
test
inc
aaa
nop
fidivs
add
pop
cmc
inc
xor
mov
push
ljmp
les
add
outsl
dec
cli
lock
xchg
xor
or
cmp
lahf
and
lcall
mov
int
fcmovbe
pop
mov
cmpsb
iret
mov
mov
hlt
push
inc
out
rolb
movsb
jmp
mov
inc
iret
mov
vpsrlw
fidivs
repz
mov
addl
xchg
mov
sbbl
jge
ds
xchg
jb
or
xor
mov
es
adc
inc
mov
jp,pn
sarl
jp
scas
adc
mov
jno
cmc
sbb
xchg
or
adc
xchg
test
out
int
aas
pop
imul
pop
out
in
insb
push
sbb
dec
xchg
push
mov
adc
inc
push
es
test
aad
mov
in
roll
mov
cmc
xor
add
pop
ja
cmp
push
pop
cs
loope
mov
inc
out
mov
hlt
scas
fisttpl
push
sti
cmp
je
push
rcr
mov
add
mov
fs
xchg
and
out
adc
xchg
add
cli
mov
addr16
xorl
imul
mov
add
shlb
mov
hlt
das
sbb
dec
mov
aam
rclb
out
sub
push
loop
testb
rorl
xor
inc
push
cld
jnp
and
sahf
fs
cli
pusha
les
cli
sarl
dec
jb
gs
pop
add
ficoml
dec
pop
mov
add
mov
sbb
cmc
fldt
in
jge
loope
add
adcl
inc
adc
fiaddl
jg
jb
test
out
lds
xchg
iret
fldl
adc
fdivr
xor
je
push
sbb
cmpsb
xor
aaa
in
test
fnstenv
das
add
inc
ror
shl
inc
sub
mov
jne
cmove
xchg
mov
faddl
cmc
xchg
jo
or
or
jl
fs
dec
sbb
cli
and
std
inc
mov
negl
fldpi
pop
and
push
xchg
loope
mov
lret
inc
ja
movsl
imul
addr16
dec
jbe
loopne
adc
lock
xchg
add
bound
pmulhw
daa
xchg
mov
cltd
in
pop
cmpsb
scas
subb
es
leave
mov
fs
notb
repnz
mov
lock
cmpsb
lods
cmc
pop
ss
jno
mov
iret
daa
cld
call
inc
aaa
and
mov
pusha
sub
push
shll
and
rcrb
or
fisubl
or
add
rol
sbb
outsl
adc
push
xchg
mov
getsec
lods
pop
jns
or
pop
les
movb
jne
push
mov
xor
lock
movsl
daa
xchg
fcomi
jge
sub
sub
push
adc
push
sub
out
repz
mov
push
xor
or
mul
add
mov
push
movb
adc
pop
inc
nop
mov
xor
or
add
fistps
mov
incb
jmp
shll
adcb
or
mov
mov
ret
pop
cmpsb
add
jne
js
loopne
aam
jl
push
mov
pop
sar
and
push
sbb
cmc
in
ds
and
hlt
lcall
call
outsl
mov
scas
loope
fprem1
add
xor
xor
xlat
lds
fs
dec
insl
push
add
inc
push
adc
or
pop
dec
push
testl
mov
call
and
popa
loop,pn
rolb
push
sbb
jae
jp
mov
lret
sbb
sub
mov
sub
dec
jae,pt
test
fs
pop
pop
aam
dec
int
addr16
mov
cmc
mov
out
push
pop
sbb
mov
popa
cli
repnz
jo
testl
mov
cmp
inc
fs
loopne
addr16
popa
adc
add
es
dec
mulb
jo
or
or
scas
dec
push
add
sbb
add
clc
push
movsl
testl
outsb
cmp
push
jp
subl
cmc
pop
jbe
lock
xor
pop
mov
cmc
xor
std
push
add
in
int3
mov
dec
mov
add
loop
or
mov
push
repz
lods
inc
loope
ja
or
jp
sub
sub
inc
push
cltd
xchg
xor
icebp
movb
movsb
lea
gs
int
push
push
dec
shlb
xchg
jp
movsl
addb
lds
mov
insb
cmc
icebp
add
aas
mov
movsb
mov
jge
add
xor
testl
inc
push
int3
cmp
aam
pop
outsl
pop
lcall
sbb
or
orb
mov
xchg
gs
add
inc
cmp
fcoms
xor
and
insb
icebp
out
inc
arpl
test
out
lds
std
out
add
imul
scas
cmp
mov
jge
shl
inc
mov
adc
or
arpl
push
mov
xchg
pop
out
mov
cmp
inc
loope
adc
add
mov
mov
idivb
inc
repnz
push
sbb
mov
pop
clc
popl
xchg
test
ret
add
adc
incb
icebp
lods
outsl
inc
les
cmp
jne
ljmp
pop
dec
sbb
jbe
and
add
insb
jnp
lret
stos
push
mov
hlt
cmc
sti
ret
cmp
cmp
stc
jne
xchg
inc
adc
sub
aad
cld
sti
pop
outsb
lret
imul
mov
cmp
inc
xor
test
jle
addr16
cmc
testb
xchg
add
or
rcrb
cmc
mov
push
cmc
adc
cmpb
xor
jmp
aas
es
or
movsb
sbb
loope
gs
dec
adc
ss
xchg
or
push
cs
pop
inc
mov
inc
pop
push
in
gs
lcall
int3
dec
push
add
bound
test
movsl
addl
xchg
out
pop
popa
orl
cmp
xor
cmp
in
push
mov
pushf
or
aas
adc
add
jle
or
jle
cld
loop
in
mov
mov
rorb
add
mov
jmp
test
add
xor
or
cltd
bound
fstps
pop
inc
data16
pop
popa
fcmovbe
repnz
lds
dec
loope
outsl
mov
adc
and
add
dec
aad
in
mov
inc
popa
mov
adcb
inc
adc
adc
notb
dec
mov
xchg
jg
decb
lret
in
fistpll
ret
add
jb
cmpsl
shlb
mov
add
add
gs
loopne
pop
push
dec
xor
pop
or
or
mov
and
sti
push
jno
les
dec
sub
cmp
rcrb
inc
push
pop
idivb
int
lds
movl
add
aas
fucomi
fstpt
jno
mov
push
outsl
push
and
arpl
clc
inc
mov
imul
nop
add
in
pop
adc
mov
inc
movsl
push
add
push
pop
or
mov
push
jp
push
sarb
data16
fwait
push
push
cmp
test
out
test
stos
aas
lret
into
cld
push
in
jns
mov
cmc
test
in
daa
lds
stos
adc
fs
sub
arpl
add
loopne
in
dec
lret
add
push
mov
mov
add
cmp
push
out
iret
or
cmc
ja
jp
or
aas
loop
movsb
or
push
inc
stc
lods
add
jmp
mov
mov
imul
in
dec
das
xchg
sbb
outsb
gs
nop
rorl
shll
call
pop
adc
leave
xor
add
jl
repz
add
push
fwait
or
rclb
rolb
and
push
cld
inc
lock
flds
adc
test
mov
test
addr16
ret
cmp
cmpsb
add
call
roll
inc
fiaddl
fildll
xchg
cmp
loop
test
or
movsl
repnz
into
or
das
sahf
dec
mov
mov
xor
test
cmp
push
aas
cwtl
mov
or
xor
sub
popa
cmc
call
mov
xchg
sbb
in
cli
loopne
rclb
pusha
mov
sbb
movsb
aaa
incl
sbb
adc
dec
aad
cmc
pop
mov
or
enter
sbb
stos
xchg
ds
in
out
add
push
sbb
divl
push
add
andb
cmc
dec
adc
and
clc
rolb
sub
xchg
in
cmp
push
jp
add
adc
call
daa
inc
add
lret
push
adc
popf
jns
push
out
push
add
pop
cld
and
pop
and
xor
stos
lds
mov
jo
int
lock
inc
inc
push
dec
add
cmp
cmp
mov
les
inc
dec
or
in
or
mov
cld
iret
xor
leave
fs
mov
fdivp
inc
lcall
shlb
xchg
xchg
repnz
ja
sidtl
and
in
pushf
shll
ljmp
int
inc
movb
cmp
les
push
mov
data16
mov
imul
adc
shlb
pop
insl
aas
mov
inc
rcl
rolb
in
repnz
sbb
cmc
xchg
movl
add
push
aad
xor
repnz
jne
xchg
cmp
fisubrs
in
cmp
add
xor
xor
in
sahf
into
or
pop
testb
test
fs
dec
ret
and
gs
sbb
lret
stc
in
add
lcall
and
adc
mov
sub
test
notl
add
in
or
mov
cli
jne
cmp
add
and
add
mov
outsl
add
xlat
popf
mov
ljmp
cmp
jge
jns
pop
adc
imul
jecxz
mov
cmp
fldl
push
jbe
out
sbb
cld
movsb
testl
imul
sub
jge
push
mov
push
in
ret
push
add
test
pop
pop
and
imul
ret
iret
and
adc
jns
xor
sbb
mov
fldl
mov
adc
arpl
add
bound
sbb
inc
fs
sti
and
or
sub
mov
or
stc
insb
sahf
mov
xor
movsb
outsl
and
inc
sub
imulb
les
ret
add
mov
jo
and
mov
cmpsw
out
data16
lods
add
add
push
icebp
shl
pushf
cmp
mov
movb
dec
sub
and
sub
repz
push
pop
icebp
jl
pusha
imul
add
push
in
inc
sbb
imul
or
cmc
aaa
push
add
push
sbb
push
loop
sbb
imul
pop
sbb
leave
adc
jle
popf
in
data16
icebp
add
cmc
add
mov
pop
out
sbb
xor
xor
out
int
jl
add
jmp
mov
out
and
and
adc
push
dec
mov
pop
adc
insl
les
xor
mov
fsubl
push
shlb
adc
lds
pop
psubd
mov
push
mov
pop
aam
sahf
mov
cmpsl
insb
xchg
sbb
add
imul
ds
rolb
jne
or
montmul
cmpsb
pop
push
fdivrp
nop
push
lfs
sub
imul
mov
movsl
add
or
cmc
push
or
xchg
sbb
dec
imul
pop
lds
push
je
cmp
xchg
test
aas
pusha
aad
mov
mov
sub
pop
mov
js
movsb
adc
fidivs
push
aaa
fs
addr16
jo
add
gs
xor
or
arpl
adc
push
add
out
ret
int
push
xchg
add
ds
adc
mov
shl
push
test
dec
cmpb
xor
in
loopne
sbb
gs
aas
fnsave
add
pop
in
popa
loopne
lea
call
hlt
mov
add
test
sahf
imul
mov
andl
add
jg
rclb
sbb
cmc
ja
lahf
div
push
pop
xchg
add
loopne
push
dec
xor
in
mov
pusha
dec
jl
dec
repz
mov
xlat
mov
in
or
testb
dec
mov
or
sbb
xor
test
sub
and
in
lock
mov
xchg
popa
enter
mov
add
testb
dec
aaa
stos
and
imul
sbb
leave
ret
jo
add
dec
int
add
in
mov
lahf
sub
push
andl
aam
std
les
test
fiadds
enter
sbb
outsl
adc
lahf
bound
clc
inc
and
gs
push
adc
divb
stc
lds
ss
adc
les
inc
es
or
mov
in
xchg
out
add
mov
xor
testl
incl
mov
and
movsb
js
popf
in
xor
cmpb
push
pop
in
add
inc
push
ds
loopne
ljmp
insl
and
pop
jl
jl
int3
or
cmp
les
aam
cmp
push
cwtl
das
pop
push
fisttpl
daa
pop
dec
xor
push
and
out
add
mov
imul
add
push
xchg
jp
push
inc
mov
pop
js
movsl
lcall
aad
add
loope
adc
popa
lret
sbb
in
aas
call
les
gs
jl
inc
xor
icebp
iret
sub
or
ja
jo
and
test
out
icebp
add
shrl
mov
sub
testb
mov
sbb
insl
cmc
add
and
cmpsb
mov
add
mov
aas
jbe
dec
add
jae
shll
lahf
push
data16
xor
roll
into
dec
in
xchg
out
pop
push
push
adc
or
cmc
jmp
in
xor
adc
outsl
stos
icebp
add
test
jle
mov
mov
imul
ss
jbe
movsb
insb
int3
repz
xor
jb
push
xchg
pop
loope
aam
and
push
pop
add
rolb
jecxz
add
pop
imul
sbb
jne
and
xor
dec
push
push
mov
out
call
sub
cs
xlat
push
xor
aas
sbbb
mov
push
test
pushf
or
nop
dec
pop
lea
test
test
mulb
aad
cld
push
adc
add
and
xchg
dec
pop
xor
aad
out
test
push
push
mov
and
movsl
jb
in
icebp
data16
add
in
mov
add
add
stos
push
push
jnp
xor
pusha
mov
sbbb
xorl
shlb
xchg
adc
jle
add
cmpsb
xchg
push
adc
xchg
push
push
xlat
test
cmpb
out
idivb
aam
lret
adc
sbb
in
and
add
inc
cmc
mov
jmp
adc
insb
add
add
dec
sti
or
jecxz
fidivl
in
mov
psubq
sub
and
notl
js
add
mov
adc
mov
enter
aad
test
xorl
cmp
es
push
pop
leave
nop
js
or
inc
test
sub
fs
add
outsb
addr16
pusha
psadbw
lds
pop
fs
add
adc
int3
fs
mov
cmp
and
ret
inc
icebp
test
negb
int3
or
dec
add
inc
pusha
xchg
inc
or
icebp
int3
mov
test
inc
add
dec
mov
dec
pop
xchg
push
rcll
add
cmp
movsl
add
mov
fiaddl
cld
mov
aad
add
jp
cmp
xor
mov
inc
pop
es
inc
bound
mov
imul
cld
stos
out
inc
ss
aas
mov
in
mov
and
outsb
mov
add
adc
cmc
or
or
lahf
dec
add
push
cmp
cwtl
fs
movb
insb
movl
sbb
mov
jg
data16
insl
pop
dec
and
test
jl
jl
test
and
lods
int3
jl
xorb
cli
les
scas
bound
enter
pushf
sub
cmp
xchg
adc
pop
pop
add
mov
push
cmp
arpl
mov
mov
clc
or
ss
cwtl
push
loope
dec
or
out
out
jge
pop
lahf
mov
mov
mov
push
clc
xchg
mov
mov
jo
fwait
arpl
pop
or
and
fs
jne
push
inc
add
sbb
cli
loopne
neg
stos
ret
mov
sub
daa
lcall
imulb
dec
or
adc
in
les
inc
adc
xchg
insb
sbb
sbb
stos
clc
repnz
and
aad
xor
xchg
fchs
push
jae
push
rcrb
add
enter
pushf
shlb
mov
sbb
int
std
out
xchg
mov
js
imul
xor
aam
aaa
add
fwait
and
addr16
jno
push
inc
sti
int3
cmc
xchg
jmp
xchg
sti
rcrl
sbb
cmp
mov
sbb
mov
and
or
rorl
mov
sbb
xor
mov
repz
outsl
pusha
pop
add
divl
fs
sub
test
insb
and
popf
cmp
fldcw
inc
mov
add
movsb
cmp
mov
sub
imul
push
inc
mov
repnz
mov
dec
cmp
hlt
icebp
flds
push
sub
idivb
mov
test
xchg
loopne
mov
xchg
adc
stc
cmp
test
push
es
shrb
cltd
or
fs
es
ss
jecxz
iret
inc
insb
clts
push
or
repz
adc
dec
or
pop
lret
adc
shrl
mov
cmpsb
into
cltd
stc
in
push
dec
fs
and
pop
add
into
sub
add
pop
cmpsl
es
decl
stc
mov
push
mov
dec
pop
xchg
or
into
lds
lods
add
das
jl
cmp
mov
pop
pop
or
xor
push
add
pop
jns
sbb
dec
pop
bound
sub
in
add
fs
outsl
outsb
hlt
mov
icebp
sub
xchg
ljmp
mov
in
movsl
popa
imul
popa
aad
clc
out
aaa
adc
cld
mov
in
mov
daa
push
or
add
pop
repnz
sub
add
stc
test
rorl
pop
enter
or
push
or
jmp
aaa
cmpsl
sub
or
mov
sbb
cli
mov
ds
mov
add
jge
cmpsb
and
push
or
dec
push
movsl
add
xor
adc
inc
add
loop
lods
xor
and
aad
iret
sub
xor
mov
call
ret
add
std
xchg
mov
fistps
add
xchg
aas
decb
xchg
inc
jns
aam
jne
and
fiadds
or
mov
out
inc
jp
push
divb
in
movl
fs
pop
mov
xchg
test
sbbl
cmpb
testb
xor
in
jbe
out
xor
gs
hlt
cmp
out
inc
in
bound
cmc
adc
icebp
lahf
and
ds
lret
push
mov
sbbl
or
xor
add
lds
testb
rolb
add
out
xchg
pusha
jecxz
inc
push
inc
jbe
imul
fcompl
or
ss
testl
enter
cld
cli
add
sub
hlt
cmp
stc
jle
sub
sbbl
int
adc
adc
xor
and
add
push
cli
or
lret
aad
add
imul
and
shl
mov
push
je
loope
in
rorb
pop
dec
sbb
push
imul
fldl
or
cmp
pop
mov
fimuls
sub
add
cmp
xor
mov
jmp
fs
push
mov
ja
rcrl
xor
loope
add
push
sbb
dec
mov
xor
or
shrb
push
push
aaa
mov
mov
arpl
inc
sbb
add
pop
mov
pop
es
out
sar
add
movsb
loop
fs
cmp
fstps
mov
inc
sbb
xchg
jno
sub
jmp
push
jmp
xor
jae
add
sub
mov
scas
into
mov
mov
pop
test
push
add
inc
add
mov
mov
sub
lret
jle
push
pushf
call
pop
add
or
mov
fwait
add
adc
idivb
ss
jne
test
movsl
aaa
clc
or
loope
jns
or
imul
stc
add
sbb
insl
in
mov
push
inc
repnz
mov
inc
pop
movl
and
int
aaa
or
cmp
out
movsb
std
jne
push
cmc
cmp
adc
cld
ds
or
std
mov
aad
cmc
into
inc
stc
sub
dec
mov
sub
add
and
mul
or
lret
cltd
add
insb
mov
mov
xchg
mov
add
in
inc
push
mov
cmc
jg
sbb
sub
mov
outsb
fisubs
jge
push
rcll
call
stc
add
sub
xchg
mov
jbe
testb
nop
aaa
xor
xlat
popf
nop
add
out
ss
std
cmc
add
in
dec
inc
inc
loope
push
adc
insl
mov
ss
xchg
adc
sbb
aaa
cmp
adc
dec
aad
loop
ja
cmp
ficoml
jge
jns
add
maxps
or
mov
gs
ds
jno
xor
out
jge
add
lret
xor
and
ret
jg
cld
sahf
call
popa
fs
call
stc
push
push
dec
inc
pop
in
xchg
mov
add
pop
lods
cwtl
lock
push
jbe
push
ja
or
sbb
roll
cmc
cmc
cmp
shr
popa
jb
add
xlat
inc
push
inc
std
jl
mov
sahf
testb
push
out
or
mov
sub
adc
push
add
push
stos
daa
stos
fmull
and
fnstsw
jb
idiv
jecxz
cmp
fs
into
add
nop
jns
push
mov
or
and
pop
ret
push
add
inc
cmp
outsb
jnp
push
aam
popl
out
jecxz
pop
sub
add
push
adc
sbb
sub
pusha
add
les
fs
into
mov
add
or
hlt
repnz
jb
jae
stos
xchg
dec
sbb
or
mov
loope
pop
loope
jno
pop
jnp
popa
ja
repz
out
nop
out
mov
add
xor
rorl
add
popa
cmp
jne
add
movd
mulb
sub
add
fwait
loop
and
and
sbb
pop
repz
in
sbb
int3
mov
addr16
sub
cld
es
inc
and
sub
and
inc
dec
mov
cmp
or
negb
fsts
nop
mov
dec
idivb
dec
mov
incb
fdivr
inc
out
in
ficoms
add
jne
repz
xor
negb
subl
inc
cmp
out
jmp
in
into
xchg
mov
jp
cli
imul
ror
adcl
push
fwait
adc
fcmovnbe
inc
dec
dec
or
test
cmc
lcall
sub
test
fnstsw
in
inc
aad
pop
cmc
das
data16
imul
lcall
inc
cmpsl
push
sub
std
aas
inc
sub
add
daa
mov
push
enter
in
std
mov
or
sahf
push
mov
add
imulb
popf
insb
and
pop
test
sbb
out
add
aam
aad
dec
jecxz
xor
clc
adc
pop
add
cmp
icebp
test
adc
stc
cmp
jb
std
push
sub
cmp
idivb
mov
mov
jns
loope
xchg
add
aaa
jmp
fiadds
imulb
add
xchg
gs
pushf
pop
adc
imul
and
ret
movl
out
loop
fwait
mov
pusha
sbb
loopne
or
jl,pt
int
in
inc
sub
test
aam
movsb
loopne
aad
add
out
sbb
xchg
pop
shrl
out
scas
lahf
rcl
mov
test
pop
iret
fsubs
sarb
lds
mov
cmp
imul
xchg
jbe
mov
jp
or
or
jne
lods
sub
inc
cmp
lock
inc
stos
push
or
mov
push
and
inc
sahf
rorl
iret
test
popa
inc
call
iret
push
lahf
out
loope
xor
out
test
jle
add
jecxz
cld
inc
fs
scas
mov
sbb
sub
cmp
movsb
aaa
push
inc
out
mov
xchg
rorb
mov
fcoms
cld
sub
cwtl
jge
adc
adc
stos
into
idivb
push
icebp
out
mov
mov
outsl
ljmp
mov
pop
repnz
jbe
jg
add
movb
pop
js
push
inc
outsl
outsb
fimull
sub
push
pop
jno
fisttps
fdiv
xor
data16
in
push
stos
into
hlt
cmp
pusha
or
flds
sbb
dec
nop
sub
push
inc
dec
xchg
jg
jp
inc
adc
jnp
js
and
test
mov
enter
push
repnz
je
loopne
lret
add
jb
push
sub
sbb
xor
enter
inc
pop
pushf
ret
data16
sti
scas
gs
movsb
in
mov
xor
in
add
dec
fcoms
sub
lea
and
cli
adc
or
addb
leave
sarl
cmp
cmc
mov
add
fs
ret
xor
test
xchg
mov
repnz
subl
in
call
arpl
lret
add
fs
clc
pop
je
repnz
add
and
in
add
popf
idivb
sbb
add
or
idiv
add
push
fwait
xor
in
shl
xor
and
xchg
jbe
das
mov
jbe
jne
inc
dec
inc
cmp
cld
dec
or
and
mov
jno
rcrl
mov
roll
jb
ljmp
mov
adc
repnz
test
test
out
in
dec
loopne
or
adc
push
jne
xor
lcall
fs
ror
lods
jae
cmp
mov
mov
idivb
xchg
mov
cmp
cld
pop
adc
mov
xchg
insb
push
jo
mov
add
cmp
sub
ret
sub
mov
add
test
push
jmp
mov
ss
cld
sub
and
add
inc
adc
pop
and
mov
test
imul
std
frstor
sbb
mov
jmp
ds
pop
add
scas
pop
and
frstors
xorl
add
xor
andl
xchg
call
mull
dec
add
fiaddl
shl
in
ja
sub
push
out
and
js
js
dec
dec
testb
dec
mov
out
push
inc
push
push
xchg
hlt
dec
mov
cmp
add
or
das
scas
add
cltd
push
mov
pop
in
add
popa
mov
mov
enter
rep
add
xchg
std
call
fs
cld
in
push
negl
add
inc
adc
push
fs
cmp
test
lahf
or
into
cmc
mov
out
push
sbb
cmp
mov
dec
fsubs
outsb
pop
fnstenv
or
dec
xorl
ss
mov
ss
jl
add
jmp
jbe
jne
jae
hlt
scas
roll
mov
jne
fisttpll
sub
add
arpl
cmp
scas
in
push
ret
mov
sub
fiadds
cmp
sub
inc
mov
in
and
cmc
xchg
cmp
les
call
mov
add
jno
push
mov
or
pop
sub
pusha
jbe
cmc
and
jae
jbe
xor
incb
and
pop
shll
push
dec
xchg
jbe
ja
or
shrb
cmp
cld
ja
and
dec
in
jbe
mov
add
in
je
cmc
cmp
in
mov
cmpsb
mov
cmc
cmp
mov
and
jbe
jle
testb
leave
stc
scas
mov
out
xchg
xchg
push
add
add
out
aaa
add
lahf
rolb
mov
les
mov
mov
nop
and
adc
adc
sti
mov
fcmovb
push
push
cmpsb
nopl
rcrl
clc
push
cltd
adc
test
popa
clc
in
cmpsl
xchg
das
xchg
add
pop
inc
leave
cmp
add
sbb
pushf
mov
or
fs
sbb
push
cmc
repz
fs
jmp
xchg
add
push
mov
lock
idivb
xor
imul
mulb
xchg
divb
add
dec
mov
loopne
mov
mov
xchg
adc
mov
rolb
roll
aaa
cmpsl
sbb
popf
test
in
cmc
sbb
pop
aad
xchg
stc
adc
pusha
mov
pop
subb
test
cmp
fldenv
or
xchg
outsb
and
je
lock
sbb
jmp
in
mov
inc
repz
cmp
push
cmp
pusha
sub
and
pop
jo
sbb
mov
add
sbb
push
shl
dec
movsb
add
add
push
shrb
fisubs
popa
add
jb
fwait
testb
or
addr16
pop
pop
aad
mov
movsl
push
cmpsb
insl
mov
mov
mov
int
xchg
jp
pop
mov
stos
int3
and
inc
pusha
mov
sub
movsl
jae
hlt
mov
stos
aas
pop
cmp
jp
jp
bound
add
gs
std
add
cmp
stos
unpckhps
xchg
push
mov
aad
push
inc
addl
mov
js
rclb
jno
push
or
mov
cmc
push
pop
int
je
push
add
insb
data16
out
ror
dec
xchg
jge
out
add
pushf
gs
fldt
es
pop
adc
mov
mov
add
aaa
leave
imul
and
mov
sti
leave
je
add
adc
and
idivb
movaps
and
jg
push
mov
test
or
push
jnp
idivb
xorb
movsb
sbb
mov
push
pop
hlt
das
loop
pop
or
mov
add
add
aad
es
xchg
add
imul
inc
cmp
cmp
add
fimuls
sbb
mov
cmc
push
das
dec
lret
cmp
aas
adc
push
jne
dec
testb
insb
sbb
negb
cld
add
das
push
cmc
mov
mov
cmc
mov
cmc
popa
dec
imul
add
sbb
jg
mov
je
fs
mov
adc
xchg
cld
lcall
adc
cmp
xorb
mov
fists
xor
push
roll
aaa
clc
stos
and
xlat
fs
cld
pop
nop
pusha
imul
loop
and
and
push
xchg
movsl
adc
jecxz
popa
mov
sarl
cmc
in
test
jne
ficoml
push
outsb
or
cmp
adc
test
add
adc
adc
jb
imul
cmc
out
inc
mov
pop
add
out
mov
daa
mov
sbb
sti
pop
inc
push
divb
jecxz
push
push
and
in
aaa
push
js
ds
and
add
jecxz
sbb
adc
dec
mulb
notb
sbb
adc
jno
push
mov
aam
add
loopne
add
xchg
jle
sbbl
or
inc
push
xchg
inc
int3
cltd
adc
mov
or
cli
sub
push
jbe
xor
popf
fldenv
testb
out
imul
add
xchg
sub
pop
cld
sbb
mov
icebp
adc
mov
mulb
cmc
inc
xor
sub
sub
cmp
pop
inc
cltd
lcall
bound
jmp
decb
adc
xchg
pop
and
sub
rorb
rol
dec
add
pusha
mov
pop
stos
or
in
push
xor
gs
mov
jae
movsb
stc
test
stos
add
adc
leave
hlt
push
sbb
jp
pop
lea
pusha
lret
push
fistpll
cmc
add
enter
fists
mov
cmp
or
add
inc
je
in
sarl
repnz
jg
icebp
test
addl
shl
je
sbb
or
jge
test
repz
push
aam
daa
pop
adc
mov
push
leave
adc
fs
dec
out
enter
sbb
push
add
iret
ret
pop
es
dec
or
dec
inc
ret
adc
out
pushf
pop
in
mov
jp
ljmp
js
sbb
sbb
or
inc
pcmpgtb
movsb
aas
or
imul
popf
int3
xor
inc
sbb
bound
es
ds
scas
sti
xchg
lods
xlat
shl
sti
inc
inc
add
adc
fcomip
push
push
dec
mov
adc
xor
leave
pop
aaa
loope
std
es
insb
jmp
push
shll
fisubs
jge
repz
pop
out
aam
mov
mov
ret
cld
cmc
or
ljmp
push
imul
mov
mov
push
test
xor
dec
rcl
push
ret
mov
orl
sub
mov
pop
stc
sti
xlat
xchg
aaa
divb
and
adc
sub
add
scas
jne
add
jmp
insb
test
push
sbb
add
hlt
mov
jns
in
pop
or
lods
out
and
cs
loope
push
test
fs
sub
xor
mov
pop
sub
in
sub
testb
jmp
mov
aad
sub
out
dec
or
or
sub
push
adc
push
loopne
mov
sbb
std
inc
jo
sbb
clc
sub
iret
stos
mov
dec
xor
in
pop
add
add
decl
mov
xchg
fs
mov
test
pop
pusha
sub
and
cmp
add
lea
int
sbb
mulb
and
insb
jl
or
fldcw
cmpl
pusha
test
fnstenv
pop
roll
hlt
jb
out
je
jmp
lahf
stc
pop
xchg
lea
push
add
add
popf
and
mov
into
add
sahf
mov
out
inc
das
and
fs
add
dec
add
lds
adc
mov
je
gs
inc
gs
ds
mov
int3
scas
inc
movsb
hlt
stc
hlt
fs
push
outsb
xchg
fmulp
insb
add
xor
scas
repz
adc
fcomps
add
hlt
mov
push
in
repz
jmp
cli
xchg
push
mov
shl
dec
lock
xchg
not
in
in
mov
in
cltd
out
std
sub
dec
push
jge
pop
cmp
fldenv
or
js
mov
push
add
repnz
pushf
or
aad
mov
mov
add
add
aas
es
push
mov
cmc
cli
mov
bound
push
mov
into
in
add
roll
insl
out
add
sbb
imul
movsl
lods
pop
fildl
xorb
das
movsb
sti
jmp
test
push
push
fisubl
cmp
fs
ds
hlt
cmc
add
fsub
xorl
adc
aaa
lods
or
add
dec
sahf
shll
jne
repz
ficoms
in
enter
push
dec
testb
xor
fs
test
outsl
shr
int
add
ss
out
scas
cmc
cwtl
mov
fidivl
sub
std
loope
cmp
ljmp
push
aad
cmp
pop
cld
dec
pop
gs
adc
bound
lea
loopne
and
and
cmp
incl
jbe
addb
popf
pop
aad
sub
icebp
jp
add
xor
jno
add
pop
fs
adc
leave
sbb
fsubrs
in
xchg
or
fs
shll
negb
add
or
stos
insl
stc
jo
xor
inc
rol
aad
pop
adc
in
xor
inc
jecxz
divl
inc
call
jae
movsl
dec
hlt
add
sub
add
ljmp
adc
sub
adc
int3
cli
or
call
rcrb
adc
loope
sarl
pop
adc
jns
xchg
cmp
je
imul
and
pop
sbb
sbbb
mov
and
push
inc
outsb
dec
add
filds
es
push
in
push
call
test
cli
cmp
add
mov
dec
inc
add
lea
lock
push
inc
js
movsb
mov
xor
or
inc
pcmpgtd
jb
push
sub
in
mov
in
cmpsb
mov
and
rolb
fists
ret
loopne
andb
mov
adc
inc
pop
mov
mov
inc
dec
xor
lods
or
push
jp
sar
mov
in
xor
push
push
and
mov
loopne
mov
cwtl
inc
andl
movsb
movsl
ficoms
ja
cmc
lcall
out
mov
mov
in
add
std
mov
xchg
mov
pusha
rorl
lods
inc
imulb
call
aad
push
add
mov
mov
push
sti
or
fcomps
or
int
in
test
mov
repz
cmp
push
sbb
sub
jne
arpl
adc
mov
push
adc
outsb
icebp
mov
inc
add
adc
jle
loopne
push
scas
sub
out
xlat
or
gs
fbld
push
loopne
jns
push
dec
iret
jbe
jno
xchg
add
lock
mov
jbe
das
out
or
xchg
push
stos
push
inc
push
xchg
into
out
adc
test
jmp
ss
and
in
sub
insb
mov
ja
ja
das
ja
lcall
xchg
add
inc
sbb
mull
gs
add
aam
mov
ja
not
mov
cmp
push
jecxz
daa
adc
pop
out
pop
mov
mov
push
sbb
jmp
dec
mov
scas
in
xor
test
enter
add
insb
cli
cwtl
sbb
aad
out
add
and
dec
cli
iret
xchg
cmp
sti
or
test
add
pushf
add
daa
in
jg
cmc
fists
jp
xorb
ljmp
inc
or
sub
in
pushf
add
sub
insb
push
test
mov
div
xor
add
or
lods
mov
or
inc
pop
lds
xchg
cmp
iret
mov
ljmp
push
pop
std
cmc
xchg
imul
call
loope
int
pop
dec
idivb
push
mov
aas
inc
mov
int
and
push
divb
cs
lret
xor
dec
pop
iret
mov
sti
lcall
push
aas
sbb
xor
imulb
sahf
adc
inc
fdivp
fs
mov
ljmp
xor
jnp
push
ja
insl
mov
lds
sbb
push
lods
cmp
jno
testb
jo
repz
xor
sub
in
mov
int3
addl
fs
dec
ss
lahf
popa
xor
mov
outsl
cmpl
pop
out
dec
pop
test
push
aam
mov
cmp
mov
xlat
nop
mov
in
push
movsl
fmull
cmp
or
fldcw
jae
and
push
rorb
and
jecxz
sbb
xor
dec
sbb
imul
xchg
inc
inc
mov
push
jmp
push
pop
cmp
cmpb
cmc
sbb
sub
insb
les
jl
xchg
movl
mov
mov
sbb
inc
add
dec
dec
ja
or
or
mov
mov
imul
xor
sti
inc
ja
add
cmp
fcomip
pop
or
std
jne
push
clc
rolb
scas
or
xlat
push
daa
mov
inc
test
fwait
push
ss
dec
or
add
adc
inc
mov
xor
jmp
push
xchg
add
sub
ds
clc
xor
sbb
dec
loope
xchg
add
inc
ficomps
pop
call
les
cmpl
nop
or
fldt
pop
push
fcoms
dec
push
mov
outsl
or
daa
mov
dec
cli
enter
popa
cld
push
push
inc
xchg
add
pop
sar
rolb
popf
push
lods
notb
cmpsb
xchg
mov
in
inc
xor
jg
xchg
fsubrs
add
dec
int
jne
jb
insl
dec
lods
xor
mov
dec
in
fcomps
push
aad
call
mov
iret
push
push
mov
test
out
mov
aas
mov
popa
mov
int3
push
push
popa
mov
out
push
or
cmpsb
testb
add
sbb
mulb
fnsave
add
aas
and
or
mov
out
cli
int
jmp
push
push
out
sub
xchg
add
and
add
clc
jge
enter
jne
pusha
test
gs
popa
cmp
clc
dec
sbb
dec
push
sbb
mov
out
xchg
shrl
pop
push
push
in
lea
lods
lret
lock
adc
add
fistpll
ss
lods
sti
rorb
add
cli
lea
out
fwait
loop
xchg
imul
dec
imul
dec
xchg
or
jl
jae
xor
push
xor
jmp
or
sub
inc
hlt
dec
cmp
add
lahf
inc
imul
lret
imul
je
push
and
dec
shlb
push
sbbl
dec
lret
add
repz
add
inc
popa
cmp
sbb
clc
add
cmp
push
xchg
cmp
and
cmc
bound
sub
push
inc
fsubr
pusha
or
fisubrs
jb
cmc
cli
popl
add
mov
cmc
add
stc
fnstenv
push
pop
loop
loop
cmc
cmpsl
push
mov
or
inc
sub
bound
pusha
push
add
jns
pushf
int3
xchg
add
lahf
push
and
xchg
pop
into
fs
cmc
das
andb
inc
mov
mov
gs
sub
cmp
xor
outsb
jbe
mov
mov
testb
xchg
pop
mov
nop
xchg
int3
pop
nop
push
add
aam
scas
mov
or
xchg
add
testb
repz
jmp
push
arpl
int3
les
popa
inc
cmp
std
sub
cmp
fs
or
cmp
add
mov
mov
pushf
test
xor
push
ret
or
fs
popa
hlt
orl
push
cmp
divl
inc
pusha
cmp
das
sahf
addl
incb
pop
push
rcrl
cld
add
pusha
xlat
cli
test
out
xor
movl
je
push
pop
ljmp
xchg
mov
gs
mov
mov
xchg
repz
pushl
jo
lgs
jns
add
in
push
sarl
adc
popa
inc
jle
add
push
sarl
clc
repnz
push
adc
unpckhps
test
add
ret
cli
sti
sub
ja
testb
imul
or
or
pop
imul
cmpsb
sub
insl
jbe
pushf
stc
mov
push
in
add
jb
dec
fmuls
push
or
sub
insl
pop
movsl
xor
push
in
xor
xchg
cld
pop
cltd
and
fsubl
inc
push
shlb
jl
xchg
aam
adc
iret
cmp
adc
and
push
pop
ja
cld
movsb
cmc
cmpsb
mov
sbb
xchg
leave
add
popa
xor
add
pop
out
jp
je
sti
jae
shlb
outsb
mov
jp
fsubr
cmc
aas
adc
out
cmp
push
mulb
xlat
adc
lds
push
rorl
hlt
cmc
insl
sub
dec
and
popa
cs
cmp
fisttpll
call
add
or
testl
xor
pushf
jbe
xchg
or
push
xchg
int
flds
dec
jmp
in
daa
mov
dec
mov
int3
insb
adc
fs
aad
mov
mulb
fstl
sub
mov
and
sti
xchg
push
sbb
cmc
xor
jo
gs
repz
add
add
mov
lret
xlat
lods
pop
cs
fsubrp
gs
cli
add
sub
dec
sahf
sahf
test
pop
add
fidivl
mov
add
adc
pop
xor
sbb
add
pushf
lahf
popa
js
add
js
iret
orb
dec
lret
sbb
push
jno
mov
cli
add
pop
popf
xchg
cmpsb
adc
pop
mov
rcll
dec
xchg
outsl
sti
sbb
lods
jae
and
icebp
mov
nop
xchg
add
inc
cli
jns
arpl
arpl
jo
xchg
add
xchg
or
pop
mov
dec
push
add
add
insl
mov
push
xchg
cmpsb
pop
adc
mov
add
fiaddl
cmp
dec
sbb
add
in
andb
push
movsl
or
enter
and
inc
push
roll
cmp
inc
aas
jge
int3
push
out
ret
aad
movsl
ret
mov
mov
hlt
add
aad
pop
sbb
ds
movsl
inc
lods
shl
aas
jl
jbe
dec
imul
pop
adc
stos
js
push
add
fbld
sub
rorb
and
std
test
add
arpl
lahf
in
or
jge
push
sahf
icebp
inc
cld
jle
push
rcr
sahf
pop
add
push
jmp
div
pop
int
fld1
cld
jne
sub
pop
out
pusha
mov
loop
cmpsb
loop
add
cmp
and
push
sub
js
scas
xor
sub
adc
adc
mov
mov
mov
idivb
lcall
cmpsb
xchg
out
lahf
imul
jle
push
xlat
dec
push
push
adc
jl
fsubrs
push
cmc
out
pop
sub
adc
inc
push
inc
rcrb
inc
das
cmpsb
out
lahf
ficompl
or
std
add
in
ret
cmc
sbb
scas
mov
push
pusha
sub
shlb
sbb
jecxz
and
xchg
cmp
call
pop
scas
in
loope
sub
rcr
push
dec
lcall
out
and
cltd
inc
aas
push
insl
xor
movsb
shlb
or
out
mov
inc
inc
push
xchg
push
or
pop
push
mov
xor
loop
mov
pusha
add
in
in
cmc
pushl
push
addr16
add
mov
ficoml
repz
cmpsb
sub
pop
inc
xchg
add
mov
xchg
cmc
ss
cltd
xor
jno
add
dec
sbb
cli
data16
repnz
or
ficoml
adc
call
adc
sar
add
push
jp
lods
xchg
nop
loop
mul
add
jmp
iret
cmc
inc
cwtl
mov
sub
arpl
or
push
mov
in
pop
negb
pusha
insl
push
sub
xorl
bound
pop
mov
rolb
push
repz
sub
push
mov
push
insb
add
xor
add
pop
add
repnz
lcall
mov
mov
and
lods
repz
add
aas
leave
sub
pushf
mov
and
fdivp
mov
stos
mov
icebp
mov
cmc
pop
dec
lret
gs
mov
push
jmp
stos
iret
mov
out
add
repz
push
jbe
push
add
xchg
jp
inc
or
cwtl
aam
roll
mov
aaa
jae
aam
push
xchg
cmp
or
scas
shl
adc
roll
iret
roll
jns
fs
or
mov
orb
mov
or
cmp
mov
dec
mov
inc
daa
nop
in
mov
sub
pop
cmpl
lods
popf
adc
ficompl
lock
cwtl
negb
dec
push
cli
add
push
mov
pop
push
push
daa
testb
mov
aas
dec
test
test
xchg
lods
loop
pop
and
mov
in
add
fs
mov
adc
aad
or
sub
in
cmp
shrl
adcl
xchg
jge
adc
outsb
pusha
imulb
test
add
pop
xchg
popa
pop
arpl
or
jbe
or
mov
xor
subl
push
cmp
sub
in
add
scas
mov
dec
cld
push
jecxz
push
push
stc
loop
loope
and
push
push
cmpsb
cmc
cmp
adc
xor
aas
fisubl
pop
mov
add
scas
je
xor
push
or
pop
or
pop
enter
fxch
movaps
adc
jne
or
mov
mov
xor
jp
xchg
adc
data16
leave
sbb
inc
pop
adc
mov
ds
out
sbb
popf
pop
mov
mov
rolb
sub
jecxz
out
cld
loope
insb
mov
push
enter
or
inc
push
xchg
mov
cmc
xchg
xor
mov
add
add
pushf
icebp
xchg
aad
and
lret
clc
clc
cld
pushf
push
sahf
cli
push
sbb
lret
push
test
cmp
lds
inc
add
or
mov
roll
push
dec
mov
inc
daa
cmc
add
ret
cmpsl
sbb
jmp
pop
and
scas
dec
mov
into
mov
imul
mov
test
call
mov
fnsave
jl
cli
in
and
sbb
movsl
ffree
dec
adc
out
cs
mov
xor
add
aad
adc
cmp
inc
add
mov
jl
mov
je
in
mov
adc
mov
add
mov
mov
and
sbb
fs
mov
inc
push
add
inc
aas
mov
and
xor
inc
loopne
inc
hlt
jmp
add
mov
iret
jmp
mov
adc
or
call
orb
inc
sub
mov
ret
call
xor
cmp
punpckhbw
and
test
in
popf
daa
call
int3
hlt
cmp
iret
inc
roll
sbb
jns
push
pop
inc
std
xchg
push
aas
xchg
or
pop
jle
das
ret
push
sahf
dec
out
adc
cwtl
push
cmp
mov
in
push
inc
cwtl
hlt
pop
insb
add
mov
adcl
xchg
sub
in
sub
jo
add
clc
push
aas
inc
add
int
add
sub
mov
addl
frstor
mov
pop
add
sub
jge
inc
insl
in
dec
push
daa
test
pop
xchg
fiadds
inc
outsb
int
fs
mov
sub
and
nop
mov
push
iret
int3
bound
ret
xchg
pop
add
mov
sbb
fiadds
and
cli
add
pop
and
test
int3
jne
out
fldl
add
repnz
push
dec
pusha
ss
pop
cmp
and
out
test
mov
cld
dec
xor
popaw
push
in
cmp
adcb
mov
sbb
test
aad
xchg
push
xchg
sub
jo
dec
jmp
jge
sub
cltd
xchg
shlb
pop
out
push
jp
hlt
inc
flds
and
inc
rclb
arpl
mov
sub
fs
dec
cmp
inc
neg
cld
xchg
dec
cmp
movsb
add
inc
clc
sbb
add
lock
testl
data16
out
xor
push
imul
mov
add
inc
arpl
jo
scas
jno
push
stc
divl
xor
inc
lcall
cmp
cmp
mov
scas
sub
and
add
pop
leave
xchg
adc
jbe
jecxz
out
movsl
or
mov
sbb
xlat
rcrl
into
and
aad
add
add
stc
inc
add
ds
je
push
scas
mov
pop
icebp
aad
xor
aam
xchg
mov
sti
adc
lcall
adc
pusha
add
cli
cmp
jg
dec
sub
clc
inc
and
pop
dec
cltd
sub
lock
daa
wbinvd
fwait
add
jge
notb
std
jbe
add
bound
jecxz
jmp
imul
out
in
iret
in
cmc
fldenv
std
or
add
or
jmp
lret
fsubrs
sub
cli
test
push
shlb
and
adc
sti
mov
mov
inc
pop
movb
add
icebp
nop
imul
mov
adc
sbb
fs
add
pushf
loopne,pn
and
or
push
aad
jle
mov
sbb
push
std
fs
adc
pusha
or
pop
push
ja
adc
loope
shll
cmc
xchg
lods
test
fmull
xchg
add
mov
lock
imul
cmp
sub
js
xlat
pop
fldt
add
inc
andl
repnz
clc
push
inc
inc
add
bound
or
xor
stc
push
adc
jp
clc
cwtl
sub
cmp
js
insl
test
jno
add
in
clc
mov
sub
adc
add
arpl
xchg
add
pop
test
fsubs
mov
mov
inc
testl
mov
sub
lods
lds
out
and
mov
incb
sub
call
or
ss
sub
cmpsl
outsl
repz
idivb
test
and
and
adc
mov
and
mov
pop
das
rcl
pushf
jb
sub
mov
in
mov
insl
cmp
add
or
rcl
loope
jbe
test
lods
lcall
rcr
insb
mov
pusha
rolb
fistpl
sbb
mov
pop
addr16
or
lcall
lahf
rclb
and
jno
movsb
xchg
mov
test
mov
sub
clc
pop
pop
ljmp
invlpg
in
inc
nop
stc
jmp
add
dec
add
dec
nop
decl
add
push
popa
xchg
mulb
and
aaa
rsm
jo
sahf
jg
inc
ds
mov
sti
xlat
add
cmp
std
cmp
cmc
mov
and
into
pop
idivb
hlt
jle
adc
sbb
sbb
fs
into
mov
and
fsubs
jne
pop
jp
jae
jge
mov
lock
jmp
push
jo
add
pop
cwtl
shl
and
sub
dec
add
lret
or
sahf
mov
sbb
mov
xor
sahf
add
mov
xchg
std
hlt
aad
and
pop
inc
adc
sub
add
out
aam
je
sti
mov
cwtl
test
fdivrs
fiaddl
mov
stc
mulb
lret
loope
daa
in
sbb
add
in
adc
push
daa
or
fdivs
sti
pop
test
push
xor
inc
andb
adc
sbb
mov
jbe
out
jae
inc
add
nop
mov
push
gs
gs
fs
sub
adc
push
aam
pop
or
dec
fldenv
push
jmp
or
or
fmuls
fidivrs
mov
fistpl
mov
xchg
idivb
popl
mov
inc
mov
icebp
mov
sti
roll
push
or
arpl
jmp
inc
insl
out
test
add
pop
cmp
pop
mov
xor
ss
xchg
lret
cmc
adc
cltd
fadds
ss
in
mov
xchg
int3
jno
lcall
test
sbb
fildl
sbb
xor
popa
adc
insl
and
lea
nop
es
xor
enter
sbb
xchg
push
add
or
mov
fs
stc
dec
fildll
dec
add
in
popf
mov
mul
pop
insl
sbb
or
push
sbb
xor
fs
adc
repnz
int3
add
jmp
xlat
jl
es
leave
pop
dec
sbb
xchg
inc
push
adc
movsb
es
incb
call
jmp
dec
leave
rorb
sti
sbb
xchg
repz
sub
mov
mov
adcl
push
in
leave
mov
loop
cmp
add
xor
pushf
lret
hlt
in
in
sub
sbb
pop
decl
pusha
push
sub
jge
stc
enter
sub
fistl
mov
mov
mov
inc
dec
arpl
ja
and
sbb
test
mov
add
fldcw
and
shlb
push
or
jge
mov
in
xor
imul
sub
and
int
cld
mov
je
and
daa
int3
add
xchg
fimull
dec
pop
out
lcall
adc
pop
mov
arpl
sti
mov
rcll
outsl
aad
test
mov
cli
mov
inc
xor
into
sub
imul
mov
test
std
or
push
int3
mov
test
test
xchg
aad
lret
inc
or
jbe
xchg
jmp
aaa
mov
das
repnz
fadds
xchg
dec
les
push
cmp
pop
add
sar
add
add
outsb
inc
add
xchg
add
or
and
shl
push
mov
testl
in
adc
popa
icebp
xor
mov
inc
adc
inc
repnz
adc
xor
flds
pusha
push
pushf
pop
sbb
mov
lds
ficomps
testl
cmp
pop
pushf
repnz
mov
dec
cmp
push
adcb
cmc
sbb
mov
add
push
repnz
xor
xchg
sbb
jg
test
adc
mov
push
fisubl
test
adcl
add
inc
xor
ss
jecxz
js
nop
xchg
add
mov
out
mov
mov
xchg
add
cmpsb
adc
inc
inc
addr16
mulb
fmull
ss
fstpl
jmp
mov
int3
mov
imul
sub
fs
or
ret
scas
and
cmpsb
adc
outsb
adc
addr16
xor
pop
xchg
loope
push
dec
or
jne
mov
iret
inc
aas
jle
les
mov
jmp
aaa
pop
popf
push
cli
xchg
rorl
or
xor
inc
fnstcw
push
test
xor
arpl
or
ror
jmp
inc
xchg
arpl
rcrl
add
cmp
testb
andl
xor
scas
repz
mov
add
pop
sbb
cmp
add
fidivl
leave
loop
add
cli
jecxz
std
mov
les
lcall
imul
dec
jae
lahf
test
mov
and
lret
push
and
stos
testb
addb
std
jge
fs
sbb
push
lock
repnz
cld
pop
ret
pop
fldl
mov
jbe
clc
mov
clc
add
pop
cmp
addr16
popa
push
pop
inc
xor
in
lock
roll
xchg
inc
aam
add
jbe
lods
add
inc
call
fs
dec
adc
add
xor
adc
loopne
outsl
test
movsb
add
jbe
or
fidivs
mov
push
dec
cs
fnstenv
and
fs
into
inc
outsl
xchg
mov
jg
and
or
lea
push
or
sub
dec
incb
les
leave
jmp
mov
add
mov
and
sahf
lods
idivb
add
ljmp
mov
add
rcll
insl
pop
mov
data16
or
imul
jns
pop
imul
mov
cmp
in
fidivs
cmp
imul
cmp
xor
and
fldt
jl
test
mov
jl
sub
out
lea
pusha
pushf
adc
fcmovne
add
and
and
fs
push
cpuid
and
ftst
gs
or
daa
xor
sub
lcall
and
in
repz
sbb
xchg
and
cmp
xchg
cmpsl
and
jg
jmp
movsb
cs
dec
test
dec
push
xor
xor
add
or
je
cmpsl
in
roll
pop
inc
inc
cmp
push
add
insb
xor
insb
loop
aam
mov
cmc
into
jl
mov
add
lret
int
and
sub
pop
loope
cmpsl
stc
icebp
out
xchg
add
inc
mov
push
gs
xchg
adc
xor
movsb
mov
loope
iret
mov
cmp
sbb
lea
or
stc
add
arpl
xor
push
rolb
not
shlb
iret
xchg
jbe
aam
outsl
sbb
or
push
dec
push
push
xor
stos
jle
fwait
add
or
mov
cli
rcr
int3
or
pop
inc
push
sbb
lret
cmp
cmp
leave
loop
repz
inc
pop
sbbb
and
jb
adc
fs
fimuls
dec
add
out
cmp
movsl
test
and
sub
sub
cmp
lds
pop
in
mov
xchg
add
mov
add
or
inc
push
mulb
inc
sub
jno
push
andb
sub
inc
out
mov
or
cmp
and
xchg
rcl
andl
test
or
gs
or
sub
dec
es
mov
loopne
push
xor
in
mov
jne
cmp
fs
std
sub
shrl
fs
xchg
pop
mov
add
je
lret
push
imulb
ret
test
cmp
xcrypt-ofb
cmpsl
lods
mov
scas
add
sub
add
imul
add
jecxz
in
sbb
movsl
test
mov
jl
outsb
pushf
divb
gs
xor
cmp
push
cli
in
cmc
add
sub
aam
repz
inc
pop
push
sbb
imulb
notb
cmp
xchg
das
mov
test
xchg
mov
xorb
cmp
push
and
lea
lret
insl
jmp
xchg
fdiv
jmp
jbe
add
and
cwtl
mov
dec
pop
cli
jno
lret
outsl
aaa
xchg
sbb
repz
dec
or
andb
jo
pop
mov
push
sub
cmc
rorb
incl
fsubrs
sbb
std
mov
mov
or
inc
push
pop
test
push
add
dec
inc
xor
ljmp
inc
push
sbb
loope
enter
cmp
movsb
shlb
out
out
cmc
adc
sub
mov
pusha
and
insl
xchg
sub
and
addb
shl
jo
sti
lds
roll
pop
adc
lret
jnp
cltd
test
aam
rolb
es
lret
cmp
push
inc
jno
sub
cltd
test
shl
dec
mov
shrl
inc
cs
or
add
mov
adc
cmp
add
or
jmp
rclb
fs
testb
sub
loopne
mov
loopne
adc
add
lods
cli
movsb
arpl
push
pop
add
jbe
inc
clc
sbb
adcb
loope
dec
out
lds
pop
add
or
cld
aas
mov
jb
adc
pop
aas
xchg
shl
mov
adc
rcrl
ds
mov
movsb
out
out
icebp
and
jg
aad
add
imul
sbb
mov
insb
icebp
mov
faddl
ljmp
xlat
cwtl
test
enter
mov
sti
and
gs
inc
xchg
add
scas
sbb
or
mov
imul
add
mov
sub
xor
mov
push
xor
xor
or
or
push
sub
push
add
add
mov
mov
sub
and
add
sub
sub
mov
mov
sub
or
add
mov
sub
sub
mov
mov
cmp
je
sub
mov
mov
sub
test
jne
mov
mov
add
add
sub
cmp
je
mov
add
cmp
jne
sub
and
add
xor
add
mov
sub
and
cmp
jne
sub
test
je
cmp
jne
mov
cmp
jne
xor
cmp
jne
sub
sub
mov
mov
and
cmp
je
and
sub
and
mov
mov
and
and
sub
add
mov
add
mov
test
jne
sub
or
cmp
jne
mov
mov
cmp
je
mov
add
mov
sub
mov
add
add
and
test
je
cmp
jne
mov
cmp
jne
mov
mov
or
add
sub
sub
test
je
mov
cmp
je
sub
sub
sub
mov
mov
add
add
or
sub
add
sub
mov
mov
cmp
je
add
or
mov
cmp
je
add
mov
mov
cmp
jne
or
mov
mov
sub
add
cmp
je
mov
sub
or
mov
and
cmp
jne
add
cmp
je
mov
xor
sub
cmp
jne
sub
xor
test
je
sub
mov
sub
sub
add
add
sub
sub
test
je
mov
and
and
cmp
je
mov
add
mov
cmp
jne
add
add
sub
cmp
jne
sub
mov
add
cmp
jne
mov
add
add
xor
xor
mov
mov
add
add
mov
mov
add
cmp
je
and
mov
add
mov
sub
and
add
add
cmp
je
sub
and
add
and
add
cmp
jne
add
mov
mov
sub
cmp
je
cmp
je
mov
mov
xor
or
cmp
je
cmp
jne
cmp
jne
or
add
add
and
mov
and
add
or
test
je
mov
mov
add
cmp
je
or
cmp
je
sub
mov
or
mov
add
add
xor
cmp
je
cmp
jne
mov
add
test
je
sub
mov
cmp
jne
mov
add
sub
xor
add
add
and
sub
mov
cmp
jne
xor
add
sub
add
mov
add
cmp
je
test
jne
mov
add
mov
add
and
cmp
je
mov
add
cmp
je
mov
add
add
add
cmp
jne
cmp
jne
mov
sub
sub
test
jne
and
cmp
je
cmp
je
mov
xor
and
sub
add
sub
cmp
jne
mov
mov
and
cmp
jne
mov
add
cmp
jne
test
jne
sub
cmp
jne
mov
mov
cmp
je
xor
mov
or
add
cmp
jne
mov
test
je
mov
mov
sub
cmp
je
add
sub
mov
cmp
je
add
xor
sub
cmp
jne
mov
add
add
mov
add
add
sub
sub
mov
mov
cmp
jne
mov
test
jne
mov
sub
and
xor
sub
mov
cmp
jne
sub
xor
add
cmp
je
mov
mov
cmp
jne
mov
cmp
jne
and
mov
xor
cmp
je
add
mov
add
sub
add
add
sub
add
add
sub
add
cmp
jne
and
cmp
je
add
cmp
je
mov
sub
add
add
mov
cmp
je
sub
mov
mov
add
cmp
jne
add
call
mov
cmp
je
sub
cmp
jne
mov
add
mov
sub
add
test
jne
mov
mov
sub
add
add
cmp
je
sub
mov
mov
add
mov
add
cmp
je
cmp
jne
mov
mov
add
cmp
je
mov
xor
and
mov
or
cmp
jne
cmp
jne
mov
xor
cmp
jne
mov
cmp
jne
cmp
jne
and
mov
and
sub
add
mov
sub
add
cmp
jne
sub
push
push
call
mov
mov
mov
and
mov
cmp
jne
mov
or
mov
sub
add
cmp
je
add
sub
test
jne
and
sub
mov
mov
mov
mov
add
sub
or
or
add
cmp
jne
mov
mov
sub
add
sub
add
add
sub
add
cmp
je
mov
mov
sub
sub
add
and
and
mov
mov
mov
xor
add
add
add
sub
add
add
or
add
mov
or
add
add
add
mov
add
and
sub
add
and
mov
mov
sub
sub
add
add
cmp
je
mov
sub
mov
cmp
jne
mov
or
mov
sub
add
add
sub
and
mov
and
add
xor
add
sub
add
and
add
sub
test
jne
cmp
jne
cmp
je
add
and
mov
xor
sub
cmp
jne
sub
add
mov
cmp
jne
and
mov
cmp
je
sub
mov
sub
add
add
or
cmp
je
sub
mov
add
sub
add
cmp
jne
sub
xor
sub
add
mov
add
add
mov
xor
add
sub
and
sub
mov
and
xor
sub
add
add
or
and
and
sub
mov
mov
add
add
mov
sub
or
cmp
jne
xor
sub
mov
and
add
add
and
mov
add
cmp
jne
mov
mov
and
cmp
jne
add
mov
test
jne
mov
or
add
mov
or
or
add
cmp
je
cmp
jne
mov
cmp
je
mov
and
add
mov
mov
mov
add
test
jne
and
mov
test
je
mov
sub
and
mov
cmp
jne
sub
mov
sub
cmp
jne
mov
sub
mov
and
cmp
je
mov
mov
or
add
cmp
jne
and
mov
cmp
jne
mov
xor
mov
or
and
add
sub
and
sub
and
add
mov
call
mov
mov
sub
cmp
jne
mov
add
mov
add
sub
cmp
jne
sub
mov
add
mov
cmp
je
cmp
je
sub
mov
cmp
je
mov
cmp
je
and
xor
cmp
je
cmp
je
sub
cmp
jne
cmp
jne
add
mov
test
je
mov
mov
add
add
push
call
cmp
jne
cmp
jne
xor
mov
test
jne
add
mov
xor
and
cmp
je
mov
or
or
mov
and
sub
test
jne
mov
sub
or
mov
sub
sub
cmp
jne
and
mov
sub
cmp
jne
mov
add
xor
test
jne
add
add
cmp
je
sub
add
cmp
je
cmp
je
test
jne
mov
mov
sub
and
cmp
jne
sub
add
mov
sub
mov
add
and
xor
mov
add
sub
sub
add
sub
cmp
jne
mov
mov
test
jne
mov
add
xor
sub
cmp
je
sub
mov
sub
mov
cmp
je
add
mov
add
cmp
je
and
mov
mov
or
sub
sub
or
or
sub
add
mov
xor
add
sub
and
or
sub
sub
mov
test
jne
mov
add
cmp
jne
mov
mov
mov
add
add
cmp
jne
sub
mov
cmp
je
mov
or
and
cmp
jne
mov
and
mov
add
sub
cmp
je
sub
cmp
jne
mov
add
and
mov
cmp
je
add
cmp
je
add
mov
cmp
je
sub
mov
sub
mov
sub
sub
cmp
jne
mov
or
add
cmp
je
and
mov
or
cmp
je
add
cmp
jne
add
test
je
mov
sub
mov
add
cmp
je
cmp
je
mov
sub
mov
and
or
and
add
sub
and
add
sub
sub
mov
cmp
jne
mov
and
cmp
je
sub
xor
mov
and
sub
sub
add
and
cmp
je
mov
mov
test
jne
and
add
and
mov
cmp
jne
mov
sub
sub
cmp
jne
sub
add
cmp
jne
xor
add
xor
add
add
mov
sub
and
or
sub
add
sub
cmp
je
xor
mov
cmp
jne
mov
mov
sub
mov
sub
add
or
mov
add
mov
add
mov
cmp
je
add
add
add
add
cmp
jne
mov
sub
and
add
mov
cmp
je
and
mov
add
mov
cmp
je
mov
and
test
je
sub
mov
mov
cmp
je
add
sub
sub
xor
or
mov
add
sub
add
sub
and
sub
sub
and
test
je
mov
test
jne
mov
mov
add
add
mov
or
cmp
je
cmp
je
cmp
jne
and
sub
sub
sub
add
sub
cmp
je
and
mov
cmp
je
add
add
and
mov
mov
sub
cmp
je
mov
add
mov
sub
xor
cmp
jne
mov
mov
test
jne
mov
sub
sub
sub
add
sub
sub
cmp
je
add
mov
test
je
or
mov
sub
and
add
mov
sub
or
sub
sub
and
sub
mov
add
add
mov
add
sub
mov
test
je
add
mov
mov
or
sub
and
add
cmp
jne
add
sub
mov
cmp
je
add
xor
mov
sub
sub
add
add
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
and
add
sub
and
add
add
add
mov
add
or
add
sub
add
sub
sub
lea
sub
add
mov
mov
add
sub
add
push
mov
add
add
and
mov
cmp
je
mov
mov
sub
add
sub
sub
cmp
jne
sub
mov
add
mov
xor
sub
sub
test
jne
mov
sub
mov
cmp
je
mov
and
sub
sub
cmp
je
mov
cmp
je
add
add
sub
mov
cmp
jne
mov
add
mov
add
mov
xor
or
cmp
jne
cmp
jne
mov
sub
add
mov
and
sub
sub
cmp
je
add
mov
mov
sub
sub
cmp
je
test
je
mov
sub
mov
add
sub
sub
or
add
and
and
or
add
xor
or
xor
add
add
call
and
sub
mov
and
test
jne
mov
add
mov
add
cmp
jne
cmp
je
mov
cmp
jne
mov
mov
sub
mov
add
add
sub
mov
cmp
jne
cmp
je
or
mov
add
cmp
je
sub
or
mov
mov
mov
sub
or
cmp
jne
mov
cmp
je
sub
add
mov
sub
sub
add
sub
mov
mov
cmp
je
sub
and
mov
add
mov
shr
sub
sub
or
cmp
jne
xor
cmp
jne
xor
sub
add
mov
add
sub
mov
mov
xor
mov
add
sub
mov
cmp
jne
cmp
je
mov
mov
and
sub
test
jne
mov
add
mov
cmp
jne
cmp
je
sub
xor
add
and
cmp
je
sub
add
add
sub
add
add
call
cmp
jne
mov
mov
sub
cmp
je
sub
mov
cmp
jne
cmp
jne
cmp
jne
mov
xor
mov
sub
pushl
push
pushl
call
sub
mov
cmp
je
mov
add
addl
mov
cmp
je
mov
cmp
jne
add
mov
sub
mov
cmp
je
add
sub
cmp
je
test
jne
xor
mov
sub
sub
cmp
je
mov
and
sub
or
sub
mov
mov
cmp
je
mov
mov
mov
cmp
je
sub
mov
sub
mov
add
cmp
jne
cmp
jne
sub
mov
mov
add
cmp
jne
add
mov
mov
add
add
and
add
test
je
mov
add
and
cmp
je
and
mov
sub
cmp
je
sub
mov
mov
cmp
je
and
add
add
sub
sub
cmp
je
mov
mov
cmp
je
mov
mov
add
mov
cmp
jne
sub
cmp
jne
add
mov
add
add
mov
mov
cmp
je
mov
add
add
mov
add
sub
add
add
call
add
mov
mov
and
cmp
je
add
mov
add
mov
add
add
mov
mov
sub
sub
cmp
je
or
mov
add
mov
and
sub
or
mov
cmp
je
mov
add
or
mov
add
sub
sub
sub
and
and
add
cmp
je
cmp
jne
cmp
je
sub
cmp
jne
mov
sub
cmp
je
xor
and
mov
and
mov
add
add
add
add
or
or
test
je
mov
add
mov
cmp
jne
mov
sub
mov
or
sub
sub
mov
and
add
cmp
je
xor
mov
add
add
sub
cmp
je
sub
mov
sub
add
add
add
mov
add
add
add
add
mov
add
mov
add
or
add
cmp
je
mov
jmp
xor
mov
add
sub
sub
add
cmp
je
cmp
je
add
and
mov
mov
add
cmp
jne
add
sub
pop
cmp
je
mov
mov
and
sub
mov
add
test
je
sub
add
cmp
je
cmp
jne
mov
sub
add
cmp
jne
add
mov
cmp
je
add
sub
cmp
jne
mov
xor
add
add
sub
sub
pop
sub
pop
add
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
mov
mov
sub
sub
push
mov
push
and
sub
add
sub
movl
mov
add
mov
mov
add
add
sub
cmp
jne
test
je
test
je
add
add
mov
mov
sub
mov
sub
or
add
and
add
add
or
mov
xor
add
cmp
je
sub
sub
cmp
je
xor
sub
mov
mov
sub
mov
sub
sub
sub
mov
cmp
je
sub
sub
mov
mov
mov
cmp
je
add
sub
add
cmp
je
mov
mov
sub
sub
add
sub
or
sub
sub
cmp
jne
sub
mov
add
rdtsc
add
and
mov
mov
cmp
je
mov
sub
or
mov
cmp
jne
cmp
jne
mov
cmp
je
mov
mov
cmp
jne
add
cmp
jne
mov
add
cmp
je
mov
or
add
cmp
je
mov
add
cmp
jne
sub
xor
add
cmp
jne
sub
cmp
jne
mov
mov
or
add
add
add
add
mov
add
mov
sub
add
sub
add
mov
cmp
je
mov
mov
xor
sub
add
addl
add
push
call
sub
cmp
je
add
or
je
cmp
jne
mov
mov
sub
add
test
je
mov
cmp
je
mov
cmp
je
xor
add
cmp
jne
add
xor
sub
sub
sub
or
sub
mov
add
add
sub
and
xor
addl
sub
lea
add
cmp
je
cmp
je
mov
mov
xor
cmp
jne
sub
sub
inc
sub
add
xor
sub
sub
mov
cmp
je
mov
mov
and
sub
cmp
jne
mov
mov
cmp
je
mov
test
je
xor
mov
and
and
mov
sub
sub
sub
add
add
sub
mov
xor
sub
mov
add
cmp
je
add
mov
and
add
test
je
cmp
je
mov
mov
sub
add
test
je
sub
sub
cmp
jne
add
mov
add
mov
and
cmp
jne
cmp
je
mov
add
mov
cmp
je
cmp
jne
sub
mov
sub
mov
sub
and
add
sub
sub
xor
cmp
jne
mov
mov
sub
sub
or
mov
sub
add
cmp
je
mov
add
test
jne
add
mov
sub
sub
mov
mov
mov
sub
add
add
mov
xor
mov
cmp
je
mov
mov
sub
cmp
je
mov
test
je
or
mov
sub
mov
cmp
je
mov
cmp
je
mov
sub
cmp
jne
mov
add
mov
cmp
jne
test
jne
add
mov
add
sub
mov
add
sub
sub
sub
cmp
je
add
or
sub
add
cmp
jne
cmp
jne
cmp
jne
mov
add
mov
add
or
test
je
mov
and
test
jne
sub
xor
or
sub
mov
add
add
cmp
jne
mov
sub
add
sub
mov
sub
sub
add
cmp
jne
mov
and
mov
sub
sub
or
add
xor
xor
pop
mov
xor
sub
sub
or
add
add
add
mov
pop
mov
mov
cmp
jne
cmp
jne
mov
mov
add
add
cmp
jne
add
test
je
mov
sub
add
mov
and
sub
sub
sub
add
sub
sub
cmp
je
sub
or
cmp
jne
mov
add
add
pop
mov
cmp
je
mov
and
add
cmp
jne
cmp
je
or
mov
cmp
je
cmp
jne
add
and
add
test
je
mov
add
add
mov
add
add
cmp
je
mov
sub
cmp
je
mov
cmp
je
cmp
jne
sub
mov
sub
xor
or
and
sub
add
sub
add
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
xor
sub
and
add
sub
push
and
push
add
mov
sub
mov
add
and
sub
sub
add
mov
add
mov
and
add
add
add
and
cmp
je
mov
or
mov
or
sub
sub
cmp
jne
cmp
jne
cmp
je
mov
mov
and
cmp
je
mov
and
mov
cmp
je
mov
xor
sub
add
sub
add
sub
mov
sub
sub
add
add
cmp
jne
sub
sub
add
sub
cmp
je
add
mov
add
mov
add
add
mov
xor
mov
mov
sub
sub
add
sub
and
cmp
je
sub
cmp
je
add
mov
add
sub
cmp
je
sub
cmp
je
xor
mov
sub
and
or
sub
mov
mov
mov
sub
or
and
cmp
je
sub
mov
mov
sub
cmp
je
mov
sub
mov
add
or
sub
or
and
or
cmpl
je
mov
add
mov
test
jne
cmp
jne
and
mov
and
cmp
je
sub
add
decl
mov
sub
mov
and
and
cmp
jne
sub
sub
cmp
jne
test
je
sub
cmp
je
mov
sub
sub
xorl
cmp
jne
sub
cmp
je
cmp
jne
mov
or
xor
cmp
je
add
mov
sub
cmp
jne
sub
cmp
jne
mov
or
mov
or
cmp
je
cmp
je
add
and
add
cmp
je
mov
test
jne
add
cmp
jne
add
mov
sub
or
cmp
je
cmp
je
add
add
or
sub
jmp
mov
mov
mov
test
jne
test
jne
add
sub
mov
or
cmp
je
xor
xor
add
and
sub
add
sub
cmp
je
cmp
je
xor
xor
mov
or
add
add
pop
cmp
je
mov
mov
cmp
je
add
add
test
je
and
pop
mov
mov
or
and
test
je
mov
mov
cmp
je
sub
or
mov
mov
cmp
jne
sub
mov
sub
cmp
je
cmp
jne
sub
sub
add
sub
add
add
pop
add
sub
mov
mov
and
sub
add
sub
cmp
je
cmp
jne
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
add
xor
mov
add
sub
push
mov
mov
or
cmp
jne
cmp
jne
mov
mov
cmp
je
add
cmp
jne
mov
sub
mov
mov
cmp
je
sub
add
and
or
xor
and
xor
mov
and
sub
cmp
jne
mov
push
mov
mov
cmp
je
mov
and
cmp
je
mov
sub
sub
mov
cmp
je
sub
mov
add
mov
sub
sub
or
sub
push
add
cmp
jne
mov
add
sub
and
sub
add
cmp
jne
add
mov
mov
sub
add
sub
mov
sub
mov
sub
add
cmp
je
mov
cmp
jne
sub
add
and
mov
add
mov
sub
and
sub
xor
push
mov
mov
mov
add
add
sub
mov
xor
add
sub
add
or
mov
cmp
je
mov
sub
mov
cmp
je
add
mov
mov
add
sub
sub
test
jne
mov
sub
add
mov
cmp
je
cmp
je
cmp
je
xor
xor
sub
test
jne
add
add
mov
cmp
jne
sub
sub
mov
mov
sub
or
sub
mov
cmp
je
sub
push
test
jne
sub
mov
mov
or
cmp
jne
add
and
add
cmp
je
add
sub
sub
push
mov
add
cmp
je
sub
mov
cmp
je
sub
cmp
je
cmp
jne
cmp
jne
sub
cmp
jne
or
mov
add
add
push
cmp
je
mov
xor
and
sub
cmp
jne
mov
add
and
mov
sub
cmp
je
add
and
mov
cmp
jne
add
add
mov
mov
add
cmp
jne
mov
xor
cmp
jne
and
mov
mov
sub
sub
add
cmp
je
sub
mov
cmp
je
mov
cmp
jne
xor
mov
xor
sub
sub
add
or
or
cmp
jne
sub
add
mov
add
xor
or
sub
add
sub
add
and
add
add
add
add
sub
sub
add
sub
add
add
mov
sub
sub
mov
add
mov
and
test
je
add
sub
mov
mov
sub
mov
and
mov
mov
add
add
add
cmp
jne
sub
sub
add
call
mov
xor
or
sub
sub
mov
sub
movl
mov
mov
cmp
jne
mov
mov
add
cmp
jne
and
sub
mov
sub
sub
add
mov
mov
mov
and
add
add
and
sub
mov
sub
add
sub
mov
mov
mov
add
and
cmp
jne
mov
and
add
sub
sub
mov
test
je
or
mov
sub
mov
sub
mov
add
and
cmp
je
cmp
je
sub
sub
mov
cmp
jne
sub
and
sub
mov
cmp
jne
cmp
jne
sub
mov
add
mov
mov
test
je
cmp
jne
cmp
je
and
sub
cmp
jne
mov
cmp
je
mov
sub
add
add
cmp
jne
and
cmp
jne
add
add
or
je
cmp
je
cmp
jne
cmp
je
mov
mov
add
mov
repnz
xor
mov
sub
cmp
je
add
cmp
jne
add
mov
xor
cmp
je
or
xor
mov
addl
mov
add
sub
sub
mov
xor
cmp
jne
sub
jmp
and
mov
mov
add
add
sub
sub
sub
mov
and
and
sub
xor
mov
sub
sub
pop
mov
cmp
je
xor
mov
cmp
je
add
mov
mov
add
add
sub
add
cmp
jne
cmp
jne
add
mov
pop
add
pop
mov
mov
add
cmp
je
test
je
sub
add
mov
sub
add
or
leave
ret
add
add
add
add
add
add
add
cmp
add
dec
lahf
add
