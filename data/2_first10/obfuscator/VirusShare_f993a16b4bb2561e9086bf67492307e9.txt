sub
mov
add
cli
loop
jp
bswap
pop
iret
mov
das
fdivrl
add
in
ja
jmp
mov
cmp
jno
cmp
xor
cmp
rclb
push
sahf
int
mov
xchg
or
inc
int
movsl
mov
js
mov
cmp
push
jmp
push
pop
pop
cli
and
and
push
mov
inc
and
pushf
lret
lret
sbb
xchg
cmpsb
or
mov
cmp
xchg
jae
in
jb
push
lock
mov
int
sarb
push
inc
xchg
bound
decl
adc
mov
repnz
sub
cwtl
les
fcoms
test
cmpsl
xchg
mov
and
lret
dec
push
fldl
repnz
push
jmp
inc
rorb
cmp
push
nop
push
sub
sbb
pop
repz
jbe
xor
ja
pop
movsl
insl
lret
adc
clc
scas
pop
sbb
nop
movsb
test
fidivrl
jge
sbb
sbb
or
pop
sbb
inc
cmp
outsl
les
insb
inc
cmp
cmp
jmp
mov
dec
sbb
mull
dec
sub
loope
lret
out
pushf
add
aam
mov
js
aam
pop
shll
test
sbb
pop
fdivs
jno
push
lods
enter
mov
or
sahf
push
push
in
loope
pop
lret
repz
aas
repz
pop
stos
out
in
loope
sbb
jne
in
add
dec
js
or
mov
mov
sahf
in
cmpsl
push
jg
mov
movsl
inc
fldcw
mov
mov
and
ljmp
and
and
loope
fadds
inc
mov
ja
pop
dec
mov
mov
bound
adc
popf
mov
aas
cmp
sbb
jge
jge
sbb
mov
mov
mov
jae
cli
int3
sbb
xor
lahf
gs
scas
testl
insb
add
dec
bound
and
cwtl
mov
pushf
mov
add
add
xor
adc
daa
adc
mov
fstpl
mov
mov
bound
sub
jbe
pop
in
arpl
sub
shlb
push
xchg
pushf
mov
xchg
test
adc
push
fildl
mov
mov
cmpsl
mov
mov
repz
out
cmp
cmc
call
push
mov
notl
mov
mov
jo
push
mov
sbb
and
add
push
mov
data16
mov
and
sbb
and
imul
sarl
test
adc
lcall
mov
pop
mov
call
aas
std
cmp
mov
rolb
add
sub
repnz
jns
sti
fwait
mov
out
loope
call
xchg
lods
test
sbb
xor
jecxz
orb
and
adc
rorl
inc
mov
fwait
jp
mov
into
cwtd
rclb
out
sbb
cltd
ja
imul
and
outsb
add
test
mov
jns
add
sbb
or
shr
mov
add
xchg
lret
mov
sbb
addr16
sbb
push
aaa
in
out
add
sub
imul
lahf
jecxz
push
xor
add
push
xchg
jo
movsb
dec
aad
inc
fwait
into
push
jecxz
xchg
testb
sti
clc
and
scas
fstpt
jne
ret
xor
mov
xchg
clc
out
insl
movsl
dec
sbb
or
test
push
outsl
das
loope
mov
mov
fisubs
test
and
popf
sbb
lods
mov
dec
shr
enter
add
test
dec
pushf
ds
xchg
xor
dec
mov
add
das
xchg
shlb
mov
arpl
jg
jle
leave
sub
adc
jp
aas
jns
mov
es
inc
cmp
and
fsubs
test
js
pop
cld
fcomps
fistpll
in
in
mov
lds
adc
fcmovnu
push
repz
add
xchg
inc
rclb
mov
lret
adc
add
bsf
mov
and
insl
push
mov
incl
xlat
cld
inc
and
fstpl
xchg
xor
dec
pop
pusha
inc
or
rorl
sbb
or
sub
cmp
mov
int3
out
push
mov
push
jnp
add
mov
xchg
loop
jmp
pusha
fucomip
negl
xchg
ret
ds
and
jne
inc
xchg
jge
dec
mov
hlt
lds
xor
lea
xorl
push
test
inc
hlt
ret
adc
cli
inc
divl
loope
sbb
jnp
lret
icebp
cwtl
mov
dec
pop
sub
addw
ficoms
sarl
jo
add
mov
mov
or
rcll
stos
in
add
in
xor
cld
arpl
cmp
fstpl
out
stos
dec
cmp
and
inc
mov
gs
mov
lds
xor
mov
lods
cmp
cwtl
dec
and
cltd
and
pushf
les
xchg
ds
xchg
sbb
pop
mov
or
ret
fsubrl
fcomps
mov
add
xchg
adc
or
outsb
fistpl
jns
out
xor
mov
lods
jae
add
push
cmp
shl
xor
ja
or
pop
sbb
xor
dec
mull
mov
inc
aam
negl
ss
xchg
hlt
subb
test
xor
pop
and
ret
test
int
sub
jnp
imul
jb
pop
mov
cmpsl
in
xor
jecxz
sbb
adc
test
jo
int
pop
add
les
es
je
in
xchg
out
mov
push
mov
mov
sti
push
and
dec
in
lods
or
cmpsl
mov
sti
jne
xchg
sbb
enter
cmpsl
push
mov
stos
adc
dec
pop
add
dec
mov
cmc
cmp
sbb
sbb
in
movsb
daa
mov
prefetch
negl
je
or
or
ss
cwtl
repnz
out
cmp
cmp
in
xor
inc
pop
xor
xor
and
mov
push
aaa
bound
cmp
lcall
pusha
sub
clc
je
mov
mov
mov
mov
cmp
dec
icebp
mov
pop
or
push
jle
add
sbb
ret
mov
out
ret
pop
push
adc
nop
cmp
imul
fidivs
mov
or
hlt
loop
adc
or
push
cmp
push
mov
pusha
outsl
and
filds
mov
popf
cmp
aad
dec
sub
sbb
hlt
adc
sahf
sub
cltd
aam
ret
dec
add
push
sbb
mov
mov
push
insl
daa
xchg
push
sbb
dec
inc
movsl
cmp
pop
push
dec
and
inc
out
popa
adc
test
fists
dec
and
xchg
shll
xchg
ds
dec
and
ljmp
and
jg
or
pop
repz
xchg
daa
pop
jne
cmp
repz
int3
stos
aaa
ret
xlat
divb
call
scas
inc
outsb
andl
fsubrs
push
mov
inc
mov
mov
push
mov
inc
xchg
aam
sub
or
xor
inc
popa
cmp
idivl
mov
push
ja
enter
dec
cmpl
fcoms
push
and
mov
dec
outsb
cmp
cmpsb
sar
movsb
jl
int
inc
inc
mov
aad
sbb
dec
inc
jo
and
test
pop
cmp
movsl
cld
pop
call
mov
fs
cmc
lods
mov
mov
ret
std
xchg
mov
sbbl
and
dec
fimull
std
inc
lret
mov
enter
daa
lcall
lock
pop
dec
rcrb
xchg
pusha
pop
and
xor
hlt
mov
sahf
jmp
push
shlb
int
ret
jno
mov
fidivrs
iret
aas
adc
mov
mov
popa
loopne
pop
aas
inc
cltd
test
into
faddl
aaa
stc
inc
imul
inc
xchg
cmpsb
scas
into
inc
test
mov
sub
adc
cmp
inc
mov
jno
testb
xor
insb
insb
sbb
or
fwait
pushf
fisubrs
jbe
xchg
jo
and
dec
xorb
loope
xorb
adcl
add
mov
inc
fidivrl
fcoml
andb
adc
je
cwtl
mov
shrb
mov
push
scas
mov
push
jb
pop
cmpsb
xor
mov
ds
ret
mov
xchg
adc
jbe
movsl
dec
sarl
shlb
out
mov
inc
and
in
inc
or
adc
sub
imul
jo
cwtl
cwtl
mov
ret
loope
xlat
repz
jnp
jp
popf
sbb
mov
adc
scas
mov
dec
data16
movsb
cmp
mov
dec
sbb
mov
mov
inc
mov
pop
mov
mov
faddl
adc
push
and
sub
jbe
nop
cmp
dec
idiv
out
call
push
mov
or
pop
mov
add
inc
pop
aad
pop
shrb
mov
pop
inc
cmpsl
cmp
mov
out
fldenv
and
dec
mov
das
adc
cmp
repnz
mov
xor
cmp
sarl
mov
xchg
movb
test
xchg
pop
data16
ret
mov
push
mov
dec
mov
sbb
lods
push
sbb
mov
jbe
sbb
aas
jae
mov
jns
xor
lahf
jp
add
push
or
dec
xor
fwait
into
sub
clc
js
cmp
jb
arpl
sub
jge
stc
test
gs
lods
cmp
idiv
add
aam
lea
push
cli
ret
or
divl
loope
fwait
sbb
mov
ss
adc
mov
push
dec
cs
mov
cmc
sbb
mov
ja
mov
dec
pushf
xor
mov
xchg
fmuls
xchg
rolb
int3
jno
shrl
mov
test
jbe
jmp
push
dec
cltd
pop
sub
jle
outsl
or
jmp
jnp
fsubr
dec
out
sbb
mov
fucomp
pop
sbb
movsb
mulb
dec
cmp
sub
xor
orb
out
cld
push
cmp
jle
sbb
bound
push
push
inc
gs
mov
lea
add
or
cli
xor
ds
mov
ds
fistps
xor
pop
xor
pop
push
jo
popf
inc
fisttpll
fiaddl
sub
and
les
cwtl
dec
in
enter
cmp
shrd
nop
cmp
std
adc
pushf
add
sub
or
xchg
out
mov
push
stos
push
ja
and
outsb
push
inc
xchg
cmp
fs
rcll
cli
repnz
inc
fdivrs
test
or
mov
testl
inc
inc
mov
push
jmp
xchg
pop
sub
mov
fisttpll
repnz
and
pop
mov
jnp
js
sahf
filds
or
cmp
std
or
xchg
inc
dec
pop
popf
xchg
ljmp
mov
mov
sarb
test
xlat
fidivrs
shlb
stos
popa
xor
sarl
insl
ljmp
xchg
imul
mov
lods
push
cmc
fisttpll
cmp
aam
add
pop
pop
gs
scas
enter
lods
cs
and
mov
dec
je
repz
or
fsincos
sbbb
lods
pop
mov
push
in
mov
insl
jl
adc
xchg
jae,pn
shl
insl
clc
ret
cli
stc
adc
dec
sub
xchg
mov
pushf
fstpl
repz
jae
popa
inc
mov
rcll
xchg
cmc
repz
mov
mov
repnz
jge
xor
inc
loop
lods
test
ret
fwait
jmp
xor
jecxz
push
adc
fisubrs
or
sbb
mov
into
pushf
rcr
and
mov
add
adc
pop
or
jb
mov
sub
pop
sahf
xchg
jns
test
add
ret
bound
mov
and
roll
xor
outsb
mov
sub
sbb
int
data16
iret
cmpsl
insl
jg
cmp
xor
jecxz
xor
or
lea
adc
xchg
popa
cwtl
jne
call
jne
sub
sbbl
or
push
inc
xlat
icebp
loope
divl
clc
psllw
sbb
mov
mov
jge
dec
ss
mov
push
loope
mov
sbb
imull
lds
sub
movsb
add
mov
push
jge
mov
cmp
arpl
test
fucom
ficoml
popf
in
jo
mov
mov
push
add
fcoml
pop
aam
idiv
and
out
pop
fstps
test
xchg
mov
jg
inc
inc
jecxz
test
ffree
iret
or
ret
xchg
nop
popf
pop
pushf
pop
jmp
xor
orb
inc
adc
sub
cmp
inc
arpl
push
fwait
xor
pop
scas
sub
mov
in
xor
das
dec
dec
xor
es
sub
mov
jg
fldcw
out
jle
xor
jp
mov
cltd
or
dec
stos
scas
xor
test
popa
adc
daa
imul
push
pop
addr16
inc
shrb
popf
lcall
pop
adc
test
or
xor
orb
je
jmp
xchg
add
ja
xchg
jle
push
mov
ljmp
mov
adc
in
sub
or
push
dec
les
cld
xor
jle
jmp
pushf
push
outsb
leave
lret
xor
xor
sub
xchg
sbb
sub
add
hlt
in
int
add
mov
aam
jbe
mov
add
adc
add
enter
sbb
scas
clc
mov
xchg
cli
test
fmull
pusha
enter
loope
cmc
icebp
fmull
jne
cmc
lods
jbe
mov
lock
enter
movsl
sbbb
pop
subb
sub
or
fscale
jno
cmpsl
add
cltd
ljmp
inc
mov
push
popa
sub
xchg
xcrypt-ecb
cmpsl
dec
divl
in
and
sub
lcall
adcl
lods
sub
sub
mull
push
repnz
fimuls
loope
cmp
loopne
cmp
out
outsb
adc
arpl
sbb
addr16
jno
dec
xorl
push
cli
mov
jo
test
jg
mull
mov
xchg
shlb
stc
test
lret
fistpll
movsl
mov
jge
mov
filds
ret
add
push
mov
sub
leave
xor
popf
stos
insb
sub
inc
icebp
inc
jge
fistl
dec
stc
das
push
sbb
lods
nop
aad
mov
xchg
mov
jno
and
add
adc
or
enter
push
filds
dec
push
fs
fs
insb
mov
inc
ficoms
scas
sti
jo
jbe
push
fisubrs
inc
sbb
push
push
push
cmp
sub
inc
cmp
lods
jle
in
dec
jns
das
loop
jg
mov
in
sbb
or
cmp
adc
fldcw
in
cli
add
cmp
cmp
push
mov
cmp
mov
mov
das
jmp
xchg
xor
sbb
pop
xchg
into
cmp
cmp
roll
ret
dec
or
xlat
stos
outsb
loop
inc
pop
loopne
cmpsb
stc
pop
pop
test
mov
je
mov
mov
leave
pop
mov
jecxz
in
xchg
cld
fsts
insl
lods
jnp
leave
out
dec
and
xchg
adc
ds
leave
pushf
push
shll
lret
pushf
sti
inc
xor
das
push
sub
mov
jmp
jmp
and
jnp
scas
loopne
jg
lret
mov
aaa
clc
jp
fs
inc
push
stos
add
aam
loopne
xchg
stos
dec
dec
sti
cmc
add
nop
movsl
mov
pushl
add
lock
pop
out
outsl
mov
cmp
adc
jge
shl
ja
inc
xor
mov
pusha
jl
jg
repz
pop
lret
pop
dec
cmc
push
xchg
test
in
dec
push
mov
jl
lret
cmp
mov
xchg
xchg
clc
fisubl
cmp
out
rolb
sbb
inc
sbb
imul
cmpsb
mov
outsb
inc
enter
mov
inc
cmc
and
jb
test
jo
push
push
inc
pop
sub
push
push
mov
jmp
gs
adc
das
adc
fistps
sahf
or
push
stc
adc
adc
push
aad
pusha
jne
sub
fs
out
outsb
cmp
sahf
mov
pop
cmp
mov
mov
lcall
dec
xor
in
inc
push
jg
fbstp
mov
and
ror
aaa
das
add
sbb
xchg
inc
inc
inc
add
sub
cmpsl
pop
out
xor
adc
push
or
test
cs
jns
loopne
mov
mov
mov
xor
xchg
test
data16
sub
repnz
loop
fistpl
andb
fistpll
inc
and
cmp
lret
pusha
hlt
leave
mov
and
sub
cmp
movsb
push
cmp
push
dec
sbb
or
cmp
push
mov
das
inc
cmp
fs
or
das
push
addr16
inc
sub
or
divb
lods
xchg
and
mov
and
cmpl
sub
pop
xchg
jmp
arpl
aad
cld
xor
pop
push
adc
sbb
xchg
sarb
aas
test
sbb
fcomip
mov
xchg
push
std
push
xor
outsb
cmc
fdivrp
insl
cmp
jo
in
cmp
cmpsb
jmp
pop
cmp
mov
cmp
jmp
loop
lods
test
rol
sarb
subl
scas
mov
xchg
and
lret
ja
mov
outsb
fcomps
cmp
jb
cmp
cmp
cmc
jmp
sti
cmp
into
or
xchg
sub
ret
fs
iret
fisubrs
popl
jbe
cmpsl
rorl
mov
test
mov
int
sub
and
ret
nop
imul
push
loop
stc
int3
enter
push
jne
xchg
std
sbbl
movsl
and
add
lea
push
inc
iret
mov
xor
lahf
loop
inc
outsl
or
mov
cwtl
subl
push
loop
scas
push
sbb
das
mov
push
das
mov
aam
sbb
hlt
into
lods
gs
repz
inc
test
cmp
lahf
jmp
mov
mov
push
xor
adc
imul
jmp
or
inc
lret
daa
or
jnp
mov
sbb
stc
or
pop
pop
mov
test
jbe
jecxz
js
sti
cmp
sub
sarl
aaa
push
test
push
and
inc
sub
lods
test
mov
add
bound
push
xor
pop
arpl
add
add
cwtl
jbe
dec
movhps
clc
inc
mov
pop
enter
gs
push
hlt
or
fwait
pop
push
push
jne
cmc
jne
adc
fwait
or
cwtl
push
roll
xchg
fistpll
das
in
xchg
xlat
mov
dec
leave
jmp
push
or
decb
xor
push
imul
subb
and
pop
jnp
mov
lods
add
add
mov
je
adc
imul
mov
std
and
or
dec
adcb
sub
xchg
push
ret
jns
push
mov
xchg
ljmp
mov
adc
xor
aam
mov
je,pn
mov
sbb
sbb
loope
lock
adc
lods
push
gs
push
icebp
and
clc
mov
rcrb
sarl
repnz
outsb
out
xchg
fsubrs
test
cmc
adc
sti
lock
scas
rcrl
repnz
xor
inc
fimull
adc
test
inc
divl
xchg
rolb
cmp
cli
stc
fidivrs
xlat
pop
imul
pop
lds
mov
inc
loopew
dec
xor
pop
dec
jbe
pop
in
imul
push
in
test
xchg
add
xor
pop
mov
cwtl
mov
cmp
dec
ljmp
outsl
cs
sbb
mov
fistpl
aad
pusha
mov
jle
xchg
ss
mov
xor
jns
push
loop
push
xlat
test
es
and
sbb
xlat
les
das
adc
cmpsl
inc
mov
mov
dec
subb
mov
scas
jbe
pop
in
dec
orb
dec
mov
icebp
popf
mov
sbb
mov
ja
fldl
lret
lcall
mov
rcr
add
int
popf
insl
fs
pushf
add
test
xlat
jg
mov
dec
xor
repnz
pop
dec
idiv
fstl
push
push
pop
push
fildll
fcmovne
inc
dec
xchg
adc
xchg
xchg
inc
shll
std
lods
shlb
pop
jnp
sub
enter
bound
inc
adcb
fwait
scas
pop
cmp
pop
stc
mov
xsaveopt
sahf
test
xchg
inc
lock
data16
inc
xchg
insb
xor
or
mov
mov
arpl
test
imul
sub
iret
sti
lret
icebp
aaa
ss
inc
mov
stc
movzbl
jno
cmpsl
add
sub
adc
in
insl
aas
sbb
adc
lret
cmp
insl
fcompl
xchg
pusha
scas
pushf
out
mov
mov
push
xor
icebp
jmp
mov
or
xchg
iret
mov
in
gs
mov
xor
jge
inc
cmp
mov
test
int3
outsb
and
dec
sub
and
mov
jae
inc
and
inc
push
arpl
xchg
inc
mov
decb
mov
xor
cld
xor
pop
cli
pop
lret
insb
popa
mov
fmuls
mov
int3
cmp
ret
lds
jmp
jp
daa
test
push
push
mov
les
mov
loopne
lahf
xor
or
fcom
mov
sbb
loopne
jae
or
push
test
cmp
push
nop
insl
mov
jnp
mov
sbb
outsl
sbb
je
dec
movsb
loop
cmp
test
out
xchg
stos
jmp
int3
lock
mov
gs
lcall
and
aaa
lahf
push
jp
pop
imul
push
mov
xor
ds
insl
stc
lods
ja
xchg
inc
sbb
js
jae
push
and
pop
repnz
sbb
ljmp
lea
sarl
cwtl
sub
xchg
loope
call
setp
adc
cmp
mov
pop
insl
shl
mov
int
inc
jmp
mov
xor
jg
push
and
aad
jmp
bswap
scas
push
xor
sub
add
popf
cltd
arpl
push
sbb
push
jbe
std
pop
mov
xchg
loope
js
inc
mov
ss
movsl
xchg
scas
mov
addr16
lock
fnsave
lret
and
mov
daa
pushf
push
imul
mov
cmp
out
sub
dec
xchg
sub
push
rol
jb
xor
cmc
mov
outsl
lret
out
cmpsb
xor
mov
test
sbb
sbb
ss
imul
xchg
jl
sub
push
xchg
mov
lods
rcll
or
add
pop
push
scas
sahf
in
add
xor
clc
mov
das
out
shlb
inc
jno
pop
mov
int3
xor
sub
and
add
inc
inc
bound
pop
fdivrl
insb
out
and
stos
mov
adc
test
xor
sbb
andb
mov
jae
sub
inc
or
xchg
pop
push
incb
add
jmp
or
loopne
add
imul
pop
sarl
shrl
ljmp
dec
daa
mov
loop
mov
lret
sbb
mov
pop
inc
ss
ret
push
dec
notl
cmp
and
or
fnstenv
movsb
insl
daa
fmuls
into
xor
jmp
sub
sbb
lock
pop
cs
popa
mov
mov
fs
movsl
inc
das
pop
adc
iret
jecxz
pop
das
sarb
add
and
pop
les
bound
sub
in
cmp
mov
outsl
push
int
das
push
mov
add
mov
fwait
mov
out
push
fdivl
loopnew
cs
ficoml
mov
inc
sti
lret
mulb
adc
test
clc
movsb
insl
loope
shrb
or
pmuludq
stos
fdivrl
fwait
cld
cmp
fadds
xchg
sarb
loope
lods
data16
jecxz
dec
mov
inc
xchg
jecxz
rdmsr
pop
push
adc
mov
movsb
stos
jmp
mov
sbb
push
xchg
or
mov
cld
xchg
push
adc
inc
loope
push
ds
mov
jge
in
cmpsb
aad
pop
popa
jmp
idivb
adc
mov
sub
call
fildll
rorb
ror
shrl
iret
jp
loop
push
push
mov
out
aam
mov
out
jno
mov
iret
das
pushf
xor
mov
adc
mov
ja
movsl
pop
pop
sbb
sub
lret
and
stc
icebp
jle
mov
imul
in
push
mov
bound
aad
xchg
outsl
je
loopne
add
or
cltd
out
adc
jno
pushf
push
popa
movnti
rorl
mov
xor
xchg
cmp
stos
js
sub
mov
lcall
outsl
insb
xchg
xor
sbbl
dec
data16
sbb
data16
mov
xlat
add
notb
sti
mov
decl
stos
les
mov
mov
rcrb
sub
adc
adc
sbb
insb
fmul
in
es
cld
je
pop
cld
xor
icebp
fcmovnb
pop
mov
js
outsl
push
or
pop
sar
into
dec
scas
cmc
arpl
xchg
lret
cwtl
sbbb
inc
jo
and
cmp
lcall
inc
inc
push
addr16
inc
sbb
popf
pop
jns
js
or
ret
icebp
and
arpl
push
cmp
out
cmp
adcb
sub
xchg
dec
pop
in
idivb
out
cmpsl
dec
adc
mov
js
xor
repz
cmpsl
mov
jb
jecxz
ror
js
dec
iret
negb
adc
mov
inc
mov
mov
fsubrs
sub
mov
pop
cmc
mov
xor
pop
cmpl
pop
out
sbb
cltd
mov
fists
mov
fnstenv
push
adc
jl
sub
jno
and
dec
or
into
mov
aas
sub
sub
lock
dec
icebp
repnz
sub
lds
lret
ja
pop
addl
jp
pop
hlt
aaa
fidivrl
mov
clc
cli
cmp
out
or
ds
jmp
jo
xchg
or
sub
in
mov
dec
inc
arpl
addr16
and
popa
dec
or
dec
idivl
fwait
sbb
jae
movsl
push
jo
out
jmp
and
inc
mov
dec
and
stos
or
in
aaa
clc
leave
xchg
cmp
mov
dec
adc
jge
xor
pop
cld
add
sbb
or
cmc
lcall
repz
add
sub
dec
and
je
push
cmp
sub
mov
js
loopne
imul
cmpsl
dec
xor
sbb
arpl
cmpsb
arpl
inc
mov
dec
mov
into
push
leave
test
xchg
enter
pop
xchg
insl
inc
in
pop
loopne
call
inc
movsl
pop
sbb
push
popl
push
sbb
push
int
push
pop
call
adc
stos
jg
rcrl
xchg
aas
bound
in
pop
sbb
jne
mov
adcb
mov
ret
push
sarl
mov
aaa
jge
insl
arpl
jp
adc
jns
dec
repz
in
mov
mov
mov
inc
mov
lock
mov
mov
dec
sbb
mov
cmp
push
pop
jge
pop
gs
adc
cli
movsb
mov
jg
das
cmp
outsb
loopne
pop
addr16
into
aas
enter
shlb
mov
mov
stos
pop
fimuls
and
mov
out
xor
mov
adc
lods
push
sub
insb
mov
call
fs
repnz
test
loope
movsl
ljmp
jmp
fildll
jns
nop
xor
jae
adc
sub
xlat
dec
jnp
out
add
cld
pop
xor
adc
sbb
xor
mov
mov
loop
cmp
jmp
mov
repz
imul
mov
mov
int
outsb
jge
push
or
rcrb
call
daa
cmp
pop
scas
lret
dec
test
cmp
push
mov
iret
cmp
cmp
xor
leave
mov
xor
lods
push
or
jno
je
jo
cmpsl
call
insl
mov
push
mov
push
lods
and
fcomps
push
arpl
scas
out
lahf
scas
test
addr16
cmp
add
and
mov
cmp
out
sbb
jg
es
repz
int3
arpl
out
sbb
test
ret
jno
jns
sub
inc
xchg
addr16
dec
iret
inc
jle
in
push
jnp
js
mov
aas
popf
ljmp
loopne
xrelease
jno
dec
test
and
popl
sahf
xchg
mov
das
or
or
adc
push
scas
cmpsb
nop
decb
mov
mov
push
cltd
adc
lret
sub
popa
mov
out
into
xchg
aad
cmp
xlat
jbe
pushf
or
ljmp
cmp
clc
outsb
pop
jmp
outsb
jno
inc
add
adc
and
xchg
jmp
lahf
adcl
call
inc
xor
addr16
or
xlat
mov
insb
mov
sub
daa
dec
push
mov
and
jle
pop
insb
sbb
sub
xchg
pushf
inc
add
fsubrp
clc
fsubr
mov
jg
ret
sbb
mov
mov
fldcw
mov
pop
js
stc
or
cs
sbb
pop
into
stos
mov
push
adc
mov
push
mov
insb
insl
repnz
pop
cmp
lea
in
movsl
pop
inc
das
scas
mov
test
iret
lret
and
rcrl
sbb
pop
adc
push
outsl
jbe
inc
lods
mov
inc
cmp
and
jge
sbb
popf
push
xchg
hlt
mov
jg
outsl
lock
pop
rorb
add
push
dec
cmp
dec
mov
shlb
data16
popf
data16
test
mov
jl
xchg
lea
rcrb
cmp
xchg
test
jae
sti
movsl
mov
jno
mov
lds
cmpsb
push
sarl
das
xlat
int
into
fwait
jge
pop
and
lods
jg
repnz
rorb
dec
mov
mov
test
xchg
mov
ja
dec
inc
lods
push
fistpl
lret
andl
subb
test
xlat
mov
adc
pop
add
mov
mov
pusha
xchg
cmpsb
jge
lods
adc
popa
mov
inc
aas
inc
lret
test
jbe
in
ds
mov
push
iret
insb
fstl
jge
push
cltd
jmp
dec
test
push
adc
movsl
in
xchg
add
addr16
sbb
test
mov
filds
shrb
lods
gs
addr16
jmp
cmp
loop
ljmp
jo
push
sbbb
inc
inc
jmp
movsl
imull
xlat
cmp
decb
xor
and
inc
sbb
xchg
dec
sahf
hlt
ja
cmp
stc
lods
out
mov
rcrb
loop
bnd
jg
leave
pop
jno
pop
sub
or
enter
jge
or
daa
stos
icebp
push
cli
aas
jg
xchg
push
pop
jle
lods
and
pusha
xor
fadd
shr
sbb
cmp
mov
mov
pop
cmpb
jae
jnp
mov
pusha
adc
add
loope
sbb
test
ret
pop
insb
cmp
pop
or
jge
loopne
xor
cs
xchg
cmp
rorb
push
mov
ds
imul
push
jg
mov
dec
dec
add
int3
cmp
xor
stos
fdivp
adc
and
adc
cmpsl
subl
pop
test
pop
shlb
mov
scas
and
jno
fidivs
sub
je
dec
pop
and
or
add
adc
fcomps
jns
cmp
cmp
out
scas
mov
es
mov
mov
jge
int3
cli
ja
and
push
or
push
sbbb
or
sub
nop
stos
bound
adc
ret
jmp
sbb
push
pop
aad
and
out
mov
push
dec
ss
mov
push
insl
adc
ja
add
jo
mov
lock
jne
mov
rorb
jle
fildll
movups
dec
out
inc
mov
lods
jp
or
mov
in
ss
es
pop
shl
push
shl
ds
ret
mov
ret
adc
fcoml
aas
mov
xor
lods
enter
std
lahf
sbb
sarb
pop
add
je
es
dec
ds
lret
dec
mov
je
pop
cmc
bound
cmp
cs
add
shr
or
imul
sub
jo
jb,pt
adc
je
sub
aad
ret
ret
movsb
bnd
push
aad
adc
push
mov
lret
xor
in
xchg
mov
dec
es
repnz
adc
test
jmp
dec
adc
or
adc
out
dec
sti
test
pop
ret
jb
lea
add
movsb
cwtl
das
pop
or
xchg
jle
test
ds
outsb
les
adc
rcrl
push
sbb
pop
xchg
xor
pop
shrb
and
inc
jne
inc
int3
js
cmp
dec
adc
cmp
mov
and
add
push
in
mov
push
inc
aad
stos
loopne
loopne
scas
mov
mov
arpl
or
mov
jg
mov
mov
loopne
fildll
or
test
mov
andb
mov
and
adc
movsl
hlt
imul
mov
stc
xorl
call
in
and
sbb
or
mov
xor
sub
dec
inc
scas
push
in
sub
jg
mov
push
popf
popf
mov
adc
imul
sbb
push
cmp
inc
test
scas
push
or
dec
fimuls
or
jmp
mov
lea
gs
dec
leave
in
or
cld
icebp
xlat
xlat
popf
xor
and
and
push
sub
js
push
xchg
fnstenv
rorb
fmul
testl
cmc
mov
int
jbe
pop
pop
lahf
iret
inc
pop
xor
pop
add
pop
and
mov
adc
xor
lcall
ja
mov
mov
imul
xchg
lret
ss
adc
push
sar
mov
mov
fcompl
xor
sahf
lods
xor
mov
xchg
and
mov
popf
mov
mov
jl
add
lds
out
das
add
loop
pushw
jmp
pop
cmpsb
or
addb
dec
pop
into
jp
insl
inc
sub
mov
ret
stos
cli
loopne
lahf
fnstsw
inc
pop
jnp
loopne
sub
dec
sbb
dec
inc
cmpsl
and
cmp
add
or
sub
int3
jge
mov
push
push
roll
fistpll
lahf
sbb
ljmp
movsb
pop
add
les
mov
adc
xchg
mov
push
lahf
adcl
fsubr
xor
push
ror
js
sub
inc
cmp
xchg
push
add
adc
adcb
jecxz
aas
orb
sub
mov
mov
sub
bound
ds
in
add
push
jnp
scas
xlat
and
pop
or
mov
push
test
and
out
sahf
add
jne
jge
add
hlt
mov
repnz
lea
pop
adc
lods
mov
fnstenv
loope
in
rclb
mov
fdivs
enter
hlt
or
adc
and
sub
mov
fmuls
faddl
xchg
cmp
cmp
mov
xchg
xor
jg
add
xchg
ss
dec
xor
dec
repz
adc
pop
inc
or
mov
addr16
ljmp
adc
xchg
mov
jecxz
dec
sbb
jle
mov
pop
pushf
flds
lahf
ss
cmc
ret
lahf
popa
jb
adc
call
mov
cwtl
cmp
add
adcb
scas
test
push
jmp
inc
xor
xor
lahf
imul
cli
enter
jb
std
dec
xlat
sbbl
insl
cmp
adc
mov
jge
or
scas
inc
cmp
fistl
xchg
fildl
sbb
sbb
cli
sub
ret
sbb
lock
jmp
stos
mov
jge
arpl
sub
mov
je
js
in
xor
or
xchg
out
push
rorl
mov
testb
push
or
or
jo
shrb
mov
adc
test
pop
ret
popa
ljmp
nop
push
sub
mov
xchg
outsb
adc
pop
aad
cmc
int
cmpsb
divl
daa
imul
mov
jmp
xor
inc
ret
sbb
adc
std
mov
scas
cmp
inc
mov
sbb
push
mov
dec
inc
int3
jns
aam
int3
mov
pop
xchg
aad
inc
sbb
mov
adc
roll
pop
or
sub
js
mov
sub
ljmp
cmp
jl
popf
mov
out
pop
dec
cmp
lea
cmpsl
xor
push
mov
adc
or
jbe
and
fists
in
aas
cmc
call
sub
mov
notl
jl
mov
dec
mov
insl
shrb
push
push
sahf
std
icebp
jno
dec
dec
jmp
and
sti
sbbl
mov
arpl
cmpl
dec
js
rcrb
jle
dec
insb
sbb
xchg
loope
mov
mov
or
and
les
icebp
mov
lahf
mov
cmp
pop
jns
inc
imul
leave
xchg
push
movsb
push
je
mov
jp
mov
jl
and
sbb
adc
stos
sahf
sbb
push
xor
adc
xchg
or
jmp
mov
into
jb
movsl
shrb
cltd
js
push
ret
or
sub
mov
push
dec
addr16
add
stos
xor
aad
push
aaa
mov
jns
lahf
in
adc
mov
xchg
fwait
jg
sub
inc
ret
inc
std
xor
jb
and
cmp
aas
js
pushf
mov
push
icebp
push
out
push
mov
ljmp
push
sbb
jg
mov
and
pop
sub
hlt
xor
and
push
stc
js
mov
xchg
cmp
adc
push
jl
pop
nop
lcall
loop
mov
sbb
mov
jne
push
adc
cmp
push
jae
arpl
inc
sbb
sarb
dec
aam
scas
into
push
mov
aaa
xlat
lret
sbb
or
addr16
push
movsb
mov
jmp
or
shl
scas
sti
lret
dec
mov
jle
adc
cmp
popa
dec
mov
cmp
ficomps
push
rol
jae
pextrw
mov
out
and
insb
push
or
test
lds
jle
pushl
pop
getsec
inc
jle
sub
mov
scas
mov
ja
sarl
sub
imul
enter
data16
cld
rclb
mov
ds
daa
inc
pushf
jno
xchg
adc
lea
pop
adc
add
push
pop
cmp
repnz
in
xor
jle
enter
cld
pop
ss
mov
cmp
xchg
cld
fldt
in
out
in
clc
push
out
sub
add
and
mov
outsb
sbb
imul
mov
cs
notl
push
test
push
mov
scas
mov
stc
sub
clc
cmp
sbb
lods
fdivrs
add
fisubs
mov
mov
aaa
scas
mov
and
out
jecxz
dec
sahf
clc
adc
cmp
out
push
mov
lahf
cmc
jae
jg
jae
inc
xchg
add
add
out
xchg
andb
mov
ds
push
sar
or
fidivrl
insb
arpl
jg
popf
pushf
add
xor
pop
ret
mov
xor
and
mov
pop
sub
or
inc
fisttps
pop
andb
jmp
int3
push
lock
scas
xchg
dec
inc
shrl
rcrl
lahf
lahf
cld
inc
lods
movsl
pusha
mov
not
adc
xor
inc
lods
xor
xchg
in
dec
lds
out
cmc
in
or
and
mov
popa
inc
shll
insl
mov
jmp
adc
mov
stos
push
clc
les
push
outsl
jl
fbld
pop
jl
shrl
dec
mov
test
test
jo
gs
fisttpll
stos
xorl
add
repnz
and
push
xor
jecxz
mov
das
pop
xchg
fs
ret
dec
xor
movsl
dec
mov
out
adcl
push
ret
pop
and
aad
mov
xor
je
scas
adcl
and
mul
xor
in
cmpsl
or
dec
push
imul
or
js
jle
ret
addr16
shl
rorl
cmp
iret
cwtl
lret
ror
stos
mov
rorb
imul
sti
stos
aas
dec
mov
clc
mov
pushf
xchg
and
mov
outsl
mov
and
in
les
in
pop
jmp
cmp
roll
rorb
sbb
pop
mov
and
xchg
jl
cmp
sub
pushf
pop
xchg
xor
sub
cmp
jno
pushf
popa
and
add
and
adc
mov
cwtl
gs
jle
xlat
push
daa
aad
int3
cli
push
adc
dec
adc
and
push
push
fucomip
test
popf
xor
pop
add
mov
or
or
jmp
aaa
xlat
out
sub
xchg
jecxz
mov
jbe
lret
fcoms
mov
fnstcw
cmp
arpl
adc
lcall
xor
and
push
ret
jo,pn
xlat
sbb
and
mov
inc
dec
jns
dec
loopne
mov
lods
xlat
push
enter
cwtl
jmp
sbb
sbb
cmp
imul
cli
and
out
and
push
push
loop
push
stos
lret
xchg
fwait
ror
mov
dec
dec
adc
and
push
pusha
sub
jo
sub
enter
sbb
std
inc
xchg
sti
bound
popa
jae
out
out
cmpsl
popf
cld
or
jae
mov
jmp
and
mov
in
stos
jnp
ja
pop
jb
iret
mov
add
jp
mov
out
xor
pop
std
mov
cmp
mov
push
scas
stos
xor
iret
inc
pop
add
test
jecxz
lds
jl
mov
fisttps
ja
in
sbb
add
cmp
cmp
mov
adc
mulb
or
sub
mov
inc
gs
js
sub
push
push
and
gs
dec
out
ss
xor
fistpll
bound
ret
test
call
add
imul
xchg
xchg
fcmovb
jl
test
lods
leave
and
cltd
jne
push
test
neg
test
and
lret
aas
sbb
repnz
jge
orl
xchg
lcall
or
ficoml
ja
push
xor
xorb
clc
mov
sub
pop
imul
popf
lret
inc
arpl
cli
fwait
int
shll
gs
xlat
bound
xchg
mov
push
sbb
xlat
xlat
subl
lock
cmpsb
rcrl
add
movsl
out
inc
push
inc
inc
repz
cmp
jp
mov
fsubr
and
mov
and
mov
inc
xchg
cmp
shl
popf
leave
inc
roll
dec
bound
push
xchg
ds
cmpsl
xorl
mov
lods
movsb
mov
xchg
cltd
in
sbb
mov
inc
arpl
ja
push
push
test
or
imul
cs
test
call
ljmp
push
lods
out
or
nop
decl
loope
das
fidivs
ds
adc
pop
outsb
lcall
add
into
imul
js
daa
xchg
arpl
xchg
jl
xchg
arpl
mov
mov
pushf
push
data16
xor
and
insb
pop
jp
dec
in
fcompl
push
movsl
push
push
pop
or
int3
jp
pop
and
leave
scas
push
rcrl
rorl
hlt
aam
xor
xchg
sbb
add
cmp
je
cmp
fs
cmpsb
xor
mov
shlb
sbb
rorb
pop
mov
mov
mov
les
sub
inc
and
mov
stos
jne
in
bound
lods
push
in
add
fcoms
xchg
mov
mov
push
std
push
ror
push
lahf
repnz
in
stos
sub
xor
mov
dec
shll
cli
outsl
sub
outsl
add
jecxz
icebp
dec
ljmp
mov
adc
imul
test
cmp
inc
repnz
mov
pusha
pushf
sbb
jmp
pop
call
adc
out
jecxz
cmp
push
insb
pop
mov
fistps
imul
mov
dec
pop
das
in
loope
test
popa
orl
dec
arpl
out
imul
bound
into
jo
mov
rolb
cld
jecxz
pop
jle
xchg
daa
and
test
in
ds
ds
scas
xchg
cmp
lahf
cmpsb
out
leave
lret
mov
xchg
pop
xor
scas
ds
fdivl
loop
es
in
mov
or
mov
add
jnp
pop
imul
xor
jg
fsubrs
mov
xchg
xchg
or
stos
loop
push
outsb
out
add
xchg
iret
std
imul
or
pushf
out
jno,pt
jbe
pop
pop
idivl
das
movsl
es
sbb
pop
cli
mov
icebp
in
sbb
pushf
add
sbb
mov
push
sbb
sbb
popa
rcrl
jae
push
add
aam
or
lahf
fldt
xchg
mov
lods
fidivrs
add
and
aam
frstor
or
out
cmpsl
inc
pushf
push
xchg
mov
xchg
sbb
in
sti
pop
enter
or
lods
rcrb
dec
xor
lods
adc
pop
stos
repnz
popa
push
ror
sub
adc
xchg
pop
dec
out
loope
scas
jbe
flds
xchg
adc
mov
pop
imul
and
fmuls
test
or
mov
fs
pop
cmpsl
ret
sbb
xchg
or
fsubrl
es
sub
fwait
int3
daa
xor
fs
fcmovu
jo
stos
mov
add
cmpsb
xchg
repz
and
sbb
aam
cs
cmpsb
push
scas
push
cmp
ss
pop
loopne
subb
mov
jecxz
ja
mov
push
mov
testl
jg
inc
aas
mov
orl
or
rcll
adc
popf
pop
mov
mov
pop
and
jns
loopne
fmuls
stos
mov
xchg
es
inc
mov
xchg
add
add
int3
leave
lret
xchg
xchg
imul
mov
pusha
xor
pushf
pop
out
pop
dec
jl
imul
jl
cmp
sahf
mov
insl
cwtl
and
xchg
cmp
mov
inc
inc
and
mov
pfacc
aam
pop
test
dec
dec
dec
clc
sub
push
idiv
adc
popa
jl
inc
sbbb
jbe
or
jp
cmp
shl
push
jnp
sub
jnp
push
push
stos
sbb
inc
dec
lret
push
int
cmp
and
or
lret
sub
jg
fs
jmp
aad
xor
pop
and
dec
pop
leave
hlt
fildll
pusha
int3
sub
fcomp
push
inc
in
mov
lods
xor
add
andl
lcall
jmp
and
lods
aas
fldenv
aaa
sub
xchg
out
mov
dec
clc
cmpl
js
mov
rcrl
test
cmpsl
inc
loop
sbb
xchg
pop
mov
push
sbb
adc
jge
cmp
mov
rcrl
stos
int
pusha
adc
add
in
mov
pop
mov
les
movsl
sbb
inc
mull
push
jp
mov
or
mov
int3
popa
cmp
mov
fists
push
rcl
jnp
out
cli
je
lea
mov
pop
or
cld
punpckhdq
int
add
xor
and
jbe
push
mov
pop
push
xchg
dec
jne
mov
pop
or
adc
sbb
xchg
pop
mov
sahf
shlb
fmuls
popf
negb
or
jecxz
arpl
lcall
bound
mov
in
xchg
push
decl
adc
push
sub
add
rorl
inc
pop
fdivr
fisubs
xchg
inc
push
sub
xorl
movsb
in
or
lcall
push
or
mov
iret
jge
add
add
lock
adc
rcrb
mov
jne
fisubrl
popf
push
rolb
pop
and
inc
sub
sub
sarl
lea
jae
or
mov
pop
shlb
add
loopne
daa
sub
bound
add
sbb
push
sbbl
fnstsw
jmp
sbb
mov
jns
loope
xor
xor
outsb
in
movsb
pop
lret
fimull
pop
mov
xchg
xchg
pushf
fistpll
rcr
pushf
mov
outsl
roll
outsl
loope
xchg
adc
cmc
mov
sub
addr16
aad
test
stos
mov
mulb
loope
cmpsl
sbb
cltd
loopne
inc
out
cli
mov
movsl
ficomps
lea
sahf
maxps
cmp
jmp
loop
mov
cmpsl
fsubrl
inc
flds
clc
push
mov
test
ss
addr16
cmpsl
and
lds
pop
jle
push
inc
fiaddl
pop
xchg
dec
jecxz
clc
sbb
lret
cmp
les
xchg
jbe
incl
in
mov
or
push
or
mov
pop
pushl
clc
movsb
pop
sbb
xchg
frstor
movsl
leave
inc
pop
sub
lret
sbb
data16
inc
mov
pop
ss
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
imulb
inc
outsb
test
jecxz
inc
test
adc
fmuls
rorb
psubsw
lods
cs
sub
add
adc
mov
rolb
xor
mov
pop
jnp
jmp
cwtl
mov
jbe
ss
jmp
repnz
pop
ja
je
imulb
cmp
popa
sub
mov
fsubr
test
inc
adc
dec
andl
inc
jns
in
adc
cmp
mov
roll
shl
and
sub
jno
dec
pop
push
xchg
shrb
shrl
inc
js
dec
and
call
dec
cmp
pop
push
cmp
daa
mov
rorl
jg
pop
mov
dec
jo
mov
jmp
cmpl
jns
js
sbb
je
out
pop
sub
xor
jnp
mov
repz
dec
out
daa
dec
adc
dec
cmpsb
out
pusha
inc
fsubrs
stos
loope
fwait
jle
and
xlat
sub
pcmpgtd
push
rol
jle
sti
testl
mov
sbb
std
in
sub
adcl
push
ljmp
push
loope
jbe
xlat
mov
outsb
push
clc
stos
fstp
pop
rorb
mov
sub
mov
div
mov
dec
mov
fbld
call
fstpl
mov
cltd
or
mov
clc
outsb
outsb
adc
cwtl
aas
shll
add
cmp
mov
scas
push
aaa
jg
into
mov
and
cmpsl
mov
sub
mov
fstpl
icebp
mov
jbe
insb
and
jle
sub
ljmp
pusha
cmpsl
test
cmp
adc
std
arpl
and
sbb
jp
fimull
insl
addr16
addl
lea
dec
sbb
pop
push
push
movsb
push
cmp
hlt
mov
mov
inc
popf
dec
adc
dec
negl
xor
fdiv
jo
mov
testb
cld
dec
shll
aam
movb
cltd
aam
push
stos
cmp
mov
sub
std
in
adc
dec
fists
add
xchg
adc
out
in
aam
loop
lock
and
stos
mov
out
test
jge
jp
out
inc
jbe
ljmp
and
stos
or
xlat
repnz
test
jno
dec
jnp
outsb
je
mov
lock
inc
mov
scas
push
out
adc
sbbb
add
in
sub
cmpsl
sub
leavew
into
push
dec
push
sub
jg
mov
aaa
popf
or
and
cmp
repz
lds
mov
cmp
mov
xor
leave
or
aaa
int
mov
push
add
lahf
fisubrs
ffreep
icebp
loope
fisttps
cld
hlt
sub
outsl
and
mulb
mov
jns
pop
hlt
and
lret
mov
dec
das
aaa
test
pop
ss
add
fldl
pop
mov
sub
push
lret
fadds
scas
popf
cmp
push
push
pop
sub
pop
fld
sub
out
je
mov
int
movsb
lock
orb
repz
and
cmc
mov
cmp
and
pop
sbb
call
aaa
mov
sahf
mov
fucom
in
dec
xchg
jge
popf
loop
dec
push
push
mov
mov
cmpsl
leave
fisubrs
je
pop
sbb
jae
mov
jns
insb
adc
push
int3
ljmp
add
js
jg
arpl
xchg
push
mov
jg
cwtl
sub
pop
sbb
pop
push
sbb
into
inc
aaa
cmpsl
cmpsb
push
lods
mov
filds
push
sub
xlat
inc
mov
inc
xlat
jle
push
aad
lahf
lret
enter
and
lods
pop
gs
rcr
test
fidivrl
inc
sub
xchg
adc
dec
inc
xor
notl
icebp
lret
mov
and
aaa
add
icebp
xchg
pop
push
mov
jmp
push
in
inc
movb
sbb
mov
or
sbb
loopne
imull
mov
push
mov
dec
sahf
sbb
mov
dec
mov
adc
fwait
ret
sbb
sub
inc
cltd
dec
int3
lods
testb
loop
xorl
insl
mov
cmpsb
jbe
cld
xlat
xchg
leave
jbe
lcall
ds
pop
insb
hlt
out
cmpb
mov
pop
mov
mov
push
cli
shll
jmp
xchg
call
stc
out
rcl
xor
int3
or
mov
jg
jp
mov
sbb
jo
adc
sub
nop
dec
cmp
jns
out
clc
stc
xchg
push
and
xchg
test
xor
push
ficompl
bound
mov
out
xchg
int
add
aaa
dec
add
or
sub
ror
dec
pop
inc
mov
sub
or
add
out
push
push
lods
jge
sub
push
cmpsb
adcb
sub
jle
stc
rcr
sub
add
push
jae
pusha
icebp
lcall
pop
add
sbb
ficoms
xchg
int
inc
lock
aam
divb
xor
lock
incl
and
cs
pop
mov
lods
jp
dec
lock
xchg
jo
mov
scas
mov
jb
lock
dec
pusha
les
fadd
mov
mov
dec
not
push
mov
cmp
push
cmp
jl
push
push
nop
and
mov
flds
das
loope
das
push
xor
out
jp
pop
out
push
cmp
xlat
or
push
cmp
lret
cmp
arpl
push
add
dec
dec
xor
mov
jg
rorb
lret
popa
cmpsb
dec
lfence
pushf
jo
cmpsb
pusha
les
repnz
dec
loopne
fiadds
pop
and
jns
xchg
fisttps
inc
xor
mov
aaa
dec
xor
lods
shrb
test
mov
js
hlt
int3
cmp
pop
jns
ss
push
bound
cmp
jl
add
push
scas
xchg
or
shrl
xor
push
loopne
addl
dec
add
adc
or
inc
mov
mov
xchg
fcom
push
add
jecxz
test
mov
outsl
cwtl
cmpsb
iret
out
aad
pusha
fwait
xchg
xorb
in
inc
sub
test
mov
cmp
add
inc
dec
adc
xchg
cmp
pop
insb
cmp
inc
and
push
inc
mov
rolb
cmp
cmp
lahf
sar
lahf
repnz
call
cli
mov
jge
dec
sahf
jbe
mov
rorb
popa
mov
add
fisttps
in
imul
dec
sbb
ret
cltd
xchg
sbb
repnz
loopne
addr16
aas
lret
fcomip
sar
sti
fcomi
push
sub
and
cmp
in
cs
dec
mov
pop
push
stc
fldl
sub
push
xchg
ds
shlb
jge
dec
and
jb
nop
ret
test
or
daa
pop
sub
aad
lret
ja
ja
js
lods
xchg
jge
and
test
in
xchg
pop
ss
das
push
insl
sub
mov
ret
sbb
aaa
mov
dec
mov
js
jl
xchg
lret
xchg
mov
std
pop
sbb
or
hlt
scas
cwtl
push
out
stc
push
iret
inc
inc
xor
lret
fs
lock
std
mov
dec
roll
jns
push
adc
bndldx
mov
out
popf
aas
pop
add
test
adc
or
rcl
sub
iret
out
push
pop
xor
stos
scas
and
adc
mov
aad
mov
lret
clc
daa
adc
jmp
jnp
jo
pop
scas
or
ss
lds
mov
push
dec
dec
in
daa
sbb
fs
repz
aas
pop
jg
test
and
mov
sub
es
xor
cmp
imul
out
or
js
jb
mov
fnstsw
orl
mov
sbb
scas
pop
inc
push
aad
fsubs
adc
scas
clc
dec
gs
out
sbb
aaa
pop
sarb
pop
or
jl
aaa
dec
pop
roll
ret
test
les
mov
add
xchg
pop
push
push
ret
sar
jge
push
mov
dec
mov
or
adc
mov
ffree
inc
inc
shrb
out
jnp
loope
test
loop,pt
jnp
scas
std
repnz
repz
pop
mov
sub
mov
and
sbb
xchg
ret
sbbl
shlb
push
js
loop
pop
mov
outsb
adc
inc
sub
lcall
push
cmp
xchg
outsb
fucomp
cvtdq2ps
loope
fwait
cmp
add
call
mov
stos
sbb
repz
lcall
aad
cmpb
mov
or
lret
sbb
jne
jae
cmc
jecxz
fdivp
pop
adc
add
ficoml
rclb
push
into
cmpsb
shl
mov
stos
cltd
enter
push
mov
mov
out
test
jp
bound
pop
in
inc
mov
push
push
sbb
xlat
cmpsb
push
or
add
pop
test
mov
jno
xchg
add
and
cli
push
leave
lods
in
roll
movsb
mov
jmp
sbbb
sub
inc
mov
aad
lea
and
pop
jp
imul
mov
jle
inc
sub
lahf
jo
outsl
xor
test
call
mov
movsb
xchg
and
insl
pop
push
shll
lods
ret
aam
sub
mov
xchg
xchg
pop
pop
mov
pop
and
push
add
xchg
jo
xor
adcb
inc
inc
jo
in
scas
das
hlt
xchg
pop
xor
xor
faddl
adc
mul
xor
xchg
sbb
and
jmp
pop
ret
jbe
mov
push
or
pop
cmc
div
aad
sub
mov
pushf
bound
adc
ret
cmpps
leave
xchg
pop
add
jb
cmp
mov
inc
hlt
xchg
mov
adc
mov
and
pop
inc
test
push
arpl
push
inc
mov
mov
ret
and
out
fbstp
inc
jae
test
mov
dec
inc
cld
or
sub
ss
sahf
push
and
rclb
test
xchg
out
subl
nopl
rclb
jmp
inc
or
push
unpcklps
or
loopne
xlat
icebp
jecxz
cmp
je
dec
add
mov
mov
xchg
scas
dec
adc
xchg
cmpsb
mov
cmp
loope
or
std
pop
mov
xchg
out
xchg
xor
jnp
inc
jno
sub
frstor
mov
pop
push
aaa
add
cmp
mov
mov
insl
or
mov
xor
popf
add
lea
jns
mov
call
mov
cmp
xchg
pop
sbb
mov
das
imul
and
inc
cmp
aas
mov
xchg
mov
xorb
aam
mov
add
sbb
add
push
sbb
stc
icebp
adc
sub
lea
xor
add
add
pop
mov
ljmp
hlt
push
fwait
mov
cli
ja
inc
clc
clc
daa
xchg
in
lret
sbbb
adc
fsubs
mov
mov
stos
out
sti
loope
fcmove
imul
testb
insl
cltd
mov
jbe
dec
divb
inc
adc
mov
add
xchg
push
jl
cmp
jp
jg
xor
aad
fwait
xor
mov
movsl
mov
fsts
bsr
xor
xlat
shrb
or
xchg
out
jmp
into
lahf
and
fnstcw
add
dec
nop
cmp
testb
push
cmp
inc
add
xchg
repnz
xor
mov
or
rcl
test
pusha
lock
xlat
in
mov
xchg
mov
pop
aad
not
mov
test
jg
jp
lahf
fistps
div
push
mov
push
sbb
pop
mov
mov
jp
jo
adc
mov
jne
xor
in
fstpt
cltd
loope
je
fcomip
stc
stc
pop
push
aas
addr16
fidivl
pop
shl
sahf
pop
sub
test
js
out
sbb
xor
popa
lahf
xchg
outsb
call
jnp
mov
mov
push
pop
push
stos
mov
call
mov
dec
xchg
jbe
js
ds
jne
sbb
jg
outsl
add
sbb
repnz
popf
inc
pop
gs
cmp
data16
push
test
pop
repz
pop
push
pop
std
aas
jo
sub
add
sbb
leave
inc
add
into
into
lahf
loopne
pop
pop
es
and
fs
inc
xchg
or
sub
ret
cmpsl
xchg
into
insl
cmc
pop
nop
roll
jmp
loope
jae
jno
add
cs
fsubp
bound
pop
jle
ds
cmp
ds
jl
or
push
cltd
insb
fiaddl
push
cli
jnp
jb
mov
add
stos
adc
in
pcmpgtb
sub
das
mov
jno
mov
adc
jb
jno
mov
adc
xchg
adc
lea
dec
test
dec
cmp
inc
ja
mov
pop
in
std
stc
decl
mov
or
in
rolb
test
lock
enter
jl
xchg
outsl
xor
data16
and
cmp
pop
subl
pop
nop
addl
lods
mov
out
out
sub
jbe
mov
pop
sti
scas
arpl
xor
and
stos
pop
push
and
nop
mov
sub
push
call
mov
pop
lods
jge
jmp
imul
addr16
cmp
stc
or
jecxz
lcall
mov
sbb
outsl
mov
in
sub
lock
call
push
in
xor
push
addr16
mov
lret
loope
data16
pop
mov
xchg
fistpll
push
pushf
orb
adc
sbb
jbe
mov
std
mov
xchg
or
mov
inc
inc
and
ficoml
add
rclb
mov
adc
mov
leave
mov
push
xchg
inc
and
daa
movsl
cmp
jne
pop
idivb
jg
fildll
or
fistpl
fsts
push
in
cmp
or
and
loopne
hlt
imul
cmc
xchg
aad
dec
js
into
sbb
xchg
cltd
inc
adc
int
arpl
sub
dec
cmc
mov
stos
clc
jbe
sub
cmp
iret
loopne
dec
mov
jg
or
xorb
lock
xor
pop
mov
imul
xor
jno
je
fs
push
adc
lock
cmp
cmp
scas
sbb
jge
enter
adc
cmc
or
mov
iret
adc
outsb
rolb
and
mov
push
fldt
sbb
jp
into
iret
test
mov
adc
pop
fnsave
out
mov
pop
ficoms
outsl
sub
addb
xchg
mov
cmpsb
sub
ljmp
and
aaa
in
xor
loop
imulb
jns
lea
and
xchg
push
aaa
mov
fstpt
sub
pop
adc
push
xchg
lods
sbb
push
or
jae
cld
adc
rcrb
mov
in
test
jmp
jmp
repz
sbb
addr16
es
orb
lret
cld
and
movsb
push
push
jle
shll
cld
out
push
fiaddl
xchg
mov
dec
aad
xchg
stos
xchg
clc
add
jge
add
mov
sbb
mov
inc
daa
hlt
in
pop
cmp
jnp
mov
dec
inc
cmpsl
insb
adc
mov
test
adc
aas
lods
into
mov
lods
scas
dec
aam
jg
push
cmp
mov
insl
xchg
sti
enter
dec
pop
dec
aaa
mov
jmp
pop
dec
lret
push
mov
outsb
pop
pop
sbb
rolb
or
push
mov
lret
mov
xchg
out
fcmovnb
scas
xor
cmpsb
fiadds
out
sub
and
fwait
gs
ja
push
or
rcl
push
and
mov
filds
push
sbb
jne
or
sub
mov
out
push
mov
inc
cmp
daa
cmpl
adcb
lods
push
jmp
xchg
mov
adc
mov
xor
out
lods
cmp
hlt
cmp
scas
dec
jmp
cmp
insl
or
inc
lods
test
lret
push
sbb
mov
negl
fidivs
add
iret
enter
pop
push
ds
out
cmpsb
mov
pop
jno
mov
mov
push
pop
lds
imulb
pop
xor
scas
sub
or
pop
cli
cwtl
cmpsb
fstl
in
in
or
ja
aaa
push
fwait
cmp
sub
pop
outsl
or
mov
leave
mov
mov
ds
inc
xor
xchg
mov
loope
add
pmaxub
fs
dec
outsb
mov
stos
xchg
sbbl
in
sbb
jne
cmpsl
mov
dec
fimuls
or
repz
scas
scas
fldl
scas
push
jns
data16
ss
pop
mov
lret
or
in
les
jo
into
add
push
das
or
xor
insl
dec
xor
push
dec
stos
pop
dec
mov
fsubrl
jmp
lret
sub
in
mov
jge
sub
jmp
sbb
idiv
dec
cld
mov
js
test
jne
shrl
sub
popa
fwait
jo
cmp
lds
jns
add
ja
cmp
lods
cmp
repz
lea
inc
xchg
nop
bound
inc
add
jl
jae
inc
xlat
in
ror
push
int
xchg
xor
jns
out
add
push
mov
lea
push
push
sti
or
cld
lahf
shrl
testl
stos
call
cmpsl
imul
iret
insb
outsb
jo
jge
adc
xor
jmp
cmc
dec
cwtl
repz
jnp
fnsave
or
mov
fcomi
in
gs
push
add
sbb
adc
pushf
adc
shll
mov
push
call
mov
sbb
bound
fwait
mov
lret
popf
xchg
adc
xor
in
pop
xor
inc
or
mov
test
dec
dec
xchg
xor
std
jle
outsl
pop
push
stos
cmp
jg
cmp
pop
jle
ret
roll
jnp
mov
add
mov
loope
shll
std
in
pop
cld
or
in
fsubs
xorl
mov
pop
jmp
pop
fdiv
shlb
mov
stc
rcrb
xchg
xor
dec
pop
mov
xchg
inc
out
mov
shlb
xchg
sbb
in
inc
into
shl
sti
adc
sarl
sub
roll
sbb
pop
lahf
add
or
jne
sub
and
je
pop
or
sahf
sbbl
pop
xlat
dec
cli
divl
push
xor
inc
xlat
dec
sahf
lcall
shlb
lcall
addb
test
cmp
cltd
loope
mov
mov
mov
roll
sbb
pop
jp
push
mov
lds
icebp
call
adc
xor
xchg
xchg
mov
cmpsl
lahf
mov
push
test
.byte
and
xor
adc
and
push
popa
xlat
jno
aas
sbb
or
xchg
movsb
and
mov
test
and
dec
int3
push
push
dec
push
sub
or
xor
enter
ja
pop
push
xchg
pop
pop
mov
xchg
jecxz
fcmovnbe
adc
mov
xor
into
inc
xor
out
cmp
jo
adc
adc
mov
push
lret
mov
xchg
dec
out
je
inc
or
adc
movb
push
mov
inc
add
cmp
or
js
push
repnz
insb
xchg
rolb
int
inc
jmp
cmpb
dec
js
test
xchg
movsl
sbb
addr16
adc
rorl
es
enter
repz
enter
cmpsb
pop
cmpsl
rcl
sti
inc
fsubr
scas
push
xor
pop
mov
mov
push
mov
mov
mov
cltd
int
ja
test
mov
stos
fwait
mov
mov
mov
stos
mov
pop
mov
and
pop
lcall
mov
jl
scas
xor
jle
push
lea
inc
fcompl
or
adc
or
adc
aad
pop
das
and
shl
adc
xchg
or
mov
cmp
sbb
dec
fnstsw
leave
or
ficoms
andl
addr16
mov
cmp
icebp
mov
xchg
lods
mov
hlt
lcall
lock
pop
pop
fstl
js
mov
ficomps
sbb
add
dec
mov
jae
mov
loop
lds
cld
push
leave
sbb
test
adc
and
ljmp
fidivrl
mov
mov
pop
outsb
mov
mov
xchg
loop
sbb
jle
stc
cmc
dec
mov
dec
pop
das
push
lahf
xchg
push
cmp
jo,pn
xor
mov
dec
pusha
mov
or
lds
inc
lahf
lods
sbb
outsb
cmp
lahf
pop
xor
xchg
sub
pop
pop
push
test
xlat
pop
pop
rolb
jns
push
sarl
je
push
inc
mov
add
das
lsl
sub
push
cmp
or
adc
adc
adcl
adc
enter
dec
or
bound
push
in
sub
and
xor
lcall
lret
xchg
push
lea
cmp
les
stos
daa
insb
sbb
xor
mov
mov
pusha
lods
jno
gs
inc
pushf
out
adc
dec
cmpsb
test
les
ret
cmp
and
lods
insl
enter
mov
rcll
sahf
jae
lret
and
roll
enter
and
mov
mov
add
sbb
jge
imul
sarb
pop
dec
in
imul
mov
cltd
ret
or
mov
add
dec
fildll
dec
xchg
jnp
ds
je
jne
sub
das
or
xlat
cmp
jp
scas
fsts
divb
inc
push
xlat
lods
dec
pop
cmp
mov
scas
cmp
sti
ja
sbb
sarb
ss
out
movsl
sbb
cmp
pop
dec
fstpt
or
nop
js
cs
sub
sbbl
dec
jp
add
fisttpll
out
mov
inc
or
or
in
loop
add
jecxz
fsub
mov
stos
push
mov
dec
xor
imul
popa
xchg
push
es
push
in
inc
cmc
data16
or
add
inc
test
les
xchg
cld
mov
inc
popa
stc
pop
jecxz
clc
xchg
push
iret
int
sub
or
pop
daa
sbbl
addb
aaa
mov
mov
and
and
pop
incl
mov
jb
pop
cmp
arpl
pop
call
mov
jle
or
stc
out
scas
les
push
cmpsl
enter
push
inc
cli
fs
pop
jns
sahf
stc
imul
out
iret
ret
mov
fs
mov
inc
popa
fildl
adc
adc
mov
xor
push
jecxz
jns
ret
gs
pop
push
mov
xchg
xchg
mov
sub
ja
sahf
ja
loopne
jo
jbe
mov
fisttpl
xchg
push
mov
lods
notb
dec
mov
test
pop
into
outsl
xchg
pop
cmc
jb
cmc
popf
imul
stos
loopne
mov
lea
test
dec
add
xlat
pop
or
sbb
pop
pop
lret
push
cs
adc
call
mov
je
mov
out
jp
xchg
lods
xchg
cmc
bound
mov
pop
lea
test
cli
pop
pop
or
adc
clc
stc
fwait
xor
jae
sub
orb
fmul
jne
push
mov
jns
das
stc
cmp
ljmp
lea
mov
adc
aas
bound
or
jmp
xor
lret
dec
addr16
lock
loopne
nop
push
pop
mov
push
push
pusha
mov
inc
ds
push
and
out
pop
hlt
icebp
scas
xor
jns
jno
cmp
repz
lods
test
mov
lahf
xchg
jns
sub
std
jbe
xchg
sub
push
cmp
mov
adc
jmp
jne
sbb
jo
adc
sub
xchg
mov
cld
pop
scas
mov
pop
out
hlt
lds
dec
and
cld
mov
stc
jge
sbb
fldl
out
dec
xchg
push
mov
xor
icebp
out
loope
cwtl
inc
and
movsb
and
adc
repz
ljmp
add
xor
fildll
popf
mov
or
push
adc
sti
xor
sub
add
adc
subl
aas
pop
loop
imul
out
aad
xchg
xchg
push
in
and
push
in
fldl
sahf
inc
jno
dec
jae
sbb
mov
lea
loope
sub
xor
add
or
dec
xor
ss
xchg
test
jne
jp
stos
in
pop
test
movsl
pop
xchg
inc
xor
mov
adc
sub
xchg
inc
imul
lods
imul
cmp
aad
loopne
push
ja
stos
subl
xchg
inc
mov
fdivrs
cmp
rolb
add
cmp
pop
iret
adc
repz
shlb
int3
in
out
and
out
sahf
inc
repz
xchg
push
sbb
jne
cmp
inc
aad
in
roll
mov
inc
or
mov
fiadds
jns
pop
out
jo
push
lods
inc
inc
xchg
iret
push
xor
mov
pop
mov
sbb
push
lds
aas
dec
repnz
xchg
call
dec
sub
mov
lahf
mov
push
std
in
arpl
jl
xchg
movsb
push
add
xchg
adc
jns
pop
bound
jne
jl
arpl
adc
stos
lret
int
inc
jnp
push
out
in
out
mov
lock
lods
xchg
stos
cmpsb
xchg
dec
loopne
xchg
int3
add
leave
jae
jp
scas
daa
out
mov
jmp
fstps
mov
mov
lret
and
lcall
fistpl
dec
mov
movsl
fiadds
mov
fdivrl
mov
lds
xchg
inc
repz
pop
adc
out
test
or
addr16
pop
test
pop
shll
push
jne
nop
xorb
xchg
pusha
inc
add
aam
in
mull
into
jecxz
add
lret
mov
jge
ret
xor
aam
xchg
jle
hlt
fs
leave
xor
ja
mov
sub
mov
xchg
adc
jb
int
mov
cmp
popw
xchg
stos
lcall
adc
jbe
je
add
popa
mov
sbb
adc
lret
mov
xor
mov
cmp
and
adc
sbbb
lock
jmp
ljmp
cli
xor
repz
aaa
les
popf
ret
sbb
mov
shll
xlat
es
add
out
out
out
sbb
or
aad
data16
sub
xor
aaa
or
sbb
and
cmc
fnstsw
pop
into
dec
jns
rcll
or
sti
adc
or
mov
sarl
dec
push
xor
dec
stc
or
pop
cmp
jno
mov
in
add
xchg
js
xchg
test
dec
stos
ds
pop
std
jge
inc
jp
sub
push
pop
xchg
mov
pushf
pop
lods
or
jmp
imul
mov
cmc
lock
inc
pop
daa
jmp
push
bound
mov
push
lret
ja
and
andb
lock
add
mov
or
sub
in
push
dec
dec
std
fdivr
pop
rcrl
cmp
mov
mov
pop
pop
stos
popf
nop
fwait
cli
mov
movsl
dec
sub
test
pop
and
out
xlat
out
lcall
ss
dec
cwtl
push
jle
pop
cmpb
cmp
in
lds
cmp
movsb
ljmp
lret
fsubrl
nop
add
fidivrl
into
jae
cmp
jno
movsb
hlt
paddsw
xlat
cmp
push
mov
mov
repz
sbb
rclb
stos
mov
inc
icebp
lret
jns
jae
jmp
mov
or
dec
mov
jl
aaa
jbe
push
cli
inc
int3
mov
push
jns
movsb
insb
cwtl
test
xchg
je
jns
popf
nop
jnp
sub
jb
mov
push
lds
mov
jl
dec
fdivrl
inc
inc
ljmp
imul
pavgw
push
dec
dec
std
mov
mov
fsubs
push
dec
ljmp
or
out
pop
stos
dec
lods
test
fldenv
out
adc
stos
push
jno
or
xchg
rcrl
cmp
and
les
dec
vmovntps
pop
bnd
sarb
stos
jne
fistl
les
xlat
pop
sahf
xorl
cmp
or
aas
out
or
pop
adc
dec
mov
xor
lods
adc
ja
insb
in
int3
push
das
jne
jnp
adc
xor
into
push
cmp
and
imul
popa
leave
inc
in
dec
cmp
jg
test
mov
mov
mov
xor
or
jmp
call
faddl
xchg
adc
inc
lock
lds
subb
test
mov
pushf
mov
and
pop
sub
test
mov
paddb
xor
in
add
ljmp
rorl
sti
fbstp
fcmovne
sub
pop
sub
loopne
xchg
inc
or
mov
cmp
sub
sbb
xor
sub
shll
mov
jb
push
shll
scas
sbb
sbb
xor
je
fldcw
ss
jle
leave
sahf
outsb
insb
nop
lcall
mov
jge
outsl
dec
adc
xor
in
pop
lods
notb
dec
xor
mov
cwtl
in
arpl
dec
fsub
jmp
bound
divl
push
and
mov
or
or
cli
ja
out
mov
xchg
jl
mov
sub
gs
frstor
pavgb
out
testb
sbb
push
and
inc
push
ss
and
mov
and
sbb
mov
nop
pop
mov
lods
notb
dec
out
mov
fstpt
cmp
shlb
add
out
cli
mov
ljmp
xor
cmp
and
sbb
loopne
fs
xchg
mov
cld
lret
or
mov
je
xchg
jge
aas
mov
ret
enter
lock
or
xchg
and
loopne
dec
xchg
xor
push
jl
sub
pop
ja
lea
out
lods
icebp
leave
inc
inc
sub
xchg
leave
imul
sub
xchg
pop
or
int
into
iret
insb
adc
mov
inc
dec
pusha
lds
icebp
inc
push
dec
sbb
test
push
and
lcall
cmp
iret
or
sti
std
xor
pushw
cs
fdivs
dec
xor
clc
dec
mov
std
pop
pop
xchg
mul
sbb
pop
cmp
push
pop
lcallw
dec
dec
cmp
lret
or
jb
cmp
hlt
imul
or
fldt
bound
adc
pop
vfnmadd213ps
in
stos
fs
loopne
xchg
jmp
and
push
inc
mov
ret
cmp
cli
sub
rorb
sahf
in
lret
cmp
or
pop
fistpll
cmp
test
jmp
mov
mov
lock
hlt
sub
or
out
cli
add
int3
push
add
subl
je
and
add
arpl
mov
xchg
ret
test
jbe
push
aad
push
dec
rcr
push
mov
lods
mov
daa
shlb
cld
jecxz
xlat
lcall
mov
xchg
and
push
and
js
add
xchg
dec
es
int
outsb
lahf
jns
in
jae
xor
test
or
shlb
stos
divb
jg
lea
mov
push
lods
imul
sbb
push
adc
mulb
xor
ror
jmp
aad
sbb
push
outsb
shlb
cmpsb
jne
inc
sub
sub
jecxz
mov
enter
or
shll
jnp
cmp
push
andb
sahf
sbb
mov
loopne
pop
int3
jecxz
and
les
mov
jmp
mov
xor
mov
int3
loope
add
adc
cmp
pop
incl
outsl
repz
jb
mov
ss
cmp
je
mov
add
mov
jne
xor
jmp
add
jl
sub
push
movsb
sbb
jnp
cwtl
fisubrl
cmpsl
mov
jl
push
sub
imul
arpl
and
inc
or
mov
add
cwtl
mov
arpl
pop
popa
and
mov
jl
leave
add
mov
dec
dec
int
push
push
mov
xchg
xchg
icebp
hlt
xor
out
dec
lret
nop
cmc
sub
repnz
repnz
sbb
inc
test
pushf
cmp
jmp
cmp
dec
jnp
dec
cwtl
ds
mov
push
call
out
mov
hlt
dec
ret
adc
xor
jno
mov
icebp
jmp
pop
mov
pop
inc
push
cmp
lea
in
dec
or
daa
jbe
inc
xchg
mov
sbb
jle
dec
imul
or
add
sbb
movsb
mov
xchg
or
cmp
xlat
xor
push
xchg
jb
insb
int3
jbe
push
push
add
push
movsl
icebp
cli
inc
cmc
inc
dec
pusha
lret
push
data16
sub
int
int
mov
dec
xchg
test
stos
adc
push
jbe
je
adc
or
insl
mov
inc
popl
jmp
xor
push
int
lods
jge
and
cltd
out
bnd
lock
lret
adc
incb
sahf
rcll
addr16
aam
and
ret
es
xchg
jp
xor
mov
push
xchg
mov
mov
es
adc
addb
push
mov
insl
mov
shlb
lret
mov
and
psrlq
mov
pop
inc
jle
mov
xchg
not
ljmp
or
mov
sub
std
adc
in
lods
out
fdivl
mov
mov
jnp
lret
push
push
sbb
add
sbb
xchg
mov
push
imul
jno
scas
dec
in
mov
and
stc
jge
lahf
rolb
ds
int
int
mov
mov
bound
jo
repnz
xchg
stos
inc
stc
out
pop
sti
jo
std
mov
push
pop
inc
push
out
pop
xchg
adc
xchg
orb
or
cld
repnz
testl
mov
inc
out
mov
dec
cmc
push
pop
add
mov
das
add
cmpsl
pop
xor
in
inc
xchg
ja
call
es
pop
or
sbb
sti
lods
push
mov
pop
sub
mov
mov
ret
pop
int
inc
jns
ud2
push
sti
cmpsb
ficoms
inc
loope
mov
in
xchg
popf
cmp
pop
push
pop
in
popa
mov
mov
jmp
mov
ret
lea
int3
mov
push
test
rclb
pop
jnp
int
cmp
scas
fbld
insb
xor
ja
or
xor
ds
mov
mov
repz
movups
pop
bound
pusha
or
jp
add
jae
inc
cmp
lret
and
roll
movsl
xor
xchg
rorb
call
daa
xor
lret
cmp
inc
lods
ret
js
icebp
shll
jg
lahf
mov
rorl
fisubs
sub
outsb
push
js
jg
xchg
jle
sub
in
jnp
gs
sbb
mov
fcmove
lods
loop
out
jae
pop
jecxz
int
int
cmpsb
imul
scas
xor
gs
jae
call
mov
jmp
push
lea
push
movaps
ds
xchg
ror
hlt
fs
ljmp
stos
cwtl
cltd
in
jb
jne
shll
xchg
xchg
pop
loop
loop
and
add
add
adc
sub
mov
add
ret
out
mov
jge
movsb
pop
pop
cmp
dec
xchg
mov
out
out
and
in
lods
push
pusha
imul
xchg
dec
dec
es
dec
mov
orb
sub
sub
arpl
and
fwait
and
push
xchg
and
lret
daa
sub
add
pop
sub
adc
dec
mov
or
sub
xor
nop
pusha
out
lea
outsl
push
cmp
jae
popa
mov
mov
jbe
out
mov
lret
rcrb
or
mov
repz
shrl
movsb
push
mov
mov
mov
mov
mov
or
sub
add
and
adc
stos
xchg
insl
lret
push
into
sahf
jl
loope
ljmp
mov
cmpsl
adc
push
push
jo
daa
ja
mov
mov
in
sbb
mov
pop
lods
mov
xlat
push
repnz
dec
jbe
mov
xor
pop
out
and
xchg
aam
xchg
lret
movsb
push
sbb
loop
movsb
xchg
mov
mov
sub
cmp
repnz
or
test
mov
xor
or
rol
sub
mul
mov
jmp
and
loopne
andl
in
ja
mov
mov
mov
ss
js
jge
jge
adc
sub
loopne
out
gs
lock
loop
xchg
inc
lods
fldenv
hlt
jnp
pop
repnz
outsl
int
ss
rolb
sub
enter
or
adc
pop
mov
push
je
inc
mov
dec
scas
mov
xchg
arpl
lock
fwait
repz
mov
cmp
inc
int3
inc
ss
adc
pop
mov
xor
pop
scas
push
gs
push
cmp
daa
inc
fidivrs
mov
ljmp
push
stos
pusha
mov
jo
mov
mov
add
cli
dec
xchg
movsl
rcl
push
and
dec
sbbb
xor
movsb
cltd
inc
repnz
push
jle
les
out
leave
pop
or
push
inc
lds
out
aas
cmp
leave
bound
out
popa
pusha
inc
push
popf
adc
pop
xor
push
das
loop
cmp
and
les
push
jmp
bound
mov
pop
push
mov
into
fnstenv
push
mov
lcall
sub
mov
cmp
fwait
jl
lahf
lahf
push
repz
out
or
adc
cmp
ret
out
fsubrs
mov
cmp
cwtl
test
idivl
add
xor
jge
repz
adc
xor
mov
jg
pop
cmp
cld
dec
aam
inc
sub
mov
in
movsl
fldpi
sbb
imul
or
iret
xlat
sbb
shl
popf
sbb
dec
sub
aaa
mov
pop
fisttpll
cmpsb
arpl
mov
push
scas
and
mov
fdivr
and
jno
adc
jmp
in
rorl
in
shll
mov
inc
out
lcall
repz
dec
movsl
push
mov
jne
imul
pop
or
mov
dec
fildll
rcrl
addb
out
in
dec
mov
lcall
mov
or
mov
outsb
jp
xchg
mov
cmp
push
int
inc
xor
and
icebp
test
cmp
in
sbb
mov
or
mov
je
mov
out
or
aam
mov
stc
out
stos
das
or
mov
cmp
rorl
or
add
ftst
sahf
mov
sub
pop
mov
sahf
jns
int3
pop
adc
test
cli
aad
and
mov
push
dec
mov
or
lods
stc
movsb
xor
mov
and
std
incl
add
daa
pop
insl
cmp
jnp
cmp
or
or
inc
shlb
std
jb
xor
mov
adc
cli
scas
fcoms
imul
scas
pop
mov
icebp
or
cmpsl
xor
dec
int3
push
nop
mov
mov
mov
pop
xchg
rclb
addr16
pop
or
dec
push
adc
cmp
popa
cmp
and
subb
out
and
mov
mov
jp
pop
pop
out
sub
insb
dec
stos
aaa
fbld
xchg
push
ljmp
xlat
jl
pop
sub
xor
mov
call
cmp
inc
lret
jge
clc
lret
pop
push
inc
push
into
pop
repz
stc
mov
mov
and
das
jno
lea
push
jp
scas
jl
out
rcr
lods
out
mov
xchg
sahf
in
xchg
add
jne
mov
subl
push
mov
aaa
rcr
int
in
mov
ret
aam
sub
lret
int3
into
cmc
scas
mov
jo
call
xor
out
sbb
xchg
xchg
mov
xchg
fldt
outsb
xlat
dec
dec
bound
bound
adc
xlat
or
mov
pop
scas
lcall
popa
fwait
xchg
test
scas
lahf
mov
shl
icebp
cmpsb
stos
idiv
icebp
outsl
rclb
jg
js
pop
jo
add
enter
popf
dec
and
xor
or
mov
xor
adc
cmp
jl
inc
adc
aad
mov
dec
jmp
mov
test
scas
add
mov
out
mov
pop
and
inc
xchg
ret
dec
jl
pop
push
xchg
rep
inc
das
push
test
add
ret
dec
jno
or
sub
xchg
push
adc
add
dec
mov
mov
sbb
xor
xchg
js
pop
inc
mov
pop
test
fdivl
push
stc
mov
pop
aaa
xchg
lock
sub
xchg
ljmp
sbb
repnz
mov
adc
loop
test
jns
lahf
out
push
and
mov
jne
mov
into
add
scas
pusha
sbb
add
mov
pop
xchg
leave
es
lahf
push
push
add
push
icebp
inc
bound
fdiv
imul
cmc
push
nop
dec
cmpsb
jae
aad
shll
sbb
fadds
cmp
outsl
cmc
push
jmp
cmp
jge
aaa
adc
js
cmc
ret
aam
out
movsb
mov
in
aad
add
aas
mov
sub
adc
push
sub
lret
nop
or
stc
pop
ficompl
cmp
ja
dec
outsl
cmp
add
mov
scas
jo
idivl
dec
mov
lret
adc
mov
xlat
mov
add
frstor
inc
xchg
int3
iret
pop
push
push
xlat
dec
insb
and
dec
fisubrs
mov
mov
ret
inc
mov
jbe
ds
in
jbe
inc
neg
sbb
mov
pop
out
cld
push
pop
and
cmp
pop
or
add
xlat
rolb
fisttpll
fcmovu
sub
pop
jae
incb
pop
fwait
andb
sub
mov
mov
sbb
scas
orl
pop
pop
xchg
push
out
ret
nop
loopne
xor
pop
scas
jo
mov
xor
cmp
shrb
les
pushf
jg
jbe
fldenv
push
jne
test
add
mov
adc
and
xchg
adcb
mov
jbe
clc
mov
lea
out
insb
arpl
jae
es
jge
inc
nop
adcl
and
add
in
inc
jge
sti
or
scas
sbbb
adc
adc
ss
jne
in
out
sub
lret
xor
xor
sub
and
xor
jbe
jg
mov
dec
jno
lods
lret
iret
jae
jne
dec
jno
les
in
add
lret
jne
mov
add
out
xchg
push
or
sub
fucom
loopne
push
dec
inc
cmp
jmp
out
aam
outsb
stc
push
cmp
aas
call
outsl
xchg
xchg
xchg
adc
xchg
ja
out
sbb
sbb
notb
cmc
cmp
pop
aad
add
in
dec
popf
sub
inc
loopne
movsb
push
xchg
mov
into
fdivs
cmpsb
dec
add
scas
xchg
aad
cli
jne
xor
inc
repnz
stos
jae
bnd
cmp
rclb
add
out
xor
inc
in
mov
or
cld
xor
in
gs
scas
stc
pusha
and
sub
std
stc
dec
out
int
orb
push
lcall
loop
inc
repnz
movsl
jle
out
xor
jne
shll
fs
adc
inc
fldl
test
in
fiadds
add
lds
cmp
mov
leave
cmp
lods
mov
iret
dec
stc
icebp
imul
lret
mov
cs
mov
mov
xlat
mov
in
call
mov
sub
and
shll
enter
test
xor
bound
cmpsl
int
or
nop
idivl
pop
scas
cmp
arpl
loopne
and
mov
lock
test
cmp
movsb
imul
ret
sbb
movsl
into
andl
into
orb
and
fnstcw
mov
shll
pop
cmp
mov
into
rolb
xchg
xchg
inc
adc
subb
adc
insb
arpl
push
clc
fiadds
mov
pop
inc
mov
jecxz
insl
scas
jg
and
dec
mov
in
cmp
mov
fildll
lods
or
into
sbb
fwait
sbb
cs
xchg
mov
fucomp
cmp
lahf
addr16
inc
mov
enter
push
xor
fldcw
push
in
rol
or
pop
outsl
pop
fisttps
je,pt
add
mov
ret
filds
xchg
lock
sahf
lcall
nop
sub
or
jo
adc
cmp
in
mov
pop
jne
fldenv
movsb
jb
or
idivl
sahf
adc
mov
xchg
xchg
test
cs
push
jge
sub
ret
push
jae
pushw
das
add
xor
fs
xchg
cmpsl
xor
js
jg
jl
enter
sub
in
sarb
adc
fisttps
addl
push
jp
ja
jle
push
sbb
inc
jo
and
aas
lret
iret
mov
dec
mov
mov
mov
xor
iret
cwtl
lahf
cmp
mov
scas
or
lcall
push
xchg
cmp
dec
mov
jg
das
jns
fcoml
mov
add
in
push
sbb
shll
pop
mov
jb
jle
or
jno
or
sarl
xchg
sub
adc
add
ds
ret
mov
mov
dec
rorl
out
shl
sbb
loopne
iret
out
clc
pop
add
adc
lcall
sbb
ficoml
sub
fwait
mov
push
stc
add
lahf
rolb
dec
pop
pop
lret
pop
gs
stos
insl
mov
rolb
nop
fnsave
popa
mov
cmpsb
lret
jp
stos
mov
bound
cmp
mov
pop
aaa
push
push
test
shrl
xchg
push
mov
dec
or
push
loope
pusha
into
aas
call
call
cmp
popf
es
cmp
pop
add
insb
dec
dec
arpl
mov
sub
pop
cmp
add
or
fsubr
lret
outsb
shl
cmp
pop
nop
dec
add
inc
addr16
lahf
lods
xor
jg
sub
out
or
cltd
test
out
mov
xchg
mov
mov
jo
cmpsb
push
iret
jle
test
repz
push
aad
mov
xchg
notl
dec
push
in
imulb
push
cmpb
push
mov
dec
push
or
addb
sbb
ljmp
push
jb
inc
adc
pop
pop
into
int3
cmp
fstps
pop
cmp
pop
mov
ljmp
cs
stos
jp
mov
sub
je
pop
das
popa
repz
fcoml
cmpsl
xlat
add
mov
pop
loope
jmp
ret
aas
jmp
add
stos
cmp
mov
aas
ds
mov
fcoms
pop
jnp
push
ljmp
mov
jle
jns
test
mov
xor
shlb
mov
dec
arpl
rorl
out
xor
out
icebp
lods
and
add
aad
cmpsl
addr16
lea
dec
mov
jno
xorb
bound
push
mov
xlat
and
shlb
cltd
stos
cmp
adc
adc
dec
loope
push
jle
cs
xchg
add
insb
rcrb
std
mov
in
add
in
jns
shlb
repz
mov
fdivrp
inc
loopne
xchg
movsb
pop
and
pop
aad
push
push
dec
mov
and
push
in
cmpsb
xchg
or
xchg
xchg
ret
mov
ret
or
movsl
fdivrs
cmp
jp
sbb
dec
outsl
ret
push
addl
sbb
into
sub
sub
push
cli
dec
addb
mov
jno
cmp
stos
mov
mov
mov
call
mov
iret
leave
sub
jge
adc
adc
mov
sbb
adc
enter
lret
in
aaa
imul
fdivr
lret
push
xor
rcrb
pop
rclb
and
enter
xor
xor
imulb
lret
pop
aad
add
lret
iret
dec
push
ds
mov
cmpsb
jns
mov
inc
adc
xchg
cltd
push
movsb
int
xor
xchg
sarb
and
xor
push
cmp
sarb
xchg
sbb
iret
push
push
shl
push
ds
ss
movsl
mov
lcall
sbb
push
fcomi
add
test
pop
popa
cmp
imul
outsb
jp
dec
test
aas
sarb
int3
jne,pt
mov
pop
xchg
fcomps
mov
testl
stc
ret
out
lret
pop
inc
mov
gs
or
call
sbb
cmpsl
icebp
addr16
inc
je
xchg
pop
loope
fs
nop
test
clc
push
xor
fwait
mov
push
out
imul
shrl
and
loope
push
mov
in
or
cmp
xchg
jbe,pn
in
xchg
mov
jno
and
dec
inc
or
mov
outsl
sbb
cmp
std
mov
leave
ret
fcmovu
test
pop
fcoml
shlb
dec
cmpsl
pop
or
call
lret
out
insb
test
ljmp
cmpb
scas
mov
and
in
and
jb
push
test
imulb
insb
in
xchg
ret
scas
dec
inc
lahf
push
xchg
das
mov
fdiv
sub
in
inc
cmp
jo
mov
fdivl
cmpsl
xor
int3
imul
out
out
popa
daa
cmc
lahf
jl
sbb
loopne
es
repz
dec
fstps
stos
jg
pop
es
and
dec
mov
inc
mov
icebp
test
addr16
xchg
jmp
xchg
jno
adc
pop
jb
jl
outsl
mov
xchg
pusha
lret
xchg
shlb
sbb
and
pop
adc
jne
fwait
int3
sub
add
xchg
mov
jae
and
add
rclb
lds
jbe
shlb
fs
sub
xor
hlt
pop
jo
mov
sbb
dec
mov
pop
lea
outsl
icebp
push
cmp
dec
fildll
or
add
shll
sbb
inc
ret
and
loop
pop
mov
push
mov
aad
add
pop
les
adc
dec
subb
lret
ret
aaa
xor
push
ljmp
and
sti
lret
inc
mov
in
sbb
daa
sub
into
mov
mov
push
outsl
sarb
and
jne
ja
leave
push
cmp
push
out
xorb
push
aam
mov
dec
popa
les
outsb
pop
push
mov
dec
mov
jns
in
out
cwtl
jg
pop
cmp
jno
push
les
movsb
inc
loopne
jp
or
dec
xor
xor
jb
test
mov
outsl
sub
add
rcll
shlb
mov
xor
test
jnp
sub
xchg
test
push
mov
test
jl
and
lahf
pusha
repnz
daa
data16
cmp
mov
lock
out
or
inc
out
jb
push
mov
inc
cmc
add
push
lahf
push
out
and
data16
shll
or
add
je
addr16
int
lods
rcr
pop
pop
mov
mov
mov
push
mov
aas
ficomps
mov
xchg
and
mov
xor
aad
lcall
je
ja
xor
cwtl
push
fwait
rdtsc
sbb
int
or
lcall
pop
dec
jp
in
scas
cmpsl
es
stc
lcall
out
fidivl
jnp
mov
adc
fdivr
jnp
in
mov
push
mov
inc
pushf
out
int
daa
lods
mov
out
inc
mov
jns
pop
aaa
mov
and
shlb
xchg
out
sbb
adc
into
das
cmp
cli
js
sub
icebp
js
sbb
jmp
and
repz
out
popa
sar
sub
aam
push
mov
or
push
and
push
xchg
sub
mov
mov
fwait
nop
push
sbb
add
push
xchg
in
les
dec
cmp
xorb
or
push
popa
sbb
jno
lods
xlat
loope
test
fwait
cmc
loope
fcoml
inc
adcb
imul
dec
ss
rorl
scas
icebp
mov
imul
in
pop
pop
leave
stos
fsubs
push
or
jnp
sub
repnz
cmp
lcall
aad
nop
dec
and
add
pop
adc
cmp
push
add
push
mov
lods
xchg
or
out
jns
push
mov
add
mov
into
jno
mov
sbb
dec
lcall
mov
add
repnz
xor
jge
lods
nop
cmpsl
sub
stos
adc
mov
addb
fisttps
cmpsb
stc
les
icebp
ret
pop
add
outsb
and
loope
jl
nop
push
inc
jnp
cmpsb
rol
frstor
xchg
push
iret
push
push
cmp
mov
and
jecxz
imul
fcmovne
sub
mov
dec
insb
pop
aam
orb
popa
inc
cmc
daa
stos
fstps
push
rcll
dec
pop
adc
fdiv
out
lea
pop
cmp
repnz
shll
pop
sbb
push
lret
push
sub
cwtl
sub
push
ret
rcr
inc
pop
jbe
xchg
rcrb
mov
insl
jb
adc
push
xor
jg
outsl
lret
xchg
andb
nop
test
outsb
fwait
test
je
int3
jbe
xchg
cmpsb
and
push
xchg
pop
xchg
sbb
xchg
pop
xchg
sbb
ret
imul
mov
mov
in
aad
add
sub
jno
int
sbb
sbb
rcl
sub
mov
cmp
add
test
imul
mov
stc
aas
pop
mov
jecxz
aas
cmp
pushf
and
pop
cmp
dec
inc
or
sub
testb
cltd
stos
lret
inc
ret
xchg
ss
imul
fistpll
inc
jle
ja
pop
mov
gs
lods
and
fs
sbb
jbe
cmp
mov
neg
sub
cmp
aad
lock
ret
add
cs
or
test
push
fidivrs
sub
xlat
add
cmp
fwait
mov
loop
call
pop
xlat
vpunpcklbw
lahf
and
popf
hlt
mov
jns
into
sub
jmp
inc
mov
mov
jle
inc
mov
xchg
test
push
adc
cmp
arpl
inc
add
dec
jle
loopne
dec
mov
insl
mov
movsw
mov
xor
fnstsw
add
inc
nop
jl
ss
mov
lea
inc
xchg
insb
sub
sub
pop
test
jmp
mov
cmovae
in
cmp
dec
sub
out
mov
mov
and
mov
iret
cmc
andb
sub
icebp
mov
mov
mov
mov
cmp
lods
aam
sub
aas
out
and
outsb
add
mov
jmp
or
insl
addr16
cwtl
push
push
add
or
mov
lea
xor
lods
add
xchg
pop
nop
scas
stos
out
and
repnz
push
inc
shr
push
pop
in
adcb
adc
fdivrs
fdiv
js
shll
pusha
imul
hlt
sub
xor
mov
test
add
push
rcl
cmpsb
or
rcll
sbb
cmc
decl
loop
xor
adc
insl
xor
mov
lods
sub
adc
int
notrack
daa
xchg
mov
sahf
fiadds
pop
adc
icebp
lret
push
mov
mov
lods
pop
insb
pop
inc
pop
or
lcall
xor
mov
popa
sarb
das
clc
push
imul
mov
repz
push
sti
xor
xchg
ja
mov
and
pop
adc
mov
pop
iret
mov
xchg
push
jge
ficoml
nop
aas
or
bound
and
outsb
lret
nop
mov
ja
insl
sub
jb
mov
cltd
test
pop
push
js
pop
jo
jno
scas
push
icebp
fwait
jmp
out
push
cmp
aas
mov
sbb
neg
sub
das
ss
add
rcr
aam
push
outsl
sbb
ja
dec
or
inc
into
bound
lret
repz
pop
rclb
xor
pop
or
mov
cmp
xchg
es
cmp
loop
pop
lahf
mov
push
push
inc
stos
cld
xchg
not
fsubrs
pop
jno
jae
popf
or
enter
dec
or
cmp
adc
lods
test
aad
sbb
test
dec
test
enter
ljmp
mov
cltd
insl
das
in
notl
mov
mov
cltd
xor
pop
pop
jp
inc
push
sahf
lock
lds
rcrb
divl
sub
dec
sbb
testl
or
xchg
inc
pop
daa
adc
pop
mov
add
cmc
roll
pop
lahf
addr16
pop
test
jg
lret
adc
into
test
addr16
out
sbb
test
xchg
jo
sub
addl
jne,pt
or
lock
repz
mov
sbb
or
ja
dec
and
xchg
pop
push
push
out
lret
mov
pop
js
sarl
inc
clc
pushf
popf
xchg
repnz
out
out
cmp
jg
dec
hlt
loopne
mov
or
cmpsl
xor
pop
push
in
dec
pop
mov
negb
cmp
sbb
imul
cmp
dec
mov
scas
cs
dec
stc
adc
xchg
cltd
loopne
sbb
fidivrs
jecxz
gs
clc
cmp
pop
sub
xor
lock
inc
ss
int
mov
xor
in
ljmp
or
inc
jbe
mov
push
icebp
cmpsl
cmp
push
test
in
push
je
loope
fwait
cltd
xor
cs
mov
mov
mov
mov
adc
int
pop
imull
cmp
jno
jl
jmp
cmp
push
mov
aas
push
cmp
inc
ret
pop
pop
inc
push
imul
lret
mov
mov
push
loopne
add
notl
pop
add
sarl
jmp
push
mov
dec
idivb
loope
cmc
adc
je
push
popl
mov
sbb
mov
pop
iret
mov
arpl
repnz
pop
xchg
or
sub
xchg
addr16
imul
lock
mov
dec
sub
loope
and
out
xchg
ret
fwait
rolb
push
add
lods
xchg
je
call
popa
mov
cmp
sbb
mov
fmuls
adcb
outsl
add
fisttps
in
xchg
jl
and
xlat
mov
scas
adc
adc
es
push
xchg
sub
test
pop
lret
sbb
xchg
popf
xchg
pop
mov
test
and
pop
out
ds
insb
xchg
lods
dec
je
push
mov
sub
sbb
xor
mov
and
xchg
jp
push
into
sbb
xchg
push
arpl
pop
xor
sub
aas
pop
inc
push
enter
sbb
and
aaa
repz
dec
cmp
xor
jns
repz
in
jb
stc
js
sbb
cmp
and
dec
les
rclb
insb
cmp
pop
imul
lock
mov
cmpsl
insb
and
daa
lcall
mov
cmpsb
ja
insb
repz
add
adc
mov
adc
insl
or
push
cs
add
xor
pop
sub
adc
xchg
stc
push
ja
test
loopne
xor
js
out
std
sbb
es
loop
jnp
cli
pop
int3
dec
cmp
add
testl
mov
shl
mov
repnz
les
jmp
jbe
mov
ret
sub
mov
push
mov
loopne
ljmp
std
jl
dec
cmp
stos
insl
jo
adc
sbb
dec
stos
xor
mov
fnstsw
out
std
imul
cld
insl
test
mov
orl
add
movsl
cmpsl
in
sub
dec
xor
mov
ror
pusha
xor
outsb
and
jb
pop
mov
jecxz
cli
or
xor
mov
cltd
push
push
insb
xchg
test
xor
or
enter
test
mov
scas
arpl
shlb
sub
push
cmp
aaa
push
adc
mov
adc
jno
cmp
xor
cmc
add
dec
mov
mov
mov
aas
pop
xor
dec
in
pop
jecxz
test
mov
out
mov
mov
xchg
fnstcw
jbe
aas
hlt
insl
stos
xor
cmp
popa
cmp
cmpsl
leave
out
jns
andl
ss
cmp
push
add
mov
sub
les
jb
js
mov
mov
test
psadbw
enter
mov
dec
test
cmp
jg
or
cmp
adc
nop
mov
leave
jno
pop
push
push
divl
or
xor
and
mov
push
les
xchg
test
mov
adc
mov
adc
out
scas
and
das
jmp
mov
mov
stos
in
mov
and
sbb
push
push
and
fiaddl
sub
call
mov
enter
xor
xor
adc
jp
call
fdivrl
mov
mov
subb
dec
xchg
xor
divl
and
push
xor
dec
aam
adc
pop
cltd
test
aaa
lea
push
into
cmp
xchg
out
adc
adc
and
jmp
mov
lcall
jns
dec
pop
outsb
mov
and
cmp
and
pop
jnp
fs
add
ret
lcall
cmpl
int3
lret
push
fwait
cwtl
cmp
sbb
inc
jmp
cmp
inc
xorl
xor
jnp
jge
dec
pop
imul
jb
gs
fwait
mov
scas
sub
data16
jecxz
faddl
pop
iret
filds
cli
js
daa
sub
mov
push
cmpsb
enter
adc
ja
test
jl
xlat
popf
cmp
icebp
mov
out
add
and
ds
cmp
xchg
ret
fdivrl
sbb
js
pop
jb
sbb
lods
mov
jecxz
mov
xor
sbb
xor
jne
jb
movsb
mov
pop
mov
scas
scas
jo
adc
jns
negl
dec
adc
out
jnp
testb
adc
fistps
xor
mov
testb
push
lods
inc
jno
cmp
lods
testl
sub
xlat
push
mov
ja
in
test
pushf
push
dec
mov
pushf
push
test
mov
push
cmpsl
je
push
test
jmp
ret
testb
cltd
inc
lahf
int3
outsb
nop
dec
vpunpckhbw
stos
movsb
cwtl
inc
mov
add
dec
loop,pt
mov
movsl
sbb
sub
sbb
xorb
push
xchg
outsl
sbb
es
adc
negb
aaa
inc
scas
jae
or
lods
inc
jb
ret
out
out
xchg
mov
push
jbe
out
cmp
jg
mov
in
mov
fcompl
dec
test
xor
out
dec
outsl
cld
mov
sbb
jnp
ret
mov
iret
xchg
cmpb
inc
test
and
inc
mov
sub
and
mov
in
imul
fiaddl
sbb
jb
fs
push
pop
lret
mov
xlat
dec
jge
or
pushf
or
and
jp
mov
mov
cmp
push
add
repnz
adc
movsw
pusha
scas
or
into
stc
addr16
stos
test
jne
sarb
jae
mov
fidivrs
shlb
rol
out
daa
adc
jno
push
sbb
jmp
sub
stc
rolb
add
dec
cmp
adc
out
sahf
test
mov
ss
mov
das
xchg
movsl
enter
fisttpll
mov
xchg
sub
loope
incl
sub
int
sbb
push
jle
and
out
inc
cltd
jno
adc
and
daa
push
inc
int3
out
push
mov
cmp
add
push
andl
adc
push
scas
mov
test
fs
push
jo
push
dec
pop
aas
sub
or
mov
and
into
arpl
or
and
jecxz
and
in
movsl
jb
mov
xor
test
ret
cmc
aad
pop
stc
xor
inc
or
or
cld
popa
sti
push
mov
lahf
sbb
xchg
fisubrl
fstpt
pop
pushf
xchg
cld
and
call
stc
push
or
test
int
shrb
rolb
scas
fildl
sbbl
and
and
inc
push
ffreep
pop
mov
cltd
orb
repnz
sub
aam
int
dec
or
jle
test
xor
push
pushf
repz
inc
jnp
push
push
sub
negl
pop
addl
add
cmp
or
ss
push
cmpsl
jae
sub
jl
or
movsl
call
mov
adc
ja
cmp
add
pop
jmp
add
push
push
xchg
mov
jg
ret
call
cmp
pushl
pop
lcall
mov
dec
fistps
mov
stos
int3
push
xchg
xchg
imul
sub
push
mov
movb
pop
push
out
fisttps
cmp
inc
sub
icebp
jb
push
mov
pop
and
call
out
in
outsl
scas
mov
push
cmp
jl
je
sbb
mov
cmpsl
dec
scas
mov
xchg
or
inc
gs
mulb
stc
cmpsl
push
ret
jae
and
mov
into
inc
fists
scas
xchg
lret
repnz
and
sahf
xor
pusha
push
into
int
inc
jmp
sarb
cmp
out
xlat
std
mov
pop
sub
shll
sarl
jbe
das
pop
inc
sub
pushf
test
es
or
xchg
sub
aam
nop
inc
or
test
cmp
call
shlb
add
mov
push
sarl
push
mov
sbb
leave
mov
push
jo
push
cmc
mov
push
cmp
cmc
leave
and
ja
sub
mov
sub
insb
in
int3
sub
jbe
dec
int3
insl
mov
cmc
in
inc
sahf
mov
fsubs
pop
leave
cmp
add
jmp
testl
jbe
xor
jp
adc
jmp
xchg
fwait
fwait
sti
sub
pop
dec
iret
sbb
xchg
out
mov
and
pop
lret
mov
ljmp
cli
and
cmovp
sbbb
fidivl
and
xchg
in
idivl
add
fnstsw
lock
imul
bound
icebp
std
into
adc
push
popa
daa
pushf
or
cmc
jbe
sahf
mov
shll
push
xor
mov
repnz
and
adc
xchg
pop
push
and
inc
and
roll
movsl
out
sbb
les
sbb
or
fadds
push
sbb
xor
push
loop
sahf
flds
sbb
xor
mov
xchg
call
and
inc
and
lods
push
rcr
add
cmp
jg
lcall
cmp
into
lret
subl
test
or
xchg
jbe
pusha
jae
lods
jle
dec
repz
mov
adc
je
in
adc
rcll
jmp
fs
sbb
fnstsw
ret
scas
leave
clc
or
xchg
xchg
mov
mov
push
xchg
sub
stos
repnz
mov
jge
in
mov
mov
es
std
or
xchg
paddsb
sub
jno
fcmovbe
sbb
push
dec
adc
mov
out
in
sub
jb
and
pop
repz
imul
jae
mov
test
xor
rorb
enter
jnp
dec
pop
sbbl
or
rclb
gs
insb
mov
xor
sub
arpl
imul
test
into
jno
mov
imul
pop
dec
add
repnz
xor
or
test
mov
les
push
nop
mov
ret
loop
in
mov
and
inc
or
aas
push
inc
rcrb
xchg
das
cmp
xchg
aaa
mov
outsb
cld
fldl2t
enter
pop
popa
lods
sbb
sub
inc
lret
mov
xor
jb
xchg
and
mov
dec
adc
inc
stos
sub
and
xchg
cmc
adc
call
sbb
mov
cmp
out
jmp
and
xchg
pop
add
push
jns
int
cmc
push
add
and
int3
push
add
inc
lahf
and
push
dec
xchg
pop
add
add
xor
hlt
xor
xchg
or
int
inc
cmp
pop
jge
sub
or
adc
repz
pop
push
pop
mov
fsubs
pop
sbb
inc
or
ret
ffreep
aas
test
test
mov
mov
sbb
icebp
std
xor
subl
dec
pop
jecxz
jns
and
push
je
mov
jecxz
je
arpl
jecxz
iret
cmp
dec
mov
mov
movsl
and
pushf
cmpsl
or
push
mov
push
inc
dec
fld
imul
scas
es
or
cmp
in
je
add
das
mov
xor
test
xor
jb
or
jle
inc
leave
sbb
sub
bound
scas
cli
mov
rcll
push
adc
cs
inc
push
orb
ret
mov
xor
subb
push
cmp
out
cmp
and
test
fsubl
fs
mov
xchg
dec
arpl
jle
iret
popf
jo
mov
rcl
sbb
or
lcall
cmpsb
imul
push
inc
pop
pop
sahf
xadd
dec
enter
jne
aam
push
sub
mov
hlt
add
jecxz
loop
orb
jnp
andl
stc
lahf
dec
sub
cwtl
in
movsb
in
dec
inc
cmp
out
adc
mov
jno
pop
ljmp
fdivs
clc
add
js
sub
imul
and
cvtdq2ps
xor
fs
or
imul
les
pushf
aam
shll
fdiv
pusha
aaa
imul
nop
aas
mov
bound
jp
in
pop
or
add
call
xor
or
xlat
push
les
lods
mov
push
or
js
negl
fbstp
loopne
or
pushf
adc
hlt
push
aad
inc
adc
aam
dec
sti
ss
dec
sbb
in
test
xchg
mov
cs
mov
pop
orl
sbb
lds
movsl
sbb
sub
dec
rcr
out
sub
pop
lock
push
mov
movsb
sbb
xchg
mov
adc
add
daa
sahf
es
pop
stos
dec
iret
in
faddl
cmp
push
daa
shrb
andb
or
call
or
or
lock
dec
push
or
outsb
push
push
xchg
mov
mov
mov
ja
mov
inc
test
shl
shrb
add
cmp
hlt
xor
arpl
dec
inc
push
das
fs
imul
ljmp
rcrb
scas
jl
jp
and
add
jae
push
adc
dec
leave
and
testl
adcb
sbb
roll
cltd
sbb
xchg
aaa
sbb
inc
cwtl
inc
cs
xor
sub
fiadds
popf
jmp
insb
divl
aad
es
es
fidivrl
std
hlt
and
or
mov
mov
cs
aam
pop
into
aaa
movsb
popa
pop
mov
data16
bound
and
fldt
jno
lea
push
cmpsl
rcll
cmp
shl
lret
aaa
mov
xchg
or
inc
sbb
repnz
push
jp
mov
ret
adc
jge
cli
popf
add
push
lock
addr16
repnz
lret
jb
int3
adc
insb
loop
cmp
test
rol
shl
mov
mov
aas
inc
mov
adc
mov
jns
out
jle
add
inc
or
adcb
ss
mov
fucomp
push
xor
ljmpw
rcrl
lea
mov
push
add
arpl
pop
xor
fdivrl
and
pop
mov
into
cmp
mov
lret
push
mov
xor
adc
aaa
sahf
pusha
push
popf
insl
mov
addl
hlt
xor
das
sti
mull
mov
xor
rclb
pop
xchg
push
push
in
imul
xor
dec
movntq
test
inc
jo
mov
sub
xor
stos
fsubl
sub
cmp
mov
cld
pushf
sub
ss
xor
mov
ds
mov
push
outsl
inc
jmp
fldt
clc
cmp
dec
lea
lock
cmp
lret
popa
cmc
mov
fcompl
inc
les
push
sar
std
xlat
sbb
in
or
out
enter
leave
pop
in
pop
jp
imul
xor
mov
xchg
jmp
cwtl
sarb
mov
xor
inc
roll
inc
cli
cmp
sarl
sar
ljmp
mov
cmpsb
or
pop
flds
lret
or
shrb
jne
xor
in
fisubl
xor
iret
cmp
xor
ja
test
insb
pop
arpl
and
mov
sub
xchg
jmp
lcall
jb
fwait
push
sub
les
fnstsw
in
lods
mov
repz
push
xchg
insl
call
nop
sbb
rcrb
cmpsb
xlat
and
pop
dec
in
xchg
stos
popf
or
adc
inc
push
fcompl
stos
test
jo
ss
mov
pop
lock
xor
pop
mov
xchg
aas
cmpsb
inc
cli
mov
xchg
sahf
pop
in
pop
and
int
pop
divl
cmp
je
push
lahf
out
pop
sti
out
enter
adc
jge
pop
movsl
jmp
int
add
out
ss
and
fcoms
adc
dec
sub
cltd
and
xchg
jp
sub
jl
jno
pop
jbe
mov
sti
shl
inc
pop
pop
mov
repnz
jg
adc
inc
stos
and
fwait
hlt
lret
or
xchg
jle
ret
mov
mov
shlb
adc
in
push
mov
outsb
dec
pop
in
inc
pushf
daa
pop
cld
les
shll
out
jl
movsl
adc
out
inc
leave
lahf
mov
cmp
popa
pop
xor
mov
push
test
lock
mov
out
repz
in
inc
jl
test
dec
out
sahf
insl
outsb
pushl
sbb
and
movsl
imul
fldcw
test
sarl
cmp
push
enter
dec
loopne
fs
cld
xchg
push
mov
test
mov
jle
xor
push
cltd
es
push
and
push
add
js
addr16
sub
mov
ja
mov
fisttpll
ss
and
and
stos
and
addb
sub
into
cli
in
cwtl
xor
sbb
dec
rcrb
fwait
xor
adc
pop
mov
rorb
push
ret
repnz
dec
dec
mov
idivl
call
mov
into
jle
cmp
and
es
loope
enter
inc
mov
add
outsb
fbstp
ljmp
xchg
inc
ret
cmp
in
sbbl
xor
jp
lock
leave
push
mov
ja
or
icebp
push
fxch
test
je
inc
xchg
add
adc
sbb
jp
adc
sub
mov
jne
out
lcall
sti
les
pop
stc
addr16
xchg
imul
in
je
lea
in
dec
cld
or
arpl
cltd
sbb
imul
test
scas
test
lcall
shrb
insl
pop
mov
int3
cmpsb
jo
xor
addr16
inc
add
mov
dec
popa
jmp
mov
iret
stos
cmpb
or
repnz
mov
pusha
jmp
adc
out
or
es
jge
dec
inc
lods
push
sbb
cmp
xchg
cmpsb
jle
pop
dec
inc
pop
fdivp
inc
ja
mov
or
xor
sub
mov
or
icebp
ljmp
push
jle
pop
pop
dec
lcall
dec
ret
mov
pop
mov
lods
or
xchg
stos
shll
out
popf
pop
push
and
dec
xchg
dec
mov
pop
insb
push
jmp
mov
cmp
daa
pop
js
jbe
in
and
divb
push
loopne
inc
stc
dec
mov
sub
pop
test
sbb
test
ficomps
mov
pop
jl
imul
or
mov
jmp
sub
shll
rcrb
sarb
jb
sti
dec
shrb
lock
pushf
jge
int3
movb
std
sti
mov
test
mov
mov
call
cmp
mov
aas
sbbl
xchg
inc
fwait
popa
mov
inc
dec
ja
or
jb
sub
in
pusha
leave
pushf
dec
sbb
mov
div
push
jmp
push
jb
icebp
and
and
pop
into
fdivrl
push
sub
push
xor
push
cli
cs
data16
xchg
int
inc
jp
jns
mov
push
out
movsl
in
mov
or
sbbb
mov
outsl
adc
and
push
popf
pop
inc
fcmovu
add
cmpsl
cld
cmc
and
and
or
pusha
mov
mov
int3
cmpl
call
lds
push
jp
jmp
and
jno
in
fmul
jmp
sbb
mov
in
or
mov
push
sbb
jne
call
xchg
pop
inc
push
adc
jle
jnp
std
dec
nop
or
shlb
dec
sbb
ljmp
dec
repz
xchg
pop
cmp
btr
nop
pop
andb
cmp
loopne
insb
mov
sub
pop
popf
mov
dec
xchg
dec
xchg
mov
mov
idivl
dec
mov
or
movsl
jb
xor
fdivrs
fistl
and
popa
rcrb
sbb
jae
xchg
jge
push
loopne
xor
push
dec
sbb
push
mov
mov
cmpl
and
movsw
stc
fdivrp
dec
or
xor
jle
test
pop
test
jl
mov
pop
out
call
mov
fwait
xchg
call
jg
cmp
push
dec
xchg
push
loopne
cs
gs
push
push
pushl
repz
je
pushf
bound
fisubrs
sti
dec
inc
sbb
push
dec
int3
add
xchg
cs
es
xlat
sub
jle
in
rolb
jnp
sbb
fldenv
leave
and
xorb
shrb
imul
je
jae
push
push
in
jle
and
cmp
fwait
call
add
iret
lahf
iret
mov
cmp
fisttpl
pop
inc
fcoms
inc
or
test
out
cmp
and
fadds
sarb
shlb
aam
jmp
mov
enter
mov
inc
imul
mov
inc
ds
out
dec
cli
enter
ja
daa
mov
mov
mov
mov
mov
cmpsl
aas
pop
mov
negl
sbb
or
cld
jnp
pop
enter
inc
iret
pop
sbb
mov
in
fisubs
fstpl
sub
data16
sahf
jne
shl
and
dec
and
inc
inc
dec
add
add
mov
or
push
and
mov
mov
dec
mov
popf
jno
sbb
mov
dec
sub
jns
sbb
xor
in
loopne
add
mov
jbe
hlt
pop
xor
and
pop
mov
inc
pop
sbb
fildll
sbb
mov
push
sahf
fimull
aaa
pop
xchg
fldenv
cs
jle
mov
add
test
pop
jecxz
popa
sub
idivl
push
je
jnp
addr16
in
insb
sbb
sbb
int3
xor
push
es
shlb
stos
xchg
mov
out
int3
sub
enter
adc
cmp
into
sbb
push
jnp
hlt
mov
sti
mov
pop
std
orl
xchg
lret
xor
xchg
scas
addr16
inc
sub
stc
xchg
mov
mov
mov
jnp
and
or
out
movsb
call
mov
push
sub
add
mov
movsl
int
mov
leave
adc
inc
fcoms
loopne
les
daa
idivl
mov
fucomip
std
mov
adc
lcall
ret
lock
insl
dec
mov
gs
inc
or
xchg
sbb
je
sbb
mov
push
int
adcl
rcrb
int
and
push
cmp
mov
pop
mov
dec
sahf
cmp
repnz
mov
mov
push
sahf
jge
les
stos
and
pop
bound
pop
xchg
cltd
fnstsw
or
ljmp
adc
jmp
jae
lds
mov
std
adc
fdivs
or
sub
xcrypt-cfb
cmpsl
loope
shll
or
and
xor
rol
xchg
scas
test
mov
std
mov
push
pop
fldcw
sbb
fisubrs
loopew
inc
mov
sub
pop
inc
or
ss
andl
shr
insb
aad
lahf
inc
add
push
sbb
mov
cmpl
sub
xlat
xchg
movb
rcrb
fwait
shrl
fnstenv
mov
xor
out
mov
mov
xchg
pop
mov
mov
nop
lods
fnstcw
in
mov
push
or
or
cmpsl
clc
pop
jle
pop
pop
fs
imul
shl
jno
int3
or
repz
lock
mov
fnstsw
mov
ja
shll
mov
nop
xor
dec
xorl
rolb
pop
push
cmp
sub
mov
xchg
pop
aaa
lret
test
ret
stos
ja
lret
sub
insl
or
outsb
test
cmp
dec
adc
mov
insl
mov
xchg
dec
fidivs
mov
add
adc
xchg
pop
test
cmp
leave
xchg
icebp
mov
mov
leave
repnz
jno
scas
stos
int3
scas
xor
mov
xchg
fnsave
add
sbb
sub
mov
add
cmpsl
icebp
ljmp
cltd
jp
cmpsl
and
and
test
jg
fs
mov
sbb
ret
test
xchg
push
inc
cmpsl
dec
test
push
push
aas
insl
std
in
stos
cmp
mov
and
ret
stc
mov
testb
cmp
xchg
sub
push
mov
xchg
xor
fbstp
xchg
int
dec
pusha
mov
xchg
add
test
push
xchg
in
mov
les
lock
or
popa
ret
cmp
lods
jns
dec
push
in
jb
sbb
mov
cld
outsb
or
daa
mov
jb
jne
test
gs
adc
cmp
sub
je
ljmp
xor
xchg
mov
insl
ss
test
pop
rorl
xchg
pop
mov
jnp
ss
sbb
mov
sub
adc
sub
sub
sub
cmp
insl
out
xor
movsb
dec
jns
inc
clc
mov
in
in
cmpb
test
xor
int
jecxz
adc
cmp
xor
fiadds
imul
dec
shr
dec
in
jmp
adc
dec
mov
push
inc
shlb
dec
pop
gs
testb
push
in
sbb
inc
test
rcl
nop
sahf
lea
gs
icebp
xchg
push
xchg
push
aaa
cwtl
pop
fnstenv
inc
or
lds
pop
mov
lods
jle
xlat
sbb
add
add
adc
or
inc
cmp
fs
scas
loop
or
stos
jbe
lods
fists
cmp
adc
imulb
sub
ret
jmp
dec
pop
enter
or
jnp
nop
nop
lods
fs
push
add
push
dec
xorl
jo
and
add
sahf
jae
cs
inc
xchg
jecxz
jno
sbb
jne
inc
lahf
testl
outsb
sbb
inc
mov
jl
jae
stos
in
aaa
pop
rcrl
aaa
dec
int
ds
pop
mov
cmpsl
mov
int3
xor
stc
xchg
pop
lret
ds
rorl
fwait
mov
out
outsl
and
mov
lret
jmp
mov
and
mov
xchg
mov
pushf
call
ja
addr16
test
lock
sbb
bound
jmp
inc
scas
cmp
mov
arpl
jge
cmc
out
xchg
push
subb
es
xor
mov
pushf
into
cs
ljmp
jg
cmc
pusha
push
inc
adc
les
lret
mov
aaa
in
jae
add
sbb
mov
test
jbe
fildll
jae
lret
and
sub
sub
xchg
adc
sub
xchg
out
sbb
xor
xlat
mov
enter
shlb
sbb
xor
cli
cmpsl
sub
sub
in
dec
hlt
push
ss
xlat
cs
mov
or
jecxz
adc
pop
lahf
outsl
and
sar
jp
lods
sbb
out
dec
lock
movsb
xchg
mov
imul
adc
mov
xor
movsb
pop
lcall
xor
mov
repz
jmp
add
aad
sub
aas
xchg
movzbl
sbb
iret
jle
dec
dec
aad
adc
and
test
xor
outsb
push
dec
cmpb
int3
inc
arpl
inc
cltd
fmul
fistpll
push
sbb
or
sti
enter
push
icebp
mov
pop
jge
push
fildll
push
lcall
jmp
aas
test
notb
mov
test
xor
pop
dec
push
lcall
scas
loope
or
leave
bnd
add
bound
inc
cmpsl
fs
pop
rorb
mov
xchg
int3
scas
and
inc
das
adc
les
lret
and
xor
and
repnz
push
cmp
jno
aad
repnz
cs
sub
fistpll
xor
xchg
test
mov
pusha
arpl
sbb
idivl
sahf
jne
sub
jg
loop
repz
sahf
dec
imul
lahf
test
fisttpl
notb
xchg
sub
adc
xchg
lds
outsb
jo
sub
push
in
mov
add
pop
mov
pop
or
cmpsb
int3
sub
cmpsb
push
cli
push
and
nop
add
mov
adc
jbe
arpl
xchg
mov
pop
lahf
xchg
clc
mov
ljmp
mov
push
test
or
stos
outsl
inc
arpl
jno
jnp
sub
arpl
mov
pop
inc
lcall
test
fadd
sub
jle
jle
mov
addr16
xor
push
jp
jecxz
pop
pop
hlt
fisubrs
mov
inc
lcall
stos
jmp
bound
shrb
mov
cmp
scas
sbb
call
dec
ss
lahf
sbb
push
jne
pop
xchg
ficoml
movsl
push
mov
add
rolb
xor
icebp
test
xchg
add
cld
pusha
popa
gs
push
inc
pop
pusha
push
adc
in
dec
dec
int3
mov
out
sbb
popf
out
mov
cld
mov
daa
mov
jno
dec
cmp
push
pop
pop
xchg
push
bound
sub
out
xchg
popl
movsl
push
push
or
add
mov
js
les
push
call
test
xorb
sbb
mov
dec
xchg
sub
jno
loopne
movsl
push
in
lock
inc
sbb
shl
clc
mov
sub
mov
mov
ficompl
dec
icebp
scas
push
mov
push
mov
dec
fimull
pushf
sar
inc
jae
and
push
push
sub
aad
sub
sbb
inc
incb
aad
cli
add
pop
dec
xchg
pop
imul
add
imul
xchg
lcall
cmp
ja
xor
cmpsb
inc
leave
orl
dec
pop
cmp
imul
mov
lods
mov
cmp
cmp
sub
mov
dec
dec
lock
adc
inc
stos
int3
aam
jb
icebp
out
decl
mov
pushf
adc
pop
ja
test
mov
cli
jle
pop
cld
add
add
les
inc
mov
es
lret
pop
sub
pushf
pop
rcll
pop
gs
or
mov
roll
lahf
imul
lret
xor
xor
inc
lea
sbb
sub
xchg
insl
jns
sub
in
or
or
callw
fwait
pop
or
xchg
pop
out
pop
and
inc
or
int
cltd
cmp
stos
in
mov
or
dec
pushf
mov
add
pop
sub
int
je
jecxz
add
mov
shl
aam
mov
stos
dec
cmp
push
sahf
mov
add
dec
rcl
addr16
gs
add
or
aaa
das
xor
int
mov
jo
add
insl
inc
xchg
mov
mov
dec
in
movsb
mov
imul
mov
and
in
xchg
pushf
notl
xchg
xchg
pop
cmp
ljmp
push
int3
ds
sbb
out
mov
es
xor
loope
jno
fistps
sti
pop
pop
mov
std
lahf
sub
out
or
es
sub
pusha
push
pop
in
fidivs
lret
and
lcall
xchg
stos
pushl
xchg
push
fwait
stos
jno
arpl
imul
adc
lcall
xchg
arpl
mov
loop
sbb
inc
scas
cltd
adc
shll
dec
cmp
xor
sbb
or
jmp
fsubrl
dec
stc
xor
xchg
dec
cmpsl
lods
cmpsb
or
outsl
adc
mov
outsb
xchg
and
mov
int3
rclw
xor
lahf
cs
sub
or
flds
pop
push
imul
rol
jb
add
xchg
mulb
cmp
add
dec
ret
test
ljmp
dec
mov
dec
jne
push
dec
mov
dec
sub
inc
inc
cmp
mov
mov
ljmp
cmp
jbe
push
stc
fnstcw
andb
roll
or
cmp
subb
hlt
in
pop
subl
pop
test
aam
mov
daa
outsb
divl
xor
sti
fiadds
enter
sub
test
jl
add
es
in
out
aas
and
leave
push
push
sbb
xchg
and
jb
push
popa
daa
insb
fsubrs
iret
inc
or
gs
push
mov
js
sti
or
sub
sbb
mov
outsb
add
aas
fdivs
rorl
cs
rcrl
out
jl
xor
add
cli
movsb
sahf
mov
jb
fwait
xchg
in
add
jno
cmpsb
adc
out
xchg
jle,pn
push
insb
mov
add
jmp
imul
nop
xor
sbb
clc
jb
jnp
pop
test
mov
fistpll
cmp
jae
push
xchg
mov
adc
mov
push
hlt
jae
pop
jbe
addl
adc
into
jnp
xchg
nop
mov
pop
gs
sub
into
and
lret
inc
test
cmp
icebp
pop
pop
pandn
cmp
sbb
mov
out
insl
cltd
push
int3
pop
add
push
popf
mov
sti
push
shll
xchg
pushf
call
rcrb
addr16
mov
jmp
xchg
int3
setp
mov
jb
nop
pop
xor
int3
xchg
hlt
xchg
fdivrs
mov
nop
and
push
out
iret
imul
fisubrs
inc
cmp
jne
in
mov
fdivr
icebp
popf
sbb
pop
xchg
stos
ss
insl
sub
mov
outsb
test
mov
sub
and
ja
jbe
dec
mov
push
das
daa
push
sub
jnp
pop
dec
fcmovnu
mov
xor
mov
pop
and
or
fldl
cmc
push
push
jg
sbb
mov
or
sub
in
jge
add
mov
insl
into
sahf
cmp
push
push
rorb
push
pop
sarl
mov
mov
out
jl
jge
jmp
or
ds
dec
divb
xlat
insl
cmc
inc
and
pop
das
bound
mov
jno
or
and
mov
or
out
push
push
mov
mov
fcoml
pop
pop
into
in
mov
xor
clc
sub
call
jae
mov
mov
sbb
out
loopne
insb
sbb
and
jae
js
xchg
push
push
fadds
aad
adc
ficomps
insb
rcrl
lret
loop
and
nop
pusha
addr16
outsb
push
xchg
cmp
dec
dec
jne
xchg
dec
cmpxchg
mov
xor
xor
add
std
sbb
mov
std
loope
je
add
cmp
push
sub
lret
popl
filds
outsb
mov
mov
or
aaa
sub
sbb
inc
imul
scas
ret
repnz
and
rorl
decb
jns,pt
xchg
push
jp
idivl
cmp
test
pop
cwtl
lcall
in
jae
jecxz
or
adc
icebp
jecxz
stos
push
ret
clc
inc
sbb
xchg
lods
mov
divl
icebp
inc
jb
std
mov
cmpsb
call
shrb
adc
cli
add
test
add
jle
mov
out
mov
pop
jl
pop
and
dec
hlt
xor
out
cmp
repz
xor
mov
subb
fnstcw
add
arpl
mov
mov
push
adc
cmpsb
fsubrl
mov
in
jae
icebp
lock
bnd
mov
lret
outsl
sub
fnstcw
jb
test
aas
cmp
stos
mov
adc
jp
ds
add
repz
mov
repnz
cli
or
add
cmp
popf
add
mov
cld
pop
sub
lcall
mov
inc
lods
inc
sbb
mov
and
sbb
enter
xor
mov
or
test
and
sbb
jno
inc
adc
lea
fwait
pop
xchg
leave
iret
iret
sub
insb
fbstp
sub
pop
mov
cwtl
xchg
cwtl
xchg
ret
inc
cmp
loopne
stos
fmull
test
daa
adc
adc
or
scas
je
sbb
mov
popa
lea
jl
cmove
xor
movsb
mov
sbb
mov
jmp
mov
dec
leave
xchg
jb
dec
nop
mov
inc
test
outsl
sahf
xor
mov
xchg
in
ljmp
loop
dec
psrlw
shrl
xlat
sbb
cmpsb
mov
xchg
push
adc
dec
outsb
das
dec
xchg
cmp
scas
clc
jp
mov
les
cmp
push
jmp
cmc
push
push
inc
jns
sbb
sub
jb
pop
fcomps
push
je
mov
inc
hlt
ret
adc
mov
pop
repnz
pushf
jns
pop
mov
incl
add
clc
push
mov
sub
dec
inc
aad
pop
add
mov
add
cmp
sbb
cmc
stos
push
mov
add
out
fsubl
rcll
xchg
fs
push
stos
sbb
imul
and
xor
loop
push
mov
or
sbb
jle
setg
cmp
xor
insb
xor
das
ret
cmp
xlat
mov
fdivr
fnsave
inc
and
popf
or
adc
call
jmp
add
cmpsl
sbb
mov
insb
stos
jecxz
mov
stc
xchg
add
sbb
mul
lahf
repz
add
test
mov
jae
xor
jmp
xor
frstor
and
ljmp
gs
ss
hlt
sti
mov
repnz
and
add
xor
push
pop
addr16
iret
je
push
fs
xor
scas
shll
sbb
push
jmp
icebp
js
movsb
repnz
mov
fisubrs
lea
movsb
mov
dec
cmp
cli
mov
hlt
enter
xor
pushl
hlt
jmp
cmp
repnz
outsl
into
scas
vmovaps
in
add
mov
cmc
mulb
xor
jne
arpl
push
add
lahf
jmp
pusha
jecxz,pn
xlat
mov
adc
dec
hlt
sbb
push
sub
repz
addl
push
push
pop
test
data16
mov
inc
popa
dec
dec
or
sub
dec
test
in
xor
jae
xor
loop
dec
stos
sarb
cmp
cmp
daa
jg
push
aad
inc
js
pushf
xchg
addl
clc
sbb
jl
clc
pop
fldcw
mov
cmp
popf
dec
sahf
inc
cltd
or
cmp
mov
push
mov
cmp
mov
loope
aad
mov
fwait
pop
idivl
in
stos
jnp
bound
imul
fcmovne
mov
and
mov
fs
mov
std
repz
insl
fildl
pop
gs
add
fcmovu
jle
and
pop
enter
outsl
pop
push
and
bound
lcall
cmp
sbb
loope
bound
insb
stos
stc
fdivrs
and
push
mov
ret
mov
das
cwtl
mov
xchg
loopne
sahf
push
xchg
aam
jmpw
test
push
push
test
aad
sub
push
xchg
xchg
ljmp
xchg
push
pusha
in
jne
cltd
aaa
jo
dec
mov
popf
stc
cmpsl
push
mov
outsl
outsl
cmpsb
adc
aam
mov
fstpt
lods
std
imul
sbbl
jo
imul
sub
dec
ja
dec
scas
test
jae
add
out
ds
push
mov
jl
scas
mov
cmp
call
xchg
in
bound
jns
addr16
mov
cmp
adc
out
mov
push
data16
push
adc
cmpsl
push
mov
xor
je
push
ds
push
lods
pop
aaa
ret
jmp
in
and
fiaddl
mov
adc
or
xchg
shrl
dec
inc
push
mov
mov
inc
dec
xchg
mov
dec
aas
divb
in
push
adc
test
ror
enter
test
std
xor
sti
out
jmp
out
inc
out
divb
lds
ret
movl
xchg
out
inc
mov
sbb
push
cmp
pop
or
cmpsb
in
fdivp
jp
loope
or
loope
scas
pop
and
lcall
xchg
fsub
insb
push
sbb
adc
xchg
popf
pop
pop
ret
pop
push
scas
lock
mov
ret
aad
int3
shlb
leave
mov
lods
mov
inc
gs
aaa
ret
insl
dec
sbb
loope
test
mov
mov
out
dec
test
cmp
jl
mov
sub
inc
xor
imul
addr16
pushf
scas
push
jae
cli
xchg
xchg
jo
out
cmp
pop
js
fcomp
xchg
jnp
incl
imul
shl
mov
insl
dec
bound
outsl
xor
test
and
rcl
lods
cmp
sub
shr
gs
mov
sub
gs
add
add
mov
lods
aad
xchg
jge
negl
daa
or
inc
fsub
or
jne
insb
xchg
mov
mov
xchg
mov
cmp
or
pop
fisubrl
fldenv
mov
test
sbbb
repnz
lahf
inc
std
add
jmp
jmp
lahf
sub
test
je
jg
mov
pop
push
push
mov
mov
fucomi
sbb
nop
jle
out
xchg
or
addr16
pop
sbb
stos
and
int3
add
mov
jle
jne
or
mov
out
xchg
movsl
lea
cmp
addr16
mov
aam
or
push
xor
mov
mov
mov
dec
adc
in
cli
insb
lods
insb
jmp
sbb
push
xor
jmp
dec
jnp
sub
lret
leave
notl
jmp
inc
jae
push
flds
xchg
cld
and
dec
mov
ds
adc
xchg
pop
in
mov
call
leave
sub
sahf
and
fsubl
or
cmp
sub
clc
lods
call
pop
pop
mov
lea
js
dec
and
dec
xchg
jno
clc
mov
fsubrs
clc
fisttps
jae
pop
aaa
jo
lods
std
mov
sarb
xchg
push
mov
inc
fbstp
ja
adc
sahf
sub
divl
inc
pop
push
int
push
nop
push
pop
mov
push
stos
xor
inc
mov
fadds
cmpsb
pushf
ja
mov
jge
pushf
sahf
pop
cmpsl
pushf
adc
or
popa
jmp
or
pushf
jb
sub
push
je
rol
stos
pop
js
mov
notb
out
inc
lea
mov
imul
ret
add
mov
xor
sub
outsl
rclb
stc
sub
adc
mov
adc
and
mov
sbb
cltd
mov
sbb
imul
add
scas
in
movsb
subl
xor
sarl
arpl
cwtl
or
inc
xchg
jle
cltd
int3
mov
cmp
stos
scas
loope
movsb
movsl
gs
mov
leave
adc
popa
arpl
jmp
mov
push
aad
movsw
shll
sbb
dec
or
arpl
add
repz
les
addr16
nop
jns
jae
xchg
xchg
jmp
xchg
adc
test
ret
mov
xchg
jnp
push
mov
lcall
xor
mov
and
ss
rcrb
loopne
push
test
mov
ss
xchg
pop
rcrl
push
in
push
mov
das
cmp
mov
jo
or
outsl
mov
cmpsb
cli
call
inc
std
imul
pop
pop
cmp
dec
scas
cmpsb
and
dec
ja
lds
and
pop
repnz
pop
jno
add
test
fisubrl
lret
xor
add
in
mov
xchg
lds
jmp
aas
iret
cmpl
xorb
imul
sbb
pop
loopne
out
or
stc
cmp
push
jae
push
mov
scas
jle
fcmovnu
loop
aam
lea
add
loopne
nop
movsb
and
stos
xchg
mov
lret
cmp
test
sarl
fwait
dec
mov
clc
call
mov
cld
sbb
mov
lret
mov
and
cmc
inc
fldl
mov
out
push
cmp
mov
sbb
add
bound
loope
in
pop
call
pop
push
mov
ljmp
notl
xlat
fisubs
call
add
mov
ds
xchg
or
std
jno
imul
test
ss
icebp
xchg
lea
inc
mov
pop
inc
mov
cmp
cld
insb
dec
jl
or
adc
add
pop
js
or
or
push
nop
xor
into
mov
or
mov
mov
mov
rorb
cli
push
fsubl
lock
sub
movswl
pop
andb
cmp
mov
cmpsb
push
les
or
sbb
notl
push
fstpt
xchg
sub
push
sbb
push
pushf
push
sub
jne
stos
or
mov
xchg
push
cld
and
jno
cmp
ror
add
push
cwtl
imul
imul
mov
mov
add
icebp
xchg
and
sar
mov
sbb
ja
jle
clc
xchg
xor
mov
or
pinsrw
xor
mov
xchg
pushf
pusha
inc
ror
add
int
jo
sbb
test
pop
mov
in
bound
dec
movsl
rep
push
out
mov
arpl
push
movsl
lea
repz
popa
mov
xsaves
into
xchg
jno
push
mov
or
enter
testb
in
scas
andb
inc
pushf
movsb
cltd
fisubrl
mov
cmp
push
ljmp
adc
jmp
rorb
xchg
lea
cmp
imul
adc
int
mov
cmp
mov
mull
sbb
xchg
nop
rclb
cmp
mov
ret
adc
inc
dec
xchg
dec
push
arpl
les
ljmp
sarb
dec
mov
adcl
add
jecxz
xchg
mov
cmpsb
cmp
repz
push
jno
popf
lret
xor
or
test
outsl
sbbb
add
idivb
push
adc
lahf
pushf
test
leave
hlt
loopne
sbb
test
dec
lret
jecxz
or
insb
xlat
enter
cmc
test
into
mov
push
jo
out
pop
jns
xchg
mov
out
fidivrl
mov
lcall
add
inc
adc
mov
push
in
xlat
cmpsl
mov
jnp
popf
xchg
add
sub
push
ret
mov
cmp
icebp
jecxz
mov
mul
imul
push
xor
in
adc
sarl
std
cld
adc
mov
mov
lock
ss
lcall
out
xchg
cmpsb
push
jecxz
mov
pushf
xlat
es
fimull
xorb
xor
cltd
ret
or
dec
push
dec
jo
pop
jle
mov
out
mov
stos
pop
sub
xchg
icebp
xor
sub
xor
xchg
push
xchg
push
cli
xor
xor
or
rcrl
in
sub
in
popf
add
bound
cmp
mov
test
add
mov
xchg
pop
inc
popa
test
fsubrl
jle
pop
cs
sub
jecxz
mov
test
out
shrl
sti
mov
imul
jg
or
ret
xchg
adc
cmp
loopne
out
jmp
movsb
mov
pop
pop
out
cmp
mov
xchg
ja
pop
addr16
ret
icebp
ja
xor
fdivrl
aaa
int
cmpl
push
stos
ret
cmpsb
or
faddl
lods
push
dec
add
call
aas
add
insb
ds
add
cmp
sbb
jae
in
bound
inc
mov
adc
xchg
cmpsl
jmp
add
xchg
insb
shl
pop
pop
test
sti
fcomip
ljmp
enter
cld
jno
mov
mov
push
scas
divb
xchg
pop
fcmovu
inc
decl
mov
jnp
sub
je
mov
mov
sbb
sub
sti
movsl
cmp
or
and
dec
lret
lret
jge
xchg
dec
daa
lock
in
push
mov
dec
jecxz
out
stc
mov
js
push
mov
add
pop
call
subb
inc
sub
xor
or
rcrl
push
sub
lret
jge
mov
fnstsw
xchg
and
inc
jmp
cmp
jno
mov
jne
push
adc
mov
sbb
addl
add
call
fdivrs
sbb
push
add
cmp
sbb
imul
fldt
enter
ret
jg
les
dec
adc
mov
js
dec
ret
repnz
rcll
bound
inc
mov
stos
loope
sbb
mov
inc
push
adc
out
pop
mov
inc
add
push
cmpsl
pop
leave
repz
repz
xchg
xor
pop
pop
inc
inc
dec
loopne
dec
aam
pop
pop
idiv
fwait
fwait
push
push
mov
cmp
std
inc
or
cmp
outsl
scas
mov
iret
outsl
divb
add
lcall
imul
pop
mov
and
inc
sahf
sub
jg
movaps
mov
or
push
cld
jp
dec
std
in
sbb
cmp
test
mov
out
cmp
mov
stc
testl
jle
outsb
pop
lret
and
popf
mov
aad
sub
sbb
xor
inc
data16
insl
sbb
push
insb
dec
jmp
je
pop
in
pop
push
outsl
push
add
sbb
mov
cmp
xchg
aaa
cmpsb
bound
std
stos
sub
and
stos
pop
mov
push
mov
inc
mov
inc
xchg
sbb
jmp
aas
push
xorl
mov
inc
mov
loope
sbb
xlat
xor
jmp
scas
jmp
xchg
les
inc
fucom
leave
mov
pop
jg
xlat
lahf
mov
cmp
sbb
add
addr16
rclb
popa
rolb
das
push
jmp
test
stos
lea
cmp
mov
or
pusha
push
mov
pop
out
test
adc
push
outsl
dec
dec
mov
sahf
and
jmp
out
mov
jmp
mov
and
pusha
xor
lods
lea
leave
leave
push
inc
push
push
stc
cmovbe
pop
sbb
pop
inc
js
cmpsb
into
bnd
mov
jge
gs
scas
inc
adc
lods
repz
add
fldt
push
push
sbb
test
repnz
cltd
cmc
dec
popa
or
sub
pop
sarl
mov
cmp
sbb
jl
inc
sti
xor
aas
jl
mov
inc
es
push
adc
bound
push
and
mov
xchg
das
xor
sbb
xchg
cmp
pop
roll
adc
push
cmp
pop
icebp
cld
pop
clc
mov
jmp
inc
inc
mov
and
cltd
inc
pop
pop
xlat
inc
sbb
pop
lds
icebp
repnz
outsb
jmp
xchg
xchg
dec
roll
ficoml
xor
fst
sbb
mov
jecxz
xor
dec
sbb
jl
rcll
jae
mov
and
.byte
and
inc
cmp
test
icebp
test
jmp
nop
lret
outsb
popf
jbe
ret
sarb
and
iret
fwait
sub
mov
fcompl
cmpsb
das
mov
das
fucom
lods
in
dec
mov
dec
mov
sub
and
rcrb
mov
mov
or
pop
and
pushf
aam
cmpsl
imul
push
and
sub
pop
jmp
repz
scas
sbb
in
call
stc
bound
xchg
xor
ret
lock
adc
fmul
stos
dec
xorb
leave
cmc
int
jno
cmpsl
xchg
ret
out
xor
sub
ss
jmp
arpl
stc
dec
scas
js
add
sub
push
pop
test
inc
bound
jno
adc
push
loopne
pop
sbb
jmp
add
test
jg
mov
fld
ltr
and
mov
leave
sbb
stos
pop
aaa
push
fs
adc
loopne
fucomip
idivl
or
repnz
adc
jbe
dec
addl
jns
in
inc
pop
xchg
repz
out
cmp
ret
add
movsl
xlat
add
cmp
pop
subl
xchg
into
test
int
ljmp
push
ljmp
cld
jl
mov
mov
stos
push
lods
fistps
shrb
in
sbb
stos
ret
jno
imul
mov
or
cmp
test
inc
stc
or
imul
sub
addr16
mov
sti
sub
ror
push
enter
arpl
out
testl
dec
in
bnd
in
mov
in
pop
sbb
jecxz
inc
insb
inc
sub
lock
xchg
xlat
sbb
lea
pushf
xchg
dec
lcall
xor
xchg
pop
xchg
dec
lods
mov
test
pushf
push
in
sbb
popf
imul
sbb
test
push
adc
sub
adc
les
xchg
out
inc
push
sbb
xchg
pusha
mov
stc
pop
pop
pop
dec
dec
mov
outsl
sti
test
mov
sub
fstpt
clc
mov
ficoml
subl
xor
sub
push
lcall
xor
fistpl
jecxz
push
and
sbb
test
fidivs
mov
xchg
mov
jbe
bound
jecxz
sarl
aaa
mov
pop
fsubs
cmpsb
lret
call
inc
stos
js
mov
sbb
sbb
or
rol
jae
imul
test
mov
cmpsl
mov
arpl
out
cli
dec
xchg
or
fucom
adc
subb
pop
ljmp
cmpsb
mov
pusha
cmpsb
int3
lahf
mov
xchg
icebp
lock
jo
mov
mov
pusha
add
fwait
lods
and
dec
clc
int
mov
sub
push
jae
mov
cmp
hlt
mov
pop
fildl
jmp
mov
aam
test
sub
xor
mov
or
fsubrl
out
mov
addb
fidivl
sub
in
jmp
loop
test
or
xor
je
icebp
lds
imul
xchg
mov
js
push
aaa
xchg
xchg
imul
call
aad
pop
sbb
rorl
or
mov
dec
jno
push
jb
inc
into
sbb
push
bound
das
rcr
insl
dec
lods
pop
jmp
adc
mov
dec
push
les
cli
mov
cmc
in
leave
cmp
push
mov
adc
mov
and
jp
stos
and
sbb
inc
jecxz
popa
fndisi(8087
pop
aas
dec
mov
jle
popf
jle
mov
outsb
loopne
stc
lods
pusha
std
jg
sbb
enter
fadd
das
mov
jb
sbb
das
out
stos
lods
js
xchg
and
test
pop
movsl
nop
idivb
subb
je
lea
cmp
inc
cmp
xor
popf
mov
in
enter
and
mov
dec
and
les
pop
sub
pop
dec
dec
in
stc
insb
ljmp
mov
sti
push
inc
lcall
stos
outsl
jne
xchg
sbb
ds
pop
push
dec
cmpl
in
sub
mov
es
push
movsl
adc
in
cmpsb
leave
push
icebp
ja
cmp
in
push
add
adc
inc
popa
sbb
pushf
pusha
jmp
jg
jecxz
rcll
add
imul
pop
cmp
into
push
dec
pop
inc
stos
dec
repz
adcb
arpl
pushf
and
sbb
mov
push
mov
add
ss
adc
stc
shll
or
out
xor
out
add
cmp
subl
cli
icebp
ljmp
les
mov
push
ss
imul
jnp
add
dec
js
xchg
and
lcall
sbb
pop
ljmp
imul
adc
add
repz
filds
adc
mov
mov
pop
insl
lahf
sbb
add
mov
pop
sbb
xorl
dec
lahf
xchg
imul
outsb
jg
and
jecxz
test
mov
mov
jbe
pop
aas
inc
mov
int3
mov
cs
push
pop
pop
xor
sub
cs
loope
aas
sahf
int
aad
dec
ffreep
loop
imul
and
xchg
out
or
mov
mov
mov
adc
outsl
push
sti
cld
loope
cmp
clc
ret
push
pop
stos
clc
aaa
scas
mov
push
insl
aad
xchg
mov
pop
jmp
adc
pop
rclb
push
insb
mov
fwait
xchg
ljmp
mov
imul
or
out
push
scas
push
mov
sub
xchg
inc
xchg
add
lcall
add
insb
cld
pushf
adc
arpl
out
cmpsl
jp
mov
lds
mov
jmp
in
mov
out
xchg
in
sub
xor
out
xor
xor
add
inc
add
push
jl
ds
fcomip
push
push
xchg
dec
jp
and
in
ss
mov
mov
subb
ljmp
lahf
test
xor
mov
sahf
pop
in
mov
sbb
sub
les
loop
xor
or
dec
scas
push
xchg
dec
outsl
addb
aas
and
loope
rcr
mov
fldl
ja
pop
int
aad
pusha
orl
adc
or
test
push
jmp
in
lods
shrb
mov
cmp
push
adc
pop
inc
dec
ljmp
es
mov
mov
sub
xchg
push
test
pop
mov
stos
lea
daa
mull
in
stos
push
fstl
sub
sahf
pusha
mov
stc
sarb
push
rclb
xchg
shl
xchg
xor
orb
jae
pop
dec
push
iret
shlb
adcl
test
fists
sub
xchg
and
or
shlb
pop
push
fbstp
push
lds
leave
mov
int3
cmp
rcll
bnd
sbb
cld
enter
stos
out
mov
jmp
xchg
mov
fs
frstor
icebp
mov
rorl
icebp
mov
and
mov
pop
mov
cmp
add
js
mov
imul
stc
out
cmp
push
out
or
xchg
fstl
push
push
jno
out
popf
sub
or
add
pop
iret
notl
cmp
fsubrs
roll
and
cltd
imul
test
cmp
mull
arpl
loop
adc
scas
cmpsb
add
pop
test
inc
jecxz
orl
xchg
test
inc
sub
fisubl
mov
and
addr16
xchg
lcall
or
fidivs
loope
shl
jo
xlat
fiaddl
sbb
inc
jbe
fscale
pop
adc
xchg
jp
daa
mov
fcompl
jbe
lock
push
mov
cmp
add
xor
adc
or
enter
mov
push
add
jle
sti
out
xchg
mov
fsubl
fs
es
into
jnp
and
dec
push
jecxz
add
mov
xchg
lock
sbb
lods
adc
cli
cmp
js
mov
add
dec
scas
std
sbb
arpl
out
mov
inc
xchg
dec
in
push
dec
test
add
jb
inc
mov
and
bound
daa
cmpsl
mov
or
imul
cmpsb
jge
loope
jmp
inc
lret
add
add
lock
add
and
add
add
add
sbb
add
sbb
add
sub
add
mov
add
lock
add
pop
add
nop
xor
add
sbb
add
adc
add
pop
add
lock
add
add
mov
adc
add
adc
add
xor
add
add
mov
xor
add
add
nop
pop
add
rclb
add
loopne
add
rclb
add
inc
xor
add
push
add
adc
add
das
roll
add
add
push
roll
add
add
imul
add
xchg
roll
add
add
mov
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
rolb
add
rolb
add
add
push
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
jo
xor
cs
insb
add
je
push
je
jb
inc
insb
insb
dec
outsl
outsl
je
je
insl
jae
inc
popa
jae
push
jo
insb
insb
inc
jns
inc
add
gs
jb
imul
jb
popa
jb
gs
inc
outsl
outsb
je
outsb
jne
push
jb
arpl
jae
imul
jb
popa
je
push
jb
arpl
jae
imul
gs
jae
outsb
arpl
gs
jae
inc
gs
insb
insb
inc
jne
insb
push
popa
je
add
je
gs
insb
dec
inc
add
je
outsl
ja
imul
ja
je
jb
push
imul
imul
insb
insb
add
jae
popa
insb
insb
inc
jb
add
je
insb
imul
gs
push
inc
add
insl
outsl
jbe
inc
jb
add
addr16
arpl
push
arpl
jo
inc
js
arpl
add
je
insb
insb
inc
jne
insb
push
popa
je
add
je
je
je
jae
push
je
jb
dec
outsl
jbe
insl
outsb
je
push
je
jo
jb
add
outsl
jo
outsl
jbe
insl
outsb
je
push
imul
gs
outsb
je
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jno
jmp
jge
ret
inc
jns
pop
insb
xor
add
pop
mov
pop
add
and
pushf
movsl
call
and
xor
shlb
int3
adc
and
pop
pop
pop
mov
add
mov
xor
and
pushl
mov
pop
mov
sub
call
les
cs
pop
gs
xor
pop
xor
mov
sub
jns
and
push
push
mov
pop
popl
mov
or
sub
mov
add
movswl
cmp
jne
add
xchg
dec
pop
andb
sbb
mov
out
into
ss
fwait
mov
jbe
xchg
mov
roll
mov
dec
pop
sub
int3
sahf
dec
out
push
mov
push
mov
push
xor
clc
pop
sub
leave
arpl
cmp
jnp
sub
dec
xor
insl
and
stc
mov
dec
pop
sub
fisttpl
sahf
cmpsb
imul
add
repnz
mov
push
sti
xor
cmpsl
bsr
sbb
sub
idivb
inc
pop
mov
jne
lock
cmp
cli
aad
sub
pop
shl
in
addr16
add
xor
imul
mov
mov
sub
xchg
mov
xor
out
out
push
in
icebp
call
mov
stos
mov
stos
movsb
scas
jae
inc
mov
cli
add
jns
sbb
fidivrs
call
push
leave
lea
cwtl
lea
call
mov
push
add
shrb
inc
ss
test
push
xchg
test
cmp
cmp
dec
iret
cmpsb
pop
inc
mov
xchg
fwait
mov
pop
imul
cmp
popf
add
fs
and
adc
xchg
jle
add
cmp
jbe
cwtl
inc
fimull
nop
stc
mov
imul
pop
popa
outsl
inc
lock
mov
mov
jno
adc
call
mov
inc
rolb
cmp
sbb
adc
mov
mov
cmc
sub
add
pop
stos
dec
mov
xlat
add
push
sbb
call
and
mov
dec
cmp
push
flds
aad
into
outsl
loop
aas
inc
push
push
mov
lret
pop
jno
iret
pop
aad
les
pushf
fldln2
jnp
inc
add
popa
push
in
pop
inc
repz
out
lea
aad
ficompl
les
push
aad
pop
inc
test
sub
aad
sub
jp
test
les
roll
dec
jne
js
sub
aad
sub
sbb
in
mov
and
fisubl
adc
movsb
cmp
fistps
inc
xchg
pop
fdiv
dec
xchg
repz
iret
pop
ljmp
inc
rol
push
sbb
aam
repz
adc
dec
stc
or
dec
stc
or
inc
or
cmp
cmp
lock
mov
push
adc
xchg
imul
jmp
sub
dec
adc
pop
push
mov
test
xor
ljmp
movsl
pop
push
mov
notb
xor
push
gs
or
rclb
pop
adc
ss
push
in
mov
push
movsb
and
jno
cmc
push
sahf
sub
je
and
push
gs
push
gs
push
gs
push
gs
push
mov
sub
bound
add
pop
xor
cmpsl
push
xor
sbb
sbb
xor
es
gs
push
gs
cmc
push
mov
push
gs
lea
xor
push
pop
lock
cmc
and
cmp
or
cmp
jmp
gs
std
push
xor
es
mov
push
gs
iret
push
xor
cmp
ds
push
jl
mov
push
gs
sub
sub
push
gs
mov
xor
es
cmpsl
jge
jg
xor
push
in
push
es
jl
call
lods
cltd
hlt
push
gs
orb
pop
imul
into
dec
repz
sub
cmp
push
int3
jb
sbb
gs
push
add
cmpsb
xor
push
daa
test
push
es
test
cmc
es
sub
cmp
and
push
mov
mov
inc
test
or
push
jl
mov
push
gs
mov
les
sbb
cmc
sbb
or
std
and
adc
jne
bound
cmc
pop
loopne
ja
gs
push
gs
xchg
push
xor
push
gs
push
es
clc
lods
jge
mov
mov
mov
clc
mov
movsb
ror
push
cmpsl
fsubr
cmp
clc
cltd
xchg
inc
ljmp
jl
test
xchg
cmc
arpl
clc
cltd
xchg
in
ljmp
jb
push
and
fisttpl
stos
lea
mov
clc
mov
movsb
jb
dec
or
sub
jg
pusha
sub
lods
xor
push
gs
dec
push
stos
lea
mov
clc
mov
movsb
fildl
dec
mov
and
dec
push
stos
lea
mov
clc
mov
movsb
fildl
lret
in
dec
xchg
jle
cmp
aaa
pop
cmp
call
jmp
inc
sub
push
lret
sub
dec
push
stos
lea
mov
repnz
rcll
push
inc
es
jl
sub
or
cltd
inc
push
mov
pop
aad
or
ljmp
outsl
add
xor
fcompl
mov
pop
aad
or
ljmp
ret
lock
sub
gs
notl
xchg
call
push
bound
notb
scas
fwait
jb
mov
mov
and
mov
push
xor
push
jle
bound
or
mov
mov
aam
call
fwait
inc
popa
push
sub
xor
push
gs
mov
inc
bound
cmc
js
push
cmp
jle
mov
ljmp
test
push
mov
nop
jmp
sti
jl
hlt
sti
mov
xchg
popa
pop
or
xor
xchg
xor
jl
addb
cmp
sti
push
xchg
test
mov
pop
and
orl
xor
push
gs
push
gs
push
gs
push
gs
push
gs
push
gs
push
gs
repz
inc
xchg
hlt
push
sbb
jmp
push
gs
push
gs
repz
push
gs
push
gs
lods
enter
das
cmc
push
gs
push
gs
push
gs
push
gs
xor
insb
stc
aad
cmp
arpl
jae
jns
mov
cmp
test
xor
ficoms
fst
push
ljmp
roll
mov
arpl
cmp
mov
inc
pusha
lret
mov
lods
xchg
daa
pop
and
daa
or
sbb
mov
inc
testb
ret
xor
cmpsb
scas
push
arpl
sub
jg
pop
mov
and
fisubrs
or
lahf
mov
fcomip
popf
orl
mul
lret
sub
mov
mov
or
inc
inc
xchg
test
mov
jecxz
int
lahf
adc
fsubr
dec
or
js
sub
adc
adc
sbb
aas
mov
push
jecxz
mov
jmp
cmp
jns
imul
nop
jecxz
aam
push
pop
pop
push
lea
lock
cltd
xchg
scas
xchg
xor
push
aam
mov
sarb
repz
bnd
push
rcll
adc
inc
or
mov
stos
iret
fstpl
mov
mov
movsl
pop
mov
mov
fdiv
adc
add
bound
inc
lret
xchg
pop
push
insl
push
xchg
sub
nop
pop
frstor
mov
cmpsl
test
arpl
scas
xchg
fdivl
imul
adc
fcmovb
mov
stc
sahf
adc
dec
daa
int3
fisttpll
dec
pop
imul
pushf
in
add
xchg
cmc
shll
xchg
xchg
adc
mov
add
push
push
mov
test
xor
lahf
or
adcl
push
outsb
sub
mov
add
sbb
dec
cs
loope
mov
jnp
call
std
or
in
pop
mov
insb
fdiv
jg
and
scas
bound
incl
scas
js
push
push
outsl
sahf
lds
pushf
or
cmpsb
adc
aas
inc
bound
aam
pop
call
push
cld
imul
rclb
test
mov
imul
or
pop
fs
jo
addr16
nop
adc
popa
pushf
add
cld
cmp
xor
out
or
in
dec
xchg
jo
push
jmp
push
in
je
mov
stc
ja
and
rcrl
int
xor
and
xchg
cmp
cmovbe
xor
lret
mov
mov
xor
push
lcall
jb
mov
push
add
out
xor
jne
push
rorb
out
aas
test
jo
sar
outsl
jp
sub
mov
inc
push
in
cmp
add
xchg
jecxz
add
and
add
add
add
in
add
cmp
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
add
hlt
jmp
add
in
add
repnz
add
lret
in
add
cli
in
add
fsubr
add
add
add
in
add
or
add
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
in
add
add
add
and
add
add
add
xor
add
add
add
inc
in
add
add
add
add
dec
gs
popa
addr16
outsl
js
add
add
gs
je
push
gs
imul
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
popf
push
cmpl
add
add
pushf
lods
pop
push
lahf
fwait
cli
sbbl
bound
popa
jnp
xor
fsts
push
jl
and
aaa
add
push
arpl
push
add
jecxz
xor
shrl
cli
stos
jmp
lods
push
push
pop
mov
adc
nop
popa
insb
cltd
js
les
dec
sbb
cmp
pop
jg
dec
popf
sub
and
xor
push
pop
mov
cltd
leave
fwait
ret
fcompl
out
dec
aad
and
pop
ds
xlat
popf
push
repnz
mov
lret
add
xor
mov
dec
dec
sbb
sub
adc
pop
or
insl
mov
push
inc
inc
leave
out
call
mov
adc
sbb
push
pop
incb
int3
xchg
inc
or
cltd
fisttps
in
in
mov
mov
add
lret
in
or
or
fisubs
push
or
or
ret
push
lahf
sub
mov
sbb
mov
mov
mov
test
es
daa
stos
dec
fldl
ret
push
popa
inc
imul
nop
mov
sbb
orl
adc
dec
pop
cmp
xlat
push
xor
push
test
ffree
push
ss
mov
xor
mov
fwait
lods
add
mov
pop
daa
cltd
cs
lea
imul
lret
pushf
jg
aam
je
pop
lret
xlat
jl
stos
int3
into
xor
push
jmp
ror
lea
push
and
mov
arpl
mov
mov
mov
clc
fsubr
mov
mov
fstp
cmpsb
in
dec
push
jbe
push
mov
jl
outsl
jb
or
inc
adc
out
mov
add
fmuls
cli
dec
int3
dec
sar
xchg
sbbb
ret
call
hlt
fcomp
test
mov
pop
push
xchg
pusha
push
nop
push
insb
lret
sbb
loop
iret
mov
fbld
mov
scas
dec
hlt
pop
mov
sbb
mov
add
push
xchg
out
fwait
ror
mov
test
pop
shlb
data16
push
inc
push
imul
and
movsb
jmp
lcall
inc
inc
cs
popf
or
jo
mov
mov
jl
lds
mov
out
or
jo
ja
xor
loopne
jno
rcrl
push
add
inc
xchg
or
mov
mov
mov
jno
jp
pop
inc
lock
test
jmp
sbbl
inc
mov
mov
popa
stos
jns
into
cmp
inc
pop
sahf
call
icebp
xchg
lds
fwait
out
ss
enter
imul
or
mov
pop
inc
imul
lods
inc
movsb
push
xor
lea
pop
gs
rcrb
xchg
push
loope
cmp
pop
adc
hlt
pop
stos
mov
test
outsl
int3
lret
pop
lahf
clc
imul
out
dec
cmp
fidivs
aam
fdiv
scas
pop
pop
mov
adc
ret
inc
push
fsub
scas
mov
iret
repz
lods
aaa
jp
adc
mov
fcmovbe
dec
push
iret
add
jl
imul
pop
lea
push
and
nop
out
lock
sub
je
mov
mov
and
jne
jno
mov
movsl
adc
mov
dec
shr
mov
or
xchg
aaa
add
lock
lock
add
icebp
lcall
push
cwtl
add
or
dec
jo
xchg
mov
ljmp
dec
jo
inc
inc
mov
je
aaa
pop
mov
repz
cwtl
xchg
roll
inc
addl
fwait
or
cmp
adc
subb
adc
xor
xchg
add
test
and
jae
sub
xor
sub
out
jl
sub
rorl
cmc
test
mov
shl
jmp
sbb
pop
addr16
popa
push
call
in
addr16
mov
sbb
rolb
notb
popa
cli
fdivs
pop
fnstenv
rcl
fsubrs
dec
scas
ds
mov
mov
ds
pop
jns
lret
mov
mov
cmp
orl
std
sti
pop
adc
sbb
jle
out
xchg
jns
cwtl
adc
lds
pop
dec
mov
mov
decl
or
jmp
in
mov
push
push
jle
out
stc
cmp
add
movnti
out
lret
fisubs
push
int3
xchg
or
adcl
popa
xor
lea
mov
inc
xchg
js
fbstp
jp
lahf
outsl
shrb
and
jne
push
int3
sbbl
loopne
arpl
pop
jp
sbb
adc
outsb
out
dec
mov
dec
mov
adc
in
repz
outsb
mov
inc
cmpsb
insl
in
bound
jp
aas
push
ljmp
jb
mov
bound
push
jp
mov
cmp
or
int3
test
fcmovu
cmc
lods
mov
push
xor
clc
push
lods
mov
out
mov
stc
xchg
xor
cli
add
shll
das
lret
insb
adc
dec
dec
xor
pop
dec
sub
add
int
jbe
out
sbb
out
das
xchg
shl
push
dec
mov
cltd
dec
sbb
xlat
jle
stc
push
lea
nop
mov
repnz
sar
add
in
cmc
mov
add
sbb
iret
je
or
or
pusha
add
rorl
sub
iret
mov
ficoms
mov
insl
ds
add
add
pop
mov
cmp
lods
inc
push
xor
stc
stos
sbb
shrb
xor
decl
xchg
bnd
arpl
cltd
jae
jmp
mov
movsb
mov
sub
bnd
cmp
lcall
cmc
aam
pop
rol
out
sbb
inc
les
sub
mov
xchg
mov
std
sarb
sbb
dec
cmovb
fcmove
xorb
jmp
and
cmp
and
sbb
sbbl
xor
les
je
daa
cmp
mov
dec
int
out
or
mov
mov
ljmp
aas
aad
inc
movsb
out
cli
shll
out
aaa
jne
jo
jp
add
pop
pcmpgtd
sbb
addl
inc
dec
into
adc
jae
cli
push
cmp
mov
jnp
cli
ljmp
xor
loope
cmp
fs
xor
clc
sub
pushf
insb
sub
sahf
jbe
out
mov
daa
mov
sbb
test
mul
ficomps
dec
xchg
xlat
push
ret
cmp
xchg
stos
and
stc
sbb
je
push
imul
sahf
fdivrl
popa
adc
or
jmp
fistpll
mov
fstpt
push
lret
das
outsl
mov
jae
pop
dec
popa
jle
insl
lods
mov
pop
hlt
xchg
shr
sub
dec
js
mov
mov
sub
test
push
mov
testb
fwait
rclb
jb
iret
add
and
jnp
xor
adc
pop
dec
sbb
mov
mov
out
test
add
jge
popa
mov
or
or
adc
in
sbb
mov
popa
cwtl
icebp
xchg
icebp
les
arpl
rclb
hlt
sub
inc
sbb
mov
pusha
fs
jl
mov
cmpsb
pop
mov
and
inc
stos
dec
sbb
jle
xchg
push
push
adc
mov
ss
clc
fxtract
les
lret
dec
push
mov
cmc
xlat
nop
mov
sbb
data16
dec
aaa
jae
xchg
push
loopne
fldenv
jge
cmp
int
popa
mov
lret
in
lea
je
inc
cltd
and
rclb
lods
sti
adc
inc
js
sbb
popa
mov
adc
pop
and
iret
pop
repz
inc
stos
mov
cmp
jle
mov
or
push
inc
jb
loop
dec
enter
mov
daa
add
mov
cmp
adc
push
cld
adc
movsb
ret
popf
fbstp
push
rclb
popl
imul
sbb
sahf
outsl
adc
out
enter
stos
daa
int3
pop
negl
adc
js
shlb
pop
adc
testl
and
or
lock
lcall
fisttps
mov
jnp
call
fistl
stos
popf
clc
add
sbb
sbb
xchg
ret
mov
dec
cmp
test
test
xchg
mov
aam
das
mov
sbb
sub
ret
pop
jge
js
mov
xor
sbb
add
jge
in
pop
fs
sub
xchg
sar
sbb
rol
jecxz
xchg
fdivp
out
ficoml
dec
or
aaa
das
divl
push
add
mov
xor
loopne
je
mov
pop
and
adc
pushf
sti
cmp
dec
and
lods
sarl
mov
repz
xor
dec
test
jl
repnz
xchg
mov
push
mov
mov
xor
lods
nop
out
push
pushf
lret
add
es
aam
ficoml
sbb
out
mov
stc
pop
mov
pop
cmp
mov
mov
ds
pop
aaa
and
stos
iret
popf
mov
movsb
sub
call
jl
pop
mov
fwait
push
sar
push
sub
cltd
leave
push
add
or
lret
mov
test
outsl
loopne
cmpsb
adc
decb
push
sbb
rclb
ret
sub
fs
stc
shr
push
rol
sbb
es
test
sub
mov
lahf
fwait
sbb
xorb
or
fwait
shl
push
pop
add
mov
xchg
fistpl
push
push
push
and
outsb
into
inc
jne
das
adc
sub
int
pop
nop
test
jbe
mov
mov
xor
jle
push
cmpsl
movsl
ss
or
mov
testb
jp
mov
pop
por
mov
push
test
or
outsl
idivb
cmp
dec
gs
imul
jb
jl
fisubs
mov
xchg
pop
out
jne
jae
maxps
pop
lret
es
mov
push
popf
fdivs
fdivl
inc
inc
jo
lret
inc
stc
xchg
stos
mov
daa
cmp
js
jle
popa
cld
inc
mov
push
and
lahf
push
xchg
dec
int3
sbb
aad
mov
cmp
cli
mov
cmp
adc
out
or
adc
sub
and
jecxz
mov
test
into
lcall
hlt
sti
xlat
loope
aas
pop
cmp
ljmp
cwtl
sbb
hlt
das
outsl
xchg
push
jecxz
jno
inc
cmpsb
cmp
pop
cmp
repz
and
dec
add
inc
or
cmp
repz
fmull
ss
addr16
hlt
out
jmp
cmp
loop
mov
jbe
clc
add
cwtl
adc
xor
into
push
fnstsw
mov
int
movsb
cmc
dec
out
mov
in
outsl
stos
xor
icebp
push
xor
mov
stos
xor
ja
push
rorl
push
lods
push
cmp
fs
dec
dec
jl
and
arpl
pop
stos
shld
stos
dec
pop
mov
pop
nop
or
ljmp
aaa
shrl
cmp
cmpsl
add
pop
xchg
push
mov
or
xchg
out
lds
shl
xlat
fistpll
adc
jae
cmpl
jp
pop
repz
loopne
test
stc
dec
jl
filds
outsl
and
sub
mov
xchg
lods
nop
gs
push
xor
je
jmp
or
das
daa
mov
xor
lods
ret
icebp
mov
es
push
ss
pop
std
cltd
sub
flds
aas
movsb
mov
jae
and
push
loope
mov
mov
iret
add
dec
out
in
and
dec
shll
fsts
sti
popa
jge
insb
fisttpll
in
ljmp
jp
jmp
mov
into
enter
scas
adc
push
imul
mov
fisubl
dec
loopne
lret
aas
and
mov
jmp
cmp
ja
popf
jb
loope
xor
repz
aam
and
loop
jns
jle
lock
int3
shl
shrb
addr16
adc
mov
adcl
adc
rcl
addr16
fstps
mov
es
mov
jb
cmc
xchg
scas
cmp
repz
sbb
mov
xor
outsl
xchg
out
sbb
jge
mov
dec
sbb
divb
pop
roll
lea
mov
jne
jae
pusha
dec
mov
repnz
pop
loop
aas
xchg
mov
mov
sub
pop
testb
sahf
and
lret
aaa
push
mov
adc
push
sub
dec
jnp
sbb
xchg
fbld
sbb
lds
int
mov
addr16
pop
and
mov
cmp
rcll
xor
push
mov
mov
jecxz
ficoml
push
or
mov
sub
setl
out
mov
pop
mov
mov
push
jecxz
data16
popa
shlb
push
cmp
cmp
lea
adc
or
adc
xchg
lods
leave
inc
mov
pop
shl
cmp
sbb
push
xlat
inc
xchg
push
cmp
dec
cmp
ss
or
imul
insl
push
int
add
stos
xor
cmp
enter
cmp
push
inc
sub
ficoml
inc
cmp
sbb
insl
test
xor
test
mov
jbe
nop
cmc
adc
lcall
aam
out
arpl
push
add
loop
or
mov
repz
cmovbe
add
testb
hlt
cmpsl
cltd
cmpsb
daa
out
mov
add
xchg
xchg
ds
mov
dec
adc
mov
xor
push
movsl
jmp
sbb
xchg
or
dec
sbbb
pop
pop
pop
repz
xor
mov
test
dec
mov
lock
push
xchg
clc
popl
sbb
test
or
ss
int
cmp
mov
aaa
pop
dec
and
cmpsl
fbstp
mov
out
jnp
mov
jle
xchg
push
jmp
outsb
das
mov
adc
mov
jle
sarl
xchg
xor
mov
add
or
sti
stos
mov
sbb
push
gs
add
ja
dec
push
push
sbb
les
add
mov
and
mov
jae
add
arpl
loope
daa
test
addr16
cmp
push
movsb
lret
or
fsubrs
loopne
pop
adc
ffreep
mov
xlat
rcr
std
jo
not
loopne
adc
jbe
or
loop
adc
sub
mov
rclb
in
shrl
bound
cmpsb
into
push
enter
mov
dec
cmp
mov
fwait
jmp
xlat
aas
cmp
pop
mov
push
dec
scas
xchg
and
mov
std
adcl
decb
das
jge
mov
cmpsl
and
pop
sarl
add
pop
ds
ja
lock
faddl
mov
arpl
sub
or
insl
jecxz
jmp
sub
mov
scas
loope
mov
push
int3
pusha
pmaddwd
sarl
and
cltd
push
jno
outsl
mov
mov
inc
scas
pop
and
arpl
repnz
adc
xor
ss
add
das
fistpl
pop
shlb
mov
divb
int
jmp
mov
dec
jg
std
popf
insl
dec
call
test
sbb
clc
sbb
inc
int3
sbb
sbb
out
scas
inc
loop
adc
pop
sub
cmpsb
dec
push
dec
mov
pop
addr16
jo
fmuls
out
xor
dec
jno
jp
and
repz
sbb
xchg
or
mov
notb
add
adc
mov
rorb
xchg
xor
mov
jg
lods
sti
pop
out
lret
mov
clc
lock
sti
pop
pop
nop
push
outsl
mov
jno
or
mov
iret
mov
sub
push
xor
and
pop
and
les
ret
loop
and
push
sbb
sub
dec
imul
inc
loop
jae
mov
mov
mov
ret
enter
and
mov
out
dec
adc
jo
scas
mov
mov
leave
imul
mov
and
cli
int
mov
mov
and
lcall
pop
scas
push
enter
test
ja
ss
movsl
pop
test
ficoms
out
test
jo
repz
mov
mov
pop
roll
jle
lock
aad
lds
cmpsb
test
lock
jo
bound
orl
push
je
ret
out
ja
push
jp
cli
mov
icebp
addr16
and
imull
mov
push
mov
lods
ret
test
int
push
mov
gs
mov
adc
aam
gs
into
sbb
mov
cmp
lock
lahf
icebp
or
lods
cltd
xchg
cmp
jns
inc
repnz
mov
inc
cmp
pusha
and
test
test
das
clc
stos
addb
jns
push
ja
xor
mov
sbb
or
insb
out
cmp
test
rcl
xor
pop
fcmovnu
rcl
jbe
and
aas
dec
dec
xchg
sarb
sub
outsb
jns
data16
std
cmp
pop
push
stc
mov
shr
push
lods
pop
scas
cmpsb
adc
sub
out
xchg
arpl
movsb
lds
or
sahf
inc
cmpsb
jae
movsb
je
dec
ljmp
xor
fldl2t
jge
mov
xor
mov
les
in
jne
inc
mov
enter
lcall
dec
push
adc
mov
lahf
stos
insl
xlat
inc
shlb
in
rorl
loop
push
pop
mov
lahf
loopne
lret
or
in
xchg
xor
fisubrs
add
or
add
ljmp
stc
clc
and
jge
hlt
out
adc
stos
or
lahf
insb
xchg
pop
or
paddw
movsl
sti
and
out
jle
sub
xchg
and
cs
out
lret
push
inc
shlb
adc
movsb
jbe
shll
mulb
inc
hlt
mov
imul
mov
icebp
fdivl
cmp
int3
daa
jp
xor
jmp
jno
xchg
out
sub
test
je
iret
negb
cwtl
lds
jle
jmp
outsb
rorl
jle
and
aad
add
les
popf
cmpsl
xchg
fstpt
dec
lods
cmp
mov
cli
call
bound
in
mov
and
dec
cmovno
push
insb
mov
test
pop
lods
sbb
pop
xor
jne
repnz
std
aad
call
jmp
mov
mov
or
aam
cli
repz
lods
les
stos
jge
add
add
imul
pop
xchg
insb
inc
cmpsl
add
jecxz
add
and
and
lahf
pushl
xor
sub
cmp
inc
xchg
pop
fprem
outsb
jo
xchg
stos
scas
fdivrs
sub
push
into
andb
inc
cmp
xchg
test
mov
cmpsb
sbb
mov
mov
sub
xor
imul
mov
fnstsw
pop
aas
and
and
stos
in
arpl
outsl
cmp
test
sub
imul
cmpl
push
ficomps
mov
clc
xchg
pop
dec
cmp
fdiv
xor
jg
jno
push
aaa
cli
pusha
push
add
arpl
in
aad
jge
jmp
mov
push
lcall
jl
clc
fs
in
mov
xchg
imul
out
inc
jle
nop
mov
mov
push
mov
hlt
imul
and
push
mov
dec
jns
loope
aaa
outsl
mov
cmpsl
inc
ja
pop
shrb
mov
or
add
add
repz
roll
xchg
push
mov
scas
repnz
in
pop
dec
das
xchg
add
mov
mov
sbb
dec
aam
jns
mov
movsb
mov
orb
ljmp
aaa
dec
lds
mov
xchg
add
dec
lahf
and
mov
in
rcl
add
pop
aad
clc
loopne
mov
repnz
inc
cld
lahf
addb
sbb
loopne
scas
loopne
js
movsb
popa
stc
sti
push
jl
jg
inc
sub
scas
mov
pop
stc
sti
ljmp
sbb
sbb
repnz
dec
lods
xlat
sub
xchg
mov
cwtl
test
pop
push
pop
repz
inc
mov
pop
idivl
fcmovne
sbb
scas
movsb
and
mov
mov
cld
cmp
ds
clc
jo
xlat
hlt
stos
or
fdivrp
inc
mov
insl
mov
sub
adc
add
test
sahf
movsb
jno
test
int3
cmpb
and
push
pop
fistps
cmpsl
pop
jle
stos
or
inc
sti
and
mov
push
xor
jbe
dec
hlt
sbb
lds
mov
dec
xlat
inc
and
es
jg
enter
sti
add
cltd
fisttps
and
outsb
pop
in
mov
pop
or
jle
adc
stos
mov
pminub
sbb
fisubrs
jmp
mov
pop
stc
cmp
bound
adc
sbb
arpl
shrb
stos
xchg
and
sbb
sti
testl
popa
imul
ret
pusha
gs
cmp
mov
sub
fisubs
add
mov
mov
stos
sub
jg
sarl
push
into
gs
enter
ss
icebp
mov
sub
es
sub
aam
lods
std
jg
insl
icebp
pop
cmp
mov
sub
mov
push
sar
in
addl
pushf
cmc
lcall
jb
inc
mov
ja
mov
add
push
and
adc
clc
xlat
xor
xchg
sub
popa
or
xchg
sti
sbb
pop
mov
pop
adc
xor
jb
sub
clc
sub
xchg
inc
gs
loopne
pop
loope
pop
add
sbb
int
aad
or
aas
ljmp
push
movsl
push
xor
test
ja
mov
xchg
adc
cwtl
mov
andl
or
jle
movsb
ret
cmp
push
shll
into
push
jbe
fisubrl
fisubrs
sarl
xchg
jne
rcrb
jne
or
adc
js
xlat
ret
sub
push
pop
pusha
mov
mov
lret
push
fadds
and
ljmp
lret
push
mov
xchg
jae
cmp
lea
cwtl
les
cmp
lock
mov
or
cmp
dec
out
xchg
adc
push
adc
sbb
lret
out
fxch
pop
mov
xor
and
les
in
cmpsl
add
sti
adc
mov
or
frstor
shrl
js
cmp
dec
xor
mov
jbe
add
lret
jmp
inc
xchg
stos
xchg
hlt
sub
icebp
idivb
out
in
lds
nop
xchg
and
mov
mov
pop
sub
aad
pushl
imul
lods
loop
or
jmp
and
sbb
or
xchg
cli
fisttpl
sbb
fwait
cmpsl
sbb
sbb
xor
pop
xchg
pop
sub
imul
lods
pop
nop
leave
dec
inc
incl
mov
xor
in
insl
cmc
xchg
stos
adc
sub
mov
js
mov
sbb
lods
test
cld
out
add
ja
cld
in
hlt
push
xlat
pushf
enter
test
pop
and
sbb
mov
push
push
into
test
and
mov
enter
loop
and
jbe
pop
and
cmpsb
xor
push
les
shrb
xlat
xor
xchg
mov
xor
pop
xchg
sbb
jge
xor
out
add
and
fisubs
inc
sti
push
lds
insl
test
loope
inc
mov
les
mov
cmp
out
fiaddl
mov
dec
mov
xchg
out
clc
mov
mov
jnp
sbb
out
inc
out
mov
in
jbe
sub
fldenv
test
mov
cmp
fbld
lods
add
ret
into
int
jns
jbe
lret
in
fmull
xchg
pop
push
and
fsubrl
sbb
and
sub
sub
mov
push
dec
sbb
fs
call
popf
mov
fbstp
ret
xor
fidivs
loop
lahf
add
cmp
data16
subb
add
jle
mov
mov
mov
subl
int3
mov
imul
ret
subb
push
mov
les
pandn
mov
pop
sub
xchg
fildl
fst
cmc
mov
sbb
or
inc
fmull
test
aaa
pushf
or
bound
dec
or
js
or
push
cmp
inc
mov
mov
cmp
mov
lods
cmpsl
dec
dec
outsb
int3
xor
sbbb
andb
ret
add
out
fs
add
aaa
push
mov
add
and
lock
insl
cld
iret
add
test
push
stos
jge
fldenv
in
cmpsl
or
pop
out
rcll
cmp
enter
xchg
jns
test
xor
jg
add
add
add
in
jmp
sbb
rcrl
mov
or
lahf
orl
jg
push
push
jg
pop
ret
int
xor
ret
mov
frstor
sub
scas
inc
ror
mov
mov
enter
jnp
xor
cmp
mov
push
cmp
pop
adc
dec
adcl
jno
xchg
ljmp
pop
fsubs
rcrb
fadds
sbb
ds
jmp
enter
lea
ss
mov
repnz
cmp
fimuls
int3
lcall
push
fistpll
repz
cmp
aas
and
fwait
cltd
les
mov
add
push
dec
sti
ljmp
imul
fsubs
call
mov
mov
icebp
xor
or
xor
lahf
dec
mov
or
xchg
jnp
daa
xchg
in
mov
scas
lcall
pop
mov
add
adcl
fs
mov
dec
cmp
jg
jecxz
lods
stc
jecxz
or
gs
mov
ss
iret
or
cmp
cmp
pushf
shl
jmp
daa
jnp
inc
mov
andps
out
das
mov
push
xchg
inc
cmc
or
les
aaa
insb
int
xchg
xor
push
pop
pop
test
lcall
fbstp
hlt
fsubl
or
popf
inc
pop
mov
movsl
cmp
push
add
ja
push
jle
mov
stos
fld
add
cmp
cmpsl
popa
shlb
pusha
roll
ja
les
mov
and
arpl
push
push
cmp
sub
mov
aas
dec
cmp
out
ljmp
jnp
add
loopne
mov
adc
sub
jns
push
inc
filds
mov
cli
dec
inc
cmp
xchg
nop
mov
xchg
pushf
add
mov
dec
mov
cld
pop
and
shll
ja
test
lea
mov
scas
lock
cld
test
js
pop
out
into
and
cmp
jg
nop
push
sbb
jmp
jnp
cmp
pop
shll
es
xchg
aad
mov
dec
adc
xchg
mov
aaa
jbe
loopne
insl
add
push
cmpsl
adc
xchg
push
adc
fcomps
lods
xchg
hlt
xchg
rclb
jnp
jp
inc
rep
das
mov
addr16
and
or
and
test
js
repnz
or
repnz
add
mov
ss
or
adc
aas
ja
dec
sub
xor
int
inc
or
adc
bnd
pop
or
sbb
sub
addb
cmpsb
xchg
cmp
pop
scas
push
inc
pop
mov
imul
mov
sbb
inc
mov
es
movsb
lret
push
push
cmp
sbb
insl
xor
imul
push
inc
divb
mov
lea
mov
scas
filds
lds
inc
fwait
xchg
inc
xchg
repnz
mov
dec
mov
jl
and
movsb
push
and
and
subl
jo
ja
mov
popa
int
inc
movlhps
lahf
cmp
in
sbb
iret
mov
out
and
or
stos
out
loope
imul
lahf
adc
ja
lods
jo
and
inc
mov
cmp
pop
rol
sbb
pop
xchg
pop
stc
jl
sbb
imul
fistpl
xor
vmwrite
xor
in
arpl
adc
divl
repz
sub
jnp
sub
jecxz
cmp
mov
mov
dec
or
sub
insl
mov
mov
jl
mov
sbb
dec
bound
pop
nop
cmpsb
jmp
lret
sbb
push
das
push
fs
movsb
push
or
xchg
mov
sbb
xor
adc
shlb
fldenv
loop
adc
dec
mov
or
mov
push
sub
pop
rorb
and
cmp
add
lods
lea
pop
outsb
ret
fidivrs
cmp
push
andnps
cmp
mov
in
fisttps
jle
in
movsb
adc
push
fcoml
std
pusha
dec
mov
mov
xor
insl
sbb
pop
push
dec
test
leave
lea
mov
xor
loop
das
ret
jge
sbb
or
xchg
rclb
lret
xchg
jecxz
clc
sbb
mov
arpl
pop
cmp
movsb
sub
mov
sahf
div
in
cmp
repz
cmc
lret
es
iret
aaa
popf
cmpsb
mov
xor
mov
rol
or
je
xor
and
mov
outsl
xchg
pop
mov
dec
data16
outsb
lea
lret
out
insl
jae
ret
movsl
mov
xor
or
push
fisubl
ret
mov
fistl
xchg
mov
xchg
cld
push
outsb
out
cmp
fcom
gs
xchg
clc
sbb
and
mov
lret
mov
jae
sbb
dec
outsb
mov
cltd
fstps
popa
adc
rcll
xchg
push
cmp
inc
pop
mov
adc
or
pushf
inc
mov
or
ss
sbb
loop
mov
add
or
jno
enter
cmp
cmp
or
pop
push
fcoms
xlat
inc
jle
and
jge
sbb
sbb
add
adc
sub
shll
add
mov
rclb
mov
and
in
aad
xorb
push
cmpsb
xchg
mov
addr16
shr
mov
sub
mov
dec
sub
repz
icebp
jecxz
xchg
fcoml
sbb
push
jg
lock
mov
cmp
sub
fists
outsl
sti
mov
cltd
ljmp
outsl
cli
pop
jne
lock
or
pop
mov
jp,pn
shlb
push
test
pop
push
mov
dec
adc
sti
jns
fistpll
adcb
inc
adc
add
mov
fxch
test
jle,pt
call
sbb
pop
sub
lcall
jb
lret
out
jbe
cmp
xchg
insl
add
dec
scas
adc
das
dec
cld
js
add
xchg
inc
idivl
push
pusha
adc
pop
lock
std
repz
add
mov
mov
xchg
mov
ja
or
hlt
push
mov
out
mov
push
sarl
lcall
lcall
cli
lcall
pusha
ljmp
jl
aas
xchg
xor
add
mov
imul
mov
mov
stos
inc
adc
cmp
jge
hlt
sub
stc
repz
testl
jns
clc
pushl
xchg
insl
shrb
repnz
cmpsl
push
dec
popl
sub
cmp
push
movsb
bound
ret
aas
jae
es
fsubrl
aad
popf
movsb
pop
inc
xor
jmp
adc
pop
sbb
inc
pop
paddd
dec
adc
xorl
pusha
push
pop
push
sub
lods
cmpsb
popa
adc
sbb
jle
jge
je
movsl
add
jg
inc
out
mov
leave
int
mov
outsl
dec
add
push
andb
aad
sbb
sub
add
cmp
push
fwait
pop
sbb
pop
cmp
movsl
push
das
adc
fisubs
adc
lods
sub
xchg
mov
cmpsb
pop
mov
lea
dec
iret
lret
push
jne
sbb
lahf
cs
or
frstor
adc
sub
loope
dec
pop
lcall
mulb
adc
faddp
inc
aas
addb
ret
mov
test
cwtl
fcoml
dec
sti
fdivr
xor
mov
xor
or
lock
ja
push
and
xor
add
sarl
pushf
aam
bound
outsb
inc
xor
out
jno
in
repnz
in
add
pop
fidivs
fs
sbb
sub
sbb
add
jle
xchg
lret
shl
xor
xor
pop
arpl
dec
mov
dec
test
adc
repz
mov
jno
lret
popl
mov
jge
mov
xor
shrl
divb
movsb
scas
mov
loop
orb
dec
and
iret
mov
push
xor
jmp
fdiv
lcall
sahf
cmc
daa
or
shlb
xor
or
xor
ja
inc
xchg
sub
jno
fistpll
cmp
leave
sbb
prefetcht2
xor
mov
and
iret
jnp
divl
pop
mov
mov
out
insl
call
loop
xchg
sub
xor
addb
sarb
push
sarl
xchg
fidivl
call
dec
jne
addr16
mov
addr16
in
push
es
ret
sahf
inc
ljmp
rcl
mov
cs
or
pop
dec
pop
jo
mov
sbb
push
and
ret
aad
and
xchg
xchg
rcll
rclb
enter
rorl
addr16
dec
add
xchg
sub
mov
xchg
push
scas
daa
inc
jbe
xlat
lds
int
mov
cmpsb
jb
xor
loopne
pushf
lret
scas
insb
aad
cmp
sbb
push
adc
out
movsl
pop
orb
jns
popa
mov
idiv
and
incl
rol
lods
andl
push
mov
fdivs
add
sub
fcoml
sti
and
jp
push
sbb
repnz
sahf
push
jle
popa
bts
inc
push
std
movsl
cld
jp
movsb
orb
rcrb
mov
add
hlt
cwtl
mov
in
mov
in
aaa
test
test
and
push
add
adc
sub
movsl
movsl
aas
inc
notb
add
mov
lds
push
pop
push
mov
add
cmp
rol
cltd
stos
and
xchg
scas
mov
rcl
pop
push
ror
mov
xor
push
into
and
push
mov
sar
nop
dec
insl
ret
sbb
fdivr
mov
loop
pop
dec
xor
dec
rcrb
add
xorl
sub
js
stc
jno
mov
stos
loope
push
movsl
or
outsb
mov
push
lea
repnz
addb
cltd
pop
dec
pop
xlat
dec
out
aaa
and
pop
inc
in
or
cmp
pushl
sbb
xor
sti
pop
pop
dec
mov
pop
or
lret
js
mov
pop
inc
test
aam
sub
cmp
jnp
arpl
push
pop
sbbb
sarl
icebp
or
sub
sbb
adc
cld
pop
push
dec
jecxz
or
stos
sahf
fimull
mov
call
cld
mov
xchg
std
xchg
mov
xchg
push
add
bound
rorb
cmp
orb
xchg
and
push
testl
xchg
pop
pop
clc
jnp
stc
jns
xlat
jne
mov
lea
subb
jb
js
loop
fbld
lods
jl
in
mov
pop
test
pop
inc
scas
rolb
jle
lods
leave
shl
out
notb
adc
loop
in
cli
jle
adc
jbe
push
sbb
popf
jle
lods
cli
dec
arpl
adc
and
add
or
xchg
fiaddl
pop
adc
cmp
and
fisubrl
sub
out
aaa
mov
mov
bound
mov
add
mov
cmpl
enter
insb
mov
cmp
ss
mov
jns
ja
cmp
daa
std
test
popf
repz
mov
jne
jo
bound
push
imul
lahf
insl
lcall
and
sub
lcall
cmc
xor
test
adc
push
push
divb
imul
enter
mov
hlt
mov
and
mov
adc
in
in
int3
js
hlt
sub
inc
in
cmp
adc
mov
add
out
fdivp
mov
adc
push
test
and
nop
in
jecxz
test
adc
insb
pop
imul
sub
stos
or
add
cld
ss
mov
ret
mov
pop
and
andb
pop
cmp
sub
scas
and
mov
push
inc
and
inc
mov
stos
cs
sbb
xchg
testb
jmp
pop
incl
or
mov
and
pop
sub
scas
incl
popa
shlb
dec
hlt
mov
das
test
loop
jge
lret
cli
and
adc
adc
iret
in
push
pop
mov
pop
push
out
imul
test
iret
dec
stos
cwtl
jnp
pop
cmp
sbb
ret
or
or
xchg
mov
sbb
sub
xor
fstps
mov
lock
inc
out
insl
aad
mov
shrb
test
icebp
inc
mov
push
mov
test
xor
jno
mov
fisubrl
dec
jecxz
add
je
mov
cwtl
sub
aad
fnstsw
mov
aad
out
push
and
sbb
cmpsb
out
les
xchg
loop
mov
scas
lods
int3
mov
loop
clc
dec
loop
jne
add
and
or
push
repz
xchg
dec
and
xor
sbb
std
insb
sub
pshufw
test
bound
into
into
int3
clc
cmp
lahf
add
sbb
and
cwtl
out
decl
jg
sbb
sub
sub
enter
sbb
jb
test
and
push
pop
sbb
pop
cmp
jl
xor
adcb
sub
mov
psraw
adcb
inc
clc
push
mov
push
xchg
xorl
push
cmp
cmp
leave
mov
and
insl
loop
push
mov
adc
lds
mov
je
test
lret
call
xlat
sbb
outsl
ret
outsl
mov
lcall
incb
rorb
adc
or
and
je
in
pop
mov
mov
out
mov
mov
jle
daa
lds
pop
pop
cmpsb
xor
jnp
das
push
cld
fucomip
nop
mov
sbbl
mov
pop
adc
mov
push
pop
in
jne
test
inc
lea
or
mov
insl
int3
ret
mov
adc
lret
dec
dec
mov
mov
add
out
arpl
cmp
mov
mov
push
int3
iret
adc
xchg
xchg
mov
inc
mov
dec
out
mov
sahf
aaa
ljmp
imul
adc
mov
lret
and
pop
fwait
jno
sbb
lret
nop
jnp
shlb
and
xchg
dec
aam
jecxz
mov
cld
push
push
push
dec
jle
bnd
xor
inc
cmovae
mov
sbb
or
mov
ret
and
fs
out
jbe
xor
nop
mov
out
add
xchg
mov
cmp
pusha
dec
dec
std
shrl
pop
loopne
stos
xchg
xor
or
fiadds
mov
inc
out
dec
lods
xor
movsl
push
and
push
pop
out
jle
je
out
mov
fstps
inc
or
enter
mov
popf
jnp
xlat
push
lods
mov
ret
mov
sbb
lock
div
negl
cmp
out
sar
movsl
jg
cmc
ss
lea
insb
test
test
cmp
xor
imul
ret
and
cs
rorl
ds
and
leave
cmpsb
repz
sahf
jp
sub
cli
adc
adc
mov
add
jecxz
add
repz
xor
inc
aas
int
xchg
icebp
or
icebp
sbb
sbb
ljmp
shrb
push
dec
add
mov
addr16
push
sub
mov
nop
jbe
bswap
cli
in
inc
xor
mov
or
adc
inc
push
adc
lods
and
xor
scas
mov
push
dec
or
mov
mov
push
sub
test
mov
fmul
leave
loopne
es
jge
mov
shll
or
adc
lock
mov
sbb
arpl
scas
out
test
insl
lret
xor
push
cmpsb
and
pop
add
les
loop
and
call
and
lods
loopne
enter
mov
out
sub
xor
popf
jge
out
dec
mov
out
adc
and
ds
push
and
test
movsl
into
mov
faddl
and
sub
fdivs
push
inc
pop
or
sub
iret
adc
pusha
cwtl
sbb
xchg
xor
fcom
ljmp
pop
adc
sarl
sub
orb
sti
bound
xchg
pushf
lcall
test
fs
in
xor
add
movsb
fnsave
cmpsl
imul
mov
push
fst
pop
xchg
xor
movsb
sbb
lahf
arpl
stos
int3
adc
inc
lret
repz
sti
cmp
loop
sbb
iret
xchg
push
mov
imul
jg
pop
xchg
dec
xor
pushf
jae
xchg
push
mov
pop
xor
pop
sbb
xlat
insl
nop
sahf
pop
push
out
adcb
pop
pop
pop
test
push
scas
adcl
les
shrb
pop
lods
mov
or
fdivl
sub
ja
in
aaa
xchg
sbb
pop
and
mov
or
dec
fs
sub
mov
fnstsw
add
idivl
ss
stos
jmp
mov
or
dec
mov
pusha
xor
and
idivl
add
shlb
repnz
inc
adc
in
test
out
scas
mov
out
imul
les
dec
dec
imul
jg
jp
jno
mov
mov
mov
aam
pop
cs
outsl
xorl
xchg
aam
sbb
push
jg
out
adc
xor
ljmp
or
cmp
cs
xorl
xchg
loope
or
jp
shlb
xor
fadd
adc
xchg
subb
jg
arpl
add
jp
mov
call
orl
test
push
inc
pop
inc
stos
jp
fdivl
arpl
fmuls
hlt
jb
fldenv
daa
push
inc
insb
cmp
les
push
stos
lods
lds
mov
mov
add
or
outsb
imul
push
inc
mov
jmp
mov
push
in
addb
mov
icebp
cmp
pusha
imul
scas
lcall
adc
hlt
iret
adc
aad
in
pop
fbld
repnz
lea
jp
mov
add
adc
outsl
push
pop
call
jno
push
ljmp
and
mov
inc
fsubrl
xorl
jmp
pop
add
stc
nop
sbb
test
gs
negb
mov
pop
cmc
das
je
and
dec
ljmp
les
add
int
arpl
test
aam
ss
jecxz
jnp
inc
dec
jno
data16
addl
mov
add
pop
aaa
in
movsl
fildl
mov
jl
cmp
aas
movsl
sbb
adc
mov
and
leave
imul
call
jae
inc
roll
scas
lret
hlt
pop
push
ss
pusha
or
outsb
ret
leave
in
nop
shll
or
mov
daa
or
mov
ret
out
push
test
icebp
in
jecxz
and
into
mov
mov
lock
fmull
dec
inc
jb
sti
jnp
xor
pop
dec
cld
lods
movhps
iret
arpl
ret
or
mov
test
lock
and
mov
addr16
xchg
inc
add
adc
mov
sbb
jmp
stc
jg
push
test
sti
add
jmp
push
or
sub
or
arpl
jo
sbb
enter
push
sub
jb
int
mov
imul
test
lret
adc
loope
subb
inc
xor
fwait
cmp
inc
test
sub
xor
mov
inc
sbb
mov
lods
test
xchg
xchg
pop
and
insb
movsl
and
mull
cmpsl
jo
insb
sub
pop
cld
ret
mov
outsb
mov
repz
adc
xchg
adc
xchg
leave
jp
mov
jnp
push
cmp
dec
adc
xor
fbstp
arpl
insw
scas
out
mov
cmp
btc
cwtl
shr
adc
lods
ret
pop
push
std
jmp
mov
mov
cmc
jb
fmul
add
out
lods
int3
xor
imul
push
sbb
pop
sub
cld
inc
nop
mov
jns
roll
cmp
icebp
imul
insb
jne
dec
and
mov
rcrl
daa
sub
cmpsb
mov
cli
push
xor
insl
sbb
aas
and
jl
mov
mov
lret
divb
push
arpl
in
repnz
mov
stos
jge
cmc
and
adc
push
cmp
ret
xchg
dec
xor
fstpl
test
sahf
mov
pop
in
sbb
rcr
aad
push
jbe
repnz
lods
in
mov
mov
gs
insl
stos
out
dec
ret
lret
dec
icebp
mov
jle
sbb
cltd
xchg
mov
mov
dec
xchg
sub
jns
test
insl
mov
cmp
push
add
mov
mov
les
cmpsb
xchg
mov
popa
mov
cld
repz
cmp
push
outsl
ljmp
mov
fs
call
jmp
and
imul
decl
imul
mov
mov
rcrl
mov
dec
push
icebp
jns
dec
mov
jo
xor
sti
and
cmpsl
mov
cmp
das
adc
andl
jecxz
dec
icebp
sub
into
push
std
mov
sahf
push
rcrb
aad
adcb
fists
out
test
lea
insl
push
push
adc
lret
cmp
sbb
mov
test
lods
lret
leave
and
daa
or
jo
dec
ljmp
test
push
stc
inc
test
jp
popf
lahf
lods
insl
je
pop
mov
dec
and
jno
sti
xlat
loope
outsl
push
push
shlb
in
orl
dec
pop
cmpl
push
in
enter
iret
fyl2xp1
mov
leave
jae
mov
or
or
push
sbb
imul
mov
and
ficompl
fsubp
dec
and
int
xchg
cmc
movsl
aad
addl
sub
movsl
ret
sub
hlt
mov
pop
pop
sti
cmpl
pop
push
dec
shll
lret
movsl
ds
xchg
xlat
js
add
mov
xorb
and
mov
scas
cmp
ja
pminsw
cmc
cmc
sub
pop
bound
data16
subb
and
and
mov
je
inc
dec
jns
xor
lcall
imul
cmp
dec
xchg
cwtl
repnz
roll
mov
mov
or
mov
jg,pn
or
mov
push
loop
imul
dec
inc
cmpsb
lods
aam
sub
movsb
mov
lcall
stos
scas
repz
out
test
insl
in
rcrb
addl
lock
arpl
jb
test
pop
stc
icebp
mov
mov
add
pcmpgtb
mov
mov
xlat
or
rcrb
mov
pushf
jnp
ja
inc
mov
adc
out
imul
das
fwait
or
imul
das
inc
icebp
lahf
orb
jle
mov
or
ss
pop
aad
rcrb
dec
sbb
int
in
jmp
sub
inc
mov
jp
xchg
test
or
pop
ret
movsb
push
sahf
sti
aaa
filds
push
ficoml
xchg
pop
shrb
les
adc
lods
sub
cmp
rorl
jle
pop
pop
inc
xchg
imul
je
ja
xchg
cmp
scas
jbe
loop
push
repz
idivb
push
lret
into
push
mov
add
fisubrs
mov
cli
push
popa
and
cmp
daa
lds
push
test
push
movl
xor
inc
dec
add
mov
enter
idivb
cmp
jg
pop
lret
test
cmp
and
hlt
or
ss
enter
es
and
sahf
inc
push
mov
sbb
incl
push
push
jae
sti
bound
mov
divb
hlt
leave
or
mov
cld
xchg
shlb
jle
out
fimull
xlat
aas
ficompl
hlt
lds
fldl
loop
lea
scas
jnp
jg
jmp
mov
nop
out
mov
and
push
inc
cmp
in
sbb
mov
mov
push
push
outsl
hlt
out
jb
jmp
xchg
push
push
jnp
in
inc
mov
xchg
xchg
adc
xchg
cmp
jbe
enter
shl
mov
sub
cs
push
xor
or
decb
cmpsb
fistpl
aas
xchg
loopne
frstor
mov
pop
add
push
lcall
xchg
and
pop
inc
fs
inc
jae
repz
dec
ret
stos
cli
cltd
sub
ret
inc
jns
out
xchg
inc
adc
mov
daa
dec
add
jg
jmp
rorl
imul
mov
ror
loop
ljmp
outsl
data16
dec
cmp
lock
imull
adc
filds
mov
push
cld
mov
out
fistpll
scas
shl
push
xor
xchg
lcall
mov
loope
cmp
sub
fcmovnu
test
icebp
ret
dec
push
and
pop
xlat
or
jno
int
and
push
add
and
repnz
jmp
pop
test
rcrl
daa
aas
outsl
mov
mov
jecxz
or
cmp
push
call
push
lahf
jno
cld
pop
dec
je
ret
or
adc
inc
lret
pop
add
inc
movsl
xor
shll
mov
adc
fs
loopne
mov
jbe
addl
pop
addr16
loopne
mov
test
mov
xlat
dec
pop
stos
jecxz
mov
std
ljmp
or
dec
divl
mov
pop
ja
pop
mov
lret
mov
inc
lock
jmp
js
out
cmp
xchg
mull
out
pop
out
ss
jmp
gs
pop
push
mov
iret
out
addr16
mov
xchg
cwtl
das
int
adc
loopne
dec
xchg
xor
mov
push
nop
jae
ret
pop
xchg
lahf
and
or
stc
xor
xchg
shrb
cmp
dec
repz
mov
push
cmp
add
xchg
insl
icebp
xor
sbb
dec
arpl
aad
les
ds
and
hlt
fistps
in
incb
adc
fmull
inc
shl
or
rcrb
mov
xor
jl
pusha
push
xchg
call
cmp
lcall
cmp
adc
in
mov
jno
repz
add
movsl
shl
push
mov
xchg
icebp
stos
into
push
movsl
push
push
orb
cmpb
adc
test
test
iret
or
jle
sbb
test
imul
mov
lret
xor
jp
push
add
cmp
movsb
in
stos
pop
mov
and
inc
stc
in
mov
leave
add
ret
pop
in
lods
mov
push
imul
xchg
dec
lock
xor
pop
iret
neg
push
inc
fiaddl
xor
ffree
call
ljmp
cmp
push
jo
push
fmull
xor
mov
into
cmpxchg
adc
inc
or
xor
mov
ja
push
jns
cli
je
popf
jae
divb
insl
mov
aam
fstl
dec
testb
subb
mov
loopne
mov
mov
lret
scas
pop
sub
mov
andl
movsb
push
repnz
loopne
sbbb
xchg
inc
mov
out
jmp
inc
std
adc
testb
ret
sub
arpl
iret
xor
mov
mov
cmp
outsl
mov
insb
xchg
clc
icebp
icebp
mov
sbb
and
sbbb
ret
pusha
xchg
aaa
gs
cmp
xor
xchg
xchg
fcompl
bound
jl
xlat
xorb
push
xchg
scas
xchg
in
test
fimull
call
aad
insb
sbb
pop
mov
and
sub
pop
leave
jno
sub
in
dec
fwait
bound
jl
loope
mov
loope
push
sti
push
and
cmp
cmp
mov
fdivrs
popa
pop
sub
push
lahf
mov
jecxz
add
psubusw
inc
mov
jno
sti
pusha
add
jl
lret
jmp
jb
cmp
xchg
insl
inc
jnp
adc
lcall
in
fsubr
add
mov
mov
jp
xchg
mov
xor
mull
pushf
mov
sub
in
ds
jl
pusha
test
popf
cmpsl
mov
jmp
push
pop
xchg
pop
xchg
leave
aas
mov
idivl
in
fisubrl
lcall
adc
cmpsl
outsb
int3
sub
xor
fs
testl
pop
xor
pop
jno
inc
je
adcl
push
and
ja
test
outsb
lock
sub
clc
add
or
fistl
ror
add
arpl
and
xchg
std
mov
fs
in
mov
add
dec
scas
int
call
fwait
hlt
jnp
inc
ror
adc
cmc
push
test
lret
bound
dec
dec
repz
imul
lret
sbb
dec
or
push
andl
inc
inc
inc
aad
mov
jl
pop
js
fmuls
mov
pop
das
loopne
insb
pop
adc
in
insb
push
push
pop
push
add
out
std
push
and
xor
cs
ljmp
adc
ds
aas
inc
xor
call
mov
or
hlt
lods
fwait
mov
mov
out
add
movsl
pop
pop
cmp
jno
push
jp
shlb
into
pop
sub
mov
pop
rcll
popf
sbb
inc
or
icebp
test
inc
fnstenv
test
lahf
cmp
mov
cwtl
jb
mov
jmp
cld
rol
and
cmc
xchg
outsl
vmwrite
icebp
out
ret
stc
insl
push
subb
insl
fmuls
inc
inc
rolb
jns
mov
sbb
addr16
push
push
mov
arpl
mov
das
notl
div
mov
mov
mov
jo
push
repz
mov
lods
push
popf
jg
push
clc
jae
mov
and
pop
push
jnp
mov
fucomi
lahf
bound
mov
or
pop
xchg
sbb
xor
sub
lret
ret
push
cs
pop
push
mov
in
sti
fs
mov
xchg
int
mov
movsb
pusha
mov
lock
outsb
je
dec
loop
and
xorl
outsl
aam
dec
and
adc
jb
adc
aas
xchg
sub
test
jo
add
stos
dec
pusha
cltd
insb
mov
push
xor
or
movsb
popf
fisttpl
lods
fcmovbe
add
ret
adc
stc
jns
repz
cld
sub
sub
pop
mov
jno
adc
sub
sti
add
sahf
push
push
dec
cmp
pop
pop
insb
xlat
dec
cmp
add
push
test
sbb
mov
pop
lret
mov
mov
xor
loope
lahf
mov
dec
cmp
test
mov
js
sbb
insb
mov
xor
xor
popf
inc
cmp
vmovdqa
les
push
jb
xor
test
mov
inc
and
insb
icebp
xor
ret
dec
inc
push
add
xchg
sbb
cld
fstps
mov
movsl
imul
inc
xlat
or
and
int
and
je
lret
pop
sub
mov
hlt
fstps
fiaddl
mov
outsl
test
dec
fs
incb
and
sbb
popf
lahf
sub
sub
pushf
iret
jno,pt
rcl
pop
mov
pop
and
cmp
repnz
adc
fimull
inc
inc
movsl
mov
pop
dec
push
mov
pop
xchg
mov
jecxz
sbb
test
cld
cmp
ljmp
iret
inc
popa
das
push
inc
and
pop
cwtl
clc
mov
or
mov
mov
inc
sub
inc
loop
mov
es
lea
jbe
xchg
stos
dec
divb
add
xor
shlb
dec
sti
sbb
sbb
hlt
icebp
outsl
lods
xchg
into
push
add
mov
sbb
leave
push
arpl
push
sbb
mov
sub
mov
scas
mov
pop
add
xlat
jl
dec
mov
pop
dec
adc
xor
mov
pop
mov
lcall
push
int3
add
push
cmp
ficomps
mul
xor
push
in
sbb
lock
mov
icebp
mov
or
jno
adc
add
cltd
sbb
xorb
in
xchg
cwtl
ja,pn
aas
ret
scas
xor
aad
jns
das
popa
andb
data16
dec
jne
enter
mov
rorl
lcall
jae
dec
rcrl
adc
ss
jno
push
iret
movl
fs
dec
sahf
imul
pop
push
pop
daa
and
mov
xchg
xadd
and
fidivs
xchg
cmp
lods
sub
rorb
sbb
or
jge
testl
add
xchg
lret
mov
inc
gs
gs
sbb
xchg
pop
std
lods
and
dec
data16
lea
mov
cmp
dec
shrb
or
xchg
lods
loop
cmp
adc
pop
jns
or
scas
imul
test
popa
jle
jno
sub
jnp
xchg
adc
adc
xchg
sub
or
push
adc
mov
or
sbb
adc
scas
pop
dec
nop
arpl
mov
enter
jns
pop
testb
sbb
jne
pusha
in
cmp
in
adc
test
test
sbb
xchg
fmul
cmpsl
pop
sub
iret
and
fsubs
test
pop
in
xchg
insl
xor
shll
xchg
adc
push
jnp
leave
and
lock
sbb
aam
mov
es
mov
jl
out
call
insl
add
add
dec
jp
fcomps
es
mov
mov
or
xor
cmpl
loop
out
leave
gs
push
xchg
std
adcl
jbe
sysexit
les
jbe
push
outsb
and
cmp
xor
repz
rcll
fldl
mov
es
cmp
push
pop
push
xchg
lahf
mov
lcall
or
pop
xor
ds
cmp
cwtl
mov
cmp
les
cld
lahf
hlt
lods
cmp
xchg
push
mov
mov
and
and
add
lahf
aad
xor
icebp
int
add
pushf
xchg
movsl
mov
fimull
adc
push
pop
insb
imul
fcomps
pop
push
inc
jle
inc
hlt
lret
mov
jecxz
cmpsl
sbb
mov
pop
dec
mov
out
cli
xchg
adc
xchg
jns
cmp
in
shrl
sarb
jl
or
or
hlt
shlb
rclb
and
mov
sub
mov
jb
pop
out
js
push
mov
daa
add
mov
in
mov
mov
fimuls
xor
dec
xlat
xor
rcrb
pop
daa
jmp
jl
adc
sti
jns
repnz
hlt
or
mov
adcb
xor
cmp
fwait
pop
sub
jecxz
scas
inc
push
sub
mov
idivb
orl
imul
scas
sti
sub
jo
sbb
adc
jo
in
jae
mov
push
scas
mov
mov
fs
lret
stos
int3
dec
push
lahf
cs
xor
push
pop
leave
loop
cmc
pop
mov
addr16
iret
sbb
rorl
sub
jae
dec
mov
int
xchg
mov
fneni(8087
pop
imul
xor
fiaddl
xchg
inc
push
cmc
notb
sub
int
aas
and
and
add
push
push
or
fdivl
nop
mov
dec
xor
cltd
xchg
sub
repz
xor
jp
pop
clc
sarb
push
jg
jmp
lahf
cmp
inc
pop
sahf
aas
jb
int3
xchg
adc
or
sub
in
mov
lods
push
imul
fidivrl
sub
mov
mov
sub
out
xor
stos
lds
ja
fld
out
daa
les
adc
push
movsb
nop
pushf
add
fwait
add
negb
psubw
push
ss
fistpl
daa
pop
xchg
add
enter
push
pop
push
out
in
fistl
push
scas
cmp
insl
add
das
icebp
fwait
xor
xlat
cmc
or
push
mov
xor
push
orb
aas
sub
push
jne
movsl
rolb
add
and
fwait
ss
shll
in
and
push
call
jp
mov
and
cmpsl
into
xchg
and
iret
adc
outsb
mov
cmpb
daa
dec
cmp
push
daa
xchg
mov
mov
add
fadd
jnp
cmc
add
ds
jno
hlt
jns
pop
jns,pt
or
mov
fstl
ss
cmp
inc
pop
xor
les
push
scas
ljmp
cmovle
nop
repz
sbb
sbb
lcall
sub
ret
mov
in
inc
daa
adc
cmp
cmpsl
lds
fiaddl
flds
loopne
inc
jae
cmp
leave
int3
jbe
pop
rcrb
fisttps
push
cmp
jns
cmp
jno
popf
decl
xor
add
push
cmp
jp
in
ljmp
ds
ss
xchg
dec
repz
clc
xchg
cwtl
xor
mov
stc
in
into
fsubl
cmp
mov
push
or
pop
faddp
pop
jns
addr16
mov
jbe
jg
dec
xchg
in
mov
xchg
jp
jecxz
cs
daa
pop
jno
pop
test
movsb
call
test
mov
repz
aad
mov
stc
cwtl
cltd
push
dec
insl
pop
lret
push
aad
inc
adc
aaa
and
lret
stos
es
cmpl
xchg
fstpl
sub
nop
lock
rolb
jno
xor
or
rcl
push
mov
mov
ja
in
lret
sbb
push
stos
arpl
xor
sarb
popf
loopne
popa
mov
das
das
mov
ror
and
dec
and
je
addr16
jg
pop
or
test
sahf
test
enter
fcoml
cmp
sub
loope
adc
insl
mov
mov
inc
pop
lcall
mov
ja
jbe
jecxz
push
adc
sbb
stos
and
mov
sub
fiaddl
in
pop
xchg
mov
daa
jb
das
pushf
cmp
lods
in
jne
out
xor
push
in
ljmp
jae
fs
clc
clc
xlat
adc
adc
and
repz
sbbl
xchg
mov
cmp
out
mov
mov
popa
push
mov
mov
adc
and
test
dec
push
cwtl
jmp
xchg
divl
inc
inc
and
loop
test
scas
icebp
add
jle
jg
insb
and
xchg
inc
mov
lods
nop
xor
lods
inc
jo
addb
ret
jl
sbb
dec
xor
or
mov
je
jo
insl
inc
inc
outsb
lcall
inc
inc
jo
cmp
jae
push
test
mov
roll
jne
clc
push
decb
fs
mov
cmpsb
pop
or
cmp
xchg
int3
pop
xchg
and
lcall
mov
out
ja
sub
push
in
outsb
aaa
push
scas
rclb
sub
das
sarb
fnstcw
mov
mov
int3
movsl
dec
mov
pop
aad
inc
and
outsb
repz
fisubrs
adc
pushl
sbb
fwait
add
push
pop
push
add
inc
push
push
incb
je
dec
call
and
mov
sbb
adc
movsb
mov
repz
sti
inc
ljmp
sbb
cs
int
test
xor
inc
aad
jg,pn
xchg
pop
adc
inc
lahf
push
es
dec
imul
cwtl
sbb
add
ljmp
pop
outsb
xchg
fmuls
fsub
popa
out
shll
icebp
imul
mov
test
push
js
cmp
mov
das
jno
movsb
mov
sahf
shlb
stc
cltd
bound
push
mov
test
or
imul
cld
and
mov
cmpsb
lds
or
push
sub
xchg
mov
xor
and
insl
jg
cmpsl
ret
dec
test
loopne
out
call
mov
push
hlt
mov
pop
pop
shrb
push
and
cmp
mov
daa
sahf
or
and
sbb
inc
mov
jl
sti
mov
pop
pop
jbe
push
mov
cmpsb
shll
and
or
les
cld
jmp
aas
add
xchg
movsb
pop
rol
sarb
dec
in
push
sub
xchg
add
jns
fs
jge
jl
iret
arpl
cmp
int3
cmp
adc
mov
mov
sti
shr
das
sub
repnz
sbb
push
mov
mul
sbb
cmp
pop
int3
sbb
clc
sbb
pusha
xchg
data16
adc
leave
sub
mov
jnp
xchg
loopne
xchg
popa
cli
insb
push
and
or
aam
out
dec
inc
popf
or
mov
ret
mov
cmp
jb
dec
shrl
aas
jmp
test
push
dec
inc
fldt
push
stos
mov
dec
out
sub
jo
adc
pop
icebp
lds
fwait
shrb
out
rcll
jl
add
test
lcall
mov
into
jnp
filds
sub
les
inc
jb
fisubl
xchg
sbb
in
jo
and
aad
cmpsl
int
inc
call
sub
cmpsb
mov
sahf
mov
daa
adc
insb
add
xchg
xchg
push
movsl
aaa
or
sbb
lcall
push
adc
fwait
scas
repnz
xchg
sahf
pop
sbbl
outsb
sarl
or
jae
hlt
test
mov
adcb
stos
std
fists
and
pushf
loopw
fs
pop
repz
mov
ja
push
fwait
aas
in
xchg
ret
dec
fdivrs
addr16
mov
add
inc
rcll
leave
mov
inc
aad
dec
cmp
out
dec
cwtl
adc
mov
ficoms
out
popa
push
mov
out
repz
out
and
xchg
pand
aam
das
dec
stos
xchg
mov
sbb
push
cmp
mov
jnp
lret
mov
clc
cmp
daa
sbb
out
jg
sbb
jne
and
jae
fidivrl
push
notl
lock
push
mov
imul
stos
popa
scas
adc
or
push
lret
add
inc
jno
pop
add
rcrb
insb
pop
fdivr
fcmovnb
in
and
in
pop
sub
stc
and
inc
mov
pop
adc
movsb
or
jne
out
in
lock
sub
shl
lods
and
in
in
and
jecxz
pop
push
mov
add
or
xchg
mov
lret
loope
adc
je
push
jo
push
aas
add
jb
push
and
mov
inc
adc
mov
icebp
pop
dec
pushl
dec
push
aas
dec
stc
pusha
add
cld
cwtl
das
fdivrs
xor
mov
mov
dec
scas
inc
pop
cld
and
jmp
jne
cmp
dec
push
inc
ds
jne
bound
dec
push
sub
cmpsl
mov
nop
data16
bswap
arpl
jl
ficompl
add
mov
xor
decl
ret
jle
les
inc
divb
repz
adc
and
pop
test
cmp
out
mov
inc
jbe
mov
bound
rcll
int3
xchg
lds
cmp
andb
repz
test
add
int3
sub
bound
cltd
cmp
pop
jge
adc
mov
pop
xchg
push
fimuls
adc
gs
ljmp
popa
aam
jne
adc
pop
stos
xchg
xor
stc
mov
out
imul
cmp
fdivl
jl
and
push
mov
cmp
loop,pt
shrl
in
data16
sar
mov
loope
in
lds
adcb
cmp
xchg
jge
fisubs
mov
das
mov
pop
jae
cli
mov
push
cmp
ror
adc
xor
xlat
aam
rclb
enter
popa
jb
mov
inc
mov
jp
je
in
arpl
jne
imulb
sbb
sbb
xchg
push
pop
shlb
sub
mov
test
mov
cmp
inc
cli
push
push
insl
push
aad
xor
imull
stos
jg
imul
cmp
aaa
sub
cs
in
scas
mov
movsl
mov
sbb
jne
cmpsb
xchg
sub
nop
in
xchg
pop
adc
sarl
add
aas
lahf
or
enter
js
dec
xor
mov
pop
jne
sti
rol
push
nop
cmpsl
shrl
cmp
test
sbb
push
mov
mov
pop
jo
loopne
cmp
aad
pop
mov
stos
mov
mov
mov
roll
cmp
inc
cmc
cmp
data16
pop
jne
pusha
dec
mov
sub
mov
push
ss
fildll
add
mov
xor
es
mov
dec
jmp
lock
sub
jno
inc
out
subb
nop
scas
insl
add
lock
shll
pop
leave
fistps
mov
mov
out
rorb
inc
ljmp
dec
scas
outsb
inc
lods
push
push
lret
pop
std
out
sub
pusha
call
mov
xorl
jl
dec
mov
adc
add
daa
inc
xchg
mov
mov
shrb
popa
mov
imul
ja
shr
jge
jns
cwtl
add
mov
cs
add
pop
xchg
inc
loop
sub
lea
popf
ds
jp
add
mov
aad
rcl
insb
imul
dec
lea
push
out
adcb
out
inc
or
sub
jo
mov
out
dec
popf
in
inc
ljmp
subb
out
inc
inc
in
imul
aam
gs
les
push
subb
push
pop
or
into
psrlw
jo
mov
rcrb
rcr
in
mov
test
fisubs
and
pop
cmp
daa
mov
pushf
testl
lahf
fs
push
pop
sarb
mov
out
scas
aad
das
loop
pop
inc
push
push
jmp
jnp
enter
push
sub
dec
sahf
or
xchg
push
mov
adc
push
dec
test
fsubl
adc
jmp
int3
icebp
mov
dec
imul
sub
repz
je
push
scas
lahf
mov
dec
fstp
push
jmp
out
push
pop
into
sarb
leave
mov
push
inc
les
sub
push
cmp
out
pop
push
mov
rorb
pop
lretw
stc
xor
imul
call
sar
sbb
loop
mov
add
ja
mov
test
sub
pop
sub
test
adc
stos
ret
imul
dec
and
out
fdivs
lcall
pop
mov
pop
sub
aas
add
testl
xchg
jmp
jg
fldenv
sbb
adc
inc
inc
jb
inc
testl
daa
pusha
jp
ljmp
jno
rcrl
mov
loope
sbb
xor
inc
dec
or
js
lret
adc
pop
movsb
je
jo
adc
mov
sub
idivb
mov
enter
fs
cltd
leave
and
hlt
mov
insb
loope
es
jae
es
xlat
addr16
xor
iret
into
push
je
ljmp
sbb
mov
test
and
fdivs
and
mov
jl
push
xchg
cli
mov
inc
inc
or
aad
mov
int
dec
shrb
mov
rolb
fucomip
xchg
movsl
xchg
sti
sub
jno
lret
inc
push
cmc
pop
aas
imul
aaa
pop
mov
ret
cmpb
sbb
sarb
inc
add
dec
pop
shll
loop
pop
pop
xchg
test
dec
adc
lea
lock
sahf
pop
xchg
add
enter
sbb
fwait
mov
jae
filds
mov
fucomi
cmp
test
sbb
sbb
gs
or
test
xchg
inc
mov
mov
test
pop
sbb
andl
fwait
mov
or
xchg
sub
sub
sub
js
or
rclb
rcrl
js
sbb
ss
outsl
mov
pop
add
movsb
sub
nop
xchg
hlt
je
add
cld
jle
push
mov
jmp
and
nop
push
xor
push
add
insb
rorl
pop
aam
mov
push
cmpsb
pop
sbb
or
daa
xor
fwait
ljmp
mov
fstpt
shrl
mov
sti
ss
mov
push
mov
cmpsb
mov
pop
add
sahf
out
cs
imul
fidivrl
clc
bound
movsb
xchg
test
inc
sub
add
and
pop
out
nop
and
rcrb
imul
mov
push
leave
jl
xor
inc
push
sub
das
xchg
cmp
test
jnp
mov
scas
add
cwtl
mov
js
push
mov
mov
dec
xor
shrl
mov
fwait
daa
jae
outsl
mov
je
or
into
mov
xchg
pop
mov
mov
js
add
mov
jl
and
xor
jns
cmc
mov
insl
mov
push
stc
add
test
jmp
mov
dec
mov
jge
stc
lods
out
sub
add
add
scas
dec
test
xor
sub
dec
shlb
mov
dec
adc
cmpsb
mov
addr16
add
dec
fnstsw
stos
mov
ret
or
sbb
xor
popf
insb
imul
mov
out
push
add
lahf
sub
in
pop
adc
mov
inc
mov
xor
pop
je
lods
ja
cmp
mov
cmp
adc
scas
es
mov
fmul
stos
mov
ficoml
pop
std
mov
mov
fwait
pop
out
adc
pop
jns
push
je
adc
mov
inc
jo
jne
push
imul
push
addl
or
into
testb
xchg
fidivrl
cmp
lods
mov
test
or
push
mov
scas
push
jbe
xchg
lret
hlt
jp
popa
jle
pop
addr16
mov
ss
and
out
inc
push
sbb
aaa
out
aas
icebp
inc
orl
mov
cmp
sbb
data16
pop
es
rorb
cmp
jecxz
negb
push
cli
enter
dec
and
lret
sahf
fcomp
xchg
jne
ret
sarl
stos
loope
inc
pop
pop
and
jae
pop
adc
add
es
pusha
push
jnp
cmc
xchg
xchg
out
call
mov
adc
addr16
mov
and
mov
inc
and
pop
sbb
push
subb
push
decb
or
push
mov
ds
or
push
cmpsb
mov
dec
xor
xor
dec
push
pop
push
adc
rcr
ljmp
repnz
lods
lret
mov
dec
not
cmc
or
dec
inc
mov
mov
cmc
and
sub
sub
shlb
iret
in
pop
mov
imul
int3
gs
dec
dec
pop
xor
and
jbe
aaa
inc
jbe
addr16
popf
stc
add
xchg
ss
xchg
cmpsl
int
cmp
mov
jmp
dec
mov
test
cmp
cmp
cmc
inc
dec
xor
rclb
mov
inc
and
inc
jmp
inc
jne
mov
mov
cmp
mov
sbb
pop
push
out
xchg
loop
pop
sbb
fistl
ss
jmp
xor
mov
repnz
rdpmc
dec
mov
pop
and
pop
jae
enter
pop
popf
data16
sbb
scas
mov
enter
dec
pop
mov
sbb
xchg
adc
cmp
filds
sbb
jne
stc
divl
cmpsl
cmc
dec
int
cmp
mov
je
dec
mov
dec
or
ljmp
shlb
mov
mov
ficompl
in
jno
cmp
mov
sub
jmp
add
orb
repnz
fwait
mov
sbb
add
push
add
sbb
mov
call
fs
dec
out
ds
jmp
gs
es
jmp
notb
push
pop
test
test
aad
mov
jp
es
bswap
imull
insb
loop
pop
or
jp
sbb
pop
jl
inc
jmp
ret
in
in
jns
ret
stos
mov
add
out
adc
inc
test
pusha
dec
fstpl
rcrl
jecxz
lock
adc
testb
shr
lea
sub
aaa
inc
xchg
std
and
push
dec
adc
rcrl
jle
pop
dec
push
imul
out
imul
sti
pop
sahf
lds
cmp
jnp
das
movsb
ret
mov
mov
jo
pop
test
lcall
dec
fmuls
jb
jmp
mov
mov
out
xor
jl
jb
pop
or
push
sbb
jno
mov
jnp
shrb
fs
jb
clc
sbb
xorl
add
sub
dec
mov
mov
pop
aad
in
into
cmpsl
sti
push
imulb
xlat
ja
mov
cmp
test
xor
mov
sbb
add
cmpl
sub
dec
mov
push
test
jmp
call
mov
dec
dec
mov
fwait
dec
inc
and
imul
cmp
out
pop
sti
sbb
adc
movntps
idivl
inc
jo
cmpsl
dec
jno
lret
bound
xchg
in
std
sub
stos
rcr
or
mov
lret
adc
push
xchg
test
sbb
ss
cmp
ja
mov
les
aad
push
jns
mov
loope
imul
fidivs
and
sub
pop
icebp
adc
je
or
fildl
sbb
ja
xchg
dec
out
lcall
xchg
dec
dec
adc
jecxz
nop
ja
push
jl
stos
mov
pop
scas
repnz
outsl
rcrb
mov
mov
rcrb
pop
into
or
cltd
dec
mov
in
mov
outsb
inc
jnp
ja
gs
lods
mov
outsl
lcall
ret
js
movsl
mov
data16
addr16
cld
sbb
mov
ja
add
rorl
pop
clc
mov
popf
sti
mov
mov
xchg
dec
out
fs
hlt
mov
xorb
jmp
stos
sub
xlat
mov
mov
cld
jge
jb
and
xor
jg
xchg
add
and
sub
pop
std
in
les
popa
ljmp
daa
xchg
popa
add
or
clc
sub
sub
inc
and
cmp
xor
or
outsb
adc
sub
jecxz
xchg
int3
ss
call
les
and
pop
stos
or
xchg
repnz
jmp
je
test
sti
aas
ret
and
out
arpl
test
mov
inc
jbe
adc
popa
cmc
adc
fistpll
fsubrl
mov
mov
lea
or
mov
xchg
div
cwtl
int3
sub
out
scas
daa
and
sbb
int
add
ret
ss
mov
jge
or
sbb
call
xchg
push
sub
adc
adc
mov
jns
cli
xor
das
sahf
movsl
jns
aaa
pop
mov
lds
mov
ss
sbb
mov
nop
fs
shlb
addr16
arpl
lock
sbb
pushf
cmp
out
jg
mov
pop
adc
outsl
mov
cmp
lods
xchg
add
stos
leave
jp
fnsave
xor
dec
xlat
pop
inc
inc
fwait
std
push
dec
push
adc
cmp
jmp
fwait
or
rorl
std
pop
dec
push
adc
xchg
cmp
aas
cmp
xor
fucomi
loopne
dec
in
pop
and
pusha
jno
cmp
faddl
test
xchg
imul
repz
fbld
sub
cmp
iret
ds
loopne
inc
xchg
xchg
xchg
mov
adc
sbbb
jnp
enter
jnp
sbb
xchg
mov
xor
jge
dec
and
or
aaa
enter
test
push
loope
out
and
adc
fsub
inc
scas
mov
idivl
or
push
adc
lret
pop
fwait
pop
sbb
arpl
xchg
aas
fwait
in
sub
pop
movl
mov
mov
pop
mov
leave
jp
sbbl
negb
xor
mov
and
sbb
out
mov
in
mov
mov
pop
daa
test
call
sbb
and
gs
mov
cmp
dec
cmp
mov
call
inc
dec
jo
jns
nop
add
inc
in
and
rorl
cwtl
mov
imull
lret
sub
mov
call
inc
jmp
mov
push
dec
cmp
ffreep
sbb
mov
stos
lea
scas
push
jle
sbb
lcall
push
lds
adc
decb
mov
sbb
xor
loopne
push
std
lcall
dec
orb
ret
mov
lret
pop
mov
arpl
icebp
rolb
mov
inc
sbbl
lahf
sbb
mov
gs
jge
in
rorb
push
insl
cmp
pusha
flds
cmpsb
or
out
mov
rcr
jbe
and
xchg
mov
mov
inc
and
ror
pusha
cmp
addl
insl
cmp
jge
test
mov
es
cmp
and
jne
jecxz
stos
dec
fdivs
push
xchg
lock
push
lret
adc
out
js,pt
xchg
fmuls
mov
add
and
sub
pop
sbb
loopne
push
dec
pop
pop
les
es
ljmp
arpl
mov
decl
mov
sarl
push
inc
lret
xchg
sub
cli
and
nop
in
cld
aad
gs
scas
push
and
inc
ret
shlb
pop
pop
repz
aas
gs
and
pop
fimuls
sbb
pushf
pop
adc
sbb
push
sub
xor
and
pop
fldl
out
sbb
jb
jl
pushl
sbb
out
into
outsb
lahf
data16
lret
adc
cld
arpl
sti
enter
jne
pop
or
pop
jge
pop
fimuls
lahf
icebp
into
fmull
les
sbb
or
xorb
push
sbb
xor
mov
fcompl
and
addb
and
dec
cld
mov
xchg
cmp
dec
fwait
insl
adc
push
cmp
inc
cmp
xchg
jecxz
inc
add
sub
sub
xor
jb
xorl
or
mov
vunpckhps
push
xchg
ss
pop
shrb
stos
or
pop
lahf
or
and
out
mov
or
notb
add
push
inc
fs
jecxz
ret
insb
push
pusha
jge
sbb
xchg
lods
dec
adc
ficoml
inc
leave
mov
pop
sbb
cmp
adc
xorl
cmp
imul
push
sahf
inc
scas
mov
sub
mov
mov
in
scas
xor
decb
push
mov
ret
pop
mov
sahf
es
push
sub
sbb
fildl
fstpl
sub
shlb
stc
idiv
sbb
addb
inc
sbb
pusha
shll
ds
jg
shl
dec
and
and
es
adc
mov
mov
ret
out
cmp
mov
push
icebp
xchg
jno
sbb
les
dec
arpl
xchg
pusha
stos
jl
fnstsw
scas
adc
lahf
xchg
int3
jle
mov
or
mov
push
add
sti
nop
push
mov
lods
add
and
ficoms
rorb
adc
fbstp
sub
and
je
inc
sbb
xchg
sbb
dec
std
daa
cmp
dec
aas
leave
jno,pn
jne
dec
out
fsub
pusha
inc
or
sti
sbb
fwait
cmp
test
push
or
xchg
xchg
jl
orl
int
outsl
sub
pop
and
add
pop
cli
ret
fsubrs
push
mov
xor
std
cmp
dec
fs
jo
mov
test
sub
xor
sub
sub
push
lock
cmpsl
fsubrs
and
mov
sbb
scas
jns
andl
aaa
lret
iret
insb
xor
push
cmp
lds
mov
shll
sbb
loope
jae
ret
ret
icebp
xchg
rcrb
sti
pop
cmc
mov
lsl
popa
pop
scas
mov
push
cmp
mov
push
repnz
ds
jp
int3
adc
roll
js
xchg
dec
int3
in
popa
aas
push
inc
shrl
cmpsb
test
test
fmuls
ja
adc
scas
mov
or
jg
addb
out
pop
and
sub
add
int
mov
jmp
sub
push
insb
shll
cwtl
shl
cld
hlt
add
or
xorb
cmp
loopne
xchg
pop
movsl
loopne
adc
rorl
sub
fisttpll
ret
cmp
rolb
gs
fwait
insb
movsl
aaa
test
sub
repz
mov
jns
mov
xchg
loope
jb
inc
repz
frstor
popa
inc
sub
mov
mov
or
popa
add
xchg
mov
jbe
cli
sti
mov
push
cmpsl
aam
and
fldenv
addl
icebp
push
cli
cmc
ret
fwait
shl
dec
test
dec
and
or
xor
xchg
jb
lret
jns
std
aam
test
dec
movsl
and
rcl
insb
adc
pop
add
cmp
insl
push
or
cli
pop
jge
jne
shlb
mov
adc
aam
dec
std
je
loope
js
les
mov
inc
sbb
and
out
xchg
pusha
and
add
sahf
insb
in
ja
pop
jo
clc
test
cmp
and
xchg
lret
jno
jo
subb
frstor
out
jo
stos
pusha
int3
outsl
outsl
xchg
addr16
cmp
jecxz
lds
xor
mov
out
shll
lret
lods
xor
pop
and
dec
negb
in
or
add
lea
xchg
aas
jbe
xchg
cli
xchg
xchg
mov
mov
test
sub
jno
dec
es
cmp
add
lods
aad
dec
insb
mov
lock
mov
cmpsl
scas
pop
mov
rorb
lods
inc
jno
add
lods
and
outsl
insl
loopne
repz
add
cltd
pop
mov
xor
or
loop
jo
mov
clc
push
pushf
fiaddl
orl
sbb
push
fs
cmpsl
cmp
cmp
ss
sbb
sbb
mov
fs
js
xor
mov
mov
jecxz
imul
add
out
sub
push
shr
dec
das
mov
jp
push
dec
xor
out
add
pop
and
lea
pop
aad
push
add
ret
pop
pop
add
lret
push
daa
lahf
pop
mov
xchg
cmp
clc
cs
mov
in
inc
out
mov
mov
insb
test
mov
fs
pushf
push
aam
pop
push
sbbl
sbb
gs
icebp
add
in
mov
cmp
in
jmp
adc
mov
adc
insb
and
iret
inc
movsl
das
pop
loope
adcb
xchg
das
cld
shl
les
loope
inc
push
stc
mov
nop
jl
dec
in
xchg
adc
mov
or
xchg
lret
loop
mov
int
rorl
pop
icebp
sbb
cs
add
jb
das
imulb
dec
adc
dec
movsb
adc
in
xchg
out
arpl
pop
cmp
in
cwtl
mov
jmp
mov
sub
xor
xor
xor
cmpsl
loope
mov
int3
popa
cli
fadds
movsl
pusha
mov
scas
cmpsl
push
icebp
test
in
jp
jg
jo
ret
fbld
mov
xchg
dec
jmp
sub
out
sub
sub
lahf
add
stc
xor
test
aas
imul
xlat
js
std
jge
mov
js
movd
adc
xchg
sti
mov
in
popa
jns
jns
scas
je
cld
pop
sbb
lret
jns
int
ret
inc
xor
sbb
jno
inc
mov
hlt
repz
imul
sbb
xchg
sti
sub
lods
into
inc
or
dec
pop
outsb
cmpsb
fsubrs
jecxz
fiaddl
push
or
push
hlt
sbb
adc
leave
sbb
out
stos
adc
inc
sub
push
aad
mov
cmp
mov
push
and
inc
push
out
inc
xlat
push
and
pop
and
cmpsb
jno
and
push
xor
mov
lcall
pop
lahf
jp
mov
lock
jp
fisttps
push
hlt
push
jg
sbb
jg
setno
lods
mov
idiv
xchg
jb
movsb
aaa
cs
pop
xchg
cmc
mov
add
push
dec
test
loope
sub
negl
std
sub
mov
cmpsl
decb
lds
dec
sbb
pushf
push
add
adc
gs
add
pushf
dec
rorb
xchg
xchg
fs
xor
push
gs
cmp
in
js
push
inc
mov
movl
jl
dec
mov
xchg
fs
lea
filds
adc
jg
test
push
xlat
mov
cmp
sub
ljmp
push
lea
popf
inc
imul
dec
cmp
je
mov
mov
fimull
or
sub
into
cmp
sub
sub
inc
add
sbb
aad
xchg
aad
inc
cmp
sbb
push
lods
je
imul
shlb
adcl
scas
mov
cmpsb
or
sub
push
mov
and
or
sbbb
xchg
cmp
addr16
cmpsb
stos
stos
ljmp
stos
adc
jg
into
jo
dec
mov
fdivr
sbb
dec
ss
nop
sub
fmull
je
sbb
pop
xchg
fs
or
dec
test
scas
mov
mov
out
rcr
scas
shrl
leave
push
les
and
stos
sbb
inc
xchg
dec
pop
jae
outsl
cmp
dec
popf
xchg
xor
out
lcall
xor
bound
push
outsl
inc
icebp
bound
cmp
insl
pop
push
popa
je
dec
out
inc
test
push
lods
jle
out
popa
jge
mov
stc
mov
push
cmp
mov
jle
pop
out
sbb
add
cs
aad
fcmovnb
pop
dec
and
cld
std
gs
pop
arpl
das
and
ret
fldcw
push
jb
fs
pminub
jbe
push
gs
outsl
pusha
push
push
mov
cmp
cmc
fcmovu
out
test
xor
jnp
aam
aaa
pop
mov
push
ret
mov
xchg
sbb
mov
adc
popf
in
xchg
jg
sub
sbb
xchg
add
pop
push
cmp
push
adc
xchg
jbe
cmpsb
and
inc
pop
jo
xchg
cli
aad
cmpsl
cmp
int
lods
popf
popf
outsb
pop
xor
in
les
jp,pn
jo
add
pusha
insl
call
loopne
jecxz
add
insl
movl
add
punpcklwd
or
divl
pop
sub
cmpb
jbe
int
cmp
push
fadd
mov
xor
data16
subl
repz
add
adc
fwait
mov
mov
lods
int3
inc
and
jno
pop
xchg
mov
adc
ljmp
pop
or
or
push
lcall
mov
aad
subl
push
je
stos
xlat
push
cmp
faddl
insb
sti
pushf
cmp
mov
shr
imul
sub
xchg
mov
mov
imulb
sub
or
jg
inc
stos
mov
repnz
cmp
pop
inc
or
adc
movsb
out
inc
xchg
adc
cmp
jno
and
dec
or
xlat
imul
leave
in
and
lods
push
push
xchg
and
loop
inc
add
fs
push
push
sbb
fs
mov
imul
xchg
std
dec
icebp
pushf
fildll
not
ss
je
xor
mov
movsl
mov
cmpsb
lret
mov
dec
in
outsl
mov
mov
mov
xchg
js
mov
mov
ljmp
cmp
cwtl
and
cmpsb
xchg
imul
cmp
pop
popf
aaa
push
aam
shl
xchg
xor
xor
ret
mov
push
add
call
cld
xor
xchg
mov
mov
sti
in
shlb
dec
mov
in
sub
push
aas
aad
pop
dec
outsl
roll
cltd
cmp
adc
sbbl
fstpl
add
imul
dec
sbb
pop
dec
repnz
mov
repz
rcr
out
xor
and
shl
decb
push
ret
inc
orb
aaa
daa
and
mov
lret
lods
sub
lock
loopne
mov
mov
pop
sub
leave
mov
push
repz
mov
adc
rolb
cmp
icebp
popa
mov
push
sub
mov
adc
or
mov
daa
inc
push
add
insl
aam
nop
push
xor
test
mov
popf
scas
sub
cmc
cwtl
lods
repnz
inc
mov
daa
push
push
pop
sahf
pop
stos
or
in
mov
adc
aas
clc
lcall
push
in
dec
pop
and
adc
fisubrl
xorb
testl
dec
outsl
xchg
dec
mov
repz
lods
sub
jb
and
pushf
into
popf
adc
pop
arpl
aaa
pop
xor
fcomps
nop
and
push
loope
xchg
jmp
xor
loope
stc
aas
push
jp
imul
sub
imul
in
nop
outsl
sub
stos
push
jp
dec
addr16
mov
enter
pop
insl
xor
add
les
aaa
xchg
loop
mov
pop
pushf
adc
or
sub
mov
std
aas
jecxz
out
std
inc
sub
imul
jg
fidivrl
cld
xlat
stos
sub
or
jbe
adc
loopne
lock
sahf
sti
scas
ss
idivb
sbb
mov
stc
fistpl
in
int
pop
in
mov
jnp
push
pop
or
call
mov
gs
jne
mov
mov
mov
jecxz
loopne
jg
repz
push
test
and
lret
pop
jg
mov
sub
dec
add
jg
and
dec
and
push
insl
xor
out
mov
mov
dec
xlat
in
loop
xor
and
mov
pop
mov
add
jns
mov
xchg
and
jns
shlb
and
sbb
jne
sti
sbb
lcall
or
cld
les
push
sarb
fsubl
shr
push
mov
scas
js
cmpsb
lds
cmpsl
dec
cmp
inc
ficompl
lods
sub
cmp
imul
or
or
scas
jg
stos
inc
xchg
cltd
cmp
or
push
push
mov
inc
mov
mov
xchg
movsl
pop
shlb
cmc
ss
adc
stos
lds
fcmovb
cwtl
mov
mov
cmp
ss
dec
cmp
pop
mov
fildll
push
fcoml
std
lret
pop
dec
fidivrs
inc
inc
pushf
dec
adc
dec
mov
mov
push
jno
xchg
push
xchg
and
xchg
jmp
outsl
mov
fidivl
in
imul
divb
mov
cmpsl
sub
cmp
pusha
xchg
aam
push
pop
arpl
pop
aad
mov
sub
cli
and
xor
mov
cmp
jns
add
lahf
inc
enter
cli
sbb
mov
or
mov
mov
pushl
fwait
xchg
sahf
aas
fisubrl
lds
out
fidivrl
rcrl
and
rol
scas
add
ja
loop
or
add
mov
out
dec
sub
push
inc
cmc
xchg
dec
sbbl
add
inc
cmp
test
push
popa
shrb
lahf
into
rcrb
inc
test
push
inc
and
jb
jge
inc
lret
jne
mov
movsb
or
inc
outsl
mov
popa
into
fwait
sub
pop
add
xchg
push
test
xchg
dec
leave
out
jo
push
pop
xchg
test
adc
loop
test
mov
leave
stos
adcb
xor
lahf
mul
add
pop
adc
repz
cmp
mov
jle
jle
nop
les
in
fidivs
out
add
les
mov
xor
xor
loop
aas
jae
inc
icebp
mov
jns
and
data16
cmp
jp
adc
xlat
sub
fmull
nop
adc
push
or
pop
pop
jg
pop
mov
call
sub
dec
sahf
sbb
into
cmc
jecxz
fcmovnu
add
js
mov
sbb
fiaddl
push
arpl
rcrb
jo
cmp
test
shl
scas
sahf
fstpt
add
cmc
xor
adc
dec
dec
pop
jge
sub
lcall
mov
sub
push
repnz
outsb
imul
mov
or
cmpsb
jb
sbb
jb
fists
iret
pop
lods
mov
jnp
cmovb
lret
in
jb
mov
or
jg
xor
popf
push
mov
or
cwtl
enter
cmp
fists
sub
ss
repz
test
xchg
dec
jno
stos
cmp
adc
inc
ffreep
nop
mov
dec
cmpsl
lock
dec
inc
and
les
add
cmpl
stos
sub
repnz
xchg
popl
cwtl
hlt
pop
mov
inc
and
pop
stos
and
decl
imul
rclb
push
xor
xor
cmp
mov
repz
xor
push
and
jecxz
push
std
push
inc
push
shll
jnp
rolb
in
sub
pop
stc
popf
adcb
test
xor
rorb
lahf
xchg
pop
jns
jle
jge
xchg
xor
lods
sti
pop
xor
out
adc
xchg
in
imul
push
test
push
mov
loope
jg
fidivs
jb
jae,pt
inc
or
ja
sbb
mov
or
icebp
out
popf
ljmp
mov
cmpsl
call
cmp
out
dec
inc
mov
sbb
mov
stos
lahf
dec
pop
or
pop
jnp
repnz
dec
ljmp
sub
mov
popf
int
pop
mov
mov
cmp
add
push
pusha
arpl
movsb
add
push
xchg
sbb
test
lock
loope
stos
loop
dec
fisttpl
je
push
mov
out
cltd
pushf
popa
sahf
notb
lret
gs
pop
notl
aaa
dec
and
out
imul
orb
mov
pushl
test
jmp
mov
and
mov
leave
inc
inc
aas
ret
inc
jmp
or
xchg
frstor
adc
cmpb
inc
js
xor
jmp
xchg
repz
push
sbb
mov
jbe
adc
hlt
jp
insl
dec
pop
push
and
cmpb
cmp
push
lcall
stos
out
or
pusha
fs
push
xchg
bound
jnp
call
mov
push
in
lret
push
pusha
jne
adc
insb
push
mov
test
xor
inc
aad
mov
fimull
jmp
jno
aad
rolb
dec
pushf
push
fists
test
out
jp
enter
xor
adc
jne
xlat
sbb
test
enter
mov
pusha
out
stos
pop
xchg
inc
sub
or
sbb
inc
sbb
std
cmp
repnz
and
cmc
lock
scas
dec
int
cmp
pop
call
ret
cmp
push
fiadds
lea
dec
gs
push
inc
loope
cmp
repz
iret
sbb
mov
in
push
xlat
aaa
sub
std
xor
cmp
fucomip
movsb
jno
fildl
les
mov
les
ret
mov
jne
cld
mov
sbb
add
mov
test
push
push
in
sub
add
repnz
cmpsl
pop
xor
daa
loop
fwait
pop
pusha
jle
jbe
cli
xor
fisubrl
movsb
incb
xor
stc
xor
sub
sub
ljmp
lcall
je
push
clc
xlat
loopne
test
jo
xchg
cmpsl
push
dec
mov
in
and
mov
xchg
jne
mov
shll
movsl
sub
fs
xchg
or
push
cs
dec
xlat
test
flds
mov
cwtl
icebp
data16
sub
pushf
push
decb
imul
arpl
pop
stc
popl
mov
mov
in
sbb
int3
fsts
inc
adc
and
and
inc
xor
pop
ss
pcmpgtd
fstl
fs
fldt
mov
push
out
xchg
fisubrs
in
stc
add
fnsave
push
jl
shlb
mov
or
repz
add
popa
pushf
daa
sbb
xlat
xchg
popf
inc
push
dec
add
adc
mov
pop
sbb
pop
dec
dec
mov
imul
mov
pushf
stos
xchg
outsl
jg
push
sbb
pop
ret
scas
aam
mov
test
out
jne
dec
xchg
sbb
or
rorb
jae
in
xchg
sbb
mov
mov
dec
lock
nop
cwtl
mov
pop
adc
ret
ss
pop
rcrl
fsubs
add
mov
sub
mov
jmp
mov
loope
and
leave
inc
mov
addb
jl
stc
imul
jnp
loope
nop
push
cmpsb
dec
sub
xor
xor
jmp
je
mov
sub
and
sub
and
dec
pop
shlb
scas
push
adc
std
ds
enter
cwtl
ret
jbe
lcall
outsl
aaa
xchg
xor
mov
mov
out
lahf
xor
les
push
leave
xchg
xor
negb
fsubr
rcrb
mov
or
xchg
js
imul
xchg
push
pop
xor
dec
sub
imul
jo
sub
int3
add
subb
mov
xor
add
leave
dec
xor
jge
sub
and
dec
outsb
and
dec
shrb
or
xchg
lods
mov
add
es
in
xor
das
stc
sub
roll
sbb
gs
jbe
mov
mov
popa
inc
pop
mov
adc
test
rclb
fstl
mov
jno
cmp
add
xchg
fstps
ret
dec
sahf
adc
jg
popf
dec
push
pop
stc
dec
adc
mov
popf
addr16
testb
fcomip
xchg
scas
add
adc
int3
sub
loope
in
out
pop
sbb
jns
push
sbbl
adc
pushf
cmpsb
add
ja
and
in
lret
test
cwtl
xlat
xor
push
lock
xor
dec
ljmp
cmp
xor
xchg
mov
lds
sti
pop
adcb
mov
ja
sbb
or
lock
adc
push
scas
scas
or
movups
jae
mov
cli
in
popf
lret
test
test
xchg
cltd
dec
ror
mov
push
cmp
fiadds
dec
mov
adc
and
sub
pop
imul
adc
movsb
sub
outsl
dec
xlat
fbld
xchg
fsts
jae
cmp
jae
mov
je
push
mov
rorl
aam
push
fiaddl
xchg
push
mov
mov
stos
mov
ret
jmp
in
movsb
bnd
cmpsl
testl
add
pop
outsb
jge
or
iret
stc
jecxz
mov
inc
push
test
adc
test
jge
sar
sbb
mov
bnd
aas
cmp
ud1
test
int
ret
cs
andl
leave
pop
pop
xchg
xchg
jo
cmp
lcall
push
popa
xchg
mov
daa
sub
lds
push
push
or
xchg
andb
hlt
nop
fcoml
push
sub
xchg
incb
rcl
and
lahf
adc
mov
xchg
sub
jmp
test
gs
out
clc
call
in
outsl
clc
divl
fmul
push
cli
test
xchg
and
in
out
mov
mov
mov
dec
pop
adc
lock
mov
out
pop
sbb
push
jb
dec
inc
mov
aam
mov
sbb
int
mov
aad
lods
aam
xchg
add
out
jmp
sub
dec
xlat
sub
mov
add
mov
xchg
adc
mov
shll
je
loope
mov
mov
cmp
cmpsb
jbe
movsl
scas
mov
fs
xchg
loope
adc
xchg
dec
pop
sbb
dec
out
pop
dec
push
fnstenv
lahf
lods
sub
lds
clc
mov
cmp
pop
mov
sahf
fldz
or
jno
mov
sbb
inc
cld
add
sbb
dec
bound
or
sbb
pop
sbb
adc
pop
add
pushf
not
push
rol
push
jae
in
bound
dec
push
addr16
dec
mov
dec
or
pop
cld
aaa
sar
out
xchg
mov
and
or
sub
cld
and
mov
flds
out
mov
cmc
cmp
mov
push
mov
or
pop
and
sahf
std
aam
cs
idivb
lea
inc
cmp
sub
clc
and
mov
add
pop
fwait
cmp
xchg
or
and
outsb
add
adc
cmc
xchg
pop
clc
mov
imul
jl
leave
add
out
push
mov
xchg
mov
lds
in
and
cwtl
outsl
shl
arpl
xchg
mov
les
inc
pop
test
xchg
dec
int
popa
subb
sub
cmpsl
clc
pop
dec
inc
inc
pop
je
scas
mov
lret
xor
scas
popf
push
mov
mov
or
nop
inc
ret
xor
jge
inc
outsb
les
cltd
pop
scas
fistpll
push
lock
dec
cli
cwtl
mov
xchg
cltd
rcrl
dec
sbb
fistpll
cltd
sub
jno
pop
jecxz
dec
mov
jp
push
jg
add
mov
jge
outsl
jge
mov
js
insl
pop
ret
cmpsb
shll
jmp
aaa
jns
shll
mov
jne
cs
lcall
outsl
fnstcw
inc
ja
jge
inc
cltd
incb
adc
jg
xchg
mov
lret
loop
or
insl
or
call
rorb
repnz
dec
dec
aad
add
sahf
pop
push
sar
jle
or
xchg
fsub
dec
dec
iret
push
jg
push
andl
lds
mov
sbb
cwtl
stos
sysenter
pop
loope
jmp
xchg
lods
dec
dec
mov
call
out
add
lock
sub
shrl
leave
mov
fisttpll
cmp
cmp
shrb
fwait
inc
add
xor
dec
ja
pop
nop
test
loopne
mov
xor
mov
out
mov
pop
data16
inc
jle
add
adc
add
mov
push
dec
aad
mov
cmp
shl
mov
mov
repz
pop
out
mov
ret
arpl
incl
sarl
cmp
repz
cmp
or
xor
sub
rorb
inc
cmpsb
jmp
jb
jle
add
ds
push
mov
test
cwtl
or
mov
sub
fistpl
aaa
jae
pop
sub
hlt
out
ds
test
movsl
xor
pop
pop
aam
cmp
cmp
cmpsb
aam
test
push
loopne
inc
call
mov
loope
adc
pusha
pop
lret
push
pusha
or
jae
movsb
ja
sbb
aas
pushf
inc
cmc
cltd
ss
and
ret
loopne
jo
jae
jg
and
repnz
xchg
ss
push
cld
movsb
aas
and
xor
ffreep
sub
in
xchg
ja
jg
xor
push
cld
fdivrs
mov
and
inc
icebp
rol
and
sub
fdivl
push
daa
xor
insb
push
mov
pusha
sbb
inc
adc
or
pop
jbe
iret
add
gs
mov
mov
xor
dec
xchg
call
pop
inc
jae
out
cwtl
jp
sub
out
fptan
in
in
push
sub
out
nop
inc
jns
mov
mov
fidivs
xor
cwtl
jmp
cmpsb
movsb
inc
daa
xor
push
cwtl
call
stc
pop
test
mov
rcl
cmpl
xchg
clc
pushf
adc
clc
leave
mov
lock
and
xchg
sti
stos
push
popf
mov
xchg
out
mov
sti
ss
insb
div
cmpsl
mov
xor
dec
rclb
add
jbe
cltd
call
enter
fcmovnu
sbbb
jmp
test
jno
cmp
mov
incl
jle
xchg
mov
cmp
out
lock
jne
mov
adc
pop
lcall
loope
faddp
jmp
std
out
notb
mov
push
popa
aad
inc
aam
in
pop
jp
lcall
xchg
mov
movsl
mov
add
jb
cmc
pop
push
push
enter
add
fsubrl
sbb
dec
lods
mov
ljmp
and
push
fs
and
lock
stos
jmp
out
inc
lods
arpl
sub
data16
push
in
or
adc
sub
lea
mov
push
mov
cmp
inc
adc
cmpsl
dec
das
mov
cmp
mov
push
jmp
in
hlt
subb
rorb
das
cld
ficomps
mov
jmp
jmp
cs
sbb
jge
insl
pop
jno
sub
and
and
adc
stos
jbe
data16
add
xchg
es
in
sbb
int
les
push
pop
aas
lea
mov
pop
mov
fistl
pop
dec
adc
cltd
les
xchg
jle
jmp
ds
cli
rcr
rclb
dec
inc
mov
and
pusha
adc
xchg
pop
leave
cld
cmp
fstps
mov
jo
push
adc
mov
in
popa
sub
add
mov
and
push
int3
int3
je
or
fbstp
lock
xor
mov
cwtl
sbb
stos
imul
sbb
arpl
mov
sbb
jbe
imul
sahf
push
mov
pop
scas
insb
leave
lret
ja
test
icebp
rclb
xchg
pop
sarb
adc
cwtl
mov
add
or
arpl
pusha
mov
js
and
repnz
cmp
mov
push
cmpsb
pushf
jecxz
lret
or
fldl
mov
mov
dec
inc
lods
fdivrl
test
cmc
dec
icebp
jae
pop
outsl
xchg
scas
mov
psubd
lea
mov
add
or
jecxz
push
push
lods
pop
xorb
pminsw
popf
jecxz
inc
jge
pusha
dec
jp
mov
push
xchg
xor
mov
mov
sbb
movsb
push
adc
jmp
add
cmpsl
imul
cmp
stc
xchg
aas
xor
push
push
pop
mov
scas
mov
or
das
or
fldcw
jl
push
ret
mov
add
push
mov
sub
ljmp
mov
mov
in
mov
test
fld1
movb
adc
ja
pop
jbe
outsb
es
rcl
aaa
mov
popa
aas
mov
lcall
inc
adc
loop
shl
sbb
jno
dec
cmp
mov
insb
mov
sub
adc
insl
jnp
pop
pop
pushl
dec
cwtl
inc
or
adc
adc
in
pop
mov
mov
mov
clc
ds
cs
push
dec
or
pop
cltd
xor
dec
mov
into
xchg
xchg
and
inc
out
jl
je
xchg
jne
mov
fsubs
cli
push
jbe
xchg
xchg
and
outsb
inc
js
in
outsl
in
loopne
push
ret
mov
xchg
nop
pushf
cwtl
js
packuswb
or
push
jle
movsl
sbb
inc
push
mov
aam
xchg
lds
fcomip
jae
icebp
jnp
fwait
cmp
xchg
and
cld
je
lret
add
mov
imul
std
dec
iret
mov
bound
stc
adc
loope
jl
mov
movsl
or
lock
out
in
adc
pop
and
icebp
fmul
and
mov
add
ss
outsb
ret
mov
aam
push
xchg
push
insl
stos
nop
sbb
stos
mov
add
sub
jb
cltd
popa
push
jmp
out
mov
lods
pop
pushf
pop
pop
pop
outsb
js
call
inc
test
inc
nop
mov
shlb
scas
scas
aaa
and
cmp
inc
int3
mov
inc
jge
jne
mov
or
in
cmp
stos
xchg
je
sbb
adc
test
cwtl
add
jno
mov
pop
mov
mov
dec
mov
inc
nop
push
fstpt
sbb
jb
fsts
arpl
faddl
inc
and
xchg
adc
fcmovb
or
repz
dec
loop
outsl
loop
test
test
mov
mov
mov
fidivl
xchg
in
outsl
inc
js
dec
dec
inc
mov
xchg
push
jns
cltd
xor
xchg
sbb
push
iret
notb
pop
adc
push
int3
or
mov
xor
jmp
call
jl
ja
js
lcall
aaa
xchg
xchg
and
pop
cmp
call
fists
cld
xchg
jmp
mov
pop
div
out
repz
dec
or
cmpsb
inc
adc
push
fiaddl
pop
leave
sbb
lock
addr16
es
inc
push
push
roll
rcrl
xchg
xlat
jae
fwait
in
je
or
jle
mov
nop
test
push
iret
pop
aad
sbb
negb
mov
lcall
es
testb
xchg
jge
add
ljmp
cmpsl
push
mov
imul
mov
add
stos
es
repnz
and
add
rcl
dec
xor
scas
jo
sbb
dec
mov
rcrl
iret
xorl
into
or
push
mov
roll
cmpb
push
and
mov
or
push
mov
mov
push
lcall
cs
inc
dec
and
xchg
iret
lahf
sbb
dec
mov
icebp
out
mov
cld
push
mov
add
ret
rorb
fcomps
sub
or
cmp
jno
lea
xor
mov
inc
test
mov
stos
daa
xchg
cmpl
arpl
jge
sahf
inc
jo
jo
sub
push
lock
mov
test
mov
xor
into
cs
lret
fbld
xchg
sub
pop
mov
xchg
mov
in
cmpsl
dec
movsl
lock
lods
pop
pop
aaa
jb
cltd
imul
adc
or
jae
jle
xlat
stc
loope
test
mov
in
out
pop
popa
adc
xchg
sub
cmp
sbbl
inc
dec
imul
and
push
jl
pop
pop
out
stos
sbb
xchg
cmp
mov
sahf
es
aam
mov
push
inc
outsl
mov
lahf
movsb
lret
movsb
nop
ds
mov
mov
adcb
pusha
or
sbb
cmc
sbb
jo
dec
movsb
fdivl
in
js
adc
cmp
pop
imul
lret
xchg
leave
and
or
inc
xlat
or
insb
in
out
mov
jle
cmp
lret
sbb
imul
push
sti
adc
pop
int3
pop
sbb
push
mov
roll
clc
and
pop
lcall
mov
cmpsb
sahf
pop
int3
pop
jecxz
xchg
out
mov
js
mov
xor
loopne
subb
aaa
push
push
mov
push
dec
dec
fbstp
std
cli
stos
in
add
popa
jbe
int
pop
pop
sub
loopne
movsl
and
mov
popf
pop
stos
movb
or
outsb
push
jne
inc
sbb
mov
adc
data16
jecxz
add
rcrl
pinsrw
push
and
adc
sub
pusha
xchg
mov
cltd
decb
mov
divl
jecxz
cmp
loopne
xchg
fisttpl
popa
pushf
dec
mov
int3
mov
cli
fwait
adcl
aas
repnz
jecxz
lods
popa
callw
mov
shrl
mov
cmp
js
sbb
push
and
mov
leave
cmpsb
mov
adc
adc
rorl
inc
ss
repnz
shl
inc
xchg
dec
and
outsl
or
adc
fmul
mov
ror
jb
mov
or
and
push
ljmp
movsb
inc
adc
add
aas
ret
mov
sbb
push
push
inc
dec
fistl
inc
lret
ja
loopne
fwait
cwtl
jge
dec
pop
push
xor
dec
add
push
enter
fadds
and
sbb
mov
sbb
sbb
push
pushf
rclb
roll
mov
pusha
sbb
add
xor
aam
push
addr16
jb
loopne
lds
mov
mov
lcall
inc
or
pop
mov
lret
pop
sbb
adc
out
mov
cltd
rorl
movsb
cltd
les
cmpsl
mov
mov
ret
aam
nop
in
xor
pop
scas
mov
mov
test
add
xlat
xor
jp
mov
and
cmpsl
push
incb
xchg
std
push
or
push
mov
jb
and
mov
push
dec
cmpsl
adc
fimull
in
add
lock
int
mov
pop
mov
pop
mov
xor
js
pop
fistpll
sbb
inc
xchg
or
mov
out
cmpsb
notl
xchg
sahf
in
or
call
push
loopne
add
scas
pop
inc
leave
xchg
loopne
addr16
inc
jns
insl
fcmovnu
mov
rcr
jle
rcrb
or
int
loope
inc
ret
xor
or
loope
mov
inc
aam
jle
ss
sahf
icebp
adc
jmp
leave
imul
sub
dec
daa
mov
cltd
int
add
insl
pop
and
int
sahf
popa
das
pop
xor
out
push
lods
cmp
aam
out
movsl
arpl
mov
in
outsl
popf
mov
jns
pop
pop
jge
and
gs
push
pusha
aad
pushf
adc
jl
jecxz
shr
inc
int3
mov
inc
adc
jg,pn
jne
ds
or
mov
movsb
aaa
push
std
dec
cli
fiaddl
ss
or
cli
xchg
lods
lods
inc
lcall
adc
bound
mov
jge
or
testl
push
sbb
rolb
mov
sbb
lcall
jne
cli
jnp
dec
jg
rcrb
sarb
sbb
idivb
shll
lret
inc
lahf
icebp
call
sbb
movsb
movsl
jae
xlat
insl
sbb
pop
sub
cmp
mov
ljmp
inc
jnp
scas
inc
imul
ss
scas
in
loope
cli
repnz
jg
and
lcall
ficomps
int3
lock
sub
jp
cltd
jecxz
aam
sahf
add
sub
test
dec
imul
push
lret
iret
xor
mov
or
lods
jo
dec
iret
sbb
fs
rcll
fst
imul
lea
sbb
sub
xchg
xor
std
add
and
stos
nop
cmpsl
cmpsl
mov
mov
cmp
cmc
inc
pop
jge
cld
ss
flds
jns
lds
push
cld
cltd
push
imul
sub
movsl
test
shl
and
sbb
sub
jns
pusha
lods
and
aad
call
push
xor
mov
outsb
inc
adc
jl
xchg
out
popf
pop
xchg
out
imul
fs
inc
fimull
jo
sarl
inc
adc
bound
lds
les
pusha
mov
xchg
cli
mov
gs
sbb
fsub
dec
daa
repz
push
cmp
pop
dec
dec
jp
je
push
scas
add
push
jns
mov
stos
movsb
push
sahf
loope
test
xchg
nop
or
dec
shl
mov
pop
add
rolb
pop
xchg
imul
movsb
addr16
lea
adc
push
pop
rcl
jns
repz
adc
mov
test
jmp
or
xorb
leave
add
xor
loopne
mov
es
fsubrs
divl
pop
sbb
push
pop
pop
and
pop
mov
arpl
sub
ja
add
inc
jns
push
mov
adc
mov
movsl
jno
jecxz
mov
sub
xor
inc
ja
jnp
loop
add
and
cltd
rolb
mov
xor
inc
adc
xchg
push
outsb
and
fdivrs
gs
mov
sbb
inc
xchg
into
mov
into
mov
and
dec
lret
test
movsl
sbbb
into
call
aam
inc
jl
enter
jno,pn
dec
pop
filds
movb
dec
sub
ret
addb
stos
push
aas
inc
es
out
int3
in
mov
mov
inc
add
add
into
mov
xor
cs
js
repnz
lds
into
popf
aaa
pushf
mov
xchg
repz
popa
add
ja
adc
adcl
in
arpl
and
xor
sub
sarb
sar
inc
imul
addr16
jb
cmpb
jno
mov
ret
dec
add
sbb
mov
mov
insl
jo
out
xchg
insl
mov
andl
xchg
push
lds
sub
sqrtps
out
jle,pn
jnp
mov
rep
xchg
cmc
insb
rclb
je
stos
cld
imul
adc
aad
ret
mov
or
divb
add
les
adc
inc
aaa
fnsave
dec
dec
repnz
lcall
out
pop
pop
lock
js
nop
stos
mov
scas
test
pop
pop
mov
inc
cmp
sub
cmp
out
inc
sub
fldenv
inc
ss
and
inc
and
mov
sbb
mov
and
jb
push
mov
pusha
fsts
dec
cmp
jnp
mov
jno
push
sub
sub
pop
mov
fildl
mov
orb
pusha
jno
aam
sahf
add
repnz
dec
aaa
xor
arpl
mov
into
mov
jbe
cld
mov
mov
cwtl
inc
adc
inc
or
mov
mov
mov
mov
aas
jb
je
pop
cwtl
les
out
pop
scas
in
inc
mov
cs
loop
xor
push
fisubrl
cmp
stos
ret
xchg
rcrl
mov
jmp
fldl
mov
mov
adc
xor
pushf
shlb
xchg
in
cs
sub
sbb
loopne
xchg
mov
mov
push
mov
inc
pop
pop
fbld
out
xchg
inc
cmc
mov
jb
fs
jg
inc
add
jge
jge
lcall
out
mov
add
cmpl
mov
into
in
inc
in
push
jne
rol
ljmp
stos
jb
jmp
outsb
xchg
xchg
cld
js
out
push
push
into
sti
jne
in
pusha
sub
and
adc
adc
or
aaa
sub
or
cmp
clc
rol
out
in
add
adc
test
in
scas
push
jb
int
ficoml
fistps
jmp
daa
fildll
xorl
mov
mov
popa
les
out
fisubl
mov
std
bound
sub
pop
cld
addb
addl
xchg
andl
fmul
mov
repnz
cmp
xchg
in
pop
lds
mov
and
adc
loopne
pushf
pop
std
movsl
jg
into
inc
sub
sub
arpl
imul
dec
std
mov
and
sbb
lcall
mov
mov
mov
mov
and
jp
mulb
jecxz
pop
and
push
sub
scas
xor
push
daa
cmp
and
or
ds
cmp
cmp
ljmp
adc
mov
cmpsb
push
sti
out
sahf
or
mov
pop
aam
arpl
sahf
int3
and
icebp
lret
sahf
lcall
shll
xchg
push
loopne
mov
xchg
lods
mov
shll
adc
lret
xchg
add
jle
je
mov
push
inc
sbb
insb
sbb
jne
mov
lods
hlt
cmp
sbb
cli
mov
mov
or
les
fnstsw
sub
dec
sbb
jle
imul
mov
jl
js
jg
loop
fisubl
jp
mov
inc
and
iret
fistpl
lret
adc
mov
daa
lods
das
in
inc
cmp
mov
es
icebp
cmp
xor
repz
pop
xor
test
fistpl
sti
xchg
mov
jno
sub
jns
sarl
repnz
push
add
aam
mov
push
jg
mov
loopne
add
jns
popf
cmpsl
or
or
imul
push
das
adc
xchg
fisubrl
mov
dec
sbb
xor
inc
push
and
push
inc
test
push
cmpsb
cmp
xchg
mov
xor
add
test
pop
fistpl
jnp
rol
push
repz
xchg
sub
push
loop
jns
jns
xchg
mov
xchg
or
out
adc
test
lahf
add
xchg
aaa
mov
adc
bts
and
dec
sbb
rolb
ficomps
nop
cmc
call
pop
and
inc
pop
and
mov
fcoml
and
gs
cmp
pushf
and
in
jl
out
mov
push
dec
add
adc
test
and
or
cmpxchg
mov
lock
test
cmp
xor
or
sbb
out
into
and
inc
out
xlat
test
jns
and
out
xchg
les
into
cmp
iret
xor
in
rorb
les
mov
test
xchg
fwait
andl
lods
jmp
adc
pop
add
movsb
lahf
adcb
pop
fidivl
sbb
hlt
in
mov
fistpll
repnz
shrb
pop
pop
mov
mov
sub
sub
ret
rcrb
jmp
xchg
push
cmp
out
xor
inc
fiaddl
jno
mov
pop
inc
cli
push
pop
xor
jns
dec
lods
mov
pop
or
jae
and
xlat
cmp
cmp
pop
shl
xchg
aad
dec
popf
out
pop
ficoms
xor
cmpsl
sbb
pop
or
pusha
mov
cmp
loope
dec
xchg
mov
mov
xor
sahf
call
dec
movsb
testl
pop
push
outsl
pop
push
das
fadds
ret
or
inc
xchg
dec
mov
jae
push
xor
movsb
cmpsb
xor
mov
shll
sbb
add
cmc
mov
add
mov
mov
outsl
sub
cmpb
inc
jne
incl
xor
in
dec
jmp
mov
cmc
pop
jg
sub
fst
in
push
pop
rol
or
mov
adc
in
xor
pop
stos
test
scas
cmpsl
lods
xchg
dec
xchg
lcall
dec
cmpsb
pop
xor
mov
push
inc
mov
out
push
leave
add
in
jg
int3
fcomi
lahf
int
fldenv
arpl
mov
ffree
dec
push
jno
push
dec
cmpsl
aam
or
call
push
pop
xor
or
push
or
mov
push
and
inc
repz
cmp
xor
cld
xor
push
dec
jmp
outsb
pop
mov
add
push
mov
mov
add
std
std
xlat
test
outsl
int3
sub
pop
and
sub
sub
stos
dec
sbb
and
fwait
in
lods
mov
xchg
mov
test
xchg
xchg
push
in
cwtl
pop
mov
lods
negb
dec
push
cld
push
fadds
fidivrs
lods
pop
loopne
push
test
nop
adc
and
lahf
bound
int3
sub
mov
loop
sub
popl
sbb
xchg
imul
mov
inc
xchg
or
xchg
xchg
inc
mov
xor
pop
mov
dec
gs
pop
hlt
mov
mov
into
hlt
repz
cmpsl
fdivs
jge
imul
cmpsl
push
mov
push
dec
lahf
jmp
mov
daa
jle
adc
mov
popf
inc
or
arpl
xchg
sbb
or
test
fistpll
sub
mov
loopne,pn
and
inc
and
xchg
jecxz
lahf
ficoml
aam
add
add
xlat
ret
xlat
and
mov
cld
stc
dec
stos
imul
test
cmp
mov
lods
mov
aaa
mov
inc
and
int3
sub
inc
into
imul
mov
mov
shll
sbb
div
adc
xadd
dec
not
push
xor
adc
jmp
cmp
popa
mov
push
test
vsqrtpd
xchg
subl
pop
mov
push
cmpsl
loop
inc
fimuls
adc
sub
sbb
shrl
jo
mov
push
icebp
xchg
int
fsin
cmp
and
mov
pop
adc
ljmp
or
xor
ud0
dec
jns
pusha
xchg
mov
push
sub
mov
jmp
sub
and
xlat
push
push
jmp
push
aaa
jp
push
dec
pusha
jb
mov
inc
ljmp
stos
xor
insb
mov
add
fidivs
iret
mov
push
cltd
shll
push
bound
outsl
cmp
lock
or
jns
jb
dec
leave
jg
add
xchg
or
xchg
lcall
out
mov
sbb
mov
pop
jne
or
xor
fimuls
adcl
jo
push
ret
out
je
ljmp
pop
push
repnz
movsb
xchg
cmp
push
cmp
push
insl
cmc
and
lds
addr16
jb
push
outsb
int3
jmp
jg
dec
or
jno
pop
fsubl
dec
and
sub
out
fs
rcrb
lret
dec
icebp
pushw
xor
or
xchg
iret
ljmp
das
sbb
loopne
out
fs
mov
es
pop
stos
rcrl
jnp
cmc
lret
cmc
push
mov
pop
out
pop
ffree
imul
jecxz
filds
mov
or
out
inc
mov
mov
paddsb
jbe
stos
push
cld
pop
das
pop
lsl
hlt
leave
stos
xchg
sbb
popf
push
jl
out
outsb
pop
iret
movd
shrb
repz
xorb
test
fisubrs
pop
push
add
js
bound
push
jno
xor
imulb
fucomi
ror
jmp
ss
je
ja
enter
lret
dec
mov
xor
mov
out
or
insl
cmpsl
andl
nop
or
xorb
imul
cltd
inc
leave
mov
pop
sti
loop
enter
xchg
cmpl
adc
aaa
xchg
sbb
shlb
mulb
repz
mov
lods
dec
cld
sub
mov
dec
xchg
mov
push
in
xchg
mov
lret
lods
mov
inc
adc
mov
push
jl
popf
test
lret
rep
pop
xchg
cmp
mov
jae
gs
repz
and
js
xor
or
jo
xchg
cli
lahf
ret
xor
popw
repnz
mov
inc
xchg
loop
push
jge
pop
js
sbb
fcoms
mov
jle
adc
add
pop
push
mov
push
cmp
pop
std
lahf
push
push
insb
inc
mov
popa
xchg
in
fsubrs
jns
arpl
jp
jb
cltd
cld
lret
hlt
ss
lret
fistps
sub
dec
dec
mov
cmp
push
cs
pop
mov
shll
push
sarl
add
jns
int
jl
lcall
cltd
jmp
jns
clc
push
jle
popa
movsl
push
aas
dec
mov
icebp
push
push
ret
jmp
std
or
mov
ficoms
fs
mov
dec
loop
stos
loope
xor
subb
cmp
mov
loope
inc
cmp
icebp
addb
push
fcmovbe
dec
adc
rorb
and
ds
pop
stos
mov
pop
xchg
out
mov
lea
xor
les
dec
test
sbb
push
cli
stc
out
inc
dec
push
sbb
sbb
popa
stc
push
sbb
sub
and
rolb
clc
sub
das
lea
test
loop
jecxz
and
or
jo
insl
sahf
aam
rorb
xor
jo
xor
aas
jl
mov
push
les
mov
push
pop
dec
je
divb
sahf
out
fcomp
sub
push
mov
ret
rcr
push
adc
mov
imul
cmc
sbb
and
xor
xor
fnstcw
xchg
ljmp
mov
aas
out
pop
outsl
mov
cmp
mov
push
loop
jmp
fdivp
or
lcall
sub
insl
sbbb
or
pop
stos
mov
insb
and
push
mov
or
leave
mov
add
inc
mov
or
xchg
mov
and
xorl
mov
cmp
dec
mov
mov
inc
mov
push
sub
xchg
mov
or
push
aaa
mov
pop
jae
inc
dec
jp
mov
and
xchg
mov
fisubl
js
jge
loop
imul
mov
scas
cmp
fidivl
lods
mov
js
adc
mov
pop
cmp
out
stc
lds
jne
push
xor
lahf
lea
mov
cmp
xor
loope
adc
push
std
into
jge
lret
xchg
mov
faddl
adc
pusha
mov
icebp
imul
leave
mov
push
cmpsb
bound
push
inc
mov
cmp
hlt
pop
cld
repz
dec
hlt
jbe
adc
pop
push
cltd
aam
lret
sub
notl
movsl
dec
mov
inc
push
test
xor
inc
es
jmp
loop
lods
push
sbb
xor
loope
movsl
fcmove
subl
adc
fsubs
arpl
sahf
insl
mov
sub
dec
sbb
daa
rcr
sub
xlat
xor
xchg
add
mov
dec
adc
push
fnstsw
mov
loopne
fdivp
cld
outsb
arpl
jnp
aaa
dec
lock
xchg
out
xor
jmp
adc
push
jecxz
adc
test
shlb
stc
fsubrs
aas
inc
adc
xchg
cmp
dec
sub
add
lea
testb
fdivl
cld
cmp
add
fiaddl
jnp
mov
inc
xor
dec
or
jmp
fndisi(8087
and
daa
sahf
dec
sbb
push
or
icebp
mov
stc
cli
dec
ffree
push
insl
cmp
or
pop
stos
or
or
xchg
data16
mov
inc
xor
incl
outsb
out
push
xchg
inc
int
cmp
xor
pop
push
in
cwtl
ss
adc
inc
test
divb
rcl
js
adc
data16
cmp
fisubrl
out
divl
mov
jecxz
push
jne
sbb
lcall
add
scas
pop
ficoms
mov
xchg
pop
int3
mov
mov
inc
pop
mov
sub
popf
outsb
push
dec
in
xor
xor
dec
fisubrl
xlat
mov
mov
mov
inc
dec
outsl
and
mov
mov
adc
pusha
test
push
stos
and
dec
repnz
adc
pop
and
or
fcmovu
pop
push
in
pushf
cmc
xchg
pusha
popa
pop
pop
pop
mov
cmc
fcomps
cmp
shll
out
and
adc
adc
rcrl
xchg
mov
dec
faddl
clc
popa
int3
jmp
mov
movsl
pop
mov
sub
or
je
or
gs
jns
xlat
mov
int
push
fiadds
iret
out
mov
fistl
xor
jmp
repz
adc
popa
hlt
mov
std
or
dec
movsl
jno
inc
pop
jmp
out
movsb
daa
fcmovnb
and
sub
jno
cmp
inc
mov
cli
push
xchg
mov
pop
clc
or
cwtl
stos
in
cmp
push
inc
std
ds
mov
popl
leave
fisttpl
or
cmpsb
pop
jg
add
xlat
aad
xor
pushf
sub
and
pop
push
in
out
sub
stc
sbb
lahf
sbb
inc
lea
aas
aad
sbb
inc
push
scas
inc
mov
lcall
movsl
adc
or
sub
sbb
xchg
xchg
movsb
fdivl
push
xlat
xor
push
subl
push
mov
aaa
pop
in
mov
inc
sub
xor
test
push
pusha
pop
hlt
jbe
stos
push
mov
sub
jge
stos
test
xor
cmp
cmp
addr16
pop
mov
xchg
pop
mov
lcall
stc
leave
jp
icebp
outsl
ret
jnp
push
or
and
rclb
cwtl
scas
xor
rcrl
cmpb
outsl
dec
mov
popf
mov
xchg
push
xor
add
pushf
scas
aas
or
dec
lret
push
lcall
dec
mov
xor
xchg
mov
xchg
add
jge
mov
movsb
add
lret
or
bound
push
pop
mov
loopne
and
pop
push
in
pop
subl
or
notl
add
push
jb
sub
pop
fiadds
fadds
and
jb
push
and
jb
xchg
scas
movb
cmp
adc
mov
jno
test
dec
ja
dec
mov
daa
addr16
push
insl
cmp
sub
cmp
sahf
into
inc
leave
scas
ret
pop
outsb
mov
dec
loop
loope
xlat
xchg
sahf
movsb
sub
aad
lods
sub
push
fimuls
dec
fsubl
sbb
mov
push
cmp
flds
mov
outsb
fimuls
jo
loop
ss
cmp
xchg
sub
and
mov
mov
mov
mov
sbb
scas
mov
xor
cmp
pop
jle
dec
jmp
pusha
js
mov
cmpsb
and
and
pop
mov
xor
cmp
out
cmp
pop
lea
mov
cld
push
ss
and
push
xlat
rcll
push
jmp
pop
aas
pop
aad
loope
and
jmp
mov
and
movb
fisubs
sahf
bound
push
add
add
scas
xor
movl
fcmovnb
and
sbb
inc
cmp
imul
shll
rcrb
adc
and
inc
sbb
into
cmp
mov
dec
xchg
cmp
daa
ljmp
mov
mov
cltd
jb
inc
sub
loopne
push
and
jge
mov
leave
cs
fwait
push
lea
push
xor
pop
shlb
dec
mov
jmp
or
repz
sub
mov
nop
dec
ret
mov
mov
aad
mov
jo
rcrb
jns
imul
dec
popa
scas
mov
dec
in
cld
sbb
fdivs
clc
xchg
aam
test
iret
push
in
sbbl
push
notl
mov
test
pop
sti
call
daa
rorb
jno
clc
subl
aad
lods
push
dec
ss
bound
inc
shr
mov
xchg
aas
jno
rorb
xchg
dec
adcl
fwait
xchg
test
or
cmp
addb
add
mov
pop
mov
ja
gs
iret
sbb
stc
cwtl
mov
ds
mov
cmp
pushl
push
fcomps
mov
mov
insl
inc
je
popa
push
stos
adc
outsl
push
ljmp
sub
push
in
mov
mov
mov
loopne
jl
rclb
lea
push
mov
test
sub
loope
adc
push
test
arpl
push
popf
or
mov
negb
fsubrp
push
stos
mov
arpl
xor
mov
add
cli
dec
test
int3
repz
cmp
sub
add
hlt
push
push
jne
jmp
iret
add
pop
mov
lret
sbbb
and
xchg
inc
inc
xchg
jecxz
and
pop
out
sbb
es
adc
rolb
inc
lahf
jo
mov
mov
xchg
or
out
cli
gs
daa
sbb
lcall
fucomip
mov
inc
jbe
inc
aaa
mov
cmp
popf
jle
addr16
incb
mov
inc
xor
or
ds
loope
in
sahf
jns
repz
push
bound
jl
cs
popa
lahf
das
push
lods
andb
pop
sbb
jmp
ljmp
push
sub
add
mov
cmp
les
rcrb
test
pusha
lret
sub
sti
jle
jbe
int3
mov
sar
int3
jg
add
outsl
data16
mov
adc
das
ficoms
adc
aaa
leave
jnp
push
or
mov
fwait
jmpw
jnp
cmp
sbb
aad
xchg
xlat
sbb
and
mov
pop
add
sahf
lcall
mov
push
dec
xchg
imul
std
push
mov
data16
mov
fwait
mov
es
clc
scas
scas
cs
shll
ret
leave
out
cwtl
rorb
outsl
push
cmp
jg
in
mov
cmpsb
enter
adc
roll
or
jmp
or
dec
dec
jp
inc
cli
popa
leave
jo
icebp
push
and
jmp
cmp
or
inc
pop
dec
stos
repz
in
dec
add
fistpl
push
dec
sub
stos
orl
test
dec
fwait
xor
imul
arpl
cmp
fcompl
enter
mov
rclb
push
sub
inc
addb
and
stc
es
push
js
jb
orb
lcall
cmp
pop
jbe
ror
test
or
or
daa
adc
push
out
cmp
lock
pop
inc
das
shll
push
inc
add
ljmp
pop
popf
dec
call
jecxz
adc
mov
cmp
push
ffree
or
call
loop
push
pop
mov
sub
in
imul
imul
xor
gs
repnz
aaa
dec
pop
cmp
fdivl
arpl
push
sub
add
scas
mov
or
dec
int3
in
addr16
xchg
pop
shrl
cmpsb
xor
cwtl
stc
lods
jl
pop
pop
fs
jns
into
add
sar
test
adc
push
adc
sub
movsl
mov
ss
mov
inc
dec
rcr
sub
sti
lret
jecxz
daa
adc
and
test
neg
pop
enter
and
push
movsl
jae
mov
mov
jns
sub
add
repnz
sub
lea
inc
mov
push
add
xchg
arpl
and
mov
adc
sbb
inc
popf
pop
xchg
in
fadds
push
fiadds
ret
addr16
jp
repz
pop
les
mov
dec
inc
adc
or
daa
xchg
jne
xor
mov
ja
add
loop
lcall
in
pop
xchg
sub
push
sbb
xorb
pop
add
rcrb
inc
aas
icebp
inc
lock
cmpsl
ss
and
pop
loopne
in
leave
ret
into
adc
fisubrl
daa
pop
xlat
cmp
cltd
ss
aad
pop
iret
das
mov
or
cmp
lret
mov
cmp
sbb
mov
add
ss
xlat
jbe
das
pop
xchg
or
nop
inc
fsubr
pop
cld
test
lods
lock
pop
push
dec
pop
sub
cli
mov
adc
pop
mov
adc
int3
fs
inc
or
and
xchg
outsb
nop
push
xchg
mov
push
cmpsb
sar
pushl
cmc
nop
mov
in
xor
movsl
xchg
xor
rcll
addr16
cmpsb
out
mov
mov
test
xor
cmp
dec
mov
test
mov
aaa
sub
js
lock
add
ret
std
leave
or
fsts
jns
mov
inc
add
pop
xchg
or
out
add
in
outsl
fsubp
push
xor
inc
pusha
test
cli
xchg
cmp
cmp
push
outsl
xchg
xchg
inc
movsl
mov
xor
cltd
mov
fldl
xchg
hlt
test
adc
stos
pushf
jecxz
in
mov
adc
pop
mov
daa
ss
lods
adc
fld
jne
sub
and
xchg
mov
frstor
fadd
xchg
shll
lahf
imul
cli
push
scas
enter
push
jne
mov
xor
add
push
stos
add
es
sub
dec
push
xchg
sub
test
and
xchg
cmp
fs
nop
pop
loopne
sbb
dec
fcompl
sarb
dec
mov
xchg
dec
movsb
mov
sub
or
and
cli
mov
imul
fisubrl
cltd
pop
cmp
xchg
adc
mov
mov
xchg
inc
mov
cmpl
scas
mov
mov
add
sub
std
std
xchg
loop
jl
test
test
lods
mov
add
inc
movsl
shll
xor
aam
scas
sbb
out
xchg
sub
rsm
dec
mov
inc
popa
jl
fs
mov
fs
lock
sahf
inc
lds
sbb
pop
xchg
clc
dec
mov
and
div
or
in
hlt
dec
mov
xchg
xchg
iret
push
js
js
sbb
mov
xor
inc
adc
mov
out
mov
stc
or
sbb
sub
ret
in
jnp
imul
faddp
add
lods
ret
cli
sti
add
push
dec
repz
loop
ret
btr
fldt
and
repnz
or
mov
outsl
ret
sbb
scas
dec
dec
test
stos
aas
add
call
mov
stos
daa
push
movsl
push
popf
ret
into
fisttpl
aaa
push
mov
fwait
lea
or
repnz
sub
push
jae
ss
mov
scas
dec
iret
push
sbb
inc
shll
int
lds
out
enter
cld
dec
mov
inc
ret
call
or
push
insb
ret
scas
mov
sarb
outsl
aam
sbb
or
jmp
dec
out
outsl
dec
negb
lcall
sub
shrl
repnz
pop
insl
sub
push
xchg
sarl
jnp
and
mov
inc
mov
sub
pop
pop
mul
dec
loop
mov
es
pop
sahf
xlat
add
push
mov
jmp
cmpsb
sub
das
test
push
repz
mov
cwtl
pop
xor
jb
xor
push
lds
push
pusha
add
sti
fisubs
pop
mov
inc
sub
daa
pushf
daa
sbbb
pop
sbb
jae
dec
out
cmp
inc
mov
lea
xor
cs
adc
mov
lcall
cld
jno
lret
arpl
cwtl
mov
sarb
inc
adc
adc
xchg
std
push
loope
jne
push
sahf
jg
push
pushf
jo
clc
sub
jmp
push
int
ljmp
sbb
inc
mov
dec
sbb
pop
adc
out
jno
fs
sbb
jne
pop
gs
pop
gs
mov
inc
inc
jne
cmpsb
add
mov
rolb
cmc
int3
aaa
nop
pop
sbb
pop
movsb
sub
mov
push
test
dec
adc
add
pop
shll
rclb
add
cli
fisttpl
arpl
int
repnz
sub
imul
int
push
pusha
fnsetpm(287
or
gs
outsb
iret
andl
sbb
mov
mov
std
adc
or
ja
jmp
xchg
test
lods
pop
jp
cmp
hlt
cwtl
dec
frstor
cmp
inc
fistpll
sbbb
hlt
paddd
stos
xor
popf
adc
xor
cmp
or
or
loope
mov
jbe
adc
addr16
and
cs
movsb
mov
dec
ret
mov
fidivrs
aad
cld
insl
pop
xor
mov
jp
jno
dec
stc
jo
mov
stc
cmp
dec
fistl
fisttps
scas
je
dec
pop
xchg
arpl
mov
dec
cmpsl
popa
icebp
push
mov
xor
cmpxchg
imul
mov
and
xorl
cmpsb
outsb
jmp
sti
stos
ficompl
jae
and
mov
insl
les
push
xorb
mov
insl
and
push
adc
movsl
dec
cmp
xor
cmpsb
insl
jnp
pop
sbb
xor
jle
in
gs
xor
or
stc
sbb
cmpb
fcomp
sbb
loop
mov
fs
pop
cmpsb
out
dec
mov
dec
movsl
inc
adc
inc
mov
enter
pushf
inc
mov
std
in
test
out
inc
aam
leave
repz
test
je
fwait
cwtl
flds
decb
or
inc
xchg
inc
out
inc
dec
sbb
inc
jmp
mov
mov
inc
sbb
repnz
dec
into
out
xchg
fnsave
adc
test
mov
xlat
sbb
adc
pushf
mov
cli
scas
outsb
xchg
call
xor
paddq
dec
pop
lea
jge
pushf
pop
fcoms
scas
movsl
push
fwait
icebp
push
std
popf
addr16
mov
out
cmpsb
sub
sbb
xchg
or
loop
scas
mov
insl
xor
es
mov
hlt
pop
mov
push
jb
jbe
pop
bound
dec
push
pop
mov
xor
hlt
xor
in
cltd
lods
push
push
and
jle
push
nop
ds
push
imul
test
jns
mov
mov
sti
rol
pop
sti
mov
xchg
sbb
shr
ret
and
movsl
pop
pusha
aas
rolb
and
das
idivl
inc
xchg
add
jno
sbb
rcll
sub
test
mov
sub
lock
adc
cmp
mov
mov
stos
sarl
aaa
xor
or
rclb
enter
test
mov
xor
add
loopne
push
or
or
mov
das
sub
mov
mov
outsl
xor
lock
push
mov
daa
rorl
jle,pn
mov
icebp
in
cmc
sbb
and
adc
xchg
shr
push
fisubrl
inc
insb
xchg
aam
jb
mov
lret
pop
loop
movsb
dec
cwtl
jbe
fistpl
out
aam
pusha
pop
mov
mov
bound
cmp
fdivrl
pushf
mov
call
or
dec
mov
xor
int3
movsl
dec
xor
aaa
mov
mov
xchg
and
pop
mov
xchg
or
aam
leave
gs
lahf
pop
popl
mov
cmpb
push
or
and
rolb
gs
lcall
sbb
xchg
sub
sub
out
jnp
jne
rcrl
stos
fstp
stos
out
pop
pop
sbbb
rcl
int
es
fstps
jb
push
cli
cltd
incl
cltd
repz
ja
and
pop
xor
mov
cld
subb
std
add
aaa
scas
popf
out
ficomps
lcall
fsubp
je
cmc
sti
sbb
imul
nop
repnz
movsb
imul
outsl
adc
aaa
sub
mov
or
scas
stc
push
popl
cmp
lds
cmpsb
sub
xor
inc
push
jle
ret
mov
mov
pushf
cmp
into
mov
adcl
negl
add
and
fiaddl
add
shll
mov
jecxz
and
lret
scas
stc
pop
push
xchg
lahf
ret
push
xorb
repnz
insl
and
int3
ds
cs
inc
push
stc
sbb
mov
jl
pusha
scas
test
xchg
mov
daa
push
out
imul
cmpsb
test
imul
lea
test
mov
es
adc
mov
pushf
inc
xor
inc
shll
push
xorl
add
push
int
xor
int3
inc
jmp
fbld
dec
hlt
jmp
repz
sbb
add
pop
out
jmp
mul
dec
mov
cltd
aas
cltd
dec
nop
je
sti
mov
or
sbbl
incl
pushf
stos
aam
dec
cmpl
or
sub
loop
pop
mov
jle
xor
mov
lahf
stos
pop
xor
insb
add
sbb
mov
mov
push
sbb
cli
xlat
fiadds
push
mov
xchg
jmp
cld
sbb
rcr
imul
ficompl
arpl
inc
xor
clc
mov
and
out
xor
sti
shll
leave
fldt
mov
fwait
cmp
lods
pop
ss
mov
push
pop
imul
inc
jle
xchg
xor
repnz
inc
cs
pop
lahf
insb
xor
push
iret
addr16
lahf
addl
mov
decb
mov
out
lea
sbb
xor
out
xorb
adc
sti
cmp
js
shrb
loope
aad
or
dec
insb
jae
dec
jno
fcomi
add
fstps
rol
mov
mov
fmul
fadds
mov
cli
idivl
outsl
mov
xchg
push
pushf
sbb
clc
cmp
dec
mov
mov
mov
dec
stos
test
fdiv
mov
ret
push
ror
mov
pop
mov
jno
ja
sarl
cmpsl
call
push
shrb
cmpl
cs
pop
ret
push
xor
cld
xor
dec
stos
mov
fisubl
mov
loopne
pop
call
xor
push
sbb
adc
jns
add
xchg
fcompl
push
or
out
cld
cmp
shll
inc
rol
std
pop
test
loopne
mov
jns
jno
enter
ret
adc
pop
popf
lea
mov
lods
sub
push
in
or
cmp
push
stos
lahf
lcall
negl
outsb
lods
jne
cs
scas
arpl
mov
nop
dec
out
sbb
dec
jecxz
movsl
mov
pop
ret
cmp
pmaxub
cmp
cmp
mov
xchg
das
adc
push
insl
or
iret
mov
mov
lret
sbb
lahf
and
xchg
inc
sbb
mov
repz
sub
mov
mov
out
dec
daa
out
ljmp
prefetch
or
idivl
bound
fnstsw
cmp
mov
mov
insl
cmpsb
pop
shlb
daa
je
push
cwtl
lcall
lcall
insl
and
sub
icebp
fsubs
jns
pop
mov
lds
test
sub
incl
stos
sbb
ret
push
push
mov
sarl
sbb
inc
cwtl
scas
push
mov
cmpl
sar
sbb
mov
fiaddl
mov
or
xlat
pop
popa
ret
rcrl
push
xchg
mov
or
dec
jmp
cmp
jnp
ljmp
cmpsb
mov
fistpll
push
mov
adc
cmc
out
xchg
fcmovnb
xor
jno
lret
push
xor
jge
or
lret
sub
ds
xchg
sbb
xchg
push
in
xchg
xchg
xchg
outsl
fdivrl
cs
add
adc
cmpsl
jne
ret
xor
out
call
pop
je
xchg
andb
in
les
inc
mov
lret
aad
xchg
jne
or
sbbb
in
dec
call
cwtl
mov
movsl
imul
mov
mov
lret
les
cwtl
pusha
mov
nop
cmp
test
stos
or
das
sbb
adc
pop
mov
jg
icebp
xchg
popf
xchg
xor
mov
test
nop
js
xlat
mov
out
inc
out
add
inc
jmp
pop
rcrb
adcl
or
movsb
daa
repz
into
enter
add
add
cwtl
inc
aad
mov
fsts
xchg
sub
loop
xchg
sub
push
nop
push
or
jno
jne
adc
inc
xchg
pop
repz
mov
jo
js
lods
adc
mov
insl
or
cwtl
add
sub
rorl
aaa
push
dec
jecxz
std
stos
pop
sarb
jns
mov
movsb
sbb
adc
pushf
xchg
test
iret
mov
movsl
gs
push
es
stos
jecxz
out
aaa
fmuls
adc
test
xor
aad
int
xchg
cmpsl
mov
dec
daa
lcall
out
mull
fdivrs
inc
mov
sub
cmc
cwtl
sub
jne
push
fnstcw
or
sub
roll
jb
sub
imul
mov
fisubrl
std
dec
repz
add
push
lds
gs
adc
xchg
faddl
popa
fwait
loope
xor
fiaddl
rol
sub
mov
imul
daa
call
and
and
xchg
popa
call
add
jne
xlat
sar
inc
repnz
push
sub
iret
lahf
rep
cltd
pop
int3
mov
mov
lret
insb
incl
pop
and
mov
xor
data16
jae
push
dec
mov
sbb
sub
test
dec
sub
test
xchg
inc
cmp
shll
xor
movsl
in
mulb
jns
pusha
inc
rcrl
das
inc
lds
call
daa
mov
xor
pushf
jecxz
pushf
inc
mov
add
icebp
mov
std
fadds
ret
stc
cli
jmp
adc
add
jge
and
inc
adc
mov
mov
rorl
mov
sbb
fs
fs
jns
and
in
inc
inc
punpckhwd
sub
push
push
mov
icebp
cmpsb
popl
std
or
icebp
push
out
xor
inc
sub
pmaxsw
out
or
aaa
insb
scas
mov
icebp
pop
adc
sub
mov
enter
cmpb
sar
or
lods
xchg
xchg
jbe
rcrl
stc
push
inc
fidivrs
add
push
popf
pop
and
das
ficoml
rorl
adc
test
aam
in
es
lea
and
inc
rorl
daa
mov
adc
test
in
in
icebp
pop
sub
lock
into
int
sbb
xchg
push
jno
fstl
pop
test
je
and
mov
ja
not
push
mov
push
aam
jno
xor
ret
pushf
test
mov
or
cmpsb
lea
ret
pop
fbstp
xchg
ret
mov
pusha
test
repz
pop
pusha
jae
pop
xchg
aad
cld
push
add
jmp
xchg
fisttpll
stc
int3
inc
adc
lds
pop
hlt
or
mov
aam
pop
aaa
add
inc
mov
pop
add
ret
notb
pop
jns
leave
das
loopne
xchg
rclb
jecxz
outsl
push
aam
xchg
mov
xchg
xchg
test
mov
in
xchg
lods
mov
dec
add
js
mov
mov
sbb
adc
shll
inc
cltd
aad
mov
mov
mov
sti
push
jp
incb
stos
mov
movl
inc
jae
bound
dec
push
repnz
arpl
add
cmpsl
add
fs
mov
sti
push
xor
rorb
out
xor
inc
int
cmp
mov
cmp
dec
add
push
je
mov
add
into
idivb
iret
out
loop
popf
orl
in
sub
jnp
ds
xchg
xor
mov
rol
imul
imul
movsb
sub
cwtl
cltd
pop
sbb
pop
sub
xor
and
mov
push
testl
stc
gs
cmp
aas
sahf
icebp
add
test
lea
shrb
sub
ss
sub
inc
daa
jle
dec
cmp
lods
shlb
xor
mov
testb
in
xchg
fs
popa
dec
fsub
mov
pop
movsl
fidivs
bnd
jns
ffreep
icebp
lds
mov
inc
incb
mov
xchg
cmp
mov
fwait
out
aaa
inc
sub
sbb
movsl
add
in
cld
int3
push
clc
imul
xor
pusha
rcll
inc
mov
pop
and
pop
cmp
test
jo
mov
decb
mov
jne
sbb
divb
push
jp
mov
scas
mov
hlt
repnz
jge
fsubl
mov
mov
mov
popf
mov
leave
imul
scas
jb
pop
mov
ret
jecxz
add
push
pop
aas
cld
push
out
xchg
mov
pop
sahf
mov
pop
pop
jns
sarb
xchg
dec
ucomiss
fiadds
int
cmpsb
enter
mul
repz
arpl
in
loopne
aaa
clc
mov
sahf
add
sbb
int3
adc
pop
nop
inc
jp
mov
mov
push
sbb
mov
in
movsl
push
jnp
lea
push
imul
mov
add
push
mov
bound
cmpsl
sbb
pop
out
in
sbb
es
dec
cmp
stos
sbb
adcl
inc
sub
inc
push
ds
scas
cmp
sub
aaa
orb
lods
std
push
sbb
gs
popf
and
lock
or
ret
cmp
lahf
aad
movsl
mov
movsl
jg
adc
iret
fmuls
push
push
jp
sbb
dec
sub
cmp
cmpsl
dec
push
sub
adcl
shrl
sbb
in
jo
in
cmp
mov
mov
push
fisttpll
cwtl
aad
aam
stos
sub
ret
mov
inc
out
rcll
outsl
repz
dec
sbb
mov
add
cmp
test
xor
test
call
mov
mov
int3
jnp
inc
out
loop
push
sub
in
xor
pop
arpl
imul
jle
std
daa
sbb
xchg
adc
stc
or
cmp
test
pop
lds
jns
stc
push
push
sub
in
jnp
addb
push
cmpsl
loop
dec
mov
jnp
sbb
cmpb
dec
pop
cltd
sbb
idivb
stos
push
or
xchg
jns
mov
inc
sti
xchg
jns
call
notl
or
loop
outsl
and
jnp
xchg
adc
test
mov
aad
dec
arpl
jmp
mov
pushf
mov
ja
das
mov
in
lret
mov
mov
ficoml
pop
mov
push
or
mov
fdivl
nop
sub
imul
xor
xchg
add
std
popf
dec
imul
pop
sbb
pop
out
cmp
out
add
ja
shll
sub
mov
fsubrl
addr16
sbb
mov
xor
and
mov
and
xor
aas
mov
mov
fsub
bound
sbb
inc
and
xchg
out
jno
shrb
mov
adc
ret
xchg
push
jo
inc
in
push
sub
pop
dec
dec
mov
sbb
sub
xor
cmp
jne
xchg
and
or
fwait
mov
das
test
pop
movsb
and
push
shlb
pop
orb
xor
jmp
test
inc
mov
rcrl
cmp
push
pop
mov
int
cmp
test
dec
fdivs
mov
int3
insl
mov
sbb
jbe
out
mov
imul
add
fistl
xor
das
dec
loop
xchg
popw
mov
push
movsb
mov
inc
xchg
sbbl
adc
pop
mov
jp
fs
fwait
sbb
pusha
xchg
insb
ss
repnz
xor
aam
icebp
ret
test
ds
mov
int
std
xchg
lahf
mov
push
imul
out
test
dec
dec
cmpsb
adc
sub
inc
int
xorl
gs
inc
mov
adc
pop
negl
cmpsb
dec
lods
movsb
jb
filds
mov
add
dec
fistps
std
inc
xchg
jnp
pop
mov
xchg
bound
xchg
hlt
stos
notb
xor
hlt
cmpsb
cmpsl
mov
xchg
dec
lahf
dec
loop
leave
inc
cmp
add
loope
sbb
add
popa
dec
jecxz
push
cltd
cmp
in
xchg
cmp
sbb
pop
sbbl
dec
inc
and
sub
or
outsl
out
dec
cli
and
das
adc
testl
int3
pop
aas
pop
scas
and
jbe
or
mov
sbb
iret
aas
lfs
mov
in
jne
push
sub
outsl
push
sub
xchg
jle
in
shlb
cmpsb
ret
int3
lret
jp
lods
scas
sub
sub
insb
and
sbb
daa
int3
fs
cmp
ret
push
add
enter
fsubrs
jp
rol
or
mov
notl
notl
mov
aam
test
aas
frstor
push
cld
out
cltd
lds
dec
out
into
movsl
and
insl
mov
scas
mov
fwait
ret
add
push
inc
xor
lcall
daa
out
hlt
std
stc
popa
ss
cld
push
cmpsl
dec
cmp
shlb
pop
xorl
push
sbb
in
in
xor
call
xchg
push
add
loop
cmp
repz
push
sub
mov
nop
or
daa
rcrb
movsl
push
call
xchg
or
pushf
daa
mov
and
pop
jle
into
jp
int3
out
xor
push
mov
lea
sbb
or
jp
pop
and
mov
flds
inc
test
repz
sbb
add
push
mov
pusha
out
fsubrs
jmp
cmp
cmc
call
sbb
int
push
jae
cwtl
stc
sbb
outsl
insb
imul
add
es
jecxz
jbe
movsb
pop
mov
or
out
mov
dec
in
jl
push
push
jns
jbe
imul
loope
sbb
pop
mov
dec
into
mov
inc
std
lret
mov
popa
addr16
sub
or
push
in
mov
in
mov
fistl
push
popa
xor
xor
in
cmp
je
mov
mov
addr16
mov
push
xor
shlb
ret
mov
movsl
mov
js
mov
xorb
orl
sbb
imul
cld
inc
stos
and
lds
es
mov
jns
push
jl
bound
arpl
xorl
stos
inc
js
scas
in
sbb
sahf
lock
adc
pop
sub
add
sub
adc
je
int
mov
or
je
sbb
adc
xchg
sbb
sarl
adc
cmp
sbb
loopne
cli
testb
test
out
testl
and
push
gs
or
into
ret
rcll
or
xorl
push
scas
or
lahf
addr16
xor
lret
lea
pusha
pushl
dec
loop
cld
cli
xor
adc
cmp
mov
in
bound
xchg
div
in
inc
leave
or
jae
movl
lcall
push
mov
jmp
jge
aas
and
push
dec
das
mov
enter
jl
push
xchg
push
cmp
xor
shr
rdpmc
hlt
into
add
jo
idivb
sbb
push
pop
lock
sbb
lcall
cwtl
adcb
sbb
inc
mov
movsb
jb
cmp
dec
xor
hlt
xchg
daa
xor
jge
jl
jb
push
sub
aaa
movsb
ret
mov
sub
dec
xchg
fs
icebp
pop
xor
je
jnp
adc
ss
pop
pushf
test
dec
add
data16
sti
sub
ret
sbb
mov
notb
push
out
cmpsl
xchg
out
sarb
pop
push
dec
roll
iret
out
mov
mov
sub
gs
sbb
outsb
mulb
rolb
sbb
push
push
adc
mul
xchg
push
xor
fbstp
push
out
push
push
push
and
shrl
ljmp
divl
call
pop
dec
or
sbb
pop
jp
cmpsl
test
cmp
pop
jno
or
mov
daa
sti
xorl
scas
hlt
fs
push
jl
xor
enter
fwait
mov
add
in
mov
pmaddwd
pusha
lret
nop
jae
sahf
push
xchg
ljmp
mov
sbb
dec
jle
jnp
lcall
test
xchg
sbb
rcrl
push
adcl
in
pop
sbb
xchg
cld
or
mov
push
inc
lahf
fldl
imul
and
push
ja
gs
xchg
andb
push
scas
pop
nop
int
push
cltd
dec
outsl
and
mov
shufps
pushf
sub
mov
stos
lods
clc
push
repz
pop
dec
sbb
loope
ds
movsl
dec
cli
out
fnsave
or
mov
shlb
call
push
fmull
sti
rorb
scas
cmpsb
mov
call
xchg
or
lret
sbb
cltd
dec
sub
mov
divb
xchg
jg
or
cmp
adc
cmc
pushf
popf
arpl
imul
mov
mov
addr16
push
xor
pop
dec
dec
add
sub
xlat
jbe
lods
sti
imul
cmpsl
in
sub
das
or
fstpl
fiadds
mov
pop
and
adc
popa
aas
dec
or
push
shr
xor
insl
jnp
cli
xchg
dec
addr16
into
mov
jno
scas
mov
mov
mov
cltd
mov
mov
xlat
lret
pop
cmp
xlat
outsb
lret
jmp
stos
test
scas
dec
xor
loope
jb
push
movsl
cmp
nop
ss
push
je
jmp
cmc
jmp
jecxz
stos
test
mov
in
push
jmp
pop
fldcw
adc
call
out
or
sti
mov
xlat
pop
and
iretw
mov
push
shl
push
cld
popf
aad
fisubrl
adc
adc
mov
inc
sub
xor
or
push
addr16
ja
and
pusha
aam
cmp
aam
push
jp
cmc
inc
dec
popa
testb
pop
sbb
dec
es
scas
mov
clc
jo
mov
popf
lret
arpl
sub
int
loopne
mov
cld
mov
pop
and
in
cwtl
test
adc
pop
push
out
fists
je
pop
fbld
sub
xchg
rcrl
add
fisubs
mov
pop
add
leave
cmp
imul
in
jp
inc
cmp
bound
cld
lahf
dec
sub
jo
inc
sbb
clc
out
push
sub
dec
jnp
into
or
ja
push
or
cmp
jno
mov
jle
pop
mov
ljmp
rclb
faddp
cmp
cmp
pop
push
sahf
push
imul
nop
aas
jge
sbb
mov
xchg
fs
xchg
clc
out
sbb
push
jecxz
jle
ja
dec
mov
add
fs
push
negl
inc
sti
je
pusha
sbb
add
inc
jmp
movsl
push
jp
mov
mov
and
movsb
ds
add
mulb
ret
sbb
movsl
xor
sbb
cltd
out
rclb
xchg
fbld
and
dec
xor
pop
in
in
dec
cwtl
or
cld
sbb
mov
data16
mov
inc
les
cmc
lahf
or
dec
pusha
icebp
add
or
inc
and
xchg
loope
mov
sbb
cmp
dec
ret
or
pop
sti
xchg
sbb
jg
push
mov
push
cmpsb
mov
out
fistps
mov
dec
xchg
arpl
and
adc
add
mov
sbb
cli
mov
or
mov
dec
sti
push
enter
es
xor
xor
push
imul
sub
mull
js
add
js
imul
ds
or
cmp
or
sahf
inc
jmp
xor
cmp
mov
add
cmpsb
ss
jbe
mov
in
mul
pop
arpl
inc
adc
das
dec
mov
into
jo
rorl
xchg
daa
lods
push
shr
dec
dec
aaa
mov
insl
xor
outsl
popa
push
xchg
lods
in
mov
add
loope
repnz
inc
into
mov
fmull
inc
mov
adc
fyl2xp1
aam
mov
add
insb
cmpsb
jns
pop
or
mov
data16
sbb
lret
je
loope
inc
stos
notb
jmp
das
add
notb
inc
popa
push
test
lret
xorb
repz
sbbb
and
fs
xchg
dec
in
loopne
inc
nop
xchg
xor
mov
insl
int3
aas
sar
cmp
test
test
sub
xor
sbb
mov
sub
cs
mov
insb
xor
hlt
rclb
loope
dec
jo
xor
pushf
and
and
shll
out
mov
pop
in
jp
adc
xor
aaa
sub
jns
push
mov
daa
pop
jno
call
rcrb
inc
hlt
dec
add
fwait
jmp
cmp
pop
jecxz
aad
add
push
sbb
or
je
out
shrb
jnp
or
mov
scas
mov
ss
dec
nop
pop
adc
stos
scas
pop
lea
sbb
adc
cmc
daa
in
out
aam
jg
jo
inc
jecxz
loopne
loop
mov
xchg
xlat
cwtl
outsb
jl
iret
jno
or
and
mov
das
loop
inc
pop
add
inc
push
test
insl
or
lret
dec
lods
jle
fcmovnu
or
sbb
out
outsb
mov
xor
mov
lds
test
mov
push
jmp
xor
pop
sbb
xor
push
push
mov
clc
popa
fldcw
ret
ja
cmp
cmc
mov
out
les
inc
push
xchg
rcrb
fnstsw
add
mov
adc
cmpsb
jge
push
fsubrl
repz
test
or
xchg
and
push
call
sub
insl
add
insl
pop
mov
sahf
js
mov
lahf
movsb
push
gs
les
push
cmp
sub
lods
mov
stc
inc
jp
das
sbb
call
cmp
sahf
outsb
movnti
les
add
add
cmpsl
fisubs
xor
loop
cmp
scas
cmpl
cmp
hlt
aas
mov
fmuls
jnp
lret
mov
pop
cmp
inc
xchg
sub
mov
fwait
mov
pop
pop
repnz
jmp
jae
mov
dec
mov
cwtl
iret
addb
fldl
sub
and
shlb
es
loop
arpl
ja
das
testl
mov
andb
pop
xchg
cmp
stos
pushf
ja
jmp
xchg
int3
fadds
and
and
jae
gs
jno
dec
ret
mov
jl
mov
inc
fwait
in
mov
shll
sub
daa
data16
mov
lcall
mov
dec
mov
dec
sub
sbb
pop
cmpsl
sub
pusha
inc
inc
jmp
sub
and
shrb
out
add
test
jge
add
clc
sub
push
push
jge
adcl
call
pop
push
lahf
xchg
rcll
mov
or
aam
add
sub
pop
mov
mov
test
sub
dec
add
mov
sahf
scas
mov
inc
mov
adc
aas
add
and
inc
or
insl
out
cli
lcall
in
jge
adc
pop
sahf
adcl
xchg
inc
and
jl
test
sahf
inc
jnp
inc
pop
in
pop
xchg
fstl
dec
fld
movl
pop
test
lock
jmp
loope
cmp
mov
pop
dec
sub
adc
dec
jbe
je
cmp
loop
ficompl
test
push
fcompl
pop
mov
sti
add
aas
out
dec
add
push
cs
cmp
inc
inc
out
mov
mov
adc
add
stos
popa
sbbl
add
xchg
rorl
mov
popl
and
and
cmp
and
xor
pop
cli
sub
adc
mov
jge
out
pushf
adc
loopne
and
test
jns
or
test
adc
aad
and
addr16
mov
insl
pusha
daa
xchg
dec
inc
xchg
xchg
sahf
adc
pop
mov
iret
lret
add
call
int3
test
lgs
mov
es
fldt
sahf
lahf
fidivrs
and
insl
nop
cmpsb
dec
in
lea
rcl
scas
pop
mov
stc
clc
enter
xchg
pop
xchg
add
pop
or
pop
mov
dec
or
flds
mov
int3
jb
mov
or
and
xor
lahf
jae
pushf
cmpsl
popf
ficoms
in
stc
jnp
mov
sbb
je
std
andb
hlt
mov
push
in
int
mov
sub
mov
cmpsl
push
js
imul
mov
loope
ja
add
ss
dec
mov
mov
fs
mov
inc
in
sbbl
mov
mov
push
pop
xchg
mov
push
mov
sbb
and
ja
daa
xchg
call
cld
ds
in
push
cmpl
jl
imul
adc
jmp
imul
pop
xor
and
fsub
std
lea
fsubl
xor
push
sbb
mov
loopne
mov
cmp
or
std
xchg
pushf
adc
sub
pop
mov
loopne
jge
inc
cmp
nop
int3
add
push
dec
js
jb
push
jecxz
pop
pop
sahf
lods
int
rorl
fscale
dec
fiadds
jb
pop
lods
jbe
popf
dec
roll
inc
aad
pop
sub
mov
pop
fsubl
xchg
rep
bound
push
xchg
clc
dec
mov
pop
and
inc
js
flds
ret
negb
idivb
cltd
push
sarb
cltd
loopne
fdivrl
push
push
les
jle
rcll
fbstp
pop
xchg
mov
rcl
inc
jno
inc
lds
mov
into
add
in
add
and
and
inc
pop
adc
mov
stos
sahf
inc
sarl
stos
icebp
dec
inc
jb
test
out
ret
rolb
mov
cli
test
lahf
lcall
and
or
xorb
jo
ret
fwait
loope
lret
xchg
jecxz
add
jns
in
mov
shlb
xchg
pop
mov
inc
mov
cltd
in
mov
cltd
aaa
lods
movb
lret
cmp
cmc
stos
mov
fsin
aaa
and
push
pop
dec
insl
ds
pushf
movsw
pop
pop
je
movsl
push
mov
shrl
pop
test
pusha
or
cld
cs
dec
xor
sahf
jae
lcall
rolb
sub
mov
sti
cwtl
xchg
lods
cs
jae
shrb
push
stos
or
jo
cld
mov
imul
insl
test
repnz
cmp
fcmovnu
fsts
fscale
rcrl
pusha
jecxz
mov
out
popf
test
inc
xchg
das
in
mov
aas
dec
outsl
pop
pop
cmpsl
xchg
and
nop
and
fdivl
sub
xlat
sarl
and
lcall
sbb
ret
in
mov
inc
inc
sub
cmp
in
int
jmp
jg
repnz
rcrb
imul
xchg
insb
cltd
stos
das
lea
or
cmpsb
mov
pop
cmp
push
jno
popa
push
jbe
out
les
mov
ja
fbstp
sbb
dec
inc
or
les
cld
jp
cmpsb
push
repz
aaa
rcrb
lds
cmp
test
sub
xor
xchg
repnz
fadds
cmp
je
inc
pop
or
and
push
stos
jae
mov
scas
hlt
sbb
setge
fbstp
mov
xor
test
test
xor
pmaxsw
outsl
xchg
inc
arpl
sbb
cltd
cltd
cli
xchg
sub
and
lds
rolb
ljmp
sub
pop
push
repz
inc
mov
sub
xlat
mov
es
pop
mov
mov
data16
jne
mov
push
push
aaa
int3
rolb
in
and
or
mov
sbb
xor
inc
xchg
jo
mov
in
fwait
mov
jo
mov
mov
and
ss
jne
test
jmp
imul
and
and
cwtl
insl
insb
or
pop
push
std
or
jp
cli
imulb
pop
xchg
outsl
mov
mov
adc
lcall
xchg
inc
jmp
out
inc
mov
and
ret
je
and
cmpxchg
jae
mov
jb
jg
inc
add
sahf
addr16
test
dec
mov
lahf
into
jnp
jle
lcall
xor
inc
lea
sub
cmpsl
jge
mov
arpl
dec
shrl
insb
pminub
inc
sbb
push
and
ja
mulb
pop
out
jecxz
adc
xchg
inc
mov
cmp
and
test
jl
pop
pop
pop
push
and
push
arpl
push
jmp
repnz
mov
pop
mov
mov
fucomip
xor
mov
sub
cli
dec
push
adc
jmp
xor
lock
xchg
push
stos
mov
jns
repnz
jnp
pop
pop
lods
pusha
shll
push
lcall
xlat
or
js
ljmp
lret
push
cld
sbb
and
test
add
addr16
ss
and
gs
xorl
filds
inc
out
ret
inc
dec
or
mov
out
cli
xchg
mov
mov
adc
push
mov
out
in
fs
xchg
sbb
xor
lret
or
cli
dec
into
lret
adc
mov
and
icebp
sub
fisttps
call
dec
cmpsl
or
stos
movsb
out
mov
rorl
mov
sar
hlt
jns
lcall
cmpsb
add
or
imul
sub
inc
mov
enter
mov
imul
xor
fucomip
jne
and
in
sub
push
xchg
mull
mov
repnz
js
in
in
xchg
sti
cmp
insl
lds
add
mov
stos
lahf
out
add
and
ds
loop
jge
push
decl
pmaxub
or
data16
sar
fistpll
jecxz
lds
mov
lahf
shlb
mov
ss
repz
ja
out
pop
out
xor
inc
mov
add
xor
rorl
jne
xor
test
addl
movsl
es
dec
gs
arpl
hlt
lret
sub
jae
scas
jmp
sub
mov
or
jns
mov
popw
add
xchg
out
add
cmp
js
mov
ja
popa
dec
cbtw
inc
enter
dec
mov
or
push
lcall
jns
movsb
dec
imul
mov
subb
aas
aas
pushf
jae
and
arpl
or
xor
xor
xor
sbb
lea
vaddsubpd
test
dec
enter
jno
push
jp
push
aad
or
ljmp
jle
xlat
pop
cli
push
or
xchg
lret
insl
sbb
adc
jg
test
pop
xor
jae
out
mov
inc
fadds
lahf
jle
mov
nop
sbb
outsl
jg
mov
mov
bound
pop
pushf
scas
mov
ja
jmp
push
das
jns
dec
aad
andl
mov
sbb
mov
sub
frstor
call
mov
lea
push
add
flds
out
mov
pop
inc
mov
imul
mov
add
xchg
cmpsb
cmp
cmp
aaa
pop
fisttpll
es
fisubl
mov
out
ss
push
push
sub
push
mov
add
ss
add
ret
jge
sub
or
nop
add
fs
bound
test
popf
xchg
or
movsl
gs
stos
ret
dec
mov
sbb
aam
scas
lea
subb
mov
decl
xchg
jb
jmp
jl
jns
inc
pop
xchg
xlat
sbb
push
cmp
mov
mov
fiadds
cs
dec
cmp
loopne
setp
push
enter
push
js
sub
loope
jbe
mov
int
sub
imul
xor
sub
sti
lods
sbb
pop
cmp
bound
adc
push
sub
mov
mov
pop
sub
addr16
push
das
sub
shl
xor
mov
add
jge
in
out
add
hlt
or
aaa
sub
mov
clc
mov
sbb
ljmp
push
sti
push
pop
mov
or
sbb
or
dec
insb
lock
movsl
dec
mov
rcll
adc
adc
jo
pop
js
shl
xchg
add
push
pop
imul
jecxz
and
sahf
mov
mov
popa
shlb
or
mov
push
repnz
pop
add
cmp
sub
cmpsb
pop
out
scas
fwait
jge
js
and
dec
movsb
fs
mov
sub
out
mov
fnstcw
jg
ss
mov
mov
test
nop
arpl
xchg
lret
pop
cmp
or
iret
cmp
scas
jp
xorl
jg
xchg
lods
testb
aas
jo
add
and
adc
sbb
mov
ret
xchg
xchg
sbb
cmpsl
adc
clc
fucomp
xchg
int3
aas
pusha
push
mov
mov
cmp
cmp
mov
out
aad
dec
popf
xor
sub
in
cmpsl
cmp
jne
stos
pop
and
jns
xchg
mov
mov
sbb
pop
mov
xor
icebp
sub
stc
movsl
popf
mov
lahf
shrb
daa
dec
cmp
sbb
cmpsb
fists
push
add
sbb
dec
xlat
enter
loop
pop
addr16
jbe
adc
lret
dec
loope
insl
push
and
jne
sbb
fimuls
sbb
xor
add
in
bound
enter
nop
xor
aad
mov
cli
fadds
jbe
les
xchg
and
nop
loopne
or
je
outsb
xor
ret
pushf
sub
imul
pop
popa
mov
push
or
mov
dec
or
shrb
and
cmp
sub
ret
repz
test
or
lea
cmp
add
in
imul
fstpl
jb
popa
mov
ficoml
mov
jmp
xchg
push
or
outsl
aas
loope
xor
je
cld
xchg
daa
push
or
xor
ja
shlb
fidivs
pop
xchg
adcl
scas
push
lods
ret
jge
mov
push
daa
xchg
sbb
test
je
cmpsb
jg
and
jmp
arpl
or
pop
cli
dec
shlb
lcall
loope
dec
les
jge
jbe
xlat
lahf
filds
bound
les
mov
dec
cmp
into
adc
test
stos
fnstsw
fcoms
sahf
aam
movsb
lret
sub
mov
scas
lcall
add
in
mov
inc
inc
cwtl
sbb
mov
mov
or
sbb
mov
lods
lods
adcb
test
push
out
std
mov
mov
mov
hlt
scas
hlt
mov
adc
int3
pop
insl
mov
inc
test
popa
xor
lcall
cmp
jne
lods
jge
repnz
cmp
movsl
pop
lods
dec
fs
pop
stos
mov
lock
xchg
or
inc
jnp
and
rcrb
jno
xchg
and
adc
repz
fmuls
sahf
nop
gs
xchg
mov
adc
ss
and
aam
jne
movsl
stos
int3
aam
fists
sbb
das
jecxz
pop
imul
sub
dec
outsl
jge
xchg
dec
ret
cmpsl
push
cltd
pop
dec
xchg
pusha
push
xchg
cmp
or
shr
push
add
push
jnp
js
mov
testb
mov
mov
in
mov
test
int3
cs
rclb
jge
jae
xchg
jmp
psubusw
or
sar
sbb
xchg
xlat
pop
fcompl
dec
xor
jne
pop
pop
mov
mov
jno
xchg
adc
xchg
dec
xchg
jno
cli
mov
popa
clc
js
stc
xlat
pop
sbb
inc
shlb
push
mov
insb
rorl
loopne
inc
xchg
dec
mov
inc
dec
insb
aad
dec
ss
jg
cmp
add
xchg
add
dec
sbb
mov
cwtl
push
dec
inc
call
jo
imul
and
xor
pop
inc
mov
fcmovnu
arpl
mov
idiv
sbb
jb
out
idivl
mov
pop
push
jne
cmp
cli
jae
jno
inc
arpl
and
dec
push
frstor
pop
pushf
cld
outsl
pop
cmpsb
xchg
xchg
pop
fisubrl
loope
sbb
ret
adc
inc
push
loope
mov
leave
mov
imul
pop
push
mov
sti
push
push
call
lcall
lods
mov
js
cmpsl
xor
dec
mov
ret
lods
aas
add
mov
outsb
aad
ljmp
adc
pop
push
add
pop
movsb
stos
xchg
int
and
aam
or
sbb
mov
xchg
pop
xchg
and
pop
out
inc
and
mov
shll
jnp
test
ret
sbb
pop
push
fsubrl
out
and
jle
and
divl
push
lret
dec
jmp
dec
add
out
jmp
dec
and
shlb
daa
dec
repz
aam
es
cmp
mov
cmpl
mov
notl
xlat
cmpsb
inc
lret
testb
fs
sub
pop
jbe
bound
xchg
je
xchg
jmp
rclb
les
jl
adc
mov
jle
push
loope
imul
mov
mov
xchg
mov
pop
mov
leave
sbb
out
dec
fsubp
and
fs
mov
lret
out
push
inc
inc
clc
pop
xor
and
mov
push
xor
out
mov
lret
mov
xor
add
sub
insl
push
push
sahf
into
xadd
or
call
xchg
sbb
push
outsb
dec
in
cli
pop
orb
cmc
lods
jg
mov
xchg
or
mov
xor
push
jl
rorl
or
repnz
mov
push
inc
mov
xor
ficomps
push
in
std
jb
in
stc
imul
lahf
popa
ret
test
fistpll
mov
adc
jg
or
into
adc
gs
rolb
sub
fmull
or
pop
mov
cltd
imul
cmpsl
push
dec
mov
int
dec
pop
dec
sbb
jbe
mov
adc
dec
fists
fbld
mov
cmc
test
adc
outsl
sarl
jge
pop
fildl
jmp
add
dec
test
inc
inc
and
bnd
pop
movl
call
add
iret
or
aad
cs
inc
sub
mov
shrb
sbb
xchg
mov
daa
dec
aam
mov
mov
xor
xor
popa
ja
in
cmp
mov
jo
adc
push
cmpl
cmp
idivb
jmp
mov
sbb
shll
out
mov
jns
aam
in
cltd
add
mov
adc
fs
pop
daa
cmp
or
jmp
jnp
jbe
push
push
xor
loopne
xchg
mov
jl
aaa
aad
mov
jl
fcompl
ret
addr16
jl
push
jecxz
cmc
mov
ljmp
cli
shrl
push
lret
inc
mov
imul
or
pop
mov
adc
mov
push
and
imul
in
and
xor
adc
out
jecxz
imul
jae
or
adc
das
xor
daa
ljmp
roll
xchg
xor
pop
sub
inc
ret
dec
stos
ret
dec
mov
mov
fdivl
cmc
pop
addr16
sbb
add
jg
xor
aas
arpl
pop
xchg
or
adc
das
add
call
aas
mov
fwait
test
mov
ret
and
push
ja
mov
mov
test
push
mull
loope
mov
xchg
dec
ss
cmpsb
inc
push
dec
test
fnstcw
cmp
pop
es
aad
in
jne
mov
into
scas
mov
push
pop
and
pop
icebp
in
sbb
pushf
loope
cmp
and
fwait
les
sub
outsb
lods
inc
dec
mov
push
jle
lods
add
xor
mov
xchg
out
out
adc
push
lds
sahf
mov
loop
mov
xchg
lret
loop
sahf
sub
pop
mov
std
dec
cld
and
loope
jmp
cmp
pop
inc
add
sbbl
fldl
shr
xor
pop
xchg
fimuls
jne
jmp
xchg
es
testl
or
hlt
jno
fwait
jne
sub
cmp
jge
push
lock
cld
sub
mov
inc
mov
nop
sbb
push
mov
out
popf
lcall
or
dec
js
jns
cmp
mov
outsl
xor
jbe
add
aad
insl
test
jae
inc
sub
jecxz
daa
mov
sahf
dec
ds
cmpsb
mov
cli
popa
test
ret
dec
adc
jmp
adc
fidivs
push
cld
jae
add
xor
insl
jg
dec
jne
xchg
push
dec
movsl
jge
cmp
mov
movsl
adc
push
adc
pop
lret
xor
xchg
in
and
adc
fdivp
cld
add
push
int
fmuls
jmp
ds
je
movsb
ljmp
xor
in
daa
inc
adc
pop
jbe
xchg
push
inc
xor
sub
fs
mov
pop
jo
sub
adc
push
dec
jmp
jle
test
into
fisubs
hlt
pop
negl
jmp
push
push
outsl
insb
inc
insb
jo
lcall
cwtl
fbstp
insl
add
sbb
fdivrp
dec
addb
popa
xchg
mov
imul
shrb
loopne
push
mov
aas
clc
mov
scas
jge
fcmovnbe
jnp
mov
push
or
andl
cmc
in
addr16
adc
lods
cmp
ljmp
mov
test
in
addb
adc
pop
pop
add
jno
out
lock
cs
jl
test
fwait
daa
test
jb
mov
test
jae
hlt
cs
mov
das
push
faddl
sub
ds
lock
je
or
into
stos
fiadds
mov
fs
shlb
loope
lea
sti
lahf
stos
jno
fnstcw
cmp
stos
out
aad
gs
ljmp
mov
inc
ljmp
daa
inc
inc
mov
push
pushf
in
sbb
sub
ret
mov
adc
rcr
sbb
pop
pop
mov
addb
adc
add
in
mov
clc
push
les
pop
pop
adcl
imul
dec
xchg
adc
jo
fimuls
ljmp
int
cmp
sbb
sbb
leave
cs
jbe
mov
inc
insb
push
jae
mov
mov
adc
xchg
jge
pop
into
push
xor
call
fimull
popf
jo
faddp
push
fs
ret
pop
out
andb
stos
jno
jle
and
mov
sub
mov
stos
inc
push
pop
pushf
adc
fildll
mov
pop
dec
cmp
or
mov
aaa
fisttpl
sbb
into
icebp
jb
es
lret
add
cmp
mov
and
das
adc
inc
arpl
daa
ret
lea
push
push
dec
push
jo
sbb
insb
gs
mov
mov
xlat
mov
add
ror
xchg
int3
or
daa
das
mov
outsb
inc
mov
jne
push
push
std
add
and
ja
or
lods
cli
out
jg
testb
int
int
mov
dec
jmp
popl
push
mov
ja
jo
inc
dec
mov
mov
xchg
imul
mov
shr
fisttpll
outsl
stc
inc
or
add
bound
sub
adc
stos
imul
cmpsb
xor
xlat
ja
lds
sub
lds
loope
inc
mov
out
pop
fwait
shlb
xchg
xchg
or
or
test
aad
or
data16
lock
insl
jg
nop
mov
in
fadds
jp
mov
ja
in
sti
xchg
shrl
and
int3
cmp
inc
sahf
iret
not
fldt
xor
pusha
mov
or
add
test
out
lret
cli
cmp
mov
jo
repnz
pop
push
pop
inc
icebp
jne
push
addl
gs
lea
sbb
xchg
add
test
arpl
mov
add
test
xchg
into
push
mov
or
ja
dec
add
and
repnz
cmp
xchg
movsb
cmpsl
clc
int
xor
ljmp
sub
cmc
icebp
cmp
pop
pop
or
push
mov
hlt
imul
mov
xchg
sub
lock
and
out
fdivs
jo
jo
jge
repnz
pushf
dec
lret
outsb
out
mov
cmp
push
imul
pop
rorl
cmp
imul
jo
jae
out
mov
pop
jge
dec
push
ret
cmpsb
jbe
lods
pop
loope
into
xor
xchg
lcall
out
adc
xor
arpl
fs
inc
mov
sbb
dec
sub
outsl
leave
xorl
sbb
adc
std
scas
push
and
ret
pop
mov
jns
push
dec
mov
or
xchg
push
scas
adc
outsl
fisttpl
bound
push
dec
mov
xchg
hlt
daa
test
cltd
rclb
jge
popa
lods
push
and
outsl
inc
mov
jecxz
data16
pop
out
in
adc
mov
stos
out
ja
mov
int3
sbb
adc
pop
fdivs
cmpsb
mov
push
sbb
xlat
mov
adc
sti
mov
scas
pop
mov
mov
cmc
xchg
push
andl
jmp
dec
sub
ja
dec
icebp
hlt
adc
sbb
ss
fmull
sbb
push
xor
inc
incb
loope
sub
push
pop
mov
cmp
jae
cmpsb
pusha
stos
mov
outsb
xor
popf
mov
cld
and
lahf
movsl
call
add
add
sahf
loope
mov
imul
adc
pop
imul
push
pop
adc
ficoml
fldt
div
call
jbe
dec
cmp
xor
mov
inc
cld
xchg
mov
cmp
loope
xorb
push
mov
ret
in
imul
mov
rorl
lods
xor
and
repnz
jne
aas
out
leave
fwait
addl
sahf
aas
pop
fdivs
imul
out
int
pop
jecxz
xchg
stos
and
ljmp
rcl
adc
bswap
iret
addr16
jmp
aas
aam
lea
pop
lods
mov
xchg
pop
ret
inc
cltd
inc
fistl
xchg
jae
ljmp
pop
fldenv
dec
test
jno
xchg
scas
jns
lret
in
mov
mov
dec
scas
push
cli
or
outsl
mov
and
sti
push
shlb
fisubrl
repz
and
xor
cmpsl
cmp
add
enter
inc
fs
adcb
add
scas
loope
dec
test
mov
out
pop
push
mov
cli
adc
adc
and
ficoms
mov
add
gs
scas
enter
mov
pop
fistpl
addb
insb
inc
imul
dec
jg
out
flds
data16
stos
sbb
mov
in
xchg
mov
sbbb
and
mov
loopne
mov
and
sbb
cmp
out
mov
jno
add
pop
cltd
or
add
ds
push
mov
in
cmp
mov
outsl
loopne
mov
sub
test
pop
shlb
orl
popa
xor
mov
aam
xor
xor
es
stc
lret
scas
setge
insb
outsl
adc
aad
mov
xlat
cmp
lds
cs
mov
adc
gs
cmpsl
sbb
cmp
or
arpl
pop
mov
mov
pop
sbb
jl
xlat
xchg
pusha
push
cli
stc
pop
incb
xchg
out
xlat
jl
mov
clc
or
mov
jg
sub
add
std
sarl
shll
pop
fbld
push
adc
repnz
popa
sub
xchg
sti
jl
lret
xchg
push
test
sarb
sbb
faddl
mov
loop
sub
stos
xchg
loope
pusha
mov
xchg
int3
ret
fscale
insb
xchg
lock
mov
out
push
stos
xchg
or
fisttps
mov
cs
push
adcb
fsubrl
arpl
daa
inc
mov
ja
mov
mov
stos
xchg
fpatan
inc
arpl
jnp
inc
push
lods
cli
add
cltd
cmpsb
mov
ret
xchg
push
sub
sbb
mov
test
lcall
xor
rol
mov
lock
lods
xor
lea
xchg
inc
and
leave
mov
loop
insl
push
lahf
loope
enter
popa
dec
jb
in
cmpsb
mov
jle
into
cmp
scas
jle
mov
dec
sahf
addr16
loop
or
xchg
outsl
in
mov
loopne
ljmp
adc
in
inc
push
xor
ljmp
icebp
dec
jg
xchg
xor
push
cmp
cmp
mov
out
in
das
or
ljmp
jae
xor
or
xchg
dec
jmp
imul
psubsb
inc
xor
aam
mov
inc
ss
or
stos
inc
add
std
test
xor
inc
pop
aaa
xchg
orl
leave
mov
jns
loope
mov
mov
test
js
inc
sub
insb
faddp
aaa
andb
in
out
stos
test
cmp
int
sub
and
hlt
jp
inc
push
loope
pop
pop
sahf
and
mov
daa
mov
nop
cltd
pop
out
jl
negb
rcll
decl
push
add
push
lahf
roll
mov
in
cmp
cmp
mov
or
shrl
xor
shll
pop
pop
fwait
addr16
data16
cmpsl
subb
sbb
mov
idivb
jle
or
mov
cmpsl
xlat
or
add
rcrb
aas
lret
and
faddl
ljmp
sub
mov
sbb
push
push
mov
aas
sub
fs
xchg
movsw
and
lds
ljmp
and
push
inc
mov
xchg
mov
aas
pushw
scas
lea
pop
xor
jmp
cwtl
fs
add
jns
lea
push
add
add
or
clc
add
sbb
into
sub
and
shrl
aas
pop
fisubrs
sbb
notb
xchg
daa
aas
out
fwait
popf
dec
dec
adc
xchg
lds
out
ds
lcall
addr16
arpl
xor
push
mov
loop
iret
pop
in
xchg
xor
jecxz
ljmp
pop
lds
pusha
push
add
insb
shrb
subb
int
xchg
inc
ffree
mov
js
or
xchg
or
fcoml
cmpb
ja
pop
push
insb
fcoms
jne
dec
scas
shrb
test
adc
lock
inc
loopne
jnp
mov
popf
jmp
or
out
mov
adc
decb
rorb
and
xor
add
mov
mov
adc
addr16
mov
inc
filds
xor
stos
cs
sbbl
js
fists
mov
out
fcmove
and
jns,pn
ljmp
leave
xlat
pushf
cmp
cwtl
and
int3
rcrb
sub
mov
loopne
mull
std
lods
loop
lds
sbbb
and
pop
testb
cmp
loopne
xchg
xchg
gs
add
stos
cmp
adc
je
dec
jnp
stc
imul
ja
mov
add
mov
sub
push
xor
xchg
pop
es
sbb
push
and
jne
clc
cmpb
pop
sbb
mov
adc
testl
cli
jns
mov
jg
daa
loope
dec
jae
addl
xchg
pop
pop
mov
movsl
pop
pusha
cwtl
cmc
jne
jmp
stc
xchg
inc
mov
pop
mov
push
loopne
xor
movsl
fidivl
mov
add
jmp
and
inc
cmp
gs
fstpl
or
push
xor
insl
scas
pop
insl
push
ficompl
jg
inc
push
or
or
lcall
dec
sbb
mov
xchg
cmp
inc
lret
notb
jae
repz
mov
inc
xor
data16
push
iret
fisttpll
mov
mov
sbb
je
mov
push
shr
mov
fwait
mov
ret
pushf
pushf
aas
cmp
pop
mov
inc
in
and
fists
lock
xchg
jmp
scas
adc
in
and
nop
sbb
call
sub
or
or
fldenv
gs
iret
movsb
rorl
jne
dec
rcrl
dec
cmp
xor
sbb
fimuls
test
adc
push
mov
rorl
xor
cs
fs
std
into
dec
pop
leave
xchg
addr16
cwtl
xor
fwait
movsl
or
push
int3
jle
inc
pop
push
mov
ljmp
xchg
lret
add
sub
imul
dec
stos
lret
jle
push
push
inc
hlt
cmp
pushf
jbe
lahf
cmpsb
xchg
adc
sub
loope
pop
call
xor
xchg
sbb
ficomps
insl
jbe
mov
mov
adc
xorb
cwtl
loope
hlt
push
push
mov
cli
lods
mov
xlat
dec
lret
cld
adc
clc
mov
or
cmpb
dec
add
mov
fstps
imul
test
test
inc
imul
jne
dec
adc
fadds
popa
scas
into
and
push
aam
dec
and
popf
push
stc
inc
xor
dec
mov
push
dec
cltd
lret
sub
inc
xor
scas
int
dec
add
push
xchg
insb
fnstenv
and
pop
roll
fcom
fsubl
pmulhw
movsb
mov
cvtps2pi
ja
iret
mov
popf
jb
pushf
inc
mov
stos
pusha
mov
roll
mov
mov
ret
es
and
shr
mov
add
mov
mov
jne
mov
xor
addl
sbb
lea
mov
mov
cmpsb
icebp
addr16
jl
mov
push
outsb
fs
or
and
fldt
int3
or
pusha
jo
icebp
mov
ret
ds
sub
push
mov
sbb
mov
rorb
push
sarb
lret
enter
cmpsb
es
adc
repnz
das
sbb
sub
or
vpminub
pop
ret
xchg
add
mov
mov
enter
int3
or
and
dec
push
mov
mov
ja
dec
aad
fcmovnb
sub
jecxz
rorl
mov
xchg
mov
fisttps
mov
pop
fs
ret
jmp
je
sbbb
mov
adc
cmpsl
or
xchg
xchg
add
push
push
mov
xchg
mov
lret
mov
cwtl
fisubrl
jle
or
fists
and
loop
pop
adc
xchg
xchg
inc
mov
add
std
inc
xor
jp
aam
enter
mov
add
push
adc
iret
xor
sub
and
pusha
shlb
aaa
sub
pop
add
cwtl
cmp
xchg
pusha
inc
sbb
repz
push
jl
mov
mov
addr16
fnstcw
sbb
test
mov
add
das
inc
pop
sbb
fnclex
xlat
push
mov
push
push
scas
pop
push
lret
test
mov
mov
icebp
fnstsw
inc
pop
push
icebp
paddw
stc
outsb
fsubl
mov
and
cmpsl
sarb
addr16
push
jae
test
inc
ds
dec
scas
push
push
rclb
in
les
cmp
orb
pop
or
out
mov
bound
sub
mov
add
call
xchg
dec
push
mov
mov
mov
inc
jmp
icebp
push
push
sub
sti
jl
xchg
shl
cmpb
into
mov
sub
sub
orb
jo
jl
js
add
cmp
stos
fldt
cwtl
cmp
dec
mov
mov
test
rcrb
gs
adc
add
pop
fistps
lret
sbb
pop
in
push
inc
arpl
or
xor
loop
daa
stc
insl
pusha
jo
dec
inc
cmpsb
and
jp
mov
in
inc
rcl
fstpt
sbb
jnp
ret
mov
sahf
pop
daa
enterw
jl
andb
out
sbb
and
and
icebp
cmp
jae
pop
dec
addb
mov
xlat
mov
pop
repnz
jle
aaa
lahf
inc
pop
test
jno,pt
lds
sti
sub
clc
shll
hlt
xor
daa
jnp
adc
xlat
test
dec
xchg
in
or
pop
addr16
push
aam
adc
xchg
mov
fisttps
call
mov
mov
es
lret
inc
insl
mov
pop
or
loopne
add
sbb
sbb
or
pusha
scas
ret
mov
and
mov
lahf
push
stos
sbb
aas
adcl
test
pop
xchg
sub
add
es
test
ds
adc
add
data16
call
mov
or
jo
lods
adc
xchg
dec
mov
push
push
xor
jecxz
push
cmp
movsl
xchg
in
subl
push
xchg
movsb
or
mov
push
daa
sub
ja
scas
xchg
movsl
sbb
adc
stc
sti
pop
mov
push
xchg
sub
fcomi
xchg
mov
divl
xor
mov
cmp
or
xor
cmp
jge
fcmovnb
fistl
data16
sub
fisubl
mov
popa
aad
ret
pop
xchg
shll
push
adc
cmp
jnp
add
lcall
outsl
dec
insb
xor
into
sbb
sbb
jg
rcr
sbb
ljmp
cmpsb
mov
sbb
in
js
test
and
ljmp
popa
cltd
pusha
mov
mov
mov
out
cmp
das
cmpsl
jne
mov
sbb
fcoms
push
mov
shll
shl
and
xor
in
jnp
lock
gs
test
mov
sar
inc
and
xor
scas
out
cmp
pop
xchg
movsl
cmp
mov
dec
dec
sbb
cli
jo
push
sbb
add
lret
popf
xchg
mov
pop
inc
add
shr
test
test
fistl
or
push
xchg
loop
sbb
and
fcomps
jno
sub
repnz
pop
inc
data16
and
pusha
push
or
int3
das
sbb
shll
push
scas
and
shl
pop
fdivrp
adc
add
fistpll
fsts
push
ficomps
lret
jno
xor
pop
sub
arpl
or
fs
xlat
out
scas
int3
repz
out
cs
push
leave
add
add
cmpsl
sub
and
mov
sbbl
shlb
loopne
int3
jmp
jp
loope
mov
pusha
adc
xor
inc
xchg
fwait
clc
mov
sahf
addr16
insl
add
arpl
loopne
mov
outsb
movsb
push
lret
xchg
test
xchg
subl
popa
pop
dec
sub
hlt
popa
jg
aad
push
sbb
hlt
push
fucom
cli
cmp
xor
dec
adc
cmp
call
mov
lock
test
rolb
inc
in
xchg
jbe
popa
jge
sbb
loopne
xchg
cmp
or
lods
jl
nop
sahf
movsl
cmp
jns
cmp
fsts
jo,pt
leave
in
push
lcall
dec
loope
imul
adc
clc
cld
imull
sub
fs
std
inc
mulb
jg
xchg
rolb
pop
imul
sbb
push
call
push
fidivrl
outsl
xchg
push
aas
aam
and
rcrb
lods
inc
add
or
aad
mov
adc
mov
ret
or
lock
sbb
rcrl
std
aad
rcrl
xor
adc
pmaddwd
dec
push
es
push
data16
lea
lret
push
fidivrs
loope
adc
jno
sub
daa
jne
push
in
repz
fs
xchg
lds
daa
lret
dec
test
loope
push
adc
inc
adc
dec
mov
sti
sahf
push
mov
push
gs
or
imul
fnstcw
out
in
pop
mov
sbb
cmc
pusha
sub
inc
lock
inc
or
fnsave
stos
mov
and
xchg
push
mov
and
roll
scas
repz
inc
mov
rcll
out
cmp
push
adc
jae
cmp
adc
or
pop
add
push
icebp
inc
fildl
pop
stc
xor
daa
shl
xor
imul
hlt
sub
push
adc
scas
adc
and
cwtl
stos
inc
sti
and
int
loope
mov
cmp
adcb
push
repnz
xor
sub
in
lahf
rolb
js
adc
jae
leave
xchg
lret
popf
cltd
movsb
pushfw
orl
mov
cmp
push
aas
mov
jecxz
jge
jae
ret
cmp
and
jp
nop
das
cmpb
xchg
push
xor
aas
jecxz
xchg
mov
jg
xchg
push
ljmp
imul
add
jmp
das
pop
cltd
in
mov
push
and
in
cmpsb
cld
and
adc
push
ret
jle
iret
lock
stos
les
cwtl
int3
pop
std
xchg
fsub
jecxz
cld
xchg
mov
mov
mov
icebp
punpcklbw
xor
inc
cmc
popa
adc
add
movsl
ret
mov
jne
fistpl
test
or
push
jb
or
rclb
jmp
pop
cltd
and
int3
rorb
dec
lcall
mov
int
push
rcrl
mov
into
pop
pushf
and
mov
xchg
xchg
xlat
aam
in
data16
fcoml
stos
jg
adc
cs
xor
mov
in
pop
jno
and
adcl
mov
movsb
jg
sbb
push
inc
dec
mov
adc
mov
imull
icebp
pop
push
pop
and
mov
pop
in
and
xor
or
test
push
das
or
cmc
mov
popa
loope
mov
bound
das
stc
or
movsb
movb
cwtl
push
arpl
sbb
aas
cld
lea
lods
xchg
fimuls
fimuls
leave
out
sub
scas
cmp
inc
dec
dec
sahf
icebp
or
bound
out
cli
mov
mov
xor
lods
iret
sarb
pushl
movsb
test
and
sbb
je
add
in
repnz
add
pop
mov
shll
sbb
ret
push
outsl
cmpsl
mov
cmp
test
cli
js
or
mov
jne
movsb
leave
call
lea
mov
and
mov
cli
mov
push
test
enterw
or
pop
push
sahf
int3
xchg
decl
insb
shl
xchg
mov
mov
leave
out
inc
jno
xor
je
add
xchg
push
ds
insl
xor
pop
sbb
sub
lea
inc
or
inc
lcall
and
cmc
bnd
insl
leave
sub
sbb
and
arpl
pop
adc
pop
div
in
pushf
mov
sub
xor
lock
lret
fldcw
cmp
push
stc
push
jl
popa
stos
lock
mov
pusha
aam
and
jl
mov
xchg
xchg
dec
out
das
pop
fcmovnbe
ds
ja
ficomps
loop
cmp
mov
dec
leave
test
imulb
cmp
test
sub
pop
and
shrb
loope
idivl
xchg
cmp
ss
ss
xchg
inc
add
leave
mov
idivb
xchg
mov
lock
jg
cmpsb
outsl
imul
arpl
or
cmp
mov
hlt
push
xchg
mov
ret
sub
pop
jmp
sub
sub
xor
inc
ret
xchg
pop
repz
ror
sub
scas
cltd
xor
push
andl
push
mov
sub
clc
stc
out
int
and
addr16
or
outsb
cmp
jl
xchg
pextrw
pop
call
rcrb
imul
ja
mov
fcmovne
cwtl
or
push
add
mov
cli
fdivs
inc
sub
or
sarb
sub
cmp
sub
loope
das
mov
mov
add
or
mov
outsb
xchg
push
jle
sti
loop
and
int
or
adc
mov
adc
inc
mov
sbb
jg
xchg
xchg
lock
movsl
push
call
add
push
stc
andl
popf
dec
jge
out
pop
fisttpll
ret
ret
or
in
cmpsl
add
and
testb
add
adc
or
jne
scas
cmpl
movsl
ljmp
xchg
sub
push
dec
push
cs
popf
mov
mov
mov
and
mov
push
or
lods
xor
xchg
or
jno
addl
xor
mov
push
nop
lahf
mov
sub
mov
rcl
xor
inc
push
shrl
out
mov
loop
aas
pushf
decl
and
stos
xor
out
jl
mov
push
leave
cmp
bound
pop
or
mov
jmp
jmp
lcall
sbb
shll
cli
xchg
roll
jb
das
out
mov
sub
and
inc
push
inc
pop
sub
and
add
ret
in
add
int
fadd
sbb
cwtl
imul
dec
pop
cmp
outsb
fld
mov
repnz
lcall
mov
scas
pop
add
add
stos
push
and
mov
pop
add
js
pop
mov
inc
test
xchg
xchg
or
sbb
in
repnz
aaa
mov
scas
fstl
adc
inc
xorb
clc
sub
inc
inc
les
cmpb
pop
in
jge
push
sbb
dec
test
aaa
xor
out
lock
sub
add
push
jbe
inc
ljmp
jmp
dec
add
pushf
xor
sbb
loopne
and
cld
pop
rorb
clc
fninit
cltd
shrb
xor
mov
out
push
fistps
cmp
adc
dec
add
pop
inc
adc
fadds
jge
aad
je
jns
pop
inc
jge
sub
je
pop
jmp
arpl
add
aad
xchg
cmp
std
movsb
push
xchg
mov
xor
mov
cwtl
cmp
addl
into
cmc
movsl
pop
mov
movb
lea
and
aas
xchg
dec
fidivrl
add
jne
arpl
mov
jae
int3
fisubs
pop
push
nop
pop
ljmp
fldcw
sbb
cmpsl
les
repnz
push
adc
bound
cmc
and
sahf
sub
jg
aas
mov
arpl
pop
sti
scas
inc
mov
loopne
jmp
xlat
pushl
js
sub
mov
sbb
inc
sbb
inc
add
xchg
ds
cmpsb
lret
add
mov
cmpsb
ljmp
int3
mov
sti
push
mov
push
in
clc
add
inc
lcall
arpl
in
daa
jg
or
inc
dec
push
mov
fcomps
or
push
sbb
out
xchg
mov
pop
das
jo
dec
enter
cmp
adc
mov
js
inc
mov
test
outsb
sbb
sub
xor
das
add
pop
jecxz
dec
adc
iret
test
lahf
test
std
test
mov
hlt
iret
push
lahf
inc
outsl
push
aas
outsb
decl
mov
arpl
outsb
in
scas
movsb
inc
jnp
jb
and
or
mov
in
mov
aas
sti
lock
inc
xchg
jecxz
pop
shll
push
pcmpeqd
stos
mulb
in
mov
mov
les
jge
jnp
pop
pop
cmp
xlat
ficoms
lods
pop
mov
or
xor
or
je
push
popf
pop
adc
arpl
add
pop
xchg
out
push
stc
ja
bswap
mov
repz
adc
ror
or
insl
jb
xchg
nop
fwait
aam
or
ss
rolb
call
dec
or
in
jnp
xor
xchg
cmpsl
xor
fmulp
daa
cmp
jmp
sar
ss
jg
shlb
jmp
mov
add
and
adc
fimull
xchg
adc
into
inc
mov
mov
rclb
movsl
shl
arpl
jmp
jb
sbb
pop
mov
test
or
lds
push
add
inc
lea
sub
push
aam
pusha
mov
sub
add
jp
les
dec
jmp
rorb
xchg
sbb
pop
dec
negb
aad
push
clc
xchg
lret
and
dec
jns
mov
test
or
adc
xchg
movsl
push
mov
jmp
movsl
adc
inc
test
sub
mov
outsl
testl
cmp
sub
clc
sub
inc
xor
xchg
mov
pop
xchg
sbb
pop
clc
aam
jmp
int3
jg
sub
iret
test
fs
push
xchg
aam
shlb
sub
jbe
mov
inc
mov
test
lret
aas
imul
pop
jb
pop
mov
pop
das
aas
mov
repz
fsubrp
ret
fildl
fwait
imull
push
sarl
ret
xchg
sub
imul
pushl
mov
xor
mov
mov
stos
bound
fistpl
push
and
xor
mov
fdivl
mov
mov
out
clc
lahf
add
jp
and
add
mov
mov
aaa
add
mov
add
fxch
xchg
mov
gs
cmp
adc
xor
nop
sbb
sti
pop
pop
or
jmp
divb
inc
les
fdivr
mov
loope
adc
inc
std
xor
xchg
outsb
cmp
cmp
lret
mov
cli
imul
xchg
push
fisubl
sub
popa
mov
cli
and
push
inc
xorb
int
add
xlat
pop
int
fstl
loopw
mov
jb
sbb
xor
pop
jge
shll
loop
movsb
fwait
xor
lahf
loop
adc
mov
xchg
mov
cltd
arpl
jbe
scas
mov
add
xorl
js
mov
imul
adc
test
shll
fmuls
push
aam
jmp
and
and
inc
incb
pop
pop
jg
pop
imul
cwtl
icebp
loop
and
sub
push
push
pop
repz
rcl
jle
sti
or
sbb
out
or
jbe
daa
push
cmp
lret
sbb
sahf
lcall
mov
inc
cld
xchg
dec
jo
and
or
mov
ret
cmpl
inc
jge
fidivrl
jge
into
mov
insb
cmp
xorl
js
xor
sub
loop
rolb
popa
call
mov
aad
stos
cli
mov
sbb
push
int
pushf
jo
cltd
dec
adc
cmpsl
adc
ja
lret
and
mov
cs
xchg
push
mov
or
jnp
pushl
mov
repnz
ret
test
inc
fildll
test
pop
mov
imul
repnz
nop
in
cltd
test
and
lret
blci
insl
lret
add
fincstp
clc
cmc
or
sub
ljmp
jmp
addb
xchg
push
in
stos
stos
into
cwtl
repz
adcb
xor
push
test
notl
pop
mov
sbb
cmp
insl
repz
insb
adc
aam
cmp
in
sbb
ficoml
es
psrlw
fisubrs
pop
sbb
loopne
sub
sbb
adcb
pusha
jg
popf
add
rorb
ds
test
cld
dec
jns
aad
daa
mov
pop
jo
jg
popf
push
int3
xchg
pop
fcomp
scas
sbb
adc
xchg
adc
push
cmp
and
jnp
mov
mov
iret
jl
pop
out
or
insl
lods
movsl
loope
push
dec
std
in
push
xor
aas
stos
mov
and
mov
incl
in
xchg
mov
cmp
cltd
jmp
mov
imul
lret
mov
mov
pop
jne
or
xchg
sub
xchg
inc
imul
jl
fists
fnsave
cmp
inc
outsb
push
fs
cmp
ror
das
daa
jo
int3
fimull
dec
push
jg
mov
xchg
dec
mov
push
popf
xchg
aas
cmp
cmp
lret
aas
aas
jb
dec
mov
or
test
xor
push
test
xchg
imul
mov
ljmp
mov
xor
dec
imull
std
xchg
aas
adc
cmp
out
jo
push
in
or
push
data16
xchg
in
mov
mov
xor
andb
cmp
mov
test
xorl
subl
rcrl
pop
frstpm(287
mov
call
xor
pop
adc
adc
adc
daa
mov
call
inc
das
sub
jg
sbb
lret
jae
xor
push
jbe
lahf
rcl
out
repnz
rcrl
adc
clc
or
and
sub
push
cmp
xchg
or
jecxz
jmp
inc
jne
dec
ss
cltd
and
jns
sub
rcrl
arpl
cmp
mov
sti
pop
sti
mov
dec
sub
mov
movsl
mov
fisubrl
inc
push
vpunpcklwd
cmp
mov
mov
jecxz
push
add
js
loopne
shl
sub
pop
cli
pop
fisubl
jns
inc
movsl
jle
or
test
adc
bound
cmp
jbe
xchg
push
arpl
lret
add
mov
out
imul
xor
cld
xchg
movsb
xchg
aaa
out
bound
and
cmp
push
mov
mov
jecxz
add
xor
test
js
sub
dec
xor
cmp
jbe
jbe
dec
xchg
cmp
mov
out
cmp
sub
or
xor
ret
push
loope
pop
ss
jnp
stos
jo
in
pop
mov
xor
leave
push
test
imul
adcb
sub
jne
push
push
sbb
call
std
jbe
mov
je
inc
mov
int
push
inc
xchg
into
frstor
cmp
jne
xchg
fdivs
popf
ficoml
sbb
mulb
jo
xchg
mov
in
ds
pop
inc
out
cmp
arpl
dec
pop
and
mov
fwait
xor
xor
fxam
and
or
push
inc
loop
pop
add
mov
test
xchg
imul
xor
sarb
mov
sbb
mov
dec
cmpsb
dec
mov
fwait
adc
pop
iret
iret
mov
in
jl
test
scas
int3
push
inc
testl
ret
je
cmp
iret
outsb
add
movsb
lea
jp
cmp
add
mov
cmp
and
or
outsb
mov
xchg
push
test
mov
sbb
cld
xor
or
in
aad
xchg
push
inc
fs
cs
mov
lock
and
aas
sar
mulb
nop
xchg
jnp
pushf
cs
jnp
fs
mov
pop
les
sbb
push
adc
pop
cld
cmp
repnz
aam
dec
or
popa
mov
jno
out
pop
shrl
adc
and
xchg
and
inc
add
adcl
sbb
enter
sbb
popf
sub
popf
stc
std
int
jnp
jno
sbb
pusha
push
sub
sub
loopne
mov
sbb
sarb
jae
into
jns
sti
and
loop
push
or
nop
jo
dec
add
push
test
push
inc
loope
or
hlt
dec
inc
pop
xor
pusha
add
test
dec
jb
sbb
and
iret
loopne
mov
dec
cmp
outsl
push
mov
pusha
aas
ret
test
ret
xchg
xchg
cmpsb
pop
aaa
jo
ret
jg
shll
subl
mov
lds
mov
xchg
jns
mov
test
loop
cltd
mov
in
dec
in
sti
addr16
cmp
je
sbb
adc
mov
in
push
loop
movsb
xor
gs
nop
lahf
mov
sbb
cwtl
daa
test
add
test
je
push
jp
lods
sti
mov
xchg
loopne
aam
xor
push
repnz
popa
fnstcw
in
cs
adc
in
cmc
and
mov
push
and
sub
movsl
stc
sub
dec
mov
fadd
add
cmp
pop
gs
add
js
push
mov
es
or
jp
mov
cmp
jle
icebp
test
jl
mov
push
filds
xchg
arpl
in
div
jae
inc
mov
or
inc
inc
cwtl
lret
mov
mov
in
adc
or
add
sar
mov
dec
in
lds
dec
mov
xlat
push
lret
mov
jne
xchg
inc
fsubr
ljmp
sbb
push
push
xor
mov
jo
insb
xor
adc
pop
popa
jnp
loopne
pop
dec
add
mov
mov
addr16
push
pop
inc
lret
push
test
push
mov
mov
and
add
mov
cmp
ret
cmpsl
nop
add
inc
mov
xchg
mov
mov
stos
add
jg
push
daa
jecxz
add
sbb
add
jno
inc
sub
into
pop
cmpsl
xor
or
sbb
adc
mov
inc
stc
xor
lret
inc
pop
lcall
xchg
orl
add
pop
jle
mov
subl
popf
mov
adc
pop
sbb
and
sti
mov
gs
gs
fsts
aam
and
adc
xchg
fs
test
lock
popa
push
sbb
fxam
stos
fisttpll
call
inc
pop
adc
repz
sbb
mov
adc
pop
ja
fistl
dec
jo
movaps
mov
push
repnz
daa
mov
jg
pop
inc
scas
jge
arpl
cmpsl
xchg
loope
jle
xor
shlb
push
lea
les
mov
mov
aad
inc
adc
into
rcl
xchg
jae
icebp
shrb
dec
das
test
jnp
xor
xor
test
inc
into
fwait
sbb
inc
mov
and
mov
insl
hlt
sbb
movsl
and
mov
adc
enter
outsb
cmp
dec
mov
movsl
pop
in
jp
push
and
test
test
jp
xor
ficomps
cli
jge
pop
subl
inc
ds
xchg
and
jae
andb
xchg
outsb
or
mov
push
and
insb
loopne
mov
xchg
ffreep
jle
adc
push
add
fldl
jle
call
xchg
xchg
adc
pop
fs
leave
mov
dec
lods
out
jp
dec
rolb
les
pop
inc
mov
inc
enter
sbb
xor
sti
cmp
cmp
mov
pop
das
lret
add
out
sarl
imul
pop
add
add
mov
sbb
js
ljmp
pop
dec
cmc
xor
mov
or
test
and
sub
pop
test
lods
mov
fst
sbb
mov
popf
loope
in
cmc
insb
fildll
cmp
sbb
jl
insb
xor
fs
loopne
cmp
inc
xchg
dec
stos
cmc
icebp
xor
arpl
inc
xor
cmp
into
inc
xchg
mov
scas
xchg
jb
std
and
fwait
lcall
ret
lcall
add
enter
mov
fnsave
pop
je
test
cwtl
cmp
aaa
movsl
mov
sahf
repnz
add
bound
pop
push
stos
inc
in
adc
xchg
shr
les
push
xor
mov
sub
push
push
fsubp
mov
jge
shl
popf
dec
add
aad
pop
jmp
clc
pushf
push
dec
mov
bound
loop
cld
cmp
pop
xchg
insl
aam
mov
jecxz
pop
dec
int3
xchg
pop
ja
inc
cltd
outsb
sbb
dec
jp
loope
scas
mov
dec
test
ja
pop
and
mov
mov
push
inc
cmpsl
fnclex
sbb
mov
adcb
pushfw
sbb
out
mov
lods
inc
icebp
pop
aas
or
add
out
dec
dec
lret
dec
mov
xchg
pop
lods
mov
fs
js
scas
mov
xchg
and
mov
or
jo
or
push
mov
add
lcall
adc
mov
mov
or
pop
xchg
push
jp
aaa
mov
data16
jbe
mov
or
inc
push
xlat
adc
js
std
pop
dec
into
test
mov
push
lock
xor
mov
jb
mov
cli
fsubr
add
jne
mov
aas
in
imul
sbb
inc
jne
cltd
aaa
mov
xchg
mov
popf
movsl
loopne
mov
xlat
fstpl
mov
cmp
aaa
mov
cmp
leave
mov
and
cwtl
scas
popl
and
adc
push
and
shrl
int
and
inc
push
add
push
fstpl
dec
shll
jnp
mov
push
pop
inc
movsl
in
jb
mov
or
dec
mov
mov
adc
xchg
inc
insl
cmp
js
in
sub
push
cltd
cmpsl
sub
cmp
lea
or
mov
vmovsd
adc
add
daa
mov
xchg
in
inc
pushf
cmp
aas
mov
adc
js
sbb
flds
lcall
sbb
xlat
xchg
cmp
cmpsl
adc
lret
add
jge
arpl
sbb
addr16
and
jb
mov
cmpsb
imul
fldcw
inc
stos
and
pop
outsb
or
movsl
movsl
lcall
das
add
pushf
mov
setl
imulb
pop
add
sbb
push
add
lock
lods
and
test
arpl
lods
mov
cwtl
test
clc
jns
fwait
xlat
es
xor
faddp
daa
or
test
leave
mov
insl
xor
add
inc
mov
pop
adc
rclb
fnsave
sbbl
mov
mov
push
stc
fwait
pop
movsb
xchg
imul
std
xor
xor
fsubrl
ret
push
sti
push
mov
sub
ljmp
xchg
jg
outsb
and
insl
sub
push
cli
sbb
aad
ret
sbb
push
dec
repz
add
mov
fnsave
lds
dec
xchg
and
sub
in
dec
pushf
xchg
inc
fs
aas
cmp
lcall
mov
add
inc
fdivs
shll
mov
push
xchg
popf
xchg
cmp
nop
or
jp
bound
xorl
push
xor
jle
out
aaa
mov
jne
fnstcw
aam
mov
adc
mov
cmpsl
bnd
je
push
mov
add
daa
cmp
jnp
push
jae
rcll
loop
mov
or
pop
xchg
repnz
adc
dec
insb
int
out
fbstp
in
adc
insl
add
int
imul
pop
sub
lods
xchg
adc
mov
mov
cmp
mov
jno
lods
clc
adc
inc
dec
jns
xchg
inc
jns
mov
xor
jge
mov
push
ds
in
arpl
scas
and
fcmovnb
push
rcr
repz
leave
shlb
shrl
in
lret
shlb
push
pop
mov
ss
ficompl
fistl
clc
pop
sbb
rcll
lret
rolb
add
push
mov
dec
pop
repnz
popf
sub
cltd
cli
push
xlat
inc
push
dec
stc
js
or
add
push
push
outsl
dec
pusha
aam
sbb
sub
sahf
and
imulb
xor
push
cmpsl
in
push
lret
and
ljmp
xchg
pop
and
xchg
leave
mov
add
test
lcall
outsb
pop
roll
pop
sub
xor
loopne
fldt
out
push
sbb
add
dec
inc
pushf
or
test
or
dec
test
fsubs
inc
cmp
pop
xchg
add
push
cltd
push
cmp
or
mov
clc
sbb
pop
add
insb
push
mov
pop
jecxz
xchg
sub
data16
movl
and
inc
in
xchg
imul
jno
lods
mov
ds
and
mov
lea
push
sbb
fadd
rcll
das
xchg
sub
stos
aad
jge,pn
pop
xorb
iret
idiv
nop
outsb
cmp
jg
dec
lds
sahf
mov
sub
out
sbb
scas
les
ljmp
cld
inc
ja
aaa
xor
js
int3
mov
sbb
int3
ret
jo
xchg
mov
cmc
pop
enter
push
int3
mov
orl
lcall
shlb
push
pop
dec
and
fnclex
ss
dec
dec
aam
pop
in
cli
sbb
test
push
fs
push
outsb
pusha
jl
xor
xor
mov
aaa
push
push
cmpsb
jle
pop
scas
pusha
lret
push
cmp
sarl
mov
popf
cmp
aam
jo
inc
or
or
pushf
xchg
repz
addb
idivb
fisubrl
leave
jb
aaa
mov
pop
mov
jmp
xchg
js
mov
ja
inc
ljmp
and
push
add
push
mov
xor
xchg
sub
pop
lret
test
leave
enter
movsb
fcmovnbe
and
dec
push
add
popa
adc
arpl
xchg
int3
pop
jb
pop
mov
mov
pop
add
inc
and
push
push
cld
insb
sub
filds
mov
push
mov
add
push
mov
adc
inc
dec
push
mov
mov
pop
pop
or
push
rcll
mov
lahf
loopne
pop
push
xchg
test
add
popa
inc
ret
or
movsl
adc
push
inc
sbb
out
jg
lock
push
outsb
fildl
in
das
cmp
ljmp
mov
and
scas
bound
jge
std
push
addr16
mov
sub
xchg
lahf
js
mov
or
jo
cmp
rclb
pop
dec
mov
push
cmpsl
push
fsubl
int3
ds
sti
aam
repz
mov
lds
and
xor
mov
lods
test
outsl
cli
sub
test
stc
adc
jecxz
ffree
mov
pop
add
test
mov
icebp
or
pop
and
push
mov
xor
sub
int
mov
pop
fwait
popa
jge
in
fwait
sbb
repnz
mov
xchg
mov
int
popa
jecxz
xor
mov
add
addb
adc
loopne
mov
hlt
push
xchg
mov
xchg
push
popa
lahf
out
lods
xchg
imul
sti
jge
pop
and
xchg
or
js
jmp
ret
mov
test
icebp
pop
sbb
lods
rcrl
cmpsb
pusha
jecxz
pushf
or
push
pop
aaa
push
or
lds
sbb
repz
mov
test
mov
fildll
adc
add
sub
int3
cli
mov
outsl
call
fldcw
lods
xchg
int
test
lds
inc
test
dec
jle
in
dec
push
xchg
mov
fsubrs
add
outsl
xor
dec
mov
cmp
mov
das
testb
test
pop
jae
test
out
pop
call
pop
pop
add
push
inc
jbe
addb
in
cmp
lock
sbb
dec
jb
inc
inc
push
push
sbb
cmpsl
sbb
sbb
sub
int
js
loop
loopne
cltd
sbb
je
repnz
push
loope
pop
xor
mov
mov
sbb
or
ret
imul
icebp
and
inc
jbe
sarl
dec
fisttps
sbb
ret
repz
inc
mov
lahf
imul
imul
dec
movsb
jo
out
je
in
lret
ljmp
cltd
fisubl
jecxz
jecxz
test
xor
jnp
fisubs
sub
adc
pop
mov
sbb
mov
inc
and
inc
daa
in
jae
movb
mov
or
xlat
or
pushf
dec
ja
notl
xor
sub
fidivl
cli
dec
call
icebp
jmp
mov
and
ret
jle
jle
iret
dec
push
loop
xchg
out
dec
mov
icebp
mov
frstor
xchg
inc
adc
sbb
popf
cmpsl
sbb
call
lods
dec
fcomp
pop
and
ret
fcoml
inc
adc
pop
pop
cmp
bnd
jg
shlb
imul
xor
jmp
in
nop
lcall
mov
orb
push
jecxz
xchg
add
lods
fstps
out
sahf
out
nop
mov
faddl
cmpsb
test
dec
push
insl
xlat
cmc
aam
mov
jg
arpl
push
pop
push
adc
mov
pop
cmc
or
xchg
mov
mov
cmpsl
call
jecxz
mov
inc
stc
push
pop
lock
or
fcompl
xlat
mov
popa
fs
or
pop
outsb
xchg
arpl
jmp
mov
mov
cmpsb
insb
pop
lea
xchg
fmull
adc
pop
xor
sbb
sti
aas
gs
push
out
add
xlat
jo
mov
ret
cmp
out
out
dec
push
lret
add
mov
push
cmp
test
sti
push
mov
call
cmp
outsl
sbb
rolb
fiadds
cmp
shl
xchg
mov
cltd
mov
addr16
stc
cli
aas
cs
xchg
mov
shll
push
out
push
lds
stos
mov
jmp
xchg
movb
cwtl
js
fisttpl
rcrb
nop
mov
int3
repz
outsl
push
sbb
sub
push
cld
push
insl
imul
pop
push
cwtl
daa
pusha
dec
call
mov
sbb
add
movsl
fbstp
int
test
test
xor
push
push
inc
leave
movl
inc
jle
ja
and
js
add
rcll
xchg
adc
dec
cmp
and
mov
int
mov
stos
in
loop
jge
sub
or
stos
sub
jmp
sbb
mov
sbb
loope
push
dec
aaa
incl
pop
gs
call
push
push
sbb
iret
cmp
lret
pop
cmp
mov
push
sub
dec
sub
stc
ljmp
xor
fimull
jle
sub
rcrb
mov
jo
xchg
cmpsl
rorb
add
fldt
sbb
mov
and
push
xor
jmp
fidivs
leave
sahf
js
pop
mov
not
gs
mov
jmp
hlt
adc
out
cmp
mov
pop
xchg
loop
je
imul
sahf
aaa
in
std
push
cmp
dec
outsb
dec
ljmp
mov
and
das
test
pop
mov
and
mov
inc
and
cwtl
add
les
inc
rorl
jecxz
xor
sarb
mov
inc
test
test
mov
clc
decb
mov
mov
dec
repnz
and
mov
lods
dec
pop
ud1
jecxz
pop
mov
dec
je
pop
mov
sub
outsb
mov
rcll
imulb
popf
mov
adc
lods
clc
ficompl
pop
push
loop
stos
jbe
jecxz
mov
push
mov
jns
in
decl
inc
xor
in
leave
jp
out
or
and
aam
les
rcll
popf
lcall
mov
push
jne
adcb
packssdw
sub
iret
and
adc
xchg
test
xchg
shrb
fcmovnb
jbe
ret
pop
lods
rolb
xor
xlat
mov
cwtl
shrl
mov
repz
pusha
fsts
or
adcl
rclb
inc
aad
daa
test
jb
mov
ficompl
xchg
push
mov
mov
add
mov
test
and
push
push
jle
mov
scas
mov
or
gs
pop
sub
decb
jle
lods
jp
rcl
cmc
xchg
or
loop
fisubrs
mov
mov
int
pusha
jg
pop
cmp
imul
test
in
fldl
imul
xchg
sub
mov
out
gs
stos
decl
mov
xchg
mov
mov
mov
bnd
int3
mov
adc
jge
call
pop
scas
out
push
push
loopne
mov
aaa
pop
inc
enter
xor
pop
xchg
push
mov
xor
jne
lret
data16
jo
pop
mov
xchg
lea
aas
sbb
jbe
ficoms
jg
jl
sub
inc
mov
subl
add
scas
mov
insb
xor
cmpsb
daa
rcr
je
les
enter
pop
test
or
loope
shll
sub
cmpsb
push
mov
sbb
xor
and
jne
and
jo
pusha
enter
jle
or
mov
xchg
jl
sub
jne
pop
call
inc
movsl
lds
enter
sbb
jg
push
popa
loopne
repz
lods
sbb
fmul
sub
lahf
sbb
das
ds
imul
sbbl
subb
lcall
and
scas
and
mov
popa
cmpsb
add
popf
scas
sub
adc
repnz
in
test
adc
data16
gs
push
and
push
int
adc
xor
sub
pushl
lock
xor
lock
in
pop
add
js
sub
out
cmpl
aaa
and
imul
jp
test
cmc
cld
loop
in
cmp
gs
jne
inc
inc
fwait
das
push
jle
cwtl
mov
or
inc
jb
addb
sub
lret
and
in
pop
or
rcl
fdivrs
test
jb
xchg
cwtl
mov
aam
scas
mov
dec
xchg
loopne
stos
dec
test
dec
pop
out
jno
cmpl
and
out
lds
xor
xchg
push
leave
fstpt
pop
add
bound
xchg
push
cmpsl
pusha
mov
pusha
mov
adc
mull
sbb
inc
push
push
or
pop
jb
inc
mov
pop
js
inc
dec
mov
and
jge
mov
js
adc
push
mov
mov
mov
movsl
jmp
lret
hlt
mov
test
mov
loope
adc
outsl
movsb
out
jne
lahf
outsl
arpl
popf
movsb
clc
xchg
test
jb
cltd
scas
cmpsb
lahf
jne
push
jg
xor
sbb
sti
inc
and
nop
movsb
push
or
daa
and
hlt
xchg
jns
jnp
lret
lds
sub
fs
dec
stos
gs
stos
push
sub
aas
frstor
int3
leave
pop
push
cmp
scas
sbb
and
lret
orl
mov
jmp
pop
sub
jge
aad
sub
call
cmp
fimuls
mov
clc
aad
mov
lods
push
fwait
lds
outsl
jge
push
mov
cld
mov
xor
lods
jl
mov
jp
xchg
and
rolb
pop
xchg
mov
sbbb
pop
out
repz
inc
add
arpl
dec
cmp
pop
mov
and
int
cs
or
mov
xlat
fstps
xor
and
mov
adc
mov
add
mov
inc
adc
mov
dec
pop
xchg
xlat
cmp
imul
repnz
jno
xlat
das
pop
call
inc
pop
call
test
popa
pop
sti
test
mov
pop
mov
pop
cmp
dec
xchg
dec
fcompl
mov
mov
leave
sbb
sbb
dec
mov
aad
lds
adc
scas
fs
push
cmp
loop
cli
sbb
sub
sbb
adc
orb
dec
mov
fisubrs
lret
mov
cli
dec
pop
xchg
dec
movsl
aam
xchg
push
jae
mov
in
icebp
or
xlat
dec
dec
cld
push
fs
jp
loope
jmp
inc
jno
out
clc
ror
inc
push
cli
jne
lods
adc
pop
loope
out
loope
js
mov
lcall
inc
mov
and
repnz
mov
ja
repnz
mov
push
rorl
sarl
mov
icebp
popf
push
mov
pop
push
in
inc
jle
xchg
test
pop
or
cs
nop
cmp
int
pop
xor
and
pusha
xlat
cld
mov
mov
lea
sqrtps
pop
xor
inc
mov
push
xor
pop
push
mov
mov
out
and
xchg
mov
mov
testb
sub
bound
jmp
pop
sbb
cltd
mov
insb
jecxz
add
jbe
fisubl
cmp
and
cmp
lcall
and
fnstsw
out
jecxz
cmpsl
mov
push
cmp
jae
fs
xor
mov
jo
mov
out
mov
jb
dec
gs
shl
in
ret
mov
mov
dec
or
xchg
dec
pop
or
pop
ljmp
mov
mov
pop
jecxz
dec
or
repnz
xor
sti
pop
fistl
in
in
dec
mov
je
mov
or
jo
dec
pop
xor
push
test
jne
cwtl
adc
push
into
movsb
pop
push
sbb
xchg
cs
insl
clc
push
or
pop
inc
popa
mov
in
sahf
out
push
into
and
fstpl
rorl
push
cld
push
push
repnz
dec
sti
cltd
cli
aaa
inc
inc
dec
jp
dec
test
les
adc
repnz
mov
push
mov
cltd
inc
iret
movsb
dec
imul
sbb
pop
ljmp
out
cmp
cs
cli
mov
ds
cmp
out
push
mov
inc
adc
ds
mov
sbb
adc
ret
cli
js
mov
jmp
icebp
jp
dec
ficoml
xchg
test
fs
cmc
aas
or
in
jae
imul
je
lock
iret
das
mov
adc
outsl
inc
mov
pop
dec
xor
xchg
subl
fildl
pop
int
adcb
mov
lods
in
shrb
or
inc
push
out
pushf
lock
in
stos
sbb
cmpb
mov
jle
and
lahf
pop
aas
or
rorl
ss
fsubrl
or
ds
adc
cmpl
xor
jmp
das
mov
pop
dec
jmp
mov
add
jg
outsl
in
mov
cli
or
pop
popa
fmuls
bound
add
popa
mov
mov
ret
insl
dec
repnz
inc
pop
xchg
outsb
test
or
shl
cmp
call
lcall
xor
lock
out
xor
push
push
sar
pop
dec
rep
adc
pop
mov
test
hlt
pop
gs
cmp
mov
jecxz
sbb
sbb
push
cmc
imul
add
shrb
stos
xchg
adc
ret
enter
popa
inc
fisttps
cmp
mov
lea
leave
jns
mov
outsl
out
mov
std
mov
push
popa
xor
push
xchg
add
insb
sub
cmc
cmp
pop
ds
ret
scas
in
mov
stos
xchg
loop
loop
out
dec
sbb
and
jg
test
mov
add
cmp
std
jmp
call
jecxz
out
insl
jmp
mov
lret
lahf
sub
loop
popf
or
inc
test
jl
das
cmp
push
cmp
addl
push
popf
dec
stos
lds
das
movb
cmp
lods
push
loop
sub
xchg
in
add
loope
adc
cmp
aas
out
cmp
mov
hlt
scas
out
movsb
ljmp
out
mov
outsl
xor
jne
std
mov
movsb
sbbb
pop
stos
jno
stos
cmp
test
loope
in
mov
jg
aaa
lds
add
inc
mov
adcb
jae
sbb
mov
mov
std
andl
sti
adc
push
out
ret
mov
aas
mov
bound
sbb
cmp
push
es
aam
mov
repnz
adc
js,pt
push
notb
adcb
or
sbb
dec
fdiv
call
mov
jg
in
pop
in
dec
cli
push
add
call
test
es
pop
lret
aas
fldl
dec
sbb
outsl
or
mov
mov
xchg
push
xor
sbb
fidivrs
pop
testl
insb
xor
jbe
insb
push
sub
mov
xor
sbb
dec
scas
adc
fidivs
push
ss
push
xor
jg
in
int
and
dec
in
sbbl
loop
pop
test
rcrl
leave
test
hlt
cmp
in
mov
mov
pop
les
xchg
mov
push
icebp
mov
add
sti
and
add
mov
xchg
or
js
call
inc
cmp
adc
repz
jg
lods
lea
inc
lret
call
jne
push
fisubl
xor
daa
lret
lret
jg
mov
aad
mov
dec
arpl
call
shrb
cmp
mov
jle
add
repz
or
es
inc
scas
mov
mov
push
push
jae
mov
cmp
push
lock
cs
and
repnz
push
or
sbb
jmp
in
fs
cmp
xchg
into
dec
loop
xor
addr16
adc
mov
jnp
mov
sahf
cmp
daa
out
fldcw
pop
push
insb
out
jmp
dec
aad
or
jae
rcrb
sub
in
sbb
add
cmp
dec
inc
in
adc
aaa
aas
sbb
pop
andl
stos
cmpsl
push
cltd
popf
aam
push
or
cmpsl
mov
and
cwtl
imul
mov
jb
cmpsl
jl
mov
xchg
enter
sbb
ljmp
pop
mov
mov
or
push
or
and
bound
cmp
push
insb
out
xchg
xor
jp
fidivrl
cwtl
cmc
iret
mov
cmc
sub
push
jecxz
xchg
mov
dec
mov
pop
negl
add
stos
insl
xchg
push
stos
fwait
ja
stos
adc
std
aas
in
xchg
test
xlat
jmp
je
leave
add
shlb
stos
jmp
sbb
add
xchg
aad
sub
jp
adc
fsubl
inc
mov
add
ljmp
xchg
loope
in
mov
mov
mov
aam
mov
xchg
ja
jl
add
jecxz
xor
les
out
cmp
pop
or
loopne
jg
mov
out
ret
outsb
adc
add
std
dec
fiadds
sub
mov
gs
cmp
and
add
mov
shl
pop
mov
out
imul
cmpsl
and
or
imul
jmp
in
arpl
jae
push
cmpsl
cmpsb
fisubs
xchg
testb
ret
sbb
cmc
dec
pop
inc
js
and
popa
in
or
lods
mov
xor
push
add
and
stos
xor
jns
int3
popl
inc
lret
or
mov
jo
test
adc
inc
or
sub
shl
addr16
ret
mov
cmpsb
sub
xchg
mov
nop
jecxz
mov
add
jbe
mov
xchg
stos
push
pop
push
outsb
mov
dec
dec
pop
rorb
inc
hlt
xor
mov
ficompl
movsb
pop
jae
shrb
jp
dec
dec
pop
rol
add
sbb
dec
or
test
in
or
mov
es
dec
cmp
fstps
xchg
push
mov
movsb
xchg
adc
cmp
adc
mov
pusha
mov
aaa
and
dec
jnp
inc
mov
lret
loope
sbb
call
nop
xlat
adc
mov
inc
adc
bound
push
inc
out
cld
xchg
and
imul
pop
jnp
pop
mov
fs
fidivs
outsb
icebp
das
sbb
xchg
cld
lds
mov
fbstp
fimull
jle
out
in
cmpsb
inc
mov
fcomip
loopne
cmp
add
cs
dec
jecxz
lods
dec
adc
or
xor
sarb
lea
add
sbb
insl
loopne
aas
add
sbb
jecxz
xlat
into
int3
xchg
jb
inc
jl
dec
cmpsl
dec
std
mov
cmp
in
mov
scas
cmp
in
sbb
das
ret
mov
add
subl
pop
sbb
mov
push
arpl
es
xchg
aad
data16
inc
jo
adc
mov
out
test
or
xchg
scas
pop
mov
ficoml
mov
fistpl
out
xor
outsl
pop
sub
mov
into
mov
xor
sahf
push
sbb
and
xchg
xor
inc
sbb
push
adc
test
push
mov
movsb
or
in
pop
fcmovne
pop
out
shll
and
ss
jg
mov
xchg
adc
sbb
push
imul
roll
fsts
xor
or
pop
lods
mov
shlb
iret
adc
cmp
sbb
cmp
out
pop
aas
lahf
push
aad
push
cmp
cmp
xchg
stos
mov
roll
adc
out
in
jp
test
dec
les
or
jb
mov
popf
mov
lods
clc
dec
sahf
outsl
jae
dec
push
dec
mov
neg
pop
mov
je
repnz
ljmp
insl
popf
sbb
inc
push
daa
push
jecxz
insb
movsb
call
push
ror
push
fadd
mov
clc
test
incl
popf
mov
std
adc
iret
push
fsubrl
lea
mov
ja
push
ds
mov
inc
and
push
call
add
out
xchg
push
mov
cmp
loopne
loopne
pop
cltd
pushf
push
pop
or
ret
mov
and
inc
stos
fimull
or
stos
fs
or
jle
inc
lea
mov
shll
sbb
xchg
and
and
xchg
xor
out
jnp
xchg
bound
call
enter
cmc
cmp
and
pop
add
push
jle
xor
fdivrs
rol
je
jmp
add
and
pop
imulb
push
pop
cltd
push
xor
stos
je
dec
xchg
dec
jp
dec
scas
mov
add
xchg
aaa
icebp
mov
icebp
je
push
adc
lock
rclb
sub
pushf
xorl
dec
mov
add
adc
data16
lret
js
cmpsb
cltd
scas
inc
aaa
sbb
lea
mov
inc
jl
sub
lods
stos
jl
sbb
push
jnp
rorb
call
and
pushf
loopne
adcl
js
mov
xchg
pop
dec
icebp
push
mov
add
mov
inc
inc
sbb
pop
into
int
movsl
push
pop
repnz
lcall
daa
mov
inc
jmp
cmp
and
das
lea
xchg
stos
ljmp
ret
bound
jno
dec
xchg
and
movsl
clc
mov
ds
or
xchg
mov
mov
cli
cmc
ljmp
inc
mov
sti
push
and
shl
inc
ss
sbb
in
sub
sbb
fldt
inc
cmp
adc
push
ds
xlat
push
bnd
lret
arpl
in
cmp
cs
pop
mov
add
iret
pop
or
sarb
jbe
cld
jle
cmp
decl
or
pop
test
mov
sub
pop
pop
add
mov
xchg
xor
insb
out
imul
std
mov
add
out
xchg
mov
mov
jnp
xor
mov
mov
insl
xchg
sub
je
pop
fwait
pop
jmp
jae
jmp
lret
dec
mov
dec
cmp
xchg
sbb
push
insl
cmp
test
push
adcl
push
ljmp
movsl
mov
divb
call
ljmp
or
and
add
pop
call
xchg
or
repz
aaa
dec
lea
dec
movsb
divl
and
shl
jg
scas
and
fwait
mov
int
stos
pushf
movsl
mov
fsubp
mov
inc
vpcmpgtd
daa
idivl
bound
pop
inc
aaa
sbbb
out
fnstenv
jnp
movsl
inc
pop
sub
jg
ret
add
shlb
xchg
and
and
sub
cmpsb
in
int
outsb
or
mov
pop
call
subb
or
test
cmc
hlt
adc
inc
inc
mov
sub
movsl
enter
adc
test
andb
sbb
dec
bnd
int3
out
mov
xchg
inc
lea
lds
pop
xor
fildll
lcall
jecxz
test
sbb
sub
or
inc
loope
stos
test
xchg
lea
outsb
inc
pop
add
push
aad
pop
lcall
std
inc
add
mov
icebp
and
clc
sbb
orb
mov
gs
test
push
or
xor
inc
cmpsl
dec
fadds
mov
pop
mov
cs
xor
rcr
sbb
add
gs
sbb
mov
xchg
lods
xlat
testb
adc
loope,pt
loopne
sbb
shll
mov
inc
es
or
lock
and
mov
aas
mov
pop
loopne
call
jno
ret
sbb
mov
mov
dec
mov
sti
add
jg
lahf
jle
scas
loop
pop
gs
inc
push
push
sub
popa
sbb
jg
lock
push
cmpb
xor
and
sbb
sbb
outsb
xchg
inc
lret
jmp
loopne
daa
mov
dec
mov
or
in
inc
iret
jmp
adc
nop
jl
clc
sti
jne
xorl
push
insl
push
dec
in
add
adc
test
dec
push
mov
or
adcb
call
xlat
sbb
insb
jle
repz
mov
popf
daa
jb
std
cs
push
sub
inc
and
dec
adc
sub
mov
adc
icebp
and
dec
mov
dec
mov
pop
loop
add
and
mov
inc
pushf
mov
cmpb
sub
loopne
xor
xchg
enter
cmp
cmpsl
lahf
sub
xlat
rcr
mov
mov
xor
daa
and
je
subb
xor
and
mov
lods
pop
xchg
lret
cltd
push
lods
int
addr16
das
sbb
addr16
lcall
imul
dec
es
clc
inc
push
adc
or
test
sbb
jbe
xchg
xor
or
sbb
jge
inc
xor
mov
in
repz
mov
mov
add
dec
dec
xchg
pop
mov
or
xchg
je
lea
cmp
outsl
cltd
lahf
mov
and
nop
sub
jbe
loope
dec
jge
add
mov
mov
enter
test
jmp
lods
cmp
sahf
sub
mov
dec
jbe
mov
inc
addb
push
jns
or
sub
dec
cmpxchg
push
sarl
sahf
ror
inc
dec
inc
out
lock
mov
sub
mov
push
jae
mov
jbe
jbe
shlb
inc
pop
or
sub
or
testb
dec
test
out
dec
cmp
sbb
mov
je
xchg
icebp
mov
push
mov
add
and
mov
adc
inc
adc
adcl
ds
add
pop
xor
cmp
inc
push
scas
jg
in
sub
out
pop
in
daa
push
cmp
add
in
lods
outsl
sub
push
scas
or
je
loop
enter
or
push
out
loop
dec
lret
and
xor
cli
pop
lret
inc
mov
sub
jmp
gs
inc
cmc
fstl
pop
ret
into
jle
add
cs
mov
mov
cltd
sahf
pushf
xor
mov
push
mov
mov
jno
lcall
and
or
mov
pusha
cltd
and
aas
bound
push
xchg
sub
insb
cmc
in
loopne
pusha
xor
in
sbb
jl
fcomps
adc
and
insl
xor
adc
xor
mov
add
stc
xchg
xor
pop
es
je
dec
push
sub
inc
fcomip
inc
outsb
xchg
repz
shl
insb
push
jl
daa
dec
test
mov
or
mov
cmpsb
adcb
ljmp
jb
roll
xor
movsb
pop
test
das
cmp
and
fiaddl
mov
mov
ret
je
pop
lds
xchg
arpl
push
fildll
enter
scas
fidivl
cli
sub
dec
jp
pop
stos
in
hlt
out
sbb
lods
loope
lret
adc
sub
ret
adc
sbb
add
sub
nop
vmovd
lret
sti
jbe
inc
push
mov
adc
lahf
mov
or
push
jns
popa
adc
mov
js
aaa
jmp
loope
scas
inc
add
xchg
xchg
fbstp
mov
mov
pop
jmp
adc
add
add
pop
cmpsb
mov
ror
test
idiv
xchg
in
scas
ja
aad
je
adc
mov
add
jo
sbb
sbb
mov
lret
cs
ret
jp
jecxz
out
aam
fildll
orb
push
cmp
fcmovnbe
xchg
fs
das
stc
enter
aad
cs
cld
mov
scas
lahf
sbb
xor
push
fwait
sbb
mov
mov
mov
in
push
cmp
imul
cmc
dec
imul
or
xchg
pushf
xchg
orb
pop
push
in
cmp
sbb
add
inc
lret
xchg
push
aaa
cmp
lahf
aam
lods
adc
test
cmp
push
imul
mov
mov
xchg
in
mov
test
es
dec
pop
mov
subb
lds
xchg
dec
cmp
push
psrlq
cwtl
in
stos
mov
jno
fsubr
cmpl
outsb
push
and
and
inc
pop
inc
stos
sbb
sbb
out
mov
and
or
call
and
lds
mov
stc
or
jb
push
push
xchg
aam
mov
call
fcoml
dec
movsl
jns
and
xor
push
xor
cmp
mov
out
jbe
mov
jns
push
and
sarl
cmc
shlb
aaa
and
cwtl
test
pop
nop
cmp
jnp
jmp
push
mov
mov
fiadds
jp
out
sub
lods
mov
jmp
int3
mov
insb
adc
cwtl
hlt
adc
and
std
xor
sahf
repnz
stos
fsubs
dec
xor
inc
xchg
or
dec
cs
mov
pop
mov
pop
icebp
xchg
stc
cmpsl
add
fldcw
push
mul
fwait
xchg
mov
jne
js
aad
jg
sbb
mov
fucomi
test
inc
clc
lret
data16
pop
mov
mov
jecxz
arpl
cmp
in
repz
shrb
and
cmp
leave
addl
push
fildl
cmp
mov
xchg
push
into
ss
add
pop
jmp
lret
jl
adc
cld
mov
xor
adc
dec
push
ficoms
cwtl
rcr
xchg
ror
push
jp
ret
inc
inc
iret
sub
adc
arpl
sarb
rcrb
movsl
or
inc
test
mov
xor
jp
mov
mov
add
pop
cli
shrl
fmul
sbb
dec
test
lods
inc
fidivl
mov
push
lea
ret
xor
pop
or
shlb
fcompl
in
pop
arpl
mov
movsb
adc
hlt
push
adc
xchg
lcall
es
lock
mov
and
sub
sahf
jge
add
leave
dec
rcl
fidivs
pop
pop
dec
loope
loope
popf
xchg
xor
pop
cli
js
mov
xor
mov
cmp
les
cmpsl
bound
subb
mov
pop
movsb
fwait
hlt
mov
cmp
inc
into
insl
pushf
dec
jns
outsb
cmc
jmp
fucomip
add
mov
dec
cld
decb
outsb
fstps
jl
iret
lods
shlb
cmp
push
cwtl
gs
imul
jns
add
pop
add
gs
stos
loope
nop
lea
and
insb
mov
xchg
std
inc
mov
cmc
add
jb
mov
xchg
stc
dec
jbe
cmp
xchg
jo
inc
jg
add
mov
adc
cltd
xchg
inc
cld
sbb
add
clc
or
mov
scas
ret
in
inc
mov
lret
xchg
sub
adc
inc
dec
cmp
jnp
cs
repnz
xor
adc
popa
push
cmp
enter
push
daa
nop
scas
mov
test
fiaddl
orb
rcr
fucomp
add
inc
gs
lods
inc
ja
jbe
ds
filds
xchg
cmpsb
or
sub
add
push
sub
mov
xor
repz
sub
decl
or
adc
mov
adc
icebp
xor
not
aaa
fstps
dec
mov
inc
stos
ror
xor
inc
mov
inc
cmp
jl
sub
mov
pop
jge
jp
subl
sub
xchg
lds
mov
imul
rcrb
xchg
add
das
jmp
sbb
lods
clc
sub
lcall
out
lock
stos
fcoml
vpavgb
ret
pop
jge
ret
lods
popa
mov
xchg
push
push
sub
frstor
sub
sub
pop
mov
mov
ljmp
xchg
and
and
in
jno
cwtl
adc
jg
repnz
or
imul
nop
mov
mov
cmp
adc
mov
arpl
push
dec
jbe
int3
mov
call
hlt
leave
push
or
and
cltd
sbb
pop
jae
cmc
xchg
fnsave
shrb
add
cli
mov
shlb
enter
rcll
mov
adc
call
inc
outsb
adc
xchg
push
int
jnp
add
pop
dec
movsl
insl
xor
jmp
pop
add
jne
xor
clc
lock
scas
lods
cmpl
pusha
mov
xor
jmp
imul
mov
jno
loop
mov
jnp
popf
fs
xlat
outsb
fistps
xor
outsb
xor
xchg
aas
xlat
stos
cmp
dec
stos
fldln2
pop
xor
add
pop
mov
in
mov
roll
jp
in
enter
xchg
add
imul
outsb
nop
stos
xor
jmp
sbb
into
xchg
lods
addb
call
icebp
das
add
jo
dec
and
push
jecxz
sti
fcom
add
sbb
rolb
inc
into
shll
xor
cvtps2pd
test
xor
adc
xchg
or
pop
xor
sbb
imul
jp
cmp
mov
dec
std
mov
cmp
pop
inc
mov
stc
fistl
push
add
and
stos
andl
fidivl
sbb
testl
mov
cs
mov
cwtl
inc
outsl
push
push
or
mov
loope
sub
adc
adc
cs
inc
xor
jo
pop
adc
mov
icebp
lds
push
mov
mov
mov
mov
xchg
paddq
add
pop
cmc
mov
aad
mov
jmp
sub
movsl
or
scas
movsl
xlat
sub
aas
push
mov
and
mov
scas
into
adc
mov
fdivs
xchg
jbe
aam
lods
pop
jno
es
cmp
fdivs
sbbb
fcom
xchg
shl
mov
popf
mov
pop
aas
fsubr
jecxz
mov
imul
jbe
sbb
sahf
cli
lea
fimuls
push
test
add
std
and
push
jnp
sahf
adc
cmc
cmpsl
and
cmc
popl
and
inc
pop
pop
sbb
pop
push
jbe
cmp
inc
fwait
or
or
popf
pop
gs
push
das
imul
jle
cli
or
mov
iret
dec
out
push
jbe
loop
out
or
scas
sub
adc
add
cmpsl
mov
push
fs
loopne
jecxz
jno
add
cmp
sub
imul
mulb
ret
pop
dec
push
mov
cs
pop
addl
setp
or
loope
push
pop
mov
rorb
lea
addr16
mov
std
fdivrl
in
adc
and
rcr
mov
inc
inc
or
fsubrp
xorl
mov
das
popa
cmc
dec
sub
adc
cld
roll
inc
aad
adc
cmp
mov
cmp
push
xor
loop
push
daa
cmp
iret
sbb
dec
add
xlat
pop
cwtl
mov
xchg
testl
and
sbb
out
cmp
mov
lea
ret
push
jo
pop
mov
pop
sbb
les
mov
jle
cmpl
cli
mov
jmp
push
gs
add
push
cmp
lcall
into
mov
cmp
leave
jbe
add
jnp
sub
sub
add
inc
sub
mov
int
ss
int
and
sub
insb
xlat
adcl
inc
arpl
mov
xor
inc
ret
xchg
popa
inc
pop
inc
scas
push
loope
call
lock
cs
leave
pop
xor
lcall
outsb
stos
sub
call
mov
xor
test
pop
jmp
jb
cmp
imul
repz
mov
xchg
mov
and
cmpsb
in
mov
dec
fcoms
jmp
xorl
mov
pop
xchg
pop
popa
iret
xchg
xchg
fbstp
pop
mov
hlt
rorb
sub
cld
aas
cmp
cmp
rorl
lock
push
jp
inc
test
jmp
es
pop
addr16
jae
xchg
roll
jb
aam
jg
leavew
nop
imul
fnstsw
inc
xlat
pop
xchg
cwtl
jae
cmpsl
mov
ret
sub
xchg
inc
test
imul
push
mov
pop
js
pop
pop
repnz
jle
and
scas
jle
decb
in
xchg
in
clc
leave
into
test
inc
sbb
clc
test
dec
insb
inc
movsb
push
lea
cmp
sahf
cld
mov
sub
loop
mov
pop
test
mov
jns
in
cmp
out
aam
mov
sahf
mov
addr16
inc
jmp
addr16
sbb
or
jae
pop
pop
mov
jns
das
jg
sbb
lahf
add
imul
aad
inc
int3
sub
loope
cs
jae
sbb
testl
hlt
mov
dec
push
mov
je
jo
inc
sbb
leave
push
push
shlb
leave
push
repnz
test
cmp
outsl
jmp
mov
cmc
mov
pop
or
insb
cmp
ja
fcmove
ds
clc
and
add
loope
lds
sbb
gs
aaa
imul
jmp
inc
mov
stc
inc
mov
cli
fstl
cmp
imul
cmp
cld
jg
add
xor
negl
mov
pop
xchg
xlat
clc
inc
bound
and
fists
push
and
mov
sbb
cmpsl
fdivrs
mov
aas
sbb
xchg
es
xchg
jbe
mov
jne
loope
shll
popf
lret
les
pop
rcrl
jecxz
or
fnstsw
and
sbb
mov
gs
aas
or
cmp
push
jbe
fisubrs
mov
add
shl
repz
and
pop
push
fdivrl
mov
inc
addr16
gs
out
or
add
in
push
fisubs
stos
push
loop
mov
mov
push
into
daa
hlt
mov
mov
pop
cmp
sbb
in
orl
loopnew
fldcw
jns
loopne
popa
outsb
sub
int3
mov
std
repz
cltd
mov
rcrb
cltd
in
and
gs
in
sub
mov
shll
scas
in
jl
inc
decb
xor
xchg
pop
mov
cmpsl
outsb
imul
sbb
pop
in
sub
out
nop
cs
xchg
dec
inc
xchg
cmp
mov
mov
cs
pop
repz
fistl
xor
lret
movsl
dec
xchg
rcrl
fnsave
fnsave
nop
addr16
lock
xrelease
add
add
lea
ds
dec
or
movsl
xor
inc
sbb
and
mov
popa
mov
pop
add
or
lea
inc
lret
sbb
adc
and
dec
sub
clc
inc
inc
sub
test
jbe
pop
scas
fcom
inc
cmpsl
mov
pushf
push
mov
test
mov
adc
and
xchg
lcall
inc
add
shlb
fistl
ret
fdivrs
xlat
mov
and
dec
stos
shll
stc
adc
cwtl
fistpl
jmp
inc
push
cmpsb
idivb
hlt
xchg
loope
mov
push
adc
lret
ja
sub
sub
lea
lods
int
popa
arpl
pusha
mov
mulb
add
mov
adc
mov
dec
loopne
xor
jae
or
mov
and
pop
lret
add
sub
sub
out
outsl
xchg
mov
adc
mov
addl
sbb
repz
scas
xchg
inc
xor
mov
push
fidivrl
push
push
xchg
es
int
icebp
insb
lds
push
xchg
dec
sub
cs
ss
cmp
cltd
nopl
or
adc
in
out
mov
mov
inc
lods
pop
jl
pusha
arpl
jmp
out
cwtl
scas
and
xchg
jmp
fs
fwait
mov
dec
out
pop
iret
cmc
push
pop
sub
and
cmpsb
popa
xor
dec
xor
inc
data16
insb
movsl
pop
xor
in
rcll
imul
sahf
cli
xchg
push
push
and
mov
imulb
fnstcw
movsl
ja
sub
in
in
mov
js
pop
fsubl
mov
add
xchg
xlat
adc
jno
pop
adc
cmp
mov
jmp
jno
and
and
push
sub
sub
test
cli
xor
jbe
push
or
pop
fldenv
loop
xchg
negb
pop
sbb
xor
mov
mov
xor
lds
les
xchg
out
jo
nopl
repz
cs
aaa
ffreep
mov
sbb
and
mov
adcl
cltd
inc
cltd
jp
mov
jo
hlt
mov
jl
cmpsl
and
and
ficomps
inc
lds
std
mov
lds
cwtl
into
fwait
mov
inc
sti
js
scas
and
adc
rol
loop
js
mov
aas
test
outsb
mov
lahf
mov
dec
rcrl
inc
pushf
or
mov
pushf
or
dec
jnp
mov
xor
cwtl
std
pushf
push
movsb
mov
in
cltd
sub
fisubrs
shll
push
icebp
cmc
mul
and
xchg
loopne
jmp
cli
cwtl
shrl
push
push
repnz
cmp
pop
aas
adc
outsb
pop
mov
mov
es
pop
outsl
ja
out
imul
pushf
lret
push
jle
into
sub
pop
sbb
mov
mov
lret
scas
sbb
dec
clc
je
shr
js
add
pusha
fcomi
das
jae
cmp
or
mov
pop
sbb
fidivrl
icebp
or
inc
inc
inc
std
js
enter
xchg
repnz
je
pop
push
sub
test
in
repz
cmpsb
jl
push
xchg
sahf
les
push
insl
mov
mov
cltd
stos
sahf
push
adc
imul
es
in
and
rep
pop
mov
or
adc
xchg
or
pop
push
and
mov
pop
cmp
inc
adc
mov
je
xchg
jns
shll
lods
nop
mov
test
jle
or
lea
arpl
cmpsl
xor
and
insb
mov
inc
jns
int
jle
mov
cmpsb
lods
scas
jle
cmp
fistl
das
mov
ficoml
cs
test
push
mov
imul
lds
fiaddl
lods
pop
in
cld
jle
divb
pop
or
rep
mov
aas
push
jmp
inc
inc
ds
mov
lret
push
mov
jo
shll
or
stc
pop
xor
xor
bound
jl
mov
push
and
jl
dec
sbb
lods
mov
ret
xchg
push
loopne
dec
in
xchg
cs
xchg
mov
outsl
or
arpl
into
outsb
je
sbb
test
popa
jp
outsb
fnstcw
testl
mov
lcall
push
and
lret
xchg
icebp
inc
pop
je
mov
std
push
push
nop
xor
lcall
add
movsl
cld
loope
mov
push
in
pop
lds
sbb
dec
loop
mov
clc
xor
nop
inc
or
dec
jae
clc
jne
cmp
xchg
xor
stos
fsubr
aad
gs
adc
jp
dec
pop
cmp
int3
in
or
pop
lret
jecxz
sbbb
mov
popa
xlat
push
test
pop
dec
into
and
pop
or
loopne
cmp
mov
jle
andl
jp
pop
adc
xchg
xor
push
jns
je
stos
jno
adc
je
push
mov
push
mov
repz
inc
mov
nop
mov
pop
mov
and
mov
ret
enter
mov
ret
lahf
cwtl
cli
stc
sbb
cmp
cmpl
addb
jb
sti
mov
bound
shll
jo
bound
and
outsl
lcall
pop
imul
mov
pop
xchg
ss
int3
dec
sub
rcrl
stos
add
in
and
or
xor
jnp
or
mov
test
mov
aam
ds
push
jno
out
xor
jl
les
adc
adc
pop
and
ret
dec
sub
lcall
cs
insb
sbb
call
pushf
pop
dec
out
iret
push
std
adc
push
subb
push
push
mov
fwait
dec
or
xor
int3
lods
in
fwait
pop
adc
adc
jo
sub
dec
out
cwtl
pop
inc
pushf
adc
clc
sbb
xor
mov
dec
mov
pop
sbb
ljmp
xlat
mov
in
jmp
pop
lds
pop
stos
xchg
rcr
adc
mov
fstps
cmp
add
and
xchg
jl
or
loopne
in
in
pop
and
fistpl
add
repz
addl
in
inc
dec
dec
jne
lock
add
loope
push
repz
inc
lds
jnp
lahf
xchg
hlt
divb
jae
out
cmpsl
xor
mov
jb
cmc
xchg
das
arpl
outsb
ds
clc
call
xor
jnp
sub
adc
lret
popa
aam
pop
mov
push
jno
cmpsl
mov
imul
mov
adcl
sbb
mov
cltd
xchg
add
fdivl
pop
add
lds
paddusw
mov
out
cmp
cmp
popa
push
add
pop
mov
dec
xor
in
mov
cmp
mov
orl
mov
cmp
decl
adc
std
in
hlt
loop
dec
mov
push
sti
lcall
jae
cmp
lea
aad
jle
scas
sti
leave
push
dec
icebp
push
pop
sbb
faddl
cmp
popa
or
aam
adc
inc
mov
movsb
mov
cwtl
loop
mov
std
jecxz
adc
xchg
jmp
mov
xchg
or
dec
and
aaa
inc
sbb
loop
icebp
xchg
imul
lea
cmpsb
jno
xor
shll
repz
inc
sub
aas
lock
inc
es
stos
push
add
inc
xchg
js
sti
lock
mov
pop
inc
inc
or
pop
fdivl
das
xchg
imul
imul
into
lds
lods
xor
scas
lods
sbb
mov
mov
pop
xor
mov
dec
jns
push
add
dec
inc
iret
sbb
cmp
push
inc
scas
ret
stc
test
xchg
push
xchg
and
gs
loopne
and
mov
inc
dec
test
not
roll
les
out
push
mov
int3
inc
pop
ret
push
std
sbb
xchg
xchg
int
repnz
mov
pop
mov
jg
insb
mov
pop
add
es
add
inc
cs
mov
pop
pop
mov
add
out
adc
leave
pop
int3
outsb
mov
add
pop
lret
jmp
jg
outsb
mov
ljmp
arpl
je
loopne
dec
pop
cmp
cld
push
ja
sbb
add
insl
std
and
push
or
popa
gs
fwait
movsb
cmc
enter
push
adcl
lret
dec
fdivrs
mov
push
loopne
adc
adc
js
xor
jb
ljmp
xchg
aas
sbb
pop
push
fwait
inc
loope
or
add
lods
adc
jno
rorb
add
pusha
xchg
jbe
push
cmp
add
push
mulb
cltd
sti
pop
pop
mov
addr16
imul
xor
jns
dec
jmp
jo
mov
sti
shrb
out
mov
inc
insb
nop
sahf
clc
not
and
cmp
cli
sbb
shr
sbb
cmpb
ret
xlat
jp
imul
mov
addr16
mov
xor
sbb
cmp
ds
enter
mov
pop
mov
rcrl
int
jb
jns
mov
cmp
xchg
jge
out
pop
xor
mov
xor
sbb
xchg
cmp
movb
cmp
aam
movsb
lods
xchg
cmpsb
adcl
lahf
sar
lcall
mov
cltd
out
scas
sub
mov
pop
mov
mov
loope
and
mov
imulb
adc
sub
sbbb
stos
fisttpll
cs
int
push
pop
mov
aas
mov
jecxz
rcll
loopne
pop
xor
jecxz
jb
pop
sarl
adc
insl
loope
out
dec
ret
inc
ja
mov
cmpsb
inc
fcom
inc
mov
call
cwtl
cmc
test
test
lcall
sub
push
ss
daa
push
int
cmc
xor
inc
popa
or
shll
cltd
in
dec
cmpsl
fisttps
and
inc
mov
mov
dec
mov
push
in
mov
into
push
out
xor
and
xchg
arpl
jno
pop
cmc
cs
and
dec
dec
xchg
xchg
sub
mov
xor
adc
int3
sub
sub
pushf
cmpsl
lahf
ss
imul
xchg
jecxz
pop
mov
pop
in
into
sahf
mov
test
jae
loope,pn
mov
out
push
test
roll
mov
ucomiss
xorl
in
push
and
and
call
push
outsb
dec
xchg
arpl
rclb
mov
ja
aad
and
popa
scas
xchg
lcall
sbb
mov
std
outsb
inc
xchg
sub
cmp
dec
mov
icebp
add
add
mov
icebp
push
loope
test
sbb
gs
sbb
xor
out
inc
out
push
mov
repnz
dec
inc
fwait
rol
imul
jmp
jb
loopne
mov
and
mov
adc
sub
test
add
lret
repnz
xchg
addr16
push
dec
dec
aad
cwtl
xor
push
mov
fstp
pop
pop
out
sbb
mov
push
movsl
dec
xor
scas
adc
jp
inc
mov
adc
lret
js
push
mov
and
out
enter
pop
leave
loop
xor
and
popa
mov
xchg
add
gs
orb
nop
ss
lock
insb
stc
pushf
cmpsb
popa
push
jmp
lods
pusha
sub
adc
inc
pop
xor
mov
mov
inc
mov
add
scas
dec
push
push
jno
das
xchg
fdivrl
sbb
lods
xor
xchg
xchg
and
mov
push
nopl
test
int
inc
xchg
push
aad
inc
sti
push
fsin
xor
cli
jo
mov
cmp
and
sbb
sub
cmp
cld
jecxz
bound
push
mov
test
roll
cmp
lret
les
or
insl
cltd
hlt
sub
xor
les
lcall
jo
clc
push
nopl
call
mov
dec
fldenv
stos
jns
jae
jo
repz
or
mov
xchg
lcall
jo
clc
inc
fstps
mov
pop
inc
out
and
ljmp
jmp
cwtl
pop
std
popf
inc
add
fdivrs
lss
sub
inc
sbb
mov
add
test
popa
sbb
xor
out
lods
mov
ret
fcomi
mov
inc
inc
in
aam
mov
cmpsb
loope
sub
fdivl
pop
jmp
sahf
dec
repnz
rcrl
xchg
xchg
jl
decb
fstpt
xchg
aaa
pusha
xchg
xchg
sub
call
fstps
xor
mov
dec
or
test
mov
hlt
adc
lods
jmp
sti
mov
push
adc
dec
jmp
xor
nop
out
or
lret
stos
lahf
adc
cltd
mov
out
loope
mov
pop
fdivp
ja
in
std
xchg
push
cmp
pop
cmp
xchg
pop
xchg
shrb
nop
mov
cli
mov
xor
test
push
push
jecxz
notl
xchg
sub
call
dec
mov
test
dec
arpl
hlt
loope
mov
rol
cmp
imul
shrb
scas
sbb
xor
out
mov
adc
or
xor
cmp
je,pn
xor
mov
add
mov
dec
or
mov
push
lret
cmpxchg
push
jmp
adc
jmp
dec
inc
mov
sbb
clc
mov
or
push
jl
int3
idivb
xor
ficompl
jne
test
mov
mov
jl
xchg
jae
push
inc
push
cmp
mov
icebp
outsb
int3
movsl
jle
data16
decl
sbb
mov
test
dec
gs
aas
sbb
push
mov
add
mov
aaa
in
inc
pushf
jne
les
das
inc
jne
insl
stos
das
xchg
js
mov
ja
cmp
divb
dec
out
addr16
and
loopne
cs
lods
cmp
cmpsb
xchg
clc
and
sarl
jl
pushaw
mov
add
int3
cli
movsb
test
jb
mov
inc
xchg
xor
stc
cltd
mov
test
stos
mov
repz
mov
rcr
or
push
sbb
pop
push
adc
shrb
out
test
jbe
fisubrl
xchg
aad
das
je
sti
aad
divb
jne
shll
loope
ret
fwait
clc
insl
sti
adc
dec
jge
pop
fstpl
xor
inc
inc
inc
adc
mov
in
pop
insb
lods
xor
pop
sub
nop
subb
jle
lahf
loopne
sar
popf
scas
sub
cs
dec
xor
pop
roll
mov
outsl
lret
test
lret
ret
fidivrl
push
ja
stc
lcall
jns
popa
fistpll
gs
lea
adc
inc
cmc
lods
popl
out
adc
dec
mov
insl
sub
jbe
mov
ret
and
stc
fistl
imul
aas
jne
adc
lret
dec
jmp
movsb
scas
in
push
ljmp
popa
xlat
pop
mov
push
mov
jmp
lock
adc
leave
jecxz
cld
and
add
mov
aad
dec
mov
xchg
cs
cmp
subl
aam
and
sbb
push
sbb
jo
lods
loope
lods
push
pusha
jle
push
pusha
stc
dec
aam
pop
xchg
inc
dec
mov
xor
dec
dec
hlt
mov
xor
and
adc
sar
sub
mov
add
mov
mov
in
addr16
jl
or
adc
je
adc
pop
test
test
rorb
in
pusha
test
xchg
mov
movsb
fistpll
out
cmp
cltd
es
movsl
cwtl
xchg
stos
lds
mov
ja
xchg
mov
xor
mov
icebp
clc
rorl
inc
pop
loopne
mov
xor
repz
pop
xor
pushf
mov
notl
cmp
xor
xor
and
push
sub
repz
and
test
in
in
fwait
push
stos
dec
or
popf
pop
call
push
pusha
jmp
xchg
dec
sub
xchg
inc
pusha
fists
mov
mov
ljmp
out
mov
negl
lods
add
xorl
xchg
jne
or
cmp
cmc
sbb
inc
push
pop
shr
and
add
cmp
adc
pop
pop
icebp
push
pop
and
pop
movsl
mov
mov
and
mov
dec
cmp
dec
rorb
in
cmp
lea
push
je
aas
negl
dec
es
loopne
mov
xor
sbb
repnz
mov
imul
je
dec
add
fstps
pop
adc
into
xchg
push
loope
int3
jmp
insl
pushf
outsb
call
ret
loope
das
cmpl
movsb
mov
test
mov
push
pop
adc
push
inc
push
cwtl
outsl
cs
sbb
dec
test
gs
mov
les
push
push
pop
push
imul
push
out
js
push
loopne
das
arpl
adc
test
pop
loope
andb
fdivrl
sub
scas
lds
cmpsb
fs
sbb
xor
negb
in
jge
sahf
hlt
or
lea
fcompl
rcrb
mov
jmp
fdivrs
test
in
fcoml
and
dec
sbb
jge
jbe
mov
xchg
iret
cmpl
inc
mov
mov
lods
mov
mov
subl
ss
aad
shlb
dec
xadd
sarb
xchg
aaa
js
jnp
or
sub
mov
sbb
out
into
sbb
and
sahf
pushaw
xchg
out
int3
hlt
sahf
shrb
push
inc
inc
xorb
pop
scas
les
or
pop
sahf
data16
jmp
push
and
insl
shlb
je
fists
sub
pop
shll
je
sbb
inc
loopne
ret
sbb
test
mov
dec
scas
jl
jmp
mov
bnd
fisubrs
inc
cli
adc
and
push
loop
add
or
in
lock
es
dec
xor
movsb
jne
dec
cmpsl
sbb
outsb
inc
lods
xlat
jo
cltd
pop
clc
adc
test
dec
cmp
sahf
pusha
imul
xchg
daa
stos
jno
mov
and
cmp
in
aad
mov
mov
xor
pop
pop
out
sbb
sbb
hlt
xor
mov
jb
xor
nop
aam
stos
stos
mov
dec
xor
push
int3
enter
fs
push
or
jp
mov
cmp
cmp
xchg
adc
mov
or
popl
or
jmp
imul
int3
push
loope
and
pop
das
jb
je
jge
call
mov
aaa
inc
cmpsl
movsb
xchg
sbb
movsl
mov
xchg
bound
daa
push
add
cmp
repnz
sbb
and
fbstp
lcall
mov
mov
push
mov
loope
psllw
shrb
dec
in
mov
dec
std
test
aad
jl
sbb
dec
pop
cmp
mov
test
lods
cmpb
push
mov
into
push
push
lds
cli
dec
xchg
xchg
or
jmp
idiv
test
cltd
and
pop
test
jnp
cmp
push
or
shll
adc
jmp
cs
and
adcb
xchg
popf
push
sahf
pop
mov
sub
icebp
cmpl
jmp
jp
mov
push
idivl
mov
xor
scas
daa
das
movsl
lcall
je
sub
inc
or
ret
rcrl
iret
or
es
pop
ja
mov
sub
push
cmp
mov
mov
scas
push
xorl
mov
dec
pop
fs
jb
inc
adc
xchg
loopne
inc
mov
sub
jbe
out
mov
jbe
push
push
nop
lock
push
testb
jl
jl
jbe
test
icebp
rolb
aas
repnz
pushl
sbb
mov
mov
or
mov
pop
pop
jb
push
mov
mull
adc
imul
insb
and
mov
sub
push
or
push
or
aam
out
js
push
cmp
sahf
jo
or
sti
push
add
mul
insl
jns
ljmp
test
xchg
mov
mov
adc
add
push
movl
adc
popa
or
mov
pop
out
xchg
push
int3
js
movsb
fidivs
clc
ss
outsl
cmpsl
sbb
add
pop
fbld
imull
aam
imul
inc
jbe
pop
lock
iret
outsl
or
mov
in
cmp
subl
push
sti
fwait
sbb
nop
xor
xchg
mov
cmp
lea
fwait
cmp
push
enter
jo
push
int3
jl
fucomip
mov
and
and
test
dec
sub
push
insb
ja
in
or
or
add
repz
js
clc
mov
xchg
sbb
pop
mov
cltd
xor
xchg
xchg
inc
test
pushf
or
arpl
jl
clc
ljmp
inc
scas
mov
jns
outsl
and
out
add
mov
lea
aad
int3
leave
sar
sbb
cwtl
pop
lods
xchg
or
push
fisubrl
sti
pop
or
test
inc
imul
ljmp
shrb
popa
mov
pop
mov
lods
pop
xor
ret
cmpsl
cwtl
add
sub
pop
mov
shll
mov
loopne
lcall
jle
pop
lahf
cmp
lcall
jecxz
xor
mov
cmpsb
mov
and
pop
dec
cmpsb
adc
stc
pop
lods
fldl
adc
and
dec
xor
in
rcrb
popf
data16
es
jns
daa
sbb
popa
hlt
in
sbb
xchg
cmpsb
add
mov
or
dec
outsb
cmp
sbb
add
ljmp
push
cmp
mov
jmp
add
cwtl
sub
lds
cld
and
xchg
aad
mov
scas
cmpsb
cld
and
insl
scas
sbb
int
fisubrs
sbb
out
push
roll
add
mov
mov
imul
jae
jne
imul
and
cmpl
ret
pop
js
lcall
mov
and
mov
mov
ds
xcrypt-cbc
cmpsl
xchg
loopne
sbb
and
test
gs
adc
es
adc
sub
add
gs
bnd
lock
pop
push
pusha
xor
add
decb
xchg
mov
fsts
inc
lods
push
inc
dec
iret
cmp
dec
movsl
cs
enter
nop
mov
jne
pop
push
fldt
into
xchg
pop
xchg
jmp
or
jne
sbb
fwait
inc
ret
sbb
jbe
fldz
addr16
push
ss
int3
jbe
sbb
mov
mov
lock
add
mov
mov
and
mov
cmp
adc
sbb
data16
jg
sbb
test
loope
jge
js
mov
inc
enter
rcrl
pop
sub
shl
xor
sub
and
in
fisttpl
fdiv
mov
sarl
loop
cmp
leave
or
lods
xchg
fxch
jnp
pop
mov
cmpsl
mov
push
lret
push
sub
inc
loope
mov
adc
fcmovnu
fmuls
nop
cltd
fildll
fwait
ja
mulb
std
outsl
sbb
cmpsl
push
sbb
outsl
mov
negl
in
out
cmc
xchg
cmp
ja
pop
sti
unpckhps
lcall
cwtl
add
pop
scas
cmp
sbb
inc
push
jg
icebp
inc
mov
int3
mov
dec
cmc
iret
shl
fsincos
and
stc
xchg
inc
aam
popf
mov
and
jne
sahf
scas
xchg
sbb
scas
test
ds
scas
mov
push
dec
jnp
repnz
cmc
pop
add
sub
fucomip
pop
iret
imul
push
lock
in
in
sti
mov
outsl
pop
orl
addb
xorb
insl
or
mov
mov
cmp
cmp
es
fcmovu
out
sbb
sbbb
cmp
cs
inc
sahf
leave
or
mov
dec
enter
dec
call
pop
dec
push
rcll
or
repz
iret
xor
lods
rol
enter
sbb
add
popa
pop
mov
pusha
or
and
lret
mov
lcall
popa
jle
mov
xchg
xlat
mov
movsb
xchg
out
mov
outsb
jne
and
jecxz
jnp
mov
orb
xor
xlat
mov
pusha
inc
loop
sbb
into
in
cld
insl
mov
lret
jecxz
mov
fisttpl
arpl
sub
push
pop
shl
mov
cwtl
fidivrs
ljmp
jno
mov
xchg
and
mov
xchg
ljmp
leave
arpl
arpl
mov
popa
insb
jecxz
mov
aas
push
daa
mov
sbb
orb
mov
enter
dec
pop
pop
mov
sahf
xlat
mov
add
sbb
outsb
test
filds
sub
add
jns
sub
xor
scas
loope
rcrl
in
and
jb
inc
xor
insl
adc
xor
aas
int
xlat
add
in
das
subl
rcrb
adc
xor
xchg
lea
or
lea
xchg
lea
aad
ljmp
cltd
jb
clc
cmpsl
sahf
stc
sub
jne
add
out
out
decb
mov
jae
nop
mov
int3
pop
je
adc
sub
sub
ljmp
stc
mov
or
scas
into
int
cmp
jb
add
mov
das
inc
mov
and
lods
mov
fistpll
dec
sub
out
mov
dec
les
je
je
fisttpl
in
or
pop
pushf
dec
xor
pop
fbld
icebp
xchg
mov
sbb
shrb
add
loopne
xchg
in
loop
mov
arpl
out
or
dec
repz
mov
js
jl
push
cmpb
add
xchg
idivb
shl
add
fsubs
push
xchg
out
add
pop
rdtsc
fadds
sbb
sbb
repnz
push
lods
leave
das
call
xchg
cltd
stc
ret
mov
adc
dec
ret
lea
inc
ds
xchg
inc
and
je
pop
jecxz
mov
les
mov
mov
repnz
push
clc
pop
jnp
sarl
sbb
inc
xchg
cltd
pop
cmpb
mov
or
and
das
in
sbb
je
mov
dec
dec
push
in
sub
push
loop
aad
push
adc
pop
fimuls
js
cmc
mov
xor
in
sahf
pushf
or
outsb
pop
mov
xchg
lret
pop
mov
xor
jl
sub
adc
lahf
neg
push
je
popa
fistl
aas
push
add
shl
fldlg2
lods
pop
cmp
or
enter
fs
mov
popf
cmpsl
lret
lods
loope
adc
test
std
out
xchg
out
pop
stc
cwtl
ret
leave
jb
xchg
mov
and
push
mov
jae
xor
xor
std
push
cs
sti
mov
daa
inc
add
lock
cmc
js
mov
sbb
loopne
jne
inc
jl
or
jbe
or
push
imul
pop
out
ja
and
jmp
jno
in
pop
push
xor
aad
das
cmp
cmpsl
lea
cld
ja
aam
sbbl
cwtl
filds
push
adc
std
scas
cmp
jmp
dec
or
shlb
mov
pop
cmp
test
mov
lods
lahf
push
jp
scas
sbb
jae
stos
push
loope
int3
mov
jmp
and
cmpsb
in
out
mov
jge
mov
sub
lret
mov
sbb
lods
push
push
dec
bound
out
shrb
in
imul
pop
mov
test
sub
das
xor
insl
mov
sbb
inc
lods
imulb
pop
clc
loop
jl
les
jnp
mov
cs
data16
fstpl
push
jo
mov
add
jge
and
xor
and
mov
push
movsl
adc
pop
ret
pop
sub
sbb
add
sarl
rcrl
add
add
and
pop
cmp
out
adc
test
ss
adc
mov
shll
lahf
add
movsb
cwtl
pop
imul
test
or
mov
xchg
push
movsb
clc
out
bound
mov
movsb
ja
and
pop
inc
push
xor
imul
and
negl
lock
cmp
or
inc
fldl
jmp
inc
add
mov
push
xchg
mov
jecxz
xor
xchg
sarl
idivl
aaa
xchg
jg
add
test
negb
pop
and
loop
mov
cwtl
xor
jle
push
in
lock
mov
xchg
std
mov
mov
xor
dec
lods
into
into
push
repnz
xor
xlat
arpl
mov
mov
jne
push
js
fwait
and
sub
or
outsb
fstps
jge
or
pop
ljmp
lods
hlt
pop
mov
enter
cmp
scas
movsb
jl
popf
dec
xor
xchg
out
and
xlat
cmp
pop
out
insl
repz
inc
je
paddsb
and
cltd
lock
jae
push
test
or
adc
sub
fiadds
push
movsl
int3
inc
insl
les
loopne
pop
sbb
adc
cld
push
mov
testl
jnp
push
scas
mov
push
fists
push
test
jae
cwtl
insb
push
and
loopne
xchg
std
jecxz
cs
sub
push
jb
dec
cmp
xchg
sbb
negb
add
das
push
jmp
into
xor
lods
push
sbbb
sub
jo
shrl
mov
adc
sbb
lahf
cmpsb
mov
push
pop
jbe
lock
repz
in
cmp
adc
sub
xchg
fidivrs
stc
call
das
push
xchg
fcoml
pop
call
pusha
sub
jg
sahf
sub
mov
imul
inc
rclb
les
mov
xor
xlat
imul
cltd
push
jl
mov
cwtl
pop
cmp
push
xchg
pop
push
cmp
add
ds
mov
inc
push
test
stc
fistpll
jge
mov
or
mov
mov
push
pop
push
lahf
pop
sub
in
aad
cmpb
out
insl
inc
sub
and
xchg
xorl
fcmovnu
mov
mov
int3
ds
inc
aas
div
popf
subb
inc
test
scas
cmp
and
loopne
imulb
inc
cmpsl
popa
orb
jecxz
les
adc
and
and
jmp
aam
icebp
fimuls
pusha
pop
sbb
inc
lea
jo
or
call
fldl
popa
xchg
out
add
movsl
or
stc
jge
mov
cmp
cmp
push
push
popf
xchg
gs
push
outsb
mov
gs
cmc
std
test
push
rcll
call
xor
mov
lret
sbb
mov
sbb
push
rcl
fists
mov
incb
test
push
xor
in
lds
pop
icebp
cmp
mov
sti
mov
xor
data16
pop
insb
loope
dec
jb
mov
arpl
mov
dec
cmp
pop
mov
jae
jbe
or
js
test
decb
aaa
and
sbb
add
ja
int3
jae
mov
divb
sarl
arpl
fwait
popa
add
jbe
imul
aas
pop
cltd
loop
movsl
pop
push
lock
aam
ret
lret
mov
pop
repnz
gs
push
gs
fidivrs
jmp
add
outsb
mov
stos
lds
dec
jbe
xchg
mov
jbe
cmp
sbb
test
ss
mov
sub
mov
rorl
addl
outsb
shl
shll
and
fildll
cltd
std
arpl
movb
dec
call
jp
and
mov
pop
repnz
ss
push
mov
addr16
pop
int3
ljmp
sbb
or
test
sbb
mov
pop
mov
cmp
mov
movsb
adc
insb
push
and
dec
dec
out
out
or
lock
mov
inc
loop
out
xlat
pop
adc
push
aad
hlt
mov
hlt
fsubl
leave
jns
insb
pop
and
sbbb
push
lcall
and
bound
fs
inc
push
out
mov
push
jle
cmp
push
rorb
mov
test
adc
push
xchg
or
mov
jmp
subb
cmp
ret
jmp
inc
or
sar
in
lret
aam
cmpsb
push
or
xorl
pop
mov
neg
outsl
insl
adc
mov
inc
lea
pushf
loopne
cmpl
cmp
leave
xchg
fisubrl
test
test
enter
mov
mov
mov
pushf
sahf
mov
push
and
mov
and
jae
aad
les
xor
aas
shr
push
testl
add
das
bound
je
loopne
add
jmp
xchg
pusha
subb
leave
data16
cli
and
and
fsub
imul
rcl
inc
jns
add
into
bound
data16
dec
es
or
mov
jle
lods
pusha
ret
bound
jo
fldl
cmp
mov
arpl
mov
sbb
adcb
and
sbb
mov
and
pop
jno
push
std
ja
cmp
jbe
mov
mov
add
aam
scas
mov
xor
imul
xchg
mov
icebp
adc
fdivrl
mov
jg
icebp
sub
les
icebp
test
mov
aam
fistpl
les
daa
fwait
loopne
inc
cmp
cmpsl
jno
mov
mov
xchg
popa
sbb
jmp
stos
outsl
sbb
jl
ret
xor
mov
mov
lea
push
jp
mov
pop
dec
int3
ss
out
xchg
lcall
dec
shll
lock
adc
stos
mov
lahf
or
fildll
rcr
scas
pop
loop
in
hlt
fistpll
inc
xchg
imul
daa
daa
pop
scas
gs
mov
pop
movsl
rolb
int3
mov
sub
xchg
inc
decb
mov
mov
cltd
push
push
icebp
push
fs
jne
jno
std
testb
test
mov
out
in
pop
shl
rolb
adc
sub
lret
sbb
cmp
jmp
jge
pop
clc
sbb
rcl
lahf
add
rcr
xor
fdivrl
push
test
push
sbb
jo
decl
push
mov
arpl
insl
and
andl
cwtl
xlat
mov
or
int3
xchg
rcl
flds
xchg
adc
sti
sub
arpl
xor
cs
outsb
lods
xchg
xor
sbb
addr16
out
mov
pop
xor
adc
out
lods
add
test
pop
push
mov
jnp
mov
loopne
jne
mov
and
ss
mov
or
add
xchg
loope
lock
sub
repnz
test
push
movsl
bsf
add
cmp
push
or
stc
ret
inc
ret
push
pushf
mov
inc
push
mov
fs
and
popa
in
push
mov
sbb
bound
lock
outsl
add
push
mov
push
mov
cli
movsb
adc
xchg
push
pop
call
pusha
vmovsldup
and
jne
aad
imul
cs
scas
push
pop
sbb
out
int
push
and
sbb
adc
adc
dec
lods
jne
hlt
das
movb
ss
adc
cmp
xchg
out
jl
hlt
out
xchg
inc
fneni(8087
pop
in
mov
jge
mov
cs
cmp
js
fisubrl
xchg
jmp
fmulp
stos
pop
add
ds
pop
fs
mov
ret
into
popf
mov
negb
mov
jmp
lods
ljmp
leave
xchg
ret
cmp
xor
test
scas
add
push
stos
pop
inc
cmpsb
insl
fwait
inc
xlat
push
popl
pop
rcrb
pop
jle
imul
mov
sub
insb
insl
sbbb
fs
add
fs
jne
xchg
cmpsl
cltd
pop
push
notl
popa
mov
rorb
or
push
mov
push
sbb
bound
cld
mov
xlat
and
into
add
nop
imul
dec
sub
fcomi
push
filds
sahf
ja
push
arpl
mov
cmpsb
mov
and
and
and
mov
ret
adc
repz
pop
fwait
ret
and
xor
in
jo
aad
push
jp
xchg
std
lock
in
pop
imul
lock
pop
jge
iret
mov
sti
jns
psrad
cld
daa
jns
mov
mov
or
mov
sbbb
popf
sub
fimull
mov
add
mov
arpl
cmp
in
or
xorb
rorl
jl
loopne
ffreep
pop
inc
mov
es
icebp
shlb
jp
xor
xlat
jnp
test
fcmovnu
fsubrl
lds
jp
test
out
mov
daa
sbb
push
push
shlb
xchg
push
or
fistpl
and
adc
xor
rcr
push
stc
xlat
repz
or
loope
mov
xchg
aaa
push
ss
repz
je
push
shll
mov
mov
xor
adc
dec
fucomip
aam
dec
xor
jl
les
insl
cmp
add
dec
bound
sub
pop
xchg
sub
lea
add
dec
cmp
or
mov
test
fcoms
leave
jge
jb
out
jge
dec
inc
bswap
jb
rclb
gs
das
adc
fldcw
into
fucomip
push
xor
mov
pusha
mov
test
inc
push
mov
xchg
mov
mov
imul
roll
scas
ja
andl
lock
mov
ljmp
leave
mov
xor
lods
jnp
inc
xchg
cmc
test
test
add
and
and
mov
lret
int3
jp
add
ds
jo
jmp
inc
push
sub
mulb
cli
int3
mov
mov
movsb
or
popa
xorb
push
dec
inc
mov
loopne
out
mov
push
mov
mov
in
push
push
clc
mov
push
inc
lock
cmp
aam
pop
jl
cli
aas
repnz
cmpsl
adc
mov
jl
or
out
subb
sbb
enter
mov
push
iret
xchg
dec
mov
std
lock
dec
outsb
xchg
or
cmpsl
or
push
xchg
push
mov
in
add
enter
lock
cmp
shrl
sub
xor
divb
and
in
jp
jecxz
enter
xchg
shll
sbb
leave
xlat
std
fs
ja
aaa
leave
cli
flds
test
xchg
dec
faddl
fcompl
insb
clc
or
sbb
icebp
adcb
xchg
jbe
or
inc
pop
stc
les
mov
aad
dec
dec
sub
inc
jb
aad
pop
gs
rcl
call
outsb
adc
out
lods
pusha
in
cmp
jle
pop
lret
sbb
or
sbb
jnp
in
std
lret
or
cli
test
jl
add
movsb
loope
jp
xor
xchg
popf
mov
mov
pop
adc
inc
mov
in
lods
ja
icebp
push
jb
add
or
outsl
xor
lock
enter
inc
cmp
popa
cmpsb
test
clc
test
pop
dec
stos
not
mov
mov
cmp
fadd
ja
pop
fisttpll
xchg
je
in
ds
sub
je
jecxz
mov
mov
cmp
add
fwait
out
cmp
ja
rolb
cmp
sbb
mov
inc
testl
jmp
xor
dec
inc
xor
push
mov
iret
hlt
jecxz
pop
adc
push
lret
cwtl
out
mov
mov
scas
sbb
add
pop
jnp
cmpsl
pop
adc
scas
scas
dec
nop
dec
dec
push
mov
outsl
nop
fs
hlt
mov
xor
repnz
jg
fidivrl
inc
movsb
adc
inc
pop
xchg
mov
xorb
pushf
aam
jo
push
loope
adc
xor
mov
scas
add
mov
pushf
mov
xchg
cmpsb
lock
repz
push
fsubr
jo
jle
inc
jns
xchg
push
lods
push
sub
in
sbb
imul
movsb
pop
adc
dec
popf
test
mov
nop
xchg
sbb
mov
xchg
lods
hlt
repz
shld
sbb
mov
lock
fidivrl
test
or
add
addr16
dec
dec
cld
push
xor
imul
push
sub
mov
je
mov
das
and
mov
xchg
ja
cltd
jb
lods
cmp
loop
out
add
pusha
lcall
hlt
mov
push
add
jg
or
adc
mov
imul
iret
mov
push
dec
fwait
inc
push
push
push
sub
lcall
sti
ds
inc
shrl
mov
mov
adc
add
and
in
shl
test
nopl
in
xor
dec
inc
mov
pop
jp
dec
div
pop
pop
rcll
testb
pop
push
inc
das
add
stos
es
sbb
mov
loopne
mov
dec
data16
lea
and
rorl
push
int3
lock
cld
movsb
jmp
repz
clc
sub
add
int
pop
fistps
cmp
cwtl
adc
pop
mov
stos
and
fadd
mov
xor
fcompl
push
fs
mov
inc
outsl
aad
idivb
dec
scas
shrb
push
sldt
or
loope
add
pop
sbb
sub
sbb
roll
pushf
daa
fiaddl
pop
movsb
pcmpgtb
lret
dec
insl
call
xchg
dec
cmpsb
jnp
mov
pushf
or
scas
jp
lds
jmp
inc
adc
mov
test
fisubl
int3
xchg
add
scas
push
push
aad
xor
jmp
and
sub
push
sbb
andb
in
testl
mov
fcoms
push
sbb
lret
sbb
cmp
in
fidivrl
xchg
or
cmp
lods
es
ret
mov
or
or
push
outsb
cs
and
xchg
cwtl
mov
xchg
sub
mov
push
popa
add
aad
lret
leave
popa
xchg
arpl
lea
or
addr16
mov
fs
imul
inc
das
jl
xchg
sbb
loope
cmp
iret
cmc
sub
xchg
or
push
dec
jp
std
popf
ja
adc
inc
push
mov
xchg
xchg
push
cmpsl
mov
dec
xor
pop
add
insl
cmp
mov
xor
test
jo
fstl
mov
cltd
pop
popa
outsb
adc
and
out
clc
repnz
push
mov
gs
xchg
nop
xchg
mov
add
adc
aam
push
sub
pop
sbb
cmp
in
or
pop
mov
gs
mov
cmp
xchg
loop
jecxz
xorb
aad
aaa
mov
sahf
jns
out
push
int3
xor
mov
popf
push
add
jns
mov
test
mov
mov
adc
push
jge
or
dec
imul
jl
hlt
jp
test
jb
aas
arpl
mov
fisubrs
std
outsb
int
push
pop
push
xchg
loop
std
mov
jae
fnstcw
std
xchg
out
dec
popf
pop
lahf
push
mov
inc
shr
mov
ffree
aas
mov
lods
cmp
lcall
xchg
or
arpl
jle
mov
xchg
jle
xchg
add
mov
es
lret
or
pop
icebp
and
dec
jmp
outsl
jo
pop
mov
fs
loop
ja
aas
xor
jl
xor
aas
decl
dec
out
jbe
rclb
jecxz
dec
rcr
mov
cli
ror
or
test
fadd
pop
push
xor
or
imul
sub
mov
sub
rclb
xchg
xchg
in
and
xor
cwtl
scas
inc
sysenter
icebp
and
ret
adc
xor
les
push
inc
in
mov
fdiv
mov
cmpsl
icebp
cltd
scas
shrb
popa
lret
fistl
testb
xor
xor
add
and
jg
lcall
xor
ljmp
movsb
push
sub
sbb
and
adc
sarl
mov
mov
stc
lcall
jo
jb
cmp
push
in
mov
xor
inc
data16
mov
cli
cmpsb
adc
arpl
sbb
addr16
push
sahf
scas
fprem1
add
sub
pop
daa
subb
hlt
into
dec
add
cmp
cli
or
jno
xor
cs
push
mov
les
mov
xchg
pop
cmp
mov
push
fnstenv
js
jle
insb
sbb
fxch
das
add
dec
clc
mov
xlat
pop
inc
rcr
adc
in
xchg
jg
jle
mov
cli
xor
inc
sub
xor
dec
aam
mov
mov
mov
lret
nop/reserved
test
lret
pop
pop
ret
add
sub
push
mov
add
movd
or
stc
mov
xor
dec
insb
jns
xchg
fidivrs
add
push
sbb
mov
shrl
and
shlb
jmp
cs
or
sbb
pop
outsl
sub
jle
pop
xlat
inc
mov
pop
inc
in
loop
xchg
cmp
inc
fcmovnu
push
pushf
std
jg
cltd
gs
mov
imul
mov
lds
clc
sub
leave
rcll
loop
and
pop
hlt
jne
or
das
push
push
inc
inc
fwait
imul
xchg
push
loopne
in
les
test
hlt
fldcw
pop
sub
xchg
sbb
lret
and
gs
data16
loopne
dec
loopne
jnp
insl
sub
or
xchg
jl
das
adc
jnp
decb
push
sub
rclb
shll
fs
xchg
int
and
adc
or
sbb
jecxz
out
push
jge
mov
loopne
lret
imul
movsl
push
mov
in
pop
into
mov
insl
adc
les
dec
inc
insl
and
or
sub
fdivs
andb
push
scas
push
js
adc
add
dec
addr16
jnp
outsb
int3
mov
aaa
sti
mov
stos
leave
loopne
lods
pop
jo
dec
xchg
mov
and
es
scas
and
or
xchg
pop
pop
rcll
cmp
lock
sub
mov
std
push
and
inc
faddl
inc
or
mov
dec
xlat
nop
andb
lds
outsb
and
jg
dec
push
int
lods
xor
inc
jmp
xor
mov
xchg
sub
xor
roll
lret
cwtl
push
push
aad
inc
fdivrs
or
lds
movsb
fildll
fbstp
xor
jl
pop
inc
dec
imul
mov
insl
or
movb
mov
andb
jecxz
icebp
pop
adc
test
adc
add
jle
jmp
add
fs
fsubs
inc
les
xchg
stc
add
jo
and
test
inc
sub
mov
mov
push
push
push
and
std
adc
cmc
lods
jbe
sub
and
and
insl
mov
add
lock
dec
cmpsl
rcrl
rep
aaa
push
mov
push
inc
jge
adc
fwait
xor
dec
addr16
jl
in
in
mov
pop
cmp
mov
cmp
dec
and
mulw
and
cmp
aaa
sarb
fbstp
mov
mov
stos
in
sbb
cmp
test
push
inc
jge
stos
push
cmpsb
aam
aam
cmp
aam
xchg
popf
add
test
shll
lret
and
pop
jge
pop
xchg
ds
call
mov
push
lds
test
push
repnz
ja
xchg
pop
jnp
in
and
scas
mulb
dec
inc
lock
imul
or
jb
mov
icebp
ret
inc
cmp
test
push
jns
inc
jns
lret
xchg
cmpsb
cmp
divb
ffree
xor
cmpsl
fidivrl
sbb
scas
push
cltd
add
popa
test
addr16
push
dec
xor
fsubs
jb
cwtl
test
jecxz
jge
lret
repz
popa
push
stos
add
cmp
mov
cmp
pop
jmp
push
fwait
mov
in
cmpsb
fs
mov
out
mov
cmovnp
lods
outsb
mov
inc
mov
scas
mov
push
das
sti
push
xchg
mov
test
add
mov
into
imul
inc
pop
pop
dec
or
fimuls
sub
jne
sbbb
sub
adc
lret
or
enter
repnz
fnstsw
mov
fstpl
rcll
ficoms
cmp
add
je
out
mov
loope
fs
cmpsb
mov
out
dec
lea
test
loopne
sbb
scas
xor
push
and
and
lcall
cmp
aaa
xor
fadd
adc
dec
lcall
push
dec
xchg
inc
inc
jns
test
adc
push
sbb
xor
fdivp
mov
adc
or
pop
mov
and
bound
div
iret
xchg
cmp
outsb
jne
shrb
sahf
jnp
out
jae
cmp
pushf
pop
xlat
iret
fisttpll
arpl
dec
and
insl
xchg
xor
or
ljmp
inc
mov
push
inc
cmp
add
aaa
out
or
add
out
bound
stos
out
lret
test
sub
push
xchg
scas
sbb
cmpsl
or
testl
ja
xchg
fcom
pop
mov
insl
sub
sahf
aam
fiadds
jbe
out
enter
shrl
inc
sbb
inc
lods
outsl
pop
das
notb
outsl
push
adcb
sbb
xor
push
loope
icebp
stc
shlb
cmpsb
lods
sbb
jmp
insb
imul
loope
inc
rclb
movsl
popf
dec
dec
mov
das
mov
lods
pop
pop
pop
fisttpll
pushf
jg
outsb
push
bound
sahf
mov
pop
xlat
push
cmp
or
decb
out
cld
nop
mov
cmp
fisubl
xor
push
je
pop
call
cmp
cmp
lret
xor
inc
jns
mov
sbb
jmp
outsb
adc
jp
push
and
xchg
je
mov
lahf
xchg
test
xchg
xor
cld
shlb
xor
rcr
not
jge
xchg
ds
popf
mov
pop
jmp
icebp
inc
outsl
stos
inc
cmp
imul
sub
lret
insb
je
popa
inc
nop
mov
movsl
sbb
adc
xchg
jl
fisubrl
movsl
in
nop
stos
outsl
das
jge
std
fisubrs
xlat
lret
adc
xchg
sub
jo
add
sarb
inc
notl
mov
call
xchg
mov
sub
wrmsr
leave
outsb
bnd
xchg
add
cmpsb
mov
arpl
mov
imul
sub
movsb
bound
pop
dec
jle
cmp
cwtl
push
loop
jnp
mov
or
sub
mov
inc
push
xor
cli
mov
pop
lahf
mov
dec
ficomps
and
fsubl
push
addr16
jmp
cmp
xchg
push
imul
mov
jne
mulb
lret
jns
fs
movsb
cmp
mov
pop
enter
dec
fcmovb
or
cwtl
sbb
pop
and
inc
pop
pop
mov
inc
xor
into
mov
into
jno
leave
adc
imul
sub
xor
test
fists
icebp
ficompl
leave
jmp
in
adc
inc
shr
les
rorl
mov
jnp
or
pop
add
stc
in
loope
or
or
add
mov
push
push
pop
daa
jge
mov
ret
cmp
int
mov
icebp
mov
xchg
sub
loop
test
and
xchg
mov
xor
aam
movsb
clc
pop
inc
dec
cli
dec
ss
inc
sub
adc
pop
stc
pop
sbb
es
mov
xor
es
mov
sub
sbb
jnp
mov
lock
mov
jne
popa
lds
pop
das
rcrb
cmc
mov
outsb
jns
ds
push
lret
in
adc
push
cmp
adc
xchg
gs
jno
adc
lahf
loope
popf
ja
jge
cmpsl
lea
and
outsl
mov
inc
mov
ficomps
push
jle
adc
aaa
sti
out
cmpsl
push
in
aaa
xchg
xchg
pop
ret
jne
jnp
into
push
lahf
scas
pushf
pop
outsl
mov
fwait
lret
lods
inc
sub
insl
xchg
in
into
pop
out
inc
add
jb
cmp
mov
jecxz
mov
rorb
cmpsl
sarb
repnz
xor
les
faddl
or
mov
jge
push
mov
sub
xor
or
sub
push
sbb
repnz
ret
arpl
sbb
pop
inc
pop
scas
rclb
clc
lret
stos
sbb
xchg
nop
into
test
dec
mov
lret
xchg
lds
and
movsb
and
sbb
out
lock
mov
or
pushf
push
js
stos
jno
lahf
and
fsubl
mov
pop
cmp
test
enter
rorb
fwait
leave
out
cmp
mov
push
mov
mov
xchg
cmp
mov
cmpsl
mov
push
xchg
inc
sub
fnstsw
or
setle
mov
push
fisttpl
mov
mov
aam
add
cmpsb
xor
dec
dec
repnz
xchg
dec
insb
inc
fildll
fwait
clc
sub
push
stos
add
int3
test
cli
or
jge
leave
pop
les
aaa
pusha
jle
push
lds
and
cld
movsb
mov
or
push
adc
dec
push
in
mov
ret
out
pop
mov
test
fwait
scas
jp
cmpsl
cmp
outsl
xor
mov
insl
inc
add
mov
mov
ss
mov
mov
and
mov
cld
mov
jns
sbbl
cli
rclb
xor
cmp
mov
pop
out
inc
enter
arpl
jno
pop
adc
adc
mov
adc
mov
into
aaa
pop
dec
xchg
mov
insb
data16
add
je
and
push
test
arpl
cmp
mov
jb
xchg
insl
xchg
or
mov
sub
push
xchg
rorl
rcrl
je
in
adc
gs
pop
pop
insb
pop
mov
jo
cs
mov
dec
inc
dec
es
lods
int
and
add
cmpsl
lea
test
gs
mov
pop
mov
call
jecxz
cmpsb
enter
iret
sti
jne
cli
hlt
add
and
mov
nop
test
int
clc
xchg
inc
sti
pop
enter
test
stos
movsb
dec
jge
fs
mov
shr
jecxz
dec
fmuls
stos
int3
jecxz
icebp
mov
sub
inc
aad
jae
push
icebp
out
sbb
pop
les
xchg
lock
fwait
sbb
imul
or
mov
push
fwait
imul
into
jns
jns
xchg
jp
jge
es
push
push
pop
pop
movsl
push
iret
mov
push
mov
fisubl
cmp
mov
and
fs
inc
test
das
sub
test
xlat
mov
mov
test
pop
add
test
leave
loop
jbe
mov
pushf
xchg
dec
dec
mov
aaa
aad
xor
lea
add
out
or
sub
adc
push
cwtl
roll
in
movsb
stos
push
mov
mov
sbb
mov
cs
aad
das
ds
fwait
stc
dec
scas
test
cltd
mov
dec
add
jb
xlat
cmp
dec
lret
in
mov
add
push
lret
sbb
xchg
popf
test
sub
pop
adc
dec
clc
scas
inc
cwtl
xlat
cmp
stos
push
and
dec
test
adc
mov
or
into
inc
mov
std
lods
add
cltd
leave
push
shlb
xchg
pop
push
repnz
push
stos
mov
dec
or
mov
adc
pop
test
mov
stos
test
mov
pop
aaa
adc
je
cmp
dec
jle
dec
push
into
mov
add
fdivl
ds
pop
icebp
cmp
stos
pop
sbb
jge
dec
push
daa
orl
aad
push
mov
inc
repz
xchg
repz
mov
push
mov
jecxz
bound
enter
mov
pop
fadds
lcall
out
repz
cmp
ljmp
outsl
fucomip
icebp
rcll
pop
sbb
jb
jnp
adc
out
repz
adcl
loopne
dec
scas
int3
test
jno
fidivl
lret
sbb
add
mov
sub
ja
pop
sub
and
xor
fldt
jo
and
fstpl
cltd
and
imul
push
mov
pushfw
adc
sbb
ret
popa
icebp
xchg
ret
ss
popf
sbb
mov
std
shrl
push
push
lods
jecxz
or
es
loope
inc
lahf
adc
pop
lcall
stc
mov
sub
pop
ss
xor
mov
mov
pushf
dec
adc
mov
cmp
mov
jmp
add
testb
ja
adc
push
leave
sbb
in
push
mov
mov
popa
loopne
in
jo
jnp
rcrl
or
mov
jno
into
mov
push
jl
or
add
lahf
in
stos
inc
cwtl
insb
rcrl
xor
icebp
cmc
insb
and
mov
adc
pop
loopne
clc
scas
add
stos
nop
je
pop
push
mov
in
into
dec
stos
lcall
test
aad
mov
cmpsb
inc
fcompl
xor
nop
std
std
popf
sbb
cld
mov
adc
sub
sub
arpl
mov
mov
test
dec
movsb
jecxz
and
pop
nop
xor
insl
xor
cmp
push
popf
sub
xor
out
and
inc
adc
shrb
test
ja
pop
inc
pop
roll
pop
mov
add
test
sahf
or
sub
rcrb
cmp
data16
inc
cmpsb
rol
loope
inc
cld
cs
stc
fldcw
and
testl
lds
dec
xor
sti
add
insb
addr16
sub
ja
das
enter
sahf
stos
out
loope
mov
aas
adc
gs
jbe
mov
dec
add
xchg
mov
aad
aaa
aad
sub
adc
dec
push
jno
ds
cli
test
mov
loop
pop
xor
adc
or
jmp
xchg
nop
mov
push
dec
push
inc
push
pop
loopne
cmp
ds
and
xchg
xlat
mov
insb
stc
jg
mov
xchg
repnz
add
sbb
xchg
scas
push
outsl
sbb
sbb
and
fwait
push
push
mov
ret
stos
sub
pushf
mov
jne
stos
or
iret
mov
or
int
pushf
mov
mov
out
and
lods
mov
pop
push
int3
subb
pop
mov
jecxz
xchg
pop
and
push
inc
add
mov
push
jg
mov
inc
xor
std
and
repz
push
mov
add
popa
sub
pop
pop
outsl
arpl
sub
loopne
call
adc
shr
repnz
icebp
popf
mov
adc
les
cs
add
mov
or
sti
sub
cmpsl
pop
mov
fwait
jmp
mov
insl
adc
inc
sbbl
jbe
jmp
mov
das
out
dec
xchg
pushf
push
mov
loop
lods
sbb
movsb
jmp
xchg
js
je
xor
test
ljmp
push
shrl
ficoms
cli
je
push
or
loope
fs
ret
jnp
push
out
lds
ljmp
sarb
jg
mov
push
sub
movsb
nop
sbb
pop
push
call
add
cli
dec
mov
ret
cltd
sub
fwait
adcb
nop
ja
mov
ror
inc
imul
push
inc
cmp
movsb
mov
and
or
cmp
enter
nop
inc
sub
lods
and
out
cli
xchg
xor
shl
mov
decb
inc
sbb
test
mov
scas
andl
les
je
iret
xchg
mov
sub
inc
ret
mov
xchg
mov
push
std
lret
adcl
sub
ss
and
out
mov
insb
cmp
push
and
pop
xchg
movsb
pop
pop
lret
into
mov
cmpb
mov
rorb
bound
mov
cmp
pop
in
mov
pop
into
ret
and
jo
or
sub
push
stos
push
ljmp
int3
mov
addb
fildll
ljmp
and
ja
or
jp
dec
dec
jb
xor
mov
sarl
nop
adc
ret
adc
mov
cli
int3
sbb
mov
mov
pop
push
add
movsl
adc
lods
into
mov
jae
aam
pop
jmp
adc
add
fstpt
repz
sbb
adc
jb
add
je
loope
lcall
mov
jnp
test
sbb
xchg
jle
aas
rol
cld
test
add
inc
push
scas
sub
bound
or
sub
push
shrl
xchg
jecxz
jae
call
shlb
and
mov
out
lahf
dec
lahf
pop
into
mov
cmp
mov
fbstp
mov
cmpsb
add
sbb
inc
negb
pop
mov
cwtl
mulb
ja
or
pop
mov
mov
sti
ja
arpl
jne
sbb
test
mov
andl
pop
gs
push
repz
cmpsl
add
push
jmp
or
sbb
int
xchg
xchg
ja
xor
push
mov
or
pop
cmpsl
jmp
cmp
adc
push
jg
outsb
iret
dec
mov
lret
sub
cmc
xor
out
mov
pushf
clc
push
inc
adc
js
mov
gs
mov
imul
or
iret
push
sub
jae
test
popa
sub
and
test
jae
fwait
stc
rolb
out
mov
jo
dec
or
add
scas
test
adc
inc
rorl
div
cltd
jnp
loop
call
arpl
sub
cmp
or
jno
push
adc
mov
imul
pusha
cmp
incb
sub
les
dec
test
cmp
pushf
jns
inc
sarl
mov
fs
xchg
inc
stos
push
sbb
stos
inc
loop
xor
mov
cmpsl
dec
mov
popf
xlat
mov
cvtps2pd
lcall
lahf
jne
xchg
pop
mov
int
push
and
je
push
mov
fbstp
fcmovb
test
xor
jno
add
mov
mov
in
dec
cmp
pop
imul
adc
cmp
popf
scas
jnp
aaa
inc
stc
xorl
es
jbe
loopne
inc
mov
jo
lock
dec
call
cs
sub
enter
out
sbb
inc
std
push
shll
movb
push
stc
jno
adc
pop
pop
add
int3
or
stc
cwtl
movsb
scas
dec
movsb
adc
and
stc
outsl
sub
iret
lea
dec
fs
stos
ljmp
cmp
daa
dec
push
lock
les
rorb
mov
rolb
stos
out
das
mov
loopne
popa
inc
push
jle
enter
and
push
mov
rcr
shll
rol
adc
and
pop
pop
test
outsb
cmp
or
add
mov
fildl
jo
addb
sbb
jmp
movsb
add
lahf
sti
jp
push
sti
fldcw
push
mov
and
sbb
rorl
fcmovb
jmp
jbe
jbe
inc
add
std
add
test
mov
or
dec
sub
and
mov
mov
cmpl
xchg
xorl
and
lret
and
inc
add
add
cmp
stos
mov
adc
adc
pop
add
lds
into
push
cmp
orl
jmp
xorb
add
testl
imul
ret
out
pop
scas
lret
dec
js
pop
mov
loopne
or
pusha
daa
in
adc
jae
mov
push
sbb
push
stc
sbb
int3
pop
mov
xchg
ss
sub
out
mov
in
pop
arpl
dec
mov
int3
cmc
int
jg
add
imul
rol
in
insl
dec
mov
xchg
sar
sub
jnp
dec
in
scas
add
pop
fisubrl
xchg
jecxz
cmp
sub
iret
pop
and
adc
cmpsb
ljmp
mov
in
and
push
add
test
and
mov
xchg
test
arpl
jecxz
inc
pop
adc
mov
mov
out
mov
addr16
mov
xchg
aas
xor
sub
in
test
call
or
adc
adc
or
or
mov
push
xor
push
jmp
mov
repz
mov
pop
mov
fcmovb
inc
jmp
sbb
shlb
out
ret
call
or
in
ret
call
mov
or
fs
and
or
dec
imul
push
mov
sti
and
cmpl
xchg
in
mov
jns
xchg
sbb
add
aas
mov
loopne
pop
push
jnp
dec
int3
sub
mov
xchg
out
xchg
out
inc
fstpt
test
jl
push
and
xor
xlat
push
sbb
sbb
push
jae
and
push
pop
sub
arpl
into
jl
lods
or
add
into
cs
adc
xchg
inc
adc
dec
inc
pop
movsl
scas
adc
rorb
mov
int3
scas
shl
jae
dec
mov
mov
push
sbb
mov
mov
xchg
mov
xchg
cwtl
xlat
ss
mov
mov
out
push
push
ret
pushf
je
mov
insl
xchg
fdivp
dec
icebp
js
jb
outsb
jg
mov
push
int
in
icebp
data16
andl
mov
push
sahf
adc
pop
sahf
and
push
js
hlt
ja
outsl
shl
in
mov
push
lret
fidivrs
xor
cmp
gs
xchg
ret
mov
mov
mov
mov
mov
jns
mov
andl
or
sub
daa
insl
sub
sub
cmp
lahf
add
lret
sahf
add
and
lahf
add
out
inc
or
bound
xchg
jns
icebp
arpl
rcrb
xchg
mov
jo
jo
nopl
ficoml
or
add
mov
jo
test
sbb
adc
jb
dec
jg
push
nop
adc
xor
icebp
pop
repnz
xor
push
cmp
mov
addb
push
inc
outsb
pop
jae
push
add
testb
inc
xchg
cmpsl
pop
xchg
dec
ljmp
lret
decb
nop
add
iret
cmp
loop
mov
mov
add
fwait
stc
cmpsb
out
in
mov
out
ljmp
addr16
test
inc
lret
and
inc
and
fs
insb
in
and
xor
vcvtsi2sdl
add
or
stos
pop
dec
andl
sub
ljmp
push
int
repz
jecxz
outsb
adc
or
mov
in
sarb
lock
push
jge
fs
pusha
cld
scas
ja
sub
cltd
xchg
lock
xchg
ret
or
out
test
jle
lods
mov
pop
add
cmp
inc
lods
out
test
mov
pop
aad
orl
or
lods
mov
stc
sub
inc
repnz
lock
cmp
mov
mov
jmp
cmp
dec
test
faddl
arpl
add
push
nop
pop
lahf
stos
iret
pushf
and
adc
jge
repnz
int3
sub
sub
pop
mov
jne
mov
mov
pop
hlt
repz
pop
adc
dec
jmp
jbe
outsl
lahf
in
dec
cli
ret
or
mov
and
js
dec
jp
dec
or
loope
popf
in
mov
pop
pop
pop
push
dec
and
hlt
int3
xlat
scas
and
lea
and
jo
nop
mov
dec
stos
pop
sahf
or
xchg
and
out
popf
sbb
xor
adc
push
sub
cld
sti
popa
shll
dec
test
lods
lret
jge
scas
jne
mov
movsb
cwtl
push
jg
adc
xchg
xor
xchg
mov
mov
shl
sbbl
addl
out
add
pushf
testl
mov
push
jbe
and
es
cwtl
enter
in
or
sub
outsb
pop
in
add
xor
shll
mov
lds
add
jg
pusha
mov
xor
sbb
call
xor
cmc
fdivrl
int
outsl
cmp
push
xor
into
mov
pushf
jecxz
clc
add
shll
xor
add
cmp
dec
mov
jecxz
scas
frstor
and
jmp
cmp
rorb
sbb
dec
xchg
mov
aaa
xor
inc
int3
sub
push
dec
and
in
pop
adc
js
into
ds
adc
push
adc
and
mov
jbe
mov
lock
dec
add
dec
dec
cmp
cmpb
sub
mov
movsl
movsl
or
inc
push
mov
aam
ret
sub
jnp
adc
ljmp
dec
push
add
out
jp
or
gs
sbb
mov
gs
or
lods
test
xchg
popa
mov
std
fidivs
pop
outsl
pop
scas
and
mov
xor
lods
jp
loopne
subb
sbb
outsl
inc
daa
dec
andl
xchg
push
aaa
pusha
arpl
lret
push
xchg
jo
mov
mov
sub
rolb
divl
jno
dec
add
inc
in
ret
leave
lds
xchg
movl
test
movsl
inc
ret
movsb
bswap
iret
je
das
arpl
or
faddp
push
sahf
mov
and
aad
add
mov
fiaddl
or
nop
or
das
mov
jae
or
call
lock
push
jne
or
xor
in
jg
push
lcall
jge
jp
rolb
addr16
clc
ljmp
aam
mov
dec
inc
rep
xorl
clc
mov
js
cmp
imul
inc
into
call
hlt
xorb
pop
aad
test
notb
popa
or
adc
test
mov
ljmp
and
pop
in
cld
push
pop
add
test
sbb
dec
outsb
sbb
lea
into
sub
sub
jb
jne
sbb
fisttps
mov
lret
jmp
es
in
rorb
mov
dec
jge
fldt
es
pop
xor
or
inc
mov
inc
js
popa
imul
jle
rcrb
out
sbbl
das
lea
fildl
iret
repnz
fwait
sbb
jo
cld
mov
fxtract
shlb
les
sub
cld
push
jecxz
and
lret
xor
pusha
pop
pop
push
shlb
push
inc
ss
jg
pop
in
lds
ds
jle
lock
sar
outsb
ds
cmc
add
xorl
dec
add
jle
jb
fiadds
adc
jmp
push
repz
div
aad
repz
sbb
sub
mov
cmp
adc
inc
jmp
mov
mov
push
adc
dec
imul
cmpsb
pop
jae
lea
xor
imul
nop
pushf
rorl
hlt
sbb
and
loop
sti
dec
jb
dec
stc
adc
jg
cltd
and
sbb
push
adc
shlb
clc
scas
jnp
cmc
lock
out
mov
ljmp
lahf
dec
ret
mov
stc
cmp
sbb
clc
jno
aad
dec
push
addb
jg
mov
mov
dec
in
cmp
dec
pop
aad
push
xor
into
jns
daa
das
xchg
fmulp
dec
dec
lods
clc
dec
out
push
stos
adc
jmp
mov
fadd
jnp
pop
das
das
jmp
lock
inc
mov
cmc
mov
aam
movsb
push
enter
shll
cltd
mov
lahf
sbb
inc
jmp
inc
xor
int
mov
jo
mov
enter
outsl
les
jns
ret
negl
or
adc
add
cli
cmp
testl
mov
stos
xchg
mov
sbb
mov
cwtl
fiadds
lahf
add
jns
cwtl
cmp
xchg
lods
pop
lods
pop
jnp
mov
sbb
or
hlt
fidivrs
lods
add
mov
xchg
aad
dec
xor
fadds
xchg
push
hlt
dec
mov
push
mov
adc
mov
xchg
std
cmp
add
inc
mov
enter
push
adc
push
aas
xchg
lods
dec
into
add
frstor
andl
and
cmp
dec
sahf
test
xchg
pop
shr
filds
jle
call
add
aaa
push
imul
fcompl
negb
sti
aad
rcll
gs
mov
inc
fcomps
jbe
pop
loope
es
cmpsl
mov
add
sbb
inc
mov
mov
jo
test
mov
es
mov
out
cmp
mov
pop
mov
push
ror
inc
xchg
xchg
les
add
imul
jnp
add
pop
lret
xchg
mov
aad
and
jmp
mov
pop
push
push
pop
addr16
push
stos
dec
lock
dec
out
push
pop
push
push
das
shlb
cmp
daa
mov
nop
into
mov
je
stos
test
in
mov
add
inc
shr
cmc
movsl
clc
xchg
ljmp
inc
xchg
imull
mov
dec
mov
or
dec
mov
stos
inc
pop
data16
shrb
lahf
inc
inc
fwait
and
aad
mov
or
int3
xchg
xchg
sarb
cmpsb
inc
dec
mov
sarl
out
gs
cmp
rorl
sub
adc
dec
pop
push
and
cltd
inc
adc
or
xor
jns
aas
daa
xchg
xchg
xor
push
xchg
rcrl
ja
xor
insb
mov
inc
loop
insb
push
aad
jb
scas
mov
jge
push
dec
mov
lods
and
adc
pop
loopne
and
pop
mov
xchg
lock
add
mov
mov
or
cmp
imul
repnz
orb
jnp
xor
push
add
xchg
stc
push
mov
pop
dec
push
push
cmp
ret
dec
je
push
leave
sub
addl
scas
mov
stos
push
dec
lret
outsl
sti
pop
lods
stos
adc
gs
inc
int
rolb
shll
mov
jns
popa
imull
mov
mov
sbb
xor
lea
pop
mov
in
adc
lock
push
xor
mov
es
jo
mov
pop
and
out
popa
pop
sbb
or
std
xchg
jecxz
or
gs
addr16
in
mov
mov
aaa
mov
sarl
add
int3
mov
lock
sbbb
mov
push
aam
push
in
inc
lret
gs
in
mov
and
adc
hlt
fisubrs
mov
scas
cmp
in
repnz
stc
mov
insl
pop
imul
mov
jp
mov
pop
clc
lcall
outsb
or
pop
aad
in
in
cs
or
lds
cltd
dec
push
jge
lds
inc
mov
loopne
addr16
dec
cmpsb
cld
jnp
and
sbbl
idiv
inc
shrb
push
movsl
xchg
xchg
es
pop
frstor
je
and
inc
inc
lahf
mov
pop
mov
jle
and
testb
popf
shll
gs
lcall
fnsave
push
inc
fistpll
cmpsl
pop
jb
sub
push
mov
mov
sub
add
stc
scas
cmpb
push
and
shlb
cmpsb
sub
inc
mov
adc
mov
bound
mov
andb
movsb
pop
dec
push
mov
jl
sub
mov
jno
adc
mov
lea
loop
cmp
add
sti
sub
in
add
xlat
aam
mov
dec
jns
movsl
mov
ljmp
lods
popf
or
mov
aas
das
pushf
or
aas
mov
rorl
cmp
nop
inc
aas
xor
adc
sbb
jnp
les
jbe
sub
lds
leave
in
or
xchg
sub
js
mov
daa
repnz
or
shll
mov
mov
ss
in
dec
mov
mov
and
test
cwtl
roll
or
mov
rcr
cmp
sbb
rolb
sbb
aas
cmp
jne
sbb
stc
dec
sub
jae
movsl
ljmp
adc
ja
cwtl
and
push
hlt
aam
hlt
push
xchg
cli
add
and
je
hlt
aas
imul
incl
repnz
sar
push
jl
mov
fisttps
adc
xchg
lds
xor
sbb
adc
rol
jp
pop
iret
sub
dec
dec
push
mov
je
push
mov
lds
pop
ret
push
repz
push
sti
or
das
lds
xchg
aas
movsl
pop
push
push
mov
xchg
pusha
lods
sub
rcll
adc
faddp
add
jnp
pop
xchg
ds
xchg
movsl
push
jp
dec
dec
aad
fcoms
outsl
cld
mov
rcrl
mov
push
scas
dec
adc
jno
lods
and
das
cmc
sbb
pop
and
push
pusha
inc
jno
push
mov
popa
daa
mov
inc
pop
ror
pop
fxch
daa
cmpsl
push
mov
in
jl
add
push
out
mov
std
add
cltd
rolb
ljmp
inc
sbb
pop
notl
dec
in
je
sub
nop
sub
pusha
and
sbb
outsl
xchg
sbbb
cmpsl
and
sbb
adc
bound
lods
xchg
mov
cmc
gs
addr16
pop
push
mov
add
push
stos
jl
cmp
sub
mov
cmp
in
mov
in
jge
cmp
cmpsb
mov
lods
out
jno
cmc
pop
bound
lahf
adc
pop
cmpsl
fs
sbb
add
fldt
pop
mov
inc
sbb
mov
pop
push
mul
clc
jp
fstpl
fists
mov
inc
push
mov
push
hlt
int3
pop
fcmovb
inc
inc
repnz
xor
adc
notl
lret
xor
js
stos
xor
movsb
mov
sbb
push
fistps
inc
jmp
mov
scas
adc
fsubs
dec
or
mov
js
inc
addr16
cmp
jmp
xor
lods
push
push
fisubrs
loopne
inc
adc
pop
out
and
push
push
gs
mov
pop
cmp
sub
add
out
nop
dec
sarb
jmp
cwtl
jne
jp
insl
rclb
and
adc
daa
mov
add
cmp
adc
nop
imul
sub
notb
or
faddl
mull
sbb
rcrl
addb
mov
cmp
pop
xchg
roll
xor
push
push
rcl
into
pop
or
repz
inc
pop
lret
jp
imul
leave
jge
pop
sbb
cmp
xchg
sub
stos
in
push
push
mov
push
or
scas
adc
fs
jne
adc
and
mov
icebp
stos
daa
ret
sub
add
lret
mov
fdiv
dec
iret
test
sahf
cmpl
rcrb
outsl
iret
add
push
adc
mov
dec
lock
jb
shl
andb
fucom
ret
lret
push
add
sub
push
cmp
jne
int
xorl
inc
xor
jmp
mov
movb
inc
mov
sbb
cmpsl
bound
or
adc
stos
add
aaa
in
rclb
xchg
dec
sti
adc
inc
ss
scas
in
pop
sbb
mov
scas
inc
pop
mov
test
cwtl
cmpsb
mov
movsl
jb
popa
loope
cmpsb
neg
xor
or
and
clc
mov
jmp
mov
ficoms
pusha
lcall
inc
sbb
mov
stos
sub
pushf
add
push
or
push
shl
cmp
arpl
jne
dec
mov
cmp
iret
dec
sarl
lds
xchg
mov
lret
push
xchg
roll
insl
orl
dec
shr
xor
out
or
stc
pushf
jb
mov
pop
mov
xor
shrl
xor
lahf
xor
mov
add
pushf
lods
mov
inc
loopne
test
mov
stos
inc
emms
inc
lds
mov
push
mov
xchg
incb
push
jge
sahf
xchg
fldt
in
iret
in
cmp
test
push
cmp
bound
loope
lea
xor
test
mov
out
data16
dec
xchg
mov
sbb
mov
cmpl
call
jmp
inc
enter
sbb
fadds
js
ljmp
cmpsb
mov
js
icebp
ficomps
frstor
sub
out
jnp
mov
lea
inc
inc
pop
add
das
or
insl
mov
xchg
jne
lds
or
test
dec
cmpl
arpl
test
or
imul
pop
cmc
and
mov
dec
jecxz
mov
mov
adc
and
lods
inc
pop
jae
mov
sbb
test
push
ss
sbb
daa
fdivrs
mov
inc
sub
or
pop
sbb
jbe
nop
idivl
fists
push
sbb
and
mov
dec
loopne
arpl
fsubs
dec
inc
out
cmp
ds
push
push
hlt
inc
enter
mov
mov
pop
mov
mov
xchg
push
shr
sub
inc
scas
push
pop
out
mov
addr16
loop
adc
mov
dec
cmp
pop
mov
push
pop
cmpl
divl
push
pop
test
mov
loop
movb
pusha
push
add
outsl
xchg
int
aas
jecxz
push
fstpl
nop
hlt
sar
in
and
jmp
test
out
out
push
ljmp
sub
push
mov
in
enter
cmpsl
pushf
jnp
mov
mov
dec
rorb
jbe
aam
pop
subb
cmp
pop
cmpsl
adc
fnstsw
mov
push
addl
xor
loop
mov
in
in
pop
xchg
mov
test
sbb
jno
cmp
dec
jg
frstor
add
bound
mov
mov
pop
xchg
pop
dec
xor
push
enter
sub
push
mov
out
jbe
add
ljmp
pop
test
in
sbb
mov
mov
jb
jecxz
jbe
sub
ss
loopne
mov
daa
repnz
outsb
lea
lret
pop
push
xor
cmp
cwtl
jg
push
cmp
pop
lret
xchg
lods
mov
adc
rcrb
push
fisttpll
ret
add
lret
xor
mov
sbb
add
mov
jmp
sub
and
sbb
push
push
sbb
pushf
mov
lahf
decl
ds
sarl
sbb
mov
insl
xor
xor
mov
pop
or
xchg
pusha
fdivrl
jne
xor
repnz
jbe
xchg
mov
jp
dec
mov
test
shlb
cmp
inc
int
sysexit
xchg
loopne
and
cli
add
fidivrs
popa
inc
add
movsl
outsb
insl
test
mov
shlb
outsb
sub
xor
ss
enter
cmp
cmp
pushf
xchg
add
jno
loop
bound
xor
movsl
add
xchg
cmp
mov
jl
xchg
inc
sahf
sarb
repz
rorl
rorb
leave
push
mov
push
ror
jns
push
icebp
cwtl
aad
aaa
lods
push
sahf
int
mov
lods
mov
mov
dec
int
cli
mov
fsubrl
insb
mov
hlt
jmp
in
into
push
test
dec
out
inc
jecxz
pop
cltd
ror
cmp
lahf
adc
inc
lret
imul
les
inc
jle
je
mov
sbb
xor
push
xchg
sarb
inc
nop
mov
cmp
shll
adc
cli
cmp
mov
fildll
out
imul
cmp
mov
dec
lods
ljmp
and
loop
scas
pusha
or
arpl
add
shr
in
mov
jne
and
outsl
push
rcll
mov
adc
popa
or
fmull
frstor
aam
lods
pop
jno
je
add
sbb
pop
dec
and
orl
mov
cltd
push
daa
movsb
shlb
leave
jmp
dec
dec
xor
sub
loopne
pop
pop
sbb
mov
pop
std
repz
and
push
bndldx
lods
cmp
mov
xchg
xchg
sbb
mov
mov
leave
add
push
jno
out
cli
test
lea
notl
push
cmp
pop
hlt
scas
sti
mov
call
xchg
hlt
mov
fistps
push
mov
call
xchg
int3
xor
addr16
fisttpl
js
and
inc
add
xchg
fsubs
jne
and
push
add
and
dec
xchg
test
std
xor
adc
mov
lock
sub
mov
testb
test
mov
xor
lea
add
sub
cmpsl
push
mov
ja
jns
adc
int3
dec
aas
sub
xchg
ret
xchg
jo
inc
ja
mov
add
mov
sti
stos
mov
xor
jns
stos
jmp
loop
inc
push
testb
test
mov
dec
movsl
shll
imul
inc
das
add
jnp
xor
xchg
sbb
jb
mov
mov
dec
out
daa
cmp
push
pop
jb
lcall
dec
je
inc
push
adc
ljmp
or
push
push
out
pop
stc
or
mov
push
pop
gs
orb
push
and
rdtsc
xor
push
xchg
lret
jo
fwait
cmp
pop
xchg
out
test
push
hlt
test
neg
or
mov
sbb
pop
jnp
adc
imul
inc
pop
and
pop
mov
int
lret
test
mov
adc
mulb
repnz
mov
cmpsb
aaa
pushf
or
imul
dec
dec
cwtl
ror
mov
in
mov
fbld
jmp
lahf
int
sbb
mov
shll
cltd
lahf
inc
cs
rcll
mov
adc
inc
jl
or
cmpsb
pop
cmp
movsb
inc
fcmovbe
out
cmp
sub
outsb
pop
enter
mov
push
mov
jecxz
int3
in
into
inc
inc
sbb
in
stos
ljmp
mov
cmp
push
xchg
mov
jbe
les
xchg
popf
pop
ffreep
mov
or
add
nop
mov
mov
cmp
lret
xchg
add
push
jp
test
in
insb
cmp
cmp
aad
or
push
jp
jnp
negl
pop
in
stos
add
fstl
xchg
out
push
scas
cmp
push
mov
pop
dec
test
lods
xor
cs
jns
pusha
mov
pop
scas
test
roll
lods
outsb
mov
dec
call
cmp
mov
and
cs
bound
fildl
das
dec
and
out
inc
push
dec
pop
repnz
andl
xor
ror
lahf
sub
lods
and
mov
repz
mov
mov
test
mov
mov
movd
jns
or
call
insl
dec
sbb
sub
pop
popa
xchg
sub
xor
scas
adc
push
sbb
stos
pop
cmp
or
pop
cmp
jns
hlt
mov
in
pusha
mov
adc
inc
ds
data16
mov
xchg
xor
push
mov
sbb
or
pop
lcall
pop
inc
mov
daa
cmc
mov
lahf
push
xor
push
sbb
mov
fnstsw
jl
loop
inc
addr16
lret
out
je
leave
lret
out
std
jne
js
int
fsubrs
dec
and
aad
ja
mov
adc
stc
cmc
dec
cmc
insb
mov
bound
mov
ret
or
mov
mov
int
fists
clc
dec
push
push
fidivl
call
xchg
imul
jo
aad
aam
or
fwait
mov
int3
bsf
pop
xor
mov
mov
ja
cli
jle
pop
das
dec
push
xorb
gs
mov
pop
cld
dec
and
inc
adc
pusha
push
fiaddl
sub
ss
dec
les
cmp
jmpw
sahf
popa
sub
fimuls
mov
sbb
das
test
sarl
ret
add
enter
rcrl
ja
inc
pop
or
shl
xor
pop
push
scas
out
repnz
int3
pop
data16
inc
mov
inc
fbstp
sbb
into
mov
pop
clc
stc
lcallw
jg
repnz
adc
jo
mov
sbb
push
fldt
push
inc
pop
outsl
sarb
in
iret
lods
enter
mov
jmp
jo
jnp
out
sbb
stc
negl
pop
mov
shll
arpl
decb
jecxz
add
adc
cmovbe
pop
data16
cmp
sbb
outsl
sahf
popf
mov
or
mov
cld
push
sahf
mov
test
mov
or
push
flds
clc
jge
jp
mov
push
inc
mov
and
cmc
xchg
call
mov
mov
test
js
into
mov
push
lock
cmp
cmpsb
ja
xchg
jecxz
mov
lods
cs
push
call
mov
add
sub
test
sub
push
insl
xlat
lret
sbb
xchg
rolb
lods
das
faddp
out
cmp
sarb
outsb
inc
sbb
pop
and
scas
movsl
mov
pusha
out
mov
push
cmp
cwtl
repnz
aam
addr16
mov
in
xchg
pop
ret
mov
mov
int
daa
mov
add
mov
mov
adc
outsl
test
je
insl
adc
sti
mov
cmpsb
test
outsb
mov
pop
inc
inc
lods
fwait
pop
xlat
cld
shlb
loop
out
pop
push
xchg
jo
out
push
call
xchg
or
hlt
in
and
mov
mov
xchg
addr16
arpl
adc
fldl
ret
bound
xor
pushaw
pusha
inc
add
movsb
and
orb
push
mov
out
jl
out
jl
lret
push
add
je
and
pop
sub
push
xchg
daa
out
push
insl
inc
out
hlt
xor
or
push
mov
mov
imul
shlb
add
add
pop
dec
and
and
insb
xchg
push
sub
inc
mov
push
sbbl
xchg
ljmp
xchg
out
adc
push
aaa
jno
sbb
pop
aas
lods
insl
ss
xor
jbe
and
adc
lods
xchg
icebp
push
jecxz
cmpsl
jg
fwait
shrl
add
in
outsl
incl
pop
and
xchg
dec
add
fwait
lret
aad
cs
scas
jg
js
and
je
xor
cmp
stc
stos
jne,pt
pop
pop
imulb
addr16
xlat
roll
addb
push
lret
xchg
mov
cwtl
add
xor
jp
mov
lret
cltd
rclb
loop
pop
aaa
cmp
push
jb
call
int3
and
ret
daa
aad
movsb
dec
in
test
push
jp
leave
subl
loop
inc
cltd
jb
shlb
sub
dec
test
mov
jp
js
push
xor
shl
lcall
lret
adc
jne
xchg
cli
cmp
fisttpll
leave
shrl
fsubr
stc
outsl
xchg
mov
dec
call
imul
mov
xchg
xchg
ss
lds
adc
pop
in
mov
hlt
pop
clc
fdivs
ss
inc
mov
push
ljmp
xor
je
xor
js
js
sub
jle
inc
mov
mov
add
hlt
mov
or
xor
add
lahf
fsubrl
test
mov
lcall
sbb
ljmp
adc
and
xchg
in
push
dec
mov
dec
lods
cmp
jmp
pop
aam
jmp
fwait
ret
sbb
push
test
cmp
push
fsubp
outsb
add
or
adc
out
scas
adc
cmpsb
inc
sub
mov
and
xchg
push
dec
clc
sahf
das
xchg
pop
arpl
inc
subb
mov
popf
lahf
pushl
cmp
nop
movsb
push
insl
test
mov
sub
fisubs
mov
or
push
pop
scas
add
mov
and
push
xchg
add
push
mov
xchg
xchg
cld
loope
inc
scas
lea
in
out
loope
pop
in
inc
insb
lock
sbb
popf
ret
je
ret
ljmp
pushf
sbb
mov
push
adc
test
mov
in
push
aas
xchg
add
fsubrs
jae
outsl
dec
bound
jbe
lds
ljmp
lahf
push
or
mov
xchg
es
and
xor
jge
lods
into
xchg
pushf
push
xchg
inc
hlt
in
sbb
andl
xlat
popa
sub
pop
notl
jmp
sbb
fstpl
push
mov
mov
sbb
mov
pushf
xchg
jle
hlt
mov
mov
add
into
test
dec
aad
fnstsw
mov
stos
rclb
push
cmpsb
mov
pop
arpl
hlt
das
mov
std
sub
pop
pop
std
clc
mov
arpl
and
cmpl
or
add
push
sub
mov
fisttpl
pop
fcomps
and
jmp
rorb
fbld
cmp
adc
imul
mov
test
insl
outsb
cmp
stos
rcrl
nop
xchg
sub
and
jno
pop
add
sbb
sub
lock
adc
xor
movsl
or
or
push
inc
xchg
movsb
daa
cs
test
loope
inc
xchg
mov
cmpsb
sbb
sahf
and
arpl
hlt
test
test
gs
jg
pop
rcrb
outsl
inc
pushf
hlt
xchg
add
sub
daa
dec
mov
test
adc
inc
fdiv
fcoms
out
push
enter
clc
mov
movsl
mov
in
jnp
popa
push
mov
movsb
xchg
add
ja
ret
imul
pop
mov
test
leave
xchg
fcoms
leave
or
test
lods
jecxz
or
sub
pop
and
sub
mov
or
or
sahf
test
rcll
rcrl
fnstsw
adc
adc
data16
sub
mov
dec
std
push
mov
ret
test
mov
push
or
insb
aad
hlt
ja
out
or
push
add
xor
aaa
and
push
data16
orb
pop
sahf
jno
xor
inc
pushf
rorb
jl
data16
lcall
push
lret
cwtl
lea
fs
jbe
jo
fs
add
xor
cmp
popf
xchg
and
push
pushf
cld
jp
mov
xchg
mov
outsl
dec
sub
int
es
je
repnz
push
inc
cli
push
stos
pusha
cmc
popf
dec
loop
push
push
lret
jp
xchg
mov
inc
jne
xor
loope
rolb
jae
mov
enter
ret
mov
dec
or
mov
xchg
add
jmp
rcrl
loope
inc
or
test
rcrb
lret
outsb
pop
push
xchg
mov
inc
cli
dec
mov
mov
and
mov
mov
sub
mov
jne
mov
add
scas
bswap
testl
out
add
dec
mov
cld
add
mov
push
xor
mov
jae
divl
inc
fldt
subl
push
adc
out
xchg
xchg
lcall
mov
ret
cmpsb
jnp
jae
pushf
fistl
leave
jo
jmp
inc
call
popa
cmp
pop
jbe
lods
int
xor
mov
aam
sbb
ret
xchg
cld
mov
xchg
in
aaa
out
clc
cmp
xchg
es
ss
outsl
jnp
inc
xchg
cmp
jecxz
dec
xor
daa
in
adcb
insl
xchg
lea
add
mov
call
jle
jne
jae
in
movsl
sbb
xchg
dec
loopne
sbb
mov
dec
orl
in
lcall
dec
push
mov
pop
jg
inc
lcall
sub
dec
inc
mov
rorb
pushf
or
clc
sub
pop
add
cmp
enter
dec
or
inc
mov
pop
sbbl
mov
jmp
sub
in
xchg
xchg
out
cmc
into
sbb
push
fwait
sbb
call
push
ret
jle
movsb
adcb
stos
test
out
sahf
add
jl
fwait
loope
pop
inc
cmp
mov
arpl
movsb
xor
dec
mov
or
add
insl
fcomps
and
and
dec
sbb
mov
loope
push
es
mov
stc
idivl
xor
jb
cmpsb
adc
ret
jmp
pop
push
cmp
cmc
imul
lahf
lods
pop
jl
jp
test
and
mov
adc
and
or
lcall
mov
sbb
sbb
or
jnp
int3
sti
aad
add
insb
xlat
fwait
pop
int3
out
pop
sub
dec
xbegin
jno
enter
push
mov
sbb
lcall
hlt
adc
fmuls
stos
push
icebp
push
mov
pop
pushw
mov
movsl
jl
incl
sub
loope
xor
or
inc
dec
cmp
mov
iret
idivl
pop
les
cmp
mov
cmp
loope
mov
insl
sbb
mov
and
lahf
sub
jle
enter
mov
arpl
xor
jno
jne
inc
insb
sub
mov
push
xchg
dec
inc
nop
or
add
fldl
aad
pusha
or
cmp
push
imul
xor
add
xlat
addb
jno
dec
xlat
outsb
stos
mov
loop
lds
mov
inc
xchg
xor
dec
test
ret
pusha
pop
ret
sub
scas
mov
pop
add
adc
mov
sbb
fimuls
es
and
mov
add
cmpb
mov
or
test
loop
ret
xor
into
push
lret
pop
inc
push
jecxz
or
fcom
mov
push
mov
lock
out
insl
shlb
out
mov
fstps
gs
into
movsb
scas
pop
mov
push
adc
mulb
inc
inc
inc
scas
rcll
sti
or
push
push
jmp
insb
das
add
inc
rcll
cmpsl
lea
dec
mov
jmp
lcall
xchg
or
imul
pop
ret
in
movsb
js
ret
pop
rep
imul
sub
xor
mov
insl
jmp
dec
rcrb
push
test
jl
mov
push
shrb
xor
or
sahf
ret
pop
xchg
push
xchg
xchg
shl
xchg
leave
xor
out
pop
shlb
inc
xor
data16
int
cmp
cs
mov
sti
gs
outsl
std
int
imul
stos
xchg
sub
push
or
lods
rcrl
sti
shrl
jle
cmpsb
leave
cmp
or
lods
popa
adc
hlt
sahf
insl
sahf
adc
cmp
test
sbb
add
dec
push
inc
test
mov
fldenv
std
outsl
jae
sub
add
or
sarl
jmp
jp
rcll
add
lahf
repnz
rcll
or
divb
ret
fdivs
push
adcb
and
push
imulb
dec
out
divb
imul
sbb
fsts
lcall
mov
loopne
movnti
shrl
lret
clc
xor
ficoml
cmp
in
dec
jge,pn
les
int
mov
cs
sub
dec
in
in
dec
dec
ja
sbb
pop
mov
bound
fmuls
fsubrs
std
in
sub
ud2
sti
std
push
scas
jle
fldl2t
in
or
push
cmc
fstps
shrb
rolb
shr
xor
sbb
and
call
push
xchg
adc
add
scas
mov
mov
push
jecxz
popa
cmp
inc
jae
pop
int
xchg
xchg
mov
testb
mov
cmpsb
fcompl
fisubl
xor
or
clc
cmc
loope
push
movsb
sub
jo
push
js
or
js
fcomip
cmc
jmp
sub
jo
mov
jnp
jb
push
sar
lret
lret
cmp
inc
and
dec
xchg
xlat
mov
mov
scas
dec
jl
and
or
cmp
std
cmpsl
ret
fldl
add
jb
nop
and
xor
iret
iret
cmp
sti
pop
loop
sbb
or
fwait
shrl
cmp
mov
mov
insw
idivb
imul
push
pop
lret
and
scas
adc
jmp
add
cmc
aam
jmp
jnp
mov
jmp
fwait
adcl
loope
sub
xlat
mov
pop
jmp
nop
popf
rcrb
shlb
test
adc
inc
dec
jl
ret
es
jecxz
inc
mov
and
add
push
xchg
adc
adc
pop
push
mov
inc
adc
dec
subb
or
xor
movsl
popl
jns
in
data16
and
in
je
mov
out
rclb
add
mov
addb
sub
popl
mov
mov
jmp
loopne
stos
cld
jp
mov
jp
push
ja
lret
xchg
pop
mov
jo
repz
pop
cmp
mov
mov
clc
sbb
popa
xor
or
adc
adc
pop
sbb
lcall
push
je
sub
out
push
out
jbe
mov
test
cmp
notl
dec
loop
ds
je
push
mov
xchg
movsb
insb
and
lds
lods
jns
aam
jmp
inc
in
ja
repnz
ret
sbb
sub
lcall
pop
dec
aam
outsl
jecxz
es
pop
push
aad
mov
loope
pop
or
dec
mov
sub
aas
mov
xor
lahf
mov
push
sbb
xchg
call
push
daa
aas
leave
mov
cmp
popf
rcrl
outsb
jg
nop
sbb
aas
pop
dec
andl
mov
mov
lret
mov
jae
in
and
jae
repz
mov
sti
hlt
inc
add
jb
adc
xor
cld
mov
and
jp
shlb
in
icebp
pop
inc
and
mov
adc
cmp
push
cli
mov
lahf
dec
popf
adc
test
les
sbb
inc
scas
lods
pop
rcll
scas
test
pop
xorl
add
cwtl
sbb
xchg
ds
jg
mov
mov
into
stos
sbb
dec
divb
mov
stc
aas
sub
pop
movsl
lods
hlt
insb
and
mov
shrb
test
faddl
scas
ds
pop
add
je
insl
pop
jo
rcrb
sahf
sti
roll
and
jmp
push
scas
sbb
push
cmpsl
scas
sar
xchg
int
aad
leave
outsl
inc
push
and
repz
aad
cmp
outsb
bound
cmp
punpckhdq
dec
test
pop
outsb
mov
mov
pop
cmpsl
mov
xor
bound
out
rclb
dec
cmpsb
sub
jno
in
mov
out
sub
mov
xor
or
aad
jmp
ret
aam
call
adc
sti
push
sbb
push
shl
mov
aad
test
sti
and
aaa
imulb
mov
adcb
stos
repnz
sbbl
or
mov
in
and
cmp
dec
aam
mov
add
ss
xlat
cmp
jbe,pn
shrl
imul
roll
into
dec
dec
ret
sub
scas
jecxz
jecxz
ds
out
push
jecxz
outsb
sbb
adcl
pop
std
cmp
orb
arpl
scas
push
add
pop
lret
or
pop
cmp
lcall
xor
dec
es
fisubs
das
das
ret
ljmp
mov
fldt
sub
mov
cmc
test
push
fmull
clc
cmp
xchg
aas
out
push
sbbb
rolb
pop
mov
mov
cmp
mov
xchg
adc
mov
push
and
add
sbb
cmp
cmp
out
mov
jne
leave
mov
insl
dec
push
jno
js
dec
arpl
and
jge
shll
sub
psubsw
xchg
lock
push
test
rcr
ja
mov
push
dec
test
cltd
movsl
shlb
imul
out
cli
test
sub
xor
lea
sarl
adc
out
pop
jmp
fimull
push
xchg
adc
jb
xchg
xchg
xor
cli
cmp
cmpsb
and
call
inc
inc
push
mov
xchg
cmovno
cli
adc
sti
int
jo
adcb
mov
movsb
jnp
icebp
mov
sbbb
insl
xchg
xor
cmp
sub
xchg
inc
mov
and
dec
and
addb
mov
outsl
cmp
out
std
xchg
mov
aam
ds
pop
nop
inc
shll
inc
cli
enter
mov
xchg
jecxz
push
scas
cmpsl
adc
daa
add
mov
and
insb
stos
xor
lret
jns
popa
iret
shlb
xor
jae
imul
fbld
cmp
lret
push
push
les
sbb
xor
inc
jmp
loope
das
daa
and
mov
gs
popf
ltr
cwtl
aaa
or
out
lods
mov
lock
stc
stos
rclb
dec
jg
inc
movsb
jmp
je
mov
or
test
sahf
push
sub
push
push
pop
jns
loop
push
stos
out
out
mov
rcrl
fwait
mov
rol
je,pt
or
enter
push
fs
lcall
popf
shrl
cmpsb
ja
movsl
movsb
or
sbb
jecxz
pop
xor
clc
in
adc
dec
out
jb
push
mov
stos
push
jecxz
div
pop
test
jge
out
xor
mov
int
test
inc
sti
pop
jmp
cmp
jecxz
dec
sub
rcrl
out
sarl
jbe
nop
clc
cli
pop
adcb
ja
mov
lds
sahf
jmp
push
fwait
xchg
int
int3
mov
and
sarb
ss
sahf
sub
dec
loope
xor
mov
in
movb
cmp
daa
movsl
mov
jl
dec
push
lcall
mov
test
and
mul
push
inc
aam
fmuls
insb
pop
das
mov
lret
dec
stc
imul
mov
iret
lcall
xor
cltd
dec
rcll
pop
mov
inc
iret
mov
and
xor
das
mov
pop
je
mov
enter
dec
lods
cmp
xor
fildl
sbb
data16
and
fisubl
mov
shlb
fists
test
sub
arpl
pop
xor
xchg
outsl
adc
loope
insb
addr16
out
rolb
adc
vmovq
fidivrl
call
leave
in
push
mov
mov
ja
je
ret
mov
mov
gs
xor
add
ss
jp
jle
and
in
arpl
jle
mov
pop
jecxz
popf
ljmp
pop
clc
cmp
addr16
mov
arpl
out
mov
movsl
sub
and
ds
push
call
call
fcoml
outsb
jle
fildl
dec
sbb
push
or
push
aad
xchg
add
ss
adc
pusha
jecxz
lock
in
fs
dec
fsubs
inc
test
rorb
icebp
jp
int
cmp
push
fimuls
in
xor
fdivs
mov
insb
rcrl
adc
mov
mov
cwtl
movsb
adc
stc
popa
pop
push
jae
sub
insl
xor
adcl
call
lds
dec
adc
inc
add
push
je,pt
loop
jbe
sub
aad
fsin
add
mov
mov
xchg
fisttpl
lcall
sub
mov
xchg
adc
xor
lds
rcrb
cld
dec
add
std
xchg
sub
ljmp
mov
or
data16
cmpsb
dec
dec
cmp
jle
scas
push
imul
outsb
jp
sub
test
sub
sub
mov
inc
lret
pop
dec
cmpsb
mov
inc
mov
loope
push
sarb
xchg
or
pushf
jns
adc
sub
in
lea
xchg
mov
mov
call
pop
js
xchg
inc
sahf
fldpi
push
scas
arpl
cwtl
mov
sti
sar
pop
sub
sbb
mov
mov
pop
xorb
inc
mov
lds
add
enter
xor
out
lods
popa
mov
or
jle
xor
cli
pop
outsl
bound
mov
dec
sbb
sub
ds
bndldx
cmp
add
addr16
push
mov
inc
int3
add
test
dec
add
sub
or
les
test
jnp
cwtl
fistps
std
xchg
mov
in
jmp
add
aaa
inc
pop
or
xchg
ja
test
je
pop
dec
sbb
mov
jg
add
push
xchg
lcall
mov
add
daa
fidivl
pop
push
mov
or
lock
scas
inc
pop
scas
sbb
testl
push
mov
mov
fs
adc
mov
mov
dec
stos
aam
pop
test
xor
or
int
orl
xor
movzwl
pop
jmp
mov
jp
sbb
xchg
cmp
xlat
adc
clc
jno
clc
in
push
call
inc
push
pop
xor
xor
lahf
pop
pop
mov
mov
mov
mov
and
addl
out
into
add
mov
sub
lock
mov
shlb
mov
pop
inc
loopne
add
aad
pop
stos
sub
dec
adc
push
inc
jmp
cltd
jge
std
sub
sub
push
enter
icebp
fisttpl
or
jbe
jl
xchg
in
dec
push
inc
add
xchg
cmp
dec
push
cmc
jecxz
push
xor
sub
push
sbb
movsl
or
jns
dec
cld
stos
in
jne
sub
in
xor
fmull
mov
or
test
inc
push
sbb
lods
int
stc
in
sub
and
adc
jno
or
repnz
cmp
jmp
jp
mov
and
cmp
ds
out
test
mov
or
cmp
mov
xchg
fidivs
sbb
jne
ret
jno
rorb
xchg
leave
scas
pusha
mov
fistl
cltd
in
xor
xchg
xchg
testb
mov
out
xor
scas
inc
sahf
idivb
shlb
adc
jns
pop
xsavec
nop
cld
dec
push
std
mov
das
pop
cwtl
jb
push
add
clc
cmc
jns
in
pop
inc
fimull
sub
sti
jo
push
or
mov
enter
xchg
aam
push
or
lret
js
icebp
arpl
or
out
xchg
add
inc
stos
cltd
test
jle
sub
mov
xor
push
pop
cmpsb
out
outsb
or
mov
mov
jmp
xor
xchg
adc
jl
test
or
cld
insb
pop
add
clc
js
sub
fnsave
and
mov
pop
ss
shlb
mov
mov
or
push
jmp
dec
pmullw
xor
subb
out
jmp
push
mov
arpl
jo
sarb
aas
sbb
pop
and
push
int3
and
shll
jbe
mov
je
pop
rolb
pop
add
inc
jae
push
pusha
pop
fsubrl
jecxz
or
mov
jne
lcall
add
dec
pop
adc
inc
dec
push
adcl
fdiv
aad
pop
clc
out
cmp
dec
sbb
nop
inc
sub
rcl
cmp
push
xchg
xchg
pop
sub
jne
cmc
fwait
xchg
hlt
jns
dec
push
xchg
xor
and
dec
outsb
lahf
xor
add
mov
fisubl
sbb
cmp
jle
add
data16
scas
xor
in
jmp
out
stos
add
mov
jecxz
sbb
nop
xor
sub
pop
mull
fnstsw
jp
pushf
xchg
ds
and
pusha
push
add
les
xor
aaa
inc
add
dec
dec
xchg
out
das
cmp
test
cmp
test
fldenv
sub
xchg
data16
xchg
and
pop
pushf
xor
in
sarl
call
or
pop
das
cmpsb
jp
ja
aaa
mov
and
leave
lret
lods
loopne
out
imul
push
sbb
push
repnz
xchg
sub
xchg
rcrb
sbb
cld
inc
sbbb
jg
pop
push
dec
popf
fisttpl
sub
mov
outsl
cmp
or
or
fbstp
mov
das
scas
js
cmp
scas
sahf
sub
std
outsl
push
ljmp
add
mov
int
and
cli
mov
inc
pushf
je
mov
in
in
cmp
sub
imul
sbb
sub
movsb
inc
cmp
fdivl
ret
pop
and
cwtl
inc
sub
jnp
xchg
jo
jns
dec
cs
inc
aaa
mov
jg
pop
add
shll
jp
xchg
mov
pushf
leave
add
pop
fst
fnstsw
insb
add
xchg
fnstenv
out
mov
rcrl
pop
mov
pushf
cltd
rcrl
stc
inc
fcomip
inc
mov
shlb
hlt
jae
out
movsb
ja
ja
cmp
insl
aad
lea
sub
bound
xor
inc
adc
cmpsb
js
sub
push
cld
movb
push
push
sub
dec
lahf
je
loop
mov
mov
cli
cmp
dec
stc
add
rorl
ss
jecxz
leave
call
mov
sarl
shlb
imul
mov
repnz
ljmp
ljmp
sahf
aad
lds
xor
lret
cmpsb
mov
cmp
ss
data16
cs
push
call
jae
sbb
lret
xor
negb
fisttpl
int
movsl
je
or
jo
jo
lahf
mov
rorb
xchg
sbb
cmp
mov
ret
push
pop
lret
mov
push
mov
cmp
jns
add
lcall
jo
mov
lods
imul
add
or
add
stc
xor
xchg
cmp
jne
imul
call
inc
add
mov
test
repnz
add
test
xor
mov
inc
inc
aam
scas
sbb
push
in
cmp
stos
push
xchg
pop
je
mov
popl
icebp
cli
idivb
outsl
dec
fsubl
mov
cmp
mov
and
xor
loop
outsl
mov
adc
lret
xor
jle
adc
sub
out
aas
addb
lret
lods
lret
pop
imul
xorb
jae
ljmp
roll
lods
sub
popa
adc
clc
dec
jbe
cmp
std
xchg
ja
ds
jo
sbb
fistpl
xlat
xor
insl
adc
lods
adc
jle
lret
rcl
arpl
sahf
call
sbb
fdivp
enter
push
mov
shll
ficomps
outsl
movsb
popa
pop
pop
scas
xchg
cli
stc
outsb
movhps
sub
daa
add
sub
or
cltd
les
lds
pop
das
or
popl
insb
repnz
mov
push
sub
rcrb
loopne
mov
aam
and
insl
inc
and
xchg
test
ficoms
lods
mov
mov
mov
dec
ja
add
xchg
imul
mov
movl
into
movsb
cmp
push
sbb
int3
data16
bound
pop
mov
imul
test
xchg
rorb
sbb
sub
arpl
into
or
pusha
push
movsl
xor
cmpsl
pop
das
and
adc
pop
rcrb
les
sahf
pop
sbb
add
add
clc
sbb
sarl
popa
jne
jle
xchg
divl
mov
push
and
fyl2x
mov
hlt
mov
insl
mov
js
jle
sub
mov
scas
popf
mov
xor
jl
jle
jmp
mov
je
out
pop
mov
orb
dec
inc
push
push
mov
addr16
jb
clc
fstpt
xchg
jae
xorl
je
mov
pusha
test
js
add
call
pop
mov
jmp
xchg
xchg
mov
mov
out
add
xchg
add
jne
clc
cmpsl
shll
and
push
imul
je
mov
loop
add
mov
and
and
repz
sbb
ja
mov
inc
pop
add
ret
pop
or
sarb
imul
std
inc
fwait
pop
icebp
inc
mov
cmp
sahf
imul
rcrb
fistpl
jge
xchg
push
jl
iret
icebp
inc
jmp
adc
cs
int3
call
subb
scas
adc
add
inc
cmp
mov
insb
jbe
sbb
add
xchg
push
xor
mov
mov
fs
xchg
xchg
fwait
mov
add
xchg
stc
icebp
xlat
mov
test
xchg
cmp
mov
or
jg
insl
push
and
xlat
cltd
loopne
add
cmc
and
cmpsb
inc
jb
add
out
sub
in
cltd
roll
add
pushl
jle
lock
xor
add
popl
clc
in
pop
shl
mov
jge
aaa
pop
insb
xchg
pop
push
adc
and
fbld
aam
icebp
fwait
adc
stos
scas
mov
xchg
add
pop
xchg
mov
xor
jbe
xorb
je
cmp
andl
adc
repz
xorl
pusha
in
sub
lock
xchg
imul
adc
mov
pop
negb
push
jecxz
pop
mov
or
push
stc
mov
add
xor
jno
add
mov
ficoms
and
mov
cltd
push
lea
pop
xchg
mov
insb
inc
testb
data16
aaa
or
jl
outsl
pushf
lcall
adc
sbb
popa
imul
fists
xlat
xorps
ljmp
mov
push
je
push
je
fistl
mov
push
pop
pop
pop
loop
lea
mov
dec
sub
jge
mov
fsubs
jb
xchg
call
iret
inc
dec
adc
mov
scas
adc
cwtl
mov
or
lods
ret
cmp
aaa
inc
shrl
fldl
cmp
xchg
or
mov
enter
cs
jge
push
into
out
jne
add
test
mov
mov
outsl
pushf
out
sub
bound
inc
jmp
lds
aam
mov
movsb
out
xchg
dec
and
add
mov
das
clc
jmp
in
fldenv
inc
sub
lock
cmp
mov
jns
insb
mov
jno
pop
aaa
push
lret
cmp
sbb
adcb
mov
out
arpl
inc
stc
or
ret
push
sahf
push
add
pop
outsl
test
pop
push
mov
mov
jno
jmp
in
outsl
repnz
test
cmp
jno
js
jnp
mov
adc
mull
xor
mov
out
and
mov
loop
xchg
add
repnz
push
hlt
cltd
je
sbbl
or
mov
imul
idiv
cmp
test
xor
lcall
adc
cmp
shlb
cmp
std
repz
mov
cmp
call
or
cwtl
sbb
daa
mov
cwtl
callw
or
inc
pusha
into
movsl
adc
push
rcrb
ret
testb
pop
ret
add
inc
out
and
lret
ja
sbb
std
mov
fstps
xchg
out
or
inc
or
mov
sbb
jle
loop
repz
push
subb
bound
stc
fists
leave
xor
mov
push
dec
jbe
pop
daa
lods
add
faddl
pop
not
popf
rorl
mov
insb
jno
mov
rol
in
insb
dec
out
mov
jp
loopne
dec
push
pop
mov
cmc
cmp
adc
and
pop
iret
mov
insb
cmp
sbb
enter
mov
and
or
push
cwtl
ffree
or
cmp
movsl
jae
jp
add
adc
scas
push
and
lret
cmp
or
push
fstpt
push
xchg
and
pop
mov
adc
mov
mov
imul
cmp
inc
sqrtps
inc
mov
fwait
or
pop
jmp
mov
test
jae
dec
out
cs
iret
push
jge
js
sti
jp
push
jnp
jno
jmp
rcrb
outsl
xor
dec
inc
pusha
lods
add
sbb
fistps
test
ss
pop
repnz
and
mov
repz
incl
in
jne
mov
and
jmp
mov
and
dec
ret
sub
imul
lea
fincstp
lds
xor
cwtl
in
stc
mov
mov
sbb
ljmp
adcb
cs
or
pop
lret
pop
inc
xchg
xor
push
movsb
add
jbe
xor
frstor
sub
xchg
aaa
mov
ss
roll
in
mov
shl
xchg
fcmovb
stc
or
repz
xchg
or
xchg
inc
dec
addl
in
les
cmp
gs
sbb
inc
push
sub
or
inc
jle
rclb
out
push
lret
mov
das
in
clc
sbb
ficompl
sub
ss
btr
repz
cmp
repz
aas
subl
mov
aas
or
les
push
mov
pop
fcomps
dec
movsl
inc
add
push
mov
leave
jle
mov
adc
imul
test
std
sbbl
mov
cmp
sub
add
lds
sub
add
lea
stos
icebp
dec
xchg
push
or
inc
out
add
pop
adc
sub
aaa
add
push
dec
pop
insb
fwait
xchg
fisubrs
mov
push
imul
mov
or
mov
pop
jge
push
add
in
push
cs
push
jge
cld
cmp
cmpsl
cmpsb
dec
mov
gs
das
dec
push
fwait
aaa
mov
or
movsb
js
cmp
bound
icebp
adc
xchg
jge
fsubrs
lock
lret
lcall
out
aam
in
outsb
fstps
xor
bound
aam
repz
fnstcw
movsb
adcb
push
insb
dec
pop
or
pop
jmp
daa
lahf
sub
sbb
adc
sub
mov
cmp
push
dec
push
fldcw
movsl
scas
outsb
in
ja
pop
mov
xchg
or
inc
cmp
cmp
add
gs
stc
fisubl
lds
addr16
cmp
jae
es
iret
dec
loopne
fcompl
out
aam
in
cmpsb
imul
outsb
mov
pop
cmp
cmp
les
jno
incl
call
mov
js
rol
rcll
xchg
sbbb
test
bound
imul
int3
stos
inc
lea
mov
adcb
xorb
or
mov
add
icebp
mov
xchg
adc
jg
and
test
mov
outsl
pushl
xchg
dec
jl
push
fwait
mulb
cmpb
mov
sub
mov
push
loop
loop
push
dec
xorb
push
push
cmp
test
repnz
pop
lock
jae
inc
inc
xor
or
cmpb
jb
out
pop
mov
js
inc
and
fnstenv
mov
sub
dec
inc
jp
add
push
dec
jbe
dec
jb
sub
mov
mov
pop
test
addr16
icebp
jns
rcr
fcmovb
shlb
adc
ret
inc
mov
mov
shlb
cmc
dec
push
jg
inc
add
dec
js
inc
sti
sub
pusha
daa
bound
lods
xchg
and
hlt
int3
aam
ja
movsb
out
cs
clc
mov
repnz
int
lahf
cld
lea
dec
cltd
jg
pop
jg
mov
pop
and
and
mov
lock
dec
push
std
adc
mov
mov
pop
sar
ret
or
out
cmp
gs
lret
in
clc
insb
lahf
fwait
add
and
lea
mov
mov
lods
int
mov
dec
loope
int3
fbld
dec
imul
add
imul
pop
lret
xor
pushf
lret
jp
fnsave
jl
xchg
mov
dec
xchg
lret
imul
push
and
ror
fnstenv
xor
lahf
push
shr
fisttpll
mov
push
test
push
in
loop
dec
mov
xchg
lea
mov
fucomi
dec
or
xchg
shl
scas
mov
dec
sub
jp
sub
ret
leave
fs
jmp
sub
or
inc
jo
pop
addr16
cmc
iret
cmp
mov
jge
out
inc
filds
mov
mov
dec
jg
aaa
inc
jno
sub
cmp
pop
jecxz
imul
int
aam
outsl
shl
inc
inc
xchg
ret
clc
mov
and
or
pop
mov
sub
sbb
outsl
sarb
icebp
je
jle
sbb
insb
std
inc
jmp
lds
mov
faddp
faddl
dec
and
sti
pop
je
addps
xchg
cmpsb
push
adc
and
mov
jne
popa
test
idivb
hlt
mov
fdivrl
cmp
adc
jge
popf
inc
adc
mov
cmp
sbb
pop
lahf
push
lods
daa
push
movsb
lock
jg
nop
gs
mov
repnz
hlt
xor
lods
mov
fcoml
into
int
cmp
hlt
inc
ret
inc
mov
jl
into
mov
psubb
repnz
cli
aas
rolb
sahf
fidivl
mov
sarb
adc
inc
xchg
jmp
jmp
enter
outsl
mov
jp
sbb
cmp
xchg
jmp
cmovbe
iret
cmc
xchg
fwait
insb
loope
mov
jmp
xlat
add
shll
xorb
shrl
enter
cmp
jecxz
iret
ja
xor
cmp
fcomip
out
das
fnstsw
das
dec
sbbb
pop
test
std
and
dec
mov
mov
arpl
push
dec
lods
mov
push
push
mov
imul
push
push
xor
mov
mov
repnz
lcall
xchg
sbb
add
xchg
popf
inc
popf
xor
push
call
ret
hlt
pop
push
stc
dec
mov
rcll
mov
adc
divb
adc
mov
sub
mov
xor
mov
rcl
out
fidivl
dec
jb
push
lods
cmp
push
cs
in
mov
div
and
lods
bound
std
add
push
inc
gs
out
aad
inc
mov
jecxz
xchg
push
lahf
jns
jo
xlat
cmp
mov
cmc
sar
cmp
jge
hlt
aad
cmp
loopne
sti
pop
arpl
iret
lods
xchg
test
in
aad
pop
dec
in
pop
int
adc
sbb
adc
adc
cmp
mov
les
cltd
jg
adc
and
stos
add
inc
or
mov
fnsave
xchg
movsl
das
pop
xlat
or
jge
add
negl
jmp
f2xm1
add
push
sub
mov
mov
lcall
call
sbb
mov
cmp
rcrl
ds
and
mov
popa
dec
aam
rcrl
arpl
mov
cli
or
xor
and
push
xor
sbbb
std
ja
div
inc
cmp
add
jne
mov
jle
jl
add
call
bound
pop
mov
cmp
pop
adc
not
add
sbb
imul
sahf
and
leave
rcll
jnp
out
jns
adc
mov
jl,pt
add
stc
xchg
cmpb
mov
cwtl
ds
subb
icebp
out
push
jns
sbb
inc
push
xlat
xchg
xchg
mov
xchg
cltd
mov
mov
pushf
inc
popa
dec
adc
xor
inc
mov
xor
js
mov
xchg
stc
fucom
sub
fidivs
jmp
pop
test
loopne
sbb
fcoml
dec
push
fs
fistpll
pop
test
cwtl
sarl
lcall
dec
xchg
cmpsl
and
into
popf
push
daa
mov
mov
dec
cltd
inc
push
mov
les
fwait
push
xchg
enter
subb
sub
cmp
mov
into
nop
insb
cli
fidivl
int
fwait
mov
fisubl
dec
pop
jg
xor
add
xchg
pusha
pusha
rep
cmpsl
jbe,pt
lock
and
push
sub
or
jmp
fistpl
xchg
jl
jnp
jmp
adc
fnstsw
test
cmpsl
jl
test
scas
call
ret
fucomp
leave
xchg
mov
cli
adc
call
fsub
cmp
mov
adc
lea
mov
inc
dec
dec
lock
and
movl
loopne
aad
inc
sub
pop
sbb
movb
sub
inc
jp
stos
inc
test
push
mov
sbb
pop
test
dec
pop
add
cld
xchg
xchg
cmp
test
pop
push
pop
push
cli
mov
jmp
ficomps
mov
cld
cld
jne
nop
dec
lds
mov
dec
ljmp
stc
cmpsb
pop
xor
or
adc
xchg
push
pushf
loope
incb
pop
xor
or
push
and
and
cld
sar
test
add
and
and
mov
mov
xchg
push
dec
mov
xor
arpl
add
cwtl
mov
dec
push
mov
js
fdivl
mov
nop
or
mov
push
sbb
cmp
dec
pop
sbbl
mov
popf
pushf
adc
popa
jle
sub
in
mov
mov
loop
out
enter
jo
push
ss
and
jbe
int
push
dec
xchg
je
push
es
xor
cmc
movsl
and
add
cltd
daa
stos
andl
outsb
pop
mov
clc
ss
lahf
scas
jae
cs
or
sti
movsb
xorb
leave
mov
in
out
cmpsb
sbb
mov
jle
pop
adc
pop
aam
iret
mov
lcall
xor
and
mov
repnz
xchg
loop
cld
or
stos
jl
fs
test
mov
pop
dec
xchg
inc
inc
call
ret
lret
cmp
xchg
pop
sub
push
mov
aam
lret
inc
test
fwait
test
imul
cltd
lock
addr16
pop
loope
inc
mov
fcomip
pop
jnp
or
pop
jl
and
les
pop
negb
cmp
mov
scas
cld
pusha
sbb
mov
sbb
inc
push
adc
je
ds
adc
negb
xchg
xchg
pop
loopne
mov
dec
sub
movsl
sbbb
jns
test
ds
sub
cmc
aaa
push
icebp
sbb
adc
daa
sub
out
fstl
mov
nop
adc
adc
pop
pop
icebp
xor
es
push
xchg
pop
inc
sbb
fwait
movb
or
out
pop
repnz
ljmp
push
mov
mov
cmp
fcoml
negb
inc
lds
xor
fldcw
sar
pushf
aam
mov
mov
sarl
sub
cmp
inc
scas
insl
cmp
pop
xchg
movlhps
out
inc
push
dec
xor
mov
pusha
jle
dec
jge
clc
cmpps
loop
pop
outsl
popf
out
jmp
adc
out
es
sbb
lahf
push
push
mov
out
push
repz
adc
mov
stos
inc
stc
mov
cmp
and
andb
pop
adc
shrb
call
fidivs
stos
fs
cmp
sub
stos
push
jns
sbb
sbb
inc
pop
out
xor
add
data16
leave
icebp
cmp
push
ficoms
out
ret
or
in
jno
int
sbb
mov
jne
jmp
jns
lods
xor
clc
out
lret
std
in
dec
sbb
daa
lret
or
nop
sbb
pop
mov
sbb
cltd
les
int3
das
xor
inc
test
mov
testb
les
push
add
bound
jae
in
je
xor
fisubrl
xchg
inc
mov
mov
pop
pusha
and
and
inc
pop
jnp
sbbl
jecxz
sub
xor
cwtl
repz
bound
mov
xchg
imul
and
dec
mov
fstpt
dec
nopl
jb
and
sbb
dec
mov
call
mov
jne
cmp
mov
mov
mov
add
insl
or
cli
loopne
pop
pop
aaa
aad
add
inc
popf
pushf
jno
lea
out
pop
cmc
fsts
nop
and
push
lods
xor
shll
xchg
ds
aad
rclb
dec
xchg
push
or
lahf
mov
mov
nop
dec
int3
into
cld
jno
push
add
mov
mul
mov
dec
test
mov
movl
ret
push
aam
pop
popf
mov
adc
or
cmp
ret
sahf
adc
mov
divb
jns
out
popa
test
inc
mov
mov
xor
stos
push
lret
dec
xor
mov
das
adc
icebp
dec
pop
mov
mov
nop
int3
or
out
in
cmc
mov
or
push
in
push
add
in
ret
add
test
aad
hlt
push
xor
in
fs
sub
sti
or
mov
sbb
hlt
pop
sbb
mov
jne
mov
das
push
bound
mov
arpl
pushf
jmp
leave
xchg
ret
test
push
xor
mov
and
push
xor
in
pop
pop
stos
ret
jg
push
rolb
xchg
divl
ret
xchg
dec
repz
stos
inc
add
lcall
mov
mov
dec
into
pop
mov
movsl
pop
fs
in
inc
lcall
xor
add
cmovne
jnp
ret
dec
cmp
rolb
aam
mov
and
mov
sub
pop
xchg
es
xchg
loopne
fwait
test
push
inc
testb
cmpsb
mov
shrl
gs
jnp
xchg
icebp
popf
push
xchg
iret
xor
test
mov
add
das
jge
push
jb
jbe
into
ja
iret
pop
push
lcall
adc
sahf
cmp
in
sbb
mov
cmp
arpl
roll
in
push
es
mov
inc
in
pop
pop
push
add
lods
sub
add
dec
pop
add
outsb
pop
pop
arpl
rcll
pop
outsl
imul
cmp
xchg
adc
or
nop
cltd
cmpsl
outsl
and
mov
jge
jg
mov
ja
repnz
scas
fmuls
bound
cmp
mov
ja
dec
xlat
mov
imul
and
enter
outsl
jbe
lock
daa
sub
dec
fnsave
mov
insl
xchg
xchg
jnp
cli
jns
loope
or
or
out
repnz
sub
pmaddwd
xchg
stos
int
or
das
jmp
sbb
adc
iret
aaa
and
fs
aad
ret
pop
test
decl
daa
test
and
add
aam
in
imul
not
add
add
mov
mov
loop
ljmp
mov
cmpsb
lods
push
push
or
fstpl
pop
xlat
insl
ficompl
or
cs
and
jo
mov
or
dec
cmp
lock
xor
pop
test
pop
inc
mov
inc
adc
lds
loop
lods
fiadds
and
jmp
jle
iret
jl
sbb
sbb
mov
ljmp
push
jns
rcrl
jecxz
bound
or
loope
or
ss
popa
jae
sub
int3
jbe
and
cmpsl
or
inc
movsl
xchg
mov
fildl
inc
rol
fildl
inc
mov
ret
xchg
xchg
mov
sub
or
and
inc
sub
xchg
mov
sti
cmp
jle
subb
in
adc
push
das
mov
xchg
cmp
mov
mov
int
rcrb
ret
push
lds
call
sahf
xor
or
fldt
xor
add
out
outsl
lods
pop
jecxz
xchg
popf
decb
xor
lds
xor
push
out
stos
mov
jo
jp
ja
jno
test
and
dec
es
jno
in
shlb
push
pop
fs
sub
int3
imul
fldz
xorb
and
fs
call
sbbb
jno
lret
jl
stc
ljmp
pop
mov
adcl
jl
pop
in
push
lcall
outsl
sbb
daa
sar
pushl
stos
push
jmp
es
or
call
cmpsb
xchg
ja
int3
fsub
fidivrl
push
pop
fstpl
or
cmpsb
decl
shlb
cmp
les
add
add
test
ss
push
mov
les
and
sub
inc
inc
test
pop
push
outsb
sub
out
and
jge
xchg
xchg
adc
mov
test
imul
xor
cwtl
sub
sub
repnz
or
rorb
std
push
outsb
paddq
pop
push
or
enter
jo
push
sbb
les
pop
xchg
in
imull
pop
pusha
dec
call
movsl
ret
cmp
mov
pop
jge
lret
mov
lahf
pop
inc
mov
xor
test
mov
clc
das
scas
sarb
loop
popf
jo
enter
out
mov
mov
sbb
aad
mov
aaa
xchg
mov
call
testl
cmp
sbb
jno
pop
stos
popa
insl
adc
adc
push
dec
dec
xor
mov
inc
outsl
stc
mov
adc
dec
push
push
dec
mov
xchg
lods
jp
jne
mov
fdiv
into
jns
sbb
inc
out
cltd
test
cmp
jns
jnp
test
scas
and
jbe
lret
jl
add
push
int
sahf
push
sbb
dec
pop
or
cli
ret
push
pop
cmp
popl
imul
xor
push
sbb
mull
mov
or
mov
cld
leave
lock
xlat
outsl
dec
lret
js
lock
mov
je
pop
jns
and
jo
add
cs
jmp
stos
dec
jb
sti
xor
or
lret
dec
out
mov
xchg
iret
es
cli
test
mov
cmp
adc
or
fnclex
gs
xchg
imul
outsl
push
adc
shlb
loope
test
add
loop
clc
xchg
and
sbbl
aaa
sbb
es
lret
xor
aam
or
sbb
out
lds
jae
fisubrs
in
mov
out
ljmp
add
jmp
dec
outsl
imul
push
filds
out
xchg
pop
leave
test
add
addr16
add
cmp
xor
cli
mov
xchg
mov
imul
jmp
jmp
xchg
popa
jnp
pop
and
stc
stc
mov
xchg
push
mov
xor
add
mov
lea
jle
stc
cmpsl
and
pop
cmp
jge
adc
sbb
jo
and
js
jno
lds
jno
cwtl
es
arpl
aas
es
sbb
sbb
sub
add
dec
push
push
cmp
pop
dec
push
mov
adc
mov
ja
fimuls
mov
or
mov
xor
jp
js
scas
imul
mov
ja
outsb
std
ficoms
mov
xlat
outsb
es
dec
sub
xchg
out
dec
ss
or
cmp
cmpsb
outsl
in
cmp
add
test
mov
push
cmp
cmpsl
ja
mov
and
mov
adc
mov
mov
sbb
rcrl
mov
test
cmp
in
jbe
jge
adc
xor
loop
sub
flds
sbb
jecxz
insl
fcoms
xor
push
push
dec
cli
mov
mov
push
xchg
lret
jg
fidivrl
or
jle
movsb
mov
inc
xor
jno
xchg
mov
jns
fistl
hlt
loop
scas
xchg
lds
jp
cmp
cmp
lret
inc
push
and
xchg
inc
outsl
adc
cmc
outsl
adc
xlat
std
xchg
add
and
xorl
jle
leave
jg
sbb
add
lcall
in
and
out
mov
push
sbb
sbb
mov
dec
insb
sub
adcl
popa
push
cmp
mov
jmp
int
mov
or
stos
dec
ja
add
sahf
pusha
test
or
mov
aad
dec
loop
jnp
addr16
xor
push
inc
add
hlt
es
push
sahf
pop
out
ljmp
scas
push
pusha
imul
jnp
jge
push
lahf
push
loope
test
jne
inc
cmpsl
je
inc
sbb
ds
outsb
idivl
inc
pop
into
mov
mov
dec
push
scas
dec
adc
xor
ja
pop
pop
lahf
ret
pusha
test
xor
or
ret
repnz
imul
addr16
insb
out
xlat
pushf
jnp
sub
fdiv
movsl
mov
pop
or
sub
out
sar
pop
pop
movsl
gs
add
mov
scas
test
xchg
xchg
stc
enter
sti
out
cltd
pop
sahf
into
in
daa
adc
aad
push
je
rcrb
inc
pop
lcall
sub
ficoms
cmp
test
jp
popf
mov
inc
mov
int
cmp
lds
fdiv
loope
add
imul
xchg
xor
jns
dec
cwtl
in
and
pop
popa
dec
daa
cld
arpl
jbe
hlt
pop
lcall
repnz
test
mov
arpl
insl
fs
push
icebp
fadd
lock
jne
jmp
pop
xchg
aad
fnstenv
jge
repz
nop
stc
mov
adc
lods
stc
lret
pop
xchg
mov
mov
push
xchg
jge
out
pop
mov
arpl
loope
adc
je
mov
mov
inc
es
pusha
dec
mov
fildl
jl
cmpsb
cmc
bound
ret
jge
lret
into
stc
stc
fwait
aas
fists
inc
dec
pop
out
and
outsb
clc
xor
add
cs
imul
sub
inc
fdiv
jmp
push
or
stos
iret
push
lods
jb
repz
push
xchg
fldt
lret
inc
shlb
or
call
adc
adc
icebp
mov
mov
mov
jne
xor
popa
in
add
and
jno
aad
push
test
pusha
loop
cmpsb
sbb
fdivl
loopne
sub
pop
mov
jb
aaa
cli
and
loopne
test
mov
sbb
movsl
mov
lods
push
jmp
icebp
xor
adc
or
lock
xorb
xchg
ja
jg
pop
push
lret
mov
pop
stos
cmpsl
pusha
gs
mov
xchg
sbb
and
rorb
xorb
fstps
or
scas
ja
inc
cmpsl
or
pop
call
or
nop
scas
rcrb
pushf
daa
add
adc
lahf
xor
dec
jo
xor
jb
testb
mov
outsb
mov
add
inc
nop
and
mov
imul
hlt
jo
push
or
in
cmp
mov
enter
adc
andb
push
loop
shlb
or
test
fwait
xchg
jne
mov
lods
adc
cmpsl
sbb
pop
sub
push
or
jo
nop
jecxz
adc
jb
or
sbb
sahf
lea
cmpsb
pop
mov
ljmp
xor
dec
adc
jns
sub
es
cmc
and
arpl
jecxz
ss
or
sub
addr16
pop
out
in
les
clc
shlb
cld
xchg
cmpsb
sti
andl
mov
subb
mov
call
out
cmp
sub
add
loopne
pop
inc
cmp
aam
mov
xchg
daa
insl
inc
add
mov
in
sbb
pop
cmp
inc
addr16
cs
jnp
test
mov
mov
xchg
shrb
cli
mov
addr16
out
xor
add
xchg
rolb
lret
cmp
sbb
negb
dec
inc
sub
dec
lret
jl
cmc
in
jmp
fisubs
rcr
test
leave
mov
add
mov
sti
ja
xorb
popa
fsubrs
inc
adc
push
mov
lahf
push
call
fwait
xchg
xchg
or
rcrl
xor
scas
mov
scas
cmpl
movsb
sub
mov
insb
push
adc
imul
in
mov
cmpsl
loopne
mov
push
pop
aaa
mov
out
enter
adc
cwtl
mov
into
fisubrs
pop
movsl
add
leave
leave
adc
mov
loopne
cltd
sub
and
pusha
push
sbb
inc
mov
outsl
push
mov
add
nop
and
mov
mov
push
adc
mov
lret
adc
pop
pop
mov
push
lods
lds
fcmovnb
insl
jae
xchg
sub
popf
fwait
cli
daa
loopne
sub
xchg
jg
leave
sbb
adc
rcr
outsl
cs
adc
push
jp
repnz
test
cld
test
aad
in
popa
repnz
cwtl
cwtl
adc
jp
jnp
xor
fucomip
mov
adc
push
out
in
popa
fsubl
add
sub
inc
pop
jb
movsb
cmp
adc
cs
dec
fwait
xchg
jle
repz
inc
jno
ret
mov
lret
loop
fcmovnb
iret
jmp
stc
inc
mov
pop
lret
lock
mov
cmp
addb
jae
rorl
jns
dec
mov
out
mov
pop
test
xchg
mov
aad
rorl
push
inc
subl
push
lcall
scas
test
xchg
pop
jo
sbb
in
cmp
data16
jmp
dec
push
lcall
pop
sub
cmc
cmp
adcb
mov
mov
imul
lock
loop
mov
mov
and
in
lcall
ret
mov
push
xor
or
add
btsl
and
xor
push
sub
stc
repz
std
pop
sub
sub
push
les
push
out
adc
pushf
sub
or
push
lret
sbb
mov
nop
pop
cmp
pop
sbb
mov
mov
into
xor
fnsave
pop
lret
arpl
jmp
jno
subb
jbe
pop
out
mov
incl
out
mov
jmp
sbb
dec
cmpl
inc
mov
hlt
push
imull
jns
push
push
mov
sub
dec
rolb
sub
out
push
movsb
leave
dec
sbb
sbb
cmc
inc
stos
lock
xchg
jb
jmp
pop
aam
push
mov
pop
jo
cs
pop
add
clc
xor
xchg
add
sbbb
pop
jae
or
jmp
sbb
and
imul
xchg
cmc
jecxz
iret
and
call
fwait
stos
cmpsb
cmp
cmpsl
movsb
stos
data16
or
xchg
lds
pop
push
mov
cmpsl
dec
mov
sbb
mov
sbbb
int3
jnp
outsl
ja
mov
and
fdivl
push
jnp
es
test
lahf
mov
cli
jno
rorl
dec
push
sbb
fisubrs
shl
pushf
lcall
fistpll
sub
push
insb
push
mov
imul
dec
or
jb
cmp
jno
scas
mov
into
mov
jge
cmp
add
test
and
shlb
das
lea
int
ja
rcl
ss
sbb
mov
stc
fiadds
push
xorl
mov
pop
xor
cmp
out
fdivs
mov
out
push
jl
or
or
cmpb
popf
or
cli
imulb
sbb
pop
sub
mov
jne
inc
add
xchg
sbb
fucomi
loope
cld
jge
loope
and
adc
pushf
popa
in
loopne
testl
test
mov
ret
jecxz
sbb
out
test
mov
imul
ret
mov
or
cltd
lods
pop
notl
pop
fistpll
fsts
and
xor
cmpsl
jmp
imul
mov
cltd
stc
dec
push
sbb
lods
bound
xchg
inc
into
je
and
jp
push
mov
jne
inc
rolb
aam
rcl
sbb
daa
inc
stos
lea
sarl
jae
add
sub
dec
sbb
decb
in
mov
xchg
into
pop
lds
mov
jge
mov
push
jb
xor
roll
aaa
fisttpll
neg
pop
xchg
xchg
ja
xlat
adc
loop,pt
sbb
add
fucomp
and
scas
adc
adc
mov
mov
pushl
adc
or
dec
add
mov
mov
inc
cmpsl
movsl
mov
push
repz
fxch
pop
fstp
pop
fcomps
xchg
add
jnp
fwait
mov
dec
xchg
or
jb
nop
push
push
inc
insl
lods
push
enter
mov
jns
outsb
inc
js
loope
adc
xor
push
pop
fs
cmp
lret
mov
lds
shr
xchg
lds
clc
add
mov
scas
mov
in
test
insb
sarb
push
adc
sbb
sti
call
sti
jmp
lods
push
scas
pop
and
sbb
and
mov
push
sub
push
shrl
xchg
adc
jg
add
das
jne
ret
sbb
fidivl
mov
mov
adc
push
mov
ja
mov
pop
mov
cli
adc
clc
jae
daa
sti
popf
sub
add
cmp
pop
pop
movsl
sub
roll
dec
ret
jmp
outsl
loope
imul
sbb
add
aaa
stos
rorl
imul
pop
es
pusha
jnp
popa
ret
push
adc
dec
inc
hlt
into
ljmp
hlt
divl
insl
ds
rolb
aaa
cmp
das
arpl
mov
test
mov
mov
push
fldcw
je
ret
cwtl
mov
pop
pushf
push
cwtl
xchg
xor
dec
sbb
popa
sti
js
adc
adc
mov
and
pop
xor
add
icebp
and
adc
xor
xlat
jecxz
movsb
decl
in
lcall
adc
movsb
out
or
or
jmp
test
push
sub
add
test
mov
dec
pop
sub
iret
jecxz
xlat
xor
push
mov
or
lahf
mov
add
popf
sub
dec
repnz
xor
test
sbb
roll
data16
or
mov
mov
int3
push
rcrb
rorl
aam
outsb
fbstp
xor
and
sbb
lcall
xor
pop
sbb
jecxz
sub
lahf
cmp
xchg
mov
mov
xchg
mov
in
inc
mov
movsl
std
int3
sbb
daa
push
xchg
jl
mov
rcr
insb
cmp
and
cmc
mov
fisubrl
mov
push
sbb
jns
daa
jae
push
and
fdivrs
mov
gs
jnp
mov
push
popa
and
daa
loop
cltd
pop
mov
mov
loop
pop
jecxz
aaa
adc
xor
stos
xor
or
cmp
stc
fldl
ficoms
arpl
mov
and
pop
xlat
cmp
aad
mov
cld
lods
hlt
lret
sub
cmp
mov
frstor
mov
mov
dec
out
mov
pop
jb
push
imull
popf
cld
or
xchg
clc
ret
mov
jg
aad
xchg
jl
mov
add
iret
mov
sub
push
mov
mov
jmp
les
push
in
adc
rolb
gs
dec
pushf
test
je
rolb
andb
int3
and
inc
lods
mov
pop
push
mov
iret
xchg
inc
mov
ficoms
sbb
gs
movsl
mov
outsl
mov
or
iret
pcmpgtb
jno
pop
mov
mov
jl
xchg
push
mov
mov
sbb
mov
add
je
xchg
arpl
mov
cmp
jb
add
ss
mov
jo
lcall
jb
xor
inc
xor
into
ds
testl
xchg
mov
test
push
cld
gs
stos
cli
mov
cltd
xlat
cmp
xor
jle
pop
push
and
xor
xchg
lahf
test
mov
add
test
popa
cld
push
adcl
add
imul
adc
lods
mov
mov
mov
into
dec
fnstenv
sarl
ret
pop
or
test
cmpsb
inc
push
jae
jle
scas
jl
mov
loopne
cltd
dec
insl
sbb
fwait
push
inc
and
das
hlt
sub
push
adc
jle
out
sub
mov
jae
or
push
fmull
pop
push
es
scas
add
call
pop
pop
mov
mov
pop
adc
jge
popf
out
push
stos
xor
mov
cli
add
pop
ret
add
pop
mov
cli
inc
adc
jae
or
pop
out
mov
lods
loope
pusha
loop
pop
jne
xchg
sbb
repz
dec
cmp
loope
cmpsl
xchg
sahf
mov
push
call
mov
add
xor
movsl
push
lahf
inc
mov
cmpsb
aam
or
mov
jmp
jbe
xor
pop
jo
inc
push
dec
dec
xchg
push
outsl
sbbb
push
and
arpl
jecxz
sub
pop
pop
lahf
pop
negb
dec
sbb
dec
xchg
lea
and
pop
cmp
adc
push
mov
pushf
inc
lds
nop
daa
aaa
mov
or
insl
and
mov
and
mov
jbe
push
scas
test
mov
cltd
xchg
dec
xor
ds
add
cli
pop
push
lods
push
and
aaa
movsb
int
stos
xor
aaa
xorb
scas
shll
test
sub
test
xchg
push
xor
pop
mov
push
and
push
hlt
loope
mov
sbb
imul
outsl
or
loop
inc
rcl
add
xchg
enter
popl
ss
mov
adc
cmp
sbb
in
push
test
ret
rol
sbb
adc
jno
dec
push
ds
sub
les
mov
fisttps
inc
or
mov
jnp
and
pop
jl
in
adc
sub
andb
lret
mov
fs
out
js
add
pop
xchg
sarb
dec
out
pop
lret
hlt
test
add
aad
mov
xchg
inc
xchg
inc
loop
mov
out
adc
jnp
push
je
mov
outsl
in
addl
mov
fucomp
leave
jl
jno
jbe
sbb
arpl
push
push
out
imul
dec
jp
xchg
xchg
and
aam
jmp
pop
cmc
pop
insl
xor
xor
test
push
push
lds
popf
jbe
repnz
in
jg
repnz
jo
out
inc
push
mov
adc
xor
call
movsb
fadd
xor
xchg
sub
outsl
repnz
pop
pop
push
les
rcr
imul
jge
mov
and
imul
call
push
and
fisttpll
add
push
testl
lahf
push
pop
daa
ret
adc
das
or
lock
push
push
xor
popf
push
xor
insb
inc
jge
push
ret
sub
das
in
cmpsb
dec
ljmp
movb
aaa
es
mov
leave
inc
popf
imul
mov
icebp
rcr
mov
and
shrb
loopne
pop
stc
mov
xlat
hlt
xor
ror
cmp
dec
push
js
jnp
cld
nop
sub
xor
push
jl
push
hlt
inc
mov
mov
shl
stos
insb
lea
xchg
mov
mov
push
pop
sbb
fdivrs
cmp
mov
pop
lock
or
mov
bound
pop
cmp
ret
es
aaa
icebp
and
adc
idivl
add
sub
rol
test
loopne
lcall
sbb
inc
pop
push
nop
test
lcall
lods
xchg
inc
mov
mov
push
lret
enter
ja
arpl
add
shrb
add
sbb
xchg
ljmp
dec
cvtdq2ps
dec
fdivl
insl
icebp
aaa
sbb
jmp
dec
jae
mov
into
daa
adc
sub
xchg
sbb
leave
pop
outsl
hlt
insb
jno
out
loopne
xchg
add
loope
mov
push
outsl
int3
mov
jle
mov
enter
xchg
pop
movsb
out
adc
inc
addr16
int3
call
cmp
fists
xchg
mov
sub
push
incl
sub
rol
shlb
negl
fiadds
cmp
fs
test
cmp
mov
mov
mov
or
xor
mov
jbe
popa
popa
pop
dec
mov
pop
ds
out
jmp
jg
ljmp
imul
jae
lcall
jae
imul
dec
pop
adc
xor
jge
outsb
inc
xchg
int
adc
loopne
inc
in
outsb
jmp
dec
jbe
mov
xchg
pop
aad
sbb
fcmovne
notl
cmpxchg
in
or
or
addl
fisubl
enter
hlt
jae
mov
pop
out
fucomi
add
roll
stos
pop
stos
roll
fcmove
jp
pushf
xchg
dec
sub
lock
and
test
mov
jg
dec
dec
loopne
mov
dec
mov
add
fdivl
xchg
add
inc
inc
mov
jo
and
adc
out
fbstp
dec
jnp
out
int3
xor
push
aad
mov
sbb
sub
les
imul
outsl
dec
and
jge
jns
lock
and
jbe
ficoms
and
push
adc
xchg
cmc
add
in
scas
xlat
neg
pop
outsb
pushf
mov
addr16
andl
and
test
xlat
rcll
repz
jge
lret
lock
push
mov
mov
js
inc
int
aaa
arpl
ret
mov
lahf
dec
fsts
arpl
js
scas
or
lahf
test
jb
daa
pusha
jb
or
lods
hlt
dec
inc
push
jne
std
and
xlat
push
jmp
jae
dec
cs
or
jmp
add
or
shlb
adc
sbb
pop
pushf
repz
sti
stos
mov
push
insl
aas
push
add
mov
xlat
jne
dec
and
or
inc
jmp
sub
or
xor
out
test
lock
cmc
or
test
mov
xchg
inc
pusha
pop
pop
jecxz
jp
jbe
lds
daa
fs
in
cwtl
pop
rcll
in
adc
test
ja
xor
cmp
cmpsb
jl
sub
cmc
das
push
icebp
sub
inc
movsl
adc
fwait
leave
add
add
inc
fnstenv
dec
cwtl
mov
fsubr
mov
loope
insb
xchg
dec
in
and
scas
sub
add
dec
shrb
mov
shrl
push
lahf
ficompl
mov
sub
mov
das
cmpsb
lods
xor
pop
adc
mov
cmp
mov
lods
pusha
mov
adc
pop
das
addr16
xchg
jmp
inc
adc
sub
and
jne
inc
or
jl
out
mov
and
pop
jg
mov
jg
xchg
dec
rcrb
xor
xchg
mov
ret
xchg
jmp
cmp
aas
test
pop
cli
js
and
xchg
sub
dec
push
clc
out
mov
sbb
adc
push
sbb
mov
push
and
add
into
das
inc
rcl
in
sub
dec
xchg
xchg
sar
fs
fadds
jecxz
cwtl
test
dec
inc
pop
mov
cmpsb
xor
pop
nop
cmp
imul
fildl
mov
stos
idivl
and
cli
mov
sbb
push
xchg
inc
or
ret
push
jge
mov
mov
xor
push
into
enter
pop
dec
mov
lods
rcl
repz
icebp
popa
push
jbe
mov
pop
inc
dec
fwait
stos
pop
repnz
imul
jmp
push
push
fcmovnu
cmp
sub
mov
adc
sbb
mov
dec
xor
or
lcall
push
dec
sub
stc
mov
xchg
pop
jb
ret
lock
test
xchg
call
add
aam
jns
or
inc
aad
into
in
sahf
inc
xor
adc
xchg
sbb
sahf
cld
jno
xchg
xor
add
call
lea
adc
outsb
inc
pop
inc
jbe
jle
mov
or
mov
xor
stos
mov
lret
push
lock
jo
mov
sbbl
or
cmp
shll
or
xchg
sub
movsb
fbld
jbe
sub
inc
pop
in
cmp
das
gs
or
jp
mov
xor
cmp
rcrb
aad
pop
leave
ret
out
fisubl
jo
hlt
pop
loope
xchg
pop
adc
nop
inc
push
or
fcoms
cltd
subl
sub
mov
insb
mov
cmp
pop
decb
dec
out
mov
push
xchg
pop
dec
push
movsb
hlt
fiadds
cmp
mov
test
add
pop
mov
loope
rcll
and
dec
test
or
gs
scas
jno
aam
mov
repz
push
loope
pusha
sbb
bound
out
and
lods
cmp
scas
gs
aam
rolb
mov
dec
in
out
push
jle
divl
mov
int3
imull
les
aas
mov
pop
add
sbb
inc
imul
pop
call
shll
repnz
std
aas
mov
imul
sub
cmp
mov
lods
dec
mov
sarb
xchg
jno
add
sub
cmp
stc
lods
aas
insl
out
inc
sub
arpl
lods
jp
movsb
aas
lds
pop
xor
repnz
xor
aaa
xor
mov
pop
pop
sub
pop
cmp
pusha
mov
mov
sbb
outsl
cli
xlat
sbb
jb
arpl
sbb
cli
sarb
insb
inc
sub
and
insb
into
cs
loopne
sbb
mov
mov
lods
je
fcmovnu
out
sarb
icebp
arpl
negl
xchg
xor
sbb
push
shll
cs
inc
repnz
dec
push
adc
push
notb
inc
gs
mov
cwtl
in
or
sbbb
xor
push
pop
ds
es
push
mov
jb
rcrb
or
mov
dec
std
test
aas
imul
xor
sti
xor
imul
nop
cli
outsb
and
and
xor
ljmp
dec
push
outsb
leave
jge
mov
ffreep
js
pop
xchg
insl
fists
repnz
cmp
insl
sub
push
cmp
in
imul
sub
xchg
inc
hlt
lds
bound
adc
loop
jnp
fnstsw
sub
cli
jl
test
xchg
ss
adc
add
shl
mov
cs
xchg
andb
pushl
aad
push
or
jl
nop
or
jle
imulb
sub
mov
das
gs
and
sbb
and
pop
bound
adc
adcb
jno
idivl
jbe
les
fldt
inc
sub
int
outsb
mov
jmp
adc
pop
enter
shl
mov
push
cld
mov
js
dec
mull
arpl
frstor
push
test
add
icebp
xlat
xchg
xor
pop
fildl
cmpb
imul
jbe
ret
cmp
js
fucomi
test
inc
add
and
lret
fsts
out
or
xorl
std
mov
out
ret
loopne
enter
ljmp
lcall
and
je
out
mov
push
sbb
insl
pusha
mov
pop
loopne
jg
mov
cld
mull
imul
or
jecxz
in
lahf
push
out
add
lods
rclb
xchg
and
daa
fisttpl
adc
add
stos
sub
les
lret
adc
andl
xor
stc
xor
cmp
cmc
fs
in
mov
jbe
xchg
ljmp
pop
int
jp
stc
cmc
out
pushf
mov
cmp
jbe
lahf
imul
adc
dec
inc
sti
rorl
sar
dec
negl
iret
rclb
inc
outsl
fnsave
xor
out
aas
mov
das
or
loope
dec
out
sti
add
inc
adcb
pop
pop
fs
dec
and
xlat
shlb
mov
sub
lods
cmp
adc
inc
lret
sub
or
nop
shll
xor
scas
in
mov
adc
pushf
mov
mov
mov
psrlw
int
out
arpl
mov
scas
push
jns
or
mov
outsb
inc
idiv
fstpt
and
in
inc
push
std
gs
out
mov
add
idivl
sub
mov
sub
and
pop
stos
icebp
loopne
xlat
xorb
hlt
shll
mov
nop
xchg
loopne
jge
lcall
icebp
popf
pop
dec
popf
addr16
push
dec
add
xor
fsts
es
adc
lock
test
lcall
mov
cwtl
rolb
arpl
pushf
out
aaa
mov
popf
xor
daa
sti
cmpsl
push
ret
push
xchg
sar
push
push
hlt
xchg
adcl
or
ja
movsl
into
sub
cld
aaa
inc
test
push
ljmp
call
lea
in
imul
out
js
sub
sahf
add
out
pop
sbb
jnp
xor
aam
lds
lret
mov
sbb
lret
mov
dec
test
dec
xchg
or
nop
jmp
iret
fidivs
jecxz
arpl
add
dec
add
mov
mov
repz
push
push
xor
incb
lret
xlat
sbb
mov
scas
lret
pushf
xchg
pop
test
sub
xchg
pop
shr
repz
mov
push
pop
cmpsl
scas
sbb
leave
cs
and
scas
adc
add
lds
rol
andb
stos
push
scas
jno
mov
fisubl
leave
pop
aam
mov
lods
lcall
sbb
out
adcb
jge
cmp
aad
xchg
jmp
cwtl
add
or
pop
pop
pop
lods
loope
inc
test
sbb
dec
xor
cld
mov
nop
daa
cmp
sti
lret
pop
in
jl
das
inc
sbb
out
mov
leave
jle
cs
jb
repz
lret
fcmovnbe
sub
push
jmp
sub
test
loope
push
ja
and
fcmovb
cltd
sti
loopne
xor
cwtl
mov
pop
xchg
call
cmp
adc
lret
jae
mov
sub
and
test
cmp
mov
dec
repnz
loopne
sub
xchg
test
jl
push
std
xchg
cltd
xchg
popf
cmp
push
jnp
add
test
mov
push
addl
sbb
xchg
jg
and
and
lock
aam
insl
inc
ret
leave
push
pop
mov
add
or
pop
inc
incb
addl
push
fs
mov
mov
cmpsl
mov
adc
loope
jns
jnp
cmp
cli
xchg
call
cld
pop
inc
stc
sub
mov
outsl
imul
insl
insl
mov
and
push
out
or
bound
mov
subl
adc
xor
mov
xor
aad
addr16
and
ljmp
jg
add
xor
jae
add
aad
popf
loopne
arpl
aad
push
in
nop
jge
and
jnp
push
movsl
call
fwait
lcall
sub
mov
pop
push
stos
dec
add
cli
rclb
cmpsb
or
pushl
loop
ja
test
sahf
push
out
sbb
inc
xor
arpl
sub
push
jae
loop
pop
aam
dec
pop
out
loop
xchg
adc
lea
cmpsl
xor
mov
pusha
mov
sbb
mov
aaa
clc
dec
sbbl
repnz
mov
sub
sbb
jge
sbb
xchg
sbb
lahf
adc
pop
jge
nop
mov
adcl
pop
dec
in
gs
adc
jp
in
sbb
push
addr16
jle
or
arpl
push
mov
lea
iret
int
daa
adc
fwait
mov
mov
cmp
jns
repz
out
gs
into
mov
arpl
jo
push
add
nop
lcall
or
adc
stos
push
outsb
mov
inc
ret
adc
or
mov
lea
pop
outsb
lods
sbb
add
mov
ret
add
outsb
inc
push
or
adc
or
xor
dec
sahf
cwtl
pop
into
push
lret
pushf
out
mov
mov
mov
sub
nop
sbb
push
lods
orb
popf
insb
mov
leave
clc
repz
loope
push
lahf
fstpt
sub
add
mov
mov
cmp
cmp
adc
loopne
popa
mov
out
ror
mov
xlat
jnp
scas
mov
pushf
icebp
dec
cmp
and
fucomip
jbe
pop
lock
xor
pop
das
mov
sub
gs
pop
cmc
es
cmpsl
ja
je
es
sbb
movsl
loope
outsb
xchg
cmpb
xchg
push
cmp
loopne
adcl
outsb
pushf
cltd
bnd
and
sub
into
scas
je
push
cwtl
xlat
dec
fcompl
sbb
pop
fisubrs
pop
fwait
scas
stos
or
pop
mov
sub
pusha
mov
mov
pop
mov
or
mov
mov
xchg
les
ret
pushf
cmp
jg
mov
shlb
call
mov
mov
sbbl
cli
pop
sub
mov
sbb
ret
jb
add
xchg
loope
outsb
dec
mov
mov
cmp
roll
push
je
lret
ja
mov
cs
lahf
ds
mov
adc
cmp
xchg
sbb
sub
fucomip
shr
push
imul
sbb
mov
rcll
jns
hlt
cmpsl
sub
mov
and
ljmp
dec
mov
clc
xor
pop
mov
cmpsb
in
nop
out
insl
clc
les
mov
daa
sub
mov
je
jl
sti
dec
test
and
jmp
mov
cmp
and
xchg
xchg
leave
jmp
xchg
inc
decl
cmpsl
pop
lock
xchg
leave
in
mov
in
xchg
iret
enter
push
orl
push
hlt
push
fs
mov
xchg
push
fmuls
out
rol
adc
mov
sub
push
mov
or
mov
cs
dec
bound
dec
cmp
or
cmp
mov
insb
test
cli
insl
call
pop
cmp
pop
ljmp
sub
arpl
stos
fwait
aad
push
dec
pop
lock
and
mov
sbb
jae
jle
jae
mov
xlat
in
in
adc
movsb
mov
mov
xchg
pusha
in
jae
mov
pop
test
xlat
mov
or
fxam
shl
mov
mov
sub
push
inc
or
dec
idivl
xor
insb
mov
xor
push
xchg
insl
pushf
test
or
dec
repz
repnz
mov
and
xor
in
jnp
jnp
jbe
mov
repz
sbb
clc
inc
xchg
or
or
in
xchg
xor
rorb
je
add
push
pushf
icebp
adc
push
jge
push
inc
cld
cmc
mov
mov
push
adc
es
xchg
cmpsb
adc
insb
inc
xchg
int3
addb
sbb
daa
lcall
rclb
out
ljmp
rol
leave
push
inc
push
jb
pop
lcall
fcmove
xchg
pop
pop
and
dec
cltd
lods
stos
fdivs
arpl
fildll
sti
jle
sahf
push
mov
push
loop
xor
shl
nop
cmp
fs
sbb
xchg
push
pop
jge
or
repz
dec
sub
dec
mov
outsl
mov
or
jmp
xorb
iret
jae
shl
add
xor
sub
js
out
loop
mov
xchg
loopne
inc
movsl
mov
dec
mov
insl
cmp
push
inc
adc
jne
addr16
dec
ja
cs
push
insl
divl
mov
or
ja
loop
xchg
dec
add
cmp
clc
cs
pop
test
lods
ficoml
add
or
out
xchg
jg
cmc
xchg
xchg
loop
sbb
pop
jecxz
or
cmp
outsb
dec
adc
testb
aad
mov
mov
xchg
fnsave
sub
lds
arpl
fiadds
gs
cmpsb
pop
nop
pushf
jae
cmpsl
sbb
or
and
sub
mull
mov
outsl
ret
test
rclb
inc
stc
or
pop
dec
mov
push
fstpt
in
in
and
sbb
cwtl
aad
xchg
xchg
jmp
sbb
jne
adc
sub
int3
out
mov
jmp
push
mov
outsl
xor
es
or
cld
or
in
insb
xlat
scas
shl
or
lret
pop
out
jge
sub
sub
pusha
xchg
sub
mov
mov
in
clc
out
mov
test
lcall
lcall
push
mov
mov
push
in
fmuls
mov
in
sti
add
pop
mov
push
call
leave
or
adcb
and
push
loop
add
in
rcl
sub
cmp
cmpsb
stc
shrb
pusha
lret
sti
add
add
dec
es
jl
dec
mov
jmp
rorl
dec
std
rclb
pop
mov
fmuls
pop
or
ss
or
hlt
repnz
mov
cmp
jl
daa
stos
cmp
mov
xchg
dec
loop
in
loop
icebp
shlb
add
hlt
int
and
cmp
add
jnp
cmp
mov
push
pop
lret
jle
jo
hlt
and
pop
inc
sbb
int3
push
pop
sbb
scas
xor
cmp
leave
xor
mov
rol
fwait
xchg
mov
mov
das
mov
adc
inc
int3
sbb
in
lds
push
loopne
gs
mov
aam
mov
jge
clc
mov
pop
jecxz
cli
xchg
xchg
hlt
pop
mov
xchg
mov
fs
mov
subb
scas
out
xchg
sbb
lahf
test
sub
and
sub
pop
fistl
cmp
jb
push
movsl
or
cmp
jae
movl
aaa
ds
or
mov
dec
fwait
xchg
dec
mov
in
into
out
inc
dec
inc
mov
cmp
push
cmp
or
mov
xchg
adc
xorl
jmp
push
jns
xlat
rcrl
adc
cmp
mov
in
enter
sbb
sbb
cld
pop
push
sub
adc
repz
mov
icebp
sbb
inc
push
sbb
jb
sti
cmp
cmc
pop
in
movsl
shll
in
and
mov
pop
jbe
or
mov
inc
mov
sub
dec
movl
je
mov
dec
outsb
inc
rcl
xor
jp
mov
pop
int3
push
cmp
lcall
and
cmpsb
pop
fildll
inc
out
cmc
pop
mov
adc
bound
shl
dec
repz
aam
inc
dec
or
add
ljmp
leave
aas
cltd
push
push
scas
rcrl
cmp
adc
and
lods
out
sub
fiaddl
loope
mov
add
fsubrs
sub
push
aas
mov
lds
or
jo
test
jecxz
and
xorb
xor
and
sbb
movsb
jne
xor
loope
mov
lods
call
push
push
and
sbb
sbb
out
add
data16
and
mov
pop
xchg
test
mov
addr16
fwait
add
sahf
fisubs
pop
xchg
add
sub
out
das
imul
or
aaa
jmp
or
sub
nop
xor
push
jo
cmp
mov
movsl
ret
push
int
aas
mov
xchg
out
inc
int
clc
sbb
xor
push
loope
cld
mov
nop
mov
es
pop
cmp
int
lcall
out
pop
sar
dec
out
add
add
jp
jl
ret
mov
xlat
sub
movsb
push
enter
and
sbb
int3
xchg
mov
jb
gs
fisttpl
sbb
das
addr16
sti
dec
jp
add
pop
mov
gs
mov
fdivl
mov
lahf
aad
popa
test
mov
mov
jl
adc
push
ja
pop
clc
lret
mul
std
rorl
push
int
out
lods
lock
sti
mov
adc
sbb
test
pusha
aas
arpl
in
or
cs
in
repnz
push
mov
popa
lods
xchg
lahf
clc
outsl
add
add
mov
hlt
mov
mov
dec
and
push
bound
test
nop
pop
dec
lea
cmpsb
adc
fldt
daa
mov
xchg
adc
mov
mov
push
stos
mov
and
fmuls
cmp
sub
jmp
loop
adc
hlt
lahf
int
movsl
sarb
call
fcoms
mov
sbb
dec
loopne
mov
das
pusha
adc
rclb
inc
adcb
movsl
data16
xor
push
push
mov
add
pop
mov
sbb
xchg
scas
pop
aas
xchg
test
sub
dec
add
nop
out
js
xchg
xor
cmp
rcr
ss
in
adc
mov
shr
push
sub
cwtl
cmpsl
enter
andl
lret
mov
fmuls
bound
sbb
jbe
aad
push
push
rcrl
cltd
insb
add
test
push
inc
sub
testl
sub
sub
or
call
mov
popf
cs
mov
pop
xchg
push
popf
repnz
jp
fldcw
cmp
aad
mov
fdivp
rcll
jmp
ss
or
mov
outsb
adc
cmp
cmp
roll
cwtl
daa
shlb
test
bound
xchg
xor
fwait
and
cs
aaa
test
pop
dec
jge
cmp
sub
xchg
rcl
xchg
cltd
mov
xchg
insl
mov
sbb
dec
inc
pop
stc
dec
or
mov
mov
inc
mov
stc
rcr
jns
sub
adcl
inc
gs
push
in
sub
dec
vmovapd
push
lahf
fs
fstpt
stos
and
repz
lds
pop
je
shrl
xor
or
mov
fdivrs
pop
cs
fnstcw
pop
ret
inc
mov
ss
fs
cmp
inc
nop
jns
cmp
jns
stos
inc
jns
testl
sbb
leave
filds
gs
mov
mov
ficoml
adc
mov
scas
push
call
js
ss
test
sub
dec
xlat
popa
call
in
test
mov
push
test
cmc
outsb
push
ja
pop
sahf
addr16
bound
out
add
jnp
stos
add
and
repz
add
lret
mov
or
mov
pop
adc
dec
pop
or
inc
cmp
add
rorb
out
mov
pop
or
inc
comiss
idivb
or
gs
movsb
mov
fsubs
xchg
mov
stc
push
mov
ss
seta
stos
push
aaa
ds
sbb
xor
ffreep
sbb
iret
movsl
ret
xchg
jae
stc
or
adc
xchg
repz
fiaddl
lret
cmpb
jle
jge
repnz
mov
xchg
jne
lods
adc
call
cli
in
push
dec
dec
hlt
jb
and
lahf
cmp
mov
pop
push
or
in
insl
arpl
js
push
into
dec
sub
sbb
mov
les
cs
add
sbbl
out
mov
adc
shrb
movsl
add
ret
sub
rorl
xchg
xchg
fs
lahf
sarl
rclb
pop
push
loope
dec
pop
push
nop
rclb
lcall
inc
adc
stos
repz
xor
pop
popa
sub
pop
jno
jle
clc
cltd
sbb
data16
jmp
cmp
lret
adc
pop
ret
and
sub
dec
add
test
subb
lods
mov
test
mov
movq
movsb
stos
jbe
jp
outsl
test
test
insl
lea
cmpsb
sub
and
push
sbb
jmp
mov
repnz
loopne
lods
hlt
adc
or
dec
mov
add
pop
adc
mov
ficoms
dec
pop
pusha
fwait
adc
dec
jb
jle
dec
sub
sub
sbb
cmpsb
push
pusha
call
call
jmp
xchg
ds
sub
and
or
pop
xor
adc
mov
sub
fcomps
or
and
fisubrs
insl
cli
hlt
pop
jb
mov
das
add
les
sbb
test
lahf
daa
push
xor
jecxz
divb
inc
dec
dec
mov
sub
int
loope
sub
idivb
jne
inc
mov
call
fstpt
inc
outsl
mov
sarb
or
fs
mov
sbbb
int
in
imul
xor
lret
adc
inc
outsb
shlb
enter
sbb
arpl
lret
push
fincstp
push
movsl
lahf
and
ja
adc
mov
loopne
xchg
inc
insb
cld
ja,pt
jmp
ret
data16
and
in
dec
gs
popf
mov
mov
and
cmpsb
adc
test
and
popa
xchg
std
call
enter
jmp
cmc
aaa
shll
mov
jg
leave
xchg
cli
sti
icebp
mov
jo
push
xchg
xchg
mov
xchg
sti
push
pushf
push
push
dec
imul
pop
shll
popa
ja
out
mov
inc
cmp
adc
fwait
and
push
dec
aaa
xor
inc
pusha
scas
adc
cmpsl
jb
xadd
push
pusha
stc
and
lahf
aas
lods
imul
fs
mov
roll
into
data16
jmp
and
aam
xchg
shrb
sbb
mov
sub
ficoml
dec
push
out
jnp
pushf
rcrb
dec
in
dec
pop
rcl
push
inc
xor
add
fdivrl
popf
xchg
lea
push
rclb
inc
push
jmp
out
pop
dec
adc
fdivrs
aad
cmp
out
testb
ret
outsb
int3
outsb
fnstenv
pop
mov
mov
push
jnp
sbb
test
mov
ds
jno
cmpsb
decl
or
jo
dec
and
push
fstl
sbb
stos
mov
aam
xchg
clc
mov
push
imul
ljmp
aad
adc
rolb
ja
or
cmp
inc
or
mov
jg
loop
push
add
lds
lret
jmp
lods
jl
mull
pusha
or
ss
cld
sub
and
sub
mov
jb
jb
jl
lahf
mov
mov
add
lahf
fdivl
lcall
xor
push
push
out
lcall
iret
cmp
daa
addb
aam
das
jg
es
push
lods
jne
xchg
mov
mov
imul
push
imul
push
mov
add
or
notl
mov
cmpb
push
addl
or
ret
popf
push
iret
xchg
xchg
ja
sbb
xor
xchg
inc
xor
jecxz
in
icebp
mov
mov
lret
rorl
enter
dec
add
sti
xchg
pop
cmp
inc
shlb
lods
push
push
hlt
aas
cmp
mov
mov
inc
inc
push
xchg
xor
arpl
sub
fcmovb
test
adc
cli
pushf
fistl
and
sbb
in
ficoms
mov
aad
jmp
int
or
cli
adc
cli
stos
mov
inc
movsb
das
mov
adc
jnp
or
push
jecxz
inc
cmpb
imul
push
add
rcrb
jbe
cmp
lea
hlt
dec
jl
pop
push
sub
ret
sbb
push
mov
xor
dec
test
cmp
insl
shlb
push
aaa
cmp
push
mov
sub
pop
mov
mov
push
push
popa
dec
int3
push
xor
stos
mov
and
sub
cmp
sub
js
or
in
and
jg
js
inc
xchg
inc
lock
imul
mov
adc
cmpsl
add
mov
loope
out
pop
xorl
xchg
out
inc
je
adc
jnp
movsl
jecxz
add
test
xchg
xchg
and
mov
lahf
pop
test
ljmp
xchg
xlat
pushf
shlb
adc
popa
push
mov
into
fwait
and
mov
in
jno
jbe
cmc
jbe
nop
mov
xor
cmp
jmp
loope
fld
dec
dec
and
xchg
jl
xor
fstpt
xchg
adc
std
dec
decl
negb
outsl
pop
sbbl
es
jl
xor
inc
mov
sbb
pop
dec
cmp
adc
xor
xor
mov
cmp
xchg
xor
insb
jnp
push
push
push
pushf
jne
ret
xor
dec
adc
lret
test
mov
push
mov
imull
cmpsl
lods
sub
out
pop
pushf
stos
jp
and
pop
arpl
in
cmp
ja
loop
cmp
pop
xchg
es
fld
in
or
mov
stos
add
mov
jg
cld
mov
std
adc
lret
mov
rorl
in
aad
pop
in
ljmp
or
int3
jnp
cwtl
out
jbe
das
or
test
jp
mov
xchg
movsl
xor
xor
xchg
mov
mov
mov
or
mov
mov
cmc
xor
pop
xor
imul
popa
loope
jae
xor
addr16
cmp
xchg
dec
and
je
in
in
cmp
mov
push
xchg
inc
pop
xchg
jo
mov
faddp
int
repz
xchg
push
push
rorb
sahf
out
out
mov
xchg
adc
add
lods
test
push
mov
stc
ja
nop
xchg
mov
or
and
adc
push
adc
adc
cld
stc
das
popf
test
pop
outsb
xchg
mov
sub
mov
ret
inc
movsl
stos
jne,pn
enter
xchg
cmp
or
mov
repz
or
sarb
out
jge
xor
popf
aaa
repz
cmc
jl
mov
mov
roll
or
and
aad
xor
add
incb
fwait
popf
mov
inc
dec
call
mov
push
push
scas
leave
mov
jp
sbb
test
sbb
int
gs
xchg
cmp
mov
mov
loop
jne
ljmp
loope
stc
aad
gs
aam
mov
subl
in
enter
and
outsb
xchg
ret
cmp
mov
movsl
inc
iret
scas
xchg
mov
out
mov
sub
cmp
pop
mov
lea
stc
outsl
xor
cmp
xlat
jl
mov
xchg
cmp
jo
test
cld
and
pusha
outsl
sbbb
aas
das
xor
sbb
mov
cld
aas
aam
clts
mov
movsb
xchg
jecxz
adc
jo
xor
icebp
ljmp
pop
mov
cwtl
inc
rcr
pop
test
or
rclb
hlt
push
lahf
pop
out
push
into
cmp
jbe
pop
enter
js
out
in
sbb
xchg
push
fcompl
sbb
mov
outsb
sbb
dec
mov
xor
jp
xor
icebp
and
inc
mov
js
xor
cmpl
or
jnp
mov
lret
sbb
xor
movsl
lods
fs
and
push
push
mov
mov
arpl
fmuls
push
sbbl
pop
mov
fwait
mov
fcompl
jmp
les
cwtl
dec
pop
xor
cld
inc
mov
clc
pop
dec
sub
dec
lret
les
jmp
stos
in
adc
in
jle
and
push
add
imul
stos
and
sub
lods
out
xor
push
sbb
test
xchg
subl
jmp
call
pop
jae
clts
push
or
inc
iret
mov
imul
mov
test
add
fisubrs
sbb
jns
inc
mov
jg
inc
push
test
mov
or
cltd
fdivrl
dec
out
inc
xchg
rorb
jb
cli
jg
adc
arpl
daa
jb
sub
cmpsb
sti
bound
push
into
insl
xor
xlat
mov
or
sbb
or
push
jbe
jmp
mov
sub
loope
push
lods
push
je
inc
sbb
aaa
aaa
push
sbb
xorb
sbb
pushf
mov
daa
sti
sub
adc
imul
push
mov
jmp
mov
nop
mov
je
jae
pop
roll
xchg
inc
aam
cld
lea
arpl
xchg
mov
mov
and
mov
jo
movsl
lahf
push
clc
add
and
fildll
iret
and
xchg
addb
ljmp
in
pushf
clc
inc
sub
daa
mov
pop
mov
into
dec
ss
outsb
cmp
xor
inc
rol
pop
jae
fnsave
and
ljmp
adc
add
outsl
pusha
push
mov
out
push
jmp
outsb
cmpsb
mov
dec
sbb
or
ss
sub
mov
and
insl
clc
mov
mov
repz
pop
inc
daa
inc
xor
sarl
es
push
cmp
out
cmp
into
stc
pop
mov
cmpsb
gs
ljmp
sub
cmp
jo
fisubrs
push
int3
pop
aad
fldcw
sahf
or
imul
push
mov
sub
adc
pop
cwtl
pop
add
inc
sub
sub
pop
adc
lock
xlat
rol
mov
ljmp
frstor
adc
out
ja
inc
cmc
mov
pushf
push
in
lret
push
imul
hlt
mov
dec
xchg
sub
aam
in
nop
xchg
mov
divb
xchg
idivl
mov
sub
xor
roll
inc
ss
push
stos
in
popa
into
xor
add
push
sub
inc
lret
paddq
addr16
or
movl
mov
pop
lds
sub
lock
hlt
out
sarb
mov
movsl
push
dec
xchg
out
inc
addr16
inc
mov
add
cmpl
bound
adc
push
lret
lods
pop
pop
fwait
outsl
movsl
aaa
movsl
dec
push
mov
and
js
fs
cmp
int
lahf
xchg
test
dec
cmp
not
rcrl
xor
xchg
sub
and
cmpb
adc
loopne
push
lcall
call
fdiv
aad
int3
dec
js
and
lcall
push
mov
or
jo
jb
ss
rep
stc
push
pop
test
pop
es
nop
dec
shl
cmpsl
dec
clc
test
fwait
ficompl
dec
fwait
jmp
fsubrs
inc
fs
js
lds
pop
pushw
repz
inc
enter
pop
ljmp
push
inc
jb
sub
insl
sbb
test
test
in
or
sarb
test
fcmovnb
push
nop
and
aaa
cmpsl
sbb
jbe
call
sbb
addr16
in
ret
inc
xor
scas
popf
rcpps
push
adc
sbb
push
mov
lcall
test
xchg
out
lods
fsubr
pop
xchg
test
pop
ja
sbb
or
lods
stos
clc
lods
fisubrs
insl
fs
test
and
adc
xor
push
push
int
mov
in
testl
pop
sbb
push
in
mov
or
subl
add
cs
jo
or
sbb
shll
comiss
jge
and
push
imul
inc
icebp
xor
push
mov
sti
rol
and
scas
dec
mov
in
xor
test
leave
js
cmp
ret
movsb
pop
jnp
dec
and
cmp
jb
xlat
mov
jo
lods
int3
xor
push
in
subl
xchg
test
mov
test
adc
out
fisubrl
mov
push
pop
sahf
insb
mov
push
and
adc
sbb
addb
aaa
in
ds
add
lods
test
gs
inc
inc
enter
ret
int
fldenv
pop
outsb
stos
jecxz
mov
xor
add
stc
cld
loop
bound
decb
call
nop
test
push
aas
es
cwtl
dec
xchg
cmp
aad
xor
cmp
mov
stos
lods
imul
push
dec
and
inc
outsl
push
rorb
js
mov
movsb
sub
ss
mov
sub
lods
clc
sahf
nop
xor
jns
leave
or
mov
sub
or
mov
jbe
pop
pushf
loop
pusha
jnp
mov
stc
fwait
dec
mov
sub
mov
subl
clc
mov
jne
rcll
cwtl
movsl
jmp
gs
and
rorb
sub
or
inc
mov
lcall
add
mov
adc
stos
add
jo
cmpsb
xor
fs
mov
stc
movsl
lea
ja
sub
jno
adc
in
lods
adc
outsl
jge
ret
je
shlb
adc
or
out
cmpl
hlt
ret
jae
fistps
or
andl
or
in
cwtl
xchg
stos
sbb
mov
push
fs
gs
ret
shlb
lods
push
hlt
insb
test
std
mov
xchg
fisttps
xchg
xlat
divl
jge
subb
enter
cmp
outsl
cs
sub
or
dec
mov
xlat
pop
pop
out
movsb
gs
adc
aaa
pop
mov
mov
jmp
push
inc
shrl
pop
xchg
ds
mov
pop
ret
mov
push
test
push
ret
aas
fildl
jne
fistpl
pusha
sbb
sub
mov
out
into
dec
stos
pop
sub
not
mov
jecxz
imul
cmp
test
test
adc
js
or
cwtl
into
je
lock
mov
xor
ljmp
pop
push
sub
sbb
das
push
or
push
addb
std
cmp
cmp
or
gs
adc
imul
js
int
jle
adc
cmc
mov
insb
lcall
rcrl
jmp
std
adc
sbb
pop
sub
push
jno
add
xchg
and
outsl
addr16
pop
xchg
fdivr
pop
stos
loopne
cmc
rdpmc
pop
and
xchg
lcall
shrb
in
add
adcb
int
lahf
les
mov
ret
dec
std
sub
push
inc
push
ljmp
add
mov
orb
pop
ljmp
insb
outsl
mov
ret
adc
icebp
outsb
insb
fwait
cmp
jg
fcoms
xor
inc
cmp
test
lds
xor
pop
dec
negb
fdiv
inc
int3
aas
jne
fildll
jge
xor
pop
ret
sarb
dec
inc
push
jo
adc
jmp
inc
stos
pop
arpl
cwtl
fcompl
insl
shll
mov
inc
mov
cmp
or
cli
lods
pushf
cmp
clc
insl
dec
sbb
loope
xlat
hlt
mov
mov
ror
add
adc
sub
xchg
outsb
mov
push
mov
outsl
out
push
out
test
push
into
in
push
mov
rolb
imul
adc
jae
xchg
pop
into
lock
popf
aas
divl
push
pop
ja
test
and
jns
adc
sbb
mov
and
sub
dec
add
cmp
pushw
add
loop
das
mov
addb
jae
inc
xchg
sub
leave
call
xlat
cmp
lods
pushf
mov
dec
cltd
or
mov
or
add
mov
test
push
cmp
jp
js
sub
and
or
leave
lea
inc
aas
jnp
mov
dec
lcall
pop
rcll
push
mov
mov
xchg
imul
out
and
mov
jecxz
inc
lods
ret
or
das
jl
jns
clc
clc
and
sub
and
pop
jno
in
in
lret
scas
jo
mov
imul
xchg
mov
imul
fistpl
push
aam
inc
in
jmp
cli
lea
pop
inc
iret
std
mov
loope
call
shlb
ja
sbb
mov
pop
cmp
pop
inc
ds
ja
and
sub
cmp
mov
out
ret
or
dec
stos
mov
fs
enter
lods
stc
jmp
sbb
inc
and
adc
scas
mov
dec
lret
loop
sbb
adc
scas
call
push
adc
cmpsb
inc
and
xchg
push
out
push
xchg
jnp
or
jp
mov
xchg
sbb
xor
int
jecxz
test
sub
pop
jne
movsl
fs
mov
in
std
add
es
or
mov
mov
jb
hlt
sub
arpl
sahf
out
fcoml
and
pop
pop
xor
push
jmp
aaa
fnstcw
icebp
mov
cmp
pop
in
or
popa
inc
cmp
or
aas
insl
test
or
sub
std
cli
mov
sub
fsub
nop
push
xor
inc
lds
lahf
mov
out
stc
mov
mov
fsubs
ret
je
aas
pop
sbb
adc
dec
std
push
lret
mov
cwtl
pop
fmuls
xchg
outsl
cmp
lret
lret
sub
imulb
mov
mov
cmc
lret
mov
cld
jb
inc
divb
xor
stos
fcoml
push
es
test
imul
dec
and
insl
mov
cmp
out
push
push
insl
pushf
push
adc
mov
pusha
or
push
ret
xor
push
add
add
in
mov
shrb
ficoml
xchg
and
in
or
shrl
outsl
lret
out
and
fistpll
cmp
addr16
cld
add
lahf
or
xlat
adc
ljmp
dec
pop
xor
push
lods
lret
pop
clc
in
inc
call
dec
push
sarl
or
add
outsl
shr
xchg
je
imul
mov
pop
inc
add
and
ret
mov
and
adc
mov
lods
dec
arpl
imul
lea
pop
and
dec
sub
test
and
add
or
js
xlat
pop
adc
xchg
je
or
xor
lcall
mov
loopne
jne
decb
pop
xor
cwtl
es
outsb
inc
mov
adc
mov
pop
fmull
cmc
mov
mov
push
filds
push
rcl
pop
or
aas
jg
in
cmc
fwait
fs
inc
mov
push
xor
leave
sbb
negl
dec
out
jl
dec
pop
push
xor
cmp
push
imul
pop
ja
cli
jbe
adc
jo
add
push
into
jmp
roll
add
les
cmp
sbb
xor
imul
movsl
xchg
pop
xchg
stc
xlat
jg
cmp
cltd
out
add
mov
ficoml
repz
aas
mov
mov
cmpsb
lahf
inc
js
fwait
mov
lods
sbb
movsb
cltd
sbb
push
cmp
repz
xchg
ds
and
ds
clc
imul
ret
sbb
addl
inc
popa
push
mov
bound
movsb
adc
xor
ds
sahf
inc
pushf
mov
xchg
jp
mov
mov
das
jg
sub
leave
jmp
push
stc
shl
mov
and
add
das
test
test
inc
mov
dec
sar
mov
out
xchg
lods
orb
xchg
shll
daa
scas
cmp
fisubrs
pop
test
or
into
and
push
dec
testl
xor
fildl
xor
scas
ja
insb
xor
out
mov
jmp
sub
je
adc
inc
leave
sub
pop
inc
push
xchg
xor
out
stc
xchg
insl
dec
addb
inc
and
xlat
cmpsl
add
mov
mov
clc
ja
cmp
shrl
adc
sti
sbb
sbb
cltd
cmpsb
jg
cmp
or
push
mov
xchg
add
or
add
adc
jbe
test
outsb
sbb
inc
xchg
pop
xor
inc
fbstp
addl
or
lret
mov
xchg
popf
fwait
stos
das
cld
repz
out
jne
xchg
jle
sub
cmp
scas
lea
dec
pushf
mov
inc
call
xchg
xor
fsubl
out
push
aad
repz
fmull
in
pushf
rorl
fidivs
idivb
pop
adc
add
stos
cmpsb
inc
jl
mov
pop
inc
mov
pop
mov
cmp
cltd
push
sbb
imul
addr16
or
add
mov
jl
pop
js
movsb
pop
rcll
ret
xchg
cmc
movsb
xchg
pushf
ficomps
mov
mov
movsl
and
jp
pop
dec
stos
xchg
cltd
sub
mov
or
or
adc
imull
bound
sahf
mov
dec
add
out
jge
paddsw
mov
arpl
jbe
adc
gs
mov
fnstenv
pop
inc
jle
pop
dec
fiaddl
jb
mov
jmp
xchg
rcrl
pop
push
pop
mov
ss
sbbl
or
out
pop
aaa
sqrtps
outsb
cmc
mov
xor
lock
enter
fs
dec
fcompl
ss
add
mov
mov
outsl
xchg
out
out
sub
mov
aam
cmp
adc
sbbb
jae
xor
loope
stos
or
or
test
jp
mov
shlb
pop
inc
and
sbb
adc
mov
nop
mov
lret
cmc
dec
movsl
popf
into
orb
insb
int
push
addr16
shll
xlat
into
jae
mov
pop
inc
push
lods
hlt
mov
xchg
cmc
jp
nop
outsb
leave
incl
xchg
mov
cwtl
or
push
hlt
jmp
xchg
mov
xchg
jl
stc
loopne
loope
data16
inc
pop
clc
adc
jmp
test
cmp
rcrb
daa
xchg
mov
inc
mov
inc
mov
insl
repz
inc
shrl
insb
aad
inc
xchg
add
popa
scas
jne
xchg
lods
hlt
leave
daa
and
stos
xor
loopne
adc
pmaxub
shlb
aad
pop
clc
inc
insl
mov
movsl
jns
or
push
test
cld
outsb
movsb
imul
push
and
sbb
sbb
fisubl
clc
pop
shrb
clc
mov
inc
loop
movsl
push
jle
mov
sbb
lods
inc
add
cmp
lods
mov
or
push
push
mov
insl
ljmp
push
mov
lret
sub
mov
xchg
popa
or
mov
inc
add
adc
dec
pop
dec
push
push
pusha
cmp
nop
add
jns
xor
jle
mov
mov
add
popa
vmaxpd
xor
in
loopne
insb
cmp
push
in
jno
push
std
push
hlt
mov
jp
dec
xor
mov
into
sbb
and
out
gs
mov
addr16
sti
mov
dec
cld
ljmp
std
test
fiadds
fldl
aad
insl
fsubl
mov
clc
roll
addr16
lods
orl
and
pop
xchg
dec
mov
enter
ds
push
pop
mov
imul
rorb
and
xchg
out
inc
imul
sti
hlt
loope
rorb
insb
stos
add
jb
jp
rcll
shll
ret
sahf
push
lods
push
gs
xchg
sahf
cmp
mov
push
jae
or
std
js
mov
out
leave
ss
stos
sarb
ja
arpl
pop
cmp
jge
inc
out
push
sbb
add
daa
movb
lret
jno
pushf
xchg
shlb
iret
jg
insb
sbb
jne
push
rcr
mov
jge
test
arpl
adc
lcall
sub
xchg
cmc
sub
movsb
and
in
lret
fwait
out
cmpl
or
and
cmp
push
xchg
bound
sub
jmp
jp
fmulp
jg
or
jl
jmp
sbb
cld
aas
popa
mov
jb
xchg
push
sbb
jno
push
mov
jnp
jo
les
inc
jg
xor
jecxz
dec
pop
test
sbb
and
lock
pop
jne
daa
fstpl
aas
jg
push
mov
inc
fwait
inc
inc
xchg
pop
ret
sti
cld
mov
inc
xor
pop
adc
subl
pop
pcmpeqw
std
shl
jnp
xor
dec
or
adc
lods
xchg
adc
je
in
shll
js
add
sbb
jge
push
push
sbb
clc
mov
loopne
lcall
fisubl
sahf
cli
shrb
outsb
mov
pop
and
int
out
out
mov
insl
fisttpll
rcrl
nopl
sub
mov
pop
xor
cmp
jg
fimull
stc
mov
pop
dec
inc
xchg
mov
xor
xchg
ss
cmp
cmpsb
aad
enter
lea
fidivs
outsl
jp
jo
mov
jl
rorl
fsubs
add
loop
pusha
and
cmp
int
jp
mov
je
pop
ljmp
sti
mov
pop
add
sahf
add
test
jnp
cmp
aaa
fiadds
mov
ja
into
icebp
cmp
xor
xor
repnz
scas
cmpsw
mov
and
and
jecxz
jp
cmp
xchg
inc
jle
mov
arpl
in
cmp
je
rol
push
imul
mov
sahf
cmp
inc
push
lods
xlat
jns
jns
mov
hlt
int
les
dec
loop
movsl
sbb
mov
xor
popf
pop
mov
add
and
arpl
mov
rcr
xchg
and
sahf
jle
add
inc
jns
jmp
lahf
push
pop
mov
shlb
jnp
test
sub
std
pop
pop
test
sbb
popf
cmpsb
jae
mov
xchg
fs
push
inc
xchg
test
cmp
jbe
pop
lret
cmp
outsl
xchg
sbb
cmp
inc
cmp
repz
outsb
fstps
icebp
and
jge
addr16
add
test
shll
int
test
repz
lcall
pop
test
shrb
sub
xor
and
mov
jo
lods
and
lea
pop
mov
cld
jbe
fucomi
fdivr
dec
xor
jmp
cmpsb
xchg
imul
lock
das
into
cmp
lret
sub
dec
xor
jmp
jp
fcmovnb
add
sub
sub
sbb
push
pop
sub
jge
fxch
ret
xlat
pop
les
xchg
pusha
jl
mov
je
dec
pop
pop
push
cli
push
cmp
mov
sarb
jecxz
subl
jmp
outsl
lcall
sahf
sub
inc
pop
hlt
jae
je
movsl
cmpsb
out
je
dec
dec
push
push
scas
outsb
lcall
movsl
test
sbb
sbb
sti
dec
test
inc
dec
arpl
inc
cmpsl
ficompl
mov
popf
push
add
cli
fdivp
mov
dec
adc
movsl
pop
dec
xchg
cmpsl
leave
icebp
pop
das
pop
xchg
push
ret
mov
jno
movaps
add
jno
fwait
orl
pop
mov
je
nop
sub
mov
and
sbb
or
leave
mov
int3
push
inc
xchg
xchg
sbb
pop
rcrb
jmp
dec
shrl
int3
jle
push
jle
pop
sti
pop
push
push
mov
aam
mov
movsl
adc
cli
je
jle
dec
fcoml
jnp
jnp
aad
aam
inc
nop
pop
add
mov
lea
cmc
jne
adc
cmp
mov
call
imul
mov
out
cmpsl
add
cmp
dec
inc
jmp
pop
sti
sub
jg
dec
push
in
pop
sub
dec
mov
jo
lahf
sbb
pop
divb
mov
adc
ja
push
pushf
dec
sti
pop
dec
clc
push
lods
jmp
bound
orb
icebp
cmc
fs
lahf
in
andl
ja
adc
push
scas
aaa
mov
cmpsl
ljmp
xor
push
add
mov
push
into
ljmp
insb
outsb
dec
lahf
mov
inc
and
xchg
cmp
jbe
data16
lcall
pop
lahf
cmp
xor
jb
dec
and
jle
jge
push
add
mov
pop
in
pop
xchg
repnz
jmp
lahf
jl
mov
in
enter
outsb
mov
in
pushw
sbb
leave
cmp
test
jge
mov
pop
cmp
pop
jle
and
pushf
das
mov
mov
xchg
movsl
sqrtps
mov
call
xorb
cwtl
inc
push
sbb
mov
fimull
lods
jno
or
add
inc
pop
loop
ss
sbb
adc
add
aam
fsub
ja
mov
mov
adc
xchg
dec
jno
add
mov
mov
jnp
rcrb
jns
aas
sbb
lcall
aaa
es
mov
push
repnz
and
push
or
mov
mov
add
lea
dec
in
sahf
icebp
dec
xlat
jae
mov
mov
pusha
out
fsts
imul
mov
mov
jp
imul
and
jmp
js
fisttpll
insl
enter
aam
fdivl
pop
shl
aad
push
sarb
xor
fwait
mov
mov
fimuls
popa
jecxz
mov
mov
stos
jb
push
sbb
cmpsl
mov
loopne
push
out
loopne
push
sub
mov
psubusb
cmp
dec
fisttps
inc
fnstenv
ljmp
xor
mov
repnz
gs
es
out
add
pop
lods
lds
jno
cmp
test
pushf
mull
outsl
mov
js
lea
cld
mov
dec
pop
lret
xor
data16
push
sar
mov
mov
push
bnd
rorl
sub
mov
movsl
and
out
mov
xchg
pop
out
aas
shl
dec
xchg
mov
inc
icebp
js
inc
in
xchg
test
ret
dec
aam
xlat
sahf
jecxz
insb
dec
mov
jp
lods
out
jne
jbe
jno
faddl
pop
aaa
push
aaa
je
pushf
pop
fmul
mov
push
imul
sti
xor
dec
pop
mov
xor
in
mov
icebp
int3
fstps
addr16
sub
xchg
cwtl
mulb
or
cmp
test
leave
nop
jb
lret
xchg
fs
inc
jg
das
imul
hlt
add
jnp
rol
aaa
pop
xchg
cmp
loop
mov
cwtl
mov
or
cmp
inc
sarb
dec
outsb
mov
sahf
rcrl
addr16
or
jnp
pusha
mov
scas
sub
pop
das
sahf
and
mov
sub
stos
test
fwait
aad
sbb
lahf
ret
lods
or
cmp
in
xor
out
lret
mov
test
add
mov
fidivrl
sbbb
cli
hlt
js
stos
add
mov
sub
jb
sahf
jb
mov
cmp
test
fisubs
sub
loopne
jecxz
push
ja
test
inc
push
lcall
push
rcrl
rcll
or
cmp
push
lds
divb
jp
test
adc
inc
pop
fadd
or
xlat
fwait
mov
int3
rolb
sub
push
imul
push
nop
rcll
or
ds
inc
in
push
mov
fnsave
mov
dec
jl
jmp
pop
xor
jl
pop
jl
add
push
mov
ss
jle
mov
xchg
jo
and
mov
inc
lods
xchg
out
push
jnp
sti
pop
cmp
movsb
popf
adc
gs
push
stos
xor
aam
inc
jae
dec
xor
mov
addr16
into
and
int3
mov
cmp
xchg
js
jg
clc
mov
jbe
push
cmp
or
cmp
test
stc
jp
cld
aad
loopne
sarb
movsl
dec
movb
nop
mov
loopne
test
hlt
sbb
dec
sbb
je
aaa
xchg
les
dec
in
mov
fmul
les
xor
ljmp
lds
nop
mov
push
data16
inc
xor
cmp
push
jnp
xchg
pop
xchg
sbbl
or
into
pop
add
inc
or
cmc
jo
cli
inc
mov
rcll
mov
add
lea
loopne
pop
inc
pusha
xor
or
outsl
aam
mov
insb
mov
mov
mov
jmp
aaa
cmpsb
and
hlt
mov
mov
jmp
shll
out
push
imul
push
push
dec
faddl
sub
xchg
scas
cltd
jp
repnz
ret
bnd
xchg
add
call
push
xor
lahf
daa
stos
sbb
cmp
adc
mov
dec
je
push
outsb
pop
inc
xor
jmp
int
fisubrl
adc
and
ret
in
xor
and
shll
mov
mov
add
mov
popa
adc
xor
push
add
lds
xchg
sub
fs
faddp
lock
out
adc
sub
mov
xchg
push
cli
dec
leave
lcall
clc
fwait
dec
scas
pop
jg
mov
mov
xor
mov
mov
cmc
icebp
shlb
mov
fwait
das
pop
sub
add
es
pop
or
mov
add
fldl
xlat
xchg
and
pop
std
faddl
movsl
jne
and
sahf
mov
test
in
and
hlt
insb
cltd
pushf
xchg
sbb
sub
and
xchg
cmp
jno
push
lods
sbb
into
test
and
addl
sub
mov
andb
or
sahf
jmp
mov
leave
pusha
xor
and
scas
int
sbb
inc
mov
sti
xchg
popa
mov
push
xor
les
mov
cld
sub
out
lods
sar
inc
mov
dec
mov
pop
push
pxor
icebp
push
lods
int
icebp
adc
and
gs
cmp
add
fmull
pop
mov
sti
aad
adc
xorl
push
jbe
xor
xchg
je
out
cld
xchg
dec
ficoml
insb
mov
fisubs
cli
push
in
pop
daa
xor
jbe
inc
sub
add
aam
jbe
dec
xchg
jle
je
nop
sar
sbb
xchg
dec
imul
ficompl
pop
fwait
xchg
orl
out
cs
bound
jb
in
fs
pop
jmp
das
stos
and
mov
fnstsw
sbb
pop
sbb
lret
mov
ljmp
pop
push
sti
repnz
subb
data16
hlt
xchg
movl
test
clc
ret
add
xor
mov
repnz
ds
rorl
das
les
xchg
inc
nop
rcl
jl
adc
arpl
loop
and
cs
ds
and
or
push
popf
fwait
mov
inc
xchg
jns
sbb
mov
xlat
xchg
and
aas
in
jp
adc
filds
mov
sbb
push
and
cmp
and
xchg
aas
out
jbe
xorl
leave
nop
outsb
addr16
pop
mov
daa
pop
push
inc
out
or
mov
es
stc
aaa
cmp
ljmp
xor
ss
jmp
sub
dec
add
dec
inc
dec
stos
stos
dec
in
inc
and
call
pop
js
jnp
addr16
dec
in
jge
mov
dec
xor
add
je
mov
pop
mov
popf
fadd
nop
push
sbb
sti
stos
cwtl
ret
dec
pop
stos
inc
cmp
xor
mov
jecxz
repnz
cld
fwait
je
stos
xchg
test
dec
pushf
mov
xor
btc
aam
insl
push
inc
adc
push
cmp
das
push
aas
fists
test
inc
add
cwtl
in
stos
jo
into
inc
lock
pcmpeqd
notl
mov
out
inc
nop
cmp
mov
xor
je
sbb
mov
xchg
mov
testl
or
pushl
repz
ds
add
sub
mov
out
mov
jecxz
aad
daa
adc
imul
cmp
or
add
dec
bswap
jb
aam
jb
jmp
sbb
mov
inc
iret
jo
shll
or
sbb
std
and
jp
lods
adc
icebp
push
jle
aas
ret
icebp
std
lods
cli
mov
mov
jecxz
bound
mov
xor
shll
int
adc
mov
stos
enter
xchg
xchg
jmp
lret
inc
leave
gs
mov
jg
aaa
fs
mov
popf
xchg
in
test
add
daa
fildl
sub
dec
dec
mov
mov
push
cmp
add
mov
mov
cmp
pushf
fldcw
cmpsl
jb
jbe
push
jae
cmc
cmp
cli
test
rclb
sbb
jl
mov
fisubrl
sti
pushf
iret
jae
stc
popa
pop
addl
push
push
aam
jae
or
aam
mov
call
sbb
pusha
sbb
ja
addb
jp
inc
jne
sahf
push
leave
bound
add
xchg
jl
ret
es
mov
fadds
data16
cmp
or
and
mov
cltd
lds
or
data16
mov
es
movsl
aad
push
pop
mov
inc
mov
fsubrp
jp
mov
push
sbb
xchg
lret
push
arpl
push
dec
test
lds
pop
and
ficoms
aam
lahf
sbb
shlb
fildll
cmp
cs
imull
pop
das
push
shrl
inc
movsb
pop
iret
mov
and
arpl
cld
test
inc
lods
sarl
ja
insl
rorl
cmp
flds
repz
cli
inc
xchg
shl
mov
fs
inc
scas
loope
mov
pop
aam
mov
xchg
stos
pop
test
test
mov
ss
xor
fdivrl
sub
repnz
lret
pop
pop
dec
push
aad
loope
int
or
add
in
mov
mov
in
and
xchg
sbb
jg
pushaw
mov
fs
lret
jae
mov
adc
leave
or
jmp
push
cli
adc
dec
pushf
stos
aaa
mov
cmp
mov
ret
cs
loop
dec
and
mov
adc
pop
popa
jl
jbe
or
in
or
cwtl
or
and
mov
shlb
mov
iret
adcb
es
lret
cmp
out
sbb
es
push
imul
bnd
out
jge
leave
pop
ljmp
or
push
mov
mov
and
repz
fcmovnbe
jns
inc
mov
inc
movhps
jge
push
and
push
push
inc
xchg
pop
pop
pop
mov
and
int3
std
sbb
dec
out
test
cmp
dec
stos
mov
test
xchg
cld
push
inc
scas
dec
lret
inc
inc
clc
das
filds
jp
hlt
jecxz
dec
sbb
push
jg
adc
test
push
sahf
mov
addr16
xchg
and
lea
mov
mov
adc
sbb
insb
xchg
mov
push
inc
sbb
out
nop
into
mov
fsubrl
in
aam
pop
pusha
mov
mov
pop
jge
aad
push
mov
xor
sbb
mov
faddp
pushf
inc
popf
out
inc
clc
aaa
lods
pop
mov
loopne
sbb
int3
in
stos
ja
mov
xor
das
jno
jg
push
lahf
and
test
movsl
insl
adc
rcrl
rolb
pop
or
je
movsb
pop
dec
or
enter
in
push
lret
cmp
clc
jne
pop
fmull
pusha
fcompl
movsb
mov
push
nop
mov
ljmp
aas
dec
rolb
jp
add
jmp
test
mov
jnp
sbb
and
xchg
cmp
pop
and
inc
xor
shl
or
mov
or
fnstcw
outsb
jae
sub
pop
pop
jl
mov
and
ret
shl
adcl
pop
cmp
in
dec
test
cmp
push
mov
mov
fcoml
aam
sarb
cmp
outsl
es
int
leave
movsl
xchg
jne
mov
jns
mov
insl
cmc
ret
js
fcomps
inc
repz
test
sub
pop
push
sub
test
and
icebp
add
shrb
and
inc
or
outsl
pop
test
add
pop
sbb
adc
std
lcall
cmc
out
jmp
cmp
stos
das
popa
enter
xchg
jg
jbe
pusha
shrb
lods
idivl
shrb
loopne
push
rolb
out
mov
jns
out
sub
stos
fnstenv
fnsave
mov
mov
lahf
fsts
das
ret
lods
jg
loope
and
adcl
jno
cmp
mov
jmp
rorb
fidivrl
dec
mov
push
fs
movsb
testl
lahf
mov
add
fcom
les
dec
fistpll
or
test
push
push
insl
outsb
inc
jg
pop
fistpll
xchg
pop
fists
ja
xor
lcall
mov
add
inc
shlb
aam
xor
cmp
pop
stos
push
orl
pop
inc
adc
adc
xor
das
decb
cmpsl
add
cld
push
adc
repnz
shrb
mov
pop
ds
jbe
cmc
push
fildl
das
xchg
or
add
sbb
mov
mov
mov
jbe
xchg
lock
je
sub
push
adcl
xchg
mov
insb
dec
adcb
icebp
or
out
cmovg
add
jnp
jns
lahf
lahf
addl
pop
jae
xlat
cwtl
in
lea
mov
insb
add
and
dec
jg
pushl
xchg
and
and
xchg
test
add
jne
into
jns
pop
fimuls
sar
mov
xchg
sub
je
and
fistpll
adc
mov
icebp
sub
mov
icebp
into
dec
testb
rcr
movsl
sub
rol
dec
sub
fdiv
fnsave
mov
ljmp
stos
shrl
push
cmp
call
sub
inc
jnp
inc
out
mov
lea
add
add
adc
or
pop
std
cmp
test
test
dec
inc
scas
mov
inc
pop
sbb
imul
mov
dec
shr
inc
push
fistpl
stc
mov
mov
out
mov
sarb
sbb
fisttps
lods
aas
icebp
mov
fs
das
test
test
cs
dec
fcom
int3
fcomps
fcoms
jne
xlat
mov
mov
pop
outsl
push
test
cmp
in
inc
xor
mov
out
push
inc
inc
jo
lret
mov
sbb
fwait
push
movsb
add
mov
mov
pushf
dec
ret
clc
bound
fmull
nop
cmp
push
inc
insb
jge
pop
shl
imul
in
mov
cmc
das
idivb
aam
jbe
popa
stos
popf
pop
jb
dec
or
inc
mov
insl
xchg
jge
sbb
cwtl
jb
dec
es
lret
iret
mov
push
inc
insb
xchg
call
cwtl
adc
loope,pt
adc
cs
fmuls
mov
push
testl
xchg
out
push
out
jbe
aaa
dec
inc
cmp
cmc
cmp
sbb
and
outsl
pop
clc
stc
int3
jbe
call
xchg
dec
jecxz
add
pop
jne
pop
inc
out
outsb
sbb
dec
and
mov
sti
insb
sbb
and
cli
cwtl
sbb
sub
pusha
in
ja
scas
neg
inc
dec
adc
mov
cmp
push
push
add
scas
lret
pop
sbb
sbb
lea
and
add
adc
divb
push
iret
test
fucomi
push
enter
call
sub
fdiv
fimuls
adc
lock
repz
mov
pop
mov
push
add
sub
sub
sub
dec
stc
xor
lcall
loop
mov
lret
call
movsb
inc
cld
lcall
aaa
out
push
adc
subb
mov
pop
cmpsb
sub
inc
xor
imul
push
lods
and
pushw
adc
adc
push
cmp
inc
stos
cmp
jl
add
xchg
inc
jnp
xchg
sub
dec
pop
jle
pusha
mov
addr16
mov
out
dec
and
pop
lock
out
cmp
dec
mov
test
call
pop
stos
sbb
jno
push
loop
nop
bound
or
and
jle
fwait
pusha
lds
lds
ret
adc
lds
or
xchg
pop
ds
cli
ja
mov
cmp
addr16
sbb
fsubp
push
fisttpl
jmp
hlt
push
lds
js
sbb
sbb
stos
cmpsb
and
sub
cmp
mov
divl
in
test
lds
mov
neg
and
push
cmp
fiadds
jp
sub
js
test
jns
test
xchg
fsubs
jmp
and
pop
outsl
fcmovnbe
or
movsb
popf
out
int
xchg
jle,pt
mov
ret
fs
aad
sbb
outsb
xlat
es
and
insb
xlat
test
or
int
push
test
sub
fucomip
xchg
xchg
xchg
in
xchg
add
xor
and
xor
mov
dec
pushf
sbb
push
push
cmp
cmp
pop
fstpt
inc
fsubp
lret
push
ja,pt
mov
stos
lds
lods
inc
jmp
fadds
fcomps
lcall
fdivrs
sbb
pop
and
shl
enter
fdivrl
stc
adc
inc
push
notl
xchg
sub
shll
jo
jecxz
sbb
sbb
movsb
jae
sbb
pop
std
lahf
in
inc
mov
xchg
dec
stos
addl
xchg
mov
aad
cli
mov
jo
mov
xlat
add
mov
es
imul
sub
pop
or
mov
sahf
pop
xor
outsb
lock
jp
jecxz
pop
mov
cmp
mov
pop
xchg
inc
sbb
mov
cmp
add
mov
faddl
pusha
mov
sbb
cmp
imul
testb
mov
mov
shlb
cltd
in
cmpsb
mov
fistpll
jnp
mov
cli
xorb
sbb
popf
jb
push
popf
arpl
adc
fnstcw
ljmp
fldcw
sbb
movsl
movsb
push
fimuls
adcb
mov
jno
fimull
pop
jle
test
imul
inc
adcb
ret
mov
push
insb
in
inc
test
ficoml
adc
mov
inc
scas
cltd
ja
popf
xor
int
lods
jb
insb
or
pusha
xor
sub
inc
aam
cpuid
hlt
push
mov
inc
mov
push
add
or
aaa
jb
jns
into
add
jns
mov
scas
fldenv
inc
adc
sahf
jns
mov
outsl
aaa
rorb
mov
loop
lods
xchg
dec
das
in
pushf
jnp
imul
cmp
fdivs
push
xchg
pop
push
and
jnp
stos
sub
hlt
repz
int
jno
mov
mov
loope
les
lahf
movsb
cmp
cli
jne
or
push
int
xchg
scas
das
into
enter
scas
je
mov
xchg
cltd
bound
loop
fucomp
gs
sbb
dec
sub
push
push
xor
shrl
cmc
push
xchg
mov
sub
shrl
jecxz
add
or
push
mov
dec
pushf
aam
stos
jle
xor
and
jnp
mov
stos
jg
daa
fmul
das
jne
sbb
jae
xor
mul
xchg
fcomi
in
ds
lods
cmc
mov
repnz
mov
in
push
xchg
call
cmp
pop
mov
mov
add
pop
sub
jecxz
js
xchg
decl
std
adcb
add
dec
imul
jnp
andl
out
lds
js
inc
xor
jne
mov
push
push
lahf
fstpl
sub
addr16
aas
push
mov
rep
loop
stc
mov
addr16
pop
pop
push
imul
pop
mov
push
mov
mov
inc
mov
xchg
xchg
mov
test
sub
aas
adc
das
shl
mov
xchg
add
jmp
xchg
scas
inc
pushf
lock
jle
pop
cli
adc
inc
les
inc
ret
lock
adc
inc
gs
mov
cmp
sub
cmp
ret
and
in
mov
aad
xor
sub
fcompl
mov
icebp
xor
push
sbb
cltd
addl
dec
push
sub
sti
xor
add
add
imul
stos
fidivrs
jge
mov
mov
pusha
xor
js
pop
test
cwtl
mov
incb
filds
mov
dec
cmpsb
cmpb
fstpl
inc
xchg
cmpsb
mov
insb
mov
push
inc
imul
sbb
and
adc
xchg
dec
mov
pop
add
fisubrl
add
loope
jns
push
clc
push
mov
xor
dec
clc
es
cwtl
imul
pop
mov
fwait
repnz
orb
cmp
es
popl
cmpsl
insb
cmpsb
pop
sub
jp
add
jecxz
test
rcrb
add
nop
cmpl
xchg
iret
call
aad
jecxz
sbb
or
mov
add
push
mov
fisubrl
cwtl
mov
sti
fwait
cltd
push
mov
mov
xchg
addr16
stos
jmp
ds
call
jge
jg
sbb
dec
jbe
dec
rorb
in
dec
test
out
pop
mov
mov
push
jge
or
jns
mov
rolb
repnz
aaa
scas
shrl
rorb
rcl
jae
clc
mov
sub
add
int3
xchg
sarl
mov
mov
jbe
scas
dec
sbb
add
adc
test
in
or
fiaddl
cmp
imul
pop
popf
in
scas
cmp
scas
repz
mov
push
call
dec
and
sarb
test
nop
aaa
imul
jns
ror
push
push
mov
testl
sbb
sbb
stc
pop
mov
fistpl
xchg
push
in
jmp
mov
sbb
dec
stc
out
cs
jbe
cwtl
ret
inc
out
jmp
popa
outsl
stos
stos
jp
xchg
ret
cwtl
lods
pop
adc
cld
mov
xor
int
lahf
stc
xorl
in
adc
pop
bound
ja
xor
push
adcb
xor
inc
es
pop
movsb
in
sbb
sbb
cmp
sti
cs
push
lods
ss
flds
movsb
icebp
inc
ss
mov
inc
rol
xchg
sbbl
push
jp
pop
scas
addr16
or
adc
lock
fiadds
xor
xchg
cmc
loopne
outsb
mov
repnz
cmp
dec
in
and
dec
pop
cmp
bound
outsl
fwait
mov
dec
das
fiaddl
lcall
xchg
mov
pop
add
fldenv
add
mov
movsl
xor
or
lret
inc
lods
testb
jle
sbb
inc
nop
test
mov
sub
adc
jns
add
pop
dec
nop
icebp
mov
loope
imul
add
addr16
sbb
mov
into
mov
xchg
and
popf
rolb
xlat
jo
or
jle
ret
in
mov
out
nop
inc
or
mov
mov
pop
jmp
jns
dec
mov
outsl
jmp
addl
push
out
ret
adc
dec
push
in
es
sbb
push
mov
jl
sub
cmp
xchg
xor
xchg
mov
push
push
ret
lds
xchg
dec
dec
mov
mov
outsb
test
or
inc
shl
divb
decb
cmp
shlb
sarb
fcompl
std
cmp
mov
jae
jnp
or
aaa
jbe
data16
adc
ss
out
stc
testb
xchg
cmp
or
pop
push
sub
repnz
jb
stc
and
test
outsb
xor
rcrl
adc
inc
xchg
fmuls
mov
iret
xchg
mov
jle
mov
loope
xchg
mov
mov
gs
in
in
inc
fdivr
mov
jo,pt
pushf
test
cs
mov
fnstsw
xor
push
xor
sub
or
popa
in
movsl
dec
sbb
repnz
pop
pushf
sbb
imul
or
sub
dec
in
pop
jbe
es
push
cmp
sbb
jns
adc
pop
jae
cmp
push
and
int3
inc
mov
add
sbb
mov
aaa
bound
aas
push
xor
scas
cmp
aaa
inc
fmull
sarl
mov
and
stc
jp
cli
push
push
test
or
shl
push
or
aas
sbb
cmp
xor
in
xor
js
cmc
pop
inc
clc
fbstp
lods
aam
sub
and
push
pop
pop
or
insl
inc
aad
loopne
xor
pop
or
bound
xchg
enter
lods
imul
sbb
ret
and
icebp
jo
es
push
cltd
push
fildll
lret
arpl
push
fsubrl
push
pop
shrl
nop
pop
rorl
cmp
sub
pop
out
cmc
ljmp
fwait
adc
js
xchg
sub
mov
and
dec
fs
fwait
test
sub
andl
pop
add
jmp
in
xchg
repz
movsl
stos
ficoml
fs
mov
add
out
cmp
dec
or
outsl
call
daa
adc
xlat
sbb
cltd
inc
cmpl
clc
add
mov
inc
cmp
je
mov
movsl
push
jne
dec
daa
aaa
or
and
cmp
or
mov
repnz
push
dec
xor
mov
mov
test
cld
xchg
scas
mov
adc
les
jge
imul
ja
lret
jbe
and
pop
jmp
jg
scas
inc
pop
fdivp
cmpl
test
loop
out
mov
inc
jne
or
sbb
sbb
in
adc
add
repz
mov
jae
popa
mov
das
inc
inc
sbb
sbb
pop
or
adc
loopne
add
sbb
das
pop
and
scas
mov
and
test
mov
scas
mov
aaa
popf
loope
es
add
dec
push
aaa
jmp
test
sub
flds
adc
lcall
and
sub
add
jae
mov
push
out
aaa
repnz
inc
add
adc
xor
sub
mov
sub
jno
cli
add
xchg
test
xor
push
mov
in
fidivl
push
sub
hlt
data16
pop
iret
push
push
popa
or
popa
and
push
inc
lds
mov
add
fiadds
test
cmp
or
lcall
inc
das
jmp
pop
push
stc
inc
loop
inc
mov
push
adc
test
and
cmp
push
int
jno
inc
mov
sub
in
fwait
sbb
pusha
mov
mov
leave
js
jbe
pop
pop
sar
cmpsl
cld
sbb
sub
aas
sbb
loope
pop
int3
cwtl
xchg
movsl
xor
mov
push
xor
pop
bndldx
push
imul
ljmp
sbb
cmpsl
push
push
mov
sub
or
push
mov
mov
mov
pushf
mov
adc
fcoml
fldenv
lcall
inc
cmp
inc
lret
sti
add
mov
jge
imul
xor
pop
push
mov
jae
mov
movsb
stos
add
dec
repz
int3
add
mov
mov
stos
roll
shrb
adcb
push
stos
mov
mov
roll
xchg
fistpll
dec
addl
pop
mov
fnsave
es
loope
mov
add
add
push
xchg
inc
pop
push
xchg
not
cmp
sarl
mov
or
sbb
enter
mov
dec
mov
call
push
jl
cmp
jmp
leave
push
inc
pusha
dec
inc
or
push
mov
addl
fiaddl
pop
pushf
mov
call
push
es
mov
shlb
push
cmpsl
jnp
and
push
adc
cmpsb
cli
adc
mov
daa
rorb
or
dec
in
inc
or
les
or
lcall
xor
push
and
sbb
shr
jns
bound
jge
cmp
int
cld
mov
lret
mov
ja
adc
sahf
xchg
cmp
insl
aas
fsts
xchg
pop
in
inc
mov
sub
enter
shrb
push
cmp
lret
xor
scas
or
cltd
jecxz
cmpsb
inc
fsubr
movsb
mov
jmp
or
jbe
outsl
pop
insb
loop
cld
mov
outsl
pop
push
mov
cmp
mov
or
mov
mov
das
sbb
cmp
adc
sahf
jne
mov
dec
enter
in
jge
test
subl
push
jmp
xor
push
ss
cmp
fidivs
cmp
inc
mov
xor
xchg
ja
lds
cmc
push
inc
subb
aad
fstpl
xchg
sub
hlt
lods
mov
inc
push
add
xor
ret
in
outsl
test
cmp
push
lea
xlat
cmp
xchg
sbb
inc
jno
nop
adc
xchg
lods
aad
dec
mov
jae
fiaddl
je
dec
popa
je
leave
nop
orl
stc
movb
pop
or
jmp
into
adc
fbstp
lahf
pop
mov
test
or
push
pop
cmp
cs
cmp
clc
push
ds
repnz
pop
test
rcrl
pop
pushf
insl
aam
lds
loope
fucompp
call
jge
wbinvd
mov
mov
dec
cmp
adc
aad
xor
fldenv
bound
cmp
xor
repnz
adc
push
dec
mov
mov
jg
xor
roll
rcrb
popf
sahf
shr
fstpl
adc
add
jl
call
push
add
lods
xor
das
imul
aad
mov
cmpsl
test
xchg
outsb
out
jns
push
daa
aas
les
fwait
add
push
mov
repz
dec
ja
scas
xlat
and
push
cltd
repnz
insb
adc
iret
repz
into
push
push
arpl
nop
pop
sub
jecxz
cmp
jne
je
lahf
icebp
into
idivl
jp
stos
nop
test
popa
mov
movsb
shrb
inc
xchg
jns
add
popa
push
pop
mov
out
js
call
lods
ja
cmp
mov
xchg
pusha
fidivl
les
mov
mov
ret
insl
imul
mov
or
sub
fs
ja
in
mov
in
mov
add
xchg
inc
jnp
mov
clc
jo
sub
cli
lds
cmp
es
jb
rorl
ljmp
lret
orl
fs
xor
ret
jb
pop
mov
push
pusha
loope
mov
jne
cltd
xchg
gs
pushf
sbb
inc
add
cli
pop
movsb
lret
push
pop
xor
subl
pop
js
aad
xchg
jbe
sub
sbb
or
dec
loope
loopne
add
adc
clc
xchg
push
add
jbe
xor
in
inc
cwtl
imul
dec
aad
dec
mov
movsl
rcrl
sub
outsl
pop
xchg
mov
cs
jp
mov
cltd
xlat
pop
stos
hlt
aam
mov
addr16
ljmp
or
lret
or
pop
push
xor
outsb
pop
repz
xor
sub
push
scas
cltd
push
cmp
scas
xchg
loop
dec
add
repnz
sbb
in
leave
lods
int3
and
mov
in
out
cmp
add
notl
mov
std
jno
int
outsl
sub
dec
cltd
ds
sar
mov
clc
jle
push
pop
int
or
and
insb
loop
inc
jo
xchg
sti
push
and
imulb
and
popa
inc
mov
and
jnp
mov
push
push
and
pop
insb
leave
jge
jns
std
out
add
mov
mov
cli
daa
xchg
out
fmuls
scas
out
sub
jbe
aam
jle
int
in
les
sar
sub
dec
scas
cmp
repz
xor
adc
aas
outsl
xor
sub
sahf
lahf
in
dec
pop
dec
xchg
dec
sahf
jle
push
repz
pop
inc
mov
in
sahf
jbe
jbe
xchg
pop
inc
lahf
xor
sbb
scas
outsb
ss
not
das
cmp
fdiv
cltd
mov
loope
into
imul
pushf
stos
in
lods
rolb
inc
mov
call
cmp
inc
dec
pop
stc
imul
xchg
shrb
test
mov
repz
jb
mov
incl
mov
dec
xlat
aaa
cmp
pop
pop
bound
mov
mov
sub
xor
mov
addr16
jb
repz
out
jo
rcl
pop
xchg
aam
ljmp
movsl
mov
mov
das
pushf
imul
fidivl
mov
mov
int
scas
lods
cmp
xor
jns
popa
fwait
in
sahf
outsl
pop
mov
dec
and
jle
mov
sub
out
cld
dec
cmp
mov
xchg
in
notb
hlt
divb
pusha
mov
and
push
sti
jl
pop
ficoml
lea
loope
xor
cld
pop
das
movsb
sbb
mov
adc
add
and
sub
and
sbbb
imul
push
insb
addr16
ljmp
pop
iret
lret
dec
sahf
sub
adc
orl
jbe
mov
aad
jl
lret
pop
out
fcmovu
mov
jmp
jge
incb
shlb
pop
mov
sti
pop
xchg
mov
lods
mov
scas
bswap
movsb
dec
dec
lock
cmp
xor
cmc
daa
ret
cltd
icebp
xor
mov
lcall
mov
adc
jmp
cmpsb
hlt
inc
out
call
jae
out
lret
inc
dec
repnz
outsl
mov
jle
sub
shlb
add
popa
sahf
nop
movsb
pop
shrl
push
inc
mov
and
pop
push
in
adc
inc
fsubl
aas
testb
push
call
scas
push
pop
jmp
xchg
mov
pop
jo
cmp
or
and
or
loope
fidivrs
lahf
push
scas
mov
cmp
ljmp
clc
or
aad
and
shrb
andl
or
scas
sbbb
mov
ret
adc
insl
std
add
pop
pop
xchg
stc
fisubl
popa
cltd
jecxz
lret
mov
scas
cs
adc
sbb
imul
fsubrl
mov
jb
scas
add
insl
pop
mov
rorl
loopne
inc
adc
loopne
mov
aaa
stos
enter
sub
mov
sbb
inc
pop
es
out
in
fisubl
jbe
outsb
add
lret
mov
xchg
fldenv
or
push
fiaddl
aad
cmp
aaa
jg
add
clc
dec
mov
xchg
xchg
xor
fildll
and
xchg
dec
mov
imul
cs
mov
mov
out
xlat
sbb
sbb
jle
xchg
jbe
fwait
popf
add
mov
lea
out
movzbl
jmp
mov
ret
ret
or
das
in
out
dec
mov
xchg
dec
cmp
cmp
mov
cmp
mov
stos
xor
fidivs
mov
mov
jmp
inc
ret
add
pop
fwait
jbe
sti
mov
popa
test
inc
sbb
out
xor
jnp
icebp
aaa
test
testl
stc
push
or
out
insl
jo
add
and
adc
sub
xor
jns
andl
xchg
js
jne
es
mov
cltd
pop
and
mov
sbb
jno
sbbb
into
popf
push
fstpt
pop
lea
pusha
cmp
ret
sub
pushf
mov
jbe
ret
inc
cmp
xchg
test
sub
adc
lods
mov
sub
outsl
rcl
mov
int
inc
insl
push
jmp
loopne
ja
and
cli
push
repnz
out
xchg
es
das
jmp
nop
sub
inc
push
lret
insl
aaa
shr
sti
int
pop
int3
shlb
das
cli
xchg
dec
xor
mov
inc
pop
in
or
nop
jns
add
loope
lret
fwait
xchg
outsb
dec
cli
je
jl
cwtl
mov
dec
jb
mov
jecxz
and
out
lods
dec
jbe
sbb
pop
pop
subb
push
pop
sub
gs
cwtl
enter
in
cmp
sar
aam
loop
sub
pushf
mov
jo
fs
loope
adc
sub
xchg
sahf
jbe
push
addb
shl
test
sub
sbb
sub
adc
jbe
fistl
sbb
sub
ss
addr16
das
pop
lret
pop
jne
jge
mov
scas
out
add
shlb
mov
rol
arpl
push
or
xor
dec
cmp
loop
inc
fadds
iret
scas
addb
cmpsb
mov
inc
jbe
jbe
arpl
aad
jmp
dec
mov
negl
and
and
xchg
pop
inc
pop
loopne
xlat
fstl
mov
jno
mov
les
std
sbb
fwait
pop
repz
pop
or
cld
inc
movsb
cmpsb
cmp
push
out
cmp
clc
ds
les
out
rorl
stos
push
xchg
cmp
cmpsb
dec
sbb
add
xchg
inc
jmp
cmp
and
popf
in
add
cmp
pop
stos
push
cmp
movsl
psubq
inc
mov
enter
cmpsb
call
cwtl
jno
xor
mov
jecxz
xor
mov
and
cmpsl
test
scas
hlt
mov
inc
data16
mov
jnp
cmp
in
jae
js
imul
mov
adc
iret
fcomi
int3
xor
push
or
sub
add
loop
mov
fisttpll
jbe
mov
or
out
xchg
ret
iret
pcmpeqw
sub
or
sbb
mov
push
gs
mov
inc
out
mov
and
lret
stc
rcr
inc
icebp
mov
fdiv
xor
data16
popa
inc
push
cmpsb
dec
movsl
push
icebp
adc
push
mov
in
sub
xchg
out
or
jle
cltd
dec
icebp
out
or
push
sahf
xor
fwait
adc
xchg
ds
rorb
lea
sub
jge
inc
adc
test
cmp
cld
sbb
ss
push
lds
test
shlb
adc
daa
ja
xchg
scas
rcrl
sbb
stos
call
sti
mov
inc
mov
fcom
leave
mov
outsb
pushf
inc
cmp
fidivl
pusha
loopne
xor
aas
test
nop
xor
adc
fwait
xor
add
pop
pop
xor
insl
pop
xchg
inc
lds
inc
cmpsb
inc
jmp
push
cmpsl
scas
int
add
popf
outsl
add
mov
add
and
xchg
in
mov
add
xor
pop
sbb
es
push
insl
add
inc
fs
sbb
push
int3
pop
push
movsl
add
inc
das
xchg
mov
mov
cmp
fs
repz
pop
dec
mov
inc
mov
ljmp
xchg
push
pop
push
add
dec
fnstcw
addr16
out
popa
jle
or
jl
xor
hlt
aad
imul
std
insb
dec
jp
adc
and
inc
pop
in
cltd
or
fcomip
mov
mov
call
cmp
int
rorb
push
push
int3
ret
aam
dec
add
es
sbb
ret
cltd
sbb
mov
mov
sbb
xchg
ret
lret
adc
sbb
js
mov
leave
push
aas
mov
sbb
or
mov
sbb
push
test
pop
out
mov
inc
stos
push
loopne
cld
add
cmp
jne
mov
pop
in
lds
roll
pop
sub
lods
sub
into
push
xchg
mov
cld
adc
je
and
xchg
test
adc
inc
or
out
xor
mov
aaa
add
jecxz
mov
fnsave
or
rorl
fnsave
test
push
or
jns
daa
in
hlt
push
xorb
and
lea
inc
in
cmp
sarl
mov
ret
jo
mov
scas
inc
and
inc
mov
xchg
jmp
lret
enter
popa
out
mov
mov
popl
call
test
jno
mov
cmp
out
lret
jne
in
dec
add
mov
cwtl
pop
mov
dec
inc
aaa
cmc
xchg
lock
pop
jae
aad
je
daa
xor
and
ljmp
jo
in
pop
push
cs
scas
loop
jns
adcl
pop
lcall
adc
bswap
mov
mov
cli
aad
mov
inc
add
arpl
daa
xchg
imull
sbbl
loopne
enter
push
mov
in
int
jle
inc
sbb
cmp
mov
mov
mov
data16
fs
push
popa
mov
dec
fnstcw
mov
sbb
cmc
xchg
jg
push
mov
cmp
push
addr16
sub
jne
inc
and
test
jge
sbb
imul
adc
mov
xor
inc
pop
xor
fnstcw
lret
test
sub
jnp
or
sub
gs
ret
push
xor
out
lcall
jns
pop
nop
xor
mov
movsb
es
or
pop
jg
lds
test
dec
jo
out
and
xlat
add
mov
repnz
and
aam
cmp
shll
sbb
fdivs
dec
xchg
lock
and
cmp
aaa
insb
mov
push
sub
pop
or
fstpt
in
mov
xchg
inc
movsl
lahf
adc
rol
mov
int
shlb
int3
ss
into
cld
call
jne
pusha
xchg
or
dec
pop
inc
and
xchg
add
pop
test
jns
fistpl
hlt
leave
mov
fildl
out
pop
cmp
sub
mov
inc
xchg
vpmacssdql
repnz
movsb
loopne
in
rolb
mov
inc
pop
xchg
mov
fcompl
mov
jmp
jb
fidivs
fs
in
sub
add
mov
insl
jge
jp
pop
cmpsl
dec
inc
sub
pop
in
and
in
lock
pop
mov
jg
dec
jg
rcrl
inc
outsl
sbb
shl
ja
lods
push
mov
adc
pushf
mov
or
in
sub
fmuls
add
into
dec
xor
jg
mov
add
js
retw
movsb
xchg
inc
sbb
mov
fcmove
push
ret
or
fadds
cmpsb
xchg
ficoms
clc
out
mov
push
in
in
stos
popa
repnz
imul
data16
or
inc
and
cltd
in
and
mov
mov
call
not
add
scas
mov
inc
adc
lods
mov
lods
cmp
jne
sub
adc
sub
mov
push
mov
push
mov
in
lods
dec
sbb
sahf
fisubl
jae
bound
jae
pop
xchg
adc
pop
add
xor
rcr
adc
add
outsb
or
jnp
xchg
jno
pop
mov
mov
sbb
lcall
fnstcw
pop
daa
push
in
rorl
pushf
sti
and
jg
sub
sub
stos
js
mov
jmp
pusha
das
shlb
and
int3
add
dec
xchg
mov
push
int3
dec
sub
pushf
push
testl
outsb
jb
cmp
std
incl
push
xchg
fs
ds
dec
cmp
aad
xchg
mov
adc
call
jmp
bound
cmp
imul
je
mov
adc
inc
andl
dec
pop
sub
xlat
js
inc
mov
ret
pop
pop
lock
imul
sbb
ffreep
sarb
xor
sub
ja
dec
sbb
out
push
pop
and
mov
or
rep
mov
push
shlb
rcrb
repnz
insb
sahf
dec
push
pop
jp
xchg
mov
rcrb
mov
fisttps
aas
aas
mov
xor
lock
mov
pop
inc
or
push
add
dec
pop
loope
cmp
shrl
inc
jl
xor
mov
rorb
mov
jmp
cmpl
or
loop
hlt
push
or
cs
in
inc
sub
dec
and
sti
add
and
mov
push
jnp
rorl
lcall
test
push
jo
push
cmp
inc
in
sahf
lcall
sbb
jae
test
push
mov
out
sbb
pop
hlt
mov
xor
in
in
adc
dec
stos
ret
add
jae
xor
lcall
push
push
mov
xchg
sub
add
mov
clc
and
or
cmpsl
dec
loopne
dec
pop
fldl
ss
and
push
imul
push
daa
cmp
or
cwtl
cmp
dec
or
mov
lret
jno
mov
sti
lahf
xchg
rolb
stos
ljmp
dec
mov
push
out
repnz
jecxz
cltd
imul
or
inc
test
fldt
or
pop
jg
or
lret
aas
sub
lods
add
je
mov
mov
add
mov
lret
lcall
add
outsl
lock
stos
jl
dec
aam
aaa
cmp
rclb
add
gs
and
fstl
xchg
sbb
mov
fiaddl
ss
in
mov
in
pushf
push
popf
divb
out
or
fwait
xor
cmp
inc
ss
lret
jo
xor
jb
lods
or
push
mov
int
arpl
cli
loopne
add
push
cli
ljmp
scas
adc
adc
fmull
mov
sbb
sbb
jge
add
arpl
dec
ja
sbb
std
sar
dec
jle
lea
mov
sbb
lahf
mov
xchg
mov
xor
aam
dec
lods
dec
out
cld
lds
mov
ljmp
pop
sub
mov
mov
pushf
add
lock
sbb
je
ret
jbe
inc
push
xchg
xchg
or
adc
scas
mov
nop
in
xchg
andl
daa
sub
dec
mov
jmp
lods
mov
push
xchg
xchg
sbbb
push
scas
daa
shlb
push
or
xchg
cmp
in
xchg
dec
inc
call
and
and
in
stc
sbb
sti
or
jns,pt
lcall
std
cld
stos
xor
cmp
std
rolb
imulb
or
divl
cmp
divl
lea
and
jo
popa
and
nop
jb
jns
sub
push
sbb
mov
jp
inc
add
adc
jne
mov
mov
mov
push
push
fcmovnb
mov
sub
mov
mov
push
js
sub
push
nop
cmp
movb
ss
lahf
sbbl
aam
push
shl
popf
cwtl
inc
and
push
mov
add
out
and
divb
jp
fcoms
pushf
mov
dec
loopne
sar
dec
pop
fiadds
cmpsb
xchg
mov
inc
sub
loope
jge
decb
inc
mov
add
ds
ficompl
in
pop
je
xor
sti
and
scas
addr16
dec
mov
jmp
mov
mov
call
sbb
sub
cmpb
xchg
xor
push
mov
rol
fcmovnbe
imul
insl
jmp
pusha
xlat
aas
inc
mov
or
fwait
jbe
arpl
enter
jo
xchg
pushl
testl
push
fisubrs
ret
roll
rcrl
ret
xchg
or
xchg
lret
clc
push
push
and
leave
push
arpl
adc
cmp
jg
inc
inc
sbb
cwtl
xchg
stos
mov
inc
daa
lock
xor
ret
mov
mov
arpl
cwtl
scas
mov
scas
cs
ja
or
sbb
cmp
mov
jp
fsubrl
ljmp
mov
jge
dec
jbe
imul
test
mov
mov
push
add
scas
testl
cmc
out
jecxz
lock
or
insl
dec
mov
push
pop
xor
mulb
sbb
or
orb
xchg
fsubrl
js
sbb
call
fiaddl
test
mov
pushf
mov
stos
cmpsl
movb
in
sti
or
jle
and
push
mov
push
lret
add
jns
hlt
hlt
fs
push
ds
rcrb
lea
mov
ret
cs
mov
cmp
push
out
mov
ja
mov
movb
mov
lods
xor
aam
sbb
jbe
test
sub
mov
push
mov
ficoms
rolb
inc
loopne
pop
je
push
aam
imulb
xor
pushf
and
pushf
fbld
pop
stos
call
movb
mov
xor
cmp
xchg
push
sub
nop
jmp
scas
cs
rolb
jle
pusha
out
cmp
jns
pop
clc
mov
xchg
clc
push
inc
les
addr16
ds
mov
aad
xchg
sub
xchg
mov
xor
pusha
bnd
lret
loopne
add
cld
xchg
mov
iret
test
sbb
insb
pop
popa
push
push
sub
jbe
outsl
cld
mov
cmp
inc
inc
dec
mov
dec
mov
fisttpll
fcmovnu
jp
iret
cmp
jl
pushf
push
mov
aam
leave
inc
add
mov
or
clc
bound
lahf
fwait
add
insb
fimuls
clc
fistps
call
movsl
loopne
daa
ja
repnz
dec
jle
scas
js
push
lods
jmp
pop
mov
inc
dec
ret
or
jb
sbb
std
or
xor
mov
pop
hlt
sub
into
scas
cmp
inc
xchg
mov
mul
divl
aaa
xchg
pop
outsb
sahf
aaa
daa
mov
fisubrl
xorb
jmp
fwait
jp
jno
cmpb
pop
adc
imul
adc
xor
cmp
aad
fdivrl
divl
fists
xlat
test
notb
ja
mov
ret
aaa
lret
das
add
sub
outsl
adc
cli
cmc
dec
cmpsb
xor
jle
cwtl
test
and
dec
fistpl
loop
fwait
ljmp
ret
arpl
sbb
and
xchg
jg
push
adc
stos
fdivrl
clc
xchg
push
out
cld
lahf
cmpsl
sub
test
sub
rolb
pop
jg
jo
add
push
xchg
jmp
push
nop
inc
sarl
popa
leave
sti
test
or
mov
dec
je
jge
stc
adc
test
cltd
xchg
jp
ret
add
into
mov
stos
loope
decl
loopne
loop
pusha
in
dec
insl
pushf
jg
mov
enter
pop
push
push
mov
cmpsb
jmp
cwtl
icebp
or
in
les
mov
add
xor
or
xor
mov
stc
pop
sbb
mov
aad
test
cltd
cmp
pusha
das
ret
inc
adc
fisttps
movsb
dec
cmp
jl
lcall
xchg
add
xchg
xchg
fs
adc
nop
data16
jbe
out
xor
aam
insb
stos
test
sub
dec
std
pop
sbb
push
mov
pop
mov
xor
imul
fadds
shrb
in
sbb
add
es
sti
jecxz
popa
mov
sbb
sahf
push
xchg
movsb
cli
mov
gs
xchg
mov
xor
int
dec
pop
dec
fmull
int
xchg
jge
mov
adc
cwtl
mov
push
sbb
cli
loop
jo
or
addb
ret
sub
xchg
pop
and
cwtl
aam
mov
or
das
or
push
dec
pusha
and
adc
lret
add
stos
xchg
inc
mov
adc
lods
arpl
lret
or
int
hlt
pop
mov
jmp
stc
sbb
cli
push
lahf
jmp
gs
and
les
js
push
lods
mov
cmp
sbb
aam
pop
scas
pop
mov
xor
repz
jl
loope
sti
mov
push
pop
int
pop
insl
and
mov
pop
jbe
adc
sub
inc
sbb
sbb
sub
adc
inc
nop
adc
clc
xchg
out
mov
lds
xchg
sub
xchg
call
ss
sbb
mov
or
lods
sti
movsb
mov
add
xchg
rcl
icebp
nop
xor
shll
scas
fbstp
orb
lret
xor
sbb
pop
loop
ss
and
sub
fs
cmp
iret
jae
rcrl
cli
add
out
xchg
add
je
aam
pop
clc
movsl
push
enter
sbb
loop
hlt
cmp
pop
and
xor
xor
les
fwait
dec
cmc
in
daa
scas
insb
inc
arpl
push
test
cld
xchg
mov
in
xor
xor
push
cmp
fmul
cmp
sbb
cmp
fisttpll
fsubrl
add
les
add
lcall
pop
sbb
test
out
shll
outsl
ja
repnz
daa
pop
add
mov
pop
and
pop
fcmovbe
xchg
mov
jg
movb
mov
dec
mov
cli
fmul
push
ja
push
dec
jecxz
jp
inc
sbb
aam
adc
mov
addr16
lret
add
aad
mov
into
pop
test
or
fcmovne
pop
lods
push
aad
sbb
and
push
dec
and
adc
cld
mov
jp
pop
shlb
jmp
orl
push
fcmove
mov
fucomi
movsb
inc
leave
cli
jns
xchg
das
mov
mov
dec
cs
adc
out
imul
push
ret
movsl
stc
testl
mov
inc
xor
mov
xchg
ljmp
cmp
in
fisttpll
subb
mov
popa
test
sbb
out
hlt
sti
in
add
movsl
cmp
negl
dec
inc
sti
cmp
dec
add
push
iret
pop
adc
in
mov
cmpsb
rolb
mov
mov
orb
xchg
fcmovnbe
int
adc
cmp
mov
and
xchg
xchg
xchg
test
fwait
or
sub
pop
xlat
cmp
sbb
jmp
int3
adc
mov
push
subb
push
js
mov
test
and
int
xor
and
sarb
sub
and
aas
push
ret
aas
rorl
jp
cmc
mov
into
or
xchg
inc
cmovae
je
mov
xor
addr16
dec
pop
mov
sub
std
mov
dec
test
movsl
movsl
mov
leave
inc
cs
and
mov
iret
pop
sub
add
mov
ret
filds
adc
or
bound
dec
pusha
pop
adc
lret
sub
aaa
push
push
mov
or
jl
test
add
xchg
dec
pop
sbb
sarl
dec
and
cli
outsl
jo
jbe
add
or
lcall
cwtl
pop
sub
pop
cmpsl
or
loopne
mov
int
ljmp
or
xor
push
push
shll
mov
push
cmp
xlat
enter
jecxz
scas
shl
das
push
dec
push
dec
dec
fistpl
stos
sbb
es
pushf
sbb
sub
inc
lret
and
and
pop
loopne
out
call
in
movsb
js
mov
inc
jmp
iret
mov
dec
add
bnd
iret
aad
dec
js
pop
shrl
xor
mov
repnz
test
mov
mov
dec
outsb
out
lcall
jg
outsl
jg
adc
addb
lods
pop
jecxz
and
in
push
lahf
into
mov
inc
out
push
scas
out
ret
sbb
repnz
addr16
fcmovu
pusha
inc
xor
mov
push
popl
push
ds
adc
cmp
dec
dec
or
push
out
xchg
mov
dec
or
lahf
out
push
and
mov
test
data16
addl
jge
gs
jo
test
cvtps2pi
inc
mov
dec
xor
xchg
sub
stos
in
pop
mov
call
push
insb
sub
in
out
std
or
data16
out
scas
outsb
and
mov
push
mov
shl
into
mov
pop
add
push
sub
push
cmp
ds
test
xchg
into
inc
test
jle
outsl
adc
sbb
xchg
inc
push
jg
bound
dec
divb
sub
stos
mov
mov
out
or
mov
cmpsl
lock
jnp
rclb
push
testl
ret
sti
xchg
inc
jae
sbb
lret
pop
and
jmp
sarl
push
lods
push
iret
aad
mov
pop
jae
xor
sub
xor
push
ret
cmp
xchg
popf
out
pop
cmpsb
int
icebp
stos
repnz
sbb
or
daa
loopne
lcall
adc
inc
dec
dec
bts
xchg
sub
arpl
inc
xlat
hlt
mov
aad
sbb
in
mov
popl
push
or
or
fdivl
pop
xor
push
sbb
in
push
push
iret
sahf
insb
xchg
hlt
jge
cmpsb
fisubl
in
fcomp
mov
mov
mov
iret
sub
xchg
inc
pop
or
sarl
inc
sbb
mov
and
and
mov
adc
mov
xchg
mov
loop
push
sbb
xchg
cmp
adc
rcrb
fnstsw
and
and
pop
sbb
test
mov
sbb
xchg
dec
dec
in
mov
fdiv
xchg
sbb
xor
rolb
jg
sub
adc
fmulp
in
enter
and
push
adc
mov
jmp
dec
xor
call
cs
adc
shlb
leave
mov
xor
dec
push
mov
out
mov
add
adc
movsb
fistpll
cmp
xor
mov
fisttpll
das
xor
int3
xor
add
es
xor
pop
pushf
int3
stos
out
test
subl
sub
fstps
sub
cli
repnz
mov
or
add
cmpsl
mov
ret
je
cltd
shll
inc
jbe
ret
imulb
cmp
cwtl
les
xchg
or
outsl
lcall
inc
inc
scas
xchg
pop
add
pop
test
and
jmp
ret
lret
std
add
add
rcr
ret
call
mov
cmp
in
dec
inc
sub
mov
sbbb
mov
loop
pushl
mov
mov
xchg
pop
lcall
test
rep
ljmp
lcall
idivb
xlat
push
xchg
test
cmp
in
aaa
addr16
jb
loope
idiv
shrl
mov
xor
xlat
movsl
xchg
imul
lods
dec
stos
jmp
mov
and
push
lret
xor
xchg
mov
cmp
add
shrl
iret
movsb
jp
sti
aas
data16
jl
fs
idiv
cmp
cltd
adc
inc
fisttps
stos
rcll
les
cmp
outsb
test
fcoms
push
mov
ss
decl
aaa
ljmp
jno
popf
fstpt
dec
push
scas
xor
cmp
fidivs
push
cmp
jmp
shlb
ds
ret
int
je
jne
pop
dec
jmp
icebp
insl
or
sarb
mov
les
push
push
mov
je
adc
clc
and
mov
mov
pop
sbb
lods
cmp
xchg
xor
adc
mov
jg
pop
inc
rcrl
loopne
fs
sub
outsb
sbb
iret
addr16
cmc
cwtl
cmp
loop
mov
dec
add
jno
jns
cmpsb
or
jmp
xor
ja
pop
fcomps
and
addr16
pop
sbb
xchg
insb
cwtl
push
out
enter
xchg
ror
rolb
lret
jns
lcall
lcall
adc
daa
std
enter
add
or
lea
ficoml
repnz
int
lods
cli
sbb
das
addl
daa
mov
iret
push
fistl
inc
lods
shrl
adc
jno
outsl
jno
out
jl
popf
test
test
addr16
pop
sub
push
imul
push
outsb
sbb
sbb
sarb
fnstenv
stos
js
rcll
and
xor
push
mov
pop
adc
vmovmskps
les
shrl
in
cmp
push
jbe
push
push
inc
xorb
int3
loop
pop
test
ficomps
movsb
arpl
icebp
inc
dec
or
lahf
inc
fadds
mov
dec
loopne
je
push
sub
roll
std
nop
mov
or
cli
mov
call
mov
aam
and
sahf
mov
add
gs
cwtl
call
mov
hlt
imul
cwtl
ja
lcall
loopne
mov
jp
or
inc
cmp
adc
jb
mov
mov
ret
lods
dec
mov
dec
sub
and
fsubs
mov
stos
dec
int
mov
jmp
dec
add
bound
cmc
fwait
mov
or
daa
adc
lods
data16
jecxz
jecxz
add
fstpt
imul
mov
add
or
fwait
mov
repnz
lret
fisubrl
xor
out
xchg
xor
adc
movsl
ljmp
pop
fwait
mov
aas
in
jl
mov
je
daa
rorl
test
loop
shrb
incl
les
int3
je
push
popa
idiv
dec
xchg
xchg
inc
dec
filds
pop
movsb
stc
fsubrs
sarl
sub
mov
push
je
je
repnz
sbb
jnp
jno
repnz
add
push
jno
xor
cli
and
mov
pop
mov
inc
or
fs
icebp
fisttps
dec
lahf
jo
mov
ficoml
mov
stos
insl
adc
add
cmp
fnstsw
fsts
movsl
cmp
mov
pop
pop
sbb
adcl
arpl
fnsaves
outsb
mov
scas
fs
mov
dec
outsl
out
pop
call
shl
mov
ss
jmp
sub
inc
test
test
mov
mov
add
shrb
jg
add
cmp
fisubl
or
mov
push
pop
and
push
aam
push
sub
scas
sbb
loopne
inc
fldcw
xchg
or
movsl
or
das
pop
and
shlb
popa
imul
push
jb
imulb
sub
aaa
jecxz
sub
leave
jb
insl
cmpb
jb
sti
aad
push
or
pop
enter
adc
xchg
lcall
data16
sub
loope
ret
les
inc
xchg
jmp
mov
aas
dec
xchg
bound
pop
into
inc
xlat
jno
lods
push
push
dec
ficomps
mov
dec
add
stos
aad
ss
rcrl
mov
mov
mov
into
lcall
fmull
sub
push
clc
dec
lea
push
roll
adc
cli
cmovs
lcall
imul
scas
ds
xchg
pop
repnz
sbb
jle
cmp
cld
pop
fistpll
xchg
icebp
iret
loop
repz
sahf
insb
pop
jg
cmp
push
jno
push
xor
into
sub
add
add
pusha
ficompl
jo
js
fldcw
insb
push
nop
stc
and
pop
outsb
mov
push
xor
mov
push
jecxz
inc
js
add
icebp
cmp
aad
sbb
ret
enter
xor
pop
imul
jl
lds
mov
lods
mov
inc
mov
xor
ja
test
clc
in
lods
jle
pop
cmp
rcr
mov
mov
sub
mov
cli
and
wbinvd
js
or
dec
mov
in
xchg
pop
cmp
adc
pop
inc
or
pop
js
ret
xorb
pop
fildll
push
pushf
xor
repnz
int
xchg
inc
sbb
inc
mov
cld
jb
stos
in
in
cmp
add
pusha
mov
hlt
push
sbb
fld
in
or
pop
fxch
jl
jnp
jae
int3
adc
xor
arpl
icebp
xchg
mov
cmpsb
push
movsl
out
sbb
sbb
and
or
test
adc
dec
mov
adc
pop
ss
rcr
mov
push
mov
or
and
adc
aas
stos
push
mov
mulb
enter
lods
clc
mov
add
lahf
subb
jo
mov
mov
xor
jo
xor
or
scas
jle
std
arpl
stos
orb
jmp
xchg
cmp
cwtl
clc
and
cmp
pop
cmc
fcomps
add
or
pop
inc
clc
std
jb
adc
push
xchg
icebp
repnz
sub
aad
adc
push
in
sbb
mov
mov
imull
xor
sbb
mov
flds
clc
cmp
xor
outsl
mov
pop
dec
jmp
cwtl
push
mov
not
in
jne
scas
pop
dec
test
ret
mov
jns
loop
int3
cmp
stc
pushf
dec
cmp
add
adc
or
push
jae
mov
out
sahf
mov
adc
push
mov
mov
sbb
and
xchg
pop
push
dec
push
jp
test
mov
bound
lret
xor
jb
xorb
jle
xor
repnz
push
dec
cld
arpl
add
cld
fwait
sub
js
inc
pop
jle
inc
addl
clc
xchg
cmc
pop
adc
adc
xchg
mov
adc
mov
shll
and
or
enter
xchg
int
mov
cld
leave
pop
je,pt
add
inc
jp
insb
push
mov
test
nop
mov
dec
fidivrl
or
cltd
jmp
pusha
jle
ret
inc
lcall
decl
leave
pop
outsl
and
mov
adc
out
test
ret
add
sbb
pop
push
fisttps
jmp
cmc
aas
add
sbb
jae
outsb
sbb
lcall
icebp
dec
inc
outsl
insl
mov
imul
and
or
dec
daa
lcall
xchg
add
jl,pn
xor
test
out
mov
mov
loopne
adc
xlat
std
data16
mov
inc
ljmp
sbb
test
adc
cmp
mov
jle
push
push
mov
insb
lcall
clc
xor
sbb
add
sub
out
xchg
and
mov
jg
jle
mov
add
lds
lea
xchg
pop
xor
mov
addr16
xchg
push
in
xor
fs
push
lea
lret
lahf
sbb
lods
in
scas
inc
hlt
jno
in
dec
pushf
daa
cmp
inc
adc
ja
xor
jnp,pn
or
jns
es
sbb
out
popf
push
popa
inc
lahf
cmp
jae
enter
popa
jmp
data16
std
cltd
mov
mov
jns
imul
notb
sub
int3
lea
popa
and
sub
lods
in
sub
add
pusha
stc
cmp
in
push
cwtl
enter
fdivp
mov
mov
popa
cmp
pop
xlat
movsb
inc
jb
push
lcall
ja
and
mov
shl
push
cltd
loope
std
push
mov
pop
push
daa
push
fisubrl
pop
cmp
das
or
sbb
xor
fadds
test
icebp
mov
int
and
mov
inc
clc
mov
adc
cli
pop
data16
lods
cli
ds
jo,pt
loopne
arpl
aam
fwait
xchg
test
mov
or
xor
in
jecxz
mov
pop
sub
jno
pop
and
fcomp
movsl
sarb
arpl
push
dec
pop
cs
mov
mov
inc
mov
cmp
loope
fiadds
cmp
push
mov
scas
mov
movsl
mov
xchg
loop
fs
cwtl
dec
add
out
and
test
mov
mov
sub
repz
add
out
jp
add
shr
movsl
or
in
jns
sti
loop
scas
lahf
mov
mov
mov
pop
push
rcll
pop
mov
jp
xchg
push
lea
push
push
int
adc
dec
lcall
cld
rorl
stos
divl
cmp
fcoml
add
push
les
sbbl
int
ds
jge
out
ret
loope
mov
jno
cmp
mov
xchg
stos
sti
fisubrs
gs
arpl
int
lret
mov
aad
mov
jl
add
cltd
xor
into
sbb
insl
subl
push
pop
stos
mov
inc
dec
sub
pop
mov
sub
inc
jo
gs
pop
sbb
scas
outsb
add
and
in
int3
addr16
rcll
xor
dec
repnz
enter
xchg
cmovo
jne
mov
add
sbb
push
lods
jb
mov
push
orl
mov
mov
out
dec
test
imul
lods
mov
jns
repz
mov
mov
ja
pop
jo
dec
cmp
pop
das
push
sbb
mov
outsb
out
jle
inc
pop
xlat
fs
dec
bound
mov
cwtl
sbb
sub
or
icebp
inc
or
in
or
icebp
sub
xchg
mov
test
popa
jno
sbb
inc
add
out
push
scas
sbb
cmc
sub
xorl
ret
jno
sbb
shlb
jne
add
sar
dec
and
cmp
ss
addr16
in
in
ljmp
pop
and
push
adc
sbb
cmpsb
adc
cmp
xchg
out
movsl
pop
xchg
add
dec
in
adc
mov
and
and
dec
xlat
xor
movsl
jmp
movsl
add
jmp
leave
xor
mov
fldl
lahf
xor
rcrb
xor
test
mov
loop
dec
or
mov
outsl
scas
js
fldl
out
jmp
sahf
shr
cmpsb
dec
movsl
inc
fisubs
mov
mov
sub
mov
rcl
daa
leave
and
bound
lahf
cmpb
insb
adc
xchg
ja
in
adc
push
mov
rorl
out
clc
test
outsl
cmp
cmp
pusha
ss
scas
add
leave
fisttpl
pop
push
mov
mov
inc
rcr
or
pop
jno
xchg
xor
mov
or
inc
ss
jmp
outsb
add
scas
xor
repz
scas
pop
push
sub
adc
add
jne
add
mov
dec
out
push
adc
lcall
shll
or
adc
mov
xlat
sbbl
cmpsb
dec
imull
lods
not
jmp
pushf
sbb
adc
decb
pop
rcrb
sarl
mov
inc
icebp
out
mov
fmull
repz
and
mov
or
movsl
jmp
add
inc
lret
cwtl
enter
sti
jbe
push
jnp
add
mov
in
mov
clc
adc
insl
mov
sub
push
push
repz
xlat
das
push
mov
sbbb
push
ds
or
mov
fildll
add
rcrb
icebp
mov
sahf
imul
add
shr
in
fistpl
mov
out
mov
fwait
sub
add
les
jmp
push
movb
cmp
and
ret
or
inc
lret
clc
add
shr
js
sbb
cmp
addb
mov
mov
xlat
imul
xchg
mov
push
and
cmp
dec
dec
mov
cmp
xor
add
test
popf
in
mov
sub
roll
or
or
mov
insl
iret
pop
sbb
or
mov
into
sub
lock
sahf
in
fiaddl
aad
dec
les
mov
or
out
aam
mov
jg
rolb
or
dec
mov
pop
lds
or
lret
popa
outsb
loopne
incb
mov
cmp
mov
hlt
pop
das
pushf
fwait
push
xchg
and
mov
mov
das
sbb
push
scas
mov
xor
ljmp
lods
shrl
mov
xor
ret
push
pop
pop
icebp
jbe
adc
sub
sbb
je
nop
push
jae
push
call
add
cvtdq2ps
cld
repnz
adc
gs
cmpsl
fsubs
xor
shrb
lea
stos
push
fstps
cmp
xchg
stos
mov
add
mov
xchg
iret
inc
mov
xchg
cmp
data16
mov
fadd
pop
mov
cs
push
inc
jbe
or
cmp
jmp
sbb
in
add
cltd
cmp
orl
mov
cmp
mov
stos
cmp
or
popa
stc
or
sub
out
rclb
testl
gs
push
inc
lock
incl
shlb
sub
mov
fstpt
or
jns
inc
es
mul
sbb
push
push
test
or
dec
or
jne
push
lock
dec
sahf
aaa
sub
push
fwait
or
inc
stos
push
rcrl
xchg
pusha
lret
mov
iret
or
out
sbb
jne
cmp
dec
push
sbb
pop
in
xlat
jb
xchg
shll
imul
loope
aad
inc
xor
mov
shll
divl
cmc
mov
mov
imul
test
sbb
xchg
cld
mov
jb
int3
and
je
in
and
movsl
in
sbb
push
jne
mov
adcb
lea
shl
mov
xor
push
dec
dec
int3
jg
dec
inc
pusha
sbb
xchg
dec
outsl
sub
sbb
xor
in
and
pop
jno
or
sub
cvtps2pi
mov
clc
dec
std
outsl
xchg
pop
movsb
adc
jge
and
clc
repz
sti
sti
xchg
imul
adc
adc
fcompl
sub
add
adc
out
cmp
int3
dec
arpl
sbb
out
and
loop
cmpsl
fucomp
pop
and
repnz
pushf
outsl
sbb
xchg
push
mov
cmp
test
jbe
mov
jb
iret
jmp
cmp
or
sub
mov
into
adc
clc
out
testb
mov
mov
cli
sub
mov
int
cmp
loop
pop
or
lcall
and
pop
sbb
push
flds
gs
mov
push
mov
sub
test
inc
pop
ss
adc
test
lret
out
or
fwait
out
add
inc
stos
dec
mov
out
int3
sub
and
or
popa
ficompl
in
jg
jno
lahf
movsb
fs
mov
push
sub
cmp
fnstcw
sub
out
stos
movsl
fstps
and
scas
xor
dec
xor
fwait
iret
sbb
pop
mov
pusha
mov
into
shll
ja
xchg
sbb
xlat
pop
mov
xchg
rorl
ds
jbe
mov
dec
aas
repnz
mov
popa
test
lods
push
cmp
cltd
add
stos
inc
loope
push
mov
fs
xor
pop
into
scas
sub
and
mov
xor
iret
leave
jp
ss
or
lret
or
inc
inc
arpl
push
aad
mov
sub
ret
add
sub
aaa
mov
pop
push
leave
mov
std
loopne
in
outsb
pop
mov
movb
loope
out
lods
xchg
jno
dec
push
push
out
in
sbb
inc
and
xor
pop
lea
sbb
adc
sbb
lds
out
rcll
push
cmp
aad
out
pusha
xor
pop
push
fists
std
cmp
test
pusha
jmp
das
mov
addb
es
aaa
push
push
stc
add
mov
enter
sahf
addb
sub
dec
mov
and
setno
ss
ljmp
dec
jp
cli
xor
in
jmp
std
call
int3
int3
std
dec
add
rcrb
out
aad
lods
and
ljmp
jle
or
test
scas
xor
sub
sti
pop
mov
test
imul
cmc
mov
call
xchg
cmpsl
loope
inc
js,pt
adc
cmpb
cmpsb
mov
jo
push
pop
mov
cld
dec
test
fdivp
sbb
imul
pushf
add
and
push
inc
ret
nop
shll
xchg
clc
rep
test
dec
in
int3
jne
aas
jno
xorb
gs
mov
clc
movsl
lret
insl
aaa
mov
push
out
out
mov
adc
and
test
movsl
lods
mov
test
jb
fisubs
rcl
jne
dec
jg
in
adc
adcl
dec
mov
addr16
mov
cmc
mov
jo
adc
sbb
lods
sbb
mov
addr16
xor
pop
adc
insb
outsb
mov
jb
std
xchg
or
leave
xchg
mov
dec
in
imul
mov
popa
out
hlt
mov
sub
xor
mov
fistl
iret
enter
decb
and
push
or
es
pop
push
call
cs
mov
jmp
lods
cli
mov
mov
push
jp
pop
bound
andb
scas
jb
pusha
stc
lock
pop
push
rorl
sti
cltd
fisubl
lcall
push
add
and
push
test
pop
std
and
lcall
dec
xorl
mov
mov
and
mov
stos
testl
adc
dec
daa
outsl
out
test
sbb
rolb
pop
int
insl
cld
fbld
xchg
scas
out
pop
insl
sub
out
ret
scas
push
xchg
lods
pop
or
cltd
lret
add
xchg
mov
shlb
ficoms
out
push
dec
aad
xchg
lahf
addr16
dec
pop
nop
fiadds
fisttpl
std
shl
lods
test
lock
fsubr
xlat
nop
das
mov
dec
push
cmp
pop
clc
jg
int3
shl
adc
ds
push
mov
pop
lods
out
scas
add
test
and
js
mov
leave
xchg
or
inc
mov
pop
add
fsubrl
fisttps
or
mov
inc
std
jnp
test
inc
adc
and
lea
cmp
pop
jp
mov
mov
bound
jp
or
push
sti
mov
mov
xor
adc
aad
pop
arpl
jno
sub
mov
cmp
pop
mov
loopne
push
or
fistpl
int3
mov
fldcw
cmpsb
lret
dec
push
mov
jmp
jl
mov
jno
out
or
jecxz
mov
loop
push
mulb
and
xchg
sub
nop
or
pop
iret
clc
jb
jge
cld
adcb
fimuls
fldt
cmpsl
xor
lret
adc
mov
into
push
push
sub
sbbb
outsl
test
jb
jle
and
push
xchg
mov
or
bound
pop
adc
inc
sub
popa
je
and
cmc
mov
loopne
insb
xor
in
or
fstpt
xor
into
loope
or
pop
add
adc
sbb
mov
inc
and
adc
xor
repz
push
shlb
int3
jne
sbb
loope
add
or
sbb
into
mov
dec
cmp
outsl
cmc
out
in
pop
add
adc
pop
inc
inc
mov
mov
mov
jns
mov
adc
and
add
sub
je
inc
sub
call
and
das
lret
mov
pop
enter
add
add
dec
divb
rol
out
cld
pusha
sti
adc
adc
xor
adc
xchg
sbb
sarl
hlt
jmp
jo
jg
jno
jb
pop
rolb
nop
clc
and
sub
adc
data16
ret
fimull
sbb
mov
mov
ljmp
pop
cltd
push
data16
cmpsb
ja
jnp
imul
mov
cmc
lea
out
pop
call
outsb
fsubl
pop
sbb
repnz
leave
cmp
sbb
xor
mov
adc
pop
out
sub
mov
fisubrs
sbb
fucom
stos
cmp
popa
inc
fwait
sahf
sub
pop
sbb
jp
movsl
jle
fbstp
iret
adc
dec
jl
sbb
stc
sti
inc
ret
add
data16
enter
and
inc
inc
rcrl
sbb
insl
xlat
pop
mov
sub
mov
cwtl
cli
sbb
push
ljmp
mov
mov
cmpsl
leave
je
imul
sbb
add
dec
data16
push
js
cltd
mov
jecxz
and
pop
mov
xor
xor
or
arpl
jmp
sbb
jecxz
jge
mov
pop
jmp
jmp
adc
imull
xor
cltd
add
lods
stos
and
mov
mov
cmp
fcmovu
push
push
inc
nop
xor
addr16
xchg
sti
incl
fldl
icebp
test
dec
jecxz
xchg
mov
jl
fnsave
in
cmp
mov
cmpsb
jne
jnp
add
notb
leave
js
out
xlat
xor
gs
cwtl
jno
test
jnp
cmpsl
clc
scas
mov
data16
cs
dec
cmp
ficomps
sbb
xor
sub
mov
cltd
out
hlt
xchg
movsb
out
out
cltd
push
jnp
mov
pop
pop
dec
ficomps
in
repz
mov
jno
adcl
popf
cmc
scas
or
dec
xchg
xchg
xchg
ret
jecxz
sub
cli
mov
push
xchg
adc
sub
mov
mov
mov
enter
movsl
scas
repnz
testl
loop
shll
mov
or
test
push
test
inc
stos
fwait
jb
insl
inc
push
jns
adc
inc
arpl
in
and
iret
mov
popa
shlb
inc
xchg
cmp
int3
aam
lret
stos
andl
xchg
pop
je
hlt
pusha
mov
scas
pop
icebp
insb
movsl
shrb
jge
add
xor
or
pop
inc
xor
addl
push
ljmp
xor
sub
pusha
fisubs
pop
mov
add
jle
xchg
mov
mov
dec
sbbb
stos
out
add
imull
inc
cmp
mov
jg
xor
sti
sahf
cmc
aam
insb
xchg
lahf
sarl
or
add
mov
mov
jnp
or
arpl
das
inc
fistpll
mov
push
xchg
xchg
pop
or
in
cmp
jb
mov
sbb
int3
test
push
pop
lret
add
movsb
ret
in
jne
loopne
pop
add
mov
aas
test
push
sub
lods
sbb
mov
xchg
mov
imul
adc
push
ds
add
or
jecxz
dec
push
jae
faddl
mov
loope
shlb
movsl
mov
mov
xlat
je
outsl
in
dec
sbb
xchg
mov
jl
adc
push
push
mov
mov
cmpsl
cmp
mov
negl
movsb
sbb
sbbl
sub
pop
dec
lock
jecxz
repz
dec
pop
loope
ret
dec
xchg
xor
cmpsl
lods
cmpsb
out
and
xor
mov
sbb
in
mov
push
rclb
in
push
mov
jb
std
and
cmpsl
daa
leave
mov
insb
hlt
mov
push
mov
add
xchg
popa
stos
jecxz
orl
setnp
int3
fmuls
lcall
xchg
jae
es
movsb
shr
outsl
mov
inc
cmp
sbb
or
mov
lcall
adc
loop
popf
xchg
hlt
ss
jmp
movsb
xlat
sbb
icebp
or
inc
cmp
push
jno
mov
xchg
fisttpl
mov
lock
jl
dec
mov
adc
mov
call
out
push
ljmp
or
push
lods
jl
xor
mov
jmp
xor
cmp
fnstsw
jno
out
andb
fcmovnu
stos
andl
pop
mov
cltd
jmp
jle
ds
icebp
inc
dec
out
mov
test
jo
jmp
ss
inc
dec
dec
stc
adc
sbb
mov
lahf
ds
loop
rcl
stc
scas
pop
mov
mov
faddp
adc
test
add
andb
sbb
sub
setns
jge
jle
push
add
pop
int3
mov
addr16
cwtl
ret
push
jns
pop
and
inc
addr16
cmp
sbb
xchg
dec
pushf
addl
out
mov
fisubs
xchg
adc
popf
lret
xor
mov
push
adc
ret
sbb
das
mov
cmp
cmc
xchg
ret
inc
repnz
gs
data16
lret
mov
cltd
dec
xchg
stos
aas
jmp
arpl
pop
aad
pop
jmp
outsb
xchg
pop
pop
das
sub
adc
inc
cmp
loop
jg
cmpsl
out
outsl
stos
popa
insb
jb
xsha256
cmpsb
push
stos
and
cmp
add
bound
sahf
jno
sbb
je
push
ret
inc
icebp
inc
jmp
scas
jmp
in
fisubrs
push
pop
popf
cmc
adc
lods
or
out
je
packssdw
sub
das
push
mov
and
pop
sub
cwtl
inc
jmp
out
xor
fs
addb
sub
add
add
lods
iret
xor
into
or
push
push
ret
lcall
call
dec
cmp
insb
cmp
aas
mov
lods
and
pop
jo
push
inc
pusha
jbe
mov
jbe
mov
cmp
and
ficoml
std
mov
lods
lea
xor
and
div
fistpll
mov
cmc
cmp
mov
inc
rcrb
mov
cmpsl
jge
ss
test
dec
cmp
sbb
push
xchg
pop
xor
int
xor
inc
and
lcall
cmp
push
out
mov
sub
cltd
mov
push
or
xchg
jle
jnp
stos
cltd
dec
push
sub
shrb
std
add
lds
arpl
push
and
fldt
rorb
pop
leave
ficoms
enter
cmpb
add
sahf
sahf
sub
inc
es
push
iret
nop
testb
pop
das
push
mov
or
outsl
sub
movl
mov
pop
jp
mov
mov
es
or
mov
ret
pop
shll
mov
in
dec
stos
popw
inc
xchg
and
negb
sbb
sbb
sbb
dec
mov
out
ret
push
jmp
hlt
cmp
cltd
mov
stc
push
clc
inc
mov
repnz
cmp
or
xor
mov
push
in
pop
xlat
sahf
cmpsb
fstpt
scas
inc
jb
out
sbb
and
and
lret
lods
xor
cmp
rcrb
pop
mov
pop
ret
jl
lods
push
dec
sub
arpl
stos
sub
dec
incb
outsl
mov
lds
and
test
stos
movsb
ret
in
mov
sbb
inc
mov
push
add
inc
out
repnz
lods
sub
mov
and
dec
movb
loope
push
mov
fcmovu
pop
jne
or
les
mov
dec
cmp
sbb
imul
gs
mov
push
push
stos
adc
mov
clc
sub
xchg
subl
jae
ret
je
fdivrs
aas
adc
aaa
notl
adc
shll
sub
cmp
fisttpl
xor
xchg
aas
js
pop
bound
jecxz
and
sbb
fdiv
mov
inc
or
mov
xchg
cmp
xchg
xchg
push
jg
test
xor
push
inc
iret
push
std
out
pop
add
mull
adc
js
push
cs
jle
mov
jp
jns
cmp
ljmp
ja
scas
jle
sub
add
cmp
add
jg
or
cmp
adc
iret
idiv
mov
mov
test
repnz
fldt
das
hlt
repz
pop
push
adc
int
dec
add
inc
ret
cmp
mov
scas
addl
mov
jl
mov
hlt
pop
add
push
pop
inc
or
or
jnp
rorb
xor
popa
lret
mov
xor
xchg
gs
mov
iret
pop
xlat
xchg
cmp
pop
mov
ret
xchg
mov
mov
inc
add
jnp
pushf
xchg
mov
sti
shll
daa
jns
sub
mov
ficomps
push
xchg
data16
in
test
icebp
jnp
dec
push
ret
and
decb
xchg
cli
pop
fdivrs
push
in
bound
test
pusha
xor
js
test
adc
cmp
daa
or
cmp
cwtl
adcl
fs
add
mov
sub
iret
jne
fldt
sub
or
cwtl
cltd
cmc
cltd
cmpsl
lods
dec
fdivrs
jl
jge
out
movsl
data16
insb
in
popa
fyl2xp1
pop
mov
bnd
ss
and
jbe
gs
ret
sub
aad
or
jo
loopne
xchg
and
sub
addl
mov
sbb
jnp
cmpsb
outsb
inc
dec
lahf
in
mov
add
mull
inc
sti
xor
inc
mov
out
out
cli
mov
shr
cmc
push
push
frndint
pop
push
addr16
daa
mov
pop
and
and
push
jmp
int3
mov
enter
or
test
or
jge
cltd
rorl
in
movsb
push
in
in
cmc
sti
or
bound
sbb
mov
or
mov
adc
mov
imul
fisubrs
pop
out
adc
mov
sbb
lods
xlat
js
iret
jo
cli
fsubr
pop
adc
loop
dec
dec
add
daa
lahf
cwtl
mov
test
int
popf
cs
shrl
add
jecxz
movsl
lea
and
ja
dec
pushf
jnp
sub
out
sti
push
add
cmp
les
sti
mov
push
insl
add
pop
dec
inc
mov
mov
mov
addr16
xchg
in
mov
out
inc
cmc
popa
mov
cmpsl
sbb
or
leave
mov
test
jp
les
decb
stc
cmpl
mov
stos
daa
xchg
jno
and
std
fnstcw
xorb
dec
nop
stos
bound
mov
mov
push
mov
mov
sarb
leave
jmp
sub
push
sbb
and
sub
bound
jbe
imul
dec
adc
pop
movsl
cld
sub
lods
lret
push
mov
scas
cltd
push
jns
stos
movsl
xchg
daa
mov
fcmovne
sbb
fcmovne
push
inc
test
bound
not
cmp
shll
lock
incb
mov
sub
movsb
or
divl
mov
fnsave
lods
movsb
adc
pushf
xor
lods
adc
jnp
jae
jmp
shlb
insb
in
sbb
inc
int
dec
inc
ss
push
lret
std
jbe
pop
js
pop
clc
inc
adc
rclb
jp
add
clc
xchg
jns
rclb
test
push
xchg
inc
add
lods
popa
imul
or
mov
stos
dec
loop
inc
cs
xchg
ljmp
push
call
pop
jmp
and
and
pop
add
mov
fmull
fldenv
in
sahf
inc
jae
and
xor
mov
out
cmp
aas
cltd
jae
leave
test
std
out
and
mov
call
xchg
push
pushf
into
mov
xchg
fmul
loope
or
jb
dec
push
lahf
out
in
mov
insb
adc
inc
push
ds
sbb
sbb
push
and
mov
jno
push
pop
mov
shrl
and
lods
addr16
push
decb
pop
adc
lcall
mov
enter
mov
in
sahf
adc
lds
and
mov
adc
mov
adc
imul
xchg
fildll
or
dec
jo
aas
xor
mov
mov
push
mov
das
push
arpl
bswap
sahf
or
pop
mov
adc
ret
sbb
fwait
lret
jnp
dec
xchg
or
jae
xor
movsb
dec
jl
cmpsb
add
scas
addb
lods
inc
out
or
dec
jae
or
jns
mov
loopne
test
or
fwait
jno
jmp
pop
das
sub
dec
ret
scas
loop
fsubl
fwait
sbb
cmp
xlat
pop
mov
jno
mov
and
inc
lods
inc
insl
push
jb
pop
xchg
sbb
cltd
inc
or
and
in
lahf
popa
xlat
dec
out
jge
push
shrb
fsubl
sbb
dec
jb
sti
sub
and
fsts
jg
lahf
mov
dec
push
adc
leave
test
int
push
cmc
sub
inc
test
out
jae
push
jle
adc
mov
and
jbe
cmp
cmpsl
iret
daa
rolb
clc
aam
daa
inc
std
jmp
sub
flds
test
hlt
fwait
icebp
aas
imul
push
test
lcall
adc
pop
stos
push
int
push
or
pop
and
popa
sbb
sub
ds
xor
sti
adc
enter
jp
scas
outsb
adc
mulb
in
outsl
fwait
inc
push
lret
xorb
dec
xlat
and
mov
lret
imul
sbb
aam
cmpsb
pop
addr16
aam
jo
push
pushf
inc
and
test
lock
cmp
mov
cld
rcrl
xchg
or
daa
pmulhuw
cld
cmpsb
jns
dec
or
stc
sub
push
jbe
jl
test
dec
movsl
lcall
shll
cmp
shll
fcomps
lcall
sub
mul
lahf
in
add
cltd
push
push
xchg
adc
jecxz
repnz
enter
pop
pop
mov
stos
cld
icebp
aaa
dec
add
mov
into
fldt
push
out
inc
in
fidivl
cltd
ror
add
ret
in
pushf
xchg
pop
and
xor
jns
ret
or
xchg
sub
inc
cmp
or
insl
jno
mov
cld
xor
push
cmp
rcll
movsb
and
lahf
scas
inc
cmc
aas
fs
push
mov
xchg
xchg
movsb
sub
pushf
sub
sti
push
mov
fisubl
in
imul
jb
sub
icebp
movsb
jns
xor
in
or
add
aad
data16
popf
mov
jmp
outsl
mov
inc
cltd
movsl
and
or
lea
add
xchg
sub
xor
not
lret
cmp
jmp
cmp
rcll
mov
out
add
or
mov
cmp
xlat
inc
loopne
sbb
loope
sub
sub
pop
jb
repnz
jmp
cmpsb
out
and
jp
xchg
mov
push
push
pop
lods
int3
lcall
andl
ljmp
xchg
jle
shl
ja
dec
cmc
stos
int
das
mov
jecxz
imul
outsl
jne
popa
hlt
mov
jmp
push
sbbl
fmul
sbb
sbb
movsl
push
loop
push
cltd
sub
movsl
loop
xlat
mov
aaa
test
sub
push
sti
push
scas
jns
inc
in
push
or
stos
pop
sar
inc
loope
cmpsb
daa
pop
cmpsl
stos
push
push
cld
sub
dec
incb
insb
imull
je
xor
gs
or
xlat
stc
pop
mov
cmp
push
or
bound
nop
mov
xlat
stos
and
dec
sbb
mov
insb
pop
inc
and
outsb
movsl
sbb
fbstp
je
iret
nop
pop
jecxz
ss
es
movsb
jb
daa
int
mov
inc
leave
pop
iret
in
mov
ret
aas
mov
mov
ja
out
mov
pop
fidivrl
lods
sbb
mov
pop
adc
ss
incl
adc
cmp
call
sub
nop
xchg
imul
fst
dec
int3
rcl
testb
cmp
and
stos
mov
sbb
mov
xor
test
sub
xor
or
cwtl
stos
jb
aam
xchg
sbb
sub
shll
jae
cmp
or
repnz
jmp
xchg
jl
repz
data16
pop
lcall
decb
into
and
cmp
insb
cmpsb
dec
dec
pop
jmp
mov
or
cmp
insb
inc
mov
std
pop
nop
idivl
roll
jne
jmp
xor
sbb
and
inc
enter
das
xor
insl
stos
jae
cs
xchg
push
mov
jns
les
dec
push
cmp
sub
dec
pop
pop
mov
aaa
in
jecxz
sub
outsl
mov
xor
xlat
mov
push
add
adc
xchg
int3
mov
and
rclb
or
xlat
loope
or
scas
and
inc
pusha
adc
jl
jo
push
jl
call
dec
or
xorl
into
sti
mov
movsb
push
cwtl
cmp
stc
adc
iret
push
imul
mov
mov
in
inc
call
push
je
jno
push
adc
shrb
or
push
lahf
add
aaa
xchg
push
jns
test
mov
pop
xor
into
or
or
push
xchg
sbb
and
jmp
jmp
cwtl
pop
int
inc
pusha
add
sub
in
fs
ljmp
or
ficoml
iret
push
dec
inc
xchg
jg
rdmsr
pushl
hlt
or
push
shlb
jle
mov
cld
jo
jl
rclb
xchg
xchg
lahf
and
sbb
aas
sbb
push
int3
xchg
das
ret
shll
imul
int
not
inc
cmp
pop
std
mov
adc
add
add
in
and
pop
stos
ja
out
mov
adcl
dec
fstps
mov
cs
jp
sbb
or
les
stos
or
mov
movsl
test
stos
mov
or
push
xlat
aam
enter
mov
aaa
mov
aad
loopne
scas
mov
xlat
std
xor
test
je
push
xlat
int
ljmp
aas
and
pop
fisubrs
cmpsl
xchg
repz
movsb
dec
xor
xchg
jmp
mov
pop
xorb
dec
ss
push
aaa
xchg
in
cmpsb
xor
xchg
sub
adc
push
enter
subb
add
fs
pop
addr16
mov
cmp
xchg
stc
fildll
cmp
sbb
mov
mov
mov
inc
push
cmpsl
dec
rol
mov
mov
dec
mov
push
loope
adc
mov
adc
jmp
lret
jb
clc
mov
loopw
mov
add
jae
mov
test
xor
outsb
and
jae
cmp
andl
pop
xchg
fistpl
scas
sub
dec
xchg
and
lret
or
enter
jnp
mov
add
xchg
jg
test
dec
lret
leave
mov
pop
inc
enter
addps
jbe
xchg
cmp
and
cltd
test
pop
inc
xchg
test
inc
pop
ds
mov
mov
stos
lea
dec
push
cmpsl
aaa
mov
pushf
cmp
jge
dec
cmpsb
mov
out
cs
pushf
mov
xlat
lret
push
adc
aam
add
or
mov
cmp
lock
mov
aas
std
xchg
cmp
clc
aad
scas
ret
mov
repnz
and
mov
mov
add
pop
outsl
jl
popf
imul
mov
dec
sub
loope
mov
dec
cmp
jo
cmpsl
rcl
cmp
test
mov
sarb
sbb
jnp
mov
mov
xor
or
cmp
sub
movb
push
sbb
arpl
test
pop
adc
dec
imul
push
jp
and
testb
enter
dec
add
mov
mov
mov
fcompl
shlb
or
sahf
jg
push
xor
cmp
loope
out
adc
jo
and
mov
movsb
jmp
hlt
mov
int3
or
mov
cmp
enter
icebp
dec
loope
and
imul
mov
cmp
push
pop
pusha
fistpl
push
pop
xor
pop
imul
inc
inc
lea
sub
add
sub
das
out
lods
adc
sbb
loope
dec
xchg
xchg
in
dec
rcrl
inc
or
add
adc
push
and
rcl
inc
xor
test
or
ss
loope
loop
ret
dec
mov
filds
jl
ret
das
scas
orl
mov
add
test
aaa
and
cmp
dec
cmp
out
xor
stc
ret
dec
loop
stos
cmp
xchg
mov
mov
call
int
mov
and
mov
sbbb
adc
sub
sub
test
mov
cmp
sub
add
adc
loop
push
push
push
cmp
sub
pop
push
mov
jno
lahf
inc
mov
sub
adc
push
dec
hlt
push
xchg
adc
dec
stc
stos
cltd
std
and
cmpsl
pop
xchg
movsb
scas
enter
ret
lahf
aaa
push
pop
lods
jg
daa
fsubl
push
mov
sub
mov
cmp
fadds
jbe
mov
cli
hlt
mov
adc
inc
rorb
jmp
and
pop
rcl
sbb
data16
rcrl
dec
loope
leave
jmp
cmpsb
pop
adcb
mov
sub
pop
push
enter
adc
es
fdivr
pop
loope
push
xor
popa
pop
xchg
sti
add
dec
jno
mov
push
out
or
dec
out
ret
inc
mov
fstpt
daa
jmp
test
scas
add
clc
outsb
mov
inc
repnz
sub
xor
dec
dec
fisubrl
xor
testb
xchg
pop
xor
out
int3
fldenv
xor
cltd
mov
xchg
loop
fldt
popa
jno
imul
or
shlb
sarl
add
dec
xchg
and
nop
sti
inc
dec
pushf
test
movsb
insb
outsl
ss
add
mov
in
imul
inc
cli
mov
fcompl
ror
push
gs
jle
dec
pop
push
ss
mov
fnsave
ss
icebp
imul
mov
mov
sub
das
mov
scas
xchg
lock
xchg
push
lock
inc
add
push
mov
push
addr16
rcrb
jg
dec
jge
std
push
pop
sbb
xchg
dec
int
inc
sbb
out
push
in
xor
scas
inc
sub
dec
movsl
hlt
fistpl
fs
jnp
adc
mov
repz
ss
out
sbb
aam
jmp
xchg
loope
xor
imul
into
jg
cmp
repz
lret
movsl
cmpsl
mov
mov
or
jmp
inc
mov
mov
mov
add
arpl
add
add
mov
rcrl
pop
sub
sbbb
clc
ficoms
popf
std
push
sbb
push
xchg
push
jne
enter
std
jle
and
or
push
pop
subl
daa
sub
jne
push
notb
mov
mov
pop
fldcw
and
les
xor
pop
or
call
sub
mov
mov
sbb
stos
pusha
call
pushf
cmc
xor
fldl
jb
out
dec
push
pop
pop
sub
enter
or
inc
xor
aad
dec
pop
dec
in
mov
loop
or
jne
mov
cltd
push
push
xor
cs
jecxz
add
jg
xchg
loopne
les
lret
push
or
inc
imul
insb
pop
pusha
inc
sahf
cwtl
in
sbb
and
loop
insl
cmp
xor
shlb
push
fiadds
aad
cmpsl
push
fcmovb
mov
mov
jo
add
sub
add
xor
cld
push
jl
sbbb
shlb
mov
mov
pushf
test
add
aas
jbe
dec
icebp
shlb
and
jbe
out
sub
jno
int3
sub
pop
clc
call
cmp
xchg
xchg
dec
cmc
cmpsl
jp
mov
jne
stos
mov
cld
in
jl
sahf
push
in
out
xchg
sbbb
subb
out
xchg
movsb
or
aaa
leave
imul
rcrl
jecxz
jecxz
nop
cli
mov
add
pushf
pop
in
je
shrb
fnstenv
add
mov
shrb
and
xchg
out
jg
push
leave
push
dec
pop
psrlq
gs
gs
imul
mov
or
push
push
push
outsl
jecxz
cmp
popf
mov
fistpll
into
out
int3
scas
aam
xchg
push
shrl
pop
js
cmc
add
mov
push
std
push
in
jo
cmp
sbb
ss
add
daa
push
push
push
out
add
cli
fimuls
mov
enter
repnz
or
shl
push
mov
push
mov
mov
js
cmpsb
dec
stc
lds
jb
or
or
xor
stc
cmpb
cmpsb
xchg
negb
js,pt
cs
jg
jnp
push
test
aaa
mov
imul
pop
jo
addr16
test
xchg
adc
div
fnstcw
scas
sbb
xlat
pop
outsl
imul
pop
lock
insb
sti
lret
into
sub
test
xor
sub
mov
xor
or
inc
lcall
xor
mov
adc
cs
cmpl
mov
jne
pop
test
xor
xor
leave
shrb
mov
data16
in
cmp
cmp
jb
xchg
jbe
mov
jecxz
pop
jl
xchg
ret
outsl
jle
insl
dec
mov
notl
scas
pop
cli
sub
stos
stos
adcb
or
xlat
push
insb
shlb
rorl
gs
adc
subl
fs
xor
dec
mov
sbb
push
dec
jb
out
jbe
aad
