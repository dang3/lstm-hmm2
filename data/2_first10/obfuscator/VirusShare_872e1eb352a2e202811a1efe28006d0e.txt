add
jg
add
call
xor
sub
push
push
push
push
call
xor
lea
lea
call
jbe
lea
and
mov
xor
xor
xor
push
call
push
ret
clc
xor
test
pop
add
outsb
aas
push
outsl
push
loop
xchg
cwtl
test
mov
pop
mov
add
scas
out
mov
mov
mov
dec
pop
movsl
jle
or
adc
cmpsl
xor
mov
pushf
push
out
and
xor
jmp
cmp
fisttps
push
pop
sbb
and
fistpl
cmp
jnp
cs
ds
mov
lock
jmp
sub
xchg
push
add
nop
in
fsubp
mov
push
xchg
push
cltd
lods
jmp
pop
inc
xor
sbb
dec
push
ljmp
cmp
mov
cmp
and
mov
outsb
jp
lods
sub
ds
out
lret
dec
add
xchg
mov
idivb
les
pop
xchg
movsb
lock
and
sub
mov
push
int3
insl
jne
lcall
xor
psubsw
push
dec
mov
push
cmp
inc
jb
sbb
cmp
lret
cmp
sbb
xchg
jns
dec
pop
addr16
fisttpl
sbb
adc
pop
clc
test
or
sbb
sbb
xchg
cmp
popf
inc
pushf
shll
add
add
and
popa
cmp
dec
popa
test
sbb
pop
arpl
push
fldl
dec
mov
mov
nop
rcrl
add
adc
mov
pop
aas
xchg
leave
lods
lret
lods
insb
in
mov
xchg
jmpw
jne
and
mov
cwtl
ja
imul
adc
lock
daa
jge
insl
xchg
sbb
mov
sbb
sub
imul
movl
in
mov
xchg
mov
call
lret
outsb
add
test
mov
test
push
jmp
cmc
insb
mov
movsw
xor
in
jae
sub
out
outsl
and
inc
jnp
rorl
jmp
mov
and
mov
add
aad
in
and
sub
sub
out
test
ret
push
cs
jo
fstpt
loop
dec
jb
add
jge
outsb
fcmovnb
bound
in
jp
test
cmp
xor
xchg
dec
xor
fmull
jne
push
add
add
cmpsl
out
or
xor
mov
inc
in
ljmp
stc
scas
xchg
andl
lcall
test
sbb
dec
aaa
notb
lcall
xorl
cmc
add
jbe
adcl
mov
jb
cmp
nop
pop
push
add
jle
and
int
es
push
mov
pusha
sub
mull
push
test
std
lock
jno
nop
sub
sarb
popf
add
push
pushf
jle
int3
xchg
sbb
jl
adc
fldl2t
sub
dec
mov
call
mov
pop
jo
jb
mov
mov
jbe
outsb
nop
in
jbe
fiaddl
push
hlt
pop
je
dec
int
push
jne
addr16
fs
popa
push
push
aas
mov
xor
fs
fadds
mov
push
roll
dec
xor
addr16
pushf
lods
add
adc
mov
popf
pusha
mov
in
mov
inc
and
pop
inc
incb
mov
xchg
jns
xchg
jmp
shr
adc
xor
xlat
lods
pop
cmp
push
mov
or
cmp
sti
outsb
pusha
push
mov
adc
inc
inc
xchg
cmp
adc
xchg
lret
test
mov
outsb
add
add
or
loopne
lock
lds
sub
mov
scas
jle
rcl
das
es
call
cli
test
jge
dec
cld
clc
jno
pusha
imul
push
fldcw
xor
mov
shlb
push
add
xchg
sbb
mov
lahf
daa
stc
cmp
repnz
out
push
xchg
mov
xor
sub
jmp
adc
scas
movsl
pop
scas
std
nop
test
lea
adc
and
pop
arpl
nop
adc
xchg
sub
pop
inc
lods
push
mov
mov
clc
and
out
js
adc
xor
test
fsubl
scas
stos
mov
push
lds
setp
mov
stos
sub
cmp
mov
mov
pushf
ss
xchg
aaa
mov
daa
xor
cmp
shl
movsb
jb
arpl
ljmp
fnstsw
pushf
movb
mov
jge
divl
push
add
in
pop
into
push
pushf
mov
sub
add
pop
dec
and
mov
push
das
jo
scas
shlb
mov
mov
lea
stos
jae
sahf
xchg
in
dec
xlat
xor
stos
sbbl
push
adc
std
inc
lahf
sub
cs
stos
xor
jbe
call
pop
nop
test
xor
test
xchg
mov
push
scas
sbb
jg
or
in
scas
cmp
sbb
or
lcall
daa
cmpsl
loopne
icebp
pop
lret
jne
ret
and
loope
xchg
in
movsl
addr16
out
stos
dec
sbbb
outsl
test
dec
testb
sub
dec
mov
insb
xchg
pop
shlb
xor
cmp
mov
cmp
push
enter
fstl
add
or
roll
sub
fmull
jge
pop
push
xor
std
mov
mov
xchg
data16
mov
insb
aaa
cli
mov
xchg
shld
mov
adc
filds
mov
mov
sbb
lods
jmp
arpl
xchg
push
mov
test
add
push
enter
ds
xchg
push
outsl
add
out
outsb
mov
pop
push
mov
adc
sti
loop
call
sub
and
or
fistl
gs
inc
xchg
mov
stos
mov
add
and
xchg
pop
loop
and
fs
adc
shl
ror
outsb
cld
pusha
xor
stc
cmpsl
mov
js
push
mov
xchg
out
jns
idivl
ja
adc
or
cmc
xchg
scas
bound
mov
pusha
rcl
daa
cltd
fcmove
shlb
data16
and
filds
iret
lock
out
aad
pop
mov
imul
pop
loop
push
rcll
ss
sub
shl
movsb
mov
outsl
rcrl
jbe
pop
and
hlt
sahf
in
mov
into
jnp
rcrl
int
lret
fstpt
dec
pop
inc
cmc
je
gs
movsb
push
pop
adc
pop
rorl
test
imul
fmuls
enter
add
mov
push
inc
stc
pop
and
push
add
test
sarl
outsl
push
hlt
iret
pop
push
addr16
in
movsb
notl
xchg
cmc
pop
test
mov
xchg
fidivl
pop
shrl
pop
loopne
insb
popf
pop
pop
addl
adc
xchg
sub
scas
lcall
xchg
inc
fiadds
clc
inc
and
int3
fisttpll
loopne
jl
and
frstor
mov
sbb
cmp
jne
cld
add
adcb
fisubrl
xchg
sbb
out
mov
in
dec
gs
pop
mov
add
arpl
push
fbstp
out
pop
mov
add
in
dec
cmp
xor
push
outsb
repz
xor
inc
mov
xchg
icebp
add
sahf
inc
inc
nop
in
xchg
xor
push
cmpsb
stc
mov
mov
mov
and
lcall
int3
sbb
fistpl
mov
call
std
mov
out
mov
jno
daa
sbb
out
dec
stos
stos
or
imul
hlt
mov
in
pop
sahf
std
sub
subb
daa
stos
mov
cmp
test
in
xlat
adc
in
out
and
push
rolb
mov
dec
mov
jle
push
int3
and
push
cmc
scas
jle
es
mov
xchg
pop
js
xchg
jne
lods
pop
push
jae
sub
pop
mov
jp
mov
push
mov
nop
sbb
es
add
ss
dec
dec
mov
lock
ds
fisubrl
lahf
sti
fs
or
sbb
xlat
lahf
jne
pop
pusha
ret
into
dec
sarb
lds
or
gs
test
and
in
fidivl
cmp
adc
pop
jns
inc
jnp
sbb
xchg
xor
jns
push
xchg
sub
push
sub
lahf
xor
mov
aad
mov
mov
repz
push
sahf
xor
sub
mov
cmp
mov
pop
mov
mov
jmp
in
pop
imul
inc
xor
mov
std
pop
pop
lods
test
xchg
jae
xchg
jno
xchg
inc
adc
je
sub
ss
push
aas
lods
mov
and
dec
roll
mov
adc
xor
mov
mov
mov
stos
pop
mov
ficompl
and
lcall
cmp
outsl
lcall
aam
pop
insb
fs
fistpll
xchg
push
xor
cli
and
lcall
or
in
xchg
jns
dec
mov
fidivs
stc
aaa
cmpsl
rorb
ror
je
pop
loopne
dec
arpl
test
testl
fistl
jle
push
cmpsb
xor
pop
xor
xor
cld
adc
jno
sub
js
je
arpl
dec
pusha
or
mov
xchg
vmaxpd
or
mov
jnp
sahf
adc
test
xor
mov
filds
pmuludq
xor
aam
in
mov
adc
lods
mov
mov
loope
pop
dec
push
mov
jle
adc
jno
pop
test
and
push
stos
fisubrl
outsb
and
fdivrp
repz
or
cmp
cmp
fld
jl
outsb
pop
in
js
adc
cmpsl
lea
cs
inc
rcrl
inc
push
push
fstp
aaa
cmp
jne
adc
out
pop
out
ljmp
xor
mov
and
ja
aad
test
cmp
daa
mov
inc
pop
sub
lock
test
pushf
mov
mov
jnp
lea
ja
mov
or
cmc
mov
gs
push
bound
add
subb
pop
data16
cmp
push
add
pop
cmpsb
ror
ret
push
stc
sub
sub
xchg
and
push
mov
aaa
push
adc
sbb
mov
inc
inc
test
mov
and
sub
jns
mov
jl
mov
icebp
fmuls
inc
pusha
dec
stos
popf
mov
jg
jmp
add
lea
lahf
call
sub
mov
xchg
mov
xchg
mov
pusha
loope
cli
lods
jp
and
test
xor
lds
add
into
lret
jecxz
cmpb
popa
jge
mov
push
popa
into
iret
outsb
mov
leave
inc
sub
or
in
push
imul
es
orl
mov
jne
jno
call
push
mov
adc
fisttpl
xchg
test
sub
mov
mov
jnp
pop
enter
dec
jge
imul
lret
sbbl
ljmp
sub
mov
pop
pop
pop
in
mov
insl
inc
mov
sub
stc
insl
jns
push
jmp
sub
and
sbb
inc
into
clc
gs
jbe
mov
lcall
push
addr16
dec
andl
rolb
pop
fcoms
sarl
xlat
sub
cwtl
mov
mov
jnp
ffree
dec
js
push
cmp
mov
int
dec
mov
out
les
ljmp
mov
pop
sbb
div
pop
jno
aaa
inc
and
iret
repz
vandpd
test
shll
push
lret
in
xchg
popf
sub
lds
mov
stc
cmp
enter
shlb
mov
das
adcb
ret
jp
mov
mov
cmp
adc
loop
std
movsl
shrb
and
or
xchg
cs
fwait
jmp
or
inc
lcall
lcall
mov
sbb
out
xchg
test
push
adcl
adc
int3
stc
stos
sbb
sarb
movsb
pop
pop
in
mov
or
adc
sub
jo
fxch
mov
jg
cmc
mov
rcll
mulb
lods
aad
call
cmpsb
fldt
rclb
loope
inc
mov
lods
cld
sbb
ret
push
ja
cwtl
mov
repnz
in
popf
mov
lret
sbb
nop
ljmp
les
inc
pop
rcrl
sub
mov
std
sub
mov
ljmp
jne
pop
popf
dec
push
push
xchg
push
enter
adc
xor
arpl
shl
jg
ljmp
int
loop
mov
adc
cli
sub
dec
add
pop
ss
push
test
push
push
jge
adc
dec
or
adc
fcmovnb
inc
push
scas
movsl
out
and
loop
inc
add
leave
push
jecxz
and
aam
rcll
mov
mov
adc
repz
jmp
inc
add
mov
cwtl
mov
sbb
sub
xor
push
stos
jno
in
jge
cmp
lret
mov
test
aaa
aaa
insb
fwait
mov
fimull
fldt
mov
jge
or
clc
sub
jo
stos
nop
sub
mov
and
dec
ljmp
mov
mov
dec
adc
sbb
in
push
loop
mov
bound
insb
adcl
adc
cmp
shll
movl
add
cli
pop
js
repz
sbb
pop
or
mov
jg
shll
dec
subb
shrl
jmp
loopne
sub
cmp
sbb
mov
clc
adc
loopne
and
inc
orb
loopne
sbb
push
xchg
lds
movsb
in
negb
mov
jae
and
mov
rcll
sbb
cmp
out
inc
insl
lahf
ds
lea
xorl
mov
outsb
inc
rol
push
cmp
pop
pop
sbb
out
mov
xchg
in
test
cltd
cmp
adc
out
movsl
pop
cmp
lret
mov
and
inc
insb
dec
dec
aaa
jmp
xor
lods
mov
hlt
jp
ds
stos
mov
pop
mov
hlt
loop
pop
mov
loope
mov
aas
in
sti
mov
pop
push
adc
pop
aaa
stc
mov
aaa
int3
lods
mov
xor
rcrl
addb
sub
xchg
cli
in
sub
test
push
and
sub
ret
wrmsr
out
and
xor
out
or
adcb
pop
and
loopne
lods
cmp
adc
fidivrl
scas
aad
jb
sub
stos
pusha
je
fsts
cmp
icebp
xchg
and
popl
push
in
adc
out
pop
in
add
ljmp
pop
dec
flds
call
xor
mov
popa
jns
sub
mov
push
jge
sbb
push
iret
adc
push
adc
test
outsb
cmp
push
decb
ret
dec
in
lea
mov
mov
and
xor
sbb
fildll
repnz
mov
into
mov
adc
push
lea
push
or
mov
mov
cmpb
sbb
sub
das
insl
inc
or
sub
fs
xor
cmp
subb
dec
push
out
inc
jg
lahf
orb
xchg
sub
sbb
jae
and
or
fdivs
xchg
xor
pop
aam
or
add
mov
movsl
push
sbb
loop
sbb
in
test
cltd
je
xchg
sbb
je
repnz
pop
or
dec
jge
int3
xchg
incl
add
lods
and
or
imul
add
pop
jo
std
lds
push
mov
imul
daa
sbb
sub
jge
shrl
cmp
mov
nop
adc
out
outsl
icebp
popa
lret
mov
iret
jb
insl
and
pushf
test
insl
or
mov
sub
in
fsubrs
xor
sbb
push
push
mov
fcoms
pop
push
sub
push
and
or
das
ret
frstor
inc
xchg
insb
insb
and
xchg
push
dec
inc
mov
add
dec
inc
add
jae
add
imul
mov
in
sub
sbb
fdivrl
mov
in
push
mov
xchg
cmp
dec
push
mov
cmp
mov
cld
enter
fimull
nop
jae
mov
scas
xorl
add
or
dec
testl
movsl
lds
inc
xor
lods
shl
mov
into
rcll
and
lods
jnp
in
in
dec
adc
popa
inc
imul
enter
bound
insb
call
inc
fcmovnbe
xorl
adc
lret
popa
fildll
das
pop
jg
popf
pop
mov
dec
pop
xlat
cltd
mov
stos
ficompl
fwait
mov
popa
lret
add
neg
popf
adc
mov
xchg
notb
xchg
jecxz
and
or
test
add
mov
adc
mov
sub
sti
add
dec
adc
push
dec
test
mov
jg
ret
cld
and
and
enter
ds
addb
mov
inc
sbb
fstl
mov
inc
out
iret
push
inc
lea
pop
add
cltd
cmp
pop
addr16
imul
sbb
mov
in
push
push
test
sbb
jecxz
xor
sbb
cmp
sbb
cmp
fistl
fbld
xor
fistpl
cwtl
inc
adc
mov
xchg
test
ret
lret
lret
push
jp
jge
push
cltd
fstl
cmp
cmp
push
adc
fstpl
push
out
add
icebp
pop
aam
bound
pop
cld
stos
xchg
push
in
cld
and
add
insb
push
outsl
arpl
andl
ret
jl
jae
add
loopne
mov
gs
out
in
clc
xchg
push
aad
push
mov
loope
mov
cmpsl
mov
icebp
scas
cwtl
jnp
cmp
fildl
leave
enter
imul
inc
aad
fists
bound
push
scas
xchg
mov
pop
into
repz
add
add
ret
push
es
aam
xchg
sbb
fldt
stos
mov
loop
inc
repz
insb
fucomip
test
dec
sahf
ds
int3
xchg
mov
addb
inc
mov
dec
fdivrl
out
mov
or
adc
mov
cli
or
pop
mov
subb
sub
push
movsb
decb
mov
lds
mov
dec
inc
jbe
jnp
iret
ficoml
sbb
and
popf
or
xchg
ja
sbb
fs
jl
mov
mov
and
jmp
adc
std
cmpsl
add
ficoms
pusha
ret
stos
mov
xor
ret
xor
test
xor
nop
mov
data16
scas
gs
sbb
sahf
movsb
dec
dec
add
cltd
and
cmp
push
imull
daa
mov
dec
stos
leave
and
orl
sti
pop
ret
les
mov
jge
cwtl
inc
jl
push
sti
mov
andl
into
clc
js
or
xchg
fs
mov
and
fidivrs
mov
inc
cmc
fsub
andl
mov
cmpps
mov
test
dec
mov
add
clc
jbe
push
inc
sub
call
gs
jl
lret
and
jge
clc
inc
ja
jle
imul
jmp
sub
and
call
jmp
pop
loop
push
push
pop
xchg
mov
ljmp
test
lods
ret
ret
ret
pop
lock
sahf
call
in
in
ret
dec
iret
ss
inc
cld
cmpsl
and
lret
add
fldt
push
sar
and
push
fldl
and
mov
cmpsl
sub
dec
sub
outsb
ret
loop
xorl
iret
dec
call
or
out
cmove
cmpsb
add
sti
daa
into
es
sar
cs
adc
faddl
mov
imul
lea
sti
mov
jne
mov
jb
lcall
inc
mov
fidivl
adc
adc
insl
lods
push
sbb
cltd
jns
hlt
pushf
inc
lea
aas
push
lret
push
add
pusha
test
inc
movhps
loop
cli
pop
mov
idivl
push
fdiv
gs
mov
xor
ss
xchg
das
push
inc
pop
addb
test
dec
in
sub
inc
mov
pop
add
pop
and
pushf
pop
jp
jmp
adc
lahf
sub
mov
mov
xor
pop
adc
roll
xor
stos
xor
xor
not
aaa
xchg
push
pop
nop
mov
mov
cmp
stos
or
xchg
sub
and
bnd
call
sub
lcall
mov
add
cmp
jbe
scas
adc
and
push
and
sahf
out
xchg
jnp
test
xchg
arpl
xor
into
testl
rcrb
aas
xchg
sbb
cli
dec
add
pop
xchg
jae
pusha
pop
push
es
or
jb
movsb
nop
dec
add
pushf
xchg
fsub
mov
pop
push
outsb
inc
adc
push
sbb
sbb
dec
inc
stc
out
xchg
cmp
outsl
pop
jge
movl
pop
stc
pusha
call
inc
cmp
pop
cld
sbb
repnz
or
push
popf
mov
mov
mov
lret
pop
sbb
inc
pop
xor
dec
inc
or
les
sbb
movsl
clc
adc
mov
inc
rorl
mov
inc
int
inc
sub
shll
stos
jo
xchg
inc
and
jbe
stos
in
out
mov
xlat
push
lock
cs
les
out
ficomps
dec
jmp
xchg
test
aas
mov
xor
std
xchg
mov
scas
lods
mov
in
or
and
daa
dec
insl
inc
dec
cmp
adc
lahf
xchg
loop
and
mov
mov
or
cmc
add
div
xor
fdivs
sbb
insl
test
add
or
push
mov
push
cmp
sbb
scas
and
dec
sbb
int3
lcall
adc
pop
into
cmp
inc
pushl
jle
test
repz
ror
bound
popa
ss
ja
pop
iret
cmpl
out
sbb
adc
inc
sbb
dec
push
inc
push
outsb
std
cmpsb
dec
int
or
sub
pop
test
stc
adc
xchg
sbb
push
jmp
dec
shlb
push
pop
movsl
enter
push
inc
lods
icebp
in
cs
arpl
sub
daa
xor
pop
movsb
data16
js
jne
enter
inc
pop
cmpsl
adcb
lds
mov
xor
sbb
sub
dec
xchg
jmp
mov
dec
loop
sbb
and
cmp
cmpsb
mov
test
push
insl
mov
dec
adcb
inc
dec
shl
test
add
xor
mov
pusha
sbb
jbe
test
lcall
bound
push
icebp
sbb
and
in
dec
addb
push
inc
sub
fcmovnbe
add
mov
ret
cmp
cmp
mov
mov
adcb
mov
push
adc
xchg
sub
in
loop
fistpl
or
mov
or
icebp
aam
mov
es
lds
lret
mov
stos
sbb
mov
mov
inc
mov
xorl
int
insl
fmulp
mov
loopne
lods
push
adc
pop
imul
mov
mov
movb
bound
pusha
insb
aas
mov
notb
mov
sbb
push
cmp
scas
push
enter
sub
mov
mov
pusha
lock
test
and
pop
jg
mov
push
dec
mov
or
mov
test
divb
pop
add
mov
push
mov
lret
fwait
outsl
sbb
add
mov
mov
repz
ja
mov
add
xchg
mov
int3
add
out
add
or
push
jnp
push
inc
lods
lret
dec
fistps
mov
imul
rcrb
mov
add
fildll
out
outsb
dec
cld
inc
pop
sbb
mov
mov
jo
pop
pop
cmc
ret
pushf
ja
fucomi
jmp
pushf
lods
xchg
ret
jns
test
mov
mov
sub
add
movsb
ljmp
fdivrl
icebp
xchg
sub
mov
mov
in
lods
or
mov
in
mov
xor
in
mov
lock
mov
mov
push
pop
cwtl
je
pop
jle
cmpsb
mov
jge
xchg
and
lods
and
out
lods
dec
aaa
rcrb
cltd
mov
inc
pop
icebp
loope
sbb
cli
dec
fstp
test
lret
or
inc
inc
mov
ds
sbb
es
sub
ss
or
or
adc
fidivrs
scas
cwtl
mov
ds
stos
add
push
pop
rorl
dec
or
add
cmp
cmp
aad
test
out
lcall
adc
lods
inc
add
and
sbb
xchg
or
loopne
js
mov
aaa
inc
mov
adc
fiaddl
prefetch
lods
das
nop
test
test
sbb
sbb
pusha
mov
dec
mov
dec
dec
fwait
in
mov
push
ja
jnp
push
dec
rol
pop
sbb
ret
xor
repz
jns
loope
xchg
add
je
xchg
popl
and
jnp
xor
sarl
sub
mov
jmp
xorb
aaa
push
and
jb
add
clc
jbe
in
xor
add
movl
dec
into
int3
push
ror
dec
call
jecxz
out
cli
decb
cld
or
or
mov
adc
inc
imul
inc
lcall
jns
xor
and
ss
jbe
cli
aad
ret
scas
ret
es
inc
int3
ss
scas
cmp
loopne
cmp
jns
xchg
cmpsb
loop
fidivs
sbb
stos
adc
jae
push
loopne
jnp
push
dec
in
ja
push
inc
int3
int3
pop
ss
std
mov
adc
in
adc
sarb
add
ja
sarl
dec
or
bnd
mov
ja
int
es
mov
dec
insl
xor
enter
sub
dec
addr16
in
jp
xor
xchg
and
in
lds
cmpsl
sbb
enter
sbb
jp
add
shl
sub
sub
test
or
movsl
and
adc
ljmp
shll
jnp
fcom
mov
ret
stc
mov
xor
push
fs
stc
and
jg
enter
jmp
fs
outsl
push
xor
iret
sbb
les
cmovg
out
fisubs
lock
push
xchg
rcrb
loop
cld
shrl
jmp
and
push
dec
cmp
sbb
inc
adc
in
stos
arpl
sahf
pop
pop
jge
negb
mov
xchg
into
pusha
repnz
add
rcl
add
adcb
in
lods
stc
xchg
sarl
mov
and
lea
push
call
pop
dec
dec
das
push
jmp
ret
clc
mov
dec
xchg
hlt
or
leave
enter
inc
xlat
sbb
jns
pop
adc
ss
adc
sub
push
xor
cmp
xchg
outsb
ret
xor
sbb
and
fldt
popa
inc
sbb
clc
adc
aad
iret
lods
pop
jbe
adc
pop
or
insb
int
mov
loop
sub
ret
loope
jp
in
orb
mov
cwtl
out
mov
in
mov
sbb
pop
rol
dec
insl
aad
movsb
aas
sbb
mov
mov
mov
push
push
scas
into
ficoms
iret
loop
add
sarl
je
add
movsl
stos
xlat
fcomp
xor
xor
in
cmp
ljmp
inc
xchg
add
cmp
mov
sub
test
mov
adc
cmp
add
mov
jp
jbe
pushf
adc
push
popf
inc
mov
mov
int
dec
dec
mov
inc
adc
mov
xor
push
stc
or
xor
sarl
mov
push
adc
fmuls
xchg
shlb
and
jecxz
fiadds
fsincos
push
mov
aam
aad
jg
dec
mov
insl
and
enter
fnstcw
push
jge
push
push
lcall
push
xchg
jmp
pop
icebp
inc
fdiv
stos
bound
int3
add
mov
addr16
lahf
mov
or
sub
movsb
stos
push
adc
jne
cmp
jns
in
pmaddwd
lcall
test
enter
cmp
push
in
pop
lahf
adc
sub
mov
mov
ss
fsubr
pop
ror
lods
test
int
mov
and
and
and
inc
popf
push
inc
pop
sbb
jecxz
push
xchg
add
test
ds
clc
inc
mov
and
cs
mov
xor
mov
ds
cmc
push
imul
out
push
jge
subb
mov
pop
fisubl
fwait
test
mov
cwtl
call
ret
pop
jg
sbb
add
test
fcmovne
mov
ret
add
push
mov
jns
std
mov
lret
sar
jae
jne
xlat
push
fadd
mov
les
push
into
dec
lods
cmpsl
push
xor
or
ljmp
leave
cwtl
mov
testb
movsl
and
push
cwtl
inc
test
or
loopne
pop
icebp
in
inc
bound
enter
out
loope
mov
dec
push
std
mov
jg
aaa
rclb
fwait
push
sbb
cmp
popf
movsl
notl
sub
add
xchg
into
cmp
inc
sub
int3
aad
pop
inc
cwtl
neg
hlt
daa
mov
xor
and
sarl
pop
sbb
jnp
ret
addr16
push
outsb
jge
mov
sbb
roll
add
nop
movsl
andl
jl
stc
daa
jl
mov
add
mov
inc
imul
popf
hlt
cmp
mov
aas
xchg
or
das
sbb
cli
pop
mov
or
inc
mov
cmp
add
das
sbb
or
xchg
dec
jne
fldt
es
push
mov
dec
stc
stc
test
pop
push
mov
in
jl
std
ret
pop
stos
imul
in
stc
cld
mov
xchg
scas
es
sti
shrl
xchg
xor
adc
and
push
xor
aad
sub
pushf
ret
push
sbb
xor
and
icebp
add
mov
mov
jo
mov
pop
daa
in
mov
xchg
aam
enter
hlt
mov
in
pop
cs
enter
mov
out
inc
outsl
mov
mov
xchg
loopne
mov
pop
sbb
icebp
dec
mov
or
test
scas
dec
gs
shr
out
faddp
inc
cmp
test
and
stos
and
punpcklbw
fs
or
xchg
sahf
dec
mov
das
cltd
sbb
rcll
mov
cmpb
jae
or
loopne
adc
xchg
adc
mov
fidivs
cmpsl
fidivl
mov
add
ror
out
dec
dec
ficoms
imul
into
xlat
fidivrl
sahf
into
cld
enter
cs
push
stos
mov
xchg
jno
dec
inc
or
sbb
out
jo
inc
push
mov
test
fisttpll
mov
fnsave
nop
pop
mov
push
addr16
ja
xchg
jae
mov
fstl
pop
fnsave
stos
iret
xchg
subl
movsl
lcall
outsl
not
nop
cld
pop
lds
dec
pop
movsb
xchg
mov
push
adcb
xchg
out
sbb
and
and
cmp
cs
cmc
mov
push
inc
fisttps
je
insl
repnz
mov
pushf
out
cmp
jle
push
mov
rcll
cli
clc
inc
xor
imul
add
and
mov
mov
dec
loopne
cmp
inc
std
push
inc
mov
mov
or
loope
cld
pop
sub
dec
in
dec
mov
xchg
arpl
pop
mov
insl
jg
push
sti
jp
sbb
cld
loop
dec
and
lods
pop
mov
dec
mov
push
lcall
out
repz
jae
adc
sub
ds
cmpsl
push
push
and
mov
mov
out
js
loop
lret
stc
mov
icebp
gs
sbb
fyl2x
cmp
ljmp
cs
repnz
jo
aam
inc
ret
or
mov
fsub
mov
sbb
mov
int3
push
test
ficoms
mov
or
imul
in
scas
adc
movsl
int3
cmp
jno
nop
nop
imulb
rorb
push
lahf
mov
inc
sbbb
and
fucom
sbb
inc
mov
pop
xchg
jle
lret
int
xlat
fldcw
mov
mov
xlat
and
xchg
stc
push
jg
mov
push
rcrl
jae,pt
inc
lods
xchg
jmp
arpl
mov
pop
or
pop
int3
movsl
out
stc
xchg
pop
cmp
outsb
jbe
push
inc
or
fidivs
jmp
loopne
sahf
push
jne
mov
sbb
out
fsts
inc
fistps
inc
fidivl
int
mov
negb
dec
and
lds
cmp
xchg
ss
dec
int3
imul
push
push
stos
push
or
add
jb
mov
pushf
cmc
mov
push
xchg
sub
aad
outsl
mov
mov
pop
jns
movsl
pop
fidivl
decl
sub
call
bnd
ret
cmp
imulb
cmpsl
jp
or
jb
mov
clc
insb
popa
xchg
cmp
push
mov
rolb
push
pop
das
iret
sbb
jg
push
cld
dec
mov
push
into
jle
hlt
fimull
daa
jns
sbb
adc
ljmp
jb
push
out
sbb
dec
sbb
lods
or
adc
lret
jae
ud0
dec
mov
loop
mov
mov
add
movsl
scas
fs
setl
jae
mov
rcl
jae
std
scas
fwait
mov
cmpsl
lea
enter
roll
mov
xchg
in
aam
mull
inc
nop
inc
sbb
and
inc
adcl
mov
cli
arpl
inc
dec
ljmp
push
in
xor
fcoml
pop
repnz
fcomp
lea
or
das
add
jmp
addr16
xorl
ret
mov
and
mov
testb
ljmp
scas
adc
jb
nop
jecxz
lds
rcrb
push
loopne
stos
pop
jbe
insl
xchg
sbb
enter
xlat
aas
mov
cmpsl
mov
jne
lret
hlt
jns
jp
cld
dec
mov
scas
sbb
sub
testb
in
movl
mov
push
out
and
and
fnstcw
insl
push
in
stos
xor
jmp
jne
lret
sub
dec
negl
mov
cwtl
push
in
inc
sar
pop
mov
push
pop
test
cmp
fidivs
mov
test
lret
xor
ret
push
mov
cltd
xchg
xlat
ficoml
or
ds
inc
stos
push
bound
sbb
ficoml
es
dec
or
or
pop
or
sbb
adc
aas
loope
test
jne
les
xorl
or
sbb
and
jl
ja
icebp
aad
mov
fisubrl
inc
call
sub
push
ret
jo
imul
xchg
and
mov
jns
jns
ja
aad
fidivs
xchg
cwtl
popf
mov
xorl
sbb
dec
test
imul
mov
rcrl
addr16
lods
fcompl
ret
add
lea
shrl
jl
sbb
gs
cli
lcall
dec
xor
jnp
dec
xor
jne
adcb
fs
inc
dec
cmp
and
in
lea
js
inc
adc
add
imul
faddp
inc
mov
fs
pop
ret
pop
fistps
mov
cmc
in
mov
mov
sbb
je
jp
adc
mov
fdiv
cli
rcrl
cmp
inc
in
add
sub
js
adc
mov
sub
adc
scas
xor
movsl
rcr
cs
jg
sub
scas
scas
ja
lds
pop
pop
cld
test
sub
sti
cmp
ljmp
outsl
mov
sbb
or
adc
stos
push
ss
adc
out
stc
xor
imul
mov
pop
jle
aam
test
pop
jl
out
mov
inc
mov
sbb
jmp
sub
cmp
dec
frstor
sub
shll
mov
dec
out
adc
testl
js
clc
pop
cmp
mov
cmp
addr16
inc
adc
imul
leave
arpl
and
loope
ja
mov
enter
pop
push
mov
lahf
lds
lahf
sub
adc
push
mulb
xor
xor
cmp
mov
fiadds
adc
lods
jbe
or
cltd
das
imul
pop
xchg
and
in
ret
inc
adc
clc
aas
dec
loope
out
jg
or
cmpsl
sbb
dec
imul
cmc
rorl
mov
sbb
jl
leave
cmpsb
movsl
inc
stos
int
pop
inc
lea
and
ret
mov
ds
scas
pop
test
and
xchg
scas
and
loop
push
popf
cmp
ficoms
sub
jmp
dec
adc
jge
fistl
jno
mov
cld
pop
mov
inc
jae
or
sti
pusha
dec
mov
sbb
movsl
jmp
rolb
sarb
sub
and
or
add
cmp
mov
insl
and
push
lea
pushf
imul
jbe
or
push
xchg
xchg
cmovo
gs
adc
dec
sahf
lahf
and
adc
ljmp
dec
jne
lahf
sub
pop
sbb
mov
idivl
mov
mov
pop
dec
mov
fwait
aas
jae
inc
dec
ret
leave
push
outsb
inc
jb
ljmp
mov
les
cld
loopne
test
int3
mov
pop
xor
add
xchg
push
pop
fsubrl
call
push
or
pop
cmp
pop
mov
insb
frstor
les
push
mov
jmp
nop
dec
loope
into
loopne
subb
jp
mov
int
mov
inc
cmp
or
fistl
flds
in
das
daa
fisttpl
lret
or
fbstp
aas
and
mov
cmp
into
stos
movl
inc
cmpsb
pop
lods
call
mov
adc
xchg
fldenv
cmp
loopne
gs
dec
cmp
lds
dec
and
push
pop
popl
int
leave
or
cltd
lret
cld
add
mov
sub
popf
hlt
sahf
or
mov
push
aad
adc
xor
jnp
icebp
or
sahf
mov
scas
jbe
and
in
sbbl
daa
stos
mov
notb
lret
fbld
push
sub
add
mov
mov
jecxz
idivl
xor
pop
movntps
adc
stc
sbb
lcall
and
fstpl
outsl
fdivrp
mov
stos
push
jno
dec
sub
xor
int3
jmp
mov
cltd
out
and
and
mov
shl
push
push
or
xchg
mov
stos
imul
adc
push
mov
add
icebp
xor
xchg
lahf
das
ret
adc
mov
inc
cli
jg
jo
push
stos
icebp
mov
cmp
add
mov
xor
add
xchg
mov
into
pop
jno
fists
dec
icebp
rclb
test
das
adcl
xor
push
mov
outsl
xorb
or
cmc
nop
faddp
jno
sub
xchg
jbe
rcl
and
pop
mov
mov
sahf
mov
mov
add
pop
or
repz
ss
iret
stos
jbe
outsl
or
mov
jae
or
sbb
pushf
push
add
into
outsl
mov
add
movswl
mov
and
mov
in
gs
mov
es
call
insb
xchg
in
sub
cmp
outsl
pop
outsb
pop
inc
mov
in
test
rorb
jb
push
cltd
cmp
fwait
int3
in
out
cmp
sub
std
movb
hlt
push
int
xor
mov
in
repnz
in
xlat
out
mov
jbe
lret
jg
lret
addl
push
fldl
pop
dec
outsl
pop
std
push
lahf
lea
js
sub
xchg
je
inc
push
inc
cli
and
push
xchg
imul
sub
adc
aas
pop
sahf
jecxz
mov
mov
ja
push
dec
data16
inc
and
mov
sbb
fsubr
cltd
or
adc
cmpsl
xchg
test
pop
dec
jmp
mov
mov
inc
cs
mov
imul
fldcw
jbe
lcall
js
sbb
bound
cltd
jecxz
jae
in
adc
decb
mov
mov
dec
lods
mov
jo
ret
xchg
repz
dec
mov
test
push
push
data16
and
test
adc
pop
jg
jg
mov
add
mov
lea
cmpsb
dec
daa
lock
loopne
idivl
jbe
fbstp
inc
jbe
xchg
xchg
and
dec
or
je
xchg
add
and
pop
mov
dec
sbb
jg
mov
pop
mov
jb
mov
push
cwtl
lock
adc
lock
cmpsb
mov
lcall
rorb
stos
mov
sbb
shll
push
ljmp
mov
icebp
dec
into
fmulp
add
jle
adc
jmp
xchg
sbb
push
xchg
xchg
cli
jg
pop
pop
enter
mov
dec
in
fsubs
adc
das
cs
jae
ss
sahf
divb
and
inc
ds
mov
mov
lods
jb
add
fnstcw
adc
push
and
inc
xchg
dec
jmp
dec
movsl
hlt
subl
mov
jns
pop
push
out
hlt
cmp
ucomiss
jne
cmpsb
mov
sbb
mov
mov
shlb
lds
push
mov
xor
dec
popa
sub
repz
lods
test
mov
dec
mov
movsb
lock
arpl
pop
iret
pushf
jle
ret
je
inc
and
jo,pn
gs
mul
pop
ja
lods
jecxz
xor
cmp
xchg
fcmovb
jecxz
data16
jne
dec
jp
inc
imul
sub
mov
add
lret
mov
pop
test
mov
mov
and
pusha
pop
dec
mov
outsb
scas
sbb
in
cmp
ss
dec
cmpsl
sub
dec
xor
sub
push
mov
test
add
das
mov
xchg
xor
mov
pop
xchg
mov
xlat
push
pop
shl
mov
jle
fsubl
test
subl
lds
xchg
inc
xor
mov
jbe
mov
fs
adc
std
push
je
arpl
clc
inc
push
dec
lahf
movsb
sub
dec
ss
mov
ss
jnp
sbb
test
sbb
lock
push
aas
mov
rolb
and
aam
push
jno
and
fs
mov
daa
jg
rcrb
xor
mov
ret
stc
outsl
and
mov
rcrl
mov
sub
lods
je
or
stc
popa
sub
addr16
enter
in
cld
rcl
sub
xchg
bound
mov
lods
mov
cmpsb
jne
pop
popf
cmp
ljmp
cmp
out
mov
jns
bound
test
movl
scas
mov
add
mov
insb
sahf
ds
mov
xorb
push
inc
or
pop
sbb
mov
cmp
jns
push
sbb
mov
mov
fs
cmp
mov
pop
sub
sub
imul
pop
or
scas
jb
scas
out
cwtl
cltd
adcl
cwtl
jle
ret
jnp
sub
lods
dec
sarl
and
data16
popa
mov
adc
lret
in
sti
ret
and
repz
int
pop
add
jp
jb
mov
mov
jp
lret
mov
mov
mov
js
je
test
sbb
outsb
je
xchg
data16
push
fcompl
mov
aaa
pop
fs
cmpsb
cmp
das
cmp
fs
fmulp
in
in
int
jae
xor
out
cmp
dec
adc
push
inc
fnstenv
lods
jg
in
cmp
movsb
repnz
jl
sub
ss
inc
xchg
mov
test
cld
ljmp
bound
arpl
sbb
adc
lock
sbb
cmpsl
mov
adc
aas
mov
push
dec
je
adc
fnstsw
sbb
cmc
mov
xorb
or
jae
push
stos
inc
fcmovne
sbbl
into
jecxz
jp
cmpsl
pusha
push
inc
cld
jmp
imul
in
push
gs
and
shr
cmp
or
lahf
outsl
aaa
aam
cmc
dec
xor
push
cli
lcall
ljmp
shll
insl
cmpsb
push
lock
imul
leave
xchg
pcmpgtw
cmc
fiadds
fmuls
out
in
inc
sbb
ljmp
inc
loopne
xchg
adc
test
rol
mov
loopne
daa
bound
inc
mov
push
out
outsb
xchg
or
jno
cmpsb
aam
std
jge
test
jbe
rcll
add
jmp
mov
push
mov
xor
mov
xchg
pop
push
rcrb
xchg
fnstenv
mov
xorl
in
push
cld
xchg
in
lea
loope
aad
mov
dec
out
lock
cmp
std
push
jp
jns
test
and
aas
cmp
out
insb
add
cmp
and
das
enter
cmp
push
jmp
push
xor
cmp
dec
icebp
xchg
or
insl
fstl
jb
popa
outsl
insl
test
cmpsb
into
movsb
outsl
xchg
bound
sbb
inc
mov
or
adc
mov
pop
jns
mov
out
cwtl
sbbb
icebp
or
xorb
mov
int
rcrl
xor
mov
jge
stc
rorl
pop
add
xchg
aas
loopne
aas
std
add
test
xchg
in
sub
inc
xchg
fistpl
test
xor
or
add
lock
stc
rcrb
and
jge
mov
xchg
ficompl
sub
int3
push
or
dec
mov
mov
in
stc
sbbl
pop
std
decb
mov
movsb
adc
test
iret
push
push
xchg
or
lcall
mov
sti
fstps
push
arpl
insb
lea
fisubrs
insb
mov
into
jge
jo
ret
jno
push
xchg
popf
mov
pop
jge
addr16
or
cmp
add
test
sbb
cmp
push
clc
xchg
push
rorb
jg
cli
xchg
push
mov
loopne
movsb
adc
xor
push
and
sarb
mov
inc
sti
cli
jmp
push
jl
cmp
dec
jns
xor
jg
shll
gs
das
faddp
lods
imul
and
xor
push
mov
xchg
mov
mov
push
jno
repnz
pushf
hlt
aaa
inc
sbb
xchg
mov
fs
sbb
or
and
xchg
aad
nop
jg
js
xor
adc
call
roll
lea
jg
lds
dec
mov
call
out
insl
pop
xchg
push
sbb
mov
jl
movsb
sbb
sub
mov
js
adc
jno
int
or
mov
fdivs
mov
xchg
push
loopne
outsb
ret
adc
sbb
push
pop
arpl
loopne
mov
cmp
cld
xor
aad
pusha
push
shlb
daa
test
in
pop
lea
rolb
add
lock
mov
clc
push
add
cmp
int3
jae
fisttps
push
je
jle
fwait
movsl
dec
dec
ss
sub
xor
xchg
mov
fldlg2
fwait
lret
aad
adc
addr16
mov
pop
jmp
ret
daa
je
jno
clc
dec
mov
xlat
ret
inc
out
and
in
divb
inc
addr16
loopne
stos
insl
inc
adc
push
shll
aas
xorb
mov
rorb
xchg
in
stos
js
clc
out
mov
jge
inc
mov
ret
addl
lcall
or
jmp
into
out
cli
lods
orl
jmp
add
pop
pop
ds
push
sti
adc
data16
into
xchg
xor
pop
dec
sub
nop
xor
fs
mov
inc
mov
scas
test
inc
cmp
into
mov
inc
pop
jo
stos
data16
push
sub
adc
and
imul
xor
jbe
inc
mov
mov
enter
add
dec
mov
call
inc
sarl
cmpsb
flds
jl
test
sub
sbb
rcrl
dec
ljmp
jb
das
mov
les
push
pop
mov
pop
je
sub
mov
mov
adc
mov
gs
loope
push
push
aaa
es
pushf
popf
in
mov
cmp
lcall
lret
lret
xchg
mov
hlt
cmp
mov
lcall
and
faddl
imul
or
jae
sahf
lcall
cmpsl
test
mov
call
sarb
aad
int
shrl
sarb
or
xor
adcl
outsl
cmp
xchg
mov
enter
jnp
or
iret
enter
negl
pop
gs
into
pop
popf
fnstenv
xchg
push
xor
repnz
sbb
cltd
push
dec
mov
out
lahf
push
sbb
inc
add
push
je
inc
fstl
pop
out
xor
ret
pop
cmp
ret
fdivrs
fcmovb
cmpsl
mov
dec
ss
cmp
sti
fidivrs
shlb
mov
ds
inc
pop
stos
outsb
xchg
loope
pop
push
dec
sub
dec
dec
add
mov
mov
pop
imul
stc
or
ret
pop
enter
and
adc
cli
inc
pushf
pop
push
push
xor
shl
mov
or
cmp
lcall
add
es
xor
es
mov
lods
mov
cmpsl
cmp
dec
and
xchg
inc
mov
dec
cmp
in
mov
sub
daa
mov
stos
pushf
xchg
fisubs
lret
aam
aas
pop
cmp
testb
push
mov
mov
fnsave
cmp
fisttps
jbe
dec
sbb
and
lods
add
and
add
mov
add
or
or
ret
pop
mov
sub
stc
scas
sub
mov
fsubrp
fsubs
mov
mov
enter
pushf
inc
add
outsl
adc
and
mov
aad
mov
pop
mov
test
mov
mov
dec
jnp
in
xchg
insl
add
je
ret
mov
mov
insb
daa
stos
in
sbb
pop
push
cmp
leave
sub
sbb
rol
fstps
add
jmp
leave
daa
std
clc
push
mov
adc
fwait
inc
insl
mov
mov
dec
mov
mov
rolb
xchg
das
or
lcall
adc
mov
xor
mov
pop
xor
ficompl
ret
loop
std
or
fistl
sbb
or
add
ljmp
push
cld
pop
push
sub
jae
push
sub
mov
out
daa
jb,pn
sahf
test
sub
sbb
out
sub
jl
outsb
mov
xor
lcall
les
adc
push
pop
mov
mov
pop
mov
enter
jne
xor
or
xchg
out
xchg
pop
push
mov
add
loopne
add
mov
pop
test
xchg
insb
mov
push
lods
cld
popf
jecxz
jmp
outsl
shll
mov
cld
mov
lds
insb
pop
das
test
sti
sub
clc
dec
mov
rorl
in
lea
lretw
xchg
inc
dec
sbb
dec
test
repz
lret
dec
mov
xchg
mov
pusha
push
dec
cmp
xor
roll
js
lock
sarb
adc
sbb
or
mov
xor
mov
mov
xlat
ds
sti
jge
sub
ret
jp
adc
lret
rorl
mov
outsl
jnp
call
sbb
mov
jae
dec
or
test
cmp
fistl
inc
cmp
test
mov
xchg
cmp
mov
int3
xchg
iret
ret
popa
pop
stos
push
inc
inc
push
mov
cltd
fists
es
adc
int
out
dec
cld
gs
pop
dec
xor
xor
movsl
inc
aam
lock
sbb
lock
mov
dec
adc
loopne
cmc
nop
stos
ss
jae
push
adc
or
and
dec
adc
add
loope
xchg
je
xlat
pop
xchg
mov
pop
inc
mov
pop
xchg
sub
adc
scas
adc
adc
int3
les
test
lret
outsb
xor
or
sub
push
fwait
aas
gs
jbe
jae
push
enter
mov
mov
lahf
push
sbb
push
push
insb
pop
dec
push
jnp
scas
sub
mov
sub
arpl
xor
push
push
xchg
enter
inc
xchg
jnp
test
outsl
es
inc
push
mov
xor
aaa
push
fdivr
mov
pop
adc
cmp
xchg
stos
mov
mov
pop
dec
jmp
jl
mov
daa
les
mov
enter
aas
sub
scas
sub
in
cwtl
cltd
rorl
lea
dec
out
lea
push
int
sbb
rol
cmpsl
jne
daa
frstor
pop
inc
mov
mov
pop
cmp
or
xor
mov
fstl
mov
push
xbegin
xor
aad
adc
mov
and
test
fnstenv
in
f2xm1
push
mov
cs
push
in
jmp
and
mov
jg
subl
outsl
icebp
andl
lcall
pop
leave
cs
test
sub
jmp
mov
stos
mov
adcb
jecxz
idiv
xor
out
aas
push
adc
fs
test
sub
lahf
repz
lcall
adc
add
mov
rclb
aaa
mov
test
adc
jb
int3
subb
cmc
stc
add
stos
or
inc
or
rcll
mov
xlat
dec
lds
lahf
cltd
aad
loope
mov
popa
push
sbb
insl
jns
pop
fnstcw
sub
cmp
mov
sbb
and
and
int3
loop
adc
jbe
add
stos
test
mov
scas
fcompl
into
mov
xchg
inc
add
push
fwait
cmp
aas
jp
je
inc
push
repnz
pop
sti
jns
lret
or
cmp
int
insb
insl
adc
cmp
sbb
adc
and
es
ja
into
sbb
inc
in
inc
rolb
xchg
pop
adc
scas
mov
add
mov
dec
es
or
outsb
daa
iret
mov
je
xchg
scas
repnz
push
add
sbb
popf
and
push
lret
mov
push
cltd
adc
lock
cld
inc
pop
icebp
daa
mov
jle
and
fiadds
mov
mov
in
mov
gs
aam
repnz
mov
pop
mov
push
in
jns
add
out
xor
ret
mov
add
mov
mov
mov
popf
cmp
push
nop
mov
out
test
sbb
xor
jge
mov
jo
sbb
and
lods
orb
movsl
sub
mov
inc
xchg
test
std
ret
daa
mov
pop
jne
dec
inc
mov
hlt
scas
out
pop
repnz
jecxz
mov
iret
js
pop
divl
mov
into
pop
cwtl
jg
mov
loopne
hlt
jmp
add
fsubl
div
mov
pop
sub
sbb
in
inc
mov
sub
mov
fildl
xchg
push
in
dec
call
enter
into
loopne
fwait
imul
testl
outsb
jae
rcrb
sub
or
dec
icebp
inc
inc
inc
push
jl
loop
and
cwtl
inc
into
inc
sub
leave
cld
cmpsb
lahf
sbb
or
inc
xchg
push
push
lods
je
add
nop
xor
mov
cmp
int
fisttpl
jns
adc
cld
js
imul
sarb
jmp
lahf
std
sub
dec
icebp
lret
hlt
xor
push
lock
jmp
icebp
sub
dec
test
faddl
insb
call
or
fsubs
add
lahf
add
inc
loope
mov
scas
jge
xor
lea
mov
xchg
pop
cmp
je
aad
ret
dec
cli
imul
mov
inc
fildl
dec
cmp
pop
das
pop
das
imul
lcall
pop
mov
ds
aaa
das
scas
rcr
mov
xchg
scas
scas
dec
mov
push
int3
stos
mov
pop
pop
xlat
adc
movsb
test
pop
xchg
xor
nop
leave
jge
out
jns
fildll
fisubrs
shlb
imul
push
arpl
sub
daa
xchg
xchg
test
inc
pop
imul
xchg
or
xor
mov
ljmp
movsl
enter
insl
insl
pop
stos
out
call
or
jl
ss
adc
push
mov
pop
in
imul
pop
loop
push
pop
sub
xor
fmul
mov
out
les
lods
pop
mov
xchg
sahf
cmp
arpl
push
push
adc
xor
inc
mov
orl
xchg
mov
mov
jno
and
mov
imul
push
ja
inc
and
mov
mov
or
sbb
imul
and
leave
mov
ret
jo
push
loope
loopne
mov
mov
and
dec
sbb
mov
xchg
fcmovu
jne
out
iret
jecxz
pop
mov
cld
sub
push
aam
shll
stos
lds
movsl
leave
mov
cmp
fwait
xor
xor
mov
mov
jo
ja
push
fisubl
lret
pop
arpl
dec
insb
mov
sub
jmp
subl
js
gs
xlat
test
loope
int3
xchg
insl
fisubs
sbb
xor
bound
inc
cmpsb
xchg
adc
mov
ret
sbb
lahf
arpl
cmp
mov
jle
ret
or
sbb
mov
test
mov
inc
pop
sahf
pop
fistl
inc
icebp
aad
leave
xchg
cld
mov
pop
xor
jle
cwtl
sbb
mov
ret
dec
add
movsl
or
ja
xchg
add
lret
sahf
add
out
inc
jnp
lea
fwait
jb
ret
roll
inc
inc
fdivl
pop
mov
cmp
push
and
repz
sub
mov
movsl
pop
insb
lods
xchg
adcb
loopne
clc
mov
mov
mov
test
mov
jae
xor
insb
xchg
or
ds
loopne
pusha
enter
jl
cmp
dec
push
inc
and
sub
cltd
cmpsl
pop
movsl
inc
push
lret
mov
add
popa
push
or
pop
fildl
add
mov
xlat
push
bound
inc
inc
xor
push
cwtl
adc
and
loopne
or
adc
add
loopne
sub
jge
sbb
lret
insb
js
fwait
pop
popf
outsb
adc
adc
insb
mov
nop
mov
adc
lret
popf
ret
pop
shll
lcall
inc
cmp
or
rol
adc
dec
inc
ds
xor
mov
bound
in
xchg
or
jb
sbb
xchg
lret
movsb
dec
pushl
adcb
mov
xchg
mov
cli
mov
mov
in
fcmovu
add
push
adcl
jg
jl
xor
les
push
gs
aaa
aaa
mul
fstpt
lret
sbb
lcall
rorl
mov
xchg
pop
les
jo
xor
sub
dec
dec
xchg
jl
xor
mov
mov
push
dec
add
xor
mov
sbb
ss
cmp
addb
jmp
pop
jne
jns
testl
push
cmc
scas
inc
movsb
sbb
mov
mov
sti
lds
gs
add
dec
add
cmpl
sub
mov
jae
fbld
cmp
and
lea
iret
fildll
std
repnz
sbb
rorb
xor
jge,pt
push
mov
les
jns
aad
lret
add
jg
daa
jo
out
pusha
das
xor
dec
popf
popa
adc
inc
pushf
jg
in
inc
inc
sbb
xchg
rclb
cld
shll
sets
or
pop
sahf
or
pop
movaps
inc
push
mov
pop
xchg
mov
pop
inc
iret
cmp
cs
dec
mov
outsl
jno
or
int
jnp
and
xchg
pop
mov
orb
pop
insb
ret
pop
sub
push
inc
loop
sbb
scas
ret
dec
push
pop
gs
dec
inc
insl
loope
jns
imul
rol
xor
fildl
jnp
and
enter
jg
fisttpll
adc
lret
inc
les
sti
push
push
outsl
lcall
mov
mov
jb
xchg
or
mov
dec
dec
adc
int3
les
sub
jle
xchg
mov
mov
bound
lock
in
and
nop
lcall
mov
push
test
sbb
outsl
into
and
push
push
rcrb
push
clc
and
lock
cmp
in
mov
sti
mov
adc
inc
add
cmc
mov
cld
sbbb
sbb
fs
icebp
test
add
jno
pop
mov
push
mov
and
xor
jg
sub
call
mov
pop
adc
loope
push
xor
mov
test
aaa
out
movsl
cli
add
int3
stos
imulb
mov
mov
sbb
jb
in
inc
dec
add
je
out
dec
adc
rcrb
scas
repz
sbb
fistl
bound
xchg
mov
cmpsb
dec
add
jp
fadds
out
loopne
cmp
cltd
ja
out
xor
mov
push
fstl
mov
call
jp
sbb
jge
ret
cwtl
xor
pusha
sbb
sbb
inc
jle
mov
lock
jp
lahf
mov
sub
lahf
pop
sti
cmpsl
xchg
cs
push
fcomi
push
push
adc
rorb
stos
cmp
filds
loope
inc
mov
inc
inc
adc
xchg
gs
or
mov
in
mov
scas
call
pop
ja
nop
sarb
or
je
inc
dec
dec
pop
dec
fsubrl
gs
js
rolb
xchg
dec
call
pop
mov
dec
sub
inc
repz
out
addl
bound
shrb
or
mov
xchg
jnp
ja
ficompl
out
shll
pusha
pop
lcall
pop
dec
push
insl
jne
and
adc
scas
and
lcall
inc
fdivr
sbb
mov
scas
and
or
xchg
mov
xchg
dec
pop
cld
clc
xchg
mov
loope
sahf
pop
outsb
mov
imul
lock
iret
aas
mov
inc
sti
out
filds
dec
mov
push
sbb
push
inc
scas
jne
ja
inc
sahf
mov
xor
push
pop
outsb
mov
dec
mov
icebp
mov
add
shl
popa
push
inc
cmp
push
test
repz
ret
mov
push
mov
or
jecxz
dec
js
sti
dec
cmp
or
sahf
popa
and
xor
or
repz
bound
cmp
mov
jl
inc
dec
aaa
xor
in
pop
push
imul
pop
cmp
push
push
lds
call
and
dec
pushfw
fbstp
jnp
je
imul
cs
sub
jmp
xchg
in
mov
fcompl
push
in
push
push
js
les
enter
or
adc
and
enter
push
and
cltd
sbb
test
repnz
data16
repnz
es
insb
xchg
jle
pushl
cli
dec
ljmp
cmp
inc
xor
pop
int
hlt
sbb
dec
xchg
sub
fisttps
fs
add
inc
stos
repz
pop
mov
adc
or
dec
aaa
aas
jl
cmpsl
inc
jp
pop
adc
sub
inc
test
jbe
imul
xchg
or
cwtl
push
mov
mov
in
addr16
mov
dec
je
xchg
stc
or
aas
test
ja
mov
jb
sub
imulb
mov
out
push
pop
jno
movsb
test
xchg
dec
add
add
out
lods
test
cwtl
xchg
xchg
or
cld
push
xor
push
enter
hlt
mov
fdivs
arpl
or
mov
andb
sbb
rcrb
push
push
inc
nop
sub
sub
ret
in
bound
cmp
pop
pop
jns
shrb
sub
and
iret
iret
fcompl
data16
and
fwait
adc
lahf
jnp
push
ds
sbb
call
push
aam
dec
jo
ret
shll
jne
mov
jmp
lahf
cmp
sbb
cmp
add
out
test
pop
sbb
push
jae
fadd
xchg
xor
les
xor
js
xchg
jns
loopne
lret
adc
or
sbb
ret
rcrb
fisttps
repnz
cmpsb
mov
js
pop
xor
stc
and
fstps
fmuls
lcall
mov
je
xchg
outsb
das
aaa
jmp
mov
rorl
mov
shrl
test
mov
cmpsl
mov
out
mov
ljmp
fidivrl
les
enter
leave
mov
sbb
jge
pop
sbb
xchg
into
mov
pop
nop
das
push
hlt
push
sub
pop
xor
pop
test
aaa
in
push
push
sbb
ljmp
or
sbb
js
or
and
add
mov
xor
push
imul
lret
scas
lea
ss
pop
loop
call
hlt
mov
test
ljmp
ljmp
lahf
aam
mov
lods
push
aad
inc
mov
mov
jns
imul
dec
into
sarb
jecxz
dec
cmp
repz
decl
pushf
mov
xchg
inc
sbb
xor
fwait
stos
testb
lret
xchg
fadds
or
cmp
iret
jne
test
push
lahf
addl
pop
add
pop
test
xchg
pop
lods
cmc
dec
push
movsb
jo
push
push
adc
xor
loope
lods
sbb
inc
jecxz
imul
push
fistpl
hlt
or
loop
add
dec
les
cmpl
push
movsl
sub
in
mov
ret
mov
mov
add
cmpsb
loop
pop
aad
mov
outsl
mov
lods
sub
xchg
js
cltd
fdivrp
mov
outsl
lds
stos
test
sub
je
push
frstor
inc
mov
push
fidivrs
not
pop
push
mov
pop
lcall
sarl
loop
mov
mov
std
lret
push
fstl
pop
lock
cmpsb
jl
mov
repnz
in
inc
jle
inc
lods
stos
repz
imul
fsubs
int
pop
push
adc
sub
lcall
outsb
push
adcl
push
ja
adc
xor
mov
out
inc
out
rclb
push
popf
xchg
gs
cmpsb
xor
cmpsl
inc
jl
mov
inc
test
inc
add
jns
addr16
mov
sub
mov
ss
sti
es
hlt
jg
out
lcall
mov
push
xchg
ss
jp
in
pop
popa
mov
lock
popa
dec
aas
and
lret
add
fmull
or
test
dec
loope
adc
push
into
push
repz
clc
js
dec
pop
addl
cmp
sbb
pop
inc
xor
mov
in
outsl
pop
mov
gs
aas
xchg
scas
inc
mov
stos
push
xchg
insl
lods
mov
loopne
stc
mov
dec
push
adc
jb
inc
cmpsb
movsl
push
push
inc
inc
in
fwait
mov
in
and
xor
jns
cmp
pop
add
mov
jg
fs
mov
add
add
adc
adc
out
add
jmp
cli
test
dec
hlt
iret
jns
xchg
movsl
adc
ss
cmp
rcll
cmp
adc
jmp
popa
stos
daa
arpl
outsl
xchg
mov
std
in
arpl
lods
iret
dec
iret
xor
add
push
cmp
sbb
in
inc
inc
sub
push
movsb
pop
insb
lcall
rcr
daa
jbe
ljmp
cs
shr
xor
mov
and
ficompl
inc
sbb
rorb
aaa
dec
arpl
loopne
test
or
push
fisubs
cltd
addr16
stos
cmp
cmp
pop
mov
addr16
filds
cmp
push
ljmp
dec
shll
ret
or
push
jno
and
push
test
sbb
lret
iret
popa
dec
mov
sub
call
lock
jmp
aas
adc
jae
push
or
data16
rclb
aas
movsl
mov
cmp
xchg
repz
pop
jp
leave
leave
in
mov
daa
push
sbb
rol
mov
test
sub
mov
outsb
mov
xor
les
scas
pop
hlt
ljmp
push
pop
mov
xchg
and
or
les
xchg
sub
pushf
or
jecxz
sbb
les
std
adc
lods
and
pop
scas
das
stos
or
inc
test
pusha
lret
ficoms
mov
jmp
pop
mov
ss
pop
or
fadds
push
sarl
dec
sbb
pop
scas
push
xchg
test
inc
mov
add
mov
jecxz
mov
lds
mov
fs
lahf
jne
push
pusha
leave
arpl
add
roll
xorb
push
loope
xchg
jge
pop
dec
jecxz
mov
mov
rcrb
imul
js
daa
out
pop
xchg
popf
into
or
push
cwtl
push
orb
mov
mov
stc
daa
xchg
insl
js
icebp
imul
fs
loop
inc
dec
inc
in
fnstenv
mov
pop
push
or
sbb
ds
fsub
std
rclb
pop
aam
std
in
jp
fsubr
lods
push
scas
in
popf
movl
mov
sbbl
rclb
dec
and
xchg
in
xor
pop
cmpsb
sahf
cmp
in
mov
je
xchg
ja
jae
jnp
inc
dec
int
scas
scas
shlb
ljmp
sub
pop
sbb
mov
cmp
or
loopne
lcall
jae
dec
scas
out
add
into
adc
sbb
mov
push
mov
and
add
divb
jne
cwtl
pushf
mov
sub
cmpsb
sub
and
repnz
sbb
mov
mov
sub
xchg
data16
jb
in
stos
inc
or
hlt
mov
lds
inc
xor
enter
mov
dec
lcall
popf
js
adc
gs
cmpsl
cwtl
push
sar
std
and
rclb
cld
imul
inc
jle
mov
xchg
in
clc
ds
lret
idivb
aam
mov
pop
and
add
cmp
jle
sub
add
pop
dec
adc
xchg
xchg
mov
jge
and
cmp
or
sub
pop
or
xor
mov
fs
and
xor
push
add
push
jge
mov
movsl
aas
cld
jp
lods
or
jne
sbb
outsl
and
dec
cmp
js
pop
es
fistpll
xor
xor
aam
arpl
ret
shrb
repz
fnsave
xchg
mov
test
nop
xchg
cmpsb
push
xorl
cwtl
jle
or
ds
adc
xor
insb
adc
std
ljmp
sub
in
cld
aam
movsl
hlt
fsts
les
push
cmpsb
mov
rcr
sbb
xor
pop
pop
cmp
xor
mov
xchg
adc
or
fstpt
jae
insl
movsl
ret
test
rclb
in
call
cmp
push
pop
xchg
push
xchg
aad
sub
nop
cltd
adc
sub
mov
mov
jbe
dec
popf
out
mov
aas
test
sub
push
arpl
sbb
inc
mov
mov
sahf
cmpl
sbb
cs
push
xchg
cld
popf
xlat
add
test
pop
push
out
inc
and
push
lea
push
push
sub
loope
test
mov
es
jmp
pop
jnp
mov
cmpb
mov
mov
orb
push
clc
sbb
jmp
push
ret
fwait
mov
cmpsl
lds
cmpsb
lods
outsl
adc
fdiv
lret
sub
pop
lret
fisubs
add
ljmp
add
icebp
add
jo
mov
mov
arpl
push
repz
pop
sub
cmp
mov
movb
mov
loop
adc
xbegin
sahf
push
push
or
cmp
testb
rorl
and
pop
ss
sub
mov
inc
inc
aas
mov
push
and
jmp
icebp
inc
pop
push
in
xchg
int
cs
adc
sbb
scas
add
xchg
mov
lcall
inc
xor
std
push
ret
xchg
adc
aaa
test
pop
ja
mov
sub
pop
fyl2xp1
push
xchg
aam
pop
inc
mov
dec
xchg
mov
ret
inc
dec
nop
push
pop
fldl
inc
xchg
xor
orl
push
ds
xor
loop
movsb
pop
add
pop
fldenv
push
or
cmpsl
call
fsubs
xchg
xor
fsubs
dec
int
pop
imulb
mov
inc
int
pusha
in
pop
inc
insl
lods
pop
fcmovu
hlt
xor
sub
inc
sbb
cmp
andb
mov
jb
pop
xchg
add
jno
lret
shrl
repz
push
dec
dec
fstpl
sub
shlb
test
fidivrl
push
xchg
or
int
and
mov
mov
cmp
mov
add
fwait
stos
and
fdivr
lcall
movsl
jnp
ficompl
xchg
ljmp
adc
inc
jne
jmp
lods
cmpsl
in
repnz
aaa
add
mov
incb
icebp
iret
pop
fcmove
leave
xor
stos
jo
leave
mov
mov
pop
rcrb
loop
fcmovu
cmp
and
xlat
hlt
or
xchg
xchg
aad
push
mov
lcall
call
mov
mov
gs
pop
aad
pop
add
lock
dec
inc
jb
add
cmp
or
or
mov
outsb
mov
pop
xor
adc
pop
cmp
out
stc
mov
loop
jp
mov
and
inc
mov
xchg
mov
fs
pop
scas
push
inc
xor
pop
and
inc
cmc
out
pop
pop
ret
sbb
jmp
rcrb
adc
leave
sub
js
push
mov
jp
mov
jmp
test
pop
pop
dec
add
sti
arpl
cmc
mov
jg,pt
lods
jecxz
out
mov
push
test
jmp
sbb
stos
push
inc
sahf
jbe
sub
sub
mov
cmp
sub
mov
mov
sub
push
ja
mov
in
cmp
arpl
fcompl
mov
popf
mov
sbb
mov
cmp
mov
push
ret
pop
pop
call
in
push
enter
and
xchg
push
fxch
rcrl
addr16
and
shlb
and
shll
repnz
xor
aas
and
fcomps
push
shll
test
les
repnz
adcl
lahf
xchg
imul
xor
into
rolb
cwtl
and
inc
or
mov
add
repnz
jns
ljmp
loope
inc
inc
rolb
das
pop
in
test
add
or
test
xchg
pop
nop
jns
call
jl
dec
dec
adc
insl
cmp
mov
mov
in
and
rcrl
inc
shrb
add
ss
xchg
stc
pushf
in
mov
mov
dec
push
pop
push
sbb
mov
mov
cmpsl
call
add
rolb
aam
pop
rol
pop
aaa
testb
dec
ja
insb
into
xchg
sbb
pushf
pop
aaa
jnp
xorl
inc
and
fstl
dec
sbb
inc
jb
mov
sbb
xor
sbb
lcall
filds
cmp
jecxz
sbb
mov
adc
adc
jbe
fildll
xchg
xchg
push
sub
test
adc
inc
aaa
fidivrl
ja
jge
je
and
arpl
inc
inc
cmp
pushf
in
scas
rcrl
xor
xorb
sbb
lcall
or
jge
add
xor
jp
push
pop
ret
ljmp
xchg
dec
loope
ja
mov
cmpsl
dec
aam
jp
mov
xchg
sbb
aam
subl
jl
popa
bound
pop
out
int3
mov
test
push
lods
inc
sub
pmullw
je
iret
mov
punpckhwd
stc
jp
mov
adc
and
movsb
sbb
rcr
xchg
mov
cmp
mov
dec
fnstcw
jae
adc
and
out
jmp
mov
jle
xchg
mov
xor
mov
mov
int
adc
inc
and
pusha
inc
lret
push
test
and
jge
jmp
inc
outsl
pop
lcall
mov
mov
fldcw
mov
lods
daa
inc
sub
imul
shr
add
rcr
dec
in
jle
in
lret
cmpsb
popf
push
ja
jo
iret
out
rorb
inc
dec
stos
shlb
test
inc
jmp
daa
xchg
imul
push
inc
cmp
fdivs
mov
and
test
stos
push
inc
call
cmp
fsubs
in
icebp
sbb
add
pop
xor
shll
daa
jb
fstpt
cmp
jo
jge
push
mov
mov
mov
cmpsl
data16
fwait
mov
ds
lods
jmp
push
int
dec
xchg
pop
jb
aad
pop
push
or
or
mov
test
loop
push
sarl
add
or
je
mov
push
dec
xorl
mov
push
mov
pop
subl
xchg
shll
inc
in
loopne
bound
mov
out
scas
jl
cmpsb
and
aas
lods
mov
sub
adc
incl
fmul
lods
into
sbb
push
or
pop
bound
mov
data16
push
lcall
ja
jg
addr16
jmp
cmp
enter
fxch
jge
mov
adc
sbbb
dec
rolb
std
push
shlb
js
push
das
push
popa
sbb
dec
rclb
sahf
inc
jg
mov
xor
test
hlt
xor
clc
gs
mov
and
aad
and
jle
rorl
repz
pop
jmp
das
pop
jne
jmp
lods
jecxz
sub
cmpsb
mov
and
adc
dec
push
mov
xchg
fcoms
xor
fdivs
jae
in
daa
sarl
in
imul
loopne
cmpw
dec
pop
popa
notb
push
in
inc
pop
push
jns
push
bound
adcl
sub
filds
lret
pop
xchg
push
add
jge
mov
dec
mov
xchg
inc
jecxz
pop
pop
stc
outsl
xor
xchg
lret
aas
movsl
shlb
pop
addl
shll
pop
push
test
or
iret
mov
add
push
and
sbb
dec
lea
xchg
inc
jp
dec
fsubrl
mov
jmp
xor
sbb
outsl
xor
out
mov
mov
test
cli
sarb
fldenv
lahf
or
or
mov
sbb
out
jp
or
shrl
loopne
aaa
add
ds
ja
xor
arpl
sbb
dec
jp
push
xchg
inc
pop
shrb
add
iret
fiadds
sbb
xchg
in
pop
xchg
sti
adc
imul
push
in
adc
popa
jbe
push
sub
sarl
inc
fcmovnbe
mov
pop
adc
ret
movsb
push
imul
jno
sub
lcall
cmp
pop
lea
push
in
clc
mov
popa
mov
mov
movsb
movsb
fwait
or
xchg
sub
bnd
ss
es
jg
lock
cmpsl
jns
xor
aam
cltd
push
xchg
out
and
adc
dec
mov
pushf
jae
jp
andl
or
test
imul
insl
mov
fcompl
lock
mov
fmuls
jo
out
jle
xbegin
jmp
subl
fwait
pop
xchg
scas
jnp
ret
dec
sbb
les
sub
orl
pop
fstpt
push
je
out
dec
sbbl
mov
mov
mov
sub
mov
mov
add
ljmp
aaa
mov
inc
mov
xor
jb
popa
std
inc
enter
lds
xchg
mul
jbe
mov
xchg
jg
fcompl
ret
push
je
rcrb
pop
or
mov
addb
stos
sub
mov
das
inc
inc
and
imul
dec
xchg
out
add
inc
imul
xlat
mov
lcall
jbe
mov
sbb
fldl
push
and
dec
mov
sub
shl
pop
imul
data16
mov
insl
and
pushf
push
in
aaa
or
pop
imul
cwtl
add
lret
cmc
adc
pop
mov
je
das
in
inc
aad
and
add
pop
addr16
je
fstpl
add
movsb
loope
scas
sbb
xchg
aad
push
cmpsb
and
ljmp
cmc
and
jge
and
pushf
cmp
lret
movsb
pop
ljmp
pop
and
xchg
ss
xchg
or
aas
insl
outsb
jle
mov
or
and
inc
add
add
add
sbb
cltd
mov
cmp
or
rcrb
cmp
ljmp
cmp
jmp
pushf
andl
popl
test
and
mov
or
repz
inc
call
imul
es
imul
ret
dec
lret
in
inc
cwtl
test
jmp
aad
push
daa
insl
xor
scas
sub
sub
add
jg
mov
cmp
mov
mov
scas
mov
push
jecxz
clc
fidivs
mov
pushl
lods
fldcw
out
dec
jmp
mov
scas
arpl
cltd
mov
notb
jne
xchg
cmp
xchg
sbb
mov
out
push
dec
lds
pop
arpl
or
mov
cwtl
and
or
sbb
jp
sbb
mov
into
push
pop
into
adc
sahf
scas
push
movsl
inc
mov
iret
mov
out
cmpsl
in
lret
fsts
out
sub
push
mov
stos
cs
xchg
jl
pushl
push
mov
insl
mov
mov
or
mov
and
scas
insl
sub
pushf
push
pusha
cli
push
sti
or
fcompl
stos
lods
rcl
mov
imul
sub
adc
rcl
xor
mov
and
icebp
lret
jne
push
fcmove
inc
mov
fs
xor
mov
add
mov
ret
insb
sbb
pushf
ret
shrl
std
nop
pop
jnp
xchg
xor
inc
push
fsubr
ret
pop
push
sbbl
add
icebp
push
pop
cld
shrb
pop
fldl
or
xchg
mov
and
lds
lods
or
fs
dec
scas
or
dec
lret
sti
in
leave
mov
xor
xchg
push
gs
dec
out
xor
sahf
add
in
and
nop
stos
les
call
mov
xchg
lock
push
jae
movsl
jecxz
mov
push
addr16
clc
mov
and
js
inc
and
test
cmp
test
into
sti
xchg
cli
or
in
or
jb
and
sbbl
sub
dec
jb
and
jg
jno
xor
sahf
push
xor
movsb
push
and
cld
shrb
pop
jle
jae
daa
aas
push
jb
int
sbb
cs
push
mov
scas
xchg
xor
jbe
les
mov
sbb
ror
jp
push
mov
fmuls
dec
and
hlt
jns
cmpb
aaa
shll
pop
pop
mov
sbb
jge
xchg
xchg
repnz
jb
mov
or
jmp
test
dec
sbbl
push
shl
popf
ss
push
test
sub
mov
jo
fsub
jecxz
out
jns
aad
aam
inc
fcomip
xchg
xor
rsqrtps
inc
pop
cmp
arpl
push
outsl
dec
mov
int3
int3
dec
div
pop
fldcw
popf
movsl
jne
mov
inc
scas
pop
dec
xchg
out
push
xchg
in
adc
push
mov
xor
in
js
sub
inc
xchg
movsl
ficomps
cli
ja
imul
add
shll
sbb
mov
mov
test
lods
in
test
lods
str
loopne
sub
andl
inc
adc
aas
pop
cmpsw
cmpsb
sub
sub
add
inc
test
in
mov
jo
cli
mov
adc
test
int
push
shlb
mov
mov
mov
sub
pusha
lock
push
mov
xor
sub
mov
cwtl
fidivrs
es
movsb
lcall
dec
fadd
cmp
sub
fisttpll
mov
mov
jmp
mov
xchg
jno
xchg
cmpsb
mov
popf
aam
sti
cld
enter
dec
stc
fsubr
jno
out
xchg
fadd
leave
movsl
sub
xchg
xorl
adc
pop
aam
sub
pop
xorl
enter
and
in
adc
jno
scas
iret
push
push
cmp
mov
aam
repz
add
jg
aas
mov
jp
jnp
mov
rol
jb
pop
xchg
mov
stos
mov
test
outsl
cld
gs
es
jo
test
aam
push
ret
insl
das
popf
cmpsb
mov
push
insl
sub
ljmp
test
sub
pusha
pop
arpl
inc
mov
xor
cmp
pusha
ja
mov
insl
xchg
pusha
outsl
shl
pop
loope
ja
aas
jns
mov
jno
adc
adc
push
cmc
mov
movsb
sbb
jb
xor
xor
cmp
adc
divb
pop
xor
or
data16
stos
ret
out
sbb
mov
push
scas
fiadds
sbb
lods
arpl
mov
mov
dec
or
fisubrl
push
pop
pop
ret
lret
fisttpl
mov
mov
sbb
fildll
mov
pushf
ja
jge
fbld
notb
cmp
sub
movsb
adc
xor
je
push
xchg
mov
jmp
cmpsl
inc
xchg
cli
enter
dec
xchg
mov
or
ret
mov
mov
shll
popa
outsl
inc
cmp
xlat
movsb
gs
add
icebp
lds
stos
sub
fwait
push
aaa
jno
div
and
add
and
jne
int3
cmp
ja
xchg
call
fwait
pop
jnp
mov
mov
xlat
sub
mov
stos
test
fidivrl
cmp
shll
push
pop
mov
mov
xchg
xchg
xchg
mov
fs
cmp
scas
add
and
dec
cmpsb
push
lock
ss
push
call
push
sbbl
dec
insb
outsl
inc
and
or
sbb
addr16
leave
inc
inc
xor
clc
ss
cltd
in
das
pop
enter
adc
ret
out
lahf
mov
inc
and
sub
xchg
scas
fcoml
add
sarb
add
rorl
mov
sub
push
aas
inc
cltd
cmp
xchg
int3
lods
mov
push
jb
ss
cmp
lods
mov
sahf
ds
lret
pop
jp
xor
stos
gs
adc
jp
pop
jle
lcall
ja
inc
inc
fcompl
or
leave
push
push
lds
popf
fnsave
fcmovnbe
push
jecxz
inc
push
aam
xchg
xor
jecxz
lret
lds
sbb
insb
or
xor
test
or
sarl
aad
jecxz
add
pushf
in
push
ja
xchg
mov
lds
movsl
and
ds
cmpsl
shll
fdivrl
or
fdivs
sub
add
pop
test
shlb
mov
mov
popf
mov
imul
jns
xor
aad
xor
add
inc
xchg
cmpsb
sub
jle
icebp
xchg
xor
or
jo
pop
pop
inc
sbb
dec
aad
xchg
pop
repz
cmpsl
mov
sub
in
std
mov
sbb
loop
xchg
push
mov
pop
aam
rcrb
sbb
mov
rcrl
test
pop
in
fs
dec
and
xchg
mov
or
jmp
repnz
cmc
getsec
lds
in
jl
push
enter
lods
aad
pop
and
jge
ret
filds
idivb
popa
jns
push
inc
cli
lret
mov
pusha
push
movsb
adc
in
fstpl
addr16
jae
push
jno
outsl
and
jecxz
lret
lods
jnp
mov
mov
jmp
jmp
xor
addr16
ret
into
lret
ds
sub
mov
sub
popa
sub
jmp
lods
sub
jmp
adcb
scas
mov
ja
xor
fldl
xchg
xchg
jo
sub
in
cltd
pop
adc
lods
sub
jecxz
xchg
jnp
sbb
ret
mov
push
in
jb
or
fistpll
cmp
daa
jp
adc
cli
mov
and
adc
pop
addl
addr16
jle
pop
test
mov
cltd
les
dec
jecxz
repz
xor
cmp
and
bound
shrb
gs
dec
sub
shll
mov
and
out
xchg
push
shlb
mov
sti
int3
or
call
cmp
int
fcmovnbe
daa
fimull
push
cli
scas
push
std
mov
adc
aas
in
lock
test
cmpsb
aad
dec
sub
data16
sbb
and
out
push
cmp
hlt
or
adc
je
and
roll
in
add
fcoms
pop
cmpsb
jae
xchg
sub
inc
dec
jne
or
xlat
sub
rorl
imul
cmpsb
out
insb
xor
cmp
fidivrs
sub
or
pop
pusha
dec
clc
or
nop
mov
jmp
xchg
cmp
pop
or
call
mov
sbb
orl
or
cld
je
lret
lea
pop
xor
mov
sub
xchg
enter
scas
fnstsw
pushf
inc
lret
mov
inc
clc
add
das
or
mov
arpl
push
arpl
jmp
sbb
adc
fidivl
enter
stos
dec
push
les
mov
addb
add
pop
cmp
xlat
mov
sbb
pop
notb
std
pusha
jno
inc
sbb
mov
scas
mov
pushf
stos
arpl
jnp
add
pop
xchg
xor
sbb
lret
jmp
sbb
sbb
jmp
jo
jge
or
test
xor
cmp
iret
into
inc
and
into
jns
fwait
lods
xor
stos
push
in
shlb
and
gs
lsl
mov
xchg
inc
ljmp
leave
jge
orl
adc
mov
inc
rclb
lret
cmp
inc
popf
xchg
addr16
not
sbb
xor
push
aaa
orb
call
and
test
adc
and
aas
test
loop
push
test
adc
icebp
dec
push
adc
mov
arpl
jb
pop
aad
outsl
lods
mov
dec
ja
pop
sub
lods
fadd
mov
dec
ffreep
movsb
mov
fwait
orb
pminub
add
pop
out
orl
mov
push
jge
jnp
mov
in
outsl
decl
jge
pop
idivb
aad
ja
popa
les
mov
aam
int
adc
js
cmp
pop
lret
insl
adc
cmp
sbb
dec
dec
cmp
mov
pop
clc
test
inc
aas
aam
pop
aam
das
addr16
lret
jnp
rcll
stos
jo
xchg
add
leave
popf
ja
sbb
shll
xchg
mov
jg
cs
and
ds
mov
sub
pushf
xor
inc
add
pusha
sub
roll
lcall
ret
lcall
jmp
mov
or
and
jbe
xor
int3
adc
jns
fs
ja
mov
std
out
cld
negb
nop
sub
bound
push
into
xorb
mov
ret
jo
scas
test
nop
xchg
jb
push
aas
ja
adc
outsb
jae
in
dec
pop
mov
sub
mov
adc
imul
or
into
or
stc
mov
cmpsb
jnp
lea
sub
repz
out
repz
iret
jb
out
inc
xor
in
sub
push
fdiv
xchg
popf
or
test
lea
insl
sub
ret
dec
gs
nop
ds
es
inc
ja
sbb
test
mov
xchg
scas
pop
xchg
insl
popa
aaa
push
fists
and
sbb
int
adc
notb
dec
jl
inc
arpl
xchg
xor
pop
sub
dec
fisttpl
mov
stos
sbb
orb
xchg
imul
dec
addr16
mov
xchg
dec
scas
lock
cs
leave
push
sbb
push
xor
fwait
inc
cltd
out
stos
adc
gs
push
adc
jecxz
xchg
lods
add
sbb
cmp
dec
mov
cmpsl
mov
cli
push
dec
adc
cmp
adc
bnd
cmp
or
rcrl
std
mov
xchg
or
mov
pop
jnp
xchg
frstor
rol
out
pop
ss
bound
jns
rorb
adc
mov
cmpsb
pop
lahf
xchg
add
addb
and
fisttps
xor
mov
cmp
sbb
jbe
das
mov
mov
pop
cmp
mov
mov
or
xlat
test
mov
pop
mull
xor
add
cmpsl
fdivl
cltd
out
push
jns
aas
lgs
mov
ja
std
nop
rcrl
mov
pop
xchg
sbb
push
das
loope
movsl
push
imul
loope
mov
jo
pusha
adc
mov
sub
adc
aam
xchg
lock
aas
adc
clc
push
out
fldpi
sbb
rcrb
mov
mov
xchg
push
imul
cmp
aam
xchg
push
insb
sbb
stos
rorb
mov
mov
pop
add
cltd
imul
sbb
xchg
fistpll
pop
push
adc
or
or
out
cmpb
or
mov
mul
lret
ljmp
nop
cmpsl
shlb
add
hlt
bound
lret
test
aam
inc
aad
aad
cmp
mov
dec
add
aaa
jl
mov
xchg
jnp
les
ret
mov
pushf
mov
shr
mov
xchg
movsb
out
js
cmp
lret
incl
in
push
popl
dec
outsl
aad
cmpl
dec
dec
popf
mov
out
push
lcall
mov
or
cmp
pop
subb
lcall
sub
outsl
add
sub
cmp
jns
out
mov
jbe
sub
and
and
test
loop
pop
cmp
lock
mov
lds
and
xchg
xchg
test
aad
jo
mull
hlt
and
cmpb
mov
add
jns
xorl
push
jge
dec
xchg
sbb
dec
insl
and
mov
mov
mov
add
cltd
stos
fidivs
jo
bound
popf
push
mov
mov
xor
xor
cltd
xchg
out
ret
push
aaa
inc
jmp
jne
pop
loope
xchg
popf
or
and
aas
rclb
outsl
fwait
xchg
xchg
ret
pushf
sbb
mov
popa
outsl
les
cltd
mov
sbb
fwait
in
mov
and
sahf
mov
mov
es
dec
jne
pop
mov
int
mov
insl
and
imul
pusha
dec
lahf
mov
orb
inc
subb
jb
dec
bound
inc
clc
lods
sbb
jo
arpl
push
decb
repz
inc
and
addr16
nop
cli
xchg
or
jne
xor
mov
test
and
mov
add
sub
sub
sahf
and
jne
inc
outsl
adc
rolb
xchg
nop
outsb
std
int
orb
divl
cmpsb
pop
xchg
imul
add
pop
lock
jne
adc
mov
in
add
mov
mov
or
push
scas
mov
clc
push
mov
ja
mulb
aad
xor
pop
adc
and
pusha
mov
dec
cmc
jno
mov
shlb
arpl
shll
outsb
jnp
mov
pop
mov
pop
insl
and
xchg
jnp
mov
clc
jbe
push
xchg
daa
fisubs
mov
faddp
in
jb
ret
aas
sub
sarl
jne
dec
fwait
out
adc
push
push
add
fnsave
lahf
es
filds
inc
std
pop
clc
push
inc
enter
pop
sub
into
ja
and
hlt
fs
test
jg
mov
sub
xor
in
add
mov
test
push
in
sbb
inc
in
std
jnp
mull
add
dec
insb
nop
test
inc
mov
sub
xor
mov
std
push
out
sbb
dec
es
daa
sub
lds
pop
iret
jno
mov
xchg
popa
js
fstpl
jl
movsb
mov
icebp
fldt
fsubrs
aad
shl
dec
mov
jle
add
sbb
hlt
fwait
xor
cmp
jp
push
add
pop
shl
popf
out
push
sub
adc
out
pushf
clc
mov
sub
cs
inc
and
jmp
sti
sbb
pusha
push
jle
pop
mov
movsl
roll
push
mov
jns
sbb
dec
cmpsl
sbb
je
clc
xchg
xchg
and
lock
xchg
inc
daa
lods
push
mov
cs
arpl
test
cld
dec
sbb
xchg
mov
popa
or
push
add
dec
faddl
dec
xchg
aad
fld
stos
testb
das
xor
pop
jge
adc
lds
loop
ljmp
add
fsubrl
sbbb
pusha
stc
mov
fidivrl
aas
inc
addr16
xor
aam
dec
addr16
out
mov
sti
push
add
jle
add
ss
adc
mov
mov
xor
rorl
adc
mov
iret
cmpsl
xlat
cmp
pop
push
cmp
cmc
inc
daa
and
mov
xchg
sbb
jne
sub
or
dec
xor
push
pop
rcll
movsl
insb
sbb
sub
shlb
hlt
mov
dec
fwait
ret
ss
js
sub
inc
movsl
dec
xchg
push
sbb
pushf
loope
pop
add
lods
inc
fcmovnbe
add
loope
out
or
or
arpl
and
ja
jnp
inc
sbb
push
or
jns
dec
pop
ret
ficoms
or
popf
fmull
lret
lahf
push
mov
imul
inc
clc
inc
fldcw
ss
orb
loope
push
lock
xchg
or
push
clc
outsl
in
iret
into
mov
pop
out
dec
mov
pop
or
inc
test
rolb
in
inc
ds
sbb
sbb
dec
xchg
lahf
xor
jne
loopne
leave
xlat
scas
push
xor
outsb
dec
dec
sbb
test
mov
rcr
or
inc
adc
sbb
data16
fstpt
shll
or
out
fldl
sar
int
jne
lea
jnp
mov
es
int3
sub
shll
div
cmp
jge
mov
out
lds
insb
add
lds
xor
popf
push
mov
push
gs
xchg
jp
add
sub
stc
and
jno
mov
ret
add
leave
lods
xor
dec
cld
mov
insl
jbe
stos
mov
and
mov
xlat
xchg
sbb
int3
call
xchg
cmc
call
mov
dec
inc
lods
insl
not
jo
push
fwait
jmp
lock
sbb
loopne
xor
push
mov
pop
xor
and
mov
pop
rcrl
jg
jae
enter
std
xchg
test
mov
in
cmp
movsl
push
push
les
in
arpl
xor
or
es
dec
sbb
mov
mov
pop
xchg
loope
addr16
ss
loop
add
xchg
addl
sbb
into
or
daa
jnp
jle
fidivs
lods
or
stc
jl
xchg
adc
sub
push
and
fs
xchg
jecxz
repz
call
or
fistps
push
and
notb
fistpl
inc
xor
mov
sar
gs
out
leave
cli
xchg
dec
iret
repnz
push
pop
ljmp
test
lds
mov
js
xor
or
pop
inc
lock
mov
sbbb
scas
push
lea
addr16
inc
int
outsl
dec
repnz
mov
dec
sub
xchg
out
popa
adc
movsl
pusha
xchg
adc
nop
inc
lock
sub
push
negl
insb
rclb
mov
sub
movsb
lods
mov
mov
insl
fs
sbb
mov
imul
in
mov
sbb
leave
enter
or
movsl
in
jnp
pop
lcall
adc
sub
or
jno
add
in
and
mov
addr16
adc
xchg
xor
lea
mov
jmp
sub
mov
mov
rcl
push
leave
cmp
fstl
add
out
pop
sti
sbb
jno
stos
daa
xor
jge
xchg
pop
sbb
add
sub
mov
dec
sub
cmc
sarl
lcall
fidivl
push
arpl
cmp
mov
inc
icebp
stos
pop
xchg
pushl
sbb
cmp
push
adc
dec
cmp
sti
cltd
mov
sti
cli
sub
xor
or
and
mov
das
inc
pop
inc
sub
lret
jb
mov
dec
push
xchg
dec
mov
or
xor
shll
push
jg
and
stc
je
inc
mov
pop
push
jbe
mov
sbb
into
cmp
push
mov
pop
mov
stos
dec
jae
out
and
cmp
stos
loope
pop
push
scas
in
setno
mov
popa
test
cmp
test
add
repz
in
mov
mov
popa
sub
lcall
cmp
pop
out
mov
cwtl
in
inc
and
in
sub
adcl
loop
rorl
test
sti
dec
fcomi
push
sti
xor
jbe
xor
push
xor
pop
mov
aad
xor
xlat
fcoms
cs
inc
mov
subl
js
inc
aam
shl
ja
xor
stc
xor
mov
push
aam
or
rol
rcr
cmp
inc
in
mov
fcoml
dec
push
xlat
js
lcall
jg
push
lods
not
dec
jb
popf
push
or
insl
movl
push
lods
cli
mov
aaa
mov
mov
xchg
sub
clc
fistps
sub
insl
insb
in
sub
ds
cld
xchg
fildl
imulb
mov
mov
mov
cli
adc
les
out
jo
adc
aas
ja
fisubrs
lds
loop
shrb
jbe
cmp
sub
jl
mov
jmp
adc
pop
out
stos
aaa
data16
mov
fistps
popf
push
bound
mov
inc
or
add
aam
addb
pop
jmp
inc
dec
in
inc
std
xor
mov
mov
sbb
xchg
mov
adcb
fnsave
sbb
adc
aaa
insb
scas
out
std
loope
dec
and
lock
test
and
inc
rol
repz
xchg
push
add
jp
mov
add
scas
cltd
jmp
adc
mov
mov
stos
aaa
ss
mov
popa
cmp
rcrl
loopne
out
sub
and
pop
jle
stos
enter
pusha
cmpsl
out
es
es
pop
jl
sub
xchg
or
mov
mov
xchg
adc
rorl
je
pop
pop
add
es
adc
idivl
lds
popf
jge
lret
xor
int3
mov
mov
xchg
popa
std
pop
cmpsb
aad
push
add
mul
loop
mov
push
mov
sarl
inc
push
sub
adc
push
fs
cmp
jo
pop
jne
test
sub
sbbb
xor
jg
dec
push
sub
xchg
outsb
jl
sbb
in
fs
aas
sbb
pop
fcmovu
mov
cmc
dec
dec
xchg
andl
ja
outsb
bound
dec
push
jb
sbb
loopne
ficomps
loopne
sub
dec
sbb
cmpsl
testl
ret
mov
cltd
in
dec
jle
cwtl
pop
inc
daa
add
or
add
xchg
cld
inc
scas
dec
push
inc
cs
gs
xlat
js
add
xchg
adc
rep
inc
stos
cmc
adc
jp
jg
in
lods
cmp
mov
add
in
mov
leave
mov
xchg
lods
cs
std
mov
gs
popf
cld
lods
xor
mov
mov
or
fidivrs
mov
push
mov
rsqrtps
mov
movsl
outsb
mov
dec
cmp
and
jnp
decl
pop
ret
stc
jp
lahf
mov
icebp
and
rcrb
xor
and
mov
adc
dec
ret
push
push
scas
mov
mov
pop
cmp
ss
inc
cmp
sbb
cmpsl
pop
mov
pop
daa
mov
push
int3
mov
ds
es
outsl
pop
and
aad
ss
shll
pop
sti
lds
lahf
fstps
xchg
mov
popa
dec
popf
cmp
pushl
testb
mov
sub
addr16
clc
push
push
adcl
jne
xchg
and
or
ds
jbe
xchg
mov
cmpb
xor
sbb
fcom
xchg
inc
ret
cld
out
push
mov
adc
xchg
enter
mov
addl
xchg
mov
jle
jns
std
into
jo
push
cld
fisubl
pop
jbe
in
xor
or
cli
inc
add
xor
int
push
cmp
loop
cltd
out
or
xlat
and
or
enter
mov
pop
out
jo
xor
int
or
sbb
or
int
mov
push
je
and
mov
sbb
or
stc
fidivl
mov
aam
decb
mov
and
xlat
imul
std
scas
jne
cld
rorl
insl
add
push
cmc
adc
mov
cmp
das
dec
sti
mov
pop
addl
cmc
cmp
sti
mov
jp
cs
adc
xor
loopne
cld
test
les
inc
jge
xor
jno
jl
dec
and
sbb
std
test
push
loope
mov
loopne
dec
cs
dec
dec
jmp
jl
ja
dec
xchg
mov
sub
push
and
popa
pop
into
add
aaa
nop
xchg
dec
cmp
test
fmuls
shrl
xor
repz
out
xchg
iret
push
xchg
dec
jno
add
les
jbe
dec
xor
fmuls
xchg
test
fiadds
sub
mov
fs
dec
mov
cmpl
rcl
scas
mov
out
jge
lret
popa
cld
sbb
push
dec
stos
jo
fstpt
pusha
movsl
pop
mov
int3
push
js
je
imul
lods
cwtl
data16
call
sbb
fsubrl
shrb
insl
mov
or
test
adc
inc
mov
mov
lret
rolb
js
pop
mov
push
inc
loop
push
test
scas
add
out
loop
arpl
mov
mov
and
mov
clc
shrl
ret
or
jae
xor
push
mov
lret
sub
je
add
jp
add
adc
pop
xor
xor
addr16
in
fisubl
fistps
pop
shll
ljmp
push
out
jns
pop
sub
frstor
mov
in
push
inc
push
xchg
popf
push
out
jecxz
xlat
lods
ja
addl
add
lret
or
xchg
sub
imul
fsin
jno
add
ret
sub
pop
nop
cwtl
fidivl
das
ds
in
fs
cmpb
adc
dec
lret
add
xchg
clc
cmp
xor
push
xchg
mov
pop
mov
xchg
imul
inc
mov
gs
fildl
mov
pop
cmp
jg
and
sbb
and
mov
mov
ds
lods
xchg
mov
jp
mov
add
ffree
enter
jmp
rcr
ret
shrb
ds
fisubs
pop
add
cmp
jg
ss
mov
aaa
fs
add
mov
aas
das
aas
adc
das
and
mull
testb
jb
pop
add
inc
sbb
mov
ja
jbe
sbb
and
lods
pop
mov
adc
enter
arpl
cli
inc
dec
jne
and
aad
add
movb
add
stos
xorl
add
ret
mov
out
insl
sbbb
mov
jle
mov
pop
out
mov
cmpsl
push
outsl
pop
pusha
mov
mov
outsb
outsl
sbb
cmpsl
push
mov
cli
lret
fstps
sbb
jp
scas
cmp
stos
aas
dec
cltd
push
mov
sbb
mov
sbb
sub
add
add
movsl
cmp
xor
into
lock
sub
inc
add
imul
lds
adc
jbe
hlt
ret
xchg
loopne
dec
jmp
fiadds
sub
pop
sbb
cwtl
pop
imul
pop
jae
mov
in
cld
scas
pushf
dec
sbb
ja
inc
jb
loope
xor
inc
cli
adc
or
mov
arpl
mov
sbb
xor
push
movsb
mov
dec
fstpt
jbe
xor
fildll
popf
adc
arpl
inc
inc
mov
nop
push
lret
cld
repz
pop
and
lock
bound
or
into
test
adc
leave
push
nop
outsl
mov
sbb
mov
and
push
mov
es
jecxz
add
inc
jb
or
mov
daa
in
sti
cmc
popa
fs
inc
inc
movsb
pushf
repz
pushf
movsb
mov
xor
push
pop
lds
dec
rcrl
aam
pop
or
sub
or
movsb
out
dec
inc
push
xor
movsb
mov
ficompl
daa
xor
sub
xchg
mov
cmp
mov
and
jl
dec
out
fwait
jl
push
lea
es
push
hlt
add
pusha
push
inc
sub
sbb
in
subl
adc
dec
xchg
xor
inc
cmp
jo
jmp
sbb
jg
fdivrs
fwait
mov
shll
and
fistps
movsl
rcrb
dec
mov
shll
sub
mov
ret
rcrb
mov
test
leave
jle
jae
pop
lods
sbb
jo
push
cmp
add
dec
mov
shlb
push
out
mov
sub
insl
sub
les
ficomps
mov
jmp
pushl
cli
xorb
ja
fninit
adcb
lock
and
inc
out
leave
mov
in
nop
js
mov
or
or
jecxz
js
add
pop
popf
dec
mov
cli
add
shll
and
aad
xor
out
je
int3
mov
mov
and
jg
xchg
mov
sub
jmp
cwtl
popf
imul
incb
jb,pt
dec
push
out
jnp
cwtl
iret
and
add
cmpl
push
insl
arpl
xchg
out
les
dec
shl
mov
push
sbb
mov
push
fcomps
xor
push
repnz
mov
roll
pushf
sbb
mov
pop
mov
xor
add
insl
pop
cs
iret
pop
mov
mov
mov
mov
test
cmp
pop
imul
cmp
out
bnd
inc
xchg
push
adc
sub
adc
sbb
add
ljmp
dec
pop
mov
push
or
inc
mov
and
out
pop
lods
xchg
or
stos
popa
in
enter
inc
sub
sti
pop
xchg
test
in
mov
cld
add
adc
fwait
pop
loope
mov
mov
out
xchg
xor
pop
in
pop
shrl
out
lds
insb
inc
fxtract
enter
test
outsb
mov
dec
pushf
ror
sub
not
lcall
mov
sbb
ljmp
sahf
movsb
mov
push
insl
mov
cwtl
xchg
mov
cmp
outsb
dec
push
mov
or
movsb
lret
imul
dec
pop
in
cmpsl
add
adc
add
and
jmp
mov
mov
or
dec
in
out
xor
popa
inc
jle
pop
lret
push
das
jbe
lea
add
movsl
pusha
sub
cltd
mov
pop
lret
push
dec
insb
fdivrs
aas
push
mov
jo
inc
push
sarl
jl
mov
mov
out
push
into
movzwl
into
movsb
int3
add
adc
movsl
dec
clc
xlat
pop
outsb
push
andl
pop
ljmp
jno
data16
or
add
xchg
shll
sub
enter
inc
or
std
mov
jg
mov
xchg
fsubs
mov
cmp
cltd
pop
cmp
mov
cmp
jecxz
pop
sbb
fs
mov
aad
sub
add
in
inc
jnp
in
daa
dec
mov
jmp
std
data16
out
cmp
mov
les
stos
sub
fisttps
jle
int3
add
mov
push
or
mov
xchg
aas
dec
movsl
add
stos
cwtl
mov
flds
aas
push
aam
jne
cld
cltd
daa
pop
call
mov
movsl
mov
sahf
mulb
sahf
cmp
mov
xor
lcall
iret
loop
push
popf
sub
sahf
fisttpll
mov
add
lahf
stos
add
out
xchg
or
cs
mov
shlb
dec
mov
lock
sub
cmp
aaa
aaa
outsl
xor
push
pop
pop
imul
pop
pop
mov
rcrb
icebp
push
add
cmpsl
push
sbb
dec
jae
mov
outsl
lahf
adc
or
and
cs
scas
jl
out
inc
dec
mov
jmp
lock
inc
in
pop
mov
pop
inc
mov
sub
and
mov
addr16
loopne
pop
cld
mov
mov
insl
mov
push
jmp
jnp
icebp
xchg
push
bound
add
stc
icebp
mov
shrl
outsb
and
add
lcall
fcoms
inc
ljmp
jg
xor
mov
sub
push
cli
dec
fs
mov
and
outsb
cmp
cli
loopne
shrb
cmpsb
add
jmp
ficoml
mov
fdivl
push
sub
push
and
iret
sub
mov
cmp
adc
pop
cmp
mov
bound
cmp
xor
adc
ja
aad
sub
sub
out
aaa
inc
fnstsw
arpl
jge
aad
nopl
jmp
cmp
jg
jmp
pop
adc
or
popa
pop
scas
push
jle
inc
pop
sbb
aaa
xchg
mov
aad
dec
or
lea
lock
mov
mov
inc
sub
mov
xor
lods
int3
or
mov
mov
cmp
mov
addr16
mov
in
sub
shl
loop
imul
movsb
add
popf
imul
ss
fwait
roll
add
adc
mov
out
xor
scas
lods
lahf
mov
in
shll
cmp
sbb
insb
jp
mov
pop
cmc
xchg
mov
add
outsb
je
out
push
cmp
sub
or
cwtl
mov
mov
xchg
sub
aad
imul
and
pop
scas
push
insw
push
pusha
pop
test
lds
cmpsb
cmp
jl
loopne
clc
out
push
pop
shrl
nop
dec
cmpsl
pop
xchg
pusha
adc
add
cmp
movsb
mov
inc
rcll
fstpl
sub
pop
cmp
aad
int3
insl
ljmp
xor
lcall
and
call
jge
xchg
sbb
test
ss
inc
mov
sbb
andl
dec
and
call
push
idivl
push
movlps
imul
xor
pusha
jnp
lock
mov
pop
and
xor
fwait
lds
insb
enter
xchg
mov
aad
fmul
ficoms
andb
xor
loopne
inc
ss
jb
sub
addr16
scas
jnp
add
cmp
fstl
pop
aad
fmul
add
jo
insb
adc
mov
popa
pop
cmpsl
lock
or
jbe
push
adc
add
mov
test
cmp
cmp
xchg
xchg
push
pop
outsl
push
lods
push
jno
out
mov
inc
or
scas
xchg
mov
mul
les
inc
int3
pop
push
add
xchg
and
or
cmp
xor
std
cld
sarl
fisttpl
and
pusha
cmpl
and
pop
scas
sbb
je
mov
rorb
lods
popa
pop
mov
es
cmpsl
in
in
jmp
test
out
stc
cmp
jecxz
dec
sbb
mov
ss
cltd
and
and
mov
subb
icebp
and
inc
jmp
xor
int3
or
push
adc
mov
pop
fadds
cmc
out
mov
dec
lds
je
pusha
shrb
mov
mov
mov
es
fcomp
sub
out
inc
leave
adc
push
push
xor
mov
add
ljmp
pop
jb
je
les
fadd
xchg
popl
xchg
dec
gs
add
sbb
negb
add
leave
jl
lods
or
sbb
cli
adc
mov
push
mov
xor
in
cmp
repnz
push
jecxz
xor
jmp
scas
je
dec
loope
out
jg
push
fsts
dec
aaa
xlat
in
bound
adc
xchg
lahf
in
push
or
scas
xchg
adc
jmp
outsl
aaa
pop
inc
nop
insb
cmpsb
pop
inc
dec
or
sub
jo
lds
lds
pop
out
mov
push
call
pushl
into
and
rcrb
call
mov
movsb
dec
sub
mov
pop
mov
pop
push
addl
icebp
in
add
scas
popa
inc
stos
int
jl
imul
jnp
push
in
ds
pop
push
scas
call
pop
rcl
inc
test
aaa
loop
ud1
or
orl
shl
xlat
mov
imull
scas
jne
shl
mov
and
and
adc
dec
repnz
cwtl
jge
mov
jmp
mov
fsts
outsl
and
push
mov
es
sub
cmp
lret
mov
aad
cmp
xchg
dec
adc
push
cltd
rolb
push
cmp
mov
test
xor
sbb
movsb
fidivrs
or
ja
out
pop
pusha
lcall
push
push
pop
sbb
subb
mov
in
test
leavew
das
adc
sbb
or
ss
fldenv
jo
cmp
xor
imul
shlb
push
sbb
inc
mov
sbb
mov
daa
mov
add
cld
dec
stc
lahf
in
pop
rcll
xchg
xor
push
and
pop
bound
push
mov
jmp
mov
fdivr
je
pop
xor
push
sti
fcompl
inc
mov
mov
aaa
and
icebp
cmc
jecxz
dec
xlat
jmp
jbe
cmp
or
xchg
dec
repnz
push
xor
ffreep
ds
mov
jmp
outsb
pop
add
sti
clc
pop
test
or
lret
iret
cmp
jns
scas
xor
dec
ljmp
loopne
cwtl
testl
mov
es
jne
mov
in
jmp
pop
shrb
ficompl
pop
add
sub
dec
mov
push
mov
sub
mov
push
roll
sub
test
xchg
insl
mov
push
imul
stc
sbb
dec
rclb
push
orb
notb
push
jno
mov
pusha
add
rorl
imul
pop
out
pop
rcl
or
mov
cmp
adc
jmp
inc
rol
jb
rcrb
dec
and
jmp
push
adc
jb
lea
add
push
scas
inc
jnp
adc
daa
in
adc
push
xor
test
fwait
pusha
dec
repz
js
push
out
lcall
jns
or
and
test
lods
fsub
cmp
js
xchg
mov
callw
gs
mov
jnp
cmp
pop
pop
clc
leave
imul
dec
or
inc
pop
or
push
xchg
inc
mov
sbb
lods
popa
inc
cli
in
inc
cs
mov
lahf
jno
push
fcomi
jnp
add
pop
stos
rcll
in
testl
and
dec
loope
shlb
xor
movsb
nop
cli
sub
je
incl
xorl
mov
push
and
aam
pop
loop
dec
insb
adc
mov
insb
sub
ret
enter
pop
daa
jecxz
out
xlat
add
pop
fiadds
hlt
or
in
test
sbb
sti
sbb
test
mov
repz
outsl
and
sbb
in
daa
into
xor
xor
popf
ret
jp
sub
jg
std
add
dec
cmc
out
pop
mull
std
inc
nop
cmp
das
adcl
jns
mov
dec
mov
sbb
mov
dec
sti
and
and
pop
mov
mov
xchg
pop
dec
or
aam
adcl
ja
imul
jae
mov
leave
jmp
xor
mov
jno
jp
cmp
aas
daa
fisubrs
or
jp
cmp
and
jnp
lea
iret
xor
out
scas
sbb
loope
pop
in
outsl
add
mov
sub
push
sbb
stos
lret
sub
xchg
adc
fdivrp
mov
or
out
lahf
maxps
mov
and
shl
in
outsb
xchg
cli
cmpsb
and
jl
cmc
push
loop
pop
fnsave
jns
scas
in
dec
notl
add
insb
pop
mov
jmp
mov
mov
cmp
mov
mov
scas
lds
mov
arpl
or
nop
jns
cltd
lcall
jp
imul
pop
mov
jge
lret
xchg
aad
xor
pop
jns
sbb
push
mov
out
cmp
aaa
je
jmp
push
dec
mov
lods
mov
movsb
sbb
xlat
aaa
icebp
fcoml
lock
and
adc
das
xchg
push
std
push
jp
data16
jg
jno
push
sahf
int3
hlt
movq
inc
fsubrl
outsl
or
mov
test
sub
sbb
js
jb
push
mov
cmpsb
in
dec
push
js
lret
insb
jae
push
shll
mov
or
not
pop
pop
int3
pusha
fisttpll
adc
or
addr16
fnstcw
pop
dec
pop
sbb
stos
sub
pop
or
and
rcrb
mov
push
lea
or
sahf
daa
jnp
ret
xor
adc
mov
pusha
arpl
lea
mov
loopne
das
pop
mov
pop
ds
mov
ss
cmp
stos
cwtl
sbb
out
push
push
insb
cmp
xchg
bnd
dec
xor
adc
push
fucompp
mov
dec
jns
movsb
mov
mov
pop
xchg
mov
data16
insb
or
cmpsl
add
ret
mov
jle
stc
mov
stos
lret
sbb
fcompl
pop
mov
jo
pop
jp
mov
insl
sub
dec
mov
addb
test
jo
ret
rcrb
inc
push
pop
and
gs
xor
pop
ds
sbb
xchg
inc
imul
mov
icebp
testl
test
sub
xor
lea
stc
xchg
jmp
repz
sahf
sub
gs
ljmp
stos
icebp
iret
xchg
xlat
out
fdivrs
pop
gs
jmp
enter
pop
cmp
inc
push
addr16
jl
test
jns
lea
ja
push
cmc
lea
sarb
pop
or
movsb
in
lock
aas
lret
outsb
xchg
adc
popa
ret
nop
cmpsb
or
lds
pop
pushf
pop
adc
shlb
fnstenv
push
pusha
cld
add
leave
pop
int3
or
bound
data16
mov
mov
pop
movsl
mov
and
call
outsl
and
sbb
cmc
xchg
jbe
cmp
movsl
xor
and
mov
mov
ficoms
scas
cmp
in
cmc
dec
mov
mov
loop
push
and
jg
mov
lahf
dec
loope
insl
inc
daa
aam
mov
lods
leave
bound
jns
and
inc
imul
adc
push
loop
xor
inc
xchg
int
lahf
xor
xchg
insl
pop
dec
mov
push
jne
ja
add
arpl
imul
mull
dec
sub
insb
cmpsl
push
cmpsl
push
inc
mov
test
cmp
jmp
repz
stos
cld
or
sub
and
and
js
cmp
cmp
aaa
lds
sbb
push
lahf
mov
int
pop
scas
and
repz
and
mulb
sti
pushf
cli
inc
mov
or
push
mov
test
ljmp
push
jne
mov
das
shl
fs
fstpl
mov
inc
dec
lcall
loop
pop
call
leave
dec
hlt
scas
clc
lock
mov
clc
scas
inc
aas
hlt
push
daa
arpl
ljmp
test
mov
and
and
stos
push
into
ja
or
repz
xchg
sbb
pop
data16
cmpsl
dec
ja
push
mov
inc
test
or
cs
mov
movb
stos
sub
add
and
or
pushf
pop
aad
add
lock
mov
sub
add
enter
and
into
out
and
sbb
repnz
sti
cmc
ja
lock
mov
xorl
int3
xchg
sahf
loope
mov
mov
ss
add
or
std
lods
xor
in
loopne
inc
negl
mov
pop
rclb
jnp
and
sahf
and
repnz
iret
jle
adc
cmp
adc
pop
xchg
es
sub
aaa
cltd
inc
bound
inc
mov
xlat
scas
adc
sbb
lahf
mov
mov
dec
add
sbb
pusha
jae
iret
daa
jbe
sbbl
in
push
sub
imul
icebp
adc
cld
or
xchg
mov
xor
mov
icebp
mov
adc
and
or
mov
push
das
dec
pop
jmp
movsb
pop
fnstsw
jecxz
andb
icebp
test
leave
or
mov
cmc
dec
daa
push
jb
std
mov
add
lret
jge
aad
cwtl
inc
je
test
xchg
sbb
clc
dec
jne
ljmp
insb
cltd
mov
xlat
cmp
sub
enter
mov
iret
pop
movsl
arpl
fwait
in
jge
ret
stc
jmp
imul
mov
lds
daa
ljmp
xchg
mov
push
lea
xchg
flds
push
adc
or
pop
jne
mov
js
sub
sahf
mov
add
mov
popf
nop
pop
in
cmp
jnp
xchg
jae
sub
aam
mov
adc
popa
xchg
push
and
xor
mov
push
scas
outsb
bound
xchg
xor
adc
sbb
dec
imul
pop
ljmp
in
ret
or
jp
ds
cmp
adc
xlat
mov
shll
std
fcmovnu
add
cmp
jb
loop
ss
mov
lds
jl
push
bound
insl
sti
push
add
movsb
cli
xchg
enter
pop
cmp
aas
push
aas
dec
mov
ds
push
inc
dec
clc
nop
aam
pusha
mov
push
fiadds
cmp
jae
dec
xchg
push
enter
xor
jg
aas
mov
aaa
pop
mov
jns,pn
cmp
xor
lock
xor
pop
adc
cli
jge
ficoms
cmpsb
fistpll
in
mov
cld
and
out
test
pop
pop
pop
mov
jge
lods
in
push
andl
aaa
aas
mov
sbb
pop
loopne
negb
in
out
add
push
and
mov
in
in
jbe
inc
dec
fs
and
roll
addl
mov
jle
add
lock
dec
sbb
cmpsl
fstps
lret
or
repz
pusha
cmp
push
mov
sbb
mov
not
jp
adc
jg
lods
or
gs
cmp
cs
cli
shrl
scas
int3
push
aad
jns
mov
or
outsl
loope
dec
jno
shlb
mov
lret
mov
ret
subl
dec
xchg
xchg
arpl
aas
aam
push
or
pop
xchg
in
jecxz
dec
push
insb
pop
fstpt
or
scas
int3
cltd
pop
xorl
or
lock
mov
inc
dec
or
sahf
dec
lea
ss
popf
pop
bound
or
pop
push
lods
push
mov
ljmp
add
lcall
add
addl
jge
and
insb
not
xchg
mov
imul
push
mov
mov
mov
out
mov
pop
call
jge
and
xchg
pcmpgtd
adc
incl
and
cmp
push
xor
test
out
sbb
fldl
aam
jle
leave
ljmp
int3
dec
adc
hlt
sbb
test
repz
pop
mov
mov
jae
xlat
int3
pop
mov
in
and
add
dec
fstl
jns
insb
andl
push
jo
imul
movsl
or
mov
push
std
mov
jl
and
fidivrl
jo
push
mov
fcompl
hlt
ja
inc
cld
mov
cli
lret
movsl
mov
fcomp
jne
add
inc
enter
mov
out
xchg
popa
out
in
inc
test
stos
mov
in
and
aaa
lods
xchg
pop
fldcw
cmc
hlt
icebp
arpl
sahf
cmp
dec
int
fstpl
inc
add
push
js
mov
dec
xor
cs
pop
mov
jge
rcrb
or
ffree
and
mov
jg
sbb
cltd
xor
jl
imul
jle
out
cltd
mov
stos
popf
dec
stos
negl
xor
xchg
cmp
and
sbb
pop
gs
mov
lods
mov
sti
gs
lods
xchg
int3
stc
das
negl
dec
xchg
xchg
aas
cmp
shlb
aad
mov
pushf
insb
sub
test
mov
sarb
mov
idivb
lods
andl
std
out
fidivs
faddl
cmp
into
jg
leave
sub
sti
dec
mov
cmp
test
sub
and
adc
cli
fwait
pop
xchg
push
cs
ret
mov
jg
in
mov
inc
mov
ss
sbb
jmp
push
das
mov
mov
sti
inc
movb
sub
bnd
pop
push
or
notl
cmp
inc
inc
mov
mov
dec
push
adc
xor
sti
mov
fmuls
pop
hlt
pushf
outsl
lret
mov
push
outsl
sarl
add
stos
lea
xor
ret
scas
dec
cmp
outsb
rorb
and
xchg
movsb
and
sbb
shrb
imul
mov
and
cmp
shrl
icebp
inc
ret
xchg
leave
push
cwtl
sub
mov
pop
pop
subb
out
ficompl
fnstcw
lds
push
js
inc
sub
inc
jne
sahf
shl
pop
xchg
sbb
sti
pop
outsl
je
pop
aam
mov
mov
rcll
mov
jmp
subl
aaa
fildl
push
xchg
or
mov
fwait
or
into
stos
inc
int3
mov
mov
or
push
fwait
repnz
testb
mov
daa
lahf
fcoms
rcl
sbb
push
jne
fstl
sbb
loop
sbb
mov
cmp
xchg
std
xor
testb
dec
cld
test
out
call
and
int3
jp
jno
and
clc
xchg
test
loopne
insl
pop
push
jl
aad
xchg
push
lret
loopne
ja
jmp
jecxz
cld
pop
inc
lods
push
adc
sbb
out
dec
add
mov
inc
sahf
jmp
cli
pushf
enter
iret
mov
xor
add
push
je
add
scas
mov
add
sub
cmp
sbb
lods
int
bound
jno
ret
or
scas
cld
jnp
sub
xorb
xor
jbe
scas
je
repnz
ljmp
pusha
or
lods
sub
xor
lret
inc
mov
mov
lret
out
add
stc
sbb
scas
xchg
pop
mov
mov
xchg
lds
pop
or
mov
cmp
jo
inc
sub
sbb
nop
xchg
and
popa
sti
xchg
popf
test
xchg
cmc
test
adc
outsb
push
adc
insb
in
shll
pusha
dec
cmp
xor
pop
sub
pop
add
add
xchg
into
push
or
test
cld
inc
fdiv
ret
sahf
cmpsl
cmp
dec
or
jae,pn
mov
mov
sahf
dec
push
jecxz
sbb
jge
xchg
push
xor
shlb
repnz
push
mov
cli
dec
mov
repz
outsl
mov
push
jle
cmpsl
mov
aas
inc
fmuls
xor
int3
add
sbb
pop
sub
loop
lods
outsl
cmp
cltd
xchg
mov
imul
mov
pop
nop
mov
xchg
lret
fsubrl
push
sub
test
xor
cmp
repz
jle
sbb
out
fwait
movsl
pop
repnz
lret
jp
inc
mov
notl
mov
fnstsw
push
jecxz
push
cmp
xor
scas
movsl
xchg
fistpl
sub
jmp
jl
fdivrl
push
ja
cmp
cmpsb
sbb
xor
pop
in
mov
stos
loop
cmp
das
fwait
in
or
sbb
movsl
loop
mov
adc
orb
jnp
sbb
int3
out
mov
je
jb
pop
subb
sbb
mov
bound
sub
sub
mov
imull
fsubl
mov
rclb
sti
int
cmp
xchg
xchg
sub
pop
lcall
adc
fs
mov
imul
cmp
js
in
xlat
and
and
repnz
imul
in
jecxz
ficoml
stos
mov
mov
add
mov
and
sahf
sbb
lret
std
jb
and
arpl
and
and
jne
push
cmp
add
inc
ret
faddl
or
and
pop
pushf
insb
pop
mov
lock
dec
mov
mov
rcr
insb
mull
jns
pop
jmp
mov
je
xlat
adc
mov
ret
mov
sbb
add
mov
or
rorb
push
sbb
ficoml
inc
or
sar
sub
and
sub
sti
enter
leave
mov
loopne
int
push
fistpl
mov
lahf
test
enter
ret
aas
mov
iret
lahf
gs
ss
add
sub
ja
add
jecxz
jmp
mov
shrl
push
push
mov
shl
call
loope
sahf
adc
pop
xchg
cs
inc
pop
sbb
in
test
ss
dec
mov
mov
inc
inc
push
movsl
scas
xlat
movl
pop
and
ffreep
test
cmp
imul
fadds
xor
inc
das
inc
fcompl
mov
and
dec
xlat
jo
shll
out
outsb
and
into
mov
or
outsl
push
pop
sub
push
in
loop
sbb
sahf
inc
push
ret
shll
pop
sub
je
cmpb
cmp
jb
imul
xor
adc
cwtl
ucomiss
cs
bnd
sarb
push
and
jg
push
das
add
push
dec
mov
and
push
pusha
scas
mov
push
jne
lock
outsl
add
lret
xchg
lcall
push
add
sbb
lahf
aad
nop
bound
sbb
xor
inc
movsl
pop
mov
lds
push
sbb
popa
jmp
shll
cmc
orb
sarb
in
mov
movsb
add
add
jns
push
stos
mov
rcrl
xlat
sub
into
outsb
mov
in
js
dec
push
mov
lret
shll
xchg
mov
or
and
cmp
dec
pop
pop
xor
test
adc
push
insl
lcall
jl
and
add
sbb
out
iret
in
inc
repnz
sub
jo
xchg
jl
pop
pushf
sbb
jb
das
shlb
pop
rol
mov
cmp
sub
mov
rcl
adc
pop
jg
imul
into
sbbb
clc
sub
xchg
cmp
dec
xchg
popa
mov
leave
or
jb
xor
inc
jae
cs
mov
xchg
mov
int
lods
inc
xor
and
inc
add
call
push
mov
in
adc
sbb
xor
insb
movsl
out
push
shll
fsubrs
in
loop
xor
sub
xor
add
lret
xor
in
stos
cmpb
cwtl
inc
mov
sbb
jge
jb
sub
test
add
and
pop
notl
xor
scas
dec
repnz
jo
dec
push
das
dec
loopne
xchg
sbb
add
bound
cli
push
aad
mov
mov
push
popa
and
push
mov
rcl
jl
aas
hlt
mov
mov
xchg
xorb
ja
cwtl
out
push
xchg
sub
ljmp
cmp
push
sub
jle
xchg
cmp
jg
jns
mov
out
ret
stc
iret
fldenv
xor
int3
add
inc
lret
movsb
enter
mov
mov
sarb
aaa
shlb
pop
rcrl
add
adc
icebp
push
in
lcall
mov
es
icebp
pop
push
push
xchg
push
cmp
out
loopne
add
movsl
inc
mov
xchg
movsl
mov
bound
xor
sub
ljmp
movsl
in
adc
add
lods
shll
out
outsb
jne
cmpb
lods
jae
xchg
test
push
cmpsb
addr16
scas
jge
nop
adc
or
push
cmp
pop
movlps
jbe
test
sti
lahf
mov
mov
or
es
jno
xchg
lea
fimull
gs
fisttpl
dec
repz
ljmp
ljmp
dec
out
rclb
cmp
jo
out
pop
fsubrl
icebp
popa
lea
xchg
mulb
mov
xor
fsubr
aas
gs
jbe
loope
xchg
push
lods
out
ljmp
or
sarl
ja
mov
cltd
push
jae
data16
xchg
dec
mov
mov
mov
add
lret
sahf
pop
movsl
nop
pop
sarl
mov
mov
jmp
cltd
insl
pop
and
or
mov
xor
sub
mov
dec
lcall
shll
int
ss
seta
popf
test
pop
fidivs
push
in
out
jne
mov
pusha
push
dec
xchg
jae
ret
push
fs
xor
push
pop
daa
xor
xor
or
or
jbe
add
je
push
fnsave
mov
and
sub
xchg
mov
mov
hlt
xlat
adc
pusha
je
stos
or
push
sbb
xor
out
pop
pop
and
dec
lods
push
das
mov
shrl
push
push
sub
aaa
add
fistpl
xchg
xchg
es
or
repnz
mov
jne
pop
mov
rcrb
or
cmp
sahf
cmpsb
add
cli
mov
sub
mov
pop
xlat
mov
lea
inc
mov
push
fisttpl
or
scas
cltd
mov
leave
xchg
mov
or
test
in
test
dec
push
mov
test
movsb
shrl
cmpb
jg
lret
sub
mov
mov
repz
mov
or
gs
insl
mov
lock
gs
pushf
shrb
add
adc
popa
sbb
add
call
or
hlt
aad
inc
add
repz
outsl
sbb
add
test
mov
pop
mov
repz
fwait
test
in
orb
xor
loopne
dec
or
and
xchg
fwait
pop
dec
cmp
add
in
or
mov
popa
jecxz
push
pop
or
sti
mov
loop
sub
je
popf
sub
out
cwtl
mov
aaa
cmc
adc
xlat
or
add
subb
cld
test
adc
sbb
and
lods
adc
or
jle
push
xor
fwait
cmp
lret
or
roll
xor
rorb
xor
jno
into
outsl
in
xchg
cld
sbb
pop
inc
inc
rcll
lret
xor
cmp
fidivs
movsb
cmp
inc
mov
xchg
or
inc
out
popf
inc
sub
leave
cmp
xor
in
add
sub
mov
lret
or
dec
mov
test
and
sbb
clc
gs
sub
add
sti
js
push
and
inc
into
push
sub
mov
or
jb
jg
mov
test
xchg
test
mov
xlat
xchg
pop
xchg
lock
les
pusha
les
inc
daa
out
addr16
xchg
or
pop
movsl
sarb
loope
mov
lret
and
fldenv
xchg
add
outsb
ret
out
cltd
sbb
scas
mov
repnz
into
data16
out
add
popf
addr16
mov
fwait
dec
mov
and
mov
rclb
fiaddl
sub
pushf
and
mov
test
sub
xchg
aad
and
icebp
int3
cmp
mov
pop
insb
and
jae
pop
and
mov
inc
test
adc
loop
mov
xchg
repz
adc
lahf
pop
jmp
stos
iret
cmp
int3
push
stos
lret
jge
popa
xor
insb
in
adc
test
lods
inc
arpl
mov
lret
hlt
jp
jecxz
fsubl
lret
or
mov
test
lcall
es
adc
enter
inc
inc
xchg
std
daa
iret
mov
iret
push
or
and
sbb
jbe
out
push
movsl
aad
adc
lock
sub
imul
ds
lods
jbe
mov
jb
in
iret
sbb
and
add
mov
mov
xchg
jnp
mov
lock
mov
testb
inc
loop
dec
inc
notb
xor
pop
loop
cwtl
cli
pop
fimull
aas
cli
xchg
inc
in
mov
sub
test
xor
sub
and
clc
fildl
xlat
and
mov
sbb
adc
aam
add
imul
mov
xchg
adc
fcmovbe
mov
fcoms
push
filds
mov
xchg
stc
pop
or
add
jg
andnps
mov
sub
sbb
repz
leave
jp
das
sar
mov
in
sub
es
movl
mov
stos
ret
ret
inc
incl
outsl
xchg
cmpl
leave
lret
pop
jns
adc
xchg
push
shl
sbb
xchg
xchg
jae
dec
or
and
push
mov
adc
jbe
lahf
cmp
sbbb
jmp
fmuls
ror
jecxz
arpl
shll
xor
jo
inc
aas
push
sbb
or
jp
pusha
arpl
test
mov
xor
les
js
outsb
mov
push
add
test
and
and
pop
push
pop
push
gs
mov
xchg
cmp
xchg
js
push
inc
pop
test
fisubl
mov
fsubs
jns
bound
and
clc
xor
scas
mov
fstl
sahf
rolb
and
mov
scas
xor
adc
popf
sub
adc
jecxz
or
lods
outsb
dec
xchg
es
xchg
fs
sbb
ficoms
scas
push
leave
cs
adc
stos
ja
xor
xchg
add
mov
add
cmp
add
lahf
jns
dec
cwtl
mov
jmp
mov
insb
sti
sahf
and
hlt
mov
xchg
adc
mov
cmc
loope
mov
mov
lods
adc
mov
inc
xor
cmc
mov
rolb
out
or
and
and
add
int3
cwtl
insb
cmp
pop
in
xor
add
mov
loope
push
aad
das
push
mov
pop
xchg
cmpsl
lock
cmp
and
xor
xor
mov
pop
push
rcrb
je
outsb
sbb
mov
mov
imul
xchg
aad
arpl
push
push
xchg
aaa
mov
mov
mov
orl
std
les
stc
mov
sbb
mov
sbb
lds
aas
cmc
jecxz
push
shrl
push
adc
push
push
adc
jle
imul
imul
pop
sub
and
add
mov
add
push
xchg
sbb
rolb
jno
lock
imul
sbb
fisubs
ret
punpckhwd
std
sub
mov
and
pushf
pop
outsl
pop
addb
rorb
movsb
movsl
cltd
inc
xorb
inc
aas
and
fmull
pop
mov
dec
rorl
stos
lahf
push
clc
push
setl
sub
mov
xchg
cmc
or
popa
subb
sbb
sbb
inc
xchg
in
xchg
inc
pop
or
xchg
cmp
adc
bound
int
xchg
mov
rcrb
leave
fbld
xchg
and
lret
add
inc
sub
push
inc
sti
and
lods
orl
jmp
mov
pop
or
adc
add
sahf
mov
mov
enter
mov
jle
ljmp
cwtl
out
xchg
mov
pop
xchg
xor
les
lret
jns
cltd
xor
mov
add
mov
mov
or
rcl
or
stc
mov
adc
sbb
mov
jmp
push
cmp
pop
jle
movsb
cmp
pop
cmp
xlat
xor
sbb
aaa
jp
jne
xchg
sub
stos
sarb
mov
pop
xchg
adc
xchg
inc
sbb
mov
rep
mov
aaa
rolb
dec
mov
mov
shll
repz
test
pop
dec
or
push
push
iret
xor
fisubrl
and
or
rclb
add
mov
inc
mov
gs
push
clc
pop
mov
in
jne
loope
mov
push
and
add
fwait
pushf
inc
loope
cli
out
lods
mov
dec
jo
leave
cmpsl
mov
cld
cmp
ret
xor
jbe
cmp
pop
mov
dec
je
push
lds
sub
lods
push
add
mov
inc
jb
pop
int3
insb
pop
sti
lret
cld
and
jge
sub
addb
outsl
andb
popa
pop
add
xchg
jecxz
lods
and
xchg
pushf
shlb
rol
dec
call
or
dec
and
outsb
aas
les
popa
sub
xor
xchg
movsl
add
jo
ss
mov
outsb
in
cli
xchg
add
cmp
sub
push
sbb
insb
fistpll
mov
pop
popf
mov
lret
jo
mov
jmp
pop
xchg
pop
ror
mov
int
sub
fldenv
sbb
into
into
out
pop
inc
jo
movsb
inc
mov
scas
aas
jmp
pop
xor
or
sub
dec
cmp
aad
or
cltd
pop
ret
std
inc
inc
repz
js
pop
fnsave
data16
rol
fisttps
adc
dec
cmp
lahf
push
sti
maxps
sub
push
xor
shl
hlt
mov
mov
ss
sub
or
nop
lea
jns
mov
pop
pop
jo
mov
lret
dec
jns
dec
in
pop
jge
or
fwait
or
test
sti
push
je
mov
popf
das
and
mov
out
dec
aas
jb
imul
pop
push
rorb
loope
imul
mov
scas
popa
dec
insl
adc
ret
sub
dec
jnp
xchg
stos
mov
aam
xchg
out
ret
mov
imul
divl
sub
pop
xor
mov
sbb
dec
in
cli
rcl
addr16
sub
lea
rcrb
jne
push
or
jno
insb
jno
adc
xchg
pushf
mov
loop
insb
add
mov
fidivl
adc
mov
in
lcall
arpl
unpckhps
jge
loop
gs
push
pop
loope
dec
aad
mov
out
mov
jo
sub
rolb
mov
jns
cld
popa
cltd
cmp
ljmp
insb
popa
pop
push
sub
popa
sarb
insl
popf
jnp
in
cli
or
scas
das
gs
ljmp
jnp
inc
sbb
push
inc
pop
dec
bound
cmp
test
sub
cmp
nop
fidivrs
loope
cmc
js
ds
popf
add
lret
mov
xchg
clc
sbbb
hlt
xchg
xor
shlb
pusha
int3
xor
insb
sub
gs
je
mov
hlt
add
and
cmpsb
jp
fwait
mov
cwtl
sbb
fisubl
xchg
rcrl
pop
int
ret
int
int3
jnp
dec
or
fstp
fidivs
bound
dec
arpl
mov
xor
xchg
repz
jge
push
and
or
cmpsb
faddl
inc
pop
into
ds
push
push
or
sbb
or
cmp
pop
mov
cmc
movsl
dec
xor
jno
sub
fs
in
movsl
xchg
sub
movsb
push
lahf
adc
xchg
into
fldcw
mov
movsl
mov
out
enter
inc
enter
pop
repnz
xor
fcoml
inc
iret
cmpsb
cmp
fmull
repz
call
into
add
xchg
xchg
xchg
ret
divb
aad
adc
mov
sbb
add
pop
xlat
jle
push
sbb
mov
in
jb
insl
jne
jne
test
xchg
aad
xlat
int
iret
sbbl
mov
add
pop
cmpsl
jns
insl
mov
xchg
pusha
outsl
inc
mov
lcall
xchg
aam
mov
hlt
lods
pop
test
inc
andb
mov
pop
sbbl
lods
mov
cwtl
gs
mov
je
jge
rcl
mov
push
and
out
ret
or
lods
scas
inc
lds
mov
lret
mov
xchg
jnp
push
or
repz
xor
mov
cmpsb
pop
or
fxch
fadds
pop
mov
loope
cli
out
mov
fsubs
and
popa
mov
push
mov
add
aad
sub
or
sbb
je
or
or
push
pop
in
sahf
sarb
ja
mov
rorl
sub
dec
mov
daa
dec
add
lock
inc
movsb
or
lahf
outsl
out
btsl
insl
jb
loop
movsb
fcom
ret
fs
jns
pop
pop
lock
clc
jle
mov
jnp
inc
sbb
xor
orl
loope
add
popa
fadds
push
lock
int3
stos
inc
sti
hlt
jno
cmpsb
fisubs
into
push
fwait
mov
shrl
nop
pop
and
fistpll
out
xor
sub
and
jmp
xchg
fst
adc
outsb
adc
xorl
rorl
je
push
mov
jnp
lods
xor
scas
daa
pop
xchg
dec
mov
and
mov
int3
daa
xor
xor
shll
fisttps
ror
fsubrs
pop
mov
arpl
lock
xor
pusha
nop
or
popa
test
lcall
hlt
in
nop
lock
mov
dec
pop
dec
lahf
stos
lea
fs
mov
mov
cltd
pop
dec
xor
pusha
cli
ret
adc
sub
lods
xchg
push
rcl
adc
adc
jae
and
xchg
pop
out
outsb
cmpsb
in
sub
test
jl
das
push
outsl
mov
mov
stos
fdivrl
repnz
jne
pop
addb
lds
jl
subl
xlat
adc
lea
fistl
insl
ret
push
loopne
in
and
inc
jl
rcrb
mov
in
xchg
cmc
xchg
pushf
fxtract
into
testb
mov
jnp
cmp
and
jecxz
mov
mov
inc
push
lods
dec
push
sbb
in
into
jle
inc
push
arpl
insb
and
cli
rclb
fistpll
mov
int3
xchg
lods
pop
out
xchg
and
dec
mov
jl
addb
jb
xchg
jae
adc
lods
mov
mov
dec
cld
xor
test
push
jo
cmp
ds
push
into
cmp
inc
aam
addr16
sbb
je
popf
lock
loopne
push
jle
sub
mov
lret
scas
pop
test
xor
inc
out
or
adc
mov
mov
pop
enter
jle
jp
mov
nop
cmpsl
cltd
cmc
adc
es
mov
adcb
pop
pop
xor
sbb
push
push
add
decl
mov
aam
or
lock
sti
test
cmp
add
call
cli
fcoml
sar
int
xor
insl
mov
aaa
dec
cmp
inc
push
stos
lret
mov
xchg
sahf
adc
jmp
mov
adc
enter
cmp
mov
call
sti
adc
push
outsb
popa
testb
sub
mov
mov
sub
mov
nop
popf
mov
mov
cmc
stos
mov
mov
in
repnz
pusha
ret
loop
lcall
ljmp
mov
iret
sbb
pop
jbe
mov
les
xlat
test
xchg
sbb
leave
sbb
repz
outsl
ds
lea
pushf
add
lret
enter
sti
and
ljmp
repz
clc
loope
call
adc
dec
test
pop
push
sbbl
movsl
push
shll
mov
int3
ret
mov
repz
scas
fwait
jle
in
cs
push
inc
jl
ret
cltd
adcl
int3
sub
out
xchg
cmpl
shll
pop
jns
sbb
lock
adc
cmp
arpl
fmul
pusha
push
pop
out
sbb
mov
or
iret
mov
movsb
dec
push
sub
xchg
add
fs
repnz
adc
cmp
test
inc
out
mov
lea
daa
test
pop
call
mov
adc
inc
cli
aaa
xchg
jl
push
adc
cltd
xrelease
rcrl
repz
push
dec
or
cmp
add
imul
stos
push
pop
sahf
adc
imul
insl
mov
add
dec
fistps
adc
mov
mov
bound
sub
or
shlb
test
or
mov
xchg
es
push
cmp
xchg
cmp
out
fcom
ret
leave
dec
into
xchg
fiaddl
adc
push
lret
xor
cmpsl
add
xlat
cs
sub
not
pop
and
and
jae
mov
xor
cmpsb
popf
divl
iret
lock
inc
std
inc
imul
xchg
out
and
mov
je
imul
sub
push
shlb
dec
lds
lret
or
data16
jo
iret
test
cmp
sbb
lods
or
inc
inc
push
push
add
mov
test
push
lahf
leave
or
and
mov
jnp
mov
int3
scas
inc
pop
aam
out
test
insl
jl
filds
push
hlt
ljmp
fmulp
or
inc
inc
loop
mov
call
mov
imul
adcl
ljmp
lods
lret
lds
nop
daa
mov
cmp
jae
jecxz
mov
mov
and
rorb
int3
push
dec
loope
scas
xchg
jp
dec
loopne
push
pop
test
xchg
pushf
push
pop
ss
jecxz
xor
push
popf
dec
es
push
sub
xor
xlat
and
pop
xchg
push
push
sub
jle
pop
sub
lods
dec
inc
sbb
outsl
jb
outsl
enter
sub
popa
arpl
adc
jb
adc
mov
adcl
and
addr16
mov
cwtl
ret
sbb
clc
fwait
jno
inc
loopne
jo
jbe
decl
mov
ss
aam
adc
mov
jle
sarl
mov
dec
jbe
jp
add
aam
popf
dec
out
sub
data16
repnz
mov
mov
int3
addr16
inc
push
or
jp
jg
push
gs
pushf
outsb
mov
xor
jnp
or
fimull
mov
pop
mov
mov
in
dec
pop
ret
arpl
test
cs
insb
pop
fisubl
daa
aad
mov
out
sub
test
imull
xor
mov
mov
cmp
adc
inc
in
mov
mov
sarb
dec
seto
mov
cld
push
adcl
xor
mov
jne
dec
xorb
jg
orb
add
fnstenv
pop
dec
sub
aaa
arpl
add
adc
xor
pop
icebp
sbb
xchg
push
jg
scas
xchg
adc
add
stos
icebp
adc
repnz
lea
xchg
mov
dec
cmp
sbb
lea
loopne
fnstcw
push
stos
inc
cmc
testl
cmp
adc
dec
lock
sti
incb
jp
or
jmp
iret
xor
push
popa
test
in
lods
loopne
push
leave
loope
leave
fbstp
pop
lret
cmp
pop
outsl
ja
enter
ret
cmp
call
push
push
in
mov
shr
cs
ljmp
in
xor
xchg
sub
std
or
sub
aad
mov
pop
xchg
imul
test
xchg
sarb
lret
divb
mov
and
imul
xchg
addr16
or
jbe
xchg
push
pop
mov
je
and
outsb
jecxz
sbb
inc
lods
stos
mov
cmc
mov
inc
cmc
shlb
jno
es
out
mov
lret
mov
pop
adcb
out
mov
and
or
lret
test
jg
sbb
sahf
inc
daa
movb
cli
adc
adc
inc
sbb
mov
inc
fcmovne
sbbb
pop
lcall
in
in
fucomip
outsl
jecxz
or
subl
lods
xchg
dec
sbb
or
adc
xchg
pop
jp
mov
adc
cltd
adc
xchg
imul
and
mov
lds
mov
icebp
hlt
enter
imul
mov
sbb
cwtl
mov
mov
sarl
push
mov
dec
pop
and
jle
out
mov
clc
lods
ret
inc
ror
or
push
loopne
dec
inc
xchg
mov
push
aam
push
pop
or
paddsb
bound
aad
dec
out
mov
adc
movsb
or
sbb
out
ja
push
xchg
mov
ja
mov
sahf
std
cmpb
test
xchg
out
idivb
adc
mov
jge
or
pop
popa
cmp
mov
sbb
pop
adc
or
sbb
fmul
rcr
dec
call
xlat
int
sub
imul
mov
test
sbb
andb
testb
jl
sub
fdivrs
or
loop
mov
pop
cmp
std
das
pop
xor
outsl
cltd
cmp
movl
iret
mov
lret
push
scas
aad
sub
call
ja
lds
insb
arpl
cmp
sbb
or
push
pop
pop
dec
icebp
add
jbe
scas
or
push
repz
idivb
jmp
outsb
push
or
sub
inc
aam
lcall
cmpl
movsb
mov
daa
cwtl
aaa
sahf
push
adc
in
iret
test
jecxz
es
lcall
jns
stos
clc
jbe,pt
and
popf
out
inc
lret
lcall
icebp
mov
dec
inc
sub
adc
or
and
pop
xor
js
or
fimull
mov
std
push
xchg
or
ss
icebp
fidivs
inc
add
int
testb
mov
out
mov
pop
out
imul
inc
scas
hlt
and
and
jl
aaa
cmp
daa
sbb
in
das
repz
mov
scas
lock
dec
daa
add
mov
lods
push
push
stos
ja
push
sahf
pop
aam
jbe
mov
pop
xchg
pop
psrlq
data16
inc
push
filds
mov
lods
xchg
and
jge
loope
movsl
jo
sub
push
or
mov
ret
ret
push
aas
sbb
sub
xchg
sahf
hlt
shl
inc
sbb
aam
jae
push
cmp
and
jge
jge
sbb
lahf
int3
mov
xchg
xchg
and
sbb
push
xchg
dec
mov
jae
in
xchg
add
xchg
or
xchg
ret
sub
shr
mov
fsubl
iret
out
mov
icebp
fistps
clc
xchg
or
ljmp
mov
lahf
push
mov
test
stc
xchg
mov
cld
push
xorb
addb
jecxz
cmp
ja
in
js
pop
sbb
inc
fadds
lcall
mov
adc
cmc
fidivl
imul
lock
mov
inc
lret
mov
push
arpl
mov
stc
out
dec
cmc
mov
sub
aam
xchg
xor
mov
mov
stos
iret
and
adc
pop
dec
adc
jmp
insb
fnstenv
icebp
pop
xor
sub
adc
loope
xchg
repnz
push
xchg
jle
push
pop
jb
movsl
inc
jp
dec
icebp
adc
cmp
cmp
daa
test
test
mov
jle
jne
gs
jnp
ljmp
inc
sub
cmp
dec
cs
ss
popa
mov
lret
push
and
in
test
push
shrl
popf
sbb
fs
gs
lcall
popa
jl
pop
gs
cmc
gs
fisttpl
pop
das
out
xchg
mulb
loop
mul
inc
or
pop
cmc
mov
mov
xor
stos
adc
mov
mov
ljmp
and
mov
js
test
sub
insl
cmpsb
popa
push
jnp
jae
idivb
jnp
icebp
adc
mov
pop
aaa
or
jge
dec
pop
lahf
fs
sbb
jns
push
fldenv
sbb
pop
sub
cmp
jl
in
pop
cmp
rolb
pop
sbb
fsubl
idivl
fwait
aaa
outsb
lret
mov
pop
dec
xor
addr16
xor
fwait
rcrl
push
divl
or
fldpi
lcall
les
xchg
sbb
cmp
imul
mov
repz
push
dec
cltd
sub
or
xor
mov
add
es
testl
cmp
ds
push
fdivr
fnstsw
cmp
sarl
aam
repz
bound
divb
sub
mov
inc
sub
roll
bound
popf
xchg
ljmp
xchg
enter
js
sub
jecxz
push
dec
mov
cmpsl
fdivs
nop
xchg
subl
outsl
leave
inc
pusha
rorb
in
or
push
ret
dec
or
mov
and
leave
cs
inc
xchg
mov
test
scas
xor
sbb
or
and
xchg
push
xchg
les
andb
lods
push
mov
jle
outsb
ljmp
mov
cmpsl
arpl
mov
fwait
inc
sbb
adc
pop
jp
icebp
pop
outsl
bound
push
xchg
push
mov
xchg
dec
sbb
mov
in
mov
scas
gs
or
test
shrl
mov
xchg
enter
cmpsl
mov
ror
jae
and
mov
cmp
roll
rcl
inc
mov
cmp
loope
movsb
pop
rcll
xchg
jne
lock
push
mov
jb
frndint
lds
lret
les
loop
ss
int3
jo
inc
lret
mov
xor
iret
pop
xchg
lret
and
or
push
fsts
inc
jnp
ljmp
lods
jecxz
imul
add
popf
mov
cmp
addr16
push
sub
imul
push
mov
punpckldq
data16
xor
pop
loopne
push
lods
rorb
out
loope
test
jl
iret
shlb
mov
imul
mov
fdivrp
mov
aas
and
sti
enter
mov
shlb
pop
add
jmp
inc
js
inc
push
subl
xor
xchg
dec
xor
or
lahf
test
and
sti
sbb
adc
inc
jecxz
scas
adc
xchg
xchg
mov
cmp
xchg
push
leave
les
notl
mov
push
mov
ficomps
jns
cwtl
lods
iret
in
sub
fcomps
loop
out
hlt
scas
pop
mull
adc
lds
ret
cltd
mov
rclb
dec
mov
push
dec
std
je
mov
mov
push
inc
push
inc
mov
aas
fmull
jnp
mov
mov
lods
nop
cwtl
add
push
loope
or
fcmovb
cmovno
imul
jae
push
cmp
ja
fistps
xchg
and
cmc
and
inc
out
aaa
sbb
dec
out
ret
fldl
data16
shll
std
imul
stos
jb
ss
mov
cltd
es
lods
dec
test
cmpb
xlat
xchg
in
dec
lret
stos
stos
sbb
cmp
xchg
inc
xor
fnstsw
addr16
dec
iret
mov
adc
and
mov
inc
mov
or
sbb
mov
mov
pop
shlb
or
mov
aam
in
stc
fadd
je
fsubp
notl
clc
repnz
cmp
frstor
lcall
inc
or
mov
cmpsl
loopne
pop
movsl
call
mov
sbb
cld
sarl
sub
jmp
fisubs
jno
cmpsb
cmc
xlat
jp
insl
cmp
pandn
test
nop
lret
jae
imul
ja
cmp
or
aaa
lea
dec
addr16
push
or
mov
inc
jg
pop
inc
mov
lret
mov
stc
cmc
and
dec
mov
sbb
fsubl
inc
cld
fidivl
ffreep
and
insl
rcll
fcomps
xor
xchg
push
or
dec
sbb
das
fidivl
insl
push
lods
imul
cltd
dec
inc
lret
test
xchg
mov
mov
xor
jle
sub
cli
add
pop
clc
in
mov
lcall
pop
insl
ja
insl
adc
and
leave
fiaddl
popf
loopne
or
pop
std
sub
ss
mov
dec
xchg
into
jnp
jbe
ret
mov
mov
jg
out
mov
aad
adc
or
dec
xor
outsb
mov
xchg
push
jmp
popa
sbb
xlat
ds
fsts
jp
jle
sbbl
mov
ret
out
push
xor
mov
cmp
jg
lcall
ja
cld
pop
inc
in
mov
xchg
jnp
sbb
mov
add
lds
pusha
adc
push
cmpsb
xor
inc
ss
imul
or
dec
cmp
lea
adc
movsl
lcall
aad
insl
dec
ror
rcll
inc
lods
cmpsl
jmp
or
xchg
std
adc
sbb
inc
cmp
jecxz
fistl
dec
cmp
push
fs
xlat
adc
out
loope
dec
add
out
fstpl
cmp
loopne
mov
push
sbb
pop
push
or
mov
xchg
or
insb
jp
pop
xchg
xor
loopne
xchg
xchg
cli
mov
pusha
sarb
push
ss
sub
divl
ljmp
inc
je
stc
decl
movb
or
push
insb
into
pop
test
mov
pop
cmc
xchg
insb
add
inc
inc
jbe
sbb
shr
ficoml
dec
cmp
cld
push
test
aam
mov
fisttps
sbb
jmp
xchg
jo
in
cmpsl
jo
xchg
aam
notl
cmc
repnz
and
mov
das
test
cmp
outsl
cmp
out
xchg
xor
cmp
lods
lock
and
sbb
xor
loope
or
in
lahf
scas
dec
mov
jne
dec
push
je
mov
or
imul
lods
arpl
shll
stos
jo
fwait
andl
cwtl
xor
dec
lock
and
mov
add
and
cmp
mov
dec
sub
filds
and
cmpsl
or
push
icebp
or
testb
sbb
mov
mov
or
push
push
lret
test
cmp
mov
dec
inc
lea
sub
adc
fsubl
mov
daa
pushf
and
add
xlat
test
pop
ret
sub
jl
in
imull
je
sar
push
jnp
adc
imul
mov
rolb
mov
xchg
xchg
je
sarb
cmp
int
adc
pop
mov
xchg
jmp
push
insb
outsb
testb
xchg
pop
addr16
xchg
add
call
loopne
lahf
roll
data16
xchg
outsl
adcb
push
mov
jb
mov
jmp
cmp
ds
pop
push
into
rcrb
inc
cs
jmp
insb
test
jnp
dec
dec
push
xlat
js
cmp
aas
rcrl
cmp
mov
pop
push
mov
or
in
mov
add
iret
jo
push
jmp
push
stc
das
sub
xlat
cmpsl
jp
or
and
dec
ds
jno
loop
loopne
cmc
xchg
and
pop
das
lods
inc
jl
add
aam
sbb
push
add
cli
mov
push
in
xor
inc
cmp
sub
cmp
fs
mov
lahf
add
inc
pop
mov
and
xchg
in
pop
ja
mov
inc
pop
inc
sub
fisubrl
cmp
xchg
mov
pop
pop
add
push
and
adc
xchg
mov
add
lock
sbb
inc
jg
les
iret
inc
out
xor
movsl
jmp
mov
sbb
shr
xchg
adc
xor
mov
sbb
jecxz
aam
pop
test
sarl
inc
je
sahf
movsb
add
xchg
mov
aaa
fincstp
add
mov
xchg
pop
jp
fdivrp
sub
insb
fcomip
idiv
out
mov
icebp
mov
sub
jne
sahf
popf
shl
inc
lret
out
push
stc
jmp
fldl
fadds
inc
adc
fsubr
pop
lods
xchg
lods
mov
and
mov
sbb
mov
push
jb
pop
push
in
ja
int3
scas
lahf
adc
nop
pushf
sbb
push
leave
mov
cltd
js
cwtl
test
nop
pop
mov
aam
mov
insb
aad
or
imul
or
bound
ret
inc
hlt
movsl
cmp
imul
cmpsl
imul
xor
test
inc
ret
inc
test
add
xchg
mov
imul
jle,pt
outsl
inc
fstpt
stos
add
push
shl
or
pushf
xchg
pop
outsb
or
inc
cmp
bnd
out
pop
fxch
mov
and
scas
aad
rclb
inc
xor
xchg
data16
mov
mov
test
and
lds
fbld
cli
pop
dec
je
dec
cwtl
lds
test
ljmp
xor
ret
jecxz
aad
ret
rcrl
mov
ds
out
hlt
icebp
lret
dec
xor
sub
mov
xchg
inc
mov
cmpsb
jnp
mov
xchg
or
adc
mov
mov
sub
sbb
sti
test
jb
sbb
pusha
sbbb
xor
lcall
jno
je
sbb
loope
jno
aam
or
outsl
jle
adc
in
lea
adc
int
fidivrl
push
gs
mov
or
into
push
pop
or
jl
stos
pop
test
mov
push
je
nop
into
arpl
mov
cmp
out
lret
sbb
fisubrs
stos
leave
dec
mov
dec
hlt
jbe
dec
mov
fdivr
jo,pt
repnz
push
jns
dec
jb
jno
and
and
notl
fbstp
maxps
mov
inc
mov
and
xchg
sbb
and
jg
inc
and
loop
dec
ficompl
xor
je
sbb
mov
or
fistl
cmpl
ss
std
add
cmpsb
sarb
add
pop
call
aad
sti
sub
fists
ret
mov
mov
mov
or
mov
cmp
add
movsl
stc
into
xor
xchg
dec
lret
cs
aas
fiadds
repz
cltd
push
pop
mov
mov
aad
out
aaa
adc
jge
divb
jl
push
inc
mov
dec
push
cmpsl
jb
sbb
popl
jle
aam
nop
dec
in
jns
pop
stc
inc
dec
xor
daa
loopne
inc
mov
mov
popa
les
jbe
lcall
shlb
call
pusha
fsubrs
rcl
xchg
lods
insb
fwait
repz
sub
cltd
sbb
les
in
adc
addb
xor
outsb
mov
mov
jp
dec
and
sbb
out
push
das
mov
push
sub
mov
dec
clc
pop
dec
test
pusha
adc
jg
lods
add
js
inc
mov
push
stos
stos
dec
ss
test
sbbl
dec
push
rorb
aaa
adc
cs
sub
fbld
mov
add
adc
adc
or
mov
dec
js
xor
sbb
iret
xor
lods
jae
fstpt
pusha
push
imul
mov
xchg
rcll
lods
inc
ret
cmp
jl
fs
loop
add
pop
data16
aas
out
inc
jbe
fld
out
cmc
cmp
push
and
clc
mov
add
xchg
movsl
push
mov
stos
repnz
cmp
sbb
jne
orb
cmpsb
sub
int
pop
repz
repnz
mov
mov
repnz
push
scas
imul
mov
cmpsb
mov
je
xchg
or
add
mov
push
and
in
cli
push
hlt
mov
push
jecxz
orl
sbb
int3
adc
nop
iret
in
mov
lods
mov
or
jmp
jge
pop
cmpsb
push
pop
rcrb
jle
shll
xlat
pop
mov
push
add
ss
push
sbb
jmp
or
and
or
out
push
lcall
test
xchg
cltd
repz
xchg
les
jle
shrb
dec
jne
mov
iret
pusha
insl
loop
ret
mov
sub
inc
arpl
mov
mov
cmpsl
cwtl
push
push
pmulhw
fsubrl
lods
and
or
mov
icebp
push
dec
xchg
dec
std
pop
sub
pop
push
cmc
push
lock
out
xor
inc
cmp
repz
cmp
push
push
sbb
pop
sti
dec
dec
jo
push
leave
into
test
mov
cmpsl
nop
insb
dec
mov
mov
mov
or
push
and
icebp
les
iret
or
js
dec
in
ds
jne
cmp
ja
push
rorl
std
loope
addr16
int3
push
fisttpl
xchg
dec
xchg
insb
xor
push
sub
call
rcll
pop
out
lods
jg
pusha
mov
stos
into
call
dec
out
jbe
mov
cmpsb
imull
js
lock
push
cs
stos
stos
xchg
fisubrl
outsl
mov
mov
test
sbb
mov
push
fdivr
fwait
push
ret
sbb
test
inc
or
je
inc
inc
outsb
xor
orl
add
imul
sbb
and
or
roll
test
dec
shlb
or
sub
shrb
call
imul
adc
ret
outsb
stc
dec
neg
aaa
call
out
push
dec
test
adc
or
inc
or
xlat
push
insl
inc
sbb
arpl
or
xchg
add
rcll
xchg
fs
mov
leave
fnstsw
jg
decl
cli
lods
imul
imul
jbe,pn
inc
fidivl
and
or
lret
sbb
cs
fisttpll
test
pop
xchg
jl
pushf
dec
jae
mov
push
push
inc
loopne
std
push
pop
lret
cmp
mov
arpl
sahf
das
je
pop
jns
cmp
stos
test
mov
xchg
push
push
mov
push
mov
xchg
pop
mov
cmp
jmp
pop
in
jmp
aaa
shll
pusha
push
dec
std
mov
adc
cmp
fwait
loopne
jp
cld
or
les
loop
mov
mov
mov
jmp
gs
enter
push
pop
sti
inc
loope
shll
adc
test
movzwl
jae
pop
stos
in
repz
ljmp
clc
clc
cmpb
in
jle
sbb
js
dec
sbb
sbb
inc
jge
aad
pop
jp
push
lret
push
outsl
out
cmp
and
loopne
mov
nop
arpl
fnstsw
mov
push
push
adc
jmp
ljmp
pushf
sbb
arpl
push
fldt
pop
sub
mov
lcall
dec
add
xor
in
adc
push
shll
inc
lahf
inc
cwtl
mov
mov
adc
cmpb
sub
and
xor
test
sarl
movsl
push
xor
cmovne
lea
push
aad
mov
les
js
sbb
mov
test
dec
mov
inc
es
sbb
iret
test
in
movsl
testb
stc
iret
test
aas
mov
push
inc
leave
test
adc
and
mov
shlb
mov
push
and
cld
jns
lcall
adc
and
push
dec
mov
push
sub
inc
xor
pop
sub
push
cmp
lret
cli
es
pop
cmp
mov
std
mov
and
jbe
int
and
push
push
lret
mov
call
jb
push
xchg
jp
scas
bound
cld
ficomps
sub
inc
testb
or
scas
subb
add
loopne
aaa
pusha
flds
testb
sbb
push
add
ljmp
add
inc
mov
fcomp
add
scas
dec
add
stos
subl
sub
rcrb
loop
or
xchg
jbe
dec
loope
in
aad
jne
loope
push
sub
mov
outsl
scas
pop
mov
jecxz
sub
movsb
movsl
test
and
cmp
das
inc
xorb
jo
repnz
jle
and
in
cmc
adc
rolb
adc
gs
rcrb
add
mull
in
pop
loope
mov
inc
mov
in
cltd
mov
pop
addr16
mov
je
daa
dec
loopne
pop
inc
push
rclb
pushf
lock
cmp
xor
mov
and
sub
fimull
xchg
xor
cmp
sar
lods
add
xchg
mov
fsubrs
xchg
mov
jge
roll
adc
adc
sub
mov
sbb
fcmovne
adc
addl
pop
push
sub
dec
loopne
ret
out
out
in
pop
shll
rcr
fdivrs
inc
imul
lret
jl
mov
pop
dec
arpl
pop
add
jmp
or
lret
ja
cli
push
xchg
sbb
popf
and
sbb
add
and
mov
push
jmp
mov
icebp
cmpsb
xor
pop
cmpsl
in
add
mov
lea
push
rcll
push
popa
call
filds
aad
sub
adc
dec
mov
cltd
ljmp
cmp
lods
in
popa
pusha
inc
jne
cmp
clc
jl
inc
lods
test
imul
sub
pusha
push
and
ret
out
cmp
out
repz
inc
insl
in
xlat
pop
adc
xchg
add
mov
leave
les
subl
mov
jecxz
movq
scas
daa
int
dec
cwtl
pop
int3
dec
inc
xchg
fdivl
shl
pop
sbb
jne
aad
lret
xor
test
and
sub
lods
add
sub
loope
mov
sbb
lods
jle
out
sub
pop
xor
cmp
inc
xor
ret
sahf
arpl
ret
jmp
adc
gs
jno
in
jg
cmp
cmp
nop
mov
sbb
pop
adc
negb
and
dec
sub
mov
cvtps2pi
jg
shl
dec
je
sub
dec
cmp
xchg
cmp
out
dec
iret
push
bound
xlat
adcb
adc
ret
push
jle
and
push
cmp
lahf
sahf
sbb
mov
cltd
sti
stos
repnz
imul
cpuid
sti
mov
cmp
jl
imul
les
dec
push
addr16
dec
in
xor
out
cmp
lock
ds
scas
and
fnstcw
jne
ljmp
sbb
ret
push
push
xchg
in
jnp
inc
mov
int3
mov
pop
add
std
sbb
fwait
stos
sub
int
lret
out
out
mov
mov
jp
mov
repz
outsl
jae
mov
rcl
add
popa
sarl
jle
cmp
out
sahf
ss
and
orps
fs
mov
push
ret
pushf
sub
pop
lret
lcall
iret
jp
lret
pop
sub
xchg
or
xchg
cmpsb
sbb
jl
loope
fimull
jbe
inc
pop
jecxz
cmpsb
push
mov
lcall
pusha
jns
pop
pop
push
add
mov
rorl
inc
xor
xlat
inc
mov
sbb
pop
mov
int
ret
fdivl
sbb
add
icebp
jbe
das
repnz
add
ds
lea
iret
scas
push
fsubl
fdivrs
mov
testb
stos
int3
outsb
fs
xchg
pop
sub
inc
imul
fcompl
inc
push
sub
sub
cmp
stc
jge
push
loope
xchg
out
cmp
jb
pop
jle
inc
mov
repnz
aas
aas
int3
out
dec
pop
mov
cmpsb
add
ss
sbbb
scas
pop
xor
ret
lahf
lcall
mov
nop
or
roll
int3
outsl
lahf
inc
daa
sti
popa
rcrl
or
pop
cmp
mov
lods
add
ja
sub
xchg
insl
sbb
or
mov
cmp
inc
int
nop
or
sbb
dec
ja
out
scas
sbb
pusha
or
leave
out
sub
adc
iret
fildl
mov
jnp
repz
adc
adc
aam
xchg
cmp
sbbb
sbb
lock
fldenv
push
jecxz
sub
push
lods
jmp
cld
cmpsb
scas
shl
stos
pop
pop
test
cltd
pop
mov
and
jae
mov
dec
loope
aad
mov
popf
inc
fcmovbe
inc
push
jo
and
sub
les
mov
enter
xchg
inc
insb
sbb
enter
push
xor
cmp
pop
inc
cmp
in
mov
jle
lret
addr16
pop
dec
cwtl
cmp
pop
xlat
cmp
mov
mov
lahf
notb
into
jge
fs
jb
jg
cltd
dec
push
pusha
gs
adc
test
mov
mov
cmpsb
rcl
cmovp
popl
fnstcw
add
addl
cs
ljmp
jb
fs
in
in
or
sbb
mov
test
outsb
pop
sub
mov
fisttpll
fwait
inc
repz
lcall
sbb
cli
in
sub
push
mov
pop
cmp
cmpsl
test
xchg
imul
sub
dec
cmc
mov
pop
je
stc
testl
in
sbb
cmp
sub
pop
es
enter
jle
mov
int
dec
mov
ljmp
in
and
and
xor
mov
lret
push
test
dec
clc
loope
mov
pop
aad
imul
cmp
cmp
lahf
scas
ljmp
sub
or
pushfw
popf
in
mov
mov
inc
xchg
and
leave
lahf
inc
sar
xchg
jge
sub
test
and
jbe
fimull
negb
shrl
adc
adc
dec
push
ret
pop
jmp
test
enter
adc
rorl
fistps
scas
rcrb
fmull
mov
test
adc
jp
out
pusha
and
cmp
cmp
cmp
inc
xchg
mov
pop
aas
jo
adc
mov
cmpsb
or
test
sti
fbstp
inc
test
loop
dec
in
out
imul
dec
call
pop
or
bound
ror
adc
jb
mov
add
divb
inc
aad
push
jl
into
cmp
sbb
mov
jae
xchg
sahf
test
in
in
push
and
jmp
jno
adcb
add
clc
mov
dec
mov
mov
or
inc
dec
mov
mov
fnsave
hlt
and
sarl
xchg
shrb
mov
xor
fcom
lea
mov
sarl
push
popf
push
fsubrl
imul
movsb
imul
mov
stos
insw
xor
ror
sbb
mov
and
inc
int3
iret
jl
push
test
pop
xchg
sbb
pop
pop
sarl
jbe
hlt
mov
adc
pop
xor
daa
std
pusha
add
daa
xchg
imul
inc
arpl
pop
push
adc
addr16
and
push
pop
pop
fs
inc
jnp
mov
pusha
jle
push
std
jg
jo
ja
stos
scas
sbb
xchg
or
xor
int3
test
cmp
inc
adc
gs
and
add
jnp
into
enter
push
or
push
mov
jg
clc
ljmp
or
adc
mov
xor
adc
ja
and
cmp
je
cli
mov
jge
lds
pop
call
add
cmpsb
inc
lods
jo
lods
pop
lods
cmp
aaa
out
or
and
fstps
hlt
add
inc
insl
aam
mov
mov
lret
mov
bound
out
pop
sub
movsb
xchg
inc
xor
lahf
filds
xlat
cmp
rol
sbb
daa
in
jo
push
dec
mov
arpl
out
pop
or
inc
push
cwtl
pop
cmpsb
stos
pop
dec
push
into
or
cld
lahf
lods
nop
loopne
sbb
add
or
lock
dec
mov
add
ja
jns
cli
fcoms
in
mov
ret
popf
push
push
es
pushf
inc
scas
add
jo
pop
add
or
push
sahf
xchg
mov
mov
pop
lahf
xchg
cmp
mov
dec
mov
or
iret
inc
repnz
andl
xor
scas
mov
popa
daa
pusha
adc
out
mov
xchg
and
and
iret
mov
popa
xchg
sub
fisttpll
xchg
inc
jge
push
scas
jmp
and
push
mov
cmp
add
fldl
bound
sub
aas
inc
call
adc
das
xor
add
in
or
inc
cmc
mov
and
cmp
mov
sbb
hlt
mov
adc
jo
pop
mov
daa
repz
scas
inc
cs
dec
ss
test
xor
and
je
ljmp
push
in
jle
out
loopne
push
cmp
gs
pop
pop
xlat
hlt
jbe
mov
push
inc
xchg
out
pop
ret
mov
push
popf
and
sahf
xchg
pop
xchg
or
pushf
add
test
xchg
es
and
js
mov
popf
icebp
test
push
test
loope
lret
cwtl
xor
inc
aaa
pop
xchg
cmpsl
cmc
jnp
in
lret
andl
popf
les
dec
jo
jge
push
push
cmc
enter
jmp
push
mov
out
xchg
push
jb
pop
out
lret
push
push
test
sub
je
adc
sub
sbb
inc
jne
neg
pop
dec
addr16
inc
dec
xlat
insb
mov
xor
bnd
cmp
mov
cmp
or
inc
lahf
lods
add
ret
and
loopne
cmc
es
jl
jno
das
lods
testl
pop
sbb
pop
stos
bnd
mov
das
test
int3
xor
or
sti
negl
enter
xchg
push
fsubr
mov
push
or
mov
sbb
js
sbbb
add
xchg
test
dec
sub
popa
outsb
mov
mov
mov
cmpsb
mov
mov
in
add
cmpsb
and
jnp
dec
mov
xor
dec
xor
rep
dec
stos
and
es
mov
mov
push
sti
addr16
loop
aad
pop
loope
push
xchg
jb
pop
cmp
adc
push
dec
dec
mov
jmp
cmp
js
imul
xor
call
jecxz
and
pop
inc
push
push
pop
movsb
xlat
inc
fisttpll
lods
cmc
fildll
sahf
in
pushf
dec
xchg
or
add
ret
xor
xchg
in
sahf
mov
cmc
jp
sub
sbb
ret
dec
insb
ficoml
push
pusha
cmovne
rcrb
sti
xor
cmp
fdivrs
cli
dec
pushf
nop
jl
nop
dec
lret
pusha
xor
mov
adc
icebp
int
sarl
sti
pop
sbb
insl
push
popa
cmp
decl
pop
xrelease
cli
jbe
push
inc
jo
out
and
out
divl
cld
lcall
jge
rcrl
lods
sub
aad
inc
lret
sahf
cmpsl
or
adc
ret
xor
cwtl
or
dec
aam
cmpsb
or
sub
fwait
dec
lret
push
aas
dec
hlt
insl
and
stc
test
cmpsl
scas
jecxz
lea
mov
inc
sbb
daa
add
sbb
inc
inc
mov
int3
jmp
filds
lods
or
xor
push
scas
inc
mov
jge
nop
fisubrs
cmp
cmp
loop
mov
xchg
sbb
jecxz
jp
dec
cs
add
inc
push
or
int3
xor
pop
mov
stos
iret
sahf
jnp
ljmp
mov
lcall
sarb
int3
mov
hlt
divb
dec
sub
dec
and
sub
xor
mov
and
test
or
mov
fbld
dec
sahf
pop
xlat
test
cld
push
sti
sub
mov
test
xchg
mov
js
xchg
lahf
add
push
pop
out
or
adc
cwtl
std
push
inc
fnstsw
repz
push
inc
pushl
jecxz
mov
pop
jns
lret
popa
outsb
lods
mov
fwait
jb
and
inc
pop
inc
or
into
rclb
mov
jbe
imul
dec
jle
dec
orl
cmp
sub
xchg
cmp
cwtl
popa
add
dec
cmp
pop
sbb
lods
data16
lods
hlt
lcall
gs
mov
leave
mov
pop
cmp
dec
bound
jmp
mov
fwait
lea
clc
mov
mov
sar
icebp
ja
into
mov
push
cmp
les
push
arpl
clc
push
or
mov
mov
add
lret
xchg
movsb
xchg
cmpl
pop
test
inc
xchg
fnstenv
test
mov
mov
stos
fcmovbe
outsb
inc
cmp
add
and
sbb
jge
pop
out
push
rorl
cmp
repz
inc
rolb
daa
sbbb
push
push
mov
in
pushl
dec
and
mov
dec
push
or
ret
imul
mov
cmpb
insl
mov
pop
xchg
es
mov
insl
arpl
inc
and
jnp
out
jne
or
gs
mov
leave
ds
notb
sbb
cmp
lock
xchg
jno
xor
push
fsts
sti
cs
or
lret
and
loope
aas
lods
sbb
stc
push
lock
loope
imul
mov
cmc
rcrl
mov
and
cmp
cmp
call
repz
and
iret
and
repz
in
rorb
or
inc
mov
daa
pop
pop
mov
scas
or
cli
dec
sub
test
inc
pop
mov
outsl
std
inc
xor
cmp
push
jo
inc
adc
add
ret
shr
pop
mov
add
jg
mov
xorl
add
jmp
sbb
fstpl
push
gs
dec
inc
mov
inc
jge
mov
adc
add
mov
inc
orl
or
outsb
push
jnp
dec
jnp
into
inc
ffree
pop
popa
mov
inc
add
xlat
or
test
lock
cmpl
add
test
negl
hlt
inc
mov
xorl
mov
jbe
loopne
sub
popf
rolb
bound
xchg
inc
xlat
lret
pop
push
sti
sbb
stos
dec
mov
push
sbb
lock
into
xor
out
mov
mov
jnp
sarl
jge
in
lret
outsl
push
xchg
decb
bound
fmul
bound
mov
cmp
pop
repnz
push
adc
and
out
jl
mov
fisttpl
mov
push
xor
daa
mov
loop
push
mov
movsb
filds
and
pop
mov
xchg
mov
lods
jo
js
daa
cmp
jnp
dec
dec
jg
stos
dec
xchg
and
adc
fbstp
adc
push
add
aaa
mov
das
repz
cli
inc
shll
aas
addr16
movsl
repnz
fnstsw
mov
or
sub
pop
lods
movb
mov
xchg
jle
int
aaa
inc
enter
into
xchg
dec
icebp
jne
mov
pop
lret
cmp
cwtl
push
test
stc
inc
mov
shll
stos
jg
inc
bound
xchg
cmp
push
mov
icebp
xor
sbbl
dec
jb
rcr
lahf
xor
dec
push
mulb
jg
out
adc
add
loopne
lods
mov
or
pop
sbb
cmpl
push
adc
xor
rorl
inc
jb
pop
mov
test
pop
in
leave
rolb
jnp
stos
outsl
shrl
xor
jnp
faddl
pop
rclb
pushf
stc
mov
pop
out
cmp
sub
leave
imul
xlat
jmp
sbb
adc
mov
push
jbe
mov
push
lret
pop
inc
xor
push
dec
insb
je
fimuls
adc
in
push
js
lcall
jbe
mov
mov
xchg
cli
repz
fxch
inc
orb
xchg
jo
add
jno
daa
inc
cmpsl
jmp
aad
call
push
repnz
pushf
mov
dec
inc
popf
push
mov
and
pusha
cmp
int
shl
sbb
jg
xor
xchg
sub
mov
rcrb
scas
xchg
mov
arpl
push
cmpsb
cwtl
add
leave
jae
subb
mov
mov
in
pop
nop
mov
fmul
inc
pop
jp
ss
je
shll
sbb
jmp
or
push
ret
jle
xchg
arpl
imul
int
sahf
fld
xchg
xchg
negl
bound
sub
ds
cmpsl
pop
mov
sbb
pop
push
jl
cmp
shr
icebp
adc
jp
xor
insl
jb
mov
push
pop
shrb
testb
repz
xor
push
aas
shlb
xlat
mov
push
and
mov
les
jp
mov
mov
fdivr
scas
addr16
out
inc
mov
sub
je
lods
je
mov
jp
jbe
cltd
mov
mov
loop
and
out
pop
lds
lea
pop
mov
ja
sbb
ljmp
inc
add
jo
pop
push
ret
lret
adc
stos
dec
int3
sbb
add
stos
xlat
push
mov
inc
and
cld
mov
int
push
xchg
loope
das
xchg
jo
jbe
pop
dec
jns
in
pushl
push
add
rorb
pop
lret
lds
push
jmp
sbb
sub
cmp
aam
or
int3
dec
movsb
sub
mov
insb
loopne
xchg
xor
rep
cmp
imul
add
lods
lret
shll
fldcw
jno
sub
dec
es
ss
dec
sbb
inc
fmull
add
jbe
je
out
jp
push
addr16
andl
mov
out
sahf
das
xchg
in
xor
call
xor
xchg
scas
sub
test
mov
ja
push
xchg
push
jmp
adc
fdivl
lods
fxch
cmp
popf
jge
sbb
xor
fsincos
inc
pop
cld
gs
cwtl
lock
inc
out
xor
xchg
mov
xorb
add
push
js
jns
aam
leave
push
jnp
insb
push
out
cwtl
arpl
add
mov
jae
int3
mov
bound
lret
mov
jno
outsb
jmp
rorb
iret
xor
fwait
xchg
push
push
in
movb
clc
sbb
pop
daa
std
sub
push
outsb
add
mov
xor
imul
xor
add
daa
lahf
imul
push
lods
sub
dec
push
js
dec
les
pop
mov
xor
dec
mov
andb
xchg
enter
frstor
xor
test
lods
das
add
daa
mulb
mov
daa
sbb
fstpt
out
pop
jecxz
jecxz
and
mov
xor
sbb
mov
mov
cmpsb
xchg
push
leave
add
inc
xor
push
xchg
dec
inc
sub
add
pop
sub
add
mov
inc
cltd
inc
push
push
dec
out
ljmp
fildl
xlat
pop
cmp
cli
addl
cld
loope
lock
lahf
mov
ja
sub
mov
cmpsb
mov
mov
lcall
xor
leave
jb
sbb
call
sar
mov
sarb
scas
iret
ret
mov
jle
stc
mov
stos
hlt
lods
sbb
push
push
bound
add
jle
inc
jo
fwait
ja
or
mov
sub
adc
pop
cwtl
pop
insb
aam
rorl
popf
add
jb
lcall
xchg
adc
outsb
iret
lret
adc
and
push
sar
push
inc
pop
addr16
push
sub
mov
in
add
inc
pop
and
es
and
stc
ds
gs
outsl
mov
gs
jle
mov
gs
int
imul
or
fs
and
cmp
cmp
mov
cmp
dec
clc
push
xor
adc
mov
mov
rclb
out
push
nop
cmp
xor
and
inc
addb
add
shll
jo
daa
shll
push
dec
mov
mov
xchg
leave
insb
int
pop
adc
shrb
dec
rcr
jecxz
cmpsl
pop
push
push
lea
pop
mov
xchg
push
ljmp
stos
xchg
jbe
in
jns
mov
mov
pop
testl
pop
push
xchg
mov
xchg
outsb
je
loopne
add
push
mov
fs
cmpsl
sahf
mov
mov
ds
sbb
adc
add
xchg
sahf
inc
pusha
xchg
gs
test
pop
stc
mov
scas
daa
xchg
xor
insb
push
das
jae
adc
mov
jb
inc
inc
dec
pushf
sbb
les
xor
cmpsb
cli
sub
inc
stos
mov
in
mov
ja
mov
mov
cmpsl
inc
dec
pop
and
cmp
mov
insl
mov
insl
iret
push
and
stos
add
mov
push
lods
xchg
cmpsb
xchg
pop
pop
xor
cmp
mov
in
popf
add
xchg
cmc
and
xor
mov
xchg
orb
andnps
pop
aad
xor
faddl
push
xor
ror
in
cmpb
data16
or
cmp
mov
decb
int3
cmp
repz
loope
lahf
mov
int
cli
aam
aam
sbb
ror
cs
into
fbld
jl
xor
xorb
rol
pusha
fistpl
mov
pop
aas
lods
rcrb
or
sub
or
add
ja
cltd
loopne
clc
das
gs
pop
cltd
and
and
mov
stos
cs
xchg
xchg
lahf
pusha
mov
add
fcmovu
adc
inc
out
sub
mov
hlt
test
test
aad
or
mov
filds
jecxz
cld
dec
int
andl
jg
int
in
push
lea
dec
jnp
rcll
sbb
cwtl
outsb
movlps
fdivrs
lret
jo
mov
add
sub
pop
dec
subb
lods
inc
cltd
in
mov
adc
fdivl
xchg
or
xor
dec
fsubrp
inc
clc
in
jno
lods
sbb
mov
mov
mov
clc
mov
jmp
dec
stos
sbb
xor
xchg
pop
in
pop
in
sarb
xchg
fwait
push
rcrb
mov
repz
jne
jbe
sbb
ja
and
iret
aam
insb
test
push
push
push
flds
dec
push
test
cmp
push
popf
and
lret
push
mov
cmp
mov
es
push
pop
inc
bound
daa
insl
or
pop
inc
xchg
add
les
ret
adc
and
hlt
cmpl
pop
sbb
cld
pop
mov
pop
add
xchg
pop
dec
mov
jbe
int
or
push
xchg
adc
scas
mov
push
aam
and
pop
loop
hlt
inc
cmp
sbb
mov
sbbl
out
and
insb
hlt
push
dec
sbbb
cmp
fisttps
popl
mov
lds
mov
fmuls
adc
cli
mov
push
cmp
pusha
sub
ljmp
jb
hlt
push
cli
faddp
aam
pop
outsl
adc
pop
and
lcall
cmp
xchg
cltd
out
arpl
pushf
imul
out
test
jno
push
inc
cs
mov
mov
sbb
out
inc
dec
idivl
rolb
in
inc
test
cmp
dec
daa
and
test
mov
filds
cmpl
jns
or
push
jae
xlat
scas
iret
lret
mov
and
adc
fdivs
pop
mov
inc
scas
cli
xchg
xor
js
xor
fcmovu
add
imulb
inc
test
lods
pop
or
sahf
fdivl
aas
jbe
das
mul
fs
pop
or
mov
or
mov
mov
xchg
adc
sbb
je
cmp
movsb
inc
mov
inc
rolb
dec
push
lea
jo
testl
fucomp
sbb
pop
sar
gs
lcall
loopne
jge
rolb
mov
imul
pop
mov
fstpt
sti
clc
pop
pop
lahf
sub
lahf
add
mov
cltd
sub
xor
cmpsb
xchg
push
xchg
out
enter
cmpsb
add
push
adc
jae
icebp
push
add
or
cmpl
xor
inc
sbb
ds
test
jo
shlb
cmpsb
cmpsb
arpl
inc
xchg
outsb
fwait
push
sub
cmp
mov
push
xchg
jnp
xor
dec
imull
testl
mov
lock
push
fs
stc
mov
cmpsl
jo
xor
insb
movsb
test
stos
scas
pop
adc
inc
loop
mov
lahf
xor
dec
push
sarl
pop
in
mov
stc
pop
das
std
jg
bound
or
push
pop
adc
mov
subb
inc
or
fdivs
jne
shlb
addr16
jmp
dec
xchg
xor
lock
push
mov
fwait
hlt
jb
mov
adc
pop
mov
mov
adc
xchg
add
inc
mov
testb
pop
or
sbb
jecxz
lahf
les
mov
add
sbb
mov
orl
out
jmp
dec
adc
sbb
xchg
inc
loope
mov
mov
inc
cmp
sti
test
xchg
sbb
pusha
inc
sbb
call
and
cwtl
pop
and
insl
pusha
popf
loopne
push
decl
mov
out
movsb
pop
and
sbb
xchg
pop
fwait
cmc
es
fnstsw
into
call
jbe
xchg
xor
stc
push
fs
xor
mov
mov
push
aaa
add
inc
mov
sahf
scas
lahf
ds
repnz
pop
and
pop
mov
jg
andl
pop
adc
rorb
jns
xor
dec
outsl
sahf
jl
cmpsl
cmp
inc
cmpsl
icebp
jns
sbb
cs
cli
movlps
jmp
sbb
adc
mov
popf
jne
cmp
xchg
inc
sub
cmpsb
xlat
lods
jbe
jmp
pop
xlat
jge
orl
jno
sti
cltd
stc
pop
dec
dec
sbb
test
xor
aas
and
or
ret
loop
and
dec
dec
dec
jnp
out
lcall
test
enter
adc
mov
in
or
push
and
xlat
or
jl
hlt
rcll
add
rclb
mov
mov
jmp
xlat
or
jns
nop
inc
pop
mov
imul
mov
lds
test
dec
test
call
inc
push
std
sub
ja
xor
jns
hlt
pop
add
into
movsb
insl
adc
pop
fwait
inc
fsubrl
sbb
jnp
outsb
xor
mov
ss
test
add
sub
push
xchg
xchg
clc
into
jl
mov
cmp
fisubl
push
cmp
cmpsb
and
repnz
ljmp
out
in
push
sub
int3
cmp
ret
movsb
mov
xchg
pushf
sbb
mov
lret
fsubl
addr16
test
fs
out
mov
mov
es
mov
xchg
pop
pop
pop
lfs
aad
pushf
ja
push
sti
push
push
or
or
cmp
dec
data16
cmovs
add
fs
aaa
pop
jmp
lcall
sbb
push
mov
sbb
sbb
in
sbb
pop
jle
and
inc
imull
subl
sahf
push
sahf
jmp
rcr
les
add
push
mov
jle
pop
test
sbb
add
fistpl
negb
xchg
andl
jl
je
mov
add
and
dec
cli
adc
idivl
ret
push
lcall
jp
mov
mov
sti
push
jp
sbb
fdivrs
scas
sbb
sarl
aam
clc
adc
aam
cmpsl
rcrb
inc
test
iret
adc
inc
inc
dec
ds
sbb
xchg
xor
aam
mov
ja
inc
sbb
mov
sbb
leave
rolb
sti
and
sbb
scas
or
loopne
sti
fsubrs
and
clc
xchg
out
cltd
cltd
inc
es
incb
jge
adc
mov
fwait
out
cmp
xchg
jp
les
nop
pop
out
mov
push
xchg
cld
jbe
ret
xchg
adc
ljmp
scas
fsubs
mov
data16
add
sbb
loope
inc
mov
inc
rol
mov
das
call
cld
push
movsb
shrb
add
or
jl
cmpsl
pop
pushf
mov
pushf
clc
cltd
xor
mov
imul
push
lods
dec
jmp
pop
push
imul
adc
mov
cmpsb
push
stos
xchg
cmp
sahf
hlt
push
insb
xor
push
mov
insl
icebp
sbb
push
clc
pop
or
and
dec
push
sub
and
shrb
rclb
flds
gs
aam
push
test
mov
jge
inc
pop
inc
add
lahf
xchg
mov
cmp
pop
pushf
mov
adc
pop
dec
push
mov
out
or
inc
lea
pop
push
lcall
rorl
cwtl
les
in
mov
lcall
mov
push
fmull
push
sahf
or
dec
fdiv
mov
adc
xlat
mov
imul
adc
pop
mov
aaa
fisttps
aam
test
outsl
inc
xchg
pop
mov
fstps
rcll
call
sub
sub
dec
sbb
je
hlt
mov
adc
lds
add
or
or
out
inc
cmp
sbb
mov
and
lret
mov
xor
and
sbb
dec
dec
cwtl
sbb
pusha
and
lea
aam
into
xchg
out
add
push
mov
or
mov
popa
xor
or
hlt
push
inc
mov
sarb
fidivs
mov
cmp
mov
ja
cmp
rolb
inc
or
call
sub
mov
sbb
sahf
jmp
or
push
bound
push
add
mov
adc
cmc
stc
mov
xor
push
in
push
mov
das
popa
lret
cwtl
js
and
mov
jae
movsl
in
fisubl
out
jnp
adc
js
add
in
lods
mov
daa
jle
pop
jo
mov
jae
mov
lret
add
jle
out
jne
testb
movsl
in
cmp
xlat
fnsetpm(287
nop
aam
test
add
and
into
xchg
jae
mov
popf
sbb
rol
jp
sub
test
cli
negl
in
in
or
data16
test
push
sub
and
mov
push
out
mov
andb
pop
cmp
mov
xchg
or
add
and
jae
ret
lock
pop
loope
mov
mov
fwait
subl
adc
cmpsl
stos
fiadds
dec
repnz
popf
dec
les
fwait
xor
ds
lods
cltd
dec
cmp
inc
xchg
jne
lret
insl
mov
in
loop
outsl
lods
xor
sbb
scas
pop
cltd
je
test
imulb
add
and
xor
and
xor
mov
mov
js
xlat
shl
insl
pushf
cmp
push
push
dec
dec
mov
adcb
mov
enter
aas
ret
push
mov
out
push
dec
cltd
ficompl
pop
call
mov
mov
mov
fndisi(8087
xorb
imul
out
mov
jmp
add
fdiv
inc
jb
push
dec
and
mov
push
lods
fildl
insb
mov
sbb
push
sbb
mov
sbb
ficoms
outsb
adc
aam
dec
mov
ja
inc
and
xor
popa
pop
inc
shr
adc
mov
or
aas
inc
std
fimull
jg
fs
sbb
sbb
js
js
push
jmp
cmp
pop
icebp
movups
sbb
std
ret
inc
lahf
test
cmp
rdpmc
out
shrb
cmp
repnz
mov
ljmp
xor
push
sub
inc
push
mov
jg
xchg
out
push
lret
cmp
into
es
insl
in
xabort
and
divl
push
mov
ds
jno
das
sbb
repnz
iret
adc
jnp
bound
in
or
repnz
cmpsb
push
xchg
add
scas
mov
repnz
out
xchg
push
adc
mov
test
mov
inc
hlt
lret
outsl
mov
sub
pop
in
pop
mov
mov
icebp
adc
mov
lret
mov
mov
imul
aas
iret
movsb
xchg
adc
mov
data16
lret
mov
cmp
mov
sub
cmpsl
shl
and
hlt
dec
jmp
scas
jge
and
rorb
outsl
ucomiss
mov
test
cmp
push
repnz
mov
dec
iret
insl
sbb
aas
jnp
xor
add
or
mov
ror
bound
mov
xor
jl
lods
xor
lret
add
loopne
pop
pop
test
or
mov
clc
dec
jecxz
cltd
insb
sub
data16
sbb
mov
int3
jns
popf
shll
repz
add
xor
leave
pop
aam
lds
push
sbb
arpl
push
dec
sub
lret
cmp
adc
sarl
jnp
adc
das
lahf
lahf
into
dec
sub
or
dec
gs
lds
inc
sub
fsubrp
fcompl
out
lret
push
add
mov
fs
int
cmp
jg
fwait
daa
cwtl
jo
xchg
mov
sub
add
repz
pop
jp
xchg
dec
orl
aam
adc
mov
jmp
mov
jle
lcall
adc
cmp
pop
sub
add
mov
add
mov
xchg
lret
jbe
pusha
mov
cwtl
enter
bound
xor
mov
orl
cmc
insb
xor
scas
and
xlat
jle
mov
push
sbb
int3
jge
mov
fcompl
js
icebp
mov
idiv
addr16
fwait
sbb
xchg
push
xchg
aas
adc
push
add
push
pop
mov
mov
xorl
data16
shlb
aas
aas
aas
mov
sub
jl
fldcw
pop
or
pop
cmp
inc
aaa
sub
shll
fs
and
loop
mov
scas
lret
enter
cld
cmpsl
inc
movsl
pop
or
jo,pn
lock
testb
scas
rcll
pop
dec
cwtl
push
cltd
pop
ds
and
mov
das
sub
pop
sar
andb
pop
adc
cmp
inc
imul
call
stos
sbb
pop
sarl
pop
jl
mov
gs
or
adc
in
fmul
pop
loop
dec
mov
jns
xchg
cmp
xor
inc
in
xchg
shll
and
pop
inc
inc
jae
stc
out
shl
mov
jb
push
mul
dec
jnp
xor
xchg
fnstsw
out
adc
lret
dec
loopne,pt
xchg
pusha
jno
add
mov
mov
addr16
push
dec
sbb
xchg
in
mov
in
mov
sub
fmul
neg
xor
and
aad
dec
cmp
or
xor
dec
pop
ror
fstp
cli
mov
lods
leave
sub
mov
movsl
cmp
test
mov
out
clc
movsl
mov
fwait
jmp
xlat
xor
cmc
sub
inc
aad
fisttpl
aaa
jl
bound
push
int
shl
adc
mov
mov
outsb
inc
push
dec
xor
int
jl
push
int3
jns
lret
or
hlt
ss
imul
test
aas
sbb
inc
std
call
aad
xchg
mov
inc
and
xor
push
clc
cmp
jb
xor
test
push
loopne
mov
bound
and
sub
fs
xor
add
sub
bsf
cmpsb
scas
fcoml
mov
cwtl
int
cmp
pop
cltd
or
and
movsl
jns
cmp
xor
fisttps
leavew
hlt
push
aam
push
hlt
jmp
push
lcall
add
sarb
scas
lock
imul
rcr
mov
in
daa
pop
lahf
lods
je
pop
rcrb
mov
movsb
addr16
push
lahf
mov
repnz
ds
shrb
sti
mov
into
inc
int
add
adc
fcomps
cwtl
lret
imul
imul
mov
and
mov
push
inc
hlt
jmp
xchg
lret
mov
sti
int
xor
or
and
xor
inc
inc
jl
rorl
ret
mov
xchg
sahf
jo
cld
popa
mov
pop
pop
mov
mov
add
insb
xchg
out
addb
test
mov
push
outsl
sbb
mov
push
ja
jle
xorb
out
fistpll
xor
imul
cmc
mov
pop
sbb
lret
dec
fcomip
pushf
imul
push
mov
add
jae
push
mov
jnp
jge
pop
inc
out
add
dec
mov
mov
in
bound
xchg
sbb
iret
jno
mov
mov
xor
fsubs
cmp
sbb
out
shll
inc
xorl
ja
ds
pop
add
mov
lods
push
out
sbb
xchg
clc
mov
insb
mov
push
enter
incb
pusha
cmp
pop
add
movsb
lret
fs
mov
popa
dec
lret
imul
mov
and
cmp
lods
adc
test
push
mov
mov
push
sahf
cwtl
das
jno
in
das
loopne
outsb
cmp
pusha
push
mov
aam
add
int3
ja
push
repnz
test
fistpll
lds
int
into
or
add
inc
push
xchg
mov
pop
xor
xchg
pop
and
pop
ret
jne
data16
test
or
iret
aas
jo
in
jae
sub
mov
shrl
lods
dec
out
fs
cmp
mov
ret
clc
mov
or
imul
sbb
andb
inc
mov
jl
rcrb
mov
push
shl
rcrl
push
or
sub
fwait
sbb
xchg
enter
jmp
aam
ret
stc
inc
xor
jmp
sub
mov
sub
lds
in
add
testl
cmpsl
loopne
adcl
or
mov
packssdw
mov
ret
sbb
icebp
sub
std
lahf
add
gs
cltd
insb
cmpsl
mov
js
dec
fcomps
add
cmpsb
fs
mov
mov
mov
push
mov
out
aas
mov
cmp
jle
ljmp
lea
add
lods
mov
shrl
and
fadds
insl
push
push
mov
arpl
jp
cmp
push
push
mov
cmpsl
push
cmp
rcll
shrb
mov
xchg
int3
lret
insl
hlt
push
cmc
push
in
lahf
in
xchg
push
sub
gs
dec
or
push
cmp
inc
pop
add
adc
jb
add
dec
and
sbb
loop
mulb
push
into
dec
jmp
lock
ljmp
mov
and
cmc
pop
das
inc
imul
mov
out
pop
out
sbb
cmp
and
sbb
lea
test
mov
cmp
fsubrs
lock
mov
shlb
dec
adc
daa
inc
loop
lret
jbe
add
sub
jb
into
pop
jge
out
push
or
mov
adc
mov
sub
or
mov
ret
imul
call
dec
mov
sti
mov
mov
pop
fstps
fwait
dec
test
fldt
jp
movb
adc
mov
lea
mov
pop
std
dec
cmpsb
in
lods
aas
inc
push
xor
stos
mov
in
roll
aas
mov
or
into
jbe
ja
mov
push
lret
scas
sbb
mov
negl
cmp
push
les
rcrl
mov
aaa
ret
push
adc
imul
enter
inc
cmc
sbb
nop
js
adc
daa
insl
mov
daa
xchg
dec
and
xor
test
push
fdiv
clc
or
dec
lcall
rcr
inc
lea
push
xlat
jle
cmpsl
jge
jnp
mov
ss
and
mov
daa
jbe
mov
mov
adc
push
push
lods
mov
inc
sub
in
cmp
dec
inc
out
in
iret
xchg
and
negb
jmp
lea
imul
in
mov
daa
xchg
or
pushf
sub
rsm
andl
aam
mov
adc
ds
xor
pushf
jo
dec
fs
xchg
enter
rcll
adc
jl
mov
pop
jg
jge
lahf
movsl
or
aad
push
inc
push
pop
fidivrl
cmp
inc
mov
popf
movl
or
xor
add
shlb
and
clc
inc
xchg
dec
shll
cmp
pop
pushf
loop
cmc
outsl
aam
fs
adc
add
mov
push
and
sub
lret
pop
pop
dec
sub
mov
xchg
cwtl
outsb
dec
jb
repnz
outsb
jb
push
adc
pushf
fsubl
cmp
dec
xchg
sub
mov
add
imul
repnz
xchg
repz
sbb
dec
mov
push
mov
jbe
jl
mov
cmp
hlt
adc
xor
dec
mov
push
push
lods
iret
insl
aaa
into
cmp
jns
roll
xchg
xor
mov
into
jecxz
sbb
adc
dec
mov
scas
imul
push
cmp
test
data16
jecxz
mov
fdivrl
loop
in
mov
cmp
lock
out
sbb
sahf
sub
test
push
mov
mov
div
stos
jne
bound
sbb
mov
push
inc
jbe
lock
jo
leave
sub
cmp
addl
sti
and
loope
jmp
or
adc
jge,pt
nop
sbb
cmp
xchg
pop
cmc
mov
int3
aaa
push
mov
cmp
jb
aaa
sbb
add
pop
popf
mov
mov
shr
ret
add
xchg
dec
mov
inc
das
nop
int3
inc
out
popf
pop
dec
jb
shr
jl
imul
or
or
cmp
mov
xor
les
mov
sbb
dec
je
jnp
cltd
in
lret
ss
leave
xor
mov
repz
mov
stc
xchg
cmc
lds
ss
call
mov
adcl
mov
adcb
xchg
xlat
cmp
out
insl
std
imul
cmp
sbb
cld
add
and
xor
sbbl
scas
mov
pop
inc
stos
mov
jns
xchg
lods
jmp
aam
dec
daa
mov
in
arpl
ja
loope
stos
inc
and
shll
lcall
add
paddusw
inc
lahf
jne
xor
sahf
lds
ss
ja
shll
out
repz
or
jg
pushf
jle
adc
sub
call
ret
push
sahf
sub
lret
pushf
cmp
or
sbb
ss
clc
rcl
pop
jle
pop
push
popf
sbb
or
pop
loop
lods
sub
popf
shll
fimuls
mov
sbb
push
pop
iret
mov
enter
sbb
popa
ret
cwtl
sub
andb
pop
sub
sbb
loope
les
push
mov
repz
xor
jg
mov
rcll
shr
push
sar
mov
insl
in
fisttpl
fildl
imul
sbb
and
cli
add
mov
pusha
ljmp
cmpsl
push
aaa
pop
dec
pop
int3
gs
jb
mull
lahf
adc
aad
xor
test
dec
pusha
xor
sbb
jle
or
dec
xor
inc
cs
pop
cmpsl
adc
or
mov
fcomi
iret
pop
je
sbb
pop
movsl
jmp
daa
mul
adc
mov
adc
mov
xor
jp
je
xor
rcll
xlat
xchg
jge
sarl
lahf
shll
scas
fwait
pop
jno
jmp
call
pop
loope
sti
adc
repz
fucom
in
popf
xchg
repnz
push
ficomps
jle
ror
lahf
pushf
stc
addr16
mov
adc
psllw
mov
mov
push
pusha
xchg
dec
or
pop
outsb
scas
lahf
push
jge
xor
xlat
fistpll
mov
mov
insb
xchg
mulb
mov
adc
lds
push
mov
dec
repnz
adc
lods
mov
xchg
inc
out
aaa
in
fwait
ss
dec
mov
dec
data16
mov
mov
mov
xor
mov
popl
push
cmp
xor
and
ret
inc
lret
btr
jmp
sbb
iret
shl
cmp
rcrb
xor
fwait
jnp
in
test
iret
ljmp
gs
iret
cmp
adcb
popf
inc
or
jle
sub
andb
push
xchg
ret
out
push
dec
xchg
jl
jbe
popa
mov
or
cmp
mov
dec
or
pop
mov
adc
or
addr16
outsb
push
mov
adc
jl
rcl
xchg
cli
add
jmp
jns
and
cmpsl
adc
cmp
mov
adc
or
ljmp
aas
das
mov
imul
xchg
pop
std
and
sbbl
sub
jl
in
mov
ljmp
sahf
ror
imul
xchg
test
dec
in
mov
jb
into
imul
or
ss
xor
xchg
sub
into
add
mov
adc
in
mov
jge
call
loopne
cmp
sbb
mov
outsb
subl
xchg
lods
test
ror
cmc
or
cli
in
test
scas
or
xchg
xchg
inc
jne
xchg
push
mov
fsubl
cmp
insb
cmp
and
sbb
and
add
cltd
cltd
adcl
shl
lret
jg
das
pop
and
dec
in
cmc
popf
xor
xchg
les
call
xor
dec
adc
pop
mov
jecxz
mov
mov
inc
setl
and
imul
xlat
mov
push
loop
orb
cltd
cmp
ja
mov
ficompl
cmp
push
add
outsl
es
jge
pop
inc
mov
sahf
pop
in
sbb
mov
add
out
cmp
frstor
negb
add
out
xor
cmp
arpl
push
mov
jno
ljmp
fs
add
mov
dec
add
loopne
xor
mov
lret
cltd
lods
ljmp
popa
add
test
lea
or
outsl
mov
ret
movsb
mov
mov
out
test
cld
sub
inc
fmul
sub
inc
mov
cli
popa
sbb
insb
hlt
or
testb
inc
jne
dec
push
adc
and
xchg
xor
push
fisubl
jo
add
and
mov
outsl
mov
popa
js
or
loop
aaa
in
sub
cmp
push
or
rcrb
leave
jg
andl
adc
add
jmp
daa
sbb
imul
mov
fidivl
add
jbe
cli
in
pop
cmp
cmp
push
shrl
mov
push
xchg
repnz
add
cmp
std
clc
test
scas
xlat
and
mov
cmp
mov
aam
add
push
negl
repz
les
xchg
mov
lea
dec
xor
das
pop
xor
mov
loope
xor
out
test
xchg
scas
or
pop
flds
daa
dec
jp
push
push
mov
cltd
shll
pushf
movsb
fxch
mov
mov
aaa
cmp
adc
xchg
clc
add
or
insb
adc
xchg
sahf
mov
subl
rcr
movsl
lret
movl
jge
aas
cmp
mov
in
sbb
xlat
insb
push
mov
add
mov
jl
push
and
jo
insb
pop
shlb
mov
cmp
cmp
jno
mov
cmc
push
insl
jns
mov
dec
add
bound
mov
push
rcrl
stos
flds
mov
sub
jns
push
push
cmp
pop
pop
sub
out
add
pusha
in
mov
push
stos
lsl
fistpl
into
iret
divb
or
sub
fcmovnbe
push
es
insl
out
daa
add
faddl
sub
dec
insl
mov
pusha
fmull
es
test
push
pop
daa
les
xor
push
sbb
call
jno
data16
or
add
movsb
lahf
or
rorl
mov
into
add
leave
pop
xchg
or
psllw
fsubp
stc
inc
push
mov
mov
jbe
and
adc
fistps
fdivp
aas
sahf
push
es
std
loope
or
push
push
mov
inc
hlt
hlt
inc
cmp
sub
xchg
imul
pop
out
mov
dec
pop
xor
scas
in
dec
ret
xchg
or
mov
mov
push
pop
jbe
flds
shll
add
test
add
sub
push
or
dec
sbb
dec
iret
push
repz
pop
pop
inc
mov
push
jnp
movsb
call
mov
loopne
lahf
cmp
push
icebp
insb
or
inc
inc
inc
jmp
sbb
test
out
imul
je
inc
test
push
inc
mov
or
jl
or
lahf
stos
stc
jbe
inc
loopne
and
sbb
out
repz
dec
hlt
movsl
repz
or
push
sbb
loope
push
inc
jge
mov
push
jmp
and
lcall
cmp
xchg
inc
loopne
push
aas
mov
ljmp
call
inc
addr16
rorb
lret
idivb
or
push
xchg
arpl
xor
sub
repnz
scas
ret
and
sub
call
inc
sub
into
or
xor
cld
dec
je
loope
push
stos
ja
inc
jg
lret
fsubl
fwait
inc
arpl
xchg
push
movsb
sysexit
stc
sub
cmpsl
test
fisttpll
add
cmp
icebp
repz
add
inc
mov
push
popa
jb
int
clc
pop
and
loopne
sub
and
add
dec
add
mov
or
hlt
inc
in
cmp
dec
and
push
adc
sar
add
or
in
push
mov
cmpsb
sub
arpl
jno
jno
jb
and
mov
pop
add
shll
incb
or
cmp
xor
add
add
cmc
out
push
push
mov
pop
out
mov
cmp
cmpsb
imul
std
jae
sub
das
xor
add
jns
adc
mov
pop
or
test
mov
inc
dec
lret
pop
popa
mov
roll
xchg
push
jb
mov
cmp
pusha
daa
or
push
orl
jle
xor
mov
mov
lea
aam
daa
cmp
inc
popa
push
stos
jb
sbbb
movsl
sub
sub
lds
cli
fnsave
pop
insb
cmpsl
ret
cli
out
jo
es
mov
sarl
xor
mov
dec
in
fistps
repnz
mov
xchg
mov
xlat
inc
iret
daa
mov
imul
dec
std
test
xor
ja
pop
pop
mov
jge
dec
rcrl
fdivs
cli
jecxz
enter
out
and
pop
daa
push
add
leave
push
testl
imull
jae
or
insl
add
rcr
mov
add
sbb
pop
scas
decl
pop
mov
cmp
out
rol
push
or
mov
inc
inc
fdivrs
inc
mov
xchg
xlat
mov
inc
push
push
push
jbe
testl
in
push
scas
es
lods
pop
fmul
pop
bound
mov
mov
dec
in
cmc
sarl
xor
adc
push
repz
xor
lds
dec
fstps
roll
insb
fcoml
mov
sbb
testl
xchg
clc
push
rorl
xchg
test
sbb
aaa
out
mov
mov
lods
cmp
fdivrl
or
std
movsl
cmp
jg
int
push
add
pop
je
mov
cmpsb
mov
or
pop
cs
jge
gs
mov
xor
cwtl
mov
jne
gs
es
inc
imul
pop
dec
push
int
lock
push
xchg
xchg
jne
in
cmp
imul
popa
mov
pusha
mov
sarb
mov
repz
testl
push
bnd
add
dec
jb
test
or
dec
pop
and
rcrb
mov
in
pop
sti
jle
mov
inc
xor
cmp
leave
add
sbb
inc
jo
repz
icebp
popl
test
jns
dec
xchg
jg
push
dec
cmp
es
jno
lods
ljmp
mov
inc
mov
bound
ret
popf
nop
lods
dec
xchg
xchg
outsb
pop
sbb
mov
add
cwtl
test
aam
repz
xchg
sub
or
mov
push
pop
hlt
ficoms
dec
dec
insb
scas
mov
push
dec
test
pushf
lcall
stos
aaa
xchg
in
js
push
int3
aam
imul
mov
mov
fisubrs
xor
jge
nop
or
xchg
cld
push
std
and
in
sar
loopne
mov
incl
mov
lcall
xchg
dec
sbb
movsl
sbb
je
jae
stos
movsb
ja
adc
sub
and
pop
inc
sub
or
fstpt
mov
sahf
push
push
popf
mov
jae
push
fisubs
orl
pop
stos
lods
gs
cltd
xchg
cmpsl
lcall
adc
nop
mov
jns
out
loop
out
dec
inc
sahf
push
add
rol
xor
int3
cmp
popl
pop
xchg
pop
js
sub
jbe
inc
sar
jle
mov
xchg
hlt
mov
sti
cmp
sbb
mov
scas
subl
adc
dec
xchg
xor
es
leave
fs
imul
sbb
inc
dec
js
add
mov
add
loopne
ret
scas
jg
push
outsl
das
jns
mov
mov
push
fistl
mov
or
adc
dec
dec
xchg
je
inc
insl
cmp
dec
rol
jno
xor
pusha
and
dec
jns
into
decl
cwtl
jb
lea
jecxz
pop
push
push
mov
dec
add
jbe
pop
push
push
pop
adc
fidivs
and
aas
and
repz
fsubr
in
gs
cmpsb
packsswb
adc
xor
jg
xor
sbb
out
mov
mov
sbbl
mov
popf
in
inc
mov
and
dec
jns
dec
pop
push
pop
cs
repnz
ret
mov
adc
pop
insb
xor
fs
adc
mov
stos
xor
push
data16
mov
mov
inc
mov
pop
outsl
jmp
xchg
ret
inc
shrb
cmp
xor
popf
popf
or
sete
clc
fists
popf
stos
mov
push
aas
ss
push
dec
vphaddbq
pop
mov
jle
std
mov
xor
sahf
out
xorl
into
adc
in
mov
mov
rcrb
bound
into
jge
lret
xchg
pop
lahf
push
int
inc
stos
ds
add
ds
jb
loop
jno
xor
test
addr16
scas
imul
xor
mov
and
inc
in
add
jp
out
sbb
lea
jecxz
adc
ja
aam
push
add
pop
dec
mov
outsb
cmp
and
scas
add
mov
pop
enter
pop
cmp
es
dec
sbb
mov
sahf
xchg
add
dec
pop
mov
cld
repnz
jno
popf
std
push
fxch
and
dec
aad
dec
add
push
arpl
dec
aas
jne
xor
mov
jg
clc
xchg
fcoml
aad
add
xchg
scas
mov
mov
insb
adc
addb
push
sub
xor
test
pushf
packsswb
shr
sub
pusha
lret
mov
loope
jge
cmpsb
inc
daa
or
ret
xor
sti
clc
and
lahf
pop
or
mov
sbb
rcll
push
fisttpll
leave
popa
adcb
dec
or
cwtl
outsl
jns
pop
xor
inc
ror
inc
xor
xor
lds
hlt
imul
mov
mov
daa
icebp
sahf
cwtl
jo
and
out
push
in
jo
push
and
mov
arpl
aad
jmp
pop
or
inc
inc
into
cmp
jno
movq
push
mov
popf
lahf
repnz
xchg
cs
fisttpl
in
stos
and
jns
imul
mov
cmp
jne
dec
and
pop
jg
stc
pop
lcall
out
mov
mov
jno
scas
inc
rorl
push
mov
adc
nop
jg
dec
movsl
sbb
pop
cmp
mov
jp
adc
pop
fbld
push
dec
inc
inc
insl
and
in
loop
xchg
clc
push
mov
mov
je
pop
push
xor
xchg
fdivl
xchg
dec
mov
sub
repnz
mov
inc
jg
dec
pop
or
imul
sub
sub
adc
pop
cmp
mov
mov
mov
bound
loopne
test
popa
cmp
scas
int3
mov
sub
cmp
mov
push
dec
ficompl
add
movsl
cmp
push
stc
push
pop
dec
jle
push
ljmp
xor
test
inc
jnp
mov
jb
sbb
repz
xlat
xchg
les
nop
scas
stos
loopne
out
orl
or
int3
jno
xchg
jns
mov
dec
dec
and
xor
push
adc
jmp
pop
jns
out
mov
cmp
pop
pop
mov
adc
stos
push
fwait
icebp
cmp
and
mov
sub
mov
aas
ss
into
mov
fwait
mov
testl
jno
push
fmulp
adc
test
sbb
test
mov
push
bswap
je
popa
leave
mov
fwait
lods
cld
and
cmp
pop
bound
out
sbb
sarb
std
iret
pop
ficoml
repnz
clc
icebp
jle
pusha
mov
movsb
aas
cmpsb
xchg
aas
mov
lea
pop
xor
push
ja
jne
jo
pcmpeqd
fisttps
add
mov
cmp
mov
repnz
pop
les
mov
inc
jo
call
jecxz
arpl
lods
push
xor
insl
mov
xor
or
aam
mov
dec
jp
pushf
stos
cmp
out
lea
push
test
push
ja
in
jbe
lods
and
arpl
xchg
dec
lcall
jp
cmc
mov
push
xchg
aam
and
sbb
int
mov
mov
jno
int3
popf
hlt
mov
ficoml
shr
pushf
gs
aas
jmp
fucomi
xchg
call
clc
addr16
decb
mov
insl
and
and
jbe
jnp
fcmove
jp
pop
leave
testl
cwtl
cmp
insb
aad
mov
es
lret
test
popf
test
lods
sarl
stc
sub
aam
push
cmpsb
in
mov
push
mov
das
adc
mov
mov
bswap
jne
dec
mov
cld
mov
shll
icebp
subb
jb
out
mov
or
sub
cmpsl
popa
fisttpl
xchg
or
popl
test
push
stc
stc
mov
es
mov
cmp
mov
jbe
cmp
or
lock
es
pop
jns
ret
fimull
das
bound
mov
sbb
inc
mov
mov
sub
mov
popa
adcb
cmp
sbb
xlat
inc
scas
pushf
cmpsb
adc
cltd
mov
fadds
dec
jne
mov
xchg
and
lods
data16
pop
pop
rol
inc
dec
push
fadds
inc
pop
push
int
jb
js
xchg
std
mov
and
sbb
push
iret
xchg
mov
das
mov
insl
mov
pop
mov
test
andb
int
mov
sbbb
adc
pop
test
je
jo
pop
adc
mov
add
shrb
imull
jle
insl
mov
insb
insl
enter
leave
inc
into
lret
rcll
in
movsb
stc
mov
cwtl
dec
loope
dec
pop
pop
loop,pt
pop
pusha
and
or
push
nop
jecxz
test
fcomip
xor
cmp
cwtl
mov
dec
movsb
in
cmp
xchg
movsb
leave
dec
mov
not
je
pop
mov
stc
lods
mov
mov
loope
xchg
jge
jno
sub
inc
in
ljmp
jecxz
leave
mov
aas
jbe
fsubs
add
stc
mov
mov
dec
repnz
and
push
stc
pushf
sbb
mov
cmp
mov
aaa
fildl
sbb
imul
cmp
cmovge
loope
push
sahf
xchg
fistl
add
dec
mov
fs
or
xchg
mov
sahf
aam
das
mov
cmp
mov
rclb
dec
ja
sahf
jne
mov
nop
fdivrs
lock
sub
mov
add
sub
jecxz
jl
out
aaa
lods
out
arpl
std
into
inc
adc
sbb
pop
inc
sub
jne
addr16
sub
pop
adc
out
inc
inc
hlt
out
fdivrl
sahf
imul
shll
sarl
cmpsl
orb
pop
mov
test
push
inc
mov
int
jb
add
jg
in
dec
sub
lahf
push
aad
xor
dec
data16
mov
adc
push
dec
int3
jle
and
add
xor
in
cltd
jmp
adc
mov
jnp
mov
hlt
ret
sbb
jecxz
hlt
sbb
aas
fnstcw
adc
xor
rcrb
push
jl
xchg
and
mov
xor
push
mov
push
xchg
dec
sarb
scas
movsb
scas
pop
mov
cmp
xchg
out
or
cmc
adc
cmpsb
mov
add
xor
xchg
lods
push
sbb
cwtl
inc
jle
sbb
sub
or
xchg
mov
int3
imul
cmp
hlt
push
jnp
push
xchg
pop
inc
aaa
add
mov
les
out
or
repnz
mov
ret
mov
bound
in
xchg
add
ljmp
and
adc
cmp
fidivrl
movsl
fsubs
icebp
sbb
inc
fincstp
clc
push
inc
imul
bound
test
mov
cltd
fcomps
lret
mov
das
imul
mov
xchg
add
fcoml
enter
lods
scas
cmp
sbbl
imul
in
push
xchg
xchg
push
das
xor
clc
lods
sub
or
push
out
aas
dec
cltd
jnp
xor
cmpsl
movsl
fimull
test
jno
mov
shlb
jp
fwait
adc
xor
pop
ljmp
xchg
adc
fisubl
cmc
jo
pop
subb
testl
jbe
les
inc
fwait
xlat
cmpsb
push
dec
jne
add
je
out
sub
push
dec
inc
and
jns
push
pushf
push
mov
push
hlt
test
pop
div
push
stos
jno
data16
mov
test
imul
shll
jnp
arpl
fs
repz
mov
lea
sbb
pop
cltd
ja
movsb
shll
insl
mov
jbe
sahf
repnz
or
xor
mov
xchg
sbb
movntq
fadds
test
test
hlt
sub
inc
sti
sahf
sti
jo
xchg
ss
jmp
not
mov
ljmp
lea
mov
cs
cmpsb
and
inc
sbb
fnstenv
mov
push
fwait
dec
pop
mov
hlt
mov
lock
mov
mov
fwait
push
add
ljmp
adc
add
sub
lods
sub
jmp
nop
lcall
popf
dec
test
int
dec
and
xchg
adc
in
ljmp
cwtl
mov
andb
dec
in
mov
gs
mov
pop
loopne
inc
inc
adc
xchg
stc
inc
das
dec
xchg
xlat
inc
push
mov
and
mov
jl
add
xchg
jns
pushf
out
inc
mov
mov
imul
push
movsb
or
xchg
dec
xchg
cmp
and
adc
add
loope
inc
inc
jp
jnp
repnz
add
adc
lods
out
mov
loope
outsb
mov
rcll
mov
lret
mov
xchg
xor
and
inc
add
out
dec
scas
lods
jmp
cmp
add
pop
mov
lcall
sbb
mov
add
jp
int
scas
aas
jp
or
cltd
add
sub
ja
movsl
mov
scas
xchg
push
daa
add
pop
pusha
out
stos
push
xor
shrl
cmc
add
mov
daa
or
fnstenv
and
bound
sub
inc
sub
push
sarb
cs
inc
cmp
shll
arpl
fs
or
jne
bound
aad
mov
mov
rcrb
inc
or
xchg
popf
test
push
xchg
push
ss
xor
or
pop
xlat
push
shrl
add
push
mov
outsl
out
xchg
fisttps
mov
loopne
pop
mov
adc
sub
incb
lock
xchg
lods
add
and
imul
scas
or
sbb
lea
xchg
fdivrs
dec
sub
jbe
imul
repnz
insb
xchg
jg
inc
sub
jnp
mov
xchg
bound
addr16
and
sahf
push
aas
cmp
mov
nop
ss
aas
mov
je
jo
hlt
add
addl
fs
and
fldl
lret
lock
push
lahf
cmp
je
pop
fmuls
sbb
clc
scas
iret
movsb
jno
pop
pop
adc
bound
xchg
mov
lea
cli
sub
pop
mov
imul
jp
xlat
jecxz
pcmpgtw
adc
cmpsb
pop
imul
dec
cld
fidivl
pop
xchg
push
mov
inc
xor
in
dec
es
test
jl
aas
in
ja
cmp
sti
xchg
aad
cmp
insb
xchg
movsl
orb
ret
int3
movsl
cli
jnp
mov
shrl
xor
mov
fisubrs
loop
adc
and
jl
mov
call
push
imul
sti
scas
mov
inc
pushf
xchg
sub
inc
and
and
and
popa
mov
pop
into
pop
std
test
or
arpl
add
into
xchg
mov
or
aas
or
mov
push
xchg
incb
lret
mov
jbe
sub
adc
xor
sbb
lods
push
mov
xchg
inc
pop
xlat
cltd
pop
cmp
xchg
push
jge
nop
sub
cmc
aaa
jne
xchg
adc
inc
mov
ret
outsl
ss
aad
shlb
or
or
lods
iret
popa
shlb
xchg
pop
pop
and
xlat
das
inc
test
les
test
cld
inc
int3
inc
imul
mov
jne
dec
dec
jge
call
out
sbb
push
pop
jo
aam
int3
repnz
mov
pop
cld
pop
jb
and
repz
mov
dec
jbe
xor
inc
lret
jle
jecxz
jae
add
shr
jbe
jge
aad
push
cmp
sub
rcrl
pop
mov
sub
int3
push
jl
adc
mov
mov
dec
pop
jge
repz
mov
fxch
pushf
out
sarb
fiaddl
int3
xchg
lret
mov
lods
lret
dec
mov
inc
cmp
movsl
bound
mov
xchg
jp
pushf
rcr
orl
pop
or
popf
leave
jnp
sbb
dec
add
mov
pop
mulb
in
leave
xchg
pusha
cmp
ret
das
jae
sub
sbb
jne
pushf
inc
outsl
fisubs
mov
fldcw
daa
and
jmp
mov
jecxz
adc
scas
add
inc
insb
or
jo
mov
rorb
jbe
popa
sub
test
ljmp
out
jg
cmpsb
int3
daa
in
movsb
inc
fidivs
push
xchg
push
je
pop
mov
rorb
and
jno
stc
mov
jge
scas
cltd
sbb
sub
xchg
mov
lea
push
daa
dec
out
dec
xchg
ljmp
fistl
mulb
xlat
adc
outsb
sub
les
add
cmp
sti
std
je
or
out
sbb
inc
idivb
arpl
xchg
mov
mov
push
shrl
rorl
cmp
fistpl
pop
sub
fnstenv
add
in
push
jmp
jae
out
mov
fld
mov
imul
sahf
jmp
in
sbb
jbe
pop
pop
sbb
xor
sarb
ds
sahf
outsb
movsl
loopne
cmpsb
dec
and
mov
out
cli
xor
add
cmc
xchg
popa
mov
xor
dec
dec
cwtl
pop
jg
adc
and
test
dec
mov
inc
stos
idivb
sarb
jns
repz
cmpsb
sbb
loope
mov
in
insb
mov
or
lret
orl
dec
dec
add
mov
add
mov
stos
jb
mov
aas
fistpl
pusha
aad
push
repz
aaa
stc
cmpsb
mov
mov
mov
xchg
in
js
mov
mov
mov
dec
mov
addr16
lcall
jle
xchg
push
or
in
shrl
addr16
stc
ret
adc
xor
adc
push
sub
or
fdivr
imul
fbld
mov
insb
arpl
or
jge
mov
test
call
nop
add
cmp
sbb
dec
cmpsb
adc
and
add
jmp
test
jmp
mov
subb
push
call
mov
inc
mov
sbb
pushf
jmp
mov
inc
mov
fidivs
test
lret
cli
in
sub
mov
repz
push
ss
ret
mov
clc
push
pop
mov
data16
add
icebp
cmp
lcall
fimuls
cmpsb
fisttpl
fcomps
xchg
lock
sub
jg
mov
lea
xor
pop
and
cld
sub
mov
sub
push
mov
or
add
lods
xabort
repz
fisubrs
and
pop
insb
scas
in
aaa
lods
sub
push
add
negb
lods
xchg
pop
add
mov
adc
mov
xchg
mov
aam
jp
out
push
shll
mov
outsl
push
inc
cmc
jecxz
xor
jne
sti
aad
in
rorb
scas
push
sub
shll
or
cmc
jne
lock
jno
xor
mov
xchg
sbb
jp
mov
xchg
inc
rolb
icebp
push
cmp
in
lock
push
std
pop
test
push
clc
mov
lcall
mov
mov
fildll
jmp
repnz
rolb
adc
inc
lds
sti
insl
test
inc
adc
shlb
mov
loopnew
rol
mov
fcompl
jnp
imul
xor
movsl
mov
sub
dec
lods
aad
enter
inc
sti
testl
dec
inc
dec
aam
mov
adc
test
pop
push
sbb
inc
push
lea
vpsllq
idivb
ss
aam
add
repnz
or
repnz
lcall
push
stc
pop
push
cwtl
sub
pop
mov
fstps
mov
in
fnstcw
add
inc
repz
mov
xor
cmpb
sub
dec
mov
push
mov
enter
mov
jecxz
jnp
add
xchg
inc
pushf
push
and
push
nop
addr16
insb
dec
mov
mov
ret
lea
fisttps
adc
cmp
push
pusha
sti
xchg
jle
and
imul
mov
jmp
imul
push
sub
mov
adc
fnstsw
inc
mov
neg
sub
sub
push
and
loopne
jne
data16
icebp
clc
sahf
es
sub
clc
adc
enter
dec
add
inc
imul
mov
cmpsb
mov
sub
adc
lds
add
inc
or
cld
inc
xchg
mov
cmp
push
int3
addb
and
jnp
dec
xchg
lahf
mov
jmp
mov
hlt
je
jg
xor
stos
push
fadd
les
aas
test
aaa
lret
enter
mov
scas
jmp
inc
mov
cltd
push
pushf
lock
or
push
addr16
push
mov
lret
popf
mov
push
outsb
gs
in
pop
stos
pop
stos
mov
iret
out
adc
mov
gs
pop
outsl
add
jno
out
push
xchg
jg
subb
pop
test
pop
or
jnp
sub
inc
push
test
mov
in
jae
int3
ljmp
adc
aas
les
xor
and
jns
adc
inc
inc
sti
jle
adc
js
ja
dec
xor
cwtl
push
loope
inc
jno
imul
adc
test
sbb
test
arpl
imul
testb
jg
shr
jmp
jae
das
add
pop
int3
add
cmp
mov
xchg
cltd
dec
push
sub
ss
xchg
pop
out
or
or
push
lods
jbe
imul
xchg
xlat
jge
call
sarl
stos
jmp
lea
jnp
xchg
scas
daa
add
xchg
fists
jg
cmp
inc
sbb
push
orl
daa
out
push
and
cmpsl
jle
roll
lods
push
mov
push
mov
push
loope
ret
out
popf
add
pop
lea
xchg
insb
push
sub
out
dec
sbb
and
mov
pop
movsb
add
xor
adc
lcall
in
in
inc
fwait
arpl
pop
inc
scas
xchg
cmp
dec
flds
jmp
mov
subb
das
sbb
and
int
ds
cli
fsts
xor
xchg
rclb
cwtl
int
in
arpl
add
js
mov
lcall
sti
cmp
pop
into
ret
push
mov
pop
inc
aas
adc
dec
push
cmp
rorb
mov
push
dec
push
inc
jnp
fildl
push
hlt
xchg
or
pop
outsb
dec
mov
aaa
out
mov
mov
ss
pop
add
push
cmpsl
mov
push
inc
into
add
fst
or
cmp
lock
mov
mov
push
lahf
cld
or
lret
stos
clc
mov
mov
into
cmp
subb
fldenv
outsw
mov
les
sbbl
mov
je
lock
jnp
cmp
fwait
dec
add
adc
mov
jne,pt
xor
fabs
cmpsb
in
pop
cwtl
lea
fistps
mov
mov
das
lock
not
loope
mov
mov
pop
ljmp
fcmovne
adc
pop
out
inc
std
pop
cs
testb
inc
cmp
inc
fnstsw
mov
mov
sub
bound
jo
adc
push
mov
sbb
mov
mov
ljmp
and
out
jle
inc
pushf
fcompl
pop
in
out
out
mov
xorb
addr16
enter
bound
push
jns
or
outsl
and
pop
int
adcb
inc
repz
mov
dec
add
cwtl
mov
sbb
push
loop
mov
xchg
xchg
incb
cmc
jbe
mov
or
arpl
sub
mov
aad
xchg
inc
cmpl
xchg
adc
push
les
outsb
jne
and
or
rcll
lret
bound
fidivs
inc
cmp
push
dec
xchg
pop
mov
push
dec
push
jmp
push
pop
test
and
xor
mov
cld
or
jge
xchg
jle
test
sbb
nop
inc
xor
dec
push
push
mov
test
sbb
es
inc
push
stos
sbb
out
inc
jb
ret
pop
fdivs
daa
cmp
scas
int
imul
pop
dec
sbb
mov
imul
mov
jne
ljmp
jo
mov
xor
cmp
int
adc
fdivs
imul
mov
stos
xor
sub
ret
in
dec
movsb
das
sti
pop
push
sbb
dec
out
and
push
xchg
shll
cld
int3
rcr
dec
xchg
pop
pop
adc
mov
inc
cmp
arpl
sahf
sbb
shlb
imulb
push
push
jae
lds
xor
xchg
scas
jl
inc
dec
dec
jp
je
xor
mov
push
and
sarb
pop
leave
lea
add
fsts
mov
movsl
xchg
xchg
and
jne
xchg
mov
or
sub
mov
and
bound
jle
inc
mov
jmp
mov
ds
insl
adc
test
test
fdiv
adc
int3
sti
sar
test
and
or
ja
push
fsubl
int3
cmpsl
mov
aas
pop
arpl
ljmp
and
dec
or
mov
sbb
ds
push
out
mov
sbb
icebp
cmp
cmp
sub
xor
and
mov
jecxz
cld
pushf
sbb
and
daa
clc
jnp
fldl
xor
dec
inc
mov
fildl
xchg
mov
sti
or
xor
outsl
push
add
mov
std
jmp
push
jmp
divl
push
inc
arpl
jo
add
adc
or
scas
ficomps
inc
stos
inc
cltd
test
dec
push
xchg
pusha
cmp
cmp
test
mov
in
dec
lret
sbb
push
pop
shrb
addr16
hlt
mov
mov
lcall
sub
jb
je
js
sahf
fsubrs
mov
xor
loop
out
push
sub
add
push
aas
int
outsb
iret
xor
lret
sbb
divl
dec
daa
int3
cmp
pop
adc
push
mov
sbbb
sub
lods
xchg
sbb
xchg
and
push
pop
inc
cmp
mov
cmc
push
inc
fsubrl
sbb
inc
mov
inc
jmp
js
xor
cwtl
push
jb
mov
loopne
aam
lods
es
and
sub
iret
pushf
fisubrl
sbbb
movsb
lahf
jo
add
add
mov
mov
xchg
cmp
les
cs
mov
push
dec
lea
cmc
hlt
cmp
lret
mov
pushf
cmpsl
xchg
add
sbb
push
les
out
push
insb
jmp
ret
sbb
push
shlb
xchg
jbe
add
loope
mov
loopne
sbb
mov
push
lahf
mov
jmp
pusha
cmp
mov
xchg
sbb
xchg
js
jl
adc
das
or
mov
ret
rolb
inc
cmp
or
or
mov
add
or
dec
test
fmulp
adc
cltd
push
aam
test
inc
mov
test
mov
stos
cs
inc
sub
leave
scas
leave
push
dec
xchg
xchg
shlb
das
push
and
mov
push
jg
ret
mov
mov
cltd
rcrl
scas
aad
mov
mov
loop
mov
mov
out
and
xchg
notl
cmp
or
sbb
int
sahf
lods
popa
xchg
mov
call
loop
inc
cltd
mov
js
jmp
sub
shll
mov
add
push
jmp
inc
ds
shll
bound
jle
push
inc
inc
movsb
xor
add
dec
in
xbegin
aaa
clc
gs
mov
cmp
push
icebp
mov
sub
imul
sub
leave
in
mov
fdivrl
push
push
das
sbb
lds
inc
push
sbb
cmp
or
sub
sub
enter
lock
mov
pushf
adcl
and
push
mov
push
push
outsl
ret
push
dec
mov
cmovae
sub
loope
xchg
push
push
sbb
dec
aad
jns
mov
mov
mov
mov
and
adc
pop
insl
loopne
jmp
icebp
adcl
fdivr
mov
sub
push
loop
sub
jle
jbe
push
inc
jle
clc
aas
scas
add
dec
ret
or
and
or
mov
mov
mov
testb
adc
add
jecxz
push
repnz
add
les
push
test
xchg
sbb
ja
sti
inc
or
ljmp
xchg
mov
inc
stos
sarb
pop
dec
mov
xchg
pop
shlb
hlt
mov
sti
cli
dec
mov
inc
mov
mull
xor
ret
sbb
jnp
lods
or
mov
data16
in
add
pop
push
jp
js
mov
sti
out
test
lret
adc
mov
insl
xchg
outsb
into
ss
mov
insb
jge
mov
lods
mov
sub
cmc
pushf
pop
in
push
enter
cmp
test
imul
xor
xabort
sub
sbb
fdivrp
or
add
and
test
pusha
push
ret
pop
loopne
push
jp
lret
pop
pop
sbb
mov
push
pushf
sbb
sub
ret
hlt
pop
pop
add
cmpsl
lods
lahf
clc
out
push
add
mulb
mov
pop
shrb
scas
mov
or
inc
loope
mov
shll
cmp
pop
clc
aaa
cmp
movsb
iret
add
ja
mov
pop
mov
sbbb
dec
jns
adc
ss
stc
inc
or
mov
and
dec
mov
cmpsb
scas
jp
xlat
sub
std
inc
dec
jb
xor
jno
jae
rorb
mov
push
loop
xchg
negb
test
out
js
outsl
mov
es
test
mov
adc
or
pusha
movsl
cmp
fists
es
push
jne
push
push
leave
int
lea
rolb
xchg
sub
xchg
lods
jnp
xlat
insb
addr16
imul
xor
imulb
sahf
testl
push
popa
pop
mov
add
xchg
out
sub
inc
lock
loope
dec
sub
or
repnz
or
dec
lret
and
scas
jg
push
sub
inc
mov
in
stos
mov
jg
int
lods
movsl
lds
cmp
sbb
sub
fimull
jno
jl
mov
stos
ja
pusha
push
or
or
cmc
stc
pusha
sbb
nop
jns
cwtl
jg
cmp
mov
inc
cmp
mov
mov
inc
mov
andb
lret
pop
out
js
xchg
pop
cmp
and
js
mov
stos
loopne
inc
adc
xchg
xchg
mov
sbbl
jge
sub
cld
jle
mov
dec
adc
sbb
push
pop
inc
sub
mov
adc
aam
mov
cwtl
jns
aaa
pusha
bt
iret
or
pop
mov
dec
inc
test
cmpl
insl
xchg
and
push
test
andl
push
pop
add
or
scas
dec
mov
addr16
lsl
ljmp
push
adc
jle
sub
cmpsl
sub
pushl
dec
repnz
cwtl
adc
out
jle
mov
push
shl
xchg
shlb
lret
popf
jb
pop
in
lret
dec
das
push
sub
xor
test
test
mov
mov
inc
bnd
xchg
add
sbb
and
xor
popl
jne
xor
fnstenv
imul
xchg
xor
addl
sbb
sub
fs
rolb
cmp
cli
dec
jle
jb
ss
std
jp
decl
ret
outsl
cmp
sub
or
adc
and
sub
add
mov
fs
sahf
cld
cmpl
daa
ret
pop
bound
jno
xchg
lret
jns
mov
loop
punpckldq
lods
pop
lea
inc
fwait
out
pop
aaa
mull
je
call
pop
pusha
add
add
sbb
mov
repnz
pushf
pop
mov
xor
pop
cli
mov
js
cmp
mov
push
outsb
inc
cs
in
stos
cmp
dec
push
push
add
jle
jle
sub
inc
xor
push
cmp
pushf
cmp
fs
inc
aaa
inc
test
add
mov
sahf
mov
stc
adc
cmp
and
jecxz
std
adc
adc
dec
sbb
inc
pop
jle
sbb
nop
iret
add
gs
push
outsb
sub
roll
leave
jle
mov
leave
rcr
loope
pop
lods
sub
or
aam
mov
ficompl
adc
cvtpi2ps
lret
mov
xchg
daa
outsl
ja
mov
push
push
test
int3
jb
and
nop
rcrl
mov
sbb
lcall
andl
fwait
out
push
inc
scas
subl
js
ss
or
and
push
lock
push
test
leave
or
cmp
cld
rcrl
jbe
push
push
mov
xchg
push
or
xor
popa
int
sub
sahf
adc
cld
mov
xchg
push
loopne
jecxz
shr
fdivrl
push
sub
mov
inc
dec
push
push
popf
lods
push
sbb
icebp
stos
mov
and
inc
cmp
push
fimull
lret
and
xchg
sti
sub
ds
cmp
in
ds
das
loopne
pushf
dec
cmp
ja
or
push
sarl
mov
jns
das
out
cmp
xor
jbe
xor
lock
sarl
mov
test
jmp
movsb
lock
rorl
in
mov
inc
add
push
test
xlat
push
cmp
mov
sbb
jmp
rcl
out
xchg
inc
sub
pop
mov
out
shll
dec
mov
adc
sub
xorb
dec
dec
jns
dec
inc
dec
nop
loop
sub
jl
pop
popa
sub
add
rcll
test
dec
mov
test
jl
fmulp
mov
sbb
andb
popa
rcrl
xchg
enter
jl
mov
imul
inc
clc
hlt
adc
mov
lret
arpl
mov
movsl
rcrb
repnz
mov
sub
jne
imul
pop
bound
dec
mov
and
repnz
push
xor
xor
and
push
cmp
adc
imul
push
jo
jnp
int
cmp
xchg
rorl
inc
sbb
lock
lret
push
dec
push
rcll
jns
mov
jnp
lahf
mov
mov
inc
add
push
jl
or
orb
mov
adc
out
push
xor
out
mov
add
cs
fwait
cmpsl
cmp
fdivrs
cs
std
popa
xor
sahf
cmc
idiv
jle
pop
loop
daa
scas
jns
inc
das
or
xchg
lea
mov
jmp
mov
mov
fisubl
fdivs
sbb
sti
in
mov
imul
ret
inc
xchg
push
push
loopne
jnp
push
ja
daa
je
xchg
ljmp
popa
les
icebp
ret
outsl
js
cmp
or
xor
cmp
xchg
in
sub
mov
dec
push
div
cmpsl
scas
sub
lret
xor
jb
add
add
inc
mov
adc
mov
iret
xadd
mov
lds
lret
adc
mov
xor
outsb
push
or
push
xor
cwtl
xchg
aaa
repz
sub
inc
insb
mov
call
movsl
jg
and
xchg
test
cmp
push
adc
push
insb
inc
jae
cmp
sub
sub
cmc
in
sub
add
mov
inc
jmp
lret
in
push
pop
and
sbb
in
arpl
add
push
in
inc
fs
cmp
ficomps
adc
inc
orb
push
pop
dec
mov
jb
xchg
shrl
push
add
cs
push
gs
scas
sti
out
xchg
cwtl
repnz
add
jb
lock
mull
lret
jno
inc
jae
xchg
mov
int3
add
ljmp
mov
daa
in
xchg
pop
adc
mov
orl
inc
cltd
fisubs
pop
push
cld
iret
inc
stos
sub
mov
repz
inc
inc
std
jmp
movsb
fwait
sbb
add
popa
sub
mov
dec
dec
push
jge
ret
cmp
sbb
fsub
paddb
add
inc
jle
pop
cmc
rol
mov
jg
inc
mov
jno
btc
in
jb
push
gs
stos
mov
cmp
addl
or
or
fldlg2
xchg
ret
jnp
enter
sbb
inc
nop
popa
stc
lock
pop
jne
push
jecxz
in
mov
and
pop
pop
mov
xchg
adc
sarl
xor
push
imul
fmuls
cmp
int
or
add
cmpsl
pop
lahf
pop
xor
sub
bound
xor
and
pop
pop
push
xlat
and
mov
adc
sbb
rolb
rcr
shlb
mov
nop
xchg
push
dec
mov
jae
xor
xor
and
dec
rolb
rol
dec
sub
repz
xchg
push
mov
fcomps
xchg
cmpl
pop
mov
ret
std
addr16
lods
push
pop
das
mov
and
cmp
cwtl
push
adc
cltd
push
test
push
jnp
xchg
dec
out
cmp
adc
xchg
add
pop
mov
push
or
sub
mov
and
cmp
sub
dec
call
xchg
adc
jne
mov
out
das
les
imul
pop
cmpl
inc
into
lret
stc
int3
mov
push
loopne
fsubrl
push
xor
paddsw
lods
dec
data16
xchg
out
sbb
pop
inc
sub
cwtl
jle
out
jb
sahf
fstl
add
mov
sbb
mov
cmp
mov
stos
push
ficomps
mov
dec
pop
inc
add
in
xchg
int3
jmp
stc
stos
lcall
mov
add
rorb
mov
xchg
test
loope
loope
jge
stc
out
gs
mov
adc
inc
mov
mov
jbe
cs
icebp
outsl
sbb
data16
loop
sbb
inc
fcmovu
mov
repz
ljmp
mov
into
mov
js
jl
mov
gs
or
jns
add
clc
xchg
jo
xor
data16
notl
shlb
mov
fldcw
pop
fisttpll
ret
rcrl
cmp
sub
xchg
mov
xlat
decl
fists
sbb
call
lea
mov
sub
or
add
xchg
lods
add
fld
je
jle
push
sub
mov
in
cmp
jmp
xchg
mov
sbb
call
push
jge
sbbl
pop
mov
or
outsb
mov
mov
in
xchg
rcr
sbb
or
adc
pop
fisubrs
mov
mov
jp
mov
and
push
xor
cmc
outsl
dec
call
jae
and
mov
mov
pop
bound
add
addr16
lret
adc
dec
adc
cmpb
xor
add
inc
in
cmp
divl
mov
sub
sahf
adc
into
cwtl
shrl
lahf
push
fdecstp
sbb
sub
arpl
insl
xor
cltd
jae
mov
rclb
stos
shl
roll
test
xchg
rorl
inc
out
xor
add
outsb
nop
pop
lea
inc
aam
push
testb
sub
cmovo
xchg
movl
shr
in
test
mov
insb
cmc
jns
mov
mov
pop
andl
add
in
jb
pop
fidivl
add
jmp
xchg
sub
testb
mov
jnp
gs
push
mov
mov
jecxz
push
cwtl
or
fucompp
jl
pop
adc
jne
pop
pushf
push
mov
jno
pop
popf
pop
pop
jle
movsl
in
aas
push
adc
jns
mov
pop
or
push
pusha
sbb
lods
stos
inc
mov
in
and
in
xor
inc
dec
loop
fisubrl
sbb
mov
cmp
mov
fsts
subb
cmp
js
pushf
pusha
dec
push
xchg
in
push
cli
and
push
dec
sub
dec
sti
pop
imul
add
sbb
test
outsb
repz
push
xchg
shld
lods
fisubrs
sbb
sti
mov
stos
les
xchg
pusha
ss
xchg
bound
adc
out
test
rclb
je
cwtl
fdiv
dec
and
clc
xor
gs
sbb
scas
insl
scas
xor
inc
ljmp
jo
xchg
add
leave
pop
xor
mov
into
sub
xchg
lods
jmp
rclb
ss
stc
out
mov
ret
jno
test
fxch
and
ret
pop
lods
jmp
jge
add
jns
aam
dec
outsl
int
ja
jp
icebp
stos
pop
mov
sbb
inc
cmp
jns
dec
push
rsqrtps
imul
dec
mov
push
sbb
fstcw
jb
andb
inc
push
jge
fiadds
movsl
mov
xor
idivl
in
push
xor
push
adc
mov
js
mov
shl
adc
dec
push
mov
daa
sub
pop
testl
scas
imul
inc
clc
flds
jg
fnstcw
in
dec
stc
pop
clc
or
sti
xchg
push
aaa
push
push
mov
in
rol
loope
and
jbe
inc
and
shr
lds
repz
jmp
test
jg
fildll
call
lret
fnstenv
out
int
sub
adcb
scas
scas
mov
mov
into
gs
push
into
lret
fbld
sub
clc
dec
stos
adc
loopne
lods
mov
or
xor
sub
jmp
daa
sbb
mov
sbb
jno
stos
push
loop
push
sarl
pop
adcl
stos
ffree
cwtl
clc
decb
and
fisttps
lds
adc
outsb
inc
pop
idivb
xor
out
pop
roll
jne
sbb
in
add
lods
pushf
add
cmp
push
fldenv
jmp
loopne
imul
mov
fldt
cs
lock
add
xchg
mov
cld
sti
insb
xor
mov
imul
mov
das
call
in
adc
xchg
adc
gs
sbb
and
or
adc
ds
dec
xlat
and
or
call
out
lahf
mov
pop
xchg
gs
jl
ss
mov
mov
lock
dec
mov
lock
pop
add
jp
lret
xchg
scas
inc
dec
push
stc
popa
sub
jl
test
sub
jno
mov
mov
mov
and
jp
dec
cwtl
lock
leave
fdivp
mov
test
sub
cmp
in
leave
sar
lret
pop
sahf
adc
inc
mov
add
arpl
popf
cli
enter
aam
out
or
adc
or
iret
jbe
fidivrs
lods
ret
hlt
fwait
sub
ret
jb,pn
aad
inc
push
push
stos
cli
ss
dec
cmpsl
popf
pusha
cld
adc
jmp
push
push
rcll
and
cmp
loop
call
loopne
push
out
shlb
negl
out
sub
fbld
lock
in
add
sti
xchg
insl
lcall
in
data16
lods
mov
es
andb
fisubs
xor
pop
jns
mov
call
adc
xor
dec
jb
fildl
add
push
rcl
sub
dec
add
or
out
and
nop
fmuls
jne
imul
jmp
mov
gs
lcall
fiaddl
scas
pop
jecxz
add
pusha
loop
mov
out
jl
mov
icebp
or
add
test
push
mov
push
cld
gs
mov
mov
jecxz
pop
imul
adc
daa
sbb
cli
enter
add
ds
nop
inc
cltd
sbb
pop
adc
mov
iret
adc
push
xor
dec
xor
sub
or
pop
mov
sbb
sarb
pop
inc
xchg
je
pop
lds
jmp
fwait
loop
ss
in
push
into
xchg
das
or
mov
lcall
adc
ret
pushf
lahf
pushf
dec
jnp
or
xchg
sahf
int3
pop
cmp
imul
xorb
aad
inc
mov
scas
std
or
mov
mov
and
aaa
enter
sbbb
test
xchg
pop
es
xchg
sbb
mov
pop
mov
into
mov
int3
into
push
mov
in
jbe
push
leave
cld
and
lds
xor
into
or
pop
mov
xor
push
ror
mov
sarb
or
push
in
or
mov
fidivrl
insb
pop
add
xor
or
iret
lea
xchg
enter
and
inc
lea
push
cwtl
mov
xor
lcall
addr16
ret
test
mov
stos
push
mov
add
ss
or
shlb
in
stos
clc
hlt
jne,pn
divl
loope
xchg
test
lock
pop
in
test
jb
cld
adc
aaa
lods
mov
or
stos
popf
cli
or
std
and
push
aas
lods
pop
nop
movups
cmp
out
shrb
add
xchg
inc
lods
cli
cmp
nop
fs
dec
sbb
shll
mov
popa
movsl
cs
jg
cs
push
lds
mov
nop
sub
push
inc
mov
lahf
pop
jnp
pusha
pop
or
stos
mov
daa
mov
push
mov
fcmovne
scas
xchg
je
es
pop
inc
and
cmp
into
cltd
or
xchg
sbb
out
cwtl
test
push
xor
push
jmp
je
and
mov
lods
pop
jecxz
stos
test
fwait
jecxz
jne
enter
mov
or
fsubr
jp
in
fwait
shll
push
test
sarb
das
stc
cmp
into
xchg
xor
mov
notl
dec
sbb
rorb
lret
stos
je
fbld
pusha
mov
push
pop
sbb
xor
jnp
xor
outsl
sahf
xchg
out
scas
stc
bound
add
icebp
xchg
and
test
dec
shl
test
add
add
push
inc
push
test
inc
sub
add
jg
fst
mov
aaa
hlt
mov
rol
dec
outsl
or
sbb
sub
fldlg2
inc
cmp
push
fwait
inc
cmp
rcrl
adc
fdiv
aad
xor
and
xor
into
xchg
xor
lods
push
xor
add
jnp
add
jb
mov
jb
sub
popa
inc
mov
sub
out
es
loope
in
mov
push
mov
sbb
out
enter
test
cs
cld
add
or
movsl
sbb
hlt
mov
lcall
cltd
stos
in
xor
rcr
mov
pushf
shll
aam
lods
sbb
fmuls
push
xor
pop
push
or
mov
xlat
pop
sub
mov
xor
xchg
mov
jecxz
mov
jle
scas
adc
xchg
sahf
out
divl
std
dec
ljmp
movsl
sbb
push
mov
cmp
jne
xchg
fcoms
data16
mov
push
push
in
nop
push
pop
test
ret
jno
or
adc
adc
ret
lock
pop
push
mov
xchg
movsl
pop
loopne
idivb
loope
sbb
sub
or
mov
sub
mov
mov
dec
cmp
mov
sarb
adc
sbb
inc
leave
std
test
jns
cld
and
ffree
loopne
add
lods
hlt
pop
stc
subb
cmp
inc
push
dec
shll
mov
pop
adc
das
jp
mov
nop
cwtl
es
push
fwait
inc
movsb
xchg
jecxz
mov
pusha
out
sbb
cld
inc
and
nop
adc
inc
inc
mov
jne
inc
shl
int
xchg
cmc
adc
and
xor
stos
xchg
add
aas
push
outsb
lcall
fsubrs
cmp
mov
pop
jbe
dec
adc
dec
mov
ret
inc
popf
jecxz
push
jmp
add
mov
repnz
cld
enter
popa
xchg
js
mov
out
lods
cli
in
mov
cmpsl
loope
pop
sbb
mov
std
push
push
cld
lods
adc
cli
lods
sub
sbb
fmuls
add
cmc
shrl
rcrl
sarl
dec
call
outsb
push
xchg
jo
dec
enter
pop
jns
cld
jl
in
mov
call
ljmp
arpl
jb
out
push
adc
daa
cmpl
nop
mov
test
inc
fsubs
adcl
imul
int3
adc
jp
jmp
leave
xchg
mov
or
fdivrl
test
ja
mov
mov
lods
scas
in
add
cltd
or
int
iret
mov
imul
fs
mov
cwtl
push
sub
iret
outsb
mov
test
xor
testb
mov
mov
push
or
mov
xor
sbb
jp
enter
push
sub
int
inc
aad
mov
cmpsb
lahf
cs
fs
jle
jo
xchg
mov
hlt
cs
inc
test
fcoml
ret
sarl
adc
scas
arpl
enter
mov
in
outsb
fistpll
xchg
or
jae
js
loop
pop
pop
test
cmp
pop
cmp
aam
cmp
sub
push
shll
dec
rol
rcrl
test
rep
daa
or
push
sarb
inc
mov
aad
mov
mov
cmp
cmp
mov
int
add
cmp
in
and
adc
mov
pop
mov
popa
leave
dec
sub
rclb
je
add
cwtl
test
cmpsl
std
mov
lods
push
mov
loope
xorl
andl
rolb
push
inc
cmp
orl
xchg
xor
and
mov
mov
je
adc
outsb
ret
out
mov
jbe
push
mov
cmp
cs
sbb
add
addl
iret
sub
dec
ss
dec
or
xor
adc
mov
stos
aas
stc
inc
or
mov
sti
movb
xchg
cli
das
aas
lods
sub
push
jl
push
scas
das
pop
clc
mov
rcrl
in
test
sbb
out
stc
jle
inc
inc
mov
mov
dec
xchg
rcrb
fimull
repz
pop
aas
loope
pop
sbb
sub
adc
repz
call
cmpsb
enter
rcrb
stos
add
add
push
test
gs
adc
mov
shrb
xchg
in
and
xchg
mov
or
scas
ret
push
stos
or
dec
add
test
cmpsb
pop
cmpsl
xchg
enter
mov
dec
aas
lock
shrb
sbb
sbb
mov
xchg
xchg
adc
dec
out
fsubl
in
shrl
test
sub
repnz
push
inc
or
sarb
sub
cmpsl
insl
lds
dec
movsb
mov
aas
fbstp
cltd
or
jge
xchg
int
std
idivb
or
jo
lock
test
loopne
test
mov
call
add
faddl
nop
xor
test
jg
cmpb
sti
cmp
xor
mov
xor
aad
pusha
and
imul
imul
mov
jne
in
mul
stos
xchg
mov
loop
leave
int3
xor
repnz
mov
fsub
mov
sbbl
lret
stc
in
outsb
clc
ja
outsb
pushf
pop
test
gs
and
mov
add
jmp
enter
dec
addl
idiv
nop
fwait
pusha
sub
mov
sbb
inc
sbb
jne
sub
xchg
push
xor
cs
xchg
pop
mov
xchg
jg
dec
add
cltd
mov
push
pushf
inc
sub
jae
pusha
sub
or
std
cltd
jae,pn
nop
xor
xor
mov
sub
jp
icebp
mov
xor
out
mov
and
lcall
fldenv
lcall
aad
pop
ja
or
outsl
pop
xchg
rorb
leave
mov
xchg
sahf
jbe
cmc
stos
push
sbb
je
clc
xor
add
test
adc
adc
push
dec
rcl
cmpb
inc
ds
loope
xchg
lahf
in
xchg
push
xor
cmp
icebp
mov
jo
and
jecxz
inc
rcll
pop
cmp
mov
or
xchg
jg
jbe
std
icebp
movsl
jnp
add
lds
sbb
push
adc
dec
pop
sahf
mov
adc
xor
ret
out
xchg
mov
adc
in
aad
sahf
xchg
or
push
fsub
sub
and
jno
sarl
mov
push
push
push
sar
pop
mov
daa
lret
ret
sub
jno
and
xlat
int
mov
mov
aad
push
mov
jae
enter
inc
sbb
or
push
dec
mov
dec
pop
stos
sarl
insl
xchg
push
jns
pop
loopne
push
out
inc
dec
cmp
jmp
les
and
sub
pop
call
outsl
pop
add
cwtl
push
shll
dec
mov
popf
test
push
mov
outsb
ljmp
ds
inc
push
fistpl
fidivrl
pushf
pop
aam
aas
daa
mov
mov
in
xchg
mov
or
in
xor
sub
mov
sahf
dec
sbb
addr16
sbb
mov
pop
adc
pop
stos
push
ds
pop
fwait
or
xchg
sub
ss
sbb
loopne
add
inc
push
pop
pop
xchg
dec
js
adc
or
adc
xchg
test
inc
mov
add
ljmp
lock
dec
bound
sub
mov
daa
and
mov
jae
cmp
push
push
xchg
sahf
mov
in
cmp
adc
cmpl
push
adc
js
imul
std
aas
daa
push
push
ja
or
popf
push
push
out
dec
push
or
fwait
in
inc
bound
mov
dec
xor
pop
das
dec
xchg
or
into
mov
fstps
xchg
or
sbb
dec
sub
inc
sub
in
sbb
aad
lds
or
inc
into
aad
dec
mov
int3
adc
nop
mov
push
test
mov
rolb
clc
ret
orb
or
test
dec
push
and
push
in
pop
cmpsl
fs
xor
das
add
aaa
scas
mov
sub
pop
leave
push
push
jge
pop
pop
pushf
jbe
rcrb
push
je
sub
lcall
arpl
xchg
outsb
xchg
adc
out
push
stos
dec
dec
lahf
enter
jno
fldenv
sbb
mov
jbe
fmul
flds
add
pop
in
cmp
jae
pop
pop
mov
mov
push
js
inc
xchg
jecxz
xor
stos
xchg
cmp
into
js
stc
jmp
mov
xchg
push
and
push
popa
cli
push
and
and
fsts
and
mov
daa
jo
sbbl
iret
pop
mov
xchg
fstpt
xchg
test
pop
xor
mov
or
mov
cmp
push
dec
leave
cld
mov
cli
pop
sub
pop
push
inc
mov
ds
xchg
xchg
pop
cmp
inc
pop
and
xchg
lds
mov
xchg
int
pop
adc
addr16
icebp
pop
add
mov
scas
mov
sub
xor
lret
mov
dec
test
mov
pop
popa
adc
mov
xchg
jnp
or
dec
sub
aaa
stc
and
mov
fcmove
repz
insb
jp
sub
ja
or
cmp
push
out
xchg
inc
xor
lret
mov
jmp
sti
movsb
lea
shlb
push
ret
mov
cmp
add
fwait
test
in
push
das
pop
push
mov
or
inc
das
lea
mov
add
jmp
mov
cmp
adc
inc
xor
pop
mov
add
ret
clc
or
cmpsl
sub
xor
ds
cli
mov
cmp
imul
xchg
shrl
push
mov
out
scas
mov
mov
push
lret
mov
js
addl
mov
in
iret
or
fdivp
in
or
test
dec
inc
jno
mov
aas
lcall
inc
jp
rcll
mov
mov
mov
lret
or
inc
and
sub
xchg
cmp
js
fsubl
enter
and
push
jp
test
mov
push
sbb
xchg
pushf
push
xor
add
scas
xor
movsl
idivb
inc
mov
jp
or
fists
mov
or
scas
dec
mov
mov
pop
pop
repz
loope
inc
loop
pop
loope
mov
ja
add
in
mov
test
cmpb
rorb
das
fstps
xor
cwtl
aaa
orl
pusha
popf
fildl
adc
dec
std
repnz
jb
fdivr
jmp
int
xor
mov
and
mov
pop
xchg
push
xor
mov
xchg
es
and
jmp
jmp
adc
push
scas
jnp
pop
popa
push
into
mov
int3
mov
jmp
cltd
add
lahf
cs
mov
pop
push
idivl
xor
subl
fimuls
lods
mov
outsb
imul
and
fwait
mov
shrl
mov
js
sbb
mov
cmp
test
jo
adc
xor
hlt
imul
jae
adc
out
mov
or
into
je
push
in
pushf
cltd
xchg
cwtl
lret
fwait
in
subl
movsl
daa
dec
pop
adc
loopne
ja
mov
fistpll
sbb
in
push
fucomip
xchg
or
scas
mov
jl
xor
sar
clc
adc
pop
mov
pop
imull
xchg
jns
push
inc
sbb
fldl
xor
in
mul
iret
xor
test
aam
cmpsb
test
and
lds
push
stos
and
lea
lods
mov
inc
aad
cmpsl
xchg
imul
daa
leave
js
dec
jge
fcom
sbb
sub
dec
stc
js
sarb
negl
loop
sub
in
push
mov
cmpsb
xor
sbb
divb
inc
or
cld
hlt
mov
out
fs
push
lods
mov
cmp
in
or
xor
mov
mov
clc
repnz
and
mov
mov
pop
arpl
bound
aas
fdivs
cmpsl
inc
outsl
aas
sti
cmp
cltd
and
sub
mov
clc
dec
jmp
pushl
xchg
xor
jle
aaa
mov
rol
sbb
jp
mov
cmpsb
pushw
add
ja
or
cmc
dec
xchg
xchg
mov
and
out
jne
sbb
imul
jb
aas
aad
shrb
aas
adc
jb
mov
push
mov
sub
jns
and
jmp
mov
outsl
dec
sbb
or
dec
add
or
sub
cmp
add
scas
push
mov
mov
adc
shrb
out
jbe
sbb
sbb
jb
push
jmp
xchg
ds
addr16
push
sbb
jne
jmp
js,pt
sub
ss
cmp
add
adc
stc
jne
addr16
pop
shlb
into
xor
xorb
out
cmp
mov
fsubl
mov
mov
rclb
fildll
fldenv
sbb
sbb
pop
xlat
je
cmpsl
inc
adc
in
xchg
dec
into
adcl
xor
mov
xor
fsubs
inc
jnp
les
out
mov
inc
lret
push
dec
sub
aas
pusha
repz
mov
jo
dec
mov
adc
pop
sbb
or
adc
inc
sbb
mov
lret
fwait
adc
xor
lods
dec
jae
sub
jno
inc
mov
xchg
cmp
add
jle
xacquire
imul
xchg
mov
add
ljmp
sub
insl
in
mov
fists
push
inc
dec
rolb
push
rclb
out
out
bound
pop
imul
cmp
push
scas
rorl
je
xor
or
fwait
sub
test
jb
mov
cmovae
lret
push
mov
add
repnz
xchg
js
stc
fisttps
lods
push
lock
daa
dec
bound
rcll
cs
adcl
mov
jl
int3
mov
inc
repz
mov
cmpsb
and
in
ljmp
out
cmc
jge
imull
mov
call
ss
dec
lock
mov
inc
loopne
notl
int
sbb
sbb
cwtl
gs
idivl
mov
jae
xor
lcall
xor
loope
mov
loop
fcoms
dec
inc
movsl
mov
in
dec
pop
push
aas
pop
movsb
outsb
mov
scas
out
mov
mov
mov
inc
or
mov
mov
dec
push
sbb
push
xor
repnz
popa
imul
movsl
cltd
and
and
and
adc
shlb
out
int3
inc
std
jmp
mov
push
shlb
jl
je
cmp
push
fcmovu
adc
jle
xor
jne
jg
pusha
lahf
push
mov
xchg
test
jnp
xchg
cmovns
fldt
icebp
inc
adc
xchg
sbb
mov
sbb
fs
jmp
fisubrs
aad
in
sbb
or
test
add
pop
add
add
ret
stos
popa
add
negb
push
xor
xchg
mov
pop
out
mov
mov
push
es
fcomi
pop
out
dec
jne
pop
cmp
lds
adc
mov
and
int
sbb
enter
in
dec
jnp
xlat
lret
in
mov
pop
mov
dec
in
push
jmp
dec
mov
pop
aaa
ror
lods
gs
popf
pop
cmp
jnp
aad
push
ja
enter
movsl
aam
xor
mov
mov
xlat
fistps
adc
fiadds
scas
sbb
mov
adc
aad
notb
daa
mov
push
out
pop
insb
push
jns
into
mov
inc
mov
push
adc
jae
xchg
sbbl
pop
stos
xor
pop
ret
mov
or
sbb
pushf
pop
cwtl
xor
jb
iret
hlt
adc
jns
push
mov
xchg
lret
in
mov
das
jmp
std
mov
fmull
nop
sub
in
xlat
mov
xchg
adc
xchg
cltd
mov
cmp
rorb
adc
bound
inc
and
rolb
xchg
insb
mov
in
push
test
sub
pop
scas
lret
cmpl
insb
xor
fnsave
xchg
and
lods
outsl
cld
add
xor
ja
xchg
repnz
int3
lcall
adc
iret
dec
leave
add
dec
movsb
pop
pop
cmp
mov
mov
jmp
jbe
mov
jge
leave
sub
push
std
xor
gs
test
jbe
lret
pop
cwtl
movsl
repnz
in
ds
xchg
push
addr16
jnp
enter
or
jae
dec
and
ja
cli
jp
and
mov
and
xor
xor
add
push
stos
fidivs
push
.byte
push
.byte
stos
sub
cmp
and
lea
push
mov
sub
push
not
and
pop
push
call
lea
lea
xor
jo
inc
mov
and
sub
mov
lea
lea
push
push
call
mov
movl
and
mov
mov
push
call
xor
lea
jge
or
cmp
mov
call
sub
lea
and
je
push
and
sub
pop
call
mov
push
call
and
mov
cmp
cmp
add
sub
push
call
xor
add
add
call
sub
add
sub
mov
mov
jmp
rcr
ror
add
cmp
jne
push
push
call
pop
inc
cmp
jne
sub
cmp
lea
xor
cmp
push
push
push
push
call
call
jmp
push
ret
call
mov
add
sub
xor
push
call
mov
call
and
xor
sub
xor
add
lea
call
rdtsc
xor
mov
call
mov
sub
lea
mov
sub
lea
lea
add
push
call
mov
push
mov
xor
not
lea
pop
call
sub
add
mov
xor
mov
mov
ror
jb
cld
mov
push
sub
and
lea
mov
pop
call
push
call
xor
xor
lea
nop
dec
push
call
sub
and
xor
and
mov
push
call
add
lea
sub
add
cmp
sub
lea
mov
push
call
mov
lea
sub
mov
push
cmp
lea
lea
pop
call
and
lea
sub
sub
push
push
call
pop
inc
cmp
jne
push
push
call
movzwl
xchg
inc
lea
call
jne
xor
xor
lea
pusha
cmp
xor
cmp
xor
xor
cmp
mov
mov
mov
sub
and
and
mov
inc
lea
push
push
call
or
lea
sub
and
add
nop
nop
nop
add
xor
cmp
lea
xor
neg
xor
xor
xor
mov
cmp
cmp
popa
cmp
jne
add
add
call
sub
lea
not
neg
xor
cmp
add
cmp
mov
lea
sub
mov
add
pop
pop
xchg
push
insl
das
fldcw
sti
cmp
adc
sbb
xchg
or
ret
shll
sub
cs
mov
xor
mov
pop
addl
inc
ret
test
inc
leave
dec
iret
test
xor
test
sbb
test
mov
test
test
insb
popa
inc
mov
pmaxsw
pop
ss
js
jp
sub
subl
mov
scas
pop
test
mov
addr16
push
rcrl
xchg
nop
sbb
sub
pop
and
movsl
pop
mov
cmp
stos
and
pusha
and
sbb
cmp
mov
add
or
ds
jecxz,pt
inc
inc
and
rcl
pop
pop
sub
pop
sbb
dec
push
movsl
sbb
movsb
out
pop
inc
outsl
sub
sbb
jae
add
jns
push
movsl
mov
test
inc
insb
or
hlt
jmp
xchg
xchg
std
sbb
adc
push
pop
inc
xchg
test
dec
and
test
adc
jns
lds
jle
mov
jo
mov
int3
sarb
add
mov
push
mov
stos
and
pop
pop
mov
pusha
popa
bound
fs
add
mov
insl
sahf
nop
and
cmp
addr16
jle
inc
or
xchg
add
adc
nop
mov
rclb
adc
jmp
xchg
and
mov
and
mov
ret
dec
iret
mov
int3
rorb
dec
test
leave
add
int3
mov
subb
fcom
fcoms
jbe
sbb
add
xchg
loop
sbb
jmp
stos
jecxz
xor
mov
in
idiv
sti
cmpsb
push
adc
pop
out
lods
pop
ror
or
ljmp
enter
or
test
sub
push
daa
das
push
movsb
jp
mov
and
popf
arpl
cmpsl
and
sahf
jno
dec
dec
jl
jbe
push
mov
mov
shlb
push
xlat
sub
sahf
ss
lock
data16
imul
loop
jge
jne
aaa
adc
jnp
adc
aad
pop
mov
incl
nop
xchg
stos
arpl
pop
notb
xchg
fwait
ja
pop
jg
pop
icebp
sbb
test
jp
call
sbbb
fldl
loope
add
add
cmp
bound
pop
inc
sbb
add
fcomps
jmp
fistps
pushf
mov
lcall
lods
out
dec
scas
lea
test
mov
cmpb
inc
push
xchg
push
jbe
or
notb
adc
adc
ja
cltd
rcrl
sbb
xchg
inc
jbe
jmp
cmp
cmpsl
push
clc
xor
mov
add
outsl
mov
pop
mov
dec
fs
int
push
or
adc
push
or
or
push
pop
push
in
ret
add
pop
pop
ljmp
fbstp
adc
xor
xor
repz
aaa
ja
clc
and
and
rolb
add
lea
fwait
cwtl
adc
push
xchg
xchg
scas
pop
mov
mov
pop
sub
or
dec
cmpb
dec
or
outsb
cmpl
mov
in
dec
es
aas
in
or
cmp
or
pushf
push
xlat
lods
add
aam
and
loopne
shl
mov
add
sub
aas
faddl
rcrl
fldt
adc
mov
cmp
cmp
xor
test
push
jecxz
cli
adc
inc
lahf
bnd
pop
inc
pusha
pop
push
pop
cltd
jno
and
push
das
xchg
and
push
addl
iret
loopne
arpl
aas
test
mov
test
mov
push
mov
mov
aad
push
jp
rorb
push
cmpsl
inc
xchg
jmp
imul
jo
inc
mov
mov
lcall
or
mov
lcall
pop
jg
popf
out
pushf
and
repnz
insb
cs
pop
repnz
jl
scas
in
mov
or
xor
jmp
push
inc
inc
aas
imul
nop
fwait
nop
ret
call
add
lea
sub
ficoms
mov
in
sub
into
and
and
mov
not
lea
push
call
xor
mov
inc
add
jo
cmp
add
xor
mov
inc
xor
sub
mov
mov
push
cmp
add
pop
mov
leave
ret
sub
nop
nop
nop
lea
xor
lea
xor
push
mov
sub
push
nop
lea
pop
xor
neg
and
and
lea
add
push
call
add
sub
lea
add
lea
cmp
mov
sub
push
push
call
push
add
cmp
and
xor
xor
pop
mov
lea
mov
leave
ret
sub
mov
push
mov
sub
cmp
jne
mov
sub
mov
not
neg
cmp
xor
sub
nop
add
cmp
jne
xor
add
leave
ret
push
mov
sub
mov
mov
inc
xor
not
neg
cmp
jne
lea
lea
leave
ret
lea
sub
cmp
push
mov
sub
jo
mov
lea
nop
push
pop
mov
inc
cmp
je
xor
cmp
not
neg
cmp
jne
leave
ret
dec
cmp
mov
inc
inc
mov
mov
xor
sub
push
push
push
push
call
push
lea
sub
pop
call
lea
cmp
add
mov
push
sub
xor
pop
and
add
mov
mov
mov
mov
sub
inc
lea
call
push
push
call
ret
nop
nop
nop
and
lock
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
cwtl
inc
add
xchg
inc
add
xchg
inc
add
cwtl
inc
add
xchg
inc
add
cwtl
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
add
xlat
and
and
sub
cmp
add
add
add
inc
xchg
add
mov
add
ljmp
add
add
add
add
or
add
pop
xchg
add
aam
add
je
add
push
xchg
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
dec
xor
cs
insb
add
push
inc
push
dec
xor
cs
insb
add
push
push
inc
push
xor
cs
insb
add
adc
add
and
add
add
push
xchg
add
pop
xchg
add
push
xchg
add
adcb
mov
xchg
add
les
add
xchg
add
repnz
add
add
add
sub
add
adc
add
and
add
add
push
xchg
add
pop
xchg
add
push
xchg
add
adcb
mov
xchg
add
les
add
xchg
add
repnz
add
add
add
sub
add
add
inc
jo
outsb
fs
outsb
jne
add
add
imul
add
add
inc
insb
imul
arpl
outsb
add
add
inc
insb
imul
jb
add
add
fs
imul
add
jne
insb
push
arpl
add
outsb
fs
imul
inc
add
add
je
outsb
jne
add
inc
gs
gs
popa
addr16
outsl
jae
add
inc
gs
outsl
jo
imul
add
dec
outsb
jbe
insb
imul
je
add
add
inc
push
jo
jb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
jae
push
jne
je
gs
popa
add
add
je
popa
jb
je
outsl
jae
add
push
ja
je
push
je
jo
add
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
add
fs
je
push
imul
sub
add
inc
xchg
add
push
xchg
add
pop
xchg
add
push
xchg
add
xchg
xchg
add
test
add
mov
add
xchg
add
ficoml
add
xchg
add
push
xchg
add
sbb
add
xor
add
dec
xchg
add
pop
xchg
add
push
xchg
add
mov
add
lods
xchg
add
mov
xchg
add
rclb
add
add
add
sub
add
inc
xchg
add
push
xchg
add
pop
xchg
add
push
xchg
add
xchg
xchg
add
test
add
mov
add
xchg
add
ficoml
add
xchg
add
push
xchg
add
sbb
add
xor
add
dec
xchg
add
pop
xchg
add
push
xchg
add
mov
add
lods
xchg
add
mov
xchg
add
rclb
add
add
add
add
inc
fs
je
insl
inc
add
add
inc
popa
arpl
jo
gs
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
outsb
fs
je
insl
inc
add
add
je
push
dec
outsb
outsw
add
add
je
jne
jb
outsb
arpl
outsl
jb
popa
je
add
add
inc
gs
imul
push
jo
arpl
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
imul
je
add
add
je
gs
imul
dec
jae
bound
addr16
jb
jae
outsb
je
add
dec
outsl
popa
fs
imul
add
add
push
gs
jb
push
inc
add
add
gs
js
add
push
jne
jo
outsb
fs
push
add
add
imul
bound
add
add
imul
jb
popa
add
add
push
outsb
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
popa
je
add
add
insb
jae
jb
insl
jo
add
add
insb
jae
jb
jo
inc
add
add
insb
jae
jb
outsb
inc
add
sub
add
dec
cwtl
add
bound
add
sbbb
add
add
add
cwtl
add
ds
add
dec
cwtl
add
bound
add
sbbb
add
add
add
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
inc
insb
outsl
jae
inc
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
gs
dec
bound
arpl
add
inc
gs
gs
arpl
popa
jo
add
add
je
gs
jb
jae
inc
outsl
insb
outsl
jb
add
push
gs
gs
inc
outsl
insb
outsl
jb
add
add
and
add
inc
cltd
add
push
cltd
add
pusha
cltd
add
jo
add
test
add
mov
cltd
add
add
add
add
add
and
add
inc
cltd
add
push
cltd
add
pusha
cltd
add
jo
add
test
add
mov
cltd
add
add
add
add
inc
gs
jb
jbe
je
dec
bound
arpl
arpl
imul
gs
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
outsb
jne
dec
gs
js
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
gs
gs
arpl
imul
addr16
outsl
popa
fs
gs
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
add
add
push
gs
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
