and
mov
sbb
stos
xorb
mov
mov
clc
out
pop
and
add
xchg
and
loopne
out
mov
lods
in
ret
or
inc
insb
cld
in
and
sbb
xchg
mov
xchg
dec
add
push
clc
xchg
push
fcmovnb
nop
fwait
mov
loope
dec
and
cmc
jl
filds
or
xchg
leave
adc
jno
cmpsl
mov
lods
xchg
aad
ret
bound
pop
bound
outsb
pushf
lea
test
mov
add
popa
sarb
pop
xchg
pusha
xchg
mov
js
in
mov
lcall
leave
mov
add
arpl
mov
fst
jecxz
mov
xor
out
push
jne
add
loop
aam
dec
jp
sub
add
mov
movsb
add
test
es
icebp
xor
imulb
push
aaa
xor
je
into
mov
mov
pop
mov
sub
or
orl
add
pop
jbe
jbe
into
add
jg
aas
mov
mov
insb
ds
mov
sbb
rorb
lret
mulb
clc
jnp
sub
lea
jle
out
or
adc
cld
mov
js
cwtl
fidivrs
pop
sub
jno
ficoms
xor
mov
inc
stos
xchg
mov
jnp
ljmp
ja
mov
sub
sub
movb
jae
jl
pop
mov
sbb
dec
push
pusha
xor
xchg
stos
jns
pop
jge
mov
xor
jo
roll
mov
ljmp
loop
stos
jbe
sbb
cld
fdivr
sub
bound
mov
cmc
pop
call
mov
aaa
and
std
inc
ss
inc
cmp
pop
sub
sbb
add
pusha
mov
lods
push
mov
mov
push
incl
inc
fmul
mov
movsl
pushf
adc
pop
and
inc
pop
bound
sub
shll
xchg
push
pop
mov
std
scas
icebp
sar
or
cltd
mov
sti
stos
popf
ds
mov
out
ret
mov
icebp
fsubs
pop
lods
aaa
push
jge
faddl
or
idivb
fdivrl
int3
push
repz
nop
js
adc
mov
jo
out
and
push
mov
mov
xchg
jle
out
lea
adc
in
mov
pop
cmp
inc
sbb
ja
and
jmp
inc
lcall
mov
test
jnp
mov
hlt
fiadds
fidivrl
mov
xlat
lcall
add
rorb
add
inc
cmpsl
sub
popa
jecxz
sub
test
mov
adc
push
dec
or
and
pop
lods
dec
push
mov
movsb
jp
fsubrp
push
xchg
jmp
js
pop
xchg
fmull
shr
cmp
pop
ficomps
sbb
push
movsl
and
adc
ljmp
nop
push
inc
jbe
dec
popa
iret
ficoms
cmp
pop
jno
mov
imul
push
mov
scas
insl
dec
inc
ljmp
cmp
subl
shl
sbb
or
sti
fadds
fwait
cmp
subb
mov
mov
mov
fnstenv
mov
andl
fiaddl
imul
cmc
mov
pop
daa
mov
sub
icebp
cmp
mov
cmc
sarl
add
inc
clc
dec
ja
sarb
sub
push
pop
imul
or
cld
in
inc
notl
adc
vpunpcklbw
arpl
and
inc
data16
adc
pushf
pop
mov
cmp
dec
inc
fmul
out
mov
aaa
adc
xor
ror
cltd
inc
fcomps
push
lret
and
aam
rolb
xor
cmpb
mov
loopne
xor
es
xchg
or
add
or
cmp
or
addl
xchg
and
dec
in
xchg
adc
dec
icebp
fdivrs
push
arpl
mov
pop
or
mov
gs
dec
popa
adc
repnz
add
inc
sub
inc
aad
test
clc
pop
pop
loop
int
xchg
sahf
push
enter
mov
fscale
jecxz
movsl
out
ret
mov
out
xchg
cmp
cmc
jb
insl
xor
outsb
sub
and
repnz
imull
or
fs
fidivs
verw
notb
test
out
sti
daa
mov
shrl
loope
bound
loop
add
or
jb
js
push
iret
cld
testl
xchg
pusha
push
cmp
popa
inc
xor
test
add
sets
xchg
pushf
int3
fidivs
dec
push
aas
cmp
nop
or
outsl
test
adc
sbb
xlat
out
dec
test
mov
jns
sbb
xor
mov
mov
and
test
pop
mov
into
mov
jmp
pop
cli
mov
xchg
mov
or
inc
cli
out
ror
jg
es
dec
xchg
xchg
loop
into
sti
sub
add
mov
out
out
aad
sub
cs
pop
adc
sbb
movsl
fdivrp
xor
mov
xchg
hlt
pop
push
push
mov
rclb
es
or
xchg
push
les
add
push
mov
loopne
aaa
faddl
sbb
push
sahf
out
xor
std
in
sbb
lds
pop
xchg
dec
sbb
adc
xor
and
fwait
and
mov
or
and
or
popa
stos
push
and
and
popf
push
push
std
push
jl
aaa
es
mov
add
lahf
lcall
fiaddl
push
inc
aaa
out
cmp
cmpsl
sub
mov
das
cmp
mov
rcrb
and
mov
dec
dec
iret
pop
pop
cmp
inc
xlat
negl
imul
ljmp
stos
int3
cmp
int
std
or
xor
loop
loope
jo
pop
data16
daa
mov
add
mov
insb
shll
add
cmp
mov
cltd
jmp
retw
xchg
pop
sub
repz
rorb
cmpsb
lods
nop
add
lds
test
popf
xor
fs
fdivrs
mov
bound
push
ret
mov
nop
push
and
xor
clc
adc
xor
mov
add
cld
pusha
orb
loopne
wrmsr
scas
loopne
push
mov
push
es
repnz
dec
xchg
add
mov
sub
sub
iret
sub
push
out
sbb
stos
push
fs
sub
popa
mov
movb
fisubrs
add
mov
inc
sub
and
fidivrl
mov
push
and
and
push
dec
xchg
aaa
lret
or
out
jle
cld
adc
stc
dec
mov
ds
dec
enter
or
scas
pop
sub
pop
dec
fimull
jge
or
pop
xchg
mov
out
dec
lret
and
call
pop
nop
mov
imul
or
jg
es
data16
push
mov
icebp
dec
icebp
sbb
push
jne
or
into
lcall
jbe
xor
loope
pop
sbb
push
fwait
xchg
and
addr16
adcb
ljmp
lret
in
or
pop
hlt
dec
xchg
pop
out
cmp
sub
clc
mov
out
jb
aam
mov
decl
je
cmpsb
std
leave
jg
ret
js
mov
or
or
sbb
pop
cmc
fs
mov
inc
aad
sbb
mov
scas
cmp
xor
pusha
notb
sub
rolb
divb
push
nopl
xchg
sub
and
or
aad
lahf
lahf
fstl
ds
sbb
repz
sub
mov
imul
dec
and
addr16
add
nop
testb
lret
outsl
lret
fs
or
push
mov
mov
pop
andb
stc
bound
cvtps2pd
cmp
add
jae
into
jmp
push
mov
movsl
and
sub
push
jae
push
aaa
push
inc
jb
mov
sub
fiadds
mov
and
lahf
sti
xchg
inc
lret
fs
xor
jb
test
sbb
or
push
in
jne
dec
stc
les
mov
inc
adc
lret
das
gs
and
movsb
leave
sbb
xchg
xor
sub
aaa
xchg
stos
push
bound
test
aas
push
mov
bound
lods
mov
ljmp
int
push
stc
aad
add
jp
les
mov
enter
mov
jmp
jns
fucomi
fdivl
lret
xchg
dec
lock
jo
jae
push
cwtl
sub
inc
popf
mov
dec
mov
or
xchg
pop
pop
push
mov
jle
xchg
lds
mov
adc
dec
movl
mov
iret
movsl
out
mov
and
das
adc
push
decb
movsb
pop
bound
ffreep
xchg
outsb
xchg
jae
nopl
mov
repz
adc
jae
je
sahf
adc
scas
mov
add
mov
or
adc
jp
lock
jo
lcall
sub
push
std
sbb
sbb
bound
shrb
pop
cmpl
jb
push
push
pop
icebp
pop
rorl
pushf
mov
aaa
jbe
lea
dec
stos
adc
xchg
aad
mov
pop
int3
xor
aam
xchg
dec
xchg
in
orb
repnz
pop
xor
popf
shrl
rclb
mov
icebp
adc
sbb
cmpsl
divl
lahf
stos
jmp
pop
xor
sti
inc
adc
fwait
scas
xchg
test
xchg
stos
aam
jno
adc
shrl
lcall
xor
rolb
inc
decl
out
nop
mov
insl
repz
lods
push
push
dec
adc
xchg
stos
sbb
and
mov
add
mov
fsubrl
sbb
push
aaa
ret
lcall
add
test
test
leave
addr16
xchg
je
or
outsl
iret
and
adcl
jno
fsts
mov
lods
rorl
push
out
scas
dec
adcl
pop
push
aad
dec
add
inc
repnz
outsl
js
xor
clc
mov
out
sub
add
inc
dec
pop
mov
lods
pusha
sbb
mov
jnp
jbe
adc
shlb
mov
rorl
dec
gs
sti
sbbl
fs
xor
xor
jne
enter
jns
leave
lahf
mov
fisttpll
jle
jg
mov
adc
adc
mov
mov
and
cs
mov
ss
xor
scas
inc
or
scas
ret
mov
xor
add
xchg
loop
xchg
sub
repnz
or
shlb
push
jl
nop
mov
scas
inc
sub
xor
mov
imul
ss
cld
test
fadds
scas
or
add
mov
jns
xchg
mov
or
mov
imul
mov
test
dec
scas
dec
fisttpl
loopne
stc
mov
mov
in
add
pop
mov
aas
pop
or
in
mov
lods
mov
data16
imul
mov
pop
sbb
sbb
push
mov
push
int3
pop
insl
les
popf
inc
in
divb
cltd
xchg
mov
push
lret
xchg
xlat
mov
mov
lock
in
mov
mov
dec
out
xor
repnz
xchg
test
int3
sahf
and
xchg
inc
stos
mov
mov
and
cli
inc
mov
dec
inc
scas
aam
cwtl
inc
jmp
shr
cmp
mov
inc
dec
lret
hlt
inc
cli
data16
jo
inc
dec
xor
inc
xchg
inc
mov
xchg
xchg
orb
dec
pop
adc
xchg
push
mov
addr16
int3
insb
mov
dec
aaa
das
pop
jp
xchg
mov
out
push
lret
push
aaa
mov
push
inc
cmp
lret
mov
repz
xorb
add
filds
push
addb
insl
xor
pop
adc
fdivp
xor
cmpsl
inc
cmc
xorb
sbb
cli
shl
and
xlat
ret
lret
pop
push
or
int
out
cmp
movl
rolb
mov
cld
mov
in
sub
fsubr
mov
jae
loop
test
xor
sub
sti
sahf
je
pmovmskb
dec
addr16
dec
shll
imull
repz
adcl
adc
inc
xor
sub
adc
mov
enter
mov
ret
mov
int
out
icebp
ret
xor
push
pop
popf
inc
push
xchg
push
mov
sub
cmp
add
adcl
call
push
or
icebp
vsubps
sbb
mov
lods
paddq
dec
jg
andb
idivb
repnz
out
and
jo
cltd
push
test
fwait
push
scas
dec
arpl
lret
or
mov
ret
xlat
out
jae
and
clc
outsl
daa
iret
and
xlat
sbb
jg
outsb
sbbb
mov
jnp
cmpsl
cmp
das
mov
push
push
jge
scas
divl
cmc
xchg
test
xchg
xor
push
lret
sti
ret
mov
incl
int3
and
nop
outsl
or
mov
pop
scas
loopne
mov
stos
mov
and
aas
xor
pop
jnp
adc
dec
mov
xlat
cli
jp
jecxz
cmp
test
jo
xchg
pop
mov
mov
mov
or
orb
push
dec
mov
insl
mov
cli
sbb
loopne
mov
hlt
ljmp
xchg
sub
add
fisubrl
sahf
out
and
jnp
push
or
push
mov
stos
add
xlat
lock
xchg
cld
dec
inc
pop
aad
popa
add
pop
mov
jnp
push
or
stos
cld
sub
jmp
dec
insl
push
aas
sub
mov
imul
imul
scas
dec
push
xor
stos
mov
into
out
jmp
pop
arpl
in
xor
sbb
cs
jl
int3
cmpsb
adc
ja
mov
nop
mov
and
cmp
movsl
inc
adc
dec
add
pop
arpl
aas
push
test
pusha
jle
loopne
scas
repz
cmpsb
out
or
psrld
mov
movb
fcmove
sbb
sub
pusha
pop
test
dec
enter
imul
sub
decb
mov
cmp
icebp
in
add
mov
sbb
xchg
mov
jmp
sbb
pop
cltd
push
inc
stos
pop
lcall
cwtl
mov
add
ficoms
loop
int
sti
mov
popf
add
sub
es
imul
loope
pop
negb
hlt
xor
pusha
and
adc
sti
cwtl
sbb
enter
adc
adc
mov
les
cmpsb
sbb
out
xchg
rol
je
jo
cs
xor
push
rcll
insl
pop
adc
mov
adc
faddp
adc
mov
pop
mov
push
loop
js
adc
dec
xchg
sbb
and
jne
cmp
fs
mov
fisubrl
ret
ret
pop
fiaddl
mov
pop
sbb
mov
add
mov
mov
into
les
mov
fucomi
stos
lcall
rolb
lods
mov
popf
data16
mov
inc
mov
push
fiadds
outsb
pop
aaa
lahf
lock
dec
fisttpl
inc
notl
fdivrs
stos
fstps
push
add
popf
out
leave
test
cmpb
sbb
shlb
js
test
sbb
mov
push
sbb
test
pusha
das
cmc
push
or
gs
std
xor
je
xor
fstps
fwait
jecxz
xchg
movb
adc
lods
lods
inc
jbe
mov
ljmp
cwtl
cmp
fdiv
fs
mov
jle
jo
cmp
dec
sub
fsubr
ljmp
push
mov
push
fwait
xor
adc
adc
jmp
jbe
cmc
pop
push
push
ds
es
pop
xor
int
inc
hlt
dec
dec
mov
dec
xor
mov
add
out
into
mov
aad
movsl
push
xchg
mov
xchg
dec
cmp
mov
js
int3
lcall
js
mov
imul
push
and
jg
addr16
add
scas
leave
stc
push
or
stos
sbbl
pop
fistpll
mov
add
lock
inc
jmp
jle
test
cmpl
ljmp
push
cltd
sub
add
pusha
lods
mov
mov
pop
out
lret
adc
lock
aaa
inc
inc
and
mov
dec
dec
dec
stos
sub
cli
jae
dec
in
or
ss
or
cmp
push
imul
mov
sbb
rol
stos
cmp
outsl
scas
out
xlat
je
loopne
jb
or
jmp
aad
mov
jle
push
and
dec
test
arpl
idivl
and
or
xor
negl
jnp
loope
addr16
fbld
mov
xorb
in
pop
xchg
rorb
in
xchg
les
pop
sub
aad
cwtl
xchg
or
aad
mov
imul
jne
xor
cli
loopne
dec
add
cmp
add
mov
jmp
lods
sub
mov
lds
mov
lcall
mov
mov
mov
ds
pop
adc
dec
mov
cmp
and
sbb
shrl
jl
xlat
in
xchg
and
cmp
sub
mov
sbb
std
and
and
push
cmp
lock
ficomps
mov
aam
popf
lds
loop
in
xor
and
mov
int3
cmc
mov
push
jns
out
adc
mov
repz
push
sarl
int
data16
dec
cs
data16
aam
fidivrs
xchg
or
ljmp
movsb
xchg
incl
call
lds
das
xor
pushf
mov
pop
inc
add
xor
jo
scas
mov
icebp
push
add
cmp
test
push
dec
xchg
xchg
sbb
cmp
iret
jmp
sub
test
js
jmp
std
test
setnp
das
rcll
sub
jmp
mov
fwait
int
aas
mov
sarl
sti
inc
in
xlat
dec
insl
ja
mov
mov
mov
jecxz
lods
out
jg
mov
mov
cmp
jne
push
mov
mov
std
add
adc
sub
and
sub
lds
out
stos
push
sub
mov
and
or
daa
fisubrs
out
mov
lcall
sti
dec
lcall
das
add
xor
mov
inc
jb
xchg
dec
mov
enter
sbb
rclb
mov
lds
push
sbb
cmp
and
sub
xor
orb
inc
sub
cmp
add
mulb
lods
lods
add
or
ret
and
aaa
mov
ds
mov
jae
andb
xchg
and
push
call
mov
sbb
inc
outsl
sbb
int
lods
cmp
dec
pop
mov
mov
mov
mov
jle
sti
sbb
mov
xchg
xchg
mov
inc
mov
sarb
movsb
pop
in
mov
adc
push
adc
aaa
or
mov
pop
ret
ds
mov
call
pop
test
test
cmp
mull
or
inc
loope
pushf
fs
add
lea
lret
adc
cmp
sub
mov
pushf
add
inc
sbb
xor
jae
stos
jbe
and
push
inc
mov
insb
and
jae
push
sub
in
adc
xchg
inc
div
repnz
in
fdivrl
jae
xor
mov
mov
mov
ss
popa
cmp
imul
xor
push
mov
mov
rcll
out
xchg
fwait
add
push
lret
insb
xchg
mov
push
clc
rolb
and
test
in
cmp
js
or
adc
fildll
push
mov
mov
movl
jl
in
stos
xchg
push
lea
jle
and
sbb
lods
loopne
dec
aas
pop
dec
dec
jbe
nop
cltd
jo
lods
or
lret
fcoml
cmpsb
movsb
hlt
push
push
aas
or
mov
test
xchg
adc
mov
das
pop
rorl
inc
mov
inc
insl
inc
pop
les
add
push
imul
inc
or
sbb
add
repnz
sbb
test
xor
dec
shll
std
leave
xor
enter
outsb
int3
adc
xor
push
pop
bound
test
mov
shl
dec
imul
pop
mov
cmp
pop
mov
push
enter
push
pushf
test
pop
mov
imul
cs
iret
mov
push
pusha
mov
out
shl
imul
pop
sbb
push
jle
movsb
jno
xchg
jae
cmp
xor
mov
fmul
fbld
and
cwtl
xor
fwait
loopne
idivl
fadd
frstor
mov
pop
sbb
aas
or
jne
pop
lcall
ljmp
pop
inc
ja
insb
bound
popf
mov
in
iret
push
lock
je
bound
push
mov
or
xchg
dec
cmp
add
outsb
loope
cwtl
lds
adc
loop
in
outsb
mov
dec
push
shlb
test
mov
push
scas
stc
inc
aaa
sub
push
xchg
jbe
cld
cwtl
xor
adc
imul
mov
sub
sti
in
and
mov
adc
sub
add
pop
mov
fnstsw
lahf
cltd
cwtl
fwait
and
hlt
xchg
shrl
stos
cld
stos
cmp
iret
jnp
lret
mov
cmpsb
xor
sub
push
and
out
push
outsb
pushf
push
shl
mov
in
xor
ret
call
or
and
jno
bound
movsl
mov
dec
push
out
xor
int3
pop
int
lret
mov
stc
ret
mov
shl
aam
mov
and
inc
in
shlb
cmpsb
inc
ss
mov
mov
lret
xor
sub
lods
fnstenv
mov
loopne
aaa
xor
cmp
pop
ficomps
xchg
stos
in
mov
xor
xor
mov
seta
lock
jb
outsb
or
mov
jp
imul
sbb
je
enter
nop
mov
dec
rcr
add
mov
out
xchg
clc
sbb
adc
push
xor
negl
or
int3
enter
bound
lods
fwait
repnz
or
xchg
and
lods
arpl
jae
dec
xchg
rclb
aam
stc
inc
inc
cli
fsubrl
bound
daa
out
xor
jnp
xchg
add
inc
jp
xchg
mov
movsb
cli
push
pusha
jno
adc
insl
inc
test
popf
icebp
mov
dec
pop
mov
cwtl
cmp
fstpl
jne
aaa
pop
or
or
push
cld
loop
daa
je
jge
sbb
dec
xor
cmp
gs
sbb
and
jge
iret
lcall
dec
xchg
stc
xchg
mov
xlat
cmc
add
fwait
jg
sahf
loope
mov
dec
xchg
cmp
out
lock
imul
jns
mov
xchg
jg
out
and
popa
in
fdivl
std
and
and
jae
pop
sbbb
nop
or
shrb
mov
inc
xor
ret
sub
dec
xchg
inc
ret
sti
fidivrs
add
pop
and
push
push
jnp
mov
fnsave
sbb
inc
cmp
pop
xlat
std
dec
lds
stos
pop
fadds
fisubs
push
ljmp
shll
push
add
aas
dec
xchg
push
inc
push
loop
push
iret
xchg
push
inc
cs
dec
les
sub
das
mov
inc
xlat
dec
movsl
mov
cs
aam
repz
mov
jmp
outsl
cmp
andl
xor
sahf
cmpl
pushf
mov
scas
cs
cmp
ds
add
inc
call
mov
and
sbb
jae
into
test
push
inc
mov
icebp
loope
jo
jecxz
pop
xor
inc
gs
fldenv
stos
in
xor
jbe
bound
lock
fwait
mov
ss
jne
xor
push
out
mov
out
rcll
bnd
bound
lret
jg
mov
lret
xchg
push
scas
xor
jg
rcl
mov
rcl
mov
jl
call
gs
lds
dec
aaa
cmc
add
mov
out
adc
out
cmpsb
scas
fnsave
std
aad
rclb
sub
sbb
fists
pop
or
in
xchg
or
inc
gs
dec
mov
lods
pop
in
xor
push
popa
inc
jmp
pop
nop
in
push
je
mov
scas
int3
mov
xor
mov
mov
loope
adc
popa
xor
fisubrs
add
mov
mov
jbe
leave
pop
jg
pop
shrb
jae
ret
sar
or
adc
dec
sub
lods
movsb
push
popa
cmpsb
and
push
nop
cwtl
cmp
xchg
in
inc
lock
sbb
xchg
fbld
sub
xor
xchg
lock
adc
pop
ret
mov
fs
roll
or
fstpt
test
xor
stc
ljmp
pop
and
mov
mov
repnz
movsb
mov
inc
dec
xchg
add
mov
test
cmpsb
jl
push
mov
lahf
or
push
or
xchg
pop
clc
iret
loop
jl
sbb
in
jne
lahf
popf
and
mov
outsb
orl
lea
adc
xor
sub
lret
cmp
in
das
lcall
je
mov
pop
inc
adc
sub
mov
les
jb
mov
cmp
jle
push
fcom
xor
pusha
out
fmull
cltd
addr16
sub
cmpsl
sbb
or
aad
out
ret
nop
inc
jmp
popf
dec
ffree
ljmp
loop
test
data16
ret
loope
and
push
pop
mov
pop
sbb
or
adc
aaa
xor
pop
sub
mulb
sub
addr16
testl
divb
or
fnstenv
mov
sub
loop
stos
xchg
sub
pop
pop
lahf
sbb
std
inc
lea
inc
jnp,pt
pop
push
outsl
cmpsb
aaa
lods
cmp
stc
add
inc
jp
jmp
dec
mov
xchg
std
xchg
fists
imul
test
and
call
pop
bound
repnz
and
adc
insl
dec
xchg
xchg
xchg
dec
mov
cmp
fs
out
xchg
or
jle
cmc
dec
int3
push
or
sub
scas
jg
pop
into
mov
push
or
jnp
gs
push
ds
dec
push
mov
push
sbbb
loope
xor
cmp
stos
mov
sbb
stos
leave
cli
cmpsb
aad
mov
scas
adc
sub
sbb
fdivl
adc
add
cmp
cmpsl
inc
iret
xorl
xor
mov
mov
inc
outsl
shlb
inc
adc
cltd
push
shlb
mov
push
jge
icebp
add
jbe
xchg
fldcw
test
imul
mov
push
wrmsr
popf
leave
sbb
and
lods
xorb
jecxz
fstps
jmp
jo
lret
outsb
stos
mov
test
inc
and
mov
jbe
xchg
xchg
lods
cmpsb
popf
inc
jno
inc
outsb
cmpb
mov
lea
mov
cmp
inc
shll
icebp
ret
mov
ds
jmp
cld
pop
adc
ljmp
mov
jge
stos
xor
fs
pop
mov
std
xchg
jp
cs
push
cmp
xchg
mov
imul
iret
jb
repnz
pause
iret
mov
inc
cmpsb
aaa
pop
or
mov
jp
stos
movsl
es
push
adc
fnsave
sub
nop
cmp
mov
mov
jb
cwtl
mov
lods
addb
cmpsb
enter
arpl
jno
loop
push
pusha
leave
pop
pop
adc
in
daa
iret
mov
mov
clc
std
into
sbb
negl
add
gs
or
cmp
mov
sti
or
insb
in
jbe
lret
push
mov
pop
outsb
mov
stos
xchg
hlt
sub
fcos
arpl
aas
push
popf
mov
cmp
imul
mov
sbb
lods
data16
out
adc
js
das
cmp
test
jbe
and
adc
lods
scas
outsl
repz
aaa
add
xchg
dec
xchg
lret
adc
and
push
mov
push
in
gs
mov
push
data16
add
je
push
adc
dec
push
lds
in
sbb
fisubrs
leave
outsb
push
xchg
mov
cmp
pop
and
push
daa
sub
sbb
jg
sbb
pushf
push
pop
ret
leave
scas
push
cwtl
push
lods
pop
adc
into
test
daa
je
mov
movsb
icebp
mov
mov
add
adc
das
outsb
test
jg
mov
xor
pop
sub
into
add
fnstcw
pop
mov
cs
or
fidivrs
cmp
cmp
sbb
push
add
enter
mov
ja
push
jno
mov
popf
push
imul
es
lret
cli
add
test
loope
jo
ds
xchg
jmp
arpl
lret
mov
fidivl
fistps
shl
cwtl
add
dec
xorl
mov
mov
aam
frstor
mov
jb
lods
fdiv
mov
leave
pop
jae
jns
lret
and
daa
push
lds
adc
lods
sbb
pop
jo
cmp
fs
or
stos
repz
insb
inc
inc
dec
fdivs
xchg
pop
sbb
ret
sbb
sbb
arpl
lcall
push
add
mov
fsubp
sbb
lods
ljmp
push
fimuls
cmpsl
dec
faddl
mov
xor
lret
xor
lcall
icebp
push
hlt
cmp
mov
xchg
fsts
pop
and
xchg
test
cmp
mov
repnz
mov
mov
push
jecxz
dec
xchg
mov
and
dec
add
rolb
lret
pop
lods
cmp
adc
aaa
cmp
pop
sbb
rcr
popf
aam
stos
push
adc
movl
inc
jp
lahf
xchg
call
loope
int
fs
push
jns
mov
movsl
lcall
push
cmp
jne
and
cmp
dec
dec
push
lea
icebp
imul
rorb
stos
adc
push
aam
sbb
add
bnd
and
jle
adcl
pop
mov
imul
fldenv
fs
inc
and
dec
push
aam
sub
lock
int
hlt
insl
call
mov
loopne
push
mov
dec
xor
mov
ret
cmpsl
add
idivb
jmp
push
sbb
cmp
ret
das
stc
cmp
movsb
std
xchg
pop
adc
mov
lods
and
int
mov
shr
mov
fistpl
je
lahf
enter
jg
faddl
cli
cmp
lds
xchg
pop
push
mov
je
out
mov
or
xchg
ret
divb
jle
push
cmp
pop
cltd
aas
xchg
cmp
inc
add
xor
inc
jg
push
les
xchg
push
add
push
faddl
push
inc
lds
add
mov
dec
pop
fmul
and
mov
cwtl
aam
jmp
mov
sarb
in
dec
cs
jns
into
movsb
pop
repnz
adc
dec
int3
pop
adc
repz
mov
dec
js
aaa
ljmp
pop
or
push
movsl
jae
aas
xor
cmc
movsb
rcl
subl
fldcw
dec
les
xchg
mov
lret
push
xchg
mov
iret
or
mov
outsb
aas
mov
or
jno
xchg
jne
in
aaa
jno
movsl
cmc
test
cmpsb
test
jae
sub
pop
rorl
push
xor
adc
dec
jge
cwtl
mov
push
lea
pushf
push
outsb
jle
in
lret
add
mov
sbb
mov
lods
ss
movsl
inc
cli
sub
and
ja
cmp
cmpsl
mov
sbb
pop
mov
sbb
out
jbe
mov
scas
sbb
adc
nop
jp
cmpl
aad
push
sub
mov
in
cmp
sti
pop
fcmovnbe
push
rcll
popa
loopne
ds
shll
adc
js
popf
cmp
ret
shll
add
stos
add
pop
mov
movsb
pop
in
stos
rcl
dec
cs
shll
xchg
cmp
mov
loop
and
pop
add
fwait
add
pop
call
imulb
outsb
jp
insb
mov
out
push
stos
adc
std
jns
inc
ds
sahf
subl
push
push
ret
adc
movb
lahf
mov
orl
adc
jle
orb
div
mov
into
nop
mov
mov
mov
xlat
mov
mov
cmp
xor
popl
mov
and
clc
mov
jg
dec
xchg
or
imul
adc
sbb
gs
add
cmpsb
pop
pop
orb
std
jno
adc
jae
cs
fisubs
or
adc
pop
or
dec
jmp
jle,pt
out
mov
pop
sub
push
inc
pop
or
pop
push
test
fs
xor
popa
outsb
xchg
addr16
cmp
mov
cmc
cmc
sbb
idivb
fs
cmpsb
inc
sti
jmp
jnp
and
sbb
cltd
out
xchg
dec
cmp
fcomp
sub
push
mov
js
sub
mov
adc
mov
lahf
mov
dec
xchg
inc
fs
adc
inc
ljmp
pusha
dec
or
pop
jge
les
das
lret
dec
cli
repz
in
and
std
incl
pushf
nop
jbe
movsb
xchg
repnz
dec
mov
int
icebp
xchg
mov
cltd
pop
pop
out
je
vcvtsi2sd
hlt
dec
sub
fs
fcomps
mov
loope
push
sti
jae
inc
xchg
popf
std
dec
mov
push
mov
in
imul
xor
dec
push
and
xor
cmp
dec
sub
iret
fistpll
aas
shrb
mov
jb
out
mov
cli
inc
ret
pop
jecxz
mov
stos
mov
popa
push
rcll
dec
out
sbb
xor
mov
ss
sahf
pop
xchg
push
add
daa
jl
icebp
ret
push
pop
cmp
sub
mov
sbb
dec
cs
lret
test
std
inc
pusha
push
mov
and
pop
and
test
sbb
and
adc
xlat
out
cmp
repz
lcall
movsb
nop
sti
sub
aad
mov
or
nop
movsl
shlb
or
std
lea
mov
fsubr
es
cmp
xor
mov
mov
inc
dec
inc
and
sbb
sbb
imul
pop
ljmp
xchg
sahf
or
pop
sub
and
scas
xor
jp
sbb
xchg
call
xchg
push
sub
sbb
loope
jns
sub
pop
mov
jno
pushf
lods
js
sahf
or
out
inc
test
jno
rolb
test
jbe
push
and
lret
loop
loope
pusha
in
push
roll
and
sub
push
loope
in
push
dec
jae
dec
shrb
adc
ss
rclb
sub
pop
jnp
int
xchg
inc
push
sbb
push
sbb
divb
jb
mov
push
xor
mov
ficoms
gs
push
popf
leave
or
lahf
lea
jge
dec
push
pop
mov
push
aam
fwait
pop
mov
insl
sbb
xchg
mov
addl
test
cmpl
jmp
push
push
push
mov
ret
mov
sahf
daa
xor
cmp
dec
jbe
lods
push
and
inc
into
xor
pop
imul
inc
sar
mov
pop
adc
rclb
into
add
ret
push
imul
popa
jo
dec
loop
lahf
pop
or
pushf
pop
fdivr
out
int
mov
fs
cmp
aas
ss
test
xchg
push
jb
arpl
add
cltd
adc
jle
mov
xchg
sbb
pslld
subl
adc
cld
add
je
push
push
or
jmp
les
mov
xor
mov
mov
cld
orl
das
imul
mov
scas
adc
out
adc
outsb
add
popa
adc
jmp
xor
mov
adc
popa
fdivp
xchg
ss
jg
in
insb
mov
push
push
or
cltd
mov
dec
add
inc
jnp
push
ss
mov
aam
jae
insl
jmp
inc
dec
inc
int
lods
out
jmp
notb
dec
cmp
xchg
adc
in
clc
sub
or
xchg
jnp
enter
fnstcw
call
mov
cwtl
nop
cs
sbb
fsts
repnz
xor
inc
jnp
push
call
add
in
push
xchg
int3
add
or
mov
or
fnsave
dec
mov
jl
loop
mov
mov
arpl
xchg
jno
mov
lock
ss
xchg
adc
mov
ljmp
xlat
cld
add
loop
cmp
cmp
inc
mov
test
aam
xchg
movsl
fsts
lcall
imul
mov
jo
xor
pop
dec
jbe
push
gs
jmp
xchg
jne
sub
push
daa
dec
cmpl
fisubrl
sbb
ds
test
adc
fisubrs
arpl
push
dec
xchg
jmp
jl
push
aam
ds
inc
fcmovnu
pop
je
adcl
mov
mov
in
test
mov
fists
popf
xchg
lcall
stc
jecxz
imul
insb
adc
and
lods
dec
dec
or
cmp
lods
jmp
pop
jae
inc
iret
mov
dec
dec
inc
sar
clc
fbstp
hlt
xor
mov
cltd
jle
rcll
ss
xor
push
insl
mov
push
inc
mov
lea
into
add
les
cmp
mov
adc
or
and
iret
pop
fnstsw
dec
dec
inc
insb
cltd
pushf
das
adc
enter
aad
loope
es
push
lcall
mov
dec
ror
mov
mov
test
mov
xor
xchg
jl
mov
mov
imull
sbb
push
sbb
shrl
fmulp
mov
imul
rcrb
or
lods
mov
lods
push
mov
mov
lret
jge
adc
dec
pop
jge
jg
icebp
pop
popf
jg
cmp
or
movsb
pop
test
fwait
lods
push
cmp
ror
pop
jle
leave
xchg
push
push
orl
pushf
ret
mov
je
fs
and
push
add
xor
out
push
mov
sub
enter
and
pop
outsl
adc
iret
and
push
data16
outsb
xchg
mov
cmpsl
jecxz
ficomps
fs
sub
cltd
cmc
jg
hlt
mov
push
stos
push
cmp
mov
lds
jb
mov
xor
xor
cmp
push
sub
cmp
arpl
sub
xchg
jae
shlb
les
pop
je
mov
sub
sbb
push
dec
and
cmp
orb
iret
sbb
xchg
lret
clc
add
ret
das
test
adc
out
outsb
fldt
sub
jo
aas
jno
jecxz
loopne
aaa
push
sub
les
mov
pop
push
cmp
mov
and
cmp
xchg
xchg
push
xlat
loope
sub
mov
loop
test
dec
jo
cmp
outsb
jecxz
xchg
outsb
int
enter
mov
fcmovbe
push
mov
fnstenv
es
pop
sub
pop
push
iret
cmpsb
int3
cmp
push
mov
push
adc
push
cld
test
clc
lock
jmp
fs
sub
mov
inc
push
xchg
mov
sub
ret
xchg
divb
stc
pop
push
dec
sbb
mov
push
adc
sbb
mov
pop
fistpll
sbb
je
xlat
mov
iret
mov
mov
or
and
mov
inc
xchg
sbb
arpl
aas
jge
aad
aad
or
cmpsl
imul
adc
sbb
notb
bound
outsl
iret
jae
mov
je
test
mov
orl
or
mov
push
xchg
xlat
inc
mov
insl
add
inc
add
test
icebp
mov
mov
or
jb
jecxz
sub
dec
or
aad
call
dec
clc
and
mov
push
dec
dec
lods
das
sub
jnp
or
xor
pop
fisttpll
sar
inc
pop
scas
or
lods
xlat
sub
test
xchg
inc
or
test
or
notl
sbb
std
ds
mov
adc
outsb
pop
pop
rcl
cltd
dec
imul
mov
mov
ret
cmp
cmp
mov
xchg
mov
gs
adc
mov
xchg
imul
nop
adc
mov
sbb
mov
icebp
rorb
daa
cmp
inc
iret
sub
sarb
sahf
xchg
das
mov
dec
or
insl
es
outsb
or
mov
jno
adc
jmp
mov
cmp
cmp
es
push
xchg
push
fwait
xchg
xor
out
dec
popa
mov
or
push
dec
ljmp
xor
push
shl
in
sub
roll
movsb
in
jns
cmc
sbb
dec
cmc
jbe
and
mov
mov
push
and
int3
addb
fldenv
imul
push
fisttpl
push
xor
lods
jo
mov
je
pop
dec
xor
icebp
push
pusha
inc
push
sub
sub
and
lcall
pop
cmpb
arpl
sub
in
xchg
gs
movsl
pop
cs
sahf
push
popa
jnp
adc
mov
pop
in
outsb
or
inc
pop
jg
adc
ret
jne
cwtl
shlb
imul
mov
jns
jmp
mov
scas
aad
loopne
cmp
out
push
adc
dec
js
outsl
icebp
cld
push
imul
push
insb
gs
lods
jp
push
xchg
rolb
fstp
cmc
ret
test
or
xor
dec
frstor
mov
outsb
insb
mov
adc
add
int3
push
push
mov
sahf
jecxz
bound
sub
mov
or
xchg
dec
cltd
jnp
add
push
xor
mov
fcmovnb
adc
xchg
fistl
sbb
xor
aam
fildl
imul
push
fstp
rcll
mov
and
push
xchg
movsl
pop
add
jmp
pushf
in
mov
mov
jg
mov
insb
scas
sbb
fildll
pop
xor
mov
sahf
out
sub
jp
mov
xor
mov
int3
sub
call
pop
or
mov
mov
dec
sbb
ja
sbb
jg
movsb
fldt
insl
mov
inc
or
imul
leave
inc
imul
addb
packsswb
mov
adc
inc
push
sbb
pop
jge
hlt
sub
lret
arpl
out
dec
pushf
test
lods
repz
mov
adc
xor
and
into
sub
xchg
stc
xchg
shl
sub
fbld
stc
pop
mov
sahf
outsl
arpl
or
or
jb
xor
cmp
not
loopne
pop
mov
das
addr16
push
mov
or
xor
jo
push
dec
jo
jns
ss
sbb
jge
and
and
mov
mov
lock
cltd
pushf
push
dec
fldenv
ficoms
or
lret
sbb
xlat
pushf
into
je
jg
pushf
je
mov
pop
jae
adc
int3
jl
sbb
sub
ret
in
sub
fwait
rclb
mov
adc
jo
mov
xor
xchg
rorl
adcb
aam
mov
sbb
add
pop
push
mov
adc
mov
mov
stos
stos
pop
push
mov
xor
lods
out
andb
and
fldenv
jl
repz
faddp
jl
lret
cmp
sub
jae
mov
ret
mov
out
dec
mov
into
push
fdivrl
add
jns
jno
or
cmp
shl
decl
push
incl
aam
rorl
pop
add
aad
imul
loope
inc
fstpl
or
stos
or
inc
or
stc
or
mov
lret
mov
arpl
pop
test
cwtl
das
inc
mov
jecxz
sbbb
fisubrs
lods
cli
adc
inc
lods
xchg
das
sub
fisubrs
sti
rorb
bound
data16
popa
test
mov
bound
std
loop
mov
into
lret
sub
orb
jg
fwait
lahf
push
mov
xchg
mov
int3
cmp
insb
cld
adc
outsb
jmp
fwait
sub
xor
shlb
dec
cmp
ja
dec
test
mov
in
sahf
mov
inc
je
dec
cwtl
add
and
push
leave
push
mov
imul
mov
fisttps
and
bnd
push
mov
adc
bound
cs
addr16
imul
sbb
test
add
fucomip
and
jecxz
mov
jl
insb
push
mov
inc
jb
add
mov
out
out
push
jae
and
fdivrs
and
cmp
popa
mov
mul
je
lock
dec
push
out
stos
pop
lods
cmpsb
mov
cmpsl
cmp
loope
ss
xor
adc
stos
cmp
push
test
cld
mov
sbb
pop
push
xor
int3
add
jnp
jns
pop
mov
mov
in
jbe
mov
scas
loopne
stos
push
pop
xor
pop
or
fnstenv
cs
mov
mov
repz
das
mov
push
fimuls
inc
and
inc
jge
rclb
sub
in
add
inc
movsb
popf
cmp
jns
mov
sahf
push
lods
mov
mov
pop
or
push
fdivrp
mov
rorl
add
dec
mov
ss
movsb
loopne
aad
jnp
lds
xchg
outsb
jbe
cmc
loopne
in
js
lock
push
adc
popf
mov
clc
notb
xchg
dec
cmp
addr16
adc
push
shr
and
inc
aaa
dec
push
jnp
pop
imul
divb
sbb
sbb
adc
inc
mov
std
jbe
xor
fisttpll
filds
pop
xchg
rol
fsubl
adc
add
lahf
outsl
dec
xchg
jns
mov
test
or
arpl
and
mov
cmp
adc
jmp
adc
adc
mov
jnp
sub
cld
pushf
frstor
fimull
xchg
and
cld
adc
sub
inc
jb
push
xor
in
mov
or
jno
in
lds
mov
lcall
lods
push
xchg
iret
in
xor
gs
or
outsl
sub
mov
shlb
dec
lret
and
cmpsb
out
aam
dec
add
adc
sbb
imul
or
mov
out
lret
add
cwtl
jno
movsb
mov
mov
mov
push
cmp
hlt
and
inc
lcall
xorl
daa
jmp
jl
cwtl
ljmp
in
aam
jle
inc
xchg
loop
in
xor
push
les
and
fistpl
pop
lret
data16
xchg
push
sbb
roll
push
sbb
cmp
adc
test
sbb
push
iret
inc
fwait
pushf
push
mov
fdivp
es
in
fsubr
std
loopne
push
push
jl
jle
or
cmp
ljmp
flds
jg
mov
cmp
sub
mov
adc
and
ljmp
dec
stc
pop
jae
rol
push
je
clc
sbb
jmp
cmp
fsts
xchg
call
pop
push
and
pop
sbb
adc
jne
inc
cmp
fisttpll
sbb
cmp
add
mov
stos
lods
scas
mov
mov
or
inc
dec
jp
dec
mov
pop
arpl
in
pop
shlb
popa
arpl
bnd
push
sub
jne
mov
xor
inc
shll
movsb
sahf
stos
sub
xchg
fs
pop
mov
sahf
imull
and
add
scas
shlb
pop
movsl
mov
lret
push
in
lret
rcr
mov
sti
test
aam
ret
sbb
sbb
pop
out
mov
dec
pop
fnsetpm(287
cmpsl
adc
push
pushf
adc
out
xor
das
sbb
jmp
lods
add
out
iret
int3
incb
xor
or
stc
pop
mov
adc
pushf
inc
dec
mov
push
out
icebp
jb
sub
push
sub
in
add
jle
inc
jns
pop
or
jb
push
int
out
mov
add
icebp
adc
xchg
sbb
mov
pop
cmpsb
dec
sbb
movsl
adc
pop
jg
iret
ja
call
lahf
hlt
jl
lcall
fcmove
daa
or
fstl
add
mov
popa
icebp
push
fdivr
mov
mov
mov
xchg
mov
cmp
pushf
dec
outsb
mov
fildll
aam
mov
jmp
push
and
pop
add
nop
dec
adc
pop
or
test
and
sbb
test
push
add
inc
scas
jbe
mov
imul
or
inc
push
inc
ss
adc
mov
ja
jle
das
dec
sbb
and
add
ds
fld
sti
pop
xchg
xor
ljmp
cli
inc
insl
in
lret
mov
lret
mov
cld
add
mov
push
ja
shl
sbb
into
lods
dec
cmc
shlb
es
push
ja
mov
lret
test
sti
push
or
je
lahf
mov
enter
test
test
orb
jp
nop
sub
repnz
jo
dec
pop
aas
push
jg
rcrb
jle
fwait
dec
inc
xchg
adc
outsl
sti
pop
and
shlb
mov
test
cwtl
jecxz
jb
gs
loope
cwtl
mov
push
rol
sub
jb
pusha
loope
imull
addl
mov
gs
lcall
sub
test
and
stos
inc
pop
inc
mov
fimull
lahf
xor
out
push
lds
popf
insl
int3
icebp
add
adc
lret
pop
addr16
mov
mov
dec
cmc
inc
pop
insb
xchg
fs
xchg
mov
add
sub
mov
out
lods
inc
jl
fcomps
dec
in
daa
jg
stos
test
pop
push
cmp
arpl
rolb
in
ja
mov
pop
shlb
sub
stc
mov
test
xchg
mov
push
mov
outsb
jp
int3
mov
clts
call
and
mov
dec
cmp
xchg
jge
mov
dec
mov
cli
out
rcrl
loopne
pop
adc
outsb
adc
mov
rolb
lret
cmp
sti
xchg
push
rclb
or
jae
jns
push
mov
scas
or
in
cmp
push
jp
iret
insl
or
wrmsr
sbb
data16
cld
sti
jo
adc
ret
lock
enter
fldenv
lds
lss
scas
xchg
xchg
repz
sub
data16
out
adc
mov
sub
lea
ret
push
sub
loop
mov
pushfw
decl
jb
or
test
jno
dec
fcomip
inc
scas
jb
inc
out
dec
popf
cmp
mov
mov
xor
dec
rcr
in
ja
add
fcompl
mov
adc
fisubs
sbb
push
jle
cltd
int3
and
arpl
pushf
and
xchg
xchg
jle
int
andb
lret
js
leave
mov
lret
ret
sbb
aas
ret
call
push
jmp
imul
clc
push
aaa
inc
xchg
rclb
sbb
in
pop
add
add
adc
dec
or
cmpsl
popf
push
mov
std
mov
push
cli
push
mov
rolb
jecxz
aam
jp
or
pop
and
xor
xchg
je
inc
xchg
cltd
arpl
mov
fidivs
or
and
loopne
jae
xchg
fldenv
repz
je
mov
adc
mov
pusha
int
add
pop
lcall
dec
lds
lcall
inc
mov
sbb
fstps
dec
push
and
hlt
mov
pop
jmp
jne
or
rol
mov
inc
push
and
push
sahf
loope
test
and
out
int3
sub
roll
out
repnz
neg
shll
push
test
cs
test
cmc
repz
dec
xor
mov
push
pop
stos
mov
push
or
pop
fists
push
jne
inc
inc
pop
mov
test
mov
loope
jl
jno
mov
dec
mov
repz
testl
rclb
ss
cmpsb
lcall
mov
mov
addl
fs
push
xchg
lods
ret
sub
ds
jo
mov
mov
lods
dec
add
push
call
lahf
imul
and
call
pop
xor
test
sbb
ljmp
xchg
xor
out
mov
mov
sub
pop
lret
push
jl
daa
push
jno
dec
dec
adc
cmp
mov
mov
mov
cmp
stos
push
pop
jb
sbb
adc
es
push
hlt
sbb
scas
push
outsb
popf
aam
or
push
push
fdivl
adc
mov
add
pop
pop
ss
mov
pushf
push
insb
add
lods
lods
jg
cmp
es
div
or
icebp
icebp
push
repnz
jmp
mov
scas
mov
cmpsb
mov
daa
sbbb
hlt
mov
dec
push
and
and
or
mov
cwtl
in
push
stc
xchg
pminsw
add
cltd
cmp
dec
outsb
xor
jno
shll
mov
ror
xchg
xor
cmp
es
push
movsl
sbb
ficoml
adc
fisttpll
and
mov
shlb
jnp
jge
mov
xor
pop
xchg
out
mov
out
pop
push
and
dec
ljmp
jle
pop
in
pop
mov
jg
inc
jns
in
mov
lahf
cmpsb
ret
stos
fldenv
nop
push
ret
add
push
inc
fimull
notb
and
inc
mov
inc
out
adc
fscale
mov
mov
out
das
xchg
sbb
data16
push
cmp
push
sbbb
hlt
loope
aaa
xchg
and
inc
scas
out
ret
aas
sub
cmc
xor
aaa
out
pop
out
adc
mov
mov
cmp
dec
test
imulb
cltd
push
test
xor
xchg
dec
dec
dec
mov
sub
jle
iret
mov
jae
aad
sub
jns
das
fimull
sub
stos
xchg
jecxz
inc
pop
mov
sbb
or
aaa
inc
lods
daa
pop
pop
iret
and
or
testl
hlt
xchg
rorl
xchg
jns
jg
shlb
mov
aam
pop
jnp
xchg
mov
push
in
mov
test
jb
outsl
mov
scas
popa
dec
in
adc
mov
outsl
popa
movsl
inc
pop
or
inc
test
push
adc
idiv
stos
imul
lds
mov
xchg
lfs
push
push
fs
sbb
in
ljmp
dec
shlb
leave
cltd
mov
dec
mov
cmp
add
mov
aam
jae,pt
idiv
push
jnp
sbb
aas
mov
ret
stos
daa
call
rcr
outsb
out
xchg
jl
lret
bound
and
dec
xor
mov
mov
jg
std
ficoml
lcall
hlt
mov
cmpl
xor
test
jecxz
xor
inc
enter
fcompp
xor
movsb
sub
movsb
lea
inc
mov
cmp
dec
int
ret
outsb
imul
daa
jecxz
add
or
push
mov
out
scas
push
pusha
mov
jno
cmp
cli
outsb
push
ljmp
movl
clc
out
clc
outsb
jecxz
inc
mov
pop
in
repz
inc
cmp
push
cmp
mov
dec
cmc
fdivrl
sub
xor
das
mov
or
ret
xchg
jns
xchg
mov
ja
pop
data16
pop
ja
imulb
aas
and
popa
cmc
jne
test
sahf
rcrb
cmp
cli
sbb
cli
into
inc
sbb
into
int3
sarb
fildll
push
sub
addr16
les
mov
outsl
lds
es
out
cmp
loopne
add
loope
pop
sbb
sbb
divb
and
nop
nop
mov
adc
popf
cli
cmp
pop
xor
sbb
jb
inc
das
outsl
sbb
mov
clc
or
idivb
mov
xchg
push
push
xor
jecxz
hlt
xchg
mov
jbe
pushf
fwait
mov
scas
mov
pop
sbb
scas
ss
and
call
pop
mov
jp
sbb
sub
xor
das
cmp
mov
xlat
in
xor
lcall
fcom
adc
stc
pop
addl
roll
jge
das
test
fnstcw
enter
aad
jbe
orl
fs
movsl
push
mov
ret
test
adc
mov
jl
test
mov
push
jmp
mov
aam
fnstcw
idiv
js
scas
add
pop
or
or
out
lds
adc
and
out
mov
imul
cltd
cmp
mov
push
mov
ds
mov
lods
pushf
dec
outsb
insl
inc
nop
jae
cmp
por
jecxz
or
js
jae
add
mov
adc
xchg
sub
or
ret
stos
out
sti
loopne
jb
sbb
fisttps
mov
sub
push
icebp
adc
mov
fcmovnb
data16
xor
pop
or
mov
cld
add
or
cs
fisttpll
scas
sti
jmp
imul
cmp
mov
cmp
lods
or
jl
std
push
cmc
adc
mov
or
imul
fimuls
cli
sbb
add
test
lcall
aas
xchg
rcrb
ficomps
call
and
xchg
pop
jb
lcall
mov
mov
ds
sub
js
push
sub
mov
pop
aad
sub
push
int3
lret
push
or
and
aaa
sti
in
dec
dec
jnp
mov
mov
pop
mov
rorl
or
cmp
lret
pop
lcall
loope
sbb
aad
push
fs
out
inc
xor
lcall
lds
mov
int
in
int3
int
arpl
popa
bound
frstor
out
scas
or
lods
mov
stos
fistpll
xchg
sarl
or
pop
jo
imul
sbb
lds
mov
mov
xor
or
lock
out
mov
aas
mov
enter
mov
push
cmp
sub
movsb
and
adc
mov
stc
or
pop
sbb
jnp
jns
insb
dec
ret
adc
inc
sahf
and
fmulp
jns
mov
movhps
fldln2
pop
xor
xor
repz
rcl
cmpl
fsubrl
andl
xor
out
cmpsb
inc
lea
adc
call
int
aaa
mov
xchg
mov
or
ja
jp
add
scas
mov
sub
lret
roll
xor
and
dec
shl
hlt
std
lock
push
pop
andl
xchg
jmp
les
insb
jb
popf
addr16
out
dec
loope
add
shr
out
xchg
xchg
xchg
stos
aas
inc
scas
jae
ret
push
int3
in
imul
in
mov
dec
lcall
orb
jmp
dec
loopne
mov
shrb
cs
je
add
nop
inc
xlat
movsb
or
ret
mov
pop
sbb
outsb
dec
adc
mov
adc
inc
dec
push
lahf
es
xchg
push
pusha
ret
mov
rcrl
jae
loopne
loope
inc
mov
pop
sub
cld
push
pop
push
stos
dec
sub
dec
fnstcw
pop
xchg
fcomps
mov
dec
loopne
movsb
inc
mov
js
fcomps
insl
push
subb
and
sti
jo
aad
adc
out
out
loopne
xor
xchg
leave
lret
fildl
jbe
mov
loopne
sbb
adcl
imul
mov
adcl
arpl
hlt
sti
add
xchg
dec
aam
add
pop
mov
or
mov
rol
mov
adc
sub
aas
push
or
add
shrb
xchg
lods
shlb
int
mov
mov
inc
and
in
mov
mov
daa
loope
inc
or
mov
cmpsb
jg
aad
fstpt
xor
adc
shrl
nop
dec
loope
stos
lcallw
mov
sub
cs
stc
repnz
mov
clc
bound
cmp
aas
repnz
xor
mov
adc
dec
mov
sub
fninit
int
push
fimuls
add
dec
sub
push
shl
outsb
xchg
push
jecxz
dec
mov
cmpsl
add
xchg
mov
aam
icebp
add
imul
imul
push
add
mov
push
jne
std
mov
sub
xor
iret
ds
mov
or
dec
mov
shl
cmc
pop
mov
fdivr
loope
jb
shlb
cltd
mov
movsl
cwtl
mov
add
xlat
xor
add
cs
repnz
stos
jp
push
add
fsubs
imul
sahf
in
jb
sbb
adc
push
popf
push
xchg
nop
sub
icebp
rclb
cmp
lods
fdivs
loopne
cs
negb
int3
cmp
cltd
stos
movsl
or
pop
or
xor
das
xchg
mov
mov
in
lret
pusha
fistpl
xor
fs
adcb
imulb
out
or
rcrl
fisttps
addb
xor
outsl
shrb
jns
rolb
or
dec
jne
adc
in
sub
adc
inc
mov
idivb
mov
push
mov
jae
mov
stos
jl
adc
into
add
pop
pop
pop
sbb
mov
ss
sbb
pop
mov
iret
loopne
repnz
mov
add
cmc
loopne
bound
add
and
pop
imul
scas
sbb
xchg
js
pushf
hlt
cmp
mov
stos
nop
jae
lcall
jge
lods
out
fimuls
add
adc
icebp
jae
dec
mov
fwait
xchg
jecxz
test
push
pop
jecxz
hlt
adc
fsts
fadd
daa
in
cmp
mov
xor
add
js
out
sbb
mov
lods
bt
shlb
pop
xchg
in
jbe
sub
aaa
mov
inc
adc
jns
pop
testl
push
pop
out
add
inc
pushl
fiadds
out
fs
jge
fs
popf
fmull
xor
xchg
xor
add
ds
xchg
jg
adc
xchg
jnp
and
mov
add
xchg
pop
mov
lock
inc
jae
lods
lret
dec
jne
call
fwait
mov
adcl
push
add
into
stos
xor
mov
pushf
adc
lds
cld
mov
lret
cltd
lods
clc
jno
dec
mov
in
mov
js
inc
loopne
movsl
pop
arpl
out
std
jnp
jnp
rorb
mov
cmp
imul
add
aam
es
clc
xchg
and
pop
cli
add
aam
add
mov
arpl
pushf
mov
addr16
mov
inc
xchg
cmpsb
cmp
cmp
mov
in
iret
out
push
sbb
xchg
mov
in
mov
jp
inc
mov
xor
int3
les
mov
movsl
gs
inc
lret
gs
mov
add
cli
mov
lcall
clc
pop
mov
sub
sub
xlat
data16
mov
push
aam
pop
or
gs
mov
sti
adc
jb
call
js
inc
pop
mov
fnstcw
sub
xor
sbb
pop
pop
adc
clc
mov
inc
nop
push
aam
adc
lods
popf
loop
in
inc
fisttpl
mov
jne
cmpsb
sub
test
xlat
or
stc
and
popa
test
push
jbe
inc
mov
pminub
mov
ds
mov
scas
push
jmp
gs
lds
dec
mov
or
es
popf
or
push
jecxz
jecxz
negb
mov
cs
inc
and
out
mov
in
dec
xchg
mov
and
mov
pop
sub
addr16
mov
enter
xor
repnz
jnp
stos
popa
pushf
lcall
int3
sbbl
lods
pushf
or
int3
imul
jge
cmc
outsb
lods
sub
xor
iret
out
mov
in
dec
cmp
daa
testb
popa
stos
insb
inc
or
das
sub
scas
jp
jns
lret
js
cwtl
mov
cmp
repz
popa
push
insl
cmpsl
jp
pop
cwtl
inc
pop
notb
fidivrs
lock
fs
push
xchg
cmp
add
dec
or
test
aas
jno
mov
pop
pusha
mov
iret
inc
daa
fiadds
or
ja
dec
dec
xchg
ja
sub
cmp
cmp
adc
mov
mov
adc
notb
bound
cltd
inc
movsl
movsb
fsubrs
cmp
ljmp
popf
rorb
cmp
and
lret
loop
xchg
sarl
sbb
mov
or
aam
push
es
jbe
sbb
sub
cs
shrb
mov
aam
cwtl
loopne
adc
sahf
push
lods
jae
push
push
cmp
cmpsb
fwait
sbb
push
ret
jne
mov
mov
outsb
jecxz
inc
lods
loop
inc
fwait
mov
jns
std
dec
aas
call
adc
jns
scas
aam
or
outsl
repz
xchg
ret
out
inc
xchg
outsb
mov
xchg
loopne
imul
or
popf
dec
inc
mov
test
sbb
xchg
mov
ljmp
cs
sbb
fidivrl
mov
ret
or
pop
or
push
mov
stos
cwtl
rcrb
xchg
adc
mov
stos
add
scas
call
in
shlb
les
es
push
js
push
mov
jns
or
andb
pop
sbb
jns
or
jnp
into
je
pop
ret
imul
pop
jnp
aad
movsb
xor
jne
jno
dec
pop
dec
sub
or
jmp
adc
popa
add
jne
sub
push
add
sbb
lock
lods
sbb
dec
icebp
sbb
hlt
out
sahf
xchg
imul
fdivl
pop
cmp
adc
aaa
xchg
imul
lea
in
xor
push
mov
aas
loop
sahf
es
mov
xchg
mov
mov
push
andl
pop
pop
enter
int
pop
inc
in
in
or
mov
inc
push
pop
jecxz
in
adc
cmp
int
imul
adc
int
insb
push
adc
cltd
sbb
in
das
scas
push
repz
lods
icebp
fidivs
jmp
mov
and
orb
inc
and
adc
test
adc
scas
mov
pop
cli
adc
and
sub
inc
jecxz
xchg
pop
push
inc
pop
scas
sub
call
xchg
es
mov
dec
xchg
cmc
fnsave
data16
into
mov
es
je
sbb
scas
mov
popf
jmp
lea
ljmp
pusha
fisubl
in
loop
jl
pop
js
sub
pop
jo
mov
pushf
xor
jl
pushf
scas
fprem1
jns
out
push
inc
xchg
mov
orb
lock
adc
jle
ret
jmp
pop
sbb
addr16
sbb
mov
fists
jmp
dec
leave
lods
sbb
nopl
xor
imul
jns
or
lahf
pop
xchg
xor
ljmp
bound
add
jo
cmp
stc
scas
jp
push
aad
sub
adc
jecxz
mov
sub
es
sbb
shrb
push
addr16
jp
or
add
bound
pop
test
pop
dec
daa
jmp
cmp
sub
nop
or
cwtl
test
sbb
mov
jle
adcb
leave
push
das
sub
lds
pop
inc
ss
cld
or
jo
pop
and
push
aaa
inc
mov
int3
jae
lods
xchg
push
jne
adc
sbb
fsubrl
in
popa
push
and
loope
push
jmp
push
aas
pop
lret
adc
outsb
push
xor
in
imul
ds
rorl
aad
sub
iret
jg
jno
mov
mov
jg
jp
fidivrs
lods
fwait
out
je
into
rorl
sub
je
and
push
adc
sub
jecxz
cmp
push
jl
dec
jl
mov
int
scas
shr
stos
loopne
aas
test
and
pop
jl
repnz
jmp
mov
jns
fiadds
lahf
jb
fsts
lret
inc
hlt
shrl
sub
iret
enter
scas
pop
mov
cld
push
xchg
or
inc
pusha
xchg
jecxz
imul
dec
cld
inc
pusha
push
imull
gs
push
mov
int3
push
xchg
push
bound
cltd
and
pop
lods
das
fildl
fisubrs
jmp
mov
cli
inc
xor
stc
lret
in
xchg
adc
ljmp
jecxz
or
insb
add
loop
push
negb
int
imul
or
sub
adc
push
add
int3
push
icebp
xchg
push
add
pop
xchg
xchg
pop
sub
mulb
adc
mov
mov
iret
pop
lods
rcr
popf
jbe
jp
mov
pop
cmc
mov
pop
dec
movsb
sub
adc
in
or
mov
mov
cltd
addl
or
push
push
cmp
shll
loopne
popa
cmp
adc
icebp
adc
or
lret
test
sbb
insb
adc
das
leave
jnp
adc
daa
test
lahf
pop
jge
or
cld
xor
in
dec
jg
push
cltd
ret
sbb
jmp
mov
or
xor
push
gs
or
not
into
cmp
or
sub
enter
mov
mov
mov
test
repnz
sarb
xor
nop
pusha
cmp
insl
dec
loope
fcomps
incb
rol
push
or
ret
push
fstl
sbb
jns
or
jb
add
xor
scas
adc
jb
jb
sub
mov
xchg
pop
sahf
pop
orb
and
and
xchg
or
out
outsb
push
ss
pop
xor
mov
fwait
pop
ror
dec
in
ds
jnp
jnp
sbb
mov
scas
int3
add
or
hlt
and
mov
enter
adc
enter
fsubp
xor
and
daa
repz
cltd
cmpsl
cs
xlat
lock
adc
sarl
ret
dec
ret
pop
rcl
mov
sahf
popf
sbb
andl
and
mov
scas
pop
sar
jb
insl
jp
lea
sbb
js
lret
and
cmp
xor
sahf
dec
fwait
sahf
fidivs
xor
push
repnz
dec
jmp
inc
xchg
adc
insb
mov
mov
add
push
sbb
jnp
hlt
cmc
sub
dec
stc
pop
test
stc
aad
xchg
int3
adc
stc
cmc
jmp
push
inc
xchg
repnz
mov
sysexit
mov
mov
mov
mov
outsb
lods
inc
and
pop
xchg
nop
jne
das
mov
les
xchg
mov
addr16
pop
call
and
pop
sbb
add
les
shrb
out
fnsave
jns
lods
stos
push
inc
jo
add
inc
or
cmp
mov
dec
aad
cmpsb
and
daa
pusha
xchg
or
xchg
mov
cmc
push
adc
sub
icebp
push
cs
popf
movsl
dec
subb
test
test
clc
dec
enter
bound
rol
cs
jns
les
pushf
xchg
dec
scas
mov
add
push
in
mov
sub
cli
mov
rcll
sbb
inc
xchg
mov
in
in
jae
xlat
lods
cli
inc
dec
add
sbb
loopne
xor
call
xchg
inc
mov
pop
in
faddl
addl
and
sti
xor
push
lods
arpl
or
stos
je
ss
leave
lret
scas
adc
insb
pop
push
sbb
or
push
inc
adc
jg
pop
stos
dec
int3
js
dec
bound
cld
ds
jae
movsb
mov
cmp
mov
cmp
add
push
and
jo
fcoms
fiaddl
mov
adc
enter
ss
pop
std
push
filds
ds
pop
inc
xor
or
xor
xchg
and
enter
stos
cmp
dec
stc
outsl
icebp
pusha
jle
xchg
and
repnz
push
call
xchg
clc
pmaddwd
sub
repnz
ret
idivl
xor
popa
push
shrb
inc
xlat
enter
pop
imul
sub
int3
movsl
sbb
push
je
sbb
adc
or
pop
xchg
mov
or
inc
pop
outsb
adc
rorl
dec
lods
popf
cltd
into
fldt
cmpsb
mov
push
xor
subb
adc
or
pop
and
fs
xchg
jnp
inc
mov
dec
cmpsb
notb
dec
rcrl
jg
xchg
jno
mov
icebp
cmp
xor
mov
ds
pushf
rorl
das
sbb
jbe
jnp
push
pop
dec
xor
arpl
mov
sti
and
addr16
xchg
mov
or
adc
les
mov
dec
cmp
std
pop
xchg
jl
aaa
xchg
subl
aas
daa
mov
xlat
cmc
mov
jb
push
jbe
cmpl
xchg
push
adc
mov
mov
lea
enter
popf
push
cmc
dec
cwtl
cltd
dec
cmc
xor
xchg
cmp
std
or
sti
xor
jnp
pop
negl
das
sub
cmp
imulb
into
sub
adc
cmp
out
xlat
int
push
out
sub
jnp
xor
je
push
pushl
iret
sub
sub
cmpsb
cltd
jmp
sbb
mov
adc
scas
scas
jmp
aad
mov
or
popa
jecxz
adc
movsb
inc
inc
adc
and
push
xor
stc
xor
mov
fs
or
pushw
xor
enter
andl
push
cmp
mov
and
test
jbe
push
movsl
or
cltd
leave
mov
iret
mulb
ret
and
insb
fidivrs
popa
mov
loop
inc
xchg
push
sbbb
call
js
out
push
fwait
mov
mov
ret
mov
bswap
scas
iret
int
inc
or
adc
push
lds
xchg
jl
xchg
jb
xchg
enter
ss
cs
cmp
pop
movl
pop
loop
cmp
cmp
and
sbb
xchg
clc
push
out
lcall
push
clc
jl
fistpll
scas
mov
sahf
push
adc
rorl
dec
jo
sub
mov
arpl
das
mov
shrw
pop
mov
fnstsw
adc
adc
lret
and
mov
mov
xchg
jmp
daa
shrl
jmp
push
iret
xchg
sbb
sbb
pop
lcall
iret
or
cli
xchg
stc
in
sbb
pop
outsb
test
es
fwait
pushw
cs
movsl
dec
aaa
cmp
push
aaa
adc
outsb
xor
sub
add
xchg
dec
paddb
push
pop
rcrl
xchg
or
lret
stc
or
jge
popa
sbb
rorl
fwait
stos
cmp
jp
in
dec
push
repz
mov
dec
and
call
xchg
push
je
stos
fs
push
imul
mov
fdivrl
call
loope
push
push
pop
arpl
dec
nop
mov
mov
popf
ja
pop
movsl
call
daa
xchg
leave
push
movsb
pop
rolb
xlat
add
mov
mov
in
das
push
cmpsb
cmp
and
cli
cmpsl
hlt
inc
inc
call
mov
shr
cmp
xchg
push
or
xor
add
outsl
inc
lcall
inc
test
test
lods
inc
stos
fidivl
cmpl
sub
cld
gs
sar
push
mov
dec
inc
xor
fildl
mov
xor
jo
mov
and
xor
filds
imul
mov
dec
outsl
xor
out
xor
pop
fldenv
mov
sbb
dec
ljmp
icebp
cs
sbb
mov
mov
mov
jl
shlb
fldl
movsb
fs
cmp
sbbl
cmp
sub
stos
subl
std
inc
mov
adc
ss
push
sbb
aas
das
in
xor
aam
int
push
insb
mov
rclb
mov
scas
mov
sbb
jecxz
pop
adc
mov
stos
lahf
add
mov
pop
mov
lods
mov
enter
out
sub
add
cmp
sub
xchg
push
stos
les
mov
jae
cmp
scas
lahf
into
push
push
mov
daa
add
clc
add
cmpsb
fdivr
repz
pop
adc
mov
and
notl
adc
or
sub
adcb
test
mov
imul
fwait
push
lcall
jecxz
aam
mov
pusha
pop
dec
loop
stos
jno
movsl
xor
aas
jle
addr16
dec
test
push
pop
sub
shll
mov
ljmp
lock
in
clc
in
xchg
jle
cmc
add
push
push
jecxz
lock
cmp
je
lahf
adc
ret
jns
dec
aaa
jge
mov
push
mov
andb
lcall
test
dec
adc
stos
out
xor
imul
jmp
push
dec
or
lret
test
sbb
std
mov
inc
xchg
aaa
pop
pop
iret
fnsave
mov
dec
ds
dec
mov
repz
pop
xchg
push
or
jae
cmp
rcrb
fwait
ret
mov
ret
lret
inc
inc
jb
xor
inc
xorb
mov
cli
cmpsb
lds
imul
cltd
in
loope
inc
gs
xchg
mov
mov
mov
cmp
sbb
je
push
jg
das
mov
mov
pop
mov
faddl
inc
int3
jne
sbbb
mov
std
inc
aaa
jb
pop
cmp
repz
je
jg
inc
into
fucomi
xchg
out
inc
lods
cld
cmp
repz
add
mov
adc
divb
add
push
gs
rcrb
inc
cmp
imul
out
jns
ret
xlat
xlat
out
pop
sub
adc
mov
fstl
sbb
push
sbb
outsl
iret
in
lds
pop
out
xbegin
and
out
in
clc
add
sub
push
add
jge
mov
mov
in
adc
ja
aaa
or
fdivr
mov
sarl
roll
dec
inc
sub
jns
out
mov
mov
mov
fidivl
inc
jge
imul
adc
dec
jae
jb
aad
xchg
adc
clc
dec
cmc
sub
fdivrs
popa
push
leave
xor
cmp
lods
scas
repz
scas
inc
les
cmc
jo
add
dec
js
mov
js
cs
fs
data16
stos
mov
or
dec
movsl
pop
inc
cltd
or
hlt
rcll
adc
lds
hlt
cmp
mov
mov
out
mov
pop
int3
rcrb
pop
lock
mov
movsl
scas
mov
maskmovq
mov
outsl
pop
sub
push
push
pop
faddl
or
pop
sub
mov
call
or
cli
pusha
pusha
jb
out
int
lretw
lret
mov
mov
cmpsl
into
pop
sub
lret
and
mov
jmp
mov
push
imul
pop
cwtl
pop
sbb
sbb
adc
mov
cli
ja
pop
aam
push
ja
inc
mov
shr
pop
or
test
outsl
sahf
lds
outsb
aam
movsl
hlt
inc
jle
sbb
movsl
or
jbe
cmp
sub
stos
inc
and
outsb
daa
inc
xlat
mul
xchg
lahf
lods
jg
xor
mov
jp
popf
lret
into
lods
das
add
push
cmc
stos
addr16
ljmp
pop
add
add
dec
inc
mov
jns
imull
dec
mov
inc
pop
jle
xrelease
inc
sbb
lds
imul
js
js
out
lock
js
mov
sub
cli
pop
mov
inc
imul
fldl2e
xchg
test
add
nop
gs
fistl
sub
cmc
mov
push
test
lea
les
ja
ret
jno
ja
movsl
cmp
xor
incl
rcrl
xchg
jno
pop
nop
mov
outsb
jmp
pop
cmpsl
mov
mov
shrl
mov
out
lds
cmpsb
inc
and
cli
xor
incb
test
jge
xchg
mov
push
sbb
stc
enter
cmpsl
inc
jae
lods
cwtl
leave
data16
outsl
pop
xorl
fwait
aad
push
sub
sub
fiaddl
jmp
movsl
int
shlb
or
mov
in
in
jecxz
insb
rclb
inc
aad
add
jbe
mov
adc
arpl
jb
test
adc
xor
das
adc
test
stc
push
mov
das
inc
jo
jae
lcall
insb
adc
sub
das
out
adc
icebp
out
enter
cwtl
cld
push
cs
clc
dec
imul
div
add
cmp
std
mov
stos
push
cmc
jns
xchg
push
mov
mov
out
mov
mov
into
xchg
sbb
inc
push
xchg
addr16
mov
test
xor
aas
lret
push
mov
mov
mov
jl
shll
mov
xchg
in
call
jo
mov
jnp
adc
pop
dec
add
out
adc
incl
sub
jg
outsb
mov
xor
sar
sbb
or
mov
lcall
xchg
cmpsl
xchg
adc
mov
inc
jge
xor
ljmp
jae
test
sbb
xlat
stos
push
jo
xchg
add
xchg
inc
inc
stos
and
out
sub
sub
inc
lret
add
push
ss
fidivl
mov
lahf
ds
push
or
nop
icebp
xchg
jge
xor
and
cwtl
mov
leave
push
mov
dec
or
test
sbb
test
mov
in
mov
inc
pop
sbb
fwait
iret
lods
cmp
jo
lret
int3
sub
mov
mov
test
xchg
pop
xor
std
adc
mov
movsb
jg
xchg
sub
cmp
out
enter
or
pop
jb
jne
movsb
mov
lods
das
add
or
mov
or
popa
shrl
into
sub
in
inc
cli
inc
adc
das
nop
sub
sbb
cwtl
int
or
pop
xor
and
xorl
adc
dec
sbb
enter
jg
sbb
js
scas
lcall
in
lock
ljmp
ret
lret
pop
or
inc
lret
pop
cmpb
scas
cmc
dec
stos
pop
fdivrp
jne
xor
leave
push
daa
pop
test
in
push
sbb
jno
sub
xchg
pop
cmp
dec
pop
pop
aaa
popf
adc
jl
in
bound
scas
ret
xor
sbb
repnz
lahf
int3
in
sbb
fndisi(8087
jle
jmp
ret
mov
icebp
dec
shrb
or
jns
adc
in
inc
test
lods
ffreep
leave
jae
leave
test
cs
cwtl
popa
sbb
stos
dec
mov
ror
jl
pop
sbb
icebp
mov
pop
aad
xor
test
xchg
pushf
adc
dec
sbb
cmc
enter
or
mov
outsb
mov
nop
fucomi
sbb
dec
sbb
or
xor
fisttpll
movsl
arpl
push
ja
shrl
lret
jmp
mov
lods
sub
sub
enter
insl
fwait
addr16
out
or
and
lods
lcall
xchg
pop
xchg
orl
add
or
movsb
ret
adc
dec
push
test
push
mov
push
aam
dec
dec
lcall
cmc
sbb
mov
aas
jl
loopne
pushf
ja
mov
out
pop
data16
fadds
cmp
pushf
pop
fisubrl
out
lds
mov
imul
mov
pop
lods
sbb
pop
inc
adc
mov
or
outsb
cs
jmp
mov
mov
jno
repnz
pop
pop
ror
ret
xchg
rcl
movsl
es
sub
cmp
test
ljmp
and
cwtl
int
xchg
cmp
imul
out
mov
cli
out
push
into
jns
pop
pop
adc
aad
lea
jbe
xor
loope
add
negb
inc
rclb
test
pop
cli
cmp
adc
cmp
sbb
fldenv
sbbb
sbb
jbe
pop
push
je
mov
out
aad
mov
cmp
jno
or
imul
lds
in
imul
shl
and
out
cmpsb
repz
in
jno
pop
sbb
pop
inc
ret
inc
cmp
dec
cltd
test
insl
stc
sbb
or
xor
xchg
icebp
jnp
xchg
mov
insl
adc
lahf
sbb
xor
cmpsl
pop
mov
mov
fdivs
dec
push
mov
insb
out
add
movsl
dec
dec
imul
pop
movsb
adcb
and
xor
aaa
out
pop
lea
std
xor
dec
cmp
fsubrs
fcmovu
movsb
imul
lods
mov
or
loop
mov
adc
data16
dec
sub
fwait
stos
in
or
fbstp
aas
xchg
mov
inc
adc
jg
mov
das
lahf
mov
fmulp
mov
lcall
movsb
shll
adc
andb
and
adc
mov
imul
out
insl
sti
jno
xchg
frstor
mov
jno
js
outsl
add
aad
lods
adc
jle
or
xor
inc
mov
inc
dec
mov
add
jle
shll
aas
xor
js
leave
and
push
push
movsb
icebp
test
lea
lea
jmp
sbb
cltd
add
call
out
cwtl
hlt
imul
mov
or
test
mov
jp
mov
stos
jns
add
and
bound
pop
jne
sub
adc
mov
jge
addl
or
test
add
cli
sbb
cmpsb
cmp
sub
dec
stos
std
jg
enter
jno
xor
push
push
repnz
inc
mov
inc
vmovaps
clc
mov
pop
sub
cltd
cld
push
dec
jmp
repnz
sbb
loopne
je
xlat
fdivrl
xchg
mov
dec
push
clc
push
das
subl
loope
es
clc
mov
mov
adc
sub
lret
add
idivl
and
icebp
insb
pop
dec
sti
cmp
dec
icebp
push
xchg
test
mov
cmpsl
ss
jne
xchg
fistpl
shl
popa
repnz
fbld
hlt
test
imul
push
lcall
mov
sbb
mov
lret
sbb
cld
mov
sub
fwait
dec
mov
mov
arpl
dec
xor
push
sbb
sub
mov
pop
lea
stos
out
pusha
andl
cltd
dec
mov
stc
js
xchg
mov
jae
sub
cmpsl
push
jne
outsb
fcompl
js
jno
addl
mov
xor
mov
or
and
mov
sbb
psubb
int
xchg
mov
xchg
cmc
pop
mov
loope
push
mov
push
push
imul
xor
mov
filds
push
mov
push
outsl
cmp
stos
repnz
std
xchg
jle
mov
jb
cltd
popa
inc
mov
sbb
xor
arpl
rorl
push
xchg
fistpll
cmp
fwait
adc
sbb
cmp
outsl
inc
ds
roll
into
movb
testl
test
jno
sub
xor
dec
lock
cmpsl
mov
repz
loope
pop
in
insl
test
ds
lea
daa
lods
push
cld
xchg
out
pop
and
rcr
adc
js
mov
stc
mov
mov
adc
sub
sti
mov
jnp
and
sarl
adc
lds
jnp
inc
jp
out
push
repz
out
insb
pop
lahf
ficoml
jmp
or
mov
repz
mov
jbe
push
stos
int
outsb
inc
popa
addb
push
cmp
pop
push
aaa
mov
jecxz
call
insb
jmp
cmp
mov
out
pushf
adc
xor
sti
push
mov
clc
adc
lods
sbb
outsb
shl
idivb
jl
in
fwait
pushf
out
push
push
sbb
repnz
jne
fnstenv
dec
adc
adc
mov
cmp
aam
or
jbe
dec
pop
pop
mov
loope
arpl
mov
push
ss
fistl
pop
mov
sub
scas
jp
int
inc
stos
and
and
sbb
mov
push
mov
std
cmc
xchg
aad
test
ud0
in
into
mov
jae
dec
add
cld
gs
decl
movsl
fbstp
ret
xor
inc
pop
dec
mov
pushf
fsubrs
mov
pop
mov
jnp
shll
test
aas
scas
xchg
inc
pop
arpl
movsl
nop
ja
adc
ret
inc
ja
pusha
sbb
or
loop
cmp
xor
and
mov
sub
arpl
xchg
je
xchg
sub
mov
in
ja
ljmp
lock
fistpll
roll
pop
dec
loope
pop
hlt
mov
or
sbb
push
dec
idivb
in
aas
mov
nop
push
add
je
mov
sahf
loop
scas
xchg
repnz
out
icebp
movsl
sub
xchg
fs
int3
hlt
divb
dec
inc
mov
xor
add
iret
cs
nop
bound
sbb
lret
cmp
and
das
pop
cmp
lcall
out
test
lods
inc
pop
or
push
in
lods
sub
leave
inc
sbb
add
mov
stos
shrl
aaa
cmc
push
fcoms
mov
iret
mov
je
adc
adc
mov
adc
aam
lods
stc
ret
lock
negl
cmp
dec
outsb
or
aaa
pusha
xor
xchg
loopne
mov
scas
inc
and
dec
push
and
lods
sbb
dec
daa
push
xchg
jmp
gs
ret
cmpb
imul
dec
ja
ret
jae
rcrb
enter
mov
xor
inc
mov
sub
mov
das
xor
aaa
push
insb
or
mov
pop
test
and
and
ljmp
data16
sbb
mov
pusha
sahf
lahf
rol
mov
push
std
out
sub
inc
mov
fistps
test
lds
jp
hlt
mov
lret
xchg
cmpsb
jecxz
daa
pop
adc
dec
movsb
lock
int3
mov
xchg
in
sbb
push
fdivs
jmp
lods
mov
add
insb
sbb
and
test
les
fsts
fdivl
imul
or
test
and
xor
and
leave
mov
or
push
dec
in
scas
and
int
cs
push
pusha
psubq
add
sbb
enter
sti
sbb
imulb
arpl
in
mov
jae
addr16
test
lds
pop
mov
mov
inc
and
mov
fs
lods
cmp
sub
sub
sarb
push
jb
in
jnp
xchg
jl
cwtl
xor
ljmp
add
mull
lods
xor
sub
out
mov
rcrl
mov
pop
fimuls
mov
loopne
rclb
dec
mov
out
add
and
pop
pop
or
or
arpl
xchg
or
das
mov
xor
lahf
cwtl
xchg
insl
push
adc
jne
push
cmp
cmp
sub
pushf
cmp
test
or
les
cmpsb
cmp
mov
cmp
xor
inc
int
ss
pusha
lcall
cmp
in
and
enter
xor
cmp
mov
sarl
xor
roll
mov
mov
cmp
and
popa
add
pop
movsb
dec
inc
cmp
jae
aam
cmp
pop
cltd
es
movsb
pop
adc
aas
dec
push
in
push
ds
test
or
in
in
fnstsw
cmpsb
sbb
jmp
jno
sahf
xchg
popa
xchg
mov
sbb
or
shlb
mov
into
mov
movsb
rolb
mov
data16
lahf
mov
andb
je
sub
sbb
cld
jo
and
push
xor
dec
loop
pop
inc
inc
std
je
jae
and
bound
rorl
fidivs
pop
ljmp
push
mov
pop
jo
jb
out
outsb
scas
add
and
mov
syscall
aad
mov
xchg
aaa
hlt
gs
sub
and
sub
clc
bound
bound
jo
mov
xor
sub
push
lret
jne
mov
inc
jnp
pushf
lock
es
bnd
hlt
pop
call
jnp
pushf
loop
mov
mov
pop
in
shll
pop
pop
in
pop
pop
or
pop
or
jecxz
mov
aaa
xor
fildll
sbb
pop
inc
gs
dec
cmpsl
pop
sub
lds
mov
ret
sahf
lods
push
in
outsb
xor
inc
mov
shl
or
cmpsb
jg
xor
es
aas
and
lea
cld
les
mov
sbb
repz
mov
or
sub
and
daa
push
addr16
sub
daa
pop
xchg
jno
popf
jbe
ret
add
fcmovb
mov
push
adc
jo
ja
lea
mov
andb
mov
int3
and
or
sarb
in
mov
xor
or
cli
loopne
imul
test
movl
xor
cmpxchg
les
lods
ret
and
jb
jl
in
jcxz
scas
bound
mov
pop
cli
and
mov
cmpsl
mov
in
out
ss
popa
xchg
xchg
mov
add
cmp
fst
pop
daa
xor
dec
cltd
sti
xchg
int3
js
es
lea
sbb
mov
mov
cwtl
dec
xor
push
cmpl
cmp
pop
sahf
int
jl
outsb
mov
and
xor
or
jo
cmp
and
dec
jbe
popa
sub
cmp
test
data16
loope
or
orb
nop
mov
roll
arpl
into
jmp
push
pop
pop
shll
xor
lahf
cmpsb
sbb
dec
lds
xor
jno
orb
popa
mov
xchg
lret
fstpl
dec
mov
lds
clc
push
push
xor
lret
add
in
jae
jbe
xor
sbbb
sbb
jmp
repz
mov
loopne
scas
xor
test
outsb
xor
sti
dec
push
bound
aaa
test
jg
sub
cld
mov
ret
fisubs
test
test
sbb
cmp
mov
xor
jge
repnz
adc
mov
push
mov
mov
mov
xor
test
xor
les
xchg
in
sbb
iret
outsb
xchg
or
xchg
fnsave
fpatan
fwait
or
sti
mov
and
xlat
pop
mov
rol
sbb
push
or
push
sarb
sbb
fimuls
negb
stos
add
std
mov
jp
jg
mov
ret
add
daa
xlat
mov
clc
sahf
mov
mov
lret
inc
pop
icebp
mov
push
xor
xor
repnz
adc
lahf
jmp
add
mov
mull
and
clc
xor
xorb
cmp
and
pushl
fimull
out
shrl
das
inc
push
outsl
enter
jp
xor
dec
adc
dec
xor
xchg
stos
mov
sbb
push
cli
inc
inc
mov
xor
repnz
dec
jecxz
inc
sub
fbstp
aam
adc
frstor
and
adc
mov
test
adc
dec
xchg
mov
mov
push
xor
sbb
std
inc
sub
dec
dec
dec
mov
pop
into
sti
add
fisubrl
arpl
jno
sti
das
pop
fiaddl
mov
pop
cmpl
fldt
gs
pop
push
add
das
mov
out
fcomip
rorb
jb
into
pop
push
hlt
cmc
das
test
add
fisubl
sub
insb
test
add
js
into
jb
insb
pop
mov
pop
out
xor
cmpsb
imul
xchg
or
popa
cmc
sbbl
loop
mov
xchg
push
rcl
xor
popf
cmp
jnp
test
add
test
lea
sbb
les
mov
dec
stos
addr16
aas
jecxz
dec
mov
roll
sub
xor
jg
shrl
xlat
icebp
cmpsb
adc
mov
pop
test
push
and
rcr
cmpsl
jbe
cli
xor
shlb
xor
pushf
mov
xor
iret
test
jp
aad
mov
add
mov
push
jg
out
int3
cwtl
mov
sti
dec
dec
jae
ss
ror
das
rcll
xchg
push
fsubrp
fs
mov
sub
inc
test
cs
je
mov
aaa
xor
xor
scas
aaa
xchg
cmpsl
xchg
outsb
test
add
js
xchg
xchg
nop
pushf
arpl
cltd
inc
das
adc
mov
pushf
jno
inc
mov
push
lret
add
mov
iret
popl
data16
xchg
and
int
dec
push
rorb
pop
sarb
fisttpl
cmp
and
shr
push
jp
adcb
test
pop
and
test
pop
cwtl
nop
je
shl
arpl
cmp
rcll
orb
in
imul
and
lret
sti
mulps
sbb
adc
fisttpll
popf
out
dec
pop
sub
push
pushf
lea
lahf
mov
xchg
lock
test
add
movsl
stc
xchg
mov
cld
pop
jae
push
and
xchg
inc
xchg
or
stos
mov
insb
jp
and
insb
js
sbb
iret
sbb
fstl
lods
cmp
cld
pop
pop
dec
out
xchg
clc
inc
xor
out
and
cbtw
pop
or
add
inc
loopne
sbb
or
lea
clc
mov
adc
arpl
jb
and
clc
loopne
loop
pop
shll
in
or
cmc
push
test
fisttpl
mov
int
mov
test
mov
sub
or
mov
enter
mov
jge
inc
divl
arpl
dec
aad
push
mov
mov
add
mov
jne
mov
rcrb
inc
repnz
mov
and
lret
decl
nop
iret
jl
sub
out
ret
aad
jns
sti
fstl
mov
int
aas
mov
fiadds
in
mov
shrl
das
cmpsb
shrb
cmp
mov
adc
fstpl
add
out
lock
mull
int3
add
mov
scas
sbb
stos
out
repz
sub
outsb
sbb
call
inc
daa
add
dec
pop
test
call
mov
imul
stos
fldcw
nop
sti
push
cmpsb
in
mov
mov
ljmp
xchg
adc
inc
ret
fsub
stos
xor
cmp
jne
inc
out
fidivrs
rcll
test
mov
or
lret
loope
decl
orb
sub
mov
test
pop
push
fdivp
cmp
xor
cmp
ret
lods
lds
pop
sbb
pop
push
mov
call
cmc
xchg
lods
adc
and
mov
shl
dec
cld
aas
or
lock
iret
ret
xor
ja
jbe
push
cld
jp
fistl
xchg
mov
inc
xor
ljmp
add
push
inc
mov
jle
daa
aam
insb
mov
loopne
out
jp
leave
pop
mov
ja
dec
cmp
mov
jecxz
push
xchg
insl
mov
movsb
sub
rorl
je
fidivrs
jb
mov
and
adcl
iret
add
mov
push
sbb
mov
push
cwtl
add
rcll
xchg
ljmp
dec
ljmp
fdivl
shll
xor
xchg
je
outsl
and
cwtl
fildl
in
aad
xchg
pop
pushf
cmova
push
adc
pop
push
mov
aaa
neg
adc
das
push
add
dec
out
sahf
add
fstl
mov
pop
cmp
mov
mov
mov
add
inc
std
mov
clc
mov
stos
sbbl
mov
dec
ljmp
mov
loopne
rclb
outsl
subb
inc
mov
lods
mov
fxch
into
push
repz
xchg
rorb
mov
adc
add
push
cli
or
xor
xor
lock
mov
icebp
gs
stc
and
mov
pop
sbb
sub
call
fimuls
or
mov
fisttpll
mov
mov
mov
mov
mov
and
loopne
pusha
dec
pop
das
in
adc
dec
mov
push
push
mov
jecxz
xchg
mov
and
mov
ret
testl
das
stos
popa
xor
push
jo
lods
mov
and
xchg
xchg
mov
pop
repnz
ret
sub
mov
adc
mov
fdivs
lock
lcall
out
lahf
jl
lcall
xor
fsubl
clc
pop
sahf
lods
jno
in
fs
pop
add
add
dec
ficoms
or
js
into
mov
mov
xor
jecxz
mov
cwtl
aas
sbb
and
movsl
call
test
stc
pop
cmp
jge
les
sbb
sti
push
lcall
xor
iret
adc
mov
or
shlb
push
imul
xor
loope
vmovd
aad
fwait
out
jnp
lods
mov
push
loopne
sbb
fs
std
cmpsl
jno
inc
outsl
movl
popa
ss
imul
adc
out
test
bound
xor
aaa
data16
movsb
fsubrs
add
jns
xor
scas
ss
rorb
pop
push
sbb
push
movsb
and
fnstsw
js
mov
nop
xlat
add
sub
push
or
xchg
sub
popa
leave
lcall
fsubs
jbe
lods
xchg
rorb
sbb
cmpsl
pop
imul
mov
adc
into
add
xchg
push
dec
lea
cmpsb
push
adc
push
enter
add
mov
push
stc
inc
xor
and
add
and
pop
ret
mov
scas
xchg
or
push
xchg
cmp
rorl
mov
lds
fisttpl
push
adc
fsub
or
adc
les
dec
jae
mov
lcall
lahf
andl
mov
lret
clc
std
sbb
cwtl
movsl
pop
push
cmp
sbb
push
rorl
inc
pop
jae
repz
aaa
subl
push
in
dec
pop
xchg
scas
add
fimull
fisttpll
cmp
add
cmp
jp
add
push
sbb
loopne
inc
insb
mov
jmp
inc
ja
iret
mov
and
mov
hlt
scas
sarb
mov
and
iret
aad
jmp
jecxz
loop
stos
adc
fisubs
sbb
movsb
inc
ret
mov
cmc
cmp
sbb
test
adc
jp
loop
roll
pop
js
loop
jne
jb
adc
push
adcb
adc
cmp
fsubl
sub
das
cltd
lahf
aas
sub
adc
rclb
xchg
xor
mov
cld
mov
mov
add
lds
pop
dec
add
sub
mov
mov
pop
sub
sbb
mov
pop
fsubrs
int
mov
call
rcrb
mov
subb
pop
mov
xlat
cmp
orl
div
ffree
sub
pop
jb
push
ret
xchg
fidivrs
xchg
push
repnz
mov
popa
mov
stc
mov
push
mov
repnz
pop
lret
cmc
in
mov
cmc
test
pop
unpckhps
aad
xorb
mov
cmpsb
mov
jbe
push
ja
insl
cmpsb
mov
sahf
push
sbb
test
or
xchg
test
push
inc
and
rclb
cmp
sub
in
push
leave
shl
out
add
icebp
add
pop
jg
filds
xor
lods
and
push
nop
ret
in
addb
mov
adc
mov
pop
hlt
es
in
inc
sbb
pop
out
inc
movsb
std
lds
xor
arpl
xchg
shl
dec
lcall
pop
int3
and
sti
adc
add
mov
jp
xchg
es
mov
mov
jecxz
int3
inc
push
dec
add
call
xlat
xor
lcall
sbb
pop
sub
mov
addb
mov
and
das
adc
cltd
sbb
pop
scas
pop
imul
push
sub
xor
jae
pushf
xlat
test
pop
push
daa
cmp
xchg
pop
mov
inc
rcl
and
scas
imul
fisttps
pushf
subb
fldenv
or
outsb
mov
imul
dec
imul
pop
shl
out
repz
fwait
es
push
jecxz
xor
jl
xor
rolb
pop
or
iret
cmpb
or
adc
imull
jge
js
adc
xor
in
dec
out
popf
daa
xor
cmp
xchg
xchg
push
hlt
outsb
clc
data16
mov
push
dec
enter
movl
pop
ficompl
cmp
cs
pop
aaa
in
mov
sbbb
daa
loop
mov
cwtl
mov
scas
inc
sub
aas
cmpsb
push
cmp
mov
subl
dec
lods
aam
sub
sbb
arpl
popa
ds
fstps
int
sbb
inc
mov
jae
xchg
push
fwait
lods
push
rcrb
jns
pop
jle
movups
mov
add
xor
pushf
mov
jle
leave
jge
lds
pop
pop
dec
call
adc
rcll
mov
jp
js
enter
sub
pusha
dec
stos
or
sbb
je
mov
adc
jo
sub
cmp
not
xchg
testb
data16
jge
dec
adcb
fbstp
jbe
push
test
push
push
dec
mov
pop
mov
jle
xor
sbb
inc
mov
adc
mov
outsb
scas
rcr
xor
jmp
repz
aas
adc
out
leave
jl
gs
and
adc
loop
aaa
jno
push
mov
shlb
add
add
jle
rcrb
add
sub
inc
push
cmpsl
das
lret
rorl
pop
inc
or
scas
jl
into
ljmp
jb
int3
hlt
fisubs
les
pop
mov
add
pusha
add
mov
loop
mov
test
push
inc
xlat
adc
int3
cltd
or
movsb
jg
aas
stos
fwait
cmp
jae
mov
stc
adc
and
jae,pn
fadds
xchg
fwait
leave
mov
dec
loop
jecxz
mov
es
xor
jl
insb
ss
sbb
add
dec
loop
mov
xchg
cmp
xchg
jo
cmp
bound
dec
mov
mov
shlb
dec
mov
xchg
and
adc
cmc
movsl
dec
out
test
sbb
pop
mov
out
push
imul
xchg
xchg
pop
sahf
cmp
xor
mov
pop
or
daa
xlat
xlat
add
int
sub
aas
sub
sti
fxch
adc
leave
xchg
add
ret
jns
ret
push
aad
jno
int3
test
fcmove
or
enter
mov
push
and
or
movsb
pop
mov
data16
adc
mov
dec
aam
pushf
pop
outsl
iret
xlat
mov
mov
pop
test
fisubrs
mov
jmp
adc
or
xor
or
popa
cs
pusha
stos
pop
cmpl
mov
xor
lret
call
or
pop
fistpll
bound
fsubs
aas
icebp
push
jg
into
pop
cmpsb
imul
fstl
repnz
inc
pop
xchg
push
ret
add
les
test
pop
lods
lods
cmc
divl
out
pop
mov
lea
xor
adc
dec
repnz
ss
loopne
nop
addr16
dec
mov
or
pop
push
out
roll
sub
rcrl
ds
scas
adc
stos
out
test
mov
sub
shlb
and
push
repnz
pop
sub
enter
addr16
lds
in
aam
dec
cmp
int3
fcom
aas
lods
dec
push
je
or
xlat
mov
jnp
sub
inc
and
test
loop
rcll
inc
decb
push
jecxz
lret
and
add
jmp
sbb
xchg
dec
push
mov
pop
repz
inc
std
cmp
lcall
outsb
push
fcmovne
mov
adc
stos
adc
loop
insl
frstor
push
jle
and
pop
and
dec
and
or
ret
imulb
jl
fsubr
jmp
push
mov
add
pop
icebp
ljmp
jbe
jnp
ss
in
je
mov
cmp
push
dec
out
fwait
mov
into
sub
mov
xchg
out
push
mov
add
neg
dec
ret
push
and
xor
xchg
test
xchg
test
push
push
hlt
dec
enter
jecxz
add
and
pop
jae
mov
in
jo
lock
push
popa
add
aaa
inc
sbb
xchg
mov
data16
lds
or
xchg
or
movl
movsl
xchg
test
sub
movsl
xchg
leave
lods
scas
ljmp
jns
insb
sbb
leave
push
pop
insl
in
inc
mull
inc
sbb
ret
xchg
gs
adc
cmpl
pusha
sub
sub
jno
or
scas
rclb
xchg
sub
dec
and
loope
push
xor
mov
mov
or
or
dec
lahf
fldt
xchg
push
out
sahf
jmp
mov
pop
test
pop
lret
jmp
out
rclb
fldenv
fstl
cs
adc
orl
js
rol
jae
jge
test
test
jle
popf
arpl
enter
pop
inc
scas
fs
inc
cltd
dec
outsl
and
cld
fs
jg
nop
rolb
xchg
jp
inc
add
add
cld
adc
mov
or
repnz
and
ret
or
pop
jbe
mov
int3
movsl
popf
inc
xor
jmp
movsl
das
cmp
jecxz
cmp
pusha
mov
test
jno
inc
dec
jb
fisubl
adc
xchg
dec
push
int
and
dec
lret
xor
outsl
xchg
cmp
mov
xchg
fiadds
xchg
jne
popf
xchg
jno
mov
int3
adc
and
lret
mov
push
movsb
cli
dec
xor
or
inc
cwtl
add
jb
push
and
add
jmp
add
in
jbe
mov
cltd
jo
jnp
les
jl
les
lods
push
jo
int
aad
aas
loope
mov
lret
daa
cmpsb
sahf
int3
sarb
repz
stos
xor
pushf
mov
add
fcomp
and
imul
mov
stc
fs
shlb
mov
popa
mov
sar
xor
adc
mov
lcall
pop
adcl
rcl
ret
pop
sub
push
sbb
test
lods
inc
std
leave
mov
xor
sub
divl
arpl
dec
fwait
xchg
pushf
out
jb
adc
aad
and
dec
sahf
pop
or
gs
dec
adc
add
pop
sahf
fwait
sub
or
cmp
std
shll
negb
ja
jecxz
cltd
xchg
inc
adc
test
pop
clc
lcall
xchg
pop
mov
leave
mov
inc
shll
rclb
mov
pop
push
gs
sbb
mov
test
shlb
xor
lahf
das
jae
mov
and
inc
aaa
push
movsb
shl
enter
ds
icebp
fsubs
and
cmp
daa
nop
mov
repz
jo
xor
mov
push
adc
shll
mov
lcall
movsl
popf
hlt
and
pop
cmp
cmp
arpl
cmp
js
inc
pop
test
mov
pop
fnstenv
adcl
jecxz
sbb
mov
mov
imul
add
popa
ret
mov
xor
loopne
xlat
mov
adc
dec
scas
out
lret
imul
incb
sbbb
dec
jle
push
ljmp
xor
sub
imul
out
xchg
stos
jae
lret
cli
adcl
or
mov
out
rclb
sbb
daa
addl
cmpsb
adc
cmpsl
outsb
rorl
into
inc
push
sub
jle
in
scas
scas
repz
mov
and
ljmp
or
pop
sub
add
mov
mov
or
and
stos
or
adc
xchg
jo
jnp
fildl
insb
pop
nop
aad
dec
popf
std
mov
xor
and
inc
pop
push
pop
mov
nop
mov
fbld
jne
mov
sahf
in
pop
lods
and
jnp
push
sbb
cmp
stc
insl
bound
or
fst
add
inc
in
int3
outsl
fstpt
out
xchg
push
popf
outsl
push
inc
das
out
neg
cmp
lret
lret
mov
and
cmpsb
imull
jo
dec
cld
sti
jno
xor
movsl
cmp
mov
and
mov
fidivl
movsl
arpl
push
mov
adc
sarb
cmp
ja
jmp
scas
jb
out
push
outsb
nop
lods
sbb
mov
pop
frstor
xor
mov
mov
stc
shl
popf
hlt
nop
mov
sub
jo
test
and
mov
cld
dec
push
mov
add
xchg
ss
push
jp
aas
xlat
add
fiadds
icebp
loopne
scas
mov
mov
shl
xlat
pusha
movsb
inc
xchg
std
adc
sbb
movl
push
inc
pop
cwtl
mov
aaa
shrl
mov
pop
shrb
cld
sub
dec
push
dec
jl
adc
mov
hlt
add
jne
adc
jmp
clc
cmc
or
xchg
stos
jbe
jecxz
mov
mov
cmp
test
mov
loopne
and
ret
mov
jmp
mov
xchg
pushf
fsubs
push
imul
sub
vcomiss
pusha
xor
js
scas
ret
cltd
or
fisubl
and
mov
out
popf
je
and
aaa
in
js
dec
xchg
cmp
and
jne
xlat
jmp
clc
mov
cmp
mov
mov
fcoml
shl
shl
jl
js
xor
xor
subl
das
repnz
xor
les
jg
inc
int3
not
call
fstpl
fnstsw
or
or
stos
dec
out
xor
sbb
mov
push
push
movsl
cli
xchg
insb
imul
ss
jmp
pop
cltd
rorb
rcrl
mov
cmpsl
mov
js
inc
enter
push
dec
outsb
push
ss
divl
pusha
or
iret
sbb
ret
sub
jnp
movsb
cmc
sub
stc
adc
imul
dec
jae
test
inc
mov
mov
aaa
mov
jno
popf
xor
push
pop
pop
dec
das
inc
rclb
bound
cmp
cld
cmp
fmulp
mov
popf
inc
ret
int3
or
repz
pusha
or
inc
or
pop
std
mov
and
mov
ficompl
pop
dec
mov
lds
clc
fsubrp
call
fildll
fwait
in
out
shlb
or
std
out
out
fdivs
or
fnsave
cmc
pop
add
mov
fwait
stc
nop
mov
popa
test
pop
and
push
jmp
sbb
stos
movl
push
negl
mov
pop
je
sub
sub
rcl
mov
daa
push
pop
stos
add
scas
or
push
inc
mov
nop
shlb
insl
cltd
scas
cwtl
or
notl
fisubl
jns
je
lods
or
test
push
shr
lcall
pop
lcall
ret
and
push
ljmp
stc
cmp
push
xor
pop
mov
enter
push
xchg
lret
std
in
hlt
into
sub
and
inc
mov
cmp
leave
cmpsl
inc
out
jmp
cmp
cmp
ja
cli
mov
jb
pusha
pop
inc
divl
sub
sub
add
push
mov
test
iret
cmpsl
dec
or
loope
popa
std
mov
push
mov
out
jmp
sti
sbb
lcall
push
pusha
adc
mov
mov
dec
dec
add
sbb
dec
mov
adc
ss
inc
popf
in
cs
les
imul
leave
mov
aaa
xlat
sub
xchg
mov
mov
cmp
nop
sub
dec
or
jne
test
xor
xchg
sbb
sbb
mov
pop
pop
jle,pt
jne
pop
mov
or
cli
js
mov
out
pop
test
sbb
mov
mov
push
rcr
push
or
daa
loope
lret
bound
lret
int
xchg
pop
mov
jo
add
cmpsb
sti
adc
push
xor
outsl
loope
loop
vpsraw
jb
idiv
imulb
addl
push
aad
cmc
daa
int3
cmp
mov
fwait
dec
sub
pop
scas
scas
in
adc
pop
fwait
and
dec
ja
xchg
fisttps
push
adc
dec
mov
pop
jne
sahf
cli
insb
mov
xor
or
sub
add
stos
push
fcompl
mov
imul
in
jb
imul
shrb
dec
cmp
jecxz
mov
scas
sbb
ds
mov
adc
xchg
pop
mov
mov
popa
sbb
xor
adc
pop
dec
inc
into
test
add
in
pop
sti
sub
mov
movsb
xor
andl
pop
jne
mov
rcrb
lock
dec
out
push
or
add
out
sbb
dec
adc
imul
enter
das
ja
xchg
dec
or
lret
dec
cmp
aad
fidivl
add
push
push
fs
das
pop
and
mov
cli
scas
lcall
pop
test
adc
xchg
movsl
mov
mov
mov
jae
lahf
jge
add
enter
sti
xlat
jns
jno
cli
sbb
mov
add
aad
inc
insl
enter
shll
xor
int
aaa
mov
cli
jne
mov
subl
push
push
ja
leave
daa
shlb
dec
inc
movsb
sub
pop
push
mov
mov
xor
mov
movsl
mov
fucom
lcall
and
lret
cltd
jo
cmp
loopne
aad
sub
das
icebp
frstor
fcmovu
pop
pop
cwtl
outsb
daa
iret
jg
adc
fdivr
and
cmp
mov
movsl
clc
out
test
ficompl
test
xchg
mov
movl
pop
ret
push
fisttpl
jecxz
in
push
sub
shl
push
test
rcrl
mov
push
fcom
dec
add
inc
sub
xchg
push
mov
out
jns
shrl
mov
sbb
pusha
clc
pop
incb
movsl
and
mov
stc
das
mov
enter
or
xor
imul
push
in
mov
mov
xchg
aad
mov
idivb
mov
pop
mov
int3
aad
xor
data16
xor
nop
mov
loope
pop
and
nop
fstps
and
mov
lret
push
xabort
ljmp
orl
xchg
divl
adc
jge
push
stc
dec
push
ja
imul
dec
mov
adc
loope,pt
lret
loopne
add
sub
dec
repnz
fidivrs
push
adc
sbb
stos
aaa
and
pop
icebp
pop
jne
test
sbb
pop
je
cmp
add
mov
out
dec
push
icebp
lock
popf
inc
cmpsl
test
idiv
lds
cmp
mov
outsl
bound
dec
shlb
fwait
xchg
cltd
jae
loopne
sbb
and
in
adc
mov
stc
add
and
cmpsl
or
xchg
and
lods
mov
and
imul
dec
mov
fstpt
mov
divl
push
ret
adc
cmp
mov
dec
shl
or
jmp
in
ja
lock
aad
mov
cltd
cwtl
loop
int
leave
out
call
and
sbb
pop
imul
out
mov
add
ret
sub
inc
pop
add
adc
ret
xchg
sub
cmp
pop
mov
mov
shrb
je
movsl
pop
rcr
mov
jle
scas
mov
xchg
lahf
jns
mov
jge
xor
sarb
push
stos
sub
rorb
or
icebp
sub
jle
xchg
stos
dec
add
add
dec
and
add
jb
fsubr
inc
adc
push
push
inc
rcr
dec
jns
jb
pop
fists
dec
jg
aad
sub
or
fwait
inc
pop
pop
out
inc
sub
xor
pop
jmp
jno
push
pop
mov
fwait
lret
jbe
mov
jg
fwait
les
dec
sbb
lret
test
aam
jns
es
call
inc
or
sub
adc
jne
push
xchg
std
imul
pop
push
mov
and
or
add
inc
js
xchg
add
popa
sbb
inc
iret
inc
push
dec
call
loopne
jp
iret
movsl
inc
push
in
and
int
sahf
lods
inc
dec
xchg
mov
jbe
icebp
add
jo
pop
cmp
push
test
fsts
and
loopne
imull
or
popa
mov
jp
dec
stos
mov
xor
call
push
test
xor
sbb
xchg
in
jmp
std
mov
in
xchg
xor
inc
ficompl
popa
out
outsl
lea
inc
xchg
xchg
add
jne
pop
lahf
mov
test
sbb
cmp
inc
xor
push
nopl
inc
xchg
or
cwtl
fs
mov
mov
mov
xor
lcall
push
jge
mov
xchg
push
daa
dec
mov
sahf
and
out
mov
out
cld
sbb
imul
mov
std
mov
inc
int3
insl
movsl
ret
pop
outsb
scas
lods
mov
test
lea
ss
sbb
repnz
mov
mov
adc
inc
mov
or
or
iret
jb
jmp
mov
lods
mov
add
mov
sbb
les
mov
fldln2
lret
or
arpl
push
enter
mov
addr16
xchg
push
push
cmp
sbb
mov
cmpb
mov
repz
pop
popf
jo
pop
inc
inc
fisttps
sahf
loope
jbe
stos
jl
mov
mov
xchg
shrb
dec
mov
repz
ljmp
sahf
movsb
mov
xchg
push
repz
std
jmp
addr16
pop
cltd
cwtl
addr16
inc
clc
inc
mov
dec
fadd
sub
std
rorl
decb
mov
aaa
sub
sub
lods
xchg
loopne
pop
out
fnstsw
das
negb
lahf
or
mov
aam
pop
pop
int3
xchg
mov
ret
xchg
les
or
sti
add
repnz
pushf
aam
adc
sbb
addr16
aas
out
fldenv
cmc
add
shll
mov
fiadds
or
xchg
sub
and
mov
dec
sbb
push
sub
clc
fistpl
push
gs
test
imul
stos
imul
test
cmpsb
pop
mov
iret
les
lods
pushf
idivl
add
loopne
add
xor
mov
imul
jns
and
or
adcl
aas
jns
adc
pop
scas
sub
cmp
out
add
sub
jle
les
lods
add
sahf
inc
cmpsb
lock
push
stc
ljmp
in
push
lods
xchg
lcall
xor
insb
stc
std
adc
add
hlt
insb
mov
out
and
outsb
outsl
xchg
shll
adc
xor
shll
data16
sbb
dec
mov
bound
repz
xchg
pop
movsl
aas
and
jmp
xor
test
iret
mov
pop
pop
in
shr
and
jg
hlt
xchg
lods
cmp
mov
mov
inc
je
xchg
jno
and
and
ljmp
adc
fcmovne
jmp
mov
mov
push
and
add
add
push
mov
outsb
shrl
sbb
or
mov
jge
flds
add
push
xlat
mov
sbb
xor
out
sub
mov
cmp
imul
lods
test
dec
pop
bound
mov
std
mov
out
push
data16
pcmpeqw
push
jp
cmp
and
dec
inc
pushf
pop
faddl
mov
jle
adc
mov
mov
xlat
into
sub
sub
int3
imul
xchg
mov
out
cmp
push
dec
sbb
sub
cmp
dec
jo
adc
lret
jecxz
and
and
arpl
fsub
sbb
test
les
int3
mov
lods
xor
pop
push
test
inc
fwait
mov
pop
mov
mov
dec
int
xor
rcl
daa
pop
xor
cmpsl
popl
dec
pop
enter
or
mov
mov
fimull
and
pusha
stos
imul
ret
xchg
mov
loope
mov
jl
in
mov
push
cltd
jns
sub
leave
mov
cmp
call
shrl
sub
jl
pop
stos
fiadds
in
mov
sub
or
in
mov
in
pop
pop
popf
jae
cmp
and
xchg
scas
das
cs
dec
test
pushf
lds
idivb
mov
jge
pop
aaa
loope
xlat
sub
fs
les
outsl
int3
es
jecxz
mov
mov
xchg
fdivrs
test
enter
mov
jne
nop
fldcw
gs
test
push
popfw
shlb
xchg
mov
neg
push
jbe
lret
cmc
test
cmp
push
shrb
or
and
fnstsw
xor
pmaxsw
pop
jge
fsubl
jle
mov
pushf
or
fsubrs
fidivl
in
test
arpl
jecxz
pop
inc
jne
test
inc
mov
enter
inc
paddusw
repz
xchg
arpl
jmp
xor
push
xchg
push
ljmp
push
sub
pusha
adc
pop
movsl
adc
in
sub
xchg
enter
ffreep
out
jecxz
and
cwtl
rcr
pop
aas
ror
sbb
and
das
or
xchg
jl
jge
jp
ss
inc
out
roll
repz
sub
notb
push
dec
lcall
fmuls
jle
cmp
js
adc
shlb
pop
adc
pop
inc
jecxz
pop
or
aam
mov
cwtl
scas
pop
fcomps
ret
std
sub
mov
pop
notl
sbb
test
pop
test
sbb
rol
out
xor
dec
ja
push
push
nop
adc
shll
in
sub
sarb
fmul
cmpsb
cmp
outsl
arpl
shl
hlt
fisubs
outsb
cld
push
sub
sub
push
fs
ficoml
mov
mov
sahf
arpl
sbb
cmc
inc
fimull
sub
adc
mov
xchg
mov
sahf
cli
stos
and
icebp
xchg
pop
ss
xchg
mov
in
cmc
push
adc
mov
push
cmp
cmp
and
lds
or
push
cmp
sahf
cmc
inc
int3
loop
and
xchg
jbe
fs
push
mov
cli
cltd
jae
push
aaa
and
mov
mov
pop
jge
outsl
mov
out
inc
mov
xor
fwait
or
sbb
add
sub
sbb
nop
adc
mov
adc
or
jne
sbb
dec
cmc
cmpsl
inc
pop
movsb
das
inc
scas
ljmp
xor
pop
stos
mov
lock
sub
xchg
adc
lret
adc
dec
xchg
hlt
inc
push
cwtl
pop
lret
es
or
in
xlat
loop
mov
cmp
push
lods
das
add
push
jns
adc
xor
das
or
mov
pushf
addr16
mov
inc
push
push
mov
mov
popa
cmpsb
xchg
insl
lds
ljmp
cmp
mov
cmp
jle
and
aaa
shr
mov
ljmp
das
out
call
shlb
imul
cmpsb
aad
mov
jno
aaa
push
pop
stos
jmp
push
push
push
add
inc
call
pop
dec
inc
sbb
mov
fsubr
iret
add
js
sub
fwait
in
lret
popf
jb
or
jns
jnp
iret
lret
inc
stos
and
and
out
sub
sbb
sahf
popf
mov
xor
mov
sbb
adc
dec
jb
mov
jae
inc
popl
jl
pushf
push
aas
test
enter
aad
mov
xor
loopne
ficompl
incl
adc
mov
out
xor
add
xor
repnz
ror
ret
jge
hlt
jo
jb
sbb
push
push
or
ljmp
cmp
mov
in
mov
sbb
adc
xor
dec
inc
call
push
cmc
mov
mov
jo
sahf
lahf
xchg
sub
jb
movsb
jnp
xchg
jo
inc
jmp
xchg
pop
std
xor
stos
nop
out
mov
mov
add
xor
or
pop
repnz
and
inc
arpl
fildl
push
call
js
push
scas
adc
and
inc
adc
lahf
and
xorb
jle
pop
mov
fcomp
aam
scas
and
out
inc
adc
in
stos
cli
fiadds
xor
pushf
xchg
xchg
jnp
push
mov
icebp
lcall
in
mov
push
popa
pop
push
sbb
dec
inc
jb
nop
call
mov
insl
arpl
sahf
popf
xchg
add
setne
subb
xchg
sub
adc
fwait
inc
test
inc
or
cwtl
cmpsl
ljmp
cmp
fbld
cmc
push
mov
push
xchg
cs
in
and
loope
pop
add
pop
shr
jno
iret
or
adc
inc
jo
sbbb
jne
leave
sbb
jp
mov
mov
loope
ds
mov
in
out
rcr
fcmovb
cmp
sbb
into
rolb
pop
arpl
xchg
data16
inc
dec
mov
test
fsubs
sub
mov
inc
mov
push
jmp
mov
inc
mov
xchg
jmp
xchg
xchg
mov
jns
ret
pop
adc
jecxz
inc
leave
or
cli
add
xor
insl
outsl
inc
cmpsb
jns
out
ljmp
add
push
outsl
fsubrs
inc
add
jae
ljmp
out
negl
add
push
pop
int
jns
dec
xor
pop
scas
sahf
icebp
or
push
sti
pop
fdiv
lods
imul
sahf
jnp
dec
xchg
fiaddl
adc
jns
leave
jne
inc
mov
or
mov
xor
cmp
inc
xlat
popf
stos
xor
scas
jne
sahf
pushf
xor
push
cwtl
arpl
shlb
adc
mov
pop
rclb
ljmp
mov
mov
or
test
bound
sahf
jp
mov
notb
out
in
push
gs
sbb
test
push
mov
or
mov
das
push
mov
mov
push
sbbl
or
movsb
stos
jmp
mov
test
ja
aam
test
loop
xchg
jp
ficomps
cmpsb
push
inc
pop
sbb
ss
rorb
in
mov
je
push
fisubrs
lea
in
test
ljmp
or
inc
jp
rclb
mov
jns
ficompl
aaa
adc
lds
push
cwtl
sub
in
push
xchg
sarb
cmp
ss
add
xchg
bound
sub
lahf
dec
add
cmp
fiadds
fsubs
inc
or
out
test
cmp
fsubs
xchg
sahf
dec
jbe
mov
or
leave
sub
mov
xor
cmp
jg
dec
rcll
rolb
outsl
dec
outsb
cmpsb
push
dec
scas
xchg
adcl
sahf
rorl
das
scas
sbb
cmp
js
repz
or
jle,pt
mov
mov
jae
cmp
pop
sbb
mov
movsb
lret
or
dec
inc
aas
shll
je
mov
dec
shl
dec
fistl
mov
xor
jne
sbb
mov
fdivrl
aaa
sahf
mov
mov
inc
mov
jnp
mov
sbb
and
jge
ljmp
mov
xor
pop
sahf
mov
dec
push
jl
inc
and
mov
jl
addb
mov
inc
push
pushl
stos
pusha
or
fxch
add
pop
movsl
int
arpl
int3
imul
fdivl
daa
daa
std
test
jmp
notb
mov
aad
out
lds
adc
pusha
inc
cmc
mov
data16
pop
xlat
xchg
sahf
cli
mov
jmp
add
iret
cli
lret
lods
cli
inc
das
shll
mov
lods
sub
jp
jge
and
cli
ret
lds
inc
lock
xor
filds
insl
jle
add
cmp
xchg
mov
push
out
or
sub
adc
pushf
mov
fwait
sbb
mov
inc
push
jge
fisubs
adc
add
push
lds
lret
inc
iret
int
mul
idiv
imul
or
movsl
xor
and
xor
pushf
and
in
xor
ljmp
test
or
xor
add
loop
call
xchg
cmpxchg
leave
jg
mov
test
aad
sbb
lret
loopne
xchg
das
scas
shl
jo
fwait
test
mov
out
fisttpll
pop
pop
cmp
lret
mov
mov
jnp
rorb
dec
add
mov
add
add
repnz
xchg
roll
ja
mov
pop
jnp
sbb
pop
aas
pop
push
lds
fldl
or
ficoms
mov
mov
push
push
insl
sbb
mov
and
test
sbb
mov
out
pop
cwtl
dec
ja
scas
xchg
dec
pop
push
imul
pop
movsl
adc
adc
icebp
adc
outsl
cmp
ss
jle
mov
popa
mov
and
pop
inc
loop
out
mov
jp
mov
push
mov
shl
or
sub
adc
mov
push
lcall
sbb
xorb
push
xchg
inc
addr16
outsb
sahf
push
scas
pushf
dec
ja
pushl
cmpsb
adc
sbb
cmp
mov
into
and
pop
jo
mov
dec
adc
nop
jne
cmp
mov
pop
test
cmpsl
or
cmp
pushf
fildll
pop
popf
ficomps
test
xlat
xchg
aam
lcall
pusha
pop
sub
imul
enter
hlt
mov
rclb
add
movsb
notl
mov
jle
pop
xor
rorb
push
int3
sub
jo
inc
rol
and
fmul
push
loop
into
lock
jp
mov
out
inc
insl
and
and
popa
jl
aad
call
addr16
in
pop
mov
xor
std
inc
or
push
out
movsb
ss
nop
dec
xor
subb
xchg
in
ds
clc
jnp
mov
fmul
imul
addr16
lock
fucomip
push
sahf
ds
add
add
adc
xchg
mov
jns
inc
xor
xchg
aad
adc
mov
dec
add
js
sub
inc
mov
sub
ljmp
jb
xchg
cwtl
adc
fsubrp
aam
push
in
add
sbb
lock
ja
jmp
push
inc
sub
jle
outsb
out
jo
cmpsl
add
cltd
inc
test
or
jb
jbe
jne
xor
sub
xor
outsb
add
and
movsb
jle
xor
sbb
mov
lea
lea
pop
adc
loop
dec
pop
dec
cs
push
rcll
mov
test
adc
enter
sbb
dec
sub
cli
cwtl
push
cmp
dec
js
aaa
int
mov
or
mov
mov
iret
gs
cmp
cmpsb
stos
push
mov
push
into
inc
jns
testb
sub
pop
adc
jg
push
fnstsw
lret
out
dec
pop
push
jns
xchg
pop
add
cmp
add
sub
mov
jg
or
or
stos
jbe
aam
pop
push
in
xor
int3
movsl
or
xor
in
mov
out
and
and
bound
add
xor
xchg
sarb
repz
pop
jbe
icebp
pop
xlat
xchg
lret
and
mov
jecxz
mov
jmp
call
mov
iret
movsl
in
push
out
pop
mov
xor
cs
and
cmpsl
xchg
push
fdiv
cmpsl
push
pop
das
das
fnstcw
mov
inc
test
sub
int3
push
jb
in
ds
mov
cmp
pop
mov
pop
lcall
addr16
dec
jecxz
xchg
xchg
les
nop
xorb
push
jns
inc
outsb
fisubl
mov
push
mov
insb
mov
stc
or
mov
jl
scas
sahf
add
jae
lds
jns
push
fldcw
jnp
add
cmp
pop
mul
popf
popa
fwait
mov
addl
dec
fistps
mov
or
xchg
sbb
in
mov
jge
shll
mov
subl
mov
shl
xchg
lret
clc
stc
mov
sbb
push
xor
outsl
arpl
inc
test
adc
sbb
and
mull
jns
mov
xor
lods
mov
cmp
pushl
neg
lock
movsl
lds
scas
jg
int3
neg
sarl
and
add
jno
xchg
push
xchg
xlat
ss
imul
stos
mov
icebp
adc
cmp
or
js
jb
loop
aas
mov
cmp
xor
mov
int3
pop
sub
nop
call
jo
les
mov
arpl
das
pusha
adc
push
adc
pop
out
leave
dec
test
mov
aam
push
inc
pop
jge
outsb
add
dec
and
sbb
in
jl,pn
pop
mov
sbb
jns
adc
inc
insb
sbb
mov
pop
loope
xor
mov
or
orl
movsb
or
pop
xor
das
sbb
push
or
cmp
adc
xchg
cmpsb
adc
mov
insb
push
push
inc
jle
out
cld
ret
in
scas
out
sbb
jnp
movsl
inc
push
aaa
xor
push
aad
bound
test
mov
pop
xchg
out
addb
ficompl
mov
mov
jae
stc
pop
orl
call
into
les
test
and
jmp
test
or
sub
xor
mov
and
repnz
mov
lret
shrb
push
or
push
jl
test
lock
inc
mov
adc
mov
dec
leave
cmc
push
lock
mov
insb
rcrl
mov
pushf
xor
nop
test
xorl
fucom
mov
push
popf
hlt
mov
rclb
xchg
mov
add
mov
dec
loope
push
xchg
or
dec
add
test
imul
inc
dec
push
mov
arpl
iret
in
cmp
cs
inc
sbbl
pop
mov
nop
or
test
cmp
cwtl
test
add
fstp
aad
pop
mov
inc
popa
mov
adc
and
lcall
sub
data16
andb
ret
lds
aas
iret
lock
mull
push
sub
icebp
cmp
mov
adc
cmpsb
mov
xchg
ret
pushf
xchg
aad
in
call
in
icebp
sti
jmp
add
fwait
inc
xlat
in
xlat
mov
inc
mov
or
cmp
popa
clc
icebp
mov
mov
push
pop
mov
scas
loop
push
and
in
fiaddl
xor
enter
mov
add
ret
adc
mov
shl
cwtl
pop
mov
xor
cmp
inc
fidivl
rdtsc
movsb
scas
fwait
inc
lock
cmp
inc
mov
or
mov
sub
stos
sub
cmp
xchg
pop
outsb
mov
rorl
mov
sbb
inc
xchg
xchg
and
fucomip
inc
hlt
add
les
inc
dec
mov
je
fstpl
sub
sub
mov
sbb
ret
ret
dec
push
adc
sub
mov
add
xchg
mov
mov
insb
out
inc
push
xlat
lods
or
and
frstor
inc
clc
pop
movsb
push
push
dec
lahf
or
cli
js
push
incl
adc
rorb
jp
pop
push
outsl
dec
fwait
adc
push
and
lret
xor
lods
mov
cmp
xlat
push
ljmp
add
push
dec
sub
sub
mov
and
mov
cld
jmp
xlat
repnz
mov
lea
ret
andl
fsin
adc
mov
dec
push
xchg
shll
or
sbb
inc
imul
data16
repnz
aad
cmp
aad
lahf
lahf
ss
lods
jae
rorb
xchg
std
dec
stc
cmp
in
sbb
mov
mov
sbb
pop
dec
mov
movsl
xchg
mov
jl
dec
cwtl
sti
dec
fidivl
test
jg
inc
mov
push
push
or
in
mov
sub
sbb
jae
mov
sbb
aad
lcall
pop
mov
pop
inc
jno
cmp
ja
inc
sbb
push
pop
lret
or
clc
in
int
and
jnp
add
inc
hlt
retw
cltd
add
or
push
add
sbb
jbe
cs
and
addr16
fcoml
cmp
add
test
xor
ss
or
dec
outsl
mov
aaa
xchg
out
addl
je
dec
addb
enter
test
js
fdivs
mov
xchg
das
pop
div
das
jle
lods
divl
push
fwait
scas
cmp
mov
and
pop
popa
sbb
mov
xchg
sti
add
xchg
inc
movsl
or
pop
adc
lea
or
mov
shrb
mov
lret
movsl
call
inc
xor
cmp
addb
lds
test
insb
fstpl
xorl
or
jbe
mov
jno
xor
bound
es
lods
mov
mulb
push
push
in
stc
sub
dec
xor
xor
sahf
cltd
xchg
cmp
int3
xchg
cmp
inc
dec
xchg
loop
cmp
mov
dec
push
push
adc
test
cmp
icebp
dec
leave
mov
std
lds
jno
push
jg
stc
rcrl
daa
fnstcw
loope
ds
cltd
aam
fidivrl
out
mov
loop
pop
test
cmc
mov
cmp
mov
lahf
aad
test
cmp
fnsave
mov
daa
and
pop
sbb
xchg
jae
cmp
mov
xchg
sbb
clc
int3
jbe
mov
mov
xor
mov
leave
cmp
cwtl
lret
movsb
mov
push
cmp
cmpsb
call
sbb
xor
jp
leave
notl
xchg
adc
pop
pop
or
popa
push
outsb
ficomps
test
das
push
adc
mov
xchg
mov
insb
rcrb
ss
dec
test
mov
add
xchg
push
lods
shrl
dec
cmp
dec
cmpb
pop
xchg
cmp
pop
lods
inc
mov
adc
fstpt
cmp
ljmp
or
and
es
mov
push
aas
ds
mov
int3
lods
or
cmp
cld
jae
fwait
mov
nop
aas
mov
sub
pushf
scas
or
jo
pop
push
and
movsb
mov
mov
outsl
pop
dec
or
sti
xchg
xchg
pop
pop
dec
adc
pop
jmp
add
fisttpll
jne
mov
aaa
lock
mov
pop
ret
or
ds
imul
inc
xor
adc
sub
sahf
call
or
pop
ds
cmpsl
xchg
movb
ljmp
sahf
jns
insl
fisubrl
jnp
jl
rorb
or
and
int3
and
lods
mov
pop
and
cmpsb
cmp
subb
jge
mov
sti
push
out
in
sbb
cli
or
das
cli
cmp
jecxz
or
hlt
cmc
cli
mov
and
adc
in
mov
das
push
decb
xorl
mov
and
aam
gs
adc
lea
sbb
mov
in
gs
mov
jmp
leave
fistpl
ja
mov
pop
sti
rorb
dec
sbb
loope
into
popf
xor
imul
jle
popf
push
mov
mov
xor
movaps
cmpsl
xchg
sub
xchg
sahf
mov
clc
and
jno
sti
stos
jnp
sti
mov
scas
mov
mov
pop
sarl
add
inc
outsl
xor
jno
mov
push
in
dec
jbe
adc
lcall
mov
jnp
add
or
mov
adc
mov
mov
flds
inc
lds
pop
jb
and
cwtl
in
mov
cs
test
daa
add
sti
enter
pop
dec
scas
mov
loop
fbld
xchg
lea
cld
pop
aad
enter
pop
fmuls
out
insb
xchg
dec
stos
lods
decl
ljmp
jne
sti
in
cli
lcall
bound
mov
xchg
popf
push
bound
aam
pop
cmp
or
aad
fmuls
inc
insb
bound
aas
xor
inc
dec
daa
daa
xchg
add
inc
aaa
fisubrs
pop
out
int
push
test
dec
fdivr
lcall
cmpsb
mov
das
push
pop
add
icebp
hlt
pop
jbe
int
or
int
ss
xchg
jg
fidivl
adcb
xor
fildl
dec
sub
popf
mov
mov
add
xor
xchg
mov
cmp
or
loop
out
push
aaa
icebp
push
push
cmp
sbb
sbb
sti
inc
ret
add
or
in
xor
mov
sbb
pop
pop
jns
inc
insl
fcompl
or
scas
or
xor
hlt
push
shlb
out
mov
and
sbb
ja
mov
into
jl
inc
xchg
fwait
sub
gs
jbe
sbb
mov
push
adcl
sub
xchg
sbbl
loop
enter
mov
test
lahf
fldl
ficomps
sub
mov
dec
addr16
js
cmp
mov
lock
inc
orl
jmp
data16
sub
xchg
mov
push
lods
adc
repz
aad
js
push
pop
and
pop
test
js
sbb
lahf
mov
fisubs
xchg
cmp
sub
outsl
pop
push
mov
cmpsl
xor
loope
mov
and
pop
push
dec
leave
into
cmp
jno
dec
pop
test
in
fmul
add
inc
adc
jo
mov
lret
dec
mov
test
mov
loopne
dec
sbb
test
mov
stos
jbe
out
jnp
cmp
mov
jge
stc
aas
icebp
inc
jmp
mov
sub
int3
lret
xchg
mov
or
xchg
mov
inc
les
lods
push
dec
pop
or
inc
je
loope
ret
jnp
inc
cld
sub
fisttps
jnp
cmp
xor
jle
aad
rolb
cltd
push
mov
lcall
mov
jp
xor
fucomi
dec
xor
and
scas
loop
pop
cwtl
dec
pop
add
pop
imul
dec
cwtl
mov
arpl
mov
lea
jns
cmpsb
jne
xor
loopne
idiv
or
add
out
fwait
push
dec
dec
test
xor
stc
shrb
xchg
int
jecxz
sub
pop
add
scas
rolb
adc
fwait
arpl
dec
scas
mov
sti
jmp
xchg
test
repnz
test
cmp
aad
lret
push
enter
faddl
pop
mov
add
sbb
out
add
or
mov
push
imul
lret
sub
ljmp
sub
sti
jb
cmp
pop
mov
jg
sbb
ret
mov
push
xor
in
cmp
inc
jge
jnp
ljmp
outsl
mov
jno
clc
pop
dec
pop
mov
xchg
pusha
lea
jl
xor
mov
or
dec
lret
dec
dec
mov
test
rcll
pop
xlat
adc
scas
dec
in
or
mov
leave
or
inc
outsb
cltd
add
jl
mov
dec
in
push
pushf
lcall
push
mov
mov
int
rclb
cltd
aad
mov
pop
cwtl
ret
sub
cmpsl
loopne
das
rcrl
cmp
popa
push
jne
lahf
int3
cmp
fimull
in
and
outsb
add
lock
add
sbb
not
xchg
or
lcall
push
add
ss
insb
pop
shlb
imul
sub
xchg
mov
fistl
add
mov
inc
push
in
shll
std
jecxz
das
jb
mov
mov
cmp
inc
mull
push
mov
ss
fisubrs
xor
jns
fisttpl
loop
adc
repnz
pop
adc
inc
das
lods
and
sub
adc
jmp
mov
lea
adc
mov
cmp
icebp
dec
cmp
sbb
cmpsl
push
in
and
dec
ljmp
sub
int
pop
inc
sti
dec
ret
jae
sub
sub
add
in
cld
add
dec
shll
aaa
mov
sbb
or
andl
int
mov
push
push
mov
dec
scas
adc
xchg
or
and
mov
cli
and
lods
push
orl
fildl
aad
hlt
out
jg
aas
popf
xchg
movsb
cltd
adc
mov
mov
push
pop
aaa
push
cmp
xchg
mov
outsl
lods
inc
outsl
sbbb
fisttpl
incb
mov
adc
pop
adc
mov
inc
add
or
cmp
mov
in
dec
shrl
xchg
dec
mov
push
inc
mov
loopne
push
stos
flds
xchg
sbb
sub
push
insl
in
mov
test
adc
mov
fs
in
or
fldl
adc
test
cmp
enter
jns
mov
cld
cmp
sbb
cmp
ret
in
pop
outsl
and
dec
stos
pop
inc
cmp
outsb
ficoml
push
lret
lcall
xchg
pcmpeqb
mov
inc
popa
jno
adc
sbb
mov
mov
scas
pop
dec
push
pop
jcxz
ds
subl
xor
insl
aas
inc
orl
mov
fisubs
dec
les
sbb
movsl
pop
pop
rclb
hlt
adc
cmp
imul
stos
and
sbb
test
loopne,pt
das
mov
xorl
aad
xchg
idivl
sub
inc
push
jecxz
sbb
jno
scas
inc
jg
loope
leave
sbb
mov
mov
inc
adcb
lcall
pushf
dec
bnd
lea
mov
cli
push
inc
xlat
jne
mov
cwtl
or
and
data16
adc
scas
add
cmp
adc
adc
sbb
adc
insb
adc
out
pusha
and
mov
pop
jne
cmpsb
icebp
loope
push
ja
rol
inc
adc
lods
sbb
lret
jo
sbb
sbb
push
lds
aas
adc
movsl
pop
daa
scas
inc
jp
cmpsl
jne
jo
cmp
mov
and
ret
pop
vminps
adc
pusha
lods
stos
xor
and
mov
mov
mov
or
aaa
add
aam
xor
testl
or
mov
jne
mov
mov
sub
loopne
mov
sbb
cltd
hlt
cmpsb
out
xchg
cmp
cltd
sbbb
mov
xor
dec
stos
testl
in
mov
aad
jae
add
xor
aaa
mov
mov
add
mov
xor
sbb
xor
loop
and
fimull
push
xor
jge
mov
orb
dec
adc
jb
mov
or
sbb
les
push
jae
fcoms
dec
stc
mov
mov
push
rclb
push
mov
jo
mov
or
pop
int3
or
sub
xchg
std
dec
out
push
fcompl
mov
negb
pop
xor
pushf
or
jne
jmp
mov
pop
pop
pop
loopne
lcall
mov
stc
addr16
and
or
push
pop
xor
add
mov
lret
mov
enter
call
mov
fcmovne
pushf
and
inc
pop
pinsrw
nop
leave
int
jp
mov
add
out
pop
cmp
mov
add
mov
push
xor
bnd
adcb
push
cmp
and
test
test
in
gs
repz
lea
es
dec
mov
mov
mulb
ret
lret
xchg
shl
mov
xor
out
pop
aas
dec
out
leave
ss
fildll
jb
add
shlb
mov
rcrl
out
sarb
push
adc
push
test
inc
xchg
rclb
sbb
in
mov
in
jge
pop
jp
mov
jg
and
inc
jbe
fistpll
and
fwait
popf
push
rorl
shlb
movsl
inc
jl
jl
mov
xchg
pop
jno
cmp
sub
jns
inc
push
lcall
xchg
or
out
inc
mov
xchg
push
rol
and
xor
movsb
push
mov
mov
pop
dec
enter
pusha
fdivl
adc
rcl
loope
out
arpl
inc
stos
lds
iret
and
xchg
xor
and
add
popa
pop
add
stos
hlt
cmc
imul
push
adc
call
call
xor
cmpsb
cmpsl
enter
push
scas
push
shll
and
xchg
mov
iret
rcll
mov
adc
jge
insl
jp
lods
int
push
push
cwtl
push
pop
dec
ret
mov
xchg
aam
mov
out
adc
cli
dec
lea
lret
fiaddl
and
pop
mov
sub
xchg
cmp
sbb
sub
push
fnstcw
mov
ds
es
inc
popf
push
push
or
add
jmp
orb
push
inc
lock
mov
mov
decl
popf
cmp
mov
stos
gs
push
sbb
loop
jbe
mov
test
xchg
imul
aas
mov
aaa
popf
sub
xchg
lcall
stos
fists
adc
pushf
leave
mov
inc
rcl
inc
roll
call
and
enter
mov
insl
sub
call
and
push
ret
cli
xor
xchg
mov
movsl
outsb
test
sbb
inc
and
xchg
sub
mov
mov
mov
sbb
incl
jle
lds
and
shll
xor
test
lock
loope
sarl
es
stos
push
pusha
lahf
test
push
loop
pop
jbe
je
imul
int3
jb
pushf
loop
inc
xchg
in
lret
lds
out
xchg
test
cmp
rcll
mov
xchg
rol
mov
lret
ja
pusha
cmpb
push
jnp
xchg
iret
rcrl
rol
sub
orb
inc
add
dec
xchg
push
shrl
in
daa
leave
sbb
fdivrs
mov
and
xor
cli
jns
xchg
cwtd
cmp
cmpl
or
aas
sbb
sbb
rep
xchg
xchg
mov
cmp
mov
fucomi
adcb
daa
loope
inc
mov
mov
sarb
mov
inc
aaa
pop
int
jns
mov
js
mov
sub
inc
aam
xchg
dec
icebp
adc
movsb
inc
inc
sti
lea
je
dec
enter
insb
push
scas
pop
shrl
mov
cwtl
pop
dec
sbb
call
sbb
inc
dec
mov
fidivs
inc
movsb
mov
iret
movsb
seto
or
clc
jb
sbb
test
jne
xor
mov
xlat
shrb
push
imul
shll
pop
pop
repnz
cmp
xchg
jmp
adc
push
inc
insl
sarb
mov
fcompl
or
test
and
xchg
aam
cs
jb
popa
cwtl
cmpsb
lea
mov
insl
sbb
cmp
inc
insl
push
gs
pushf
cmpsl
jns
jp
and
out
push
and
in
push
sub
pop
jl
pop
lods
push
push
pusha
call
negb
sbb
and
data16
mov
cli
mov
jbe
xchg
cltd
push
jbe
jecxz
fwait
mov
adc
jno
lcall
and
sub
int3
cli
adc
enter
add
pop
pusha
aad
sbb
adc
fsubs
out
or
jmp
mov
pop
orl
arpl
cmp
outsb
xor
and
mov
inc
ret
lret
sbb
pop
mov
cmc
not
xchg
out
push
cmp
pop
mov
cwtl
cmp
in
fldcw
sahf
mov
sti
push
jb
xchg
pop
cmp
idiv
push
cltd
je
dec
sbb
insl
pop
adc
pop
inc
fwait
out
push
jo
cmp
mov
pop
adc
rorl
movsl
mov
aad
push
xchg
and
addr16
push
es
adc
lods
shl
test
sbbb
test
mov
ljmp
stos
je
dec
fwait
jae
test
or
dec
mov
lds
pop
pop
enter
or
pop
adcb
fidivrl
push
aad
es
lea
std
stos
mov
mov
out
addr16
push
scas
adc
pushf
mov
xlat
xchg
xchg
dec
scas
jb
es
and
in
outsl
out
dec
push
sbb
lahf
dec
or
dec
idiv
mov
scas
nopl
repz
mov
loop
pop
aaa
adc
mov
xchg
xor
dec
popa
inc
mov
add
push
imul
or
loopne
lock
test
fs
sti
loopne
push
or
xor
dec
cmc
jb
fidivl
fwait
push
xchg
sti
call
dec
mov
stc
pushl
cld
inc
adc
add
sbb
fucom
inc
jne
adc
xchg
push
sub
pop
xchg
jecxz
and
or
insl
mov
pop
ret
sub
aas
and
gs
imul
rolb
sarb
adc
aas
pop
push
leave
in
pop
jnp
mov
inc
sbb
addr16
leave
cli
xchg
xchg
ljmp
mov
or
adc
push
les
mov
cli
cmpsb
gs
inc
mov
test
inc
jbe
dec
push
xor
add
inc
cmpsb
sub
jecxz
lea
xlat
inc
rorl
adc
dec
cmp
mov
add
insl
dec
pop
inc
nop
addr16
nop
or
aaa
cmp
je
mov
mov
pop
insl
enter
sti
aas
sub
push
leave
jle
xor
jecxz
and
cli
mov
xor
dec
ficomps
mov
push
dec
or
add
cwtl
mov
push
mov
jl
popa
test
jmp
pop
xor
xchg
sub
das
mov
jbe
ret
cmpsb
inc
push
mov
or
adc
push
loop
cs
cmp
shl
test
push
stc
lds
imul
push
pop
lret
icebp
xor
dec
out
and
fwait
cld
or
mov
daa
outsl
cwtl
jae
pop
cld
mov
stos
add
repz
pop
lea
incb
pop
xchg
popl
fidivrl
adc
mov
popa
dec
ret
cmp
idiv
mov
test
add
aas
out
sub
shll
cmp
popa
lods
cmp
xchg
dec
ds
cltd
repz
cmpsl
pop
aam
repnz
pop
or
les
mov
push
xor
stc
hlt
mov
push
out
sbb
nop
xchg
out
into
dec
mov
push
ja
arpl
addr16
sub
hlt
cmpsb
adc
clc
mov
pop
test
in
mov
mov
lock
xchg
sbb
sub
mov
mov
xchg
fs
int
mov
into
aad
dec
jb
and
cmc
cmp
es
repnz
and
je
movsl
pushf
pop
pop
cld
lret
inc
ret
push
stc
repnz
jle
dec
cmp
mov
cltd
xchg
jl
mov
cmp
cmp
ja
jge
cs
daa
scas
lods
pop
mov
xchg
sbb
movsl
jmp
and
mov
xor
cmp
pop
mov
cli
imul
out
repz
push
sub
mov
movsb
les
pop
movsl
rcr
jbe,pn
clc
pushf
es
add
sahf
ja
sbb
or
fxch
sub
fcmovbe
fwait
cmp
jp
adc
sbb
pop
inc
test
les
int
idivl
adc
push
pop
dec
lds
pop
lds
stos
mov
pop
cwtl
jns
dec
adc
mov
mov
lock
imull
scas
mov
jecxz
loope
out
out
push
xchg
stos
lahf
sbb
push
imulb
add
push
mov
insb
sbb
sub
mov
pop
lret
ret
mov
fmul
leave
fldcw
sbb
sbbl
setb
mull
cmpsl
mov
leave
jb
leave
out
cmp
add
cld
movsl
push
mov
leave
push
xchg
jns
xor
push
mov
dec
sti
cmp
push
filds
das
int
xchg
scas
mov
xchg
pop
lds
or
push
jecxz
pop
inc
adc
jg
fdivl
lds
push
jae
adc
sub
test
cmpb
dec
lds
cwtl
repz
add
les
pop
push
shr
fidivrl
adc
pop
aad
vandnps
lcall
gs
lock
xor
xor
xlat
mov
stos
mov
push
lahf
pop
inc
xchg
lret
fcomps
adc
add
dec
sbb
cmp
pop
sbb
jmp
xchg
adc
sub
mov
xchg
sbb
test
insb
adc
shlb
btr
mov
ror
std
call
cmp
xchg
fcoml
loop
or
push
or
sti
add
push
pcmpeqd
mov
inc
or
xor
jle
addl
pop
movsl
inc
add
leave
movsl
or
imul
icebp
std
mov
dec
pop
sub
xchg
into
cs
mov
fsts
loop
inc
fs
leave
fcoml
and
sti
mov
aad
data16
pop
fmulp
loopne
and
push
test
pusha
lods
jecxz
clc
aas
stos
mov
sbb
mov
shlb
mov
cwtl
outsb
addr16
icebp
movsl
jb
jge
aas
or
mov
adc
jbe
push
rcrb
jnp
test
cmp
sub
mov
into
xchg
les
inc
adc
notb
jp
push
sbb
push
inc
xchg
xchg
mov
push
test
mov
mov
fildll
stos
adc
mov
imul
ficomps
xor
push
sarl
jae
inc
leave
int3
and
mov
lods
imul
popa
xchg
loop
inc
xchg
adc
movsb
insl
lcall
cmp
sbb
and
sti
mov
mov
cmpsl
lea
in
mov
orb
inc
clc
imul
jg
imul
clc
sub
inc
fs
inc
pop
xor
and
pop
adc
dec
mov
in
in
inc
shlb
dec
cwtl
fdivs
int3
rol
or
sbb
pop
int
lock
add
out
sahf
sar
cmp
jnp
iret
cmpl
test
mov
roll
inc
mov
inc
call
sbb
dec
sbbb
out
call
pop
fisubs
arpl
movsl
xor
cmc
hlt
cmp
cli
out
mov
std
aam
jecxz
xor
mov
push
or
pop
push
mov
lds
ret
rcrb
mov
stos
cmp
xor
insl
inc
cmpsb
aad
push
dec
jp
jno
ljmp
in
out
cmp
xlat
xor
in
xor
out
sub
push
mov
mov
xchg
jecxz
scas
push
imul
cmc
cmc
mov
in
invd
dec
push
cmp
les
cmp
adc
aad
rclb
ficoml
adc
ret
mov
int3
or
add
cmp
adc
ss
loopne
es
fstpl
push
sbb
jnp
scas
mov
pusha
lcall
shlb
shll
xor
fnstsw
jnp
jnp
ja
push
sbb
jp
cmpsw
ret
push
mov
leave
addl
or
mov
out
pop
xchg
fmuls
js
bound
out
xchg
sub
pop
push
stos
inc
sub
add
mov
ds
add
and
scas
inc
ret
push
roll
push
inc
sub
repnz
addl
adc
xlat
movsl
data16
jne
dec
fwait
shl
imul
jl
nop
pushf
jmp
clc
andb
sub
ret
insb
lea
loope
repnz
out
pop
xchg
insb
lods
jns
jbe
js
mov
push
mov
cmc
insl
pushf
jg
aad
pushl
or
loope
pop
lods
out
adc
fiadds
mov
out
cwtl
push
scas
int3
lahf
lcall
push
mov
rcll
out
jns
and
inc
pop
lret
add
call
cmpl
fstpt
xchg
push
push
dec
xchg
mov
loopne
xchg
jg
sbb
in
jae
push
sbb
mov
adc
inc
sbb
fildll
repz
call
jb
push
pop
push
mov
xlat
shlb
add
pop
jae
movl
mulb
push
insl
sub
xchg
andl
int3
adcl
pop
popf
mov
jge
popl
or
sbb
movsl
adc
in
subl
pop
xor
mov
sbb
in
dec
sahf
inc
ret
repz
jl
adc
ss
push
dec
mov
xchg
cmp
jle
lods
push
inc
sub
into
push
stos
push
sbb
cmpsl
mov
push
hlt
mov
inc
dec
add
inc
add
setp
fisubl
cmp
jae
jbe
or
inc
pusha
jnp
lret
loop
sbb
or
test
xorb
fdivr
mov
cmp
out
popf
sbbb
jecxz
push
cmpsl
push
enter
out
push
arpl
ss
mov
stos
mov
dec
out
stos
test
into
pop
mov
add
js
adc
cmp
jl
ja
cmpsl
cld
stc
or
sahf
out
mov
and
fists
mov
rclb
and
mov
and
pop
mov
fwait
outsl
xchg
out
adc
or
push
xor
pop
xlat
push
sbb
push
or
inc
aas
mov
out
xchg
stos
jbe
js
adc
popf
cwtl
out
jns
jne
clc
lds
mov
mov
and
and
out
push
movsl
js
js
push
adc
lcall
addr16
cmp
or
add
je
lods
rol
inc
ljmp
ss
mov
mov
shll
xor
jp
mov
xor
shrb
mov
xchg
mov
sub
lods
mov
sbb
and
mov
js
inc
adc
cmp
lock
lods
mov
call
movsl
out
test
sub
xor
stc
add
stc
pop
fcmovb
mov
aad
and
cmp
push
aad
xchg
das
sbbb
daa
gs
or
jo
jb
imul
push
inc
xchg
aaa
jns
hlt
push
push
pop
mov
add
sub
add
aaa
jns
jne
dec
aaa
test
sub
incb
ja
mov
jb
pop
test
lea
call
sti
pop
ljmp
cmp
dec
sbb
adc
jae
data16
clc
xchg
ja
into
jge
cmp
adc
ja
or
pop
jmp
jns
test
add
or
popf
and
inc
arpl
add
cmp
add
out
adc
sub
stos
repz
mull
test
push
sbb
inc
fstl
fwait
sub
outsb
stos
push
xor
fcmovbe
jecxz
dec
and
and
adc
add
pushf
jge
rorb
sbbb
out
movsl
test
push
pop
dec
mov
sub
mov
or
jl
test
adc
pop
rorb
xor
popa
bound
jne
out
adc
xor
imul
cld
fidivrl
test
js
push
mov
lea
push
add
and
daa
inc
and
mov
push
jo
push
push
lds
dec
fsubrl
jns
popf
int3
test
inc
xchg
adcl
or
fcoms
mov
inc
mov
stos
les
sahf
iret
rorl
inc
xchg
fidivl
mov
jns
or
dec
aas
rcrl
jl
sub
inc
mov
cmp
adc
test
add
stc
mov
cmc
arpl
mov
jbe
cmp
loop
inc
or
popa
or
sub
mov
push
fs
fcompl
dec
sub
int3
dec
sub
aam
jo
push
inc
xor
mov
js
fsts
pop
cmpsl
jp
andl
pushf
cmc
daa
stos
xor
daa
scas
mov
jp
testb
cmp
daa
cmc
jae
adc
dec
enter
push
es
movsb
fwait
xchg
cmpsb
inc
cmpsb
pusha
test
jns
pop
sbb
call
repnz
aaa
in
mov
lahf
ljmp
cltd
add
repz
xlat
xor
cmp
stos
cmc
leave
mov
and
cmpsb
mov
pop
mov
out
int
mov
mov
lret
mov
ss
mov
inc
mov
jnp
lret
popl
sahf
cltd
mov
cmp
pop
sti
xor
pop
das
lock
mov
mov
lret
scas
cli
pop
test
jmp
inc
sub
mov
pop
imul
sbb
sbbl
sahf
div
mov
in
shlb
add
out
mov
mov
jae
mov
push
or
mov
pop
cmp
fisubrl
jl
sahf
inc
cmc
rolb
pop
xchg
lods
aaa
add
sbb
xchg
jecxz
xor
mov
cld
adc
inc
xchg
nop
repnz
sub
inc
fadd
out
shlb
mov
es
stc
xchg
push
push
pushf
jl
add
call
movntq
out
jb
jl
aam
outsl
dec
cmp
push
out
mov
lods
fbstp
jp
jmp
or
mov
jg
mov
in
and
xor
pop
rcrb
sti
jl
movsl
mov
push
cmp
ficoml
fs
jl
xor
roll
repnz
outsl
mov
aaa
lock
std
int
lock
adc
adc
inc
mov
je
lods
sti
and
popa
call
js
clc
insl
or
adc
jo
add
shll
jle
push
lods
jns
in
xor
in
sub
push
test
dec
out
andl
push
sti
or
imul
xor
cmpsb
or
stos
mov
popa
cmpsb
ds
jge
push
rep
push
ret
in
inc
fxch
push
sbb
ret
and
xor
mov
iret
hlt
les
loopne
dec
test
pop
mov
or
lds
xchg
lock
xchg
mov
ret
mov
stos
jl
pop
or
test
lret
mov
mov
inc
sub
inc
enter
scas
insb
xchg
shrl
icebp
inc
mov
pop
nop
lret
sub
mov
xchg
mov
xchg
jns
enter
call
sub
jne
cmp
inc
cmpsb
sbb
arpl
aaa
lds
inc
cltd
mov
inc
mov
es
pop
push
cli
pop
adc
adc
dec
mov
ljmp
lret
scas
sub
sbb
xor
xor
ret
test
xchg
sbb
imul
sub
and
je
jp
pusha
into
dec
xchg
or
icebp
xor
in
addr16
into
mov
sbb
dec
push
out
dec
dec
push
pop
aas
dec
rolb
jae
lds
lods
in
sahf
mov
jg
cltd
dec
push
mov
iret
mov
lock
test
inc
mov
lds
aaa
adc
adc
aam
lock
jne
out
xor
sbb
inc
mov
inc
es
inc
pop
out
sbb
and
jl
cmp
mov
lret
jo
or
inc
inc
jb
int3
xor
pop
xor
jnp
adc
ds
add
and
insb
scas
mov
addb
mul
lods
mov
xor
jp
into
mov
lods
mov
fnstcw
inc
adc
jecxz
fiadds
rcrl
push
inc
mov
push
aam
push
mov
pop
shrb
fcoml
test
mov
add
mov
in
sti
xchg
test
movsl
pop
dec
in
dec
adc
shlb
mov
std
or
dec
cmp
cltd
push
pushf
and
or
xor
jecxz
ljmp
pop
sahf
lret
inc
ds
pop
adc
push
and
scas
xor
nop
xlat
push
sbb
cmp
mov
pop
imul
scas
lock
xchg
xchg
mov
xchg
mov
cmp
adc
jno
jl
icebp
push
and
xchg
sbb
cmp
bound
pop
mov
bound
das
add
or
lret
movsl
ret
xchg
bound
ret
movups
xor
adc
fwait
insl
xor
cmp
xchg
cmc
mov
repnz
mov
in
cs
je
inc
or
mov
xor
std
dec
daa
dec
dec
xchg
cltd
pushf
sbb
clc
rcrl
cmp
fwait
push
pop
push
ret
cld
lods
lret
mov
pop
out
xchg
jns
or
jne
add
fwait
pop
dec
mov
sbb
mov
and
mov
and
jae
cmc
es
fsub
dec
mov
outsl
popf
addb
or
dec
jno
xor
nop
data16
push
shl
test
pop
xor
sub
jle
dec
hlt
lcall
add
xchg
jns
pavgb
iret
aaa
inc
repnz
xchg
adc
inc
in
mov
jb
fbld
adc
test
test
dec
cli
xlat
sub
cmp
inc
add
adc
insl
jae
in
jmp
std
or
ds
push
cmp
mov
mov
push
rorb
cmp
ret
lahf
int
mov
int3
xchg
sub
mov
je
in
inc
add
jno
lods
shrl
mov
add
mov
adcl
loopne
pop
arpl
or
test
cltd
push
cmovo
sub
add
bound
ljmp
cmpsb
mov
pop
scas
aaa
pushf
hlt
dec
test
xchg
ret
leave
jg
push
fistl
pop
push
test
cmpsl
ljmp
popa
ljmp
out
imul
fnstenv
es
loopne
lcall
in
push
mov
gs
cmp
sbb
in
fs
inc
loopne
scas
mov
dec
jne
add
and
mov
mov
aas
jg
pop
xchg
xor
mov
xlat
push
sbb
add
das
mov
in
mov
inc
jns
int
test
stos
enter
rcll
pop
xchg
into
jbe
iret
or
adc
scas
sub
shl
movsb
int
xor
sub
test
out
push
mov
hlt
test
rdrand
cmpsl
push
inc
shlb
repnz
sti
add
test
mov
xor
ja
sarl
dec
rolb
inc
sbb
rorl
ficompl
imull
mov
inc
loopne
dec
cmpsb
cwtl
xchg
jmp
dec
adc
adc
cmp
in
movl
push
mov
icebp
pop
dec
insb
stos
fs
cmpl
imul
js
fcompl
xchg
aas
adc
xlat
pusha
mov
xchg
xor
shl
dec
and
inc
add
add
fmul
dec
pop
xor
pop
nop
cmp
adc
test
xchg
dec
xor
pop
dec
or
icebp
fwait
lods
xchg
sub
cli
lcall
cli
jo
cld
pop
xchg
lock
bound
inc
mov
or
or
or
push
pop
sbb
addr16
inc
or
mov
cwtl
xchg
pop
ret
jge
mov
cmp
sbbb
clc
in
orb
mov
out
mov
mov
insb
out
inc
push
jne
or
dec
xor
negb
inc
and
add
loop
incb
jae
add
sub
in
pop
rolb
bnd
sub
xchg
push
inc
add
mov
fidivrs
in
out
aad
cmp
mov
sub
ret
cmpsb
shlb
sub
push
outsl
push
sbb
adc
jecxz
and
cmp
xor
fs
pop
mov
jns
iret
popa
in
out
pop
jo
outsb
lcall
andb
xchg
cmpsb
mov
dec
aad
rorl
inc
ja
dec
mov
pop
mov
add
shlb
test
lods
push
xchg
sub
leave
std
jnp
push
mov
dec
add
sbb
jnp
data16
jg
mov
cmp
xor
lcall
or
stc
fdivl
sbb
adc
dec
not
mov
lret
xchg
ficompl
jg
add
push
pop
sub
fwait
adc
or
and
and
aaa
aas
and
fcoml
xor
jp
loopne
add
mov
daa
sbb
pusha
mov
clc
pop
stos
dec
jae
or
sub
js
jae
mov
xchg
or
inc
push
pop
pop
mov
loop
imul
jp
mov
push
insb
lret
sub
adc
xor
out
shll
adc
mov
out
lahf
jo
lds
ja
mov
daa
jle
movsb
xlat
xchg
movsb
insb
sbb
cmpl
fwait
aad
outsl
in
clc
fstps
sbb
xor
cmp
pushf
inc
mov
call
sub
pusha
xchg
inc
and
mov
loopne
fisubs
out
flds
test
rcrb
inc
imul
ss
mov
xor
fmul
mov
pop
gs
mov
movsl
cmc
and
jnp
enter
dec
fistps
pop
int
movsb
mov
push
cmp
and
jnp
dec
js
fcomp
mov
imul
das
fsub
jge
divl
pop
popa
add
lret
repnz
movsl
xor
mov
popf
inc
xor
cmp
aas
gs
filds
mov
xchg
js
rorl
mov
cli
aam
fs
mov
popf
xor
ss
fstp
mov
xor
stc
imul
cmp
cli
nop
pop
and
xor
sub
or
sahf
inc
insb
pop
dec
xchg
outsl
pop
sub
pop
cld
pop
xchg
add
adc
sub
sbb
xor
in
enter
lahf
subb
xchg
lcall
xchg
ret
or
push
inc
imul
and
aad
fwait
and
mov
ss
mov
lcall
test
jns
orb
pusha
xor
push
push
sbb
sbb
pop
das
sub
nop
arpl
push
sarl
daa
push
loopne
pop
push
repnz
pushf
iret
mov
jp
sub
into
mov
mov
shrb
daa
dec
cmp
scas
popa
mov
fiadds
inc
insb
mov
stc
jg
sbb
sahf
sbb
mov
mov
cli
mov
into
add
mov
popa
pop
lea
adc
pop
icebp
mov
out
cmp
adc
adc
dec
xor
and
fistps
push
jl
xchg
jle
mov
adc
jbe
adc
fcomi
test
push
jge
jns
enter
mov
test
xchg
std
lods
xchg
adc
dec
add
push
xchg
ret
dec
ret
jp
insl
push
in
sbb
movsb
pop
shll
jno
inc
andl
addr16
sbbb
idivb
jmp
inc
ret
and
sbb
push
jecxz
call
mov
lret
jmp
jl
cmp
mov
icebp
sbb
xor
stc
aaa
push
jo
cs
popf
fldl
das
cmp
jb
rcrl
inc
fcomps
pop
sbb
or
mov
imul
lock
or
js
in
std
cmp
sbb
inc
xchg
pop
sbb
push
mov
shll
cmc
rcll
cmpsl
push
cmp
iret
fcomp
inc
xchg
pop
inc
push
xchg
inc
ffreep
mov
push
ds
sbb
je
lods
sbb
jns
inc
lods
add
test
cmp
xchg
push
add
pop
xchg
xchg
xchg
loope
daa
pop
xchg
sub
push
dec
xor
lcall
cli
dec
icebp
test
pop
xchg
mov
xchg
dec
lret
lcall
jmp
in
xchg
xchg
inc
or
ret
sbb
shrl
test
or
push
es
and
ja
mov
jns
imul
insb
std
adc
push
xchg
lea
cmpsb
mov
jmp
cmp
mov
push
push
sti
hlt
sub
mov
push
adc
xchg
in
jb
push
mov
or
or
addr16
sub
clc
fisubrs
lods
arpl
and
fcompl
insl
mov
iret
pop
popf
into
call
inc
cld
mov
orb
sub
cmpsl
pop
icebp
cmp
pop
push
hlt
add
scas
sbb
or
dec
ret
in
adc
push
mov
mov
frndint
jno
xor
mov
sub
test
cwtl
cmp
ret
jecxz
push
es
fldcw
enter
pop
or
test
andl
sub
xor
dec
leave
into
into
jge
gs
outsl
jns
scas
mov
pop
xchg
mov
pop
imul
in
in
adc
and
push
shlb
bound
jne
rcrl
ret
mov
fs
inc
mov
ret
test
lock
loopne
add
negl
in
insl
push
fldcw
inc
mov
push
push
fsubl
sahf
fbstp
cmp
loope
add
mov
stos
and
sbb
pushf
add
xor
jle
inc
jg
dec
jl
pop
je
fcomip
test
hlt
movsl
mov
sbb
in
fcoml
lcall
xchg
xchg
cs
mov
mov
push
fld
mov
pop
mov
clc
sbb
daa
in
and
sbb
fcmovne
movl
popa
or
add
mov
test
in
fstl
xchg
lods
xchg
mov
dec
add
insb
add
add
sahf
adc
push
xchg
fsubrp
imul
aam
sahf
inc
push
add
dec
push
ljmp
loopne
shrl
mov
push
push
test
ret
dec
std
cs
movsl
ret
mov
and
sbb
dec
jl
ds
jp
orl
je
mov
inc
ret
xchg
cmp
enter
cmpsb
dec
xchg
lret
gs
sub
xchg
add
in
inc
ret
ja
add
and
push
push
insb
dec
repz
adc
ficomps
ss
pop
inc
clc
sahf
lock
or
or
lds
nop
pop
test
fadds
jnp
cmp
dec
jo
adc
das
mov
sbb
and
cmp
adc
dec
ret
dec
imul
mov
sbb
loop
xor
mov
into
mov
insb
xor
fnstenv
push
cmp
sarl
and
pop
cwtl
cmp
out
pop
xor
scas
out
adc
and
sbb
inc
sti
and
mov
repz
mov
jne
rolb
pop
jg
xorb
ss
xchg
and
mov
fbld
jl
sbb
es
mov
pop
jg
mov
mov
jge
repnz
mov
je
dec
and
mov
gs
push
dec
lock
push
adc
or
fs
push
shrb
cmp
cmp
aas
dec
or
and
ljmp
stc
mov
sbb
sti
cmp
push
xchg
fucomp
jge
imul
aas
popa
xchg
test
jbe
mov
incl
sbb
fwait
ljmp
adc
xchg
xlat
ss
lock
adc
dec
sbb
fwait
xchg
push
adc
or
iret
dec
inc
cmp
cmp
cwtl
stos
jnp
cmp
sahf
mov
aas
rolb
adcl
jle
cwtl
push
sbb
pop
aad
rclb
lods
imul
push
sub
sbb
inc
xor
es
pop
or
and
inc
jae
lock
out
ret
xor
or
lret
es
call
scas
lcall
sub
test
mov
movsl
bound
sti
xchg
ret
cltd
sti
test
std
push
cmp
inc
jmp
jg
adc
adc
aaa
lahf
repnz
cmp
fwait
outsl
pushf
in
and
pop
inc
popf
clc
jmp
xchg
fidivl
pop
daa
and
mov
andl
jge
ss
pop
xchg
pop
pop
ret
dec
psraw
in
mov
dec
cmc
std
loopne
jp
and
xor
ljmp
pop
ds
dec
mov
jge
xor
sahf
jbe
out
mov
outsb
loopne
cwtl
fcoml
aam
pop
mov
imul
mov
mov
add
sbb
imul
fscale
pop
xor
adc
movsl
adc
mov
fwait
shlb
mov
or
aam
cmp
out
xchg
test
repz
sub
lahf
dec
pop
data16
test
pop
mov
or
jno
jle
mul
mov
rorl
rcrl
mov
outsb
xchg
arpl
in
mov
mov
pop
mov
rcrb
mov
imulb
inc
out
push
xchg
enter
cltd
js
xorb
adc
incb
scas
inc
xchg
xlat
mov
xor
test
dec
lret
shl
sbb
fs
fists
and
jl
mov
push
sbb
mov
ss
das
cltd
and
scas
call
test
outsl
mov
add
lret
pop
sbb
neg
or
faddl
dec
mov
pop
pop
push
les
and
aam
xor
sti
jne
xor
and
push
or
inc
cmp
out
add
test
clc
movsb
sub
push
lcall
and
add
jmp
fstl
data16
xor
into
mov
pop
sbb
sbb
and
mov
push
mov
sub
je
mov
in
in
fsubrs
dec
push
icebp
mov
leave
pop
push
mov
pushf
out
imul
popa
int
push
cli
add
cmpl
not
fisubl
gs
cmp
xor
push
push
add
rcrl
aam
test
nop
sti
jo
cwtl
push
xor
movl
and
out
adc
inc
mov
ja
jmp
sbb
int
mov
lea
das
out
pop
dec
shr
add
push
leave
idivl
dec
mov
jbe
fldl
sahf
xchg
outsl
ds
mov
int3
cwtl
sbbb
cmp
aam
rcll
rclb
cmp
pop
xor
or
xor
mov
mov
mov
stos
addr16
shll
in
ret
push
enter
jno
pop
add
ds
cmp
das
inc
iret
aam
xchg
imul
xorb
mov
jns
movsb
adc
add
js
sbb
subb
sub
cmp
aaa
insb
popf
mov
and
loop
outsl
xchg
mov
pusha
dec
arpl
xor
pop
xor
test
dec
mov
pop
fsubrp
cmp
or
or
mov
jae
dec
js
or
sub
inc
popf
outsl
cmp
aas
xchg
mov
push
push
pop
fcmovbe
xor
mov
sbb
cwtl
xchg
sub
mov
mov
lods
fsubrs
jne
icebp
and
push
push
dec
cmc
and
rcll
and
test
mov
repz
jae
adc
mulb
ret
dec
mov
cmc
mov
mov
pop
out
push
push
pop
jno
and
divb
dec
xchg
fwait
jmp
stc
sahf
inc
ror
cmp
int
scas
test
dec
das
mov
pop
mov
lcallw
or
mov
mov
mov
cmp
dec
pop
cmp
and
cwtl
ret
dec
dec
jecxz
cmpsl
xchg
mov
into
dec
fsub
sbb
mov
xchg
push
sbb
add
and
pop
pop
xchg
dec
add
rol
shlb
cmp
orl
mov
in
negb
bound
add
dec
or
mov
mov
fidivrs
fidivl
and
fsubl
pop
lret
lods
movsb
insl
add
dec
aas
std
insb
pop
inc
pop
out
not
inc
dec
mov
mov
stos
pop
in
fimuls
enter
enter
xchg
fdivl
in
or
es
jge
ja
push
pop
stc
mov
ret
dec
ljmp
fdivs
enter
fstps
scas
add
xchg
ja
pop
int
pop
rclb
cli
mov
leave
in
lock
hlt
mov
in
dec
je
mov
addr16
fisubs
bound
aam
push
rol
out
inc
sub
inc
ja
adc
jb
push
in
xchg
adc
sahf
inc
repz
mov
pushf
or
cmc
in
sub
dec
push
andl
cmc
mov
sbb
outsb
jne
mov
add
mov
pop
nop
xor
fldenv
andb
mov
stos
mov
cmp
ss
test
lods
dec
mov
pop
mov
cmc
sub
pop
ror
sub
sub
loope
aaa
test
lock
jne
mov
or
test
mov
fnstcw
push
xor
jno
hlt
insb
mov
in
xlat
scas
data16
xchg
stos
mov
ljmp
mov
loop
sub
lds
inc
cmp
pop
ss
iret
or
lock
shr
jne
jns
push
popa
dec
fsubl
jae
dec
loop
push
sbb
mov
ret
mov
mov
ret
cltd
adc
pop
mov
push
in
mov
mov
mov
lret
dec
mov
adc
jae
aad
outsb
aam
ficompl
cmp
out
out
cmp
jne
outsb
and
jnp
popa
jecxz
enter
or
pushf
add
dec
dec
xor
mov
xchg
inc
adc
jle
addl
dec
xchg
jb
fadd
xchg
loope
xchg
cmp
inc
mov
add
shrb
adc
imul
dec
lods
add
fidivl
cmc
shr
lahf
rcl
sbb
movl
jb
out
negl
lahf
repz
push
adc
rcr
aam
xor
fldcw
sti
mov
pop
xchg
ret
and
push
add
push
mov
iret
rorl
push
fdivrs
shl
sbb
pop
pop
mov
add
rorl
popa
cmp
xor
fwait
mov
gs
mov
jle
fsubrl
sbb
sub
mov
loop
js
inc
inc
out
popf
pop
mov
jae
fstpt
cld
mov
clc
sti
scas
ja
inc
test
int3
sti
in
adc
out
pop
lea
sti
cs
sub
sbb
das
xchg
and
test
enter
loope
mov
scas
andl
xchg
lods
and
test
sbb
shlb
loope
pop
daa
arpl
shl
mov
sbb
out
mov
inc
xchg
popf
xchg
cli
jnp
aaa
jge
repnz
js
data16
iret
lea
pop
sub
out
dec
call
aas
rclb
mov
loopne
inc
mov
dec
incb
mov
rcrb
out
stc
andb
cs
scas
xchg
xchg
sub
into
or
jp
mov
pushf
inc
test
aad
fwait
out
imull
and
outsb
mov
andb
mov
pop
and
cmc
push
orb
dec
nop
addb
ss
scas
not
test
loop
cld
das
jl
adc
lock
ror
scas
fwait
jg
enter
rcr
pop
insl
inc
imul
cmpsl
notl
xchg
shrl
into
add
jp
xchg
mov
repnz
out
mov
out
clc
mulb
jg
jle
xchg
fwait
lock
pusha
ret
push
or
sub
push
inc
dec
in
scas
sti
fbstp
inc
add
loopne
push
cmpsl
aam
mov
and
inc
popa
and
out
push
fdivs
push
scas
pop
pop
fdivs
pop
clc
lods
inc
outsl
push
daa
ja
sbbl
addr16
adc
loop
inc
addr16
adc
push
mov
ljmp
mov
inc
push
lahf
outsl
and
lods
stos
sbb
lods
mov
pop
popf
idivb
imull
in
dec
push
hlt
xchg
sub
outsl
idivb
mul
push
shrb
out
fistl
sub
pop
add
or
test
pop
out
jae
inc
jg
testb
cmp
loopne
scas
dec
sub
pop
dec
fsub
outsb
lock
les
mov
push
and
imul
dec
inc
mov
mov
ljmp
cmp
xchg
and
and
xchg
jmp
mov
scas
dec
mov
jle
mov
inc
scas
out
adc
adcl
int
fnstcw
mov
push
lock
dec
lods
inc
daa
inc
fnstenv
pop
pop
mov
sbb
xchg
mov
bound
les
stos
mov
mov
and
arpl
into
test
cmp
cmp
testb
inc
sbb
push
mov
lods
test
fadd
rclb
out
scas
stos
pop
stc
lods
push
cmp
sahf
fbld
inc
xchg
jbe
orl
dec
dec
imul
jp
cmp
inc
int
rcrb
dec
sub
aas
lods
lods
out
sub
push
mov
xchg
push
xor
dec
lea
mov
pusha
ret
ja
fcompl
pop
mov
pop
movb
das
ja
lcall
lcall
mov
movsl
pop
pop
jp
jecxz
mov
xor
cmc
pop
sbb
xor
sahf
cmpsb
mov
sbb
dec
adc
jl
mov
repz
and
mov
jmp
leave
add
or
push
xor
dec
outsb
in
push
lods
and
dec
mov
les
xchg
mov
cmp
sub
aas
subb
test
fs
faddl
push
ret
movsb
xlat
sbb
in
icebp
inc
push
xchg
leave
xor
or
mov
and
out
in
mov
xor
sub
adc
push
cmp
popa
aam
pop
in
push
xchg
mov
xchg
sti
test
lods
sbbb
imul
cli
int3
add
loope
fmull
push
lods
push
xchg
mov
xor
xor
in
fstl
mov
icebp
into
sti
push
mov
cmp
sbb
jae
push
leave
popf
dec
hlt
cs
fcomp
mov
mov
mov
mov
add
mov
mov
sahf
dec
outsb
sbb
and
xchg
inc
sub
cmpb
xchg
sub
inc
jp
jo
hlt
xor
inc
inc
inc
fdivs
add
adc
dec
das
inc
xchg
mov
inc
pop
inc
in
push
mov
add
push
sub
mov
pop
fldcw
mov
outsl
hlt
jle
xor
mov
sub
pop
out
mov
mov
inc
aaa
ja
adc
imul
lock
mov
or
jmp
stos
sub
je
in
fstpl
or
aaa
sub
ljmp
mov
push
ljmp
jae
sti
sbbl
in
in
lahf
in
xchg
je
inc
inc
pop
and
xchg
pop
arpl
mov
clc
pop
dec
js
scas
pusha
and
pop
hlt
hlt
mov
sarb
iret
sbb
inc
pop
sbb
test
sbb
dec
pop
jb
add
dec
dec
out
cmp
in
cmp
mov
int3
out
pop
jg
negl
adc
dec
xor
scas
cwtl
mov
popa
mov
sahf
or
inc
call
mov
mov
adc
mov
cmp
sbb
pop
cmpsb
push
test
imul
lret
xor
enter
jns
cmp
mov
sbb
inc
andb
addr16
inc
push
mov
jge
or
aam
mov
cltd
imul
xor
insl
sets
mov
jp
sub
dec
and
mov
xor
push
inc
cmp
insb
jmp
jo
push
cwtl
or
call
mov
cltd
rolb
in
in
jge
and
hlt
jge
add
sub
push
ds
outsb
cmp
or
sarb
cmp
movsb
loopne
sti
imul
mov
dec
jno
jmp
fwait
dec
aam
ret
inc
enter
dec
test
pop
out
sub
das
push
jae
imul
insb
test
stos
cmpsb
jbe
jmp
xchg
sub
lcall
int
stos
dec
test
fdivr
shlb
data16
or
mov
and
cmp
xor
cwtl
daa
stc
jbe
loopne
xor
push
xchg
adcb
cmp
or
shlb
jg
sbb
push
mov
push
inc
fcomps
in
lods
mov
das
add
loopne
xor
les
stc
dec
jg
gs
mov
cmp
fmul
dec
push
out
xor
inc
dec
and
mov
cwtl
cmpsb
std
lcall
fstpt
push
and
incb
filds
push
or
imul
jle
in
nop
leave
sbb
hlt
clc
bound
dec
pop
insw
mov
pop
pop
stos
jns
cwtl
lcall
cmp
shl
mov
mov
mulb
mov
lock
es
push
leave
jl
mov
lcall
adc
xor
js
xchg
mov
xchg
lock
inc
mov
sub
or
loop
mov
push
addb
sbb
ror
mov
inc
pop
pop
lds
mov
pop
sub
push
adcl
int3
and
icebp
movsl
lods
fsts
andb
ret
inc
movsb
cld
push
inc
sub
xchg
push
faddl
arpl
cmp
sub
push
jle
je
adc
mov
js
mov
inc
sbb
push
sarb
lock
xlat
push
nop
and
subb
jl
sbb
lock
shll
push
xchg
out
adc
das
leave
je
adc
cmp
sub
addb
fs
test
mov
xchg
jb
in
sti
push
js
movsb
sahf
fsubl
test
adc
lahf
lods
xchg
fistpl
std
xchg
ret
xlat
pop
test
out
add
jbe
mov
cld
or
push
adcl
sub
fcoms
cmp
xlat
inc
movsb
push
std
stc
lds
ret
je
dec
push
imul
fldenv
adc
or
movsb
or
imul
test
test
dec
daa
cmc
xchg
push
mov
imul
mov
jnp
rorl
adc
test
andl
lock
mov
add
test
sbb
pop
cmc
fisubrs
lahf
call
push
fnsave
leave
or
pop
mov
inc
pop
or
lods
inc
stos
cmp
jns
xor
xchg
pop
fcmovb
test
or
cs
shrb
jle
and
test
imul
and
push
jmp
push
sbb
sbb
adc
lods
cli
loope
or
mov
xor
push
adc
push
test
ret
dec
mov
jp
mov
push
xchg
jnp
cmpps
adc
cmp
pop
mov
aaa
lods
cmc
int3
mov
and
jp
push
fs
mov
add
add
or
mov
fstps
test
sub
insl
pop
mov
loope
negl
jne,pn
enter
mov
dec
mov
ja
mov
pop
mov
add
ret
scas
test
fldl
or
repz
aam
pusha
cmp
sahf
sub
mov
loope
or
mov
dec
bound
push
xchg
lds
pop
shlb
fcomps
shll
mov
scas
jo
push
loope
pop
or
inc
pushf
lcall
lock
test
mov
test
dec
lods
sbb
cwtl
adc
sbb
das
push
xchg
mov
mov
jo
mov
loopne
rclb
shrl
addr16
dec
mov
mov
or
mov
insl
outsl
fdivr
call
mov
inc
lds
dec
or
pop
jnp
std
xor
push
rcl
aaa
pop
mov
pushf
mov
sbb
insl
jmp
cmpb
mov
outsb
outsl
in
test
inc
arpl
xchg
lret
stos
subl
xor
cltd
mov
aam
fdivr
jg
sbb
popf
mov
adc
bound
lret
decl
jmp
sbb
adc
je
out
push
ljmp
dec
out
pop
xchg
xchg
xchg
idivb
movl
jle
mov
add
lahf
jno
pop
adc
aaa
push
inc
inc
ret
or
adc
xor
in
fisttps
inc
push
fstpt
test
mov
mov
imul
mov
ja
mov
mov
aaa
pop
inc
mov
clc
aad
cwtl
outsl
insb
dec
sahf
adc
lods
mov
add
fldt
pop
loope
or
hlt
adcb
push
jnp
shlb
jbe
into
mov
adc
xor
mov
outsb
stc
sub
sub
mov
je
hlt
lahf
lcall
mov
stc
lods
divl
mov
cmp
sub
fstps
popa
mov
scas
xor
sub
sbb
or
push
mov
sbbl
aam
jp
xchg
xchg
call
and
pop
test
sub
cmp
inc
std
loop
lock
and
and
add
dec
mov
pushl
xor
lcall
push
movl
popf
dec
push
out
insl
mov
nop
sbb
test
inc
fs
lods
mov
jae
notl
dec
cmp
sbb
mov
adc
mov
or
cmp
orb
addr16
ljmp
dec
cmp
add
subl
push
adc
shr
rcrl
dec
std
loop
push
jae
lret
dec
cmp
xchg
add
and
lods
add
fstps
push
push
lods
xchg
in
jns
inc
jnp
sarl
lds
hlt
cmpsb
jp
add
shrl
pop
pop
fdivrs
mov
sub
std
stos
sbb
jnp
repz
push
imul
lods
in
sbb
and
mov
pop
je
push
xchg
movsl
cwtl
xor
xlat
or
mov
fidivrl
sub
out
bound
inc
pusha
stc
popf
dec
xchg
push
xchg
mov
dec
popa
decl
sub
push
dec
aas
jbe
inc
pop
adc
jns
jae
push
pop
pushl
dec
and
sub
add
rolb
das
sti
gs
mov
int
push
push
ret
testb
sub
int
mov
cmp
scas
arpl
mov
mov
mov
lods
pop
inc
cmp
adc
sbbb
adc
xchg
and
cwtl
dec
out
testb
mov
scas
imulb
aam
sub
fwait
mov
jne
pop
imul
decb
pop
jae
mov
and
add
repz
cmpsl
cmp
dec
std
mov
imul
cmpsl
push
cmp
lea
scas
pop
mulb
cmp
call
inc
inc
outsl
inc
jle
iret
xor
mov
mov
loop
popf
xor
icebp
mov
cmpsl
es
add
cwtl
cli
das
outsl
cltd
ffree
into
ds
in
add
mov
imul
sbb
sbb
fnsave
insb
inc
xor
push
sub
xchg
dec
and
mov
stos
dec
loop
jp
orb
mov
mov
movsb
add
adc
hlt
cwtl
lock
repnz
mov
clc
pop
ret
repnz
push
sbb
inc
mov
sahf
movsl
roll
arpl
jge
jo
rorb
xchg
repnz
loop
outsb
inc
pop
repz
adc
cli
mov
int3
outsl
dec
inc
sbb
mov
aam
xorb
dec
push
ja
int
arpl
dec
cmp
fbstp
adc
shrl
fiadds
lea
push
push
pop
lods
mov
xchg
outsb
inc
hlt
pop
test
out
outsb
adc
adcl
sub
push
push
cmp
fistps
mov
or
popl
jb
fcmove
push
adc
std
ja
push
inc
or
add
cld
fstps
call
addr16
shlb
adc
xchg
jge
jne
xchg
mov
fs
xchg
mov
call
int
cmp
test
mov
dec
mov
adc
inc
aas
sbb
stc
daa
push
je
pop
xor
inc
ss
aad
sbb
out
pop
xchg
pop
and
rorl
ja
enter
insb
addr16
mov
addr16
pop
jmp
xchg
jmp
test
lahf
and
cwtl
shl
mov
add
test
mov
mov
pop
scas
xchg
aad
cmp
mov
pop
icebp
rcll
jno
enter
dec
out
rcll
jecxz
and
lods
in
sbb
inc
add
xrelease
sub
test
ljmp
inc
xchg
shll
insb
imul
popf
data16
adc
jnp
sub
cmp
xor
sahf
xor
lcall
add
cs
mov
pop
add
pop
cmc
jbe
lret
mov
dec
adc
inc
push
add
mov
ret
adc
test
sbb
push
push
add
or
fwait
xchg
cmp
in
lea
add
lret
lods
sti
scas
xor
loope
arpl
cltd
mov
imul
push
add
test
push
xor
push
pop
mov
shl
push
daa
add
rcl
dec
xchg
push
int3
add
fsubr
testb
cmp
jb
push
and
inc
fsubs
cld
mov
in
outsl
scas
dec
pop
xor
or
ljmp
clc
lret
dec
ret
insb
daa
jb
fcoml
jmp
daa
xor
push
mov
sub
mov
mov
movsl
cmp
out
or
cmc
repnz
dec
add
cli
sub
sbb
inc
loope
mov
int3
pop
add
movsb
jp
mov
add
inc
mov
jb
fimull
mov
js
pusha
dec
mov
inc
push
cmp
xor
sbb
sub
js
xchg
fsubl
aaa
ds
jo
inc
call
jbe
mov
dec
dec
fisttps
lret
sub
xchg
out
sub
add
lahf
int3
testl
dec
add
lods
lods
mov
das
xor
jge
fs
rcrb
pop
daa
and
jecxz
jg
pop
lea
and
or
cltd
jl
dec
shll
lret
xor
in
inc
mov
sub
xor
rorl
sti
inc
imul
jmp
or
push
fmul
mov
push
xchg
scas
push
stc
cltd
lret
aad
test
jns
mov
inc
lea
ja
xor
fsts
insb
int3
xchg
cmp
aas
adc
jo
test
cmp
mov
es
push
testb
jb
jg
mov
sub
int3
loope
push
xchg
mov
test
adc
hlt
fildll
mov
jp
popf
pop
sub
mov
lds
or
out
inc
push
jle
cmp
shlb
dec
sbb
xchg
orl
push
fbstp
movsl
pusha
stos
push
and
mov
mov
aaa
mov
mov
mov
jge
rcrb
sbb
js
in
jo
adc
mov
cli
into
mov
jmp
mov
push
and
sub
cltd
and
aad
sub
xchg
les
insl
incl
cmp
sbb
int
push
in
sub
xor
out
pop
inc
std
mov
mov
xorl
xor
mov
adc
subl
or
sarb
dec
iret
orb
inc
popa
int
addr16
imul
inc
add
mov
push
call
fmull
pop
push
enter
popf
rcll
ret
xor
int3
dec
loop
and
push
xchg
scas
inc
fstpt
aaa
pop
fistpll
mov
dec
cli
or
sahf
rcrb
gs
adc
aas
data16
pop
movsb
cltd
mov
mov
or
aam
loopne
cmp
cld
mov
push
adc
fwait
ret
mov
data16
ljmp
test
cli
cmc
mov
add
scas
int
push
xor
in
mov
mov
push
jae
dec
sub
mov
sbb
jns
xor
dec
add
das
adc
inc
cmp
std
rorb
dec
or
pop
mov
or
test
mov
or
arpl
sti
jae
int3
fadds
push
inc
ret
xchg
cmp
push
jle
inc
pop
adc
mov
mov
inc
insb
push
adc
add
push
jne
addr16
dec
lcall
add
daa
pop
xchg
arpl
cmp
add
pushf
imul
vmovshdup
aaa
insl
push
in
cmp
mov
lea
mov
add
sbb
inc
lods
loop
jecxz
stos
dec
mov
scas
inc
pop
setb
or
mov
push
imul
mov
dec
aaa
mov
xchg
insb
mov
push
jb
jns
scas
xor
je
jg
in
pop
jo
into
mov
push
fnstsw
dec
inc
dec
das
jecxz
jo
jb
js
scas
xchg
fwait
idiv
call
jae
test
push
adc
xor
repnz
or
inc
scas
fcomip
insb
cmpsb
pop
dec
daa
iret
and
movsb
mov
addr16
push
rcrl
fcompl
repz
mov
cmp
sub
push
inc
mov
add
push
jae
cwtl
and
xor
inc
sahf
loopne
jl
jbe
mov
call
inc
mov
bound
scas
lock
lea
xchg
adc
repnz
mov
xor
mov
neg
push
sub
xor
jbe
adc
popf
sub
mov
test
mov
lods
int3
xchg
mov
lcall
xor
int
sub
sbb
and
push
ret
xor
sub
sbb
fistpl
fstpl
out
pop
sub
xor
es
aad
fisttps
adc
imull
mov
outsb
push
gs
sbb
xor
loop
test
fnstsw
cld
rorl
pop
dec
jge
inc
mov
cmp
push
mov
and
sub
xchg
mov
daa
sbb
add
inc
test
rorl
pop
or
addb
lods
mov
test
movsb
push
rolb
adc
push
push
adc
sbb
aam
ja
pop
lcall
mov
rcl
sub
sub
mov
push
hlt
pop
fsubr
jl
pop
xchg
adc
loope
bound
mov
call
and
into
into
aas
inc
xor
cmp
lock
arpl
xor
push
pop
addl
dec
pop
popa
and
js
fnstenv
iret
mov
jge,pt
pusha
sbb
pushf
push
cmc
and
or
andl
xchg
call
in
rcr
pop
pop
in
loop
fcmovnu
insl
lcall
lea
add
push
mov
insl
jmp
hlt
stos
stos
jl
and
sbb
cld
push
xchg
pushf
sub
ja
mov
mov
addb
jbe
data16
or
lret
jbe
xchg
cmp
enter
xchg
sub
cmpsb
mov
mov
lcall
out
movsb
mov
jae
adc
stc
gs
mov
push
fcmove
push
inc
popf
adc
cmp
jo
pop
loopne
lret
jo
push
aaa
or
mov
pop
test
sub
cmpsl
sub
inc
test
jne
or
mov
sbb
iret
jno
and
data16
or
xchg
mov
in
test
stos
add
jb
fdivrl
fs
es
mov
ret
jne
push
aam
jo
inc
sub
dec
xor
movsl
jg
faddl
cmp
xor
push
mov
jmp
cs
and
xor
jnp
lret
lret
test
test
repnz
ret
sub
dec
fcoms
mov
jne
dec
adc
jecxz
pop
std
sahf
push
es
mov
dec
daa
push
dec
sub
gs
inc
in
imul
clc
cld
aaa
movsb
mov
in
xchg
stos
inc
mov
in
mov
dec
sub
cld
jne
pusha
inc
ss
cltd
stos
mov
shl
sub
push
ljmp
jae
mov
imul
xor
push
dec
popa
daa
nop
call
add
stos
aas
mov
mov
push
in
or
push
leave
jnp
push
inc
cmpb
neg
lods
mov
pusha
cwtl
mov
adc
subb
sub
pop
out
lret
xor
and
xchg
mov
mov
xor
movl
mov
add
mov
nop
cli
imul
xor
jge
outsb
outsl
mov
in
jl
aad
jne
jnp
pop
ficoml
jmp
lods
pop
stos
arpl
mov
orl
sub
push
jge
mov
andl
xor
pop
leave
loop
dec
jmp
xor
insl
out
jge
inc
out
mov
mov
lea
push
mov
inc
sbb
in
scas
cmp
mov
movsl
daa
adc
cmp
ljmp
cmp
jg
inc
dec
fistps
popl
push
mov
sbb
xlat
ss
mov
into
std
or
adc
ja
and
sub
fcomps
xchg
decl
cs
sbb
lods
clc
fidivrl
inc
je
enter
xchg
leave
lods
xchg
mov
push
arpl
outsl
lods
aaa
xchg
and
add
fnsave
xchg
cmpsl
mov
cmp
or
lret
aas
push
inc
aad
and
xchg
cli
in
ret
sbb
jo
mov
jno
xchg
adc
and
aad
out
das
sbb
pop
xlat
mov
je
mov
mov
inc
movsl
xor
ret
xlat
lea
dec
mov
sub
fwait
sub
daa
cmp
cmpsl
mov
ljmp
in
fsubrp
or
rol
dec
addr16
xchg
dec
les
inc
mov
pop
dec
cmpsb
cmpsl
cmp
sbb
out
pusha
and
mov
xor
cmp
and
icebp
inc
das
mov
adc
movsb
lock
sbb
xor
push
push
je
movsb
jb
adc
pop
xchg
push
or
int3
rol
xchg
add
sti
xchg
repz
pop
bound
and
fnstsw
scas
jne
cli
movsb
movsl
test
jo
cmp
jmp
aaa
or
xchg
pop
or
jle
test
pop
push
rcrb
insl
dec
fdiv
adc
inc
int3
in
jmp
cld
jg
inc
lea
test
clc
pop
mov
test
add
aaa
inc
insl
sbbb
fisubl
xchg
jne
dec
lods
cld
jge
rol
mov
fdivl
adc
xor
adc
scas
repnz
push
repz
push
inc
cmp
fidivl
jne
mov
repz
adc
cmc
lahf
cmp
mov
cmp
sbb
divb
mov
xor
push
mov
subl
shlb
push
push
or
push
cmp
in
daa
mov
imul
cs
push
push
loopne
shr
pop
jno
add
mov
in
loopne
repnz
je
mov
sub
std
scas
inc
shrb
or
mov
pop
mov
xchg
das
dec
lods
bnd
arpl
aad
jno
and
bound
and
repnz
xchg
cmp
test
or
push
in
jecxz
pop
and
xor
in
loopne
inc
mulb
mov
cmp
out
sbb
push
mov
pushw
lock
out
aaa
stos
xchg
sbb
insl
out
dec
mov
jb
xchg
mov
scas
cwtl
sbb
shll
or
sahf
add
je
insl
fcomi
fisubs
sbb
shrl
out
int
pushf
mov
push
push
pop
nop
ds
cmp
push
pop
mov
jns
mov
xor
mov
in
mov
jecxz
push
or
inc
in
das
fwait
mov
cmp
lock
sbb
xlat
lods
cs
jg
push
ljmp
sti
push
fnsave
sub
fcoms
add
call
mov
push
sub
les
push
jne
sbb
jb
jmp
mov
pop
iret
sahf
mov
sti
orl
fsubrl
scas
dec
adc
popl
fwait
inc
pop
push
or
mov
pop
pop
or
mov
lahf
jno
push
push
test
fs
adc
aas
cmc
cwtl
fidivrs
xlat
cli
das
rorb
xchg
xchg
int3
inc
int
lods
dec
lret
repz
fstpl
mov
mov
sbb
enter
repz
arpl
mov
pop
fcoms
add
divl
lahf
imul
cmpl
xchg
push
out
fimuls
xor
xorb
lods
ret
clc
dec
inc
orb
mov
sbb
push
add
mov
mov
sti
adc
dec
mov
fcos
es
adc
cmp
jno
jae
pusha
mov
add
mov
stc
pop
adc
jns
movsb
push
ficomps
sub
pop
pop
or
int3
pop
into
iret
and
in
jb
aad
mov
shll
pushf
cltd
cmp
or
jne
jmp
push
sub
and
sub
ss
lods
mov
jae
ret
jg
lret
add
sub
xorl
pushf
clc
jge
pop
icebp
sub
xlat
add
jae
out
aad
into
inc
stos
and
or
pop
xchg
bound
mov
cwtl
pop
lret
jae
in
or
add
jg
shrb
icebp
jae
and
or
andb
pop
pop
push
scas
loope
lret
jnp
aaa
stos
ljmp
sbb
enter
rcr
aas
fcmovbe
mov
cmp
cmc
add
ds
mov
mov
push
test
js
loopne
sub
or
insl
sub
rorb
ljmp
fldz
mov
and
enter
into
xchg
push
inc
scas
inc
mov
jmp
imul
jmp
xchg
dec
push
jle
es
mov
scas
dec
lock
sbb
mov
icebp
adc
std
imul
sbb
lods
js
or
in
jecxz
mov
insb
enter
mov
loop
lret
fistpl
push
mov
jle
dec
pop
cmp
enter
dec
mov
add
push
test
ja
cmp
inc
repz
sbb
ret
imul
jmp
ror
push
xor
cmpsl
stos
jg
cmpl
adc
push
and
jecxz
xchg
jae
out
sbb
cld
pop
orb
pop
dec
jb
and
movb
loopne
shlb
add
loop
aad
add
xchg
inc
push
bound
aad
in
mov
out
dec
jnp
adc
jne
push
dec
inc
icebp
sub
and
ja
mov
dec
jb
xchg
mov
mov
ss
jo
data16
ret
imul
push
loop
lea
aas
mov
pop
into
mov
insb
jl
test
mov
and
stos
push
inc
push
xchg
repz
mov
in
mov
cwtl
cltd
mov
push
cmp
jmp
cmpsl
mov
jb
adc
mov
lock
nop
sub
jbe
mov
cli
ja
push
stos
sbb
inc
popf
xor
cmp
cld
loope
imul
adc
cmp
add
xor
loop
sti
dec
mov
mov
mov
jbe
jmp
ret
or
or
std
ljmp
push
testb
adc
sbb
insb
push
inc
dec
push
dec
mov
lret
fstpt
inc
adc
fistl
xor
adc
jno
add
into
icebp
cmp
adc
scas
add
dec
inc
pop
test
add
pop
shlb
scas
nop
outsl
jb
push
adc
fxch
and
mov
push
or
out
fiadds
jg
int
mov
mov
incl
test
mov
pop
insl
add
stos
mov
jnp
incl
mov
dec
std
aam
stos
sub
out
insb
fisttps
and
or
aam
popf
push
push
jge
xchg
mul
lret
ficomps
sub
dec
mov
xchg
test
push
xchg
push
xchg
dec
mov
mov
adc
mov
cmp
mov
or
mov
jno
lock
and
adc
movsb
push
jns
dec
sti
fs
jne
scas
arpl
push
into
mov
pop
stos
pop
mov
test
bound
pop
roll
rclb
das
mov
cld
mov
sar
add
testb
orl
or
dec
mov
adc
int
sbb
fldl
xorl
jb
clc
pushf
xor
aaa
sbb
aam
sub
xchg
out
mov
add
gs
insb
fwait
ja
nop
mov
jnp
mov
scas
repnz
add
test
insb
lret
xor
or
lods
xor
ljmp
ret
inc
in
xchg
cmpsl
sub
jp,pn
sub
stos
or
out
ja
jo
addr16
daa
ljmp
mov
fwait
pushf
insb
lcall
sub
pop
hlt
scas
jb
mov
into
sbb
pushf
cmp
inc
dec
scas
mov
cmp
gs
dec
push
rorl
jmp
xor
push
in
dec
rolb
jno
or
lods
cli
ja
push
cmp
lock
cmpsb
sbb
pop
mov
mov
push
nop
ficoml
das
mov
scas
es
xchg
imul
sbb
mov
push
in
mov
ficoms
jnp
jg
ret
into
cld
or
lods
jno
int3
mov
pop
or
push
ds
clc
lahf
test
push
xchg
mov
stc
inc
jmp
push
insb
mov
pop
outsb
jbe
or
rep
add
cmp
aad
adc
lods
jae
mov
xor
push
aad
subb
or
jno
jnp
or
sbbl
rorw
adc
sbb
data16
dec
xor
jnp
jb
scas
jns
enter
lods
loop
mov
push
cmpsb
xchg
sbb
pop
hlt
cwtl
lret
addr16
cmpsb
lods
ja
inc
pop
shrb
sub
stos
rcrl
add
std
fnsave
fsubr
test
xor
fstps
sub
dec
inc
testl
dec
lret
loop
add
loop
test
dec
je
push
ret
jbe
cmp
xor
jae
dec
outsb
mov
mov
jno
dec
popf
lock
cld
mov
xchg
stc
fnstcw
dec
add
insb
or
fs
bound
push
iret
sub
into
shll
scas
and
push
scas
inc
xchg
xor
xor
adc
orb
sarl
movsb
mov
dec
and
data16
cmp
inc
sub
sub
dec
cmp
sbb
es
shll
ss
add
rorl
loope
sbb
jg
sbbl
adc
mov
mov
rorb
loop
sub
xor
sbb
rcr
mov
popa
inc
mov
cld
cld
aas
cld
jl
mov
mov
stos
lcall
cmp
jle
loop
mov
push
int
test
or
mov
inc
jmp
test
in
or
mov
and
das
aas
cwtl
push
das
xor
mov
push
es
pop
out
sub
cmc
adc
dec
mov
lahf
imul
ficoml
out
mov
icebp
iret
cmp
lds
push
and
sbb
or
cmp
adc
inc
cmpsb
mov
ds
repnz
lea
cwtl
dec
data16
push
out
fidivs
cmp
test
push
insl
das
dec
jo
aas
or
inc
lahf
orb
lahf
cmp
movsb
in
dec
loopne
push
sbb
outsb
data16
push
mov
cmc
pop
aas
push
push
inc
add
push
movsl
sbb
push
push
dec
mov
add
loope
push
xchg
rorb
cmp
arpl
clc
pop
test
mov
addr16
jle
movsl
sub
daa
push
add
out
insb
push
add
adc
mov
cmp
jb
fistl
add
std
jmp
push
cs
add
and
xlat
sbb
sub
jl
push
das
mov
test
xchg
pop
inc
mov
dec
lret
dec
sub
xchg
loop
add
xchg
fistps
andl
test
mov
xor
mov
xchg
jp
shll
scas
stc
mov
int3
out
xchg
lcall
cmp
std
lods
mov
dec
scas
push
loope
repnz
sbb
dec
adc
xor
jo
mov
leave
testl
jg
dec
mov
insl
pop
imul
fisubs
test
out
outsb
cmp
mov
clc
mov
mov
inc
les
in
rcrl
aam
addl
jb
xchg
pop
sti
stos
mov
in
or
hlt
adc
push
mov
adc
aam
mov
psubb
sar
add
insl
push
mov
pushf
ret
loope
int3
sbb
pusha
mov
push
jo
cmpsl
jo
jl
adc
add
mov
xchg
adc
adc
sbb
sub
dec
or
lcall
jg
lret
push
pusha
and
cmp
inc
mov
mov
dec
xchg
inc
addr16
jns
jmp
mov
pushf
mov
stc
jae
jbe
mov
mov
out
mov
outsw
inc
fwait
sub
mov
cs
pushf
rorb
cmp
or
cmpsl
mov
push
xchg
mov
mov
jns
leave
push
dec
pop
js
lahf
inc
mov
mov
cmpsl
fistpll
and
sahf
out
xor
clc
push
pusha
dec
ret
orb
xor
xchg
rolb
fdivp
arpl
int
inc
in
dec
jecxz
mov
cmpsl
cmpsl
add
or
mov
mov
stc
pop
pop
mov
into
mov
inc
cltd
xchg
mov
adc
aas
movsl
loope
pop
test
xor
scas
jecxz
mov
push
lea
mov
out
adc
adc
ds
fiadds
lods
aad
jp
call
lds
or
loop
jl
add
iret
arpl
lcall
into
or
adc
mov
imull
sbb
inc
lods
sbb
test
mov
push
add
in
dec
pop
ss
adc
and
mov
mov
or
repz
xor
cmovne
loope
jp
mov
mov
icebp
decb
add
pop
sub
add
cmp
mov
lock
rcrb
pop
int
stos
push
popf
inc
cmpsb
inc
pop
and
jns
in
das
push
mov
push
dec
cmp
aad
or
inc
jb
add
shrl
adc
cld
out
dec
xlat
mov
push
dec
mov
cli
pop
or
cmpsb
hlt
adc
dec
inc
jns
aaa
lds
test
xor
test
lcall
push
pushf
stc
leave
xchg
cmpsb
xor
jl
lea
enter
es
popf
or
xorb
rorl
aaa
pop
negb
cltd
cli
lahf
test
rorl
push
xchg
cmp
inc
outsl
jp
add
imul
popf
push
lret
insl
mov
add
mov
jnp
call
mov
rcrb
xchg
insb
push
mov
push
out
xchg
mov
imul
cmpsb
testl
cmpsl
sub
das
add
lcall
push
and
cld
or
add
cli
and
mov
in
test
pusha
test
and
sbb
sub
lcall
call
and
cmpsb
clc
xchg
fs
sbb
incl
pop
xor
ja
sub
loopne
out
adc
xchg
js
sbb
jbe
ret
test
mov
cmpl
push
or
ret
lods
fsubrl
xor
mov
lcall
pop
jae
lods
jnp
cmp
gs
xor
mov
aaa
lcall
jge
push
jg,pn
adc
rcrb
fstl
int
repnz
in
xor
sbb
push
cmc
nop
dec
int3
inc
lahf
push
jl
test
mov
les
out
sub
push
push
aaa
jns
fwait
rcll
sub
rclb
aad
xor
jae
jmp
mov
push
mov
lods
xchg
scas
xchg
stc
lret
pusha
jle
pushf
es
stc
mov
xchg
jge
mov
mov
loop
in
out
and
jl
sahf
cmpsb
rorl
mov
mov
fs
adc
out
hlt
xor
xor
loop
loop
inc
scas
mov
faddl
loope
jecxz
pop
dec
xor
lcall
mov
fsts
in
push
add
xchg
jo
or
js
lock
fmuls
push
movsb
cmp
mov
inc
inc
inc
cltd
dec
xorb
mov
subb
pop
cmp
cmpsl
or
xchg
mov
loop
mov
mov
scas
hlt
push
dec
mov
inc
xor
jp
out
fwait
test
fldenv
das
hlt
xlat
or
inc
pop
push
fs
and
dec
lock
cmp
xlat
dec
fstl
xor
scas
push
jmp
push
add
pop
mov
fwait
jae
mov
mull
into
or
repz
add
and
fwait
pop
lcall
xlat
shrl
in
movb
test
ret
cmpsl
insl
and
and
xor
lret
jo
sbb
popa
jl
sahf
call
push
mov
daa
mov
outsb
js
push
bswap
sub
xor
cmc
std
pop
mov
sub
or
ret
lret
pop
sub
mov
xchg
movsl
push
sub
jb
repz
shll
addr16
insl
and
movsl
dec
inc
out
in
cmp
jns
sbb
leave
sbb
jmp
sub
mov
cmpsl
pushf
rcl
xchg
or
outsb
fsubrs
cli
data16
iret
xchg
int
and
movsl
stos
inc
popf
or
mov
in
add
arpl
jno
push
aas
fwait
repz
fucomi
outsl
pop
cmp
enter
shll
ret
push
or
jle
rcr
leave
sbb
cmp
data16
dec
mov
xchg
mov
aam
ret
push
cs
sbb
clc
mov
ss
pop
addr16
cmp
mov
out
jb
adc
jge
cmc
xor
out
pop
icebp
call
xchg
cmp
out
gs
outsb
hlt
leave
inc
lret
pop
pushf
xchg
nop
cmp
or
mov
jge
js
addr16
movsb
dec
xchg
and
mov
push
dec
xor
sti
dec
loope
lock
pop
fistps
dec
fdiv
out
mov
adc
popf
jne
les
jg
dec
popa
mov
sahf
lds
cli
adc
inc
lds
pop
jle
mov
push
mov
push
imul
xlat
xor
stc
xor
cmp
popa
fldt
movb
mov
jbe
pop
dec
sub
sub
sub
adc
out
xchg
xor
or
mov
pop
cs
out
jb
fiadds
dec
or
xchg
cwtl
xchg
mov
mov
pop
icebp
lea
xchg
mov
testl
sbb
les
clc
mov
adc
xlat
sahf
insl
mov
divl
aad
jae
sbb
shr
mov
je
dec
inc
adc
gs
inc
div
lods
push
mov
lret
pop
mov
bound
mov
test
lods
xor
fsts
xor
mov
xchg
push
test
adc
push
in
sub
and
call
dec
xor
rcrl
ja
mov
test
cmp
pop
rcr
add
pop
mov
jne
aam
xchg
cmpb
adc
mov
fprem1
and
popf
data16
sahf
jg
xchg
leave
inc
add
fdivr
jnp
or
adc
push
mov
mov
mov
pop
sbbb
fcoms
xchg
fadd
ja
out
xor
adc
sbb
nop
call
lods
and
adcb
push
pop
inc
mov
out
ficoms
xchg
or
aaa
mov
or
addr16
pop
mov
cmp
or
popw
cmp
stc
add
mov
mov
fisttps
lret
push
mov
scas
pop
push
add
in
add
jg
cmp
cmc
mov
ljmp
inc
out
sarb
int3
call
dec
out
fstpt
push
mov
mov
nop
jl
lock
insb
mov
push
jp
lahf
aas
dec
mulb
aas
sub
ljmp
sahf
mov
pop
or
clc
pop
mov
fwait
xchg
test
outsb
cmp
imul
mov
or
inc
repz
les
xor
jns
or
das
inc
inc
in
mov
imul
dec
sbbl
add
pop
cld
mov
aam
popa
fs
cli
aad
arpl
clc
sub
xor
fdivr
and
push
pop
lods
imul
or
mov
fwait
dec
notb
dec
xor
cmp
mov
dec
fsubs
jecxz
mov
push
cli
fdivl
sti
pop
dec
dec
lods
repz
or
roll
pusha
int3
jmp
es
mov
int
iret
lret
in
dec
clc
ja
outsb
popf
cmp
jae
sub
roll
fimuls
testl
stc
sbb
nop
and
or
cmpsb
and
pop
inc
and
lds
enter
out
pop
int3
loopne
push
push
bound
sbb
dec
sbb
insb
jg
pop
jp
icebp
push
into
mov
add
adc
jno
cmpl
mov
mov
fistl
and
inc
cmpsb
jecxz
loope
mov
jns
subl
xlat
lret
xchg
push
xor
incb
cs
sub
adc
roll
ljmp
rcr
cld
aam
stos
ljmp
push
push
xchg
shll
mov
inc
fwait
xchg
adc
cli
inc
lds
dec
movsl
pop
add
loopne
fisubs
lret
jns
lcall
lcall
xor
sbb
adc
into
dec
cld
int3
or
sahf
dec
inc
cmpsb
and
or
lahf
xchg
sahf
cli
scas
add
xchg
aaa
clc
pop
jle
jmp
inc
pop
imul
into
push
fs
push
or
cmp
cmp
scas
sbb
insl
orb
mov
int3
pop
mov
int3
jns
out
sub
push
mov
adc
pop
popl
aad
enter
pop
loop
cmp
mov
push
jns
mull
mov
into
mov
pop
jle
pop
filds
mov
scas
adc
sub
cmp
sbb
hlt
repz
mov
loope
dec
jg
arpl
jnp
loope
and
or
fidivrs
repnz
scas
sbb
or
mov
or
lahf
xchg
mov
add
and
leave
mov
cmp
dec
cwtl
jo
jecxz
push
data16
or
cmp
repz
sub
mov
popa
hlt
dec
shl
enter
push
cmpsl
mov
lret
xchg
jecxz
jno
test
mov
push
fistps
scas
loope
sub
lods
mov
or
iret
ss
dec
incb
mov
test
sub
sbb
mov
pop
push
fyl2x
js
aaa
or
xchg
stc
enter
xorl
std
lods
imul
sarl
lds
add
dec
fcmovbe
daa
popw
jae
ficomps
sub
sbb
adc
fisttpll
pop
sub
out
jae
cmp
mov
pop
inc
pop
pushf
sbb
dec
lcall
mov
xchg
sub
scas
push
in
cmp
pushf
cmp
mov
xchg
xchg
scas
jae
cmp
jmp
xchg
lret
adc
das
je
jl
inc
mov
inc
mov
add
jp
lods
sbb
out
lea
pop
pop
mov
aam
rorl
mov
push
jle
ret
jae
cmc
and
and
mov
ret
inc
or
jo
ret
sub
or
aaa
adc
xchg
out
xor
stos
sub
push
or
xlat
in
add
outsb
pop
call
xchg
fimuls
and
fiadds
mov
std
sbb
and
push
shrl
or
pop
repz
dec
push
pushf
scas
dec
mov
cs
sbb
in
jbe
pop
loop
and
shll
push
xor
push
outsl
cmp
adc
ss
test
in
cld
test
aad
mov
dec
jp
and
aaa
and
das
fs
out
cwtl
into
mov
xor
orl
int
mov
mov
jno
xchg
cmp
jg,pn
inc
movsb
sbb
pop
fcom
enter
push
inc
and
fnstcw
shlb
iret
xor
aad
in
xchg
fwait
sbb
jo
sbb
lret
xchg
loope
outsl
inc
xchg
push
mov
dec
add
push
pop
dec
rol
adc
cli
das
ss
int
mov
cld
scas
xor
sbb
jge
repz
sub
mov
pop
mov
jmp
xor
scas
aaa
xchg
ret
imul
daa
cmp
adc
test
jbe
fists
xchg
and
js
mov
fadd
xchg
fisubs
hlt
jb
pop
jp
call
aad
mov
push
inc
data16
jb
pusha
sub
mov
fmuls
jno
sahf
flds
stos
or
lock
iret
movsl
pusha
add
fadd
dec
mov
inc
rorl
nop
xchg
idiv
jo
pushf
pop
xchg
pop
in
add
out
fimull
test
hlt
in
mov
sub
sbb
test
or
scas
pusha
lret
or
fcmovb
mov
sbb
popf
pop
das
jge
rolb
dec
jbe
dec
fs
je
adc
imul
out
adcl
fistl
dec
jne
mov
shl
jne
mov
jle
lods
je
lret
in
addb
repz
adc
lret
cmpsb
lds
cmp
push
xor
lcallw
xor
xchg
jl
sbb
clc
adc
imul
xor
jp
ja
inc
in
cmp
or
movsl
jg
sbb
fisttpl
ss
lock
mov
test
xchg
lea
icebp
sub
loopne
mov
mov
jae
incb
cld
pusha
inc
xchg
pop
loope
das
mov
lods
bound
dec
cld
push
mov
je
daa
enter
cmp
js
stc
shl
aaa
cmpsl
pop
in
xchg
stos
leave
push
jo
mov
arpl
push
inc
push
xor
mov
sbb
pushf
xor
fldl
aad
cwtl
andl
sub
pushf
adc
xchg
mov
jg
sbb
push
adc
inc
mov
sbb
std
in
jmp
out
push
andl
jne
and
mov
das
push
andb
addl
add
mov
aad
dec
and
insl
insb
push
test
popa
pop
mov
aas
jl
rorb
je
push
inc
cmpsb
lock
adc
jmp
into
imul
js
out
lds
mov
lret
dec
push
pop
das
push
jae
xchg
cltd
mov
push
lahf
mov
leave
and
in
add
jp
mov
std
popf
dec
add
les
push
js
lods
xorb
xor
ret
xchg
test
mov
mov
or
sub
cli
cld
sbb
add
test
push
xchg
gs
add
and
dec
icebp
push
in
xorl
and
out
cmp
lods
scas
imul
fadd
mov
sti
std
push
stos
xor
mov
les
xchg
sub
xor
cmp
add
es
mov
push
or
out
xchg
sti
ja
lahf
ss
ljmp
subb
lcall
sub
lret
out
adc
cmp
lcall
jne
mov
rcr
scas
lret
in
test
dec
aaa
or
ss
call
inc
jle
push
xor
push
cmpsl
jg
mov
dec
daa
mov
mov
and
icebp
inc
stos
loope
shlb
mov
xchg
ret
adc
adc
cmc
aad
push
test
inc
in
adc
and
cld
arpl
cmpsl
adc
push
inc
push
push
xchg
mov
dec
and
and
scas
rorl
mov
shll
xor
cmp
sub
adc
lcall
push
bound
adc
in
fidivs
mov
push
or
sub
or
aaa
push
xor
jp
fcmove
dec
xchg
in
fistpl
rcr
cmp
mov
push
je
rolb
add
mov
jns
and
test
sub
adc
std
jae
and
in
push
adc
jno
mov
hlt
imul
dec
imul
pop
add
popa
jecxz
mov
lret
iret
jl
lods
sub
xor
nop
jno
imul
movsl
add
mov
sti
xor
mov
push
insl
sbb
imul
mov
pop
jae
mov
adc
mov
stos
pop
lea
loop
clc
dec
testb
rcll
pop
pop
sub
lret
mov
jno
pop
adc
in
aas
scas
pop
divl
push
lods
es
je
scas
lock
mull
and
lods
mov
pop
xor
rorb
mov
cwtl
sbb
out
lahf
cmp
mov
xlat
mov
rcll
sbb
ret
fsubrs
bound
dec
push
pop
cmpb
dec
pop
jbe
in
aam
adc
ljmp
icebp
call
sbb
push
outsb
nop
or
jns
xchg
sbb
in
pop
lods
fs
add
mov
xor
adc
out
sub
inc
pop
xchg
xchg
in
mov
mov
mov
xchg
cmp
cmp
push
jns
sbb
jb
cwtl
lret
push
and
push
inc
xchg
mov
cmc
mov
xchg
jecxz
mov
iret
jle
adcl
mov
xor
jp
or
add
push
lahf
lret
rcrb
mov
js
mov
repnz
sbb
xlat
pushf
rolb
jb
mov
ljmp
sub
sarb
decb
sar
add
lret
stc
test
sbb
in
and
push
adc
lods
sarl
xor
repz
xchg
loopne
xor
push
lds
pop
jbe
std
popa
repz
mov
pop
sbb
and
xchg
rcrb
push
inc
outsb
ljmp
add
icebp
dec
dec
adc
fnstenv
lods
xor
mov
shrl
jne
push
out
es
int3
push
in
out
sbb
sub
leave
enter
in
xor
push
inc
faddl
mov
loop
sub
or
pop
add
cli
inc
into
rolb
mov
aam
bound
pop
mov
loopne
push
mov
adc
push
add
add
cld
insb
lea
arpl
arpl
mov
insl
popf
pushf
mov
lcall
or
out
inc
xor
adc
fisubrs
xchg
daa
add
sbb
rol
mov
jns
in
adc
sti
out
aam
jl
test
ss
sbb
mov
loope
in
fadds
dec
mov
xor
adc
sub
cmp
in
xchg
inc
and
int3
loope
sarl
shrb
addl
pop
pop
jne
xlat
mov
jecxz
sbb
inc
mov
into
out
or
hlt
sahf
push
jmp
imul
cld
fcmovbe
add
dec
std
lods
cld
cmpb
mov
ss
add
loopne
stos
rclb
hlt
mov
push
les
inc
mov
adc
bound
pop
lds
cmp
jno
jb
fisubs
cmp
mov
lock
inc
setle
pop
xchg
negl
xor
movsb
xlat
mov
mov
lds
sub
and
lret
push
data16
cmp
repz
push
arpl
adc
push
cwtl
pop
ljmp
mov
jb
aaa
cmpsl
sbb
rcl
in
ss
xor
mov
test
or
cmp
xor
insb
dec
dec
xor
daa
cmpsl
scas
movsb
and
mov
adc
shll
push
push
rcll
xchg
sahf
xor
and
jno
push
lock
jae
fadds
push
test
mov
mov
in
adc
je
adc
jne
inc
in
repnz
jecxz
adc
movsb
arpl
dec
mov
call
scas
je
push
shll
sub
add
mov
inc
rcll
addr16
mov
sub
jl
shll
popl
iret
je
inc
add
stos
sub
hlt
or
punpckhwd
jo
and
adc
inc
jl
mov
scas
lock
jl
movsl
aam
aaa
push
adc
and
mov
inc
je
sub
mov
mov
or
sarb
mov
push
jae
out
push
in
pop
add
mov
cmp
scas
aam
ss
mov
imul
test
repnz
rorb
out
push
loopne
lods
cmc
loopne
lock
scas
mov
pop
cmp
cmc
xchg
push
and
outsl
cmp
mov
movsb
call
ret
jl
mov
push
inc
cld
or
std
sbb
bound
loope
pusha
xor
pop
mov
mov
inc
mov
push
dec
sub
jnp
adc
js
xlat
and
lock
or
rcl
pop
hlt
cltd
mov
mov
iret
shl
pop
sub
call
push
xchg
adc
sbb
adc
jle
xor
jecxz
popa
repnz
sbb
pushf
pop
mov
bound
ja
jle
popa
fcmovne
cld
push
cwtl
xor
jp
leave
imull
mov
aaa
mov
movsl
cmp
jnp
sbb
xor
adc
fsts
daa
sub
stos
scas
ret
es
loop
out
ret
sub
mov
daa
xchg
repnz
sahf
cmpsb
test
push
repnz
or
xor
adc
mov
jnp
les
movsl
fisubrl
push
scas
pop
ljmp
xchg
aas
adc
insl
fildll
inc
into
inc
xorb
xchg
dec
cltd
scas
sub
jmp
sbb
push
jns
xorps
sub
cmp
add
dec
pop
and
push
jbe
test
mov
subl
sub
sti
nop
inc
inc
adc
outsb
stc
sbb
mov
aas
jne
jne
jbe
xor
dec
push
scas
sbb
pop
fistl
push
push
ja
mov
divl
das
sbb
movsl
inc
xlat
or
movsl
mov
pop
cmp
scas
sahf
leave
loopne
sbb
push
jne
jbe
rorb
hlt
sbb
outsl
stos
call
and
adc
leave
das
ljmp
ljmp
mov
xchg
and
je
das
pop
in
test
mov
mov
es
clc
cmp
pop
inc
dec
and
dec
repz
pushf
and
mov
rorl
push
popa
sub
fsubs
lods
subl
aad
mov
jp
inc
dec
hlt
cmc
dec
shlb
push
pusha
and
stos
fists
jl
xchg
mov
jne
call
sarl
les
cmp
push
inc
cwtl
adc
sub
lds
mov
mov
mov
int
pop
mov
push
in
frstor
rol
cmp
repnz
lret
jg
dec
shlb
daa
in
dec
in
dec
negb
cmpl
sbb
push
or
jno
push
aam
push
cmpsl
mov
cwtl
or
mov
pop
or
popf
mov
cs
jmp
sub
cmp
jno
int3
lods
adc
stc
popf
out
dec
inc
jbe
jae
cmp
test
bnd
sarl
test
mov
sbb
cwtl
lahf
nop
inc
xlat
nop
stc
dec
ja
ret
pop
or
dec
lret
fsubl
outsb
enter
jb
mov
mov
setne
adc
pop
push
pusha
mov
sub
mov
je
push
pusha
xor
int
fmuls
shrb
push
into
sbb
push
push
int
scas
pop
push
add
jns
lret
mov
cs
push
sub
inc
fcmovnu
insb
cli
push
mov
nop
shll
xor
pop
hlt
fmull
test
add
inc
and
push
fiadds
sti
fs
mov
pop
pop
dec
and
cmpsb
gs
push
push
xor
imul
out
test
push
jo
std
test
inc
mov
fistpl
stos
mov
ds
xchg
int3
mov
dec
jno
inc
lret
repz
pop
test
add
into
repnz
je
xchg
test
pusha
mov
lcall
stc
loope
loope
fucom
cmp
cmpsl
in
stos
and
fcompl
ficompl
and
data16
mov
jg
ret
gs
in
mov
call
cmp
dec
push
aas
xchg
add
mov
popf
repnz
mov
push
push
and
lock
dec
iret
mov
jns
sbb
push
sarl
and
mov
fcomp
cli
lret
insl
inc
das
and
mov
hlt
lahf
frstor
xchg
mov
nop
ret
jno
adc
cmp
or
repz
popa
out
aaa
mov
outsb
mov
scas
int
gs
mov
out
and
sub
mov
popa
shlb
push
repz
and
adcb
or
fnstcw
insb
in
jp
push
jge
adc
scas
or
test
adc
xchg
dec
push
mov
pop
fwait
jl
cmc
out
sub
push
jnp
inc
adc
inc
addr16
xchg
sahf
into
lea
sti
lcall
sbb
movsb
fiaddl
ljmp
jp
push
je
mov
test
mov
sub
iret
pop
inc
dec
shl
sbb
mov
push
mov
mov
test
test
mov
mov
rorb
add
mov
or
jecxz
lret
mov
inc
shr
mov
sar
cmp
and
push
lcall
sbb
mov
jno
movsb
fistpl
popa
pop
inc
in
imul
pop
insl
in
fwait
mov
aam
outsl
push
loope
ret
pop
sub
mov
addr16
addb
in
in
sbb
mov
pop
sbb
in
rcrb
ja
sub
push
or
push
cmpb
cmc
enter
xorb
jne
dec
jmp
stos
out
ja
test
push
xlat
adc
fisttpll
adc
lret
xchg
push
push
lcall
lock
test
add
dec
mov
lahf
bound
and
push
mov
adc
lret
mov
rol
negb
adc
and
or
sbb
clc
mov
movsl
jae
mov
lret
sub
data16
sbb
bnd
fistpl
out
mov
xchg
pusha
xchg
or
push
mov
add
repz
test
pop
pop
jne
sbb
std
or
push
inc
sub
and
clc
test
aam
push
cmpl
andl
pop
mov
stos
mov
jg
adc
leave
negb
stos
inc
std
lret
je
mov
dec
and
add
lock
dec
das
repnz
bound
outsl
jb
idivl
aam
xchg
lods
rcr
das
out
push
in
mov
and
scas
sbb
jae
sbb
mov
mov
mov
std
clc
inc
inc
mul
jbe
mov
iret
add
cmp
bound
fcoms
push
sahf
movb
dec
mov
xchg
or
and
repnz
mov
outsl
test
sub
or
fimull
inc
imul
and
mov
pop
dec
into
dec
ljmp
roll
jb
mov
lret
xor
jmp
cmp
jb
lea
movl
and
push
and
pop
sbb
iret
in
mov
scas
call
mov
push
adc
mov
nop
outsb
fs
mov
jle
push
call
mov
in
in
push
cmp
xor
sbbl
dec
sub
sti
lret
cmp
mov
xlat
cld
mov
icebp
inc
xchg
jae
mov
cli
je
into
out
pop
ficoms
jge
mov
push
inc
add
xor
mov
jmp
mov
mov
gs
cmpsl
jge
into
aam
mov
push
cmpb
push
std
sub
or
insl
push
sub
cmpsl
cmpsl
push
in
imul
test
hlt
repz
jbe
aaa
jbe
jecxz
sbb
imul
icebp
and
das
enter
test
sti
je
sbb
mov
pushf
cmpsl
imul
lds
mov
push
sbb
sbb
sub
aad
xchg
fcom
mov
shll
roll
int
cmp
xor
push
cmp
push
mov
dec
stos
jnp
pop
fs
jbe
call
jne
add
clc
clc
mov
lods
jns
insb
mov
mov
push
dec
cmp
lret
push
add
xchg
outsl
fsubs
mov
pushf
flds
dec
xchg
nop
dec
cmp
sbb
sub
into
ret
ror
fldcw
es
mov
jle
jns
cs
xchg
mov
jnp
shrl
dec
pop
in
xchg
or
inc
sahf
mov
and
jno
xor
jnp
mov
mov
pop
call
jno
int3
aaa
xor
test
aas
pop
sbb
cmpsl
fmul
cmp
lock
clc
xchg
push
xchg
loope
push
sbb
cli
xor
leave
mov
gs
cmp
icebp
jb
xor
ja
in
jmp
out
insl
dec
jmp
sbb
cmp
ss
sarb
in
xchg
inc
sub
ljmp
jge
mov
push
out
add
sbb
imul
xor
jle
jge
dec
cmp
sbb
pop
and
mov
insl
pop
ret
or
sti
sti
fsubl
out
inc
add
lahf
dec
jb
aad
stos
filds
push
addr16
aam
sub
pop
out
sbb
vandpd
and
idivl
jg
lock
sbb
jge
push
push
xchg
js
outsb
test
and
das
lock
addb
push
lods
popa
out
int3
mov
ja
dec
cltd
cwtl
dec
pop
mov
or
mov
push
xlat
inc
bound
mov
cmp
xchg
imul
xor
fisubrl
jae
out
aaa
repnz
in
cmp
jmp
push
dec
sub
lock
sbb
and
gs
mov
mov
xlat
jp
jae
cltd
jmp
out
jae
adc
xchg
ljmp
sahf
xchg
mov
pop
add
es
aad
cmp
xor
jle
mov
sub
adc
pop
add
push
adc
inc
popf
fidivrs
dec
inc
pop
push
rclb
dec
jecxz
push
xor
nop
daa
sbb
push
lds
ret
xchg
shlb
sub
ficoml
cltd
or
or
dec
mov
or
pop
or
sub
pop
divl
into
mov
xchg
or
xchg
aas
addr16
rclb
and
xor
cmp
fsts
orb
mov
adc
jle
xchg
fs
add
adc
popf
xlat
pusha
enter
inc
rolb
cmpsl
add
je
mov
aas
test
nop
add
fs
inc
mov
sahf
ja
mov
push
pop
int3
jmp
mov
and
cmpsl
imul
rorl
lock
push
mov
loopne
and
xor
adc
insb
xchg
xchg
push
push
push
xor
outsl
or
xor
xlat
mov
insl
pop
mov
je
insl
fcmovu
pop
sar
mov
cli
xchg
sarb
sub
lret
mov
push
into
imul
outsb
movsb
push
test
and
xor
jmp
xor
jg
lods
mov
cmp
push
cmp
or
lds
dec
jecxz
push
fsubl
sub
pop
inc
lods
out
enter
clc
add
mov
xor
bound
stos
mov
sub
or
mov
and
mov
push
aaa
xor
lahf
inc
mov
mov
sub
scas
pop
mov
pushl
sbb
btc
sub
mov
sbb
push
push
cmpsl
fwait
sub
mov
iret
sbb
hlt
dec
and
jmp
out
repz
add
int
fstpt
sbb
mov
mov
lret
add
roll
xor
push
pop
xchg
jae
ljmp
xor
popa
xor
iret
jge
negl
sahf
movsl
into
jge
lahf
mov
and
jbe
push
jne
xchg
ror
aas
syscall
xlat
js
in
ja
cmpsl
lds
push
out
mov
ficompl
jecxz
adc
mov
jo
lods
pop
dec
fidivs
mov
lcall
imul
or
adc
pop
or
fcomps
push
shll
daa
rclb
mov
aam
jge
outsl
mov
in
addr16
outsb
jmp
push
aas
fldl
out
jl
mov
sbb
mov
repz
popf
ret
adc
out
push
repz
out
fwait
sub
sub
scas
mov
push
ss
xchg
xchg
push
nop
jmp
adc
xor
mov
add
mov
stos
sbb
lea
push
andl
bound
or
mov
and
push
and
mov
out
xor
cmp
dec
and
mov
lds
sbb
shlb
pop
fldenv
jae
xchg
sub
sbb
pushf
cmp
xchg
pop
mov
test
add
out
mov
sbb
aam
scas
or
mov
push
dec
inc
or
cmp
sbbb
adc
mov
or
je
je
pop
cmc
dec
cwtl
adc
push
das
std
mov
push
pop
dec
jb
out
mov
adc
idivb
ja
outsl
adc
mov
mov
sub
clc
cmp
fs
std
cld
push
icebp
add
aaa
and
sbb
scas
test
cwtl
inc
cs
mov
les
inc
addb
xchg
add
sbb
pop
inc
cli
cwtl
jp
jae
das
push
incb
std
xchg
test
rorb
or
sub
push
xchg
mov
sbb
jne
sbb
cmpsb
in
mov
sbb
daa
add
xchg
insb
mov
ja
mov
scas
js
clc
adc
jb
dec
js
pop
leave
int
or
adc
cltd
xor
mov
fxch
pop
dec
popf
mov
rcrb
add
movsb
rcrb
mov
testl
mov
jns
cmp
xor
adc
movsl
xchg
test
into
daa
cmc
jg
mov
lock
arpl
mov
scas
xor
mov
outsl
and
ja
adc
stos
jo
push
icebp
push
sti
inc
dec
test
movsl
popa
cs
xor
mov
push
call
or
mov
stos
sti
rcr
sub
stc
aam
pop
jbe
inc
mov
sub
jne
fs
call
mov
pop
je
pop
lods
out
lret
adc
mov
xchg
out
push
jnp
inc
cld
pusha
inc
and
push
test
mov
pop
in
mov
enter
dec
push
gs
mov
xchg
fimull
pop
movsb
into
aam
shr
hlt
icebp
insb
cmp
repnz
inc
mov
push
loop
inc
jns
lea
xor
jae
dec
dec
or
test
div
movsb
mov
cmp
and
dec
push
aad
lds
lock
add
jle
addr16
inc
fnstcw
push
cmp
push
repnz
jnp
pop
add
aam
push
or
mov
push
mov
cmpl
roll
mov
test
stos
push
daa
test
loopne
fadd
add
adc
stos
in
xor
jl
negb
xchg
dec
test
es
xor
cld
jne
jbe
or
outsl
sub
inc
neg
push
inc
aaa
loopne
loope
mov
adc
inc
aas
mov
ja
clc
call
imul
lea
or
mov
mov
add
pop
inc
cmp
add
sub
clc
or
jo
xchg
sub
leave
cmpl
call
lahf
insl
fistpll
outsl
ja
outsb
mov
or
mov
mov
subb
addr16
cld
mov
pop
outsb
outsl
mov
cmp
nop
mov
lret
ja
loop
hlt
push
inc
pop
popf
xor
mov
out
and
xchg
ret
aaa
fisubl
sbb
rol
lret
xchg
xlat
push
push
mov
add
and
jb
mov
test
outsb
into
in
adc
out
lds
adc
mov
mov
or
push
jp
pop
adc
mov
jge
sbb
cmp
push
mov
out
movsb
mov
jge
mov
addr16
or
fdivr
inc
cmc
outsl
sub
pop
call
ja
xor
lea
aam
mov
mov
xor
jmp
sarb
movsb
pop
xchg
testb
not
dec
sbb
xchg
jle
pop
into
call
jle
inc
js
mov
push
mov
bound
mov
lods
push
jle
pop
stos
jle
shrl
sbb
push
sti
inc
test
jecxz
aas
dec
loope
dec
insb
cs
push
dec
out
sub
out
mov
xor
xchg
add
sahf
icebp
xor
pop
xchg
mov
sub
cmpsb
fiaddl
rolb
push
pusha
pop
popf
mov
stos
add
test
push
mov
pop
rcrl
mov
push
add
call
or
adc
mov
sub
call
sbb
or
sub
xor
mov
push
xchg
and
cmp
mov
leave
rcrl
xorb
mov
cmp
push
outsl
mov
stc
add
pop
sarl
lahf
insb
cltd
icebp
movsl
pop
and
mov
scas
adc
mov
mov
movsl
adc
sub
mov
sbb
loope
test
inc
jo
or
xor
pop
out
int3
push
aaa
cmp
aam
add
adc
fwait
xor
pop
outsl
ss
or
aad
das
jns
inc
arpl
push
push
mov
or
in
push
adc
test
pop
mov
inc
add
mov
adc
jmp
mov
enter
fisubl
sub
adc
and
sub
aad
push
xchg
imull
adc
stos
mov
out
movaps
inc
movsb
les
mov
dec
or
mov
jne
xchg
aad
inc
jg
xor
incl
jno
and
cmp
push
mov
std
rorl
add
mov
int
loope
ret
adc
pop
aaa
mov
pushf
push
shll
xchg
fwait
mov
into
xchg
loope
subl
jmp
int3
neg
jne
out
pushf
imul
insl
rolw
out
mov
gs
mov
icebp
jle
pop
stos
call
arpl
sub
pop
xor
mov
mov
sbb
lcall
xchg
add
dec
int
xchg
mov
push
pop
sub
and
pop
jge
mov
cmp
cmc
pop
mov
test
ds
aam
insl
addr16
test
xchg
insb
sbb
xchg
outsl
dec
xor
mov
jne
dec
mov
mov
daa
repz
faddl
mov
outsl
pop
xchg
mov
orl
out
out
aas
cmpsl
sub
adc
inc
mov
call
data16
imul
and
cmp
mov
adc
mov
mov
mov
add
insb
jbe
xor
dec
repnz
mov
call
das
and
in
xchg
jle
add
fisttpll
adc
cld
push
xchg
daa
push
pop
add
xor
pop
cmp
fwait
sbb
mov
cli
sub
xchg
insl
cld
mov
scas
out
jb
pop
dec
unpckhps
pop
inc
or
das
imulb
push
or
aad
and
cmp
js
and
sbb
call
and
fwait
out
das
loope
aaa
jge
xchg
mov
jp
inc
xchg
out
cwtl
pop
aas
sub
lcall
movsb
lods
fs
lahf
pop
mov
mov
stos
fucomi
ljmp
shll
xor
popa
lods
cmp
jmp
ja
push
adc
test
int
or
dec
xor
repnz
in
in
sarl
dec
jmp
lcall
dec
ds
dec
test
sahf
out
out
xor
js
ljmp
and
jmp
cs
sub
iret
push
imul
std
gs
pop
sbb
cwtl
mov
and
arpl
push
mov
inc
dec
jg
xchg
fldl
sti
jno
adc
jns
adc
sbb
insl
sbb
test
mov
push
xor
bound
sbb
mov
sahf
sbb
leave
adc
test
inc
add
xor
cmpb
cld
sub
out
mov
push
orb
lea
ja
cwtl
imul
subb
sub
or
test
test
cli
addr16
call
cli
sub
insl
jno
xor
push
fiadds
fwait
in
mov
push
xchg
pushl
xor
xchg
popf
pop
cwtl
clc
jne
push
xchg
test
insl
das
lret
ds
stos
cwtl
xchg
or
lock
cli
xor
cs
sub
hlt
pop
fadd
add
or
xchg
outsb
lret
loope
cwtl
mov
test
add
aas
xchg
xor
jnp
xchg
mov
stos
cmp
inc
rclb
adc
les
and
inc
cmp
mov
addr16
outsb
or
mov
lods
sub
icebp
mov
std
enter
icebp
pusha
repz
adc
lahf
inc
adc
sub
cmp
mov
lods
hlt
dec
nop
icebp
push
xlat
rcr
loopne
push
lret
adc
lods
add
data16
in
lds
mov
movsb
push
fbstp
int
js
and
sbb
sub
mov
ret
and
cmpl
pop
mov
pop
fwait
mov
mov
mov
fistpl
push
mov
mov
lods
loop
adc
int3
sub
lret
lret
das
repnz
jnp
jmp
sbb
push
xchg
add
stos
inc
outsl
push
das
out
test
mov
stos
mov
loope
loopne
or
dec
inc
lret
mov
mov
das
xchg
xchg
or
call
push
mov
xchg
inc
mov
imul
adc
inc
repz
adc
adc
fisttps
mov
aaa
je
fs
mov
ja
stc
ss
insb
sub
add
pop
dec
cld
dec
aas
xchg
fs
or
add
inc
orb
popf
in
ja
cli
cmp
lcall
lcall
dec
sbb
mov
push
repnz
and
mulb
lcall
pop
idivl
stos
inc
popa
dec
std
mov
xchg
or
fcompl
test
mov
pop
popf
cmp
add
call
add
jno
inc
mov
cld
inc
pop
rolb
add
out
negl
dec
adc
mov
aaa
cwtl
xor
das
loope
mov
sbb
jae
xor
sbb
inc
inc
imul
int3
cltd
mov
jp
xchg
mov
leave
inc
dec
jl
test
std
nop
dec
mov
ret
rcrb
scas
pop
pop
movl
stos
fistps
lahf
xchg
mov
mov
push
ret
xchg
in
and
push
in
mov
pop
jnp
sbb
pusha
fidivrl
daa
cld
pop
shll
jo
movsl
xchg
xor
inc
das
cmpl
fdivl
fsubs
andb
rorl
mov
dec
dec
add
pop
lea
testl
push
xchg
xchg
andl
xchg
ret
xchg
xor
cmp
pop
xlat
push
arpl
sbb
ficoms
imul
add
out
pop
nop
rol
jb
cltd
cmp
mov
xor
rcrl
loopne
inc
incl
or
sub
and
mov
mov
out
in
mov
sti
pop
dec
cmpb
xor
outsb
sub
cmpsb
or
addr16
cli
push
pop
movsb
in
inc
inc
jnp
and
push
add
push
xor
bound
int
insl
arpl
jp
fst
xchg
jl
sbb
rorl
fnsave
outsb
ds
fmuls
mov
mov
rorb
xchg
pop
mov
ja
mov
or
std
mov
inc
stc
jle
xchg
mov
and
ds
repz
test
lds
daa
std
insb
inc
push
adc
lea
inc
xlat
shll
or
cmp
es
imul
mov
jb
or
in
pop
int3
lahf
xlat
push
loop
ret
ret
shll
cld
lods
pop
jg
fcmovb
cmpb
add
mov
fs
cmpsl
in
jns
daa
jnp
mov
fucomp
sub
jle
mov
fidivrs
xor
fdivs
aaa
mov
and
lods
dec
fsubs
hlt
sub
cs
jmp
ret
insb
sbb
scas
inc
mov
and
dec
sub
enter
lret
mov
neg
test
ficoms
movsl
cmp
lea
mov
sbb
sub
filds
push
sbb
in
jecxz
cmp
mov
add
mov
jmp
cltd
in
cmp
into
sub
fiadds
ljmp
add
fdivs
popa
xchg
push
pop
sbb
out
mov
push
adc
fsubrp
cli
adc
pop
push
aam
stos
mov
fisubrl
jo
push
and
rcl
xor
push
xor
mov
lahf
inc
pop
xchg
mov
sbb
enter
sti
xor
fldcw
mov
jg
imul
mov
push
aas
mov
mull
push
pushf
hlt
cmp
cltd
das
push
jg
adc
adc
cmp
mov
aad
fucomp
pop
add
sub
dec
sbb
js
dec
cli
mov
leave
push
sub
fmuls
gs
ss
and
out
mov
dec
int3
mov
cltd
xorb
test
adc
pop
lds
xchg
addr16
lock
outsb
mov
int
in
add
lret
mov
or
push
ret
pop
out
test
lret
push
xor
mov
iret
or
fucom
insb
insb
aad
stc
adc
icebp
outsl
xor
movsl
rolb
mov
cmp
jl
mov
push
add
or
adc
ljmp
ja
jnp
test
push
andl
cmpl
test
fisubrl
add
scas
mov
dec
jb
rorb
in
scas
cmp
int3
out
pop
out
dec
or
mov
repz
ljmp
inc
mov
subl
les
repz
push
mov
jle
and
rorl
sbb
cmp
pop
push
into
fst
lods
mov
jmp
xchg
mov
insl
repnz
insb
test
add
pop
dec
xor
inc
in
jecxz
and
mov
mov
orb
push
insb
mov
inc
or
adc
lret
mov
into
pusha
pusha
ljmp
push
nop
jge
popf
shl
mov
add
cmpb
fidivrl
fistpl
pop
inc
dec
and
out
jne
push
sub
cmpsl
fsubl
jo
jecxz
or
or
lret
notl
sbb
add
test
inc
pop
xchg
sti
mov
imul
sub
push
push
mov
test
in
test
hlt
mov
mov
jb
sbb
dec
adc
loope
out
xchg
or
fstps
shll
xlat
xchg
mov
popa
jnp
xchg
lods
lea
xchg
pop
add
in
in
or
pop
push
aad
scas
adc
cwtl
sbb
and
sahf
xor
cmc
mov
mov
bound
aaa
test
sub
mov
pop
insl
xor
call
add
mov
push
push
lods
popa
les
mov
xchg
mov
mov
dec
roll
adc
pop
in
sbb
addr16
enter
arpl
iret
push
sub
sbb
shll
xchg
mov
mov
pop
xchg
xor
add
sub
lods
and
mov
jo
add
aam
fsub
push
insl
cmp
fisttps
push
mull
test
mov
or
mov
insb
aas
call
or
std
push
aas
mov
and
cmpl
in
cmp
stc
or
or
dec
ret
out
cmp
inc
repnz
sbb
push
outsb
adc
fadds
inc
inc
sti
add
int3
out
mov
mov
or
mov
fwait
cmp
or
bound
dec
aad
sahf
push
inc
imul
sbbb
das
xor
and
jg
and
and
repnz
ja
mov
mov
sub
stc
negb
adcb
cmp
ficoml
gs
inc
in
adc
sbb
or
into
rolb
mov
dec
cmp
gs
adc
std
sti
and
ss
xor
xchg
mov
idivl
cmpsl
enter
pop
mov
sbb
outsb
in
sbb
icebp
xlat
adcb
negl
ds
dec
inc
dec
popa
jbe
lock
push
insb
add
xor
mov
cmp
divb
sarl
push
xchg
or
daa
int
cmp
jmp
movsb
pushl
enter
and
xchg
sub
jg
outsb
xor
fimull
call
sub
fistps
cli
inc
fldl
add
stos
icebp
lods
sbb
fldt
insl
pop
xor
fnstenv
add
orb
outsl
cld
imul
inc
outsl
cmp
add
add
dec
test
test
add
pop
push
xchg
push
mov
data16
daa
push
adc
xchg
dec
dec
popa
xchg
adc
mov
lret
std
push
jl
bound
inc
lcall
stos
out
repz
jecxz
lods
pop
mov
loopne
or
ss
add
inc
lods
adc
xchg
mov
and
popa
fildl
pushf
pushf
rclb
sbb
rclb
or
repz
xor
or
lods
jns
or
in
inc
mov
or
mov
hlt
sub
lds
sarb
cmp
cmp
mov
loopne
shrl
inc
jns
cli
movsl
lds
insb
and
adc
les
outsb
pop
xor
xor
pop
icebp
ret
pop
jmp
repz
movsb
mov
shl
insb
das
mov
loop
jl
sbb
sahf
push
inc
xchg
divb
aam
dec
lahf
add
jp
xchg
fnsave
aam
imul
nop
cltd
dec
stos
test
ja
jmp
pop
leave
push
int
adc
dec
jge
mov
int
notl
add
mov
xchg
aad
jno
test
fmuls
call
push
mov
ljmp
cmp
js
out
or
adc
sbb
adc
insl
pop
cld
cmp
js
jne
xor
push
pop
inc
fsubrl
mov
call
xor
cmpsb
jmp
ljmp
mov
cmpsl
dec
or
xchg
cld
xchg
jo
jbe
fs
lods
push
dec
lcall
ret
sbbb
popa
jge
mov
movsb
xchg
jno
xor
lea
xchg
pushl
cmp
xchg
pop
lcall
sub
lods
mov
xor
add
dec
adc
xchg
popf
insl
xor
pop
shlb
add
addr16
ficomps
in
testb
movsb
andb
int
inc
cmp
insl
push
push
pushf
aam
cld
in
stos
inc
xchg
jmp
inc
add
js
pop
stos
lret
cli
ror
int3
push
shll
stos
daa
subl
fisttpll
pop
xchg
sub
push
in
dec
or
sti
dec
lods
jae
jnp
dec
ds
mov
jg
sub
enter
push
xor
out
mov
mov
add
jge
xor
popf
gs
and
add
inc
imul
cs
and
scas
jnp
popa
fcoml
push
popa
mov
aas
jmp
stos
data16
enter
inc
mov
xchg
out
adc
out
pop
out
call
add
sbb
add
or
jg
mov
xchg
lahf
push
adc
stos
imul
int3
sub
mov
sub
mov
int3
jge
sti
lret
leave
mov
lea
enter
adc
or
lret
xor
inc
pop
xchg
jl
lret
hlt
loop
js,pt
mov
lock
push
xchg
pop
push
mov
test
dec
push
mov
adc
add
daa
movsl
inc
inc
inc
idivl
mov
cmc
sub
lret
cld
in
mov
jp
cltd
inc
sub
add
sub
ja
sub
add
fcomip
push
sub
std
int3
les
into
icebp
and
or
insl
jne
out
cmp
cmc
sbb
sub
sbb
pop
out
pop
movsb
in
sub
iret
inc
lea
loope
and
sub
push
imul
add
inc
mov
xor
stos
bound
jo
pop
dec
test
scas
push
cld
jl
push
cmpsl
sub
add
rol
xlat
andb
enter
lods
fs
jnp
std
mov
sarb
fdivrl
dec
xor
hlt
and
mov
daa
push
scas
mov
xor
std
fildll
andl
test
lds
dec
fnsave
test
add
std
les
addr16
push
xchg
dec
test
out
fidivrs
mov
xor
jg,pn
scas
jbe
mov
fwait
pop
cmpsl
sub
xor
sub
cmp
or
lret
push
and
test
push
jecxz
call
nop
ficoml
mov
pop
std
push
push
adc
ja
mov
loop
mov
leave
mov
pushf
hlt
daa
arpl
add
hlt
inc
mov
add
cltd
or
cmc
xor
fisttpl
and
loopne
pop
dec
mov
sub
and
push
push
push
cmpsl
adc
jnp
scas
and
mov
push
mov
pop
insb
pop
test
and
xor
sarb
adc
push
cmp
ss
inc
or
imul
nop
shr
stc
ljmp
xchg
jnp
jae
lock
cmp
mov
jae
jle
cli
fisttpl
arpl
jbe
adc
fnsave
syscall
push
addr16
ret
dec
xchg
pop
xchg
lcall
dec
dec
xor
aas
push
inc
jno
xchg
mov
and
inc
lods
sbb
mov
jle
sahf
stos
or
mov
out
inc
add
push
sub
fisubs
sub
cmp
fildl
push
mov
loopne
cmpsl
scas
xor
push
cmp
cmp
ds
enter
ret
das
dec
mov
sbb
cmp
push
cmp
pop
int
mov
out
es
fnsave
xor
xchg
les
iretw
into
fwait
pusha
jo
loopne
or
scas
xor
popa
cmc
rorl
cmp
loope
push
bound
cmp
cwtl
xchg
push
ret
rcl
ds
push
test
dec
gs
insl
inc
sbb
xchg
inc
into
mov
push
movb
fyl2x
mov
fucomip
and
stos
dec
cmp
mov
in
test
cmpsl
out
mov
sbb
sbb
std
mov
int
xchg
fnstsw
loopne
lcall
enter
push
mov
ret
push
xor
sti
push
roll
sub
ss
repnz
add
fs
sub
lcall
mov
dec
test
xchg
cmc
push
and
aam
mov
jl
dec
mov
xor
mov
mov
xchg
add
out
sub
lahf
pop
jnp
xor
int3
or
iret
dec
movsb
adc
stos
cmp
push
push
testb
fistps
mov
loop
negl
icebp
and
mov
xor
lret
pop
or
push
inc
mov
cltd
add
aaa
jmp
add
push
inc
stos
push
add
pusha
jae
add
loope
shrl
mov
inc
test
jbe
shrb
mov
adc
dec
fmul
test
cld
decl
adc
xchg
adc
and
ljmp
mov
movsb
or
sub
mov
sbb
and
cmp
fwait
call
mov
das
in
mov
test
loope
leave
inc
sti
testl
cmp
jge
int
push
push
es
setge
or
out
dec
hlt
aaa
xchg
sub
enter
and
int
test
ljmp
mov
jge
cltd
jecxz
popf
push
jno
xor
xor
jl
mov
dec
stc
dec
dec
ja
lea
cmp
ss
mov
dec
add
mov
pushf
out
data16
mov
mov
inc
sbb
xchg
loop
js
sub
stos
lods
out
add
and
popf
les
cld
outsl
or
inc
lcall
sbb
fdivrs
js
and
jle
pusha
inc
pop
icebp
mov
push
dec
dec
cmpsl
inc
mov
pop
mov
adc
adc
mov
inc
mov
pushf
movsb
mov
fiaddl
clc
sbb
sahf
add
pop
mov
ret
cld
sub
fiaddl
test
push
test
mov
js
xchg
jo
sub
repz
mov
cmpsl
test
add
inc
adc
clc
lods
pop
hlt
sar
pop
jne
jbe
iret
daa
in
cld
test
pop
jnp
in
mov
arpl
cwtl
push
testl
in
cli
in
xor
into
cwtl
or
imul
dec
inc
fmuls
repz
mov
rolb
cmp
mov
addr16
cmp
pop
fstp
push
mov
lret
and
xchg
pushl
rol
pop
push
cmp
out
and
cs
cmp
mov
push
xchg
cltd
xor
lcall
push
sub
mov
jno
mov
mov
push
add
xor
add
xchg
add
loop
in
mov
push
push
nop
add
mov
stos
jmp
push
aas
xchg
push
mov
ljmp
jns
mov
subl
and
call
pop
inc
dec
pop
ds
fdivr
ss
es
repz
aas
idivl
push
das
int3
in
xor
test
in
mov
out
adc
xlat
cltd
in
inc
ss
pop
mov
sti
popa
call
push
out
xchg
mov
mov
into
sbb
cwtl
sub
hlt
arpl
sbb
stos
icebp
mov
mov
push
sub
push
add
cmp
ret
roll
sbb
sbb
mov
leave
lock
or
icebp
ret
cmp
pop
shr
sub
inc
push
jo
mov
dec
imull
je
or
rcl
jecxz
xlat
movsb
data16
outsb
mov
and
call
test
js
pop
aas
xor
xchg
fcmovb
xor
mov
mov
repz
push
and
cmpb
ficoml
dec
pop
clc
push
push
add
xor
push
cmp
fwait
das
in
push
loopne
fildll
pop
mov
cld
or
cmpsl
push
and
mov
xlat
insb
data16
dec
in
aad
xor
jmp
push
addr16
data16
xchg
xchg
gs
dec
mov
notl
int
mov
sbb
push
aaa
mov
push
mov
push
cmp
sbb
cmp
mov
xchg
inc
loopne
jecxz
int
lret
jno
in
out
loop
xor
push
ror
jmp
sbb
cltd
repz
push
fisttps
xorl
adc
mov
jp
testb
cs
xchg
jmp
fildl
mov
fimull
cmp
add
xor
loopne
movnti
scas
data16
fwait
enter
pop
add
out
fcomi
call
push
xchg
sub
xor
loop
and
pushf
adc
insl
sub
and
shrl
cmp
out
idiv
jecxz
loop
inc
int
cli
inc
push
push
in
pop
xchg
lcall
xchg
xchg
scas
loope
inc
jae
nop
adc
mov
mov
out
ret
lcall
out
enter
push
and
sahf
adc
cltd
jo
sbb
dec
lahf
es
sbbl
lock
lods
or
cmpsb
rcrb
xchg
insb
cs
and
push
roll
mov
mov
movsb
sub
loopne
imul
mov
sbb
cwtl
mov
inc
lock
dec
out
push
into
aam
gs
out
in
int3
popl
repnz
in
lcall
adc
sub
fcoml
imul
fsubl
inc
out
cmp
adc
cmp
outsb
xchg
in
dec
pushl
xor
sub
jg
add
and
xlat
or
int
rolb
xor
xchg
pop
movsb
ss
lds
out
inc
and
leave
prefetch
scas
inc
jbe
or
pop
hlt
push
outsb
out
adc
adc
in
cmp
sub
mov
clc
pop
out
sub
fisttps
cmp
lahf
xchg
stc
jae
jg
movsl
and
inc
out
jecxz
mov
test
lods
pop
and
pop
push
cmp
test
data16
lret
pop
pop
scas
scas
das
xor
mov
ret
movb
mov
mov
inc
inc
into
inc
dec
movsb
and
jb
inc
insl
loop
pop
inc
hlt
sub
in
inc
cmp
adc
xchg
js
lcall
mov
mov
leave
mov
mov
lret
addb
and
mov
das
mov
push
rorl
mov
and
mov
pop
es
stos
inc
mov
cmp
repz
push
sbb
lods
lea
out
jle
in
loope
push
cmpsb
mov
rcll
sbb
ss
xor
inc
popf
jnp
add
je
push
nop
add
sub
pop
mov
insb
fldcw
sub
inc
cmp
mov
inc
inc
arpl
mov
out
jno
test
adc
jl,pn
push
ret
out
and
pop
stos
xchg
sub
xchg
adc
cwtl
or
dec
mov
fidivl
mov
sahf
inc
or
and
mov
out
dec
enter
in
xchg
cmpsb
ret
jg
cmpsl
push
cmp
adc
add
mov
sbb
push
jnp
test
sbb
or
stos
cmpsb
dec
adc
mov
ds
mov
inc
jmp
jmp
inc
popf
mov
fs
mov
repnz
mov
in
xchg
pusha
dec
push
mov
or
je
dec
pop
add
inc
and
mov
lret
adc
jns
in
adc
enter
ss
pop
loope
or
lods
or
fwait
push
mov
fsubrs
push
mov
lods
int3
mov
pop
out
movsl
cmpl
clc
fnsave
and
push
les
xchg
jg
push
xlat
repnz
jne
or
dec
mov
in
dec
mov
aaa
repz
mov
push
inc
cltd
iret
mov
insl
cltd
push
sub
dec
ret
cmp
negb
jp
mov
das
test
leave
mov
mov
mov
push
sub
push
daa
ja
nop
push
sti
sub
jb
mov
inc
push
add
pop
test
fcmovnbe
mov
adc
sub
cltd
mov
xchg
jmp
pop
xchg
mov
or
enter
jbe
add
and
pop
or
jo
pushf
pusha
dec
repz
cwtl
shll
aaa
jns
xor
jnp
xchg
mov
mov
cmp
mov
inc
stos
sbb
mov
push
or
fldt
add
sub
dec
inc
add
add
ds
inc
inc
call
clc
xchg
bts
add
lock
jbe
push
xchg
clc
mov
push
andb
rolb
outsl
test
ret
add
or
test
decb
std
cltd
ficomps
xchg
mov
push
push
fsubrl
mov
jae
push
add
xor
test
pushf
mov
pop
mov
inc
mov
sub
insl
out
add
and
mov
into
mov
adc
inc
sbb
cmpb
mov
xchg
nop
ret
inc
xchg
aas
fldl
push
push
ret
rolb
add
and
pcmpeqb
adc
sub
pushf
ds
or
push
inc
dec
push
loope
inc
xchg
imul
push
or
cmpsb
and
mov
xchg
imul
and
fucomi
pushf
jl
pushf
icebp
lgs
adc
leave
addr16
mov
movsb
add
or
sbb
add
and
arpl
imul
and
push
pop
notl
es
in
xchg
mov
and
fistpl
inc
mov
adc
enter
jbe
push
fidivs
pop
mov
xchg
add
adcl
pop
fcmovu
cmp
push
or
clc
pop
jge
push
xor
pushf
popa
jo
mov
mov
repnz
cwtl
pushf
mov
es
sub
mov
aad
repnz
mov
jb
mov
pop
push
dec
dec
aaa
cmp
cs
aad
test
pop
leave
sub
mov
sub
sbb
pop
xor
xchg
push
bound
and
mov
mov
ret
pop
mov
sbb
sbb
cmp
iret
mov
jno
add
in
dec
push
cmpsl
mov
push
loopne
mov
fisubrl
mov
cltd
fstl
in
testb
add
inc
pop
or
add
fistpl
dec
jno
inc
cmpsl
jmp
and
test
sub
adc
xchg
or
xchg
mov
pop
repz
push
push
fs
loope
or
dec
mov
pop
cld
outsl
add
xorb
cmp
and
cmp
shlb
push
and
or
xor
sti
in
xchg
pop
hlt
into
into
jmp
pop
cmp
sar
rcrb
clc
rclb
loop
addr16
dec
sarb
movsb
fwait
jne
adc
xchg
outsb
cmp
push
out
bnd
testl
cmp
in
xchg
cltd
sub
mov
fnstenv
aad
out
mov
push
jecxz
push
pop
pop
lods
hlt
lock
lcall
xor
xor
push
jmp
adc
jns
or
or
xorb
scas
in
cltd
sub
push
xor
mov
mov
jle
ljmp
cmpsb
mov
jbe
xor
icebp
mov
sbbb
fnstsw
jp
or
sub
cs
and
lahf
cmc
imul
mov
ret
int
ret
cwtl
jno
outsb
mov
jno
test
lds
pop
xchg
and
mov
cmpsb
inc
jbe
pop
push
xchg
cmp
ja
movsl
pop
int3
test
jnp
adc
ss
inc
jae
arpl
cmpsb
dec
cmp
and
loop
jp
push
mov
bound
dec
xchg
insl
or
loope
mov
js
fiadds
sbbl
in
loope
inc
js
xchg
mov
rcll
cli
lret
cld
sbb
cmp
mov
ljmp
call
dec
adc
inc
insl
ret
add
fs
mov
rcrl
dec
movsb
adc
shlb
enter
mov
jg
stos
js
sbb
int3
das
nop
push
test
xchg
mov
lret
sbb
push
mov
mov
xor
push
fcoml
sub
sahf
int3
js
inc
mov
xchg
xorl
shll
pop
mov
out
in
inc
dec
sub
lea
sbb
aaa
or
mov
outsb
xchg
or
push
cmpb
cmp
outsl
into
daa
out
je
aam
lock
lods
cmp
lcall
cli
outsl
cmp
cmp
aaa
mov
cli
cmpsl
push
popa
into
decb
or
and
andl
inc
xchg
push
push
bound
outsb
scas
sbb
aas
xlat
es
sbbl
add
mov
jbe
adc
rcrb
adc
in
pinsrw
and
mov
and
cmp
or
movsb
adcl
cmpsb
sbb
xchg
lods
clc
pop
icebp
repnz
adc
jb
lahf
jp
push
add
sti
popf
into
xchg
mov
mov
jp
jo
loopne
jb
icebp
scas
push
addr16
mov
mov
test
pop
or
callw
xchg
inc
mov
repnz
fiaddl
push
into
pop
call
je
xchg
ja
stos
out
aam
in
cmp
or
sub
mov
rclb
outsb
push
outsl
mov
scas
jae
ja
js
lcall
push
ucomiss
cltd
inc
hlt
dec
mov
push
pop
in
mov
je
jl
mov
fsubrl
data16
jne
cmpsl
jl
in
cmpsl
jl
sub
test
lods
jb
push
jl
jnp
and
setno
dec
in
inc
outsb
push
loop
push
les
sub
add
insl
in
mov
mov
fildl
xchg
xchg
adc
repz
push
and
mov
test
xor
fnstsw
rol
dec
fwait
mov
fdivrp
int
jb
in
mov
pop
cmp
fwait
mov
sub
sbb
dec
fwait
ret
jne
out
push
xor
call
shll
mov
mov
push
jns
addr16
lds
or
sbb
inc
cmp
std
divb
hlt
fldl
pop
scas
les
sahf
or
in
xor
imulb
out
or
jno
mov
sub
ljmp
add
fadd
cmp
xor
ljmp
mov
jp
shlb
stos
pushl
push
repz
sub
xor
lods
leave
mov
in
jo
cmp
test
inc
aam
cmp
repnz
shlb
push
movsb
es
je
push
mov
inc
daa
mov
imul
clc
fwait
pop
out
shlb
std
mov
add
add
adc
pop
ja
jae
dec
xchg
pop
in
mov
rcrb
testw
adc
aad
jl
cmc
sbb
repz
fs
test
adc
lcall
xor
dec
daa
dec
xchg
push
ss
repnz
shlb
mov
mov
inc
pop
sti
mov
aaa
mov
add
dec
inc
mov
and
and
sahf
mov
jecxz
rsm
or
imul
cmp
inc
push
hlt
mov
mov
or
ret
lods
je
sbb
adc
xlat
pop
pop
insl
jp
shr
fisubl
jg
aad
cmp
cs
cmpsl
repnz
je
stos
mov
das
das
xchg
iret
mov
xchg
int
insl
or
pop
pop
ss
xor
push
push
sbb
push
cmpsb
scas
pop
int3
scas
mov
jl
insb
in
pushf
cmp
fisttps
xchg
aaa
out
out
xchg
inc
data16
xchg
mov
rcrb
stos
add
loope,pt
mov
inc
mov
stos
mulb
shlb
mov
mov
mov
fldcw
push
xchg
jno
pop
push
pusha
sub
repnz
lea
lret
test
mov
loopne
mov
inc
mov
daa
lret
push
icebp
pop
or
ljmp
mov
insb
push
mov
cmp
jge
adc
dec
pop
jno
lret
pusha
push
bound
mov
mov
cmpsb
add
sahf
sub
mov
sub
sti
adc
loop
mov
mov
mov
inc
inc
xlat
hlt
sbbl
push
mov
sub
jnp
jp
sahf
pop
mov
loopne
imul
adc
xor
xchg
les
scas
je
xchg
add
loop
subl
dec
or
cmp
inc
test
push
push
andl
out
imul
mov
sub
cmc
sbb
fisttps
cmp
mov
or
mov
in
pop
cli
mov
iret
xor
ljmp
mov
movsb
adc
loop
jge,pn
sub
mov
jle
dec
scas
xlat
insl
aad
sub
push
dec
add
jbe
cmp
imul
mov
cmp
dec
test
xchg
mov
into
mov
das
xorb
jle
jne
in
sub
fiaddl
rcrl
mov
jmp
data16
jo
mov
insb
inc
sub
and
inc
jp
lret
stos
xchg
mov
mov
rcr
lcall
js
and
iret
cld
jb
jnp
fisubs
in
jle
sbb
rolb
daa
push
daa
mov
cmp
repz
mov
jne
lret
fldl
mov
mov
pop
mov
aaa
add
sbb
pop
dec
mov
nop
cmpsl
mov
fistps
or
in
adc
sub
xchg
fs
fs
push
sbbl
das
inc
cmp
arpl
cmpsl
xor
adc
mov
adcb
sub
iret
pop
add
jge
call
hlt
stos
rcrb
mov
stos
into
jecxz
sub
jb
xor
pop
or
test
dec
xor
xchg
cld
fs
int
insl
xor
pusha
ja
mov
adc
or
jmp
arpl
lret
dec
inc
push
repz
imul
cltd
add
mov
or
repnz
pop
mov
popf
lcall
push
dec
scas
cld
jmp
dec
test
pop
mov
imulb
xor
mov
jno
sti
xchg
add
xor
mov
jmp
out
daa
loopne
test
xor
inc
cltd
clc
jb
push
aas
lock
or
outsb
ret
lods
loopne
adc
movsb
push
jp
daa
push
inc
out
cli
xlat
into
movsl
add
xchg
jbe
enter
jmp
mov
addr16
or
dec
pop
cmp
inc
lret
jmp
and
std
pop
xchg
jne
lcall
adc
jnp
movsb
mov
xchg
dec
ss
loope
subl
mov
les
inc
mov
clc
mov
daa
sbb
in
lret
jno
xor
inc
dec
rolb
incb
cmp
repz
mov
xchg
roll
lods
mov
gs
dec
sahf
lock
insb
push
mov
inc
les
lds
fbstp
pop
pusha
gs
arpl
scas
push
xchg
push
mov
xchg
mov
add
mov
movsl
xor
jae
inc
ss
sbb
mov
dec
inc
das
mov
notb
loope
pop
sbb
mov
mov
rol
sbb
sub
cmpl
inc
test
xlat
mov
int
add
inc
jb
cmpsl
imul
lret
xchg
push
jg
mov
xchg
mov
lret
mov
fimull
add
jg
dec
stos
mov
fildll
inc
in
ds
xor
push
sub
aas
and
arpl
jge
sbb
lcall
mov
gs
mov
add
popf
lret
sbb
and
push
rclb
inc
mov
pop
sbb
cmpsb
rorl
push
jbe
cmp
aad
and
adc
imul
adc
test
ss
xlat
fucomp
addr16
outsl
rolb
jno
sbbb
jl
shl
sbb
fimuls
popa
in
popf
dec
sbb
inc
or
push
add
fiadds
es
inc
out
mov
bound
mov
sub
movsb
imul
outsb
cltd
into
pop
insl
sti
jle
lock
sbb
dec
icebp
imul
int3
adc
mov
call
mov
mov
enter
in
mov
fidivrs
jg
popf
push
push
shl
mov
inc
mov
or
jo
sub
repz
outsb
sub
lret
and
xchg
push
lret
loope
into
mov
adc
sahf
test
repnz
push
popa
jno
jae
pop
mov
popf
es
rol
push
es
xchg
jl
adc
or
insl
dec
jbe
push
pop
mov
mov
add
push
dec
shrb
das
xchg
jne
xchg
push
xor
popa
cmp
mov
mov
setne
out
and
and
shll
push
mov
cmp
xchg
dec
mov
test
aaa
adc
lods
dec
pushf
imul
in
mov
gs
in
sti
or
aam
stc
mov
lds
movsb
sbb
les
out
lock
adc
stos
sarb
jns
shl
outsl
pop
inc
jns
mov
push
or
out
push
adc
scas
insl
add
sbb
push
outsl
fs
dec
sbb
mov
ret
pop
int3
inc
js
jmp
enter
add
and
sbb
scas
mov
sbb
pop
cmp
or
mov
mov
test
cmp
jmp
movhps
add
jo
xchg
testb
imul
and
ret
dec
mov
add
adc
push
mov
mov
scas
push
pop
aad
stos
cmpsb
inc
notb
pop
adc
mov
cmp
in
add
xor
mov
jnp
jmp
pop
jp
jge
fstl
cltd
cmp
xor
xorb
push
mov
lods
jge
adc
jecxz
cmpsb
jbe
aam
pop
pop
mov
addr16
shl
push
and
push
lock
mov
leave
out
stc
mov
add
xor
cmp
bound
js
add
mov
push
fcoml
mov
push
daa
push
stos
aas
fwait
popf
xchg
add
pop
out
push
add
out
adc
push
pushf
shrb
mov
out
mov
ret
scas
out
pop
ret
fcoml
fwait
setne
mov
movsl
dec
leave
sldt
xchg
push
test
dec
popf
movb
loopne
jmp
iret
pop
jbe
data16
lret
lock
mov
sub
hlt
add
bound
hlt
mov
iret
jae
push
stos
sar
xchg
lahf
push
pop
push
jecxz
dec
and
mov
outsb
mov
popf
adc
fldt
jge
push
xchg
fcmovne
int3
bound
or
mov
jnp
ret
xchg
cld
lea
jp
ss
sbb
adc
sub
fs
add
das
cld
xlat
faddl
and
les
int3
cwtl
aam
ss
mov
mov
cwtl
in
pop
fstps
cmp
add
ljmp
jmp
aad
mov
arpl
outsl
or
dec
repnz
shrb
inc
in
insb
xor
adc
xor
insl
mov
shlb
js
push
xchg
jb
add
jns
sub
enter
out
xchg
subb
imul
lret
lods
test
call
xchg
pop
pop
inc
fnsave
jnp
idivl
adc
das
xchg
sub
push
mov
data16
xchg
aam
iret
dec
jg
mov
std
outsb
mov
push
ss
dec
daa
push
xor
or
lock
and
stos
mov
lahf
shlb
cmp
invlpg
sti
dec
imulb
fbstp
jle
cmp
pop
lock
mov
or
out
adc
insl
popf
jbe
rcll
cmp
cld
pop
push
cmp
or
cli
mov
push
cltd
out
gs
and
ljmp
cs
push
mov
fistpl
aaa
sub
shll
pop
mov
xor
test
or
mov
dec
inc
sbb
push
mov
or
fs
or
lahf
jecxz
pusha
cli
add
cli
mov
iret
sub
ljmp
ret
dec
lret
add
cwtl
jnp
in
test
cmp
push
jecxz
mov
add
lret
movsl
scas
popa
pop
push
adc
sbb
sahf
ljmp
cmp
mov
repnz
repz
mov
and
mov
shl
rcll
loopne
stos
scas
dec
les
sub
daa
imul
loope
fiaddl
mov
push
stos
mov
fnstsw
xchg
dec
scas
iret
push
pop
push
mov
xchg
push
xchg
fldt
push
lret
cld
je
outsl
lea
and
movsb
sub
ljmp
je
test
xchg
fadd
stos
jb
xchg
out
xor
dec
push
push
lods
dec
add
mov
out
pop
loop
mov
pop
addl
mov
mov
xor
add
pusha
adc
fsubl
repnz
xor
dec
push
leave
sub
out
daa
fwait
or
fildll
cli
or
outsl
push
mov
sbb
out
jbe
push
subl
mov
mov
mov
xor
lahf
xlat
sti
pop
lds
jne
ljmp
xchg
je
fnstsw
cltd
ja
stc
push
jmp
frstor
sti
sti
fmull
mov
adc
in
hlt
and
push
add
or
dec
adc
sub
push
lods
js
fnstcw
shll
ret
xchg
sub
jno
xor
iret
aaa
push
and
stos
ret
jle
cwtl
daa
push
sbb
scas
adc
pop
hlt
scas
add
and
scas
and
fcoml
sbb
inc
leave
dec
inc
mov
sahf
in
cmpsb
ds
dec
jno
int3
push
stc
pop
jmp
into
aam
int
push
dec
or
push
insb
js
loopne
cmp
icebp
cmpsb
fbld
addr16
sub
scas
add
mov
inc
mov
pop
rcl
es
out
or
cmp
push
idivb
dec
out
dec
repz
mov
add
mov
adc
les
lods
sbb
sahf
pop
pop
mov
push
daa
in
lcall
pop
mov
jmp
jae
dec
sarb
popa
push
jmp
mov
xor
push
pop
outsl
adc
sub
test
adc
mov
cmp
insb
clc
jmp
pop
jmp
pop
in
sub
push
add
sbb
sarl
push
aaa
adc
push
out
ljmp
sub
cmp
in
add
add
imul
jp
xlat
cmp
pop
xor
lock
adc
arpl
inc
ja
xor
mov
sub
into
sbb
scas
jns
ds
mov
arpl
mov
mov
cmp
sbb
jmp
lea
ja
sbb
pop
jp
or
add
div
push
aam
aas
leave
out
outsb
fisttpll
cmc
mov
scas
aad
mov
mov
shlb
ja
cwtl
adc
mov
add
test
push
ds
push
add
jp
mov
inc
scas
cmp
jno
and
fmulp
je
pop
stos
pop
sub
stos
les
shr
aad
push
aas
adc
xor
aad
testl
imul
push
ljmp
xor
sub
loop
movsl
fdivrs
imul
call
popf
xchg
mov
out
loop
add
dec
mov
in
cmp
orl
jge
sbb
dec
adc
cs
jnp
roll
or
cmp
push
push
loope
imul
rcrb
xor
icebp
cli
insb
xor
and
orb
jb
roll
sbb
repnz
scas
subb
xor
adc
jbe
lret
lahf
outsb
dec
inc
scas
out
xor
xor
aas
push
mov
inc
in
and
jns
xor
mov
inc
dec
mov
cs
flds
and
mov
lods
daa
adc
popl
mov
cmp
fisttps
and
outsl
ljmp
iret
je
test
lcall
into
pop
pusha
fcmovnu
sbb
aad
sahf
and
mov
insl
xchg
adc
fbld
ljmp
add
insl
call
xchg
sub
mov
cwtl
cli
pushf
bound
mov
xchg
lret
jnp
cmp
sbb
inc
test
xorl
mov
lahf
mov
iret
int
xor
mov
xchg
andl
or
popf
mov
mov
mov
outsb
and
nop
ja
into
push
or
mov
dec
outsl
xor
or
cmpsb
addr16
sbb
flds
mov
dec
xchg
imul
pushf
push
or
divl
dec
repz
int
fmulp
push
fwait
insl
movsb
adc
sti
cmpsb
stos
in
lret
imull
jle
icebp
xchg
fwait
push
adc
mov
das
out
lock
and
testw
xchg
mov
das
push
mov
call
je
test
sub
in
mov
dec
sub
inc
and
sub
mov
adc
mov
jl
repz
loope
addl
jbe
pop
dec
popa
push
mov
push
push
mov
xor
adc
adc
xchg
pusha
pop
push
rcr
sti
push
ret
push
jae
sahf
in
lcall
ljmp
inc
movsl
and
out
cwtl
cmp
sbb
dec
inc
add
or
pop
dec
and
push
inc
pop
test
nop
popa
pop
movaps
test
ss
cmp
pop
inc
lods
imulb
mov
insb
jne
add
fcoml
mov
aad
shrl
arpl
xchg
test
jnp
push
enter
mov
jl
and
movsb
sbb
lret
test
inc
jle
add
inc
std
cmc
xor
sbb
mov
icebp
xor
in
jne
mov
dec
push
inc
pop
sub
dec
mov
jge
nop
pop
fwait
ret
fwait
push
fcoml
mov
pop
cmp
sbb
mov
xchg
fnstsw
xchg
loopne
subl
ret
jns
dec
jb
daa
arpl
xor
lds
data16
repnz
mov
jbe
lods
xchg
push
inc
add
inc
mov
dec
enter
cmc
mov
outsb
inc
mov
pop
sub
scas
cmp
aad
pusha
pusha
lds
lods
cmpsb
lea
ljmp
mov
inc
or
mov
push
sbb
pushf
inc
cmp
repnz
subb
dec
andl
mov
imul
out
adc
or
arpl
push
js
and
xor
mov
stos
das
xchg
rclb
push
inc
sbb
imul
out
cmp
sti
stos
push
fdivl
push
imul
sbb
pop
or
adc
clc
scas
lock
mov
fnsave
fprem
push
in
lahf
adc
scas
cs
and
cmc
pop
xor
aas
bound
pop
cmp
jmp
test
lret
jg
and
cmc
imul
ss
lahf
cwtl
std
mov
xlat
jge
jno
xlat
in
cmp
sbb
push
out
das
jae
or
ds
jmp
or
pusha
lret
mov
pop
lahf
and
fld
mov
add
sbb
sti
lcall
sbb
mov
jbe
xor
sub
xorb
popl
mov
in
sbb
mov
in
int3
test
push
imul
jmp
mov
popa
rcrb
push
insb
xchg
cld
rcr
incb
aad
or
xor
jmp
cltd
xor
cmp
inc
scas
repnz
lea
adc
xor
dec
or
js
dec
sbb
lret
loop
call
xor
inc
or
dec
fs
xchg
or
jge
ja
pop
mov
xchg
sbb
movsb
arpl
sub
cmp
data16
mov
rclb
in
sub
inc
xchg
inc
adc
pop
xor
cmp
push
mov
mov
sub
jge
ret
add
jnp
leave
xor
cs
sar
stc
cltd
xchg
es
sbb
fisttps
out
test
jnp
mov
xchg
dec
push
call
lods
or
gs
xchg
mov
enter
add
or
fsts
sub
iret
loope
test
jno
add
jo
stos
mov
lret
or
cltd
fcmove
scas
mov
icebp
adc
inc
andb
cmpl
iret
jge
subl
mov
insl
mov
add
sub
push
xor
pop
cmp
dec
and
out
inc
negb
loop
jo
repnz
fadds
cld
ss
or
aam
lods
push
push
sub
test
outsl
gs
mov
into
mov
fs
sbb
repnz
arpl
movsl
push
inc
in
sahf
add
out
pop
dec
data16
bound
mov
and
leave
xchg
clc
call
inc
xchg
fdivs
scas
and
sti
call
icebp
pop
call
pop
dec
adc
add
ror
mov
cmp
mov
xchg
fistpl
add
lcall
in
icebp
jg
jnp
push
jl
mov
cmpsl
inc
xlat
jb
inc
lcall
mov
leave
nop
xor
jecxz
fs
mov
xchg
popa
xor
and
mov
ret
icebp
sbb
sbb
inc
or
enter
xor
in
and
sub
fiaddl
sbb
mov
icebp
pop
mov
pop
fists
lret
aaa
shrl
push
lahf
mov
pop
dec
pop
jb
in
cmp
lcall
subb
sbb
jb
cmp
std
xor
jbe
por
cs
pop
adc
adc
addr16
fwait
mov
movsl
or
movsl
mov
rcll
in
sti
push
repnz
jl
xchg
fmuls
outsb
xchg
out
out
mov
mov
popf
leave
pop
test
dec
cmp
out
sarl
lret
mov
dec
lcall
mov
sbb
pop
or
mov
jp,pn
scas
dec
sub
out
pop
or
mov
inc
lea
push
or
xor
sbb
clc
add
or
lock
adc
movsl
stos
insb
mov
pop
push
pop
xchg
pop
adc
cmp
jg
pop
jo
subb
addr16
fisttpl
loope
xchg
mov
gs
cld
sarl
pusha
repz
dec
invd
stos
jo
loop
dec
cli
das
leave
and
push
xlat
sub
popf
sbb
xchg
xor
mov
jns
gs
pop
inc
cltd
mov
popa
add
je
inc
or
pushf
cld
cvtdq2ps
push
out
inc
daa
inc
mov
bound
pop
jp
push
cmp
nop
scas
cmp
or
dec
sub
push
jl
fs
mov
fstpl
inc
cmpsl
inc
sub
les
test
fs
into
xchg
jmp
flds
mov
jg
mov
adc
mov
test
adc
clc
mov
xchg
in
mov
mov
pop
adc
test
leave
fwait
js
sub
or
movsl
dec
aam
pushf
sbb
das
cmp
ret
into
pop
lods
popa
mov
test
bound
pop
insl
addl
pop
enter
jmp
repnz
mov
out
sbb
or
outsl
je
and
jecxz
jle
cltd
mov
cmp
xor
pop
pop
push
ret
add
and
cwtl
mov
int3
ret
in
dec
and
testb
in
fsubrs
lahf
add
jecxz
xchg
push
adc
mov
mov
inc
and
clc
dec
push
shrb
xchg
jge
pop
lahf
insb
xchg
push
push
imul
xchg
inc
addb
mov
jb
ja
dec
dec
push
adc
mov
test
out
leave
hlt
inc
stos
jo
iret
mov
add
xor
pop
fbld
xchg
pushf
inc
aaa
and
lock
inc
int
jno
inc
loopne
cltd
jo
pop
add
add
addr16
lods
out
stos
stc
lock
in
sub
sub
push
pop
push
xorl
mov
into
aas
test
jmp
repnz
push
ja
dec
pop
sub
adc
mov
jg
lcall
jbe
mov
pop
lret
scas
sbb
push
idiv
gs
dec
popf
jge
addr16
stos
cwtl
push
leave
in
call
mov
jmp
or
inc
xor
or
int
add
and
leave
rol
aas
jae
iret
cmp
arpl
cli
pop
fcomps
jp
imul
sub
jle
and
insb
enter
ja
jle
sarl
xor
out
mov
mov
mov
arpl
sbb
xchg
fldenv
and
movsb
adc
fistl
test
or
lock
test
xorb
sbb
cli
inc
xor
jge
mov
cmpsl
pop
movb
lret
std
xchg
push
ss
ret
shr
or
sbb
xchg
mov
pop
pop
fstpl
inc
or
cmp
inc
inc
fstl
divb
mov
aam
cmc
call
aam
popf
aaa
pop
hlt
pop
sahf
out
pushf
les
cmp
xor
stos
nop
mov
nop
dec
imul
jmp
adc
insb
add
out
sub
mov
andb
lahf
ljmp
insl
pop
dec
mov
movsl
or
call
add
inc
jae
nopl
fmul
mov
sbb
lods
ret
push
fdivs
push
repnz
push
xlat
mov
outsb
add
pop
inc
bndldx
outsl
cmp
sbb
mov
testb
lcall
jne
adcb
pop
or
jle
push
roll
xchg
clc
push
lret
push
das
sbb
push
subb
inc
scas
bound
cmp
pop
cmp
adc
cli
ss
out
adc
sbb
fwait
popf
pop
mov
popa
aas
mov
mov
cmp
ss
test
inc
stos
add
xchg
icebp
test
push
mov
push
pushf
fwait
mov
dec
cmpsb
ret
add
divb
shrl
cltd
ret
pop
jns
sarb
loopne
lea
sbb
das
hlt
push
or
xor
ret
inc
jb
cmp
call
push
push
repz
es
outsb
xor
sbb
push
in
lods
bound
inc
andl
cld
ja
push
dec
scas
dec
jmp
testb
shrb
clc
push
bound
sbb
sub
and
daa
and
cld
add
mov
addr16
in
rolb
inc
aam
xchg
je
stos
add
add
scas
xor
aad
lret
repz
loopne
ret
push
pop
push
dec
xchg
in
jl
push
or
or
inc
inc
xlat
pushf
mov
pop
cmp
inc
scas
sub
adc
mov
adc
in
jl
push
rorl
movsl
mov
adc
rol
std
push
shr
cmp
shll
mov
ss
jbe
jge
sbb
push
cmp
daa
jb
ds
es
adc
xor
sub
icebp
inc
pop
jb
rcrb
testb
inc
adc
jns
mov
shlb
int
out
popf
cmp
cld
pop
xor
cmpsl
push
push
jo
mov
int3
into
sub
jecxz
popa
movsb
movsl
cmp
inc
xor
pop
or
lds
sub
push
adcl
lahf
ljmp
test
std
cmpl
ret
aad
and
inc
cmp
add
mov
popf
xchg
jg
addb
fwait
imull
rorb
mov
into
jb
mov
fcomps
adc
or
addr16
or
dec
lods
stos
divb
insl
mov
sbb
cld
push
dec
jl
inc
in
lds
sbb
repz
or
loop
jl
pushf
or
pop
ficoms
hlt
push
sahf
fdivrl
inc
pop
sbb
mov
test
push
subl
out
or
lods
pop
repz
xor
test
shrl
cmpsb
aad
and
xor
cmp
adc
ja
sub
ja
mov
jbe
or
push
or
adc
fdivrs
add
ret
lret
ss
in
and
les
lret
sarb
mov
or
xchg
push
cmp
nop
jg
mov
jp
inc
arpl
push
xor
loope
xchg
sarb
xor
add
inc
clc
ds
push
dec
or
lea
pusha
mov
pop
or
push
scas
in
push
enter
movsb
arpl
cld
cmp
pushl
sbb
dec
mov
mov
inc
pusha
inc
das
insb
cmp
add
push
incb
cwtl
fnsave
xor
adc
or
pop
lds
aad
loope
inc
mov
xchg
shlb
cmpsl
dec
pop
jle
pop
test
jo
xorb
jmp
out
fimull
iret
mov
ret
lret
mov
jo
mov
jge
or
push
stos
popa
cmp
and
pop
push
xchg
js
xchg
mov
iret
and
push
cmpsb
test
mov
jnp
lea
ds
jge
xchg
fcmovu
jbe
lahf
and
leave
add
dec
lret
fs
dec
pop
push
mov
mov
dec
in
lcall
or
cwtl
inc
pop
mov
or
aad
cmp
cmp
je
pop
mov
mov
sub
mov
inc
cs
ja
mov
lds
add
fisttpl
mov
mov
inc
stos
push
mov
jno
iret
mov
xchg
lds
aas
les
ljmp
ds
adc
add
add
repz
inc
sub
mov
imul
mov
notb
sti
std
out
enter
add
lahf
jno
mov
jmp
mov
jae
gs
sub
dec
sahf
inc
cmp
mov
jmp
out
inc
jne
push
daa
adc
movsl
addr16
pop
xor
mov
mov
in
dec
ret
push
dec
lods
dec
dec
push
lods
mov
stos
mov
xchg
xor
inc
pop
pop
cmp
out
jns
or
sbb
push
into
push
mov
pop
xchg
xchg
mov
pop
mov
mov
mov
xchg
in
sti
dec
adc
dec
push
jb
nop
and
hlt
jno
pop
or
inc
movsl
flds
push
cmpsb
mov
mov
xchg
ja
loop
out
cmp
sub
in
sub
push
dec
aam
mov
dec
popf
lcall
jmp
loopne
xor
jb
add
cli
pop
lret
mov
cld
subb
jp
in
sub
cmp
adc
jp
popa
sbb
into
loopne
aaa
xchg
cmp
xchg
icebp
orl
addr16
or
mov
popf
in
add
adc
insl
dec
push
aas
push
scas
sahf
ret
insl
popa
in
mov
xor
in
xlat
lahf
mov
frstor
mov
loope
sti
fcomps
test
add
jno
lods
loop
jp
pop
push
das
cld
aas
scas
xor
mov
shlb
or
jle
sub
mov
imul
sbb
daa
sbb
scas
inc
add
xchg
jmp
fisttpll
dec
clc
cmp
xchg
movsl
mov
orl
repz
icebp
es
sub
dec
mov
clc
decl
jmp
or
imul
sarb
sub
stos
inc
add
ljmp
push
jmp
gs
insl
dec
push
movsl
aas
outsb
push
rcll
inc
call
out
test
jae
int
mov
pop
aad
aam
sbb
icebp
xor
jle
xchg
mov
mov
nop
fsubs
mov
mov
push
je
mov
cltd
loopne
rcll
xchg
and
stos
imul
shll
stos
icebp
movsl
nop
push
sar
fidivs
repnz
add
push
insl
fs
adc
push
loopne
test
push
xlat
mov
aad
xor
fnstsw
lret
lods
scas
add
jle
jl
dec
rcl
jo
push
orl
lret
int3
popa
sti
adc
nop
xor
push
lods
mov
ret
mov
aas
add
pop
outsb
ret
dec
movsl
pop
xor
pop
xor
dec
daa
int3
add
test
leave
add
push
inc
pushf
cmp
sub
lea
leave
inc
lods
adc
rol
loopne
dec
es
jecxz
loopne
shlb
jmp
repz
inc
mov
push
int
mov
inc
fsubl
pop
xchg
xchg
std
inc
and
inc
stc
aad
xchg
push
movsw
dec
pop
xor
es
cmp
adc
cmp
and
mov
js
mov
or
lock
mov
and
xor
out
ja
stos
push
shlb
daa
shlb
fistps
push
insl
mov
mov
or
call
add
sbb
xor
in
jg
movb
adc
repz
mov
imul
rorl
lods
lret
or
dec
js
cmp
xor
sti
mov
and
push
sub
das
test
cmpl
adc
and
jg
lcall
xlat
in
pop
addr16
movsl
sbb
movsb
data16
pop
addr16
in
test
cmp
sarl
or
pop
xchg
addl
movsl
dec
fisttpl
or
mov
ljmp
add
cmpsb
scas
ret
pop
xor
in
xor
dec
stc
and
insb
sub
mov
cmp
jae
test
push
movsb
inc
rorl
xor
jns
sbb
mov
ss
sub
pop
rcrl
fcmovne
pop
cmc
stc
add
negb
or
popa
dec
clc
ret
pop
inc
addr16
inc
or
sbb
ret
mov
scas
lea
int
ret
lds
stc
rol
orb
lret
jns
outsb
int
sbb
sbb
push
fbstp
scas
mov
sub
or
insb
stos
add
push
inc
mov
cld
mov
jmp
lods
sbb
jae
mov
js
add
push
lock
sub
jecxz
aad
std
fs
test
hlt
and
int
xchg
in
inc
and
das
sbb
and
add
leave
cmp
push
loop
into
call
push
jl
jecxz
xor
xchg
jno
push
lcall
int
fs
push
adc
cs
push
sub
inc
pushf
insl
dec
mov
call
mov
mov
in
pop
in
pop
push
xor
rep
push
sbb
ret
inc
inc
pop
xor
xor
mov
popa
ljmp
sub
scas
movsb
xor
adc
sbb
in
xchg
cltd
fisubl
loopne
push
out
test
shrl
jno
xor
and
and
repnz
adc
pop
out
dec
pop
fbstp
jno
pushl
lret
pop
repz
test
adc
and
mov
lds
add
sub
ret
dec
cld
test
xorl
sub
inc
test
xor
lahf
mov
pusha
out
movsl
lds
iret
insb
ret
dec
cmp
sub
xlat
jns
mov
js
addr16
leave
dec
out
nop
xor
sbb
sarl
test
mov
jg
mov
xchg
cltd
adc
mov
popf
rorb
inc
repnz
push
stos
jg
jns
jl
and
cs
int3
add
lods
sbb
fwait
push
push
fstpl
push
adc
mov
mov
shr
and
jmp
cli
int
sbb
in
scas
push
int
jae
xchg
fisubrs
xchg
add
scas
loope
adc
scas
mov
jge
inc
jne
mov
inc
mov
cmpsl
adc
add
and
add
mov
pushf
sbb
pop
ficoms
mov
xchg
xchg
in
mov
fs
mov
scas
sar
xor
cli
mov
xrelease
loope
add
sarb
dec
xor
dec
data16
or
lahf
mov
xor
xor
mov
ret
fiadds
mov
mov
inc
mov
in
lea
into
test
push
jne
icebp
addb
stos
popf
test
xchg
mov
inc
ret
push
daa
or
loopne
add
out
arpl
repz
shll
addr16
je
sahf
je
pop
aad
scas
fidivs
cmpsl
jb
iret
ljmp
ret
xchg
mov
lods
es
rcrb
xor
jo
jae
sub
cmpsl
mov
inc
sub
xchg
fidivl
push
sbb
sbb
movsl
cmp
sub
scas
bound
shlb
push
or
sub
lret
xor
mov
in
insb
insb
push
and
push
xchg
sub
in
jp
xor
xor
out
aam
mov
sbb
xchg
aas
fs
push
ret
and
mov
out
push
iret
inc
imul
sbb
dec
into
fsin
xor
mov
push
dec
cwtd
mov
fucomi
jmp
rcrl
test
aaa
xchg
pop
loopne
int3
shrl
jo
sahf
jmp
or
lds
pop
hlt
sub
in
jns
mov
pop
std
and
out
mov
out
sub
aad
in
and
outsb
xchg
sbb
scas
push
xchg
mov
xchg
sbb
mov
mov
leave
add
pop
xor
xor
pusha
rorl
jb
sub
xor
push
jne
imul
mov
in
cmc
in
fldt
in
mov
pop
add
mov
dec
pushl
loop
cld
jp
lret
stos
push
inc
jbe
movsb
lods
fildl
je
mov
leave
mov
push
cli
outsb
add
xchg
test
jg
into
pop
in
insl
jns
clc
js
leave
sub
mov
adc
arpl
pop
jp
pop
sub
aaa
popa
nop
in
mov
jp
dec
js
in
mov
popa
inc
pop
ss
push
push
mov
jle
pop
mov
nop
lret
aaa
xchg
adcb
call
cmp
xchg
aaa
psubsw
cmpsl
imul
gs
inc
adc
ja
add
loop
mov
push
hlt
jle
sub
cmp
lahf
je
dec
or
mov
popf
scas
sub
push
scas
inc
ret
xor
adc
outsl
pop
adc
push
xchg
lods
es
mov
jbe
aaa
add
pushf
jl
fiaddl
fnsave
jne
jnp
mov
adc
jb
ret
imul
xlat
xor
mov
xchg
and
mov
addr16
mov
dec
daa
cmp
sbb
mov
push
enter
xor
pop
mov
sbb
movsl
out
ds
lock
subl
icebp
pop
ljmp
dec
xchg
int
dec
test
mov
shrl
jns
ja
mov
mov
sti
fisubs
cltd
sub
adc
stos
cs
clc
mov
hlt
mov
cltd
pop
fbstp
xchg
jle
add
mov
stc
jge
mov
clc
pop
test
ficoml
jo
outsl
test
int
repz
stos
cmp
aas
aad
int3
adc
inc
shlb
or
pushf
sahf
and
xchg
adcb
cwtl
xchg
jo
iret
pop
xor
call
dec
test
cld
in
push
or
mov
lcall
fisttpll
inc
or
add
clc
adc
push
sahf
cld
jmp
add
iret
push
xor
xchg
dec
jl
push
sub
ret
mov
and
jae
test
sti
lea
cld
sahf
subl
lds
loop
decb
mov
shll
xchg
adc
mov
fidivrs
sub
lret
int
cmpsl
mov
mov
aaa
loop
and
push
or
pop
xorb
dec
xor
mov
lcall
xor
xchg
push
sub
mov
mov
outsb
cmpsl
aam
cmp
cltd
popa
pop
adc
pop
or
dec
fiadds
nop
mov
pop
mov
adc
and
dec
or
in
sahf
imul
psrlw
gs
pop
sub
es
in
adc
add
sbbl
sbb
lods
outsb
add
and
mov
push
pusha
into
push
pop
push
mov
mov
loopne
lds
xchg
cli
nop
inc
fcoms
jb
mov
sbb
sbb
sub
or
lods
and
push
mov
cld
das
out
and
sub
xor
movd
and
cli
enter
push
jge
add
pop
add
xlat
fsubp
lahf
imul
sub
test
ds
repz
fwait
stc
xchg
mov
sub
mov
dec
loop
mov
out
sbb
repz
xor
pop
nop
xor
pop
scas
dec
stos
loop
push
std
push
mov
jnp
orb
lods
or
mov
adc
cmp
xchg
out
ret
pop
mov
sbb
rcrb
mov
loopne
ss
cmc
pop
fwait
mov
insl
inc
fildl
stos
pop
push
int3
clc
add
pop
dec
mov
cld
push
fwait
and
and
cs
loopne
add
fs
xchg
ljmp
mov
mov
out
mov
adc
jmp
movsl
jno
out
int
out
repz
mov
mov
fiadds
pop
jmp
cwtl
or
mov
push
pop
fisttps
sti
jl
ja
mov
pop
test
sub
xor
mov
cmp
mov
cs
repz
mov
dec
mov
pusha
adc
iret
divl
fbld
insl
dec
imul
in
sbb
jmp
out
ss
aaa
ljmp
test
je
cwtl
sub
add
dec
mov
lahf
bound
cld
or
jge
mov
sbb
push
scas
insb
xchg
ffreep
push
test
sbb
stc
sub
cmp
push
xlat
hlt
jmp
in
xor
shlb
mov
gs
pop
gs
andl
xor
mov
push
mov
lret
bound
cmpl
mov
jno
lock
pop
out
adc
xchg
xor
cmp
repz
test
cs
or
call
sbb
add
fistpll
push
movsb
pop
scas
popa
sti
aam
fmull
notb
mov
cmovnp
mov
and
inc
test
subb
sbb
cs
js
jns
cld
mov
mov
or
xchg
hlt
stos
cmpb
rcll
test
inc
cwtl
fsts
xchg
addl
xchg
pop
lret
sub
mov
inc
mov
or
and
test
adc
iret
popa
cmpsl
add
inc
pop
pop
ja
loop
pusha
push
sbb
lret
je
data16
int
xchg
sub
imul
sbb
or
sub
in
repz
jno
shlb
push
lahf
xchg
jb
cmpsl
jge
mov
scas
adc
inc
add
incb
mov
mov
jecxz
adc
jo
repz
jno
call
xor
iret
imul
pop
rclb
out
and
daa
inc
dec
xor
rol
insl
out
lret
push
clc
adc
stc
mov
test
xor
xchg
add
aaa
mov
jbe
dec
mov
pusha
lahf
dec
lahf
sub
cwtl
into
mov
jo
neg
inc
jne
cmp
std
adc
cmpsl
cltd
cli
push
add
enter
sbb
enter
out
out
in
rcrl
sub
jb
imul
jno
out
mov
xor
out
inc
dec
xchg
and
add
push
out
inc
popf
inc
add
dec
shrb
movb
negb
mov
xchg
in
sub
movsb
or
jecxz
ss
push
and
movsl
push
mov
icebp
pop
repz
jp
and
lret
gs
push
push
das
fisttps
mov
push
cld
lahf
push
je
xchg
jl
sahf
cmp
ja
hlt
or
pusha
mov
shr
inc
ljmp
repz
addb
ds
xchg
in
in
mov
inc
pushw
pop
xor
imul
push
or
pushf
xchg
mov
cmp
scas
out
aad
stc
roll
into
cwtl
xchg
insb
rcpps
xchg
push
dec
add
das
push
cmc
push
popf
or
mov
pop
std
idivb
ja
roll
mov
adc
lods
ret
jns
sarl
cmpsl
add
loope
mov
rolb
iret
pusha
fs
push
pop
in
adc
fsubl
pop
enter
or
imul
push
enter
ficoml
out
lret
outsl
adc
pop
mov
adc
push
cmc
lds
cs
cmp
cmp
les
pop
mov
adc
jge
jl
add
adc
adc
das
mov
and
mov
and
pop
out
arpl
xor
and
xchg
ss
inc
repnz
test
jle
test
mov
ss
test
jmp
call
outsl
pop
sbb
xor
xchg
cmp
inc
jne
mov
dec
popa
push
xor
adcb
add
fnsave
subb
mov
pop
cs
and
imul
stos
stos
adc
jne
jae
adc
fdivrs
out
fidivs
xchg
std
aad
add
cmp
mov
idivb
add
sub
and
or
clc
les
fsts
inc
cmp
xchg
push
fisubrs
add
dec
lahf
test
pop
mov
xchg
add
push
data16
mov
cli
dec
and
movsl
popf
out
xor
and
push
flds
dec
add
outsb
or
and
mov
mov
repz
popa
cwtl
dec
sti
bound
pusha
cltd
adc
mov
xor
push
mov
and
mov
sti
data16
pop
hlt
sahf
jns
xchg
sub
xor
mov
loop
mov
cli
in
lret
call
xorl
insb
sub
andl
divb
jge
jle
push
push
cli
and
and
cmp
mov
pop
scas
dec
mov
cltd
push
popa
je
imul
sub
push
ljmp
cmp
and
ffree
repnz
aad
push
jo
aam
repnz
cwtl
inc
push
int
xlat
adc
subb
pop
mov
popf
call
jmp
imul
sbb
jle
aam
add
clc
lret
imul
in
stos
pop
jp
out
mov
test
mov
cmpb
jae
in
sti
adcb
rol
sbb
pushf
add
xor
fistl
xchg
pop
sub
lahf
cli
dec
lahf
mov
call
repz
es
sbb
getsec
int
fidivs
cmp
bound
sub
sub
sbb
data16
ret
mov
mov
mov
scas
mov
push
sub
aas
stc
lret
pop
inc
notl
sti
fimull
insl
aad
lcall
and
mov
cld
js
es
js
xchg
es
pop
fcompl
or
mov
push
fbstp
mov
mov
push
cmpsl
cmp
xchg
and
jg
fsubrl
adc
rcll
dec
sub
leave
and
push
or
mov
stc
pop
jmp
fcompl
daa
or
xchg
sbb
xor
sub
inc
push
imul
outsb
mov
mov
or
sub
adc
inc
push
lds
cwtl
test
push
imul
fnstsw
fildl
aad
mov
lret
push
mov
adc
lret
aas
jl
icebp
in
jne
mov
testl
push
lea
inc
dec
jb
dec
mov
fcmovu
pop
lods
jmp
cmp
dec
jne
jne
or
or
adc
sub
les
test
pop
mov
push
push
cwtl
scas
xchg
dec
mov
mov
js
data16
loope
icebp
add
hlt
test
inc
fsub
mov
out
adc
aas
or
fsubrs
mov
sub
mov
sbb
imul
xchg
sub
mov
lret
jb
insb
dec
in
je,pn
pop
movsb
popa
jmp
pop
popa
sbb
pop
mov
shr
xchg
filds
add
xchg
pop
sub
push
vcvtdq2pd
nop
xchg
mov
xor
xor
adc
rorl
add
pop
mov
mov
es
push
fucomi
stos
adc
lods
imul
mov
adc
xlat
cmp
mov
fisttps
pusha
fwait
xor
data16
aad
cmp
dec
lods
loopne
jg
cmc
push
fcmovne
mov
sbb
xor
sbb
jne
pop
mov
or
inc
lret
jne
pop
xchg
cltd
xor
mov
jmp
mov
js
push
mov
add
add
add
or
adc
mov
popf
stos
int3
insl
xchg
lock
out
cmp
fistl
orb
rolb
jno
gs
pop
push
mov
lea
mov
in
push
inc
movsl
loope
dec
xchg
icebp
jecxz
pop
bound
cmp
lods
dec
lock
inc
cltd
imul
ljmp
aaa
jecxz
inc
pop
jb
hlt
and
xor
inc
mov
jg
sti
pop
das
xchg
jge
or
insl
je
cltd
mov
inc
fidivrl
inc
test
rol
and
cltd
jne
cmp
inc
lock
mov
adc
cwtl
jns
mov
leave
pop
in
pop
add
sbb
lret
btr
rol
adc
adc
ja
fistps
hlt
shrl
cmp
rcr
jnp
xchg
cs
mov
mov
jne
nop
sub
lock
adc
xchg
pop
in
cmp
add
sarl
pop
in
scas
mov
test
push
fists
adc
xlat
xor
les
jb
stos
mov
jno
xor
xchg
fs
lahf
int
in
cli
popf
mov
inc
scas
xor
xor
mov
jl
shll
inc
jge
xor
loopne
es
les
push
loope
cld
cmc
pushf
test
xchg
into
pushf
movsl
mov
cmp
and
ficompl
sbb
mov
nop
pop
mov
mov
sbb
in
cmc
popl
adc
dec
fcompl
imul
mov
pop
mov
sarb
cltd
mov
and
lods
hlt
xchg
xchg
jo
jns
leave
cmp
mov
bound
xchg
cmovg
mov
jge
scas
cmp
and
jge
add
xchg
insl
or
rolb
pop
dec
jae
adc
and
orl
es
fsubrl
pmaddwd
jecxz
in
mov
jle
mov
cltd
test
cmpsb
scas
jl
jecxz
cmp
movsb
pop
xchg
les
gs
jg
test
mov
leave
gs
fstpl
insl
into
add
adcl
dec
jbe
inc
dec
ds
cmp
inc
xchg
and
and
ds
mov
jo
mov
test
xor
sbb
inc
inc
add
jl
jae
push
jae
in
inc
shl
fsubp
out
jnp
sub
and
push
imul
mov
lea
bound
mov
in
insl
jnp
add
xchg
arpl
sbb
cmp
mov
xor
cmpsl
enter
xchg
sub
push
fstp
cmp
xchg
sub
cltd
cwtl
mov
push
subb
mov
inc
inc
fcom
cmpsl
insl
jo
ret
xor
pop
dec
xchg
fidivrl
xchg
ja
xor
addr16
push
int3
mov
cld
test
ds
fnsave
inc
into
das
mov
push
hlt
inc
adc
mov
scas
fwait
lods
mov
ret
int
xor
aaa
orb
jge
inc
imul
inc
popa
mov
sub
xchg
pushf
mov
icebp
xchg
repz
rorl
mov
fs
fwait
or
pop
fisubrl
sbb
cmpsl
xor
jae
std
sbb
xchg
or
inc
adcl
pop
cs
pop
sarl
jno
aaa
sbb
mov
shlb
jmp
decb
int
cmp
ja
js
sarb
add
notb
daa
orl
rep
xorl
and
and
mov
mov
jmp
test
push
out
outsl
das
mov
cmp
adc
call
adc
mov
or
hlt
dec
xor
in
push
push
mov
test
pmuludq
adc
das
and
sub
and
xor
addb
jle
mov
pop
movsl
adc
jbe
sub
xor
add
ds
push
jp
aas
lock
xor
mov
mov
in
push
repz
mov
inc
adcb
adc
aas
push
jmp
or
xlat
sbb
scas
push
push
jbe
pop
dec
stc
cmc
pushf
call
aam
arpl
push
jns
cmp
adc
ret
addb
mov
imul
shll
enter
jb
cs
inc
sub
jns
cmp
mov
cltd
sub
leave
pusha
push
mov
shrl
xor
stos
xchg
mov
cmpsl
xchg
out
mov
mov
ss
or
add
pushf
xchg
enter
adc
push
std
outsb
cmc
fucomip
and
lret
clc
hlt
pop
out
lahf
dec
cmc
stos
aaa
outsl
aaa
adc
xchg
sbb
add
movsb
adc
dec
repnz
mov
lea
adc
popa
call
pop
inc
addl
stos
or
orl
outsb
ret
lods
pop
or
test
and
push
hlt
mov
adc
cli
rclb
pop
lds
cld
push
inc
pop
mov
or
inc
xor
mov
mov
repz
out
inc
testl
clc
gs
clc
push
mov
jne
loop
jl
in
mov
scas
pop
mov
in
push
repz
popa
cmp
stos
ds
insb
fwait
pop
add
fwait
sbb
loope
mov
fiaddl
fimull
push
xor
jp
pop
popf
dec
mov
cs
and
loopne
aad
add
sti
adc
addb
or
sbb
pop
xchg
into
mov
xlat
sahf
pop
call
mov
xor
push
push
xor
shrl
out
bnd
stos
out
js
sub
std
outsb
xchg
push
lret
in
push
xor
cs
out
dec
outsl
push
push
fwait
pop
push
outsl
pop
cmp
popa
mov
jg
push
icebp
xchg
ljmp
jge
addb
xor
fcmove
int
xor
jg
xor
rclb
mulb
ret
in
jle
lock
fnsave
jp
int3
xor
mov
jns
push
std
cmpsb
inc
adc
inc
pop
aam
and
mov
jmp
call
adc
push
mov
mov
and
adcb
push
jns
push
jecxz
leave
test
sub
adc
repz
ret
or
xchg
jecxz
adc
cmp
mov
dec
orb
sub
push
mov
xor
cmpsb
mov
movsb
xchg
mov
loop
adc
xchg
divl
rcll
and
stos
xor
rcrb
mov
lea
or
cmp
mov
mov
movsb
pop
mov
rcr
das
mov
je
inc
mov
mov
test
and
call
bound
ja
pop
jae
push
mov
fs
jns
imul
ficoml
jne
mov
mov
xchg
cmp
jns
hlt
cs
aam
mov
sbb
sub
adc
sbb
outsl
lock
xchg
inc
cmpl
push
lahf
insb
jnp
adc
mov
mov
testb
and
push
cmp
mov
in
scas
mov
in
sbb
dec
test
xchg
inc
or
popf
fldcw
xchg
jnp
scas
lock
mov
inc
pop
xor
xor
xor
sub
das
ret
clc
inc
cwtl
sbb
cmp
cmp
lret
mov
and
shl
into
nop
or
adc
out
sti
jecxz
jne
mov
jae
lea
loope
stos
mov
xchg
xor
jbe
sub
xor
insb
scas
dec
jne
inc
jecxz
mov
sub
out
or
sti
fdivs
cmpsb
stos
pop
lock
cltd
ss
pusha
lret
inc
fwait
shlb
jmp
loopne
xlat
lahf
aad
push
cmp
lock
push
inc
mov
jo
dec
xor
popl
inc
add
imul
idivb
ds
xchg
add
push
xchg
insl
and
xchg
jne,pt
mov
sub
inc
dec
outsb
lods
jno
vpsllq
int
or
lea
jnp
pop
call
and
mov
sarb
pop
pop
inc
outsb
jnp
test
loopne
or
imul
shlb
xchg
fidivl
cmpsl
pusha
push
lea
cmc
dec
mov
mov
mov
sbb
inc
xor
shlw
adc
scas
in
mov
ljmp
into
sub
xchg
jo
and
gs
lahf
dec
xchg
lret
push
loop
xchg
out
orb
fisubl
jg
fstps
mov
add
gs
jb
dec
fs
lahf
fldcw
mov
ret
xchg
sbb
sub
jg
movsb
mov
cmpsb
arpl
je
mov
out
mov
mov
dec
mov
adc
pop
or
js
xor
pusha
or
imul
mov
xor
add
aam
out
sahf
mov
mov
adc
flds
repnz
xchg
imul
dec
fs
cmp
cmpsb
in
mov
bound
xchg
ret
lds
or
cld
lods
ficompl
add
or
fwait
popf
std
xor
lret
push
popa
push
into
cwtl
int3
rorb
bound
dec
loope
mov
jmp
fucomi
out
mov
nop
cld
xchg
inc
mov
mov
mov
repz
aaa
scas
mov
push
sbb
mov
add
je
xor
dec
ret
shl
or
sti
sbb
pop
cmp
xor
inc
lods
outsb
imul
shl
jnp
fldenv
or
mov
data16
push
gs
xchg
xchg
pop
mov
sub
sub
push
out
sbb
cmp
cmp
dec
xchg
lock
icebp
popf
js
int3
push
push
insb
xchg
ja
jl
jbe
mov
inc
daa
cmpsl
mov
iret
sti
fcoms
push
adc
lods
gs
push
dec
adc
aas
xchg
shlb
xchg
cmpsl
pop
stc
pop
mov
rclb
repz
jae
jle
pop
daa
fildl
pusha
inc
fidivl
and
cmpsb
daa
fimull
aas
aas
int
xchg
mov
xor
add
ja
fnclex
or
dec
int3
je
and
and
enter
pop
sub
sub
jb
mov
sahf
dec
add
imul
jno
or
mov
scas
xor
cli
movsl
nop
push
xchg
xchg
cmp
in
mov
popf
mov
sub
cmp
out
leave
lret
clc
sahf
test
leave
aam
cmp
xchg
sbb
or
popa
push
imul
pusha
xchg
inc
push
movsl
mov
cltd
jl
adc
add
lock
js
daa
ret
add
in
outsb
jecxz
xchg
cmp
dec
mov
jp
pop
and
xchg
xchg
mov
imull
imul
push
dec
hlt
movntps
loop
pop
ss
jg
outsb
jne
add
lret
mov
xlat
dec
lret
mov
sbb
lahf
or
xchg
dec
lock
xchg
push
mov
mov
sbb
xchg
ds
out
jb
aaa
adc
cmp
pop
fidivrl
inc
fisttpll
imul
add
xor
inc
stos
mov
imul
adc
inc
les
push
sbb
xor
ds
cmp
cmp
inc
dec
pop
cld
fcompp
pop
fidivs
jmp
push
pop
loopne
std
sti
dec
xchg
add
imul
enter
movb
cmp
mov
in
pop
jg
leave
outsb
push
lods
jl
outsl
mov
fildll
lods
sarl
inc
push
xor
ss
jle
out
xor
mov
sbb
in
mov
ror
push
and
lods
subb
cmp
test
out
lds
fnstsw
push
xchg
pop
xor
mov
loop
jg
std
push
lock
aad
mov
adc
repz
inc
dec
xchg
jno
stos
jmp
aaa
das
int
arpl
sub
mov
not
fs
and
sahf
cmpsl
fisubrs
push
outsb
push
or
add
out
xchg
jecxz
inc
rol
mov
clc
mov
pop
jae
or
hlt
inc
aas
or
popa
cmpsl
sti
mov
dec
aad
comiss
and
sub
adc
mov
jb
pop
ret
jmp
mov
mov
pop
xchg
push
cld
xchg
mov
adcb
jp
neg
pop
js
or
jnp
ret
std
mov
or
imul
shrb
jmp
ret
repnz
shlb
pusha
popa
sub
stos
sbb
cwtl
daa
push
fsubl
add
int
xchg
xchg
mov
add
iret
push
lahf
sbb
and
addl
pop
pop
adc
xchg
jbe
cld
sbb
out
mov
outsl
out
scas
mov
sbb
push
mov
sbb
movsl
lods
mov
or
xor
or
sbb
aas
fisttpll
lock
stc
int3
push
and
ret
repz
outsl
lock
loopne
iret
add
mov
or
mov
pop
or
scas
fiaddl
sahf
adc
sub
hlt
inc
lahf
sub
pop
std
es
lret
adc
mov
rcll
sti
lods
jne
jo
mov
mov
pushf
and
jmp
lock
hlt
jo
xchg
sub
enter
ds
call
add
rol
mov
pop
sahf
sub
inc
inc
aad
lds
rcrl
int
add
mov
xchg
or
bound
mov
data16
bound
lahf
pop
leave
push
or
sbb
or
push
mov
xor
ja
in
adc
xor
xchg
arpl
jge
mov
stos
cmp
test
out
in
fwait
mov
rorl
push
push
mov
hlt
jb
repnz
jo
popa
es
xor
inc
cwtd
adc
sti
cltd
mov
dec
push
push
jne
lcall
test
xor
push
sbb
mov
mov
pop
inc
cmp
push
mov
sub
pop
imul
xchg
add
lock
je
inc
mov
mov
std
test
mov
frstor
pop
aas
lahf
cmc
mov
mov
insb
jecxz
dec
insb
or
inc
cmp
ret
pop
rcrl
pop
lahf
mov
out
scas
test
pop
mov
pusha
mov
mov
gs
mov
and
ja
pushf
mov
jb
loopne
push
cmp
add
sahf
add
fwait
sbb
iret
and
sub
sahf
mov
cmp
stos
mov
mov
es
in
inc
xor
xchg
and
sbb
fstl
fucomp
pusha
loop
dec
loop
ja
test
mov
sbb
aam
cwtl
mov
out
xlat
dec
adc
xchg
lcall
xor
insb
sbb
std
loopne
or
xor
enter
pop
repz
xor
andl
loopne
jne
enter
dec
cmc
jmp
jno
leave
mov
jle
in
pop
pop
xor
pusha
in
cmp
cld
dec
push
fcmovnbe
out
cltd
ds
out
stc
std
xlat
cmpsb
int
popa
adc
fwait
xor
lret
cmp
jge
movsl
jg
lcall
mov
mov
jne
mov
mov
int
jle
mov
aad
push
and
enter
inc
add
pushf
movsb
aad
mov
addr16
bound
and
test
pop
push
xchg
cmc
jl
les
rol
cmpsl
and
push
pusha
sarl
jns
in
mov
mov
std
mov
pop
xlat
adc
cwtl
rclb
dec
mov
mov
jmp
sub
mov
dec
dec
sbb
loopne
in
adc
push
cs
or
sbb
jbe
xchg
outsl
jb
mull
lea
mov
sub
cwtl
sbb
shrb
popa
in
and
je
pop
ja
sbb
jo
mov
insl
sub
ret
xchg
xchg
mov
sbb
rcrb
dec
add
hlt
or
call
mulb
jb
ja
dec
push
inc
mov
jp
mov
xchg
movsb
and
pushf
pusha
sub
in
sbb
xlat
stos
fs
push
cs
cmp
es
fs
int3
jno
cli
and
mov
test
xor
imul
mov
inc
insl
fdivl
ss
fidivs
mov
xchg
in
cmp
xchg
pop
out
sahf
sub
pop
push
fnstenv
dec
mov
popa
jne
jle
jecxz
inc
xchg
lret
call
insb
mov
and
lods
push
sbb
sbb
loop
fcoml
nop
adc
ja
inc
push
push
cmpsl
shll
or
pcmpgtb
jo
xchg
daa
dec
lods
fiaddl
fmull
ds
ja
clc
fistps
orb
cmp
jecxz
stos
pop
mov
cmpsl
or
int
enter
mov
jmp
pushl
mov
addr16
xor
js
xor
insb
clc
xor
scas
sub
aam
mov
lret
xchg
movsl
enter
rep
sbb
outsl
jbe
js
sub
dec
and
jecxz
pushf
push
and
aad
rorl
bound
movsl
cwtl
or
push
xchg
in
mov
imul
pusha
mov
dec
adc
cmp
mov
insl
into
arpl
pop
ss
fwait
lret
mov
fists
enter
lods
mov
inc
sbbb
int3
xchg
out
scas
and
in
dec
push
push
or
and
jecxz
mov
pusha
out
cmpsl
imul
loope
call
shl
sub
in
outsl
inc
fcmovnbe
adc
rorb
xchg
loop
mov
loop
in
and
mov
insl
inc
outsl
add
and
sbb
push
cmove
ffreep
shlb
and
jge
inc
aas
jmp
movb
mov
jle
lock
xor
lea
fsubp
adc
cmpl
imul
adc
dec
xlat
scas
aam
out
shll
test
std
mov
dec
sub
adc
dec
xor
ljmp
mov
aad
popf
icebp
push
mov
push
stos
in
lods
arpl
dec
jno
js
dec
ret
adc
fistl
mov
pop
push
dec
lock
mov
jae
push
icebp
cmp
adc
loop
arpl
aaa
test
jg
mov
icebp
inc
cltd
mov
push
fcompl
or
xor
push
inc
jo
jne
push
icebp
and
ret
aad
mov
out
mov
lcall
sarl
int3
mov
sbb
and
in
push
jae
aam
daa
jp
rorl
ljmp
fwait
lods
faddl
sub
inc
mov
push
dec
jb
pop
repnz
mov
nop
dec
incl
xor
cmp
loopne
in
repz
pusha
mov
sbb
rcrl
or
movsb
sbb
orl
dec
adc
cld
sbb
sbb
arpl
movsb
mov
adc
les
add
aaa
mov
outsb
stc
pop
aaa
adc
ret
sbb
unpckhps
cmpsl
sub
sub
mov
push
cmp
andl
pushl
inc
insl
jmp
and
xchg
sbb
xchg
pop
popa
loopne
xchg
sub
sub
testb
mov
push
dec
jmp
and
sbb
jmp
aas
cmpsl
nop
frstor
or
mov
sbb
xchg
inc
jge
test
out
mov
xchg
lret
orb
jns
xorb
push
outsl
fs
cwtl
scas
lea
rcll
jae
push
pop
adc
in
sub
add
mov
add
pop
jp
pop
lret
cs
push
dec
xor
dec
dec
xchg
ljmp
lahf
dec
sbb
ljmp
cmpl
aas
clc
inc
push
pusha
out
je
aam
push
add
xorb
insb
add
xchg
add
mov
and
in
ja
lcall
cmp
f2xm1
mov
mov
xor
mov
loope
fs
mov
xchg
add
scas
leave
lds
jmp
pop
dec
add
cmp
stc
jmp
out
pop
push
inc
cmpsl
jbe
adcl
mov
scas
insb
in
mov
loop
jbe
mov
mov
mov
insl
out
or
ret
sbbb
or
aam
ret
xor
and
mov
jb
or
jecxz
mov
scas
repnz
bndstx
push
divb
inc
mov
fcmovu
lret
loop
fisubs
lds
mov
sub
xchg
adc
lea
outsb
call
pop
test
outsb
mov
and
and
pushf
in
out
imul
sub
push
mov
into
xchg
das
pop
add
mov
dec
add
jns
add
in
mov
mov
dec
sbb
out
pop
roll
test
iret
mov
dec
cmp
mov
test
das
in
xor
sub
jb
in
inc
stos
fisttpll
xchg
jmp
push
adc
in
jl
js
xor
pop
lahf
mov
push
ss
inc
mov
ja
sbb
dec
push
cld
pop
fdivrs
inc
pop
iret
and
popf
push
leave
mov
in
or
out
sbb
push
insb
push
cmpsl
cs
inc
inc
push
pop
leave
push
mov
stc
ds
gs
dec
lods
repz
stc
lods
in
fwait
mov
sub
rcll
sbbl
shlb
in
push
int3
out
and
push
cmp
aaa
test
sbb
push
imul
jp
cs
popf
pop
push
dec
dec
xchg
xchg
push
pop
adc
dec
push
push
in
add
icebp
ja
cmc
fldlg2
pop
test
xchg
push
fwait
test
cmp
cmpsb
and
imul
and
lods
scas
cmp
xor
es
mov
jg
fcmovnu
sub
repz
xlat
loopne
sub
cli
cmp
or
daa
mov
aas
sub
outsb
sbb
arpl
push
gs
mov
cmpsl
repnz
mov
insl
push
out
and
imul
push
daa
je
pop
mov
fs
adc
into
inc
fstl
std
xchg
jbe
jle
ficompl
dec
je
out
addl
int3
xor
ret
mov
jecxz
xlat
lods
sub
cmp
mov
push
fldenv
mov
cltd
loope
mov
adc
push
out
ss
fldenv
adc
mov
lret
sub
xchg
pop
push
inc
xchg
shl
cmp
jmp
dec
mov
xchg
ds
jo
not
repz
js
adc
fsincos
sbb
bound
lret
cmovle
push
xchg
lea
rcrl
lea
sbb
cmp
call
cmc
nop
add
mov
push
in
addr16
enter
push
sti
int
das
lret
adc
repnz
jae
aad
dec
ds
fucompp
and
push
inc
or
sub
mov
inc
xor
out
insb
push
or
mov
sub
inc
addl
add
xor
mov
add
lahf
mov
sub
add
pop
sub
or
mov
xor
loopne
shlb
mov
xchg
push
rcll
popl
ret
lock
rcl
lds
jg
xchg
add
mov
mov
adc
out
movsl
je
fbstp
hlt
jle
dec
jnp
shrb
jno
or
sbb
xchg
push
cmpsb
xchg
jno
adc
xchg
lea
mov
push
adc
xor
push
mov
sub
pop
lods
or
and
cmp
push
mov
mov
pop
push
popf
adc
lret
inc
mov
subl
xchg
adc
add
jb
pop
push
sub
pop
cmp
xor
cmc
sub
cmp
push
add
mov
call
and
pop
xor
mov
les
or
dec
inc
icebp
xor
xor
loope
push
popf
pop
inc
jb
xor
xchg
fmuls
inc
sti
bnd
dec
or
fsubrp
daa
inc
imul
cmc
sahf
push
xrelease
enter
mov
xchg
xchg
jmp
or
or
dec
nop
sbb
mov
xchg
movsl
js
pmulhw
test
jge
pushf
sub
cli
jge
push
notb
cmp
imul
ja
jmp
clc
inc
jne
aam
mov
or
cmovle
sub
clc
jmp
sub
mov
bound
lea
push
movsb
fcmovbe
ss
xchg
test
sub
dec
add
int
std
or
cwtl
cli
insb
adc
xorl
stos
xor
sbb
mov
imul
scas
shl
mov
movsl
push
jmp
push
test
iret
xchg
lret
mov
and
mov
fdivr
xchg
mov
insb
addl
jns
std
pop
jno
clc
add
test
or
xchg
xchg
add
dec
jge
xlat
adc
push
mov
outsb
scas
imul
cmp
sub
stc
pop
xchg
cld
lahf
lods
xchg
add
or
das
xchg
dec
addl
and
test
sbb
jns
cmp
pop
movsl
out
jge
dec
sub
out
dec
ret
bound
fsubrs
or
mov
mov
jge
out
scas
push
or
in
push
repnz
in
out
pop
xor
and
push
movsl
dec
test
add
pushf
dec
loope
or
xchg
jo
adc
and
dec
rcrb
ss
inc
xchg
push
add
das
nop
daa
xor
sub
mov
and
inc
dec
mov
ja
addr16
les
cltd
jns
pop
in
xor
cltd
and
jle
popa
add
mov
jg
xchg
filds
add
xor
int
faddp
xor
xor
je
push
push
xor
stos
aaa
iret
xchg
sbb
or
sub
xchg
inc
mov
testb
inc
inc
or
cmpsl
inc
clc
sub
into
push
mov
dec
cmp
icebp
in
imul
sti
loop
xchg
repnz
xchg
lds
scas
adc
int3
mov
cmp
push
lds
pop
fidivrs
rcll
das
adc
mov
adc
dec
add
stos
mov
loop
gs
repnz
out
fstpt
sahf
lods
xlat
in
push
dec
jb
inc
mov
xchg
inc
mov
xlat
pop
or
rcrb
addr16
scas
jb
xor
lcall
pop
pop
pop
adc
xor
shll
jns
and
cld
js
dec
in
movsl
roll
xchg
adc
sub
adc
pop
cmpsb
pop
or
hlt
stos
mov
mov
and
cli
push
shlb
frstor
xchg
push
jne
pop
mov
jle
adc
or
xor
inc
and
xlat
lds
jp
xor
xor
push
fistl
push
pop
mov
daa
mov
mov
loop
dec
fnsave
call
sub
mov
sbb
test
loopne
ss
inc
aad
sbb
add
inc
adc
mov
jge
or
sub
adc
lods
call
and
add
out
add
sub
lods
gs
mov
movsl
mov
push
mov
cmc
or
push
inc
push
xor
daa
xchg
fmulp
lods
dec
imul
inc
imul
enter
pop
data16
imul
sub
repnz
inc
scas
sub
sbb
inc
les
jge
inc
cs
mov
out
xchg
shrb
cwtl
bound
dec
sbb
dec
fcmovnbe
pop
fstl
add
rolb
xor
mov
pop
or
into
inc
cmp
faddp
cmp
sbb
cwtl
divb
sbbl
jnp
dec
dec
mov
sbb
xor
and
or
xchg
push
and
in
std
es
xor
fldl
add
loopne
cmp
xchg
sub
cmpsw
adc
push
pop
nop
jo
cmpl
jnp
mov
movsb
push
xlat
out
sbb
jmp
in
shr
pop
in
stos
sbb
cmp
ja
and
pop
cmc
push
inc
mov
mov
sbb
xchg
andb
sbb
dec
orb
loop
int
fwait
outsl
cmp
and
jle
popf
repnz
jmp
and
xor
inc
or
mov
and
jbe
xor
xor
xchg
stc
pusha
add
xorps
add
int
mov
into
xchg
daa
nop
jg
dec
bound
push
inc
mov
mov
fisubs
adc
add
addb
call
out
mov
lds
les
push
add
mov
sub
inc
scas
repz
pop
inc
mov
stos
loope
int
jns
push
xchg
or
jae
cmc
mov
loop
pop
jl
pop
dec
xor
or
movsl
xor
dec
stos
jp
sub
mul
rcrb
inc
addr16
jp
inc
dec
sbb
dec
popf
pop
xor
aad
lret
adc
addr16
icebp
out
ss
cmp
jl
mov
push
inc
mov
push
andb
inc
jb
pop
and
fcoml
fbstp
rorb
xchg
lds
ds
ja
inc
outsb
pop
mov
sub
mov
fprem1
pop
pop
mov
and
adc
movsb
inc
add
push
and
sub
lret
fwait
popa
cld
popl
lahf
jo
repnz
sub
mov
out
cltd
mov
sahf
scas
rcr
mov
nop
xchg
cltd
dec
adc
jecxz
test
xchg
cmp
in
andb
jp
sahf
mov
mov
xchg
xchg
add
stos
dec
js
cltd
pushf
cld
and
push
mov
ss
mov
insb
testl
out
add
xor
lret
xchg
ss
xor
test
and
jp
les
fdivp
jnp
nop
and
push
aaa
imul
sub
rorb
add
out
call
mov
cwtl
cmp
aam
enter
fnstenv
dec
fsts
dec
mov
mov
jo
dec
cmp
add
mov
or
xor
mov
dec
outsb
nop
or
es
sbb
enter
cwtl
dec
push
and
push
or
mov
jne
and
lds
insl
adc
dec
mov
insb
cmp
push
xlat
adc
dec
dec
mov
xor
sub
cltd
jmp
lds
int3
in
cmc
mov
pop
jo
sub
lret
sbb
sub
repz
jl
test
jo
sub
addl
movsb
ss
mov
mov
push
adc
pop
jle
pop
pop
jp
gs
js
sub
aas
std
xchg
xchg
adc
xchg
mov
sti
cwtl
dec
cmp
arpl
inc
ljmp
js
repz
nop
ss
cmp
loope
mov
dec
dec
nop
pop
out
jl
lea
xchg
inc
loope
in
mov
or
and
mov
sbb
or
sbb
dec
adc
jmp
sub
fistpll
and
scas
loop
ds
filds
gs
adc
stos
fistps
inc
dec
pushf
sbb
pop
ljmp
cli
xchg
shlb
mov
sbb
push
push
mov
addr16
mov
int3
ret
aas
jmp
xlat
imul
and
jnp
or
or
add
push
pop
lock
or
jns
add
inc
daa
push
sbb
adc
addl
mov
in
test
and
xchg
mov
mulb
ret
jnp
lahf
pushl
push
cs
sarb
fs
fistpl
stos
jg
sub
aaa
or
ljmp
inc
jns
add
ret
adc
ljmp
stc
jp
loope
cs
mov
and
xchg
aad
jno
adc
push
jmp
hlt
dec
pop
mov
jnp
hlt
push
cmpsb
sbb
test
arpl
popa
mov
cmp
aas
aas
shll
jnp
xchg
pop
mov
gs
fisubrs
fmull
cmp
jns
shr
in
jge
jne
adc
push
xor
in
pushf
ss
push
adc
cmp
jns
sub
jns
inc
es
mov
xchg
shrb
pop
repnz
push
xchg
imul
ds
aam
gs
mov
xlat
xor
adc
inc
aaa
ljmp
xor
jmp
inc
out
ss
sub
xor
or
sbbb
mov
insb
lds
inc
fidivs
test
lret
cltd
pop
xchg
mov
push
test
testl
jno
test
xor
add
mov
rcrl
sub
sbbl
or
idiv
test
ja
nop
xchg
jge
insb
insl
mov
add
hlt
ljmp
xor
ds
fs
xor
popf
mov
mov
cs
popf
mov
jno
mov
adc
pop
cltd
lods
xlat
fs
mov
adc
es
ret
push
test
jo
cli
js
mov
clc
xor
into
ret
gs
jne
decl
sbb
cmpsl
push
les
xchg
cmp
dec
into
mov
lret
cs
inc
pop
push
xchg
fcmovbe
pushf
push
pop
jno
cmpsb
repnz
jle
xor
add
mov
out
pop
mov
sub
lea
pop
shrl
jae
jecxz
mov
repnz
imul
stc
xchg
movsb
sub
lods
orb
ss
dec
into
shlb
xor
jns
push
pusha
xchg
lahf
sub
dec
in
in
and
mov
dec
xor
and
stos
enter
cmp
adc
dec
cmc
sar
or
clc
mov
dec
aad
nop
cwtl
xorl
xchg
fdiv
jmp
les
pop
and
xchg
push
jp
ds
jmp
mov
sub
stos
inc
add
xchg
xor
shl
mov
ljmp
test
dec
add
icebp
clc
nop
in
cmp
mov
dec
sahf
ret
lret
pop
mov
ja
int3
cmp
repnz
push
jge
ret
mov
shl
and
repnz
sub
cmp
jg
jnp
test
xlat
aam
es
xlat
cmp
mov
in
dec
pop
push
in
jecxz
roll
cwtl
pusha
lret
dec
in
push
sbb
ficoms
xor
fucomip
xchg
or
out
in
mov
lock
out
stos
les
mov
xchg
jg
in
sub
das
mov
icebp
fxch
out
xchg
sbb
lods
nop
push
add
or
inc
sahf
xchg
ret
add
push
xor
and
xorl
and
or
es
cmpsl
add
xchg
aaa
or
cmp
pop
push
insl
add
and
jl
decl
lret
mov
pop
pop
inc
sbb
ret
cmp
or
cmpsl
test
jnp
mov
fiadds
inc
test
loope
jno
and
push
add
sbb
cmp
fsts
scas
push
dec
and
mov
mov
ds
sbb
adc
outsl
scas
jbe
cmp
pop
out
dec
shrb
inc
adc
add
pop
sbb
mov
fistl
leave
in
loopne
aaa
fnstcw
xlat
inc
lea
int
sbb
dec
jp
mov
mov
les
mov
mov
or
mov
outsl
push
mov
cmp
lret
in
test
sbb
push
jp
popf
add
push
sarl
jb
fnsave
into
scas
ljmp
sub
clc
push
jo
enter
lods
in
inc
arpl
pop
xor
adc
leave
decl
mov
add
int3
arpl
out
imul
int
xor
fidivrs
int
nop
pop
out
into
stos
adc
sbbb
jmp
xor
jns,pt
jns
in
sarb
ret
popf
lahf
subb
mov
adcl
dec
stos
xor
mov
add
iret
dec
ljmp
xchg
stc
sbb
xchg
sahf
std
jo
adc
cmp
arpl
aam
mov
call
js
scas
adc
in
das
add
cmp
jae
movsb
out
or
repnz
idivb
dec
fsubrl
push
sbb
stc
movsb
sub
mov
lret
xchg
pop
das
and
or
push
xchg
push
aam
popa
sbb
pop
fidivrs
jg
dec
dec
pusha
mov
lahf
mov
arpl
mov
stc
lods
nop
js
data16
lds
andb
rcrl
mov
push
repz
mov
add
add
hlt
shl
cmc
mov
out
adc
push
xor
mov
xchg
cmp
mov
dec
add
jecxz
dec
add
and
test
xor
lock
sub
mov
or
push
popa
je
cwtl
test
inc
lcall
xor
add
sbb
fwait
mov
xchg
fisubl
xchg
jl
mov
bound
popa
sbb
and
xchg
cmp
cmp
adc
jbe
stos
jmp
mov
loop
loope
push
shll
test
mov
scas
rorb
inc
mov
or
mov
std
in
or
lds
xor
xchg
cmp
adc
test
mov
movsl
rolb
sbb
int3
sahf
out
dec
pop
jo
or
jnp
scas
mov
aad
push
ss
outsl
rol
jmp
sub
mov
sbb
fisubs
mov
das
repnz
inc
dec
jb
neg
scas
mov
gs
in
dec
lret
sub
into
sahf
jnp
lods
insb
popf
lahf
cwtl
mov
int3
xor
clc
pop
cld
test
dec
add
push
pop
setg
icebp
faddp
loope
mov
lahf
fs
lahf
xchg
or
mov
imul
fisubrl
aad
dec
fs
sub
inc
icebp
cmpsb
pop
or
repnz
lock
mov
into
in
aas
sbb
fwait
loop
jns
adc
ds
mul
jmp
aad
and
cmp
jmp
and
ljmp
aam
subb
mov
ja
ret
out
adc
fnsave
adc
dec
or
divl
push
lret
sahf
lret
movb
mov
rorb
and
sbb
lods
jge
lahf
stos
mov
fldenv
fmull
cwtl
enter
repnz
and
xor
pop
pop
jmp
aas
adc
in
out
rol
fwait
jmp
ror
push
sahf
out
mov
cmp
cmp
test
mov
jmp
fcomip
lret
sub
and
mov
push
sbb
push
jg
mov
bswap
jae
int
add
mov
mov
mov
mov
add
mov
into
int3
loope
test
rorb
std
jp
xor
push
sub
and
imul
mov
adc
jecxz
es
cmp
les
dec
repz
pop
dec
mov
dec
adc
inc
mov
incb
pusha
adc
insl
arpl
out
sub
inc
and
mov
jns
test
dec
addr16
loope
outsb
xor
add
lods
mov
fildll
cmc
dec
ret
stc
mov
xor
ret
sbb
scas
es
adc
mov
add
lret
divb
mov
pop
sti
leave
push
mov
std
mov
inc
pop
jo
xor
pop
fwait
pop
fdivs
sub
cmp
pop
je
pop
cwtl
cmp
and
daa
filds
pop
mov
notb
scas
sub
pushl
fwait
aas
xchg
aas
jne
dec
ljmp
aad
dec
jae
mov
into
insb
imul
out
mov
shrb
lods
mov
or
xchg
repz
xchg
fs
jge
sahf
ja
test
fisubl
cltd
and
add
jbe
fdivrs
push
dec
ja
xor
mov
arpl
pop
add
dec
add
dec
mov
cli
fldcw
shlb
push
scas
and
fbstp
cmpsb
xchg
or
or
dec
aad
inc
out
in
xlat
pop
sub
or
mov
or
dec
inc
add
jecxz
aaa
pop
stos
add
ljmp
mov
cmp
aad
dec
mov
jmp
shll
dec
inc
and
imul
and
mov
pop
push
or
loopne
push
popf
mov
xchg
xchg
xor
mov
lds
jp
xlat
sub
adc
ret
add
pop
xchg
cmpsb
insl
iret
fxch
sbb
imul
test
in
ss
or
mov
adc
jg
pop
push
mov
xchg
sub
xor
dec
lds
aam
mov
or
lcall
fcomps
cmp
cmp
pop
leave
jecxz
pop
and
push
andl
test
pop
push
cmpsb
inc
shlb
push
cld
xchg
sub
add
xor
inc
outsb
aad
fimuls
or
mov
or
int
iret
mov
insl
xor
push
mov
lret
mov
mov
mov
xchg
push
movsb
cmpsl
out
add
cs
xchg
cwtl
push
push
push
xchg
ret
ficoms
aas
and
and
popf
out
shr
xor
test
xchg
xor
mov
mov
lahf
pop
pop
jnp
cmp
frstor
jbe
sbb
int
adc
cmpsl
pop
pop
and
and
xor
sbb
and
aaa
pop
mov
in
jmp
mov
mov
dec
mov
cwtl
jae
scas
lahf
or
push
lahf
es
or
test
das
outsl
add
and
shrb
mov
inc
adc
cmpsl
out
scas
push
xchg
mov
add
out
or
ss
xor
hlt
adc
mov
shlb
test
mov
sub
xlat
fdivr
sub
sbb
call
jge
ret
cmp
or
fwait
sub
psubusw
dec
inc
cmp
push
outsb
loope
xchg
dec
pop
aas
inc
mov
dec
js
lea
test
std
adc
jbe
xor
push
push
inc
ljmp
cmp
fwait
into
dec
scas
add
hlt
lea
push
xchg
jg
inc
lcall
sub
adcb
dec
cmc
adc
fstpl
mov
incl
mov
into
mov
test
adc
in
jae
inc
jmp
pop
std
stc
dec
jo
aad
mov
xchg
or
jp
add
xor
addr16
xchg
push
mov
out
orb
jns
frstor
sbb
js
aad
bound
sub
mov
push
aam
mov
jnp
xor
pop
push
inc
iret
aas
and
popa
push
arpl
jecxz
dec
hlt
pop
mov
xchg
fists
push
push
adc
out
sub
xor
mov
push
dec
push
mov
mov
shll
les
mov
add
or
insl
scas
ret
push
sub
andb
mov
sbb
rolb
xchg
fstpl
lds
jl
xlat
lret
sub
jecxz
pop
and
int
push
lea
mov
loop
cltd
pop
mov
lret
popf
sarl
dec
mov
sub
mov
iret
mov
or
push
lods
push
and
add
jo
stos
insb
mov
pop
mov
loopne
sub
fwait
subl
lahf
fucom
add
bound
iret
mov
movsl
cwtl
lds
mov
out
push
dec
mov
loopne
dec
mov
sub
sub
pop
mov
adc
mov
mov
mov
js
dec
cmp
dec
or
js
fists
fnsave
loopne
mov
xor
movsl
nop
sbb
dec
adc
mov
sahf
pushf
mov
or
xchg
pop
ja
or
in
push
loop
inc
ljmp
push
pop
mov
scas
sbb
lods
xor
in
aad
popf
out
repnz
mov
imulb
fisubl
out
ja
adc
mov
push
jb
xchg
imul
sbb
sti
ror
and
or
repz
sbb
rclb
outsb
xchg
push
icebp
arpl
pop
std
clc
adc
lock
loope
lret
and
test
mov
ljmp
cmpb
fwait
pushl
jg
push
xchg
loope
mov
ss
push
jb
ficoms
rcrb
cmc
shrl
repz
mov
aad
or
sarl
push
jg
jl
repnz
and
sbb
mov
cld
stos
xor
jmp
leave
lea
push
or
and
sub
loope
push
gs
iret
dec
adc
pop
mov
or
add
xchg
push
add
test
add
push
jmp
cmp
rorl
push
fisubrs
and
mov
and
dec
lds
in
add
or
inc
adc
mov
cmc
imull
arpl
lret
es
fimuls
mov
enter
and
jg
push
or
or
insl
sarl
pop
arpl
sub
jecxz
xchg
or
and
mov
adc
outsl
test
dec
mov
dec
fnstenv
jae
rorb
xor
movlps
and
pop
mov
or
orl
dec
mov
icebp
cmpsl
mov
mov
in
or
push
jle
into
add
xchg
popa
jl
push
xchg
xor
out
mov
ds
into
dec
xchg
sbb
scas
int3
into
xchg
sub
push
data16
js
mov
adc
icebp
cmp
mov
xor
cmp
cli
outsl
imul
jb
sbb
lds
imul
loope
mov
mov
fs
hlt
lds
xchg
pinsrw
std
xchg
push
mov
or
movsl
mov
and
adc
inc
cmp
stos
dec
sti
fimull
cmp
and
lret
pop
sub
ds
or
and
insl
xor
shrl
iret
lret
pop
loopne
xchg
pop
shlb
and
dec
or
inc
dec
loop
and
jns
aad
mov
in
and
push
jnp
test
shlb
dec
or
unpcklps
dec
pop
int3
mov
ficoml
test
negl
call
andb
pop
mov
aam
jp
je
das
xchg
aaa
and
inc
sub
mov
push
lds
stc
jb
mov
add
aam
int
add
push
cmp
sbb
sbb
mov
cmp
pop
std
mov
das
inc
add
pushf
sti
xlat
out
into
pop
mov
shlb
xchg
cmp
xchg
popf
cmpsl
addr16
cld
inc
add
jmp
jno
call
rcrl
add
sub
xchg
or
push
popf
inc
out
dec
push
push
pop
ror
mov
pop
mov
sub
lock
xor
pop
call
mov
inc
xchg
insb
aas
push
jle
stos
imul
aam
dec
push
add
ljmp
xchg
std
xor
movsl
scas
aam
in
int3
int3
push
push
aam
push
lods
lret
mov
pusha
fisttpll
lret
mov
inc
dec
fabs
aam
add
sahf
hlt
jae
iret
jbe
push
adc
push
xor
adc
lret
lcall
in
mov
sub
add
int
loope
xchg
push
insb
cmc
or
dec
leave
xchg
jbe
int
test
pop
push
clc
sub
and
xchg
mov
cltd
mov
mov
xchg
mov
icebp
rclb
stc
mov
je
push
stos
sub
aaa
dec
mov
push
pop
dec
xchg
mov
xor
sub
sbb
mov
mov
jmp
in
scas
jmp
pop
mov
pusha
rclb
mov
adc
cltd
mov
cwtl
dec
cmc
leave
ret
mov
jo
fwait
fs
jmp
push
xor
imul
cmp
into
and
and
xchg
int3
add
xor
or
cmp
mov
setp
fimull
xor
dec
push
push
adc
mov
insl
std
negb
adc
mov
mov
popf
add
leave
cmp
movsl
jae
mov
push
cmpsb
mov
cli
and
fisubs
test
in
dec
repnz
out
inc
mov
xor
adc
sahf
aaa
add
shlb
aas
mov
outsl
cld
or
ljmp
push
loopne
jecxz
cmpsl
xor
and
iret
fidivrl
out
in
pop
mov
dec
sub
stos
push
mov
mov
andl
movsl
nop
and
cmp
add
popf
push
ficompl
sar
inc
cltd
pusha
aas
js
and
int3
or
pop
mov
test
cmpsb
frstor
cmp
imul
lds
add
add
enter
xor
into
pop
mulb
clc
jo
lds
or
popf
cmp
cmpsb
or
inc
int3
iret
jo
scas
xlat
jmp
cwtl
shr
mov
pop
xchg
xchg
jp
in
cwtl
adc
hlt
fcmovnb
mov
repnz
adc
pop
outsl
out
cmp
pop
test
inc
mov
xlat
lret
stc
nop
adc
add
sti
pop
hlt
cli
loope
sub
push
nop
lcall
mov
data16
js
rcll
imul
push
push
sbb
mov
out
cmpb
into
jge
js
jp
mov
xorb
sub
add
xchg
sahf
sub
sbb
stos
adc
ret
fchs
jg
pop
ret
outsb
inc
lret
add
jno
push
push
stos
push
lret
aad
dec
jmp
inc
data16
clc
sub
inc
mov
rdmsr
fs
loopne
aas
mov
xchg
imul
xchg
jne
jns
into
add
cmp
sub
and
xchg
lock
pop
mov
and
lods
cmpsl
xlat
fsts
xchg
push
pop
mov
push
mov
inc
jl
shrb
dec
loop
jbe
lret
mov
roll
das
dec
repnz
xchg
lret
mov
push
sub
xlat
push
xchg
movsb
xchg
xchg
mov
and
push
cmp
ret
mov
add
mov
scas
shld
mov
fldl
scas
jb
inc
xor
push
or
jnp
rolb
imul
mov
push
ret
popa
add
lcall
icebp
jae
repz
cmp
mov
pop
push
jmp
lret
popa
push
ljmp
jg
pop
push
das
sbb
jnp
sbb
scas
jle
popf
push
cmp
lds
stc
aad
imul
ljmp
popa
icebp
xor
daa
and
lret
cmp
xchg
mov
mov
rorl
aas
sub
push
jo
push
lock
in
mov
scas
jge
int3
cwtl
add
mov
mov
sub
jnp
jge
ret
pop
or
pop
jae
adc
pop
mov
pop
aaa
xor
adc
cltd
jle
pop
cs
xor
cli
inc
insb
jno
mov
jl
pop
lds
cmp
mov
and
loop
sub
inc
dec
fcom
fwait
pop
pop
repz
in
mov
adc
mov
xchg
repnz
push
pop
jmp
aaa
push
mov
inc
inc
test
scas
negb
adc
jne
movsl
dec
add
mov
or
lretw
aas
in
aaa
dec
pop
das
out
call
jae
popf
enter
sbb
cmp
fisubl
pop
rclb
iret
inc
and
xchg
lods
pop
scas
lret
and
into
rcrb
xchg
add
add
stos
fwait
dec
jae
or
out
xor
and
rclb
jge
xchg
cltd
push
sub
pop
js
add
in
jo
mov
sub
and
add
divl
scas
ret
lock
daa
pop
jmp
pushf
cmp
or
nop
push
jg
xor
push
fwait
dec
or
pop
lcall
pop
jmp
jne
cs
test
jg
std
xor
ret
and
out
je
subl
sub
pop
mov
jns
jb
jmp
js
mov
mov
xor
mov
xor
je
sbb
in
in
mov
je
xchg
test
xchg
inc
out
mov
push
mov
jns
gs
jns
ja
data16
dec
inc
in
or
pushf
gs
test
dec
sbb
es
xorl
jnp
sti
add
hlt
lods
test
dec
xor
repnz
in
ret
push
mov
stc
xchg
mov
or
or
or
jg
insb
out
negl
mov
mov
sahf
dec
dec
filds
push
fs
or
jle
fs
push
xchg
repnz
sbb
ds
add
mov
and
leave
adc
cltd
sti
mov
cmp
push
rcr
mov
repnz
adcb
dec
inc
insl
clc
inc
rorb
jp
fidivl
inc
add
xor
repnz
cmp
cmp
or
xchg
les
and
sbb
imul
jns
jg
ret
add
mov
xchg
fwait
mov
fwait
cmpsb
xor
nop
hlt
dec
sbb
pop
mov
or
bound
or
and
push
xchg
in
icebp
pusha
bound
jns
pop
inc
scas
dec
and
setl
pop
mov
or
and
jo
rcrb
out
gs
mov
and
cmp
jo
sbb
cwtl
inc
add
jp
pop
pop
shll
pusha
cwtl
cmp
ret
lods
popa
mov
popf
stos
push
push
mov
scas
mov
imul
mov
pop
lahf
stos
mov
je
pop
sahf
and
vpunpckhbw
and
xchg
sar
arpl
mov
jb
mov
fsub
inc
dec
xor
insl
aad
mov
subl
in
iret
xchg
add
fwait
cmp
ret
lcall
cs
xchg
cmp
ljmp
sub
xor
std
xchg
lea
int3
jno
adc
test
mov
hlt
adc
pop
jp
jge
lods
fs
jne
mov
cmpsl
push
mov
sub
mov
dec
mov
iret
dec
xchg
repz
inc
mov
and
ja
lret
mov
mull
cltd
xor
mov
ret
pop
mov
scas
xor
fbld
movsl
cmc
push
mov
sub
cld
inc
sub
and
or
pop
lahf
orb
mov
pushl
roll
enter
xor
inc
fildll
insl
sub
aaa
call
stc
mov
call
sbb
sti
test
sbb
mov
shrl
test
push
adc
out
dec
popf
into
pop
arpl
ret
mov
mov
out
test
jl
hlt
mov
fisttps
movsb
dec
aas
mov
mov
adc
mov
and
lret
cld
stc
popa
mov
dec
in
fcoms
xor
negl
adc
xchg
stc
stos
dec
in
imul
adc
push
lods
mov
sbb
sub
fs
pop
fmull
lea
nop
test
out
into
cmpb
mov
push
dec
push
sbb
or
push
sti
mov
mov
sarl
mov
jnp
imul
sti
inc
and
sub
mov
stos
mov
mov
aam
incb
pop
push
pop
sarl
test
adc
int3
adc
outsl
fwait
jg
scas
ja
int3
loop
push
dec
divl
fnstenv
mov
mov
mov
aas
pop
mov
jbe
dec
lock
or
test
ret
faddp
rorb
xchg
inc
cli
fs
fwait
test
cmpsb
add
and
mov
imul
adcb
xchg
xor
mov
mov
ljmp
inc
mov
lcall
lahf
push
pushf
pop
daa
push
adc
push
lcall
in
or
push
ds
jg
mov
cmpsl
dec
xor
ja
inc
popa
call
data16
mov
out
mov
leave
ret
and
test
xor
ret
out
pop
or
mov
jno
shl
push
add
inc
pop
pusha
cmpb
pop
jg
in
jnp
mov
adc
jno
xor
push
mov
cmp
inc
jmp
hlt
push
sbb
insl
sbb
xchg
out
negb
dec
push
inc
or
jl
push
rol
imul
pop
lea
xor
rep
stc
gs
iret
bound
testl
sub
xor
or
int3
in
cmpsl
dec
add
pop
add
cmpsl
into
push
int3
leave
and
test
in
inc
pop
add
int
adc
adcb
icebp
sti
sbb
xor
dec
sti
sub
int3
cmp
js
addr16
loop
push
cltd
or
inc
mov
ja
cltd
jg
out
ret
popa
mov
mov
adc
loopne
jae
lret
xchg
dec
jle
das
add
jle
sub
lret
mov
add
and
popf
sub
mov
sbb
mov
popf
loope
xchg
sbb
mov
lret
loop
add
inc
cmp
ret
outsl
in
cmp
out
nop
pop
popa
sbbb
nop
inc
adcl
dec
sub
mov
pushf
cmc
arpl
adc
xchg
xor
outsl
xor
sub
dec
out
lcall
outsb
outsl
mov
mov
rorl
jge
pop
sahf
jb
adc
repz
adc
mov
cwtl
cmp
cld
jo
je
push
mov
test
jbe
adc
mov
push
push
arpl
mov
ret
addr16
imul
adc
scas
add
cld
jge
call
sar
adc
inc
pop
pop
ret
inc
xor
ss
push
sbb
sar
xchg
sub
ret
and
mov
iret
cmp
incl
push
fwait
push
pop
dec
pop
cmpb
xor
imul
mov
scas
mov
divl
mov
call
cmp
mov
sub
addr16
push
cmp
or
arpl
cld
xor
xchg
rcrb
leave
xchg
push
adcl
cltd
mov
std
movsb
mov
mov
push
cld
mov
add
inc
mov
cmc
mov
jecxz
in
sbb
inc
pop
push
mov
mov
arpl
add
fnstsw
std
daa
imul
addl
in
push
or
sbb
stos
xchg
inc
sbb
inc
imul
or
sub
lods
lahf
cld
jle
xor
jo
shlb
sub
mov
cmc
inc
and
dec
or
lds
shll
ret
jle
in
lods
je
dec
inc
ret
xchg
mov
out
xchg
and
in
add
xor
add
ljmp
aam
dec
fimull
subb
sar
mov
jmp
pop
out
xor
jle
inc
dec
pop
call
movsl
pushf
into
cs
out
pop
pushf
ret
jns
push
mov
subl
aaa
out
repnz
out
aam
mov
push
addr16
mov
mov
fcomip
sahf
push
fbstp
mov
mov
add
fcomip
sahf
mov
fcompl
sbb
mov
mov
and
push
sbbb
lahf
jge
cmp
push
jg
and
mov
mov
cmc
cmp
mov
xchg
adc
cltd
jge
inc
ljmp
cmp
in
cmp
cwtl
test
adcl
mov
add
adc
mov
shl
fdivs
mov
bound
ret
sahf
ret
mov
icebp
cmpsl
mov
cmp
mov
inc
dec
inc
xchg
mov
je
mov
jge
sbb
cmp
jmp
mov
and
xchg
push
orb
dec
mov
pusha
sub
sbbl
xchg
add
pop
clc
jne
nop
icebp
mov
cmp
jno
pop
push
xor
ss
mov
xlat
cmc
or
cs
pusha
xor
pop
sub
xor
lcall
inc
outsb
cmp
lret
push
add
insb
out
xor
pushf
or
mov
repz
in
xor
jbe
push
sub
cmc
outsb
std
or
sub
sbb
int
pop
pop
fwait
push
loope
scas
and
inc
ret
xchg
lret
dec
inc
rorl
out
add
repnz
lods
cld
and
iret
cmpl
sub
dec
icebp
jle
movsb
sbb
jp
imul
cld
jno
mov
ds
sbb
sbb
sbb
stos
das
mov
add
insb
mov
aaa
mov
mov
dec
imul
mov
daa
push
test
push
cmp
add
mov
aaa
repz
adc
or
cmp
mov
push
push
fwait
push
int3
das
dec
mov
cmp
adc
sbb
jno
stos
out
jp
sbb
push
inc
ss
push
inc
mov
pop
in
cmpsb
cmp
jo
cmpsb
mov
scas
aam
aam
dec
sub
lds
push
pushf
pop
pop
jae
sub
mov
repnz
xlat
cmp
hlt
mov
inc
pop
lret
fcoms
cs
leave
inc
imul
movsl
mov
scas
iret
repnz
push
dec
push
jno
push
rcrb
mov
das
bound
mov
cld
inc
popf
xor
jmp
cltd
push
ret
xorb
aam
mov
xor
mov
pushl
jge
sub
push
ret
cmc
mov
test
incb
insl
imul
lods
push
mov
sbb
int3
decl
sub
jl
test
add
add
ja
out
adc
push
jo
ret
sub
push
ds
cld
push
sub
push
xchg
fldt
dec
mov
xor
movsl
cmp
scas
cmp
test
add
mov
sub
pop
pop
pop
dec
inc
adcl
adc
popa
and
incb
jb
lahf
sub
int3
jg
rcll
cwtl
mov
dec
ret
inc
xor
ss
das
bound
xor
ds
into
sbb
sbb
lock
pop
je
cwtl
push
cmpsb
fcomi
mov
pop
pop
jns
sub
jae
or
push
cld
jg
imul
subb
mov
xor
sub
das
or
mov
pop
or
mov
and
jg
add
push
js
aas
cmc
into
enter
push
xchg
lret
mov
or
sbb
movsl
loopne
iret
cmp
aas
test
clc
insb
sbb
mov
popf
pop
mov
fisttpll
lds
imul
scas
sahf
call
xchg
xor
mov
jl
popf
fidivrl
es
test
pop
arpl
call
and
fcmovnbe
sbb
addr16
and
push
dec
mov
repnz
or
jl
shll
pusha
mov
mov
clc
add
cmp
lcall
xor
sar
inc
call
fstl
fs
je
push
lock
das
les
jp
das
cmc
stc
shrl
cwtl
adc
int3
cmp
adc
adc
fstl
xchg
imul
sub
jae
mov
adc
sub
sbb
mov
dec
or
add
and
and
cmp
adc
push
mov
sub
rcll
ja
sub
mov
xlat
rcrl
or
adc
cmp
pop
inc
sbb
inc
loopne
dec
jnp
sahf
sbbl
push
sub
fldenv
sbb
sub
xchg
add
jnp
scas
pop
adc
leave
out
jle
shrl
dec
mov
in
stc
shrb
or
add
movsb
mov
mov
pop
dec
and
mov
aam
inc
cmpsb
scas
push
in
test
pop
outsb
mov
jge
xchg
andl
loop
cmp
cwtl
xchg
jmp
pop
mov
xor
in
push
out
ds
xchg
push
or
mov
push
push
popf
in
cmp
push
loop
dec
in
lods
hlt
mov
or
sbb
jle
inc
mov
add
xchg
xchg
in
shr
dec
lret
das
mov
lock
xor
and
xchg
sub
cltd
pop
leave
movsb
movsb
mov
aas
sbb
pusha
jp
shll
or
pop
popf
bound
cmpsb
jg
data16
mov
lea
int3
xlat
aad
sub
nop
stos
aam
mov
sahf
xor
push
mov
xor
adc
cmpsb
rorb
sbb
hlt
int
daa
dec
rcll
lock
sub
inc
icebp
mov
wrmsr
cmpsb
mov
adc
pop
xor
inc
in
std
cltd
add
jo
xlat
cmp
mov
out
cmp
stos
xchg
or
sbb
scas
icebp
fwait
push
sbb
dec
into
es
sub
mov
pushf
adc
mov
sub
les
mov
cmp
xor
push
fstpl
fistpl
dec
loope
and
es
mov
into
mov
push
nop
push
xor
negl
mov
scas
mov
mov
add
cwtl
gs
out
stc
addr16
cmpsb
shll
add
or
push
xlat
stc
icebp
hlt
lds
pop
arpl
sbb
leave
cltd
pop
and
mov
pop
dec
leave
roll
flds
imul
mov
mov
sbb
mov
mov
mov
or
mov
stos
rep
and
idivb
xchg
fbld
pop
inc
es
jbe
jb
mov
jl
popa
addr16
les
in
test
ss
scas
and
add
ret
stc
mov
cmpsl
sub
sbb
andb
inc
in
pop
push
xlat
pop
xlat
shlb
pop
dec
dec
out
mov
repz
add
xchg
jno
int3
dec
loop
mov
repnz
xor
push
mov
add
or
fnstenv
push
pop
popa
add
daa
adc
dec
push
fcoms
pop
shlb
pop
pop
push
scas
dec
clc
fwait
mov
sbb
fldl
lods
push
jnp
scas
outsl
fs
mov
test
inc
aas
mov
cs
sbb
ds
and
out
jmp
incb
dec
fs
xchg
push
ja
fwait
mulb
sti
stos
and
or
insb
data16
fcomp
xor
and
jno
test
sub
imul
js
and
test
mov
cltd
inc
push
pop
pop
je
or
mov
pushf
addr16
stos
dec
bound
and
pushf
movsl
jns
sahf
in
jg
das
and
add
outsb
sub
jge
arpl
addb
mov
or
testl
cmp
imul
adc
sub
adc
imul
mov
fnstcw
xchg
mov
clc
jns
jp
inc
aam
ret
add
xor
cli
jp
xchg
arpl
jge
rep
sub
or
pop
shrb
mov
mov
inc
les
repnz
adc
add
sbb
lods
mov
xor
mov
not
sbb
bound
fmul
imul
call
xchg
push
test
dec
decb
arpl
sbb
imul
shlb
mov
mov
mov
arpl
cld
cmp
repz
adcb
sti
dec
in
gs
lods
mov
xor
add
mov
push
mov
sbbl
shrl
mov
js
sub
adc
jl
mov
in
rorl
or
out
mov
jo
loop
and
insl
fldt
push
sub
dec
xor
or
jno
loop
xor
test
fisubrl
movsl
pop
jne
leave
xor
cmp
sbb
stos
ds
dec
imul
mov
andl
or
rolb
jbe
sub
iret
dec
scas
and
ja
push
outsb
xchg
aam
loop
add
dec
push
aam
mov
in
out
sbb
das
fimuls
je
xchg
loopne
xor
bound
xor
mov
mov
outsl
or
push
decl
jge
mov
scas
pop
daa
dec
xchg
imul
and
dec
pop
pushf
popf
ja
xchg
push
inc
lea
lods
popa
jmp
or
push
into
pop
jp
mov
sbb
std
rcl
xchg
inc
push
ds
fwait
adc
lea
sub
cmc
imul
fs
ret
orl
mov
xchg
out
jae
push
cmp
jne
adc
mov
fwait
pop
inc
or
jle
in
or
lods
mov
ds
xchg
fcmove
movsl
sub
or
mov
scas
push
jge
insb
pop
test
pop
jne
movsl
ret
mov
fidivrl
fildll
mov
adc
xchg
mov
or
mov
mov
lds
mov
inc
inc
add
adc
in
add
dec
xor
lods
adc
cld
dec
in
push
jecxz
add
ret
scas
loope
mov
bound
cmp
sbb
dec
dec
jmp
cld
loopne
flds
popf
negb
dec
mov
jge
ret
lods
jl
outsb
sahf
sbb
push
jae
fisttpl
push
dec
add
mov
fisubrl
movsl
cmp
cltd
mov
inc
fdivp
sub
fcmove
push
cmp
jge
mov
add
mov
add
inc
cmc
pop
in
dec
orb
jb
imul
mov
pop
das
mov
adc
iret
pop
xchg
xchg
cmc
iret
int
loope
cs
outsb
push
mov
add
loop
les
insb
add
jl
les
inc
nop
jae
jno
jmp
stos
pop
add
rsqrtps
loopne
sub
nop
dec
out
adc
sarl
je
out
inc
and
js,pn
jge
cmc
movsb
fs
gs
notb
cmp
into
cmpsl
mov
or
stos
xor
cmp
pop
sbbb
mov
or
lcall
js
push
jmp
lret
dec
mov
mov
dec
push
fwait
dec
cwtl
sti
fisubrs
neg
sbb
mov
andl
test
pop
jmp
sub
out
cmpl
aam
ds
push
or
mov
cld
stos
imull
adc
insb
js
pop
sub
ja
scas
mov
repnz
cmp
fmul
sub
rcr
insb
or
mov
push
movsl
xchg
push
push
xor
lods
pop
scas
aad
imull
clc
addr16
ja
jg
lock
mov
je
adc
mov
imul
ljmp
xchg
push
cmp
and
xchg
cmp
fisttps
cmp
loope
lock
jo
push
call
xchg
add
pop
fcoms
leave
pop
adc
and
mov
xchg
lods
lret
cwtl
sbb
xchg
scas
lods
xchg
movsb
rorb
mov
xchg
adc
mov
pcmpgtw
sub
mov
push
pop
lahf
add
aam
aam
aas
pop
pop
add
mov
std
xchg
sub
cmp
int3
jge
movl
icebp
pop
cli
in
push
lret
popa
pop
fcmovnbe
aas
enter
pushf
push
xor
jno
pop
xorl
inc
das
jb
mov
out
cmp
lret
cs
dec
xchg
clc
dec
cmp
adc
fcoms
enter
dec
sti
or
insl
lock
imul
inc
or
or
in
xchg
lods
dec
jb
jo
lcall
cmpsl
bound
pusha
cltd
and
push
adc
stos
dec
sub
pop
mov
imul
and
add
push
cmove
in
sub
xchg
push
pop
mov
rcll
push
push
add
jl
adc
jns
lret
inc
push
loop
push
and
stc
imul
inc
rol
test
loop
aaa
arpl
inc
aaa
adc
dec
mov
inc
icebp
fistpll
ljmp
pop
ljmp
inc
push
daa
das
mov
and
jmp
cmp
and
fcmove
mov
ficompl
inc
fcmovnb
insl
aam
push
addr16
bsf
cmp
adc
push
lea
xchg
daa
shlb
movsb
push
test
inc
mov
pop
xor
aaa
sbb
push
lret
inc
repz
in
xor
outsb
and
rorb
sar
dec
inc
lds
pop
int
mov
cmpl
int
leave
dec
adc
inc
mov
push
add
shr
adc
xchg
fldcw
iret
mov
repnz
cmp
fldcw
xchg
enter
xchg
inc
popa
dec
movsl
test
jg
pop
sbb
or
int
lock
fs
and
fsubs
lods
and
mov
xchg
aad
add
mov
xchg
into
xchg
pop
jge
fisttps
push
sbb
insl
cmpsl
add
std
mov
sbb
sub
imul
ficoml
lods
test
icebp
jge
pop
dec
ret
add
inc
sbb
cmp
xor
cli
pop
sbb
jl
sbb
das
mov
lock
pavgb
xchg
add
mov
std
push
inc
cmc
aas
inc
sbb
or
cmpsb
enter
jns
repz
mov
cmp
repz
out
push
pop
pop
ljmp
test
dec
mov
or
out
jns
xchg
cmpsl
add
or
cmp
mov
push
lahf
addr16
add
adc
mov
fsub
xor
sbb
out
xchg
fisubrl
jns
mov
and
daa
sahf
push
fidivrl
ds
rolb
sub
incb
mov
xchg
cmpsb
jecxz
pusha
and
lahf
lahf
jnp
lods
push
dec
mov
pop
fistpll
iretw
inc
push
dec
les
inc
jae
cli
lods
sub
aas
int3
push
pushf
rorb
cmp
pop
mov
inc
xchg
stos
test
sbb
jg
pop
sbb
xor
jb
adc
roll
enter
enter
loopne
leave
divb
je
out
sub
inc
adc
test
and
int
aaa
clc
jae
lea
shrb
jmp
test
xchg
int
leave
clc
leave
out
pushf
jnp
jge
faddl
je
iret
insb
test
fdivrp
lahf
sub
mov
pop
sti
aad
lea
stc
popf
in
insb
nop
ljmp
in
pop
jl
in
sub
and
mov
negl
push
push
lret
sbb
sub
inc
mov
pop
xor
mov
inc
jb
inc
sub
pop
pop
test
dec
or
cmpxchg
mov
insl
mov
push
inc
jae
jecxz
adc
fldenv
push
inc
xlat
int3
jns
faddl
lret
popf
and
outsl
jbe
pop
xchg
xchg
and
iret
int
lret
inc
out
push
aaa
fldl
div
mov
xorb
push
imul
mov
cmovp
cmpsl
xchg
clc
aaa
dec
and
clc
ljmp
jns
int3
ffree
adc
leave
inc
inc
out
aas
mov
leave
adcb
add
pop
shl
dec
loopne
dec
xchg
sbb
mov
pop
faddl
xchg
call
adc
xor
cmp
lret
inc
mov
fs
fs
in
lods
or
rorl
faddl
xor
dec
nop
test
cmp
sub
fistl
pop
fldt
insb
insl
notl
pop
pop
and
mov
dec
imul
imul
dec
dec
lds
rcrl
or
xor
stc
and
fs
or
movsl
adc
mov
mov
xorb
ljmp
insb
fisubrs
jge
push
fsub
mov
movsb
lea
pop
dec
pop
pop
or
dec
out
hlt
das
aaa
lods
sub
mov
lock
push
inc
pushf
out
inc
iret
xchg
cmc
inc
xchg
fistps
ss
inc
jbe
adc
add
dec
push
addr16
add
je
rolb
insb
js
in
shr
dec
jno
stos
in
in
in
lcall
insb
dec
mov
or
into
icebp
imul
frstor
iret
jbe
mov
mov
cmp
push
mov
test
test
pop
sbb
sub
test
cmp
mov
ror
leave
sub
jg
push
call
testb
inc
call
in
push
popa
adc
dec
mov
jno
mov
mov
jmp
lea
adc
sbb
lret
sbb
sub
mov
sbb
jno
sub
pusha
aaa
or
adc
movsb
lea
cmp
pop
sbb
adc
xlat
mov
dec
or
in
testb
mov
mov
push
mov
pop
sbb
xchg
sbb
pop
lea
pop
mov
lahf
je
mov
movups
ret
cwtl
xchg
jb
push
ds
xchg
lahf
rcrb
mov
ljmp
sub
cmp
push
mov
insl
or
mov
in
adc
push
imul
pop
sbb
xor
inc
inc
cli
scas
lcall
aam
js
lret
sub
dec
jo
addl
xchg
adc
jo
cld
mov
lahf
pusha
or
aam
rcr
sti
push
sahf
sbb
aas
shlb
fdivp
lcall
fcomps
add
in
call
aaa
dec
aad
inc
or
fimuls
cmp
jecxz
cmp
test
jl
ret
xorl
fistps
sbb
inc
and
repnz
shlb
nop
rclb
dec
icebp
fmull
or
or
jge
js
adcb
or
aas
jg
dec
lahf
cld
insl
loope
insl
add
mov
pop
xorb
mov
aas
lds
cmp
lahf
adc
or
or
leave
adc
nop
lahf
inc
inc
fildll
daa
mov
imul
fldl
scas
mov
pop
vcvtps2pd
icebp
adc
sbbl
aaa
bound
mov
dec
mov
repz
sahf
shll
stos
dec
jmp
pop
cmpsl
sbb
ret
popa
imul
insb
movsl
xor
inc
daa
add
inc
loop
sub
mov
mov
hlt
mov
popf
test
inc
icebp
mov
aaa
loop
mov
out
mov
pop
or
mov
aaa
hlt
jns
jnp
daa
mov
incb
pop
jecxz
jl
repz
out
jle
xchg
rorb
push
ds
pop
shl
or
iret
lcall
xchg
pop
fsubp
lock
or
paddw
cmp
mov
aam
lcall
push
dec
adc
push
icebp
in
pop
jmp
and
jecxz
aad
fidivl
jbe
ret
pop
dec
test
jmp
mov
xchg
icebp
aam
mov
xchg
mov
sub
mov
cmp
dec
aad
adc
pop
jo
fwait
mov
addr16
scas
cmpsl
dec
fs
xor
fidivrl
dec
push
ds
mov
mov
adc
mov
cmp
js
cmc
push
lods
push
mov
cmpl
xlat
push
xchg
ljmp
sarl
ljmp
out
jns
ds
loopne
pop
inc
fistpl
xchg
cmp
sbb
add
int
out
sub
outsb
sbb
add
cmpsl
stc
inc
test
and
cmp
orl
rcll
mov
outsb
in
push
adcb
sbb
mov
sbb
xor
sbb
cmc
cmpsb
shr
inc
jno
jb
push
sti
or
adc
loopne,pn
jo
aas
adc
lods
jmp
jp
orb
jb
repz
pop
xor
add
push
cmp
popa
shl
xlat
jnp
jle
adc
sub
pop
or
pop
cmc
mov
cmp
test
cmp
push
mov
test
insl
gs
sahf
movsl
flds
into
pop
insl
loopne
adc
pop
loop
mov
scas
in
jmp
loop
lahf
scas
mov
jmp
loopne
inc
ja
hlt
shl
dec
mov
aam
push
call
ret
pop
repnz
je
movsl
xor
cmp
cmp
xchg
ljmp
leave
dec
mov
adc
movsb
jb
mov
fiaddl
or
pushf
dec
inc
inc
push
mov
xchg
add
js
rorl
call
fcoms
mov
icebp
imul
fst
cs
and
xchg
mov
inc
hlt
add
mov
push
jno
adc
mov
aad
dec
jns
mulb
mov
inc
divb
pop
xor
fbld
lods
pop
xchg
push
mov
insl
or
push
push
push
ror
xchg
push
pop
dec
sbb
aas
test
mov
daa
xchg
and
or
ret
lcall
or
adc
mov
in
fwait
test
inc
pop
mov
xor
or
cmp
movsl
stos
mov
cwtl
or
mov
add
stc
cmc
mov
test
rol
int3
movsb
jg
fs
out
stos
push
out
scas
or
fcoms
mov
fnsave
xor
ret
inc
xchg
dec
ret
loop
sbb
mov
insb
cli
shlb
xchg
adc
inc
mov
adc
adc
sub
gs
inc
clc
jp
sbb
pop
test
data16
js
sub
fstl
and
sbb
movsb
xchg
mov
inc
xchg
mov
in
insl
push
rcrl
mov
xor
imul
lods
fbstp
push
ror
outsl
lods
inc
push
inc
into
xchg
jb
jno
jle
fisttpll
leave
dec
mov
inc
jb
out
loop
mov
xor
dec
lret
loop
add
jb
cmp
xchg
add
jge
mov
inc
shr
jmp
fbld
or
or
pop
mov
in
inc
mov
mov
mov
and
sbb
iret
rcrl
out
sub
xor
push
pop
dec
fdivrs
and
mov
inc
jle
push
sub
shl
dec
xchg
cmpsl
imul
int
add
testb
xchg
aad
jle
cmp
aad
lods
pop
gs
fidivrs
inc
test
pop
add
bnd
push
iret
je
test
dec
xor
imulb
adc
sti
jo
push
xchg
mov
iret
ret
inc
insl
sbb
in
xchg
cmpsb
cmp
js
push
add
shlb
dec
jp
cmc
mov
mov
lcall
mov
jno
pop
push
pop
mov
xor
aas
xor
xor
pop
stos
sbb
out
xchg
movsl
mov
incb
lea
jns
daa
jl
mov
test
jae
leave
sub
insl
out
sub
aam
and
movsl
cltd
cltd
dec
aas
fdivl
and
mov
push
xchg
je
cmc
mov
les
push
mov
mov
nop
add
test
scas
add
pop
cmp
jnp
andnps
mov
lahf
sbbl
rol
sbb
dec
mov
mov
push
sub
ja
jg
lret
sub
pop
pop
es
aas
xor
mov
test
cmpsl
shrb
sahf
jg
push
mov
jecxz
jmp
jge
fwait
pushf
cli
lds
sub
mov
push
mov
cld
adc
mov
jge
movsl
adc
pop
movsb
inc
iret
push
rcll
xlat
repnz
lock
int
mov
xchg
loop
repz
jne
cwtl
ss
push
push
xor
sub
insl
ret
inc
push
mov
ljmp
or
push
out
adc
adc
jno
pop
iret
sbb
adc
xchg
or
insl
daa
inc
and
jmp
push
dec
int3
jo
out
pop
xor
in
mov
lds
pop
sub
bound
cmp
insl
dec
xchg
or
das
dec
cmp
pop
movsl
push
push
jmp
pop
add
shr
mov
push
inc
rorb
js
shrb
jb
adc
cmp
pop
pop
push
enter
push
sub
sbb
aaa
mov
and
scas
int3
ljmp
or
mov
inc
push
push
add
mov
ss
add
mov
ffree
add
mov
loopne
ret
adc
outsl
adc
sets
out
dec
or
cli
or
int
dec
dec
mov
mov
pop
xchg
cmp
adc
sub
sub
cwtl
shll
cli
subb
test
call
std
adc
dec
sbb
fs
jl
push
jns
test
int3
or
popf
inc
scas
getsec
mov
ja
test
popa
inc
mov
adc
sbbl
xor
lods
dec
pop
aaa
sbb
dec
add
lock
jmp
or
inc
fidivrl
rolb
mov
lahf
inc
mov
int
stos
loop
sub
stc
and
inc
inc
ja
or
add
or
call
in
shlb
and
ret
cmp
pop
in
popf
int3
inc
insl
pop
inc
inc
ror
mov
pop
push
popf
leave
mov
xchg
les
mov
mov
pop
mov
mov
nop
stos
in
stc
cmp
push
mov
std
and
add
sub
test
shll
mov
jnp
dec
bswap
cwtl
add
fistpl
adc
pop
xor
lret
jo
mov
xchg
adc
clc
popf
mov
inc
inc
pushf
inc
xchg
les
xor
ror
fadd
inc
idivl
in
out
movsb
and
roll
add
jbe
mov
out
xor
xchg
lret
fists
mov
add
testl
jns
cltd
cmp
adc
pop
pop
int3
xor
dec
push
mov
les
andb
and
ret
xchg
or
inc
or
popf
pushf
or
test
jp
sbb
int3
test
bound
push
test
or
mov
or
in
mov
sbb
je
push
mov
in
daa
adc
subps
repnz
mov
mov
rclb
push
push
adc
je
mov
inc
pop
cmpsl
xchg
pop
cmp
test
xchg
pop
sub
test
cwtl
mov
inc
outsl
mov
and
or
pushf
test
dec
sbb
cmp
add
pop
cwtl
sbb
jb
push
mov
popf
lret
ret
cltd
inc
cmp
fwait
mov
jp
xorl
fstpt
popa
mov
lods
inc
sub
les
rol
jno
hlt
negl
push
jne
rorb
mov
rcr
cltd
in
lret
ds
add
sti
shll
insl
push
repz
mov
xor
ret
and
in
inc
or
icebp
mov
jge
push
sub
dec
sbb
call
xor
cmp
lods
ror
imul
fnstenv
jecxz
or
pop
cmp
es
pusha
mov
iret
cmp
xchg
dec
inc
js
mov
in
push
inc
adc
dec
add
rorb
add
add
cmp
jle
std
jbe
dec
int
cmpsb
or
and
insb
out
and
decb
inc
dec
xor
arpl
xlat
sahf
pop
xor
fcmovnb
jae
mov
xor
inc
add
cmp
dec
add
dec
dec
iret
mov
lret
test
push
xchg
lods
xor
lea
sti
aam
xor
in
out
xchg
int
jmp
pop
ret
xchg
xor
aam
xchg
mov
xchg
cs
sub
jae
mov
out
push
adc
ret
xor
popf
mov
scas
stos
mov
or
dec
sub
iret
jge
hlt
xor
adc
scas
xlat
lods
push
pop
icebp
sub
sub
scas
cmp
mov
call
xchg
cmpsl
decl
lcall
pop
icebp
mov
das
sahf
in
les
add
enter
out
es
int
jb
mov
loop
adcl
rcrb
add
dec
sbb
imul
jno
sub
fnstcw
sbb
sub
xlat
mov
xor
push
test
sbb
enter
cmpb
inc
and
sbb
lahf
add
aad
push
jmp
stc
leave
test
mov
pop
roll
call
xor
les
add
cs
cltd
mov
aam
sbb
lret
bound
mov
popa
ficoml
jo
cli
orl
sbb
mov
lods
xchg
shl
jp
rclb
add
sub
xor
mov
pop
stos
push
pop
pusha
adc
arpl
add
adc
pop
mov
cmp
jmp
and
xor
pushf
inc
and
jp
jge
test
lock
adc
or
movb
wbinvd
sbb
pushf
dec
scas
cmpb
fstl
enter
outsb
push
cmpsl
adcl
test
mov
repz
in
pop
fwait
xor
push
inc
xchg
fmul
cmp
adc
pop
mov
push
daa
or
push
lcall
in
cmp
push
xlat
mov
mov
cltd
repnz
sub
jns
fcoms
adc
in
addb
mov
adc
test
jmp
nop
mov
sub
push
fdivp
fwait
enter
fsubrs
mov
pop
jle
inc
push
call
cmp
push
ja
xchg
pop
sbb
add
mov
cli
jg
xor
stc
andl
repz
and
adc
notl
fstp
int
outsl
jns
call
push
sbb
shrb
icebp
adc
jbe
add
sub
lods
ret
inc
repnz
mov
jno
popf
lcall
in
jle
call
mov
mov
jl
or
cmp
fistpll
fs
mov
rcrl
loopne
loopne
xor
mov
mov
fisttpl
mov
xor
data16
mov
push
inc
or
arpl
xchg
add
mov
mov
lock
mov
sbb
xchg
cmp
in
and
jno
jg
sahf
outsl
fildl
imul
mov
or
xor
inc
js
mov
inc
outsb
add
popf
jle
rcll
cld
mov
loope
scas
push
test
test
cmp
sbb
cmpb
push
or
fimuls
inc
fwait
test
push
cmp
fnstenv
call
insl
cmpl
or
fisubl
dec
mov
jmp
jb
nop
test
data16
data16
cmpsb
scas
faddl
inc
xchg
push
ja
lods
or
pop
loop
aad
inc
jmp
addl
or
aas
add
incb
jb
pusha
xchg
pushf
clc
mov
loope
jl
iret
hlt
push
dec
cmp
cltd
dec
mov
jle
mov
cmp
icebp
fstpl
mov
xor
sub
pop
mov
dec
loopne
xor
lahf
test
mov
sbb
ret
fs
sahf
xor
push
add
xor
sub
push
or
test
faddp
out
test
inc
xorl
jae
ret
xchg
or
lret
shr
scas
int3
cmc
cmpsb
sbb
std
and
pop
std
sbb
scas
sub
dec
xor
dec
movsl
outsl
jo
add
xor
inc
or
inc
in
fs
dec
ljmp
fucompp
idiv
in
xor
xchg
fisubs
jns
into
adc
dec
cmpsl
cltd
dec
rcl
popf
lea
pop
movsl
sbb
popf
push
pop
in
test
aam
je
jp
mull
stc
sbb
jge
outsb
xchg
shrl
push
test
adc
sbb
dec
scas
and
xchg
stos
negl
mov
pop
clc
aaa
stos
cmp
test
xor
mov
dec
mov
cs
jb
push
pop
stos
add
adc
orl
imul
outsl
dec
fldt
mov
aas
in
xrelease
dec
movsl
or
js
mov
mov
int
into
cmp
jae
and
jne
lds
daa
rcrl
lods
sub
adc
xor
inc
decl
test
inc
icebp
inc
xorl
test
idivl
std
and
lds
mov
shrd
dec
mov
mov
and
arpl
test
and
ret
jno
dec
xor
jmp
add
movsl
dec
xor
push
push
pop
or
out
or
mov
aad
mov
jp
fimull
loope
imul
sahf
adc
loop
and
ret
xchg
sbb
xor
insb
pop
movsl
loope
imul
jne
fimull
sbb
fildl
mov
inc
sub
out
xor
lock
pop
cmp
scas
cltd
push
push
imul
push
xchg
or
ret
pop
cmpsb
dec
sbb
xlat
addb
adcb
xlat
xchg
roll
sub
js
repnz
movsl
jl
aas
fwait
les
ja,pn
int3
mov
jbe
sbb
mov
scas
in
push
negl
ffreep
pop
sarb
aad
sub
lds
rcrb
mov
neg
fs
repz
pop
or
inc
adc
push
in
cmp
push
fwait
lcall
sub
fldt
push
mov
loop
fnsave
adcb
fcoms
push
push
in
call
rorl
jo
lods
lcall
xchg
cmp
in
pop
cld
ja
mov
aas
sbb
inc
inc
pop
leave
mov
imul
xlat
pop
and
adc
jnp
xchg
jbe
xchg
repnz
mov
sbb
push
mov
arpl
or
mov
daa
sti
pop
lock
sub
sub
mov
fdivrs
lret
pushf
cmpsb
cld
inc
icebp
addl
add
mov
sbb
subl
and
xor
and
xchg
fsubr
mov
cmp
jg
mov
negl
push
jb
test
jb
clc
hlt
inc
decb
cli
dec
outsb
lock
jge
xchg
inc
inc
sbb
gs
pop
ja
and
sub
xchg
ficompl
adc
pop
push
push
cli
add
mov
ja
or
stos
push
aad
cmpl
std
dec
xchg
pop
mov
dec
lods
in
xchg
cmpsl
test
adc
ficomps
push
xor
cmpsb
push
lea
dec
pop
mov
pop
or
test
outsl
cmp
icebp
xchg
jle
lods
jge
xchg
repnz
pop
sub
ss
test
js
adc
dec
adc
test
mov
aaa
push
nop
icebp
mov
jno
cmpsl
loopne
cmpsb
cmp
aad
jle
fcoml
and
mov
xchg
stos
cmp
push
mov
rcrb
fadds
add
inc
xchg
pop
cmp
mov
bound
lret
jp
cwtl
aam
mov
aas
pop
mov
add
call
cld
push
mov
mov
shl
xor
loope
mov
lods
stos
cs
mov
jmp
mov
cmp
inc
push
ffreep
adc
lret
test
les
cwtl
fstps
leave
push
aad
in
rclb
test
ret
cmpsl
shll
call
lahf
push
push
les
repz
mov
ljmp
add
push
jge
and
in
ret
lahf
mov
fpatan
inc
popf
mov
shrl
and
ja
push
vsqrtps
mov
scas
shlb
pop
pop
pop
xorl
or
fbstp
mov
aam
outsl
outsb
jne
xchg
pop
or
jle
ds
xor
add
in
mov
in
sbb
insl
je
push
cmpsl
pop
cmp
mov
aam
jle
mov
sbbb
popa
clc
mov
push
movsb
int
mov
jle
bound
popf
cmp
mov
mov
or
sbb
aas
aam
inc
and
es
pop
lahf
sub
xchg
mov
cmp
add
aam
mov
or
xor
lock
test
test
sbb
ret
ja
cmp
lcall
push
popa
pop
lret
rcr
jo
xchg
in
lock
inc
pop
insl
sub
stos
push
push
jo
xchg
sbb
in
stos
push
scas
mov
fwait
clc
push
jmp
cmp
xchg
push
aam
push
xor
and
sbb
ja
jns
sbb
outsl
cmp
sub
fcomps
ds
in
lcall
dec
jae
out
and
and
jno
mov
js
inc
dec
lcall
and
jno
mov
mov
pop
lea
test
jb
adc
sub
dec
out
mov
xchg
xchg
pop
lcall
cwtl
inc
loopne
lds
insb
add
shl
test
sbb
repz
pop
dec
inc
push
loop
js
dec
aam
call
pop
lret
gs
sbb
and
hlt
dec
inc
push
mov
ficompl
rcrb
jne
rcrl
sub
stos
xchg
xor
test
push
aad
stos
push
adc
movsl
inc
sbb
pop
inc
mov
sar
call
adc
arpl
push
dec
xchg
fwait
out
paddq
inc
fldl
cwtl
adcl
cmp
cmpsl
xor
clc
cmpsb
xor
cli
out
clc
xor
sub
shl
sar
jb
xchg
mov
push
andb
loopne
cmp
nop
dec
adc
sub
push
sbb
jl
mov
testl
fldl
nop
sub
filds
rcll
xchg
sbb
and
mov
dec
adc
fstl
or
ret
mov
lock
idiv
jl
or
mull
je
cld
xor
scas
push
int3
xor
adc
insl
rol
in
and
dec
cs
daa
les
xor
cmpsl
inc
adc
fdivrl
pop
or
xor
cmc
push
fst
popa
mov
inc
mov
aas
dec
mov
mov
or
xor
push
cmp
pop
xor
popa
jle
lds
adc
cmpsl
sahf
popa
mov
enter
inc
dec
rcrl
mov
outsb
pop
pop
cltd
push
and
ret
fwait
dec
dec
les
or
sbb
dec
insb
cli
inc
imul
add
int3
cmp
inc
jae
sub
add
fcom
call
shufps
push
jae
iret
pop
subl
test
not
jns
cmp
fsubs
pusha
xchg
dec
das
sbbl
push
lahf
sub
hlt
jmp
inc
adc
xchg
jl
lret
int3
mov
or
or
aad
cli
aam
icebp
sub
sahf
das
leave
nop
jne
cld
jge
daa
jge
lea
outsl
and
jbe
cvtps2pi
sub
dec
lcall
or
lcall
jg
push
jp
pop
jmp
inc
sahf
jl
xor
pop
in
jmp
nop
pushf
jns
mov
xor
lea
cs
lds
xchg
or
sbb
xchg
dec
stos
aaa
lods
cmp
sub
scas
shll
xor
lea
imul
das
jne
aad
push
fxch
xchg
popa
aas
inc
test
test
imul
push
or
mov
cs
jp
adc
dec
mov
orl
push
lds
and
mov
iret
clc
or
mov
adc
cmp
loop
mov
or
cmc
leave
jge
mov
push
loope
jb
jl
imull
sbb
ljmp
movsl
inc
fsubl
outsl
pop
jmp
and
loope
lds
ror
loopne
xor
xchg
mov
push
pusha
cmp
insl
mov
aas
pop
cmp
mov
mov
test
add
push
ficoml
jo
inc
and
adc
pop
inc
xor
mov
dec
mov
or
add
les
pop
pop
xor
pop
ret
pop
in
stc
out
sub
cmp
xchg
stos
das
ret
mov
cmpsl
imul
adc
xchg
enter
or
inc
imul
fldcw
mov
lds
fidivrl
out
add
loopne
fists
in
int3
jne
sbb
std
mov
pop
push
push
sub
imul
insb
push
movl
stc
or
call
dec
inc
fistpl
xor
cmpsb
movsb
imul
div
and
movsl
mov
test
and
xor
nop
push
jbe
jae
cld
cs
cltd
inc
rolb
xorb
mov
cmp
mov
push
add
sub
inc
roll
fs
push
xchg
adc
adc
in
popf
imul
popa
lods
sub
dec
mulb
out
xchg
enter
out
or
push
aam
jg
dec
push
mov
add
jnp
aaa
ret
push
outsl
aas
mov
jmp
push
pushf
mov
pop
rorl
pop
mov
pop
mov
loope
aam
and
cmp
sahf
add
jnp
cltd
outsl
xor
call
mov
jg
into
add
dec
enter
aaa
ljmp
add
dec
dec
arpl
outsl
mov
cmp
lods
sub
sub
sarb
lret
pop
mov
outsb
das
scas
or
xchg
xor
jb
cmpsl
decl
pop
jge
fwait
lret
mov
mov
xchg
aad
xchg
imul
pop
imulb
addr16
pop
mov
mov
lret
adc
mov
add
pop
fisubs
mov
out
dec
pop
or
push
add
sahf
int3
jecxz
nop
mov
xchg
pop
mov
add
pop
in
lret
mov
lret
fmul
cld
push
cli
sbb
xchg
pop
pop
repz
mov
pop
adc
mov
mov
jo
mov
mov
jno
pop
ret
pop
inc
fs
and
repnz
xchg
inc
inc
sti
in
sbb
repnz
sub
and
test
push
shll
sti
jmp
mov
and
notb
ficomps
lock
push
mov
mov
repnz
xchg
jnp
sub
sbbb
lahf
cs
jecxz
jns
xlat
dec
lahf
adc
loopne
adc
inc
adc
cmpsb
movsl
lea
cmp
or
pop
ret
repz
dec
in
jnp
test
sub
mov
xor
inc
dec
push
test
mov
pop
push
jne
push
mov
shlb
nop
jb
cmp
and
aas
and
es
cmp
push
outsb
iret
or
daa
sbb
mov
xchg
xchg
inc
pop
add
imul
xlat
cld
push
ret
mov
cmpsb
inc
inc
icebp
mov
jns
sub
cwtl
or
sti
sbb
sub
cltd
sub
stos
push
sub
mov
outsl
into
imul
data16
pop
test
dec
lods
shrb
into
lcall
psubq
push
jle
lock
in
mov
es
and
adc
incl
sub
sub
push
add
lcall
push
xor
jge
dec
fwait
mov
outsl
adc
dec
add
adc
fcoml
fs
inc
ja
mov
mov
add
sub
sub
das
out
xchg
sti
jl
shl
xchg
cmc
dec
lock
adc
sti
popf
into
lea
xor
leave
roll
gs
int3
push
sbbl
dec
cmpsb
jecxz
std
inc
ja
pop
je
imul
das
in
loop
stos
cmc
movsl
pop
ret
xchg
cmc
or
in
push
mov
hlt
add
cmpsl
inc
pop
xor
es
jmp
rcrb
jnp
jb
loop
fdivl
lret
fistps
aas
pop
jno
in
mov
imul
ffree
inc
fucom
das
push
xchg
sbb
sub
roll
mov
sarl
pop
lahf
pushw
fdivrl
rcr
icebp
mov
push
aaa
faddl
sub
out
inc
std
aaa
test
aad
data16
aaa
scas
imull
fistpll
pop
ficoms
pop
int3
int3
or
mov
push
je
orb
push
into
or
les
fs
sub
mov
mov
and
pop
mov
mov
push
add
or
and
ljmp
clc
and
bound
insb
lods
cmp
adcb
rol
aas
pusha
xor
enter
icebp
dec
in
fisubl
inc
dec
pop
out
mov
and
sub
mov
mov
outsl
stos
jnp
cmp
mov
mov
clc
test
lret
aam
lcall
outsb
mov
mov
xor
rorb
frndint
dec
cli
pop
das
adc
mov
jbe
adc
vmovddup
pop
pop
inc
add
mov
movsl
pop
dec
xor
xchg
cltd
addr16
dec
sti
push
rcll
dec
lcall
adc
push
mov
dec
dec
into
shll
inc
sarb
out
aas
js
lret
repnz
xchg
cltd
adcb
movsb
addr16
stc
jns
cmpsb
icebp
inc
xchg
mov
mov
dec
std
dec
mov
idivl
orl
test
stc
push
and
movsl
xor
mov
inc
arpl
inc
xor
dec
adc
and
mov
xor
push
pop
in
jg
add
lret
fucomip
fisttps
or
and
dec
outsl
pop
lea
xchg
add
xor
jbe
push
imul
mov
and
push
xlat
xchg
pushf
mov
xchg
and
inc
loope
sub
or
push
push
aas
add
adc
lahf
adc
or
out
pop
fdivrp
push
pop
into
loope
repz
dec
out
pop
pop
scas
xor
and
sub
mov
mov
and
hlt
push
mov
fwait
ja
loope
push
push
je
fisubrs
ret
cs
mov
fbld
fldt
mov
lea
test
test
push
sub
mov
mov
dec
adc
sbb
cmc
pushf
cmp
outsl
shll
shlb
dec
adc
stos
jle
in
dec
push
mov
mov
push
xor
sbb
add
xor
nop
inc
daa
out
movsl
push
push
push
pop
dec
js
loope
mov
stc
cmpsb
xorl
fnsetpm(287
js
mov
ss
push
xchg
mov
fdivs
dec
pop
imul
xchg
sub
mov
inc
addr16
mov
xchg
xlat
pop
idiv
sub
test
mov
test
out
das
dec
dec
inc
andl
repnz
lret
js
push
dec
push
mov
sub
adc
mov
cmp
jae
jl
sub
dec
cmp
xchg
add
lock
stc
mov
push
cmp
adc
in
ret
or
ja
out
enter
push
idivl
fs
pop
and
data16
idivl
sbb
ds
ss
pop
pop
push
mov
stos
lods
xchg
pop
pop
outsl
daa
das
enter
or
adc
rclb
mov
fs
add
aam
cmc
pop
xchg
int
addr16
jle
stc
in
in
sub
aaa
mov
push
movsl
sbb
mov
xchg
sarl
repnz
cmp
inc
xor
test
pop
enter
in
mov
inc
fwait
cltd
movsl
inc
sub
repnz
into
mov
and
rorb
nop
adc
pushf
pop
lcall
jle
xchg
jmp
xor
push
xchg
or
pop
adc
sahf
pop
push
or
lcall
sbb
das
sub
sbb
add
cmp
lret
int
xchg
sarb
loopne
or
scas
loopne
data16
sbb
cwtl
es
xchg
and
push
jmp
xor
mov
scas
jmp
push
ljmp
out
outsb
movsb
icebp
xchg
bound
add
dec
pusha
dec
add
push
sub
sbb
jb
and
adc
xor
and
fcompl
out
out
repnz
aam
xor
out
in
call
ret
dec
xchg
fcmovb
xchg
mov
or
insb
mov
push
jb
inc
pop
mov
xchg
rorl
shlb
adc
mov
sbb
ret
cmp
std
mov
cmpsb
sbb
push
movsl
divl
mov
subb
scas
jmp
jno
mov
mov
outsl
inc
adc
push
mov
das
popa
aam
push
pushf
push
push
sbb
jne
sub
ljmp
lret
mov
inc
scas
sbb
enter
xchg
jp
xor
les
sbb
or
push
iret
idivb
adc
dec
and
lea
pop
jp
stc
cmpsl
adc
jns
mov
mov
inc
outsb
pop
rorl
jno
lock
jl
mov
lcall
jne
cld
aad
sub
cmp
mov
test
jle
in
xchg
sti
sbb
jg
add
mov
out
dec
loop
inc
pop
mov
dec
shrb
jg
add
pop
sbb
push
test
mov
mov
fwait
iret
adc
test
xor
sub
std
mov
cld
xor
jb
mov
mov
jns
jg
mov
mov
rorb
test
enter
test
add
nop
fxch
mov
loopne
mov
test
jl
arpl
mov
mov
dec
repz
dec
rcll
out
cmc
cmp
fists
in
xchg
dec
jmp
aad
shll
push
ds
lcall
cmp
push
and
add
or
sub
push
inc
inc
sbb
add
arpl
xchg
dec
sbb
and
pop
or
and
mov
inc
sbb
fwait
aam
sarl
test
test
dec
push
jae
fidivl
pop
pushf
pop
or
mov
cmp
push
add
aas
or
divb
dec
inc
mov
sub
mov
xchg
pop
pop
repz
jne
mov
cmp
pop
jle
push
fcmovnb
push
cmp
test
jg
mov
cs
repz
inc
push
jl
test
inc
or
ret
push
fsub
cltd
push
mov
int3
mov
decl
and
out
push
xor
lret
inc
test
ret
inc
xchg
in
jmp
les
sti
push
push
or
ret
xor
jbe
sbb
adc
push
jg
sub
push
cs
insl
sub
enter
pop
addr16
lods
or
adc
call
fisubrs
test
pop
dec
in
pop
inc
leave
cltd
scas
sub
xchg
sbb
or
insb
jmp
jno
insl
sub
test
cmp
or
aaa
movsb
jo
faddl
add
gs
cld
cmpb
movsl
xchg
and
mov
jp
test
dec
test
imul
jmp
mov
jmp
inc
lahf
and
daa
lahf
mov
and
test
push
je
mov
push
out
addr16
add
outsb
imul
inc
pop
pop
adc
push
out
arpl
cmp
enter
sahf
out
mov
and
sub
xchg
aas
push
mov
push
xchg
lock
jne
lcall
xor
mov
roll
inc
mov
cld
ret
dec
das
fisubrl
sbb
lock
cld
xor
mov
adc
fwait
jbe
scas
stos
clc
call
or
dec
jmp
je
repnz
cmc
push
fs
jmp
cmp
outsb
test
push
mov
gs
mov
sbb
lods
sbb
or
into
pop
inc
fisubs
das
sbb
stos
mov
inc
or
and
idiv
add
lods
rcrl
cmpsb
addb
xorb
fwait
pop
std
or
and
mov
fucomi
add
fildl
xchg
popf
mov
or
andb
or
imul
jno
push
lea
insl
sbb
rclb
mov
je
ror
mov
fucomip
xchg
sub
iret
ret
cwtl
pusha
mov
roll
dec
inc
mov
movsb
adc
adc
xor
adc
adc
adc
xchg
pop
adc
inc
mov
gs
aas
loop
dec
icebp
aaa
pop
lods
add
mov
inc
xlat
nop
mov
and
fisttpl
pop
ss
sub
sahf
cltd
mov
cmp
xchg
sbb
inc
sti
movsb
jmp
push
pop
or
push
lods
or
out
add
inc
push
dec
sbbb
pop
cwtl
and
rcrl
pop
pextrw
popf
jo
jecxz
mov
fisubs
into
roll
xchg
and
subl
icebp
and
jns
cmc
jno
lds
sub
mov
sub
andb
sub
cli
sub
mov
push
pop
pop
cmpl
sub
int3
xor
mov
daa
push
pop
nop
pop
iret
test
or
sub
lods
bound
adc
lds
outsb
jae
dec
andl
dec
add
leave
pop
loopne
mov
data16
jg
xchg
lret
insb
xchg
out
pop
movsl
fimull
sub
aad
mov
sub
les
mov
xchg
mov
out
push
sub
in
sar
fwait
inc
mov
popa
ds
add
mov
xor
imul
roll
jg
xchg
jnp
sbb
jmp
pushf
jmp
iret
cli
outsl
stos
push
dec
sahf
ja
inc
inc
fiadds
jo
movsl
test
xlat
lcall
adc
push
aam
ret
and
fistpll
add
push
in
imul
mov
jp
repnz
shr
in
test
addr16
cltd
sti
imul
icebp
adc
fldcw
mov
inc
leave
sub
add
bound
cmpsb
lock
sub
popf
mov
pop
xchg
adc
icebp
push
or
dec
fnstenv
cmp
stos
in
hlt
push
dec
clc
insl
mov
rorb
mov
bound
sbb
fcoml
das
arpl
in
in
aas
mov
call
xchg
xchg
out
or
arpl
in
int
sub
pop
mov
bound
mov
clc
imul
or
mov
mov
pusha
out
jle
cmc
test
stc
aaa
pusha
inc
fmuls
add
pop
lret
jno
cmpsb
leave
test
call
add
and
xor
inc
push
jne
pop
mov
xchg
dec
inc
jno
push
scas
shll
mov
push
testl
cli
ljmp
imul
cmp
xchg
pop
subl
mov
xchg
insb
xor
roll
aaa
xor
xchg
sub
or
insb
sub
xor
mov
or
inc
pop
mov
mov
cld
sbb
jb
subb
aam
jo
mov
pop
mov
stos
enter
push
xchg
imul
push
mov
jno
cmp
repnz
adc
mov
test
xor
insb
add
aas
push
cmp
xchg
loopne
into
enter
adc
pop
aas
or
lret
pop
push
stc
cmpsb
pop
hlt
push
les
stos
xchg
in
rorl
pop
insl
dec
mov
inc
and
lcall
and
xchg
sarb
out
adc
and
dec
outsl
jbe
jecxz
scas
or
fistl
ja
adc
mov
decb
push
sbb
ret
data16
loopne
hlt
mov
cmp
add
mov
stc
fs
xchg
jle
push
or
or
lahf
lret
mov
jp
sbb
inc
xchg
iret
cmp
ljmp
sbb
or
out
dec
sbb
fisubrl
mov
sbb
outsb
mov
mov
adc
pop
clc
dec
xor
dec
mov
pop
dec
push
or
cmp
repnz
and
jle
fimull
cmp
dec
jecxz
cmp
push
inc
push
ficomps
rcl
adc
push
dec
ja
fadds
stos
fldenv
jo
cwtl
xchg
sahf
add
and
sbb
fldcw
xlat
frstor
hlt
dec
push
gs
mov
out
ja
icebp
sub
ljmp
xor
cwtl
jnp
ljmp
iret
addr16
fldcw
cmp
xor
jle
lret
roll
es
clc
fstps
pop
cmc
inc
in
xor
adc
cmp
adc
inc
mov
push
pop
movsl
adc
sbb
es
mov
sub
cmp
dec
fidivs
sahf
sub
sbb
xchg
sbb
adc
xchg
dec
pop
jmp
fdivl
std
push
inc
out
inc
sub
mov
icebp
jne
mov
out
ss
add
pop
lret
xchg
jno
xor
or
ss
icebp
leave
lret
xchg
jo
push
aaa
arpl
add
xor
arpl
xchg
cmp
mov
in
mov
sbb
enter
jae
or
pop
mov
arpl
in
push
pop
jge
adc
out
inc
enter
shrl
cwtl
or
and
dec
add
les
pop
jmp
iret
sbb
pop
adc
cmp
pop
jle
mov
jnp
inc
sbb
mov
repz
aas
out
jb
or
push
adc
add
push
cmpsb
mov
pop
mov
or
sarb
xor
popa
lds
xlat
std
cmc
push
xchg
out
out
insb
data16
inc
push
cmp
xor
push
les
inc
or
and
jb
push
andb
fwait
test
push
imul
xchg
dec
push
subb
sbb
ss
inc
ffreep
jo
push
xchg
fidivl
in
push
lds
inc
arpl
arpl
sbb
and
push
cwtl
push
xor
sahf
adc
xchg
outsb
imul
xchg
hlt
adc
or
pop
cmp
imulb
sbb
push
outsl
jle
add
shr
fs
push
repnz
punpckldq
and
cmpsb
sbb
mov
imul
ss
mov
int
fisubrs
lret
inc
add
mov
jno
loop
mov
mov
xchg
inc
jo
daa
test
mov
mov
mov
dec
pop
popl
fs
cmp
inc
movsl
dec
push
pop
dec
add
inc
test
jns
mov
cmp
jecxz
pusha
jns
aam
jmp
adc
mov
in
inc
inc
or
mov
jg
fwait
lahf
fidivrs
push
jbe
ss
in
or
lds
ss
push
or
mov
inc
hlt
out
cmp
add
adc
pushf
aas
mov
sub
pop
mov
and
jle
pop
enter
cmp
ja
push
mov
push
mov
xor
cmpsb
outsl
outsb
loop
iret
xchg
dec
cmpsb
arpl
ret
mov
stc
inc
push
jmp
mov
inc
push
sbb
addr16
cmp
jmp
cli
cld
dec
mov
data16
xchg
inc
dec
cmpsl
xor
and
test
jmp
add
jnp
andb
and
adc
cwtl
mov
arpl
in
inc
out
adc
test
stos
inc
scas
sbb
sub
ret
stos
cmp
push
jbe
inc
adc
fsubr
aaa
mov
dec
divl
mov
mov
inc
popf
gs
icebp
mov
adc
sarl
scas
pop
lock
xor
cs
icebp
insl
sub
push
xchg
ja
scas
out
lock
pusha
and
or
nop
fidivl
nop
enter
jge
mov
sbb
clc
pop
inc
popf
insl
push
xchg
sbb
mov
stos
fildll
cli
test
fwait
mov
xchg
insb
ret
jmp
jg
sub
cmp
int3
jp
mov
loop
inc
mov
mov
cltd
pop
xchg
push
test
inc
faddl
push
pop
mov
cld
jno
sbb
cmp
push
test
pushf
push
push
mov
inc
pop
jo
leave
push
xor
push
xchg
inc
das
pop
add
xlat
imul
sti
pop
mov
push
movsb
fsubrs
out
mov
xchg
bound
jle
cltd
out
inc
imul
inc
shl
pop
dec
mov
push
mov
and
scas
int
repnz
xchg
gs
repnz
movsl
pop
out
hlt
mov
jae
sub
lock
jecxz
sub
dec
idivl
mov
jecxz
test
lahf
adc
dec
enter
pop
sub
insb
inc
push
cmp
bound
iret
cmp
push
icebp
fmul
mov
mov
sbb
sahf
sub
iret
faddl
jecxz
fisttpll
cmp
int
mov
sub
adc
mov
sbb
or
daa
test
mov
cli
push
gs
leave
hlt
sbb
push
sbb
mov
and
xor
mov
sub
push
fld
push
mov
push
and
inc
mov
push
mov
fdiv
in
lea
xor
in
add
adc
in
cmp
dec
sub
push
stos
add
pop
js
jecxz
xor
and
jbe
ret
mov
mov
std
pop
cmpsl
rolb
jl
nop
pop
xchg
out
push
icebp
fdivrl
and
and
enter
pop
inc
adc
push
cmp
imull
cmp
fadds
std
xor
lods
subb
es
mov
int
pop
push
sub
mov
sti
xchg
dec
mov
std
pop
out
mov
shll
or
push
dec
loopne
cs
xchg
push
out
push
bnd
clc
stos
adc
ret
outsl
xor
lret
ds
push
xor
shrl
mov
rcrl
das
jae
mov
push
repnz
sbb
filds
in
pop
outsb
mov
or
jae
aaa
iret
add
mov
lcall
lea
outsl
pop
pushf
push
es
push
aam
dec
incb
es
push
sub
push
mov
movsl
jnp
xchg
data16
in
cmp
es
push
dec
das
cmp
xlat
add
rclb
cwtl
and
inc
loope
dec
sti
mov
mov
ret
dec
imul
sub
stc
pop
jmp
push
lea
sub
test
inc
js,pt
fimull
jp
out
pop
fldl
andl
ret
aad
sub
insl
xchg
test
outsl
aad
fstl
imul
mov
shll
mov
repnz
outsl
call
into
adc
push
cmpsb
das
leave
stos
lods
in
dec
sub
rclb
fbld
mov
fsubrs
shlb
mov
clc
rcr
add
and
mov
push
fdivrp
jp
cmp
dec
xchg
mov
gs
jg
mov
cmpsb
testl
and
push
inc
or
fstpl
lock
leave
cmpsb
psadbw
inc
sub
int
ljmp
mov
cmova
sbb
sbb
adc
xor
cmp
dec
xchg
pop
fldl
scas
push
or
jb
inc
imul
cmp
jp
popa
icebp
aad
jne
arpl
jnp
ds
in
imul
sub
into
jg
les
fdivs
dec
aad
inc
lahf
ds
lods
popl
cli
imul
ljmp
outsl
movnti
or
mov
or
xlat
push
and
cltd
leave
add
xchg
xchg
pop
addr16
xor
jmp
sbb
imul
arpl
jo
outsb
xor
xchg
pop
lahf
sbb
push
lds
xor
xchg
or
and
data16
and
cmp
push
lea
jo
in
mov
xor
pop
add
fwait
das
cmp
and
pop
out
mov
mov
subps
lret
in
push
sub
push
jb
pushf
sub
add
aam
fldl
push
lea
enter
xor
inc
insl
and
stos
mov
mov
inc
sub
loopne
ds
or
dec
dec
cld
fmuls
push
sahf
mov
js
mov
fistl
aad
loop
cmp
pop
ds
add
push
sti
mov
test
into
in
ljmp
out
dec
sub
popf
outsl
mov
shlb
aaa
and
fs
lods
pushf
sub
cli
xchg
addb
gs
pop
sbbb
and
cmp
adc
mov
das
and
cmp
mov
arpl
fstpt
mov
aad
mov
sbb
pop
add
mov
movsl
xor
cmp
sar
dec
loope
push
fidivrl
fwait
repz
pop
xchg
xor
sub
outsb
cmc
jmp
xchg
cs
adc
push
mov
sub
pop
in
inc
mov
and
add
adc
addl
and
frstor
cmp
mov
cmp
in
cmp
ret
stc
fdivs
sarb
data16
test
dec
das
icebp
cli
lods
movsl
mov
push
cld
cmp
mov
bound
mov
cmp
xchg
push
jl
rolb
das
stos
sti
ret
pop
cmpsb
decl
out
xchg
decb
jb
adc
les
out
sbb
call
dec
ret
jl
out
out
shll
push
sbb
mov
sbbl
sahf
ffreep
sbb
loop
ljmp
sbb
sub
pop
inc
insl
sbb
test
xchg
adc
out
push
jnp
popa
pop
in
adc
xchg
insl
jl
pop
mov
pop
out
mov
xchg
xchg
in
lods
movsl
into
test
xor
out
imul
adc
inc
ss
fs
mov
xlat
in
cmp
jecxz
jns
mov
inc
mov
jae
push
insb
repz
inc
jae
xlat
ss
shrl
jg
adc
push
cmpsb
lcall
orb
popl
xor
xchg
cwtl
in
xchg
push
fwait
pop
dec
gs
sbb
xor
rclb
or
enter
add
mov
ret
into
int
and
loope
into
jbe
jnp
orl
int3
shlb
mov
shrl
loopne
call
adc
mov
push
fcomp
mov
arpl
jle
cmp
sbb
inc
outsl
xor
xchg
or
test
inc
jb
adc
jecxz
fsubrp
mov
add
add
mov
xchg
mov
pop
mov
mov
cmp
in
mov
fidivrs
fs
or
xor
bnd
fnstsw
filds
sub
icebp
fstpl
adc
xchg
inc
popf
loope
inc
and
dec
test
mov
adc
ljmp
xor
jbe
jne
inc
mov
mov
les
js
aas
nop
sbbl
mov
jmp
adcb
inc
lret
cmp
or
mov
rcrb
test
mov
mulb
cmpsl
adc
mov
rcl
fwait
pop
xor
pusha
add
adc
leave
fidivl
pop
jbe
mov
out
sub
jns
mov
aam
and
popf
xchg
mov
push
adc
or
enter
jg
mov
pusha
or
scas
cmp
scas
insb
jb
in
aam
mov
push
adc
push
rolb
arpl
js
int
mov
out
cld
or
stos
inc
lea
jp
call
mov
adc
or
enter
lcall
in
xchg
mov
mov
sbb
mov
notb
inc
insl
and
sarb
and
adc
and
or
pop
xchg
int
aas
push
enter
scas
cli
or
sub
mov
adc
in
mov
jo
movsl
cmp
mov
pop
pop
ja
loop
mov
int3
leave
xor
fistl
add
pop
mov
add
mov
std
test
mov
ficoms
mov
dec
cs
mov
in
aam
insb
xor
rcr
jp
mov
inc
addr16
or
aas
fildll
xor
xchg
xchg
dec
jp
dec
add
xchg
pusha
push
adc
sbb
sbb
je
pop
sub
jae
xchg
xchg
in
es
sbb
rorl
mov
jbe
sti
and
sub
jno
fisubl
push
inc
jp
sub
hlt
loop
arpl
jns
xchg
mov
rorb
adc
dec
xor
sbb
xor
sahf
mov
pop
mov
pop
call
mov
loopne
in
sub
fnstenv
lea
filds
lahf
cmp
aad
push
lret
dec
jmp
arpl
insb
xchg
adc
push
push
int3
jmp
int3
push
into
hlt
xchg
inc
daa
lods
addr16
mov
inc
imul
dec
repz
sbb
sbb
jl
in
test
add
push
test
push
aas
cltd
aam
in
pop
dec
mov
pop
call
shl
jbe
sub
push
pop
jmp
jo
es
xlat
or
mov
pop
inc
pop
mov
dec
inc
imul
and
pop
sbb
lea
cmp
test
jae
mov
adc
cltd
test
or
xchg
inc
sti
daa
fsts
mov
cmp
cmp
stc
out
xchg
clc
mov
test
sub
adc
pop
xchg
and
jnp
mov
loop
add
xor
cwtl
adc
push
mov
and
dec
or
cmpsl
lea
add
lock
repnz
mov
ljmp
insl
in
and
popa
push
pop
jg
jg
adc
jecxz
jp
int3
mov
pop
int3
stos
pop
popf
mov
out
xchg
in
scas
lods
lods
int
sub
je
sbb
fldt
lahf
sbb
mov
dec
sbb
repz
or
sub
push
call
adc
idivl
ret
fldl2e
pop
adc
aam
imul
in
jae
mov
xchg
xor
mov
dec
push
jl
inc
sahf
jg
addr16
mov
push
cmp
in
popa
lock
jge
jl
movsl
mov
push
test
dec
jo
imul
scas
outsl
out
pop
loop
or
xchg
ja
stc
xor
scas
imul
cmp
test
pushf
es
stc
int
in
xchg
in
es
bnd
and
inc
fisttpl
arpl
popf
and
mov
pushf
stos
ss
leave
inc
insl
dec
lcall
adc
fidivs
sub
mov
jl
xor
xor
xchg
shrl
inc
and
out
jmp
fsts
push
cli
js
or
mov
out
fcompl
adc
andb
jns
int
cmp
sti
xchg
into
mov
jns
xchg
in
shlb
xchg
div
lods
ljmp
pop
mov
dec
adc
popf
out
std
fs
sbb
insl
fldt
das
pop
push
cmpsb
xchg
lret
pop
mov
xlat
inc
xor
inc
loop
or
dec
loop
repz
fs
addr16
pop
jge
das
sbb
jbe
decl
cltd
inc
sub
adcl
push
into
mov
sbb
into
inc
push
add
xor
inc
pop
mov
iret
push
mov
outsl
ficoml
mov
test
jns
jns
push
jecxz
mov
sub
adcl
scas
ljmp
mov
adcb
lret
popf
ljmp
mov
popf
push
mov
imul
mov
pop
sti
clc
aad
fwait
xchg
stc
push
lods
in
mov
pop
sub
push
jge
loope
or
je
iret
add
xlat
insb
ret
aam
insb
lods
mov
repnz
pop
cmp
das
stos
xchg
sub
out
stos
fcmovnu
jle
les
mov
fwait
xchg
mov
adc
jns
outsl
aam
mov
or
jns
xor
stos
mov
es
add
and
roll
jb
sub
insb
xchg
icebp
add
fsubl
sub
mov
add
sbb
jbe
adcl
push
out
xchg
mov
or
adcb
hlt
test
lcall
cmp
dec
test
aas
inc
in
pop
cmp
sbb
je
add
sub
lods
lds
int
out
inc
sub
xchg
jge
shrb
dec
jo
xchg
mov
loopne
rorb
and
insb
mov
pop
sbb
mov
out
scas
push
xchg
lahf
push
mov
and
gs
fwait
adc
je
aam
ljmp
mov
mov
test
or
push
stc
sub
daa
push
lcall
scas
hlt
or
xor
out
aaa
mov
jne
adcl
cmpsb
or
ja
call
testb
jnp
add
call
cwtl
add
add
mov
outsl
push
sbb
stc
sub
mov
push
xor
adc
cwtl
in
lea
daa
jb
or
mov
shll
jmp
fcoms
push
fld
xlat
inc
add
xor
sbb
loopne
cmpsb
xor
iret
out
les
sbbl
mov
je
icebp
inc
xchg
jns
ds
xor
mov
pop
cwtl
fdivs
adc
lret
jns
or
in
loope
fcom
mov
and
sub
std
mov
cmp
push
sub
jo
sbb
sub
pop
mulb
ss
xor
cmpsl
ljmp
in
adc
xor
js
inc
aaa
in
sbb
shl
or
mov
mov
mov
cmp
sbb
inc
dec
push
pushf
mov
and
mov
push
movsl
ret
pop
scas
test
test
pop
xor
dec
xchg
lcall
push
xchg
inc
out
test
loop
dec
xchg
jo
in
push
rcll
ret
sub
test
sbb
push
imul
imulb
add
cmp
loope
mov
mov
dec
frstor
cli
cmp
cltd
pushf
lds
dec
ret
dec
out
test
adc
adc
adc
arpl
int
lods
test
lret
jge
mov
scas
dec
fadds
jbe
push
or
adc
into
jle
xor
xor
lcall
insl
inc
imul
daa
ret
scas
dec
stc
ds
test
test
ficoml
mov
test
gs
cmpl
cmp
jmp
das
mulb
pop
mov
mov
or
fadd
mov
outsl
dec
adc
sbb
fisttpl
sub
mov
aas
aam
and
sub
dec
jle,pn
jl
imul
cmp
jle
push
test
xchg
jns
push
cmpsb
cmp
xor
xchg
xchg
outsl
dec
icebp
jecxz
bound
mov
and
ficoms
fsub
jo
lret
addr16
pop
popf
mov
repz
adc
lods
xchg
stos
rorb
xchg
ds
xor
mov
arpl
pop
sub
pop
into
fs
movsb
xlat
out
sub
cmp
imul
rcrb
and
xchg
cmc
mov
loopne
test
or
out
xor
call
ss
push
xchg
jbe
popf
out
mov
xor
sub
add
popa
add
leave
lret
fstpl
pop
std
test
int3
mov
dec
cs
sbb
das
jp
mov
cmp
andb
in
lret
mov
pop
push
jp
fwait
and
cmp
pop
dec
nop
adc
push
push
or
sub
pop
mov
and
fcmovnu
xchg
ret
push
mov
je
push
test
test
sub
jae
insb
popf
movsl
stc
movsl
add
jae
loopne
lods
push
mul
addr16
cmp
sbb
sahf
pop
mov
inc
add
test
idivl
in
lds
fldl
jb
sbb
imul
and
push
push
test
clc
jmp
mov
xor
or
xor
add
negl
sub
pop
mov
adc
add
push
dec
push
popf
outsb
sub
fcmovnu
adc
pusha
pop
pop
loope
add
jae
inc
sbb
lret
lcall
daa
into
scas
rorb
pop
adc
adc
fists
fldl
jg
jmp
loopne
jl
xorb
cltd
xor
mov
sub
mov
mov
ficompl
lcall
inc
dec
lahf
fsubs
lahf
enter
subl
lods
jle
in
cli
mov
test
pusha
or
xchg
cmpsb
jns
shlb
pop
mov
dec
jbe
add
push
sub
int
mov
call
popa
or
test
shl
sbb
jns
outsl
mov
jbe
mov
cld
je
dec
sti
jg
fwait
mov
not
in
in
mov
cmpsl
mov
jle
mov
or
add
sahf
mov
xlat
cmp
mov
lods
scas
lcall
jg
pushf
cmc
ss
insl
sahf
iret
sbb
popa
icebp
jmp
push
mov
insl
and
adc
popf
inc
pusha
jmp
add
push
mov
sarb
test
out
mov
aam
xchg
sbb
mov
bound
repz
lcall
int3
ss
sub
xor
subl
jl
movsl
shr
jo
popf
pop
loopne
pop
addr16
cmp
insb
in
adc
orl
xor
repz
enter
ljmp
pop
add
cmpsl
rolb
fcmovu
sti
jmp
mov
dec
leave
addr16
pushf
and
mov
cli
pop
xchg
push
fiaddl
sub
push
mov
out
imul
push
push
rolb
mov
and
jnp
or
sbb
lcall
xorb
mov
mov
inc
or
dec
push
adc
pushf
loopne
and
lcall
sbb
fsubrs
and
adc
or
sub
pushf
filds
dec
pusha
aad
push
subl
test
hlt
xor
mov
out
popf
pushf
daa
js
dec
xor
shlb
adc
xchg
in
imul
jmp
fldl2t
pop
add
addr16
inc
xlat
xchg
jae
xor
into
fwait
scas
push
pop
mov
movsl
sub
xchg
out
loopne
xlat
jbe
rcrl
cmp
xor
pop
out
in
loope
sub
sbb
test
call
jo
or
add
sbb
scas
mov
repnz
dec
lods
pop
fdivl
sub
enter
test
or
sbb
mov
mov
in
inc
jnp
mov
sbb
in
bound
cmp
xchg
enter
rorb
adc
add
sub
xchg
mov
imulb
testb
aam
arpl
jl
aad
insl
adc
mov
test
pop
je
lret
push
lods
lock
cmpb
xorl
pop
sarb
fadds
les
xchg
xor
pushf
sbb
push
repnz
loopne
loop
dec
mov
roll
sub
adcl
or
add
test
sbb
dec
dec
shrb
mov
mov
xor
mov
inc
dec
push
mov
enter
cltd
movsl
loopne
popf
aad
enter
popf
sub
cld
mov
aaa
scas
imul
aaa
mov
adc
mov
jp
mov
dec
mov
add
mov
leave
fdiv
inc
and
mov
mov
add
int3
sbb
pop
call
hlt
pop
push
scas
js
incl
xchg
push
fldcw
lods
xor
xchg
les
out
ss
test
sbb
in
mov
movsl
mov
xchg
stc
bound
cltd
arpl
jbe
mov
xchg
or
fcompl
cld
ds
jo
pop
cmp
adc
stos
jae
add
popa
cltd
pop
or
pslld
in
and
xchg
mov
enter
xorb
cmp
push
es
mov
lods
inc
jle
pop
iret
or
xlat
mov
mov
or
xchg
jmp
inc
or
cmpsl
test
lret
and
out
mov
xchg
sahf
dec
outsb
xchg
push
push
icebp
in
ljmp
pop
xor
xchg
jmp
aaa
or
adc
test
jnp
movsl
mov
popa
jp
push
hlt
mov
cmp
sbbb
stc
leave
test
cli
stos
scas
mov
dec
ret
cmpsb
push
insl
and
jl
jb
pop
sub
cld
pusha
sahf
and
scas
jne
or
pop
rcll
fcomi
mov
pop
xchg
dec
cmp
jle
lahf
xor
movsb
fcompl
loope
leave
sub
sub
out
outsl
mov
or
mov
std
pop
xchg
cmp
mov
xor
lods
jno
in
clc
enter
fstl
push
fists
mov
xor
das
fwait
dec
aad
lods
jecxz
int3
loopne
xchg
adc
xchg
in
sub
pushf
jle
or
outsl
in
test
adc
stos
push
cmp
mov
mov
xchg
int
xlat
mov
jbe
pop
rorb
mov
cmp
push
pop
jno
ret
repz
je
test
fstps
cli
ficompl
adc
stc
inc
aas
sbbl
mov
and
inc
inc
push
sub
jns
dec
ret
add
push
into
push
hlt
inc
ds
jns
outsl
aas
pop
fnstenv
lahf
mov
mov
je
add
scas
mov
sahf
xchg
mov
popf
sahf
outsl
adc
arpl
je
xor
dec
cli
das
cmp
movsb
cs
pop
and
fbstp
lret
pop
push
jnp
jmp
jnp
adc
xor
lods
cs
sahf
or
jo
repnz
mov
lret
jge
fadds
js
pop
pminsw
icebp
push
xor
jge
mov
xchg
in
and
push
scas
shl
ret
jecxz
lods
xor
hlt
inc
ficompl
gs
jne
add
push
mov
dec
addb
les
into
fcompl
testl
inc
jl
mov
xchg
sbb
push
pop
pusha
pop
inc
push
andb
rorb
test
and
popa
and
mov
and
mov
jge
dec
das
sbb
inc
jne
popf
ds
xor
sub
aad
cmpsb
dec
mov
fs
inc
add
cld
push
push
add
out
jecxz
dec
andl
push
fwait
icebp
mov
and
idivb
xor
mov
cwtl
das
or
decl
pop
pop
and
mov
out
mov
mov
mov
xor
andl
js
icebp
mov
jecxz
add
repnz
test
in
aaa
or
mov
sbb
ds
cmpsl
fsubs
stos
mov
movsl
push
cmp
xchg
and
adc
int
inc
push
jnp
out
fcmovb
jno
xlat
mov
stos
and
loop
xor
lret
das
test
inc
js
test
jl
mov
in
cmpsl
lcall
cmp
push
xchg
mov
and
cmpsl
pop
scas
cli
lret
movsb
fucomip
popl
cltd
shrb
repz
push
lock
push
aam
and
xchg
inc
cmp
push
pop
inc
mov
clc
cmp
cmp
cltd
xor
movl
nop
push
fwait
jb
adc
rclb
pop
pushl
in
adc
inc
loopne
inc
je
mov
cmp
cmp
adc
and
xchg
cmp
int
inc
lods
adc
iret
lret
rorb
testl
sar
xchg
jnp
cld
fmulp
xor
stc
repz
outsb
mov
mov
std
dec
cmp
and
jno
les
andl
inc
dec
fldt
push
aaa
scas
and
test
test
fdivs
int3
int
fisttpl
stc
fisttpl
js
inc
rol
cli
ds
js
sbb
test
dec
sbb
push
mov
or
xchg
arpl
or
iret
add
hlt
jbe
add
cmp
mov
xchg
lea
xor
pusha
aaa
aam
out
push
dec
and
imulb
jg
mov
adc
movsl
jp
or
xchg
outsl
lret
iret
cmc
jb
mov
pusha
dec
mov
jne
dec
test
and
lods
bound
jns
inc
xor
sub
cmp
scas
fisubs
xchg
pop
and
enter
sbb
mov
out
cmp
std
cld
out
cs
stc
xor
adc
mov
push
inc
mov
mov
pop
daa
dec
cmpb
and
push
cmp
test
inc
mov
clc
and
sbb
stos
xchg
jl
sbb
imul
jns
adc
stos
insl
test
lods
fs
test
jne
cli
inc
enter
test
aaa
sub
pop
std
xor
fstps
inc
test
cwtl
sarl
sub
pop
inc
clc
push
ret
mov
lods
scas
push
cld
out
dec
out
mull
ja
pop
mov
lods
xchg
and
negb
xchg
mov
mov
hlt
mov
out
and
push
sbb
cltd
push
in
xlat
out
addr16
mov
jne
xor
aaa
adc
mov
sub
in
insb
leave
outsb
mov
jle
inc
pop
or
lea
insb
mov
jno
sub
push
cs
cmpsl
inc
imul
mov
sub
and
dec
aas
push
sbb
push
pop
add
sub
movsb
test
roll
dec
imul
push
negl
jne
inc
sbbb
cmpsb
xchg
adc
gs
xchg
mov
pop
jae
add
loopne
jb
mov
les
movsl
mov
inc
pop
inc
xchg
push
mov
addl
xchg
adc
xor
call
cmc
jge
cltd
pusha
ror
push
mov
mov
push
bound
fsub
xchg
xchg
cmp
inc
fldl
loope
testl
fsubrs
sbb
dec
inc
data16
rclb
daa
stos
fs
inc
lea
mov
jge
movsb
fldt
mov
cld
add
pusha
ret
dec
subl
enter
add
aad
out
sti
jne
or
mov
imul
pop
lcall
mov
push
rolb
push
shlb
ja
fdivl
ljmp
pop
jo
enter
xchg
pop
inc
cs
mov
xor
idiv
mov
and
ret
pop
pop
gs
fnstsw
push
jle
popa
push
stos
mov
repz
ja
stc
sub
es
lds
sar
mov
sti
add
mov
sub
movsl
or
data16
adc
inc
lods
fnstenv
cmpsb
lea
fistl
mov
push
dec
cmp
xor
pop
stc
sub
aad
scas
mov
mov
stos
or
cwtl
xchg
sbb
cmp
cwtl
and
seto
cmp
jmp
int
pop
orb
pop
xchg
mov
push
gs
in
out
push
sub
imul
and
es
and
mov
ja
and
xchg
inc
adc
pop
push
lcall
stc
xchg
cmp
sub
cs
pop
inc
movsl
and
sbb
push
fwait
insl
in
and
dec
es
icebp
out
not
ret
add
jecxz
mov
inc
add
in
insb
xor
fsubrl
mov
mov
or
scas
push
hlt
xor
shll
inc
dec
sbb
adc
xchg
mov
xchg
cmp
daa
jle
clc
dec
add
aaa
fisttps
lea
dec
push
out
mov
test
inc
push
or
push
sbb
shl
jmp
mov
idivb
iret
cmp
sbb
push
call
popa
cmc
lods
aad
push
pop
mov
mov
test
xor
out
shlb
dec
imul
xor
jg
les
incl
mov
cs
sub
jg
mulb
mov
lods
nop
outsl
xor
add
stos
lock
fiaddl
jns
or
lock
mov
mov
xchg
lret
test
jp
sets
push
scas
enter
clc
or
into
dec
ret
sbb
mov
and
dec
fimull
pop
jp
ja
fdivs
in
arpl
pop
dec
ljmp
out
addr16
gs
nop
andl
ret
adc
shll
and
lahf
pusha
je
adc
popa
xor
aas
jnp
sti
lea
out
mov
ret
push
out
sub
fwait
cmpsl
pop
push
clc
push
sti
jbe
sbb
jns
jmp
mov
ret
scas
mov
push
xchg
fmull
lock
jae
xor
jle
out
pop
adc
mov
inc
cmp
les
aad
xchg
rcrb
mov
mov
int
pusha
fldt
fs
test
push
shr
jmp
iret
xchg
jb
mov
pop
mov
jecxz
fidivrl
daa
dec
sbb
or
fiaddl
fisubl
jae
jno
jecxz
sub
xchg
insb
and
stc
xor
dec
pop
dec
cs
rcl
in
pop
mov
stos
xchg
xchg
xchg
rclb
sbb
or
sbb
mov
gs
push
ja
mov
or
sub
in
cli
cmpsb
imul
ret
cli
pushf
std
fsubr
pop
int
test
xor
rorl
icebp
sbb
pop
adc
cmp
in
inc
mov
add
dec
fcomps
inc
sbb
fldenv
mov
mov
inc
jmp
add
mov
push
jbe
xchg
mov
sbb
mov
jle
test
mov
popf
jl
push
inc
data16
addl
jg
mov
pushf
movsb
in
dec
and
dec
inc
xchg
movsl
cmpsl
mov
sub
pop
and
out
or
jbe
test
or
add
push
xchg
ret
insl
push
roll
mov
ja
sbb
mov
xchg
imul
fmull
or
mov
or
pop
popa
mov
dec
test
mov
lahf
or
cld
mov
int3
jecxz
pop
mov
movsb
sub
push
push
or
xor
sub
xor
mov
repnz
inc
gs
dec
cbtw
ret
or
shr
xchg
xchg
cmc
fiadds
and
dec
mov
scas
je
rcrb
bound
loope
loopne
fs
dec
adc
ljmp
lods
leave
fldl
inc
mov
xor
in
movsl
sti
jge
in
pushf
xor
inc
popf
jl
cltd
add
das
insb
lcall
jae
bound
xchg
pop
fidivs
pop
aas
into
cmc
repnz
lcall
scas
sbb
push
mov
clc
cmp
out
fildl
adc
xchg
inc
loopne
sub
inc
mov
ljmp
jle
je
cwtl
das
test
pop
nop
sbb
jmp
push
sbb
dec
mov
cmp
ss
xor
push
fbld
xchg
stc
and
jae
xbegin
insl
sub
les
fs
shrl
pop
add
cli
push
ret
mov
xchg
outsb
out
lods
lea
mov
das
push
ret
mov
cwtl
push
push
arpl
sub
sbb
les
xor
fnstcw
sub
adc
cmp
out
push
adc
mov
addr16
pop
add
mov
ja
int3
sub
and
push
mov
xchg
sbb
pop
and
sarl
outsb
jae
sbb
fnstsw
or
movsl
jmp
ss
sbb
ss
xor
fsub
push
push
xlat
popf
mov
movb
pop
aas
out
hlt
adc
enter
je
sub
shr
iret
ret
cmp
scas
jbe
popa
adc
jmp
sti
sbbb
test
mov
jmp
stos
lret
loopne
pushf
adc
pop
and
sbb
adc
mov
jne
adcb
cmp
mov
cli
int
pop
pop
mov
push
scas
out
and
shlb
data16
cli
fisubs
push
psubq
mov
dec
push
jno
in
adc
dec
inc
imul
dec
fwait
in
arpl
dec
out
cwtl
or
scas
imul
xchg
inc
aad
mov
mov
mov
loop
sbb
push
and
lods
stc
and
fldcw
nop
fldcw
inc
and
jno
bound
iret
mov
stos
hlt
inc
call
pop
jae
or
in
lcall
negl
clc
inc
out
add
dec
adc
pushf
or
cs
daa
ss
out
pop
mov
sbb
push
xchg
es
out
push
inc
inc
cmc
xor
xlat
cmp
lea
pavgw
das
aam
sahf
dec
in
popa
mov
mov
sbb
sbbl
fbld
iret
xor
stos
xchg
ja
jbe
insb
leave
and
imul
test
push
lods
add
movb
int
pushl
and
xchg
aad
add
add
jno
mov
pop
inc
fildll
mov
xor
adc
sbb
xor
push
push
jns
or
mov
push
shrb
or
or
lcall
pop
and
add
ret
stc
jmp
push
mov
push
aad
mov
jmp
xchg
sahf
cltd
push
mov
push
dec
icebp
arpl
testb
fmull
arpl
inc
sbb
in
imul
dec
fsubrl
mov
jo
cmp
adc
or
sbb
je
push
adc
pop
xor
outsl
lret
lret
and
popf
sub
jmp
mov
sar
sbb
mov
pop
in
fdivs
and
sub
xchg
sub
les
das
xchg
ficoml
sbb
lock
int
aaa
gs
sub
jnp
mov
mov
xchg
rorl
mov
fwait
lcall
call
or
sbb
sti
sbb
inc
inc
int
push
aas
jbe
sti
enter
mov
xchg
sti
pop
daa
cwtl
mov
xor
inc
es
cmp
sarl
ret
in
rclb
decl
mov
aam
int3
scas
repz
sub
lcall
pop
push
inc
lds
mov
cltd
xorl
mov
or
push
mov
xor
add
inc
hlt
iret
and
mov
fisubl
rcll
fnsave
jnp
mov
fidivs
jg
and
inc
lret
jae
stc
and
movsb
stc
repnz
ror
lea
mov
ret
or
addr16
and
sub
xor
loop
std
mov
and
bound
aam
imul
movsl
add
mov
addr16
or
push
pop
sbbb
jg
add
popf
or
je
xor
push
mov
out
lods
test
mov
stos
xorl
dec
mov
adc
clc
add
inc
inc
jns
testl
push
rorl
shl
ret
add
clc
mov
insb
xchg
inc
dec
mov
es
or
adc
add
packsswb
cmp
xchg
out
or
adc
aad
xor
fmull
loop,pn
in
lods
and
mov
jo
jmp
lahf
insl
popa
cld
fwait
movsb
lods
sub
fs
lcall
mov
pushf
lcall
push
mov
repnz
jae
xchg
jnp
pop
jo
pushl
leave
testl
fcoms
fisttps
cmp
pop
pusha
jnp,pn
jae
in
or
sub
push
shlb
jge
mov
cmp
xorb
or
or
and
xchg
cwtl
push
adc
lods
cli
daa
pop
inc
movsl
xor
loop
cmp
jl
xchg
cmpl
aam
je
dec
ja
sbb
lea
and
cmp
bnd
xchg
sbb
movsl
aad
dec
sub
xchg
ja
and
or
inc
stos
arpl
jmp
mov
push
sbb
dec
and
stc
adc
xor
adc
lock
lods
mov
roll
cwtl
scas
jb
and
pop
jno
pop
insb
push
xchg
ficoml
jno
dec
out
pop
ret
jno
imul
adc
not
lahf
in
cld
adc
imul
dec
and
jge
mov
mov
xchg
shll
sub
push
ljmp
pop
mov
pushf
into
dec
fucom
sub
adc
xchg
adc
shll
out
push
inc
xor
stos
imul
lds
shr
dec
jl
js
into
mov
mov
ret
sti
pop
cltd
mov
jmp
dec
loopne
jbe
cltd
pushf
repz
sar
or
jecxz
pop
repz
push
fsubrl
add
lcall
test
mov
mov
dec
mov
sbb
int3
bound
outsb
pusha
inc
push
pop
les
pop
andl
gs
popf
push
cmpsb
in
add
insl
fldcw
dec
xor
mov
inc
call
mov
lret
pop
int3
mov
std
push
mov
mov
stos
mov
stc
es
jmp
out
test
cwtl
add
cmp
jmp
lock
fwait
lahf
lods
popf
cmp
and
adc
sub
ret
out
mov
repnz
cmpsb
push
insb
in
lods
mov
xor
aam
or
out
inc
jne
lahf
mov
in
mov
or
aaa
xor
push
cmpsb
pushf
shl
xchg
sbb
pop
jo
enter
inc
dec
cs
jnp
add
loope
in
insb
sub
stos
add
dec
mov
sti
jno
pop
ret
dec
int3
xchg
add
fistl
ja
pop
cmp
pop
lret
jb
dec
mov
mov
mov
cmpl
lods
imul
mov
lea
cmpsl
testl
or
push
mov
jmp
adc
lret
lods
enter
nop
ss
adc
pop
je
adc
or
xchg
iret
imul
pop
addl
fstpt
int3
lds
push
sub
jmp
and
aas
shl
jne
dec
push
and
rcll
jae
das
sub
inc
ret
push
mov
lahf
inc
outsb
sbb
mov
mov
jo
js
mov
into
fnstsw
pop
push
fnstsw
jge
dec
push
mov
fstl
das
fstl
psrld
ljmp
xor
push
lods
xor
enter
sahf
dec
dec
jle
and
aam
inc
ret
loop
cwtl
or
lods
fcoms
sub
mov
ds
pop
lret
notb
ret
lods
mov
sahf
orb
in
jmp
jmp
rcl
inc
and
aad
mov
inc
xor
stos
cltd
icebp
pop
ret
cmpb
mov
adc
inc
mov
or
pop
mov
lret
aas
pop
repnz
jnp
push
xchg
sbb
fs
stc
add
dec
cwtl
xor
fcoms
push
mov
inc
fidivs
jp
pop
or
nop
adc
sarl
addr16
xchg
mov
mov
fwait
mov
dec
adc
pop
xor
jae
cmp
fdivrs
popf
xchg
icebp
shll
or
xor
lds
fidivrs
pop
push
insl
mov
xchg
sub
lods
jge
enter
add
dec
mov
out
js
pop
push
in
sbb
mov
imul
inc
and
scas
add
pusha
lret
sahf
scas
pop
movsl
decb
mov
jno
inc
xor
push
arpl
pop
cmp
mov
sub
test
pop
mov
bsr
sbb
jmp
sub
insb
and
or
cmp
lret
enter
and
daa
mov
sub
sub
pop
mov
or
mov
add
sbb
jns
pop
ds
pop
inc
lcall
mov
pop
mov
fildl
insb
add
into
and
lods
outsl
je
leave
mov
pop
clc
push
xor
and
inc
aas
mov
roll
dec
mov
fs
ficoml
xchg
dec
insb
jp
ljmp
or
and
aaa
add
sub
mov
cmp
sbb
jmp
adc
in
ds
dec
das
and
xchg
add
sti
repnz
in
shll
jbe
push
hlt
std
dec
stos
xor
std
jle
mov
add
frstor
rorl
js
lock
fsubrs
dec
push
pop
imul
jp
sub
jmp
je
cmp
push
adc
sbb
test
data16
cmp
sub
cs
xchg
and
inc
mov
call
test
jge
cltd
adc
lret
fbld
stc
mov
sbb
pushf
push
xor
pop
xor
mov
iret
in
xchg
or
sub
pushf
iret
fbstp
cmpsb
xor
pop
mov
idivb
xchg
repz
cmpsb
xor
add
daa
cmpsl
out
fstps
mov
icebp
lock
or
out
pop
add
subb
enter
adcb
repz
fcoms
in
or
mov
fsubrp
mov
out
cs
in
int3
lret
sbbb
addr16
aaa
hlt
xchg
cmp
aam
addl
add
pop
sbb
or
inc
sbb
int3
mulb
jno
call
pushf
adc
adc
xchg
or
rcll
aad
cmc
adc
rorl
in
xor
mov
mov
mov
jg
jp
push
push
sub
mov
ljmp
shrb
mov
aaa
je
mov
das
xor
data16
and
sub
push
xchg
lds
sbb
or
int
jmp
and
and
pop
adc
stos
scas
or
ds
jle
inc
into
rorb
cmp
sub
aad
and
xlat
pop
addb
or
push
jmp
dec
adc
fs
cmpsl
or
push
cmp
mov
push
in
mov
add
arpl
popf
push
push
rcll
std
call
into
push
mov
movsl
inc
aad
pop
push
cld
cs
int
xchg
add
in
subl
lock
fs
push
xlat
cmp
pusha
les
mov
inc
js
bound
leave
ss
cmp
cmpb
inc
dec
lods
pop
push
add
movsl
push
jl
cmp
div
outsl
movsl
aas
pop
jnp
ss
insl
fwait
mov
test
fstl
outsb
cmpb
shlb
flds
sub
add
adc
bound
int
sbb
mov
pop
xchg
mov
and
sbb
and
sbb
inc
inc
adc
mov
lcall
fisubs
subl
xor
out
sbb
idivl
xlat
in
mov
mov
lret
dec
aad
lea
in
jbe
xchg
cs
or
mov
mov
mov
repnz
aas
xor
xlat
icebp
pop
mul
and
mov
popf
mov
jp
mov
aas
xor
xor
sbb
add
xor
xchg
mov
insl
pop
into
fs
in
imul
sub
sub
stos
xorl
sahf
mov
das
add
mov
fnsave
call
cmp
sub
sbb
jle
int
gs
jge
pop
and
inc
push
ds
pop
mov
addl
popa
add
ror
shrb
rolb
add
jle
je
ret
pop
xor
cmp
xor
pusha
mov
jecxz
cwtl
or
fisubl
out
xchg
roll
push
push
fistps
jg
pop
rorl
sub
jns
add
test
mov
mov
fbstp
xchg
pushf
rol
jne
ret
push
inc
lea
jge
sub
cld
mov
sub
lea
int
icebp
push
fnsave
push
jnp
mov
sub
xchg
scas
add
rsqrtps
sub
jb
push
inc
and
test
or
pop
in
in
repnz
dec
pushf
mov
leave
mov
test
sbb
ret
xchg
addr16
sbb
sub
daa
fadds
scas
jp
or
dec
inc
sbb
pop
dec
cli
popa
or
jp
es
je
scas
daa
mov
xor
xchg
jge
jne
sbb
out
mov
sub
movsl
adc
jmp
push
fidivrs
sub
bound
cmp
fcomps
ds
xor
lods
push
lcall
xchg
pop
leave
push
lret
jge
in
adc
and
data16
lea
shlb
popf
movsl
icebp
lahf
dec
pop
or
hlt
hlt
or
js
xchg
in
aas
mov
call
fs
push
jo
pop
add
sbb
mov
test
push
dec
les
mov
xor
lock
or
fnop
sub
or
ret
lock
leave
mov
addr16
push
pop
psubusw
dec
xchg
jnp
xor
and
xchg
xchg
aad
push
das
sub
add
push
pushf
jecxz
xchg
cmpsl
sbb
lcall
lods
loope
mov
dec
out
mov
int
pop
dec
hlt
mov
pop
push
xchg
xor
repz
in
jbe
std
sub
scas
out
add
aas
mov
jb
dec
lahf
xchg
insb
jb
jae
leave
mov
jne
push
pop
popl
in
cld
stos
fisubrs
inc
sarl
es
outsb
push
pushf
cmp
adcl
xor
loope
inc
scas
push
xor
fisttpl
fcoms
into
jecxz
mov
test
stos
inc
jmp
orb
clc
pop
loopne
scas
sarb
jl
mov
xor
mov
mov
pop
ds
pop
enter
cmp
xor
mov
jo
and
shrb
lret
mov
les
jmp
hlt
cmp
cmp
push
ds
adc
insl
and
lahf
rol
jnp
push
out
fstpl
fcomps
cmpsb
mov
int
inc
push
cwtl
shrb
inc
into
movsb
std
imul
cmpl
and
mov
fidivrs
rorl
cmpl
outsb
or
inc
xor
aam
subl
pop
push
lahf
or
and
inc
push
jle
insl
test
repz
adc
add
dec
mov
mov
inc
jmp
dec
xor
add
sbb
pushf
xor
sub
dec
popa
xchg
push
imul
adc
in
sahf
and
les
adc
aas
mov
dec
loope
mov
loopne
pop
jae
dec
fidivs
data16
jle
rorb
mov
sarl
inc
sbb
mov
iret
lret
sti
mov
sub
mov
dec
mov
lret
pop
mov
or
mov
pop
push
xlat
jns
clc
in
jecxz
scas
mov
cmpsl
std
push
je
enter
in
or
inc
mov
repnz
divb
sbb
inc
jae
or
push
adc
in
cld
leave
push
pop
add
outsl
fisttpll
dec
mov
rcr
fwait
mov
inc
imul
ds
xchg
push
jb
out
lock
stos
sub
sub
scas
push
push
xor
aam
fcmovnbe
jo
add
cli
ret
sarl
daa
leave
jmp
push
fwait
inc
dec
int
mov
pop
fdivrl
leave
jl
sarb
xor
aad
clc
jmp
or
mov
pop
inc
ss
mov
cltd
sbb
ror
mov
pop
or
pop
dec
mov
int3
jecxz
cmp
jmp
sub
fwait
add
mov
dec
pop
lahf
xchg
insl
int
dec
or
cmp
scas
xchg
popf
mov
orb
adc
xchg
dec
pushf
lods
inc
push
add
mov
jl
nop
sub
adc
jle
pop
or
lds
mov
jnp
push
ljmp
sub
mov
test
pop
add
imull
inc
loop
in
mov
fwait
cmp
xchg
or
cmp
je
jo
xchg
or
add
lds
jecxz
mov
mov
or
jo
xchg
mov
ret
pop
and
xor
add
mov
and
dec
test
cmp
leave
pop
push
push
pop
les
pop
push
cmp
cmp
push
out
add
push
push
inc
sub
fbstp
int
mov
mov
sub
stos
jecxz
xchg
jo
outsb
mov
mov
aaa
mov
push
sub
call
daa
stos
and
into
loope
or
xchg
loope
mov
xor
sbb
and
mov
gs
scas
sub
int3
scas
sub
in
push
jmp
inc
shll
cs
dec
lock
push
fstpl
loopne
mov
pop
ret
xchg
rolb
inc
or
mov
repnz
stc
enter
mov
jns
imul
push
pop
pop
pop
add
or
push
test
pop
ja
in
adc
pop
push
and
and
jp
xor
dec
adc
adc
rorl
aad
cmpsl
dec
lods
pop
das
inc
les
daa
int
out
add
pop
and
aaa
mov
imul
bound
fisttpll
jno
sbb
jp
jae
imul
stos
popa
push
pop
dec
movsl
jnp
das
andl
adc
int3
shrb
jnp
dec
push
dec
mov
cmp
and
add
and
and
dec
out
or
loope
lea
sbb
ljmp
cmp
lahf
cmp
cmp
das
fldl
fld
insl
out
push
push
sti
dec
clc
dec
imul
and
cmpsl
aam
stos
test
daa
and
das
lcall
cmp
in
dec
sub
stc
jns
adc
jnp
nop
int
and
dec
ds
mov
enter
arpl
in
icebp
mov
adc
xchg
xchg
xor
push
mov
or
jmp
loope
add
sub
cmp
cwtl
lret
jge
mov
ss
lods
inc
sbb
in
jg
xchg
jns
inc
in
lret
mov
in
inc
fsubrs
rcll
jl
push
push
mov
ljmp
popf
adcl
rorb
jle
jg
cmp
inc
push
jno
mov
xchg
divb
loope
add
in
aad
in
shlb
insl
and
fcmovnbe
cmpsl
and
mov
loop
sub
leave
hlt
mov
mov
js
divl
lret
add
xor
out
sbb
je
in
ret
stos
lret
mov
ds
xchg
add
push
mov
out
jae
js
mov
cmc
lahf
push
and
mov
outsl
movsl
inc
sbb
ds
cmp
and
mov
xor
mov
xlat
dec
sbbl
cwtl
fbld
pop
or
sbb
cwtl
dec
adc
xor
mov
int
mov
and
mov
xchg
icebp
inc
ret
add
fdivrs
jb
adc
push
lea
test
xchg
cmpsb
and
jae
mov
and
xchg
add
cmp
lods
je
mov
xchg
mov
mov
xor
lods
pop
loopne
in
sub
cmp
ds
fsts
and
ljmp
imul
jmp
sbb
add
enter
push
ja
xlat
cwtl
fidivrl
ficompl
mov
pop
mov
push
mov
jg
xorl
shr
dec
xchg
loope
roll
sub
es
adc
lcall
in
dec
mov
xor
scas
inc
mov
pop
sub
dec
sub
rcrb
out
cmp
dec
adc
lea
cmp
insl
rolb
ljmp
push
clc
add
push
push
pop
mov
pop
dec
xor
ljmp
in
jecxz
xchg
das
xchg
in
outsl
fsub
dec
shrl
ss
jmp
sti
xor
jmp
jne
xor
jl
cld
sbb
push
pop
sub
push
xchg
rcrb
add
test
mov
sub
cld
je
xchg
mov
dec
mov
mov
xchg
mov
cmp
dec
push
testb
ret
push
cvtps2pd
mov
test
sbb
jge
sti
or
fcoms
push
push
js
xor
sti
js
or
stos
sub
insb
icebp
sbb
mov
loopne
mov
pop
jg
mov
pop
xor
stc
push
fsubrl
jnp
pusha
add
jg
cwtl
mov
jecxz
clc
jne
bound
jp
lret
mov
dec
mov
add
xor
fsubrl
fwait
mov
inc
fdivs
test
pop
sub
dec
andb
sar
xor
ret
daa
mov
cwtl
out
sbb
dec
scas
popl
xchg
rorl
pop
dec
sbb
shll
imul
test
jge
loope
xor
add
mov
jns
aad
sahf
sbb
ffree
inc
arpl
shl
adcl
scas
loop
sbb
pop
aam
dec
rcrl
pop
xor
adc
sub
dec
insl
mov
out
xchg
add
push
push
mov
addr16
xchg
iret
mov
or
push
in
lds
cmp
fnstsw
cmp
inc
pushf
bound
mov
mov
xchg
out
out
xchg
pop
sbb
xor
jae
push
lods
xor
js
add
js
pop
inc
dec
movsl
jp
push
clc
jle
lods
gs
sub
pop
xchg
xor
mov
lret
movsl
cmp
aas
lahf
lahf
es
pop
and
mov
incl
and
xchg
test
push
pop
sbb
mov
mov
int3
fimull
sbbl
cs
fimuls
stc
jo
push
push
repnz
test
sbb
std
push
cs
push
jne
lods
inc
imul
pusha
pop
iret
lcall
mov
pushf
sbb
int
je
lock
in
lods
rol
into
icebp
push
inc
dec
inc
mov
jb
daa
jne
mov
out
pop
lahf
jmp
adc
ret
in
incl
scas
stc
xchg
lock
jl
or
and
shl
inc
jl
jno
dec
inc
xor
mov
xor
and
cmp
cmc
rolb
movsb
or
bound
xchg
sahf
and
mov
stos
stos
arpl
std
xchg
jnp
dec
fldt
cmp
xchg
cmp
outsb
mov
icebp
iret
sub
xchg
add
adc
int3
ret
or
or
lods
mov
lahf
mov
in
leave
xor
and
ds
jmp
in
adc
data16
out
lds
out
mov
or
popf
xchg
xchg
push
xchg
cmpsb
stc
push
and
add
and
lods
adc
insb
and
and
lret
loope
sub
aam
xchg
sbbl
sbb
stos
cmp
adc
movsl
mov
mov
cmpsl
push
loope
push
dec
ja
xchg
inc
pop
shrb
ret
mov
dec
pop
jne
fidivrs
inc
xor
adc
mov
dec
fs
mov
dec
pop
lcall
lds
sub
jg
mov
xchg
push
rcll
lea
movsb
mov
xchg
mov
loope
xchg
mov
push
jne
sbb
mov
pop
inc
sbb
dec
popa
mov
arpl
cmp
jp
mov
push
in
pop
nop
sub
sub
add
clc
or
jb
mov
sub
push
in
mov
faddl
inc
nop
pushf
sbb
dec
cmp
push
cld
add
sbb
shlb
pop
and
fcomi
je
jnp
cmp
scas
jle
inc
movsl
pop
push
xor
push
stc
dec
xchg
leave
test
push
fisttpl
fisttps
pop
cs
scas
fstpl
movb
mov
xor
data16
sub
push
cmp
sub
repz
hlt
ret
push
mov
dec
xlat
push
xchg
xchg
inc
popa
pop
or
imull
xor
add
outsb
push
icebp
jne
inc
lods
mov
dec
fsub
dec
sub
mov
mov
dec
mov
addr16
push
pop
fwait
rol
enter
sbb
pop
scas
insb
mov
push
adc
inc
jge
inc
inc
adc
dec
sbb
loop
jbe
sub
les
sub
push
mov
pop
jle
popa
leave
arpl
clc
push
pusha
inc
mov
pop
xchg
lret
mov
add
iret
sbb
fstpt
inc
mov
sbb
mov
cltd
mov
inc
lsl
cmpb
cmpsl
jnp
mov
call
pop
xor
js
jle
mov
dec
sahf
dec
lcall
fimuls
int
or
ret
add
ja
pop
inc
inc
jns
xor
push
imul
push
add
fsub
xor
mov
xchg
xlat
lahf
stos
push
decl
sbb
inc
fnstenv
aaa
inc
and
das
in
fstpt
dec
and
sti
sub
jae
test
sub
mov
jo
mov
arpl
push
or
scas
and
lock
push
xor
jp
add
sti
cmpsw
dec
aad
cmp
cmp
sub
cld
pop
xchg
test
addr16
xor
rorb
aam
xor
add
outsb
push
js
fwait
push
mov
shll
scas
testb
mov
hlt
insb
aad
xor
sub
fdivl
inc
or
jnp
pop
bound
imulb
les
sub
repz
dec
dec
push
pop
fidivs
fstpl
sbb
adc
movsl
rorl
dec
out
outsl
out
shll
xchg
stos
jle
cmp
bound
lcall
jo
dec
mov
dec
sub
pop
add
pop
addr16
daa
sub
dec
sbb
shrb
add
pop
add
cmpsl
sub
rcrl
xor
sub
xchg
cmp
and
inc
push
inc
cmp
mov
mov
setge
mov
nop
aas
sbb
xchg
dec
rdpmc
and
cmp
dec
or
enter
fnsave
xchg
pushf
jnp
mov
push
mov
xchg
mov
mov
mov
pushf
js
ss
or
dec
or
and
push
jae
cmp
sub
mov
das
mov
jns
mov
mov
sub
or
fmul
pop
mov
fs
push
pusha
in
inc
jg
jge
inc
daa
orb
cli
push
jns
xor
js
dec
shll
lret
fld1
int3
sub
fiaddl
lock
ficoml
pop
dec
loopne
sbb
xor
test
addr16
repnz
xchg
xchg
movsb
es
jge
ret
inc
xchg
pop
cld
les
loopne
xorb
push
mov
pusha
shr
mov
pop
mov
mov
sbb
cmp
insl
test
dec
mov
mov
test
mov
sub
test
shl
cmpsl
test
cs
inc
cmp
jecxz
repz
fldt
in
xchg
push
js
ret
ficoms
xor
nop
jmp
repnz
in
in
fistpll
add
adc
xor
cmpsb
lret
shl
sbb
fs
push
loopne
sbb
repnz
in
outsl
enter
js
jae
adc
mov
jo
aaa
sub
lret
out
dec
inc
mov
push
cld
adc
cmp
pushf
aas
and
pop
mov
pop
fbstp
push
mov
add
aaa
adc
push
jmp
orb
mov
data16
movsl
shl
test
ret
and
leave
sti
inc
incb
push
mov
je
cwtl
iret
sbb
out
adc
push
ljmp
pop
adc
mov
bound
mov
ret
lea
and
mov
lods
outsl
bnd
mov
xchg
mov
int
cmp
adc
iret
js
push
or
push
orb
outsb
and
test
cmc
icebp
lods
std
adcl
in
mov
mov
lock
stos
cmp
mov
add
jo
ljmp
das
movsb
scas
push
push
jmp
sbb
scas
mov
out
jl
mov
xor
fstpl
mov
mov
xchg
and
sub
ja
gs
mov
jno
xor
dec
jle
and
fcomip
scas
in
fildl
out
test
inc
mov
out
daa
adc
adc
xchg
push
out
outsb
pop
arpl
dec
xor
mov
jmp
jl
clc
lea
push
rol
popf
scas
jle
pop
mov
mov
repnz
cmpl
lods
stos
xchg
sub
push
std
cmpsb
or
sub
mov
xlat
cli
test
adc
int
sarl
lods
in
repz
add
push
loopne
mov
jecxz
dec
jecxz
cmp
mov
push
sbb
mov
mov
dec
fdivl
in
sub
dec
stos
je
lock
scas
jle
cli
lcall
repz
mov
pusha
neg
clc
dec
xchg
mov
inc
insb
pop
out
lods
cld
cmpsb
sbb
cmp
mov
fistpl
push
xchg
inc
pop
mov
je
addr16
jmp
xchg
ss
popf
subb
pop
pushf
jle
mov
data16
pop
sub
mov
jle
lods
push
sub
test
xchg
jge
adc
pop
les
ja
pushf
ss
sbb
imul
dec
mov
bound
or
fs
lods
inc
or
movsl
out
or
mov
rorb
or
pop
sbb
push
push
and
clc
iret
outsl
incb
outsb
shrb
mov
push
xor
lods
xchg
mov
flds
pop
sub
pop
xor
dec
stc
xchg
cmp
lcall
push
mov
addl
rcll
sbb
dec
or
out
arpl
nop
sub
cmp
pop
aaa
jo
aas
mov
fs
sub
push
inc
sbb
imul
nop
fsub
and
or
in
and
sub
in
mov
push
cmpsb
out
inc
test
xchg
sbb
xor
loop
cmp
pop
lds
inc
mov
or
pop
add
pop
or
gs
adcb
shll
pop
aas
insb
lret
mov
xchg
fmull
jne
mov
lock
aaa
dec
cmp
lahf
xor
hlt
sbb
add
adc
shl
xorb
nop
sub
dec
nop
xchg
hlt
xor
mov
es
ficoms
mov
dec
aas
sbbb
inc
mov
add
inc
hlt
scas
testl
push
mov
push
loope
out
cmc
add
out
jmp
lret
lcall
sbb
push
je
or
arpl
jae
ret
pop
ret
not
dec
mov
sub
fnstcw
jns
arpl
stos
jp
xor
mov
fnstenv
leave
adc
jno
jbe
popa
bound
aas
subl
sbb
push
test
gs
xor
ret
mov
ljmp
xchg
ds
cmpsb
mov
cmc
mov
sahf
or
inc
dec
je
pusha
aas
pusha
imul
add
out
je
sub
push
int3
sub
out
cmp
pop
std
cmpsl
jnp
loope
rorl
out
xadd
in
cmp
or
sub
mov
sti
pop
pushf
jle
leave
cmp
xchg
dec
subl
dec
mov
xor
mov
inc
ss
fldenv
pop
fstps
adc
mov
xor
std
xchg
outsb
mov
pop
mov
xchg
rorb
mov
and
scas
jmp
push
movsl
xchg
push
dec
iret
gs
cmp
push
mov
int
jp
aam
popf
mov
mov
das
push
push
xor
jbe
fnstenv
sub
loope
nop
aad
sbb
lret
fucomi
jne
inc
in
fwait
or
loopne
out
mov
incb
mov
loop
scas
into
in
test
xor
dec
popf
fsubl
jb
rorb
movsl
je
push
inc
mov
xabort
or
fnstsw
push
add
mov
inc
cmpsb
xchg
loop
movsb
fcompl
and
test
pop
loopne
fistl
adc
sti
cmp
lods
sub
mov
ja
lret
and
lea
xlat
cmpsb
loop
nopl
lret
mov
out
cs
jmp
std
or
mov
xchg
movsl
fbld
jne
jg
jg
mov
jge
sbb
ret
xor
hlt
adc
fisubl
out
out
loop
and
mov
negl
lods
jno
ret
jne
mov
or
jle
outsl
lcall
mov
loop
cmc
idivl
pop
rorb
sub
in
mov
lock
cmc
fnstenv
aad
fdivrl
dec
data16
rolb
outsl
aad
js
movsb
pop
cli
sbb
pop
xchg
jp
std
pop
faddp
ss
int3
adc
dec
sub
stos
subl
iret
and
add
mov
pop
jbe
and
cwtl
bound
add
loope
incl
mov
inc
and
enter
dec
or
add
cmpl
jae
inc
hlt
jnp
pop
jne
rclb
fistps
out
movsb
clc
pop
or
jb
pusha
outsl
iret
sbb
mov
jecxz
jno
mov
clc
out
pop
pop
enter
dec
outsl
es
stos
adc
mov
testl
push
mov
data16
mov
outsb
jbe
mov
sbb
jl
push
les
scas
lret
repz
inc
jge
adcb
adc
ret
mov
sbb
push
repz
andl
fsubr
sbb
xchg
out
fidivrl
popf
pusha
addr16
fsubs
hlt
addr16
sub
sub
mov
push
out
cwtl
lods
cmp
rclb
and
aam
pop
inc
jo
enter
insl
daa
mov
stos
jge
add
cmp
pushl
mov
dec
jmp
jns
loopne
pop
pop
mov
sub
lea
js
test
negl
mov
sbb
ds
fistps
or
push
std
push
cli
test
insl
cmp
xchg
iret
pop
push
ljmp
imul
aad
pop
sti
dec
stc
mov
sub
push
jne
push
jmp
clc
mov
inc
cmpsl
mov
in
add
aad
pop
add
xor
inc
jp
shll
sbb
xor
sub
pop
inc
neg
loop
insl
dec
test
and
xlat
jno
mov
jl
mov
sbb
cmp
dec
ja
push
push
pushf
push
inc
shll
sub
xorl
xor
push
push
pop
ret
nop
push
clc
pusha
popf
mov
fwait
out
data16
push
jns
imul
add
cltd
mov
or
dec
jae
leave
mov
icebp
rorl
fistl
mov
jge
outsl
sbb
mov
imul
sub
hlt
clc
sub
outsb
mov
xchg
int
cwtl
arpl
add
out
icebp
call
lret
xor
mov
test
cmp
pop
arpl
jl
ds
dec
sahf
clc
cmp
push
cli
adc
xor
xchg
jb
inc
inc
lahf
call
das
and
aaa
add
mov
mov
mov
jle
enter
out
and
aas
mov
cltd
cmpl
jb
inc
xlat
faddl
movsl
adc
mov
jmp
mov
roll
outsb
fidivl
adc
repz
or
adc
xchg
test
mov
fwait
xor
stc
ror
mov
cmpsb
push
lds
roll
inc
mov
dec
dec
xor
xor
mov
imulb
loopne
xor
or
pop
jle
enter
cld
aas
xchg
xchg
pop
test
movsl
xor
rdpmc
add
lret
cmp
jae
adc
mov
cltd
add
xor
sub
iret
mov
inc
in
movsb
push
fs
lcall
pop
aas
lods
mov
dec
sbb
pop
sti
rcr
mov
push
mov
xchg
sar
push
add
xchg
and
dec
scas
and
shrb
into
dec
fs
mov
jl,pn
nop
lea
clc
cltd
push
push
inc
jns
jno
dec
leave
adc
test
roll
pop
pop
lret
push
cwtl
arpl
mov
push
push
cwtl
pop
mov
xchg
jno
fcmovbe
mov
enter
xlat
nop
stos
das
int
dec
fldcw
inc
jbe
push
mov
bound
loopne
loopne
xlat
push
insb
mov
jl
push
dec
fbld
jl
shlb
fcompl
xor
inc
stos
dec
sahf
jp
adc
insb
mov
fwait
mov
add
popa
adc
imul
in
push
pop
insl
ret
pop
xor
fildl
adc
test
fsubl
jle
test
je
sbb
add
test
pop
int
adc
clc
or
test
dec
dec
aaa
cmp
in
push
add
mov
jne
push
imull
cmp
int
int3
hlt
movsl
push
jge
mov
cld
push
xchg
mov
sbb
or
mov
pop
mov
mov
cwtl
ja
mov
add
xor
pop
cmpsl
stos
test
pop
mov
subl
repz
push
cmp
sbb
jns
sbb
pop
sub
bound
adc
inc
stos
pop
aad
cmpsb
cmpb
es
dec
inc
das
push
adc
cs
xchg
pusha
cmp
jp
xchg
xchg
roll
hlt
loopne
lods
int3
mov
and
or
jl
rcll
repnz
loop
out
stos
cmpsl
ljmp
or
outsb
call
ja
je
outsb
pop
dec
add
icebp
xchg
outsl
pop
leave
arpl
and
mov
repnz
enter
popa
stc
mov
pop
and
les
or
outsb
mov
repnz
mov
sub
xchg
out
adc
imul
jmp
les
lock
and
jns
addr16
imul
sub
jg
int
sbb
push
jo
push
mov
out
ds
push
into
dec
dec
mov
orb
ljmp
mov
or
ljmp
cmp
jmp
data16
popa
cmpsl
rorb
data16
outsb
out
cmp
dec
es
pop
or
mov
and
jmp
sbb
sbb
jb
adcb
adc
cli
outsb
lcall
jns
imul
clc
jp
cli
mov
leave
xor
cli
call
inc
mov
out
mov
mov
push
fdivrs
rcrb
mov
hlt
push
test
repnz
jnp
out
or
jbe
gs
lahf
mov
lods
and
movsl
sub
pop
mov
dec
movsl
cmp
mov
out
cmc
push
call
sbb
in
sbb
push
jge
and
je
nop
ret
ror
xor
sub
cmp
out
icebp
sarl
sub
fmul
iret
push
mov
fimull
call
sub
fisubrl
sub
inc
xor
lcall
jns
out
add
add
cs
mov
lahf
or
loop
pop
cmpb
mov
into
test
xor
xor
popf
xchg
jp
jns
jne
mov
pop
sub
mov
jb
pop
out
lock
xor
pop
sbb
mov
push
je
movsb
sub
cmp
xlat
dec
stos
lock
loope
push
or
cmp
bswap
iret
fistl
stos
pop
mov
pushw
push
jnp
xchg
mov
jg
push
movsl
cwtl
sub
clc
push
add
mov
mov
arpl
mov
out
mov
jbe
data16
fdivr
add
sub
stos
pop
add
xchg
outsb
jle
cld
pop
enter
inc
icebp
loope
push
fmuls
cmc
or
lea
ror
lds
sbb
int
mov
je
mulb
getsec
stos
daa
or
jge
sbb
mov
insb
mov
cmp
loope
shlb
sub
lret
sub
or
xorb
sbb
divb
decl
ds
mov
mov
and
adc
push
stos
fistpl
inc
sysenter
loop
mov
inc
cld
mov
lods
icebp
add
sub
and
xor
stos
faddl
push
mov
push
push
mov
mov
push
gs
inc
int
mov
cli
xor
fstpt
push
das
sub
mov
cwtl
mov
ret
arpl
mov
mov
add
loop
orb
stc
cwtl
push
cmp
fnstcw
ja
xor
faddl
add
adc
mov
icebp
int3
pop
fnsave
test
popa
push
adc
sub
adc
out
insl
fistpll
in
cmpl
mov
dec
jp
test
ror
hlt
and
inc
ds
jge
push
jp
push
push
mov
add
mov
add
push
rol
in
divb
inc
orb
pushf
loopne
rsqrtps
rclb
sub
cmc
sti
inc
mov
sbb
idivb
jmp
je
and
test
orl
xor
fs
fucom
push
ret
add
dec
jne
mov
inc
xchg
cmp
push
add
fnstenv
xor
xor
pop
dec
adc
lods
fisttps
in
fst
mov
xchg
aad
sbb
mov
xchg
inc
clc
xchg
or
jne
std
loope
xchg
or
cmpsb
mov
pop
faddl
xor
mov
xlat
in
sbb
imul
and
inc
add
xor
mov
mov
insl
cld
mov
lock
aaa
sbbl
jno
push
jnp
xlat
cmp
cmp
mov
sarl
ret
fsubrs
fldenv
jmp
les
dec
lahf
mov
aad
xor
enter
pop
orl
inc
pop
test
xor
fidivrs
mov
aaa
adc
ficoms
and
enter
pusha
mov
fildll
sti
dec
push
inc
cmp
das
cs
scas
push
pop
mov
add
addl
push
inc
repnz
inc
push
aad
xor
rolb
movsl
lock
pushf
movsb
mov
mov
mov
inc
int3
ss
sbbb
sti
dec
fisttpl
sar
sbb
repnz
test
xchg
inc
push
sub
dec
imul
mov
xor
test
pop
lock
adc
mov
movsl
cwtl
fisttpll
inc
xchg
pop
jl
shll
jmp
and
lret
stc
aaa
cmp
fcompl
call
shr
jl
jbe
aas
sti
sub
mov
push
fwait
dec
mov
stos
mov
xor
jb
adc
adc
into
add
iret
mov
in
add
popa
je
andl
ret
js
mov
int
das
add
xchg
lods
in
cli
mov
popl
push
lds
loop
jnp
sbb
insb
cmpsl
insb
pusha
daa
add
outsb
pop
pop
pop
shll
sbb
or
adc
mov
icebp
pop
jno
jmp
call
data16
cmp
mov
mov
xchg
and
cmpsb
jmp
or
fcomp
out
sbb
xchg
push
push
jnp
inc
rep
fcompl
fsts
dec
jmp
cmp
rorl
loop
mov
rclb
add
dec
xor
or
jns
add
faddl
and
std
xlat
mov
jg
dec
repnz
jl
cltd
js
sub
xor
xchg
fwait
mov
jbe
repz
int
outsb
leave
pmaddwd
jb
insb
pop
imul
repnz
inc
xlat
lcall
stos
in
sub
jo
cmpsb
push
in
aaa
xchg
dec
pop
mov
push
addr16
cmp
popa
adc
cmp
push
xchg
mov
loop,pn
sub
data16
mov
inc
sbb
imul
and
mov
sti
jecxz
addr16
and
lods
fstl
fs
cld
pop
push
nop
dec
lea
add
push
push
cli
lret
inc
pop
xor
out
or
shll
test
dec
rorl
negb
mov
js
push
ret
xchg
repz
push
lods
push
sbb
test
and
cmpsb
xchg
and
bound
aas
sub
cmp
push
test
mov
push
xchg
ljmp
mov
and
pop
xchg
sti
jne
fists
scas
inc
adc
ljmp
cmc
stos
rolb
mov
out
call
sbb
mov
mov
dec
inc
mov
jo
ds
dec
sbb
xor
mov
fwait
cwtl
push
sub
mov
stos
jecxz
pop
out
test
inc
or
loope
mov
arpl
sub
pop
ds
jp
cmp
cltd
dec
lahf
mov
fstpl
addr16
xchg
shl
stos
cltd
xor
cmp
add
cltd
mov
sahf
adc
xchg
sbb
inc
les
push
das
fxch
iret
jae
sbb
cmp
jno
lret
ret
pop
mov
add
into
jb
scas
fcomp
jmp
sub
mov
cmc
rclb
cmc
mov
add
or
in
cmp
mov
es
push
ja
or
adc
scas
into
push
push
sub
adc
jg
addr16
or
stc
loop
add
out
clc
push
out
push
loop
cmp
rcr
neg
fiaddl
push
jno
or
xor
jo
jns
mov
fs
jle
lahf
push
xlat
sbb
popa
fs
adc
mov
sub
repz
fldl
es
or
xchg
out
fisttps
inc
dec
outsl
and
adc
in
cmpsb
adc
nop
cli
inc
insb
xchg
push
pusha
adcb
js
movsl
sub
out
mov
mov
es
add
inc
hlt
cltd
fldl
jns
add
jmp
jmp
sar
fcmovb
movsb
jl
rcpps
rclb
or
mov
adc
jle
pushf
ss
add
shll
test
shrl
mov
test
xor
mov
in
jno
leave
dec
xchg
arpl
xchg
pop
loope
gs
jb
push
and
mov
je
or
frstor
out
jns
mov
enter
jle
push
pop
and
jl
jecxz
mov
or
jae
lea
bound
aad
jbe
jmp
gs
sub
mov
bound
jmp
and
aam
pop
mov
idivb
mov
subl
int
daa
iret
inc
je
iret
xor
mov
pop
push
inc
pushaw
jle
addl
ficompl
inc
shlb
test
lods
add
mov
push
out
xchg
cmp
mov
xor
mov
add
jns
ds
out
roll
lds
push
aas
push
fstpt
loope
xlat
rcrl
aaa
adc
push
orb
jo
mov
leave
sahf
dec
push
inc
jle
aad
loopne
dec
mov
inc
pusha
pop
jg
cmp
jecxz
mov
dec
fwait
shlb
mov
ds
mov
aas
pushf
inc
adc
jno
jge
in
or
jecxz
lret
dec
mov
test
lret
fdivrp
mov
imul
andb
xor
rol
mov
add
cs
adc
inc
adc
outsl
and
lea
adc
dec
jne
mov
mov
and
adc
dec
cmpsl
lds
pop
repnz
xchg
mov
jg
test
lods
hlt
ss
sbb
pop
push
insl
arpl
sbb
inc
or
mov
dec
xor
inc
inc
sbb
sbb
rcll
je
sbb
pushf
test
clc
subb
mov
mov
jle
dec
mov
ret
ret
outsl
cmpb
push
adc
je
scas
lods
push
call
pushf
stos
jo
or
adc
test
mov
pop
mov
repnz
pop
pop
jl
sbb
cwtl
push
faddl
decb
cmc
xchg
into
jg
js
sub
jmp
imul
pop
sbb
std
das
xchg
cwtl
mov
es
sbb
xchg
lcall
shrl
inc
ds
repnz
sbb
inc
into
dec
subb
jp
imul
xor
mov
lods
xchg
xchg
add
test
mov
ret
sub
jmp
dec
in
ds
pop
int3
jbe
mov
or
inc
adc
mov
sub
es
lret
mov
and
push
sbb
and
jbe
push
add
mov
int3
clc
xchg
inc
sti
shl
jg
fnstcw
jecxz
ret
dec
dec
add
xor
xchg
outsl
cmp
daa
xor
adc
jg
stos
nop
push
adc
fildl
cwtl
jp
jle
decb
ja
pop
movsb
cmpl
icebp
cmpsb
aam
cmp
ret
gs
roll
aas
call
call
dec
incb
xor
jo
push
push
mov
and
xchg
or
aaa
sub
in
dec
ljmp
cltd
cli
push
rep
lods
or
lahf
dec
fs
pop
push
int3
and
dec
les
mov
sub
out
and
mov
iret
mov
mov
test
dec
mov
repz
xor
jb
push
add
jmp
cmp
mov
imul
adc
sbb
and
xor
popa
xchg
mov
cld
repnz
scas
fldcw
xlat
ret
movsb
push
cmc
repz
xor
rol
popa
jnp
cmp
adc
test
xor
and
cwtl
in
mov
negb
lock
mov
in
push
jo
mov
aad
pop
sbb
fildl
push
cmp
xor
fwait
add
or
push
loop
lea
push
pop
inc
sahf
jp
aaa
mov
and
xor
popf
scas
adc
mov
xor
jns
adc
inc
fcoml
xchg
mov
jmp
rcrl
call
mull
and
nop
data16
xchg
jg
mov
test
and
test
repnz
shlb
push
test
mov
sahf
idivb
mov
pop
je
xor
and
adc
xor
outsl
add
ss
test
mov
rcr
gs
or
jae
xchg
jb
jl
loope
dec
lret
mov
lret
dec
ret
repnz
loop
sbb
hlt
pop
xor
clc
fdiv
into
popf
out
fimuls
xor
hlt
cwtl
lcall
js
push
int
icebp
in
pop
xorb
fs
lock
sub
sar
lcall
out
fcmovnb
fwait
repnz
aas
xchg
inc
jae
adc
push
mov
push
push
sbb
imul
repnz
cmp
mov
and
xchg
mov
nop
sub
sbb
lret
movsb
adc
dec
inc
shl
test
lods
mov
loopne
push
jmp
test
add
or
fdivs
daa
nop
stc
jmp
fistpll
xchg
add
adc
mov
jecxz
insb
lahf
or
push
adc
ja
lret
mov
lods
decl
adc
outsb
push
mov
push
movsl
or
sub
mov
jno
push
pop
in
sub
push
ja
jb
out
sbb
iret
adc
repz
jae
push
out
cmc
loope
jae
jno
stos
mov
xor
adc
stos
mov
xchg
out
cld
cmp
test
mov
xchg
mov
and
mov
jne
pop
mov
jae
adc
mov
ss
dec
sbb
sahf
stos
lret
sar
repnz
push
jnp
push
std
and
int3
and
sbb
mov
or
add
bound
mov
arpl
fsqrt
adc
mov
adc
loopne
xor
sahf
xor
icebp
testl
addb
aaa
or
sarl
pop
mov
lret
jecxz
push
scas
lret
push
mov
movsl
sbb
mov
fwait
mov
jne
xor
in
mov
sarb
sahf
sub
lock
push
pop
mov
sbb
push
std
shr
test
sub
jae
mov
cmp
inc
dec
lods
add
add
and
lret
stos
pinsrw
pop
filds
jbe
rorb
xchg
add
movsl
push
out
adc
movsbl
pop
aas
fucomi
aad
scas
adc
pop
push
push
js
hlt
pop
lock
dec
adc
subl
inc
mov
pop
addb
inc
add
ret
or
mov
cmp
stos
xchg
fsts
jbe
cmp
or
dec
dec
les
sbb
fninit
sti
xchg
adc
xchg
cmpsw
sub
mov
lret
sbb
imul
xchg
inc
sbb
push
dec
or
pop
mov
leave
push
xor
xor
fwait
cmp
xchg
ja
fldenv
jge
xchg
add
mov
pusha
jbe
imul
les
out
stc
popf
push
in
cmc
aad
sub
jne
rorl
out
push
push
cmpsb
add
std
cli
jle
mov
sarb
xchg
cmpsb
dec
pop
adc
aad
pop
fmull
xchg
inc
xchg
inc
test
int3
mov
cmp
jns
jecxz
ss
mov
pop
scas
mov
ja
movsl
std
insl
shr
jb
dec
xchg
es
mov
mov
push
adc
cmpsb
int3
adc
scas
adc
fldenv
mov
mov
jne
stc
fbld
xchg
adc
jo
ja
mov
push
stos
stos
push
add
imul
popa
pop
fdivr
push
ljmp
pop
add
cs
mov
push
pop
dec
adc
jae
cmp
cmp
mov
dec
xor
hlt
mov
lahf
call
push
push
adc
sbb
movsb
jge
std
push
mov
adc
dec
sarl
push
push
and
mov
dec
and
mov
dec
add
pusha
xor
or
fwait
mov
repz
test
push
sbb
sbb
addb
loope
mov
lret
add
or
mov
cwtl
cmp
push
fstpt
int
dec
mov
in
push
test
hlt
cmp
and
in
xor
imul
cli
scas
daa
mov
les
hlt
loopne
ss
jnp
jle
mov
xchg
mov
shll
aam
prefetch
and
xor
scas
pop
lods
sbb
inc
dec
or
push
cmp
push
or
in
scas
sarl
mov
xor
or
stos
mov
xchg
jp
fnstsw
roll
fcoms
pop
add
aaa
cmp
fildl
addr16
sbb
jl
fildll
imul
insl
or
jns
in
iret
xchg
cwtl
out
xor
jo
add
xor
sbb
jb
lds
and
mov
faddp
test
or
int3
mov
jbe
mov
mov
test
jmp
inc
mov
inc
cltd
fbld
popf
leave
push
stos
cmp
cli
pushf
aam
je
jbe
mov
and
cmpb
sub
mov
aas
sbb
fnstcw
add
push
inc
add
fs
jmp
in
jbe
xchg
add
or
out
adcb
cmpsb
mov
cld
lcall
jnp
xor
rcrb
xchg
cld
mov
in
cmp
repz
push
jno
movsl
out
arpl
mov
xor
pop
andb
lret
pop
jge
lcall
add
lret
or
pop
leave
xor
xchg
xchg
dec
xchg
aaa
aad
addl
ljmp
ret
and
outsl
int
fistl
mov
in
js
mov
pop
fsubl
inc
fwait
jb
push
imul
dec
sub
push
cmp
pushf
mov
ljmp
and
xor
sbb
les
mov
add
les
cltd
loope
lods
test
incl
jne
adc
xchg
inc
shl
mov
out
push
push
xchg
dec
bound
test
sar
addr16
push
jp
mov
adc
mov
add
dec
push
test
mov
ja
mov
push
mov
es
hlt
enter
lea
mov
xchg
test
leave
jae
pop
fs
enter
arpl
pop
xchg
es
fisubs
in
xor
pop
lret
sbb
jle
fs
cmpsl
jl
insl
inc
icebp
sub
cmp
push
shll
imul
imul
ja
inc
fldenv
data16
mov
and
hlt
push
mov
xchg
popa
pop
test
dec
dec
ljmp
jge
push
out
cmp
mov
outsb
fwait
loop
sbb
mov
cmpl
lea
adc
iret
stc
mov
loope
lret
cli
cli
xor
jo
cmp
mov
sub
or
pop
cmp
mov
xchg
dec
mov
lret
or
loope
loope
pop
je
and
push
mov
sbb
or
aam
mov
in
add
inc
inc
mov
add
int3
out
mov
push
insl
into
test
mov
sbb
cmp
cmpsb
je
cmp
nop
sti
adc
js
pushf
sub
lods
in
pop
jne
movsb
aam
push
ret
test
iret
push
orb
pop
pop
adc
mov
xor
jmp
pop
rcl
outsl
jp
outsl
mov
xchg
sbb
push
js
pushf
imul
fisubrl
addr16
cmp
add
les
sbb
popl
push
jne
xlat
sahf
or
movsl
daa
mov
push
mov
int3
add
cmp
pop
xlat
cmp
lea
enter
nop
jle
dec
aam
leave
sub
lcall
shlb
add
xchg
lea
fiaddl
sbb
out
shl
shl
jecxz
adc
adc
pop
popf
adc
jl
imull
ja
insb
daa
lret
test
sbb
sti
cmp
jecxz
fwait
imul
scas
das
sub
lea
dec
mov
mov
jo
imul
out
sar
push
scas
repnz
stos
insb
inc
xor
nop
cli
lret
sub
sub
insb
dec
stos
dec
pop
int
icebp
xchg
cld
sub
lahf
ljmp
lods
les
add
xchg
sub
aas
icebp
and
fldpi
js
aaa
or
daa
dec
int
test
int3
outsl
sub
cmp
subb
or
cmp
cmpl
jb
push
bound
pop
jnp
jecxz
int
mov
mov
ret
mov
icebp
jae
push
inc
cmp
and
xchg
xchg
mov
push
dec
je
xchg
inc
mov
shrl
pushf
in
lods
insl
mov
push
in
add
sub
mov
cs
call
ja
lods
inc
sbbb
repnz
mov
push
adc
out
aas
jo
or
lahf
ljmp
dec
push
addl
inc
scas
and
jecxz
je
lock
fwait
sub
fmull
pop
sub
cmp
adc
insb
jmp
cmp
xor
mov
adc
and
into
mov
lret
add
stos
dec
xor
push
std
mov
stc
scas
mov
xchg
dec
jnp
pusha
je
movb
or
dec
pop
cs
fldcw
fbld
xchg
xor
xor
hlt
push
pop
mov
stc
dec
int
lock
ret
cmc
hlt
cmp
int
negb
jno
packssdw
mov
jl
test
xchg
and
dec
inc
push
iret
in
icebp
sub
sbb
mov
sbb
fwait
adc
mov
pop
andl
cmc
js
jmp
xor
inc
insl
cmpsb
orb
mov
inc
xchg
scas
jbe
in
fs
inc
mov
gs
into
gs
jecxz
and
test
sahf
or
mov
adc
or
clc
call
insl
stc
mov
idivl
pop
lahf
mov
data16
jns
hlt
sub
clc
cmpsb
test
xchg
das
fwait
out
pop
jns
cwtl
or
pop
mov
dec
xchg
arpl
ja
mov
xchg
test
xchg
or
sub
pop
lea
scas
push
lea
test
sub
cs
dec
push
cwtl
fsts
mov
repz
xor
jno
push
pop
add
mov
aaa
fbstp
adc
sub
dec
bound
imul
fimuls
bound
nop
xorl
test
and
cmp
mov
pand
cs
cmp
pop
shrb
cmc
daa
pop
mov
and
cmpsb
add
mov
lret
hlt
or
fcmovne
pop
jnp
push
es
mov
inc
xchg
xchg
out
xchg
jnp
shl
cltd
ror
or
negb
push
adc
jae
dec
loope
insl
xor
cltd
mov
mov
ret
push
dec
cld
cmp
les
imul
aas
lret
xchg
push
jmp
mov
mov
and
aam
andb
bound
xlat
repz
aas
add
test
and
in
rcl
cmc
and
add
sub
es
xor
pop
sbbl
shlb
mov
cmc
jl
stos
addl
xor
fs
xchg
lcall
outsl
or
xor
jo
add
roll
xorb
pop
jecxz
nop
cmpsl
ljmp
test
loop
xor
jmp
daa
or
sti
shlb
jg
lea
out
cs
jne
popf
push
push
in
jo
cs
xchg
adc
adc
testb
lcall
in
mov
and
mov
jns
xchg
push
xchg
out
out
inc
ss
mov
jp
jle
push
std
inc
xchg
mov
mov
xor
mov
adc
jnp
lods
push
and
popa
mov
dec
movsl
icebp
pcmpeqb
pushf
movl
inc
pop
jno
ljmp
lods
xorb
dec
jbe
popf
pop
sbb
es
cs
in
push
mov
sbb
icebp
test
fsub
push
cwtl
lock
pop
xor
cmp
adc
lock
les
lock
sti
sti
out
das
cmpl
movsb
lea
fstpt
sub
jo
mov
or
pop
dec
cmp
popa
mov
std
ljmp
cs
loopne
jno,pt
sub
pop
pop
cmp
xor
je
cmp
fldcw
jbe
jnp
arpl
jl
lods
cltd
jmp
mov
cli
xor
fiaddl
jp
dec
fstps
inc
ds
into
aad
jae
insb
arpl
xor
push
xchg
outsl
cs
cmp
pop
enterw
add
cmp
jbe
adc
imul
add
mov
movsb
test
cltd
lods
pop
sahf
shll
and
push
pushf
pop
outsl
xchg
dec
inc
push
inc
inc
pop
jno
adc
sbb
aam
mov
outsb
sbb
sub
push
cmpsb
add
incb
cmc
fsub
mov
inc
cmpsb
push
lods
dec
pop
aad
popa
mov
jne
xor
dec
cld
adc
imul
mov
sbb
pop
xor
mov
scas
mov
icebp
in
pop
push
or
push
daa
arpl
je
jbe
test
test
js
lods
iret
das
mov
jno
push
jnp
xor
out
mov
and
call
loopne
mov
cmp
adc
loope
mov
mov
pushf
xchg
push
cwtl
and
xchg
notb
adc
sub
mov
push
push
or
loope
sbb
mov
jne
push
pop
sarl
inc
mov
cltd
lahf
lret
in
out
int3
test
mov
xor
xchg
or
sub
stc
inc
mov
and
sbb
xchg
add
sti
jp
gs
mov
out
stc
jbe
and
adc
test
sbb
or
enter
mov
stos
or
jp
mov
and
cmpsl
mov
lahf
loop
mov
outsl
std
xchg
leave
mov
mov
dec
mov
pop
mov
xchg
or
xchg
lods
mov
pop
pop
mov
sbb
imul
pop
cmpb
stos
mov
cmc
sbb
stos
loop
lods
adc
divl
mov
add
out
adc
das
jne
pushl
pop
jg
in
int3
xor
subb
data16
inc
dec
aam
pop
in
js
xor
lcall
sbb
lcall
lods
nop
sbb
test
adc
ret
outsl
clc
pop
pop
lods
aam
clc
sbb
cmpsl
mov
aas
cld
scas
inc
roll
insl
pop
outsl
aam
mov
rolb
adc
imul
shll
xor
sahf
or
outsb
mov
xchg
sub
cli
mov
lods
mov
sti
cs
jb
pop
or
jmp
adc
xchg
in
jl
inc
fisttpl
cmp
mov
aad
lcall
or
adc
popa
push
mov
mov
test
pop
insb
and
popf
imul
pop
xchg
ljmp
scas
lret
dec
lods
pop
add
popa
scas
jp
rcll
mov
aaa
aaa
ss
adc
rcrb
adc
jo
popa
loop
fsubp
cmp
lods
xchg
rcr
fisubs
add
outsl
mov
xchg
out
pop
cmp
movsl
jb
imul
test
out
sbb
dec
inc
dec
cmp
sbb
jmp
xor
pop
icebp
xor
jl
jb
imul
mov
and
push
cmp
push
test
xlat
sarl
add
lock
jl
dec
enter
out
out
add
stos
sub
pop
imul
int3
and
arpl
inc
imul
notb
push
jo
mov
nop
lret
mov
out
push
sbb
cmpsb
jg
sub
stos
jno
out
lock
sub
jns
insl
jnp
in
mov
dec
xor
mov
test
cmpsb
data16
mov
adc
icebp
jg
sbb
add
sahf
fwait
movl
or
shlb
mov
pop
xchg
mov
inc
insl
push
xor
dec
std
xor
iret
push
push
hlt
jo
popa
mov
xchg
jge
mov
xchg
push
mov
push
mov
imul
mov
dec
push
ja
mov
cmp
popf
sub
pop
clc
js
shll
mov
push
pushf
jecxz
dec
xor
jno
xchg
cld
bound
dec
xchg
call
mov
xchg
iret
mov
add
cli
repz
ja
lret
imul
inc
frstor
push
mov
rclb
orl
or
js
popf
mov
inc
icebp
pop
mov
leave
call
daa
enter
push
daa
or
iret
gs
faddp
ds
jmp
xchg
addr16
or
push
inc
test
add
mov
dec
inc
ret
jmp
scas
fsubr
cmp
push
jl
movsl
mov
repz
or
xchg
cmp
mov
dec
jmp
push
jno
and
adcb
pop
lods
or
hlt
lea
or
ret
xor
cmp
add
jnp
push
mov
test
enter
fidivrs
shll
inc
pop
pushf
mov
jl
inc
arpl
adc
int
push
test
imul
aaa
les
xchg
xor
and
push
add
aad
mov
mov
icebp
cltd
les
clc
std
sub
mov
rorl
std
fdivrp
sbb
test
scas
cmp
dec
mov
or
cmp
mov
sti
pop
push
test
arpl
mov
stc
int3
insb
vmaxsd
mov
pushf
fstpt
ss
andb
imul
notl
ja
and
cltd
sub
adc
dec
cmp
push
inc
jl
or
mov
lcall
push
mov
cmp
mov
sbb
repnz
dec
shlb
ja
fucomip
push
jns
imul
push
fsubl
enter
repz
pop
mov
aaa
push
ds
imul
mov
jne
push
leave
xchg
les
icebp
loop
lods
add
cmp
dec
mov
pop
les
in
lret
mov
or
leave
inc
jne
jne
ss
adc
in
popf
imul
bound
pop
loope
gs
jbe
sbb
and
xlat
push
sbb
pop
lods
lods
test
jle,pt
jb
lods
adc
aam
mov
jge
pop
mov
jecxz
push
mov
sbb
dec
mov
fidivrl
inc
sub
cmp
add
lods
mov
pusha
jne
dec
pushf
inc
inc
push
pop
adc
ss
cmpl
mov
adc
fucomp
and
lods
lods
movsl
sub
insl
mov
mov
cmp
scas
cmpsl
jge
add
push
out
sahf
stc
and
add
mov
and
mov
test
icebp
cli
lds
movsb
xor
cmp
insb
sar
dec
dec
fwait
mov
aaa
pop
mov
sti
cmpsb
pushf
mov
push
and
scas
mov
mov
movzbl
mov
inc
and
push
std
in
loop
mov
mov
add
fwait
mov
loope
adc
stos
fs
fnsave
leave
cmp
cld
adc
in
pop
push
xor
mov
mov
push
cmp
adc
lods
xchg
ja
sub
and
lock
lods
mov
popl
sub
and
repz
push
aam
lahf
or
inc
jbe
jno
mov
xor
jne
fstp
aam
popa
negb
sbbl
and
bound
mov
or
ret
divb
jno
dec
es
inc
loope
in
roll
cmp
dec
dec
std
fdivs
xor
mov
sub
cmp
jl
mov
call
adc
enter
outsb
and
jecxz
popf
mov
push
mov
scas
jae
pop
adc
flds
nop
mov
adc
outsl
in
inc
inc
shrb
jmp
push
rcrl
cmp
inc
sbbb
or
mov
test
push
mov
push
dec
mov
pop
dec
das
je
push
inc
mov
cld
fldt
xchg
mov
sbb
cmp
sbb
das
jnp
inc
jge
xor
stos
out
mov
lret
iret
dec
test
stos
in
add
add
aam
mov
arpl
lahf
inc
repnz
xchg
or
jne
jp
xor
jns
aas
and
push
scas
call
cmp
jbe
jp
stos
and
enter
stc
and
adc
xor
cmp
shlb
xchg
fwait
aad
rorb
push
nop
mov
mov
xchg
movsl
out
scas
inc
stos
push
push
push
cmpb
fistl
stos
out
imul
sub
and
and
outsl
fs
xchg
xchg
xor
and
aad
aas
fwait
rcl
push
pop
lea
dec
in
xchg
mov
jo
xchg
add
sbb
cld
adc
or
add
cltd
or
add
mov
es
jl
push
in
and
xchg
fs
pop
dec
cmp
test
sahf
xlat
mov
mov
cmp
pop
cmc
push
lret
cmp
aam
mov
repnz
loopne
filds
in
xchg
xor
add
fistl
and
dec
xchg
pop
add
adc
or
rolb
xchg
and
notl
xchg
sti
shrb
inc
pop
rcll
pop
lret
mov
mov
movsl
movsl
jns
movsl
dec
mov
leave
add
in
cs
arpl
das
xor
cmp
cmp
push
push
cltd
mov
or
jmp
add
mov
push
cmpsl
data16
test
mov
inc
scas
and
dec
xchg
jb
out
lds
mov
in
xor
fcomps
mov
xor
js
mov
mov
std
sbb
dec
fstl
mov
rcr
or
adc
je
pop
and
add
repnz
xchg
pop
in
pop
shll
jl
ss
icebp
arpl
gs
lret
cmpl
mov
push
jmp
mov
stc
push
addr16
cmp
mov
push
or
cmp
sti
lahf
cs
mov
jne
ss
push
test
lods
fdivl
rcll
xor
jns
mov
stc
adc
divl
pop
push
cmpsl
insl
cmc
push
or
cmc
add
add
in
push
push
repz
es
in
mov
jge
frstor
aad
call
adc
mov
shll
cli
push
sahf
adc
or
test
add
push
xchg
ds
push
mov
in
jp
out
gs
lret
jo
subl
imulb
aaa
outsl
cmp
fisubrs
mov
sub
jle
test
push
mov
add
mov
push
push
mov
fsubrs
rorb
pop
cmp
dec
xchg
push
imulb
push
or
addl
jecxz
sbb
sub
push
mov
sti
dec
push
sbb
out
and
or
pushf
loopne
out
cld
inc
mov
inc
and
mov
cmc
pushf
enter
fwait
popf
adc
enter
mov
jmp
or
or
test
mov
and
xor
cmp
pop
inc
mov
lods
xchg
mov
lcall
fs
adc
cltd
lds
mov
iret
mov
bound
and
subl
pop
add
xor
fmull
dec
sbb
sub
push
fwait
xchg
or
and
adc
pushf
mov
lock
clc
adc
ss
adc
cs
pop
jmp
and
insl
popf
inc
cmp
mov
adc
push
adc
mov
pop
mov
or
out
sti
enter
xlat
mov
jmp
movsl
repnz
xchg
push
xchg
adc
dec
stos
mov
xor
sub
cwtl
xchg
jp
jno
push
push
fsubrl
add
add
jnp
daa
fucomi
cmp
mov
dec
mov
dec
movsl
insl
or
mov
nop
repz
pop
lahf
mov
xchg
movsl
and
cmpsb
ljmp
fnstsw
add
pop
xchg
push
dec
add
roll
ds
xchg
cltd
cli
jae
test
lock
jl
rorl
mov
sbb
inc
jp
aaa
std
imul
mov
int3
pop
cmp
add
lds
enter
mov
test
lret
xchg
repz
push
movl
jle,pn
scas
jb
push
lret
add
scas
jecxz
popa
sub
sbb
sub
das
jle
xchg
outsl
or
jo
pusha
vunpcklps
stos
push
adc
sar
xor
insb
xchg
arpl
sub
push
xchg
add
iret
jb
loope
in
adc
mov
fsubrp
mov
mov
add
jne
jne
mov
pop
cmp
aaa
lds
push
sub
inc
loop
push
xchg
xchg
sbb
xchg
sarb
dec
inc
and
loope
push
sbb
inc
jl
jge
adc
push
fs
push
jnp
cli
sub
shll
in
push
int3
stos
lcall
aas
insl
rclb
inc
in
in
xchg
ret
dec
adc
pop
mov
fimuls
cmp
push
sub
dec
and
pop
pop
shl
xchg
mov
aas
repz
mov
mov
pop
cmp
bound
aaa
sub
rorb
sarl
inc
push
out
bound
xchg
push
int
add
mov
pop
pushl
ficoms
sub
sub
add
push
sub
or
dec
jge
pop
and
push
push
icebp
fisttps
or
sbb
jecxz
add
nop
in
push
xchg
or
rcll
and
nop
aaa
out
mov
or
enter
imul
pop
je
add
mov
inc
or
cwtl
ret
js
lods
lret
fst
sbb
int
fidivrs
dec
stos
jecxz
lret
xchg
lea
push
xlat
or
pop
dec
das
xchg
dec
into
call
and
pop
jae
push
test
sbb
int
rol
push
dec
push
add
loop
lods
xor
std
cmpsb
sbb
sub
push
aas
xchg
scas
stos
aad
dec
andb
mov
pop
in
rorl
in
ret
xlat
jmp
mov
mov
push
imull
cmp
mov
lcall
stos
scas
je
cmpsb
repz
es
test
lahf
icebp
add
loopne
adc
test
ljmp
lahf
sahf
mov
pop
xor
divb
add
and
lret
push
mov
push
mov
mov
push
sub
sbb
icebp
jmp
and
adc
sub
and
lret
rcrb
jmp
data16
jg
push
lahf
adc
pop
fdivrs
out
notb
mov
xchg
popf
xchg
jecxz
adc
scas
and
arpl
cmp
loop
mulb
push
dec
dec
cmpsb
clc
xor
mov
cmp
mov
outsl
int3
adc
lods
pop
pop
mov
mov
xlat
pusha
dec
scas
testb
dec
in
dec
cmpsw
stos
aam
int
sub
lret
sub
mov
fisttps
xchg
cmpsb
fdivs
adc
clc
leave
xchg
jle
and
dec
and
cmc
addl
jno
jmp
rorl
data16
lock
sarb
cmp
or
jmp
shrb
subb
add
insl
es
mov
adc
cmpsb
xchg
sub
repz
scas
pop
adc
sbbb
jae
xlat
mov
sti
daa
sbb
or
stc
sub
std
pop
mov
add
or
mov
je
and
mov
notb
daa
or
js
mov
adc
jg
fistpl
addr16
sbb
pop
sub
add
sbb
ja
sbb
mov
dec
inc
daa
xor
xchg
inc
fs
pop
inc
lret
cmp
fisttpll
push
std
xchg
lods
pop
lret
test
xor
jmp
inc
push
inc
pop
aas
imul
jmp
in
cli
int
push
dec
jne
test
loope
es
icebp
popa
push
xchg
and
sbb
adc
inc
aad
sub
push
int3
out
push
pushf
pop
mov
sahf
sahf
stc
mov
mov
mov
dec
in
out
pop
sbb
cmp
adc
jmp
xchg
jbe
insb
jns
mov
sbb
mov
loope
pushf
add
das
imul
ja
mov
outsb
movsb
mov
push
dec
jge
sub
loopne
out
jg
mov
inc
scas
in
mov
aam
jae
jns
fldenv
idivl
add
ret
mov
push
adc
aaa
insl
sbb
cmp
mov
aad
pop
mov
ss
hlt
and
push
fldcw
popf
sbb
popa
push
lods
bound
dec
push
push
sbb
rorl
jne
int3
cmpsl
xor
es
xor
xlat
push
jecxz
fstpt
pop
shrl
cmpsb
sbb
out
sub
lods
fiaddl
stc
ljmp
xor
push
jb
adc
repz
mov
adc
sub
enter
ja
loop
out
fdivr
hlt
lods
ja
movsl
movb
outsb
mov
pop
xchg
fmuls
cmp
adc
pop
push
push
sub
jae
or
clc
or
mov
dec
stc
push
add
in
lcall
jo
in
xorl
or
ja
cmpsb
cmp
xlat
aam
push
addr16
shlb
pop
out
cmp
lcall
fisttps
jns
adc
sub
outsl
sub
push
push
xor
repz
dec
lcall
add
movsl
decb
adc
mov
jle
jg
insb
popf
cld
mov
in
notl
lock
pushf
in
xchg
sbb
shr
inc
push
aam
mov
inc
add
pop
call
fwait
mov
push
fsubl
sub
ja
pusha
push
cmp
jnp
subl
out
inc
pop
mov
lods
pop
outsl
addr16
nop
aad
adc
xchg
and
sarb
sbb
or
subl
fcomps
sti
add
mov
xchg
scas
xor
fsubs
sub
mov
pop
dec
jne
aam
pop
xchg
xorl
push
in
pop
push
stos
stos
sbb
adc
pop
sbb
iret
cmpsb
mov
adc
ljmp
or
test
leave
jno
andb
cmpsb
sub
pop
inc
jo
sub
pop
es
outsl
jbe
loopne
and
gs
adc
addl
jnp
les
cmp
mov
scas
and
and
mov
adc
lds
dec
sbb
cld
test
aam
jl
sbb
jo
fmull
inc
movsl
xchg
ja
pop
or
hlt
jmp
inc
add
shll
or
add
inc
xchg
jne
daa
xchg
push
inc
out
cltd
sbb
jb
or
popa
adc
inc
jle
push
pop
push
add
fisubrs
dec
cli
xchg
into
cmp
adc
inc
faddp
fldpi
or
push
andl
insb
xchg
into
loopne
mov
cmc
fstpt
lahf
mov
aaa
lea
ret
ja
ja
xor
pop
lret
or
xchg
ret
xchg
mov
mov
jge
inc
rclb
fstps
test
push
fsubp
out
loopne
xchg
test
fimull
lea
out
jbe
mov
scas
inc
in
sub
insl
sbb
enter
sbb
in
pop
fsubl
xchg
add
push
add
inc
ret
push
dec
addr16
insb
or
jbe
es
sub
push
or
dec
cmp
shr
fs
sbb
or
xlat
xor
ja
shl
repz
mov
inc
lds
dec
ss
and
mov
sub
test
adc
imul
movsb
jbe
sub
rcrb
je
insl
loope
mov
dec
ss
jbe
jp
in
mov
cmc
ljmp
dec
cmpsb
sub
bnd
mov
pop
push
push
cmpb
push
and
and
daa
add
xchg
xchg
ftst
adc
std
icebp
jb
frstor
insb
notb
fldl
aam
mov
sub
add
outsl
sbb
push
jne
and
mov
insl
fmull
push
cs
divl
inc
repz
inc
sbbb
in
add
inc
push
testb
xchg
inc
fidivl
mov
push
fiadds
adc
iret
inc
and
or
push
sbb
adc
mov
jne
test
mov
subb
adc
int3
popf
dec
fs
gs
arpl
rcr
data16
lret
dec
sbb
xchg
mov
xchg
xchg
fisttpl
aam
inc
cld
iret
fstl
mov
xchg
pop
jl
inc
xor
inc
fldl
repz
std
fildl
mov
shl
add
shrl
pop
data16
fmull
xor
cmp
and
dec
and
push
add
ret
mov
arpl
aaa
lods
inc
stos
xchg
push
add
mov
jmp
in
dec
lds
sbb
add
inc
sbb
sbb
pop
pusha
outsl
nop
lods
cmp
lods
sbb
adc
gs
or
mov
mov
daa
mov
lahf
push
mov
mov
add
fxch
shll
imul
mov
or
jno
mov
out
xor
jp
loopne
je
push
stos
pop
fldl
mov
pusha
adc
cmp
jmp
rcrl
icebp
xchg
mov
popf
pop
addl
inc
cmc
jne
out
out
mov
out
inc
pusha
jg
adc
test
jmp
jl
xor
xchg
or
nop
int3
push
aas
or
add
aad
out
adc
lcall
cmpsb
xor
cmpsl
mov
daa
pop
cltd
pop
xchg
js
pop
mov
cmp
mov
xlat
es
lds
lcall
xlat
sarl
cltd
pop
push
insl
add
mov
mov
pop
inc
dec
inc
and
push
divb
shl
dec
call
cmpsl
sbb
out
fdivrp
gs
mov
push
ja
in
in
mov
lds
or
sbb
and
test
jae
mov
mov
shrl
out
add
cmp
add
lea
incl
pop
inc
cmpsl
pop
jb
movsb
cld
pop
mov
jp
clc
lret
sbbl
nop
push
and
sbb
hlt
push
jne
insl
addb
pop
fiaddl
add
dec
and
jb
mov
out
push
inc
mov
and
sbb
mov
pusha
xlat
and
push
aaa
sub
subl
cmc
sub
xchg
adc
add
push
cmpsb
stos
mov
or
fdivs
repz
mov
adc
aaa
test
inc
and
ficoms
jg
cwtl
mov
mov
mov
and
xorl
stos
xor
or
dec
cmp
mov
ljmp
das
movsl
inc
or
push
sbb
aaa
ret
or
adc
adc
movsb
arpl
loop
in
out
add
inc
mov
loop
push
mov
push
stos
adc
xchg
adc
cmpsl
mov
popa
push
cli
or
jmp
and
xor
call
stos
push
inc
xor
cld
xchg
cmp
cmp
mov
into
in
mov
jno
inc
mov
sbb
andb
cmp
adc
fists
or
or
inc
jnp
xor
dec
jl
cmp
leave
xor
ljmp
jle
xor
inc
jb
jnp
cmc
ljmp
scas
stc
inc
inc
jmp
hlt
out
push
shll
cmc
xor
shl
add
insb
mov
push
xchg
xor
adc
adc
mov
aad
mov
loopne
pop
shlb
inc
jge
mov
aaa
das
inc
add
lret
aam
test
ret
pop
lret
js
sbb
pop
or
mov
push
in
xchg
xchg
pusha
mov
add
cmp
xchg
dec
je
test
mov
imul
in
dec
pop
dec
jecxz
jl
fildll
or
mov
mov
inc
lock
movsl
cmpsb
xor
pop
inc
into
leave
cld
jecxz
int
or
popf
je
cmovl
add
jnp
jecxz
into
adc
lock
push
add
fisubs
leave
adc
sub
bound
subb
push
sbb
ret
inc
test
and
stc
dec
enter
fsubrp
mov
out
in
inc
movsl
dec
mov
add
xor
int
mov
add
test
adc
repnz
scas
fiadds
pop
add
push
stc
test
cmp
popf
mov
loop
repz
dec
js
sahf
lcall
cmp
add
add
inc
stos
inc
lret
cmp
stc
jl
mov
xor
or
push
mov
pop
mov
dec
pop
inc
jmp
lea
in
sahf
sub
or
sbb
lods
and
mov
mov
inc
jae
xor
dec
sbb
in
ss
lea
scas
jp
movl
push
sbb
std
dec
dec
div
loopne
adcb
out
cmp
gs
add
jmp
hlt
jne
rcrl
and
movsl
outsb
andb
mov
clc
lret
data16
mov
sub
adc
pop
sbb
test
sub
inc
fs
dec
xchg
sub
sti
sbb
sbb
data16
icebp
fwait
addr16
sub
cmp
outsl
in
jmp
sub
and
lret
adc
adc
rcrl
mov
pop
mov
ds
out
mov
dec
ljmp
lahf
mov
mov
lock
outsb
jp
imul
cmp
mov
push
pop
outsb
mov
sub
and
lods
mov
das
xchg
sbb
push
in
lret
lods
push
ljmp
jns
scas
bound
cmpsl
icebp
inc
dec
ja
cmp
push
dec
push
clc
cltd
test
call
pop
movsb
mov
mov
cltd
insl
or
sbb
sbb
bnd
lcall
inc
out
popa
ud2
mov
shll
inc
adc
mov
mov
xorl
imul
ljmp
pop
std
inc
add
inc
pop
lds
pop
das
stos
push
mov
mov
popf
insl
add
mov
cmp
or
outsb
pop
dec
arpl
xchg
adc
movsl
push
lret
pop
in
inc
ja
mull
int3
ja
push
xchg
lea
mov
loope
inc
or
dec
cmp
ljmp
pop
mov
push
mov
popf
xor
ret
daa
xchg
out
xchg
fdivs
fdivrs
cli
lds
mov
leave
adc
mov
test
jo
and
jl
and
fisttpll
mov
inc
lahf
sbb
scas
sub
rcrl
dec
or
shll
jp
xchg
jbe
gs
and
ss
data16
rorb
fisttpll
rorb
cmpsl
add
jo
add
stc
xchg
pop
pusha
cmp
pop
push
push
loop
ss
mov
aaa
mov
icebp
xchg
testb
leave
mov
cmp
sti
mov
or
adc
lret
pop
aaa
stc
lea
ror
lods
pop
movsl
rcrl
pushf
dec
push
stos
mov
inc
jge
jnp
movsl
pop
xchg
negb
adc
xor
lahf
or
mov
out
setbe
clc
push
pop
cmpsl
in
xor
or
inc
xchg
pop
mov
cmp
shrl
pusha
jnp
xchg
push
mov
sbb
jge
int
push
xor
add
dec
sbb
in
sbb
jecxz
incl
mov
dec
push
mov
leave
sub
push
fidivl
pop
rcl
pop
nop
push
and
jmp
cmp
add
add
pop
jmp
pop
lahf
aad
pushf
pop
dec
pop
scas
fwait
orb
and
aam
jae
scas
mov
rclb
cmp
movsb
mov
repnz
fidivrl
sahf
jno
mov
call
xchg
es
sbb
shlb
cmp
adc
into
daa
xlat
sarb
mov
add
pop
enter
sub
imul
mov
pop
cld
ja
imul
rcrl
outsb
fincstp
loope
xor
mov
add
jnp
dec
insl
mov
fisubrl
pop
add
std
jb
sub
dec
and
repz
push
pop
out
add
pop
jbe
xchg
daa
and
das
flds
das
sub
dec
and
xlat
jae
stos
sub
out
and
fisubrs
mov
stos
mov
pop
mov
mov
adc
mov
jb
test
mov
sahf
xchg
sahf
rcrb
or
clc
dec
loop
stc
jmp
dec
mov
xchg
mov
popf
and
jne
imul
stc
dec
aas
mov
in
lods
addr16
mov
lods
pop
jns
adc
push
cmp
lcall
mov
into
inc
call
jae
repnz
loopne
push
xchg
ret
test
adc
mov
lock
add
lods
pop
and
cli
dec
xor
or
movb
inc
xlat
nop
mov
and
sub
shr
xchg
lds
divl
fldt
mov
into
es
push
inc
movsb
nopl
fstpt
pusha
jno
mov
sbb
repz
push
xchg
repnz
lods
ret
stc
adc
mov
lcall
pop
mov
pushf
and
push
add
adc
mov
dec
push
mov
lret
jmp
xor
adc
sub
aad
movb
out
insb
inc
pop
leave
orl
aad
pop
add
dec
jg
shl
or
adc
arpl
cmpb
dec
std
stc
ljmp
jnp
and
mov
cmc
test
mov
pop
lods
add
mov
fisttpll
jmp
mov
pop
inc
sub
movsb
leave
add
inc
mov
rcl
and
xchg
xchg
xor
int3
jnp
push
nop
mov
stos
or
inc
pop
and
xchg
jb
gs
mov
cmp
inc
stos
test
aaa
roll
mov
jg
jg
and
push
mov
sub
aas
cmpsl
lret
mov
dec
jg
int3
xor
jnp
mov
lods
fs
out
lret
cmp
mov
out
mov
jl
nop
frstor
popa
fists
in
imul
movsb
pop
push
push
rorl
xor
aad
push
ljmp
add
in
scas
rcrl
cmpsl
add
test
ret
pop
imul
add
pushf
and
adc
add
fisttps
pop
popa
out
push
les
insb
mov
pop
out
mov
inc
js
mov
pusha
mov
clc
or
movsb
xchg
fadds
inc
jecxz
aad
and
popfw
gs
lahf
cltd
push
movsb
pop
vpaddb
fadds
xchg
jbe,pt
fisubrs
lret
testl
sbb
loope
xchg
cmp
adc
sub
jbe
push
dec
and
icebp
sbb
aas
cwtl
fwait
sub
cli
movsb
jae
mov
mov
xchg
pop
cmp
out
mov
add
cmp
mov
sbb
lret
or
lret
xor
mov
test
push
cmpsb
dec
cwtl
mov
adc
cmp
icebp
fiadds
in
cltd
lock
or
ss
das
mov
fmul
push
sub
mov
pop
fstpl
or
inc
rcrl
push
loopne
imul
mov
arpl
mov
sarb
dec
nop
imul
adc
pop
adc
xor
fsts
cmp
inc
pop
fistpll
xchg
insb
fistpll
mov
dec
and
xor
xchg
je
inc
cmp
leave
out
xor
mov
fidivs
push
and
cwtl
inc
sbb
daa
dec
mov
push
xor
subb
sub
push
mov
or
and
cs
hlt
inc
cmpsb
xor
outsb
push
das
mov
cvttps2pi
xchg
or
gs
jae
cs
push
sub
xchg
lods
outsl
cmpsl
sarb
mov
jmp
rclb
shl
push
fs
fstpt
sbb
xor
dec
add
incb
sbb
pop
push
lret
call
adc
out
pop
mov
cmp
test
call
rolb
int
sub
push
dec
lods
or
jmp
lcall
stc
push
cmp
cmpsb
inc
dec
imul
dec
hlt
shl
mov
xchg
lahf
adc
jbe
xchg
jp
hlt
pop
and
mov
insb
daa
pop
dec
jbe
lods
idivb
ss
push
fidivrs
mov
test
mov
std
sub
add
jmp
sub
xchg
jae
iret
loopne
lret
gs
inc
cmp
mov
inc
inc
aad
test
les
shrb
in
dec
add
dec
ljmp
jno
loop
mov
jl
mov
rorb
jne
mov
cwtl
pop
adc
rol
mov
or
adc
mov
push
icebp
repz
pusha
jl
dec
and
mov
aam
push
dec
dec
push
add
lret
mov
xchg
xchg
cmp
mov
sbb
mov
sbb
or
pop
call
nop
xchg
fwait
cmp
xchg
mov
icebp
sbb
jbe
test
xchg
xor
popl
and
and
lock
dec
jo
mov
inc
and
jnp
ficoms
mov
arpl
adc
push
insl
fcoml
gs
add
mov
in
cmp
ljmp
into
mov
iret
fwait
xchg
andl
test
inc
outsl
sub
into
pusha
inc
push
leave
ret
aam
sbb
mov
mov
xlat
jnp
loope
mov
enter
sbb
fiadds
pop
and
jo
out
lock
int3
popa
adc
pop
xchg
das
inc
jg
and
dec
scas
and
push
subl
inc
mov
rcr
scas
ja
inc
pop
mov
movsb
movsl
push
pusha
ds
dec
jo
sbb
repnz
in
jnp
mov
shlb
ja
mov
push
mov
xchg
dec
mov
lods
mov
dec
add
das
stc
sub
mov
fcmovu
out
les
fnstsw
push
xchg
dec
xchg
pop
shl
xchg
js
push
std
jo
lahf
fucom
or
add
ja
mov
cmpsl
jmp
mov
out
sbb
rcrb
popf
mov
mov
jns
leave
xor
ja
sbb
inc
int3
mov
test
lahf
mov
xchg
mov
and
in
or
xchg
mov
scas
xchg
lea
outsb
sbb
icebp
mov
push
jecxz
inc
ja
jne
pop
repz
call
dec
adc
es
pop
out
loop
packssdw
mov
andb
mov
push
aad
jno
mov
inc
mov
aad
mov
test
call
out
mov
subb
and
cltd
add
mov
loop
jae
sbbl
dec
in
pop
mov
adc
jmp
popl
fadd
ss
xor
cmp
dec
or
jg
pop
xor
int3
dec
mov
sahf
sub
and
shrl
push
mov
mov
dec
sti
popa
push
sub
jbe
push
adc
daa
inc
aas
xchg
xchg
dec
fistpll
pop
push
gs
inc
and
in
les
es
jge
fisttpll
or
les
mov
popa
pop
pop
dec
rcrb
lret
aaa
or
lds
inc
pop
mov
lcall
enter
dec
lds
addb
ja
mov
jle
push
mov
jnp
aam
ret
insl
lock
ja
or
pop
xchg
pop
mov
loop
lcall
insl
out
pop
dec
mov
clc
jle
shlb
mov
cmp
sub
mov
jl
sub
inc
mov
mov
jge
popa
scas
or
pop
adc
out
insl
mov
mov
push
test
rcrb
jecxz
out
lea
xor
scas
clc
inc
adcl
push
call
in
xchg
mov
repz
pop
adc
les
cs
loope
lods
outsb
mov
jg
xor
sbb
mov
scas
mov
inc
mov
iret
sub
or
sbb
and
adc
pop
inc
or
pop
xor
shll
mov
stc
mov
in
and
fldt
popf
fldcw
shlb
pop
xchg
push
push
cmpsl
sbbb
loopne
arpl
pusha
mov
push
jb
mov
in
mov
fdivrs
test
push
pop
pop
sub
nop
arpl
fldl2t
jmp
out
adc
in
xchg
xchg
or
adc
mov
mov
jle
cli
sti
jno
jno
std
jno
mov
popf
rclb
pop
mov
xor
push
hlt
int
mov
scas
push
cmp
cmc
movsb
xchg
rcr
cmp
adc
sbb
sub
into
xorl
cwtl
stos
hlt
bound
fs
inc
push
mov
inc
sub
cmp
mov
repnz
and
imull
adc
ljmp
or
out
cmp
sarb
push
pop
mov
jl
push
rol
jo
arpl
jne
xor
test
negb
xchg
leave
cld
mov
ja
push
and
jo
in
pop
lea
data16
sub
sub
inc
xchg
dec
pop
std
jb
mov
mov
jae
or
out
mov
dec
sbb
sub
push
dec
data16
push
cmc
mov
mov
js
daa
popf
dec
call
orl
push
cli
push
mov
repz
loopne
push
pop
sbb
scas
fsubrs
push
pop
aas
test
dec
push
cmpb
lods
inc
mov
lea
mov
cmpsl
xchg
outsl
jge
loop
add
arpl
cmp
mov
sub
pushf
outsb
addr16
into
mov
add
fisttps
push
idivl
jmp
sub
aad
mov
arpl
push
or
adc
push
add
and
lret
mov
out
jo
mov
mov
jb
dec
cli
stc
xchg
jmp
cmp
sbb
xchg
jo
fimull
xchg
sub
inc
js
lahf
mov
nop
jns
ja
mov
fmuls
sbb
xor
dec
dec
xorb
hlt
jmp
repnz
popa
lcall
in
mov
insl
xlat
ss
in
daa
cwtl
add
mov
jae
jp
lahf
dec
mov
mov
dec
mov
and
and
jbe
stos
push
pop
cs
pop
fsubrs
ja
push
mov
inc
xlat
insl
lods
repnz
hlt
jg
pop
stc
xchg
jecxz
cmp
push
jbe
leave
roll
shll
and
stc
mov
addl
in
pusha
xor
sbb
insb
inc
mov
fucomip
jns
out
lods
in
bnd
jl
incb
dec
xor
jg
cld
add
lods
in
mov
sub
adc
leave
xor
adc
shll
inc
sbb
sub
jmp
lahf
inc
and
fisubrs
jae
dec
mov
sbb
xor
inc
rorb
fisttps
mov
testb
and
loopne
out
mov
negl
mov
push
data16
fxch
sub
mov
pop
and
inc
sub
jnp
pop
lods
mov
sbb
sub
adc
stos
jnp
pop
cltd
and
rcrb
sbb
and
into
jbe
sub
dec
aad
sub
mov
loopne
stos
sub
adc
test
stos
shr
xchg
xchg
dec
mov
ljmp
stos
xchg
mov
ficoms
dec
and
leave
sbb
mov
jg
rcrl
fldl
mov
ret
cmpsl
stos
pop
sti
insl
rolb
and
jg
dec
mov
or
inc
in
test
dec
mov
enter
movsb
lret
cwtl
mov
lods
push
mov
xchg
push
jnp
cmp
mov
fstps
ficoms
loop
cmp
lea
xor
lock
xor
rep
xor
sti
cmpl
pop
adc
lods
frstor
roll
inc
add
filds
test
jg
adc
cli
push
outsb
push
inc
test
fadd
imul
test
pop
fmul
sub
je
pusha
mov
test
push
std
mov
call
cmp
mov
rcrb
jae
out
popf
xchg
xchg
adc
mov
push
out
pop
popf
cmp
pop
outsl
cmc
xchg
mov
or
xlat
xchg
inc
jecxz
xchg
jmp
cwtl
pop
aam
mov
adc
stos
aam
mov
fstpl
cs
dec
jl
aam
or
sbb
lret
jmp
outsl
cmpsb
jnp
test
insb
jge
aam
mov
pop
cs
xor
add
ljmp
xchg
mov
xor
add
sti
lods
or
testb
jmp
fsubrs
and
push
ret
iret
sahf
add
adc
sbb
cmpsl
in
aam
in
cltd
call
jbe
test
xlat
test
cmc
push
sub
scas
into
loopne
cld
dec
fcomps
cmp
sbb
inc
push
cmpsl
pop
subl
loop
push
jp
push
pusha
shll
pop
add
out
mov
xchg
mov
push
mov
addr16
mov
push
addl
ds
mov
fnsave
pop
cmp
mov
fwait
mov
and
movsb
addr16
lods
and
ret
mov
adc
xchg
mov
fsts
jmp
mov
mov
das
std
outsb
adc
inc
lods
pop
jge
cmpsl
movsl
outsl
pop
shrl
and
test
out
movsb
sub
negb
clc
mov
pop
sti
popa
jmp
mov
or
xorl
push
add
sbb
dec
in
das
dec
rolb
fidivrl
orb
insb
adc
inc
and
mov
movsl
int
sub
shll
inc
mov
dec
cmp
les
movsl
pop
cmp
lods
cmp
push
out
dec
out
xor
loop
or
mov
stc
enter
shlb
dec
inc
cwtl
cld
pop
push
mov
lds
cs
ss
loop
inc
mov
ret
stos
dec
leave
push
sub
shll
stos
icebp
lods
je
cmp
jmp
xchg
aas
ret
cli
jne
std
cmp
jnp
xchg
das
adc
xor
fldt
adc
push
movsb
ljmp
in
or
fs
xor
xor
pop
addr16
popa
pop
testb
adc
xchg
and
movsb
sbb
jo
bnd
and
fcomi
cmpsl
fxch
xchg
jg
test
inc
mov
js
jge
xor
lds
sub
enter
mov
inc
lock
pmullw
xor
xor
jg
jb
rcrb
insl
dec
pop
push
dec
jno
aaa
jne
mov
js
in
lret
lahf
ficomps
jae
insl
fstpt
adc
lcall
cmpsb
adcl
test
sub
sbb
jle
arpl
int
push
or
fcomps
push
adc
rorl
or
dec
dec
adc
sti
imul
cmc
sbb
stos
mov
fimuls
jno
fmuls
test
or
addr16
jmp
in
cmpsl
push
aas
mov
sub
sti
lea
inc
test
push
or
adc
jmp
mov
fcomp
dec
rorl
adc
mov
and
fisttpl
sub
sub
pusha
addr16
inc
pop
lds
pushf
lret
movsl
sbb
mov
dec
dec
sbb
mov
clc
xchg
push
addr16
jno
shrb
lret
call
xor
adc
cmp
adc
fs
stc
mov
ss
aas
fidivl
stos
fwait
lret
mov
gs
jecxz
ds
jg
flds
adc
in
loopne
shlb
inc
jge
dec
lds
fwait
pop
rcll
lds
and
adc
pop
ret
ljmp
das
fs
lods
lea
sub
pop
mov
mov
sahf
jb
lret
shlb
sub
xchg
fiadds
lock
ficoms
fidivrs
push
pop
dec
fstps
and
add
cwtl
mov
xchg
pop
pop
pop
mov
inc
or
push
cmpsl
sbb
mov
mov
adc
and
add
push
aaa
out
addr16
lods
mov
sub
pop
clc
addw
xchg
dec
mov
mov
lods
icebp
unpcklps
push
hlt
test
mov
mov
jae
rclb
pop
cmp
int
clc
xchg
popa
adc
or
inc
pop
repz
mov
out
cmp
push
or
sahf
call
mov
mov
call
dec
aad
add
js
hlt
stos
int3
xchg
adc
rsm
mov
mov
xchg
in
enter
ret
xor
mov
dec
mov
nop
adc
jne
nop
jb
inc
cmp
sahf
xchg
les
push
jmp
mov
jo
dec
add
xchg
jge
jg
jge
xor
jle
inc
jmp
dec
pop
adc
push
and
ss
dec
gs
ja
sub
push
sub
xchg
mov
mov
pop
fimull
lods
sub
lock
ds
push
enter
sbb
fdivrl
ds
jnp
imul
pop
out
bound
xor
arpl
aas
gs
fsubrs
outsl
divl
ja
adc
sub
and
lea
sbb
mov
and
sub
stos
pop
faddp
outsb
mov
xor
dec
dec
or
or
inc
xor
adc
inc
sbb
pop
fwait
inc
sub
scas
sub
jnp
dec
test
and
lret
jp
add
fwait
lret
aas
sti
sbb
stos
push
mov
add
sahf
loop
clc
clc
jg
mov
xchg
jbe
push
out
mov
enter
cld
mulb
lahf
loopne
push
popa
cli
jp
fcomps
shll
into
pop
or
bsr
sub
cmpl
jg
into
xlat
mov
xchg
inc
push
pop
and
or
xor
mov
jae
xor
xchg
inc
cmp
bound
dec
push
mov
cmc
data16
xchg
pop
lret
push
dec
or
notb
push
inc
pop
lret
mov
in
and
sbb
movsb
mov
push
leave
pop
push
subb
dec
jg
test
jne
fldt
sub
pop
xchg
adc
jno
cmc
jp
out
sbb
cmp
int3
dec
bound
pushf
leave
stc
subl
push
sbb
and
lea
jl
cmp
popa
jo
push
pop
aam
jmp
mov
out
sbb
pop
sub
lret
lods
das
addr16
shlb
sahf
xorb
lret
test
pop
push
xchg
inc
pop
mov
xor
fnstenv
lea
push
xor
outsb
xor
jl
out
lcall
addr16
and
int
sub
pop
push
call
dec
sbb
outsb
fdivs
imul
aas
setl
xor
movswl
in
jmp
addr16
cltd
outsl
ret
add
lods
ds
out
scas
dec
and
or
pop
and
rclb
popa
jnp
mov
sbb
adc
pop
cld
and
add
jb
dec
enter
sub
mov
mov
push
hlt
push
lods
cltd
sti
scas
mov
lods
cmp
xor
jae
outsl
sub
ret
stc
cwtl
push
xbegin
mov
out
cwtl
in
xchg
test
mov
fmull
mov
cmpsb
out
dec
enter
pop
jbe
dec
outsl
gs
cmpsl
addr16
xchg
sbb
pop
in
in
cmc
ss
bsr
jnp
cmp
icebp
test
pop
cmc
lahf
push
inc
push
enter
lock
push
mov
das
sbb
dec
cmp
in
mov
pushf
mov
pop
je
repz
push
xchg
xorb
ljmp
jp
sbb
clc
push
push
ljmp
pop
jne
pop
dec
and
insb
pop
cmp
cmpsb
mov
and
pushf
sbb
scas
popf
shr
mov
jno
sti
lods
push
jne
out
xchg
ja
mov
or
repz
mov
sbb
push
call
aam
cs
outsl
in
insb
xor
outsl
xchg
daa
mov
sahf
mov
loop
imul
jnp
push
xchg
sahf
lcall
lods
in
shrb
std
adc
out
fwait
pop
test
xchg
add
imul
outsl
cmp
mov
int3
outsb
fwait
out
mov
outsb
jnp
mov
pushf
call
cmp
pop
dec
mull
xlat
cltd
fld
aas
xor
ja
std
mov
std
xchg
jmp
xchg
insl
add
out
xchg
aaa
das
add
xchg
nop
push
pusha
add
loop
orl
jne
pop
inc
add
scas
cld
outsl
jle
fiadds
insl
ds
pop
repz
int
sub
push
push
ret
add
adc
ds
mov
insb
dec
repnz
adcl
mov
and
pop
out
loopne
pushf
shl
addb
sub
inc
fs
xor
sbb
and
or
bound
mov
outsb
addr16
sub
roll
scas
fstpl
daa
sarl
sahf
loope
lcall
cs
xor
nop
xchg
lcall
adc
pop
jle
movsb
inc
xchg
ljmp
fdivl
incb
lahf
jae
js
or
inc
js
mov
lcall
xlat
lcall
fildll
sub
fbstp
enter
addl
and
xchg
loope
mov
jmp
push
lahf
push
mov
cmc
lds
lahf
insb
aad
lds
icebp
inc
repz
pushf
outsl
aas
movsl
pop
pop
stos
dec
aam
and
mov
jae
jg
cmp
test
jo
sbb
add
and
cmp
sub
push
lret
lods
push
adc
mov
mul
aam
mov
push
jnp
and
pop
lcall
dec
test
mov
xor
cltd
add
sbb
inc
sbb
aam
lret
shlb
mov
dec
cmp
cltd
adc
push
ficoms
in
inc
cmc
mov
mov
arpl
pop
call
adc
nop
xor
mov
cmpb
out
lock
dec
pop
daa
cmp
sub
fistps
into
jb
lahf
adc
movsl
insl
dec
cmc
mov
or
mov
shll
lock
push
or
xor
call
jb
xchg
rcrl
xchg
pop
scas
inc
cmc
inc
sahf
out
cld
sub
xor
and
xchg
in
pop
or
lahf
sub
mov
icebp
iret
cmc
stos
cmp
pop
push
loopne
push
sub
pushf
mull
movsb
cmp
inc
jne
stos
bnd
sub
cmp
cwtl
in
jmp
pop
adc
mov
leave
xchg
rclb
pop
std
clc
mov
sbb
fldt
je
mov
call
movsb
cs
mov
xor
arpl
adc
xchg
dec
aad
bound
test
and
fidivrl
mov
cltd
loope
pop
inc
ss
jp
sbb
xor
inc
push
scas
jl
push
popa
mov
adc
loope
mov
repz
cmp
sub
out
pop
cltd
xchg
jmp
ss
mov
pusha
gs
push
push
mov
bound
mov
push
cli
jmp
mov
cmp
fs
jl
mov
dec
cwtl
xlat
sahf
cmp
cmp
jecxz
enter
xor
push
xor
push
fcompl
mov
push
and
or
int3
fwait
addb
pop
fdiv
jl
xchg
mov
pusha
in
dec
push
and
loopne
pusha
cmpsl
and
jae
fldenv
jo
ret
int
lret
js
les
jb
cmpsl
dec
les
pop
jbe
scas
cmp
ds
fwait
cwtl
pop
cmp
or
mov
jb
mov
sub
fldenv
xchg
xorb
push
xor
int3
fs
jl
movsb
callw
mov
lret
cmp
loopne
sub
adc
jl
pop
pop
add
aas
xchg
sub
xchg
jb
sub
push
lret
imul
clc
adc
mov
or
jmp
movsl
addl
mov
push
into
mov
loopne
mov
std
mov
loope
fisubrs
stos
ss
mov
out
mov
mov
mov
push
aas
fbstp
push
popa
xchg
push
cltd
cmp
outsl
sbb
clc
sub
lods
sarb
or
mov
xor
int3
sbb
xchg
sub
cld
xchg
nop
pop
insl
inc
push
sbb
push
stc
loop
mov
adcl
jbe
and
sub
int3
adc
add
test
xlat
jmp
or
lock
imul
jl
jge
popa
push
or
cmp
lcall
lods
xor
pop
cld
mov
add
xor
jno
jb
mov
repz
stos
dec
insb
ror
xor
sub
dec
pop
jbe
jl
cmp
ficoml
push
iret
push
dec
stc
xchg
cmp
cli
xchg
jbe
in
or
jno
adc
dec
pop
stos
out
jns
ja
adc
addr16
sub
mov
cmp
mov
dec
fistpl
push
mov
dec
scas
outsl
dec
aas
rcrl
mov
adc
lods
pop
fstpt
roll
pop
adc
lahf
mov
sahf
jo
out
pop
outsb
leave
lea
push
add
mov
inc
movsb
clc
jns
xchg
std
xchg
addr16
lea
push
or
dec
cld
jp
mov
pop
aam
push
jmp
shl
cmp
sub
xor
cmc
or
ret
nop
dec
sbb
mov
or
mov
xchg
add
shlb
jne
mov
out
pop
sbb
in
xchg
loop
pop
icebp
shrl
and
push
dec
call
sbb
xorl
sahf
push
lcall
test
adc
dec
sti
dec
or
aas
mov
mov
call
cmc
push
testl
stos
lds
inc
pop
out
add
jmp
inc
jae
stos
mov
clc
dec
xor
pop
dec
or
cli
lea
mov
insl
out
xchg
xchg
rolb
sub
bound
jmp
push
inc
cmp
push
js
ffree
lods
das
fbstp
stos
rorb
shl
call
mov
shlb
push
daa
bound
xchg
rcl
cmpsl
lock
mov
jb
lcall
loopne
jbe
xchg
lcall
stc
loopne
mov
dec
mov
lds
les
add
out
imul
bound
scas
inc
xor
add
movsl
sub
push
loope
jle
movaps
js
inc
pusha
aad
test
insb
pop
pop
in
loopne
gs
scas
pop
ja
into
lock
mov
or
or
xchg
adc
and
adc
xor
or
pop
adc
push
ss
idivb
test
push
or
adc
add
pop
cmp
dec
mov
push
ret
push
outsb
cmpsb
or
xchg
pop
push
push
insl
add
xchg
int3
aam
add
jg
popl
xor
sahf
sbb
xchg
pop
lods
add
pop
lret
dec
inc
and
cmp
or
mov
loopne
cwtl
mov
and
xchg
movsb
push
xchg
xchg
sbb
push
imul
scas
pop
adc
xchg
rcrb
inc
je
out
dec
inc
push
lret
mov
and
into
pop
add
std
jne
ds
aas
mov
in
rorl
sbb
fisttpll
jg
pop
aam
dec
pop
aas
sub
fcmovu
cs
out
dec
cltd
in
loopne
lret
xchg
push
cmp
addb
mov
pop
rolb
mov
and
stos
jmp
adc
stos
sti
xor
pop
popa
mov
jbe
sti
mov
hlt
aaa
sbbl
jle
inc
cmpsb
stos
pop
das
mov
cmp
jno
mov
arpl
movsl
cltd
shrl
push
add
push
or
jbe
fbstp
aam
imul
lret
popa
ret
shrb
cltd
adc
call
ja
sbb
jnp
fidivl
dec
dec
in
adc
lret
xchg
jne
mov
daa
lea
push
out
xor
movsb
lret
push
xchg
lods
jmp
and
mov
xor
int3
addl
gs
jb
cmp
pop
popf
pop
pusha
cltd
dec
xor
pop
cld
sub
sbb
xchg
pop
repz
mov
out
sbb
pop
pop
ss
leave
aad
or
mov
aaa
in
stos
jmp
xchg
dec
into
or
push
ss
insl
es
dec
sahf
fcoml
mov
or
lret
aad
jge
push
and
pop
rorb
shll
mov
fwait
into
popf
fidivrs
test
stos
jne
xchg
dec
pop
rol
loopne
push
aam
lods
dec
pop
aam
xchg
jae
cmc
adc
or
pop
ljmp
and
in
pop
mov
cwtl
xor
mov
insb
fs
mov
inc
out
xchg
test
xchg
xchg
loop
cmc
inc
aad
cmp
adc
call
adc
cmpsb
cltd
sub
mov
xchg
fsts
popa
push
cmp
and
mov
or
pop
je
pop
out
or
orl
add
cmc
push
ja
xor
pop
call
fs
dec
inc
insl
inc
testb
push
push
push
mov
add
cmp
mov
insb
add
cltd
mov
rclb
cli
fs
jne
cmp
mov
loopne
cli
inc
das
hlt
mov
setl
ss
jae
cmpsl
mov
addr16
cmp
ficoms
cmp
xchg
adc
hlt
sbb
fwait
in
push
mov
cmp
clc
jge
fwait
xchg
sbb
xchg
xchg
or
pop
jne
dec
aas
mov
lret
add
lea
lds
jnp
gs
mov
fwait
in
xor
add
mov
lret
mov
and
and
inc
mov
invd
inc
xchg
repz
hlt
mov
add
cs
add
shl
inc
pop
and
pcmpgtd
lods
cwtl
sbb
jmp
mov
les
add
xor
rorb
repz
mov
repz
mov
or
int3
test
mov
shrd
fs
jo
jb
inc
push
mov
sub
sub
pop
repz
stc
or
pop
shll
mov
mov
dec
pop
es
stos
icebp
popf
mov
gs
les
add
mov
enter
adc
xchg
outsl
pop
int
lahf
xor
adc
pop
add
mov
xchg
fldt
aas
in
ficomps
jp
cmpsl
mov
psrad
aad
cmp
inc
mov
push
inc
mov
out
stc
jl
shll
adc
jecxz
popf
lret
fldenv
jmp
fsubrs
mov
mov
jmp
jle
dec
sbb
adc
bound
popa
pop
mov
inc
push
imul
sub
mov
fs
mov
shrl
adcb
pop
iret
xor
and
rorl
add
lock
add
xor
inc
andl
mov
int
pop
xchg
orb
in
ss
insb
and
out
fidivs
sub
insl
xchg
jo
loop
cmpsl
xchg
xacquire
test
popf
jns
lea
int3
test
lret
mov
mov
and
sbbb
sub
mov
jmp
les
sub
sbb
cltd
lock
mov
test
add
mov
cmc
push
xchg
test
add
aaa
inc
xchg
loopne
xchg
mov
out
mov
push
popa
cmpsb
outsb
dec
pop
xchg
push
sbb
daa
push
sub
sub
sub
or
sti
ja
push
iret
js
jl
sub
push
nop
mov
stos
sti
popf
dec
iret
and
lods
add
adc
xchg
ror
bound
mov
imul
jmp
add
es
jo
in
or
leave
or
cmp
cltd
popa
mov
lods
sbb
xor
jecxz
nop
ljmp
mov
dec
mov
stc
mov
insb
sbb
xor
dec
or
mov
repnz
push
mov
mov
mov
pop
hlt
mov
sbb
mov
mov
dec
ljmp
xchg
mov
dec
outsb
std
daa
push
xchg
lcall
repz
daa
xlat
sub
sub
test
and
sub
adc
adc
in
inc
stos
lea
ret
test
inc
shll
adc
xor
adc
add
aad
fdivrs
je
out
cmp
inc
pop
scas
insl
test
arpl
mov
lods
mov
sbb
inc
leave
mov
in
and
lahf
insb
xor
dec
es
popa
mov
stos
xchg
jns
dec
pop
sbb
pusha
pop
push
lock
loope
lcall
inc
ja
ret
xchg
sub
or
rcrl
outsb
test
in
xchg
mov
andl
call
leave
repnz
lds
into
pop
ja
movsl
or
fildl
pop
fsubl
xor
cltd
scas
sub
iret
add
nop
pushf
xor
pop
and
jns
adc
fisubs
xchg
aaa
xchg
mov
ds
insb
lds
addr16
mov
lods
mov
fbstp
adc
mov
mov
cltd
ret
mov
xchg
adc
or
xlat
push
icebp
pop
jno
fs
lret
sbb
adc
loope
jg
out
sar
jmp
sub
push
pop
or
xchg
ss
loopne
jl
xor
xor
ja
push
dec
dec
sub
mov
inc
out
imul
rcl
sub
jecxz
stos
lods
aaa
imul
mov
enter
jne
jns
inc
cmp
mov
mov
popa
xchg
push
add
cmp
push
test
sbb
call
mov
js
sahf
mov
cmp
jnp
fwait
insl
pop
push
push
push
mov
ja
xchg
rcl
test
jnp
lret
add
sub
pushf
adc
sahf
dec
mov
add
xchg
or
negl
call
mov
in
adc
ret
jnp
push
enter
push
fs
popf
ret
imul
lret
test
stos
xchg
pop
mov
adc
sub
lea
lock
mov
pusha
jo
in
ja
cs
lods
mov
aam
stc
sbb
mov
inc
faddl
jae
adc
cwtl
inc
sub
xor
out
jb
add
call
add
pop
outsl
or
inc
test
movsb
pop
inc
ljmp
lret
int3
sbb
dec
lret
adc
mov
pop
jns
mov
sti
repnz
push
add
test
imul
add
enter
xor
out
jno
mov
inc
xor
jle
test
test
mov
sbb
push
add
popf
xchg
addr16
push
aaa
push
sbb
push
pop
mov
xchg
movsl
jbe
inc
ss
pop
pop
push
bound
pop
mov
adc
inc
push
sub
lea
inc
lock
sbb
or
inc
ret
imul
repnz
dec
inc
and
xor
fldenv
xchg
imul
inc
adc
fsubrs
pusha
call
cmp
loope
sub
mov
sbb
aad
out
adc
imul
jns
push
dec
gs
cmp
jo
stos
pop
mov
xchg
sbb
cmp
cmp
push
iret
sbbb
in
ds
icebp
int3
push
sti
jnp
cld
xorb
mov
mov
xlat
ss
jg
fcoml
iret
ret
data16
xchg
ss
and
dec
test
repz
sahf
enter
and
scas
outsb
sbbb
cmpsl
addr16
fs
jp
fsubl
sbb
inc
dec
mov
xchg
mov
shrl
subb
jp
mov
cmp
mov
pop
cwtl
pop
xor
push
mov
call
adc
scas
adc
hlt
repnz
sub
repz
pop
pop
xchg
cld
adc
rolb
inc
mov
imull
pop
mov
loope
and
jne
and
aad
mulb
loope
lret
jne
inc
outsb
bound
mov
mov
pop
pushf
inc
add
cld
adc
int3
jp
mov
inc
cmc
mov
fs
ds
push
push
js
xchg
pusha
dec
int
jo
mov
xchg
clc
mov
xchg
jne
xor
jb
ret
sbbl
inc
sub
adc
add
or
push
cld
pusha
lock
inc
and
imul
pop
mov
push
xlat
shlb
int
les
pop
xor
sbb
mov
mov
mov
icebp
ret
mov
inc
test
ja
enter
stos
and
cmp
sbb
scas
jg
xchg
lcall
pushf
in
push
into
jle
ss
sbb
les
mov
sbb
stc
lods
lret
ffreep
xchg
jl
call
out
jg
dec
push
test
jno
insb
insb
pop
and
jo
daa
and
lea
fprem1
sub
xchg
in
jge
stos
push
scas
aaa
and
cmc
dec
push
cmp
pop
cmpsb
adc
cmpsl
sbb
cmpsl
scas
push
inc
dec
das
bound
mov
pop
sub
ret
jae
inc
cmpsl
or
cltd
fbstp
in
fcoms
enter
and
in
filds
and
testb
je
test
pop
xlat
adcb
mov
out
aam
les
push
cmp
insb
push
bound
and
pop
scas
jae
ret
lcall
mov
cmc
dec
cmp
add
out
push
clc
push
sub
in
jo
mov
out
mov
dec
xchg
sub
arpl
in
sub
inc
pop
sbb
je
xor
cmp
xchg
stos
mov
repz
cld
je
testb
mov
idiv
sbb
xchg
stos
xor
imul
lret
dec
cmp
shrb
or
jbe
rcr
mov
jnp
and
lret
mov
jge
lret
and
cmp
push
lods
in
lret
int
pop
cmp
subb
cmp
aad
or
pop
stos
adc
xor
popf
inc
rcrb
push
mov
divl
pop
outsl
mov
push
adc
daa
aad
andl
xchg
cmp
mov
repnz
aaa
or
mov
stos
cwtl
loop
aad
jb
rolb
mov
mov
ret
jo
imul
jnp
rcll
dec
mov
and
ss
xor
lock
mov
inc
outsl
push
mov
into
mov
sbb
inc
push
js
ret
lcall
xlat
mov
fwait
dec
nop
push
cltd
inc
je
gs
repz
stos
pop
pop
adc
mov
loop
loopne
and
mov
flds
mov
ljmp
mov
or
jb
je
mov
jl
movsl
repnz
loop
orl
aaa
push
cmc
lods
inc
rcll
lret
cmp
out
mov
adc
das
pop
sub
adc
loope
cwtl
sbb
cld
in
add
mov
in
jno
xchg
aaa
add
movsb
dec
addr16
add
or
push
push
or
mov
cld
push
test
loopne
jle
jg
mov
xor
in
call
jnp
nop
std
or
mov
iret
arpl
pop
mov
roll
sub
rolb
stc
jp
test
loopne
roll
jae
push
xor
add
and
mov
pop
mov
mov
and
or
inc
stos
push
sbb
xor
jae
jnp
push
scas
scas
idivb
aam
ss
mov
jecxz
add
inc
inc
and
loope
in
jne
fcomip
lahf
jge
xor
mov
xor
clc
xor
mov
adc
js
dec
cmc
sbb
xor
mov
cli
cmpsl
pop
pusha
mov
sbb
rclb
enter
mov
sub
pop
jl
mov
aad
les
shll
or
je
jns
mov
mov
pushf
ficoml
out
ja
sahf
push
sbb
xorl
daa
pop
jl
mov
lcall
mov
push
addb
aam
push
popf
dec
pop
jno
mov
pop
xchg
lret
jge
push
or
leave
lds
dec
outsb
addr16
mov
movsb
push
cmp
add
iret
into
fsubs
mov
mov
icebp
shl
or
sbbb
or
or
call
pop
imul
jnp
fisubrl
je
mov
mov
xchg
push
ds
cmp
dec
and
jmp
inc
mov
ret
pop
cmp
pusha
cmp
popf
sbb
clc
push
jp
inc
or
push
cli
ret
push
gs
jecxz
dec
xor
sbb
bound
ret
pop
or
ret
scas
cld
and
adc
sub
cmp
loop
sbb
sub
xor
push
cmp
in
fdivs
xchg
xor
mov
adc
inc
insl
and
add
inc
xchg
or
fcmove
jmp
or
mov
outsb
pop
inc
insb
in
push
dec
cli
mov
test
or
jne
xchg
or
pop
stos
ds
inc
mov
gs
mov
std
xorb
aam
lret
stos
xchg
scas
outsb
mov
add
sbb
jle
inc
cli
out
push
cmp
push
jmp
fstpt
add
adc
push
and
insb
in
jge
pop
xchg
sub
push
ds
push
pop
test
in
insb
icebp
sub
sub
in
rep
cmp
or
dec
push
loope
sub
xorl
push
js
jmp
in
addr16
jle
es
aas
out
inc
lock
daa
pusha
frstpm(287
outsb
xchg
test
jo
push
push
jb
test
loop
dec
subl
and
add
xor
insl
jmp
test
jg
mov
and
fwait
test
out
cmpsl
push
mov
jl
sbb
lret
add
in
mov
in
adc
aam
fnstcw
mov
cmp
xor
daa
mov
das
outsb
std
mov
out
mov
shlb
push
loopne
mov
push
stc
faddp
sub
and
nop
pushf
ret
push
loope
daa
add
inc
xchg
int
mov
push
xorl
push
push
add
out
test
movsb
pop
test
push
push
pop
xchg
mov
outsb
test
xrelease
mov
sti
out
cmp
js
repz
mov
cmp
sbb
push
int
inc
es
std
popl
xor
dec
mov
jb
sbb
test
jns
sub
lret
push
mov
or
jnp
popf
push
cmp
cmp
cmp
repnz
push
arpl
xor
enter
xchg
xor
and
mov
mov
faddl
and
mov
sub
flds
mov
repz
sub
aaa
adc
inc
sarl
xchg
lods
adc
dec
pop
int3
push
stos
repz
mov
xchg
enter
fdivrs
cmpl
or
and
jo
sub
push
in
jmp
sub
cmpl
es
adcl
enter
xor
jae
test
out
pop
ror
pop
add
pushf
cwtl
fcmove
sti
sbb
adc
div
xor
or
mov
lret
cmp
icebp
lahf
aad
les
je
enter
mov
pop
mov
jmp
push
aam
push
std
pop
mov
arpl
and
data16
int3
jle
push
out
mov
lods
mov
cwtl
rcrb
xchg
hlt
mov
cmp
into
dec
mov
enterw
roll
scas
inc
fistps
imul
mov
divl
xorb
or
aas
mov
jmp
into
xor
mov
sub
dec
ret
xor
fldenv
push
mov
jg
inc
lahf
jmp
scas
test
push
adc
xchg
data16
stos
test
push
xor
pushf
out
or
lcall
ret
xor
jmp
in
into
mov
mov
push
testb
sarl
fsubl
addr16
add
fidivrl
mov
cmp
jne
adc
jmp
and
push
sub
cmp
mov
stos
mov
scas
jp
sub
push
orl
sub
lods
cmp
ja
andl
mov
lahf
ja
mov
repnz
cs
mov
stc
test
fnstcw
xor
jl
add
cld
cmc
adc
or
mov
jo
xchg
or
jo
xor
inc
and
pop
pop
xchg
out
or
ljmp
cmp
pop
adc
iret
pop
ds
adc
lret
cmp
fwait
test
mov
vcvttss2si
and
lock
mov
negb
or
stc
sub
jl
nop
cmp
js
aaa
cld
cmp
pushf
mov
fwait
cltd
and
pusha
in
jb
out
lret
or
add
shrb
lods
jl
mov
mov
mov
jne
inc
std
pop
mov
int
cli
inc
adc
test
or
ds
push
and
daa
clc
clc
pop
sub
mov
lea
fistpll
push
mov
push
sub
mov
data16
jo
addr16
xor
cmp
aam
daa
xor
xor
jns
adc
in
dec
cmpsl
in
push
pop
xchg
roll
and
adc
cmp
or
xor
in
lret
or
out
inc
push
push
pop
das
inc
loop
popf
xchg
adc
sahf
pop
stos
cmp
mov
daa
fwait
mov
inc
inc
push
adc
cwtl
test
push
mov
mov
pop
mov
shl
add
data16
mov
push
lahf
sub
lcall
xor
add
mov
insl
mov
mov
pop
push
xor
dec
mov
fldenv
cltd
aad
in
mov
sub
mov
or
movsl
addr16
sbb
or
adc
andb
movsb
stos
and
icebp
lods
dec
xchg
orl
mov
cmp
lods
call
xchg
fisubrs
or
mov
cld
xchg
add
or
cmp
loopne
insl
pushf
jg
cli
cwtl
loopne
cmpsb
orb
cmpsl
mov
int
mov
add
xor
mov
cld
jnp
adc
pushf
iret
bnd
pop
jo
or
push
push
and
add
icebp
mov
stc
cld
fstpl
es
push
jbe,pn
sub
mov
js
xchg
scas
xor
fldenv
adc
cmpsl
shrb
and
jl
mov
inc
push
xor
daa
push
lods
inc
push
outsb
sub
xchg
mov
loope
add
sti
cwtl
mov
and
clc
jo
jns
jmp
lret
xchg
push
stos
xchg
shrl
add
rcll
subb
mov
or
mov
mov
mov
xor
add
fdivrs
mov
jne
call
push
add
mov
dec
iret
pushf
ret
sub
or
jne
mov
cmc
cmp
pop
fst
fildl
mov
jmp
jns
lahf
daa
adc
add
stos
clc
mov
xchg
pop
jne
jl
inc
xor
sub
lahf
pop
call
ret
mov
rorb
xor
shlb
fwait
lds
mov
or
xchg
push
daa
test
jb
sbb
cmc
cmp
inc
push
icebp
loope
and
es
or
add
and
add
and
sbb
cmpsb
clc
loopne
cli
mov
dec
xor
jge
adc
js
push
movsb
xor
insl
add
xchg
dec
mov
jnp
fildl
inc
fcomps
outsb
jle
pop
inc
out
inc
imul
stc
xchg
repz
inc
or
adc
in
iret
xchg
mov
ljmp
in
in
lods
cmpsl
js
sti
or
and
repnz
test
cmpsl
pop
pop
mov
clc
pusha
mov
shrb
push
mov
pop
xor
cmp
push
dec
incb
add
sub
xchg
icebp
in
int3
pop
mov
pop
cmp
lea
fucompp
sbb
dec
or
dec
jo
in
fisttps
push
xor
shl
xor
sub
mov
jns
xchg
lcall
jmp
mov
pop
add
movsl
mov
fbld
push
xchg
mov
aam
ret
pop
inc
mov
fsubrl
sub
mov
dec
call
mov
mov
nop
cmp
test
cli
add
xchg
clc
adc
stos
repz
jae
sub
add
cmp
sbb
pop
ja
lds
jno
adc
xchg
mov
sub
stos
push
pop
xchg
jae
push
sub
dec
or
pop
xchg
imul
fcmovnb
and
dec
xchg
xchg
mov
xor
nop
push
ret
idiv
rcrb
pushf
jb
cmp
xor
neg
push
std
xchg
ds
inc
out
push
cmc
adc
xchg
aam
setb
jge
data16
mov
dec
mov
iret
test
sub
inc
daa
cli
mov
fdivrl
cli
cmp
in
add
sbb
fldt
pop
xchg
pop
jbe
dec
aas
push
add
cmpb
adc
mov
stos
add
or
bound
iret
xchg
stos
aas
mov
clc
push
lock
test
dec
mov
and
push
jnp
jno
leave
and
jbe
dec
shll
mov
sub
push
cmp
shrb
inc
pop
mov
sbb
divb
pop
mov
fsubl
popf
pushf
mov
push
and
cs
das
divb
cmp
call
loopne
adcb
cs
mov
sub
lds
or
mov
lcall
imul
adc
pop
ljmp
and
jp
bt
fcmovne
pop
lahf
inc
loope
rorb
in
outsl
je
int
in
fcmovnu
or
pushf
dec
mov
cltd
insb
xchg
inc
xchg
jecxz
xchg
jg
xchg
push
add
pop
xchg
push
mov
cli
repz
fs
je
sub
in
push
pusha
rcll
inc
mov
sahf
lea
xchg
adc
sbb
mov
xchg
das
push
fs
mov
ret
clc
sub
xchg
mov
push
sbb
ss
jnp
xchg
data16
push
mov
mov
and
jecxz
mov
push
jmp
jge
call
ljmp
or
cmp
pop
lret
mov
das
add
sub
mov
pop
inc
add
or
pushf
sbb
pop
jle
scas
dec
mov
xchg
xchg
sub
add
xor
idivl
mov
pop
outsl
test
ret
test
or
or
mov
dec
xlat
pusha
ret
or
or
es
into
xor
mov
insb
sub
daa
out
xchg
pop
imul
lock
cmp
lret
sub
jb
aaa
data16
loop
imul
aad
cs
jmp
inc
pop
and
sub
mov
outsb
sbb
push
mov
add
sahf
pop
shlb
pop
shll
lock
cmp
jmp
pop
dec
sbb
dec
push
repz
rcr
add
int3
ss
cmpsl
xchg
and
in
pop
test
dec
les
cltd
inc
xor
pusha
or
mov
and
push
int
addr16
stos
xchg
or
push
rcr
xor
popf
das
inc
lods
imulb
cmp
enter
outsb
fmull
into
test
stos
jge
and
mov
insb
inc
roll
pop
cli
hlt
pop
mov
pop
fmulp
shll
or
roll
push
xor
movsb
xor
inc
xchg
add
fs
jo
sbb
jl
or
dec
daa
leave
and
mov
cmpsb
push
cwtl
pop
jg
sub
dec
sahf
add
fimuls
add
andl
cmp
scas
fldt
data16
inc
or
push
andl
adc
popf
and
mov
pushf
push
inc
pop
into
xchg
jb
and
xchg
push
sub
out
adc
dec
xchg
fisubl
aas
or
pop
int
push
inc
aaa
mov
imulb
xchg
adc
jge
push
inc
sbb
or
or
jns
fstps
mov
data16
ficoml
shrl
out
fidivs
mov
inc
lret
movsb
jbe
add
in
push
dec
xlat
jno
dec
push
adc
xchg
jecxz
fists
mov
sub
outsl
or
xor
sub
lret
test
pop
aad
mov
lcall
dec
aam
adc
jno
adc
xchg
into
imul
mov
test
xchg
sub
push
int
scas
jecxz
sub
daa
lahf
pop
cmp
dec
xchg
push
xchg
inc
sahf
shl
inc
sub
es
dec
imul
pop
sub
arpl
or
dec
cwtl
add
repnz
add
dec
xor
inc
inc
gs
movb
mov
popa
jge
pop
pusha
ss
xchg
cld
cld
or
adc
mov
sti
in
clc
mov
inc
dec
leave
js
sub
pop
cli
incl
enter
add
shl
mov
filds
or
pop
push
std
mov
call
xchg
add
mov
dec
scas
fistl
movsb
add
mov
imul
sbb
lods
pop
xchg
inc
enter
jns
gs
pop
mov
mov
push
push
push
xor
scas
push
in
cmp
popa
in
ds
psubd
dec
pop
xchg
insb
int3
js
stos
inc
jecxz
test
lret
iret
mov
cmove
dec
rcrl
xchg
pop
repnz
sbb
lea
aad
fcmovbe
or
jb
xor
loopne
sbb
mov
test
fildll
mov
in
shlb
shr
insb
in
adc
xor
out
mov
inc
je
xor
mov
jne
leave
iret
mov
inc
mov
aas
cld
lahf
cmp
aad
dec
aaa
das
xor
push
push
shl
push
sub
sub
cwtd
ret
sub
test
ret
mov
aas
je
fldcw
mov
push
xchg
fistps
xor
movsb
das
lock
imul
dec
jae
or
mov
cmp
push
in
fldl
sbb
pop
lahf
popa
and
fs
loopne
mov
or
mov
xor
xchg
insl
sbb
ss
incb
mov
scas
clc
jmp
xchg
push
pop
test
or
push
mov
js,pt
outsl
mov
stc
mov
mov
movsb
push
jbe
flds
or
mov
sub
jmp
mov
out
mov
cmpsb
fstpl
jns
icebp
mov
or
xchg
adc
test
xor
enter
loop
aaa
inc
or
mov
cltd
dec
cmp
test
adc
insb
std
pop
popa
adc
xchg
mov
adc
lret
dec
and
or
ret
js
jg
push
adc
insl
mov
pushf
xchg
and
lock
lcall
mov
stc
scas
pop
arpl
lds
stc
inc
mov
sbb
jns
scas
xchg
sub
xor
std
roll
std
cwtl
or
in
lea
mov
add
push
adcb
divb
fcmovnu
pop
frstor
sub
fwait
inc
xchg
and
pushf
push
arpl
aas
or
pop
inc
aad
push
mov
or
inc
fistl
or
adc
mov
rclb
xor
mov
clc
in
out
push
pop
lahf
scas
inc
shl
mov
push
sbb
inc
mov
fxch
clc
cmpsb
push
lds
out
add
mov
pop
add
jno
add
push
sbb
daa
jne
lock
cmp
push
in
mov
xor
icebp
pushf
adcl
jae
out
rol
add
es
fcom
inc
sub
cmp
imul
jae
lds
jg
sub
inc
sbb
inc
cmp
jne
or
pop
sub
push
fnstenv
das
cli
aas
cmc
pop
ficompl
sbb
xchg
inc
push
xor
push
add
and
ret
xor
xchg
in
add
popl
test
push
pop
ficompl
fnstcw
mov
xchg
push
daa
add
outsb
push
push
mov
xor
lea
cmp
cmpsl
mov
test
or
mov
ret
mov
cmp
negb
fs
icebp
shl
lods
mov
jp
inc
push
loop
cmpsl
pushf
repnz
mov
inc
sub
inc
xor
mov
jg
stos
movsl
sub
sub
or
hlt
cmpsl
in
adc
icebp
sub
gs
jo
sbb
jnp
mov
add
push
in
ss
enter
mov
fcoml
sbb
lods
mov
repz
in
ss
cmp
jmp
add
xorb
mov
test
leave
rcll
add
sub
xchg
mov
and
xor
push
aad
mov
and
shrb
popl
fwait
or
or
and
notb
mov
push
push
lods
adc
mov
icebp
rclb
and
push
mov
pushf
out
xchg
fadds
aam
and
sbb
xlat
add
sbbb
shl
add
or
and
fwait
ja
and
pop
fmull
in
adc
into
roll
fdivrs
xchg
and
imul
sbbl
btr
std
lahf
xchg
sbb
xchg
std
pop
mov
push
mov
inc
jo
ret
xchg
ret
int3
or
jnp
lds
jecxz
arpl
mov
sbb
cmp
shl
les
push
dec
popf
jp
push
mov
xchg
cltd
lds
mov
push
std
daa
adcl
add
adc
mov
stos
test
out
leave
and
pop
and
sbb
mov
sbb
ret
das
mov
lahf
or
stc
mov
push
mov
bound
jmp
mov
lahf
fstpl
cmpsb
pushf
or
popf
jge
hlt
inc
dec
lea
out
mov
dec
std
pop
iret
mov
cli
in
jge
mov
bound
pop
and
mov
loope
js
and
mov
pushf
jb
xchg
bound
cld
xlat
xor
sbb
xchg
dec
into
sbb
scas
lods
adc
sub
hlt
push
leave
sub
inc
xchg
fisttps
icebp
loopne
pop
shlb
insl
push
or
adc
xchg
and
inc
shll
mov
es
and
aas
sub
jo
mov
sbb
mov
xchg
cmp
data16
push
xor
call
fiadds
xchg
inc
int
repnz
cmp
test
cmp
mov
sbb
sahf
sbb
add
adc
adc
pop
lds
imul
rcl
lds
ret
inc
cmp
test
test
shrl
loope
xlat
in
out
loope
es
mov
add
fists
stos
mov
push
jl
fldl
mov
outsl
ja
and
inc
shll
out
xor
arpl
jle
stc
dec
inc
ret
cwtl
cmc
cmp
test
scas
popf
testl
push
xor
add
cmpsb
and
add
inc
sub
xchg
dec
and
outsl
xchg
cmp
sti
cmc
aaa
fists
loope
pop
mov
cltd
sbb
mov
adc
stos
lds
shlb
test
and
xchg
inc
aas
in
fldcw
xorl
jp
ror
sub
fcomps
xchg
mov
pushf
cwtl
adc
arpl
arpl
sbb
ss
adc
pop
shufps
jg
sub
pop
add
and
push
mov
dec
sbb
inc
gs
sarb
insb
pusha
add
xor
mov
push
pop
pusha
sbb
push
dec
aad
jbe
loopne
sbb
rclb
fdivrs
addr16
dec
cmp
dec
daa
loop
xor
mov
sbb
inc
mov
in
dec
fcoms
mov
mov
aaa
ljmp
jno
sbb
mov
xor
jmp
xor
or
aam
shrl
cmp
lea
xchg
inc
dec
cwtl
int3
pushf
aas
xchg
icebp
aas
jns
lahf
clc
repz
lds
aas
lret
cmp
movsl
mov
sub
out
sub
cmp
cs
xor
fsubrs
sbb
push
xor
xlat
cmp
mov
nop
push
mov
cmp
pop
or
repz
push
push
lods
insb
push
out
inc
jle
testl
mov
or
xor
test
mov
sbb
ret
fmull
jbe
xor
cmp
add
lcall
adc
test
outsl
push
stos
sub
push
xor
push
das
or
push
fisttpll
adc
mov
loop
iret
cld
xchg
popf
sti
mov
stc
data16
mov
jno
jae
mov
pusha
movsb
push
mov
in
push
mov
dec
mov
rclb
lods
aas
mov
jg
out
es
movb
dec
jl
enter
push
out
xor
jb
loopne
aas
scas
mov
lock
sahf
es
add
sbb
das
mov
outsb
fdivrl
mov
jbe
push
jae
sti
adc
xchg
mov
pop
arpl
sub
adc
clc
nop
in
xchg
cs
gs
add
adc
in
jge
mov
movsb
and
and
sub
inc
in
add
outsl
jae
pop
sahf
xor
and
shr
or
gs
stos
stos
lods
lods
pop
inc
push
mov
xchg
test
mov
imulb
stos
add
mov
shl
fsubl
movsl
adc
dec
fwait
mov
pop
mov
js
push
insb
xor
icebp
mov
popa
clc
rcll
mov
lock
idiv
loopne,pt
sbb
mov
mov
mov
inc
xchg
mov
pushf
js
xor
sbb
aas
rolb
sub
adc
xchg
hlt
in
sub
pop
repz
out
pop
int
pop
fldt
or
lcall
mov
lods
mov
orb
cmpsl
mov
inc
ret
jp
test
add
xchg
mov
cmpb
cmp
out
mov
cli
xlat
addb
fisttpll
loop
mov
mov
in
mov
pop
stos
rorb
pop
iret
push
mov
cmpb
lds
mov
lcall
mov
push
int3
jg
jnp
xchg
sub
divl
inc
push
subl
mov
lods
nop
lods
popa
adc
dec
rol
ja
add
stos
sahf
xor
xor
movhps
pushf
adc
maskmovq
push
dec
lret
push
mov
sub
adc
adc
out
sbb
or
hlt
fiadds
xchg
add
fbstp
push
repz
rcll
fs
push
rclb
stc
ds
hlt
mov
cwtl
sub
stos
ja
pop
pop
je
or
enter
jp
icebp
jle
cmp
cmp
mov
int3
jmp
xchg
xchg
scas
pop
mov
ret
sbb
bound
mov
dec
jae
sub
testb
sbb
out
mov
dec
lds
subb
fdivs
imul
mov
xor
daa
lea
jecxz
insl
jmp
lock
mov
xchg
adc
push
into
jb
sbb
out
xlat
inc
lods
push
add
rolb
fiaddl
fidivrs
cld
out
mov
pop
pop
push
addr16
notb
mov
ja
push
popa
fdivl
cs
mov
scas
push
das
je
leave
dec
mov
lds
jecxz
lret
fcoml
dec
int
out
dec
lahf
leave
sti
push
fildl
mov
insl
xor
and
scas
sub
push
jbe
adc
lret
inc
lcall
and
nop
mov
in
stos
arpl
and
outsb
xchg
fs
sub
lods
lods
xor
sbb
sub
lret
adc
xchg
mov
hlt
inc
pop
test
jle
ret
mov
int
rclb
les
sbb
push
inc
mov
test
adc
push
adc
notl
mov
inc
scas
test
cmp
mov
pushf
adc
stos
mov
xchg
fisubs
cmp
pushf
xchg
in
jle
sub
cld
lahf
mov
lock
jae
mov
add
mov
enter
iret
xor
loopne
rorb
pop
sub
into
push
mov
sbb
clc
icebp
dec
lods
xor
in
fwait
ss
addr16
push
cmpsb
dec
mov
xchg
pop
sub
and
xchg
or
lahf
stc
imul
shrb
test
adc
xchg
dec
les
xchg
cltd
inc
mov
fucom
adc
cmp
stos
daa
xlat
cmpsl
mov
push
pushf
xor
xor
add
mov
dec
push
xchg
out
and
stc
mov
fcmove
lods
xchg
and
dec
aas
js
push
out
inc
jmp
mov
or
dec
pop
xor
jb
fnsave
mov
data16
xchg
cwtl
pop
cmp
fldl
pop
test
stc
add
adc
jae
jne
cmp
inc
outsl
sar
arpl
or
test
in
jecxz
jo
fsubl
iret
add
push
mov
sbb
hlt
adc
cmpsb
add
loop
jg
cwtl
orb
xchg
pusha
inc
nop
xor
xchg
add
ret
pop
stc
xchg
pusha
inc
jecxz
add
push
pop
out
cld
pop
jge
movsb
sahf
jle
pop
fcmovne
xlat
popf
lods
cmpsl
call
xchg
ja
addr16
jns
mov
les
jp
cmp
movsl
mov
mov
jmp
mov
cmp
mov
xor
cmpsb
mov
nop
xchg
sub
movsl
fs
mov
cwtl
mov
ja
sti
pop
adc
gs
cwtl
add
xchg
inc
push
mov
scas
sbb
outsb
pop
les
iret
cmc
adc
fucomi
aaa
push
xchg
pop
dec
cltd
scas
xchg
push
hlt
add
shrl
sub
pop
xchg
push
add
jecxz
sbb
stos
leave
incl
lods
pusha
jns
push
xchg
mov
mov
stc
add
xchg
pop
data16
insb
das
pop
jg
jecxz
in
outsl
sub
and
ret
pop
adc
mov
fwait
pop
xchg
and
fdivs
sbb
adc
out
out
cmp
jbe
ret
mov
loop
pop
std
addr16
mov
lret
xchg
and
repz
repz
xchg
adc
xor
or
pop
jb
mov
push
inc
jecxz
ljmp
shl
pop
and
push
adc
or
dec
ret
cmp
es
push
sub
adc
loope
aad
inc
jb
sub
call
adc
mov
fistpll
pop
xor
imul
pop
jmp
xlat
push
cmpsb
sbb
sub
or
ret
xor
pusha
add
pop
sarl
mov
xchg
cmp
sub
repnz
int
mov
pop
iret
add
rolb
sarl
push
jmp
cld
ss
pop
cmp
adc
shlb
jno
mov
out
mov
cmpsl
adc
xorb
dec
or
pop
mov
out
xor
mov
jno
popf
rep
int
addl
arpl
sbb
fcmovne
add
scas
push
xchg
in
hlt
sti
xchg
sub
rol
inc
inc
adc
xorb
sbbb
insb
sbb
xchg
mov
jnp
ja
add
mov
into
aaa
out
and
sbb
shlb
in
inc
sahf
aam
and
cmp
dec
xchg
mov
fistpll
adc
sbb
mov
mov
mov
and
xchg
icebp
das
mov
cmp
stos
aaa
sahf
jnp
fwait
pop
int3
aam
adc
adc
imul
mov
movsl
shll
sbb
and
add
and
push
mov
cmc
push
stos
jne
aaa
and
adc
jl
lcall
inc
adc
add
mov
popf
cmp
ja
pandn
ja
dec
mov
jg
or
jno
pop
cwtl
and
icebp
scas
xor
movsb
push
lods
pushf
repnz
aam
dec
stos
enter
iret
add
xchg
and
jb
cmp
xor
data16
loop
subl
mov
sarb
push
push
out
and
mov
mov
fs
pop
lcall
out
sub
popf
scas
fildll
mov
ss
mov
mov
stos
mov
mov
xor
mov
movsb
sbb
mov
pop
dec
out
ret
into
xor
push
cmp
fidivrl
and
lods
mov
add
js
mov
add
lea
mov
mov
add
add
adc
add
sti
pop
dec
push
hlt
ficompl
pop
jecxz
and
jnp
push
cmpsb
add
ljmp
inc
xchg
popa
test
test
jl
push
inc
in
nop
push
sahf
pop
mov
jbe
enter
sub
xor
je
fisubl
dec
lcall
loopne
int3
imul
and
fldt
movsb
adc
mov
lret
out
icebp
cli
dec
sub
add
aas
dec
dec
divl
mov
xchg
mov
in
jle
xchg
mov
jnp
in
push
repnz
cmpl
gs
sub
push
dec
mov
popf
inc
lods
fwait
lds
cmp
scas
cmp
outsb
enter
push
mov
push
mov
push
lahf
out
insl
lods
cmpb
xlat
jge
adc
xor
mov
stc
cltd
xchg
ss
iret
cmp
addr16
jge
js,pn
mov
pop
loop
inc
call
adc
stc
cmpsl
mov
xor
orb
ret
fldt
fwait
repz
cwtl
dec
mov
pusha
lcall
nop
fdivr
stos
bound
addr16
mov
adc
pop
xchg
adc
jp
jo
nop
pop
ret
jbe
and
lods
ds
inc
popf
cmp
mov
or
loope
sbb
dec
jbe
xchg
mov
or
add
mov
nop
sbb
fdivp
fwait
pop
mov
inc
inc
mov
stc
dec
jnp
fucomi
fmuls
sbb
outsb
xor
dec
filds
mov
jle
dec
in
or
mov
dec
aaa
push
fbstp
mov
add
push
sbb
fcomi
loopne
dec
cmp
lret
in
rol
loop
aam
jge
jmp
mov
xor
push
mov
in
std
mov
jecxz
or
add
or
negl
nop
mov
sbbl
mov
out
xor
outsb
aas
mov
push
inc
call
jne
pop
cmpsb
out
xchg
loopne
popa
mov
adc
sub
push
hlt
in
jmp
jl
cmp
or
hlt
in
and
insl
push
pop
scas
sub
mov
and
inc
mov
pop
mov
cmp
lret
mov
push
das
jne
std
or
pop
popa
cwtl
jmp
add
lea
mov
imul
sub
sub
andb
adc
mov
loope
pop
hlt
repnz
test
test
mov
mov
xor
iret
push
and
out
sbb
ficompl
or
or
shl
pop
shll
xor
xor
insl
fimull
repz
xor
sub
push
fdivl
mov
add
sub
cwtl
test
xorl
push
cmc
xor
outsb
sbb
mov
push
imul
popa
ret
imul
add
or
std
and
push
fcoml
outsb
fildl
es
ret
push
mov
mov
loopne
andb
pop
aam
cmp
inc
mov
stos
aaa
int
lods
sahf
push
movsl
adc
cmp
mov
popf
and
push
jne
adc
roll
xchg
test
test
adc
add
jmp
xor
pop
jge
ss
mov
adcl
cmp
cwtl
ss
imul
daa
xchg
aad
or
jge
sub
mov
inc
jecxz
outsb
movsb
popf
sbb
inc
fucomi
loop
adc
repz
mov
push
inc
mov
int3
mov
outsl
subl
test
in
jae
xchg
push
aas
imul
jns
cmp
js
aaa
outsl
sbb
xchg
cmp
mov
test
xor
lds
call
push
or
call
sbb
jne
notb
imul
test
jl
mov
pop
hlt
push
out
imul
xlat
add
or
inc
and
dec
and
xor
movsl
push
jno
and
addr16
pop
mov
gs
out
xor
push
std
jno
fisttps
stos
ja
sbb
fs
test
testb
test
pop
cmp
movsb
ret
or
cs
ljmp
mov
jns
pop
enter
imul
mov
test
push
pop
xor
or
std
aad
outsl
mov
push
xchg
jae
imul
scas
mov
jge
or
cmp
or
push
in
sub
or
pop
subl
sbb
fwait
icebp
fnsave
push
and
mov
jl
arpl
pushf
jecxz
and
stos
push
jmp
scas
adc
sbb
cli
cmc
data16
inc
enter
je
sarb
push
adc
es
xor
in
push
adc
test
mov
mov
pop
sub
inc
push
rclb
test
pop
addb
mov
aam
and
pop
fmuls
hlt
dec
push
mov
pop
data16
cmp
loope
mov
nop
xchg
stc
cwtl
mov
mov
pop
in
leave
sbb
xchg
out
mov
cld
loop
scas
mov
add
or
xchg
loope
in
clc
pop
int
mov
push
pusha
xor
adc
out
push
out
ljmp
or
jne
or
and
xlat
sbb
sbb
shl
adc
push
repnz
icebp
xchg
adc
outsb
insl
inc
cwtl
xchg
pop
push
xor
push
adc
xchg
sbb
outsb
and
movb
outsl
add
push
adc
add
es
pop
add
add
mov
sbb
xchg
push
xor
xor
popf
es
push
cmp
pop
scas
cs
sbb
jge
test
out
je
jg
xor
js
es
and
inc
lock
loope
les
mulb
xchg
pushf
inc
imul
stos
pop
push
rcrb
mov
cmpsl
or
pushl
inc
lret
scas
test
sti
test
jbe
sub
insb
jge
dec
pop
pusha
fwait
sub
inc
subl
mov
sub
push
or
push
lds
mov
inc
sub
adc
jmp
div
push
inc
das
rcr
nop
daa
int
aad
mov
stc
xchg
das
mov
xor
mov
cmp
adc
push
mov
sbb
sbb
andl
ffree
wrmsr
dec
fwait
fwait
out
cmpsb
iret
test
fildll
xorl
dec
or
inc
idivl
dec
imul
mov
cmp
pop
test
mov
xchg
fs
xchg
sbbb
shlb
loop
sub
xchg
push
xchg
test
jne
in
je
dec
incl
int
pushf
fimuls
mov
sbb
push
insl
pop
xchg
add
rcl
pop
inc
jb
jo
cmp
mov
dec
push
ret
pop
in
loope
js
adc
les
push
push
pusha
test
mov
aam
xor
daa
pop
inc
adc
dec
sbb
adc
inc
lcall
xchg
lods
sub
inc
mov
jns
add
into
cmpsl
jecxz
loopne
mov
out
push
out
sarb
out
jae
mov
aaa
daa
push
sbb
mov
in
test
data16
cltd
bound
adc
dec
sub
pop
int3
stos
mov
sbbb
xchg
and
stos
in
hlt
pop
pop
inc
mov
inc
rcl
lcall
or
adc
stc
add
push
xchg
mov
mov
fs
add
add
mov
dec
add
pop
rcr
imul
mov
mov
adc
inc
mov
push
icebp
fcomps
fsubr
fadd
mov
mov
jmp
test
dec
mov
test
outsb
jecxz
and
subl
repz
insb
ret
push
add
inc
xorb
dec
sbb
or
ret
idiv
orb
mov
shlb
mov
fabs
xchg
xor
jno
pop
add
mov
or
and
popa
fwait
dec
xor
lcall
lea
addr16
es
inc
dec
cmpsb
out
iret
decb
push
inc
outsl
sub
test
and
aam
mov
jmp
es
cmp
sbb
and
dec
xor
jecxz
jl
and
mov
aad
js
pop
inc
adc
jle
jmp
jns
test
push
ja
and
aas
xchg
lcall
cli
xchg
imul
cmp
xor
xor
xorl
fiadds
cmp
or
or
mov
lea
pop
add
es
into
ja
inc
repz
movsb
repz
pop
push
or
push
or
popa
mov
pop
pop
shll
gs
push
add
in
mov
jae
push
dec
or
cld
pushf
xchg
xor
mov
or
push
xchg
jbe
clc
lret
pop
pop
add
dec
inc
sub
inc
pop
cmpsl
lret
xorl
adc
adc
test
mov
push
pop
leave
mov
add
into
or
jle
mov
sbb
mov
lods
aaa
xchg
ret
pop
or
lret
jbe
cmp
push
sub
or
ror
inc
pop
div
fwait
dec
shlb
sbb
mov
xchg
or
fldl
mov
in
clc
mov
jle
dec
inc
jl
movsl
andl
ret
xlat
mov
lret
stos
jbe
ja
cmp
cltd
or
addr16
push
dec
mov
push
xchg
es
mov
jmp
cmc
dec
xchg
lret
mov
dec
flds
bound
pusha
sarb
cld
jge
repnz
leave
adc
mov
push
scas
push
adc
xchg
pusha
pop
lods
das
or
lods
xchg
xchg
loopne
jl
je
xchg
test
adc
push
ret
das
pop
enter
push
sbb
repz
dec
and
push
lcall
or
inc
pop
and
or
test
sbb
xor
mov
ljmp
daa
xchg
pop
inc
and
test
rcrl
hlt
xchg
cwtl
sub
in
lock
lds
inc
hlt
lret
ret
mov
add
cs
outsl
push
arpl
lds
ds
icebp
jp
sbb
push
pop
jnp
fwait
jb
sbb
cld
in
pop
iret
mov
pop
aam
js
call
outsb
xchg
lods
dec
xchg
out
cltd
insb
add
call
push
orl
in
gs
sbb
mov
pushf
cwtl
push
push
and
std
insl
push
mov
int
fcompl
sbb
sub
cltd
mov
xchg
xchg
jg
fisubl
mov
lret
dec
mov
push
movsb
push
push
iret
lcall
cmp
sbb
je
jmp
dec
into
outsl
xchg
insb
sarl
clc
dec
out
xchg
xchg
je
xor
daa
push
leave
lret
lods
pop
mov
mov
loope
mov
pop
mov
jmp
enter
push
icebp
lahf
nop
fnstenv
dec
cli
pop
arpl
gs
sub
push
lock
xor
outsl
fwait
inc
jle
pop
icebp
fcompl
int3
xchg
cmp
jnp
xlat
cld
negb
ds
xlat
xchg
cmp
lea
lea
jne
mov
dec
xchg
popl
fmul
into
jo
lcall
mov
mov
imul
inc
push
pop
arpl
sbb
adc
sbb
stos
jno
dec
adc
int
mov
or
mov
pop
or
pop
enter
inc
testl
sbb
adc
ret
lcall
jge
xchg
loopne
bound
fstpt
jg
inc
sub
push
sub
lods
es
jb
imul
mov
lods
pushf
or
jo
jge
out
dec
add
mov
dec
gs
imul
push
cli
and
outsl
inc
repz
mov
or
cmp
xor
test
ds
lret
inc
xlat
fstps
mov
mov
leave
mov
loop
mov
mov
fadds
adc
loop
test
and
xorl
push
push
int3
cmp
mov
je
sbb
into
in
insl
aaa
sarl
mov
test
jp
pop
mov
and
fwait
sti
std
aas
push
mov
scas
shr
push
jb
in
mov
mov
xchg
dec
or
setne
inc
daa
aad
adc
mov
mov
call
mov
sbb
out
jle
pop
lahf
inc
imul
lret
ds
clc
or
fs
addr16
pop
js
fwait
lock
jb
cli
and
sub
jb
and
je
movsb
data16
add
or
mov
sahf
pop
jge
dec
call
cmp
mov
pop
mov
data16
mov
mov
imul
cs
dec
push
mov
lahf
scas
jge
jmp
inc
jbe
stos
out
cwtl
popa
jmp
inc
in
mov
mov
fildl
ret
or
insl
cld
inc
ljmp
sbb
andb
sbb
sbbb
and
xlat
data16
adc
xchg
ljmp
xchg
cmc
jne
pop
rcrb
or
in
fld
add
fidivl
add
lret
mov
adc
inc
paddw
lea
aas
sti
in
push
xorl
xor
fsubrl
mov
inc
push
dec
loope
pop
insl
fs
jns
lods
repnz
dec
stos
xor
and
adc
push
add
test
pop
fstpl
cmp
adc
movsl
cmp
pop
fdivp
cmpsb
repnz
imul
mov
iret
orb
push
sub
daa
in
nop
cmp
dec
data16
sub
or
mov
mov
cltd
stos
mov
orl
sbb
push
push
jmp
and
call
ljmp
js
mov
push
bnd
lock
inc
inc
cmpsl
repnz
push
cmp
mov
repz
lret
gs
sahf
xchg
std
dec
leave
dec
daa
sahf
and
jmp
fstpl
dec
cmc
lea
mov
dec
insl
das
aam
sub
jno
mov
sub
mov
add
clc
mov
pusha
jae
ficoms
adc
int3
cmp
stc
idiv
xchg
xlat
adc
sbb
pop
push
daa
mov
pop
mov
mov
scas
mov
and
dec
dec
lock
adc
lods
fwait
insb
cwtl
int
mov
fs
jle
dec
xchg
aad
repnz
and
cltd
cmpsl
inc
aad
cmp
adc
cltd
dec
jmp
mov
insl
lcall
js
pop
test
add
dec
sbb
cmp
sbb
outsb
insb
int3
dec
inc
mov
mov
daa
gs
cmp
divb
cmp
push
mov
aaa
out
sbb
add
ds
test
xchg
xchg
mov
outsl
fnsave
stc
cmp
hlt
cmp
sbb
cmp
xor
call
xor
daa
loop
aaa
sarl
cs
push
mov
mov
sti
or
xchg
push
cmp
and
add
cmp
push
pusha
lods
outsl
xor
and
or
inc
lret
cltd
stos
dec
mov
mov
jno
sub
pusha
les
cmp
les
rcrb
push
and
mov
cmp
das
or
mov
std
iret
pop
xor
mov
push
push
push
or
out
cld
or
inc
push
adc
or
and
mov
in
or
movsb
sub
rcr
adc
xchg
pusha
xchg
cmpxchg
sub
insb
insb
dec
mov
or
mov
cmp
aaa
scas
dec
mov
cmpsl
aam
rcr
mov
insl
dec
mov
rolb
mov
nop
iret
cmp
xchg
sub
insl
xchg
add
sbb
pop
aad
imul
mov
rorl
inc
sahf
xchg
stos
jnp
dec
xchg
add
xor
inc
lcall
int
shrl
xchg
sub
fcmovnb
ja
fadds
lcall
mov
test
and
dec
popa
inc
outsl
sub
add
mov
jmp
faddl
shl
subb
shlb
andb
stc
sub
imul
xor
movsl
sbb
outsb
mov
inc
pop
into
popf
cmpsb
aaa
mov
xorl
mov
push
or
mov
test
xchg
mov
mov
xchg
cmpb
jne
pop
and
push
movsb
mov
mov
stc
call
js
pop
int
in
jle
cmpsb
mov
inc
mov
jle
mov
sarb
das
xchg
jbe
fdivrs
andb
push
fidivl
mov
into
push
adc
xchg
test
mov
xor
insb
xchg
cmp
cmp
int3
or
sub
stos
xor
mov
pusha
sti
mov
in
mov
mov
mov
mov
and
aad
enter
in
inc
or
test
add
fildl
insb
push
loopne
mov
jge
gs
xor
adc
push
out
mov
xchg
pop
es
addr16
cmpsl
cld
les
pop
test
mov
add
xor
sub
std
mov
out
pop
adc
test
mov
popf
xor
movsl
or
jno
cmovo
mov
cmpsl
dec
push
xor
cmp
stos
cs
push
mov
int3
rolb
cmp
cmp
loope
divl
mov
imul
push
in
cmpsl
jmp
int3
repnz
rcrl
lds
push
and
mov
fcoms
pop
inc
cmpsl
jb
jmp
mov
cmc
fisubs
xchg
pop
scas
cmpsl
adc
adc
das
iret
xlat
loope
and
cli
or
incl
loope
dec
dec
jne
xchg
jecxz
jg
notl
pusha
add
mov
cmc
inc
push
xor
int
aas
pop
js
daa
enter
cmp
sub
xchg
out
roll
lods
lea
push
sbb
bound
decl
mov
xor
test
adc
cmp
int3
mov
lret
pop
and
mov
mov
or
mov
int3
and
jb
mov
add
jae
xor
aad
add
dec
mov
mov
xlat
push
fimull
add
cltd
pop
mov
xchg
int3
das
xor
jo
mov
daa
jno
roll
mov
push
call
cmp
add
mov
xchg
gs
leave
or
movsb
jnp
pop
fs
push
addb
jne
outsl
insb
sbb
sbb
inc
xor
shrl
arpl
aaa
push
xlat
or
aad
pusha
inc
xchg
outsl
hlt
mov
outsb
test
add
insb
push
arpl
mov
and
sbb
pop
and
outsl
jecxz,pt
popf
lods
cmc
adcl
loope
cwtl
push
and
mov
pop
dec
and
sbb
mov
pop
xor
dec
cwtl
adc
faddl
cmp
jns
mov
fisubrl
bnd
jnp
mov
in
pop
imul
ja
inc
adc
movsl
mov
fs
and
add
mov
inc
aam
andl
punpcklwd
mov
dec
mov
mov
pusha
jnp
mov
aaa
or
inc
scas
sbb
leave
inc
stos
mov
mov
mov
movsl
xor
mov
dec
fistpll
jbe
inc
int
lcall
mov
mov
ja
or
xor
nop
jo
js
or
xor
lahf
adcl
jb
and
cld
sbb
sbb
adc
negb
xchg
jo
cmc
pop
dec
ret
or
std
adc
sbb
mov
or
rclb
pop
inc
out
push
xchg
push
cltd
insl
or
xchg
ret
jge
dec
dec
pop
cltd
iret
mov
dec
and
clc
dec
and
mov
inc
fsubr
flds
movsl
dec
jp
outsb
loop
lock
fildll
pushf
jo
pop
jo
insb
fildl
es
mov
iret
dec
repnz
add
sarl
cli
pop
test
push
mov
dec
andl
fs
mov
mov
pop
jo
or
sub
jmp
lret
jg
inc
test
inc
jbe
loopne
cli
dec
outsl
add
sti
ret
aam
add
cmp
scas
mov
xchg
pop
push
mov
mov
fwait
or
bound
clc
jmp
fs
mov
stos
pusha
cmpsb
fcmove
repnz
sub
cltd
adc
sbb
aaa
ficoms
cld
push
std
push
xchg
sub
add
dec
cltd
cmp
pop
test
int
sub
sub
or
jne
add
out
add
dec
and
inc
or
lods
mov
pop
in
xchg
sub
lret
add
stos
and
lcall
jmp
push
movsb
out
mov
mov
dec
leave
movsb
insl
jnp
fdivl
paddw
nop
bound
push
repz
stos
sub
sbb
inc
jl
mov
inc
das
or
lods
xchg
pop
ret
int
sbb
jmp
ret
cmp
mov
stos
shll
jg
das
stos
int
cmp
dec
loop
xor
stos
mov
push
in
xchg
push
pop
adcb
nop
int3
fisubrs
lea
js
imul
dec
inc
pushf
lea
or
mov
rorb
in
sub
les
push
shl
add
scas
push
fsubrl
daa
outsb
dec
adc
out
jmp
popa
dec
rclb
xchg
mov
lret
addr16
mov
or
push
dec
push
movsb
mov
xchg
mov
push
div
ja
std
jecxz
cltd
int3
and
inc
pop
add
dec
sarl
ja
push
sahf
cli
pop
jp
cmp
xor
sbb
lods
jecxz
rcrb
dec
movsl
adc
or
mov
adc
dec
jbe
pop
or
push
mov
sbb
inc
test
daa
loopne
add
roll
jne
loopne
pop
push
in
ret
ljmp
push
insb
in
int
jbe
lcall
cmp
push
mov
mov
fmull
mov
imul
leave
in
push
test
dec
iret
hlt
out
mov
cmp
test
fisttpll
dec
jb
out
js
addr16
ret
in
add
mov
hlt
popf
ret
mov
and
nop
dec
jno
sub
and
sub
testl
lods
pop
push
xor
sub
cmp
pop
mov
xchg
popf
jb
cld
ret
pushf
cmpsb
adc
dec
pop
mov
out
rorb
fcoms
push
in
popl
jne
cmpsl
inc
pop
adc
mov
gs
mov
sbb
or
dec
lcall
sub
shlb
scas
xor
jge
mov
pop
mov
xlat
mov
ret
mov
cmp
push
imul
out
lcall
sub
inc
jns
or
push
ljmp
cmp
sti
inc
cmpsb
cmp
inc
ficompl
daa
sbbl
popa
and
fadds
out
and
repnz
inc
xchg
ret
repnz
or
mov
call
jnp
cs
xchg
ljmp
lock
dec
and
pop
std
push
shl
xchg
cmp
out
sub
pop
jo
ret
jno
mov
outsb
push
mov
mov
or
push
cs
ja
sbb
push
pop
xchg
pop
jge
ficomps
clc
mov
imul
xchg
addr16
inc
scas
mov
outsl
sub
cmpsl
aaa
mov
mov
cmp
xchg
insb
orl
faddl
loop
lret
or
dec
add
in
insb
icebp
xor
add
movsb
int
out
pop
adc
stos
sbb
mov
fnstsw
js
or
xor
and
mov
loop
push
pop
mov
xor
mov
mov
dec
addr16
aam
call
inc
jb
out
sub
test
mov
cli
mov
inc
insb
movsb
mov
and
and
pop
fstpt
sarb
mov
mov
xor
jle
xchg
mov
out
xchg
loopne
out
mov
stos
mov
and
mov
dec
push
imul
js
and
xor
jns
aad
arpl
and
pop
scas
jg
jmp
jp
mov
gs
std
add
lods
mov
and
rcl
std
or
push
outsb
cmp
out
adc
sub
lods
aaa
add
fbstp
enter
icebp
push
divb
sub
or
mov
in
nop
fbstp
jns
jge
cmc
lock
das
inc
pusha
call
jbe
and
movaps
push
xor
cwtl
mov
in
sub
cld
popf
test
int
pop
pop
leave
out
mov
jne
and
test
mov
fxch
jb
pop
add
jp
cmp
out
in
in
mov
arpl
insb
movsb
loope
cmp
pop
into
data16
arpl
ljmp
divb
lods
or
adc
adc
mov
push
insl
hlt
dec
add
das
jno
in
out
add
dec
mov
xchg
int3
data16
mov
push
push
leave
out
push
mov
ret
ja
imul
xor
pop
xchg
or
fwait
lock
roll
push
subl
and
inc
lret
mov
movsl
nop
lods
xor
inc
mov
push
addr16
scas
or
test
jle
mov
cltd
mov
mov
lods
xchg
lods
pop
pop
inc
int
sahf
out
ja
mov
shr
push
je
mov
dec
and
pop
icebp
inc
cltd
cmp
mov
pop
outsl
or
or
mov
shl
inc
dec
rcrl
aam
ljmp
xchg
cs
pushf
and
in
daa
mov
lret
fcomps
popf
loop
addr16
cmp
ret
cmc
push
push
mov
and
pushf
clc
les
adc
loop
mov
inc
and
int
popa
mov
aaa
fsubs
pop
arpl
add
xchg
sbbb
ljmp
out
lock
ret
pop
sub
add
lods
xchg
lcall
scas
mov
xor
ss
jne
adc
xlat
in
std
cltd
lcall
mov
addr16
pop
ret
out
mov
pop
mov
dec
adc
pop
imul
mov
or
sahf
clc
pusha
sub
psubq
stos
sbbb
push
call
aam
xor
mov
inc
insb
mov
inc
mov
sub
and
push
mov
pop
and
xchg
out
in
inc
and
pop
out
mov
ror
movsl
push
jmp
adc
jo
sti
cmp
insb
xchg
and
cld
mov
mov
inc
push
popa
iret
int
cmp
xchg
lcall
and
test
xchg
lahf
into
dec
jb
sbb
jmp
out
ficomps
aam
mov
pop
pop
push
mov
scas
notl
pushf
sbb
mov
jns
fsubl
loope
outsl
fildll
xchg
jno
out
xchg
push
push
clc
in
inc
fwait
shlb
adc
pop
xchg
rcrb
add
sub
push
outsb
mov
dec
xchg
inc
test
mov
jmp
ss
int
jb
out
push
fnsave
push
pusha
out
jmp
add
pop
jecxz
shll
jp
sbb
xchg
shll
xor
push
rcr
movsl
cmp
int3
ljmp
jb
mov
jo
sub
lahf
adcl
dec
or
movsb
xlat
adcl
jo
mov
int
sbb
lret
mov
imul
mov
mov
pop
inc
push
pop
pop
dec
sbb
adc
std
mov
stos
lcall
fmulp
movsb
lret
fstl
jo
lret
rolb
add
cmp
jecxz
dec
push
ret
push
inc
xchg
jo
in
sahf
inc
pop
fs
outsb
pop
orl
jge
subl
add
cmp
rcl
out
mov
and
xor
mov
xchg
enter
ret
jno
mov
jne
inc
popa
adc
mov
outsb
sbb
xor
repnz
or
lcall
jns
jns
pop
ja
in
mov
pop
lea
xchg
adc
js
mov
inc
ds
cmp
imul
lods
pop
in
mov
pop
mov
sbb
cli
adc
push
out
pushf
arpl
bound
jno
sub
rol
inc
cld
or
mov
ljmp
fdiv
cltd
insl
stos
aam
subl
clc
adc
rorb
mov
cli
pushf
adc
das
sbb
cmp
xchg
or
loope
in
cmc
xchg
fwait
inc
leave
xor
mov
mov
cmp
loope
xor
daa
sbb
adc
scas
pop
pop
xor
dec
insl
lret
pop
pusha
xchg
mov
or
pop
push
add
in
test
cld
popf
cmp
sbb
clc
js
lods
xor
cmc
mov
xor
out
lds
mov
add
shr
sub
popa
mov
fbstp
mov
mov
movb
lds
adc
loopne
jge
lods
fistpll
jbe
push
add
cwtl
mov
jge
in
dec
mov
mov
test
cmp
jmp
popa
push
pop
aad
dec
test
setno
dec
and
jae
xor
bound
mov
push
fwait
jne
out
rcrb
mov
aam
mov
mov
sti
imul
push
cwtl
cld
js
jmp
in
push
push
loop
rcrl
js
push
lea
cmp
mov
push
movsl
ja
jne
mov
xor
dec
fdivr
xchg
or
dec
xlat
or
clc
call
adc
lods
inc
mov
sub
inc
xlat
mov
aas
bound
jge
cmp
icebp
cmp
lcall
fsub
int
insb
or
pop
and
xchg
movb
adc
into
push
nop
sbb
imulb
shlb
or
jb
pop
shlb
mov
cmp
mov
dec
dec
jp
js
xor
sahf
pushl
out
dec
add
cmp
jmp
push
mov
loopne
lahf
mov
lea
or
jecxz
ss
hlt
pusha
adc
push
push
mov
addr16
adc
ja
and
out
jno
mov
adc
mov
hlt
rclb
dec
push
mov
enter
stos
cmpsb
pop
mov
imul
pop
clc
push
ja
and
add
test
out
movsb
lock
addl
lcall
cmp
lods
pop
lahf
test
int
adc
jecxz
out
sub
outsl
faddl
addr16
adc
pusha
lret
mov
cmp
shrl
push
adc
jns
xor
pop
xor
fdivs
pop
dec
loope
fs
dec
or
cmp
in
insb
pushf
hlt
xor
lret
scas
push
ret
das
mov
stos
add
mov
mov
jle
ds
loope
repnz
in
gs
loope
imul
je
jecxz
popa
jmp
pop
insl
cmpsl
cmp
call
or
pop
jle
fnstcw
xchg
add
mov
cmpsb
outsb
ds
xchg
rclb
mov
pop
insl
lea
sbb
pop
pop
dec
cmp
insl
in
fiaddl
cmpl
repnz
jns
push
lea
aad
jno
xchg
sbb
push
xchg
lock
nop
jmp
mov
mov
xor
dec
jg
or
cwtl
push
ds
xlat
addr16
sbb
movsl
dec
cmp
lahf
in
jnp
enter
pop
adc
mov
stc
loop
insb
push
add
add
adc
stos
dec
dec
add
jmp
jnp
jbe
mov
add
dec
inc
dec
mov
xor
pop
push
or
aaa
mov
in
lahf
lea
mov
je
adc
mov
adc
in
ret
xlat
mov
adc
idivl
cltd
data16
fdiv
cmc
aaa
adc
or
std
ljmp
lret
das
and
jmp
imulb
stc
and
push
fldl
repz
mov
mov
push
sbb
mov
sub
jl
or
lea
outsb
adc
jne
daa
mov
sbb
aad
pop
aas
ficoms
les
pop
mov
jg
add
mov
xor
repnz
jle
push
mov
arpl
mov
fiadds
pop
lods
stos
cmp
cmpsb
cmc
adc
mov
or
mov
lods
test
cmp
cmpsl
or
mov
sub
pushf
mov
test
push
xor
adcl
sub
push
mov
jmp
dec
sub
icebp
call
je
pop
mov
xor
out
in
nop
sti
or
ss
and
js
dec
mov
pop
mov
out
cmp
pop
mov
push
cmp
popa
inc
leave
or
push
mov
leave
enter
popl
cmp
add
or
inc
fstp
cmp
adc
fsts
clc
addr16
lahf
mov
lahf
pop
cmp
push
or
mov
xchg
out
jmp
and
test
mov
movsl
fildl
xchg
adc
push
sub
aam
xchg
add
or
call
and
push
cmp
jle
and
push
cld
movsl
pop
pop
jb
sbb
pop
mov
scas
shll
lds
movsl
outsl
test
inc
sbb
sbb
fadd
jbe
lahf
adc
adc
idivb
cmp
add
inc
lea
push
pop
pop
xor
inc
aas
push
push
cld
cmp
mov
inc
jmp
inc
neg
scas
lret
or
adc
lods
jmp
dec
in
push
cmpsl
push
mov
jo
jns
add
mov
insl
inc
ret
mov
xor
data16
insl
stc
xor
enter
outsb
ret
les
cli
bound
icebp
cmpsl
iret
cli
fnstsw
out
push
loop
test
mov
sbb
jle
addb
pop
popa
rcrb
or
mov
push
inc
add
pop
mov
sub
inc
test
dec
mov
imul
add
sub
xchg
push
dec
int
cmp
xor
mov
add
pop
mov
jp
iret
cmc
shrl
mov
scas
shrl
arpl
psadbw
inc
fwait
pushf
pop
imul
outsb
xchg
pop
add
pop
mov
push
push
inc
inc
pop
icebp
testb
call
add
add
mov
and
rol
dec
and
mov
test
addr16
mov
xor
mov
aad
imulb
jbe
mov
xor
dec
loop
mov
jo
inc
jno
inc
jmp
ja
mov
mov
insb
stos
mov
inc
cltd
test
jl
in
sahf
cmp
mov
and
mov
mov
imul
out
pushf
lahf
mov
mov
mov
jl
push
mov
in
test
fsubs
lahf
and
xchg
scas
int
pop
leave
mov
in
aad
cmpsl
add
sbbl
xor
cmp
or
inc
out
gs
mov
mov
jmp
mov
fcoms
inc
sub
adc
mov
add
in
aas
cmpsl
fsubrl
jp
pusha
mov
mov
repnz
mov
inc
daa
push
dec
xor
and
aaa
jge
pop
aam
ret
pop
mov
cmp
xor
cmp
pop
in
pop
out
out
sub
adc
push
inc
movsl
add
divl
xchg
test
fnstenv
add
imul
or
mov
xor
nop
and
adc
add
push
sti
jnp
stos
dec
add
movsl
pop
pop
ss
jge
pop
push
mov
add
mov
mov
and
xchg
lods
jp
xchg
inc
fwait
jg
jns
fs
out
iret
loope
mov
std
cld
push
fldz
xchg
cmpsl
mov
mulb
jmp
ss
lcall
mov
dec
push
cmp
xchg
push
pop
dec
push
mov
shrl
int
adc
adc
cmc
pop
adc
bound
aas
inc
jmp
jmp
pop
ja
add
data16
mov
stos
out
lds
fstpt
imul
or
insb
ljmp
std
push
jns
mov
into
out
sub
sti
pop
sbb
addl
fsubl
dec
mov
inc
push
xchg
lock
les
rorb
rolb
jae
pushf
dec
adc
mov
in
gs
fwait
adc
jecxz
int
and
fs
inc
test
xchg
call
out
and
sahf
fldcw
les
mov
jle
int3
fisubl
outsb
jae
and
jbe
mov
scas
inc
xor
jge
cld
outsb
mov
fiaddl
jo
mov
sbb
cmp
sbb
sub
das
or
dec
popa
sub
inc
xchg
jnp
add
int
lods
int3
or
jl
scas
jae
jp
or
cmp
xchg
mov
cltd
xlat
js
rcll
mov
adc
cmp
dec
repz
gs
and
out
in
imul
sbb
dec
or
add
stos
or
push
dec
aad
adc
or
dec
ljmp
aam
cwtd
push
and
call
jecxz
push
and
jo
js
std
jge
sbb
aam
or
cmp
lahf
lods
adc
dec
daa
mov
and
mov
and
cmp
xchg
outsl
hlt
call
xor
mov
sahf
sub
sub
inc
add
pop
xchg
pop
inc
xchg
adc
dec
std
sub
mov
shlb
pop
cltd
adc
sub
sbb
adc
popl
int3
fcompl
dec
or
pop
sbbb
cli
cwtl
repnz
cwtl
mov
adc
shll
add
idiv
and
fnstsw
cs
xchg
pop
fs
xor
dec
out
dec
xchg
xor
sahf
in
cmp
jne
add
jns
jmp
fnstcw
pop
lahf
popa
call
clc
mov
in
test
inc
pop
xchg
int
test
jnp
cmp
addl
xchg
dec
movsb
subl
incb
rol
outsb
lds
push
imul
enter
adc
out
movsl
adc
jp
jns
jle
popf
sti
mov
repnz
addr16
fldenv
hlt
xchg
add
xor
js
dec
xlat
cmp
or
inc
js
fisubrs
je
jae
lcall
lret
enter
cmpsb
shll
jg
in
movsb
mov
jae
pop
sub
dec
mov
mov
sub
push
leave
adc
movsb
int3
cmp
and
sbb
dec
and
out
bound
inc
stos
jae
mov
cwtl
xadd
or
in
inc
mov
mov
inc
arpl
shll
roll
les
in
cmp
fcompl
stos
subl
std
pop
xor
inc
outsl
lcall
cmpsl
arpl
pushl
rclb
rcrl
rorl
xor
je
mov
mov
test
addb
shll
pop
xchg
lcall
mov
add
mov
divl
jmp
inc
jnp
inc
mov
inc
cmp
hlt
sahf
sbb
sub
or
testb
push
add
cltd
pop
sub
movsb
adc
paddd
ret
inc
mov
dec
js
inc
aam
ja
push
xor
insl
jmp
out
movaps
imul
arpl
stos
add
fistps
les
or
adc
fwait
mov
pop
xor
lods
dec
mov
lahf
xor
imul
pop
mov
jo
scas
cmpsb
mov
out
outsl
push
xchg
loopne,pn
jo
pop
jae
andb
movsb
or
std
cmp
or
and
hlt
mov
cli
leave
outsb
sbb
stos
sbbb
ljmp
inc
lcall
mov
cmc
ss
cmp
jns
dec
je
xchg
pop
inc
pop
in
add
or
pop
push
ret
inc
fdivs
mov
int3
test
adc
mov
xor
push
dec
xor
addr16
mov
pop
nop
xchg
cwtl
dec
in
hlt
nop
xor
xor
in
rcrb
push
jmp
aaa
inc
inc
data16
lods
icebp
xchg
ficomps
add
jne
jmp
jb
push
xor
into
lock
in
int3
leave
pop
orb
dec
mov
lret
out
nop
push
mov
out
rolb
or
repz
data16
cmp
sub
adc
add
cwtl
xor
jg
jbe
adc
les
pusha
or
xlat
daa
nop
in
aad
out
jg
xchg
incl
push
sub
adc
adc
mov
out
cmpsb
inc
fsubs
sub
ret
rolb
in
jmp
dec
sti
pushf
cmpb
or
je
ja
into
stc
outsl
push
mov
xorl
lret
int
cli
xor
out
stos
push
fdivl
cltd
repnz
xchg
stos
push
ret
push
fildl
fidivrl
js
in
and
leave
js
push
fcmovnbe
loop
sub
ss
fdivrs
test
xor
enter
test
cmp
outsb
mov
dec
push
and
lods
pusha
cld
iret
push
xchg
rclb
jmp
out
nop
sub
imul
lcall
outsl
iret
into
mov
in
mov
stos
inc
inc
cmp
cwtl
sub
stos
aad
stc
fwait
icebp
push
ljmp
cmp
ja
push
sub
das
dec
push
dec
mov
mov
pop
mov
dec
or
add
stc
fdivs
and
push
mov
jne
dec
or
and
gs
in
adc
mov
sub
lods
orb
fists
into
repz
dec
add
popa
test
pop
cmp
bound
xlat
dec
mov
out
addr16
shll
repnz
stos
adc
stos
test
add
fidivs
jo
fisubrs
sbb
jae
jp
jns
cmp
test
and
dec
insb
sbb
lock
xchg
push
xchg
das
sbb
pop
negb
cmp
or
add
sbb
in
inc
cs
insb
in
xchg
shll
mov
ljmp
rcll
icebp
or
and
xor
dec
fwait
jmp
pop
jnp
push
pslld
xchg
cmpsl
popa
icebp
cmpsb
insl
mov
sbb
push
push
and
mov
insl
sbb
inc
das
test
xchg
xor
xorl
sbb
loop
divl
fidivrs
pusha
imul
popf
fs
roll
dec
ja
inc
bound
in
mov
or
jnp
fsts
mov
das
push
hlt
ds
pop
pop
and
test
dec
popf
lret
test
jne
out
or
repz
cmp
add
fnsave
stos
mov
aam
popa
xor
push
push
jne
adc
push
and
jmp
lcall
cmp
cmpb
std
cld
adc
mov
scas
iret
divb
in
pop
sub
add
push
pop
shl
aaa
sbb
dec
jae
les
mov
xchg
push
in
or
mov
push
cli
imul
negb
add
adc
adc
in
add
ror
add
mov
jge
negl
push
insb
sub
add
mov
xchg
inc
mov
loop
popa
fsubl
xchg
adcl
fcoml
and
cmp
mov
movsl
lods
dec
insb
mov
xchg
cs
dec
jle
push
stc
in
add
inc
xchg
sub
or
mov
sti
arpl
sbb
shr
xchg
fs
shll
push
and
nop
xchg
xor
jle
and
shl
pop
mov
out
fimuls
mov
aad
dec
call
mov
icebp
int3
pusha
jb
xor
push
or
inc
cmp
ret
lcall
or
adc
cltd
cmpsb
push
jb
cmpsb
sbbl
xor
and
daa
in
mov
inc
jmp
out
jo
movsl
pop
adc
imul
push
out
pop
aad
push
mov
mov
mov
and
push
enter
push
jl
stc
fwait
mov
rclb
test
jge
sub
out
push
jle
das
fbstp
mov
aas
repnz
adc
ja
inc
push
xchg
hlt
adc
add
imul
mov
mov
sub
mov
rorb
dec
aad
incb
cmp
das
add
cltd
or
adc
push
and
inc
cmc
adc
arpl
clc
cmp
sahf
xchg
or
and
jno
sbb
inc
popf
mov
mov
addr16
out
pushf
dec
shlb
add
test
xchg
xor
push
cwtl
jns
inc
push
pop
pop
fnstsw
and
sub
fiaddl
sbb
cmp
fwait
ljmp
adc
testb
rorb
aaa
mov
mov
pop
and
and
pop
dec
jbe
sbb
push
adc
xchg
js
adc
jne
push
cmp
nop
test
push
mov
jnp
out
xchg
loope
add
mov
xchg
and
or
sbb
je
movsb
iret
popf
shll
mov
shlb
push
negb
leave
push
push
pop
jmp
jge
push
xchg
in
adc
imul
or
mov
test
lret
xchg
orl
push
movsl
adc
movsb
dec
sbb
sub
fdivrs
mov
stc
dec
add
shll
in
lock
ss
cmc
mov
xchg
mov
mov
aad
mov
shll
adc
mov
stos
gs
unpcklps
xchg
push
int
daa
test
inc
dec
cmc
mov
aam
idivb
fldcw
jae
shlb
ss
je
push
repz
jle
addl
in
push
fbstp
xor
jp
and
mov
mov
push
cmp
arpl
pop
ja
cltd
inc
loop
enter
mov
adc
iret
jbe
in
rep
lret
fsubrp
dec
push
bound
loope
jecxz
popf
int3
cld
fwait
xlat
pusha
jbe
das
mov
stos
rcrb
fscale
add
add
leave
or
sbb
push
sub
mov
imul
mov
aad
mov
push
mov
icebp
sub
popa
repnz
lahf
stos
mov
loopne
in
pop
insb
mov
hlt
dec
pop
push
sbbl
mov
sti
xor
inc
sarb
push
lock
rorb
leave
pop
or
push
iret
insl
xor
jp
fsubrs
int3
lahf
mov
inc
int3
in
test
mov
gs
mov
in
cltd
insb
pop
popa
mov
lahf
jl
jae
leave
mov
inc
js
and
stos
xlat
rclb
push
shl
push
fbld
push
jnp
add
daa
jmp
adc
jae
add
adc
cmp
pop
loopne
ret
daa
adc
out
lock
jl
pop
int3
xchg
adc
mov
mov
mov
cli
shlb
mov
jnp
pop
and
sbb
es
mov
adc
xchg
icebp
rcl
jg
sub
sub
test
xchg
out
icebp
cltd
jecxz
mov
cld
push
or
push
stos
out
dec
lock
addr16
sahf
sub
dec
cld
in
mov
dec
ja
testw
iret
mov
mov
ljmp
dec
xchg
add
aas
dec
orb
mov
flds
lret
int3
popa
fdivrl
sbb
pop
sti
lahf
cltd
jnp
insl
clc
sbb
push
pop
clc
add
scas
cwtl
push
aaa
xor
cld
xchg
cli
loopne
mov
outsb
push
sbb
flds
call
notl
sub
lret
xchg
inc
sub
mov
lods
mov
pop
push
inc
push
pop
sbb
jp
dec
xchg
aad
xchg
cmpsl
mov
jmp
aas
ja
push
mov
cwtl
lahf
mov
lahf
jmp
int
call
movsl
or
and
or
fimuls
and
outsb
jp
cmpb
movsl
mov
in
add
xlat
or
mov
repnz
jno
jmp
dec
mov
push
out
aad
dec
mov
addr16
sbb
hlt
test
cmpsl
or
inc
fmuls
loopne
divl
jb
inc
mov
ja
pusha
cmpsb
pop
test
adc
mov
in
sbb
lret
pop
outsb
rol
ret
sub
lds
mov
mov
lret
adc
imul
inc
mov
rorb
cltd
testb
gs
sub
and
arpl
repz
push
jns
data16
jg
pop
push
and
dec
sub
lods
scas
xor
dec
lds
pop
jmp
lock
lods
pop
repnz
or
and
and
mov
inc
mov
negl
das
fcmovne
int3
cmp
xchg
xor
shll
pop
mov
sti
inc
incl
std
add
lcall
fsubrs
iret
addb
aas
pusha
mov
push
addb
gs
sbb
test
mov
xchg
xlat
xor
movsb
sti
mov
aaa
outsb
pop
fwait
sbb
dec
ficomps
xchg
xchg
push
mov
sub
add
push
cltd
push
imul
pop
mov
mov
inc
jne
sub
in
test
lock
xchg
lock
aaa
aas
mov
in
cld
xor
fcmovu
xor
adc
popa
insl
int
cmp
fildll
xorb
cmp
les
std
arpl
int
repz
test
pop
rdmsr
add
jl
jb
dec
push
loop
xchg
pop
and
xchg
or
dec
mov
cli
insb
pop
aam
dec
dec
add
jbe
cmpsb
mov
push
add
idiv
jmp
sti
movsb
or
cwtl
xchg
xchg
rcrb
mov
xchg
add
pop
repnz
ja
mov
rorl
mov
sbb
loop
xor
inc
inc
sahf
sbb
push
adcb
cltd
pushf
lock
xchg
push
mov
sub
aaa
call
or
push
mov
push
xor
pop
fnstsw
pop
inc
aas
mov
xor
jmp
and
sub
mov
inc
push
dec
scas
adc
sahf
test
or
aas
pusha
jl
pop
mov
push
fnstcw
cmp
inc
pop
outsb
add
iret
and
scas
pop
dec
ds
inc
daa
jno
int
negb
fiaddl
and
mov
add
mov
loop
xchg
stc
dec
negl
cli
roll
outsl
jne
mov
add
push
sbb
loopne
movsl
cmp
pop
and
hlt
adc
mov
cmc
repnz
and
cltd
add
sbb
std
sbb
scas
insb
call
or
shll
xor
or
sub
sti
push
mov
inc
dec
jae
mov
mov
mov
jne
and
or
ret
insb
movsb
rorb
mov
mov
mov
or
xor
pop
push
mov
fdivl
loop
xchg
and
or
insl
cmp
test
sbb
inc
sub
int3
test
arpl
xchg
movsb
mov
inc
sbb
insl
inc
lods
cmpsl
push
dec
ja
mov
mov
cmp
pop
xor
jae
xchg
je,pn
lods
mov
xchg
pop
mov
xor
stc
scas
dec
mov
push
lea
mov
pusha
dec
add
pop
xchg
lock
add
xor
inc
dec
inc
mov
js
pop
mov
lods
sbb
ja
arpl
loop
lds
ljmp
dec
movsl
movsl
pop
or
out
sub
add
or
mov
cmp
and
cmp
test
xor
pop
adc
push
or
data16
add
mov
sbb
mov
js
stc
repz
and
dec
mov
pop
push
pop
decb
cmp
in
inc
pop
fldenv
push
push
cltd
adc
cmpsb
je
popa
stc
stos
or
das
lret
cltd
ss
shlb
std
call
jmp
stos
sub
or
flds
pop
loopne
inc
cmpb
dec
add
cmp
mov
addr16
and
ficoml
jge
jl
mov
stos
jae
jb
es
xchg
aas
sahf
xchg
mov
inc
repz
push
cwtl
pushf
inc
mov
call
sub
xlat
fwait
mov
inc
jo
repnz
mov
and
lock
fdivrs
inc
ret
icebp
inc
mov
push
lods
ljmp
cmp
nop
push
and
fsubrl
out
mov
mov
loope
and
cmp
mov
push
jno
jl
out
cmp
mov
or
mov
ds
or
dec
outsl
fsubrs
popf
out
or
jge
cmpsb
inc
add
daa
neg
js
mov
pop
insl
and
push
in
mov
xchg
es
movsb
icebp
aad
lret
popa
addr16
loopne
mov
mov
clc
lock
push
dec
cltd
sar
imul
imul
repnz
and
inc
push
repz
inc
pop
inc
sbb
in
pop
mov
sbb
and
js
leave
sub
sbbb
in
dec
in
push
imul
das
and
dec
call
mov
pop
fs
push
push
aad
push
cmp
cmpsb
fsubs
push
data16
inc
xor
mov
push
mov
sbb
loope
movsb
xor
adc
into
arpl
sbb
repnz
xchg
dec
cmp
mov
mov
dec
push
js
out
inc
xor
aad
mov
jp
mov
scas
mov
xchg
popa
jo
jae
sub
les
pop
push
movsb
orl
mov
hlt
adc
xor
adc
addb
sub
adc
lods
outsl
sub
pop
gs
cmp
lock
fcmovnbe
sub
dec
lcall
mov
lahf
pop
jno
insl
mov
push
stos
inc
mov
push
push
es
es
outsb
cli
rcr
cmp
call
push
popf
inc
popf
lcall
mov
fisttpl
mov
into
std
std
sub
xchg
pop
mov
jp
push
stc
jl
andl
mov
jmp
out
sarl
negb
aas
mov
aam
test
xor
fwait
mov
xchg
imulb
dec
fisubrl
mov
adc
xchg
xor
jmp
insb
adcb
movsl
sub
cld
pusha
popl
mov
xchg
xchg
push
mov
fdiv
or
repnz
and
lret
add
inc
xchg
xchg
insb
fdivs
mov
fcmovb
jo
outsl
and
xchg
cmp
push
test
iret
cli
mov
xchg
int3
pop
xor
leave
jns
jnp
inc
jp
mov
adc
mov
jns
clc
es
call
fmul
mov
aad
sbb
fcmovbe
xor
mov
mov
dec
and
xor
push
or
lahf
iret
adc
outsl
adc
movsb
and
mov
gs
mov
jl
push
inc
xchg
dec
pop
adc
push
xchg
ss
daa
xor
mov
daa
jne
dec
orl
shll
mov
push
cmp
sub
sbb
movsb
inc
inc
mov
adc
inc
or
std
inc
adc
add
or
movsl
push
int
xchg
pop
mov
jmp
or
pop
mov
xchg
test
cmp
dec
scas
sbb
mov
dec
dec
mov
fmull
stc
pop
loop
xor
sub
stos
dec
sub
scas
in
in
mov
inc
sbb
mov
in
sahf
imul
repnz
arpl
push
insl
clc
xlat
or
xchg
xchg
movsl
push
repz
mov
inc
or
sti
pop
test
sahf
enter
ss
or
sbb
sub
testl
add
xor
rorl
andb
mov
clc
and
adc
or
xchg
clc
in
mov
add
inc
ds
mov
dec
lret
push
pop
lret
test
or
jne
mov
outsb
xchg
or
pusha
stos
sarl
dec
popf
mov
pushf
xchg
sarl
push
cwtl
cli
xchg
subl
sub
jl
imul
sbb
mov
push
stos
adc
es
xchg
int
mov
ja
pop
or
out
cmp
jg
jb
add
jb
jle
pusha
xchg
bound
cltd
test
fistpl
jg
sub
jae
fimuls
in
aam
mov
test
push
pop
xchg
clc
sahf
out
stc
lods
decb
imul
ljmp
cmpsb
mov
insb
or
mov
js
xlat
cwtl
cmp
push
cmpb
cltd
and
lahf
clc
decb
mov
push
lret
sti
jp
aam
das
mov
push
rorl
mov
cmp
insl
lret
aad
jle
and
inc
adc
sbb
int
out
and
mov
mov
sbb
test
jecxz
push
or
gs
xchg
push
jae
mov
scas
pop
imul
gs
sbb
lods
shlb
repnz
push
jo
fnsave
into
montmul
cmpsb
ret
jge
push
loop
shll
mov
xchg
divl
dec
push
or
test
cltd
lahf
xor
paddsb
lods
push
daa
mov
jecxz
mov
sahf
sub
aas
dec
and
movsbl
pop
xor
into
arpl
fsubs
mov
jmp
sbbb
test
daa
call
lret
jnp
adc
mov
lahf
inc
aas
inc
inc
fmull
mov
jecxz
xchg
sbb
sarl
das
roll
xor
lret
add
cwtl
add
jbe
imulb
loopne
outsl
repnz
ja
mov
in
add
sub
add
mov
clc
rcl
out
cmpsb
daa
in
fistpll
xchg
call
lods
iret
sbb
mov
xchg
or
bound
rolb
sbb
inc
push
sub
push
xchg
int
cmpb
enter
cli
loop
movsb
fucomi
lods
popf
push
mov
jnp
xchg
decb
adc
mov
dec
dec
or
nop/reserved
jae
insb
dec
sar
test
jg
or
stos
xor
inc
gs
test
lret
or
lds
divl
jge
imul
pop
test
xlat
cmp
mov
lcall
popa
push
ret
cmp
out
fs
jl
adc
flds
sahf
repz
subl
pop
cltd
mov
call
nop
cmp
in
and
push
call
je
lock
or
repz
femms
ss
rcr
divl
testb
or
dec
and
push
es
xchg
out
loope
bound
mov
pop
and
lods
dec
int3
enter
out
dec
jecxz
out
stos
push
and
fwait
mov
arpl
rclb
mov
ret
sub
stc
add
cmpl
sub
loopne
add
push
jmp
sbb
inc
in
xor
test
int
cmc
pop
sbb
mov
lods
and
sbb
clc
cmp
sbb
repz
push
dec
mov
jae
fisubrs
push
and
mov
jecxz
sbb
jge
cmpsb
push
js
or
jo
push
fsubr
push
push
jmp
ja
add
xor
sub
outsl
push
sub
sub
test
leave
cmpsb
insl
sarl
rorl
mov
clc
jns
daa
mov
fiadds
jg
jo
sbb
jl
add
xlat
mov
outsl
jmp
or
int
push
lret
dec
iret
mov
or
out
shr
insb
shll
loope
xchg
loopne
test
mov
push
rcrb
xchg
in
or
stos
gs
fisubrl
repnz
xchg
pop
sti
hlt
add
mov
shl
pusha
stos
fsts
mov
add
inc
test
add
add
push
adc
cmp
ret
cmp
stos
in
mov
xchg
test
adc
es
je
xchg
fs
insl
je
cwtl
mov
call
test
xor
pop
stos
inc
jmp
in
gs
jbe
adc
mov
test
aad
ficompl
mov
xor
lods
ret
rol
cs
in
jo
xor
adc
sbb
popa
sub
mov
pop
stos
xchg
loope
mov
outsl
roll
mov
fwait
hlt
mov
sub
outsb
push
icebp
xchg
pop
or
aam
cmp
jp
mov
nop
inc
mov
lea
test
je
cld
sbb
fdivrs
ss
nop
mov
add
test
imul
dec
repz
aaa
in
stmxcsr
loope
jb
fldt
mov
mov
or
dec
or
roll
xlat
sbb
mov
stos
mov
and
stc
cmc
jmp
sti
test
push
jb
int3
sti
decl
inc
push
fwait
mov
inc
lcall
adc
test
xchg
add
clc
xor
ret
mov
mov
push
std
xor
or
push
sub
mov
add
dec
je
int3
and
pop
jle
push
insl
pop
jp
sbb
add
push
adc
lods
pop
pusha
mov
push
cmp
and
pop
imul
xlat
xchg
xchg
lea
and
lods
in
pushf
push
clc
out
pop
add
push
loopne
outsb
ret
push
stos
and
iret
add
imul
pop
push
cmp
sbb
jno
mov
cmp
xlat
mov
imul
testb
loop
adc
cmp
pop
in
dec
test
dec
cmp
movsl
and
push
mov
mov
pop
inc
lds
or
outsb
arpl
lods
xor
push
adcb
leave
push
test
aas
lods
pop
sub
test
sub
pop
pop
ja
leave
mov
xor
push
inc
leave
pop
lds
mov
std
in
pop
push
ret
out
dec
js
xchg
push
int
jle
scas
sbb
add
gs
stos
insl
push
ror
insb
popa
sbb
dec
fidivl
sub
fmulp
sbb
sub
jle
add
dec
aas
int
mov
sbbl
cmp
push
push
xchg
mov
test
aad
or
divps
mov
aaa
mov
and
lret
iret
shlb
mov
scas
ficomps
or
fwait
pop
push
adc
fwait
jge
ret
or
sahf
and
rcrl
mov
lahf
andb
enter
jnp
cmp
xor
dec
push
inc
dec
pop
and
jg
les
push
jns
mov
ret
mov
xor
jae
pop
push
stc
xor
outsl
push
in
mov
dec
cmp
jle
lods
push
xor
test
jbe
pop
mov
test
cs
sti
mov
push
sub
jmp
adc
ror
in
sub
lock
stos
aam
mov
fs
sarl
iret
test
xchg
pop
fdivs
cmp
sub
movsl
adcb
fmull
xor
mov
outsl
les
fiadds
xchg
inc
mov
xchg
xor
cmc
sub
sub
cli
sahf
inc
or
jmp
or
mov
adc
sbb
fmuls
sbb
sbb
int3
jmp
pop
or
mov
mov
rorb
inc
add
stc
inc
pop
inc
roll
enter
cli
mov
ja
fildl
sub
sub
jle
jg
sub
push
scas
cmp
lea
push
fdivl
cmp
cmpsb
and
push
sub
xorl
push
cmc
sbb
xor
scas
cmp
and
push
pushf
push
shll
sub
into
mov
push
in
lret
fisubs
push
xchg
test
mov
sbb
imul
jbe
sub
xchg
test
sbb
leave
pop
loope
ds
xchg
cmpsl
data16
xor
push
insb
call
lcall
repz
icebp
loopne
mov
xor
in
mov
mov
sbb
and
jg
stos
sbb
and
scas
testl
add
es
xor
sbb
and
jecxz
shrb
push
mov
sti
jp
jbe
out
movsl
pop
call
sub
movsl
in
sub
mov
in
xchg
dec
test
mov
fdivl
sub
jmp
or
gs
add
xor
jmp
fadds
xchg
in
and
adc
setb
inc
xor
cld
popf
sbb
in
xchg
push
sbb
fs
mov
xchg
loopne
add
sbb
adc
or
mov
jmp
shll
aad
dec
test
inc
test
dec
aad
cli
cmp
test
sub
inc
neg
lds
movsl
fsts
gs
push
mov
mov
dec
nop
mov
cmp
leave
ret
sbb
pop
push
cmpsl
clc
or
outsl
or
inc
enter
sub
dec
dec
pop
jle
icebp
insl
fistpll
cli
call
ret
push
dec
sarb
xchg
repz
stos
lcall
adc
jle
inc
or
mov
and
and
outsl
sbb
aad
cmp
icebp
ja
pusha
push
push
ljmp
jle
cld
pop
pop
fnsave
jg
sbb
sub
dec
movsb
test
mov
jae
hlt
pop
inc
inc
and
mov
jle
inc
mov
fwait
rcrb
popa
insl
or
vpmaxub
filds
push
cmpb
sub
mov
jae
jo
xchg
ds
arpl
and
dec
add
enter
aas
cmp
movsb
xchg
mov
out
mov
lcall
or
daa
push
inc
mov
test
sarb
pusha
sbb
dec
cs
pop
add
dec
pop
sub
push
and
call
ds
and
push
adc
lret
mov
jo
fs
insb
sbb
inc
mov
sub
pop
push
mov
push
jnp
mov
ffree
xchg
cmpb
sub
pop
mov
insb
dec
std
adc
sub
lock
fisubrs
sbb
adc
add
repz
addr16
clc
inc
sahf
or
push
cld
fcomps
pop
aaa
mov
add
adc
xlat
into
or
sub
dec
ljmp
aam
mov
fcmovu
and
insl
add
pop
xchg
xor
data16
in
dec
jns
sub
xchg
and
out
add
inc
and
adc
or
jge
mov
mov
dec
push
jecxz
inc
movsl
push
jl
pop
lods
xor
orl
add
js
mov
mov
int
dec
and
cmp
fstl
cmp
push
mov
add
aam
xchg
movsb
jae
dec
sub
cmp
and
lock
adc
push
arpl
xchg
push
jmp
xor
sbb
lods
cld
rclb
pop
mov
sarl
inc
fcomps
aaa
or
cld
ret
adc
cmp
pop
repnz
pop
int3
aad
es
hlt
in
mov
fnstcw
mov
xor
xchg
xor
cmp
xlat
in
outsb
sbb
scas
mov
jmp
arpl
and
push
mov
adc
jnp
jle
inc
dec
jl
in
inc
sub
bound
roll
mov
mov
cmp
jl
sub
inc
out
fwait
nop
sbb
shll
jns
shrb
gs
sbb
jge
or
xor
lret
push
jo
lods
mov
mov
je
fadds
int
les
cmpsb
cmp
fimull
repnz
mov
xchg
lcall
or
notb
jb
and
nop
sti
and
into
pop
xchg
and
fiadds
in
arpl
mov
shlb
pushf
add
mov
clc
push
jbe
pop
jp
fcompl
out
clc
xor
mov
sub
repz
in
jecxz
add
aas
mov
cwtl
dec
cmp
pop
roll
inc
repz
arpl
sbb
pop
ret
add
leave
mov
das
pop
push
jne
or
sbb
out
fldt
loop
daa
loopne
lea
js
repz
pop
xchg
stos
sbb
inc
pop
adc
sbb
sbb
push
lret
scas
push
jp
daa
imul
add
xor
pusha
fs
add
in
daa
cmp
imul
repz
mov
out
gs
testl
adc
sbb
push
mov
xor
jle
scas
into
clc
jmp
add
xor
and
popf
inc
arpl
cld
push
enter
aas
mov
sbb
call
pop
adc
movsl
mov
sbb
mov
sbb
xor
in
out
jge
mov
adc
and
lods
add
orb
repz
mov
test
out
aam
aam
push
mov
dec
cwtl
inc
dec
in
jno
xchg
sbb
aam
enter
mov
cli
push
add
out
dec
notl
lahf
pop
jle
push
movsb
xchg
ret
mov
sbb
mov
adc
sub
fistpll
mov
fisttps
xorl
xlat
xchg
dec
ljmp
pop
pop
pusha
dec
ds
mov
hlt
arpl
jnp
fidivrl
cmpsl
xchg
cmpsb
popa
movsb
jnp
enter
push
aad
or
les
call
mov
mov
in
fidivrs
mov
sbb
fildl
add
and
lods
hlt
les
js
inc
add
pop
jnp
cmp
movsb
pop
rolb
adc
mov
fnsave
pop
cltd
out
loopne
lods
in
and
enter
sbb
push
jno
lret
outsb
cmp
aad
push
icebp
sub
and
push
repnz
sbb
mov
stos
jne
ret
aad
mov
dec
pop
outsl
lods
and
inc
sbb
sub
js
pop
cs
rdtsc
jg
idivl
sub
or
out
sub
cmp
or
cmc
not
xor
fmull
arpl
imul
push
cld
adc
push
rcrb
imul
mov
iret
pop
add
adc
popf
inc
xchg
into
shl
mulb
or
imul
xor
es
aaa
stos
repnz
xchg
mov
dec
pop
outsl
test
xchg
aad
outsb
inc
js
cltd
jne
cltd
int
popf
or
mov
mov
out
sti
push
jnp
lea
and
mov
rcll
pop
insb
xchg
xor
dec
addr16
pop
ffreep
sahf
dec
sub
outsb
test
adc
xchg
mov
cmp
sub
outsb
andb
pop
leave
jnp
outsb
pop
aam
and
fists
movsl
call
inc
jno
dec
iret
icebp
mov
cmpb
add
jl
cmp
mov
mov
stc
aad
dec
and
sub
fwait
hlt
fisttpll
mov
adc
jl
cwtl
jne
bound
lea
jle
sbb
rcrl
out
shrl
xor
dec
in
out
xlat
cmc
add
iret
cld
loopne
stc
clc
xor
jl
jl
xlat
nop
cltd
sbb
mov
les
out
dec
cltd
into
leave
xchg
dec
cmp
fiadds
std
pop
sbb
ss
repz
lahf
je
pop
pop
sub
inc
add
or
cli
pop
insl
ljmp
or
sub
add
xchg
pop
dec
dec
push
arpl
out
xor
cmpsb
push
pop
sar
mov
sub
adc
xchg
mov
fst
movsl
loop
es
adc
les
ret
out
adc
je
das
mov
je
ret
es
lock
add
pop
adc
push
lock
jmp
push
insl
push
push
scas
adc
xor
jno
xchg
or
out
cltd
cld
adc
sarl
sbb
pop
xchg
add
xor
push
add
jo
out
push
add
shl
push
add
cmpsb
pop
push
lods
and
cmpsl
sbb
mov
lret
jbe
push
sbb
je
push
hlt
add
sbb
jp
int
and
in
or
mov
andb
jnp
cmp
pop
mov
test
loop
in
icebp
add
gs
mov
adc
xchg
mov
lods
enter
add
push
mov
push
adc
in
mov
jnp
cmp
in
adc
sub
jecxz
fs
cmpsb
mov
inc
fisttpll
push
sbb
sbb
push
xor
lret
mov
cmpl
cmp
push
test
sbb
inc
cs
mov
repnz
or
add
mov
cli
xor
dec
inc
jb
mov
jecxz
add
lods
aas
loopne
sub
sub
mov
cmp
lods
push
sbb
push
stos
sub
or
bound
movsl
push
das
jp
sub
loop
fs
repnz
pop
jne
out
push
stos
dec
mov
adc
inc
adc
enter
loopne
cmp
pop
imul
jecxz
cmpsb
ret
inc
jbe
jg
dec
out
push
jle
sub
pop
cmc
in
in
cmc
add
push
je
inc
push
adc
lret
aad
cmp
enter
pop
lods
xchg
sbbb
out
imul
xchg
xchg
cmp
mov
push
or
aas
insb
aam
xor
les
or
push
cmp
lcall
adc
sub
xchg
mov
cs
xchg
jp
push
das
mov
and
std
loopne
out
negb
rcrl
xor
add
dec
push
jnp
aam
insl
fstpt
jp
lret
icebp
dec
lret
or
outsl
in
hlt
push
rolb
xchg
ss
xchg
dec
cmpsb
dec
sbb
sub
scas
mov
icebp
xor
clc
jp
dec
sub
clc
cld
data16
mov
int3
jo
aas
jb
push
fwait
mov
or
enterw
sti
adc
inc
rcll
aad
and
xchg
and
jne
gs
out
js
push
pop
int
lret
loop
xorl
xchg
les
fnstsw
cld
pop
push
ja
stos
xor
mov
adcb
sub
push
cmp
xor
mov
rcr
ss
in
rol
nop
pop
call
int3
not
xchg
loopne
jb
add
call
sbb
and
insb
pop
sbb
sub
je
and
sub
rorb
sbb
add
sub
pusha
jp
and
xchg
or
or
lock
out
test
xchg
xor
cmp
sbb
add
dec
hlt
cmp
loop
lahf
sbb
mov
es
sub
xchg
scas
pushf
lahf
push
fisttpl
mov
xchg
and
sbb
xchg
stos
jns
mov
jae
leave
sub
pop
les
or
sbb
cmpsb
and
ds
mov
mov
cltd
adc
mov
cmp
fsubrl
sti
fldenv
mov
popf
mov
sub
bound
sub
popa
xchg
mov
add
in
jbe
mov
ljmp
sub
pop
and
out
pop
cmp
cmp
mov
mov
sub
push
inc
mov
imulb
cmpsb
fwait
cmp
clc
mov
mov
pop
aaa
sar
sub
lods
inc
add
in
test
aas
xorb
lods
lock
and
ret
mov
xchg
movsb
js
insb
ror
std
pop
mov
pop
push
adc
addb
in
cmp
mov
ds
in
cmpl
cs
cmp
adc
sahf
das
daa
xorb
cltd
sbb
and
jbe
sub
scas
cld
inc
out
stc
movsb
not
cmp
push
dec
or
sbb
xchg
int3
dec
ss
and
mov
pop
push
out
adc
fcom
int
fcmove
push
out
scas
mov
sbb
xchg
repz
sub
push
mov
lea
inc
es
push
inc
movsl
mov
push
inc
inc
lods
sub
mov
xchg
lea
add
ds
pop
jl
and
xchg
loopne
mov
adc
sbb
push
rcr
call
fcomps
jl
bound
xor
les
ret
jmp
add
ja
ret
ret
aaa
cmp
dec
rcl
stc
movsb
icebp
pop
hlt
cld
dec
sub
pop
and
pop
sub
dec
mov
jle
inc
add
add
xchg
sbb
enter
mov
mov
and
mov
shrb
or
cli
xor
cmpsb
fisubs
mov
sti
jne
xor
xchg
mov
mov
jle
rcll
push
outsb
inc
leavew
rolb
xchg
xchg
pushf
stos
push
mov
fstl
cmp
scas
ljmp
xlat
push
hlt
popf
pop
loope
fists
mov
clc
push
mov
inc
pusha
jge
pop
cmp
out
gs
xchg
scas
push
pusha
mov
xchg
sub
sub
pushf
inc
add
test
mov
mov
sub
jns
call
pop
xchg
jge
add
jge
pop
and
sbb
inc
ret
lret
dec
cmp
add
dec
jns
gs
mov
repz
adc
in
bound
fists
stos
sub
rolb
cmp
push
repnz
inc
jl
mov
in
xor
mov
and
pop
cwtl
mov
sbb
push
ljmp
jge
hlt
into
mov
outsl
cmp
sub
inc
outsl
push
xor
push
mov
sub
push
dec
or
inc
fdivs
fdivr
cmp
test
adc
xor
mov
test
lret
call
add
hlt
insb
outsl
lock
jl
or
js
sbb
cmp
xor
test
lcall
leave
loopne
cmpsl
push
and
js
push
lds
mov
xchg
in
jge
sbb
push
cmp
insb
mov
pop
mov
scas
icebp
decl
pop
cmpsb
pusha
jno
stos
mov
push
mov
push
adc
ficoml
jns
jbe
fcompl
and
stc
je
sbb
and
or
or
xchg
mov
out
inc
aas
pop
jns
rcrl
lret
or
xor
lcall
xor
lea
mov
mov
das
fmuls
mov
sbb
and
test
jle
push
jno
mov
add
jae
filds
xor
scas
jecxz
jnp
frstor
sarl
imul
xchg
aaa
mov
mov
or
add
stos
sub
das
pop
xchg
jl
sbb
cmp
insl
fxch
jmp
cs
cld
ret
cwtl
mov
push
mov
outsb
mov
xlat
dec
lea
cmpsl
int3
out
fstp
inc
jmp
mov
aad
test
arpl
in
xor
cltd
push
sbb
into
daa
out
movsl
lds
lahf
cs
mov
clc
movsl
or
jp
int
push
lcall
ljmp
addb
jle
nop
int
xor
cmc
mov
mov
jns
jl
popa
pop
in
mov
add
cmpb
in
arpl
mov
lahf
in
addr16
les
pop
xor
pop
insb
iret
jle
sbb
aaa
insb
sbb
add
pusha
xchg
jne
dec
into
aaa
sbb
rcrl
and
inc
pop
adc
jmp
and
sub
jge
outsl
loopne
nop
scas
or
inc
sbb
ja
pcmpeqw
xlat
pop
cmp
mov
xor
mov
ss
hlt
sbb
push
fwait
pop
add
jae
lret
aaa
adc
and
inc
mov
xchg
les
pop
xlat
push
xchg
jp
push
add
lcall
sbb
hlt
push
push
pop
test
scas
jecxz
jno
jp
fiadds
in
mov
mov
add
sbb
pushf
hlt
movsl
pop
cli
pop
mov
add
jmp
sbb
lods
int
cld
clc
add
popf
fildll
mov
add
dec
jnp
aad
imul
push
xchg
push
cltd
xor
stos
leave
sbb
adc
inc
pushf
test
add
ret
fmull
push
push
rcrb
mov
or
in
xor
cmpsb
push
adc
ret
adc
xchg
push
fiaddl
push
outsb
mov
add
dec
mov
shll
mov
adc
sub
mov
aad
lret
sahf
ret
mov
bound
add
sahf
pushf
aam
xchg
leave
jne
lds
in
jo
push
jo
std
dec
push
js
jp
test
cmp
jne
imul
test
adc
sbb
push
movsb
sub
cmp
repz
ret
mov
pop
popf
lcall
cmp
int
pop
std
js
and
inc
jb
scas
push
dec
repz
mov
sbb
sti
rcl
mov
xchg
daa
mov
adc
inc
mov
sahf
mov
aaa
dec
std
mov
lods
dec
cwtl
pop
das
xchg
mov
inc
sub
lods
lret
jl
ja
dec
bnd
fwait
push
mov
in
push
jb
dec
sbb
shlb
and
sbb
push
ja
push
popf
inc
in
in
push
cmp
icebp
mov
lock
fbld
lock
xor
cld
or
mov
cwtl
ret
ficompl
mov
mov
ret
jnp
sbb
mov
or
mov
cmp
stos
jne
mov
mov
and
ret
push
std
pop
lret
fcoml
fdivl
push
gs
jmp
imul
jmp
or
or
add
loope
mov
fnclex
inc
cwtl
ljmp
mov
jno
inc
sub
ucomiss
xor
jb
cltd
js
lods
xchg
stos
inc
and
xor
clc
xor
jp
mov
bswap
and
hlt
adc
mov
nop
sub
pushl
push
jle
js
cltd
int
xchg
imulb
ljmp
mov
jg
mov
and
sti
lret
insl
xor
sbb
sub
lock
mov
xchg
outsl
sbb
shlb
aad
dec
inc
fisubrl
xchg
pushf
jg
mov
bound
dec
lods
add
sbb
sbb
insb
xor
lods
pop
mov
movsl
push
push
insl
cltd
xchg
inc
xchg
cmp
out
scas
xchg
dec
loop
xchg
pop
jp
add
xor
cltd
iret
fcomps
inc
rcrl
ret
cmp
pop
mov
mov
cmp
fmulp
mov
mov
pop
sub
dec
cli
mov
test
push
push
inc
and
ret
les
hlt
test
inc
jmp
cmc
imulb
outsl
dec
mov
pop
test
sbb
jl
test
add
cmp
pushf
pop
orb
ja
leave
xlat
iret
pop
and
push
add
sbb
adc
sbb
pop
xchg
cmc
sub
mov
mov
ds
adc
or
sbb
adc
in
loop
inc
cld
xchg
cld
stos
push
adc
and
icebp
or
sbb
sub
inc
or
push
dec
xchg
pop
andb
cmpl
imul
ds
stos
xchg
or
lea
inc
in
lods
popf
mov
jbe
jg
js
dec
or
pop
jns
jns
push
arpl
jne
clc
push
adc
outsl
lahf
cld
aas
fnsave
push
pop
push
mov
cmpsb
bound
add
adc
mov
sbb
adc
jmp
xchg
fdivrl
ljmp
mov
arpl
jle
dec
in
int3
push
test
inc
insb
push
lret
jg
mov
lds
fs
notb
cmp
push
movsl
fsubrp
inc
add
dec
sti
hlt
inc
shl
adc
or
addb
lea
icebp
clc
shl
xchg
ljmp
xor
iret
or
testb
xchg
add
stos
lods
jo
fldl
mov
dec
adc
or
mov
into
les
xchg
push
fstpl
push
inc
mov
sbb
or
lods
cmp
jb
jno
sub
ljmp
xor
xor
andb
mov
mov
mov
movb
lods
inc
cltd
in
sahf
mov
adc
and
jbe
xor
jne
call
add
lret
int3
pusha
pop
loop
mov
push
jno
xor
fsts
or
sbb
add
push
frstor
adc
mov
sub
xchg
icebp
repz
jo
xor
jb
pop
push
psraw
leave
sbb
sub
outsl
lret
push
xor
or
or
rcr
popf
enter
mov
test
fstpt
sti
inc
jp
adc
fmull
int
mov
or
adc
cmp
rolb
je
in
adc
rorb
or
mov
inc
les
push
adc
cmp
mov
push
jge
mov
roll
nop
jae
mov
hlt
inc
shlb
inc
mov
in
je
orl
sbb
lret
out
xchg
sar
add
mov
sbb
sub
mov
in
or
xchg
rorb
iret
sahf
cmc
je
out
js
dec
nop
dec
inc
leave
jmp
popa
jnp
and
clc
fimuls
enter
lcall
xor
decl
sub
xor
cmpsb
lea
enter
ja
pop
cmp
test
and
pop
and
push
out
cwtl
push
cmc
btc
ficoms
xchg
xchg
xchg
aam
hlt
filds
popf
loope
xchg
mov
scas
inc
xor
pop
pop
cmp
mov
popa
mov
xor
xchg
and
inc
xchg
out
icebp
xor
faddl
or
xchg
sarb
cltd
cmp
mov
lahf
mov
mov
mov
inc
mov
sbb
lock
aad
cld
and
movsl
les
sbb
push
mov
shll
pop
aam
not
std
mov
aas
ficomps
cmp
into
nop
clc
in
js
inc
adc
add
lds
sti
fs
subl
push
into
cmc
pop
nop
andb
jmp
cld
adc
push
mov
pop
push
pop
mov
out
loopne
aam
fsts
dec
cli
es
push
xchg
cmc
xchg
mov
cmpl
test
mov
out
inc
pop
and
sahf
sarb
dec
or
or
dec
sbb
popa
jp
mov
mov
stos
add
dec
dec
pop
xchg
adc
pop
movsb
in
cmp
repnz
jnp
pushf
popf
pushf
jmp
add
hlt
cmp
cmp
xchg
add
add
inc
and
xor
loopne
out
test
xchg
xor
popf
sahf
jo
sarb
jmp
sbb
dec
pop
sbb
push
out
insb
or
mov
xchg
lcall
sub
mov
cmp
jg
add
sahf
jnp
xchg
push
xchg
pusha
inc
outsb
mov
aas
adc
mov
push
insl
mov
ficoml
and
fsubl
leave
bound
inc
out
repnz
pop
imul
add
and
scas
stos
sti
and
sub
mov
ja
add
mulb
pop
jo
fsubs
or
data16
add
xlat
data16
mov
outsl
inc
repz
cmpsb
add
xor
sbb
or
mov
add
movsl
mov
adc
nop
mov
out
adc
imul
push
gs
xor
sub
hlt
xor
mov
into
pop
stos
adc
sub
jle
jbe
inc
dec
ljmp
pusha
nop
loopne
clc
and
jle
scas
rolb
es
jne
fwait
mov
push
mov
hlt
push
leave
dec
daa
aam
jns
lret
cmc
dec
mov
jnp
sbb
pop
xor
inc
in
jbe
mov
jae
jp
xor
js
xor
mov
xor
adc
fisttpll
mov
inc
xchg
or
rclb
sbb
jp
pop
loop
aad
jg
adc
push
mov
or
hlt
fdiv
xchg
add
cmp
cwtl
scas
dec
iret
lret
fmull
and
xchg
mov
xchg
lcall
mov
sbb
cmpsl
pushfw
mov
xor
sub
roll
inc
inc
jb
hlt
xchg
pop
mov
imul
xchg
sbb
pop
jo
loop
in
fistps
stc
scas
movsb
outsb
hlt
push
dec
lcall
out
enter
xchg
rorb
push
cli
in
push
mov
pop
jo
push
jne
xchg
orb
push
nop
pop
add
sub
lahf
stos
test
int
ljmp
into
push
test
xchg
stos
popf
pop
stos
dec
cmp
fwait
push
imul
subb
fs
xchg
inc
dec
gs
lret
lock
jecxz
mov
xchg
out
insb
push
sbb
xchg
xchg
scas
mov
jne
xor
scas
andl
fmull
rcrb
pop
fsubrl
cmp
mov
arpl
insl
mov
pusha
lods
push
xor
add
out
rcrl
in
mov
xchg
push
jns
jle
je
xchg
test
and
cmp
lahf
repz
popa
popa
out
lret
mov
xor
pusha
mov
mov
add
int3
push
mov
lret
sub
mov
inc
push
ret
ljmp
xchg
jno
push
nop
jns
iret
jle
bound
outsb
xchg
mov
xor
cld
mov
cwtl
push
pop
les
xor
ror
xchg
xchg
lcall
push
adc
jb
flds
cwtl
mov
lea
fisubrs
pusha
or
ret
adc
das
movb
nop
and
dec
sbb
mov
dec
fucom
roll
pop
mov
inc
mov
in
push
mov
pusha
adc
adc
sbb
mov
cmp
rorl
pop
push
mov
js
push
mov
test
mov
add
fisubrs
jp
mov
pop
push
adc
pop
jo
sbbl
imul
pop
arpl
mov
testl
mov
imul
pop
xchg
jnp
xchg
in
cmp
imul
scas
push
jbe
enter
jne
mov
adc
test
loope
pop
push
add
push
setle
push
sbb
rclb
je
jmp
mov
aam
cmp
stos
and
adc
or
xlat
je
shl
pop
mov
testl
jno
sub
fidivs
or
adc
lods
xor
fistl
push
lcall
and
jnp
add
jmp
and
jno
std
push
pop
popf
orl
mov
xor
clc
dec
ss
inc
outsb
nop
mov
sub
and
mov
inc
dec
fwait
or
addb
aam
scas
js
js
je
push
aaa
bound
add
cld
xor
push
cltd
mov
mov
or
popf
xchg
xor
jnp
fwait
inc
mov
jbe
cmp
mov
mov
sub
test
in
sbb
call
rol
nop
popa
stos
jae
jb
and
pop
dec
inc
cmp
pop
insl
jle
add
inc
xchg
test
jle
cltd
push
jb
xchg
push
mov
mov
xchg
jle
xchg
or
scas
sbb
andb
test
insl
jl
imul
lds
xor
dec
pushf
int3
mov
fcmovu
pop
jns
jno
mov
lret
mov
lret
cmc
cs
jnp
or
mov
and
jb
xchg
mov
adc
sub
inc
ja
movaps
pushf
sub
jb
lds
xor
mov
nop
pop
leave
push
pop
loop
ret
movsb
movb
scas
enter
scas
imul
jnp
xchg
push
test
push
in
adc
scas
ljmp
mov
sub
pop
mov
clc
lods
shl
in
sbb
insb
stos
pop
in
pop
bound
movsl
int3
push
push
clc
inc
and
sarl
xchg
lcall
adcl
enter
out
sub
cmp
loopne
pop
push
jne
jg
nop
shlb
dec
insl
or
incb
aas
adc
sub
and
outsl
jge
mov
push
jno
adc
xchg
jae
scas
mov
push
aas
dec
mov
scas
sbb
cltd
das
rclb
clc
aad
sahf
pop
sub
int3
xchg
sbb
cmp
decb
outsb
sbb
fwait
mov
pop
jno
push
or
jnp
inc
ret
mov
dec
jo
call
mov
mov
std
je
fwait
cltd
jns
cmp
into
mov
lods
bound
pushf
clc
mov
push
loop
sti
arpl
xchg
aaa
or
in
or
cmp
jp
mull
sbb
enter
add
ljmp
mov
jg
add
clc
add
bound
adc
and
jp
jg
pusha
mov
adc
push
enter
jo
mov
cmp
leave
movlps
lahf
cmp
repz
jl
mov
fsubrs
js,pt
mov
dec
scas
iret
mov
out
push
movsb
repz
repnz
insl
out
mov
cwtl
jg
mov
shl
outsl
iret
jns
mov
push
adc
lret
imul
dec
xor
mov
test
mov
fwait
inc
clc
sub
mov
inc
mov
ds
adc
xchg
and
cmc
mov
in
test
mov
jb
ret
loopne
sub
lcall
or
in
fdivr
outsb
inc
add
inc
inc
outsb
dec
ffree
arpl
not
inc
call
jb
shlb
mov
lea
xchg
test
fwait
enter
mov
mov
inc
inc
adc
stos
mov
pushf
pop
cwtl
inc
sti
xor
dec
jp
add
aas
getsec
jg
scas
pop
jo
in
cwtl
sub
jnp
push
les
outsb
or
sub
cmp
push
jl
sub
add
outsb
lcall
mov
add
fwait
inc
fs
scas
movsb
and
loope
and
inc
lock
inc
adc
adc
sub
popa
or
shrb
lret
cmp
or
aas
roll
mov
xor
or
push
dec
cmp
push
out
cmp
out
bound
adc
sti
movsl
add
pop
iret
out
lret
jo
addr16
sbb
xor
pop
movsl
loope
push
jno
adc
in
mov
pop
pop
xor
sahf
out
test
nop
jns
mov
idivb
mov
data16
push
or
pop
mov
int3
jae
scas
mov
pop
leave
aam
xchg
push
cld
ljmp
inc
ja
mov
xor
cmpl
test
pop
inc
xlat
ds
mov
jb
push
mov
jmp
dec
int3
int
sbb
pusha
cli
pop
pop
cmc
inc
sub
and
insl
sub
insl
pushf
pop
into
and
push
sahf
cmpsl
push
mov
popa
push
or
push
test
mov
in
pop
dec
sub
push
fsubrl
dec
pop
jns
std
inc
mov
jge
xlat
hlt
fcmovbe
inc
pop
cli
pop
and
insl
fwait
ljmp
sub
dec
call
insl
xchg
mov
sub
dec
into
mov
popa
dec
mov
sub
lods
iret
jl
cmpsl
es
cwtl
mov
jb
loop
push
loopne
test
mov
repnz
mov
arpl
pop
outsb
jns
shl
cmpsb
scas
pop
mov
pop
flds
mov
stos
mov
push
and
add
es
mov
icebp
push
lods
mov
dec
jne
mov
aam
mov
leave
mov
clc
movl
sub
cmp
sbbb
push
push
in
dec
sbb
pop
push
mov
in
call
mov
xor
sbb
pop
and
jnp
paddusb
push
sbb
lea
mov
add
dec
call
retw
push
insl
jnp
mov
pop
iret
pop
and
imul
imul
aam
add
leave
mov
dec
ljmp
sahf
insb
mov
daa
mov
pop
mov
xlat
int
cli
push
icebp
int3
cwtl
fs
and
shrb
adc
call
push
ljmp
lods
loope
or
sbb
and
insb
sub
mov
fidivrs
and
adc
mov
stos
xor
mov
and
mov
xchg
shl
movsl
fiaddl
outsb
xor
in
adc
xchg
loope
aad
sub
mov
pop
ret
mov
add
mov
push
out
dec
and
out
in
cmp
add
xor
or
cmpsl
or
testl
lods
rcrb
filds
cmp
add
or
fsubl
xchg
sub
in
repz
cmpsb
mov
fwait
sbb
test
push
cmp
or
fdivl
jg
jle
adc
or
stos
or
enter
ret
mov
and
mov
aad
pop
push
add
sub
enter
inc
shrl
mov
xor
hlt
mov
fdivp
aaa
mov
mov
dec
mov
cmp
push
fs
or
pop
mov
xor
ds
rorl
out
mov
nop
or
inc
lods
pop
mov
jns
icebp
sbb
mov
inc
into
test
fs
cmp
stc
rcrl
jp
xor
inc
xchg
sahf
cli
loopne
push
loop
push
pop
movsl
mov
and
pop
sub
fs
xchg
cli
xchg
pushf
dec
sub
lret
movsl
pop
push
mov
cmp
iret
leave
jbe
loopne
lds
ja,pt
dec
cmpsl
push
incl
mov
mov
lret
inc
sbb
pop
sub
imul
xor
sarb
xchg
pop
jne
fld
push
xlat
mov
stc
or
ret
ds
cmp
xchg
outsb
lock
cmpsb
into
test
mov
sub
jae
cld
and
mov
enter
adc
mov
mov
mov
out
or
push
mov
sub
cmp
orb
mov
adc
inc
call
mov
cmp
pop
mov
adc
sub
insl
push
sbb
cmp
sbb
adc
fidivl
dec
cmp
imul
push
loopne
xchg
pop
inc
cwtl
shrb
pop
xor
jno
jp
cltd
mov
aam
inc
lock
dec
je
roll
lods
aaa
push
aaa
in
lret
inc
ja
mov
push
repz
jb
nop
sbbl
jl
daa
or
lahf
sbb
xabort
imul
or
aaa
in
pop
adc
shr
jae
daa
es
sarl
cmp
jns
adc
dec
insb
xor
push
idivl
push
pop
leave
mov
andb
std
mov
push
mov
sbb
adc
pop
inc
int3
insb
xchg
js
insl
xchg
cmp
pop
arpl
add
popl
xchg
adc
fstl
pop
adc
in
add
or
scas
jnp
decb
xchg
movsb
xchg
sub
movsl
scas
shll
call
pop
mov
or
push
mov
or
pop
into
into
icebp
fs
pop
jnp
mov
xor
aam
jle
out
push
faddp
sub
ds
mov
jne
nop
into
pop
mov
push
cmpsl
add
pop
test
movsl
lcall
cmp
push
push
xor
push
mov
and
xor
jge
roll
jnp
dec
sub
adc
mulb
dec
mov
xchg
rcll
cmp
sub
test
adc
loop
stos
cmpsb
mov
or
mov
xchg
fnstsw
loopne
leave
add
out
and
pop
add
out
jle
data16
fsubs
cmp
sub
xor
cmc
nop
clc
pop
lds
fs
dec
lcall
ror
pop
push
push
cli
jg
lret
leave
outsl
rcl
loopne
imul
push
fiadds
fwait
jae
test
popf
jae
push
sti
xchg
add
fdivrl
hlt
push
push
and
mov
cmp
xchg
jae
mov
or
pop
in
das
mov
adc
push
stos
inc
jbe
push
mov
rol
nop
addr16
pop
pop
pop
insb
or
jge
pop
xchg
xchg
shll
sbb
sub
clc
test
orl
inc
inc
inc
insl
mov
add
cld
mov
ficoml
aam
movsb
jp
jns
push
push
ss
pop
ret
out
sti
mov
adc
clc
adc
cld
pop
push
lods
mov
xor
cli
repnz
in
mov
pop
jo
in
daa
movsb
mov
xor
fidivrs
mov
imull
lahf
push
shlb
cmc
outsb
cmp
mov
push
int
out
popf
andb
invlpga
add
adc
xor
in
xchg
insl
jmp
push
mov
pop
jb
std
dec
fwait
add
and
into
xchg
inc
leave
push
dec
adc
jne
push
inc
pop
and
and
sub
js
les
jge
sub
ja
or
xor
mov
adc
inc
xor
mov
adc
outsb
sub
int
leave
mov
cltd
add
push
dec
ja
xchg
out
pop
mov
mov
adc
scas
out
ficomps
mov
test
das
aaa
dec
jl
xor
mov
add
mov
jmp
mov
sub
mov
push
out
pop
cmc
and
cmp
push
sarl
imul
mov
outsb
es
mov
sub
iret
mov
dec
xchg
call
sbb
push
sbb
mov
sbb
ds
xchg
mov
sub
sbb
mov
sbb
inc
out
mov
add
nop
repz
in
shl
jp
sub
inc
loop
mov
int
clc
leave
pop
jnp
jne
mov
orb
decl
mov
lea
mov
repnz
jnp
data16
lret
sbb
or
cmpsl
int3
in
testl
pop
jge
je
and
pop
inc
sub
dec
shrb
mov
dec
pop
adc
sti
aad
sbb
aas
cmp
js
lcall
inc
in
insl
jb
jle
xor
scas
out
cmpsb
add
loopne
cmpsl
push
mov
subb
stos
idivl
mov
fcomps
dec
popa
insb
sbb
cmp
pop
xchg
cmp
pop
xchg
arpl
sarl
inc
fcmovbe
outsb
sub
notl
lcall
and
inc
pop
lock
cmp
mov
cli
pop
mov
inc
inc
or
and
popa
int
movsl
fdivr
jp
fsubs
cmp
add
pop
push
and
and
push
add
bound
mov
add
nop
dec
bound
xor
daa
pusha
hlt
popa
cmpl
jg
jp
mov
or
push
dec
xchg
xchg
jo
cmp
inc
arpl
mov
or
adc
fwait
sub
xchg
sub
jns
mov
or
mov
lds
mov
mov
testl
cld
mov
inc
in
scas
lock
or
jb
imul
or
xchg
jmp
rep
xchg
enter
fadds
mov
test
push
rcrl
add
jp
or
aaa
sbb
jne
ret
in
pop
das
xchg
scas
push
cli
jge
xor
mov
aam
jae
cmpsl
inc
cli
dec
test
xchg
mov
pop
jecxz
mov
test
jne
icebp
xor
fstl
pop
pop
push
pushf
mov
imul
stos
add
cs
or
pusha
push
pop
push
cmc
shll
in
cwtl
inc
shr
std
inc
mov
add
int3
cmpb
fadd
dec
add
xor
mov
fisttpll
adcb
lods
rcrb
and
or
jbe
aaa
xchg
cmpsl
sti
and
add
inc
push
xlat
mov
lock
cmp
pop
test
addr16
push
xor
dec
adc
mov
mov
aaa
jmp
xchg
xor
loope
sbb
fidivrs
fld
fwait
mov
daa
jnp
xor
pop
push
push
mov
dec
lret
outsl
outsb
repnz
adc
and
repnz
push
or
push
mov
cmpsl
inc
in
and
inc
iret
xchg
mov
inc
xchg
mov
pop
add
orb
iret
data16
test
dec
cmp
push
mov
stos
jb
adc
lods
rcr
mov
inc
mov
imul
lcall
fcmovbe
jne
or
xchg
mov
arpl
sbb
shrb
fisubrl
xor
xchg
sbb
daa
inc
cld
and
push
mov
aam
mov
sbb
push
cmp
mov
mov
mov
stos
fs
xchg
mov
pop
mov
mov
inc
and
add
into
cmp
lods
inc
mov
frstor
cmp
xor
lcall
xchg
stos
push
jno
clc
fists
fwait
mov
adc
cld
pop
jnp
mov
nop
dec
test
shll
xor
xchg
test
and
adc
js
int
adc
and
enter
mov
inc
jb
faddl
mov
jle
shrl
xchg
cmp
mulb
int
sbb
push
add
mov
aaa
xchg
in
jg
addr16
xchg
iret
fimull
enter
outsl
xchg
sbb
leave
cmpsb
iret
sti
xor
push
inc
add
out
sbb
xchg
mov
loopne
in
inc
pop
xchg
fcmovnu
xor
das
mov
and
mov
sahf
pop
sub
or
lahf
loop
es
nop
cltd
ljmp
test
mov
dec
mov
cmc
jecxz
sahf
inc
xor
ljmp
cs
adc
push
push
push
push
push
adc
cmp
pop
cmp
fs
sarb
enter
push
sar
inc
hlt
movsb
aaa
push
push
mov
add
mov
fldl
and
ret
fstl
jmp
sbbb
and
jnp
xor
pop
push
adc
jp
iret
mov
push
jnp
push
sbb
lods
stos
loope
and
adc
ds
xor
mov
cmp
lahf
aaa
and
push
out
aas
mov
add
fwait
les
or
popf
pusha
mov
pop
sti
jne
xlat
or
mov
mov
adc
xor
jmp
xchg
call
daa
lret
pop
jae
pop
shl
cmpsb
and
mov
out
aad
insb
fwait
lahf
sbb
xchg
jne
cmp
pop
sbb
or
xor
fdivl
fists
ret
pop
stc
adc
push
imul
in
pop
add
loope
and
mov
adc
aaa
test
hlt
jno
push
adc
push
cmp
rcrb
mov
cmp
ret
jp
arpl
push
cmp
pop
and
and
push
sahf
mov
mov
aas
cmp
and
dec
mov
pop
fcoml
inc
gs
or
mov
outsb
nop
jp
mov
ljmp
xchg
pop
xor
loopne
pop
movsl
or
mov
xchg
push
mov
fwait
push
and
mov
aas
movsbl
sbb
inc
and
mov
testl
and
push
movsl
pop
bound
ds
test
cmp
dec
cmp
and
ror
pop
ljmp
jmp
data16
and
mov
popf
mov
icebp
or
xor
hlt
inc
or
sbb
imul
loop
imul
into
jg
repz
inc
mov
dec
pop
jl
stc
sub
popf
sahf
in
in
out
test
mov
xchg
out
bound
dec
push
mov
inc
and
int
jbe
fcompl
adc
jl
jns
gs
jns
movsl
xchg
sub
sti
out
push
icebp
cs
sti
bound
lods
jge
push
jae
leave
ficoms
mov
jg
ret
and
xchg
fnsave
jo
adc
arpl
js
test
cmp
dec
jo
mov
fwait
leave
and
leave
xor
xlat
add
add
outsl
push
loopne
mov
sub
lret
inc
push
jp
jns
andb
sahf
xorl
loop
and
xlat
mov
das
mov
sbb
xor
jb
adc
sbb
mov
cli
into
fmull
xor
sub
dec
lods
push
cmpb
cltd
lds
sub
cmp
fisubs
outsl
outsb
sbb
ror
xor
push
sbb
inc
cli
inc
aad
sti
outsl
cmpsl
add
shll
jo
rorb
dec
mov
mov
into
mov
ss
cmpl
in
out
xor
adc
mov
xchg
popf
push
ficompl
xchg
add
push
dec
sub
pop
sub
xor
shll
idiv
rcll
jg
lret
rolb
cmp
fwait
and
jno
int
daa
shrl
push
loopne
je
xchg
ja
and
sub
dec
dec
dec
add
clc
sbb
jbe
insb
pop
inc
in
cmp
mov
mov
xchg
xchg
sbb
call
sti
jns
pop
adc
mov
pop
add
and
ljmp
sub
les
push
and
adc
int3
das
cld
roll
lret
xlat
mov
cmp
sti
icebp
push
jg
fisubl
inc
in
arpl
mov
mov
push
xchg
or
xor
push
ss
mov
dec
cmp
rol
in
in
lahf
jecxz
out
mov
fsubl
inc
and
push
mov
jne
dec
jb
in
push
pop
mov
dec
pop
jl
gs
pop
adc
lods
fwait
cltd
mov
xor
sahf
adc
lret
rolb
sbb
inc
cmp
or
push
and
ret
scas
pop
cmp
loop
cmpl
loopne
inc
lahf
xlat
seto
mov
dec
fmul
adc
fdivr
mov
add
mov
div
lret
js
popf
push
add
scas
shll
das
lret
cld
imul
mov
push
pop
pop
nop
addr16
loope
fdivs
sbb
out
ljmp
add
jmp
and
mov
rorb
xchg
xor
xchg
ret
push
lcall
cmp
jmp
dec
jno
test
lds
es
popa
jl
subl
xor
inc
rcl
scas
addr16
rorl
sub
xchg
out
int3
ret
push
fsubl
push
mov
fs
adc
dec
add
push
xor
dec
pop
repnz
icebp
jmp
cmp
rcrb
cmp
movsl
cmpsb
xchg
bound
fbstp
mov
and
cltd
movsl
ds
out
push
push
mul
jbe
pop
and
sbb
iret
cmpl
and
mov
lahf
mov
fst
out
add
add
out
fbld
adc
pushf
sbb
xchg
push
push
push
fdivl
push
xor
movsb
out
lret
and
mov
mov
jne
mov
pop
jle
and
into
lods
mov
insl
movsb
loopne
fwait
pop
cli
xchg
aas
in
dec
ret
push
fmuls
adc
pusha
mov
lds
and
jge
and
adc
xchg
sbbb
pop
mov
ret
lcall
addr16
adc
js
jl
stos
test
loopne
popf
push
movsb
inc
adc
or
addr16
scas
push
xor
mov
in
or
stos
xchg
dec
sahf
fnstenv
push
bound
or
outsl
movsl
mov
mov
jge
push
pushf
aas
xor
push
movsl
cmp
xchg
shrl
and
into
add
mov
pop
ds
mov
push
inc
nop
or
jne
out
cld
push
push
sub
repnz
ds
cltd
cs
cwtl
cmp
jns
pop
aam
mov
or
xchg
sbb
outsl
add
iret
fmul
cwtl
jns
or
mov
inc
add
add
mov
mov
shll
aam
vpshaq
lods
mov
mov
xchg
sbb
jge
sbb
lea
test
push
pop
dec
insb
cli
mov
sbb
lea
lea
xor
inc
push
pop
xor
inc
sub
push
loop
jp
xchg
sarb
mov
adc
pop
rorb
pop
arpl
adc
sbb
xchg
call
inc
mov
inc
adc
cltd
loopne
out
adc
sub
inc
cmp
iret
push
pop
fdivrs
dec
loopne
cltd
jecxz
cmp
jp
stos
orb
jb
and
and
ret
mov
loope
out
decb
cmpsl
into
jge
cltd
sti
dec
test
xlat
imul
xchg
add
arpl
xor
fwait
addr16
xor
int3
stos
push
cltd
mov
sahf
mulb
and
sbbl
jb
push
xor
clc
mov
mov
xor
pop
orb
inc
shrl
sti
fists
push
mov
outsb
lret
sbb
ret
add
or
add
jp
xor
xor
outsb
fwait
push
rcrl
pop
xlat
jecxz
pop
push
sub
out
xor
cmpsl
push
fdivrl
xor
fildl
rcl
sbb
jp
add
dec
push
add
ficomps
pop
movsb
mov
xchg
xor
test
push
shll
shll
std
minps
enter
or
push
or
xchg
xchg
or
ja
sti
imul
xchg
xor
dec
xlat
in
dec
and
xor
fcmovnu
push
dec
xchg
insl
dec
addr16
lcall
ja
jb
mov
mov
sub
or
in
mov
mov
ja
pop
leave
imulb
movsl
add
adcb
out
and
or
ljmp
inc
sub
iret
stos
daa
inc
shr
into
lock
into
lret
fcmovnu
mov
stos
mov
xorl
dec
jno
addr16
imul
cmp
sbb
mov
and
mov
mov
sub
xchg
dec
dec
popa
das
cs
push
mov
push
xor
shlb
or
fs
dec
or
sbb
or
cs
mov
setb
fs
bound
jbe
js
aas
out
and
js
dec
jns
and
out
ret
xchg
fsubr
mov
dec
lret
mov
add
or
mov
test
mov
in
fdiv
adc
nop
stos
movsl
fstps
xchg
aaa
imul
push
repnz
std
lea
out
sbb
mov
loope
dec
jl
shll
fcmove
daa
push
scas
movsb
das
push
sbb
dec
and
ja
cld
lock
addr16
adc
jl
psllw
test
jb
lods
pop
cwtl
adc
in
pop
icebp
fistl
jg
pusha
and
cmp
fildll
outsl
into
adc
mov
or
mov
lret
nop
rorb
adc
smsw
je
pop
xor
fidivrs
inc
pop
cli
sub
subb
jbe
cmpl
stos
mov
lds
stos
test
out
xlat
movsb
pushf
mov
xchg
or
sbb
pop
sub
scas
sbb
sub
push
cmp
jmp
cmp
xchg
xchg
jno
xchg
cmp
jp
fcom
je
xor
movsl
das
xchg
and
sub
xor
hlt
or
add
cmp
insb
insl
sbb
cmp
cmp
and
es
in
sbb
cmpsb
pop
push
ficomps
out
shl
inc
xor
out
jnp
lock
daa
in
xor
add
lret
sahf
pop
popf
cmp
fimull
ret
loope
jae
xchg
mov
in
movsb
jae
adc
enter
inc
inc
in
aas
cmp
ret
es
pop
fnstcw
jne
test
pop
mov
lret
dec
dec
mov
push
repnz
in
mov
adc
or
idivb
dec
dec
imul
scas
jne
push
das
ljmp
movlps
jecxz
mov
xchg
subl
or
or
jns
mov
outsl
fidivrs
pop
and
out
adcb
pop
movsl
dec
add
cld
dec
xchg
adc
mov
popa
jmp
jecxz
mov
push
pusha
add
xor
popf
or
inc
and
mov
cmpsl
jp
or
outsl
or
dec
aaa
dec
push
insb
mov
aaa
sbbb
fs
test
push
mov
xchg
jb
adc
inc
bound
lahf
and
jecxz
push
icebp
loop
loop
add
add
cmp
pushf
fsubrl
into
mov
fwait
int3
jne
push
aad
gs
adc
in
mov
shlb
mov
mov
dec
outsl
in
lret
out
shrl
out
and
pop
shll
rolb
push
jae
add
dec
icebp
xchg
and
data16
je
xchg
inc
clc
dec
mov
lcall
scas
sysret
fadds
loope
shl
mov
popf
sub
stos
fs
mov
adc
dec
mov
adc
adc
insl
in
subb
jbe
lcall
dec
test
add
sbb
sub
lret
add
fiadds
xchg
pop
test
mov
pop
dec
aam
mov
int3
or
enter
insb
je
inc
pop
cwtl
mov
aad
jb
mov
sub
push
pop
xchg
fistpll
lret
inc
jb
lods
aaa
add
fdivs
ror
push
sub
lea
adc
cmc
sub
xor
adc
fldl
push
xchg
mov
cmpsl
in
cmpsb
jmp
and
bound
fcompl
xorl
aas
cld
jns
xor
adc
and
clc
mov
fsubs
push
lcall
sbb
es
sahf
int
sbb
mov
lods
fs
icebp
sub
fnstsw
add
sbb
sub
loope
or
popa
shll
out
sahf
push
push
into
stc
imul
xchg
cwtl
imul
ficomps
pop
imul
mov
add
push
or
roll
jbe
jl
sub
inc
lods
mov
xor
sarl
adc
cli
pop
sub
mov
lds
jp
jbe
lret
mov
mov
push
dec
pop
mov
dec
shll
fstps
gs
dec
in
addl
cmc
cmc
push
push
sbb
hlt
aas
push
mulb
jmp
sub
pop
arpl
andl
sbb
pop
fidivrs
xchg
out
adc
lds
dec
pushf
in
jo
ret
insl
pop
outsl
scas
fld
notb
aad
in
cmp
inc
xlat
outsb
adc
sbbb
mov
push
push
push
orl
in
or
xchg
sarl
mov
pop
sbb
pop
pop
mov
push
pop
roll
sti
mov
sbb
pop
push
je
sub
mov
pop
in
aad
cmp
inc
addl
outsl
outsb
xor
imul
add
scas
addr16
xchg
mov
pop
pop
inc
push
aad
sbb
add
push
rorb
cmpsb
inc
pop
shll
inc
adc
jae
je
test
pop
subl
inc
add
inc
mov
push
xlat
int
adc
inc
out
ja
jmp
adc
mov
loop
insl
int3
push
jecxz
ret
cmc
in
mov
in
repnz
mov
test
add
ljmp
mov
push
xchg
cmp
es
int3
pop
cmp
fadd
lods
mov
xor
movsl
mov
sbbb
mov
cltd
mov
ret
fwait
mov
rcr
test
and
loop
cmp
lods
push
sbb
cmpsl
cmp
xlat
and
or
push
inc
adc
sahf
fisubrl
sbb
shrb
and
cmpsl
movsb
daa
mov
mov
icebp
cmpsb
test
ja
loopne
mov
ficompl
ss
into
dec
xchg
icebp
bound
cltd
outsb
jae
inc
xor
push
and
push
xchg
mov
mov
xor
fimuls
cmc
sub
jl
mov
mov
mov
in
add
outsl
inc
pop
in
pop
ret
addr16
mov
xchg
lcall
mov
test
testl
add
pop
aas
or
add
inc
fldenv
fldt
jge
stos
sub
outsl
dec
xor
inc
push
lock
dec
add
fbld
cli
out
or
mov
mov
pop
loope
cmp
daa
or
sbb
loop
add
fistps
arpl
add
and
je
mov
ljmp
addr16
push
into
pop
jecxz
and
ja
movsb
mov
mov
shl
fistps
sub
lret
cmc
cmp
jmp
test
push
les
xchg
sub
int
imul
dec
aaa
inc
mov
mov
cmp
and
xchg
pop
or
mov
inc
xchg
mov
push
test
jne
pop
das
push
loopne
test
jle
insl
test
adc
fimull
xchg
mov
loop
out
mov
adc
lds
mov
pop
cltd
xor
mov
sbb
fistps
stos
add
push
pop
adc
out
shrl
dec
push
inc
lahf
xchg
sbb
fucomip
mov
cmc
jp
test
out
cmp
fidivs
sub
and
mov
data16
cmc
fcoms
pop
out
sub
aam
sti
mov
cmp
or
sbb
pop
pop
and
stos
xor
cmc
out
data16
enter
inc
inc
inc
movsb
fwait
aad
mov
jmp
sbb
mov
and
add
inc
pop
daa
xchg
mov
cmp
cmp
subl
pop
xor
pop
int3
mov
nop
pop
pop
jl
movsl
cmp
stos
pop
dec
or
mov
outsl
cmp
xchg
push
jbe
cmp
mov
jl
or
mov
lahf
dec
jle
sbb
lock
push
or
xor
sub
jp
arpl
mov
mov
cmp
mov
mov
xlat
mov
mov
pop
xlat
xor
jge
push
cmp
dec
pop
fdivp
mov
aam
mov
ss
call
ret
stos
xor
repnz
nop
cld
mov
or
add
movsl
adc
cmc
adcl
sbb
inc
dec
xchg
jo
loopne
jmp
cwtl
push
mov
pop
xor
mov
xor
adc
push
pop
lret
js
ljmp
sub
ret
add
add
mov
mov
dec
jns
sbbb
push
lods
daa
leave
push
mov
arpl
test
cmpxchg
and
leave
cmp
adc
xchg
mov
sbb
sti
mov
sti
inc
push
adc
lahf
in
xlat
cwtl
das
xchg
xor
lcall
xor
pop
ja
mov
nop
mov
lahf
jns
popf
xchg
jbe
test
or
stos
jecxz
sub
push
fstl
loope
push
std
lret
xchg
outsb
xchg
and
test
addr16
int3
xor
adc
jnp
dec
cmp
xor
test
ficompl
in
dec
pop
ret
push
sarl
jg
repnz
and
sahf
jl
sub
imul
fmull
sub
jbe
xchg
in
stc
movsl
xchg
or
sbb
dec
out
ss
je
cld
sbb
and
aad
mov
xorl
fmull
inc
and
mov
call
leave
inc
shlb
mov
fdivr
daa
jge
adc
lcall
out
test
rcl
push
and
xor
inc
fchs
cmp
cmp
loope
push
out
jae
je
loopne
das
dec
imul
and
sbb
dec
addr16
push
repnz
xchg
leave
int3
cs
aas
mov
pop
mov
xchg
outsl
arpl
sub
aas
arpl
inc
xchg
inc
data16
fdivp
push
stos
loopne
cli
movsb
cmp
pushf
addr16
out
and
adc
xchg
push
xchg
arpl
and
scas
rorl
mov
les
cmp
inc
cmp
insl
dec
imulb
shll
or
dec
pusha
ss
testl
shrb
xchg
adc
inc
sbb
roll
and
shl
lods
insl
cmpsb
subl
push
pop
mov
addb
scas
loope
push
insl
mov
dec
movsl
inc
mov
pop
cmp
scas
sub
loopne
orl
fs
and
in
fwait
cmc
push
and
rcl
mov
and
jo
sub
inc
dec
outsl
imul
test
push
test
xor
fwait
mov
xchg
push
daa
sahf
jnp
or
pop
mov
xor
aam
daa
sbbl
add
mov
mov
jb
cmp
jmp
add
push
stc
test
push
repz
mov
shlb
cmp
pop
in
in
lret
inc
adc
mov
pop
movsb
pusha
or
jb
mov
repz
cmp
arpl
imull
shl
sub
mov
and
jmp
add
icebp
je
in
ret
or
or
popf
xor
mov
cmpb
push
aad
inc
push
cmpsb
fidivs
stc
outsl
lret
xor
inc
pusha
insb
lea
pop
data16
lods
flds
push
mov
out
xchg
rol
mov
nop
cmpsb
adc
push
pop
cmc
or
sbb
movb
fs
shr
dec
add
push
pop
xor
icebp
mov
dec
adc
pop
shrl
push
lret
cltd
cmp
out
call
pop
xorl
jg
imul
push
jo
shll
adc
lods
loope
inc
movl
jecxz
repz
mov
test
dec
into
cmc
inc
jae
xchg
pop
stc
btr
shlb
or
inc
enter
out
xchg
je
addr16
jmp
and
adc
sbb
mov
mov
sbb
add
imul
mov
lods
xor
jmp
xchg
inc
mov
jmp
xlat
rcrb
xor
jle
jmp
aaa
lahf
clc
jmp
push
out
sbb
insl
call
imul
loopne
sub
inc
lods
mov
pop
mov
out
dec
cmp
and
mov
add
cmp
subb
leave
test
inc
orl
add
jae
push
call
sub
mov
pop
cmp
std
pop
lret
mov
xchg
xor
cmpsb
pop
dec
inc
mov
mov
cltd
fcompl
aam
js
loopne
imul
pop
jo
push
dec
dec
shll
aaa
lock
repnz
jg
sbb
fisubl
mov
push
and
xor
dec
mov
outsl
add
std
lcall
jo
lds
pop
data16
sub
sbb
mov
jns
mov
shlb
jb
adc
xor
inc
jae
in
xor
rolb
std
jae
or
loop
mov
add
adc
lret
xchg
lret
cmp
pop
hlt
push
loopne
stos
jae
jo
lods
nop
or
rcrl
mov
sbbb
inc
nop
mov
cmp
lea
sub
lock
mov
dec
mov
jg,pt
fucom
pop
aaa
and
push
int
outsl
or
pop
lret
scas
popa
push
add
ret
std
lock
or
cmpl
stos
dec
inc
out
fisubs
lgs
jae
addb
mov
dec
add
mov
insl
xchg
adc
pop
orl
add
repnz
ret
mov
push
adc
and
cmpsb
sub
fimuls
mov
call
adc
adc
sub
inc
daa
xor
pop
lods
xor
inc
jb
pop
xor
int3
andl
adc
dec
repz
mov
hlt
sti
fmuls
lcall
hlt
xor
mov
pop
out
xchg
push
movsl
jnp
in
idivl
xor
aaa
sahf
nop
or
ja
pop
popa
pop
inc
insl
push
cmpsb
xorb
mov
outsl
sbb
cmp
cld
ds
loop
pop
leave
xorb
inc
sub
mov
rclb
fucom
jmp
scas
jo
aas
inc
div
enter
fs
test
js
out
jmp
sub
xchg
ret
xchg
imull
jno
xchg
lds
and
shrb
sub
mov
loopne
mov
int
push
nop
gs
rcl
mov
sub
pop
push
out
ficomps
in
add
aam
inc
std
pop
jle
push
dec
mov
out
mov
mov
cli
push
je
xchg
hlt
cmpsl
pop
dec
dec
outsl
pop
fsubl
sti
push
repz
lds
into
outsl
outsb
pop
insb
pop
mov
and
pusha
jnp
les
mov
jl
out
out
sarl
cmpsl
vpmacssdql
sbb
push
sbb
test
add
jne
fimull
sub
add
mov
shl
add
inc
or
aam
iret
sbb
mov
mov
lret
mov
shrb
add
fwait
jbe
daa
mov
or
dec
mov
decl
ds
fcomps
push
std
sub
aaa
hlt
adc
ljmp
orb
pop
dec
in
stos
cmpsl
mov
outsb
mov
sti
mov
xchg
xor
ret
lock
mov
lcall
push
dec
pushf
push
push
cmp
push
dec
push
push
inc
nop
or
push
add
outsb
push
repnz
pop
test
mov
or
xor
or
sub
dec
aam
ja
scas
ret
and
cli
in
in
scas
adc
stos
mov
ret
lods
sti
call
mov
test
das
add
jne
add
dec
and
xlat
push
cmp
cmp
mov
mov
pop
test
mov
inc
int3
jb
push
xor
loopne
adc
in
call
es
scas
jmp
xchg
fsubrl
push
sub
pusha
movsb
and
push
pop
nop
inc
testl
jp
pop
add
dec
out
jno
xchg
inc
adc
adc
xorb
jae
fs
add
mov
cld
ret
xchg
les
xchg
push
lock
rcrb
cltd
add
loop
in
ljmp
sub
xor
ja
inc
push
mov
nop
ss
shl
hlt
push
push
push
das
scas
in
das
rcrb
scas
pushf
repz
push
cmp
movsb
lock
addr16
pusha
xchg
pop
imul
xchg
addr16
and
cli
and
mov
cld
xchg
lock
nop
stos
insb
cmp
push
inc
outsb
xchg
in
pop
and
loop
xchg
or
pop
xor
add
xchg
xor
mov
out
enter
sub
cmp
sbbb
cmp
pushf
adc
and
aaa
or
adc
cltd
sar
pop
pusha
cwtl
das
stos
hlt
cwtl
cmpsb
adc
and
push
adc
test
xor
jne
mov
xor
add
xchg
outsb
shlb
notl
fiaddl
pop
je
inc
and
mov
hlt
jmp
pop
scas
xchg
push
test
pop
outsb
pusha
loope
faddl
dec
fstps
inc
stos
xor
jbe
iret
jnp
out
or
inc
cltd
push
stos
sub
inc
lcall
cmp
or
pop
sub
mov
cwtl
inc
mov
call
aad
jb,pn
ds
push
rclb
aam
lods
xor
std
jbe
ss
or
or
cmp
push
loopne
dec
cmpsl
andb
sahf
jo
add
xchg
in
data16
call
enter
inc
shlb
mov
xor
mov
dec
mov
mov
clc
add
mov
std
aad
iret
sti
test
or
in
das
dec
pushl
scas
cmp
fisubrs
jbe
repnz
inc
jmp
movsb
arpl
cmp
andb
mov
gs
fisttpl
daa
sub
sub
scas
add
mov
cmc
pushf
mov
or
fwait
jmp
xor
es
jp
mov
and
mov
frstor
lock
add
lock
mov
icebp
subb
adc
stos
lret
jo
pop
faddl
lock
jno
inc
xorl
jnp
mov
popa
shlb
pushf
adc
outsl
or
jmp
out
add
out
leave
inc
jmp
or
insb
and
notl
pushf
je
mov
ds
mov
mov
xchg
out
xchg
cwtl
push
mov
adc
cmp
sarb
bound
add
cmp
pop
pop
xchg
cmp
cmp
je
loop
jl
ret
pop
jp
fs
adc
push
rcpps
xor
lods
inc
fs
or
lock
add
sbb
inc
ja
jne
add
xor
xor
addl
pop
ret
jg
cli
push
push
cltd
loopne
mov
lret
mov
je
add
cltd
adc
adc
lock
push
mov
cmp
adc
ja
addr16
lods
fwait
push
push
mov
pop
test
es
add
outsb
jno
mov
cmp
cld
movsl
dec
mov
into
jecxz
pop
jae
xlat
mov
push
rsqrtps
mov
stos
lds
sti
mov
inc
or
sbbl
inc
fisubrs
dec
xchg
int3
mov
pop
dec
bound
add
out
test
into
ror
dec
iret
fisttpl
push
stos
push
aad
mov
lahf
sbb
cltd
rolb
dec
sub
xchg
pusha
idivb
inc
int
push
xchg
out
xchg
sahf
ja
fidivl
mov
push
scas
jns
adc
mov
test
ljmp
jb
movsl
lods
into
inc
scas
scas
jns
test
icebp
cltd
dec
imul
add
ss
imul
test
and
mov
jns
mov
bnd
stos
lahf
lock
push
lcall
mov
stc
xchg
shlb
dec
mov
pop
mov
sbb
mov
xchg
push
and
dec
xchg
add
xlat
sahf
jae
aad
lcall
sbb
push
lea
ss
aam
cmp
jmp
adc
pushf
stos
rorb
mov
repz
gs
daa
mov
cmp
outsb
sti
sbb
enter
cwtl
or
mov
shl
aam
xor
bound
sub
pusha
jne
mov
scas
add
data16
aas
outsl
push
mov
push
xchg
push
shll
mov
stos
push
and
rolb
sub
test
bound
sub
add
mov
fcompl
test
adc
dec
add
jnp
adc
cmc
push
ljmp
dec
xlat
outsb
ljmp
shll
test
imul
jg
inc
inc
inc
test
push
into
jno
mov
ljmp
sub
call
sub
cs
mov
aaa
xchg
inc
jp
cmp
mov
cmpb
faddl
dec
cwtl
repz
lret
addr16
bound
ficoml
rcl
lds
mov
inc
addr16
pusha
push
add
sbb
and
ljmp
xor
fstl
or
in
xor
xchg
sub
iret
jbe
sahf
or
movups
cmp
mov
subb
or
xchg
icebp
ret
fiadds
cmp
aaa
dec
xchg
std
mov
jne
imul
lods
add
cs
and
in
xor
ror
dec
in
cmp
inc
dec
ljmp
loope
loop
gs
jne
and
mov
ljmp
jbe
pop
dec
jge
xchg
ljmp
mov
idivb
mov
ljmp
mov
push
sub
pop
or
mov
out
int3
movhps
mov
inc
ja
push
jns
jmp
scas
loopne
add
push
jecxz
sbb
repnz
andl
inc
mov
push
out
mov
loop
pop
inc
xor
mov
pop
mov
sub
cli
in
or
mov
jne
xchg
fs
sub
lods
inc
add
out
jecxz
xor
mov
insl
es
les
adc
and
bound
mov
mov
in
jmp
mov
inc
es
sub
mov
rcrl
stos
rcll
pop
and
sbb
inc
stc
dec
rolb
fwait
add
jno
sbb
cld
dec
xchg
idiv
insb
and
xor
xchg
add
fnsave
jmp
xor
mov
dec
das
sub
xorl
bound
push
adc
pop
xor
inc
shrl
sbb
int
repnz
pop
adc
in
mov
and
cmc
jle
dec
and
testb
add
stos
fwait
out
je
out
ds
cmp
loopne
and
mov
mov
sbb
sbb
ljmp
mov
mov
fcomps
adc
leave
sahf
imul
jg
mov
inc
mov
mov
push
and
xor
add
mov
repnz
pop
and
pop
and
and
jbe
pop
lret
jae
sub
jno
les
dec
mov
sbb
mov
jmp
mov
or
jne
xchg
pop
in
cmpsb
fidivrs
ret
jecxz
out
leave
or
lea
popf
test
leave
cltd
push
dec
int3
dec
sbb
call
mov
jb
jbe
and
das
daa
dec
test
mov
mov
adc
mov
cmp
jmp
push
xor
idivb
std
xchg
loop
ds
jnp
sti
insl
push
pop
xchg
cmc
or
mov
repz
mov
lods
popa
push
dec
fbld
ffree
dec
adc
pusha
sar
sub
pop
add
mov
clc
cltd
je
pop
jne
lea
mov
bound
or
push
cmp
je
adc
fadds
pop
int3
rorl
movsl
xor
jo
repz
sbb
xchg
nop
fisttps
adc
jb
jecxz
and
movsl
inc
mov
and
dec
mov
pusha
testl
jp
jecxz
popf
mov
add
mov
pusha
xor
jge
and
cmp
jns
sub
out
or
mov
orl
cmp
mov
and
iret
pop
lahf
fistpl
shrb
adc
pushf
mov
pop
add
shlb
adc
in
adc
mov
ret
iret
lods
push
and
les
or
pop
inc
xchg
dec
outsl
cmp
mov
jo
mov
cmp
cli
xlat
ret
and
mov
ret
sbb
pusha
icebp
in
mov
out
add
or
je
icebp
push
das
fwait
sbb
cmpsb
dec
lods
stos
rcll
push
imul
out
or
aaa
xor
pusha
leave
rcrb
iret
pop
xchg
insl
mov
test
jbe
pop
lret
lods
flds
fisttpll
xor
je
out
sti
call
ja
stos
jle
adc
insl
push
xlat
fndisi(8087
mov
add
adc
adc
pop
push
mov
ret
pushf
jge
mov
imulb
lock
mov
and
mov
mov
and
sub
adc
push
ss
add
mov
fsubl
vcomisd
lret
xor
lock
outsb
std
add
mov
cltd
loope
pop
rorb
jge
mov
in
cltd
and
inc
sub
cmp
or
repz
sti
mov
fmul
xor
mov
ret
xor
lea
dec
xchg
mov
push
sahf
cltd
xchg
push
ret
jmp
mov
xor
sbb
jl
mov
fiaddl
loope
dec
sbb
test
jmp
ret
pop
cltd
xlat
rol
cmp
pop
fcmovne
adc
or
adc
sub
mov
popa
adc
fwait
movsl
outsb
dec
adc
mov
dec
and
mov
jns
icebp
cmp
pusha
addr16
and
lret
cmpsb
jl
cmp
mov
aad
scas
pusha
adc
stos
cmp
mov
aad
cwtl
ret
pop
lods
lahf
xor
sub
xor
xor
mov
stc
pop
sub
jp
repz
mov
jmp
xchg
cmp
lret
pop
aas
push
lea
dec
aas
cmp
movsl
sub
leave
insb
push
or
jnp
pop
js
mov
outsl
xor
or
and
js
dec
fbstp
sar
int
hlt
inc
pushf
jg
xorl
loop
repz
xor
aam
and
xchg
mov
repnz
adc
cwtl
decb
cld
fstpl
std
sbb
test
add
push
push
stc
lret
ret
sbb
je
scas
pop
fisttpl
cmp
sbb
mov
inc
jno
adc
push
cs
sti
cmc
cmpsl
push
and
neg
inc
ss
inc
mov
leave
push
dec
jne
pop
mov
inc
mov
rolb
push
cmpsl
xchg
xor
xchg
mov
xchg
ret
or
dec
cmp
xchg
dec
fnstcw
cld
jg
andb
inc
inc
cmpsl
jp
mov
pop
pop
lahf
enter
dec
shr
mov
es
ss
xor
prefetch
dec
into
adc
sbb
out
subl
addr16
test
dec
daa
sub
cmc
add
stc
int
pop
pop
orb
xchg
shl
or
outsl
and
xchg
mov
inc
jmp
int3
icebp
and
xchg
loope
lds
sahf
xor
and
pop
xchg
mov
bound
aam
pop
jo
test
mov
and
stos
or
mov
fwait
out
shl
enter
rcll
scas
sbb
xchg
neg
clc
sub
adc
and
int
test
insl
mov
scas
pop
or
cli
negb
dec
dec
sbb
cmp
mov
pop
xor
fcoms
and
fsubrs
testl
sbb
mov
jl
mov
mov
add
in
add
and
lret
jb
fmuls
jae
scas
es
sbb
insl
test
out
pop
int
push
mov
mov
and
stc
sub
jae
jle
mov
xor
fmuls
jbe
or
sbb
arpl
mov
lcall
call
mov
cmpsl
flds
push
or
xchg
adc
das
cmp
xor
mov
imul
cmp
xchg
jbe
lods
negb
or
ds
fsts
or
iret
lds
sahf
adc
sub
fldl
lods
pop
mov
imul
mov
cltd
sarb
jb
fstpt
xchg
adc
out
stc
popf
cmp
ljmp
into
jmp
push
and
mov
loopne
outsb
cmp
ret
subb
jbe
lret
or
lods
cmpsb
cwtl
imull
pop
push
aas
or
scas
and
xchg
mov
cwtl
ror
and
cld
cli
xchg
or
sarl
addr16
int
xchg
mov
popa
loopne
ret
and
adcb
pop
scas
stc
fisttps
repnz
nop
andl
xor
dec
data16
shll
push
arpl
orl
xchg
out
sbb
out
inc
gs
stc
lret
lods
sbb
xchg
mov
jb
ljmp
jns
add
das
push
inc
jb
adc
test
nop
push
cmp
stc
mov
mov
jb
les
inc
cltd
ljmp
loopne
arpl
fwait
mov
and
mov
rolb
dec
lock
mov
sbb
push
pop
xchg
add
cltd
pop
addb
xchg
mov
popf
dec
sub
cwtl
cmp
pop
cli
mov
addr16
xlat
pop
cmpsb
iret
sbb
jne
stos
mov
push
ljmp
mov
push
push
cli
fstl
imul
stc
and
das
cmp
jmp
jne
fs
inc
push
or
push
push
test
cmc
cmp
mov
cmc
jb
mov
lods
inc
dec
pop
cmpsb
loopne
dec
mov
in
movsb
and
lahf
ret
mov
jae
repnz
repnz
jle
inc
xor
aam
idiv
aam
jg
sbb
clc
gs
nop
lret
test
cmp
ljmp
jnp
xchg
mov
xchg
jmp
push
test
mov
add
cltd
jecxz
sbb
pop
or
xor
sbb
sbb
mov
push
out
loop
popf
adc
push
not
stc
mov
out
mov
aad
push
adc
js
mov
or
lcall
ljmp
pop
push
xchg
mov
cmc
xor
mov
daa
dec
cmpsb
sub
adc
inc
push
mov
fcmovne
addr16
out
inc
mov
sbb
sarb
dec
push
xchg
mov
and
pop
xchg
movsl
or
add
pop
dec
js
mov
and
mov
jo
cmp
out
call
jl
xor
push
int3
int
pop
push
push
inc
cwtl
outsl
xor
aam
jns
mov
inc
lea
push
jmp
loop
mov
fwait
mov
int
out
movsb
lahf
lret
jmp
ficomps
lret
sbb
rcrl
sub
jns
inc
int3
mov
mov
sbb
jmp
xchg
xor
inc
jno
sbbl
out
mov
push
orl
push
push
nop
jno
movzbl
scas
mov
in
cmc
popf
loop
in
sarl
xlat
push
xchg
outsb
xor
aas
mov
lods
jmp
jo
jmp
cmp
jle
fwait
sbb
lcall
jnp
popf
pop
test
jnp
rorb
mov
ret
adc
ja
push
cmp
push
pusha
mov
push
push
push
inc
xor
jns
or
cwtl
mov
sahf
emms
js,pt
scas
leave
fsubl
pminub
jl
repnz
test
arpl
aad
addb
ret
sti
enter
or
dec
stos
adc
add
jne
xor
stos
xchg
jp
push
cmp
lods
in
mov
dec
xchg
mov
orb
sub
adc
nop
cltd
fs
mov
mov
push
mov
shlb
jns
and
and
sub
shll
loop
xchg
cmp
test
mov
jle
insb
daa
dec
das
mov
and
cmc
cmp
scas
je
enter
ljmp
pop
jo
icebp
stc
or
dec
cmp
in
out
aam
shll
or
inc
mov
cmp
inc
out
es
lock
in
in
jne
test
loope
into
xor
pop
and
cmp
adc
inc
fldcw
js
mov
jnp
out
mov
adc
xchg
popa
out
aam
xor
xchg
into
stos
xlat
jmp
lock
sahf
push
in
icebp
or
sahf
jmp
fsubs
lahf
in
or
jne
mov
inc
lods
repz
popa
xlat
repnz
dec
xchg
inc
lods
fidivl
stc
pop
dec
ss
or
mov
in
xor
repnz
ret
dec
inc
and
push
mov
insl
push
fsts
xchg
mov
nop
adc
std
ficompl
stos
push
xor
mov
in
popf
jl
jns
pop
not
sub
mov
arpl
lret
cmpsl
pushl
push
data16
jne
mov
int
daa
dec
adc
hlt
mov
jno
pop
dec
mov
pop
cltd
call
stos
mov
sub
test
daa
xchg
es
std
jns
sbbl
loope
scas
ds
cwtl
cmpsb
adc
push
inc
ret
or
adc
stos
xchg
jl
cli
sub
lea
out
push
icebp
fistps
ret
and
pop
popf
mov
xchg
shll
cmp
int3
enter
int3
push
loope
ds
mov
sbb
out
inc
inc
mov
adc
lds
xchg
cld
insl
push
lock
out
cvttps2pi
sysret
or
jne
fbstp
stos
xchg
add
or
push
pop
insb
outsl
push
jnp
adc
dec
xchg
and
jecxz
xorb
jns
aam
jns
fbld
add
mov
pushl
xor
insl
mov
pop
adc
inc
or
sub
ficoms
sahf
jo
pop
cmc
fnstcw
jge
popa
movb
inc
or
cs
xor
adc
test
mov
sub
mov
cmc
pop
and
in
and
add
rcr
fidivs
jno
cltd
mov
and
mov
push
cmp
aas
mov
or
jo
inc
out
jnp
aas
add
shlb
mov
int3
and
sti
mov
inc
mov
sub
test
dec
aad
cmpsl
and
sahf
xchg
push
popa
push
pop
push
sti
pop
in
inc
jb
sahf
insb
xchg
ljmp
cmc
outsb
roll
stos
fwait
rclb
xor
dec
jp
ss
popf
adc
je
dec
sbb
hlt
or
jno
lods
clc
add
mov
rorl
mov
aas
add
fcoms
jge
push
mov
pop
ss
ret
xchg
fadds
test
and
int
in
inc
jge
mov
xorl
push
jno,pt
pop
pop
xchg
divb
ret
sub
cwtl
pusha
inc
jno
push
xchg
xchg
push
pushf
daa
xchg
ss
cmpsb
mov
subl
iret
mov
adc
imul
jne
fucomip
and
sub
outsl
ret
cld
pop
pop
fwait
add
clc
mov
leave
mov
push
out
outsb
xor
or
add
pop
subb
imul
insl
jl
es
rcrl
pop
nop
icebp
add
xchg
push
out
pop
sbb
aam
nop
mov
imul
xor
repnz
aas
mov
or
mov
jecxz
pop
fsubs
mov
stos
mov
jmp
movsl
jmp
and
xorb
test
sahf
mov
mov
xor
popf
add
call
dec
mov
and
adc
jge
push
cli
scas
fwait
push
repz
aad
xchg
je
or
nop
xor
and
jmp
sub
repnz
outsb
pusha
xor
test
hlt
xchg
pop
pmaddwd
xlat
sbb
insl
repnz
jmp
adc
pop
jge
pop
xchg
test
ja
data16
pop
inc
push
pushf
test
inc
es
jle
mov
add
xchg
xchg
mov
push
cltd
js
cmp
cmpl
mov
rol
movsb
leave
and
std
outsl
push
imul
mov
repz
pop
ljmp
pop
mov
jl
pop
out
test
lock
push
cwtl
mov
leave
xchg
sub
xor
sub
xchg
mov
and
imull
fisttpl
pushf
fimull
out
fstpl
nop
lds
and
sbb
add
lea
push
sbb
test
sub
sti
stc
mov
push
loop
test
movsl
out
in
out
jg
mov
lock
mov
fwait
jae
sbb
xor
test
sbb
jmp
sbb
pop
icebp
jne
mov
scas
fucomp
fwait
inc
out
out
fucomp
cmpsl
fisubl
leave
repz
mov
imul
inc
enter
outsl
xchg
mov
lahf
std
sub
xor
imul
xchg
aad
shrl
jo
repz
jmp
int
cmp
scas
iret
sbb
lock
ljmp
and
dec
sub
cmpsb
pop
dec
adc
adc
int
xor
mov
xchg
lahf
jb
inc
fcomps
pop
adcl
cmp
push
aad
and
pop
sti
add
cmp
push
ror
data16
hlt
jnp
jle
adc
xor
bound
xchg
xorb
lahf
test
jecxz
loope
mov
xor
fxch
mov
pop
jp
sbb
mov
pop
add
lods
mov
aam
and
add
push
fwait
test
cmp
mov
push
aaa
xor
popa
das
and
mov
mov
xor
je
xchg
test
pushf
addr16
in
pop
dec
ss
stos
add
ret
rorl
or
repz
imul
xlat
pushf
test
add
jp
retw
and
cmp
push
das
add
mov
or
aam
test
cmpsb
inc
iret
xor
stos
push
jne
es
cmp
xor
jg
or
mov
mov
movsl
movsl
popf
xor
je
iret
repz
das
fsubs
movsb
rcr
ret
push
mov
mov
pop
xlat
sbb
lods
adc
imul
adc
dec
pusha
test
add
cmp
lea
add
pop
mov
ja
mov
in
imul
clc
xchg
je
xor
add
test
sarb
bound
xchg
mov
es
mov
and
mov
mov
xor
mov
mov
popa
and
xchg
inc
mov
stc
jmp
les
sub
xchg
pushf
insb
outsl
push
ret
ss
and
repnz
enter
mov
push
push
subb
lret
or
daa
adc
ds
fistps
push
jbe
imul
adc
pop
outsl
xchg
std
adcb
push
sbb
je
ja
push
sub
push
adc
data16
stc
mov
lret
pop
loopne
sti
and
call
push
lcall
pop
enter
neg
and
and
insl
or
fsubrl
imul
bound
cs
xchg
ret
cmp
jg
fimuls
in
popf
mov
clc
pop
loope
pusha
cli
fiadds
fists
stos
mov
enter
cmpb
rolb
or
call
xchg
mov
cmc
mov
cltd
cwtl
out
iret
movsl
test
loopne
cld
insb
sbb
mov
leave
por
imul
xchg
jp
sub
sub
mov
inc
mov
repz
repz
sub
dec
inc
cmp
lods
shlb
xchg
pop
sidtl
sahf
jae
sahf
xchg
cmp
scas
mov
into
add
ja
inc
rolb
test
jnp
xchg
adc
pop
int3
lret
imul
add
jno
sub
cmpsb
movsb
sahf
jmp
shlb
jl
inc
mov
sahf
inc
cmpsl
hlt
in
in
dec
jbe
xor
pop
or
outsl
fidivrl
out
xchg
bound
fcmovu
imul
dec
xor
mov
outsb
scas
push
or
xor
or
cmp
gs
pop
stc
sub
jb
push
loop
mov
cmp
ret
xor
scas
mov
xchg
and
xorb
xor
push
or
mov
inc
mov
and
jl
lret
push
imul
pop
push
daa
pusha
push
es
je
notb
rcr
and
aad
pop
lods
into
xchg
mov
push
js
sub
pop
movsb
xchg
dec
stos
or
iret
nop
add
fimull
out
scas
adc
push
xchg
mov
out
stos
cmp
fnstsw
push
pop
jne
jmp
popf
inc
bound
in
mov
ja
test
mov
rcrl
dec
daa
dec
inc
sbb
sahf
push
push
dec
clc
mov
xor
xorb
ljmp
mov
push
mov
adc
js
rclb
sub
pop
pop
xor
out
lds
jnp
and
pop
xor
cwtl
cs
jo
push
stos
push
mov
add
lcall
fmuls
push
pop
push
lods
xor
test
bnd
aam
lock
fwait
out
adc
sti
jae
push
dec
test
fdivrl
sub
fs
xchg
push
repnz
sbb
les
sti
pop
sub
cmp
sahf
lret
jge
xor
in
ret
jae
fsubrs
jg
jp
mov
in
xchg
push
outsl
and
call
clc
pop
add
nop
pop
mov
inc
sub
cld
pop
es
jl
and
or
jns
and
scas
cmpsl
xor
int3
lcall
sbb
mov
subl
dec
in
gs
push
xor
lods
pop
and
xchg
cmpsl
push
sti
and
mov
aam
inc
xorb
xchg
std
sub
das
shl
das
push
fs
push
inc
stos
fstpl
rcll
dec
pusha
repnz
fnstenv
xchg
add
mov
mov
mov
sub
dec
cmp
mov
ret
testb
pop
jbe
inc
jno
icebp
outsb
add
sbb
ss
je
xchg
je
cmp
ret
pop
enter
pop
ja
cmp
test
dec
dec
pop
cmp
sub
or
test
jno
add
popa
xlat
dec
pop
fdivrs
dec
lret
ret
clc
loop
icebp
xchg
movsl
and
leave
inc
jo
mov
adc
insl
hlt
pop
imul
paddsb
cmpsb
pop
in
aas
movntq
push
js
leave
push
mov
sub
inc
data16
sbb
jmp
jo
int
or
xor
test
negb
je
pop
xor
ljmp
add
and
jnp
orb
mulb
and
and
pop
jno
imul
jg
jecxz
fnsave
adc
xor
mov
ret
jg
cli
ljmp
movl
int3
cli
push
mov
dec
sahf
icebp
aam
xchg
adc
pop
dec
push
cmp
js
popf
push
mov
sti
adc
cmp
imul
lahf
pop
shl
imul
movsb
xchg
sub
lock
cmpl
jg
jo
jmp
inc
hlt
cwtl
xchg
clc
mov
mov
sub
ss
inc
lock
movsb
jl
movb
sub
loope
adc
and
pop
lods
loop
cmp
jnp
mov
ret
sub
mov
inc
adc
fiaddl
xchg
mov
pop
jno
mov
cs
push
cmp
mov
sbb
cmp
scas
dec
push
clc
mov
pop
push
ljmp
xor
arpl
dec
or
js
mov
and
mov
add
push
stc
cmp
jmp
mov
add
mov
dec
gs
insl
cmp
jbe
pop
xchg
push
jb
or
sbb
jne
decl
mov
mov
loope
movsl
jns
push
stos
sbb
insb
sti
push
sahf
call
or
and
jo
mov
sarb
in
inc
cmp
test
stc
ds
in
xchg
int
mov
and
popf
data16
movsl
jle
pop
ficompl
xor
fstp
fimuls
sub
test
fcoml
out
add
ds
mov
xor
aas
mov
mov
jbe
out
repnz
call
cmp
ret
shrl
adc
cli
pop
aad
popf
loopne
outsl
mov
mov
ss
inc
jle
sar
adc
pop
cmovo
lds
push
arpl
inc
jnp
out
mov
pop
test
insl
push
mov
sbb
xchg
ss
inc
pop
push
mov
lea
push
jmp
cs
repz
add
mov
add
insl
mov
mov
fimull
fs
and
ret
test
pusha
std
daa
xor
jo
dec
adc
adc
filds
adc
add
loop
push
inc
out
mov
lea
mov
inc
cli
test
sti
fwait
mov
add
push
es
sub
jo
push
xor
push
mov
stos
push
cmp
imul
mov
out
cmp
lds
daa
out
sub
push
xorl
stos
fcomps
in
mov
jae
push
jno
xor
push
cmpsl
daa
bound
lea
dec
xchg
sbb
test
dec
rolb
popa
add
sbb
push
adc
jne
lods
fldl
rclb
bound
js
rcrb
aas
xorl
sbb
in
dec
int3
xchg
loopne
fs
out
rcll
sub
fldenv
cld
lahf
add
sub
adc
mov
cld
push
add
push
jl
ljmp
jecxz
cmpsl
das
imul
xchg
mov
in
cld
push
into
dec
add
sbb
fcompl
mov
scas
insb
das
xchg
cli
cs
movsb
imul
jmp
xchg
cmp
bound
add
rolb
jno
add
sbb
and
clc
jge
pusha
mov
into
or
adcb
push
fdivl
and
push
sub
gs
pusha
lock
outsl
xor
inc
xchg
sbbb
sub
xchg
leave
jb
cmp
out
or
jg
lods
push
mov
sub
dec
test
dec
shr
loop
add
orl
mov
jge
rcrb
sbb
jb
jbe
adc
mov
outsl
push
jns
adc
xrelease
lret
jle
and
mov
lods
or
cltd
mov
push
or
push
iret
fwait
mov
mov
addr16
rolb
imul
mov
xchg
fwait
and
add
aam
out
sbb
jne
or
js
jbe
mov
jno
cmpsl
cmp
lods
mov
in
insb
mov
xor
cmc
xor
pop
push
jo
stos
nop
add
outsb
xor
popa
or
test
lods
ljmp
dec
adc
push
addl
inc
ret
pushf
stos
xor
dec
sub
cmp
loopne
faddl
loope
jne
mov
sbb
or
push
pop
fsubrl
adc
jmp
sbb
adc
je
xor
mov
cld
ret
pcmpeqw
cli
push
ds
test
jmp
daa
inc
or
push
and
loop
mov
mov
repz
repnz
mov
jne
aad
dec
and
pop
push
adc
rorb
stc
pop
pop
add
enter
xor
cmp
add
push
pop
xor
outsl
in
xchg
mov
or
jno
push
pop
push
dec
inc
add
xchg
xchg
insb
sti
or
inc
nop
cmp
pop
xchg
mov
jp
outsb
xchg
int3
lahf
and
addl
gs
test
aaa
cmpsb
adc
fisttpl
jmp
xchg
xor
addr16
adc
push
les
mov
add
ds
inc
mov
jecxz,pn
cwtl
dec
ret
jmp
pop
push
cli
sub
mov
je
sbb
lods
jge
sub
mov
adcb
out
nop
xchg
cmpsb
pop
push
fcmovnbe
scas
jg
leave
into
icebp
mov
cmp
das
xor
popf
mov
cmp
fsts
mov
test
rolb
add
out
ret
mov
cmp
into
inc
movsl
xor
sbb
outsb
cmp
loop
stos
dec
mov
je
mov
movsl
mov
orb
sub
pop
jb
and
and
cs
inc
bound
test
test
push
adc
cmp
sbb
subl
or
daa
sarb
pop
pusha
clc
adcb
sbb
scas
and
jb
cld
arpl
inc
cltd
ds
adc
data16
arpl
mov
clc
cmp
sti
mov
pop
outsl
or
mov
enter
mov
mov
push
sbb
and
andb
mov
daa
out
xchg
pop
imul
jo
or
and
mov
lds
pop
loop
dec
loope
rcll
push
test
inc
cmp
mov
jnp
pop
jle
clc
xor
push
lods
pop
test
jmp
push
std
sbb
and
and
or
icebp
and
out
fstpl
push
rolb
cs
fsubrs
mov
cmp
lcall
xchg
aaa
lahf
fs
insb
icebp
push
jp
popf
pusha
jg
ret
pop
test
lret
mov
jbe
scas
adcb
sbb
enter
cld
ret
sub
and
stos
mov
sbb
repnz
data16
popf
cmp
mov
fs
dec
lcall
mov
pop
push
or
pop
xchg
xchg
in
add
jne
cltd
jg
inc
xchg
sahf
jne
cmpsl
lret
enter
dec
mov
enter
std
or
and
insl
mov
mov
jmp
dec
and
xor
stc
mov
pop
xchg
push
clc
sbb
lea
jbe
lds
sub
mov
roll
loop
or
ja
cli
mov
pop
pop
sar
daa
ljmp
imul
push
sub
dec
enter
shll
enter
sbb
aam
sub
sti
xchg
pop
dec
dec
test
idivb
xor
push
lret
xchg
ss
sbb
push
add
or
xchg
mov
mov
mov
fists
fstpt
arpl
xchg
jge
inc
jl
sub
xor
adc
push
movsl
add
sbb
int
inc
mov
xlat
rclb
xchg
repnz
fmuls
aad
dec
insl
cld
pop
cmpsb
or
leave
imul
int3
ljmp
push
mov
pop
pushf
ja
mov
fisubs
dec
into
mov
test
adc
adcb
lods
mov
cmp
leave
aaa
jno
xchg
leave
xor
mov
jb
sub
mov
jo
scas
sarl
cmc
nop
out
call
into
pop
cld
and
sbb
neg
cmp
imul
add
enter
es
pop
mov
pusha
push
push
les
sub
pushf
cmc
pop
inc
inc
pushf
jns
adc
out
insl
into
mov
dec
xor
cmp
or
sbb
lcall
jo
fwait
bound
icebp
jae
popa
mov
movsl
fs
sahf
add
xchg
pop
jbe
int
inc
addb
jns
mov
push
or
adc
jne
mov
stc
fnsave
or
rcrb
rclb
lods
adc
push
fwait
add
add
leave
push
cmp
popa
int3
mov
inc
and
lods
pop
fisubrl
nop
paddb
fsubs
push
mov
mov
enter
adcl
pop
orb
sbb
xchg
cmpsl
in
int3
inc
fimull
add
loope
stos
jle
cmc
imul
cmp
outsb
aas
push
dec
xchg
fcomps
fscale
mov
sti
dec
jl
in
sub
dec
or
sub
mov
push
or
pushf
inc
mov
pop
pop
hlt
stos
rorl
xchg
inc
dec
xlat
xor
push
lods
pop
xchg
sahf
mov
insl
jmp
iret
cmpsb
pusha
stc
shll
jle
in
loop
out
aaa
jo
in
jp
and
cmp
faddl
cmpb
push
sub
jg
mov
mov
inc
stos
xor
lcall
in
cmp
mov
jle
mov
inc
dec
dec
adc
mov
cmp
xor
push
movsb
in
aam
out
insb
fimuls
rcrb
imul
mov
adc
lock
ds
stc
mov
pop
xchg
in
test
rcrb
into
push
push
sub
stos
jne
rorb
movsl
push
or
js
js
popa
loop
clc
xlat
cmpsb
fs
or
jge
loop
pop
ret
popa
add
jns
or
push
cld
pop
outsb
push
lock
and
push
mov
mov
out
inc
xchg
ja
subl
bound
in
call
jle
negb
ret
dec
push
jl
fisubrs
subb
add
cmp
sub
xor
cmpsl
aas
cmp
jp
sbb
mov
out
xchg
stos
inc
repz
mov
sub
ljmp
fidivrs
test
fstl
mov
sub
mov
aas
ret
leave
jl
icebp
cmp
pop
aas
subl
jp
leave
jmp
add
ret
pop
push
inc
xor
cmp
imull
cmp
jle
test
movsl
and
ja
cmpsl
xchg
xor
into
mov
xchg
ljmp
popa
or
inc
cwtl
xor
jle
push
mov
sbb
in
fistl
lcall
cltd
mov
daa
xchg
jecxz
lcall
cmpsl
sbb
dec
mov
push
enter
into
popf
push
call
xchg
sahf
mov
pop
sbb
mov
pop
or
adc
dec
and
pop
xor
jnp
addr16
aas
pop
mov
xor
loop
jbe
rolb
ljmp
adc
or
pop
mov
test
stos
inc
push
mov
push
jne
or
daa
add
adc
push
das
dec
mov
sub
hlt
fs
mov
dec
sub
xchg
inc
mov
pop
push
faddl
push
cmp
testl
or
xor
xor
orb
mov
out
push
jecxz
cli
jae
mov
movsb
test
sbb
mov
cwtl
loop
jecxz
aam
or
das
ljmp
subl
jmp
inc
out
adcb
fildl
mov
xor
loop
mov
xchg
icebp
xchg
enter
xor
jmp
in
add
daa
xor
cmp
push
movsl
jns
jl
mov
int3
sbb
jb
aaa
fs
cltd
notb
pop
lds
mov
dec
daa
adc
test
lds
mov
sub
ret
jmp
xlat
sahf
xor
jbe
pushf
inc
and
sbb
and
adc
test
dec
cmp
scas
lcall
sbb
mov
sub
sbb
xor
lock
mov
or
sub
pop
rolb
hlt
outsl
sbb
pop
xor
xchg
jo
rcrb
in
sub
mov
lds
and
lret
mov
iret
pop
pop
inc
cmp
jecxz
paddw
push
xchg
in
in
jb
and
mov
jns
and
pop
ljmp
stos
push
divb
cs
flds
adc
int
and
arpl
loop
out
cmp
jle
test
xchg
jecxz
push
aad
jmp
sub
lods
ds
dec
add
xor
movsb
adc
movsb
sub
fisubrl
fisttpl
bound
add
inc
cli
mulb
ret
pop
inc
inc
shl
xlat
loop
inc
leave
inc
sbbb
mov
jle
movsl
fadds
cltd
pusha
insl
leave
jbe
xchg
cld
jo
pop
jecxz
fstpt
or
clc
mov
push
lock
shll
push
adc
lods
loope
iret
or
xchg
cmp
or
lock
sub
test
nop
add
arpl
inc
ret
aas
aad
int3
lahf
adc
pop
nop
and
mov
mov
push
xor
mov
popf
fs
stc
push
call
push
test
fsubl
enter
inc
repz
lods
xor
cmp
add
push
in
enter
fwait
iret
ret
arpl
push
addr16
mov
and
aam
pop
sbb
xchg
mov
mov
cmp
fwait
mov
mov
jle
push
call
xor
cmp
and
and
lds
push
lock
jnp
mov
adc
cmp
mov
outsb
rol
mov
mov
cmp
scas
aaa
push
mov
sbb
push
xor
test
rorl
sahf
into
fwait
ljmp
xchg
mov
cwtl
cmp
mov
pusha
data16
rcrl
add
push
adc
xor
cltd
dec
mov
jle
je
daa
stos
add
mov
xchg
pop
or
adc
clc
int
or
in
aas
xor
sahf
pop
and
popf
sbb
lea
incb
lds
rorb
std
mov
xor
or
les
hlt
xlat
int
lret
pop
push
ja
fidivrl
lea
fldt
icebp
jne
aam
and
roll
and
dec
jb
sbb
jne
pop
or
cltd
mov
mov
xchg
xchg
repnz
loopne
xchg
push
test
xchg
in
fdivl
leave
stos
jle
mov
jge
cli
out
icebp
push
and
xchg
xor
scas
mov
loop
mov
push
nop
or
out
adc
mov
dec
xor
call
stos
cmpsl
adc
pop
cmp
popf
in
and
push
inc
dec
out
pop
or
jp
and
jno
cld
mov
mov
sbb
jecxz
jae
cmp
fs
cld
dec
inc
aaa
movsl
sti
xchg
inc
movsl
xchg
fwait
or
mov
adc
popa
push
popa
or
cmpsb
cmpsl
ffree
xor
add
je
inc
push
lret
xor
fistl
mov
leave
push
pop
adcb
adc
sub
push
call
mov
enter
in
mov
pop
push
push
push
mov
ja
fwait
js
arpl
mov
mov
dec
lock
sarl
test
pop
addr16
jl
movb
popf
repnz
fdivrl
lea
push
into
out
sub
xchg
pop
sbb
mov
test
push
arpl
mov
xor
mov
aad
push
jo
mov
addr16
mov
icebp
xor
xchg
aad
jp
inc
loopne
ret
inc
cwtl
inc
cmp
pusha
out
scas
test
ljmp
mov
imul
mov
je
xchg
mov
jl
dec
das
sbb
jae
push
dec
call
jmp
andl
lods
mov
xchg
out
adc
jnp
mov
inc
lock
jbe
sti
and
or
xchg
pop
fidivs
adc
dec
cld
insl
adc
fists
cltd
adc
shll
jecxz
xor
cmpsl
jp
mov
stc
add
bnd
lret
ficoml
fdiv
mov
sbb
xor
cmp
cmp
jbe
inc
lods
jp
mov
movsb
ret
aam
sarb
mov
push
iret
and
push
inc
loop
popa
imul
decb
rorb
or
or
inc
jne
int3
sbb
test
adc
insb
aaa
mov
pop
in
mov
in
mov
shlb
pop
inc
out
xor
push
fbstp
mov
dec
stc
mov
aaa
adc
arpl
shr
xchg
rclb
popa
sub
cmc
cld
in
outsl
mov
lods
mov
lea
xchg
repz
jns
movlps
mov
movsl
insl
mov
scas
loopne
mov
jmp
push
lods
dec
push
ljmp
in
imul
jmp
xor
cmp
adc
or
test
push
nop
xlat
push
lea
mov
js
xchg
sub
leave
xchg
xor
mov
xor
dec
pop
and
scas
pop
jae
jl
pop
or
sub
cmpsb
out
jnp
add
pushf
lret
mull
add
sbb
outsb
xor
rcr
lret
pop
popl
int
lock
xchg
fstpt
fdivr
outsb
insl
ret
mov
gs
mul
adc
std
push
shll
jns
xchg
leave
cmp
insb
pusha
xor
sbb
lods
sarl
cmp
in
xor
inc
and
jl
ret
and
sub
shl
mov
aaa
cs
inc
rcrl
call
aad
lea
jl
out
push
outsl
mov
fwait
testb
dec
xchg
mov
mov
push
or
arpl
mov
movsl
push
pushf
in
fisubs
int3
pop
loopne
fwait
pop
add
adc
xor
sub
dec
mov
sti
mov
daa
dec
ret
add
nop
pop
repnz
add
xchg
je
test
xchg
jb
add
push
cmp
cmpsl
cld
pusha
dec
inc
ret
in
jmp
jmp
xor
bound
xor
aad
and
clc
test
in
or
scas
jo
mov
sub
cmc
dec
les
jle
sbb
add
fcomp
mov
add
shrl
loop
xchg
das
call
sbb
jo
test
mov
or
test
dec
sbb
push
leave
mov
cmp
nop
cmp
or
out
movsb
push
xor
lock
and
push
jecxz
add
popa
ret
jo
popa
orl
push
inc
insb
mov
mov
jns
adc
push
movsb
aam
or
das
rcl
mov
push
adc
xchg
addr16
iret
ja
outsl
mov
mov
fdivs
jmp
jg
mov
xchg
push
insl
jmp
mov
fs
icebp
scas
insb
sub
push
sub
or
enter
addr16
daa
sbb
aaa
pop
dec
iret
mov
adc
cmp
insl
rorb
sbb
stos
sahf
adc
test
and
inc
adcl
loope
ret
stos
icebp
mov
mov
lret
pop
cli
adc
xor
int
inc
mulb
mov
xchg
std
push
imul
jns
sbb
gs
in
cmp
into
fsubrl
aaa
int
enter
in
xor
pop
js
into
icebp
dec
xor
cs
sbb
xchg
jns
adc
sbb
idiv
sub
mov
imul
fmul
xor
ret
je
out
xchg
adc
subl
mov
xorl
stos
scas
xchg
in
scas
jno
jge
cli
xchg
aas
inc
shr
outsl
inc
les
mov
add
idivl
pop
and
scas
popl
dec
push
ljmp
sub
adc
fsts
fistpl
add
push
stos
jecxz
xor
xchg
sub
pop
loop
dec
or
mov
push
or
jge
sub
stos
pusha
icebp
or
pop
xchg
imul
popf
jne
cmpsb
jae
xor
pushf
stos
cli
push
and
or
shlb
dec
aad
fadd
add
jg
pop
test
cltd
test
in
inc
jae
sbb
inc
ret
daa
jle
sbb
ljmp
xor
adc
lret
or
xor
push
scas
aam
pop
xor
out
cwtl
sbb
push
aam
scas
jmp
jge
pop
xchg
pop
imul
adc
jno
inc
cmp
xorl
mov
xor
aas
jecxz
iret
gs
or
fs
in
repnz
imul
shl
pop
mov
xchg
ss
sub
mov
out
jb
inc
or
ret
push
scas
fildll
sub
lods
iret
test
neg
orl
mov
adc
imul
outsb
jmp
cmp
jle
xor
push
xchg
and
aaa
divb
clc
mov
sbb
lock
std
ja
adcl
jg
dec
arpl
mov
adc
mov
xor
push
inc
mov
and
or
dec
push
adc
or
pushf
sbb
fcompl
cmp
test
mov
fs
push
jle
xchg
or
bound
add
int3
cmp
loope
xchg
mov
cli
addr16
mov
push
in
adc
jecxz
xchg
xor
fisubl
movsb
push
inc
pusha
cmp
mov
mov
and
icebp
adc
push
pop
mov
jl
mov
push
push
call
or
icebp
popf
ficompl
subl
sub
in
loopne
cmpl
insb
xor
test
mov
in
roll
sbb
and
fst
sar
jecxz
js
das
lods
cltd
popa
mov
jo
iret
bound
push
pusha
or
adc
pop
out
test
mov
xchg
popf
int
ror
mov
xor
add
push
int
mov
xor
xlat
icebp
sbb
push
fwait
mov
jecxz
les
push
stc
ljmp
shrl
xor
fs
push
loopne
loop
xchg
shlb
popf
ds
pop
addr16
rcl
hlt
int3
daa
scas
and
pop
jmp
stc
adc
mov
cmpsl
dec
lahf
and
sub
loope
xchg
dec
push
clc
stc
icebp
mov
int
out
inc
into
mov
add
aaa
jo
and
pop
hlt
mov
xor
xor
dec
ds
mov
in
fwait
dec
movsl
push
pop
insl
mov
imul
or
cmp
mov
call
imul
je
dec
js
fildl
addl
fisubrl
jnp
hlt
mov
xor
loope
sbb
jbe
mov
imul
rcll
lahf
pop
xchg
push
sbb
jae
sbb
movsl
clc
jne
xchg
rcrb
inc
test
xlat
xor
inc
repz
fwait
loope
daa
dec
test
lods
xor
dec
in
mov
sahf
scas
xor
lea
out
and
sub
lods
sbb
add
cmp
pop
call
outsl
lahf
arpl
insl
jno
aad
mov
sbb
pop
add
push
jl
push
xchg
xchg
test
outsb
ficoml
mov
int3
xor
xor
jecxz
mov
and
cmpsb
mov
sbb
sti
jbe
dec
addl
or
test
fsts
dec
sbb
ja
lcall
sub
pushf
or
xor
ja
inc
sarb
sbb
sarb
mov
adc
xor
jns
movsb
push
inc
xchg
cmpb
hlt
inc
aas
mov
cmp
insb
or
push
dec
mov
inc
pop
sbb
popa
aad
out
xor
sbbb
std
pusha
daa
insb
mov
es
ror
jns
imul
loop
jl
or
xchg
or
lods
pop
jne
out
and
pop
push
hlt
int
or
int
fs
add
jne
fistps
cs
icebp
out
scas
xor
pop
mov
repz
cwtl
test
movb
mov
or
aas
push
xor
adc
push
or
inc
test
test
and
imul
jp
loopne
xchg
cmp
cmpsb
mov
lahf
das
adc
adc
and
or
movsl
inc
pop
add
cmp
jo
mov
inc
pop
sbb
and
out
or
push
dec
jo
xchg
xchg
sahf
data16
pop
adc
cs
add
inc
adc
mov
out
lret
and
aas
cmp
rcll
dec
ficoms
sub
loope
dec
inc
ror
inc
mov
mov
movsl
ja
jmp
mov
jns
push
cmp
xor
imul
inc
and
push
and
mov
imul
and
add
push
mov
pop
clc
call
xor
xor
xchg
and
fstps
dec
and
xor
inc
sub
mov
and
pop
pop
sbb
daa
pop
dec
dec
clc
aas
xchg
cmpsb
add
cmpsb
sbb
adc
jmp
push
push
add
pusha
or
pop
cld
lods
ret
push
push
adc
adc
sbb
mov
or
stc
pop
inc
jne
sbb
mov
lods
bound
sub
cld
jmp
inc
imul
xchg
mov
xchg
jb
push
push
mull
add
cmp
inc
dec
add
aam
mov
jne
dec
mov
adc
inc
mul
in
xchg
sbb
sub
sahf
fwait
inc
sbb
fcomps
call
loope
mov
mov
loop
pop
xor
push
adc
pop
xchg
fiaddl
or
lcall
cmp
xchg
daa
test
aam
fdivl
out
popf
mov
inc
lret
mov
addr16
in
faddl
ja
mov
stos
insb
push
negb
fistl
shll
adc
jnp
pop
adc
sarb
sbbb
xor
jge
mov
dec
cmp
movsl
pop
dec
adc
orb
faddl
movsb
pop
pop
out
push
in
cmp
pusha
popl
sub
outsb
push
dec
nop
jno
mov
data16
jp
push
cmpsl
inc
xchg
jge
es
ficomps
cmpsb
mov
mov
sahf
push
xchg
lea
fdiv
mov
lea
cmc
jns
inc
xchg
push
add
or
repnz
pop
sub
push
add
icebp
aam
and
or
loopne
mov
stos
jge
mov
in
jecxz
cld
ljmp
imul
push
or
lods
les
mov
sahf
xchg
aam
push
shr
fistpll
cmc
jge
cmp
addr16
push
jle
sub
sbb
aad
cli
cli
aad
pop
adc
shlb
loop
add
lods
or
movq
mov
cmpsb
outsl
ret
adc
fdivrs
popf
loop
sar
lods
pop
bound
mov
push
movb
and
shlb
xor
shr
lcall
dec
adc
push
sahf
xchg
out
arpl
lds
mov
stc
sub
test
int
add
imul
mov
xchg
and
aas
dec
jns
lret
and
into
loope
loopne
shlb
cmpsl
iret
outsl
mov
sbb
xchg
mov
out
sbb
int
mov
mov
xor
out
or
cmc
inc
jnp
xor
or
or
xchg
lret
cli
add
std
cmpsl
clc
insb
add
cmc
popa
or
inc
lds
stc
mov
inc
pop
push
xchg
ja
dec
cwtl
js
clc
pop
mov
push
push
mov
mov
movsl
mov
pop
ror
imul
jp
mov
jge
repz
leave
xor
repz
jmp
xchg
dec
xchg
stos
push
imul
push
push
rol
push
inc
xchg
out
inc
xchg
push
sbb
push
lods
repz
cs
mov
push
cli
or
mov
std
mov
xchg
xchg
dec
xchg
movsl
leave
lods
stos
push
cmp
or
jbe
jb
leave
xor
in
out
call
cmp
fnsave
inc
add
in
cld
cmpsb
pop
sub
sub
inc
jg
mov
dec
add
in
pusha
fildl
pop
push
js
int3
popf
and
lret
or
push
lahf
mov
pop
shll
xor
or
xor
leave
aas
jbe
push
mov
mov
test
gs
cmp
push
movsl
in
or
adc
repnz
cmp
and
mov
add
sub
in
pop
in
sbb
lea
hlt
xor
cmp
push
mov
cmp
or
pop
jbe
cmp
les
bound
push
out
sarb
xchg
cmp
jl
sub
push
sbb
and
mov
lret
inc
cwtl
shrb
outsb
mov
mov
sbb
out
sub
in
mov
hlt
push
xor
mov
out
xor
and
pop
shlb
ljmp
add
sbb
dec
ret
mov
add
dec
or
cmp
sub
adc
or
fistps
cmp
fldenv
xchg
mov
adc
mov
xchg
arpl
fs
xor
in
movsb
add
aam
sbb
leave
pop
jae
mov
adc
jmp
pusha
add
cwtl
aad
cmpb
testb
leave
add
push
xchg
repz
xor
xlat
sub
loopne
mov
adc
das
mov
loop
sbb
data16
mov
xor
cmp
stos
mov
pop
daa
push
or
add
jecxz
sahf
loope
xchg
pop
popf
cmp
aad
xor
mov
pop
dec
loop
cmpsl
mov
jo
sub
inc
mov
shrb
dec
icebp
pushf
dec
iret
adc
lcall
or
cld
shlb
ja
lods
sub
out
adc
sub
mov
fisubrl
adc
lock
jge
and
int
clc
cmpsb
jnp
outsl
inc
pop
xchg
push
rcll
push
dec
sahf
jnp
ljmp
mov
xor
sbb
inc
jl
jmp
and
cwtl
mov
int3
jno
movsl
outsb
xorb
push
xor
and
jnp
data16
pop
mov
imul
repnz
les
push
xor
cwtl
mov
push
or
enter
in
cmp
mov
push
add
dec
out
or
mov
push
adc
jecxz
or
and
inc
fs
fucomip
and
or
xor
leave
daa
ss
push
cmp
sub
fimuls
cmpsb
loope
xor
jle
mov
ljmp
loop
fistps
mov
mov
or
mov
mov
mov
mov
adc
mov
push
lret
sahf
ret
and
lods
or
sbb
push
inc
out
mov
mov
dec
jns
fisubrs
adc
jp
lret
pop
sahf
icebp
decb
dec
repnz
lret
dec
cmc
jae
sub
and
movsl
pop
mov
int3
arpl
in
xchg
gs
xor
xor
lret
pushf
das
movsl
sbb
cmp
hlt
and
rcll
jle
dec
cmp
mov
out
rorl
and
push
cmpsb
dec
scas
sarb
mov
xor
inc
pop
sbbl
push
mov
jo
movsb
in
scas
imul
push
cmp
pop
jno
dec
inc
sub
pusha
stos
or
or
lcall
mov
mov
je
xchg
and
pop
xor
pop
lock
enter
stos
aam
mov
sub
xor
xlat
sbb
stc
leave
sbb
jecxz
sbb
sub
aas
aad
pop
adc
add
out
push
adc
jns
mov
xor
insb
gs
mov
adc
in
jnp
lds
sbb
cltd
mov
jbe
pop
mov
sbb
xchg
mov
movsl
sub
lods
les
cmp
in
nop
dec
pop
add
in
push
lods
mov
popa
mov
mov
fisubs
mov
or
cmpsl
push
and
loope
pop
dec
push
jle
mov
xchg
add
ljmp
iret
sbb
into
aad
mov
sub
mov
or
adcb
loope
mov
lods
xchg
sub
add
mov
inc
gs
push
data16
cmpsb
dec
int3
mov
bound
frstor
mov
lds
mov
scas
pop
mov
cmp
jae
das
pop
ja
jno
pop
add
roll
data16
je
mov
bound
fstl
loope
xchg
sub
xor
fcoms
xchg
into
popa
ljmp
adc
dec
icebp
jne
xor
lret
xchg
xchg
mov
push
rolb
mov
and
ret
adc
xor
adc
enter
jns
xchg
movsb
addr16
loop
lock
inc
mov
ja
insl
xchg
into
add
or
ljmp
dec
sahf
sbb
movsl
pop
cmp
out
mov
add
ja
mov
xorb
addr16
push
xchg
cmp
je
cwtl
push
loopne
in
outsl
dec
iret
ja
xchg
lods
add
je
and
in
inc
pop
lcall
ret
cs
in
push
popf
ja
int
cs
in
incl
adc
dec
mov
rclw
imul
nop
std
adc
sub
divb
test
mov
inc
xor
mov
xlat
aam
in
mov
repz
add
push
add
and
popa
xor
imul
pop
lcall
ja
adc
jp
and
repnz
in
mov
fwait
cld
rorl
aaa
ss
icebp
xchg
iret
ret
or
jno
aad
out
xchg
xor
push
dec
inc
aad
lods
mov
or
fists
sbb
jge
adc
mov
fcmovb
xorb
fs
adc
xchg
mov
dec
mov
pop
sub
mov
les
fs
mov
out
insb
mov
jmp
cmp
shlb
push
xor
cmp
test
mov
mov
std
and
inc
enter
cli
xor
ror
ds
push
clc
arpl
mov
ret
pop
cmp
hlt
fists
inc
push
cmp
inc
dec
mov
out
loopne
call
sahf
xchg
lock
pusha
test
in
idivb
or
and
cs
aad
mov
test
add
movsl
xor
mov
daa
and
call
fwait
xchg
mov
xchg
test
jp
or
add
mov
jecxz
push
fwait
inc
cmpl
pop
xor
mov
loopne
xchg
cmpsb
cld
pop
push
cmp
adc
faddl
sub
mov
aas
push
xchg
ficoml
ja
xor
push
stos
imul
cmp
ja
imul
cltd
fwait
arpl
std
cmp
xchg
jge
mov
mov
scas
push
mov
leave
mov
shr
iret
iret
lret
mov
faddl
dec
lret
pop
adc
fsubl
mov
lret
insl
sbb
divb
iret
cs
cmp
pushf
jl
in
jno
outsb
mov
pop
stos
jnp
sarb
dec
stc
pop
pop
mov
xor
xchg
push
xor
inc
sbb
pop
outsl
add
in
pop
les
fisttpll
push
and
insb
add
pop
in
add
cld
jmp
xor
mov
sarl
hlt
js
push
cwtl
mov
stos
sub
pop
adc
sbb
mov
faddl
js
stos
sbb
bnd
push
lcall
jo
mov
jns
xchg
imul
adc
arpl
sub
dec
lds
out
jl
fmull
jns
inc
insb
stos
pop
aas
inc
ss
push
dec
fsub
inc
ficompl
cmp
int
subb
and
hlt
pop
cmpl
mov
sbb
or
pop
sub
xchg
orl
inc
lods
stc
mov
es
mov
aad
enter
imul
sub
fsubrp
push
imulb
sbb
xchg
dec
jp
ret
ret
jp
mov
sbb
adc
mov
push
sbb
loope
icebp
push
dec
sahf
pop
sub
stos
cwtl
lods
ror
shlb
sub
lcall
dec
adc
add
decb
inc
push
push
xchg
dec
mov
dec
inc
test
enter
xchg
ljmp
and
adc
clc
jo
movsl
bound
add
adc
lret
ss
inc
push
xchg
fistpll
push
into
dec
je
test
sbb
scas
imul
out
test
mov
jae
sbb
xchg
mov
loopne
out
mov
adc
cli
loop
movsl
add
std
jne
and
sub
in
test
push
cmpsb
mov
outsl
and
fcoms
mov
inc
jp
push
shlb
inc
xchg
gs
insb
rclb
pop
sbb
sub
add
negl
inc
test
into
inc
mov
mov
es
add
mov
inc
ljmp
lods
pop
lret
fcoml
adc
aas
data16
repnz
fildll
arpl
int3
dec
test
inc
sub
lds
dec
mov
int
mov
mov
pop
add
loop
and
xor
enter
fcompl
sub
mov
lea
xor
push
out
cmpsl
pushf
insb
arpl
mov
jns
xor
inc
mov
pop
mov
repnz
xchg
cmp
jno
inc
pop
xchg
in
mov
test
ja
xor
jg
shrl
sbb
cwtl
fwait
iret
nop
adc
cltd
js
arpl
fsubrs
pop
xlat
push
fidivs
jge
add
cmp
and
mov
daa
push
aas
mov
add
xchg
cmpsl
and
jp
xchg
push
jmp
cmpsb
sbbb
out
cwtl
cli
dec
xchg
push
int3
outsb
jne
mov
sti
mov
xchg
pop
jle
mov
or
mov
xchg
gs
repz
int3
into
ficoms
dec
push
push
stos
cmp
hlt
addr16
push
mov
stc
dec
inc
dec
push
icebp
and
stc
out
jmp
mov
in
pop
faddl
std
sbb
xchg
ds
push
fbstp
fmulp
andl
aaa
jge
or
cs
mov
pop
sbb
inc
or
push
ljmp
fdivs
inc
scas
mov
and
jo
iret
push
xchg
rcrb
sbb
mov
mov
mov
sti
xor
outsl
mov
push
pop
dec
out
xor
push
cmpsb
popa
test
mov
pop
loopne
pop
inc
nop
bnd
outsl
stos
repz
or
sbb
insl
sbb
sbb
xor
lea
std
or
std
push
iret
add
jmp
cmpsb
nop
pop
jno
or
loope
adc
sbb
das
dec
mov
pusha
xchg
jge
push
shlb
sub
sarl
pop
mov
out
loopne
rclb
shl
mov
or
loop
push
cli
das
mov
es
aam
adc
add
ds
lods
dec
mov
pmuludq
fstpt
sub
mov
cltd
jo
inc
std
mov
fcmovbe
out
jnp
push
out
ret
arpl
fst
mov
popa
nop
jno
dec
rolb
jecxz
inc
int
jp
cld
xchg
enter
sbb
and
xchg
and
lcall
dec
lea
fnop
add
sub
nop
fdivrs
nop
sub
add
dec
jno
sub
mov
ficoms
or
fwait
lods
ss
cld
sub
daa
lock
call
adcb
shl
sbb
mov
out
mov
and
mov
movsl
in
push
pop
mov
xchg
xchg
pop
sar
aad
repz
outsb
sub
dec
mov
dec
lahf
fwait
mov
in
cmp
inc
adc
popa
fcmovu
arpl
test
mov
inc
adc
bound
cmp
dec
lods
hlt
cmp
aam
push
or
and
std
inc
lret
es
es
cmp
roll
ss
cld
push
ret
sbb
push
add
imul
fidivrl
das
mov
and
pop
enter
mov
sbb
inc
xchg
sbb
daa
cmp
push
push
pushf
insl
or
daa
in
stos
outsl
pusha
jns
ja
xchg
addl
lcall
test
decl
adc
mov
cld
jno
icebp
pop
out
nop
cmp
testb
insb
test
in
subl
shll
jmp
sbb
jae
dec
cmp
enter
push
loop
scas
loope
pop
jns
sbb
arpl
or
mov
mov
movsl
repz
aam
out
insb
adc
stos
lods
sbb
and
fisttpl
jne
push
sbb
lods
dec
inc
stos
sub
repnz
lret
cli
or
stos
repz
shrl
mov
push
cmp
jno
cwtl
cli
mov
inc
pop
insl
add
mov
and
shrb
cs
mov
fbld
pusha
inc
mov
dec
iret
xor
out
stos
or
test
int
lods
iret
mov
add
xchg
shr
jns
lahf
cltd
popf
xchg
jg
cmp
pop
data16
or
loope
jg
jmp
jle
in
mov
imul
mov
int
and
xor
fisttpl
fstpt
hlt
in
mov
sub
cwtl
mov
push
mov
fwait
sub
negl
jbe
pop
arpl
mov
dec
pop
dec
ljmp
sub
xor
push
ret
dec
jp
hlt
mov
div
add
push
jle
sbb
mov
es
pop
pop
sbb
jp
push
movsl
cmp
in
mov
sbb
daa
mov
or
jmp
fldt
outsb
xor
aam
outsl
icebp
mov
jle
fcom
inc
scas
in
call
roll
or
and
mov
call
and
std
cmp
mov
adcl
sbb
and
jp
ljmp
inc
out
or
and
rcrl
or
adc
clc
push
fldcw
and
mov
das
fs
das
dec
lods
mov
in
push
lcall
clc
dec
shlb
popf
fbstp
mov
jmp
lods
push
xor
mov
and
aaa
jg
xlat
hlt
sbb
dec
add
pop
movsl
push
or
stc
ficoms
add
mov
ret
leave
xor
das
dec
fwait
fs
sbb
push
or
xor
mov
pop
ret
push
adc
cmp
arpl
addl
dec
test
mov
imul
insb
pop
mov
xor
jl
into
xchg
and
mov
icebp
xlat
xor
dec
ja
inc
pop
jp
bndldx
jne
std
sub
add
gs
je
and
cmpsb
mov
jns
mov
add
push
sbb
mov
inc
pop
aad
dec
jb
mov
testl
mov
mov
adc
xchg
mov
pop
repnz
shrl
psraw
mov
sahf
cld
mov
push
xchg
mov
divl
cmp
into
scas
or
and
divl
fdivl
cli
mov
and
xlat
cmp
add
dec
mov
inc
testb
pop
cmp
in
and
adc
in
js
idiv
lret
cmp
mov
sbb
mov
cs
jbe
jecxz
jge
test
repnz
test
xor
xchg
xor
out
pop
andb
push
pushf
xchg
and
dec
lds
test
push
jno
aas
sub
mov
mov
mov
fmuls
xor
lods
outsb
mov
pop
and
lods
dec
cmp
jbe
adc
iret
out
xor
mov
push
lcall
mov
lret
mov
fsubrp
inc
mov
pop
jo
jle
aam
out
into
fdivrs
lock
daa
cli
add
push
inc
add
push
adc
inc
sub
xor
cmp
jno
push
push
in
jae
push
repnz
push
sub
or
jecxz
xbegin
lret
cmp
dec
loop
imul
sub
pop
lock
xchg
mov
cmp
lret
mov
mov
jmp
or
push
mov
push
dec
dec
add
leave
cmpsl
fisttps
add
jmp
mov
xchg
outsl
cmpsl
jbe
pop
dec
enter
mov
shll
jl
inc
in
pop
xchg
add
sahf
cld
push
sbb
repz
mov
jl
es
cmc
cmp
repz
addr16
popf
add
mov
sbb
sbb
aam
or
mov
pop
arpl
mov
mov
daa
faddl
es
imul
in
jbe
fisttpl
mov
or
insl
xchg
dec
shrl
sbb
dec
adc
cmp
push
lret
sahf
das
daa
push
lcall
out
cmpsb
sub
out
dec
fs
das
mov
in
xchg
jg
mov
mov
in
mov
pop
or
mov
sbb
xchg
push
add
lret
xor
inc
add
int
jmp
pop
insb
in
js
inc
lret
insl
repnz
ret
mov
aas
test
mov
push
bound
icebp
dec
inc
fcmovnb
jo
adc
jb
fbld
out
fs
xchg
push
inc
jp
nop
xchg
jge
arpl
js
push
add
fstl
sub
int3
sbb
mov
xor
dec
jo
mov
push
dec
mov
cltd
ja
cmp
in
movsl
xchg
loope
mov
cs
in
fisttps
and
cwtl
push
pop
mov
rcrl
iret
mov
sub
or
sub
dec
jp
outsl
or
not
inc
fwait
push
mov
jge
mov
mov
cmp
pop
xor
stc
and
and
mov
mov
cmp
je
push
test
call
stc
push
sbb
shrb
xchg
scas
adc
xchg
and
push
rclb
insb
lret
adc
mov
push
pop
sbb
adc
lods
sub
jne
cmp
insl
fidivrs
pop
lret
sub
pusha
or
dec
push
sarb
sti
jle
fcompl
xlat
in
aas
sub
fwait
outsl
cltd
cmp
cmp
addr16
mov
push
add
adcb
sub
sbb
aad
fnstcw
decb
fstpt
inc
add
jns
fiadds
add
rorl
pop
fistpll
sub
or
adc
pop
mov
xchg
cmp
imul
cmp
aam
mov
xlat
xor
fwait
pxor
pop
outsl
in
ret
mul
addr16
in
mov
adc
fs
and
mov
cmp
pop
push
pop
sbb
jnp
fwait
mov
cmpsl
test
jmp
dec
scas
lcall
flds
lret
add
arpl
movsb
out
push
les
in
movsl
fidivrs
xor
dec
jne
je
cmpsb
jecxz
mov
sbb
and
mov
pop
add
adc
aam
adc
enter
hlt
and
repz
adc
push
pop
pop
xchg
outsb
xorb
movsl
les
imul
pop
bound
mov
mov
pusha
add
mov
daa
pop
aaa
cltd
out
movaps
xchg
dec
addb
jge
clc
cmp
push
fwait
icebp
fisubrl
and
pop
movsl
arpl
sub
xchg
adc
jnp
xchg
xlat
pop
bound
xor
jnp
mov
fmuls
cltd
add
dec
in
lret
outsb
andb
mov
xor
dec
lahf
lds
cmp
inc
enter
fdiv
jge
inc
or
push
pop
jp
cmp
cli
pop
enter
jno
inc
daa
stos
xor
lods
in
hlt
insl
cltd
aaa
xlat
std
sbb
xor
int
sbb
iret
es
jl
out
inc
cwtl
mov
or
pushf
pop
movsl
xchg
lock
xchg
and
adc
lret
inc
pop
pmulhw
pop
mov
icebp
xor
ljmp
sub
lds
daa
jo
xor
mov
rorl
cltd
fwait
jmp
jp
jo
cmpb
leave
xor
dec
dec
push
addr16
push
movsb
jbe
cwtl
lea
or
push
jne
inc
add
xor
aas
mov
mov
stos
adc
mov
xchg
lods
sub
ret
popa
fnstcw
push
inc
jns
outsl
jns
ds
xchg
pop
rorl
and
dec
sub
and
sbb
js
cmp
adc
mov
xchg
cltd
xchg
imul
push
mov
xchg
aaa
inc
fsubr
test
mov
in
mov
testl
imul
cwtl
in
stos
filds
sbb
in
out
sub
pushf
cmpsb
mov
loopne
orb
jbe
push
or
int
cmc
fcomps
cli
jae
xchg
fidivs
sbbl
lods
sarl
insb
jecxz
popf
repz
rclb
out
addl
mov
adc
dec
sbb
div
pop
add
sbb
lea
adc
xor
or
adc
cmp
mov
mov
xor
es
fdivrp
add
and
cmp
mov
or
lock
ljmp
cltd
xchg
mul
test
pop
push
repz
leave
cmp
push
fmuls
aas
dec
xchg
loope
int3
xor
xchg
aam
xor
pop
dec
rorl
pop
inc
cmp
ficoml
jae
jg
je
xlat
mov
add
fwait
pop
insb
adc
pop
out
daa
out
inc
movl
test
or
dec
mov
cltd
xchg
sub
imull
sub
aas
pop
int3
pop
xchg
and
js
lahf
int3
out
mov
adc
xchg
and
into
divb
std
enter
xchg
daa
cmpsl
mov
sub
ret
idivl
dec
jmp
and
aam
and
inc
mov
xor
mov
repnz
aad
fwait
ljmp
xchg
xor
cld
imul
or
xchg
sub
std
push
mov
sbb
dec
push
push
rolb
fldl
cmpsb
or
add
movsb
xchg
push
popf
std
mov
rorb
repnz
insl
rcll
popa
mov
insb
mov
cmp
push
out
sahf
ret
add
out
mov
mov
les
popa
xchg
push
ret
mov
dec
push
fstl
sub
dec
mov
repz
jnp,pt
out
sbbb
lds
sub
push
mov
jge
cmp
cmpsl
or
ja
inc
js
cltd
movsb
cmpl
inc
sbb
rcr
mov
pop
das
mov
xor
inc
das
jle
add
icebp
xor
cltd
stos
mov
cs
data16
pop
dec
gs
arpl
lahf
jno
xchg
test
mov
jg
or
jge
add
leave
addl
mov
dec
jl
leave
xchg
cmp
cmpsl
out
lods
sbb
js
lods
daa
aad
adc
sbb
fstpt
mov
popa
addl
ffree
jg
xor
mov
loop
cltd
mov
cmp
mov
push
ljmp
scas
xor
out
test
clc
push
mov
aas
inc
mov
mov
sbb
jmp
xchg
lock
repz
push
pop
mov
cmpl
mov
repz
and
xor
sub
pop
xor
sub
xchg
imul
aaa
pop
std
outsb
sbb
xor
aaa
mov
mov
mov
xor
hlt
je
aad
fwait
inc
dec
pusha
or
dec
add
clc
sbb
jno
lods
pop
adc
les
add
sbb
xor
in
mov
loopne
inc
stos
jbe
mov
stc
push
test
jnp
into
sbb
ret
adc
dec
pusha
int
rorb
inc
faddl
std
xchg
mov
or
arpl
mul
mov
mov
sbb
inc
jp
mov
imul
or
rcll
call
shl
lds
add
or
ret
sbb
outsl
lret
or
or
loopne
jecxz
jge
sub
or
and
int3
push
imul
int
xchg
xchg
cmp
loopne
jecxz
shl
int
divl
xor
lret
and
push
stos
cmp
xor
lods
mov
pop
pop
lret
pop
push
int
outsb
pop
adc
and
adc
test
cld
ss
movsl
adc
mov
dec
lahf
ljmp
push
jecxz
pop
ss
out
xchg
add
std
add
or
cmp
xorl
cmp
cmp
test
mov
mov
stos
in
dec
mov
sub
mov
dec
push
in
notl
add
jns
mov
in
sahf
xlat
movsl
xchg
push
pop
iret
jnp
daa
adc
sbb
popf
jl
int
lcall
test
out
shrl
mov
testl
loope
scas
enter
xor
jb
mov
cmpsb
test
adc
jge
xchg
or
cltd
in
outsl
rorl
sbb
lock
adc
inc
inc
inc
stos
mov
lock
xchg
mov
cmpsl
fstpt
loopne
sub
mov
shll
pop
mov
mov
test
out
cmp
std
cmp
scas
push
and
gs
or
fwait
mov
jmp
mul
mov
roll
popf
in
cmp
dec
push
cmp
xchg
pushf
adc
ja
jno
pop
push
sbb
fists
mov
pop
fisubl
push
lds
push
push
inc
push
fsts
dec
lock
jg
ljmp
xchg
pop
cmp
imul
sub
mov
jge
popa
je
xor
jo
movsb
hlt
pushf
jecxz
cmova
jmp
iret
pop
lods
cmp
scas
sub
arpl
or
fcmovbe
pop
in
mov
pop
jbe
lret
aaa
adc
mov
dec
xorl
jo
sahf
test
xchg
je
les
int
xchg
repnz
cmpsb
fcmovbe
into
xchg
xchg
push
xchg
mov
jl
xor
cs
popf
mov
out
pusha
jne
sbb
testl
lret
jp
xchg
cld
xor
mov
clc
pushf
add
adc
sub
and
movsb
scas
mov
mov
movsb
std
sahf
rcrb
pop
xchg
lret
fmuls
sbb
idivl
test
sti
popa
or
xor
xor
and
fs
scas
sub
int3
push
cmp
insb
fprem1
push
dec
or
fcomip
outsb
and
and
js
out
into
jge
cmpsb
stc
lods
push
icebp
imul
fisttpl
jle
das
hlt
hlt
pop
imul
add
repnz
lret
les
or
lcall
xchg
pop
xchg
stos
outsl
xchg
sbbb
sub
inc
fsubrs
out
int3
inc
adc
fcomps
andl
lret
push
and
cmpsl
pusha
fldt
lods
insl
in
dec
je
push
shlb
mov
scas
inc
stc
or
xor
enter
xchg
mov
push
decl
mov
scas
stc
in
or
pop
mov
movsl
mov
mov
add
fistpl
scas
pop
int
cmpsb
rolb
inc
repz
pop
shll
das
inc
xchg
pushf
movsl
daa
sbb
inc
sbb
ret
imul
movsl
test
movsl
jg
sbb
cs
ds
ja
xchg
lods
sti
or
pop
pop
in
dec
outsb
pop
lods
inc
push
ss
stos
push
push
sti
xor
movsb
and
mov
mov
pop
mov
push
jae
cmp
fnstcw
pusha
pop
test
sub
jo
in
inc
outsb
pusha
not
aad
inc
scas
xor
mov
or
adcl
mov
or
aaa
inc
lahf
xchg
testb
popf
jp
pop
sub
push
jbe
shlb
ret
push
repz
movsb
fistpl
mov
into
dec
aam
cmpsb
mov
push
push
ftst
jae
divb
hlt
push
out
lds
sbbl
enter
jmp
mov
cli
xor
pop
je
stos
xlat
lahf
daa
sbb
call
ffreep
es
jno
shl
xchg
adc
jno
lds
notb
mov
jg
jecxz
dec
ja
or
ret
mov
xchg
jne
push
repz
sti
leave
insl
cmpsl
dec
in
loop
mov
cs
sub
fdivl
aas
push
mov
xchg
push
mov
imul
aam
sub
and
aam
fisubs
fmulp
mov
lods
rcll
ja
loope
loope
in
mov
and
jbe
mov
dec
push
das
movsl
shlb
or
outsl
jne
dec
nop
scas
shl
dec
add
cwtl
fmul
test
int
sbb
mov
pop
push
movsl
out
xchg
insl
jmp
or
cltd
shl
or
sbb
pop
adc
lret
cmp
movsb
loop
addb
aad
mov
mov
scas
sub
cltd
xlat
jmp
push
lds
dec
and
sub
insb
rcrl
mov
or
js
xchg
clc
push
pop
test
cmp
std
pop
mov
inc
mov
movl
pop
js
push
dec
push
iret
addr16
add
or
negl
mov
inc
xchg
cli
movsb
lret
pop
aam
mov
jecxz
mov
inc
mov
adc
rclb
in
int
out
out
or
les
push
rorl
orb
add
inc
mov
xchg
mov
es
repnz
sub
dec
rcll
stc
movsl
sbb
xchg
sub
jle
jmp
xchg
sub
mov
fxch
ffree
fwait
pushf
sub
mov
movsl
mov
mov
cwtl
mov
scas
test
nop
sbb
jle
out
dec
jae
addr16
fisubl
cmp
xchg
rorl
fnstenv
loopne
aad
jecxz
in
leave
mov
mov
movsb
clc
in
sahf
rolb
and
mov
scas
aaa
dec
mov
call
mov
pop
movsl
jmp
cmp
shll
aam
mov
insb
imul
jmp
pop
int3
shl
pop
lea
mov
test
lock
mov
or
jmp
arpl
stc
sub
in
xchg
pushf
popf
xchg
out
and
push
mov
jg
mov
push
push
outsb
xchg
loopne
mov
and
int
sbb
push
xor
sahf
repz
iret
fiaddl
xorb
pushf
jecxz
fwait
pusha
aam
inc
dec
cmp
ja
cmp
fnop
scas
mov
jge
cmc
inc
movsb
adcb
imul
mov
orl
lret
mov
adc
leave
dec
cmc
sarb
je
ss
in
daa
inc
add
andl
mov
or
lret
shrl
cmp
mov
popa
lock
mov
shlb
ja
test
lahf
mov
mov
stos
adc
fnstcw
and
cmp
imul
lcall
mov
pop
add
out
push
ljmp
out
mov
lret
xor
aaa
or
pusha
shlb
pop
stos
test
sbb
inc
imul
stos
inc
mov
lret
mov
mov
mov
sub
inc
into
cltd
xchg
push
loope
cmp
int
xor
popf
out
rorl
outsl
cwtl
pop
inc
icebp
imul
lret
cmp
inc
out
jmp
add
mov
popf
mov
clc
inc
fs
mov
out
mov
cmpsb
inc
cld
popf
movsb
adc
lahf
lods
iret
cmc
jg
insb
mov
cmc
adc
shl
lret
xor
push
jmp
lods
add
jle
mov
jno
fcmovb
cmc
cmp
xlat
pop
mov
push
xchg
jnp
push
fldcw
stos
rolb
mov
cld
sub
lea
jl
inc
lods
sbb
daa
jnp
lahf
sbb
test
lods
adc
mov
out
cmp
into
jl
shrb
adc
pop
popa
arpl
fcomp
adc
inc
ja
pop
sub
mov
fmuls
ljmp
testb
inc
cmp
or
sbbb
out
das
xor
mov
or
and
mov
into
fmul
push
jnp
call
add
mov
imul
call
dec
and
movsb
xchg
inc
push
cli
outsl
insb
je
fnstsw
mov
dec
aaa
and
dec
jecxz
leave
mov
divl
in
and
orl
hlt
repz
stos
lock
push
loop
in
cmpsl
cmpsb
rcrl
mov
cmpsb
out
leave
jns
sub
push
mov
mov
notb
add
out
pusha
pop
jb
movsl
popf
push
add
aam
sub
movsl
push
mov
inc
dec
dec
push
adc
and
xor
mov
lds
ljmp
dec
pop
fisubl
ss
xchg
push
pushl
pop
xchg
scas
inc
movhps
add
push
adcl
fistl
or
in
ret
outsl
shll
aam
push
mov
mov
mov
inc
sbb
aas
push
jo
jae
lret
ret
adc
mov
jmp
jae
cwtl
push
jo
jbe
inc
gs
hlt
imul
sbbl
xchg
xlat
sub
jbe
dec
inc
cltd
jg
bound
mov
out
fwait
mov
sbb
repnz
in
pop
mov
cmp
arpl
mov
jl
mov
cmpsb
push
cmp
xor
out
outsb
inc
dec
or
add
pop
adc
dec
sbb
add
or
jmp
scas
in
sbb
adc
pop
fiadds
addl
imul
aaa
or
mov
and
xor
test
test
cmp
fcompl
and
leave
icebp
out
push
adc
int
sbb
pop
adc
xchg
lods
inc
sbb
add
mov
adc
pop
ljmp
xor
lds
mov
out
shll
negb
ja
xlat
xchg
adc
test
mov
adc
mov
sbb
adc
aam
xchg
or
test
loope
add
push
arpl
push
pop
aad
or
jg
jmp
push
sub
sub
insb
jecxz
sti
cs
pop
xchg
mov
xchg
out
inc
jo
lods
sbb
mov
xor
mov
push
pop
nop
out
rcl
or
xlat
mov
cmc
lea
inc
mov
invd
fs
repz
sub
sub
inc
scas
mov
sub
out
loopne
data16
add
inc
test
mov
xchg
cmp
or
mov
ja
jecxz
mov
in
std
dec
mov
mov
into
dec
push
jnp
aas
dec
lret
adc
icebp
xor
sub
dec
jno
les
mov
shlb
pop
imul
mov
shll
pop
adc
pop
mov
out
xor
aam
dec
push
adc
je
daa
sbb
mov
stos
ret
inc
mul
popa
les
divl
cli
push
xchg
add
xchg
xor
test
rolb
cmp
jg
cltd
mov
int3
sub
outsl
and
mov
sub
jle
jmp
add
and
pop
push
lock
pop
mov
repnz
xor
add
push
rcll
xchg
inc
push
xchg
iret
dec
mov
mov
hlt
mov
stos
sub
das
std
movsb
insl
add
jno
mov
insb
inc
insb
ja
jecxz
add
push
sbb
sbb
gs
mov
rcrb
mov
mov
jg
pop
scas
dec
mov
stos
inc
sahf
mov
mov
rorl
mov
mov
outsl
sbb
lods
jecxz
mov
ss
lods
out
xchg
mov
mov
imul
mov
mov
addr16
mov
xchg
ljmp
pop
imul
add
std
mov
mov
inc
fimull
dec
dec
ror
xchg
xchg
jnp
ja
iret
repnz
rorl
in
mov
shrl
pop
fwait
cmp
mov
fwait
or
out
inc
sbb
iret
cmp
add
cmpsb
jge
lret
or
inc
jecxz
mov
or
fdivl
xchg
lods
bound
iret
fisttpl
xchg
add
int
fwait
dec
xor
push
dec
ljmp
or
daa
loopne
mov
inc
xor
sbb
jecxz
xchg
bound
cmp
dec
mov
addl
xchg
aam
jle
test
mov
dec
sub
mov
push
mov
jmp
testb
mov
icebp
xchg
movsb
mov
and
pop
sti
pop
dec
jbe
jne
pushf
pop
popa
mov
pop
xchg
inc
aas
xchg
inc
add
add
mov
jp
lret
dec
mov
js
daa
shll
cmp
push
out
por
cmp
std
in
pop
sbb
inc
or
outsb
lods
xchg
dec
mov
mov
push
mov
insb
addr16
in
add
sub
jne
xor
mov
daa
insb
jle
cmpl
lods
xchg
cmpsl
ss
push
iret
cmc
aaa
adc
ljmp
rorl
mov
mov
mov
mov
xchg
int3
test
mov
fwait
std
jns
cmpsb
inc
jecxz
sub
mov
nop
adc
xchg
clc
mov
sub
cmp
jmp
pushl
pop
mov
enter
or
cli
lcall
cld
inc
dec
cmp
mov
mov
lea
mov
out
aaa
and
std
mov
movsl
xor
int
fisttpll
nop
mov
in
adc
rolb
fildl
mov
xchg
das
lea
xor
push
xor
pop
mov
lea
ret
mov
cmp
in
mov
mov
push
cmpsb
repnz
mov
repnz
repz
pop
mov
mov
pop
shlb
cs
xor
push
leave
enter
mov
stc
cld
lahf
fildl
add
mov
jge
mov
dec
notl
adc
mov
gs
pop
loope
imul
data16
mov
sbb
and
mov
stos
add
loop
cmp
sti
leave
rclb
in
add
clc
decl
movsb
sub
mov
sbb
jge
pop
lahf
dec
rcr
lea
sar
mov
dec
ja
mov
sti
js
ret
ret
mov
mov
leave
push
pop
sub
std
pop
and
popf
or
clc
mov
dec
pop
xorl
sbb
mov
iret
pop
fadds
loopne
out
pusha
jnp
dec
in
lock
jle
or
xchg
pop
rcrl
fildll
shlb
lds
inc
std
int
add
das
add
ss
push
insl
push
xchg
lret
sbb
ss
bound
cmp
mov
jno
sbb
out
shlb
inc
and
aas
or
scas
sbb
clc
fscale
out
enter
xchg
lret
push
inc
or
out
adc
inc
mov
mov
cmp
xchg
or
or
dec
stc
lea
fisttpl
clc
pusha
mov
in
sub
shll
arpl
insb
xchg
in
aam
pushf
xlat
and
out
mov
xchg
js
ret
xchg
popf
xchg
ja
iret
dec
cmp
cmc
xchg
mov
rolb
sub
xchg
fptan
pop
loop
adc
mov
addb
imul
xlat
cmp
mov
cmp
dec
aad
in
xchg
jne
mov
jne
jle
sub
pusha
and
pop
and
rorl
lods
out
loopne
add
mov
cli
ja
faddl
sti
bound
leave
jbe
jl
jge
movsb
iret
scas
lods
daa
sti
outsb
in
pop
fstl
jp
add
dec
jo
sbb
mov
jb
jns
xlat
cs
rcrl
popa
aaa
test
fs
jl
and
fdiv
ja
add
clc
mov
lahf
cld
mov
xchg
cmp
mov
cmp
lock
xchg
clc
and
std
jae
dec
jecxz
xchg
movsl
jno
iret
les
sbb
mov
je
iret
bound
push
loopne
stc
fstpt
cmpsl
add
jb
jnp
das
add
sbb
pop
adc
jecxz
fldt
jp
mov
add
int
rcl
sbb
inc
inc
mov
je
add
and
mov
sbb
pop
int
mov
cmpsl
pop
and
les
iret
mov
imul
mov
in
add
ret
jae
jp
call
dec
cmp
mov
add
mov
pop
mov
xchg
push
cmc
loop
cmpsb
push
fisttpl
stos
mov
call
das
mov
cmpsb
dec
mov
cmp
fcoml
mov
and
push
xlat
shrb
cmp
in
xor
mov
dec
and
pop
mov
cli
lods
out
dec
pop
mov
adc
inc
cmp
paddd
pop
pop
lods
cmp
add
lahf
mov
shlb
push
loopne
sbb
out
or
lock
leave
dec
das
icebp
scas
pinsrw
push
test
and
adc
cltd
iret
ret
or
aad
xchg
das
or
sbb
mov
jl
int3
out
push
popa
sub
mov
ret
dec
push
pop
out
pop
fwait
or
in
movsl
ret
das
dec
push
cmp
mov
sti
adc
jle
xorb
cmp
enter
outsl
lahf
scas
scas
sbb
xor
mov
add
dec
pop
stc
dec
mov
push
cmp
lea
cmovne
push
fstl
mov
outsl
js
cmpsl
cwtl
into
mov
out
emms
adc
pop
push
mov
rcl
push
xor
scas
das
add
dec
xchg
and
mov
call
das
jp
xchg
push
sahf
popa
hlt
out
push
mov
mov
pushf
push
pop
cmp
adc
mov
and
inc
pop
and
in
xor
and
sbb
test
pop
push
data16
popw
outsb
xchg
or
pop
mov
mov
call
inc
fcmovbe
adc
add
jo
sub
xor
aas
sub
stos
jns
dec
pop
pop
pop
inc
scas
out
pop
push
xor
aam
mov
mov
int3
sbb
sbb
xchg
stc
cwtl
and
adc
and
imul
xchg
and
out
xchg
movl
cmp
sub
mov
pop
pop
inc
mov
mov
sbbl
push
cltd
xor
nop
cmpsl
lds
dec
jb
add
arpl
add
jmp
mov
jle
add
ds
daa
cmpb
add
loopne
lock
addl
and
push
adc
sqrtps
adc
stc
xor
or
je
hlt
xchg
ljmp
adc
lahf
lods
fmull
das
dec
push
mov
outsb
sub
je
pop
jae
mov
outsb
add
popa
sti
ret
mov
in
pop
lret
or
cmp
test
in
icebp
hlt
loop
push
pushf
mov
out
cmp
shl
and
sbb
mov
data16
adc
jne
pop
push
je
mov
imul
push
adc
mov
outsb
sbb
imul
addr16
push
aas
mov
dec
add
call
adc
jl
push
xor
or
add
sbb
shll
sub
pusha
push
aad
pop
lahf
ss
and
mov
cmp
xor
cmpsb
mov
in
mov
scas
stc
daa
or
cmpsb
sahf
inc
shrl
push
xlat
aas
cmpb
fucomip
popw
mov
sbb
repnz
dec
int3
call
mov
push
adc
data16
adc
push
repnz
out
pop
stos
push
jp
cmpsb
into
das
jle
lock
sbb
mov
jmp
out
jbe
outsb
push
mov
repnz
mov
push
push
in
cmpsb
iret
rorb
mov
xchg
push
mov
cmp
dec
lods
mov
lahf
inc
pop
adc
fisttps
and
jp
jae
rcrb
mov
ljmp
in
shll
dec
aas
test
lea
pop
dec
or
sbb
ret
fnstsw
sarl
lahf
pushf
sbb
cmp
sub
jp
imul
fld
push
sbb
movsl
push
xchg
dec
xchg
xchg
mov
sub
mov
add
div
or
cli
ret
jne
dec
dec
sbb
push
push
or
mov
shr
and
not
pop
mov
dec
inc
mov
imul
sbb
xchg
movsb
jno
or
xor
clc
push
out
push
push
push
add
fisubrs
jae
int3
jne
insl
js
dec
fwait
sbb
and
add
sbb
mov
pop
lds
out
inc
jmp
lock
fcomps
pop
sub
push
mov
adc
shll
xchg
add
test
je
lds
cld
mov
pop
das
in
add
inc
out
pop
cmp
xor
jl
sub
add
in
xor
mov
cmpsb
sbb
or
or
adcb
jno
rcrb
test
shlb
inc
dec
pushl
mov
movl
insb
mov
jno
push
arpl
loopne
jo
lods
inc
and
das
jo
mov
imul
jne
or
pusha
leave
imul
stos
faddl
lods
clc
mov
ret
sahf
adc
mov
mov
push
stos
dec
mov
dec
and
lret
dec
mov
xor
inc
push
or
les
mov
adc
adc
dec
inc
inc
adc
ret
lods
xor
mov
and
cmp
xchg
lahf
pop
xorl
push
dec
add
in
inc
dec
inc
gs
mov
push
dec
int3
dec
cld
mov
mov
add
jbe
push
mov
cmpsl
mov
hlt
xor
repz
std
test
outsl
push
test
icebp
jmp
dec
sti
lods
cmp
arpl
out
lret
hlt
icebp
or
push
nop
sbb
mov
sbb
shr
mov
clc
subb
add
lods
cli
ret
inc
stc
mov
cmc
cwtl
cs
mov
xor
mov
shl
mov
mov
add
mov
and
jae
mov
sbb
push
add
test
pop
clc
lahf
into
sahf
sub
and
jg
out
sbb
aad
in
ds
jae
jns
jle
pushf
jo
mov
jmp
rcrl
push
mov
popa
sti
xor
stos
inc
sub
leave
fucomi
sti
cmpsb
cmp
jecxz
addb
sub
xchg
mov
bound
mov
movsl
inc
lea
sub
fnstenv
inc
das
push
outsl
sbb
mov
push
push
and
cmpsb
js
clc
ss
mov
movsl
xchg
mov
in
es
jg
dec
xchg
pop
mov
es
nop
or
mov
js
and
xchg
daa
loope
aaa
mov
ja
insl
ljmp
lret
and
lcall
outsb
hlt
pop
leave
jo
insl
push
dec
and
leave
sbb
inc
aam
pop
es
push
ljmp
scas
jl
mov
inc
push
push
outsb
mov
arpl
insl
cmp
mov
pop
test
aas
cs
push
dec
pop
xor
std
add
add
xlat
mov
xor
mov
es
mov
jnp
je
pop
cmp
fs
jo
xchg
push
mov
sarb
les
sbb
hlt
lret
frstor
js
stos
mov
push
sbb
test
mov
test
inc
adc
jnp
push
pop
sbb
xchg
ret
jle
lock
cmpb
xor
jmp
inc
scas
or
xor
addr16
adc
cmp
lock
pop
lret
int
jae
push
jno
andl
or
shr
jmp
add
gs
and
lock
push
cld
test
mov
cmpb
sbb
int3
push
int
insb
dec
test
sub
dec
int
arpl
mov
dec
mov
push
int
sub
es
test
or
and
push
lcall
or
adc
aas
imul
xchg
call
xchg
jle
lahf
xchg
das
lods
push
xlat
iret
mov
mov
jo
cmpsb
jo,pt
pop
fwait
or
dec
call
mov
push
scas
outsb
xchg
sub
push
movsb
push
hlt
ss
iret
repz
and
xor
sbb
mov
bnd
push
jbe
jno
push
pushf
xor
jecxz
test
fwait
cmp
lea
repnz
outsl
inc
addr16
das
dec
dec
mov
cmp
and
and
pop
xchg
inc
pop
xchg
xchg
and
jmp
rorb
mov
mov
cmp
or
mov
test
pop
sbb
mov
mov
out
inc
fwait
pop
call
jno
movb
hlt
imul
pop
adc
dec
lods
ljmp
adcb
dec
mov
mov
adc
daa
push
sbb
js
aas
bound
test
subl
out
xchg
lods
and
int3
int3
mov
jge
out
test
add
popa
add
pop
inc
xchg
cmp
mov
pushf
pusha
or
jg
ljmp
jl
clc
jnp
mov
mov
mov
jp
aas
das
mov
leave
and
pusha
jmp
addr16
lret
pop
icebp
cmp
pop
and
xchg
xor
repnz
cwtl
xchg
jbe
stc
subl
add
outsl
adc
dec
cmpsb
scas
jge
testl
shrl
cmp
cmpsb
sub
xlat
cli
mov
pop
push
dec
shrd
mov
mov
fdivrs
inc
popa
ljmp
or
insl
int3
ret
pop
leave
stos
jns
pop
xchg
jne
mov
std
and
sbb
sub
rorb
mov
xchg
sbb
pop
or
imul
hlt
aad
mov
and
push
inc
mov
sarb
mov
sub
cmp
mov
jno
mov
pop
push
or
rolb
sarb
fwait
cmc
sbb
cli
arpl
pop
mov
subb
cmp
pop
jle
push
out
xchg
mov
das
aad
sbbb
pop
dec
popa
flds
xchg
or
je
mov
jns
nop
dec
jge
xor
cmp
test
mov
jmp
cltd
mov
and
in
adc
jae
out
jo
icebp
add
dec
cmpsl
stos
out
arpl
xor
cmpl
mov
shlb
jl
dec
ret
icebp
decl
rclb
cmp
and
mov
adc
mov
pop
pop
push
std
push
mov
mov
pop
cmp
test
out
mov
ret
cmp
cld
in
push
packssdw
xchg
or
push
shll
mov
add
xor
mov
cli
or
pop
fdivr
jnp
dec
mov
xchg
sbb
mov
add
iret
or
icebp
pushf
pop
in
aas
shl
fwait
xchg
dec
aas
add
jae
sub
mov
pop
mov
lret
push
mov
in
jp
out
testb
fwait
and
mov
fstl
das
stos
jbe
fsubrs
insb
sub
xchg
cmp
js
fwait
mov
test
into
xchg
mov
mov
iret
jae,pt
bnd
pop
and
and
xor
adc
sub
stos
clc
adc
or
xchg
xor
xchg
dec
add
negb
orb
stos
lret
or
inc
rclb
push
pop
sbb
inc
imul
test
jae
mov
add
out
jecxz
adc
js
lahf
fs
xchg
pop
jb
add
xchg
cmp
mov
push
mov
out
mov
test
mov
dec
mov
imul
lods
enter
fdivr
inc
std
adc
jne
push
movaps
xor
cwtl
call
popa
fwait
sbb
aaa
mov
repnz
jbe
and
cmpb
clc
mov
sub
das
or
cmp
cmp
add
scas
lret
movsb
repnz
or
nop
jl
movsl
adc
shrb
aad
mov
xchg
jg
stc
jbe
cmp
lods
jb
push
in
mov
not
add
lea
xor
test
shlb
andb
pusha
jl
mov
inc
dec
imul
stc
pop
insb
mov
pop
fmull
inc
dec
sbb
push
ds
dec
jo
jmp
mov
test
dec
lcall
bound
push
leave
cmc
pop
mov
mov
nop
adc
xor
stos
dec
imul
daa
pusha
mov
sub
inc
pop
push
mov
lods
ret
add
jae
adc
push
inc
lret
jp
add
jmp
push
fs
call
mov
mov
dec
gs
push
jne
mov
or
mov
dec
push
xor
outsb
adc
jae
push
and
in
mov
in
inc
mov
mov
aam
sub
pop
and
cmpsl
pop
xor
daa
insl
adc
pop
jl
into
nop
mov
fmull
sub
push
stos
mov
roll
inc
test
aaa
outsl
inc
stos
xchg
mov
fwait
dec
andl
arpl
mov
out
add
lock
cli
das
out
and
xor
xchg
aaa
xchg
pop
loopne
xchg
test
jne
adc
xlat
cmpsb
mov
xlat
adc
and
fimull
mov
mov
inc
fdiv
in
aad
clc
pop
push
cs
arpl
repz
xchg
daa
addr16
outsl
ja
push
jne
mov
mov
xlat
sbb
mov
test
mov
jle
sbb
insb
shrl
cmp
inc
clc
xorl
xchg
jecxz
lea
sti
fldcw
shr
inc
ja
in
mov
pop
jnp
loopne
test
testb
inc
jmp
insl
sbbb
push
or
push
pushw
stos
lds
js
sub
lret
lahf
lock
mov
fwait
mov
das
jl
stc
roll
push
inc
insb
cmp
mov
pop
mov
outsb
jno
shl
and
sti
dec
push
dec
mov
imul
dec
cld
scas
cmp
orb
jp
dec
pop
cmp
mov
jnp
int3
in
cld
xchg
loop
imul
sub
popfw
cmp
hlt
jne
jae
push
aaa
mov
cmp
and
adc
sub
enter
inc
sub
popa
cmp
add
mov
les
aaa
pop
and
popf
cli
add
and
loop
sti
mov
repz
mov
adc
cmp
jle
push
nop
inc
sbb
push
mov
bound
stc
mov
push
inc
cmpl
rcrb
mov
sbb
mov
repnz
cltd
inc
push
add
dec
jmp
dec
sbb
dec
cwtl
leave
adc
bnd
cwtl
mov
leave
push
mov
push
lea
dec
mov
ror
shll
popa
sarl
push
jg
jb
ja
lea
lret
sbbb
in
cmp
cltd
push
inc
ret
int3
jle
sbbl
push
mov
faddl
ret
mov
inc
xchg
xor
xor
xor
scas
sbb
in
rcrb
sbb
popa
mov
sti
dec
sbb
daa
jo
ret
lds
sub
test
cmpsb
push
insl
dec
sub
xchg
cmp
es
sub
xor
stos
adc
xchg
cmpsl
mov
imul
xor
jle
repnz
jae
jg
shlb
cld
mov
xorb
jp
jmp
mov
hlt
lock
cmpsb
push
or
stos
adc
incb
push
xchg
inc
or
or
scas
lahf
or
and
pop
jne
les
lahf
arpl
mov
dec
adc
das
lea
je
mov
icebp
jns
ljmp
leave
lea
enter
cmp
and
scas
mov
mov
add
lret
add
push
jo
pop
mov
fmull
dec
imul
mov
cwtl
fldt
fistpll
push
out
data16
movsl
fmuls
mov
jmp
mov
ljmp
pop
jno
fisubrl
test
xlat
daa
adc
push
and
out
test
das
pop
int
add
push
sahf
outsb
lods
nop
pop
jae
ljmp
adc
jp
inc
push
xor
pop
sahf
sbb
inc
in
cmpl
arpl
fstps
fiadds
mov
mov
ds
add
int3
or
out
mov
xlat
cmp
xor
xchg
cmpsl
cmp
inc
or
in
sbb
dec
xorb
inc
out
xor
jae
and
shll
data16
mov
fwait
xchg
int3
vandnpd
in
cmp
mov
stos
lods
or
xchg
shll
sbb
lods
jbe
push
mov
mov
jecxz
mov
sub
add
push
xchg
dec
out
pusha
repz
test
cmc
out
mov
movsl
ret
ds
mov
mov
mov
sub
or
ss
fs
push
xor
or
lcall
cmpsb
add
pop
fs
mov
xor
inc
cmp
imulb
popf
scas
or
sub
repz
mov
mov
add
mov
ja
sub
lcall
jmp
nop
in
movsb
pop
pop
adc
scas
inc
push
data16
prefetch
cmpsb
into
mov
and
mov
into
dec
lret
xor
or
hlt
pushf
cmpb
jne
dec
mov
mov
mov
mov
xor
insb
lahf
or
rcr
fcomps
enter
adc
daa
int
and
adc
imul
dec
loop
es
lds
ss
es
dec
cltd
sub
out
addr16
mov
xchg
lds
xchg
mov
mov
loope
xor
and
enter
cltd
xor
cmp
dec
adc
jae
or
cltd
ja
pop
mov
shll
mov
aam
cli
pop
sbb
rcll
cld
adc
mov
scas
sub
dec
sub
aas
jbe
int
js
adc
sub
shrb
movsb
mov
test
pop
jns
push
mov
mov
inc
xor
dec
add
scas
inc
or
push
lcall
xchg
out
in
ss
out
push
aas
jae
imul
mov
pop
pushf
ljmp
mov
cmp
xchg
outsb
cli
adc
and
stc
pop
mov
push
ss
push
pop
ficoms
sbb
fcompl
mov
cltd
sub
mov
add
push
mov
inc
push
push
or
fiaddl
outsl
loopne
pop
mov
push
call
lret
mov
out
in
dec
fyl2xp1
adc
mov
fcoml
loope
je
fnstcw
cli
enter
jp
lret
insl
outsl
sbb
cmp
pop
loopne
lret
data16
repnz
setns
lret
loopne
pushl
out
mov
fwait
mov
test
inc
mov
aad
in
aas
es
pop
mov
pop
and
pop
xor
icebp
pop
sub
sbb
ret
sbb
hlt
and
out
mov
sahf
mov
adc
scas
xchg
mov
sbb
lahf
mov
clc
add
add
cmp
mov
fcomps
xchg
movsl
mov
lahf
out
sbb
and
fadd
mov
push
imul
xchg
stos
or
xchg
adc
sbb
add
pop
push
dec
push
in
cli
in
int3
mov
mov
dec
and
cli
adc
shl
shrl
mov
inc
loopne
loop
jne
sbb
ja
add
jecxz
mov
xor
inc
aad
pop
push
sub
pop
dec
cmpsb
jl
and
or
xchg
adc
popa
jge
mov
clc
es
inc
testb
call
stos
mov
pop
inc
jno
aas
and
cmc
pop
int
scas
sbb
leave
in
std
icebp
pusha
inc
ret
xor
aaa
add
sub
sub
mov
hlt
in
push
pop
frstor
pop
or
xchg
or
xchg
cwtl
lret
gs
mov
or
sub
jns
sub
stc
xor
push
gs
andb
adcb
xor
ror
pop
and
outsb
lods
lods
sti
call
adc
shlb
push
sti
mov
or
pop
rol
jecxz
dec
lahf
sti
inc
in
pop
sub
inc
imulb
icebp
mov
movsb
popf
shlb
shl
pop
lret
add
das
push
rcll
jmp
and
xor
ret
aad
popa
pop
sbb
lea
repz
mov
add
dec
test
lcall
cli
or
cmp
test
mov
inc
adcl
xorb
jmp
in
mov
push
inc
pusha
dec
enter
mov
push
or
cmp
fisubrs
mov
aas
outsb
movsb
cs
xchg
or
scas
jne
or
jbe
dec
mov
xchg
ret
jecxz
jmp
and
in
and
dec
sahf
aaa
xchg
pop
enter
mov
enter
sub
cmpsl
cmp
sbb
push
je
sbb
cmp
jmp
fistps
into
sbb
mov
mov
out
xorb
nop
sbb
and
add
mov
mov
mov
jg
sub
insl
xchg
xchg
adc
gs
xor
fidivrl
mov
mov
fdivs
dec
imul
jl
push
add
filds
xchg
xchg
outsb
cmp
insl
gs
les
js
xor
fstps
js
mov
adc
pop
cmp
out
pop
push
es
xchg
mov
cli
inc
dec
sbb
xchg
adc
cltd
jmp
aas
loopne
cmpsb
nop
pop
mov
popa
lods
aad
pop
and
inc
sahf
lahf
mov
imul
cwtl
adc
pop
icebp
xor
xchg
push
mov
divl
js
mov
push
aad
dec
jle
fisubs
mov
xchg
imul
fcompl
popf
pop
push
lock
repz
das
icebp
jno
shl
xchg
mov
lods
dec
test
iret
cmp
lahf
sub
jno
mov
mov
xchg
aad
sbb
cmp
and
jge
ret
mov
jmp
mov
mov
mov
imul
sbb
or
daa
lahf
ss
popf
push
inc
rorl
jo
test
xor
add
jne
mov
in
or
mov
les
jne
cld
mov
pop
xor
pusha
mov
cwtl
inc
mov
mov
push
jae
mov
dec
lea
lcall
pushf
es
rcrb
lds
repnz
mov
enter
jbe
jmp
leave
push
rorl
ja
push
add
call
push
mov
roll
popf
dec
int
addr16
cmc
lahf
mov
repz
push
loopne
repnz
js
jne
ja
adc
or
jge
pop
jns
stos
xor
xchg
cmp
cltd
sub
call
fistpll
es
js
scas
sub
push
pop
aas
repz
push
fbld
lock
and
fimuls
idivl
stc
pop
inc
insb
out
roll
dec
iret
loopne
pushf
push
stc
dec
mov
loopne
loopne
movsl
mov
test
push
aad
mov
cmpsl
mov
aaa
mov
sbb
stos
pop
clc
sub
fbstp
lock
cmp
fsubs
repnz
add
jmp
fdivrs
or
mov
loope
lods
mov
je
push
enter
daa
dec
dec
cmc
aam
lods
lcall
bound
xchg
aam
orl
push
ret
or
mov
and
or
pop
mov
sub
pop
clc
das
in
std
adc
dec
ss
pop
insl
fcoml
add
in
mov
xor
es
dec
push
ret
adc
sub
push
or
aas
add
stc
sbb
dec
push
mov
mov
xchg
cmp
rcl
mov
and
xchg
and
int
pop
adc
lods
lea
int
xlat
mov
lds
ljmp
fistpl
adc
push
pushl
pop
xor
pop
icebp
push
test
add
mov
xchg
sub
xlat
ds
outsb
cmpsl
adc
cwtl
mov
inc
xchg
sbb
xor
cmpsl
dec
test
mov
cli
into
movsb
mov
sub
sub
lahf
scas
test
push
stos
xchg
or
xchg
mov
xchg
push
addr16
adc
add
int3
push
xchg
mov
insl
cmp
cmpl
or
lods
imulb
xor
rcl
mov
lods
mov
daa
movsl
xchg
nop
add
xchg
mov
jns
jle
sahf
push
test
mov
inc
xchg
pushf
xor
pop
shlb
sub
jae
sbb
popl
or
ss
add
std
ja
mov
jnp
inc
or
inc
push
inc
jge
movsb
cmpsb
mov
inc
addl
flds
popa
stos
sbb
jne
insl
mov
dec
cmp
test
push
repz
mov
nop
ljmp
or
sub
rorb
cwtl
push
inc
inc
adc
fnsave
out
scas
sub
mov
loope
arpl
cmpsl
jno
cli
dec
sbb
lcall
inc
test
sbb
std
jb
mov
lret
mov
cmc
jmp
mov
xchg
lds
cwtl
sub
pop
inc
fcmovnb
sbb
sub
lds
fldcw
cmp
sub
leave
fists
dec
in
mov
jg
shl
cmp
push
adc
inc
jmp
pusha
adc
cmpsl
insb
and
xchg
and
and
jmp
inc
sub
hlt
push
push
cmp
fidivrl
cld
lods
lret
sbb
or
repz
cmp
bound
cmc
adc
pop
stos
imul
mov
ds
test
orb
movntps
mov
lahf
into
popa
xor
jmp
inc
lret
sbb
lock
lods
repnz
xchg
stos
enter
xchg
out
punpcklwd
xor
aam
and
into
out
xchg
xor
cmpsb
inc
cmp
cmp
mov
stos
sub
gs
imul
aaa
pop
dec
xlat
add
scas
ja
inc
out
loope
pushf
fimull
ret
fwait
pop
push
dec
mov
cli
or
add
imul
movsb
xchg
out
inc
pop
cli
cmpsl
or
rcrl
out
cmp
aaa
leave
cli
mov
dec
cld
fistps
lret
outsb
loopne
popa
inc
ret
push
dec
inc
fistpl
ret
push
mov
xchg
shll
mov
jo
rorb
in
nop
fnsave
pop
jbe
ss
iret
mov
in
repz
test
sub
mov
sub
cmp
data16
test
inc
sbb
xlat
xchg
dec
add
push
mov
jge
mulb
xor
in
neg
fwait
sbb
push
addr16
xlat
push
adc
jbe
xchg
outsl
sub
out
out
cld
cmp
aas
jle
inc
jns
out
scas
and
sbb
pop
mov
das
mov
pop
mov
mov
add
insl
sbb
in
lea
stos
fs
in
das
mov
stos
mov
push
jae
dec
add
jle
rcrb
xchg
cmp
rol
frstpm(287
xchg
or
or
shrb
jno
neg
lds
cmp
outsl
mov
mov
lods
in
gs
pop
cmp
inc
jbe
sub
mov
push
andl
out
adc
ljmp
mov
test
inc
push
popa
hlt
add
xor
push
and
add
mov
push
jns
xchg
adc
adc
into
inc
jbe
pop
inc
cmp
movsb
jno
adc
xchg
or
xchg
icebp
sbb
inc
jne
adc
call
mov
jns
pop
pop
sub
mov
xchg
mov
pop
or
jne
iret
incb
popa
dec
push
test
add
jae
cltd
mov
iret
jle
sub
cmp
mov
stos
test
cli
mov
pop
xchg
pop
test
inc
xchg
dec
into
xor
xchg
fcomi
pushf
add
mov
enter
popa
rcrl
add
ljmp
fldt
cmc
mov
cmp
adc
sbb
jl
fistl
jle
lods
repz
bound
jbe
in
or
mov
push
lds
inc
mov
xchg
arpl
loop
stos
add
push
clc
adc
add
cmc
int
in
insl
dec
cs
jae
push
mov
into
hlt
std
xchg
mov
iret
sub
inc
jnp
mov
mov
test
jmp
xor
cmpsl
scas
xorb
xor
test
sub
add
testb
cmp
sub
push
aaa
cmp
int
scas
lret
xor
adc
adc
inc
cli
fmuls
push
jmp
jb
mov
jmp
inc
aad
mov
mov
cltd
or
jmp
scas
add
adc
aaa
sbb
and
sub
push
pop
imul
mov
push
or
test
cmc
dec
jmp
sub
fs
jb
pop
les
xchg
out
cwtl
or
adc
adc
jne
mov
add
cmp
adc
pop
and
push
pop
mov
inc
popf
pop
pop
xchg
cltd
inc
xchg
sub
and
mov
inc
jo
rorl
sub
fsubrl
push
or
pop
aaa
data16
lret
imul
mov
sub
jo
xor
pop
cmp
insl
dec
dec
hlt
shl
stc
push
dec
stos
pop
jge
or
pop
sbb
in
data16
mov
js
and
mov
mov
pop
mov
daa
aaa
int3
inc
sub
adc
xor
or
mov
shr
in
stos
sub
and
or
adc
mov
adc
subb
loopne
data16
out
xchg
arpl
ror
jo
pusha
addr16
push
pop
xchg
dec
std
pop
add
and
xorb
gs
push
jecxz
mov
mov
arpl
jns
mov
fldenv
test
sub
xchg
movsb
jne
shr
icebp
xor
mov
add
pop
cmp
xchg
jo
roll
jg
xor
pop
mov
xor
fisubl
test
lods
ss
xchg
dec
mov
dec
andb
aad
imul
pop
jl
jp
dec
add
cmp
das
out
mov
ret
je
mov
pop
mov
outsl
and
fdivrl
or
push
iret
mov
shrl
fcoms
xchg
loope
and
lods
nop
sbbl
fdivl
and
popf
adc
xchg
xor
gs
pop
out
clc
sub
xor
imul
xchg
cltd
shlb
sarb
rcrb
mov
push
scas
rolb
sti
jbe
fiadds
add
mov
mov
arpl
cmp
sub
inc
cmp
and
sbb
scas
inc
cld
xorb
push
pmullw
int
fs
fwait
in
pop
dec
daa
imul
test
pop
sub
fadds
addb
imul
fsubr
lahf
scas
dec
mov
dec
mov
and
dec
ret
mov
hlt
out
push
xchg
dec
push
pop
in
in
ret
cmp
sarl
xor
call
sbb
ret
out
out
lahf
sahf
inc
sub
jge
scas
mov
in
pop
dec
and
sub
outsb
jge
mov
hlt
dec
add
sbb
jo
xchg
loopne
sbb
push
adc
and
imul
dec
testl
rcr
xor
pop
mov
jmp
jmp
pop
std
mov
fisubl
sti
jmp
mov
cld
push
mov
cwtl
notl
out
fists
mov
jge
popa
lods
ljmp
rcr
and
mov
fidivrs
or
rdmsr
in
movd
push
mov
inc
popf
into
dec
ja
ja
fwait
cld
push
xchg
sub
push
addr16
inc
sub
adc
out
dec
add
fs
add
in
adc
scas
mov
jb
ja
push
cltd
xchg
pusha
test
mov
adc
cmp
sub
das
ja
or
add
jmp
pop
test
push
lret
push
les
push
adc
xchg
cmpsb
orps
push
adc
sub
mov
jbe
mov
aam
test
jp
imul
pop
insl
inc
lret
dec
xchg
ss
outsl
or
loop
add
lahf
xchg
cmp
xchg
or
jge
pop
fwait
adc
cld
repz
in
neg
icebp
lds
fwait
jg
xor
cli
pop
inc
lcall
gs
movl
test
inc
pop
adc
loop
mov
sbb
xchg
pop
loop
movsb
roll
lock
dec
jns
xlat
neg
adc
cwtl
jo
pop
xchg
lods
je
pop
add
adc
cmp
cmpsl
xor
and
mov
mov
xchg
pop
daa
bound
dec
iret
addl
clc
pusha
bound
sub
push
push
push
mov
jmp
pop
push
xchg
mov
add
sub
dec
mov
inc
add
xor
enter
fs
xchg
mov
dec
or
in
rcr
push
cltd
mov
mov
xchg
mov
and
es
jno
and
pusha
test
arpl
and
into
es
mov
jecxz
in
enter
imul
pop
xchg
adc
sbb
dec
punpckhdq
cmp
dec
ret
mov
idiv
fimuls
or
loopne
dec
inc
loopne
sub
das
sub
pop
xchg
out
mov
cltd
ret
push
mov
lock
fisubs
in
mov
lret
fwait
adc
cli
sbb
test
jnp
mov
push
xchg
test
movsb
and
icebp
sahf
add
dec
and
dec
adc
adc
stos
jae
dec
repnz
std
sbb
es
mov
or
or
ficoml
cmp
pusha
sub
jns
call
fidivs
jnp
jmp
xor
stos
testb
xchg
and
fdivs
xor
jae
das
pop
push
mov
std
arpl
xchg
sbb
pop
outsl
jbe
lret
movsl
dec
jo
imul
cwtl
stos
pop
into
out
mov
dec
xor
dec
push
mov
popf
push
mov
jb
jnp
cmp
lods
fcompl
ficoms
and
mov
jnp
mov
std
push
movsl
aad
repnz
je
cltd
out
fmuls
movsl
adcl
adc
imul
push
clc
push
mov
cmpsl
cs
xchg
mov
test
int3
daa
push
mov
pop
ja
insb
lret
int
mov
mov
fildl
in
xchg
adc
xor
into
mov
lea
outsl
push
xchg
cld
ss
mov
jl
xor
mov
pop
pop
and
test
scas
jl
aam
imul
dec
mov
js
mov
int3
repz
into
insl
dec
std
or
xor
movsb
jecxz
leave
shll
xor
push
fsts
pop
clc
iret
lcall
pop
in
xor
test
jmp
mul
fwait
aam
pop
les
push
cmp
in
mov
mov
data16
nop
int3
cmpl
loop
xchg
test
sbb
pop
stos
aas
sahf
fwait
xchg
call
push
aaa
cmp
jne
jns
push
outsl
andb
pop
sbb
arpl
fs
lods
fistpll
push
dec
pusha
mov
loope
je
mov
int3
inc
mov
aaa
aas
pop
jecxz
cld
test
in
loopne
dec
pop
in
movsl
sub
push
and
add
cmp
pop
cld
inc
pushf
push
icebp
faddl
add
or
mov
xchg
outsb
sti
jecxz
pop
outsl
add
sbbl
dec
jge
test
gs
jae
in
jb
scas
ret
adc
stos
pushf
push
adc
sub
push
adc
loop
push
or
pop
fld
mov
fidivs
mov
cmc
outsb
push
or
xchg
fidivl
mov
sbb
jmp
pop
movsb
pop
fcomp
mov
test
fdivrl
xchg
pop
and
xor
daa
lret
cmp
pop
or
aam
cmp
sbb
sub
dec
inc
mov
or
ljmp
daa
mov
fcoml
cmp
mov
lcall
daa
adc
mov
sub
fisttpl
sub
ss
mov
js
fstpt
movsb
insb
pop
xchg
jb
dec
scas
data16
out
sbb
xlat
jne
repnz
int
inc
and
adc
jae
mov
sbb
fcomp
sbb
ljmp
sbb
icebp
int
jae
inc
in
fcoml
or
lcall
or
mov
rclb
ss
enter
shr
push
or
imull
mov
adc
lret
icebp
lods
adc
insl
adc
pushf
test
leave
lock
call
repz
sub
add
cmp
rcrb
cmpsb
inc
or
stc
mov
insb
int
mov
lock
mov
mov
adc
mov
push
mov
or
int
fcoml
or
xor
mov
cmp
outsl
call
es
inc
das
xor
jns
aad
dec
and
test
xor
dec
push
call
xchg
lea
add
jns
loope
inc
cmp
cli
inc
add
notb
jb
lahf
mulb
movsb
or
jns
push
arpl
jo
bound
mov
or
push
pop
mov
or
lcall
frstor
js
cld
mov
push
mov
sbb
pop
in
test
dec
and
fidivrl
into
cmp
jno
adc
arpl
in
push
scas
jb
popl
mov
loop
lret
repnz
xor
add
loop
inc
fiaddl
push
add
stc
mov
mov
xlat
fldl
cmpl
inc
push
push
xchg
push
call
xchg
pop
sub
loop
mov
xchg
jns
out
rorl
mov
dec
pop
in
jne
mov
mov
inc
insb
pop
mov
xchg
push
push
xchg
pop
jmp
cs
lret
push
and
xchg
add
and
mov
jb
mov
xchg
popa
push
insb
mov
loop
cwtl
popa
insb
add
mov
jg
or
insb
jmp
jge
fstpt
inc
jae
pop
adc
cld
jmp
push
stos
fsubs
jg
incl
push
cmp
xor
rcrl
aad
inc
das
dec
sbbl
or
fldenv
and
ret
clc
out
dec
cmp
mov
xchg
idivb
rcl
je
gs
pop
outsb
pop
ds
push
jne
jnp
pop
xchg
sub
fbld
in
jb
dec
out
daa
and
cmp
movsl
pop
dec
push
pop
inc
sub
pop
cs
lcall
pop
add
pop
pusha
jae
push
in
incb
mov
jp
cld
popa
mov
mov
jno
mov
repz
cld
mov
jb
add
mov
pop
pop
jno
push
adc
pop
outsb
stc
out
xchg
mov
sub
adc
or
inc
stos
jp
std
fwait
push
dec
or
stc
iret
sub
loopne
stos
orw
lock
loopne
mov
add
mov
sub
push
dec
movsl
pusha
ret
sub
lock
mov
sub
out
and
inc
jno
xchg
mov
xlat
mov
push
jp
inc
movntq
out
sub
jnp
inc
jnp
push
or
pop
sahf
rorb
inc
addr16
push
mov
push
sub
dec
gs
jecxz
sahf
pop
hlt
jb
lods
or
jns
and
pop
in
stos
and
sub
jae
mov
and
mov
mov
adcl
dec
sub
push
xchg
sub
and
push
test
enter
xor
test
xor
xchg
pop
sub
xchg
mov
mov
lods
ljmp
je
cmp
fnsave
icebp
jl
push
roll
push
loope
dec
or
adc
lock
cmp
js
cmp
mov
sub
mov
jb
aad
jmp
push
adc
and
sbb
inc
mov
push
sbb
sub
out
cld
push
mov
aad
hlt
pop
jno
fldt
jno
push
pop
or
mov
fstl
mov
aaa
lea
inc
jns
in
jns
fildll
out
repnz
into
push
adc
rcrl
inc
push
xor
leave
rcl
nop
adc
es
cli
lds
lods
iret
test
sti
add
jnp
jmp
and
push
inc
ljmp
daa
adc
stos
mov
in
fcmovnu
das
lods
lods
inc
fsubrl
push
sti
add
jb
lods
out
xchg
negl
or
lods
int3
mov
fsts
sbb
jmp
lds
jns
dec
mov
mov
adc
adc
lock
divb
jge
stos
in
xchg
pop
mov
fldcw
insb
in
sti
xchg
fldl
push
add
fisttpl
pop
mov
in
aad
xchg
or
xchg
call
push
or
push
nop
mov
imul
adc
fsts
mov
sub
ret
fnstcw
in
in
popf
sbb
mov
and
xchg
popf
cmp
xchg
std
mov
jo
xchg
das
xlat
cwtl
mov
inc
cld
ds
jmp
push
enter
addb
mov
cmp
inc
xchg
jecxz
jno
mov
lock
insb
ja
imul
sub
pop
inc
fucomp
add
loop
aas
pop
jl
cmpl
inc
fstl
lea
sbb
add
fdivrs
out
cld
pop
push
enter
sub
dec
pop
jnp
mov
pop
jns
sbb
inc
mov
xchg
shr
cld
insb
rcr
xor
inc
sti
xchg
icebp
cmpsb
mov
sbb
or
jmp
arpl
push
pushf
int
rclb
gs
push
dec
mov
jecxz
fldenv
gs
inc
mull
iret
lds
loopne
dec
push
cld
call
sbb
jg
xor
sahf
or
es
pusha
sbb
fldcw
cld
adc
pop
dec
mov
inc
aad
mov
fwait
or
roll
inc
jmp
or
mov
push
in
adcb
ror
adc
out
sbb
dec
in
ficoms
fwait
sarl
test
mov
mov
ret
add
outsl
or
lods
dec
xchg
cli
mov
dec
adc
ret
adc
mov
cmp
mov
ljmp
mov
movntps
leave
jle
inc
repz
mov
add
xchg
lds
out
pop
or
fisubrs
iret
lcall
fldt
aaa
cmp
out
jnp
jbe
mov
fildll
std
inc
or
or
add
lahf
out
adc
or
or
jns
inc
push
jne
dec
pop
je
inc
clc
mov
or
repnz
jbe
jg
hlt
popa
or
push
cmp
mov
mov
fwait
add
mov
ret
insl
add
in
cli
mov
mov
cmp
pop
and
and
sub
inc
into
add
das
lret
das
mov
mov
push
les
pop
sub
div
das
cltd
sub
adc
sbb
jp
xlat
imul
lea
cmp
fwait
mov
idivl
test
cs
jno
sub
xchg
orb
pop
cld
sbb
adc
fs
test
push
jno
je
adcl
cmp
sahf
imul
xchg
pop
cli
in
sbb
xchg
mov
imulb
subl
pop
lock
push
jg
lcall
xlat
scas
orl
mov
mov
or
into
pop
mov
push
dec
sbb
fst
mov
out
xlat
adc
sub
out
xor
jns
mov
inc
loope
jne
std
fcmovnb
cmp
mov
loopne
das
fsts
cld
out
ret
and
imul
arpl
add
cs
pop
icebp
adc
stos
mov
notb
inc
adc
push
icebp
movsl
cmp
mov
fstpl
adc
mov
fsub
divl
shll
popf
insb
dec
and
pop
into
lock
sbb
adcl
sbb
fldenv
sbb
shll
pop
pop
inc
and
test
int
mov
xchg
cmp
leave
lods
outsb
ljmp
das
aaa
incb
jns
gs
pop
mov
test
popf
insb
insb
shrl
into
xor
jns
fcomp
jae
xchg
lahf
inc
scas
pop
push
ja
ret
inc
xor
in
pop
dec
fstpt
dec
es
popf
scas
and
pop
and
popf
mov
push
add
jnp
push
rcrb
repz
push
or
cmp
pop
aaa
das
cs
mov
push
jnp
push
adc
mov
or
pop
fnstenv
addr16
push
rcrl
xor
mov
out
insb
out
inc
ret
insl
cmpsl
and
and
xlat
push
dec
pop
stc
lods
jbe
mov
ds
icebp
repnz
pop
sub
stos
or
out
cmp
or
popl
xchg
inc
cmovb
test
xor
fcomi
popa
test
jo
or
pusha
lods
loopne
call
jle
pusha
int
and
popa
dec
mov
ss
or
test
pop
cld
xor
lea
rcrb
add
leave
fisttps
pop
dec
nop
shlb
outsb
xor
addr16
add
or
jo
lds
cmc
clc
test
stos
mov
enter
je
imul
shll
xchg
movl
and
je
call
mov
cmpsl
fisubrl
pop
je
xchg
mov
cmp
mov
sbb
pushf
mov
iret
icebp
sub
inc
pop
pushf
cmp
mov
mov
mov
jne
mov
cmc
subps
mov
mov
adc
test
sub
xorl
push
mov
jnp
lock
add
add
daa
inc
sbb
icebp
xchg
ret
mov
fistpll
xor
mov
xchg
pop
addr16
popf
inc
jno
xchg
in
cmp
std
xchg
imul
pop
mov
or
dec
sub
loopne
jno
fmuls
add
inc
jg
cmpsb
popa
stos
inc
data16
inc
jne
addl
shlb
pop
adc
out
ds
jle
push
fidivrl
push
push
add
gs
jae
jne
cli
mov
pushl
xchg
fcmovu
sbb
add
jb
sub
test
and
stos
std
xchg
repnz
sub
sub
sub
xorb
loopne
mov
sub
jbe
mov
adc
xchg
aam
js
jnp
sbb
ljmp
testb
fbstp
mov
into
xlat
es
cmpsl
out
cmpb
mov
add
hlt
mov
loope
pusha
mov
aad
jp
lret
mov
jnp
sbb
rclb
or
jge
mov
dec
mov
lret
sbb
dec
test
outsl
loop
std
cli
les
jnp
xor
xor
sub
fs
arpl
pop
stos
lock
int
iret
fdivrl
pop
pop
add
lahf
inc
insb
sbb
lret
sti
daa
std
mov
call
sbb
sbb
adc
pop
stc
xchg
or
mov
aaa
js
scas
jl
xchg
scas
cmp
fcompl
sub
add
sbb
push
mov
push
in
cmpsl
gs
xor
push
lods
gs
out
jno
repz
dec
mov
movsl
ds
cmp
mov
test
xadd
clc
loopne
jnp
sub
sub
dec
inc
data16
jmp
inc
mov
movsb
fdivr
xchg
jp
punpckhwd
mov
inc
in
mov
mov
cmpsb
add
xchg
xchg
adc
add
dec
loopne
mov
xor
adc
rorb
insl
ret
test
loope
xchg
push
in
push
mov
inc
aas
sub
mov
fldenv
call
sub
jb
xchg
out
adc
mov
add
sub
mov
mov
ss
in
test
push
and
shlb
add
aas
popf
dec
rolb
cs
andnps
or
xor
sub
into
jbe
rclb
frstor
cmpb
imul
push
xchg
ret
jle
rcrb
out
leave
jg
out
movsl
hlt
pop
adc
pop
js
out
lds
sarb
adc
cs
mov
mov
cld
js
in
cwtl
fsubrp
mov
lcall
jl
inc
loop
clc
xchg
pop
lahf
jmp
addl
add
pop
pop
xchg
lahf
push
adc
sbb
cmp
push
and
data16
lock
test
mov
lahf
daa
sar
xchg
popf
pop
mov
mov
jns
mov
jp
sbb
loop
mov
or
pop
imul
xor
pop
and
xor
add
fcomip
mov
push
dec
mov
fidivl
jne
shlb
jmp
jmp
repnz
mov
hlt
cs
pop
adc
mov
xchg
jl
mov
cmp
mov
jns
jb
and
push
add
lret
inc
dec
in
fsubs
adc
inc
jmp
fcomi
mov
popa
fucomp
jmp
daa
add
mov
sub
add
das
repz
repnz
cld
in
and
test
xchg
popa
jg
into
or
lret
pop
std
call
imul
jecxz
test
cmp
xchg
addr16
dec
sarb
cmpsb
or
and
jmp
inc
jp
adc
jmp
xor
jmp
mov
xchg
outsl
jo
push
popa
ret
movsl
xor
xchg
clc
push
loopne
dec
pop
mov
repnz
pop
xchg
sbb
jecxz
shll
or
inc
rcrl
daa
push
mov
mov
sbb
xor
jno
addr16
xchg
jp
test
dec
xchg
inc
or
mov
cmp
mov
jbe
add
pop
dec
cmp
and
lea
cmpsb
add
hlt
mov
cltd
sbb
mov
cmp
lods
or
cmp
xchg
mov
adc
popa
pop
ficompl
cmpsl
adc
movsl
jbe
cli
cltd
js
mov
add
add
and
jl
adc
sbb
outsl
mov
nop
rol
jae
inc
sbb
aam
cltd
in
insb
jmp
pushf
popf
cli
pop
ret
sub
jecxz
lea
lahf
mov
data16
imul
mov
fnstcw
add
sbb
add
in
aam
jg
sbb
pop
jbe
ror
mov
push
fnstcw
int3
pop
stos
fdivl
in
and
dec
enter
dec
out
dec
lods
call
and
sar
in
loopne
incb
rol
shl
ds
inc
mov
push
incl
test
andl
mov
push
lods
or
mov
out
ret
jnp
rolb
ds
pop
outsl
js
add
test
mov
jl
pusha
subb
int
imul
mov
ljmp
cs
lret
xchg
adc
arpl
and
or
pop
jbe
cmpsl
adc
ja
jb
fdivs
mov
lcall
gs
sub
jle
ds
dec
mov
cltd
xchg
and
stos
nop
in
mov
int
mov
rolb
ds
out
ljmp
fisttps
xchg
pop
outsb
into
cmp
sbb
out
pop
sub
shr
cld
insb
adc
lret
jl
test
imulb
push
fisubrl
test
in
add
shl
subb
int
jne
cmp
pushf
sbb
addb
call
xchg
clc
sbb
lea
dec
mov
stos
inc
loop
fs
repnz
or
addb
add
outsb
sahf
icebp
das
mov
cmc
jecxz
test
mov
or
arpl
mov
movsb
roll
fs
repz
sbb
sbbb
sbb
enter
enter
in
fs
pop
jo
or
test
push
mov
divb
mov
adc
test
scas
out
or
icebp
in
icebp
jle
mov
jecxz
and
and
xchg
and
lret
cmp
mov
xlat
cmp
sbb
les
jnp
mov
xlat
gs
popa
pop
out
and
aas
out
or
scas
mov
stos
int3
mulb
mov
adc
xchg
jge
sahf
lock
aaa
lods
pusha
stc
push
mov
or
int
push
movsb
andb
sub
data16
xor
mov
sbb
mov
ljmp
test
cmp
and
adc
xchg
pop
aaa
push
jmp
inc
bound
cmp
enter
fdivl
lds
in
cmp
daa
sahf
adc
cmc
pop
stc
jo
shrb
mov
test
pop
sub
jmp
add
dec
dec
dec
push
test
aaa
jmp
cmpsb
sub
pop
pop
inc
scas
cld
rcll
fcmove
ljmp
rcll
xor
push
mov
or
mov
sbbl
xlat
repz
test
push
lea
inc
sub
xor
aaa
push
dec
lds
nop
xchg
inc
mov
sti
lcall
dec
insb
and
xadd
sub
dec
or
mov
into
jle
pop
nop
mov
xchg
arpl
push
jb
sahf
aad
bound
pop
addr16
sub
jae
out
out
push
outsl
sbb
stos
aaa
xchg
cld
out
and
push
into
and
sbb
lock
cmp
fwait
or
insl
sbb
jo
shrb
xchg
xlat
clc
pusha
xor
cs
ljmp
cmp
scas
fldenv
inc
push
adc
mov
ret
mov
dec
mov
insl
mov
pop
icebp
rorl
sub
jns
mov
fimull
jbe
outsl
outsb
dec
das
lods
xchg
jae
mov
inc
pusha
mov
lds
or
jbe
cmp
inc
and
dec
fnstsw
xor
out
and
fistps
adc
xchg
push
fiaddl
mov
jb
adc
ja
xchg
push
push
pop
jo
imul
sub
mov
cmpl
dec
cs
in
dec
pop
sub
inc
scas
scas
mov
jge
jb
sub
push
outsb
mov
push
lods
dec
inc
sti
nop
mov
ficomps
lcall
xor
stos
ljmp
aam
rol
jmp
iret
rclb
fs
mov
add
mov
add
sub
jae
add
adc
icebp
jge
mov
jnp
je
pop
mov
dec
movsl
mov
jo
iret
jnp
xor
push
aas
ds
fisubl
pop
jecxz
in
xor
stos
push
pusha
push
sub
mov
inc
pop
jge
adcl
nop
dec
fcoms
fwait
jmp
stos
dec
pop
mov
mov
jbe
je
hlt
jge
jg
mov
mov
cmpsb
movsb
enter
xchg
rcll
fwait
ss
sti
jbe
mov
adc
push
lds
sti
xchg
clc
dec
adc
outsl
and
and
out
mov
pop
std
fsubrs
fdivrl
inc
fwait
adc
lahf
mov
test
sbb
inc
aad
lret
scas
cmp
adc
cmp
jae
les
mov
cmp
push
sti
sar
xor
dec
aam
mov
pop
jmp
pop
les
jb
mov
sahf
xchg
ljmp
or
add
jmp
jns
cmp
into
mov
inc
ret
repz
mulb
pop
cmp
dec
adc
jnp
cmp
mov
leave
adc
sub
mov
insl
in
xchg
adc
nop
cmp
lock
lds
cmp
dec
icebp
insl
idivb
test
or
jno
addb
pushf
and
out
jb
push
xchg
pop
mov
cmpsb
iret
push
loope
adcl
mov
or
xlat
jle
mov
jl
std
mov
xchg
mov
fiadds
sub
ret
in
in
push
pop
xor
push
mov
ss
out
and
in
push
push
jo
mov
adc
inc
cwtl
bound
mov
loopne
mov
stos
mov
push
jb
pop
xchg
pusha
in
cmp
cmp
mov
push
mov
fcmovbe
pop
lret
sbb
stos
sahf
push
movsb
stos
cwtl
les
cmpsl
test
je
cmpsb
lret
mov
cld
fcompl
and
lods
mov
and
lds
mov
add
or
imul
mov
cmp
scas
mov
orb
mov
cmp
aad
cmpsb
out
sbb
cmc
ljmp
jmp
inc
addl
push
jns
mov
sahf
ret
cmp
stc
cmpsb
jne
lcall
out
jb
fs
cwtl
and
loope
xor
call
push
repnz
pop
cmp
add
lods
ds
int
xchg
or
std
hlt
or
popf
add
xchg
mov
ret
ret
in
dec
hlt
jnp
fisubl
test
mov
add
scas
xchg
mov
dec
mov
loop
cmp
fcom
leave
hlt
sub
int
das
pop
dec
jle
jbe
shl
xchg
xor
mul
je
sarl
adc
sub
jb
insb
aad
je
and
or
sub
add
and
push
insb
mov
mov
dec
rcll
dec
cmc
cmp
lcall
repz
mov
mov
sbb
enter
mov
pop
adc
aad
jae
fdivr
scas
aad
or
gs
lea
xchg
lret
bound
mov
jo
js
adc
mov
mov
rorl
mov
or
ja
ficompl
ret
sub
sub
jb
add
pop
xor
iret
mov
loope
daa
add
inc
or
or
mov
fcmovnb
out
sub
std
frstor
xchg
lea
add
add
jbe
lods
inc
add
dec
pop
pop
int3
dec
mov
rcl
test
mov
outsl
mov
test
cmp
sbb
outsl
xchg
icebp
stos
mov
and
fdivrl
xchg
push
mov
jns
repz
pop
imul
stos
aam
add
sub
repz
or
ret
or
push
push
movsb
pop
cmpsb
sbb
mov
je
sbb
xor
jns
or
mov
adc
fcomp
cld
mov
cmp
push
jge
iret
dec
adc
stc
xchg
pusha
cli
ds
fdivrl
and
xor
xchg
xlat
jecxz
fcmovnb
cmp
inc
jp
ds
cld
cmp
cmp
sub
cmpsb
lret
mov
insb
das
sbb
mov
mov
stos
aad
jbe
adc
push
lods
pop
cld
popa
xchg
test
daa
and
cld
pop
jb
dec
xorb
out
add
ret
loopne
and
xor
hlt
enter
iret
cwtl
cmp
jmp
cs
xor
test
sub
mov
push
mov
in
js
mov
pop
jecxz
adc
into
fsubs
rcrb
imul
mov
or
lcall
sub
imul
pop
movsb
inc
xchg
pop
sar
sub
in
into
fwait
je
mov
mov
mov
lods
stc
mov
add
std
in
fs
lret
push
sbb
mov
and
sub
insl
and
fwait
test
mov
imul
outsb
cltd
fisubl
in
push
push
sarb
or
arpl
mov
adc
xor
imul
dec
xor
and
cmpxchg
mov
xchg
cmpsl
xchg
and
inc
cmp
jo
mov
loop
jg
dec
push
mov
outsb
out
mov
and
push
out
add
mov
cmp
or
les
mov
adc
adc
das
push
inc
rcll
push
decb
dec
add
lret
shr
sbb
cmpsl
clc
or
pop
and
aam
orl
js
stc
or
test
adc
sub
movsl
int
mov
or
mov
sub
loope
scas
push
pushf
dec
adc
xor
out
loop
inc
fistl
pop
or
mov
sbb
xor
cmp
insb
xchg
repz
mov
xor
dec
test
aad
call
sub
orb
dec
and
jge
add
fiadds
in
clc
xchg
lea
lss
lods
repz
pop
gs
fwait
fwait
test
and
rcll
stc
sub
push
bound
add
cltd
inc
out
dec
mov
jmp
xchg
lea
das
fwait
add
loope
in
xor
fadds
mov
adc
loop
jmp
cmc
and
add
mov
adc
mov
call
aas
test
jne
mov
bnd
fisubrl
fistps
aas
pop
les
stos
sub
mov
adc
xchg
add
out
insl
pop
test
add
cmc
pop
cli
sub
jnp
ret
fadds
mov
data16
pusha
lahf
pop
fbld
cmp
fs
lret
push
outsb
cmpsl
insb
xor
int3
lahf
pop
push
enter
outsl
push
xchg
and
jbe
stos
dec
mov
push
clc
cmp
stos
mov
adcb
test
pop
cmpsl
retw
sbb
les
jle
add
pop
pop
outsl
pop
ret
les
xor
ja
mov
ds
lahf
insb
sub
and
mov
sub
sbbb
jne
sbb
jno
cltd
out
das
loopne
mov
lods
imul
add
xor
and
mov
bound
dec
sbb
in
inc
pop
mov
out
pop
dec
push
imul
mov
mov
mov
outsb
or
mov
lds
jg
je
push
pop
sbb
pop
jnp
dec
add
mov
aaa
lods
std
lods
mov
mulb
sbb
mov
adc
mov
sub
cmpb
xor
mov
adc
push
cmp
inc
jg
sahf
int3
cld
loopne
aam
xchg
enter
fidivrs
dec
das
mov
jb
mov
out
xchg
sub
add
xlat
dec
data16
lret
loop
dec
or
test
mov
lds
pusha
ljmp
dec
xchg
flds
pop
rolb
inc
cmp
sahf
xchg
test
mov
and
mov
int
dec
xchg
sbb
push
pop
pop
test
aam
push
fsubl
dec
gs
push
clc
mov
mov
cld
jmp
or
stc
jne
mov
es
fwait
hlt
sahf
pop
push
inc
push
push
adc
cmpsl
orb
and
mov
push
sti
cmp
pop
movsb
loopne
xor
push
in
lock
jle
and
sub
fidivl
mov
xor
cmpl
fmull
icebp
lods
iret
mov
push
nop
inc
std
insl
adc
lahf
shrb
imul
cmp
mov
in
imul
jle
in
inc
jmp
lret
pushf
roll
ficoms
shr
pop
pop
xchg
sub
cmp
sti
aad
nop
shll
jg
sub
int3
inc
fadds
push
ret
outsb
mov
mov
pop
test
or
jp
movsl
enter
push
scas
add
push
stos
dec
sbb
pop
mov
mov
sbb
mov
sub
adc
lock
cmpsb
pop
mov
inc
data16
push
lret
cmp
in
adc
inc
dec
push
fcomps
sbb
adc
adc
pop
pop
fiaddl
aam
aam
mov
pusha
inc
xchg
jl
and
dec
jb
adc
xor
add
pop
outsb
clc
data16
in
into
ja
call
idivl
mov
stos
mov
xor
aad
push
inc
lock
xchg
xor
ja
pop
lods
pop
dec
or
dec
and
imull
jl
mov
lret
sarb
pushf
pop
mov
jne
loope
or
lea
insb
and
arpl
inc
repnz
lods
mov
cmp
sub
pop
cmp
or
xlat
push
inc
js
fstpt
sbb
jae
stc
call
cmp
out
mov
mov
jg
or
and
stos
repnz
add
mov
pop
mov
stos
sbb
xchg
or
or
sbb
xchg
test
pop
fldl
call
pop
inc
outsl
xchg
mov
or
sub
data16
add
ret
test
cld
dec
push
ret
mov
fs
or
aad
pop
push
hlt
lock
adc
mov
repnz
mov
jne
outsl
mov
xcrypt-ecb
cmpsl
int
push
int3
jne
rcl
test
arpl
mov
add
sahf
push
iret
faddp
fucomi
sub
sbbl
shrb
popa
pushf
pusha
push
mov
fsubrs
insl
inc
pop
sar
xchg
pop
aam
lcall
imul
or
sbb
push
xor
xor
test
insl
push
xor
pushf
xchg
xor
stc
xchg
add
movsb
cwtl
imul
inc
insl
clc
mov
fmul
mov
inc
test
popa
push
cmpl
xorb
lds
pop
pop
negl
sub
jl
cmp
mov
ds
aad
scas
popf
arpl
lret
shll
xchg
andl
or
mov
aam
inc
cld
filds
cmp
xchg
imul
cmp
mov
lea
mov
adc
iret
push
xchg
cltd
mov
push
mov
add
mov
int
fcoms
insb
xor
ja
loop
dec
popa
inc
mov
ss
xor
add
sub
or
sub
jg
into
push
int
negb
es
dec
mov
in
lea
adc
daa
dec
rorl
adc
aaa
lret
ffree
cmp
sbb
mov
mov
fbld
insb
push
push
out
sbbl
dec
leave
insb
inc
mov
and
xchg
lret
inc
cmp
mov
add
adc
inc
movsl
out
xchg
rcll
inc
ret
push
mov
sub
je
sbb
cmc
repz
das
bound
je
add
icebp
or
nop
nop
ljmp
push
inc
xchg
and
jbe
push
leave
iret
inc
pop
insl
and
in
fcompl
fdivl
xor
mov
mov
adc
in
inc
jnp
mov
pop
mov
divl
pop
clc
xchg
sarb
mov
and
pop
out
std
fs
mov
cmp
dec
and
cltd
int
mov
or
inc
sbb
iret
push
mov
fwait
stos
scas
lahf
lahf
aaa
icebp
mov
rcll
stos
notb
inc
cli
xchg
flds
scas
dec
cmp
mov
icebp
pop
sbb
test
cld
pop
or
jne
call
dec
fmuls
adc
sbb
pop
adc
pop
rcll
adc
push
shll
or
pop
fidivs
mov
iret
lcall
push
mov
mov
sub
sbb
adc
cmp
stos
xor
test
js
test
mov
popf
les
xchg
ret
sbb
lcall
dec
xor
clc
xor
and
pop
dec
pushf
cmp
pop
mov
jb
daa
jle
xchg
mov
xchg
push
fnstenv
or
test
clc
int3
mov
lea
cld
test
in
daa
std
sbbl
add
cld
scas
in
mov
xchg
mov
pop
popa
sti
aas
xor
adc
jnp
sub
adc
loopne
or
or
ss
dec
push
fidivs
dec
leave
sub
out
sbb
mov
bound
int3
jns
les
arpl
or
imul
add
inc
xor
push
leave
and
mov
pop
push
inc
push
imul
insb
js
sub
into
and
push
adc
cmc
push
add
and
jns
daa
push
popl
pop
lock
mov
sub
push
push
in
mov
xor
xchg
cltd
leave
push
adc
inc
and
outsl
popa
cmpl
pop
out
adc
dec
aaa
ds
cmp
inc
pop
ja
cli
pop
cmpsl
or
xor
inc
out
cmpsb
jns
mov
scas
ret
sub
fisttps
jg
rcrb
fwait
mov
cmp
jl
popf
lea
inc
les
mov
lcall
sti
xorl
shll
xor
pop
lret
mov
and
test
test
sahf
pop
adc
dec
out
jbe
mov
sbb
mov
xlat
dec
sub
xor
outsl
mov
cwtl
sbb
fs
inc
test
rcll
mov
ljmp
cmpsl
pop
roll
cmpl
push
jle
mov
push
push
jae
jge
jp
je
arpl
or
into
mov
push
mov
push
shll
js
int3
daa
adc
jb
and
outsb
test
mov
inc
test
mov
xchg
dec
mov
inc
pop
lret
xor
lahf
clc
lahf
xor
out
sub
adc
or
inc
mov
icebp
testl
cli
adc
jae
jae
xor
imul
loopne
xor
lahf
xchg
loopne
pushf
dec
inc
roll
mov
imul
mov
pop
xlat
insl
jl
dec
lea
xchg
dec
cmp
test
fsubr
in
jne
in
lahf
lock
jle
lock
mov
dec
daa
adc
icebp
aad
jg
in
pop
inc
scas
xchg
pushf
mov
dec
pop
xchg
leave
les
in
test
push
cltd
rcrl
add
pushl
mov
sub
mov
adc
cmp
jno
in
xchg
in
sar
in
imul
jae
xor
shl
xorw
lret
push
pop
insl
rcrl
push
sbb
std
es
enter
sub
lods
in
cmpsb
xchg
pusha
popf
jge
mov
das
inc
mov
dec
jo
pop
mov
jmp
add
cs
adc
mov
cmp
bound
xchg
adc
inc
popf
cmp
xchg
mov
pop
clc
pop
pushf
ret
mov
cltd
inc
xchg
adc
sub
adc
stos
out
out
xchg
stos
sbb
jo
fs
adc
ljmp
push
and
stos
loope
xchg
in
std
cltd
arpl
das
xchg
pop
imul
xor
push
shlb
rcl
jl
push
pop
lahf
in
pop
mov
add
lea
fdivs
cmp
jno
int
not
imul
insl
push
fdivrs
mov
jne
subl
ss
cvtpi2ps
ja
dec
inc
aad
push
push
addr16
imul
gs
jmp
std
push
sub
jns
add
or
int3
pop
sti
mov
aam
lret
pop
mov
jp
je
dec
add
cs
lods
dec
mov
add
mov
pop
pop
aam
fwait
daa
je
enter
shll
inc
fisubrl
ret
add
ljmp
pop
enter
xchg
dec
lock
fstpt
aam
and
arpl
add
lahf
test
fucomp
pop
cmc
sti
push
test
mov
jle
push
rcll
add
sbb
xorl
xchg
movsl
cs
orps
es
mov
dec
and
sarl
inc
iret
jle
out
fiaddl
out
add
dec
or
bound
or
sub
es
cs
pop
add
cmp
ss
adc
mov
bound
lcall
add
sub
pop
pusha
gs
insl
pop
int3
cmp
mov
data16
or
shrb
sarb
out
pop
xchg
push
mov
sbb
inc
add
pop
gs
xchg
cli
das
std
mov
mov
mov
pop
push
fnstcw
rcl
in
loope
loopne
leave
dec
push
dec
lahf
push
in
or
mov
fistl
xor
cmp
pop
addb
sbb
mov
roll
xchg
jns
mov
cs
inc
adc
and
je
mov
clc
pop
cld
cwtl
out
stos
fidivrs
pop
shrb
divl
xchg
pop
popa
movsl
jno
fisubs
pop
mov
int3
cwtl
mov
jbe
arpl
jmp
decb
inc
lea
test
in
and
cli
dec
push
jnp
and
fadds
xchg
xchg
dec
aad
and
push
les
ret
cmp
inc
out
movsb
ss
jo
xchg
insl
mov
sbb
push
cmp
jmp
sub
add
arpl
mov
dec
sti
and
xor
sar
ficomps
lods
inc
push
neg
xchg
pop
sbb
cmpsb
int
jns
adc
cmc
ret
scas
stos
loopne
cs
gs
ja
in
adc
sub
inc
sub
call
cmp
adc
mov
std
xchg
inc
cmp
inc
or
mov
jne
stos
mov
jl
pop
hlt
push
lgs
fwait
xchg
sbb
mov
add
cmp
push
push
adc
fwait
inc
add
pop
lret
mov
xchg
les
jge
adc
xchg
fiadds
ds
mov
xchg
mov
mov
imul
sbbl
add
leave
ja
xchg
sbb
mov
into
mov
clc
add
mov
jne
add
cltd
testl
pop
hlt
add
int
mov
imul
push
shll
dec
adc
cmp
jne
adc
scas
into
xor
add
sbb
jae
scas
dec
iret
pushf
xorw
mov
nop
pop
cld
bound
push
scas
sbb
in
inc
out
loopne
out
jo
xchg
xchg
and
subb
leave
and
in
rclb
arpl
pusha
lret
cwtl
pop
inc
push
xchg
bound
mov
push
call
mov
fs
push
inc
pop
or
cmpsb
jp
inc
sub
sub
pop
call
or
hlt
bound
mov
pop
hlt
jle
add
inc
and
push
lea
ds
lcall
enter
cld
scas
mov
pop
fcomip
mov
out
stos
out
out
push
xchg
pusha
scas
std
mov
xor
ja
aaa
or
pop
pop
pop
stos
sub
cmp
cmp
push
cmp
jb
push
adc
mov
mov
jecxz
out
cmpsb
in
cwtl
xchg
shll
mov
cltd
mov
dec
cmp
outsl
lcall
dec
mov
or
in
loope
ljmp
cmp
loopne
jne
xor
pop
cmc
xchg
pop
inc
je
fdivrl
xor
jne
push
push
mov
insl
out
lret
jge
int3
cmp
arpl
int
mov
mov
stos
jle
and
mov
dec
fcomps
inc
pusha
sbb
fsubl
stos
outsb
fsubr
mov
mov
clc
mov
cmp
sbb
adc
inc
sub
jecxz
lea
sub
cltd
lret
jge
fwait
mov
cld
gs
lret
pushw
mov
pop
scas
inc
outsl
xchg
mov
shll
nop
sarb
adc
sub
add
aas
dec
lds
daa
adc
sbb
fwait
push
xor
jno
scas
ds
xchg
or
les
xor
pop
rorl
push
sub
adc
ss
fcmovne
std
mov
add
fimull
mov
push
and
and
fsubrs
inc
xchg
pop
lods
pusha
lds
insb
jle
cld
ljmp
dec
mov
xor
cmp
inc
and
js
das
inc
inc
push
xor
fwait
mull
or
and
test
inc
inc
insl
jg
jmp
mov
inc
jne
aam
nop
jl
jle
sub
and
jp
stos
mov
cmc
dec
aas
bound
repz
pop
xchg
sub
test
ja
mov
xchg
ss
addr16
mov
xchg
pusha
orl
mov
int
pop
dec
inc
adc
fimull
dec
aas
out
xorb
negb
add
lods
in
sahf
xor
sti
insb
cs
push
jne
add
mov
mov
ljmp
push
dec
mov
ja
leave
test
popl
mov
inc
lahf
jecxz
syscall
dec
xchg
xchg
sarb
jle
pusha
mov
rcll
mov
dec
adc
mov
fstpt
pop
stos
add
jecxz
xor
je
cmp
cli
push
pop
mov
inc
mov
loope
xor
mov
mov
cld
xchg
jl
into
outsl
add
dec
lock
push
push
xchg
push
inc
call
movsl
lret
adc
out
pop
push
xor
movsl
jecxz
mov
cltd
inc
xor
adc
push
add
xchg
sbb
notb
popa
xchg
mov
push
sbb
adc
inc
dec
push
adc
repz
roll
loopne
in
loop
movsl
cli
pop
jle
aas
xchg
daa
aad
adc
aaa
std
roll
jae
ret
cltd
insl
arpl
mov
mov
repz
push
sti
scas
add
or
stos
xchg
ds
cmp
push
sub
les
push
mov
sub
and
pop
in
xorb
sub
pop
jno
mov
test
sub
movsb
sub
mov
jo
sub
pop
ljmp
in
sub
adc
movzwl
shll
jecxz
inc
add
aam
pop
cmp
mov
sub
out
mov
sti
stc
data16
jmp
push
aam
jae
inc
in
das
daa
lea
pop
ret
mov
in
mov
jp
cmc
insl
push
add
repz
stos
mov
cmp
sahf
mov
insl
ja
adc
lock
adc
into
sub
sarb
or
repz
call
dec
out
ror
hlt
notb
int
shl
rcr
push
jl
movsl
sbb
fwait
lds
xlat
sub
cli
pop
loope
dec
jb
ja
mov
js
sub
mov
mov
dec
push
mov
pusha
add
xchg
xor
nop
insb
roll
or
push
dec
push
mov
xchg
lods
ret
int
mov
mov
push
outsl
rol
or
aam
push
dec
outsl
pop
test
jge
or
shl
insb
rcll
sub
cmpsb
popa
push
add
dec
jae
pushf
xchg
enter
lock
or
jnp
popf
mov
sbb
gs
call
mov
ljmp
mov
add
cmc
in
and
cmp
sub
ret
faddl
or
jnp
mov
jne
sbb
xor
test
ret
int
lock
fsubl
sub
sub
sbb
or
repnz
mov
testl
dec
pop
dec
mov
sub
mov
push
test
sahf
mov
dec
push
dec
cmp
or
mov
gs
dec
clc
jp
shlb
mov
into
jne
fwait
add
cmpsl
add
and
movsb
popf
insb
fidivl
gs
xchg
mov
add
lret
popa
int3
jns
cli
mov
in
sar
addb
pusha
dec
ret
sub
xor
ja
cmp
mov
leave
mov
jnp
lods
add
call
dec
iret
add
or
loopne
sub
jp
pop
inc
push
ret
ret
mov
sbb
and
and
mov
add
sbb
rcrl
sahf
les
mov
out
pop
and
and
lods
and
ret
rcl
pop
xchg
lods
outsb
shrl
cs
push
lret
fbld
push
mov
testl
bound
ror
xor
shrb
test
leave
cmp
xor
push
dec
pop
in
pusha
xchg
mov
add
lret
xchg
aam
pop
push
cmc
fnstcw
adc
in
frstor
shll
sbb
jmp
arpl
mov
nop
sarl
pushf
enter
sahf
cmp
inc
inc
bound
mov
in
imul
movsl
cmp
pusha
cmp
stos
pop
cld
dec
repz
mov
adc
mov
xor
arpl
mov
cwtl
pop
inc
pop
std
adc
pop
xlat
outsl
push
stc
test
mov
mov
pop
mov
stos
mov
push
loop
idivl
sti
ss
xor
aas
push
cmpb
ja
cld
add
lods
pop
jle
stos
sbb
xchg
fldcw
and
inc
adc
daa
jl
clc
and
and
fucomi
push
jecxz
add
nop
mov
cmp
push
cmp
cltd
and
clc
dec
fs
inc
fists
add
pushw
mov
jmp
test
cmp
mov
inc
mov
and
cmp
mov
cmp
mov
sbb
mov
push
fwait
mov
lods
mov
lea
inc
and
push
movsl
call
cmp
sarl
or
add
rcrl
jo
dec
xchg
rclb
int3
sub
fildl
xchg
icebp
clc
fimuls
mov
or
lret
das
mov
jmp
lods
add
jmp
jg
loop
add
stos
rclb
pop
sub
xchg
inc
adc
cmp
cmc
or
mov
outsb
mov
test
insl
orb
iret
sarl
add
fwait
loop
lcall
leave
loopne
jno
fnsave
add
mov
push
outsb
push
xor
imul
rcrb
lahf
xor
inc
adc
sbb
ficoml
push
mov
push
dec
std
mov
cmp
cltd
call
dec
jmp
ret
xchg
cmc
fwait
lock
xchg
dec
sub
imul
sbb
pushf
clc
xlat
sbb
dec
lret
xor
andb
aaa
insl
fnstcw
mov
icebp
mov
sti
or
jne
ja
mov
out
sub
aad
push
xchg
lods
jmp
jge
aas
sbb
orb
xor
aam
pop
or
js
inc
cmpsl
cmpsl
shr
inc
mov
out
push
mov
sahf
push
scas
mov
adc
cmp
jnp
or
adc
movaps
lods
lcall
test
aam
repnz
push
or
call
mov
xor
leave
sbb
hlt
or
jle
or
je
xor
std
jbe
xor
outsb
out
js
dec
mov
push
pop
je
or
fsubr
int
clc
imull
fcmovnbe
aam
push
xchg
imul
jbe
and
pop
or
stos
xchg
pop
cmpsl
test
jge
mov
orb
push
div
jl
adc
movq
push
jb
stos
mov
fiaddl
pop
jecxz
inc
dec
ljmp
cmp
add
cmp
test
mov
pop
jbe
das
fnstsw
cmp
pop
ljmp
in
sar
and
mov
dec
in
sbb
adc
data16
test
cmpsb
cmp
inc
jae
cmc
ljmp
das
stos
ja
add
push
lret
stc
icebp
arpl
shrb
mov
pop
lock
lcall
mov
popa
and
in
dec
in
out
jne
fnsave
aas
jge
scas
leave
arpl
or
je
push
cmp
jb
divl
gs
or
dec
mov
test
shrb
bound
mov
xor
loopne
test
scas
insl
dec
add
js
clc
mov
push
enter
cltd
mov
sub
xchg
hlt
int
imul
add
imul
sub
xor
sti
lret
notb
cmp
std
shlb
pop
sbb
iret
rcll
rcr
inc
jns
push
jg
rolb
std
sub
push
push
jns
jae
sahf
pop
daa
loope
mov
pop
leave
add
stos
repz
pop
add
and
enter
std
bound
adc
imul
outsl
jae
data16
push
or
stc
sti
jg
mov
jl
jnp
cmc
popa
enter
mov
mov
mov
pop
or
cmp
repnz
mov
loop
mov
jne
popf
push
push
sub
mov
int3
add
in
dec
and
pop
bound
pop
sbb
fstps
pop
and
jecxz
pop
xor
clc
dec
mov
xchg
imul
adc
jmp
es
inc
mov
daa
dec
cmp
out
icebp
mov
sbb
dec
jns
imul
ret
xchg
fdivs
pop
adcb
dec
adcb
push
rolb
mov
push
movsb
mov
dec
inc
outsb
test
pushf
mov
sub
push
es
sbbl
cld
fdivrl
mov
cmpsl
loopne
add
sahf
jg
sub
decb
mov
inc
scas
leave
mov
adc
xchg
or
jl
out
das
aaa
inc
inc
inc
sub
cmc
mov
ja
mov
jmp
gs
out
sarl
or
xchg
cld
xor
jne
aad
mov
add
subl
fiaddl
mov
int
ss
cs
jbe
xlat
lret
popa
xchg
fidivrs
inc
xchg
and
adc
inc
pop
cmc
inc
flds
cmp
jns
insb
xor
loope
or
int
int3
mov
lret
les
cmc
jmp
xor
das
daa
test
faddl
cmp
insl
xchg
xor
or
les
fistpl
jns
lods
stos
mov
xlat
mov
push
out
imul
mov
xor
pop
nop
jecxz
or
push
xchg
pop
dec
cli
mov
loope
push
ret
cmc
sbb
mov
dec
ret
jo
mov
pop
andl
xchg
arpl
test
js
test
or
cmpsb
adc
dec
pop
dec
aad
sbbb
gs
push
rcrl
ret
sbb
cwtl
rclb
arpl
push
sub
xor
mov
pusha
rcll
lret
cld
cmp
adc
pop
xrelease
and
inc
push
stos
xor
dec
push
sarl
fdivrl
js
pop
jno
xchg
xlat
in
mov
sub
xchg
gs
and
pop
int
fwait
nop
jg
fwait
jl
aas
jns
xchg
test
push
sarb
or
aad
pop
xchg
mov
repz
fiadds
push
pop
inc
arpl
jbe
les
test
lea
xor
outsl
mov
adc
pop
sbbl
arpl
lock
push
std
jg
and
addr16
aas
jmp
int
icebp
repz
jl
inc
test
add
pop
push
addr16
dec
jmp
sub
or
mov
fdivl
jo
dec
push
ja
ljmp
ret
ds
mov
into
or
fists
dec
cmpsl
aas
test
mov
dec
int3
and
jne
jb
lock
push
xor
push
jnp
mov
adc
out
cli
rclb
cli
sub
mov
jae
movsl
xchg
mov
mov
lret
jb
decl
stos
or
loop
or
push
and
pop
jge
in
loop
and
js
arpl
cmp
cmp
in
popf
sbb
or
clc
stc
mov
pop
jns
cmpsb
sub
shl
mov
ss
push
pop
push
dec
lock
inc
js
test
dec
jmp
or
pop
push
mov
jle
and
mov
inc
jae
mov
jns
cmpsl
fldenv
jo
or
push
sub
std
push
push
in
and
push
push
stc
push
addr16
mov
fsts
lcall
sahf
sahf
xor
lfence
mov
jne
out
stc
and
in
push
xor
pusha
mov
sub
push
dec
xchg
lods
xchg
xchg
push
loope
xchg
popf
xchg
sahf
out
dec
mov
movsl
xor
lock
jmp
shl
cmp
popa
mov
xchg
stc
mov
fmuls
pop
into
mov
add
test
and
sti
mov
pop
hlt
dec
lea
sbb
dec
stos
add
pop
lea
inc
loopne
sbb
sub
push
into
mov
xor
mov
xor
fcmovu
pop
pop
adc
cmp
int3
lahf
xchg
xchg
mov
ja
mov
cmpsl
jecxz
fsubl
lea
int3
cs
mov
sub
dec
sub
js
notl
loope
mov
mov
je
aad
int
sbb
int3
add
jno
pop
mov
in
xchg
rorb
mov
sbb
add
bound
movsb
jmp
jo
inc
xor
or
adc
popf
push
sbb
popf
jl
xchg
cmp
in
jl
test
push
fidivrl
inc
xor
fs
clc
jnp
mov
mov
mov
add
test
in
sbb
out
add
or
and
rclb
clc
out
dec
ss
adc
or
hlt
roll
ficomps
leave
testb
or
test
xor
xlat
mov
clc
cmp
add
lret
jbe
sub
sbb
push
mov
pop
mov
iret
push
loop
fsubrl
stc
add
cmp
adc
pushf
sub
inc
aad
jb
dec
cmp
push
cwtl
inc
or
sub
xor
shll
add
inc
bound
dec
clc
mov
or
lods
dec
sub
dec
lods
int3
xorb
outsb
imul
std
fwait
adc
pushf
mov
rolb
sub
jns
sti
mov
cli
xchg
popf
push
pop
jmp
sahf
or
sub
icebp
sub
add
addl
and
insl
and
cmp
pop
mov
push
pop
fbstp
ljmp
dec
aam
adc
movsb
fiaddl
dec
sahf
lods
inc
dec
popf
mov
jns
test
rorb
fdivp
imul
je
and
pop
out
dec
mov
jae
push
roll
jbe
ja
mov
and
dec
dec
add
mov
add
je
sub
jl
scas
push
aaa
insb
repnz
push
xchg
inc
mov
divb
ja
or
or
sbb
xlat
nop
jae
js
jne
add
sbb
data16
into
xor
icebp
pop
movb
cmpsb
cmp
pop
insb
dec
ljmp
movsl
or
daa
ljmp
mov
and
imulb
mov
sbbb
mov
subb
dec
mov
imul
xchg
sahf
jl
fcmovnu
stos
xor
xchg
jmp
shll
cmp
fbstp
aad
xor
stc
inc
fldl
adc
cmpsb
cli
push
stc
test
xchg
sub
std
movsb
into
les
mov
jge
add
clc
enter
mov
mov
aas
push
xchg
jne
fnstsw
fsubrl
popf
adc
cli
es
movsb
pusha
data16
lea
push
mov
lcall
cmp
push
cmp
xchg
aas
mov
cmp
sub
mov
scas
pusha
stc
mov
outsb
mov
push
add
mov
test
mov
jl
sub
popf
push
xchg
or
inc
cmp
mov
sarl
call
nopl
sbb
jae
xor
cmovl
cli
in
sbb
bound
aaa
inc
ds
in
pop
fdivp
xor
dec
mov
das
push
cmc
push
cltd
dec
stc
cmp
push
clc
movsb
mov
dec
adc
jecxz
sub
mov
sbb
cmp
sub
or
outsl
stc
pop
xchg
jns
out
add
call
out
sub
mov
cmpsb
mov
cwtl
push
sbb
mov
sbb
popf
and
jnp
aam
repnz
sub
dec
dec
repz
cmc
outsl
xchg
dec
mov
bound
test
arpl
scas
data16
getsec
es
push
xchg
jno
and
shrl
inc
outsl
jle
mov
addr16
mov
sbb
sub
cmpsl
iret
adc
negb
xor
inc
push
loop
aam
mov
ja
lds
add
jo
and
sbb
or
jae
loopne
lods
push
xor
push
ret
adc
addr16
inc
fldenv
cmp
push
adc
mov
roll
mov
shll
pusha
lahf
inc
into
jbe
xchg
mov
je
call
xor
iret
test
flds
sub
aas
icebp
scas
dec
cmp
andb
mov
or
mov
aam
push
or
xor
icebp
call
out
inc
mov
test
scas
or
mov
aas
jne
push
push
xchg
add
mov
push
out
gs
jno
scas
test
push
ja
hlt
cwtl
notb
imul
inc
repz
dec
cmc
cmp
add
mov
lcall
and
scas
jae
lret
lahf
mov
out
insl
pop
les
mov
fmuls
add
xchg
adc
jne
jecxz
repz
add
stc
imul
pop
addb
jmp
sub
cmp
int
jbe
mov
sbb
mov
fidivl
inc
inc
es
push
out
test
popl
pusha
xor
cld
jp
les
dec
aam
jbe
adcl
pop
mov
jne
mov
leave
mov
lea
repnz
lcall
add
push
inc
fsubrp
mov
xlat
das
mov
mov
rcl
ss
aaa
inc
pop
pop
imul
lods
nop
pushf
ret
jne
xchg
shrl
aam
or
dec
jbe
addl
add
std
pop
ret
das
adc
scas
xorb
imul
dec
ljmp
movsb
lahf
mov
mov
mov
psubusw
xchg
push
or
sbb
xchg
inc
dec
inc
bound
dec
cmp
sbb
rcll
ljmp
pop
dec
jg
pop
sar
pushl
cmp
jmp
dec
push
adc
sbb
fcmovbe
sbb
es
jecxz
push
xchg
jo
xchg
lcall
cmc
sub
pop
fxch
mov
push
xchg
sarl
or
push
or
rclb
enter
push
stc
aas
xchg
andb
xor
imul
js
jecxz
xrelease
mov
and
in
jns
enter
ljmp
rorl
loope
fwait
test
sarb
xchg
push
test
cmp
xchg
loope
mov
mov
sub
mov
cmp
xchg
inc
cmpsl
add
sub
mov
pusha
add
mov
aam
adcl
inc
pop
sub
sbb
cmp
jns
mov
and
xor
lret
rcl
aad
in
loopne
imul
cmp
mov
cltd
ss
sub
push
cltd
aas
mov
mov
imul
scas
and
in
add
cmp
dec
or
or
add
lods
jne
ja
cmc
jae
mov
mov
bnd
outsb
xor
jnp
pop
or
sbb
mov
jae
or
sbb
or
fwait
cmp
loop
outsb
add
push
cwtl
xor
xor
leave
and
mov
xlat
mov
and
movsl
mov
sbb
test
cmpsl
call
js
push
ja
add
mov
lret
or
jbe
rclb
pop
sarb
ret
cltd
dec
cmp
adc
lea
sbb
xor
or
mov
jne
jae
loopne
sub
les
stc
hlt
sub
cs
ss
pop
sub
jle
push
cmc
or
lcall
xor
dec
pop
push
cli
mov
add
es
loopne
cwtl
xchg
adc
fwait
scas
or
cmc
sbb
stos
sbb
adc
cwtl
test
flds
mov
lcall
into
flds
lret
mov
and
ret
cmp
rcll
in
jae
cmc
jne
jge
add
jg
out
lds
cmpb
xor
adc
in
add
push
fildl
cmpl
xchg
xchg
inc
cmpsb
jae
lock
hlt
pop
lahf
cmpb
mov
or
jmp
xchg
and
nop
mov
cmc
loopne
mov
jecxz
jl
mov
mov
mov
fdivrl
pop
loopne
aaa
cli
out
mov
loope
jne
iret
int
shrb
jmp
popf
jmp
movsb
shl
or
stos
xchg
test
add
out
push
xor
xchg
push
repz
push
outsl
rorb
cmpsb
cmp
shl
mov
mov
in
test
mov
lahf
sub
sbb
ret
xchg
out
sti
daa
orl
sub
scas
mov
push
mov
fnstsw
xchg
sbb
insb
scas
gs
scas
xchg
pop
cld
cs
jle
lea
xchg
es
inc
add
mov
sbb
jae
xchg
cmp
xchg
xlat
pop
imul
jne
xor
stos
add
xchg
outsb
mov
adcl
sub
or
xchg
out
lcall
fstps
push
nop
dec
shrd
push
mov
inc
push
sbb
lcall
inc
out
push
mov
inc
xchg
pushf
sbb
xchg
adc
add
out
xchg
jmp
pusha
and
dec
adc
pushf
lret
inc
cmp
mov
repnz
mov
mov
pop
mov
sub
cld
add
ds
mov
in
xor
sti
sbb
roll
test
xor
dec
and
stos
pop
sbb
xor
cwtl
jo
scas
out
xchg
cmp
mov
cld
js
dec
dec
adcl
outsb
mov
out
xchg
mov
adc
jnp
xchg
test
lahf
cwtl
insl
gs
and
hlt
or
lock
add
pushf
add
push
popa
cmp
ss
popl
arpl
out
dec
pop
and
and
daa
pop
ret
sahf
mov
jnp
test
shl
fcomip
lock
sbb
add
mov
pop
scas
loop
cmpsl
cmp
mov
mulb
xchg
orl
lods
test
js
cmp
test
sbb
cld
and
mov
pop
cmp
pop
mov
dec
sbb
xor
pop
inc
inc
insb
in
xchg
loopne
inc
enter
and
inc
in
adcl
scas
pop
adc
movsb
mov
mov
push
xlat
jns
fldenv
sub
sub
cmp
and
mov
daa
push
call
cs
mov
fisubrl
inc
lods
adc
fbld
ret
dec
mov
push
out
adc
push
fiaddl
ds
dec
and
dec
out
adc
xor
xor
lcall
stos
sarl
xor
sub
xchg
or
dec
icebp
cs
in
jle
push
stos
jo
sarl
push
mov
inc
pop
xor
in
imul
js
mov
sub
dec
mov
sbbb
and
jmp
sbb
xor
inc
mov
iret
mov
iret
or
fs
vmwrite
in
and
mov
fs
int
fnstenv
fsts
sbb
push
sbb
xorl
xchg
daa
orb
test
int
pop
stos
cwtl
inc
pop
aaa
push
lods
jmp
mov
addr16
and
inc
out
lahf
es
dec
hlt
mov
dec
stos
mov
arpl
inc
jge
sahf
insb
loopne
sbb
add
adc
dec
call
out
lret
mov
test
fistl
pop
push
shll
in
inc
pop
push
mov
jnp
outsl
or
sbb
imul
jecxz
hlt
js
stos
inc
rcrb
sbb
stos
mov
jecxz
cmpsl
push
out
and
mov
adc
or
jmp
pusha
cli
test
lods
adcb
adc
iret
cmpsl
pop
dec
stc
scas
sub
mov
add
xchg
lds
mov
not
mov
xchg
pop
sti
push
rorb
cltd
sarl
mov
out
out
repz
sub
add
mov
lret
mov
ficoml
dec
xor
jp
mov
mov
pop
loopne
aaa
gs
mov
pushf
dec
pushf
push
out
push
daa
aas
data16
pop
dec
push
or
mov
jp
out
pop
xor
shl
and
cmp
aaa
es
jo
lods
dec
mul
int
call
mov
insb
push
outsl
xor
sbb
xchg
fidivrl
or
je
push
dec
xchg
cmp
mov
inc
inc
mov
mov
inc
in
je
mov
call
cmp
popf
cwtl
xchg
out
rcrl
xchg
mov
xchg
xor
jcxz
mov
dec
add
and
rorl
lods
imul
xchg
gs
call
jns
addr16
xchg
pop
pop
pop
loop
fs
shll
sub
mov
sub
mov
inc
mov
inc
xor
out
sub
jbe
insl
mov
scas
fldz
stos
inc
mov
xor
xchg
mov
test
mov
and
test
add
js
pop
pop
mov
xor
fdivr
sub
test
mov
dec
jg
pop
rcrl
sahf
mov
add
jae
add
test
insl
fnstenv
xchg
push
lods
dec
xchg
outsb
imul
dec
mov
jno
xchg
add
sbb
aam
inc
xchg
lret
aad
ffree
icebp
xchg
mov
icebp
push
ja
ljmp
lods
insl
pop
adc
fstps
cwtl
popa
std
xor
es
cli
incb
int
addr16
in
push
xchg
sarl
sarl
in
ljmp
aad
outsb
sarb
decl
pushf
push
cltd
aas
inc
icebp
mov
arpl
lret
sub
cmp
jmp
lock
sub
inc
add
in
cmpb
loop
icebp
aaa
lahf
icebp
mov
aam
and
mov
mov
jl
cmc
das
mov
or
mov
push
adc
movq
leave
fucomip
inc
fisubs
mov
adc
or
lds
scas
repz
inc
lock
xlat
fsts
cwtl
jnp
ja
lds
jecxz
cmpsb
mov
aas
inc
jge
test
or
dec
pop
cmpsl
push
movsl
loope
stos
push
das
sahf
lahf
add
mov
pusha
pop
mov
insl
imull
adc
mov
sub
jns
gs
ss
les
dec
es
enter
filds
loope
pop
sub
adc
fildl
push
cwtl
sbb
add
cmp
daa
hlt
jno
insl
repnz
mov
div
xor
push
fwait
arpl
push
insb
das
call
pop
shlb
pop
fsts
pop
lds
cwtl
lcall
cmpl
iret
aas
pop
inc
xlat
test
pop
add
mov
xchg
cmpsb
sub
inc
cli
stos
cltd
pop
or
pop
mov
mov
jb
inc
enter
cmpsl
mov
adc
sti
cld
int
sub
cmp
arpl
pop
ljmp
lods
jno
cvttps2pi
shrb
mov
sbb
int
pop
mov
adcb
cli
inc
xlat
sti
push
cmp
leave
out
jl
inc
or
push
shrb
jae
mov
out
sub
mov
sti
rclb
mov
cli
pop
loopne
in
aaa
outsb
xchg
xchg
jo
adc
icebp
pop
mov
mov
jle
ficoms
mov
push
cmp
fidivl
in
xor
push
add
leave
addb
arpl
xor
mov
xchg
xor
pop
lcall
jp
dec
das
push
xchg
mov
cmpb
xor
cmp
sub
sub
lds
jb
icebp
lods
in
mov
rcrb
xor
mov
adc
adc
js
rclb
nop
sub
xchg
fimuls
dec
loop
inc
sbb
mov
xor
mov
testb
mov
cmp
fisttpll
ds
out
jo
in
sar
pop
insl
pop
mov
loopne
dec
jge
fimuls
dec
fmuls
hlt
subb
inc
mulb
scas
lea
push
outsb
insb
xchg
add
std
jge
sub
into
adc
shll
sbb
loopne
cmp
cmp
xchg
movsl
stos
aad
ror
sub
ficomps
xor
sub
frstor
rclb
cmpb
or
add
push
insl
daa
push
add
adc
cmpsb
jge
xchg
cmp
dec
ds
lock
mov
and
and
lea
sbb
pop
mov
outsl
lret
lret
movsb
inc
xor
push
jp
cmp
pand
in
add
jne
daa
aaa
xor
rol
bound
pop
add
shrb
pushf
pop
sahf
aas
aad
daa
repnz
dec
ljmp
aad
loopne
mov
cmp
into
jno
mov
xor
rol
jb
fsubl
dec
movsb
jmp
in
mov
pop
fisttpll
dec
sarb
sub
jbe
psrlq
pop
jle
adc
in
loop
in
adc
and
xchg
mov
test
add
lret
std
subb
andl
xor
push
jbe
shlb
bound
mov
or
push
pop
mov
pop
notl
push
and
imul
mov
insb
pop
bound
repz
jbe
pop
inc
mov
jbe
cmp
dec
dec
mov
loop
sahf
xor
lahf
jmp
icebp
cmp
mov
fsubs
stc
mov
sub
cmp
sti
dec
cli
pop
mov
adc
push
inc
sub
and
les
mov
inc
repz
xchg
fiadds
adc
andb
jo
shl
scas
cmc
dec
jp
push
add
push
mov
shlb
shll
arpl
and
pop
pop
shlb
mov
shll
lods
jae
push
mov
faddl
mov
arpl
sbb
sar
jns
subb
cwtl
aam
and
xlat
jo
in
and
mov
sbb
mov
cmovge
sub
cwtl
shr
fimuls
icebp
sub
jl
pop
xchg
cmp
movsb
sti
push
adc
into
xchg
test
pop
lds
fs
aad
dec
sbb
imul
aaa
push
inc
inc
gs
bound
cmp
dec
into
pop
les
pushf
dec
xor
dec
xor
stos
imul
and
mov
das
test
push
je
out
dec
push
pushf
mov
insl
lea
sub
xchg
mov
sti
push
cmp
aas
pop
out
outsl
popf
mov
cmc
xchg
xchg
in
lods
mov
rcrl
lods
fidivl
stos
and
bound
adc
mov
in
mov
fistpll
xor
shrb
das
mov
xlat
mov
sub
nop
test
jbe
jmp
dec
les
xor
push
inc
adc
sub
stos
fbld
shll
sbb
dec
lret
xor
sbb
outsl
inc
cmp
and
xchg
ds
cs
dec
push
es
jl
mov
adc
push
xchg
sub
scas
dec
fsin
cmp
rol
int3
push
push
in
mov
lahf
es
and
dec
lcall
add
or
cmp
dec
adc
push
and
stos
and
es
and
dec
and
pop
insl
sbb
add
test
xor
rorb
inc
inc
test
jne
push
int3
or
into
xchg
pop
fistl
test
mov
mov
test
jo
movhps
mulb
das
shll
in
adc
push
frstor
xchg
add
mov
adc
cmp
adc
mov
scas
mov
scas
adc
xchg
sbb
dec
subl
popa
bound
ret
iret
adc
jne
lea
in
sarl
fdivrs
jns
sub
or
popa
push
pop
test
dec
jne
shll
cmp
dec
pop
jg
cld
scas
xchg
inc
in
push
pop
jecxz
dec
in
jl
sub
scas
sbb
pushf
rorl
movsb
xlat
aas
std
je
test
cltd
arpl
ljmp
imul
notl
pop
outsb
mov
mov
mov
mov
inc
rolb
adc
xchg
add
fiadds
mov
fs
sub
add
pop
cmp
xchg
into
xchg
movb
frstor
mov
cs
inc
cmc
cltd
loopne
xor
out
mov
xchg
lret
push
fadds
or
out
pop
cmovbe
push
enter
call
jl
fnop
push
mov
in
xor
pop
out
mov
xor
push
pop
sahf
and
fwait
and
ret
shr
scas
decb
inc
in
push
inc
xchg
inc
sbb
cwtl
ss
pushf
jle
icebp
sbb
sahf
cltd
mov
lea
fisubrs
rcr
xlat
repnz
xor
sbb
cltd
sub
pushf
mov
push
mov
out
jmp
test
or
xor
call
cltd
lret
mov
popf
xlat
jg
xlat
adc
inc
mov
call
scas
arpl
cmp
jecxz
insb
daa
cli
jb
ss
pop
rcr
aam
sahf
sti
in
ljmp
fstpt
add
mov
jl
add
sub
pushf
loope
push
add
push
dec
push
daa
add
mov
rorb
test
enter
mov
stos
adc
int3
push
cmp
arpl
scas
lock
js
push
jp
imul
sbbb
add
adc
pop
push
and
es
lock
xchg
xchg
cmpsl
xchg
dec
shl
pushf
iret
jge
int
cwtl
mov
and
xchg
fmull
testb
bound
push
sbb
aam
adc
iret
fnsave
imul
push
adc
xor
sub
inc
mov
inc
out
out
retw
repz
decl
push
mov
adc
iret
sbb
sub
dec
mov
cmp
jecxz
out
std
sub
sbb
rcl
idiv
cmpsl
push
xchg
dec
mov
shlb
or
xchg
sbb
pop
lret
xchg
cmp
adc
repnz
outsl
push
sub
mov
dec
push
ftst
loopne
push
nop
loopne
jg
leave
or
lods
repnz
icebp
rep
outsb
or
divb
mov
test
or
in
add
divl
xchg
pop
and
sti
mov
mov
rcll
ss
cmpsb
inc
adc
mov
scas
push
sub
repz
mov
mov
frstor
repz
or
arpl
and
das
dec
mov
mov
push
push
xchg
in
das
in
sub
or
cmc
mov
je
adc
or
leave
and
cmp
shl
pop
clc
cltd
inc
sbb
mov
pop
xor
push
jg
cli
inc
and
in
jo
sub
pop
pop
pop
std
and
cmp
mov
fwait
imul
mov
aas
cwtl
dec
ja
mov
pop
jae
xor
sarl
push
stos
mov
push
push
jg
sbb
or
push
loop
data16
pop
dec
add
in
jp
mov
mov
or
adc
inc
rol
xor
int
leave
mov
inc
fs
imul
and
mov
jbe
icebp
fdivs
in
aas
push
jmp
and
xchg
or
cmpsb
cli
push
lea
out
and
shll
and
adc
or
shll
mov
lret
sub
shrb
add
dec
aam
cmpsl
ljmp
add
mov
fucom
mov
add
sub
iret
mov
movsl
int3
xchg
leave
xor
inc
jo
xorps
pop
adc
scas
jmp
aam
mov
imul
push
jnp
fcom
and
xchg
dec
aaa
pusha
mov
pop
push
out
mov
dec
outsb
sub
add
and
cmc
push
xchg
inc
pop
mov
adc
nop
push
dec
ljmp
push
scas
pop
fs
lret
arpl
pop
cs
jne
clc
push
repz
mov
ret
mov
mov
add
roll
jmp
push
mov
cmpsb
iret
xor
or
into
mov
iret
ret
xor
push
popa
and
clc
fisubrs
mov
mov
push
mov
cli
loope
or
jnp
es
pop
mov
gs
jno
cmpsl
loope
cs
push
jp
jo
push
mov
mov
aas
xchg
jmp
push
jne
adc
cmp
push
jb
loopne
cmp
jecxz
jno
jge
sbb
adc
addr16
adc
dec
ret
pop
push
rorb
mov
dec
adc
cmp
xor
addr16
je
push
pop
jno
clc
test
ret
rcrb
subb
pop
lret
sub
pop
xchg
sbb
and
in
orb
pop
insb
popa
pop
add
or
and
pop
repz
loop,pn
cmp
loop
inc
js
test
xchg
pop
ja
xchg
js
leave
push
out
rorb
jmp
out
xor
cmp
fisttpl
jg
rcll
jmp
mov
xor
sub
push
stos
and
les
mov
add
fimuls
push
mov
pop
pop
cmpsb
ret
xlat
mov
xor
leave
pop
pop
call
movsl
test
scas
adc
push
dec
push
xchg
gs
mov
cmp
fadds
add
xor
pop
xor
imul
mov
mov
lea
ja
inc
movsb
fildll
scas
jno
mov
pushf
or
adc
cmp
and
push
ficompl
out
adc
xchg
cltd
fidivs
sub
mov
repz
pop
lret
stos
xlat
inc
aad
push
pusha
test
pop
xchg
jl
rcll
mov
push
cltd
ja
sbb
push
mov
and
push
push
sub
fmulp
jecxz
in
sbb
es
stc
rcrb
ja
dec
gs
inc
cmc
jp,pn
out
mov
xchg
push
pop
sbb
or
cmpsb
dec
nop
xchg
lods
mov
sbb
xor
xor
test
jecxz
xchg
cmpb
cmp
cmp
aas
call
xchg
mov
and
sub
cwtl
jge
add
mov
push
fdivrl
test
jo,pn
xor
jae
xor
lock
hlt
sahf
xchg
xchg
or
cmp
lahf
inc
cmc
jno
test
lahf
sub
out
mov
shll
loop
stos
pop
mov
ret
mov
inc
repz
cmpsl
hlt
ljmp
or
cmpsb
mov
sar
mov
repnz
adc
xor
add
mov
imul
dec
imul
jns
out
sbb
push
adc
xor
std
inc
jb
push
repnz
jmp
cli
dec
dec
pop
fcomp
loope
notb
fldcw
xchg
int
xor
inc
icebp
and
jp
cmpsl
pop
inc
std
rcl
pushf
cltd
popa
pushw
stos
popa
push
ret
sub
inc
pop
nop
dec
int3
xchg
mov
jae
repnz
lods
cmp
rcr
mov
test
mov
bound
dec
mov
std
aad
fldcw
int3
push
dec
jge
icebp
sahf
cmp
iret
pop
mov
lret
popa
xchg
lcall
xlat
add
and
or
dec
sub
aas
mov
popf
daa
pop
lcall
mov
fdivs
cmp
cltd
mov
popa
int3
xor
mov
add
je
mov
mov
sub
cmp
insl
pop
jne
mov
mov
cmp
add
and
mov
aas
movsb
adc
pop
jg
cwtl
sub
enter
xchg
fwait
popf
mov
pushf
loop
push
sbb
aas
cmpsb
jae
mov
sbb
out
sbb
jno
pop
call
mov
inc
inc
sbb
mov
lahf
sbb
out
pop
test
shrl
pop
mov
fnstcw
into
jge
ds
mov
cmp
xor
pop
jp
adc
divb
mov
mov
cwtl
jecxz
fldt
mov
mov
sbbl
push
mov
push
scas
mov
pop
int3
fbld
icebp
sub
mov
stos
js
leave
push
imul
xor
inc
sbb
dec
cs
mov
push
mov
add
outsb
push
pushf
pop
es
inc
push
pop
pop
mov
and
jae
inc
pop
scas
jl
shll
es
cltd
fimull
loopne
repz
push
sahf
push
das
fcomps
lcall
pop
mov
out
push
sbb
repnz
mov
arpl
call
loope
adc
out
stos
xor
and
loope
test
dec
xchg
cmp
push
push
and
jl
insb
inc
data16
popf
les
lods
jae
add
mov
xchg
cltd
add
movsl
punpckhbw
fdivl
stos
ficomps
popa
mov
cmp
mov
movsb
jbe
ja
push
aam
jno
jae
test
xchg
movsl
cmp
stos
xchg
sub
push
pop
std
dec
fwait
and
mov
lahf
adc
push
sub
mov
das
mov
daa
ret
scas
fisubrs
or
dec
in
movsb
xor
es
xor
add
loop
popa
inc
scas
mulb
adc
pop
xor
inc
aaa
aaa
insl
cmpsl
rclb
test
daa
sub
rcrl
sahf
xlat
sbb
rcrl
test
andb
test
add
push
stos
adc
pop
mov
and
cli
clc
adc
jns
jo
pop
in
xor
push
mov
xor
in
test
dec
aas
aam
ret
aad
sub
test
xor
sub
xchg
xor
lcall
xor
lods
movsl
dec
scas
jb
mov
push
jae
xor
or
lea
and
ljmp
das
pop
popa
lock
dec
addr16
test
pop
adc
mov
jl
mov
xchg
adc
cmp
and
addr16
inc
scas
call
sbb
punpckhdq
xchg
jmp
push
ja
xor
xchg
jae
pop
data16
xchg
adc
dec
test
idivl
das
xor
jb
stc
loopne
lcall
xchg
or
movsb
sub
jo
mov
dec
into
xchg
inc
shl
or
xor
inc
mov
dec
test
gs
sub
adc
ds
insb
push
push
xor
mov
mov
lret
ret
and
and
dec
inc
ja
push
xchg
loope
fprem1
nop
xchg
leave
mov
pop
out
test
in
stos
loop
adcb
lret
jmp
mov
mov
loopne
xchg
pop
add
out
inc
es
mov
loope
in
loope
cmpsl
fsubrl
repnz
ja
sbb
inc
pop
cmp
int
aaa
jg
les
mov
xor
pop
inc
sarb
loopne
sahf
cmpsl
add
and
imull
xor
and
cld
sub
stc
repz
sbb
test
test
and
es
cmp
mov
adcl
loopne
and
mov
cltd
sbb
icebp
test
or
inc
sbb
int3
mov
or
cmpl
adc
mov
mov
aaa
and
inc
loop
inc
adc
mov
out
mov
fsubl
test
add
fidivs
and
int3
mov
sti
clc
mov
je
mov
lock
sbb
cmpsl
loop
mov
or
pop
out
test
mov
xchg
sub
loop
fdivr
in
sbb
stos
dec
pop
cwtl
adc
dec
mov
adc
shrb
sbb
lock
inc
in
xlat
pop
lahf
dec
sti
faddl
mov
iret
mov
cli
cltd
xor
xor
lock
sbb
iret
mov
mov
or
and
mov
jo
cmp
addr16
in
cltd
mov
cmp
mov
jl
lea
xor
rorl
lret
sub
cmp
sbb
fidivl
jne
or
mov
ja
cmp
push
jbe
sbb
std
xchg
jmp
pop
pop
mov
icebp
imul
stc
addb
sub
mov
xchg
dec
ljmp
sub
fcomps
test
cmp
out
ja
push
mov
dec
push
sahf
mov
xchg
aas
dec
out
add
pusha
xchg
jge
in
leave
sub
push
sub
lret
mov
iret
sahf
aas
jbe
std
outsb
out
pop
mov
lods
popa
data16
mov
xor
push
and
rcll
cmp
ret
lret
mov
jne
or
mov
jle
inc
outsl
sar
repz
lods
dec
pop
nop
sbb
push
in
jl
aad
push
outsl
shll
xchg
xor
test
sub
xlat
cmp
add
popf
sub
in
xor
mov
jmp
and
test
shll
loope,pt
and
stc
sti
sub
jg
mov
add
sub
mov
pusha
lahf
or
inc
int3
popf
dec
not
mov
sbb
mov
fistpl
xlat
lret
inc
add
xchg
ss
xor
lret
cmp
sub
mov
pop
ret
or
jns
rclb
or
mov
xchg
leave
mov
push
lock
jmp
jnp
add
test
xor
sbb
les
js
push
je
dec
aas
or
or
inc
dec
stos
adc
cltd
and
mov
jbe
cltd
push
shrb
ja
ss
lds
mov
out
call
and
inc
xchg
bound
fbld
rorl
aam
push
movsb
mov
push
push
adc
sbb
or
icebp
jle
push
incb
mov
add
add
pop
and
fidivrl
ljmp
lock
sub
ret
int3
sub
xor
pop
mov
fimuls
in
sbb
push
test
xchg
cmp
in
repz
or
shrl
mov
stc
cs
mov
pop
adc
add
cwtl
in
stos
cmpsb
shlb
loopne
and
js
fimuls
das
addr16
sub
rcrl
xor
cwtl
cmp
xor
sbb
mov
pop
jns
pop
cmpsb
test
fsincos
push
mov
dec
in
nop
or
push
imul
sub
jo
dec
int3
lss
push
cmc
xchg
xchg
pop
add
sub
mov
dec
pop
jmp
sti
mov
mov
movb
jmp
dec
int
jno
cmp
imul
lods
lock
or
mov
dec
jo
rorl
dec
pop
xor
xor
aad
sbb
ds
pop
mov
inc
jnp
outsb
dec
cwtl
dec
pop
jmp
in
lahf
repz
sbb
xor
jb
inc
fsubs
or
mov
das
decb
fimuls
ljmp
aaa
adc
sbb
test
sarl
test
imul
dec
dec
push
mov
jnp
dec
jle
sub
push
adc
xchg
and
dec
ja
mov
dec
dec
push
stc
es
pop
test
mov
adc
call
pop
adc
test
push
lds
push
pop
fs
fcompl
dec
fdivrp
enter
adc
jb
loope
cmp
dec
icebp
addr16
cmp
popf
inc
mov
inc
mov
mov
hlt
clc
inc
jnp
jmp
popa
sbb
aaa
mov
pop
jbe
jecxz
or
and
addr16
sar
mov
mov
mov
pop
cmp
dec
add
test
sbb
cli
mov
fistps
popf
and
lds
cld
imul
add
adc
push
outsl
or
cld
out
and
pop
lret
scas
xchg
jg
mov
mov
sub
shll
jne
pop
repnz
and
mov
lods
push
xchg
cmpsl
pmaxub
or
test
fdivs
mov
fcomi
jge
mov
fdivrs
dec
imul
fadds
testb
cmp
adc
push
mov
loop
mov
xor
pop
imul
add
lcall
cmc
add
in
loop
cli
adc
jecxz
cmp
pop
pop
and
push
aad
pop
xor
and
and
call
sti
pop
in
mov
mov
js
mov
cwtl
lret
push
inc
cwtl
xchg
inc
dec
push
push
fildl
push
jp
sbb
das
push
and
lods
mov
addr16
test
jbe
addr16
int3
fidivl
ds
fwait
imul
add
jg
mov
test
jmp
xor
mov
mov
sub
inc
mov
mov
mov
pop
mov
jg
adc
cltd
sub
insl
cwtl
sbb
lock
loopne
fstpt
faddl
xor
in
jb
in
mov
xchg
xchg
pop
xorb
stos
sbb
fisubl
dec
into
jae
iret
sahf
mov
in
cld
outsl
dec
rclb
stos
arpl
xor
dec
out
mov
insl
lds
fists
cmp
testb
adc
inc
push
ret
and
jl
push
sbb
dec
xlat
int3
jns
add
jae
mov
mov
or
fdivrs
pop
and
mov
fdivrl
subb
mov
fiadds
roll
in
mulb
inc
and
scas
aam
mov
sub
inc
stos
fisttpll
xchg
lret
pop
adc
cld
sbb
cmp
insl
insb
and
movntps
pop
push
imul
int
cmp
and
cli
jmp
cmpb
outsb
xchg
cmpl
cli
push
or
loope
pop
adc
xchg
out
pop
in
cli
out
ret
sub
cmp
cmp
adc
insb
ss
cmc
jno
dec
dec
int
inc
jno
bswap
jmp
aam
xchg
mov
imul
gs
mov
push
push
cmp
jbe
test
jno
dec
xchg
and
xor
lods
push
sub
insl
cltd
mov
add
jecxz
iret
loop
push
scas
loopne
mov
shl
outsl
in
loopne
mov
sbb
ljmp
repnz
loope
rcrl
lods
xor
lret
or
jmp
add
movsb
jmp
in
sub
jns
jbe
cs
shll
jle
xor
mov
aas
icebp
dec
stos
pop
add
les
int
movsl
mov
scas
outsb
push
clc
in
jnp
cmpsl
mov
mov
je
pop
in
jecxz
jne
xchg
mov
sbb
stc
rcl
mov
cld
sbb
aas
mov
xor
shlb
push
adc
dec
lahf
lock
mov
dec
aam
jmp
xchg
inc
push
mov
fisttpl
mov
in
cmp
lea
push
es
gs
insb
jp
mov
dec
hlt
mov
jge
ret
mov
lret
or
and
repnz
testb
adc
lcall
or
fwait
pop
sub
repz
inc
mov
jmp
pusha
data16
shlb
mov
hlt
xor
sub
add
or
mov
jb
push
push
push
push
pushf
fs
mov
fidivs
sub
add
sub
addr16
pop
aaa
icebp
push
sub
mov
aaa
cli
xchg
in
mov
stos
cmpsb
xor
pop
gs
inc
jbe
xlat
ja
jmp
xlat
insb
ljmp
lret
into
mov
lea
clc
pop
push
jl
in
lcall
pop
rcrl
sti
sub
pop
sbb
inc
xor
xchg
jae
adc
cmp
or
test
into
in
pop
pslld
ljmp
insl
mov
test
je
sub
daa
pop
mov
jp
mov
in
insl
insl
and
xchg
lcall
insb
pop
inc
pop
imul
adc
sub
daa
dec
in
sbb
rclb
mov
sub
leave
mov
aad
dec
add
jg
sub
jmp
push
pop
loop
add
testb
cmp
xchg
cli
in
fcoml
pop
cmp
lret
xlat
and
cmp
ja
test
fs
cmpsl
aam
xor
stos
shr
dec
stc
stc
mov
in
mov
push
lret
dec
cld
inc
sub
and
scas
test
scas
push
cmc
pop
scas
and
cs
repz
fisttpl
push
sti
ret
clts
sbb
jns
out
sbb
sbb
je
ja
and
int3
dec
add
out
push
fstpt
mov
push
sub
push
enter
fistpll
sub
mov
fdivs
insb
pop
jae
aaa
jbe
xor
lods
mov
push
inc
inc
das
sub
sub
push
and
mov
add
lea
cmpsl
aam
out
je
mov
jbe
aam
rolb
sbb
test
out
mov
ss
es
cmp
scas
dec
test
mov
mov
popf
test
ret
loope
mov
into
pusha
lret
inc
xchg
imul
cld
push
fwait
repnz
cltd
cmpsb
pop
sbb
loopne
and
test
inc
call
and
inc
jmp
iret
xchg
and
leave
sub
xchg
adc
push
leave
xchg
pop
push
arpl
sbb
inc
jae
adc
mov
punpckhwd
mov
ret
movsl
icebp
imul
and
dec
in
shll
jecxz
sub
lcall
sbb
aaa
ret
mov
mov
mov
bound
add
jp
mov
inc
daa
sahf
lods
xchg
add
cs
ja
imulb
add
xor
test
xchg
push
subb
out
out
es
cmc
push
aas
mov
or
sub
xor
cmpl
fs
lods
shl
sbb
les
push
dec
mov
nop
jbe
lret
gs
mov
dec
cmc
divl
cmc
jg
fs
cmpl
stc
cmp
mov
bound
sar
pop
lcall
pop
and
xchg
adc
call
outsb
clc
xor
mov
nop
lods
mov
push
stos
lds
scas
cwtl
popa
out
jno
push
ficoms
xlat
push
test
xchg
jl
adcb
or
lret
mov
sub
in
cmpsb
les
cmc
dec
popf
movsl
lret
mov
mov
scas
imul
test
shl
cmpsl
jnp
int
fnstenv
cmp
pop
and
fists
cmp
call
dec
dec
xchg
stos
cwtl
jp
mov
lds
movl
sbb
dec
sub
orb
sub
or
push
cmp
pop
and
dec
dec
fmul
mov
xor
cmp
jb
js
mov
mov
pop
pop
push
xchg
mov
lods
or
es
pop
jecxz
pusha
scas
es
or
and
dec
lods
fs
xor
lods
out
xor
cmc
repz
add
dec
addr16
xchg
and
cs
sbb
jbe
push
xor
fucomi
in
cmpb
stc
mov
mov
push
jns
aam
jecxz
sbb
insl
xchg
outsl
popf
or
in
stos
mov
fwait
jecxz
mov
jg
ficoms
adc
jnp
movsb
inc
ffreep
adc
and
insb
dec
sbb
ds
sub
jne
inc
in
fldcw
out
pop
push
btc
xchg
call
cmpsl
fldt
hlt
pop
sub
mov
loop
int
fldenv
jns
push
in
push
mov
inc
xor
or
pop
fisubrs
jbe
jmp
jnp
cs
mov
inc
lods
mov
pop
dec
sbb
jecxz
das
scas
lret
cmp
sub
repnz
jbe
or
push
xchg
jmp
nop
xlat
dec
sbb
fldenv
add
fisttpll
xchg
add
inc
xor
add
jmp
sub
repz
adc
mov
cmp
hlt
push
push
inc
jbe
xchg
xchg
push
int3
xor
daa
jns
cmp
repnz
aas
cmc
sub
cmp
xor
xchg
gs
push
fldcw
inc
lea
insb
outsl
dec
xchg
mov
fldcw
or
and
inc
mov
or
xchg
insl
mov
mov
push
push
pop
mov
mov
mov
pop
pop
nop
dec
ret
sarl
and
jne
repz
pop
cmp
bound
loope
jb
xchg
cmpsb
fistl
js
sbb
add
mov
xor
sbb
push
loop
and
scas
adc
cli
aad
sbb
in
rcll
popf
je
and
or
imul
inc
mov
inc
andl
xchg
addr16
pusha
cmp
mov
and
bound
call
inc
inc
push
addr16
xlat
jns
leave
test
xchg
arpl
push
fcmovu
jnp,pn
cwtl
add
arpl
pop
jo
mov
and
fsubp
ret
iret
test
jecxz
scas
jnp
into
rorb
xor
pop
sub
fsubr
and
inc
lods
pushf
cs
out
add
push
lds
xor
jnp
stos
mov
jne
aaa
enter
mov
mov
fisubrs
sub
jne
pop
mov
leave
xor
adc
lods
push
dec
into
or
mov
data16
mov
loope
or
movsl
and
pop
outsl
ds
cmpsb
jne
jns
ret
sub
inc
movsb
mov
scas
and
ret
cli
dec
push
or
ret
test
mov
cld
fdivl
adc
mov
es
stc
cld
push
vrsqrtss
push
test
xchg
sbb
lock
bound
clc
xchg
sub
or
dec
mov
imul
sbb
nop
push
sbb
testb
orb
add
aas
and
xchg
mov
push
mov
test
xchg
ret
dec
pop
test
jo
dec
stos
mov
shrl
stos
mov
mov
pop
lcall
lock
or
ret
lock
add
popl
fldcw
fimull
arpl
add
mov
pop
mov
ret
inc
mov
insl
xchg
adc
adc
dec
dec
dec
filds
cmp
mov
fs
out
out
imul
cmp
lods
inc
outsb
cltd
scas
mov
stos
xor
adcl
in
mov
sarl
std
mov
cmp
xor
jecxz
jg
icebp
fwait
in
sbb
sub
push
scas
dec
aam
aam
jmp
inc
lock
inc
mov
pushl
xor
out
pop
stc
and
out
mov
and
test
push
mov
fistps
test
push
insl
and
mov
out
inc
cmp
lds
mov
xchg
mov
cwtl
jns
add
jne
pop
inc
lock
in
and
jbe
jno
jno
loop
jbe
push
jne
mov
popf
test
addr16
sbb
mov
jg
daa
cld
out
jne
ljmp
mov
sbbl
pop
adc
in
test
or
movsl
sbb
push
push
xchg
leave
fdivl
mov
sahf
lock
sub
xlat
arpl
mov
xchg
mov
enter
jg
mov
das
sub
add
add
cmpl
int
idivl
addr16
lret
fstps
lahf
outsl
push
lret
lcall
mov
arpl
cmpsl
sbb
xchg
pushf
jns
aam
fstpl
idivl
push
fwait
jns
xchg
pop
mov
repz
pusha
js
mov
xor
push
and
xor
and
cli
sbb
adc
xor
mov
nop
out
scas
es
cpuid
or
or
dec
mov
fdiv
sbb
out
mov
and
out
orb
ret
xlat
xchg
and
push
and
aaa
in
adc
ja
sbb
in
mov
xchg
lea
xor
mov
rcrb
pmulhuw
mov
push
ss
xor
mov
mov
mov
lret
sbb
inc
mov
pushf
call
pusha
push
ret
jno
sahf
ficomps
div
cmp
fbld
fmuls
jb
enter
mov
inc
movsl
mov
push
mov
push
sbb
jns
iret
cmpsb
dec
outsb
fdivr
fnstcw
jp
sbb
inc
cmpsl
xchg
dec
mov
test
or
mov
jnp
mov
outsb
jg
out
adc
insl
pushf
insl
fistpl
dec
jbe
outsl
aam
push
jmp
add
or
xor
mov
fstps
xchg
add
jl
pop
stos
pop
pusha
lds
jbe
mov
int3
jle
leave
sbb
xor
repnz
xchg
mov
or
aam
pop
out
rcrl
andl
ret
outsl
dec
jge
or
xchg
push
xlat
sbb
jl
fimull
sbb
test
lock
imul
clc
nopl
adcb
daa
cmp
mov
jnp
adc
and
lea
out
push
pop
in
push
pop
ja
cmp
push
outsl
data16
ja
leave
and
mov
and
mov
xor
jns
add
cmp
lods
cmp
xchg
fsubr
sahf
pop
repnz
je
or
insb
mov
mov
push
inc
or
sbb
lds
daa
pusha
sti
cld
mov
cmp
and
cli
sar
into
fs
xor
cmp
inc
aas
mov
and
jb
jnp
mov
loope
shrb
sub
and
mov
add
lea
adc
ret
adc
push
into
jo
xor
and
lea
xor
mov
add
jmp
out
adc
fisttpll
jmp
cmp
push
sbb
xchg
mov
jecxz
outsl
jnp
imulb
insb
sbb
adc
jecxz
test
roll
movsb
call
fwait
int
fwait
lret
fwait
jecxz
mov
mov
push
jae
sbb
jns
mov
adc
rcl
repz
loope
in
outsl
mov
push
mov
adc
adc
jnp
cmpsl
js
mov
std
vpaddb
insb
ljmp
add
imul
or
rcr
mov
pop
pop
sbb
and
and
andnps
sbb
or
push
add
mov
push
sub
lcall
xor
daa
out
pop
outsl
pop
mov
add
or
leave
push
cmova
sbb
or
aaa
movsb
lods
ret
and
scas
and
fs
ret
stc
js
add
xchg
cmpsl
pushf
inc
pop
adc
add
ficomps
movsb
jbe
out
insb
xchg
sbb
repnz
rcrb
sbb
sbb
imul
pop
push
mov
cmp
fs
jae
fcomps
in
push
inc
jge
mov
dec
push
fistpll
dec
ja
or
stos
aad
stc
nop
lods
push
mov
push
cmpsl
jb
and
faddl
add
lea
jbe
movsl
mov
out
in
ror
lahf
sbb
adc
xor
fwait
into
sub
sub
popf
out
xchg
pusha
jl
sbb
cld
pushl
dec
stc
dec
gs
outsl
insb
pushf
jp
popa
jnp
jnp
movsb
lock
mov
fcoms
jle
lods
cmpsl
clc
xchg
xlat
xchg
div
jno
xchg
outsb
pop
loope
imul
stos
add
push
popa
in
xor
fldcw
adc
imul
push
jmp
lods
xchg
adc
xor
xor
jg
ret
cli
adc
pop
outsl
leave
lss
sbb
push
dec
xor
mov
loop
jmp
push
inc
mov
xchg
pop
cmp
add
mov
push
push
sbb
xor
test
mulb
sub
jb
jl
sbb
xor
push
or
pop
mov
cmp
stc
cld
mov
xchg
jne
push
fimuls
mov
adc
jl
sub
out
inc
hlt
repnz
sub
add
jl
dec
xchg
popf
imul
ret
push
mov
mov
incl
jne
push
dec
fyl2x
push
xchg
lret
dec
pop
lret
fscale
scas
test
shll
adc
push
scas
outsb
push
cmp
test
ffree
mov
clc
sub
sub
pusha
sub
jae
xchg
insl
push
cwtl
sbb
dec
stos
add
pop
fisubl
mov
sub
ja
mov
jne
add
cltd
sbb
push
sbb
push
push
jo
stc
ficompl
inc
jg
clc
xchg
pusha
jg
test
cmp
sbb
xchg
jae
add
dec
mov
fbstp
mov
xchg
pop
push
popf
and
pop
das
shrb
or
gs
nop
dec
inc
cmp
fsubp
dec
data16
lods
mov
lahf
sarb
sahf
clc
mov
mov
inc
nop
inc
je
jmp
jge
std
xor
decl
loope
adc
ret
fsubs
jge
mov
cli
jb
dec
pop
or
push
out
out
cmp
outsb
mov
mov
and
and
and
mov
jae
repnz
dec
xchg
and
mov
mov
jb
adc
lcall
cmp
cmc
stc
dec
outsl
in
jge
mov
outsl
cli
mov
add
mov
push
mov
mov
cltd
mov
out
xor
adc
xchg
les
cmp
imul
jmp
inc
orb
sbb
pop
and
pop
test
xor
xor
mov
je
jmp
test
mov
sub
stos
rcrl
ret
sarl
mov
cs
fisubl
mov
inc
jle
mov
xor
in
adc
add
imul
jb
das
mov
icebp
sbb
jmp
je
xor
cmc
inc
add
jg
xorl
out
movsl
andl
sub
mov
loopne
push
in
cltd
out
push
add
in
repz
inc
inc
xor
xchg
pop
cmp
xor
or
fwait
push
jp
shll
lcall
mov
mov
jmp
sub
jo
lcall
pop
inc
jns
call
int3
mov
adc
les
mov
call
adc
movsb
or
cmp
cli
add
pop
xor
adc
push
xchg
mov
or
lock
mov
jbe
daa
shr
mov
aas
int
push
testb
into
lea
lret
xlat
pop
iret
fisubrs
imul
arpl
lcall
out
sub
das
les
adc
push
imul
pop
loop
push
les
add
notl
sbb
lds
jmp
or
sahf
imul
dec
sub
nop
adc
movsb
sbb
test
popa
ror
and
cltd
cmp
push
mov
fs
mov
jne
fldt
fdivl
mov
pop
ja
inc
cmp
mov
cmp
add
push
cmp
movsb
je
sbb
dec
cltd
xchg
mov
mov
mov
xchg
cmp
clc
sub
mov
mov
cmp
push
mov
jmp
ret
push
xchg
mov
scas
jns
sbb
popa
sbb
push
cmc
and
pushf
pushf
or
dec
je
mov
mov
cmp
clc
pop
into
and
pop
sbb
mov
test
or
jg
in
aas
mov
inc
lds
mov
inc
into
out
mov
mov
inc
idiv
push
sbb
and
imul
add
mov
rol
iret
pop
pop
mov
mov
xlat
add
add
adc
ret
push
sub
sub
call
imull
and
cmp
stos
cli
int3
sbb
scas
int3
sub
and
fadd
cmp
cmp
iret
divl
addl
xor
popf
mov
stos
add
orl
inc
int3
enter
sbb
or
xor
aam
mov
add
jae
lcall
lea
ret
mov
imul
filds
or
xor
mov
or
dec
add
js
xchg
call
and
stos
pusha
test
shll
mov
ret
jo
cmp
xchg
scas
push
push
into
test
mov
cmp
nop
pop
or
xchg
xor
std
fidivrs
mov
repz
mov
mov
lods
mov
cmp
bound
mov
mov
pop
sub
ja
clc
aad
push
and
lret
push
loopne
xor
sub
shll
or
push
mov
cwtl
sbb
stos
call
mov
pop
xor
fisubrl
mov
push
push
add
jnp
adc
cmp
sbb
cltd
mov
leave
cmp
or
es
aas
ret
das
movsb
leave
cwtl
add
jnp
push
fistpll
pop
addr16
and
cld
mov
cmp
add
std
dec
mov
inc
fadds
cmpsb
sbb
mov
add
cld
mov
cmc
mov
loop
push
es
in
movsl
loopne
cmpsl
or
xchg
cld
xor
repnz
mov
xor
dec
cltd
add
nop
add
mov
mov
dec
xchg
or
dec
xor
sbb
jecxz
mov
dec
mov
jne
or
dec
in
adc
sahf
cltd
scas
lret
imul
fs
fistpl
stos
mov
cmp
lds
xor
jle
and
adc
adc
icebp
inc
mov
fcomi
outsb
jne
xchg
xchg
mov
mov
filds
lahf
std
pushf
mov
iret
mov
and
xor
call
sahf
dec
lods
test
addb
loopne
pop
xor
xchg
std
adc
adc
pop
imul
je
xor
adc
sbb
xchg
cwtl
inc
jp
lock
xor
rcll
pushw
call
in
dec
xchg
call
aad
mov
push
or
dec
fst
aad
pop
or
mov
xchg
incl
enter
fmuls
mov
jns
pop
jo
push
stos
outsb
mov
cmp
imul
fsubs
loopne
outsb
ljmp
push
pop
sub
sub
mov
dec
push
jmp
xchg
int3
data16
addr16
in
iret
test
xchg
or
sub
loope
jmp
test
insl
repz
add
in
add
cmp
mov
xchg
imul
fucom
insb
leave
mov
jae
add
shll
adc
pop
push
addr16
rol
pushf
sub
pushf
mov
out
or
add
call
cld
stos
jo
and
xchg
jp
nop
dec
ljmp
dec
cmp
idivb
sub
or
lret
mov
adc
push
pop
inc
cmp
lods
mov
cwtl
aas
lahf
sbb
xchg
test
ror
cmc
mov
jle
jl
sbbl
sub
pop
mov
pushf
and
adc
jb
mov
push
inc
not
ss
add
inc
repz
sub
sti
pop
pop
movsl
aad
add
cmp
std
dec
imul
cli
stos
ja
pop
cmpsl
mov
sbb
aam
mov
inc
into
dec
fcompl
loopne
andl
imul
add
add
iret
cmp
shrb
ds
fildll
pop
xchg
loop
push
sti
rcrl
xor
add
ret
inc
adc
mov
insl
cltd
loope
bound
pushf
idivl
outsb
xchg
inc
jmp
sbbb
cli
ret
jae
jo
jecxz
cmpsb
mov
aaa
sti
bound
dec
call
aad
dec
pop
jne
jl
call
loopne
int
pop
push
pop
std
inc
xor
jbe
stc
call
inc
sahf
scas
and
out
cld
inc
dec
testb
cmpxchg
and
push
mov
mov
cli
ficompl
jl
push
lret
ds
lea
push
popa
xchg
inc
adc
negb
inc
out
lahf
dec
fwait
mov
xor
and
leave
jnp
loopne
fmul
int3
inc
mov
outsl
inc
data16
out
dec
cmp
push
aaa
mov
orb
add
lret
push
sbb
inc
and
jge
mov
pop
movsw
mov
sbb
rcrb
jecxz
movb
jne
push
enter
scas
jae
xor
sub
cmp
adc
lds
popa
lds
lds
sub
aas
fdivr
add
xor
cmpb
das
lret
int3
popf
lds
outsb
mov
mov
leave
xchg
push
jle
mov
inc
je
addr16
out
outsb
jecxz
jge
jb
popa
imul
daa
cli
push
arpl
loop
inc
daa
pop
nop
dec
sub
int3
inc
test
add
aam
cs
aad
dec
push
imul
mov
ljmp
inc
add
push
lods
sub
fwait
aad
adc
mov
pop
lds
mov
push
fbstp
pop
cmp
jmp
pusha
fiadds
lods
push
outsb
mov
scas
add
xor
subl
stos
fisttpll
pop
sbb
mov
aad
cmp
jne
fs
stos
pop
sbb
gs
sbb
mov
call
aad
cld
jg
lea
mov
pop
inc
in
aad
cs
mov
mov
movsl
mov
mov
xchg
push
mov
dec
pop
mov
into
mov
inc
mov
clc
push
jnp
in
out
jae
xchg
hlt
add
mov
add
sub
inc
push
pushf
add
aaa
sub
pop
fnstcw
jns
ds
sbb
push
stos
outsl
cmp
xchg
and
mov
add
pop
sti
fwait
rclb
pop
push
loopne
in
in
bound
lods
add
lahf
sbb
lss
adc
lds
test
xchg
cmc
sub
scas
aam
ficomps
xor
xchg
sub
xor
xor
stc
test
scas
inc
ret
idivl
mov
add
cmp
test
or
fidivs
dec
pop
cmpsb
ljmp
mov
mov
mov
add
adc
imul
pop
imul
mov
jno
addr16
cmp
fstl
sub
pop
sub
ljmp
add
rcrb
xor
fldenv
cs
dec
stos
adc
and
xor
loopne
enter
or
decl
push
fwait
push
pushf
dec
xchg
inc
dec
pop
lcall
dec
adc
lret
push
push
enter
repnz
ret
hlt
loop
mov
jo
push
lret
push
aad
cld
outsl
flds
icebp
gs
insb
or
loope
enter
mov
mov
stos
fbld
push
pop
mov
adc
sbb
aaa
fsts
mov
popf
push
xchg
iret
fidivrl
mov
adc
and
mov
xchg
pop
pop
inc
or
loope
dec
lcall
jmp
out
push
int3
out
into
xor
add
cltd
outsl
pop
pop
or
or
test
pop
fs
dec
enter
je
xor
mov
cwtl
test
push
ret
mov
sbb
sbb
arpl
lret
dec
push
imul
xchg
inc
push
call
mov
fnsave
sti
loop
in
mov
pop
jle
call
adc
dec
ret
ljmp
xor
cmp
pop
cmc
imul
add
loop
outsb
cmp
ret
adc
cmp
cmp
ret
sub
pop
loop
jle
loope
test
inc
lods
sbb
mov
pop
outsb
sbb
mov
jne
xor
dec
arpl
jno
lret
push
in
mov
sbb
mov
shll
sub
ret
mov
mov
fsubp
mov
pusha
pushf
fidivl
out
lret
popa
mov
ret
cmp
mov
jbe
sar
inc
repz
in
mov
adc
cmp
shll
push
stc
aad
daa
mov
loop
inc
enter
mov
mov
sbb
adc
cli
into
loop
pop
pop
fisttps
data16
push
sub
js
sbb
addr16
loope
add
mov
hlt
loope
jmp
int3
inc
in
dec
xor
jo
xchg
jl
mov
dec
cli
pusha
pop
lret
inc
imul
mov
dec
arpl
push
mov
mov
mov
dec
push
pop
out
gs
and
into
mov
sbb
mov
leave
inc
and
jae
cmp
cmc
push
cs
scas
and
shll
scas
xlat
les
cs
aad
sar
fwait
push
dec
mov
inc
dec
mov
push
sub
xlat
fistpl
adc
xor
int3
pop
sub
lcall
or
lcall
frstor
mov
mov
test
xor
push
inc
adc
ja
sub
push
out
xor
lods
adc
out
inc
cld
cld
rcrb
out
pop
js
test
push
mov
fistpll
mov
pop
aad
jle
push
inc
jecxz
sub
cltd
in
bound
push
daa
xchg
fstpt
or
adc
and
xchg
and
mov
fcmovnu
repnz
loop
nop
int
cmp
fdivp
sbb
test
jo
cli
rcr
pop
sbb
test
sub
xchg
out
es
or
pop
hlt
aas
das
test
add
stos
cmp
xlat
sbb
jne
std
pop
aam
pop
push
push
cmpl
xchg
ljmp
mov
mov
or
hlt
mov
aas
movsb
cmp
dec
scas
fnstenv
outsl
ds
mov
sub
lahf
fsubrs
out
nop
out
imul
inc
xlat
loop
dec
daa
fwait
dec
call
scas
movsb
rorl
incl
sbb
mov
stc
lods
push
mov
jno
jbe
sub
bnd
cli
sbb
cmp
sahf
add
xchg
jb
mov
sub
adc
pushf
cli
bound
push
dec
insl
fisubrs
push
xchg
xchg
xor
cli
sub
js
jge
adc
fwait
mov
imul
lock
es
push
sbb
adc
pop
mov
sub
push
push
jo
in
add
and
sbb
aad
mov
add
pop
push
jmp
stos
lds
nop
mov
lock
fstps
mov
lea
push
jo
jecxz
lods
nop
mov
cmp
fwait
int3
int3
mov
mov
cmp
xchg
cmpsl
inc
and
stos
sbb
dec
ss
push
sahf
lock
repnz
mov
je
add
test
int3
dec
cmpsl
sahf
jg
add
repz
push
lret
cmpl
mov
jbe
ret
imul
jbe
ret
scas
add
sbb
and
dec
cmp
scas
add
ret
daa
mov
out
inc
xchg
test
mov
js
jb
or
mov
inc
sub
cmp
cld
add
sub
add
mov
pop
fcomps
fcomip
lock
and
andb
push
mov
add
sti
push
repnz
cli
fs
dec
shl
sub
lcall
imul
imul
stc
jae
test
popf
fisubrl
arpl
in
mov
enter
ret
mov
xlat
cmp
out
xchg
aas
and
nop
je
jnp
fisubrl
movsl
mov
sub
adc
xchg
xchg
ljmp
mov
adc
push
cld
add
in
dec
loopne
pop
pop
je
nop
stos
rcrl
popf
sbb
xchg
pop
ss
mov
sarb
jp
out
xlat
jg
push
outsb
lret
sub
test
jo
add
sti
sub
int
jne
push
push
pushf
mov
inc
jmp
test
xor
lds
stos
cmp
jecxz
test
fxch
add
fimull
sub
xchg
mov
lret
sub
inc
iret
jne
outsb
popa
jb
pop
cs
pop
lods
adc
testb
inc
dec
push
fabs
xchg
mov
ffreep
sahf
cmp
lods
sub
xor
cmp
or
fisubrs
cld
cli
mov
xor
adc
jmp
mov
stos
arpl
movsl
into
rclb
inc
pop
xchg
add
xor
popf
cmp
dec
int3
xchg
stc
popf
ret
or
addr16
mov
mov
dec
xor
pop
push
pushf
fildl
jle
or
jno
xor
popf
jg
pushf
mov
ljmp
mov
or
mov
out
test
dec
adc
addr16
ljmp
lcall
jns
in
mov
shll
pop
dec
mov
cld
add
iret
push
pop
add
lcall
stc
out
inc
rclb
cmp
adc
jno
enter
inc
scas
mov
push
mov
mov
or
arpl
test
or
dec
xor
push
cmp
out
aas
pop
xchg
lcall
mov
addr16
les
enter
mov
sbb
xchg
out
mov
ret
or
nop
leave
cmp
push
pop
arpl
int
data16
push
mov
xlat
fidivl
xchg
or
adc
inc
mov
clc
and
inc
adc
mov
jl
test
fcmovne
dec
inc
mov
loopne
fimull
push
xchg
fcmovnbe
fildll
das
mov
test
sbb
mov
rclb
inc
scas
pop
jne
sbb
call
scas
hlt
sbb
mov
mov
and
sbb
jge
dec
repnz
and
or
dec
fcomps
mov
push
adc
fwait
sub
fstl
jl
add
popf
jg
js
andb
mov
fistpll
sub
fcoml
mov
psrad
push
ds
in
add
gs
cmp
xor
je
sub
sub
imul
int
push
or
cmp
int
xchg
mov
test
loope
nop
add
sbb
jae
rorb
stos
or
bound
cmc
xor
or
sub
jle
aad
sbb
sbb
lret
add
add
adc
data16
sub
movsb
lret
orb
jno
dec
cmc
int
out
and
scas
jl
not
push
and
sub
lock
mov
pop
rcll
pushf
xlat
mov
xor
mov
cwtl
loopne
jmp
add
lahf
cwtl
loope
jg
xor
and
xchg
sahf
lods
dec
and
adc
pop
sbb
sub
pop
dec
fwait
push
dec
mov
popl
lret
dec
ror
and
ret
push
je
jmp
repnz
int
push
loopne
cmp
push
popf
mov
push
sti
popf
popa
sbb
sub
lcall
repz
rolb
leave
jmp
xchg
and
sbb
mov
xor
nop
insb
ret
xchg
sti
add
jo
push
mov
pusha
and
or
mov
ss
and
inc
iret
test
cmp
adc
inc
nop
mov
in
xchg
push
xchg
int
nop
mov
cmp
gs
pusha
test
lock
fistpl
js
lods
ret
fmuls
in
mov
lret
dec
mov
mul
dec
aad
xchg
xor
insb
pop
xchg
fcoms
sbb
xor
out
sbb
dec
fucomp
and
jno
test
movsb
cmp
ret
mov
xchg
or
jne
sub
sbb
pop
and
xor
xchg
mov
aas
std
xorl
int
mov
xor
inc
stos
sahf
sub
lcall
popa
mov
lret
mov
fstps
xor
daa
popa
jne
or
inc
adc
sub
pop
mov
cmc
cmp
lock
sub
pop
rolb
push
in
mov
leave
cs
xchg
andl
inc
adc
aad
loop
test
cmp
and
in
or
jno
stos
lea
pop
int
mov
jp
sbb
cli
mov
adc
imul
fmul
dec
pushl
lahf
and
sbb
outsl
fwait
push
idivb
cmc
out
adcl
aad
test
cmp
pop
adc
pop
shrb
bound
push
pop
movsl
lea
mov
outsb
mov
mov
mov
lret
cmpsb
push
dec
lret
and
clc
rolb
cmp
fdivrl
push
ret
xchg
into
mov
push
cmp
xor
jbe
iret
das
aaa
pop
clc
jnp
inc
test
in
nop
or
push
into
jbe
or
data16
enter
imul
das
sub
push
decb
sbb
stc
push
fisubl
pop
sub
repnz
sbb
rcrb
and
pop
ficomps
mov
jle
xchg
and
jns
nopl
mov
adc
dec
pop
mov
push
js
sbb
std
jb
xor
in
mov
jmp
inc
cmpsl
mov
add
fstpl
or
test
daa
pushf
pop
mov
and
in
sbb
lds
push
dec
mov
movsl
mov
sbb
push
dec
mov
lock
cmp
pop
dec
mov
push
xchg
pop
cmc
push
fmull
xchg
and
loopne
xchg
stc
xchg
pop
mov
dec
pop
cmp
adc
dec
cmp
mov
test
aaa
subl
daa
popf
pop
mov
adcl
and
inc
pop
jae
mov
mov
stc
cmp
pop
icebp
mov
xor
jp
xor
lods
push
and
js
sti
out
imul
lea
push
inc
mov
sub
add
cmpb
outsl
mov
mov
test
gs
call
repz
pop
jb
inc
cmc
jg
das
adc
xchg
mov
addr16
es
jl
addr16
pop
out
out
test
fimull
mov
adc
and
es
ss
mov
add
pop
loopne
push
inc
jns
sbb
or
imul
add
stc
rorb
mov
rolb
js
aam
mov
pop
loope
test
mov
mov
jecxz
mov
in
orb
xchg
jo
clc
cmp
stc
icebp
push
call
hlt
mov
mov
pop
jp
sub
fwait
xchg
repz
rorl
out
push
dec
imul
and
xor
rorl
enter
mov
and
jle
lods
xchg
or
push
inc
pop
insb
repnz
rcll
or
stos
das
xchg
cltd
ds
lods
fstpt
ret
cmpsb
mov
loop
ret
test
aaa
or
xor
fwait
fs
xchg
sbbl
stos
cwtl
in
sbb
fstps
dec
aas
lock
and
dec
addr16
push
cmp
ds
mov
enter
les
mov
into
testb
pushf
xor
sub
push
scas
mov
repnz
push
cmp
xchg
sbb
lret
fsubrp
dec
mov
lock
cmp
lret
mov
push
adc
cmp
movsb
mov
add
fwait
adc
outsl
cmp
adc
repnz
inc
sbb
stos
jbe
sub
jmp
sti
xchg
dec
adc
cwtl
aaa
sbb
and
add
sbb
imul
dec
adc
popf
inc
or
test
and
xchg
pop
sbb
aad
inc
xchg
iret
fdivrs
addr16
jmp
cmp
sti
testl
pand
mov
adc
push
push
cmp
mov
push
cmp
and
pop
int
lock
pop
aad
rcrl
or
loope
and
mov
pop
jecxz,pt
push
loope
xlat
leave
lock
xchg
jecxz
aas
cmp
lea
push
cmp
adc
cld
pop
push
push
rcrb
pusha
mov
ss
adc
mov
cmp
daa
pop
or
push
push
loopne
xlat
push
lret
sub
jmp
and
xchg
dec
jae
adc
sti
arpl
cli
mov
add
test
movl
inc
sarl
push
loop
je
mov
sbb
mov
pop
jb
mov
xor
stos
fadd
push
roll
fwait
dec
call
fdivrp
push
inc
rcl
notl
imul
mov
sbb
inc
inc
rcll
dec
push
cmp
sub
dec
jge
mov
pop
icebp
iret
aam
dec
push
enter
mov
fwait
or
jns
cli
rorb
cmpsl
or
push
mov
pop
pop
nop
ss
pop
cs
xchg
mov
and
int3
lock
push
fsts
lcall
cs
xchg
lock
adc
bound
into
adc
jl
dec
xchg
test
js
fbld
enter
dec
add
into
sub
dec
ljmp
push
and
push
and
ret
mov
outsb
jge
out
fmuls
mov
mull
loope
add
push
inc
sbb
out
push
or
push
lcall
fwait
mov
punpcklwd
ficompl
push
pop
in
js
ret
cmpsb
xor
lods
scas
scas
jne
scas
scas
add
pop
and
mov
insb
and
mov
cli
arpl
nop
jmp
lret
test
divl
xor
out
or
jg
push
push
mov
push
xor
rclb
test
clc
fsubr
in
and
mov
loop
rorb
iret
cltd
aas
aas
push
and
ss
cld
mov
outsl
pop
popf
lcall
cwtl
push
fstps
enter
mov
scas
loop
and
lea
push
jbe
nop
mov
das
out
aam
popa
rcl
incb
xor
xor
pop
lods
loope
pop
xlat
pop
outsl
pop
fimull
mov
addr16
les
int
scas
push
or
cmp
sbb
inc
mov
pusha
into
pop
pushf
pop
xchg
inc
fildll
dec
aam
jae
aaa
mov
inc
aad
into
jge
cli
pop
push
mov
fsubrl
fwait
sti
stos
je
jp
xchg
test
jae
push
aas
jo
repz
enter
rcll
outsl
jnp
shrb
push
xchg
mov
outsb
rorb
ss
lret
cmp
aam
lret
ljmp
cmp
fildl
testl
xor
data16
jl
mov
xchg
fs
fisubrs
sub
pop
rcll
and
orl
testb
insb
mov
inc
test
push
jecxz
push
js
dec
jl
jle
pop
dec
mov
add
sbb
andl
dec
add
out
mov
out
outsl
sub
xor
call
xor
jno
lret
in
icebp
or
addb
pop
pusha
pop
or
dec
fsubs
add
xchg
mull
je
imul
int
lds
inc
push
popf
addr16
shll
idivb
int3
sub
pop
nop
pop
ficompl
pusha
pop
mov
lock
nop
hlt
jne
fs
xchg
cmp
cmp
xchg
test
cwtl
orb
in
cmp
xchg
inc
xchg
sbb
adcb
inc
fnstenv
xor
pusha
into
adc
fs
hlt
les
sub
bound
push
in
enter
iretw
and
xor
fucomip
fcomps
adc
stos
ret
jg
mov
nop
mov
bound
pop
push
decb
fimull
adc
push
push
out
cmc
call
lcall
mov
shlb
push
jne
fistl
cwtl
ret
and
pop
push
pop
jecxz
mov
sub
mov
add
pop
enter
filds
xor
sbb
mov
mov
mov
jb
push
inc
into
sub
adc
stc
sbb
and
push
sarl
mov
popa
fldl2e
cwtl
je
inc
test
mov
call
mov
enter
sbb
hlt
push
repz
or
pop
flds
push
mov
fcoml
lcall
shl
mov
pop
add
or
mov
add
pusha
or
test
or
xchg
inc
mov
divl
xchg
insl
jne
add
dec
scas
subl
xor
add
pushf
push
sub
pop
iret
push
scas
decl
fisubrl
ss
repnz
xor
or
in
mov
lock
xchg
push
mov
or
and
dec
in
pop
mov
roll
xchg
mov
int3
pop
test
imul
scas
mov
jecxz
push
sbb
or
cmpsb
stos
pop
pop
add
sbb
dec
push
push
add
xlat
cmpsl
pop
rorl
sti
mov
jns
cmp
add
cli
xor
and
sub
push
or
jmp
inc
dec
addr16
mov
xor
cmp
out
jo
push
daa
jae
xor
mov
inc
ret
testl
push
and
in
pop
test
sbbb
popf
inc
lahf
dec
leave
testb
ss
jecxz
sbb
xor
push
sbbl
shr
add
adc
cmp
les
idivl
sti
data16
out
movsb
adc
pop
sub
adc
pop
jns
xchg
fisubrl
add
ss
sbb
test
imul
dec
loope
xchg
test
addr16
and
adc
adc
sub
insl
loope
jae
pop
add
pop
add
fnstsw
je
ljmp
mov
js
data16
imul
fsubrs
dec
into
stc
inc
dec
out
sub
orb
mov
fsubr
out
mov
movb
push
popf
test
mov
insb
pop
cld
cld
sub
scas
test
cmp
cmp
add
fwait
out
popa
out
xchg
cmc
mov
mov
xchg
lahf
popf
test
add
adc
jecxz
testb
test
mov
dec
xor
jne
sbb
iret
mov
icebp
dec
dec
inc
movsb
inc
outsl
adcb
outsb
sub
add
mov
xchg
es
ret
lcall
add
xchg
inc
jb
stc
or
xor
sub
int
in
push
loop
adc
sub
in
add
cmp
pop
out
inc
lret
repz
adc
cs
sbb
nop
push
lds
lds
in
pop
outsl
outsl
or
mov
cmp
xchg
push
adc
imul
int3
and
cltd
lock
out
mov
negl
push
xchg
inc
xchg
leave
divl
jge
fcmovnb
insb
scas
push
cmp
push
lods
data16
std
sahf
mov
jno
or
fwait
pop
mov
mov
lret
out
ds
pop
repnz
cmp
sbb
loop
cs
test
jge
enter
xchg
daa
mov
jg
sbb
ljmp
dec
jno
add
stos
sbb
add
lret
clc
inc
adcb
sub
and
sbb
bnd
push
int
mov
add
and
lods
sbb
scas
std
rcrl
movsb
mov
xor
popa
out
jp
and
shll
sar
cld
jns
cmp
out
aaa
lock
sub
add
mov
adc
lea
fsts
lgdtl
pop
push
or
sti
dec
shl
mov
hlt
clc
jg
mov
mov
jle
pop
ljmp
dec
js
out
jne
mov
sar
repnz
or
ret
fstp
mov
mov
mov
cmp
mov
in
mov
pop
inc
gs
push
jo
sbb
dec
dec
jp
test
sub
sbb
and
and
cmp
xor
minps
or
inc
mov
xor
stos
out
push
lds
adc
nop
les
mov
out
ja
mov
xchg
stos
push
ret
loop
mov
mov
jae
push
out
sahf
repz
lds
shr
js
pop
std
inc
mov
movsl
jb
cmc
and
and
xchg
out
loop
aad
push
cmp
rclb
jbe
stos
cmp
test
push
inc
bound
stos
cmc
nop
lret
mov
lea
lock
lahf
mov
mov
sbb
cltd
out
dec
dec
xchg
pop
sbb
push
test
data16
mov
loop
jg
jo
push
dec
aas
jne
mov
pop
inc
repnz
in
in
cmp
inc
inc
sbb
outsl
orl
mov
xchg
cmpsl
out
flds
pop
push
loope
movsl
xchg
cmp
sub
mov
push
out
fcomps
and
std
sbb
adc
lock
jb
imul
into
xrelease
mov
mov
shrb
and
cmp
sub
aas
cmp
jge
xor
cmp
cmp
dec
and
sbb
mov
out
repnz
loope
xor
fisttpl
arpl
jmp
mov
out
jb
dec
movsb
mov
inc
movsb
sarb
sub
lret
jl
xchg
or
jno
push
jecxz
and
and
rorl
xor
xor
loope
sti
test
pop
and
or
jmp
divl
cmpsb
add
xchg
xchg
push
aaa
loope
push
jbe
js
cwtl
sbb
jg
dec
xchg
icebp
xor
pop
shlb
mov
add
push
jno
adc
fs
movaps
loop
mov
pop
test
mov
aad
dec
in
shlb
ljmp
push
and
cld
add
addb
sarb
cmpsb
or
and
dec
in
jno
repz
aam
stc
jge
pop
sub
mov
rolb
or
inc
or
and
sarl
sbb
aas
push
sub
push
jg
cmpsb
cmp
inc
notl
les
or
out
jne
push
je
push
xor
arpl
lods
icebp
popa
xchg
cmp
xchg
push
cmp
add
daa
mov
inc
imul
add
ror
and
add
adc
inc
push
outsb
push
hlt
inc
ret
lock
push
sub
or
dec
test
xchg
lods
pop
sub
adc
dec
enter
xchg
jns
aas
lds
push
adc
inc
cld
xchg
jecxz
inc
aad
lock
popa
jg
popf
ffree
ja
iret
ds
add
jecxz
decb
xor
dec
das
movsl
xchg
adc
xchg
std
mov
mov
xchg
test
popa
psrlq
out
adcb
addl
sub
lret
iret
add
mov
ds
ss
cmpsb
ja
mov
test
lock
aas
fildll
cltd
into
notb
xor
ss
insl
mov
xchg
fsubp
sbb
dec
jbe
ret
cmp
cmp
mov
inc
sbb
mov
mov
add
cmp
push
cmp
jne
pop
jle
jg
and
lds
mov
decl
pop
add
push
mov
push
push
lock
ret
cmp
jo
pushf
lret
xor
dec
insb
inc
fisubl
cltd
roll
mov
jle
gs
loope
repz
movsb
xor
pop
dec
test
data16
lock
ja
aaa
test
pop
mov
mov
pop
decl
add
cwtl
loopne
mov
add
sub
rolb
mov
mov
orl
popa
icebp
and
jo
addb
xchg
in
cmp
jns
jp
mov
scas
xchg
sub
loopne
pop
test
inc
test
data16
jl
cmpsl
movb
xchg
sbb
xchg
addr16
mov
clc
inc
loope
dec
arpl
add
xchg
jg
add
pextrw
scas
fidivrl
jne
push
xchg
jle
mov
mov
dec
jns
xchg
mov
hlt
fdivr
in
add
inc
jo,pn
repz
or
push
fisubrs
and
and
fldenv
call
xor
fs
mov
jne,pn
pop
lret
mov
ds
popa
cmp
mov
imul
sub
mov
test
subl
push
stc
bound
mov
jg
and
popf
pop
cmp
shrl
sahf
push
adc
add
jp
int3
xchg
jno
mov
xchg
mov
and
in
stc
push
mov
fsts
shrl
sub
push
sbb
in
mov
adc
je
cld
cmp
scas
fadds
ds
test
mov
movsb
jmp
mov
xorl
mov
pop
dec
push
fmuls
loop
pop
je
or
decb
mov
jbe
push
loope
mov
fs
push
cwtl
dec
dec
xlat
xor
or
data16
mov
mov
fmull
jb
in
sub
mov
int3
test
xchg
xchg
out
mov
sbb
adc
sub
dec
sbbl
jecxz
pop
je
arpl
add
int
outsl
outsb
lret
test
ss
cmc
dec
inc
scas
push
lret
or
jno
repnz
ret
jnp
add
sahf
les
push
std
std
ljmp
lahf
xchg
mov
cltd
lds
jge
or
push
aas
add
loope
add
sub
cmovne
mov
dec
repz
fnstsw
aaa
int
lods
pop
sbbb
sub
xlat
mov
inc
push
mov
cmc
shrb
leave
stos
movsb
pop
pop
xchg
xchg
arpl
jb
pop
hlt
add
movsb
xlat
inc
adc
jne
in
test
popa
jno
lock
insb
add
out
test
pop
movsb
js
cmp
lret
scas
adc
in
test
mov
adc
jne
mov
enter
inc
inc
jb
dec
cmp
inc
insl
add
sar
mov
push
push
and
mov
cmp
mov
sub
lcall
fisubrs
in
mov
fs
shl
inc
jno
xor
xchg
jo
lea
mov
aaa
repz
out
sub
mov
inc
dec
adc
sub
xchg
sbb
mov
in
lea
mov
mov
add
pop
mov
sub
jno
out
push
or
sub
out
jp
pop
lcall
sahf
sbb
adc
jmp
dec
jmp
into
lods
mov
jmp
jmp
xor
sti
fs
pusha
adc
adc
sar
test
fstpt
inc
scas
sub
cmp
ss
jmp
jno
jns
ljmp
rcrb
fnstenv
out
les
cwtl
rcll
dec
ljmp
adc
inc
push
lret
lock
mov
sahf
testl
popa
push
lods
hlt
mov
sahf
data16
loope
dec
inc
jge
arpl
xchg
cltd
mov
rcrl
xor
movsb
int
scas
stos
clc
cmp
jbe
into
mov
xchg
jmp
or
pop
jge
inc
arpl
xchg
mov
fisttpl
pushf
xor
or
lea
aaa
mov
push
push
movsl
insl
push
hlt
or
mov
push
mov
jge
inc
fistl
jg
jne
lods
sub
pop
mov
popa
pop
loop
aaa
adc
mov
inc
adc
bound
in
fcmovne
in
dec
lahf
lret
scas
fwait
cmp
cmc
or
insb
orl
inc
xor
out
iret
push
rolb
test
fs
stos
mov
inc
hlt
testb
stos
jmp
xsha256
cmpsb
shll
xchg
adc
jno
mov
push
lret
call
sbb
rol
aam
mov
mov
cmp
push
add
dec
popa
aas
lahf
pop
repnz
cmp
in
js
cmp
jl
mov
sarb
adc
sub
aaa
inc
cmp
sti
push
sbb
rcrb
push
and
mov
dec
sub
fsubrp
fists
je
sahf
cmp
pop
dec
mov
popa
sbb
out
add
xor
jae
pop
daa
adc
out
xchg
test
or
xor
aad
xchg
movsb
loope
pusha
rcrb
rorb
mov
pop
outsl
bound
push
inc
push
dec
inc
fstpt
and
test
pop
and
xor
mov
add
test
dec
mov
movsl
xor
sbbb
jno
xor
cmp
xor
pop
jne
pop
mov
pushf
repz
iret
inc
adc
inc
lds
jg
out
orb
rcll
xchg
out
pop
icebp
aad
lods
jp
sub
lock
fnsave
jbe
iret
scas
bound
push
movsb
and
pushl
pop
rorb
fbld
push
jnp
mov
shrl
or
arpl
leave
jmp
dec
test
insb
imul
cmp
lock
in
insb
shll
push
into
cli
xor
addr16
mov
je
addr16
add
scas
ficoml
popf
sbb
fidivl
mov
outsb
mov
out
cwtl
sti
xchg
sbb
cli
add
xor
fs
nop
mov
mov
lret
data16
push
mov
xor
push
push
jmp
subb
jg
pop
xor
mov
or
adc
dec
fidivs
inc
test
dec
mov
aam
or
push
mov
stos
mov
push
jbe
gs
lret
jnp
mov
pop
pop
int3
sbb
out
ja
outsl
push
push
repz
in
sbbb
out
xchg
dec
movsb
jmp
repz
xchg
pop
aam
jae
dec
iret
push
jge
enter
mov
cmc
ret
mov
in
cmpsb
mov
sbb
mov
loope
xor
lcall
push
pop
cmc
stc
adc
inc
es
cmp
js
inc
aam
inc
pop
ror
lret
in
inc
cli
sub
and
fcmovnb
or
imul
out
lret
es
int
arpl
pop
insb
pop
mov
or
xor
mov
and
dec
mov
inc
cmpsb
js
push
fmul
xor
inc
jmp
sbb
dec
add
mov
imull
push
jge
int
jecxz
ret
adc
inc
pop
pop
loope
cmpb
fdivrs
push
insb
adc
iret
movsl
dec
jo
pop
cmp
jnp
and
loopne
adc
and
daa
fwait
cmp
or
loop
push
pop
mov
fstp
dec
dec
inc
jmp
sub
ljmp
dec
loop
mov
std
cli
adc
fsubl
fsub
mov
insl
inc
jle
push
outsb
sub
push
fwait
pushf
sub
dec
lret
mov
leave
jecxz
fcompl
jmp
pop
test
in
cwtl
mov
xchg
sub
jnp
mov
dec
in
sti
jl
fisubrs
and
xor
push
insl
mov
xchg
out
pop
gs
out
cli
adc
ds
cmp
sub
loop
xor
sti
ret
push
pop
call
mov
fbstp
fcoml
push
in
jno
xchg
cmp
mov
movsl
mov
rcrl
out
movsl
push
pop
call
fs
fildll
jnp
inc
fcoml
gs
xor
pop
test
in
push
out
mov
mov
mov
and
fsubrp
jecxz
pop
out
pop
mov
cli
cwtl
and
sbb
jg
mov
adc
sahf
adc
cmc
pop
jb
mov
mov
into
and
lds
lea
xor
pop
cmpb
jmp
adc
pushf
jmp
mov
mov
inc
shll
gs
xor
jge
pop
sbbb
lahf
jne
pop
loopne
pop
outsl
std
int
fmull
lcall
into
add
mov
in
cmp
out
sub
cltd
inc
in
jns
xchg
xlat
and
and
lods
pop
inc
cmpsl
js
mov
or
dec
lds
cmp
or
or
movq
xor
jmp
cmp
xor
fadds
sahf
loop
dec
insb
mov
xor
sub
cmpsl
mov
sbb
sbb
icebp
xor
sub
cmp
enter
lea
xor
in
xchg
cmpsb
cmpsl
pop
sub
push
dec
push
inc
movsb
ds
test
mov
push
push
fimuls
insb
frstor
xor
mov
int
adc
jno
lret
test
insl
pop
in
dec
stos
dec
enter
aaa
shr
cmp
or
mov
push
sti
add
adc
rcll
mov
enter
add
xor
loope
inc
push
mov
xchg
imul
movsb
test
mulb
push
push
sub
sbb
lret
test
and
lret
sub
aaa
push
jl
in
xor
inc
mov
imul
aam
pop
fsubr
push
scas
push
xor
mov
pushf
into
movsl
and
rol
jp
js
jl
scas
mov
arpl
int
ja
cmp
lcall
jb
cmpsb
push
xor
mov
iret
xor
and
test
add
xchg
sbb
repnz
aaa
adc
mov
inc
cmpl
sub
mov
test
sub
sub
sub
fwait
mov
add
imul
outsl
cmpsl
pop
and
bound
call
and
popa
cmp
repz
jg
mov
pop
imul
pushf
ljmp
add
lret
mov
mov
cmc
test
cmc
sub
lret
out
dec
ds
sub
sbb
iret
int
cmp
in
xor
pmaxsw
fldl
iret
mov
and
adc
jmp
sub
scas
sti
filds
mov
es
or
mov
sub
int
xor
loopne
xchg
shll
cmp
mov
hlt
jo
ret
loopne
es
sub
cmpsb
dec
fidivrs
icebp
pusha
push
addr16
test
enter
shrb
aam
pop
add
test
sbb
jbe
mov
sar
lahf
scas
mov
aaa
sub
in
repz
pushf
add
jp
cmp
daa
iret
js
inc
jp
xchg
sahf
and
arpl
fsts
xor
icebp
imul
stos
xor
pop
in
in
arpl
lock
xchg
inc
mov
xchg
cs
mov
ss
push
ja
stos
or
ret
mov
je
push
icebp
push
in
es
imul
pop
pop
adc
mov
mov
daa
andnps
mov
and
das
lret
adc
add
stc
pop
inc
pop
in
push
scas
nop
std
push
dec
call
ret
adc
cmp
test
add
sbb
dec
ljmp
sub
sub
pusha
cwtl
in
iret
ss
push
rcr
cmp
pop
aam
add
dec
sub
push
jl
shl
adc
pop
sbb
and
js
dec
imul
inc
or
jp
subps
mov
cmc
push
arpl
nop
fcomps
cmpsb
pop
clc
or
call
push
xor
sarb
xchg
mov
scas
jecxz
in
xchg
adc
cmp
push
pop
push
inc
sub
shl
add
gs
addr16
int3
jne
mov
das
dec
addr16
pop
mov
pop
push
jnp
jg
in
ljmp
dec
xor
stos
jge
stos
aas
fnstsw
mov
sub
sub
pop
subl
das
icebp
mov
adc
mov
mov
les
test
mov
scas
add
movsl
add
negl
and
call
cltd
sub
rclb
mov
mov
mov
and
push
mov
lods
in
int3
ror
xor
xlat
jno
or
subl
outsl
mov
popa
scas
xchg
ficoml
insb
fld
jbe
mov
rolb
cltd
in
inc
pop
mov
jmp
test
cmp
xor
adc
jp
lret
test
push
adc
jnp
mov
sti
in
data16
leave
movsl
orb
cmp
adc
lcall
sbb
mov
mov
jmp
add
mov
mov
mov
outsl
jmp
aad
std
mov
in
sub
je
pop
or
inc
clc
dec
cmp
in
out
mov
cltd
xor
sbb
mov
mov
sbb
jae
xchg
popa
pop
mov
ret
lds
into
mov
and
xor
mov
push
cwtl
pop
xchg
mov
xor
sbb
testl
push
and
mov
dec
xor
ds
dec
out
aaa
sub
repnz
sbb
xchg
jg
daa
cmc
pop
outsl
xchg
sub
pop
les
and
clc
popf
dec
dec
in
test
scas
fldl
xor
movsb
aaa
das
push
xor
test
jnp
sub
shll
popf
add
xchg
in
dec
xor
cmpsb
mov
movsl
repz
je
push
rolb
pusha
cmp
sbb
adc
mov
insb
outsb
jle
pop
xchg
cwtl
xor
mov
add
in
lea
orl
xchg
sbb
mov
cli
push
mov
jo
xor
into
adc
cli
sub
xchg
and
jl
cld
scas
je
stos
inc
popa
leave
push
jae
dec
notb
or
in
mov
leave
add
jae,pn
sbb
and
sub
in
and
cmp
data16
sbb
shld
ljmp
fucomp
cmp
fs
jmp
sub
pop
sbb
ret
js
fcmovnb
xlat
inc
cmp
das
xchg
sub
fists
cmp
sub
push
mov
and
loop
adc
and
fstpt
in
jmp
insb
mov
lahf
aas
ret
iret
out
clc
in
lods
outsb
test
mov
push
pop
mov
enter
adc
push
mov
xchg
jl
fadds
and
aad
repz
sar
je
push
mov
movsl
dec
rcrl
popa
xchg
cmpsl
repnz
pop
les
cmp
adc
mov
loopne
mov
and
cmpsb
sub
mov
xchg
enter
jo
mov
mov
in
pop
not
mov
movsb
add
lret
sbb
adc
jb
imul
push
enter
inc
loopne
dec
lcall
cmpl
insl
shrb
push
push
test
lods
not
add
cmpb
jp
mov
out
loopne
popa
sbb
push
pop
and
add
cmp
scas
sbb
pop
pop
mov
inc
call
lea
test
insl
js
rcrb
daa
pop
jno
mov
repz
sahf
fs
jo
cmp
arpl
and
ret
pop
dec
int3
add
sub
sub
adc
xor
test
test
or
dec
mov
pop
pop
jbe
push
sar
mov
mov
xor
push
in
add
mov
int3
inc
mov
dec
dec
je
mov
or
shl
icebp
leave
sbb
sub
inc
push
inc
jl
clc
or
push
je
pop
jbe
sti
jb
addr16
fwait
sub
mov
and
jle
xchg
push
insl
push
int3
mov
inc
lock
jo
push
call
mov
pusha
inc
scas
orl
sbb
mov
iret
cmp
mov
mov
push
mov
fists
dec
lahf
hlt
cmp
std
call
loop
cmpsb
jp
fdivrs
dec
push
pusha
out
xlat
ljmp
sti
sbb
into
xchg
sbb
mov
shrl
push
pop
roll
movsb
clc
insl
push
push
dec
sbb
push
dec
lcall
ret
mov
pop
outsl
jle
or
lret
cltd
mov
shrb
jno
pop
cmp
dec
push
xor
stos
jns
or
jmp
insl
fisttps
xlat
rol
in
xchg
ss
out
cwtl
jbe
clc
repz
fs
xchg
aam
pop
sbb
shrl
push
jge
mov
push
push
jmp
inc
add
xorb
orb
inc
in
pop
fs
into
movl
add
pop
movb
cmpsl
jmp
fs
mov
mov
jp
call
repz
lahf
cmp
push
xor
jl
fwait
add
adc
addr16
mov
inc
mov
movsl
aas
adc
popa
pop
dec
arpl
cs
incb
aam
dec
add
push
sub
mov
xchg
insl
xchg
cwtl
or
cmp
sbb
insl
jecxz
loop
push
mov
cmpl
adc
inc
mov
sub
jle
rol
fiaddl
dec
das
leave
mov
adc
test
jb
mov
xlat
fstl
add
add
test
imul
dec
adc
xchg
icebp
adc
cmc
fcompl
add
jle
sub
add
add
xchg
fdivp
cltd
xchg
pop
dec
outsl
xchg
ja
lock
out
movsl
xchg
push
clc
jecxz
je
push
mov
push
xor
pop
add
mov
push
je
cs
and
xlat
out
in
fsubs
stos
cmp
ds
dec
push
arpl
inc
jno
pop
dec
jle
test
lret
cmovo
or
int3
je
pop
hlt
xchg
adc
mov
xchg
cmc
fildll
ret
movsb
jbe
dec
loopne
mov
add
scas
cmp
inc
pop
int3
insb
mov
adc
gs
xor
out
cld
push
lahf
call
inc
jnp
and
adc
mov
scas
testb
sbb
fadds
xor
push
push
push
mov
mov
xchg
xchg
sbbl
mov
outsl
xor
push
repnz
dec
mov
mov
fistpl
dec
movsl
push
xor
jecxz
mov
std
push
fcomps
in
pop
mov
jb
test
cmpxchg
inc
js
outsb
enter
push
loop
shll
xor
push
scas
push
add
adc
imul
xchg
add
fldenv
gs
jp
cmp
pop
push
out
xlat
movsl
fcmovne
iret
cwtl
cs
iret
je
mov
sbb
jb
sub
bound
xchg
mov
add
or
and
lock
notb
jb
lds
inc
inc
or
mov
add
loop
mov
inc
rcrb
testb
decb
dec
pop
jge
call
aam
ret
dec
lds
adc
sahf
xchg
clc
push
mov
cmp
xor
cmp
cwtl
je
push
mov
dec
data16
stos
inc
test
call
movaps
adc
dec
mov
mov
push
aam
call
xor
mov
adcl
push
cmp
fmul
aam
std
mov
test
jg
jle
xchg
pop
inc
mov
imul
mov
xor
call
pop
es
sub
mov
jge
aaa
ret
add
push
pop
xchg
aam
adc
test
sbbl
cmp
stc
cmpl
or
stos
xchg
mov
call
lcall
cmp
js
adc
sbb
test
jecxz
fiadds
push
shl
js
push
xor
test
fstl
call
ss
and
ss
inc
cmp
sub
iret
inc
data16
add
testl
cmp
out
imull
adc
out
into
lods
aas
adc
cmp
cmpl
clc
mov
icebp
dec
cwtl
pop
aas
mov
loopne
and
repz
insb
divl
jno
hlt
out
mov
pcmpeqw
push
mov
pop
push
pop
jns
jno
mov
pop
sbb
roll
pop
int
and
aad
js
stos
icebp
cmc
pop
mov
shlb
addb
xchg
out
gs
or
out
mov
sbb
repnz
outsb
int3
add
push
ss
sub
pop
enter
push
dec
add
out
repnz
dec
popa
fcoms
dec
push
das
or
jb
mov
pushf
inc
popf
add
into
fistl
movsb
scas
or
adcl
cmpxchg
sarl
jg
inc
xchg
mov
sub
test
cld
inc
mov
fldl
sahf
stos
push
stc
xchg
mov
sub
lret
mov
js
and
push
nop
xchg
pop
push
jp
fcmove
lea
ret
lods
pop
xorl
mov
jp
sub
and
or
mov
lds
mull
adc
inc
cmc
fs
pop
jecxz
iret
xchg
outsb
cltd
iret
clc
aam
sub
lahf
jnp
mov
addr16
inc
dec
testl
mov
jae
ret
mov
cmpsb
aas
es
pop
fildll
mov
xchg
arpl
mov
test
dec
jno
testb
insb
inc
adc
and
push
cmp
int
mov
jmp
adc
popa
jo
mov
mov
mov
push
lock
sub
in
idiv
xor
sub
mov
leave
cli
xchg
in
popl
cli
in
stc
pop
push
inc
mov
clc
pop
imul
test
sbb
xchg
and
sub
sbb
testb
cmp
xchg
mov
cmpsb
inc
ljmp
mov
sub
test
fs
adc
fstps
jae
test
shrb
push
out
clc
pushf
test
test
mov
mov
enter
mov
js
fdivrp
push
inc
push
call
jmp
inc
subl
fs
lcall
rcrb
arpl
mov
mov
outsl
pop
mov
mov
int
rclb
pop
sbbl
mov
in
mov
lods
dec
aad
daa
jle
jmp
push
hlt
pop
fstp
test
jl
ret
push
arpl
inc
mov
jbe
xchg
add
sbb
xchg
mov
cmp
fsubrl
dec
xor
push
daa
inc
outsb
mov
fidivrl
push
icebp
repz
jns
movsb
bound
test
repz
mov
xchg
fadds
arpl
push
mov
cmp
push
adc
in
push
repz
jecxz
test
out
cmp
lock
push
or
incl
cmp
fldenv
inc
push
test
push
add
or
mov
jge
jg,pt
or
clc
mov
jae
jmp
jns
loopne
sub
push
xchg
sti
mov
add
xlat
xor
call
or
jns
lods
rcll
cmp
test
es
mov
push
lods
sahf
cmp
imul
jae
sbb
vpandn
je
or
aam
sub
hlt
push
sbb
dec
jg
int
fs
lds
outsl
pop
cmpb
push
dec
push
add
imul
dec
ss
cltd
jmp
add
xlat
push
out
sbb
xlat
cmc
cmp
fdiv
push
iret
jae
jge
iret
jmp
fnstcw
push
adc
repnz
js
shl
push
mov
adc
fisubrl
sbb
cmc
movsb
movl
lods
outsb
mov
mov
pop
outsb
rolb
sar
pop
aas
out
mov
jp
pop
mov
imul
xor
cmpsl
out
ljmp
ds
in
mov
test
fwait
cmp
jmp
dec
rolb
sbb
dec
pop
xchg
test
sub
in
cmp
cmp
pop
ljmp
inc
jnp
push
sahf
mov
push
js
xor
out
push
push
js
divl
imul
dec
mov
testl
xchg
jge
xor
stc
pop
movsb
pushf
das
bound
aaa
outsl
push
stos
mov
out
subb
mov
sbb
nop
push
sub
rolb
fadds
jecxz
pop
or
jns
aad
rep
stc
popl
mov
push
lea
xlat
lods
add
sub
mov
cmp
cmpb
enter
jo
js
mov
gs
sbb
or
insl
outsb
xchg
shr
sub
and
fnstcw
sti
nop
les
sbb
mov
push
outsb
pop
add
faddp
and
decb
adc
mov
push
mov
dec
iret
movsl
push
stos
and
pop
imul
sbb
or
sbb
rorl
pop
cmp
test
xor
es
cmp
mov
sti
cmp
xor
movsl
or
pop
js
cli
aam
add
mov
xchg
push
std
add
andl
nop
mov
jp
dec
out
fisttps
shl
jmp
es
pslld
cmpsl
or
nop
adc
add
outsb
pop
aam
in
adc
aam
stc
jno
orl
cmp
fnclex
mov
vmovapd
pop
repz
cmp
lock
jp
xchg
scas
movsb
and
lahf
cmpsb
cltd
dec
iret
adc
sub
lcall
scas
push
movq
xchg
mov
outsl
fidivl
aaa
mul
or
mov
in
ds
and
stos
mov
pop
xchg
gs
dec
xchg
jbe
pop
decb
cmpsb
js
loop
jne,pt
jns
pop
fcmovbe
inc
shl
xchg
lods
popa
pop
cmpsb
mov
mov
or
ljmp
xchg
adc
bound
dec
push
cmpsb
sbb
cmp
out
inc
ljmp
jne
stos
sub
xor
push
ss
jnp
out
lret
test
mov
add
dec
xchg
cmp
lods
dec
rorb
into
sub
adc
in
jb
lds
testl
push
fwait
add
mov
sub
push
sarb
sbb
mov
and
add
scas
inc
nop
das
popf
xor
aas
ds
stc
push
or
push
call
push
mov
iret
push
mov
mov
ljmp
fldenv
sarb
cltd
or
pop
stc
std
loope
inc
cmp
sbb
js
out
xor
push
shll
fnstenv
int3
test
call
or
cmp
cmpsb
fldl
xchg
aas
xchg
xor
or
hlt
rorl
cld
jae
inc
lret
stos
push
and
insb
ficomps
lea
cmpsl
int3
and
loop
mov
and
xchg
cmp
imul
sub
push
icebp
stos
cmp
mov
insl
cmp
imul
cmpsb
mov
shl
gs
loope
mov
outsl
xor
or
mov
sbb
pop
test
inc
jno
repnz
mov
call
test
cli
faddl
fadds
ja
test
push
pop
jmp
xor
in
sbb
push
xchg
mov
mov
mov
pop
movsb
push
sbb
fidivs
mov
in
inc
out
iret
sub
sub
jno
sarl
int
add
ds
pop
pushf
push
pop
rolb
scas
in
cld
xchg
hlt
adc
lret
in
sub
imul
sti
mov
bound
mulps
inc
mov
pusha
arpl
xor
jnp
dec
add
stos
repnz
sbbl
outsl
or
sbb
lods
pop
push
mov
outsb
or
add
and
pop
jno
ror
in
ds
sub
pop
in
lahf
xlat
lahf
ljmp
icebp
out
mov
out
ja
inc
rcrb
imulb
shlb
push
xor
lcall
aad
insl
subb
es
movsb
mov
or
dec
aaa
mov
mov
repz
pop
hlt
inc
mov
sbb
jo
int3
cmp
push
dec
mov
sub
fstpt
xchg
out
xchg
test
mov
cltd
leave
mov
push
lock
mov
cltd
cmpsl
out
cs
cs
jp
ficoml
addr16
les
lods
sbb
sbbl
sub
jae
in
xchg
xor
jno
movsl
shrb
lahf
lock
mov
jne
cmpsb
xchg
and
out
aad
add
pop
mov
push
inc
stos
xor
fdivl
ret
lods
nop
sbbl
mov
repz
push
pop
jp
clc
xchg
adc
cmp
sbb
out
lahf
clc
mov
in
stos
cmpsb
aaa
cwtl
cmp
push
sarb
push
jg
aaa
out
push
test
dec
popa
ljmp
loope
xchg
in
rolb
xlat
subl
dec
out
xchg
or
adc
dec
jp
inc
lea
addb
jbe
stc
lds
stos
and
orb
shl
mov
add
sti
mov
and
mov
mov
adc
ret
popa
and
dec
sbb
pushf
gs
adc
adc
dec
push
or
int
out
jnp
adc
std
inc
pusha
pop
xor
mov
lock
decb
dec
jno
jle
pop
call
push
xchg
jge
sub
js
test
fcomip
xlat
or
dec
sarl
dec
cmc
movsl
pop
cmp
inc
sub
repz
push
or
shll
aad
into
add
nop
scas
or
jle
mov
dec
ss
push
jmp
jbe
ljmp
ljmp
add
inc
ja
inc
and
test
mov
pusha
dec
push
and
fcmove
xlat
mov
fimull
leave
fdivrl
xchg
push
and
push
push
sbb
sbb
push
and
add
sarb
dec
lret
inc
push
fcoms
xchg
hlt
pop
inc
lahf
pop
fadd
cltd
cmp
popf
outsl
ds
jmp
push
insl
mov
shrl
pop
or
rorw
pop
push
fcomp
add
ret
in
dec
or
mov
cltd
fstp
dec
mov
jg
xor
pop
xchg
push
repz
mov
rolb
jae
inc
lcall
xor
cwtl
das
js
ljmp
sbbl
sbbl
pop
rcrl
mov
and
xchg
aad
or
pop
or
sub
mov
rolb
clc
xchg
push
rcrb
aas
das
lret
bswap
mov
jmp
mov
cmc
ret
sbb
adc
leave
push
rorl
cld
imul
lret
jl
mov
ficompl
or
xchg
lahf
cmp
push
fcoms
sbb
jo
rep
add
cmpsb
mov
ret
mov
add
mov
add
aaa
and
or
pop
jl
clc
mov
or
ss
sbb
add
in
in
sub
out
adc
out
inc
jns
mov
in
jmp
iret
jmp
adc
push
jge
sub
aaa
inc
mov
std
fimull
cmp
adc
repz
add
arpl
xchg
repz
push
push
clc
pop
fiadds
xor
ja
sti
sub
adc
xchg
mov
cmp
in
push
shl
xor
bound
repnz
sub
xchg
mov
fcmovnu
repnz
mov
inc
jle
movsl
jmp
mov
mov
in
mov
cs
shrb
icebp
mov
lcall
jl
movsb
add
mov
aaa
aam
das
xor
out
loop
cmp
inc
and
mov
push
enter
in
add
pop
test
testb
sbb
andl
fildl
jl
inc
mov
sbb
mov
cmpl
inc
xchg
lock
mov
mov
xchg
mov
sub
jb
jge
addr16
cld
test
stos
shrl
push
cli
in
xchg
test
push
add
xor
pop
fwait
fwait
mov
push
loopne
mov
push
sbb
mov
fwait
lcall
outsb
mov
lods
in
popa
mulb
pushf
pop
int
lock
push
dec
and
enter
in
sarb
mov
cwtl
shll
out
mov
fisttpl
sbb
lods
int3
xchg
shl
xchg
adc
and
mov
out
xor
jmp
aas
pushf
and
in
sti
mov
sub
pop
pop
mov
push
daa
sbb
fsts
jl
cmpsl
jp
enter
into
and
and
aaa
fsubrl
out
icebp
repz
xor
or
adc
adc
adc
in
cli
cmp
inc
inc
or
xor
pop
mov
mov
stos
pop
mov
addr16
pop
mov
or
xchg
or
jg
das
fbld
xchg
push
adc
fdiv
cmp
inc
pusha
cmpl
push
nop
xchg
int3
lret
xlat
pop
sub
int3
jge
loop
jg
and
out
xor
stc
inc
mov
sbb
stos
shll
sub
int3
jg
inc
lock
sub
jl
jg
mov
das
je
int3
xchg
cmp
scas
data16
mov
sub
sub
mov
ljmp
int
jns
mov
fcom
inc
push
shlb
pusha
js
aad
sbb
std
jb
out
loop
mov
add
lcall
clc
paddusb
test
int
ss
cmp
xor
jbe
cwtl
lret
jnp
js
cmpb
mov
clc
dec
bound
movsl
and
sub
cmp
cmp
jge
les
xchg
test
mov
mov
cmp
shl
cmp
sub
xchg
sbb
mov
or
fnstenv
jl
orb
test
lahf
sub
cmp
mov
lcall
jmp
addr16
sbb
or
push
fnstcw
pop
mov
cmp
mov
movsb
daa
lahf
test
add
psrlw
dec
mov
ljmp
lcall
or
andb
orb
imul
xor
jmp
clc
lret
movsb
sub
xor
mov
pop
lods
xchg
xor
push
push
inc
loop
ds
pop
fincstp
sbb
sbb
daa
cmp
dec
mov
sahf
xor
xchg
push
dec
dec
movsb
adc
out
in
je
add
jns
mov
dec
lret
pop
cltd
xchg
gs
fsubl
xor
jbe
aad
repz
int
or
push
std
add
data16
mov
cltd
out
ret
dec
sbb
add
scas
scas
call
sbb
xchg
jo
ja
flds
in
in
mov
xor
sbb
into
pop
add
ret
sti
call
cmp
or
or
mov
mov
cmc
fidivs
xchg
mov
add
ret
aas
jmp
stos
push
scas
sahf
ljmp
daa
ja
mov
mov
arpl
ret
addr16
in
pushf
dec
jno
xchg
in
pushf
or
mov
pop
lcall
jecxz
mov
and
loop
mov
adc
jg
jp
lret
mov
imul
popf
divb
movntq
push
popa
add
cmc
mov
add
movsl
push
idivb
cmpsl
mov
adc
push
test
dec
hlt
test
xchg
pop
ret
aad
adc
cli
out
pop
imul
inc
loope
les
test
out
arpl
jp
push
adc
xor
addr16
jb
retw
mov
in
sbb
mov
jb
mov
dec
mov
fists
mov
mov
jmp
fdivl
imul
arpl
jmp
sahf
or
push
mov
xchg
jnp
inc
sbb
mov
and
jae
shl
jne
loop
xchg
es
mov
stos
outsb
movsb
mov
ret
push
lcall
inc
pop
icebp
in
jge
iret
or
add
cmp
jne
test
sahf
std
repz
nop
lret
insb
sarb
stos
pop
jg
test
popf
pop
xorl
cmpsl
push
hlt
jl
lcall
cmp
sahf
xlat
lock
test
xor
jno
fldcw
adc
and
jne
mov
cmpsb
add
das
mov
mov
dec
push
les
xchg
adc
adc
or
sbb
xchg
fistpll
dec
add
cmp
sbb
xchg
lahf
out
bound
in
jae
cwtl
jnp
movsb
fucom
in
loop
into
push
sbb
sub
jnp
scas
cld
push
mov
jg
mov
jmp
cmp
fsubrp
cmp
push
xchg
xchg
sub
xor
je
in
adc
and
push
mov
stc
sbb
ds
fcoml
push
dec
subb
cs
push
push
pop
shrl
sahf
pop
mov
fimull
popa
daa
nop
jbe
push
or
mov
sbb
cmc
mov
pop
sbbb
sti
push
pop
xchg
jne
cwtl
fnsave
repz
pop
fxch
fwait
jb
cmp
pop
daa
xchg
pusha
lds
sub
xchg
cmp
push
call
xchg
mov
xorl
xchg
xchg
into
cmp
loope
clc
mov
cs
rcrl
cmp
jo
inc
out
insb
aam
rcll
pop
lea
stos
repnz
add
cmp
lret
xlat
jb
outsb
js
xor
imul
scas
jle
divl
cmp
mov
xor
int3
push
jne
je
xor
sub
mov
mov
bound
int
jecxz
fcomps
lds
rclb
int3
in
inc
shl
outsb
dec
test
cli
sub
push
or
mov
gs
pop
leave
stc
xchg
sbbb
jae
sar
shlb
mov
in
inc
pop
mov
ret
or
imul
adc
insl
int
fisubs
test
pop
hlt
addr16
xor
jmp
lods
data16
push
popf
fdivp
inc
insl
dec
adc
rcrb
out
iret
and
mov
jbe
jb
mov
ljmp
sbb
ja
xchg
jmp
jb
fldcw
cs
and
dec
cld
fwait
outsb
mov
gs
or
inc
imul
mov
jmp
push
rolb
test
jmp
out
xor
jg
testl
cmp
jge
enter
in
jo
fcmovne
int3
push
push
popa
pop
lret
push
sbb
or
insl
pop
loope
sbbb
loopne
repz
cwtl
icebp
insb
pop
test
cld
hlt
sarb
rcll
lcall
pop
jecxz
aas
pop
jne
aam
adc
test
dec
lret
xor
mov
dec
push
mov
cli
loopne
pop
movb
add
add
adc
pop
add
mov
fldenv
fstpl
pop
adc
push
cli
mov
repnz
les
mov
xchg
pop
sbb
mov
dec
inc
popf
jno
icebp
or
mov
xor
inc
push
pop
mov
xlat
fisubrs
mov
mov
les
dec
sub
dec
jnp
popf
out
ljmp
ftst
inc
pop
sbb
add
ret
jbe
sarl
dec
pop
shlb
xchg
xchg
shlb
pop
push
pop
or
xlat
add
xor
jl
insl
fwait
mov
mov
push
je
xor
jecxz
push
sub
ljmp
sbb
xlat
mov
fs
mov
test
data16
xchg
xor
jle
mov
leave
mov
andb
sahf
aaa
or
push
out
nop
jecxz
pop
cmpsl
dec
lods
sbb
in
and
hlt
pop
mov
jmp
shlb
xor
cs
daa
addr16
pop
cld
fisubrs
push
fstpl
dec
das
pop
insl
mov
adc
pop
add
sub
test
mov
nop
adc
xchg
xor
mov
loope
add
add
std
hlt
lret
addr16
sbb
in
hlt
lods
or
gs
pop
mov
mov
pop
and
outsb
add
int
movsb
jns
mov
xor
push
ffree
out
imul
insl
sbb
pop
sbb
pop
inc
mov
fidivrl
fisubs
jp
aam
xchg
mov
into
jb
and
arpl
pop
mov
jae
cmp
xchg
outsl
or
xchg
das
ret
cltd
dec
rcl
fists
xor
push
mov
movsl
subb
xchg
lea
add
pop
mov
enter
xchg
sbb
pop
std
andl
bound
sub
lea
imul
insl
sub
xor
arpl
pop
lret
pop
lea
push
push
jo
adc
shl
dec
bnd
inc
decl
mov
mov
ja
aad
pop
leave
add
lahf
iret
mov
inc
test
fdivs
jmp
in
insb
gs
lret
add
scas
and
or
mov
mov
and
xchg
outsb
shll
out
mov
stos
or
mov
mov
push
lods
xchg
cs
xor
or
xchg
mov
ds
adc
loope
and
and
or
jl
es
xchg
or
and
outsb
jbe
mov
xor
jge
push
nop
bound
aas
cmp
cmp
jnp
cmpsb
sbb
pop
movsl
dec
rcrb
dec
or
aam
pop
rcrb
mov
pop
lret
iret
lahf
data16
and
mov
dec
jne
mov
xor
jno
adc
sbb
sub
jns
and
cmpsl
mov
mov
shlb
cmp
loope
aas
add
sub
sub
inc
sbb
icebp
add
iret
ret
loop
leave
out
and
shll
pop
lcall
sti
pop
xor
test
or
dec
sbb
cmp
aad
mov
jmp
aas
add
push
pop
cmp
lahf
xchg
in
insb
imulb
daa
push
fs
repnz
ja
and
push
imul
imul
inc
in
cld
ret
mov
sub
iret
inc
pop
sbbl
aaa
add
and
and
mov
mov
rcrb
xchg
jnp
sub
pop
sahf
gs
sub
decl
push
jp
in
pop
mov
inc
aas
mov
cmp
rcrl
movl
and
arpl
sbb
lods
inc
jae
pop
cmp
adc
adc
push
daa
dec
aas
inc
in
fsubl
sbb
add
stos
mov
mov
jmp
mov
mov
fistl
insl
xchg
pop
fcmove
in
inc
or
std
jg
and
mov
dec
sbb
aam
jb
mov
sbb
ret
xor
and
jno
xchg
push
mul
sti
jge
jne
fstl
stc
and
outsb
pop
cmc
cwtl
lods
sti
mov
or
setp
pop
cwtl
repnz
mov
imul
stos
aam
mov
fidivs
ds
mov
mov
fimuls
push
xchg
scas
or
sub
inc
std
inc
mov
push
jmp
xchg
dec
and
iret
jns
out
dec
inc
fsubrl
in
sarl
aam
mull
leave
outsb
cld
ficoms
bound
fcompl
loope
push
arpl
jge
jb
sbb
and
jo
lods
jmp
xchg
inc
xor
xor
jg
add
jecxz
mov
ds
das
int
adc
push
xorb
movsl
pop
nop
out
fimull
dec
pop
mov
sti
lods
addr16
rorl
gs
and
clc
lock
test
hlt
dec
loopne
or
repz
sub
cwtl
xlat
negb
mov
lods
push
xchg
and
out
cmp
pop
lock
hlt
xor
dec
jns
pop
dec
into
sti
pop
adc
loop
shrb
ljmp
insl
sub
sbb
jbe
or
pusha
dec
xor
imul
fcmovne
jb
adc
sub
loope
mov
inc
xchg
sub
sbb
cld
aam
mov
add
xchg
adc
jno
test
mov
push
pop
pushf
inc
test
push
loope
in
jo
stos
jp
dec
inc
pop
xchg
dec
jnp
in
out
push
push
push
and
cmp
cmc
push
clc
ss
xor
sti
mov
pop
mov
mov
sbb
and
pusha
xchg
sbb
cmp
adc
imul
stos
aaa
sub
js
das
sub
outsl
int3
sahf
lcall
inc
xchg
imulb
pop
and
lods
gs
xchg
cli
adc
push
xor
push
push
fldl
push
in
xlat
dec
xchg
iret
mov
test
push
mov
shlb
ret
push
pop
lahf
jns
lock
clc
sub
and
xchg
mov
outsl
push
mul
sbb
sahf
bound
xor
sbb
das
xchg
adc
xlat
mov
sub
mov
popf
insb
ret
lds
xor
aad
rcr
add
cwtl
inc
subb
mov
pop
insb
orl
mov
rorl
inc
sbb
inc
and
adc
mov
jecxz
adc
imul
dec
ljmp
fs
sub
push
movsl
xchg
jmp
and
jae
lret
fwait
xchg
add
ds
fiaddl
adc
ret
xor
data16
test
arpl
and
xchg
sahf
jg
pop
pop
inc
mov
testl
jmp
in
dec
scas
fcoml
outsl
sub
pop
push
sbb
cmp
mov
pop
arpl
cmpsl
cmp
out
mov
enter
lret
loope
sbb
sub
xor
fsubs
test
test
push
scas
mov
insb
xchg
insb
sbb
mov
movsb
enter
push
sub
mov
outsb
push
fwait
scas
pop
pop
ret
ja
dec
xchg
popf
jmp
cmp
out
stos
cmp
sbb
sub
ds
ss
sub
je
adc
adc
xor
push
dec
mov
mov
stos
fists
xor
rcrl
enter
jnp
rcrb
icebp
clc
outsl
sub
push
xchg
sbb
cs
fiaddl
add
xchg
cmp
adc
bound
les
sti
push
insl
jecxz
in
lods
cmp
shl
insl
adc
cmp
jb
into
and
outsl
pushf
les
push
out
lock
shlb
inc
inc
les
sbb
stos
enter
leave
xchg
mov
ret
rorl
out
test
pop
stos
out
push
push
pop
adc
sbb
mov
dec
in
lahf
push
outsl
loop
std
scas
les
jle
test
sub
xchg
lret
std
popa
scas
xchg
sub
xor
mov
icebp
mov
mov
imul
or
test
or
or
sbb
repnz
cmp
sub
or
jns
jl
lock
ret
and
jno
lock
mov
gs
in
pop
mov
aas
out
or
sti
rcrb
clc
in
lods
jo,pn
add
cmpsl
jo
or
add
xchg
xor
pop
jl
cmpsb
repnz
clc
test
movb
push
push
jbe
mov
sbbl
cmp
mov
hlt
test
and
xor
pop
dec
dec
xchg
push
out
scas
cli
ja
ffreep
lcall
test
add
popa
cld
add
pop
jne
xor
push
adc
xlat
mov
adc
xchg
jne
stos
decb
sbb
xchg
lock
inc
enter
jno
sahf
in
jle
lret
repnz
mov
dec
inc
dec
shl
loope
push
add
and
xor
or
add
mov
insb
imul
fstpt
stos
into
adc
sub
les
roll
pop
sbb
mov
icebp
mov
mov
lock
in
sbb
cld
lock
je
cmpsb
and
rolb
or
or
pop
mov
cli
jns
loop
out
ficomps
adc
movsb
fldt
jp
cwtl
std
and
pushw
lahf
outsl
loope
fidivrs
jecxz
pop
cwtl
xchg
sub
sbb
sbb
jae
mov
xor
xor
sub
mov
xlat
cld
aad
add
inc
mov
scas
mov
pop
ss
lahf
pop
stos
mov
or
shrl
dec
cmpsb
mov
xor
sub
popf
xorb
ret
and
and
mov
cmp
scas
bound
decl
and
mov
ss
enter
lods
mov
sub
jl
notb
inc
call
jbe
bound
mov
pshufw
pop
into
or
push
mov
sahf
pop
add
xor
out
adc
inc
xchg
popf
hlt
jnp
and
dec
push
sub
xor
mov
and
xchg
nop
icebp
mov
enter
push
hlt
sbb
push
and
aad
xchg
or
mov
fdivrl
dec
jae
call
in
test
into
inc
or
lret
leave
clc
cmp
cltd
xchg
add
outsl
and
pop
das
xchg
ja
stc
jecxz
pop
repnz
jg
lds
add
lods
xchg
pop
fiaddl
inc
sub
ljmp
xlat
push
push
dec
push
cld
cmpsl
push
cmc
pop
sub
ja
pop
in
iret
xchg
jp
iret
js
push
xchg
mull
fldt
dec
into
xor
mov
and
mov
outsb
shll
or
dec
cli
jb
jle
inc
dec
adc
popa
xchg
jg
fistps
sub
test
lods
aam
fildl
and
cmp
mov
push
mov
and
cmp
filds
xchg
dec
pop
mov
or
sbb
stos
and
addb
dec
cs
cs
inc
mov
hlt
xor
aas
or
sbbb
dec
test
xor
mov
and
mov
or
addl
xchg
push
mov
add
jl
decb
dec
fs
and
aad
dec
pop
xor
inc
in
add
dec
test
cmp
push
and
or
nop
and
pop
lock
les
test
jmp
popa
push
and
or
mov
push
orb
pop
movsb
dec
cmp
jns
bound
stos
adc
sarl
xlat
and
push
flds
outsb
insb
ret
ja
cwtl
das
inc
icebp
push
sub
dec
movsl
test
xor
push
in
adcb
dec
mov
xchg
rolb
outsb
or
mov
fsubr
sub
enter
inc
adc
repnz
ret
into
cmpsl
mov
and
inc
mov
xor
jp
in
lcall
movsb
add
pop
loope
mov
mov
xlat
add
mulb
out
inc
jbe
jno
daa
repnz
pop
jns
xchg
xchg
fcmove
push
ja
fmulp
push
sbb
adc
mov
pusha
or
test
out
lds
mov
xchg
cmp
mov
int3
cltd
fcompl
push
out
inc
dec
xlat
mov
nop
imul
movsb
daa
add
or
test
cmpsb
rcl
fldl
add
dec
mov
rcrl
xchg
sbb
and
arpl
nop
mov
push
adc
push
popf
ret
push
into
sub
mov
inc
out
jl
adc
dec
mov
cld
loopne
mulb
inc
xchg
xchg
imulb
sub
insl
jae
cmpsl
aaa
addps
clc
rcrl
movl
add
mov
jmp
lods
lods
dec
cmc
or
rcrl
loope
pushf
shll
pop
aam
repnz
lds
je
and
popa
mov
mov
jp
mov
mov
popa
jb
mov
and
jl
pop
dec
mov
sub
mov
pop
xchg
xchg
leave
push
pop
jp
sub
xchg
test
inc
aad
mov
pop
scas
lahf
stos
sbb
test
cltd
scas
iret
into
inc
dec
test
aaa
in
jl
bound
iret
dec
push
loop
inc
sbb
mov
jo
fidivl
stos
popf
and
das
xchg
mov
insl
test
lods
mov
loop
aaa
inc
mov
fdivrs
mov
pop
mov
popf
sub
xor
jnp
mov
mov
add
mov
pop
fistpll
js
in
stc
mov
push
jecxz
out
xchg
and
adc
cmc
ljmp
shrb
add
jmp
adc
sub
lea
sub
cmpsl
pop
pop
test
mov
fdivr
loopne
stos
lds
jne
sub
insb
iret
push
sub
sbb
add
mov
push
into
xor
and
sti
out
dec
sti
mov
jp
rolb
mov
or
mov
pop
or
ja
dec
mov
pop
mov
out
lret
sub
je
xchg
leave
ss
call
push
xchg
adc
icebp
xchg
jl
mov
rcll
sarl
repz
lock
popf
data16
lds
add
xchg
cmp
enter
lahf
ljmp
push
popa
jb
mov
cmp
fidivrl
mov
in
stos
leave
in
xor
cltd
push
pop
test
pusha
pushf
cmp
mov
pop
pusha
insb
in
xor
sub
movsb
aas
pop
push
fwait
les
add
and
jo
int
js
inc
out
daa
jbe
pop
pop
sub
pop
xor
jne
shll
jp
fdivrs
cmp
fiadds
movsb
fisttps
test
pop
inc
jbe
xchg
aam
inc
into
dec
mov
pop
dec
pop
call
mov
sbb
sbb
movb
cli
test
outsb
std
pop
sub
xchg
push
push
dec
mov
fisubl
int3
call
pop
xchg
push
jp
jno
cmp
insb
pop
pusha
mov
dec
int
test
clc
in
xchg
mov
pop
and
andb
dec
loope
addr16
sub
mov
push
xor
push
das
push
addl
pop
shrl
sub
xchg
in
cmp
imul
jp
push
fcoms
daa
jl
lods
fcompl
sub
ret
push
inc
mov
jnp
shlb
cmp
roll
call
stc
mov
mov
dec
pushf
mov
icebp
arpl
frstor
pop
xor
repz
addr16
je
cmp
dec
xchg
rorl
jl
roll
mov
out
loope
cmp
and
xchg
push
mov
cs
lds
cmp
mulb
cmp
fildll
mov
cli
les
aam
mov
mov
xchg
xchg
dec
cmp
aas
outsl
cmp
shlb
stos
dec
mov
mov
outsw
shlb
mov
ja
push
lcall
imul
push
pop
xchg
ds
xchg
xor
mov
lock
push
mov
movsb
movsb
lds
dec
aad
push
mov
xchg
test
rcrb
mov
cli
jno
inc
inc
je
sbb
inc
inc
hlt
or
ffreep
sbb
xchg
popa
mov
lea
xchg
test
push
xorb
ret
aam
lcall
aam
sbbl
enter
in
jo
mov
das
cs
enter
test
sub
das
fistpl
cmc
loop
and
jo
cmc
scas
sbb
jmp
mov
std
push
lods
dec
cmp
or
aam
or
inc
or
out
adc
cltd
in
lds
hlt
sarb
mov
pop
iret
push
sti
stc
nop
jg
andl
and
mov
lahf
aaa
xor
xor
and
mov
or
and
pop
data16
dec
scas
data16
sti
xchg
lds
clc
cmpsl
pop
mov
mov
dec
js
fidivrl
xchg
sti
mov
outsb
sti
inc
outsb
insb
rcll
sub
jg
sub
test
adc
sbb
or
xor
sub
dec
pop
xchg
test
sahf
cli
or
sub
push
popf
jo
mov
in
clc
and
push
shlb
out
subb
dec
jae
lcall
inc
scas
mov
xlat
add
push
inc
jns
mov
push
and
inc
rclb
js,pt
jge
pop
adc
inc
loop
dec
bswap
push
fs
inc
mov
inc
mov
pop
sub
cmp
in
push
add
xchg
aam
fwait
push
into
scas
aas
mov
fistl
into
dec
lods
xor
stos
out
inc
cmp
andl
sti
adc
out
div
adc
ljmp
or
jmp
cmc
push
adcb
pop
add
pop
sarb
das
sub
mov
or
in
int
push
jle
fcomps
xor
pop
mov
inc
addr16
mov
test
add
jle
mov
stc
push
push
aaa
js
dec
subb
pop
mov
sti
xchg
jno
xchg
sbbl
mov
dec
mov
sub
xchg
pop
test
sbbl
mov
adc
inc
xor
movsl
shlb
pop
xchg
mov
push
sti
jno
jae
test
or
mov
insb
sti
repz
shll
jg
into
aaa
ret
and
pop
mov
xchg
aad
push
lock
insl
xchg
movsb
cmpb
or
pop
sbb
sbb
cmp
fmull
int
sbb
xor
orl
xchg
dec
adc
inc
adc
movsl
xchg
and
leave
pop
dec
aam
ss
movb
mov
cld
push
imul
daa
cmp
ret
call
jb
loope
or
inc
test
ja
mov
vcvtsd2ss
xchg
inc
iret
inc
ljmp
jne
cmp
add
outsb
dec
scas
out
xor
dec
xor
pop
jbe
inc
test
call
push
pusha
sbb
inc
nop
jbe
lds
std
shrb
dec
dec
xchg
ror
cmp
xchg
or
inc
push
int3
xor
pop
mov
repnz
jns
adc
cs
je
add
inc
jnp
sbb
popa
pop
jb
movsb
lret
ds
xchg
subb
je
mov
and
dec
aaa
sar
xchg
add
push
mov
cwtl
cltd
ja
enter
jmp
je
call
sahf
adc
pop
xchg
stos
pushf
scas
jnp
orb
mov
cmp
or
aaa
mov
inc
jbe
in
jns
xchg
push
adc
gs
push
mov
lret
jns
nop
repnz
in
mov
dec
mov
push
mov
adc
cmp
jmp
add
int
popa
and
jmp
jb
lock
xor
into
test
inc
rol
lock
push
test
rol
and
pop
sti
xor
out
mov
mov
jmp
xor
dec
inc
mov
dec
add
push
dec
pop
lret
pop
aam
adc
xchg
jo
and
insl
dec
mov
cmp
dec
sub
sbb
sbbb
mov
jno
scas
enter
push
mov
rorb
subb
and
mov
inc
jg
outsl
push
mov
mov
push
mov
mov
test
imul
mov
pop
sub
outsl
push
nop
mov
arpl
stos
xchg
stos
fdivl
cmp
je
test
sti
jnp
inc
push
sti
and
fcmovnbe
dec
pop
xorl
push
inc
outsb
mov
into
movd
adc
mov
lock
adc
push
or
lret
sti
push
cmp
jmp
stc
aas
xlat
or
std
icebp
xchg
sbb
jns
bound
or
scas
lods
into
or
push
icebp
sarb
inc
jne
insb
repz
push
hlt
jge
xor
add
sub
test
stos
lret
jecxz
scas
mov
push
rcl
aam
push
data16
stos
jl
dec
mov
or
mov
popf
mov
and
mov
xorl
and
adc
call
je
je
jne
push
inc
popa
ds
mov
je
jecxz
jae
scas
push
ret
add
jg
cmp
clc
adc
xor
mov
xchg
and
ret
and
cmpsl
in
repnz
out
lcall
mov
fidivrl
imul
or
push
nop
pop
jnp
xchg
dec
dec
or
bound
add
sub
dec
rol
xor
xchg
dec
repz
cltd
popl
add
inc
push
mov
inc
and
fisubl
pop
dec
pop
mov
push
lods
and
fnsave
push
and
scas
int3
xor
and
xchg
cltd
sbbb
cld
loopne
push
add
push
xchg
in
xchg
fwait
and
data16
sti
movsl
push
aad
aas
mov
mov
sbb
inc
sub
cltd
add
out
sub
hlt
enter
pop
adc
icebp
dec
cmp
lea
scas
cmp
cwtl
repnz
jns
jns
pop
popa
loop
lods
dec
imul
mov
or
push
mov
adc
mov
nop
nop/reserved
mov
dec
add
lcall
push
mov
addb
jmp
adcl
stos
push
jo
insb
in
scas
popf
adc
sbb
push
data16
fsubr
test
jns
sub
cmpsl
push
mov
and
test
icebp
daa
jmp
xchg
push
jle
push
aaa
test
cmc
add
aam
add
test
shlb
cmp
mov
adc
mov
loopne
mov
movsl
mov
in
sbb
dec
lock
jmp
lcall
push
push
sub
push
add
faddl
sbb
mov
inc
or
nop
xor
dec
jmp
jns
data16
or
mov
leave
scas
add
fs
lret
out
test
int
add
mov
in
add
int
gs
in
inc
push
mov
cs
sub
xor
std
mov
iret
push
cmpsb
sahf
cmp
jecxz
xlat
frstor
mov
cmp
push
adc
push
ds
fisubs
cwtl
push
in
lea
inc
cmp
pop
test
fsubs
inc
push
out
adcl
mov
add
int
cs
pop
cli
push
xchg
jle
xchg
sub
xor
aam
idivl
outsl
stos
icebp
popa
cwtl
adc
ret
and
hlt
movswl
push
lcall
ret
fsubs
sub
sub
frndint
mov
sub
loopne
mov
aam
and
push
andb
jbe
je
xchg
push
insb
sbb
push
cld
fisubs
push
out
imul
push
movsl
and
mov
scas
adc
lods
in
fidivrl
adc
sahf
jecxz
imul
sub
push
xchg
shll
les
sbb
mov
and
mov
stc
jmp
inc
aad
cmp
dec
lock
jp
mov
popf
outsl
out
test
aas
in
std
mov
das
sbb
lods
mov
scas
xchg
add
mov
cwtl
cltd
scas
xchg
mov
or
dec
or
pop
sbb
jns
aaa
mov
push
dec
mov
aam
mov
adc
mov
adc
adc
cmpsl
je
sub
scas
dec
outsb
push
push
stos
js
jmp
shll
enter
xchg
jecxz
aam
or
and
cmpsb
push
pop
je
jb
sub
add
stc
pop
cwtl
dec
mov
sbb
cmp
jmp
ja
movsb
pop
ja
int3
movsb
das
xor
push
sub
aad
dec
pop
decb
out
movsb
and
rcrb
stc
pop
outsb
js
add
lret
inc
inc
hlt
stos
clc
cmp
xor
push
cmp
inc
jl
loop
ja
inc
lods
xor
out
push
test
and
in
pop
jl
jle
mov
fstl
ret
sub
insl
pandn
in
loopne
arpl
repz
pop
aad
movsb
scas
cs
mov
popl
inc
sub
inc
sti
xchg
cli
dec
add
push
call
gs
stos
pop
daa
mov
mov
cmp
leave
lods
mov
or
stos
add
mov
mov
sub
push
arpl
push
push
push
xchg
cld
add
testl
outsb
xchg
xor
push
in
movsb
lock
or
push
jle
adc
lea
pop
mov
xchg
gs
jbe
lret
sub
das
dec
sub
adc
add
and
lods
inc
addb
sub
push
icebp
xchg
rcrl
xor
jno
mov
or
dec
jle
sub
jbe
and
pop
out
scas
nop
jge
test
inc
es
push
fcmovnb
fnclex
inc
loop
ret
sbb
mov
aas
dec
cmp
in
gs
sbb
inc
xchg
sub
inc
pop
pop
mov
inc
pop
mov
cmp
xchg
sub
lahf
pop
mov
bound
dec
cmc
scas
stos
movsl
test
call
scas
nop
inc
sbb
sbb
je
push
inc
pop
rcll
mov
lods
arpl
inc
adc
jnp
sbb
xor
xchg
mov
or
jl
imul
push
push
or
push
xor
push
mov
add
push
cmpsl
loop
lods
sbb
or
mov
fwait
dec
pop
mov
aad
mov
das
cmp
mov
ljmp
cmp
imul
mov
in
push
in
movsb
rcll
movsl
fstpt
nop
jae
inc
pusha
jmp
adc
or
sbb
dec
arpl
sub
pop
adc
push
mov
adc
ret
inc
popa
in
or
int3
les
fidivl
adc
movl
call
add
sub
hlt
cmp
dec
xor
xchg
loop
call
cmpsb
je
mov
outsl
dec
jecxz
sub
pop
shll
jge
inc
out
daa
call
shll
mov
xchg
inc
xchg
push
sub
jle
test
push
ja
and
mov
jge
pushf
xchg
pop
popf
sub
in
add
iret
enter
cmp
nop
inc
push
adc
cmp
stos
cltd
xchg
pop
or
hlt
mov
gs
xor
adc
cmpsl
imul
mov
icebp
scas
stos
lds
add
cmp
push
sbb
jg
xor
add
add
mov
loope
inc
inc
or
mov
lods
push
insb
mov
jo
orl
aad
cmp
stc
or
push
push
mov
andb
imul
adc
test
sbb
stos
mov
xor
or
fisttps
fstps
sbb
or
imul
aam
cltd
pop
aaa
xchg
push
imul
fsubs
int3
mov
iret
fwait
pop
or
nop
sahf
or
dec
data16
push
xor
test
mull
and
repnz
or
hlt
dec
or
andl
and
mov
scas
cmp
in
stos
push
int3
std
jno
cmp
fwait
and
mov
pop
dec
test
xchg
aas
test
popa
and
jne
out
push
movsl
cmp
cmp
mov
not
cmp
sbb
ror
or
insl
arpl
das
xor
clc
shll
push
add
dec
rcrl
int3
add
lret
sub
cmp
gs
sarl
mov
scas
adc
lret
dec
push
pusha
aam
inc
and
jmp
out
scas
mov
cmp
adc
orb
ds
or
push
sbb
jae
mov
dec
dec
shl
dec
shlb
cmp
es
push
jp
adc
add
mov
jns
add
inc
ds
les
sbb
mov
xchg
mov
aad
repz
mov
jb
push
mov
repz
rorb
dec
xor
xlat
fimull
mov
sbb
sbb
push
pop
mov
loopne
sub
icebp
cmpsb
insl
dec
pop
test
mov
negl
jmp
bound
cwtl
pop
mov
ja
add
repz
cmp
jl
dec
xor
mov
insb
es
cmpsl
cmpl
lahf
bound
mov
xlat
cmp
jns
xchg
out
pop
call
movl
push
pop
hlt
jmp
cld
ja
dec
or
into
and
mov
pop
test
mov
pop
dec
jle
inc
mov
lods
jnp
xchg
mov
dec
or
rcrl
push
dec
stos
lret
xchg
push
xchg
push
xchg
sbb
and
cmp
orb
in
in
dec
push
jmp
jo
sub
adc
stos
mov
lret
add
adc
pop
xchg
lea
pop
clc
xlat
push
cmp
mov
pop
loop
aas
mov
int3
xor
mov
ds
xor
push
aaa
sub
movsb
imul
addr16
jns
pusha
and
push
enter
pop
scas
jecxz
add
xchg
sub
add
lahf
cltd
mov
push
lea
mov
jae
cmp
clc
les
add
inc
ds
xor
cwtl
adc
dec
fsubs
bound
xchg
jle
lock
lret
cmpsl
push
addb
mov
mov
in
jp
loop
jl
jno
aad
adc
pop
lods
cmpsl
lcall
repnz
es
mov
mov
pop
jecxz
bound
mov
into
pop
jbe
loop
xchg
adc
test
imul
bound
int
or
jns
ss
lcall
xchg
xor
sbb
mov
add
lahf
xchg
jb
les
sbb
xor
ret
and
int3
inc
in
inc
push
mov
jp,pn
es
mov
push
div
push
out
ljmp
jno
adc
test
ret
mov
call
mov
xchg
sub
add
decl
sbb
pop
fwait
loopne
mov
mov
ficoms
stos
bound
movsb
shr
cld
nop
repz
test
call
scas
adc
xorl
rcrl
cmp
and
mov
in
dec
xor
jns
cli
shrb
mov
xchg
dec
pop
into
and
pop
into
jno
inc
subl
xor
push
stos
jmp
adc
sti
inc
add
iret
into
aad
jmp
mov
xchg
dec
hlt
pop
and
xchg
cmpsb
call
lret
mov
jns
pop
add
pop
xor
loope
inc
ljmp
xor
mov
shr
or
test
pop
jmp
das
test
stos
sbb
xor
xor
jp
push
sbb
and
ljmp
inc
jecxz
imul
mov
xchg
mov
xchg
icebp
addr16
or
gs
insl
xor
fwait
jge
add
adc
mov
fidivrs
dec
call
adc
das
ljmp
xor
jno
jle
scas
mov
push
mov
pop
repz
das
enter
dec
or
mov
add
sti
popa
rorb
mov
nop
lods
pop
sahf
je
ret
lods
rcr
loope
arpl
adc
jb
stos
fwait
cmp
jo
test
ret
std
out
shrl
dec
xchg
cmp
mov
and
les
fsubp
fbstp
call
sbb
stos
stos
push
mov
adc
xchg
mov
cmp
cltd
cmp
cltd
test
push
clc
mov
test
out
jnp
add
or
sti
jle
sub
add
jb
int3
fistps
sub
cmp
add
int
leave
xchg
push
xchg
push
jge
push
sub
or
lret
iret
dec
subb
adc
adc
fldt
adc
addr16
adc
sbb
fildl
sbb
std
mov
das
cmpsl
mov
out
loopne
mov
stos
sti
inc
divps
shlb
mov
call
movl
and
sub
push
add
pop
clc
insl
lea
mov
push
push
sub
out
push
int
repnz
xchg
add
lahf
pop
mov
nop
and
xchg
jmp
out
push
mov
ret
pop
inc
adc
xchg
aas
jns
cmp
xor
addr16
lds
jne
clc
out
popf
mov
rorl
dec
xchg
rcl
push
std
cmp
inc
js
dec
popa
and
inc
and
test
mov
xor
mov
sbbb
jle
rorl
mov
push
xchg
mov
push
push
sub
add
ss
inc
add
fstpl
jne
and
ret
cli
lret
dec
cmp
insl
sarb
add
and
cwtl
imulb
adc
fstpt
cmp
shrl
data16
add
xor
test
and
adc
sbb
cmp
popl
adc
stos
push
mov
pop
jecxz
fldcw
aad
sbbl
sbb
lods
test
jns
inc
imul
or
enter
test
cltd
popf
pop
shlb
adc
stos
mov
mov
in
mov
dec
inc
dec
scas
in
cmp
enter
out
les
hlt
leave
adc
lods
xchg
lret
push
mov
test
adc
add
jb
sbbl
cld
sti
fwait
jno
cmpsb
dec
mov
aad
stc
insb
sbb
jge
dec
and
ss
stc
bound
fidivrs
inc
icebp
and
push
outsl
push
jo
adc
data16
ret
xor
push
push
push
fdivrl
add
iret
push
adc
pop
sub
int
call
mov
xchg
rcrb
mov
insl
lods
mov
cli
mov
cmp
mov
sbb
ret
jmp
sbb
jb
and
xor
mov
out
jmp
stos
inc
mov
jp
daa
sbb
sub
repnz
fwait
out
jg
idivl
cwtl
insb
add
or
mov
jle
cli
mov
sub
dec
in
or
cli
cmpsl
loopne
ss
out
es
and
or
lods
pop
xlat
mov
mov
jbe
xchg
push
mov
cmp
and
sbb
jns
or
in
test
xchg
pop
iret
or
lcall
into
clc
lret
adc
data16
ds
xor
pop
mov
subl
sahf
push
sbb
mov
ja
cmpsb
inc
jo
imul
je
repnz
gs
imul
and
fistl
cmp
sbb
popl
adc
mov
cmpsl
pop
dec
push
inc
lahf
pop
xor
push
sub
pop
cld
enter
xchg
pop
shrl
sub
negl
std
les
adc
push
inc
mov
imul
mov
mov
pop
cmp
sbb
addr16
mov
pushf
hlt
adc
jo
stos
jnp
dec
xchg
daa
test
sahf
mov
and
ret
xchg
imul
pop
mov
mov
dec
cmpsl
dec
shlb
push
sub
mov
jle
aas
jl
sbb
aam
mov
std
leave
inc
push
test
test
cmp
icebp
or
lret
aad
lds
pop
jae
into
sbb
push
jge
fsubl
pop
push
and
pop
jg
xor
xchg
scas
fnstsw
jnp
jb
je
fcompp
cmp
dec
mov
fcomps
and
loop
xchg
and
add
xor
jecxz
call
jl
int3
jge
xchg
jle
sbb
inc
lcall
out
add
pop
xchg
push
out
stc
bound
fwait
fs
lods
push
push
jne
roll
mov
cs
mov
dec
xchg
les
ss
jbe
dec
out
enter
lahf
jns
les
inc
in
daa
jge
push
adc
cmc
fists
data16
cs
mov
pop
push
push
mov
scas
ss
mov
cld
popa
daa
stos
repnz
add
int3
popf
xchg
cltd
fsts
sbb
mov
lahf
cmpsb
inc
popa
popf
sub
test
dec
stc
inc
xor
xor
aaa
inc
sahf
ficoml
cmp
lock
ss
mov
or
loop
push
repnz
jne
fcomi
das
cli
ss
sub
sub
jno
movsb
xor
adc
mov
fisttps
push
jp
jle
pusha
xor
jp
or
push
sarl
fstps
mov
stos
xorl
nop
mov
push
dec
ds
and
fisubrl
adc
imul
loope
fdivs
inc
in
ret
pop
inc
sbb
push
ljmp
or
inc
movsl
fidivl
imul
cmc
inc
pop
jge
xchg
ss
mov
popa
sahf
lods
pop
sub
and
lods
and
jne
mov
dec
xor
pop
mov
inc
les
jo
cmc
mov
sbb
std
push
stos
mov
sbb
fwait
mov
fdivrs
push
mov
mov
mov
xor
jg
aam
add
inc
pop
lods
sahf
lret
mov
lret
cmp
testb
imulb
sbbb
adc
dec
adc
aad
xor
insb
push
scas
cmp
jecxz
adc
fadd
xlat
pop
pushf
scas
jge
lods
loope
test
rcr
xchg
pop
fiadds
sahf
repnz
dec
scas
sub
sbb
ret
mov
clc
stc
sub
pusha
xlat
arpl
pop
mov
push
mov
jl
fstpl
scas
fmuls
add
arpl
xlat
das
rcr
xchg
andb
push
jl
and
bound
mov
mov
mov
xor
mov
and
push
pop
pop
adc
cmc
lret
mov
mov
ja
test
or
cmp
shl
push
int
test
sub
jns
sub
dec
xchg
cmp
lcall
inc
pop
loope
jb
adc
sbb
adc
cmpsl
cmp
mov
dec
stc
push
in
adc
fwait
push
sbb
jae
adc
push
inc
push
sbb
rcrl
sti
sbb
enter
outsl
pop
and
add
fstpt
in
pop
sbb
je
movb
mov
pop
mov
xchg
jno
mov
cmp
std
push
loopne
jno
or
sbb
das
test
xor
jae
inc
mov
xor
cmpsb
sbb
hlt
movsb
icebp
frstor
xchg
push
imul
sti
jno
aam
stos
sti
xor
or
mov
lea
xchg
inc
filds
cs
push
cli
je
push
fldcw
aad
out
inc
sti
mov
inc
rep
dec
adc
push
and
js
push
ffree
sbb
dec
inc
pop
sbb
dec
xchg
add
pop
sub
inc
mov
and
adc
lret
jg
sahf
stos
loop
adc
arpl
mov
scas
mov
dec
daa
fwait
lret
sub
sahf
loopne
scas
hlt
repz
call
adc
xor
popf
and
xchg
pop
fs
jg
data16
mov
movsl
js
aas
mov
mov
ret
xchg
jnp
aas
inc
stos
dec
mov
xchg
out
in
insb
daa
jl
mov
sub
xor
mov
dec
dec
dec
in
pop
add
cmp
mov
push
sahf
ljmp
mov
out
out
mov
loope
sbb
cmp
add
push
pop
outsb
in
mov
leave
pop
add
lret
in
das
pop
xor
js
push
ret
int3
xchg
cmp
pop
or
jns
out
fisttpl
ss
ret
cmp
fsubr
sub
leave
mov
mov
mov
fstpt
aaa
jb
mov
pop
mov
ljmp
cwtl
fistps
inc
pop
pop
mov
cmp
jecxz
inc
mov
cltd
movsl
in
cmp
shll
rcrb
xchg
inc
or
out
xchg
mov
inc
aas
dec
pop
push
and
cmpsb
rcr
imul
dec
dec
clc
inc
es
xchg
push
xchg
xor
xor
xorl
inc
sub
cmpb
push
jl
lahf
mov
subb
cmc
jnp
or
and
mov
hlt
lods
sbb
mov
divl
mov
pop
sub
push
sub
sti
dec
neg
insb
mov
add
cmp
cmp
pop
and
sub
adc
es
pop
inc
scas
test
jmp
cmovg
push
movsl
mov
cmp
jmp
js
leave
jmp
jbe
ret
push
xchg
cltd
adc
ds
xchg
adc
lods
mov
loopne
xor
leave
adc
xchg
jne
aam
or
int3
das
in
je
das
test
fcompl
cmpsl
inc
or
dec
and
mov
and
mov
loope
cs
fidivs
xlat
rcl
jge
ret
xor
lods
cmp
adc
sarl
xor
aad
mov
inc
fdivrs
imul
icebp
mov
ds
dec
arpl
iret
sub
out
les
pop
dec
inc
outsb
stc
stos
in
ret
and
adc
xchg
sahf
xchg
mov
push
mov
push
jb
cmpsl
mov
mov
in
pop
addl
loop
fs
adc
daa
cmp
mov
dec
int3
adc
inc
mov
xchg
and
add
cltd
and
stc
xor
pop
rolb
mov
inc
jg
inc
aas
fildl
ficompl
nop
aas
jmp
pusha
imul
bound
push
in
hlt
sbb
push
cmpsl
adc
add
mov
fisubl
rcr
addr16
iret
rorl
les
and
cmp
or
dec
pop
cmpsl
sub
mov
in
sahf
lea
xor
jae
add
clc
leave
add
sbb
jp
inc
outsb
jne
icebp
fisubrl
mov
gs
das
ds
aam
xchg
mov
inc
out
mov
outsl
cwtl
mov
inc
mov
aaa
ja
cmp
sbb
sbb
imul
and
or
test
jmp
lret
lea
add
lea
fs
js
sti
rclb
cmp
pop
pop
test
outsb
std
push
push
mov
xor
outsb
push
jbe
nop
or
mov
sbb
xchg
jae
lock
ds
push
or
mov
icebp
add
loopne
pop
inc
mov
lret
aad
inc
cmp
xchg
sbb
push
cmp
mov
jle
fwait
clc
mov
loope
add
cmp
sbb
fwait
xorb
ljmp
push
inc
shll
xor
pop
subl
inc
cwtl
bnd
jle
xor
sub
dec
pop
nop
leave
in
pop
shl
lea
cmp
push
add
mov
fisubrl
outsl
dec
das
std
xchg
inc
repnz
shll
je
adcb
aad
jbe
int3
lea
fwait
ljmp
mov
out
push
xorb
fld
outsl
jbe
mov
repz
or
scas
sti
test
cmpsb
inc
stos
adc
inc
jle
fcoms
lea
mov
xchg
mov
into
loop
ss
fdivrs
out
mov
cmp
pavgb
xchg
rol
jns
out
aam
jbe
push
enter
fldl
adc
mov
mov
jp
jp
pop
lods
adcb
bound
inc
cld
or
mov
sbb
ja
lds
fbstp
pop
jl
xchg
mov
dec
dec
in
dec
fbld
inc
icebp
cmp
outsl
xor
insb
dec
mov
mov
mov
push
push
fldl2t
loopne
insl
gs
jbe
push
imull
inc
xchg
test
mov
popl
leave
pusha
out
cmp
push
sbb
mov
add
and
add
xor
imulb
cmp
pop
adc
and
jl
jbe
fsubp
pop
add
dec
repz
je
das
in
add
jp
ret
mov
lcall
xchg
or
xchg
pop
aam
cmpb
cwtl
outsl
fldcw
incl
aaa
stos
xchg
int3
pop
pop
dec
fsubr
cmpsl
sub
push
lret
test
outsl
or
les
mov
frstor
pop
sbb
or
jl
jno
loop
sbbl
pop
std
inc
mov
and
mov
jge
and
cmp
mov
movsl
mov
add
in
or
mov
xchg
inc
and
faddl
lea
xchg
arpl
test
scas
ret
push
imul
xor
cltd
dec
mov
int
shll
stos
sbb
loop
js
int
dec
jge
or
aam
js
dec
or
mov
mov
shl
std
divl
jnp
mulb
testb
xchg
cs
xchg
cmp
jb,pn
test
dec
cmp
and
and
ljmp
push
ret
out
stc
inc
arpl
mov
lods
jp
sti
add
push
cwtl
leave
sahf
movsl
ds
jg
jp
clc
lods
or
mov
popf
aaa
cmp
inc
imul
push
mov
cli
cltd
push
adc
dec
dec
dec
mov
dec
pop
dec
push
rol
xor
cmp
jns
lret
xor
dec
mov
repnz
mov
rcll
mov
xchg
xchg
add
push
adc
sub
movsb
mov
sbb
ret
mov
jno
pop
xchg
pop
cmp
sbb
inc
aaa
mov
pusha
je
rorb
and
fwait
mov
pop
int3
leave
leave
icebp
out
and
mov
or
sub
sbb
lret
aad
and
test
leave
or
jl
mov
aas
insb
add
push
shl
cmp
pop
iret
lahf
or
ja
lods
pop
or
shll
insb
add
mov
out
mov
push
mov
sub
or
sbb
or
add
jp
inc
cmpsl
pop
jae
mulb
jnp
mov
sub
add
push
mov
push
cmp
ss
subl
and
jno
jb
lret
xchg
test
fnstenv
or
scas
dec
cmpsb
iret
mov
jl
popa
jl
push
scas
jge
cmp
pop
mov
sub
cld
adc
mov
movsl
cs
lea
orl
aas
and
lea
push
fwait
out
inc
jp
adc
and
lret
scas
leave
jl
arpl
fstl
push
fmull
cmp
out
xchg
jle
pop
aaa
das
mov
or
xor
push
mov
xchg
fisttps
adc
mov
pusha
iret
int
jp
push
and
cmc
flds
les
and
or
sub
sti
sbb
enter
xlat
mov
les
jne
add
ds
fildll
insl
les
sbb
push
dec
incb
jl
mov
fisttpll
ficomps
insb
xchg
cmp
adc
xor
xor
or
and
insb
add
xchg
das
push
pop
mov
out
stc
push
pop
dec
ja
js
daa
mov
mov
xchg
orb
clc
fbstp
stc
fwait
out
jle
mov
lret
data16
stos
gs
and
inc
in
mov
xchg
lret
shr
popf
mov
sbb
or
inc
mov
sbb
pop
test
fnstenv
add
dec
dec
fnstenv
loope
or
aas
cs
inc
testl
ja
aaa
rcrl
xchg
push
or
xor
mov
xorb
cmp
inc
jle
add
xor
nop
into
push
jge
xor
leave
rcpps
push
dec
mov
add
dec
jbe
iret
scas
jecxz
cmc
mov
bnd
jmp
filds
push
ds
mov
lret
dec
lret
inc
arpl
out
xor
in
xor
xchg
adc
dec
mov
fidivrl
mov
or
out
xor
push
jo
and
lret
lock
jb
pusha
lahf
lcall
sub
cmp
aad
cmp
stos
sbb
cmp
int
mov
mov
js
out
add
sbbl
dec
dec
das
imul
add
jns
xor
mov
jecxz
test
mov
cmp
add
xor
jno
popl
sub
insl
shll
mov
mov
push
cmp
push
pusha
insb
sbbl
xchg
mov
lds
leave
ss
outsl
xor
xlat
shll
out
jbe
iret
push
sbb
cmp
cli
jne
stc
mov
jp
arpl
mov
push
sbb
clts
int
mov
inc
push
jmp
mov
enter
fildll
or
aam
or
std
sbb
cli
jns
sti
cmpsb
add
sti
sub
inc
hlt
nop
pop
int3
pop
adc
repz
push
dec
imulb
xlat
ljmp
nop
jle
inc
and
mov
inc
mov
push
int3
ss
mov
push
or
loope
movsl
fisubrl
mov
mov
adc
xor
mov
mov
add
xchg
xchg
stos
sbb
rol
negb
sbbl
pop
add
sahf
arpl
and
popa
inc
xlat
aaa
js
push
in
das
add
cli
mov
or
outsl
enter
adc
test
cmp
in
xchg
dec
addl
xor
dec
xchg
mov
icebp
ret
push
adc
mov
mov
sub
cmp
ja
aas
cld
xchg
jns
test
xchg
dec
orw
sub
dec
mov
adc
or
outsl
sbb
fsub
push
sbb
mov
sub
jmp
stos
push
pop
mov
int
outsb
push
inc
jg
ficomps
movb
add
mov
mov
leave
fsts
inc
sub
sbb
std
xor
mov
push
fwait
xor
popa
adc
ss
jne
pop
dec
sbb
ret
inc
mov
shrl
jg
ror
das
xchg
lahf
into
or
jg
inc
sbbb
add
pop
jo
jb
mov
fsubr
xor
add
js
outsb
rcrl
push
ljmp
les
adc
in
mov
lcall
pop
iret
cmp
mov
mov
sar
fldenv
mov
psubusb
xchg
out
xchg
stos
mov
dec
shrd
fidivs
fstpt
adc
pop
jge
sub
xor
pop
cmpb
out
test
dec
pushf
mov
jo
jg
jne
scas
xchg
ja
mov
and
cltd
lret
adc
sub
xor
shrl
and
inc
fwait
push
jnp
add
push
and
lret
leave
dec
push
je
xor
xor
mov
push
mov
mov
bound
call
roll
lock
push
mov
cmp
cltd
pop
jno
pop
int3
pusha
add
test
mov
cli
jl
jae
sub
inc
jne
adc
int3
je
add
sub
and
roll
and
fmuls
or
sbb
sahf
sarl
cli
mov
cmp
lret
in
stc
fcomp
push
mov
bnd
add
pop
mov
into
inc
movsb
mov
inc
mov
rolb
or
adc
stos
in
inc
test
xor
mov
dec
mov
lret
mov
cmp
xor
cli
push
pop
or
dec
arpl
imul
rcr
sahf
cs
aam
add
pusha
mov
cs
cwtl
mov
add
fnsave
clc
mov
pop
and
in
or
xchg
repz
pop
into
xchg
push
ds
mov
leave
int3
pop
stos
push
cmp
lahf
push
outsl
xor
mov
push
mov
inc
xor
sbb
clc
adcl
scas
dec
add
xchg
dec
aad
stc
ss
je
pop
pop
adc
inc
xlat
mov
stc
insb
mov
jnp
arpl
add
mov
cmpsl
xor
mov
stos
sub
push
cmp
cmp
mov
mov
loopne
sarb
xor
push
ret
mov
cli
decb
popa
ficoms
sub
and
and
fbstp
ljmp
mov
dec
and
pop
repz
mov
mov
int3
imul
dec
in
insl
lods
xchg
arpl
.byte
and
xor
xchg
and
and
adc
lcall
sbb
lods
pop
push
cli
pushf
nop
inc
scas
dec
mov
xchg
out
mov
cmpsb
js
pop
pop
cmp
adc
stos
out
push
jb
rclb
rol
xchg
sbb
inc
scas
mov
cld
lea
push
add
dec
arpl
aas
mov
clc
lcall
jl
gs
add
popf
repnz
push
out
leave
cwtl
nop
fildll
pop
ret
sahf
out
push
push
mov
sahf
add
jge
add
loopne
jecxz
cmp
push
mov
mov
testl
outsl
orl
sbb
and
leave
das
and
pop
jecxz
sbb
dec
xor
fdivl
cmp
mov
xchg
adc
mov
mov
dec
icebp
sahf
push
lret
lcall
inc
pop
push
clc
jmp
adc
imul
in
shl
push
pop
mov
fs
out
push
dec
popf
mov
push
inc
fcompl
mov
movsl
mov
mov
pop
lock
iret
pop
dec
fsubrs
push
pop
or
add
rolb
je
in
fldt
or
xchg
scas
cli
xor
dec
inc
addb
xor
mov
iret
cmp
ret
scas
and
jg
cmpsb
pop
dec
cmp
jmp
test
ja
popf
xchg
fs
call
notl
mov
lock
pusha
leave
jp
dec
rcl
stos
outsb
sbb
scas
lds
stos
lods
xor
sbb
jo
cmpsb
mov
pop
lods
sub
jbe
push
sbb
cmpsl
inc
out
in
inc
cmp
test
rcrb
jge
into
ret
and
dec
xchg
inc
stos
repz
shlb
mov
inc
dec
mov
cld
push
pushl
or
jmp
pop
adc
mov
jbe
jg
or
insl
inc
nop
mov
pop
stos
js
cmp
stos
mov
pop
ja
jne
mov
sbb
xchg
cwtl
imul
or
fsubr
jg
dec
lods
mov
xchg
and
sbb
mov
inc
and
sbb
push
out
es
cwtl
mov
xchg
mov
lret
je
mov
dec
sbb
mov
pop
mov
vpavgb
imul
inc
popl
pop
sbb
adc
cltd
mov
lcall
nop
aad
mov
xlat
cmpsl
cmc
cmp
sbb
fldenv
cmp
adc
dec
cmp
dec
jae
cmpsl
mov
mov
lods
xor
ja
lea
add
lret
fs
ljmp
stc
mov
stc
pushf
fs
repz
mov
adc
add
out
add
dec
cwtl
imul
int3
fbld
insb
sbb
cmp
stos
sub
clc
xchg
mov
aam
sub
mov
add
cmp
jno
push
mov
aaa
xchg
adc
jecxz
out
rclb
in
sbb
cmp
or
mov
xchg
scas
pop
imul
shrl
gs
push
and
sbbl
jge
cmc
in
and
add
xor
xchg
add
jae
dec
xchg
hlt
sbb
loop
in
inc
in
testb
mov
inc
dec
out
add
adc
dec
add
sti
inc
jo
push
in
inc
push
sub
mov
and
adc
ret
adc
mov
into
imul
adc
test
adc
cwtl
xchg
fwait
sub
and
cmp
xchg
arpl
jno
sub
popa
mov
mov
test
cld
jecxz,pt
stos
and
pop
sbb
gs
push
mov
outsl
jl
leave
fildl
jecxz
mov
jge
roll
cmp
subl
adc
bswap
sbb
inc
dec
bound
lods
ret
lahf
ret
xor
xchg
xor
clc
mov
xor
cld
sub
in
mov
addb
mov
mov
fwait
mov
jns
inc
push
jno
lods
cli
mov
rclb
ds
lcall
sub
or
mov
gs
xor
stc
or
jbe
inc
jmp
test
out
es
int3
add
rolb
mov
xchg
jne
popa
xor
add
je
ds
mov
ss
inc
shll
pop
fstpl
test
jg
lods
mov
rcr
adc
data16
mov
mov
xchg
stc
aas
scas
pop
stc
lds
fldcw
icebp
ficoms
mov
xchg
ja
cmp
cmpsl
push
scas
ret
lock
or
sti
daa
xor
jl
adcl
in
mov
aam
in
xchg
mov
xchg
jmp
mov
js
roll
mov
dec
adc
mov
lods
inc
xchg
imul
int
sub
jae
mov
jno
pop
push
in
mov
xchg
sbb
xorb
fdivl
push
cmpl
stos
leave
mov
repnz
fmuls
movsb
xchg
in
xor
insl
cmpb
flds
pop
sbb
pop
loope
jns
and
movsb
xchg
jl
adc
scas
test
clc
jl
push
mov
popa
mov
into
inc
add
imull
xchg
sub
mov
mov
xor
sub
adc
inc
mov
inc
cmp
ja
rcll
stc
push
enter
mov
stc
jmp
sub
dec
jecxz
das
inc
xor
push
and
and
jne
jbe
adc
clc
push
inc
es
data16
jb
xor
fmulp
or
out
shll
cmpsl
xor
push
mov
fs
test
inc
lret
cmpsb
mov
cmpsb
mov
pusha
xor
dec
jge
and
mov
xor
inc
add
mov
call
sub
mov
xor
cmp
fisubrl
orb
mov
sub
fisttpll
mov
add
movsl
mov
and
xlat
pop
lret
xor
fildl
scas
pop
and
lods
jge
imul
clc
mov
jp
mov
jecxz
mov
ja
cwtl
out
addl
mov
repnz
js
clc
insb
push
int3
jno
gs
or
pusha
push
out
push
das
stos
out
daa
or
jae
ret
sbb
or
orl
mov
push
fisttpll
inc
push
adcb
xlat
addr16
repnz
mov
test
int3
xlat
and
ja
mov
idivw
pop
out
rorb
xor
incl
jp
addl
dec
leave
popa
push
inc
pop
push
fidivrl
xchg
mov
mov
and
subb
push
push
and
adc
lods
xchg
ret
int
xor
mov
fisttpl
pop
adc
mov
xchg
mov
xor
out
sar
jle
mov
dec
mov
arpl
xor
cmc
push
xchg
ljmp
adc
repnz
iret
sub
and
mov
shrb
out
xchg
cmp
stos
xor
mov
mov
mov
jno
adcb
movsb
ja
mov
xlat
dec
sbb
test
out
call
scas
inc
ljmp
or
dec
hlt
and
xchg
ja
bound
push
push
adcl
pushf
sbb
std
imul
out
cmp
mov
test
inc
ja
scas
mov
icebp
sbb
mov
and
daa
adc
push
mov
das
add
rcrl
sub
insb
lcall
mov
jmp
jno
insl
push
fcoml
mov
or
or
inc
mov
inc
movb
cmpsl
mov
incb
in
addr16
rcl
std
lods
sbb
jle
adc
xchg
clc
iret
lret
scas
and
mov
pushf
popf
or
ljmp
hlt
or
insl
mov
test
cmp
add
jmp
xchg
pop
mov
sbb
loopne
sahf
fcoml
in
mov
xlat
fistps
std
cmp
movsl
xchg
rorl
pop
mov
inc
push
test
cmp
lock
test
mov
cwtl
mov
lcall
pop
imul
or
aam
xchg
sbb
subl
insl
faddl
jno
in
xor
cli
sub
stc
lret
sbbl
cwtl
in
dec
iret
mov
jmp
ficoml
jbe
jb
sahf
mov
fs
movsl
ret
mov
fwait
jge
ret
test
pop
test
cmpsb
aas
adc
jle
adc
notl
movl
bound
imul
cmp
inc
test
hlt
mov
push
movsl
jmp
mov
add
mov
mov
movsl
fistpll
icebp
xchg
adc
xchg
cld
addb
test
or
bnd
mov
test
popf
cmp
leave
cli
jnp
fnstsw
pop
add
adc
addr16
rolb
lds
xchg
lea
testb
add
pop
je
daa
out
fiaddl
mov
add
adc
xorb
mov
outsb
pop
sahf
lahf
in
gs
sub
int3
xor
mov
cmp
cltd
pop
mov
std
push
xlat
mov
lcall
in
or
test
mov
repz
icebp
lock
xchg
notl
or
lea
add
outsl
fcmovnb
data16
mov
notb
push
jg
and
mov
mov
imul
dec
cmp
and
ja
cmp
and
clc
aaa
shlb
pop
aam
cmp
arpl
xlat
add
js
sbb
xchg
push
imul
out
adc
jg
cli
and
xchg
leave
imul
ja
xor
push
or
pop
cmpsb
arpl
lds
and
andl
popf
adc
mov
cltd
xchg
push
mov
jne
adc
enter
stos
cmp
pop
scas
call
jno
inc
int3
sar
clc
xor
and
js
mov
mov
push
call
test
iret
cmp
sbb
rclb
xlat
xor
sub
sbb
jp
mov
lods
add
push
stos
adc
xchg
xchg
mov
insl
pop
fnstcw
lds
into
jge
dec
pop
js
fwait
jecxz
popa
xor
push
xchg
lret
mov
pushf
push
and
jbe
mov
mov
inc
mov
jae
insb
mov
lret
dec
aam
cltd
das
jbe
stc
xchg
push
lcall
cmp
adc
push
mov
push
loop
lret
pop
and
ucomiss
js
and
imul
and
adc
ds
dec
lret
adc
inc
fcomi
xor
and
add
jno
sbb
fisubl
lods
fstl
in
lods
xlat
mov
mov
icebp
fldcw
les
mov
ret
cmc
subb
mov
sub
lret
rcr
sbb
xor
cmpsl
add
fwait
add
ja
dec
mov
in
xchg
cmp
xor
das
clc
stc
dec
pop
shlb
pop
pop
add
cmc
sub
sub
cltd
adc
jbe
ret
sahf
test
stos
mov
add
test
pop
adc
jge
lret
aad
jmp
arpl
cmpsl
aaa
sahf
mov
mov
fwait
sbb
das
stos
mov
lods
inc
xchg
inc
outsb
cli
jae
rcl
xchg
in
imul
adc
sub
sub
pop
jbe
inc
sub
ds
test
adc
mov
push
lahf
hlt
lretw
xchg
stos
jp
icebp
push
mov
pusha
fsin
inc
jno
pop
inc
stos
movsl
shlb
insl
sbb
dec
cmp
lret
ss
into
out
inc
mov
xor
push
inc
stos
push
push
xchg
fsubrl
outsl
data16
pop
or
sbb
pop
inc
add
loop
stos
xchg
andl
jp
stc
or
mov
adc
pusha
push
jg
mov
inc
add
movsb
push
cmp
or
test
lret
in
xor
jb
adc
add
sub
stc
and
incl
cmp
pop
ds
sbb
sar
repz
inc
jbe
pop
in
sub
pop
push
nop
std
mov
negb
sub
je
test
sbb
addl
arpl
rclb
icebp
outsb
add
cld
mov
jno
dec
adc
inc
add
dec
mov
jne
fs
inc
mov
push
dec
imul
inc
xchg
pusha
dec
adcl
sub
push
cmp
mov
popa
jb
dec
rcl
ret
adc
sbb
jp
iret
mov
jl
pop
inc
push
dec
xor
loopne
push
dec
or
pusha
fdivrp
adc
jge
xlat
dec
sbb
cmp
mov
sbb
scas
repnz
test
mov
fistpl
popa
push
les
jecxz
js
imul
add
xchg
stos
cld
test
jnp
insl
mov
jmp
pop
xchg
mov
dec
jecxz
mov
into
dec
add
xor
popf
fadd
int3
mov
sti
xlat
nop
mov
cli
sbb
test
hlt
enter
and
cmp
in
or
xor
mov
mov
int3
repnz
repnz
cs
sti
repz
jp
adc
andb
xchg
inc
in
das
sub
cwtl
insb
cmp
pop
sahf
xchg
mov
insb
inc
aas
iret
mov
nop
jg
add
cli
cwtl
adc
mov
out
in
pop
loop
adc
adc
fisubrl
fcompl
xor
outsl
xor
dec
pop
stc
in
jmp
add
sub
or
mov
mov
xchg
js
pop
sbb
shl
loopne
push
push
sbbb
push
in
sbb
leave
fnstsw
cld
pop
sbb
cld
xchg
imul
cltd
mov
mov
faddp
push
insb
mov
jl
scas
stos
push
pop
add
lods
cmp
mov
icebp
popa
sub
ret
inc
mov
mov
mov
lcall
icebp
shll
dec
jge
int3
inc
lea
dec
loopne
adc
pop
bound
dec
inc
outsl
ret
push
stos
xchg
adc
add
js
cmpsl
push
pop
stos
decb
test
movsb
mov
arpl
out
push
sub
adc
add
sbb
xchg
push
ret
jp
or
xchg
mov
cmpsl
outsb
mov
xor
jne
dec
cmc
inc
cmp
cmp
xchg
cld
jno
int3
inc
pop
int3
jmp
test
bswap
fstpl
xor
fmull
push
jge
jae
cltd
xor
adc
arpl
rcll
loope
and
movsb
sti
sub
mov
xor
xor
sbb
pushf
in
push
loope
mov
xor
xchg
mov
mov
aaa
sub
mov
adc
sub
mov
inc
mov
mov
sbb
cmp
xor
dec
mov
sub
mov
aam
mov
and
fiaddl
mov
push
xchg
fsubrp
cli
imul
pop
mov
dec
jecxz
cld
dec
dec
push
movsb
ffree
cwtl
sub
xor
push
and
fstl
push
js
xor
nop
cmp
mov
mov
outsl
jo
mov
dec
mov
test
std
inc
jae
xchg
lock
cli
lret
adc
stos
inc
mov
dec
mov
int
out
hlt
pusha
notb
push
mov
cmp
xchg
cltd
jle
fsts
data16
stc
pusha
push
push
scas
xchg
rolb
cs
mov
dec
arpl
jbe
addb
mov
sar
mov
sbb
out
insb
and
test
loopne
xchg
lahf
adc
jb
lea
cmp
shrb
test
imulb
pop
pusha
movsb
cmp
scas
insb
push
add
sarl
nop
movsb
dec
and
pop
movsl
repz
push
sub
sbb
mov
pushl
mov
mov
adc
sub
call
fwait
jbe
insb
push
inc
cmp
popf
push
movsl
lds
stc
dec
sbb
jecxz
or
test
int3
xor
icebp
push
ret
xor
cmpsb
xor
xorw
cmp
mov
cmp
and
sub
cmp
ret
mov
and
mov
in
iret
movsb
add
cmpsb
cmc
pop
stc
imul
scas
loop
adc
push
ret
out
adc
or
movsl
int
loop
sub
push
adc
jbe
xchg
inc
inc
out
push
je
stos
or
mov
adc
dec
dec
pop
in
jecxz
and
mov
sub
push
cmc
ficomps
push
mov
jae
imul
pushf
fstl
aad
pop
subl
push
loope
mov
dec
hlt
das
xchg
push
push
mov
push
cmp
push
mov
fsubp
out
dec
daa
lods
ficoms
ljmp
push
and
pop
out
adc
lahf
adc
fists
lahf
popa
adc
sbb
pushf
sti
pop
xchg
pop
lret
test
cmp
xor
lahf
sub
sahf
fsubp
or
fistl
out
mov
mov
aaa
popf
mov
jae
mov
push
movsb
dec
pop
lcall
sbb
sbb
and
sbb
int
icebp
icebp
repnz
loop
icebp
stos
jmp
cmpsb
es
mov
pop
inc
push
inc
adc
ret
sbb
mov
rcrb
sub
out
inc
std
or
sub
or
sbb
orl
repz
fmul
movsl
pop
flds
or
int3
jge
mov
rol
jp
mov
and
negl
inc
pop
or
fwait
adc
add
inc
popf
out
lock
lret
movsl
out
push
loop
cmp
dec
add
dec
fwait
mov
dec
push
fisttpl
and
stc
inc
cmpb
jns
daa
xor
lds
sbb
mov
adc
xor
pop
pop
fimuls
mov
shrb
xchg
stos
jno
inc
enter
dec
pop
xor
stos
xchg
adc
sub
icebp
lret
and
xor
sbb
rclb
ja
in
sbb
sbb
inc
push
jecxz
sti
test
or
mov
cmp
pop
daa
repz
add
stc
stc
cld
sub
and
ret
ja
cs
fsubrl
ret
add
stc
and
cmc
shl
cmpsl
out
sub
mov
mov
sti
sbb
push
cmp
pop
pop
bound
fwait
cmp
incb
rcrb
pushf
fs
movsb
ret
pop
inc
inc
xchg
in
jp
arpl
data16
popf
add
mov
sti
in
or
mulb
sbb
ja
jbe
mov
stos
iret
imul
daa
dec
insl
jae
mov
dec
xorl
dec
and
jns
inc
dec
fs
js
clc
dec
cmp
cmp
imul
pop
stc
out
inc
loop
xchg
popl
hlt
adc
push
mov
test
inc
xor
cmpsb
add
test
jnp
lock
jno
scas
cmc
out
sub
xor
pop
ds
xchg
and
movsl
bnd
jae
sbb
push
cltd
or
std
pop
repnz
out
sbb
cmp
dec
xchg
jecxz
push
jb
xchg
inc
mov
icebp
mov
fisttps
xchg
mov
inc
or
mov
enter
xchg
xchg
test
push
add
test
stos
out
xchg
mov
jg
lret
cs
inc
out
test
scas
push
lahf
je
cmpsb
hlt
add
iret
adc
int3
add
mov
lcall
test
mov
inc
sbb
mov
adcl
xchg
xlat
adc
jl
dec
mov
pop
sub
pop
clc
sbbb
pop
or
icebp
std
in
mov
cs
xchg
arpl
es
int
enter
movsl
add
dec
dec
mov
xchg
out
into
or
cwtl
or
into
jge
dec
push
lods
or
mov
add
sub
push
pop
push
jp
lret
iret
push
aaa
fmuls
jecxz
mov
pop
jg
pop
xchg
clc
and
shll
adc
iret
imul
push
inc
sbbb
cmpl
sbb
adc
mov
loope
testl
dec
lcall
cmp
scas
fldcw
xchg
outsb
dec
rcrl
in
mov
lock
mov
jnp
mov
rcrl
in
testl
pop
pop
xchg
je
mov
fstps
leave
pusha
mov
adc
cmp
mov
adc
dec
scas
lock
jg
xlat
lods
dec
push
aaa
dec
or
pop
sbb
dec
insb
cmpsl
push
mov
or
push
cmp
mov
xchg
jns,pn
mov
popf
pushf
sti
mov
push
inc
and
jecxz
outsb
mov
dec
push
xchg
jb
rcr
pop
mov
gs
sub
adcb
adcl
push
test
fneni(8087
arpl
add
adc
rcll
mov
push
push
out
pop
xchg
daa
pop
stos
mov
push
cmp
sub
fiaddl
pop
or
cmp
add
popf
xchg
cmpsl
or
je
xchg
fstpt
cli
pop
sbb
in
movsb
add
sbb
xchg
dec
stos
aas
sub
adc
addr16
mov
ret
iret
mov
aas
mov
mov
bound
js
lret
xor
divl
rorb
orb
dec
aad
or
leave
push
outsb
pop
mov
les
push
addr16
push
in
rclb
daa
xor
mov
push
daa
xor
cli
hlt
sti
repnz
dec
inc
or
ss
dec
or
dec
inc
jno
lock
dec
pop
lea
adc
add
icebp
shrl
add
dec
aad
xchg
loop
adc
sahf
xlat
cmpsb
pop
sub
fs
movsb
cmp
jne
aaa
lret
and
xchg
dec
out
pop
jge
aam
xor
jne
inc
data16
mov
push
inc
mov
xchg
jmp
lret
inc
mov
sbb
scas
sbb
pop
les
adc
cmp
sub
sbb
scas
cs
ja
scas
xchg
pop
arpl
pusha
call
cmp
jnp
in
push
xorl
xchg
adc
adc
repz
mov
rcrb
pop
rcll
fcmovnu
add
hlt
sub
mov
andl
push
out
sbb
gs
xchg
das
lret
cmpsl
loope
sbb
xor
add
decl
scas
push
cwtl
pop
lods
adc
dec
dec
dec
pusha
adc
inc
pop
push
and
mov
in
and
aam
lock
aaa
cltd
inc
inc
in
dec
xchg
dec
repnz
jmp
fdivrl
and
push
rclb
jo
push
shl
cwtl
cmpsb
xchg
fstpt
adc
mov
jbe
xchg
mov
movsb
cmp
or
sbb
cmpsb
push
push
das
jnp
mov
or
jbe
mov
mov
mov
xchg
ret
imul
or
stc
ret
incb
jne
mov
pcmpgtw
adc
jmp
mov
es
add
cmp
packuswb
mov
pop
xchg
mov
mov
or
xchg
fdivrs
rclb
shll
add
stos
ljmp
jle
xchg
adcl
cmpsb
jp
aas
movzwl
pushf
outsl
scas
adc
pop
sub
test
shrb
dec
insb
call
cmc
mov
xchg
inc
adc
adc
loop
lds
roll
pop
add
and
out
xchg
gs
sbb
enter
add
jp
inc
jp
mov
int3
push
je
int3
fistpl
or
nop
pop
fnstenv
notl
pop
subb
outsb
jbe
mov
xchg
into
jae
and
js
push
rcrb
fwait
out
or
das
xchg
rclb
dec
add
pop
jne
aad
xor
inc
sbb
xor
inc
pusha
and
inc
ficomps
jno
jge
testl
cld
outsl
add
mov
mov
das
aam
pop
jno
cmc
cmp
imul
movsb
nop
push
jns
btr
loop
or
xchg
jno
lods
add
into
lods
xor
dec
pop
pop
fdivrs
inc
or
pop
pop
out
pop
mov
movsl
sbb
pop
rcrl
mov
push
mov
dec
enter
xor
inc
or
lea
stos
mov
mov
jns
sbb
popa
movsb
push
mov
int3
dec
fildll
repz
lods
push
pop
pusha
mov
sbb
sbb
pop
fabs
cmp
loope
dec
adc
movsl
pop
insl
cmp
fldt
outsl
fisubl
mov
aas
push
call
repz
adc
or
daa
lret
xor
std
mov
lret
push
and
test
aad
pop
sub
into
mov
das
call
not
lahf
cmpsb
sbb
mov
push
shrl
ds
pop
nop
shlb
lods
push
jne
mov
lahf
sub
in
sahf
inc
pop
mov
xor
sti
je
rcrl
jae
jo
xchg
push
xor
adc
xchg
jg
adc
and
push
mov
das
loop
inc
loopne
int
call
pop
stos
repz
push
inc
adc
xor
arpl
add
dec
dec
hlt
push
fwait
inc
je
mov
sub
or
push
dec
test
pop
cmp
sar
pop
xor
sub
mov
add
outsl
test
aaa
shlb
addr16
in
out
or
mov
jnp
sbb
dec
lret
pushl
leave
es
pop
mov
cmpsb
xchg
test
imul
or
stos
xor
mov
push
xchg
add
push
add
mov
fs
jb
inc
add
jl
push
lcall
sub
fstps
mov
fwait
cmp
dec
jl
data16
xor
cmc
inc
stos
pop
rorb
mov
clc
push
push
loope
pop
xchg
testb
mov
fiaddl
and
jmp
pop
mov
add
mov
mov
jl
inc
push
cmp
jb
pop
dec
adc
mov
outsl
cmpsl
adc
jl
adc
sahf
ret
call
pop
ss
stc
and
mov
movsl
aam
gs
cmp
or
sub
add
repnz
jo
das
mov
sbb
add
rol
cmp
add
int3
clc
fstl
adc
jno
pop
mov
sar
xor
dec
dec
and
mov
push
frstor
sub
xor
arpl
stos
fwait
add
movsb
and
iret
push
btc
pop
jmp
adc
mov
or
aaa
sarl
dec
int3
sbb
push
and
mov
ljmp
push
pop
add
push
aam
and
imul
jbe
xchg
mov
clc
push
pop
xor
cmp
xchg
dec
add
leave
mov
aas
aad
fists
mov
mov
mov
outsb
dec
jnp
pop
xlat
cmp
dec
pop
sbb
lret
cltd
and
jno
ja
test
call
xchg
jmp
sbb
pop
add
jmp
push
nop
adc
mov
inc
mull
adc
jge
lret
mov
sahf
shlb
sbb
dec
mov
push
or
push
cmp
inc
negl
pop
jle
sahf
rolb
cmp
les
outsl
out
xchg
add
leave
outsl
add
mov
add
hlt
pop
sbb
out
dec
and
cmp
mov
ja
shrl
nop
push
dec
mov
sti
and
cs
pop
in
inc
in
mov
xchg
push
cmp
movsl
jle
or
out
jae
push
scas
fbld
dec
leave
sub
sub
push
mov
stos
andb
or
mov
jb
xchg
xchg
jo
or
adc
scas
jbe
fistps
cmp
js
sub
dec
inc
and
xchg
mov
js
gs
mov
xchg
ljmp
pop
sbb
cltd
xorb
cmp
mov
mov
push
sbb
jmp
sbb
mov
rcll
xchg
dec
mov
pop
dec
or
mov
mov
orl
mov
aad
mov
aad
les
in
mov
in
int3
sbb
fbld
mov
std
je
sub
out
dec
inc
sbb
sbb
push
dec
fwait
aas
xorb
push
fbld
inc
aad
andb
xchg
in
loopne
add
inc
jbe
out
xor
leave
ds
mov
outsb
pushf
movsb
add
pop
adc
cs
fidivl
enter
fxch
push
lods
xchg
data16
test
nop
mov
mov
fsubrs
rolb
sbb
test
add
mov
pop
mov
vsubss
or
cli
pop
mov
or
cmc
push
push
cwtl
fwait
push
jo
ljmp
jmp
lods
negl
sbb
sbb
inc
shl
addl
and
mov
mov
xchg
hlt
jns
xchg
dec
sub
cmp
dec
ljmp
adc
push
int
movsl
outsl
sub
sbb
mov
pop
push
xor
mov
push
dec
xor
mov
inc
sub
dec
int
ds
mov
push
cmp
loop
dec
mov
rclb
jb
lahf
inc
and
es
andb
sbb
sbb
lcall
int3
out
ja
mov
mov
add
cmp
push
jge
inc
lea
fisubl
lods
push
pop
adc
lret
orl
or
fs
sbb
hlt
adc
and
out
loopne
insl
pop
xor
sbb
push
mov
cmp
pop
js
jp
sbb
lahf
iret
cltd
cltd
mov
jnp
xchg
adc
popa
push
xchg
je
es
in
add
jae
std
mov
rcr
dec
cmc
je
movsl
jp
add
das
leave
push
pop
dec
xor
pop
adc
and
mov
dec
xchg
sub
or
pop
adc
pop
idivb
jle
lods
xorl
movsl
xchg
mov
rolb
negl
ljmp
lods
rolb
repz
add
jge
add
add
sbb
popa
lea
pop
into
push
cmc
je
xor
lock
icebp
jmp
xchg
stc
mov
jae
data16
popa
sarl
scas
or
cs
fisttps
mov
sti
out
sbb
lahf
mov
pop
dec
int
in
aam
ret
inc
jmp
fneni(8087
jno
cmp
sbb
jne
daa
add
insb
ret
jl
daa
and
pushf
push
add
sarb
xor
and
mov
sti
dec
add
stos
pop
leave
stc
sbb
lret
shrb
inc
rcrb
clc
filds
cmpsl
dec
clc
fwait
jecxz
scas
lea
jbe
andb
cmpsl
je
jae
or
cmp
xchg
push
ret
inc
mov
pop
push
xchg
mov
push
xchg
std
sbb
sbb
jmp
insb
mov
pop
push
jp
push
jb
rcrb
das
cmp
dec
sbb
es
mov
lock
push
jmp
lods
add
ljmp
and
mov
lret
and
add
repz
aad
or
add
jb
adc
sub
xchg
jbe
xor
int
mov
lea
or
xchg
movsb
out
xchg
insb
and
lahf
pop
jb
out
xchg
jo
iret
orl
jns
jecxz
pop
lahf
cli
stos
cmp
jp
imulb
inc
adc
popf
repz
stos
cmp
push
push
push
hlt
inc
mov
ss
mov
es
scas
es
or
ds
dec
fisttpl
out
or
inc
mov
mov
sbb
repnz
aad
test
scas
cs
insb
mov
fs
incl
mov
pushf
fmul
mov
aam
inc
xchg
and
shrl
cmp
fimull
ds
jle
cmp
loope
pop
repz
cli
xlat
push
dec
sub
xchg
sbb
push
into
xor
xchg
in
repnz
insl
int
xor
cli
push
sbb
pusha
stos
jbe
movsb
enter
jl
inc
lods
icebp
push
xchg
adc
add
je
adc
add
dec
push
inc
dec
or
int
mov
add
lcall
stos
mov
push
or
xor
enter
pcmpeqb
jb
jb
int3
add
push
pusha
xchg
repnz
imul
xchg
inc
gs
adc
lahf
mov
aam
and
add
mov
imul
orl
repz
mov
and
insb
cmp
insl
jl
dec
mov
mov
mov
push
repz
push
shr
cmp
xorb
xchg
idivl
insb
xlat
popf
pop
leave
mov
fcoml
push
cltd
outsb
aas
rcr
inc
addl
js
push
mov
dec
adc
movl
lahf
lret
sbb
ret
push
sbb
mov
inc
sti
test
lret
ss
pop
xor
inc
and
lret
adc
lret
push
cmp
outsb
dec
hlt
xchg
jo
jmp
cmpsb
xlat
mov
sbb
pop
pop
in
daa
mov
stos
popf
xchg
mov
jge
js
and
sub
scas
cli
sbb
mov
imul
xor
repz
je
fdiv
sbbb
pop
add
inc
mov
in
xchg
outsl
adc
sbb
and
push
jl
add
push
xor
mov
cwtl
aas
push
adc
cmp
dec
repz
movsl
shrb
jno
push
pusha
xor
mov
repnz
xchg
dec
mov
mov
mov
add
movsl
sbb
mov
ficoml
arpl
mov
imul
daa
xchg
stos
dec
or
adc
sbb
dec
adc
sahf
sub
in
filds
scas
aas
and
push
rorb
jp
dec
or
lods
push
sbb
jmp
lods
ds
loop
sub
adcb
cmp
pop
inc
inc
sub
jp
pop
jnp
movsb
cltd
xchg
mov
outsb
jne
jns
fldl
xlat
jecxz
sbb
fdivr
jns
or
add
or
out
sahf
pop
pop
jb
push
or
mov
xchg
and
mov
sub
adcl
push
push
fists
adc
mov
and
push
nop
mov
test
xor
adc
mov
iret
sbb
mov
xchg
add
jecxz
dec
adc
pop
lret
cmp
and
arpl
mov
cs
mov
insb
insl
dec
ret
mov
cmpsb
int3
cmpsl
aad
sbb
dec
push
inc
sub
ja
cli
pop
out
push
cmp
mov
pop
adc
mov
pop
ret
cltd
push
and
pusha
test
push
cmp
cmp
inc
lock
xor
jp
mov
mov
xlat
lods
outsl
inc
and
lea
aas
or
test
pop
cmp
jne
in
test
sbb
adc
leave
adc
lods
andl
out
xchg
loopne
fcomps
push
mov
inc
cmp
int3
add
lcall
aad
cs
mov
dec
adc
fdivr
mov
jmp
test
fsub
inc
adc
adc
sarl
sbb
nop
add
add
mov
inc
jmp
add
sbb
scas
sbb
xlat
fmull
xor
sub
jb
lods
icebp
push
stos
cli
aad
nop
mov
jl
sbb
in
jnp
mov
mov
or
outsb
fidivrl
cmpsl
outsb
push
pusha
xor
and
das
adc
mov
popa
push
popf
sbb
nop
iret
dec
sub
gs
add
xor
cmc
icebp
je
dec
nop
test
jmp
mov
and
stc
xor
pop
add
fmuls
je
sub
and
iret
push
mov
loopne
jl
mov
mov
je
pop
rcll
mov
leave
pop
cld
xor
dec
add
fcoms
idivl
test
int
push
xchg
mov
xor
dec
mov
jp
out
pop
jb
scas
xchg
pop
loope
repz
mov
mov
adc
mov
loop
fcoms
imul
scas
lret
sarb
shll
sub
out
mov
cmp
enter
cmp
jae
mov
add
jae
popa
int
test
fcmovne
gs
popf
dec
mov
rcrl
dec
stc
fs
pop
mov
push
and
cli
pop
dec
ret
rol
les
jnp
lea
cmc
in
pop
pop
add
sbb
ficompl
jecxz
adc
out
sarl
dec
xor
push
lret
and
fildll
add
cli
jl
push
sub
jns
movsl
inc
pop
xchg
mov
jecxz
enter
inc
mov
sub
sbb
insb
adc
out
sub
popf
sub
cmc
sbb
cmp
shlb
sbb
sub
jno
pop
mov
xor
or
daa
mov
jmp
adc
inc
inc
jnp
sbb
cmp
lcall
xor
or
add
mov
push
inc
popa
shr
push
add
ret
cld
stc
bound
outsb
dec
arpl
xchg
nop
dec
mov
mov
cmc
adc
push
dec
push
or
fldl
jge
mov
js
stc
xor
rcl
pushf
les
xchg
and
stos
add
inc
or
add
scas
aam
das
lock
lds
mov
outsl
pop
fisttpll
xlat
xor
test
scas
das
push
push
dec
xor
and
shl
pop
mov
vmptrld
adc
mov
in
or
insl
loope
xlat
cmpb
pop
hlt
adc
ljmp
test
popa
jecxz
sub
ret
nop
loope
movsl
ret
xchg
into
ds
scas
mov
movsl
mov
fldt
in
inc
or
cmp
into
mov
push
je
sbb
in
pop
cmp
jb
lds
sub
sub
push
aaa
jl
mov
lahf
and
das
ror
imul
and
push
insl
sub
cltd
inc
xchg
ret
and
jae
jge
aad
mov
sbb
push
outsb
ja
insl
pop
aaa
fsubl
flds
out
dec
sarb
notb
mov
mov
cwtl
ds
popa
ljmp
divl
sbbb
xchg
cmp
nop
or
pop
and
pop
outsl
js
dec
inc
lahf
mov
movb
or
fsubr
ret
repnz
sbb
repnz
jl
in
or
loope
push
jo
xchg
rcl
or
push
insb
sbb
out
sub
xlat
fnstcw
jl
dec
aam
push
dec
das
jl
pop
sub
int3
icebp
cmpsb
fmuls
mov
in
outsl
daa
pop
mov
call
insb
xor
or
subb
mov
lahf
sbb
sub
bound
push
call
xor
xor
sbb
nop
jno
inc
mov
iret
lds
jle
sbb
leave
scas
aaa
pop
clc
push
cmp
in
sbb
push
push
mov
sub
add
mov
scas
iret
mov
aas
in
mov
bound
adc
mov
icebp
adc
std
out
mov
mov
rorl
sub
xchg
or
test
dec
dec
pop
push
pop
popf
icebp
jbe
dec
cmpl
outsl
lock
mov
push
test
mov
stc
mov
inc
insl
inc
es
rcrb
loopne
xor
mov
mov
out
imul
sbb
nop
insl
push
shlb
imul
gs
dec
outsl
cmp
mov
lods
add
addr16
hlt
ds
mov
push
rcrb
stos
inc
cwtl
add
sbb
arpl
fidivrs
cld
pushf
jg
cmpsb
pop
mov
push
sahf
pusha
enter
lahf
cltd
lcall
mov
fmull
aaa
jb
or
daa
add
pop
sahf
addr16
sbb
pop
cld
and
lods
mov
ja
repz
mov
xchg
insb
jecxz
jb
ret
mov
les
xchg
push
icebp
stos
arpl
xchg
sub
adc
or
push
mov
pop
jno
out
leave
das
lret
jge
add
lcall
adc
test
imul
insl
gs
add
mov
inc
cld
nop
fisubrs
xchg
cmp
sbb
loop
and
push
ror
push
sahf
xchg
notl
outsl
mov
inc
pop
and
dec
stos
sahf
rolb
test
and
push
adc
int
or
jp
movsb
push
xchg
outsb
dec
cmp
add
paddsw
ret
xor
dec
pop
and
jns
test
xchg
pop
push
fmulp
stos
xlat
pop
add
mov
lock
jno
in
and
cltd
in
imul
sbb
or
scas
mov
sarl
push
dec
leave
leave
xchg
xchg
mov
ficompl
cmpsb
add
xor
inc
pop
push
fwait
sbb
adc
pop
rolb
cmp
and
push
xor
imul
cltd
sti
mov
xchg
adc
push
dec
fs
mov
repnz
in
cmp
push
mov
orb
ret
addb
and
sbb
sbb
inc
pop
xchg
and
por
xor
lret
mov
sub
in
shll
enter
pop
into
push
dec
cmpsl
fistl
xor
int
cld
mov
mov
push
inc
adc
jb
jb
sub
daa
cmp
outsl
inc
shlb
pusha
dec
pop
rorb
xchg
shrl
movl
or
push
out
cmpsb
test
add
push
inc
arpl
into
rcr
add
rorl
test
fldenv
bound
fs
mov
adc
outsb
dec
or
push
ret
or
mov
pop
adc
cltd
decb
sub
cmp
or
sub
push
popa
push
out
pop
push
imul
mov
sti
inc
sbb
jmp
fcompl
sub
adc
cld
in
out
gs
les
inc
xchg
test
out
xor
int3
xor
push
mov
xorl
testl
fdivr
cmp
leave
mov
mov
int3
dec
jp
mov
std
inc
xor
xchg
sarl
aas
in
ss
mov
push
cs
iret
fiaddl
xor
sbb
adc
xchg
jnp
mov
enter
cmpsl
out
sbb
mov
mov
stos
insl
sub
mov
js
xchg
pusha
int
jmp
nop
jb
in
popf
xchg
push
mov
cmp
popl
push
pop
insb
lods
int
stos
fldl
jnp
clc
xchg
scas
push
cmp
sbb
daa
aam
mov
inc
cmp
or
mov
mov
mov
mov
cmp
addl
xor
mov
popa
mov
neg
pop
push
mov
fimull
mov
xchg
push
lock
outsl
popf
in
roll
mov
push
mov
dec
jg
fnstcw
jne
sbb
call
lahf
pushf
sarl
shr
stos
dec
xor
mov
mov
out
aaa
das
data16
in
or
bndldx
filds
pop
clc
pop
xor
pop
pop
jbe
push
sbbl
mov
xchg
xlat
or
test
and
jp
mov
enter
lods
fsub
jmp
sti
or
push
mov
adc
push
out
pop
push
imul
xchg
jmp
mov
jo
imul
pusha
leave
dec
fldl
ss
and
and
add
fxch
xor
mov
testl
xor
pop
aaa
ja
mov
inc
je
dec
mov
adc
fmull
cmp
adc
lea
fnstenv
sub
test
addr16
shrb
sub
mov
sub
rcll
add
movl
mov
xchg
pop
mull
sti
cli
ss
push
imul
or
dec
ja
test
mov
lods
fidivrs
jmp
pop
nop
adc
mov
repnz
test
nop
xchg
sbb
jg
data16
mov
int
fwait
xchg
dec
dec
dec
push
repnz
jmp
testl
or
fstpl
pop
jmp
xchg
cmp
mov
sar
pop
lock
cmpsb
das
pop
mov
int
mov
mov
xchg
decb
divl
jbe
xor
int3
adc
mov
jge
fs
sbb
cli
out
repz
add
inc
pop
sbb
int3
xor
and
insl
add
gs
jge
xchg
out
mov
mov
shrb
xchg
scas
cmp
xor
mov
pop
inc
in
out
insl
mov
sbb
mov
addl
pop
adc
mov
sti
je
push
push
fldl
scas
xchg
pop
cmp
insb
cmpsl
aam
sbb
mov
js
xchg
mov
mov
in
dec
popa
xchg
xor
sbb
loope
aam
pop
xchg
sahf
mov
mov
shll
xor
fisttps
cmp
mov
xchg
testb
jb
popf
sbb
mov
popa
fildll
mov
mov
push
fwait
cmpl
stos
mov
pop
lods
orb
fcomp
xlat
jge
ds
lret
mov
shll
adc
pop
ljmp
int
out
mov
push
test
jge
das
push
int3
dec
js
sti
leave
push
add
sbb
or
and
xchg
mov
adc
aaa
adc
popa
loopne
inc
pusha
lahf
sti
sbb
shrl
mov
pop
stos
insb
mov
push
scas
dec
lods
jl
xor
fwait
sbb
ss
pop
in
insl
mov
and
pop
push
cs
mov
sbb
xor
inc
push
sbbb
sahf
cmc
sub
jb
adc
jnp
cmc
push
fsubrl
jo
or
push
cmpsb
movsb
fwait
push
scas
cmp
mov
aas
mov
push
mov
cltd
sub
cmc
inc
aaa
imul
lret
mov
inc
cwtl
movsb
leave
int
cmc
and
movsl
pop
imul
popf
mov
test
cli
dec
lcall
nop
les
outsb
addr16
cltd
adc
es
cli
mov
out
push
push
sar
inc
mov
out
pop
ss
popf
adc
push
or
fistpll
in
xor
mov
jb
out
inc
mov
xchg
add
insb
mov
outsb
sbb
dec
jnp
movsl
push
rolb
out
dec
inc
sbb
imul
ja
lret
cmpsl
mov
lods
ret
daa
aad
xor
push
lock
lcall
fsubrl
loope
cmp
movsl
sti
add
sbbb
stos
fcmovnu
mov
sub
jge
pop
cmp
mov
pusha
pop
pop
xchg
and
rcrl
mov
inc
xor
sbb
push
cmp
je
sbb
rorl
call
sub
faddp
xchg
stos
rcrl
pusha
jne
aaa
xchg
ret
imul
xor
sbb
pop
test
inc
hlt
inc
cmp
jns
jecxz
pop
bound
lea
insb
xor
push
mov
popf
int
xchg
pop
dec
mov
out
sahf
addr16
aad
fisttps
jle
sarb
jp
pop
test
hlt
sti
sbb
fst
int
jb
scas
sub
mov
push
and
stos
inc
jecxz
push
jae
cmc
jnp
sbb
cmp
mov
pusha
cmp
push
fsubrs
xor
add
mov
jmp
es
mov
sub
shrl
jmp
fldt
iret
pushf
jmp
inc
cs
test
and
repz
mov
ficomps
or
adc
xor
loopne
sub
mov
cmp
cmp
lret
aas
data16
pushf
daa
out
fimull
sbb
mov
add
std
mov
pop
jbe
js
xor
popa
xchg
invlpg
sub
cmp
sbb
mov
dec
insb
mov
pop
shrl
lds
push
cltd
jp
pop
adc
loop
sti
mov
mov
fnstsw
sub
loopne
and
cmp
mov
inc
cmpl
leave
add
cld
push
cmp
mov
int3
push
mov
insb
fstpt
test
inc
bsf
jmp
push
ret
and
scas
xchg
lcall
decl
jecxz
jno
adc
aaa
jo
sub
into
shlb
js
inc
jl
and
dec
pop
sbb
add
sub
push
incl
fcom
jne
sub
sahf
lcall
and
pushf
fwait
sbb
fsubl
loopne
jnp
mov
outsl
inc
arpl
loopne
and
xor
pop
movsl
enter
mov
jmp
data16
pop
or
push
int3
loope
adc
push
xor
bound
stos
push
jp
pop
stos
inc
push
push
fdivrl
into
jle
fdivrs
pop
jmp
test
xchg
xlat
das
cmp
daa
icebp
mov
setl
xor
jmp
aaa
xor
das
cli
lods
xor
xor
xor
lea
icebp
inc
jmp
dec
imull
pushf
insl
dec
lods
fwait
xchg
jne
out
rol
pop
dec
xchg
fnstenv
xor
sarb
sbb
je
xor
jo
jne
fists
xchg
xor
out
push
fildl
cmpsl
faddl
punpcklwd
pop
ret
mov
xor
fs
loop
pop
test
or
dec
insb
loop
lods
test
fisubrl
sbb
aam
push
mov
cmp
cltd
cltd
sahf
dec
add
mov
imul
imulb
rorb
out
pop
mov
adc
shrb
adc
cmp
out
les
xlat
pop
into
mov
fdivs
lea
ret
aad
bound
push
sub
out
inc
fisttpll
jae
cmp
lods
cmp
push
mov
and
popa
fdivr
add
cs
repz
mov
mov
imul
pop
fldl
pop
daa
push
xor
jb
insb
or
ja
mov
push
xchg
adc
stos
repz
pushf
insl
das
mov
out
mov
cmp
xchg
mov
push
mov
imul
sbb
mov
jecxz
pop
sbb
cmp
std
mov
shl
adc
sahf
mov
mov
shl
adc
sar
add
fsubl
pop
and
add
aas
inc
xchg
sub
in
cmp
movsb
jne
fwait
mov
sbb
popa
arpl
lret
addb
stos
sbb
mov
jge
push
pop
cmp
imul
sbb
stc
adc
jnp
outsb
xlat
hlt
lods
mov
jle
sbb
std
push
pop
jp
aaa
pop
stos
xchg
add
xchg
and
fs
adc
mov
mov
sub
lahf
sbb
and
jb
adcl
stos
fldl
add
add
stos
or
mov
mov
push
add
aad
out
sbb
lods
mov
imul
iret
cmc
add
xor
vaddsubps
stos
jno
xchg
call
loop
pop
push
cmp
mov
inc
cmp
inc
cltd
pop
xor
xchg
xchg
lods
and
cwtl
pop
fwait
pop
mov
das
test
aas
test
jge
jecxz
and
and
xchg
test
test
mov
sbb
iret
cmpsb
xor
pop
xor
cltd
mov
jle
clc
andb
cmp
es
into
int3
inc
cmp
gs
insb
xor
jns
xlat
repz
dec
outsb
fwait
jp
fwait
jnp
inc
push
xlat
dec
xchg
add
scas
adc
jae
daa
sub
push
mov
fwait
je
out
cmpsb
mov
and
in
dec
imul
xlat
imul
mov
sbb
push
xchg
setnp
imul
push
mov
push
repz
sub
insb
mov
repnz
and
in
imul
das
stos
adc
cli
in
imul
push
mov
sub
lods
mov
sub
lahf
adc
xor
jae
and
push
sub
mov
in
sahf
sbb
pop
sub
and
imul
imul
mov
jae
dec
stos
mov
dec
sub
movsl
dec
mov
loop
cmpsl
push
inc
push
push
dec
insl
mov
jne
mov
pop
cmp
lods
sarb
ss
or
dec
andb
rorl
ret
jp
mov
push
das
loopne
mov
mov
mov
nop
ret
dec
dec
mov
dec
out
rcll
cmpsl
shlb
cmpsb
insb
jmp
inc
leave
imul
scas
xor
popf
ljmp
and
ret
lock
out
cwtl
push
mov
pop
iret
sahf
stos
fiaddl
hlt
movsb
in
inc
xchg
sub
std
jecxz
mov
adc
addr16
fists
xor
mov
aaa
divl
test
jmp
adc
cmp
movsl
sbb
inc
dec
mov
pop
jmp
lcall
xchg
cmp
arpl
push
das
inc
cmp
lea
pop
repnz
sub
mov
std
outsl
in
clc
cmpsb
aam
mov
test
mov
scas
mov
and
dec
stos
inc
cmp
ja
int3
sub
and
push
cltd
repnz
adc
pop
adc
mov
negl
and
cs
jns
shl
jbe
out
js
mov
movsb
es
mov
aad
jmp
pop
hlt
cmpl
xor
xor
mov
or
addb
jb
push
rcr
mov
addr16
adc
roll
mov
jns
dec
adc
ss
adc
mov
push
jb
mov
cld
movsb
loopne
mov
je
int
bound
test
loope
jbe
jnp
push
xchg
jge
andl
xor
call
stc
add
and
ljmp
lds
imul
pop
lea
jbe
mov
fidivl
xchg
ret
das
adc
pop
mov
mov
orps
repnz
ret
in
iret
iret
xchg
aad
rcl
stos
xor
es
stos
mov
fidivrl
hlt
fisttpll
dec
das
sbb
shl
sub
inc
add
fidivrs
inc
ljmp
push
ficomps
in
lods
xor
add
pushf
xorl
mov
push
jb
mov
mov
iret
stos
jmp
xor
imul
scas
pop
and
test
or
inc
lcall
ljmp
cmpsb
in
lock
and
in
adc
push
and
cmp
add
sbb
cmpsl
xchg
mov
in
scas
adc
adc
push
mov
mov
test
sub
jge
cwtl
dec
push
movsl
and
in
add
adcb
xchg
push
jmp
mov
out
add
or
nop
out
subl
xchg
cmp
push
jge,pn
or
imull
sbb
cltd
out
icebp
push
push
fsts
cmc
adc
or
push
or
out
or
and
lcall
or
push
mov
xor
sbb
fstpt
mov
out
xor
cltd
and
aaa
test
sub
dec
mov
pop
pop
mov
int
in
das
or
push
cmpsl
ds
pop
aam
mov
xor
daa
js
inc
xor
movsb
in
fcom
adc
movsb
sbb
das
ja
testb
cmp
fs
or
pop
pop
cltd
adc
cmp
adc
fdivs
aaa
mov
iret
jno
fiadds
out
sub
fsubrl
mov
or
dec
xchg
lcall
or
sbb
inc
mov
push
daa
rolb
out
shl
icebp
ret
sahf
stos
push
jnp
shl
lea
adc
pop
leave
push
or
andb
jne
cmp
iret
xor
mov
inc
int3
push
cmc
mov
dec
jl
push
and
mov
sub
xchg
jno
shrl
cmp
cld
insl
cltd
and
sub
out
roll
cmpl
add
push
cmp
xor
mov
jb
pop
cs
pop
or
cmp
sbb
popf
cmp
mov
inc
sbb
push
sbb
jmp
jno
xorb
pop
jmp
aad
js
add
add
jg
inc
mov
dec
rorl
push
testl
or
test
sbb
les
cmp
push
push
xchg
mov
test
xor
add
dec
xchg
adc
lret
add
mov
jp
movsl
in
out
mov
sbbl
lock
add
sbbb
lock
push
cs
push
test
stos
inc
mov
xchg
sbbl
or
xchg
or
iret
loope
cmp
cmp
jmp
shlb
inc
add
movsb
push
cmp
push
fistpl
les
add
dec
cmpsb
jmp
add
jp
push
scas
sub
es
movsb
mov
adc
in
push
inc
sbb
or
sbb
repnz
push
cli
pop
push
xor
lock
fsubr
ljmp
insb
push
test
outsl
imul
and
mov
add
std
lock
xchg
fs
adc
movsb
mov
pop
fs
adc
cmpsl
in
pop
cmp
xchg
dec
int
fcmovu
imul
sub
lret
inc
cmp
hlt
xlat
out
jle
call
or
scas
mov
sbb
sbbl
jl
mov
cs
pminub
les
jnp
fdivrl
sbb
dec
mov
pop
mov
mov
stos
or
scas
sub
and
decb
push
mov
in
mov
lcall
lods
int3
or
and
or
mov
int3
imul
icebp
and
mov
mov
mov
vpsllw
sub
push
mov
out
nop
push
repz
add
call
inc
fsubs
scas
mov
push
stc
mov
inc
mov
or
sub
repnz
arpl
ret
shlb
xorb
mov
mov
adc
loopne
pop
dec
in
lods
hlt
dec
mov
insl
xchg
js
adcb
imul
pop
jmp
out
iret
dec
xorl
xor
das
inc
mov
pop
lods
jecxz
pop
in
cmp
sub
jg
aam
mov
xchg
add
repnz
and
xchg
add
and
sub
mov
fs
mov
mov
cmc
int
inc
sbb
jmp
ss
push
mov
xchg
lea
xchg
fistps
pusha
or
rcl
std
lahf
add
xchg
jmp
test
jno
add
mov
cli
mov
rolb
or
sbb
stc
jp
stos
mov
add
mov
jnp
mov
cwtl
sbb
mov
js
sub
ja
pusha
and
xor
es
out
outsb
das
outsl
hlt
pop
lods
jle
adc
movsl
mov
fs
dec
aaa
add
add
mov
stos
pop
push
hlt
jg
dec
xchg
xchg
das
jmp
idiv
push
sbb
movsl
sub
sub
jb
in
mov
out
sub
std
add
add
inc
scas
pop
mov
mov
inc
push
cmc
cmp
in
fwait
je
adc
popf
data16
inc
out
and
push
pop
outsb
inc
mov
mov
sbb
mov
ds
adc
mov
repz
pop
mov
andb
mov
sub
or
lahf
xchg
cmpxchg
sub
out
and
cwtl
int3
adc
xchg
ja
xor
lods
xor
cmp
clc
xorl
inc
icebp
pushf
mov
xchg
pop
push
pop
ljmp
mov
jmp
or
pop
xchg
mov
adc
xchg
sarb
repnz
mov
outsb
xchg
ret
in
insl
loopne
or
mov
call
cs
mov
and
por
out
out
out
lds
pusha
mov
rorl
out
sub
push
jns
adc
jns
add
jo
and
xor
inc
lret
mov
ds
cmpsb
or
pop
cltd
jmp
outsb
daa
test
dec
dec
inc
push
lret
icebp
int
mov
neg
mov
jg
daa
sbb
movsb
dec
int
jp
jnp
pushf
das
and
movsl
bound
ds
xor
nop
pop
dec
mov
push
int3
fmul
sti
xor
pop
add
pushf
mov
loopne
data16
lods
mov
lods
ja
pop
cmpsl
mov
stos
into
and
ret
test
cmp
mov
mov
fwait
daa
jmp
shrb
loope
ret
mov
mov
loope
xchg
xchg
push
mov
jne
clc
pushf
dec
repz
test
cs
xor
dec
cs
aaa
loopne
jae
jge
lods
mov
ret
std
cmp
inc
mov
rorb
push
dec
clc
xor
outsl
xchg
and
adc
aam
je
pop
mov
jb
out
inc
jae
popa
enter
mov
xchg
adc
dec
add
jno
or
or
pop
fs
jl
aas
jnp
dec
jo
mov
sub
pop
mov
stos
fimuls
cmc
cmc
int3
push
pop
xlat
mov
add
aad
test
in
push
pop
ja
mov
mov
mov
cmpsb
lcall
loop
mov
adc
add
xor
imul
ljmp
mov
nop
lahf
mov
push
rorb
sub
xchg
add
ja
cli
dec
outsl
xchg
jl
bound
xchg
addb
xlat
je
jl
pushl
hlt
ret
mov
sbb
xchg
test
hlt
or
cmp
aam
cwtl
jno
movsl
pop
push
add
sub
sub
jmp
sbb
mov
inc
mov
out
aas
inc
test
cmc
les
inc
mov
add
test
push
test
mov
cmp
or
pop
outsl
sbb
add
inc
and
cld
loopne
daa
pop
cltd
sbb
cmp
cwtl
fs
enter
push
ss
xor
xchg
push
add
ret
jmp
js
cld
adc
inc
shrl
push
mov
nop
mov
cmpsl
mov
int3
push
push
aad
les
in
sbb
add
pushf
fwait
out
sub
testl
sub
ds
popf
pushf
jecxz
jg
mov
jecxz
fists
jecxz
fwait
outsb
pop
mov
cmp
in
push
leave
cli
push
sbb
mov
pop
push
dec
mov
jecxz
jns
mov
pop
test
mov
sub
push
add
or
insl
shlb
dec
push
cmp
lcall
xor
adc
out
sbb
scas
push
dec
gs
mov
jae
cmp
dec
pop
data16
xchg
xchg
addb
pop
pop
add
push
adc
movb
dec
add
jmp
fmull
ja
gs
dec
call
cld
sub
xor
mov
jge
pushl
dec
lcall
inc
mov
push
fmul
lea
das
testb
mov
sbb
and
or
repnz
xchg
dec
xor
cld
aas
xor
and
imul
test
xlat
insb
popf
jns
pop
mov
jns
inc
loopne
adc
mov
inc
xchg
mov
xchg
repz
repz
mov
cmpsb
repz
hlt
cli
lods
pusha
pop
dec
sbb
pop
push
rclb
notl
cld
xor
cltd
mov
pop
rol
sbb
sub
push
cmp
jmp
outsb
sbb
insb
push
inc
xchg
or
mov
and
sbb
rcr
popf
test
out
or
outsb
pop
xchg
ret
xchg
das
adc
cmp
imul
xor
dec
lea
and
es
mov
push
xchg
xchg
mov
and
jge
ljmp
dec
loope
mov
mov
pop
imul
ret
mov
icebp
test
gs
out
jae
imul
repnz
add
sbb
cld
nop
scas
inc
hlt
fidivl
cmp
lock
mov
stos
cmp
inc
add
stos
loopne
mov
add
adc
out
push
out
aam
imul
push
cltd
cwtl
pop
adc
in
xchg
xchg
movsl
push
lret
cmp
dec
mov
lea
fcomp
mov
pop
pop
cwtl
mov
in
adc
outsl
lods
xchg
aad
cmpsl
adc
repnz
push
fldl
out
aad
inc
cwtl
enter
xchg
mov
push
push
push
push
loop
bnd
into
jp
push
or
out
and
jae
imul
test
push
and
sbb
adc
cmp
std
clc
in
andl
inc
mov
sbb
loop
push
inc
inc
sub
stc
adc
mov
mov
mov
sbb
cld
gs
sbb
enter
sbb
push
outsb
sub
fs
push
push
lahf
and
jp
cmp
lods
pop
in
xlat
roll
mov
fnstenv
jne
ret
mov
xor
and
fidivrl
push
push
sti
cmc
pop
je
adc
xor
cli
fwait
ja
pop
add
mov
xchg
sbb
imul
ds
dec
ljmp
cs
pop
xor
imul
dec
push
xchg
sti
adc
cmp
push
xchg
pop
mov
pop
jmp
push
add
scas
cmp
adc
std
inc
add
paddsw
mov
mov
cmp
mov
fsubrl
jge
jne
adc
popa
mov
jnp
sbb
popf
mov
stc
stc
sbb
mov
and
inc
icebp
or
lret
je
mov
push
jnp
mov
add
jmp
dec
jge
aam
mov
mov
cmp
arpl
loopne
xchg
iret
push
mov
cmc
inc
inc
xor
leave
in
inc
fcmovne
or
pop
xor
and
mov
inc
ds
int
sub
add
in
mov
mov
mov
js
into
xchg
mov
cmc
jo
cli
pop
repz
cmp
jge
aam
bound
orb
pop
sbb
mov
ds
push
push
pop
inc
ret
jne
sbb
test
adc
imul
add
subl
mov
fnsave
mov
mov
fdivrs
leave
dec
cmpl
mov
xchg
mov
stos
lea
fiadds
cltd
dec
pop
mov
int
gs
sti
cmpsl
mov
roll
aas
ds
adcb
xchg
xchg
fidivs
pusha
mov
rcl
rcr
mov
cmp
stos
adc
stc
xchg
mov
loope
das
std
and
int3
addl
xor
pushf
pop
adc
in
mov
fistpll
andl
jno
addr16
das
push
mov
call
dec
pop
sbb
test
adc
inc
nop
aam
add
adc
push
xchg
push
ja
dec
xor
ja
mov
lret
adc
cmp
add
mov
rorl
rep
repz
imul
and
mov
inc
cs
xchg
std
cltd
lods
std
and
jecxz
imul
negl
mov
in
idivl
aad
clc
xor
sub
mov
inc
daa
scas
jl
bswap
in
sbb
pop
push
push
repz
cmpsl
mov
and
dec
mov
pushf
mov
lret
mov
mov
enter
sub
mov
out
mov
xchg
jbe
mov
lock
push
sahf
je
daa
dec
sub
aas
divb
in
sub
fisttpl
cmp
dec
ljmp
mov
andnps
or
inc
inc
push
in
xor
cmc
gs
mov
jmp
add
stos
jp
lds
lea
cli
xchg
inc
sub
outsl
call
mov
enter
pop
scas
add
data16
pop
fwait
xchg
mov
daa
inc
cmp
ljmp
sahf
icebp
push
mov
es
xchg
inc
and
clc
sub
stos
mov
imul
xor
outsb
imul
ljmp
fistpll
inc
push
push
ds
lock
add
cld
je
pop
fsubl
push
cmp
mov
dec
adc
cs
dec
daa
jne
mov
or
test
lret
jg
pop
cmovo
push
xor
fucom
mov
mov
test
cwtl
hlt
sub
imul
dec
pop
mov
pop
xchg
fistpll
xor
mov
push
stos
fisubrs
lock
in
jge
out
sbbb
cmp
cmp
xor
fidivrl
test
scas
cs
inc
rcl
inc
test
ret
pop
lock
fwait
js
cmp
push
test
jae
mov
and
xchg
enter
mov
xchg
push
cmp
lcall
or
inc
movsb
and
xchg
pop
ficoml
je
adc
sub
cld
push
imul
ljmp
cmp
aam
sub
jo
adc
adc
das
push
and
push
jno
sub
mov
push
xor
add
addr16
pop
lret
sar
mul
iret
xor
cmp
mov
fwait
sub
enter
mov
loope
cmp
ss
adc
je
inc
repz
ret
jle
xor
xchg
push
adc
ds
aas
adc
outsb
adc
ret
inc
out
sub
lea
mov
int3
nop
xor
nop
or
xchg
lods
popa
cmp
jp
jecxz
lret
push
jecxz
jb
test
mov
hlt
rcr
sar
mov
dec
ficoms
add
dec
cmpsl
sbb
cmp
xlat
iret
inc
pop
xor
mov
daa
shr
pop
or
enter
or
push
cmp
int
cmp
pop
mov
jmp
ljmp
sub
fwait
or
in
jne
pop
sub
rorl
xchg
mov
nop
or
and
jno
inc
addr16
das
out
dec
nop
mov
push
aam
rcr
add
ret
dec
jbe
push
mov
pusha
lods
jnp
pop
mov
jmp
sub
pop
pop
mov
jp
out
mov
ss
movsl
pop
loop
sub
pop
xchg
mov
add
mov
sbb
aas
int3
pushf
cmp
notl
push
imul
jb
flds
aad
dec
mov
cli
adc
dec
mov
dec
cmp
out
add
es
adc
push
arpl
xor
leave
lahf
idiv
inc
mov
xorl
movsl
and
in
sub
push
pop
sbbl
mov
sub
pop
mov
scas
stos
sub
in
sbb
ja
mov
xchg
mov
shr
jge
xchg
and
dec
sbb
xchg
inc
pop
mov
sbb
jnp
cmp
cltd
mov
xor
jae
cmpsb
mov
lock
in
mov
enter
popa
push
xor
inc
leave
adc
dec
push
dec
pop
in
cltd
mov
data16
xchg
inc
jno
test
ficoml
cmc
dec
imul
rcrb
fists
and
bnd
mov
cltd
jmp
lods
xor
ds
ds
cmp
mov
adc
mov
cs
scas
adc
and
cltd
pop
inc
les
lahf
and
ficoml
inc
and
mov
mov
faddl
dec
movb
cmp
xchg
fdivs
sarb
mov
adc
mov
and
mov
subb
pop
popa
jnp
repz
outsl
pop
sti
xorb
xorl
minps
in
cmp
and
xlat
and
add
movsb
jne
in
mov
mov
pop
stc
ja
lea
mov
push
push
cld
mov
jg
jle
push
mov
fdivrl
mov
jb
test
jge
fcomi
pop
jne
clc
pop
inc
adcl
push
pop
xor
ret
cmp
or
leave
cmp
push
pop
sbb
nop
cmc
jne
outsb
aam
and
outsl
and
int
or
sub
pop
in
scas
js
add
loopne
mov
movsl
cmp
and
out
sbbb
loop
int
sbb
add
cld
push
pop
orl
cmp
arpl
cmpsl
push
fsubrp
xchg
xchg
in
rorb
stc
mov
xorl
pop
inc
int3
jbe
pop
nop
into
cmp
ss
and
popa
mov
cmp
mov
or
out
aam
icebp
dec
mov
js
lcall
pop
into
jp
rcr
ss
pop
and
push
popf
movsl
in
hlt
dec
lret
cltd
sub
insl
loop
negl
mov
inc
test
fdivrl
mov
ja
jle
mov
dec
lods
dec
mov
sbb
inc
lret
sbbb
inc
and
mov
add
sti
out
ds
pop
sbb
pop
mov
stc
push
xchg
sbb
xchg
cmc
jge
mov
jae
test
push
sbb
movsb
lcall
lcall
xchg
sbb
pop
nop
scas
lds
push
mov
aas
push
pushf
repnz
dec
dec
cmc
pop
dec
push
xchg
jo
push
mov
ficompl
pop
xchg
aaa
je
out
xor
dec
jae
xor
push
inc
mov
mov
lock
movsb
aam
mov
outsb
not
cs
fdivl
lret
sbbb
dec
fwait
mov
dec
adcl
sub
.byte
add
add
add
or
add
add
mov
add
rolb
add
pusha
add
addb
add
add
add
add
add
add
orb
add
add
add
add
adcb
add
call
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
add
add
add
add
add
pop
add
add
add
add
pusha
add
addb
add
js
add
nop
add
addb
add
rolb
addb
add
fadds
add
add
add
add
add
add
push
add
or
add
or
addb
add
and
orb
add
cmp
xorb
add
add
push
add
add
add
add
add
add
add
add
add
cmpb
add
add
cmpb
add
add
add
add
adc
add
sub
add
inc
add
add
pop
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
call
add
add
push
add
add
add
add
add
add
or
xchg
add
add
push
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
test
add
rolb
addb
add
fadds
add
lock
add
add
add
add
add
add
or
add
add
or
add
and
add
cmp
add
push
pop
add
push
sldt
addb
sbbb
add
cwtl
pop
add
mov
add
enter
sbb
add
loopne
add
clc
pop
add
add
add
add
add
add
add
insb
or
add
sub
add
inc
or
orb
add
pop
or
orb
add
jo
add
mov
add
add
add
add
add
add
add
loopne
add
jg
add
mov
add
add
or
addb
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
and
add
add
add
add
add
add
xor
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
insl
adc
or
add
in
add
add
add
or
add
add
add
add
add
add
add
outsb
adc
push
add
add
add
add
add
add
add
add
in
add
add
add
test
adc
xor
add
in
add
add
add
fdivl
add
add
in
add
add
add
adc
add
add
add
add
les
add
add
in
add
add
add
clc
je
add
add
in
add
add
add
sub
adc
xor
add
in
add
add
add
pusha
ja
add
adc
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
in
add
add
add
sbb
add
in
add
add
add
pop
mov
add
add
in
add
add
add
mov
adc
pop
add
add
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
in
add
add
add
les
add
in
add
add
add
sbb
adc
in
add
in
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
adc
inc
add
add
add
add
add
add
adc
call
add
add
add
add
adc
sub
add
in
add
add
add
js
adc
sub
add
in
add
add
add
mov
add
add
add
add
add
add
push
add
in
add
add
add
lock
adc
or
add
in
add
add
add
cld
scas
adc
test
add
in
add
add
add
xorb
add
add
add
add
add
mov
add
add
in
add
add
add
xchg
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
add
in
add
add
add
loopne
adc
int3
add
add
add
add
add
add
add
in
add
add
add
pusha
rclb
loop
add
in
add
add
add
inc
rcll
mov
add
in
add
add
add
rol
adc
push
add
add
add
add
add
add
ret
adc
sub
add
in
add
add
add
dec
ret
adc
js
add
in
add
add
add
les
add
in
add
add
add
mov
adc
sub
add
in
add
add
add
mov
adc
inc
add
add
add
add
add
add
adc
inc
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
in
add
add
add
mov
adc
and
add
in
add
add
add
mov
adc
adc
add
in
add
add
add
lret
adc
adc
add
in
add
add
add
fmul
adc
adc
add
in
add
add
add
in
lret
adc
adc
add
in
add
add
add
add
adc
adc
add
in
add
add
add
adc
adc
and
add
in
add
add
add
cmp
adc
xor
add
in
add
add
add
push
add
add
add
add
add
add
add
add
in
add
add
add
movsb
jg
add
add
in
add
add
add
or
push
add
pop
add
add
inc
add
add
add
dec
add
pop
add
add
dec
add
add
push
add
push
add
dec
add
add
add
adc
dec
add
pop
add
add
inc
add
pop
add
push
add
push
add
dec
add
inc
add
inc
add
adc
dec
add
pop
add
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
adc
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
add
push
add
dec
add
pop
add
add
dec
add
add
dec
add
inc
add
inc
add
inc
add
dec
add
or
inc
add
inc
add
push
add
add
dec
add
dec
add
add
and
mov
adc
sbb
ljmp
fdiv
addb
cmp
daa
insl
ds
xchg
inc
jge
pop
or
xchg
inc
or
jge
clc
mull
jns
shrb
sahf
cmp
sbb
dec
mov
sub
inc
cld
sahf
test
addr16
sahf
push
cmpsl
push
test
in
js
jg
pop
push
repz
hlt
fcmove
jmp
push
iret
inc
int
repz
insb
push
adc
jge
mov
and
in
out
fnstenv
mov
outsb
add
mov
or
adc
in
aad
xor
xor
fldl
cmpsb
cli
xchg
cmpsb
xchg
or
sti
and
push
mov
rcrb
cli
aas
mov
mov
js
pop
mov
sub
loop
adc
and
cmp
aad
pop
push
xchg
lock
stos
or
ljmp
lock
xchg
sub
data16
insl
push
scas
inc
scas
ret
in
cmpsl
cmp
test
add
popf
or
lea
cmp
hlt
sbb
mov
pushf
jbe
out
aaa
jo
push
pop
or
push
cmpsb
lfs
dec
xor
xchg
sbb
jno
sbb
sbb
or
movsb
lods
jae
xor
push
scas
sbb
xorl
out
fiadds
add
pop
push
stos
sarb
push
or
adc
fsubp
mov
stc
jle
push
aam
pop
inc
xchg
aas
inc
push
daa
mov
jae
ret
adc
cwtl
mov
roll
jmp
lahf
loop
mov
ret
das
je
mov
dec
mov
aam
daa
xlat
sbb
mov
mov
xor
je
xchg
sbb
and
in
lcall
aam
fildll
push
cli
aam
repnz
sarb
pop
inc
jbe
sbb
repnz
in
ljmp
shrb
int3
ja
insl
test
push
daa
incb
iret
adc
repnz
fucom
mov
cmp
arpl
aaa
xor
add
sbb
stc
out
and
lcall
sbb
not
cmpsl
outsb
div
inc
imul
mov
cmp
cmp
pop
and
cs
or
ret
mov
clc
or
hlt
push
inc
xorb
decb
imul
or
xlat
mov
mov
pop
sbb
mov
jg
movsb
pusha
and
or
ficompl
mov
std
icebp
orl
pop
loop
rcr
test
push
inc
mov
lahf
cwtl
sub
jg
lahf
shl
pop
mov
and
push
sbb
dec
dec
pop
mov
roll
notb
leave
fsubr
push
or
mov
push
ss
sbb
ja
bound
popa
jg
fidivrs
std
mov
cmp
push
push
mov
mov
adc
andb
shl
es
cwtl
pop
mov
imul
fists
sbb
out
dec
fwait
rclb
cwtl
push
les
cmpsl
sarb
cmc
shrb
or
out
lret
sbb
jo
loope
sub
testb
mov
jecxz
sbb
mov
sar
pop
push
pushl
popf
xchg
or
fdivrs
test
fldenv
test
sub
fwait
inc
imul
stc
jo
lcall
insl
loope
rcll
push
and
lock
mov
inc
sbb
movsb
test
push
fwait
ret
dec
add
xchg
xor
pop
mov
sub
inc
pusha
fwait
sbb
popa
insb
lds
jp
popl
sbb
ja
mov
cmpsb
ds
mull
hlt
or
xchg
sbb
push
mov
cmc
push
scas
shlb
cltd
xor
js
adc
insl
pop
sub
push
lret
mov
ds
test
lret
es
dec
push
mov
push
push
xorb
outsl
rorb
imul
stos
lock
push
sub
je
jno
loope
jmp
test
outsl
mov
xchg
movsl
mov
inc
lea
aad
inc
xchg
cmp
lret
sbb
push
shr
and
xor
popf
ret
lock
into
clc
mov
repnz
dec
cmp
or
xchg
jmp
lods
xchg
or
add
jno
sub
push
cwtl
add
xor
movsb
mov
stos
and
jge
imul
push
lds
and
adc
imul
add
dec
cmp
cld
aaa
fbld
inc
and
hlt
rorl
cmp
cwtl
int3
or
pop
xor
lock
aas
or
cmpsl
mov
jo
rcrb
stos
jns
pusha
inc
insl
aad
fbstp
inc
adc
mov
jbe
loope
add
call
outsl
adc
hlt
push
data16
mov
push
push
xor
inc
mov
mov
pop
sbb
negb
add
mov
scas
inc
xor
dec
pop
repz
lcall
arpl
cmp
subb
call
in
mov
pushf
sbb
pop
mov
iret
rclb
xchg
enter
xchg
pop
sahf
fidivl
mov
sbb
js
xor
mov
decl
push
sub
jno
pop
push
enter
adc
ret
xor
in
inc
pop
adc
je
mov
call
into
mov
lock
push
mov
adc
lahf
xor
xor
and
icebp
pop
shrb
xchg
add
icebp
lds
mov
jge
cmp
pop
sahf
and
adc
ret
inc
out
jp
sub
mov
scas
mov
push
loopne
sub
pop
pop
xor
stc
xchg
mov
xchg
push
test
stc
ljmp
mov
cmovp
ds
aam
fcomps
mov
pop
xchg
hlt
imull
add
push
fcompl
inc
stos
aad
mov
push
cs
dec
pop
insl
ljmp
pop
jp
sub
int
xchg
shll
imul
pop
fmull
mov
sub
mov
pop
adc
mov
mov
mov
loope
rcll
fnsave
push
adc
sti
inc
std
mov
mov
cmp
fstpt
xchg
rcrl
pop
mov
xor
ljmp
xchg
lcall
in
inc
pop
mov
mov
fdivrl
stos
mov
and
call
fsubr
aam
fcoml
pop
jno
add
mov
jne
test
dec
mov
or
ja
jbe
mov
cmpl
sub
in
test
loope
sub
cmp
pusha
push
scas
sti
fcmovb
jno
insl
imul
mov
je
mov
call
fistl
push
cli
ds
push
lea
test
out
icebp
call
aam
ficoms
movsb
add
dec
pop
xor
in
inc
inc
inc
sub
mov
in
or
les
add
call
inc
lcall
imul
adc
out
stos
hlt
ljmp
mov
dec
mov
leave
push
inc
cmp
mov
mov
adc
mov
leave
repz
or
stos
add
jno
movsl
dec
scas
push
iret
inc
mov
notb
inc
xor
xchg
fdivrl
in
cld
push
lcall
fiadds
cwtl
xchg
fmuls
mov
cmp
cmp
dec
filds
cli
mov
pop
sbb
ret
jnp
mov
add
jo
pusha
dec
push
scas
mov
inc
xor
mov
sbb
mov
and
jae
xchg
pop
cmp
cmp
in
mov
xchg
scas
stos
inc
dec
push
shl
mov
mov
lods
lret
ss
aad
and
jb
mov
sbb
sbb
sbb
sbb
fldenv
cmp
arpl
jge
fidivrl
jb
fbstp
jne
mov
xchg
aam
pop
mov
mov
out
out
enter
or
push
push
cmp
fadd
int
popf
jno
push
fcoml
mov
aad
jns
inc
and
aam
adc
mov
lret
add
add
pop
idivb
pop
bound
sbb
and
stc
shll
xor
je
jp
jge
lds
inc
lcall
aad
and
das
js
sbb
and
lea
dec
movsb
movsb
mov
scas
popa
push
sub
mov
or
in
and
and
mov
xor
rolb
push
cmp
cmp
jns
fsub
ret
cmp
xlat
stc
push
xchg
inc
call
xlat
dec
pop
scas
pushf
mov
shlb
sbb
negl
outsb
out
mov
js
xor
add
loop
push
dec
ljmp
mov
cmc
imul
hlt
xchg
imul
nop
xlat
inc
sub
mov
sub
jo
cmp
test
les
mov
dec
xchg
adc
aaa
ret
jae
or
popa
cs
pop
out
divl
out
mov
adc
sub
or
dec
push
fistpl
mov
sar
sub
mov
mov
cmp
or
or
sub
std
cmpsb
fmulp
addr16
cmp
push
idivl
jne
cmpsl
in
mov
inc
negl
pop
sbb
scas
inc
les
loope
les
stos
mov
clc
xor
inc
adc
lcall
mov
push
jecxz
daa
jmp
sti
sbb
jecxz
cltd
je
jg
decl
nop
test
push
sub
xchg
adc
test
scas
test
out
ljmp
inc
sbb
xchg
adc
cmpsb
jbe
test
pushf
push
aas
sub
dec
loopne
lock
adc
and
xchg
and
adc
xchg
dec
add
mov
push
xchg
test
sbb
aam
in
push
movsl
sub
pop
lret
and
and
xchg
pop
dec
sbb
insb
lock
sub
js
cmp
cltd
adc
cmc
int3
xchg
cli
outsb
sub
mov
int3
mov
xchg
push
sub
repnz
push
shll
into
push
dec
xchg
and
std
mov
sub
cli
inc
imul
loopne
movsb
into
and
xchg
aad
xor
shlb
mov
std
arpl
repnz
jg
pop
subl
or
push
idiv
mov
fstl
int3
dec
call
test
inc
and
inc
xchg
mov
sub
xchg
adc
adc
fidivs
mov
inc
js
arpl
aaa
pop
popf
jl
add
pop
jns
adc
or
jle
xorl
jne
fwait
test
ljmp
jnp
shrb
addr16
push
jnp
mov
in
in
fucomp
out
mov
mov
and
push
push
pusha
ret
aaa
outsb
fucomip
dec
xchg
fnsave
call
add
mov
or
jb
enter
stos
jns
pop
mov
int
ja
mov
fldcw
or
pop
shll
test
ret
dec
lds
leave
rep
out
lret
add
int
dec
xor
mov
aaa
push
dec
mov
xor
xlat
insb
pop
sbb
xor
xor
jle
cmp
arpl
mov
js
sbb
testl
mov
or
jl
rorb
and
or
or
sbb
push
lods
jle
leave
movsl
fiadds
inc
mov
push
push
mov
lods
inc
xchg
or
scas
and
sbb
bound
mov
adc
fldenv
lds
and
fwait
inc
dec
cmpsl
and
test
adc
fiadds
pop
ret
or
jnp
and
mull
dec
out
jl
push
xchg
fidivrs
xor
aas
mov
pushl
test
inc
addr16
push
daa
enter
inc
inc
stc
and
sub
call
into
mov
in
jmp
faddl
adc
insb
mov
xchg
cli
jne
sub
mov
adc
adc
fisubrs
ljmp
rolb
sbbl
mov
lret
add
mov
pushl
cmp
inc
mov
adc
dec
addr16
ljmp
ds
jle
notb
pop
xchg
mov
les
mov
hlt
int3
pop
mov
mov
cmp
fstpt
test
mov
gs
inc
test
rol
mov
or
inc
sbb
call
shll
jo
pmuludq
push
pop
loopne
jmp
lds
rorb
dec
sub
aam
sbb
arpl
repz
fistl
arpl
adcb
ret
dec
das
in
out
fwait
sub
mov
xchg
xchg
ret
aaa
movsl
cs
popa
add
testb
fs
and
orb
xor
sub
mov
add
aad
inc
dec
jecxz
pop
sti
mov
iret
imul
fldcw
add
mov
or
push
push
mov
xchg
pop
cmp
jg
mulps
ficompl
daa
jmp
xchg
in
dec
pop
push
pop
mov
imul
fs
sub
sub
push
push
mov
add
push
in
sarl
push
or
leave
rcrb
test
cli
mov
test
inc
push
sub
mov
lret
adc
push
ret
pop
pop
out
jl
jl
jle
sbb
adc
bound
xchg
push
aaa
sub
sti
pop
repnz
mov
out
out
mov
shll
cmp
notl
mov
inc
cltd
pop
push
fs
push
dec
push
mov
inc
dec
adc
lea
in
sub
push
add
or
push
jge
ret
xchg
data16
test
rcll
leave
add
int3
dec
pop
adc
int3
data16
jo
hlt
or
cmc
movsl
jbe
imul
xor
std
in
xor
rclb
adc
outsb
jo
roll
gs
cli
fcompl
ret
mov
cmp
pop
inc
faddl
sub
lcall
push
pop
cmp
mov
scas
inc
inc
xor
dec
xchg
sbb
pop
test
sbb
dec
xchg
mov
popa
dec
mov
jecxz
movsl
iret
mov
jb
pop
dec
jl
fwait
push
popf
dec
lock
call
daa
or
push
push
aad
scas
xchg
dec
divb
or
lods
shrb
sbb
out
imul
movsl
bnd
repnz
leave
mov
call
adc
notl
repz
mov
in
stc
inc
inc
mov
mov
test
cmpsl
fwait
pop
repnz
push
inc
jo
insl
dec
inc
insb
clc
pop
push
sub
push
and
imul
pop
push
sarl
aas
enter
or
xchg
and
frstor
push
xchg
aad
mov
dec
push
cmp
cmc
sub
jge
das
push
aas
sbb
and
push
mov
push
imul
fldt
into
mov
mov
dec
push
fwait
push
push
loopne
cmp
fxch
std
mov
mov
sub
mov
fwait
pop
inc
jge
lds
out
cmc
cli
pop
xlat
sub
hlt
sub
clc
jl
xchg
fs
and
shr
lahf
add
mov
std
mov
cmp
lods
into
incl
loopne
imul
mov
popf
mov
pop
inc
mov
dec
mov
sahf
in
int
push
nop
adc
adc
aad
sbb
lret
push
movsb
pop
lds
inc
inc
mov
in
push
mov
mov
scas
std
push
cmp
push
stc
push
sub
pop
subb
adc
jae
into
scas
mov
punpcklbw
mov
jo
inc
mov
add
loopne
in
mov
in
push
mov
mov
scas
add
andl
jne
nop
aaa
dec
mov
ljmp
xor
ss
push
push
fimuls
loop
sub
cmpsl
adc
inc
push
loopne
push
cmp
pop
mov
fldt
cmc
jp
repnz
inc
inc
and
fidivs
je
xor
fmull
popa
push
xchg
push
cwtl
sahf
repz
mov
iret
lods
in
xchg
dec
dec
xor
rdpmc
jmp
leave
imul
rorb
shl
fisubl
lods
inc
lods
call
divb
push
cwtl
scas
loope
mov
insb
iret
inc
xchg
or
popf
xchg
ss
cmpsl
sbb
dec
insb
cmp
dec
ds
xchg
add
lds
and
push
xlat
test
std
xchg
ret
adc
fists
data16
nop
int3
clc
jns
xchg
bound
sub
and
sbb
dec
inc
ljmp
cmp
add
cmpsl
into
fisttps
loop
daa
mov
imul
scas
mov
mov
pusha
jecxz
ret
jp
repnz
cmp
inc
jo
pop
loopne
sbb
mov
mov
adc
inc
mov
es
or
popa
add
inc
stc
xorb
shlb
pop
mov
nop
fnstcw
jo
lahf
add
in
fwait
push
cmovb
and
pop
sbb
sbbb
js
mov
pop
int3
popf
sbb
jns
pop
inc
repnz
and
outsb
and
ficoms
xor
xor
jb
add
push
ret
mov
loope
imul
cmc
fs
xchg
mov
mov
mov
outsl
fcmovnu
pop
sub
push
pop
ds
mov
repnz
dec
shrb
jle
sub
jne
rorl
aas
nop
xchg
push
int3
add
mov
inc
aad
push
add
popa
xlat
mov
js
jbe
ljmp
jnp
das
mov
std
loop
jecxz
cs
movsb
lock
leave
bound
arpl
xchg
adc
call
mov
pop
jns
inc
add
clc
or
pop
paddusb
pop
dec
jle
ret
mov
push
sbb
lds
mov
in
nop
push
mov
push
cmp
mov
xorl
cltd
outsl
daa
adc
jb
loope
in
sub
mov
in
icebp
add
clc
filds
mov
push
add
lret
jnp
out
or
lahf
push
xor
iret
in
mov
jnp
mov
adc
mov
fstps
aad
sarb
cwtl
mov
jl
sub
push
scas
push
lock
mulb
xchg
xlat
adc
pop
ja
addr16
sub
repz
cs
dec
and
ja
xorb
or
jge
ja
mov
loop
repz
negb
scas
fs
repz
jle
popa
test
bnd
test
mov
push
icebp
or
jp
mov
xor
pop
xor
fcoms
fistpl
aad
ret
jl
fwait
inc
fdivrs
or
stos
jb
sub
daa
dec
mov
inc
cs
jo
inc
and
add
adc
cmpsb
sbb
repnz
std
push
mov
cmp
mov
ljmp
ret
loope
xchg
icebp
mov
scas
int3
dec
mov
add
add
cmovae
call
out
and
pop
push
pop
sahf
jmp
in
dec
je
iret
or
pop
mov
xor
sahf
push
push
pop
push
mov
lcall
jnp
pop
sub
and
dec
scas
xchg
xchg
pushl
mov
inc
orl
push
pop
add
pop
push
pop
cmp
in
aaa
rorb
hlt
or
mov
dec
inc
lcall
int3
loop
pushw
push
add
cmpsl
or
push
insl
adc
std
xchg
sub
mov
loopne
fiadds
pop
jecxz
lret
rol
jbe
cmc
fildll
rcrl
popf
adc
sub
cltd
pop
add
xlat
mov
shll
push
sahf
clc
and
mov
fdivs
les
pop
mov
clc
lahf
mov
jns
aad
shl
fwait
rcrl
mov
shlb
sub
xlat
mov
movb
out
adc
xchg
cmpsb
rorl
pusha
cmpb
stos
jl
fbld
push
out
sbb
mov
fs
jmp
and
daa
aas
out
inc
sbb
mov
fwait
test
jnp
pop
xchg
loop
and
pusha
test
and
outsl
movsl
ljmp
mov
std
push
hlt
into
xchg
xchg
mov
mov
push
in
ds
mov
pop
loopne
outsb
cmp
inc
cmc
dec
push
das
mov
outsb
mov
push
dec
pusha
push
push
sub
pushf
dec
add
cmc
inc
iret
insb
dec
outsl
inc
adc
inc
jg
into
xchg
std
cltd
xor
xchg
or
mov
dec
ret
leave
mov
inc
or
inc
scas
dec
fdiv
jmp
push
jmp
sbb
js
jge
loop
stos
push
outsb
testl
dec
adc
adc
sarb
ficompl
jp
insl
sahf
test
pop
pop
lods
or
jecxz
jecxz
movsb
jg
jl
adc
js
in
dec
add
mov
lock
sti
mov
repz
arpl
fwait
scas
jmp
mov
insl
sbb
ljmp
mov
sbb
adc
jl
call
mov
test
and
popf
aam
jp
lods
out
dec
pushf
mov
sub
lea
rolb
clc
stc
mov
stos
mov
add
xchg
nop
imul
mov
jb
jnp
pop
push
pusha
sub
bound
inc
setge
mov
aas
imul
maxps
jecxz
repz
inc
ret
push
rcrl
fistps
filds
inc
xchg
mov
nop
sar
aad
xor
cmp
clc
test
jb
and
in
push
pop
ja
xlat
sbb
sub
bound
sbb
xchg
stc
icebp
mov
enter
dec
pop
jnp
scas
stos
cmp
fldl
pop
das
push
adc
and
out
and
jl
xchg
dec
cmp
xlat
cwtl
cmp
inc
sub
lock
dec
mov
outsb
xchg
adc
fiaddl
dec
cs
scas
lods
mov
push
or
inc
add
cmpsl
scas
out
test
rcr
in
les
xchg
pusha
jg
cmp
outsl
xchg
pushf
fnstsw
imul
pushf
scas
daa
ja
xchg
sbb
inc
sbb
and
mov
jmp
cmpsb
mov
or
and
gs
jns
fsubrl
sbb
fidivrl
mov
out
and
fwait
cmp
fstpl
push
imull
pop
jge
mov
outsl
jns
jmp
mov
aas
mov
dec
xchg
sbb
sbb
add
mov
and
movsb
js
push
mov
dec
jns
call
add
jecxz
ret
pmulhuw
inc
insl
adc
sbb
cmp
sub
xorb
pop
stos
fidivrs
fisubrl
subb
mov
pop
into
inc
jo
jb
pop
cmp
scas
inc
push
adc
popf
ljmp
mov
shll
stc
sarb
dec
bound
xor
gs
js
jl
orb
popa
adc
out
or
ja
fstl
dec
mov
jno
test
mulb
mov
test
fcoml
inc
fimull
movsl
push
cmp
cmp
add
and
leave
push
jo
mov
pushl
push
mov
pop
pop
and
lcall
sbb
sbb
arpl
inc
not
cs
mov
jmp
mov
leave
notb
outsl
je
fildll
xchg
cwtl
add
cltd
enter
bound
push
daa
lods
lods
sbb
cmpsl
clc
mov
out
jmp
mov
sub
jl
out
sbb
inc
pop
cmp
icebp
popf
pushf
pop
mov
push
and
mov
stc
andl
xchg
xchg
lock
mov
paddsb
call
loopne
in
outsb
out
adc
out
fcomps
aam
xchg
or
lret
int
pop
push
mov
push
int
negb
and
adc
ret
shll
fldcw
dec
sub
mov
adc
xchg
jecxz
sub
adc
ljmp
inc
fimull
repnz
cmp
push
push
pop
mov
pushf
and
lods
cmpsl
and
gs
es
.byte
.byte
je
sbb
xor
and
mov
cli
xor
popa
shlb
mov
out
daa
mov
stos
test
mov
sub
mov
or
and
adc
push
sbb
xchg
fldt
int
xchg
xchg
inc
sub
lea
or
loopne
mov
xchg
push
add
andl
mov
ds
adc
ja
icebp
cmp
cmpsl
test
arpl
cltd
jmp
sbb
or
scas
ja
sbb
into
outsl
mov
push
cmpsb
inc
movsl
loopne
insb
stc
mov
inc
fistpll
vcvtpd2psy
sbb
enter
xchg
loopne
dec
ficoms
rcr
jno
insl
jmp
jl
jge
cmp
repz
mov
outsb
outsb
cli
dec
hlt
jo
inc
and
imul
mov
lock
mov
inc
fstl
dec
data16
mov
jge
push
adc
mov
pop
aas
sbb
ret
test
scas
mov
fnsave
out
into
xor
pushl
add
divl
adc
je
pop
pushf
test
push
test
mov
aad
loopne
cmpsl
int
out
das
sub
mov
in
aaa
jns
arpl
mov
jmp
dec
insl
aaa
mov
adc
les
xor
addr16
pop
fcomps
xchg
popf
add
push
jb
sarl
mov
mov
fwait
fs
test
inc
mov
fcmovbe
ret
hlt
jno
jae
jmp
or
icebp
jno
xorl
sahf
mov
lahf
les
dec
cli
into
pusha
orb
js
cmovl
cmp
pop
and
inc
and
mov
mov
int
mov
lahf
push
mov
je
ficompl
movsb
cmp
inc
dec
jnp
pop
leave
cmp
jge
adc
ror
pop
mov
and
cmovno
frstor
cmpsb
sub
aad
fnstcw
cld
sbb
fbstp
inc
ror
sbb
fs
add
mov
sar
ja
push
mov
inc
jmp
xchg
jb
je
mov
xchg
ja
mov
pushf
fcoml
and
pushf
lret
inc
aaa
outsb
push
mov
sub
lea
cmp
cmp
in
sbb
clc
js
mov
dec
push
std
push
push
inc
lock
push
mov
push
test
inc
add
and
enter
mov
add
jl
or
addr16
inc
mov
fiadds
lret
lock
push
jnp
lcall
sarl
mov
xchg
mov
mov
inc
push
lret
stc
js
mov
mov
sbb
ds
mov
mov
add
mov
out
xor
pop
loope
jno
aas
cmp
dec
xor
ds
repz
shr
mov
mov
sti
adc
inc
mov
inc
xor
shll
push
popf
mov
xor
cmc
fstps
aam
hlt
pop
clc
roll
out
rolb
test
loope
xor
push
cwtd
cs
or
je
cmp
clc
push
dec
pusha
fcoms
ret
and
xor
es
jne
or
jo
push
test
and
mov
adc
into
je
stos
cli
add
mov
sub
lock
js
mov
pop
jge
inc
xchg
jmp
push
stos
mov
push
and
pop
out
push
cmp
push
les
mov
in
pop
insb
imul
or
sbb
fidivs
ljmp
ja
sub
loopne
add
xor
shlb
xchg
dec
leave
fists
mov
lea
cs
xchg
aad
jmp
mov
popl
inc
test
xor
insl
loopne
test
icebp
xlat
roll
test
dec
sarl
sub
pop
add
js
test
imul
push
addr16
out
and
or
xchg
sub
hlt
fsubs
xor
push
xchg
mov
xchg
xchg
push
pop
and
lahf
rorb
imul
aam
pop
add
xchg
fidivrs
ret
jno
std
mov
jo
fs
push
cld
sub
sub
rorl
stos
sub
mov
ljmp
adc
out
in
dec
sub
jle
icebp
lcall
push
pop
pusha
lds
push
arpl
outsb
popa
jns
pop
sbb
pusha
sbb
add
das
insb
lock
int3
ljmp
cmpsb
stos
ficoms
jmp
insb
jecxz
or
jnp
int
shl
pop
cmp
cld
notl
mov
xor
sbb
pop
stos
cmp
pop
ret
dec
lods
rcl
fmull
inc
les
icebp
icebp
xor
and
loopne
fistpl
test
cmpsb
ret
xor
gs
mov
add
push
shll
push
into
push
stc
pusha
ret
inc
or
mov
push
mov
cwtl
aaa
cwtl
test
lcall
jmp
in
jbe
aam
cmp
call
push
fwait
shlb
stc
xchg
jb
adc
cld
cltd
mov
mov
inc
call
pop
out
mov
mov
scas
ss
dec
or
jmp
adc
lahf
shr
mov
mov
mov
pop
xor
jl
dec
mov
lds
adc
add
push
cld
jge
mov
jmp
jae
mov
out
adc
and
push
cmp
jae
cmpsb
add
int3
mov
cltd
pusha
xchg
dec
lods
mov
sahf
xlat
daa
and
jge
popa
jmp
fs
ljmp
or
ja
inc
stos
test
fwait
shlb
sbb
jb
push
pop
xchg
dec
cmp
mov
push
outsb
push
and
stos
jl
movsl
mov
loopne
fcoms
pop
jl
mov
mov
add
sub
push
push
and
outsb
pop
pop
lcall
in
push
mov
ja
dec
dec
xor
xor
mov
dec
stc
dec
test
xchg
aam
xlat
pop
mov
test
cmp
push
mov
cmp
lret
ds
call
pop
sti
js
xor
out
add
mov
dec
jmp
cmc
cmpsb
jo
std
pop
inc
add
adc
mov
cmp
lods
mov
outsb
cmp
scas
push
xor
adc
jp
iret
les
mov
cmp
cmp
stos
fs
subl
push
cld
fistps
into
mov
adc
dec
dec
add
pusha
cmp
and
decl
jmp
pop
push
lods
outsl
stos
cmpsl
je
imul
and
aas
sbb
das
sbb
xor
sbb
js
cmp
cmc
dec
clc
pop
and
daa
or
out
jp
lods
pushl
add
popf
pop
nop
test
outsl
and
ljmp
loopne
lea
stos
adc
stc
push
lcall
jl
cmp
sbb
stos
mov
stos
inc
mov
dec
test
pop
rolb
pop
fldenv
and
dec
lcall
cmp
cmc
incb
loopne
cmpsl
push
dec
xchg
jge
cwtd
test
popf
and
aam
hlt
in
jg
clc
dec
xchg
lcall
stos
jle
adc
cmpl
xchg
mov
addl
jb
xorb
xchg
cld
push
scas
inc
arpl
mov
mov
and
sbb
mov
loop
int
sar
movsb
inc
jne
call
mov
fmuls
sarb
mov
fnstcw
adc
in
movsb
pop
lods
or
fidivrs
lcall
movsl
jecxz
arpl
outsb
or
sub
ljmp
cld
out
data16
xor
xchg
dec
int3
or
call
fisttps
cmp
bsf
leave
adc
mov
pop
inc
popf
mov
lret
sbb
ss
mov
xchg
or
pop
xchg
sub
add
mov
jae
push
and
and
sub
stc
ret
jg
xor
jmp
std
les
push
bound
in
loope
xchg
inc
jge
add
std
int
gs
jg
lea
sub
push
xchg
mov
ret
sbb
nop
inc
jp
dec
gs
jl
pop
aam
ret
add
or
das
pop
add
scas
xlat
xor
or
lahf
aas
mov
jns
xchg
insl
in
into
popa
add
adc
cli
xchg
push
mov
clc
mov
lods
xor
test
or
mov
push
mov
cmp
push
js
add
into
repz
out
mov
dec
ret
addl
add
les
mov
hlt
lret
fmul
add
cld
lds
jmp
sub
push
push
aas
pusha
cmp
mov
ret
dec
into
add
jle
adc
pop
outsb
xchg
xchg
add
faddl
dec
xchg
insl
sbb
jecxz
jo
out
mov
jmp
in
jae
sbb
rolb
sbb
mov
adc
or
scas
sub
sti
mov
mov
lods
add
popf
imul
aas
mov
xchg
jle
fisttpll
or
sbb
sbb
out
mov
fstpt
xor
or
and
sub
add
jae
fcoms
pop
stc
shrb
sub
cli
push
call
sbb
icebp
lods
loope
inc
mov
xor
dec
scas
inc
push
pushf
inc
xchg
clc
cmp
icebp
cli
push
push
xchg
mov
psllq
mov
jmp
fiaddl
add
mov
fiaddl
mov
andb
cmp
insb
dec
in
fs
jnp
rclb
orb
jno
into
call
ja
clc
sbb
icebp
xchg
push
out
ret
aad
push
addb
pop
jecxz
cmc
inc
fs
add
pop
add
fwait
xchg
fimull
outsb
das
fs
pop
jmp
inc
mov
pop
lock
mov
mov
out
jmp
jb
rcrb
or
inc
call
mov
lahf
inc
out
inc
mov
pop
jp
jl
aaa
lret
mov
xor
xor
cmp
mov
popf
mov
mov
divl
bound
xchg
data16
xchg
icebp
in
std
dec
sub
das
jnp
es
xchg
outsl
push
pop
es
pusha
arpl
outsl
enter
and
jp
pop
xchg
ret
pop
mov
add
notl
or
push
mov
cs
mov
cltd
xchg
mov
jmp
mov
leave
aam
lea
xchg
nop
sub
bound
push
subb
ja,pt
jp
fld
insb
ljmp
push
xchg
jnp
sbb
and
mov
test
push
in
out
xchg
add
outsl
sbb
movsl
loopne
in
mov
mov
xrelease
aam
je
sub
shrl
dec
push
clc
int3
sub
or
test
inc
popa
xor
shrl
pop
mov
sarb
or
sub
test
pop
das
test
outsb
push
sbb
mov
out
jae
push
xchg
xor
sbb
inc
xchg
inc
test
or
out
jmp
shlb
sub
lock
pop
mov
jp
xlat
int
xor
dec
push
jge
add
push
test
dec
push
jne
xchg
sub
lret
push
mov
mov
dec
imul
ret
test
mov
cli
push
cmpsb
mov
jle
and
pop
dec
mov
insb
mov
adc
lods
lea
loope
push
mov
jle
inc
dec
push
pop
nop
xor
nop
rcl
mov
fxch
popf
or
xor
sarl
pop
cmp
scas
dec
scas
add
jnp
xor
cld
xor
daa
mov
lods
cmpsl
adc
sbb
cmp
jnp
and
push
popf
cltd
jae
les
or
test
mov
out
xchg
addl
hlt
sbbb
mov
aad
xchg
add
insb
or
adc
cmp
insl
js
outsb
mov
push
roll
cmpsb
insl
sub
test
ret
fsubrl
jbe
inc
dec
daa
cmc
mov
test
ret
rolb
mov
inc
sbbb
dec
data16
lret
aam
pop
je
push
mov
pusha
or
pusha
pusha
stos
push
xchg
push
pop
rolb
push
jmp
jbe
in
dec
dec
lds
mov
jne
popf
add
and
data16
mov
ret
dec
jbe
aam
xlat
pop
sbb
sbb
addr16
repnz
aam
xor
test
jnp
push
roll
in
lcall
rcll
lock
inc
lods
or
cmp
or
mov
and
sti
or
js
mov
in
pop
je
popa
ljmp
mov
fcoms
scas
pop
xchg
inc
icebp
add
aam
push
jecxz
daa
lss
push
outsb
sbb
mov
lcall
test
cmp
leave
jae
jne
pop
loopne
push
jno
pop
out
mov
aad
fcompl
push
sub
or
imul
loop
popa
pushl
ffree
sub
push
push
stc
popf
cli
sbb
lods
jmp
fcmovb
jnp
sbb
push
xchg
cwtl
ljmp
je
push
sub
fs
insl
mov
and
dec
adc
dec
sbb
dec
out
jno
cmp
fbld
shlb
fdivl
mov
cmovg
dec
or
jbe
xchg
push
sahf
andb
xchg
movsb
popf
jne
sbb
subb
and
cli
lret
xlat
mov
xchg
mov
inc
dec
xlat
xlat
aad
mov
xchg
xlat
vaddss
outsl
cwtl
mov
push
inc
shlb
push
or
fs
scas
imul
inc
push
outsl
hlt
xchg
sbbl
std
out
sbb
lods
jae
sar
frstor
int
push
add
mov
icebp
jle
pushf
in
cmc
call
mov
loope
sbb
xchg
std
mov
in
insl
sbb
cmp
jg
xchg
mov
loop
adc
test
adc
imul
lret
in
push
fisttps
aas
push
pusha
mov
sbb
insb
sub
rclb
cmp
mov
inc
push
mov
xor
cmpsb
xchg
mov
out
stos
repz
cmp
out
add
cltd
sub
lret
lods
adc
or
js
xchg
adc
sub
mov
mov
stos
mov
int3
push
mov
or
pop
fisubl
daa
pop
xchg
inc
loopne
scas
out
lahf
bound
inc
pop
hlt
fidivl
jle
lock
inc
xor
imul
push
fcom
sbb
inc
inc
push
xor
sub
xor
add
inc
in
push
dec
xchg
sar
mov
xor
ljmp
negl
mov
cmp
sub
std
inc
sti
pop
popa
clc
mov
cmp
mov
cmp
iret
mov
mov
cmp
push
in
and
stos
je
mov
mov
pushw
repz
mov
sbb
xchg
cld
and
das
dec
mov
sbb
shr
sub
jmp
ss
sub
sbb
inc
push
jecxz
das
adc
imul
pop
lahf
push
jmp
xchg
cmp
dec
es
push
pop
push
lea
imul
jbe
dec
imul
cmp
enter
mov
cmpb
rolb
icebp
test
xchg
cmpsb
js
aad
ret
mov
inc
sub
cmc
call
movsb
cltd
inc
xor
stos
dec
je
xchg
jnp
xor
and
jb
jae
or
pushaw
jo
inc
shrl
inc
pop
aam
out
jge
dec
mov
adc
arpl
xor
mov
dec
and
movsl
mov
aam
dec
cmpsl
or
int
imul
pop
mov
lahf
or
mov
inc
adc
sbb
mov
mov
and
add
iret
xor
pusha
icebp
pushf
or
push
fmull
loop
xchg
add
mov
in
test
insl
mov
or
cmp
adc
push
cmp
mov
inc
inc
dec
pop
pcmpgtw
cli
dec
leave
cmpb
imul
add
sbb
mov
push
in
pop
je
fcmovu
imul
loope
test
les
lds
sbb
or
sarl
mov
les
inc
inc
sub
xlat
mov
add
add
pop
dec
pop
cld
xchg
insl
test
in
es
jmp
call
adc
iret
je
out
mov
jns
into
mov
lcall
lock
dec
mov
repz
ljmp
scas
push
dec
stos
jns
cbtw
into
add
pop
xor
enter
and
mov
and
jo
cmp
cmpsl
movsl
outsb
dec
inc
aaa
add
sub
mov
jae
andb
sbb
lret
or
stc
iret
shrl
jne
jecxz
add
jg
mov
stos
movsl
mov
jmp
das
aad
mov
mov
shlb
addb
mov
lds
xlat
ficoms
lret
or
lods
in
ficoml
add
aas
inc
cmc
cmpsb
push
sub
push
push
ficoml
push
test
pop
sub
xor
fwait
int
push
mov
mov
jl
mov
cmp
mov
adc
mov
test
cld
out
xchg
jge
cmp
pop
stc
inc
call
dec
arpl
adc
cwtl
cwtl
dec
push
sbb
fstp
adc
mov
mov
mov
jae
or
cmp
outsl
aas
cmpsl
ret
adc
push
push
cs
mov
popa
test
mov
inc
stc
xor
cs
sub
mov
push
xchg
fs
movsb
aas
decl
xchg
or
sbb
shlb
dec
push
mov
xorl
jns
je
leave
je
out
lea
mov
mov
inc
ss
into
lods
adcb
bound
push
popf
data16
lods
scas
push
repnz
jns
pushf
xor
add
push
loopne
lcall
push
mov
lcall
inc
push
into
or
xor
imul
shrl
in
ljmp
push
mov
fdivs
cmpsb
xchg
out
push
testl
lret
movb
sub
xor
pop
mov
ret
movsl
inc
xor
mov
pop
pop
xchg
pop
pop
jne
fcmovbe
shr
jae
pop
jg
into
pop
mov
sub
xchg
ret
sbb
sbb
ror
imul
test
mov
data16
imul
jge
mov
mov
test
inc
insl
arpl
cmp
adc
mov
cmp
dec
or
add
stos
adc
aad
pop
es
ret
mov
mov
sub
or
ror
lahf
roll
nop
xor
jge
arpl
add
int
imul
test
sub
mov
mov
cmp
mov
stos
adc
dec
in
and
into
sub
lods
and
add
mov
cs
or
cmp
pop
xor
out
pop
insl
mov
fnstcw
mov
push
cmp
mov
outsb
or
add
movsl
pop
dec
and
and
icebp
mov
iret
jnp
fldcw
jae,pt
mov
push
rcll
xor
mov
movsl
loop
cmpsb
lock
mov
inc
xor
fistpll
das
pop
xchg
push
xor
xchg
rol
pop
xchg
fstpt
lds
and
fstp
je
cmc
out
adc
pusha
icebp
not
sub
insb
iret
inc
aaa
sub
mov
pop
push
pmaddwd
jecxz
sahf
push
inc
jnp
sbb
mov
rolb
push
xchg
ds
inc
adc
add
lds
cmpsl
xorl
xor
inc
and
outsl
push
gs
sub
sahf
sbb
cmp
cwtl
cmp
mov
stc
out
sahf
in
inc
add
mov
dec
leave
jmp
int
test
pushf
adc
and
testl
lock
dec
in
or
mov
xor
ret
pop
cmpsb
aad
enter
push
and
iret
rorb
adc
lcall
pcmpgtd
imull
cld
push
mov
mov
jmp
sub
inc
push
adc
jb
out
cmc
dec
clc
dec
xchg
cs
es
add
mov
ss
enter
xor
mov
nop
test
or
lahf
and
pop
out
adc
fcompl
push
ret
movsl
cmp
and
testb
xor
pop
fisttpl
push
jne
fwait
mov
fcoml
lahf
jecxz
fdivs
jp
xchg
ja
push
loop
popf
mov
mov
cmp
jns
mov
hlt
add
cld
xor
fbld
pop
push
pop
xchg
cmp
push
sub
leave
mov
lods
xchg
int
leave
cmp
push
cmp
xor
xchg
mov
repz
add
js
testb
int3
icebp
iret
rcr
xor
enter
hlt
add
jbe
jne
jns
cmp
into
xlat
imul
test
popa
push
inc
push
cmpsl
sub
mov
data16
xchg
nop
xor
xor
or
cmp
divb
aad
jno
aas
stos
data16
sbb
outsl
cmp
mov
lret
cmc
jg
js
and
shlb
push
mov
add
and
pop
shll
mov
mov
lock
jne
pop
push
add
ret
cmp
adc
stos
int3
cld
aaa
sub
mov
js
leave
add
cwtl
mov
popf
cmpsb
mov
lds
adc
ss
xor
mov
cld
shlb
pop
lret
cmpb
mov
or
jmpw
sbb
ja,pt
push
lahf
xchg
or
push
bound
or
mov
sbb
lock
sub
hlt
adc
js
daa
out
add
loope
mov
daa
pop
loope
aas
test
loope
loop
insb
xlat
adc
inc
das
mov
movsl
sbb
mov
inc
mov
daa
stos
inc
mov
jo
push
push
mov
in
push
insl
mov
xchg
in
dec
and
ds
data16
aaa
or
pop
out
and
or
pop
dec
pop
in
sub
adc
lahf
aaa
mov
mov
xchg
dec
fwait
xchg
fldenv
jge
or
jp
imul
les
push
nop
jle
movsl
jge
ja
xor
sbb
sub
insl
in
and
gs
pop
int
push
fisubs
push
fidivs
test
inc
xchg
fs
aam
sub
pop
call
sbb
lds
insb
push
adc
icebp
loope
bound
or
xchg
stc
sbb
pop
cmp
test
ljmp
sbb
fimuls
je
repz
and
cmp
lods
jns
or
and
mov
mov
out
jp
cwtl
popf
fsubr
xchg
lret
sar
mov
out
mov
bnd
in
inc
mov
mov
xchg
dec
jno
pop
mov
mov
pop
daa
adc
je
pushf
sbb
xchg
sbb
xor
mov
and
ss
nop
and
out
mov
and
sbb
push
mov
inc
jecxz
cmp
test
loope
daa
xor
mulb
xchg
or
push
mov
shl
movsl
sub
and
jge
int
ret
xor
dec
fbld
stos
or
mov
or
shl
lds
cld
ljmp
xlat
shll
push
dec
leave
xor
repnz
cltd
loopne
xchg
mov
push
test
push
cs
sub
out
sub
stos
adc
sbb
sub
scas
lds
es
push
in
out
xchg
fmul
dec
cmp
cmc
lock
mov
fwait
dec
enter
inc
movsb
mov
push
fs
inc
inc
lods
mov
dec
xchg
add
mov
push
pop
add
sub
fdivs
enter
cmp
je
sbb
je
jns
ror
loop
loop
jg
xchg
je,pn
pop
popa
insl
or
mov
cs
aas
lcall
or
xchg
sub
clc
xchg
add
addr16
mov
cmp
xor
push
cmpsl
cmpb
repz
insb
and
xorb
mov
sub
sbb
stos
pop
add
ret
in
xor
mov
xor
mov
out
in
or
sbb
aam
aas
fildll
or
cmp
lea
mov
mov
jge
stos
popf
leave
stc
fcompl
and
in
xor
xor
std
ja
xor
mov
sub
dec
jecxz
jge
and
mov
std
loopne
cld
sbb
imul
and
sti
sti
pop
popf
pop
mov
mov
faddl
clc
push
insb
rclb
pop
dec
jg
imul
cmpsl
pusha
adc
mov
add
mov
in
enter
cmpsb
add
mov
adc
int
mov
int
lea
cmpsb
test
adc
lret
ret
ret
lahf
loop
cmp
stos
fbstp
xlat
aad
sbb
mov
cmp
stc
mov
in
ret
test
sub
das
mov
push
fs
dec
fwait
xor
aas
cs
cmp
dec
dec
mov
pop
lahf
pop
rcll
jno
dec
cmc
push
cmpsl
adc
inc
ss
shl
gs
loop
push
int3
xchg
addr16
mov
inc
pop
out
aas
lahf
xlat
hlt
je
or
xchg
loopne
push
mov
scas
nop
pop
add
or
push
js
and
inc
syscall
xchg
mov
jmp
aas
adc
push
testl
xor
gs
adc
dec
sbb
cmp
sub
repz
mov
nop
enter
dec
or
pop
pop
ja
or
and
sub
sub
add
mov
jl
pushf
jp
push
mov
cmc
mov
rorb
or
in
xchg
mov
jae
in
popf
mov
sub
sub
fiaddl
fdivs
clc
loop
scas
pop
int3
sub
inc
mov
out
or
shrb
and
daa
fisttpl
bound
idivl
cmp
mov
adc
mov
cmp
xor
cmp
in
lods
and
mov
add
fs
pop
mov
fldl
xchg
shll
bound
xchg
outsl
insb
jb
je
les
dec
or
xchg
mov
or
add
inc
or
mov
outsl
xlat
mov
jge
hlt
push
in
add
jne
movsl
lea
add
mov
jl
push
mov
test
adc
rcrl
ljmp
mov
insb
stos
mov
cld
mov
jbe
clc
and
test
ret
push
ror
or
mov
xor
cwtl
cli
iret
cmp
stos
xor
xchg
dec
and
les
out
xor
mov
sbb
mov
mov
sub
or
shr
ret
test
dec
test
jae
ss
das
or
mov
jne
cli
in
jne
je
mov
stos
ret
shll
cmp
sub
fcmovne
icebp
bound
adc
movsb
sahf
mov
movsb
push
call
rclb
mov
jbe
add
call
pop
jnp
daa
sbb
inc
cmpsl
and
lret
insb
rcll
adc
repnz
jo
or
add
mov
xchg
mov
jmp
sbb
and
les
mov
lds
ret
jge
add
sahf
arpl
aaa
call
scas
sbb
in
or
jmp
inc
ljmp
ret
or
testl
mov
add
xchg
mov
pop
xchg
cmpsl
xchg
hlt
dec
iret
mov
and
pop
push
pop
std
aaa
jae
das
incb
je
orb
jecxz
and
daa
shll
insl
ret
jl
call
leave
push
in
add
and
inc
pop
outsl
cmp
mov
and
jecxz
mov
inc
xchg
pop
cld
jbe
pushl
and
clc
sub
adc
adc
add
rclb
fwait
iret
ss
pop
xchg
bound
push
loopne
jae
outsb
sub
or
call
inc
stos
push
mov
popa
loope
cltd
xchg
dec
pop
daa
inc
dec
jnp
shrb
cwtl
mov
adc
cmp
shl
ret
inc
add
lods
fcomps
xor
out
lds
mov
lea
shlb
pop
sbb
mov
mov
aas
xor
push
shr
ret
arpl
roll
ljmp
inc
push
popf
int3
cld
jg
outsl
inc
mov
cli
push
addr16
mov
xchg
sub
rclb
cmp
xor
pop
xor
fisttpll
lcall
pop
out
fmull
ds
or
scas
sbb
and
cltd
lret
lret
mov
mov
pxor
add
pop
scas
dec
into
sub
sti
push
mov
out
pop
lods
aam
pop
aad
cmpsl
jns
push
xor
outsb
sahf
cld
insb
movsb
je
shl
sbb
xor
adc
mov
or
sbb
dec
mov
call
neg
push
incb
movsb
cmpsl
mov
sbbb
jecxz
psrad
and
clc
jl
mov
xor
rorb
push
push
lahf
xchg
cmpsl
out
sbb
pop
les
gs
ret
cmp
or
movsb
test
mov
adc
lret
andb
pop
xchg
jl
mov
adc
int3
lcall
inc
pop
bnd
and
xchg
xor
out
and
cmpb
lcall
pop
repz
jns
mov
jle
adc
loopne
sbb
pop
das
xchg
jg
or
mov
mov
push
and
inc
adc
add
cmp
loope
xlat
push
dec
stc
xor
inc
sub
es
insb
in
mov
adc
ss
mov
xchg
lcall
cmp
in
test
inc
push
loopne
repz
add
add
dec
les
adc
xchg
push
dec
sbb
mov
iret
enter
dec
shlb
ja
inc
bound
xlat
xor
dec
idivb
shlb
or
pop
outsb
fwait
addb
or
scas
jno
and
and
or
jg
mov
mov
outsb
xlat
icebp
dec
loopne
outsb
repz
lahf
sub
mov
loop
mov
fsubrl
mov
dec
in
fs
xor
mov
loopne
cmpsb
or
mov
mov
dec
jmp
loop
adc
loope
cmp
jl
mov
dec
negb
sbb
movsl
popa
jb
or
and
aas
arpl
loop
cmp
fstp
mov
dec
les
dec
test
cmpsb
fdivl
sub
mov
and
jo
adc
lods
cmp
jno
mov
scas
pop
push
cmc
push
pusha
in
push
pop
je
popa
cld
pop
mov
or
pop
and
leave
dec
push
leave
push
adc
pop
pushf
add
jle
pop
aas
add
out
push
mov
out
int3
popf
sub
stos
cmp
sub
pop
jge
push
sbb
cmp
loopne
outsl
ffreep
fnstcw
stc
cmpsb
pop
and
and
inc
sub
inc
jne
lret
mov
cmp
imul
add
xor
lahf
sub
enter
adc
cmpsb
jmp
cs
orl
pop
inc
xor
or
push
fisttps
icebp
jmp
and
mov
stos
and
leave
out
clc
push
jne
mov
popf
sbb
sbb
daa
test
and
cs
xor
cmpl
ljmp
sub
gs
aas
clc
jle
mov
aaa
mov
insl
insb
jo
in
mov
and
xor
or
ret
jmp
das
push
mov
mov
test
lret
xor
jo
lahf
rcrb
or
push
imull
push
xor
add
scas
mov
or
pop
stc
push
dec
mov
inc
xor
xchg
scas
in
mov
iret
add
and
lcall
inc
loope
ret
mov
sub
popa
fdivrp
and
and
test
nop
cltd
mov
rolb
xchg
movsb
dec
int
leave
mov
and
cld
ja
test
xchg
das
dec
push
addb
jo
sub
and
mov
hlt
shlb
or
in
loop
jae
in
data16
lret
mov
jmp
mov
movl
das
cmp
pop
sub
insb
dec
sub
aam
inc
test
adc
popl
adc
sbb
clc
push
rcll
sub
sbb
imulb
or
cmp
sub
int
mov
sbbl
hlt
aas
mov
scas
and
in
call
jge
sbb
nop
pushf
mov
inc
adc
xchg
adc
test
push
inc
test
adc
adc
aaa
out
test
lock
cmp
xchg
scas
int3
icebp
in
mov
mov
fisttps
lock
fnstcw
test
repnz
jle
mov
stos
inc
data16
jnp
ljmp
int
mov
pop
pop
xor
fistpll
mov
push
test
dec
iret
das
mov
xchg
cmp
cmp
gs
xchg
subb
in
les
or
jno
cmpsb
jae
pop
adc
ficoms
fsubl
stos
fimuls
fucom
push
gs
mov
in
or
ror
push
cmp
loop
divl
ret
add
add
pop
xor
dec
xchg
pop
pop
xchg
decb
adc
push
jo
or
push
or
sbbl
jge
dec
int3
push
inc
or
sahf
jg
or
es
mov
xor
and
pop
testb
mull
or
iret
in
rcrb
or
stos
in
fiadds
xor
push
popf
rorl
inc
ds
out
xchg
xor
or
mov
mov
pop
cmp
push
ljmp
pop
jmp
xor
mov
add
add
add
andb
xchg
xchg
mov
insb
test
inc
ja
leave
add
jmp
mov
imul
scas
lret
jbe
xchg
push
insl
xlat
inc
imul
jb
push
lahf
pop
mov
mov
dec
push
cmp
pusha
mov
xor
dec
test
pop
xorl
out
popf
pop
test
cmp
cmp
in
jp
xor
leave
ret
xchg
jle
iret
adc
cld
jne
in
mov
nop
mov
pop
add
adc
pop
cli
push
inc
jle
ljmp
push
jg
test
sub
mov
mov
sub
push
shrl
and
loopne
lods
enter
xchg
int3
hlt
sub
adc
add
mov
xor
mov
fildll
sub
inc
std
sbb
mov
fmull
loope
jb
shlb
aaa
mov
daa
xchg
popf
insl
xor
ror
push
push
rorl
cmpb
jns
add
mov
fldt
bound
xchg
jge
pop
mov
xchg
cmpsl
pusha
cmp
jp
adc
hlt
mov
jmp
mov
insl
xchg
mov
add
call
pop
adc
loop
mov
or
sub
mov
lcall
mov
adc
cld
inc
cmp
loop
mov
shr
mov
cmp
imul
aad
gs
push
fisttps
mov
out
shlb
icebp
cmp
jp
and
push
pop
subl
mov
imul
hlt
shlb
inc
jb
fisubrl
pushf
out
pop
or
roll
push
popa
mov
pop
adc
pop
outsl
aas
jp
adc
sbb
addr16
push
negl
outsb
outsl
imul
mov
dec
adcb
or
data16
jp
sbbl
add
and
call
push
jb
or
dec
xor
xchg
pop
cltd
sbb
mov
iret
inc
loop
xchg
dec
scas
popl
push
xor
bound
lahf
mov
in
and
das
jbe
jecxz
sub
xor
je
outsl
xlat
test
shld
ret
test
unpcklps
sub
jmp
hlt
ljmp
jns
sub
iret
cmp
and
pop
ljmp
test
popa
shlb
bound
es
push
scas
rcl
std
mov
and
test
flds
ss
sub
arpl
cmp
bound
add
stos
fidivs
inc
test
xchg
adc
add
jle
scas
jge
inc
push
inc
or
jb
mov
jns
lods
pop
lea
cmc
iret
leave
inc
xor
imul
add
into
mov
push
nop
mov
jno
sub
mov
jge
mov
xchg
movsl
fstl
mov
and
and
negl
jne
push
loopne
mov
cwtl
sbb
fs
jno
and
mov
cmp
jmp
dec
out
xor
pusha
jle
xchg
stc
mov
jns
call
pusha
int3
pop
xorl
sub
push
ret
ds
repnz
out
out
repz
push
lock
ds
fiaddl
mov
lods
mov
xor
in
xchg
fists
jle
lods
pop
ja
scas
and
xchg
adc
mov
arpl
or
lods
jmp
mov
or
sahf
mov
movsb
xchg
pop
scas
add
dec
mov
mov
dec
mov
mov
pushf
stc
inc
add
xchg
cli
and
iret
cmp
repz
cmpsb
pop
dec
and
adc
or
ljmp
fidivs
test
je
cmpsl
fidivs
mov
gs
sbb
mov
or
mov
sahf
mov
in
cmp
xor
mov
mov
outsl
jge
jns
sbb
fs
insl
cltd
insb
fldl
cmp
fcmovnu
or
fildll
mov
and
inc
jmp
pop
inc
fadd
pop
pop
lret
outsb
stos
xor
xchg
loopne
add
rolb
pusha
pop
jp
outsb
call
xor
pop
pop
lods
imul
xor
bound
pop
push
sub
jecxz
les
mov
push
jp
decb
out
outsb
add
mov
ljmp
pushf
or
mov
insl
mov
mov
out
dec
mov
pop
xor
test
push
push
sbb
push
push
sbb
lods
rep
pop
data16
sarb
lret
sbb
das
sahf
jno
pushf
decb
push
pop
mov
mov
push
push
and
fldcw
popa
push
push
add
pop
test
jbe
dec
adc
in
or
addl
clc
adc
mov
rolb
pop
xor
xlat
push
int
mov
lea
test
loope
aam
jecxz
push
imul
xchg
idiv
dec
stos
jg
and
in
and
mov
dec
aad
rclb
filds
mov
aas
ljmp
loop
dec
mov
mov
ret
pop
mov
push
in
out
outsb
mov
lea
jl
cmc
push
adc
iret
cld
dec
mov
dec
loope
add
femms
xor
das
pop
es
into
int3
aam
repz
movsl
mov
fiadds
jo
jmp
stos
xor
pop
les
aam
clc
cmovge
xchg
jmp
cmpsl
pusha
imulb
add
mov
pop
movsb
mov
fisttps
and
mov
test
dec
aad
ljmp
mov
sbb
sub
decb
push
jnp
hlt
sub
inc
mov
js
lcall
daa
loop
pop
mov
insl
sahf
pop
daa
xchg
jb
call
aad
pop
insb
fsubrp
test
in
sbb
andb
mulb
push
leave
sbb
mov
mov
mov
add
jg
stos
or
adc
and
or
and
mov
adc
shrl
gs
mov
in
adc
jb
pop
sub
inc
shll
test
insl
cmc
dec
xor
daa
pop
xchg
jl
daa
push
dec
orl
cmpsb
call
dec
jnp
lds
dec
ljmp
xchg
adc
in
jno
mov
in
pop
jae
aaa
lahf
mov
adc
sbb
mov
or
jb
imul
icebp
mov
and
and
in
jge
push
jo
pop
cmpsl
jo
ds
adc
cmp
and
adc
sub
imul
scas
out
adc
es
xlat
mov
jno
rcl
lret
inc
out
adc
je
dec
cmp
cmp
in
add
fcomi
sbb
rcrb
fwait
adc
and
ds
stos
aam
int3
xchg
pop
pop
loop
imull
into
call
add
int3
out
int3
popa
xchg
sub
lds
jle
jg
bound
and
int
xchg
and
fstl
mov
shll
pop
mov
mov
jmp
pop
movsb
push
add
cmp
lods
scas
dec
sbbb
sub
add
pop
pop
shrl
or
push
xchg
sub
enter
pop
cld
fsubrl
fcoms
dec
push
sbb
movsb
mov
jle
mov
add
lods
and
mov
fdivrl
cmp
push
xchg
xchg
sbb
mov
lcall
push
add
divb
lcall
push
cli
out
push
inc
lret
fsts
add
cmp
dec
xchg
mov
xchg
enter
std
leave
pop
stos
lea
sbb
or
negl
lods
out
jp
fmull
mov
test
lret
test
jg
dec
mov
and
lock
pop
ror
in
xchg
jge
sbb
notl
cwtl
jge
cmpsl
shlb
add
sub
pop
sub
aam
mov
lods
cmp
popa
lcall
popf
lret
sbb
adc
inc
sbb
shll
dec
mov
cmpsb
xchg
mov
in
adc
inc
mov
xchg
mov
cmpsb
add
sar
jne,pn
pusha
adc
decb
mov
pop
push
out
mov
pop
cmp
sbb
mov
mov
lret
std
cmp
call
lds
aas
popa
dec
in
xchg
int
push
inc
arpl
sbbl
sbb
lods
pop
xchg
popa
sbbl
add
jae
xchg
cwtl
bound
sub
lcall
or
aam
out
stos
jmp
lret
inc
mov
add
add
dec
add
xlat
xchg
sbb
cmp
push
pushf
aad
sub
dec
popa
cmp
push
add
push
mov
outsl
or
fsub
sub
jg
mov
mov
inc
orb
pop
ds
test
and
inc
dec
pop
ds
nop
push
fs
sbbb
jl
lock
adc
mov
sbb
dec
rorb
xchg
inc
dec
mov
sbb
cmpsl
push
push
loop
inc
xlat
or
xchg
dec
add
xchg
bound
mov
sbb
mov
fisubrl
mov
fs
or
fprem1
ljmp
or
jae
sub
cmp
fcmovnb
into
sub
mov
and
cmpsb
int3
dec
dec
loopne
lahf
movaps
pop
sub
cmp
fstpt
cmp
adcb
mov
jmp
cmp
lock
mov
push
lahf
cmpsb
int3
gs
pop
rolb
fs
pop
loopne
inc
lds
lcall
jg
rorl
push
push
insl
sbb
jp
pop
ret
icebp
mov
mov
xor
push
sbb
add
ret
loopne
movsl
dec
pop
cld
or
imul
push
dec
int
push
add
into
stos
jns
mov
mov
pop
outsb
lahf
ja
push
push
dec
xchg
test
add
daa
add
pop
addb
mov
movsb
mov
stos
add
fisttpll
addr16
jnp
mov
adc
loope
sub
xchg
sub
adc
mov
sbb
out
mov
lahf
jecxz
fdivs
in
loope
pusha
pop
ja
in
inc
lock
xchg
xchg
mov
xchg
mov
ds
jecxz
cwtl
int
sti
add
stc
or
sbb
cmp
sti
cli
fsubr
leave
js
arpl
data16
and
mov
and
mov
push
inc
xor
xchg
sbb
adc
add
cs
loop
inc
out
out
mov
mov
loope
mov
jbe
in
das
test
xlat
inc
lds
adc
repz
sub
popa
add
add
pop
push
lea
mov
pop
cwtl
fdivs
ds
pop
mov
sub
stos
test
xchg
xor
push
imul
pop
ja
cwtl
imulb
sub
jecxz
mov
pop
cmc
sbb
dec
lret
sbb
insl
pop
fwait
xchg
test
jae
xchg
sub
iret
add
sub
aam
test
sbb
xor
push
push
xchg
dec
fs
mov
aad
js
int
sub
push
mov
pushf
ss
and
jno
dec
inc
rolb
dec
adc
push
or
adc
jmp
std
int3
out
push
test
shlb
sub
jmp
cmp
outsb
cmp
mov
sub
dec
sbb
jns
dec
roll
sbb
ds
lods
mov
sarl
push
push
xchg
cmp
aaa
push
pop
xor
jns,pt
xorl
cmpb
test
inc
lds
subb
lret
mov
push
add
xor
mov
add
aam
xchg
inc
dec
sbb
sub
js
out
ljmp
insb
xchg
ds
out
sbb
leave
out
test
mov
cwtl
dec
mov
push
cmc
loope
xchg
and
adc
push
test
or
adc
add
and
jo
es
mov
xorb
push
xchg
lods
fimull
cmc
adc
ja
add
roll
enter
add
fistl
loop
xlat
adc
mov
rclb
jg
jge
dec
lea
dec
cltd
mov
jnp
xchg
cmp
jns
mov
cltd
mov
cmpsb
bound
jbe
and
mov
sbb
mov
inc
jbe
fnsave
mov
mov
push
mov
bound
into
bound
sub
xchg
shrb
mov
mov
pop
sti
adc
rolb
cmp
ja
or
cltd
aam
pop
loope
pop
cmp
imul
mov
aaa
sbbb
sbb
mov
ret
sti
jb
ss
add
je
cmpsb
and
lods
mov
cmp
and
mov
js
cmp
push
mov
ret
popf
insl
push
jo
jno
popf
rclb
scas
jl
test
ret
imul
mov
pop
dec
sbb
out
dec
shrb
or
lods
jae
push
xchg
in
in
fcmovbe
lods
test
mov
lods
ss
jne
enter
mov
scas
add
test
mov
int
lods
xchg
clc
subb
lcall
jle
pop
pop
out
mov
out
inc
sub
pop
hlt
xchg
andb
xor
inc
jmp
pop
inc
push
pusha
pop
push
or
push
and
popa
jp
push
mov
cmp
sub
nop
xor
jno
das
loopne
jecxz
jns,pn
jb
out
in
pop
andb
lea
aas
and
xchg
adc
dec
sti
mov
andb
inc
mov
xor
mov
jno
xchg
mov
imulb
test
idiv
mov
jle
ds
insb
adc
ret
mov
ret
or
xor
sbb
cmp
xor
or
adc
push
push
and
or
in
lret
outsl
ficoml
enter
out
pop
add
cmp
rorl
cmp
pop
or
and
es
popf
ds
adc
js
mov
dec
xchg
in
dec
scas
xchg
push
sub
dec
fucomi
in
push
jo
shll
or
call
mov
jo
faddl
xor
shrl
ja
push
jnp
and
jbe,pn
add
fstpl
fcoml
pop
cld
dec
repnz
adc
ret
dec
aam
ror
jg
adc
repnz
pusha
push
pop
inc
sbb
add
out
cmc
sbb
add
test
int3
fstps
out
cmp
push
pop
shl
and
imul
andps
enter
dec
clc
das
mov
rcr
cmc
fisttpl
out
cmp
test
iret
divl
loopne
mov
jne
fwait
pop
dec
or
inc
jbe
les
mov
ja
pop
dec
mov
inc
std
in
lods
repz
bound
mov
cmp
lcall
pop
outsb
mov
and
jnp
mov
and
jle
add
xchg
cmp
push
data16
dec
adc
jne
push
mov
xor
dec
xor
loop
cmp
lret
outsb
xor
sarb
push
mov
in
mov
pop
xor
or
add
mov
imul
aaa
dec
push
xor
out
and
pop
lahf
mov
push
sbb
jmp
daa
mov
pop
xchg
xlat
sbb
inc
dec
int3
xchg
pop
lcall
jno
sbb
sbb
cmp
jns
clc
fstpl
and
popf
pop
mov
pop
leave
sub
dec
jle
pop
push
push
dec
lcall
clc
es
pop
data16
mov
hlt
stc
cmp
xchg
gs
or
push
pop
fldl
pushf
push
arpl
sarb
dec
mov
sbb
mov
ret
mov
stc
notl
insb
push
sbb
xchg
dec
mov
mov
push
loope
into
push
int
fwait
sbb
xor
and
cli
int3
jno
icebp
repnz
mov
pusha
stc
ss
cltd
dec
pop
push
jae
jle
xchg
inc
fcoms
mov
cld
shl
inc
or
xchg
push
push
mov
mov
scas
sub
cmc
inc
or
jge
mov
sbb
imul
cmc
jle
sarl
nop
or
dec
sbb
insb
sub
clc
mov
jg
mov
subl
jecxz
and
clc
and
fisubl
cmpsl
inc
add
xchg
cmp
testl
hlt
lcall
jle
jmp
gs
loop
bound
dec
push
subb
fisubs
not
xchg
mov
mov
out
adc
sbb
jmp
test
push
cltd
frstor
inc
inc
std
dec
jg
enter
and
es
pop
pop
xchg
adc
mov
or
cwtl
push
fcmovbe
xchg
add
dec
sahf
das
pop
and
push
lret
lahf
icebp
adc
jb
sbb
adc
jp
or
rolb
mov
lods
adc
test
mov
pop
push
in
mov
test
mov
int
mov
sub
push
repnz
mov
aas
and
sar
ljmp
shrb
outsb
iret
xchg
inc
dec
es
out
inc
adc
lret
xchg
int
mov
cmp
jns
mov
mov
test
insl
xchg
idivl
cmpsb
movsl
in
cmpsl
ja
push
adc
loop
adc
inc
cld
pop
idivb
mov
test
xchg
sahf
cwtl
in
ja
mov
xchg
and
adc
mov
imul
inc
mov
jecxz
scas
push
xchg
and
fldcw
or
jg
cmpsl
dec
daa
cwtl
push
jge
fstl
frstpm(287
and
mov
cmc
fldcw
ljmp
addr16
xlat
sbb
aam
popf
outsl
and
sbb
lock
popf
jno
mov
jae
cmp
rcrb
sbb
fucom
dec
ret
clc
lea
lret
jb
pop
or
outsb
pop
mov
aad
and
xlat
test
mov
nop
clc
clc
cmc
idivb
rcl
xchg
adc
mov
sub
data16
andb
jecxz
ret
aam
or
jmp
add
and
sbbl
dec
pop
and
mov
pop
mov
mov
pop
aad
fldcw
sub
and
mov
jmp
mov
mov
js
cltd
cmp
push
std
movsl
jge
addr16
mov
pop
out
movsb
stc
repnz
push
bound
scas
jo
loop
popf
adc
xchg
mov
cld
or
push
push
pop
insb
push
cmp
jmp
iret
dec
rorb
icebp
js
repnz
xchg
je
xchg
sub
stos
lods
sub
test
fldt
sbb
sub
fsubl
loop
xchg
mov
mov
mov
cmp
cli
pop
sub
loope
mov
push
out
in
push
call
incb
dec
add
mov
xor
xchg
sub
xchg
xor
xchg
aad
pushf
into
xchg
inc
sbb
cmpl
mov
data16
xchg
les
iret
scas
loop
xchg
mov
popf
es
inc
xlat
xchg
push
push
fisttpll
int
lock
rolb
add
add
leave
cli
sub
adc
cmp
test
push
daa
adc
clc
mov
data16
dec
inc
shlb
rcr
test
jo
pop
dec
push
iret
mov
in
loope
fbld
mov
xchg
dec
xchg
pop
test
cmp
pusha
cvtps2pd
add
bound
out
dec
or
rolb
or
pop
sub
int
mov
fildll
insl
xchg
mov
push
bound
ret
mov
dec
cmpsb
je
mov
in
jno
fmull
test
jae
imul
pop
mov
aam
aad
lahf
mov
test
cmpsl
loope
arpl
sahf
lcall
jecxz
stos
jne
addr16
loop
loope
lds
and
leave
cltd
jne
jb
dec
add
lahf
jmp
lret
aam
push
pop
out
mov
mov
or
fistl
pop
mov
inc
sbb
out
sub
pop
xchg
dec
loope
or
mov
adc
shll
sbb
inc
insl
shll
pop
push
add
or
pop
leave
xlat
mov
mov
imull
lret
pop
sub
xchg
jecxz
leave
jl
mov
fidivl
mov
or
xor
pop
ud1
mov
push
dec
push
arpl
int3
jno
mov
jnp
out
jge
sub
push
movsl
popf
dec
sti
pop
dec
or
dec
mov
lds
gs
and
fldl
mull
xor
stos
out
jns
pusha
adc
dec
mov
ret
push
dec
test
xchg
and
xor
sbb
in
stc
mov
clc
push
inc
mov
mov
pmaddwd
test
or
lea
sub
xor
adc
es
jecxz
add
xchg
aam
cmp
sbb
add
and
push
movsb
jmp
pop
xchg
clc
scas
add
inc
push
adc
leave
xchg
ds
mov
jmp
jb
xor
dec
imul
aad
sti
out
cmovae
and
outsl
cmc
or
popa
les
imul
mov
mov
inc
sbb
sub
dec
fs
dec
adc
push
sbb
cmpsb
pop
outsb
test
cmp
jbe
mov
movsb
and
test
mov
loopne
test
flds
les
fcmovbe
pop
push
dec
adc
add
or
sbb
out
clc
mov
jbe
adc
jo
sbb
adc
fsubl
fiaddl
jne
jmp
call
cli
mov
adc
int
dec
clc
imul
mov
jge
jne
call
ffreep
lds
in
xchg
push
decl
jo
stc
fxch
fcompl
enter
fs
pop
cmp
out
out
ds
lock
xchg
and
popf
or
mov
loop
mov
jmp
mov
dec
inc
and
mov
stos
repnz
outsl
xchg
push
cltd
pop
loopne
mov
and
dec
arpl
rclb
test
sbb
inc
and
shrl
or
cmp
jp
xor
int3
mov
adc
pusha
fs
lcall
mov
cltd
lods
mov
ss
js
stos
push
movsl
ss
inc
rol
jae
xchg
xlat
scas
mov
fsubrl
mov
push
int3
push
and
pop
dec
lock
inc
add
insl
cltd
sbb
sub
loop
jge
sbb
mov
gs
stos
mov
stos
cmp
in
fbstp
iret
in
jnp
jb
mov
xor
stos
sbb
jmp
add
and
jle
push
sub
jecxz
js
cwtl
int
mov
mov
cmpsb
and
mov
push
lods
mov
xchg
adc
pop
std
mov
xor
out
dec
dec
popf
das
sub
inc
fldcw
pop
hlt
xchg
sbb
stos
sbb
rcl
fstl
push
jb
bsr
lahf
xor
enter
and
xor
aaa
fists
int
sbb
xchg
fisubs
cwtl
mov
or
into
jmp
mov
push
mov
pop
lods
adc
inc
jp
sbb
repnz
stos
shrb
ljmp
mov
in
xchg
loop
xchg
shll
lds
jne
sbb
pop
mov
sbb
roll
sbbb
sbb
xchg
mov
push
xchg
movsl
ds
inc
gs
iret
xchg
aaa
inc
out
cmp
or
decb
jge
add
stos
mov
testb
dec
jns
mov
arpl
in
pop
or
shrb
inc
cmp
jno
inc
mov
jae
and
push
cmp
inc
stc
loopne
sbb
xchg
and
mov
jg
push
in
jmp
jg
or
lret
mov
pop
fwait
int
pop
mov
pop
test
call
lods
inc
cmc
fldt
fisubs
sbb
in
fmul
sbb
dec
mov
gs
dec
out
push
call
mov
int3
xor
mov
dec
mov
cli
xchg
ficomps
jnp
ret
cmp
leave
inc
in
fldcw
mov
pop
aad
jbe
push
xchg
mov
pop
hlt
jnp
or
dec
jns
sub
mov
sub
pop
pop
or
push
bound
loope
sub
fucomp
push
mov
in
daa
push
out
cmpsl
adc
and
sub
inc
xchg
add
pop
andb
add
les
dec
lds
rcrl
xchg
and
mov
pop
sub
add
std
sub
dec
mov
mov
pop
inc
jg
lods
ss
ss
mov
adc
dec
push
add
push
mov
out
and
sub
movsb
mov
add
cli
in
xor
sub
xchg
xchg
repnz
or
cmp
jae
jp
xchg
jno
int3
rcrb
ja
loope
mov
and
adc
fsubrp
cmc
adc
cmpsl
sbb
inc
xchg
test
es
mov
data16
sbb
mov
dec
sbb
rcll
cmp
fmul
jecxz
adc
adc
fs
mov
xchg
pop
jge
stos
fimuls
push
adc
fidivrl
mov
lods
mov
test
jns
es
pop
aaa
jmp
mov
xlat
pop
xchg
cmpsb
xchg
xor
add
imul
ficoms
xor
outsb
clc
lods
cmp
mov
jmp
jne
xor
jbe
ja
pop
std
or
sbb
push
inc
mov
pushf
mov
push
mov
into
xchg
adc
outsb
dec
xor
pop
daa
push
mov
outsl
mov
fidivrs
push
jmp
push
hlt
jbe
lret
jge
mov
rolw
mov
pop
xor
mov
push
xlat
dec
ss
push
or
addr16
in
shrl
cmp
jb
jne
push
jp
jl
xchg
xchg
cmp
jbe
std
aam
dec
sbb
dec
xchg
scas
shlb
pop
mov
int3
jg
mov
cltd
cmpsb
add
jl
lret
xor
frstor
incb
mov
jg
mov
mov
push
dec
das
and
cmpl
push
lods
cmp
adc
loope
and
ds
mov
push
ja
pop
push
xchg
incb
in
daa
je
rorb
xor
lds
andb
outsb
aaa
mov
ret
adc
inc
inc
jmp
dec
sbb
dec
jno
cs
sub
lcall
or
mov
data16
cli
pop
mov
xchg
mov
push
mov
ret
test
insb
outsl
mov
or
adc
hlt
jnp
pop
adc
jne
and
mov
push
sbb
mov
jp
inc
ret
ljmp
fsubrs
fimuls
jno
mov
inc
mov
loopne
add
mov
in
dec
in
jmp
lds
push
stc
xchg
lahf
pushf
aaa
dec
sbb
dec
xchg
push
inc
ja
lds
stos
adc
ss
nop
ds
sti
repnz
outsl
fcoml
adc
scas
xchg
mov
sub
popa
fldenv
bound
sbb
imul
sahf
test
shlb
sbb
mov
mov
fmull
pop
sub
stos
xchg
jne
mov
mov
rcll
setle
pushl
movsb
std
and
xchg
daa
and
xchg
dec
lds
and
sbb
out
sbb
xor
push
aaa
cmp
outsb
mov
cmp
xchg
push
out
imul
or
sub
in
jne
shlb
cmp
roll
and
sbb
popa
mov
jo
addr16
mov
cmp
lret
adc
mov
adc
dec
jecxz
popa
shlb
fisubrs
mov
sti
loope
sub
popf
xchg
adc
cmp
inc
incb
js
dec
mov
je
lock
mov
adc
add
inc
out
fidivrl
lret
pop
or
or
fdivrp
aam
cs
rcl
adcb
repnz
aad
out
add
inc
push
push
xor
shlb
fcom
pop
das
inc
adc
xchg
and
sub
outsl
cmp
xlat
outsl
ds
xchg
cmp
lret
ja
cmp
mov
inc
rcll
movsb
inc
movsb
lds
add
inc
cmp
inc
lahf
mov
xchg
mov
or
pushf
jmp
out
cltd
or
add
mov
and
sub
bound
fisubs
lahf
cld
mov
jo
add
in
add
jo
jb
add
cmc
ss
dec
stc
enter
adc
fimull
sbb
pusha
xchg
icebp
mov
movsl
rorl
movlhps
xchg
aad
push
scas
mov
xchg
lret
inc
fadds
dec
pusha
icebp
push
fsubs
jl
cmp
or
lea
sub
sub
or
jl
mov
mov
leave
je
adc
inc
jmp
jp
in
push
sbb
lret
or
push
hlt
jno
dec
add
daa
lea
mov
or
das
xor
or
insb
push
les
mov
mov
mov
jns
xor
add
mov
mov
cmp
test
mov
ffree
or
xchg
lods
shll
rcll
xor
add
cmp
mov
mov
cmp
jmp
call
push
dec
and
push
pop
inc
ds
add
loopne
cwtl
into
das
dec
or
mov
into
add
xchg
jmp
sbb
or
xchg
mov
adc
jle
xchg
cli
mov
pusha
dec
jb
adc
flds
adc
insl
test
dec
outsl
push
xor
insl
jl
arpl
lds
push
adc
lret
adcb
xor
jnp
repz
xchg
pop
cmpsl
mov
or
leave
sbb
popf
dec
mov
push
shrl
xchg
mov
adcb
adc
push
xchg
clc
mov
inc
jae
in
leave
pop
shlb
xorl
add
push
into
add
jae
dec
pusha
pop
jp
mov
outsl
push
push
mov
xor
loopne
test
jo
jbe
mull
cmp
cmp
push
jg
stos
mov
mov
jge
xchg
xor
ja
je
adc
cli
mov
shll
ret
sbb
xlat
jmp
adc
pop
add
mov
mov
sbb
std
pop
repz
or
adc
xor
pop
xor
xchg
xlat
jno
xor
adc
cmp
inc
mov
fcom
mov
cmp
pop
cwtl
mov
xchg
inc
pushf
fiaddl
pop
mov
mov
push
sbb
out
enter
jne
aad
cwtl
pop
pop
push
aas
pusha
mov
aad
stos
out
sahf
aas
call
sar
and
iret
fwait
idivb
ds
jl
push
cli
popf
inc
cld
icebp
sbb
cs
addr16
push
outsb
xor
iret
push
dec
jle
adc
jns
push
sub
xor
insl
fisubl
imul
insl
add
mov
pop
stos
in
ret
fcmovne
add
lods
decb
dec
flds
push
sbb
pop
dec
sub
icebp
xor
jl
aam
inc
mov
data16
aas
add
cmp
fstl
push
test
adc
push
es
adc
outsl
dec
cmp
xlat
ss
ret
mov
sbb
push
stos
pop
ret
les
add
ja
aaa
push
js
addl
sub
inc
loopne
inc
mov
test
mov
adc
dec
jb
lret
fdivp
xor
hlt
jnp
movsb
inc
xchg
xchg
sub
or
das
mov
andb
insb
out
arpl
mov
cli
dec
iret
mov
cmpsl
xorb
loope
or
fidivrl
popa
jb
fwait
leave
mov
clc
cs
jmp
mov
cltd
lret
pop
mov
jb
pop
stc
insb
push
push
outsl
sbb
mov
pop
cmp
push
mov
xor
mov
push
inc
dec
stc
dec
popf
shll
sub
pop
mov
mov
int3
pop
lret
int3
dec
pop
repnz
dec
out
sbb
ror
cmp
rorl
test
leave
mov
push
mov
sub
ss
mov
mov
fiaddl
mov
lret
mov
cmc
je
addr16
imulb
iret
mov
subl
imul
std
fsubs
out
sti
add
xchg
daa
push
subb
testl
mov
jo
sbb
es
adc
stos
sub
push
sub
std
sbb
jo
stos
addb
inc
mov
xchg
pop
sti
movsl
xchg
xor
aad
std
push
imul
or
mov
jo
ret
sub
mov
mov
in
filds
aad
outsl
or
stos
pop
dec
inc
or
mov
sub
stos
ret
sbb
pop
push
and
mov
repz
in
cltd
jle
jl
cmp
push
jbe
cmp
mov
sbb
jle
sarb
int
pop
stc
lcall
cld
lret
ds
imulb
sbb
cmp
cs
mov
cs
int3
cmp
dec
add
xchg
ljmp
aad
mov
and
scas
shl
mov
xchg
loopne
int3
jmp
bound
or
add
mov
pop
push
imul
adc
jmp
or
or
add
fnsave
into
push
stc
inc
stos
icebp
cmp
fisttps
adc
mov
or
mov
lds
mov
inc
cmp
lss
mov
push
fdiv
arpl
arpl
sub
and
inc
addr16
rcr
push
dec
mov
cmc
mov
pop
cld
imull
mulb
fsubl
ja
push
dec
test
test
fst
cmpsl
clc
jle
and
cli
mov
pop
js
enter
pusha
adc
pushf
or
mov
notl
dec
push
popf
cmpsl
xchg
push
test
xchg
push
pop
arpl
les
fildll
cmp
pop
mov
mov
xor
jecxz
into
cmc
or
or
popf
xchg
push
lret
cmp
ret
and
dec
xchg
push
push
jo
jecxz
notb
icebp
push
sub
adc
pop
scas
rcll
loopne
or
cmpsb
inc
sub
push
xor
jecxz
out
dec
cmp
je
inc
xchg
idivl
sbb
pop
push
push
fs
sbb
or
iret
cmpsb
shrb
outsb
pop
or
jbe
sub
mov
xor
sbb
and
aad
dec
pusha
ficoml
inc
test
adc
jmp
jecxz
push
adc
jmp
divb
push
cmp
fcomip
mov
pop
mov
xchg
dec
pop
xchg
shl
lret
iret
and
inc
xor
imul
mov
ja
out
sub
loopne
ror
lret
lea
jg
notb
mov
imul
imul
jno
out
popl
sbb
add
popf
pop
das
popa
aam
xor
push
sbb
push
jb
mov
xor
movsl
jecxz
inc
mov
std
mov
add
push
cld
dec
xlat
scas
or
xor
sub
cmp
xchg
jp
xor
cmp
jbe
cwtl
adc
pop
mov
mov
lods
and
xchg
stos
je
fldt
mov
push
int
push
ja
mov
daa
test
sbb
out
push
mov
dec
push
cmp
xor
adc
fstl
dec
in
movsb
fwait
dec
sub
faddl
lock
ss
js
cli
lea
cltd
jns
dec
cmp
push
outsb
out
lea
push
add
sub
add
jg
imul
jmp
adc
cld
jp
mov
aam
out
jg
pcmpeqb
les
xchg
pop
jae
and
jecxz
xor
ret
js
movsb
stc
std
or
sub
not
sub
loopne
adc
insl
fldt
sub
outsb
pop
add
fdivl
mov
and
cmp
test
adc
shrl
push
into
xor
rcll
mov
or
aaa
js
mov
insl
mov
cmp
imul
and
mov
test
push
rcrb
sbb
dec
es
ror
xor
ljmp
nop
adc
decl
fisubrs
mov
ret
fwait
ljmp
movsl
and
cmpsl
push
mov
sbb
sub
jo
add
sub
or
out
xor
rolb
in
xchg
ljmp
adc
sub
icebp
out
jp
jnp
repz
xchg
imul
xchg
ss
lcall
ret
mov
in
xchg
rcrb
dec
push
orl
cmp
nop
aam
add
data16
add
push
push
add
sub
and
lods
jo
push
test
shlb
sbb
nop
dec
xor
flds
push
cs
neg
or
adcl
pop
and
insb
adc
adcl
movsl
adc
cmp
fidivl
or
xchg
xchg
imul
scas
sbb
pop
jmp
cwtl
out
mov
xchg
scas
into
push
das
xchg
jae
xchg
push
ucomiss
or
push
and
add
rclb
sbb
mov
aam
cs
sahf
or
scas
pop
jo
out
imul
mov
sbb
push
and
xlat
fldl
test
cwtl
xor
jb
mov
inc
aaa
lret
push
test
jge
mov
add
mov
cmpsl
lcall
xor
or
popf
sbb
test
shrb
push
clc
lret
adc
ss
call
rcl
ficomps
mov
in
mov
das
xchg
and
adc
push
cltd
inc
lret
pop
es
iret
gs
xor
pop
cmp
sti
pop
cmp
sahf
cmp
cwtl
out
dec
xchg
in
cmp
mov
fisubl
in
and
push
stos
dec
inc
push
or
bound
xor
xchg
add
out
idivl
aad
jb
sbb
and
dec
inc
incb
stc
sub
inc
push
sbb
pusha
mov
shlb
push
divl
data16
mov
daa
sahf
bound
test
push
rdtsc
repz
jecxz
jecxz
and
or
repnz
mov
cmp
int
out
incl
and
or
inc
inc
into
shll
or
xor
dec
dec
loop
inc
daa
or
jnp
pop
mov
mul
call
mov
fs
push
jns
dec
leave
mov
test
mov
xor
lret
js
jmp
cs
push
add
and
cwtl
xchg
pop
mov
iret
imul
ret
jg
push
out
popf
jg
cmp
add
js
mov
call
xchg
push
adc
les
repnz
add
stos
sub
adc
je
jl
xchg
add
jmp
in
adc
outsb
xor
lret
sub
arpl
xchg
aaa
add
ss
test
adcl
fidivrs
hlt
xchg
mov
push
push
sti
addr16
sbb
mov
loop
leave
jns
or
mov
jae
cmp
jl
ds
pop
lahf
and
or
push
pop
xchg
mov
pop
xor
dec
insb
int3
cmpl
dec
and
jmp
adc
movsl
xchg
xlat
xor
ret
cld
dec
les
mov
mov
adc
mov
fcoms
addr16
sub
fstp
ficoml
mov
mov
mov
add
fwait
push
adc
dec
mov
es
cmc
mov
test
loop
mov
cmpl
jnp
mov
icebp
outsb
sarb
scas
push
lods
js
cmc
mov
push
in
movsl
movsl
dec
arpl
gs
cmp
jb
pop
movsb
mov
test
push
leave
mov
mov
jo
add
push
add
and
add
jbe
test
addr16
mov
in
xchg
inc
push
mov
loopne
cmp
out
xor
stos
fsubs
inc
and
mov
ficoms
jno
popa
pop
rcll
mov
adc
mov
gs
sub
xchg
or
add
sarl
cld
les
sub
mov
mov
out
xchg
mov
pop
mov
add
jae
ds
inc
repnz
aad
ret
addr16
aad
ja
in
pop
popf
ljmp
jmp
inc
mov
idivl
xchg
push
cmpsl
dec
movl
mov
push
shll
ret
xor
inc
jnp
rorb
and
imull
hlt
push
stc
cli
and
add
xor
and
icebp
mov
jl
stos
insl
in
stos
mov
sub
jnp
sub
les
movsb
pop
adc
aad
jb
icebp
mov
lods
int
out
test
add
mov
pop
jl
gs
mov
sub
rorl
jne
add
test
cmp
pop
fistl
stc
and
cwtl
insl
mov
push
shrb
rclb
int3
int
repnz
sub
inc
jae
enter
or
or
fldenv
mov
fdivr
jo
push
repz
push
sub
add
ret
pushf
sbb
call
cs
sbb
ficomps
out
jl
xor
rorb
pop
xchg
or
das
pop
jecxz
inc
arpl
aad
adc
jg
adc
aad
xchg
dec
scas
mov
xchg
in
jmp
push
insb
jo
das
divb
lock
test
mov
insl
cmp
shl
or
push
addr16
dec
sub
jo
xchg
das
inc
xor
sbb
mov
push
cmp
xchg
ret
mov
loop
movsl
and
adc
sub
idivb
out
test
int
xor
xchg
sub
dec
or
lock
mov
inc
out
jmp
dec
hlt
xchg
add
call
xchg
push
out
imul
inc
xchg
loopne
je
lea
jne
dec
fistpll
inc
in
pop
mov
jecxz
dec
or
mov
jbe
pop
cmpsb
mov
in
aam
mov
push
rcrl
loope
sarl
cs
cmp
mov
lock
and
mov
push
lcall
sbb
inc
movsl
mov
cmp
lds
or
add
xor
lock
icebp
ficomps
les
xchg
sahf
fnsave
arpl
add
inc
push
out
rorb
out
stos
clc
sub
pusha
sahf
push
sub
push
ficoml
jae
imul
sti
pop
hlt
add
mov
out
insl
jo
lds
mov
hlt
jmp
insl
mov
push
push
xor
into
add
loop
shll
ret
pop
sub
dec
js
in
jno
add
test
insb
xor
dec
xchg
lea
ss
rcrb
mov
in
clc
nop
push
std
aad
jg
js
sub
sub
sub
push
repz
push
or
dec
cmc
xchg
int
sub
mov
mov
mov
or
in
ja
sub
arpl
jns
popf
mov
jb
aas
insl
mov
enter
int3
cmpsb
dec
leave
loope
mov
pop
xor
shl
mov
cld
cmp
lretw
mov
sbb
mov
imul
negb
flds
and
inc
dec
test
imul
push
imull
mov
pop
cwtl
add
push
jno
push
xor
pushf
outsb
fs
data16
popf
jnp
and
inc
out
dec
cmc
cmp
push
insl
pop
add
cmp
inc
fnstsw
enter
ret
fiadds
call
lahf
and
mov
mov
push
mov
add
cmpsb
pusha
in
mov
jo
lods
inc
and
sub
jno
fs
jge
xchg
jmp
inc
sbb
sub
fcoms
mov
push
dec
add
aam
js
mov
jmp
hlt
xor
mov
std
xchg
cmp
pop
mov
inc
or
arpl
lret
repnz
adcl
lock
lock
pop
sbb
add
inc
mov
pusha
push
xor
cltd
fwait
jbe
pushf
mov
push
rclb
insl
in
and
mov
inc
xchg
fldcw
and
xchg
or
and
iret
xor
into
mov
adc
daa
and
pop
jmp
or
xor
aas
dec
cmpsb
inc
fs
inc
subb
les
ret
mov
out
mov
and
in
mov
stos
ljmp
rorb
xchg
push
inc
fs
roll
mov
adc
jge
scas
push
mov
sahf
push
outsl
xchg
ja
aam
dec
das
movsl
or
push
movsl
push
enter
mov
adc
cmpsb
adcb
scas
add
push
ds
adc
notl
iret
dec
and
adc
pusha
xchg
jmp
mov
xlat
mov
icebp
loopne
inc
cwtl
mov
stc
rcr
cmp
mov
loopne
mov
mov
sbb
sub
enter
adc
imul
and
and
cmpsb
push
pusha
stos
mov
aaa
pop
out
cmpsb
scas
daa
pop
xor
imul
mov
lcall
add
bound
dec
fistps
das
repnz
decl
stc
fs
lahf
stos
in
ss
fistps
sahf
sbb
cmc
jae
mov
rcr
pop
cs
iret
aad
je
movsl
int3
iret
sub
scas
insb
data16
cwtl
inc
jne
xor
and
loop
or
xorl
xchg
stc
cvtps2pd
insb
inc
sub
inc
lcall
rcrl
test
cltd
fwait
dec
leave
subb
call
loop
inc
xchg
mov
jbe
mov
je
sub
sbb
adc
imul
jle
or
jg
dec
add
arpl
inc
xlat
adc
ds
push
or
mov
sahf
ds
inc
loope
mov
imul
and
cwtl
mov
dec
xchg
add
xorl
dec
in
pop
or
mov
fildll
sub
xchg
and
movsb
ja
outsl
push
pop
insb
xchg
rolb
mov
inc
sub
icebp
xchg
test
adc
insl
lods
xlat
mov
ja
mov
ret
inc
mov
mov
adc
mov
pop
out
mov
enter
icebp
test
sbb
cmp
mov
int3
lds
in
fldcw
lcall
xchg
mov
jb
adcb
cld
jae
insb
test
scas
fdivrl
je
mov
outsl
outsl
and
ljmp
xchg
jae
ljmp
gs
push
sbb
mov
mov
testl
cmp
out
sub
mov
subl
or
lods
iret
mov
mov
and
xor
xor
arpl
push
sti
jecxz
sbb
data16
fdivs
aad
scas
sbb
adcl
or
add
cmp
in
xorl
movsl
in
pop
sbb
loop
adcb
jmp
xor
les
jge
ss
pop
test
fs
sub
es
push
pop
test
das
lods
mov
and
or
gs
imul
stos
leave
add
jge
ja
cwtl
mov
test
stos
lea
div
ja
sub
push
daa
mov
lds
push
inc
fst
cli
inc
add
mov
addr16
xor
pop
cmp
xor
mov
test
loop
insb
pop
jne
bound
insl
pop
jecxz
mov
cmp
push
xor
mov
push
jae
test
mov
xor
sahf
lcall
push
inc
fsubrp
xor
mov
cwtl
aas
mov
push
rol
popa
inc
mov
test
pmaddwd
outsb
pop
dec
lcall
xchg
addr16
insb
jbe
pop
movsb
inc
xor
stos
jmp
je
mov
sub
ja
pop
das
idivl
stos
sbb
cld
push
and
inc
mov
insb
sahf
in
mov
mov
inc
mov
sub
jbe
dec
enter
jl
shl
jmp
adc
loope
inc
rolb
push
lods
pop
imul
rorl
jo
and
js
cmp
je
and
push
dec
fldl
push
pop
inc
push
arpl
pop
push
mov
add
mov
pop
fcomp
mov
lahf
cmp
shll
imul
inc
add
xorl
pusha
mov
or
lods
imul
sbb
dec
aam
pusha
inc
sub
xchg
mov
movsl
pop
adc
xchg
sub
in
xchg
ror
ja
iret
jb
xor
dec
leave
jp
test
sub
repz
repnz
arpl
sub
mov
push
rcl
orb
pop
mov
fwait
xor
xchg
xor
pop
mov
mov
lds
mov
into
or
jbe
movsl
adc
and
push
imul
cs
insl
mov
daa
cmpsb
mov
pop
clc
popa
out
push
mov
addr16
stos
push
sub
aad
stos
jg
sub
pop
sub
mov
push
addr16
or
sbb
fcmovnu
pop
mov
jmp
xchg
sbb
push
cmp
inc
mov
sbb
mov
cmc
cmc
jg
dec
gs
mov
mov
dec
mov
push
in
jge
jb
pop
not
shll
scas
pop
xor
pop
inc
mov
sbb
loopne
inc
loopne
sub
mov
out
stos
jmp
ficoml
add
mov
or
dec
adc
add
cltd
dec
push
and
or
and
cli
adc
ret
sub
push
fisubl
adc
stos
cmp
mov
mov
gs
out
mov
cwtl
inc
dec
dec
es
pop
jae
and
xchg
orb
jge
out
pop
gs
mov
xor
sbb
test
icebp
xor
sub
pop
or
cli
push
aad
imul
jp
push
xchg
mov
jg
or
lock
lret
sbb
pop
pop
mov
pushf
data16
test
mov
test
dec
sarb
lock
xchg
out
mov
imul
push
cmc
fdivs
mov
and
mov
jmp
xchg
cmpsb
leave
enter
call
aas
pop
lods
daa
sub
xor
add
cmp
ret
inc
aam
jge
test
xor
cmp
por
lcall
pushf
das
ja
mov
and
push
imul
adc
sbb
mov
fstpl
enter
out
pusha
adc
mov
lods
leave
jns
pop
push
ret
xor
std
mov
dec
and
mov
cld
and
sahf
push
mov
jo
jp
inc
and
in
lds
clc
insb
inc
aam
and
rcll
or
aaa
mov
xchg
repz
les
aam
sub
and
sub
or
inc
sbbl
cmpsl
insb
out
ljmp
ss
mov
pop
adc
les
xor
sbb
jnp
mov
add
clc
pop
in
sub
lret
add
xchg
scas
add
pushf
mov
jns
xor
adc
sar
pop
test
into
xorl
mov
lret
xor
cmpsl
.byte
add
add
xchg
ljmp
push
pusha
adc
add
add
add
add
add
add
sub
add
pusha
adc
dec
pusha
adc
pusha
mov
add
add
dec
add
insb
mov
add
adc
addr16
adc
jo
adc
jle
adc
add
add
add
add
dec
imul
insb
add
hlt
mov
xlat
shll
mov
inc
dec
dec
add
mov
mov
mov
mov
mov
rcl
roll
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
call
xor
cmp
movzwl
pop
pop
call
mov
js
mov
and
inc
push
nop
mov
mov
pop
mov
add
mov
push
jbe
mov
pop
mov
mov
push
pop
xor
sbb
add
adc
add
adc
mov
sub
sub
mov
add
and
sub
jne
jmp
mov
mov
jmp
push
inc
sub
scas
dec
fsub
addb
xor
inc
mov
and
stos
movsb
lock
aad
add
movsb
ss
lea
mov
mov
jb
and
js
mov
xor
xor
sub
test
mov
add
pop
int3
test
adc
js
xor
idivb
ja
mov
or
jne
mov
call
mov
adc
adc
lods
jg
add
mov
jo
out
popf
mov
xchg
fwait
mov
aam
add
fildl
scas
pop
pop
je
arpl
adc
stos
xor
ja
in
mov
sub
test
mov
out
push
aaa
loopne
dec
pop
dec
incl
cld
cwtl
inc
mov
sub
inc
lods
movsl
hlt
lods
xchg
repnz
jno
add
adc
insb
dec
sahf
adc
sbb
jl
add
pop
jno
mov
loope
mov
out
or
out
adc
cwtl
insb
dec
and
cltd
mov
add
jl
subl
int3
mov
fmuls
or
int3
mov
js
adc
nop
cmp
mov
jb
sbb
dec
sahf
insb
cs
out
sbb
cmp
pop
push
repz
lea
rolb
and
arpl
xchg
into
pop
into
mov
xchg
insb
insb
inc
repnz
iret
clts
test
adc
and
lcall
insl
insb
pop
pop
subb
jp
push
push
add
fs
push
or
cltd
in
jae
js
dec
sahf
insl
call
lea
jo
jb
sbb
movsb
push
out
push
mov
imul
xchg
add
stos
nop
push
leave
add
outsl
or
and
ss
xor
mov
or
ret
push
mov
fst
ljmp
push
mov
mov
jb
cmpsl
mov
lds
xlat
add
popa
mov
shll
and
or
popf
cld
dec
aam
mov
xor
inc
notb
inc
or
stos
jge
mov
int3
pop
and
jae
xor
and
xor
and
mov
hlt
mov
lahf
jge
xor
insl
adc
mov
aad
push
add
sarb
lods
out
daa
add
and
lods
out
daa
jge
mov
xchg
jg
xor
jge
leave
mov
out
fsubs
jge
xor
mov
jb
in
ds
insl
or
xor
pop
sub
aam
sti
xorl
xchg
inc
xchg
mov
mov
push
loope
mov
fildl
mov
mov
cmpb
lret
fmul
out
push
jns
dec
mov
mov
xor
dec
shr
and
loope
mov
in
out
dec
fsubl
cmpb
loope
mov
je
cmpb
fistl
and
in
sub
inc
je
mov
aam
pop
or
stos
sbb
insb
sub
push
fcomp
andb
cmpb
fildl
push
repnz
mov
fldpi
cmpb
fucomi
mov
fcomp
add
mov
fcomp
mov
test
imul
fcomp
mov
mov
enter
push
pop
int
fcomp
add
mov
fcoms
push
fildl
add
flds
add
filds
or
mov
push
lcall
fcoms
mov
pop
push
fcomp
add
lret
or
fldl
lea
xchg
mov
stos
adc
xchg
inc
jb
fcomp
xor
jnp
mov
negb
popa
mov
xor
push
cmp
addb
mov
fcomp
add
mov
fildl
lods
lods
fildl
fldt
sahf
lea
fildl
add
flds
or
aam
mov
or
call
adc
pop
cmpb
jnp
mov
fcomp
cmpb
hlt
loop
sub
xchg
pop
push
mov
ffreep
mov
lea
inc
pop
add
fisttpll
adc
ljmp
and
scas
outsl
pop
jl
fcomp
add
fisttpll
adc
ljmp
rclb
inc
arpl
sbb
and
inc
mov
lea
arpl
push
andl
or
cmpb
out
int3
xchg
jmp
mov
lea
inc
repnz
cmpb
out
int3
xchg
jmp
mov
lea
inc
repnz
sbb
mov
mov
mov
mov
pop
xlat
xchg
ss
fcomp
jo
rclb
inc
arpl
sbb
and
cmpl
outsl
cwtl
sti
sbb
mov
mov
mov
mov
mov
sbb
test
lods
out
mov
xchg
sbb
pop
ljmp
sub
shrl
xor
mov
lea
test
mov
mov
sub
mov
sarl
pop
shl
inc
or
push
push
add
sbb
fcmovnb
jge
mov
mov
rcr
orb
cld
mov
addb
fcomp
push
xor
fmull
dec
pushf
fiaddl
mov
push
int
ret
mov
cmpsl
iret
mov
xchg
mov
add
mov
mov
mov
test
cmp
mov
dec
sbb
fimull
movsl
mov
push
or
es
sbb
adc
sub
sbb
lock
jecxz
dec
loopne
mov
sub
shl
xor
pop
adc
cmpb
fildl
mov
fcomp
cmpb
fiadds
jl
fiaddl
mov
fcomp
orb
fildl
mov
cmpb
fildl
mov
xchg
pop
dec
jmp
adc
mov
dec
push
andb
test
dec
imul
sbb
xor
stc
push
jns
mov
rcll
and
aad
xor
movsb
sti
addl
loopne
int
dec
sbb
out
nop
dec
lret
and
inc
inc
jge
cmp
jnp
insb
dec
ret
add
cltd
jg
inc
rorb
paddb
shlb
sub
jmp
shrl
fstl
mov
fsubrs
lock
repz
pop
js
jp
into
adc
push
pop
xor
lahf
pop
lods
ds
inc
cmc
mov
jno
or
cmp
out
nop
cmpl
adc
dec
int
leave
sub
push
cmpsb
inc
adc
enter
mov
jmp
pusha
sbb
push
shr
pop
cmpsl
loop
rcrl
dec
mov
sub
pop
mov
adc
jle
mov
out
lods
jle
xchg
xor
ds
lret
and
dec
adc
lcall
pop
push
add
and
jp
imul
jecxz
inc
jae
decl
push
jmp
out
xchg
mov
out
je
imul
xor
xchg
mov
add
push
jae
dec
lea
sahf
and
iret
mov
xchg
pop
ds
test
cmpl
push
test
push
orb
cmp
dec
lods
aam
iret
push
mov
rclb
inc
mov
lds
sub
subl
test
mov
mov
or
test
in
dec
xchg
cli
pop
inc
mov
inc
pop
xchg
push
mov
adc
fmull
test
popa
out
xor
or
or
mov
fsubr
cmpb
mov
xor
mov
data16
xchg
sahf
je
lcall
cmp
push
push
cld
push
push
test
mov
out
fcmovb
mov
mov
adc
or
mov
inc
shlb
mov
add
or
mov
sbb
cmp
aaa
mov
insb
add
xchg
ja
jmp
leave
sbb
fiadds
jge
sahf
inc
cmp
mov
jp
outsl
insl
pop
fisubrl
icebp
mov
loope
leave
andl
xchg
jb
in
popf
jle
inc
adc
push
add
in
mov
inc
dec
nopl
dec
xchg
jmp
mov
test
mov
idivl
aam
inc
inc
mov
mov
xchg
fistpl
lret
cmp
add
add
or
add
adc
jl
add
jl
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
jl
add
jnp
add
adc
cmpsb
jge
add
adc
mov
adc
pop
jle
add
adc
jge
add
adc
sarb
add
adc
fistpll
add
adc
in
jge
add
add
add
jge
add
add
add
jle
add
add
add
jle
add
add
add
adc
cmpsb
jle
add
jle
add
add
add
adc
mov
adc
inc
jle
add
add
add
outsb
insl
insl
cs
insb
add
xor
xor
fs
insb
add
gs
xor
fs
insb
add
imul
insb
add
imul
insb
insb
add
outsb
jae
outsl
outsl
insb
cs
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
cs
insb
add
insl
fs
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
jle
add
add
add
add
addb
add
fidivrl
add
add
add
jle
add
add
add
jle
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
add
add
adc
add
add
or
add
imul
add
add
jp
adc
add
add
nop
jg
add
add
add
add
imul
push
gs
popa
jb
add
add
jo
outsb
fs
outsb
jne
add
add
je
dec
push
xor
add
inc
jb
imul
insb
add
add
jne
outsb
je
jb
jo
jb
imul
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
insb
inc
js
arpl
gs
add
add
addr16
jo
outsb
push
je
jb
addr16
outsb
dec
dec
outsl
arpl
jns
gs
add
dec
insl
popa
addr16
imul
dec
arpl
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
inc
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
adc
mov
mov
jp
pop
add
sub
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
adc
mov
mov
jp
pop
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
pop
dec
add
addr16
bound
and
testl
sub
imul
add
add
add
outsl
add
insl
add
outsb
add
add
add
or
pop
jg
sub
in
mov
mov
jg
push
sub
push
add
cmp
das
add
add
ja
ja
add
jns
jne
jns
popa
add
add
outsl
add
sub
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
call
sub
add
add
add
inc
repnz
adc
mov
sbb
cmp
xor
loop
insb
mov
imul
pop
in
cltd
mov
mov
cmc
in
lret
mov
cmpsl
cmp
fcoml
rcr
outsb
mov
cli
add
aam
jns
lods
adc
nop
fisttps
sti
leave
enter
mov
dec
popf
hlt
stos
and
dec
addl
js
xchg
pop
popl
test
popa
jns
push
cmp
xlat
push
outsl
sti
mov
out
imul
in
xchg
mov
dec
push
stos
and
mov
adc
pop
xchg
sbb
jno
or
push
and
insl
jl
divl
jge
int3
pop
mov
push
inc
out
fldl
pop
inc
nop
sub
lcall
out
loopne
cld
rolb
mov
outsb
pushf
jl
inc
dec
leave
mov
and
jl
nop
int
sbb
ret
jne
out
sbb
mov
inc
and
push
mov
pop
dec
mov
sub
xchg
jp
push
not
or
lcall
addr16
lods
and
cmp
xor
cmc
cmp
div
cld
lahf
inc
je
xchg
mov
pop
mov
dec
std
xchg
aas
cmp
lods
sahf
dec
jmp
add
pop
mov
xor
stos
mov
outsb
sub
sub
jle
sbb
out
imul
inc
or
repz
cmpsl
xchg
adc
mov
ror
jge
mov
dec
aaa
scas
pop
inc
mov
jno
std
dec
cs
imul
pushf
std
stos
mov
cmp
cmp
lock
pop
mov
test
jecxz
jns
ret
lods
add
test
push
and
mov
movl
in
sbb
in
mov
cmp
cmpsl
or
push
xchg
into
je
leave
mov
subb
rcrl
push
sbb
dec
es
outsl
push
or
mov
fildl
sub
inc
cwtl
jnp
jecxz
mov
testb
mov
cmpsl
fs
jne
dec
stos
cld
call
negl
sbb
and
stos
js
loope
xchg
outsl
out
lret
jle
xchg
scas
stc
pusha
sub
ja
pop
cmp
ja
mov
sub
arpl
sbb
inc
xchg
dec
adc
fsubs
shlb
dec
sub
repz
cld
xchg
push
push
ret
push
jne
sarl
loopne
cmpsl
dec
and
inc
enter
addr16
cmp
jge
lods
cmp
int3
jns
cli
shll
popa
dec
sub
inc
xchg
inc
xor
ja
fistps
insb
bound
leave
cltd
fstps
or
adc
scas
sbb
inc
scas
divl
push
xchg
mov
test
cmp
test
xor
cli
inc
lahf
icebp
push
mov
in
lods
sarl
and
jns
sub
and
add
inc
mov
or
pop
std
aas
repz
cltd
pushl
stc
das
test
pop
bound
xor
jl
out
fs
in
cmp
xchg
ljmp
xor
mov
mov
push
mov
mov
fmul
imul
out
mov
or
cmp
rolb
or
aam
loope
cmp
adc
stos
adc
mov
fsubrl
cmp
or
out
xchg
imulb
mov
mov
cmp
loope
mov
lret
add
int3
or
je
adc
imul
lret
stos
inc
pop
cmp
insl
jo
jmp
sbb
inc
ljmp
xor
jg
push
adc
inc
add
inc
addb
mov
dec
dec
or
adc
xchg
push
pop
shl
jb
fdiv
out
adc
sub
clc
and
inc
pop
dec
jp
jne
loope
cmp
push
stos
lock
cmp
and
pop
mov
mov
sbb
test
lcall
or
ds
int3
mov
aaa
shrl
loope
cs
ret
sub
paddusb
push
ss
xchg
cmc
inc
or
aad
inc
fcomi
jmp
jno
xor
mov
push
mov
sbb
push
mov
xchg
xor
das
mov
push
ja
pop
jbe
dec
into
mov
xor
jg
push
mov
sahf
jae
inc
dec
mov
or
rcrb
push
mov
inc
or
xchg
inc
mov
sub
cld
dec
mov
sbb
xor
or
sbb
mov
lcall
jb
loope
xchg
xchg
xor
push
adc
mov
pop
fwait
test
push
out
or
xchg
daa
sbbb
xchg
out
xchg
stc
pop
test
add
mov
inc
xchg
sub
jge
push
aad
les
fdiv
cltd
or
lahf
loop
mov
sub
sbb
fs
inc
or
or
test
lahf
and
shrl
ds
loop
call
add
mov
lds
dec
cwtl
out
sbb
jns
cld
pop
jbe
mov
test
and
pop
outsl
sbb
xor
jo
popf
jns
mov
jle
push
xor
inc
fistl
arpl
ljmp
icebp
fistpll
aad
mov
dec
pop
fsubs
cltd
movb
jb
das
push
mov
adcb
sub
std
movsb
enter
xor
dec
ficoms
cmp
sti
xor
movsb
xor
idivl
jno
insb
sub
add
push
rcll
add
push
popf
xchg
mov
call
sub
pop
fstps
jmp
loop
cli
push
lods
cltd
fs
push
lahf
outsl
add
mov
test
xor
xchg
jns
lret
mov
add
movsb
pop
in
addr16
inc
cmp
ja
xor
adc
mov
pusha
das
mov
pop
push
popf
bound
xchg
fdivl
in
sub
mov
inc
mov
test
aas
imul
imul
sti
xchg
jae
in
push
push
std
push
fidivs
in
cmpsb
fildll
shll
pop
test
or
mov
pop
rcrl
or
or
or
sarb
ret
in
and
lds
add
jle
fwait
push
sbb
pop
inc
pop
test
add
jmp
ret
je
jns
je
add
xchg
or
cmpsb
jo
cmp
fsubrs
and
iret
int
sbb
pop
dec
popl
outsb
add
add
orb
mov
sub
test
stos
sbb
xchg
jg
fcoms
popa
mov
xchg
lahf
icebp
mov
loope
sti
add
mov
popf
inc
lret
cmp
cmp
add
and
int3
push
pushf
es
roll
scas
pop
or
lds
jl
xor
push
adc
scas
punpcklbw
add
int3
xchg
dec
xor
push
add
jmp
dec
push
mov
xchg
sbb
cmpsl
fneni(8087
inc
hlt
imull
push
xor
ret
sbbl
jmp
jne
xor
ss
sbb
pop
into
jmp
sub
sbb
jle
cmc
pusha
dec
pop
repnz
movsb
mov
inc
adc
ljmp
ljmp
push
out
xor
cmp
loope
fcoms
imul
scas
inc
jmp
leave
inc
iret
dec
add
xchg
push
jp
mov
mov
in
sbb
gs
cwtl
out
mov
pop
cmp
mov
mov
std
jae
sarl
adc
sbbb
insb
push
cmpb
mov
push
cmpsl
loop
push
cmp
dec
inc
dec
and
push
cmp
mov
imul
mov
mov
fisubs
test
mov
sub
test
add
add
pop
or
mov
sbb
sub
mov
adc
mov
push
pop
in
sub
pop
pop
iret
daa
jnp
dec
mov
aaa
mov
fwait
mov
repnz
fisubrs
shl
je
xchg
xchg
jnp
and
pushf
fisttpl
xor
and
xchg
es
movsl
pop
mov
mov
push
incb
pop
lock
sbb
jg
insb
sbb
pop
jne
xchg
sbb
push
sub
adc
lods
repz
jns
in
ret
into
xlat
jg
inc
fstps
xchg
lods
jecxz
cli
mov
test
cmp
push
in
adc
inc
mov
scas
add
fisttpl
pop
cmp
pop
fmuls
xorl
scas
push
js
adc
int
es
int
cmpsb
test
pushf
ffreep
movsb
xor
stc
ljmp
jmp
mov
xchg
fisttpll
mov
add
lds
and
and
xchg
pushf
aam
and
aam
outsb
push
add
push
arpl
inc
pop
std
movsb
pop
es
xchg
mov
in
test
adc
dec
filds
fisttpll
movsl
sub
mov
add
jle
or
sbb
xchg
add
jb
adc
dec
dec
jg
call
cwtl
push
aad
fcmovnb
dec
es
mov
mov
xchg
sahf
mov
stc
push
out
xchg
sub
test
jae
imul
jmp
and
sbb
mov
ficoms
cmpsb
test
sbb
out
push
faddp
push
lahf
add
loop
adc
addr16
sbb
add
imul
xor
fcmovne
cmp
mov
cmp
add
pusha
cs
and
mov
fwait
cmpsb
pop
xchg
push
xor
add
fstpl
enter
loop
jmp
mov
sub
dec
js
outsb
dec
in
or
jnp
pop
lods
shl
mov
subb
aam
xor
pop
inc
pop
test
inc
outsb
sbb
cwtl
out
dec
jb
std
cmp
xchg
fcmovbe
outsl
ljmp
xchg
fmuls
fwait
dec
lods
xchg
daa
adc
inc
pop
in
gs
iret
imul
jne
sti
push
divb
dec
movsb
or
aad
orl
or
in
xchg
fbstp
inc
xchg
inc
xchg
in
push
ret
ss
fstpt
dec
add
push
cmp
imul
add
jl
and
test
and
roll
les
cmpsb
cltd
add
xor
hlt
adc
inc
sub
mov
mov
and
inc
push
mov
sub
adc
and
ljmp
outsl
mov
xchg
pop
push
xchg
mov
lds
mov
fidivl
fsubl
test
mov
lock
xlat
jmp
dec
xor
inc
dec
divb
mov
and
pop
jae
pop
in
mov
push
lret
cmp
iret
pop
lahf
rorl
pop
sbbl
lds
gs
cmp
cmpsb
sub
push
and
icebp
push
data16
test
push
in
daa
ss
movsl
loop
in
test
sarl
aam
imul
nop
xchg
lea
or
sti
std
cmp
fcomps
pop
out
or
lahf
in
pushf
sbb
in
inc
negb
and
cmp
and
mov
jne
ljmp
aaa
fwait
adc
pushf
dec
cltd
inc
add
mov
cltd
jle
aas
lea
popa
adc
das
jg
mov
fstps
fcompl
lret
fcoms
or
fs
mov
mov
fbstp
inc
mov
pop
xchg
mov
and
adc
pop
mov
lret
sar
popf
sub
fnstcw
adc
frstor
push
push
xchg
cld
or
pop
jne
icebp
cmp
into
add
or
or
push
sub
or
dec
in
imul
out
add
imul
loop
dec
and
lods
mov
rolb
xchg
shrl
loopne
out
mov
mov
das
mov
mov
loop
or
icebp
mov
cmp
cli
sub
push
ficoms
jge
lods
jmp
ljmp
sbb
adc
mov
clc
adc
popa
add
jnp
pop
addr16
lahf
mov
sub
jae
fdivrs
sbb
hlt
ficomps
das
jge
jo
stos
js
add
and
fmuls
int3
shll
sbb
xlat
push
mov
mov
int3
xor
inc
enter
pushl
outsl
jns
pop
inc
push
lock
or
lock
dec
cmpsb
push
mov
mov
and
mov
jecxz
xchg
mov
in
imul
cmp
cmp
stos
shlb
leave
dec
adc
lret
jg
sub
jmp
rorb
incl
stc
icebp
fistpl
pop
add
push
fucomp
mov
pop
out
fwait
sbb
popf
push
lcall
shlb
shlb
fimuls
jne
gs
inc
jg
bound
inc
rcll
sbb
sbb
inc
leave
fldl
sahf
movsb
and
inc
rclb
adc
in
stc
test
lds
inc
imul
aad
inc
mov
mov
fldt
dec
mov
test
call
jl
out
jmp
xlat
out
movmskps
insl
or
fldenv
stos
cld
ljmp
sbb
and
gs
sahf
xchg
lods
pop
test
cmp
push
sbb
leave
xor
pop
fsubrs
mov
dec
pop
mov
sarl
sub
xchg
lock
xor
das
pop
fsubs
enter
sbb
rolb
mov
add
ret
std
lds
jb
pop
xor
cmp
adc
ficoms
add
xor
sub
ss
inc
into
mov
subl
loop
arpl
xchg
push
sub
jmp
addr16
lcall
das
bound
mov
movsl
pop
mov
xchg
xchg
sub
xchg
cmpl
leave
xlat
push
push
jbe
nop
sub
sbb
jl
push
roll
adc
jnp
nop
out
out
mov
imull
sbb
mov
sbb
and
in
jno
and
jge
xor
fwait
xor
mov
cmp
sub
push
idivl
add
imull
mov
pop
jge
push
xchg
sub
lret
push
les
inc
out
sarl
addl
repnz
int
repz
test
cmp
outsb
mov
jne
add
inc
mov
repnz
cs
adc
dec
test
lret
xchg
out
xchg
aaa
mov
loopne
cmp
int3
nop
sub
cmp
add
std
push
dec
adc
lds
jne
cmp
mov
sub
hlt
adc
std
test
sub
aam
inc
fists
push
xlat
aas
mov
xchg
int
sub
jne
movsb
or
or
cmp
shl
fisttpl
popa
mov
and
sbb
push
dec
and
dec
add
mov
dec
mov
inc
pusha
in
nop
ss
out
inc
jae
mov
loope
mov
fldcw
loope
js
fmul
mov
test
xchg
or
aad
or
pop
test
cmp
ss
loop
inc
cs
pop
out
insl
out
sub
into
pop
inc
inc
fbstp
repz
pop
nopl
std
sub
inc
aad
jns
cmpb
sub
sub
and
cmpsb
fidivrl
adc
inc
push
jp
xor
mov
pushf
sub
movsl
fsubs
xchg
call
add
mov
or
and
jns
lret
aad
mov
mov
into
into
addr16
sub
push
popa
sbb
dec
imul
in
xchg
or
movsl
xchg
roll
xor
int3
sub
pop
and
mov
loope
leave
push
ja
xor
jg
cli
inc
push
std
popa
jp
add
cmp
rclb
popa
test
aaa
xor
cmpsb
aam
push
mov
cmp
nop
push
je
pop
mov
movsb
cmpsb
push
jbe
inc
insb
push
xchg
xchg
int
pop
ss
movsl
pop
sub
fprem
lret
aam
ja
das
cmpsl
arpl
das
adc
cld
fucom
loop
les
jle
test
incb
repz
ljmp
lahf
ljmp
lock
mov
test
gs
or
xchg
mov
cmpsl
dec
push
pop
cmp
hlt
adc
sahf
roll
into
lds
ret
dec
lret
adc
mov
icebp
in
mov
xlat
add
clc
pop
les
inc
mov
addr16
xchg
xchg
popf
jmp
lret
cmp
das
pop
scas
mov
insb
inc
sahf
xchg
cwtl
mov
mov
adcl
out
sbb
pop
shll
mov
mov
push
push
inc
or
cmp
jg
mov
insl
cmp
ss
leave
push
inc
movsb
lahf
add
jb
pop
push
cmpsl
cltd
and
mov
cmp
pop
jecxz
mov
push
sub
sbb
adcb
jecxz
enter
insl
pop
cmp
jge
fsubrs
inc
fsubs
or
push
js
aas
sbb
dec
add
mov
pusha
rcrl
push
push
movsb
dec
fldcw
push
rorl
mov
jge
icebp
mov
rorl
jmp
mov
dec
cwtl
sti
orl
jbe
and
lahf
cmc
iret
xchg
fwait
push
sti
adc
or
test
mov
inc
sbb
and
jg
push
push
loopne
sub
pop
xor
push
pop
scas
inc
pop
cmp
es
les
xchg
sahf
test
test
mov
fmull
or
jnp
mov
and
pop
inc
mov
insl
rcrl
in
outsb
stos
inc
in
dec
dec
hlt
cmp
ret
jae
ret
xchg
add
inc
movsl
ret
insl
push
mov
or
test
outsl
lock
shll
loopnew
pop
ss
jnp
sti
and
inc
arpl
fisubrl
adc
cmpsb
lret
sahf
adc
mov
fwait
xor
repnz
dec
mov
popa
cwtl
mov
inc
outsb
lea
lret
inc
fsubr
fs
call
test
rolb
inc
add
add
fwait
push
loopne
inc
dec
adc
mov
mov
data16
pusha
fiaddl
out
leave
xchg
aam
inc
lods
lods
loop
mov
jae
pusha
xor
cmp
cli
pop
outsb
xchg
stos
jae
test
or
sub
fisubs
mov
pop
ss
cmpsl
jmp
push
cwtl
dec
stc
push
cmp
into
sbb
int
pop
cmpsb
outsl
pushf
movsl
jno
call
lahf
mov
mov
aas
jmp
test
mov
in
imul
outsl
cmc
adc
sub
lock
dec
jns
adc
repnz
fisubs
xchg
cld
clc
je
in
data16
dec
arpl
lahf
dec
fsubrl
pushf
push
adcb
dec
insl
mov
sbb
das
jno
mov
addr16
ja
mov
mov
dec
outsb
outsl
sub
inc
nop
push
enter
jne
repnz
xchg
inc
or
adc
dec
jl
pop
mov
arpl
and
mov
and
ret
pop
pop
sub
push
stc
xchg
cmpsb
fisubrl
mov
sbb
jae
rorb
dec
dec
fcoms
outsb
adc
adc
and
add
shrb
push
adc
xor
inc
idivb
sahf
xor
or
loope
js
lock
pop
and
sub
pop
fnstenv
cmp
gs
test
test
lcall
jbe
aam
push
test
xor
cmpsb
mov
inc
roll
insb
mov
cmp
sbb
int3
jmp
cmpsb
lahf
jl
mov
mov
clc
pop
sub
les
das
fwait
idivl
add
jne
gs
jl
orb
inc
stc
iret
loop
call
cltd
into
lods
leave
or
shrb
adc
pushf
xchg
inc
lods
add
lods
push
or
push
cwtl
jne
mov
mov
repz
mov
in
add
xlat
push
sub
mov
and
lods
movsb
xor
movsl
pop
lock
mov
jns
cli
dec
and
adc
xchg
sbbb
fiaddl
cld
stos
pop
sti
cmp
dec
mov
inc
adc
push
sbb
mov
cltd
in
xor
mov
push
mov
ja
pop
mov
jecxz
mov
pop
nop
xchg
fs
loopne
std
jp
mov
lods
xchg
or
sbb
dec
and
iret
cwtl
adcb
mov
inc
sub
push
mov
pop
inc
xor
cld
orl
cmc
adc
jp
mov
cwtl
cmp
sbbl
nop
mov
mov
aas
sbb
push
adc
jge
pop
test
hlt
daa
push
jle
call
mul
inc
jg
xor
stos
push
xchg
mov
push
dec
pop
adc
mov
push
xchg
or
xchg
andl
and
adc
pushf
jb
xchg
mov
mov
cmp
shrl
xchg
leave
mov
stc
mov
outsb
pusha
pop
inc
shll
test
hlt
mov
int3
mov
das
scas
dec
ljmp
insb
dec
lahf
ror
push
mov
xor
jge
sub
mov
adc
stos
dec
cltd
jno
insl
cmp
dec
mov
xor
mov
and
adc
inc
add
and
shll
std
stos
mov
imul
mov
ds
sub
adc
dec
jno
inc
ds
in
bound
and
fmuls
xrelease
pusha
inc
pop
iret
push
xor
mov
nop
or
pop
push
adc
int
jb
in
stos
mov
sub
ss
aad
ljmp
xchg
dec
gs
mov
push
icebp
pop
sbb
rorb
mov
add
mov
les
ret
call
mov
adc
int
sub
mov
leave
pop
std
lret
xor
inc
lahf
ja
ret
adc
scas
sub
pop
sub
ss
pushl
mov
sub
lahf
pop
mov
xchg
mov
cmp
cmpsb
rcr
xchg
jecxz
loop
jmp
mov
sti
adc
push
loopne
sub
outsl
psubusb
fldt
push
hlt
fistl
scas
std
int
cmp
and
ss
dec
test
pop
pcmpeqw
add
xchg
scas
gs
sbb
and
xor
add
dec
in
push
mov
mov
fs
mov
xor
shr
imul
adc
jmp
jle
out
pop
dec
cwtl
or
lds
mov
dec
push
in
into
or
or
jmp
or
cwtl
sbb
push
rcll
adc
xchg
add
mov
int
xor
mov
sbb
idiv
xorl
jecxz
or
xor
dec
imul
adc
adc
cwtl
jecxz
mov
es
scas
mov
dec
cmp
lahf
pusha
cmc
lcall
add
mov
cmc
xor
lahf
aas
dec
ds
lods
sub
mov
out
stos
xchg
addr16
test
push
mov
shr
push
fcomip
in
push
cmc
cmp
sbb
shrl
ud0
push
adc
pop
and
cmpsl
lea
and
in
push
ss
pop
sub
test
xor
or
xchg
and
lods
jae
ss
in
push
pop
mov
addr16
pop
pop
arpl
mov
sbb
or
mov
hlt
std
stos
leave
insb
mov
js
rclb
aad
adc
xchg
dec
lea
jp
push
cs
leave
or
scas
fcmovnbe
sbb
cmp
mov
ret
ljmp
mov
adc
mov
pause
add
nop
pop
push
mov
add
sahf
sbb
or
popl
in
mov
test
sub
xorb
jecxz
aad
js,pn
out
int
mov
cmpsl
xor
lock
mov
daa
or
inc
push
mov
outsb
out
mov
inc
cwtl
dec
std
bound
inc
aad
xor
or
sti
inc
mov
shll
push
sbb
mov
xlat
outsb
lret
sbb
dec
in
or
or
adc
cmp
jge
rcrb
mov
add
jecxz
inc
mov
dec
mov
mov
dec
lock
cmp
test
repnz
dec
jg
movsl
insl
call
xor
clc
or
test
testl
pushf
test
test
cwtl
inc
fdivrp
popf
and
sub
or
stos
testb
stos
aaa
mov
aam
pop
mov
js
les
xchg
roll
arpl
idivb
mov
mov
jmp
and
cld
leavew
sub
or
xlat
mov
cwtl
cmp
ja
xor
push
fisttps
mov
inc
xlat
mov
test
mov
ja
jb
xor
out
out
outsb
jp
fistpll
add
divl
rol
cltd
arpl
mov
and
data16
add
bound
mov
mov
fs
and
mov
call
dec
fwait
icebp
sbb
add
movsb
jae
repz
nop
xchg
pop
lea
and
flds
cmp
add
dec
pop
jge
lea
pop
or
movsl
push
mov
mov
adcb
jp
cmp
xor
xor
cmpsb
shll
lds
sub
stc
das
sub
pop
insb
xchg
add
pushl
in
jl
sbb
repnz
decl
xor
out
pushl
push
xor
bound
lret
mov
push
mov
pushf
es
mov
mov
jbe
sub
inc
pop
pushf
mov
xchg
and
xchg
mov
insb
dec
cmpsb
xchg
popf
enter
mov
xor
or
lcall
arpl
inc
aas
adc
jp
daa
lea
jae
pop
aad
aad
mov
add
xor
jg
dec
ljmp
test
or
aad
add
adc
xchg
fistps
fbstp
pop
sub
scas
dec
xchg
sar
push
stc
mov
xchg
lret
mov
arpl
or
adc
mov
mov
sub
mov
test
call
insb
xlat
roll
xchg
jno
xchg
adcb
mov
icebp
in
test
ret
test
mov
dec
push
cs
lds
iret
aam
loopne
jb
push
dec
jecxz
push
hlt
clc
push
sbb
in
orl
cli
xor
mov
jno
les
dec
add
popf
sub
jb
das
xor
pop
aad
sahf
ds
test
cli
stos
mov
lcall
sbb
ljmp
iret
xchg
mov
push
cmp
loop
inc
push
adc
mov
out
jmp
mov
jbe
mov
rorl
popf
mov
push
add
movsb
mov
mov
jne
xchg
inc
lahf
pop
cmp
add
push
xchg
popf
iret
rcr
scas
cltd
jnp
mov
sub
jp
insl
sub
les
cmp
cmpsl
mov
lcall
lahf
pop
stos
or
add
cld
shlb
cmp
mov
mov
pop
xor
xor
or
ds
iret
inc
insb
jb
cmp
std
aas
out
jg
icebp
pop
icebp
out
cwtl
jmp
pop
int3
sbb
add
add
mov
inc
lock
cmp
xlat
push
in
cs
push
add
pop
sbb
cmp
movsl
and
cmc
fdiv
in
ror
xchg
sbb
xchg
jmp
movsb
push
jmp
push
pop
dec
mov
sbb
sbb
ret
cmc
dec
pop
lcall
fnstcw
adc
jle
jge
inc
cmp
xlat
outsl
sub
mov
mov
mov
sahf
fdivl
sbb
mov
sub
out
rorb
cmp
pop
jb
insl
jns
dec
lahf
xchg
out
inc
jno
mov
in
cs
sub
jb
mov
into
aam
scas
loop
push
or
scas
inc
jo
jae
popf
adc
movsb
ret
jecxz
cmp
add
xlat
stos
xchg
xlat
mov
dec
stos
int3
out
loop
lea
sbb
or
cmp
fwait
inc
scas
shrl
stc
pop
mov
fbstp
push
lock
cmp
lret
sub
cmp
xchg
aad
roll
xor
push
dec
mov
repz
jecxz
das
adc
xor
pop
std
fdiv
fldenv
outsl
inc
sti
test
xor
push
out
clc
mov
call
int3
cs
scas
pop
popf
out
mov
xchg
imul
jb
outsl
fwait
into
sub
and
lods
pop
fwait
insb
lock
dec
lds
adc
hlt
add
lock
loope
or
mov
int
xchg
jge
iret
nop
dec
mov
shll
call
cwtl
jb
xlat
xchg
add
sub
or
sbb
inc
or
loopne
lahf
xor
xchg
test
lods
pop
lock
dec
pop
and
xor
mov
bound
mov
jb
cmp
cmpsb
xor
cmpsb
xor
lcall
dec
mov
jge
pop
dec
cmpb
push
push
std
jmp
std
or
sbb
pushf
push
or
in
cmpsb
xchg
jbe
rcrb
fcoml
dec
xor
pop
push
sbb
data16
ss
outsb
stc
stc
scas
cmp
rcll
test
xor
push
dec
fdivrl
pop
sarw
mov
push
sbb
addr16
shrb
sub
push
leave
cmpsl
or
mov
push
jo
sub
pop
xchg
inc
cs
ljmp
rorb
cmp
mov
or
adc
mov
jae
push
pusha
test
cmp
inc
arpl
popa
addr16
pushf
xor
mov
xor
pop
pusha
popf
sarl
xchg
inc
loope
fldt
call
shll
js
mov
andb
push
outsb
aas
mov
jne
loope
push
lret
mov
test
xchg
cs
xchg
push
sar
sub
stos
sarl
jle
test
mov
mov
adc
out
dec
jg
jmp
stos
or
ret
sti
jge
push
and
adc
fiaddl
scas
ret
xchg
pop
inc
scas
mov
fnsave
sbb
fcompl
xchg
inc
push
push
and
and
imul
rcrb
pushf
or
push
push
fldenv
pop
fldenv
into
inc
push
mov
adc
inc
adc
jge
mov
dec
mov
scas
lret
ret
vphaddbd
jge
mov
dec
fs
je
pop
cmp
loope
jmp
cwtl
dec
mov
sub
scas
xor
ss
mov
scas
aaa
jmp
jb
jae
adcb
jns
mov
mov
xor
cmp
jb
scas
cmc
dec
jno
imull
iret
xchg
stc
mov
pop
popl
icebp
pushw
test
and
mov
pop
and
xchg
mov
jp
push
call
xor
cmc
jno
pop
js
pop
pop
mov
pusha
xor
cltd
scas
cltd
mulps
and
jmp
or
int
jns
mov
pop
or
push
sbb
or
sbb
std
mov
ja
addr16
pop
or
dec
les
xlat
outsl
das
xchg
push
cmp
cwtl
test
ja
dec
shlb
lds
bound
mov
arpl
insb
ss
cli
ret
sbb
jecxz
in
jb
pop
icebp
lcall
enter
jns
rcl
flds
lcall
mov
mov
fadds
push
ljmp
fldenv
ss
imul
mov
das
ja
sub
iret
cmp
cmp
std
cmpb
arpl
bound
shll
fadds
stc
xchg
lods
adc
mov
aam
lds
push
repnz
sahf
lahf
sub
xor
imul
rcrl
xor
ja
loopne
popf
mov
std
pop
sub
rcr
shl
sub
stos
cmpsb
test
lock
push
addr16
or
decl
add
cld
pop
lret
icebp
push
iret
cmp
mov
add
sarl
pop
xchg
notl
sahf
pushf
das
imul
out
pop
xchg
ja
mov
push
jp
scas
jl
dec
push
imul
push
mov
pop
push
jecxz
sti
fsubrl
sbb
add
stc
aaa
cmpsb
dec
jp
lret
pushl
data16
popf
adc
out
sbb
add
pop
mov
sbb
and
vcvtsi2ssl
movl
addl
mov
jno
sub
jb
jns
jns
or
or
sbb
mov
inc
push
fwait
leave
lea
int
shl
xor
dec
jne
xor
lcall
inc
lret
cmpsl
gs
sub
mov
xchg
ror
psubsw
daa
mov
mov
rcl
aam
lret
push
mov
push
outsl
out
jb
xor
xchg
popa
enter
cmp
inc
pop
lret
pop
mov
mov
imul
adc
mov
imul
and
adc
mov
jns
hlt
mov
cld
adc
sub
stc
in
inc
jae
ljmp
push
mov
test
fwait
test
adc
mov
push
xchg
dec
lods
pop
sbb
adc
jg
pop
lcall
fistps
scas
fcomp
out
xor
lock
dec
mov
les
xor
pop
lret
sahf
sub
iret
fdivrl
imul
cs
shrb
push
bswap
es
xor
dec
dec
rcr
jns
lret
dec
dec
jae
das
rorl
xor
fninit
out
cmp
pushf
nop
mov
cltd
test
in
in
and
mov
pop
xor
sbb
jge
dec
cwtl
or
outsb
sub
iret
xor
and
fsubp
jle
fbstp
dec
stos
roll
sub
out
repnz
sahf
or
cmp
fwait
mov
adc
cwtl
sbb
xor
daa
es
push
sub
push
xchg
aaa
pushf
or
icebp
stc
mov
pop
repz
jbe
out
inc
mov
xchg
mov
cs
ret
es
ret
xchg
cmp
pop
in
imull
add
cli
roll
jp
mov
xchg
test
dec
mov
mov
iret
pop
rol
dec
rclb
sbb
cmp
or
jb
add
insb
pop
leave
mov
dec
stos
sub
pop
pop
lds
mov
xchg
repz
dec
and
xchg
popa
xchg
icebp
aas
aaa
inc
pop
mov
mov
dec
rclb
adc
push
xchg
adc
out
addr16
mov
loope
inc
fisubrl
arpl
mov
push
pop
sub
movsb
ds
mov
add
mov
sbb
ret
lret
fneni(8087
cmp
lret
push
icebp
test
mov
pop
mov
loopne
stos
dec
xchg
insl
jno
repnz
and
les
les
hlt
into
xchg
pop
ss
sub
jns
cmp
dec
sub
and
daa
mov
pusha
sbb
cmp
sub
mov
gs
pusha
ds
clc
jno
xor
cs
fistpl
mov
imul
sub
push
fwait
js
ret
adc
std
repz
xor
xor
xlat
mov
cwtl
in
or
std
add
mov
outsl
loop
jmp
out
mov
mov
loopne
out
cmp
adc
sub
jle
pop
outsb
rol
ret
clc
mov
xchg
dec
loopne
fs
in
fldt
push
sti
repz
add
and
dec
mov
cmp
xchg
xchg
xchg
or
mov
pop
sub
pop
push
dec
daa
ds
fisubrs
mov
adc
addr16
mov
leave
xchg
or
push
push
sub
pop
in
dec
xlat
inc
imul
xlat
icebp
fdivr
pop
mov
fidivs
jle
ds
mov
das
mov
stc
sub
pop
inc
inc
jae
push
or
movsb
ret
bound
pushf
adc
outsb
fnstsw
outsb
add
pop
mov
inc
sub
or
cmp
add
pop
nop
xchg
es
aaa
sbb
sub
add
xchg
dec
fs
inc
cs
lods
push
lds
dec
outsl
lcall
lret
pop
cmpsb
cmpsb
scas
adc
in
jge
lock
and
mov
add
xor
adc
or
xchg
lods
fcom
mov
icebp
xor
pop
dec
pop
xor
je
and
mov
push
add
and
outsl
mov
push
scas
add
xchg
addr16
pop
repnz
in
test
and
andb
ljmp
jp
inc
xchg
sbb
mov
cmp
js
dec
pop
pop
jg
call
inc
mov
sub
shlb
mov
cmp
mov
mov
mov
cmp
pop
jb
add
aaa
lds
push
sub
mov
shlb
pop
push
in
movsl
and
lcall
lret
or
mov
fildll
cld
xor
mov
cmp
xlat
rolb
adc
sub
push
and
pushf
xor
mov
pop
sbb
pusha
pop
shll
xor
mov
sub
adc
aaa
inc
add
fwait
movsb
mov
das
imul
call
test
sbb
cmc
push
jbe
add
xchg
dec
and
jmp
int3
cld
xor
shll
mov
mov
pop
mov
inc
mov
dec
scas
sub
jns
lcall
mov
sbb
mov
lods
xor
sahf
cli
bound
add
insb
push
mov
cmp
xchg
aam
jecxz
inc
add
cwtl
pop
dec
mov
inc
sub
mov
sub
fidivrl
in
xchg
in
dec
outsl
lock
mov
repz
mov
add
mov
sub
adc
and
data16
inc
pushf
fwait
popf
movsb
or
add
jne
sti
gs
test
jl
adcl
cmc
gs
das
mov
rcrb
adc
in
mov
lret
mov
lods
je
fisttpl
xor
push
adc
push
ss
in
sub
pop
stos
mov
mov
xor
xchg
sub
movswl
call
insl
jp
shll
insl
test
dec
cltd
ja
cmp
pop
test
rcl
fcoml
icebp
movsb
mov
fisttpll
lret
decl
arpl
mov
xchg
or
lcall
out
mov
inc
inc
or
lock
movsl
push
pop
daa
and
gs
sbb
sub
xchg
dec
xor
inc
nop
push
pop
mul
push
mov
imul
xor
pop
and
mov
sub
xchg
dec
xchg
and
pop
daa
dec
call
jmp
out
mov
es
movsl
and
int
lret
das
dec
dec
icebp
pop
cwtl
test
pop
cmp
ss
stos
jmp
repnz
dec
stc
jmp
or
mov
loope
push
in
pusha
test
je
xchg
or
cmp
daa
repz
imull
fnstcw
cmc
icebp
cs
shll
test
and
lcall
lahf
ss
in
mov
out
inc
shr
jo
inc
sbbb
fsubs
in
movsb
scas
jge
fistl
or
repnz
cmpxchg
jb
pop
test
lahf
and
sarb
out
xor
xor
inc
sub
inc
xchg
lea
aaa
cwtl
mov
in
rcrb
addr16
loope
aam
mov
ja
ss
jno
mov
jmp
xlat
lea
fs
or
mov
or
add
dec
mov
push
aaa
xchg
push
pop
stos
cmp
lods
negb
dec
or
inc
jnp
sbb
shrl
es
dec
or
popf
jecxz
sub
mov
lods
ljmp
daa
fistpll
cmp
sbbl
jo
fcmovnbe
repz
movb
adc
iret
lahf
xor
sub
test
and
mov
sbb
popa
dec
pop
mov
cwtl
inc
pushf
and
insl
xchg
cs
out
call
je
fimuls
add
inc
lea
inc
mov
pop
xchg
aaa
adc
dec
daa
cmc
daa
jne
xor
mov
inc
imul
cmpsl
cmpsb
cmp
jmp
aas
clc
push
das
push
lods
cmp
cltd
push
xchg
xchg
test
mov
dec
into
xorl
inc
scas
flds
jl
mov
out
call
jnp
rolb
and
fisttpll
push
sub
jle
inc
fildl
push
lret
push
or
out
mov
sub
mov
xchg
cmp
ror
pop
aas
mov
insl
lahf
adc
lods
roll
jb
aad
das
jb
xor
dec
mov
adcl
and
shll
pop
into
xchg
push
inc
out
adc
subl
lds
jge
dec
push
push
test
pop
add
ja
adc
rclb
jo
jae
xor
call
mov
mov
inc
aad
mov
xor
clc
add
pusha
pushf
pop
arpl
mov
jl
in
stos
jecxz
xchg
adc
mov
xchg
les
rcll
sbb
lock
mov
xchg
notl
or
push
pop
cmp
ja
or
outsb
push
add
lcall
dec
push
ss
jns
inc
sub
rcl
push
inc
stos
repz
jbe,pn
jae
out
scas
dec
cmp
in
leave
adc
mov
imul
pop
iret
sbb
adc
jns
ljmp
sbb
sbb
jg
fstpl
popf
xor
cwtl
lahf
push
mov
dec
ljmp
mov
int
test
out
add
mov
add
mov
inc
inc
imul
push
pop
mov
mov
loop
loop
dec
adc
jmp
adc
dec
ljmp
imul
cltd
dec
push
ret
pop
orb
addr16
cmpsl
and
cmp
mov
shl
aam
mov
rcrb
cmp
mov
cmp
mov
movsb
xorb
mov
adc
mov
pop
mov
pop
jae
or
out
mov
and
aad
inc
or
sub
test
inc
push
and
or
nop
dec
cwtl
cmp
jecxz
ss
mov
or
sub
fidivrl
cmp
clc
rcll
aam
push
ret
dec
mov
fiaddl
lea
push
inc
insl
add
es
or
test
in
mov
popf
xor
dec
jbe
scas
ret
aad
jo
sbb
mov
js
push
clc
sub
cmp
loopne
cli
ror
dec
or
repz
xor
lds
arpl
push
xchg
das
xor
int3
scas
mov
add
dec
xchg
lcall
pop
xor
int3
or
jno
movsl
aaa
gs
out
adc
addr16
leave
cs
cmp
sub
std
dec
jmp
or
mov
xchg
adc
push
mov
inc
lahf
adc
and
mov
dec
stos
xorl
fldl
jno
dec
jecxz
xor
lods
daa
scas
movsb
push
dec
int3
xchg
insl
insl
mov
push
sub
call
pop
mov
jge
lods
cmp
pop
push
add
jge
cmpsl
out
repnz
packssdw
outsl
xchg
xor
fldenv
sti
push
movhps
adc
mov
loope
and
fisttpl
jne
in
lods
mov
mov
sbb
jne
xchg
sbb
xchg
sbb
or
xchg
daa
add
mov
fs
das
mov
mov
sti
mov
lds
mov
aam
jle
jae
iret
jg
xor
pop
sahf
inc
outsl
mov
jb
xchg
insb
aad
lods
pop
bound
push
fidivs
loop
pushw
jmp
fidivrs
push
adc
pop
ja
lea
sbb
lret
pop
outsb
cmpsl
ja
adc
lret
cmp
lcall
scas
mov
mov
mov
push
xor
push
outsb
ljmp
in
ret
out
outsl
adc
rcrl
popf
ds
pop
push
mov
clc
decl
jns
in
mov
insl
in
hlt
sahf
inc
jmp
stos
leave
lret
mov
hlt
sub
add
call
inc
push
popf
subb
mov
pop
jmp
test
dec
dec
xchg
jns
ljmp
mov
mov
stos
fldt
and
repnz
push
leave
xor
loopne
ss
fs
mov
hlt
leave
js
push
mov
repz
cmpsb
hlt
ljmp
adc
subl
insl
repnz
jb
xchg
imul
dec
pop
repz
lods
or
mov
cld
cmp
mov
ljmp
lret
cmp
cli
jle
sbb
popf
sbb
xchg
es
cmpb
lret
into
xchg
ficoml
out
adc
mov
sub
test
pushf
xor
dec
sub
cmp
or
xchg
std
lods
das
fwait
into
mov
es
shr
lret
or
mov
aas
dec
js
pop
jecxz
and
imul
cltd
inc
div
dec
mov
jle
addl
xchg
pop
mov
mov
dec
imul
adc
subb
inc
dec
inc
test
jnp
cmp
outsl
js
adc
data16
mov
push
fdivrl
outsb
es
outsl
cmp
insl
ss
gs
std
rolb
lcall
scas
mov
test
pop
mov
movsb
adc
inc
mov
in
dec
jno
adc
mov
cmpsl
mov
push
lahf
push
jg
adc
jge
dec
jmp
push
inc
movsb
orl
imul
mov
iret
jbe
and
popf
push
jecxz
aas
pop
fcoms
ret
mov
testl
mov
popa
xor
sub
push
mov
lods
hlt
mov
push
insb
stos
sbb
mov
cmp
out
mov
pop
test
push
popa
push
dec
fld
sbb
stos
in
jo
arpl
lret
leave
mov
stc
pop
sub
ficompl
xchg
aam
pop
inc
lahf
sbb
stc
lods
adc
clc
fcmovu
and
enter
inc
or
pop
mov
aad
jl
shlb
in
orb
jb
fnstsw
jl
ret
test
scas
int
ds
and
dec
cmc
test
dec
sub
adc
sub
and
negl
push
mov
clc
push
imul
sub
sub
insl
xchg
scas
movsb
das
jb
popa
xorb
mov
mov
mov
jns
mov
push
out
or
mov
scas
and
mov
cwtl
jecxz
in
adc
pop
jae
pop
aam
jnp
or
mov
int
inc
fwait
or
jo
or
jns
inc
xchg
push
inc
cmp
cmpsl
mov
add
mov
jp
push
cmpxchg
mov
adc
and
dec
push
pop
inc
xor
rorb
or
mov
ds
push
and
movsb
out
orb
loopne
movsb
pop
add
or
xchg
ficompl
push
adc
adc
and
push
jl
pop
dec
outsl
push
subb
into
fildll
jg
insb
pop
nop
and
arpl
sub
repnz
inc
decb
jg
sub
push
ret
pop
in
jl
test
push
jle
scas
xchg
push
mov
ror
add
cmpsl
cwtl
pop
leave
aas
cmp
popa
xor
fxsave
cmp
jle
cwtl
inc
and
iret
stos
je
out
cmp
pop
arpl
push
adc
push
pop
dec
decb
in
lock
dec
add
xor
push
pop
jmp
add
sub
int3
arpl
arpl
mov
jae
push
fidivs
sub
dec
mov
subb
jge
cmp
mov
push
into
cli
addr16
push
and
adc
iret
lcall
push
mov
pop
jb
xlat
xor
js
lret
and
jmp
dec
mov
xlat
repnz
shrb
dec
shlb
daa
lods
push
push
in
jo
popf
xor
rcrb
mov
pusha
cmp
sti
ror
sub
mov
fisubrl
stos
dec
mov
or
clc
enter
int3
movsb
xor
fcompl
adc
faddp
cs
jno
int
sbb
imul
add
icebp
sub
and
ds
push
in
pop
jg
mov
and
mov
and
mov
clc
jne
jge
sbbb
clc
xchg
jecxz
add
fsubrs
mov
jnp
mov
aad
loopne
jbe
mov
dec
and
dec
adc
cmp
insl
jae
sbb
fs
cmpsb
daa
test
mov
clc
inc
cltd
mov
xchg
mov
into
mov
subl
pop
aas
cli
add
repz
add
dec
jo
pop
adc
xor
dec
sub
push
mov
and
dec
cltd
aaa
in
out
lret
jge
outsl
adc
sub
fisubl
sbb
insl
xor
outsl
pop
popf
push
mov
mov
and
fstl
mov
push
daa
lods
daa
mov
jbe
jne
push
sti
mov
sub
addr16
cld
les
shrb
gs
mov
adc
das
int
inc
sub
test
jnp
loop
in
adc
test
push
pushf
or
pop
sub
adcb
cmp
mov
jg
jo
push
orb
push
mov
xchg
outsl
xor
lahf
fdivl
jle
shll
cltd
jmp
ret
cltd
loope
adc
adc
fwait
test
int3
mov
push
imul
movsl
xchg
lea
cli
xor
push
rcll
icebp
cmp
out
iret
aas
lret
or
das
dec
das
push
sbb
sub
nop
insb
rclb
out
ret
repz
adc
int3
and
test
in
pop
test
fldl
and
sbbb
jbe
add
gs
xor
leave
jle
dec
push
pop
pop
fldenv
pop
aaa
movsb
ljmp
lret
cmp
push
dec
inc
pop
jne
sbb
inc
js
xor
js
push
cld
inc
mov
test
out
dec
adc
gs
cmp
pusha
mov
sub
ja
mov
insl
xchg
fisubrl
fsubs
mov
outsl
aaa
lock
lds
insl
push
movsl
cli
repnz
aad
ljmp
sub
subl
aaa
popf
pusha
repnz
pop
mov
call
push
mov
fiadds
ljmp
cld
stc
clc
jle
lret
jno
cmp
mov
out
andl
ret
popa
jo
int
dec
lods
pop
cmc
pop
out
xor
push
and
andb
jg
xor
sbb
aaa
pop
rolb
mov
xchg
test
ljmp
mov
hlt
mov
sub
testb
xor
iret
xchg
sbb
mov
inc
not
and
arpl
scas
jle
cmc
cwtl
pop
add
mov
test
add
cmpsb
sbb
dec
sbb
mov
loope
iret
fdivp
ja
lds
push
hlt
fisubrl
mov
sbb
jno
shll
sbb
and
sub
mov
sub
cmpsl
shll
add
push
rorl
sub
iret
fs
dec
sub
cmp
inc
fwait
cwtl
aam
loopne
cmc
mov
adcb
push
or
xchg
push
mov
js
inc
push
xor
mov
inc
leave
fdivs
out
fisttpll
jno
ds
jecxz
fstl
pop
xchg
sub
cld
out
ror
pop
mov
sbb
fucomip
iret
adc
pop
push
in
repz
fcoml
mov
movsb
xchg
xor
lds
sub
leave
data16
das
mov
aaa
jae
xchg
orl
or
stos
and
cmp
into
rclw
mov
decl
in
xchg
rclb
dec
and
dec
loopne
sbb
cmp
inc
push
ret
jo
loop
loope
jp
jmp
shlb
push
sti
xor
xor
cld
rcrb
mov
push
lods
cltd
arpl
clc
gs
aas
out
and
sahf
es
orb
jbe
push
mov
addl
lret
mov
or
adc
sub
add
inc
inc
adc
int3
and
cmc
mov
icebp
clc
repz
gs
push
mov
jle
xor
adc
ret
inc
es
cmp
fs
inc
or
push
push
sub
cmp
scas
aas
sub
mov
ja
cld
fnstcw
cmp
mov
push
insb
repnz
cwtl
imul
mov
lock
enter
filds
mov
inc
lds
sub
lods
or
mov
int3
add
lret
jbe
nop
sahf
xchg
jne
fildll
ss
inc
repnz
sub
jge
mov
dec
cmp
enter
iret
movsb
cli
pop
inc
and
inc
sbb
rorb
jno
loope
jp
dec
inc
pop
je
dec
out
mov
and
in
dec
test
call
mul
movsl
pop
loop
cld
mov
scas
clc
fsubl
xchg
pusha
leave
inc
mov
adc
int
nop
aam
std
stc
rcr
clc
cwtl
cmp
xor
aaa
insl
push
mov
rclb
mov
add
icebp
pop
mov
inc
dec
ljmp
jmp
cli
jl
and
push
xchg
xlat
add
push
frstor
fwait
pop
push
inc
repnz
data16
mov
sub
lock
mov
packssdw
int3
xchg
pop
dec
not
and
lods
mov
xchg
cmp
scas
jp
hlt
jge
cmpsb
push
repz
scas
and
push
ret
jne
push
out
push
inc
adc
dec
or
add
jnp
adc
rorb
fisubrl
mov
js
pop
daa
std
pop
fs
filds
pop
out
push
jo
push
cmp
mov
pop
leave
jle
sub
aas
add
adc
out
cmp
test
pop
ss
clc
xchg
int
shrb
popa
lock
jae
adc
add
dec
imul
add
leave
mov
sbb
adc
add
stos
fs
sub
push
mov
jg
sub
pop
and
out
aaa
cmpsb
lcall
xchg
dec
iret
adc
das
movsb
int
pop
inc
or
dec
dec
push
imul
shl
xchg
dec
jnp
cltd
imul
fldenv
xor
add
and
sti
dec
fsubs
sub
mov
jge
xchg
movsb
dec
mov
pusha
mov
repnz
mov
js
aaa
es
fs
popa
xor
mov
cmp
and
js
sub
adc
cmpsl
dec
loopne
mov
jns
adc
push
je
xchg
mov
test
xchg
outsl
sbb
test
shl
mov
push
cmp
dec
sbb
rcl
and
stos
pop
cmp
mov
xor
in
std
jae
mov
repz
vmwrite
lahf
jge
lock
sbb
adc
negl
fwait
ror
int
icebp
out
repnz
sub
pop
outsb
inc
xchg
dec
outsb
test
cmpsb
xlat
rcrl
push
sub
imul
lcall
outsl
out
fstpt
pop
or
sti
mov
add
cltd
into
cmp
sahf
push
dec
aam
xor
mov
push
inc
sbb
and
outsb
mov
mov
xchg
inc
add
jno
cmp
stc
xor
lods
xchg
pop
dec
jle
sbb
std
xchg
fsubrs
fildl
sbb
test
lahf
das
cmpsl
xor
jmp
rclb
mov
lahf
int
push
into
dec
cli
push
aam
in
jb
jl
int3
mov
adc
cmp
lock
inc
ficoms
loop
cmp
stos
and
mov
sub
inc
inc
push
sbb
and
lret
sbb
cmpsl
test
inc
subl
push
mov
and
enter
and
mov
repnz
pusha
cmc
push
pushf
sbb
jbe
xchg
add
rcl
xchg
scas
xchg
shrl
fstpt
in
pop
push
pop
pop
jo
imul
or
mov
add
incb
lods
lea
jb
push
inc
lds
sbb
repz
mov
and
bound
inc
or
cmp
movsb
add
mov
in
loopne
sbb
mov
stos
ds
adc
or
cld
mov
popa
loopne
mov
sub
inc
dec
jg
pushf
fs
mov
pop
aas
push
and
outsl
push
push
cmp
mov
shlb
addb
ds
dec
mov
cmpsl
rolb
xchg
adc
jp
std
push
xchg
std
adc
or
mov
fwait
sbb
loop
or
fistpll
call
cs
push
cmpsl
cmp
jns
xchg
and
cmp
leave
and
mov
gs
inc
fs
in
cmp
rorb
mov
inc
xchg
int3
pusha
and
or
mov
adc
into
mov
jl
hlt
bound
lock
dec
sub
jmp
ds
fwait
inc
mov
and
mov
mov
shll
lods
aam
jno
mov
pop
mov
leave
out
xorl
aaa
xor
imul
leave
jne
jmp
mov
add
movsl
mov
sub
fs
ficoml
inc
out
mov
lcall
pushl
fadds
dec
fldpi
rcrl
hlt
cmpb
mov
gs
sub
ret
inc
rcrb
pop
jae
or
mov
call
out
pop
dec
out
inc
push
enter
push
xchg
add
add
shl
loop
pop
xchg
test
mov
jnp
add
loop
and
pop
jnp
fcoms
mov
mov
and
std
push
pop
jge
xchg
and
movsb
mov
sbb
pushf
jns
loope
mov
sbb
jno
fnstenv
sub
out
pop
ss
push
pop
xchg
add
sbb
loope
roll
xchg
stc
pop
ds
xor
push
addb
cli
pop
xchg
push
mov
cli
outsb
nop
ret
ret
test
jg
imul
ds
arpl
xor
test
jge
cmpsl
outsb
clc
std
lock
sbb
je
pop
inc
push
sub
adc
adc
popa
arpl
xchg
cwtl
xor
fsubrl
jmp
mov
neg
loope
ljmp
pop
dec
nop
jg
addr16
sbb
xchg
lret
dec
cmpsl
jge
test
in
cli
in
pop
pop
pop
stc
mov
addr16
int3
out
cwtl
rcll
push
lock
test
call
pop
inc
aas
sarb
andb
jle
sbb
adcb
inc
mov
sub
sub
inc
xor
jecxz
mov
jg
fwait
lds
dec
test
dec
pop
dec
sub
mov
lods
and
fcomps
sbb
lahf
mov
int3
fs
lock
mov
popf
movsb
xlat
popa
repz
fistps
lds
ss
mov
add
into
xor
pop
jg
lods
enter
sub
lret
mov
scas
pop
sub
xlat
jp
inc
shrl
cmpsb
cli
mov
mov
imul
adcl
cmp
enter
sahf
movsl
sbb
mov
shll
xor
pop
cmp
int
mov
mov
mov
ret
pop
aaa
stc
jo
dec
test
rcrl
sub
fwait
mov
mov
clc
xlat
xor
stos
add
fisttpll
sbb
notb
out
adc
sbb
movsl
jo
rclb
pop
insl
jno
adc
jae
insl
pop
push
rcr
mov
jg
sbb
js
inc
xchg
clc
int
aad
sub
repz
mov
mul
adc
xchg
out
test
rcrb
hlt
imul
in
int
and
push
mov
add
mov
inc
mov
xor
or
fnstenv
stos
jb
cmp
fisttpll
and
adc
sub
out
inc
xchg
mov
in
mov
arpl
stc
test
xchg
es
push
fs
scas
enter
imul
dec
je
pop
movd
repz
xor
pop
dec
hlt
mov
hlt
fs
sarl
lcall
xchg
dec
pusha
je
mov
add
cmp
das
imul
leave
xchg
mov
xchg
cmp
enter
xchg
into
jge
jnp
es
aam
adc
aas
pusha
stos
popa
jb
fdiv
xchg
push
leave
push
in
cmpsb
out
adc
mov
repz
ficompl
lcall
dec
and
leave
and
mov
add
lahf
mov
daa
and
loop
cmp
jbe
jle
mov
popf
mov
lods
xor
mov
rorl
jecxz
adc
outsb
shll
xchg
insl
jne
sbb
lahf
lret
repnz
mov
call
jecxz
push
mov
and
outsl
out
or
jnp
push
in
into
and
xchg
and
xor
mov
jbe
stc
cltd
mov
push
lock
xor
jnp
adc
mov
adc
add
int3
mov
pop
inc
leave
inc
movsb
add
cmp
cmp
mov
jl
shlb
xor
mov
push
push
pop
hlt
pop
ja
pop
int
out
adc
sbb
sub
es
nop
cmp
and
mov
shrl
bound
fsubr
jbe
loop
popa
insl
aam
and
dec
and
mov
je
mov
div
xchg
sub
mov
int
lcall
adc
addr16
jp
sbb
cs
cmpsl
dec
out
popf
mov
inc
pop
hlt
jle
add
movsb
mov
xchg
jg
cmpsl
mov
xorb
je
jp
in
in
jge
shlb
loop
dec
fimull
aam
loopne
push
sub
scas
jbe
fidivrs
scas
jmp
iret
push
and
cwtl
xor
mov
mov
leave
mov
jge
aad
js
aaa
repnz
lret
mov
pop
sarb
rorb
dec
pop
test
sub
adc
fs
mov
pop
jb
rolb
fcoml
mov
sbb
xor
das
adc
inc
lock
dec
ret
and
stc
xrelease
roll
xor
clc
and
ja
ds
sbb
fdivrs
loope
fnstsw
nop
cmp
xchg
lcall
sti
sub
dec
test
fs
jle
adc
and
jae
movsl
xchg
fwait
enter
insb
inc
ret
or
mov
jmp
xchg
ljmp
dec
in
pop
and
scas
push
pop
push
sub
xor
sbb
inc
adc
ret
mov
lcall
jno
out
and
cwtl
popf
in
out
pop
mov
xchg
pusha
or
push
jbe
mov
or
mov
or
mov
and
imul
call
mov
or
daa
insb
rcll
push
je
fmull
into
enter
jle
jns
mov
sbb
roll
adc
stos
movsb
or
pusha
mov
cld
mov
and
fwait
push
ret
fidivrl
xor
int
or
sub
and
pusha
mov
insb
rorb
ds
or
pushf
jg
roll
mov
adc
xor
outsb
sbb
cmp
loopne
inc
adc
mov
int3
xor
sbb
add
jns
ret
pop
xor
or
ss
push
fisubl
xchg
int3
adc
add
repz
cld
mov
sti
xchg
stos
and
mov
pusha
and
lahf
aas
xorb
jg
and
add
jns
in
adc
cltd
jge
xchg
xor
sub
push
adc
mov
mov
push
mov
cmp
jmp
fadd
es
add
mov
movsb
xor
dec
data16
ljmp
xchg
in
enter
lret
sub
mov
jnp
cmpsl
subl
dec
ret
push
push
and
push
mov
dec
test
or
jae
jno
loop
lock
cs
dec
das
push
lret
outsb
lret
imul
and
cmp
xchg
mov
mov
cmp
scas
int3
test
dec
and
fcmovu
push
gs
push
aam
shlb
arpl
sub
stos
jg
enter
movsl
jne
ljmp
sbb
or
pop
jo
test
mov
sar
cmp
cmpsl
mov
push
fistpl
in
jmp
and
mov
jb
lods
stc
rcrb
sarl
dec
add
xor
cmpsb
popa
jae
cmp
rdpmc
push
push
ror
mov
shlb
mov
pop
hlt
jb
movsl
test
popf
lret
push
outsl
shl
push
jmp
adc
std
or
mov
xorl
pop
loopne
push
mov
ret
out
mov
push
std
rcll
mov
mov
cli
pop
xlat
pusha
scas
and
inc
mov
and
mov
sbb
or
xchg
pop
out
ja
add
mov
mov
or
cmpl
xor
daa
mov
mov
xchg
inc
add
daa
xchg
cmp
leave
xor
jns
sbb
stos
jp
pop
inc
lods
leave
data16
pop
lock
jne
jmp
je
dec
add
jnp
shll
loop
out
clc
push
mov
js
inc
inc
mov
dec
mov
ss
cmp
mov
stos
arpl
xchg
cmpl
fisubs
repz
pushf
add
push
mov
ja
cmpsl
mov
inc
rolb
cmpsl
movsb
scas
xor
aad
pop
stos
push
pop
cs
shl
mov
jb
pop
mov
dec
adcl
mov
adc
and
xlat
dec
insl
fcoml
add
rorl
popa
xorb
push
lahf
xacquire
out
arpl
nop
in
js
sub
sti
adcl
jg
adc
stos
add
jb
sbb
xor
ja
clc
cltd
divb
cmpsl
rclb
xchg
clc
stos
in
lds
jo
out
lahf
dec
rclb
mov
mov
movsl
push
pop
push
cs
std
adc
push
movsl
cmpsb
stos
lret
cmp
jl
mov
clc
dec
push
xor
dec
in
ja
into
std
ret
pop
or
jp
or
pop
dec
xor
test
sub
sbb
push
mov
or
xchg
or
cld
mov
lcall
fldl
push
cmp
in
push
push
mov
data16
fwait
repz
arpl
outsl
jp
js
rol
dec
mov
sbbl
mov
push
pop
sub
loope
xchg
mov
sbb
pop
stos
fcoml
or
sub
in
enter
pop
xchg
ret
jae
test
fisttpl
lahf
outsl
roll
jle
mov
and
test
pop
jno
pop
lahf
inc
push
mov
xor
iret
js
sbb
add
dec
fs
mov
mov
addr16
cmp
mov
ja
aad
jbe
gs
nop
rol
dec
rcl
bnd
stos
xor
lcall
mov
das
mov
push
into
aaa
in
test
sub
xchg
outsb
sub
rorl
lahf
mov
nop
dec
addr16
jmp
xor
jns
add
sbb
or
fcoml
mov
jmp
jno
mov
mov
sub
arpl
push
push
adc
movsl
test
popa
les
mov
loop
fnstsw
daa
mov
aaa
das
xchg
push
dec
xchg
cltd
mov
pop
mov
pop
xchg
sbb
loopne
sbb
stos
es
push
sbb
inc
fmull
sbb
jae
movsl
fistps
sbb
test
rcll
adc
pop
push
adc
arpl
add
and
jns
xchg
subb
inc
jmp
push
and
xchg
stos
pop
xchg
mov
pop
stos
xor
pusha
jo
sub
pop
push
fstps
fstpt
pop
xor
aam
adc
mov
mov
call
jnp
jne
adc
jmp
out
push
gs
rorl
subb
jmp
add
pop
popf
add
mov
out
adc
mov
dec
pusha
das
sub
das
and
test
and
xor
es
push
leave
adc
jmp
pusha
sti
lock
adc
pop
daa
mov
clc
dec
xor
lods
pop
push
fsubrl
jmp
xor
ja
mov
das
jg
inc
filds
mov
xchg
and
mov
cmp
xor
jmp
ja
push
jp
jl
iret
sub
pop
rol
mov
pushf
test
orb
mov
cld
xor
fs
dec
xor
pop
pop
dec
mov
insb
loopne
dec
jns
mov
and
out
sub
pop
mov
push
fsubrs
shlb
mov
outsb
pop
insl
lahf
out
xchg
pusha
imul
add
mov
cli
mov
jo
into
cmp
inc
mov
inc
cltd
inc
or
js
test
gs
mov
push
mov
mov
ret
test
lods
or
sub
and
mov
sub
int3
psrlw
jo
mov
fnstsw
push
bound
mov
cmp
fwait
mov
rcr
testl
xchg
mov
push
mov
xor
adcl
sbbb
jl
movsl
lods
pop
lock
pop
imul
add
pop
lcall
fcoms
push
and
stos
insl
push
je
dec
mov
sbb
jg
dec
dec
adc
imul
imul
adc
out
sarb
and
lock
dec
and
jo
sub
pop
mov
scas
repnz
mov
mov
push
inc
je
ss
mov
stc
rorl
pop
dec
mov
pop
lcall
stos
enter
stos
imul
loopne
xchg
mov
jb
ja
push
pushf
add
sbb
int3
inc
mov
pop
mov
sub
adc
pop
mov
cmp
in
test
adc
out
cwtl
mov
sti
subb
into
mov
mov
enter
aad
leave
inc
fcmovu
repnz
repz
ss
es
divl
and
add
test
mov
push
sbb
iret
jbe
inc
repnz
enter
fwait
repnz
mov
jmp
loope
push
xorb
xchg
lahf
mov
xor
or
pop
push
mov
test
cmp
dec
popl
hlt
rorb
imul
mov
test
pop
xor
sbb
subl
mov
call
loope
cmp
call
leave
xchg
je
mov
imul
cld
sub
enter
inc
and
inc
call
movsl
loop
dec
dec
cmp
push
jge
push
sub
xor
lret
sub
popf
lcall
mov
insb
jnp
stc
push
inc
xabort
xor
xor
sub
fisubrl
fildll
push
jns
xchg
shl
cmp
incb
je
pop
jns
addb
adc
cwtl
repz
or
xchg
adc
and
lds
xchg
pop
cmpsb
mov
sub
mov
xchg
mov
std
outsb
push
in
jae
push
add
jle
cli
dec
mov
iret
fs
clc
mov
shrl
int
nop
mov
or
lds
ds
add
out
sbb
sbb
test
add
sub
mov
cmp
lcall
adc
pop
stos
push
fnstsw
roll
xchg
cmp
jno
data16
dec
xchg
inc
repnz
lcall
nop
insl
daa
call
in
lahf
add
mov
and
jb
pop
jo
push
out
push
out
jmp
aad
in
adc
fstl
sub
insb
mov
push
pop
mov
dec
test
out
or
jae
adc
mov
dec
jae
dec
nop
push
ja
cmp
mov
pop
lret
jle
push
fwait
enter
dec
pop
sbb
ss
adc
aad
movl
inc
pop
cmc
cmp
testb
popf
faddp
mov
pusha
and
leave
pop
lahf
cld
xor
lcall
and
adc
frstor
xor
or
cmp
dec
inc
push
call
js
cwtl
cmp
mov
dec
jnp
ds
inc
rorl
adc
jno
pop
push
push
dec
xchg
xchg
adc
shlb
push
je
pop
arpl
je
mov
jle
inc
repz
dec
fstps
ljmp
in
jnp
insb
data16
mov
ds
pushf
add
add
inc
or
scas
dec
rclb
mov
pop
xchg
mulb
inc
js
daa
xor
in
mov
sbb
popa
stc
adc
xchg
xchg
ss
ficoms
test
xchg
aam
cmpsl
xchg
insb
scas
imul
ret
dec
mov
movsl
mov
shr
rolb
imul
jnp
out
and
fldl
test
iret
pusha
stos
pop
xor
or
cmc
int
enter
fcompl
push
add
ljmp
test
add
arpl
ja
lret
mov
nop
movsb
clc
mov
xchg
rcrb
mov
loope
call
jnp
jno
mov
pop
pop
dec
xchg
add
mov
and
cmp
cmp
test
add
xlat
test
jge
sub
cmpsb
ds
mov
dec
and
pop
lret
ret
pop
insb
or
mov
rorb
mov
mov
les
jmp
xor
cmpsb
cwtl
and
popf
or
rcll
aaa
sbb
andl
jp
repz
push
mov
rorb
push
dec
xor
cmp
int
sub
pop
sub
repnz
jnp
mov
mov
push
stos
ljmp
jl
sub
scas
pop
xor
mov
push
stc
loopne
test
adc
ret
ret
mov
cmpsl
movsb
adc
mulb
xor
xchg
int
das
loopne
pop
jbe
andb
ljmp
int
sti
cmp
into
mov
push
mov
dec
lods
dec
dec
stos
movsl
iret
dec
inc
popa
push
push
dec
out
mov
int3
cmpsb
add
pop
pop
sbb
add
jne
and
dec
mov
cmpsb
jmp
add
fwait
data16
add
shr
dec
xor
adc
mov
mov
jno
adc
adc
pop
xchg
leave
pop
shl
xchg
add
and
es
sbb
fnstcw
xor
push
inc
mov
sbb
insl
inc
aad
mov
into
testl
dec
xor
inc
rorb
or
push
jle
mov
pop
enter
stc
dec
repz
aas
not
xchg
movswl
outsb
aas
mov
xor
and
dec
and
inc
fwait
pop
insb
imul
psllq
lea
insl
rclb
fs
mov
mov
jmp
sub
jl
scas
outsb
ret
icebp
aam
fdivrs
mov
sub
push
mov
dec
xchg
pop
aas
enter
inc
nop
sti
fwait
cmp
xchg
jno
mov
shlb
cmpsl
lds
or
pop
cmp
mov
int3
mov
push
lcall
jae
mov
shrb
imul
es
mov
dec
movsb
adc
insb
mov
and
jge
jb
loop
inc
mov
xchg
lahf
cwtl
sbb
fisubl
dec
stos
mov
sub
int
push
enter
cmp
jno
adc
pop
movsb
xor
mov
sbb
mov
pop
mov
insl
cmp
or
inc
mov
and
inc
jle
dec
je
pushf
xchg
mov
test
pop
cmp
das
dec
or
fadds
jae
cmpsl
imul
leave
sbb
idiv
fs
movsl
pop
jb
iret
insb
sub
jle
mov
dec
adc
cmp
mov
push
inc
push
add
mov
inc
push
pop
push
adc
fcmovbe
or
dec
into
pop
das
enter
out
adc
sbb
push
xor
cmpsb
pop
aas
adc
dec
inc
cli
mov
in
das
mov
popl
xlat
inc
xchg
add
xor
xor
mov
pushf
icebp
jns
bound
rorl
loopne
mov
push
mov
test
stc
clc
sbb
imull
cmovp
sbb
and
aad
fsubl
adc
outsb
test
pinsrw
notb
dec
popf
in
fwait
aaa
mov
and
jp
repnz
inc
movsl
add
loop
ret
push
pop
or
adc
lock
cmp
out
leave
pop
cmpsl
lret
test
test
inc
add
xchg
inc
negb
int3
les
cmp
fisttps
push
pop
inc
out
sbb
in
hlt
jo
sbb
xchg
jl
ret
insb
outsb
pop
mov
push
int3
xor
rol
clc
mov
jbe
jge
push
arpl
stos
xchg
loopne
pop
mov
xchg
pop
pusha
into
cld
xor
imull
loop
jno
in
xor
test
sub
mov
sbb
nop
js,pt
push
push
mov
popf
sbb
test
sub
hlt
fwait
mov
sub
ret
lea
inc
pusha
rcrb
mov
sti
fisttpll
scas
mov
out
aas
mov
xchg
es
ja
ja
xchg
push
xchg
and
leave
into
rcll
xchg
fsubrl
cli
sub
inc
enter
movsl
dec
sahf
sub
cmp
into
hlt
push
inc
out
andl
cmp
inc
and
xor
add
mov
dec
adc
leave
ss
jg
repnz
dec
ja
jle
fisttpl
dec
pop
lds
ja
mov
ja
ja
sbb
push
sbb
push
xchg
sbb
pushf
mov
xchg
adc
movsb
outsl
cmpsb
push
push
push
mov
fcom
add
movsb
movsb
insl
shrb
aad
inc
lds
sub
sbb
pop
mov
lea
out
jns
insb
rorl
loopne
nop
xlat
xchg
mov
adc
repz
test
mov
push
xor
push
shlb
fistpl
push
lock
dec
ja
std
cmp
fistps
adc
popf
negb
fs
data16
mov
mov
dec
or
les
pop
out
test
aad
icebp
hlt
pop
mov
mov
imul
and
lcall
out
mov
jg
sbbb
mov
mov
negb
ds
test
add
arpl
lea
mov
pop
cli
fcoms
and
inc
sbb
pop
dec
decb
jecxz
xchg
jle
int3
sub
jns
adc
push
outsl
aad
jbe
hlt
loope
inc
xor
les
mov
adc
xchg
lret
rorb
repz
pushf
fucom
adc
or
cmpsb
out
mov
shrl
sbb
jno
or
popf
inc
repz
imul
add
inc
inc
xor
mov
mov
pop
into
lcall
cmpsl
push
divl
rol
aam
pushf
push
lea
or
jecxz
sub
xlat
cs
pop
adc
lret
xchg
rorb
scas
inc
orb
pop
and
repnz
sbb
cmpsl
cltd
cmpsb
movsb
sahf
sbb
lret
aad
insl
xabort
insb
sub
add
push
cmp
out
inc
int3
jl
scas
adc
decb
mov
es
pop
sub
mov
insl
pusha
lahf
pushl
push
cltd
adc
jp
lret
addr16
sarl
mov
arpl
pop
repnz
shrl
xchg
mov
sbb
mov
xchg
fisttpll
in
or
imul
xchg
or
pop
cmc
cs
testl
popa
dec
adc
fstl
fsubrl
jg
scas
cmpl
add
xor
lods
cmp
mov
sub
push
jp
mov
ds
jae
jae
cmp
jbe
add
clc
sub
jb
mov
xchg
fs
movsl
je
mov
xor
std
cmp
cwtl
movsl
cmp
xchg
out
sbbb
fidivs
imul
mov
mov
cli
sarb
push
cmp
das
cmpsl
pop
test
fnsave
int
test
cld
pop
popf
lret
jbe
xorl
dec
xor
add
shl
das
popa
sbb
pop
cmp
jg
outsb
mov
mov
repz
in
scas
data16
enter
mov
sub
inc
push
hlt
and
mov
mov
mov
shrb
addr16
push
fcompl
repnz
lret
sub
xor
and
int3
push
shr
pop
cmp
leave
mov
stc
lret
xchg
pop
rcrl
xor
rcll
jg
push
and
pop
je
imul
scas
data16
jecxz
in
mov
sbb
cld
and
sahf
cmp
outsl
imul
mul
cmpsl
lcall
sti
mov
push
out
test
inc
dec
int3
jns
dec
xor
shlb
sti
repnz
sbb
cmp
add
pop
aas
pop
pop
outsb
icebp
stos
movsl
mov
dec
test
xor
jbe
mov
inc
mov
xchg
into
mov
arpl
pusha
sbb
xchg
fwait
mov
sbb
xor
jnp
cmp
js
aas
xchg
mov
xchg
xchg
dec
jno
inc
das
or
xchg
xor
dec
jle
mov
push
and
xchg
stos
fs
stos
adc
out
push
add
jbe
push
inc
jecxz
aad
mov
fdivrs
lcall
mov
movsl
rolb
sub
dec
pop
int3
aam
orb
add
orl
roll
fadds
push
mov
jmp
or
imul
pavgw
push
cmpsl
lcall
aad
dec
insb
sub
mov
mov
pop
punpcklbw
aad
insl
cmpb
popa
sub
mov
movsb
into
adc
cmp
mov
pop
add
jge
aad
dec
push
mov
xchg
jbe
lods
xchg
stc
dec
imull
xchg
mov
push
in
mov
or
sub
jne
test
movsb
into
and
out
mov
lret
cld
xor
mov
sahf
add
mov
sbb
fwait
int3
lret
and
pop
cmp
or
cmpsb
adc
fdivrl
inc
aad
cld
inc
call
dec
mov
je
gs
sbb
imul
or
sahf
frstor
pop
out
ds
repz
xlat
xor
sub
loop
jl
outsb
inc
orb
notb
js
shl
jnp
mov
aad
xchg
loopne
xchg
mov
rorb
mov
sub
lret
frstor
cs
fisttpl
inc
fmull
xchg
repz
adc
imul
cmp
mov
fisttpll
rolb
cltd
ljmp
ret
pop
lock
mov
mov
popf
pop
dec
mov
add
xchg
xchg
inc
loop
lret
mov
sub
lea
push
xchg
iret
jecxz
sub
adc
pop
sub
dec
ljmp
mov
xchg
test
xchg
mov
bound
mov
out
enter
leave
dec
add
add
push
sbb
leave
mov
icebp
and
lds
dec
mov
push
js
cmpsl
pop
jb
test
add
pop
sbb
pop
mov
jne
stc
hlt
out
loop
dec
pop
daa
ds
leave
push
rcrl
stos
ret
movsl
les
cmp
les
sbb
adc
mov
cld
ficoms
scas
xor
call
push
jae
jno
sub
jp
test
test
cmp
loop
and
stc
rol
xchg
push
sti
iret
xor
cmove
stc
inc
and
jp
frstor
stos
scas
mov
cld
sub
or
adc
jg
mov
lods
out
lret
dec
sbb
rorb
sbb
or
incl
pop
je
jp
fdivrp
or
fld
lea
xor
add
in
orb
data16
pop
pushf
adc
push
loopne
jge
push
fdivr
xor
mov
movsl
test
int
out
mov
popf
bswap
pop
push
sbbl
sub
fwait
xchg
cmp
sahf
rclb
movsl
sbb
mov
mov
dec
add
mov
sub
cmp
inc
in
jns
cmp
dec
data16
mov
je
inc
out
sbb
lods
inc
fnstsw
mov
pop
stc
call
lods
cld
mov
js
out
ret
sub
dec
sub
mov
sub
or
inc
rcll
cmpsb
mov
sub
ja
fs
lret
push
call
push
scas
and
in
pushl
rcrl
cli
ret
test
xor
inc
inc
aas
xor
and
int3
adc
xlat
dec
xor
jg
jp
movsb
out
mov
loope
mov
dec
aaa
repnz
icebp
cmp
or
and
xor
cli
ja
adc
adc
outsl
jge
pop
ret
mov
push
xchg
and
dec
popa
icebp
adc
pop
push
or
sahf
add
fisubrl
inc
mov
jge
out
loopne
fsubrs
inc
xor
mov
std
and
sub
iret
inc
mov
pop
mov
ja
push
lret
js
mov
popf
xor
stc
adc
cmp
jmp
mov
out
push
pop
lahf
and
pushf
pop
sahf
xor
push
lea
jg
roll
jae
fiadds
ficoms
aam
or
mov
insl
cmp
fstp
pop
push
lahf
call
cli
ss
add
pop
dec
aam
dec
pop
enter
lods
push
jb
shll
fistl
jbe
test
jp
and
mov
mov
repz
hlt
enter
jno
clc
ss
cmpsb
dec
ljmp
pop
aaa
jmp
inc
lds
aam
mov
sbb
mov
dec
cmp
mov
enter
bound
jg
push
les
pop
add
mov
aas
aad
sti
lret
pop
inc
aad
lahf
pop
adc
js
push
mov
sbb
jmp
cmp
jno
shrl
scas
in
out
lcall
clc
dec
es
sub
movsl
in
jae
gs
push
push
push
sbb
add
or
or
nop
cmpsb
out
dec
stc
pop
divb
test
sahf
arpl
inc
xor
dec
sbb
jns
adc
adc
sbb
fcoms
int3
fisubs
cli
clc
jg
push
movl
lock
outsl
xor
push
outsl
in
dec
lret
push
xchg
test
adc
fldt
adc
aas
push
push
push
je
jecxz
jbe
sub
das
std
daa
mov
inc
add
xchg
movb
insl
push
sub
daa
popf
movsb
dec
jmp
pop
shll
or
inc
movsb
roll
in
fldenv
out
xor
ds
dec
lcall
dec
push
sbb
adc
shlb
popf
mov
cwtl
and
and
mov
jnp
sub
jmp
jp
cmp
es
rclb
test
or
idivl
mov
inc
adc
sbb
xchg
subb
enter
mov
imul
sbb
xor
xchg
stc
scas
les
adc
call
jl
cwtl
repz
es
stos
imul
lret
rolb
lds
cltd
sbb
xsha256
cmpsb
xlat
cmp
popa
mov
xchg
mov
adc
sub
stos
enter
push
sahf
rsqrtps
je
pcmpeqb
cmp
adc
xor
pop
xor
in
adc
xlat
movsb
adc
insl
dec
out
fwait
and
mov
fcmovu
xor
mov
mov
dec
and
mov
mov
lahf
sbbb
repz
xchg
jp
ret
es
mov
mov
sub
shll
jae
sahf
sub
xchg
fwait
out
popa
add
add
outsb
dec
push
clc
push
inc
sbb
inc
pop
push
int
mov
arpl
sub
addb
jecxz
xchg
pop
outsb
xchg
pop
cwtl
inc
xlat
lcall
addb
mov
ret
jo
or
jl
push
movsl
shl
xchg
inc
jae
xor
dec
cmc
push
push
ret
pop
push
mov
pop
adc
std
pusha
sarl
pop
rclb
out
movsl
sub
xchg
pop
push
mov
adc
dec
mov
stos
mov
arpl
push
loop
push
and
xor
into
adc
xchg
pop
repz
push
dec
cmpsl
and
scas
xorb
jl
jmp
lcall
xchg
dec
lahf
pop
and
cmp
outsb
addb
popf
xchg
push
je
ret
addr16
mov
jb
movsb
sbb
push
negl
test
out
jg
inc
ljmp
stc
fsubrl
movsl
push
mov
pushf
mov
ret
xor
bswap
inc
aad
mov
enter
testl
int3
or
jl
fs
int3
inc
test
mov
les
repz
int3
pop
je
lahf
inc
int3
mov
addb
ss
xor
or
mov
push
iret
scas
idivl
pushf
cmp
xchg
dec
cli
or
popf
andb
inc
jecxz
in
or
and
jle
sbb
mov
mov
xchg
fildl
xor
xchg
mov
add
and
xchg
adc
outsb
loopne
xor
movsl
or
xor
mov
jge
lods
sub
outsb
cmc
int3
cmp
scas
adc
sbb
inc
scas
pop
in
test
cmp
pop
lahf
and
add
mov
xchg
addr16
cmp
adc
int
es
bound
in
inc
inc
loope
cmp
jae
inc
adc
jne
adc
loopne
or
xchg
lcall
roll
mov
xor
or
adc
push
lods
jl
xchg
pop
gs
dec
mov
xor
leave
stos
popa
xchg
aam
mov
pusha
dec
scas
in
stos
outsb
add
jnp
mov
int
ja
cmp
lahf
sbb
arpl
add
jp
mov
jns
mov
stos
add
sbb
jle
push
mov
add
jae
shll
mov
mov
and
icebp
push
jno
das
fildl
in
xchg
and
push
pop
popa
xchg
push
je
sub
aas
push
pop
jns
xchg
repz
add
adc
clc
adc
cmp
lods
sbb
dec
mov
jb
jns
pop
fmul
push
add
or
dec
outsl
repnz
xor
xor
dec
jo
mov
lock
imul
jp
stc
add
icebp
sub
repnz
mov
sahf
or
jae
les
jne
ffree
imul
or
mov
rorl
es
fsubrs
ss
mov
rcrl
or
gs
fcomps
loop
and
je
jns
jno
or
out
inc
sub
push
xchg
cmc
cmpsb
cmc
mov
mov
push
loopne
or
pop
mov
mov
rcll
jecxz
and
sbb
xchg
xchg
or
xchg
jb
xchg
xlat
jns
sub
xchg
test
add
loopne
test
push
rcll
mov
adc
mov
mov
sar
fnstsw
dec
enter
fwait
xor
loopne
test
pop
jmp
bound
movsb
pusha
shl
xchg
aaa
mov
ds
fwait
out
outsl
adc
jno
test
inc
mov
lret
push
nop
mov
and
push
push
andl
imul
mov
js
pop
xchg
xlat
jl
add
pop
inc
aad
jb
sarl
dec
mov
pop
jae
test
je
bound
add
outsb
push
lret
cmpsb
pushf
xchg
lea
pop
lods
mov
repnz
xor
nop
rol
enter
xchg
inc
stos
scas
shll
gs
sbb
pop
dec
add
mull
aad
sbb
out
and
mov
shrl
mov
test
pop
mov
das
imul
add
mov
jl
imulb
enter
add
adc
dec
fsubl
mov
lods
es
popf
add
cmc
inc
clc
shrb
adc
cmpsl
addr16
or
mov
addr16
jg
mov
stos
inc
rcr
or
cmc
fcompl
arpl
mov
je
arpl
xchg
dec
xchg
mov
mov
cmpb
cld
cmp
rclb
je
sbb
pusha
fstps
sbb
jp
sub
imul
or
sbb
pop
pop
dec
jnp
test
cmp
bound
lock
ds
add
lods
pop
not
negl
pop
icebp
mov
jbe
mov
loope
push
out
rorb
popa
cmp
into
loope
jmp
lods
or
pop
sub
cmp
les
push
jne
sbb
xchg
mov
jo
iret
push
xchg
test
mov
into
jns
push
mov
fsub
mov
pop
shl
jne
lock
rolb
and
lods
repnz
pusha
mov
xchg
aad
jmp
jmp
mov
cmp
js
sub
dec
sub
in
ds
inc
mov
add
adc
pushf
shlb
and
loop
jg
fimuls
dec
test
iret
fmuls
testb
aad
sub
push
jne
mov
xchg
push
fs
dec
jg
xor
jno
gs
add
xchg
mov
jg
nop
ret
push
push
cmp
clc
push
xchg
fsubp
roll
cmp
adc
cltd
inc
icebp
and
fdivrl
mov
add
addl
adc
adc
ror
pop
push
push
pop
xchg
push
inc
in
scas
pusha
mov
divb
mov
loopne
lret
in
ss
xchg
loop
jae
sbb
stos
js
std
aad
mov
ss
mov
mov
push
fdivp
jno
cmp
mov
icebp
gs
incl
pop
sub
fidivs
dec
mov
inc
inc
gs
dec
aaa
fucomp
dec
scas
add
adc
cmc
rcrb
xor
xor
dec
pop
cmp
test
outsl
sbb
cmp
jae
aaa
xchg
dec
sbb
loopne
cmpsb
stos
fimull
cmp
fcomp
xchg
aas
movsb
xlat
movsb
mov
mov
inc
inc
add
dec
mov
ds
mov
pop
adc
or
loop
or
xchg
ja
mov
dec
mov
cmp
push
lea
inc
sbb
push
mov
pop
inc
add
insb
jbe
popf
and
sub
mov
mov
mov
mov
rolb
add
push
and
sbb
mov
mov
gs
test
xchg
jne
fldenv
pop
fidivrl
outsl
inc
aad
xlat
sbb
rcr
lahf
cmp
je
xor
xchg
jo
mov
and
lock
in
mov
mov
call
jnp
push
cli
dec
sbb
mov
nop
mov
test
cmp
xchg
adc
fcoms
jns
add
nop
les
sar
pop
mov
cmpsb
ds
cmpsl
mov
pop
add
inc
ljmp
fs
sbb
adc
sarb
push
xchg
cmpsb
add
and
in
and
push
add
lock
insl
loope
out
mov
and
enter
les
fnsave
inc
push
fwait
aas
jg
xchg
sbb
xor
xchg
popa
xchg
pushf
push
fcoms
xchg
sbb
inc
jns
xor
lret
push
pop
jl
insl
pop
cwtl
je
call
sbb
pop
cs
ret
mov
out
push
cmc
stos
cld
or
mov
add
add
or
inc
cltd
push
stc
dec
mov
lcall
jl
and
push
enter
push
cmp
mov
imul
out
insl
ret
sub
dec
push
dec
xchg
repnz
imul
cmp
arpl
cmp
aas
adc
pop
add
dec
push
out
int3
lds
and
cli
rclb
jnp
adc
ret
or
scas
xor
jne
popf
cmp
pop
or
add
jle
pop
fwait
mov
repnz
lds
loop
mov
clc
aas
fstps
in
jbe
push
mov
push
scas
and
adc
inc
loop
shrl
daa
lcall
or
add
and
pop
rcrl
adc
adc
xor
dec
cmp
adc
stos
mov
daa
mov
mov
std
xor
inc
cwtl
sub
dec
sbb
sbb
adc
cmp
icebp
jmp
jg
push
or
bound
cltd
dec
aam
xchg
fcompl
in
pop
or
fs
jns
test
pop
push
sub
dec
stos
das
faddp
inc
jle
enter
imul
push
mov
jo
cli
loopne
dec
pop
mull
pop
xchg
mov
jmp
dec
sub
mov
in
cmp
rorb
imul
cmp
jbe
nop
push
stos
call
aaa
jecxz
in
mov
and
nop
xchg
mov
sbb
lret
imul
inc
and
adc
mov
xchg
insb
or
add
jg
scas
cwtl
xchg
or
shrl
or
and
xor
mov
push
mov
push
popa
mov
sbb
jge
fcoml
ret
cmp
sbb
push
adc
movsb
ror
les
xor
daa
bound
pop
push
pop
cs
jbe
sbbb
mov
js
sub
mov
daa
fimuls
fwait
sbb
inc
fmull
sti
movsl
mov
pop
fcoml
test
stos
pop
mov
ret
adc
ror
ja
dec
inc
and
jle
stc
sbb
rorb
outsb
adc
push
nop
sbb
pop
inc
jno
xchg
jge
mov
sub
aaa
cmp
push
clc
orl
jp,pn
add
cmpsb
jns
jns
xchg
add
inc
fbld
loopne
arpl
fsubrl
sbb
pop
adc
sub
jo
hlt
lods
nop
mov
sbb
cmova
outsb
mov
pop
call
push
fdivrs
push
les
nop
in
rclb
mov
dec
call
aam
int
or
dec
pop
and
ss
mov
in
jbe
fistpl
shrb
push
mov
sahf
mov
loopne
push
js
bnd
or
sbb
xchg
pop
xor
out
pop
jns
dec
cwtl
inc
enter
jg
rolb
lcall
pop
or
cmp
cmp
and
shlb
mov
mov
pop
push
insl
and
rcrl
cmpsb
btr
sbb
sbb
data16
cmp
jp
test
inc
out
lret
xor
loopne
dec
fisubs
stos
imulb
test
scas
cmc
mov
xchg
and
push
xchg
arpl
xchg
rolb
adc
lfs
sub
fstl
adc
push
enter
push
and
stc
int
or
or
daa
dec
jecxz
xchg
idivb
js
aam
mov
ds
dec
xchg
test
loop
sub
arpl
sub
push
mov
xchg
add
jecxz
cld
fisubs
fcmovne
add
xchg
pop
mov
cmp
ret
out
jo
stos
lahf
cli
and
enter
scas
inc
xor
data16
sbbl
and
pusha
xor
sbb
mov
call
inc
pushl
cmc
mov
cwtl
outsb
aam
repz
imul
dec
jge
add
mov
mov
pop
cmp
lea
xor
fidivrl
jae
hlt
mov
sbb
out
xor
outsb
ljmp
daa
sub
sbb
cmpsl
outsb
sahf
lods
push
out
bound
add
enter
dec
jb
jns
addb
dec
cs
insb
pop
ret
dec
vcvttsd2si
dec
and
stos
lods
hlt
mov
xor
sahf
lock
sar
mov
jmp
inc
sti
xor
adc
movb
add
push
stc
jb
sbb
add
pop
mov
clc
jle
inc
mov
cs
cltd
ret
lea
in
pop
add
sbb
pop
cmp
push
xlat
mov
scas
orb
and
mov
mov
pusha
and
pop
or
cld
lods
add
ljmp
aam
sub
inc
out
adc
push
add
mov
cmovno
cld
test
pop
xchg
xor
enter
dec
cmp
shl
scas
dec
fsubrs
out
push
mov
or
mov
mov
add
mov
arpl
jno
pop
xchg
popa
test
ret
xor
sub
adc
xchg
inc
testl
scas
cmp
je
nop
mov
jne
xor
xor
cmc
add
testb
gs
sbb
push
int3
cmp
in
xchg
jbe
xchg
into
and
aas
inc
dec
inc
pop
mov
xor
loop
inc
cwtl
call
aas
mov
fisubs
in
das
push
cli
pop
cmpsb
xor
mov
test
pushf
loopne
xorb
insl
pop
push
cmc
lea
cmp
mov
call
add
add
xor
ret
shll
jecxz
mov
ss
jb
ds
loopne
push
cmpb
cmp
movsl
mov
dec
pusha
pushf
mov
pop
mov
outsl
stos
cld
icebp
push
into
adc
push
add
mov
popa
push
nop
fwait
sbb
icebp
enter
xor
pop
mov
mov
jbe
push
les
sub
dec
pop
ret
cmp
in
subb
scas
and
mov
sbb
aad
and
add
in
sbb
fprem1
mov
mov
test
jg
mov
mov
icebp
in
sbb
fs
pop
imul
push
outsb
mov
mov
es
mov
or
push
insb
out
sub
xchg
mov
xchg
lock
cli
adc
xchg
sbb
fwait
dec
dec
jecxz
filds
pop
dec
inc
sbb
addl
sbb
and
push
lock
daa
sahf
outsb
sbb
andb
push
mov
sbb
aaa
inc
cmc
scas
test
sbb
hlt
pop
call
dec
leave
cli
xchg
mov
push
dec
mov
push
sub
and
lock
pushf
dec
xlat
xor
inc
cmpsl
popa
scas
cld
shl
adc
pop
adc
xchg
testl
or
pop
or
pop
cmp
mov
mov
xor
cwtl
stos
cmp
xorl
ficoml
mov
data16
push
mov
mov
dec
xor
clc
sti
push
mov
and
sbbl
leave
int
fnstenv
sbb
aad
popl
mov
jmp
popf
test
sub
jl
jl
dec
jae
mov
inc
fstpl
std
sbb
pop
lods
shll
lods
push
mov
fdivrl
pop
mov
xchg
mov
mov
mov
cmpsb
jg
sub
jg
inc
adc
jno
loop
push
popl
inc
push
pop
mov
cwtl
lock
mov
mov
pop
xor
mov
cmpsl
in
pop
adc
jo
cmp
inc
inc
in
shrd
or
mov
aaa
ljmp
cld
aas
pushf
in
decb
cli
pop
insl
les
lret
mov
and
xor
mov
das
ds
pop
sbb
call
nop
sarl
cmp
scas
loopne
jns
dec
loop
int
mov
fdivrl
insl
mov
mov
loop
mov
clc
or
cmp
push
add
sub
push
inc
inc
mov
add
add
adc
xchg
dec
xchg
jl
lret
dec
push
cmp
push
sahf
fcoml
enter
pop
cltd
and
pop
test
lret
icebp
fidivl
arpl
lcall
ja
mov
mov
test
mov
or
aaa
cmovns
push
dec
test
leave
jae
dec
leave
mov
push
icebp
insb
stos
fstpl
shlb
xchg
fstpl
ljmp
push
add
jbe
repz
ds
mull
loop
mov
stos
mov
mov
xor
jl
in
stc
jbe
mov
dec
xor
out
cmp
lds
mov
add
dec
adc
xor
jno
mov
nop
fisttpll
mov
cmp
jbe
inc
push
mov
mov
pop
adc
cli
andl
lcall
loop
push
mov
cmp
mov
adc
xchg
in
or
daa
mov
jo
cmp
or
pop
jmp
inc
push
fmuls
in
popa
jns
inc
cmp
popf
cmp
leave
mov
hlt
mov
mov
test
pusha
iret
aas
mov
xchg
stos
imul
imul
lods
push
mov
xchg
jbe
in
mov
ljmp
dec
or
push
adc
loopne
lret
mov
mov
outsb
incb
divl
leave
xchg
aam
mov
jno
out
mov
xor
icebp
xor
push
call
jns
inc
fwait
icebp
movsb
xor
adc
add
movlhps
and
mov
mov
add
popa
clc
add
add
pop
js
frstor
arpl
sti
xor
mov
pop
mov
sbbb
mov
and
gs
ficoms
repz
inc
dec
pop
push
xchg
mov
add
cmp
iret
xor
test
mov
outsl
enter
xchg
int3
test
in
ret
xchg
pop
gs
mov
ljmp
pop
dec
jns
and
test
cmpsb
int
lods
fcmovnb
push
pushf
cmp
push
lea
sbb
pop
lock
ret
dec
sbb
cmp
arpl
in
stc
subb
pop
mov
add
shrb
stc
push
sub
mov
or
sub
or
jbe
push
pop
or
xchg
xor
into
outsb
push
cltd
pop
ret
mov
mov
lods
or
movl
popa
sub
hlt
je
mov
mov
push
sbb
ret
fsubr
cltd
sbb
and
aad
mov
sub
push
mov
imul
imul
fisttpll
repnz
cmp
ret
pop
sub
xchg
sbb
roll
add
sahf
push
jmp
dec
xchg
leave
loop
movsb
test
pop
dec
and
sub
addr16
xor
pop
aaa
mov
sub
fiadds
cmp
push
mov
inc
bound
fs
loop
add
mov
or
xchg
test
movsl
stc
addl
adc
mov
roll
subb
pop
adc
jl
jl
out
fwait
sbb
inc
hlt
in
pop
lds
fsts
push
les
cmp
lahf
fadds
xor
insl
loope
aaa
xchg
jns
add
cmp
fisubl
mov
mov
mov
xchg
lret
out
cmpl
ret
test
nop
aam
outsl
outsl
rorb
bswap
xchg
and
jae
sti
clc
outsb
dec
lds
test
and
add
xchg
fs
pop
rcll
mov
mov
out
cmp
pop
sbbb
xor
mov
push
dec
jmp
xchg
ret
call
xor
rcr
push
jnp
pop
icebp
xor
rcll
mov
fsubs
mov
aam
pusha
lds
pop
test
mov
icebp
push
je
jle
xchg
outsl
leave
sbb
les
add
pop
inc
lods
push
xlat
sub
xchg
fisttpl
push
in
dec
mov
cltd
mov
sub
fisttpl
fisttpll
cmpb
push
mov
dec
or
cltd
cmp
addr16
pushf
stc
push
mov
adcb
out
adc
aam
jl
aad
add
adc
repnz
mov
fs
lcall
ret
inc
int
add
inc
inc
pushl
into
jg
mov
pop
jnp
pop
out
fwait
gs
iret
add
ss
mov
xor
push
ficompl
out
mov
push
cmp
pop
insb
fs
test
adc
gs
push
push
adc
dec
add
mov
out
mov
xchg
lds
std
call
cmp
inc
xor
sarl
cmp
cmp
ja
movb
adc
dec
out
es
mov
add
out
push
xchg
fimuls
jbe
add
sub
push
icebp
push
jmp
les
fldt
stos
add
sub
jo
inc
push
adc
loop
jno
adc
dec
repnz
test
jl
pop
mov
push
icebp
out
adc
shr
ss
aaa
jae
mov
stos
and
lret
push
mov
add
adc
and
stc
pop
fistpl
jbe
mov
cmp
inc
ret
add
xor
inc
push
xor
cmp
add
jmp
cmp
cmp
push
lea
pop
addl
jb
jnp
jle
mov
fldl
fnstenv
pop
push
rorb
or
pop
cmp
pushf
scas
or
or
inc
mov
mov
imul
sbb
cltd
add
pop
fbstp
lods
jmp
sti
add
ds
fidivl
and
repz
icebp
nop
jno
addr16
dec
dec
mov
push
out
push
or
pop
sbb
loope
ss
inc
jge
insb
enter
cwtl
roll
ffreep
dec
xchg
pop
inc
push
push
jmp
mov
mov
jl
mov
ljmp
in
sub
ret
jl
iret
cltd
mov
iret
jo
aam
xchg
movsb
test
adc
sbb
cmp
movsl
dec
or
enter
lods
ja
adc
je
mov
sbb
test
ljmp
xchg
ds
sbb
add
cmp
jecxz
jmp
ja
dec
mov
lea
xor
cmp
ljmp
mov
mov
cld
cmp
mov
lds
push
push
outsl
pop
push
jle
inc
sub
js
nop
rcl
add
cmpsl
es
add
aas
adc
mov
shl
mov
push
pop
sub
call
ds
push
or
icebp
jns
jns
icebp
cwtl
imul
adc
call
inc
add
or
xor
and
aam
cmpsb
xor
inc
decl
inc
aaa
mov
hlt
ljmp
mov
cmpsl
cmp
js
inc
sub
test
sub
movsl
sti
shl
and
sti
xchg
out
out
incl
rorl
jbe
jmp
fisubs
repnz
add
xorb
cmp
std
in
sahf
jno
cmp
push
cmp
inc
fwait
push
test
pop
in
mov
rol
andb
stc
loopne
movsl
xchg
loopne
mov
dec
jmp
lret
mov
sbb
push
lods
std
das
add
mov
fadd
int3
pop
push
daa
mov
mov
cmp
pop
in
sbb
mov
push
mov
push
in
pop
adc
cs
dec
test
mov
in
pushf
push
mov
shlb
iret
mov
pop
loope
filds
jle
fldcw
pop
out
cmp
jae
mov
push
test
fcoml
inc
xor
outsb
daa
shll
fadd
dec
pop
jnp
hlt
scas
fidivl
dec
cmp
dec
jle
mov
sahf
loop
pop
push
pop
je
popa
out
cmp
adc
cmp
mov
mov
aas
stos
lods
cmpsb
jo
push
xchg
mov
xor
mov
sub
xor
test
hlt
faddl
mov
and
jp
jae
pop
mov
fcmovb
mov
in
cmpsl
std
add
sbb
inc
jg
mov
pop
lahf
sbb
mov
mov
cli
mov
inc
push
fisubs
mov
mov
iret
ret
mov
fcoml
add
inc
lcall
inc
xor
mov
jg
in
xor
mov
xor
imul
xchg
adc
mov
pop
mov
fiadds
fs
cmp
and
std
cmpsl
fdivr
mov
icebp
cmp
hlt
orb
jbe
xor
and
add
cmpsb
dec
mov
and
xor
repz
dec
sbb
clc
insl
xlat
sub
lea
xor
pop
sbb
mov
xchg
add
jmp
nop
dec
pop
fs
gs
idivb
and
nop
outsl
and
scas
jne
mov
xor
cmc
lds
sbb
popf
xor
leave
jb
outsl
mov
dec
or
push
shrb
test
fidivrs
popf
out
xor
sub
cltd
imul
loope
jl
outsb
sbb
push
push
iret
jle
mov
cmp
jg
fnstsw
push
lret
cmp
xchg
in
and
lods
movsl
test
fucomip
scas
cmc
push
adc
mov
inc
insb
push
cmc
adc
mull
int3
fsts
mov
jl
mov
rorb
fcom
cld
nop
cmp
or
cmp
insb
pop
add
insl
jp
pushf
sahf
bound
and
mov
xor
arpl
pop
test
ret
xor
movsb
mov
sbb
push
xchg
mov
outsb
mov
cmp
xor
lcall
aas
jge
icebp
loop
sub
js
or
imul
pop
push
pop
aas
cld
push
lahf
sbb
das
jecxz
fsubrs
xor
int
lahf
jecxz
pusha
lds
data16
in
int
sbb
or
icebp
jb
in
leave
mov
loope
cwtl
or
ljmp
aaa
insb
jb
jmp
and
inc
inc
xorb
dec
dec
or
out
cmp
sub
outsb
stos
pusha
sub
mov
mov
mov
jnp
xor
out
in
incb
rolb
popf
loop
mov
iret
aam
sbbl
sbb
xchg
xor
scas
push
push
jp
adc
mov
adc
push
movsl
dec
inc
xor
mov
mov
cmp
adc
cmp
movsb
out
inc
pop
ja
fistps
iret
in
ret
jg
dec
test
jnp
and
mov
lea
dec
pop
or
xlat
sbb
movsb
cmp
mov
mov
xchg
xor
lcall
loopne
stc
mov
sbb
sbb
xor
mov
or
adc
cmp
sub
adc
mov
sysenter
ret
lahf
clc
jecxz
shll
add
mov
push
test
js
int3
cld
loop
fwait
sarl
nop
loope
xchg
cld
inc
imul
xchg
pop
repz
push
ret
cmp
nop
sbb
push
xor
loop
pop
sub
aas
push
arpl
in
lahf
inc
sbb
and
adc
pop
push
push
mov
push
jmp
and
or
mov
sbb
add
fwait
push
in
repnz
sub
inc
xchg
inc
cmpsl
es
push
xor
leave
gs
mov
faddp
insl
fwait
cld
iret
rorb
rcll
jns
push
mov
pop
jbe
shl
cmc
mov
loopne
add
pop
inc
cmp
int
pop
imul
cmc
mov
lods
addr16
icebp
push
xchg
pop
cli
inc
arpl
in
pop
outsl
data16
or
sbb
daa
out
filds
repz
in
scas
lea
out
ror
adc
push
sbb
xlat
ljmp
jne
aaa
leave
scas
sarb
adc
aad
out
adc
out
scas
dec
xchg
inc
lcall
push
imul
stos
push
cltd
cld
xchg
call
xlat
mov
and
sbb
movsl
mov
mov
and
movsl
jae
das
gs
jmp
xchg
or
push
and
sahf
xchg
and
pop
ja
fldcw
fdivrs
out
cmp
ret
mov
jbe
mov
stos
push
popf
fnstsw
mov
shll
jne
ss
frstor
frndint
adc
popf
xor
add
cmp
stos
ja
inc
dec
stos
fldt
jg
mov
push
ds
repz
out
dec
or
mov
pop
dec
add
repz
cld
sbb
ret
mov
add
xor
aas
inc
push
xchg
adc
insb
fs
xorl
enter
mov
mov
fwait
shll
lods
repnz
fs
cmp
jl
les
sub
pop
inc
movsl
decb
or
movsl
cs
xchg
loopne
and
pop
cld
sbb
nopl
push
mov
inc
ja
cmp
mov
mov
jmp
add
push
push
or
daa
and
jbe
int
and
add
xchg
cmpsb
imul
sbb
xlat
pop
fsubs
add
push
movsb
push
sub
jle
popa
cltd
jnp
cmp
pushf
jge
in
xlat
lahf
lahf
ss
adc
out
sti
aas
popf
sahf
jo
sub
imul
jge
test
or
int
jmp
cmp
fiadds
roll
and
in
cwtl
mov
lea
sbb
xchg
icebp
loop
mov
xchg
outsl
cmpsb
lahf
cmp
jp
fiaddl
pop
pop
push
xchg
fld1
insb
cmp
sub
push
out
arpl
jo
inc
out
out
sub
enter
je
lock
xchg
push
lea
cmp
movb
rorb
inc
roll
mov
pop
jne
sub
adc
sbb
sub
jns
adc
out
xchg
aaa
add
loope
sbb
call
pop
xchg
aad
pop
or
popf
xchg
addb
rorl
sbb
lret
inc
mov
test
jno
jecxz
repnz
dec
mov
ret
fcomi
ret
mov
cltd
sub
in
xchg
icebp
loope
test
cmc
out
popa
jbe
imull
sub
add
nop
sub
subb
fisubs
push
push
or
hlt
fcmovnb
pop
push
jo
and
sub
test
outsb
jmp
sub
add
sbb
nop
testl
aaa
icebp
mov
insl
cs
cli
call
sub
iret
sahf
push
push
cmpsb
add
aas
jle
stos
pushf
nop
push
sbb
dec
cmp
pop
out
xor
jge
add
pop
pusha
push
push
sub
loop
call
xor
movsl
out
cltd
sbb
inc
js
sbb
loop
pop
addr16
icebp
dec
test
es
nop
mov
cmpsb
jl
sbb
out
adc
lret
push
push
pop
fpatan
inc
sarl
lcall
pop
sbb
xchg
test
inc
std
cmp
xchg
outsl
or
add
xor
popf
cmp
stos
lods
mov
scas
lret
lret
add
ror
inc
mov
dec
cmp
fdivrs
fwait
orl
xchg
inc
test
cli
pop
pop
dec
fiaddl
or
and
out
add
cmp
add
cmp
in
aam
stc
sti
push
sti
cmc
insb
into
ljmp
imul
adc
jp
enter
mov
add
in
inc
pop
push
mov
int3
es
out
popf
fmull
push
into
push
push
mov
enter
popf
lods
cltd
loopne
cmc
add
add
mov
xlat
fcomip
rorb
jnp
iret
int3
jmp
pop
lods
call
lret
das
jns
inc
leave
mov
mov
dec
inc
roll
cmp
mov
and
xchg
pop
or
fwait
dec
jg
and
add
inc
out
and
pushf
comiss
flds
mov
jno
test
loopne
dec
int
xor
insb
out
mov
or
lret
lret
push
add
jp
aad
repz
push
mov
jg
jmp
or
adc
adc
xchg
dec
stos
mov
or
into
cwtl
push
cmp
cltd
mov
jmp
jmp
sbbl
xchg
fs
mov
mov
subl
mov
pop
jecxz
lret
ds
or
add
in
mov
sbb
pop
adc
mov
sub
mov
add
into
mov
pushf
sahf
mov
dec
add
les
fwait
xchg
push
iret
dec
mov
push
leave
pushf
adc
dec
xor
add
sub
shl
add
push
icebp
mov
dec
cld
pusha
mov
xchg
and
dec
fisttpll
xchg
adc
cld
aaa
and
cmpsb
sahf
xor
adc
stos
or
sub
cmc
mov
stc
sbb
pop
gs
dec
iret
gs
adc
lret
ret
and
jnp
shlb
or
fndisi(8087
pop
add
add
jmp
in
adc
lret
mov
cwtl
insl
scas
dec
push
movsb
aas
xchg
hlt
fcmovne
sub
pop
cmp
push
add
arpl
mov
push
ror
push
mov
pop
in
out
jnp
xchg
pop
push
std
mov
out
mov
mov
arpl
push
int
iret
bound
aad
adc
lret
stc
inc
mov
jno
cmp
mov
xchg
push
jae
inc
addr16
aad
jo
call
fildll
cmp
pop
adc
xor
stos
fs
mov
lods
jae
add
xchg
mov
push
mov
and
lock
sbb
mov
fsubr
jge
mov
data16
mov
mov
test
imul
pop
jl
xchg
out
mov
enter
sbb
dec
fidivl
pop
leave
in
repz
xchg
std
xor
testb
sub
push
lods
lds
test
sub
out
addr16
sub
jb
xor
jmp
dec
mov
clc
pushl
int3
stc
fdivr
in
cld
jae
sti
mov
push
not
aaa
mov
pop
or
into
shlb
cmp
ret
xor
and
clc
dec
inc
mov
gs
xor
imul
push
sbb
xor
xor
xlat
pop
sbb
lock
sub
push
mov
mov
addr16
mov
pusha
mov
daa
cltd
popa
mov
jns
or
test
mov
fstl
fimuls
lret
psubd
test
mov
mov
mov
ja
cld
inc
push
lods
sub
cmp
leave
icebp
sbb
divb
push
dec
rcr
inc
jg
sub
int3
push
shld
testb
pop
pop
dec
mov
jnp
lods
and
dec
add
rcrl
inc
sti
test
leave
mov
sahf
push
std
mov
push
fnstcw
mov
mull
mov
and
cld
pusha
loop
lods
lock
push
or
data16
pop
dec
dec
push
lods
clc
fstl
add
cmp
inc
int3
and
lret
mov
movsb
pop
add
dec
dec
or
out
push
mov
xor
cld
add
insb
xchg
ds
add
sbb
cmp
inc
jmp
shlb
dec
int3
sub
cmp
fwait
sbb
rep
mov
cld
inc
dec
out
shlb
dec
add
mov
mov
out
mov
mov
scas
daa
mov
adc
jae,pt
and
sub
aas
mov
add
lcall
push
leave
cmpsl
sub
mov
movsb
adc
loop
jb
ret
loopne
adc
jle
in
cli
push
fildl
mov
mov
lret
or
mov
leave
xor
dec
sub
in
dec
stc
sub
je
imul
mov
lahf
lods
ds
adc
test
movl
add
ret
adc
ja
pop
scas
jp
xchg
mov
fldt
inc
outsb
popf
sbb
push
aaa
bound
or
or
cmp
adc
lods
movsb
addr16
adc
stos
jns
fcoml
fistl
and
insb
stos
rol
in
jle
mov
pop
ret
jmp
jb
fcoml
jge
add
mov
mov
add
and
popa
push
arpl
std
mov
mov
adc
adc
stc
dec
mov
sub
xor
push
mov
out
xchg
xorl
outsb
arpl
lock
pop
icebp
jae
xchg
lcall
fyl2xp1
outsb
mov
mov
sub
add
jns
fwait
sarl
pop
outsb
pop
fs
leave
adc
loope
lcall
cwtl
add
xlat
mov
sbb
pop
bound
lock
sub
fs
mov
pusha
imul
nop
xor
fidivrs
adc
push
out
cmp
loop
xchg
es
adc
pop
mov
jne
jge
fidivl
jmp
cld
pusha
mov
imul
cmpsl
inc
fcmovnbe
pop
pop
jecxz
rcrl
and
lea
clc
shll
push
popa
inc
push
lds
nop
lcall
pushf
push
cli
cmp
in
xorb
ss
pushf
jp
push
vunpckhps
pop
jle
mov
in
ror
mov
mov
jg
mov
xchg
stos
in
dec
jp
adc
out
pop
jmp
aam
ds
in
ljmp
push
adc
out
cwtl
inc
add
cmp
lods
aad
inc
pusha
push
cmp
xlat
in
push
cmpb
cmp
xchg
jnp
mov
adcb
in
popf
mov
fwait
dec
adc
lods
stc
shrl
sbb
sub
icebp
sbb
adcl
pusha
jg
sbb
xchg
shll
pushf
clc
outsl
imul
push
jb
sbb
cmp
outsl
push
sti
mov
mov
fcomp
dec
bound
mov
in
call
rorb
loop
push
int
mov
xchg
arpl
pop
mov
test
out
mov
das
pusha
sub
pop
addr16
or
lret
sub
push
ret
into
adc
inc
pop
subb
jns
lcall
sub
adc
push
notb
sub
inc
rorb
movsl
mov
popf
xor
mov
mov
loope
lea
repnz
repnz
push
es
dec
mov
adc
mov
leave
lock
pop
loop
xchg
cmpl
or
call
pop
fists
mov
add
mov
ja
mov
or
mov
enter
adc
add
ja
pop
cmp
loope
mov
pop
or
cmc
sub
push
movsb
mov
dec
lret
mov
les
and
subl
pop
xchg
aad
add
jbe
cmc
adc
push
sub
icebp
repnz
repnz
push
sahf
sbbb
push
xchg
stc
scas
sarl
add
pop
pop
cmp
or
ss
or
mov
mov
jp
xchg
rcrb
andl
sub
mov
sub
mov
pop
jae,pn
pop
pop
int
sbb
inc
mov
rorb
inc
dec
mov
shlb
rorl
mov
sub
lock
jge
repz
js
jmp
addl
dec
mov
mov
movsb
add
pop
sub
inc
push
inc
pop
xchg
inc
in
cld
or
sub
xor
push
imul
out
sbb
sub
dec
push
mov
or
in
pop
ja
cs
dec
jne
test
mov
push
pop
jbe
addr16
and
jmp
and
js
mov
fucomi
outsl
insb
xchg
popa
je
cmp
loope
rorl
pop
dec
push
lods
sbb
bound
ret
sbb
xor
sbb
leave
mov
dec
and
cmp
pop
movsl
pop
jge
ss
xchg
insl
lea
add
xchg
mov
out
popa
xor
push
mov
aaa
ljmp
xchg
icebp
adc
mov
mov
xchg
test
adc
mov
shrb
push
ss
adc
int3
push
cli
push
dec
xor
sub
dec
push
push
aam
mov
loope
in
cmc
add
in
test
jmp
ss
fimuls
cmp
push
ret
stc
sub
push
mulb
cmpsl
push
push
xorl
xchg
in
sbb
fwait
paddsb
aas
lock
repnz
mov
arpl
aas
sub
divb
pop
lret
ror
stos
push
lock
cmp
out
add
add
xchg
repnz
push
mov
aaa
inc
notl
ficomps
sub
cmpsl
mov
in
stc
add
jnp
aaa
pop
cmpsl
stos
dec
xchg
shll
pop
mov
in
cwtl
jbe
push
pusha
mov
leave
inc
push
adcl
test
or
mov
adc
insb
jno
hlt
adc
es
ss
pop
sbb
xchg
mov
sbb
mov
add
aad
push
daa
push
hlt
insl
cmpl
in
jp
cmp
repnz
or
or
jecxz
fs
je
sub
int3
imul
push
xchg
repnz
push
movl
and
pop
sbb
add
mov
and
mov
data16
pop
shl
inc
mov
or
xchg
push
mov
and
and
mov
test
stos
push
dec
aam
popa
inc
leave
xor
adc
cwtl
sub
ljmp
pop
cs
push
mov
hlt
adc
mov
mov
jge
inc
jne
mov
lea
mov
pushf
in
mov
sub
mov
inc
sub
xchg
aam
sti
xchg
std
sbb
mov
daa
sbb
cwtl
mov
rcrb
mov
movsl
vmovapd
push
sti
xor
push
fstpt
aam
test
sub
sbb
mov
repz
sbb
cmp
pushf
test
mul
jns,pt
mov
dec
cmp
lock
or
lcall
neg
add
jnp
in
mov
sub
xchg
push
ss
repz
out
lahf
sub
push
clc
jge
bound
mov
adc
mov
inc
fs
shrl
rcr
add
mov
mov
push
lahf
adcl
jp
sbb
sahf
mov
movl
test
fidivrs
mov
add
das
ficoms
movsl
inc
and
popf
inc
push
mov
jmp
mov
or
in
add
xchg
imul
sarl
jle
mov
jno
in
dec
fstpl
movsb
push
mov
sbb
mov
sti
cmp
fs
or
movsl
das
in
stc
out
lds
jp
loope
pop
repnz
jno
cmp
pop
jmp
and
sbb
cmp
int3
repz
shl
jecxz
jo
shl
mull
leavew
mov
sub
dec
dec
add
es
push
xchg
add
andl
imul
in
in
pop
adc
das
xor
cmp
mov
sbb
lock
fbld
and
into
pusha
mov
cmp
cs
andb
dec
movsl
jns
sub
lods
sbbl
push
add
pop
cmpsl
dec
fidivrl
lock
rcll
sub
fwait
mov
arpl
xchg
or
dec
push
add
mov
sahf
and
pop
jecxz
sub
adc
or
shll
mov
addb
hlt
leave
cmp
xchg
push
fidivs
out
lcall
out
loopne
inc
jo
icebp
insb
fldcw
mov
mov
pop
jp
cmpsb
cmpsb
push
jmp
lret
out
js
adc
mov
fists
ss
inc
dec
mov
test
pop
mov
movsb
fsts
sbb
cmc
out
adc
inc
cs
in
inc
rcrb
push
lahf
sbb
push
hlt
lcall
mov
adc
push
cmp
inc
jae
mov
rorl
scas
leave
sahf
push
pusha
pop
sti
adc
mov
xchg
lods
mull
adc
pop
and
enter
jns
push
push
fnsave
test
pop
clc
test
sahf
leave
les
pop
fdiv
lret
daa
cwtl
pop
jle
daa
imul
mov
jmp
xchg
ret
jae
inc
pusha
lret
lock
test
lahf
adc
jl
insb
mov
or
xchg
xorb
cmpsl
mov
cwtl
insl
scas
mov
mov
arpl
outsb
mov
add
lcall
data16
sarb
mov
jg
in
nop
cmp
int3
mov
sub
and
nop
cmp
das
push
gs
aaa
jg
inc
xchg
dec
bound
mov
xchg
xor
mov
sbb
mov
add
dec
hlt
mov
aad
icebp
nop
test
adc
xchg
clc
outsb
xor
push
adcl
add
and
into
adc
enter
pop
outsb
sub
cwtl
out
xchg
repz
out
xchg
jmp
inc
xor
xchg
pop
test
and
and
pop
pusha
addl
orb
mov
ds
cmpsb
loop
les
or
popa
ret
dec
lds
sbb
dec
fidivs
inc
pusha
adc
or
data16
mov
and
nop
cmp
jle
outsb
std
int
movsb
andl
xchg
dec
int3
mov
test
outsb
add
sbb
divl
in
sub
or
or
sbb
cmp
xchg
xchg
ja
push
xchg
adcl
adc
gs
inc
lahf
sub
stc
mov
out
inc
aaa
pop
cmp
jge
cwtl
pop
pop
fidivrl
aas
inc
popf
push
mov
sbb
or
push
jmp
adc
sub
dec
fsubrl
mov
mov
mov
push
lret
subl
push
ret
xchg
jb
loope
adc
imull
into
and
add
and
clc
pop
fiadds
push
call
dec
cmp
mov
fldcw
stc
outsl
xchg
mov
mov
xor
cs
loope
mov
sti
xchg
cmp
mov
aas
mov
shll
movsl
out
clc
cwtl
dec
push
xchg
sahf
push
and
ret
sbbl
push
gs
data16
outsb
dec
pop
aad
lret
cli
add
dec
in
xor
sub
mov
push
add
add
inc
iret
push
imulb
push
pop
loopne
ss
jne
mov
fisttps
add
push
lods
movsl
cmpsb
stos
and
and
daa
jne
loop
push
adc
mov
and
push
mov
inc
xchg
mov
jb
stc
cmpb
jno
push
fwait
cmpsb
les
mov
cmp
enter
jnp
icebp
xor
cmpsl
es
imul
ds
sub
push
outsb
mov
insb
aad
cmp
or
addl
or
or
icebp
pop
push
test
add
lcall
sub
es
mov
test
sahf
push
test
jae
adc
stos
daa
cmp
jnp
pop
jmp
aaa
inc
mov
mov
cld
jno
cltd
pop
pop
clc
mov
pop
cwtl
jg
test
xchg
pop
push
jge
xor
jecxz
xor
movsl
outsb
shlb
sbb
popa
stos
xor
pop
jns
mov
jle
sub
enter
cs
xchg
xor
pop
inc
jmp
pop
sub
fistl
dec
sub
adc
test
negb
fwait
ret
iret
clc
loop
cmp
cmc
mov
inc
jo
or
xchg
push
in
repnz
add
pop
leave
stos
jno
xchg
dec
faddl
push
pop
xor
insl
mov
cmp
cs
mov
jns
or
call
stos
lahf
jno
pop
push
inc
popl
and
std
pop
sub
in
dec
push
inc
negb
adc
sahf
out
call
xchg
loope
test
stc
push
icebp
or
stos
cld
lret
mov
xchg
mov
out
pop
in
lahf
subb
fwait
call
mov
push
lret
and
addr16
jle
add
pop
and
daa
push
fistl
out
mov
mov
out
inc
inc
daa
xor
dec
ljmp
pop
jbe
inc
subl
add
cli
iret
aaa
pop
push
out
outsb
das
cmp
and
xchg
test
or
push
mov
sarl
mov
bound
mov
xchg
test
fisttps
jbe
imul
into
mov
lods
mov
cmpsb
cmp
loop
jbe
nop
mov
sub
cmp
jg
sub
inc
mov
adc
pop
adc
icebp
mov
jecxz
shlb
pop
cli
sbbb
stc
insl
lahf
add
arpl
mov
lds
push
or
sub
lods
adc
lret
add
pop
mov
andl
dec
pushf
call
lret
pop
add
mov
xor
jge
xchg
cltd
lret
sub
xor
jo
add
insl
add
fmull
or
repz
popf
jbe
mov
xor
aas
sarl
cwtl
and
inc
test
xor
cmc
notl
leave
push
add
lret
mov
stc
call
aas
out
pop
or
push
arpl
mov
sub
leave
push
ficompl
scas
pushf
lahf
scas
dec
cmp
mov
loop
pop
add
dec
int
fmuls
shll
push
jle
sbb
and
jne
jns
iret
add
add
test
sahf
int
mov
enter
push
xchg
jae
pop
xchg
idivl
in
insb
adc
xchg
xchg
frstor
fidivrl
xor
fs
fs
lret
push
and
inc
cmp
push
adc
mov
lret
testl
mov
das
or
add
divb
leave
mov
mov
cmp
test
xchg
cltd
pop
repnz
repnz
dec
xor
or
xchg
push
das
xor
inc
adc
jae
nop
push
add
pop
xor
xchg
pushf
mov
and
push
das
std
sub
outsb
mov
lods
sahf
sahf
sub
scas
cmp
sbb
das
adc
xchg
sbb
mov
adc
mov
push
mov
mov
in
jp
add
add
push
sub
sbb
dec
push
call
fistps
cs
lret
fildll
mov
aam
adc
loop
inc
inc
sahf
sub
das
jbe
leave
add
arpl
push
add
fdiv
xlat
cmp
push
sbb
adc
mov
or
fwait
arpl
xchg
loop
jnp
cmp
dec
sub
add
jne
pusha
sub
mov
inc
nop
inc
test
lea
push
add
mov
mov
pop
sub
test
push
jo
pop
jge
inc
mov
ret
jo
sbb
cltd
imul
mov
call
sub
and
dec
mov
mov
mov
adc
or
adc
ret
dec
mov
mov
pop
cmp
adc
jmp
push
inc
adc
js
sub
and
popa
dec
push
std
loope
dec
sub
mov
add
test
inc
jnp
xor
xchg
dec
mov
push
ja
rorb
xor
xchg
mov
jg
xchg
ffree
cli
pusha
xchg
out
or
test
mov
xchg
pusha
sbb
sbb
jae
dec
add
and
add
ret
hlt
rolb
jo
sub
bound
cld
xchg
pop
int
addr16
jne
mov
mov
cmp
sub
mov
add
mov
ffreep
pusha
ror
int
hlt
inc
icebp
cmp
xor
dec
aad
ja
cwtl
addr16
jp
and
loopne
dec
dec
cmp
mov
adcl
pop
outsl
nop
mov
loope
inc
in
pop
mov
xor
cmp
mov
ja
add
ret
xor
and
jns
lea
dec
add
sub
xor
fwait
lcall
gs
pop
and
bound
and
pop
xchg
ljmp
pop
lds
cmp
popa
mov
fimull
ljmp
dec
in
push
mov
mov
fcomps
lea
jns
fucom
out
std
les
mov
mov
outsb
mov
mov
cmpsb
adc
cmpsl
testl
mov
push
dec
int
adcl
je
enter
mov
lret
cs
mov
jmp
popa
xor
sub
fbld
push
iret
lods
mov
bound
ret
addr16
sub
xchg
mov
out
inc
dec
jne
fwait
adc
addl
and
outsl
jne
adc
testl
stos
pop
imul
aad
xor
mov
xchg
sbb
jl
sub
fnstenv
push
pop
mov
sbbl
jo
and
jnp
loopne
nop
jae
inc
mov
movsb
mov
xor
fisttpll
xchg
adc
fmuls
ss
jmp
je
push
stos
gs
fwait
int3
loope
std
push
addr16
aad
adc
ja
dec
push
mov
pop
in
lods
dec
lret
insb
xchg
jns
shrl
xor
mov
movb
pop
cmp
daa
jge
popf
jg
lcall
xchg
stos
lods
and
stc
mov
mov
add
inc
adc
out
or
ficoms
je
xchg
and
cmp
insb
inc
adc
push
sub
fldcw
inc
and
fldl
inc
leave
jl
iret
in
cld
adc
mov
adc
fistl
imul
outsl
filds
pop
in
sbb
jae
sbbb
xor
jne
cmpsb
lcall
dec
sub
xchg
lods
dec
xchg
xor
dec
sub
sub
mov
enter
lahf
clc
testl
mov
cmp
js
icebp
int3
jge
clc
ds
movsb
sub
xchg
sbb
popl
mov
dec
cmp
mov
adc
mov
push
jge
ljmp
testb
les
pop
xchg
push
jbe
shll
adc
pop
aad
xor
lods
cmp
mov
arpl
aas
in
aas
in
mov
mov
inc
rcll
xor
daa
sub
sub
xchg
mov
fcomip
data16
test
data16
mov
pop
fildll
jp
dec
push
push
add
movb
mov
pop
out
add
push
xchg
mov
mov
xor
jg
test
pop
jns
mov
mov
jnp
push
jbe
jp
jno
shrl
popa
push
and
mov
jbe
cmovbe
pop
pop
add
jnp
cmp
movsb
mov
cmc
pushf
fidivrs
xor
jl
or
sub
jp
lods
cmp
xchg
mov
dec
jno
mov
xor
sub
idiv
pop
popa
mov
cwtl
xchg
test
jp
jle
mov
popf
mov
sti
fcompl
xchg
cmp
sbb
les
fwait
iret
jo
dec
xchg
or
sub
leave
push
and
mov
out
pop
cmpsw
jmp
or
xor
pop
mov
dec
push
sti
sub
ljmp
jge
jo
mov
shrl
mov
jp
jp
shrl
push
pusha
xchg
adc
mov
push
subb
push
push
push
mov
and
fwait
loopne
sbb
and
pop
pushf
loopne
push
cmp
sahf
xor
popa
lret
xor
cmp
mov
ja
pop
dec
xor
pop
xor
fmull
loop
jns
xor
fcmovnbe
xlat
ss
mov
lods
mov
ds
cmpsl
pop
decb
outsl
mov
subb
or
push
pop
test
imul
std
dec
mov
rol
adc
or
lret
les
pushl
mov
dec
clc
in
xor
andl
xchg
dec
jb
pop
inc
mov
jb
jae
pusha
adc
das
adc
loopne
push
mov
es
jae
jecxz
inc
or
sbb
mov
and
lea
inc
mul
mull
dec
mov
dec
movsl
mov
or
mov
jmp
sbb
ss
mov
inc
lcall
fldpi
xlat
and
xor
jb
and
lret
push
and
inc
dec
fcompl
nopl
sbb
pusha
push
pushf
and
loop
repnz
cmp
mov
je
xchg
xor
sub
insb
lahf
call
popf
icebp
fldenv
or
fcmove
adc
jmp
push
sti
outsl
loope
sbb
outsb
popf
sub
add
fiaddl
rcl
je
xchg
add
mov
mov
inc
add
sbb
nop
jne
sub
mov
dec
push
cmp
ror
lret
xor
inc
jg
mov
sbb
push
dec
or
mov
fistpll
in
pop
psrlq
ss
cmpsb
in
push
jle
pop
cmp
cmc
pop
push
xchg
or
adc
and
mov
jle
inc
ficomps
int
inc
cmp
xchg
push
mov
lahf
bound
clc
xor
cmp
jno
cli
sub
pop
cmp
xor
shlb
int3
jne
mov
jmp
adc
dec
push
add
popf
mov
mov
adc
daa
stos
mov
and
pop
pop
pop
outsb
xchg
ficomps
aad
enter
pop
dec
xchg
sbb
clc
outsb
insl
pop
repnz
xor
xor
aam
xchg
clc
aaa
arpl
lds
test
das
cld
cmpsl
xlat
mov
cmp
push
fimuls
js
sbb
shl
jno
out
je
push
arpl
push
jae
sub
lea
dec
jns
jbe
in
stc
sti
inc
outsl
rorl
or
or
mov
fs
add
jle
mov
add
xchg
mov
mulb
jge
mov
sub
sti
push
push
lret
jne
mov
scas
inc
loop
and
int
inc
daa
ds
lods
xor
pop
and
movsb
push
in
popf
fcompl
mov
fsubrs
pop
push
popf
rcrl
popf
xchg
mov
call
mov
daa
pop
cmp
cmpsb
hlt
pop
adc
movl
subl
sub
shlb
and
push
fsubr
scas
sbb
jo
add
gs
and
mov
cmp
or
out
test
add
mov
sub
mov
mov
in
mov
cmpsl
jge
and
sbb
repnz
fimull
fmulp
in
arpl
frstor
insb
mov
jb
cmpsl
push
adc
movsb
push
aas
ss
lods
or
push
jg
mov
lahf
pop
xchg
repz
add
shll
xchg
mov
xchg
jb
int3
daa
xchg
or
mov
jg
mov
pop
jg
jo
push
fimuls
sbb
adc
sbbb
loop
call
fimull
cmp
or
aam
and
sbb
icebp
fnstsw
out
pop
sbb
jge
fcoms
sbb
mov
out
sahf
push
inc
and
mov
jne
sbb
pop
fwait
push
sbb
int
xchg
test
fcoms
inc
ljmp
sub
mov
loop
mov
ja
call
add
cld
xchg
leave
xchg
push
loope
push
push
add
sbbb
jo
inc
cmpsb
adc
inc
add
push
sbb
dec
addr16
js
sbb
int3
movsb
ds
cld
inc
and
mov
gs
xchg
adcb
outsl
push
shlb
rcr
mov
mov
sbbl
add
push
mov
xor
aas
or
jge
out
mov
loop
and
mov
push
jb
and
jl
sti
push
aam
test
adc
daa
dec
dec
pop
test
jae
mov
loope
rcr
mov
mov
push
cmp
cmp
rorl
lock
xor
shll
cld
jno
mov
stos
int
sub
out
mov
push
in
mov
in
loope
xlat
sub
int3
iret
jne
sub
shll
iret
xchg
int
scas
add
enter
dec
std
mov
repz
jno
and
jno
rcrb
insb
xchg
mov
stc
in
int
sub
or
stos
mov
outsb
cmp
stos
sub
add
aaa
or
jns
iret
jae
lods
das
xchg
stos
sbb
dec
xor
lods
mov
xchg
popf
loopne
push
fadd
pop
mov
sub
cmpsl
adc
mov
add
push
push
mov
loopne
dec
cmpsl
aam
ljmp
faddl
jne
mov
mov
dec
aaa
adc
rorl
or
xchg
xchg
rcrl
pop
faddl
or
cmpsl
loop
jo
pop
and
pop
and
inc
es
insb
pop
adc
push
pop
sub
lcall
aam
sbb
sub
test
outsb
loopne
sub
lahf
push
enter
das
xlat
enter
test
inc
jl
mov
insb
les
jae
test
sbb
add
fiadds
inc
mov
aam
dec
xor
adc
js
iret
leave
loop
dec
or
adcb
dec
mov
dec
pop
in
pusha
cli
xchg
lock
and
jl
in
sbb
mov
shr
pop
xor
xor
test
pop
dec
lcall
shl
xor
cmp
inc
jge
in
loope
cld
dec
addr16
jmp
jne
jo
pushf
inc
out
call
mov
stos
ret
hlt
pop
ror
icebp
test
push
adcb
mov
add
xchg
push
mov
dec
nop
mov
push
fidivl
adc
xor
stos
daa
adc
fs
test
push
or
out
lock
nop
mov
jge
scas
hlt
lcall
jecxz
das
mov
add
push
xchg
notb
int
fisubrs
out
stos
sub
test
mov
aad
popa
movsl
and
pop
dec
mov
mov
repnz
insb
lret
enter
cmpsb
lock
dec
xchg
pop
movsb
ror
lahf
pop
pop
imul
mov
mov
xor
mov
xchg
ds
scas
inc
stc
xor
inc
sbb
pop
pop
fwait
sub
scas
push
ljmp
ljmp
xor
push
arpl
push
repnz
cs
or
add
mov
jno
and
jne
xor
int3
out
pushf
nop
mov
stc
daa
insl
dec
sub
xor
adc
jo
jb
call
fdivs
arpl
stc
sub
add
or
xchg
xchg
mov
aam
mov
std
inc
aam
mov
adc
mov
sbb
jo
inc
mov
push
cli
push
das
lods
adc
inc
movsb
mov
pop
imul
cld
push
jns
sbb
rclb
mov
jns
add
jnp
iret
faddl
sti
rcrl
mov
mov
sub
fisubs
cmp
mov
sti
iret
inc
jp
sub
out
xchg
mov
hlt
daa
call
movsl
rcrl
stc
mov
mov
into
push
fistpl
daa
mov
mov
popa
push
xchg
mov
pop
xor
inc
mov
jns
sub
rcr
pop
pop
cmpsl
cltd
fsubrs
aad
push
pop
mov
int
mov
dec
lcall
clc
inc
in
xor
arpl
or
and
push
jnp
and
cli
inc
mov
or
test
add
in
test
out
push
xchg
push
addr16
push
dec
lret
inc
icebp
arpl
flds
xchg
sbb
xchg
mov
mov
gs
pop
ljmp
push
imul
mov
in
pop
inc
fdivrp
movsb
in
fsubl
sbb
cmc
xchg
mov
outsb
cmp
add
rorl
push
cmc
lods
popf
mov
stc
in
cmpl
adc
in
sahf
les
mov
shrb
mov
fcomp
xchg
xchg
dec
jmp
inc
insb
mov
and
add
pop
cs
jle
dec
dec
mov
inc
fdivs
adc
scas
mulb
lcall
or
out
push
xchg
jns
mov
push
mov
ret
xchg
add
xor
or
pushf
pushf
stos
popa
xor
xchg
dec
test
insb
mov
jns
mov
out
and
loope
cwtl
loop
lret
add
aad
in
inc
hlt
in
adc
daa
pop
mov
idivw
int3
iret
out
xchg
jecxz
lret
add
push
jb
cmp
popf
out
aaa
pcmpeqd
subb
xchg
xor
add
ror
jge
adc
jb
inc
cmp
aam
test
into
mov
sub
push
dec
adc
cmp
dec
movsb
pop
dec
xor
mov
fimull
jns
mov
cmc
mov
mov
shl
insl
xor
repnz
out
cld
fsubr
xchg
aad
aaa
push
testb
jmp
imul
int
push
inc
fs
inc
cltd
stos
xchg
cmp
in
or
xchg
fnstcw
enter
add
rolb
gs
mov
and
inc
and
mov
pop
fwait
icebp
test
mov
push
xchg
push
out
xor
out
sub
xor
inc
nop
push
es
push
xor
sti
stos
xor
ss
inc
sub
mov
xor
inc
cmpb
cmp
sub
testl
mov
stc
mov
cwtl
ffree
and
adc
mov
insb
shrb
je
into
daa
xlat
adc
loop
cmp
loopne
xor
scas
mov
shl
mov
imulb
movsl
ss
ss
lock
adc
call
and
dec
sub
sahf
movsl
push
sbb
shrl
jae
loopne
int3
or
das
mov
dec
cmpsl
fmull
rorb
cli
inc
push
mov
loop
lods
in
or
inc
add
sbb
adc
pop
mov
pusha
sbb
sub
dec
xchg
pop
insb
pop
xchg
lret
sbb
out
daa
lods
adc
in
sbb
pop
inc
cmp
add
inc
mov
movsl
shrb
dec
cmp
arpl
clc
push
sub
iret
push
inc
stc
push
cmpsl
imul
jp
mov
or
xor
sbb
clc
lods
sahf
pusha
loop
xchg
inc
in
insl
push
ror
pushl
mov
test
jbe
lds
test
rcrb
lret
shll
lcall
cmpsb
fucompp
sub
mov
adc
xchg
icebp
xlat
and
mov
nop
ret
inc
fs
mov
ret
and
imul
out
mov
add
test
add
data16
pop
pop
scas
jns
imul
out
scas
andb
inc
scas
imul
fcomps
mov
cld
pushf
inc
inc
aas
loope
push
cmc
and
pop
inc
push
sub
test
fnstenv
ds
xchg
cmp
setb
mov
push
inc
test
das
xor
mov
pop
out
sbb
enter
outsb
sbb
push
testb
and
cli
lahf
fwait
mov
xchg
gs
dec
or
and
lret
push
jb
lcall
inc
rorl
push
xor
int3
pop
test
sbb
xchg
lcall
test
aad
dec
leave
fnstenv
or
add
ror
inc
les
push
sbb
cltd
mov
dec
lea
lods
ss
cmpsb
pushf
mov
and
ret
xchg
mov
mov
mov
stc
lods
sub
outsl
sub
xchg
sub
cli
mov
sti
mov
cmpl
cmp
stos
lock
invd
jp
xchg
xor
aad
ds
cmp
xchg
lods
sahf
pop
inc
or
cmp
fcomps
add
push
sub
frstor
scas
push
lret
mov
lahf
xchg
movsl
cmp
adc
dec
cmp
scas
ja
pop
inc
jae
mov
movl
pop
jno,pt
push
lret
inc
cmp
mov
push
jmp
xor
movsb
dec
cmp
les
popf
out
es
sbb
mov
add
pop
push
arpl
pop
cmc
cmp
stos
mul
mov
movsl
dec
out
sub
push
and
xchg
sub
imul
push
add
cwtl
fidivrl
jmp
adc
dec
mov
jge
pop
mov
mov
rcrl
das
xor
mov
fdivl
adc
push
in
iret
popa
fadd
shll
cmp
pop
icebp
test
jl
insb
das
inc
sahf
jp,pn
call
dec
pop
fisubs
loop
sub
add
xchg
push
mov
or
push
jns
inc
popa
mov
jge
or
movq
insb
repz
test
hlt
mov
push
fistps
dec
mov
aaa
pop
popf
xor
dec
cmpsb
cwtl
pushf
mov
xchg
nop
sarl
or
jo
and
js
mov
ror
btr
loope
mov
sub
xor
stos
addr16
mov
rcll
pushf
and
dec
add
outsl
xchg
or
filds
push
xor
fisubrl
scas
xchg
adc
sbb
ret
inc
cltd
or
incl
aaa
cld
cld
insb
testl
push
das
inc
rcll
decl
xchg
jnp
mov
repz
adc
out
pop
lock
sub
cmp
add
lds
into
aam
push
sbb
cmpsl
in
pop
pop
pop
and
ficompl
cwtl
in
jb
jae
add
mov
jne
cli
sbb
mov
or
cmp
jp
je
xor
imul
add
xchg
shlb
jae
sbb
in
add
insb
pop
lahf
sbb
xor
and
add
adc
xchg
lcall
lret
aam
mov
inc
xlat
pop
adc
into
xor
xchg
add
ja
dec
or
cmp
or
lret
cmp
or
pusha
popa
je
cmp
je
loopne
pop
shl
mov
mov
inc
inc
ret
into
xor
scas
loop
adc
mov
icebp
mov
add
and
add
or
jmp
and
dec
xchg
inc
and
jo
pop
inc
es
mov
pop
xor
mov
loope
neg
jle
xor
ficoml
sbb
es
xor
imul
push
xchg
in
xor
jnp
add
jbe
outsb
inc
jp
adc
dec
mov
fcoml
outsb
stos
dec
push
pop
out
jge
popf
push
push
mov
ret
push
pop
push
popf
sub
test
in
inc
xchg
shrl
rcr
pop
inc
fldcw
mov
cmc
aas
inc
or
dec
inc
mov
ja
dec
push
addb
mov
test
sbb
adc
mov
mov
xor
dec
sub
movsb
ror
adc
mov
inc
jle
nop
inc
jmp
cmovb
fdiv
gs
jno
pop
xchg
fidivs
insl
imul
mov
ffreep
mov
jne
mov
ret
cli
dec
mov
in
out
dec
xor
test
cmp
pop
in
mov
lods
std
nop
ds
enter
cmp
scas
dec
scas
mov
outsb
sbb
push
loop
cmp
push
sub
leave
inc
cmp
inc
xor
ss
testl
gs
std
das
fs
push
js
pop
dec
ljmp
jbe
imul
inc
je
sub
pop
mov
jbe
mov
mov
test
pop
dec
data16
aaa
push
and
movsb
cmp
inc
cmc
test
jne
push
push
dec
aam
aad
rol
inc
insb
repnz
inc
jae
shll
mov
insb
inc
movsl
mov
pop
pop
or
fnstcw
push
outsb
mov
cmp
repz
lret
adc
sarl
inc
popf
imul
mov
dec
sbb
loopne
outsb
fcoml
out
sbb
call
out
aas
pop
inc
rclb
xchg
fs
lock
dec
push
divl
popl
adc
dec
test
jb
xor
dec
cmp
mov
and
cmpsb
mov
inc
ja
pushf
pop
xor
std
add
ljmp
addr16
mov
jbe
loopne
push
push
jne
push
inc
hlt
and
add
jb
inc
call
cli
adc
mov
clc
inc
sbb
xchg
sti
push
stc
rcrb
xor
fnstcw
mov
xchg
sub
adc
pop
cld
outsb
daa
push
ss
lret
dec
xchg
dec
lods
sub
sub
mov
mov
cwtl
mov
push
outsb
mov
mov
pusha
xchg
lods
fidivrs
mov
and
repnz
js
sbb
mov
notb
shll
and
lock
ja
icebp
push
push
and
scas
pop
fadds
or
out
imul
sbb
mov
xchg
push
and
fidivrs
pop
test
add
shll
repnz
cwtl
add
sarb
mov
sbb
jmp
sub
mov
push
enter
fs
push
dec
jl
push
mov
xchg
sub
jbe
xchg
test
adc
rcll
pop
flds
insb
jecxz
cld
push
scas
cmp
js
cld
cmp
sbb
dec
push
push
fistps
pushf
dec
xor
popf
cli
into
ds
mov
jl
dec
jae
movsb
sbbb
fcmovne
and
pop
pop
add
mov
ret
add
pop
and
pushf
fcoml
sub
dec
inc
sub
jno
push
sbb
lahf
mov
push
andl
dec
mov
scas
cmp
xor
lret
adc
cmp
mov
lods
ficoms
pop
movsb
mov
into
or
shlb
push
idivl
and
sub
cwtl
icebp
mov
rclb
mov
add
aad
add
mov
xor
and
xchg
inc
jg
out
push
jo
adc
and
jle
add
jg
cmp
dec
rol
jecxz
push
ret
adc
jns
fcoms
cmp
cwtl
sub
lret
movsl
into
popa
into
js
xlat
xchg
ret
call
mov
daa
pop
clc
loope
mov
sub
test
cmp
int
arpl
jmp
jecxz
mov
mov
sbb
push
arpl
and
push
push
sti
add
hlt
movsl
shr
int3
scas
mov
enter
imul
ret
xchg
xchg
ss
mov
cld
insl
xchg
dec
pop
cmc
insl
rcrb
jp
ljmp
sahf
cmpsl
pop
aad
loopne
cmp
jp
loopne
xchg
clc
int3
int3
dec
mov
les
outsb
and
dec
out
outsb
pop
adc
insl
cmp
add
jg
xchg
arpl
bound
mov
call
dec
imul
jns
mov
pop
lea
push
xor
mov
sarl
leave
mov
mov
xor
sbb
dec
jns
xlat
xor
aam
icebp
push
dec
and
adc
pop
inc
jge
stc
std
sub
lahf
mov
dec
test
repz
test
out
and
jbe
call
mov
adc
mov
sbb
mov
mov
mov
pop
jne
insb
cmp
fidivl
out
cld
mov
xchg
rol
insl
dec
xchg
clc
icebp
adc
xchg
sbb
cmpsl
xlat
add
pop
fs
fwait
jnp
loope
fxch
popa
xchg
dec
inc
js
in
roll
push
aad
xchg
mov
loop
cmp
adc
add
dec
fidivrl
dec
popf
sbb
add
or
pop
fidivl
ficoms
mov
lea
xchg
gs
sub
mov
push
and
pop
cs
not
jnp
push
repnz
loopne
cltd
out
add
pop
pop
pop
xchg
adc
xchg
push
or
add
fidivrs
popa
sti
out
idiv
cmp
aam
jbe
xor
mov
sub
movq
xor
sub
arpl
cmc
jmp
pop
nop
cmc
xor
jo
push
cmp
add
sbbl
in
stos
jno
xchg
mov
xchg
sbb
mov
jmp
and
sub
xchg
mov
les
iret
dec
arpl
jo
push
jo
inc
jecxz
jno
adc
mov
sahf
mov
cmp
cmc
mov
movb
adc
add
aaa
in
fnstsw
clc
dec
mov
sub
insb
in
jge
arpl
pop
lahf
fdivs
daa
imul
inc
jne
and
inc
and
push
test
mov
push
sub
push
or
sub
pop
or
push
xchg
fiadds
jl
mov
push
fistl
movsb
lahf
push
xchg
xchg
jl
out
es
lcall
les
jne
loopne
es
in
imul
add
int3
add
cwtl
in
xor
sub
std
push
jp
daa
xchg
push
stos
add
cld
mov
push
call
pop
xor
mov
call
subb
outsb
or
dec
push
push
jne
or
lret
xchg
cmp
push
mov
aaa
inc
ret
mov
arpl
std
add
popf
push
pop
inc
mov
sbb
lds
decl
loop
inc
in
loop
je
dec
sahf
add
arpl
inc
fisubl
push
sbb
ret
pop
outsb
sub
mov
es
ja
xor
jo
jle
add
jmp
outsb
pop
arpl
ret
fbld
fadds
mov
bound
repnz
or
jmp
inc
jecxz
insl
fs
loop,pt
popf
outsl
push
jno
inc
cmc
mov
daa
mov
das
dec
cmp
xchg
push
inc
lcall
repnz
push
test
jle
or
pop
inc
pop
fucomi
add
pop
iret
add
aam
xor
ss
test
mov
inc
les
ljmp
push
shlb
lods
add
lds
out
jmp
cli
jl
pop
push
pop
mov
movsl
mov
jns
inc
xchg
dec
mov
mov
inc
hlt
mov
sbb
jb
outsl
cmp
pop
or
cmp
outsl
loop
jmp
pop
arpl
xchg
test
and
sbb
insb
aas
sub
xchg
mov
mov
push
int3
and
data16
rdtsc
pop
cmp
leave
sbb
pushf
lcall
out
sbb
ljmp
push
rclb
out
xor
hlt
xchg
pusha
xchg
cmpsb
clc
lea
pop
xchg
add
movsl
ds
popa
std
sbb
pop
sahf
push
dec
push
inc
mov
fdivr
inc
inc
xor
cmpsb
in
push
cwtl
xchg
shrb
es
in
test
repz
push
subb
gs
push
and
and
stos
and
mov
mov
bound
and
aad
cmpsb
lods
mov
xor
sbbl
add
add
cld
cmp
cli
sub
fnstenv
fs
and
outsb
push
cwtl
fisttpll
push
std
mov
add
lods
and
cmp
mov
push
cwtl
iret
mov
and
out
mov
pop
jg
dec
mov
das
mov
or
lahf
xlat
inc
mov
push
call
cmpsb
scas
or
das
jmp
jp
lret
ja
lods
pushf
insb
bnd
test
mov
or
and
mov
mov
adc
sub
push
je
xchg
add
arpl
ret
mov
sarb
stos
lods
loopne
dec
jecxz
adc
push
movsl
jmp
mov
add
out
or
insb
jb
push
lahf
popf
mov
jae
flds
and
lahf
in
fcoms
adc
or
mov
les
insb
add
jae,pt
sub
adc
cmp
pop
mov
imul
std
pop
or
sbb
mov
test
dec
enter
mov
jae
nop
psraw
xchg
js
jg
push
add
jg
rcrl
nop
bound
sbbb
or
enter
jo
fmuls
lock
pop
dec
fs
scas
sbb
cltd
aas
push
aas
mov
popa
push
sub
inc
sahf
xchg
inc
xchg
out
and
inc
mov
xchg
shll
adc
mov
cmpb
ret
xor
jge
add
mov
mov
outsb
aam
divl
clc
xor
gs
push
xchg
nop
mov
xchg
jo
push
test
in
nop
ljmp
nop
mov
pop
adc
push
das
mov
jmp
mov
jge
scas
push
out
rclb
mov
out
inc
pushf
jecxz
lret
cmp
push
repnz
mov
xchg
fbstp
movsb
ds
push
sbb
arpl
mov
lahf
jbe
andb
icebp
stos
in
xchg
cmc
or
test
pop
daa
or
loop
in
adc
pop
jge
or
push
pop
js
test
into
jae
dec
and
dec
inc
les
adc
xchg
je
jo
jo
push
push
imulb
dec
mov
cmc
inc
inc
adc
lret
addr16
popf
arpl
movsb
popl
into
gs
sbb
fiaddl
push
and
sub
aas
sbb
push
xchg
sbb
ret
pop
jecxz
push
je
sbb
lods
fwait
jp
sbb
sbb
push
mov
aad
arpl
and
outsl
jl
xchg
push
and
scas
pop
jle
sbbl
jo
mov
xor
into
add
lock
push
fnsave
sahf
stos
scas
jmp
ja
cmpsb
and
mov
lcall
pop
inc
fucomp
and
dec
push
sub
mov
cmc
bound
out
mov
stos
jle
mov
repz
das
cmc
bound
dec
scas
or
imul
sbb
cmp
fxch
mov
enter
push
mov
fisubl
lds
pushf
jmp
fdivs
jb
outsl
or
pusha
sbb
jbe
add
xchg
jecxz
loopne
imul
cld
adc
sbb
loope
dec
daa
pushf
aad
sti
add
pop
inc
test
imul
xchg
mov
imul
jle
push
aaa
adc
and
xchg
jbe
fisubrs
movb
fistpl
mov
mov
loopne
pop
popf
sbb
cli
insl
mov
in
outsb
stos
sbb
add
fs
aad
mov
sub
push
aam
cmp
mov
push
pusha
xorb
cmpsl
dec
lret
cmp
inc
jno
loope
in
fcompl
sub
cmp
push
daa
xor
shrb
repnz
mov
and
stos
mov
inc
inc
nop
loope
aas
ds
ret
cli
out
out
orl
andb
or
loope
jge
lds
lds
pop
mov
addr16
inc
add
or
fdivp
iret
xor
push
jge
stc
mov
inc
shr
adc
daa
add
insl
out
add
dec
cli
mov
inc
pusha
cmovo
imul
andl
xor
movsl
sbb
lea
jbe
dec
cld
xchg
pusha
mov
sub
sbb
mov
xor
pop
mov
dec
das
xor
sbb
sbb
test
fcom
cmp
in
popf
mov
adc
and
add
mov
nop
imul
fmuls
pop
subl
inc
xchg
nop
mov
imul
test
xor
iret
lods
dec
pmullw
scas
lds
loopne
push
loopne
loopne
cmp
into
fwait
in
divl
mov
pop
jle
in
mov
xor
iret
stos
sbb
fcomps
sub
test
jne
add
in
mov
cmp
ret
inc
lcall
stos
or
sbb
xchg
jecxz
adc
js
dec
jle
pusha
push
aas
mov
decl
out
lretw
and
mov
add
jg
pop
xor
xor
cmp
cmp
jle
daa
mov
ljmp
dec
nop
xchg
repz
push
ljmp
inc
adc
add
mov
pushf
and
fistpll
sub
xchg
lds
cld
inc
mul
dec
sub
int
mov
xchg
jle
add
shrb
lahf
xchg
push
mov
fnsave
xchg
jnp
mov
and
mov
push
cmp
fnstenv
xchg
paddw
shl
jg
das
in
data16
mov
cs
mov
outsb
sbb
push
in
dec
ret
out
lret
lods
std
cmp
mov
adc
inc
jecxz
xor
nop
push
into
sahf
mov
mov
mov
push
mov
movsb
jge
ds
fldcw
loop
imul
les
pop
arpl
ss
sbb
outsl
mov
mov
mul
inc
dec
fucom
push
mov
cltd
inc
inc
sbb
movsb
or
mull
jbe
and
xlat
in
push
test
jmp
stos
les
out
jl
loop
fisttpll
int
cmpsl
andb
andb
xchg
xchg
outsl
jmp
sub
outsb
lods
out
xchg
push
rcr
inc
andl
mov
lret
popf
fwait
cmp
cmp
movsl
mov
jl
inc
or
testb
sbb
out
xchg
iret
adc
sti
mov
ds
roll
xchg
push
push
rcll
jle
sbb
movsb
adc
sub
sub
sub
aad
mov
pushf
or
call
test
rclb
aaa
in
ret
mov
movsb
hlt
fs
lds
notb
mov
dec
gs
inc
xchg
aaa
xorb
and
jle
out
xchg
mov
xchg
sbb
jecxz
insb
out
out
cwtl
in
add
adc
xchg
and
stc
mov
leave
pop
add
inc
cmpsl
pop
mov
fistpll
xacquire
cs
adcb
bound
fcomps
call
xchg
movl
inc
orl
jmp
aad
push
or
movsb
fnsave
pop
cmpsb
mov
adc
push
daa
test
fmull
mov
push
pushf
arpl
clc
adc
imul
mov
pop
inc
outsl
fnstsw
mov
popf
pop
mov
loopne
dec
ror
jae
imulb
mov
dec
adc
call
inc
cmpsl
call
cwtl
daa
sbb
mov
adc
xchg
xchg
xlat
adc
jb
movl
xchg
hlt
mov
push
pushl
aad
rcl
pop
popa
push
pushf
rol
push
mov
sub
inc
cli
push
push
and
mov
mov
jb
jne
xor
fistpll
mov
sbb
or
mov
xrelease
cmp
cmc
xchg
mov
inc
xchg
in
mov
jecxz
stos
rcrb
aad
or
je
jae
sub
mov
ret
pop
sbb
shrl
push
mov
je
into
sub
mov
gs
cli
shl
int3
mov
adc
daa
rcrb
std
xor
test
in
mov
negb
cmp
xchg
lods
pop
fnstenv
push
divb
scas
imul
fs
pop
cli
dec
inc
mov
jecxz
inc
loopne
ja
setl
leave
cmp
mov
insb
adc
imul
mov
cmp
imul
xor
dec
lea
pop
loop
stos
pop
inc
cmp
add
or
add
stos
pop
icebp
adc
xor
aam
hlt
sarb
clc
inc
add
dec
cmp
sbb
adc
inc
mov
loop
cmp
xchg
idiv
lods
int
xor
mov
call
nop
in
data16
jne
cmp
int3
call
test
out
shlb
adc
mov
mov
cwtl
negl
xchg
dec
xlat
loope
nop
mov
cld
sbbb
and
aad
in
test
mov
insb
xchg
inc
jmp
iret
aas
es
movsb
mov
add
movb
pop
lret
into
cmp
mov
push
dec
jge
or
cwtl
xor
sub
stos
fistpll
stos
icebp
rol
xor
add
jne
add
jecxz
in
dec
add
mov
adc
push
and
pop
dec
fdivrl
xor
xor
cmpsb
mov
push
push
mov
sbb
sub
lret
xor
xor
insb
mov
movsl
xor
in
push
int
sbb
int
xchg
aaa
loopne
inc
mov
out
push
loopne
push
push
and
fstpt
xchg
ficompl
push
in
add
fwait
cmp
jle
xor
out
movsb
and
inc
xlat
jne
das
sti
shrb
sbb
dec
add
mov
into
xor
movsb
jp
dec
dec
xor
pusha
aas
loopne
sbb
push
pop
adc
rorb
repz
add
ret
adc
pop
xor
test
lea
in
aas
push
xchg
fidivrl
xchg
mov
fstl
loop
cmp
sbb
movsl
cmc
loopne
sbb
stos
std
or
nop
adc
dec
std
idiv
loopne
dec
and
jae
jbe
push
insb
push
dec
cmp
arpl
inc
scas
push
in
jne
jp
int
neg
cltd
outsb
adc
cmpsl
insb
xchg
test
popa
fwait
add
cmp
test
int3
jecxz
inc
movsb
lods
mov
cmc
add
das
inc
inc
mov
outsb
div
pop
mov
inc
or
aas
insl
aaa
dec
imul
and
adc
dec
xchg
arpl
jnp
push
and
out
push
loop
push
inc
bound
popf
pop
dec
movsb
jp
inc
int3
stc
scas
mov
jp
aaa
or
xor
mov
popa
rorb
lods
ds
adc
cs
dec
js
push
lret
xchg
push
adc
mov
fldt
push
adc
adc
add
les
test
ror
inc
js
add
xor
jb
rcl
popa
shrb
shlb
test
enter
sub
adc
lds
cltd
and
mov
out
fwait
mov
pop
ss
mov
lret
mull
and
adc
incb
lcall
xchg
shll
shlb
inc
addr16
mov
inc
pop
mov
xchg
xor
mov
sub
popf
dec
fiadds
pop
imul
repz
inc
sbbl
add
lods
mov
mov
mov
outsb
cmp
fs
mov
lret
popa
sar
push
ja
out
mov
cmp
push
in
dec
sbb
stc
jle
test
pop
and
addr16
iret
mov
rcrl
add
push
fisttpll
data16
orb
cltd
in
inc
pop
cmpsb
cwtl
idivb
xor
lahf
add
cmp
scas
or
mov
jge
inc
fcmovnb
popa
daa
cmp
in
in
aad
sub
cli
jmp
aam
nop
xchg
sarb
jg
jmp
and
bound
fisttps
out
movsb
out
pop
adc
add
out
movsl
xor
xchg
ficomps
mov
cmp
xchg
dec
adc
mov
lock
sbb
aaa
adc
jo
mov
addb
mov
mov
push
inc
hlt
arpl
int
ret
pop
shr
pop
repz
jb
adc
jb
cmpl
jg
xlat
sarl
jns
mov
lea
in
pop
adc
hlt
sar
rol
ds
sub
int3
movsl
cltd
test
rorb
out
mov
mov
mov
iret
pop
xchg
repnz
popf
pop
pop
nop
mov
jmp
std
xor
jne
int
or
test
pop
rcrl
imul
push
cmp
ret
stc
mov
push
xchg
mov
add
mov
pop
inc
push
inc
push
daa
test
and
sub
dec
mov
jp
sub
xchg
pop
sub
enter
adc
fnstcw
inc
imul
nop
dec
xor
sub
mov
cltd
or
inc
mov
adc
jo
or
or
test
bound
enter
mov
sbb
adc
or
hlt
in
gs
mov
lahf
arpl
lret
ss
ret
lods
sbb
les
push
mov
push
xchg
sti
inc
test
push
sub
lds
hlt
cmp
pusha
inc
cwtl
out
mov
or
neg
lret
js
push
push
and
cli
push
imul
fldenv
fsubrs
fs
in
mov
mov
into
rcrb
les
add
and
pop
flds
xorb
push
mov
jmp
inc
pop
cmc
xchg
inc
shll
xchg
sub
dec
jae
and
pmovmskb
mov
cmp
jnp
shll
push
outsl
dec
push
fistl
push
sub
cltd
push
in
dec
xor
jb
jae
notb
inc
lret
sbb
cli
sbb
rorb
inc
xor
pushf
into
push
andb
adcb
xchg
and
sbb
cld
xchg
stos
add
mov
je
cltd
and
xor
sti
repz
push
insl
push
xor
adc
out
or
dec
pop
or
xor
inc
dec
push
mov
jno
sbb
dec
xchg
scas
data16
clc
lcall
adc
out
lea
insl
or
jp
in
pop
loop
lret
jbe
mov
jbe
inc
cmp
sub
mov
icebp
push
loop
inc
cmp
push
xchg
clc
repnz
ss
push
xor
push
add
int3
cltd
and
adc
fstpl
adc
dec
fildll
and
xchg
mov
inc
add
in
jl
cmp
loop
shlb
sbb
fistpl
test
test
sub
jg
push
enter
mov
pop
xor
jns
sbbl
aaa
aad
ror
in
cs
xchg
mov
nop
or
bnd
test
je
into
mov
jge
fdivr
dec
push
mov
testl
lret
loope
sub
or
and
or
inc
mov
mov
or
cmpsl
mov
into
shlb
aad
xchg
mov
sub
lods
nop
pusha
lock
movsb
mov
xor
outsb
lahf
movsb
fistl
jg
nop
in
sbb
out
out
test
adc
sarb
xchg
aas
pop
sub
add
xor
fcomp
cs
mov
out
pop
mov
push
fcmove
mov
outsl
int
sbb
fisttpll
shl
pop
ds
sbb
lods
pop
das
cmp
jne
jno
cmp
sbb
addr16
jge
std
inc
arpl
fsubl
add
movswl
call
sub
push
jmp
nop
ret
xchg
pushf
add
cwtl
and
inc
sub
push
pusha
or
aad
adc
test
sahf
mov
dec
imul
jge
xor
daa
pop
xorl
jbe
ljmp
mov
ffree
push
dec
dec
sbb
and
stc
dec
pop
push
ljmp
dec
test
lret
mov
leave
add
fs
sahf
test
mov
jnp
shlb
add
and
mov
aad
js
sbbb
popa
out
cwtl
data16
or
testb
xlat
lds
movsl
push
pushf
sbb
push
sbb
gs
add
push
jno
cld
outsl
pushf
iret
popa
dec
or
and
add
sub
push
and
fwait
jle
mov
lahf
aaa
adc
inc
pop
pop
inc
inc
push
scas
and
scas
dec
add
into
jl
jns
jp
pop
popa
sbb
cmp
adc
scas
sub
mov
push
out
or
arpl
xor
sub
test
dec
leave
insl
repnz
pop
hlt
pop
repz
leave
icebp
aad
jge
jbe
rorl
in
popa
bound
mov
gs
mov
cmp
shll
and
rorl
int
pop
sti
add
inc
push
push
dec
sub
add
push
daa
stos
and
mov
push
fucomp
nop
jp
or
pop
sbbb
imul
out
pushw
push
ficoms
push
jle
sarl
dec
data16
rcl
mov
xor
clc
sbbb
xchg
and
push
cwtl
clc
mov
fwait
popl
ds
or
mov
fildl
addl
sbb
cwtl
mov
aas
or
jmp
imul
loop
xor
aaa
mov
inc
popf
cs
jge
popf
mov
fbld
xchg
test
aaa
xor
ret
or
xchg
dec
test
sub
xor
popf
jns
mov
aaa
sub
adc
jbe
inc
call
out
stc
jmp
mov
adc
fwait
sqrtps
push
xchg
fs
cmp
loope
cmp
adc
cmp
mov
shll
or
ficoms
outsb
neg
cmpsb
sahf
fsubrp
je
xorl
mov
and
and
mov
jp
mov
xor
cmp
mov
jb
jae
lods
and
inc
scas
out
push
push
add
lret
cmp
fsubs
cltd
fildll
push
scas
lds
sub
ljmp
dec
mov
int3
dec
jno
ss
into
mov
xor
addr16
insb
push
push
movsl
inc
repnz
push
cli
xchg
mov
sub
out
fiaddl
cmpl
dec
test
mov
dec
xor
sub
cmp
dec
add
repz
test
jb
insl
das
push
cmc
sub
pop
rolb
test
pop
lods
push
bound
outsb
insl
dec
sub
pushf
outsb
mov
mov
pop
cmp
sbb
dec
call
sub
lock
out
inc
dec
pop
popl
ffree
repz
xor
mov
inc
je
adc
and
adc
push
sub
pop
ret
lods
adc
stc
mov
lret
xor
mov
fnsave
add
aam
test
xchg
orl
adc
nop
sbb
mov
dec
enter
test
sub
mov
and
pop
movsb
jp
xor
popa
jb
ret
lret
inc
pop
jns
or
mov
xchg
outsb
pop
fimuls
inc
or
int3
in
pop
outsb
adc
sub
imul
cwtl
mov
test
push
out
sbb
cmp
repz
inc
push
sbb
cltd
rcl
xor
lahf
mov
popf
in
cmp
test
inc
cmp
jnp
cmp
test
in
fisttpll
sahf
push
pushf
add
and
scas
sbb
fdiv
lock
cwtl
dec
scas
cs
lea
cld
cmp
ss
cmpsl
mov
xchg
mov
in
pushl
outsb
add
pop
dec
stc
inc
mov
cwtl
lahf
cmp
aaa
sub
fstpt
mov
aam
xchg
stos
cmp
pop
add
lea
fdivr
and
xor
rorl
cmp
mov
sahf
shlb
cmp
jmp
test
push
sub
andb
pop
popa
adcb
repnz
xchg
daa
jno
lock
add
cwtl
push
ds
mov
cmp
jo
fsubs
adc
dec
cmpsl
into
mov
ss
and
cmp
outsl
adc
lret
in
mov
pop
xlat
lock
aad
push
xor
push
sub
dec
jne
mov
lods
ret
push
loop
inc
xor
lahf
das
mov
cmpl
push
jl
mov
jmp
inc
mov
and
hlt
lahf
iret
nop
or
pop
scas
in
mov
popa
mov
hlt
sbb
xchg
rcrl
in
push
dec
inc
sub
cwtl
mov
fucompp
das
shll
pop
cmp
cmp
leave
popf
negl
jae
test
mov
cmpl
add
xchg
xchg
inc
fdivrl
push
inc
push
or
push
push
jg
ljmp
ficompl
cmpsl
cld
cmp
insl
ja
mov
sti
lock
orb
insl
or
cmp
call
jg
sbb
mov
sbb
shrb
sub
imul
hlt
lret
mov
test
push
add
cmc
xchg
sbb
clc
dec
mov
push
sub
gs
sbb
out
repz
sarl
aam
hlt
sub
mov
pushf
xor
push
lahf
xor
les
ljmp
add
jnp
lea
and
aad
push
inc
cmp
rorb
js
int
lret
push
push
js
xchg
rcrl
sahf
stc
sub
lret
int3
inc
dec
cmpsl
push
mov
pushf
mov
std
mov
xor
xor
test
mov
cmp
clc
js
add
push
sbb
dec
fdivl
ficoml
mov
cmp
jo
xchg
dec
inc
fwait
and
lock
push
les
and
mov
and
into
mov
in
add
fldenv
mov
loopne
mov
pop
or
or
adc
or
fwait
sbb
fadds
fistpl
add
xchg
inc
es
std
dec
cmp
stos
popf
andl
or
ss
aas
pop
in
push
cmp
dec
and
jae
fstpl
shrl
jmp
loope
add
popf
dec
add
rolb
mov
pusha
test
mov
inc
adc
cmc
je
and
cmpsl
insl
idivl
cmpb
and
lret
add
gs
xchg
cmp
adc
aas
sub
mov
sbb
and
push
push
hlt
dec
cltd
outsb
repz
shll
lods
ja
push
sbbb
push
mov
mov
xchg
mov
sbb
jmp
pop
loopne
cmp
repz
cmp
push
fsubr
and
cmp
fidivs
push
and
aaa
hlt
add
sub
push
pop
sbb
ss
popf
daa
mov
and
repnz
hlt
mov
jge
or
out
ret
insl
mov
loopne
sbb
jmp
out
mov
shr
sahf
sub
xor
test
leave
fsubl
inc
and
ds
jne
or
push
rcl
call
pop
push
dec
or
push
xchg
out
lods
cmp
fnstenv
lret
stos
adc
xor
push
xchg
fcmovnbe
jge
rcrb
rorl
xor
pusha
fsubrs
xchg
push
shl
les
mov
and
stos
movl
das
xor
sti
cmc
push
shrl
cmpsb
push
and
and
or
js
outsl
lahf
sbb
mov
pop
push
fildl
pop
push
ljmp
dec
sbb
cmp
or
cld
filds
lret
jns
leave
cmpsb
xlat
les
enter
jb
loopne
jle
fmulp
fstl
cltd
xchg
dec
loop
dec
daa
sbb
js
jge
lret
push
lock
jb
fwait
pushf
pop
cs
ret
mov
mov
pushf
dec
jnp
sub
lahf
and
aad
cmpsb
cmp
or
push
push
jo
lea
sub
pop
mov
mov
cmc
inc
andb
imul
outsb
bound
lcall
mov
mov
cmp
mov
mov
pop
dec
or
sbb
inc
movsl
rep
out
ss
dec
pop
xor
or
push
fcomps
xchg
enter
aad
subl
mov
negb
mov
test
fdivrl
dec
negl
addb
xchg
sbb
fldcw
aas
inc
xchg
repnz
xchg
xchg
cmpsl
or
jecxz
shl
add
out
loopne
inc
ret
jp
addr16
lods
xor
jecxz
fsubrl
add
test
addr16
jg
jbe
pusha
dec
in
cmp
fsubs
mov
jo
cmpsl
inc
xchg
mov
sub
add
aad
mov
ret
dec
loope
dec
adc
fldenv
push
pop
ss
cmp
sbb
rcll
out
mov
out
cs
pop
sub
xchg
fcomps
or
mov
aam
fdivrs
shll
imul
addr16
fsub
clc
das
je
cmpb
add
xor
push
jge
mov
xchg
lods
stos
inc
pop
movsl
fucomi
fbld
mov
fs
test
and
imul
lods
inc
mov
cwtl
mov
xchg
jge
lret
imul
ror
imul
mov
xor
adc
cmpb
pop
pop
adc
adc
jb
leave
sbb
int3
sbb
mov
cmp
outsb
and
pop
icebp
or
daa
jmp
test
hlt
pop
mov
sub
or
cltd
pop
jne
jb
xchg
ret
ret
daa
dec
repnz
andl
ds
dec
dec
mov
dec
or
pop
aaa
jne
arpl
enter
xor
cltd
arpl
stos
in
mov
xor
stos
mov
cmp
out
xlat
in
adc
and
stc
inc
cmc
roll
ficoms
push
cmpsb
loope
leave
clc
sbbl
inc
fldenv
xor
aaa
je
and
loopne
sarb
xlat
into
xorb
adc
sbb
fstps
int3
arpl
jae
sarb
lods
cmpsl
imul
inc
dec
mov
mov
imul
loope
and
xor
mov
xor
push
cmpsl
nop
mov
fwait
and
xchg
xor
sbb
xchg
call
sbb
mov
fcomps
mov
mov
shrb
loopne
std
fistl
jp
mov
lds
dec
sbb
pop
or
or
sahf
mov
cmp
push
add
cs
testl
scas
mov
sbb
fstpt
cmp
jl
ljmp
sti
push
jmp
mov
jecxz
clc
out
shlb
ffree
fsubs
pop
cmp
xchg
test
xor
or
pop
aaa
and
pop
int
xchg
decl
sbb
lcall
jnp
add
jb
xchg
sahf
mov
add
mov
ret
testb
into
jecxz
jl
push
cli
mov
int3
sahf
mov
lods
sbb
lea
jo
adc
movsb
sbb
popa
xor
mov
fs
xor
arpl
mov
and
in
lret
mov
bound
mov
sbb
sub
mov
mov
testb
ljmp
insb
sbb
imul
ja
push
or
nop
fildl
pop
loop
ja
push
pop
bound
out
mov
inc
sub
jmp
xchg
stos
jb
js
fdivrp
and
or
jg
ret
and
roll
xchg
iret
popf
dec
pop
push
mov
mov
add
push
cld
imul
mov
dec
inc
ret
hlt
addr16
std
or
arpl
ds
inc
lret
loope
xchg
inc
pop
sub
cmp
movsl
mov
leave
jmp
or
out
and
jg
sbb
sub
mov
mov
mov
xchg
pop
dec
push
push
rcl
xor
sub
dec
pusha
and
push
aaa
in
outsb
sub
aad
push
pusha
xor
fcomps
push
dec
push
jae
adc
mov
das
jmp
repz
xor
ret
xchg
into
orb
addr16
aad
js
jg
push
dec
adcb
cmp
pop
jo
mov
or
test
cltd
sbb
idivl
fimull
sbb
stos
mov
test
mov
jbe
push
push
cltd
push
mov
cmp
movsb
loopne
mov
xchg
fisubrl
and
loopne
adc
in
sub
and
subb
cmpsl
ja
popf
xchg
outsl
stos
popf
pusha
fidivl
xchg
cmpsl
addl
mov
lcall
aaa
int3
cld
daa
shll
rcl
es
mov
mov
mov
and
mov
stos
and
xchg
pop
fisubrs
dec
xor
pop
test
push
data16
insl
xchg
fisubl
push
dec
cmc
hlt
xor
fisubrl
ret
cmp
mov
cmp
dec
insb
in
lahf
test
pop
fsubp
stos
push
ror
repz
jle
lods
mov
pop
sub
dec
push
out
inc
pop
or
jo
stos
adc
sahf
dec
xor
mov
mov
call
inc
jecxz
iret
jp
scas
mov
mov
mov
and
pop
sbb
into
jbe
mov
or
cmp
push
fnsave
inc
jae
mov
xor
dec
int
adc
mov
cmc
push
aam
or
icebp
dec
sbb
xchg
addr16
mov
xchg
out
leave
stc
xlat
and
inc
inc
xor
inc
xor
in
fcmovu
fildll
dec
ret
clc
mov
cmp
repnz
mov
xor
xchg
sub
sub
jne
dec
loopne
pop
lret
gs
inc
cmp
push
arpl
adc
inc
imul
sub
xchg
lds
inc
lock
bnd
arpl
stos
sub
fstps
insb
sub
fstps
cmpsb
dec
ficoml
lahf
pop
cmpsb
sub
jnp
ljmp
mov
pop
cmp
popf
das
pop
sub
pop
mov
push
jbe
sbb
xchg
mov
ljmp
mov
aas
pop
stos
pop
les
arpl
sbb
and
dec
push
mov
stos
add
and
pop
and
int3
xor
out
mov
rcrb
lcall
jp
mov
mov
fbstp
jne
and
in
or
push
cli
inc
xor
leave
aam
push
mov
sti
inc
cmp
faddl
mov
and
xor
pusha
jecxz
sarb
movsl
xor
stos
cmpl
xchg
imul
out
test
jno
mov
pop
mov
pop
xor
inc
cmp
into
xchg
imul
test
dec
jl
mov
xor
hlt
xchg
xchg
adc
js
mov
outsl
dec
xorl
mov
loopne
dec
outsl
leave
push
adc
jmp
imull
inc
into
add
fldz
daa
jo
mov
mov
mov
cmpsb
in
cmpb
xchg
imul
and
inc
stc
jp
xlat
push
daa
mov
or
push
mov
mov
iret
jne
push
lods
negl
mov
jb
in
mov
jle
push
lahf
xchg
xor
test
test
rorl
mov
mov
push
lret
es
ja
aam
mov
cmc
outsb
les
dec
inc
mov
rol
scas
pop
push
dec
pop
cmp
popf
mov
loopne
mov
jecxz
lea
jl
out
cmpb
jbe
mov
test
and
sub
xchg
scas
cmp
jbe
sbb
in
jo
or
data16
pusha
mov
sti
es
test
adc
je
nop
push
push
push
push
or
negl
mov
clc
cmpsb
mov
jns
fwait
or
insb
addr16
mov
mov
pop
pusha
mulb
jle
rol
fs
cmp
inc
stos
cmp
and
fsubs
xor
inc
repz
mov
adc
mov
sub
adcb
push
inc
mov
loopne
stos
add
fsubp
icebp
nop
movsl
mov
mov
mov
es
scas
jb
pushf
movsb
mov
and
movsb
mov
cs
aam
test
push
aad
jns
jecxz
cwtl
das
ljmp
icebp
loope
adc
inc
sbb
and
and
loop
or
decl
movsl
dec
jns
js
leave
sub
adc
or
cwtl
sbb
popf
xor
mov
sbb
popf
in
pop
repz
sbb
fdiv
xor
sahf
sub
pop
fmuls
lret
out
mov
xchg
jl
les
fmuls
imul
js
outsb
and
xchg
icebp
stc
lods
mov
sbb
push
in
push
mul
fwait
or
add
jle
ret
dec
add
ret
call
or
xchg
lret
mov
sub
adc
mov
sahf
hlt
rcrb
pop
sub
daa
sub
jle
call
in
call
scas
bound
xchg
cwtl
pop
mov
adc
mov
jg
mov
add
mov
push
sbb
stc
mulb
ljmp
js
imulb
sbb
jno
pop
dec
dec
adc
movsl
mov
dec
les
xor
mov
jg
jns
mov
push
jbe
xchg
adc
mov
push
mov
cli
out
and
enter
cltd
dec
lahf
jecxz
inc
pop
xchg
sbb
xlat
inc
and
aad
add
je
aas
call
fmuls
sub
lods
aad
cmp
lea
mov
aam
ja
mov
les
inc
std
and
rolb
ja
sbb
stc
js
push
aad
mov
mov
push
push
ret
push
call
mov
mov
pushf
mov
pop
lahf
push
ss
and
das
inc
ds
cli
mov
or
ja
data16
mov
sbb
orl
inc
test
repz
push
rcl
mov
stc
sahf
daa
das
scas
loop
and
cmp
cmpsl
sbb
enter
sbb
inc
sub
aaa
dec
cmp
sbb
and
adc
push
add
adc
outsl
test
xor
push
jne
fiaddl
dec
out
lods
xchg
dec
sub
js
or
mov
cli
add
dec
or
sti
lock
aas
jl
fmuls
inc
lods
cwtl
adc
test
daa
jae
sarb
jecxz
push
test
xchg
jmp
pop
add
push
fs
lock
imul
and
adc
ret
stos
inc
xchg
xor
ss
xor
mov
jns
sbb
stos
cmpb
or
jecxz
notb
icebp
rcll
sti
sub
addr16
out
sbb
iret
lret
ljmp
addr16
mov
fildll
loopne
pushf
push
popa
dec
add
mov
jg
xchg
in
mov
mov
pop
icebp
push
repnz
jo
loop
popf
jge
xchg
jg
mov
popf
out
rorb
push
sub
push
xchg
lds
out
hlt
xor
int
adc
xchg
out
insl
and
sar
sub
lahf
outsb
or
xchg
fildl
out
add
out
pop
out
jnp
jo
or
jg
or
jne
xchg
add
scas
movl
in
test
push
jne
loop
in
cmp
mov
mov
insl
andl
rcl
bound
jbe
outsb
cmpsl
lds
xchg
cmpsb
pop
mull
les
xchg
out
cmp
popa
je
iret
fisubrl
pop
fidivrs
insl
mov
mov
outsb
fxtract
int3
bound
loop
js
neg
clc
sti
xor
push
mov
mov
or
xchg
scas
xchg
adc
xchg
repz
fcompl
mov
xchg
jnp
or
sub
into
scas
andl
pop
jle
in
out
adc
insl
icebp
negb
inc
lods
jb
addb
outsb
rorb
data16
xchg
cmp
mov
ss
loopne
mov
xor
mov
sti
mov
ds
out
addr16
jp
mov
dec
jp
mov
icebp
mov
popf
nop
add
in
push
inc
mov
cwtl
mov
and
int
aas
inc
fbld
sbb
adc
add
cwtl
loopne
and
push
xchg
call
adc
sub
push
in
mov
cmpsl
cmp
js,pt
mov
push
jmp
js
mov
adc
fbstp
faddl
je
int3
in
in
addb
push
mov
inc
mov
push
ret
jl
fisubl
cmp
push
jl
and
inc
repz
cmp
in
pushf
mov
fs
ror
test
rcl
pop
sbb
not
push
jg
mov
mov
pushf
cwtl
test
mov
mov
mov
cmc
mov
mov
ja
call
mov
or
fistpl
inc
in
test
sahf
ficomps
cmc
std
call
rol
lds
add
lret
jbe
push
push
cs
sbb
jo
push
out
mov
xlat
adc
pop
dec
sarl
dec
in
cli
out
mov
inc
bound
inc
dec
stos
les
cmp
inc
adc
jge
test
cld
cwtl
in
insb
sub
andb
imul
xchg
ljmp
push
test
xor
mov
in
movsb
pop
xchg
xor
sbb
js
fsubs
imul
cmpb
int
outsb
lock
add
jnp
popa
cmp
and
pop
dec
xor
leave
pop
sti
dec
cmc
out
pop
call
xchg
ja
out
hlt
lods
mov
leave
lret
mov
xchg
and
and
sbb
shrl
stc
sub
lret
aam
jge
ret
out
fwait
aas
decl
fldcw
fdivl
and
roll
pop
ss
cli
test
push
lods
push
into
jg
sbb
xor
cwtl
in
out
mov
testl
repz
call
test
cld
adc
lahf
hlt
inc
pushf
or
xor
push
ret
xor
rol
call
push
rolb
pop
fimuls
cltd
cwtl
lock
fsts
mov
into
push
mov
test
lahf
fsubrl
sub
stc
push
sti
cmp
jmp
xchg
std
and
or
popa
cmp
jb
mov
adc
daa
xor
stos
or
and
push
adc
rclb
push
sub
inc
push
data16
mov
mov
cltd
das
insl
inc
movsb
cmp
xchg
imul
cmp
test
mov
aad
sbb
mov
lret
imul
sbb
dec
aas
into
xor
add
sahf
mov
imul
sarl
in
jnp
mov
mov
lahf
push
pop
mov
jge
lds
mov
fstps
pop
sbb
loopne
bound
stos
dec
pusha
rclb
mov
mov
dec
out
arpl
jns
ja
pushf
dec
push
adcb
inc
jmp
jg
jg
xchg
sub
pop
xor
dec
lods
mov
or
mov
jo
fwait
dec
jp
test
adc
outsl
sahf
bound
and
dec
mov
in
or
sub
sub
jno
cmc
mov
add
rorb
sub
imul
mov
ds
ljmp
adc
and
sbb
xor
pop
jno
int3
loop
insl
inc
sbb
mov
and
cmp
adc
or
mov
lret
cmpl
std
adc
sub
jbe
inc
push
jno
clc
xlat
cwtl
test
sub
hlt
jp
xor
jo
sbb
in
xor
das
mov
fucompp
mov
add
jle
xchg
outsl
dec
fidivrs
mov
inc
add
popf
out
imull
jecxz
mov
jl
fdivr
mov
inc
mov
repnz
add
movl
push
shlb
loope
push
xchg
adc
lsl
aaa
mov
mov
in
popf
push
jns
dec
mov
xchg
mov
imull
xor
adc
lock
pcmpeqw
repz
or
push
add
jge
mov
inc
mov
mov
mov
fsts
sbb
sti
test
in
mov
sti
and
xor
mov
cmp
cwtl
jle
or
push
pusha
int3
cmpsl
mov
fsubp
in
imul
push
js
pop
je
and
lods
jo
mov
mov
mov
in
iret
and
mov
les
sbb
adc
leave
jbe
jecxz
mov
ret
mov
and
stos
fstl
and
inc
mov
mov
sbb
ja
ja
ljmp
xorb
jl
or
shlb
inc
mov
subl
push
loope
in
bound
cmp
in
cmpsl
je
mov
push
jg
jo
fidivrl
xchg
gs
xchg
ret
cmp
fdecstp
lcall
pop
lret
cmp
mov
shlb
fs
sahf
add
pop
popa
xchg
push
clc
lahf
add
loopne
cmp
rorl
jb
sub
hlt
aas
jmp
pusha
inc
dec
xchg
xchg
int
movsb
inc
push
repnz
push
cltd
sbb
sbb
mov
lods
pop
rcrb
mov
sar
push
loope
push
adc
fistpl
jg
mov
dec
incb
int
push
insl
mov
out
icebp
cmp
add
js
cmp
cmp
insb
ljmp
add
jno
rcr
jecxz
mov
dec
sbb
push
mov
adc
pop
mov
or
mov
ret
adc
jbe
xchg
loopne
xchg
sahf
push
mov
pop
pushf
sbb
jmp
lods
cmp
in
jecxz
mov
lods
pop
notb
shl
aad
add
add
fstp
ss
lcall
bound
mov
shrl
jno
dec
pop
cmp
in
push
push
rolb
jmp
out
call
push
pop
mov
adc
in
xchg
xchg
aam
or
and
rol
inc
in
insb
jns
shr
xor
loop
stc
cmp
into
push
jl
xor
adc
fidivrl
loope
lds
test
shlb
fdivrl
mov
scas
sub
shlb
pusha
bound
jle
and
cmp
lods
je
subb
add
mov
icebp
jnp
fdivr
lods
ss
mov
arpl
xchg
loopne
cmpb
jmp
mov
xorb
sbb
jecxz
addr16
loop
jecxz
std
repz
jmp
mov
add
mov
lcall
lock
shll
and
adc
shll
lret
cmpsl
mov
lods
dec
shlw
jo
jge
mov
subb
mov
add
cwtl
pop
pop
cmp
and
mov
pop
pop
je
add
roll
mov
fistpl
or
xchg
sbb
iret
sbb
fdivrs
nop
pop
sub
test
or
mov
jno
and
rorl
test
mov
and
xlat
mov
pop
imul
cmc
jae
ja
pop
cli
xor
fld
pop
dec
mov
sbb
adc
inc
mov
gs
test
rcrl
mov
addr16
dec
sub
mov
les
insl
divl
cmpsl
ss
dec
outsl
rclb
add
hlt
add
ret
les
pop
jge
add
sbbb
sbb
mov
leave
adc
cmpl
jg
loop
stc
sub
push
cmp
or
hlt
lea
jbe
enter
xchg
testl
sbb
xchg
pop
push
into
jo
pop
and
dec
jnp
inc
or
cld
jae
inc
xchg
imulb
fidivl
or
roll
mov
scas
arpl
arpl
pushf
add
pop
ds
ja
add
ret
cmpsl
lcall
and
in
test
movsb
xor
jns
and
cmp
lods
cli
outsb
movsb
xchg
mov
imul
xchg
scas
mov
mov
mov
cmp
lcall
mov
loopne
jmp
sub
add
or
mov
and
xchg
inc
sbb
sahf
out
xor
in
subb
xchg
test
dec
and
outsl
xor
jecxz
xor
hlt
inc
mov
rorl
mov
mov
push
or
jns
data16
mov
mov
add
pop
in
xchg
pop
cmp
leave
push
cmp
mov
lret
jmp
imul
jbe
xorl
and
lea
and
fimuls
add
cmp
daa
pop
add
xchg
ljmp
and
loopne
mov
sbb
xchg
and
xchg
push
push
popf
dec
imul
je
push
mov
std
rcll
dec
fsubrs
outsb
add
or
or
and
cs
bound
sbb
stos
pop
sbb
aaa
int
pop
mov
out
test
arpl
je
es
sbb
lret
cltd
add
push
or
xchg
dec
xchg
fdivrl
pop
xchg
hlt
insb
jbe
or
jmp
mov
jno
inc
and
pop
push
pop
aad
cmc
mov
or
sbb
popa
dec
ljmp
add
jnp
add
cwtl
repnz
mov
notb
mov
icebp
and
std
lret
jne
test
add
gs
xlat
sub
arpl
aas
push
push
in
aam
stc
sbb
add
adc
js
cmp
test
inc
shlb
stc
pop
cltd
pop
popf
jge
xchg
mov
push
sub
cmc
dec
inc
sbb
insb
imul
and
dec
sbb
fists
sbb
cmp
jns
rcrl
mov
and
push
fldcw
cltd
lea
mov
imulb
pop
lret
inc
xor
push
fisttpl
pop
and
iret
mov
jg
imul
hlt
je
sub
and
mov
sti
fs
mov
jmp
clc
push
out
cmp
mov
cmc
fldenv
mov
inc
mov
push
insb
test
mov
xchg
add
mov
cmp
mov
loop
mov
sti
and
pop
pushf
mov
call
repnz
jo
lcall
cmp
subl
dec
jg
or
mov
pop
rol
lods
cmp
xlat
lret
insl
ss
inc
pop
scas
loop
sbb
cmp
xchg
xchg
adc
mov
je
push
pop
fnstsw
testl
fstp
jl
sub
fidivl
clc
cmp
mov
add
insb
es
jp
or
lahf
jnp
jp
iret
je
std
ss
out
xor
or
fcomi
mov
gs
dec
adc
mov
xor
cmp
xor
cmc
mov
xor
pop
lds
jns
sti
jmp
jg
push
inc
lea
jbe
jl
inc
jns
pusha
cld
dec
in
or
in
mov
addr16
iret
lea
stos
mov
adcl
nop
dec
loope
aam
mov
sbbb
sub
sub
inc
scas
test
hlt
rcl
sahf
jno
icebp
aas
mov
jno
aam
mov
pushf
xchg
std
std
in
lods
mov
and
imul
mov
adc
push
sub
push
cmp
mov
lcall
or
jle
inc
mov
stos
scas
add
es
mov
fnstenv
cmp
fbstp
cmp
aad
fwait
ret
mov
gs
icebp
dec
enter
movsl
and
or
xor
scas
xchg
mov
shlb
cwtl
in
adc
xchg
orl
enter
aaa
xor
sub
aas
iret
pop
and
fdivrl
lods
and
dec
add
mov
jo
cmp
mov
xor
cmp
inc
pop
mov
mov
lahf
push
es
fwait
inc
xlat
daa
pop
gs
mov
cmp
sub
imulb
and
mov
cmp
sub
js
into
in
mov
dec
sbb
ret
cmp
jbe
rcrb
jl
shr
rcrb
mov
push
jecxz
repz
xor
sub
add
dec
scas
fstl
dec
push
aas
xor
mov
cmc
mov
or
sub
ljmp
xchg
xor
inc
stos
cli
pop
testb
or
loopne
and
insl
inc
mov
inc
jae
or
xchg
xor
push
call
scas
xor
jecxz
data16
cwtl
in
in
dec
mov
adc
pusha
test
xor
inc
filds
pop
and
sbb
popf
jl
subl
aas
ja
jae
js
jb
mov
jno
sarl
jns
outsb
or
mov
dec
or
sbb
mov
add
xchg
sti
cmp
mov
pop
mov
pop
mov
pop
sub
dec
mov
cmpsl
fisubrl
lret
jns
call
and
loope
mov
sbb
mov
fildll
mov
jne
xchg
jg
ret
push
xlat
nop
daa
sbb
jns
icebp
and
cmp
xor
sbb
out
cmp
into
rcr
mov
sub
lock
cmpsb
fwait
push
jbe
popa
mov
mov
cwtl
mov
xchg
scas
sub
inc
sbb
push
xor
aas
out
push
mov
ds
sahf
scas
or
popf
aad
sbb
xchg
mov
divb
aaa
repz
sbb
add
rorl
loop
dec
lea
addb
mov
fistpl
lods
stos
fildl
jae
in
adc
stos
mov
push
push
dec
inc
or
int3
scas
or
fistpll
push
mov
add
int3
sub
pop
jo
sbb
cmp
cmpsb
mov
call
imul
sub
icebp
js
fimuls
andl
test
in
pop
outsb
jle
lahf
xchg
cmp
adc
sub
push
shr
shl
ret
iret
sbb
adc
mov
jl
addb
xchg
fisubrl
dec
dec
mov
jg
rclb
retw
and
mov
data16
scas
dec
sbb
fld1
mov
ja
ljmp
sub
lcall
lods
sub
testl
adc
mov
sbb
xor
pop
lret
jge
or
mov
jnp
insb
xor
and
sub
nop
lret
push
outsl
sbb
inc
cmp
fimull
adcb
stc
push
les
sbb
push
in
sub
or
stc
pop
push
imul
pop
cmp
rolb
std
xor
pop
adcl
aas
mov
jbe
inc
mov
std
inc
insl
pop
fs
int3
mov
scas
lea
divb
mov
push
push
mov
push
inc
dec
mov
xlat
je
popa
dec
push
imul
pop
add
lock
loope
cltd
pop
out
mov
push
jo
mov
cmp
sub
xchg
sbb
repz
cmp
ja
xchg
sub
gs
cmp
mov
mov
cli
inc
leave
fists
dec
insb
mov
aaa
shll
push
push
fldt
frstor
ljmp
mov
jne
mov
cs
in
fldcw
sarl
addr16
sbb
pop
fldenv
das
push
add
adc
jge
xchg
in
punpckhbw
aam
pop
hlt
outsb
nop
mov
and
and
popf
jmp
fildl
mov
sbb
jecxz
sub
iret
or
push
ja
jo
mov
clc
mov
mov
push
jb
jae
adc
cmp
pop
cmp
fcomi
mov
loopne
fsubs
and
into
shll
pop
loope
repnz
adc
xchg
mov
inc
push
pop
dec
call
inc
or
dec
push
test
sub
adc
adc
cmpb
cmpsl
sbb
rolb
je
mov
lock
push
stos
test
je
push
mov
sahf
mov
and
mov
mov
xchg
pop
out
stc
pop
or
rorb
pop
lock
push
iret
addb
or
push
mov
inc
es
or
jmp
sbb
test
scas
repnz
das
mov
nop
dec
js
cmpb
and
sbbl
pop
movsl
lods
icebp
stc
mov
sahf
loopne
cmp
mov
lds
pop
xchg
mov
stos
fcomps
push
ret
subb
pop
enter
xchg
int3
or
push
scas
loopne
sbb
fmuls
or
in
pusha
xchg
dec
add
repz
push
mov
and
and
sbb
loopne
sbb
pop
and
or
test
inc
or
sarb
repnz
cmp
xor
dec
xchg
add
aad
inc
jl
adc
or
add
movsb
repz
addr16
and
loopne
iret
scas
into
lcall
xchg
dec
inc
jbe
in
lret
sbb
movsb
loop
iret
inc
sbb
pop
pop
fsubs
jmp
sarb
pop
mov
in
pop
in
xchg
dec
fdivp
lock
repnz
adc
sbb
add
mov
mov
adc
icebp
sub
fimuls
scas
mov
fsubp
xchg
rorb
mov
push
cld
aad
mov
insl
enter
push
pusha
icebp
pop
sbb
or
or
addr16
and
or
sub
push
aas
dec
mov
fwait
inc
cmp
aam
cmp
pop
jae
ds
rclb
cmc
jge
ficoms
push
xor
fists
iret
mov
ficoml
gs
mov
jae
aaa
lds
push
cmc
inc
sub
xchg
jmp
xchg
mov
and
nop
ret
pop
enter
sti
sub
aad
lds
ja
dec
mov
mov
pushf
daa
repz
xchg
mov
hlt
push
stos
leave
sub
xor
pop
or
fwait
mov
sbb
shl
xchg
inc
andl
in
dec
adc
les
lea
xchg
sub
sbb
push
jge
imul
outsb
movsl
inc
loopne
xlat
add
jo
push
or
out
jb
insb
dec
push
xor
and
mov
inc
mov
mov
sahf
sbb
subl
lret
mov
sti
cmpsl
pop
call
lret
mov
inc
jge
xorb
daa
inc
cmc
pop
sbb
cmpsb
pop
or
hlt
fmuls
shll
pop
push
ljmp
cmpsl
mov
loopne
xor
in
xchg
stc
push
xor
cmp
adc
xchg
xor
movsb
or
jb
mov
xchg
inc
cmc
push
push
daa
sahf
stos
and
or
sbb
cli
xchg
xchg
es
cmc
pushf
shl
pushf
xlat
pop
das
imul
sub
dec
mov
add
mov
inc
pushf
je
pop
js
add
adc
fistpll
add
ja
mov
aas
jb
jbe
aad
xor
mov
stos
dec
dec
adc
mov
test
add
pop
rorb
mov
fwait
pusha
xor
sbb
sti
int3
nop
mov
repz
sbb
clc
daa
xor
dec
adc
push
mulb
test
pop
out
push
pushw
insl
sar
mov
sbb
and
mov
adc
divb
clc
aam
mov
jne
sti
call
pop
mov
inc
aas
loopne,pn
insl
jae
adc
clc
mov
sbb
pop
cmp
repnz
arpl
pop
das
data16
inc
push
mov
lcall
xor
popf
icebp
xorb
sbb
adc
insb
mov
xchg
int3
inc
pusha
and
mov
mov
test
arpl
int3
mov
mov
pushfw
inc
out
adc
pop
or
popf
sahf
movsb
fidivrl
in
lock
movsb
mov
cmc
lret
push
mov
add
pop
jl
sahf
fsts
out
adcl
lea
ss
push
call
fbstp
xchg
dec
push
loopne
cmpsl
sbb
dec
mov
mov
cmp
sub
negl
mov
cmp
scas
inc
xor
and
in
fcoml
mov
imulb
dec
xor
dec
adc
arpl
add
and
or
push
sub
mov
lcall
mov
bound
mov
loop
inc
out
add
bound
je
mov
and
jo
aaa
or
cwtl
jbe
push
in
pusha
pop
push
sbb
mov
cmpsb
in
test
mov
test
or
movsb
add
insl
out
push
mov
sbb
xor
adc
and
adc
or
push
and
test
add
push
mov
cmp
and
lret
sbb
add
mov
dec
xor
fstps
push
cltd
jecxz
in
andl
data16
push
jge
xor
cmp
mov
and
pushf
push
push
cltd
outsl
icebp
inc
lea
ror
movsl
inc
jae
mov
call
imul
jbe
xor
or
cmp
xlat
mov
dec
sbb
mov
enter
fsts
jg
out
in
adc
mov
sub
bound
dec
pop
stc
jmp
hlt
fsubrs
xchg
cmpsl
mov
mov
jg
in
cld
sub
inc
adc
add
insb
faddp
shlb
out
in
imulb
cmpsl
adc
filds
sub
test
in
sub
imul
sahf
repz
mov
add
daa
jbe
lret
mov
inc
pop
xchg
mov
repz
std
mov
mov
std
or
push
das
aas
out
out
inc
mov
andb
mov
lds
sbb
fadd
fldl
std
and
roll
push
jl
mov
sarl
out
sbb
push
inc
xchg
jmp
mov
push
aam
cli
push
int
scas
xor
movsl
bnd
sarl
sti
mul
and
sbb
push
xchg
mov
jmp
xor
insb
jp
jno
aad
ljmp
insl
jp
imul
mov
std
push
loopne
mov
mov
xor
addr16
out
sub
push
inc
cmp
push
mov
mov
and
jns
jmp
and
jmp
xor
push
adc
iret
xorb
stos
insl
hlt
inc
fiadds
xchg
loop
lahf
lret
in
fildl
rol
add
mov
insb
inc
iret
stos
jns
movsb
push
push
ljmp
or
push
scas
sti
imul
mov
aaa
mov
mov
jl
mov
addb
push
int
adcb
data16
movsl
das
inc
aad
test
or
repnz
ds
or
adc
stos
sub
sbb
arpl
sbbl
inc
jp
sbb
lea
daa
add
mov
in
jg
je
movsb
ja
ss
inc
imul
mov
push
ret
fnstenv
sub
shrl
int3
sbbb
cmp
lret
lock
pop
testb
mov
gs
jecxz
or
add
adc
mov
lahf
es
repz
or
push
pop
out
cli
xchg
jp,pn
sbb
inc
aam
pop
sub
es
pushf
mov
stos
int3
push
xor
out
int3
ljmp
xor
sbb
and
jl
add
stc
movsl
test
aad
fcoms
out
nop
sbb
imull
repz
xchg
sbb
dec
outsb
cmc
add
cmp
sub
and
stc
xor
arpl
ss
xchg
mov
adcb
sub
mov
cltd
mov
in
xchg
sbb
add
fbld
int
jne
add
pop
pop
call
andb
in
fistps
es
cmp
mov
dec
jecxz
in
and
dec
or
mov
pop
xchg
sahf
mov
mov
insb
inc
in
pop
xchg
sub
dec
inc
push
test
ja
add
cld
mov
mov
movsb
add
filds
call
pop
cmp
sbb
cltd
pusha
insl
or
xor
xchg
call
repz
fidivl
mov
pop
dec
push
aam
push
jae
bound
std
scas
xor
cmp
mov
mov
fldlg2
sahf
or
and
test
shl
push
cmp
sub
cmp
scas
inc
xor
lods
or
loopne
das
sbb
out
cwtl
pop
adc
int3
or
cmp
mov
lahf
inc
dec
or
js
fmuls
push
mov
or
and
or
dec
les
dec
inc
lret
sbb
push
cld
adc
test
sub
pop
imul
or
ja
ss
ret
mov
data16
dec
lret
movsl
cmpsl
mov
push
cltd
or
shlb
mov
add
jae
scas
jb
inc
push
xchg
add
mov
jnp
adc
xor
ret
sbb
jecxz
es
pop
je
xor
fisubs
fisttpl
in
mov
cmp
sbb
push
or
push
cmp
sbb
cltd
adcl
imul
loop
scas
mov
xor
insl
and
icebp
add
ja
hlt
lret
int3
loope
cmp
js
ja
aad
insl
leave
movsb
xchg
push
or
nop
dec
rorl
or
call
jle
ret
push
pop
movsb
mov
hlt
jae
xchg
mov
inc
popa
sub
movsb
jge
scas
ljmp
loopne
xor
icebp
int
lret
icebp
pop
dec
loope
sbb
popf
push
mov
add
ss
cwtl
rcl
pop
cmp
add
lret
sbb
mov
adc
jns
mov
mov
pop
test
dec
aad
nop
mov
jnp
inc
push
cmp
stos
mov
in
rcll
divl
xchg
xor
fldcw
mov
jle
mov
ljmp
push
jne
jl
lcall
lock
std
sahf
xchg
and
mov
stos
jnp
mov
data16
enter
push
mov
loope
lods
and
call
xchg
adc
aam
xlat
setge
add
shll
xchg
push
add
mov
scas
sbb
adc
xchg
push
and
push
sub
xchg
mov
ffreep
mov
jmp
lea
add
push
jl
sub
sbb
mov
gs
in
lcall
xchg
fldcw
clc
mov
jno
or
dec
out
out
xor
lret
xlat
mov
test
test
mov
ficoml
pop
push
mov
mov
sarb
pand
inc
cs
ds
ljmp
int
mull
sbb
rorl
addb
jle
xor
adc
repnz
stos
and
outsl
push
test
dec
lods
shll
push
push
pop
sbb
or
jle
lret
jo
dec
gs
lret
pushf
cmp
popf
jecxz
jae
adc
shll
mov
push
xchg
cmc
clc
out
insl
pop
fsubp
cld
pushf
mov
xchg
or
aad
pop
inc
jge
sub
xchg
mov
mov
loop
jg
rcr
sahf
jb
add
lret
dec
mov
fimull
dec
xchg
mov
mov
testb
jb
repnz
hlt
add
in
pop
fldenv
add
cwtl
and
or
xchg
je
popa
aaa
mov
jbe
and
xchg
xchg
loop
fistl
add
jno
adc
add
or
or
pop
int3
adc
xorb
pop
sub
rclb
inc
mov
mov
aad
pop
fidivrs
insl
mov
or
lods
inc
push
push
sub
jge
sub
lock
or
mov
or
inc
sbbb
mov
cltd
pop
sbb
insb
mov
lods
mov
cmp
into
jp
push
add
push
gs
jno
in
stc
js
mov
lcall
out
out
add
mov
in
or
push
xchg
fiaddl
shrl
push
xor
fisttps
xor
cmp
cltd
mov
xchg
sbb
stos
dec
cwtl
xchg
jg
or
sub
pop
or
movsl
push
mov
cmp
jg
test
out
repz
xor
jnp
jno
ljmp
negb
push
fistl
repz
mov
pop
insb
cmp
lock
mov
imul
out
jne
xchg
jmp
je
mov
cmp
mov
test
imul
aad
daa
or
or
sbb
arpl
hlt
lock
fwait
sub
add
sahf
and
or
lret
mov
popf
inc
jge
sub
add
fs
das
test
lahf
add
outsb
adc
stos
inc
jle
in
inc
cltd
push
cwtl
fistl
pop
mov
bound
xchg
mov
int
mov
push
or
cmpl
pushf
add
test
mov
and
les
pop
or
dec
add
test
movsb
xlat
fcoms
cmpsl
and
push
std
ja
lret
aas
push
mov
ds
shrl
push
cmp
cwtl
scas
mov
jp
pop
inc
or
jb
lea
cwtl
les
testb
ss
int3
or
inc
add
iret
fildll
jae
popa
int
aas
or
mov
mov
leave
call
test
cltd
xor
adc
movsl
jb
push
push
pop
jg
int3
mov
jo
adc
sbb
ret
cld
xchg
push
rcll
sbb
adc
ret
cltd
arpl
repnz
jecxz
in
xchg
mov
dec
mov
loope
sbb
add
test
cmp
mov
push
hlt
hlt
mov
es
bnd
addr16
and
sbb
inc
mov
push
scas
lock
in
push
mov
movsl
sub
add
inc
pop
nop
and
inc
inc
leave
popf
aad
and
cmp
out
mov
loopne
mov
sbb
add
lds
pop
and
fwait
cld
test
lret
popa
in
cmp
inc
pop
ret
lcall
adc
stc
pop
jns
push
fcoml
push
stos
inc
mov
or
pushfw
pop
inc
jnp
pop
cmc
and
es
sahf
inc
cwtl
addb
push
mov
and
sarb
mov
js
in
xchg
dec
das
das
fs
int3
in
ret
js
mov
push
jne
ret
push
sbb
push
lahf
sbb
divb
cmp
je
mov
push
aas
push
push
push
pusha
jg
insl
sar
pop
insl
sbb
test
mov
sub
xor
aaa
xor
insl
popf
push
push
add
or
stos
movsl
fidivs
les
fisubl
jb
cltd
mov
or
mov
jmp
pop
and
enter
mov
cmp
loope
fiadds
add
mov
movb
and
dec
sti
add
jae
adc
jne
les
dec
je
pop
mov
cmpsl
jbe
jp
xchg
jne
sbb
fsubr
xchg
mov
xchg
sbb
pop
adc
jp
mov
stos
jbe
add
daa
sub
sti
in
xor
mov
or
push
and
stos
je
pop
loopne
xor
lods
cld
test
inc
dec
bound
mov
scas
lods
or
arpl
cltd
jp
pop
dec
xchg
push
xchg
cmp
movsl
and
pop
movb
dec
cmc
imul
inc
movsb
cmp
cmc
and
xchg
mov
mov
push
lret
or
pop
jle
incl
insb
mov
xchg
popa
sub
add
inc
inc
sbb
push
inc
clc
xor
daa
cmc
sbb
loop
daa
cli
cmp
jg
lret
push
sub
inc
cmpsl
mov
mov
clc
sub
mov
lea
mov
xlat
dec
push
cs
inc
inc
fbld
inc
or
test
fwait
push
imul
push
cmpsb
sarb
xchg
xor
rcr
pop
and
adc
arpl
inc
lock
orl
xor
or
rcrb
adc
ret
and
pop
sub
hlt
repnz
dec
xchg
mov
sub
xlat
pop
sarb
fisttpl
insb
jb
loope
xchg
inc
pop
mov
stc
inc
mov
xchg
mov
dec
je
cmpsb
push
std
leave
mov
jnp
es
and
pusha
push
push
ret
scas
add
add
test
dec
shll
scas
push
cmp
jns
insl
mov
jno
ja
and
xor
adc
lods
mov
pop
and
sub
pop
push
sbb
or
out
std
sub
aad
mov
das
lods
cs
dec
out
in
pop
mov
daa
and
cmp
rcrl
adc
xchg
add
rcll
push
divl
js
adc
rorl
sbb
mov
pusha
xorl
lea
pop
xchg
mov
cmpsb
add
pop
mov
arpl
fs
hlt
mov
sbbb
lahf
leave
lret
inc
icebp
frstor
mov
mov
loop
and
shll
cwtl
mov
fildll
lds
jns
sbb
outsb
icebp
add
icebp
mov
imul
or
fs
mov
push
push
cmpsl
bound
push
repnz
fcmovnu
ficoms
and
das
clc
mov
test
dec
mov
inc
pop
out
mov
and
in
jns
cltd
pop
mov
mov
out
cli
mov
pop
nop
loope
icebp
sbb
adc
adc
dec
cmpsb
cwtl
je
repnz
lock
xchg
fisttpl
cmp
movl
dec
das
std
cwtl
push
out
scas
pushf
icebp
xchg
sub
mov
stc
in
cmp
les
add
xchg
jns
fsubl
jecxz
imul
dec
sub
sub
movsb
sub
sub
xor
inc
lods
sbb
icebp
xor
inc
nop
test
jl
dec
cmc
mov
out
adc
out
jp
in
out
push
add
pop
out
adc
mov
fs
dec
pop
dec
insl
adc
cmc
push
addr16
mov
pop
movsb
and
outsl
add
ljmp
lahf
mov
sbb
and
pop
sbb
scas
mov
cwtl
pop
std
int3
or
shrb
je
loopne
fwait
pop
pop
xchg
pop
sbb
mov
inc
ret
repnz
xchg
dec
jmp
mov
adcl
xorl
cmp
or
push
push
cld
scas
mov
pop
inc
bound
setae
cmpsb
fwait
mov
test
sti
sbb
in
adc
jecxz
fwait
cli
cwtl
sbb
xchg
or
adc
pop
icebp
nop
mov
push
pop
out
stos
sarb
push
shrl
mov
add
adc
pop
aam
test
pop
and
in
xchg
aaa
dec
daa
repz
ds
sbb
cmp
sub
stc
pop
push
jge
test
sbb
sub
popf
xor
fsts
sbb
cmp
cltd
hlt
out
adc
hlt
mov
cmp
jo
adc
push
aad
in
add
leave
push
push
loopne
das
push
cmp
pusha
sbb
mov
mov
pop
mov
outsb
pop
je
or
imul
adc
nop
or
and
fnstsw
or
or
pop
sub
cmpsb
popf
mov
test
sti
stc
add
mov
cmp
jae
or
ret
jl
jge
cmp
lds
aad
xchg
cwtl
icebp
lahf
or
push
mov
mov
xchg
inc
inc
push
cmp
jae
xchg
pop
lahf
out
pcmpeqw
xor
mov
andl
imul
mov
bound
lods
orl
cmc
sahf
mov
lret
cmp
out
inc
insl
int
jbe
inc
cwtl
clc
adc
sbb
add
xor
xchg
sub
data16
data16
aas
pushf
ret
das
jmp
or
imul
mov
xlat
divl
dec
data16
jb
cmp
sub
mov
idiv
fcompl
push
push
test
xchg
loope
mov
adc
jne
lods
ficoml
or
sub
jg
call
xchg
mov
dec
fsub
dec
hlt
mov
xor
loop
xlat
push
jne
pop
test
xchg
hlt
shl
cltd
adc
popf
adc
mov
bnd
test
andb
xchg
ret
and
enter
xor
mov
or
and
push
enter
push
mov
adc
mov
xchg
pop
stos
cltd
gs
movsb
mov
loopne
jg
repnz
mov
sbb
test
je
rol
adc
scas
jl
push
lea
ja
clc
sbb
outsb
std
xor
imul
xchg
push
jp
mov
cwtl
imul
sarb
cmp
sub
jbe
je
push
cmc
scas
imul
mov
das
sbb
cmp
jmp
xor
rolb
negb
cmpsb
or
xor
iret
cmp
aas
xchg
arpl
add
push
cmp
lock
cmp
int3
jecxz
outsl
shrb
sub
xchg
rorl
ds
push
cmp
cli
add
sbb
fs
pop
stos
mov
loope
cmp
out
lds
pop
sub
call
lahf
pop
sub
js
daa
pop
cltd
jno
data16
adc
jb
clc
inc
out
test
je
dec
pop
mov
push
jae
into
jo
xor
pop
and
insb
mov
jno
mov
jbe
bound
aas
sbb
xor
mov
inc
xchg
aam
xor
mov
rcrl
aaa
adc
lahf
stc
ljmp
sub
flds
cld
fs
into
ret
push
or
imul
in
push
lahf
pop
hlt
sbb
and
dec
sub
ret
add
xorw
cmpsl
aam
pop
and
out
rclb
mov
movsl
jb
lret
or
cmpsb
loopne
xor
mov
cmp
scas
pop
test
inc
sar
ds
cmp
pushf
lret
enter
sbb
testb
mov
lahf
and
jae
jb
mov
adc
lret
dec
stos
mov
dec
sbb
imul
push
outsl
and
dec
sbb
test
pop
mov
lahf
and
add
jb
out
stos
push
into
loop
jnp
pop
lods
sub
shrb
push
es
pop
and
or
rol
aas
jne
sbb
dec
sub
push
mov
sahf
sahf
test
cld
cmp
push
test
dec
js
cmp
jbe
sub
aaa
pop
das
out
into
push
jb
data16
insl
jp
movsl
xchg
mov
pop
mov
fwait
out
add
test
ret
stc
rorl
sbb
or
sbb
lahf
jmp
shlb
mov
pushf
pop
adc
dec
imul
mov
sub
pop
mov
pop
adc
hlt
ret
movsb
fsub
pushf
jge
pusha
dec
xchg
hlt
fcom
in
in
ss
filds
pop
arpl
push
and
test
add
inc
pop
lds
call
push
jl
shll
jp
xchg
inc
imul
adc
in
cmp
xor
lea
mov
pop
add
pop
pop
push
mov
and
cmc
sbb
test
and
add
inc
jl
inc
out
cmp
dec
outsb
jecxz
nop
mov
out
inc
lods
mov
dec
push
inc
lahf
icebp
mov
loop
aaa
fbstp
ret
xor
jb
pop
push
xlat
insl
aas
repz
inc
sub
push
sbb
adc
test
inc
sub
pusha
insb
xor
sub
sub
lds
mov
shll
cmp
adc
push
inc
sbb
jne
ret
pop
popf
stos
jp
sbbb
jle
insl
sub
or
push
scas
mov
or
mov
or
loopne
leave
inc
cmp
gs
daa
pop
dec
xchg
mov
xchg
add
cli
inc
adc
adc
sbb
jge
push
sbb
push
popfw
pop
repnz
mov
bound
cli
sti
lahf
aas
xchg
xor
xchg
int3
cmp
mov
adc
mov
adc
sti
mov
mov
jle
jns
or
stos
shrl
xor
push
cld
adc
and
xor
dec
outsl
dec
sub
push
fwait
outsb
out
sbb
jecxz
repz
cs
ljmp
mov
inc
dec
addr16
outsb
pusha
xchg
xor
xchg
mov
or
nop
fmul
arpl
dec
stc
mov
cmpb
stos
sub
popf
lods
xchg
inc
and
xor
stc
lods
jmp
negb
jmp
inc
sbb
sbb
mul
cld
xchg
push
cmp
mov
xor
arpl
out
push
push
adc
scas
stos
cmp
fld
add
push
xchg
adc
or
ja
xchg
fldt
cltd
mov
mov
pop
in
movsb
ret
jp
mov
push
fs
pusha
or
cmp
adc
les
ret
push
outsl
sub
dec
inc
inc
lret
testb
lock
push
cmp
jl
dec
jbe
mov
movsl
xchg
or
dec
addr16
inc
cmpsw
filds
xor
or
fs
adc
pusha
div
push
dec
add
inc
mov
daa
push
inc
lods
mov
jge
int3
hlt
jmp
adcb
fwait
insl
xchg
jb
pop
ss
sub
mov
inc
scas
fcoms
jmp
scas
mov
mov
inc
xchg
outsb
dec
mov
mov
xchg
test
push
addr16
inc
pop
sahf
nopl
sub
movsb
loopne
int
outsb
lock
mov
jne
call
jmp
add
je
into
test
jl
int3
push
pop
imul
daa
xchg
int
sbb
fstl
jmp
in
push
sbbl
xchg
and
test
jge
jp
repnz
movsb
jnp
movsl
push
movsl
pop
cltd
int3
lcall
outsb
push
mulb
stos
add
push
addr16
mov
or
inc
adc
dec
fbstp
int
or
mov
bound
pop
movsl
jne
jge
bound
movsb
ja
sbb
pop
repnz
or
xor
sbb
mov
adc
insl
dec
aaa
daa
mov
push
push
mov
sbb
fistl
jle
ret
fsub
loope
cmp
inc
add
jecxz
or
rcrb
dec
xchg
cli
inc
lods
stos
ljmp
int3
lret
xor
inc
fisubrs
stc
cmp
data16
nop
das
gs
pop
sub
cmpsb
ss
scas
cld
push
pop
xor
popa
dec
push
sbb
pop
enter
mov
cld
cli
shrl
pop
clc
add
lret
and
mov
jge
stos
stos
mov
aad
pop
jg
xchg
jecxz
shll
imul
repnz
cld
iret
mov
xlat
dec
dec
shr
bound
push
and
inc
lock
or
jge
xor
fisubl
loop
pop
shl
dec
push
inc
std
clc
mov
out
ljmp
adc
mov
loope
cmc
lea
sbb
repz
sahf
out
pusha
cmp
inc
loopne
cs
out
insl
cli
outsb
push
gs
loop
stos
cmp
scas
adc
lea
in
cmp
sub
jb
push
xor
inc
mov
xlat
add
int
pop
cmpsl
test
cmp
mov
push
ss
je
ret
jb
ljmp
imul
subb
mov
movsl
mov
add
sbb
cmpb
sbb
cwtl
imul
cli
imulb
test
hlt
iret
xor
fldl
pop
scas
xchg
inc
xchg
cmp
push
sbb
jo
sub
and
mov
cmp
mov
sub
into
rcl
or
cs
stc
mov
ret
mov
dec
stos
sbb
add
xchg
stos
cmp
pop
shlb
sub
dec
adc
mov
out
push
mov
mov
out
cmp
shl
jbe
lods
mov
push
fwait
cld
fs
in
pushf
push
outsb
mov
sub
cld
mov
xlat
ds
dec
mov
cmpsb
fcomi
and
and
dec
mov
or
jb
mov
out
ss
jo
dec
in
sbb
adc
arpl
inc
pop
xlat
movsl
in
pop
mov
xor
pop
cmpsb
inc
mov
push
gs
neg
mov
ret
pushf
fidivs
xchg
dec
je
pusha
push
cmc
push
or
mov
notb
movl
icebp
lock
push
pop
mov
lea
in
sub
dec
pusha
jbe
jne
insl
push
ret
xchg
scas
mov
mov
add
cmpb
dec
imul
stos
lea
jnp
aam
sub
aaa
andl
add
mov
icebp
outsb
xchg
dec
lret
xchg
push
ljmp
decl
shrb
mov
dec
sbb
pop
mov
pop
fildll
into
test
pop
xor
mov
and
fists
lahf
jae
cmp
cld
dec
fidivrl
adc
add
jbe
xor
sub
arpl
icebp
jno
pop
xchg
jecxz
mulb
loope
and
outsl
lahf
leave
adc
pushl
fdivrp
orl
jle
mov
mov
sub
pop
shrb
and
enter
xchg
or
cmpsl
leave
mov
popa
cmpsl
or
sbb
leave
mov
sbb
mov
adc
mov
in
xchg
xor
xchg
dec
xor
fisubrs
into
in
rolb
xchg
push
roll
pop
mov
add
pop
sar
pushf
lret
pop
add
adc
insb
bound
adc
xchg
fldcw
push
pop
sbb
pushf
add
clc
jl
jns
pop
dec
fsubrs
ds
fcom
dec
mov
test
push
xchg
pop
mov
clc
jae
mov
pushf
fs
xlat
in
aam
add
xchg
mov
nop
jb
orb
fs
push
mov
mov
cmpsb
das
or
pusha
add
ja
inc
mov
leave
jno
or
jle
mov
jecxz
es
xor
sahf
push
repnz
andl
fbstp
adc
push
mov
mov
aaa
aam
sub
loope
jno
dec
dec
ret
mov
cld
popf
push
adc
lahf
push
sub
mov
add
aad
mov
add
je
dec
dec
sub
cltd
sbb
popf
cld
add
dec
ret
xchg
out
cmp
std
ljmp
sub
jno
mov
insb
icebp
push
xchg
in
movsb
mov
ret
ljmp
jno
ljmp
mov
dec
lahf
and
divl
inc
jge
jae
add
jae
fwait
test
aaa
je
aas
lods
pusha
lahf
outsl
fnstcw
push
ret
mov
popf
outsl
loopne
hlt
or
outsb
mov
sub
stos
insb
imul
out
xchg
dec
pop
out
mov
mov
mov
test
mov
jmp
and
loope
xor
inc
mov
lds
ficoml
cltd
push
std
jae
push
in
icebp
or
cmpsb
xchg
imulb
push
stos
add
mov
in
mov
mov
sub
loope
jmp
imul
call
xor
jl
jge
nop
jns
xchg
lret
fbld
lret
mov
mov
lock
call
mov
js
push
rol
jbe
mov
cmp
mov
jecxz
pop
xchg
out
xor
mov
nop
adc
pop
cwtl
std
das
push
mov
xor
subb
add
sub
xchg
push
xor
idiv
jecxz
icebp
ret
inc
lods
repnz
push
sarb
sti
jmp
movsl
push
jo
inc
stos
jb
xor
sub
xor
pop
add
das
sub
and
or
mov
and
insl
repz
fists
call
jcxz
jp
lock
mov
fbstp
push
xchg
cmp
shll
lret
adc
fisttps
xchg
into
outsl
loopne
add
jmp
xchg
dec
sahf
loopne
mov
pop
scas
jbe
xor
out
push
pusha
dec
cmp
scas
gs
mov
popf
mov
mov
sbb
sub
sub
jnp
push
ficompl
push
dec
rcll
or
gs
sahf
xor
lds
or
mov
in
fsubrl
leave
add
insb
fistl
mov
fwait
rorl
ljmp
rorl
iret
cmpsl
test
outsb
lcall
sub
or
dec
xchg
iret
jb
jmp
scas
das
and
std
jg
pop
mov
mov
dec
lock
jae
in
pop
dec
ficomps
test
push
sub
fwait
lcall
shl
int
enter
xchg
add
sbb
add
popf
sti
mov
mov
mov
jle
testl
mov
in
add
loope
and
dec
adc
pop
js
add
insb
imul
lcall
insb
repnz
imul
cmp
adc
adc
mov
rclb
jno
cmp
cmpsb
inc
gs
push
push
jns
lea
enter
sub
mov
xorb
js
jno
sbb
adc
leave
scas
outsl
mov
addl
jnp
gs
sub
leave
inc
mov
out
gs
sub
test
dec
jle
clc
push
fptan
stos
sahf
mov
scas
in
push
push
mov
ss
mov
ret
ja
dec
push
mov
ds
and
aad
xchg
arpl
pop
cwtl
or
sti
xchg
je
mov
iret
pop
mov
mov
in
dec
mov
inc
scas
inc
in
jno
push
sarb
push
enter
js
and
ret
xchg
jno
jne
ds
insb
ja
mov
lcall
je
sub
sti
je
andl
into
loope
sti
jbe
push
jg
lahf
insb
outsb
sub
or
data16
adc
jb
ret
hlt
mov
mov
ret
xor
sbb
ljmp
leave
lcall
in
in
push
pusha
jo
inc
lds
mov
mov
cmp
insb
bound
xchg
dec
adc
ret
xchg
nop
or
jno
hlt
or
jnp
pop
pop
sti
fistl
mov
adc
or
xor
add
dec
jge
jecxz
pop
insl
or
lock
mov
adc
sbb
jae
cwtl
sub
mov
shlb
xlat
xlat
push
dec
xor
jae
mov
popa
cli
inc
lea
mov
pop
and
adc
std
stos
or
cmp
cmpsb
cmpsb
dec
bound
imul
inc
in
add
inc
xor
inc
fisubrl
aam
shlb
incl
jp
sub
and
pop
push
jb
adc
xchg
aas
fwait
mov
push
sarl
pop
lods
aam
or
push
or
scas
mov
lea
dec
xchg
jb
xor
je
and
xchg
aam
pop
sbb
mov
cmpsl
and
dec
sbb
adc
popf
test
stc
not
mov
push
inc
inc
pop
lds
in
inc
sbb
mov
leave
add
insl
loopne
mov
movsl
push
in
mov
jnp
das
jbe
cmp
dec
jmp
mov
aaa
les
les
mov
test
in
adc
mov
movsb
xchg
insl
xchg
dec
clc
es
xor
lds
or
sbb
mov
push
fidivrs
clc
ret
outsb
mov
ja
fsubl
filds
dec
stos
mov
mov
std
mov
ret
in
fcoml
aas
sbb
lcall
pop
and
dec
lcall
push
cmp
rol
mov
pop
jo
in
dec
cmp
adc
lock
cmp
jno
leave
into
xor
lret
cwtl
in
add
xchg
test
pushf
xchg
xor
packsswb
scas
sbb
int
adc
outsb
pop
dec
jnp
orb
push
mov
and
sbb
mov
lcall
int
loop
sub
or
jg
aaa
mov
or
shrl
out
movsl
fldcw
jge
cmp
cli
cmp
cmc
sahf
xor
push
sbb
sbb
push
dec
test
lods
movsb
dec
in
xchg
pop
mov
imul
inc
jbe
popf
cmp
cwtl
aad
push
mov
push
jno
rorl
dec
push
dec
mov
and
hlt
ret
adc
push
fcomip
xchg
mov
lock
cmp
xlat
je
in
sbb
lods
mov
pop
ret
adc
subl
dec
mov
pop
les
mov
adc
push
or
dec
ljmp
dec
ljmp
inc
loopne
nop
or
ret
mov
cmpsl
mov
aaa
pop
adc
clc
divb
xchg
bound
inc
xor
jne
add
movsb
pop
scas
cltd
push
pop
push
mov
mov
add
shlb
or
push
mov
cmpsl
sbb
clc
jl
shl
bound
cmp
push
pop
ret
push
push
pop
popf
cmp
mov
cmp
add
jp
push
jae
lret
pop
pop
jbe
out
push
pop
mov
push
cli
sub
mov
jmp
lea
sbb
push
sti
adc
jnp
jg
cmp
clc
and
shlb
push
shrl
scas
xchg
out
aad
push
add
outsl
adc
inc
daa
mov
lock
popl
scas
pop
in
adcl
jmp
lock
inc
cmp
inc
cld
std
call
fdivrs
cmp
add
les
adc
xchg
test
daa
cltd
stos
out
cmp
xor
sbb
mov
mov
scas
dec
incb
lds
int3
arpl
mov
push
cmp
daa
rorb
pushf
dec
push
mov
das
lea
iret
arpl
pop
or
sub
repnz
out
lahf
decb
aam
loope
or
test
fmuls
cltd
in
pop
icebp
out
xchg
mov
data16
and
sbb
dec
pop
ss
inc
jmp
sub
dec
dec
mov
sub
inc
xor
pop
inc
or
cwtl
and
add
pop
mov
aad
sub
nop
pushf
jnp
inc
xchg
adc
jge
sbb
in
mov
mov
int3
mov
pop
sbb
push
or
lock
cwtl
mov
jno
or
ficoml
int
leave
gs
xchg
sbb
pop
sbb
mov
pop
test
mov
mov
xor
cmpsb
xchg
jnp
add
outsb
mov
popf
iret
out
cmc
jl
ret
lds
rorb
outsl
inc
and
mov
mov
cmp
cmpsb
dec
std
mov
std
cmpsl
inc
fisttpll
fsubrl
push
mov
xorb
jbe
hlt
enter
dec
clc
cmp
icebp
cmp
bound
push
xor
mov
cli
jecxz
pop
data16
add
subb
pop
cmp
mov
inc
jp
inc
icebp
mov
sub
in
imul
in
mov
imul
push
scas
ss
cmc
lock
add
lret
add
sarl
xchg
test
mov
les
adc
or
arpl
scas
cmp
aad
sub
stc
loop
xchg
mov
lds
dec
sahf
shll
lock
std
pushf
jmp
mov
mov
jo
pop
xor
and
xorb
lea
arpl
sarb
aad
int
mov
faddl
push
jp
rorb
mov
jns
bound
push
inc
lock
sbb
xor
xor
mov
and
mov
or
in
mov
pop
daa
popf
xor
repnz
sbb
das
xchg
cltd
push
cmpl
ds
sbb
dec
add
scas
push
mov
adc
lods
test
inc
movsb
dec
test
sti
iret
loopne
shll
out
push
movsb
xchg
cld
lock
in
sub
or
leave
pop
dec
imul
xchg
jbe
mov
shrb
mov
jbe
pop
push
daa
xchg
dec
call
je
push
xchg
aas
sub
sub
cmp
leave
leave
mov
mov
push
cld
mov
mov
mov
lret
cli
mov
in
dec
iret
ja
lods
or
les
cld
xchg
addr16
mov
cmp
test
xchg
dec
shll
and
cmp
testl
stos
adc
push
clc
mov
dec
sbb
xchg
add
push
rcrb
ficoml
in
mov
add
insb
cmpl
push
jg
cmp
mov
pusha
mov
sbb
inc
xchg
cmp
or
in
sub
aaa
clc
mov
lret
testb
gs
jp
mov
pop
push
fdivrp
mov
out
xor
addr16
and
mov
xor
inc
cmp
mov
adc
xchg
dec
jno
fsubl
fidivs
xchg
mov
fninit
add
test
sub
or
loopne
clc
sbb
mov
jmp
xlat
mov
or
mov
data16
jb
outsl
cmpsl
inc
cmpsb
push
shll
cmpsb
jae
dec
lods
dec
adc
mov
xor
xchg
xchg
or
pop
xchg
mov
add
ja
and
aam
pop
ficompl
lea
dec
int
insb
sub
or
fs
jg
push
or
jae
adc
cmpsb
cmp
leave
inc
cmp
lds
mov
jo
popf
pop
stc
jg
adc
testb
cmp
test
inc
jle
sbb
sub
aad
cmp
push
adc
mov
cmpb
into
add
aad
subb
nop
ficoms
movsb
push
ret
ja
imul
xor
stos
jp
outsl
outsl
push
push
add
jb
jg
pop
cmpsb
xchg
mov
repz
daa
fistl
repnz
rorl
jmp
inc
aas
fpatan
or
or
push
mov
inc
or
pop
stos
insb
fiaddl
xor
js
shlb
addr16
inc
jbe
lods
and
inc
cmp
or
push
lock
int
stc
jp
mov
adc
mov
imul
int
mov
out
dec
testl
fcom
rcl
in
sahf
mov
aad
sub
lret
pop
lods
stos
inc
jmp
mov
rcll
push
imul
les
xchg
xchg
dec
idivb
jbe
rcl
adc
lahf
ss
push
xchg
lock
push
mov
sahf
shrb
xchg
shll
fnstcw
jecxz
out
jmp
addr16
mov
jecxz,pt
sbb
cmpl
je
xchg
adc
mov
rcrl
or
repz
rorl
mov
push
adc
in
sbb
rcll
or
imul
inc
push
inc
scas
jo
out
push
loop
or
push
aad
sub
in
call
stos
sub
and
loop
cmpsl
stos
xchg
std
aaa
cmp
sahf
popa
mov
pop
xlat
sub
test
inc
jp
pop
mov
jne
orb
enter
das
push
pop
aaa
mov
stc
pop
fisubs
dec
rcrl
out
fwait
es
jae
mov
stos
int3
push
iret
pop
stos
and
mov
hlt
in
cmp
add
pop
pusha
sub
xor
test
mov
out
fidivrl
xchg
cmp
mov
test
add
test
push
dec
mov
ffreep
cltd
mov
aam
mov
pop
stos
lock
ds
shl
mov
out
pop
dec
lods
cld
adc
sub
aam
push
xchg
push
roll
ss
cmc
push
mov
dec
mov
popa
lods
test
icebp
outsb
cli
xchg
mov
mov
mov
out
sub
mov
push
inc
mov
inc
add
cmp
sub
mov
in
aad
mov
xchg
das
push
stos
sahf
cmpsl
cmpsb
add
pop
icebp
inc
push
je
das
outsb
lahf
pop
ficompl
or
xor
in
pop
insl
idiv
dec
and
movsb
add
sub
std
inc
push
lret
push
movsb
gs
xchg
and
movsl
outsb
or
xchg
pop
dec
scas
in
loope
sbb
jg
hlt
stos
lret
lods
or
or
jns
mov
paddsw
imul
or
lods
fldenv
or
jne
mov
jae
push
inc
mov
push
clc
mov
push
mov
outsb
clc
jmp
out
pop
sub
xchg
cmc
sbb
mov
cmp
test
ja
or
jne
dec
mov
and
out
dec
mov
cltd
pop
xchg
outsb
in
push
in
movsl
lahf
adc
xlat
gs
pop
push
jae
sbb
sbb
xor
int3
sarl
out
mov
dec
push
push
xchg
adc
lahf
out
cmpsl
stos
sbb
push
insl
das
and
mov
jne
mov
pop
int
addr16
jl
add
pop
xor
mov
sbb
pop
sub
fistpll
dec
mov
lahf
out
pop
sti
fs
sub
cmp
mov
sub
sub
sub
fwait
jmp
out
stc
mov
or
lods
pusha
push
sbb
push
dec
data16
jne
adc
add
cwtl
jnp
and
sub
and
inc
xor
inc
icebp
fdivl
or
and
inc
arpl
mov
jae
mov
mov
cmc
mov
cmp
jae
imul
cli
cs
inc
xchg
cmp
lds
jbe
data16
notb
dec
pop
mov
fimull
fldl
and
mov
arpl
mov
dec
es
jae
ja
rol
test
push
xchg
fmuls
mov
and
dec
and
cmp
ds
and
scas
dec
xor
xor
mov
sub
dec
idivb
jl
jo
fldcw
inc
repnz
and
inc
xor
fld
iret
lods
inc
xor
jl
lcall
addr16
jle
pop
dec
inc
cmp
stc
and
movb
pop
dec
jo
popf
mov
popf
mov
xor
out
adc
out
loope
loopne
mov
arpl
xor
dec
xchg
inc
fstpt
mov
ljmp
movsl
dec
jno
cmp
adc
or
pusha
jmp
imul
inc
popa
mov
inc
pop
jbe
repz
sahf
fdivs
cmc
ret
xchg
jecxz
push
lock
in
dec
mov
and
shlb
jecxz
mov
inc
out
inc
jmp
lret
popa
and
js
mov
push
sub
int3
xor
daa
cmp
lock
pop
jp
mov
cmpsl
cld
sbb
add
cmpsl
cwtl
test
shl
sub
repz
not
add
jl
fs
pop
addr16
ljmp
cmp
imul
bnd
mov
loope
and
subb
jbe
aaa
rcl
std
pop
cmpl
mov
sbb
icebp
mov
adcb
xor
fisubrl
mov
outsb
sti
in
and
popf
lods
xor
xchg
push
sbb
lock
cmc
mov
xor
xchg
ds
inc
and
cltd
loopne
push
pop
sbb
jle
mov
adc
mov
aaa
out
sbb
cltd
rolb
cmp
rolb
or
clc
out
or
test
ljmp
loop
pop
dec
adc
sarb
or
xlat
int
cmp
in
push
lret
pop
lret
cltd
dec
in
imul
stos
mov
and
or
jl
fadd
cmc
mov
mov
push
popf
pop
or
pop
lds
cmp
add
add
mov
mov
push
inc
pop
aaa
mov
test
pop
pop
jp
pop
cld
rcll
mov
scas
xchg
arpl
push
rolb
or
adc
xchg
fisubrl
pop
cmp
xor
fs
cmpsb
push
adc
sbb
in
push
cmp
or
out
jb
rclb
mov
push
mov
insb
jl
adc
mov
lock
pop
in
into
jae
idivl
dec
cltd
std
stos
add
sub
pop
addl
adc
add
dec
sub
add
jg
pop
in
leave
push
outsb
jle,pt
cmp
nop
add
mov
sbb
mov
fldt
imul
and
add
xor
mov
push
xchg
xchg
dec
aad
in
aaa
xchg
mov
iret
pop
add
shl
fcompl
or
daa
xchg
lahf
in
xor
aas
or
cmp
test
ds
jb
sub
xor
mov
repz
jge
out
ficoms
inc
push
fs
mov
jbe
jo
mov
das
jno
pop
shrb
jecxz
mov
jne
xchg
aam
push
push
out
mov
mov
lds
push
fidivl
lea
xchg
pop
dec
sbb
push
out
into
dec
cmpsl
movsl
jnp
test
mov
int3
cmc
fistpll
fisttpll
cmp
adc
jae
jns
adc
xchg
sbb
sub
cmc
sub
push
xchg
cmp
jg
jne
scas
out
std
mov
gs
in
push
jo
les
outsb
cmc
xchg
mov
imul
shl
add
in
ss
movb
cli
inc
or
inc
loopne
out
fsts
mov
scas
inc
mull
sub
jb
push
test
movsl
or
mov
ret
lahf
cmp
loop
add
mov
push
push
dec
out
test
test
incb
pusha
mov
das
shrl
nop
pop
jb
add
dec
or
lcall
cld
popa
cmp
mov
fmuls
cmpsb
pusha
or
test
pop
scas
cmp
cmpsb
xor
mov
xchg
mov
shrb
fistpl
fsubl
arpl
dec
repnz
shrb
xchg
fucomip
fbld
xor
lods
xor
loopne
or
ret
mov
lcall
cli
cltd
cli
cmp
push
mov
stc
pop
std
pushf
ss
xor
xchg
lds
mov
sbb
adc
jmp
jmp
loope
cmp
jnp
cmpl
dec
jge
sub
mov
pusha
inc
mov
and
and
mov
fucomi
or
leave
xorl
orl
xchg
imul
lcall
pop
cwtl
test
filds
cmp
mov
xlat
rcrb
mov
movsl
xorb
out
pop
test
mov
ljmp
or
sub
pop
dec
inc
cli
jno
mov
lcall
adc
aaa
stos
dec
or
scas
js
xor
xor
pop
mov
jmp
test
sub
stc
sub
shlb
cltd
out
test
sbb
outsb
cmp
pop
sbb
aas
push
push
mov
icebp
adc
dec
or
outsl
adc
add
test
cmpsb
inc
or
shlb
jle
jns
mov
cmp
pop
sub
inc
dec
mov
fidivrl
pop
cmpsl
push
or
ja
xchg
out
adc
incl
mov
push
dec
adc
fsubp
jmp
dec
mov
sbb
pop
pop
jle
mov
lahf
testl
mov
je
lahf
cmpsl
jecxz
je
cs
cmp
lea
adc
sahf
and
not
test
nop
orb
int3
sbb
dec
inc
mov
or
cmp
cmp
ja
add
push
add
jge
cli
loop
or
popf
mov
inc
cmp
in
pop
adc
mov
icebp
inc
mov
je
test
cmp
shll
jno
mov
pop
push
bound
pop
dec
movsl
cmpsl
loope
push
dec
mov
call
sarb
push
sub
loop
insl
or
mov
xor
outsb
inc
xchg
mov
xchg
fstl
enter
scas
and
arpl
add
in
mov
data16
xchg
cmp
repz
adc
sub
outsl
dec
inc
mulb
push
or
nop
jge
pop
cmp
imul
fldenv
inc
pop
aaa
insl
repz
dec
loope
lods
hlt
cmp
sbb
fisubl
jno
pop
cmpl
cmpsl
stos
movsb
mov
mov
push
xor
test
rclb
dec
xor
mov
shrb
adc
cmp
mov
outsb
mov
dec
mov
in
or
dec
icebp
sbb
push
mov
push
out
movsb
orl
cmpsb
aad
jecxz
or
dec
push
test
xchg
jle
push
mov
mov
or
leave
mov
loope
add
sldt
mov
add
js
and
jne
mov
fcomp
int
jno
scas
test
sub
and
bnd
rclb
sub
lods
add
or
ljmp
push
jge
mov
jbe
mov
in
ret
int3
inc
and
mov
cwtl
outsb
push
negl
fadds
inc
cmp
pop
inc
test
scas
clc
lock
or
add
enter
sbb
jp
je
lcall
mov
or
push
mov
ds
jmp
subl
pop
jp
loop
ljmp
or
fistpll
shlb
test
pop
es
jo
pop
stc
mov
jno
aaa
cltd
pop
out
je
adc
xor
mov
mov
xchg
addl
int3
std
fwait
in
out
fdivrs
pop
or
push
hlt
add
jnp
dec
pop
and
mov
adc
mov
movsb
mov
inc
out
in
into
cld
jno
push
in
pop
fisttps
mov
lock
xor
arpl
xchg
xor
add
sub
xor
sbb
mov
js
stos
jmp
push
sub
mov
push
dec
xchg
jmp
daa
inc
xchg
lahf
clc
sub
ret
xchg
xchg
sbb
sbb
push
stc
jle
aad
fildl
arpl
rcl
dec
mov
xchg
arpl
icebp
dec
std
out
cmc
outsl
jo
and
jmp
ret
imul
test
loopne
test
out
cmp
xchg
out
imul
pop
shrb
xor
pop
inc
mov
lock
sbb
sbb
mov
clc
lcallw
repz
ret
cltd
mov
cmp
scas
pop
sbb
icebp
scas
test
fsubs
or
xor
jae
mov
roll
xor
push
push
mov
mov
pop
or
icebp
incb
push
daa
scas
movzwl
cmp
xchg
and
jnp
pop
cmpsl
popf
and
dec
ja
jmp
mov
sub
data16
testl
or
push
dec
jecxz
dec
adc
dec
cmp
ret
aad
mov
fst
push
inc
cmp
add
loopne
add
test
inc
or
pop
xor
jge
imul
sbb
xchg
xor
inc
sbb
xchg
insb
push
mov
sub
or
pop
scas
jecxz
mov
loope
mov
dec
pushw
mov
bound
mov
icebp
push
mov
test
mov
movsb
int3
popf
mov
aas
inc
stos
pop
mov
pop
ds
lcall
mov
jp
xchg
mov
sbb
jbe
lret
cmpb
cmp
adc
mov
and
lret
out
out
mov
adc
pop
xor
pop
pop
xchg
outsl
xor
jge
outsb
pop
xlat
jmp
xchg
repnz
mov
scas
pop
daa
sahf
push
xchg
cli
sub
test
mov
mov
arpl
ss
xor
push
dec
sub
rcll
fs
sub
mov
nop
jno
xchg
movsb
imul
push
stos
arpl
fucomip
sahf
adc
pushf
fadds
rorl
mov
and
push
shl
jge
cmc
in
rcr
fidivl
mov
mov
or
cmp
dec
mov
xor
dec
iret
mov
jbe
inc
and
xchg
adc
xchg
cmp
out
pop
and
mov
jmp
or
pop
jnp
insb
movsb
mov
sbb
inc
sub
jecxz
sbb
mov
xchg
std
das
out
jp
jb
test
pushf
loop
xchg
in
outsb
inc
xchg
data16
pushf
and
adc
scas
clc
mov
sbb
mov
xor
lods
xchg
jge
rolb
dec
push
mov
inc
jns
arpl
sub
nop
mov
insb
aaa
inc
mov
lock
push
xchg
orl
ss
dec
mov
push
jnp
fnsave
xchg
and
and
and
cmp
mov
and
mov
jo
sti
ss
mov
mov
lds
sbb
jp
movsb
sub
push
les
sub
sbb
stc
test
mov
loop
inc
dec
fidivrl
pop
add
mov
fimuls
fwait
push
adc
dec
inc
jne
ret
jnp
inc
out
mov
fwait
jae
jmp
sub
or
dec
add
test
aaa
int
or
in
pop
sbb
fsub
pop
mov
mov
or
jnp
fidivrl
add
fisubrs
pop
cwtl
adcb
sub
mov
pop
xchg
add
loop
aas
outsb
ffreep
sub
mov
xchg
pop
cmp
test
sbb
inc
popf
xor
jnp
mov
xlat
notl
jnp
add
adc
shl
cwtl
jb
aam
push
outsb
sbb
fsts
or
inc
out
clc
push
aam
cmpsl
insb
ret
push
cmp
push
inc
jp
xor
add
push
mov
mov
jp,pt
insl
xor
dec
adc
sbb
rorl
xor
loope
sbb
add
sub
mov
lock
adc
ds
pop
in
xor
std
inc
adc
cmp
sbb
sub
test
pop
fdivr
test
test
mov
mov
push
cmp
push
lahf
mov
stos
push
outsl
jns
stos
in
icebp
dec
sub
pop
repnz
push
popa
in
fdivrp
insl
add
adc
lods
fbld
and
pop
xchg
gs
imul
movsb
pop
mov
pushf
arpl
lret
add
testb
stos
cltd
ja
xchg
aaa
pop
out
sbb
cs
gs
dec
sub
xor
xchg
shlb
pop
sbb
jns
or
mov
jl
lahf
add
clc
cmpb
je
xchg
push
adc
into
inc
nop
in
mov
sub
ror
fwait
lret
adc
arpl
inc
pop
sub
sbb
in
lret
mov
pop
fs
push
xor
sahf
xchg
ds
leave
aad
dec
stos
jle
push
popf
shlb
mov
aad
shll
pop
jns
mov
jb
leave
pop
ss
xor
stc
aas
push
or
sbb
mov
hlt
sub
mov
in
insl
sbb
and
mov
repz
icebp
incb
fmuls
cmp
lock
xlat
repnz
mov
mov
lods
cli
in
jnp
push
in
push
mov
and
adc
mov
hlt
xor
ret
xchg
lods
adc
push
imul
in
push
dec
into
icebp
add
aaa
test
int
repnz
mov
ljmp
sub
fs
in
sarb
pop
int
aaa
cltd
test
jle
ds
sub
hlt
push
jecxz
out
xchg
xchg
shlb
push
in
test
dec
xchg
jp
xchg
mov
movsb
movsl
imul
sbb
add
or
call
idivb
mov
adc
mov
jns
jae
xchg
lock
inc
push
inc
inc
popa
cli
mov
aas
xchg
test
adc
rorb
jl
cmp
inc
in
pop
icebp
or
pusha
dec
mov
js
in
aas
add
pop
std
movsb
dec
sbb
mov
mov
mov
inc
cld
iret
jle
sbb
xchg
pop
icebp
mov
lret
movsl
into
dec
push
popf
popa
add
or
mov
or
lods
lds
in
inc
and
scas
cli
imul
fmul
push
jno
into
mov
mov
pop
scas
es
fwait
shl
and
cs
mov
mov
push
dec
scas
xchg
stos
popa
and
in
movsb
aad
loopne
dec
push
cmc
sbb
fidivrs
jno
test
pop
and
shlb
sbb
mov
stos
cwtl
inc
mov
mov
pop
xor
push
xor
mov
lock
jb
les
stc
fisttps
push
addr16
push
xchg
sti
dec
dec
fnstenv
pop
orb
cld
aaa
cmp
gs
lret
jnp
cmp
pop
ss
inc
in
mov
dec
push
push
into
loope
repnz
popf
xchg
test
into
inc
mov
pop
push
mov
mov
ret
outsb
dec
jno
stos
ds
enter
fistl
push
iret
sbb
push
add
cmp
int3
mov
inc
ja
push
mov
jb
cmp
mov
loop
push
out
das
jp
cmp
int3
cmp
inc
aam
inc
dec
or
xor
mov
ret
popf
ja
add
xchg
jo
xchg
push
sbb
mov
or
imul
push
inc
icebp
ficomps
jbe
faddl
mov
mov
adc
xlat
stc
inc
push
cmp
orl
jmp
sbb
enter
mov
dec
mov
and
das
or
ljmp
enter
adc
fcmove
adc
mov
xor
pop
test
or
lods
cmp
sahf
mov
cmp
int
push
imul
pusha
scas
out
dec
call
mov
xchg
or
dec
int3
xor
ret
loope
scas
mov
pop
sub
ficoms
sbb
lock
cmpsl
test
sbb
pop
add
test
lods
pop
dec
inc
test
jo
iret
lcall
lahf
mov
cmpsl
stos
test
cmc
les
lahf
and
xchg
stos
int
stos
fisttpl
cmpsb
sbb
or
aad
or
add
dec
dec
out
jl
adc
add
pop
pusha
and
sub
lret
mov
dec
call
cmpsl
adc
sub
push
pushf
sahf
mov
adc
mov
sub
lock
xchg
pop
or
mov
mov
rorl
pushf
cmpl
cmpsl
cmp
pop
mov
fwait
push
ja
push
mov
out
jae
and
out
adc
xchg
rol
sub
mov
loope
xchg
sub
hlt
sub
cmc
mov
dec
mov
sub
mov
mov
sbb
jb
iret
mov
xor
jp
add
mov
ret
stos
pop
push
inc
dec
and
add
and
pop
data16
pop
push
xchg
push
inc
xchg
xchg
push
xor
rorb
je
and
cli
sbb
dec
xlat
jp
xchg
jmp
cld
cmpl
xor
jl
xor
mov
adc
test
jae
cwtl
adc
xor
adc
test
idivl
sub
xchg
shrb
lock
movsb
in
and
fwait
adcb
aas
jnp
enter
push
decb
stc
mov
pop
mov
sub
sbb
pushf
adc
push
sub
cmp
cmc
or
jo
gs
cmpsb
push
ficomps
mov
xor
xchg
enter
dec
divb
cmp
in
mov
dec
aam
cmp
hlt
mov
imul
aas
mov
push
xchg
sub
rcll
cltd
sbb
std
cmc
shll
adc
pop
fistpll
into
add
adc
das
testl
aas
xchg
xor
dec
cmpb
jne,pn
outsl
adc
sahf
or
jns
lea
xchg
mov
sub
cmpb
dec
hlt
inc
pop
sbb
and
mov
mov
call
sbb
lcall
or
inc
and
cmp
mov
inc
dec
xchg
test
fs
xor
inc
cwtl
or
jmp
sbb
les
adc
dec
fimuls
shlb
sub
mov
lret
cwtl
sub
arpl
je
cmp
lahf
mov
push
stc
xchg
and
mov
sub
daa
pop
leave
test
cmpsl
in
cmp
mov
mov
shrl
movsb
jge
mov
fwait
xlat
dec
jb
stos
dec
push
add
lods
setl
xchg
adc
lods
loopne
es
push
cs
mov
sub
xchg
pop
repz
loopne
outsl
pop
pop
pop
scas
movl
cld
xchg
fwait
in
mov
inc
test
inc
pop
jns
mov
jns
cmp
call
sbb
sbb
adc
xor
and
push
or
sub
mov
jbe
stos
dec
xlat
xor
rcrb
push
loop
dec
mov
cmp
push
pop
adc
mov
jle
lods
mov
mov
mov
pop
ficompl
out
push
movsb
lret
xlat
imul
cld
inc
sub
out
gs
js
push
push
inc
insb
in
lods
lods
pushf
add
and
xchg
arpl
sbb
inc
ds
fisubl
adc
and
mov
js
pop
and
test
sub
shll
cwtl
lock
clc
int3
js
xchg
jne
js
rep
sub
loope
repnz
push
out
inc
scas
mov
add
daa
pushf
pop
jl
and
mov
cmp
add
mov
shll
insb
loopne
pop
push
pop
mov
adc
or
scas
lds
lea
xchg
sbb
sar
popa
std
xor
imul
lcall
lds
fnstcw
inc
sbb
xor
adcb
fst
mov
ja
mov
cmc
jns
mov
jno
repz
das
or
mov
into
scas
bswap
icebp
orb
into
or
push
pop
cld
pop
pop
sub
cwtl
cmp
sbb
sbb
mov
mov
lods
push
addl
jne
loop
sarl
pop
mov
jne
or
aam
cmp
xlat
ljmp
cwtl
push
repnz
mov
ret
sbb
imul
repz
cmc
aam
mov
mov
js
sub
cli
cmp
sbb
inc
dec
scas
jnp
stos
scas
dec
add
sub
gs
leave
or
addb
fucom
gs
push
int3
add
jmp
in
imull
stc
aam
mov
or
mov
scas
aad
adc
xlat
jno
ret
jle
xchg
aam
jno
mov
sbb
mov
cmp
jno
push
imul
xor
push
sbb
xchg
mov
fidivrs
push
jl
dec
and
and
inc
loopne
pop
subb
xor
xor
out
jb
test
jne
ret
jne
mov
sub
mov
out
mov
mov
pop
jle
loopne
or
sti
test
rcrl
jno
push
inc
pushf
test
add
je
in
mov
out
arpl
testb
sbb
sub
outsb
fnsave
mov
jae
insb
add
fistpll
inc
enter
mov
icebp
pop
ret
sarl
in
leave
mov
test
imul
dec
sbb
mov
mov
das
ficomps
push
sbb
inc
cwtl
sub
push
xchg
add
imul
outsb
jnp
push
jge
sbb
mov
insb
jns
xchg
movsl
jbe
bound
call
enter
xchg
stos
flds
movsl
and
psrlw
nop
pop
adc
jecxz
aad
cmc
dec
add
push
ja
popf
push
lahf
mov
insl
push
xor
pop
dec
mov
ret
and
inc
or
xor
jle
insl
iret
xchg
sahf
ljmp
outsl
out
cwtl
jle
stc
lds
adc
mov
mov
ds
sub
test
mov
sub
sarb
movsl
push
loopne
addr16
add
enter
jbe
es
int3
cld
cmp
mov
jp
mov
lahf
ss
insb
inc
cmpsb
jecxz
das
add
adc
in
cmp
sbb
jg
scas
in
hlt
nop
es
dec
out
cld
mov
push
and
xchg
scas
cmp
rcrb
xchg
sub
aam
icebp
xchg
sbb
test
and
pop
les
sbbl
sbb
jmp
jnp
popa
push
hlt
push
push
out
shl
movsb
pop
pop
pushl
or
adcb
xor
out
out
les
mov
loopne
mov
pop
mov
pop
inc
sub
xchg
pop
je
jno
dec
push
mov
adc
notb
add
cli
jle
stos
testl
sub
insl
push
imul
jecxz
xor
lock
inc
dec
les
imul
stos
dec
cli
adcb
push
fstps
cmp
cmp
ljmp
lods
jno
loopne
inc
or
out
inc
cmc
cmp
xchg
insl
xchg
inc
fs
xorb
cld
popa
gs
adc
rorb
jmp
sub
and
xor
jg
sbb
mov
daa
cmp
sub
inc
leave
inc
int
sbb
fildll
gs
ljmp
inc
insb
rolb
and
cwtl
icebp
ss
roll
or
jge
jmp
mov
jo
cltd
pop
aas
fstl
aad
mov
mov
shrb
sbb
aam
xor
adc
add
loopne
xchg
cmp
push
rorl
cmp
jge
xor
out
mov
pop
xor
lods
xchg
push
scas
stc
cld
scas
ljmp
mov
movsl
push
movsl
outsl
jl
test
adc
push
sbb
sub
pop
mov
add
push
adc
jae
lcall
ret
xchg
adc
sti
xor
cmp
jb
lahf
or
or
aaa
and
sub
mov
mov
shlb
insb
fisttpll
xchg
clc
orl
addb
mov
sub
repz
lods
inc
xchg
mov
loop
jle
mov
add
push
or
fdivr
push
in
sti
inc
adc
jns
mov
out
pushf
sahf
xchg
and
xor
outsl
out
mov
dec
jecxz
adc
mov
push
push
fbld
jmp
push
cmpsb
inc
jb
adc
mov
xorb
fiaddl
fst
lea
add
lds
mov
dec
or
xchg
dec
mov
xchg
mov
sbb
adc
mov
mov
mov
mov
lds
int
aad
push
pushf
jg
cmp
popa
inc
ljmp
push
push
or
gs
pushf
cmp
cmp
jl
inc
cltd
cmp
in
sbb
js
stc
rorb
int
push
adc
jnp
jno
xchg
movsl
lock
out
mov
rcll
inc
mov
adc
fistpl
cmpsb
cli
lods
xchg
jl
xchg
jl
cli
jb
popf
mov
push
pop
sbb
sub
xchg
stos
add
sub
lcall
rorl
arpl
popl
fstpl
pusha
popf
test
aaa
dec
in
mov
sub
cld
cld
xchg
in
sahf
scas
jo
ret
inc
in
test
packsswb
adc
out
rolb
pop
cltd
js
pusha
popa
lret
or
inc
and
call
mov
pop
mov
dec
scas
lods
daa
adc
pop
lds
loop
cmp
jmp
insb
call
mov
es
cmp
mov
sbb
push
inc
sbb
and
imul
mov
dec
jnp
mov
cmp
mov
loop
sub
sub
pop
cmpb
or
push
ds
mov
inc
in
pop
pcmpeqw
int3
call
push
xor
outsb
jl
jbe
sarb
dec
push
or
mov
pop
sub
insl
aaa
cmp
les
push
dec
push
dec
push
and
push
xchg
int3
or
inc
xor
in
inc
push
sbb
cmp
adc
negl
xor
roll
sbb
cmc
outsb
push
jle
or
adc
dec
cld
mov
add
mov
test
push
push
std
cwtl
mov
jmp
adc
adc
scas
iret
push
test
movsl
adc
imul
pushf
fisubrs
pop
sarl
and
pusha
lds
push
gs
je
lock
bound
hlt
pop
aas
mov
mov
adc
cmc
mov
or
xor
mov
test
mov
shll
push
jmp
ja
mov
mov
sub
loopne
pop
sub
mov
jl
mov
out
rcrb
inc
shrb
cmpb
rclb
mov
mov
outsb
stos
cmp
and
jo
mov
dec
cltd
push
xchg
sbb
jne
repz
stc
push
or
leave
push
int3
mov
pop
ja
mov
xor
aaa
pop
and
iret
fwait
push
jle
adc
push
mov
push
int
outsb
push
mov
in
ret
push
mov
mov
imul
rorb
out
sbb
add
das
xchg
in
jg
aaa
pusha
ror
fistpll
and
sub
jl
out
push
repz
ds
test
jle
mov
inc
xchg
pop
leave
into
sub
cmpsl
subb
addr16
fs
sbb
lret
push
insb
adc
jno
push
arpl
add
jmp
push
push
adc
mov
and
and
fcoml
cmp
sahf
loopne
jno
jecxz
shll
sbb
sbb
dec
in
dec
les
xchg
sti
dec
jle
mov
mov
js
aas
push
fwait
sbbl
mov
xchg
inc
mov
xchg
test
or
pop
cmc
mov
fsubl
sbb
out
mov
xchg
loop
insl
leave
add
mov
add
mov
mov
rorl
movsb
pop
jle
outsl
je
push
lahf
dec
fs
negb
mov
out
scas
push
cmp
hlt
push
xor
lock
mov
sub
hlt
pushf
push
push
mov
mov
idiv
sub
test
bound
mov
out
scas
mov
hlt
fists
sahf
pop
add
idivl
bound
mov
jo
push
fcomip
sahf
push
cli
js
mov
scas
mov
mov
push
cld
mov
pop
xor
js
je
ljmp
sub
sbb
dec
scas
sbbl
rorb
pop
movsb
xchg
jns
push
and
xchg
outsb
je
pop
sahf
push
shr
inc
xchg
or
aam
mov
xchg
shr
divb
pop
inc
les
adc
cmp
data16
mov
push
pop
xchg
mov
pop
sahf
movsb
inc
push
inc
dec
cli
scas
mov
adc
push
xor
dec
cmp
jge
push
inc
test
mov
mov
pop
sub
mov
ds
push
fdivr
into
cmpsb
mov
ja
pop
cwtl
out
das
fisubl
adc
jmp
es
sub
add
cli
cli
ret
jae
cmp
xor
mov
data16
or
daa
aam
xchg
push
daa
hlt
jecxz
adc
test
and
inc
lcall
xchg
or
mov
movsb
pop
lcall
cmp
fiadds
jb
das
cmpsb
addr16
stos
xchg
pusha
outsl
push
movsb
es
test
fbld
adc
movsb
lret
addr16
cmpsl
mov
dec
xchg
shl
fldln2
cmp
push
sti
testl
aad
or
or
xchg
testb
das
imul
pop
pop
leave
data16
add
inc
fidivrl
mov
adc
shrl
adc
lea
sub
test
pop
or
cmp
aad
mov
and
dec
sbb
xchg
imul
mov
cmpsl
leave
lods
add
push
mov
shl
out
fwait
xor
and
cmp
in
lcall
enter
pop
mov
or
ret
adcb
enter
addb
inc
push
inc
popa
ds
or
pop
gs
adc
add
mov
aaa
and
pop
dec
sbb
int
dec
dec
xor
pop
inc
sbb
push
stc
inc
ss
mov
test
add
lahf
xchg
movsb
ficomps
loope
imul
push
fists
scas
xor
movsl
cmpb
divb
jmp
xor
out
mov
fbstp
sarb
lcall
and
dec
stos
push
sub
mov
ja
pop
popa
fs
mov
lods
inc
inc
push
mov
xor
lods
fistpl
sub
out
or
ja
lea
and
ja
pop
inc
mov
sub
pop
jmp
movsb
xor
jmp
sbb
xor
or
mov
xor
push
or
xchg
lods
insl
inc
xchg
xor
or
movsb
inc
out
inc
mov
jg
mov
xchg
daa
mov
mov
pushf
or
in
push
inc
xor
idivl
lret
and
mov
jp
ds
sub
shlb
popa
push
mov
cwtl
jl
in
mov
add
cwtl
inc
xor
xchg
push
sar
mov
arpl
mov
mov
dec
addl
test
mov
or
rorb
in
dec
jns
cmpsl
insl
sti
pushf
xlat
lods
dec
and
cmp
inc
popf
fcomps
les
sub
jecxz
cmpb
sub
pushf
adc
and
imul
jnp
je
push
mov
pop
jbe
xor
sub
jns
fldenv
push
mov
leave
jmp
pop
adc
mov
mov
loope
stc
lret
mov
sub
mov
int
jne
bound
cmovl
jp
mov
jo
lods
lock
mov
mov
ret
lods
fldenv
loopne
push
adc
adc
lea
add
jge
add
dec
ja
loope
loope
xchg
jbe
rorl
lea
stc
test
mov
mov
outsl
xor
push
ss
mov
adc
and
mov
in
loopne
in
xchg
das
xchg
cmp
sbb
pop
jns
fdivp
lds
std
ds
sti
sub
xchg
scas
push
cltd
shll
loope
jmp
adc
mov
enter
pusha
cmc
lods
xchg
dec
in
xchg
push
nop
jge
or
testl
sub
sub
mov
mov
mov
cli
mov
aaa
jo
xchg
into
scas
mov
repnz
dec
ret
inc
stc
push
pop
scas
push
cmc
movsl
cmc
or
adc
mov
gs
pop
jg
frstor
xchg
popa
push
sbb
movsl
sbb
int3
and
cmc
ljmp
cli
mov
pop
imul
cmp
das
xor
in
inc
int
cmpsl
mov
cmp
adc
jne
sub
shrb
mov
popa
gs
lret
std
pop
push
xorb
cmp
ret
dec
add
fldcw
jl
and
out
pop
push
xchg
add
push
stos
push
outsw
mov
push
push
repnz
pop
push
pop
loop
js
lods
xchg
jge
lock
outsl
push
inc
sub
andb
out
scas
hlt
shlb
out
insb
repz
mov
cli
jecxz
ret
cmp
in
sbb
xchg
dec
mov
movsb
sbb
mov
dec
inc
dec
pop
test
pop
in
fs
icebp
mov
lods
imulb
xor
cmp
cmc
adc
iret
add
in
mov
scas
inc
imul
or
push
pusha
out
mov
sub
out
rcrb
repz
inc
push
push
pop
mov
lret
mov
mov
jb
lret
or
cli
jg
aam
mov
or
inc
pushf
rclb
sbbb
xor
adc
sub
adc
loop
int
push
jns
loope
adc
iret
dec
repnz
xchg
sbb
push
fnstenv
sub
xchg
jg
sub
pusha
cltd
rorb
cmpsb
jecxz
mov
loop
jbe
jnp
mov
inc
ret
mov
imul
pop
repz
cld
stc
pop
mov
add
mov
dec
aad
aas
xor
xchg
pop
sbb
mov
cmp
fistps
adc
sbb
sub
in
int3
movsl
xchg
xchg
jmp
mov
outsb
jbe
in
fwait
sbbl
sbb
add
aam
lahf
jno
cli
jno
pop
pop
dec
mov
movsb
sub
jmp
out
ret
sbb
in
add
or
add
jnp
xor
out
adc
pop
or
jb
mov
aad
xor
popa
in
ret
test
insl
jp
fimull
test
fstps
pusha
jg
adc
cmpsl
cmp
fisubs
into
pop
imul
lock
sub
cmp
dec
insb
inc
lret
mov
pop
mov
jp
pop
mov
adc
cmp
aas
mov
push
das
in
aaa
dec
sub
test
ljmp
lock
nop
xor
or
xchg
xchg
add
leave
sbb
pop
cmp
mov
loop
push
sbb
imul
jecxz
stc
idivb
rclb
incl
das
stos
xlat
cmp
lret
mov
lahf
push
adc
mov
mov
mov
sahf
add
pop
or
mov
movsb
pop
sbb
mov
jmp
sub
add
jecxz
inc
imul
stos
mov
jae
xchg
inc
add
mov
lahf
leave
jnp
in
aaa
pop
sub
adc
in
pop
mov
cltd
xchg
jecxz
push
and
push
or
loope
stos
xor
mov
push
cwtl
cmp
jmp
popf
es
sub
loop
push
dec
inc
stos
jge
pop
andl
inc
fistpl
jnp
inc
shlb
popa
cmp
int
push
outsb
push
xor
pusha
sbb
and
ja
cmpsl
add
push
adc
jnp
mov
mov
cmp
mov
cmpsb
es
outsb
icebp
test
in
push
or
and
clc
adc
addb
mov
test
or
out
les
mov
daa
insl
inc
sbb
test
mov
or
nop
dec
lahf
cmp
inc
sbbl
dec
loop
xlat
leave
out
push
cmp
jg
mov
jl
fwait
int3
aad
jns
in
bound
xchg
out
call
popf
cld
adc
sbb
pop
int
and
jnp
outsl
mov
mov
dec
cmpsl
xor
push
push
xchg
imul
jl,pt
jp
clc
movsl
sarb
fldcw
mov
repz
test
in
mov
and
shlb
xchg
mov
fcompl
lahf
mov
adc
pop
pushf
leave
sub
cld
lret
push
jl
shll
cmp
add
movsb
or
jne
js
fisubrs
sub
inc
jb
adc
jecxz
loopne
cmpsb
mov
sbb
inc
add
xchg
ja
inc
jno
aaa
jmp
mov
lahf
leave
jge
push
push
bound
lds
pop
add
jbe
dec
pushl
xor
inc
movsb
stos
xchg
cmp
cmc
cli
les
add
xor
sbb
sbb
add
out
or
addl
jmp
xchg
xchg
rorb
xchg
sub
inc
sbb
int3
mov
inc
pop
lods
lcall
cmpsl
mov
jmp
lret
hlt
gs
add
xor
notb
cmp
fdiv
hlt
in
fadd
pop
mov
mov
mov
shrl
loope
xchg
in
sarl
icebp
jmp
cmpsl
int
adc
int
idivl
xlat
iret
and
add
jo
fldcw
inc
jmp
xor
push
or
add
sub
movsb
mov
pop
and
adc
and
int3
add
mov
sbb
cmp
movsl
cmpsb
cli
mov
jp
inc
int
cmpsb
movsl
inc
mov
ss
adc
dec
mov
pop
dec
fneni(8087
rcrb
testb
bound
cmpsb
mov
push
push
pop
jmp
xchg
push
inc
or
add
sbb
push
mov
or
das
mov
test
imul
xor
fs
shrb
nop
jmp
sbb
push
xchg
rol
fstl
adc
xchg
ret
and
sbb
cmpb
subl
ss
repz
and
movsb
int3
dec
out
ds
ds
test
outsb
out
test
xor
pop
cmp
pop
fs
sbb
inc
pop
xor
pop
leave
push
repnz
sbb
outsl
mov
ja
addr16
loop
pop
jle
andl
dec
jne
mov
inc
sub
aas
pop
mulb
sub
mov
and
and
out
mov
or
jno
cmp
mov
scas
pop
or
and
repz
aaa
xchg
je
sahf
and
popa
mov
sub
lock
xchg
jl
sti
lahf
mov
push
cmp
subb
add
cmp
mov
mov
hlt
pop
out
push
inc
inc
fisttps
add
js
mov
cmpsl
sbb
mov
loope
and
inc
push
pushf
out
sub
fwait
test
or
shlb
mov
popa
cmp
lods
leave
into
lods
xor
and
iret
adc
fnsave
in
test
stos
and
xor
add
dec
ret
jno
sbb
sarl
jmp
mov
movl
jae
dec
pushl
ret
dec
sub
and
fwait
in
loopne
dec
mov
cmp
jg
push
clc
in
repz
je
push
jbe
dec
scas
mov
xor
push
mov
cld
lods
shll
out
jp
xor
mov
adcb
adc
lods
add
mov
inc
jns
arpl
mov
addr16
cs
or
cmp
pop
jb
push
test
pop
push
rcr
pop
stos
mov
push
mov
gs
push
add
loope
bound
lea
xchg
jo
mov
inc
dec
jne
jge
and
mov
push
addr16
addr16
out
testb
mov
loop
xchg
aad
sar
push
jbe
cmc
jg
sbb
cmpl
clc
andl
xor
mov
sahf
rcr
mov
and
pop
hlt
cmp
pop
mov
sbb
out
dec
jge
xchg
fisubrl
rolb
dec
and
mov
dec
jecxz
pushf
mov
mov
daa
xlat
mov
cmp
into
lods
xor
fcoml
jge
mov
mov
cmp
adc
adc
aas
pusha
outsl
add
xchg
sub
mov
cs
or
or
add
add
push
xchg
inc
fs
ret
xor
adc
and
adc
lods
ss
je
jp
pop
popf
xchg
jp
add
daa
mov
aam
test
cli
je
sub
cli
enter
cmpsb
xchg
push
xchg
push
sbb
mov
lea
push
cmp
sub
push
push
push
add
mov
add
mov
nop
mov
daa
xchg
and
mov
cmp
and
arpl
inc
mov
jbe
in
jle
in
mov
in
ja
jge
and
fmuls
hlt
mov
bound
fildll
mov
mov
push
out
ror
inc
push
jp
and
dec
subb
mov
aaa
jno
sbb
push
jb
pop
outsb
out
xor
xorb
sbb
fisubrs
sahf
ret
imul
sbb
jle
cmp
mov
push
xor
lcall
fcom
fsub
jecxz
pushf
add
outsl
jne
dec
in
inc
idivl
enter
clc
insb
popa
mov
in
fsts
jns
lock
in
sub
and
add
fiaddl
mov
sbb
jae
push
ss
fs
sub
stc
icebp
cmp
sub
inc
mov
out
inc
pop
mov
push
sbb
clc
xchg
pop
imul
fimull
int3
lret
or
shlb
xchg
jb
in
mov
and
xchg
es
adc
xor
mov
mov
push
vcvttps2dq
lods
movsl
test
jne
ljmp
inc
lock
shlb
ret
test
scas
shlb
pop
xchg
xor
jb
dec
adc
sbb
divl
mov
jnp
mov
sahf
out
push
sbb
daa
icebp
ja
mov
lea
xor
mov
pop
or
xchg
xor
insb
jne
sarl
sbbl
orl
sub
cmp
in
and
out
sbb
add
add
push
out
stos
mov
stos
jnp
lcall
mov
int
or
in
sahf
sbb
imul
lahf
sbb
mov
test
push
dec
into
or
push
cmp
hlt
movq
cmp
dec
push
orl
jae
movsb
xor
notl
into
lret
addb
popa
adc
hlt
into
cmpsl
add
pop
push
ret
push
pop
mov
push
insb
pop
and
icebp
mov
test
or
mov
jmp
jecxz
jno
js
dec
mov
or
add
xchg
or
out
imul
jmp
pop
lsl
test
dec
mov
nop
xchg
mov
cwtl
sub
subl
or
testb
xor
dec
nop
push
je
xchg
mov
enter
cli
in
fbld
push
mov
gs
dec
shll
lds
out
push
pop
pop
inc
dec
inc
mov
adc
lret
subb
jle
int3
xchg
fwait
int3
fwait
test
mov
sbb
mov
add
jl
mov
pop
loope
es
ja
or
jecxz
inc
jle
adc
sub
sbb
aam
xchg
mov
pop
vmovups
or
mov
inc
sarl
call
leave
xlat
imul
sbb
add
es
sbb
or
push
loope
xchg
andb
xchg
dec
lods
out
leave
lret
sbb
insb
xchg
inc
pop
stos
add
xchg
std
xor
insl
sbb
mov
mov
adc
sbb
mov
lock
jl
add
cs
pop
pop
js
mov
push
fnstsw
mov
mov
jne
mov
sbb
fidivrl
mov
mov
add
fcmovnbe
cmc
inc
rcr
inc
bound
jo
loope
scas
xchg
daa
sbb
jbe
aam
cmp
sbb
and
xchg
xor
dec
ret
imul
push
and
and
xchg
xchg
pop
jns
notb
scas
mov
insl
shrl
pusha
and
nop
fmuls
cmp
add
mov
mov
lcall
pushf
adc
fsubr
outsb
pop
pop
ja
popf
loopne
push
js
inc
or
push
jno
popw
and
fists
mov
je
loopne
xchg
mov
push
mov
xchg
jb
mov
or
add
hlt
inc
mov
int3
mov
arpl
fsubrl
imul
ss
gs
mov
aas
hlt
sti
jle
das
ja
aam
lret
shrb
mov
out
movsl
mov
nop
jnp
jmp
mov
xlat
test
and
nop
jb
sbb
sub
add
pop
jnp
mov
mov
jno
aaa
sti
pop
out
xlat
movsb
notl
cwtl
inc
test
enter
push
and
popf
xor
daa
adc
push
cmp
shr
mov
repnz
mov
mov
xchg
cmp
ret
or
mov
test
mov
add
outsb
mov
and
push
jae
out
jne
mov
outsl
lock
pop
notl
movsl
cmpsb
stos
scas
cmpsl
fidivrs
out
or
and
shrl
mov
cli
das
pop
or
mov
inc
adc
ds
gs
sub
or
jg
stos
mov
dec
jbe
adc
inc
negb
frstor
add
lds
arpl
mov
mov
mov
loope
sar
jae
sub
inc
xchg
sub
mov
scas
add
iret
jl
fcmovnbe
sub
fcompp
mov
jle
test
inc
jl
jns
mov
and
loopne
and
adc
mov
outsl
fisttpll
stos
outsl
jbe
std
in
out
ss
lea
outsb
lcall
jge
xchg
cmpsb
inc
push
and
jbe
popa
dec
fisubl
lods
jns
xchg
adc
fdivl
mov
sub
insl
imul
xor
inc
inc
in
xchg
and
mov
sbb
addb
dec
adc
mov
popf
pcmpgtb
rol
inc
fcomip
jmp
out
xor
and
mov
jne
push
mov
xchg
cli
dec
loope
push
outsb
jmp
mov
cmp
pop
mov
fsubr
lea
and
call
loop
mov
push
btr
mov
shlb
add
ret
fisubs
sbb
stc
clc
lea
test
sub
aam
sbb
push
inc
or
popa
repnz
stos
lret
xor
jb
imul
xchg
pushf
cmpsl
adc
mov
test
push
fcomi
push
shlb
stos
push
mov
push
jl
mov
fwait
in
push
mov
xchg
inc
dec
lcall
iret
jnp
scas
subl
xor
data16
or
cld
pop
aaa
cmp
add
jns
xchg
into
jb
out
jb
jae
pop
ficomps
push
dec
sub
dec
cmpsb
xchg
ljmp
movsb
inc
mov
fs
add
gs
pop
sbb
nop
cmp
faddl
daa
xor
sbb
push
inc
sub
fadds
inc
inc
jb
int
into
imul
ds
or
out
call
test
in
aas
xor
adc
fwait
jecxz
rdmsr
insb
inc
or
add
ret
or
leave
cmp
mov
push
imul
jge
push
gs
dec
icebp
mov
pop
add
ja
arpl
cmp
pop
out
add
test
jl
mov
out
test
loopne
test
into
add
cmp
cwtl
lock
imul
mov
bound
cmovo
test
mov
xchg
scas
mov
ss
cmpsl
pop
pop
fs
aam
pop
daa
ja
sti
insl
aaa
pusha
inc
dec
sub
lahf
ds
xchg
int
lods
lock
push
cwtl
in
lret
enter
dec
sarb
int
scas
pop
out
das
shlb
dec
sub
sub
lcall
out
les
mov
stos
cmpb
push
inc
test
push
in
std
xchg
pop
lds
jmp
fwait
pop
clc
jb
xchg
xchg
stos
push
out
je
mov
dec
dec
or
rcr
js
jns
popf
jl
pop
pop
int3
push
addr16
pushf
xor
fdivs
ret
inc
sbb
mov
mov
imul
int
mov
dec
hlt
add
es
inc
testl
loopne
enter
movsb
inc
test
enter
rcrb
push
push
sbb
fsubrp
test
cwtl
pop
scas
fcoms
mov
push
das
jp
sbb
repz
and
push
in
jae
push
pop
sub
jae
ss
shr
xchg
push
cwtl
sub
push
fisttps
jmp
mov
cmc
pop
fdivs
lock
xchg
rorb
cmpsb
jns
fadds
ljmp
setp
sbb
sbb
ja
popa
xchg
cmp
mov
xor
pop
push
adc
add
inc
int
lahf
ret
push
adc
jo
in
arpl
xlat
jle
addr16
out
sub
insl
sub
sbb
dec
addr16
and
fcmovb
test
pop
iret
or
aam
mov
xchg
les
inc
fidivrl
jo
movsl
and
dec
outsb
mov
inc
dec
xchg
jnp
notl
out
lcall
jb
rcll
imul
pop
cli
xor
mov
add
xchg
lea
fidivl
adc
cwtl
ds
std
movsl
addl
cmpsb
fildll
pop
jl
jge
or
sbb
dec
push
sbb
fcom
and
jns
lock
aad
cli
loope
aad
inc
pop
sbb
shl
dec
pop
fwait
mov
lds
mov
sbb
lcall
gs
and
es
fdivs
adc
mov
movsb
les
dec
jp
jae
loope
test
std
xchg
ja
sub
xchg
loopne
xchg
cltd
xchg
ret
pushf
ja
aaa
pop
or
add
ljmp
fbld
hlt
inc
sbb
fs
test
fildl
bound
jo
mov
lods
mov
xor
dec
mov
jb
adc
xor
repz
and
sub
leave
and
les
adc
sbb
pop
dec
gs
jge
or
xor
pusha
lea
mov
push
leave
and
mov
lret
imul
mov
ja
test
inc
jmp
push
shll
fisubrs
stos
push
inc
ss
arpl
cmp
inc
fldcw
sbb
out
push
outsb
jne
subl
pop
xchg
test
mov
bound
stc
or
out
inc
mov
add
cmpsl
inc
cmp
jmpw
mov
adc
jmp
mov
xor
push
pop
stos
sbb
cmp
cmp
adc
inc
mov
leave
mov
sub
xchg
mov
popa
dec
mov
sub
dec
dec
out
test
clc
mov
mov
xor
sub
dec
adc
mov
xchg
pop
sbb
push
pop
push
lods
lods
dec
pop
repnz
test
jp
xchg
leave
cltd
cmp
xlat
jl
fwait
mov
into
sub
push
mov
mov
mov
imul
sub
in
fimuls
ret
imul
psrad
or
lcall
xchg
stos
fwait
ja
test
je
repnz
mov
in
mov
mov
xchg
je
lret
popf
add
mov
lcall
or
fisttpl
mov
dec
xchg
inc
add
jle
cmp
subb
jo
into
mov
sbb
hlt
mov
int3
pop
fdivr
ficoms
inc
jae
sbbl
popa
out
stos
enter
lret
push
jnp
mov
nop
pop
push
aas
gs
je
mov
xlat
ss
repnz
mov
jp
enter
xchg
jl
mov
idivl
cmp
pop
sti
cltd
mov
lds
out
xchg
dec
pop
daa
xor
lods
insl
xor
call
sahf
xorb
push
adc
aad
mov
cld
xor
imul
stc
pop
pushf
jne
cs
fisubrs
mov
loopne
cltd
xchg
pushl
lock
xchg
aaa
xlat
inc
lcall
into
mov
or
stc
sub
pushf
in
movsl
or
addl
mov
mov
jnp
popf
pushw
enter
xchg
in
adc
pop
and
dec
inc
mov
shr
sub
insl
movsl
dec
xchg
push
imull
mov
ret
sbb
xchg
les
cli
push
jecxz
pushf
ds
mov
pop
add
pop
push
inc
jno
daa
pop
adc
cmp
ret
mov
fwait
loopne
rorl
imull
call
scas
lcall
test
mov
jmp
movzbl
mov
cmp
addr16
sub
outsb
mov
out
and
jnp
ja
insb
ds
xor
adc
enter
pop
lcall
std
inc
test
icebp
dec
pop
das
add
mov
dec
adc
cmp
and
movsb
movsl
mov
mov
lcall
ss
daa
mov
mul
aas
jecxz
inc
add
ret
pushl
je
adc
adc
in
xchg
adc
pop
add
fcomp
inc
xchg
shlb
fidivl
inc
in
mov
pop
xor
mov
sub
adc
inc
mov
stos
or
jmp
sarb
sub
leave
push
xor
fcoml
ffree
fwait
call
loop
jp
xchg
int
in
add
xchg
fwait
dec
pop
push
andb
cltd
out
adc
int
mov
lret
add
stc
dec
jae
push
cmp
sbb
xchg
ret
ret
and
jno
ljmp
jns
jae
pushf
or
mov
call
jne
gs
xchg
sub
or
lock
xchg
jo,pn
mov
sahf
mov
test
dec
mov
into
pop
jae
in
sub
test
out
popf
sbb
fmull
mov
stc
lock
sub
scas
aas
xchg
jb
dec
push
cmpsl
popa
push
jne
dec
inc
movsl
test
movb
pop
test
mov
cmpsb
aas
pop
sbb
fst
mov
jae
xchg
xchg
inc
mov
push
xor
ljmp
add
mov
pop
pop
push
lret
test
lods
dec
or
fwait
jns
scas
dec
in
mov
dec
xor
sti
aad
mov
mulb
jmp
adc
xchg
mov
mov
adcl
fimuls
mov
cmp
ficoml
xor
xlat
sub
iret
sub
js
stos
ret
pop
mov
mov
mov
add
pop
jg
mov
fdivp
xor
ss
dec
xchg
cltd
fidivrs
mov
rorl
jbe
add
push
into
outsl
das
push
and
push
mov
mov
cmp
stc
inc
adc
push
adc
sarb
xor
int
add
mov
xor
cmp
push
mov
lret
ja
adc
lahf
fimuls
mov
inc
shll
insb
mov
dec
xlat
loopne
movsb
mov
pop
cmp
push
pop
je
in
adc
dec
pop
stos
aam
movsl
mov
adc
adc
sub
dec
mov
repz
xchg
adc
js
xchg
pop
add
out
mov
adc
mov
xchg
lods
mov
and
add
clc
mov
ja
mov
repnz
mov
ds
fidivrl
mov
adc
dec
insb
addr16
or
ljmp
iret
cmpsl
fistps
icebp
das
or
dec
pusha
call
sub
movsb
inc
std
sahf
iret
adc
xor
pop
and
movsb
sbb
or
les
jns
test
outsl
clc
cmp
push
mov
hlt
and
roll
aad
clc
mov
cs
push
mov
mov
ss
push
and
daa
xor
sub
xchg
in
or
cmp
xchg
adc
jnp
or
pop
cmc
inc
sub
fwait
mov
mov
fistps
mov
ds
xchg
mov
jne
jnp
and
dec
sbb
in
add
aam
into
sbb
inc
push
in
fs
mov
jne
mov
rcrl
xchg
jecxz
pop
jne
out
jb
and
cmpsl
movsl
mov
stc
ds
aad
push
insb
nop
or
push
lds
and
pop
xchg
push
sub
or
lcall
jl
out
lods
ret
test
or
lds
mov
rorb
mov
pop
jge
into
mov
ftst
mov
divl
fadd
inc
mov
add
js
jp
sti
outsl
sbb
push
cltd
pop
mov
jne
mov
pushl
and
jb
divl
mov
cmp
mov
sbb
stc
cltd
out
sbb
or
insb
arpl
mov
fcmovnu
pop
pop
jg
mov
std
push
mov
adc
mov
lret
xchg
out
test
jnp
inc
jno
xor
rorl
push
mov
add
add
dec
lea
xchg
mov
adc
sub
out
or
mov
pop
jnp
movsl
dec
iret
jecxz
mov
push
jp
divl
push
mov
fdivs
lahf
mov
and
test
xor
xchg
clc
mov
in
sarb
sub
out
aad
popa
jle
xchg
or
daa
loopne
xor
ret
add
mov
xchg
cld
lret
popf
add
call
pop
and
popa
std
aaa
hlt
cmp
cwtl
pop
inc
jns
xorl
imul
jp
push
xor
jp
push
cmpsb
test
or
lahf
lods
inc
imul
outsb
stos
aam
cld
and
pusha
cmpsl
sub
mov
insl
dec
mov
fs
stos
or
jbe
cmpsl
ffree
add
xor
push
push
jmp
in
jne
mov
adc
dec
das
cmp
rorl
shll
leave
mov
cmp
push
fdivrl
add
mov
adc
out
pop
or
std
js
push
dec
xchg
push
pop
out
adc
lea
ds
ret
inc
adc
xchg
dec
sbbb
or
bnd
push
or
adc
xchg
pushf
ds
lret
gs
push
mov
sub
add
mov
pop
clc
jecxz
aaa
push
iret
sub
cmp
es
cwtl
push
scas
sarl
lret
xor
xor
sarb
push
lcall
stos
mov
push
jmp
dec
adc
stos
loope
cmpsl
jge
gs
push
xchg
jo
filds
and
ret
cli
or
mov
in
out
out
cmp
enter
test
sub
and
cmp
or
push
inc
aad
jbe
stos
dec
insl
jae
dec
sahf
push
sbb
ljmp
rolb
sub
inc
fcmovnu
xor
lcall
bound
inc
test
mov
popa
in
mov
bound
xchg
into
mov
rcrl
adc
push
testb
in
push
jecxz
dec
inc
jecxz
mov
testb
fs
scas
cmc
xchg
dec
subb
std
mov
sub
stos
push
rcrl
jmp
pop
cmp
cs
test
cmp
inc
pop
push
lock
inc
jbe
push
sbb
mov
vpsraw
lcall
testb
xor
xchg
sub
adc
popf
mov
xchg
outsb
pop
mov
fdivp
inc
mov
pop
inc
leave
imul
cmp
pop
fbld
in
sbb
enter
mov
push
rcr
jno
sbb
mov
xchg
in
and
aaa
xchg
xor
cmpsl
lds
pop
insl
xchg
or
in
imul
xor
leave
js
push
or
loop
popf
xchg
sarl
add
hlt
mov
push
lret
mov
xor
outsl
cltd
fcmove
jb
data16
hlt
call
push
arpl
insb
jmp
fisttps
int3
dec
xor
jl
jge
insb
and
popa
pop
pop
adc
adc
ret
or
fstl
into
loope
mov
jmp
mov
cmp
ljmp
out
andl
std
rcr
mov
and
call
outsb
shr
in
pusha
sar
sub
insl
and
push
sub
sbb
cmp
xlat
movsl
fsubrl
or
dec
mov
nop
outsl
sti
and
jp
test
repnz
xor
enter
mov
orl
push
lcall
xchg
aas
test
out
decl
xor
js
adc
xor
sbb
test
gs
mov
stos
inc
mov
sar
int
xchg
cmp
lret
mov
jp
stos
xchg
stc
push
inc
adc
push
cwtl
adc
inc
je
in
outsb
cmp
in
mov
cmp
adc
push
in
iret
shrl
lret
mov
jg
pop
scas
inc
into
popa
jecxz
xchg
mov
jmp
or
arpl
les
sub
and
sbb
unpcklps
sbb
loopne
movsl
rclb
daa
push
xchg
mov
add
pop
mov
sbb
shrb
cltd
pop
imul
pop
pushf
and
mov
push
imulb
or
xor
sahf
rcll
frstor
cltd
daa
not
inc
int
cmp
lcall
sub
mov
shlb
loop
or
out
add
mov
ja
sbb
insb
loop
sbbl
sbb
mov
aas
aam
ret
push
sub
and
test
mov
pop
outsb
sub
mov
and
hlt
dec
nop
jnp
and
pop
dec
scas
jmp
bound
dec
mov
and
stos
mov
jmp
loop
leave
fsubr
out
jno
dec
div
sbb
jns
push
ds
scas
mov
movsl
pushl
jae
mov
sbb
ret
cltd
nop
jg
mov
out
out
lahf
inc
or
mov
adc
cltd
cmpsb
and
xor
cmp
in
hlt
xchg
pop
mov
cmp
sbb
and
xchg
mov
cmp
pop
adc
adc
pop
xchg
push
imul
add
push
std
cltd
dec
sub
cmp
aam
sub
sbb
rolb
popf
nop
mov
imul
sar
xor
jmp
xor
je
dec
cmp
jb
mov
jg
dec
sub
out
lret
or
push
cwtl
mov
sub
leave
loope
add
popf
and
dec
xchg
shl
scas
xchg
jae
pusha
das
xchg
xchg
imul
and
xchg
dec
pushf
test
shll
ds
imul
loope
xchg
and
push
push
add
pop
test
xor
dec
or
test
shrl
pushf
scas
mov
loope
pop
popf
xchg
mov
jno
clc
cmp
imul
sbb
pop
pop
or
stos
lea
mov
sahf
in
lahf
testb
adc
add
inc
rorl
mov
ja
nop
xor
sbb
push
jge
sti
clc
and
lahf
cmp
jo
shll
enter
jge
aaa
jne
dec
fwait
sub
roll
mov
push
xor
lods
test
mov
divb
in
fimuls
mov
jp
andb
and
std
inc
leave
pop
add
xor
test
and
cmpsl
std
sbbl
mov
inc
jne
or
pop
ss
or
outsb
arpl
fdivrl
cmp
dec
bound
xor
sbb
push
mov
or
and
pop
pop
aas
sub
push
sub
jae
fmulp
push
pop
in
mov
xchg
rclb
fs
cmp
pop
inc
data16
dec
xor
jo
into
scas
addr16
stos
xor
inc
and
xchg
cmp
and
in
clc
push
loop
lea
jno
mov
mov
jbe
cld
test
aam
dec
and
sbb
adc
negl
jno
inc
out
in
xlat
adc
pop
fsub
mov
inc
outsb
sub
lods
push
filds
mov
pop
jbe
mov
mov
and
arpl
inc
inc
sarb
jg
jae
inc
inc
cld
int3
jge
mov
inc
cmp
cmc
or
lock
push
jb
shlb
fcmovnb
ss
xlat
pushl
or
inc
push
int
xor
cmpsb
lods
add
das
sub
out
mov
lcall
inc
pusha
push
sbb
jmp
idivb
push
inc
xor
add
push
ljmp
repnz
sbb
ret
cwtl
scas
out
adc
inc
imul
jecxz
dec
add
or
fsubs
xchg
clc
dec
sub
out
jne
jl
icebp
movsb
sbb
in
mov
jnp
scas
mov
xor
call
add
xchg
shlb
or
push
cmpsl
mov
lock
sti
push
aad
sub
push
push
mov
lret
dec
xor
cmp
pop
scas
sbb
pop
cmpsl
lods
pop
push
ficomps
push
mov
xor
sub
sub
or
ficoms
cs
push
popf
pop
sub
inc
mov
fnsave
push
test
or
les
xchg
push
and
jb
sub
bound
rcr
mov
mov
xchg
adc
rcrb
mov
fwait
and
cmp
pop
cmpsl
divb
sub
pop
jb
push
pop
add
pop
mov
btc
jg
call
and
movsb
icebp
mov
cltd
fs
aas
aaa
pop
addr16
push
aam
jp
shrl
mov
outsb
fdivrs
jg
cmp
mov
adc
leave
jnp
dec
aam
sub
jge
jge
jmp
inc
pushf
mov
add
mov
xor
nop
inc
inc
sbb
fiadds
dec
mov
mov
cmp
repz
sti
testb
sbb
lock
lea
outsl
mov
lods
pop
jae
push
out
jne
in
hlt
xor
xor
xchg
out
loopne
pusha
sbb
mov
and
in
adc
sub
xchg
ret
mov
invd
cmc
sti
xor
add
outsl
mov
push
xlat
xchg
xchg
jno
fsubrp
mov
test
xchg
pop
or
fmuls
jae
xor
loop
cld
data16
pop
insb
mov
and
xchg
shl
push
dec
xchg
mov
je
pop
adc
movsl
in
into
push
mov
xor
loopne
cli
popa
sbb
adc
cld
fadds
iret
jo
adc
sbb
push
jnp
jmp
js
push
lret
xor
roll
xchg
jmp
mov
cmp
leave
out
mov
test
subl
push
cmc
add
and
dec
pop
mov
xchg
je
pop
pop
popa
xlat
mov
cltd
leave
xchg
fs
lea
dec
andps
fadds
mov
push
fwait
and
push
loop
cmp
add
sub
add
ljmp
gs
xor
jmp
or
or
aas
fisttpll
add
and
gs
cmp
mov
add
add
pushf
xchg
mov
push
ja
bound
imull
xchg
jecxz
mov
cmp
lret
and
fdivrs
and
xor
push
and
and
mov
mov
lds
and
adc
jle
mov
xchg
mov
ret
mov
out
cmp
or
mov
or
out
aas
fidivrs
and
or
xor
pop
mull
add
xchg
cmpl
adc
movsl
mov
out
shlb
andb
fs
test
adc
in
jmp
scas
dec
pop
outsl
xor
popa
mov
cmp
lret
ljmp
inc
repz
pop
cmp
dec
mov
imul
mov
lahf
add
cmp
mov
xchg
je
pop
and
test
stc
xor
enter
pushf
inc
jno
hlt
push
adc
lock
mov
cmpsl
push
mov
lds
test
mov
mov
sbb
andl
sub
sbb
fwait
mov
sti
cmp
cli
adc
ficoml
mov
fmull
nop
xchg
insb
push
je
xchg
mov
cld
not
fstps
or
pusha
dec
imul
sbb
and
loope
loop
xor
mov
and
cld
ss
sub
cmp
pop
lods
test
dec
pop
add
xchg
out
movsl
sti
xchg
mov
in
cmp
jbe
push
mov
cmp
mov
mov
mov
stos
xchg
sub
push
inc
mov
lds
stos
xchg
ss
in
call
push
dec
and
pop
xor
es
inc
shl
adc
idiv
out
aad
xlat
pop
push
lahf
divl
jl
sub
pop
push
out
popf
lret
outsb
push
xor
inc
add
out
mov
add
jmp
out
sarb
add
dec
adcb
mov
mov
jno
mov
enter
push
pop
or
insb
adc
rcrb
test
test
test
fisubrs
and
push
add
push
mov
addb
ja
xchg
bound
stos
stos
scas
testb
ret
stos
negl
dec
pop
in
cmp
mov
add
push
data16
daa
cmc
sbbl
lock
rol
push
mov
xlat
add
pop
sub
lods
dec
std
enter
ja
je
iret
inc
aas
out
das
or
sbb
pop
add
ss
bound
sub
aas
sbbl
mov
fists
add
mov
pop
or
lds
iret
mov
movsb
hlt
sar
xlat
inc
mov
mov
jl
push
inc
adc
aad
aas
loope
dec
cld
rcr
movsl
iret
lahf
push
sub
fs
cld
sti
or
inc
xchg
lds
cmp
push
inc
test
sbbl
rclb
inc
cmp
jo
popf
mov
out
cmp
cmp
adc
sub
repz
or
mov
sbb
in
lret
jne
mov
mov
pop
jo
xor
xchg
orb
fwait
xor
cmp
rcll
into
pop
pop
in
je
push
inc
xor
push
cwtl
mov
stc
movsb
push
xchg
sbb
pop
sarl
mov
mov
add
xchg
push
out
or
rep
pop
jle
push
xor
fcmovne
lods
xchg
cltd
in
cmc
iret
inc
or
mov
or
movb
and
jg
mov
es
xor
les
push
adcb
or
sbb
sub
push
ret
out
ret
add
xor
jmp
clc
push
bound
mov
mov
adcl
push
inc
adc
fwait
inc
and
add
les
add
dec
es
mov
arpl
test
in
xchg
fstp
jp
cmc
push
out
int3
xchg
bound
pop
pop
clc
in
iret
outsl
adc
push
lahf
mov
or
orl
fs
lahf
and
lea
in
jo
push
add
sub
aas
push
out
push
maskmovq
mull
out
rorl
mov
out
xchg
sub
xlat
test
xchg
dec
push
cmc
jge
jns
stc
roll
xchg
in
pushf
push
inc
dec
movsl
xchg
or
xchg
inc
in
sbb
enter
sub
push
add
in
je
scas
shll
nop
sub
rdpmc
jno
xor
sbb
jmp
leave
pushf
and
push
addb
xchg
inc
testb
and
lea
sub
mov
or
inc
js
jle
push
iret
insl
cmp
ja
scas
adcb
pop
cld
mov
pop
addr16
call
xchg
mull
jne
cmp
add
inc
or
add
test
mov
popf
loopne
leave
sub
sub
arpl
cmp
jmp
push
mov
push
fisubrl
fs
xor
iret
outsb
pushf
outsl
repz
addl
dec
cmpl
jns
xor
dec
popa
or
dec
mov
pop
sub
mov
stos
pop
lcall
sbb
mov
adc
and
lret
xor
popf
xor
dec
xor
sbb
xchg
std
scas
jmp
or
lods
cmpl
scas
jmp
loop
lahf
xchg
cmp
pop
pop
mov
mov
xchg
and
ret
loop
sbb
push
lret
and
bound
in
pop
outsb
mov
fwait
or
sub
sarl
lds
mov
add
xchg
rolb
jns
fildll
mov
test
jne
jo
cli
pop
imul
pop
cmpsl
inc
fyl2xp1
lcall
aam
cli
mov
cmp
xchg
mov
mov
test
fdivl
pop
mov
fsts
xor
scas
outsb
lahf
in
insl
add
testl
movsl
push
add
and
push
lods
dec
fmul
pop
mov
cmp
mov
not
mov
sbb
dec
mov
mov
adc
mov
pusha
push
inc
ror
sub
xor
xor
dec
inc
es
cwtl
into
aam
inc
cmp
dec
xchg
bound
mov
lcall
andb
lods
push
cmpl
sbb
mov
xchg
popa
cmpsb
data16
dec
insb
cld
mov
push
imul
sub
fdivl
ljmp
fdivs
inc
sub
xchg
sbb
aad
or
add
loop
pop
shrd
jle
outsb
inc
push
or
push
insl
pop
mov
cmp
rcll
inc
push
out
insb
jg
in
xchg
pop
shrb
sub
aas
jae
xlat
fidivl
xor
fucom
sbb
cld
scas
push
pop
mov
movsb
lock
sahf
inc
leave
lcall
mov
push
aad
push
lods
and
sbb
and
enter
ret
jo
cli
sub
adc
pop
push
pop
push
fdivs
mov
cmpl
inc
and
lds
sub
out
xchg
mov
dec
lds
jmp
lea
lcall
idivb
push
xor
or
push
movsb
sbb
xchg
sar
cli
imul
mov
das
mov
push
dec
imull
adc
rclb
inc
xorl
ds
cmp
cmp
mov
and
sbb
mov
push
or
sbb
outsb
lret
mov
xor
enter
push
shl
add
mov
loope
adc
inc
test
test
push
jo
mov
repz
add
repnz
fs
mov
adc
add
push
dec
sbb
mov
push
movsl
mov
xchg
loope
leave
inc
xor
pop
and
xchg
xlat
mov
pop
xchg
cmp
fimull
ds
xchg
je
push
dec
cmc
sbb
xchg
adc
and
popa
jg
mov
xor
inc
xor
pop
aam
push
pop
dec
shll
pop
loope
push
jle
adc
shrb
pusha
rolb
mov
loop
nop
sar
sarl
rolb
scas
cmp
xor
inc
cmp
and
testb
xchg
jp
mov
xor
es
in
pshufw
cmp
jmp
shrl
movsb
lret
lds
leave
push
push
ret
inc
in
ret
insl
xchg
test
add
adc
push
cwtl
sbb
ds
lcall
into
or
xchg
push
sahf
out
dec
out
call
pop
sub
push
lock
cmp
inc
dec
test
or
jp
inc
in
jg
outsb
adc
add
adc
jmp
out
sbb
and
adc
lods
xchg
std
movups
jbe
mov
iret
rcrl
xorl
pop
clc
daa
cwtl
sub
int
fs
or
movsb
je
test
xchg
push
push
adcb
cmp
ljmp
mov
jmp
push
mov
test
gs
dec
out
fadd
adc
stos
cmc
mov
loope
cmc
sub
fbld
loop
cld
xor
das
repz
fldcw
sti
jp
mov
jecxz
and
add
jmp
into
jo
adc
stos
mov
adc
std
enter
flds
cmp
inc
addl
cmpsb
jns
sbb
data16
push
jl
aas
insb
imul
fcoml
jnp
fwait
cmp
pop
pop
negl
insl
xchg
or
xor
mov
mov
cmpsl
pop
dec
dec
rorl
imulw
xchg
cmpsb
jbe
outsl
int
in
mov
mov
mov
jg
jmp
push
inc
ds
push
push
mov
int
outsl
mov
movsb
jo
cltd
xlat
or
inc
inc
fwait
lret
adc
or
mov
inc
push
mov
and
test
xchg
mov
sbb
xor
pop
mov
fwait
adc
push
mov
pop
push
in
jl
adc
xor
push
add
sub
push
sub
out
rcrb
and
xlat
aam
fwait
push
lcall
or
mov
movsl
add
and
arpl
mov
cwtl
cmp
loope
sbb
outsl
nop
mov
lds
mov
xchg
movsl
outsb
std
jb
sub
lret
mov
sbb
push
pop
test
push
les
sarl
sbb
loope
stos
or
xor
mov
mov
mov
jl
xor
ss
hlt
hlt
push
sahf
lea
fdivr
lcall
adcb
pop
xor
je
pusha
inc
rclb
jge
insb
mov
jmp
or
lea
data16
cs
push
push
mov
mov
or
and
lea
push
lret
into
push
out
cmp
pop
mov
jnp
mov
dec
pop
mov
cmpl
lahf
and
push
iret
fldenv
push
subl
stos
pop
cmpsb
adc
pusha
mov
ret
or
lds
jbe
gs
push
stos
or
pop
arpl
xchg
loope
xchg
jmp
inc
fmul
jg
dec
mov
sbbb
iret
pusha
mov
mov
jmp
sti
inc
push
mov
in
movsb
ds
pop
mov
xchg
pop
jecxz
insb
outsb
inc
loopne
popf
inc
mov
incl
notl
idivl
outsl
data16
xchg
setbe
test
push
jle
loopne
xor
lods
or
mov
fidivrl
sbb
push
in
jl
push
push
out
add
or
andb
push
sbb
int3
mov
clc
subl
xchg
decb
mov
and
and
pusha
lea
jmp
jge
mov
lret
lea
mov
mov
mov
dec
sqrtps
adc
sti
scas
fdivrs
pop
test
cmp
ds
mov
xor
add
movsl
adc
mov
mov
xor
adcl
pop
testl
jne
test
sbb
xchg
incb
incb
jp
repnz
ret
lods
test
in
or
fidivrl
in
sbb
lret
ljmp
imul
out
cmpps
mov
and
enter
mov
sbb
shl
dec
in
fisttpll
cmp
sub
subb
sbbl
add
adc
jns
push
fs
mov
insb
xor
push
sbb
jne
add
pop
outsb
add
enter
mov
xchg
push
push
insl
mov
faddp
push
adc
fldenv
xchg
cmpb
sub
or
cmp
or
fwait
or
pushf
cmpsl
int3
loope
cmpsl
mov
dec
dec
sbb
inc
outsb
mov
xchg
ja
jle
iret
aad
into
sbbl
dec
adc
sbb
into
les
sub
sbb
jbe
adc
fsubr
mov
dec
mov
shrb
loopne
or
stos
lods
xor
jo
xor
jnp
dec
addr16
lea
rcr
push
mov
sbb
pop
mov
pusha
aaa
stc
push
push
xchg
loopne
movsb
pusha
lea
push
mov
pop
jns
gs
inc
lret
vpsubusw
in
cmpsl
inc
mov
ljmp
pop
cltd
push
popa
in
enter
pop
insb
lret
mov
mov
cmp
lret
mov
pusha
add
dec
out
shrb
mov
mov
cmp
outsl
dec
movd
fisubl
adc
or
stos
inc
sti
mov
cmp
repz
lahf
fsubrl
xchg
pop
std
inc
pop
push
rorb
and
out
in
cmp
dec
push
dec
pop
out
mov
add
test
adcb
pop
xadd
add
xor
cmp
insl
imul
sub
mov
lahf
out
sbb
sub
push
adc
and
push
xchg
jne
std
adc
xchg
les
aas
pop
push
shlb
addb
gs
push
mov
xchg
sub
lods
rorl
fimuls
clc
xchg
je
outsb
mov
sub
mov
add
shlb
mov
out
lods
int3
inc
cmp
insl
adc
mov
mov
loope
outsb
rol
xor
mov
pop
mov
nop
lods
sbb
xchg
sub
mov
jne
or
in
bound
cld
push
mov
xchg
cmp
add
and
mov
xchg
rcrb
jno
mov
movsl
jns
imul
test
cwtl
add
clc
or
push
mov
jo
cmpsl
jp
lahf
cmp
ret
xor
mov
out
push
and
push
mov
cmp
loopne
cmpsl
addr16
imul
loop
mov
xchg
nop
lret
sahf
out
shlb
das
jp
push
lods
mov
and
ds
cmc
aad
insb
cmp
aam
and
rorb
push
pop
das
pushf
cltd
dec
cmp
stos
cmp
loope
jnp
in
enter
push
add
in
in
lcall
sbb
sbb
jne
idiv
repnz
push
or
clc
cltd
int
mov
and
push
mov
xlat
inc
adc
mov
aaa
sub
mov
and
lea
xchg
xor
sbb
je
push
xor
xor
or
mov
ljmp
add
in
push
or
push
jecxz
pop
or
fdivrl
fnstsw
test
das
jle
repz
lock
shl
mov
push
cs
push
mov
mov
mov
mov
movsl
add
xor
dec
pop
or
lret
shl
mov
test
inc
jae
xchg
push
mov
adc
mov
ret
adc
dec
add
jle
sbb
push
fsubr
and
sbb
push
mov
xchg
xor
outsl
dec
stos
jnp
daa
pmaxub
xlat
popf
inc
bound
lods
out
dec
mov
or
push
mov
hlt
arpl
push
and
dec
and
out
xchg
ror
js
cmp
cmp
and
loop
das
jecxz
mov
add
loope
sub
insb
mov
lea
mov
popf
ja
nop
sahf
add
fisttpl
xchg
dec
adc
or
insl
lret
adc
pop
scas
fisubrs
repnz
pushf
hlt
sbb
lock
push
lods
push
js
mov
dec
insl
shl
outsl
jnp
mov
xor
xchg
int3
and
aas
mov
mov
xor
je
call
cmp
pop
sahf
xor
out
idivl
push
hlt
enter
sub
cli
xor
inc
rclb
lock
and
jbe
sub
xor
push
mov
les
in
pushf
cmp
sub
int3
insb
sahf
shrl
hlt
mov
add
push
or
std
pop
daa
inc
jmp
dec
sbb
mov
jb
loop
xor
mov
aas
aad
mov
lret
inc
int
addr16
stc
loop
scas
push
nop
into
mov
loope
sahf
sahf
mov
xor
adc
and
popf
std
mov
jp
aaa
and
repz
sahf
and
jnp
adc
jmp
gs
cwtl
push
jo
mov
and
fsubl
outsb
aaa
cmc
lahf
add
mov
sub
out
rorl
shr
addr16
test
cmp
div
mov
cwtl
fsubl
mov
negl
sub
push
leave
fildl
cmovs
packuswb
in
dec
cmpsl
int
daa
push
pop
jno
testb
hlt
adc
jp
add
push
jmp
subb
or
addl
sub
enter
push
js
jle
in
scas
in
xor
sbb
movsl
shr
movsl
cmpsb
outsl
sub
lock
outsb
dec
mov
cs
jbe
jg
dec
sub
sbb
aam
sahf
sub
sub
rcll
xlat
add
outsl
sub
mov
fcmovnb
in
inc
mov
mov
and
negb
notb
mov
repnz
xchg
dec
fwait
mov
cmpsl
lock
mov
pop
cli
and
xor
mov
mov
or
test
mov
xchg
mov
add
jbe
pop
mov
aaa
inc
mov
lahf
adc
push
xchg
jmp
ljmp
dec
pop
fmuls
imul
push
add
mov
mov
mov
les
sub
or
cmp
inc
hlt
jmp
out
out
fildl
imul
lret
ja
pop
cmc
aas
mov
fcompl
lods
mov
cld
es
mov
popa
and
and
xchg
sub
push
ret
out
sahf
inc
xor
inc
sub
outsb
jge
test
in
or
int3
mov
inc
pusha
mov
pop
jmp
xchg
outsl
fs
push
adc
in
push
dec
adc
push
movsl
xlat
cmpsl
sti
mov
pop
adc
pop
imul
xchg
mov
add
mov
or
pop
xchg
dec
bound
add
popa
push
xchg
dec
xchg
dec
ja
jbe
inc
scas
int
into
lods
stos
mov
xchg
mov
pop
incb
mov
mov
sub
push
xchg
inc
or
les
insb
mov
cmpsl
mov
dec
fwait
push
sar
outsl
loop
subl
test
xor
clc
pop
sbb
into
add
pop
in
stos
lods
stos
out
ret
cld
aaa
jmp
subl
lods
pusha
pop
fisubrs
sahf
push
mov
xchg
iret
push
hlt
push
lods
push
jp
pop
jbe
lods
pop
das
mulb
aas
cmpsb
pop
cmp
jmp
lods
andb
dec
pop
movsl
pop
pop
andl
lods
inc
stos
es
ret
mov
popa
mov
in
xchg
adc
in
leave
mov
mov
testb
aaa
aam
sbb
inc
dec
pop
or
xor
and
xor
sub
mov
fdivl
sahf
cli
stos
fs
arpl
mov
mov
outsl
mov
cwtl
iret
stc
sbb
jnp
push
loop
icebp
jb
loopne
pop
mov
mov
dec
loope
cld
sub
andl
jns
icebp
push
sahf
push
fidivl
jbe
into
or
or
int
xor
cmp
imul
adc
shr
inc
aas
pop
scas
rol
fs
dec
xchg
test
jno
call
lock
xchg
sarl
bound
or
mov
cli
sbb
xchg
mov
mov
and
mov
in
es
je
call
aaa
testb
pop
cltd
and
ss
lods
cmpsb
xchg
inc
stos
add
mov
gs
jae
mov
scas
shl
push
mov
dec
js
add
cmpsl
cmp
movsb
fcmovu
lea
sbb
mov
mov
adcb
push
imulb
mov
mov
cmp
mov
pushf
jg
mov
adc
pop
popa
pop
pop
fst
jge
scas
je
xor
cltd
push
xor
cli
and
flds
movsb
add
out
pop
push
cltd
aam
mov
pushf
test
mov
xor
adc
push
xchg
mov
xchg
cwtl
in
nop
in
data16
and
dec
mov
in
mov
out
mov
icebp
sbb
sub
pop
addr16
push
shlb
dec
insb
jne
cli
add
mov
or
dec
test
or
enter
ja
jns
xchg
xchg
orb
cmp
shlb
inc
add
push
aaa
sbb
mov
mov
scas
out
inc
repnz
sbb
mull
out
jle
cmp
daa
sbb
lock
xchg
mov
pop
mov
loopne
into
fcmovnbe
stos
mov
ss
inc
or
popa
es
clc
negb
test
xchg
jne
subl
xchg
das
xor
mov
push
inc
fimuls
daa
sarb
mov
jne
repz
fistpl
mov
jae
mov
mov
loope
aad
aad
mov
int
add
sbb
aad
mov
clc
sub
mov
push
int
mov
jp
add
out
mov
push
xchg
std
lcall
and
cwtl
int
xchg
hlt
or
sub
xchg
add
pop
pop
cmp
xor
fcomps
pop
pop
rcrb
js
mov
mov
push
xor
adc
leave
aas
ds
nop
mov
push
add
adc
jbe
cmp
cmp
test
mov
ficompl
and
xchg
insb
mov
out
stos
push
pop
mov
sbb
sub
aaa
ret
xorl
mov
in
adc
jbe
fists
dec
adc
lret
and
jg
adc
pop
or
mov
jnp
xlat
cmp
stc
xlat
adc
out
mov
out
sarb
rcr
stos
loop
cmp
dec
xchg
mov
xchg
xchg
loope
fwait
inc
xchg
adc
adc
and
negl
pusha
outsl
mov
js
push
mov
cld
js
or
out
movsl
fdivrl
call
iret
or
es
cmc
jnp
enter
pop
stc
xor
mov
iret
and
test
jo
add
loopne
ror
xorl
sub
cwtl
sub
in
or
incb
test
mov
stc
push
inc
fwait
pusha
jne
dec
inc
ud2
xor
das
sbb
add
ror
inc
icebp
fildll
pop
or
xor
xchg
rolb
dec
jbe
xor
mov
add
repz
shrb
xor
add
shlb
cmpsl
out
push
lods
ljmp
popa
jle
ret
shll
imul
arpl
mov
pop
inc
pop
lret
and
vcmpps
incl
fiadds
sbb
test
or
lcall
fidivrl
push
pop
sub
jecxz
outsb
push
lds
aas
sarb
into
sub
pop
jle,pn
iret
xchg
lret
aas
cmpsl
mov
sbb
jmp
sbb
jo
push
mov
mov
mov
sahf
aad
js
mov
test
fidivrs
mov
sbb
out
or
pop
lcall
repnz
ss
push
xchg
or
test
or
addr16
fcomps
or
leave
addr16
push
cmp
and
pop
inc
test
pop
adc
push
xor
jp
pop
jle
mov
cmpb
xchg
pop
loop
pop
jmp
mov
ljmp
cmpsb
jle
sbbb
int3
mov
and
or
stos
sub
xor
mov
popf
leave
ret
mov
sbb
inc
fdivs
mov
int3
test
filds
sub
sub
js
fsubrs
push
inc
push
mov
ljmp
add
inc
or
inc
jg
in
sbb
outsb
xchg
in
push
bound
shr
jo
psubsb
sbb
mov
ss
sub
lods
loopne
aam
rclb
cmp
pop
imul
jbe
fsubl
pop
repnz
rolb
icebp
testl
cmc
jge
dec
ret
int
loopne
fistpll
push
insb
daa
sbb
mov
shll
iret
pusha
jnp
dec
dec
js
js
lret
cltd
inc
pop
les
mov
cmp
push
js
dec
sub
pop
dec
sub
inc
adc
ss
cmpsl
pop
shll
js
in
into
imul
adc
fsts
mov
mov
sbb
pop
lock
push
scas
aam
xor
stos
pop
or
dec
imul
lock
push
js
aam
addl
rcrl
fsub
jnp
cmp
das
jle
popf
insl
push
stc
cli
arpl
out
in
gs
dec
shlb
mov
or
pop
ljmp
mov
rcrl
fildll
sub
sub
imul
ja
sub
inc
and
cmp
roll
jo
subl
sub
cmp
xchg
lahf
and
sahf
cld
cmp
hlt
cld
out
dec
repz
into
xchg
push
fisttpll
sub
ljmp
cs
mov
cs
fcmovbe
not
dec
loopne
jle
and
fistpll
stos
pop
push
pslld
sahf
sbb
stc
arpl
add
mov
sahf
adc
cmpb
or
iret
clc
dec
mov
mov
addr16
dec
push
jle
mov
sbb
add
flds
out
icebp
ja
fbld
mov
repz
jno
imul
xchg
jl
mov
stos
pop
jecxz
adc
xchg
mov
pop
push
imulb
scas
and
rol
push
enter
jge
jne
or
mov
movsl
adc
xor
mov
cmc
pop
out
movsb
mov
dec
shl
jge
pop
mov
sbb
test
faddl
lret
fsubrs
cmc
push
adc
loopne
jle
pop
xor
fcomi
sarl
aam
mov
dec
test
inc
mov
lods
sub
pop
stos
loope
adc
add
push
adc
inc
jbe
outsl
pop
nop/reserved
roll
pusha
mov
mov
addr16
jle
dec
push
mul
push
cmpsb
pop
mov
inc
inc
mov
flds
xchg
add
push
scas
bound
or
and
ljmp
imul
repnz
and
mov
pop
insb
insl
outsb
aaa
mov
push
cltd
das
pop
cmpsb
xor
fs
inc
cmp
imul
push
sub
mov
loope
push
cmp
add
rclb
jge
lock
cld
scas
pop
loopne
cli
inc
push
and
in
or
cmpsb
lea
dec
rolb
mov
xchg
mov
push
xlat
mov
es
push
xor
sub
pusha
push
mov
cmpsl
insl
lahf
sbb
xchg
cmp
push
fld
lods
mov
std
or
and
repnz
test
mov
xchg
xor
iret
lods
push
out
dec
faddl
mov
xchg
pushf
push
sbb
inc
pop
sub
sbb
lret
add
mov
mov
mov
das
insl
insb
lds
push
sahf
fists
and
shlb
adc
int3
rcr
mov
mov
and
iret
frstor
jbe
sub
add
xchg
ret
jg
dec
inc
xchg
cs
inc
mov
xor
lods
xor
andl
and
or
ljmp
add
cmpsb
fisubl
or
les
jg
ret
fcoml
sbb
popa
push
mov
mov
push
xchg
cld
addr16
and
test
scas
ret
mov
out
xor
jnp
push
stos
xchg
xor
cmc
sahf
xchg
or
cmpsb
pop
pop
xor
mov
mov
mov
aad
or
cmpl
adc
cmpsb
add
xor
fnstenv
push
fisubl
inc
xor
add
push
inc
out
or
outsl
mov
movsb
gs
or
mov
iret
push
mov
int
jg
test
xchg
ficoms
loopne
or
out
and
inc
dec
or
andl
inc
ret
lcall
cmpsb
jnp
dec
out
or
mov
or
scas
mov
jns
mov
daa
lret
stc
test
out
test
mov
mov
repz
jb
mov
xchg
push
sub
in
in
jno
jb
jns
xcrypt-cbc
cmpsl
xchg
jno
in
xor
jns
insl
fnsave
lds
fnstenv
test
push
lret
mov
out
push
fiadds
mov
int
jge
clc
mov
call
adc
in
mov
test
in
je
ss
mov
sub
pop
aad
push
sarl
out
cmc
insl
mov
dec
es
pushf
push
icebp
add
sub
arpl
add
lret
ret
movsl
push
push
cltd
xor
filds
inc
mov
push
jl
test
mov
inc
mov
fsubl
add
movsl
popf
loop
sbbb
xor
test
cmp
cmp
outsl
xlat
lret
imul
fs
rsm
adcl
call
mov
xchg
and
aas
push
xchg
hlt
popa
push
rcrb
push
std
pop
push
imul
out
cmpb
lahf
cs
orb
mov
aam
dec
jle
add
mov
sub
call
test
adc
dec
cmpsb
aam
mov
ret
pop
pushf
cld
pusha
fldl
dec
loop
or
sub
test
pop
adc
pop
adc
and
bound
inc
cmp
mov
sahf
pushf
jmp
pop
hlt
in
mov
mov
pop
aam
cmp
cmp
mov
movsb
loopne
faddl
mov
cmp
jle
test
or
mov
out
in
movl
stos
fwait
and
popa
cs
cmpb
mov
jne
out
shl
dec
xchg
adc
jbe
pop
rorl
ret
into
dec
stos
rep
inc
cmp
cmpsb
mov
loopne
inc
jnp
or
sub
push
hlt
lahf
sbbb
arpl
ret
xchg
call
popa
imul
out
outsb
sarl
popa
lds
push
add
std
sub
shrl
jnp
iret
das
push
popf
inc
movsl
xor
movb
inc
bound
aad
es
mov
mov
dec
fmull
lods
stos
pop
adc
ds
cmp
inc
aam
adc
lahf
mov
inc
mov
mov
dec
gs
fmuls
cmp
inc
lahf
push
xchg
dec
hlt
lea
popa
lock
popf
outsb
mov
fs
jae
jae
pop
lods
inc
cmp
icebp
enter
bnd
xor
sbb
fsubp
xchg
aad
and
int3
bound
inc
inc
lods
pop
scas
mov
xor
add
and
xor
popf
add
mov
or
xchg
int3
mov
cmpsl
xor
or
fildl
test
test
adc
daa
ret
imul
jg
pop
dec
icebp
inc
push
sbb
mov
ljmp
push
mov
sub
mov
and
or
aaa
mov
lret
jmp
sbb
mov
bound
lods
out
pushf
repz
rorb
out
imul
jno
jecxz
call
pushf
ja
sti
hlt
inc
adc
repnz
dec
jge
scas
shrl
sbb
xor
push
push
push
testb
lods
movsb
filds
pop
test
mov
ss
sbb
sub
cmp
cmc
lret
lret
jne
jecxz
and
pop
adc
add
js
sbb
push
out
hlt
lcall
xor
test
push
add
shr
push
push
adc
add
pusha
inc
std
inc
jl
les
js
push
js
dec
pop
pop
js
xchg
ljmp
cmc
lret
cmp
and
mov
sub
mov
jmp
dec
and
xor
insb
movsl
or
dec
insl
pop
push
and
dec
rcrl
cmc
adc
jo
dec
dec
imul
pop
mov
je
adc
mov
iret
stos
movsb
lock
mov
fisubrs
ja
mov
dec
adc
mov
pop
mov
daa
jp
adc
cmc
jo
jmp
lahf
mov
push
incb
aaa
repz
hlt
mov
adc
inc
fnstsw
pop
mov
add
loope
sbb
xchg
sahf
sbb
int3
push
dec
xchg
leave
ljmp
out
mov
cmp
sti
cmp
fs
in
std
jae
loop
pop
in
sub
scas
sbbw
inc
js
add
xchg
inc
xchg
jb
xor
push
jbe
sub
loopne
repnz
xchg
pusha
repz
sub
pusha
imul
or
mov
popf
mov
jb
fnstsw
rcrb
out
mov
jbe
mov
incl
jns
mov
xchg
cmp
pop
push
dec
mov
pop
ret
push
xor
mov
push
sbb
js
mov
in
mov
fisubs
std
shlb
jle
dec
iret
ret
jge
push
es
ljmp
mov
orb
je
dec
mov
inc
mov
and
mov
int
or
pop
jo
cs
shrl
sbbl
mov
movsl
nop
stc
js
scas
ss
or
stc
mov
clc
pushf
stos
cmp
push
cmpb
aad
out
push
je
fsubrs
rol
add
dec
pop
push
mov
xchg
or
sar
cs
jecxz
dec
pop
xchg
leave
mov
xor
aad
jp
mov
std
sti
int
pop
lret
ret
pop
mov
mov
rorb
dec
lods
push
push
sti
mov
and
and
out
or
orl
dec
jmp
stc
jae
fdivrs
scas
fsts
jmp
arpl
sarb
rclb
xchg
sarl
pop
mov
dec
sbb
mov
subl
xchg
call
into
stos
lea
push
stc
ss
into
mov
test
das
imul
fadd
push
hlt
pop
and
lcall
and
jno
int
xchg
mov
mov
fs
adc
xchg
insb
jno
xchg
adc
icebp
fiadds
notl
int
mov
pop
clc
push
adcb
jge
rcll
fs
insl
cli
in
scas
add
pusha
outsb
lea
lahf
or
jle
xor
xor
inc
mov
push
adc
scas
mov
icebp
sub
repnz
fs
xchg
insb
jns
subl
sub
lock
xchg
push
xor
and
cld
in
pop
sub
subb
loope
mov
sub
fadd
leave
fistl
inc
xor
push
popl
pop
cli
jae
mov
ja
xchg
icebp
les
arpl
cmp
stos
iret
mov
jle
cmp
js
js
mov
lea
dec
sahf
out
cmc
add
cmp
pusha
push
hlt
in
add
sub
inc
sub
push
inc
cmc
jle
jnp
cld
ret
xchg
lods
clc
bswap
sub
cs
mov
popa
pop
push
loope
addl
sbb
repz
lods
les
push
ret
and
rcrb
inc
mov
dec
sub
fadds
mov
leave
mov
sub
jp
cltd
scas
sbb
lahf
sbb
out
push
stc
adc
stos
push
mov
shlb
adc
sub
imul
xchg
xchg
pop
mov
outsb
clc
sbb
xchg
mov
push
jae
aas
mov
outsb
scas
daa
lahf
mov
inc
mov
xacquire
mov
add
addr16
orb
mov
cmp
xchg
pop
cmp
mov
or
xchg
dec
jo
repnz
inc
pop
pop
call
mov
xchg
jmp
sbb
addr16
aas
loop
mov
sub
mov
mov
mov
dec
fwait
mov
rorb
xchg
sub
inc
xor
jne
adc
nop
lock
jnp
jg
push
aas
pop
std
jo
lret
push
rorb
fsubrs
out
and
popf
xchg
jmp
aam
cld
mov
pop
arpl
rclb
inc
push
pop
xor
or
jg
or
daa
int
fildll
jp
push
divb
fildll
xchg
xchg
add
test
adc
xor
cmpsb
mov
xlat
aam
and
mov
rcrb
cld
sub
stos
test
shrl
outsb
jne
mov
jge
icebp
js
or
add
les
dec
test
fwait
dec
xor
dec
jp
in
sbb
cli
shlb
fimuls
xor
das
in
jbe
xlat
stc
adc
xor
aam
jecxz
jno
lods
lods
and
clc
cmc
xchg
cmc
scas
dec
jne
clc
push
test
insb
lret
xor
paddsb
inc
jecxz
mov
mov
mov
ss
sbb
pop
bound
rcll
push
jne
movl
sbb
mov
sub
jae
xor
loopne
dec
jl
test
cli
int3
dec
ss
mov
aam
test
fadds
scas
mov
jmp
or
push
or
xchg
push
js
popf
pop
subl
add
push
mov
inc
add
lods
jne
rcr
ret
repz
pushf
mov
lock
xor
hlt
ljmp
repnz
das
pushf
mov
cwtl
ss
mov
jge
incb
cltd
inc
bt
mov
iret
hlt
add
je
jne
scas
sub
fldt
out
pushf
das
xchg
imul
rolb
and
mull
shrb
add
jle
insb
stos
js
push
clc
orb
mov
xchg
fistpl
lahf
leave
ds
add
mov
dec
add
clc
out
rcrl
pop
pop
mov
cld
in
dec
jo
adc
mov
inc
stos
mov
and
mov
mov
dec
pop
pop
pop
sahf
icebp
mov
out
xchg
sarl
sub
fbld
mov
ret
and
mov
jnp
rep
into
outsb
cmc
aas
mov
cmpb
jmp
in
iret
inc
roll
or
stc
das
test
mov
lods
push
lahf
gs
jbe
or
or
sub
faddl
lea
movsl
pop
or
pop
xor
inc
xchg
jae
inc
sub
mov
mov
je
mov
push
jmp
movsb
js
xchg
pop
cmp
mov
push
inc
dec
fsub
push
xchg
ss
xor
push
mov
push
test
mov
push
jb
lods
adc
jae
ret
lock
sbb
inc
out
jmp
xor
pop
xchg
inc
jg
fwait
push
scas
adc
fldcw
movsl
insb
pop
or
cwtl
lahf
shlb
sbb
mov
pop
sub
push
setns
xor
aad
fs
idivl
mov
test
xor
xor
xchg
mov
pop
shl
cmc
mov
sub
mov
sub
rcrl
mov
push
and
addr16
sbb
movsb
adc
rep
outsl
cmp
divl
cmp
icebp
xchg
jmp
mov
inc
mov
outsl
rorb
in
les
bound
push
cmp
pusha
int
mov
loop
aaa
cmp
xchg
lcall
xchg
mov
sub
inc
mov
adc
xchg
adc
xor
or
icebp
test
inc
inc
xchg
scas
lds
mov
dec
push
sbb
shlb
and
cmpsl
adc
call
pop
jle
inc
inc
stos
mov
ficoml
shl
loop
mov
pop
js
in
data16
pop
ja
cmpsb
xor
adc
push
xchg
in
ljmp
push
sub
add
xor
dec
jle
je
cmp
stc
push
mov
xchg
arpl
out
lcall
xor
pop
faddp
cmp
lret
xchg
sbb
insl
mov
push
fs
ss
fidivrl
stos
pop
fwait
sub
sub
fstpt
add
scas
sub
imul
mov
paddsb
mov
xor
fistpll
and
sbb
xchg
pushf
adc
push
jb
loope
orb
js
push
add
imul
xchg
mov
mov
lods
xor
test
xchg
sub
daa
inc
dec
jae
push
clc
mov
xor
inc
push
jo
scas
pop
mov
pop
aas
in
push
adc
xlat
out
lret
stos
rcrb
jle
jne
xchg
imul
ja
ds
nop
cli
mov
lret
jle
fnstcw
addr16
fsub
shrb
gs
lret
test
mov
mov
scas
pop
js
sbb
lret
push
xchg
sti
mov
jb
mov
pop
call
fs
outsb
mov
adc
in
call
mov
jecxz
jg
push
xor
adc
insl
xchg
mov
fadds
icebp
or
pushl
cmpsl
divb
xchg
aad
push
push
js
mov
push
std
ss
and
push
jnp
jl
and
dec
lock
mov
push
daa
jmp
pop
xor
mulb
loopne
mov
jg
std
idivl
fisubl
aas
out
xchg
xor
pop
cli
pop
xor
aas
pop
mov
mov
insl
push
out
sub
dec
int3
sbb
cmpsl
data16
mov
jmp
jnp
lods
mov
int
flds
cld
sub
test
inc
adc
lds
push
movsb
jne
add
inc
arpl
fbstp
xchg
lret
pop
push
insl
jno
out
jecxz
mov
mov
aad
jg
sub
inc
mov
pop
out
pop
jp
int
int3
ret
cmpl
mov
pop
js
mov
lods
sahf
scas
dec
js
and
mov
jmp
mov
ds
loopw
aaa
xchg
js
sub
loop
sub
cltd
or
dec
pop
xchg
or
mov
pop
les
ret
jl
mov
mov
test
std
mov
ret
sbb
inc
dec
lods
jmp
mov
push
add
mov
inc
leave
and
and
dec
and
fldl
fcmovnu
cmc
test
inc
addl
cmp
stc
pop
out
xor
test
ds
mov
cs
stos
lea
xchg
push
sbb
or
cmp
jns
fcmove
loopne
push
stos
lds
fmuls
popa
shll
pop
cwtl
inc
lods
out
dec
and
bswap
xlat
lods
jg
mov
push
leave
jne
movsb
les
iret
aaa
mov
sbb
dec
clc
daa
call
pop
dec
pop
dec
lret
movsb
or
scas
fsubp
cltd
push
sbb
sahf
fs
jge
pop
pushf
mov
mov
insb
inc
xchg
sbb
inc
jle
jne
lock
fistpll
sbb
sbb
sub
je
lock
push
adc
xchg
mov
fs
sbb
outsb
push
in
inc
sub
cmp
cmp
xchg
in
popf
pop
or
sbb
imul
mov
dec
xor
out
xor
dec
ret
push
and
mov
dec
sbbl
pop
dec
mov
test
and
ss
mov
push
jbe
xchg
lods
inc
dec
or
inc
lods
adc
jle
test
stos
test
pop
in
data16
mov
add
mov
insl
loopne
dec
jge
xlat
dec
push
xor
add
movsl
loopne
xchg
cli
or
std
mov
lret
jbe
fwait
in
pop
or
inc
sub
imul
testl
jecxz
jge
and
leave
repz
jne
jecxz
or
test
sub
and
push
insb
mov
adc
inc
xchg
lods
add
push
call
leave
and
imul
mov
divl
movsb
in
in
dec
pusha
fwait
sarl
cmpsl
int3
sub
lcall
jl
jle
sahf
push
push
sbb
pop
fwait
mov
outsb
mov
lcall
lahf
fcomps
cld
xchg
rolb
rcr
pushf
mov
repz
jne
adc
and
test
and
push
pop
jecxz
repnz
popa
lods
adc
hlt
adc
xchg
imul
pop
sbb
js
aas
arpl
lock
sub
lods
or
xlat
cltd
mov
cmp
pop
flds
ljmp
test
jecxz
add
xor
add
or
test
scas
push
arpl
dec
cmp
cmp
int
add
ret
divb
xor
fstps
add
mov
sbb
xchg
fwait
pop
sbb
jnp
mov
pop
push
insl
or
mov
popf
xor
sbb
pop
cmp
jne
mov
cmp
movsb
ja
dec
or
jno
pop
stos
and
sub
leave
pop
outsb
stc
pop
dec
cmc
bound
in
outsb
loop
in
fisubrs
mov
pop
movsb
pop
fwait
sbb
push
imul
scas
mov
xchg
test
mov
int
arpl
xor
lret
adc
adc
dec
xchg
fisubs
shll
test
adc
cmpsb
inc
jp
sbb
xchg
leave
jle
push
ds
repnz
inc
ljmp
loope
mov
fcmovb
add
mov
cli
repz
pop
leave
enter
loopne
addl
adc
mov
outsl
dec
notb
jnp
ror
adc
ljmp
mov
loop
aaa
stc
and
cmp
and
or
cmp
pop
pop
inc
inc
mov
adc
test
ja
pop
cwtl
pop
pop
movsb
add
pop
repz
xchg
repnz
addr16
jle
inc
ds
mov
in
mov
add
fsubrl
cli
pushl
test
cmpsb
cs
dec
shrb
xchg
imul
mov
notl
push
jle
pop
cs
lret
sub
sub
out
adc
push
push
xchg
dec
mov
push
xchg
lret
sub
cmp
lea
push
out
jbe
and
add
and
sbb
in
lret
out
xchg
adc
cmpsb
rcrb
sub
cltd
jno
aaa
ret
test
bound
dec
push
push
jl
lds
in
inc
popf
lret
xchg
mov
adc
daa
sti
adc
pop
or
pop
fcmovb
or
out
out
iret
mov
mov
lahf
add
cltd
mov
xchg
jp
shll
pop
int3
add
jbe
mov
jbe
jbe
push
je
mov
int3
lea
lds
jmp
clc
mov
fwait
imull
icebp
sbb
aad
and
leave
inc
fdivrl
loopne
xor
out
add
mov
or
in
nop
pop
pushf
adc
daa
fucomi
bnd
filds
divl
pop
fisubs
push
dec
add
es
inc
movl
sti
push
sub
mov
ficompl
mov
and
inc
lods
sub
or
push
je
xchg
cmp
push
ret
test
inc
sbb
xchg
push
imul
stos
sub
pop
test
cltd
lret
jb
in
ret
mov
xor
xchg
aam
test
imul
dec
scas
iret
xchg
leave
sarl
cwtl
je
xor
push
jecxz
mov
cld
mov
cmc
pop
and
shld
pop
hlt
push
xorb
push
sub
sbb
mov
jne
add
sub
cmp
add
movsl
mov
scas
bswap
pop
sub
aas
adc
movsb
xchg
pop
sub
cmpsb
repnz
xorl
loopne
jno
loop
cmp
aad
adc
push
and
or
roll
mov
cmp
fbld
push
popa
pop
scas
or
stc
jp
leave
xchg
mov
and
mov
mov
mov
sub
ret
imul
out
aam
inc
jge
movsl
lret
sub
xor
mov
ds
xor
pop
adc
xchg
adc
sbb
inc
cld
mov
outsl
dec
mov
icebp
sbb
jns
push
fstl
pop
gs
shl
call
jb
mov
lock
stc
addr16
cmp
mov
jp
cmp
jo
lret
cwtl
loop
xor
dec
inc
mov
in
xor
pusha
ljmp
xor
dec
es
inc
xchg
push
mov
cmp
mov
test
inc
repz
pop
dec
ror
movsl
cmp
and
pop
shlb
mov
hlt
jne
cltd
adc
rcr
mov
push
ret
imul
fsub
out
lock
pop
insb
mov
xor
pop
xchg
xor
xor
pop
jp
dec
or
mov
sub
and
mov
js
hlt
movb
aam
dec
sub
pop
std
xchg
out
inc
rcll
sub
jo
mov
push
enter
int
adc
inc
push
jl
aad
mov
dec
jbe
and
imul
ss
sub
arpl
cmp
sub
jne
imul
es
push
push
mov
cmp
jns
loopne
fs
aad
push
add
pop
or
test
into
lcall
arpl
sbb
sub
ja
scas
lcall
ljmp
jo,pn
ljmp
sbb
xchg
fwait
cmp
nop
shlb
xchg
mov
sarb
jns
pop
xchg
lods
jmp
push
aad
mov
adc
sbb
hlt
xor
scas
xor
jne
shl
or
and
xor
or
insb
cld
into
adc
fidivs
repz
mov
cmc
enter
nop
cs
pop
fsubp
jb
rorb
jnp
pop
xchg
and
imul
sti
out
rcrl
push
sbb
jns
out
or
push
mov
dec
ljmp
mov
ret
cmp
dec
sub
mov
adc
pusha
pop
pop
idivl
repnz
adcl
push
repnz
jae
cwtl
xor
xchg
pusha
shll
in
or
insb
adc
jl
jp
mov
movsl
mov
arpl
inc
add
cmp
jg
mov
push
inc
ficoms
mov
mov
ds
push
sbb
mov
jne
mov
mov
rcl
mov
cli
adc
xchg
loopne
ljmp
sbb
ds
inc
mov
ret
push
imul
xlat
bound
scas
mov
and
push
inc
mov
xor
psubw
sub
mov
lds
fisubs
test
pop
adc
ss
leave
pop
clc
in
ja
ljmp
add
into
cmpsl
out
mov
mov
add
push
sbb
leave
mov
je
arpl
xchg
add
negb
jge
dec
or
mov
jecxz
leave
das
push
inc
push
stos
lock
lcall
cmp
in
sub
pop
mov
outsl
dec
js
hlt
xchg
adc
jle
rcrb
cmp
xchg
scas
sbb
adc
stc
dec
xor
cld
push
lcall
push
and
sbb
dec
sbb
or
mov
addr16
cmp
cmp
mov
lods
add
cmp
push
push
inc
fsub
sarb
and
inc
sarl
xchg
test
out
sub
inc
je
xor
mov
test
mov
inc
in
mov
mov
sub
sbbl
mov
or
and
adc
push
pop
push
scas
xor
sub
push
ret
pop
lods
das
incb
stos
mov
pusha
ss
jns
out
data16
icebp
iret
pop
mov
mov
addr16
dec
data16
ret
cmp
pop
hlt
popa
mov
cwtl
clc
icebp
shr
movb
ja
test
scas
jge
cmpsl
mov
and
aam
adc
data16
dec
jecxz
testb
rcrb
loope
test
push
cli
dec
mov
jne
mov
ficompl
or
mov
add
push
sahf
xchg
xor
int3
cmp
in
adc
xor
mov
pop
arpl
out
sub
mov
popa
movsl
mov
enter
dec
outsb
pop
mov
mov
jl
jns
pop
pop
mov
cltd
sbb
ss
sub
scas
mov
int3
mov
lods
pop
cmp
ret
xor
bound
fdivrs
popf
loope
cltd
inc
clc
scas
cli
adc
aad
out
xor
stos
dec
push
pop
xchg
and
addr16
add
scas
sub
jl
stos
sti
mov
ret
fstpt
cmp
adc
inc
xor
aam
aam
mov
adc
in
or
push
dec
insb
pop
inc
aam
adc
inc
mov
xor
cmpsl
repnz
or
pop
test
enter
dec
inc
ret
ljmp
dec
fdivrs
adc
mov
pmaddwd
scas
jae
mov
arpl
cmp
pusha
fistps
sbb
push
inc
or
or
hlt
test
std
xor
inc
mov
dec
mov
je
mov
cmp
push
push
xor
sbb
xchg
mov
jmp
jl
inc
push
je
cmp
sti
xor
mov
subl
push
inc
stos
imul
aaa
and
addr16
ds
stc
cmp
scas
push
call
jae
scas
push
fs
push
and
mov
insl
test
sbb
mov
notb
dec
mov
outsl
nop
push
push
mov
adcl
bnd
rcll
jae
mov
xlat
int3
mov
out
clc
mov
add
inc
das
push
jnp
divl
sub
clc
jns
xchg
push
adcb
cli
pop
sbb
push
hlt
data16
repnz
mov
cmp
mov
loope
mov
iret
fs
mov
mov
sbb
add
xchg
mov
xor
cmp
xchg
lret
arpl
enter
xchg
adc
xlat
xchg
mov
mov
iret
dec
in
movsl
pop
xor
add
imul
std
sarb
in
sbb
test
test
adc
pop
loopw
xchg
push
push
subb
dec
mov
xchg
sti
cld
pop
xchg
sarl
mov
push
xor
adc
pop
dec
enter
mov
aam
dec
push
or
nop
gs
adc
pop
ja
jmp
xchg
pop
and
sahf
push
subl
push
and
push
daa
scas
dec
mov
call
outsb
mov
insb
stos
dec
test
pop
mov
imul
dec
inc
cmp
mov
mov
gs
cltd
jne
xchg
or
jl
mov
cmovne
pop
cmp
test
jbe
xor
xor
iret
sub
cmpsl
adc
and
sbb
dec
cmp
in
shlb
aaa
adc
inc
cmp
je
repnz
sbb
add
sahf
xchg
and
push
call
fsubl
pop
xchg
mov
insb
insb
ret
jg
pop
mov
jno
in
cmp
add
and
xchg
lret
insl
cmp
es
int
daa
inc
vcvttsd2si
test
and
dec
sub
mov
lods
add
daa
and
mov
addb
test
out
cmc
mov
or
aas
ds
xchg
mov
in
filds
and
jnp
insl
stos
push
shlb
fs
push
ljmp
cmp
add
test
insl
ret
movsl
adc
test
xchg
inc
idivl
dec
fistpl
and
sub
sbb
enter
inc
sbb
andl
adc
push
add
push
ret
out
fwait
mov
add
addr16
loopne
lds
fwait
inc
add
jns
sbb
adc
sbb
or
das
shrb
mov
testb
xor
adc
popf
popf
dec
out
xor
das
pusha
cmp
cmp
jmp
es
jge
fldt
jecxz
std
ja
xchg
cmp
jecxz
jne
adc
pop
inc
aad
jp
add
xor
add
jo
fsubr
sbb
pop
push
shlb
lods
test
outsl
ret
test
sti
mov
lods
dec
fidivrs
push
and
inc
dec
or
xchg
or
inc
aas
mov
fisubrs
cmp
gs
repnz
addr16
mov
xchg
xor
mov
popf
cmpsl
pushf
cmp
cmc
stos
xchg
pop
dec
popa
scas
idivb
jle
lea
pop
xor
test
jge
ret
cltd
aad
and
inc
outsl
inc
jmp
add
cmc
add
arpl
fdivl
fnsave
shlb
xchg
ret
popf
mov
jmp
cmp
insb
xor
mov
pop
xchg
lret
inc
cmpsl
dec
scas
sti
pop
cwtl
lods
and
and
cmc
out
pop
jno
sar
mov
sub
dec
testl
xchg
xchg
outsl
and
adc
cltd
or
fistps
arpl
ret
ret
push
js
insb
sar
mov
dec
scas
popf
and
xchg
mov
cwtl
cmpsl
lret
or
push
loop
js
inc
push
call
lods
inc
sub
mov
sub
lcall
and
pop
out
outsb
fs
int3
scas
xchg
in
lock
scas
int
call
inc
ret
and
ret
pop
sbb
mov
in
xor
pop
mov
iret
ret
lret
xchg
mov
mov
in
aad
inc
sbb
xor
push
aas
or
dec
test
add
loopne
stc
cmpsb
fiaddl
incb
jge
mov
xor
test
lods
pushf
pop
mov
adc
dec
mov
push
jg
cld
arpl
stos
push
and
push
mov
sbb
push
inc
xor
add
adc
ret
mov
jae
cli
mov
jge
dec
adc
adcb
scas
mov
mov
out
xor
scas
adc
mov
adc
in
addr16
out
jmp
test
imul
in
jne
push
out
jns
lret
dec
les
das
push
fscale
adcl
imul
pop
dec
cmp
mov
mov
inc
ljmp
mov
xchg
mov
insl
pop
add
adc
mov
mov
push
out
test
pop
push
pop
pop
gs
jge
jbe
mov
xchg
add
fistps
lea
stos
pop
inc
xchg
out
rorl
mov
data16
out
or
adc
and
jb
cmc
sbb
fistl
ret
ljmp
sbb
ret
xchg
cmpsb
cmc
mov
sbb
out
ljmp
dec
dec
mov
cmpsb
push
shl
inc
lods
and
sub
repz
insb
mov
adc
push
mov
lcall
jne
inc
mov
in
mov
adc
idivb
and
and
or
fadd
mov
and
lods
push
in
ljmp
dec
aaa
cli
dec
mov
out
pop
mov
inc
mov
jb
xor
scas
sbb
mov
ds
or
dec
clc
pop
ret
cltd
outsb
into
xor
popl
rcrl
mov
nop
push
ljmp
test
add
xchg
outsl
add
jae
adc
test
xor
sub
sub
loopne
mov
rcr
lock
xchg
test
insb
cs
arpl
jns
jae
jge
lcall
repnz
in
mov
push
pop
sbb
mov
ljmp
and
pop
mov
loopne
add
xchg
push
mov
fistpl
jbe
mov
sbb
shl
jecxz
add
imul
in
inc
mov
and
lret
jmp
sub
ds
jg
or
ss
cmp
in
rcr
and
xchg
pop
sbb
xchg
fstps
inc
mov
lea
xor
mov
mov
xor
cli
cld
arpl
or
loop
mov
jae
inc
push
fidivrs
vpand
mov
push
or
test
mov
pop
stos
ss
jge
push
xchg
fs
or
int
arpl
jmp
je
mov
test
or
pop
mov
sbb
jnp
sbb
dec
fchs
and
mov
fsubr
push
xchg
jnp
push
mov
add
daa
xlat
push
and
lcall
cmp
mov
mov
inc
mov
std
adc
add
lcall
push
clc
cli
les
push
jle
sub
lods
pop
iret
popa
sbbl
push
das
ret
clc
int3
push
icebp
fstpl
and
mov
icebp
pop
cltd
test
out
jge
movntps
das
call
stc
or
testl
in
dec
bound
mov
hlt
sbbl
cli
inc
stos
adc
ret
enter
arpl
jge
sbb
sbb
ja
pop
into
fs
loopne
and
sbb
add
cmp
xor
cs
jne
and
sarb
repz
aam
inc
dec
xlat
push
dec
fstpt
mov
lds
lret
aam
inc
test
arpl
sub
pusha
mov
jae
jp
cmpsb
mov
in
xchg
stc
mov
out
test
cmp
in
pop
sbb
pushf
pop
sarb
lods
rolb
xor
sub
popa
or
jmp
lea
int3
loope
in
addr16
enter
sub
cmp
leave
mov
sbb
fcoml
shll
aas
push
and
and
aas
shlb
repnz
jo
cmp
mov
push
shrb
or
idivb
mov
pushf
stos
lahf
cmp
jne
mov
test
in
cmpsb
out
es
jle
mov
jmp
cmova
mov
imul
dec
push
pop
fcoms
scas
or
push
push
repnz
sbb
jne
les
and
mov
jne
pop
and
adc
fnstcw
or
insb
pop
adc
aad
rolb
sub
in
push
xchg
mov
mov
lahf
and
mov
test
das
sub
ret
sub
mov
xor
lods
daa
insl
icebp
sub
outsb
or
or
orb
xchg
mov
push
mov
inc
add
push
fdiv
shll
push
outsl
data16
mov
sub
cltd
pop
mov
jecxz
dec
mov
arpl
push
gs
sbb
in
rcll
in
std
movsb
ja
pop
dec
mov
or
imul
shlb
clc
fstpt
dec
xchg
push
gs
pop
mov
cmp
gs
jecxz
mov
rcrb
arpl
add
lods
ret
out
mov
jmp
in
xor
int
xchg
inc
imulb
mov
jno,pt
pop
in
sub
sti
scas
nop
cld
insl
adc
ljmp
jno
in
fld
sarl
aad
sti
rcrl
ret
sahf
pop
cmp
xabort
add
stos
or
data16
sbb
aam
lods
jb
inc
xchg
movaps
dec
adc
dec
loop
mov
pusha
xchg
mov
mov
aaa
mov
jae
push
inc
pop
ljmp
jecxz
mov
cmp
ja
xchg
and
pop
add
jae
in
add
jo
rclb
sub
sub
xor
xor
push
push
cmp
jns
call
test
cmp
mov
mov
pop
mov
jg
fs
cld
jnp
inc
loope
pop
or
mov
and
popa
ret
mov
cwtl
les
imul
mov
and
stos
xchg
or
add
xor
out
into
and
lods
or
inc
pusha
xchg
shrl
fildll
mov
vmovshdup
push
mov
test
aas
in
and
pushf
bound
sbb
dec
sub
jmp
mov
pop
sub
in
aam
cmpsb
cld
and
mov
insb
daa
inc
mov
push
inc
or
dec
mov
mov
xor
jle
movsb
adc
adc
ret
imul
cmpsb
xchg
ja
sbb
mov
out
aas
shl
fnstenv
xchg
mul
mov
divb
fsubrs
sub
and
xor
or
sbb
xchg
dec
loope
or
outsl
imul
cltd
push
int
enter
ljmp
cmp
cwtl
mov
jo
xchg
pop
sub
aam
jo
loopne
clc
push
jbe
and
pop
xchg
scas
mov
mov
cmp
jae
rorl
add
hlt
sub
bound
out
das
iret
add
aas
jae
and
shll
pushf
cltd
int3
cmp
repnz
cmp
add
inc
and
bnd
xchg
mov
arpl
and
jb
data16
pop
lret
aam
fisttps
add
aam
mov
cltd
mov
mov
sub
mov
repz
rcrl
inc
push
mov
repz
mov
adc
iret
test
xor
sbb
rolb
test
xchg
sets
lock
sub
cwtl
icebp
loopne
iret
xchg
call
mov
punpcklbw
mov
lcall
xor
jmp
fidivs
add
lgs
hlt
lods
sbb
inc
xchg
push
push
dec
adc
test
mov
leave
imulb
and
xchg
push
and
mov
push
adc
sub
lea
loop
shlb
outsb
inc
rol
sbb
mov
outsl
mov
shl
push
inc
xchg
test
stos
mov
int3
or
test
movl
or
jne
push
jl
xor
xchg
loopne
jne
push
nop
xor
xchg
inc
loop
ret
pop
sub
or
int
outsl
mov
pop
adc
lods
pop
and
cmp
mov
lret
ud1
pop
inc
sub
sar
addl
dec
mov
dec
dec
loop
mov
xchg
das
pop
adc
xlat
repnz
pop
adc
jp
push
jl
notb
jl
divb
sbb
test
xchg
aad
mov
negb
jae
push
cltd
cs
jae
pop
cmp
je
push
sub
inc
add
les
jmp
aam
popa
dec
sub
movsb
stos
enter
mov
insl
inc
enter
mov
stos
push
mov
std
ljmp
or
push
fcmovnu
adc
and
add
dec
adc
or
fisubl
fdivrl
inc
repnz
inc
cli
mov
xchg
mov
sbb
iret
in
push
sub
or
add
jecxz
shll
dec
cltd
sub
jno
shrl
xchg
mov
xor
ljmp
loop
movsb
jle
loope
nop
mov
mov
mov
fists
loopne
cmp
sar
incb
stos
cmp
mov
adc
cmp
mov
jp
mov
popf
pop
xchg
les
orb
hlt
push
sti
fnsave
xchg
test
cmpsl
xor
sub
push
add
cs
inc
xor
or
mov
cmc
sub
bound
sbb
mov
pop
pop
inc
and
in
xorb
dec
mov
jge
mov
fs
dec
insl
cltd
je
pop
add
daa
inc
call
sbb
mov
pop
loopne
xor
jle
lcall
jae
test
pop
and
sbb
ja
outsb
cmp
ja
sti
xchg
cmc
ror
shl
into
rol
leave
or
or
arpl
mov
ret
test
mull
dec
pop
jne
sub
xor
jb
ret
fildl
lcall
mov
inc
ss
mov
std
test
bound
dec
lcall
fmull
xor
jecxz
test
loope
in
adc
xchg
sub
fdivrl
add
je
bound
inc
or
jg
mov
mov
xchg
or
int
jo
jle
repnz
dec
dec
mov
ret
ficoml
movsl
hlt
jb
xlat
in
xor
jo
and
or
mov
pop
push
dec
push
rcl
les
mov
arpl
mov
or
xor
and
mov
imul
pop
adc
mov
aas
leave
jle
fwait
mov
xchg
inc
stos
push
in
pop
dec
or
jl
jle
jg
cltd
xchg
ljmp
scas
lret
pushw
into
xor
cmpsb
jmp
xor
mov
insb
jne
push
sbb
call
stos
add
out
jl
aad
fadd
arpl
push
test
mov
xor
movsb
push
call
ret
pop
push
rorl
cltd
xor
cli
iret
jb
aas
fs
lcall
cwtl
cmp
mov
mov
push
cmp
jno
pusha
insb
jae
call
mov
lods
and
mov
int3
sbb
mov
loopne
movsb
insl
xor
testl
loope
fstpl
out
mov
test
dec
sbb
cmp
in
adc
notb
pop
repnz
das
ret
jno
jne
pop
push
nop
xchg
mov
sbb
inc
jmp
add
dec
xchg
cmp
in
pop
mov
or
adc
or
push
mov
pop
push
jno
fidivs
dec
es
or
cwtl
jmp
pop
push
push
cmpsb
aaa
jp
sub
jb
in
push
adc
rcll
cmp
cltd
mov
jb
lods
ds
fwait
jg
mov
jl
fisttpl
loop
dec
out
xchg
out
or
enter
lret
lahf
in
cmpsl
adc
aaa
in
sub
lea
xor
pushf
add
les
fisubl
cmp
add
enter
dec
rcrl
sahf
mov
gs
mov
pop
les
mov
ja
repnz
jmp
std
in
mov
mov
aas
pop
sub
jnp
xor
sbb
push
add
add
push
enter
ljmp
jg
popf
sbb
data16
mov
stc
cmpsb
lods
cmp
push
nop
jge
pushf
cmp
test
test
rorl
dec
les
jecxz
pop
fadds
push
and
adc
push
xchg
mov
sbb
inc
mov
xor
cs
cmpsl
sub
pop
push
mov
sahf
repz
imul
out
dec
ss
cld
lcall
mov
lea
mov
addb
ljmp
mov
jne
dec
jne
pop
push
cmp
pop
cmp
faddp
mov
orl
mov
mov
lret
ret
or
add
mov
clc
movsb
imul
out
mul
insl
xchg
mov
xchg
aas
xchg
adc
fadd
icebp
frstor
mov
push
leave
int
add
push
in
int3
mov
out
insl
scas
ja
scas
fwait
cs
mov
test
dec
xchg
movsl
mov
push
in
pop
notl
mov
mov
sbb
fistpll
inc
jmp
pop
fs
pop
adc
push
sub
in
out
enter
dec
push
bound
cld
xchg
sbb
mov
inc
fdivrs
neg
or
stos
lret
mov
xchg
and
loope
or
das
rclb
test
or
push
cmpl
push
jae
cmc
in
mov
xchg
dec
jb
xchg
loopne
mov
lods
adc
add
mov
inc
pop
inc
cmp
out
icebp
fimuls
sub
jo
cwtl
mov
add
aad
and
push
pusha
in
mov
inc
mov
fbstp
nop
loop
pushf
cmpsl
sbb
aas
movsb
clc
jecxz
push
push
jo
je
cmp
test
stc
sub
arpl
shll
inc
dec
ficompl
mov
mulb
outsl
mov
pop
fs
lcall
in
and
out
inc
scas
enter
inc
scas
xchg
mov
test
bound
es
in
insl
and
pop
mov
mov
jne,pt
movsl
mov
jno
orl
jle
inc
lods
out
lcall
imul
sub
push
push
ja
mov
xchg
loope
sub
push
dec
jl
xor
movsl
loop
lret
and
popa
aaa
es
ja
mov
pushf
sub
arpl
shlb
loopne
pusha
push
mov
andl
movsl
call
mov
movsl
xchg
lret
mov
dec
jne
mov
jo
fst
enter
xor
jl
imul
add
incb
out
sbb
dec
xlat
pop
push
jge
addb
into
and
mov
push
lea
mov
shl
test
leave
fpatan
rcll
xor
or
aad
xchg
je
cmpsl
popf
outsl
mov
xchg
aaa
loop
bound
lds
insb
mov
test
out
xor
inc
insl
or
add
jo
xor
fisubrl
clc
sti
incl
xchg
data16
xchg
fdivrs
bound
add
sbb
push
xchg
les
out
dec
push
cltd
mov
pop
xchg
jmp
xchg
mov
bnd
cmp
mov
fistpl
mov
mov
shr
mov
jle
adc
lcall
out
dec
adc
mov
jp
lods
repz
cmp
xor
mov
jno
popa
pop
mov
mov
scas
test
xchg
out
movsl
and
repz
add
jle
lea
les
pop
mov
sub
arpl
fwait
and
test
dec
mov
sbb
xchg
lret
xchg
cmp
dec
imul
popa
sahf
fs
bound
addl
ss
dec
and
push
ret
adc
xor
dec
sar
imul
out
repz
xchg
scas
and
fisttps
ljmp
push
nop
sbb
xchg
or
or
ret
sarl
mov
shll
mov
sarb
push
jmp
jno
movsl
pop
sbb
pop
pop
inc
cmp
rolb
mov
and
pop
fsubrl
pop
or
add
adc
movsl
mov
add
scas
fldcw
ljmp
mov
mov
lret
es
mov
data16
and
xor
in
mov
fs
push
push
fcmovnbe
repnz
bound
out
enter
rol
mov
data16
adc
decl
sbb
pop
repz
test
addr16
jno
shrl
dec
icebp
mov
imull
jmp
xor
test
dec
lahf
faddp
mov
jns
inc
mov
js
sbb
mov
nop
mov
sbb
repz
mov
push
iret
test
xchg
in
es
popa
jne
fistps
subl
adc
clc
dec
pop
push
mov
push
or
insl
cmp
push
push
iret
xchg
adc
nop
and
xchg
ret
adc
inc
jno
mov
xor
rcr
aad
push
icebp
movsl
or
inc
stos
push
loop
pop
cmpsb
std
inc
popf
push
movsb
in
jbe
pop
into
aam
adcb
xchg
ss
in
out
dec
pop
and
ret
cmp
pop
sbb
lcall
lds
fsubs
pop
cmp
jmp
push
dec
lock
rcrl
pop
dec
mov
xchg
jmp
sub
fld
idivl
mov
test
aas
push
cld
inc
imul
lds
rolb
call
mov
mov
cmc
loope
div
mov
pop
mov
xor
jg
call
xor
sub
out
xor
xchg
or
adc
xlat
mov
cmpsl
shll
sub
stc
cmpsb
or
cs
xchg
imul
xor
push
sbb
mov
stos
popf
outsl
pusha
or
xor
cmp
ret
das
xchg
cmc
or
and
pop
push
mov
xchg
inc
add
push
cmp
lods
xlat
sti
xor
jo
add
sbbl
dec
rorl
push
enter
int3
lcall
aas
int3
adc
cli
adc
jb
push
adc
mov
push
mov
push
lds
mov
std
jle
gs
rcl
sub
in
and
les
mov
and
fsincos
ror
data16
shll
push
icebp
shrl
in
in
sub
sbb
pusha
cli
ret
xchg
rolb
fists
dec
into
pop
sahf
jae
xlat
aad
in
add
fisttpll
push
cltd
jno
xor
pop
jecxz
popf
push
test
fsubl
aam
in
pusha
je
xchg
inc
push
mov
repz
push
inc
loope
add
ret
pop
push
sub
lds
ljmp
fnstsw
scas
int
ds
dec
xlat
inc
fnstsw
mov
cld
fnstcw
dec
adc
and
inc
mov
pop
loop
subb
push
xchg
jle
and
pop
xchg
inc
fnstcw
sbb
out
or
push
mov
mov
xor
lods
int
add
jo
xor
pop
adc
or
iret
lock
ret
lahf
lock
jmp
pop
mov
mov
push
fsubl
fbstp
fmull
mov
jg
fsubrs
adc
cmp
cmpsb
sbb
sahf
mov
cwtl
push
cltd
ret
cmp
inc
scas
ss
aas
mov
xchg
inc
push
cmp
clc
push
lret
and
cmpsl
cmp
mov
pop
lock
sub
push
sbbl
dec
daa
xorb
add
aas
test
push
xchg
sub
pop
fbstp
arpl
repz
add
adc
cmc
push
push
mov
dec
sarb
or
xor
mov
iret
pop
shl
and
lods
pop
iret
or
mov
aam
or
adc
jo
fsts
xor
outsl
scas
popa
test
sbb
inc
xor
lcall
dec
and
aam
mov
add
test
push
icebp
jns
aad
push
dec
or
mov
aad
cmp
xlat
jne
loop
pop
jge
dec
jle
jb
jne
mov
imul
out
into
test
inc
mov
out
and
loop
adc
dec
clc
jae
dec
pop
in
test
adc
adc
std
inc
jno
xchg
lds
add
popa
out
repnz
cmp
add
mov
add
dec
jle
gs
add
or
or
fisubs
xor
xchg
xor
daa
mov
xchg
and
pop
lock
mov
popf
fidivl
scas
sbb
ja
mov
inc
inc
insb
sub
mov
or
sub
inc
sahf
negb
arpl
xchg
xchg
mov
dec
dec
push
dec
hlt
into
and
fwait
ss
addr16
outsl
sbb
jecxz
pop
sbb
pop
and
sbb
orb
cwtl
aam
xchg
mov
leave
enter
adc
mov
out
adc
sbb
mov
cmp
shr
in
pop
cmc
hlt
mov
xlat
iret
push
pop
bnd
jle
jnp
dec
cmpsl
in
icebp
add
mov
sub
arpl
lods
add
pop
adc
fsts
mov
fldt
int3
popa
iret
adc
sub
xchg
fistpl
and
pop
lahf
mov
dec
push
faddl
lcall
sar
mov
fdivrs
lods
idivl
adc
clc
inc
push
jmpw
mov
mov
sub
dec
push
sbb
lcall
subl
or
mov
xor
mov
shlb
clc
dec
add
mov
out
push
shrb
pushf
int3
xchg
aaa
pop
jo
stos
xchg
inc
ja
out
push
jle
fsub
fistl
jo
or
scas
popa
daa
xorb
dec
jae
dec
inc
bound
imul
imul
adc
dec
loop
mov
fildll
stc
jecxz
mov
or
lods
cmp
cwtl
xchg
add
pop
add
push
pop
aaa
cs
xor
or
mov
ficompl
insb
aad
andb
pop
ror
xchg
xchg
aam
nop
pop
adc
lds
jnp
jo
sbbb
xor
and
push
imul
sbb
adc
mov
push
sbb
mov
pop
mov
iret
shll
jmp
lds
adc
cwtl
dec
loop
add
in
bound
jo
jnp
mov
test
sub
or
adc
xchg
addr16
cmp
fbstp
sti
mov
pop
in
adc
je
fisubs
je
int3
pusha
dec
push
test
loopne
xchg
sti
fst
inc
mov
fsubrs
xchg
or
cmc
mov
cmc
mov
hlt
aam
icebp
pop
call
inc
push
sub
jmp
mov
sub
ss
jo
lcall
imul
clc
ss
stc
mov
mov
inc
push
mov
insb
mov
push
cmp
xchg
je
jae
sbb
orl
xchg
adc
je
fcmovnb
mov
or
mov
stos
jns
jg
subl
cmp
cmp
and
sub
push
push
mov
mov
xorb
mov
dec
bnd
pop
adc
cmp
jle
add
sarb
or
ds
push
xchg
cmp
pop
inc
push
dec
mov
dec
movsl
xor
adc
pop
add
lods
mov
push
gs
inc
insb
add
rcpps
out
sbb
cmpsl
push
imul
push
shll
jns
repnz
std
lock
xchg
add
adc
mov
fwait
sub
in
dec
xchg
insb
shrl
adcl
xchg
ss
imul
lret
arpl
leave
mov
ljmp
or
and
mov
mov
fwait
add
outsb
mov
sbb
or
das
call
inc
mov
fdivrs
add
dec
in
mov
push
fcmovnu
xchg
pusha
inc
xor
inc
outsl
add
push
int
loopne
insb
xorl
inc
mov
jo
mov
push
sbb
js
xor
push
mov
dec
push
les
test
nop
lcall
xchg
cmp
xchg
jmp
pushf
mov
inc
nop
mov
call
idivb
xor
sub
out
int
adc
jnp
dec
cmp
rclb
jns
call
outsl
mov
jmp
pop
inc
ss
test
ja
mov
jno
fs
xor
mov
fmull
repnz
push
ret
and
scas
mov
push
jecxz
aas
nop
sub
jne
pop
shll
and
jl
popf
bound
jnp
dec
sbbl
sbb
fmuls
jns
incl
pop
lahf
push
mov
aad
sub
push
mov
add
push
sub
push
jle
iret
or
mov
int3
or
subl
ret
pshufw
lahf
insb
ficoml
es
icebp
mov
lock
in
jae
addr16
pop
xor
insl
out
fnsave
psadbw
inc
xor
xor
lcall
das
mov
into
cwtl
inc
iret
sbb
or
pop
mov
aam
xchg
jo
pushf
dec
outsl
mov
int3
inc
sarl
rcrl
andl
sbb
movsb
int
jbe
adc
or
jecxz
or
ss
cmpsb
in
push
ljmp
xor
jb
and
inc
xorl
or
inc
rcrb
and
subb
repz
cmpb
mov
das
pop
in
mov
dec
outsb
add
push
and
cmp
pop
xchg
aaa
mov
adc
data16
sub
daa
popa
add
lods
sbb
lahf
popf
lods
sbb
test
xchg
popa
sub
dec
ret
or
cmpsl
push
loop
in
in
inc
out
sbb
jo
cmp
stos
shl
lret
pop
bound
and
jmp
push
sbb
add
arpl
push
sub
cmpsl
aaa
das
or
inc
sub
sub
push
testl
scas
sub
xchg
mov
jmp
jnp
loope
lcall
in
and
int
test
pop
inc
xor
imul
mov
mov
loopne
inc
negb
stos
mov
sbb
sbb
ret
mov
push
gs
ds
rcrb
mov
and
js
xchg
std
hlt
and
mov
sbb
cli
pop
rcll
insl
in
jmp
loopne
movsl
mov
adc
adc
movsl
movsb
sbb
popa
xor
test
popa
sbb
push
jb
jmp
ds
cmp
shrl
xchg
dec
cmp
jle
sbb
push
popf
addr16
pop
cmp
hlt
jbe
mov
test
andl
jno
lret
xlat
mov
addr16
mov
xor
sbb
mov
psubd
out
jg
popa
cmp
lods
mov
and
cmp
mov
notl
lret
adc
or
push
scas
push
es
sbb
mov
jg
lcall
movsl
inc
test
add
scas
outsl
sub
bswap
push
pop
cli
inc
pop
xor
cmp
aas
mov
imul
ret
pop
jb
ja
pop
jbe
shl
lods
test
sub
into
cmp
pop
xchg
int3
adcl
jb
lea
push
fisubs
add
push
imulb
mov
inc
pop
lods
adc
arpl
in
cmp
push
jle
mov
nop
out
xchg
fistpll
add
xor
or
inc
int3
adc
pop
dec
adc
push
mov
xlat
xor
and
add
pop
jmp
sub
dec
dec
inc
cmp
inc
movsl
pop
inc
insb
jbe
xor
loop
mov
jp
dec
lcall
out
repz
mov
stos
and
xor
hlt
stos
push
sbb
jmp
nop
add
push
mov
les
and
sbb
inc
or
bswap
or
daa
mov
mov
std
cmp
pop
jl
push
sbb
and
sbb
les
adc
popf
xchg
arpl
sub
icebp
jb
stc
adc
into
xchg
rorb
pusha
push
pop
xor
lods
xchg
cwtl
adc
jg
aad
movsb
in
dec
fs
pop
sbb
aad
dec
stos
jl
ret
push
cmpsl
jge
int
jmp
and
fcmove
into
fcmovne
sbb
mov
add
adc
in
jl
push
aas
loopne
aad
ret
pop
rclb
mov
les
jle
in
mov
es
xor
xchg
aad
xchg
lea
insl
mov
sub
jb
mov
es
cmp
add
out
push
in
lea
ja
imull
cmp
stc
xchg
mov
xchg
scas
std
push
pushf
xor
mov
fisttpl
sub
shlb
xor
jne
fcmovnb
outsl
jle
xor
mov
sbb
icebp
lods
push
outsb
pop
sub
addr16
push
test
out
or
ror
call
xor
pusha
jge
pop
jmp
mov
cmpsb
jnp
bound
ret
push
sti
inc
push
out
and
pop
fisubrs
lock
out
sti
mov
dec
jae
pushf
adc
mov
jp
inc
scas
outsb
jo
shrl
leave
jle
das
or
out
lea
shrb
and
ret
adc
xchg
xlat
mov
test
dec
xchg
lret
mov
outsl
jnp
cmp
cmp
and
lods
mov
lods
adc
rcll
mov
mov
mov
in
int3
test
mov
jg
jg
inc
movsl
and
shlb
mov
xor
int3
daa
push
pop
das
mov
rcll
inc
rclb
std
cmp
enter
setnp
add
mov
jp
push
mov
sti
out
push
sbb
xor
dec
cld
rcrl
pop
dec
add
jl
cltd
mov
mov
xchg
add
jb
rcll
ljmp
repz
cld
aas
hlt
mov
clc
repz
xchg
lods
sbb
inc
mov
stos
bound
cmp
xchg
or
xor
iret
jne
xchg
push
xor
pushf
xchg
fdivp
sahf
push
outsl
pop
mov
or
js
stc
shl
xchg
outsb
cmp
mov
jle
push
and
dec
out
mov
lods
test
ss
sbb
stos
pop
out
pop
inc
xchg
addr16
jp
ret
push
dec
leave
sbb
ret
cwtl
add
pop
inc
inc
cmc
cmp
lcall
mov
fisubs
lcall
and
dec
in
fucomi
push
stos
mov
mov
dec
mov
fbld
mov
lock
inc
jnp
cmpsb
fldl
adc
adc
mov
add
mov
mov
ret
add
imul
add
sbb
mov
dec
mov
sahf
dec
ret
xchg
adc
cmp
xchg
in
mov
test
cmc
shrl
ds
cmpps
clc
mov
pop
mov
mov
movsl
mov
je
mov
rcrl
jg
outsl
jns
inc
jmp
xor
sahf
lahf
dec
loope
mov
ja
xchg
fsubs
pop
push
sub
mov
or
cmp
xchg
pop
fdivrs
inc
or
insb
outsb
mov
shrl
fistps
or
pop
adcl
and
and
std
adc
aaa
ja
out
mov
inc
cltd
inc
insb
fwait
aas
cs
js
push
and
roll
in
add
ret
xchg
lock
inc
jmp
add
push
decb
sub
cs
test
pop
xchg
jmp
stos
jno
mov
rclb
pop
dec
pop
mov
repnz
mov
pop
mov
fucomi
popf
mulb
lock
push
pop
inc
ret
pop
sbb
lret
outsb
rcl
cltd
and
inc
dec
sahf
jl
xor
mov
push
fisttps
dec
outsl
shll
ds
pop
das
cmp
loopne
xchg
sti
leave
pminub
daa
mov
xorl
inc
xchg
popa
das
xchg
ret
push
movaps
lcall
push
in
lods
fstpt
enter
sbbb
dec
or
adcl
and
cmpsb
and
add
ret
cmpl
add
jbe
cmp
out
aam
and
add
xchg
sub
inc
les
test
pop
xor
scas
sbb
mov
sahf
mov
mov
cmpsl
out
das
mov
notl
xor
cmp
lock
sub
cmp
cli
je
in
in
add
add
jge
lahf
adc
inc
mov
add
aas
les
pop
mov
push
fnsave
add
and
jle
and
cmpsl
or
pushf
loopne
add
push
pop
or
xor
das
stos
adcb
dec
sbb
sub
test
xchg
cld
xor
xor
sub
decl
xor
outsb
push
bound
fwait
add
xor
mov
in
out
mov
cmp
jns
adc
test
mov
adc
gs
or
out
loope
jg
ss
outsb
ss
subl
jge
xchg
sub
dec
fistl
cli
mov
fstps
mov
std
fldl
movsb
icebp
mov
jmp
hlt
out
jne
mov
and
clc
sub
xchg
push
rcll
rol
outsb
lcall
dec
dec
mov
out
aas
or
in
and
xchg
push
ret
and
mov
xchg
rorb
sbb
aam
push
clc
xor
mov
inc
ficoml
in
and
fnsave
test
pushf
adc
xchg
scas
dec
sub
call
jb
xchg
js
inc
bound
test
shll
and
pop
std
aaa
mov
add
mov
rcr
out
inc
mov
cli
lcall
addr16
jo
cmp
pop
out
test
inc
pushf
jb
stos
xor
pop
inc
mov
mov
fists
in
cmp
sbb
in
mov
mov
adc
push
mov
movsl
xor
and
or
mov
pop
repz
imul
sub
jle
shrl
shlb
mov
rolb
mov
addr16
cmp
add
data16
push
dec
imulb
xchg
xchg
stc
jb
in
cmp
cmp
push
sbb
dec
cmpsl
ss
movsl
hlt
push
mov
addr16
mov
push
xor
add
lahf
notb
jp
sub
in
cli
fcoml
rorl
push
mov
or
lret
cwtl
mov
mov
lret
outsb
imul
fiaddl
cwtl
pop
js
js
inc
repnz
scas
mov
xchg
add
ss
sbb
test
pop
pop
stc
lods
sbb
in
inc
mov
fstl
in
pop
cli
ds
jo
pop
mov
loop
add
jge
jo
repz
cmpsb
inc
fildll
push
xchg
add
and
or
pushf
insb
int
out
add
inc
mov
pop
and
mov
mov
shrl
xchg
fbstp
sub
in
push
adc
arpl
insb
mov
jne
sub
sbb
fdivl
fsubl
adc
call
movsl
and
sahf
jnp
sub
pushf
stos
imul
mov
cmpsl
jle
cmpsl
jg
pop
mov
push
cmp
cmp
orl
mov
jno
dec
loope
cld
push
and
out
or
lcall
addr16
pop
outsl
lahf
rclb
lahf
sub
pop
fistps
xchg
hlt
fnstsw
xchg
mov
outsb
or
mov
insb
mul
aad
mov
inc
mov
add
mov
rcr
in
fcmovne
imul
repz
loop
sar
dec
inc
test
xor
leave
mov
stos
mov
jmp
jnp
xchg
cwtl
icebp
ljmp
ja
and
fiaddl
jne
dec
mov
inc
ss
inc
sbb
enter
nop
outsl
adc
push
adc
in
push
inc
ds
mov
imul
scas
rcr
cld
sahf
faddl
cld
sbb
lock
popf
mov
lods
in
cvtps2pi
adc
je
push
jne
xlat
sub
fimull
or
test
sti
out
push
dec
mov
sbb
popa
or
jecxz
xchg
rolb
sahf
sti
xchg
pop
dec
mov
jnp
xchg
mov
push
jo
or
cli
pop
xchg
xchg
fnstenv
add
or
call
xor
rolb
and
in
cld
mov
fnsave
xchg
and
mov
nop
popf
pop
in
pop
insl
out
scas
adc
dec
sti
push
decl
repz
mov
fsubp
in
add
add
lock
mov
lahf
cmp
fistpl
xor
lock
stos
inc
sub
sbb
dec
lcall
inc
popf
dec
add
ds
idiv
mov
mov
pop
int
testl
or
inc
jne
inc
jno
rclb
shr
jb
cwtl
mov
push
dec
add
or
out
notl
adc
stos
sti
mov
in
loopne
xchg
mov
loopne
sbb
stos
repnz
sbb
sbb
lods
out
add
or
add
loope
cmp
pop
imul
int3
xlat
adc
mov
sub
jns
scas
mov
das
sbb
mov
data16
push
xchg
inc
mov
test
sti
inc
xor
xlat
mov
es
enter
pop
jle
add
adc
jle
pop
push
lret
rcr
pop
arpl
test
sarb
int3
cmpsb
ja
mov
mov
inc
pop
fldt
lds
push
sbb
push
lahf
push
lods
xchg
leave
dec
pop
dec
push
or
adc
ret
repz
insl
xadd
sub
sub
or
xchg
inc
pop
es
hlt
pop
aam
in
mov
cmp
int
sub
or
or
mov
xchg
daa
mov
push
push
pusha
ret
movsb
or
sub
call
sbb
aas
pop
jnp
lret
sahf
xor
int
aas
pop
fistps
cmc
or
shll
and
ret
cmp
pop
popf
push
mov
add
das
lahf
lret
dec
xchg
pop
xor
cmpsl
push
or
inc
push
dec
xchg
mov
arpl
mov
jmp
jg
iret
or
fs
xchg
dec
add
xchg
sub
xchg
jo
fsubrl
mov
les
ds
jae
pushf
sbb
jb
test
repz
mov
jge
or
fs
add
jg
fs
pop
sti
or
ss
push
xchg
mov
sub
lods
imul
xchg
xchg
loopne
lea
ret
cli
sbb
cmp
or
mov
push
dec
jbe
scas
xor
add
jae
cmp
rol
dec
jbe
movsb
ret
mov
adc
adc
inc
fsub
gs
push
out
cmp
pop
push
shlb
dec
cmpsb
outsl
ds
lret
fidivl
xor
xchg
dec
and
inc
lock
sbb
add
cmpsb
loopne
rcll
cmp
pusha
aas
push
add
xor
pop
jmp
xlat
and
rcr
sbb
sbb
inc
jl
repnz
decb
inc
mov
xchg
les
outsl
cmp
nop
xor
subb
cmp
mov
and
cmp
clts
mov
cmpl
mov
and
mov
decl
cmpsl
jne
lret
aad
hlt
pop
sbb
stos
add
xor
or
and
dec
cwtl
int3
lahf
push
shll
or
out
enter
sti
lods
push
js
inc
mov
sub
aaa
mov
loope
sbb
xchg
jmp
pop
xchg
je
xchg
dec
sub
aas
jmp
pop
jge
popa
sbb
mov
cmp
lret
push
xchg
in
in
jecxz
cmp
pop
jecxz
out
test
cmp
sub
xor
ffree
arpl
sub
out
mov
pushf
cmp
push
jno
adc
es
adc
jle
rorl
or
cli
jmp
cwtl
mov
jl
sbbb
js
lret
xor
insb
popa
add
in
mov
push
or
xchg
pop
xchg
shlb
cmpsl
pop
decb
jecxz
push
inc
xor
mov
pop
cmp
and
xchg
inc
pop
pop
pop
push
ret
inc
mov
jge
mov
pop
or
jns
bound
xchg
mov
lcall
ja
repnz
xor
mov
mov
push
xor
scas
mov
push
mov
mov
dec
push
add
inc
cld
jle
scas
jo
jnp
cmc
mov
int3
add
movsl
or
je
test
and
dec
xchg
sarb
popf
std
mov
inc
sbb
mov
test
mov
adc
inc
dec
das
lods
cmc
push
daa
mov
jno
jbe
mov
sahf
not
decl
xchg
sbb
adc
mov
mov
mov
mov
outsl
add
out
aaa
ret
mov
cwtl
adc
cli
ret
add
and
call
pop
xchg
cmp
inc
xchg
into
sbb
fsubrl
lods
clc
ss
and
push
popa
jge,pn
xchg
in
test
loopne
ficomps
or
pushf
addl
adc
cmpsb
push
ss
mov
jmp
pop
andl
dec
mov
daa
xor
icebp
jle
mov
cmpsb
dec
xchg
dec
out
addr16
ret
pusha
sbb
sbb
daa
lods
fildll
xchg
push
inc
repnz
and
jg
jp
add
mov
int
adc
je
mov
lea
mov
sbb
adc
popf
add
imul
jge
mov
ret
in
scas
dec
aas
sbb
outsb
cmc
jge
xchg
testb
lds
loope
or
xor
xchg
mov
mulb
cwtl
xchg
fsincos
incb
pop
aaa
dec
in
mov
cmp
addr16
and
lcall
dec
push
dec
daa
test
ficomps
shr
repz
or
gs
cwtl
imul
sub
ror
pop
xor
sbb
adc
push
aam
shll
push
imul
adc
xchg
in
imul
es
insl
xchg
outsl
or
mov
or
mull
stos
xchg
lock
in
das
adc
push
divb
mov
orl
ja
aas
leave
mov
mov
aam
sbb
int
aad
mov
mov
insl
sbb
cmp
or
shl
jnp
test
jb
cmp
in
mov
push
cmp
and
test
pushf
scas
push
mov
pop
sbb
mull
enter
pop
popa
lahf
and
dec
fsts
and
mov
pop
outsl
jb
jg
arpl
outsb
data16
ja
rcl
xchg
call
xchg
mov
lods
gs
std
adc
xchg
xchg
out
in
incb
push
ret
psraw
cmp
test
add
cld
clc
or
jp
jmp
jnp
jle
cmp
ljmp
mov
sbb
dec
cli
sbb
sbb
dec
jne
mov
pushf
imul
iret
shlb
aam
sbb
mov
arpl
add
dec
test
xlat
mov
mov
adc
sbb
mov
jle
outsb
jmp
adc
int
mov
or
jecxz
inc
mov
in
add
fs
repz
jmp
repz
pop
adc
xchg
mov
push
push
lock
sarb
sub
ja
push
sbb
shlb
fnstcw
std
or
and
bound
mov
jo
jg
dec
data16
lcall
inc
pop
aad
pop
jecxz
sbb
jae
aam
aam
or
xchg
jg
add
subl
jmp
cs
sbb
cmp
insb
push
cmp
xchg
das
bound
adc
and
test
mov
mov
cld
lods
mov
in
fiadds
cmp
or
mov
push
fmulp
xorb
xchg
cli
mov
mov
sbb
ljmp
rcr
iret
repz
mov
mov
or
mov
jecxz
xchg
and
push
cmpsb
mov
xor
or
clc
das
icebp
adc
jecxz
push
mov
nop
sti
and
or
test
pop
push
int3
xchg
iret
inc
mov
and
inc
sahf
daa
fmuls
mov
add
popa
sub
jno
cmp
jle
out
cltd
cmc
mov
divb
mov
cld
fs
cmp
js
cmp
jmp
lods
xchg
cmp
iret
and
fldt
not
loop
adc
rcr
xor
mov
fs
push
jns
jb
jo
push
mov
stos
mov
mov
stos
push
mov
pop
xor
jbe
or
mov
in
push
pop
repz
adc
arpl
or
sti
dec
adc
xor
xchg
sbb
lahf
pushf
pop
pop
cli
or
sub
stc
jnp
mov
aam
mov
push
mov
mov
scas
sbb
hlt
jae
rolb
sbb
xchg
ficoml
push
or
xchg
imul
push
ret
cmpsb
or
scas
into
pop
rclb
push
sbb
call
mov
jmp
mov
inc
pop
cs
data16
lcall
pop
popf
xor
cli
dec
xchg
lods
pop
jno
mov
in
jl
lcall
cs
mov
popa
and
cmove
ja
push
xor
sbb
push
xorl
ljmp
or
xor
jne
sub
std
cmp
sub
ffreep
movb
and
rcrb
jno
lcall
leave
and
pop
ja
jae
nop
icebp
dec
enter
test
sub
lahf
or
or
mov
push
inc
outsb
lcall
pop
out
xor
ss
bound
push
mov
mov
sbb
int3
dec
add
pusha
push
push
jmp
cli
loopne
push
in
mov
fstps
mov
lret
jmp
ret
aam
daa
cwtl
sbb
mov
or
test
pop
movsl
adc
cmp
stos
iret
sub
inc
aad
xor
ss
jo
sub
mov
mov
arpl
movsl
cmp
mov
add
popf
cwtl
test
sub
lcall
push
testb
btc
test
dec
xchg
cmp
dec
and
rclb
mov
mov
in
scas
xchg
xor
xor
jl
push
cwtl
and
fdivrl
push
and
jae
mov
lret
push
sti
dec
pop
fadds
inc
and
psubb
aad
xor
pop
dec
dec
stc
dec
pop
xchg
inc
mov
pop
or
rcrb
arpl
imul
adc
andl
imul
ja
js
mov
dec
cmp
inc
push
mov
push
daa
or
or
cld
fiaddl
mov
add
jne
dec
rcrl
xchg
insl
mov
repnz
call
mulps
mov
pop
ss
lods
or
jne
adc
xchg
mov
ret
mov
add
dec
int
cwtl
insb
lods
pop
sub
mov
mov
fsubrs
mov
nop
xchg
jle
mov
jb
imul
mov
pop
jns
outsb
inc
pop
push
inc
lret
clc
push
or
shrb
mov
and
jne
adc
iret
xor
rcrb
add
mov
xor
jp
scas
fldcw
add
movb
pushf
jns
jge
push
ret
iret
mov
mov
callw
sub
testb
loope
stos
sub
xlat
cmp
pop
add
ret
cmp
or
lds
jmp
push
or
ret
imul
xchg
addr16
scas
loope
pop
sub
cltd
pop
test
negb
popa
test
xlat
int
xor
jb
dec
dec
pop
test
cmp
dec
jp
or
shlb
or
and
mov
dec
and
js
jmp
mov
loope
cmpsb
add
aad
inc
dec
jo
push
repnz
aas
and
pop
fisubrs
adc
sub
ds
pushf
lcall
shrb
es
and
mov
ss
cmp
repnz
pop
dec
stos
mov
enter
add
sub
or
pop
iret
add
clc
ljmp
xchg
inc
mov
or
in
push
add
mov
lods
rorl
jge
stos
xor
xor
and
inc
out
add
dec
jb
push
xchg
out
lret
fimuls
lods
or
mov
das
push
cmpsl
jbe
int
lahf
in
push
pop
lahf
leave
or
mov
dec
out
sbb
stos
aad
cmpsb
mov
add
cltd
loopne
mov
imul
adc
lds
xchg
lds
sub
enter
inc
mov
mov
mov
dec
inc
loopne
dec
mov
mov
or
iret
test
push
lods
jb
dec
in
mov
bound
pop
sbb
push
inc
xchg
pop
test
lcall
orl
push
lods
jbe
mov
pop
mov
fwait
jecxz
pop
aam
test
jle
scas
inc
xchg
sbb
sahf
outsl
push
incl
imul
nop
nop
xchg
sbb
jb
pop
sbb
mov
mov
stos
lods
in
mov
in
jp
out
mov
cmpb
gs
or
in
pop
addl
out
push
daa
mov
mov
xchg
not
add
jbe
pop
xchg
scas
or
xchg
sub
jae
xchg
inc
fdiv
dec
addb
scas
sbb
int
or
push
or
push
negb
dec
jl
insl
inc
mov
mov
jnp
sarl
jne
dec
stc
cltd
sbb
popa
fldpi
scas
xor
add
cld
and
xor
rol
fadd
frstor
out
or
mov
je
incl
mov
push
test
dec
lcall
push
sub
and
enter
cmc
push
mov
shrb
jp
dec
lret
jecxz
xchg
outsl
inc
or
fisubrl
adc
out
out
pop
outsb
outsl
in
imul
mov
lret
xor
fsubs
outsl
jae
ret
mov
push
inc
dec
pop
ret
mov
lods
pop
test
and
push
cli
jns
fucom
pop
mov
mov
fucompp
xchg
cld
insl
pop
es
cltd
addl
clc
and
dec
mov
push
adc
adc
gs
inc
pop
sub
call
aam
rclb
or
fsubs
pop
repnz
jne
inc
dec
inc
push
fisttpl
sub
push
rolb
rol
rcll
test
mov
das
add
push
mov
sub
repnz
out
adc
mov
cmpsb
jb,pt
xchg
mov
pushl
adc
cs
sarb
jg
mov
cmc
mov
mov
cmpsb
out
sbb
and
insb
test
mov
dec
lock
lea
xchg
out
movsl
mov
or
or
outsb
ds
aaa
add
js
xor
inc
xor
jb
pop
pop
arpl
js
pop
push
test
lahf
outsb
xchg
push
add
adc
ret
bound
fwait
rcrl
sbb
jbe
in
dec
rcrb
dec
push
cwtl
sbb
out
stos
cmp
and
jg
xor
cld
sbb
mov
xchg
dec
out
add
pop
shrl
pushf
inc
cmp
shrb
xchg
pop
add
mov
scas
jne
jp
stc
mull
xorl
push
add
ror
aas
cli
pop
xchg
pop
push
ljmp
clc
mov
pop
lods
mov
xor
mov
jp
or
orb
adc
imull
push
jnp
in
stos
mov
cltd
aaa
mov
popf
mov
xchg
fbstp
push
jge
fistpl
xchg
xchg
in
daa
scas
jae
xchg
jp
adc
cmp
mov
lods
pop
dec
hlt
push
pop
fcmovne
inc
and
fldenv
push
arpl
mov
gs
sub
jb
lahf
ret
mov
sub
pop
inc
mov
pop
sub
push
pop
adc
movsl
jb
dec
dec
dec
inc
fimuls
lcall
sub
jl
adcb
mov
pusha
mov
or
mov
push
xchg
jno
push
ja
mov
sub
jmp
push
lods
sbb
push
push
mov
cmp
sub
mov
dec
or
loope
fistps
jp
and
xchg
add
fiaddl
pop
mov
mov
and
cld
lcall
sbb
cmpsl
inc
cmp
idivl
pop
mov
jge
enter
dec
mov
outsl
sub
sbb
xor
and
adc
dec
and
arpl
xor
mov
jle
stos
xor
dec
pop
pop
pushf
cmp
push
push
lahf
pop
leave
insl
cmp
xlat
push
jne
jbe
xor
orl
test
push
cmp
fstpt
inc
push
dec
sbb
movsb
adc
jne
out
nop
pop
mov
sbb
add
dec
inc
movsb
frndint
jp
stc
enter
scas
cld
push
dec
and
xor
pop
mov
jmp
or
inc
leave
xor
push
shll
loopne
jo
push
mov
sar
push
mov
arpl
ss
dec
cmpsl
es
xchg
jle
pop
sti
ror
sbb
pop
repnz
int
mov
pop
dec
jns
loop
mov
adc
mov
aaa
shr
enter
cli
dec
imul
fadds
fsubrs
cmpsb
xchg
or
leave
hlt
lahf
adc
fisttps
repnz
cli
xchg
fildll
mov
dec
xor
pop
add
mov
mov
iret
adc
imul
insb
je
fistps
cmpsl
push
xor
mov
sbb
cwtl
mov
jno
jg
and
pushf
jge
pop
loopne
pop
notb
push
idivl
inc
or
clc
push
pushf
or
fdiv
jl
gs
pop
xchg
int3
lahf
push
jb
jo
mov
ja
scas
cwtl
mov
xor
fdivl
add
add
cmp
scas
jmp
imul
aas
sahf
gs
cs
daa
mov
movsl
push
xor
inc
ja
out
cmp
pop
sub
xchg
or
mov
cltd
add
js
pop
mov
cmp
pop
xchg
sub
jecxz
inc
jg
cmp
js
insl
stos
sub
jbe
ja
out
jl
ficompl
ret
cmpb
test
jl
lret
add
mov
jae
jns
es
and
inc
add
adc
pop
and
xor
jno
rcll
xchg
and
pop
xchg
jne
mov
xchg
rolb
push
sub
stc
into
imul
daa
fildl
mov
fidivrs
sub
jne
iret
into
shl
imul
xchg
data16
mov
mov
cli
xchg
xchg
jg
mov
inc
mov
sbb
shr
das
in
in
mov
and
iret
lea
adc
xor
shlb
arpl
sbb
fcomi
fwait
jmp
shll
call
pop
pop
xchg
arpl
das
jae
sarl
jbe
xchg
jg
add
pop
scas
mov
adc
gs
pop
adc
clc
lret
and
js
hlt
mov
imul
xor
sahf
stos
cs
movsl
imul
mov
mov
mov
jbe
lret
inc
cmp
out
and
mov
stos
xchg
ljmp
adc
insl
push
dec
sub
daa
mov
mov
roll
lret
mov
or
push
loope
ret
add
push
fisttpl
mov
adc
test
je
in
je
sub
lods
dec
or
cld
and
clc
decl
rorl
es
mov
dec
mov
pop
mov
lret
aas
jmp
add
insb
insb
jmp
popf
pushf
fcmovnu
push
cltd
or
rorb
inc
pusha
add
dec
shl
ja
loopne
inc
xchg
icebp
cmpb
or
out
enter
cmp
cmp
push
and
loopne
push
test
pop
ds
add
loop
dec
or
js
jbe
lods
fisttpl
lret
jno
fcomp
cmp
cmpsb
test
addl
cmc
out
nop
push
arpl
dec
lcall
mov
pop
loop
outsl
jmp
rol
mov
adc
lea
scas
adc
clc
pushf
arpl
add
imul
xchg
fstpl
fcom
jl
inc
or
jmp
inc
js
adc
push
jb
in
add
or
inc
into
mov
push
ficoml
cmp
mov
cmpsb
xor
ja
xorps
adc
cmp
jno
ret
sub
rclb
cld
out
in
icebp
int3
sbb
ret
sub
into
stos
xor
mov
ret
lahf
out
aaa
push
or
xor
or
out
sahf
test
and
out
xchg
sbb
mov
fsts
xchg
xchg
loope
je
xchg
repnz
dec
cmp
xchg
mov
pop
push
xor
hlt
addr16
pop
dec
or
or
pop
out
pop
sub
cld
fcompl
xchg
push
cmc
fwait
mov
rolb
and
and
pushf
sub
pop
cmpsl
mov
or
dec
push
imul
cltd
std
cmp
std
mov
lea
xchg
pop
pop
adc
fyl2xp1
pop
fwait
xor
mov
and
add
xor
push
mulb
or
test
call
gs
push
in
pop
sub
pop
in
xchg
inc
cmp
add
dec
or
and
or
cmp
mov
mov
mov
lods
mov
insl
or
xor
xor
test
aad
push
push
loopne
xor
or
popa
inc
adc
loop
ja
dec
rorb
int
push
lds
jmp
jno
cs
arpl
xchg
xchg
dec
jne
adc
gs
pop
fwait
cmp
addb
sbb
repz
push
pop
adc
rolb
adc
push
cld
push
or
adc
and
jp
mov
jp
idiv
loope
adc
scas
mov
add
sbb
sub
in
sbb
jg
rcrb
add
into
js
sbb
mov
fisubrl
jns
dec
lds
iret
push
mov
mov
leave
and
popa
aaa
lea
jl
adcl
lds
imul
inc
notl
pop
push
pop
je,pn
adc
dec
insb
jno
xor
adc
jl
inc
sub
test
push
aas
bound
cwtl
call
add
push
loope
lds
sub
xor
sahf
dec
rclb
ja
insl
insb
imul
ss
ljmp
dec
aaa
sbb
mov
pop
sti
pop
stos
sub
jge
or
sbb
pop
dec
and
pop
imul
in
pop
fs
lods
repnz
sub
sahf
test
add
insl
or
cmpsl
push
setno
test
leave
rcrl
push
in
fsubs
push
dec
mov
shll
xchg
lock
out
int
aaa
test
lret
scas
or
cwtl
add
lret
arpl
add
jl
jb,pt
or
dec
xlat
mov
gs
int3
shl
lahf
or
rcll
sub
ret
ret
pop
popa
cmp
outsl
iret
pop
mov
lret
test
imul
sahf
mov
xchg
and
arpl
cmp
cmc
mov
inc
xchg
in
inc
pop
rcl
cmp
outsl
sub
scas
dec
pushf
push
out
jl
inc
lock
cmp
xor
aaa
aad
loop
xor
sbb
xchg
push
pop
sahf
adcl
js
test
pop
mov
pop
jae
push
lcall
test
mov
inc
and
pop
mov
xor
jmp
insl
xor
xchg
and
outsb
lods
mov
lret
add
push
xchg
enter
cmp
cmpsl
or
add
out
pop
jmp
xorb
lods
xchg
in
dec
pop
pop
imul
mov
sbb
dec
or
adc
dec
repnz
xor
jo
and
addr16
daa
or
std
pop
xchg
cs
ljmp
aas
shrl
mov
sub
mov
daa
and
dec
incb
aam
jle
rcrl
sbbl
in
push
and
add
call
repnz
icebp
cmc
mov
cmp
cmp
mov
ret
insl
pop
mov
inc
int3
push
jle
hlt
popf
mov
push
xor
sbb
push
into
fidivrl
cmp
leave
aam
cmpsb
dec
mov
or
sub
shll
ja
movsl
mov
rorl
lds
or
std
push
inc
loop
movsl
push
mov
inc
test
jecxz
stos
rcl
dec
mov
testb
loop
jmp
popa
adc
mov
mov
iret
mov
sbb
je
cli
xor
repnz
insl
push
sbb
in
push
mov
int3
in
dec
adc
push
dec
shll
lea
dec
lea
push
or
ds
daa
mov
and
dec
addr16
test
cli
adc
jae
insl
stos
test
outsb
fucomi
pop
dec
and
das
mov
cmpsl
test
cwtl
mov
stos
push
bound
mov
fistpll
jge
xor
repz
inc
pop
dec
jne
pop
ret
das
sub
mov
dec
in
pop
jae
fistl
call
into
inc
dec
dec
enter
pusha
js
mov
jmp
lret
shlb
movsb
arpl
cwtl
inc
jno
sbb
decl
adc
push
inc
aam
and
rcrb
xor
mov
mov
sbb
in
xchg
xchg
pop
fcom
jno
sbb
inc
and
sbb
mov
dec
push
jae
js
std
or
dec
add
push
lock
mov
cli
sub
xorb
push
dec
mov
in
jns
insb
sub
mov
cmp
fwait
inc
ret
xchg
jns
lods
in
rol
mov
or
repz
pop
dec
fldenv
xor
rcrb
in
push
in
sub
fldpi
rcll
mov
mov
je
into
jbe
jns
nop
pop
push
add
sub
add
into
cmp
test
pop
jle
xchg
clc
bound
xor
notl
xor
mov
adc
ret
push
xor
into
or
pop
fwait
mov
adc
in
push
jnp
nop
push
cmp
test
or
mov
sub
pop
mov
loope
jae
sti
push
jno
enter
xor
pushf
sbb
mov
dec
lods
xor
shlb
insl
cld
loop
mov
inc
jbe
lds
xlat
mov
sti
jecxz
fidivrl
jge
jae
jmp
loopne
inc
loope
mov
mov
divl
cmp
ss
add
lea
je
insl
xlat
push
in
and
lods
push
fcomps
sub
adc
jp
in
adc
test
jge
push
cmp
sbb
push
nop
add
sub
decl
shll
mov
pop
adc
push
movsl
jp
or
enter
aaa
pusha
iret
lcall
stos
cmpsb
out
ret
cmp
xchg
mov
xor
or
testb
lods
jbe
add
or
jp
jne
in
push
mov
les
ret
and
pop
movsl
mov
jg
hlt
inc
hlt
xchg
mov
data16
adc
leave
iret
inc
in
aad
aam
mov
xor
ss
dec
insl
iret
aam
lods
div
xchg
push
push
inc
cmp
scas
inc
mov
js
hlt
cli
push
add
cmp
xchg
adc
enter
cmpsb
add
sti
mov
pop
pop
pop
inc
mov
rol
mov
pop
iret
int3
adc
adc
pop
ds
xlat
dec
test
jae
cld
xchg
lahf
jno
out
xor
es
push
inc
cmp
test
push
cmpsl
adc
inc
ficoml
dec
or
loop
jecxz
lock
cmp
es
push
adc
orb
xor
sbbb
push
cmp
add
in
out
decb
pop
imul
fidivrs
add
inc
in
test
sub
sbb
adc
mov
call
dec
sti
aad
jb
clc
sub
popa
cld
mov
cwtl
pop
inc
and
xor
lods
sub
pop
stos
stos
es
mov
inc
cmp
lret
outsb
sub
or
leave
sbb
xchg
icebp
loope
test
or
cmpsl
xor
fdivs
pop
xor
sahf
pop
lcall
insb
inc
adc
gs
jne
enter
mov
mov
sbb
icebp
and
sbb
pop
adc
ja
jle
cwtl
and
int
lds
ret
es
sub
adc
sbb
adc
sti
loop
cmp
xor
clc
cmp
popa
clc
pushf
leave
fdiv
aaa
mov
push
out
jl
push
aad
std
jg
clc
and
bound
mov
mov
and
cmp
pop
mov
imul
pop
inc
mov
iret
stos
jns
lock
scas
xchg
mov
cvttps2pi
xchg
lahf
jne
out
lods
sub
popf
nop
pop
aad
mov
pop
pusha
mov
jl
push
adc
pop
push
scas
pop
movsl
mov
enter
cmp
inc
cmc
icebp
fcoml
xor
clc
lods
mov
inc
mov
jl
cltd
fimuls
and
cmp
scas
jg
jmp
inc
ret
lahf
dec
stos
xor
push
push
xchg
lods
loop
mov
sub
jp
dec
jg
int
pop
fnstcw
gs
addr16
jecxz
je
cmpb
out
mov
cmpsl
cmpb
pop
jbe
dec
fs
sbb
lods
ficoml
pop
scas
or
ja
or
cltd
popf
imul
and
mov
das
sbb
xor
nop
sub
push
icebp
lods
cld
adc
out
movsb
ja
mov
imul
and
or
orl
inc
loop
gs
arpl
fidivs
dec
sub
sbb
rclb
add
rcr
lods
out
add
or
repnz
scas
adc
pop
sub
scas
jnp
mov
push
outsb
scas
imul
pop
mov
decb
dec
mov
mov
outsl
testl
pop
sub
int
push
or
jbe
cltd
das
fldt
mov
push
in
lret
and
mov
pop
xchg
sbb
and
pop
mov
lods
enter
scas
push
aas
mov
pop
leave
sbb
into
mov
ret
inc
sub
aas
and
inc
and
movsb
sbb
push
enter
pop
sbb
shrb
xor
bt
and
add
add
mov
cmp
sarb
jle
rorl
mov
xchg
call
xor
vprotd
sbb
lods
mov
in
jne
enter
adcl
pop
and
push
bound
adc
add
je
int3
xlat
lcall
push
lds
mov
sub
jg
lds
xor
imul
or
int
xchg
or
aad
shll
mov
adc
iret
rcl
inc
sbb
fmull
outsl
adc
push
push
xchg
out
out
mov
ret
cmp
or
addr16
lea
mov
sub
movswl
lock
test
push
add
and
in
mov
stc
test
sub
jb
lahf
leave
es
jnp
lret
in
pop
fcoml
xchg
inc
pop
gs
fs
inc
test
out
mov
sbb
repz
cltd
dec
sub
ds
lods
jl
test
hlt
jmp
xchg
or
cmp
jns
dec
sar
icebp
aam
xchg
repz
jae
mov
mov
fxam
or
bound
movsb
sub
and
fwait
jne
sti
jb
pop
stc
or
push
adc
cltd
jecxz
push
negl
sub
jne
popa
gs
push
fsubrs
mov
add
int3
cmp
gs
or
cwtl
leave
testl
filds
xchg
lods
and
sbb
adc
sahf
sbb
add
jg
adc
fistl
lcall
add
out
sbb
cmp
cmp
arpl
loope
call
into
and
add
push
inc
and
push
rcr
mov
pop
xchg
mov
xchg
sub
shlb
pop
nop
insl
in
stc
add
pop
in
testb
sub
inc
sub
jmp
xchg
shrl
imul
mov
push
ror
sub
test
jl
aam
dec
insb
ret
je
dec
and
rol
push
loopne
je
je
sbb
rorl
shr
adc
data16
cmpsb
inc
lods
mov
rorl
aad
icebp
mov
jo
es
daa
xchg
mov
sbb
xor
mov
sub
sub
xchg
aaa
sbb
int
sub
sbb
add
shlb
jbe
push
bnd
sbb
mov
jp
sub
in
mov
loop
pop
dec
dec
inc
or
dec
inc
jae
icebp
sub
xor
sub
jbe
aad
mov
mov
mov
sbb
cmpsl
or
mov
scas
popa
int3
sbb
lds
mov
dec
add
xchg
fwait
or
insb
or
jp
mov
iret
fidivrl
inc
pop
ljmp
sbb
dec
or
leave
pop
dec
int
repz
and
lret
mov
xlat
pop
jp
lahf
ret
aam
daa
data16
add
data16
imul
inc
adc
push
adc
sti
insb
loop
test
dec
call
jno
rcl
xor
push
out
jle
add
std
pop
and
in
ljmp
repz
and
xchg
int3
lret
popa
mov
and
ja
xchg
push
lcall
shrb
repnz
cwtl
daa
pop
nop
or
jbe
fs
pusha
pop
add
data16
mov
sahf
mov
sarb
xor
dec
xor
xchg
lahf
out
sub
jl
jl
pop
cmp
xchg
pop
jns
scas
insl
aam
imul
nop
pop
sub
fmuls
lret
add
jle
cmp
arpl
xor
and
lods
push
pushf
push
daa
lds
or
clc
scas
sub
add
mov
sbb
dec
mov
pop
lahf
sbb
cmp
hlt
popf
xor
int3
and
sar
inc
push
int3
xor
mov
mov
or
jae
lods
or
repnz
inc
xor
dec
mov
adc
insb
cmp
mov
sub
clc
xchg
xor
enter
into
ds
cltd
cmpsb
jae
inc
and
xchg
add
sub
pop
flds
int
dec
dec
add
loopw
sub
scas
mov
push
jb
mov
xor
idivl
mull
jp
push
je
and
imull
cmp
jne
pop
dec
push
test
and
pop
loopne
push
push
mov
incb
mov
inc
inc
sbb
push
fldenv
mov
lret
iret
aam
adc
mov
fwait
rorb
push
int
add
inc
adc
in
inc
cmpb
add
cmp
mov
and
pop
sar
cmpsl
in
adc
addb
mov
mov
int3
jae
or
ljmp
mov
adc
mov
mov
es
adc
mov
daa
add
outsb
jns
test
js
pop
mov
xor
xor
mov
fiaddl
fcoml
fwait
hlt
xor
mov
or
imul
aaa
dec
and
int3
mov
aas
std
push
pop
jl
jle
std
jb
jge
shrl
call
rolb
pop
mov
add
jb
adcb
popa
pushf
lods
shl
xor
cmpb
sbb
mov
dec
sub
ret
pop
push
push
scas
inc
test
shll
push
movsl
or
fwait
pop
pop
clc
jo
push
or
sti
and
cltd
test
pop
mov
mov
xor
mov
mov
mov
decb
add
mov
jae
push
lock
jmp
mov
repz
popf
adc
scas
orl
cmp
xchg
xchg
mov
test
clc
lds
scas
sub
ffree
icebp
fsubrs
xchg
adc
ljmp
ret
movsl
dec
dec
jecxz
ljmp
jge
fwait
inc
inc
jmp
ret
test
loope
dec
mov
out
shrl
mov
inc
jae
imul
into
out
adc
pop
jbe
mov
sbbl
push
pop
cmp
push
push
dec
add
push
cwtl
popf
inc
lods
mov
pusha
xor
sub
mov
cmp
stos
cli
add
push
pop
aad
pop
xchg
pop
rclb
repnz
notb
cld
sbb
lcall
out
test
sub
int3
addr16
mov
mov
dec
out
stos
iret
xor
rcrb
cmp
xorb
mov
push
rcrb
mov
mov
mov
or
mov
in
loopne
dec
mov
fisubs
and
inc
xlat
fstpt
mov
rcll
loope
in
mov
mov
bound
call
xchg
cltd
sub
aas
jmp
imul
mov
jae
jb
cltd
sarb
xor
push
adc
leave
movsb
clc
xchg
lahf
movsl
inc
fmull
sub
push
mov
les
std
test
pop
addr16
into
hlt
sbb
sub
pop
or
js
es
andl
mov
lcall
cwtl
adc
popa
adc
sbb
and
add
not
add
pop
lea
lea
push
mov
daa
mov
jno
dec
adc
push
sbb
pop
ret
xor
pop
pop
xchg
jne
xor
push
fnstcw
scas
and
shlb
nop
fisubrl
hlt
push
pop
outsb
lahf
fsts
jbe
add
lcall
dec
repz
push
mov
lods
xor
dec
dec
into
mull
jg
mov
mov
push
dec
ljmp
int
stc
or
clc
dec
xchg
mov
jmp
or
and
fs
cltd
shrd
cmp
ds
movsb
in
pop
cmpsb
daa
shll
cmp
add
inc
mov
cs
bound
inc
into
std
push
icebp
or
pop
jns
arpl
subb
cld
pushl
in
pop
dec
enter
jno
dec
adc
popa
test
in
ret
pop
adc
pop
jae
aad
in
insb
xchg
sahf
mov
dec
ret
lea
out
shll
das
jmp
mov
lcall
and
imul
mov
cwtl
push
mov
cmpsb
into
sbbl
push
xor
insl
push
push
push
push
dec
add
lea
push
jnp
std
mov
or
stc
movsb
sub
lahf
stos
and
shlb
sub
insl
mov
pop
dec
adc
add
add
xor
or
push
jne
fildll
or
cmp
clc
xchg
lcall
sbb
out
cli
fsubl
lcall
sub
ud0
pop
sub
imul
fwait
insl
sub
jl
dec
les
data16
mov
cmp
outsb
ljmp
repnz
inc
and
icebp
pop
cmpsl
xor
lret
es
mov
out
or
jbe
dec
jp
jp
aas
jbe
sbb
out
fadds
hlt
insb
mov
std
adc
or
pop
push
or
sti
xor
cltd
lcall
bound
in
xor
call
popf
cmp
add
leave
cmp
inc
ret
arpl
jnp
sub
xchg
cld
fisttpl
dec
adc
shrb
decl
stos
inc
mov
xor
test
stc
adc
inc
xchg
rcrb
in
aaa
aas
test
dec
ja
fs
cmp
dec
mov
out
lods
xlat
dec
lods
cmpsb
stc
push
or
cltd
inc
or
adc
hlt
mov
sub
movsl
icebp
ja
les
int3
insl
in
pop
movsl
inc
in
jno
cltd
add
lcall
out
mov
lcall
fisubs
jne
iret
xchg
call
scas
push
pop
bswap
scas
mov
sbb
arpl
lret
jae
mov
push
jns
lcall
repz
fists
test
xchg
pop
xchg
xchg
ret
push
mov
iret
mov
pop
into
icebp
loope
leave
popf
aam
xlat
jno
popf
rcl
xchg
add
test
adc
pop
in
loope
push
outsb
push
cmpl
sbbl
call
pop
sub
test
scas
mov
outsl
adc
jecxz
fidivs
dec
sbb
ss
adc
xchg
lahf
xor
inc
sub
push
inc
mov
and
subl
sbbl
or
xchg
mov
ret
cmp
rorl
dec
mov
jg
pop
xchg
icebp
pop
nop
mov
test
lahf
pop
sbb
in
jne
outsb
xor
adc
lret
lcall
imulb
mov
sbb
loopne
cmp
je
jle
addr16
cmc
aam
inc
xorl
mov
sbb
icebp
stos
jecxz
xchg
sti
and
rorb
mov
rcrl
pop
sbb
and
movsb
sti
dec
push
pop
add
ss
sti
rol
cli
pop
out
sysret
sub
jg
sub
adc
or
daa
xchg
push
jl
les
enter
jb
xchg
mov
adcb
pop
ja
das
or
into
dec
or
ja
fildl
cmp
sti
xchg
clc
imul
stos
or
mov
adcb
cmp
mov
out
mov
xor
int
aam
cmp
pusha
mov
push
les
adc
pop
mov
movsl
pop
out
in
andl
adc
mov
and
jg
cli
jb
test
xchg
popa
or
xorb
mov
inc
je
add
icebp
repz
out
outsl
je
rorl
cltd
mov
subl
sbb
outsl
xchg
test
jae
in
and
scas
inc
pop
lret
or
push
ljmp
mov
sbb
xor
popf
hlt
xor
lcall
mov
add
test
test
add
cmp
jnp
xor
mov
push
xchg
insb
mov
test
ja
cvtpd2ps
jbe
lret
and
js
arpl
loop
dec
mov
jp
xor
jmp
mov
iret
xor
decl
scas
push
stc
das
xchg
xchg
mov
sbb
pop
int3
jle
cs
fsubrl
inc
shrl
clc
sbb
jne
scas
xchg
sub
dec
adc
and
int3
or
mov
dec
shll
cmp
cltd
es
jb
or
sarb
add
pop
stos
xor
std
jae
fwait
mov
add
lea
fadd
fistpll
jge
fdivs
mov
add
push
fdivrl
imul
stos
adc
add
sub
fistps
inc
lahf
shll
inc
cmp
iret
dec
arpl
sub
int
or
enter
jne
fsubrs
mov
ret
subl
push
inc
das
std
mov
push
sahf
sbb
pop
out
and
push
cld
lcall
insb
pop
or
stos
hlt
outsb
les
das
push
bound
dec
xchg
dec
cld
gs
popa
pop
cmp
sub
fnsave
push
loopne
or
jl
stc
ret
push
shlb
add
fidivl
sti
std
mov
xchg
pusha
sbb
jb
or
popa
out
loopne
mov
pop
push
jle
lcall
into
insb
or
push
ret
fs
push
mov
or
lahf
sbb
xchg
js
loop
pop
adc
ja
sbb
xchg
stos
add
jl
sbb
cmp
xor
dec
lahf
cmp
push
orb
imul
lahf
mov
jns
xor
pop
les
mov
rol
mov
stos
hlt
test
adc
rcr
dec
jle
lods
push
loopne
inc
push
push
xor
cwtl
stos
mov
adc
mov
es
cmpsb
jmp
icebp
push
add
aad
sti
jecxz
mov
push
mov
dec
ret
push
pop
movsb
mov
arpl
xchg
and
orb
push
ffreep
scas
fbld
push
jb
ret
mov
push
cmp
jno
push
or
xor
insb
pop
pop
cmp
ss
mov
mov
out
xchg
add
push
repnz
sbb
adc
aas
sbb
push
int3
inc
jno
jns
je
mov
mov
xor
and
mov
repz
xlat
inc
adc
or
loope
push
out
inc
in
shll
push
iret
or
sbb
dec
mov
in
enter
test
call
jb
lret
aad
jae
xchg
out
adc
mov
jl
fisubs
add
xor
aam
repz
and
pop
cwtl
das
enter
push
inc
lods
and
mov
lock
mov
je
push
inc
or
mov
mul
add
mov
mov
adc
push
mov
nop
stc
push
push
sub
pop
aaa
idivl
insl
and
cmpsb
dec
pop
jne
out
jo
pop
add
xchg
lea
adc
sub
mov
pop
push
enter
imul
rcll
scas
xlat
loopne
dec
mov
stos
arpl
jo
jp
jnp
iret
lret
loope
fstps
jmp
rcrb
and
bound
lods
in
push
inc
sahf
jne
pushf
and
xchg
xor
push
leave
pop
mov
test
cmp
iret
movsb
sub
mov
mov
mov
fnstenv
dec
mov
push
push
fwait
rolb
cmp
xor
pop
imul
and
sarl
int3
pop
adc
push
mov
insl
mov
xchg
fld
sub
loope
dec
jne
fidivrs
mov
push
mov
cmp
cmpsl
and
sub
mov
out
sbb
loopne
or
add
mov
andl
inc
and
mov
xchg
mov
xchg
xor
push
fildll
aaa
sarl
sub
mov
dec
loope
jge
mov
and
mov
movsb
mov
adc
dec
mov
mov
xor
sbb
push
or
inc
xchg
xchg
sub
test
ficoms
mov
jnp
mov
sahf
xor
mov
nop
dec
pusha
pop
mov
fwait
lret
lret
cltd
arpl
call
aaa
mov
sbb
cli
push
jg
das
pop
in
lea
pop
pop
in
xor
outsb
xchg
inc
pushl
sub
cld
xor
cli
sahf
data16
mov
mov
inc
scas
divl
sarb
xchg
mov
fidivl
xlat
jbe
cltd
loope
sbb
sarl
fstl
pusha
push
adc
aas
test
stc
add
jle
push
xor
shrl
xchg
outsl
inc
enter
mov
jb
pop
or
pushf
lret
mov
sbb
aad
jns
cltd
int3
dec
stos
mov
shlb
jns
out
cwtl
mov
sub
dec
fwait
scas
xchg
push
pop
ss
push
lods
xchg
push
xor
sub
mov
and
sahf
add
pop
xor
jns
iret
jg
aam
or
rcrl
push
dec
sbb
testl
and
mov
sub
adc
xchg
pop
icebp
pop
cwtl
cmp
inc
pop
into
dec
jp
stos
ret
mov
shlb
dec
inc
lods
cli
push
jno
lds
jb
pusha
inc
xor
popf
sub
mov
jge
inc
pop
cmpsl
xlat
jecxz
insb
pop
enter
jl
nop
cmp
clc
jge
pop
add
out
das
xlat
mov
xchg
jle
mov
push
inc
xchg
je
add
fnclex
push
cmc
xchg
cmp
imul
test
jg
test
jnp
shll
stos
xlat
inc
xlat
and
into
sahf
out
and
cmp
mov
ljmp
adc
lods
sti
mov
mov
nop
mov
mov
cmpsb
xchg
mov
add
ja
shrb
dec
and
hlt
sahf
xchg
fcmovnbe
adc
in
rcl
jbe
mov
mov
decb
sub
pusha
addr16
push
xorl
cmp
sbb
daa
xchg
and
xchg
and
and
mov
mov
faddl
ret
aaa
mov
bound
pop
lcall
cmp
test
sub
jecxz
mov
mov
lods
mov
andb
cmp
jmp
sub
ljmp
leave
push
adc
lret
pop
pop
enter
jns
jecxz
jge
cmp
aas
das
add
cmpsl
pushf
dec
out
jmp
push
xchg
aad
mov
imul
pop
jmp
sub
scas
mov
aaa
push
repz
mov
pusha
int
lahf
cmpsb
aaa
dec
mov
movsb
lcall
insl
cli
pushf
mov
jmp
ror
loopne
sbb
fnsave
adcb
decl
out
sti
xchg
jmp
mov
sbb
pop
and
sbb
in
jl
mov
ret
xchg
rcll
ror
push
lea
popf
jle
pop
mov
mov
inc
negb
sahf
scas
jp
ds
bound
fists
or
or
cmpsb
je
cmc
cmp
xchg
sbb
or
and
mov
xor
push
jecxz
jp
stos
pop
xchg
or
das
push
push
stos
sarl
mov
std
cmp
cmp
shufps
inc
and
and
mov
mov
mov
xor
pop
dec
push
xlat
ja
imul
fcoml
mov
stc
lcall
insl
in
js
jbe
jb
mov
rcrb
int
dec
jno
das
pop
push
cmp
pop
jb
inc
aaa
pop
mov
mov
gs
addl
int
out
push
out
rcr
call
rorb
aam
cmc
pop
jmp
cmp
fsts
ret
pop
adc
mov
inc
ret
outsl
jo
add
pop
imul
xchg
fwait
outsb
pop
mov
inc
sub
out
outsl
mov
dec
insb
cmp
push
pop
mov
out
jns
std
loop
inc
sbb
mov
adc
popa
jecxz
dec
fnstcw
fxch
lods
test
mov
pop
jge
int3
arpl
out
push
dec
out
inc
cmp
mov
mov
cltd
jp
clc
imul
add
loop
mov
sub
xchg
in
sbb
pop
xchg
lcall
push
xlat
and
or
into
imul
adc
jo
inc
mov
dec
faddl
add
xor
stc
mov
mov
jmp
jnp
pusha
mov
push
shrb
push
arpl
mov
addl
or
sti
sub
jge
sub
loope
cmp
mov
push
shll
or
dec
jne
cmp
or
sahf
rorb
sbb
retw
mov
cli
divb
cwtl
inc
js
ljmp
xchg
sub
jns
shlb
jne
jno
push
jl
pop
insb
into
dec
lea
test
in
mov
inc
xor
icebp
test
mulb
imul
push
jmp
shlb
sbbb
push
loop
idivb
and
mov
cmp
xchg
and
out
insb
sub
push
fdivl
sub
jne
xlat
andl
cmc
imul
ret
xor
lds
mov
outsl
out
sub
imul
lods
fcoms
gs
mov
pop
pop
fldl2t
adc
cmpl
jne
je
add
cs
pop
das
and
mov
mov
leave
fisttpll
stos
addl
mov
mov
cld
loopne
fstpt
mov
fsts
lock
xor
aad
jmp
pusha
xchg
rclb
ret
or
mov
sub
lahf
mov
cwtl
insb
xor
imul
and
in
dec
dec
jne
out
jg
addr16
icebp
scas
cld
lret
xor
fdivs
dec
pop
fidivrl
jb
push
inc
and
push
pushw
mov
jecxz
jne
mov
shlb
jge
pushf
xchg
pushl
add
mov
push
xchg
in
pop
popf
sahf
and
incb
mov
shrl
call
sub
cmpsl
ljmp
lock
or
repnz
call
out
or
or
jns
lods
ljmp
test
and
les
test
test
mov
jbe
jmp
xor
cmp
aam
ja
mov
add
mov
and
xlat
or
adc
push
in
roll
aam
push
xchg
dec
sub
fwait
sub
pop
or
push
or
sarb
fnstsw
or
pop
cmp
xchg
or
and
add
data16
mov
xor
fwait
jmp
rcrl
mov
push
xor
push
shll
int3
ret
sbb
pop
sub
mov
jne
sahf
mov
inc
dec
mov
sub
movsl
jmp
rorl
sbb
inc
fs
mov
push
mov
jbe
mov
es
movsb
sbb
repz
and
xchg
dec
mov
jecxz
shl
pop
out
cltd
mov
jp
mov
ja
mov
fs
icebp
mov
data16
xchg
cmpsl
xchg
xchg
ror
push
mov
sbb
jle
sub
push
adc
xor
xchg
addr16
or
psubusb
or
insb
loopne
adc
jp
xchg
lock
jo
daa
mov
add
rolb
pop
push
xor
pushf
mov
data16
pop
clc
jge
stos
jecxz
jg
dec
mov
push
cmpsl
imull
inc
dec
sub
jg
sub
ret
xor
push
xchg
js
lahf
fsubs
mov
xchg
xchg
xor
add
das
sub
push
mov
ret
ret
rolb
inc
or
les
adc
les
shrb
cld
movl
out
hlt
les
cmp
cmp
mov
stos
aaa
and
sar
mov
and
jo
dec
cmc
clc
subb
mov
mov
and
cld
mov
sarb
nop
cld
jo
pop
das
cmp
test
add
popa
cmpsb
cmp
test
or
sub
inc
mov
popa
std
pop
bound
lods
ljmp
cmp
repnz
sbb
rorl
jg
sbb
pushf
and
inc
fdivl
sahf
jne
push
and
dec
pusha
rorb
pop
ret
add
push
cmp
inc
adc
fs
xorb
push
sbb
loop
gs
out
xor
jae
ret
push
pop
dec
in
hlt
cmpsl
push
test
xor
dec
adc
push
les
popf
cmp
gs
js
push
adc
jmp
push
lret
jecxz
mov
pop
xor
lret
mov
daa
jmp
mov
jmp
jp
mov
aaa
lods
je
les
test
pop
mov
fs
movsl
xchg
dec
mov
mov
jge
or
push
fwait
lcall
push
scas
pop
mov
mov
add
sbb
jno
mov
pop
in
filds
mov
addb
cs
mov
xor
cli
mov
dec
std
xchg
push
pop
pop
pop
mov
ljmp
sarb
dec
ja
lcall
popf
js
mov
subl
gs
in
dec
lret
stos
push
ss
push
nop
neg
pop
into
js
cmp
fwait
mov
hlt
or
leave
mov
jle
pop
mov
mov
xchg
repnz
inc
xor
es
sub
repnz
iret
mov
add
clc
gs
lds
leave
cmp
and
cmp
in
sti
out
adc
pop
hlt
jmp
pushf
rcl
jns
adc
and
pop
stos
int3
adc
pop
das
repz
xor
or
arpl
jg
push
pop
push
rcrb
jae
mov
push
fwait
pusha
and
jl
out
pop
rclb
push
mov
xchg
sub
aad
mov
icebp
rcl
std
in
sahf
fidivrl
sbbb
imul
lret
jmp
adc
test
mov
adc
pop
jp
imul
incb
cs
xorb
cmpsl
popf
daa
xchg
lods
int3
fsubs
xor
mov
movsb
sbbl
pusha
repz
lret
lds
insl
dec
push
pusha
shrb
xor
movsb
inc
ljmp
fstpt
loopne
sahf
jne
mov
mov
test
push
sub
xchg
outsb
scas
jnp
data16
nop
mov
rorb
mov
push
adc
leave
movsb
inc
mov
mov
sarl
jae
cmpsl
pop
xor
xchg
or
hlt
hlt
shlb
into
add
inc
and
sub
fwait
pushf
data16
jae
sbb
cmp
insb
fisubl
fsts
jnp
in
xchg
add
in
xchg
jmp
js
sbb
jae
roll
jae
loope
jmp
mov
sub
xchg
xchg
ljmp
jo
test
mov
fsubrl
and
pusha
repz
mov
out
sbb
mov
add
and
dec
repz
pop
mov
movsl
mov
jmp
or
sbb
or
mov
in
pop
scas
jge
lock
or
inc
mov
fadds
insl
pop
jp
mov
ds
pop
pop
cli
call
jl
rcrl
jae
in
jb
jl
jmp
mov
movl
mov
sbb
pop
es
in
sbb
sbb
or
ret
mov
and
ret
scas
pop
int
cmp
imul
mov
push
ror
nop
pop
adc
xor
and
out
repnz
adc
and
xchg
call
loopne
cmp
mov
pop
pop
xor
test
add
inc
roll
jp
mul
dec
dec
sbb
and
push
ljmp
dec
add
mov
sti
ret
mov
jle
hlt
jne
xchg
adc
lods
lahf
inc
rorl
inc
in
inc
dec
xchg
inc
sub
imul
jo
mov
pop
cltd
rcrb
outsl
inc
bound
mov
lods
xchg
jo
sub
sub
lods
outsl
fsubrs
jp
addr16
addr16
jmp
push
mov
xchg
loope
push
push
lret
pop
lock
cmc
sbb
push
in
inc
pop
adcb
xor
jge
jo
sbb
jmp
stos
aam
xchg
jno
lret
mov
insl
fwait
mov
pop
xor
test
fcom
pop
mov
popa
fwait
push
push
ja
leave
mov
fbld
fldenv
shll
lods
or
dec
inc
adcb
lret
mov
in
adc
cltd
ja
mov
out
mov
les
mov
xchg
push
mov
nop
mov
mov
lods
cmp
aam
loopne
and
into
jnp
pushf
inc
sub
hlt
dec
and
loop
fbstp
stos
inc
mov
nop
stos
mov
cmp
dec
cmc
mov
sub
outsb
fstpt
mov
loop
mov
repz
pop
adc
dec
cmp
test
js
clc
mov
out
adc
enter
inc
or
add
rolb
call
jbe
push
xchg
pop
and
pop
call
push
icebp
xor
mov
jecxz
cmpsl
ds
push
insl
testl
sbb
push
int
jno
or
mov
frstor
sub
xchg
fsubr
les
loopne
xchg
and
cmpsl
sub
lahf
in
cbtw
mov
or
xchg
test
jmp
pop
inc
loopne
and
pop
xlat
push
mov
pusha
adc
call
dec
adc
shrl
adc
aam
jae
loope
push
out
or
cmpsl
incl
call
fstps
test
aad
pop
xor
flds
dec
xor
mov
or
test
sar
popa
push
orl
clc
mov
dec
cmc
and
adc
jnp
js
addl
jmp
jae
add
mov
jbe
add
mov
jb
push
stc
cmp
jns
dec
dec
mov
or
mov
and
adc
clc
inc
loopne
add
xchg
jo
mov
insl
aam
sub
push
xchg
mov
call
adc
shrb
addb
out
sub
jb
push
xchg
aam
push
fs
sahf
push
test
sti
sub
xchg
push
addr16
ss
stos
fisubs
push
lcall
jo
lret
mov
mov
push
cmp
mov
sub
cltd
jge
xchg
pop
xorl
lcall
add
pusha
ljmp
adc
insb
loope
xor
ret
push
add
sbb
sbb
repnz
sub
bound
inc
mov
pushf
daa
out
cmpl
push
lea
ds
into
xor
aad
mov
arpl
and
pop
sub
add
cmp
shll
das
mov
je
dec
mov
pop
cmp
mov
mov
sub
mov
fistl
adc
mov
popa
mov
or
lret
cmp
push
lock
xor
dec
inc
add
outsb
sub
sbb
dec
loop
loop
or
imull
lahf
rcl
mov
sub
inc
test
jnp
mov
cmpsb
dec
aad
nop
or
adc
xchg
push
mov
fiaddl
pop
xor
je
mov
dec
or
and
inc
and
mov
sbb
sahf
sbb
in
sub
cmpsl
mov
fstpt
xchg
lods
enter
xchg
repz
les
mov
dec
jmp
lds
std
push
push
pop
xchg
push
jp
in
insb
loopne
or
pop
ret
mov
xchg
call
in
pop
call
cmp
mov
iret
mov
mov
les
cwtl
cmp
test
sub
pushl
pushf
dec
xchg
and
jno
push
xchg
clc
xchg
xchg
pop
pop
or
test
or
popf
movsb
sbb
jle
sti
call
dec
mov
lret
mov
push
test
xchg
pushf
imul
daa
ret
fwait
xchg
sbb
pop
inc
stc
push
ds
sub
pusha
fs
push
mov
loope
push
xlat
repz
pop
push
add
jae
dec
mov
mov
cmc
cmc
negl
out
add
or
nop
xchg
in
nop
adc
jnp
sahf
in
adc
insl
movsb
and
into
adc
dec
out
int3
out
adc
pushf
rcl
out
outsb
mov
test
data16
push
clc
mov
sbb
ss
jmp
ljmp
jae
push
addr16
daa
xchg
je
lahf
in
xchg
mov
push
sub
adc
adc
dec
xchg
mov
shrb
fsub
push
sub
js
test
out
dec
mov
push
sbb
popf
pop
test
pop
pop
pushf
bnd
dec
cld
popf
shr
jne
pop
lock
pop
lret
sbb
cmp
mov
inc
xor
jmp
jg
scas
mov
iret
dec
mov
push
add
stos
inc
mov
loope
pop
std
std
xor
pop
js
mov
out
jl
pusha
pop
sbb
popa
cwtl
cmp
mov
test
stos
pop
mov
test
idivl
sti
nop
scas
mov
mov
inc
mov
sub
cmp
rorl
sub
pop
lea
mov
scas
lret
xorb
inc
andl
mov
and
and
clc
std
fisubrs
xor
dec
cmp
xchg
add
sti
mov
mov
adc
lods
out
dec
fisttps
in
insl
nop
xchg
sti
mov
sbbb
mov
xor
cmp
rol
xorl
add
cld
xchg
andb
jbe
adc
xor
fsubl
pusha
lcall
inc
ficoml
adc
pop
cmp
cmp
xchg
and
push
rclb
inc
sub
repz
xor
cmp
jmp
and
shl
adcl
xchg
int3
pop
jmp
outsl
xor
ret
mov
notb
test
sbb
mov
push
out
sub
jle
jno
test
int
sarb
pop
mov
adc
stos
test
clc
mov
scas
pop
xchg
jne
fimull
lret
fsubrl
xchg
sbb
jo
adc
arpl
mov
ret
je
icebp
nop
push
movsb
inc
scas
mov
and
push
jge
outsl
ficoms
push
pop
jl
stos
xor
and
and
rolb
ds
add
mov
push
add
push
repz
fsts
sub
mov
jmp
in
fabs
adc
xchg
dec
push
push
lcall
stc
ss
daa
push
jb
lret
out
adc
mov
movsl
push
and
mov
and
jg
lcall
pop
xor
xorb
je
mov
jmp
jno
jb
ret
sbb
xor
push
je
xchg
pushf
mov
push
gs
imul
dec
inc
dec
inc
and
push
test
clc
or
adc
sbb
fcoms
test
jmp
dec
in
mov
mov
test
dec
filds
das
mov
lahf
dec
jb
hlt
mov
or
jl
jl
xor
in
xchg
dec
adc
sbb
in
or
jno
imul
sbb
adc
mov
fcompl
es
pusha
jne
pop
dec
je
and
call
shrl
fadds
inc
sub
and
dec
push
mov
daa
mov
movsl
in
dec
inc
inc
shll
xor
dec
dec
fs
sti
fistpll
inc
mov
jl
dec
pop
mov
sbb
lods
dec
mov
sub
pop
cmp
add
jbe
xlat
fstpl
mov
push
mov
xor
mov
mov
push
ljmp
mov
and
lock
inc
mov
mov
cmp
push
xlat
sbb
xchg
insl
jo
cmp
lods
pop
sub
or
fdivs
inc
loop
mov
stos
cmp
es
movl
mov
cmpsb
andb
jae
je
scas
dec
cmpsl
cmp
inc
ja
orl
dec
jle
icebp
jp
and
xchg
push
add
test
and
cltd
call
and
es
push
testl
ret
dec
cld
mov
xchg
sub
rorl
xor
rolb
psubusb
lds
push
dec
push
inc
jne
xor
test
test
out
xchg
mov
pop
pop
or
xchg
xchg
imul
popf
xor
aas
cmp
loopne
push
test
rcrl
popf
in
fprem
xchg
jp
jb
mov
adc
cmp
cmc
shl
jns
mov
xor
std
xchg
push
mov
andl
dec
pop
adc
sub
mov
insb
repnz
in
test
push
ficompl
mov
loop
add
inc
jbe
hlt
loopne
in
push
adc
inc
int
sbb
add
sbb
jnp
add
mov
inc
cmp
sbbb
sub
jg
cwtl
adc
rolb
dec
mov
mov
test
add
pop
xor
inc
fstpl
add
mov
test
cltd
cmp
test
testb
fcomps
jne
inc
mov
jns
and
sub
movsl
adc
sbb
adc
and
adc
xor
out
sbb
jne
push
aam
scas
pop
cmp
adc
jmpw
xor
addb
cmpsb
cmp
and
or
sbb
stc
enter
pop
dec
xchg
jne
dec
rcrb
pop
pop
lcall
imul
iret
addr16
cld
in
xor
add
in
lock
inc
ret
xchg
nop
or
mov
lret
repnz
push
inc
cmp
aam
mov
push
das
cwtl
jnp
xor
push
dec
ja
popa
es
pop
and
subb
xchg
ljmp
cmp
ficoms
mov
dec
dec
push
std
mov
push
dec
push
cmp
outsb
cli
popf
aam
insb
pop
aam
gs
jecxz
jle
mov
add
int3
mov
mov
add
jbe
jo
mov
arpl
or
int
dec
adc
push
popa
dec
imul
ret
flds
sbbb
mov
leave
aaa
in
jle
pcmpeqw
inc
dec
dec
mov
lret
push
scas
in
cmp
shl
bound
stos
ret
popf
call
mov
dec
std
rorb
aad
cmp
mov
jne
ljmp
repz
and
mov
mov
pop
inc
enter
enter
pushfw
movsl
insl
mov
loope
or
aas
loope
mov
pop
cmp
add
imul
outsb
scas
cwtl
cmp
cmpsl
loopne
push
vmwrite
jl
push
outsb
out
inc
icebp
mov
dec
jae
ljmp
pop
rcr
cs
lock
push
push
xor
cmpsb
xchg
sarb
jl
movsb
jbe
loopne
clc
jbe
lods
sbb
into
les
mov
repnz
cli
lock
call
xchg
xor
out
mov
mov
inc
cltd
push
sti
scas
push
mov
mov
xchg
mov
negl
or
fldl
mov
stc
lods
xsavec
jno
lods
pop
test
push
push
pop
addl
xchg
lret
jmp
push
add
loopne
icebp
or
xlat
cltd
adc
xchg
outsl
xchg
and
xor
jns
jae
aad
aas
cmp
xor
jnp
push
in
and
cwtl
xor
and
or
push
mov
scas
addl
xchg
int
jge
int
jmp
test
mov
js
test
xchg
cltd
ss
fnstsw
cmp
mov
ret
into
cltd
aas
cmp
sub
out
mov
pop
inc
cwtl
test
loope
cs
shll
cli
imul
cli
xlat
add
bound
testl
cmp
test
push
mov
push
or
jmp
shl
lcall
mov
sub
imul
clc
aam
arpl
sbbl
mov
ret
push
inc
mov
xchg
mov
call
lods
daa
shrl
jnp
cmpsl
stos
jge
or
jns
inc
mov
xchg
stc
push
cmp
xadd
mov
stos
xor
clc
or
or
test
stos
fsubrs
sub
xor
cmpb
inc
inc
xor
cmp
repz
in
and
pop
mov
or
push
imul
rclb
loope
and
mov
inc
rdmsr
and
lret
jmp
or
sub
fistps
dec
data16
sbb
aas
xchg
sub
adc
push
cltd
push
in
dec
cmp
pusha
test
xor
fucom
int
pop
inc
jnp
das
inc
push
icebp
and
pop
fldt
cmp
inc
cmp
sbb
shll
mov
xchg
pushfw
mov
pushf
sub
xchg
iret
and
repnz
imul
loop
fdivs
stc
rcrl
jecxz
jbe
jmp
pop
lahf
cmp
js
dec
in
mov
insb
push
adc
push
lds
pop
xor
pop
pusha
or
popf
push
fsubp
push
mov
xchg
rolb
jnp
sti
jle
enter
pop
pop
xor
xchg
adc
fldcw
dec
sahf
sub
cmp
movl
idivl
ss
shll
or
fwait
sbb
loop
lcall
add
test
add
loope
popf
sub
test
stos
xchg
fcomps
jb
and
xchg
pop
fildl
iret
push
jbe
xchg
jnp
stc
cmp
cmpsl
adc
and
movsl
cld
mov
cmp
xchg
gs
addr16
out
mov
mov
cmpsb
mov
arpl
inc
lods
push
push
pop
mov
or
test
std
jmp
adc
adc
mov
adc
loopne
pop
cwtl
scas
xor
iret
js
inc
and
test
cld
out
pop
sub
adcb
push
out
inc
daa
xor
dec
push
pop
std
stos
verr
leave
ja
lea
jae
mov
rep
cmp
pop
or
ret
fcomps
out
adc
xlat
xchg
lret
xor
cmpb
dec
jge
enter
add
ret
imul
xchg
sti
mov
aaa
test
mov
mov
xor
mov
iret
xchg
jge
mov
scas
xchg
dec
inc
mov
sbb
mov
lods
mov
xlat
mov
outsl
pop
aad
sahf
out
xchg
lock
add
add
cmpsl
lcall
or
lcall
pop
jecxz
add
sbb
decb
and
pop
js
push
sbb
jmp
dec
dec
mov
ss
push
leave
int3
jb
imul
dec
pusha
inc
xchg
cmp
mov
test
clc
add
mov
push
jecxz
inc
and
mov
out
pop
imul
push
pop
sub
div
imul
xchg
jne
cmp
cmp
out
test
or
mov
aad
sub
cmpsb
mov
mov
dec
cmpsb
push
cmp
and
repnz
pop
loopne
cmpsl
cmp
mov
mov
lret
scas
or
clc
xchg
aad
add
lret
pop
cmpsl
movsl
lods
push
lds
or
aas
xchg
test
hlt
lds
stos
mov
popf
jnp
arpl
adc
dec
xor
test
out
shll
pop
int3
ror
repz
push
jbe
push
in
das
lcall
cmp
dec
sbb
xor
fnsave
repz
mov
popl
xlat
mov
leave
ffreep
xchg
pop
mov
sub
inc
int3
icebp
sbb
cli
ss
fstenv
mov
lods
sub
mov
pushf
mov
fidivl
mov
stos
sub
jo
mov
mov
xchg
mov
mov
rcl
inc
mov
jae
jne
xchg
and
cmpsl
pop
mov
out
ds
dec
mov
cmp
fsubs
inc
cwtl
sub
and
pop
xchg
inc
sub
and
and
leave
aas
adc
repz
sbb
mov
outsb
mov
sbb
pushf
rorb
rclb
xchg
xchg
popa
and
and
sbb
xchg
inc
jne
sbb
setbe
and
sbb
mov
cs
and
xchg
movsb
movsl
call
out
ljmp
cmp
das
inc
add
sbb
clc
scas
sarl
xchg
add
or
pop
adc
fwait
leave
loopne
call
xchg
icebp
cmc
mov
call
stos
adc
fcomps
je
xorb
in
lock
cld
enter
mov
inc
cld
enter
mov
js
inc
andl
pop
imul
lds
insl
adc
sub
in
stos
loopne
out
clc
call
negb
shl
pop
mov
jle
mov
orps
mov
iret
adc
mov
mov
mov
push
jbe
xlat
stc
addr16
int3
mov
cwtl
mov
cmp
push
ror
in
cmp
mov
lcall
test
iret
pusha
rclb
dec
mov
pop
pop
inc
cli
add
in
loope
jge
pop
fmull
js
mov
leave
adc
dec
loop
hlt
and
jb
jg
push
dec
fimuls
cmp
xor
loope
idiv
push
lds
sub
add
jno
sbb
inc
clc
xchg
xor
cmp
insl
in
shrl
and
xchg
jnp
push
fcompl
out
sar
enter
xchg
sbb
lret
lcall
and
dec
roll
mov
jb
mov
ficomps
mov
mov
ret
cwtl
cmp
cmp
insl
cli
cld
jae
pop
gs
aam
in
jns
mov
adc
scas
lds
daa
sbb
mov
cmp
call
dec
sbb
fdivs
sbb
jb
pop
idivl
mov
lcall
aas
add
xor
lock
adc
xchg
loope
jg
rclb
mov
dec
sahf
dec
adc
das
cwtl
out
lret
cmp
mov
notl
adc
push
xor
call
adcb
mov
push
or
stc
lcall
xchg
cmp
mov
pop
sarl
mov
push
or
dec
std
add
dec
fisttpl
sub
xor
loop
sbb
test
or
jl
xchg
or
xorl
add
ss
dec
enter
mov
in
dec
xchg
push
dec
or
mov
jbe
jmp
fimull
aad
push
dec
push
xchg
sbb
loope
ret
cmpsb
popa
js
clc
pop
xchg
jmp
mov
aaa
aas
lock
cmp
inc
xlat
push
icebp
or
pop
sub
fs
xchg
std
and
xchg
test
mov
add
imul
lock
out
popa
xor
jg
out
mov
or
mov
ret
outsb
iret
shll
cmp
stos
movsb
mov
orb
jbe
adc
cmp
mov
mov
loop
jge
js
cmpb
int
iret
inc
push
ror
inc
out
adc
int3
add
dec
insb
pop
cmp
pop
inc
rcrl
fisubs
pop
faddl
mov
mov
ja
insl
cmp
repnz
and
nop
insb
incb
xchg
xor
jne
add
mov
fs
lret
push
adc
jmp
test
bound
lds
lretw
xchg
push
insl
std
fwait
dec
daa
loope
jae
jbe
ss
mov
shlb
pop
inc
cmpsl
dec
pop
sbb
scas
pop
jb
sub
popa
adc
add
push
sub
pop
int3
sbbb
mov
or
and
xor
dec
test
fadd
jge
mov
add
xor
add
popa
xchg
mov
sahf
test
push
stos
int3
in
pop
or
inc
mov
push
and
adc
in
lea
scas
mov
pop
sbb
decl
pop
sub
cltd
add
xorl
fistps
xlat
lret
pop
lret
inc
mov
aas
addl
xor
jle
adc
cwtl
pop
shll
jecxz
es
sbb
cmp
es
pushf
adc
pmulhuw
aas
inc
dec
cmp
push
js
and
addr16
and
js
jae
and
jle
repnz
pop
and
ja
pusha
adc
les
sbb
jno
xchg
jbe
call
les
out
fs
push
jmp
dec
push
mov
movsl
xor
dec
call
pop
pop
xchg
fstps
rcrl
jne
jge
insb
ret
andl
jg
xchg
jp
in
ljmp
jno
push
gs
in
sub
mov
cmc
jne
js
mull
jecxz
jne
mov
jge
lret
adc
jbe
pop
popf
and
or
xchg
and
popa
dec
sbb
out
or
scas
cmp
stos
pop
mov
cmp
and
aas
xor
push
sahf
outsb
fdivs
xor
fprem
jnp
pop
add
jnp
ficoml
pusha
in
aaa
aad
sbb
out
fidivrl
and
test
int3
mov
int3
ret
lea
mov
push
imul
push
das
and
add
fcompl
ja
inc
pop
or
cmp
cld
sbbl
pop
push
push
lock
jp
jno
insl
push
cmc
or
xchg
sbb
insl
push
cmp
mov
dec
lock
daa
pop
insl
cltd
addr16
inc
enter
jbe
push
cmp
push
adc
test
dec
enter
rcl
jp
mov
nop
mov
roll
out
into
jbe
sub
or
xchg
arpl
ja
sub
xchg
outsb
sahf
adc
ljmp
stos
cltd
xchg
pop
hlt
add
stos
mov
xor
ret
push
cltd
shll
rol
fs
sub
fs
sar
mov
xor
push
push
adc
repz
mov
adc
jmp
inc
in
jns
push
pop
pop
loop
mov
or
popf
xchg
add
cltd
in
push
sub
test
call
cmpsb
push
add
mov
mov
int
sahf
sbb
in
test
into
xchg
bound
push
xchg
sbb
pop
arpl
std
jmp
mov
jo
aas
jp
pusha
sarl
mov
cmovne
shrb
or
enter
fwait
mov
mov
es
pop
mov
jne
scas
mov
js
orb
mov
jl
in
or
addl
lret
es
test
test
std
jecxz
adc
inc
and
push
xchg
test
iret
push
push
rolb
jae
imul
mov
test
pop
mov
rcl
rcr
xor
xor
or
loop
jecxz
mov
daa
mov
jbe
or
push
inc
out
sbb
les
sub
imul
sbb
adc
mov
push
fwait
into
outsb
mov
mov
es
leave
sbb
cwtl
inc
jmp
dec
popa
adc
fstps
stos
xchg
or
orb
jg
test
xchg
or
repz
fcoml
movsl
inc
or
call
ss
je
aam
sahf
or
shrb
les
arpl
repnz
in
insb
cmpl
iret
enter
mov
jge
icebp
hlt
xorb
pop
xlat
sbb
push
aas
negl
mov
adc
ljmp
jle
push
ret
inc
jle
inc
repnz
pop
push
loopne
lods
inc
arpl
not
dec
gs
xchg
divl
jns
adc
shlb
or
mov
in
es
iret
xor
cmp
ja
lahf
insl
test
xchg
xchg
mov
fisubrl
insb
aam
mov
or
xchg
jbe
int
mov
dec
je
push
mov
or
lods
cmp
clc
mov
test
sbb
cmp
int
and
xchg
mov
out
sbb
inc
push
or
fmul
fimuls
pop
adc
nop
adc
addl
aam
push
leave
jnp
xor
push
into
iret
cmp
push
xchg
cs
daa
aad
sub
cmpsl
lea
decb
ja
sbbl
and
clc
inc
icebp
and
sahf
fst
mov
mov
inc
and
xor
daa
mov
jp
push
cmpl
lea
mov
sbb
cwtl
xchg
xchg
movsl
icebp
mov
mov
jge
mov
out
jnp
stos
iret
mov
sbb
xlat
push
imul
pop
in
das
jecxz
aaa
add
jp
in
sahf
push
mov
mov
push
cmpsl
icebp
xor
mov
add
popa
jle
mov
mov
inc
rclb
inc
xchg
ret
bound
and
js
xlat
jb
xchg
jo
test
cmp
xor
jge
mov
dec
xor
xchg
aaa
scas
mov
dec
push
repz
test
inc
adc
pop
fbstp
dec
dec
imulb
iret
nop
mov
lahf
sub
mov
xchg
je
cmp
insb
mov
mov
and
sti
push
xchg
jae
jnp
stos
sub
orl
add
pop
mov
mov
jb
mov
out
xchg
push
test
je
push
jmp
loop
mov
mov
adc
cli
and
inc
pop
dec
cmp
jne
ljmp
mov
cwtl
cmp
jle
cwtl
mov
push
cmc
lods
sbb
xorl
and
push
dec
outsl
xchg
sub
imul
lods
mov
jecxz
out
jmp
and
or
add
fists
xchg
insl
aam
inc
sarb
xchg
jp
fbstp
fdivr
popf
sti
daa
ror
sub
ret
lods
or
imul
cld
push
or
and
das
sti
mov
ret
lahf
ja
or
insl
addb
adc
and
fistps
dec
adc
fistps
or
cmp
lcall
pusha
xchg
test
sub
push
rolb
mov
call
call
push
mov
xchg
sti
dec
cmp
inc
in
popf
fcomps
and
bound
ljmp
and
sub
mov
cltd
mov
xor
xchg
cmp
xchg
fsubrl
pop
aam
inc
add
aas
xchg
arpl
mull
xor
test
and
push
cli
cmp
xor
pushf
test
sub
or
ljmp
mov
pushf
mov
insl
data16
std
call
push
cmp
insb
jg
sbb
xchg
push
in
push
std
push
enter
or
push
cwtl
sbb
xor
sub
dec
or
dec
xchg
mov
not
outsl
aam
sti
push
outsl
adc
test
or
pop
add
dec
dec
push
mov
add
fs
mov
mov
sahf
xor
cld
ljmp
push
mov
jo,pn
pop
pop
pop
mov
iret
fbld
and
xchg
dec
js
dec
mov
or
sbb
lret
pop
mov
mov
sub
and
clc
movsb
cmpsl
ja
jb
and
out
push
push
mov
inc
sbb
out
pop
xor
push
setne
fs
ficoml
mov
sti
sbb
mov
jnp
pop
lds
push
outsb
pop
sbb
mov
orl
push
jl
loopne
add
jo
in
je
scas
pop
xlat
pop
push
pop
mov
andb
jo
scas
test
cli
pop
pushf
jle
fs
dec
stos
cmc
icebp
push
dec
hlt
adcl
cld
push
jmp
push
inc
inc
mov
push
sbb
lret
add
adc
mov
sbb
inc
push
insl
lock
fdivs
lock
xor
cmp
and
jmp
pop
call
sub
pop
fidivrl
std
push
les
push
mov
int3
in
xchg
mov
mov
jge
loop
xchg
into
add
add
cmpsl
push
mov
mov
movsb
int
fdivr
in
aam
xor
sbb
and
adc
lret
in
pinsrw
or
ss
movsb
std
xchg
bound
dec
testl
roll
push
ss
cltd
add
xchg
inc
pop
call
dec
add
xor
sbb
xlat
pop
pop
nop
ljmp
pop
add
mov
pop
mov
leave
pop
sbb
andl
cld
push
sub
mov
mov
mov
or
pusha
mov
mov
cmp
cmp
mov
or
rcrl
cltd
cli
arpl
push
sbb
test
dec
lds
mov
mov
push
push
pop
iret
dec
popf
mov
or
cmpsl
aas
and
sbb
mov
cs
pusha
add
dec
or
bound
add
insb
cmp
add
or
adc
stc
pop
jae
adc
inc
mov
mov
aam
add
jae
dec
sbb
test
mov
and
bound
sub
or
mov
pop
mov
loopne
test
mov
cld
push
rcrl
sbbl
xchg
mov
xchg
cwtl
mov
add
lret
test
das
mov
push
pushf
cmp
xchg
jnp,pt
xchg
or
pop
sub
add
loopne
pop
std
jb
scas
in
rol
sub
mov
imul
push
or
mov
stos
cmp
xchg
jb
xor
test
xchg
rcrb
mov
mov
out
loop
outsb
adc
dec
pop
stc
or
jp
jo
push
nop
dec
cli
daa
test
stos
mov
mov
push
xor
xchg
mov
push
pop
add
xor
mov
movsl
jnp
lahf
das
scas
sub
cltd
sbb
sub
mov
dec
les
loop
out
in
rcr
jecxz
dec
xchg
les
jne
push
out
daa
jl
pushf
scas
mov
repz
jo
add
inc
repz
sbb
ljmp
fs
push
nop
mov
dec
loop
jl
pop
lahf
mov
pop
and
addr16
dec
cmp
jl
mov
sbb
fidivl
mov
and
mov
lock
pushf
pop
inc
mov
hlt
stos
lock
je
push
cmp
cwtl
out
or
nop
pop
jge
cmp
leave
ficoms
decb
pusha
insl
fisubl
lahf
mov
mov
inc
jae
adc
shl
jg
fistl
ret
lock
push
cld
ss
outsl
movsl
jbe
mov
cltd
adc
call
xchg
pop
sbb
in
pop
jo
add
ljmp
mov
mov
mov
lods
int3
and
xchg
and
add
sarb
sbb
ja
das
dec
push
lahf
jae
movsb
cwtl
gs
faddl
sbb
mov
add
sti
and
shr
cwtl
pop
movsl
or
rcll
rorl
pop
push
cmpsb
in
cli
test
adc
daa
scas
inc
pop
dec
pop
xor
jnp
aaa
xchg
or
pop
or
inc
jmp
fcompl
pop
mov
pop
lea
jae
push
loop
cmp
dec
adc
rcll
inc
jge
mov
into
xor
push
in
stc
adc
mov
inc
push
inc
jb
addb
xchg
mov
cmp
aad
push
mov
iret
sbbl
dec
bound
cmpsl
rcll
adc
add
push
outsb
add
mov
push
xchg
xchg
aaa
cltd
les
js
lds
xor
add
mov
sbb
loopne
addb
push
cmp
les
jo
jnp
push
cmpsl
divb
cmp
sub
ljmp
pop
lret
popf
add
pop
xchg
cmp
jg
clc
inc
or
ds
je
aas
leave
int3
push
push
nop
push
cltd
cmpsb
in
pushf
and
flds
xor
and
xor
mov
jl
pop
aad
cmp
push
daa
pop
ss
imul
icebp
cli
inc
mov
stc
ret
fidivl
cld
mov
int3
std
cmpsl
add
movsb
fwait
mov
lret
imul
inc
sbb
imul
out
add
rcr
iret
adcb
int3
stos
push
insl
pushf
stos
cmp
jecxz
out
sub
push
stos
lahf
dec
sti
mov
aad
sub
les
por
pop
je
andl
arpl
shl
inc
and
mov
call
addr16
pop
ds
mov
in
in
mov
mov
gs
jecxz
push
push
cmp
mov
insb
lahf
push
and
mov
mov
cmpsb
add
dec
mov
into
push
and
mov
insb
test
loope
and
pop
in
xlat
xor
xor
dec
cwtl
ret
and
pop
out
js
popf
push
loope
jns
jno
cli
xorb
ret
jns
adc
jae
mov
jnp
pop
inc
inc
fcoml
mov
mov
sti
push
push
and
add
dec
lret
xchg
jp
test
std
lret
xchg
cld
lcall
and
or
inc
push
and
sbb
jnp
stos
or
xchg
loope
adc
jg
jle
scas
or
add
addb
add
pushf
pop
xor
pop
nop
xor
lock
testb
stos
inc
fnstenv
cmpsb
andb
sbb
push
rcl
xor
rdmsr
push
mov
fidivrs
cmpsl
lods
gs
sbb
fs
cmp
test
out
dec
les
lods
xchg
lods
mov
std
or
mov
out
aam
ja
movsb
push
push
xchg
xor
into
in
mov
jb
ss
in
push
daa
bound
cmp
pop
cli
mov
lock
adc
movsb
push
ljmp
mov
stos
mov
jae
dec
jp
mov
cwtl
lods
mov
mov
adc
mov
notb
push
inc
push
and
addb
sub
dec
data16
jecxz
mov
mov
jecxz
jno
pop
orb
icebp
push
ds
in
inc
jns
push
into
cwtl
mov
sub
out
adc
hlt
mov
lds
dec
pop
or
jne
stos
int3
iret
and
test
stos
add
adc
and
adc
xchg
cmp
adc
or
cmp
shll
dec
push
and
testl
jmp
cmc
jb
cwtl
test
adc
pop
sub
push
sbb
mov
fstp
xchg
mov
mov
pop
in
ret
fadds
daa
adc
fcmovb
sub
jne
cmp
adc
push
into
dec
sbb
lods
insl
test
pushaw
sbb
out
inc
leave
jecxz
movsl
idivb
mov
ljmp
sahf
insb
pop
cwtl
push
lcall
dec
xor
inc
cmp
dec
mov
xchg
scas
enter
lds
sbb
mov
std
icebp
icebp
inc
xor
arpl
cmc
dec
sbb
xchg
aam
cmp
stc
xchg
les
and
dec
out
sbb
mov
push
repnz
gs
lret
aad
nop
or
rolb
jno
test
insb
jbe
addl
divb
es
mov
cmp
stc
push
dec
push
mov
pop
jae
push
popa
dec
and
rol
pop
imul
in
cwtl
sbb
orl
inc
lret
nop
xor
sbb
out
mulb
inc
lea
adc
or
inc
rolb
jb
popa
pop
jnp
push
lods
adc
mov
dec
or
daa
daa
addr16
pop
inc
pop
pop
sbb
adc
mov
and
adc
cwtl
push
push
jbe
in
or
sbb
imul
jnp
popf
mov
int3
jo
inc
imul
mov
mov
movl
xchg
add
adc
movsb
dec
mov
dec
xacquire
stc
loope
push
push
push
add
outsl
fistpl
dec
and
push
push
sub
add
lcall
mov
cmp
xchg
mov
andl
lret
aas
lock
xchg
loop
jo,pt
test
xlat
ret
les
push
cmp
jp
fdivl
fisttpll
scas
fsubrp
sub
mov
sub
jo
xor
sub
out
and
lahf
and
dec
loop
scas
ret
jl
xor
movsb
sub
mov
push
std
sub
rorl
addr16
jne
mov
add
sbb
jecxz
ss
push
xor
enter
mov
or
cld
lds
out
lcall
mov
das
push
sub
and
push
sub
mov
mov
jge
mov
push
dec
fcoml
push
iret
andb
xor
iret
clc
push
adc
adc
push
pop
aas
fnstcw
daa
call
fistl
rcr
scas
rcll
cmpsl
jne
in
xor
ret
dec
push
pop
ljmp
fwait
cli
inc
adc
scas
testb
in
fs
lret
aad
aas
repz
pusha
outsl
les
mov
inc
add
aam
or
int
or
mov
and
xchg
cltd
cmpb
lret
pop
pop
sub
out
icebp
mov
push
lds
repnz
mov
scas
sbb
xor
jmp
mov
negl
adc
push
and
pop
idivl
mov
clc
xor
outsl
push
lret
fdivp
fidivrl
into
pop
xlat
inc
and
aas
sub
sub
lock
cmc
mov
adc
xchg
pushl
inc
dec
ficompl
fdivrs
push
xchg
mov
sub
mov
and
add
mov
inc
push
cli
xchg
mov
add
test
mov
jo
jnp
adc
imul
adc
sbb
pop
sti
addl
jno
pop
xchg
loop
mov
push
es
pushf
sub
push
pop
pop
popf
dec
loop
sti
push
cmp
enter
int
sbb
adc
sbb
addr16
div
aam
sub
mov
cmpsb
mov
call
nop
xor
sub
cmp
ja
scas
lods
pop
add
jno
xor
sub
fnstsw
cmp
imul
cmc
add
mov
imul
outsl
sub
pop
in
add
fistpll
jae
testl
fdivl
rcrl
call
repz
push
outsb
xor
out
iret
sub
sbb
std
aaa
push
mov
lret
aas
mov
enter
inc
pop
and
data16
mov
cmp
inc
xchg
sbb
hlt
dec
inc
push
in
adc
jnp,pt
jb
pushf
sub
inc
es
clc
pop
push
rcll
out
cmp
sub
in
xchg
mov
mov
out
mov
iret
push
pop
mov
inc
cmp
xor
fwait
cmpsb
in
rorl
push
and
jne
pop
xor
mov
mov
lods
rclb
dec
int3
js
mov
rclb
test
movsl
pop
xchg
cld
pop
mov
xchg
outsb
jle
mov
mov
out
sbb
pushf
mov
loope
scas
add
int
and
add
and
dec
pop
dec
mull
stc
jmp
pop
sub
loope
data16
xchg
enter
nop
push
inc
sub
cltd
dec
aam
push
mov
das
jecxz
jbe
frstor
movsl
imul
push
push
js
fdivrl
dec
sahf
adc
subb
mov
mov
jge
adc
mov
fsubrs
adc
pop
dec
bound
leave
fidivrl
dec
cmp
xchg
pop
mov
notb
or
test
and
scas
lea
lret
xchg
ret
sub
lds
lahf
or
out
dec
cmp
cmc
mov
and
jns
mov
pop
fsubrl
push
das
pushf
push
add
enter
jae
sbb
push
hlt
cmp
test
inc
xor
mov
dec
lods
or
mov
sbb
testl
aad
jge
pop
or
push
pop
jno
or
sbb
xor
mov
aaa
or
int
test
xchg
jns
jl
push
mov
fdivrp
movsb
stos
mov
dec
xor
insb
pop
push
cmp
cld
in
popa
add
push
mov
jbe
shrb
test
stos
push
insb
or
jo
jmp
lea
test
mov
xchg
aaa
stc
aam
scas
popf
and
dec
mov
icebp
out
jmp
test
lea
pop
pusha
ja
fidivrs
clc
pop
xlat
sub
sarl
mov
xchg
cmp
lds
cli
mov
xor
jmp
push
inc
ror
movsb
outsl
arpl
dec
dec
cmp
nop
js
or
shrb
imul
xor
dec
js
push
lods
xchg
pusha
iret
jnp
lcall
jae
lcall
divb
jnp
pop
add
lock
inc
cmp
andb
iret
pop
push
mov
out
loopne
dec
fwait
sub
sub
scas
stos
mov
pop
sahf
sub
jp
into
loopne
mov
iret
int3
das
adc
int
mov
jle
cmp
ret
jae
xor
pop
jnp
inc
insl
jmp
dec
dec
jbe
jmp
mov
add
scas
lcall
mov
outsl
adc
push
andb
add
and
push
leave
cmp
testb
lea
cli
and
add
je
mov
pop
loope
mov
in
in
fwait
xchg
pusha
lret
mov
rolb
lea
aad
mov
xor
or
adc
in
mulb
xchg
ss
leave
bound
cwtl
and
fdiv
and
inc
int3
nop
adc
xor
adc
cmc
cmpsb
scas
fisttps
push
in
adc
fmull
es
xchg
xor
push
pushf
fldt
cmp
inc
bound
fimull
hlt
cs
pushf
out
mov
mov
dec
leave
mov
sub
adc
into
loop
in
shl
sub
or
xor
pop
mov
je
aad
out
adc
xchg
stos
pop
mov
lahf
mov
jbe
je
insb
fbld
cmp
stc
mov
iret
cmpb
push
fcomip
aad
stc
ja
test
or
fimuls
shlb
push
push
mov
int3
sbb
mov
xor
and
pop
mov
ljmp
hlt
inc
sahf
cmp
outsl
mov
das
or
addr16
bswap
fwait
pop
out
push
inc
or
loopne
pop
push
ret
aas
hlt
fwait
sub
add
mov
in
outsl
push
xchg
test
xchg
ja
aam
push
adc
fwait
das
jns
push
mov
jmp
inc
in
ds
cmp
fdivp
fldl
and
mov
jge
and
fstpt
xor
test
sbb
xor
add
mov
mov
js
mov
idivl
jmp
push
lea
outsb
dec
scas
emms
out
cmp
test
push
xor
xchg
movsb
movsl
outsb
push
outsl
adc
push
in
cmc
add
adc
das
fld
xor
ret
push
pop
add
add
add
push
jb
pop
in
insb
fmull
or
cmp
jbe
jp
insb
enter
icebp
jns
pop
lds
jg
jg
jns
inc
inc
fildll
add
jne
mov
push
inc
adc
out
lea
sbb
push
daa
dec
adc
xchg
out
mov
popa
bound
nop
repz
or
popf
or
ss
dec
jne
call
in
jno
movsl
rol
imul
fisubl
push
lret
mov
pop
mov
and
sar
sbb
mov
data16
xchg
jl
enter
inc
scas
cld
pop
arpl
and
adc
outsl
into
adc
dec
fisubrl
rcrl
subb
insl
aad
jbe
xor
shll
sbb
add
rcpps
mov
fs
aas
jmp
xor
mov
dec
dec
cmp
cmpsb
mov
pop
jp
dec
xor
jbe
leave
and
hlt
jmp
shlb
pop
clc
sbb
mov
hlt
push
or
dec
xchg
and
fisubs
jp
inc
sub
sbb
cmp
out
push
adc
cwtl
push
fsub
addr16
vmovss
adc
lods
jp
mov
adc
mov
test
mov
lock
addr16
xchg
inc
dec
ret
imul
sahf
push
dec
xchg
xor
aam
adc
cld
in
cmp
leave
inc
dec
pop
loopne
sbb
mov
mov
pop
frstor
rcll
testl
or
pop
xor
arpl
jp
test
popf
inc
inc
imul
jecxz
dec
outsb
mov
insl
test
push
pusha
xchg
adc
mov
mov
sub
push
xchg
call
adc
es
jecxz
fdivl
jnp
xchg
inc
sub
and
sub
outsl
mov
mov
aaa
iret
xchg
push
jmp
daa
and
shll
and
sbb
scas
cmpsl
mov
mov
pop
cmp
mov
shlb
out
jmp
jo
mov
lcall
fwait
das
into
rorl
and
ss
jb
and
cld
pusha
mov
cmpsl
gs
std
cltd
add
pop
mov
fdivr
jmp
xchg
fwait
xor
push
outsl
cs
lock
jnp
test
call
lea
inc
das
icebp
adc
xchg
mov
sbb
dec
cmp
mov
or
jle,pt
xchg
je
jp
cld
icebp
dec
inc
cwtl
xchg
push
sub
arpl
fmulp
pop
popf
je
testb
pop
fisubs
shrb
cmp
mov
inc
aaa
xchg
cli
test
leave
movsl
xchg
in
inc
cmp
cli
or
mov
mov
imul
mov
test
adc
xchg
rcl
add
and
jmp
lret
movsl
cmp
scas
mov
inc
sbb
scas
jns
fistps
pop
test
jo
mov
push
sbb
add
pop
xlat
pop
jb
inc
or
mov
jp
jnp
ss
xchg
test
outsb
xchg
sub
nop
push
mov
adc
xor
jp
insl
sbb
dec
sub
mov
add
daa
lcall
fdivr
ja
sub
ja
in
popf
dec
rclb
mov
outsb
imul
cmp
fcomp
jne
pop
mov
sbb
mov
pusha
sub
cltd
dec
mov
lret
mov
fs
mov
repz
fadds
adc
shrb
cltd
shlb
int3
mov
cld
rcrb
xor
fmuls
pop
das
adc
test
decb
les
jmp
or
scas
lret
movsb
lds
push
jne
xchg
jae
aam
jl
not
or
scas
mov
jns
fwait
movsl
nop
jns
mov
push
fwait
sbb
cli
jmp
sahf
fidivrs
ss
jecxz
xorl
xor
inc
loope
sbb
push
addl
jo
dec
test
and
leave
lret
ret
sub
pop
in
fldenv
pop
or
addr16
pop
insb
jne
movsl
sub
mov
out
mov
sbb
loopne
mov
xor
fmuls
inc
call
shlb
xorl
loope
pushf
push
cli
repz
jns
jp
cmp
js
xchg
xchg
dec
jmp
scas
je
lods
adc
xor
mov
or
in
data16
push
adc
jle
mov
sbb
test
add
sub
les
fisubrl
pusha
data16
xchg
xor
cltd
fmull
je
or
insl
xchg
push
sub
negb
xor
cltd
outsl
outsl
pop
jp
dec
insl
aas
dec
jbe
pop
aas
mov
adc
sub
fs
divl
push
orb
nop
ret
add
movsb
mov
xor
into
call
and
rorb
shl
push
popf
cli
mov
fwait
into
xchg
cld
mov
inc
add
bound
cs
jno
mov
mov
and
clc
aam
xlat
xchg
in
scas
repz
addr16
and
dec
out
test
cs
mov
adc
lret
pop
cli
lds
sahf
sbb
xchg
push
cltd
int
addr16
jo
pusha
test
push
outsb
jmp
sub
cs
cmpb
fwait
rolb
aaa
or
shlb
mov
imul
xor
push
aaa
or
sub
mov
jo
sbb
ret
popf
bound
lcall
mov
jbe
inc
sub
pop
jb
ret
pushf
dec
mov
hlt
ja
bound
pop
andb
fs
and
push
mov
xchg
sbb
fiaddl
lock
xor
inc
loop
lahf
inc
out
mov
or
scas
push
fidivl
inc
or
mul
insb
sarl
xor
mov
mov
cmp
inc
jo
movsl
mov
inc
xchg
pop
repnz
adc
int
rcl
xchg
cmp
inc
in
rcpps
mov
icebp
lock
rcll
out
jne
xor
push
add
add
andb
bound
sub
cmp
fimuls
je
je
out
in
mov
and
xlat
xlat
mov
adc
fwait
js
mov
pop
sub
stos
mov
out
jne
xchg
pusha
or
into
mov
sahf
ja
lods
in
in
int3
aam
aad
mov
in
push
dec
repz
mov
ret
ja
and
rorl
repz
addr16
idiv
pusha
insb
pop
inc
sub
jp
push
js
js
int3
push
rolb
out
stos
xchg
aad
jnp
cmp
pop
mov
and
jne
dec
xor
mov
and
shl
inc
xchg
mov
mov
repz
pusha
push
mov
xor
idivl
mov
ja
and
jae
fstpt
adc
leave
push
pop
mov
icebp
sub
dec
sbb
pop
sub
lahf
inc
mov
cmovnp
sub
insb
movb
dec
xchg
xor
sbb
sub
sahf
lahf
test
push
ljmp
jge
ret
or
dec
push
jmp
push
xchg
out
cmpsl
and
gs
pop
fwait
xor
xor
int3
jns
out
test
mov
mov
not
or
aam
int3
and
icebp
sub
shll
mov
out
jbe
add
mov
cmp
jmp
stos
test
mov
dec
xorb
add
stos
insl
enter
pop
push
data16
xor
add
jl
and
sub
xchg
and
arpl
std
mov
bound
sbb
outsl
imul
mov
jmp
cli
push
ret
and
mov
push
popaw
and
lret
sbb
std
dec
inc
mov
dec
mov
mov
cmp
add
push
jne
ret
add
sbb
ss
pop
ret
pusha
into
sub
or
lret
sbb
and
pop
test
sbb
jp
pop
test
sub
shr
insl
movsb
repz
ds
fdivl
dec
test
rolb
mov
xchg
sub
test
rcll
leave
adc
jg
dec
mov
sbb
test
cmc
mov
call
adc
jno
xchg
ffreep
outsl
pusha
loope
addb
pop
aam
daa
inc
sbb
add
ret
shl
dec
add
dec
pushf
and
mov
loopne
arpl
fcmovbe
sub
push
push
sub
sbb
movl
shlb
incb
leave
notb
mov
sub
cli
pop
scas
aad
iret
jp
andb
dec
pop
inc
int
or
sbbl
pop
mov
add
ja
call
lods
test
in
into
and
bound
cmp
dec
cmpsl
inc
jbe
div
sarl
jmp
dec
inc
pop
fwait
test
and
jle
pop
pop
rclb
jb
push
dec
stc
or
pop
sub
and
push
cmpb
xorb
jno
mov
dec
mov
lret
adcl
loopne
rol
pop
or
cmpsb
pop
add
or
fbstp
cmp
mov
mov
sbb
rcrb
out
fsubr
xchg
cmp
icebp
inc
ret
mov
xor
adc
xchg
pop
push
and
cmove
je
stc
shlb
mov
cmp
lcall
jle
cmp
sbb
cwtl
lret
lret
inc
cs
mov
ds
arpl
icebp
into
ss
cmpsl
shll
jae
or
pop
xlat
and
lret
jl
push
orl
cmpsl
mov
pop
sahf
jg
out
mov
push
xchg
loope
push
iret
jb
mov
hlt
std
aam
xchg
mov
aam
xchg
mov
inc
cltd
or
mov
movsl
push
sub
mov
or
ficoms
lods
js
js
lcall
push
out
imul
orl
jg
arpl
xchg
out
stc
fdivs
xor
outsb
or
and
iret
jle
or
fidivs
or
push
mov
dec
cmpsl
and
aas
fs
pop
adc
xlat
jp
mov
pop
dec
xlat
clc
inc
test
pop
fadds
push
mov
push
inc
mov
adc
sub
cwtl
jnp
push
clc
call
inc
aaa
jecxz
out
cmp
inc
jmp
sub
add
inc
mov
hlt
ficoms
lock
xor
cmp
adc
pop
xchg
test
mov
mov
sbb
sub
pusha
jnp
push
movsl
negb
enter
lock
xor
dec
in
daa
mov
pop
std
jl
fistl
sahf
scas
dec
jno
or
sbb
stc
xor
sahf
xchg
push
xchg
inc
test
push
inc
popa
mov
cmp
and
into
mov
das
out
jbe
out
cmc
dec
dec
mov
test
inc
loop
add
mov
je
mov
hlt
cmpsb
sbb
cmp
dec
pop
cmp
stc
out
cltd
cmc
int3
mov
daa
popf
inc
and
lahf
jno
mov
pop
or
mov
xchg
add
pop
shrb
in
loop
lret
sub
cmp
or
daa
inc
or
cmpsl
adc
xor
mov
lods
push
add
lret
sbb
bnd
incb
popf
push
shll
mov
test
sti
xor
inc
pop
int
dec
hlt
enter
lcall
sub
add
insb
mov
sub
add
xor
jns
xlat
pop
xor
popa
xor
push
inc
mov
cmp
out
cmp
cmp
pop
push
pop
cltd
loopne
lea
and
push
loope
fwait
mov
negl
xor
hlt
fidivl
add
adc
mov
lahf
xchg
xchg
or
jl
jle
pop
jo
jb
aad
nop
hlt
cli
into
fsubrl
pushf
and
mov
loope
inc
or
mov
arpl
mov
sub
test
call
rcrb
adc
clc
addr16
std
mov
lret
shlb
outsl
movsl
sbb
xor
lahf
nop
or
je
fst
and
mov
repz
xlat
or
lret
jecxz
or
pop
test
lss
lcall
jl
push
inc
push
pop
push
cld
sbb
out
das
pop
mov
dec
adc
sub
sahf
clc
daa
leave
addr16
xor
mov
push
data16
stos
inc
push
xchg
imul
stc
out
mov
sbb
punpckhwd
push
xchg
clc
insl
cmc
loop
enter
or
xchg
push
bound
sbb
std
aas
fdivrs
add
pop
xchg
sti
into
sbb
jns
lahf
xor
out
test
add
sbb
sbb
push
or
jbe
test
and
mov
dec
cmc
test
dec
and
fdivr
orb
stos
mov
pop
sub
inc
mov
stos
xor
inc
push
loope
mov
push
adcb
pop
xchg
ds
pop
push
push
xchg
test
mov
int
in
jnp
sti
leave
add
mov
push
mov
mov
xlat
aaa
adc
icebp
mov
out
mov
pop
add
dec
daa
inc
in
xchg
pop
mov
mov
adc
sbb
subl
data16
adc
inc
test
daa
and
cmpsb
mov
add
xor
mov
mov
xor
enter
inc
movsl
mov
movsb
push
arpl
mov
andl
fs
imulb
inc
pushf
inc
es
lahf
adc
dec
mov
push
sub
negl
or
lcall
subb
insl
aas
repnz
xchg
iret
mov
xor
sti
aaa
push
sbb
test
bnd
or
mov
pop
and
test
test
mov
push
aaa
sub
xor
mov
repz
push
xchg
lock
out
inc
pop
push
mov
and
mov
in
pop
mov
cmp
into
movsl
mov
cmp
cltd
cmp
xor
and
xchg
xor
push
test
outsb
push
push
and
clc
pop
mov
aas
dec
mov
or
mov
mov
lcall
jmp
test
movsl
inc
sub
aam
jl
js
movsb
pop
cli
imul
lcall
popa
and
push
xchg
jne
iret
repz
std
call
roll
adc
add
pop
fsubl
inc
and
nop
inc
popf
xchg
mov
pop
in
nop
xor
mov
or
outsb
xlat
inc
clc
lds
mov
mov
mov
and
mov
sbbb
jo
push
cmp
fsubl
sbb
inc
rorb
hlt
ret
dec
pop
xchg
clc
inc
hlt
cmpsl
push
dec
test
lea
push
ja
inc
adc
fdivrp
leave
int
jg
int
aaa
insl
loopne
dec
inc
cmpsb
mov
gs
aad
pop
and
nop
push
mov
xor
outsb
decl
je
dec
xchg
stc
mov
aas
int3
lods
xchg
sub
sub
xchg
push
push
gs
ret
negl
xor
cli
sbbl
pusha
stc
xchg
int3
mov
mov
fisttps
adc
js
sub
jae
mov
push
pop
push
xchg
sbb
mulb
mov
jb
in
sbbl
pop
insb
sub
pop
shl
xor
loope
sti
mov
mov
je
sbb
popa
and
gs
mov
jnp
in
sub
test
shlb
mov
mov
loope
sbb
repnz
clc
mov
es
sbb
sbb
add
pop
add
sbb
lcall
fdivp
out
or
mov
dec
cmp
call
lods
push
out
push
dec
sahf
xchg
xchg
popa
imul
fiadds
add
dec
xchg
ja
sub
rolb
lcall
xchg
add
jbe
and
fs
test
cmp
mov
and
das
cli
xchg
sbb
jbe
and
or
lds
popa
pop
sbb
xor
inc
aad
xor
cmp
int
xchg
or
aaa
cli
enter
mov
mov
mov
inc
xchg
adc
mov
shlb
sub
push
idivl
mov
ret
push
pop
pop
jg
repz
pop
cmpsl
cs
out
xchg
xchg
pop
add
sbb
gs
sub
dec
xor
ret
adc
cmp
ss
vmwrite
andb
cs
adc
add
mov
out
pop
sarb
popa
mov
or
cmp
outsb
pop
jae
cmp
or
shll
repz
or
adc
jg
add
lcall
mov
aaa
mov
cs
mov
pop
out
pop
lahf
insb
out
fadds
fidivs
repnz
xlat
leave
xchg
lds
call
lods
fisubrl
sahf
push
push
into
test
insb
jecxz
xor
fidivrl
push
pop
fsubrs
pop
ficomps
jg
repz
xchg
dec
shl
mov
inc
rorl
xchg
pop
mov
adc
dec
int3
fst
rol
pusha
fimull
mov
pushw
mov
nop
add
cmpb
fistpl
add
repnz
xchg
adc
xchg
add
xchg
sub
push
aaa
push
mov
gs
sub
loope
lds
pusha
rclb
out
fwait
mov
sbb
lea
pop
inc
sub
dec
fmuls
ds
and
scas
cmp
cmpsl
sbb
mov
scas
arpl
outsb
test
push
loopne
xor
push
in
fisubrl
sbb
and
or
jp
in
pop
or
sub
push
adc
mov
sarl
cmp
bound
or
mov
cmp
test
and
mov
scas
andb
xlat
mov
in
push
mov
pop
cmpsb
and
in
dec
pusha
and
sbb
xchg
xor
sub
add
iret
xchg
xor
inc
push
push
mov
fucom
sar
mov
hlt
mov
pop
test
fs
cmp
cmp
in
lods
fists
ljmp
pop
sub
lock
dec
and
xchg
iret
sbbb
jo
sub
jl
ja
add
rcl
cmp
mov
jne
mov
clc
lcall
ror
test
and
in
add
mov
adc
mov
in
movsl
neg
jae
test
mov
xor
sub
xchg
aas
push
add
pop
mov
je
outsl
xor
sahf
testl
dec
ljmp
cmp
dec
sbb
cmpsl
pop
loopne
cmp
scas
jae
lcall
sarb
mov
push
pop
and
xchg
dec
or
mov
js
pop
shll
stc
in
dec
fdiv
or
ljmp
mov
fdivrp
mov
cld
push
xchg
aas
push
cmp
or
mov
and
popa
filds
pop
inc
xor
jno
pushf
adc
idivl
je
lds
clc
cmpsb
xlat
sub
xor
xchg
jne
rorb
jge
std
adc
movsb
in
into
imul
mov
push
add
sub
ljmp
ret
xchg
outsl
cmpsl
mov
and
std
push
xchg
sbb
and
push
inc
mov
negl
cmp
cmp
or
xchg
js
sub
inc
push
xchg
add
je
mov
mov
rclb
loop
mov
inc
sub
inc
jmp
mov
pop
mov
ret
push
xchg
ret
push
dec
ja
in
fs
jo
test
lods
push
push
xor
dec
mov
sti
lods
push
xor
cmp
outsl
jmp
pop
xchg
xchg
mov
gs
imul
mov
movb
cmp
adc
ja
pusha
jne
cmp
mov
jge
lods
xlat
outsl
shlb
jle
inc
jae
int3
stos
ucomiss
push
pop
inc
cmp
into
adc
dec
inc
lahf
int3
enter
fisubl
xchg
aas
sub
and
in
sub
test
push
shll
fsubl
and
imul
push
lods
out
insb
push
pop
js
cwtl
pushf
aad
insb
inc
cmp
movb
push
stc
sbbb
aaa
add
mov
push
ret
cmc
or
clc
pop
adc
mov
xchg
stos
imul
inc
mov
pop
mov
push
jae
xor
cltd
je
imul
pop
cmp
mov
mov
add
push
jb
adc
mov
jmp
jns
ja
adc
pop
pop
data16
fiaddl
xor
loopne
in
dec
mov
push
insl
sbb
add
pop
fwait
push
mov
dec
lea
sar
jns
or
pop
aad
xchg
mov
or
adc
add
aas
lcall
sbb
movsb
mov
pop
or
cld
daa
es
inc
xchg
mov
enter
pop
scas
pop
popf
or
dec
fcompl
inc
cwtl
mov
fcomi
outsb
js,pn
aad
mov
test
push
mov
arpl
out
push
jnp
iret
mov
repnz
jne
cmp
jle
adcb
test
out
dec
cmpsl
js
out
lods
xor
scas
rolb
ficomps
mov
xchg
or
loop
cmp
enter
push
add
jecxz
and
xchg
xor
adc
sub
mov
cli
cmp
dec
mov
xlat
fstpl
jl
test
std
pop
lret
or
imul
imul
and
rorb
cmp
mov
in
incl
mov
sub
out
push
cmc
inc
cmpsb
add
scas
cld
push
xchg
and
mov
xchg
insb
pusha
adc
mov
xchg
ret
test
jge
lahf
xor
je
popa
aam
xlat
cs
pop
and
add
scas
xor
ja
push
movsb
jbe
mov
xlat
dec
mov
cmpsl
or
adc
xor
fcompl
adc
scas
adc
cmpsb
sub
icebp
lds
imul
mov
movzbl
sbb
fsubrp
das
xchg
dec
cli
popa
repz
aas
mov
mov
test
jns
aas
mov
sub
repz
cmc
cld
jp
xchg
inc
pop
les
rolb
dec
mov
adc
push
push
fildl
add
pop
clc
repnz
xor
loopne
sahf
mov
mov
jg
ss
cmp
aaa
rcrl
shrl
mov
std
pop
xchg
lahf
gs
sbb
ljmp
push
in
jbe
int
jle
lret
ds
fidivs
xchg
ret
mov
mov
or
mov
cmp
mov
pop
sub
xor
push
pop
cmpsl
mov
or
orb
stos
pusha
mov
sub
fstpt
jae
and
jno
push
sahf
aad
ja
or
xchg
or
das
sbb
out
bound
test
lahf
xor
mov
imul
fildl
jmp
popf
push
dec
push
ret
xchg
cli
pop
pop
das
jmp
push
and
pop
jecxz
mov
aam
mov
test
xchg
jbe
jmp
dec
sub
lret
pop
cmp
pop
adc
stc
fucomi
jno
add
into
icebp
insl
mov
xchg
dec
push
mov
mov
pop
mov
filds
cmp
inc
call
sbb
xlat
int3
mov
stos
in
mov
mov
in
test
sbb
popa
sbb
std
sub
dec
adcl
mov
fcomps
insb
in
mov
mov
ss
or
xor
gs
arpl
sbb
jg
xlat
ret
dec
ss
pop
or
or
mov
jecxz
mov
or
add
push
bound
xchg
cmpsl
push
mov
enter
dec
in
jno
fwait
cmp
and
fdivl
adc
sti
in
int3
popa
push
shll
cli
dec
add
xlat
sahf
mov
mov
add
lret
adc
out
xor
fs
shl
cmc
out
test
pop
fsubrs
lahf
fs
shrl
decl
sbb
cli
pop
push
leave
jnp
or
adc
xchg
and
lcall
or
and
insl
or
xlat
lods
test
jne
in
jb
sbb
mov
cmc
jns
cmp
in
icebp
jl
adc
cmpsl
bound
add
inc
push
fwait
mov
call
pop
cli
stc
fldt
push
cmp
adc
out
insl
int
inc
sbb
cmp
inc
or
and
in
adc
or
pop
test
mov
sti
mov
adc
testb
mov
mov
ret
inc
or
stos
inc
out
fmull
fidivl
dec
sub
cld
sahf
and
rcl
pop
push
add
aam
fldt
ss
cs
push
rolb
or
arpl
cmpsl
inc
mov
mov
rorl
mov
cmp
adc
jo
pop
aaa
fs
subl
lds
sbb
rcl
jne,pn
jne
lahf
push
bound
test
adc
adc
jg
sbb
inc
adc
in
sbb
sbb
sub
mov
js
lock
fwait
pop
lods
inc
das
adc
pop
mov
pusha
jb
push
jns
mov
popf
movsb
inc
outsb
add
push
pop
pop
ret
add
std
insl
fstl
jno
xchg
jbe
mov
sbb
inc
xor
and
test
cmp
mov
sbb
jmp
js
jg
mov
xor
cld
das
add
adc
and
insl
fucom
jge
sbb
ret
xlat
mov
nop
loope
jecxz
rorb
lcall
pop
ja
jecxz
test
mov
sbb
add
int
xor
xchg
adc
aaa
jne
mov
les
xchg
dec
pop
lea
lea
out
ds
sbb
mov
jecxz
sbb
dec
fildl
shrb
lret
jae
mov
ja
xchg
mov
add
daa
push
mov
je
adc
insb
xchg
mov
cmpsb
fisubrs
dec
idiv
lret
adc
in
xchg
mov
pop
mov
rcrl
andl
pop
aam
pop
pop
pop
ds
xchg
rorl
dec
stc
mov
iret
xor
aas
jecxz
mov
aad
jp
pop
dec
jno
stc
mov
and
js
imul
mov
push
sbb
xlat
or
mov
mov
jp
lods
mov
pop
mov
scas
dec
out
pop
add
mov
fisubs
loopne
pop
out
clc
push
mov
sti
jecxz
into
jbe
fimull
iret
xchg
jnp
xor
aad
fnstsw
adc
dec
or
sub
sti
adc
out
mov
cmp
jb
ds
mov
cmpsb
mov
mov
mov
movsl
push
jb
scas
mov
fistpl
lahf
inc
push
sbb
mov
aas
mov
cltd
data16
jno
rcll
pop
sub
jo
cmp
xor
xor
push
sbb
cmp
mov
mov
test
adcl
sahf
xor
subl
fldl
pop
rolb
ss
xor
jmp
iret
jle
push
mov
add
test
dec
jb
paddw
add
sub
mov
push
das
push
sub
add
sahf
sub
lods
cmp
sbb
test
leave
incb
jbe
jo
adc
inc
shrl
xor
cmp
cmpsl
inc
inc
in
fcomps
inc
ret
lcall
test
mov
cmpsb
inc
inc
lahf
stc
lret
xor
test
std
int3
loopne
xchg
jecxz
inc
mov
adc
cwtl
inc
mov
fisttpll
and
adc
sbb
stc
xchg
push
xchg
cs
cltd
or
sarl
lret
out
mov
out
jge
test
mov
sub
movsb
xor
mov
adc
pusha
ss
push
jbe
mov
pop
test
mov
dec
xchg
sub
call
ds
xchg
mov
cltd
adc
mov
pop
ret
xor
and
xchg
jle
push
sarl
push
js
mov
xor
es
pusha
outsl
push
mov
adc
negb
ja
cld
rcrb
fistpll
xchg
and
inc
roll
aad
in
xchg
sub
sbb
insb
sub
pop
mov
fsubp
xlat
repnz
or
dec
add
repnz
mov
sbb
mov
aas
lds
sub
mov
in
jp
mov
imul
cmc
pop
add
dec
popl
push
loopne
pop
mov
lret
mov
lock
pop
and
es
sub
mov
and
sub
add
sbb
ret
addr16
fwait
add
test
jno
xor
and
popf
loope
push
cli
sbb
xchg
jno
mov
xchg
aaa
sarb
rclb
test
mov
cmp
inc
jno
outsb
out
and
aas
jne
xor
mov
jg
lock
lods
andb
add
fcomi
and
add
aad
je
add
jge
ret
xchg
xchg
mov
mov
out
or
test
push
xchg
inc
mov
push
ja
fists
xchg
fisubrs
in
and
imul
inc
jnp
lcall
pop
add
xchg
loop
daa
and
xchg
sub
inc
mulb
pop
int3
sbb
or
fwait
mov
jns,pt
fisttpll
in
filds
push
pop
mov
adc
shrl
xor
lods
xlat
popa
test
inc
or
dec
sti
sub
hlt
mov
in
inc
jb
rorl
jmp
stos
mov
pusha
pop
jne
js
lahf
aas
cltd
fidivrl
jae
mov
cmp
cs
pusha
xchg
test
dec
push
lods
cltd
push
mov
mov
sub
in
mov
dec
cmc
cmp
imul
call
xchg
xchg
inc
int3
fisubl
out
test
neg
pop
pop
sti
xor
data16
push
arpl
fldcw
push
mov
mov
fwait
mov
and
nop
pusha
fsubs
cld
js
sahf
jnp
ret
sub
cmc
hlt
sub
jbe
mov
dec
or
xchg
push
ja
ss
mov
cwtl
cmp
sub
pop
add
pusha
ja
add
aam
sbb
cmpsb
enter
lahf
cmpsl
inc
stos
lock
pop
jge
inc
out
into
mov
or
or
lods
sti
loop
xor
ficomps
cmp
sub
sbb
es
pop
cmp
adc
cmpsb
push
incb
frstor
push
xchg
sbb
adc
pop
lock
clc
std
shll
shl
xchg
insb
popf
jo
mov
les
fistpll
xchg
cmp
pop
ja
sbb
pop
add
sub
sti
int
push
call
arpl
pop
xlat
stos
aaa
je
lret
adc
and
pop
jle
mov
mov
push
pop
stc
popf
cmpsb
lret
ret
add
inc
lods
mov
movsl
ret
aam
cmp
sbb
outsl
and
or
sub
into
lds
outsb
decl
out
test
jae
pop
sbb
pop
and
pop
leave
xchg
popf
jb
pop
lret
cmpsl
or
mov
fincstp
aas
or
fdivrs
inc
ja
mov
sub
push
arpl
rcr
repz
mov
popf
rcrb
mov
inc
int
pop
mov
or
das
arpl
xor
push
mov
cmp
and
fdivr
xor
pop
fdivr
pop
xor
imulb
xchg
mov
adc
ret
ja
add
sti
pop
mov
aas
popa
fistpll
clc
adc
cltd
scas
inc
or
cmpsb
sub
pop
push
cmp
int
addr16
jl
fisubrl
fdivl
adc
pushf
adc
insl
xor
mov
jnp
add
inc
cmpsl
inc
lock
pop
push
popf
shll
mov
out
mov
add
mov
lea
jb
cmp
scas
out
push
add
inc
int3
pop
lods
ja
pop
push
jb
push
pop
imul
add
push
test
push
mov
sub
cmp
jecxz
push
cmp
dec
cli
dec
cmp
jg
mov
mov
lds
cmp
mov
mov
sti
mov
notl
repz
call
adc
inc
sahf
add
push
jg
clc
test
leave
pop
mov
outsl
jae
mov
out
mov
clc
imul
dec
mov
push
out
and
bound
dec
pushf
cld
lret
sbb
sub
sarl
shll
shlb
xchg
cmp
dec
and
xchg
sbb
andb
insb
sub
mov
mov
inc
insl
mov
cwtl
jnp
sarb
adc
enter
in
jge
xchg
xchg
mov
pop
daa
clc
and
fistl
xchg
inc
imul
add
clc
enter
lods
out
pop
adc
dec
dec
movsl
int3
push
cmp
pop
cwtl
lret
movq
xchg
and
xor
iret
mov
jae
icebp
pop
das
xchg
sar
out
fwait
ret
leave
xchg
push
shrl
sub
sub
aas
pop
push
xchg
es
dec
test
jge
jp
mov
js
dec
dec
js
repnz
frstor
sti
mov
test
mov
mov
inc
andb
xchg
insl
add
fldt
insl
and
mov
adc
mov
lds
fwait
testb
inc
push
test
icebp
cmp
shlb
insl
or
pusha
sbb
add
lods
dec
cmp
inc
cld
mov
xor
je
dec
adcl
out
cmp
fcompl
mov
and
out
lret
mov
and
push
roll
adc
and
outsl
add
inc
push
aas
loope
bound
mov
jle
movsb
and
ret
inc
fcoms
das
enter
cmc
dec
pop
mov
stos
pop
fsubrl
xchg
inc
rol
into
push
aam
ret
in
lods
test
cmp
nop
stc
xchg
jnp
and
leave
ret
add
shlb
imul
in
std
adc
xor
call
sarl
or
imul
xor
out
mov
cld
inc
add
xlat
int
xchg
pop
hlt
adc
pushf
mov
xor
xchg
sub
jo
es
xor
jecxz
shrb
jne
jbe
sub
sbb
js
ja
mov
mov
jb
sub
adc
mov
lods
bound
pop
lret
or
leave
mov
movsb
pop
lcall
inc
push
rolb
and
jbe
pop
jbe
xor
std
mov
push
push
daa
frstor
sub
adc
test
add
xor
shll
mov
xchg
hlt
movsl
sbb
or
push
repz
inc
out
pop
rcrb
jo
imul
mov
fidivs
mov
add
pop
xlat
es
sbb
adc
mov
mov
int3
sbb
dec
mov
and
in
jmp
ja
neg
mov
outsl
out
sti
cmpsb
rclb
in
pop
add
fisubl
jmp
sub
repnz
loop
inc
shrl
inc
lret
insl
cli
dec
fs
mov
idivb
outsb
subb
daa
and
xor
sub
insl
and
dec
into
arpl
jmp
lret
mov
fildll
pop
jbe
pop
sub
sbb
pop
jp
push
inc
lods
or
mov
je
stos
lods
cmp
and
and
test
shl
add
xor
shrl
pop
dec
hlt
adc
repz
test
js
mov
pop
cmp
sub
into
dec
cmc
push
xlat
mov
ret
xor
mov
movsb
leave
sbb
inc
mov
repnz
outsl
rcrl
sbb
enter
fnstcw
add
call
pop
cmp
notl
jge
cmp
add
mov
mov
sbb
mov
std
in
pop
cmc
push
sub
sahf
cmp
mov
sub
pop
into
icebp
jl
pushf
mov
ss
aas
or
jmp
xor
imul
jle
adc
aad
dec
cltd
push
lods
fcmovne
push
pop
dec
and
pop
stos
pop
adc
inc
push
xchg
iret
cmp
add
sub
loop
and
push
int
jmp
pop
lods
shlb
mov
aas
or
fcompl
add
lahf
mov
push
pop
call
loopne
mov
mov
inc
fnstsw
lods
int3
out
xchg
roll
or
pop
jmp
xchg
arpl
xchg
gs
mov
push
mov
push
ss
push
xor
dec
aam
rol
push
es
psubsw
push
lods
and
cmp
or
mov
mov
js
ja
lea
dec
cmp
jle
mov
cmp
es
sahf
addr16
enter
inc
int3
cwtl
movsl
sub
pushf
sub
add
mov
inc
pop
sub
xor
or
xor
addr16
xchg
jmp
pushf
push
inc
xchg
mov
pusha
aas
push
imul
xor
clc
dec
mov
sbb
movsl
or
mov
dec
lock
jnp
jmp
inc
mov
push
pop
ljmp
cmp
sbb
mov
gs
push
cmp
cltd
jecxz
mov
add
ret
jmp
cmp
sbb
mov
adc
in
pop
pandn
add
flds
in
lea
inc
lods
hlt
in
es
inc
pop
div
aad
push
adc
pop
xchg
xchg
and
dec
cmc
adc
aaa
xlat
adc
fnsave
nop
clc
mov
jns
testl
aas
rcll
jnp
mov
xchg
enter
push
fldt
xchg
lods
lcall
or
rcrl
jo
sbb
and
push
mov
mov
inc
sbb
repnz
mull
pop
and
bound
stos
jmp
xor
or
mov
or
or
fcoms
sub
mov
lds
mov
popl
jb
adcb
push
sub
je
and
rorl
roll
pushf
in
subl
je
gs
aam
mov
push
rcrb
inc
enter
loop
cltd
js
loope
stos
cwtl
xchg
out
insb
andb
inc
out
or
ja
pop
mov
ja
aaa
fidivs
insb
scas
xchg
out
ror
lret
and
jmp
loop
dec
push
inc
test
lahf
clc
shlb
adc
xor
jb
add
xchg
rcll
sbb
mov
sahf
sub
lcall
xor
mov
mov
cld
std
cmc
sbb
lods
clc
je
lret
mov
repnz
movsb
push
xlat
and
fidivs
sbb
fs
sub
jbe
sbb
mov
dec
movsl
insb
sbb
leave
in
mov
ficoml
scas
fld
repz
sub
cmp
sub
cmpsb
je
jg
ret
loope
xchg
mov
aad
adc
jmp
adc
jmp
icebp
cltd
lcall
pop
and
xor
in
inc
dec
int3
add
iret
out
movsb
pop
stos
cmpsl
push
add
jle
mov
arpl
fcomip
ffreep
sub
adc
lea
fnstcw
stos
fnsave
rcrl
ret
lret
mov
lods
dec
jp
in
sbb
add
sbb
dec
in
stos
mov
xchg
shlb
mov
les
insb
pop
cli
jae
adc
pop
cmp
inc
mov
outsb
xchg
mov
xchg
lods
dec
pop
xor
inc
xor
push
movsb
mov
lock
mov
xchg
adc
jo
loopne
push
adc
lahf
outsb
jge
and
sub
popf
and
mov
outsl
insb
sbb
and
dec
mov
inc
cmpsl
clc
scas
je
es
push
cmp
cmp
dec
inc
jns
xlat
inc
mov
fadd
pop
dec
mov
in
fldl
lods
js
sub
int3
push
ja
push
mov
mov
jns
incb
inc
sbb
fcmovnb
xor
jecxz
cmp
mov
ret
scas
push
pop
xor
add
sub
sub
sbb
out
test
outsl
cmp
lret
fldenv
test
and
mov
inc
dec
testl
and
pop
lock
cltd
jne
adc
sti
cmpsl
lret
lcall
inc
jl
push
cmc
repnz
cmp
jg
in
out
cwtl
jne
ret
mov
pop
sarb
pop
imul
mov
jnp
hlt
push
xlat
push
in
mov
out
push
out
dec
mov
cld
push
in
xchg
pop
dec
stos
jbe
xchg
sub
push
ss
xor
mov
mov
jbe
mov
jno
mov
inc
int3
jns
xchg
imul
loop
xchg
insl
in
mov
xchg
xchg
les
xor
scas
xor
fldcw
push
dec
rcll
mov
flds
loop
mov
xchg
ss
scas
cmpl
xchg
ljmp
lock
cli
cmp
lret
add
jnp
jmp
ja
popa
mov
jecxz
mov
outsb
cli
push
addr16
sahf
lds
mov
movsl
jo
mov
xor
cltd
xlat
dec
inc
cmpsb
lods
repz
int
jo
movsb
jecxz
jb
sub
dec
pop
scas
cmpsb
out
pusha
mov
adcb
xorl
push
jnp
out
or
add
and
lods
cmc
pop
aam
arpl
loopne
mov
sar
xor
mov
clc
dec
pop
faddl
or
cli
sbb
sub
aad
call
xchg
test
daa
sub
fs
fisubrs
aad
inc
push
hlt
lea
mov
int3
repz
test
std
ss
stc
mov
xchg
xchg
cmp
jge
mov
push
pop
out
cmpsl
mov
mov
insl
daa
jp
sti
ficoms
mov
cli
ror
inc
jl
xor
and
lahf
ljmp
jno
inc
xchg
mov
mov
negl
mov
adc
fstp
xor
mov
push
sub
cwtl
lds
add
nop
stos
popf
inc
sahf
ret
insl
repnz
sub
and
push
sahf
fcoms
out
sub
push
xchg
scas
lcall
in
ja
push
mov
sub
movsb
cmp
cmp
out
cmp
pop
push
test
aam
dec
xor
add
xor
aas
inc
fucomi
icebp
out
ret
shrl
fsubs
push
mov
xchg
shrl
idivl
arpl
and
stos
call
sti
push
mov
xor
mov
push
fs
xor
inc
lahf
sub
inc
add
cmp
shl
cmc
mov
shrb
jnp
inc
repz
lods
jae
pop
popf
dec
sub
imul
push
fcoml
sbb
push
movsb
xor
or
pop
sbb
sbbl
ficompl
lea
mov
rolb
shrl
cmp
les
in
hlt
mov
out
pop
jl
sub
sub
clc
inc
inc
popl
mov
ljmp
and
add
popa
sbb
fnsave
movsb
leave
lret
sbb
xor
pusha
add
jge
mov
inc
mov
mov
jo
test
fnsave
out
gs
dec
inc
ds
add
cmp
jmp
clc
in
ljmp
xor
mov
and
sbb
cwtl
outsl
fwait
mov
jle
pushf
mov
sub
add
fildl
or
jp
pushf
fadds
ffreep
mov
in
push
dec
in
loop
adc
mov
js
popf
lret
dec
fcomps
push
leave
scas
or
xchg
push
sbb
push
lret
push
pop
pop
std
movsb
sub
lods
push
int
jmp
ficomps
dec
adcb
xchg
and
or
clc
push
shlb
scas
inc
and
add
scas
mov
mov
test
aam
jae
cmp
xor
mov
pop
pop
stc
clc
cli
push
cmp
sbb
sub
push
jnp
add
pop
sbb
sub
or
or
daa
sub
mov
fcompl
dec
insb
aaa
jl
sub
adc
pop
lods
fdivs
pop
inc
mov
xchg
out
push
pop
push
clc
jae
filds
in
dec
xchg
sub
pop
and
and
out
jb
add
lcall
and
outsl
lods
or
sbb
call
loopne
or
cltd
sbb
mov
mov
lods
push
rcrb
loope
sub
jae
mov
jae
xor
pusha
ja
mov
push
cmpb
mov
push
lret
pop
cmp
mov
ret
mov
int
ss
bound
das
int
clc
push
and
mov
mov
pop
jb
dec
inc
xchg
out
push
jne
movsl
push
dec
push
clc
jnp
jg
push
mov
push
lahf
cmp
lods
rcll
or
cltd
cli
mov
leave
repz
xchg
sahf
pusha
pop
sub
jge
lods
test
mov
lods
cli
scas
add
lock
jae
adc
mov
je
sub
mov
dec
mov
mov
insb
cli
ja
arpl
add
and
pop
in
pop
jl
sub
jns
orl
std
push
mov
into
scas
and
loope
imul
jge
push
xor
push
xor
outsl
sbb
aaa
sbb
adc
pusha
mov
ja
jns
movsb
cmp
jp
mov
xchg
or
xchg
jl
mov
push
rcr
fcmovbe
aad
xchg
or
cs
nop
js
lods
push
or
xor
fwait
ss
adc
mov
out
jl
iret
outsl
mov
xchg
mov
jle
sub
or
iret
addl
xchg
and
mov
lea
or
mov
mov
sti
inc
mov
and
jb
cmp
xor
icebp
lret
mov
mov
leave
dec
xor
push
js
xchg
sub
jo
mov
push
dec
ds
xor
or
mov
add
adc
frstor
and
sub
push
xchg
in
cwtl
dec
push
xchg
push
cmp
lods
jge
insl
out
sbb
fmuls
aas
and
sbb
mov
mov
push
sub
or
test
ret
mov
je
xor
xchg
sbb
clc
in
jnp
sub
adc
fucom
cmp
xor
scas
add
jle
pushf
jno
cmp
scas
scas
mov
sub
or
mov
and
nop
imul
das
ja
cld
out
xchg
mov
dec
dec
add
jmp
ljmp
cld
fnstenv
movsb
outsb
ffree
sub
arpl
cmc
xor
mov
inc
mov
jnp
adc
xchg
jb
stos
pop
imull
test
xchg
xor
das
sub
filds
aaa
fsubr
adc
sub
mov
dec
cmp
outsl
in
push
mov
outsl
xorl
add
loopne
mov
enter
add
xchg
jge
xchg
xlat
dec
into
sub
mov
int
cmp
xchg
mov
stc
sub
pop
jge
push
cmp
into
dec
mov
fcos
in
shl
lods
jmp
jbe
mov
loopne
movsb
dec
push
xchg
sbb
jp
data16
inc
push
xor
scas
xchg
das
push
or
js
stc
notb
dec
push
mov
lods
je
andl
mov
adcb
incb
leave
mov
xor
ficoml
and
mov
dec
hlt
mov
cld
dec
mov
repnz
cmpl
insl
loop
cmc
inc
mov
fsubp
nop
pop
pusha
mov
sbb
or
int3
cmp
push
cmpsb
fmul
dec
pusha
pop
push
dec
mov
dec
cmpsb
rclb
adc
xchg
push
cli
push
enter
sbb
repz
pop
cmpsl
into
mov
cmp
bnd
mov
je
pop
adc
aam
inc
sti
inc
jbe
jmp
sbb
mov
cld
clc
das
lret
jle
iret
and
scas
pop
out
and
dec
aam
hlt
and
adc
add
cmpsl
call
cmp
jle
iret
in
add
mov
sbb
stc
mov
and
push
adc
adc
pop
jo
mov
push
mov
mov
icebp
lcall
push
jb
cmp
xchg
push
mov
out
fwait
jp
dec
mov
add
dec
insb
xor
add
dec
push
add
adc
jbe
pop
push
pop
sahf
ret
pop
jmp
lea
scas
sbb
cmp
fstl
fsts
jecxz
pop
add
mov
pop
aas
push
push
ds
movsb
xchg
xlat
sar
test
hlt
and
xor
test
sarb
mov
pop
pop
cwtl
cmp
fcomps
sbb
add
mov
sbb
inc
sub
pop
inc
fadd
sub
repz
pop
leave
icebp
shlb
add
cwtl
andb
int
cmpsb
inc
int3
sti
shlb
or
add
dec
mov
jmp
xor
lods
nop
mov
sub
mov
xor
cwtl
shll
aaa
shrd
jb
dec
pop
sub
cwtl
cltd
insb
pop
mov
mov
cmpsl
aas
cmp
adc
push
sbb
stos
clc
scas
xor
and
enter
fdivrl
xlat
add
fwait
nop
adc
pop
fists
add
mov
push
lds
sub
lcall
push
xchg
aaa
push
or
sahf
cmpsl
fbld
nop
xchg
inc
add
cmp
sub
pusha
ss
mov
jl
loopne
leave
lea
rorb
mov
js
mov
dec
aaa
lret
dec
inc
stos
pop
ficomps
push
jbe
or
cmp
mov
gs
and
repnz
sbb
shr
incb
mov
pop
ret
xor
aaa
scas
out
fcmovbe
push
jg
pop
sub
insb
ja
mov
dec
shl
inc
in
ja
lds
push
cwtl
xlat
sub
jp
inc
das
lret
out
aad
lods
in
lcall
inc
sbb
xor
mov
repz
adc
xor
fld
mov
pop
icebp
inc
add
in
lahf
jne
imul
cs
pop
imul
add
ja
pop
arpl
mov
jmp
sahf
mov
popa
pop
inc
jno
mov
fildl
les
fidivrs
sub
clc
mov
sub
push
bound
push
add
sbb
mov
sbb
fsub
dec
and
pop
pop
push
push
fsub
sub
push
xor
dec
mov
mov
dec
push
pop
pop
lods
cmpl
clc
mov
mov
jp
subw
jo
clc
or
dec
mov
lcall
adc
sub
mov
in
jns
inc
adc
or
lcall
movsb
leave
mov
add
mov
ret
out
jne
jl
mov
lret
enter
loope
pop
les
mov
xchg
int
lea
stos
std
sti
jbe
push
loope
jbe
jmp
lock
out
mov
dec
mov
pop
mov
adc
mov
bound
add
stos
pop
push
call
lret
add
xchg
jecxz
in
jae
loop
adc
dec
mov
inc
inc
mov
movsb
dec
push
repz
mov
call
mov
outsb
mov
or
test
stc
lds
adc
xchg
and
outsb
adc
leave
shl
shrl
subb
aaa
pusha
fwait
repz
sbb
push
xchg
or
add
cmovb
out
ficompl
lret
insb
sbb
lcall
sbb
into
test
fcoms
movsb
mov
sbb
cmpsl
or
push
add
rclb
fsubr
mov
js
adc
xchg
ret
pop
lods
cmp
movl
ret
jp
popf
mov
es
mov
xchg
cmp
je
sub
outsb
lcall
out
movsb
js
jge
ret
xor
dec
mov
pop
jnp
fchs
fisubl
xchg
push
sub
and
pop
stos
push
pop
je
adc
dec
sub
pop
setns
push
push
les
push
pop
decb
fldenv
or
fwait
cmp
mov
xchg
xchg
pop
pop
subb
mov
sbb
and
lahf
pop
loope
test
cwtl
mov
jle
lahf
ds
iret
test
and
pop
sbb
mov
out
jnp
loope
mov
cld
inc
or
mov
stc
sti
or
lcall
add
jg
sbb
mov
mov
inc
or
cmpsl
into
loope
mov
and
testl
shlb
cmp
mov
xchg
mov
movsb
cmp
mov
inc
hlt
push
dec
into
das
in
fisttpl
sub
pop
in
lcall
lcall
add
dec
sbbl
popf
fldcw
xor
out
xor
mov
repz
mov
iret
dec
jns
fs
push
dec
addb
pop
xchg
inc
jmp
mov
pop
and
dec
pop
outsl
jnp
int3
add
push
aam
add
test
cmp
das
bound
pop
or
jnp
xchg
fbld
push
xlat
inc
cltd
lods
imul
pop
testb
dec
jp
aam
adc
sbb
jne
xlat
mov
int3
in
mov
inc
aam
popa
jnp
cmp
mov
jnp
cli
cmp
pushf
xchg
push
pop
jecxz
ss
dec
mov
pop
dec
cmp
xor
sbb
out
sbb
xchg
mov
repnz
int3
ja
mov
ja
mov
cltd
sbbl
inc
and
aad
in
loop
mov
enter
adc
adc
xor
cli
fadd
lds
std
inc
and
xchg
pop
sbb
sub
jle
jae
mov
jbe
xor
xor
stos
xor
imul
pop
out
jmp
push
mov
sub
push
add
cltd
sbb
cmp
push
cmpsl
lds
gs
push
mov
pop
jne
cli
into
cmp
dec
dec
sbb
inc
jmp
push
in
cmpsl
xchg
inc
add
stos
dec
or
fs
push
jno
jns
jge
in
out
adc
jnp
cmp
xor
addr16
in
lcall
imul
ss
lds
rorb
xchg
jb
ja
xor
push
push
adc
jp
xor
scas
ljmp
lods
pop
test
scas
mov
or
push
addr16
popa
sbb
dec
fucomip
add
aaa
mov
and
cmpsl
lret
cmp
std
xchg
jp
jmp
js
mov
xor
or
add
aaa
jmp
adc
fmull
cmp
fistpl
jae
ret
jle,pn
into
mov
notl
sub
pop
and
das
sub
and
jge
xor
fstpt
cmp
dec
xchg
jmp
cmp
add
in
movsb
ret
jp
nop
iret
ficoml
mov
cmpsb
sub
or
ret
jecxz
push
dec
jnp
mov
mov
nop
nop
add
cli
daa
idivb
fcmovu
out
pop
jg
mov
jb
sti
fistl
cmp
xchg
push
sub
sub
rcrl
adc
adc
mov
sti
and
push
adc
test
inc
jp
mov
into
cs
or
or
dec
call
pop
xor
enter
sbb
push
gs
pop
dec
and
mov
adc
js
pop
xor
jne
cmp
std
loope
pop
lea
inc
inc
xor
std
ss
xor
cmpl
jno
cld
jg
mov
mov
fidivrl
sbb
or
xchg
add
packssdw
js
cmp
lods
insb
sbb
xchg
pop
adc
mov
pop
ja
test
ljmp
out
mov
leave
adc
out
pop
inc
scas
pop
aam
mov
mov
repz
jbe
cld
aas
lds
incb
inc
lods
fiadds
adc
mov
aas
mov
jno
roll
adc
lret
inc
ja
cmp
mov
daa
jno
mov
int3
inc
ret
sbb
jle
cli
enter
roll
fisubs
add
cld
mov
mov
insl
xorl
inc
or
pusha
test
mov
scas
aam
in
ret
clc
jno
sub
inc
jo
add
pop
movsb
or
or
xor
add
movsb
mov
add
fldl
cmc
aaa
fwait
les
mov
jb
cwtl
sbb
outsl
sarb
dec
mov
or
or
sbb
imul
movsl
sarb
outsl
pop
pusha
sbbl
add
dec
scas
mov
xor
loope
push
push
movsl
cmp
int3
sub
fcoms
fists
in
xchg
jo
mov
hlt
lret
or
mov
ja
sub
push
pop
loopne
imull
sub
add
bound
out
and
or
bound
inc
repz
fs
jne
mov
jge
cmp
mov
test
aad
cld
add
push
out
cmpsb
gs
das
loopne
cmp
jne
push
sub
ss
adc
inc
sahf
sbb
lods
push
dec
or
jo
aaa
inc
pushl
jl
je
pop
orl
aad
shll
jecxz
testl
nop
xchg
and
stc
adc
lcall
int
dec
repnz
pop
out
iret
mov
arpl
xchg
dec
ljmp
incl
mov
call
ljmp
ja
mov
lahf
sti
xchg
mulb
rolb
notb
mov
repz
pop
mov
ds
movb
shr
mov
sbb
inc
das
adc
fstl
ja
fistpl
sub
loop
mov
push
fisubrl
addr16
pop
xlat
jle
repnz
jl
xor
mov
fwait
ja
jmp
fs
jmp
inc
in
cmp
mov
les
repnz
add
adc
mov
dec
sub
or
mov
test
je,pt
rcll
and
insb
in
cmp
jbe
push
outsb
imul
cli
mov
or
push
ja
sarl
xor
xchg
in
mov
in
cmp
aad
es
mov
sbb
sbb
sbb
jbe
cmp
fwait
sub
test
popa
xchg
test
adc
out
out
stos
mov
call
sbb
daa
mov
fwait
or
push
or
addr16
subl
or
jp
test
rcll
repnz
and
das
sbb
dec
ficomps
xchg
sbb
std
jns
pop
mov
inc
rcrl
stos
test
xor
in
rcll
adc
push
push
push
test
cmpsb
xchg
jne
jg
sbb
lods
push
xchg
and
mov
push
lods
or
and
cmpsl
mov
inc
leave
dec
push
mov
xchg
ljmp
mov
xchg
loop
xorl
add
xchg
jno
or
sbbl
daa
call
fidivrs
lahf
test
ljmp
jbe
adc
sbb
rorl
lea
mov
dec
addr16
fwait
inc
mov
insl
cwtl
mov
in
mov
neg
sbb
and
lret
push
ss
sti
fsubrl
mov
add
mov
jnp
push
and
mov
pushf
sti
push
pop
mov
or
shll
and
pop
or
sahf
cmp
sbb
cmp
sub
adc
lret
decb
mov
or
sub
jle
jno
jge
xchg
xor
lahf
inc
adc
ja
call
into
fdivl
jg
lock
jecxz
in
cmc
ja
loopne
jge
xlat
pusha
popf
push
jns
clc
outsl
movsb
jp
mov
mov
cs
aaa
and
loopne
inc
add
xchg
dec
cli
lret
rclb
mov
aas
push
or
or
shll
pop
cmp
add
jno
imul
mov
aad
mov
mov
push
enter
sub
mov
int
cltd
add
inc
lods
in
ret
mov
repnz
add
cmc
push
dec
mov
xor
xchg
xchg
incb
cmp
push
jmp
mov
data16
xlat
push
xor
cltd
pop
inc
cmp
inc
push
lds
xchg
jnp
jae
notl
nop
jb
adcl
push
add
pop
popf
or
ffreep
cmp
nop
push
xor
cld
lods
push
daa
aaa
dec
sbb
pusha
and
push
mov
mov
sub
sub
in
sbb
sti
leave
sub
push
or
mov
negl
and
sub
add
xchg
push
shlb
pop
sahf
lods
cmp
aam
adc
sbb
insl
data16
and
js
pop
fidivs
and
inc
xchg
loope
inc
outsl
push
pop
or
xor
xor
popf
or
mov
rolb
and
stos
aam
divl
stc
adc
faddl
push
fdivrp
cmpsl
dec
lock
jo
cmp
pusha
cmp
into
and
jge
test
jne
mov
xchg
lret
mull
js
mov
decb
cli
cmp
cwtl
scas
out
sbb
leave
mov
scas
xor
and
add
inc
and
cli
push
jno
and
loope
push
mov
iret
xchg
or
push
and
xchg
lcall
fsubl
or
jp
cmpsb
inc
cmpsb
jb
hlt
iret
dec
mov
lcall
je
test
sbb
dec
std
mov
or
mov
out
jnp
sti
pusha
pop
mov
mov
int
xor
xchg
jne
sti
mov
pop
ss
clc
adc
adc
mov
dec
push
sub
les
xlat
das
fst
lods
sbb
aam
and
cmc
insl
xchg
pop
fsubs
jmp
and
aaa
repz
push
scas
sbb
cli
jbe
aad
dec
cmp
sbb
test
xor
iret
cld
sub
int3
cmpsb
jns
sbb
cvtdq2ps
jge
arpl
push
and
lods
jl
mov
gs
loop
lods
je
push
shrl
sbb
gs
popf
out
add
test
repz
in
in
gs
inc
adc
mov
push
imul
pop
cmp
test
int
movsb
fstpt
xor
insb
testl
push
js
inc
rorl
or
pushf
testb
imul
and
mov
jo
lods
mov
pop
push
stc
sbb
fcomi
rclb
mov
cmp
mov
addr16
jae
cli
out
mov
sarb
into
xchg
pop
xor
xor
movsl
sbb
adc
jb
fists
add
pop
int
idivb
call
fmul
test
in
dec
sub
pop
mov
cs
add
outsb
insb
push
mov
jecxz
lret
xchg
or
mov
and
xor
mov
ror
ret
aad
xor
push
rolb
and
leave
jo
dec
dec
dec
imulb
xor
adc
inc
mov
xchg
and
test
subb
cmp
data16
out
int
sbb
xchg
mov
jmp
and
pop
pop
and
mov
mov
ret
xchg
and
jnp
mov
cs
pop
push
rcrl
clc
in
jns
cld
push
bound
jne
imul
scas
xchg
mov
popf
sub
lea
jecxz
and
rcll
add
jb
scas
jno
or
subl
and
xor
adc
addr16
pushf
push
mov
repnz
das
jp
or
inc
or
subl
sub
cmpsl
aas
stc
rcll
adc
movsb
push
lret
jo
lods
daa
popf
mov
data16
cli
inc
mov
push
xlat
jmp
pop
jae
pop
out
xor
loop
push
in
loopne
addr16
add
rcll
cwtl
add
and
pushf
xchg
fstp
fimuls
divb
rcll
hlt
xor
add
dec
std
mov
cmp
cmc
sub
mov
dec
pop
fcoml
in
or
ja
push
hlt
xchg
push
imul
stos
cmp
xchg
ficoms
sti
mov
add
fidivl
in
and
bnd
jno
mov
sub
and
sub
xor
int3
ljmp
push
sub
inc
ret
out
and
xchg
insb
cmp
jle
lret
scas
mov
leave
lahf
inc
inc
dec
inc
repz
nop
loop
mov
enter
test
loope
int
inc
cld
adc
dec
pop
dec
push
pop
scas
inc
inc
pop
mov
jne
popf
lea
bound
xchg
xchg
pop
lock
mov
ss
fistl
push
repnz
enter
stos
into
notl
outsl
cmp
mov
loope
dec
push
iret
bound
addr16
push
xchg
sbb
add
sub
pop
aad
xor
add
repz
in
sbb
movl
pop
bound
divl
cmp
addr16
and
dec
cld
jmp
popf
sarl
xor
inc
neg
jb
adc
cmc
jbe
pop
mov
fcmovnbe
xor
xchg
mull
jb
sbb
cmpsb
pop
sub
dec
insl
push
ror
sahf
out
lock
push
and
iret
je
fwait
rcll
jb
repnz
lods
call
addb
xchg
push
outsb
pop
into
sub
loop
jb
aad
dec
jbe
add
rcll
nop
adc
dec
daa
pop
adc
inc
sbb
jmp
ret
cmp
leave
push
lods
add
int3
sahf
in
movsl
cli
xchg
ret
out
and
sbb
jne
mov
sbb
insb
cltd
pop
lret
dec
popf
mov
cmpl
out
xchg
pop
insl
sbb
insb
mov
fldenv
cli
mov
mov
addb
pop
enter
gs
push
aaa
test
je
gs
lods
push
lahf
mov
enter
es
sub
aam
xor
mov
cmp
mov
add
mov
fsubs
jnp
jge
mov
xchg
add
sbb
dec
test
shl
fadds
mov
jle
sub
dec
aaa
or
push
ss
jecxz
sbbl
pop
loope
adc
cmp
cmpsb
out
enter
roll
push
xor
inc
aad
jno
jp
xor
das
in
xchg
dec
repz
mov
shrb
jne
insl
adc
pushf
subl
fimull
xchg
hlt
and
ja
jbe
mov
sbbl
nop
fnstenv
jl
xor
shlb
add
ss
adc
in
sbb
lods
cmpsb
mov
mov
mov
movsb
add
adc
nop
dec
sub
xlat
push
and
xor
mov
fidivs
and
cmp
imul
xchg
fwait
cmp
push
push
or
scas
mov
dec
sahf
push
jb
push
mov
mov
and
fsubrs
xchg
push
push
mov
mov
sti
mov
lds
iret
pushf
pop
and
pop
loope
sarb
sti
js
xor
stc
clc
stos
mov
cld
mov
pop
shlb
inc
xor
ljmp
cmp
imul
push
push
stc
and
mov
xchg
addb
jl
ja
jge
jne
fisubrl
sarb
movhps
lods
sub
jmp
leave
testb
inc
iret
hlt
outsb
in
popf
das
sbb
xchg
iret
popf
and
add
push
mov
out
repnz
jle
scas
fsubrs
loope
pop
rcl
xlat
jg
cmp
jmp
std
ret
push
test
ss
xorb
sub
pop
pop
repz
out
in
push
inc
arpl
or
movsl
push
mov
mov
cmp
mov
aaa
aas
adc
prefetch
or
pop
iret
fs
sub
ds
jp
dec
and
lock
cmp
ljmp
mov
daa
lahf
pop
aaa
and
jnp
daa
or
sub
imull
insb
add
mov
dec
adc
cmp
iret
sub
jle
fs
inc
inc
mull
out
ds
test
add
rolb
std
sub
test
in
jbe
mov
je
jp
pop
ficompl
test
or
loop
inc
and
xor
push
rcrl
mov
xor
push
push
mov
sbb
cmc
xor
xor
lds
cmp
push
ret
sar
test
sbb
mov
lret
cmpsb
mov
dec
xchg
mov
cmpsb
test
test
jmp
jne
aam
data16
inc
and
or
ss
jp
movsl
xchg
lret
outsb
sbb
pop
dec
test
std
jecxz
push
cmp
fdivl
mov
imul
jne
ret
and
cmp
mov
mov
jb
sub
xor
jecxz
mov
nop
lahf
xor
or
push
enter
dec
push
cmp
push
cmp
sbb
push
in
cmpsl
mov
xchg
mov
std
mov
sub
jp
pop
decb
in
xchg
and
out
orb
fidivrl
pop
mov
and
mov
xor
push
sub
dec
mov
and
jg
loope
mov
add
jecxz
rol
frstor
mov
dec
movsl
insl
inc
out
jne
sahf
leave
imul
dec
into
arpl
xchg
mov
jecxz
ficoml
inc
mov
cmp
inc
std
sarl
ficomps
mov
pop
leave
loopne
pusha
add
cmp
filds
or
mov
lea
mov
inc
stos
jecxz
leave
xchg
jnp
push
insb
sub
nop
mov
xor
jmp
rep
mov
call
lea
insl
adc
addr16
lahf
popf
fsub
repz
std
inc
fisttpll
pop
jns
imul
dec
jge
xor
movsb
sub
xchg
les
aam
fneni(8087
mov
outsb
fistpl
push
int3
add
call
cmpsl
and
fmuls
inc
js
sbb
jno
aad
add
jae
lret
and
push
or
ljmp
add
scas
loop
xorl
out
add
fsts
adc
out
test
nop
sub
bswap
mov
loopne
rep
loope
mov
ljmp
or
stos
insb
pushf
push
or
jnp
sbb
pop
mov
call
hlt
pop
sahf
iret
cmp
and
insl
xor
lods
in
sub
or
cmp
push
xchg
scas
ja
pop
loopne
and
push
dec
add
bnd
mov
or
add
outsl
xchg
pop
or
mov
cltd
outsl
push
ficoml
add
add
mov
popf
xchg
cwtl
sti
cmp
jg
ficoml
rorl
ja
add
or
inc
cld
add
pop
adc
adc
dec
rcll
rol
pushf
ret
cmp
leave
add
jnp
imul
push
lahf
loopne
mov
adc
xchg
jmp
pop
in
and
pop
mov
mov
mov
jmp
stc
mov
fcmovnb
outsb
rclb
sbb
or
test
out
mov
repnz
stos
inc
shlb
push
repnz
or
icebp
cld
cltd
movsl
clc
pop
cs
adc
adc
or
ja
insl
outsl
push
loope
xchg
test
in
xchg
lahf
adc
int3
iret
add
insb
jno
xor
jo
out
dec
nop
pop
inc
cld
in
not
mov
mov
movsb
sbb
xor
fcomps
pop
popf
nop
orb
dec
sarb
aad
loopne
add
decl
cli
insb
add
sbb
outsb
adc
jbe
into
pushf
sbb
sbb
pop
ljmp
and
ret
adc
mov
and
in
add
xor
inc
fiaddl
cmp
mov
and
rorb
sub
pop
ss
ja
aas
cmp
jae
mov
loop
ljmp
ds
fmuls
repz
mov
or
loope
in
in
popf
stos
xor
sarb
xor
mov
pop
mov
mov
jae
xchg
xchg
popf
jp
sbb
jmp
jae
jp
ror
xchg
push
jp
cmp
sbb
or
fsubrl
sub
call
mov
cwtl
pop
loopne
jp
cmp
stos
cwtl
add
jecxz
decb
push
adc
and
imul
ret
stos
jmp
in
in
pop
sub
dec
lret
pusha
xchg
push
popf
in
mov
addb
outsl
aam
testb
call
push
mov
and
jg
push
fistpll
xchg
into
cmp
sti
push
shll
mov
push
pop
in
and
mov
mov
shlb
daa
adc
lcall
insb
xchg
ds
pop
pop
divb
inc
andl
jmp
xor
int3
shll
lret
inc
mov
or
xchg
imul
lods
mov
out
jns
sarl
mov
jnp
add
cmp
mov
flds
adc
add
sub
pop
clc
xchg
lods
or
jle
aam
addl
push
add
dec
fcoms
inc
xchg
or
and
rcrl
jg
mov
lret
adc
adc
icebp
loopne
inc
xor
cmp
jg
pop
addr16
dec
pop
outsb
test
sub
xorl
jnp
ja
mov
sbb
call
test
cmp
ret
sbb
jne
lcall
stos
hlt
ret
cmp
lds
mov
loopne
inc
jnp
cltd
adc
push
in
mov
xor
mov
je
lret
jmp
xor
iret
push
in
out
xor
mov
loopne
xor
in
sub
mov
push
popa
shl
lea
incb
cld
or
hlt
sub
mov
pop
int3
mov
sahf
in
imul
int3
add
dec
push
xchg
adc
ljmp
nop
arpl
and
cli
cmp
or
mov
fnstsw
imul
idiv
ret
outsb
adc
enterw
sbb
cmp
std
mov
repz
jp
push
and
push
inc
jae
dec
pusha
adc
mov
ds
jge
push
pop
add
mov
in
sbb
xor
inc
les
adc
xlat
scas
outsb
sub
pop
inc
or
sbb
pop
adcl
dec
sub
cli
es
cmp
dec
mov
mov
inc
mov
cmp
mov
jne
cmp
test
cmp
movsb
ljmp
mov
pop
data16
xor
sub
push
push
test
dec
dec
mov
int3
dec
leave
mov
lret
mov
scas
rcll
stos
es
aam
loope
cmpsb
or
int3
pop
mov
int
jno
hlt
add
hlt
or
int
negb
push
pop
and
inc
aam
xor
pop
jmp
fnstenv
jle
sti
xchg
shr
cmp
in
into
aaa
inc
and
xchg
jl
dec
inc
push
xchg
mov
fwait
lods
cmp
sub
fidivrl
scas
cmpsl
outsl
mov
xor
adc
push
or
mov
popf
and
daa
loope
test
xchg
mov
and
xchg
pop
fs
xor
dec
inc
add
xchg
push
push
xlat
sub
cli
dec
dec
cld
sbb
mov
stos
push
in
aad
jnp
dec
clc
dec
cwtl
nop
fsubrs
or
xor
cmp
sub
inc
mov
ja
mov
hlt
push
jmp
pop
adc
pop
mov
scas
and
int3
lods
dec
jge
jge
ret
xor
cmpsl
insl
jns
fs
xchg
movsb
mov
adc
mov
cmp
jno
outsb
mov
outsl
inc
scas
mov
lret
jae,pt
js
dec
imul
rcrl
nop
leave
dec
ljmp
adc
and
add
aas
mov
mov
test
inc
shrl
adc
cmp
jle
or
xchg
pop
ret
ja
add
popa
fwait
jae
loopne
or
cld
bound
xor
jmp
fadd
in
cmc
das
daa
popf
jns
adc
outsl
xchg
add
out
mov
mov
xchg
jmp
ljmp
aas
cmp
roll
pop
negb
movl
and
push
pop
sbb
xchg
sub
xchg
es
push
xor
test
jne
jno
or
mov
xchg
jbe
push
lods
pop
imul
xchg
notb
ret
mov
push
pushf
jp
push
cmc
adc
out
outsb
loopne
loopne
sahf
lds
pop
push
sub
push
leave
xchg
cmp
iret
jae
xchg
lret
aad
inc
lods
pop
and
lods
int3
enter
loop
sub
cmp
inc
mov
rclb
icebp
loop
loop
push
cmpsb
or
add
xlat
cmc
jp
hlt
lret
loopne
and
lods
hlt
jns
mov
dec
xchg
xlat
or
rorb
dec
adc
rclb
or
inc
lds
mov
movsb
or
mov
jne
mov
inc
sub
pop
mov
in
mov
lret
fidivs
outsb
push
imul
jge
sub
mov
aas
push
and
inc
xchg
cmpsb
mov
out
jae
or
mov
mov
shlb
in
jge
mov
fstpt
adc
movsb
mov
mov
jno
inc
dec
sub
mov
jmp
iret
xchg
or
add
adc
or
xchg
mov
pop
cli
stc
mov
pop
jno
idivb
testb
repnz
aas
mov
and
or
mov
ja
in
sub
jle
and
test
movsl
enter
sbbl
adc
ret
icebp
pop
jns
movsb
cli
test
sub
mov
movsb
jae
outsl
into
inc
aam
out
cwtl
add
xor
add
inc
adcl
pop
jecxz
push
and
and
inc
addr16
cmp
inc
inc
adc
or
pop
jnp
movl
aaa
pop
shlb
outsb
pop
lods
xor
bound
xchg
hlt
aaa
addr16
insl
push
loopne
xchg
xchg
mov
push
xchg
imul
push
into
into
pop
lods
sub
push
xor
sub
and
add
dec
lock
and
lods
mov
fucomi
cmp
divb
dec
iret
pop
enter
inc
test
mov
bound
popa
xchg
lock
adc
into
stc
push
arpl
and
sub
jnp
imul
mov
imul
lret
fistps
mov
pop
sar
sub
int
mov
fldt
mov
jno
inc
jl
loop
shll
cmp
stc
sub
daa
mov
dec
sahf
sub
jo
pusha
in
push
int
sti
call
imull
imul
cli
outsl
loopne
popa
dec
pop
aad
dec
dec
inc
jae
cld
push
imul
shlb
fdivl
jle
mov
bsf
bound
push
test
cmpsb
xchg
addr16
inc
shll
mov
fnstenv
sbb
repnz
aam
out
cld
je
stos
ret
into
inc
sbb
clc
jbe
xlat
bound
in
unpckhps
push
pop
lds
xchg
mov
jmp
insl
andl
pop
mov
pop
xchg
fstl
lock
ja
shrb
lahf
xchg
jne
aam
lea
imul
sbb
mov
adc
mov
or
incl
mov
mov
stc
loopne
adc
sbb
fcoml
mov
icebp
ds
pop
xor
and
stos
dec
sbb
fwait
icebp
xor
mov
hlt
add
sbb
subl
test
xlat
lock
jnp
cmp
jb
ljmp
inc
xchg
in
and
gs
shll
pop
jo
jle
repz
loope
jp
pop
mov
add
pushf
pushf
jle
and
pop
and
adcl
xchg
jle
push
pop
cltd
stc
stos
rorl
imul
sub
xchg
mov
shlb
js
or
lret
imul
fadds
nop
cmp
xchg
cmp
dec
scas
xor
fisubrl
icebp
clc
push
dec
test
insb
aad
lret
js
xchg
mov
les
stc
add
jl
mov
inc
ja
or
pop
or
adc
sub
pusha
pop
mov
push
inc
mov
push
popa
gs
xchg
or
ljmp
and
pop
mov
or
imul
jns
cmc
xlat
push
pop
pushf
jo
shrl
mov
pop
cmp
adc
mov
pop
lods
mov
inc
int
pop
push
push
shlb
inc
jl
pop
ljmp
xchg
and
mov
test
loopne
adc
or
mov
add
add
hlt
and
mov
sti
sar
pop
in
xchg
and
or
pushl
push
or
aaa
pop
xchg
mov
adc
fnstsw
outsb
test
lods
in
cmp
lock
pop
mov
push
mov
pusha
outsb
vpmaxud
rcrl
inc
fdivs
dec
inc
mov
test
aas
test
idiv
les
pop
xchg
out
fisubrl
loopne
mov
dec
lcall
jge
mov
test
cmovg
dec
in
dec
imul
and
mov
addb
ds
and
in
orl
stos
fistpll
mov
ficoms
lock
mov
out
sbb
fstpl
test
iret
inc
inc
mov
pop
sbb
rcll
shll
xchg
push
sbb
pusha
fs
mov
lods
lret
cmp
dec
sbb
test
jecxz
jae
sbbb
jo
mov
dec
inc
xor
test
or
inc
and
dec
inc
rcrb
adc
sub
bound
call
aaa
test
fadd
test
or
leave
ret
ds
sbb
stos
add
pop
pop
and
clc
jnp
dec
jecxz
add
fiadds
ljmp
cmc
push
dec
pop
xor
cmc
sub
or
cmp
scas
imul
mov
cmp
push
ret
cli
jbe
sbb
pop
add
cmp
xor
lret
xchg
sbb
aad
adc
xchg
or
hlt
outsb
mov
dec
mov
mov
push
mov
push
cmp
pop
mov
inc
mov
scas
mov
shlb
ror
mov
mov
mov
mov
pop
sbb
ret
sbb
mov
stos
jl
movsb
xchg
vmovupd
leave
mov
or
repnz
inc
fnstsw
sbb
dec
lea
test
sbb
lock
inc
cmc
mov
mov
mov
jno
icebp
sub
mov
lahf
scas
scas
imul
shll
sbb
pop
mov
inc
clc
push
int3
daa
pop
and
pushf
aad
adc
pop
sub
sbb
mov
mov
or
lods
into
cmp
jns
pop
dec
mov
pop
pop
pusha
mov
jmp
or
movsb
outsl
mov
leave
jmp
roll
inc
lret
fsubrl
fcomip
test
mov
jecxz
adc
or
add
push
loop
in
jb
inc
fisttps
cmpsl
mov
sahf
mov
mov
mov
sbb
and
data16
dec
dec
xchg
repnz
or
cmp
imul
pop
insb
in
ret
lds
fs
jl
cmpsl
xlat
test
daa
sar
pop
jb
mov
add
and
or
lea
rorb
in
jmp
pop
jmp
sub
mov
fisubl
xchg
int3
stos
sbb
xchg
mov
sbb
fcmovbe
stc
pusha
and
enter
pop
daa
sub
movsb
out
or
and
repnz
or
pushf
int
jne
sti
lahf
test
outsb
mov
aam
pop
je
insl
in
or
or
ss
movsl
xlat
adc
push
inc
jmp
jne
clc
aas
sub
outsb
je
or
rclb
data16
pushf
dec
mov
std
jbe
and
ret
dec
xor
ja
pop
int
jge,pn
and
insb
mov
movsl
mov
pop
cld
and
push
xchg
sub
mov
and
pop
push
fimuls
mov
loopne
pop
push
inc
jmp
fnstenv
lds
pushf
or
sub
add
in
popa
fcoml
jnp
test
xor
cmp
add
cli
adc
into
int
sti
not
out
into
inc
out
mov
adc
mov
or
adc
xchg
movsl
outsl
popa
sbb
pop
loope
ss
cmp
add
aaa
pop
scas
mov
out
and
push
add
sub
dec
fidivl
imul
sbb
sub
scas
sbb
sub
inc
add
dec
testl
inc
sbb
push
mov
add
adc
pushl
adc
dec
sub
or
pop
cmc
inc
stc
dec
fnstsw
xchg
inc
loope
inc
shll
dec
lret
xchg
mov
xor
repz
add
mov
incb
xchg
add
hlt
aas
sti
mov
jl
into
jb
rcrb
iret
jp
pop
test
test
lods
mov
mov
dec
pusha
or
xor
pop
mov
jmp
push
inc
sahf
and
jno
jg
test
mov
loop
cmp
test
in
popl
push
jb
jp
jmp
hlt
pop
mov
lods
popa
in
add
pop
ss
dec
jl
scas
push
push
mov
xor
int3
cld
cmp
fsubrp
jns
adc
push
dec
jmp
add
andb
je
arpl
call
cld
loop
inc
popf
outsl
gs
push
rcrl
addb
push
sub
loope
push
pop
mov
mov
dec
in
sar
push
mov
stos
imul
mov
cmpb
stos
push
test
jo
pop
xor
jb
daa
xor
icebp
out
jae
imul
jne
and
ret
call
sub
iret
ljmp
mov
pop
xchg
out
fcomps
decl
pop
inc
aas
roll
ja
xchg
test
dec
push
pop
mov
mov
mov
movsb
sbb
xlat
sar
ljmp
cmp
jp
add
sbb
xchg
pop
idivb
sub
scas
dec
push
xor
shrl
in
das
outsb
shrl
test
scas
testl
push
xor
dec
hlt
inc
push
dec
push
mov
add
sbb
fadd
fmulp
mov
gs
dec
clc
aam
lcall
cli
mov
or
stos
pop
in
dec
stc
sbb
jl
dec
pop
jo
scas
call
pop
in
pop
add
outsb
divb
popf
and
jb
add
push
pop
ret
sbb
xchg
dec
insb
push
xchg
mov
ds
jbe
les
xlat
push
scas
nop
jmp
or
and
out
sbb
movsl
jl
cs
lahf
movsb
mov
and
inc
and
and
cmp
push
cmp
movsb
pop
in
mov
out
orb
repz
mov
in
and
nop
fsubl
mov
shll
jg
hlt
jno
mov
in
ds
sahf
cmp
cmpl
ror
fdivrp
iret
mov
sub
test
push
loope
jb
adc
add
repz
sbb
and
sahf
rcl
ss
push
push
iret
inc
gs
mov
lcall
xor
inc
mov
mov
int
dec
dec
push
dec
pop
adcb
inc
xor
pusha
jae
pop
push
pop
xor
lret
push
insb
sarb
mov
stc
movsl
sbb
add
leave
mov
rorb
or
scas
jmp
incl
jbe
fmull
clc
jge
fwait
adc
mov
dec
bound
xor
daa
jae
mov
incb
sahf
adcl
xchg
mov
jmp
aad
add
mov
sbb
pop
bnd
dec
sub
mov
cld
jb
jb
xor
mov
out
xor
pop
sti
mov
jno
push
mov
into
dec
xchg
sbb
test
insb
faddl
xchg
loop
or
shlb
sbb
mov
pop
mov
mov
rcll
divl
jb
mov
test
into
scas
or
pop
adc
xchg
enter
lds
cmp
pop
or
jl
and
test
push
dec
das
or
xchg
cmpsl
sub
leave
xchg
push
ja
cmp
js
gs
in
mov
daa
jmp
aad
push
ja
jmp
push
int
inc
pop
ljmp
sbb
fildll
dec
shlb
test
push
inc
insl
shll
add
imul
lcall
scas
and
setb
xor
adc
imul
adc
aaa
jecxz
sti
arpl
not
adc
push
xchg
or
push
fs
mov
mov
bound
cmp
xchg
fcoml
mov
inc
mov
es
inc
pop
sbb
jmp
mov
in
shll
insl
and
repz
mov
sahf
jne
in
imul
or
or
jmp
iret
stc
inc
pop
jle
mov
fwait
xchg
test
loopne
int
je
push
push
cmc
mov
xchg
ds
je
sub
repz
push
jle
sub
int3
out
std
movsl
sub
cmp
xchg
fsubs
mov
or
mov
mov
test
bnd
sbbl
lods
icebp
jbe
add
pop
push
push
test
pop
test
stos
fdivrl
dec
sbb
cmp
pop
mov
inc
inc
inc
fisubs
pop
stc
dec
jbe
leave
inc
nop
jl
ficoml
fnstcw
mov
jecxz
sti
lret
inc
gs
in
imull
xor
dec
fists
lods
lcall
pop
inc
xchg
cmp
inc
mov
xor
pushf
stos
and
jne
jae
xchg
or
daa
or
in
iret
jae
mov
cmpsl
loope
xor
pop
lods
xchg
pop
or
mov
ds
test
and
pop
mov
dec
aas
xlat
adc
add
xchg
sti
or
jp
or
add
cmpb
jae
daa
and
stos
fldt
mov
sbb
call
mov
push
jns
subl
jle
and
push
and
mov
dec
test
ds
test
sub
mov
mov
rcl
cltd
xchg
mov
adc
lcall
xchg
outsl
movsb
stos
and
xor
imul
adc
sbb
sbb
dec
xor
pushf
pop
xor
jns
push
push
std
clc
mov
jne
test
pop
prefetch
or
out
mov
add
sub
hlt
orl
int3
mov
lahf
loope
xchg
dec
add
repnz
repnz
jg
js
push
jne
jns
jg
insl
mov
cmp
ss
jl
pop
mov
push
adc
ret
setne
outsl
dec
js
cmpsb
xorl
dec
add
adc
sub
repnz
mov
xchg
dec
aad
cmp
test
and
cmp
lods
push
pop
aaa
out
push
clc
add
loope
dec
mov
fistl
decb
fchs
outsb
fimuls
jp
push
mov
ss
xchg
iret
pop
and
sahf
bound
add
mov
mov
lea
in
inc
std
es
faddl
mulb
mov
jg
test
sbb
push
int3
lret
jg
dec
add
mov
dec
jo
push
lahf
push
fcomps
push
enter
bound
sbb
lret
sub
xchg
insb
xor
mov
cmp
enter
pop
out
cmp
cmp
popa
icebp
ret
cli
xchg
dec
and
mov
rcrl
ds
roll
jg
andb
dec
xchg
cmp
lock
sbbb
sti
mov
cmp
aad
sbbl
arpl
mov
pop
mov
mov
sbb
fucomi
and
das
ljmp
pop
movsl
pop
adc
mov
orb
mov
adc
pop
xchg
stc
pop
icebp
or
mov
dec
shrl
cmp
push
sub
mov
xchg
push
repnz
cli
cmp
mov
js
xchg
pop
bndldx
or
dec
enter
xor
pop
add
insl
fdivrs
jle
sbb
movsb
push
in
xchg
and
stos
pop
xor
pop
aaa
adc
stos
mov
int
sbbl
lahf
into
lahf
test
pop
fwait
cld
les
mov
mov
dec
adc
xorl
mov
sub
dec
mov
lea
xor
stc
pop
adc
push
pop
cmpsb
jmp
loope
ljmp
mov
lea
jle
ret
das
jle
into
imul
popf
iret
int3
jno
inc
xchg
pop
insl
dec
mov
mov
aad
mov
imul
fcoml
enter
in
jnp
pop
arpl
sbb
les
mov
aam
call
aam
or
in
pop
daa
sub
adc
cmp
jae
hlt
or
mov
fld
pop
aas
fldcw
and
ss
or
dec
inc
adc
adc
clc
je
dec
inc
pop
cmp
adc
std
jns
fucom
aas
mov
mov
mov
repz
adcb
cmp
mov
lahf
pop
xor
fiaddl
jle
pop
mov
mov
orl
add
inc
jns
leave
shl
and
cmp
xchg
sub
shll
inc
dec
leave
scas
cld
and
jo
pop
mov
outsb
jle
xchg
pop
in
adc
in
or
lahf
stc
mov
or
rcrb
jp
popf
pop
xchg
xchg
dec
pop
and
cmp
xchg
ret
addl
sbb
xchg
pusha
jne
sub
push
rsm
nop
sub
or
sahf
mov
push
std
call
and
rcrb
shll
mov
lea
loope
push
lahf
orl
sbb
stos
cmp
jne
fsts
push
mov
lret
dec
ljmp
adc
test
gs
fbld
sti
mov
lods
dec
lods
add
out
incb
mov
and
pop
in
inc
lret
nop
xchg
dec
xchg
dec
cmp
sti
cmpsl
jbe
fdivrs
sbb
mov
xlat
test
jno
lahf
aam
push
int
mov
shl
aaa
shlb
ficompl
repz
adc
sbb
cs
into
push
pop
lret
inc
cli
cmpsl
in
ficoms
sbb
pop
cmp
jmp
jns
xchg
ljmp
ja
imul
sub
jnp
cmp
push
inc
sub
pushf
cld
inc
es
mov
jmp
mov
je
cmp
rorb
xchg
clc
icebp
scas
movsl
xchg
mov
mov
test
adc
jnp
adc
cmpsl
mov
sub
xchg
lods
jp
sbb
jb
push
cs
dec
enter
push
subl
mov
sbb
fcomps
inc
inc
sbb
mov
in
jge
cltd
jne
sbb
mov
insb
ds
lock
cltd
fildl
xor
in
xchg
jle
repz
dec
jae
enter
lock
popa
idivb
mov
call
lods
fiadds
insb
jno
sahf
and
dec
mov
or
inc
je
xor
xchg
insb
add
cmp
inc
dec
scas
mov
mov
mov
mov
fwait
xchg
inc
aas
stc
aas
ja
scas
repz
data16
xchg
cmpsb
pop
and
sahf
andl
mov
adcb
mov
call
hlt
ljmp
subl
cwtl
ds
or
push
xor
popf
adc
fadds
outsb
movsb
xor
add
mov
xchg
xor
mov
loopne
sbb
lds
aam
sub
adc
mov
test
sbb
mov
scas
inc
xlat
cmp
xor
xor
pop
mov
in
mov
cmp
cwtl
inc
lods
and
sbb
ss
cli
inc
sbb
pop
test
xchg
adc
sbb
sbb
hlt
adc
xchg
je
push
or
xor
xor
jo
inc
adc
std
loopne
sbb
mov
lock
mov
sbb
inc
xchg
pusha
lcall
mov
mov
dec
adc
inc
iret
push
fst
insl
jnp
and
adc
jbe
jb
xchg
adc
movsb
loope
fisubrl
jns
mov
add
ja
inc
pop
inc
sbb
cs
lret
leave
jp
call
flds
filds
xor
or
ret
arpl
mov
mov
sub
pop
jp
xor
mov
inc
out
out
imulb
hlt
cmpl
jge
mov
cmp
into
jmp
cmp
xor
scas
mov
test
mov
jmp
pop
dec
fists
dec
and
pop
xchg
popf
cmp
push
sbb
xchg
mov
iret
sbb
pop
dec
jecxz
mov
add
xchg
or
lret
or
lahf
and
lds
jecxz
xor
std
sub
icebp
lahf
aam
aad
rclb
cmp
jae
aaa
jp
inc
push
imul
inc
aaa
stos
outsl
mov
pop
jge
das
int3
xlat
loop
movsl
ljmp
in
and
xchg
lea
shlb
xchg
mov
insl
sar
ja
xchg
inc
xchg
fnstsw
addl
ss
insl
xchg
sub
jg
inc
jb
ja
movsb
jno
push
push
adc
ja
sbb
lods
jge
inc
pop
stos
pop
push
jbe
xor
pop
jbe
js
sbb
xorl
aam
xor
dec
popa
push
mov
xchg
out
in
pop
leave
jl
iret
jg
rcr
dec
aam
dec
call
in
inc
and
sub
xlat
cmp
outsl
es
push
inc
cmp
out
int
xchg
sbb
and
arpl
sub
iret
imul
sub
mov
aad
mov
xchg
and
push
fnstenv
dec
sbb
bound
sub
push
push
scas
pop
xorb
outsb
std
inc
fdivrp
andl
or
nop
jno
ds
jbe
mov
frstor
nop
fstps
call
pushl
pop
xorl
add
ds
mov
fwait
or
insl
rol
ja
fdivp
lcall
fiaddl
jnp
subl
xor
push
cmpsb
xor
dec
fs
or
pushf
inc
mov
cmp
xor
cmpl
mov
ret
xchg
addr16
mov
cmpsb
add
sbb
and
movsl
dec
cmp
mov
adc
jnp
rol
fwait
jnp
push
scas
fs
mov
pusha
daa
cli
push
mov
adc
call
push
jbe
repz
jnp
sbb
jns
mov
push
jns
pop
dec
hlt
outsl
outsl
and
les
js
mov
stos
add
mov
mov
pop
fldpi
in
out
mov
xchg
or
sub
dec
test
ficoms
cmp
rcrb
popf
add
inc
aaa
in
push
cli
mov
sub
test
sbb
outsl
pop
fwait
or
pop
cmpsl
hlt
mov
popa
pop
outsl
lods
sbb
outsl
cmp
jnp
sahf
fwait
push
xor
mov
push
sub
ss
xchg
in
xchg
adc
xor
mov
inc
jo
or
xor
inc
hlt
in
add
daa
push
stos
xchg
movsb
adc
leave
xchg
mov
divl
sub
ljmp
je
add
pop
fs
shrb
into
popa
mov
pusha
push
cld
testl
cld
push
shl
pop
ret
stos
adc
in
xor
js
add
add
adc
xor
push
cmp
scas
or
ror
rcll
add
loope
test
and
or
mov
popf
pop
ja
push
daa
andb
int3
and
xchg
out
in
add
sub
adc
pop
mov
mov
addl
and
dec
inc
push
mov
ja
push
ds
push
mov
lret
std
jo
xor
cmp
orl
mov
clc
pop
les
cs
lods
incl
jle
js
jns
mov
int3
cmpsb
dec
out
and
movsl
pushf
dec
sub
in
mov
dec
xlat
push
and
das
arpl
aaa
inc
mov
cmp
aaa
popf
fwait
insb
inc
dec
loopne
pop
insl
out
mov
shll
ds
in
add
and
or
rorl
xor
lret
imull
mov
mov
xorl
xchg
or
cmp
sbb
mov
jle
xchg
out
test
cmpsb
mov
inc
jbe
popa
arpl
call
mov
pop
data16
and
add
pop
stc
popf
mov
dec
scas
xor
push
aas
mov
add
xor
dec
add
rep
mov
push
dec
sub
push
mov
repnz
mov
in
incl
sbb
sbb
lea
cmp
adc
jb
mov
out
add
xor
stos
xor
iret
sti
dec
popf
xchg
push
mov
cmp
mov
jno
or
enter
push
jae
mov
lods
and
lock
push
adc
in
cltd
pop
stc
jo
cmpsb
push
bound
add
push
cltd
rclb
scas
mov
call
or
les
mov
rolb
out
call
mov
jmp
ds
outsl
jne
jecxz
mov
movsb
xor
adc
xor
nop
cmp
xor
mov
mov
mov
sbb
add
adc
out
mov
pop
popa
cmp
outsl
lds
push
orb
push
enter
ret
pop
out
xor
jae
xor
add
mov
loop
or
or
call
data16
mov
xor
ja
shl
pusha
xchg
push
or
mov
enter
leave
push
mov
xchg
sub
adc
xor
iret
push
xchg
push
das
push
aas
xor
outsb
push
add
insb
mov
out
or
and
xchg
xorb
cmpsb
jmp
jle
xchg
fdivrl
jbe
fistpll
or
rcl
dec
push
fwait
incl
or
mov
pop
mov
insl
sub
dec
xchg
loop
cmp
push
pushf
rorl
push
scas
mulb
popf
or
and
mov
sbb
test
cmpb
or
mov
xchg
dec
in
jmp
insl
and
mov
stos
shll
cmp
ljmp
push
gs
or
push
pusha
sub
dec
int
ds
add
daa
pop
cmpsb
xchg
test
call
xchg
mov
rorb
jp
add
and
inc
pop
mov
sbb
mull
imul
pop
xchg
into
lds
frstor
xchg
adc
shlb
adc
xor
imul
jg
mov
fsubrp
adc
mov
ficoml
sub
mov
mov
pusha
dec
sbb
das
sahf
inc
and
outsl
dec
aaa
adc
jo
add
xchg
and
mov
cmpsl
inc
mov
inc
arpl
shlb
xchg
mov
push
repz
nop
das
jecxz
pop
push
pop
xchg
or
mov
in
lahf
pop
sahf
xchg
inc
sbb
pop
insl
repz
mov
jnp
divb
push
scas
fs
ds
inc
sti
mov
fadds
sbb
mov
xor
out
imull
cmpsb
hlt
sub
push
imul
mov
mov
mov
aaa
sub
sbb
jb
push
jl
mov
loope
gs
jmp
cmp
movsb
xor
pop
xlat
or
push
in
ja
repnz
mov
mov
lahf
popf
mov
jecxz
das
push
push
push
pop
adcb
mov
push
pop
push
mov
test
dec
pop
fwait
mov
push
clc
sbb
lods
das
mov
shlb
loop
shrb
outsl
orl
push
hlt
sub
lods
pop
imul
jae
xchg
dec
dec
sahf
enter
cltd
sbb
ud0
cmpsb
cmp
out
ss
xchg
mov
mov
nop
out
mov
mov
and
or
jmp
aad
mov
fldcw
pusha
rcrl
jb
sub
mov
in
lret
mov
mov
nop
js
xchg
cwtl
dec
cmc
jo
sub
in
lods
cmpsb
fidivl
fldl
push
outsl
into
push
sbb
subb
pop
pop
stos
divl
andb
sub
cmp
xorb
push
and
or
data16
pop
cmp
lahf
sbb
push
mov
cmpsl
pop
inc
sub
iret
and
rsm
xchg
jp
and
pushf
lcall
xor
fisubs
nop
dec
xor
xor
rcll
push
and
push
and
add
lahf
sahf
daa
inc
push
inc
adc
cmpsb
pusha
out
push
mov
adc
mov
nopl
fcompl
jo
dec
mov
aam
rorl
pshufw
cld
out
test
mov
xchg
cmovb
aam
cmp
mov
ss
push
pop
cmp
fsts
nop
adc
movb
test
and
enter
dec
mov
push
inc
bound
add
fstpl
lret
inc
sbb
mov
and
out
aam
mov
mov
add
daa
and
mov
clc
jmp
add
rclb
dec
adc
xorb
popa
fdivrp
mov
roll
jno
fwait
shl
int3
add
sbb
sbb
xchg
int3
xchg
loop
outsb
subl
jmp
insl
loop
mov
inc
mov
shlb
sub
rcl
out
sbbl
adc
xor
roll
in
fmuls
jle
xchg
pop
js
repz
je
pop
xchg
add
subl
inc
mov
icebp
into
jle
fisubrl
xchg
in
dec
sti
and
inc
es
roll
inc
setb
dec
rorl
pop
inc
mov
pop
sti
mov
fisttpl
cwtl
sub
dec
std
dec
push
adc
jmp
adc
mov
in
je
push
push
and
arpl
fstpl
lock
cli
adc
xor
gs
add
mov
cmp
sub
in
test
lret
cmpsb
mov
pop
jbe
pop
pop
pop
orl
sahf
dec
mov
jl,pt
or
jne
divl
mov
loop
sti
ret
dec
add
cmpsb
fisubs
push
push
cmp
lret
push
xor
mov
lahf
mov
jmp
or
lcall
or
sub
enter
sub
mov
testb
inc
fs
jge
andb
inc
adc
pushf
jge
pop
cmc
or
outsb
jnp
repz
sbb
pop
add
rorl
xor
cli
imul
push
in
lcall
movsb
fisubrs
sub
scas
xor
mov
enter
cmc
call
repnz
in
mov
adc
fwait
int
fistl
in
incl
inc
ret
push
inc
pop
scas
jecxz
xor
and
lret
xlat
mov
or
add
cmp
sbb
xchg
cmp
mov
or
inc
add
jecxz
push
mov
mov
inc
out
inc
sbb
dec
sbb
jne
into
scas
daa
jp
lods
mov
das
idivb
call
out
pop
xchg
or
mov
shlb
iret
pusha
popf
hlt
mov
loope
shll
arpl
stc
mov
arpl
pop
push
sub
fsub
xchg
hlt
gs
mov
and
das
enter
fldt
adc
sbbl
movsb
ljmp
add
and
sub
dec
mov
xor
into
adc
sbb
repz
das
adc
clc
mov
mov
fstp
jge
aad
and
fimuls
roll
mov
imul
lcall
sbb
pop
sub
stc
lods
lods
jl
rcll
and
and
cmpsl
sub
mov
cmp
ret
sub
xor
sbb
mov
jmp
in
cmp
mov
mov
mov
mov
push
rolb
xlat
insl
xor
ss
outsb
scas
movsb
test
sbb
mov
add
sub
gs
pop
ljmp
sbb
cltd
mov
aam
lcall
ds
mov
xor
sahf
call
daa
xchg
das
stc
dec
cmp
adc
dec
ret
dec
test
leave
outsl
lea
add
fs
cmp
sarl
jns
jmp
jmp
hlt
fstl
and
dec
mov
pop
sbb
adc
cmp
pop
mov
add
pop
int3
scas
mov
das
je
sub
jle
leave
pop
and
in
in
adc
cmp
cmp
xchg
mov
fdivrl
jl
add
push
stos
int3
push
dec
add
xchg
test
scas
cwtl
jg
push
mov
loope
lods
ret
sbb
mov
mov
jmp
mov
ljmp
push
leave
imull
loope
sbb
mov
add
sbb
inc
jo
push
and
bound
inc
mov
in
rcll
sbb
in
mov
ljmp
xchg
mov
in
stos
inc
inc
lds
loope
push
je
xor
std
jno
add
in
jo
or
sti
cmp
adc
sub
rclb
rcr
mov
das
rcl
testb
icebp
xchg
cmp
cmp
out
in
roll
iret
je
cmp
pop
popa
add
and
and
mov
sub
jnp
aam
mov
and
inc
cwtl
pop
hlt
jecxz
or
xchg
pushf
shlb
out
fnstenv
fldt
mov
mov
mov
cld
iret
mov
in
lods
jns
sbb
loop
or
sbb
sub
into
mov
inc
sbb
into
arpl
dec
lods
shlw
ret
pop
dec
jecxz
je
pop
out
pushf
faddl
stos
adc
cwtl
jge
xchg
mov
add
push
out
adcb
in
inc
hlt
scas
add
adc
dec
push
cltd
jo
xchg
ds
sbb
xchg
xchg
ficoml
mov
mov
and
push
dec
or
ffreep
and
xor
inc
push
and
lcallw
int3
leave
shlb
fmulp
fbstp
xor
stos
jbe
fmull
fwait
or
fcmovbe
mov
xor
pop
cmpsb
jnp
push
in
aaa
test
push
sbb
popa
pop
lods
loop
inc
mov
icebp
dec
hlt
mov
pop
fs
movsbl
or
cmpsb
lods
sub
inc
neg
popf
push
pop
pushf
sbbl
mov
mov
gs
jmp
clc
cmp
jge
cli
inc
mov
inc
and
cld
call
add
call
cmpb
scas
and
andb
insl
sbb
popa
arpl
int3
and
out
in
movsb
mov
cmpsl
xchg
outsb
xorb
into
loop
enter
stos
pop
jecxz
pop
repz
sarl
pop
loopne
mov
mov
frstor
addl
dec
fcomps
xchg
in
ja
xor
sbb
lds
mov
push
or
imul
ficompl
or
cmp
jp
pop
mov
xor
pusha
cmp
adc
shrb
pop
push
pop
insl
testl
cld
adc
push
iret
popa
movsb
scas
add
popa
pop
sub
push
hlt
jmp
xor
daa
nop
cmp
lret
hlt
clc
enter
bound
daa
cmp
lahf
mov
icebp
daa
push
add
cmpsb
and
hlt
and
push
mov
jno
dec
shll
or
in
sub
mov
push
adc
push
insl
std
and
xchg
jmp
lods
fldenv
int
push
ljmp
cmp
jle
les
movsbl
outsb
in
repnz
insb
imul
xchg
push
daa
mov
dec
inc
into
nopl
xchg
dec
cmp
mov
in
push
pushf
leave
rolb
repz
cltd
daa
sbb
cltd
lods
xor
lret
cmp
or
ret
mov
aam
xchg
push
dec
dec
jne
adc
inc
leave
sub
lahf
mov
aaa
sahf
pop
je
outsb
outsl
test
sbb
fcmovnb
xor
inc
je
rcl
mov
fs
sub
std
xor
cmc
add
jns
adc
rorl
std
fwait
mull
jl
mov
in
