into
jnp
add
add
ret
outsb
mov
iret
jae
cmp
or
push
sbb
sbb
push
repnz
aad
loop
es
psubsb
xor
pop
rorl
bound
mov
push
aas
mov
sub
ret
gs
mov
movsb
add
insl
rcrl
jp
or
lock
fsubr
and
adc
cmp
loope
jp
push
dec
in
mov
xchg
mov
rorb
fistpl
push
icebp
insb
jns
push
mov
mov
data16
mov
cmpsb
or
loop
ds
stc
imul
xor
stos
push
xchg
push
mov
mov
pop
push
sub
ljmp
jmp
push
test
rol
push
fadd
add
sbb
or
leave
repz
cwtl
xchg
fcoml
jmp
popa
ret
add
xor
mov
fs
ja
mov
sets
dec
inc
jmp
mov
adc
cmp
pop
xchg
add
shll
push
jg
dec
xchg
cwtl
jg
xor
pop
in
jae
pop
mov
sbb
int3
xor
or
dec
ds
bound
ret
imul
andl
call
pop
pop
xchg
hlt
cmp
popf
and
out
jb
push
push
jmp
es
mov
popa
dec
cmpsb
aad
xor
cmp
mov
mov
pop
sub
dec
push
divb
insb
sub
outsb
scas
push
lock
std
std
out
imul
mov
inc
in
fadd
enter
imul
adc
lret
and
mov
in
or
adc
add
ljmp
xchg
loope
and
pop
cmpsl
les
push
xchg
in
xchg
push
data16
add
inc
mov
out
int3
dec
xor
add
jmp
adc
inc
pusha
lea
jae
push
pusha
call
pushl
mov
mov
pusha
pushl
ret
jmp
fs
jae
push
mov
mov
dec
pusha
jmp
call
test
add
jmp
pushf
pushl
movl
pusha
pusha
lea
jp
push
push
push
pushf
pushf
lea
jmp
dec
nop
pop
idivb
push
xchg
sub
inc
mov
dec
mov
rcll
dec
pop
xor
jg
pop
cs
in
das
adc
pop
xchg
test
adc
arpl
lret
out
cmp
adc
adc
mov
hlt
jecxz
stos
fstl
mov
inc
add
das
push
mov
jae
faddl
scas
ds
and
push
mov
in
add
repz
cmp
bt
cmp
pusha
pusha
call
mov
sub
cmc
cmp
lea
jge
pushf
mov
pusha
lea
ja
pushf
pushf
pushf
jmp
push
movb
pushf
movl
pusha
lea
jmp
call
mov
stc
mov
call
push
subl
cmpsb
adc
sti
add
loope
mov
insl
hlt
orb
or
sub
mov
in
aaa
loopne
rcrb
dec
fiadds
push
das
xor
mov
mov
popf
or
das
xor
insl
pusha
lcall
loopne
pusha
jmp
repz
mov
pop
mov
sub
mov
jecxz
enterw
push
loopne
push
call
jmp
jmp
setle
dec
clc
cmc
rol
ror
mov
jmp
adc
mov
mov
mov
mov
pushl
ret
pop
mov
mov
fcmovb
jle
dec
dec
mov
adcl
cmp
mov
push
add
cmc
loop
adc
clc
jno
sub
mov
jmp
xchg
clc
ljmp
xlat
arpl
ss
hlt
rolb
jp
cmp
mov
scas
mov
xchg
push
clc
cmp
fsubl
movsb
stc
aad
jecxz
addr16
jle
outsl
lahf
add
clc
das
lods
js
jl
xchg
in
fucomp
cmp
es
movsb
sarl
jg
ficoml
sbb
in
mov
frstor
mov
pop
mov
jb
lea
mov
out
fidivl
push
push
lahf
shl
xchg
mov
pop
sub
mov
sub
cmc
std
aam
lcall
jp
aam
pop
cmp
fimuls
es
shll
jno
in
icebp
pop
jl
nop
dec
movsb
clc
cmp
or
sub
dec
call
cld
cmp
jo
pusha
cmp
lahf
xor
enter
jp
inc
jle
jecxz
das
add
mov
inc
cmp
inc
dec
dec
adc
insb
add
rclb
jmp
ljmp
cltd
or
push
lea
jne
rol
mov
pusha
pushf
stc
cmp
mov
pusha
push
call
adc
rcll
jno
jmp
adc
repz
mov
popf
pop
aam
xlat
cmpsl
adc
xchg
pop
jo
movsl
adc
and
push
lret
pop
pop
mov
inc
ja
adc
and
sbb
pusha
fs
jb
fistl
pop
pop
pop
imul
addr16
jne
sbb
iret
data16
pop
stos
and
pop
push
xor
cmp
addb
push
mov
pop
lock
push
and
cmp
pop
jno
pop
dec
jb
lret
ljmp
insb
arpl
lds
adc
ljmp
mov
jbe
cmp
movsl
mov
or
jle
push
scas
push
in
inc
repz
data16
sbb
sub
pusha
and
sbb
xor
lock
jbe
push
lret
inc
add
hlt
jb
mov
push
stos
cli
popa
jbe
xchg
mov
xchg
xchg
and
mov
jl
popa
mov
add
sub
or
pop
jle
shrl
loopne
js
popa
aad
bound
pop
or
test
sub
lods
mov
adc
mov
push
push
cmp
sub
pop
jne
das
mov
jp
jno
cli
sub
repz
and
cmpsl
adc
mov
loopne
mov
add
and
push
push
push
mov
mov
ja,pt
mov
or
fidivrl
push
sub
and
xor
sbb
pushf
push
sarb
xchg
pop
sub
inc
ja
adc
push
cli
mov
fsubl
xchg
sub
xchg
in
pop
gs
adc
shrb
mov
or
push
fs
inc
sbb
dec
ljmp
ret
out
pop
fstpt
repnz
or
insl
jno
lods
pop
ficomps
cwtl
cmp
pop
xchg
clc
add
push
jo
pop
push
mov
fildl
fiaddl
rorb
clc
cmp
fstpt
jb
mov
or
mov
xor
pop
dec
dec
daa
imul
lret
cmp
jecxz
xor
popa
test
push
cmp
aaa
lock
sbb
aas
fcmove
mov
xchg
mov
dec
jo
bound
mov
adc
frstor
jno
sub
sbb
pop
cmp
fstpt
rolb
mov
mov
arpl
sub
dec
clc
call
sbb
insl
clc
pop
sub
mov
mov
push
js
inc
aam
int3
dec
adc
mov
cwtl
cmp
lcall
mov
lock
std
and
mov
fbld
inc
mov
mov
fnstcw
xchg
pop
mov
fucomp
xchg
fyl2xp1
mov
sub
push
pop
cmp
lcall
jp
lods
push
pop
pusha
cmp
daa
sahf
push
shll
lock
nop
push
mov
outsl
cmp
jnp
mov
and
mov
adc
andl
fwait
mov
mov
jo
push
je
out
xchg
sbb
mov
aam
cltd
sarb
pop
int3
mov
pop
mov
mov
inc
mov
fiadds
add
inc
dec
outsb
fisubrs
aas
data16
xchg
sub
mov
jno
and
jl
dec
pop
push
bound
jmp
gs
sbb
es
mov
and
xor
pop
inc
test
popf
push
xchg
cmp
std
add
pop
xchg
filds
mov
bound
cmp
insb
pushf
dec
mov
mov
les
in
and
mov
mov
ficomps
fstpt
out
int3
cmp
push
in
xor
shl
xchg
sub
nop
das
add
sbb
sub
and
aaa
dec
pop
or
sub
lcall
lcall
outsb
sbb
jnp
dec
es
je
sbb
jge
andl
sbb
lcall
add
gs
lods
push
sub
rcll
push
je
and
mov
js
rclb
loope
xor
das
push
mov
ss
test
outsb
fs
pop
pop
dec
int3
mov
insb
mov
ror
dec
cmp
cmp
stos
es
xchg
scas
daa
ret
bound
out
push
adc
fildl
ja
pushf
push
gs
sub
push
jbe
add
lret
ud0
mov
mov
sub
or
mov
pop
push
push
xorb
cmp
add
and
sub
mov
insl
imul
push
ds
inc
jle
xchg
jb
add
push
mov
div
xor
lods
stc
mov
mov
rcl
jnp
sub
js
into
movsb
rcrl
xor
push
cltd
push
enter
jle
xchg
mov
fstl
pop
mov
mov
sub
leave
js
sub
mov
mov
xchg
stos
inc
mov
enter
inc
mov
mov
jno
das
movsb
adc
jp
mov
jne
inc
xor
and
lret
ljmp
insl
push
inc
hlt
stc
enter
out
out
cli
cs
xor
loop
pop
jp
jae
adc
loop
xchg
scas
repnz
or
sbb
lock
jge
addb
lods
bound
jno
sub
cli
lahf
je
adc
enter
adc
inc
push
mov
outsl
jb
pop
sub
cmpb
ror
xlat
loop
bound
mov
js
pop
mov
jmp
dec
pop
pop
dec
jb
sbb
adc
sahf
xchg
adc
jmp
mov
inc
pop
or
ss
jg
fsub
nop
cwtl
sub
or
or
int
sub
dec
lea
bound
in
pop
es
jl
repnz
fsub
xchg
dec
std
mov
cmp
jo
lods
and
dec
ret
mov
lret
aam
jp
jp
sub
xchg
pop
mov
inc
jle
int
or
xor
push
sbb
lcall
mov
or
inc
push
pop
pop
repz
sub
push
ficompl
inc
pop
push
or
or
pop
in
sub
hlt
insl
push
push
ljmp
ljmp
repz
and
out
mov
adc
gs
jb
lods
mov
fistpll
clc
adc
leave
mov
mov
mov
fisubrs
xorl
adc
add
jnp
xchg
dec
mov
imul
add
clc
es
push
jae
sbb
push
lcall
stos
or
and
stos
test
mov
xchg
mov
lahf
test
mov
subb
cld
or
xlat
inc
mov
in
pop
jnp
jbe
xchg
fistps
xchg
dec
mov
or
cli
pop
bound
inc
movsl
lock
xor
xor
fsubrp
inc
mov
ret
cmp
xchg
or
sbb
dec
pop
jl
mov
aas
mov
aas
mov
pusha
sub
test
or
cmpsb
sub
scas
dec
test
iret
inc
push
jp
mov
mov
mov
daa
lea
outsb
sbb
ds
sub
mov
ljmp
xlat
loop
sbb
jbe
mov
loop
dec
jecxz
fistpll
bound
popa
jnp
xor
sarl
mov
stc
enter
adc
test
and
mov
arpl
jo
push
mov
jno
inc
jne
jns
cltd
jb
popf
and
jp
push
ror
icebp
pop
insl
pop
ss
leave
cmpsb
cli
loope
fnsave
jg
pop
stos
and
sbb
ficomps
jmp
lds
lcall
dec
jl
lret
mov
push
ja
jge
ficompl
insl
cmp
int3
inc
rcrb
inc
cltd
or
xchg
xchg
sub
iret
jp
xor
in
test
fisttpl
in
outsb
jp
pop
push
mov
fs
xchg
lcall
fiaddl
cmp
movsl
fs
add
mov
insl
sub
pusha
cli
fsubs
adc
mov
pop
push
daa
std
push
push
and
pop
jp
hlt
cmp
mov
enter
cs
add
push
and
inc
sbb
xchg
repnz
outsl
sub
mov
jmp
mov
nop
mov
sub
jbe
clc
inc
inc
dec
out
jg
pusha
push
pop
xchg
daa
adc
arpl
xchg
dec
push
sbb
lock
sub
call
ds
mov
push
enter
fimuls
data16
inc
inc
lahf
jle
sub
lea
mov
mov
pushf
mov
jmp
outsb
xor
pop
cmp
ds
xchg
mov
lods
dec
pop
in
jo
mov
dec
ss
xor
inc
fs
mov
and
or
xchg
scas
mov
dec
inc
js
mov
cli
xlat
fs
shlb
xor
ljmp
pop
pop
xor
pop
mov
push
in
xor
add
cmp
mov
inc
dec
test
mov
gs
outsb
xor
inc
lret
xchg
dec
ljmp
mov
popw
jle
sub
cli
mov
out
lret
push
adc
mov
jae
sti
mov
inc
xchg
std
stc
push
jle
push
in
jbe
pop
cmp
out
fimull
fisubrs
aaa
mov
adc
int
sbb
sub
call
jg
js
les
cmovl
xchg
shl
and
aas
xor
jmp
mov
jl
xchg
cwtl
enter
or
clc
addr16
test
les
test
lods
stos
lea
out
paddb
mov
out
sub
hlt
and
and
cmp
cmp
cmp
cmp
fidivrl
leave
pop
mov
inc
inc
outsl
lcall
sbb
enter
dec
jp
pushf
aas
jecxz
loopne
int
mov
mov
insl
mov
test
sub
dec
xor
mov
and
inc
push
dec
pop
dec
sub
ficompl
xchg
fcmovbe
je
jo
push
jp
adc
ret
sub
das
xchg
sub
cmp
xlat
loopne
pop
sub
test
loope
sbb
rol
adc
insl
mov
and
xchg
dec
sub
inc
mov
or
lret
add
inc
in
inc
hlt
inc
das
lods
sbb
inc
mov
aas
dec
xor
push
sahf
mov
mov
pop
hlt
fildl
inc
sbb
sets
ror
ljmp
lock
adc
sub
push
inc
inc
jo
adc
pop
je
pop
sahf
or
or
ror
pop
lods
pop
adc
sahf
imul
mov
or
mov
int
rcll
mov
push
es
pusha
dec
sbb
or
pop
imul
rclb
jo
sbb
pop
jp
pop
fldt
mov
testb
in
pop
pop
imul
cltd
sbb
pop
adc
in
outsb
xorb
sub
fs
push
jnp
ds
popa
mov
gs
stc
mov
jae
adc
outsl
adc
int
gs
mov
out
jle
repz
loopne
aaa
out
insb
enter
in
sbb
dec
nop
movsb
shrl
push
scas
inc
or
cmp
sbb
popa
add
rorl
sbb
movl
out
jg
push
sbbl
mov
inc
mov
insb
cmp
shl
stc
add
iret
and
insb
pop
ds
je
das
add
inc
mov
leave
mov
inc
jae
cwtl
sbb
ja
addr16
cwtl
repnz
add
pop
sbb
xor
pop
out
sbb
push
popf
pop
sahf
lds
dec
or
xor
fistpl
out
add
dec
pop
ret
popa
inc
leave
push
lret
lahf
dec
aam
adc
jp
enter
add
mov
mov
movsb
imul
outsb
mov
add
jo
mov
mull
sub
xlat
pop
pop
icebp
ja
out
lahf
cmovnp
es
cltd
pop
in
fldcw
jo
std
data16
daa
icebp
pop
andb
pop
imul
mov
dec
mull
sub
mov
mov
pusha
push
call
ljmp
fisttps
mov
cs
push
sbb
insl
ja
std
imul
mov
lret
repnz
gs
or
jmp
add
pop
imul
jbe
int
scas
nop
ljmp
pop
fdivr
sti
out
dec
sub
std
mov
inc
ljmp
dec
jns
aam
fucom
stc
pop
mov
push
jmp
lcall
in
adc
mov
fldl
and
pop
stos
movsl
sbb
test
sti
fstps
mov
cmp
push
sarl
jb
std
dec
int
mov
arpl
loopne
lods
cmp
out
jle
fidivrl
pop
push
xor
insl
jb
sbb
lcall
insl
mov
cmp
mov
fimull
out
jge
imul
sbb
js
stos
arpl
pop
push
or
out
and
int3
aad
sbb
clc
inc
inc
repz
pop
sbb
cwtl
pop
nop
mov
mov
mov
sahf
scas
leave
fcmovb
sub
dec
aaa
je
fstps
mov
pop
mov
cmp
data16
push
hlt
sbb
xchg
loopne
inc
das
aaa
jne
mov
jo
addr16
sub
xor
jl
sbb
xor
mov
push
test
bound
cltd
jno
sbb
push
je
sbb
jns
scas
fidivs
into
addr16
pop
nop
xchg
jecxz
sti
jne
fistl
jle
stc
mov
cmp
dec
mov
fisubrs
or
sub
jp
pop
shll
rcll
mov
insl
pop
pop
adc
mov
jmp
outsl
cmp
out
mov
test
mov
pop
lcall
pop
cmpsb
mov
xor
fs
pusha
sbb
add
nop
mov
insb
inc
dec
std
js
mov
pop
push
mov
nop
test
lods
xor
daa
mov
lcall
mov
inc
icebp
cmc
sub
or
cli
jo
loope
cltd
ret
leave
and
into
icebp
lods
jb
dec
nop
movsb
cmp
push
je
adc
xchg
testl
das
in
in
cld
cmp
outsl
imul
and
sahf
inc
fidivrl
leave
push
add
stc
bound
insl
nop
lcall
sub
and
push
and
push
sbb
dec
jbe
dec
sbb
mov
pop
sbb
sub
cli
test
or
ss
cwtl
inc
and
mov
outsb
mov
jo
push
inc
iret
sub
push
push
sub
adc
dec
pop
and
mov
mov
stos
dec
xlat
dec
ss
adc
pop
or
out
mov
mov
and
movsb
jl
add
out
stos
jmp
subb
mov
lret
les
jnp
stos
add
dec
dec
mov
jo
sbb
or
and
jg
push
mov
jns
jle
xor
add
pop
aas
mov
mov
add
inc
xor
jnp
cltd
lcall
testb
mov
mov
pop
pop
mov
sbb
lods
mov
gs
cmc
mov
cmpsb
mov
cltd
sahf
mov
sarb
sti
cmp
jno
push
jg
pop
add
and
repnz
mov
shr
lea
cmp
das
push
clc
xor
adc
test
in
pop
cmp
cmp
call
pop
clc
pop
imul
or
cmp
adc
jns
int
leave
xchg
mov
mov
and
lods
lock
mov
mov
je
add
xchg
pop
cmp
mov
inc
subl
roll
xor
and
jp
adc
loopne
and
repz
into
dec
lds
hlt
loopne
or
loop
sbb
into
lea
fisubl
dec
mov
xchg
mov
sub
cwtl
imul
aam
jnp
jbe
pop
xchg
add
mov
adc
fisubl
call
negb
and
fstps
das
push
mov
ret
add
xor
mulb
mov
pop
cs
cwtl
cmp
jge
popf
push
test
flds
ret
jp
push
negb
popa
lods
sub
pop
mov
and
pop
arpl
pop
lock
fistpll
fstpl
jb
push
push
je
lods
rclb
lds
lods
cld
imul
in
inc
push
dec
in
aas
adc
dec
fs
inc
cmpsl
pop
cwtl
mov
lea
mov
je
adc
pop
add
mov
bound
int
das
outsb
xchg
mov
push
xor
jno
outsb
movsl
inc
and
neg
ret
ja
pop
sbb
enter
cmp
push
cmp
dec
mov
js
fisttps
or
loopne
push
addl
xor
gs
repz
push
jg
push
pusha
aas
or
fildl
imul
and
cmp
mov
inc
xchg
and
or
loop
push
es
inc
inc
popa
dec
pop
shr
ss
dec
adc
test
sub
jnp
and
sbb
mov
jo
mov
lahf
popf
subl
jle
std
out
inc
pop
fst
and
repz
mov
jle
cmp
push
or
sbb
sbb
pusha
jne
push
loope
sbb
dec
arpl
hlt
stos
mov
jecxz
mov
jae
mov
lret
pop
sbb
dec
imulb
lret
sbb
pop
jle
mov
pop
and
mov
clc
fldt
adc
inc
imul
outsl
inc
inc
sbb
jp
out
and
mov
jb
iret
cld
subb
push
aad
pop
sub
add
xchg
xchg
mov
cmp
lods
insb
rcrl
popf
jnp
xchg
shll
xchg
pop
mov
pop
adc
addb
and
sbb
lock
jbe
cmp
mov
pop
mov
data16
daa
lret
mov
jg
adc
mov
filds
sbb
sti
in
mov
add
push
mov
sbb
sub
sub
sbb
inc
sbb
cmp
sbb
int3
inc
in
sti
insb
clc
xchg
push
jl
pop
in
dec
push
mov
cmp
push
fs
adc
mov
add
mov
repnz
mov
inc
adc
sqrtps
pop
mov
ror
mov
ds
cmp
test
into
aad
jo
adc
cmp
shlb
cmp
xor
aaa
insb
cmp
in
dec
outsl
cmp
sar
hlt
packuswb
pusha
xchg
cmp
jp
mov
xchg
daa
les
popa
add
inc
shrd
push
rcll
fsts
stos
call
xor
fucomi
xlat
xor
ficompl
imul
insb
lea
ds
push
dec
scas
jmp
mov
pop
or
jbe
mov
inc
addr16
mov
dec
jo
and
fildl
mov
insb
inc
das
repz
mov
movsl
pop
es
inc
jo
fldt
inc
cmp
lock
leave
pop
jge
jo
xchg
sub
test
add
imul
cmp
cmpsb
dec
pop
cmpsb
push
les
lods
popf
ljmp
outsb
jp
add
iret
mov
lret
lcall
bound
jg
sbb
jbe
mov
les
hlt
dec
push
js
mov
outsl
cs
dec
sub
adc
sub
sbb
add
xchg
popa
inc
jecxz
adc
sbb
flds
jp
pop
jb
lret
je
std
pop
sbb
pop
sbb
out
shll
cmp
adc
mov
inc
cmp
outsb
fcmovbe
or
adc
loop
fildl
stos
int
stc
jge
sbb
std
cmc
push
xor
in
test
or
sub
inc
mov
sub
or
imul
cmpsb
scas
leave
jmp
and
lret
jle
inc
mov
xchg
ror
cmc
add
jp
adc
mov
std
pop
ss
jle
push
push
fldenv
cli
sub
xchg
cmp
xchg
jmp
testb
cmp
adc
fsts
push
inc
sarb
pop
mov
or
sti
add
push
bound
lea
repz
and
jnp
and
mov
sub
jle
sahf
and
rcr
shrl
sub
data16
lods
mov
mov
sbb
cwtl
cltd
inc
lcall
mov
jnp
sub
andb
fildll
ljmp
jle
icebp
repnz
scas
pop
jnp
lods
pusha
push
and
push
into
push
mov
jl
cmp
adc
les
mov
leave
pop
icebp
fistl
push
mov
push
into
mov
push
imul
jbe
pop
or
fdivl
mov
sar
cmc
addr16
jp
pop
pop
mov
add
addr16
arpl
inc
add
ljmp
call
jp
hlt
mov
or
jne
mov
jl
mov
dec
ret
lret
lds
push
sbb
out
movsb
stos
jle
dec
mov
clc
insb
inc
xchg
out
jecxz
jo
sbb
lret
push
shr
jae
ds
repz
mov
fnstcw
int3
ljmp
or
lret
sub
jecxz
nop
or
cmpsb
mov
mov
sahf
push
xlat
cmc
adc
jbe
push
sbb
call
arpl
jmp
stos
setns
jl
ret
adc
push
ss
xor
pushf
and
xchg
pop
xor
test
push
sbb
jecxz
jl
dec
gs
mov
iret
push
pop
mov
inc
pop
pop
adc
mov
inc
fstpt
mov
pop
sarl
jnp
cmp
xor
add
daa
stc
push
arpl
add
xor
iret
push
mov
xor
out
iret
ljmp
nop
imul
jle
and
adc
call
stc
dec
movsb
mov
inc
lret
push
adc
daa
in
cmc
dec
test
cmp
and
fcmovu
pop
sbb
popf
les
jne
je
sbb
mov
dec
mov
pop
push
sub
movsl
lock
mov
xlat
pop
push
mov
mov
aas
test
lods
sbb
mov
lock
sbb
int
dec
movsbl
ljmp
pop
mov
lret
fldpi
lahf
sbb
mov
xchg
cltd
jno
jae
cmp
push
out
int
jno
mov
sub
je
and
add
addr16
xorb
add
fcoml
sbb
ret
cmc
lds
pop
jno
pop
or
cmp
xchg
xchg
enter
je
dec
outsb
mov
in
outsl
sbb
sbb
mov
fsts
shll
test
cmp
enter
jnp
popa
jle
es
and
push
sub
insb
xor
xor
popa
pop
arpl
mov
into
mov
lret
loope
inc
shlb
xchg
popa
mov
ficomps
mov
lods
inc
leave
stos
add
in
sti
aas
xchg
push
sbb
rcll
jecxz
add
jp
push
push
xchg
pop
cmc
xchg
sbb
sbb
mov
jb
pop
es
sub
fcmovnb
mov
push
imul
icebp
test
ljmp
sbb
sbb
pop
rcrb
cmp
add
fdivrl
sub
push
xchg
lods
jo
xor
outsb
sub
mov
outsl
idivl
pop
cmp
mov
sub
mov
add
mov
jp
pusha
xchg
stos
insb
imul
mov
inc
mov
fildl
fucomip
and
jmp
inc
dec
lret
flds
mov
mov
lahf
sbb
cmpsb
cmp
fwait
imul
lods
pusha
mov
jg
sub
mov
je
aam
jae
mov
push
dec
jg
sub
mov
mov
cmc
dec
insb
int
lods
xor
sub
xchg
xorb
and
pop
pop
or
pop
jp
sub
mov
or
shrb
and
mov
lods
imulb
das
movsb
popa
ret
scas
cltd
jp
and
fidivs
ds
push
and
scas
inc
cltd
fs
loope
rcrb
mov
shll
lret
pop
jl
mov
int3
dec
inc
push
outsl
lahf
int
dec
sarl
jle
cltd
add
mov
lcall
xor
mov
dec
adc
outsb
out
dec
out
inc
jecxz
pop
mov
jae
adc
js,pt
mov
lcall
mov
dec
sbb
je
in
nop
cmp
or
sub
fs
into
inc
stos
imul
mov
leave
pop
sti
cmpsb
sbb
mov
xor
jnp
mov
xorb
jle
mov
out
cmc
xchg
jmp
cmp
mov
adc
mov
loope
es
stos
gs
dec
stc
mov
dec
push
lods
cmp
and
add
cmp
push
xchg
and
or
and
shl
xchg
jg
sub
xor
adc
inc
insl
add
mov
lods
add
fs
cmpsl
fnstsw
sub
cmp
mov
adc
nopl
lds
push
test
dec
std
cmp
mov
jbe
xor
push
ds
and
aaa
out
jmp
repnz
loop
pop
ds
jo
sbb
push
sub
stos
dec
pop
mov
jl
movsb
es
jbe
mov
sbb
mov
mov
ficoml
sbb
cmp
push
sbb
xor
imul
cli
ficoml
xor
pop
mov
sub
cli
cmc
pop
pop
addr16
inc
adc
sbb
xor
insl
mov
fimuls
test
xchg
pop
or
sahf
aaa
cmp
aam
cli
sti
add
fidivrl
sbb
ret
and
fucomip
xor
cli
popa
cmp
hlt
fildl
stc
cmpb
stos
stc
jmp
ljmp
inc
ljmp
in
inc
mov
cli
in
cmp
pop
sbb
push
inc
and
dec
cmp
fnstcw
fisubrl
movsl
sti
sti
sbb
add
xchg
and
and
pop
xor
or
imul
stos
stos
ja
sbb
stos
and
arpl
mov
fisubrs
sub
movsl
in
or
shrb
mov
cmp
sub
loope
mov
sub
or
sbb
lock
cld
pop
scas
sti
sub
ljmp
jns
sbb
movsl
rcrb
dec
sbb
out
sub
lcall
fcmovu
cmp
and
mov
inc
or
ficompl
sbb
adc
mov
fisubs
repnz
pop
push
cmp
and
loop
dec
sbb
pop
shr
call
mov
jmp
push
arpl
pop
sbb
into
dec
mov
cli
jo
push
and
jns
inc
fcmovu
sbb
fcmovnu
stos
fiaddl
jo
call
cltd
pop
and
xor
sbb
cli
sbb
fiaddl
lret
pop
dec
dec
pop
lret
fsubs
and
jb
jnp
ljmp
jo
cmp
dec
sbb
cmp
ficomps
fisubrl
or
mov
xor
jl
push
dec
jl
cmp
inc
out
dec
xchg
inc
aas
lahf
and
jns
sub
mov
mov
mov
inc
les
push
jbe
mov
pushf
outsb
xchg
pop
test
movsl
pop
jp
jle
aaa
mov
mov
in
cmp
outsb
dec
xchg
outsl
cwtl
mov
jmp
pop
sub
lea
push
sbb
push
in
jg
adc
sbb
arpl
fisttpll
push
mov
mov
and
and
outsb
fcmovne
cld
mov
dec
lods
cmp
sbb
pusha
mov
shl
js
push
hlt
or
gs
outsb
mov
and
and
stc
fstpt
lret
nop
mov
xchg
cmp
imul
mov
cld
in
and
push
int3
imul
sub
lods
jle
xor
jp
or
out
ds
ret
cmp
stc
cmp
mov
shll
call
xchg
out
xor
ds
sub
loopne
mov
cmc
push
jno
jge
pop
mov
add
lcall
out
sub
mov
pop
pop
push
inc
mov
out
sub
leave
mov
popa
inc
cmp
inc
sbb
mov
dec
mov
cli
xlat
or
inc
mov
mov
jecxz
adc
mov
stos
insl
rorb
rorb
das
fsubrs
arpl
push
imul
sub
fidivs
cmova
shl
xor
popf
inc
fildl
ret
pop
mov
mov
mov
ljmp
push
addl
add
lret
push
je
xchg
push
or
add
mov
sub
and
fcmovnbe
xchg
or
or
xchg
mov
cmp
fistpl
and
pusha
movsl
sbb
lds
test
dec
or
xor
ds
leave
bound
aaa
test
jnp
xchg
shlb
outsl
xor
cltd
inc
mov
popf
bound
fisubrl
test
out
int
fcmovb
sbb
cltd
out
inc
cmp
mov
jle
imulb
sbb
dec
insb
hlt
push
adc
dec
push
imul
xchg
jp
mov
icebp
out
aam
loopne
inc
xchg
push
idivb
fcmovb
rolb
inc
mov
pop
jno
jbe
popa
inc
rcrl
mov
jbe
out
inc
loope
test
jb
nop
sub
and
cmpl
js
test
or
push
ds
mov
cmp
outsb
pusha
xchg
push
jge
and
mov
cmp
out
fs
loop
xor
orl
mov
pusha
sub
inc
sbb
push
jle
xor
jg
xor
sbb
repnz
or
imul
loope
je
mov
lock
into
push
outsb
sbb
add
sub
jl
data16
lock
jp
into
das
mov
mov
pop
std
mov
pop
inc
cmp
mov
xchg
fstpt
pop
mov
sub
out
adc
jle
sti
test
lods
jge
pop
pop
pop
scas
jg
add
cld
mov
dec
ds
fiaddl
test
sbb
mov
sahf
pop
adc
mov
mov
into
cmp
fdecstp
sbb
je
and
sbb
push
dec
fdivrl
adc
dec
pusha
repnz
lahf
sbb
sbb
out
cmpsb
jae
clc
xchg
xchg
out
and
fdivrs
mov
mov
fs
ss
test
dec
mov
pop
loop
mov
mov
inc
mov
mov
shrb
icebp
arpl
lods
xchg
adc
inc
rcrl
mov
adc
sub
mov
nop
adc
and
insb
les
inc
and
jp
lock
add
pusha
cmovl
sbb
xor
xchg
jecxz
sbb
pushf
rcrb
mov
xor
mov
push
lret
inc
das
push
xor
add
jbe
dec
cmp
jl
pop
dec
xchg
mov
pop
mov
and
lcall
es
lods
sbb
mov
jae
mov
and
or
and
mov
pop
dec
add
pop
lods
insb
push
cltd
mov
pop
mov
cli
mov
jb
jg
shrl
sub
push
and
and
jmp
fisubrs
mov
les
bound
sub
fstl
inc
dec
notl
sub
sbb
adc
mov
leave
movb
adc
xor
cld
enter
jmp
jl
cmpsl
sbb
sbb
outsb
cmp
ficompl
aas
or
std
mov
cmp
bound
subb
inc
leave
add
and
fwait
xchg
and
push
repnz
pop
je
xor
or
fidivrl
leave
gs
adc
sbb
and
jp
pushf
fs
sbb
or
fidivl
je
sbbb
gs
and
cli
test
mov
hlt
mov
pop
incl
xorl
sub
adc
pop
dec
mov
es
cmp
into
pusha
in
or
push
inc
add
popa
repnz
hlt
jmp
nop
mov
xor
sub
cli
mov
jl
repz
dec
mov
lcall
cltd
pop
arpl
sbbb
jbe
mov
pushl
jp
xchg
sub
aaa
cmp
repnz
out
jns
mov
jmp
mov
fistpl
test
xlat
fiadds
jl
xor
jb
jne
into
insl
jp
aaa
loopne
sbb
cwtl
mov
xchg
and
dec
aad
in
ss
jle
fildl
and
pop
ljmp
push
cmp
fistl
push
out
push
xor
jo
fstl
cmp
loopne
repnz
lods
xchg
addb
mov
cltd
aaa
fistpl
sub
mov
xor
aam
mov
jnp
inc
sarl
test
call
push
mov
and
in
cmp
dec
xchg
pop
je
jle
push
push
popf
cmpsl
cmp
push
push
aaa
in
daa
sbb
mov
xchg
out
xchg
jb
lret
aaa
xor
mov
sub
jnp
jle
pop
lods
jp
stc
cmp
jbe
scas
int
adc
push
jecxz
repnz
lret
es
icebp
jp
dec
mov
lods
mov
stc
daa
aaa
mov
das
shll
mov
call
xor
rorb
push
mov
sbb
mov
ss
adc
shlb
dec
and
push
outsl
in
mov
rorl
push
scas
xchg
and
dec
ret
xchg
cmp
imull
xor
lret
xor
sbbl
outsb
pop
xchg
lret
movsb
cmp
pusha
push
out
into
fs
cmp
aaa
jecxz
lcall
ljmp
sub
pushf
out
xchg
out
and
mov
jo
pop
lds
jecxz
adc
pop
jne
mov
xchg
lods
push
insb
mov
pop
sbb
jo
sahf
jle
push
push
push
pop
ficompl
rorl
sbb
mov
jno
fbstp
xchg
sbb
out
mov
mov
mov
sub
jmp
and
add
push
sti
iret
pop
cwtl
lret
stos
js
push
in
jle
mov
bound
leave
mov
in
xor
add
fsts
ret
test
sbb
jge
or
sbb
mov
aas
mov
ds
cltd
lods
and
mov
jne
jae
mov
movsl
pcmpeqb
loop
xchg
das
cmp
xchg
sahf
aam
add
xor
cmp
call
add
loope
aas
inc
sub
inc
into
insb
add
inc
insb
push
xchg
add
mov
mov
jg
jg
fiadds
or
fcoms
mov
pop
addr16
subb
cmp
and
and
lods
adc
mov
push
and
pop
xchg
xor
fcoml
mov
sbb
mov
popf
jnp
adc
mov
or
sub
movb
mov
xlat
movq
dec
rcrl
xchg
inc
sbb
dec
sbb
std
or
xchg
mov
clc
inc
ljmp
or
adc
cmp
cli
pusha
and
push
decb
xchg
imul
mov
xchg
add
jbe
stc
jl
dec
push
xor
aaa
mov
mov
inc
cltd
push
fdivrl
add
mov
shl
call
fdiv
stos
push
mov
and
push
pop
inc
jb
pop
ds
inc
popf
push
inc
mov
jno
jb
fiaddl
push
lret
jne
cli
icebp
and
dec
jnp
jnp
mov
pop
pop
fidivs
stc
hlt
and
pop
xchg
sub
push
pusha
xchg
pop
xlat
lods
mov
ljmp
and
jp
sub
iret
addr16
jae
out
adc
pop
mov
dec
cmp
out
inc
inc
testl
popf
jnp
mov
addr16
mov
pop
dec
push
xor
adc
jne
mov
std
stc
inc
add
jp
mov
fstpt
xchg
mov
scas
push
in
sbb
out
pop
js
inc
leave
pusha
xor
pop
repz
inc
or
and
daa
scas
imul
movsl
adcl
jg
imul
sbb
testb
push
jge
inc
cmp
imul
ficoms
pop
mov
pminsw
mov
and
fimuls
inc
mov
pop
arpl
mov
sbb
xchg
lcall
in
cmp
xchg
and
xor
inc
mov
xor
stc
sbb
imul
push
sbb
rcrl
jp
inc
sub
inc
or
lcall
lea
sub
sbb
pop
bound
in
sar
icebp
pop
mov
and
mov
out
jp
push
adc
sbb
divb
xor
repnz
lods
adc
mov
je
fidivl
iret
mov
pop
push
inc
cmc
mull
call
sbb
push
push
push
loopne
sbb
mov
or
aad
xor
or
cli
mov
or
insl
jbe
dec
dec
pop
mov
bound
shl
leave
loopne
and
jle
inc
cmc
and
and
xchg
sub
and
and
xor
fs
pusha
adc
stos
fstp
sbb
jno
cmp
pop
cli
pop
adc
mov
and
push
push
int
mov
xchg
imul
jmp
inc
dec
mov
pop
pop
mov
pop
cmp
lret
lods
mov
das
in
pop
mov
sahf
xadd
mov
xchg
xor
mov
inc
icebp
sub
test
push
inc
xchg
out
hlt
sub
pop
and
jmp
mov
mov
or
idivb
push
sbb
xor
jmp
int
ljmp
loope
cltd
popa
xor
mov
je
xor
push
rolb
shl
push
jl
mov
outsb
mov
adc
in
add
stc
ljmp
jbe
mov
push
pop
jo
ljmp
fs
popf
jne
outsl
out
pusha
fwait
aad
or
pop
mov
mov
stos
pop
xor
movsl
fwait
popw
or
xchg
decl
pusha
inc
pop
pop
adc
cmp
push
popf
mov
repz
adc
jne
in
dec
pop
push
mov
je
dec
pop
mov
pop
cmp
add
inc
int
push
insb
mov
pop
sbb
inc
jg
xchg
data16
popa
pop
and
mov
lods
sub
punpckldq
jle
push
ficompl
mov
xchg
ljmp
mov
test
cmp
fcoml
dec
xchg
ds
es
dec
sub
pop
sub
mov
jecxz
sti
fldenv
loope
sbb
shll
mov
inc
repz
test
pop
mov
dec
lcall
sbb
xchg
xchg
sub
mov
sti
in
inc
sub
mov
inc
add
popa
lods
insb
call
push
daa
jl
addb
pop
xchg
movsl
lock
and
cmp
cmpsl
push
dec
nop
jnp
push
in
lahf
mov
push
cmp
sub
mov
sub
cmp
sahf
sbb
enter
or
mov
inc
es
in
insb
inc
je
adc
int3
pop
fnstsw
mov
notb
and
push
mov
jmp
mov
jmp
popf
pop
mov
or
mov
xor
jne
mov
rcrb
and
subb
mov
add
ret
enter
repnz
popa
int3
adc
or
popa
lea
add
sub
dec
jae
jle
or
sbb
add
sarb
aas
into
into
inc
lock
fwait
aas
rol
push
pop
and
enter
ss
loope
dec
lcall
in
fisttps
dec
jecxz
push
fcmovnbe
and
cmp
xor
sbb
mov
push
lret
add
adc
test
and
sahf
inc
sub
jns
das
sbb
cmpsl
ljmp
jae
aad
ss
cmp
pop
enter
les
lds
je
lea
je
stos
stos
sbb
mov
es
dec
xor
sub
movsb
adc
mov
pop
or
sbb
push
rolb
jbe
push
jo
and
mov
lret
ljmp
pusha
mov
jno
gs
pop
jbe
insb
imul
ja,pt
je
test
inc
mov
out
jnp
out
inc
jp
jmp
pop
and
cli
ret
negb
push
sbb
push
pop
lcall
xchg
inc
xchg
std
mov
sbb
pop
inc
mov
int3
outsl
loopne
mov
dec
xor
sub
out
push
js
xor
push
lds
sbb
sbb
xor
rcr
xchg
aaa
mov
shlb
inc
mov
dec
les
insb
loop
sbb
cmp
sahf
cmp
cltd
repnz
cmp
leave
sbb
aad
adc
aam
mov
lods
cmp
loop
dec
js
mov
jnp
mov
push
pop
gs
in
fmulp
jle
mov
lods
jmp
sbb
shlb
fstpt
add
sub
jo
jmp
fstpt
xchg
sub
stc
pop
popa
test
sbb
pop
insb
jl
pop
add
sbb
shlb
subb
adc
mov
xor
and
jb
mov
sbb
mov
adc
adc
jae
mov
cld
sbb
mov
das
pop
sbb
inc
or
fidivrl
lret
movsb
shll
add
and
std
sarb
mov
mov
daa
inc
add
or
int3
pop
lret
nop
push
pop
fnstcw
dec
stc
xor
push
push
dec
pop
jae
push
in
or
rorb
push
outsb
and
mov
lcall
sub
in
outsl
jnp
pop
cmp
movsl
add
sub
xor
sarb
sub
xchg
shll
cli
popf
pusha
add
std
pusha
inc
fnsave
and
es
xchg
bound
mov
pop
sbb
mov
test
mov
lea
push
pop
mov
mov
sub
lods
fildll
inc
sub
imul
and
aas
pop
sub
xor
lock
cmp
or
adcb
sti
push
cs
es
jge
sahf
clc
frstor
and
push
dec
aam
pop
daa
outsb
cmp
sbbl
adc
or
sub
mov
lds
mov
sahf
push
fcmovnu
shll
dec
nop
and
sti
popf
xor
mov
and
sbb
push
lcall
dec
sub
cmp
sbb
mov
leave
cmpb
out
jle
fstpt
out
fimull
and
inc
xchg
jle
push
xor
mov
adc
sub
mov
hlt
xchg
fcmovnu
mov
ljmp
aas
jb
xlat
push
lods
mov
jb
in
pusha
mov
jg
push
mov
mov
and
int
push
lcall
mov
std
or
pusha
adc
mov
mov
je
mov
shll
pop
pop
scas
lock
lcall
bound
xchg
arpl
in
inc
mov
pusha
rcrb
mov
int3
data16
dec
pushw
jge
xchg
into
int
repz
call
in
popa
push
loopne
sbbl
stc
push
dec
ds
bound
cmc
mov
jecxz
std
pop
xchg
pop
mov
mov
imulb
fistpl
xor
retw
pusha
jle
shlb
je
clc
in
adc
gs
sbb
mov
testb
scas
lock
dec
int3
outsb
push
fs
movsb
stc
sbb
pop
pop
inc
sbb
das
and
adc
and
jle
into
sti
nop
into
inc
jo
sti
push
in
inc
pop
adc
xchg
ret
inc
push
mov
jo
adc
shlb
mov
shrb
cli
insl
cltd
inc
adc
inc
pop
mov
les
adc
mov
nop
test
movsl
call
out
bound
sbb
lret
jl
mov
loop
arpl
call
arpl
mov
xchg
pop
jl
xchg
push
jp
ja
xchg
idivl
sbb
scas
adc
xchg
arpl
mov
fimuls
mov
sub
in
dec
andl
xor
divb
nop
jle
loopne
repnz
or
jg
adc
mov
shll
mov
xor
mov
lea
and
mov
idivb
test
dec
mov
pop
push
mov
pushf
movsb
sbbl
test
rorl
dec
mov
lds
data16
add
mov
ficoml
xor
sti
mov
dec
iret
lahf
or
imul
sub
outsb
ds
pop
pop
inc
dec
lock
sbb
test
inc
hlt
and
pop
mov
fistps
mov
and
std
dec
ds
dec
imul
xchg
sbb
js
lret
or
stos
sbb
add
mov
jae
sub
jb
sbb
dec
xchg
pop
push
add
sahf
ud1
sub
pop
stc
jnp
sub
add
hlt
mov
push
ret
mov
ja
in
and
outsb
sbb
sub
popf
insl
popa
push
pop
mov
outsb
xchg
push
jbe
and
jg
and
mov
jne
mov
mov
aam
sahf
jno
scas
lcall
inc
repz
cltd
les
iret
testl
out
cmpsl
inc
push
sbb
ljmp
jmp
notb
mov
xor
mov
add
push
cwtl
and
ds
out
pop
dec
push
hlt
jo
shrl
and
mov
mov
sbb
dec
jae
pusha
cmp
mov
dec
push
sbb
mov
lock
test
jg
add
jne
rorl
xor
popf
jne
inc
aam
add
xchg
pop
cmp
xor
sbb
jnp
mov
pushf
je
mov
ds
adc
jle
sub
mov
pop
pop
stos
js
cmc
out
insl
push
cwtl
or
mov
add
dec
cltd
inc
sbb
ret
in
hlt
aas
xor
mov
pop
ficoml
loopne
into
cmp
fisttps
punpcklbw
add
jno
cmpl
popa
ja
bnd
sub
stos
cmp
mov
scas
cmp
pop
call
daa
push
lea
dec
dec
repnz
ljmp
insb
mov
cmp
sti
mov
mov
popa
sti
adc
test
push
mov
cmpsb
and
call
ja
mov
inc
pop
in
push
daa
sbb
dec
ficomps
pushf
pop
sbb
std
adc
mov
xchg
pusha
int3
fstpt
cmp
and
cmp
cmp
add
mov
mov
jecxz
popa
sbb
cld
fidivrl
mov
mov
rsm
inc
mov
imul
inc
mov
mov
sub
fsubrp
in
jbe
sbb
xor
stos
loopne
sbb
cltd
cmp
sarl
jnp
fisubs
fucomp
outsb
jnp
and
or
pop
mov
shrb
xchg
insl
pop
jp
pop
and
mov
fisubs
out
test
jb
jge
jmp
addr16
pop
ds
sub
mov
cmp
divl
aam
adcl
jle
jbe
dec
jle
and
mov
and
shl
or
popf
jnp
imul
xor
roll
sbb
lods
sbb
leave
shll
xchg
jae
sti
sub
rclb
cmp
xor
push
or
xchg
jp
mov
add
sub
dec
cmpsl
gs
and
outsb
jp
mov
xchg
cmp
jo
daa
shll
inc
es
sarb
dec
pop
pop
hlt
repnz
pop
pop
push
xor
fisubrl
adc
mov
mov
mov
leave
cltd
cmp
xlat
test
push
xchg
adc
js
and
mov
xor
roll
pop
pusha
or
inc
inc
out
stos
mov
popf
out
ds
movsb
leave
enter
int
mov
je
cmp
adc
addr16
faddl
push
add
jne
pop
adc
pop
mov
cmp
movsb
gs
popf
push
adc
test
ficompl
jmp
adc
sbb
jno
pop
inc
fnstsw
inc
mov
mov
sarl
movsl
pop
mov
movb
xor
out
dec
iret
inc
inc
orl
out
adc
fistl
mov
xchg
pop
fiaddl
and
and
fcoms
jnp
pop
sbb
push
dec
adc
mov
jg
mov
pop
lret
std
lcall
ljmp
sub
arpl
push
sbb
push
ss
pushl
xor
les
adc
in
add
iret
sub
ss
mov
ret
jle
mov
mov
add
dec
outsb
in
push
mov
xchg
cmp
pop
dec
jb
push
in
int
jae
mov
ficoml
xchg
jnp
mov
pop
adc
jo
sbb
push
int
sub
test
jmp
jecxz
dec
cmp
mov
stc
mov
sbb
movb
adc
bound
pop
pop
adc
inc
lcall
jge
ljmp
add
repz
sbb
mov
int
jns
shr
ljmp
lock
mov
cmp
fisttps
movsl
mov
aam
add
pop
mov
sub
inc
pusha
add
outsb
aas
out
cmpsb
inc
inc
icebp
shrb
sub
std
add
dec
pop
sarb
mov
rorb
fwait
cmp
int3
pop
into
rclb
cli
fstl
cmp
call
cmp
cli
cli
pop
lea
cmp
inc
pop
imul
lcall
fcomi
fisubl
jmp
imull
adc
dec
mov
stos
arpl
mov
jl
mov
and
dec
mov
sbb
in
popa
or
dec
stc
cli
rcrb
sub
arpl
stos
push
inc
add
mov
cmp
pop
jb
push
sbb
pusha
aas
inc
xor
jmp
btl
mov
nop
movb
cmp
mov
inc
cmp
rcrb
cld
push
add
mov
stos
cli
out
inc
fidivrs
imul
sahf
jbe
sbb
jo
push
inc
push
push
lahf
jmp
rcrb
aas
pop
push
or
mov
ljmp
sbb
mov
dec
scas
lcall
fldt
inc
xor
fidivrs
sub
fildl
gs
or
cmp
adc
inc
arpl
mov
jmp
jl
sarb
rorb
sti
je
cmp
dec
cmp
jmp
cs
push
xor
arpl
push
jmp
mov
sbb
ficomps
jo
sub
xor
jmp
jo
jmp
sub
sbb
repz
mov
rcrb
mov
pop
jge
cmp
lock
fidivl
sbb
pop
and
xor
pop
stos
jmp
jbe
scas
or
mov
jns
lcall
repnz
dec
cmp
loopne
jns
adc
pop
and
rcrb
mov
and
sub
mov
lret
dec
aad
ss
out
mov
mov
cltd
xor
repz
push
je
mov
shll
push
inc
pop
ljmp
xor
sbb
sub
mov
outsb
push
cmp
mov
add
push
call
inc
notl
mov
out
jp
pop
cmp
mov
mov
push
xor
aas
je
icebp
push
pop
jge
pop
cmp
aaa
push
pop
dec
or
adc
cmp
push
xchg
push
adc
mov
xchg
cmc
adc
inc
push
or
inc
in
push
mov
jnp
inc
movsb
fimull
add
scas
mov
fstpl
mov
mov
pop
lcall
hlt
xor
cld
lock
pushf
lret
in
adc
jb
jo
sbb
repnz
int3
add
outsl
xchg
inc
imul
mov
jns
xor
das
cld
dec
xchg
insb
mov
aas
cld
outsb
cwtl
push
inc
push
stc
mov
xor
pop
mov
mov
ret
lcall
je
mov
mov
pop
das
repz
adc
fldenv
xlat
out
outsl
add
ljmp
lahf
movsb
jne,pt
popf
hlt
mov
in
out
ss
xchg
mov
adc
mov
and
es
jne
outsb
add
nop
arpl
mov
jnp
incb
pop
xor
cmp
out
outsl
sub
adc
xor
mov
inc
fld
sub
dec
or
mov
jno
and
pop
je
jle
sarl
lock
add
repz
mov
fldt
mov
orb
add
popa
push
mov
aas
sbb
sahf
jle
in
hlt
jecxz
fidivrl
cmp
pop
and
sub
and
jae
in
stos
dec
xchg
push
je
cmp
negl
mov
dec
mov
das
std
mov
inc
lds
push
mov
popf
add
ljmp
and
pop
mov
mov
bound
pop
mull
push
inc
inc
adc
ljmp
pushf
sbb
lcall
dec
add
mov
mov
sbb
cmp
sub
test
out
mov
sub
jg
inc
cmp
out
mov
mov
ss
std
pusha
xchg
xchg
rorl
and
pop
sub
xchg
sub
sarb
fstp
push
sbb
dec
pop
ljmp
pop
outsb
push
and
filds
gs
loopne
jne
verw
xor
in
xchg
nop
jecxz
lock
mov
mov
gs
pop
mov
sbb
stos
insb
jns
lret
or
mov
cltd
push
adc
fldcw
aad
lods
mov
cmp
cmp
pop
push
rorl
fimull
inc
loopne
cmpsb
xlat
inc
cltd
or
sub
das
icebp
sbb
lcall
push
je
xor
mov
cwtl
sub
mov
scas
rcl
out
cmp
jg
test
pop
xor
sbb
outsb
inc
test
pop
cwtl
fs
mov
pop
pop
popf
out
pop
rorb
adc
jbe
add
add
rclb
inc
fimuls
pushf
cs
out
pop
mov
add
popf
lret
jg
emms
inc
mov
xchg
pop
and
xchg
cmp
test
imul
into
jo
popa
scas
mov
aaa
mov
call
lret
adc
cmpsl
insb
sub
pusha
cmp
cltd
js
pop
jo
mov
ret
adc
insl
jno
dec
jp
pop
xchg
aas
test
fadds
pop
lcall
rolb
sub
mov
aam
mov
shrl
inc
mov
sbb
idivb
fcmovu
xor
enter
sti
inc
lret
dec
mov
dec
push
sbb
pop
aas
push
or
aam
loope
sahf
push
scas
add
fistpl
stc
sub
mov
or
and
sahf
and
lret
aas
push
xchg
mov
mov
xchg
in
pop
pop
cmp
sbb
mov
ficomps
jns
xor
cmp
xor
cli
jg
mov
adc
adc
and
xor
in
pop
jl
push
jle
mov
adc
cmpb
movsb
lds
jmp
ret
lret
jb
in
js
mov
aam
and
pop
rcrl
insl
sbb
daa
fs
scas
aaa
mov
loope
push
push
jecxz
repz
and
jle
pusha
xchg
fstpt
sub
aad
int3
fs
stos
jo
mov
es
mov
cmpl
stc
out
and
mov
in
lods
int
cmp
jnp
and
fs
mov
test
jg
out
add
jne
sub
into
mov
mov
call
inc
xchg
insb
dec
xchg
je
test
movsb
pushl
test
mov
lock
push
mov
js
mov
xchg
fcmovne
jb
sbb
mov
out
mov
lahf
movsl
div
bound
jo
aaa
dec
mov
inc
add
aaa
dec
sbb
mov
jns
inc
jp
xchg
cwtl
cli
adc
inc
pop
icebp
adc
mov
ret
ljmp
push
push
stos
adc
jmp
dec
jb
push
stc
mov
sbb
shl
adc
fiaddl
out
adc
or
and
ret
iret
dec
sbb
xchg
lods
or
mov
loop
fisttpl
mov
fistps
sbb
or
mov
jns
hlt
mov
imul
inc
mov
sub
xor
mov
adc
mov
cmp
outsl
sbb
dec
int3
lret
inc
mov
sti
xchg
loope
push
int
rolb
dec
addr16
stc
aaa
fstpt
fcomp
lret
push
xor
imul
stc
and
aam
gs
mov
xchg
ds
dec
shlb
dec
jecxz
jle
add
jp
mov
pop
cmp
ret
mov
cmp
imul
mov
lods
rclb
cmp
ljmp
push
aaa
jge
dec
lahf
bound
lret
gs
sbb
shlb
mov
cltd
std
add
jmp
pop
imul
sbb
aas
jb
arpl
addr16
fwait
stc
cmc
das
inc
jb
ja
loop
jo
stos
cmp
xchg
dec
push
mov
pusha
jmp
test
xor
jp
push
cmp
scas
adc
pop
out
push
mov
fadds
ret
mov
pusha
in
mov
pop
jp
pop
sbb
insl
cmp
mov
jp
fldenv
imul
cwtl
imul
jbe
imul
mov
aas
fdivl
jp
cmp
sar
cmp
cmp
mov
cmp
outsb
movsl
mov
das
cmp
xor
jns
push
jp
mov
add
inc
sbb
mov
lret
stos
fistpll
and
or
ret
pop
mov
inc
or
mov
cmpsb
mov
sbb
jb
xchg
in
int3
call
jecxz
clc
mov
sbb
das
dec
mov
push
and
push
lret
inc
mov
sub
fwait
xchg
add
repz
jp
mov
push
rol
cs
loope
dec
mov
rolb
aas
adc
mov
test
ret
mov
pop
jnp
cmp
cmp
ljmp
sbb
popf
pop
lods
lds
out
imul
sub
cmpsl
dec
mov
xor
push
fs
inc
pop
bound
popa
dec
stos
fcmovu
test
test
repz
xchg
push
push
in
mov
ljmp
aam
inc
cli
lret
loope
lret
rcrl
inc
sub
sbb
push
movsb
enter
jmp
aas
add
into
dec
imul
pop
pop
popf
sub
rcr
mov
sub
aaa
jge
adc
xchg
jmp
imul
cmp
dec
psraw
mov
in
loope
mov
inc
iret
mov
sub
cmpl
sbb
adc
movsl
scas
inc
xchg
enter
dec
out
jno
or
lods
aad
pop
int
roll
sbb
add
push
nop
roll
mov
pop
xchg
xor
lcall
mov
pop
lcall
lea
sbb
outsb
push
jl
sbb
jbe
xchg
call
popf
push
outsl
pushf
scas
jb
cs
jge
inc
inc
add
jmp
aaa
mov
mov
xchg
push
lods
aam
push
jo
cwtl
bound
inc
sub
sub
daa
imul
fidivl
repz
sbb
shlb
shlb
mov
push
pop
or
dec
ljmp
out
mov
mov
ss
clc
push
push
jno
ficompl
sub
scas
sbb
push
cli
cmp
inc
bound
sahf
mov
cwtl
icebp
jnp
jbe
inc
pop
out
into
cltd
ljmp
jle
loopne
test
ret
loope
or
jmp
or
mov
push
mov
stos
popa
fwait
jnp
test
incl
and
mov
lret
scas
mov
xor
adc
add
shlb
xchg
or
rcrb
mov
std
push
sbb
cmp
push
push
or
xchg
pop
pop
jbe
mov
imul
mov
int3
jmp
cmp
outsb
fiaddl
dec
jno
insl
arpl
cmp
loop
sbb
cs
jl
pop
and
cli
add
arpl
fisttpl
jb
fnstcw
xchg
inc
or
mov
xchg
sub
xor
fstpt
orl
jecxz
nop
outsb
sbb
add
call
in
lcall
mov
xor
xor
into
insl
or
int
mov
je
push
test
inc
mov
fistl
mov
sbb
mov
jbe
mov
push
xchg
mov
in
shlb
mov
ss
cltd
sub
aam
stos
popf
mov
lret
ror
dec
cmp
es
xchg
loope
dec
xor
pop
xchg
sub
xor
pushf
pusha
push
mov
mov
push
out
cmp
sub
loop
sub
jp
or
xchg
movsb
pusha
loop
mov
fcoms
xchg
pop
and
and
add
xchg
push
clc
and
push
xchg
xor
mov
or
xor
lea
ljmp
sub
fimuls
and
inc
adc
mov
in
movsl
dec
sbb
pop
int
sub
repz
sti
sbb
call
lret
and
sbb
add
sbb
clc
mov
add
cmp
push
nop
lahf
sbb
xor
mov
mov
outsb
adc
ljmp
imul
fcoms
pop
push
and
mov
push
imul
icebp
xchg
jns
pop
push
jno
mov
adc
dec
rolb
mov
xor
inc
je
sbb
add
add
movsb
mov
jns
push
inc
add
pop
lea
mov
lcall
mov
pop
inc
inc
jo
inc
xor
mov
out
sbb
sar
xchg
adc
popf
jnp
inc
cmpb
mov
push
and
insl
inc
and
sarl
bound
mov
std
xlat
jb
cli
ret
mov
jp
aad
sub
out
fldt
or
add
shlb
xchg
aaa
mov
aam
pop
mov
ljmp
mov
bound
dec
adcb
repz
mov
adc
pop
in
imul
fs
jecxz
pop
pop
xor
adc
sti
aaa
adc
pop
sub
xchg
popf
fwait
dec
lock
jp
jno
jno
inc
pop
das
stc
pusha
mov
dec
xor
ret
or
mov
data16
fcoml
iret
stos
mov
addb
pop
mov
aas
hlt
xchg
jmp
mov
push
pop
and
mov
sarl
adcl
je
inc
jo
fsubr
xchg
insb
inc
adc
lret
scas
sub
push
loopne
outsb
xchg
bound
mov
sub
or
sbb
out
shrb
pop
pop
mov
call
inc
push
out
fisttpl
mov
cmp
daa
mov
jae
out
movl
push
gs
bound
pop
and
icebp
jnp
fcoml
imul
adc
bound
pop
adc
leave
xor
xor
sbb
push
insl
cmp
xchg
xlat
inc
test
cmp
outsl
and
jl
dec
sub
lods
adc
jo
pop
jns
xor
adc
pop
popf
idivb
int
cmp
mov
inc
loopne
std
jmp
repnz
repnz
fdivrl
incb
movsb
pop
clc
pop
and
orb
or
mov
adc
mov
sbb
cmc
dec
rclb
and
dec
scas
cs
dec
inc
sub
pop
outsb
and
pop
add
bound
and
jae
mov
and
fists
test
pop
jae
mov
mov
xor
shlb
inc
ds
mov
mov
and
popa
mov
neg
fwait
xor
fildll
outsb
jnp
push
cltd
lret
mov
stc
sbb
and
icebp
and
scas
inc
push
data16
lods
inc
rcrl
mov
cli
add
subl
push
fdivs
int3
aas
orl
pop
lods
push
and
pusha
jno
xchg
xor
lret
adc
dec
sahf
jns
popa
xchg
sub
xor
movsb
cltd
mov
sub
popa
pusha
inc
mov
push
in
test
testl
add
movsl
mov
or
xor
pop
outsb
jno
insb
jo
rcr
negl
idiv
dec
mov
cmp
movsl
add
adc
jo
mov
sbbl
outsb
jnp
arpl
jp
imul
adc
inc
popa
popf
dec
out
test
dec
ret
inc
movsl
push
jl
or
pop
add
push
adc
xchg
sbb
mov
push
add
cmp
andl
xor
jno
push
test
pop
mov
hlt
sti
sbb
inc
call
inc
and
or
loop
hlt
xchg
loope
mov
pusha
cmp
data16
sub
mov
xor
aam
fsubrs
popf
in
sbb
and
adc
out
pop
push
arpl
lods
xor
dec
mov
xchg
pop
pop
arpl
mov
or
push
insb
aaa
pop
push
adc
or
jmp
sarl
movsl
repz
push
rorl
lds
xchg
test
mov
insl
cmp
xchg
push
int
add
ljmp
lds
les
popf
lcall
ds
cltd
mov
inc
outsl
lcall
lret
sbb
sbb
jp
push
mov
repz
and
adc
cmp
jns
loope
iret
sub
jno
inc
shrb
inc
cmpsb
sbb
fistps
adc
push
fs
outsb
ss
xor
jecxz
lock
jns
jmp
testb
xchg
imul
sub
xchg
mov
mov
lcall
mov
sarl
mov
push
inc
push
mov
or
lods
test
sub
dec
out
mov
js
cmp
cmp
insl
pop
mov
mov
scas
push
push
cltd
jle
xchg
mov
orl
and
divb
pop
sbb
mov
and
adc
mulb
dec
scas
add
inc
imul
push
int
cli
outsb
inc
dec
scas
jle
cmp
insb
push
rclb
mov
dec
add
inc
sbb
popf
jle
inc
fstpl
out
sahf
push
pusha
fstpt
icebp
lock
push
insb
push
outsl
adc
and
xor
rcrb
ds
add
je
pop
mov
jns
lods
int
outsb
push
rdpmc
jns
outsb
shrb
sbb
xchg
cmp
and
fstps
rcrb
inc
call
xor
push
mov
inc
leave
call
jecxz
shrl
push
out
add
inc
iret
in
jmp
ss
inc
jle
adc
and
lahf
adc
cli
adc
or
or
jno
mov
fsts
hlt
js
and
movsl
or
mov
popa
push
jl
pop
call
jecxz
mov
xorl
adc
jbe
repnz
sbb
fistpll
daa
xlat
sahf
sbb
or
inc
movsl
leave
cmp
mov
repz
ds
add
std
divb
cmp
fcoml
dec
cmp
add
repnz
mov
movsl
sub
adc
repz
dec
mov
sub
icebp
sub
loop
push
mov
test
cmp
lret
ss
fs
xchg
xor
or
or
jno
pop
xchg
imul
xchg
push
mov
xor
hlt
insl
repz
mov
push
lret
imul
insl
lock
jl
cli
mov
sti
enter
rol
clc
dec
ds
mov
pop
mov
cmp
scas
xor
and
xchg
mov
add
cwtl
sbb
repz
lock
fisubs
scas
xchg
out
mov
hlt
inc
mov
subb
clc
imul
add
dec
jnp
pop
jo
aad
push
sbb
imul
fdivrp
fwait
imulb
repnz
jg
mov
je
mov
imul
dec
mov
fistps
aas
push
out
das
xor
sbb
jecxz
sarl
sbb
fidivl
mov
or
jl
std
sub
mov
push
and
cmc
mov
shll
and
dec
mov
mov
mov
mov
imul
iret
xchg
pop
xchg
daa
sub
fs
xor
pushf
xchg
je
inc
lret
pop
push
jp
inc
jle
cmp
lret
mov
cli
ds
popa
mov
les
inc
jecxz
pop
lea
push
mov
pop
add
xchg
xchg
ret
leave
or
mov
hlt
sti
std
mov
lcall
icebp
leave
adc
hlt
add
lret
sbb
pusha
add
push
jns
cmp
or
push
fisubrs
inc
xor
cli
mov
fildl
lret
repnz
mov
inc
insb
xchg
mov
pushf
push
adc
repz
out
cmp
dec
daa
sub
stc
inc
mov
lcall
jge
sbb
pop
lods
sbb
mov
pushf
mov
mov
add
pop
cmp
push
and
sub
loope
sub
jb
mov
cmp
mov
sub
mov
mov
bound
or
mov
mov
call
add
sbb
pop
xchg
mov
loope
pop
mov
adc
movsb
cld
push
fcmovnu
stos
mov
push
repz
and
test
in
xchg
aas
das
fmuls
fadd
imul
push
aaa
or
pop
jl
ljmp
incb
mov
mov
push
fiadds
cmp
fcmovbe
cli
cmp
mov
int
xchg
outsb
mov
call
dec
or
aad
jo
inc
cmp
and
pusha
adc
or
or
adc
aam
ret
or
cmp
iret
sub
out
test
pop
inc
mov
movsb
cmpsl
adc
out
cwtl
and
ret
xchg
cmc
and
lods
and
mov
ds
movsl
roll
push
sbb
fstpt
mov
push
jns
adc
add
cmp
and
sahf
xor
push
push
cmp
iret
bound
xchg
pop
adc
mov
pop
jno
mov
cmp
push
cmp
insl
adc
cmp
xchg
jno
aas
jo
rorb
add
sti
sub
les
and
jne
mov
int3
lea
negb
gs
sarb
pusha
into
rcrb
dec
push
data16
stc
mov
das
add
popf
sub
stc
lea
and
sbb
sbb
insb
cld
mov
fstl
fisubrl
adc
adc
in
stos
add
xchg
adc
sub
dec
enter
gs
repnz
xchg
call
fstpt
mov
jns
lds
pop
mov
inc
mov
mov
and
push
popa
aam
jecxz
das
mov
aaa
test
test
out
fstl
in
rorb
cwtl
inc
lcall
js
xchg
mov
ret
mov
repnz
xchg
lret
inc
xchg
cmp
mov
loope
mov
xchg
pop
pop
jle
sbb
sub
in
add
test
out
sub
and
push
hlt
into
aaa
lods
fldcw
or
sub
fistpl
push
mov
cmp
popf
ret
xor
imul
add
ja
sub
loopne
icebp
sub
mov
jl
cmpsl
int3
push
jg
pop
sub
inc
loope
negb
add
cmp
in
push
nop
fstpl
and
cld
lea
test
int3
adc
pop
fcmovb
xchg
and
mov
jne
mov
and
mov
arpl
jo
or
jno
add
notl
movl
jecxz
mov
sub
fcmovb
push
enter
std
sub
cmp
mov
xchg
insl
shrl
sub
mov
adc
inc
sarl
movsl
lret
ds
jbe
mov
pushf
lcall
lock
movsl
je
js
xchg
adc
popf
loopne
test
popa
mov
pop
sbb
mov
pop
rcr
testl
pop
push
xchg
push
adc
jbe
sbb
out
mov
mov
cmp
jns
mov
dec
and
leave
test
dec
xor
in
out
inc
or
add
insb
xor
mov
add
iret
jmp
ret
xor
pop
mov
mov
sbb
cmp
cmp
xor
pop
bound
jne
lret
std
mov
das
insb
jno
mov
cmp
jno
aad
and
adc
push
loop
mov
inc
push
and
push
mov
and
mov
inc
dec
push
test
imul
add
jmp
add
cmc
outsb
dec
jb
adc
out
xchg
jnp
fldcw
in
es
sbb
lock
out
adc
push
bound
pop
add
lock
aam
mov
test
xor
pop
vcmpsd
mov
nop
cltd
xchg
pop
lods
inc
push
pop
rcll
fildl
sub
sbb
cltd
fs
mov
arpl
sub
out
popf
shll
pop
loope
outsb
mov
sub
xchg
cmp
movsl
out
or
dec
aad
adc
adc
icebp
adc
mov
adc
popf
push
and
adc
loope
mov
sti
mov
push
pop
xchg
in
notb
or
jp
mov
jne,pt
push
xchg
jmp
aad
inc
inc
add
jp
test
add
xchg
imul
sti
inc
ffreep
push
dec
xchg
lea
xchg
clc
roll
pop
loope
shlb
cwtl
pop
sarl
es
adc
movsl
push
outsb
and
xor
cs
dec
std
lock
stc
imul
fwait
jmp
jbe
mov
xchg
cmp
arpl
dec
mov
iret
cwtl
and
insl
in
jge
inc
add
daa
js
push
mov
adc
push
repz
mov
iret
pop
inc
inc
and
jo,pt
mov
pop
jle
xchg
pop
cmp
out
pop
outsb
push
mov
imul
lahf
fimull
inc
fldt
mov
es
cmp
pop
jp
das
mov
jae
aam
xchg
xchg
pop
add
and
fists
jb
sbb
andl
push
add
ficompl
jbe
or
mov
into
pop
je
xchg
cmp
loopne
lret
popa
je,pn
cwtl
lcall
bound
mov
xor
ds
fsubr
cwtl
outsb
mov
out
fcmovu
mov
mov
or
cli
lock
aad
insl
in
repnz
pop
sub
xor
cmp
adc
xchg
inc
mov
ds
cld
and
fildll
mov
dec
jns
xor
xor
and
dec
pop
push
ds
mov
pop
or
rclb
xor
add
sbb
addr16
hlt
loopne
jp
test
xchg
imul
cmp
lahf
hlt
inc
das
fstpt
loopne
sub
out
inc
cli
jle
popa
push
outsl
cmp
inc
xor
pusha
dec
jg
push
pop
sbb
xchg
out
or
sub
pusha
cs
adc
inc
scas
mov
jp
sarb
and
sbb
xchg
addl
loope
fisubs
je
mov
push
fistpl
xor
stos
fisubrs
bound
lret
adc
sub
or
fistpl
pop
lcall
inc
mov
and
rolb
cmp
lods
mov
dec
xor
mov
inc
bound
popf
pop
es
cwtl
fwait
das
imul
shrl
cmp
add
xchg
pusha
xchg
cmp
das
xor
inc
jb
std
mov
pop
push
popf
mov
fs
inc
cmpb
leave
inc
lea
inc
adc
or
push
jne
pop
js
adc
mul
xchg
ds
push
test
mov
push
dec
lret
xchg
ret
test
movsb
stos
clc
hlt
leave
jp
and
ret
mov
mov
xor
stos
filds
pop
pop
mov
push
push
imul
call
mov
jno
out
or
dec
add
mov
js
mov
cwtl
outsl
sahf
dec
inc
scas
mov
push
push
mov
inc
lods
sub
ficoms
lret
or
stos
je
test
xchg
push
pop
lahf
xchg
cli
bound
int3
fstl
das
dec
xchg
jne
loope
lods
sbb
and
cmp
cmp
sbb
mov
mov
aas
push
mov
inc
push
inc
jle
ss
mov
je
popa
shl
fs
sbb
icebp
imul
pop
bound
xchg
cmpl
sahf
jmp
imul
xlat
dec
shlb
xor
add
daa
test
and
pop
mov
xchg
jle
ds
xor
pop
mov
mov
adc
outsb
jmp
and
pop
xor
mov
insb
ficoml
cltd
test
adc
mov
xor
jmp
clc
cld
fimull
movsl
mov
push
lret
out
adcl
loop
mov
jno
push
iret
jbe
lds
adc
sbb
xchg
mov
jns
es
mov
cmp
xchg
push
scas
test
xchg
cmp
jle
mov
xchg
insl
popa
ja
outsb
push
dec
scas
mov
sbb
jle
push
pop
jno
sub
inc
icebp
rclb
outsb
push
cltd
jb
outsb
data16
popf
fildl
xor
mov
testb
inc
insb
sub
add
fisttpl
push
inc
sub
frstor
or
cmpsb
fistpll
mov
cmp
xchg
sbb
and
aaa
es
imul
inc
mov
xor
xchg
lea
andl
fisubl
mov
je
ficoml
fisubrs
add
xor
aaa
jne
dec
or
cmp
pop
out
sbb
jo
sub
hlt
pop
add
subl
dec
sub
sbb
cmc
daa
xor
icebp
cmp
pop
xchg
lret
fdivp
ds
cmp
in
inc
mov
iret
dec
aas
cmpl
jb
inc
and
cmpsl
cmp
cmp
sub
adc
sub
shl
mov
lods
jbe
scas
sub
mov
lock
fucom
lcall
fildl
repnz
jmp
and
inc
and
xor
rol
orb
lods
xchg
lods
inc
gs
lahf
popa
xchg
pop
in
push
or
pop
pusha
adc
mov
lret
mov
cli
icebp
js
xchg
jb
inc
out
cmp
loope
adc
cmpsb
adcb
lret
pop
push
outsb
and
gs
out
xchg
cmp
jno
mov
inc
movsb
xchg
sub
sub
int3
sub
mov
add
mov
mov
mov
jmp
jo
lods
cwtl
popa
cmp
jp
lds
pop
and
mov
nop
jmp
mov
mov
bound
xchg
xchg
scas
mov
mov
jno
cltd
shr
das
call
push
dec
into
sub
mov
cmp
push
xor
enter
arpl
pop
jg
add
sbb
or
jbe
fidivl
mov
jle
cmp
test
lock
dec
sbb
inc
popa
lcall
mov
out
sbb
adc
outsb
jnp
inc
push
int3
mov
cmp
sub
call
mov
addr16
rorb
and
mov
test
sahf
sub
inc
dec
incb
jnp
xchg
loope
xchg
xlat
repnz
dec
fcomps
lcall
mov
and
in
jle
xchg
mov
mov
cmc
pushf
push
clc
div
div
in
sub
jns
aaa
mov
shr
shlb
out
jmp
hlt
mov
sub
bound
sahf
popa
fsubl
cmpsb
es
sbb
or
lret
pop
add
inc
mov
mov
jle
and
push
fwait
je
mov
test
fsubrl
roll
out
fdivr
jg
pop
call
out
out
in
adc
mov
stc
sti
mov
je
jne
dec
or
mov
aam
xrelease
dec
jle
loope
ret
sub
pop
fs
lock
and
mov
ds
mov
aam
iret
inc
xchg
imul
std
push
jae
pop
mov
imul
pop
adc
in
xor
push
push
jo
jle
xchg
rorb
sahf
cld
add
pop
mov
rorl
xchg
add
xor
add
sbb
push
mov
mov
ss
arpl
cmp
call
mov
data16
fdivr
mov
lds
mov
sub
mov
adc
pushf
push
clc
pop
movsl
faddl
mov
arpl
push
pop
mov
lea
and
adc
dec
push
pop
adc
xchg
fs
and
aas
xchg
add
pusha
mov
xor
test
mov
outsb
mov
mov
xor
stc
mov
cld
mov
lods
add
lret
mov
ret
lret
stos
loope
notrack
pop
rcrl
outsl
push
lods
bound
inc
dec
pop
add
adc
mov
movsl
ja
mov
or
mov
in
cmp
inc
xchg
adc
popa
lret
and
aaa
or
fisttpl
lcall
das
shlb
test
sbb
cli
pop
and
lock
aad
ret
popf
shlb
fcmovnb
fisubl
das
out
xchg
jne
imul
sti
je
add
out
mov
dec
ficompl
cmp
sbb
icebp
mov
testb
cmpl
sub
sub
push
lcall
std
lock
sub
or
adc
bound
lcall
sub
cmp
in
insl
idivl
dec
lcall
push
roll
bound
jne
fs
notl
sti
leave
test
sub
jo
add
pop
cli
je
mov
call
or
mov
or
add
xlat
mov
jl
inc
nop
sbb
movsl
rcr
mov
cmp
mov
lret
push
loopne
aas
or
jo
popf
testl
adc
dec
mov
xor
and
fldcw
lcall
loopne
mov
dec
cmp
push
push
jp
pop
xor
xor
fimuls
data16
xchg
dec
jmp
popf
fisubrs
sbb
sub
repz
adc
fildl
add
arpl
out
xor
push
jbe
sub
inc
adc
sbb
lock
mov
xor
pop
ss
push
lret
cltd
hlt
inc
sub
xor
xor
push
cmp
inc
or
into
in
call
adc
and
mov
hlt
ljmp
in
adc
and
xor
data16
jmp
push
push
roll
into
stos
pop
mov
mov
outsb
pop
mov
sbb
jns
push
call
sub
xor
mov
and
imul
sbb
xchg
ret
outsl
fiaddl
sub
mov
daa
adc
aaa
or
test
sub
jp
fldcw
sbb
cmp
loopne
repz
jb
pop
jnp
inc
aam
push
ja
fldenv
push
fstpt
and
pop
pushf
or
and
add
inc
bound
pop
call
lods
cmp
icebp
fs
test
xor
in
pop
xchg
ret
push
mov
push
nop
in
push
lea
dec
loopne
push
add
and
dec
and
and
adc
xlat
es
pop
les
lock
test
test
lahf
movsl
or
inc
xor
push
pop
push
push
and
mov
in
mov
enter
cmp
xor
roll
mov
cmp
and
cmp
aam
push
bound
and
call
and
frndint
xchg
shll
mov
mov
popa
pop
mov
ss
jb
nop
pop
inc
int3
hlt
loope
fnstcw
mov
inc
fistl
dec
inc
dec
mov
sub
test
cmp
xchg
in
xchg
push
lea
fildl
push
or
aad
imul
xchg
mov
popf
insl
xchg
stc
daa
pop
cmp
nop
push
sub
dec
clc
stos
pushf
mov
roll
mov
adc
xchg
aad
cmc
loope
push
add
push
sub
addr16
push
lahf
pop
pop
ss
inc
inc
dec
movsl
shrb
mov
les
xor
call
andb
sub
roll
popa
mov
std
data16
lock
pop
lock
lcall
sub
jo
cs
xchg
outsb
ds
jo
xor
pop
pop
jp
bound
mov
sbb
inc
mov
push
push
jg
sti
dec
inc
out
jecxz
sub
lods
addr16
pop
gs
inc
lods
jle
outsb
add
inc
push
pop
add
stc
mov
pop
int3
inc
mov
jae
hlt
add
and
xchg
call
mov
and
fstpl
addr16
inc
inc
sub
cmp
lea
leave
push
ss
vphsubdq
jl
pop
inc
xchg
mov
lock
jecxz
ds
adc
enter
test
mov
js
mov
jle
push
cmpsb
aam
shlb
push
subl
xchg
xchg
mov
xor
bound
jbe
xchg
mov
push
movsb
sub
mov
stc
pop
dec
fwait
mov
outsb
xchg
jnp
in
or
cmp
xchg
and
cwtl
jp
push
jge
xchg
cld
push
mov
cmp
sbb
fsub
sbb
sete
fs
lret
sbb
je
pop
lock
mov
dec
push
test
enter
pop
inc
fnstcw
sub
mov
shlb
pop
aam
pop
lea
jns
jmp
pop
xchg
es
lea
sbb
inc
sbb
jne
mov
xchg
btcl
and
push
lret
push
xchg
mov
clc
mov
jns
dec
push
imul
dec
mov
push
jb
sub
xor
lods
idivb
mov
mov
imul
imul
call
dec
out
das
ds
adc
dec
mov
push
into
stos
hlt
int
aaa
ds
mov
xchg
mov
sbb
ret
add
jnp
les
stos
ret
xor
push
and
sbb
pop
push
jo
sub
pop
or
aas
jmp
and
add
and
hlt
popf
pop
cwtl
outsl
adc
ljmp
sub
loop
cltd
xchg
clc
lods
push
movsl
push
fistps
scas
mov
in
mov
test
and
jae
stos
pop
dec
enter
pop
jp
add
or
repnz
movsb
sbb
sbb
mov
inc
je
pusha
sub
sahf
fdivr
movsb
inc
ja
mov
xor
outsb
jne
outsl
imul
call
out
xor
sbbb
pop
lock
and
stc
je
call
adc
pushf
cli
fimull
and
je
nop
mov
sbb
loope
and
inc
jne
add
subb
inc
or
shll
fstpt
push
loopne
cmp
leave
shl
lds
sahf
jl
das
pop
inc
pop
push
pushw
push
mov
hlt
jns
xlat
pop
out
cmp
ret
ret
and
pop
dec
xor
xchg
call
lds
jo
mov
adc
repz
pop
jmp
lods
subl
inc
xchg
bound
mov
les
daa
pop
inc
mov
cmp
fsubrl
add
in
and
repnz
or
mov
fsubrs
outsl
mov
pop
sbb
fisttpl
cwtl
test
jmp
and
add
mov
scas
shlb
call
xor
js
xlat
xchg
aam
add
dec
adc
rcr
cmp
lea
add
cmpsb
rol
adc
jne
sarb
daa
ljmp
push
les
cwtl
jmp
gs
xchg
ja
jnp
out
in
xchg
inc
mov
bound
daa
inc
je
shlb
pop
iret
pop
imul
into
mov
mov
pop
movl
lods
lahf
scas
bnd
mov
mov
scas
mov
leave
inc
jne
les
mov
bound
ret
repz
loope,pt
sti
sbb
mov
push
les
inc
push
sbb
dec
mov
out
push
xchg
adc
mov
sahf
outsl
popa
idivl
mov
pop
mov
lock
mov
sbb
jp
push
fsubr
pop
xor
jns
fs
mov
mov
push
lods
lcall
sbb
es
sbb
xor
add
add
test
ficoml
push
lret
add
add
cmp
or
push
xor
mov
pop
aaa
mov
fs
mov
and
out
inc
cmp
fcom
loope
inc
inc
mov
lods
and
xor
sbb
jp
fwait
dec
xor
push
daa
mov
pushf
cmp
cmp
dec
mov
rcll
mov
xchg
sbb
mov
cld
loop
int3
in
pop
mov
sub
or
and
fcmovbe
divb
psubd
out
cmp
pop
cmp
cmp
out
xchg
bound
cmpsl
mov
dec
sbb
jl
rorl
repnz
lods
insb
jno
xor
dec
pusha
into
jle
out
sti
bound
mov
sub
dec
ret
bound
iret
jno
sbb
insl
inc
in
sbb
cmp
pop
pusha
mov
fnsave
xchg
and
sub
mov
shrb
bound
push
mov
je
pop
pop
les
lret
mov
pop
test
dec
cmp
bound
jae
loop
fimuls
mov
sub
testb
mov
into
pop
mov
jle
adc
stc
mov
sbb
jno
scas
jle
aaa
movsb
rol
jg
movsb
daa
jae
ret
mov
jb
dec
jecxz
jle
dec
dec
fs
cltd
xchg
loope
bound
sub
pop
aad
aaa
jne
dec
test
ds
test
adc
js
loope
jle
inc
pop
popa
outsb
push
sbb
dec
and
xchg
mov
xchg
sti
data16
add
aam
loope
xor
inc
sbb
stos
fisttps
mov
and
jne
aam
lcall
pop
inc
sbb
cld
lahf
and
cmp
mov
push
and
sbb
mov
mul
sub
xchg
and
aaa
leave
sub
int3
fcmove
add
rorb
and
icebp
leave
cmp
jle
sub
inc
fucom
in
jns
pusha
dec
decb
cmp
lods
fnstenv
xchg
xor
pusha
fistl
ds
notb
push
fs
into
jno
add
rcl
imul
inc
mov
xchg
fldt
push
je
jno
cmpl
push
mov
xor
mov
push
or
imul
pop
pop
push
pop
sbb
push
into
aam
cmp
insb
sub
sub
and
jp
test
jp
cmp
bound
inc
adc
mov
sub
dec
sbb
jp
mov
pop
lods
cmp
icebp
inc
jne
lahf
mov
icebp
mov
fs
mov
adc
lods
imul
mov
pop
mov
cmpsb
aad
pop
incb
mov
mov
xlat
and
ds
dec
popl
sub
mov
and
sub
js
dec
jg
adcl
or
jbe
push
sahf
mov
jnp
jne
and
out
sbbb
stos
faddl
ss
lahf
inc
jl
add
cmpl
mov
sbb
pop
sbb
mov
adc
adc
lds
sub
jecxz
push
lcall
jp
sahf
cmp
in
inc
pop
das
mov
mov
les
lcall
cli
or
xor
mov
add
andl
cmp
push
jo
fildl
sub
xor
push
inc
or
sbb
dec
inc
xor
insl
sbb
adc
dec
mov
pop
mov
pop
mov
inc
loope
or
stc
filds
outsb
fidivs
ds
sti
fs
add
fs
sbb
imul
imul
jl
adc
xor
jle
mov
sub
ds
test
push
push
lret
sub
cld
shlb
jo
jge
mov
add
arpl
xor
mov
mov
mov
pusha
fidivrl
js
shrl
lahf
sbb
adc
cmpb
rcl
testl
out
jno
aad
sarl
inc
gs
out
jbe
jmp
jl
test
shlb
orl
jne
xor
mov
addr16
inc
iret
repnz
je
fimull
or
or
test
stc
aaa
je
mov
jp
mov
adc
mov
shr
in
enter
cmp
jmp
pushf
add
sbb
lds
test
fsts
arpl
and
shll
mov
inc
inc
xor
bound
sub
cmpb
loopne
test
aas
push
lret
cmc
lahf
push
js
ret
and
pop
pop
or
xor
fs
stc
ljmp
bound
stc
mov
jbe
sbb
mov
fistl
push
adc
in
mov
xor
cmp
xor
mov
daa
adc
mov
sarb
inc
aas
pushf
xorb
xor
rclb
jnp
enter
pop
fisttpl
cmpsb
nop
lret
add
inc
es
dec
leave
sahf
dec
test
in
pusha
dec
cmp
sub
out
fwait
pop
cwtl
and
mov
into
and
lret
push
mov
mov
lcall
xchg
loope
fbstp
inc
enter
outsb
rolb
stos
cmpb
dec
push
adc
xchg
jl,pt
xchg
in
dec
je
xchg
jns
bnd
inc
jmp
mov
mov
inc
int
loope
xchg
ds
jo
loopne
add
xor
jmp
mov
sbb
fstl
mov
in
xchg
repnz
push
inc
inc
int
or
leave
jae
mov
fcoms
shrl
es
in
lret
std
ffree
sub
test
adc
sbb
adc
and
jne
or
adc
cmp
in
int3
lcall
add
sub
dec
es
and
clc
aas
out
mov
arpl
xchg
rcll
lret
stos
cmp
les
adc
cmp
mov
call
aaa
push
fnstenv
jo
push
icebp
sub
mov
dec
sub
outsl
cli
adc
nop
adc
jnp
out
mov
fildll
pop
mov
and
js
jle
out
add
and
inc
sub
xchg
jle
push
fistpl
mov
sbb
inc
test
xor
into
mov
sub
ss
lcall
mov
pop
sbb
imul
nop
fcomi
mov
lods
or
jmp
xchg
fld
jl
data16
or
and
call
push
jo
pop
insb
mov
jle
fcmovnu
pop
sbb
push
and
inc
mov
xor
call
add
out
ficomps
cli
mov
aad
aas
cmp
dec
push
sti
fs
add
sbb
push
ss
dec
push
stos
inc
les
xchg
mov
repz
and
popa
mov
mov
cmp
add
jb
sarl
mov
pop
int3
cmp
inc
or
bound
lods
sbbb
xchg
repz
mov
movsb
test
cmp
dec
outsb
gs
cmp
mov
std
cmp
lods
xchg
inc
imul
cwtl
pop
jns
imul
icebp
orl
xor
bswap
adc
pop
in
dec
outsb
and
pop
and
loop
mov
inc
lahf
sub
das
les
xor
sbb
mov
mov
lods
mov
mov
jp
pop
add
push
jmp
frstor
test
inc
push
inc
fldt
ret
rcll
pop
adcb
and
cmp
pop
clc
sahf
icebp
sub
shrb
mov
adcl
ret
and
pminsw
lods
cmp
sub
pop
je
mov
cmp
pop
idivl
add
lods
sub
loope
jns
addr16
cmp
test
pusha
pop
mov
pop
adc
fs
in
aam
rolb
ret
push
jecxz
pop
jno
fldenv
mov
adc
movsl
add
scas
out
lret
dec
mov
ret
fmuls
push
andl
rorl
scas
ds
jbe
adcl
cwtl
fisubrl
jg
jo
aad
stc
inc
push
popf
mov
stc
xchg
push
iret
loopne,pn
int3
fiaddl
adc
xlat
dec
imul
push
xchg
bound
dec
test
pop
lock
sbb
inc
outsb
lret
mov
data16
stos
les
movb
ss
inc
inc
mov
pop
gs
cmp
inc
xchg
mov
fucomp
fidivrl
fildl
jo
or
out
cmp
inc
pop
fnstenv
mov
and
and
mov
jp
sub
ficoml
adc
lods
add
jnp
cmp
mov
sbb
cmp
jns
js
sbb
xor
sbb
adc
jge
push
popf
call
mov
insb
imul
adc
dec
clc
out
lea
adc
daa
push
and
jmp
xchg
rorl
xchg
sbb
cli
out
ret
inc
push
cmp
sbb
dec
dec
inc
fistpl
cmp
out
lods
jle
cmp
js
push
pop
popf
jp
imul
cs
inc
cli
inc
and
addr16
inc
je
movsb
and
imul
cmc
insl
aaa
sub
shrl
mov
repz
stos
rcrl
mov
ret
inc
mov
xchg
insl
fidivrl
jmp
mov
xchg
test
test
out
sti
pop
jle
mov
sub
dec
mov
cmp
pusha
out
in
jb
stc
subl
dec
push
pop
mov
inc
int
mov
int3
lds
pop
jne
mov
inc
fisttpl
stos
enter
adc
enter
icebp
pushf
pop
xchg
iret
adc
cmc
and
adc
cld
es
sub
jne
push
xlat
mov
mov
xor
loop
lret
fisubl
sti
lods
lret
push
cmp
shl
lods
sbb
and
lret
out
andl
notb
or
arpl
pusha
mov
shlb
rsm
pop
jp
pop
cmp
mov
jl
mov
add
push
mov
int
mov
push
cltd
ljmp
out
inc
add
pop
mov
imul
xchg
fsubl
test
push
or
je
ja
pop
jp
push
push
add
dec
insb
xor
fistl
bound
xchg
inc
jl
pop
fwait
and
test
dec
pop
movsl
js
xchg
cmp
aam
xor
pop
mov
cmp
in
sub
pop
shrb
push
jno
or
filds
mov
pop
gs
fistpl
mov
xor
jbe
lods
inc
mov
push
bound
fidivrl
pop
inc
mov
pcmpgtd
ds
shlb
pushf
push
mov
nop
cmp
imul
pop
mov
jge
repz
ljmp
jge
popa
ja
aaa
repz
scas
push
xor
cmp
call
dec
inc
stos
mov
cltd
aas
jp
jb
scas
movsl
xchg
lds
and
outsb
mov
pop
rolb
pusha
and
or
dec
inc
nop
pop
movsl
int3
fnstenv
pop
xchg
cmp
and
and
adc
pop
ds
mov
jecxz
fisttpl
movsl
stc
ret
ds
daa
mov
sbb
shr
jae
xor
jo
jge
es
jle
mov
lret
fs
xchg
mov
cs
lds
ljmp
inc
or
dec
fstpt
and
cmp
or
out
imul
cmp
cmp
psraw
inc
jp
mov
insb
cmp
cli
add
xchg
scas
popa
xchg
or
jge
push
mov
xlat
mov
jle
mov
xchg
mov
and
mov
aas
and
pop
pop
mov
dec
push
mov
jo,pt
xor
add
pop
xor
add
sub
fucomi
int3
and
outsl
dec
les
sbb
xchg
int
xlat
sbb
pop
pop
jg
repnz
bound
xor
arpl
inc
xchg
aaa
pop
or
jge
xor
push
lds
int
dec
ja
mov
cmp
jecxz
push
lcall
push
repz
fldpi
jb
inc
inc
fisttpl
adc
call
mov
mov
fidivl
sbb
xchg
sub
fldt
daa
hlt
push
pmuludq
inc
sbb
ss
push
or
add
int
popa
push
cli
mov
ds
sub
jne,pt
repnz
mov
dec
cltd
push
cmp
mov
ja
jp
icebp
mov
ja
jo
enter
aam
sub
adc
mov
hlt
jbe
xlat
push
dec
andb
cli
cmp
jns
or
pusha
aam
lock
cmp
pop
fisttpll
inc
sbb
push
add
punpckldq
push
bound
jmp
xchg
and
push
mov
in
sbb
fildll
fiadds
adc
fdivs
arpl
lcall
rcrb
ds
fsincos
faddp
cmp
cmp
popa
adc
imul
movsb
aas
sub
push
cmp
movsb
sbb
inc
sub
mov
jl
xor
in
mov
mov
cli
in
sbb
cs
jg
je
in
fildll
pop
pop
jle
dec
cmp
add
fdivrp
fcmovb
jo
sbb
sub
or
cwtl
sbb
shll
in
ljmp
lods
out
mov
sbb
sbb
adc
cmp
adc
pop
sbb
inc
xor
arpl
sbbb
dec
out
rcrb
ljmp
incb
push
cs
add
pop
mov
pop
stos
pop
mov
pushf
repnz
pop
jmp
jmp
sbb
incl
imul
out
jnp
mov
adc
mov
jp
pop
and
cmp
jae
stc
pop
fcmove
jp
mov
sbb
and
ljmp
arpl
and
xor
outsl
flds
mov
and
mov
mov
sub
fisubrl
jmp
inc
fstpt
hlt
loopne
lcall
push
mov
mov
pusha
sbb
pop
xor
fiaddl
sti
inc
sarb
or
inc
imul
cmp
jo
mov
hlt
pop
stos
loopne
jmp
sub
cli
mov
ficompl
sub
fstpt
adc
cltd
cmp
pop
xchg
sbb
cld
mov
fbld
jp
cs
test
mov
xchg
neg
sbb
mov
mov
sbb
mov
sub
adc
fnstenv
mov
sbb
fcomip
mov
mov
and
mov
cmpsb
dec
ljmp
rolb
mov
daa
mov
or
fucomip
pop
dec
pop
repnz
sub
pop
sbb
cmp
inc
and
inc
orl
adc
inc
inc
adc
sahf
insl
and
mov
es
je
or
push
aam
shrd
mov
inc
in
mov
xor
sub
rcr
or
add
xor
jns
loopne
rcll
cld
cmp
adc
in
xor
mov
clc
mov
mov
xor
aad
mov
arpl
xchg
sbb
loopne
arpl
cmc
jle
pop
repz
xchg
cmp
dec
pop
mov
dec
and
xor
rorl
mov
inc
add
xchg
popa
pushf
lock
add
outsl
pop
adc
pusha
popf
outsl
ret
frstor
lea
fmull
std
bound
sub
xor
imul
lods
and
or
jl
in
int
cmp
push
jle
sbb
dec
xor
push
inc
enter
imul
leave
and
inc
sbb
test
jle
adc
inc
lahf
mov
das
sahf
inc
mov
sub
mov
mov
neg
and
dec
dec
ret
in
std
fistpll
adc
std
cli
ss
inc
das
imul
scas
cmpsb
add
xchg
jp
dec
or
insl
outsb
pop
nop
inc
jmp
movsl
fisttpl
jle
dec
ss
jp
adc
xor
pop
fwait
cmp
mov
sahf
lret
rorl
fsubs
dec
mov
pop
xchg
bound
xor
pop
fstpt
fisubrl
jns
push
sub
xchg
mov
mov
cmp
pushf
jp
xchg
xchg
push
sbb
sbb
xor
mov
lret
cld
jns
sbb
mov
sti
inc
dec
cld
dec
lds
inc
fisubrl
cmp
shlb
or
mov
scas
jne
ljmp
enter
inc
jns
sub
xchg
adc
jbe
sub
jge
scas
push
jae
mov
and
test
fs
fldenv
add
test
daa
ja
rclb
adc
pusha
ds
cmc
push
or
or
mov
jp
xor
add
add
jmp
sbb
enter
stc
mov
mov
mov
clc
xor
mov
data16
jp
push
and
pusha
icebp
pop
nop
adc
lods
shrb
fcmovne
test
fbstp
dec
inc
jmp
mov
lods
xchg
jmp
mov
shlb
mov
mov
push
inc
jmp
xor
mov
shrb
inc
rcrb
add
jo
mov
mov
pop
xchg
out
mov
pushf
jmp
fdivrl
xlat
rorb
cmpb
sbb
xchg
movsl
jnp
fidivrl
mov
das
lods
sub
lret
and
movsl
sti
and
xor
sbb
push
and
cmp
pusha
mov
and
adc
fnsave
aaa
fsub
arpl
dec
inc
add
in
jne
xor
jb
sbb
addr16
aad
popl
pop
orb
mov
outsb
ds
aas
inc
adc
mov
mov
inc
or
aam
xor
adc
aaa
adc
jle
std
outsb
pop
push
jb
and
jbe
mov
xor
sbb
jp
adc
std
mov
xor
xor
mov
out
das
lcall
cltd
loop
add
xor
arpl
sub
int
scas
lcall
icebp
mov
inc
xchg
dec
sub
push
out
and
and
js
sbb
ficompl
lcall
sbb
arpl
xchg
pop
sbb
sahf
sub
xchg
ljmp
imul
xor
lret
dec
mov
cmpsl
andl
in
dec
mov
std
xor
inc
mov
mov
frstor
pop
hlt
mov
mov
jecxz
inc
cmpsl
sahf
inc
sub
push
sbb
jp
pop
xchg
jnp
jmp
aaa
rorb
clc
and
lea
or
fiadds
jo
pop
outsb
lds
lret
cmp
inc
movsl
enter
push
cmpsb
and
mov
mov
inc
dec
fs
rcrb
test
pop
fneni(8087
fidivrl
mov
hlt
pop
jbe
xchg
cltd
ds
leave
add
mov
jmp
sub
mov
bound
nop
sub
and
popa
shll
out
rcr
mov
ljmp
jecxz
fstl
xor
push
or
jno
pusha
into
jp
stos
mov
adcb
jbe
enter
mov
sahf
mov
imul
jno
sbb
mov
and
or
cmpb
movsl
std
mov
sub
xor
sbbl
pop
lea
arpl
sub
loopne
add
jnp
jne
add
movsl
cmp
pushf
stos
lods
mov
mov
cmp
pop
in
pop
bound
mov
mov
rolb
add
mov
insb
divb
push
mov
mov
sbb
mov
outsl
and
jns
xor
mov
imul
mov
jl
cltd
inc
pop
mov
loope
int
mov
sub
into
mov
xchg
inc
cmpsl
lods
push
lcall
jle
sub
rcll
lret
mov
push
jg
xor
ljmp
dec
in
int3
lds
cli
fldt
test
jp
pop
dec
nop
mov
mov
fucom
mov
ds
sub
cmp
push
stos
pop
sub
cmp
pushf
imul
das
scas
xor
pop
test
bound
jmp
sbb
xchg
aad
sbb
je
jmp
pop
sahf
mov
jo
fldt
ds
dec
or
adc
fldl2t
sbb
add
jbe
ja
call
stc
push
lcall
mov
push
and
mov
dec
dec
inc
leave
mov
in
inc
roll
mov
or
ret
insb
mov
ds
icebp
jbe
fldt
sub
sbb
lret
lods
mov
fs
mov
mov
xchg
pop
xor
sti
mov
into
imul
lahf
subb
leave
ret
arpl
imull
insb
fildl
mov
push
lret
scas
outsb
mov
enter
pusha
mov
jo
nop
mov
xchg
jge
mov
mov
lds
ja
mulb
mov
add
sub
push
sub
dec
inc
jae
xchg
in
shlb
jb
js
adc
inc
lea
cmp
xor
or
dec
jns
mov
pop
jae
jg
and
out
ljmp
and
xor
lds
scas
out
insl
jne
xchg
enter
lret
pop
sbb
mov
xor
es
ret
xchg
pop
ds
or
fmulp
and
aad
iret
sub
mov
mov
int3
jle
jmp
xchg
and
scas
lods
mov
adc
mov
sti
and
sbb
lret
repz
dec
pusha
test
mov
test
mov
imul
sub
inc
pushf
addl
call
dec
add
mov
pop
and
push
jb
daa
mov
lcall
sub
sahf
out
outsl
pop
sub
cmp
add
lods
jp
fprem1
mov
int
push
jmp
mov
cli
lea
icebp
cmp
movsl
into
lods
ficoml
push
mov
mov
inc
push
xchg
stc
pushf
dec
out
addr16
aaa
or
push
mov
cli
xor
inc
sahf
push
repz
leave
arpl
aas
stos
test
out
adc
cmp
ret
loope
shlb
stc
cmp
cmpsl
filds
mov
leave
mov
sbb
xchg
decl
mov
movsb
out
and
sub
pop
je
cmp
pop
je
adc
cmp
cmp
pop
dec
mov
decb
inc
pop
sbb
push
mov
push
lret
push
mov
ds
call
and
adc
lret
push
shr
dec
pop
or
cmp
inc
mov
push
xor
and
xchg
dec
jp
mov
jp
push
sub
dec
in
das
push
mov
mov
cmp
mov
mov
inc
into
sbb
vmovapd
je
mov
jge
xlat
xchg
loop
sbb
dec
dec
jp
ss
jo
jp
xchg
fsubs
mov
in
fbstp
sub
cltd
sahf
push
out
and
xor
xchg
out
stc
hlt
adc
lcall
xchg
jno
and
ljmp
add
fdivrp
xchg
jl
pop
ret
push
ljmp
cmp
mov
jnp
and
push
js
stc
ja
popa
shl
test
pop
push
or
jmp
jmp
cwtl
aas
sarb
mov
imul
roll
jnp
jns
cli
mov
daa
popa
sub
mov
sub
pop
lcall
pop
mov
subb
fildll
or
xor
jno
xchg
enter
or
cmp
sbb
scas
mov
inc
bound
inc
sub
pushf
sbb
jmp
sarb
dec
mov
pop
sbb
loop
sti
dec
xchg
cmp
popa
fdiv
add
fcmovnb
inc
lods
dec
pop
je
mov
icebp
hlt
scas
cli
push
sti
insl
into
gs
and
call
push
and
jnp
out
cltd
jns
je
mov
stos
pop
mov
imul
push
iret
mov
inc
lods
mov
or
sub
add
inc
das
push
pop
gs
push
out
leave
mov
out
push
sub
sarl
xor
lahf
lcall
stos
dec
enter
lods
lret
int3
sahf
leave
xchg
clc
fcompl
fs
push
lret
mulb
or
repnz
stc
adc
jmp
insb
hlt
xlat
dec
sbb
adc
in
or
jbe
ljmp
adc
cwtl
lock
sub
sub
xchg
pop
cmp
das
sub
stos
cmp
nop
inc
out
imul
mov
dec
popa
mov
dec
rcl
ds
int3
jnp
jbe
ficomps
mov
icebp
inc
mov
outsb
mov
popf
fs
inc
mov
icebp
mov
mov
sub
lods
push
mov
jl
mov
and
mov
xchg
jle
jg
insl
stos
or
or
fsubl
mov
mov
scas
mov
inc
mov
fucomp
fistl
xchg
inc
adcl
pop
cmp
popw
ficompl
pop
and
rorl
xchg
sub
dec
scas
jo
xor
pop
cmp
adc
pushf
dec
daa
imul
ds
out
xchg
ds
jge,pt
sbb
and
pop
or
jle
aaa
xchg
add
fidivrl
xchg
inc
mov
fwait
sti
sub
imul
sbb
cmpsb
aaa
enter
inc
enter
test
inc
or
lret
sarl
mov
pop
fidivl
in
inc
dec
xor
jp
sub
mov
mov
aad
sub
mov
adc
rcll
into
or
movsb
clc
aaa
xorl
call
movsl
sti
lcall
gs
pusha
dec
andb
push
pop
pop
int3
sbb
bound
or
xchg
dec
inc
pop
jo
scas
and
or
lods
sub
xchg
mov
lea
hlt
sub
sub
sarb
lret
jbe
push
jo
fs
and
faddl
fcmovnbe
mov
out
jp
mov
xor
mov
dec
daa
adc
jno
ljmp
mov
in
mov
push
adc
imul
push
jl
mov
imul
imul
pop
cmp
in
xchg
fadds
and
push
mulb
sahf
outsb
fisubrs
pop
fstpt
ljmp
or
cmpsb
sub
sbb
ljmp
dec
mov
mov
add
ds
sbb
cmpsl
pusha
mov
mov
dec
or
pusha
mov
jno
outsb
mov
fs
xchg
cmpsl
daa
ret
fs
dec
cmpb
jns
dec
and
imul
xchg
sub
cmp
clc
scas
jbe
xchg
sub
xchg
imul
in
add
iret
inc
ffree
jge
jne
inc
ret
mov
insl
sbb
mov
cs
mov
add
jge
mov
std
mov
adc
scas
mov
push
and
lcall
adc
push
sbb
pop
rsm
dec
cwtl
pop
bound
push
jp
mov
int
mov
pop
cmp
scas
sti
inc
cmp
bound
xchg
popa
aam
add
inc
sub
cld
xor
xor
cmpsb
popf
cmp
fists
hlt
aas
mov
insl
mov
bound
pop
xor
jae
pop
scas
cli
jne
daa
ror
mov
inc
pop
fnstenv
or
outsb
fldcw
iret
push
test
outsb
mov
sti
and
aad
dec
es
jl
jae
sbb
adc
es
sub
lret
repnz
fs
inc
popa
lcall
adc
je
dec
outsb
and
sub
aas
in
cmp
and
shll
or
clc
jp
xor
adc
mov
dec
pop
daa
sbb
scas
testb
test
and
arpl
xchg
clc
inc
ds
int3
pop
adc
outsb
mov
mov
in
pop
cmp
mov
roll
jp
leave
cli
pop
mov
insl
call
push
and
es
pop
daa
fisttpl
jp
and
push
fs
mov
fcoms
xor
jp
xchg
ds
inc
daa
cmp
mov
out
scas
sbb
test
cmp
xchg
or
sbb
and
or
inc
testl
push
outsb
adc
inc
jmp
push
pushf
dec
or
out
shrl
pop
aas
ljmp
ret
add
movsb
add
stc
and
sbb
xor
inc
insl
adc
push
inc
xchg
inc
xchg
fsub
pop
mov
lds
push
nop
sbb
mov
lret
inc
imul
inc
jp
inc
lcall
jns
fsubs
stc
out
xor
pushf
push
sub
cmp
mov
add
mov
jno
xor
out
das
jae
dec
bound
popf
in
pop
cli
lcall
cld
push
jnp
adc
mov
enter
cmp
dec
pop
xchg
lret
inc
jne
int3
pop
adcb
mov
fidivrl
adc
xor
test
jno
mov
sbb
mov
icebp
lcall
xor
ds
push
jbe
repnz
test
add
jbe
mov
inc
inc
in
xchg
daa
ss
jg
pusha
insl
mov
cmpb
aas
lea
push
fs
mov
dec
pop
xlat
xchg
push
in
shlb
insb
and
test
fstpt
sub
mov
lcall
mov
jge
mov
out
pop
out
cli
out
cli
cmp
push
sbb
xchg
aam
mov
ret
push
cmp
rcrb
pop
imul
shrb
out
pop
js
mov
in
xor
jnp
fisttpll
jae
sbb
sar
mov
aam
inc
jno
mov
cmp
jno
mov
sarl
pop
fisubl
sbb
ljmp
std
mov
add
mov
test
cmp
cmp
cltd
hlt
sub
dec
arpl
pop
sti
stc
orb
shll
addb
aam
add
push
jge
cmp
cmp
fidivrl
cmp
inc
cmp
lcall
add
ds
call
in
mov
bnd
pusha
and
jae
arpl
sub
arpl
jnp
pop
cs
movsb
dec
out
imul
lock
adc
decl
sub
xchg
pop
and
sbb
push
mov
ljmp
cmp
arpl
sbb
sub
fidivrl
mov
inc
imul
add
sbb
sbb
pop
aas
xorb
jo
and
cli
sti
jo
and
inc
stos
ljmp
jmp
repnz
fisubl
daa
push
bound
out
stc
sbb
or
and
xor
pop
sar
jo
and
dec
mov
ljmp
xor
arpl
ret
pop
lock
fimull
push
push
inc
repnz
mov
loopne
mov
sub
mov
push
pop
adc
ficomps
stos
and
lock
fwait
inc
push
cmp
or
test
cli
xor
add
mov
fimull
add
stos
arpl
sbb
imul
cmpl
and
mov
mov
xchg
jo
lret
adc
ficomps
xchg
cld
idivl
fdivl
ss
dec
jbe
jmp
roll
rclb
adc
push
or
or
loop
nop
aaa
imul
fiaddl
dec
pusha
add
in
sub
mov
cmpsb
sub
xor
mov
orl
aas
jg
mov
pop
into
xor
cltd
rolb
mov
es
xchg
leave
add
idivb
push
dec
jge
add
lret
cltd
sbbl
mull
jle
inc
jge
dec
js
jp
ds
push
stos
gs
and
adc
lcall
lock
jne
xchg
pusha
push
adc
into
out
jmp
xchg
push
jo
fdivl
pop
and
mov
addr16
jb
daa
mov
dec
jp
mov
mov
imul
mov
bound
sub
aad
int3
cmc
ret
test
xchg
daa
fnstenv
mov
xor
jl
xor
lea
mov
lods
sbb
imul
inc
ds
and
xchg
sub
pop
ss
fistl
xchg
inc
scas
das
mov
sahf
lahf
lods
cmp
xor
sbb
mov
xchg
lea
test
ljmp
je
adc
hlt
loope
adc
pop
mov
mov
movsb
popa
xor
cmpb
cmc
push
push
ljmp
test
lcall
inc
lea
repnz
insl
cmc
xchg
add
aam
lret
stc
rclb
es
in
push
mov
imul
cmp
fiaddl
out
mov
pop
cltd
dec
pop
and
loope
cmp
fs
jnp
lods
adc
pusha
inc
mov
cltd
jae
iret
popa
pop
mov
jae
add
fwait
sub
pop
subl
xchg
cmpl
xchg
bound
mov
sub
jns
test
push
dec
xchg
clc
jne
mov
pop
fisubrl
mov
fs
leave
add
pop
fidivrl
mov
xchg
inc
mov
xor
cmp
jae
lcall
mov
dec
mov
scas
mov
sbb
push
jns
push
ljmp
lods
insl
inc
xor
sub
jle
add
pop
nop
xor
stos
mov
lcall
xchg
mov
inc
add
cmp
leave
sti
das
ds
into
and
xor
leave
add
stc
dec
jmp
mov
push
dec
pop
mov
outsb
push
shrl
push
sahf
lcall
mov
pop
add
pop
orl
shll
rclb
dec
in
aam
popl
call
scas
inc
xor
stos
or
xchg
imul
leave
pusha
popf
js
cmpsl
popa
and
insb
push
pop
fs
rorb
xor
inc
jnp
and
mov
mul
aad
xor
mov
insb
xchg
inc
jl
pop
add
ljmp
icebp
mov
xor
int
mov
nop
jl
mov
addr16
enter
mov
xor
sbb
push
pop
popa
rorb
ret
inc
sahf
or
test
shl
ja
hlt
mov
and
sub
fistpll
xchg
inc
and
xchg
test
into
out
jp,pt
aas
and
ds
rcrb
insl
into
sbb
dec
repz
lea
mov
mov
mov
shlb
inc
loop
jno
mov
ret
xchg
xchg
cmp
xor
in
neg
xor
fpatan
imul
sbb
dec
pop
pusha
pop
rcrl
cmp
cmp
loop
fs
insb
sbb
in
int
jecxz
mov
cli
xor
xor
mov
adc
mov
jp
ljmp
data16
sti
or
add
cwtl
movsl
cmpb
or
xchg
call
sbb
inc
lock
dec
cltd
sub
nop
jecxz
or
into
mov
xchg
into
pop
es
loop
sub
sbb
popf
pushf
shll
sbb
push
cmp
push
dec
pop
test
adc
lods
xchg
lcall
cmp
shll
das
jmp
cmpsl
divb
dec
jo
mov
mov
je
sbb
leave
jmp
sbb
push
cltd
mov
xlat
push
xchg
inc
mov
cmp
xor
stos
pop
bound
popf
mov
sbb
pusha
test
mov
or
int3
mov
mov
or
ds
jecxz
sbb
fimuls
cmp
or
lahf
and
and
mov
and
test
adc
inc
xor
gs
push
ja
das
sub
mov
hlt
neg
dec
mov
mov
or
pop
lcall
xchg
cmp
mov
dec
lods
xchg
shrd
fnstenv
jmp
movsl
decb
mov
jle
xor
xor
xor
push
cwtl
test
movsl
dec
insb
xchg
bound
popf
js
sbb
insl
nop
xor
orb
cmp
lret
sub
outsl
xor
adc
aaa
lock
je
les
out
bndldx
lret
mov
addr16
and
jo
mov
fs
mov
sub
repz
shr
inc
popa
xchg
mov
mov
imul
or
mov
stos
sub
and
add
stc
fildl
mov
shll
push
sub
cmp
dec
push
flds
imul
inc
add
pop
in
cld
int3
fwait
in
mov
inc
repz
push
pop
in
movsl
lcall
mov
or
push
mov
movsl
lods
mov
lcall
and
sub
mov
nop
mov
mov
jecxz,pt
arpl
push
push
int
inc
pop
das
enter
dec
sub
ds
xchg
dec
ds
idiv
adc
call
push
daa
aas
sbb
xor
adc
push
lea
inc
and
mov
pusha
ret
adc
sbb
mov
fistl
push
das
popf
push
mov
jnp
inc
movsl
outsb
push
add
xchg
mov
imul
dec
add
dec
inc
ds
fiadds
xchg
in
psubd
lret
sbb
lret
movsl
andb
imul
mov
aaa
mov
ss
lcall
aaa
xor
popf
dec
daa
in
mov
lods
adc
jmp
enter
dec
repz
das
bsr
sbb
adc
cwtl
hlt
mov
sbb
fwait
out
xchg
xlat
fnstsw
cmp
and
mov
into
jno
and
lock
outsb
xor
and
sub
jo
jmp
scas
mov
adc
stos
shl
popa
cli
je
add
xchg
or
ficoml
sub
pop
cmp
cmp
fidivrs
addr16
jmp
gs
imul
inc
push
rcr
push
pop
push
test
jp
or
mov
jo
and
loopne
test
out
incb
add
mov
adc
mov
in
vdivpd
pop
movsl
daa
push
aam
jnp
or
aaa
dec
pop
iret
mov
add
int
ja
dec
lcallw
lods
repz
and
repz
push
dec
pop
repnz
inc
fildl
xchg
dec
fimull
push
mov
pop
adc
mov
mov
ret
jge
jp
cmp
xchg
out
mov
cmp
js
sub
mov
sub
sub
rcrb
pop
mov
mov
imul
sub
push
shll
sub
xchg
cwtl
insl
adc
push
in
js
dec
push
mov
inc
pusha
adc
rolb
sbb
jb
scas
or
pop
mov
mov
movsb
das
adc
or
test
das
cmp
push
lahf
daa
mov
mov
aad
and
aam
out
or
ficomps
add
imul
sbb
inc
fdivrs
jmp
push
push
add
imul
dec
inc
in
fnstsw
sbb
pop
popa
dec
cmpsb
adc
or
and
dec
cmpsl
jnp
jecxz
push
dec
mov
add
shl
sahf
decl
out
xchg
pop
jno
and
test
adc
add
pop
push
add
dec
cmpsl
push
inc
lds
mov
dec
jge
repz
ljmp
adc
inc
jmp
subl
mov
in
loopne
mov
mov
cmp
xchg
mov
and
lods
outsb
lods
aad
shlb
sub
add
and
cmp
jbe
dec
lret
inc
xchg
sub
es
jp
xchg
jno
and
and
mov
mull
cltd
pusha
leave
stos
idiv
pop
inc
pusha
add
sub
inc
jl
ret
sbb
mov
push
jge
xor
addr16
mov
movsb
subl
dec
jecxz
inc
and
fs
adc
mov
fmuls
push
and
outsb
cli
mov
cmp
xchg
test
rcr
imul
mov
orb
sti
je
bound
fstpt
stc
pop
ficoml
leave
sbb
push
dec
cli
pop
push
cmp
xchg
inc
mov
sar
lods
pop
adc
adc
adc
mov
dec
mov
add
lahf
and
rcll
lea
fwait
test
or
push
cmp
mov
mov
mov
repnz
outsl
jb
jmp
push
pop
inc
xchg
adc
sahf
mov
call
add
pop
test
xor
jge
cmpsl
jbe
push
xor
jge
pop
lods
cltd
push
mov
or
mov
jmp
aas
mov
mov
add
jmp
add
out
lahf
jns
mov
push
daa
jecxz
jle
pop
and
add
sbb
in
pop
add
xor
or
sahf
pminsw
jne
movl
insl
jg
mov
icebp
rorl
outsb
mov
xchg
cmp
sbb
clc
mov
adc
fnstcw
sbb
sub
pop
gs
scas
lea
dec
adc
pop
mov
xor
in
lods
lret
es
lea
leave
jns
call
jnp
test
test
scas
xor
push
cmp
sub
popa
mov
les
lods
loop
sbb
push
insl
adc
xchg
dec
sti
mov
out
stc
mov
testl
push
cld
add
push
ss
das
mov
inc
mov
fildl
pop
dec
xor
sbb
or
rcrl
jno
jne
adc
adc
and
xchg
dec
sub
mov
ds
jecxz
imul
add
sub
daa
rorl
fdivp
and
stos
out
arpl
imul
cmp
adc
sahf
out
dec
and
test
mov
repnz
dec
mov
dec
fld
xor
test
into
sbb
nop
push
mov
inc
test
pop
push
pop
adc
add
pop
mov
idivb
rcrb
pushf
xchg
mov
loop
es
inc
out
std
nop
ficoml
mov
bound
jecxz
mov
sbbb
gs
scas
mov
pop
mov
inc
decl
jp
cmp
jecxz
sti
rcr
adc
jle
push
loope
add
divb
mov
outsl
lods
bound
icebp
sti
pop
lret
mov
adc
jmp
mov
aam
and
sti
lcall
and
dec
mov
inc
aam
add
lret
leave
inc
mov
push
jg
das
add
xor
bndldx
dec
cmp
icebp
mov
jmp
xchg
movsl
addb
leave
les
pop
call
jno
repnz
mov
into
xchg
out
js
mov
aaa
mov
dec
jmp
out
adc
push
rclb
sub
sbb
mov
push
xor
daa
scas
mov
push
dec
jg
lahf
mov
sub
out
cmp
push
lds
sub
fnstsw
pop
fcomi
xchg
mov
xor
ds
adc
sub
lea
adc
les
sbb
mov
mov
jne
dec
push
mov
mov
xchg
inc
adc
cmp
ds
sahf
push
mov
orl
outsb
fs
lret
jbe
and
rcll
xor
ja
push
shrl
je
fs
jb
orb
into
nop
pop
arpl
sti
ret
cmp
fldt
arpl
lods
and
aas
or
ljmp
xorb
and
mov
in
test
jnp
mov
jnp
lods
movsl
loopne
mov
cmp
adc
cmp
cmc
fbstp
arpl
jmp
dec
cwtl
jo
bound
das
mov
imul
in
jne
dec
jp
popl
adc
aaa
mov
repz
mov
lret
pop
fs
and
test
mov
push
xor
aad
jno
sub
fwait
ljmp
xor
outsl
sti
imul
clc
addl
out
add
enter
enter
mov
xchg
and
lods
sahf
mov
pusha
nop
cltd
lods
repz
es
or
push
mov
push
mov
daa
mov
inc
pop
arpl
das
and
je
add
fiaddl
lcall
imul
test
mov
pusha
mov
mov
int3
testb
dec
dec
push
xchg
gs
insb
ss
xor
xor
and
aaa
sarl
push
dec
fstpl
in
dec
push
in
jbe
inc
pop
inc
lods
mov
mov
adc
bswap
fidivrs
daa
pop
mov
pop
mov
and
bound
mov
xor
sub
mov
ficoml
ljmp
push
jp
pop
out
mov
imul
shlb
cmp
jb
add
mov
xchg
lcall
and
mov
ds
adc
mov
jb
cmp
inc
cmp
sbb
cld
test
pop
mov
xor
js
cltd
movsb
imul
sarb
sbb
xchg
repz
xor
add
ret
sahf
sub
xchg
inc
jg
in
mov
lret
mov
sub
pop
pusha
shll
fwait
sbb
es
adc
std
xchg
xchg
cmp
or
jmp
cli
mov
jne
sbb
inc
dec
lahf
loopne
dec
pop
adc
sbb
jns
fwait
dec
stc
sbb
jne
sub
lds
add
push
pop
mov
test
xor
popa
les
jle
dec
call
test
lds
mov
stos
mov
das
xchg
jle
negb
cmc
sub
fsubrs
pop
cwtl
nop
data16
sbb
mov
sbb
testb
pop
stc
pop
jle
push
ds
mov
insl
add
push
push
jmp
pushf
cmpl
fildl
movsb
push
fdivr
popa
jo
lock
mov
decb
cmp
jmp
orb
int
ds
fcoml
mov
lods
sbb
push
loopne
mov
leave
mov
xor
movb
sbb
sbb
jg
xchg
movsl
insl
lock
push
inc
sub
sub
mov
ret
inc
jno
mov
push
add
xor
mov
fbstp
es
lret
ja
inc
inc
clc
mov
push
je
xchg
adc
sub
hlt
lretw
adc
sbb
mov
aad
sub
idivb
mov
popa
jno
inc
and
inc
bound
push
xchg
push
jp
jp
sbb
dec
fs
jg
sbb
cmp
repz
cmpsb
or
adc
ret
out
das
pop
js
pop
cld
stos
and
lea
es
xchg
imul
cli
rcrl
ds
jle
add
test
push
sbb
into
fs
xchg
out
push
xchg
push
mov
pop
jge
cmpsl
aaa
inc
or
ror
and
cmp
push
mov
sub
movsb
mov
push
jl
push
insl
pop
and
adc
inc
sti
loope
xor
rcr
xchg
int3
push
pusha
or
mov
ds
or
cwtl
xchg
loop
xor
cmc
dec
xlat
mov
adc
sarl
mov
sub
out
pop
inc
imul
repnz
mov
negb
inc
mov
out
ret
pop
mov
xchg
loopne
mov
mov
les
lock
cmp
fildll
enter
jl
inc
add
jp
fs
xlat
adc
sahf
repnz
fimull
subb
fists
repz
mov
fildl
arpl
scas
cmp
lcall
push
lea
test
popa
iret
push
mov
push
pusha
xchg
cmpsb
test
cs
orb
out
jo
es
ficompl
int3
cmp
cmp
frstor
sub
inc
decl
xchg
pop
jbe
jle
fistpl
test
pop
dec
sbbb
push
dec
movsl
test
push
or
cwtl
mov
dec
ds
mov
pop
fimull
xor
es
adc
lods
or
andl
ret
scas
out
dec
xor
push
adc
in
sub
fdivrl
data16
jns
push
out
pop
jnp
movsl
add
mov
leave
sub
jl
and
test
inc
sub
outsl
cli
add
stos
sahf
loop
cmp
xor
rorl
push
outsb
mov
jo
loop
dec
mov
int
inc
stos
xor
mov
mov
mov
mov
icebp
push
hlt
adc
out
xchg
mov
xchg
mov
sbb
push
stos
cmpl
fs
sub
sahf
in
add
and
cmp
xchg
shrl
pop
dec
test
xchg
aad
jg,pn
movsl
pop
adc
jno
xor
mov
test
fwait
addr16
lods
ficomps
inc
pop
mov
push
adc
cmpsl
int3
popa
iret
pop
fisttpll
ljmp
insl
fs
cmpb
mov
and
jo
rcll
nop
push
pop
mov
adc
pop
push
mov
mov
es
or
pushf
in
hlt
into
mov
clc
xor
jge
sbb
pop
outsb
mov
mov
imul
dec
sbb
sbb
sti
jbe
test
pop
loop
mov
adc
pop
ds
fcmovne
enter
mov
xchg
xchg
push
sub
lods
or
mov
shll
mov
add
inc
iret
lcall
into
cwtl
movsl
bswap
std
pavgw
lods
dec
in
movl
mov
mov
movsl
jno
das
les
das
xchg
adc
cmpsb
inc
sti
inc
shl
push
pop
ja
or
mov
jl
and
lods
mov
scas
data16
mov
insl
sub
sti
xlat
xor
stos
xchg
pop
fstpt
lods
sub
test
rcrl
jo
pinsrw
add
lcall
pushf
inc
mov
outsb
mov
call
xor
xor
or
adc
inc
int
rcl
and
test
int3
xor
pop
imul
and
bound
dec
scas
fistl
lret
fcmovnb
mov
repz
imul
or
cmp
arpl
adc
jecxz
inc
bound
pop
sub
mov
outsl
adc
sbb
pop
mov
imul
pop
adc
nop
addr16
sbb
ss
jmp
lods
adc
add
sbb
pop
mov
xchg
test
es
popf
data16
dec
hlt
jo
push
add
inc
add
xchg
fsubrp
mov
lea
sub
xor
pusha
lods
enter
add
pop
repz
cmpsl
in
jp
lods
mov
in
das
fidivl
adc
insl
dec
frstor
mov
imul
pushf
adc
dec
sahf
lcall
pop
daa
scas
test
inc
test
mov
xchg
mov
rcrl
ljmp
cli
ret
stc
popf
fldt
cmp
mov
popf
sahf
cmp
cmp
mov
clc
push
inc
shll
sbbl
and
es
int
sbb
inc
mov
sbb
aaa
jno
movsb
hlt
ret
inc
jmp
bound
mov
mov
adc
dec
cmp
pop
mov
outsb
fimull
mov
mov
shlb
icebp
mov
scas
jp,pn
rcrb
sub
mov
aas
jp
push
jl
test
push
js
mov
sbb
icebp
or
xchg
push
xchg
cli
rorb
mov
daa
mov
ljmp
jbe
or
lret
pop
xor
mov
mov
xor
ret
sbbb
hlt
jae
fnstcw
sub
shrl
jge
es
mov
push
pushf
add
cmp
xchg
imul
adc
and
test
cmpsl
clc
cmp
cmp
daa
add
das
dec
dec
fadds
leave
cmp
std
movaps
ret
mov
mov
jmp
sahf
fidivs
loop
cli
and
adc
cmc
sbb
xchg
cmp
popa
ljmp
imul
jnp
sub
mov
movl
loop
mov
popa
and
sub
or
iret
xor
dec
xor
xor
addr16
jmp
adc
rolb
inc
out
pop
inc
sbb
jne
rcrl
push
aam
loopne
aad
aas
jmp
ljmp
sti
mov
pop
and
lods
mov
push
pop
mov
bnd
and
or
das
sbb
push
fs
sbb
fists
dec
ss
and
pop
jp
inc
adc
inc
mov
adc
stos
cmp
movsl
pop
leave
adc
and
mov
add
dec
push
aas
jmp
into
mov
adc
cmp
sbb
push
and
mov
popa
sub
test
adc
push
inc
sbb
inc
adc
aas
fwait
xor
push
enter
mov
pop
and
pop
aaa
sbb
cmp
test
jp
jg
pop
mov
out
loop
pop
cmp
mov
jmp
mov
je,pt
jle
test
lret
mov
dec
in
ret
call
mov
xor
mov
lds
ret
inc
push
push
cmp
jge
inc
jb
loopne
xchg
push
mov
fsubrs
les
jg
adcl
jbe
ftst
fadds
and
adc
bound
jg
mov
sbb
xor
stos
mov
imul
movsl
test
mov
mov
int
jne
pop
leave
mov
punpcklwd
lods
std
movsb
pop
hlt
pop
and
inc
movsl
lcall
mov
insl
or
pop
lods
jb
gs
ret
cmp
adc
lahf
and
lods
xlat
mov
fldl
lds
fistl
push
xchg
or
pop
pop
inc
push
dec
testl
fs
pop
push
xchg
outsb
or
mov
xor
cmp
int3
lret
xchg
adc
mul
ret
das
sub
imul
add
jno
lods
sbbl
mov
pop
pop
stc
mov
andl
mov
lcall
pop
vpor
subl
cmp
inc
dec
js
dec
mov
insl
fnstcw
dec
test
inc
mov
mov
out
dec
or
out
daa
pushf
jmp
xor
jae
out
bound
dec
dec
fisttpl
push
xchg
js
cs
xor
mov
stos
add
outsl
jmp
cmp
inc
dec
pop
es
mov
inc
pop
subl
sub
out
call
les
push
or
popa
pop
mov
jb
xchg
inc
mov
mov
stc
pop
jmp
add
mov
aas
shrb
testl
or
stos
cwtl
lcall
pop
in
xor
mov
sub
shrl
mov
std
fstl
cs
adc
into
xor
hlt
xchg
clc
cmc
aas
sti
lea
push
adc
ds
push
testb
sub
pop
xor
adc
pop
jmp
fcmovne
mov
jb
xchg
sub
popf
pushl
inc
mov
mov
aas
inc
cli
sbb
stos
cwtl
das
xor
push
mov
outsl
pop
mov
cmp
pop
adc
mov
pop
jo
pmullw
sub
sbb
xchg
inc
mov
adc
mov
je
dec
les
mov
cmp
mov
ds
dec
out
pop
xchg
push
xor
push
rolb
push
jnp
mov
xor
jl
and
es
mov
loop
jp
pusha
add
cmp
rcrl
add
repnz
dec
sub
icebp
mov
pop
mov
cmp
scas
stos
push
mov
in
xchg
dec
and
xlat
js
jge
cwtl
add
pop
test
mov
push
test
xor
xchg
and
pusha
stos
xchg
popf
sti
pusha
into
mov
mov
inc
rcll
and
or
sbb
mov
cmp
cmpl
push
pusha
cmpl
adc
and
jecxz
mov
xor
ret
adc
pop
loopne
icebp
pop
sub
faddp
and
and
mov
sub
jg
sub
lret
xchg
push
pop
jns
sub
loope
sub
mov
out
sub
lret
adc
clc
dec
inc
mov
mov
insb
xorl
push
add
pop
xor
stos
int3
mov
nop
cli
mov
push
test
lds
jle
sub
movsb
fwait
and
inc
mov
and
push
sbb
cli
js
pop
adc
sbb
sbb
pop
lahf
int3
cmc
xlat
movsb
cli
jg
outsb
jmp
clc
mov
lock
out
inc
pop
jge
fcom
cmp
fnstcw
add
sub
aas
jbe
mov
pop
mov
and
testb
aad
mov
xor
inc
imul
xor
jle
test
cmp
sub
or
out
jnp
ficoml
sub
or
jmp
out
inc
cmc
psubd
fnsave
enter
lods
pop
stos
mov
sbbb
adc
stos
aaa
fdivrp
dec
in
pop
sarl
ret
cwtl
in
stos
aad
push
hlt
dec
xor
sbb
mov
mov
push
fidivrl
mov
cld
fs
cmp
out
xchg
and
push
sub
inc
imul
stos
imul
add
testl
push
sbb
xor
mov
add
adc
imul
fistpl
inc
jg
sub
mov
mov
jmp
mov
xchg
jle
lock
inc
fdiv
sbb
adc
ss
add
outsb
sbb
iret
xchg
adc
pop
mov
aam
ljmp
cmpsb
mov
push
ds
mov
push
out
inc
mov
dec
cmpsb
loopne
sbb
pop
mov
fcmovb
test
ja
orl
int
xor
pop
fnstsw
xlat
lcall
push
cmp
push
ret
cmpl
call
sbb
sahf
ja
mov
mov
cmp
sbb
pop
pop
mov
nop
pusha
push
loop
sub
mov
xor
pop
int
mov
mov
hlt
cltd
ret
mov
or
stos
out
sbb
inc
cs
je
lea
cmp
frstpm(287
ror
clc
inc
imul
lods
dec
mov
pop
mov
push
dec
aad
xchg
aaa
lea
mov
rcr
outsb
hlt
cmp
into
loope
inc
adc
mov
add
cwtl
jle
sub
insl
mov
jo
int3
xor
xchg
xor
mov
jmp
roll
ljmp
insb
insl
pusha
loope
pop
rorl
xlat
inc
jle
cmp
cmp
cmp
cmp
es
flds
pop
out
aad
sbb
stos
inc
ljmp
or
xor
fisttpll
punpckhbw
fnstenv
inc
or
cmp
mov
adc
push
mov
cmpl
sbb
pop
mov
add
lock
mov
xor
cmpsb
lret
and
mov
aas
mov
test
and
leave
and
mov
cwtl
mov
pop
mov
cmp
imul
pop
inc
pop
mov
jb,pn
das
fsubl
insb
unpckhps
fidivs
fldt
inc
sub
aas
mov
pop
xchg
mov
jns
pop
add
mov
mov
fmulp
sub
inc
inc
dec
jl
sub
out
xadd
dec
lock
cwtl
inc
into
leave
lret
dec
nop
rcrl
out
jae
daa
lods
and
shrb
mov
dec
rorl
sarb
adc
loop
lcall
es
cmp
orl
mov
sub
cmc
xchg
mov
mov
imul
mov
push
dec
int
enter
lret
ljmp
movsb
jnp
cmp
insl
outsl
cs
mov
push
call
inc
pop
lods
pop
pop
fs
les
mull
jne
movsb
in
roll
push
and
in
fwait
shll
loop
imull
mov
and
test
dec
xchg
cmp
xor
jnp
and
xor
push
mov
out
cmpsl
popa
popf
cmpsb
adc
xor
sbb
sti
scas
push
leave
adc
jp
inc
jns
idivb
xchg
adc
das
inc
jge
and
push
mov
xor
adc
mov
mov
inc
rep
mov
out
mov
stc
sub
add
int3
dec
fadds
call
xchg
insl
testb
cmp
add
mov
inc
imul
jp
or
xchg
lods
adc
imul
inc
inc
scas
mov
push
enter
lock
popf
xchg
mov
stos
sub
aaa
cmp
add
jp
popa
adc
pop
fcompl
test
jmp
jnp
fists
push
pop
lds
push
loopne
ja
ss
popf
xchg
lahf
and
adc
push
pop
pop
pop
mov
fs
lock
data16
in
movsl
loop
fiaddl
nop
fstpt
jo
and
dec
mov
mov
mov
shr
push
clc
push
cmp
pop
test
inc
cmp
xchg
jno
pop
xor
test
mov
push
test
lods
cli
xlat
int
pusha
jp
xor
mov
and
loope
inc
jb
push
hlt
adc
cmp
daa
cmp
cmp
flds
jnp
cmp
or
and
xor
cmp
cmp
sub
jb
pop
mov
ja
ss
adc
int
aad
adc
xchg
pop
cwtl
cmp
popa
and
jl,pt
mov
shrb
cmp
insl
test
aad
mov
jno
out
pop
adc
jle
pusha
mov
jnp
fiaddl
repnz
loopne
dec
sahf
es
push
aaa
imul
fsubr
out
cmp
test
loop
insb
xor
enter
lods
sub
cmpl
sbb
lea
stos
ret
cmp
lcall
xor
fs
jle
hlt
mov
and
sahf
jecxz
sbb
popf
or
outsb
push
mov
mov
sti
and
dec
dec
cli
cltd
adc
and
bound
out
ret
insb
pop
push
mov
fisubrl
test
sahf
cmovbe
xor
shl
xchg
mov
push
xchg
mov
cs
add
push
ja
jg
test
cli
insb
mov
aam
push
outsl
sub
push
ret
sub
xor
inc
jnp
xor
out
fdivrl
popf
mov
mov
inc
sbb
or
jp
enter
lret
loopne
xchg
test
repnz
mov
sub
mov
push
aas
and
and
inc
gs
push
inc
jnp
scas
push
daa
push
fstl
mov
jl
or
and
inc
pop
call
xchg
cmp
cwtl
add
imul
imul
or
les
xchg
adc
int3
dec
xor
cmp
cmp
sahf
jmp
adc
je
xchg
imulb
lret
adc
testl
fcompl
push
int3
sbb
push
call
or
test
ja
mov
pop
mov
sub
test
andb
sub
popa
sub
pop
loope
or
rol
inc
inc
pop
cmc
pop
imul
jle
pop
bound
cmp
cltd
inc
bound
xor
push
pop
leave
stc
loop
bound
pop
jmp
or
dec
and
sbb
dec
aas
xlat
xor
popf
and
push
pop
shll
jo
sbb
fidivrl
cmp
out
mov
push
inc
mov
pop
mov
aas
loope
push
jne
in
mov
xor
popa
cmp
pop
das
pop
dec
pop
fsub
sub
daa
subl
cmp
sbb
pop
push
lods
add
pop
and
test
mov
loope
mov
aas
xor
ss
xchg
sub
outsb
xor
fs
mov
mov
out
and
popa
mov
add
subb
add
pushf
dec
fsqrt
out
shlb
int3
imul
inc
sbb
mov
gs
push
dec
push
loopne
push
ftst
aad
xor
mov
sub
dec
stos
in
testb
test
push
inc
fucomip
pop
test
pop
push
fbld
mov
mov
mov
jecxz
xchg
inc
fildl
inc
pop
cli
mov
xchg
push
sub
jo
xor
mov
daa
mov
inc
sub
pop
popf
lods
jge
add
push
and
cmp
gs
add
scas
loopne
pop
add
or
or
or
negb
andl
dec
andl
mov
inc
mov
bound
jmp
mov
jae
sbb
mov
sub
add
lcall
leave
shl
mov
dec
mov
hlt
mov
inc
xor
cmp
pusha
inc
adc
adc
and
js
mov
mov
aad
stos
hlt
out
out
xor
imul
mov
mov
jg
icebp
pusha
ret
adc
mov
iret
clc
cmp
adc
mov
cltd
scas
fidivl
out
mov
xchg
jle
shl
and
lea
dec
outsl
fldcw
sbb
rorb
push
repnz
xor
cmp
jmp
jmp
subl
or
sub
mov
roll
sub
xor
cwtl
pusha
cmp
jae
and
fsts
call
pushf
and
mov
mov
push
in
out
rcll
iret
inc
adc
and
aam
testb
mov
adc
js
dec
lret
in
cmp
dec
sub
cmp
ds
lock
pop
mov
mov
xchg
repz
xor
xor
add
and
test
mov
es
mov
int3
cmp
inc
ret
add
imul
cwtl
shll
inc
jg
xchg
push
sub
lea
cmp
jno
gs
int3
fcmovnu
sbb
jge
inc
xchg
and
leave
test
add
int
inc
dec
pushl
lds
scas
add
pushf
pop
xchg
push
sahf
mov
out
lods
stos
adc
xor
jnp
dec
jg
sub
and
jb
pop
adc
loope
dec
push
das
sbb
pop
in
and
cld
push
movsl
jp
sub
inc
push
call
cld
pop
out
sub
fistps
cmp
js
add
cltd
fcmovnbe
insb
imul
xchg
inc
hlt
jb,pt
jmp
into
insb
adc
fidivl
mov
jo
ftst
xchg
and
push
xor
dec
mov
and
hlt
sbb
jb
popf
sarl
mov
mov
cmpsb
mov
pop
pop
shll
ds
mov
dec
pop
dec
jbe
stos
test
mov
push
or
jb
rorl
lods
popf
fs
pop
rcrb
jle
hlt
mov
adc
xor
xchg
dec
fs
jp
out
cmpsb
outsl
rcll
jb
mov
ds
mov
cmp
jb
adc
sahf
stc
outsb
inc
mov
rcrb
bound
adc
dec
inc
lea
jo
call
xor
adc
jmp
inc
sbb
loope
ds
xchg
jmp
sub
or
add
push
fiaddl
adc
xchg
sarb
stos
pop
repz
adc
mov
popa
xchg
sbb
mov
jno
mov
das
leave
ljmp
pop
ret
loop
mov
sub
pop
repz
dec
ds
daa
sbb
mov
gs
repz
fiaddl
and
fnsaves
icebp
out
mov
hlt
aam
bound
je
cmp
push
repnz
inc
fimull
stc
mov
xlat
inc
sbb
ficomps
cmp
test
xchg
and
test
adc
jno
and
cmp
sbbb
data16
xchg
pop
mov
sbb
jnp
mov
icebp
dec
pop
cmp
inc
inc
inc
cmp
out
xchg
mov
repz
clc
xchg
sub
mov
mov
mov
jmp
cmp
fwait
dec
lea
adcl
jp
insl
xchg
lahf
cmp
pop
icebp
jl
xchg
out
and
sarb
jo
shrl
mov
push
add
inc
or
pusha
adcb
xlat
test
xor
xor
out
leave
cmpb
scas
mov
out
xchg
popf
filds
int3
sarb
push
bound
cmp
cmp
jbe
lods
jo
fcomi
je
or
xor
mov
ret
bound
cld
fistpl
mov
mov
mov
ds
inc
sbb
outsb
pop
mov
pop
clc
pop
stos
inc
mov
lds
xor
push
repz
aas
lds
aam
std
hlt
push
aas
push
mov
xor
jns
mov
inc
lret
mov
loop
sbb
fcmovbe
xor
es
add
sub
lea
add
xchg
jecxz
inc
rorl
ds
push
scas
inc
push
mov
and
jecxz
sub
aas
fs
shr
sahf
mov
jl
cli
mov
fisubs
scas
add
mov
pop
sahf
sub
jo
loopne
flds
rol
ljmp
cmc
stc
push
mov
mov
stos
xchg
ds
push
shl
adc
adc
ds
ds
es
sbb
jb
fcomps
xchg
not
clc
cmp
out
lea
push
out
fadd
repz
mov
mov
add
fsubrl
sbb
aad
add
inc
mov
mov
stc
push
pop
test
leave
jg
inc
popf
xchg
add
pushw
dec
cmp
cs
cmp
and
fiaddl
jp
das
and
fs
jo
mov
pusha
sbb
sbb
push
mov
loop
js
mov
jmp
imul
movsb
mov
and
cmp
dec
mov
adc
add
mov
nop
xchg
xchg
imul
mov
pop
aaa
inc
int3
or
std
int
dec
pushf
and
inc
sub
int
bound
sbb
outsb
cmp
test
in
mov
and
or
mov
jo
sbb
fisubs
push
test
mov
repz
loop,pt
sbb
test
das
imul
out
pop
fsubs
repz
xor
cmp
je
mov
pop
jmp
and
sbb
cmp
inc
and
fildl
imul
lds
leave
dec
adc
push
shlb
sub
jecxz
or
shrb
fsubl
and
rorl
xor
les
rolb
into
fistpl
mov
mov
dec
insb
cmp
dec
push
xchg
and
jg
sbb
jmp
test
ror
scas
mov
add
test
push
js
divb
sbb
and
cli
icebp
jnp
xchg
das
sub
pop
mov
in
sbb
xchg
pop
sub
mov
jno
jno
mov
cmp
inc
xchg
pushf
stc
outsl
mov
push
mov
adc
fcoml
adc
cld
and
jg
fstpt
stc
and
out
lock
test
xchg
sahf
add
and
jg
mov
and
les
jmp
mov
cmp
aas
ljmp
mov
outsl
cmp
das
pop
cmp
stos
ud1
cmp
cmp
push
push
xlat
push
int3
dec
mov
pop
cmp
sbb
ret
dec
rcll
cmp
cmp
aaa
cmp
into
cmp
outsl
cmp
jp
ret
dec
sbb
cli
enter
cmp
sbb
and
fisubl
sub
and
pop
dec
mov
pop
xchg
mov
pop
ja
mov
and
fildl
sub
and
jns
sbb
cli
lret
adc
sbb
ljmp
jo
sub
inc
pop
pop
ljmp
mov
mov
cli
cmpsb
and
xor
cmp
pop
pushf
mov
ljmp
mov
and
sahf
pop
sbb
cmp
pop
sbb
ficomps
inc
lcall
pop
in
sbb
jo
jnp
add
lcall
imul
push
or
pop
sub
cmp
fnstcw
push
sarb
lock
imul
fldenv
xor
sti
fwait
out
cmpsl
sub
fistl
dec
pusha
sti
xor
push
out
jp
jns
js
mov
jo
mulb
fisubs
lcall
pop
mov
out
jp
fwait
imul
dec
dec
and
sbb
sbb
pop
jo
clc
add
test
cltd
pop
cs
mov
lret
stos
cmp
dec
pop
sbb
mov
es
cmp
pop
popa
xchg
inc
mov
sbb
sub
dec
jmp
pop
lret
jb
dec
mov
jae
pusha
mov
pop
add
fidivl
shr
test
imul
jp
imul
inc
adc
mov
fsubrp
cmp
test
cltd
pop
jnp
or
loopne
and
ficoml
shlb
stos
cmp
jae
dec
shl
mov
nop
mov
mov
outsb
add
jge
sub
dec
xchg
mov
mov
mov
arpl
mov
cmp
data16
test
cmp
adc
pusha
lea
das
and
xchg
bound
ljmp
clc
int
pop
insl
jb
fistpl
test
andb
mov
add
sbb
outsb
js
bound
mov
dec
xor
and
call
push
movsb
jmp
and
or
jge
sub
cmp
cmp
push
es
popf
or
ret
nop
pushf
aas
scas
lods
lock
pop
divb
add
jbe
jne
clc
and
push
fildll
cmp
pushf
inc
mov
int3
pop
adc
lret
mov
imul
enter
fisubrl
insl
pop
or
negb
cltd
std
data16
add
loope
pop
dec
rcr
mov
xchg
mov
xor
jg
ds
adc
adc
sbb
cmp
les
push
les
push
nop
mov
shl
fwait
jbe
icebp
fmull
es
ret
andl
cmpl
jg
shl
lock
mov
pop
punpckhdq
jno
stc
sbb
outsl
fistl
lret
shrl
sub
cwtl
arpl
mov
jle
adc
xchg
inc
inc
pushf
imul
shll
sarl
xchg
test
pop
lods
lods
insb
call
aas
jae
mov
xor
js
sub
bound
sarl
mov
xchg
cmp
out
div
inc
fwait
mov
mov
fs
mov
iret
xor
mov
mov
cmp
aaa
es
push
jb
mov
pop
push
lods
jo
lcall
pop
into
adc
into
fnstenv
inc
inc
cwtl
int
out
sbb
sahf
dec
inc
arpl
repnz
jecxz
cwtl
out
cwtl
repz
pop
loope
andl
mov
xchg
push
or
inc
in
imul
shll
inc
nop
ljmp
adc
xchg
inc
popf
jns
sub
jno
lea
jg
pop
mov
adc
insl
gs
jae
in
mov
jbe
insl
mov
pop
dec
in
testb
mov
fiaddl
sbb
mov
or
pop
imul
lock
xchg
jns
xchg
hlt
xchg
test
test
push
shrb
jnp
pop
jp
dec
aam
scas
lcall
mov
daa
mov
jecxz
sbb
jge
stc
cmp
mov
cmc
xorl
mov
inc
push
je
fcmovnbe
mov
cwtl
icebp
test
push
test
ret
push
mov
into
in
adc
ror
mov
push
or
rcll
ss
test
insb
inc
insl
aaa
and
or
and
gs
mov
or
cwtl
out
mov
fldt
jnp
jmp
cwtl
outsb
cmp
inc
das
jg
xor
popa
lahf
mov
das
sub
inc
data16
jmp
and
imul
or
push
sbb
push
cmp
dec
pop
cmpsb
push
movsb
mov
incl
cli
cli
jecxz
std
insl
popa
xor
leave
stc
push
sub
inc
adc
mov
mov
enter
icebp
sub
mov
inc
sti
faddp
xor
push
lock
outsl
or
inc
mov
push
mov
notb
push
mov
mov
fisubs
je
jns
sbb
inc
fdivs
cmp
pop
dec
cmp
mov
sahf
jmp
cmp
lock
scas
mov
fbstp
rcrl
or
into
sbb
shll
test
push
ds
pusha
pop
mov
jge
mov
aam
mov
call
addl
sub
jle
and
insl
lock
test
adc
adc
mov
adc
je
xor
mov
pop
fnstenv
fiaddl
imul
popa
xchg
and
mov
pop
lds
sbb
xchg
add
popa
imul
dec
pop
push
pop
cmp
movsl
mov
sbb
inc
cmp
and
movsb
aad
jmp
pop
enter
add
jmp
add
sbb
dec
adc
inc
lret
mov
repz
inc
sarl
mov
sbb
mov
or
mov
fistpll
aaa
rorl
lds
add
and
test
mov
mov
hlt
push
inc
mov
cmpb
pop
mov
and
dec
xchg
or
push
pop
out
repnz
pushf
mov
push
or
lahf
enter
sbb
push
adc
push
pop
sbb
push
and
sub
popa
bound
dec
push
outsb
cmp
iret
cltd
cmp
pop
insb
bound
les
hlt
jno
push
lds
mov
fidivrs
lcall
mov
adc
mov
jno
out
pop
xchg
pop
loop
push
jle
cli
pusha
xor
inc
push
cmp
jbe
mov
dec
es
dec
nop
cmpsl
inc
insl
out
in
inc
test
arpl
cmpl
arpl
inc
jae
lret
shrb
mov
xor
sbb
aad
lock
testl
mov
imul
fcmovnbe
pop
test
fistl
inc
jle
ja
mov
mov
pushf
push
ljmp
lds
mov
in
pop
pop
mov
das
test
ljmp
xchg
xchg
std
sub
jp
cmp
push
mov
stos
gs
ret
dec
lods
mov
fldenv
jne
inc
xor
sub
xchg
sbb
mov
push
testl
xchg
int3
jmp
push
mov
enter
cmpl
push
xchg
in
cmc
ret
test
jl
hlt
inc
lcall
jmp
arpl
in
cmp
pop
ret
fwait
xor
fidivrs
push
adc
and
xchg
add
jecxz
test
mov
adc
mov
shufps
test
fildl
mov
xchg
inc
or
pop
loopne
xor
addb
pop
jo
inc
pushf
les
mov
add
rclb
int3
xor
mov
inc
addr16
je
inc
stos
push
mov
aam
inc
test
test
and
mov
sahf
data16
add
xchg
xchg
insl
add
pop
jne
mov
sub
lcall
cmp
adc
lcall
xchg
jp
aas
mov
dec
push
dec
adc
and
dec
out
dec
jl
inc
push
mov
add
jo
test
xor
mov
pushf
dec
dec
adc
scas
mov
out
push
movsl
cmp
push
pop
dec
cmpsl
sub
xchg
ds
add
insl
push
aam
pop
and
jle
xor
inc
push
inc
jle
xchg
movsl
cmp
into
mov
and
inc
sub
inc
add
and
movsl
inc
out
xchg
out
sti
jp
and
mov
in
xchg
aaa
test
pop
lret
or
xchg
jnp
cmp
xchg
add
pusha
ds
cld
push
insl
xlat
adc
push
pop
vmptrst
aas
orl
mov
adc
imul
out
fcmovnb
mov
sub
loopne
add
fwait
ret
fwait
mov
aad
jle
int3
and
test
sbb
mov
adc
lret
orl
dec
sbb
mov
inc
adc
adc
or
fistpl
jle
repnz
push
fistpll
sub
xor
inc
lret
push
inc
inc
dec
add
add
enter
shrl
js
adc
pop
jmp
leave
jp
mov
fsts
jle
xchg
mov
pop
mov
xor
inc
mov
xchg
jno,pt
pop
outsl
mov
movsb
xchg
xor
pand
in
insb
test
aam
data16
mov
ret
sbb
cmc
mov
xchg
jle
cmc
aam
std
negb
jl
push
inc
je
jmp
sub
mov
fnstenv
and
test
aam
xchg
aas
mov
mov
pop
cltd
inc
mov
and
xchg
pop
inc
std
and
push
cmp
cmp
lcall
pusha
insl
push
push
mov
icebp
add
pop
and
mov
fsubrs
jge
pop
xor
adc
xchg
mov
sbb
stos
mov
sub
cli
pushf
imul
dec
bound
add
shlb
stos
mov
inc
fldenv
adc
mov
add
movsl
scas
decb
daa
push
mov
lret
mov
imul
jo
js
pop
inc
mov
mov
or
in
inc
gs
mov
movd
adc
sub
out
pusha
into
sbb
rcrb
enter
add
in
clc
sarb
fcmove
mov
popa
sbb
mov
test
insl
mov
repnz
mov
mov
ds
jmp
add
imul
and
cmc
xchg
pop
popa
adc
and
inc
out
cmpsb
inc
pusha
lcall
pop
mov
fistpll
xor
rcrl
mov
in
lahf
movsl
mov
dec
inc
push
jmp
adc
fmull
imul
sbb
rcrl
outsb
mov
test
in
dec
mov
mov
jbe
fbld
jo
fcmovu
rclb
push
fucomi
mov
outsb
bound
jns
push
movb
and
sub
out
movaps
mov
lds
test
arpl
pop
stos
test
adc
push
mov
std
into
and
xchg
and
leave
mov
cmp
push
iret
repz
or
mov
and
push
inc
fnstcw
pop
xchg
lcall
out
jnp
aaa
imul
lret
xchg
imul
stos
cli
fucomi
movsb
mov
or
clc
mov
sbb
push
pop
in
mov
idivb
push
push
sbb
call
lock
push
pop
adc
std
fs
int3
push
add
add
mov
xor
xchg
mul
and
daa
mov
dec
push
sub
pop
pushl
nop
sub
jmp
insl
jno
cmp
jle
mov
insl
test
mov
inc
scas
fbstp
daa
cltd
xchg
mov
test
push
inc
xor
adc
add
mov
notb
aas
pop
sbb
pop
add
push
pop
add
andl
nop
push
dec
inc
cmp
test
jnp
arpl
lock
sarl
sub
lea
call
xchg
sub
pop
popl
shl
sub
add
add
cli
sbb
shlb
jmp
mov
push
mov
arpl
rcrl
pop
cmc
fs
sub
in
inc
and
mov
neg
dec
pusha
out
mov
inc
icebp
stos
fiaddl
xchg
inc
push
jnp
jae
mov
pop
popa
push
rorb
mov
sub
jle
mov
sub
and
mov
pop
push
mov
test
lcall
fwait
loopne
xchg
jno
and
into
cltd
ds
lcall
aam
sub
mov
xchg
imul
pop
lahf
mov
pop
lahf
jg
popa
fiadds
ret
jbe
cmp
sbb
sahf
pop
adc
mov
xor
jae
xchg
sub
sbb
gs
xor
divb
daa
xchg
push
cmpsb
bnd
and
push
subb
popa
add
jbe
dec
mov
in
into
cmp
xchg
test
pop
call
fcoms
popa
es
mov
or
xchg
mov
stc
insb
mov
insl
dec
jg
fadds
xchg
xchg
dec
mov
xor
mov
test
pop
mov
pushl
out
test
out
daa
sbb
lock
enter
enter
cmpsl
mov
adc
dec
fwait
daa
sahf
cwtl
xchg
jne
ror
pop
aaa
mov
arpl
mov
out
sbb
sbb
cmp
outsl
pop
mov
nop
jno
pushf
in
cmp
movsb
pop
add
push
lret
test
jnp
fldt
dec
jbe
roll
fistl
xor
xor
mov
mov
mov
add
xor
nop
pop
sbb
rcll
dec
cli
cmpsl
jns
cmp
inc
xor
cmp
xchg
imul
push
stos
jl
cs
inc
out
cld
cli
cli
fsubrs
stos
mov
out
adc
dec
cmp
adc
insl
sbb
or
pusha
dec
adc
scas
sbb
jecxz
addb
outsb
cli
add
mov
cmp
cmp
call
xchg
das
rcl
xchg
fsubl
pusha
sub
dec
jmp
lret
arpl
ljmp
fsubrp
dec
popf
adc
subl
ljmp
shlb
jnp
cmp
sbb
je
push
ljmp
jae
pop
sbb
fldcw
inc
scas
jp
cltd
xorb
mov
xor
arpl
pop
sub
sub
add
int3
sbb
sti
stos
shr
cmp
and
sub
clc
lcall
sub
loopne
stos
jmp
sub
jae
das
leave
xor
and
fcmovbe
sub
ljmp
subb
or
pop
in
fidivrs
cli
imul
push
and
pop
cmpsb
dec
mov
dec
cli
sbb
sarb
mov
pop
stc
ds
add
push
sbb
cltd
mov
dec
fwait
cli
mov
mov
xchg
dec
pusha
and
or
addr16
imul
dec
push
jo
ljmp
add
push
testb
cmp
mov
mov
add
jbe
jecxz
stc
inc
cmp
fldenv
sbbl
xlat
test
and
lret
push
shrl
shll
jb
adc
out
inc
mov
cltd
adc
addb
out
sub
push
mov
fs
ja
cmp
nop
ss
pushf
cmc
mov
rorl
add
ss
stc
in
jbe
stc
negl
mov
lcall
fucomp
push
cmp
cwtl
and
mov
test
cmp
inc
data16
js
arpl
push
mov
mov
xchg
ror
mov
test
mov
fs
loopne
xchg
fcmove
pop
ror
pusha
mov
inc
outsb
push
mov
aam
negb
movsb
mov
pop
lcall
fwait
int3
dec
mov
mov
inc
jmp
ja
je
aaa
dec
push
das
test
jg
inc
xchg
rolb
mov
sbb
jo
jmp
mov
pop
push
lret
pop
in
cltd
jb,pt
and
mov
aam
stos
int3
push
mov
mov
and
dec
stos
xchg
ds
mov
lea
or
mov
mov
stc
xchg
fdivl
loop
adc
negb
cmp
mov
jl
pop
cmp
dec
pop
in
enter
adc
mov
cwtl
fistpll
out
pop
push
push
pop
sarb
andb
push
repnz
mov
mov
push
mov
inc
xorl
xlat
movsl
add
in
loope
or
cli
push
xor
mov
stc
sub
jp
inc
lcall
aad
mov
sub
jg
mov
jmp
and
fs
mov
push
sahf
and
push
adc
mov
int3
rcrl
pop
fstpt
popf
stos
in
cmp
push
jno
jle
in
sub
faddl
sbb
cmp
mov
xor
push
sub
movsb
xchg
sub
cli
adc
sbb
mov
mov
pusha
jle
mov
in
fs
aaa
inc
enter
sbb
sub
cmp
adc
or
rcrl
sbb
icebp
add
stc
cwtl
inc
and
pop
jae
and
or
cmp
movsb
test
pop
adc
test
mov
and
sub
add
cmp
xor
add
jecxz
outsl
sbb
push
or
imul
add
sahf
sub
sbb
mov
fstl
in
push
dec
ljmp
adc
cmpsl
mov
mov
mov
cmp
roll
out
xchg
sbb
mov
sbbb
or
cmpsb
sub
lcall
fucom
or
xchg
repz
jno
das
mov
jle
out
call
stos
xchg
pusha
imul
arpl
mov
or
and
cmp
inc
ljmp
rcll
mov
ret
bound
lea
or
xor
jns
inc
scas
insl
xor
inc
popa
cli
xchg
mov
sbb
jmp
outsl
scas
sarb
aaa
jnp
adc
and
ljmp
sub
adc
mov
jae
dec
icebp
js
mov
movsl
addr16
adc
adc
jno
mov
cld
sub
push
cwtl
inc
movsl
cmp
lcall
js
jo
adc
inc
cmp
xchg
and
pop
mov
lcall
push
insl
mov
fiaddl
xor
xchg
dec
idiv
testb
lret
outsl
cmp
imul
jne
pop
xchg
pop
dec
lods
and
mov
pop
mov
dec
jbe
xchg
or
hlt
jle
addr16
je
jl
cmp
in
inc
das
mov
mov
push
xor
fisttps
add
sbb
push
pusha
cmp
xor
dec
stc
xor
in
int3
xor
enter
fadd
idivb
stc
addb
xor
xor
adcl
push
outsb
add
stos
popf
arpl
xor
adc
scas
inc
insb
popf
into
and
fsubrl
mov
ja
ds
scas
in
xchg
cld
xchg
popf
push
cmc
imull
jo
leave
stc
outsb
jns
mov
shl
pop
mov
or
xchg
lock
inc
push
lds
jle
mov
ds
insl
fs
jae
popa
xchg
in
aas
mov
push
mov
mov
push
cli
push
movsl
cmp
sub
mov
subb
in
or
sarb
jle
and
cmc
ret
test
push
push
mov
in
jg
xchg
jg
or
push
jnp
lea
and
aas
mov
inc
mov
xor
xchg
cmp
scas
fcomi
cmp
mov
movsl
shrl
mov
aas
aaa
xorl
sub
in
je
jno
and
dec
test
stos
lret
int
sahf
jl
jle
push
pop
dec
jp
adc
and
inc
adc
inc
sbb
adc
cmp
sbb
cltd
mov
add
mov
push
sub
std
mov
inc
mov
es
pop
mov
icebp
jo
adc
inc
adc
mov
pushf
les
dec
pop
sbb
mov
test
mov
inc
cltd
into
shl
mov
jecxz
mov
or
sbb
test
jge
xchg
pop
jb
ja
cli
lds
ja
clc
test
jp
inc
aad
rcrl
bound
inc
dec
add
add
mov
and
pushl
xchg
fistpll
out
stos
stc
xlat
push
push
icebp
pop
sub
lds
mov
fldt
mov
aaa
jecxz
aam
push
mov
jle
mov
repnz
loop
mov
mov
jmp
xor
inc
icebp
xchg
repz
ds
inc
mov
pusha
jecxz
adc
mov
sub
or
stc
dec
and
jnp
inc
xchg
inc
call
inc
or
pop
adc
ja
int
adc
fsubl
ja
aas
sbb
or
pop
and
mov
pusha
sti
pop
insb
add
mov
je
cs
xor
fisubl
jg
adc
mov
mov
js
jge
outsb
cli
aam
insl
repnz
pop
stos
mov
mov
fcmovu
push
pop
repz
jnp
js
sarb
dec
lahf
fwait
pop
adcl
inc
cmp
pushf
inc
repnz
mov
ja
stos
push
inc
jae
xlat
mov
je
jle
and
sbb
pop
xor
subb
in
fbstp
lret
mov
xor
inc
leave
xchg
or
ds
lds
outsb
push
and
mov
pop
inc
push
test
out
movsl
sub
sbb
in
jne
popf
mov
pop
xor
adc
adc
inc
cmp
fdiv
addr16
lods
jo
jb
jge
ds
pusha
cmp
out
inc
push
aad
jl
sbb
cmpl
adc
outsb
add
call
mov
ja
loop
dec
sub
jle
roll
lds
push
movsl
not
sub
add
lcall
mov
jp
sub
ret
out
inc
jb
add
pop
xor
jcxz
nop
cmpsb
loopne
and
dec
cmp
xorl
push
jno
fsubrl
pusha
scas
sub
scas
or
arpl
das
dec
iret
repz
push
cs
xchg
sbb
inc
mov
push
inc
pop
imul
jmp
xchg
lods
and
ret
sbb
and
mov
add
sub
mov
lock
jecxz
shrl
outsl
ret
data16
mov
aad
in
push
cmpsb
sub
jle,pt
xor
dec
mov
sub
xchg
mov
jo
js
cmc
nop
xchg
xor
rep
sbb
ret
stos
mov
call
pop
mov
fsub
cmc
stos
outsb
adc
and
jle
cmp
mov
rcll
fs
mov
pushf
fldenv
jge
ss
out
jl
adc
mov
popa
inc
in
pop
mov
dec
add
add
xor
fcoml
mov
and
xor
shrb
sub
xor
and
bound
xor
data16
and
dec
fsubs
pusha
push
xor
push
adc
popf
sub
leave
dec
rclb
sub
in
repnz
sbb
push
lods
mov
test
pop
testb
inc
and
mov
jno
lret
xor
outsb
ds
jmp
ret
outsl
adc
daa
xchg
jns
push
xchg
mov
cli
and
sar
das
ret
xchg
xor
out
imul
inc
les
arpl
daa
mov
repz
cli
sub
and
and
test
ss
pusha
cwtl
mov
add
ja
mov
fs
or
daa
ds
adc
inc
jecxz
pop
out
mov
jp
ljmp
inc
lock
les
mov
jge
lock
scas
jo
insb
fdivrl
sub
insl
addl
mov
stos
xchg
mov
ss
mov
mov
mov
jb
jo
or
int3
rcrb
addl
rcr
or
andb
enter
jo
test
into
add
aas
mov
sbb
fcmovnu
lods
mov
inc
xchg
jo
jle
ds
and
sbb
cmpsb
push
pusha
bound
fldenv
cltd
aad
data16
shlb
fisubl
sbb
out
cmp
cli
lcall
cld
sub
push
cs
mov
lcall
outsb
push
test
jle
dec
aas
or
cmp
icebp
mov
adc
push
xchg
out
or
cli
jo
int
cli
xor
cmp
fcmovnu
and
mov
sbb
xor
pop
mov
sub
fisubrl
sarb
sbb
divl
les
and
cmp
stc
jecxz
lcall
sub
test
push
pop
fistpl
sub
push
cmp
push
sub
cli
cs
jmp
jb
cmp
gs
cltd
out
jns
dec
inc
cmp
mov
lock
or
mov
fimull
push
iret
lahf
inc
fisubrl
fldt
sub
pop
sbb
sbb
js
and
sbb
cmp
fisubl
mov
add
aam
stc
into
lcall
rol
mov
cli
inc
xchg
sbb
jns
repz
clc
lock
mov
jle
inc
mov
ljmp
outsl
sub
sub
stos
sbb
outsl
jmp
dec
xor
xor
dec
pop
jo
dec
push
addb
and
cmpb
dec
cmp
cs
mov
shrb
mov
jns,pt
imul
sahf
add
jnp
adc
add
in
aas
mov
call
mov
repnz
cmp
lock
cltd
test
ds
les
xor
ficompl
mov
shl
sub
dec
or
jp
mov
repnz
dec
sarb
fiadds
ficoms
cli
pop
cmp
xchg
add
pop
inc
xor
mov
loopne
or
adc
sub
ss
mov
or
cmp
mov
adc
xchg
and
test
push
mov
pop
xor
cmc
lods
jne
pop
leave
push
xchg
js
rcrl
jp
mov
push
rorl
inc
and
inc
pushf
sbb
cmp
into
jbe
dec
mov
enter
xchg
mov
roll
dec
or
xchg
aaa
int3
es
xchg
out
and
pop
xchg
xchg
gs
fs
aad
mov
into
jb
insl
mov
mov
dec
and
pop
jb
aaa
push
adc
jns
lds
mov
or
mov
pop
shlb
jb
mov
cmp
jle
mov
das
mov
push
mov
inc
sbb
lea
out
insl
xor
jp
jo
lea
into
mov
das
sbb
xchg
sti
inc
mov
lcall
adc
mov
in
mov
dec
lret
nop
mov
mov
int
fidivrl
bnd
rorl
adc
jmp
and
dec
mov
push
inc
lcall
das
repz
pop
or
cmp
sti
mov
in
lods
mov
pop
clc
push
mov
inc
jl
jge
cwtl
lds
into
xor
add
stc
xchg
inc
or
das
outsl
jg
pop
xlat
movsl
pop
mov
repz
add
rcr
jmp
aas
fidivrl
push
pop
cmpsb
popa
pushf
xlat
push
mov
inc
or
xchg
sub
sub
sbb
add
or
mov
popa
jmp
mov
mov
fimull
imul
loopne
out
jnp
mov
out
outsb
test
loope
mov
ss
ret
cmp
sub
mov
ret
mov
pusha
dec
in
mov
jmp
adc
in
mov
jle
fisubrs
negb
push
xchg
pop
jle
xchg
or
je
xor
scas
pop
sbbl
dec
xchg
push
cmpsl
jne
sub
or
gs
mov
mul
jnp
jne
mov
xchg
mov
aaa
push
cmp
xor
loop
xor
cmp
bound
scas
mov
subb
jnp
lcall
dec
sbb
inc
push
ljmp
pusha
repnz
xor
jo
jbe
cwtl
lock
push
pop
loopne
lea
xchg
es
pusha
orb
jg
notb
lods
fisubrl
xchg
mov
or
adc
xchg
mov
xchg
jno
push
mov
into
xor
mov
cmp
mov
enter
notb
je
sub
cmp
ret
imul
mov
jne
mov
pop
pop
sbb
mov
jbe
cmp
pop
imul
and
test
jmp
cmp
and
fcomp
sbb
push
scas
rorl
pop
cmp
xchg
in
push
jp
in
sub
sub
fidivrl
and
pop
xchg
inc
incl
shl
sbb
std
neg
xchg
pop
idivb
push
xchg
mov
mov
inc
testb
mov
stos
lods
push
repz
pop
rol
jnp
cli
and
pop
fsubrl
stos
lea
mov
sub
mov
sarb
data16
fimuls
cltd
inc
jg
xlat
call
jae
xchg
cmp
adcl
adc
mov
ret
jmp
loopne
lods
mov
inc
inc
and
out
cmc
lock
cltd
cwtl
or
dec
push
lahf
out
push
sti
push
aam
popa
add
dec
dec
pop
inc
pop
fs
fcmovb
add
pop
icebp
outsb
pusha
pop
fstpt
imul
push
sub
or
pop
jbe
jg
mov
pop
repz
pop
mov
inc
dec
push
mov
cmp
mov
daa
stos
lret
cmp
pop
sahf
stc
jle
mov
jl
mov
loop
stc
pop
sbb
lock
inc
repnz
clc
imul
or
scas
or
jnp
call
sbb
push
cmp
xchg
and
test
call
xchg
int
jle
fdivl
push
pop
test
mov
leave
call
hlt
and
cwtl
inc
lret
test
add
pop
sbb
arpl
mov
cmpsb
cmc
fcmove
ret
ficompl
fs
mov
lock
adc
mov
mov
jl
jmp
jo
cmc
loope
outsl
imul
out
mull
inc
pop
jp
test
inc
sarb
cld
ljmp
ret
pop
aaa
test
mov
rcr
and
dec
idivb
or
adc
sti
hlt
fimuls
cmp
mov
inc
dec
movsb
out
loop
sub
jle
push
mov
dec
pop
ja
mov
jns
arpl
jg
leave
add
push
inc
xor
push
test
inc
or
imul
cmp
stc
popf
mov
xor
cmp
lret
mov
jbe
push
inc
xor
js
rep
or
in
shrd
or
scas
jp
mov
jns
insl
mov
into
mov
outsl
das
mov
test
test
sbb
test
dec
sub
insl
lret
xor
mov
sbb
fdivl
bound
mov
sub
add
jns
fmull
daa
aas
adc
jno
xchg
bound
dec
cwtl
cmpsl
lods
xchg
mov
inc
jns
cli
jae
jno
jbe
cmp
stos
bound
das
or
rclb
and
pop
movsl
insb
sbb
mov
test
cli
dec
ds
cmp
mov
add
js
arpl
stos
daa
shrl
repnz
dec
enter
sub
insb
imul
sbb
inc
or
pusha
enter
sbb
in
xchg
or
out
lret
pop
divb
or
mov
mov
neg
aam
and
in
fidivrl
testb
xor
xor
sub
sub
inc
or
and
das
sub
cmp
cmc
sub
fsub
xchg
imulb
jecxz
imul
ret
cmp
xor
pop
insb
sbb
sbb
int
sbb
dec
test
es
pop
cwtl
arpl
sbb
jp
mov
inc
push
cmp
movsb
shl
loop
jnp
and
icebp
sub
jbe
pop
and
adc
lcall
lahf
push
or
mov
cmp
out
sbb
cmpsb
cs
jecxz
ss
mov
cltd
dec
pop
bound
lret
cwtl
mov
aaa
sahf
push
pop
xchg
inc
fildll
xchg
jnp
sbb
xchg
sub
das
cmp
xor
sbb
fs
sar
and
and
imul
pop
arpl
sub
loop
lret
mov
sti
sbb
inc
lahf
mov
dec
mov
out
mov
fistpl
cmp
push
inc
mov
mov
lods
push
mov
mov
xchg
mov
pcmpgtb
ret
cmp
imul
cli
je
jle
jnp
and
sbb
mov
shlb
jno
mov
push
inc
aaa
aam
stc
sahf
cli
mov
das
je
iret
jns
insb
in
lods
jle
mov
jo
mov
in
and
test
cld
add
int
js
stos
and
mov
adc
inc
out
lret
push
dec
mov
add
mov
sbb
lods
pop
ljmp
add
inc
fldt
or
ljmp
adc
sarl
in
dec
adc
daa
mov
sbb
dec
ret
jnp
pop
mov
add
sbb
aam
stos
sub
mov
mov
jl
loope,pt
xor
push
out
fsubrl
jl
loopne
lods
jge
push
mov
movsl
lea
test
lret
shrb
inc
mov
sub
dec
push
dec
add
mov
mov
jo
push
mov
out
xchg
lods
xchg
ret
pop
in
out
and
push
je
in
mov
mov
std
aam
out
sub
jne
and
mov
dec
sbb
stos
push
lcall
mov
jp
jl
add
out
arpl
ds
mov
movsb
es
das
pushf
bound
jno
lcall
jbe
sub
mov
fs
cmpsb
insb
leave
jns
pusha
jbe
movsb
xor
and
inc
mov
pop
fcmovnbe
aaa
add
sbb
dec
fwait
stos
push
push
cmp
sarl
cltd
fstpt
std
mov
mov
mov
cmp
mov
cwtl
xchg
enter
lea
fldt
mov
mov
popa
sub
jg
add
jmp
push
mov
fs
aad
xchg
divb
xchg
xor
pop
movsb
sub
mov
outsb
les
lret
bound
mov
jl
cmpb
stc
loope
cld
repz
lret
push
rorb
or
xchg
sti
pop
adc
test
jp
mov
call
inc
ret
push
shll
xorl
cmp
push
dec
ds
push
pop
mov
adc
or
or
ss
pop
add
jl
inc
adc
mov
mov
js
dec
nop
and
imul
pop
inc
xchg
pop
sbb
cmp
pusha
popf
stos
adc
mov
jo
lcall
dec
popf
lahf
mov
add
cli
or
add
push
lahf
sub
cltd
mov
daa
lret
fsubr
rolb
fdiv
out
aaa
dec
les
insl
pop
aas
out
aam
or
inc
dec
jb
xlat
sub
imul
mov
lcall
rcrb
inc
subb
or
shll
adc
fs
add
pop
mov
hlt
xlat
stos
jo
pusha
pushf
add
fcomip
pop
loopne
add
sbb
int3
sub
les
inc
sub
cmp
mov
inc
mov
xor
push
mov
cmpsl
xor
jnp
jp
and
lahf
mov
out
stos
hlt
pop
sub
push
sub
rcl
jb
mov
popa
pop
cmp
inc
loop
mov
jo
es
pushf
jb
cmp
xor
xor
inc
roll
call
sub
inc
lea
inc
cmpl
cld
xchg
add
jp
jge
xor
lret
dec
int
hlt
lcall
lret
jp
or
mov
call
inc
cmp
pop
jno
mov
ret
add
dec
mov
mov
or
sub
cli
xchg
mov
insb
xor
pusha
and
sub
sub
mov
mov
and
pop
stos
inc
arpl
lea
cld
scas
sbb
pop
mov
nop
pop
lods
xchg
adc
js
jp
sti
inc
xchg
lahf
cmp
out
jecxz
clc
or
out
sbb
or
xchg
push
mov
and
ss
mov
or
add
push
mov
xor
aam
dec
jns
rep
sub
mov
pop
mov
pop
xor
dec
push
jge
jg
aaa
push
lds
in
mov
out
es
fnstsw
inc
out
das
outsb
dec
mov
mov
fcomps
das
jle
addr16
jo
pop
push
ret
inc
pushf
cmp
pop
push
mov
gs
or
sub
repz
pop
xlat
mov
bound
shlb
loope
and
icebp
xchg
popa
xchg
mov
lock
insl
mov
cmp
inc
pop
das
test
mov
or
inc
fldt
mov
leave
xor
rolb
daa
pop
rorb
pushf
insb
out
fiaddl
sti
hlt
imul
push
int3
push
fwait
sbb
mov
dec
cli
lret
pop
data16
sbb
xor
mov
pop
test
lcall
push
xor
cli
ficompl
dec
mov
or
inc
lret
bnd
sub
fidivrl
sub
xor
cmp
cmp
lcall
push
inc
mov
mov
mov
dec
lods
jecxz
lret
cvtdq2ps
mov
cmp
das
jb
sbb
pop
fimull
xchg
xchg
ret
outsb
adc
push
pop
add
imul
fistps
and
pop
leave
lock
jns
stos
lret
dec
lret
inc
push
mov
dec
inc
imul
call
cli
push
test
cmp
data16
loope
lcall
cmp
int
jnp,pn
or
xor
imul
jae
das
sbb
cmp
loopne
pop
leave
call
test
sarl
dec
push
mov
or
in
pop
dec
js
sub
xor
jo
or
add
inc
aas
xor
mov
enter
ret
cmp
imul
jp
int
jo
stos
jmp
outsb
mov
ljmp
mov
std
lock
subb
jo
sub
arpl
and
out
imul
repz
push
mov
es
aas
mov
or
pop
jnp
pop
fdivrp
fldcw
repz
sub
mov
fwait
sbb
in
mov
sub
cltd
mov
cmp
ficomps
push
dec
dec
inc
ljmp
xorb
mov
dec
arpl
or
cmp
adc
cmp
pusha
cmp
mov
leave
cmp
call
cmp
call
cmp
call
xor
mov
add
lret
shll
lods
insl
cld
loopne
pop
and
pushf
stos
inc
fisttpll
pop
scas
mov
icebp
pop
xor
movsb
fcmovnbe
pusha
sub
mov
pop
sbb
mov
std
imul
dec
push
cli
mov
cmp
lds
mov
xchg
xchg
inc
pushf
push
mov
adc
outsb
xchg
pushf
ds
inc
call
popf
ds
mov
xor
sbb
push
mov
mov
in
inc
adc
and
js
xchg
xor
je
loopne
jnp
mov
adc
neg
into
mov
mov
xchg
cmp
std
add
sbb
dec
push
sub
adc
testl
mov
adc
xchg
loope
aad
and
or
adc
xor
jge
mulb
mov
xor
dec
ret
icebp
pop
cmp
sbb
adc
imul
xchg
lods
jle
inc
stos
cmp
out
mov
imul
jp
mov
addr16
jb
jle
sbb
aad
or
cmp
pop
scas
lods
adc
test
jle
mov
in
leave
ds
or
inc
jnp
and
xchg
arpl
pop
cmp
or
xchg
rcrl
out
loope
inc
nop
pop
imul
ss
xchg
iret
daa
jmp
ds
iret
mov
dec
sbb
shlb
mov
and
sbb
and
dec
das
push
ret
fcomip
push
int3
popf
fldl
adc
or
mov
psrad
out
mov
pop
lret
cs
and
sbb
movsl
and
imul
data16
wbinvd
shl
jl
pop
sarb
cld
fcomps
test
inc
add
push
adc
pop
rcl
and
pop
jp
adcb
adc
xchg
dec
sub
shrd
and
mov
bound
inc
push
adc
cli
es
sub
cmp
ds
mov
cmpsl
adc
inc
fs
movl
mov
loopne
mov
sbb
inc
cmp
jo
mov
mov
mov
cmpsb
and
sahf
andb
fisttpl
mov
test
mov
imul
pop
mov
adc
popa
dec
addr16
xor
imul
push
mov
cld
inc
sbb
dec
mov
jl
lea
outsb
jne
inc
sub
cmp
mov
arpl
mov
ss
shlb
push
sub
stos
push
or
mov
aaa
jno
add
pop
add
mov
mov
mov
mov
jp
cmc
mov
int
add
pop
jmp
sti
cmc
lret
andl
mulb
orb
mov
lret
push
lahf
pop
pusha
push
je
int3
xchg
scas
jno
jb
and
sahf
subps
mov
push
sbb
adc
push
pop
push
js
sbb
dec
fstps
outsl
sub
ljmp
sbb
test
mov
jp
mov
jb
lock
dec
ficompl
sbb
dec
std
sbb
pop
mov
adc
orb
cli
cmp
call
std
pusha
pop
sti
xorb
jmp
sahf
test
aas
jnp
dec
ja
inc
cmp
sub
xor
in
ficoml
sbb
cs
pop
jnp
add
sbb
sub
pop
rcrb
or
mov
inc
add
jp
pop
stos
mov
or
cmp
jnp
sbb
xor
sbb
jo
sub
fcmovnu
sbb
sbb
cs
cli
and
pop
ret
lock
arpl
and
xor
arpl
fidivl
ja
pop
push
adc
sub
mov
in
fiaddl
inc
ficomps
pop
xchg
sti
pusha
add
rcrl
mov
cmp
mov
add
test
mov
mov
dec
shlb
adc
test
dec
add
mov
movl
imul
sbb
nop
dec
andb
push
pusha
sub
jp
fwait
fs
lcall
mov
sbb
nop
cmp
ljmp
loopne
nop
sub
mov
out
or
jns
xor
arpl
pop
mov
lret
inc
lock
sub
cs
and
sahf
cmp
pusha
sbb
stos
dec
mov
fldt
out
sbb
dec
sti
and
jae
mov
sti
rcrb
push
mov
rorb
or
dec
out
and
stos
xor
gs
and
or
and
fwait
sarb
inc
xor
push
out
mov
fcomip
aaa
jno
inc
pop
cmp
jne
sbb
mov
fistpll
or
mov
sub
push
lahf
pop
and
xchg
push
stos
push
sbb
pop
cmp
xlat
les
out
repnz
mov
test
pusha
mov
std
into
outsl
pop
out
mov
fildll
inc
aas
je
jno
inc
aad
std
push
fisubrs
or
push
leave
push
fstl
test
pushf
imull
jecxz
mov
xlat
push
arpl
cmp
fldl
xchg
ljmp
fnstcw
aaa
mov
and
mov
inc
lods
push
xchg
xchg
loop
lea
imul
push
loop
sub
xchg
repz
jl
inc
jno
mov
repz
add
mov
pop
inc
in
lcall
fwait
xor
pop
mov
xorl
stc
mov
add
and
aad
inc
mov
pop
mov
lods
in
movsl
ror
jo
scas
and
rcrl
pop
iret
and
jo
adc
push
fldenv
fsubr
push
inc
xor
in
fldcw
adc
mov
inc
fisttpl
js
imul
pop
fisubrl
fdivrp
je
out
daa
xchg
fistps
mov
pop
mov
mov
xchg
pop
scas
adc
pop
lret
lea
adc
in
cmp
loop
and
aaa
in
stc
test
sub
push
push
push
xchg
jno
es
mov
xchg
aam
fsubrl
or
cmp
lret
cmp
repz
xor
jl
adc
in
mov
fsubr
pop
pushf
out
inc
cmp
adc
xlat
mov
or
dec
mov
fistl
int
mov
push
inc
xorl
in
inc
inc
jmp
jmp
xchg
stos
mov
out
fsubrl
sti
jno
sbb
push
stos
cmp
popa
cmp
push
mov
mov
xorb
daa
push
movsl
cmp
shrl
push
ret
xchg
sti
dec
xor
dec
fildll
negb
jl
mov
fisttpll
int
pop
xor
adc
push
xor
lds
mov
test
pop
cmpsb
xor
andl
repnz
jle
lods
cmp
popf
pusha
add
test
enter
out
push
pushf
xchg
data16
sbb
lods
mov
pop
cmp
rolb
cmc
mov
arpl
dec
scas
sub
sbb
add
subb
and
es
pop
pop
aas
push
sub
pusha
pushf
out
gs
and
sahf
js
mov
sarl
mov
stos
shr
int3
icebp
adc
cmp
fists
mov
add
jne
cli
inc
mov
pop
nop
xor
mov
ror
jb
loope
ror
lcall
sbb
movsb
adc
notb
je
inc
out
sti
mov
mov
bound
adc
jno
icebp
arpl
mov
jle
jg
mov
and
aas
mov
test
inc
push
fdivrl
scas
or
dec
addl
inc
pop
cmp
pop
hlt
sub
mov
xchg
mov
xor
xchg
lock
inc
mov
popa
jne
ja
popf
or
insl
mov
das
push
lcall
xchg
xor
movsl
jmp
pushf
push
cmp
pop
pop
sub
pop
inc
mov
sahf
mov
les
mov
mov
sub
cmpsb
imul
cmp
into
sbb
out
test
les
xor
lea
mov
sub
aam
xor
mov
sub
imul
xor
test
scas
mov
mov
addr16
jae
test
cmp
jecxz
inc
fcmovnu
test
mov
and
adc
dec
xchg
or
cmp
sub
cmpsb
ds
mov
fnstcw
lret
mov
lahf
inc
jp
push
push
cld
aam
pop
popl
aad
jo
cwtl
xchg
mov
cmp
mov
dec
dec
adc
mov
dec
movsl
jle
and
outsb
mov
popa
jo
add
mov
pop
inc
sbb
jae
adc
mov
mov
pop
and
cmp
int
pusha
mov
es
stos
sub
pusha
scas
mov
add
push
mov
sbb
xor
out
lock
or
sbb
into
dec
add
jb
mov
push
out
pop
pop
aam
add
pop
mov
adc
nop
or
fdivs
lock
stos
jae
pop
adc
loopne
inc
ficompl
in
xor
sub
lret
mov
addr16
inc
lea
ret
adc
jl
xchg
shl
adc
out
adc
mov
shrl
pop
lret
sub
mov
sub
das
jns
sub
jge
outsb
nop
insl
inc
shll
cmpsl
xchg
pop
mov
cmp
pop
aad
shlb
dec
sub
into
shlb
pushf
push
inc
lods
pop
addr16
jp
mov
mov
cmp
rorb
fldt
pop
enter
pop
std
rolb
push
into
xchg
dec
jno
sub
xchg
xor
out
push
mov
lea
cltd
movsl
es
lods
shrl
iret
push
pop
mov
ret
mov
insl
sub
leave
xchg
jg
xchg
cmp
mov
jg
jb
stos
sbb
jbe
movsb
pop
ds
cltd
mov
sub
jp
rcr
cmp
and
cld
fsub
cmpsb
inc
sbb
lods
sarl
rclb
dec
test
lods
idivb
mov
jle
pusha
push
xchg
mov
cld
icebp
in
cmp
mov
add
mov
ret
add
cmp
les
out
nop
xor
lret
sbb
adc
dec
add
sarl
fcmove
adc
scas
aad
adc
mov
xchg
mov
aad
push
dec
loop
out
imul
rcl
mov
push
adc
mov
adc
out
jmp
repnz
mov
ljmp
xchg
idivb
ret
mov
pop
pop
adc
xor
jge
push
jne
icebp
sbb
mov
inc
sbb
sbb
pop
int3
shlb
loop
std
rorb
je
dec
adc
mov
sbb
sbb
mov
xor
icebp
push
fstpt
shl
adc
xor
lds
adc
rcr
rcl
outsb
mov
leave
ds
dec
mov
mov
and
or
mov
test
and
mov
lret
ficompl
adc
into
cltd
sub
dec
sub
scas
bound
popf
cmp
xchg
addr16
ja
popa
sub
mov
and
pop
mov
icebp
push
jp
dec
stos
adc
add
lods
les
fstpt
xlat
inc
adc
test
lods
or
enter
lcall
mov
mov
movsb
ljmp
cli
icebp
jnp
push
push
jb
movsb
ficoms
jns
dec
cld
push
pop
pop
aaa
sub
lea
cltd
push
mov
sub
cwtl
imul
ror
test
and
mov
adc
xor
jo
fwait
out
mull
sbb
pop
and
pusha
int
add
mov
cmp
mov
bound
in
mov
sti
cmp
icebp
repz
inc
cmpb
adc
sti
test
adc
mov
mov
cmpsb
sbb
pop
mov
mov
outsl
xchg
cmp
bound
xchg
mov
sub
out
adc
loope
push
pop
mov
test
nop
test
int3
pop
nop
or
add
insb
fdiv
mov
and
mov
mulb
xor
fsubr
pop
pop
or
jnp
int
lock
sub
ficoms
popf
mov
les
lret
leave
cs
daa
xchg
hlt
push
jecxz
sbb
icebp
and
adc
fdivrl
call
icebp
pop
push
sar
pop
mov
ret
push
jnp
faddp
sbb
push
sub
dec
dec
fisttpl
adc
xchg
mov
aaa
leave
jb
mov
loope
clc
add
jb
xchg
fildl
testb
divl
test
loope
mov
aas
in
mov
icebp
mov
adc
cltd
mov
adc
xorl
test
cmc
inc
inc
popa
popa
pop
adc
sub
clc
mov
aam
cld
lds
sub
push
int3
mov
fstpl
js
mov
mov
push
outsl
pop
lods
xor
fidivl
mov
cli
out
fwait
mov
lea
fcomi
pop
idivb
arpl
das
std
dec
inc
mov
gs
mov
daa
add
adc
aas
push
int3
mov
add
and
mov
sub
pusha
lock
add
or
sbb
repnz
loope
adc
pop
repz
sub
dec
cli
es
pop
mov
xchg
cmpb
loop
push
jle
bound
xchg
mov
mov
push
mov
xchg
and
and
outsl
rorl
jle
es
fs
fisttpl
mov
cltd
sbb
aam
mov
sub
xor
popl
jle
and
sahf
popa
push
cmpsl
sbb
push
jp
mov
and
sbb
out
and
sub
sarl
dec
and
push
sbb
sbb
mov
cs
lods
insl
ss
ljmp
sbb
pop
out
lret
jnp
cmp
dec
push
xor
mov
shrl
pop
int3
mov
mov
push
cmp
addr16
mov
inc
mov
loopne
cmpsl
cmp
xchg
mov
in
ljmp
inc
and
sbb
xchg
sbb
lods
jmp
or
fcomi
sub
inc
leave
lods
sub
cmc
or
cmp
in
lock
xchg
sahf
dec
int3
cmpsl
arpl
fcomp
in
sahf
lods
lds
push
ja
push
fmuls
inc
dec
jnp
dec
repz
mov
popf
jle
ret
xor
testl
mov
sub
sbb
pop
outsb
inc
lock
xor
sbb
loopne,pt
mov
int3
movsl
fldl
shlb
mov
xor
sti
pop
outsb
mov
fsubs
or
cmp
cmp
es
mov
add
xor
xor
cmp
fimull
jno,pn
inc
test
outsl
mov
and
sub
dec
or
pop
add
push
dec
bound
push
testb
xor
int
dec
out
loopne
mov
adc
cs
sub
daa
outsb
cli
mov
dec
aad
lock
or
adc
add
negb
ss
incl
mov
cmpsl
scas
adc
fbld
out
pop
mov
mov
jo
jle
arpl
loope
rclb
push
iret
fwait
daa
out
add
push
sub
add
adcl
in
aaa
sarb
cmp
out
sbb
jnp
xor
jg
and
xchg
inc
dec
mov
add
pop
aaa
dec
imul
and
push
fucomi
sbb
or
and
and
sub
lcall
or
inc
inc
cmp
push
jecxz
mov
adc
mov
inc
gs
js
stc
shlb
push
mov
lcall
pusha
sbb
fstl
clc
sub
hlt
adc
in
test
inc
loop
fisubrl
jae
adc
mov
fisubl
movsb
in
fidivl
and
cmp
push
sbb
jne
dec
mov
aad
sub
testl
jg
or
cmp
xor
jnp
xor
sub
fdiv
icebp
dec
fwait
push
mov
jmp
pusha
add
mov
pop
shrl
fs
ss
add
mov
mov
fcompl
xchg
pop
sbb
fsubp
jo
imul
rcrb
cmp
lock
mov
inc
mov
jne
dec
in
insb
fs
fs
dec
or
shrl
and
jle
mov
sbb
aad
cltd
daa
dec
jnp
dec
cld
movlps
sti
jnp
sbb
xchg
pop
fs
out
gs
inc
adc
pop
lock
push
mov
or
inc
sbb
inc
adc
xchg
aad
out
lcall
adc
add
call
pusha
mov
bnd
mov
mov
jcxz
pop
mov
hlt
mov
pusha
mov
mov
push
mov
fadd
str
jp
out
je
std
nop
hlt
cmpsl
xchg
dec
mov
dec
ss
cmp
sub
or
push
cmpl
out
mov
pop
pop
cmpsb
and
or
mov
inc
push
and
cmp
sub
mov
mov
push
cli
xor
add
ss
inc
and
pop
aas
fdivrl
jno,pn
sub
cli
jge
adc
mov
mov
mov
xchg
cmpsb
inc
cmp
jl
test
loope
mov
test
sub
inc
mov
cmp
js
out
push
lods
push
mov
mov
pushf
fdivp
cmp
inc
jo
cmpsb
cmp
pushf
xchg
fisttpl
jb
pusha
adc
or
loope
sarl
dec
pop
fistpll
and
xor
les
in
mov
inc
xor
jle
xor
int
repz
test
sub
pop
fdivrp
and
pop
es
mov
sbb
rcr
xchg
sub
outsl
inc
pop
fdivrl
shrb
mov
enter
out
or
jecxz
push
push
mov
cld
mov
movups
fidivrl
mov
out
jle
jle
stc
jae
fisubrs
dec
xchg
jne
js
movsb
jecxz
ljmp
mov
addr16
in
or
pop
shll
into
xchg
insl
lods
rol
sub
fcompl
cmp
in
int
xchg
push
fldt
xor
fstpl
push
mov
pop
inc
icebp
cmp
jns
adc
jo
cmp
mov
test
and
mov
les
cmpsb
xor
inc
mov
testb
in
jmp
hlt
jnp
xor
in
and
das
xchg
jno
inc
jb
lods
out
cmp
les
int
rolb
dec
xchg
cwtl
or
mov
mov
inc
jmp
aaa
and
hlt
aas
sub
xchg
xchg
daa
pop
or
add
outsl
pushl
lahf
lea
movsb
pop
or
addr16
ds
repnz
imul
pusha
push
pop
mov
test
pop
and
sbb
pop
adc
ret
test
inc
and
test
pop
jae
sub
sub
mov
cmpsl
insb
add
adc
xchg
mov
xor
in
lcall
inc
push
sahf
pop
sub
jg
jge
dec
adc
add
inc
loope
cmp
fcmovbe
fs
aaa
dec
sub
cmp
sbb
mov
bound
iret
xor
mov
jmp
ljmp
les
mov
cmp
mov
jg
sbb
cmp
fmull
cmc
dec
outsb
cmp
xor
lods
mov
lods
xor
fidivl
aas
imul
and
sbb
scas
mov
lock
push
mov
mov
push
cmpb
pop
mov
and
sub
sub
lret
jne
mov
mov
lock
ficoml
or
inc
dec
rcrl
mov
out
dec
and
out
lret
dec
mov
js
dec
dec
mov
adc
and
mov
ret
daa
dec
subb
rorl
imul
lock
pop
dec
sbb
aam
xor
aas
aas
aaa
lahf
pop
hlt
icebp
test
lock
xchg
gs
mov
adc
stos
inc
es
mov
mov
notb
pop
mulb
sub
in
xchg
inc
mov
shld
dec
adc
pop
cmc
and
inc
or
dec
cmp
aas
xchg
mov
push
insb
dec
pop
and
stc
mov
hlt
inc
fldt
mov
xchg
add
pop
dec
jle
cmp
fildl
lock
inc
cwtl
add
imull
add
pop
push
jnp
adc
fnstcw
pop
inc
push
insl
cmp
xchg
fwait
sub
mov
jbe
push
inc
push
cmp
mov
imul
xchg
jo
fwait
daa
inc
fidivrs
inc
pusha
bound
sahf
hlt
or
les
xor
out
repz
sbb
mov
leave
mov
sub
dec
push
sbb
mov
addb
sar
mov
jp
xlat
insl
cmp
push
enter
int
insl
xor
into
pop
mov
pop
gs
add
or
arpl
mov
jmp
xor
repnz
mov
inc
sub
call
cmp
int
scas
push
lret
sbb
and
sbb
daa
jle
jno
jnp
inc
aaa
sub
out
in
jp
lock
jle
pusha
pop
pop
adc
jae
mov
outsb
pushf
in
int3
or
push
frstor
mov
mov
jg
fnstcw
int3
and
cwtl
outsb
fisttps
cmp
rep
bound
xchg
push
or
xchg
movsl
push
adc
cmpsl
inc
cmc
enter
insl
loop
mov
xchg
fistpll
jp
sub
mov
and
mov
dec
dec
mov
and
lret
test
shll
sub
xchg
jno
mov
cmpsl
enter
fbld
mov
lret
fidivl
or
lods
or
mov
mov
out
push
push
cwtl
nop
sub
fistl
popf
imul
loopne
lods
push
mov
inc
mov
mov
lock
xchg
sub
in
xor
nop
dec
mov
push
lods
jg
cmp
lock
sbb
shl
pop
mov
popa
dec
mov
xchg
loop
xor
cmpsb
pop
inc
mov
sbb
cmpsl
repz
loopne
sub
and
pop
jne
das
mov
leave
stos
jnp
add
sbb
inc
or
pop
inc
es
int
imul
int3
test
sbb
push
sub
xor
dec
pop
or
sub
test
test
sub
sub
mov
and
std
inc
lock
stc
sbb
fnstcw
and
cmp
and
push
xchg
lock
inc
pop
popa
fistpl
bound
stc
jp
mov
inc
cmp
rorl
jnp
jp
pop
sub
fcmovnu
adc
mov
aad
test
pop
cmp
mov
xorl
stc
mov
mov
popl
xor
push
pop
test
pop
sbb
sti
pop
daa
lock
jnp
sbb
out
xor
dec
sub
inc
mov
hlt
mov
cmp
out
lea
cmp
lret
push
shlb
aam
jge
sbb
ret
fsubs
mulb
sub
mov
xchg
xor
jae
outsb
mov
cmp
aam
dec
fucomi
jo
adc
sub
je
sbb
xchg
mov
sub
mov
insb
dec
rorl
test
loopne
in
mov
pop
inc
push
pop
fistl
jo
mov
sbb
insl
and
mov
sahf
cwtl
push
aas
sub
out
push
psllq
jl
jle
lds
sbb
pusha
jp
and
jo
decb
xor
sub
shrl
or
shll
jecxz
daa
movsb
or
push
cmc
sub
les
mov
jg
es
jb
pop
cmp
mov
dec
in
scas
lock
out
xor
and
cmp
mov
fstpl
imul
arpl
imulb
int3
ret
popf
popf
loopne
mov
mov
jge
mov
jmp
adc
sub
cwtl
cmp
mov
fs
or
xchg
cltd
pushf
stos
mov
repz
out
jne
mov
pop
jae
push
push
insb
scas
xlat
lods
dec
inc
orl
loop
jo
sbb
movsb
subb
mov
mov
sbb
mov
inc
inc
loope
jecxz
imul
xchg
and
lret
cli
bound
dec
je
mov
cmp
or
stc
mov
push
pop
push
leave
mov
xor
in
mov
ljmp
inc
bsf
into
mov
sbb
cmp
sub
cli
mov
xchg
movsb
cmp
ficoms
fninit
sti
lea
sub
inc
aad
sbb
push
jns
inc
out
jae
cmp
movsb
rcr
sbb
mov
mov
rorl
pushf
mov
ret
cld
cmp
sbb
fucomp
mov
arpl
pop
pop
inc
jp
stc
pop
push
pop
cmp
jne
or
add
sub
mov
jp
loop
cwtl
jle
adc
insl
pop
pop
aad
bound
ret
sahf
adc
adc
popa
adc
jmp
mov
imul
push
cmp
outsb
rolb
inc
adc
xchg
ds
std
mov
pop
inc
dec
or
mov
test
sub
mov
fstpt
and
sub
int
xor
fidivrs
jbe
jp
cmp
test
cmp
sub
pop
dec
xchg
loopne
xchg
mov
sar
cmpsb
cli
popa
fwait
or
jl
ds
inc
jle
js
add
incl
lds
or
inc
cwtl
arpl
pusha
lea
xorl
inc
nop
xchg
daa
push
mov
pop
test
sub
aaa
adc
and
inc
and
push
test
inc
sbb
insl
mov
jp
scas
daa
mov
sbb
outsb
pop
lea
and
mov
push
daa
addr16
fsubr
sbbb
jle
inc
outsl
cli
cmp
mov
les
cmp
pusha
ds
jo
mov
and
inc
lcall
xor
pop
jno
or
cwtl
inc
bound
andb
adc
pop
fs
jb
xor
xchg
cmp
shrl
icebp
adc
adcl
cmp
fistl
inc
stos
rcr
fdivs
sti
sbb
imul
pop
mov
shlb
mov
popa
aad
mov
fcmovb
cmp
mov
adc
ss
xor
cmp
mov
sbb
mov
sbb
les
mov
pushf
and
mov
cmp
std
jle
call
push
jno
mov
jno
xchg
mov
aam
lods
inc
and
jp
and
sbb
adc
xorl
test
je
pushf
xor
pop
xor
jo
test
movsl
pusha
and
push
xchg
test
nop
xchg
inc
pop
cmp
pop
out
inc
bound
movsl
outsb
push
fs
mov
and
pop
insb
add
or
pop
inc
jno
xchg
xor
lock
cld
xor
adc
repz
xchg
cmp
sub
repz
lods
sbb
add
out
jae
mov
dec
out
lret
cmp
scas
jmp
bound
fcmovu
loopne
jmp
cli
aaa
jp
pop
pusha
int3
in
out
fs
or
lahf
lds
mov
cld
sbb
and
inc
xor
inc
jmp
aas
xchg
mov
fscale
push
lcall
sarb
mov
jae
mov
sbb
fstp
ja
idivl
add
cmp
lods
popf
iret
dec
repz
cmp
and
nop
subl
out
int3
dec
mov
jb
xor
lea
ss
jg
adc
mov
in
aaa
fistl
sbb
movsb
push
inc
pop
cmc
fidivs
fucomi
mov
ds
nop
negb
adc
sbb
pop
adc
adc
jecxz
gs
pop
or
enter
movsl
sbb
daa
sub
cmp
imul
movsl
aam
cli
imul
cmp
push
pop
jle
xchg
out
sti
add
add
es
out
xor
cmpsb
dec
adc
or
outsb
cmp
js
scas
das
mov
fcoms
sahf
ja
xor
dec
jle
test
mov
shlb
inc
mov
mov
and
cli
mov
loopne
jle
or
pop
aad
mov
xor
inc
jl
out
mov
mov
adc
sbb
mov
jb
fcomps
jp
adc
hlt
imul
fildl
lea
into
lods
jle
dec
adc
and
dec
dec
sbb
pushf
pusha
mov
out
cmp
int
xchg
dec
ds
cmpsb
std
fidivl
inc
test
sbb
aad
jns
test
sub
aam
scas
notl
sahf
cmp
out
push
insl
pop
lea
lock
pop
inc
mov
scas
cmp
xchg
xchg
fnsave
cmpb
aaa
mov
adc
enter
sti
pop
int3
and
or
inc
in
std
add
sub
aas
adc
push
bound
pop
aas
xor
cmp
sbb
lods
jp
add
stos
or
mov
lahf
cltd
jle
mov
shr
inc
and
add
mov
lock
inc
mov
inc
imul
cwtl
movsl
push
mov
dec
call
sub
mov
shll
in
dec
pop
aam
jle
inc
ret
sub
popa
lahf
and
aad
xor
xchg
ljmp
dec
jmp
aad
mov
mov
push
inc
pop
shl
je
mov
mov
mov
call
scas
out
popf
icebp
decl
pusha
push
sub
lds
cmp
lahf
jl
pop
add
jns
jl
aas
outsb
std
fwait
add
sti
mov
test
in
and
jo
xchg
cmp
dec
sbb
mov
movsl
dec
xchg
and
in
icebp
and
orb
fcmovnbe
fsubrp
in
leave
fistl
mov
stc
add
xchg
test
aaa
jle
jg
outsb
leave
inc
mov
lock
mov
in
sbb
cmpb
pop
jns
push
or
out
es
inc
mov
es
pop
in
xchg
es
imul
pop
cmp
mov
es
push
mov
jae
fiaddl
test
xchg
adc
push
arpl
mov
int3
mov
and
sbb
add
jb
std
and
adc
ljmp
xor
popa
das
int
xchg
xor
xor
mov
outsl
ds
cs
imul
testb
bound
scas
into
insb
push
push
cmp
sub
inc
mov
inc
pop
xor
aas
push
jne
cmp
cmc
lea
js
movaps
test
jbe
adc
cmpsl
xor
and
adc
out
pop
adc
call
add
sbb
and
stc
dec
or
lods
adc
cmc
lods
insw
mov
and
fidivrl
ja
loopne
dec
aam
xchg
loopne
jp
daa
in
jle
mov
mov
sub
jbe
add
loop
insb
call
push
sti
xchg
and
sbb
cmp
mov
and
pusha
fcmove
adc
rorl
mov
std
push
mov
jae
mov
pop
icebp
or
sub
jae
pop
adc
xor
aam
stos
lcall
inc
push
shll
imul
xor
sbb
ds
call
mov
xchg
add
and
pushf
into
out
mov
xchg
push
cli
inc
ret
dec
int3
aaa
lods
mov
mov
or
nop
mov
add
addr16
lea
aaa
imul
out
inc
xchg
mov
sbb
cmp
fnstsw
fsub
mov
cli
imul
xchg
pop
push
dec
jae
lret
push
sbb
stos
jo
push
in
push
adcl
aad
mov
call
imul
xlat
xor
jo
or
pop
aaa
mov
adc
arpl
push
or
xchg
push
xor
popa
pop
in
jle
fldt
negb
pop
cmp
mov
push
pop
dec
push
loopne
jmp
xor
mov
jecxz
ficoms
in
mov
xchg
jb,pt
lahf
jmp
inc
ret
cmp
idivl
dec
rol
dec
icebp
push
xor
popa
sub
jnp
sub
add
ficomps
test
insb
popa
adc
int
and
int
roll
push
es
mov
push
inc
loopne
stc
es
pusha
std
loopne
hlt
jge
pushf
sub
pop
shll
dec
xchg
dec
cmpsb
shll
mov
mov
inc
filds
ss
cmp
or
and
and
jle
in
xchg
sbb
jno
in
pop
push
shl
scas
mov
push
mov
mov
cmp
push
jg
ds
dec
sbb
cmpsb
mov
test
push
sub
lea
daa
jg
adc
imul
sbb
sahf
dec
shll
scas
mov
loopne
pop
pop
std
push
or
mov
ds
cwtl
mov
ljmp
adc
adc
and
fadds
loope,pn
das
adc
jp
js
pop
ds
popa
mov
cmp
in
data16
push
cltd
loop
lds
mov
xchg
inc
repz
inc
adc
loop
sbb
bound
enter
fstp
mov
jo
lds
mov
mov
fabs
jne
call
jae
xor
add
sti
jnp
out
dec
enter
jnp
mov
int3
jp
shrl
popf
pop
pop
or
add
and
pushf
mov
pushf
mov
adc
jp
mov
jno
enter
jmp
push
popa
cwtl
mov
pop
jecxz
dec
push
xchg
push
jmp
pop
icebp
dec
adc
dec
jl
jnp
inc
mov
dec
das
jbe
dec
out
add
punpcklwd
in
dec
dec
sbb
and
pop
adc
push
mov
mov
xor
inc
add
xor
imul
pop
push
xchg
scas
rolb
and
mov
push
and
pop
pop
sub
leave
cmpsl
sub
pop
xchg
leave
push
mov
mov
mov
dec
jge
mov
dec
and
jns
pop
mov
ds
shll
pop
fistl
sarl
bound
int3
lcall
notb
in
dec
scas
lahf
sub
sbb
push
sti
sbb
movsb
mov
xchg
add
fisubrl
sbb
sbb
data16
shr
xchg
cmp
and
add
scas
aam
out
jmp
push
cld
pop
push
lock
pop
cmp
mov
xchg
filds
adc
mov
pop
mov
mov
into
sbbb
inc
inc
mov
std
outsb
into
jnp
sub
imul
push
xchg
cmp
adc
push
push
mov
xchg
insl
adc
fldt
fs
lods
aad
pop
cmp
xor
mov
and
icebp
sbb
jnp
test
sahf
pop
rcrl
pop
and
push
sub
inc
lret
fsts
xchg
mov
pop
je
or
aam
sbb
adc
call
sti
jmp
sbb
push
test
sub
adc
cli
aas
push
hlt
test
and
jg
rclb
popf
adc
movsl
push
and
icebp
jp
sub
push
cmp
fbld
push
pusha
sbb
adc
inc
pop
or
adc
jl
xor
mov
loop
cli
push
pop
popw
jle
pop
mov
pop
mov
pusha
cltd
push
push
sbb
dec
add
inc
jle
or
xchg
repz
ds
jae
and
in
in
pop
adc
std
or
jns
pushf
mov
cmp
mov
jg
mov
jns
popa
lods
xchg
xchg
push
in
adc
fidivrl
and
into
fwait
addr16
xchg
scas
mov
cmp
dec
cmp
sar
popf
lcall
dec
inc
mov
loope
or
add
sbb
out
cmp
cmp
rclb
dec
es
pop
fadd
jmp
dec
movsl
dec
popa
sbb
stc
sahf
add
test
push
jo
xchg
xlat
push
sub
dec
xor
in
mov
outsl
fisubl
mov
sub
frstor
lods
and
sbb
int3
inc
lock
cwtl
xbegin
xor
mov
sarl
xchg
push
and
lods
mov
and
in
or
jle
out
push
jne
mov
mov
bound
shlb
jbe
mov
push
sbb
or
push
cmp
push
jecxz
xchg
stc
mov
fcmovne
addb
mov
stc
inc
push
das
and
and
sub
dec
loopne
sahf
xor
or
fsub
jmp
psllw
adc
lods
jmp
repz
rcll
mulb
pop
xor
fildll
pop
sbb
push
shrb
sti
or
pushf
adc
cmp
add
xor
mov
pop
add
sbb
and
shrl
popa
repz
mov
leave
fnstsw
xor
jle
fcomps
andl
vpsrld
aam
mov
inc
je
std
movsl
cmp
xor
fildl
lcall
incl
push
test
mov
xor
rorb
mov
jmp
adc
jmp
fisubrl
mov
mov
mov
jne
iret
test
or
popf
pop
sub
jb
xor
les
push
pop
push
cmp
dec
in
mov
push
or
add
repz
push
mov
adc
or
jno
add
jle
aam
xor
adc
pop
mov
icebp
lock
inc
and
push
pop
loop
sub
std
or
lods
jne
and
jp
jle
sub
into
ficompl
cmpsb
mov
js
lahf
cmpsb
fwait
lret
cmp
pushf
inc
inc
pop
lods
adc
pop
cltd
fstpl
mov
mov
push
shlb
jmp
fcmovb
push
cltd
sbb
fisubrl
sub
fdivs
pop
jno
or
xchg
bound
or
and
mov
sbb
push
js
fcomi
jns
xor
mov
xchg
out
mov
jo
lcall
xor
pop
mov
cmc
dec
popa
jmp
jmp
cwtl
lcall
fs
aaa
sub
mov
imul
or
sbb
inc
test
repz
pop
lea
adc
jb
push
out
int3
lods
test
adc
xor
inc
mov
or
inc
mov
push
lea
jle
adc
jp
mov
mov
push
lcall
fstpt
mov
inc
sub
xchg
add
jge
aam
pop
inc
mov
in
adc
or
xchg
xor
ljmp
inc
mov
push
jl
xor
popa
dec
add
ficoml
scas
or
fcompl
cltd
pop
mov
mov
stos
mov
out
ret
icebp
mov
xchg
sub
aam
test
adc
mov
es
xor
inc
outsl
mov
std
lods
xor
mov
mov
insb
mov
jl
xchg
in
popl
insb
cmpsl
cld
sbb
inc
mov
or
sahf
je
cmp
out
inc
cmp
pushf
loop
mov
mov
pop
mov
mov
adc
sbb
fstpt
mov
enter
pop
xor
cmpsl
mov
insl
cld
mov
lret
js
dec
setne
xor
aam
inc
push
pop
xchg
xor
add
sbb
sar
cmp
cmp
in
mov
jbe
pop
sahf
stos
or
xchg
stos
les
shlb
bound
test
lea
jg
sbb
outsb
subb
insl
scas
cmp
std
add
jg
aaa
cmp
sbb
jne
pop
insl
push
mov
mov
mov
loope
mov
push
jae
in
bound
fnstcw
incl
mov
int3
call
mov
adc
cltd
cmp
push
push
andl
mov
sbb
pop
dec
lock
pushf
gs
subb
cmp
cmc
das
popf
pop
call
lods
ljmp
call
mov
lds
iret
nop
stos
mov
gs
pop
scas
fwait
test
jp
stos
xor
stos
gs
mov
sbb
mov
jp
push
sbb
pop
inc
cld
scas
or
outsb
dec
lods
jne
decl
jo
push
jnp
shll
mov
lods
xchg
test
and
mov
cltd
and
insl
xchg
enter
mov
jb
xchg
cmp
inc
das
pop
arpl
dec
jbe
aaa
push
incb
add
inc
test
add
rclb
scas
cli
in
dec
mov
dec
cltd
mov
fisttps
xorb
pop
or
jbe
xchg
add
adc
inc
nop
pop
sbb
lret
and
jmp
cltd
dec
adc
push
insb
fstpt
pop
ret
and
xchg
jnp
int
cmp
shlb
lahf
xor
or
shll
iret
stos
mov
add
inc
xor
scas
mov
sbb
xor
imul
mov
fstpt
fnstcw
mov
mov
pop
push
pushf
and
sbb
dec
jnp
inc
andl
push
movsb
dec
icebp
jb
adc
mov
xor
dec
imul
xor
aad
mov
and
sbb
mov
iret
sub
cmc
push
push
push
jnp
dec
arpl
mov
cmp
sar
and
mov
idivb
hlt
and
mov
add
xchg
cmpsb
shlb
cmc
imul
stc
pop
and
ret
mov
jbe
hlt
cltd
call
jle
mov
dec
jbe
sbb
out
and
orl
xor
push
xchg
mov
sahf
pop
movsl
sub
stos
imul
push
dec
pop
push
je
fwait
inc
push
xchg
les
mov
inc
cli
and
mov
jo
pop
mov
pusha
cmpl
ds
pop
int
mov
cmp
ds
jp
mov
out
pop
or
or
and
sbb
add
repz
add
dec
je
jb
pop
nop
sti
leave
sti
sub
push
or
mov
test
in
roll
int
cmp
dec
mov
ret
adc
cmp
ret
and
cld
push
or
dec
cmp
lea
mov
test
fstpt
mov
in
loop
cli
fsubr
into
bnd
pop
jnp
jle
andl
lods
mov
pop
popa
cmp
mov
add
dec
aad
xchg
pusha
adc
test
pop
add
pop
mov
xchg
xor
jae
scas
icebp
jne
mov
lret
adc
xorl
push
add
cld
mov
enter
shrl
outsb
jnp
fisttpll
xchg
jnp
inc
loope
xchg
add
fnstsw
shlb
push
rcll
inc
repnz
les
mov
std
xor
imul
icebp
jb
cltd
jg
sbb
mov
lahf
mov
adc
scas
mov
or
or
stos
dec
icebp
outsb
test
ds
jle
or
sbb
or
repz
mov
mov
mov
lahf
adc
mov
test
lea
mov
in
sbb
cmc
pop
inc
es
loopne
mov
out
pop
ja
insl
adc
pop
es
jl
lcall
fdivl
out
pop
pushf
jo
cwtl
jp
lock
cmp
ret
sbb
stc
inc
mov
lret
pop
inc
xor
push
jne
fsubs
gs
flds
mov
xchg
inc
mov
test
pop
adc
inc
dec
nop
inc
xor
sub
je
test
dec
fsubr
ds
sahf
xchg
push
gs
mov
addr16
test
mov
push
iret
stc
pop
in
test
mov
and
jno
das
loope
mov
movsl
pusha
sbb
mov
pop
mov
lods
mov
imulb
sub
sbb
ret
fcmovbe
and
lds
inc
sahf
das
test
jle
stc
lods
xchg
mov
ss
imul
and
sbb
adc
sub
jecxz
jo
push
pop
mov
negb
inc
xchg
add
mov
sbb
cmc
iret
xor
mov
mov
ficompl
or
into
ficompl
cmp
adcb
movsl
popa
negl
jno
xchg
in
lret
inc
mov
mov
hlt
sub
push
mov
jg
mov
ret
sbb
xchg
pop
and
fstps
adc
inc
jo
push
push
fdivrl
addr16
xchg
add
mov
mov
ficomps
mov
stc
mov
mov
jecxz
xor
aad
sub
push
and
adc
xchg
int3
lea
mov
vcvtss2sd
xchg
mov
test
fildl
sbb
mov
lock
mov
adc
push
shlb
loopne
push
das
orl
mov
push
mov
hlt
cmp
loop
mov
mov
hlt
fs
push
mov
push
fistpll
sbb
mov
rcrl
fisubl
repnz
adc
into
pop
xchg
sbbb
in
xor
lods
add
sbb
loop
jg
dec
test
test
xor
mov
out
sbb
pusha
inc
dec
shrb
pusha
jmp
pop
mov
mov
inc
jns
pop
int
test
jo
dec
fcoms
call
mov
es
fcmovnu
leave
js
xlat
cmp
pop
enter
adc
jns
sbb
sbb
mov
jns
dec
xchg
cwtl
stc
and
les
stc
inc
pop
loope
push
dec
push
fidivrs
pushf
and
push
cltd
rcrl
jne
dec
push
sbbb
mov
adc
cwtl
pop
pop
rcl
sbb
adc
adc
mov
rclb
xor
mov
imul
int
jne
cli
adc
push
push
test
pop
lea
inc
insb
enter
addr16
sarl
cmp
xor
icebp
ret
and
jno
sub
adc
adc
adc
fwait
lcall
fldenv
pop
lret
testl
scas
sbb
out
cmp
cmpsb
cli
cli
andl
cli
jae
cli
push
or
arpl
sub
mov
js
and
ret
cmp
pop
insb
xor
arpl
cmp
cmp
mul
inc
cmp
cli
mov
cmp
mov
cs
test
je
adc
imul
or
pusha
lock
add
sbb
or
pusha
pusha
imul
mov
fisubs
fstps
ds
leave
test
dec
sbb
sarb
pop
jge
jnp
mov
push
fldt
push
sbb
pusha
lock
sub
xor
leave
iret
jecxz
sbb
pop
push
or
ljmp
mov
cmp
notl
lahf
adc
lret
cmp
jne
sub
cli
pop
cmp
cmp
in
xchg
nop
dec
jp
or
jns
cmp
fidivrl
jo
sbb
test
dec
arpl
and
mov
xor
jae
pop
cmp
mov
subb
sbb
imul
jnp
jmp
mov
dec
outsb
cs
jo
mov
repnz
mov
push
cmpsb
and
mov
and
add
jmp
jb
and
cmp
push
insb
andb
and
mov
rcrb
shrb
push
jns
mov
or
mov
cmp
mov
shrb
sbb
or
mov
mov
ds
inc
pusha
pop
fwait
cmp
pop
dec
iret
dec
cltd
cmp
sarb
jmp
cmpb
and
jmp
and
and
je
fisubl
push
jg
ds
cmp
repnz
mov
cmp
inc
adc
nop
jmp
mov
mov
sub
bound
jbe
scas
adc
loope
lret
test
push
mov
adc
int
in
inc
xchg
cmp
jl
iret
sbb
mov
cmpsl
xchg
push
pop
loopne
mov
and
fwait
pop
jge
jb
mov
ds
adc
movsl
and
xchg
mov
popa
xor
mov
xchg
mov
in
xchg
in
sub
lds
je
and
pop
push
lods
dec
jne
push
fmulp
sub
xchg
and
out
add
addr16
sbb
mov
outsb
mov
cmp
lock
mov
lods
sub
leave
add
mov
nop
xor
lret
jbe
cld
fisttpll
jns
aad
lods
and
fistpll
mov
insl
cmp
repz
mov
insb
mov
lods
add
cmp
mov
jb
mov
pop
add
pop
sub
mov
mov
push
add
adc
push
sub
in
repnz
sbb
fstpl
push
inc
sbb
or
pop
push
or
lea
add
and
pop
and
jle
enter
sbb
mov
aaa
lahf
adc
out
jg
and
icebp
shll
mov
jne
xchg
cld
call
lods
into
add
inc
push
daa
shrl
lret
inc
mov
pop
stc
jmp
mov
test
push
out
adc
repz
xor
daa
fcmovnbe
lret
cmp
jb
std
repz
dec
xor
jbe
pop
jbe
sarl
xchg
xor
mov
sahf
lds
mov
inc
pop
push
fsub
dec
push
popf
dec
ret
movd
enter
sbb
popf
jl
mov
pushf
hlt
xor
cmpsl
cmp
stos
cwtl
and
sti
lahf
inc
aad
or
inc
push
in
cmp
in
push
ds
leave
mov
pop
sbb
dec
or
mov
out
or
mov
sbb
lods
and
ret
inc
xor
shll
add
inc
rcl
fdiv
or
sub
jno
sbb
hlt
mov
jp
mov
popf
pusha
mov
data16
mov
jp
jl
popf
xlat
sahf
jle
xchg
repnz
sub
popf
pushf
cmp
and
cmp
inc
jne
lret
sub
push
nop
sub
incb
int
xor
sub
mov
cmp
stos
xor
stos
negb
sbb
cmpsb
mov
mov
jne
sbb
jp
mov
and
pop
mov
ja
loope
cmp
lret
sub
xchg
mov
add
lahf
movsl
lock
dec
dec
lods
dec
mov
jecxz
pop
cmp
int
sub
adc
movsl
mov
dec
sub
leave
jle
outsb
and
lods
inc
cmp
loop
pop
mov
movl
mov
xor
stos
ret
pop
sbb
shlb
and
push
mov
xor
xchg
ret
fs
sub
inc
xchg
push
std
cmpl
mov
fstpt
je
adc
cwtl
pop
dec
dec
inc
sbb
and
in
aaa
ljmp
inc
hlt
adc
movsl
test
mov
adc
push
stc
sbb
mov
push
lcall
gs
orb
je
mov
lock
xor
fdiv
jnp
js
pushl
push
push
mov
or
shl
inc
dec
jp
pop
movsb
sub
aaa
add
pop
mov
sbb
int3
ja
popa
add
pop
je
cwtl
mov
xor
sbb
hlt
sub
jle
mov
xchg
sbb
imul
std
jl
das
add
outsb
test
mov
and
pop
and
imul
mov
test
inc
gs
mov
int3
sbb
lea
cmp
mov
mov
add
cs
xor
aas
mov
lods
int
push
cmp
pop
sbb
mov
loopne
insl
jbe
mov
adc
ds
xchg
aaa
loopne
push
shr
push
mov
pop
cwtl
add
mov
rcr
pop
pop
xor
cmp
dec
mov
push
jnp
ja
xchg
adc
ljmp
adc
pop
xor
out
call
mov
divl
call
inc
scas
pop
jp
mov
popa
lret
xchg
xor
mov
xchg
icebp
adc
push
pop
shlb
pop
lods
pusha
insb
mov
mov
das
add
pushf
insl
jne
in
aad
test
bound
xlat
ret
jbe
mov
xchg
push
loope
lods
fwait
icebp
pushf
insl
push
inc
xor
cmp
jp
xchg
xchg
sbb
push
add
and
inc
jg
sbb
lods
out
xorl
enter
mov
mov
or
les
push
sub
mov
scas
pusha
mov
cmc
lock
jecxz
mov
xchg
sub
adc
add
inc
imul
sub
cmpsl
or
jne
fiaddl
jge
test
les
into
sbb
push
xor
push
add
sub
mov
scas
repz
sahf
ss
lahf
push
xchg
mov
sub
add
sarb
mov
andb
xchg
xchg
xor
dec
xchg
stc
adc
mov
enter
dec
popa
push
cmp
mov
lock
sub
stos
pushf
push
in
add
pop
mov
popa
adc
cmp
cmovp
xor
mov
push
mov
and
add
adc
nop
lret
sub
data16
xchg
push
push
cmp
out
into
inc
sub
sub
sbb
mov
push
adc
sub
push
or
pop
hlt
mov
in
cli
and
inc
push
xchg
insb
movsb
icebp
jle
dec
xor
push
movsl
dec
scas
test
sub
pop
les
iret
mov
cmp
fcoms
jg
inc
inc
dec
test
scas
pushf
fidivrl
mov
mul
loopne
pop
ret
int
and
push
lret
and
jbe
jno
in
stc
jbe
or
fisubl
inc
ficompl
mov
mov
pop
jne
inc
push
mov
cmp
push
das
lods
clc
pop
mov
aaa
les
mov
mov
jnp
mov
lcall
mov
mov
das
pop
scas
in
push
hlt
inc
in
aad
clc
mov
cmp
dec
insl
sub
mov
aaa
subl
mov
cmc
sub
test
cs
and
aas
sub
push
cld
push
into
jmp
icebp
dec
das
and
and
shlb
xor
jae
lds
ljmp
pusha
nop
icebp
movsl
es
sbb
pusha
cmc
cmp
inc
jmp
loope
incl
das
ror
jno
or
jo
pusha
cmp
add
jp
xchg
cld
adc
sub
mov
pop
arpl
xchg
push
jge
repnz
lret
movsl
xorl
fidivrs
xor
cs
pop
and
stos
aad
sub
mov
xchg
imul
fstpt
mov
jecxz
repz
lock
xor
adc
cli
mov
sub
enter
add
popa
call
popa
ds
leave
push
jle
push
jl
rcrl
sbb
fimull
mov
add
sbb
rcl
ljmp
sub
mov
or
js
xchg
mov
js
mov
stc
inc
or
mov
adc
jmp
jbe
mov
cmp
xor
mov
icebp
mov
fcmovnb
inc
and
jg
mov
imul
scas
cmp
pop
mov
call
scas
mov
jmp
mov
daa
cwtl
lahf
outsb
sbb
sarb
out
push
xor
xchg
in
cmpsb
jb
mov
lods
pop
iret
mov
mov
jl
repz
push
test
inc
mov
xchg
and
push
stos
adc
push
xchg
lea
dec
inc
mov
jnp
mov
pop
mov
fstp
and
mov
mov
mov
jnp
stc
and
push
shlb
mov
sbb
sarl
mov
das
xchg
mov
xchg
fwait
lods
mov
sbb
mov
pop
mov
dec
push
cwtl
mov
fs
lret
and
push
pop
pop
imul
cs
mov
pop
sbb
pop
lods
fnstcw
dec
xchg
mov
sub
jle
in
push
push
xchg
fstpl
mov
fdivrs
mov
cmpsl
jmp
cmpsl
jp
mov
andps
insl
jbe
pop
lret
imul
xlat
repz
ds
sar
icebp
mov
loope
out
sub
sub
dec
cmp
sbb
out
sbb
inc
aas
push
xchg
push
adc
add
adc
push
das
mov
jecxz
mov
shl
cli
mov
cmp
popa
mov
mov
inc
fsubs
dec
test
inc
cli
std
faddl
inc
je
insl
mov
inc
neg
mov
xor
sbb
push
mov
mov
cs
js
push
scas
sbb
lods
sbb
out
add
pop
or
mov
jl
jmp
sbb
sbb
movb
pop
popl
inc
es
ja
incl
rcrb
cmp
out
push
loop
sbb
adc
dec
pop
dec
xchg
cli
mov
sbb
sarl
cmp
pop
cltd
and
ljmp
call
jbe
and
push
clc
xchg
mov
std
xor
leave
bound
fdivrl
mov
sub
test
adc
push
inc
xchg
ds
cwtl
add
mov
dec
xor
cmp
mov
and
mov
pop
les
test
hlt
or
fildl
and
repnz
xchg
pop
out
nop
popa
xor
jl
insb
add
in
or
xchg
sub
xor
test
pop
hlt
and
sarb
push
test
adc
push
lea
ret
aam
cmp
aaa
enter
in
loopne
shl
and
pop
and
fbstp
fisubs
in
lea
lock
pop
and
int3
xor
lock
inc
fbld
int3
stos
pop
hlt
sub
addr16
sub
pushf
mov
stos
inc
pop
mov
cmp
fisubrl
push
sbb
clc
jno
popa
mov
mov
adc
in
adc
xchg
push
sub
loop
dec
scas
mov
data16
lock
lret
or
into
pop
filds
dec
pushf
dec
and
push
jl
jae
pushf
pop
fwait
mov
jae
in
xchg
rcr
test
lcall
leave
loop
sahf
adc
int
dec
add
push
test
cmp
mov
pop
fnsave
fiaddl
cwtl
nop
pop
pop
jp
popf
inc
lods
jo
int
xor
jmp
xchg
and
xchg
les
out
inc
mov
pop
mov
adc
shll
mov
mov
inc
push
mulb
lahf
mov
rorl
mov
mov
scas
and
lret
add
xor
sbb
mov
jno
jbe
ret
add
fwait
cli
stc
cmpsl
sbb
pop
jbe
sub
sub
mov
mov
dec
mov
mov
shll
pusha
orl
lods
fildl
xchg
mov
clc
pop
jnp
xchg
adc
aam
xchg
mov
dec
cmp
sub
jle
inc
and
mov
pusha
cwtl
jb
mov
jns
icebp
imul
adc
mov
rorb
jg
or
in
test
test
pushl
rcll
pop
xor
mov
xchg
jne
jp
std
mov
fnsave
sbb
jno
jno
es
inc
inc
ljmp
mov
rolb
push
jecxz
scas
push
sub
pop
sub
cmp
or
jo
pop
sbb
les
jmp
stc
lcall
addr16
mov
fimull
sub
mov
inc
pop
aaa
mov
cmp
aam
fiaddl
xor
dec
fsub
dec
pop
pop
or
jb
and
popa
push
arpl
xor
xchg
jge
test
lret
stos
mov
stc
enter
mov
insl
aaa
mov
inc
jge
jg
sbb
inc
sbb
mov
sarl
fisttpl
cmp
push
add
aam
pop
adc
mov
repnz
pop
push
and
repz
pop
cmpsb
push
fs
lock
repnz
leave
shll
xor
xchg
mov
ret
fldenv
mov
enter
mov
dec
push
jae
dec
cli
inc
and
adc
rcrb
bndldx
jle
and
pop
stc
rcl
pop
add
push
hlt
jecxz
xchg
jno
out
mov
inc
jl
lcall
xor
or
xchg
int3
orb
lods
test
icebp
mov
incl
movsl
jl
insl
add
mov
add
clc
adc
and
aad
inc
push
mov
and
test
and
pop
push
cwtl
mov
mov
mov
int
push
inc
nop
rep
sbbl
pop
adc
jge
insb
mov
repnz
push
push
leave
mov
lcall
repnz
sbb
mov
mov
dec
pop
in
xrelease
loopne
mov
pop
int
pop
push
insl
pshufw
inc
icebp
loope
add
mov
dec
pop
ret
mov
sbb
jbe
xor
mov
sub
loop
and
mov
and
xor
popa
or
ret
inc
sub
cmp
jb
imul
fisubrs
cmp
push
sub
dec
xor
inc
jne
cmp
mov
mov
pop
xor
test
idivb
cmc
hlt
adc
and
push
push
jecxz
sbb
sarl
ss
lret
and
and
jne,pt
lret
test
fstpt
jbe
mov
inc
jb
clc
dec
jbe
lret
cmc
dec
mov
cmpsl
ss
pop
cmp
enter
fistpll
lret
adc
sbb
mov
jmp
mov
pop
repz
pop
xor
ljmp
sti
jmp
and
jmp
popf
enter
jp,pt
and
movsl
jmp
adc
popf
jl
adc
xor
pop
lds
into
mov
xchg
add
jle
nopl
fldenv
cmpsl
or
xchg
stos
pop
inc
sbb
mov
xor
and
mov
pop
dec
mov
fcmovnu
pop
stc
mov
adc
pop
fs
jae
push
dec
hlt
xor
jbe
push
pop
xor
cld
andb
aaa
jle
xchg
data16
pop
mov
push
add
pop
jmp
cli
sahf
sbb
insb
clc
mov
mov
sti
mov
loope
mov
sub
jo
sbb
call
add
xchg
int3
lds
cmpsb
cmc
mov
dec
cmp
cmp
mov
or
fstpt
testl
andb
mov
sbb
jbe
lcall
mov
adc
mov
sub
pop
fmull
ds
xor
dec
dec
imul
inc
test
inc
nop
leave
add
test
sbbl
and
mov
and
es
scas
fsub
push
mov
cs
fldt
jge
inc
pop
int3
sbbl
fidivrl
push
ss
adc
pusha
fs
or
jl
or
mov
sbb
mov
mov
push
sub
lods
xchg
jo
add
push
adc
cmp
adc
mov
mov
loopne
ds
xor
lds
cmp
mov
add
pop
fstpt
imul
cli
aam
fs
fisttpll
add
pop
dec
stos
negl
mov
inc
mov
add
ror
mov
imul
scas
adc
xor
jmp
lds
or
faddl
push
lock
inc
popf
inc
adc
mov
out
cli
enter
jae
mov
nop
cs
cmp
sarl
loop
xchg
jne
sbb
mov
repz
jnp
dec
inc
popa
or
mov
imul
fisubl
jp
jle
mov
mov
add
outsb
fistpl
push
cmp
pop
mov
std
bound
mov
pusha
and
aad
cmp
mov
das
les
lea
jnp
dec
push
or
imul
movsb
es
cmp
mov
fstpl
sahf
aaa
jmp
dec
daa
fcompl
push
push
ficomps
gs
jmp
mov
pop
mov
sub
es
int3
ljmp
jmp
nop
shll
add
call
push
into
in
pop
loop
pop
mov
jnp,pt
test
push
adc
test
mov
imul
and
cmp
and
bound
mov
push
subb
sarl
xchg
mov
outsl
xor
int3
loop
jecxz
sti
ds
out
mov
dec
insl
cmp
cmp
lock
cwtl
ss
jp
mov
jle
cmp
repnz
or
pusha
cmp
push
jne
add
inc
mov
sahf
mov
mov
icebp
cmpsb
cmp
adc
adc
dec
mov
out
ljmp
pop
fdivp
jl
push
movsb
jne
ljmp
rcr
out
and
inc
inc
rorb
lea
fldcw
in
adcl
jp
pushf
push
add
test
insl
stos
lds
fsubp
lods
cwtl
mov
pop
lret
and
sbb
out
mov
sbb
jecxz
aam
fcmovne
adc
xchg
push
xchg
hlt
imul
cltd
mov
adc
and
inc
pop
outsb
jne
xchg
pop
pusha
mov
shrb
bound
pop
das
cmpsl
cmp
cmove
xchg
inc
mov
lahf
hlt
xor
adc
mov
jbe
ds
fs
int3
xor
jns
inc
rcrb
loopne
outsb
xchg
test
mov
adc
fists
and
in
out
and
adc
xchg
outsb
aas
push
data16
dec
mov
sbb
mov
gs
fldt
daa
lea
iret
jns
xchg
iret
mov
aad
push
inc
pop
push
inc
jge
mov
pop
jns
je
adc
cmp
aad
push
adcb
and
insb
ror
lcall
mov
test
mov
adc
inc
jae
pushf
pop
sbb
jnp
push
push
and
jb
pop
xor
in
dec
inc
das
and
and
jbe
sbb
mov
or
lret
push
icebp
mov
jae
cmp
cmp
mov
popa
cmp
test
dec
mov
lods
mov
ret
jge
stc
xor
jg
push
sbb
sbb
pop
sbb
mov
sub
sbb
jb
sub
mov
inc
pop
incl
and
inc
xchg
adcl
ret
sub
sbb
cmp
sub
pop
sahf
call
jl
jg
in
push
and
je
cmpsl
loope
inc
hlt
add
mov
stos
pop
sarl
testb
push
jmp
sbb
cmp
adc
cltd
mov
jg
daa
and
lock
sarb
xchg
fcoml
adc
cltd
inc
jge
inc
and
and
fisttpll
inc
mov
cmc
jo
imul
lods
xor
sahf
jnp
aaa
xchg
mov
jae
fnsave
xchg
mov
mov
sahf
or
sbb
xor
and
cmp
ljmp
aaa
subl
push
mov
pop
mov
inc
mov
jb
sbb
push
mov
sbb
xchg
add
mov
outsb
mov
imul
mov
dec
aas
and
pop
lcall
dec
in
das
pusha
jno
xchg
cmp
xor
testl
cli
fistl
mov
mov
sub
xlat
stos
dec
push
jecxz,pn
mov
fistpl
push
and
cltd
inc
xor
xchg
out
jle
xchg
jg
jo
scas
aas
imul
orb
mov
cmp
lods
mov
daa
mov
ret
lret
mov
push
mov
sub
jmp
enter
es
in
cmpsl
mov
outsl
clc
jae
and
std
push
mov
add
or
cmp
cmp
insl
loope
test
jbe
ss
insl
mov
movsl
jmp
sbb
int3
jmp
pop
jl
and
jle
mov
sbb
pop
fisubs
mov
pop
outsb
testb
rorl
lods
aam
sub
daa
icebp
sar
and
push
xor
mov
sub
add
xchg
inc
repz
enter
int3
daa
fcmovnbe
jp
aas
ret
add
mov
mov
sarb
inc
xor
mov
test
loop
in
call
inc
push
hlt
mov
mov
test
nop
mov
mov
dec
test
aaa
jge
push
inc
mov
or
gs
adc
cmp
pop
adc
mov
and
jp
mov
sbb
bound
in
sub
loopne
les
sahf
pop
jnp
mov
and
std
pusha
ret
incb
mov
lods
das
pop
push
mov
pop
push
push
xchg
xorl
xor
mov
sub
pop
mov
push
xchg
movl
into
push
mov
in
xorl
dec
xchg
jp
testb
inc
push
pop
out
xchg
jecxz
pop
xorl
cmp
in
lods
clc
dec
adc
pop
jno
cmp
testb
cmp
mov
adc
cmpb
cmp
in
mov
idiv
ds
sahf
out
mov
push
xorb
gs
lcall
xchg
add
add
fisttps
addr16
ds
push
stos
mov
pop
scas
jp
mov
pop
add
cmp
mov
les
stc
mov
push
pop
das
ficoml
mov
cld
inc
aaa
les
jo
mov
or
and
xor
jl
pop
xor
icebp
pop
mov
push
mov
inc
adc
cmc
or
push
mov
cmp
xchg
xor
idivb
test
mov
test
sub
sti
cmpl
and
clc
fcmovnb
push
push
stos
leave
cmp
loopne
dec
jb
jnp
adc
mov
jne
dec
test
or
mov
scas
js
aad
inc
jb
jle
cltd
adc
lcall
cmp
int
stos
test
sub
inc
pop
lods
stc
repz
and
mov
cwtl
mov
ja
sub
das
push
dec
pop
adcl
cmp
adc
aaa
and
and
pop
into
push
and
mov
sub
adcl
mov
int3
ja
sub
nop
and
imul
sbb
mov
ss
push
jl
ja
pusha
jge
mov
inc
loope
out
add
imul
pop
fs
and
insl
outsl
leave
cmpl
push
popf
insb
sub
cltd
fildll
dec
xor
jle
loop
mov
gs
mov
mov
insb
and
lcall
les
stc
ljmp
mov
fstps
leave
hlt
cs
scas
enter
shrd
divb
xchg
arpl
iret
add
dec
lods
les
hlt
pop
mov
movl
mov
inc
sub
dec
inc
les
dec
shlb
cmp
pop
mov
loope
les
mov
xor
lock
fmull
cmp
pop
stos
insb
xchg
jp
add
pop
inc
dec
and
movsl
sahf
dec
adc
cmp
xchg
fstpt
iret
and
pop
clc
dec
xchg
test
dec
rorl
jmp
adc
jecxz
int3
rcll
xor
pop
mov
xchg
inc
arpl
mov
add
add
xchg
xchg
inc
xor
xchg
inc
adc
sub
cmp
jns
pusha
pop
adc
fimuls
sarb
xlat
dec
repnz
push
mov
jl
imul
jnp
sub
and
mov
lock
je
icebp
and
sbb
in
or
push
sub
ds
sahf
je
imul
out
push
cmp
xor
inc
enter
push
push
dec
sub
std
dec
aad
pop
pop
pop
sahf
clc
cltd
mov
cmpsl
mov
ja
popf
cli
divb
pop
push
sbb
dec
and
pop
mov
mov
cmp
adc
mov
sbb
mov
jmp
popf
xor
lcall
and
aam
add
popa
fcomp
aaa
xor
in
cli
add
dec
mov
jno
lcall
sub
xor
movsb
mov
or
or
sub
cmp
pop
movsb
xor
loope
jle
insl
sbb
xchg
pushf
ljmp
inc
sbb
out
push
cwtl
movsl
xor
pop
ds
cwtl
mov
shll
dec
jb
push
aaa
xchg
sbb
dec
popf
cltd
sbb
ret
es
pushf
dec
jnp
cmp
out
xchg
pushf
into
mov
sub
out
jae
and
mov
int
and
cmp
or
fisubs
xor
inc
mov
push
adc
cmp
push
sbb
jae
fcmovnbe
xor
cmp
mov
aad
sub
popa
outsl
xchg
or
jnp
addb
inc
xchg
in
imul
mov
fabs
cmpsb
out
xor
sub
imul
gs
call
lret
add
jle
enter
push
dec
rdpmc
jmp
inc
lods
inc
adc
lea
lods
paddw
dec
cmp
mov
jg
sbb
mov
ret
shrl
adc
cmp
xor
sub
jmp
lret
icebp
loop
icebp
pushw
pusha
jo
xor
pusha
mov
sbb
cmp
dec
out
xor
xchg
mov
mov
mov
mov
incl
add
loop
enter
dec
dec
jle
mov
and
sub
mov
ljmp
mov
lock
cmp
jne
mov
repz
xor
rcr
sub
loop
and
rolb
dec
sarl
popl
aad
push
sbb
adc
lret
or
lods
add
jno
rcl
mov
call
and
ffree
xchg
push
insb
push
cld
dec
mov
fwait
imul
fdiv
lea
pusha
andl
lcall
add
pop
test
lea
jne
xor
and
jl
fwait
pushf
fisttpl
and
lods
ret
mul
lret
lcall
pop
sub
mov
test
mov
cmp
inc
cmc
gs
sub
dec
inc
out
and
mov
inc
mov
push
cmp
fs
es
fwait
push
push
jns
out
jge
inc
stos
jl
repnz
popa
out
and
add
ret
push
aaa
mov
and
test
mov
jnp
rolb
push
jbe
push
mov
dec
cmp
fdivs
sub
xlat
fidivl
fnstcw
sub
pushf
pop
and
aam
mov
mov
out
in
pop
adc
pop
pop
ret
xor
cmp
jnp
lods
adc
pop
mov
cs
gs
cmp
push
mov
or
jno
and
xchg
sbbb
or
and
jge
in
dec
sub
jecxz
in
in
mov
sub
push
aas
jnp
movsl
adc
cld
arpl
mov
enter
shrb
jne
mov
add
jmp
jnp
fsubs
adc
lcall
add
xorl
mov
pusha
sbb
in
loopne
mov
leave
mov
or
lods
cmp
rcr
sbb
push
fists
cltd
fimuls
rorl
push
push
addr16
data16
push
js
pusha
pop
pop
dec
jb
xchg
ret
les
scas
arpl
nop
push
jns
jle
inc
neg
push
and
pop
jl
mov
scas
xchg
mov
mov
repnz
sub
das
pop
sub
outsl
repnz
jmp
dec
jnp
std
adc
pop
push
aas
push
leave
ja
cmp
jg
dec
mov
mov
cmp
sbb
mov
outsl
sysenter
shll
fs
popf
inc
jnp
adc
ss
push
insb
xor
cmp
clc
push
jnp
fdivrp
leave
adc
mov
cmp
xchg
stos
sbb
push
or
ds
cli
enter
inc
cld
jge
sbb
decl
nop
insb
mov
jno
push
inc
pop
sbb
dec
adc
add
cmpsb
dec
adc
leave
cmp
mov
int3
mov
sbbl
mov
jp
pusha
jl
cwtl
out
fists
test
push
aad
cmp
pop
pop
push
jnp
dec
xor
dec
add
jb
inc
mov
jae
xor
add
stos
imul
mov
ficoml
xlat
sbb
out
inc
sbb
loop
mov
cltd
xor
pop
pop
push
hlt
xchg
ficompl
mov
fidivrl
call
or
add
sbb
xor
gs
fisubl
cmp
dec
jnp
jo
nop
sti
ja
inc
xor
jmp
sub
push
dec
pop
cmpsb
and
and
push
loope
fiaddl
xchg
inc
aam
fstps
and
push
mov
or
aaa
push
ror
popf
add
and
dec
cmp
mov
pop
ficoml
and
pop
outsb
arpl
shlb
nop
fidivrs
and
mov
pop
push
cmp
mov
add
adc
inc
add
xchg
es
add
and
leave
inc
pop
fs
shl
in
adc
fstl
fimull
movsl
fisttpl
out
jno
hlt
jp
pop
cmpsb
movsb
scas
and
cmpsb
fisubs
lret
jge
cli
sarb
inc
adc
insl
pop
xchg
mov
dec
test
push
cmp
inc
push
in
movsb
fucomi
jmp
outsb
in
mov
mov
inc
jno
and
jg
cltd
push
loop
fisubrs
mov
or
push
add
xchg
iret
add
push
lret
push
fidivs
mov
leave
push
jmp
cmp
inc
add
mov
loop
and
repnz
outsb
xor
push
filds
mov
testl
inc
push
std
lret
ficoms
inc
mov
jo
ret
inc
ja
and
mov
dec
sti
jbe
dec
into
and
sbb
fimuls
out
jne
mov
stos
push
or
dec
jmp
mov
dec
xchg
sub
loope
sub
shll
sbb
inc
mov
insb
jbe
inc
push
mov
and
loopne
pop
or
addr16
fcom
pop
call
lods
cwtl
cmp
imul
loope
in
pop
in
push
test
mov
mull
mov
inc
lret
jl
lock
pop
add
mov
cli
sub
movsb
and
and
inc
pusha
jb
fisubl
lods
jl
dec
and
cmp
inc
mov
fsubl
jle
mov
fimuls
call
push
rorb
or
push
call
fisubl
pop
dec
pop
dec
call
movsb
pop
mov
jbe
ljmp
shr
mulb
les
jmp
ret
sub
outsl
fisubrl
mov
xchg
jbe
sbb
push
mov
insb
mov
mov
xchg
inc
frstor
inc
pusha
mov
mov
and
inc
fists
and
arpl
div
stc
andb
pop
data16
scas
mov
xor
je
pop
mov
inc
push
and
ds
lret
push
jbe
js
jmp
cmpsb
mov
outsb
mov
std
inc
mov
mov
inc
jl
loopne
in
rclb
sub
into
dec
adc
cs
stc
push
or
sub
push
push
lock
lcall
push
and
repnz
js
cltd
jns
mov
mov
sub
xchg
sub
and
sbb
inc
inc
imul
mov
push
and
sbb
fidivrs
out
adc
in
jp
add
shl
je
sbb
mov
pop
popa
or
sub
inc
jl
jle
jge
pushf
and
and
in
mov
dec
jo
jge
gs
xchg
dec
pop
stos
xor
mov
inc
gs
dec
mov
lahf
xor
pop
and
ja
mov
shll
inc
and
pop
pop
xchg
mov
stc
adc
lods
mov
xlat
int
lahf
push
mov
pop
outsb
sub
lcall
add
fidivrs
cmpsl
pop
dec
fwait
push
cmp
lahf
icebp
sub
jle
jno
cld
sarb
test
xchg
push
and
xlat
sbb
cli
shll
inc
decb
mov
jmp
jmp
push
outsb
or
mov
mov
ljmp
jo
lock
insb
imul
ret
popa
sbb
mov
push
lock
or
mov
loop
int3
xchg
dec
mov
outsl
test
cmp
movsl
pop
repnz
pop
cmpsb
pop
std
movsl
fildl
or
xchg
sbb
jge
cli
and
xchg
sbb
aas
insl
sub
xor
mov
shlb
jno
jl
test
pusha
icebp
inc
and
and
dec
jbe
mov
and
pop
inc
enter
add
movsl
icebp
fwait
ret
lcall
jns
fbld
and
pop
sahf
jns
jno
arpl
xor
add
rolb
mov
arpl
jbe
fisubl
push
lea
movsl
leave
hlt
and
sbb
lcall
test
adc
arpl
add
xor
sahf
jns
adcl
mov
push
call
and
ret
insb
jb
push
fidivl
gs
jg
jo
push
mov
clc
sbb
push
mov
sbb
addl
test
cmp
jecxz
cmc
sarb
cmp
es
and
pop
adc
std
push
enter
mov
mov
mov
sarl
jge
mov
dec
insb
and
addl
pop
mov
ljmp
aaa
push
stc
push
dec
loope
cmp
cmpsb
add
inc
xchg
mov
cmp
in
fsubp
push
mov
fiaddl
scas
andps
and
adc
cmp
or
cmp
ss
and
shrl
jb
and
mov
insb
inc
imul
mov
sbb
lea
inc
dec
int
fs
xchg
int3
xchg
mov
xchg
icebp
cmp
cwtl
lcall
rorb
push
pause
push
fistpll
cmp
mov
pusha
adc
movsl
cmp
jle
push
cmp
dec
mov
xchg
dec
cs
repz
pushf
add
cli
pop
inc
jb
jns
xchg
and
shlb
jp
adc
or
sub
dec
gs
xchg
adc
out
dec
xchg
pop
out
or
jae
mov
push
lret
sub
clc
mov
rcll
add
xchg
lret
adc
add
sub
mov
rol
lahf
bound
ror
leave
or
push
dec
out
mov
pusha
jnp
mov
push
jmp
cmp
inc
dec
jne
sub
mov
sbb
mov
mov
shlb
mov
aas
jb
rolb
clc
sub
rorl
lcall
movsl
add
push
fbstp
mov
pushl
pop
pusha
pop
push
jnp
stc
cli
cmp
cli
test
fisubrl
ffreep
cmp
nop
sbb
push
xchg
fistpll
cmp
mov
cmovae
mov
pop
cmpsl
stos
jmp
mov
bound
daa
inc
fistl
dec
fwait
push
ficompl
and
and
push
add
or
dec
outsl
jne
dec
jno
mov
jnp
pop
int3
xorb
pop
pop
imul
push
lret
cmp
dec
cmp
clc
sbb
rcr
xchg
push
popf
push
or
add
xor
fsubs
ljmp
jb
movsb
and
pop
ss
pop
lea
dec
sub
adc
test
push
ja
xor
out
cmp
pop
lret
mov
test
sbb
fisubrl
mov
cmp
gs
popa
pop
in
lcall
jbe
cmp
leave
les
inc
cmp
push
call
sbb
int
lret
bound
outsl
stos
les
adc
outsb
lcall
push
insb
mov
movsb
cmp
andl
mov
sbbb
add
lret
sti
repnz
nop
and
and
enter
cmp
pusha
dec
sub
push
lret
mov
fnstcw
pushf
aad
sti
inc
mov
insb
lock
push
pop
fnstcw
pop
fwait
pop
outsb
and
mov
inc
pop
cltd
fstpl
push
inc
fisttps
xchg
push
imul
and
mov
negl
push
imul
rol
or
xchg
pop
cli
inc
and
fisubl
mov
inc
test
sbb
lcall
add
and
scas
add
rolb
lret
jo
mov
jge
xchg
push
loop
movsb
addr16
lahf
pop
ret
cmp
loop
inc
pop
mov
xchg
xchg
pop
push
lret
outsl
dec
lock
ljmp
mov
and
mov
out
add
and
push
fildl
adc
sbb
push
pushf
mov
adc
loopnew
jp
inc
mov
dec
push
push
cmpsb
pop
popa
and
arpl
ljmp
clc
xlat
js
mov
jno
mov
sbb
cmpsl
push
fwait
mov
ds
js
push
add
cltd
jno
and
mov
and
xor
mov
mov
xchg
mov
adc
mov
lret
dec
add
adc
sbb
outsl
jb
test
xor
cltd
xchg
mov
mov
sbb
pop
xchg
cmp
repz
mov
mov
sub
jb
hlt
call
mov
cmp
shlb
adc
mov
pop
sbb
push
jns
insb
xor
push
call
dec
insb
dec
call
test
lcall
mov
mov
icebp
mov
jb
cmp
ds
rcl
sub
jns
xchg
rorl
and
jb
arpl
mov
es
stos
mov
scas
pop
jbe
dec
lret
and
stc
jae
mov
mov
mov
es
xchg
dec
sbb
out
jle
inc
and
pop
mov
xlat
mov
int3
lret
into
js
add
ss
in
insb
js
call
mov
jecxz
and
or
repz
ljmp
idivl
cmp
hlt
mov
and
cmpl
mov
aad
dec
mov
jno
xor
push
adc
jge
je
jp
mov
scas
in
out
cmc
and
pop
push
pop
int
movsb
pop
loopne
popa
ljmp
sub
xorl
adc
sub
and
inc
rcll
xorl
mov
test
xchg
pop
add
xor
fbld
mov
adc
cmp
push
xchg
adc
cltd
dec
pusha
fdivrl
cli
push
and
add
push
mov
lcall
mov
gs
cmpl
fstpl
dec
pop
lea
popf
jmp
fs
dec
jmp
fs
xor
sahf
movsl
lcall
cmc
pop
or
pusha
test
cmpsb
ljmp
scas
stc
in
outsb
movsb
outsb
call
dec
int3
mov
jp
sub
cs
sub
xor
loop
gs
push
nop
ficoml
adc
and
jp
and
leave
jno
pop
stc
adc
shrb
mov
sbb
push
stc
jl
adc
lea
shl
lret
xchg
and
xchg
sti
mov
cmp
mov
sbb
push
cltd
dec
push
mov
pop
movsb
cmp
lcall
iret
lcall
dec
and
xchg
insl
add
xchg
pop
out
filds
and
lret
or
cmpsb
sahf
adc
cmpl
and
inc
mov
pusha
out
popa
adc
adc
sub
and
mov
repz
mov
mov
repnz
xchg
lock
and
lret
sub
dec
mov
stc
pop
rolb
jl
in
aad
cmp
inc
leave
mov
cld
lret
sub
js
pop
mov
and
lods
stos
imul
rclb
loopne
mov
lret
mov
into
cmp
fwait
cmpsb
dec
in
add
inc
mov
out
sahf
adc
mov
inc
inc
cli
mov
and
test
jp
fcmovnb
rcl
and
dec
push
fnstcw
push
outsb
cmpl
mov
fxch
push
mov
ficoml
push
mov
test
fldl
je
mov
pop
jb
or
inc
mov
cli
mov
lcall
fisttpl
add
std
ljmp
or
lgs
xor
stc
inc
sbb
lods
aas
cld
daa
js
push
mov
les
and
fistpl
lret
mov
test
xor
mov
sbb
adc
ljmp
sbb
and
jecxz
jnp
cli
jp
mov
sbb
pop
or
or
push
sub
call
sbb
sbbl
fucomi
jg
cmp
push
insb
xchg
cmpsl
jb
sbb
jmp
shll
mov
stos
lea
mov
pusha
cmp
fs
lods
ret
jo
and
jge
rcrl
cmpsl
ja
jp
negl
push
add
shrb
mov
scas
repnz
sub
imul
enter
mov
add
imul
lahf
mov
ljmp
pop
icebp
repnz
cmp
sub
inc
insb
and
lret
icebp
lods
add
sahf
leave
jno
cmp
push
call
pop
jb
push
ljmp
cli
push
ljmp
mov
xchg
cmp
rolb
xchg
lret
sub
mov
dec
in
and
add
inc
jnp
leave
in
roll
sbb
jo
cmp
pop
jno
cmp
add
fbstp
ficoml
or
xchg
mov
inc
add
mov
cmp
fmul
adc
lea
imul
push
movsl
lcall
dec
inc
jne
jae
sub
and
jnp
xchg
lock
and
jge
xor
ss
mov
pop
add
stc
int3
jns
cmpsb
mov
xchg
mov
dec
pop
clc
fistps
adc
loopne
loopne
and
sbb
and
call
jle
mov
das
fidivl
sbb
cmp
out
inc
and
cmc
sti
push
jle
xchg
test
and
or
hlt
dec
testb
fistpll
mov
out
xchg
mov
int3
outsb
sbb
sub
xchg
add
shrb
sub
inc
sub
movsl
xchg
shrb
in
cmpsl
mov
xchg
fistl
ljmp
mov
lock
sub
and
mov
insl
adc
pushl
shll
xchg
stos
scas
xchg
lcall
pop
ss
call
sbb
sbb
and
cmpsb
insb
xadd
jb
mov
sar
fcmovnb
mov
push
adc
adc
lcall
lcall
and
ficompl
and
jnp
mov
mov
ret
jb,pt
jne
js
arpl
jns
cmpsb
jae
ja
aaa
out
lcall
mov
outsl
sub
xchg
ret
fistps
ljmp
shrl
lret
push
mov
jns
lcall
fwait
adc
mov
stc
lret
ljmp
lods
dec
lcall
aad
and
sub
mov
call
and
out
test
mov
gs
sbb
stc
mov
es
mov
cmp
jge
cmp
mov
popf
jmp
out
dec
push
imul
iret
stc
mov
push
push
ss
and
xchg
fisttps
sub
lret
lcall
and
sbb
lret
loop
leave
scas
insb
or
sbb
jae
ficoml
dec
arpl
mov
ljmp
cmp
cmp
rcll
add
or
lcall
stc
add
mov
fbld
in
je
push
sarb
insb
lock
jb
or
loopne
mov
mov
frstor
inc
ficompl
inc
mov
loope
xchg
cli
xchg
mov
aam
pushf
mov
and
mov
mov
fsqrt
lret
ljmp
btr
jmp
mov
aad
dec
call
jle
mov
stos
dec
ljmp
pop
push
mov
movsl
das
add
cmpsl
int3
sarb
es
mov
xchg
xor
hlt
fcmovne
mov
pop
dec
fisubrl
push
xchg
call
stos
ds
jb
insb
std
cltd
xor
and
add
ja
adc
push
and
lods
pop
dec
cmp
and
or
cli
mov
jnp
dec
cli
stc
push
mov
or
sti
icebp
pop
lods
mov
jbe
lock
push
sbb
fisubrs
cltd
jno
jne
sub
cmp
pop
mov
sub
loope
subl
cs
pop
ficoms
inc
jp
add
pop
mov
ret
fcmovnu
dec
pushf
scas
dec
pop
rorb
and
aaa
pushf
imul
mov
out
addr16
adc
adc
and
fcomp
jb
xlat
jl
dec
jno
movups
ret
lds
shll
cmpsb
rclb
push
dec
xchg
jl
pop
mov
dec
or
dec
adc
cmp
addb
bound
add
mov
adc
mov
mov
in
adc
repnz
mov
pmaxsw
subl
insb
adc
pop
push
fwait
xchg
inc
scas
cmpsl
mov
jg
insb
cmp
add
loope
cli
ret
cmp
jno
lods
sub
lcall
mov
push
jne
sbb
mov
dec
pop
jb
add
push
pop
insb
dec
push
mov
rcl
jb
aaa
adc
mov
out
lcall
jg
mov
adc
or
sub
sub
scas
orl
dec
aam
lahf
pop
sbb
and
out
mov
add
jp
and
lods
pop
cli
mov
in
fidivrl
mov
adc
lret
aam
fs
je
sub
out
mov
push
push
imul
into
inc
sahf
insb
dec
mov
mov
jb
scas
push
int3
sarb
mov
leave
sbb
cmp
pop
jecxz
push
ljmp
push
int
sarb
into
cmp
add
mov
sbb
xchg
fldl
js
mov
movsl
mov
gs
sbb
or
and
outsl
mov
mov
jl
fwait
push
cmp
jge
hlt
nop
lret
int
fstpt
fcomip
repz
aaa
out
xchg
adc
sub
pop
add
test
pop
xchg
mov
je
and
lock
xchg
pop
adcb
or
pop
addr16
outsb
pop
popa
inc
inc
sahf
aad
xchg
jo
pop
sarl
jnp
mov
and
mov
cmp
jns
test
jecxz
es
mov
call
and
popa
fcmovnu
scas
cs
inc
dec
mov
jl
push
dec
add
shll
mov
lcall
dec
sub
xor
aas
push
adc
pushf
fidivrs
pop
insl
fstpt
cmp
lods
dec
movsb
mov
test
inc
aam
mov
push
or
mov
bound
mov
cld
sbb
dec
mov
lahf
shrl
push
movsb
push
shrb
xchg
push
mov
sub
je
push
xor
pop
test
inc
pusha
mov
and
sbb
cwtl
movsl
mov
cmpsb
imul
pushf
or
sbb
mov
test
loopne
out
popf
push
dec
or
or
mov
and
lret
flds
mov
xchg
mov
shlb
and
scas
pop
pop
push
aam
ret
js
mov
std
mov
jp
dec
sbb
xor
nop
es
fstpt
adc
pushf
sub
push
dec
cmp
and
sub
gs
dec
xlat
sub
xor
ja
insb
hlt
lods
dec
mov
stos
xchg
fistpll
jp
inc
imul
ds
pop
and
aam
lods
mov
sbb
or
mov
adc
mov
sub
inc
or
adc
inc
ficompl
mov
push
dec
mov
mov
jp
movsb
ds
fidivs
pop
mov
dec
out
mov
push
xchg
and
jnp
xor
lods
cli
adc
jg
fsubl
or
out
inc
mov
dec
mov
cmp
in
pop
sbb
pop
filds
dec
test
adc
cmp
mov
ret
xchg
outsb
inc
dec
gs
pop
xchg
mov
fnstcw
xor
movsl
mov
fucomp
out
pop
mov
mov
ret
push
pop
mov
lret
pop
jmp
repz
mov
pusha
push
jp
insb
inc
nop
inc
pop
testb
xchg
pop
mov
add
sbb
pop
mov
outsl
aad
xor
pop
adcl
std
inc
push
imul
dec
push
cmpsl
lock
adc
lcall
imul
sbb
cli
sub
pop
dec
mov
dec
lods
pop
lret
dec
cmp
mov
and
xchg
xor
pop
jl
pop
mov
mov
mov
cmp
cmp
sub
inc
out
insb
fdivr
push
popa
jg
pop
xchg
mov
clc
push
and
in
imul
jb
push
or
mov
inc
push
mov
lds
ja
mov
xchg
push
ret
pop
jge
icebp
dec
jns
xchg
jmp
out
lock
or
mov
fimull
push
pop
dec
cmp
push
pop
imul
pop
fistpll
enter
or
adc
outsb
gs
pop
test
pop
jbe
sahf
sbb
loope
dec
inc
push
and
movsl
sbb
pop
cmpsl
mov
sbb
pop
mov
icebp
mov
add
ret
mov
cmp
gs
mov
mov
mov
pop
mov
jmp
in
push
out
adc
call
xchg
or
lods
push
pop
cli
push
test
adc
lods
and
cltd
pop
lea
leave
xlat
fs
pop
outsb
add
loope
icebp
outsl
pop
xchg
sbb
call
sub
jno
jecxz
stc
mov
movsl
mov
adc
aaa
dec
ds
mov
and
push
aad
xchg
cwtl
lahf
pop
lret
das
addr16
jne
je
mov
test
cmp
lods
popa
rcrb
inc
shll
jb
mov
clc
pop
dec
mov
xchg
fmull
or
sbb
int
xor
pop
pop
and
and
sub
loope
cmp
adc
pushf
test
mov
adc
or
lds
jae
jns
jbe
repnz
adc
pop
cmp
fdiv
pop
jne
add
jecxz
lret
sbb
jbe
scas
mov
ja
pop
insl
loope
pop
es
mov
push
adc
pop
test
iret
pop
rcrl
adc
pushw
mov
dec
sub
outsb
cld
pop
mov
jne
push
dec
in
call
mulb
lahf
or
lods
push
mov
fcompl
in
jle
dec
stos
or
mov
pop
aam
ret
lcall
js
xchg
xor
pop
jecxz
mov
pop
je
and
pop
cmp
inc
fs
and
mov
cmp
test
push
fwait
in
pop
sbb
xor
mov
and
xchg
adc
mulb
mov
mov
add
jle
jbe
adc
xor
out
push
pop
adc
inc
or
xchg
sub
cmp
scas
push
pop
stos
sbb
push
pop
mov
cli
nop
sub
fistpl
bound
adc
pop
dec
test
fs
arpl
push
mov
std
mov
in
or
pop
cmp
xchg
inc
pusha
adcb
roll
pop
mov
lahf
pop
sub
shlb
scas
pop
js
or
lahf
mov
add
pop
adc
dec
fistpll
xlat
jp
mov
and
in
or
cltd
pop
movsb
out
movsl
dec
mov
pop
push
xchg
xor
mov
pop
lds
test
fcoms
adc
dec
lods
out
mov
les
mov
call
adc
pop
adc
es
push
lds
dec
pusha
ret
popf
push
push
add
pop
push
jp
sti
xchg
mov
xchg
loop
adc
movb
sbb
mov
arpl
mov
cmpsb
pop
pop
xchg
dec
mov
insl
pop
sahf
or
pop
pop
push
push
adc
leave
mov
adc
jge
movsb
dec
xchg
adc
aaa
in
popa
shrb
rolb
push
push
add
mov
or
sbbl
ja
sub
enter
xchg
add
fisttpl
and
sti
notl
lds
nop
test
stos
pop
pop
dec
cmp
in
jb
jp
test
xchg
mov
pop
leave
popa
lods
pop
mov
bound
pop
adc
add
mov
test
je
ret
and
xor
pop
or
mov
pop
fs
addl
fidivs
or
lcall
jecxz
popf
pop
fisttpll
fdivrl
cmpsw
sub
mov
cmp
pop
cld
icebp
inc
shlb
mov
push
fcomps
or
push
xchg
jg
pop
jmp
xor
pop
mov
xorb
testl
rorb
mov
mov
pop
popa
lock
sbb
pop
popl
je
fwait
aaa
push
sbb
out
loope
xchg
cld
imul
inc
in
call
pusha
int3
mov
mov
inc
mov
sub
and
pop
lock
addr16
adc
dec
lcall
sti
shl
jl
enter
jns
push
pop
jg
js
outsl
in
inc
mov
adc
cwtl
iret
loopne
imul
lahf
jl
clc
xchg
in
mov
aaa
sahf
pop
mov
jnp
pop
lret
and
dec
in
push
addr16
out
stc
lea
jbe
pop
jbe
frstor
mov
add
pop
ds
in
mov
jno
fdiv
mov
lea
loop
cli
leave
fists
test
sub
inc
cmp
in
xor
shrl
xchg
shll
sbb
hlt
les
xchg
mov
pop
sub
dec
adc
leave
faddp
cmp
orb
mov
adc
nop
push
inc
mov
pop
dec
xor
adc
mov
scas
ret
pop
pusha
sbb
dec
cmp
xorb
cmpsb
lods
push
rclb
hlt
je
int3
jecxz
mov
sbb
fldt
aam
mov
or
scas
pop
lock
inc
adc
pop
pop
lods
jno
ds
arpl
pop
sub
xor
pop
out
repz
mov
push
fwait
and
jnp
je
pop
xchg
shr
or
pop
pop
jns
xor
or
mov
mov
outsb
adc
ret
jne
pop
rcl
mov
repz
sbb
mov
lcall
and
xchg
das
adc
sub
push
add
push
dec
inc
mov
aas
dec
repnz
popa
stos
shll
cmp
cmp
add
fcompl
adc
data16
dec
cmpsb
testl
loope
out
ljmp
sbb
dec
mov
bound
clc
pop
xchg
je
push
sarl
sub
loop
pop
sub
cmp
dec
ja
push
mov
mov
and
in
mov
cmp
pop
jb
out
bound
daa
dec
fldl
enter
cli
pushf
ret
int3
cmp
loop
out
clc
inc
lods
pop
and
das
pop
cmp
ja
or
hlt
stos
cltd
add
mov
fists
pop
mov
add
xchg
pop
jns
pop
xchg
aaa
into
bound
pop
push
sarb
das
dec
mov
sub
fs
mov
mov
dec
inc
insl
outsb
jbe
fldt
add
int3
js
enter
aas
cld
mov
aad
aaa
adc
stos
push
mov
jbe
xchg
cmp
or
jecxz
into
push
or
push
fidivl
mov
lods
mov
icebp
xchg
cmpsb
adc
pop
negl
pop
in
add
pop
or
gs
mov
cmp
movsl
sbb
test
add
sahf
mov
les
xor
aad
xchg
cs
leave
sti
pop
pop
add
mov
lods
gs
add
imull
stos
mov
faddl
jb
push
popf
fs
loope
cmpsb
mov
aas
rcll
push
mov
dec
sbb
fidivrs
in
ds
and
xchg
push
adc
adc
fdivr
push
scas
sti
out
mov
pop
jbe
sbb
push
arpl
jns
push
sub
push
shrl
pop
dec
out
sbb
push
add
out
dec
int
cld
cmp
pop
mov
mov
xchg
outsl
dec
das
mov
xchg
pusha
adc
cmp
sbb
xlat
pop
movsb
arpl
aaa
test
cmp
push
pop
dec
enter
pop
fistl
jbe
lds
mov
sub
pop
orl
mov
subb
push
mov
outsb
cmp
pop
aam
inc
push
cs
stos
pop
cmp
pop
loop
pusha
hlt
cmp
add
push
daa
jae
fldcw
jne
data16
xchg
and
jo
pop
mov
lret
pop
test
adc
mov
popa
mov
xchg
mov
shrb
pusha
loope
fists
mov
add
push
jns
inc
xchg
lods
aaa
popa
ss
imul
cmp
jmp
inc
xchg
mov
iret
sub
enter
adc
xor
mov
jge
mov
sbb
fabs
mov
add
pop
nop
stos
jg
inc
das
add
mov
mov
cmp
mov
rclb
lcall
jmp
mov
adc
and
xor
mov
gs
push
mov
jns
fmuls
stos
pop
stos
lds
cmp
pushl
and
icebp
push
mov
aad
jl
mov
cltd
sub
pop
add
dec
imulb
and
aaa
cli
or
popa
or
xchg
add
imul
xor
mov
je
cmpsb
dec
arpl
jmp
inc
shlb
je
sbb
dec
xor
add
jge
outsb
adc
add
scas
mov
adc
mov
cmp
adc
mov
adc
lcall
lahf
lahf
add
jnp
sbb
movsl
pop
and
ficompl
rcll
daa
pushf
jp
cli
cld
popf
mov
popa
ljmp
mov
xor
pop
jecxz
push
or
sbb
jae
hlt
jno
mov
inc
sbb
push
jno
es
pop
cmp
bnd
sbb
cmp
push
rcr
and
out
xchg
and
sarb
mov
stos
xor
push
inc
push
mov
inc
fcomi
mov
sti
pop
dec
out
jmp
orl
aad
inc
lods
dec
inc
frstor
mov
adc
cmp
pop
rcr
addr16
addr16
dec
cs
dec
daa
cmp
mov
jp
jnp
out
dec
fistpll
fdivrl
imul
inc
jnp
sub
pop
mov
push
pop
and
sub
loopne
rorl
push
lcall
or
arpl
hlt
inc
dec
ljmp
sub
pop
push
sub
and
and
arpl
repz
mov
dec
sub
fs
mov
cmp
les
loop
cmp
dec
lret
mov
sub
cs
popa
pop
mov
xor
jmp
cmp
lahf
pop
and
pop
mov
fstpt
pushf
xor
jo
sbb
lret
push
add
fisubs
xor
jmp
cmp
and
cmp
or
sub
and
dec
adc
in
dec
dec
ror
sub
pop
rorb
repnz
adc
mov
lcall
mov
mov
xchg
pusha
pusha
repz
or
adc
jns
dec
sub
decl
leave
mov
es
andb
lret
dec
fisttps
dec
rorb
pusha
or
pop
add
int3
mov
loope
pusha
js
enter
dec
pop
xor
insl
push
iret
stos
jp
xchg
jae
pop
mov
sar
cmp
adc
decl
inc
pop
popf
adc
pop
push
aad
lret
or
enter
pop
push
out
stc
pop
outsb
lods
ds
xchg
pusha
mov
shr
lods
out
xchg
push
pop
xorl
pop
cli
mov
mov
add
xor
pop
loope
pop
outsl
and
mov
fcmove
and
lahf
insb
pop
push
ja
pop
or
ret
pop
xchg
call
bound
orb
enter
icebp
inc
pushl
xchg
outsl
jecxz
insl
cli
pop
leave
loop
mov
or
lahf
data16
or
mov
sahf
dec
push
in
mov
jle
jmp
adc
pop
dec
nop
fimuls
ss
dec
decl
lret
aam
xchg
dec
pop
mov
faddl
pop
fcmovu
cmp
dec
jae
and
pop
test
outsl
aas
xor
jbe
insb
dec
aad
sarb
push
pop
ja
xor
add
arpl
mov
pop
xchg
inc
lret
lret
and
adc
pop
fistl
cmp
jbe
lea
sbb
lock
insl
pop
push
js
push
sub
xchg
negl
cld
sub
or
ljmp
stos
fxch
cltd
into
or
in
add
adc
or
mov
jge
pop
int
test
stc
test
sub
and
leave
scas
add
cs
mov
fsubl
mov
jnp
icebp
pop
cmp
push
or
sbb
mov
test
cmpsb
sbb
cmc
add
push
pop
mov
pop
mov
pop
gs
jno
mov
and
jp
adc
out
stc
xchg
ja
loope
imul
inc
mov
pushaw
insl
mov
mov
out
pop
push
sahf
mov
outsb
pop
loopne
arpl
add
pushl
mov
xchg
adc
lods
pop
push
adc
jbe
mov
xchg
pop
loopne
lahf
or
sbb
data16
mov
sbb
pop
gs
xor
push
js
pop
scas
mov
rcll
fistl
jbe
cmp
lret
pop
sbb
lret
idivb
lods
xor
scas
pop
mov
adc
rolb
cmp
pop
fwait
das
loope
pop
jo
arpl
cmp
xchg
imul
lods
lret
sbb
mov
jle
aam
fs
sub
mov
pop
cmp
pushf
push
or
sub
aad
test
pop
cmp
sbb
pop
enter
insl
out
pop
in
test
xchg
lahf
pop
inc
pop
mov
mov
cmp
dec
lea
test
arpl
js
and
pandn
fiaddl
pop
mov
sbb
inc
cmp
mov
insb
pusha
shrl
xor
gs
inc
jp
xchg
movb
pop
adc
enter
jg
loope
push
pop
mov
icebp
pop
pop
jge
xor
pop
adcb
nop
sub
loope
pop
mov
push
movsb
sub
stos
or
adc
adcl
add
outsl
mov
mov
shlb
imul
leave
pop
cmp
xor
std
cmp
pusha
mov
fsubs
fistpll
mov
in
pop
sub
into
adc
js
outsb
add
pop
mov
ja
sub
mov
lahf
jg
clc
fimull
xchg
movsb
fstps
mov
repz
ret
xchg
sti
sub
or
fnstsw
faddl
sbb
jbe
mov
xor
sbb
dec
or
fmul
stc
mov
mov
push
lock
xor
add
pop
pop
frstor
into
test
and
pop
outsb
mov
mov
xchg
mov
sbb
push
aaa
fidivl
daa
xchg
pop
jnp
les
stos
sub
jns
pop
pusha
xchg
jbe
arpl
mov
push
xorl
fisubl
dec
adc
pop
aas
mov
xchg
pop
adc
das
test
cmpsl
fsts
and
test
bound
push
fisttpll
out
or
mov
pop
cwtl
adc
lahf
cld
push
lods
pop
mov
sbb
pushf
lods
imulb
pop
mov
fidivrs
pop
sbb
pop
push
mov
fs
arpl
xchg
out
pop
pop
fisubl
fidivl
xor
pop
pop
in
jle
jl
stos
inc
clc
ds
pop
cmp
mov
sahf
jne
mov
leave
icebp
rcrb
ss
scas
dec
test
jp
pop
sbb
cmp
movsl
stos
push
cmpsb
adc
rorl
aad
in
push
aaa
pop
sbb
inc
pop
loope
xor
fsubrs
jecxz
scas
iret
push
outsl
mov
add
mov
sub
int
mov
pop
adc
movsb
mov
pop
lret
pop
outsb
or
push
xor
and
pop
mov
lcall
dec
sahf
adc
push
dec
mov
fs
jecxz
pop
rcr
pop
mov
sbb
mov
xchg
cmp
and
mov
and
mov
negl
sbb
xlat
mov
test
add
xorb
xchg
push
shlb
popa
dec
jmp
inc
pop
adc
xchg
lock
push
adc
mov
in
jbe
and
aam
pop
mov
adc
test
sub
fwait
adc
jg
out
pop
rorb
push
pop
pop
sub
xchg
test
xor
pop
sti
pop
dec
mov
daa
jge
in
cmp
and
xchg
and
add
ljmp
push
inc
and
sarl
pop
out
out
inc
fadd
adc
arpl
ret
adc
dec
fwait
hlt
cmp
scas
mov
es
mov
mov
pop
addb
out
rorb
leave
or
orl
xor
jp
and
xchg
sarl
push
notl
pop
mov
pop
stos
mov
outsb
and
daa
lahf
mov
imul
mov
xor
shll
xor
je
add
mov
pop
sub
pushf
sti
mov
sti
push
pop
lret
pop
iret
xchg
pop
lock
sbb
push
pop
push
imull
pop
repz
into
sarl
mov
pop
addr16
mov
jl
mov
or
pop
lods
stos
push
imul
xchg
push
int3
inc
xchg
shll
add
add
ds
pop
int
sbb
es
movl
out
push
jne
sub
movsb
push
pop
dec
sub
push
lods
sub
call
inc
mov
pop
lcall
pop
push
add
add
pop
xor
jge
inc
pop
push
arpl
inc
xchg
testb
fs
mov
push
cmp
pop
mov
cmp
or
scas
dec
cld
adc
push
pop
xor
xchg
inc
imul
scas
dec
fcmovnbe
xchg
pop
leave
sub
xchg
stc
jge
pop
je
pop
into
sub
lret
push
pop
mov
jb
xor
push
in
xchg
or
pusha
jecxz
pusha
scas
mov
repnz
xor
dec
jnp
push
out
stc
cmpsl
outsl
pop
subl
hlt
pop
and
push
sbbb
pop
rcrb
inc
cmpsl
int3
nop
pop
dec
loop
push
sbb
adc
xchg
push
dec
pop
rorb
in
ret
pop
pop
scas
cmc
pop
inc
jp
dec
sbb
outsb
popw
jecxz
pop
gs
fildl
inc
neg
pop
std
cmpsl
cmpsb
pop
add
adc
pop
dec
aad
jbe
pop
pop
push
dec
fidivrl
xchg
cmp
lods
jne
shll
sbb
pop
fdivs
pop
mov
pop
out
sub
fs
sbb
push
aam
in
cmpsl
cmp
adc
loop
dec
mov
and
in
stc
jnp
sbbb
sbb
push
fsubl
inc
push
xchg
mov
pop
jns
shr
sub
sub
and
imul
decl
push
xchg
push
loope
or
out
std
in
sti
dec
mov
pop
ljmp
movsb
jne
mov
subl
inc
pop
stc
mov
divb
out
pusha
jg
addr16
cmp
int
or
pop
mov
mov
mov
xlat
lods
pop
lods
adc
adc
ret
mov
mov
ja
pop
cli
xchg
mov
stc
in
divb
lahf
add
push
pushf
pop
gs
xchg
cmp
cmp
pop
jg
pop
mov
inc
test
xor
mov
jbe
arpl
push
daa
cltd
inc
lea
xchg
call
dec
xor
imul
dec
test
sbb
or
je
jl
in
sti
insl
pop
andl
push
adc
sbbl
dec
jnp
cwtl
push
movsl
pop
inc
aas
mov
xchg
pop
dec
mov
sbb
pop
in
loop
ds
mov
es
pop
jmp
test
out
xlat
aaa
or
lcall
cltd
clc
mov
shll
pop
lds
adc
iret
push
pop
fiaddl
pop
sub
mov
mov
push
mov
lret
adc
xchg
inc
fs
movsb
dec
adc
mov
fsts
inc
mov
cmp
sbb
jb
inc
cli
mov
mov
push
push
lea
pop
lds
mov
pop
aad
inc
mov
fwait
or
jmp
adc
pop
call
push
mov
shll
sub
sbb
and
mov
dec
pop
out
jg
adc
pusha
sub
cmpsl
sbb
adc
popf
pop
movl
xchg
fwait
ljmp
mov
pop
aam
pop
pop
pop
dec
aaa
dec
das
cmpl
jne
inc
nop
and
sbb
mov
cli
pusha
aaa
shl
cmp
mov
add
pop
enter
lret
or
mov
and
inc
aaa
push
push
inc
xchg
jp
out
les
cmp
pop
mov
add
sbb
jbe
pop
mov
jno
pop
mov
push
mov
push
add
jcxz
loope
rcll
fcoms
cmp
pop
dec
js
ret
or
leave
ljmp
test
insb
cmc
pop
iret
push
imul
cltd
fucomip
data16
pop
cmp
out
cmp
in
imul
orl
icebp
test
xor
pop
pop
xor
lock
pop
xchg
push
lret
push
push
mov
repz
inc
push
push
add
sbb
cltd
setp
pop
cmp
flds
sbb
and
and
xchg
pop
cmp
jmp
pop
dec
insb
push
push
pop
jle
push
sbb
je
fiaddl
push
dec
enter
out
pop
pop
dec
xor
adc
push
das
ret
pop
pop
arpl
add
lods
fbstp
pop
div
xchg
fldcw
mov
sub
shl
imul
pop
fisubrl
out
cwtl
test
insl
pop
add
ret
imul
in
push
int
pop
lret
mov
rclb
and
xchg
fwait
adc
xchg
or
imul
out
jg
cmpsl
pop
jp
inc
add
sbb
adc
fcmovnbe
mov
loop
int
in
adcl
push
out
lods
pop
repnz
fmuls
mov
fisubl
push
mov
dec
push
in
dec
pop
and
xchg
jmp
mov
hlt
pop
stos
les
out
lret
pushf
jns
loop
decb
test
lret
add
xor
test
mov
aam
fmul
add
mov
icebp
and
stos
mov
push
fisttpll
inc
data16
sub
fistpl
mov
cli
pop
xchg
pop
pop
push
push
jne
jo
pop
and
xor
bound
pop
into
inc
lret
sub
jp
inc
adc
aam
lcall
shr
add
add
mov
pop
fiaddl
xor
xchg
fs
movsb
je
mov
cmpl
stc
mov
js
sub
or
mov
push
hlt
arpl
fsub
in
push
stos
mov
rolb
adcl
jge
pop
fbld
aad
in
sub
rcrb
fistpll
pop
xor
mov
dec
repz
sbb
ror
and
xor
in
push
push
jg
mov
and
and
xor
pop
mov
mov
mov
mov
hlt
fldl
sub
mov
inc
mov
lcall
pop
insl
mov
cmp
jp
mov
bound
int3
adc
xor
out
inc
jbe
xrelease
sub
pop
push
mov
ret
adc
push
dec
cmp
lods
cli
cltd
sub
pusha
mov
jae
into
js
in
pop
cltd
pusha
mov
das
out
xchg
xchg
dec
cmp
iret
pusha
stc
mov
jns
jb
or
popa
cltd
bound
dec
xchg
stos
mov
out
nop
xor
adc
sbb
mov
in
ficompl
jne
dec
lret
sbb
jge
test
popf
xor
sub
mov
test
xor
arpl
popa
cmp
aad
addr16
cmp
mov
adc
inc
je
jle
mov
inc
lcall
stos
push
inc
daa
out
or
gs
in
adc
call
inc
add
mov
ret
sub
popw
nop
mov
add
enter
jb
pop
and
mov
jo
xor
dec
cltd
sbb
mov
sub
jmp
dec
sub
xor
pop
in
daa
xor
cmc
fidivrl
xor
mov
and
les
jns
call
dec
test
mov
shll
les
and
jle
ss
xor
fcomps
push
cmpsl
fs
ja
xor
dec
gs
shrl
inc
pop
insl
loope
cltd
push
mov
pop
aas
or
sbb
pop
xlat
inc
pop
nop
dec
loopne
push
int3
movsb
mov
shrl
jbe
pusha
mov
subl
mov
lods
mov
test
push
pop
aas
mov
jle
pop
sti
rolb
lock
enter
js
scas
inc
inc
or
cvtps2pd
inc
xchg
popf
in
in
and
pusha
xchg
or
jb
mov
mov
call
cld
dec
pop
jp
mov
and
bound
mov
cmp
jb
stos
in
inc
mov
or
cmp
out
cli
ret
adc
std
mov
pop
shl
sub
fcoms
xchg
push
add
rcrb
call
add
je
xor
xchg
adc
xchg
sbb
leave
test
mov
sub
jmp
lds
int3
bound
into
lcall
pop
pop
test
test
lcall
cmp
mov
mov
pop
jbe
pop
aam
test
xchg
xchg
outsb
pop
je
repz
jg
pop
mov
jecxz
pop
dec
mov
sbb
pop
pop
push
inc
pop
nop
mov
daa
ret
xor
cltd
inc
out
xor
loop
pushl
or
fs
xor
xlat
pop
xchg
test
mov
sub
cwtl
or
pop
cmpsl
movsl
idivl
int
inc
mov
sbb
push
jnp
xor
inc
push
pop
nop
aaa
repnz
or
mov
pusha
mov
and
outsl
aaa
push
into
add
cmpsl
add
pop
add
push
and
inc
sarl
adc
daa
cltd
pop
cmp
out
or
pop
adc
ret
pop
sbb
stos
xor
popf
sbb
pop
jne
fsubrs
adc
stc
pop
fbstp
lcall
iret
hlt
mov
pop
xchg
into
in
inc
mov
mov
pop
mov
mov
mov
sbb
out
ret
cs
xorb
jg
push
mov
lock
lods
xor
push
cmpsl
adc
bound
push
mov
xor
test
jae
ljmp
mov
out
cmp
mov
jl
jbe
fisubrs
fwait
add
das
lahf
pop
in
xor
repz
adc
add
ljmpw
ret
stos
test
cmp
cmp
out
push
mov
mov
test
pop
and
push
add
ficoml
pushf
push
cmpsb
pop
lret
std
out
mov
je
add
movsl
or
dec
pop
pop
xchg
jl
and
daa
clc
adc
cs
shrb
sti
cmp
dec
data16
push
in
mov
imul
stos
pop
xchg
lahf
mov
jp
add
adc
outsb
xchg
pusha
xchg
pop
rcr
outsl
sbb
iret
dec
jle
insl
dec
scas
pop
jo
and
mov
sbb
xchg
mov
push
movsb
stos
pop
push
pop
mov
call
push
mov
das
push
cld
test
push
or
dec
or
ret
push
ud1
ret
sti
loope
pop
into
mov
or
pop
push
shrl
popf
dec
js
jbe
aad
rclb
sub
in
pop
jl
enter
mov
sbb
add
cmp
add
andb
pop
in
add
and
inc
jbe
cmp
pop
sbb
shrl
mov
sub
jmp
mov
inc
sub
mov
push
lret
push
addr16
iret
fwait
mov
xchg
dec
pop
mov
mov
xchg
pop
adc
xchg
adc
out
dec
pop
mov
in
loopne
or
sub
pusha
and
fwait
rolb
pop
repz
mov
data16
pop
jg
daa
shll
repz
leave
ss
in
lahf
cmp
and
dec
addl
imul
push
sbb
push
xchg
daa
pop
add
push
or
lods
cmp
mov
pop
repz
adcl
inc
pop
mov
jns
sub
into
fcmovnb
loop
pusha
add
daa
xchg
jmp
inc
pop
push
cwtl
js
mov
push
jg
xchg
lret
lds
shrb
daa
ret
outsb
mov
mov
mov
adc
xchg
jmp
imul
pop
out
mov
mov
bound
mov
lods
pushf
arpl
pop
inc
test
dec
loopne
mov
jecxz
in
and
dec
mov
add
and
fisubrs
add
jle
and
adc
outsb
and
pop
adc
jp
imul
mov
mov
out
or
lods
ds
dec
aaa
mov
stc
pusha
sub
cmc
fwait
push
or
xor
popa
pop
push
sti
mov
loop
into
and
sbb
rorb
xchg
adc
rcr
in
sbb
out
dec
rorb
mov
push
dec
jne
daa
fstpt
mov
jno
std
pop
pop
bound
lock
fwait
pusha
cmp
mov
ss
mov
mov
int3
rcrb
test
pop
jo
mov
or
dec
adc
cwtl
stos
inc
sub
shl
sub
stos
mov
cli
insb
mov
xchg
ss
xchg
mov
sbb
xor
pop
sti
adc
cmc
mov
pop
shll
mov
adc
xor
mov
and
sbb
jl
stc
mov
mov
stos
sahf
test
outsb
shr
js
adc
cmp
out
lcall
jle
or
fiaddl
adc
out
mov
jecxz
divl
or
inc
and
test
ds
std
inc
adc
mov
and
shll
push
add
outsb
mov
cwtl
pop
scas
mov
jo
loopne
leave
add
popa
dec
cmp
and
mov
lcall
int3
fimull
add
jbe
adc
sub
aas
jecxz
sub
test
lds
cld
divb
lods
push
mov
lock
sub
pop
push
mov
xchg
sub
pop
pop
add
gs
mov
into
xor
jmp
and
insb
cltd
xchg
xchg
pop
lret
and
push
aam
and
addb
lcall
scas
loopne
pop
fcmovnb
call
sub
loopne
out
jg
add
in
ds
mov
and
int3
jbe
push
jge
dec
sub
fmull
pushf
push
sbb
xchg
andl
rcrl
dec
pushf
aam
and
loopne
icebp
pop
and
lret
inc
rcr
pop
pop
mov
test
add
dec
xor
jbe
mov
mov
ja
pop
xor
clc
jbe
mov
adc
sbb
push
sub
daa
loope
pop
arpl
cmp
test
cmp
pop
cmc
in
cld
xchg
jb
pop
add
adc
mov
pop
loope
sti
xor
xchg
inc
in
sub
fstpt
pop
jno
das
inc
loopne
add
je
bound
mov
in
scas
lcall
popf
std
inc
jl
xlat
push
pop
jmp
inc
sti
mov
and
mov
adc
stos
int
push
cmp
adc
pop
cmp
add
popa
push
in
out
ja
mov
mov
pop
in
pop
jecxz
jmp
inc
push
call
cltd
outsl
pop
sub
shlb
add
pop
out
mov
jecxz
and
jp
in
xchg
ja
jbe
jg
lret
scas
pop
ret
stos
adc
pop
push
adc
fisubl
pop
sub
addr16
adc
cmp
out
adc
add
inc
mov
mov
inc
out
xor
push
dec
push
sbbl
jl
pop
mov
adc
mov
pop
jo
mov
cmp
cmp
add
fsubp
push
push
xchg
or
jmp
aad
pusha
fcmovne
fwait
andb
sub
stos
mov
out
pop
lds
or
xchg
shrl
cmpsb
push
mov
test
sbb
cmp
mov
xchg
orl
dec
jmp
incb
sub
push
add
in
pop
mov
inc
cmc
jne
loopne
pop
repz
and
mov
pop
cli
subl
cmpsl
sbb
xchg
push
mov
sahf
mov
or
popf
pop
dec
call
sbb
lock
cmpsl
xchg
push
sbb
pusha
inc
dec
addr16
call
test
cmpsl
adc
push
pop
push
int
neg
leave
rclb
cmp
sbb
lods
lahf
pop
ret
or
inc
cs
imul
loop
push
les
push
push
scas
sub
pop
sub
jecxz
ret
cmp
push
sbb
jecxz
lret
push
jns
aam
out
fldlg2
xchg
push
push
andb
mov
sub
lods
push
adc
adc
out
sbb
mov
and
pusha
jle
pop
and
push
mov
clc
pmullw
dec
pusha
add
cli
mov
pop
orl
ss
mov
add
jb
sub
pusha
and
dec
idiv
and
packsswb
shl
push
out
push
fucomp
out
cmc
mov
fs
ss
addr16
pop
fldcw
push
cmp
cltd
sub
adc
jecxz
outsb
js
pop
add
hlt
stos
mov
nop
sarl
mov
lea
int3
sub
cli
or
inc
out
sbb
sahf
ds
cli
mov
mov
xchg
add
mov
jo
push
rclb
cmp
or
inc
inc
loopne
jnp
dec
push
adc
sub
xor
call
testl
fs
andl
xor
push
mov
mul
arpl
pusha
daa
cwtl
in
mov
je
lock
pop
xchg
mov
and
dec
jmp
xchg
lods
into
out
cmpsl
lea
jo
mov
and
jmp
sub
pusha
mov
adc
shlb
outsb
pusha
sub
cs
xchg
cmp
jl
xchg
push
xchg
inc
mov
filds
fs
cmp
mov
push
sub
adc
mov
xor
inc
js
push
xor
cmpsl
out
cmp
fidivl
data16
pop
es
popf
jnp
idivb
sbb
jno
or
sarl
js
clc
mov
mov
dec
cli
sub
add
repz
pop
lds
sub
inc
aad
and
mov
fwait
js
test
clc
inc
adc
inc
je
xor
push
lods
or
shl
pop
sbb
rcl
ds
mov
loop
mov
and
dec
jne
dec
or
pop
inc
mov
adc
pop
or
imul
add
adc
insb
push
comiss
pop
mov
fwait
neg
xchg
jp
mov
ljmp
sub
and
xor
movsb
ds
sub
ficompl
push
jp
pop
mov
mov
pop
popf
lcall
pop
push
xchg
repnz
lahf
adc
sub
jne
rcll
scas
mov
cmp
pop
ljmp
jge
mov
sub
cmc
pop
jo
fisttpl
pop
sbb
xlat
lock
je
in
leave
xor
fld
imul
iret
pop
jmp
inc
test
pop
sbb
lds
xor
arpl
shll
sub
add
scas
push
inc
mov
int
lret
sbb
ss
cld
sbb
mov
bound
push
push
pop
sbb
sub
and
insl
or
jns
jb
jo
pop
int
add
popf
adc
adc
pop
ljmp
sub
and
cmovs
push
adc
imul
imulb
out
mov
pop
popa
or
inc
dec
xchg
cmp
jecxz
sbb
divl
sbbl
call
jnp
jo
aas
in
in
addr16
xlat
sub
or
push
pop
lds
out
mov
dec
loope
into
sbb
movsb
fucomip
pop
adc
jae
sub
insl
xchg
or
insb
inc
push
pop
loop
fldenv
and
lcall
mov
popa
sbbb
pop
gs
push
loop
sahf
bound
or
cmp
or
jnp
sbbl
add
inc
mov
xor
aaa
jo
orl
insl
imul
outsb
cmpsb
insb
xor
call
sub
mov
repz
fildl
jno
lea
jb
cmp
into
es
and
or
mov
pusha
inc
rclb
add
mov
jb
popa
or
stc
into
cmp
fiaddl
xchg
pusha
sbb
pop
dec
push
jae
jle
prefetchw
or
movsb
jecxz
push
sarb
cmp
dec
cld
sub
loopne
adc
in
or
pop
push
iret
out
pop
pop
jbe
rorl
aaa
repnz
fstpl
push
arpl
ljmp
int
mov
jl
jp
test
and
pop
sahf
push
sub
or
lret
cltd
fs
mov
pop
or
jbe
jecxz
loopne
iret
pop
test
push
gs
pop
int
ret
nop
cmp
mov
pop
xchg
pop
push
ror
xchg
ds
pop
xchg
mov
outsl
push
sub
add
mov
xor
xor
cmp
push
sbb
push
xor
cmp
and
cmp
xor
push
jmp
and
mov
pop
popa
les
arpl
dec
neg
pop
push
adc
ss
xchg
ljmp
sahf
cmp
xor
ljmp
pop
in
repnz
pop
xor
push
adc
pop
adc
inc
js
lods
inc
mov
push
sub
dec
imul
add
cltd
pop
aam
outsl
add
sahf
mov
test
negl
xor
mov
cmp
jge
push
lret
pop
and
push
lock
fwait
jmp
pop
scas
xor
xchg
and
or
pusha
xor
in
push
sar
fbld
sub
dec
sub
fld
mov
pop
adc
iret
fadds
cli
js
add
jns
inc
pop
mov
xchg
dec
aaa
ss
nop
and
adc
std
stos
xor
dec
dec
pop
sub
pop
pusha
test
push
pusha
sbb
mov
pop
and
inc
in
outsb
hlt
pop
rorl
push
pop
xchg
sbb
sbb
fildll
lods
icebp
data16
or
sub
in
pop
and
mov
jbe
push
loope
pop
lcall
adc
and
pop
inc
and
pop
adc
xchg
fcmovne
in
pop
aaa
daa
jae
mov
into
cmp
push
adc
push
pop
push
test
loopne
jbe
xchg
pop
or
pop
out
mov
mov
jno
aaa
mov
mov
in
fnstsw
sbb
cs
mov
adc
adc
cmp
push
repnz
mov
pop
mov
call
fldenv
mov
xor
xchg
lret
pop
int3
les
ljmp
dec
jo
pop
daa
int
lods
and
movsl
push
cmp
sub
xchg
mov
cmp
or
sbb
jl,pn
stos
mov
lock
cwtl
leave
inc
jnp
xor
pop
sub
iret
push
xchg
fisttpll
lods
ss
xor
sbb
jnp
pop
hlt
int3
jne
cmp
fists
pop
mov
pop
repz
adc
and
xchg
pop
pop
dec
lss
fmull
push
arpl
jne
loope
ljmp
cli
sub
pop
xor
out
es
arpl
pop
sbb
xchg
xchg
sub
xor
push
mov
cmp
fildll
mov
xchg
stc
icebp
outsl
cmp
cwtl
push
dec
cmpsl
pop
xor
bound
stc
aas
mov
pop
sub
gs
je
movsb
cmp
jno
lcall
cld
add
mov
fistps
cmc
adc
and
in
xchg
mov
pop
and
test
aad
cmpsl
and
and
or
rcrb
and
mov
loope
pop
mov
xlat
inc
aaa
and
push
pop
and
adc
pusha
xchg
xlat
add
push
cmp
pop
mov
pop
scas
sub
dec
lcall
jns
loope
aam
mov
cmp
arpl
jae
push
dec
sbb
pop
mov
cmp
and
dec
data16
jne
adcb
pusha
and
pop
dec
mov
mull
sub
xchg
push
and
bound
pop
xor
inc
int3
push
imul
and
pop
cmc
push
inc
inc
into
mov
ljmp
scas
stc
lds
push
pop
outsl
mov
push
xchg
inc
es
pop
mov
stc
xor
xor
rcrb
and
mov
push
aam
add
dec
mov
adc
mov
insb
mov
jp
in
lahf
and
mov
loop
push
fildl
sbb
inc
cmc
lret
insb
add
ret
and
add
mov
lcall
inc
mulb
movsb
mov
xchg
mov
loopne
ljmp
pop
dec
pusha
mov
insl
mov
sbb
pop
jo
inc
or
daa
mov
mov
loope
aam
and
ficomps
and
sbb
xchg
daa
dec
bound
cmp
or
mov
enter
or
pop
cmpsb
pop
sahf
pop
cltd
sbb
push
mov
pop
int3
loop
out
mov
outsl
push
jbe
jp
test
and
xlat
lods
jbe
pop
xor
and
fwait
out
xchg
inc
pop
sub
pop
xchg
dec
dec
ljmp
addl
ja
repz
out
mov
cmp
cmp
outsl
jle
repnz
pop
pop
bound
jbe
pop
lahf
lcall
shlb
sarl
icebp
add
inc
repz
rcrb
call
add
mov
pop
fbstp
adc
std
mov
dec
lret
push
fdivl
add
bound
lret
fstpl
pop
sub
jnp
outsb
add
pop
cmp
enter
ljmp
ror
orl
addr16
and
pop
pop
inc
in
sbb
jnp
popf
sbb
sti
cmp
pusha
jl
outsl
xchg
push
insl
xchg
and
pusha
ljmp
jo
cmp
and
call
xlat
pop
mov
pop
or
mov
xchg
or
pop
cmpsl
sub
stc
movsl
ljmp
pop
mov
mov
sbb
pop
mov
in
movb
jno
jbe
addr16
pop
push
jo
sbb
pop
test
loopne
cvtps2pd
cld
pop
fidivrs
cmp
outsl
fistl
sub
mov
ljmp
bound
push
das
sarb
cmp
fwait
jg
jbe
in
inc
cmc
out
pop
popa
push
mov
adc
mov
and
enter
loop
sub
push
bound
sbb
sar
mov
and
xor
sub
jecxz
decl
mov
add
jp
enter
pop
mov
jae
sub
jmp
push
in
cli
bound
add
ljmp
push
aam
mov
jb
lock
adc
daa
xor
pop
cltd
test
sub
cmp
xchg
pop
imul
dec
or
int
push
arpl
jne
popf
adc
mov
jnp
lret
mov
push
fstp
ljmp
dec
adc
push
stos
inc
xor
pop
out
dec
inc
or
mov
out
int3
cmp
cmp
pusha
sub
lahf
dec
pop
xchg
repnz
jne
icebp
lret
mov
jb
ficoml
pusha
pop
dec
dec
jp
movsb
cmp
xor
and
outsb
ljmp
dec
pop
xor
andb
lock
sbb
mov
mov
xor
pop
bound
cmc
and
sub
pop
and
les
je
jne
xor
mov
mov
fimull
leave
les
pop
adc
dec
fisubrl
pop
pop
cltd
fsubrl
or
push
movsl
mov
inc
lods
int
aam
adc
imul
ja
loopne
and
or
push
shlb
push
jecxz
pusha
xor
mov
cmp
mov
pop
mov
sbbb
insb
inc
pop
xor
pop
cmp
mov
push
mul
pusha
int
push
ljmp
push
sub
ficoml
jnp
sub
mov
mov
xlat
out
out
scas
pop
pop
mov
outsl
ds
push
rorl
in
add
sahf
repnz
ljmp
or
lods
pop
cmp
cmp
cmpsl
xor
mov
les
scas
jbe
adc
loope
pusha
int
movsb
divl
adc
lret
loopne
lcall
push
in
lods
jp
push
enter
lds
jl
lock
cvtdq2ps
stc
push
bound
mov
mov
push
push
or
adc
fwait
bound
fnstcw
incl
push
pop
jbe
in
add
pushf
mov
cmp
push
add
inc
dec
pusha
inc
sti
mov
in
add
pop
and
push
sbb
daa
adc
push
fbstp
mov
imul
pop
mov
aaa
pop
adc
loop
inc
xchg
push
and
insb
arpl
push
add
ljmp
es
not
sub
add
cmp
xchg
test
addl
xchg
xlat
fisubl
sarl
pop
addl
pop
sub
adc
lcall
cmp
mov
jg
mov
fsubrl
cmp
mov
or
pop
cli
sbb
sahf
sub
adc
out
jg
or
lret
pop
ret
lcall
mov
pop
pop
xlat
stos
or
mov
aam
out
bound
and
sub
stos
rolb
jmp
popa
mov
xor
aam
and
jmp
mov
mov
mov
mov
push
mov
pusha
fwait
mov
mov
jmp
mov
inc
jnp
orb
mov
enter
pusha
cmp
sub
loopne
jno
std
arpl
jg
outsb
and
lock
stos
lret
mov
mov
jmp
orb
and
mov
jg
icebp
data16
scas
jecxz
lahf
and
jnp
jmp
jg
xchg
xchg
mov
sbb
sahf
pop
int
jg
in
pop
pop
and
lret
sahf
stos
push
lea
sti
mov
jmp
sub
in
scas
lods
dec
pop
jae
push
jmp
nop
sbb
or
insb
scas
bound
mov
fidivrl
pop
stos
fidivl
or
sub
lret
pop
pop
cmpsb
pop
jnp
ss
dec
sub
lret
stos
inc
scas
dec
jnp
and
cmp
add
sbb
cmp
insb
jne
fimuls
sahf
sarb
mov
push
xchg
mov
mov
lret
jg
js
rcll
mov
lods
push
int
mov
push
jg
dec
fwait
rcrb
jnp
push
and
mov
jmp
xchg
pop
jg
adcb
ss
jmp
and
mov
rorl
cmp
cmp
mov
jge
jle
xchg
cmp
arpl
push
cmp
push
cmpsb
sahf
jmp
adc
icebp
push
sub
addr16
jg
cmp
mov
scas
or
xchg
jmp
mov
push
jl
into
testb
fucomi
stos
xchg
mov
add
ljmp
enter
inc
stos
xor
xchg
addb
xor
sbb
fidivl
jne
data16
and
jnp
inc
xchg
icebp
xor
outsb
in
or
mov
push
or
push
fisubrs
and
mov
pop
or
mov
sub
in
int
push
mov
jmp
push
jg
cmc
dec
sarb
leave
f2xm1
imul
cmpsb
add
dec
stos
insb
notb
in
scas
and
mov
jno
bound
dec
mov
xchg
mov
jp
mov
ljmp
cmpsb
cwtl
inc
inc
dec
scas
pop
xor
rclb
mov
lret
rclb
push
jb
push
dec
mov
btc
pusha
pusha
shr
mov
sbb
dec
mov
rol
and
shl
sub
lea
push
call
jmp
sbb
bsf
mov
pusha
rol
sbb
mov
pushf
push
call
lea
jne
bswap
sbb
mov
shr
sub
test
mov
pushf
test
bt
sub
bt
movb
pushl
popl
push
cmp
pushf
pushl
call
pushf
push
movl
pushf
jmp
lods
push
scas
xchg
dec
jg
inc
or
or
leave
lods
mov
inc
sbb
inc
and
divb
rcr
push
lea
inc
ds
outsl
das
outsb
out
loopne
fisttpll
cld
mov
sbb
jnp,pt
sbb
sub
mov
push
push
inc
in
add
les
add
jne
cld
arpl
fcomps
mov
movl
lea
call
call
dec
cmp
cmp
xor
push
test
pushl
std
pushw
popfw
pushf
pushf
inc
call
in
pushf
push
push
movl
movb
call
pushf
lea
je
call
setp
mov
push
pusha
pushf
pushf
lea
jmp
pusha
pop
xchg
xchg
ds
sahf
out
mov
cld
inc
jecxz
xchg
aas
or
push
mov
out
mov
xor
pushf
inc
add
movsb
xor
add
jge
dec
or
rolb
imul
testl
adcb
shll
sub
fs
call
jmp
push
jmp
str
pusha
lea
jo
pusha
movl
pusha
call
call
jmp
not
mov
mov
movw
pushf
pushf
lea
ja
call
pusha
lea
ja
inc
add
sub
ror
setle
stc
bsr
add
jmp
dec
jnp
and
repz
lahf
xchg
fs
and
pop
popa
cs
jbe
push
mov
fisubrs
sub
fwait
mov
iret
jl
ja
push
push
stos
cmc
jecxz
fcoml
pop
add
daa
iretw
xlat
jmp
rorb
inc
ljmp
add
sti
push
xchg
mov
lcall
and
or
mov
mov
outsl
outsb
dec
pop
data16
fiadds
out
fldenv
test
mov
fiaddl
inc
sub
and
sbb
lcall
outsl
pop
stos
jp
pop
fdivrp
xor
loop
cmpsl
cld
cmp
pop
mov
cmp
pop
mov
adc
pop
mov
out
subb
push
and
fiaddl
es
fcmovnbe
jmp
mov
fmuls
cmp
sub
mov
sbb
rcll
add
inc
push
divl
daa
xor
loopne
lcall
pop
adc
in
mov
sahf
mov
call
jecxz
cli
push
inc
cwtl
loopne
mov
cmpsb
fbstp
fisubl
in
pop
add
mov
xorb
jmp
cmp
pop
outsb
dec
push
sbb
inc
sahf
inc
push
adc
cmp
lcall
cmp
jecxz
pop
mov
cmp
pop
pop
jge
adc
mov
jl
sahf
mov
xor
je
adc
cmp
mov
xor
sbb
idivl
mov
jg
pop
inc
repz
pop
pop
ds
faddp
cli
sbb
jnp
scas
jno
mov
mov
pop
sub
add
cmp
imul
push
or
fsubrl
stc
mov
push
jb
pop
dec
push
cmp
push
jns
dec
xor
ss
push
repnz
sarb
push
or
mov
fidivrl
cmpsb
and
cmp
push
out
fistpl
out
test
lock
mov
mov
addr16
cmp
sti
cmp
jns
add
mov
js
mov
or
and
mov
leave
js
stos
xchg
stc
ficoms
jmp
mov
cli
js
jo
ljmp
mov
sarb
dec
fmulp
and
mov
lcall
mov
mov
jmp
mov
cmp
push
fidivrs
js
or
inc
xchg
mov
cmp
adc
mov
bound
loope
dec
cmp
sub
sbb
stos
jg
mov
dec
sahf
stos
cwtl
push
pop
int
xlat
out
dec
mov
lret
in
push
rcr
int3
mov
pop
sbb
inc
in
add
jno
push
aam
data16
push
push
mov
jmp
imul
outsb
data16
mov
pop
pop
inc
jns
sbb
or
movsb
push
push
repz
loop
ljmp
scas
into
xor
mov
sbb
inc
sub
xchg
xchg
jae
xchg
mov
xlat
iret
loope
cmpsb
shr
xor
xchg
inc
jno
mov
mov
test
mov
das
dec
outsb
sbb
and
push
jb
out
sbb
pop
jb
push
fidivrl
add
inc
in
lods
mov
and
add
xor
ficomps
mov
mov
in
ret
call
cli
fnstenv
fwait
sbb
cmp
jmp
mov
out
movsb
leave
and
loop
jo
je
lods
out
jns
cwtl
stos
jbe
cmp
incb
add
dec
adc
aas
and
mov
fcmovu
cs
jle
dec
sub
jmp
sbb
imul
data16
pop
mov
dec
mov
mov
or
test
sahf
mov
push
push
pusha
pop
pop
cmp
jns
sti
daa
sub
testl
add
or
cmp
pop
fimuls
add
sub
dec
ljmp
add
mov
inc
xor
mov
push
arpl
int3
jbe
dec
xchg
jo
adc
jecxz
push
ffree
imul
fildl
jbe
test
repz
xor
outsb
pop
jl
jb
push
add
cmp
divl
and
mov
cli
cmp
or
sub
shll
sub
jb
dec
push
lret
mov
jecxz
push
aad
aaa
inc
push
mov
pop
lcall
data16
mov
arpl
push
xchg
addb
push
ds
ljmp
push
jmp
dec
dec
arpl
mov
outsl
nop
jns
mov
pop
fidivl
pusha
pop
jg
sahf
cltd
jecxz
mov
lret
and
jl
leave
mov
lret
ret
push
mov
roll
mov
test
dec
call
xchg
cld
ret
push
pop
mov
imul
mov
inc
rorb
loopne
sbb
jnp
pop
cmpsb
bound
sbb
lret
out
xchg
cmpsl
mov
shl
fimull
xor
or
sbb
jg
jnp
mov
push
dec
lods
lret
jnp
imul
dec
fsubrp
sbb
mov
add
push
sub
inc
repnz
out
mov
mov
pop
inc
mov
mov
ret
jmp
jae
inc
sub
in
push
inc
pop
push
bound
jns
cltd
lods
mov
sbb
jg
sbb
xor
lret
ds
xchg
ljmp
out
push
loop
add
fisubrl
dec
lcall
dec
fimull
sbb
mov
push
lret
pop
mov
jecxz
sbb
pop
cmpsl
and
lock
imul
inc
mov
rclb
pop
pop
sbb
push
jmp
inc
test
adc
jo
jnp
or
addb
sahf
out
push
dec
xchg
add
dec
and
outsb
sbb
mov
outsb
and
mov
mov
out
shll
das
aaa
mov
sbbb
jne
mov
add
xchg
lret
popa
mov
sub
out
or
cwtl
dec
imul
mov
jbe
push
mov
stos
or
push
add
out
ja
repz
addr16
inc
sbb
push
fwait
call
enter
stc
iret
fwait
cld
lret
in
int
push
mov
lret
stos
addr16
mov
push
out
mov
sub
sbb
fistpl
lds
cmpsb
in
aad
andl
iret
lock
jl
ficomps
jecxz
testb
xchg
sbbb
dec
ficompl
jnp
shll
sub
rclb
sub
pop
jle
jb
jae
cs
push
lcall
pop
lahf
adc
ljmp
inc
add
mov
dec
imul
lods
cmp
jge
rorb
lock
les
add
mov
das
dec
leave
insb
loop
mov
in
mov
mov
lret
xor
mov
sahf
jp
mov
mov
sbb
dec
das
dec
adc
cmp
outsl
lret
pushf
pop
bound
pusha
cwtl
inc
imul
fnstcw
pop
jae,pn
push
dec
es
out
sahf
pop
pop
call
movsb
clc
outsb
cmp
adc
je
cmpl
jmp
sbb
and
adc
ret
pop
cmp
sbb
fidivrl
dec
inc
dec
sbb
mov
jns
cli
repz
stc
pop
and
mov
insb
scas
imul
stos
lds
mov
mov
ds
jp
or
fsts
mov
inc
pop
test
and
arpl
pop
dec
in
punpcklwd
imul
pop
jmp
or
dec
mov
sarb
ficoml
push
gs
insb
fstps
shrl
or
sub
dec
inc
daa
add
and
mov
sbb
jb
cmpsb
add
jb
cmp
jb
inc
jle
sub
and
cmp
xchg
into
mov
xorl
jg
fstps
scas
test
int3
lret
mov
leave
ss
nop
sbb
xchg
and
add
push
ret
cwtl
bswap
aaa
sbb
jge,pt
sbb
cmp
or
adc
ljmp
loop
addl
shlb
and
push
stc
sbb
arpl
pop
and
sub
lret
push
out
adc
sbb
pop
push
xchg
add
nop
cli
mov
dec
daa
jnp
and
inc
je
je
and
fimull
test
sbb
fcmovbe
outsl
inc
out
les
and
jb
pop
sub
nop
adc
daa
aam
arpl
pusha
adc
sub
dec
xor
mov
ja
pop
sbb
jnp
sbb
pop
mov
jp
scas
imul
and
scas
mov
pop
imul
ljmp
xor
daa
xor
cs
dec
dec
xor
and
jg
and
ljmp
je
push
inc
push
pop
jge
jo
jmp
mov
stc
add
stos
lock
js
push
sbb
mov
out
addr16
aaa
div
das
or
or
sub
call
pop
jns
loope
or
fdivrs
aam
pop
pop
push
adc
pop
lcall
and
cmp
push
imul
mov
ficomps
sub
mov
lret
and
push
movsb
inc
repnz
addr16
ljmp
cli
mov
rcll
pop
add
pop
int
cmpsl
jae
cli
cmp
and
xor
test
xor
push
stc
je
sub
xor
cli
mov
cmpl
loopne
rcr
lds
pop
or
cs
hlt
dec
rcr
test
push
arpl
das
stc
and
cmp
aas
cmp
mov
call
lods
andb
jns
sbb
sbb
mov
clc
shrl
stos
arpl
enter
imul
sbb
and
cmp
jns
nop
pop
out
and
into
jge
jg
dec
or
mov
xor
cmp
int
inc
jne
cmp
pushf
cmp
cmp
push
xor
jae
dec
imul
mov
shlb
inc
dec
add
popa
outsl
mov
mov
inc
push
inc
or
addr16
inc
add
pushl
sarb
sub
lods
sahf
loop
imul
mov
aaa
dec
ret
adcl
loope
dec
cli
mov
jge
or
adc
test
jbe
pop
adc
push
pop
shr
into
pop
iret
sbb
je
cmp
dec
scas
shlb
pop
mov
xchg
xor
cmp
ret
jb
xchg
pop
imul
mov
int
cltd
push
fnstcw
push
mov
pop
sbb
pop
mov
jo
loopne
addr16
rolb
imul
sbb
insb
mov
pusha
jne
pop
sub
sub
hlt
ss
mov
out
push
stos
ficomps
mov
aas
jp
fwait
mov
cwtl
sarb
and
pop
push
ja
jnp
rorl
sub
cmp
out
dec
xor
test
lods
adcb
aas
mov
imul
nop
pop
dec
jg
ds
inc
mov
cmp
and
sbb
into
loop
imul
ljmp
jb
sub
imul
inc
daa
and
xor
inc
shll
jb
and
ds
pop
loop
push
sbb
cmpsb
arpl
sti
stos
incb
xchg
loop
xor
fstpt
sahf
mov
cmp
and
jp
push
cmp
xor
loop
imul
arpl
lods
in
lret
loop
mov
imul
cmp
lock
loop
jmp
and
data16
cmp
addr16
out
cmpsl
rolb
xchg
ret
push
repz
stos
and
loope
test
inc
jle
sub
sbb
mov
inc
inc
test
cmc
mov
or
mov
hlt
dec
fidivrl
push
loop
cmc
fwait
test
dec
cmpsb
arpl
in
sbb
sbb
xor
xchg
out
add
ja
jg
fwait
cmpsl
or
xor
pop
daa
aas
sub
loope
imul
repz
add
adcb
addr16
shl
jle
xlat
xor
push
dec
pop
mov
xchg
mov
sbb
mov
pop
scas
out
mov
dec
repz
rcll
leave
sub
mov
ljmp
es
ret
jnp
cmp
fwait
loopne
push
notl
and
mov
push
idiv
add
mov
shlb
mov
sub
aam
mov
scas
and
stos
out
and
ja
push
aam
fwait
arpl
shll
outsb
out
jb
push
loop
pop
imul
dec
stos
mov
pusha
adc
and
aam
rcrb
sahf
mov
and
lret
add
test
stos
addr16
mov
sbb
pop
sahf
cltd
push
mov
pop
addr16
mov
bound
ja
into
pop
hlt
sarb
pop
adc
and
aas
pop
push
pop
push
nop
fdivp
dec
jae
inc
mov
xchg
and
push
mov
push
and
lods
idivb
and
scas
js
out
les
mov
ljmp
into
cmpsl
repz
sbb
sub
cmp
sub
pop
sti
mov
sahf
dec
imul
sub
push
mov
arpl
dec
fldt
jno
jmp
push
mov
loop
lret
sbb
out
sub
test
lret
pusha
pop
xor
mov
ret
out
dec
inc
sti
adc
and
dec
stos
repnz
out
int
mov
inc
jnp
loop
cmp
push
testl
push
sub
push
test
add
lock
dec
rorl
inc
push
lcall
loop
cmp
mov
xor
or
or
bound
inc
lahf
pop
in
xchg
das
data16
arpl
bound
bound
stc
cmp
dec
sbb
push
pmulhw
clc
adc
cli
dec
push
fldlg2
ds
sub
int
sub
pop
jp
pop
imul
push
inc
cmp
push
mov
mov
jmp
xchg
jbe
fwait
push
add
mov
push
cmp
pop
arpl
push
outsl
dec
inc
fidivl
xchg
fldl
fldl
mov
or
and
roll
sbb
push
and
pop
mov
xchg
lods
pop
jnp
mov
xchg
pop
sub
gs
jbe
sbb
ficoml
sub
xchg
jbe
push
test
pop
and
jg
inc
jae
and
nop
mov
jbe
cmp
std
sbb
xchg
lea
xchg
ficompl
mov
mov
lcall
pop
cmc
pop
nop
pusha
frstor
add
mov
sbb
out
pop
outsb
fsubl
inc
jbe
inc
fbld
jg
bound
repnz
mov
jns
mov
or
mov
push
xor
or
loopne
jb
gs
faddl
fwait
jno
inc
sbb
pop
dec
sahf
xor
add
mov
dec
fcomps
or
test
ret
push
push
aam
popa
cmp
sub
cmpsl
inc
sbb
pusha
cmp
cmp
or
add
cmp
lret
xlat
out
sub
fchs
clc
cmp
arpl
daa
pop
xchg
xchg
insb
mov
loop
call
sbb
fldl2e
cmpb
inc
push
xchg
push
adc
stos
imul
fildl
inc
andb
ljmp
push
shl
imul
enter
pop
cmp
repz
imul
loop
mov
cmp
and
loop
imul
inc
pop
and
stos
cmp
and
loop
imul
inc
mov
sub
mov
sbb
push
cmp
imul
inc
loop
sub
jp
push
cmp
and
loop
imul
inc
test
shr
adc
dec
and
loop
imul
inc
cmpl
lock
mov
incb
push
dec
inc
jns,pt
push
sbb
adc
gs
adc
cli
push
lcall
and
pop
dec
mov
sbb
or
loop
imul
jmp
jno
sbb
adc
loop
imul
inc
ret
and
and
loop
imul
inc
test
sub
ljmp
imul
dec
pop
jo
sub
sbb
loop
repz
sahf
sub
call
fiaddl
inc
ljmp
or
mov
cltd
inc
jmp
cmp
imul
mov
fistpll
mov
and
loop
imul
inc
mov
cmp
loop
sahf
sub
xchg
imul
imul
inc
xchg
and
and
loop
imul
pop
gs
inc
cmp
sub
mov
pop
imul
push
loop
imul
stc
jne
shl
sub
nop
sti
cmp
jae
stos
loop
imul
inc
mov
stc
ljmp
call
stos
and
ljmp
or
jp
pushf
mov
and
loop
imul
inc
shll
repz
stos
imul
cwtl
ljmp
call
fwait
and
ljmp
ret
and
mov
jmp
and
loop
imul
inc
stos
and
loop
gs
cmp
cmp
ljmp
and
cmpl
imul
arpl
lcall
add
imul
inc
shrb
pop
jle
mov
push
cmp
and
loop
imul
inc
cmp
lock
in
mov
in
cmp
cmp
sub
xor
cmp
call
inc
hlt
and
dec
mov
jbe
imul
and
push
sbb
je
inc
filds
push
or
stos
push
ljmp
jmp
cmp
rolb
ljmp
jo,pt
add
shrb
and
mov
cli
cmp
and
loop
imul
inc
andb
ljmp
inc
imul
dec
mov
shlb
loop
imul
inc
fwait
and
cmp
shlb
cwtl
imul
mov
dec
push
cmp
and
loop
imul
inc
mov
sub
clc
cmp
imul
or
ds
imul
pop
jp
pop
pop
push
outsl
mov
xchg
scas
jmp
jb
cmp
cmp
sbb
mov
outsb
cld
or
cltd
mov
sti
idivb
daa
jne
cli
xor
dec
cmpsb
pop
insb
xchg
jb
inc
data16
push
jb
push
jo
and
andl
sbb
addr16
mov
ficoms
add
sub
jb
sbb
bound
out
push
xor
pcmpgtw
sbb
cmp
cmp
push
imul
push
insb
mov
mov
lahf
rclb
jnp
ret
addb
lods
call
push
mov
ret
inc
sub
mov
add
add
das
fs
jp
add
ffree
and
pop
cmp
pop
dec
cmpsl
stc
outsb
pop
cli
data16
adc
push
jl
push
and
xchg
pop
push
push
mov
add
lcall
jg
out
push
mov
sub
xchg
stos
mov
adc
add
sub
data16
sbb
mov
insb
add
lcall
test
push
jne
pop
jnp
xlat
in
xchg
lock
pusha
stos
sbb
xor
rcr
and
add
mov
cltd
cmpsb
jmp
mov
sub
enter
daa
inc
adc
ljmp
pop
jge
jle
push
sub
pop
loope
jmp
ljmp
push
lds
loop
jb
mov
insb
jg
jb
stos
pop
mov
pusha
and
insb
mov
sub
inc
push
lds
lods
ljmp
sti
mov
ret
stos
ss
aaa
out
xchg
enter
dec
je
pusha
ss
pop
push
jae
lret
mov
movb
push
js
in
bound
xor
mov
insb
sbb
cmp
sahf
pop
push
mov
fs
int3
jne
movsb
xchg
mov
stos
lret
int3
mov
push
js
or
dec
jecxz
cmp
je
stos
inc
popf
jo
and
lret
jo
andl
mov
or
or
out
ret
sbb
iret
push
push
sbb
xchg
jmp
sti
pop
arpl
jmp
into
in
adc
loop
lcall
out
pop
in
aaa
mov
cmpsb
andl
add
sub
cmpsb
imul
or
xchg
xchg
cli
iret
dec
lea
dec
sub
out
int
fisubs
jbe
mov
xchg
mov
dec
es
and
mov
mov
mov
dec
xchg
mov
jnp
ds
and
inc
lret
popa
push
in
mov
jnp
push
mov
dec
dec
aas
movsb
dec
mov
mov
sahf
icebp
push
push
imul
inc
iret
and
fcmovnu
outsl
call
xchg
xchg
fisubl
inc
sbb
rcr
dec
sbb
fstpl
cmp
jp
push
pop
mov
je
push
movsb
pop
or
sbb
or
jmp
and
mov
cmp
xchg
jmp
and
mov
ds
out
lahf
fimull
ficompl
outsb
lods
aam
fs
test
mov
xor
jmp
mov
and
cltd
jmp
jl
in
mov
cmp
int
in
jnp
addr16
call
lock
subb
sbb
out
fnstenv
push
mov
mov
jns
aas
xor
out
jmp
and
mov
cmp
jle
push
ficoms
ja
cmp
test
and
stos
sub
mov
or
cmp
fs
adc
xor
jecxz
jmp
out
pop
and
cltd
aas
iret
fcomip
imul
xchg
aam
jecxz
arpl
fidivl
shrl
mov
fdivl
orl
out
adc
adc
mov
scas
iret
roll
and
ja
sbb
in
xlat
in
or
push
xchg
mov
lods
push
ljmp
adc
fwait
ret
xchg
shl
xor
sbb
sbb
jo
ret
leave
scas
cmpsl
aam
cmp
mov
jl
out
scas
xor
pusha
ds
outsb
sti
jecxz
adc
sub
sbb
push
fwait
scas
in
xchg
adc
jp
mov
test
aas
push
xchg
test
and
adc
data16
lcall
je
imul
lret
sbb
mov
mov
xor
arpl
dec
xor
sub
loope
jae
add
adc
jl
fsubp
mov
push
js
jl
sbb
ret
stc
aas
push
sbb
ja
fisubs
pop
add
les
and
ljmp
mov
jb
xor
add
out
sbb
dec
push
stos
cmp
out
dec
sbb
or
dec
and
push
scas
arpl
inc
and
sbb
cmpsl
cmp
inc
adc
je
mov
dec
daa
sti
cmp
test
ljmp
daa
scas
jecxz
push
or
and
mov
loopne
push
mov
test
fcompp
mov
xchg
or
add
adc
mov
mov
out
jp
push
sahf
jg
rcl
mov
outsb
dec
imul
rcrb
fsts
popf
ret
outsl
dec
xor
cltd
cmp
jl
cs
mov
insb
pop
mov
and
adc
popa
xor
in
decl
clc
scas
add
sbb
push
inc
pop
jne
mov
and
jae
insb
jp
jp
cmp
fstpt
mov
mov
shl
aam
push
dec
xor
ret
pop
out
inc
adcb
sub
cld
lock
jmp
or
pop
mov
loop
cmp
decb
mov
jle
imul
jae
imul
sbb
stc
lahf
sub
aas
adc
pop
add
mov
mov
scas
outsb
lock
push
gs
jb
mov
movsl
mov
imul
jno
insb
out
sub
or
inc
xor
xchg
cwtl
out
mov
cmp
js
inc
into
xor
cmp
sbb
mov
xor
fidivrs
sbb
cmp
push
xchg
pop
pop
jmp
inc
cmp
js
push
pop
mov
stos
mov
inc
outsl
pop
xor
scas
cmc
ret
cltd
scas
sti
or
cld
and
dec
inc
cwtl
loopne
mov
das
mov
and
dec
cmp
ja
pop
cmpsl
pop
add
pop
or
lds
sbb
push
outsl
rcrb
imul
stc
add
fimuls
and
xor
pushf
gs
add
daa
xor
adc
rorb
scas
imul
jne
jno
xchg
ret
hlt
and
insb
clc
lock
mov
add
mov
mov
fwait
aas
mov
arpl
out
push
pop
dec
jbe
xor
ja
fidivrl
mov
jb
mov
mov
or
cltd
mov
jmp
push
cmp
cmpsb
fwait
pop
sbb
dec
push
jns
push
xchg
xchg
push
mov
fisubs
sbb
push
push
add
push
imul
shl
out
stos
into
imul
jle
xchg
cli
inc
into
dec
shr
dec
xor
in
sti
je
ret
and
mov
test
adc
rcrl
fwait
push
mov
push
les
cmp
pop
mov
fisubrl
push
shl
mov
dec
fwait
inc
add
and
jg
jne
stos
push
pop
push
sbb
ljmp
adc
xor
repnz
dec
int3
inc
stos
lcall
sbb
cwtl
sbb
jbe
xchg
stos
and
sbb
popw
mov
insb
testb
mov
sub
loopne
mov
push
jo
or
pop
cmpsb
fs
jb
mov
jnp
sbb
scas
inc
cs
in
mov
sbb
jo
test
fisubs
sbb
sub
sbb
cmpsl
stc
cmp
jp
jge
ret
pop
add
fwait
mov
sub
cli
push
jp
js
outsb
ficoms
jbe
pop
out
cmp
je
sub
adc
push
jg
sbb
and
pop
xlat
stos
mov
fidivrs
aad
repz
js
out
sbb
push
dec
mov
push
clc
add
cmp
mov
jno
dec
dec
pop
into
pop
imull
dec
pushf
pop
lret
sbb
je
int
dec
imul
shrb
mov
push
pushf
pop
sbb
ficoml
add
stc
notb
insb
xchg
fisubrl
dec
je
scas
repnz
jg
lret
sbb
imul
cmp
mov
call
sub
mov
push
cmp
sub
mov
mov
pop
push
mov
lods
mov
inc
pop
lds
pop
stos
jo
insb
aad
add
loop
pop
cmp
sbb
push
xlat
icebp
xchg
test
test
push
ret
pusha
dec
cli
jp
mov
int3
and
cwtl
adc
pop
adc
push
mov
sbb
mov
cmpsb
or
loop
cltd
pusha
clc
and
sub
aaa
imul
adc
stos
shl
sbb
ss
pop
stc
arpl
pop
xor
ret
pop
aas
es
xchg
jmp
dec
imul
daa
add
fistpl
testl
int3
push
popa
sub
rclb
inc
jno
mov
or
sub
sti
mov
xor
ret
sbb
mov
xchg
stos
pusha
mov
dec
aaa
dec
jb
and
cmp
mov
insb
fnsave
inc
inc
inc
cmp
xor
dec
arpl
mov
add
cli
sti
ficoms
mov
xor
lret
push
push
aam
jp
aas
lea
mov
sub
dec
lret
fwait
pusha
xchg
test
xchg
fisubrl
adc
sbb
cmpsl
fildl
fs
lcall
ds
cmp
stos
or
mov
pop
and
sbb
popl
sahf
mov
lret
and
stc
jle
arpl
mov
and
jmp
push
dec
dec
insl
xchg
ljmp
cmp
es
adc
lds
pop
cmc
nop
push
pop
call
stc
mov
arpl
push
fs
loopne
inc
push
pop
insb
cmpl
and
bound
pop
gs
adc
push
and
sbb
sbb
push
mov
cltd
mov
mov
andl
fimull
into
lds
push
push
iret
and
pop
and
stos
shlb
out
cltd
vcvtpd2psx
cmpsl
mov
pop
lret
mov
push
cld
jl
jle
and
fisubrl
mov
lret
std
ljmp
and
jno
icebp
ljmp
lret
cli
inc
push
cmp
push
adc
out
adc
cli
sti
add
xchg
insl
mov
mov
push
xor
inc
scas
adc
mov
fldt
daa
das
cltd
leave
popf
mov
inc
mov
push
adc
pop
cmp
jp
push
pop
insb
negl
push
mov
push
dec
scas
xlat
daa
rcr
test
dec
jno
inc
ljmp
out
or
dec
xchg
out
cltd
fidivrl
mov
ljmp
stos
push
and
cmp
inc
push
popfw
vpsllq
notb
cltd
mov
cmp
and
push
sub
mov
inc
test
outsb
loop
xchg
cmp
add
imulb
or
test
xchg
inc
mov
jns
xchg
or
pop
push
jae
lcall
jnp
les
push
mov
pop
push
inc
jb
shlb
cmp
xchg
loop
js
cli
stos
pop
in
add
and
mov
push
inc
mov
pop
loopne
aad
cmp
lcall
xorl
out
push
pop
sub
xchg
std
and
fsubrl
scas
hlt
inc
mov
lret
cmp
xchg
in
and
push
inc
xor
js
mov
arpl
jne
loop
pop
dec
into
cmp
xor
arpl
mov
fidivl
insb
mov
sarb
clc
cmc
jae
add
ret
jb
dec
and
sbb
jle
arpl
pop
adc
das
add
cmp
insl
std
cwtl
pop
and
ljmp
stos
sub
dec
mov
ljmp
ficoms
mov
cld
push
sbb
daa
loopne
addr16
lcall
sarl
push
negb
ljmp
fidivl
mov
popf
push
scas
xchg
es
frstor
out
and
aad
jl
enter
mov
fisubrs
stos
scas
inc
cli
xchg
cmp
pushf
fidivrl
scas
notb
js
pop
ss
mov
lds
cmp
sbb
mov
xor
das
xchg
push
nop
test
add
add
pop
cmp
pusha
sbb
pop
cmp
sbb
add
push
push
or
sbbb
cs
mov
test
pop
sbb
sbb
popa
jl
push
jo
and
push
insb
xor
mov
pusha
test
movsl
arpl
je
inc
fildl
xor
fistpl
imul
daa
arpl
adc
gs
dec
mov
pop
test
in
mov
outsl
sub
push
sbb
adc
gs
xchg
pop
jmp
rclb
mov
cmp
pusha
dec
pusha
cli
repz
mov
sbb
inc
inc
popf
push
popf
cmp
mov
inc
pop
hlt
bnd
push
ficompl
cld
and
cmpsb
xchg
dec
idivl
mov
sarl
jecxz
add
or
testl
sbb
ficompl
mov
sbb
imul
mov
push
mov
fisttpl
test
jle
stos
add
mov
jmp
mov
fidivrl
mov
mov
popf
pop
sahf
lds
stos
nop
push
dec
add
xchg
mov
es
outsb
loopne
sub
cmp
add
inc
cs
gs
sbb
ss
sub
fstpl
and
jl
push
movsl
push
sub
in
mov
icebp
fisubl
sahf
jecxz
dec
inc
mov
xchg
mov
testl
stc
sbb
aas
aad
sti
cmp
cmp
dec
push
xchg
stos
inc
xor
lock
cmp
fs
mov
mov
sbb
test
jo
xor
arpl
je
sahf
in
jns
push
loopne
pop
sbb
scas
mov
mov
jmp
xchg
mov
cmp
xchg
sbb
sbb
inc
imul
push
cs
jae
into
bound
sub
push
pop
shrb
jg
mov
xor
dec
or
or
loopne
xchg
xor
cmp
loop
xor
and
xlat
xchg
insb
add
rep
in
mov
cwtl
testl
inc
scas
and
adcl
lea
lret
mov
sub
mov
inc
adc
mov
cmp
arpl
js
mov
filds
rorl
sub
or
mov
jecxz
sahf
add
mov
lds
and
adc
pop
sub
push
add
and
ljmp
xchg
cmp
xchg
push
pop
push
pop
sub
add
dec
sub
sbb
pop
mov
call
xchg
cmpsb
pop
imul
lods
fisubrs
cmp
cli
cmp
arpl
icebp
pop
imul
iret
or
inc
test
dec
or
cmp
xchg
in
outsb
jbe
or
xor
push
fwait
cmp
adcl
xor
mov
mov
dec
push
xchg
cmp
dec
jp
leave
xchg
out
xor
bound
lds
pop
in
mov
inc
bound
dec
pop
mov
test
pop
xchg
jne
dec
ss
scas
nop
pop
pop
jo
cli
scas
xlat
jno
pop
jns
cmp
insb
xchg
cli
inc
xchg
jle
jg
ja
push
inc
gs
ret
jmp
or
jns
popa
rcrl
daa
pop
mov
data16
popa
add
shll
into
or
jg
sub
inc
gs
and
mov
cmc
jecxz
dec
sti
and
test
jmp
cli
lret
daa
sbb
inc
sbb
add
stc
dec
cltd
fdivr
dec
cli
outsl
push
add
dec
daa
bound
cli
inc
aaa
mov
in
ds
adc
loop
pusha
fisubrl
sub
lret
xchg
stos
xchg
pop
dec
mov
outsl
leave
mov
insb
out
stc
shlb
dec
xlat
negb
js
inc
ficompl
pusha
and
push
adc
pop
inc
lret
lea
ja
pop
cmp
movsl
fsts
mov
and
push
mov
sbb
sbb
sub
stc
pop
adc
leave
pusha
ficompl
and
pop
dec
insb
dec
stc
mov
fcmovb
mov
mov
pop
bound
mov
sbb
lcall
std
ret
test
push
or
mov
in
sbb
inc
ret
stos
jb
hlt
fs
stc
inc
je
in
insl
movsl
loop
enter
dec
call
and
test
outsb
mov
pop
push
imul
cmpsb
jo
mov
jbe
ds
dec
mov
scas
ds
jecxz
push
test
icebp
inc
in
and
jle
stc
repz
out
pop
imul
dec
pushf
ds
stc
and
je
aad
jecxz
ds
insb
push
or
fisubrs
ljmp
call
bound
mov
cmp
jo
and
mov
inc
xor
jno
lock
dec
aas
mov
scas
fmul
imul
jg
mov
ret
pop
mov
mov
cld
add
fidivrl
xchg
lds
icebp
lret
mov
cwtl
sbb
mov
push
sub
sbb
int
sub
fstpl
in
jnp
xchg
adc
add
popa
adc
gs
sub
inc
add
repnz
movsb
stos
inc
jb
sbb
jecxz
iret
aas
mov
aaa
inc
xacquire
sti
dec
loopne
lahf
icebp
add
cmp
cmp
dec
movsl
clc
ljmp
fcompl
mov
aaa
insb
fs
xchg
lea
cmp
xor
das
ljmp
out
cli
hlt
in
mov
dec
lret
pop
xchg
cmp
fsubs
gs
fs
inc
lods
arpl
fwait
dec
outsl
in
shlb
jl
mov
xor
insb
in
mov
inc
sub
js
mov
pop
adc
fs
fwait
mov
cmpsb
mov
or
fidivs
jne
mov
cltd
popf
or
pop
cli
rclb
out
dec
xor
push
push
sbb
sub
dec
mov
iret
daa
pop
inc
sbb
mov
rolb
mov
cmp
mov
dec
mov
jne
jle
fcmovnu
imul
std
add
ret
xor
scas
fidivrs
scas
mov
dec
mov
jno
cli
pop
jns
xchg
pop
and
mov
insb
or
push
fisttpl
in
ret
inc
mov
cmp
les
mov
and
jb
punpckhdq
cmp
jne
cmp
mov
and
inc
adc
pop
push
das
dec
fstpl
inc
dec
push
arpl
mov
or
dec
ds
ljmp
dec
push
cmp
loope
sarb
repz
cli
pop
or
cmpsb
das
mov
fisubl
cmp
push
mov
ret
xchg
push
mov
inc
pop
ja
push
cmp
mov
subl
inc
push
mov
and
out
andl
ds
adc
out
jmp
aam
sti
inc
stos
inc
pop
fs
sbb
xor
push
cmp
in
jp
mov
pop
cmc
mov
loop
scas
push
nop
dec
es
jmp
adc
mov
in
dec
and
or
mov
clc
jae
or
out
push
addr16
sub
pop
fisttpl
cmpsb
int
adcb
sbb
jg
lock
stos
mov
push
add
hlt
mov
ja
insb
push
divb
sbbb
add
mov
inc
imul
mov
aas
pop
mov
push
movsb
es
jns
push
insb
aas
or
cmp
fidivl
inc
fs
push
mov
fneni(8087
stos
add
je
sbb
pop
pop
ja
xchg
jp
push
jl
lret
dec
aad
roll
out
out
dec
rcl
mov
les
cmp
js
hlt
fidivrs
imul
mov
cmp
pusha
scas
aas
dec
push
lcall
jne
cmpsb
and
xchg
fucom
xor
push
rorb
lahf
cmp
fisubrl
jmp
xor
cmp
fisttpll
push
scas
push
stos
sbb
jle
ret
cmpsb
lds
pop
cmp
jno
lods
lret
xchg
push
push
mov
sbb
xchg
stos
xchg
inc
mov
mov
cs
pop
sbb
dec
mov
sti
scas
xor
jbe
ficomps
cmp
add
lret
pop
lea
mov
mov
lcall
js
xor
sbb
mov
insb
pop
sti
xchg
ss
fildl
popf
rclb
lcall
sbb
inc
pop
push
pusha
pop
sub
inc
add
inc
lea
sub
cli
mov
bound
arpl
or
jecxz
out
and
adc
leave
test
push
fidivl
aaa
adc
int
stos
pop
sub
cmp
jge
cwtl
rcl
fsubrp
pop
mov
mov
push
lcall
mov
fs
lret
xor
adc
outsl
insb
repz
push
test
mov
lret
inc
lds
jb
ret
cmp
call
movsl
int3
loope
fs
cmpsl
xchg
or
mov
bound
rorb
or
std
pop
test
xchg
mov
mov
mov
push
cwtl
jg
icebp
fwait
ja
sahf
cmp
aad
es
xchg
clc
inc
pop
hlt
lds
sbb
cmpsb
sbb
cli
daa
faddl
outsl
aaa
jae
jno
sub
push
push
xchg
or
push
adc
and
adc
sub
pusha
xchg
jg
cmp
xor
dec
inc
test
mov
sbb
dec
je
jp
and
sub
sbb
mov
pushl
and
sub
lret
inc
roll
lahf
inc
insb
out
mov
xchg
push
xchg
jle
pop
jne
cmpsl
lock
es
loope
xor
dec
cmp
lods
pop
sbb
cmpsb
popa
mov
or
and
jp
pushf
insb
xchg
jp
push
aas
gs
aaa
neg
aad
int3
cmpsb
add
cmp
jo
cld
shrb
sub
scas
xorb
repz
mov
mov
fbld
pop
stos
mov
dec
dec
clc
push
cmp
scas
ja
loop
in
jp
out
popa
popf
lret
jbe
add
xor
inc
cmp
clc
shl
stos
sub
sub
stos
xchg
xor
test
mov
adc
push
lock
add
cmp
sbbb
adc
inc
xchg
pop
push
xor
mulb
inc
pusha
lds
cmp
ret
out
jmp
pusha
daa
adc
sub
mov
mov
lods
jecxz
ss
cmp
sbb
push
xchg
bound
imul
pop
jmp
inc
mov
stos
int
cmpsb
orb
nop
int3
loopne
lods
int
sbb
dec
inc
es
dec
repnz
je
imul
es
lret
out
movsb
cli
inc
mov
cmp
xor
cmp
fbstp
dec
adc
mov
imul
fwait
add
mov
cmp
push
je
inc
loopne
adc
wbinvd
mov
sbb
adc
mov
cmp
fisubl
or
outsl
inc
mov
ss
sub
test
cmp
pop
xchg
or
cwtl
and
scas
and
mov
push
sub
or
xor
je
mov
push
add
or
mov
lock
pop
mov
mov
dec
js
lret
fldenv
repnz
pushf
ficoms
and
xor
push
or
push
jns
and
lods
xor
jo
pusha
aam
mov
mov
leave
push
xor
pusha
ret
es
les
sbb
in
push
scas
sbb
mov
outsl
subb
xlat
scas
or
xchg
sbb
push
xchg
xor
jne
push
pop
dec
inc
scas
push
pop
sbb
jbe
aas
sbb
popa
stos
inc
mov
jmp
sub
mov
cmpsl
push
mov
cmp
lds
mov
push
mov
and
dec
outsl
jl
js
and
mov
push
imul
jmp
scas
jmp
dec
cmpsb
fnstenv
popf
jo
inc
test
ds
cmp
enter
mov
mov
sub
and
rclb
jbe
mov
jns
mov
sub
repnz
clc
sub
scas
into
jl
sbb
inc
add
mov
adc
mov
faddl
xor
push
pop
iret
mov
pop
repnz
aad
ss
lcall
lcall
pop
imul
or
test
add
lea
or
adc
cmp
dec
mov
push
xor
mov
xchg
mov
scas
mov
add
ljmp
repz
rolb
or
sbb
lock
lcall
sub
in
cmp
daa
dec
xorl
frstor
cmp
add
stc
popw
dec
cmp
out
lds
jae
mov
sbb
cltd
in
jl
arpl
push
fwait
xlat
iret
pop
cmp
daa
addl
mov
insb
outsl
or
push
lods
jp
or
inc
xchg
lods
out
mov
test
sbb
xor
jno
pop
ljmp
imul
arpl
out
inc
pop
imul
sti
std
lock
xor
notb
cmp
bound
mov
push
fnstenv
add
mov
lcall
push
std
cmp
enter
fisubrl
arpl
mov
adc
fcmove
in
in
pop
bound
cmp
pop
loope
sbb
aam
faddp
lcall
fists
into
enter
push
pushf
pop
cmp
insb
rcr
pushl
cmp
daa
jbe
repz
jae
jge
aas
imul
fidivl
xchg
stc
xor
cmp
lea
cmpb
lds
mov
jbe
xchg
jo
shrb
dec
and
lds
fcmovu
jns
pop
mov
lret
push
and
dec
and
pop
pop
movsl
pop
xor
in
stos
push
push
lock
dec
lods
mov
jns
inc
cltd
je
mov
cwtl
jmp
in
xchg
fwait
cltd
pop
ret
stos
loop
out
shll
es
add
mov
cld
in
stc
push
mov
mov
jmp
mov
inc
repz
jns
ljmp
inc
pop
sub
rep
inc
push
xchg
std
dec
mov
out
cld
ficompl
add
sub
fdivl
and
in
mov
sarb
mov
dec
xchg
mov
pusha
xor
xor
mov
js
pop
mov
push
mov
or
add
test
addb
mov
jno
rolb
fldl
lock
cld
and
push
cli
pop
pusha
ds
mov
jecxz
mov
xchg
out
and
and
push
movsb
call
xchg
and
jb
push
pop
fnstcw
lret
jo
inc
fs
xor
xchg
js
push
dec
stos
scas
add
sbb
daa
cld
dec
cltd
ja
in
sbb
and
sbb
cmp
and
jl
mov
jmp
neg
cmpsb
mov
lret
or
rorb
ja
inc
sub
sub
cmp
sbb
xchg
jmp
jecxz
aaa
adc
jg
xor
lods
out
adc
sbb
push
pop
cwtl
pop
fisubl
xchg
xchg
pop
dec
fs
dec
cmp
push
inc
jbe
jne
mov
icebp
push
mov
movb
xchg
out
sub
lret
pusha
sub
mov
mov
leave
jp
add
xchg
lds
jnp
shl
in
jae
and
and
sbb
pop
gs
pop
lret
jno
push
scas
ds
adc
lods
mov
mov
cli
xchg
mov
clc
pop
icebp
data16
fstp
aam
sbb
push
pop
leave
push
inc
popa
inc
pop
clc
sbb
xchg
enter
fnstenv
pop
pop
inc
imul
je
mov
add
pop
roll
xor
arpl
repnz
add
xor
xchg
push
out
out
inc
sbb
ljmp
bound
xor
fistpl
inc
inc
and
jp
mov
cmp
mov
ret
jp
push
inc
test
repnz
push
sbb
fnstenv
push
sahf
push
jg
xchg
sbb
push
adc
mov
lcall
push
sti
sbb
add
dec
cmp
je
insb
push
out
das
mov
cmp
sarl
add
jne
sbb
xor
cli
pop
add
dec
movsl
es
loop
sub
adc
insb
sarl
shlb
mov
into
cmp
out
and
jg
push
add
sbb
into
inc
push
aaa
outsl
pop
lret
bound
out
sub
add
data16
cmp
cltd
imul
add
adcb
xchg
push
daa
push
mov
lods
outsl
mov
mov
mov
cmp
stc
cltd
aaa
push
daa
dec
lahf
pop
ja
or
int3
imul
stos
out
xchg
push
into
pop
xor
adc
call
mov
cmpsl
cmp
dec
cli
mov
test
leave
popa
push
xor
cmp
and
decb
arpl
mov
in
cmp
lds
in
mov
out
mov
mov
push
movsl
sbbb
adc
push
xchg
jb
out
xchg
mov
inc
xchg
hlt
sub
sahf
adc
push
mov
cmp
lds
aam
lret
stos
push
push
mov
idiv
xlat
jnp
and
and
out
mov
lret
add
divb
leave
daa
and
aad
rolb
or
xchg
xchg
gs
dec
fwait
lea
mov
or
inc
adc
ss
sti
sbb
fidivl
imul
sbb
inc
fidivl
adc
and
fwait
inc
jmp
jno
loop
push
mov
js
cmpsb
test
fbld
cmc
xor
pop
fs
les
sub
mov
adc
popa
loopne
pusha
jae
xchg
scas
pop
mov
aad
hlt
cmp
mov
imul
cmp
out
jbe
pop
cld
sbb
imul
scas
test
fwait
imul
sub
es
insb
clc
loopne
aad
cmp
or
and
jecxz
cli
lock
arpl
call
daa
shl
pop
filds
mov
daa
push
jb
mov
stos
cld
divl
cmp
inc
jnp
dec
enter
mov
ljmp
add
cmp
mov
pop
lret
mov
sub
xor
push
ljmp
aaa
sub
sahf
mov
inc
push
pusha
cwtl
cltd
mov
popfw
xchg
or
sub
repz
cmp
jae
jp
mov
cmp
aas
add
icebp
out
mov
ljmp
lahf
stos
mov
das
imul
sahf
dec
or
sar
iret
icebp
xor
inc
stos
adc
xchg
outsl
test
imul
adc
mov
mov
notb
or
cld
sbb
mov
or
insb
xchg
or
mov
aaa
nop
outsb
fadd
jbe
shrb
sub
jns
jbe
cltd
push
xlat
fisubs
inc
rcl
leave
push
les
sub
sub
inc
cld
insl
lret
call
push
sbb
adc
inc
pop
out
mov
es
call
sub
cmp
shll
int3
decl
adc
cli
jo
mov
gs
cmp
sti
mov
imul
jns
fstpt
jge
pop
sbb
scas
outsb
jmp
lods
push
and
scas
dec
push
mov
out
cmp
test
sti
xor
mov
sub
je
arpl
mov
cld
xor
test
sbb
xchg
fldl
cmp
jb
lahf
pop
cmp
outsb
fstp
jb
or
je
in
ficoms
insb
fwait
insb
xchg
incb
mov
pop
sub
repnz
lcall
js
lea
or
ljmp
inc
test
mov
and
pop
stos
orb
ficoml
incl
pop
mov
push
into
daa
xor
das
out
out
and
dec
pop
popl
mov
mov
xor
pop
and
js
es
out
cs
mov
ds
stos
ds
inc
add
pop
jae,pt
repz
ja
sub
sbb
adc
pop
mov
and
mov
push
ja
je
mov
inc
mov
popf
sahf
pop
mov
cli
scas
icebp
xchg
vmovapd
popa
cmp
jbe
mov
test
inc
xchg
push
daa
sbb
daa
inc
bound
stc
adc
rorb
push
ljmp
lcall
jp
int
jmp
inc
cmp
cmp
jmp
jbe
jecxz
sbbl
and
mov
cmp
push
bound
jnp
push
push
sub
arpl
dec
fidivs
repz
stc
mov
mov
sbb
insb
je
fbld
push
rcrb
and
repnz
cli
lcall
pop
out
or
mov
mov
and
xor
sti
fisubrs
mov
sub
bound
loop
rolb
lcall
adc
mov
jns
add
imul
sub
xchg
cld
insb
push
gs
gs
arpl
mov
lret
sub
filds
inc
mov
inc
test
aas
mov
jle
mov
jg
pushf
shrb
adc
in
call
cmp
adc
xchg
vpaddw
out
add
jmp
negb
inc
scas
pop
push
lock
pop
hlt
cmp
popa
and
mov
mov
xor
xor
push
out
lods
pop
pop
ret
ds
mov
jl
stos
adc
fnstsw
push
jecxz
and
adc
jecxz
arpl
mov
ds
and
xlat
clc
pop
loop
mov
mov
outsl
lret
adc
or
xlat
outsb
push
lret
pop
mov
mov
ds
cmpsb
sub
and
loopne
test
mov
push
ret
test
cs
ds
pusha
daa
mov
pop
jmp
loopne
fld
lds
inc
inc
stc
stos
xchg
mov
and
insb
or
xchg
ds
and
or
pusha
ret
mov
popa
lret
loop
shrb
lds
cmp
fs
scas
fdivp
or
clc
out
sbb
shlb
cwtl
jb
xchg
inc
cltd
pop
jle
or
testb
pusha
clc
dec
dec
xchg
lcall
fiaddl
jns
mov
sbb
adc
push
insb
sub
xor
das
popf
fisubs
lods
cltd
shlb
hlt
test
dec
cmp
adc
popa
add
loop
ja
mov
add
xchg
xchg
stc
mov
scas
mov
fwait
mov
cmp
test
jmp
ja
dec
push
inc
push
push
into
and
pop
dec
cli
imul
xchg
jle
sub
mov
pusha
push
dec
cs
ds
mov
not
cmp
jno,pt
sbb
ret
jne
divb
add
stos
jmp
xchg
mov
fldenv
mov
testb
sbb
xor
inc
xor
aam
and
ficoms
dec
vpandn
mov
lcall
lds
or
mov
push
push
int3
mov
mov
fadd
dec
jb
shlb
and
leave
cmp
xchg
xchg
push
ja
testl
adc
ss
test
pop
jo
xchg
outsb
push
push
mov
xchg
test
popf
and
sub
adc
mov
pop
sub
pusha
mov
mov
jbe
fnclex
xorb
push
adc
movsl
test
sub
repz
imul
in
adc
int3
dec
cmpl
bound
pusha
inc
pop
sarb
ret
ret
jecxz
mov
mov
std
xor
lock
out
xchg
clc
dec
mov
inc
cs
addr16
frstor
mov
jne
cmp
mov
mov
fldt
dec
inc
push
cmp
shrb
ret
mov
clc
cs
arpl
aaa
push
mov
xchg
cvtdq2ps
pushf
frstor
cmpsl
lcall
enter
push
sbb
mov
sub
lods
fisubs
pop
dec
jg
pop
mov
sub
lds
ficompl
cmp
std
sbb
or
mov
sub
inc
test
imul
scas
pop
sbb
aad
xor
inc
jns
sbb
insb
fstl
cld
mov
iret
push
fwait
jo
fmul
jnp
lea
stos
nop
js
lret
push
rcrl
call
or
rcr
add
inc
jo
dec
mov
sub
inc
mov
cmp
aam
push
rol
push
daa
movsl
iret
stos
test
arpl
cvttps2pi
pop
leave
xchg
lret
jmp
xchg
out
push
lods
and
fbstp
bound
jne
and
push
cmp
aaa
xor
jns
lret
daa
push
dec
sub
loopne
mov
aaa
aaa
and
mov
dec
add
mov
jnp
adc
ljmp
add
es
nop
enter
cli
mov
or
pop
fidivl
jns
jmp
cmp
jle
sub
dec
mov
cmpl
outsb
jnp
addr16
jbe
jnp
push
mov
sahf
pop
loopne
imul
cmp
dec
cli
lcall
cmp
jns
or
cli
js
jmp
adc
cmp
imul
push
mov
cltd
sub
sti
push
fidivrs
mov
jle
ret
jae
loop
mov
scas
lcall
cmp
mov
es
ficoms
repnz
aam
and
cmp
xor
cmpsb
sub
jb
js
loopne
loope
enter
fimuls
rclb
push
pop
mov
aas
mov
mov
lret
stos
ljmp
mov
jae
sbb
dec
push
mov
jnp
cmp
jmp
cmp
cli
dec
mov
fwait
push
sub
jbe
addr16
or
popa
jp
ds
adc
mov
jno
loopne
fstpt
insb
cs
jbe
jnp
jbe
mov
cli
pop
add
imul
sbb
fisttps
jb
jbe
pop
dec
sti
addr16
loopne
fildl
jmp
dec
mov
in
jg
fwait
jb
push
push
mov
pop
sarb
js
je
jmp
push
inc
mov
push
imul
and
cmp
jns
jo
dec
cmp
add
fiaddl
arpl
xchg
fwait
dec
cwtl
or
jns
daa
mov
sbb
bound
push
mov
sahf
cmp
add
jno
stos
pushf
mov
or
mov
scas
push
ficompl
sbb
mov
add
mov
sar
scas
add
inc
repz
dec
xor
or
ljmp
lcall
pop
jp
mov
jnp
jne
sti
pushf
mov
sub
jb
sbb
fimull
pop
mov
mov
mov
add
inc
or
push
std
push
scas
or
mov
sar
inc
fwait
push
pushf
jae
inc
mov
sbb
inc
adc
xchg
pop
jne
cmp
push
insb
xchg
jnp
push
cli
cmp
cmp
loopne
sub
jp
testb
les
stos
test
mov
lret
out
lcall
push
pop
adc
jbe
stos
push
push
clc
dec
jno
scas
mov
mov
daa
dec
and
cmp
insb
aas
movsl
dec
xor
jbe
addr16
jmp
in
fimull
dec
jae
lret
mov
inc
aaa
fwait
in
cmp
xor
pop
and
adc
mov
xchg
es
imul
dec
add
push
cmpsb
addr16
cmp
mov
mov
fwait
js
jno
inc
mov
mov
cli
cmp
fldt
xchg
and
cmp
cmp
or
push
outsb
insb
jp
aaa
adc
insl
ss
cmpl
mov
scas
cltd
mov
sti
and
cmp
out
or
lea
jo
or
cmc
fbld
mov
fwait
sbbb
inc
rcrb
ds
jne
sub
out
test
jecxz
pop
add
inc
jg
stos
pop
push
pop
dec
cmp
imul
add
lods
jbe
hlt
ljmp
dec
ss
mov
aam
popa
movsb
mov
pusha
scas
or
ficoml
inc
inc
fcompl
mov
pusha
repz
je
and
cli
loope
pusha
adcl
iret
jbe
pop
lds
notl
mov
xor
ret
aaa
in
mov
jb
jg
fstpl
jns
jo
test
aas
pop
or
insl
jbe
jno
std
mov
jae
lcall
fildll
jge
sbb
adc
add
aaa
xorl
arpl
pop
cmp
jecxz
mov
insb
or
xor
pop
insl
mov
pop
fwait
int
out
outsb
shrb
inc
ds
fldt
sbb
xchg
outsb
xchg
daa
outsl
fisttpll
sarb
cmp
cmp
ljmp
jg
fsubl
adc
pop
xchg
mov
adc
ret
cltd
sbb
add
les
or
inc
lods
fnstenv
jle
into
jae
adc
test
inc
jne
lds
addr16
cli
call
pop
xor
iret
push
bound
mov
orl
fldenv
fcomip
pop
adc
popa
iret
sbb
jae
pop
ret
popw
inc
push
mov
test
adc
xchg
das
and
jae
jno
cmp
pop
ficompl
into
mov
lret
cmpsl
sub
sbb
inc
cwtd
mov
mov
xchg
cs
fiadds
hlt
push
sbb
ds
push
xor
fcompl
cld
inc
fwait
mov
movsb
stos
dec
in
mov
pop
inc
jo
dec
mov
outsb
and
sbb
mov
ret
cli
inc
outsb
push
or
lret
fdivl
loop
sub
sti
mov
fnstenv
outsb
push
imul
popf
xchg
jecxz
pushf
mov
fistpll
ljmp
out
mov
cmp
sbb
rcrb
inc
xor
push
mov
scas
jmp
dec
inc
outsb
vpsrlw
push
and
fidivl
scas
cmp
imul
cmp
lahf
and
cmp
mov
popf
scas
jbe
jno
adc
push
outsl
pop
inc
cli
mov
out
pop
lcall
mov
xor
mov
xlat
cltd
das
mov
add
pop
rep
inc
fldl
adcb
jnp
cmp
stos
and
push
sbb
sarl
pop
fwait
bound
jg
mov
dec
mov
or
xor
add
pop
jnp
insb
pop
ds
gs
das
or
test
mov
xchg
stos
pop
dec
push
fsubrs
push
sbb
lea
imul
inc
jecxz
push
inc
outsb
loopne
test
pop
movl
inc
pusha
push
jg
outsl
es
xor
aam
pop
add
out
sbb
pop
loop
inc
xor
cmp
jne
into
ficompl
cmp
sbb
jp
jo
mov
inc
pop
shl
pusha
cmp
sbb
jp
jo
sbb
addr16
add
pusha
sahf
mov
lret
inc
loop
arpl
jbe
sbb
dec
arpl
pop
sub
sub
cs
dec
sbb
mov
xor
outsb
inc
sbb
mov
push
inc
jecxz
jl
jb
inc
imul
dec
dec
push
fs
push
mov
clc
jmp
lahf
push
dec
pushf
repz
pusha
fisttpl
xchg
mov
jo
push
mov
add
jb
sbb
dec
cmp
ret
push
jl
cli
mov
jbe
iret
in
imul
sub
imul
fiaddl
sti
push
jbe
sti
sub
mov
push
cmpsb
loope
int
jg
xchg
sbb
sub
push
and
fwait
test
cmc
mov
aas
jmp
cmp
subb
adc
xor
pcmpeqd
push
jne
push
pop
jp
ds
cmp
repz
out
loope
mov
jg
adc
insb
and
out
imul
imul
loope
addr16
add
popf
ret
into
inc
mov
das
repz
jle
xchg
andl
outsb
pusha
shll
mov
inc
dec
mov
jecxz
fistpl
pop
mov
push
mov
clc
mov
jno
pop
test
movsb
bound
adc
cmp
stos
push
jbe
mov
and
jmp
cmp
ja
pop
lods
repnz
inc
fcoms
jns
scas
es
insb
jno
fs
cmp
mov
lds
imul
xor
jg
pop
fists
sub
scas
xor
cwtl
fwait
ljmp
jnp
jp
dec
ds
aam
cmc
ds
mov
ret
inc
xor
lahf
ss
es
flds
cmp
ss
stc
cmp
mov
fldcw
add
faddp
lods
mov
scas
push
mov
push
mov
or
test
dec
in
pop
mov
and
repnz
mov
fistl
outsl
flds
leave
andl
lret
sub
imul
mov
ud1
cmpsl
mov
mov
mov
mov
aad
lods
lds
pop
bound
add
test
sbb
ja
xor
add
filds
movsb
and
push
daa
xchg
bound
fwait
rcrb
das
dec
stos
pop
sbb
xor
push
scas
push
xor
pusha
andl
loope
rcr
rolb
xchg
scas
test
stos
mov
xor
cs
cs
lret
int
inc
push
jae
dec
addr16
fisubs
and
cmp
jmp
loop
push
xchg
test
xchg
push
xchg
jnp
mov
and
push
rep
fwait
jnp
adc
dec
int3
jg
js
pushf
jns
repz
cmp
ss
pop
dec
jae
hlt
sub
stos
nop
sbb
nop
ror
daa
add
loop
and
dec
or
aam
stos
cltd
dec
jp
mov
sub
dec
xor
xchg
pmaddwd
xlat
jp
jp
cmpsl
leave
or
cmp
dec
sbb
push
jp
out
mov
add
pusha
das
data16
outsl
adc
stos
stos
sub
mov
fistpll
dec
jle
call
inc
dec
inc
bound
mov
addr16
or
cli
sbb
cmp
pop
and
xlat
arpl
mov
and
test
cmp
pop
adc
ret
push
xor
sbb
adc
adc
sub
cmp
ret
outsb
push
dec
push
cmp
pop
mull
jb
mov
sahf
and
lret
mov
sbb
pop
adc
sub
push
pop
dec
ret
ja
xor
out
inc
or
inc
add
es
pop
sahf
outsb
and
adc
mov
inc
sub
adc
fcmovnu
cmpsb
jmp
ds
cli
arpl
or
movsb
mov
xor
cld
fbld
or
enter
mov
dec
mov
addr16
andl
mov
pop
scas
inc
cltd
sbb
push
cmp
imul
pop
in
fcoms
inc
sbb
xlat
bound
mov
jecxz
cwtl
cmc
ret
pop
and
testb
xchg
jo
addr16
cmpsl
mov
mov
outsb
insb
icebp
pop
das
and
mov
stc
dec
dec
mov
or
sbb
jecxz
push
jge
add
sub
xor
in
addr16
dec
dec
imul
pop
sbb
jae
sbb
aas
lcall
jp
jns
adc
pop
and
sub
mov
outsb
leave
xchg
push
push
sbb
xor
lea
or
mov
sarl
adc
push
test
push
jle
or
out
or
or
mov
adc
pop
sbb
out
lahf
pop
dec
and
cmp
je
aaa
cmp
aaa
xor
push
popa
stos
push
mov
inc
scas
cmp
push
cwtl
insl
popa
leave
and
enter
xor
adc
lcall
add
jg
sbb
incb
pop
insb
pop
sbb
mov
cmp
cmpsl
or
dec
fs
push
data16
andl
sub
mov
lds
inc
lret
push
into
add
or
std
and
nop
mov
mov
xchg
pop
fadd
insl
iret
pop
push
js
adc
xchg
out
outsl
dec
inc
dec
cmp
cmp
push
pushf
mov
cmp
shlb
sub
loope
es
lds
pop
mov
loopne
jg
imul
inc
mov
adc
movsl
int3
xchg
testb
dec
sahf
add
xchg
mov
and
stc
int3
dec
cwtl
inc
ljmp
bound
jbe
gs
cltd
jmp
lahf
adc
jp
out
xchg
mov
or
aad
je
lds
ss
and
cmp
push
popl
push
fdivrl
and
outsl
loopne
imul
out
ret
sbb
push
inc
mov
lods
movsl
lds
mov
adc
inc
in
fidivl
dec
xchg
sbb
push
daa
sar
sahf
mov
imul
jl
out
into
xchg
sbb
addr16
pop
out
ja
cmp
xor
aam
fwait
add
sbbb
bound
lds
inc
pop
or
cmp
aaa
nop
test
xor
push
cmp
push
and
xchg
and
push
pusha
ficompl
push
xchg
lret
mov
jg
inc
push
or
inc
inc
mov
push
mov
stos
fisttpll
outsl
es
shll
mov
mov
addr16
cmp
enter
and
aam
in
and
sahf
addb
xchg
pop
jbe
or
jbe
imul
movsl
sub
stos
in
push
nop
or
dec
sub
addl
jmp
fs
pop
add
mov
xchg
and
or
in
xorl
push
pop
push
out
jmp
xchg
cwtl
xchg
pushf
sub
mov
les
mov
dec
scas
jae
int
fidivl
inc
insb
repz
mov
jle
hlt
or
lea
movsl
int3
inc
push
lock
pop
test
push
popf
cmc
jno
outsl
add
imul
popa
dec
xchg
mov
adc
outsl
sbb
xchg
xchg
insl
push
jmp
jb
loope
inc
jbe
loopne
scas
lds
insb
iret
rorl
cli
mov
xor
fsts
and
fsubl
inc
sbb
inc
pop
cli
bound
cmp
xchg
xor
insb
mov
cltd
sub
sub
divb
daa
cs
test
jecxz
pop
pop
loope
xor
mov
and
sbb
sub
insb
in
sbb
xor
jmp
stc
jl
xchg
ret
stos
push
sbb
cmpsb
es
bound
mov
scas
adc
jl
xchg
lcall
pop
icebp
add
sbb
xchg
ror
mov
xchg
test
movsb
jg
mov
pop
push
fwait
and
fwait
mov
and
stos
adc
pusha
mov
jo
rorb
fidivl
lret
into
popa
cmpsb
and
mov
sahf
sbb
call
xchg
add
enter
les
xchg
or
inc
stos
mov
sbbb
fld
bound
ret
call
mov
es
stos
not
dec
and
rcrl
in
pop
adc
lds
pop
test
inc
and
sub
xor
cltd
cmp
mov
add
sahf
and
mov
pusha
push
sub
and
xchg
push
arpl
outsl
xor
mov
jo
leave
les
jmp
cmp
sub
fists
adc
jecxz
pop
gs
sub
test
xchg
dec
mov
test
test
sub
dec
lds
out
cmp
inc
pop
sbb
es
xchg
lret
std
fsubl
popa
inc
inc
inc
pop
jg
cmpsl
push
cld
dec
ja
or
insb
loope
inc
add
pop
adc
fldcw
mov
xchg
insl
dec
ja
fldt
fwait
dec
mov
adc
dec
fs
mov
int
bound
push
adc
add
test
fwait
loop
jno
loop
enter
cltd
pop
ds
lret
push
sub
cmp
mov
dec
rolb
repnz
sub
xor
lds
popf
inc
cmpsb
cmpsl
push
xchg
mov
mov
xor
test
adc
out
mov
rolb
mov
dec
nop
popa
mov
inc
mov
rclb
add
sbb
movsl
je
fdivr
ss
push
inc
imul
and
lds
sbb
les
mov
jns
outsl
xchg
xchg
push
outsl
jne
stos
push
ret
mov
inc
pop
sbb
out
dec
mov
in
into
repnz
mov
inc
xchg
jle
mov
push
inc
adc
lcall
sti
push
jae
jb
ret
and
mov
mov
mov
cmp
mov
adc
test
sub
dec
pop
hlt
push
ret
pop
insl
mov
cmp
nop
out
imul
pop
pop
cs
mov
xor
andb
mov
pop
sub
xor
mov
imul
inc
xchg
jmp
inc
repnz
xor
outsl
mov
sbb
sub
loope
outsb
repz
fwait
dec
je
push
sub
bound
sub
repz
adc
scas
data16
cmpsl
pop
roll
daa
leave
inc
inc
inc
aad
inc
imull
mov
int
add
outsb
add
imul
mov
mov
lret
jb
jo
jae
xor
movsb
fidivrs
jecxz
pop
pop
sub
stos
xlat
movsb
push
xchg
pop
mov
int3
dec
pop
adc
dec
sub
aas
imul
stc
outsl
and
stos
sub
mov
iret
push
je
ss
pushf
add
push
mov
test
cmp
imul
mov
mov
es
dec
bound
dec
sbb
inc
inc
pop
ljmp
pushf
xor
jbe
std
jae
scas
or
gs
mov
inc
xor
mov
cmc
adc
ret
int
ljmp
mov
lods
mov
sub
push
jl
sbb
pop
rorl
nop
daa
mov
mov
dec
sbb
and
fwait
add
pop
dec
test
dec
mov
jno
inc
xor
les
cwtl
aas
mov
inc
ret
and
insb
sub
cmp
mov
jno
insl
jp
data16
push
sbb
fdivrp
pop
inc
ret
dec
es
mov
add
push
mov
pop
hlt
mov
add
xchg
push
push
sbb
or
push
outsl
je
push
mov
sbb
std
sbb
mov
mulb
add
mov
cld
cmp
sbb
mov
cld
jp
loopne
repz
mov
xchg
jbe
jg
lret
sub
fwait
dec
xchg
xlat
add
xor
sub
cmpsl
dec
xchg
out
insl
dec
std
stos
mov
repnz
stc
xchg
int
sbb
push
jg
cs
mov
data16
or
popf
bound
sub
lea
out
fs
testb
rcrl
es
add
jp
addr16
loop
cmp
ds
test
repz
mov
push
daa
into
cmp
adc
fs
test
jp
xchg
jo
out
nop
movsb
inc
mov
pop
mulb
inc
lcall
lods
jp
sbb
push
sti
or
sbb
cli
ret
push
mov
fiadds
push
and
jb
pop
push
je
sub
mov
mov
cmpsl
je
enter
mov
mov
test
dec
mov
in
cmp
rclb
push
push
jb
ds
fistps
aaa
sub
mov
dec
pop
ja
cmp
fwait
mov
jl
out
daa
sbb
int3
inc
xor
imull
add
sub
push
inc
es
imul
imul
cmpsb
mov
pop
cmp
jns
sbb
fnstenv
outsb
and
loopne
jbe
pusha
sahf
sbb
dec
sub
ficompl
or
popa
fstpt
sbb
fnstcw
mov
test
loop
addr16
loop
arpl
adc
add
fcmovnb
loop
adc
sbb
popa
sub
push
and
pusha
sahf
imul
and
data16
jmp
dec
sbb
or
fcmovu
ljmp
dec
bound
jne
stos
jmp
sub
push
js
pop
stos
addr16
cmp
test
and
mov
inc
int3
pop
mov
pop
push
inc
push
imul
sbb
dec
inc
inc
sbb
inc
cs
mov
cli
mov
int3
popa
in
fcmovu
cmp
pop
push
sbb
jecxz
mov
cli
inc
mov
cwtl
out
dec
add
les
ljmp
jbe
sti
jae
push
mov
pop
movsb
insb
jb
push
inc
lret
sub
sti
es
ljmp
cli
mov
xchg
mov
ljmp
mov
cwtl
ja
lahf
push
dec
stos
loopne
stc
or
das
jne
sub
ret
and
cltd
xchg
cmp
popa
js
pop
dec
ret
ds
mov
outsb
ret
lds
dec
add
dec
or
xchg
fsts
push
fnstcw
xor
out
fisttpl
test
shll
pop
jp
or
sbb
aaa
ret
xchg
int
lcall
enter
inc
jns
je
xor
iret
dec
mov
loopne
mov
in
test
push
call
and
idiv
push
push
fidivrl
mov
lcall
aad
insb
cmc
pop
int3
dec
insb
xchg
push
xlat
and
mov
push
inc
lock
ds
ret
ja
out
inc
ret
xor
mov
lahf
es
push
or
push
xor
mov
leave
ja
nop
lret
sbb
push
imul
inc
loop
movl
packssdw
pushf
popa
and
pop
jb
pop
fstpl
inc
cmp
lret
incb
mov
mov
xchg
sub
push
outsl
push
mov
push
insb
lods
and
pop
mov
or
xchg
mov
jmp
xor
mov
pop
fimuls
test
pop
pop
sbb
jae
pusha
pop
pop
pop
lds
mov
outsl
mov
sbbb
xor
adc
xchg
lock
test
stos
in
into
xchg
adc
adc
test
data16
pop
fnstenv
adc
popa
push
and
imul
ja
xchg
push
mov
inc
aaa
out
xchg
popa
adc
xor
and
jbe
push
lds
xor
or
mov
sbb
dec
data16
sti
push
int
imul
push
ret
cmpsb
rorl
ds
xchg
sti
popl
pop
push
stc
adc
out
pop
mov
cmp
dec
push
pushf
cwtl
test
stos
sti
or
jmp
pop
xor
adc
mov
mov
movsb
adc
mov
xor
pop
and
mov
mov
popa
cmp
lea
cmc
test
into
insb
xchg
stos
cmp
hlt
insl
jne
jle
xor
mov
add
jecxz
or
dec
and
jg
mov
push
loope
xchg
jne
mov
adc
stos
jmp
dec
call
xor
pop
lods
inc
sti
cmp
jns
gs
cltd
inc
jb
loopne
cmp
lock
inc
push
jle
test
outsl
cmp
inc
lds
dec
enter
fidivl
or
cmp
sti
and
dec
pop
cmp
sbb
xor
stos
andl
sbb
ret
inc
jno
pusha
lds
fisubl
push
les
aas
fisubrl
cmpb
lahf
sbb
dec
jo
pop
andl
dec
push
jo
es
aam
dec
aas
cmp
fs
xchg
inc
fcmove
cli
mov
sbb
cmovp
inc
or
lea
cmp
lock
jp
aad
push
shlb
andb
in
and
stos
popf
or
imul
push
aas
jns
sbb
jmp
jp
lods
dec
outsb
sbb
jb
je
hlt
and
mov
jbe
sub
cli
lock
sbb
mov
sbb
sysret
dec
push
inc
sub
fisubl
rol
or
mov
sub
outsl
bound
pushf
mov
jns
daa
jg
fcoms
push
popa
insb
push
inc
jp
sub
enter
outsb
jb
inc
mov
es
pusha
outsb
ss
ljmp
rcl
test
sti
mov
mov
sbb
popa
mov
cmc
inc
xchg
movsb
test
mov
out
mov
loop
fwait
bound
jb
mov
imul
mov
xor
insb
adc
xchg
inc
push
push
jmp
popf
xchg
popf
mov
mov
loope
xor
out
xchg
mov
enter
test
mov
cmp
fidivrl
into
mov
call
jbe
and
std
sub
stos
call
sbbl
imul
std
cmp
fidivrs
jecxz
add
sti
inc
js
or
jmp
mov
mov
sub
cltd
sahf
call
cmp
sbb
add
imul
push
je
sub
call
lock
and
ljmp
inc
inc
cwtl
andb
fwait
cmp
out
jo
repz
inc
fsubrl
or
clc
stos
mov
ja
outsl
dec
jno
sub
andb
dec
insl
arpl
inc
add
cmp
idivl
mull
pusha
jle
and
rorb
test
clc
inc
cli
bound
repz
lret
test
stos
mov
pop
aas
lcall
scas
in
nop
ret
imul
ds
aaa
imul
or
cmp
pop
adc
cmpsl
mov
push
mov
out
and
xchg
sbb
rclb
fwait
scas
pusha
push
sbb
sub
jb
jecxz
dec
stos
xor
xor
mov
cld
sub
arpl
ljmp
jecxz
xor
mov
mov
and
mov
mov
test
dec
pop
stc
mov
addr16
push
and
pop
data16
add
cmp
fiadds
shll
push
sbb
jns
das
imul
fwait
ljmp
xchg
push
repnz
add
sub
mov
xchg
lret
or
and
sarl
cmc
inc
into
mov
daa
adc
xor
add
jl
das
cli
sbb
sbb
jbe
test
inc
lret
mov
dec
fidivrs
mov
outsl
out
pusha
cmc
mov
lcall
inc
sti
subl
add
addb
fsts
sarb
mov
test
mov
pop
cmp
xchg
xor
sbb
sbb
mov
mov
nop
mov
cmp
cmp
sub
int3
jmp
clc
mov
or
ds
mov
fistl
ret
fwait
adc
dec
jae
cmp
sub
push
jg
add
negb
or
fscale
fcoml
lcall
jmp
ds
sti
fistpl
lods
adcb
jmp
add
pop
scas
push
mov
dec
ja
mov
adc
mov
jne
or
pop
stos
loope
mov
data16
or
or
dec
pushf
push
imul
into
pushf
push
sbb
jecxz
push
test
pop
pop
daa
xlat
es
mov
xor
stos
mov
scas
pop
xchg
cwtl
ret
dec
gs
mov
add
jb
and
sbb
adc
in
call
loopne
arpl
fcmovnb
cmp
stos
outsl
add
sub
inc
cmp
jmp
pop
pop
push
and
dec
sub
dec
xchg
mov
jae
add
test
or
push
insb
out
jp
pusha
mov
pop
test
dec
mov
sbb
imul
mov
mov
mov
aas
jp
dec
mov
push
mov
pop
js
push
push
inc
mov
push
scas
adc
sbb
shll
jne
lret
mov
inc
sbb
sub
and
mov
fsubs
dec
pop
ja
hlt
xchg
daa
jecxz
pop
adc
cwtl
imul
dec
stos
rol
add
xor
sar
jo
ret
jne
lret
adc
pop
fldl
fs
pop
cltd
out
sahf
xchg
addr16
sbb
cltd
stos
mov
mov
dec
xchg
test
jp
jae
inc
icebp
or
mov
cmp
dec
fstps
andb
outsl
xor
pusha
lock
in
test
ficompl
stc
cmp
mov
dec
sub
push
into
xchg
shlb
cmp
ret
pop
sbbb
loope
xchg
stos
shlb
mov
jae
sub
imul
pop
xchg
cmp
jp
push
stc
js
clc
adc
or
inc
mov
and
fcmovb
sub
jno
dec
leave
enter
popf
sub
xlat
and
fsts
xor
mov
shrl
out
lcall
adc
fs
mov
testb
pop
jnp
xchg
pop
cmc
mov
setns
pop
dec
xchg
xorb
xchg
stos
sbb
jnp
pop
mov
leave
addr16
fucom
xchg
sub
mov
movsl
dec
repnz
pushf
in
shl
cmp
mov
add
add
sti
movsl
mov
jbe
adc
dec
aaa
mov
xor
test
test
roll
cltd
or
fnstcw
adc
pop
sbb
shlb
adc
daa
loop
mov
push
sub
xor
sub
sub
cmp
test
nop
pop
mov
jle
or
out
orl
ljmp
cmp
dec
and
enter
fiadds
es
or
cs
cmp
inc
cli
stos
ds
jp
loop
pop
pop
jp
cmp
mov
scas
jae
addr16
add
mov
jmp
cwtl
loopne
mov
out
sbb
jbe
addr16
add
mov
loope
gs
fistpll
aas
sbb
jge
repz
dec
hlt
out
push
sbb
sub
pop
inc
rcll
sub
es
mov
and
sbbb
out
pop
into
std
lds
stc
inc
scas
test
je
sbb
xor
sarb
and
jno
adc
pop
pop
or
outsb
enter
xlat
imul
mov
pop
sbb
add
cwtl
jb
sarb
testb
aam
push
adc
cmp
cmpsb
outsb
repz
cmp
cltd
cli
outsl
pop
cmp
jg
mov
dec
test
mov
jbe
pushf
lock
sub
inc
push
loop
mov
push
mov
push
rol
mov
xlat
stos
dec
sbb
out
xor
and
hlt
mov
xchg
inc
mov
pop
mov
add
mov
pop
jbe
jo
sbb
mov
sbb
psadbw
ror
popw
mov
enter
ret
xor
dec
rcrl
enter
mov
call
insb
ficomps
daa
leave
ja
enter
push
fidivrl
pop
push
lret
inc
inc
jmp
lcall
dec
adc
aas
daa
ja
repnz
dec
mov
mov
xor
shl
ret
xchg
sti
int
pop
push
mov
lods
es
sub
mov
mov
mov
jecxz
push
int3
pop
popf
jb
cli
hlt
xchg
sbb
or
sarl
sbb
jbe
popa
aam
psrlq
adc
push
xor
xor
shr
xchg
or
cli
add
dec
lcall
and
cs
ds
add
orl
stos
insb
pop
dec
cmpsl
movsb
push
mov
push
and
and
ret
outsb
outsb
mov
stc
loop
inc
xchg
pop
push
dec
xchg
sbb
decl
repnz
inc
js
mov
xor
cmp
xorl
mov
inc
mov
pop
jmp
insb
mov
sbb
ss
movsl
insl
cmp
fbstp
daa
aam
sub
xlat
mov
cmp
mov
adc
repnz
inc
sub
add
sbb
add
mov
pop
and
sbb
pop
adc
je
inc
cs
sub
jns
repz
outsl
add
cltd
scas
mov
les
mov
outsb
push
inc
push
xlat
and
xchg
aaa
push
fiaddl
stos
mov
orb
mov
and
jl
sbb
loop
cmp
and
mov
pop
stos
mov
mov
xor
outsl
sub
xor
stos
jl
sub
popa
sub
push
das
jae
loope
add
imul
je
ret
mov
pop
sbb
push
mov
sbb
adc
jo
push
mov
xchg
ljmp
cmp
pop
not
es
sbb
jl
movsl
push
cli
divb
sub
xor
icebp
pop
adc
jns
xchg
jne
lret
fnstenv
aas
dec
dec
movsl
int3
pop
fsts
test
lock
xor
or
mov
in
jg
mov
dec
mov
jle
adc
out
dec
inc
ds
push
decb
xorb
xor
xchg
rcl
test
add
push
dec
push
lret
popa
mov
movb
jge
adc
fidivrl
inc
insb
inc
cltd
jo
test
push
dec
xchg
aaa
and
sub
fisubrl
ret
inc
inc
sbb
sub
pop
bound
inc
je
push
lods
xchg
leave
push
out
inc
pop
or
or
pushl
enter
push
inc
cwtl
mov
or
test
cli
xor
push
or
xchg
inc
stos
les
idiv
stos
pop
cmc
lds
rcrl
jno
add
insl
dec
into
and
mov
sbb
and
js
and
xlat
xchg
out
push
jl
sub
pusha
ret
add
xlat
test
inc
jno
fcoml
jne
jno
and
jg
sub
hlt
push
or
lahf
repz
outsl
fistl
lahf
mov
or
push
mov
mov
pop
fs
adc
mov
icebp
je
mov
test
fs
fwait
bound
scas
xchg
jne
lds
rol
das
lret
notb
jg
xchg
lods
dec
imul
cltd
jb
insb
test
call
inc
lret
inc
ja
repz
cli
mov
loope
xor
or
fbld
scas
jbe
cmp
js
es
sti
lock
xchg
bound
fildl
cmp
jb
mov
inc
jne
test
scas
jecxz
cmp
mov
int3
dec
sbb
jo
pop
mov
pop
or
lods
daa
mov
imul
sbb
sub
mov
mov
pop
cmp
push
aas
aaa
mov
outsb
pop
sbb
mov
scas
sbb
pop
pusha
inc
xor
sbb
add
fs
inc
sarb
inc
mov
data16
pop
pop
add
lahf
cltd
out
lcall
aaa
lods
jmp
lret
jle
sbb
aaa
mov
mov
repz
dec
repnz
fwait
loop
sbb
adc
pop
push
mov
push
cli
ljmp
inc
push
test
jb
je
mov
mov
sahf
mov
orb
fs
gs
pop
push
jne
jmp
cmp
jg
cmp
je
mov
sbb
adc
add
xor
fisubrs
ret
ret
std
shl
inc
cs
sub
sahf
cmpsb
xor
xchg
call
data16
inc
mov
jmp
jnp
xor
push
andb
pushf
and
das
pop
mov
aas
test
xchg
imul
sub
sbb
mov
out
cltd
std
cmc
mov
sub
dec
jns
mov
fdivl
jae
ret
adc
xchg
sub
iret
jecxz
clc
add
arpl
repnz
outsb
arpl
and
cmp
cmp
dec
dec
les
fstpt
adc
add
or
xchg
push
test
adc
pusha
cmpsb
lret
js
xchg
stc
push
dec
xchg
mov
xor
mov
push
dec
pop
leave
pop
mov
bound
aas
xor
in
xor
loope
push
call
in
ret
stos
fwait
mov
stc
imulb
adc
mov
cmp
test
sub
pop
mov
jno
jge
cmp
repnz
ret
sbb
xchg
ficoml
sti
into
out
fwait
jb
lcall
sbb
bound
test
jmp
mov
jns
sbb
add
ljmp
or
call
adc
mov
subb
xor
je
les
and
pop
mov
pop
mov
cltd
in
pop
mov
xor
insb
pop
lret
or
push
push
roll
repnz
sub
push
jb
repnz
rcrb
jmp
and
lock
push
imulb
inc
jb
and
cli
loop
xor
sbb
imul
adc
push
jl
sbb
fidivrl
push
jl
inc
mov
mov
bound
loope
cld
xor
sbb
sbb
pop
mov
pop
and
adcl
fiaddl
sbb
movsl
cmpsl
arpl
out
int3
call
lea
mulb
inc
adc
addr16
adc
dec
mov
rorl
hlt
sub
xchg
sub
stc
inc
adc
out
fstp
addr16
je
es
imul
sub
adc
and
sub
iret
push
mov
xchg
mov
ja
fstpl
iret
cmp
cmpsl
mov
sti
aad
mov
scas
push
cld
adc
repnz
arpl
inc
sbb
xchg
insb
dec
mull
stos
cs
and
mov
js
jecxz
cmpsb
mov
leave
push
in
mov
test
ficoml
inc
fdivs
ds
xchg
popf
or
scas
add
xor
cmc
pop
push
mov
adc
sbb
fistpl
dec
imul
mov
sbbl
push
inc
aad
pop
push
sbb
cmpsl
inc
dec
ds
std
inc
dec
xor
aaa
cmp
test
fisubrs
aad
push
pop
dec
inc
ljmp
jno
mov
lock
inc
outsb
stos
movsl
mov
mov
mov
push
pop
add
in
pop
das
arpl
xor
cmp
push
mov
pop
xchg
scas
lahf
rcrl
add
xlat
adc
ret
insb
test
sbb
sbb
and
leave
inc
loop
into
and
icebp
cltd
into
scas
out
jge
lods
mov
push
ljmp
or
xor
out
xchg
dec
xor
mov
cmpsl
sbb
out
jmp
aaa
ss
adc
shrl
sub
sahf
das
jae
add
push
ljmp
aas
jge
push
sbb
pcmpgtw
icebp
lock
push
add
div
jg
adc
cmpsb
inc
mov
sub
and
pop
out
lcall
das
cld
or
stos
mov
ja
stos
dec
pop
scas
inc
sub
or
fisubrl
imul
lock
adc
sub
and
and
ds
adc
decb
xchg
xchg
push
pop
pop
repnz
int
jno
rcrb
lahf
cmp
push
pop
mov
jae
fidivs
out
push
mov
or
ror
filds
mov
mov
ds
imul
xchg
inc
sub
push
jae
outsl
nop
xchg
push
dec
sbb
movsl
fwait
adc
lcall
sbb
mov
pop
aam
cmp
sahf
out
rorb
xchg
hlt
adc
int3
mov
jne,pt
cld
sbb
or
in
pop
jo
cmp
sub
subl
ljmp
into
mov
leave
stos
test
jno
shll
jg
stos
adc
nop
subb
addr16
xchg
pushf
shl
xchg
pop
mov
in
cli
repnz
je
inc
lds
stos
adcl
pop
or
jg
in
mov
xchg
adc
xor
outsb
lock
jbe
std
pop
cltd
mov
cmp
aaa
ds
loop
cli
cltd
push
push
sub
push
mov
push
sbb
cltd
sahf
sahf
sub
fidivl
stc
mov
lahf
and
sarb
cmpsb
rorl
xchg
xor
fnstcw
cmpsb
add
inc
or
dec
push
imul
test
jmp
jb
and
dec
cmp
push
jle
and
ljmp
scas
stos
sbb
stos
inc
outsl
push
dec
outsl
sub
aam
and
pop
and
das
add
sbb
into
mov
push
into
cli
test
and
xchg
adc
cmp
loope
data16
lock
fs
and
lcall
jns
jno
loopne
out
xchg
mov
lock
push
fwait
and
fcoml
jbe
shrb
and
aam
shll
sbb
mov
push
cmp
test
mov
jmp
and
aas
jnp
xlat
lods
or
aam
iret
rolb
sub
pop
mov
fisubs
cmp
out
imul
mov
fs
xor
adc
je
inc
subl
xlat
lcall
pushl
movsl
hlt
nop
mov
int3
cmp
les
scas
push
repz
sti
stos
fs
gs
mov
push
insb
inc
pop
mov
jp
bound
sub
mov
stos
sbb
cmpsl
rolb
imul
std
or
dec
xor
push
imul
popa
mov
pusha
fsub
out
jb
sbb
out
scas
aam
mov
mov
js
test
mov
pop
arpl
sub
jmp
mov
mov
sahf
mov
popa
mov
loopne
leave
push
cmpsl
adc
and
dec
add
stos
dec
es
lret
inc
mov
xchg
std
cmp
dec
repz
sbb
jmp
ret
bound
mov
and
pop
loopne
mov
sub
sbb
movsb
dec
jl
scas
push
mov
stos
cmp
dec
mov
sahf
clc
xchg
scas
bound
arpl
imul
xchg
pusha
pop
lock
cmp
dec
inc
pop
jmp
sub
cmp
xchg
fcompl
lret
mov
mov
lods
cmp
mov
jmp
outsl
shrl
pop
mov
jno
int3
stos
insl
fsubs
inc
push
add
popa
push
adcl
xchg
add
jae
adc
jne
sbb
test
push
sbb
scas
fidivrs
in
fisubl
mov
insb
pop
jecxz
js
stc
push
ja
xchg
rcll
and
dec
fidivl
pop
sub
push
scas
mov
push
add
sbbb
data16
sbb
dec
inc
insb
cli
or
je
out
sub
out
jmp
adc
push
xor
rorl
out
btr
add
sub
enter
mov
lds
movsb
cltd
xchg
lahf
adc
andb
test
mov
mov
div
hlt
push
andb
lret
jo
ret
fwait
cs
jle
out
stos
xchg
mov
pop
nop
lcall
les
jp
fists
sar
jae,pn
in
into
aas
mov
mov
xchg
pop
pop
insb
out
leave
jmp
stc
push
mov
lea
xor
pop
xchg
jg
adc
frstor
pusha
dec
push
pushf
pop
fildl
mov
xchg
dec
fcomps
cmpsb
xor
shll
pop
xchg
ret
cli
mov
and
jmp
dec
dec
test
jmp
fdivs
or
inc
lcallw
sub
test
sbb
dec
fidivl
loopne
jne
imul
mov
push
stc
cmpsb
mov
push
ds
fisubl
mov
cmp
ds
lret
mov
cs
ds
xor
out
insb
and
cli
jae
jle
sti
mov
inc
fidivrl
lds
sahf
and
jp
or
push
pop
or
into
sbb
jp
in
fwait
addr16
cmp
loop
sbb
push
mov
cli
xor
rolb
andl
jno
sub
sub
cld
lcall
jmp
jnp
cli
cmp
xchg
movsl
in
rcrl
sahf
fists
repnz
pop
sbb
jbe
sub
jb
inc
shl
out
repnz
pop
pusha
mov
pushf
cmp
arpl
inc
daa
sbb
call
inc
xlat
bound
fisttpll
xchg
pusha
gs
cmp
rol
push
hlt
xor
jae
out
add
sbb
subb
dec
xor
aaa
pop
popf
mov
inc
fdiv
rorl
aaa
lahf
movsl
ds
rcrl
and
mov
sub
xor
jge
cmp
xchg
mov
mov
xor
dec
xchg
sub
rep
ja
inc
or
mov
mov
mov
les
mov
subl
ficoms
and
cmp
hlt
aad
and
xor
lea
or
fwait
out
xchg
push
cmp
sbb
push
pop
dec
adc
and
ss
pop
lcall
mov
stos
stos
add
scas
ret
lds
fdivp
pop
push
mov
dec
js
add
or
fwait
jecxz
and
push
xchg
cmp
xor
sbb
push
ja
insb
sub
push
test
lret
mov
or
dec
xlat
mov
rep
cmpl
pop
mov
xchg
lea
and
rolb
mov
pop
jb
loope
adc
nop
lds
cs
adc
xchg
sbb
sub
sub
sub
xor
jo
int3
jg
mov
xchg
shll
sub
push
lods
mov
fwait
mov
push
icebp
jne
addb
pop
lds
cmpsb
mov
psubw
shl
xlat
orb
cld
das
repnz
mov
ss
cwtl
ljmp
arpl
iret
fdivs
mov
xchg
out
add
mov
stos
pop
fwait
in
insl
or
or
jno
cmovl
incb
out
adc
in
mov
jmp
xor
jo
pushf
int3
fucomip
scas
mov
into
int
push
cwtl
out
clc
mov
pop
scas
mov
inc
mov
testb
lcall
mov
data16
movsl
ret
push
xchg
popa
in
sbb
testb
pusha
xchg
test
stos
push
jge
adc
jle
mov
xlat
loope
add
dec
push
push
lcall
sbb
repz
push
cmp
fdivs
lods
xor
dec
mov
daa
mov
into
test
xor
inc
add
inc
repnz
sti
aam
xor
sbb
push
or
loopne
cmc
into
rcrl
test
out
vpxor
sub
ret
sub
sub
inc
xor
out
pop
jmp
jbe
cmc
fcoml
les
data16
push
subl
cmpsb
stos
repnz
mulb
pop
adc
enter
jmp
adc
sub
and
jnp
cmp
push
inc
inc
cmp
shrb
out
sub
fistpl
pop
mov
fstpt
clc
js
sahf
sbb
cmp
sbb
xchg
sub
mov
jmp
add
push
aam
push
mov
or
insb
and
pop
sub
mov
sbb
mov
cmp
arpl
mov
cltd
loope
push
push
sub
jb
icebp
push
jns
sub
jmp
mov
or
mov
xchg
xor
mov
or
stos
shll
or
out
test
dec
not
pusha
inc
daa
mov
imul
into
mov
insl
inc
xor
mov
pop
mov
push
roll
add
lcall
or
sahf
or
fs
mov
fsub
das
mov
scas
push
cmp
xchg
stc
fldcw
inc
jo
push
mov
call
lods
popf
sbb
push
lds
add
dec
mov
push
ds
sbbl
cmp
xlat
inc
pusha
jb
or
and
cmp
in
rolb
cmpb
sub
ss
cmp
sub
out
xor
filds
push
loop
out
mov
add
std
cwtl
call
or
in
pop
dec
xor
cmp
ja
push
jae
sbb
repnz
imul
sbb
xor
iret
adc
jp
stos
insb
fimull
insb
jae
inc
mov
scas
lcall
inc
ficompl
scas
adc
and
push
icebp
pusha
je,pt
scas
pushl
add
mov
mov
cli
adcl
cmpsl
pop
cmp
dec
cmp
jp
popa
xchg
xchg
pop
push
jo
in
scas
mov
insb
mov
xor
or
jne
inc
scas
movsl
roll
mov
daa
ret
xor
arpl
cli
xchg
ret
ds
aas
ds
push
pop
and
or
nop
lock
fisttpl
outsl
shlb
pusha
dec
ja
addr16
movsb
xchg
mov
xchg
into
imul
ljmp
or
popf
pop
fisubrl
ljmp
push
fnstsw
sbb
mov
adc
jge
sub
int3
ljmp
es
push
xor
clc
xchg
loope
ror
xchg
ljmp
jl
filds
jmp
ds
out
push
cmp
mov
xchg
mov
mov
sbb
xor
jnp
fsubl
sbb
push
dec
mov
cmp
jae
jb
pop
movsl
adc
xchg
or
lahf
leave
cmp
ds
push
push
scas
lea
and
sbb
xchg
imul
cltd
les
inc
xchg
xor
dec
jmp
flds
ja
mov
pushf
arpl
pop
mov
xchg
mov
or
loop
lods
mov
xchg
xor
jmp
aas
sub
mov
into
mov
hlt
jae
mov
jge
pop
jns
rorl
inc
ljmp
dec
pusha
mov
test
fnsave
mov
lcall
int
movb
stos
mov
mov
jnp
push
std
xchg
xchg
lock
cmp
inc
and
jno
add
ret
or
das
sub
sub
fisubl
pop
ja
ret
cmp
addr16
ss
push
int3
sti
dec
addl
add
mov
fisubrl
shll
jo
lock
mov
stos
cld
lcall
dec
mov
inc
rcrl
pop
or
rcll
mov
push
jmp
sub
loop
inc
fs
pop
mov
cwtl
jmp
mov
stos
nop
mov
cmp
mov
jp
or
sub
jo
xchg
addr16
jecxz
push
cmp
pop
jns
jnp
sub
test
or
add
sbb
push
fnstsw
pop
fs
sbbl
xchg
mov
add
sub
sbb
and
fnstsw
fldenv
inc
shrl
inc
sub
repnz
lret
jmp
cmp
data16
pop
cltd
insb
pop
lds
inc
jb
cmp
jb
and
inc
dec
stos
sub
stos
shlb
daa
inc
loop
movsb
test
mov
push
jns
loopne
shlb
ljmp
loopne
push
test
lds
outsl
aas
leave
pop
cwtl
lock
sarl
dec
pusha
adc
pop
icebp
es
cld
testl
cmp
cmc
lcall
call
inc
push
jns
fiaddl
cmp
sbb
pop
dec
repz
into
imul
leave
jno,pt
std
add
add
or
outsl
sbb
xor
or
mov
dec
mov
mov
mov
hlt
ds
fdivr
xchg
adc
lock
aas
or
daa
fisttpl
pop
and
jne
dec
mov
imul
loopne
jg
push
xor
stos
and
mov
pop
loop
xchg
pop
scas
mov
and
inc
mov
stos
xor
fst
gs
outsb
inc
lea
es
ficomps
sbb
es
insb
pop
enter
lods
movsb
jmp
cmp
test
dec
bound
ret
inc
pop
scas
stc
icebp
pushf
push
idivb
divb
movsl
fcoml
cmp
dec
xchg
js
sbb
sbb
push
fdivrl
push
fs
mov
inc
pop
dec
inc
getsec
pop
cli
push
mov
sub
mov
ret
movsb
cmp
jge
pop
shlb
pop
sbb
mov
std
jbe
mov
xlat
mov
or
std
lret
outsb
addr16
in
jg
push
ss
xchg
orb
jmp
cmp
imul
ja
jg
mov
jl
ds
dec
ds
fs
ret
int3
cmp
data16
aaa
andl
inc
cli
push
bound
push
mov
mov
lods
in
daa
pop
cmp
pusha
aad
lcall
jp
lds
push
fidivl
pop
xor
add
loope
pushf
shlb
out
sub
jmp
and
dec
repz
cli
sbb
pop
bound
push
test
adc
dec
imul
jp
mov
sub
cmp
mov
shlb
sub
jae
pop
in
dec
imul
fwait
pop
cld
sub
xor
cwtl
cli
rcrb
pop
pop
out
xor
xchg
pop
sahf
repnz
fistps
inc
clc
cs
js
mov
idivb
pop
inc
jmp
sbb
into
fsubrl
sub
in
and
sbb
xor
ljmp
sbb
dec
lret
add
mov
pop
add
dec
sub
push
mov
out
dec
sub
jg
and
leave
jb
push
pop
pop
outsl
scas
xchg
push
mov
ss
adc
in
xor
push
mov
sub
adc
or
dec
sub
lcall
imul
push
mov
inc
fstpl
sub
loop
clc
xor
adc
bnd
cmp
cmp
xchg
mov
dec
pushf
inc
xor
negb
dec
dec
leave
jg
les
ljmp
and
cmp
or
cmpsb
add
loope
scas
mov
cmp
and
inc
sbb
gs
test
mov
lea
gs
push
fidivl
scas
push
sbb
jno
nop
mov
push
pop
popf
jnp
mov
mov
mov
pop
nop
xor
push
mov
in
and
jne
add
lock
jno
ret
bound
mov
mov
repz
repz
push
xor
jo
stos
lds
cli
lea
cwtl
movsl
enter
cmpsl
aaa
xorb
cmp
jne
enter
scas
pop
jns
pop
lds
pop
repz
dec
adc
pop
sbb
mov
xor
test
add
jle
and
inc
mov
xchg
push
xchg
in
js
imul
mov
notl
movsl
cmp
hlt
fsubs
ljmp
mov
push
add
cmc
std
inc
mov
stos
bound
rcrl
jb
insb
cmp
pop
mov
outsl
ds
cmp
push
icebp
inc
aam
inc
pop
rcrb
ja
fdivrp
mov
push
inc
sub
sub
rcrb
stc
movsb
mov
fs
mov
dec
or
pop
out
ret
jmp
mov
flds
xor
dec
mov
push
cmc
lcallw
insl
push
jl
xchg
lea
inc
es
shlb
test
ret
fnstcw
call
outsl
lahf
test
shll
testb
jl
mov
fistl
test
jecxz
xchg
arpl
push
sub
pop
testb
or
lcall
imul
adc
enter
mov
out
xchg
jp
adc
cmp
das
adc
lea
xchg
loop
aas
mov
out
pusha
mov
jnp
aas
orb
cmp
mov
dec
sub
out
roll
fdivrl
insb
jmp
in
push
pop
push
push
mov
push
push
ds
in
add
xchg
mov
sub
out
push
aas
les
jb
in
jle
jo
xchg
jo
pop
stos
aad
fsubrs
cltd
sub
cmp
jbe
xor
in
loop
hlt
push
ret
sub
pusha
cmpsb
jae
insb
pop
leave
jg
jnp
inc
pop
sbb
mov
pop
insl
adcl
movsb
push
xor
test
dec
push
das
adc
mov
dec
and
jmp
insl
push
mov
ret
cli
push
or
xchg
dec
cs
add
sete
repnz
jb
xchg
arpl
mov
adc
je
cmp
push
out
jbe
test
popf
bound
std
call
js
and
mov
jno
add
imul
rclb
js
pop
jmp
cmp
fldl
test
dec
mov
mov
sub
push
jp
cmp
inc
test
push
xchg
mov
bound
fs
imull
mov
aad
push
in
jmp
jecxz
jecxz
or
loop
push
jg
stc
or
lea
mov
addr16
pop
mov
mov
lahf
pop
jae
out
das
jbe
adc
inc
cmc
sbb
push
inc
stc
jns
inc
cli
jmp
xchg
jl
in
adc
push
xchg
push
enter
pop
and
leave
pop
and
shl
pop
jne
jl
ljmp
das
mov
orb
mov
push
in
cmp
fistps
imul
or
inc
sahf
xor
jp
push
movsl
int3
shlb
push
aam
jo
dec
lcall
fnstcw
pop
push
inc
inc
pop
or
popa
cmp
xor
popa
sbb
cmp
push
js
inc
xor
int3
scas
leave
cltd
mov
push
mov
aas
cmp
mov
int3
rcrl
cmpsb
rcrb
lds
sub
sbb
pop
mov
sbb
cmp
and
dec
insb
dec
jns
fmull
push
xchg
repz
push
jmp
mov
iret
popf
pop
rorl
imul
testl
jno
cld
xchg
dec
inc
cli
bound
push
stos
out
xor
mov
hlt
xorb
adc
mov
cmc
aaa
fstps
inc
mov
out
sbbl
shlb
inc
sbb
cmp
xor
push
out
clc
xlat
and
inc
pop
out
push
inc
push
push
cld
adc
jb
aam
aaa
mov
pop
fidivs
and
xor
push
jg
mov
push
pop
fidivrs
leave
into
xchg
test
cmpsb
and
out
xor
fs
inc
insb
loope
adc
gs
sub
jl
ja
je
sbb
sbb
jb
push
ret
popa
add
xor
loop
push
jbe
lcall
and
xor
jmp
stos
aam
out
sub
push
jmp
loop
inc
adc
jns
xor
jg
insl
mov
filds
jg
ret
sub
jne
arpl
and
add
sub
js
insl
cld
mov
cmpsb
xor
in
mov
pop
pushf
pushf
sbb
out
or
xchg
mov
stos
add
jnp
push
cld
push
insb
push
pop
mov
jae
fiadds
jae
inc
mov
call
fstpt
jmp
sbb
stos
and
stos
sbb
push
popa
mov
lahf
sub
pop
in
push
ds
inc
lret
cmpsb
cmc
jbe,pn
sbb
cmpsb
outsl
cmp
outsl
aaa
ret
cli
jl
rol
mov
add
sbb
jl
test
inc
push
xchg
sub
bound
lods
leave
out
dec
es
sbb
pop
stos
pushf
adc
sub
mov
push
cmp
jae
aaa
mov
shll
mov
test
add
popf
arpl
push
mulb
push
or
ds
fldt
and
mov
xchg
dec
push
xor
jl
movsb
sbb
inc
pop
mov
imul
in
inc
xor
push
adc
ret
lret
mov
inc
jmp
stos
inc
daa
inc
jb
push
push
add
aas
jecxz
mov
xchg
inc
add
incl
pop
pop
xchg
push
andb
xor
dec
xchg
sbb
loop
or
inc
stos
pop
dec
lret
insb
mov
cmp
dec
jae
cmp
test
pop
pop
mov
xchg
in
sub
in
push
or
adc
xchg
cs
add
data16
dec
push
out
ds
cmp
lret
xchg
repz
inc
xor
sbb
mov
rorl
fs
xor
test
leave
add
fisubl
fcmovb
add
js
sbb
pop
lret
sbb
fcomps
or
and
sahf
lahf
push
inc
push
jns
insb
gs
loope
mov
xor
loop
in
adc
xchg
cmp
dec
cmpsb
mov
add
cmp
jns
mov
dec
test
xor
scas
inc
dec
xor
mov
lea
in
sub
dec
out
and
dec
dec
pop
pop
stc
dec
cli
mov
xchg
je
enter
fwait
and
ljmp
and
push
adc
inc
xchg
insb
push
out
mov
dec
orl
stos
in
xchg
outsl
sbb
outsb
insb
data16
cmpsl
dec
mov
shrb
xor
cmp
dec
or
fs
popa
mov
dec
insl
test
xor
sbb
in
and
mov
negb
lret
dec
add
cmp
imul
aas
sbb
xchg
adc
mov
jl
push
pusha
inc
jb
jne
xor
add
adc
mov
scas
pusha
jg
stos
xor
jmp
pop
inc
es
and
in
sbb
xor
int
push
faddl
ljmp
push
fisubrs
cmc
gs
cltd
dec
into
xorb
cli
pop
jg
das
dec
xchg
sbb
sub
and
or
fwait
xor
jge
ret
dec
sbb
add
imul
movsl
ss
lcall
daa
sub
add
mov
xor
sbb
sub
flds
daa
lcall
fnstsw
and
mov
xor
mov
mov
push
xchg
insb
xchg
push
insl
fs
pop
bound
xor
scas
mov
pop
rol
jno
jecxz
sahf
jp
inc
dec
mov
xchg
add
inc
sbbb
jg
push
je
aaa
mov
mov
div
inc
aaa
daa
mov
dec
ret
sbb
push
add
dec
aaa
mov
enter
negb
lods
fwait
mov
and
enter
jne
das
jmp
lods
inc
dec
cmpsl
out
jae
ret
cmpsl
into
inc
adc
stc
bnd
dec
repnz
fs
pusha
scas
xchg
loopne
and
loope
jl
jg
imul
push
add
cmpsb
int
jns,pn
or
xor
pop
inc
inc
outsl
insb
lea
data16
or
insb
push
imul
mov
enter
aas
int
cmc
sub
inc
xor
nop
test
sbb
cmp
xchg
popa
pop
xor
mov
xchg
out
movsb
xchg
and
and
hlt
pop
out
lds
out
fsubrp
outsb
xchg
leave
cmp
lea
sbb
jo
ret
decb
push
lret
addr16
xchg
xchg
or
enter
jns
jmp
mov
rcrl
jns
dec
jge
cmpsb
pusha
sbb
sbb
arpl
inc
int
repz
inc
mov
pop
stos
jge
les
std
and
pushaw
enter
cmp
shll
dec
outsl
fchs
enter
pop
mov
jb
out
shrl
dec
sub
outsb
test
sbb
je
lock
test
or
je
out
inc
loop
leave
sti
cmp
xchg
mov
loope
cmp
jo
jmp
loopne
cli
mulb
jo
outsl
cmp
jne
cs
add
mov
add
ret
pusha
pop
push
dec
push
mov
fisubrs
add
shl
sub
dec
and
stos
mov
mov
in
mov
pop
in
jp
dec
adc
aaa
jne
sbb
lret
pop
dec
aas
inc
cli
xchg
pop
xchg
cmp
cmp
pop
arpl
fcoms
cli
pusha
jnp
mov
cli
mov
cmp
ja
rol
and
xchg
dec
jo
std
sub
in
mov
xchg
fisubrl
sub
cmp
arpl
pop
lret
inc
inc
push
jae
pop
push
push
push
scas
add
sub
sahf
inc
xor
sbb
cmp
pop
pop
pusha
test
scas
ffreep
test
push
je
stos
inc
adc
dec
jmp
fsubl
xor
sbb
xchg
pop
push
pop
jb
jae
push
addr16
inc
mov
shll
pop
mov
inc
push
imul
cli
mov
and
stos
xor
sub
jecxz
add
xchg
mov
imul
mov
fs
out
sub
stos
cmp
dec
out
pop
inc
jp
pusha
fnsave
loop
cli
pop
jae
add
sahf
sbb
test
or
int3
lds
cli
daa
nop
fldt
pop
cvttps2pi
add
dec
dec
ficoml
push
inc
mov
push
cmp
jnp
mov
bound
pop
jo
aaa
scas
iret
push
push
mov
sahf
and
test
sub
ds
dec
into
insb
mov
das
jl
or
mov
fidivrs
push
mov
std
pop
dec
jmp
addl
sbb
inc
pop
jno
cmp
stos
sub
mov
xchg
dec
das
push
mov
or
dec
lea
pusha
andl
sub
lds
jmp
inc
xchg
jle
es
insl
jnp
inc
and
xchg
vcomiss
test
jb
lret
ljmp
cmp
fidivl
sbb
cwtl
lcall
xor
ret
mov
pop
in
arpl
ret
mov
xchg
jne
in
pusha
inc
das
push
jo
outsl
fimull
inc
dec
sbb
fcmovu
popa
aad
jle
inc
adc
jbe
out
lds
xchg
mov
pop
fs
loopne
pop
loope
push
outsb
insb
fsts
imul
pop
jge
js
scas
movsl
jo
scas
sub
jmp
adc
and
sbb
add
dec
or
idivl
xchg
les
jno
cmpb
and
out
repnz
xchg
push
loopne
sub
addr16
test
sbb
dec
jb
mov
sbb
in
lret
fnstcw
ds
mov
sbb
in
cmpl
or
adc
insb
sub
mov
mov
jbe
stos
repz
and
push
mov
arpl
sbb
fs
in
xchg
and
imul
pop
out
pop
cmp
pop
das
fimuls
outsb
dec
mov
imul
adc
lds
sbb
or
mov
ret
inc
pop
dec
popa
pop
inc
cmp
mov
fcoms
outsb
pop
or
jp
xor
add
subb
mov
adc
sbb
outsl
adc
icebp
inc
fwait
jge
ds
sbb
dec
inc
jle
loop
stos
pusha
sbb
sahf
pop
push
lds
inc
in
sti
pop
dec
mov
xor
push
les
mov
xor
xor
or
xor
ret
int
gs
mov
es
mov
mov
adc
mov
das
jg
jo
cmp
push
mov
mov
repz
mov
cmp
ret
out
pop
stos
jmp
xchg
sub
rcrb
and
jg
shl
xchg
or
xchg
dec
sbb
or
sbb
adc
xchg
sub
cmc
test
rclb
fmull
or
adc
and
bound
xor
push
arpl
jbe
sahf
nop
xchg
xchg
ljmp
ret
xor
cmp
lea
mov
lret
inc
pop
enter
dec
and
or
sub
aad
push
pop
pop
jl
pop
sub
gs
stos
out
lea
jnp
sub
inc
iret
cmp
xor
das
loopne,pn
xorl
push
lcall
pop
notb
lret
leave
add
cmp
mov
xor
xchg
out
sti
jns
stos
outsb
inc
push
add
test
adc
dec
bound
jbe
lds
adc
dec
inc
adc
bnd
xchg
ja
push
push
dec
xchg
add
pop
lcall
gs
xor
mov
mov
pop
inc
pop
inc
mov
inc
repnz
addl
pushl
pusha
popa
filds
adcl
push
bound
adc
pop
inc
scas
push
jae
in
pop
mov
and
xchg
mov
gs
movsb
fwait
xor
sub
rcrl
lret
mov
add
out
andb
cmp
test
repz
stos
push
pop
cmp
xchg
lock
push
inc
mov
pop
push
loope
sarb
bound
scas
cld
dec
pop
sub
inc
cwtl
add
ret
adc
mov
jo
push
pop
jne
cmp
ret
aaa
sbb
loopne
mov
push
lock
push
sbb
lds
pop
xor
in
out
repnz
pop
mov
or
sub
xchg
outsb
ret
push
movsl
int3
sti
adc
sub
pop
and
cltd
inc
in
addr16
mov
outsl
xchg
std
std
outsl
mov
mov
pushl
mov
sbb
cltd
test
icebp
int
inc
mov
lds
sbb
ljmp
orb
lock
mov
mov
push
ficoml
sub
mov
insb
jne
hlt
and
mov
out
lcall
jno
lcall
mov
mov
jmp
std
stos
dec
dec
sub
pop
sti
in
ds
or
xchg
stos
pusha
pop
lock
inc
jne
xlat
cli
call
lea
push
fwait
inc
test
test
insl
outsl
and
jg
mov
mov
inc
jge
cwtl
sar
mov
sub
test
mov
xor
stos
fnstcw
cmpsb
sbb
xor
pop
mov
sbb
in
xor
mov
xchg
lahf
subl
gs
in
mov
dec
and
mov
inc
and
and
jecxz
psllq
pusha
cld
sbb
lahf
aas
sbb
out
cmp
xor
aaa
cli
cmpb
pop
adc
mov
leave
mov
fcomps
aaa
jo
out
or
rorl
pop
ficoms
sub
cmp
loopne
iret
sbb
xor
or
push
push
mov
cli
push
mov
rorl
jns
mov
push
outsl
inc
imul
pop
addr16
into
pusha
insb
jae
mov
sahf
mov
jmp
rorb
sub
scas
dec
stos
pusha
pop
cmp
push
ljmp
pop
iret
into
xor
xor
sbb
inc
out
add
lahf
arpl
call
jb
inc
scas
bndstx
stos
faddl
das
adc
jmp
cmp
arpl
or
pusha
cmpsb
aas
jg
sbb
fisubl
sub
pushf
repz
mov
lret
mov
push
add
cltd
out
ljmp
movsb
mov
dec
mov
push
inc
or
les
aaa
ds
dec
sti
clc
and
sbb
push
sbbl
add
inc
in
repnz
cmp
and
mov
ret
stc
mov
xchg
inc
mov
dec
in
fucomi
ljmp
jmp
sbb
adc
test
out
or
xchg
imul
dec
shll
fldenv
mov
dec
mov
fs
pop
js
adc
inc
daa
mov
mov
sti
cli
pop
test
stos
lock
loop
nop
into
add
pop
ret
into
mov
shr
jnp
sbb
arpl
xchg
jb
lock
ss
push
ss
dec
stc
mov
ficoml
popf
pusha
addr16
fsubp
sbb
stos
sub
add
push
insl
lock
jns
sub
xor
pop
push
inc
mov
and
ret
ljmp
jne
outsl
mov
test
in
orb
pop
mov
mov
jo
jnp
sub
out
fisubrs
pop
orb
cmp
cmpsb
mov
jg
inc
pop
add
mov
mov
sbb
popa
sub
xor
xor
mov
adc
xchg
pop
loopne
inc
sahf
mov
dec
jb
push
pop
xor
mov
xchg
inc
inc
xchg
out
dec
adc
dec
fbstp
jo
xor
imul
mov
pop
into
jns
pop
sbb
repnz
cmp
das
inc
fmull
cli
and
mov
test
xchg
pop
jmp
sbb
xchg
jecxz
outsl
mov
sub
push
pop
in
movsb
outsb
adc
mov
call
leave
jb
jl
jg
je
fldcw
cmpsb
adc
stos
and
leave
adc
and
in
inc
push
movsb
lock
cmp
imul
mov
and
ret
mov
mov
push
ljmp
mov
cmp
sbb
push
push
pop
cs
shll
and
lret
jae
cs
sbb
ljmp
mov
insl
adc
jns
xor
lods
arpl
nop
mov
jge
movsb
clc
and
mov
adc
nop
inc
pop
dec
data16
sbb
or
insb
mov
cmp
movsl
test
dec
stc
adc
test
adcl
cltd
mov
cmp
inc
cli
mov
xchg
aas
pop
stos
and
jno
inc
cmpb
jb
test
roll
test
mov
test
jg
repnz
js
inc
popw
daa
and
loope
pushf
mov
mov
pusha
std
lcall
dec
cld
fsubrs
mov
inc
jmp
push
cmp
add
adc
fdivrl
mov
push
imul
dec
cld
inc
sub
sub
mov
popa
jp
aam
jb
push
leave
mov
inc
iret
mov
jg
imul
or
mov
pushf
fs
xor
andb
xchg
icebp
add
and
adc
and
imul
add
mov
push
push
mov
pop
jns
js
cltd
add
fwait
jae
fiadds
push
outsb
sub
or
in
jg
jo
fs
jb
dec
and
sbb
xlat
cmp
hlt
fisubl
jl
jb
pop
jo
loop
push
into
js
lods
ljmp
arpl
test
fcmovnbe
js
int3
xor
sub
mov
or
mov
xchg
mov
andb
jo
das
push
insb
lret
xchg
les
inc
out
je
add
div
sub
fwait
hlt
jb
cmp
mov
xor
jbe
inc
push
and
cmc
mov
fs
add
mov
cmp
push
jmp
mov
mov
icebp
stos
or
pusha
dec
or
xor
daa
jo
mov
sbbl
retw
bound
and
cmp
mov
cmp
xor
or
out
outsb
sub
mov
push
and
dec
ret
mov
push
loop
mov
fdivrl
jge
ds
lods
sub
das
aaa
out
addr16
mov
ret
sbb
pusha
xchg
mov
mov
xchg
daa
xor
shrl
sarb
arpl
or
ficoml
insb
es
push
jb
mov
out
pop
or
lret
std
inc
push
aaa
push
insb
mov
arpl
cmp
fsub
cs
loop
push
pop
repnz
sbb
and
cs
psubsb
jb
mov
in
pop
popf
mov
stos
scas
ret
pop
stc
rcrl
sub
push
and
and
push
sub
je
mov
mov
scas
push
sub
push
test
cli
mov
lds
outsl
sub
dec
inc
lret
rcl
call
loop
das
mov
add
lcall
aam
push
xor
aam
icebp
adc
and
cmpl
lcall
imul
add
clc
adc
je
sbb
jae
xor
pop
lds
int3
inc
mov
pop
pop
fists
jo
shlb
cli
lock
into
mov
imul
fdivs
je
subl
jae
daa
nop
cmpsb
add
add
push
das
mov
stos
mov
or
popf
ret
jb
jae
sbb
cmp
clc
add
mov
shll
fidivl
outsl
jg
cmpsb
mov
and
mov
cmpsl
xchg
cli
pushw
add
push
push
mov
mov
dec
xchg
and
pop
mov
jp
lds
incb
stos
sub
xchg
hlt
pushf
dec
add
xchg
loopne
sub
cmpsb
ficoms
mov
jmp
pusha
outsl
inc
cmp
sbbb
clc
pop
stos
add
pop
push
pusha
jne
cli
dec
adc
push
cwtl
hlt
mov
fcompl
mov
mov
or
sbb
lds
jl
lds
add
ds
inc
push
pop
jl
lahf
fmuls
dec
data16
jmp
outsb
and
cld
pop
mov
jge
mov
loopne
out
mov
fiadds
jmp
fldt
push
push
mov
inc
sti
pop
fstps
jecxz
xchg
popa
lea
sahf
inc
jnp
pop
mov
inc
sub
sbb
or
mov
add
cmp
pop
ss
cltd
js
cmp
adc
mov
das
mov
outsl
lret
jae
lahf
in
pop
call
pop
or
xlat
les
jg
sub
sbb
pop
cmp
enter
mov
je
sbb
test
push
sbb
push
clc
pop
xchg
adc
into
pusha
jns
jle
lods
lret
cmp
sub
lds
fs
xor
mov
cmp
dec
nop
loopne
add
mov
lds
leave
lock
arpl
jns
or
mov
cli
cmc
inc
xchg
inc
fs
repnz
data16
or
lret
mov
jg
xchg
and
fildl
ret
lds
popf
fldcw
js
stc
xchg
and
in
ja
cmc
enter
lret
fsub
dec
bound
movsb
fnstsw
pop
stc
cmpsb
movsl
data16
fadds
dec
sbb
int
dec
hlt
push
jb
jo
addr16
mov
decb
fdivr
adc
ss
scas
sub
in
aas
push
scas
push
xchg
lret
ljmp
and
cmp
jp
in
jge
or
pop
cwtl
xlat
jb
mov
and
lret
shrb
repnz
leave
sbb
out
xchg
fdivrl
mov
dec
ds
lcall
mov
sbb
pusha
fs
dec
adc
adc
pop
out
mov
adc
dec
jbe
push
mov
loop,pt
and
int3
imul
jg
inc
sub
dec
mov
cli
inc
pop
movsl
jl
cmp
pop
inc
arpl
daa
push
dec
pop
fidivrs
cmp
test
xchg
push
sub
out
mov
lcall
jb
leave
fs
mov
add
jg
mov
clc
sbb
sbb
ds
or
les
add
pop
sbb
mov
insl
dec
das
popf
lds
dec
std
pop
dec
ds
mov
inc
jo
aam
inc
push
adc
shll
push
shll
sbb
dec
gs
mov
pusha
jno
cmp
das
bound
jne
mov
enter
cmp
pop
data16
xor
fidivrl
cmp
sbb
scas
jae
sti
sarl
mov
fstpl
pop
xchg
mov
fisubrl
stos
lods
iret
clc
mov
das
push
sub
mov
lods
push
shl
cmp
lds
cmp
jns
mov
or
pop
mov
fisttpll
fimull
fildll
push
xchg
arpl
cmp
sub
inc
test
movsb
filds
ret
daa
jmp
fs
mov
lds
je
mov
pushf
fldt
mov
pop
push
dec
inc
mov
xlat
or
xchg
pop
and
stos
jle
test
shlb
jns
mov
jg
test
popa
inc
fisubl
pop
sub
ljmp
pop
adc
repz
es
dec
jnp
adc
rcl
and
jne
inc
imul
jmp
aam
and
add
push
dec
cmp
xor
imul
mov
movsl
into
push
into
xlat
cmp
or
cmp
into
sbb
dec
outsl
mov
sahf
or
js
dec
push
xchg
bound
add
push
pop
mov
fwait
enter
je
xor
push
mov
rcrb
jbe
jp
insb
and
inc
jo
fisubrl
ljmp
movb
adc
sbb
pop
push
scas
jmp
loope
sbb
mov
lahf
or
js
jbe
adcl
sbb
leave
ds
push
jb
subl
pop
add
mov
mov
fbstp
and
sbb
pop
inc
movsl
add
cltd
pusha
mov
and
mov
xchg
into
aaa
xor
cmp
or
sub
adc
sub
outsb
pop
arpl
lds
int3
loop
jns
stos
repnz
push
cwtl
into
xchg
and
jo
sarl
jbe
imul
inc
pop
sbbl
aaa
pop
rcrb
and
idivb
or
jbe
jmp
xor
out
hlt
out
pop
cmp
push
lret
leave
jle
sbb
adcl
ds
out
sbb
aam
or
dec
fwait
out
lret
cmp
pcmpgtb
adc
data16
pop
jmp
fsubl
sbb
mov
sahf
xor
push
gs
in
inc
sbb
mov
outsb
jnp
sbb
pop
int3
shlb
and
mov
xchg
jecxz
pushf
js
loopne
cmp
lock
rclb
fdivs
out
in
es
sbb
dec
out
psadbw
add
jp
loopne
mov
or
insl
ds
jle
mov
pop
bound
data16
outsb
inc
jp
xor
bound
aad
mov
dec
jmp
adc
incl
push
sub
xlat
mov
sbb
jnp
outsb
and
sbb
or
mov
xchg
adc
mov
push
addr16
adc
jns
mov
fldt
push
vpcmpeqw
movsb
repnz
sbb
cmp
int3
dec
xchg
cmc
mov
dec
sbb
pop
data16
mov
out
outsl
inc
arpl
cmovne
idivb
sub
and
xor
xchg
ljmp
adc
push
adc
lretw
pop
pop
dec
mov
sti
hlt
sbb
xchg
scas
shll
xchg
mov
mov
lcall
mov
dec
sbb
add
fs
lcall
add
fiaddl
jns
mov
rcr
cmp
aam
or
dec
fistl
add
mov
out
loope
sbb
mov
adc
mov
push
add
dec
jg
ds
subl
sbb
cmp
or
ficompl
cli
add
jg
arpl
add
divl
rcl
inc
sub
sub
cli
mov
out
pusha
jae
mov
imul
dec
std
ret
lds
push
shlb
add
int
add
sarb
test
fwait
test
aas
pop
nop
les
enter
hlt
jecxz
cmp
inc
adc
ss
stos
icebp
in
lock
mov
cli
add
mov
out
pop
sbb
inc
ret
push
out
adc
xchg
inc
mov
popa
mov
mov
cmp
jle
mov
mov
cmp
inc
shlb
lds
jbe
cmp
fdivs
cmp
imul
add
add
cmpb
adc
stos
scas
fstps
sbbl
js
out
imul
pop
xor
stc
in
lcall
out
adc
adc
test
sbb
add
xchg
out
lcall
imulb
xor
pop
jle
sbb
sub
sti
cmp
addb
mov
push
sub
out
das
in
add
mov
jl
push
and
popa
jo
movsl
push
pop
push
cli
jo
mov
addr16
mov
mov
xchg
mov
cmpb
push
push
xchg
fmull
lcall
or
add
lcall
lea
mov
mov
sub
rolb
addb
jmp
xor
bnd
pop
stc
inc
mov
xchg
xorl
in
jmp
test
add
cmp
std
cli
dec
loopne
gs
jnp
adc
cs
dec
cmp
mov
mov
ss
mov
out
test
fcmovbe
arpl
dec
out
pop
mov
in
aad
xchg
and
dec
inc
mov
and
inc
loop
jae
into
shrb
mov
in
or
and
stos
rorb
ffreep
add
mov
mov
push
dec
cli
test
call
clc
out
js
or
lahf
cli
lret
mov
lcall
xchg
cwtl
hlt
jnp
lret
sub
ret
sub
pop
or
sub
or
xor
jmp
jb
jo
cmp
js
cli
scas
call
and
jnp
aas
popf
icebp
lahf
and
inc
mov
ficoml
jecxz
scas
sarb
and
lds
jg
push
or
scas
call
inc
or
and
inc
adc
and
adc
and
pushf
mov
lock
negb
scas
lret
xor
xchg
fldl
lea
cmp
cmc
inc
lods
fmulp
in
stos
fwait
mov
fiaddl
ret
insl
daa
lods
fsub
test
aam
mov
add
sbb
cmp
xor
inc
aas
mov
mov
stos
cli
xor
test
imul
bound
mov
loop
mov
pop
repz
push
sub
imul
in
and
outsb
sbb
mov
rcr
jmp
ds
dec
jb
loop
mov
ds
fwait
mov
loop
pop
jb
push
jmp
repz
jo
repz
ds
add
push
daa
out
ret
stos
ds
repnz
aas
out
jne,pt
sub
push
decb
psubusw
xor
fisubl
and
and
dec
loopne
jle
fisubrl
dec
imul
jge
das
inc
jo
cmp
mov
add
test
inc
inc
sub
mov
imul
adc
pop
loop
imul
or
cmpsb
mov
jns
fstps
cld
mov
aas
jno
repz
nop
imul
idiv
fcmovnu
pop
arpl
inc
mov
mov
lcall
loop
imul
inc
daa
ljmp
ljmp
loop
sahf
inc
pop
mov
mov
subl
mov
imul
pusha
sti
in
jb
cli
jle
lods
jecxz
sti
xor
aaa
ds
ljmp
push
sti
xor
repz
fnstenv
push
ficoms
mov
xchg
int3
stc
movsl
repz
cmp
add
cmp
pop
xor
xlat
imul
push
or
inc
lock
stos
xor
sbb
imull
sbb
cmp
jno
inc
xchg
fisubrl
cmp
std
ds
push
sbb
push
mov
pop
inc
out
ror
sbb
data16
push
rolb
or
rcrl
add
push
mov
and
mov
cmp
leave
scas
je
mov
dec
jp
sbb
pop
loope
loop
addr16
or
or
test
loope
cmp
and
xchg
mov
push
loopne
lcall
jne
cmp
xchg
pop
xchg
or
adc
ds
jno
sbb
ja
test
inc
loop
jae
pop
cmpsb
adc
cmp
imul
push
lcall
and
push
stos
icebp
sub
sbb
roll
dec
sub
test
fisubrl
out
addb
fists
pop
pop
mov
lret
scas
xchg
mov
inc
int
dec
mov
mov
mov
fldl
mov
cmpsb
dec
jg
scas
cmp
popf
mov
add
out
scas
push
xor
mov
div
stos
jno
shrl
mov
sub
and
rolb
pop
or
inc
cli
mov
fistps
xor
lret
or
pop
cli
mov
jl
xchg
out
int
mov
pop
sbb
popa
add
push
in
push
loopne
sub
jae
jo
mov
sbb
arpl
cmpsb
pop
jne
push
adc
scas
aas
repnz
dec
push
mov
shl
mov
mov
pop
fimull
cmc
ret
cmp
mov
jle
sbb
or
jp
aas
pop
pop
cli
push
mov
stos
shll
in
stc
int3
push
xchg
xor
cli
xchg
jno
cmp
ds
or
ds
jnp
cltd
ds
mov
ja
fwait
jp
into
or
push
inc
mov
pop
outsl
sbb
nop
pop
mov
int3
mov
into
es
mov
lds
mov
int
fldl
out
sub
inc
dec
add
inc
xchg
lock
or
imul
arpl
orb
cli
lea
push
or
ljmp
loop
xlat
add
fisubrl
jne
inc
or
fldenv
jno
repz
sahf
pop
outsl
out
ficoml
lods
mov
mov
ljmp
mov
dec
mov
pop
aas
pop
fildl
xchg
add
scas
or
jmp
push
mov
bswap
es
mov
mov
jb,pt
pop
mov
popaw
sub
push
adc
add
scas
dec
gs
sarl
cmp
mov
sbb
es
pushf
stos
mov
inc
hlt
ret
shl
mov
mov
aaa
cmp
dec
popf
or
sbb
dec
inc
into
push
adc
dec
decl
and
xlat
xchg
rcl
mov
push
mov
add
sbb
iret
leave
data16
mov
in
repz
dec
jg
es
mov
aaa
mov
sbb
lds
shl
adc
sbb
adc
sahf
sbb
cmp
jbe
jmp
cli
mov
dec
pusha
das
inc
xor
dec
mov
lds
sub
xchg
xchg
lea
jmp
cmp
mov
sbb
mov
dec
sub
inc
push
xor
sbbb
insb
scas
xchg
addl
mov
std
lcall
mov
stos
or
inc
pop
mov
mov
arpl
cli
jnp
mov
add
adc
xchg
aam
mov
pop
gs
xchg
cmp
stos
lds
popa
and
sbb
and
xor
mov
lret
das
test
push
and
in
imul
adc
jne
jg
dec
mov
arpl
pop
mov
push
aaa
xchg
or
inc
test
add
inc
mov
push
popa
mov
mov
pop
inc
dec
loop
jns
and
mov
dec
in
jg
sbb
aas
push
shlb
shlb
xchg
lds
jg
std
movsl
nop
add
stos
ret
push
hlt
add
mov
imul
mov
mov
test
mov
push
mov
lret
jb
jle
mov
orl
les
dec
xor
pop
xor
fisubrs
sahf
sub
xchg
sbb
push
add
movsb
push
imul
mov
mov
lods
int3
movsb
add
test
stos
dec
xchg
dec
adc
shlb
inc
and
xor
fdivr
pop
divl
imul
dec
mov
aas
add
das
add
mov
in
shrb
ljmp
imul
mov
fadds
dec
das
push
cltd
jns
sub
scas
cmp
cmp
mov
call
lods
and
aam
sti
push
imul
push
jp
stos
or
mov
mov
mov
jne
fstl
mov
int3
loop
mov
das
pop
pop
addr16
push
sub
ret
das
roll
push
out
je
inc
les
dec
push
call
push
mov
lahf
mov
lock
aad
mov
xchg
or
push
cmpsl
xor
mov
ja
jge
or
outsl
gs
push
jb
xor
and
add
inc
xor
loope
jnp
cmpsb
push
pop
jb
jnp
jno
pop
insb
clc
xor
cli
imul
ret
cmp
add
iret
jne
lock
rorb
inc
jns
ljmp
fs
sub
vpmovzxbd
jp
cltd
mov
jo
jbe
pop
test
mov
dec
sbbb
sub
loope
sub
mov
dec
ljmp
loop
pop
inc
push
ficoml
mov
push
mov
ds
lock
pop
sbb
out
lahf
aas
clc
int
xchg
test
adc
jb
mov
or
pop
push
jo
stos
ss
std
sahf
je
fcompl
outsl
ret
jl
scas
movsl
daa
sub
mov
dec
call
stos
cs
popa
sbb
jo
js
mov
cmp
sbb
idiv
push
mov
outsb
push
push
push
jl
sahf
adc
out
cli
and
push
test
jg
inc
sahf
aam
fildl
cli
cmp
aas
mov
cmpsb
pop
mov
mov
outsb
mov
add
xchg
lcall
mov
push
test
aas
addr16
ljmp
push
leave
jle
jmp
data16
icebp
ljmp
stos
dec
mov
inc
dec
cli
popf
lods
mov
cld
lahf
jb
stc
mov
scas
jg
sub
subb
es
stos
push
cmc
hlt
cmc
and
ja
sub
inc
jns
adc
push
sub
pop
je
pop
shrl
adc
das
pop
ds
jns
test
outsb
loop
sbb
repz
or
pop
shrl
js
mov
push
add
pop
cli
pop
mov
lahf
add
push
test
push
push
js
jl
mov
sahf
fildl
out
mov
jno
aam
out
sbb
mov
into
gs
outsl
sbb
xlat
iret
sbb
repnz
imul
mov
cmc
aas
lret
hlt
sahf
jno
sarb
out
mov
sbb
sbb
cmpsb
add
dec
fdivrp
fidivrs
push
push
mov
and
inc
fdiv
push
push
inc
movb
sti
out
pushf
xor
jns
dec
inc
push
xchg
fs
fldcw
mov
jae
clc
fcomps
test
cmc
ds
dec
push
cli
dec
cmp
fnstsw
aam
cmc
pop
sbb
std
lcall
jno
sahf
data16
nop
sahf
repz
js
push
lcall
mov
fs
jg
fidivrl
inc
cmpl
jb
adc
mov
imul
gs
sahf
jp
insl
add
call
shlb
cli
pop
pop
lea
add
push
test
sbb
mov
jns
cmp
loop
repz
fs
repz
mov
nop
imul
stc
xor
pop
or
and
call
dec
sahf
sarb
dec
or
sub
jno
mov
mov
pop
fs
pop
xchg
xor
xor
jge
sahf
dec
push
pop
je
loopne
cmp
fwait
sbb
arpl
jns
movsl
sbb
mov
rorb
sub
adc
ds
inc
pop
sahf
cmp
mov
push
or
test
dec
pop
pop
pop
pusha
rolb
stc
or
lods
mov
andb
fwait
dec
add
ds
dec
fwait
icebp
pop
pop
cmpsb
aas
sbb
push
cmp
in
jo
fistps
jge
in
push
cli
cld
out
mov
xchg
loopne
fwait
cwtl
push
ret
loopne
aas
xor
stos
lret
and
sbb
pushf
inc
sbb
pop
add
cmp
xchg
insb
jmp
je
sub
jae
data16
cltd
loope
sbb
je
cmp
jl
and
sbb
push
xchg
fnstsw
lea
jbe
sahf
imul
cmp
shrb
pop
stc
mov
ds
and
cmp
pop
adc
cmp
call
sub
xor
stc
sub
aas
jmp
stos
dec
hlt
dec
fisttps
sbb
add
js
sbb
inc
xchg
lcall
mov
xor
sbb
sub
dec
push
lret
lcall
jae
js
movl
inc
inc
out
cmp
incl
mov
ljmp
jo
repz
lret
mov
scas
sarl
fsts
dec
jo
test
loop
xchg
test
movsl
mov
outsb
dec
fwait
pop
sbb
and
mov
xlat
inc
fucomp
add
ficoml
ret
stos
sub
ds
xorb
shll
leave
cmp
enter
out
pop
pop
jg
jp
xor
movsb
daa
sbb
fidivrl
ja
xchg
mov
dec
xor
push
push
test
or
testb
nop
mov
xchg
jp
nop
mov
mov
pop
out
aas
dec
int3
call
es
mov
jo
add
pop
divl
sahf
call
clc
ss
jmp
mov
dec
imul
dec
push
cmp
ljmp
dec
mov
insl
xor
jge
popa
cs
cmp
pop
bound
add
std
pop
jmp
xor
pop
scas
jnp
cmp
mov
xchg
pusha
cwtl
out
mov
xor
jg
imul
pop
insb
loope
icebp
icebp
outsb
xchg
inc
xor
add
push
sub
test
cmp
dec
pop
scas
mov
scas
lods
addr16
imul
mov
popf
pusha
pop
fldcw
xchg
fldcw
fildll
mov
push
add
xor
sub
lea
cli
lret
and
jae
daa
dec
mov
dec
or
dec
jbe,pt
ficoms
ds
jecxz
mov
in
add
sbb
pop
sbb
sbb
loop
cmpsb
int3
and
mov
inc
xor
cmp
sahf
ss
adc
and
sub
out
jmp
ds
and
loopne
dec
sahf
fnstcw
int
fisttpll
and
add
ds
sub
jge
jno
pop
loopne
sub
lahf
pop
add
add
call
insl
push
mov
sub
loopne
repz
fwait
loop
test
loopne
cmp
and
or
mov
ret
stos
ds
dec
add
repz
push
xor
outsl
fcmove
loopne
bound
fidivrs
loopne
mov
insl
jp
mov
popf
lock
push
daa
out
rcrl
pop
jo
sbbb
loopne
sbb
ds
pop
nop
cmp
jno
xor
in
cmp
nop
repnz
adc
divb
dec
lcall
cmpsl
loopne
inc
mov
jb
fimuls
imul
arpl
loopne
js
mov
sbb
repnz
rclb
sbb
push
sbb
cmp
jns
push
jne
stc
xchg
insl
adc
cli
fsub
fstps
add
mov
repnz
ficomps
stos
sbb
sub
inc
out
ficomps
dec
xor
fildl
test
mov
adc
mov
sahf
inc
call
cmp
test
in
fwait
xchg
sub
aas
and
cmpsb
ret
fists
out
repz
dec
ret
ret
pop
sbb
sub
stos
addr16
mov
pusha
fcompl
rorb
int
repz
mov
cmp
or
xchg
sahf
es
or
pop
fs
mov
and
adc
or
stos
sahf
add
in
sub
popa
pop
mov
fisubrl
fs
int3
fstl
xchg
adc
cmpl
pop
pop
inc
cwtl
stos
aaa
lret
or
jl
sub
lods
push
les
loopne
fstl
call
bound
fiadds
stc
sbb
sub
loopne
xchg
pop
loopne
and
aaa
mov
xor
in
add
in
cmp
mov
stos
jae
xchg
lahf
adc
sub
mov
lds
fwait
out
das
push
in
jb
aam
jmp
stos
imul
mov
lcall
cltd
sbb
cmpsb
adc
dec
inc
or
xchg
adcb
lods
mov
inc
mov
mov
mov
fnstsw
insl
mov
nop
repz
pop
das
cmp
mov
cwtl
stos
push
enter
into
lret
xor
xorb
call
out
jae
mov
ss
out
xchg
ljmp
jg
lcall
xchg
and
dec
and
sbb
inc
xor
mov
cwtl
inc
repz
rdpmc
mov
lret
jne
out
adc
ror
fisttpl
dec
jp
pop
jnp
fidivs
and
lock
mov
cli
push
imul
scas
pop
loop
inc
and
inc
and
dec
in
lds
loope
ficoms
sarb
lcall
push
pusha
jmp
push
bound
cli
je
sarb
out
shrl
mov
push
daa
jg
and
sarb
inc
adc
sbb
ds
mov
xor
sub
sbb
xchg
dec
adc
dec
cmp
xchg
dec
lret
es
cmpsb
adc
sarl
sbb
subb
push
push
or
popa
pop
ljmp
gs
imul
jmp
outsb
repz
sahf
dec
outsl
xor
fnstcw
mov
xchg
dec
and
jge
cmp
cmpsl
pushf
loopne
lods
fstpt
mov
jg
xchg
aaa
dec
loop
sbb
pop
push
fwait
jns
pusha
ss
xor
dec
mov
rsm
pop
test
aam
sub
sar
bound
aad
cmc
and
fidivrs
pop
jecxz
mov
pushf
aaa
mov
loop
mov
jg,pt
pop
push
ds
fwait
sbb
cmpsb
andb
mov
xorb
push
dec
mov
insb
or
jnp
fstps
pop
sahf
jb
xchg
cmp
loopne
add
imul
pop
popf
test
mov
out
jnp
jle
mov
fidivl
add
sbb
jg
jns
fstps
daa
loopne
loop
outsl
idivl
add
addr16
jo
pop
dec
jbe
push
mov
xor
xorb
out
xchg
jnp
jns
ds
inc
xor
push
decl
out
iret
inc
mov
ret
and
and
and
adc
sti
iret
sbb
pop
ds
addr16
test
call
inc
jmp
xor
jle
mov
add
xor
push
add
sbb
mov
ds
pop
and
addr16
rcrl
icebp
push
add
push
popf
ret
pop
into
sub
data16
or
scas
xchg
mov
and
pushf
outsl
mov
mov
sbb
aaa
mov
mov
stos
dec
xor
clc
rclb
lret
std
or
in
jbe
data16
imul
call
xor
mov
js
ss
enter
lods
push
inc
sbb
fdivrl
pop
mov
addr16
ret
mov
dec
xor
pop
sti
shl
getsec
les
cltd
push
mov
fwait
imul
fnstcw
fwait
or
sti
xchg
sbb
scas
mov
in
inc
sub
sbb
sbb
pop
dec
ljmp
push
mov
shlb
stc
ljmp
or
imulb
mov
aaa
scas
dec
mov
pop
mov
leave
cmp
in
imul
out
enter
jp
mov
lock
roll
or
push
push
fcmove
jne
dec
pop
data16
ret
jg
dec
fiaddl
fs
xchg
loop
push
stc
daa
sbb
xor
aaa
leave
cltd
inc
ficompl
addl
addr16
sbb
or
pop
stos
lret
add
or
mov
popf
sub
test
and
clc
mov
adc
loopne
ljmp
mov
pop
push
lds
js
popl
push
ret
bound
push
lahf
incb
enter
pushl
imulb
dec
js
push
push
fsubr
movsb
lock
sub
lods
data16
push
pop
jbe
popl
mov
leave
sti
xchg
int
leave
sbb
add
pop
xor
test
cmp
mov
sbb
sub
adc
xchg
mov
lods
sbb
test
outsl
arpl
movsb
adc
jp
das
lret
mov
mov
cwtl
adc
cmp
sbb
sub
sbb
cs
das
mov
rolb
fstpl
mov
imul
sbb
cltd
insb
mov
fidivs
cltd
orl
cltd
sbb
pop
lea
inc
jecxz
ret
loop
leave
ljmp
mov
xchg
dec
mov
adc
daa
inc
cltd
inc
clc
bound
pop
inc
xor
outsb
dec
scas
ja
pushf
pop
es
push
adc
les
or
add
xor
inc
lds
insb
lds
imul
xor
pop
fsubrs
sub
cmpsb
dec
dec
sub
ret
aaa
jae
mov
sbb
ljmp
sub
xor
pop
add
sbb
repnz
cs
lret
rorl
pcmpgtd
inc
scas
inc
jp
test
adc
pushw
cmp
push
xchg
fimull
in
cmp
mov
cmp
adc
mov
enter
adc
cwtl
cs
pusha
inc
movsl
sarl
pop
imulb
dec
and
jb
mov
negb
sbb
and
stos
push
js
ret
adc
lret
xchg
xchg
dec
jno
mov
mov
push
imul
xor
xchg
dec
rcr
fwait
movsl
add
inc
js
aaa
div
add
sbb
xor
inc
mov
sbb
mov
and
xchg
movsl
ja
les
or
sub
dec
ja
stos
pop
inc
mov
push
jl
adc
sahf
dec
lds
insb
testl
or
movsl
and
mov
mov
addr16
fcmovu
inc
xchg
mov
lret
push
pop
ds
inc
xchg
inc
mov
rorl
lds
js
imul
sbb
mov
add
cmp
jne
rcrb
dec
ds
fimuls
sarl
xchg
fisttps
cli
xor
in
mov
inc
ds
iret
cmp
cmp
fs
inc
ds
push
pop
loop
outsl
jmp
sub
mov
sub
jecxz
add
bound
das
jb
fisubl
ret
imul
cwtl
push
fldl
push
call
mov
mov
mov
cltd
xchg
ds
cmp
imul
jae
sbbb
adc
push
jle
lcall
sbb
pop
add
mov
in
push
data16
sti
ljmp
imul
sbb
mov
mov
push
or
pop
dec
sahf
push
ds
dec
mov
orl
jle
adc
jno
fiaddl
hlt
jmp
ds
fs
nop
mov
mov
push
cwtl
pop
and
push
or
cmpsb
xor
adc
cmp
mov
pusha
outsl
dec
xchg
sti
push
jecxz
ds
cld
mov
imul
sub
cmp
inc
mov
cmp
cmp
or
mov
pop
mov
mov
push
sahf
leave
pop
mov
testb
loope
fs
roll
out
cmp
imul
lldt
in
fs
cmp
stc
sbb
dec
mov
lcall
dec
xchg
pusha
add
fimuls
lret
and
es
clc
loope
movsb
add
pop
mov
pop
jns
push
fisubrl
pop
dec
dec
mov
inc
and
sbb
sbb
test
popa
push
and
push
test
push
cltd
lahf
enter
jmp
push
test
repz
cmp
sarb
cwtl
js
lahf
pusha
mov
jge
loope
aaa
push
inc
nop
cmp
push
repz
xchg
pop
in
cmp
push
inc
js,pt
repz
idivl
jmp
fbld
push
iret
sbb
loopne
sbbb
cmp
inc
mov
mov
out
jmp
lods
or
ds
pop
das
add
out
sub
sbb
jmp
inc
xchg
dec
loop
out
jns
xor
pushf
cli
imul
fidivs
arpl
jnp
sub
cmp
mov
fcmovu
mov
sbb
sub
mov
mov
jnp
jbe
mov
mov
cmp
in
sub
pop
pop
dec
jns
outsb
cmp
sub
pop
cmp
cmp
imul
inc
add
jmp
xor
and
pusha
in
loopne
sbb
pop
aaa
sub
mov
dec
mov
les
and
and
enter
ljmp
ficoms
fs
mov
fs
out
jmp
inc
pop
clc
fs
mov
mov
and
lcall
dec
fistpll
ja
add
pop
add
ds
cli
sbb
sbb
adc
stc
ds
test
jecxz
ds
lahf
jecxz
cmp
out
mov
stc
popf
ds
lock
daa
mov
loopne
jmp
cmpsl
lock
fistpl
cmp
scas
and
jmp
xor
or
pop
mov
ds
aam
mov
hlt
inc
sub
bound
bound
jns
stos
and
int3
jmp
imul
jmp
mov
cmp
dec
xor
test
loop
xrelease
pusha
scas
xlat
dec
xchg
cld
mov
mov
aaa
mov
scas
push
popf
dec
pop
xchg
push
pop
mov
into
or
sub
cmpsb
stos
rolb
enter
jge
js
out
dec
icebp
pop
icebp
je
cmp
sbb
imul
dec
insl
mov
imul
enter
fs
lret
popa
mov
pop
add
push
dec
and
xor
call
sbbb
imul
xchg
cmp
fnstenv
data16
dec
mov
in
sbb
jecxz
sahf
mov
dec
dec
pop
mov
pushf
inc
jae
sub
mov
add
imul
pop
into
dec
sub
or
stc
pop
pop
fnstcw
popaw
sarl
inc
arpl
mov
jecxz
push
in
jmp
dec
add
in
cmp
xchg
cs
dec
lods
dec
lret
stos
cmp
adc
sbb
and
loop
in
mov
outsl
jb
xchg
xor
mov
and
cmp
fiaddl
jb
outsb
mov
jae
rolb
ficomps
insl
inc
enter
xchg
lcall
dec
inc
sbb
out
pop
pop
shl
add
leave
into
fucomp
sbb
push
mov
dec
into
pop
pop
xor
add
scas
rolb
push
int
in
outsb
adc
clc
pop
jb
sub
nop
add
adc
dec
pop
adc
test
adcl
cli
sti
and
insb
shrl
dec
fs
xchg
add
pop
mov
sahf
jg
jo
lret
push
in
mov
mov
addr16
and
sub
jne
jns
stc
and
pop
sub
dec
xchg
in
jne
lds
push
xchg
push
xor
int3
jp
outsb
es
pop
lcall
aas
mov
and
dec
sbb
pop
cmp
add
jbe
gs
xor
dec
cltd
xchg
sub
pop
or
pop
pop
cmp
loopne
jae
xor
inc
push
push
pop
pop
mov
cli
jmp
push
jl
sbb
out
xchg
std
into
ret
push
mov
in
popa
and
push
or
insb
icebp
addr16
mov
rcr
adc
addr16
dec
push
push
jno
dec
jp
xchg
xchg
pop
dec
cmp
shrl
mov
fwait
inc
and
std
negb
ljmp
in
lea
cwtl
jmp
sbb
arpl
sbb
pop
and
icebp
lret
mov
adc
dec
dec
jae
testb
mov
iret
xchg
push
mov
cmp
mov
inc
pop
sub
scas
mov
dec
sbb
repz
mov
mov
inc
movl
cltd
sbb
cmp
adc
cs
jle
adc
cmp
aas
lret
cmpsb
pop
mov
xchg
insb
jno
push
cmpsl
mov
cmp
stos
movsl
inc
xchg
sbb
aad
aas
scas
fstps
dec
dec
pop
pop
cmc
pop
mov
ret
pop
dec
cmpsb
dec
mov
pusha
jge
inc
sarb
push
and
ljmp
in
jle
sbb
push
push
pop
fistl
mov
xor
pusha
push
jmp
mov
or
stos
in
xchg
push
sub
es
ret
cmc
mov
sbb
sbb
sbb
xchg
adc
xor
dec
scas
fwait
in
xor
and
or
lds
outsb
loopne
stos
icebp
cs
xchg
xchg
xchg
ds
cmp
mov
stc
aam
inc
es
outsb
outsl
test
xchg
pop
inc
aas
cmpsl
sub
jbe
out
mov
mov
xor
pop
lock
jne
nop
je
pop
or
adc
filds
and
dec
cmp
jp
insb
lcall
jo
mov
mov
and
fcomps
sbb
aaa
pushf
or
lcall
dec
data16
insb
mov
pushf
or
pop
pop
lds
push
jmp
mov
xchg
dec
int3
into
jae
jle
lock
adc
push
mov
gs
in
jmp
pop
push
lret
mov
stos
mov
pop
adc
jns
icebp
xchg
test
gs
addr16
pop
cmp
ficoml
xchg
rcr
pushw
sub
repz
inc
inc
sub
lds
dec
adc
leave
add
add
cmpb
pushf
loopne
movsl
push
dec
fwait
fwait
cmpsl
mov
inc
cld
shlb
popf
jge
call
xchg
loopne
cmpsl
push
and
adc
inc
or
scas
dec
xchg
and
xchg
outsb
sbb
xor
mov
push
dec
stos
cmp
pop
orl
sub
xor
cs
lds
mov
and
mov
lds
aaa
das
out
pop
jb
jg
mov
inc
jmp
sarl
push
pop
pop
enter
jb
mov
mov
push
push
stos
movsl
mov
xchg
push
add
cmp
out
js
lds
xchg
inc
xorb
gs
jnp
aaa
imul
rcrl
inc
imul
fwait
test
data16
dec
aaa
pop
and
dec
jae
std
sbb
insb
jle
push
fisttpl
inc
insl
mov
es
xor
lret
jnp
cmpsl
int3
nop
jno
jae
or
mov
hlt
or
std
ret
popa
xor
and
jnp
xor
add
popa
push
aaa
adc
xchg
inc
sbb
dec
repnz
push
jnp
jae
sbb
addl
inc
dec
xor
push
movsb
xchg
movsb
and
rorb
push
pop
add
sbb
jbe
fwait
cli
mov
js
pop
fidivl
jp
fidivrs
jns
dec
add
sbb
sti
jnp
or
sbb
sbb
jp
sbb
inc
leave
cmp
imul
loopne
dec
fiadds
mov
adc
cs
lcall
popa
cmp
push
mov
call
imul
dec
cli
fistps
cltd
data16
cmp
sti
jns
or
sahf
dec
jmp
cmpb
js
xchg
arpl
jb
pop
addr16
mov
bound
and
pop
js
mov
loopne
mov
jl
int3
adc
jmp
xchg
jno
mov
and
cld
sub
out
or
inc
into
pop
xchg
sahf
cmp
sub
ds
ss
push
cltd
sbb
inc
pop
inc
movsl
js
cmp
mov
cli
inc
jle
or
mov
jnp
shr
cmp
mov
fwait
out
push
push
aaa
test
cmp
mov
xor
fisubrl
cmc
adc
leave
xor
stos
lahf
adcb
mov
popf
push
out
and
cmp
lds
rcrb
in
out
push
xchg
enter
dec
in
jne
aam
loopne
ret
rcrl
cmp
xor
pop
inc
push
or
push
inc
scas
je
test
inc
mov
popl
inc
inc
decl
stc
adcl
out
dec
enter
imul
lret
mov
hlt
xchg
mov
mov
leave
js
test
sbb
jbe
inc
pop
js
or
test
test
mov
and
xchg
push
jp
xchg
mov
inc
and
lds
in
sbb
cmp
add
cmp
jo
sub
add
dec
xchg
cmp
sub
testb
inc
cmp
push
je
mov
pop
stc
and
dec
stos
pop
ret
aas
rclb
inc
cs
cli
mov
outsl
call
imulb
fsubrs
adc
lock
cmp
jle
inc
xchg
mov
jae
orl
jp
imul
popa
inc
aaa
jno
sub
imul
sbb
lcall
les
pop
stos
push
insb
add
notb
sbb
mov
scas
jle
rolb
sbb
sub
lds
pop
xchg
shrl
lret
aaa
inc
pushf
dec
sub
stos
ss
cmp
lea
and
jge
lret
mov
leave
sbb
fwait
push
pop
pop
mov
and
test
and
dec
xchg
or
scas
rcr
cmp
mov
mov
fmuls
fcomp
sarb
imul
mov
lahf
xchg
cs
repz
jo
push
sub
and
das
ds
pop
jno
jmp
sahf
jp
mov
movsb
lds
cmp
add
fcmovbe
xchg
pop
inc
lret
or
pop
mov
jo
mov
sbb
cwtl
dec
stc
in
push
sub
dec
adc
xchg
mov
stos
daa
pushaw
mov
loope
testb
dec
outsl
je
notb
dec
jo
mov
jb
jmp
xchg
call
cmp
jnp
adc
mov
lock
dec
inc
pxor
and
xor
jecxz
sub
mov
adc
cmp
frstor
and
xchg
cld
jp
arpl
out
sub
xor
out
ja
and
test
cli
insb
or
je
jbe
fsin
sbb
sbb
push
dec
pop
js
sub
push
mov
cltd
cmp
inc
in
add
or
mov
jo
bound
cmp
imul
mov
xchg
or
arpl
test
aam
pop
pop
dec
test
int3
add
fcoml
adc
ljmp
fisttps
dec
rcl
inc
lea
lea
lea
lea
mov
or
jecxz
or
xchg
aaa
mov
shlb
data16
or
std
arpl
add
cmp
sahf
pop
inc
aaa
cmp
lcall
jmp
xchg
bound
dec
jbe
cmpb
fldt
mov
inc
cwtl
mov
dec
imul
sub
and
pop
jnp
shll
ret
loop
xchg
sbb
xor
mov
adc
rolb
mov
cmpsb
dec
mov
and
lcall
mov
cmp
jmp
xor
ret
pop
pop
test
sbb
dec
mov
lcall
cltd
xor
jg
sbb
jp
or
push
das
or
xchg
rcll
adc
adc
xchg
cmp
jae
addr16
mov
into
mov
xor
lcall
outsb
push
je
dec
cli
pusha
and
mov
bound
pusha
push
sbb
fs
sub
jo
std
dec
fwait
scas
hlt
in
and
inc
cmp
mov
pop
sarl
cmc
jne
outsl
sub
daa
sbb
mov
mov
data16
jae
stos
mov
scas
add
fidivl
mov
test
into
xchg
sub
pop
jmp
call
dec
xor
mov
adc
sbb
push
imul
test
xor
mov
mov
push
cmp
pop
push
sub
verw
mov
stos
xor
scas
push
cmp
xchg
inc
pop
arpl
xchg
push
js
mov
mov
mov
sub
xchg
or
sbb
add
cmp
adc
xchg
add
push
mov
fists
xor
and
loop
add
dec
test
imull
ret
push
ljmp
mov
jg
lcall
sub
push
aad
imul
nop
xchg
pop
cmp
mov
jae
daa
sbb
pop
fsubs
xchg
gs
stos
jmp
lret
xlat
popf
inc
jle
sbb
mov
or
pop
push
fisttpll
scas
xchg
cmp
push
and
lea
add
jb
bound
adc
mov
out
push
call
stos
jecxz
je
mov
cltd
imul
add
imul
mov
lds
xchg
add
stc
jp
mov
movsl
push
pop
ss
inc
nop
sahf
dec
mov
add
leave
cli
inc
into
mov
jl
pop
add
mov
xor
lock
xor
data16
test
gs
add
dec
dec
ror
xchg
es
sbb
popa
push
fs
xchg
pop
mov
cwtl
ret
adc
stc
xchg
mov
mov
into
jb
aaa
mov
dec
outsb
sub
mov
call
aas
sub
mov
enter
dec
aad
imul
cmpl
test
sbb
aad
fsubs
repz
repz
jnp
sub
xchg
push
mulb
or
cmp
push
push
cwtl
lock
push
mov
mov
in
ret
jb
inc
mov
lret
mov
das
adc
gs
mov
iret
push
mov
inc
enter
pop
and
jo
sbb
scas
jns
lret
xor
inc
popa
and
dec
jne
ss
js
sbb
call
or
sti
test
out
pushf
sbb
sub
jbe
push
adc
ljmp
sahf
sub
xor
das
xor
jmp
push
or
push
lahf
aad
mov
cmp
jge
pusha
add
fs
adc
jecxz
divl
popf
fimull
mov
fdivl
xchg
or
pop
sbb
push
or
jo
scas
cmpsb
cmp
add
mov
push
xchg
mov
pop
mov
notl
sbbb
xchg
xchg
leave
pop
shrb
adc
fadd
push
pop
rolb
hlt
jecxz
leave
lret
push
push
dec
xor
call
xor
jno
imul
into
scas
arpl
in
fstpt
pop
jp
movsl
dec
dec
orb
dec
sbb
inc
push
mov
mov
pop
xor
jmp
xchg
xor
jmp
leave
or
out
js
data16
push
dec
push
mov
xchg
shrb
push
push
pop
inc
ss
push
push
mov
jb
dec
jp
movb
xchg
pushf
mov
inc
cltd
mov
arpl
int
stos
jmp
pop
push
jmp
sbb
cld
xor
mov
xchg
mov
xor
negb
mov
arpl
mov
je
mov
push
fisubl
dec
cltd
fstpl
or
cmp
loop
arpl
in
sub
cmp
addr16
lds
mov
adc
mov
sti
xor
push
pop
jnp
pop
mov
push
fsubr
sub
mov
aam
mov
mov
rcll
mov
xor
xorb
lods
in
sti
cmp
jae
inc
add
jne
sbb
mov
idivb
es
movsl
jecxz
fdivrs
dec
add
cmp
pop
rcl
ljmp
rolb
popa
cmpsb
adc
pop
xchg
dec
aas
sbb
gs
mov
shll
xchg
loop
movsl
sbb
mov
cmc
bound
scas
fidivrs
aam
ret
int
xchg
pop
xlat
mov
outsb
insb
ljmp
lahf
sbb
and
dec
inc
adc
dec
jbe
cli
push
in
dec
pop
fimuls
out
adc
jmp
insl
pop
jp
push
outsb
sbb
push
dec
push
lock
gs
mov
les
ds
cmp
cli
xor
xchg
adc
aas
push
sub
repz
insb
testl
dec
push
test
out
sbb
scas
addr16
sbb
dec
cmp
cltd
push
cmp
ljmp
lcall
fs
or
scas
cmp
inc
mov
mov
xor
sbb
xor
aam
add
ds
jnp
sub
dec
pop
dec
xchg
dec
pop
test
jp
adc
jbe
loop
iret
lea
mov
jecxz
js
and
nop
mov
sub
jg
push
push
pop
js
icebp
lret
les
scas
inc
dec
insb
mov
add
je
pop
adc
mov
mov
and
inc
shlb
lret
pop
bnd
xchg
cmp
movsb
xchg
stos
xor
jecxz
and
sbb
loopne
lods
out
pop
push
ret
out
add
adc
sti
push
push
jo
dec
cmp
jb
cmpsb
and
cmp
and
jmp
rorb
test
cmp
jg
gs
jmp
mov
int3
adc
insb
jmp
sub
cmpsb
pop
inc
xchg
cmp
jno
pop
pop
mov
dec
cmp
inc
mov
mov
fiaddl
hlt
fcomip
mov
xchg
addr16
jle
fwait
loopne
cli
das
je
pop
enter
or
popa
leave
lds
mov
mov
mov
dec
jp
int3
outsl
and
and
xchg
jmp
dec
pop
xor
xchg
test
mov
enter
loope
pop
xchg
std
inc
jns
and
fstps
test
inc
sub
inc
jge
mov
aas
cmp
sub
cmp
inc
fwait
ret
rolb
sub
cmp
cmp
jp
cli
jg
pop
shr
cltd
cs
sahf
sbb
mov
rcrl
xor
sub
mov
push
lock
ljmp
scas
jns
movsl
stos
scas
test
pushf
dec
sahf
mov
push
sbb
push
andl
xor
das
jmp
push
fmull
mov
popa
mov
mov
xchg
xor
addr16
in
add
loop
mov
out
fmul
xchg
repz
mov
and
mov
xchg
scas
shlb
das
mov
out
and
popa
repnz
fwait
enter
adc
xchg
data16
insb
outsl
call
sub
and
dec
nop
or
pop
std
jp
add
outsb
fidivl
jp
es
jg
jo
lock
imul
insb
das
push
and
out
subl
sub
out
inc
das
sub
sar
dec
sub
shll
adc
xor
fsubr
loop
xchg
xchg
push
pop
cmp
inc
into
cmp
int
inc
push
rcl
push
or
in
jecxz
stos
and
jo
push
enter
adc
mov
mov
leave
scas
pop
std
out
xor
push
pop
pop
mov
test
mov
xor
into
test
pop
jg
dec
inc
push
push
push
into
cmp
test
test
cmp
dec
int3
popa
mov
js
sbb
rorb
or
loop
enter
test
cltd
dec
stc
test
push
sti
jle
fiaddl
je
repz
pushf
add
xor
mov
fcompl
jmp
in
jmp
and
sub
sub
stos
xchg
push
sub
pop
ds
fcomps
cltd
cmp
pop
sub
xor
jmp
inc
loopne
sub
mov
mov
pop
scas
mov
pusha
mov
andl
jmp
stc
mov
and
aaa
mov
mov
mov
shl
jbe
cmp
jp
jp
in
jnp
cmp
cmp
and
cmp
insb
jns
mov
mov
cli
sbb
movsl
push
idivb
sub
sbb
xor
bound
push
scas
ss
sbb
inc
movsl
mulb
sub
xchg
out
idiv
xor
sbb
mov
cmp
add
xor
mov
fisubrl
sub
add
lret
fnstcw
movsb
mov
mov
int
ja
mov
xchg
cmp
movb
call
stc
scas
sbb
sbb
mov
push
sti
lock
in
mov
and
cmp
jae
daa
fcmove
ret
ds
xchg
loopne
sub
loope
or
js
xchg
lcall
push
clc
xor
ud0
sbb
aas
cmp
rcrb
pop
out
mov
or
sbb
loop
jb
jb
shl
je
lret
inc
xor
and
pop
fcmovu
push
daa
cmp
popa
ja
pusha
aas
xchg
int
hlt
rorl
push
or
jb
out
pusha
test
cmp
push
xchg
push
pushf
bound
cmp
mov
inc
push
dec
sub
lds
shlb
mov
out
or
dec
cmp
int
jne
adc
xor
daa
das
ljmp
sbb
inc
andl
pushf
fiadds
test
sub
inc
scas
ljmp
addr16
cmp
mov
fstps
out
adc
sbb
xchg
mov
push
and
daa
xor
les
shlb
dec
loope
and
mov
jmp
imulb
jmp
or
dec
push
fs
cmp
pop
dec
loope
mov
push
inc
inc
adc
out
pop
mov
lds
xchg
and
cmc
mov
mov
sub
stc
pop
push
sarl
out
jbe
fisubl
sub
dec
mov
out
repnz
push
imul
fisttpll
and
mov
mov
sub
es
xor
nop
jb
ds
ret
and
mov
pop
cmp
xchg
mov
sbb
mov
jp
repnz
sbb
jl
ljmp
cmp
sbb
mov
or
imul
xchg
das
leave
addl
pop
xor
push
popf
ret
jne
sbb
pushf
lret
and
loop
imul
jge
jne
sbb
mov
pop
xchg
jl
mov
insl
enter
movsb
xchg
daa
inc
daa
orb
pop
bound
stos
sti
dec
jb
dec
sub
mov
adc
shrl
dec
jb
push
fldenv
xchg
call
jb
mov
int
lcall
dec
data16
mov
and
nop
subb
mov
sub
fiaddl
mov
mov
xchg
jg
xchg
sub
hlt
test
into
sbb
nop
test
xchg
outsb
dec
jl
ficoms
repnz
lock
inc
je
pop
jae
jg
lds
or
arpl
bound
fdivrl
push
sbb
adc
mov
or
inc
mov
cmpsb
cli
sbb
cmp
pop
mov
ss
mov
pop
fiaddl
daa
and
sti
push
xchg
jb
push
aam
into
stos
mov
std
cs
shl
push
arpl
loop
rorl
mov
fisubl
fldl
pop
or
es
inc
pop
jp
mov
inc
js
pop
test
fsubrl
inc
repnz
loop
inc
dec
ficoms
dec
lock
pop
mov
popf
xchg
cld
ss
jo
ja
insl
or
adc
bound
and
cmp
arpl
push
xchg
fdivl
fiaddl
cmp
mov
cli
dec
add
mul
neg
shrb
pop
adc
mov
jle
fldenv
adc
xchg
pop
add
jbe
push
cmp
pop
and
pop
push
aas
pop
ljmp
addr16
pop
add
bound
ret
push
push
jmp
cmpsb
outsb
xchg
and
mov
add
cmp
mov
mov
pushf
mov
cs
cmp
ljmp
sbb
dec
in
adc
je
cltd
mov
stc
adc
xlat
mov
enter
xor
dec
or
push
gs
nop
cmp
mov
or
idivb
mov
sub
fs
imul
in
cmp
cmp
stos
push
daa
sub
sbb
je
mov
insb
sahf
push
stc
cbtw
xchg
pop
aas
jp
jne
cmpb
stos
mov
imul
stos
pop
in
fsincos
add
mov
ss
clc
sarb
rcrb
jmp
sub
subb
insb
lds
ljmp
cmpsl
xchg
popa
cmpsb
loopne
and
test
out
inc
sub
mov
fs
mov
mov
ja
sbb
xchg
mov
aad
pop
gs
jae
xor
cmp
dec
jo
cmp
xor
outsl
outsl
and
fwait
cs
rolb
xchg
in
jp
ljmp
scas
mov
sbb
aad
call
clc
mov
cli
lahf
in
shr
lret
sbb
jo
out
shll
dec
stos
or
cli
push
jne
sbb
inc
push
ficoml
stc
cld
mov
add
xor
das
das
mov
stos
inc
in
int
sbb
and
jo
xchg
dec
loop
ror
dec
mov
inc
dec
fisubrl
in
push
int3
sbb
add
cmp
das
fwait
dec
cmpsb
int
test
int
pop
in
fadd
fildl
lret
push
and
lods
insb
pushf
cmp
roll
add
call
xchg
je
mov
les
jmp
pop
mov
sahf
add
arpl
inc
cs
add
hlt
cmp
cli
cld
or
scas
rcl
cs
das
mov
jns
xchg
faddl
fbstp
sti
dec
stos
sub
jo
shlb
js
sbb
ret
jo
jecxz
loop
cmc
mov
jmp
hlt
and
sbb
shr
test
xchg
cmp
dec
xchg
or
bound
sub
int3
in
push
pop
or
mov
sbb
jg
xchg
push
pop
dec
ret
cltd
rclb
out
xor
mov
leave
cmpl
inc
scas
inc
les
or
sahf
jne
jg
sbb
jb
jmp
fisubrs
jae
or
fwait
mov
cmc
xchg
pop
push
push
test
push
inc
and
dec
daa
pusha
into
and
mov
and
je
test
repnz
hlt
or
cmpsl
fiaddl
add
mov
mov
xchg
and
add
repnz
and
fadds
stc
rorb
push
and
inc
push
jnp
cwtl
lcall
pop
fsubs
cltd
jo
addr16
push
cs
es
adc
mov
dec
mov
push
cs
jne
jmp
pushf
sub
mov
call
jmp
jge
pusha
xor
sbb
xor
stos
cmp
push
movsl
cmp
mov
sub
popf
js
jle
dec
xchg
je
loope
push
movsb
push
mov
add
mov
sub
mov
ret
je
mov
scas
in
rorb
mov
xor
sti
push
mov
mov
xchg
xchg
iret
jnp
jnp
jnp
jnp
jnp
jnp
cmpsb
stos
mov
fisubs
outsl
roll
pop
lock
clc
cmp
fdiv
lahf
jmp
mov
out
imul
pop
icebp
mov
push
repnz
xchg
hlt
ret
push
fsubrl
hlt
cmp
dec
or
bound
stos
mov
xlat
sahf
mov
adc
lock
mov
stc
xor
sub
dec
mov
repz
mov
notl
xchg
sbb
ljmp
push
popa
mov
and
cmp
sti
stc
ds
xchg
push
mov
inc
pop
push
inc
jbe
or
movsb
insb
jg
mov
jp
xchg
daa
push
outsb
jo
xchg
mov
lods
mulb
xchg
fiadds
sub
add
xchg
sbb
jb
mov
lret
mov
in
sbb
sarl
ljmp
fildll
mov
stos
mov
repz
rcrl
inc
ret
test
mov
cmp
lds
lods
and
sbb
add
repnz
push
mov
and
inc
jne
rcr
mov
jmp
mov
xchg
fbld
xlat
les
sub
arpl
test
in
fbstp
fwait
mov
xchg
cs
call
sub
negb
pop
adc
pop
test
fs
std
mov
jae
aas
mov
or
pop
mov
mov
inc
jp
into
jp
mov
jmp
aas
sub
jl
fstps
leave
stos
jbe
clc
test
cmp
jmp
add
xchg
arpl
ret
push
dec
cmp
and
mov
fstpt
xchg
aam
and
fisttps
jp
jo
cwtl
jns
dec
bound
jmp
inc
fs
lock
cmp
fdivrp
sbb
inc
inc
mov
xchg
jl
rcrl
test
fisubl
clc
fdivp
jns
mov
mov
js
bnd
insb
clc
inc
dec
xchg
cmp
jmp
adc
out
sbb
push
jl
cmpsb
pusha
cs
jbe
jg
pop
mov
cmp
arpl
cmp
jge
or
lock
addr16
inc
ja
push
stos
dec
push
xchg
inc
dec
out
aaa
adc
je
sub
fsts
inc
and
es
cmp
fs
push
mov
inc
stc
orl
push
js
loop
mov
rol
cmp
push
js
jb
mov
outsb
mov
push
fcoms
popf
outsb
push
fcom
pop
jg
test
js
cmp
push
jle
js
arpl
sbb
data16
dec
push
push
inc
adc
mov
mov
in
outsb
outsb
cmpsb
and
mov
push
adc
popa
pusha
loope
ljmp
int
dec
roll
lds
sbb
sbb
pop
push
test
push
sbb
mov
push
mov
jnp
or
ds
stos
and
imul
and
mov
pusha
fstl
inc
lret
xor
push
sahf
aam
mov
dec
lds
xchg
stos
add
xor
push
pop
and
push
addr16
dec
xchg
lds
arpl
inc
daa
inc
scas
xor
push
cltd
jae
cmp
cmp
push
mov
jne
xchg
jbe
mov
aad
dec
mov
xchg
scas
jns
mov
movsl
pop
hlt
xchg
int
mov
sarl
xchg
cmpsb
sub
mov
xorb
mov
add
cli
cmpsl
push
jp
mov
mov
incl
pop
or
incl
and
out
nop
xor
jle
repnz
or
mov
pop
add
nop
mov
add
fiaddl
add
mov
jnp,pt
aaa
popf
and
fidivl
lret
aam
pop
stc
ret
pop
mov
aam
or
rcrb
lahf
lds
mov
cmp
jo
mov
push
cmc
es
inc
shlb
mov
pop
dec
sbb
mov
loop
imul
cmpsb
add
fld
add
fsubr
or
scas
and
xlat
mov
in
xor
sub
loope
mov
mov
stos
fimull
jmp
cmpsl
jle
mov
mov
sub
mov
scas
out
lds
addb
cld
jmp
in
adc
inc
sahf
loope
repz
cld
inc
clc
mov
repnz
lahf
out
cs
fcmovb
call
jbe
aaa
cmpsb
int
and
sbb
jno
dec
outsl
cmp
clc
out
cmp
xor
outsb
sub
mov
and
mov
aas
ljmp
test
pop
inc
dec
in
out
sub
push
push
push
cmp
stc
push
xchg
xchg
push
insb
pop
sbb
scas
dec
insl
push
mov
xchg
inc
inc
outsb
push
outsb
sbb
dec
fistps
inc
or
outsb
jl
in
sub
inc
es
ljmp
gs
fnstenv
fistl
xchg
inc
pop
test
aad
cwtl
lcall
cwtl
out
jp
lock
leave
jns
xchg
sbb
call
popa
mov
out
bound
shrl
ljmp
pop
test
add
push
pop
andb
jb
push
fs
xchg
jnp
cmp
clc
test
push
lock
aas
lahf
test
xchg
imul
mov
sub
fldpi
cmp
leave
and
subl
retw
imul
arpl
mov
je
shll
fcoml
mov
pushf
pop
mov
add
push
mov
cmpsb
mov
std
fsubs
mov
jno
imul
dec
dec
aaa
pop
sbb
in
call
ljmp
mov
test
pusha
out
outsl
das
jmp
sbb
cmp
imul
mov
rolb
xor
clc
into
out
xchg
jne
jnp
sub
inc
pop
out
in
cltd
sahf
sub
inc
sahf
fistpll
cmpsl
mov
cmp
call
inc
add
dec
aaa
push
cltd
hlt
push
hlt
xor
mov
movsl
outsl
divb
mov
adc
ret
sub
mov
mov
add
mov
ds
stos
imul
mov
js
cmpsb
inc
push
hlt
nop
shlb
dec
pop
add
int
sbb
push
push
push
jmp
shrb
sbb
test
jecxz
jge
jecxz
test
mov
fcompl
out
aaa
imul
sbb
adc
adc
das
jp
mov
jp
lock
pop
mov
sub
cmp
xor
aaa
fcoml
xor
arpl
bound
fisubl
push
xchg
fnsave
add
push
push
fsubrl
jp
jp
mov
pop
inc
popf
inc
fmull
sbb
daa
pop
pop
repz
jp
test
xchg
mov
cwtl
loopne
pop
leave
arpl
in
xchg
add
lcall
xchg
xor
ja
int3
push
jo,pt
xor
xor
pop
dec
push
push
vmovhps
lds
inc
pushf
loope
push
pushf
jnp
push
dec
popa
in
lea
iret
pop
popf
mov
ds
fnstenv
lret
adc
decl
mov
jo
push
cwtl
jo
dec
or
mov
fcoms
sbb
sub
lock
movsl
aam
test
ss
mov
inc
xchg
ret
cltd
aaa
pushf
sub
inc
stc
pusha
aad
inc
mov
dec
lret
adc
cmc
cltd
inc
ret
loop
cmp
mov
in
pop
loop
mov
in
xchg
imul
sbb
out
dec
dec
xchg
sbb
inc
cmpsb
adc
push
fcmovbe
fldenv
pop
ret
adc
ret
out
lds
cmp
cmp
stc
loope
lock
popf
into
push
pop
push
jp
jmp
out
hlt
ret
lcall
cmp
inc
inc
cmp
call
pop
loope
fimull
clc
sub
aaa
ljmp
push
push
push
daa
and
pop
dec
mov
cwtl
jecxz
mov
pop
jb
lahf
cmpsb
mov
insl
push
pop
mov
nop
push
mov
add
inc
mov
daa
add
mov
cmp
and
in
and
repz
pop
lock
mov
dec
and
jo
mov
sbb
and
scas
sbb
or
jnp
add
cmp
xchg
movsb
nop
add
andl
pop
scas
stos
ficompl
shr
es
lds
test
ret
sahf
sbb
or
push
pop
push
xchg
rclb
dec
sahf
leave
or
dec
pop
sbb
or
xor
rcl
xor
into
inc
lds
cli
fcmovnbe
lds
movsb
mov
sub
mov
push
movsb
cwtl
fisubrs
jmp
loope
repz
cwtl
jnp
mov
jo
mov
mov
loop
fildl
stos
cmpsb
cli
jg
cli
or
ret
imul
pop
sub
inc
dec
popa
mov
adc
adc
sub
aas
dec
xor
inc
repnz
push
scas
in
mov
push
cmp
xor
out
push
xor
mov
lret
sub
cmpb
cmp
lds
inc
add
hlt
sbb
pop
sbb
jp
push
pop
sub
leave
push
jp
jp
into
mov
mov
inc
dec
jns
push
jb
lods
jge
bound
or
imull
stc
mov
daa
adc
cltd
pop
xchg
sbb
add
bound
popl
sbb
mov
add
pop
dec
xchg
cmp
push
sbb
xchg
call
xchg
jo
aad
mov
out
lea
mulb
dec
jae
cmpsb
xor
xchg
sbb
jb
outsb
pop
ljmp
mov
leave
jecxz
dec
ss
ds
xor
dec
cs
adc
mov
sarl
rolb
mov
pop
fbld
int3
mov
jmp
mov
mov
cmc
xlat
push
fildll
stos
xor
fstpt
cli
jmp
sub
inc
jmp
popa
and
arpl
push
inc
mov
imul
adc
cli
mov
cmp
test
xchg
xor
pop
loope
xor
nop
imul
stos
push
jae
mov
cmp
test
push
mov
push
mov
dec
nop
xor
dec
dec
inc
jp
mov
sbb
mov
jo
lock
movsl
bound
push
push
leave
jge
push
push
jnp
fwait
jo
repz
loop
lea
inc
xchg
loopne
stos
and
loope
inc
xor
cs
pushf
shlb
inc
jo
mov
andl
inc
jae
mov
aaa
into
push
es
int
fs
sub
mov
and
sub
call
stos
hlt
push
mov
pushf
dec
pop
mov
jp
ret
add
das
fimull
sbb
xchg
sub
les
test
stos
andl
sub
add
mov
mov
jae
push
mov
into
jg
ljmp
sbb
sub
jg
sub
test
inc
nop
sbb
xchg
pushf
cmp
mov
fdivrs
pop
xchg
stos
dec
pop
inc
jp
test
jle
data16
mov
movsb
dec
cmp
call
xchg
dec
imul
leave
in
not
imul
imul
pushw
in
pushf
arpl
call
pushf
lahf
in
into
fwait
test
or
pop
fcomp
inc
sub
inc
cwtl
loope
test
arpl
inc
ret
push
adc
inc
outsl
sbb
ljmp
xchg
xchg
popl
mov
ret
aam
mov
adc
jbe
scas
add
inc
mov
pop
push
jne
adcl
imul
repz
pop
cmp
daa
jbe
xor
jnp
arpl
fidivrs
sahf
daa
push
inc
daa
arpl
ja
cs
cmp
and
sub
mov
lea
xor
mov
cmc
out
mov
psubsw
aad
push
mov
cmp
jbe
or
mov
roll
mov
pop
xor
mov
out
pushf
sbb
cmpsb
fs
and
adc
jge
les
jno
ljmp
aad
cld
cmp
das
sub
jns
test
xor
loop
add
xchg
pop
aam
mov
jp
add
push
jmp
je
push
stos
rorb
jbe
mov
mov
fldcw
xchg
pop
stos
out
inc
inc
loope
push
and
jg
inc
lret
imul
leave
xchg
inc
ffree
dec
popa
ret
sub
test
pushf
xor
mov
add
lods
test
and
or
adc
jnp
jb
fwait
push
inc
lret
sub
mov
das
mov
sbb
ret
xor
fidivrl
xchg
nop
lret
fld1
mov
cltd
cmp
in
inc
jp
inc
sub
xchg
sahf
ljmp
es
inc
test
into
pop
pop
insb
shrl
lret
pop
add
vxorps
js
inc
sbb
dec
aaa
mov
mov
mov
les
scas
mov
add
out
jle
into
sti
cmc
inc
inc
cmp
aaa
mov
mov
lahf
rclb
push
jno
mov
rorb
mov
scas
mov
out
stos
or
outsb
xor
push
pop
test
ss
out
lock
arpl
scas
or
sbb
jecxz
dec
sub
sub
add
sbb
outsb
push
fs
daa
or
ds
jl
jmp
pusha
or
pop
xchg
ficompl
mov
outsl
push
pop
push
sbb
ljmp
xchg
hlt
aaa
add
xor
inc
mov
jne
mov
cltd
push
jmp
test
aam
out
arpl
inc
stos
and
mov
mov
loope
imul
dec
leave
dec
adc
rcrb
int3
jmp
aad
ret
adc
shrl
jl
pop
daa
xchg
orl
cmc
sahf
or
dec
dec
inc
loop
andb
mov
jecxz
popa
divb
ja
insl
mov
mov
outsw
ss
jne
aas
pop
pusha
pop
mov
daa
inc
and
inc
scas
add
sbb
ret
xchg
outsl
imul
cmp
sbb
jno
sbb
adc
push
sub
dec
insl
pop
fldz
sbb
iret
cmp
sbb
push
ljmp
adc
sbb
xchg
insl
cli
xor
xor
inc
cs
or
cmp
xor
sbb
test
cs
fisubrs
mov
imul
mov
mov
mov
and
das
jo
pop
les
fcmove
lret
test
je
ss
testl
enter
and
mov
jmp
jns
mov
mov
mov
and
les
in
cmpsb
pop
insb
cmc
xchg
pop
out
jp
inc
sub
dec
sbb
pop
sbb
xchg
inc
jge
sub
cmc
adc
pop
ret
sbb
lret
xor
es
push
int3
and
popa
xor
adc
xlat
mov
sti
pop
cmp
pop
sahf
aad
push
xchg
lock
push
mov
sub
js
cli
and
jbe,pn
sti
jp
adc
ljmp
inc
loope
pop
outsb
inc
popa
pop
inc
fs
mov
inc
dec
push
movsb
popa
sub
push
lock
sbb
test
loope
push
dec
xchg
mov
in
xchg
mov
inc
lods
cmp
pop
cmpsl
mov
xchg
push
lea
ficoms
xorl
rep
lahf
adc
bound
push
or
out
sahf
cmp
arpl
imul
inc
rorl
out
stc
pusha
ljmp
outsb
xor
stc
in
stos
dec
sbb
dec
jnp
mov
push
je
mov
xchg
dec
test
jmp
imul
or
dec
xchg
cmpsl
lret
mov
fsub
sub
mov
jp
inc
ss
dec
jp
sahf
lcall
mov
push
mov
frstor
pop
jp
data16
inc
out
pop
mov
movl
adc
loop
jp
jle
sbb
cmp
outsb
xchg
push
enter
push
std
mov
cltd
stos
fiaddl
stos
dec
push
mov
loop
add
jnp
inc
mov
mov
cmp
sbb
jnp
adc
shrb
stos
dec
jg
jne
jb
push
mov
ja
push
mov
push
jle
inc
push
inc
inc
fdivs
push
xchg
cmpsl
jg
mov
push
cmp
ljmp
addr16
jae
jnp
jg
mov
push
mov
push
adc
ffreep
fwait
pusha
pop
mov
int3
pushl
jmp
lea
les
xor
and
mov
sbb
insb
shrb
es
mov
xorl
fcmovbe
test
pop
and
mov
push
int3
aas
rcr
xor
es
in
movsb
aas
mov
repz
cltd
or
add
ret
mov
imul
mov
adc
sub
pushl
je
or
loop
shrd
aaa
rorl
testb
pop
and
sbb
xchg
mov
adc
pop
ds
jecxz
jmp
mov
popa
add
dec
cmp
dec
push
aas
or
popa
dec
jbe
imul
sahf
cmp
sbb
ss
and
mov
push
loope
mov
in
cmpsl
cmp
and
jnp
pop
pop
inc
cmp
dec
mov
push
mov
mov
rorl
pop
jl
das
pop
outsl
lds
insl
aas
sbb
jae
and
xor
int
imul
out
popa
imul
arpl
in
incl
in
dec
pop
aad
lcall
addr16
jnp
adc
pop
jmp
out
loopne
mov
shlb
xchg
xor
stos
mov
mov
leave
ds
mov
gs
hlt
enter
push
scas
idivb
sbb
jnp
je
lahf
enter
xor
push
stc
mov
push
add
pop
call
inc
lds
inc
addr16
mov
mov
push
sbb
je,pt
push
notb
into
stos
cli
pop
ret
insb
fnstenv
fisubs
dec
xorb
jb
lret
icebp
mov
pop
mov
nop
aas
pop
lret
leave
and
mov
mov
movsb
xchg
sub
and
and
out
bound
cmp
jle
cltd
jnp
pusha
stos
stos
sbb
mov
cmp
sub
ljmp
cmp
mov
xor
or
jg
imul
cmp
repz
push
mov
push
das
stc
jecxz
pop
arpl
cmp
pop
enter
fptan
pop
sub
kmovb
pop
sbb
scas
dec
mov
outsl
cmpl
or
stc
pop
xchg
shr
sub
mov
jecxz
sti
daa
cltd
jns
enter
out
inc
leave
mov
pop
add
xor
dec
or
inc
xchg
inc
xor
js
cmp
movsl
push
xor
add
outsb
mov
lock
jns
and
scas
cli
fimull
dec
jb
mov
and
aaa
mov
cmpsl
fcmovnu
jo
jp
movsl
fildl
hlt
aaa
and
fwait
sub
fwait
int3
mov
pop
stc
das
xchg
mov
mov
fnsave
das
rorl
mov
pop
pop
and
scas
loop
mov
xchg
inc
sbb
js
ret
shrl
sbb
or
lds
call
leave
pop
push
pop
dec
dec
into
mov
test
push
dec
lock
mov
mov
fimuls
push
cmp
mov
mov
fs
andl
dec
xchg
arpl
lea
bound
xchg
jl
shr
testb
add
sbb
aam
push
xor
insb
pop
jne,pn
pushf
jae
fwait
into
les
loope
pop
cmp
jge
cmp
and
imul
pusha
pop
mov
not
pop
cmpsl
push
jge
call
fdivrp
lds
cmp
sahf
inc
inc
in
sbb
test
aas
outsl
repz
inc
or
call
jle
xor
or
xchg
or
cmp
xchg
out
ljmp
xchg
and
xorb
mov
mov
ds
lds
rclb
sahf
sbb
add
movsb
lds
xchg
ljmp
cli
rcpps
jmp
jo
sub
mov
aad
lds
insb
jle
mov
jecxz
add
pop
jb
pop
push
fidivs
nop
add
cli
shl
outsl
sbb
js
jl
stos
jecxz
and
addb
sbb
pop
repz
loopne
lock
or
sbb
mov
cmc
push
sahf
aas
push
sbbb
or
mov
inc
xchg
loope
xor
mov
and
hlt
cltd
xor
subl
push
ljmp
adc
mov
dec
adc
cmp
or
mov
pop
fldcw
pop
lcall
ds
push
test
mov
mov
jg
xchg
fsubs
xchg
xor
and
aam
push
xor
arpl
dec
cltd
filds
lret
bound
inc
lds
subl
mov
mov
push
arpl
stos
je
mov
mov
ja
sbbb
je
add
push
stc
leave
out
add
inc
cmp
in
into
addb
mov
ja
xchg
mov
pusha
pop
popf
addl
out
cmpsb
cmp
jmp
ds
inc
lea
dec
adc
enter
data16
sti
push
and
add
mov
out
pop
je
stos
jbe
cmp
sub
add
sub
notb
outsl
addr16
arpl
mov
rolb
add
jl
test
popa
negb
outsb
and
pop
inc
test
jmp
xor
dec
ljmp
in
cmpsb
cmp
jo
push
xchg
jl
std
inc
adc
lock
jns
repnz
test
sti
call
pop
lret
mov
stos
mov
fcmovb
repnz
xchg
out
jno
inc
mov
pop
mov
stos
ss
outsl
fdivrl
leave
mov
push
sbb
in
and
loopne
sti
mov
push
dec
ret
sarb
stos
sbb
stos
fwait
push
mov
out
es
out
inc
cltd
mov
mov
cmpsb
addr16
sarb
repz
sbb
pop
int
pop
sbb
and
dec
sahf
sbb
mov
cli
jb
outsl
push
int3
inc
cmpl
outsl
mov
push
cmp
mov
mov
mov
or
adc
adc
adc
jae
mov
jb
fadd
xchg
pop
les
sub
pop
ud1
jecxz
add
mov
cs
inc
scas
scas
fisubl
sbb
add
mov
mov
fisubrl
mov
mov
icebp
in
xchg
push
stos
sarb
fwait
lock
fwait
outsb
push
pop
mov
sub
push
mov
bound
inc
and
sbb
fldenv
icebp
imul
pop
mov
stos
and
ja
aad
scas
mov
dec
sbb
xor
aaa
or
xchg
sub
add
out
mov
testl
insb
push
je
cmc
xchg
dec
ja
lret
lds
lods
xchg
sub
push
aaa
mov
sub
es
ficoms
stos
sti
ja
adc
fmul
jecxz
lea
lcall
xchg
dec
inc
xchg
xchg
popf
adc
mov
jae
jo
inc
scas
ret
inc
andl
ljmp
test
xor
jl
imul
pop
jcxz,pt
scas
inc
jb
pop
pop
es
adc
mov
sub
stos
adc
inc
xchg
push
ds
aaa
cmp
mov
jbe
inc
mov
dec
ficoml
out
aam
fucomp
repz
jmp
stos
insb
sbb
jnp
push
or
sub
sub
aaa
arpl
xchg
incl
fwait
pop
stos
jnp
repz
or
xor
sbb
mov
dec
inc
roll
and
mov
mov
xor
push
dec
ja
push
loope
cmp
push
popf
rclb
fcompl
push
or
out
std
jb
lds
cltd
push
lea
dec
and
jmp
mov
or
sbb
adc
jbe
adc
les
aad
fstpl
mov
cmp
das
cmpsl
sub
popaw
je
inc
pop
ljmp
inc
cs
push
inc
mov
dec
ss
xchg
pusha
mov
mov
dec
pop
push
lds
inc
mov
stos
out
cmp
nop
sub
xor
fidivl
std
and
mov
xor
sbbl
mov
fcompl
adc
cmp
push
lcall
fildll
faddp
push
outsb
cld
sbb
sbb
jg
ret
sbb
mulps
inc
scas
int
fisttpl
insl
mov
out
sbb
or
add
push
push
xchg
cli
inc
mov
fcmovb
push
mov
pop
cmc
data16
gs
jns
dec
xchg
popf
cltd
xchg
xchg
pop
insb
jne
ret
arpl
imul
dec
and
jae
and
xchg
fs
inc
lods
pusha
lret
xor
mov
inc
jnp
or
scas
jp
dec
dec
adc
xchg
inc
cld
cld
cmp
insl
jns
xor
push
sbb
in
cli
lods
jae
insb
fistpll
dec
jl
scas
adc
mov
out
mov
aam
in
aaa
jg
imul
adc
sar
adc
xchg
push
mov
lds
loopne
pusha
dec
pop
sbb
pop
mov
cmp
ljmp
xor
pushf
faddp
stos
out
jmp
mov
into
and
addl
mov
sti
and
sub
inc
fstpl
xchg
push
imul
hlt
or
addr16
jg
or
and
scas
fiadds
mov
xchg
inc
sbb
int
xchg
rcrb
fdivrl
push
cwtl
arpl
cld
loope
and
push
lds
outsb
idivb
pop
aaa
jecxz
push
sarb
inc
inc
mov
adc
int3
data16
movsl
imul
mov
fwait
xchg
in
adc
adc
and
adc
mov
fiaddl
cmpsb
leave
loope
push
mov
cmp
stos
sbb
repnz
popf
loopne
pop
add
mov
insl
and
out
ljmp
nop
mov
lods
ds
jge
mov
push
or
xchg
push
js
out
jle
inc
mov
xchg
jg
jns
sahf
insl
and
pushf
pop
jnp
stos
cmp
daa
nop
jp
jle,pt
cmpsb
and
sbb
ds
mov
fstps
jl,pt
pushf
sub
mov
add
mov
inc
sahf
das
cmp
pop
aam
jnp
into
add
mov
pop
cs
sub
push
mov
xchg
out
jnp
dec
dec
test
outsb
pop
loope
jnp
cmc
push
aas
popf
mov
xchg
call
adc
xchg
arpl
inc
cmp
or
adc
pop
cli
inc
pop
push
add
out
and
add
pushf
ds
dec
int3
pop
out
adc
iret
inc
xchg
cmp
jecxz
fucomp
push
pmaxub
sub
xlat
mov
test
mov
loope
clc
adc
fidivrs
test
sub
dec
xor
mov
mov
mov
bound
jns
push
out
loope
repnz
pop
or
add
cmpsl
sbb
inc
jbe
nop
dec
mov
dec
mov
ficompl
loopne
leave
cli
cmpsb
add
ljmp
jge,pt
popf
fcoml
fistl
inc
in
fwait
xor
jmp
popf
ret
ds
loop
rcll
aas
xchg
jmp
sti
mov
out
jmp
and
dec
pop
jp
movsl
inc
sbb
or
jecxz
sbb
fwait
out
lahf
js
jmp
and
popf
fidivrs
enter
mov
imul
out
pop
add
pop
popf
aaa
and
repnz
in
inc
ds
jmp
lea
fdivrl
jne
xor
andl
and
mov
jle
sbb
and
outsb
mov
dec
test
lahf
push
pop
push
dec
mov
std
dec
ds
cmp
ret
dec
movsb
lock
dec
jg
add
ds
and
sti
into
jmp
push
mov
xor
pop
decb
add
test
xor
push
mov
sbb
pop
sbb
loop
push
lret
icebp
lcall
fidivrl
mov
fstl
cmp
imul
and
lods
fiadds
fcmovbe
push
adc
cli
dec
jno
or
cli
sbb
push
loop
mov
repnz
out
xchg
in
ljmp
sti
bound
push
imul
add
adc
mov
cs
sbb
pop
jmp
mov
mov
addr16
ret
outsb
and
aaa
sub
mov
dec
fcomp
mov
adc
pop
daa
jmp
xor
xor
imul
mov
cmpb
pusha
fwait
loopnew
sti
jbe
jnp
sbb
mov
sahf
pop
rorb
pusha
xchg
cmp
dec
fisubl
jp
sbb
sbb
sti
pop
inc
or
jmp
js
mov
xlat
sbb
inc
inc
adc
popf
imul
push
repnz
cmpb
sbb
pushf
shlb
fwait
test
mov
sbb
adc
push
mov
push
mov
add
xchg
add
pop
dec
cs
or
or
xor
mov
stos
arpl
aam
aam
jns
sub
push
mov
outsb
mov
jb
push
xchg
sbb
cld
mov
cmp
das
addl
sub
loop
xchg
push
cmp
pushl
xchg
cmp
loopne
inc
fisubl
dec
fildl
pop
andl
mov
aaa
xchg
insl
sub
cmc
inc
cmp
push
pop
cmpsb
int
xchg
iret
hlt
pop
aaa
das
or
lea
fstps
jae
xchg
lret
push
push
dec
and
add
js
fmuls
push
jmp
push
dec
jecxz
lret
les
pop
iret
jo
mov
cmpsb
imul
test
sub
push
xor
stos
push
or
push
xor
stos
aam
rcll
gs
adc
cmpsl
mov
inc
pop
rcrb
cmpsl
pusha
xor
insl
pop
movsb
loop
sbb
mov
push
pop
mov
inc
push
or
fwait
sbb
sub
jle
inc
mov
adc
mov
sbb
loopne
fisttps
sbb
enter
std
and
xor
jno
subb
lock
sub
scas
or
aas
adc
fwait
cltd
mov
inc
pop
loop
ja
xor
sbb
addr16
out
sbb
sbb
cli
mov
leave
xor
cli
push
mov
lcall
test
jbe
mov
and
push
fcoml
jae
popa
imul
jnp
fcomps
jmp
adc
es
jns
push
inc
push
inc
dec
testb
lcall
stos
jo
out
xchg
add
imul
cmp
aas
pop
cltd
lahf
mov
cmp
stc
cmp
inc
aaa
fucomi
les
jbe
insb
jno,pt
pop
daa
es
sub
scas
mov
popf
sub
mov
fsubl
fcoml
jg
fisttpll
pop
cli
pop
mov
pusha
aaa
ret
dec
inc
xor
cmc
sub
test
lret
inc
sti
mov
movsb
sub
loopne
sub
sub
or
psllw
lock
adc
pop
fwait
ljmp
cmc
in
mov
and
int
cmc
loope
or
js
cmp
jbe
pusha
jmp
inc
sbb
dec
jbe
xchg
lods
jp
adc
xor
jo
pop
xchg
xor
lret
sbb
cmpsl
inc
ret
lcall
scas
pop
dec
jbe
cmp
sub
js
in
test
pushf
cmp
out
lret
mov
je
arpl
push
repz
shr
call
cli
mov
dec
or
fs
jbe
mov
push
int
cmp
or
xor
test
sub
inc
sub
test
loopne
icebp
sbbl
and
or
mov
jnp
add
add
ja
test
jmp
scas
outsl
fcompl
ret
cltd
daa
sbb
popf
adc
push
bound
stos
mov
insb
cwtl
xchg
insb
stos
push
push
xchg
add
pop
push
loop
or
xchg
dec
fldt
lds
mov
lret
adc
inc
sti
mov
lcall
and
adc
enter
mov
aad
jns
scas
int3
and
cwtl
adc
push
inc
and
adc
and
add
scas
xchg
std
add
out
pop
repnz
cld
jae
ret
xchg
sahf
push
sub
pop
jo
xlat
inc
push
cmp
imul
imul
pop
clc
pop
mov
lds
mov
ficompl
pop
or
mov
cmp
mov
ja
xor
into
pop
ficoms
dec
shrb
dec
xchg
mov
xchg
es
push
and
inc
arpl
mov
imul
scas
sub
loopne
or
popf
icebp
cmpsb
sbb
out
scas
pushf
xor
fimull
lcall
fdivrs
xchg
cwtl
popa
pop
pop
call
fidivl
and
movhlps
lods
dec
pop
and
add
cmpsl
mov
sahf
sub
nop
iret
adc
xchg
dec
cltd
fwait
sbb
je
adc
xchg
std
punpcklwd
pop
push
dec
cmp
insb
int3
pop
out
inc
mov
dec
xor
sub
dec
das
sub
dec
inc
or
jge
or
jg
push
xor
and
push
sbb
lds
jg
push
inc
pushf
add
sbb
stos
sarl
cmpb
loopne
inc
imul
enter
push
pop
roll
jecxz
jle
sbb
xchg
fadd
sbb
mov
repz
and
pop
idivb
pop
ret
nop
ljmp
and
daa
sub
pop
xchg
pushf
mov
cwtl
sbb
ja
cmp
jbe
pop
mov
jp
jo
insl
xor
outsl
cmp
mov
popa
mov
sub
add
fs
jnp
inc
add
mov
out
dec
mov
sub
in
in
pop
inc
push
ret
jp
hlt
nop
lds
sbb
sahf
push
xlat
adc
aam
fistpl
xor
sub
xchg
stos
and
jbe
cmp
popa
jns
dec
cmc
xchg
rorb
push
mov
outsl
cltd
or
mov
jno
mov
xchg
movsl
pop
mov
or
sbb
mov
lds
imul
pop
scas
pop
mov
mov
cltd
scas
adc
push
mov
mov
inc
sub
fcomps
lcall
push
jge
icebp
sub
sbb
repnz
mov
jg
cmpsl
mov
adcl
out
dec
popa
ljmp
dec
xchg
xlat
lahf
lret
cli
scas
jmp
jp
fdivrl
into
or
inc
inc
jo
dec
lret
sub
fs
pop
sahf
aas
arpl
mov
and
and
das
lret
pop
cmp
fisttpll
add
xor
xlat
or
mov
ljmp
shrb
jmp
mov
popa
outsl
sub
mov
inc
xor
leave
cmp
push
or
pop
xchg
stc
repnz
or
sbb
and
sbb
das
loope
insb
mov
leave
xchg
xchg
loop
and
mov
aam
mov
mov
push
lds
mov
xchg
jecxz
push
sbb
imul
jo
es
mov
fisubrl
pop
ret
call
dec
test
pusha
sbb
dec
paddusw
rclb
sub
mov
sbb
push
dec
mov
pop
xor
mov
bound
add
mov
pop
shrb
pop
dec
inc
xchg
mov
sarb
push
shrb
adc
out
arpl
pop
inc
mov
popa
sbb
mov
in
not
sub
add
sbb
jp
sbb
addl
call
push
add
xor
hlt
mov
and
stos
inc
es
popf
xchg
mov
push
push
rcrl
sub
sbb
and
inc
mov
push
inc
xorb
cmp
aaa
cwtl
cmp
and
or
mov
and
scas
push
inc
imul
cwtl
xor
lea
xor
and
popa
out
jns
jmp
mov
xchg
jecxz
cmpl
push
xchg
cmpsb
out
outsl
subl
fidivl
or
mov
mov
adc
jg
dec
sub
into
ljmp
add
sub
repnz
out
xor
insb
dec
push
mov
jmp
sbb
ret
bound
cmpsb
dec
mov
sub
and
push
pop
jl
mov
push
jl
pop
mov
je
or
imul
in
mov
ja
pushf
insb
cmc
bound
lahf
push
adc
sub
adc
mov
imul
stc
mov
mov
mov
cmp
xor
cwtl
push
sbb
in
xchg
outsl
pop
jl
daa
pusha
xor
pop
or
cli
sbb
mov
xor
pushf
xlat
mov
cld
pop
test
ficomps
cmp
push
mov
adc
inc
push
or
clc
cmp
gs
or
or
into
mov
int
ret
lock
cld
bound
cmpsb
outsb
push
aaa
mov
int
inc
xor
stc
adc
sub
fsts
cmp
ljmp
sub
int3
push
inc
bound
repz
and
cmp
cmp
mov
push
popf
push
ret
frstor
daa
shlb
fnstcw
and
mov
incb
pop
inc
sbb
jecxz
dec
dec
cmp
cmpsl
mov
out
movsb
int
push
pop
cli
mulb
inc
jge
jb
scas
roll
sub
outsl
xor
add
mov
and
and
lret
pop
lcall
cwtl
jnp
lds
mov
xchg
mov
mov
loopne
lds
lahf
jmp
push
pop
dec
xchg
adc
inc
cmp
mov
inc
cmp
mov
cli
loope
loop
xor
cmp
inc
xchg
aam
inc
xchg
hlt
fists
jecxz
and
stos
cmp
mov
fistpll
mov
cmp
cld
sbb
mov
xor
test
xchg
xchg
stos
imul
outsl
dec
sub
stc
aaa
xchg
or
push
leave
popa
xor
push
pop
into
adc
mov
cli
sbb
jo
sbb
pushf
es
jne
imul
jle
dec
sub
fnstcw
imul
aaa
stc
ret
push
jo
dec
mov
dec
mov
dec
rorb
xchg
add
push
mov
aas
push
pop
cmp
jne
repnz
insb
xchg
add
inc
int3
in
xchg
sub
loope
cmpsl
nop
out
sub
mov
mov
dec
in
outsl
rcrl
out
int
xor
or
pop
dec
mov
dec
rolb
hlt
test
sbb
mov
mov
loope
in
push
subl
mov
gs
ret
dec
inc
bound
or
shrb
push
cltd
jne
ret
push
mov
push
jl
xchg
mov
push
stos
enter
mov
lret
pop
call
arpl
jo
gs
mov
and
inc
les
adc
jnp
lea
rcrl
inc
inc
or
jmp
add
sahf
ljmp
das
adc
sub
cmp
sbbb
inc
adc
int3
lret
inc
add
sahf
sub
je
cmp
rclb
rcrb
imul
arpl
pushf
mov
enter
ljmp
push
in
xchg
iret
pop
sarl
jo
in
loopne
cmpsb
pusha
test
fcmovnb
jbe
insb
outsb
mov
shrl
test
jns
into
and
aad
add
xor
mov
jno
mov
cmp
ret
jae
imul
mov
lcall
lret
jb
jp
sbb
mov
sahf
ljmp
or
sub
lret
dec
jo
addr16
loop
adc
scas
cltd
jecxz
test
or
div
dec
mov
mov
insl
mov
inc
insb
push
lret
dec
pop
imul
cmpsb
or
movsl
roll
mov
movsb
sub
or
cmp
cmp
fistl
or
repnz
imul
fs
icebp
jne
fs
repz
int3
and
pop
push
fs
sbb
es
inc
mov
pop
add
push
cmpl
rol
in
xchg
loop
loopne
mov
pop
test
sub
fsubl
test
clc
icebp
adcl
xchg
addr16
fidivrl
mov
sub
aam
andl
xor
jp
cmp
lods
jae
ret
imul
or
arpl
and
add
inc
mov
pop
cmp
inc
mov
rclb
xchg
rorb
sbb
shlb
sbb
into
mov
data16
adc
stos
mov
ljmp
les
mov
fistps
pop
xor
inc
mov
mov
pop
jecxz
sarb
lods
and
mov
enter
mov
mov
push
sub
mov
imul
test
int3
out
cmp
stos
xor
imul
ret
into
ds
xchg
dec
add
jmp
loope,pn
push
pop
jmp
dec
scas
inc
insb
jns
jno
cmp
notb
outsl
ljmp
and
jg
push
out
scas
push
or
jae
sbb
in
rclb
mov
repz
sbb
sbb
sbb
and
sahf
sarb
cmp
test
mov
jl
or
ds
push
xorb
mov
xor
xchg
int3
sbb
adc
inc
scas
mov
jbe
adc
out
les
cmp
jbe
mov
mov
push
out
daa
sbb
nop
leave
ret
loopne
push
ja
fcomps
mov
pop
push
aaa
inc
fstpl
inc
or
outsl
in
ss
rorb
add
sbb
addr16
dec
inc
sbb
cmp
in
leave
fdivrs
dec
dec
adc
mov
push
pop
pop
xchg
and
aaa
in
xchg
jg
mov
adc
jo
jo
sub
or
lahf
cmp
xchg
out
and
pop
dec
jmp
ds
dec
mov
inc
xchg
or
ficoms
and
jge
adc
es
or
or
icebp
pusha
mov
push
mov
jle
sbb
mov
mov
lcall
pop
mov
xchg
xchg
mulb
insb
cwtl
inc
pushf
xchg
sbb
cli
push
mov
cltd
popa
pop
xchg
add
sbb
jmp
bound
add
lods
enter
jp
jp
jge
push
lcall
cmc
outsb
sbb
pop
jp
jl
or
out
loope
cmp
popa
mov
je
add
pop
hlt
sar
cmp
insb
test
cmp
xor
cmp
int3
aam
and
stc
data16
push
dec
gs
push
xor
push
pop
cmp
rorl
loop
out
test
xor
inc
fsubl
mov
into
notl
outsb
cld
sub
in
leave
mov
lods
rolb
out
cmp
stos
mov
fs
ss
andb
scas
dec
or
jge
aad
imul
sbb
mov
push
add
ret
lds
negl
sub
data16
into
scas
add
lds
int3
bound
hlt
fsubp
negb
mov
lds
out
outsl
fcmovnbe
daa
adc
fmull
insb
ss
add
femms
sahf
inc
lea
pop
xor
pop
xor
daa
cmp
push
push
xchg
cmp
das
xchg
pop
outsb
clc
mov
shlb
push
cwtl
push
mov
call
adc
fwait
cmp
dec
out
jl
mov
adc
inc
jo
loope
cmc
inc
dec
lock
pop
adc
les
bound
out
jl
add
in
sub
sahf
xchg
cmp
jae
mov
pop
mov
fisubrs
cmp
pop
sub
xchg
leave
mov
cmpsb
xchg
jl
jmp
pop
hlt
fwait
icebp
jnp
or
je
push
mov
pop
scas
repz
push
mov
xor
and
movsb
sub
mov
xchg
sbb
stos
out
mov
push
dec
sbb
in
and
je
fidivrs
into
add
sbb
enter
sub
jmp
enter
pop
ss
or
enter
jbe
aas
jae
ljmp
jae
mov
notl
jecxz
ret
or
int
loop
dec
ret
mov
jecxz
stos
repnz
or
in
insl
dec
fdivrl
imul
sub
lds
inc
cmp
jnp
lds
sbb
outsb
lcall
mov
aas
aaa
fs
inc
scas
clc
and
lahf
dec
push
imulb
out
sahf
ret
jo
shlb
jo
pop
daa
rorl
rol
add
sbb
pop
pop
int
sbb
inc
xchg
or
mov
fmuls
cli
and
pop
sbb
sbb
bound
cmp
dec
inc
xchg
fldenv
mov
push
mov
lods
repnz
aad
cmp
std
dec
mov
push
pop
xor
sbb
rorl
xchg
xchg
sarl
mov
lret
imul
dec
sbb
pushf
stos
mov
scas
and
jg
push
add
xor
pop
jecxz
roll
addr16
pop
xchg
xchg
sahf
jge
dec
imul
stos
movsl
mov
lock
and
inc
push
adc
and
in
jecxz
iret
movsb
mov
adc
mov
das
loop
mov
push
xchg
shrb
sbbl
add
test
hlt
out
aaa
xchg
add
mov
push
loope
cmp
imul
lea
sub
jns
xchg
ret
cmpsb
outsb
xor
pop
divb
das
mov
test
notb
or
mov
pushf
out
and
scas
stos
aas
inc
test
stos
daa
sub
mov
push
jnp
sub
sub
lret
rep
cmp
adc
xor
jp
inc
frstor
push
dec
inc
sub
clc
pushf
pushf
cli
mov
push
cmp
shl
popf
pop
subb
adc
and
and
pop
cmp
jns
and
int3
gs
mov
cmpl
in
insl
shlb
cmp
sbb
js
xor
lods
add
ret
mov
retw
inc
stc
adc
mov
pop
mov
cmp
addr16
sub
bound
into
scas
xchg
inc
jae
ja
popf
imul
and
cli
sub
sbb
pop
jne
xor
dec
push
pop
xor
gs
pop
add
std
aaa
lods
popf
cmpsb
aam
orl
cmp
dec
jp
push
sbbb
sub
fdivl
mov
lcall
ss
dec
mov
cmp
out
dec
js
leave
mov
add
stos
ret
push
dec
cmp
ljmp
movb
ljmp
lds
dec
lods
and
add
fisubrl
jp
sub
adc
loope
lods
dec
lahf
das
aaa
ljmp
mov
and
and
test
mov
dec
inc
fnstcw
ljmp
shr
push
pop
imul
jno
outsb
pop
stos
cmc
xchg
sub
sbb
lahf
pop
imul
out
repnz
mov
sub
rcrl
xor
jp
cmc
out
scas
leave
mov
popf
xchg
data16
out
xchg
mov
or
add
xchg
fidivs
dec
movsl
pop
mov
push
jg
xchg
bound
insl
data16
movd
pop
pop
jo
adc
outsb
jns
push
iret
jecxz
cmc
pop
bound
aaa
jmp
out
adc
in
imul
subb
cmp
test
push
dec
bswap
test
xor
mov
fldt
push
mov
ljmp
or
ss
ja
mov
sbb
cmp
mov
insl
push
xor
jae
insb
aad
dec
dec
mov
outsb
sbb
sahf
ja
xchg
mov
stos
mov
sar
test
inc
push
or
cli
pop
jb
push
out
jge
dec
ljmp
repnz
ljmp
mov
inc
mov
outsl
mov
sub
data16
sbb
sub
in
test
mov
lret
loope,pn
lock
dec
xchg
fisubl
in
mov
out
repz
lods
or
cltd
sub
out
movsl
stos
ss
jnp
mov
sahf
sub
fadd
inc
sub
pop
cli
push
inc
jnp
testb
daa
cmp
popa
stos
jns
test
fnstcw
call
sbb
movsl
imul
add
mov
mov
sahf
inc
pop
ret
mov
insb
xchg
sbb
adc
xlat
lcall
mov
cmp
xchg
clc
sbb
or
xor
cli
scas
push
rcrb
dec
stc
ret
jecxz
add
inc
mov
jp
jbe
jbe
sbb
inc
shll
rcll
pop
and
push
sbb
cmpsb
cmp
aas
test
jns
lret
push
popa
xchg
hlt
cmp
cmc
movsb
mov
cmpsl
cmc
push
xchg
ljmp
fidivrl
cmp
jecxz
jo
lods
and
sbb
movsb
insb
sti
sbb
mov
clc
cli
cwtl
scas
jbe
insb
push
xchg
jp
xchg
adc
aad
pop
inc
lcall
inc
std
cmp
xor
xor
mov
mov
push
jg
mov
or
xchg
sub
push
pop
clc
push
cmp
stc
sbb
adcl
jp
in
adc
mov
mov
and
push
hlt
loop
pusha
ljmp
iret
add
lret
ret
hlt
fucomp
test
subb
xor
inc
or
lret
jle
test
out
xchg
mov
xor
mov
stos
out
fs
daa
cltd
mov
enter
inc
mov
imul
jbe
pop
or
lret
adc
pop
jns
pop
xor
push
inc
testl
dec
pop
test
lret
xchg
enter
mov
mov
mov
sbb
mov
inc
jae
sub
xchg
divb
addr16
jg
je
movsb
cwtl
sub
cltd
cmp
jnp
dec
jne
subl
lahf
mov
xor
xor
push
ljmp
inc
sti
ss
stos
dec
xchg
ret
inc
pushf
imul
call
sbb
mov
inc
or
mov
jle
out
sub
fs
and
scas
jmp
dec
and
ss
push
js
jbe
cmp
sbb
inc
test
push
xchg
fwait
mov
iret
push
and
sub
ret
xchg
inc
sbb
inc
pop
subl
mov
sti
and
and
test
mov
push
mov
stc
into
stos
inc
or
adc
ds
adc
ds
imul
add
ja
cmp
aaa
divb
jae
inc
test
mov
lea
es
and
shlb
cmp
lret
cmp
cmpsb
sub
fs
sub
and
outsb
cwtl
hlt
icebp
xchg
out
and
orb
mov
xchg
inc
mov
data16
push
lcall
push
jne
lahf
aas
jb
cwtl
mov
sbb
andb
and
xchg
sti
mov
mov
shll
mov
rcrl
xor
outsl
mov
dec
jns
pop
adc
sbb
lds
or
rclb
iretw
lods
mov
shlb
insb
test
sub
pop
lcall
push
adc
pop
and
push
orb
dec
pop
stos
scas
mov
negb
lret
loop
cmp
imul
jae
push
or
cmpl
pop
aaa
rclb
and
lock
fs
push
ret
pop
ja
mov
addr16
popf
in
jnp
push
ds
cmp
mov
pop
rorb
sub
jnp
inc
repnz
repz
les
inc
jbe
test
imul
in
lret
mov
sahf
mov
sub
or
cli
pop
cmp
mov
je
jns
or
dec
stos
lret
aad
icebp
mov
push
push
out
pop
stos
xor
xor
mov
dec
push
sub
cld
pop
inc
insl
mov
roll
or
pop
mov
outsl
cld
sahf
lret
es
imul
xchg
mov
and
into
xor
hlt
adc
mov
sahf
daa
jae
xchg
cmpsb
je
xchg
inc
test
test
cmpsb
inc
pop
xchg
fisubl
jmp
jns
mov
mov
fidivrl
cmp
sbb
mov
mov
outsb
jg
loopne
dec
dec
mov
and
fs
mov
dec
cwtl
jmp
loope
inc
jecxz
xor
cmpsl
push
mov
cmp
mov
mov
cmp
sbb
and
xor
cmp
lret
ljmp
mov
dec
pop
rol
std
or
dec
outsl
dec
sub
jmp
imul
xor
or
dec
inc
and
pop
es
xchg
pop
jbe
jp
xchg
xor
push
mov
fdivrp
ljmp
xchg
xchg
scas
push
push
xchg
add
and
or
es
pop
inc
pop
inc
orl
jmp
aad
cs
inc
xchg
add
push
inc
sbb
pop
jo
cmp
pop
mov
mov
test
in
jnp
mov
fmulp
fmull
add
sub
mov
sub
stc
or
mov
imul
ss
and
test
outsl
mov
mov
jnp
push
jecxz
cmp
add
mov
aas
scas
jns,pn
mov
in
in
stos
outsl
jmp
sti
sbb
add
inc
sub
pop
in
push
loop
xor
enter
iret
push
sub
pop
mov
popf
inc
cmp
push
xchg
xor
into
or
sub
nop
aas
pop
mov
pop
fisubl
sbb
out
pop
je
pop
mov
aaa
aas
pop
pop
cmp
sbb
pop
sbbb
adc
adc
lods
aaa
sub
xor
loop
pop
adc
xchg
fiaddl
pop
lret
or
mov
inc
xchg
mov
test
adc
xchg
or
ret
adc
jecxz
pop
ret
xchg
mov
xor
mov
es
sbb
cld
ds
add
stos
int3
sarb
popl
mov
cmp
pop
cld
fcoml
cli
cmp
jbe
pusha
pop
ja
push
sbb
sbb
es
stc
out
sarl
sbbl
jle
xor
inc
mov
mov
test
jo
popa
sbb
fs
sbb
arpl
aas
mov
and
shll
imul
mov
sbb
adc
inc
cmc
jns
add
pop
dec
rolb
test
js
cli
arpl
pop
cld
aaa
out
or
lods
and
lret
into
out
addb
insl
pop
fisubrl
xor
jl
adc
jo
lret
out
and
xchg
movsl
testl
sub
bound
inc
std
in
xchg
xchg
dec
sti
fisubl
jb
int
cld
fnstsw
pop
insb
and
sbb
scas
mov
xchg
fstl
loope
aas
mov
cmp
scas
sbb
repnz
xor
fs
aaa
xor
repnz
decl
mov
outsl
dec
jmp
xor
inc
stos
mov
sub
mov
pop
or
aaa
fldt
lret
inc
mov
push
data16
shrb
mov
imul
loopne
mov
xchg
lods
sbb
mov
out
dec
xchg
sub
xor
aaa
shlb
jmp
mov
rorl
inc
enter
repnz
and
rclb
pop
scas
mov
push
lods
loop
sbb
pop
dec
ljmp
push
cmc
sub
daa
add
fimuls
sarb
xor
cmp
sbb
dec
dec
and
cmp
arpl
xrelease
cli
int3
mov
pop
mov
pusha
mov
outsl
add
bound
jp
or
jnp
cmc
xchg
je
mov
push
add
cmpsb
cld
jp
je
sbb
lret
xchg
mov
out
mov
movsl
jmp
push
loopne
dec
adc
fnstsw
ret
jo
mov
and
sbb
mov
cmp
xchg
ss
stc
and
pop
ja
lods
ret
and
adc
push
sbb
or
xchg
jmp
gs
fidivl
mov
push
inc
add
xchg
pusha
sub
pushf
lret
adc
mov
mov
adc
or
jae
inc
mov
nop
sbbb
xchg
mov
xchg
int3
adc
in
imul
cmp
sbb
rolb
out
pusha
add
pusha
call
jae
ds
pop
jae
mov
data16
push
pop
fcompp
sbb
lret
aam
dec
mov
addr16
fmull
ds
pop
mov
sub
and
lret
sub
repz
sahf
jmp
ds
and
mov
mov
inc
stc
and
rol
jmp
pop
jmp
sbb
fcomps
cmpsb
repz
fwait
loop
test
cmp
or
rol
add
inc
aad
cmp
and
fcmovu
ret
stos
ret
bound
dec
xor
cmp
shl
jp,pt
cmpsl
cmp
aas
mov
hlt
jmp
dec
jmp
jp
sbb
sub
imul
sahf
mov
or
xorl
sbb
xchg
stos
xor
cmp
sbb
das
dec
cmp
pop
cwtl
pop
sbb
mov
rolb
jns
jmp
ret
in
or
and
sub
popl
cmc
lahf
ljmp
nop
aas
cs
sbb
shll
and
sub
data16
cmp
add
in
std
pop
pop
add
ret
sbb
ftst
outsl
or
popf
popa
nop
xchg
push
cltd
clc
mov
in
cmp
pop
add
int
lcall
pop
pop
pop
fiadds
sub
push
ds
ljmp
call
cwtl
sahf
mull
add
cmpb
push
sub
xchg
shrb
mov
jb
fcomip
mov
cmpsl
ljmp
mov
dec
push
jno
jno
movsb
jns
push
dec
arpl
lret
ds
es
iret
rcrl
fwait
mov
fiadds
lock
lock
popf
mov
inc
ss
push
push
leave
lcall
sbb
ja
add
neg
pop
and
fwait
xor
add
cmpsb
fs
sub
addr16
dec
adc
jecxz
arpl
lret
add
xchg
fisubrs
xchg
dec
lret
fisttps
stc
jle
cmp
leave
xor
jo
jnp
std
lods
int3
inc
shlb
sbb
andb
cwtl
xor
mov
push
test
call
lods
ss
repnz
jecxz
loop
pop
and
into
out
jo
rolb
jnp
xchg
lret
jl
add
push
das
arpl
lcall
jmp
sahf
cmp
mov
andb
push
cli
jmp
cmp
and
inc
mov
repz
and
cmp
adc
divb
jmp
sbb
dec
outsb
ds
int
ficoms
in
lea
fbld
loop
xchg
mov
aaa
inc
add
cmpsl
loop
jecxz,pt
aas
add
stos
repz
push
imul
jne
lcall
pushw
jb
bound
ds
inc
dec
push
sbb
pop
dec
push
push
sbb
and
sub
xor
cli
incb
cmp
mov
jp
xor
stc
inc
lods
in
ror
pop
lock
mov
xchg
mov
adc
xor
daa
push
pop
sub
stos
loope
fnstcw
jnp
push
sub
mov
ret
xchg
leave
add
loopne
scas
xchg
xor
mov
cmpb
or
fisttps
mov
xchg
cmp
mov
pusha
pop
mov
pop
sub
or
out
adc
testl
xchg
jae
adc
incb
push
sbb
je
arpl
and
pop
lcall
in
stos
inc
repz
popa
pusha
loope
mov
jns
mov
sbb
jb
mov
dec
xor
enter
push
fmuls
mov
jmp
std
clc
stos
pop
bound
inc
imul
loopne
mov
popa
aaa
jne
push
push
aas
mov
iret
and
mov
xchg
popf
xchg
subb
adc
pop
aas
dec
lock
enter
and
mov
cli
fwait
inc
icebp
push
leave
inc
nop
pop
es
fisubl
cmp
icebp
scas
call
xchg
sbb
mov
inc
jae
mov
lea
pop
adc
sbb
mov
sbb
pop
mov
loop
inc
sub
or
iret
sbb
jmp
inc
mov
es
popf
push
mov
rorb
adc
stos
les
xor
imul
mov
push
jmp
fdiv
lea
xor
std
mov
insl
xchg
dec
faddl
mov
out
test
dec
cmp
xor
outsb
xchg
sbb
call
mov
pushf
subb
iret
outsb
lcall
lods
sbb
test
push
fidivrs
inc
jae
push
mov
leave
or
push
adc
jns
sbb
jge
call
cmc
cmc
xor
xchg
mov
mov
inc
movsb
pop
xor
out
sarl
xchg
dec
call
cs
icebp
mov
push
rcr
mov
add
jge
inc
leave
cmp
jb
or
cmp
adc
dec
mov
shl
fs
lahf
jp
lcall
push
xorl
sbb
push
xor
stos
cmp
and
dec
jb
adc
inc
pop
jp
sub
dec
pop
cli
cmp
out
insl
adc
fcompl
sbb
jnp
fidivrs
nop
movsl
jl
cmp
bound
cwtl
faddp
dec
movsl
inc
cmp
arpl
cmp
sbb
lds
inc
push
mov
stc
cld
je
sub
bound
cwtl
xlat
ljmp
fisttpl
in
dec
dec
aam
lret
push
mov
or
push
lea
lcall
xchg
inc
cmp
push
fdivl
das
int3
lods
in
pop
cs
mov
dec
and
mov
cs
cltd
jae
cmp
jo
call
and
in
inc
aas
dec
ja
dec
sub
cli
adc
inc
adcb
stos
repz
ja
shlb
cs
push
pusha
inc
data16
pop
shr
lcall
mov
pop
jo
add
adc
jmp
aam
mov
cmp
push
int3
xchg
ret
and
data16
mov
out
dec
lds
pop
mov
rclb
adc
push
adc
ja
ds
inc
cmp
test
ds
fldt
repnz
jge
repnz
rolb
push
aas
adc
inc
mov
inc
inc
dec
mov
cltd
lahf
jp
cmp
mov
mov
ja
cmpsb
push
lcall
out
push
shrb
push
sub
jb
loopne
push
jmp
in
out
dec
stos
test
xor
pop
out
jae
std
lret
std
mov
push
or
jg
std
cli
outsl
jmp
enter
aaa
adc
xchg
inc
cmp
add
pop
out
mov
outsb
xor
and
filds
shlb
shr
enter
push
faddl
mov
imul
dec
xor
outsb
cmp
iret
inc
lds
inc
aam
push
lods
loop
fwait
add
pop
jg
insb
push
mov
lret
dec
jmp
lret
pusha
clc
xor
or
and
loopne
outsl
push
xchg
and
mov
jmp
insb
jne
pop
in
dec
stos
mov
mov
popf
mov
xchg
xchg
fadd
fisubrl
aam
cmp
jnp
add
mov
cmpsb
cli
jmp
dec
mov
pmaxsw
sub
fadds
pop
divb
test
mov
push
cmp
pop
out
or
mov
fbstp
inc
xchg
cmp
xchg
or
and
fdivp
xchg
cmp
sub
mov
jmp
pop
dec
fdivrl
insb
sub
xchg
cmpsl
mov
inc
test
test
test
mov
push
in
fdivr
cmp
xchg
push
xchg
bound
cmp
mov
sti
mov
jbe
stos
mov
and
jb
cmp
movsb
xor
je
mov
cld
fdivl
jo
cmpsl
sub
adcb
stos
sub
insb
ficoml
lahf
push
inc
xchg
mov
clc
out
mov
jo
jle
cltd
fiadds
sbb
inc
mov
test
xchg
repz
push
adc
out
xor
adc
or
into
or
pop
sar
inc
pop
out
sbb
fbld
mov
sti
test
cmp
sbb
cmp
fs
jnp
add
add
push
cli
iret
sbb
fisubs
repnz
in
mov
xlat
mov
add
stos
mov
or
jae
dec
sbb
scas
sbb
sti
out
aas
cli
push
decb
mov
cmp
push
mov
out
dec
and
lds
mov
jmp
xchg
xchg
and
outsb
scas
sub
lret
cmp
or
pop
movsl
out
push
and
pop
jbe
push
mov
ret
xchg
outsl
pop
cmp
das
into
dec
cmpl
es
arpl
jbe
je
push
mov
stc
and
add
ss
mov
or
fcmovu
outsl
cli
xchg
xor
mov
mov
cmp
pop
sub
and
mov
mov
mov
mov
jg
sbb
pusha
out
and
leave
cltd
inc
fcomps
dec
pusha
inc
inc
xchg
lds
inc
mov
adc
lcall
xor
outsb
mov
dec
inc
fs
inc
sub
pop
sbb
pop
sbb
xor
jg
sub
filds
xor
jne
sub
cmp
bound
xor
mov
repnz
push
inc
sbbb
cs
or
mov
xchg
sub
inc
cmpsl
dec
add
dec
sbb
test
stos
out
scas
das
sbb
data16
jns
jle
jae
scas
cmp
cmp
clc
xor
add
mov
push
push
into
cli
push
stos
sub
scas
aam
testb
xor
dec
lret
push
and
aaa
out
sub
or
pop
jbe
sub
add
aaa
sbb
push
mov
fs
stc
imul
mov
xchg
negb
aaa
pop
jmp
or
addr16
scas
push
xchg
mov
or
in
loop
test
push
testb
mov
bound
mov
aas
adc
lds
xlat
and
mov
pushf
mov
addb
sbb
jp
shr
xor
addl
outsb
or
stos
xlat
pop
inc
outsl
out
fdivrl
xor
rorb
mov
cltd
sub
dec
das
dec
cmp
mov
filds
push
insb
in
mov
adc
dec
inc
lret
lcall
xchg
aaa
jb
or
stos
inc
mov
xor
xor
jp
inc
es
mov
gs
dec
inc
ljmp
cmp
ljmp
xor
inc
fs
in
inc
xchg
enter
push
and
arpl
rorb
mov
outsb
loop
outsb
insb
jle
or
pop
lock
dec
ljmp
cmp
xchg
push
ret
insb
xor
mov
xlat
inc
outsb
lds
sbb
sub
mov
adc
scas
sbb
mov
pusha
mov
xchg
xchg
push
jge
and
add
xor
outsb
stos
bound
add
dec
dec
mov
addb
jne
adc
in
ret
outsb
sub
mov
hlt
stos
mov
push
cmp
mov
or
adcb
ficomps
cltd
sbb
sbb
sbb
add
mov
adc
pop
xor
repz
mov
push
pop
dec
out
gs
rcrb
lret
jbe
in
pop
dec
xor
bound
lcall
dec
les
xor
gs
jge
mov
shlb
mov
arpl
adc
mov
jge
push
je
test
cs
sahf
stos
mov
dec
stos
pop
ret
cltd
pop
leave
bound
addr16
adc
mov
and
xchg
inc
mov
add
inc
or
dec
scas
iret
insb
icebp
imul
mov
cmp
shrl
mov
add
stos
repnz
pop
bound
or
pop
xchg
add
sbb
lret
sarl
mov
imul
test
lea
xor
push
pop
cmp
dec
mov
ja
test
mov
insb
rcrb
pop
ds
lds
sahf
popa
imul
into
push
stos
loopne
pop
fildl
lahf
lods
faddp
jmp
sbb
inc
pop
stos
ret
daa
add
mov
add
pop
mov
add
jnp
inc
in
icebp
lock
cmp
cmp
sub
es
orl
dec
xchg
or
jbe
xchg
and
mov
cmp
jne
push
and
xchg
push
pusha
loopne
sti
mov
test
pop
fmuls
dec
dec
dec
xchg
gs
cld
es
clc
push
sahf
inc
call
and
lods
lcall
dec
cmp
sbb
fwait
pop
test
test
pop
out
sbb
sbb
sbb
data16
push
mov
mov
dec
ljmp
leave
pop
mov
sarl
imul
sub
dec
dec
dec
sub
push
lock
jp
pop
jl
sbb
scas
mov
push
sub
mov
mov
js
xor
pop
lahf
mov
xchg
xor
test
lds
adc
inc
dec
inc
adc
sbb
pop
sbb
jb
int3
mov
stos
dec
push
and
xchg
aas
push
pop
lahf
sbb
cli
ret
sahf
push
xchg
dec
cwtd
imul
xor
jnp
icebp
scas
xlat
ds
dec
push
cmp
adcw
ret
jno
jmp
sbb
roll
fisttpll
icebp
das
mov
rorl
mov
ljmp
mov
mov
mov
ljmp
incb
dec
out
lds
gs
fcmove
inc
add
push
mov
mov
sub
cwtl
test
cmp
aam
or
js
ret
negb
fidivs
call
xor
fsub
mov
pop
mov
outsl
repnz
rcrl
mov
sub
es
xchg
and
into
arpl
xchg
adc
and
inc
arpl
dec
sbb
movsl
roll
adc
movsb
or
xchg
aam
push
cmpl
push
cmc
pushl
and
enter
sbb
jae
mov
dec
mov
stos
pop
dec
insb
xchg
lret
adc
inc
jne
or
repz
test
into
cmpsl
cli
adc
fidivrs
mov
mov
push
enter
cmp
fucom
and
dec
js
dec
lds
adcl
loopne
cmpsl
sbb
test
mov
insb
out
leave
in
jge
stos
adc
xchg
mov
les
test
mov
inc
stos
jb
out
inc
in
cmp
fidivl
scas
leave
mov
xchg
insb
mov
loopne
sbb
adc
jg
negl
mov
data16
cmpsb
bound
pop
mov
cmp
movsl
mov
out
data16
mov
int3
mov
adc
testb
out
out
lods
jecxz
ficoms
push
sub
mov
and
in
scas
push
lods
mov
xor
imul
or
xor
inc
iret
call
pushf
add
dec
out
sub
xchg
rol
and
and
cmpsl
pop
stc
in
stos
pusha
insb
out
lods
dec
and
decl
fwait
adc
js
mov
scas
push
mulb
dec
cmp
sub
test
push
sbb
pop
cli
popf
cmp
imul
push
adc
or
int3
sbb
pop
test
cli
dec
adc
push
sbb
mov
dec
shr
push
imul
push
bound
vpsrlw
cmpb
jnp
addr16
push
mov
call
cmp
ret
lods
push
lahf
out
cmp
add
push
cld
pop
popa
and
pop
xchg
push
jnp
fistps
lds
or
stc
add
loop
lods
addl
and
jecxz
push
xorl
mov
inc
repz
and
stos
xor
jp
xor
push
in
adc
add
mov
cmp
insb
iret
mov
lahf
popa
push
adc
lods
dec
mov
sbb
cli
enter
out
faddl
ret
sbb
nop
in
cmp
bound
pushf
push
jno
cmp
mov
add
repnz
mov
xchg
mov
fstpl
adc
xor
aaa
and
adc
insb
rcll
cli
cmp
mov
mov
xchg
loopne
mov
dec
lods
jmp
inc
into
cmp
adc
es
cwtl
cmp
cmp
scas
inc
pop
push
cmpl
call
mov
nop
sub
stos
mov
xor
jnp
das
mov
sbb
pop
rorl
call
aam
js
xor
sbb
das
ficomps
dec
push
push
fmull
dec
jbe
data16
mov
and
jne
mov
push
imul
lods
fildll
dec
jmp
xlat
sbb
mov
inc
or
arpl
xchg
pop
pop
mov
cmp
cmp
lcall
icebp
pusha
xor
push
sub
jnp
mov
daa
xchg
daa
xor
sahf
lahf
insb
pop
xchg
adc
scas
jb
sbb
jae
je
adc
cmp
je
mov
cmp
pop
enter
imul
filds
xor
lcall
outsl
or
or
pop
imul
ret
add
xlat
add
mov
decl
sahf
iret
ficompl
cli
scas
pop
pop
sbb
jmp
test
aad
mov
push
arpl
repnz
mov
jp
lcall
mov
xor
adc
jmp
loop
xchg
fiaddl
out
ss
ljmp
pushf
mov
push
loop
jg
icebp
push
sbb
loop
imul
pop
inc
push
pop
jbe
inc
mov
test
sahf
sbb
cmp
sbb
add
stos
jae
dec
lahf
dec
and
push
pop
dec
jnp,pt
ficomps
lea
sub
push
adc
dec
mov
sti
inc
cmp
xor
mov
dec
sahf
sub
sti
pmaddwd
loop
mov
push
sahf
test
cmp
cs
clc
ds
dec
or
sahf
add
outsl
hlt
xchg
jmp
lahf
loop
xchg
adc
pop
mov
inc
ds
sub
lahf
pop
push
cmc
push
cmpsb
push
sahf
mov
cmp
popa
dec
fwait
shrl
cs
cmpsb
pop
jg
lock
pop
std
dec
sahf
in
int
mov
pop
mov
jmp
ds
daa
jge
cmpsb
adc
cld
loop
movsb
adc
pop
icebp
sub
aas
xor
jg
nop
pop
movsb
cmp
push
push
addr16
inc
pop
sbb
dec
pop
cmp
push
xchg
pop
pop
inc
or
inc
cmp
imul
pop
mov
lcall
ficoml
test
and
jg
loope
mov
arpl
inc
iret
loopne
fnsave
jmp
jo
jecxz
push
lds
es
and
dec
dec
lret
push
inc
pop
sahf
pop
inc
xchg
adc
adcb
cld
cmp
and
add
push
adc
pop
je
sbb
cwtl
or
mov
mov
add
jp
jae
push
pop
jle
inc
xchg
jb
add
mov
mov
ljmp
sahf
lock
ds
fs
mov
out
lcall
mov
ljmp
adc
loop
repz
sahf
sub
fnstsw
cmp
clc
out
stos
add
das
push
es
js
jp
push
fcoms
fisttpl
jbe
fnstcw
jo
pop
mov
cmp
jecxz
mov
sub
arpl
sti
cmp
jns
fneni(8087
dec
jmp
inc
sbb
pop
sti
adc
sbb
xchg
ja
lcall
pop
ficomps
xchg
outsl
cld
cs
mov
and
sub
mov
add
mov
jb
mov
jg
sub
inc
cmc
and
cmp
push
and
push
sbb
mov
pop
jns,pn
xor
mov
push
movaps
xor
and
test
add
mov
imul
jge
add
pop
jbe
out
insb
dec
sbb
mov
jmp
arpl
sbb
cmpl
aaa
xchg
xorl
inc
out
stos
cmp
std
fistpll
movsl
mov
orl
mov
cli
add
stos
add
or
and
pop
sbb
pop
push
pop
rolb
sbb
stos
repz
mov
dec
addr16
xor
jle
stc
inc
insb
fisttpll
xor
dec
dec
jp
incb
repz
sarb
loopne
xchg
dec
and
mov
inc
push
scas
jp
sbb
adc
rorl
xor
pop
sarb
xchg
icebp
movsl
inc
sbb
fwait
pusha
inc
pusha
inc
push
inc
rorb
mov
fidivl
xlat
adc
ret
and
jae
ds
sbb
fcmove
add
mov
mov
jge
fld
ss
orb
xor
adc
xchg
add
jmp
les
dec
inc
mov
xchg
std
adc
adc
shrb
lcall
pop
push
aas
call
arpl
movsl
ljmp
fwait
jb
orb
insl
sbb
dec
cmp
mov
jo
mov
push
dec
in
inc
mov
insl
daa
testl
mov
shll
lods
jp
movsb
jae
arpl
cmpsl
loop
push
xor
mov
flds
mov
push
adc
out
pushf
sub
cltd
mov
jno
pusha
jne
lds
xchg
and
inc
imul
mov
mov
cmpsb
int
das
jae
cmp
or
jno
js
mov
mov
and
js
mov
sbb
push
sub
push
mov
xor
jg
repnz
add
shl
in
cld
add
adc
mov
push
divb
ds
cmp
rcrb
push
or
sbb
push
scas
out
dec
jae
push
daa
cmp
loop
cmp
cmp
push
imul
cmp
or
mov
mov
outsb
dec
xchg
loopne
lret
into
orl
bound
fildll
add
jnp
dec
add
ss
fisubrl
sbb
ljmp
adc
jb
pop
xor
cmpsb
pop
ret
lret
pop
adc
out
pop
adc
mov
xor
inc
fwait
paddusw
stc
pop
es
adc
idivb
repz
and
and
dec
push
jl
push
fimull
dec
jecxz
into
push
js
push
dec
test
lcall
aam
add
aaa
add
sbb
push
mov
add
cs
push
cli
js
jge
out
xchg
imul
mov
roll
push
mov
add
adc
rclb
pop
ss
jno
jp
stos
and
fcoml
mov
int3
clc
out
mov
mov
add
and
and
je
pop
mov
jl
bound
fidivrs
cltd
sbb
bound
ficomps
clc
cli
fnsave
sbb
push
lods
sbb
stos
loope
xchg
fcoml
sarb
and
enter
mov
and
mov
sahf
xor
lcall
sbb
jns
and
push
or
lock
wrmsr
push
cmp
das
and
std
jbe
push
js
dec
push
cmp
shlb
push
push
push
icebp
into
lret
test
xor
xchg
stc
jbe
cwtl
repnz
push
cmp
aas
adc
shl
cvttps2pi
sahf
cli
fwait
scas
in
push
add
addl
cs
mov
out
and
stos
dec
ret
add
cmp
adc
ret
lret
movlps
je
mov
lock
pop
mov
push
lret
stos
cli
or
loop
orl
aam
scas
rcr
xlat
es
lock
jp
pop
test
insb
mov
add
repnz
pop
jge
pop
mov
es
adc
mov
push
sbb
lods
cmpsb
loopne
ret
dec
push
cmp
push
dec
xchg
lods
xor
xchg
fwait
mov
pop
jo
xchg
push
mov
jge
fildl
cli
mov
lea
call
insb
sub
sbb
addr16
jbe
push
gs
mov
adc
sub
aam
mov
adc
dec
pop
je
inc
mov
pop
xor
mov
mov
insb
inc
and
mov
loop
addl
pop
jo
pop
or
mov
cmp
adc
std
imul
outsb
push
insb
jo
rol
fisubl
ja
mov
cmp
decl
fs
clc
mov
fidivs
in
pop
sub
push
jns
mov
jge
jl
push
shlb
push
out
adc
daa
cli
dec
fiadds
test
stos
movsb
daa
mov
hlt
mov
fildll
aad
dec
push
push
ret
and
mov
mov
cs
xchg
or
xor
sti
cmp
arpl
ss
xchg
js
int
xlat
mov
lds
sub
sub
daa
mov
adc
fidivrs
push
data16
rorl
cli
fcoml
adc
stos
inc
xchg
test
push
jecxz
shlb
ret
pop
loop
inc
rcrb
push
bound
sub
push
pop
stos
test
jmp
jg
sub
out
insb
call
jb
out
imul
outsl
add
es
pop
jge
jns
mov
loope
cmp
pop
js
mov
mov
cltd
out
lods
inc
imull
pop
add
cmp
mov
pop
pusha
mov
push
out
sbb
scas
daa
push
xor
mov
sarb
shl
add
les
fadds
mov
inc
cltd
adc
ret
cmpsb
ljmp
cwtl
ds
pop
lret
dec
pop
outsb
push
scas
repz
mov
xor
shll
fidivrl
pop
dec
das
scas
pop
clc
jge
daa
stos
xor
xor
nop
int3
xor
cmc
cmp
outsl
jmp
in
and
xor
loop
out
xchg
std
testl
or
aaa
popa
inc
in
inc
fisubl
inc
ds
clc
or
fmuls
movsb
sub
mov
adc
nopl
test
push
and
or
ret
popf
cmp
dec
dec
out
push
clc
adc
nop
inc
dec
mov
dec
and
dec
rorb
movsl
pop
ds
mov
mov
rcl
jno
pop
adc
pop
mov
push
or
xchg
ja
inc
ljmp
fmulp
mov
or
push
out
cmp
je
out
fimuls
sarl
sbb
stos
aas
cmp
leave
sarb
gs
or
push
jmp
pop
xor
orl
push
aas
xchg
cmp
cmp
xchg
imul
push
push
xor
repnz
repnz
int3
jecxz
cmp
lods
dec
lret
dec
push
jp
in
scas
fld
out
xchg
dec
ds
scas
repnz
sbb
push
adc
pop
push
sti
mov
loop
mov
jge
out
xor
ret
mov
inc
or
lret
push
mov
xor
mov
inc
cs
sti
push
and
rcrb
cmp
testb
pop
pop
pop
hlt
push
inc
rsm
and
cld
sbb
movsb
sahf
sbb
pop
adc
or
or
out
xlat
lret
jmp
hlt
adc
je
mov
inc
dec
jmp
xor
mov
ljmp
outsb
sub
jb
or
jmp
xor
imul
aas
mov
imul
mov
gs
push
out
dec
xor
lret
jae
out
daa
lea
sub
mov
dec
lahf
sbb
mov
mov
stos
fisttpl
mov
fildll
lock
mov
lret
lret
sbb
les
fs
loop
into
adc
jae
dec
xchg
or
xchg
pop
mov
inc
xchg
jne
test
dec
addr16
and
push
lds
adc
and
mov
ss
jns
jns
dec
push
in
shrl
inc
inc
out
es
push
mov
shlb
aas
adc
sub
insb
orl
pop
pusha
fisttps
aad
mov
sti
inc
dec
inc
shrb
jmp
addr16
mov
mov
or
lods
pop
or
pusha
jle
add
inc
imul
add
adc
lret
mov
lret
shlb
fstl
out
dec
jae
sub
adc
les
imul
mov
clc
fldcw
cld
out
pop
push
sbb
jg
fstps
sbb
push
pop
dec
out
inc
js
pop
pcmpeqw
or
xchg
mov
and
jp
lret
cmp
stos
addr16
jmp
aam
stos
mov
insl
inc
roll
lock
jmp
test
and
nop
adc
jp
adc
push
push
mov
jns
cmp
jl
bound
wrmsr
jne
fcmovu
add
and
aaa
sbb
sub
bound
enter
out
std
inc
pop
dec
jp
das
mov
dec
enter
dec
inc
rol
sub
test
hlt
les
push
xor
mov
ljmp
mov
xchg
and
pop
hlt
xchg
popa
lret
jno
das
enter
ret
pop
cmp
dec
xchg
adc
mov
cltd
jg
fldenv
push
jmp
mov
es
scas
cli
rorl
sub
and
or
xchg
arpl
mov
data16
psubusw
add
push
gs
in
and
insl
mov
sub
mov
and
jnp
xchg
sbb
mov
sti
inc
xchg
movsb
fildl
pop
in
jle
xchg
lock
push
mov
ficompl
lret
stos
inc
daa
test
insb
test
bound
jl
ffree
jge
or
jns
xor
sub
inc
loopne
xchg
xchg
xor
not
je
lea
sub
mov
in
decb
rcrb
es
popa
aaa
xchg
mov
pusha
cmp
lcall
xor
mov
fnstcw
xor
imul
out
bswap
lds
sti
xchg
cli
std
clc
lret
xor
aas
xchg
ss
mov
pop
push
sahf
out
sbb
call
xchg
push
dec
in
addr16
pop
xchg
lcall
out
js
dec
dec
push
cmp
sub
rorl
arpl
jecxz
push
stc
mov
xadd
inc
pushf
mov
xor
sub
call
mov
add
cmp
aad
xchg
fwait
xchg
xchg
rcrl
mov
pop
xchg
pop
add
mov
add
dec
dec
repz
scas
out
pop
aaa
test
arpl
and
jp
test
pop
cltd
pop
sub
loope
add
jecxz
setl
jecxz
cbtw
outsb
xchg
xchg
cli
push
movb
loop
and
jp
adcl
ret
outsb
scas
dec
sbb
mov
lds
xchg
mov
lock
testl
pushf
js
notb
addr16
out
ret
inc
jb
ljmp
pop
cmpsb
cmp
movsl
xchg
push
int3
xchg
insb
adcl
scas
out
fdivl
das
sub
pop
in
mov
pop
mov
cmp
ja
mov
cmpsb
add
test
dec
mov
sbb
mov
add
imul
lret
fs
and
test
std
loope
jns
test
les
and
adc
push
inc
pop
sub
stos
fs
loopne
lds
jo
push
je
jae
xchg
or
pop
mov
mov
xlat
ja
fisubs
pop
dec
jb
jmp
insb
cltd
pop
repz
or
in
add
push
push
cmp
and
pushf
loop
or
out
jle
push
dec
mov
or
pop
cmp
loope
push
adc
jmp
and
ja
mov
inc
mov
lret
xchg
call
shlb
push
cwtl
loope
inc
fdivs
insb
xor
les
jge
sub
test
jp
test
cmp
dec
inc
inc
cmp
lds
push
es
dec
mov
insb
loop
pusha
push
xchg
andl
and
loope
ss
inc
jle
popf
mov
shrb
das
or
cltd
movsb
jns
dec
daa
sub
jg
sbb
or
mov
shlb
out
fsts
mov
mov
sbb
jb
pushw
mov
testb
out
mov
sbb
jo
ss
mov
daa
xchg
or
mov
dec
loop
cmp
dec
xlat
movsl
cmp
and
sarb
push
aaa
mov
xor
xchg
sti
add
pop
test
and
push
test
and
mov
pushf
pop
iret
icebp
sub
or
pop
sbb
mov
call
lods
jg
call
mov
sbb
inc
fstps
pop
sbb
inc
and
mov
push
fsts
dec
cld
imul
loope
lahf
les
out
fidivrl
xchg
out
shlb
sub
push
rcll
ret
daa
push
daa
push
enter
inc
out
in
dec
cli
imul
test
sbb
mov
fcmovb
jg
adc
loopne
push
lcall
in
fldt
je
ja
je
popf
inc
mov
fistl
mov
push
clc
jae
mov
pop
adc
or
adc
jmp
cmp
inc
mov
mov
cmpsb
push
call
and
add
adc
pop
sub
fisubrs
notl
push
dec
inc
sbb
je
test
daa
mov
fists
movsb
mov
push
mov
sbb
je
arpl
dec
pop
mov
cmp
cmp
dec
test
pushf
dec
xchg
scas
scas
sub
mov
dec
push
jo
mov
xor
jo,pn
loopne
repz
pop
mov
test
xor
push
outsb
or
and
mov
push
scas
jae
cmp
pop
fldcw
js
and
sub
scas
cmp
lahf
inc
lock
push
adc
insl
mov
je
push
int3
pop
xchg
scas
jl
sbb
sbb
rorl
pop
mov
jns
lret
dec
ljmp
mov
mov
mov
xor
and
sbb
jb
mov
jo
out
stos
shrl
push
aaa
fidivs
pop
pop
pop
shll
and
cltd
xchg
inc
cmp
and
fwait
enter
scas
out
enter
jp
pop
pop
mov
fisubrl
push
sbb
orl
aaa
pop
pusha
loope
lock
bound
incb
cmp
jmp
test
dec
fs
shrl
jb
pop
inc
fisttpl
sbb
adc
ret
shll
mov
inc
sub
into
call
xchg
es
xor
and
cmp
imul
or
mov
cmpsb
sbb
mov
xor
cmp
xor
rcll
arpl
cwtl
mov
aaa
push
adc
mov
aaa
repz
inc
xchg
jge,pt
jle
stos
mov
inc
and
pop
jmp
inc
inc
rdpmc
push
inc
pusha
xor
jae
nop
xchg
xchg
cld
adc
push
sbb
popf
aaa
ret
and
cmp
in
das
fisubl
fnstenv
movsb
pop
xchg
int3
lods
sub
push
je
jl
ljmp
and
cmovo
mov
push
push
out
add
sub
add
ficoml
sbb
mov
pop
mov
fucomp
fcmove
push
push
imul
xor
pop
and
sub
mov
mov
dec
dec
mov
and
jns
popl
inc
jecxz
pop
fistpl
aaa
cmpsl
cs
enter
push
je
arpl
ss
divl
pop
push
insb
push
or
xchg
js
dec
and
or
and
shll
dec
sbb
cmc
push
pop
scas
clc
test
mov
stos
jnp
aad
xor
lret
sbb
mov
pop
push
test
mov
push
push
out
das
cmp
mov
pop
faddl
sbb
sahf
push
fdivl
inc
or
inc
cmp
and
dec
mov
jp
das
add
and
inc
push
fs
xchg
stos
jae
call
push
xchg
dec
int
push
bound
jo
cmp
insb
std
movb
jmp
dec
mov
xchg
bound
xchg
and
sbb
mov
stos
mov
sbb
and
xor
adc
xorb
adc
jo
aam
std
imul
popl
push
hlt
jp
lret
fiadds
adc
lds
incl
pop
test
insb
mov
mov
pop
sbb
stos
bound
push
add
push
jle
popf
cmp
es
lcall
ja
mov
js
add
lock
and
filds
xchg
movsl
fisubl
dec
push
push
in
decb
xor
hlt
xor
les
dec
dec
stos
dec
cmp
hlt
sbb
aaa
pop
mov
loopne
out
pop
push
jmp
xor
je
stos
out
push
inc
xor
inc
push
divb
sub
pop
mov
adc
mov
das
jp
and
fbstp
test
cmp
push
sub
je
ja
outsb
in
dec
lcall
lods
jg
or
jecxz
mov
std
inc
jne
lcall
fwait
dec
ret
rorb
or
scas
repnz
sbb
and
jb
jne
cmpsb
cmp
pop
pop
test
aaa
mov
dec
popf
jp
or
shll
cmp
fidivrl
les
stc
and
inc
adc
popa
clc
dec
pop
xchg
outsb
nop
mov
cli
arpl
out
pop
vcvtps2pd
add
sub
scas
adc
ds
push
lods
sbb
loop
mov
push
aam
add
cmp
stos
repz
inc
pop
cs
and
push
sar
adc
lods
mov
push
sbb
xchg
xchg
jmp
cmp
sub
lret
mov
filds
insb
cwtl
or
pop
jmp
out
aaa
add
mov
mov
add
xchg
and
repz
lahf
daa
out
ret
sahf
sbb
mov
std
movsb
xchg
cmp
sbb
dec
and
pop
cli
ss
pushf
fs
and
pushf
adc
cmp
ljmp
cld
out
or
sbb
in
dec
gs
push
ret
in
popa
mov
mov
mov
dec
outsl
push
sbb
jbe
shr
sbb
push
dec
xchg
ljmp
out
inc
insb
sbb
pop
stc
sbb
jne
cltd
push
mov
shlb
or
cwtl
in
dec
cld
adc
int3
push
xorl
mov
inc
mov
pop
aad
out
insb
cmc
pop
mov
add
jg
sahf
out
xchg
jo
call
sub
push
sti
pop
xchg
or
pop
pop
scas
inc
ret
add
xor
sahf
mov
bound
stos
add
jnp
hlt
inc
mov
in
push
in
pop
insl
pop
outsb
cmp
pop
xchg
mov
ljmp
stc
add
push
cmp
ret
adc
outsl
pop
lea
into
and
cmp
nop
popf
or
outsb
das
iret
or
leave
aam
sub
inc
xlat
cwtl
iret
push
adcb
add
mov
xor
pop
outsb
stos
lds
hlt
imul
xor
fwait
or
jb
xchg
cmp
subl
push
ret
push
fwait
inc
movsb
xchg
inc
adc
or
dec
pop
add
inc
mov
out
in
orl
mov
xchg
pop
test
adc
xor
loope
fnstenv
jmp
cltd
into
add
stos
and
sub
arpl
arpl
jmp
jle
and
mov
inc
mov
divl
xor
push
cwtl
lods
mov
jbe
insb
repnz
inc
add
test
push
mov
push
sbb
cmp
scas
outsb
imul
sub
dec
xchg
pop
and
sub
ja
xchg
xchg
jmp
cmc
push
mov
idivb
js
cmp
ficompl
repz
aad
pop
xchg
dec
pop
xchg
call
insl
cmp
cli
mov
addr16
mov
cli
daa
lea
mov
jo
cmpsb
pop
xchg
mov
cli
xchg
and
xchg
dec
pop
xor
cmp
lcall
fwait
jp
std
jg
and
jae
lock
pop
dec
sbb
cld
jle
icebp
test
jmp
jno,pt
lea
xor
sbb
rcrb
xlat
sub
sahf
aad
pop
nop
pop
mov
adc
push
cs
mov
dec
ficomps
cmp
sbb
add
pop
leave
mov
insb
jge
mov
mov
cmc
pop
ljmp
dec
loope
rol
test
cmp
pop
pop
sti
pop
inc
cmpsb
or
and
in
pop
push
cld
es
cmp
fiadds
sbb
out
pop
insl
je
dec
pop
insl
xor
ds
jle
mov
jecxz
sbb
loopne
add
add
in
pop
sbb
inc
push
pusha
xchg
imulb
pusha
sbb
jle
repnz
dec
cltd
push
sub
repz
mov
jo
inc
leave
mov
ja
cmp
xor
cmp
stc
xor
jl
mov
xlat
fst
mov
jb
ret
in
push
or
xchg
add
mov
push
add
les
arpl
mov
mov
imul
lds
lret
sti
ds
lahf
add
dec
push
rorb
aas
ds
push
lcall
mov
push
cmp
out
jnp
ds
cmp
mov
jns
or
inc
sbb
xor
cmpsb
add
outsl
rcl
out
pop
push
cmovbe
in
cli
cmp
fs
add
movsl
mov
add
jns
and
jg
imul
inc
xchg
push
dec
and
loop
and
subl
cmp
ds
xor
adc
sahf
jl
rcll
mov
mov
jno
mov
std
pop
push
push
gs
fimull
ds
add
gs
push
cwtl
cmpsl
push
aam
mov
fcompl
add
cli
cmp
stc
daa
mov
shrb
cmp
push
test
push
jmp
cmp
xor
xorl
add
call
jae
ds
sbb
clc
jnp
adc
out
pop
xchg
dec
lret
ds
es
push
movsl
adc
sbb
mov
xchg
sbb
pop
dec
or
pop
ds
fs
pop
mov
movsb
sbb
inc
mov
cmp
adc
incb
nop
sub
sbb
pop
cmp
es
sahf
dec
orl
movsb
sub
clc
stc
repnz
pusha
lods
subl
lahf
pop
dec
push
es
jns
negb
jns
pusha
idivb
adc
fists
jns
pusha
adc
mov
jns
sub
fistpl
cli
shlb
inc
cmp
out
cmp
fidivrl
jnp
add
dec
and
sti
fbld
mov
loop
arpl
popf
mov
and
fdivp
and
cmp
jnp
jl
cmp
pop
stos
pop
out
xor
cmpsl
or
lret
sbb
mov
jecxz
adc
mov
push
mov
xchg
cmp
inc
lods
cmovp
arpl
mov
inc
or
cli
loop
imul
ds
jl
imul
repz
sbbl
decb
rep
pop
xchg
cmpsb
sahf
cmp
adc
cmpsb
mov
cmp
cmp
mov
inc
shll
cmp
jns
cli
push
fidivrs
icebp
sahf
hlt
imul
cmp
aad
jg
fildl
outsl
ds
lcall
popf
mov
mov
jge,pt
mov
xchg
fiaddl
jge
jnp
mov
ljmp
xchg
add
add
fildll
pop
shrb
xor
les
push
ds
fsubrl
out
adcb
in
out
inc
jo
faddl
push
sub
insb
mov
add
sub
inc
fisttpll
imul
ret
xchg
lahf
repnz
int3
fstps
pushf
mov
adc
inc
push
sbb
cmpsl
sub
jmp
shrl
rcrb
into
add
icebp
faddp
pop
push
data16
js
mov
push
sub
xor
ss
xchg
xchg
xchg
cmp
xor
dec
cmc
xchg
cmp
mov
xchg
shlb
in
lret
dec
xchg
rclb
mov
xchg
sub
mov
lods
xchg
mov
adc
clc
dec
lea
cmp
outsl
mov
call
pushl
pop
sbb
and
sbb
cmp
in
mov
inc
adc
fmul
imul
int3
clc
xchg
mov
push
ja
jno
jmp
adc
mov
xchg
mov
mov
mov
xor
lret
out
lea
sbb
and
bound
pushf
push
mov
pushw
add
loopne
jbe
pop
dec
mov
ficomps
jecxz
inc
cli
dec
mov
inc
sub
jecxz
cmp
or
stos
sbb
fldcw
cmp
add
lods
xlat
or
lods
inc
mov
les
imul
adc
cs
jo
mov
cmc
popa
cmp
mov
stc
pop
mov
fidivrs
jbe
shrl
inc
fidivl
fwait
js
pop
das
sbb
aaa
xchg
stos
sbb
push
lcall
cmp
pushf
loopne
push
xchg
lods
inc
sbb
aaa
aam
sbb
push
in
je
xchg
xchg
sti
popf
push
xchg
icebp
lahf
adc
adc
jecxz
xchg
lods
vrsqrtps
nop
sarb
inc
stc
adc
das
movsb
cmp
jne
fstps
test
aaa
arpl
in
shlb
aas
das
aas
adc
pop
mov
stos
das
xlat
jno
inc
fcomps
inc
dec
dec
sbbl
pop
sub
add
data16
leave
aaa
cli
cwtl
shl
ret
pop
sub
loope,pt
ud2
sub
stc
iret
adc
roll
dec
or
mov
xor
cmp
pop
ja
lea
cmpsb
pop
jmp
xchg
ficoms
mov
push
adc
cmp
pop
pop
or
bound
push
cmp
loopne
cwtl
dec
mov
dec
outsl
xchg
in
and
int3
dec
sarb
sbb
cwtl
jbe
xchg
idiv
mov
scas
jmp
sarb
scas
pop
daa
mov
xor
cmp
mov
es
xor
in
cmp
pop
cmp
jno
lret
and
xor
jb
sub
imul
jb
inc
xchg
and
mov
cmp
addl
aas
outsb
and
push
jno
cmp
add
idivl
and
cmc
daa
mov
sbb
in
sub
gs
pop
call
ss
sub
adcl
jge
add
and
leave
and
lods
sahf
push
leave
dec
add
lcall
jg
je
lret
ljmp
pop
push
jb
aad
jl
fistpl
pusha
dec
mov
or
cld
sbb
xor
mov
pushf
divl
imul
test
add
push
sbb
insb
jecxz
das
xor
out
jne
jg
cltd
adc
js
jo
mov
inc
imul
repz
scas
notb
je
pop
shll
adc
xchg
loope
inc
int3
hlt
adc
push
mov
test
daa
aaa
sahf
ret
cmp
dec
repnz
daa
jo
fisubrs
push
fs
add
in
stos
aaa
dec
outsb
sbb
and
idivl
rol
shlb
pop
roll
daa
jg
push
dec
cli
push
ds
ljmp
xor
pop
inc
test
lds
shll
icebp
scas
add
out
push
push
inc
jns
pop
cld
mov
sbb
mov
dec
pop
cmpsl
test
cmp
inc
mov
inc
fwait
cmp
pop
pop
jo
in
jmp
jb
xchg
cmove
sub
outsb
sub
add
pop
push
push
xor
out
jo
pushf
pop
in
fldl
cli
sbb
fs
add
jbe
movsl
mov
pop
fs
xchg
xchg
arpl
cmp
mov
sub
xchg
lea
sbb
push
inc
call
out
imul
aad
jae
inc
or
adc
adc
pushf
push
push
add
fisubrl
idiv
sbb
xchg
sbb
cld
sub
inc
loop
jae
inc
mov
dec
and
mov
insb
fnsave
add
fs
mov
inc
movlps
inc
cmp
pop
les
xchg
cmp
and
lret
push
ret
in
into
and
or
cltd
mov
cwtl
xlat
dec
jno
outsl
sub
jmp
pop
aas
xchg
pop
or
ljmp
adc
or
mov
stc
mov
mov
mov
jp
test
mov
aam
je
jmp
ljmp
js
jp
sub
cmp
push
sahf
push
pushf
add
mov
dec
leave
lods
sbb
mov
dec
bound
jmp
adc
mov
add
lock
pusha
mov
test
test
hlt
scas
jo
mov
enter
dec
mov
cltd
hlt
cmpsb
cmp
jne
fidivs
push
xchg
mov
out
pop
mov
sbb
push
bound
mov
inc
insb
cmp
cmp
adc
cli
notb
jmp
stos
push
bound
adc
insb
cmp
mov
jl
mov
mov
ja
lret
sbb
mov
push
or
sbb
push
and
or
ret
mov
insb
jae
cli
mov
ljmp
sub
cmp
inc
and
adc
stos
jmp
cmpsb
fnstenv
adc
jb
pusha
push
inc
pop
inc
out
ds
cmp
xchg
push
sub
inc
cmp
rcl
aaa
stos
les
aam
les
dec
cltd
js
enter
fistpll
mov
lret
stos
jb
cmp
fs
scas
sub
jecxz
loop
jmp
pop
js
jae
pop
mov
push
lcall
cwtl
cmp
xchg
lods
cmp
mov
jnp
mov
imul
inc
jmp
vrsqrtss
xchg
pop
lea
fxch
imul
test
mov
test
dec
and
ret
lcall
ret
into
aad
jecxz
adc
into
lods
mov
lret
aaa
ljmp
faddl
adc
mov
mov
mov
xor
push
lcall
imul
out
in
out
ss
and
repnz
repz
inc
dec
divps
adc
nop
daa
jo
mov
aad
iret
xchg
jg
inc
rorl
movsl
les
lahf
lret
addb
pusha
loop
cmp
loopne
and
inc
cmp
cld
ds
inc
fisttps
dec
inc
lock
adc
test
sti
daa
pop
mov
mov
sarl
mov
xor
sub
fimull
mov
inc
xchg
clc
push
mov
int3
sub
sbb
mov
je
data16
dec
mov
xchg
pop
inc
mov
out
enter
push
js
xchg
jno
std
aaa
pop
jp
inc
jb
cmc
mov
and
aaa
jge
ja
test
sub
mov
int3
pop
cmp
jno
and
xchg
add
insb
dec
stos
push
push
aaa
in
mov
sub
in
sbb
xchg
imul
adc
mov
mov
mov
leave
lcall
pop
bound
inc
bound
adc
mov
dec
xorl
jnp
xor
jmp
loop
mov
pop
and
inc
add
push
loop
jg
cmp
mov
jb
fs
xadd
sbb
sbb
adcb
mov
and
fisubrl
push
daa
rcl
and
mov
pop
dec
sbb
sbb
cmpsb
sub
cwtl
out
repnz
push
mov
in
xchg
sbb
jnp
ljmp
push
lds
pop
inc
dec
jp
stos
xor
imul
pushf
in
sub
lea
sub
imul
xchg
dec
add
lret
push
mov
lods
fucomip
mov
iret
ja
out
ja
loope
adc
lcall
and
loop
sahf
repnz
inc
lods
and
jo
fsub
mov
mov
outsl
dec
cli
sub
jns
fwait
lods
mov
jecxz
mov
pop
adc
pop
mov
addr16
out
and
dec
addl
mov
cld
push
sub
mov
imul
add
xor
out
sbb
lods
lahf
call
movsb
lret
mov
and
es
jo
mov
into
push
dec
sbb
cmp
xor
add
push
sub
xor
stc
rdmsr
pop
icebp
and
shr
cwtl
aam
cltd
xlat
lret
xchg
scas
into
sarl
lods
in
outsb
mov
lret
bound
adc
cmp
sub
cmc
nop
or
adc
out
and
cltd
mov
push
fs
outsl
arpl
sbb
fstpt
addr16
xchg
gs
fwait
addr16
sbb
fisubl
jp
push
jns
push
add
push
fwait
sbb
sbb
sbb
sbb
sbb
mov
inc
mov
pop
loopne
in
inc
sub
jp
inc
mov
fwait
mov
clc
or
shll
push
mov
insb
in
or
xor
inc
fwait
jne
sbb
fiaddl
cmpsb
pop
sub
hlt
std
jns
fstps
outsb
scas
push
mov
jmp
push
pop
test
xchg
mov
mov
jg
jo
scas
adc
pop
dec
popa
fs
sub
adc
je
data16
cmp
sub
jne
lcall
andl
cmc
mov
or
addr16
ss
insb
mov
fiaddl
and
aad
adcb
dec
call
jge
nop
mov
cli
mov
repnz
cltd
dec
jb
adc
pop
adc
adc
mov
ds
pop
sub
call
jle
pop
adc
jecxz
sbb
mov
push
jl
and
addl
mov
inc
pop
repz
rolb
in
cwtl
test
adc
fcmovbe
push
adc
sbb
or
jae
out
repnz
imul
daa
add
and
loop
sub
out
xor
dec
or
rolb
push
enter
lret
push
mov
push
jmp
xlat
ret
imul
out
insb
push
dec
jp
cmp
mov
test
ret
int3
jp
mov
and
mov
dec
cmp
test
rcrl
mov
push
mov
inc
lcall
pop
mov
stos
mov
fldl
rolb
das
mov
call
pop
push
insb
scas
fldl
repz
lds
pop
dec
insb
mov
aas
or
jae
lods
fsubl
or
popa
sbb
js
loopne
in
inc
xchg
xor
fisubl
jecxz
icebp
push
add
imul
ljmpw
add
push
mov
out
dec
push
cmp
cmp
cmc
insl
inc
addl
mov
lahf
daa
mov
inc
jae
shlb
sbb
ret
jg
jmp
cmp
insb
cld
std
rorb
aas
adc
inc
xorl
imul
jae
imul
mov
inc
dec
jmp
ja
addr16
sbb
sub
ja
sbb
push
cmp
or
loop
pop
cwtl
sbb
rolb
mov
leave
lahf
je
mov
xchg
mov
pop
daa
xor
setne
int3
aas
xchg
cmp
cmp
xchg
cmp
pop
xchg
testb
inc
imul
mov
cmp
cmp
pushf
mov
mov
xor
jge
adc
or
test
xchg
stos
insl
pop
sbb
bound
jmp
inc
clc
dec
push
adc
pusha
mov
dec
aas
and
pop
stc
ficoml
jle
adc
pop
adc
in
test
cli
pop
push
push
and
jnp
add
dec
loop
inc
aam
into
stc
sbb
fs
shl
dec
and
pushf
das
xor
rclb
push
sub
cmpsb
call
arpl
sub
leave
stos
popa
pop
loope
pop
out
or
jp
cmp
sub
insl
lds
pushf
and
cmpsl
and
jmp
and
loope
jns
cmp
xchg
inc
inc
cmp
push
mov
cmp
in
shr
mov
mov
jbe
mov
inc
stc
xchg
loope
adc
xchg
jne
cmp
push
lret
shl
jo
in
stc
pop
jns
testb
daa
ret
data16
cmp
dec
scas
xchg
addr16
sbb
xor
cmp
int3
mov
lods
cmp
and
pusha
pop
mov
and
mov
das
leave
push
jne
ss
xchg
cmc
arpl
cmp
jbe
out
loope
xchg
sbb
dec
mov
imul
sahf
imul
mov
xchg
mov
outsl
lahf
scas
sbb
ret
sbb
filds
add
stos
test
mov
cltd
nop
aad
popa
inc
and
fcoms
mov
mov
push
aas
jne
fstpt
and
test
sbb
in
add
pusha
pop
rcl
adc
jno,pt
and
sbb
jl
sbb
jmp
mov
dec
int
dec
inc
inc
imul
dec
pop
bound
inc
leave
pushf
or
push
je
stc
dec
pop
int3
push
fistps
stos
dec
ds
or
pusha
mov
ds
xchg
and
iret
push
rcrb
jae,pt
adc
and
push
push
mov
sbb
vpmaddwd
popfw
loop
test
xor
fwait
cmp
cmpsb
pushf
sahf
cmp
cmc
lcall
mov
test
push
ds
mov
lcall
ljmp
push
sbb
aad
xchg
dec
lcall
mov
stos
loopne
sbb
sbbb
ja
pop
rorb
test
clc
lcall
mov
mov
incb
push
lcall
cs
clc
jns
cmp
fwait
sbb
sub
test
nop
or
imul
fstpl
dec
sar
repnz
add
rcrl
lcall
outsb
xchg
dec
sbb
mov
dec
or
rorl
in
jns
adcl
aaa
ss
push
xchg
fimull
sahf
sti
loop
incl
jmp
dec
cs
dec
or
mov
loop
fldl
ds
or
lcall
jp
loop
cli
ss
sbb
or
lea
sbb
jnp
fnsetpm(287
ljmp
jne
bound
inc
pop
sti
in
inc
jne
mov
pop
xor
shlb
arpl
fwait
mov
mov
icebp
ss
fcomp
sar
cwtl
mov
sbb
mov
xchg
clc
inc
dec
or
pop
es
push
icebp
jp
fxch
lods
loop
leave
jle
outsb
cmp
inc
jbe
jmp
adc
pop
mov
xor
aaa
stos
jns
jge
insb
cs
mov
loop
sub
sahf
or
and
jb
fwait
call
fsubl
xchg
pop
hlt
sub
fidivrl
mov
loope
out
cmp
mov
push
mov
cs
push
int
add
mov
sbb
mov
popf
mov
in
sub
lock
mov
inc
int3
scas
mov
call
fisubrs
test
mov
sbb
imul
xlat
and
xorl
jle
or
arpl
mov
xchg
add
leave
sbb
inc
negl
inc
dec
sub
aad
hlt
test
cmpsb
cli
adc
adc
pop
imul
lret
arpl
fnsave
cmp
jl
dec
push
xchg
cmp
adc
mov
stos
out
push
mov
pop
mov
out
add
sbb
nop
pop
arpl
mov
xchg
mov
outsl
mov
enter
jp
xchg
stc
sbb
dec
mov
sbb
xorl
or
pop
cmp
mov
lretw
push
push
nop
out
xchg
gs
out
ss
jle
jo
xor
js
das
xor
jg
fistpll
mov
sahf
das
or
lret
hlt
xor
pop
stc
sbb
repnz
mov
inc
cmp
mov
ret
push
xor
mov
and
ret
fsubl
call
xor
dec
sub
mov
mov
movsl
lret
into
js
or
fnstenv
jg
lock
jo
mov
aas
adc
cmpsl
addr16
ficomps
test
sbb
cmp
stos
test
scas
jmp
xor
pop
sub
fcomps
cli
sbb
dec
ds
mov
daa
fisubs
mov
scas
pop
cltd
insb
mov
jg
hlt
scas
lods
imul
fwait
incb
dec
in
inc
pop
shlb
lahf
dec
sbb
outsl
adc
push
rorb
nop
lods
enter
dec
inc
jmp
pop
out
cli
jmp
pop
and
fidivrl
ror
ss
add
scas
lods
dec
xchg
test
inc
jp
fs
pop
jl
daa
jle
lea
add
inc
popf
mov
xchg
pop
aad
insb
cmc
daa
fcmove
mov
push
in
cmpsl
stos
shrl
sarb
pop
dec
mov
inc
and
frstor
mov
fwait
pop
xchg
pop
fdivrl
pop
dec
cmp
pop
cltd
jp
cli
xchg
gs
cmp
mov
pop
sbb
out
nop
mov
fldcw
mov
aaa
xlat
cmp
pop
inc
jp
adc
out
mov
jo
in
dec
pusha
lods
in
loopne
pop
nop
pop
mov
pop
jmp
jp
add
in
fabs
cli
ss
and
cmp
scas
or
les
jmp
mov
lcall
bound
test
aas
add
shll
mov
roll
fsubrs
int3
clc
shl
cltd
mov
xor
jp
rclb
js
lea
subb
faddp
add
ss
enter
loop
push
sub
ja
dec
mov
iret
int
or
inc
dec
sbb
and
icebp
jle
pop
pop
out
pop
loope
inc
inc
xor
ljmp
das
lahf
jb
inc
cwtl
sbb
and
push
xchg
jb
jge
and
inc
sbb
pusha
dec
push
fs
mov
and
jp
mov
imul
xchg
xchg
daa
imul
sub
cli
pushf
iret
daa
cmp
add
or
dec
pop
or
gs
test
jp
pop
sub
add
jnp
mov
gs
scas
testb
pmulhw
adc
iret
jae
scas
xor
dec
loop
inc
adc
and
adc
fimuls
pop
and
outsb
roll
aaa
pop
ja
pop
jg
sub
jns
repnz
cmp
shlb
arpl
aas
scas
sub
mov
fnstenv
pop
add
pusha
push
sbb
push
and
stc
dec
mov
cs
add
xorb
jmp
mov
jbe
xchg
jle
es
cwtl
sub
scas
idivb
mov
sub
sbb
mov
out
mov
xor
sub
shl
outsb
sbb
pop
add
jo
arpl
push
sbb
mov
repz
or
add
xchg
mov
xchg
and
nop
ds
ljmp
arpl
pop
clc
stos
push
mov
imul
cmc
bound
ljmp
cli
jecxz
mov
sarl
test
sub
hlt
fwait
stos
cmp
fs
mov
pusha
push
insb
xchg
jnp
sub
push
adc
jno
pop
cs
jb
dec
dec
lods
shll
xchg
push
xchg
mov
clc
sbb
inc
and
outsl
sub
cmpsl
pop
fs
add
pop
bound
xchg
xchg
mov
ret
enter
das
stc
push
sbb
or
mov
insb
adc
add
adc
lcall
jnp
das
mov
sub
mov
cmp
and
shll
ljmp
jnp
inc
out
mov
out
sbb
ds
dec
jg
pop
stos
scas
xor
fiaddl
bound
mov
dec
stos
cs
and
push
in
das
insb
sarl
lret
mov
cmp
mov
lret
dec
rorb
movsb
imul
cld
xor
jae
loope
je
and
mov
scas
xchg
mov
jmp
cmp
push
sub
mov
arpl
jmp
jb
dec
dec
pusha
shr
push
fidivrl
push
cmc
push
jnp
ljmp
xchg
fisubl
outsl
outsb
sub
arpl
stos
adcb
imul
jo
insb
stos
jbe
insb
push
lcall
repz
aas
mov
inc
ljmp
clc
inc
nop
xchg
outsb
dec
outsl
sbb
dec
mov
cmpsb
mov
and
test
mov
mov
push
cmp
jo
fcmovu
pop
fs
adc
shrb
adc
xor
in
ljmp
sub
repnz
dec
jg
mov
push
cld
cli
push
mov
mov
in
inc
push
in
lret
cli
fxtract
pushf
push
mov
bound
lahf
mov
pop
lret
ret
cmc
pushf
and
xchg
add
sub
push
inc
test
push
xchg
add
xor
loopne
dec
push
add
pop
inc
push
cmp
cs
add
inc
cs
rcrl
xor
mov
xor
sub
dec
jl
mov
add
push
sub
lods
jbe
fstpl
mov
xchg
mov
lret
insl
popl
inc
push
inc
mov
insl
enter
sub
mov
shll
mov
nop
mov
filds
stos
xchg
push
push
jmp
test
or
dec
sbb
outsb
addr16
bound
push
stos
add
insb
ret
fwait
mov
stos
pop
ffreep
dec
bound
out
repnz
scas
cli
pop
adc
jl
icebp
lea
xchg
popf
push
jp
je
ret
dec
dec
inc
out
imul
mov
dec
cmc
pop
push
mov
jne
call
fsubs
out
xchg
mov
push
lock
les
ja
sub
sti
jecxz
inc
jb
xor
jecxz
stos
pop
cli
push
lock
mov
dec
loope
mov
subl
in
inc
jge
inc
xor
int
push
stos
add
or
insb
jne
lock
in
sub
mov
sbb
mov
mov
lret
shl
out
xchg
rolb
ds
nop
out
cmc
xor
imul
pop
aas
iret
fcomip
out
out
jmp
in
fadds
idiv
sub
bound
outsl
addl
leave
push
sti
jnp
pusha
and
xchg
andb
sub
mov
lea
cwtl
add
jle
or
jmp
inc
inc
and
jbe
bound
adc
insb
decl
dec
sbb
jmp
mov
mov
jge
out
adc
jecxz
jmp
push
daa
aam
repnz
sub
inc
dec
gs
cmpsb
jns
mov
in
and
xchg
lock
jge
jmp
out
cltd
pop
repnz
push
adc
dec
mov
lret
cli
je
mov
jns
jmp
mov
je
test
cltd
outsl
lds
loopne
stos
jnp
mov
mov
sub
sub
repz
shlb
sarb
and
lahf
push
cs
fisubl
cmp
dec
dec
jno
hlt
rcl
leave
adc
insb
out
aaa
ds
push
loop
repz
xchg
jecxz
ss
mov
fidivrl
fstl
sbb
cmp
js
sub
fdivl
lods
inc
dec
xchg
lods
sub
adc
push
mov
scas
mov
psllq
mov
dec
loop
cmp
push
push
subl
jle
cmp
mov
fdivs
lock
es
int3
cmp
xor
lret
sbb
int3
push
mov
push
in
push
test
loop
inc
leave
add
inc
ljmp
sti
data16
dec
mov
movsb
mov
fimuls
or
dec
mov
xchg
mov
mov
jg
and
jae
xor
mov
gs
sbb
stos
lahf
pop
cmpsb
mov
dec
push
addr16
out
inc
mov
outsl
jmp
inc
loopne
mov
xor
js
inc
lret
ret
mov
lock
in
pushf
xchg
dec
cmpsl
imul
fdivrs
mov
in
sbb
frstor
outsb
inc
sbb
jno
popf
enter
pop
sub
arpl
xchg
lds
xor
shl
in
in
shll
sub
jle
ret
cmp
adc
cmpsb
and
xchg
and
mov
int
adc
add
call
inc
xchg
data16
enter
cmp
shl
scas
cmpsl
inc
les
add
dec
repz
inc
mov
pop
insb
xchg
dec
sub
cli
cld
dec
cltd
push
jg
fs
or
mov
stos
pop
es
inc
ret
loop
hlt
imul
or
push
sbb
jmp
mov
sti
mov
mov
movsb
scas
popa
jb
xor
push
xorl
das
mov
inc
and
cli
insb
xchg
outsl
jo
add
pusha
scas
js
lcall
into
and
loop
divb
sub
cmp
add
ljmp
xchg
xor
sbb
sbb
sti
call
popa
mov
xchg
adc
aam
sar
push
dec
pop
inc
xor
xor
in
and
outsl
mov
aaa
pop
das
sbb
cmp
inc
roll
adc
pop
xor
dec
mov
mov
rcrb
mov
je
sbb
lret
pop
sbb
icebp
andl
cmp
jae
into
sbb
mov
bound
jmp
cmc
sub
fistl
xor
insl
cld
xor
pop
sub
jae
enter
adc
pop
fxch
imul
xchg
sbb
cmp
xchg
mov
dec
bound
dec
jg
push
push
fisttpl
dec
adc
push
inc
cmp
stc
pop
sub
test
flds
loop
and
inc
insl
xchg
cli
mov
ds
or
daa
imul
cmp
inc
sub
mov
push
mov
fdivs
pop
adc
add
orb
scas
push
xchg
cs
js
insl
sahf
popf
sub
push
outsl
inc
sbb
pop
lds
into
leave
xchg
dec
jle
adc
xchg
ficomps
mov
xchg
call
int3
adc
mov
or
call
mov
adc
sbb
jnp
adc
sbb
xor
jb
out
dec
in
mov
sub
xchg
lods
add
aad
lods
sbb
pop
pop
fnstcw
or
in
push
loop
rcrb
aaa
imul
repnz
fwait
sub
mov
and
xor
xor
xchg
dec
repnz
cmp
out
lock
inc
push
inc
sbb
cli
es
cmp
pop
push
imul
pusha
or
out
jnp
dec
cs
les
cmp
test
sub
jmp
sbb
nop
test
xor
sbb
mov
and
or
or
imul
xchg
scas
test
mov
cltd
mov
push
inc
cmp
insb
in
outsb
mov
gs
xchg
out
daa
bswap
xor
cli
mov
aaa
sub
pushf
orl
sbbl
and
pushf
subl
cmp
cmpb
ljmp
mov
cmpsb
pop
fmull
add
push
jo
ljmp
xchg
ds
js
jle
aas
push
fimuls
dec
repz
jg,pn
nop
mov
xchg
pop
stos
or
ret
std
nop
js
imul
iret
scas
out
inc
mov
pop
cmp
inc
jnp
testl
jns
add
xor
xchg
inc
loopne
jb
fcmovb
inc
ror
inc
arpl
insb
mov
mov
push
dec
jns
loopne
and
aas
call
and
cltd
mov
adc
jl
sub
cli
sub
mov
movsl
jl
inc
xor
je
fadds
or
test
sub
adc
mov
sub
pop
out
push
fsubrl
lods
fwait
xchg
and
ds
push
and
imul
push
lds
xchg
sarb
push
dec
jp
inc
fdivrs
mov
push
hlt
mov
mov
fldt
add
add
adc
pushf
inc
out
pop
sub
inc
adc
adc
enter
fsub
std
cltd
or
jns
xor
lods
sarb
fs
stos
je
sub
in
push
mov
cld
aas
push
bound
jnp
cmpsl
jl
adc
lea
inc
leave
xchg
sti
and
hlt
lea
push
inc
push
repnz
xchg
adcl
mov
mov
mov
sbbl
pop
push
jne
fs
sahf
or
lock
inc
jbe
add
pop
xchg
xor
aad
or
mov
test
fstl
pop
dec
inc
jp
ja
mov
fisubl
cmp
repnz
ljmp
sahf
mov
sub
or
sbb
adc
ljmp
stos
dec
push
addb
rolb
mov
cmc
mov
push
sbb
cmp
sub
sbb
ljmp
fisubrs
xchg
inc
or
cwtl
ja
std
rcrl
jns
testl
sub
shlb
lret
lock
xlat
lahf
sub
stos
imull
fmull
pop
test
scas
adc
jmp
xor
data16
xor
dec
push
je
push
lock
inc
push
mov
and
mov
jmp
ljmp
fisttps
jno
fisubrl
mov
cs
scas
jmp
mov
es
std
or
sbb
and
xor
leave
xor
adc
das
lret
jp
jmp
outsb
jo
pop
fadd
cs
mov
inc
add
mov
std
add
loopne
jo
sub
fs
daa
jo
jns
add
add
jg
pop
mov
popf
pop
sbb
add
mov
aaa
in
mov
mov
sub
pop
xor
mov
icebp
mov
ficoms
cmp
mov
int3
adcb
sbb
add
push
and
cmp
or
dec
sub
push
orb
in
insl
mov
cld
jl
push
sub
arpl
ljmp
cwtl
loopne
pusha
sub
pusha
addr16
xchg
jno
xor
adc
outsl
jg
and
push
sbb
and
pop
idivl
pop
fisubl
sbb
pop
mov
sbb
sbb
push
ret
dec
scas
mov
mov
std
and
lcall
stos
aaa
or
je
adc
rcll
jp
cld
insb
test
xchg
aad
sub
fsubp
mov
lea
mov
dec
sbb
pop
jo
jne
fstpt
repz
add
dec
stos
les
cmp
ficompl
int3
outsb
cmp
outsb
lds
mov
pop
pop
dec
mov
push
sbb
mov
cltd
out
or
xor
inc
ja
jmp
dec
inc
ss
stos
push
cmp
mov
jmp
sbb
mov
mov
loopne
je
aaa
xchg
lcall
popa
dec
aad
cli
pop
shll
dec
out
add
mov
ljmp
xchg
fisttps
pusha
out
andl
mov
ret
add
push
insb
xchg
out
int3
popf
aad
pusha
dec
push
imul
jo
xchg
sbb
outsb
ja
xchg
mov
movsb
sbb
add
sub
mov
pop
je
mov
pop
out
add
jno
sbb
mov
push
cli
jp
lret
fwait
cld
repnz
sub
fsubrp
mov
inc
daa
push
negl
mov
jno
xchg
jb
and
stos
ss
inc
loopne
cmpsb
adc
dec
cli
loop
cltd
cmpsb
scas
into
popf
pop
xchg
imulb
int3
xor
sub
imul
xchg
cltd
push
inc
sbbb
je
jae
dec
stc
and
mov
lods
inc
push
into
mov
push
ret
push
add
repz
sbb
int
ja
test
jo
sbb
inc
imul
cmpsl
mov
icebp
xor
fstps
push
cmpsb
scas
cmp
ds
cmpsb
andl
add
xchg
xor
and
adc
int
push
shrb
pushf
xor
fidivl
repz
aaa
cmpsb
clc
jno
xor
jne
repnz
sub
scas
or
loopne
and
mov
adc
shlb
out
sti
dec
or
loopne
sbb
sbb
subl
xchg
jbe
cmpsb
cmp
adc
pop
dec
jle
add
call
push
push
dec
jb
xchg
mov
adc
push
cmp
jae
stos
push
aaa
mov
pop
and
pop
add
push
pop
movsb
inc
cs
mov
push
or
mov
lret
mov
or
dec
dec
mov
cmp
mov
mov
mov
or
stos
ret
mov
adc
cmp
subb
fs
cld
or
rolb
cmp
ds
pusha
stos
and
jns
iret
les
mov
ret
inc
pop
mov
lds
loope
jbe
aas
pop
outsb
stos
cs
jge
scas
xchg
stos
push
pop
stos
out
adc
addl
or
stos
mov
inc
mov
decb
int
mov
out
jne
push
xor
mov
xchg
test
popf
xlat
mov
lds
je
pop
xchg
and
data16
cmp
insb
loop
imul
push
ljmp
xor
pop
sbb
xchg
int3
lock
std
es
mov
test
push
push
dec
imulb
add
cmp
cmpl
lock
xchg
push
adc
ds
pusha
in
jb
and
shr
loope
shll
jg
es
aad
pop
into
mov
mov
jmp
sti
jle
adc
in
popa
aaa
and
sbb
mov
mov
sbb
jbe
dec
push
mov
sbb
lcall
jle
cltd
imul
shrb
pop
scas
jg
push
dec
aam
enter
outsb
dec
pop
mov
pop
cmp
pop
lret
or
mov
lods
jge
sub
cli
mov
ret
and
inc
sbb
fadd
jns
adc
popa
fcmovb
xlat
jns
into
dec
add
xchg
stc
sbb
lds
cmp
add
xor
enter
mov
scas
push
jmp
cld
push
xor
pop
fsubl
fs
pop
ret
xor
xchg
push
jae
and
jle
mov
mov
xor
call
fimull
jmp
jecxz
sbb
daa
iret
inc
push
outsl
adc
jne
xchg
jo
pop
adc
xchg
and
mov
call
lea
fidivrs
xchg
stos
push
std
xor
sbb
jmp
inc
sbb
rcl
aaa
dec
mov
aaa
inc
dec
inc
out
cli
adc
out
test
pop
adc
dec
testl
stos
sub
add
sub
gs
in
dec
xor
cmp
xchg
lcall
aam
or
jmp
push
push
pop
push
test
adc
push
adc
sbb
addl
mov
cmp
mov
aad
jbe
jae
insb
testl
clc
pop
ret
cmpsl
imul
push
dec
cmp
outsl
jbe
insb
cmpsb
ror
mov
jo
out
push
ja
sub
xchg
out
push
mov
clc
jns
ljmp
mov
int3
xchg
push
leave
push
mov
xor
stos
push
xchg
mov
lock
ljmp
xchg
mov
sub
mov
jp
cli
cmc
pop
sub
sti
mov
push
lock
scas
outsl
out
xor
jns
lock
fsubrl
test
sbb
xchg
xor
lret
xor
mov
sub
jae
push
mov
push
mov
mov
sti
dec
lret
xor
mov
sbb
daa
inc
clc
repnz
inc
or
loope
mov
sub
fdiv
cmpl
dec
adc
lret
jecxz
lds
mov
dec
bound
sbb
rolb
loopne
out
std
jle
inc
cmp
in
rorb
add
mov
lea
sub
mov
pusha
scas
inc
inc
inc
lods
imul
adc
test
test
test
ljmp
dec
je
pop
ss
xchg
xchg
pop
es
popa
inc
in
jmp
aas
insb
frstor
inc
push
das
push
ret
cld
out
adc
and
dec
xor
orb
add
cmp
push
aad
dec
dec
pop
jae
repnz
dec
shrl
pop
xchg
xchg
incb
dec
call
pop
imul
pop
mov
jbe
xchg
mov
push
cmp
lds
int3
jp
mov
jl
es
pop
inc
lret
in
jecxz
adc
jge
inc
pop
adc
inc
inc
stos
dec
rorb
mov
ret
scas
add
leave
push
inc
lret
xchg
test
cmp
add
and
mov
and
mov
cli
xor
test
add
lock
sub
add
mov
pop
add
imul
ret
stos
xchg
inc
sti
sub
xchg
imul
stos
xlat
sarb
dec
jo
jecxz
mov
das
push
popf
inc
jne
lea
scas
jmp
movsb
jg
jo
dec
rcr
ret
mov
inc
push
mov
adc
aaa
in
repz
cld
push
inc
into
mov
stc
outsb
inc
jns
outsb
jo
shlb
ljmp
dec
or
daa
lods
xor
fldt
mov
jno
push
pop
and
cwtl
mov
jno
daa
pop
sbb
test
mov
jp
cmc
pop
push
and
and
add
pop
adc
test
dec
nop
pop
cmp
cwtl
push
jno
hlt
xor
mov
out
mov
icebp
popf
std
shr
scas
mov
aaa
mov
cmp
push
sbb
inc
jns,pt
hlt
jmp
test
and
leave
pushf
in
or
cwtl
inc
les
cli
pop
lods
inc
fimull
insb
addr16
loop
lock
pusha
clc
sbb
daa
outsb
jbe
ds
loop
repnz
pusha
fisubrl
mov
jge
push
mov
mov
movsl
je
insb
imul
pop
add
cwtl
hlt
mov
ret
fidivl
pusha
mov
jbe
mov
cmovo
rcr
shlb
in
lock
mov
and
out
cmp
mov
scas
inc
loopne
jmp
jmp
into
mov
mov
jns
push
xchg
and
notb
fwait
pop
mov
mov
push
adc
inc
mov
jge
js
sub
add
mov
ret
mulb
or
or
es
xlat
add
push
jns
add
in
sub
xor
aam
lea
leave
mov
scas
xchg
xchg
ds
ljmp
aam
sbb
jg
arpl
jg
jne
xchg
xchg
cmp
gs
sub
push
js
pop
xchg
adc
push
add
jnp
mov
lret
jnp
jg
mov
mov
mov
fdiv
das
das
outsl
push
add
mov
adc
sbb
mov
cmove
test
popa
cli
scas
call
sub
stos
xchg
inc
dec
mov
pusha
lods
and
ret
mov
mov
push
mov
push
cmp
out
ds
xchg
and
daa
js
inc
fbstp
loopne
fisubl
cli
imul
pop
sub
and
mov
jmp
dec
pop
pop
icebp
data16
jmp
stos
dec
add
fcomi
ja
jno
pop
xchg
loopne
jns
stos
inc
push
jmp
sbb
test
xadd
jne
aas
jo
jne
je
stos
fcompl
scas
jecxz
push
pop
imul
orb
lret
mov
jo
adc
dec
dec
pop
lods
sbb
jle
xor
fs
in
movl
pop
shll
pop
jle
push
lods
data16
scas
aas
or
sub
mov
push
xchg
rol
push
fistl
orb
pop
or
call
sub
xor
push
out
adc
push
jne
xchg
ret
mov
repnz
pop
lcall
into
inc
xor
dec
std
lcall
jne
dec
cltd
scas
roll
sub
xchg
jle
insb
imull
add
push
mov
daa
add
jmp
sbb
divb
movsl
cli
xchg
or
stos
inc
in
cli
ja
ljmp
cmp
push
pop
push
aas
sahf
scas
mov
je
mov
jl
sbb
ss
mul
pop
pop
dec
pop
xchg
pop
and
pop
loop
add
scas
std
dec
addr16
sbb
xchg
daa
lds
xlat
decb
cmc
xchg
cmp
lods
or
jmp
xor
push
jb
popa
or
mov
xor
ds
dec
ficomps
add
adc
xor
sbb
incl
out
mov
ficoml
mov
mulb
sbb
push
cmpsb
cmp
or
push
stos
pop
push
push
popf
scas
jbe
sarl
jle
pop
mov
mov
scas
adc
inc
and
addr16
cwtl
outsl
dec
test
jmp
pop
push
mov
out
mov
out
bound
xlat
cli
nop
or
sbb
add
mov
push
or
cmc
add
inc
cmp
jp
sbb
shrb
sub
jo
add
or
scas
jbe
xchg
jg
xor
insl
cmp
cmp
insb
xchg
jg
dec
xor
or
popf
cmp
lea
xor
aaa
std
fsubrl
ds
aaa
les
xchg
mov
xor
lock
dec
fs
ds
test
std
pop
imulb
int3
insb
push
cld
sub
stc
inc
mov
inc
bound
loopne
out
fimull
add
jle
xchg
es
int3
cmp
xor
jl
loopne
scas
xor
imul
movsb
xor
inc
jle
push
or
and
xchg
inc
adc
dec
sarb
movsl
xor
test
les
insb
loope
pop
sbb
ret
xchg
loopne
mov
fwait
push
fisubl
cmpsl
rorb
in
push
call
jae
data16
aad
mov
lret
xor
jo
test
rcrb
sbbb
mov
jne
xchg
jno
mov
sbb
xor
aam
xchg
push
dec
inc
xchg
cli
pop
push
fisubrs
jecxz
sub
lret
arpl
test
xchg
jae
dec
fmulp
push
push
fistpl
insb
dec
mov
xchg
add
out
int
addl
jge
cld
es
adc
push
jge
inc
jg
and
incl
pop
into
pop
dec
cmc
xchg
inc
cmp
push
jb
ficoml
sub
mov
mov
mov
push
inc
adc
movb
pop
and
lods
cwtl
in
xchg
push
push
lods
adc
fsub
pop
inc
jg
ret
cmc
out
xor
sub
pusha
xor
in
mov
lcall
dec
repnz
test
mov
bound
pop
jmp
lds
mov
mov
adc
ret
add
jp
jo
pop
push
pop
lds
out
out
das
lock
adc
push
loopne
sub
inc
dec
outsb
sbb
insl
icebp
daa
mov
mov
mov
xor
sbb
mov
scas
scas
leave
les
push
pop
insb
ror
xchg
imul
xor
bnd
mov
fisubl
scas
shlb
inc
mov
stos
cmp
int3
fsubp
loop
fwait
test
cli
dec
adc
xor
lea
mov
jp
stc
pushl
cltd
cmp
jp
mov
fcmovnbe
stos
out
inc
xor
mov
jge
popf
fsubr
xchg
push
jl
in
shll
mov
pop
push
cmp
inc
cmp
inc
insb
ds
daa
xor
push
pop
data16
inc
adc
xor
xchg
xor
neg
mov
jno
arpl
ret
outsb
cmpsb
and
pushl
mov
jmp
mov
lea
xchg
loopne
jnp,pt
add
pop
das
hlt
mov
xlat
movsl
jl
or
mov
test
mov
repz
push
push
insb
pop
leave
sub
pop
jge
fidivrs
icebp
fidivrl
daa
ss
fs
xor
insb
jge
bound
xchg
push
ja
shlb
push
mov
lds
adc
ljmp
inc
jnp
dec
mov
mov
fmull
shrl
inc
mov
mov
leave
cmp
xor
dec
jmp
dec
test
adc
mov
leave
outsb
or
or
or
loope
aaa
push
jne
stos
inc
xchg
or
scas
adc
mov
jns
in
mov
inc
es
and
pop
jmp
ret
mov
fcoml
add
test
stos
inc
outsb
cmpsb
scas
ret
mov
cmpb
mov
outsl
xchg
mov
xchg
loop
mov
stos
sub
jne
testb
out
push
xlat
ja
cmpsb
pop
xor
push
leave
daa
loopne
pop
clc
adc
scas
jl
dec
jns
jae
in
mov
mov
scas
inc
stos
cs
xchg
mov
fbstp
adc
xchg
cmp
outsl
hlt
xchg
jns
es
and
sub
or
pop
pop
mov
ds
sub
jle
or
sar
ret
mov
push
fbld
jae
dec
testl
bound
mov
rol
cmp
icebp
in
cmpsl
and
ja
pusha
push
mov
test
cmp
xor
sbb
xchg
lea
data16
jbe
sub
pop
mov
xchg
push
mov
add
and
push
inc
mov
mov
inc
call
mov
mov
ss
add
cmp
imul
scas
in
or
test
popf
adc
pop
daa
scas
pop
xchg
sbb
and
xchg
popa
sti
scas
and
xchg
add
ja
bound
mov
sbb
mov
push
scas
icebp
into
imul
out
add
sbb
lds
mov
jne
fwait
mov
lcall
aaa
call
jb
sub
aad
call
out
cli
xchg
inc
jb
movsl
frstor
popa
xchg
cmp
add
xor
mov
xchg
push
stos
mov
ljmp
xor
cltd
nop
sti
jg
jae
out
mov
jno
xor
push
push
mov
outsl
lods
mov
mov
outsb
inc
enter
mov
rol
into
nop
jmp
mov
cmpsb
mov
sbb
mov
mov
mov
inc
in
jnp
sti
call
jno
inc
push
add
loope
xor
or
cltd
shr
arpl
mov
xchg
mov
addl
jno
stos
adc
add
push
es
aas
sbb
push
das
fnstenv
add
cmp
negb
cmp
xchg
mov
pop
enterw
pop
inc
aaa
jno
in
ret
mov
aad
out
xchg
cltd
push
popf
and
cmp
cmp
adc
mov
popf
mov
in
jnp
push
push
xchg
mov
xchg
fnstsw
icebp
daa
cmp
mov
and
and
ret
jo
xchg
outsb
jo
in
scas
jge
leave
inc
jae
jo
daa
xor
ljmp
adc
inc
push
or
xor
pop
mov
cli
js
mov
lret
dec
stos
mov
lods
daa
xor
mov
cltd
bound
mov
adc
iret
aas
mov
cmp
jmp
clc
stc
lock
mov
mov
and
pop
and
insb
xorl
jmp
inc
in
imul
int3
loope
and
in
ss
stos
add
sbb
xchg
lds
push
mov
inc
test
mov
lock
int
cmp
cs
or
cmp
call
mov
xchg
sbb
add
xchg
jae
loopne
idiv
push
mov
notl
sbbl
or
sbb
rcrl
xor
int3
xor
or
daa
mov
xor
and
inc
fstps
mov
mov
mov
in
adc
inc
shl
xchg
xchg
inc
mov
jmp
xlat
mov
incl
out
aaa
mov
mov
mov
test
cmp
pop
dec
arpl
xchg
mov
pop
sub
in
insb
daa
div
adc
cmp
push
mov
cmp
push
sbb
bound
xchg
xor
mov
movsl
ffreep
bound
pop
mov
imul
pop
jno
pcmpgtw
jle
add
adc
hlt
repnz
out
pop
adc
scas
imul
jbe
dec
jmp
into
into
leave
pop
adc
imul
loopne
cmp
mov
aaa
inc
jnp
imul
or
stos
in
and
jno
mov
aas
insb
adcl
xor
xchg
inc
push
loop
sub
out
lret
mov
push
mov
call
pop
pop
stos
cmp
xchg
and
movl
addr16
or
xchg
pusha
mov
popa
push
push
scas
data16
popa
lods
nop
dec
add
cli
mov
inc
mov
push
cmp
mov
push
pop
mov
cwtl
daa
mov
daa
rclb
sub
pushf
sahf
pop
mov
jmp
cmp
mov
in
inc
xor
sbb
xor
addr16
push
arpl
jmp
movsb
cmp
lret
rolb
hlt
pop
inc
and
and
inc
arpl
push
out
mov
lahf
aaa
leave
aam
imul
dec
shll
mov
sub
out
push
jae
push
xorb
mov
out
push
add
dec
inc
pop
or
scas
jbe
enter
cmp
jo
cmp
movsb
dec
loop
add
je
jo
sub
add
lock
test
xchg
nop
add
adc
and
and
push
lea
jne
fmull
cmp
pop
mov
xchg
xchg
jns
xchg
and
pop
sub
sbb
hlt
int3
inc
cld
fmull
sbb
cs
pop
ss
add
pop
pop
mov
push
push
dec
lds
jns
inc
and
jns
dec
sahf
sub
lahf
mov
shrl
data16
cmp
mov
hlt
xor
out
imul
dec
pop
daa
imul
and
pop
and
test
into
stc
dec
shlb
cmp
sbb
enter
push
mov
fmull
push
pushl
sahf
cmp
jo
insb
pop
inc
mov
jnp
or
mov
cmp
call
sub
pop
hlt
enter
sbb
fidivrl
and
test
testb
je
loop
ss
int3
adc
mov
mov
cmpb
mov
cltd
push
pushl
dec
mov
into
daa
pop
pop
dec
push
lahf
jae
jnp
fildll
dec
sti
lcall
aad
repz
mov
into
inc
pop
scas
sbb
mov
fidivrl
clc
mov
inc
dec
cmpsb
cmp
pop
jecxz
je
dec
mov
fdiv
sti
dec
jb
push
push
gs
sbb
xor
aad
mov
push
jb
mov
test
scas
icebp
xlat
pop
scas
mov
xchg
inc
adc
nop
mov
stc
sbb
inc
popf
cmp
scas
or
loope
inc
jo
push
fmuls
lahf
sbb
xor
shlb
push
insl
mov
ds
test
cmp
mov
cltd
mov
mov
es
mov
mov
and
mov
sarb
test
daa
and
push
rolb
add
lahf
xchg
cmp
mov
ret
test
mov
loop
pop
lret
inc
in
clc
ret
addr16
insl
or
cvttps2pi
xchg
stos
adc
sti
jl
lea
add
stos
sub
ds
sbb
inc
adc
jno
rorb
mov
and
adc
sub
or
cld
pop
sub
inc
sub
jns
push
bound
mov
lds
mov
and
or
out
mov
mov
pop
ficompl
add
sbb
das
inc
and
sub
mov
xchg
inc
xchg
push
inc
inc
sub
mov
ret
mov
rorl
adc
enter
mov
dec
pop
repnz
inc
mov
les
fcomp
fdivr
pop
aas
lock
mov
das
mov
addr16
mov
mov
mov
das
adc
add
imul
cwtl
cmp
adc
lea
outsb
sysret
pop
xor
pusha
xorb
pop
pushf
loop
sbb
pop
sahf
movd
mov
hlt
pxor
out
into
movsb
cs
mov
xor
mov
pop
mov
xchg
cmp
and
sbb
jl
out
sbb
mov
xchg
insl
push
push
out
mov
jno
sub
inc
jb
jne
add
lods
fs
pop
repz
mov
addr16
cli
rcll
xor
pop
loopne
dec
adc
xor
inc
repz
inc
jmp
enter
out
xchg
push
fiadds
lds
dec
dec
imul
jecxz
jnp
outsl
das
jp
pop
bound
sub
jmp
jno
sbb
push
dec
fs
xor
jbe
arpl
lret
xor
mov
adc
addb
dec
xor
stos
imul
dec
dec
mov
lea
sub
cmp
int3
lods
aas
cmp
mov
pop
sbb
cmp
push
push
inc
addl
imul
push
stos
and
lahf
and
movsb
cmp
add
mov
sbb
inc
cmp
subl
loop
adc
adc
jle
ja
scas
xchg
sub
jg
sbb
mov
pop
imulb
mov
rolb
and
sub
push
aas
xor
sub
lcall
adc
inc
ret
jmp
or
inc
mov
cmp
mov
mov
mov
stc
mov
mov
fistl
mov
inc
cld
mov
lret
pop
cmp
inc
dec
push
lock
dec
test
jne
std
ret
cmp
aad
pop
xor
shll
stos
and
cmp
fs
gs
daa
mov
xchg
ret
stos
sub
or
ljmp
ss
pop
ror
jp
mov
xor
push
sbb
int3
push
out
fnstcw
icebp
and
jb
mov
mov
in
pop
cmc
test
mov
call
cmpsb
stos
sbb
dec
or
mov
mov
cltd
sbb
sbb
sub
test
push
cmp
sbb
inc
in
test
jne
or
aas
pop
sahf
outsl
cmp
and
dec
ret
jbe
in
sbb
jp
mov
jns
pop
mov
cltd
add
stos
lock
adc
adc
test
cmp
cmp
xchg
divb
fidivl
xchg
scas
fs
push
fisubrs
out
andl
xchg
sbb
cs
jb
push
pop
jne
sahf
add
xor
pop
idivb
and
push
jnp
xchg
in
test
xchg
or
inc
sub
out
mov
inc
pop
subb
inc
push
inc
and
repnz
enter
xchg
jae
sbb
jb
mov
fisttpl
cltd
cltd
inc
insl
ljmp
roll
xor
pop
dec
and
push
sbb
leave
loope
jb
insb
inc
je
sbb
pop
in
cmpsl
adc
or
adc
test
out
push
into
jno
cmp
mov
xchg
mov
xchg
xor
outsb
sub
dec
xor
jecxz
dec
jle
dec
ljmp
cmp
lret
out
cli
dec
jns
adc
mov
push
add
and
repnz
jmp
push
fs
aas
mov
out
mov
sbb
gs
cmp
dec
cmp
and
cs
arpl
and
mov
jno
ficoml
aaa
sbb
mov
mov
rclb
push
mov
add
xchg
cmp
mov
mov
je
pusha
orl
mov
fisubrl
sub
lods
adc
jnp
xchg
movsb
push
pop
cmpsl
pop
add
jmp
xchg
push
jno
popa
movsl
jp
out
stos
ret
psrlw
xchg
loopne
mov
sub
in
pop
jle
xchg
out
mov
fldcw
and
xor
xorb
scas
xchg
or
fldcw
inc
cmp
std
ficoml
sub
pop
stc
inc
xchg
popa
mov
dec
es
pushf
xor
std
flds
jb
jp
lret
jl
dec
mov
es
push
xor
xor
scas
sub
cmpsl
or
sub
or
inc
dec
pop
add
jle
xor
rol
dec
mov
cmpsl
repnz
aas
and
mov
sbbb
out
ds
hlt
pop
jnp
mov
push
lahf
and
push
mov
xor
adc
ljmp
out
repz
add
pop
mov
popf
pusha
cli
push
push
sbb
inc
jb
mov
jnp
mov
xor
aas
cmp
shlb
mov
cmp
xchg
mov
loopne
aad
jp
mov
jb
jae
xchg
push
push
mov
scas
out
sti
mov
int3
loope
and
cmp
jbe
imul
dec
aad
mov
push
jmp
xor
dec
push
test
xor
stos
lods
jmp
shll
das
jge
aas
mov
inc
xor
pushf
out
cwtl
test
dec
call
stos
push
leave
testl
mov
stos
in
les
nop
pop
add
jl
outsl
mov
push
into
sub
mov
cltd
les
aas
in
ret
inc
faddl
jne
jb
lock
pop
push
pop
jg
xchg
add
push
inc
repz
imul
jnp
xchg
dec
jo
inc
popa
mov
xor
or
adc
xchg
in
push
aam
inc
mov
cld
jno
push
adc
sub
ret
sub
or
out
xor
pop
pop
clc
mov
imul
repz
scas
cmp
cwtl
cld
inc
push
jl
mov
arpl
divb
unpcklps
mov
pop
popf
pop
pop
and
mov
cmp
popl
push
ss
std
sarl
push
mov
cmp
rolb
or
repnz
into
orl
shr
mov
pop
sbb
ljmp
std
ds
ret
int
jbe
xchg
stos
ret
arpl
daa
lods
or
cmp
fs
xchg
add
xchg
addr16
mov
pusha
ljmp
ret
lcall
push
xor
and
xchg
push
mov
xor
dec
rorb
cmp
jb
xchg
xchg
sahf
pcmpeqd
jl
js
or
mov
testb
pop
push
push
jb
dec
into
or
and
cli
stc
lds
sbb
pop
mov
mov
sub
rorl
out
xchg
xor
fdivrs
dec
gs
mov
sbb
jne
mov
mov
pop
es
loopne
add
or
cmp
cs
pop
add
andl
mov
pop
dec
je
jns
push
call
sub
into
pop
pop
xlat
popa
in
push
aaa
fsubrl
rcl
pop
repz
sbb
jb
or
pop
movsl
out
mov
pminsw
rclb
inc
in
push
xor
clc
push
mov
sub
mul
adc
cmp
sub
popa
ja
les
cli
cmp
cmp
fnstcw
xchg
sbb
test
cmp
mov
add
xchg
mov
int
mov
sub
outsb
bound
jns
adc
adc
mov
sti
lea
test
movsb
mov
cld
cmp
aad
lret
enter
ret
out
stos
fldl
ret
fsubl
mov
adc
das
sub
aas
sbb
fwait
pop
xor
aaa
stos
fisubl
mov
mov
sti
mov
jg
sbb
add
jnp
data16
xor
mov
mov
repz
js
xchg
movsl
adc
rclb
imul
sar
jl
and
pop
sbb
sub
aam
pop
gs
jno
mov
lret
push
bound
jne
callw
push
mov
mov
jb
xchg
push
or
mov
push
daa
int3
pushf
jecxz
out
jp
imul
cmp
or
cmpsb
nop
inc
enter
mov
cli
cmp
arpl
sub
pop
jle
and
popa
and
cmp
cs
dec
sbb
insb
pop
frstor
int3
rcrl
ja
sub
out
punpckhdq
in
push
dec
add
int
cmp
mov
imul
mov
push
rcrw
lock
dec
push
add
mov
mov
sbb
sub
xor
nop
loopne
adc
icebp
scas
pop
mov
cli
xchg
jnp
pop
inc
jbe
imul
adc
scas
push
lcall
inc
arpl
dec
sub
jns
es
pop
aaa
xchg
jnp
fidivrl
or
adc
xor
outsb
fcompl
fwait
pop
adc
mov
mov
das
cld
daa
cmpsl
mov
fs
sub
inc
pop
mov
or
lahf
push
add
daa
mov
in
cmpsb
test
pop
ljmp
fistpl
cltd
and
mov
inc
js
xchg
mov
or
push
gs
or
push
sub
arpl
ret
and
xchg
aas
push
cmp
inc
pusha
in
or
sub
aam
call
imul
xor
jmp
jae
lea
fstl
inc
mov
testb
pop
sti
mov
jge
sub
fistpl
ret
sbb
fmul
sub
push
push
push
in
cmp
jg
xchg
test
and
jl
cmp
cmp
fs
test
test
sub
aad
inc
cld
xlat
and
and
xchg
mov
adc
out
mov
fucomip
or
jne
jp
pop
nop
pop
ss
test
pushf
insl
lcall
aaa
cmp
pop
xchg
sbb
pop
mov
lcall
pop
out
insl
sub
mov
mov
pusha
fisubl
out
dec
or
insl
and
shl
adc
outsb
mov
inc
mov
test
mov
dec
jmp
sahf
dec
cmp
shll
jne
shl
pop
loopne
jo
cmp
cmp
cmp
les
aaa
repz
cmp
adc
jge
mov
xchg
test
addb
out
push
fwait
int
xchg
mov
sbb
adc
add
call
loop
lea
stc
testb
add
or
jnp
gs
dec
sbb
lret
inc
sti
cmpl
cmp
xor
sub
sub
ljmp
es
and
shl
adc
stc
inc
lods
loope
and
sbb
fcoms
or
inc
aaa
lcall
mov
or
rorb
xchg
les
testl
mov
sbb
xor
in
es
inc
pop
jmp
mov
mov
mov
mov
jo
mov
clc
fwait
mov
roll
cs
or
arpl
and
dec
rcrl
xchg
add
pop
scas
add
mov
mov
popa
xchg
sub
push
adc
mov
loope
ret
push
shl
out
jg
sbb
push
sbb
mov
sub
fisubl
lcall
and
jb
aas
cwtl
pop
dec
mov
inc
adc
jecxz
jecxz
mov
daa
jb
jp
inc
ret
lret
jg
xchg
popl
add
xor
addr16
fisubs
jae
cli
cmp
and
adc
jmp
sub
mov
pop
dec
lds
lock
insb
xchg
cmp
js
or
xchg
cmp
fdivrs
cli
shl
sbb
jg
push
mov
out
dec
in
pop
and
stc
imul
add
ja
mov
inc
subl
into
sarl
pop
imul
jb
pusha
stos
dec
mov
add
sbb
icebp
inc
fwait
xor
xchg
clc
inc
sahf
stc
add
stos
loop
sahf
xor
add
stos
fstl
cli
aaa
sbb
loop
pop
jmp
pop
mov
dec
shlb
xchg
ljmp
bound
ret
push
sbb
mov
dec
sahf
and
std
mov
cmp
es
mov
xchg
or
aas
mov
xor
sub
fidivl
push
push
data16
add
sahf
maxps
xchg
inc
sarl
mov
pop
and
shl
imul
lcall
and
mov
push
mov
and
orb
pop
sbb
jns
jo
inc
jg
dec
mov
mov
sbb
push
pop
cwtl
adc
ret
or
out
adc
and
rolb
jecxz
pop
nop
inc
fdivrp
push
mov
sbb
fsubr
dec
inc
shrb
sbb
loope
incb
in
ljmp
xchg
scas
icebp
inc
xor
outsl
pushf
loop
enter
inc
mov
mov
mov
push
xchg
ret
or
xchg
or
mov
mov
and
fst
les
xorl
adc
std
push
es
in
mov
push
subb
ljmp
jge
jae
ds
pop
add
outsl
pop
sub
icebp
lcall
sub
or
cwtl
outsl
push
cmpsl
div
shlb
dec
stos
ret
mov
dec
inc
int
and
push
stos
jb
inc
jae
xor
add
mov
pushf
mov
xor
xlat
mov
adc
cmp
and
adc
push
test
daa
scas
rcrb
adc
popf
xor
mov
dec
stos
movsl
sbbl
add
imul
inc
fsubs
jecxz
mov
cmpsb
mov
mov
sbb
push
xchg
inc
xor
push
sbbb
hlt
mov
pop
cmp
inc
loope
xchg
fmuls
push
push
sarb
cld
pop
leave
cli
pop
out
jo
mov
enter
xchg
push
arpl
xchg
stos
push
fdivrl
fs
jb
aas
adc
test
outsb
and
aam
stc
dec
pop
pop
and
fxch
xchg
jb
mov
loop
hlt
mov
and
push
rol
and
scas
leave
fs
pop
sbb
mov
mov
push
pop
push
pop
sbb
in
dec
and
mov
loopne
cmp
out
jmp
pusha
jle
add
mov
mov
mov
inc
insb
push
clc
aas
sub
inc
negl
xor
mov
stos
push
mov
sub
ss
pushf
add
inc
lds
mov
or
adc
dec
mov
bound
movsb
mov
out
out
dec
adc
std
dec
inc
fsub
das
jb
insl
mov
sbb
stc
xchg
jle
inc
jb
push
loopne
mov
ss
adc
jb
and
pop
stos
and
lret
pop
shl
pop
aam
cmp
xor
lea
or
dec
inc
jl
mov
adc
call
jge
push
ds
jg
cmpsl
fisttpll
mov
jecxz
pop
jae
movsb
inc
cltd
cmpsb
inc
and
popa
add
arpl
push
push
inc
cltd
and
sub
out
out
mov
cmp
loop
jg
pop
xchg
mov
shrb
push
out
imulb
aad
ret
adc
cs
and
outsb
movsl
jb
call
ljmp
dec
cmpsb
pop
out
pusha
mov
ret
repz
mov
cmp
sbb
fstps
jae
lock
ja
bound
sub
push
adc
mov
sbb
dec
mov
jae
xchg
pop
loop
xchg
sti
fldt
inc
add
and
je
in
jl
aam
sub
or
mov
repz
add
xchg
jnp
int3
push
nop
outsl
mov
fs
cmp
pusha
xor
shr
popa
xchg
inc
mov
jnp
sub
test
sbb
inc
sub
lahf
mov
sti
cmp
xlat
ret
mov
enter
stos
arpl
leave
adc
das
ficompl
aaa
cli
sbb
lcall
and
jae
ficoml
xor
mov
sbb
mov
addl
mov
aad
jno
xor
repz
sbb
lds
xor
clc
js
inc
cli
stos
mov
lcall
adc
lods
out
mov
cmpsl
stos
and
inc
dec
push
imul
mov
cltd
repnz
dec
jecxz
xor
mov
adc
xor
add
in
dec
cltd
pop
outsb
and
inc
in
data16
cli
jmp
scas
dec
fimull
jne
jl
out
xor
xchg
xor
ja
lock
push
dec
jo
fists
sahf
mov
arpl
cmp
leave
icebp
push
pop
cmp
sub
xchg
sbb
sub
insb
pop
push
xchg
cmpsb
int
adc
imul
mov
sub
xchg
and
mov
fldt
lods
cmp
cmpb
mov
xor
xor
aad
pop
pushf
mov
ret
mov
mov
lock
out
aaa
sub
mov
xchg
hlt
xor
push
test
pop
xchg
push
inc
nopl
add
ret
out
sbb
fsubrs
lea
sub
mov
in
mov
adc
repnz
out
in
cmp
dec
sbb
pop
sbb
fimuls
test
mov
xchg
sahf
push
pop
decb
mov
in
sub
jl
pop
push
inc
dec
outsl
sub
push
sbb
or
mov
and
mov
xchg
daa
loop
and
pushaw
fisubl
jmp
or
push
sub
pushf
loop
jmp
xchg
icebp
aaa
ds
sub
mov
lahf
dec
jb
mov
dec
loopne
push
xor
bound
add
push
ja
testb
shl
popf
dec
push
add
cltd
andb
stos
cli
dec
mov
push
pushf
int
aas
mov
scas
push
daa
bound
in
in
lret
das
inc
insl
insb
pop
fstl
add
das
adc
test
dec
repz
cmp
inc
nop
push
mov
inc
xor
dec
cltd
mov
dec
enter
xor
adc
and
xchg
lds
mov
sbb
scas
push
repz
enter
sub
sub
fldpi
punpckhbw
cmp
in
push
scas
lcall
push
xchg
inc
mov
outsb
xor
mov
cwtl
pop
in
das
subl
repz
push
aas
call
jnp
int
dec
outsl
pop
xchg
stc
lds
pop
hlt
test
bound
iret
repnz
ljmp
cmp
xchg
dec
dec
fstpt
pop
sub
jne
pop
dec
fidivrl
xlat
imul
scas
lods
dec
pop
or
aad
cmp
int
test
cmc
scas
sub
enter
ss
stos
fbstp
inc
cmp
jmp
xchg
ds
mov
stos
jae
mov
sub
leave
mov
out
insl
push
push
das
sub
pop
pop
push
in
pusha
test
out
inc
rcrb
shrl
mov
push
loop
and
ds
jo
ror
inc
nop
pop
outsl
mov
ficoms
mov
or
lock
lret
push
dec
cltd
leave
push
add
cmp
je
push
or
nop
jle
sbb
in
inc
fiaddl
mov
jbe
int3
lahf
jns
mov
xor
inc
or
sbb
mov
imul
shrb
pop
lds
outsl
xchg
add
pop
rcrl
jbe
jmp
cwtl
aad
lods
cmp
sbb
stos
mov
inc
sti
xchg
push
bound
pop
xlat
scas
jge
cmp
cli
je
adc
daa
mov
jge
cmpsl
jecxz
outsb
aaa
call
adc
sbb
pusha
mov
imul
ljmp
mov
sbb
sbb
push
pusha
inc
adc
sbb
sbb
imul
dec
jp
incb
xchg
mov
movsb
pop
mov
rcrl
push
xchg
add
imul
jo
pushf
js
push
mov
jmp
in
fcompl
cs
xor
jns
jo
sbb
add
ja
push
pop
cmpsl
cltd
sarb
sbbb
cs
mov
mov
je
pop
imul
stos
stos
imul
sbb
xchg
and
mov
add
xchg
cmp
mov
ficoml
cmpsl
inc
ret
cmp
fucom
mov
lcall
jo
jp
push
in
aad
jp
push
push
arpl
pop
cmp
scas
orl
fdivrl
pop
sbb
in
push
or
es
push
test
aas
clc
and
sti
sub
inc
mov
mov
ret
and
popa
jge
xor
int3
sub
jne
mov
push
cmp
add
sbb
roll
dec
pop
xchg
sarb
jp
ds
mov
and
pop
inc
aaa
repz
fwait
jp
bound
xor
ret
inc
repz
imul
sbb
mov
lods
arpl
je
cmc
pushf
clc
mov
in
popf
adc
lcall
mov
xchg
fwait
pop
xchg
repz
cmp
cltd
scas
cld
int
aad
sti
pop
mov
mov
lea
mov
push
dec
stc
int
xchg
adc
pop
sbb
mov
sbb
mov
fnstcw
xchg
dec
aad
jecxz
push
jae
xchg
mov
movsl
push
mov
out
sbb
lds
add
notl
cltd
in
push
movsb
loopne
ds
test
xchg
jns
lcall
push
shlb
mov
int3
sbb
pop
loopne
add
fisubl
movsl
hlt
push
push
mov
roll
out
jo
dec
mov
fistl
sahf
jle
push
xchg
jo
jnp
xor
das
mov
inc
roll
out
cmp
addb
xchg
mov
push
and
jae
ja
subl
stc
loop
push
pop
mov
mov
jbe
enter
adc
ss
xchg
inc
inc
pushf
insl
jbe
insb
push
rcll
mov
inc
xor
inc
xchg
addr16
inc
int3
cmp
add
push
mov
jp
mov
and
ds
push
je
sti
or
std
ss
jns
pop
pushf
cmp
mov
outsb
pop
sbb
gs
js
inc
mov
shlb
fidivrl
and
mov
out
inc
ss
dec
sub
pop
lcall
test
shlb
cltd
movb
inc
sub
js
xor
cli
in
pop
xchg
sub
adc
jecxz
mov
push
sti
or
ret
xchg
je
push
outsb
jbe
pusha
xorl
outsl
test
fidivrs
adc
aam
pop
sbb
mov
arpl
dec
lods
and
and
sarb
dec
test
xchg
das
mov
mov
push
sub
inc
daa
popa
mov
pusha
es
dec
pop
adc
pop
inc
sbb
leave
sub
cmp
sub
mov
and
sub
xchg
add
mov
xor
or
lods
sbb
jo
popa
ss
pushf
je
imul
push
xchg
movsl
push
sub
mov
bound
add
aaa
jae
scas
and
popa
andb
mov
inc
rclb
jge
dec
cmp
add
add
inc
xchg
xchg
stos
push
jno
push
or
pop
sarb
cmp
sub
aaa
or
in
xchg
fs
xchg
aas
add
aam
outsl
dec
std
ror
iret
popf
scas
xor
lret
adc
and
mov
ret
cmp
cmp
aam
and
test
lret
add
mov
cmp
pop
lcall
cwtl
cmpsb
nop
jo
and
cwtl
mov
stos
xchg
leave
or
aaa
inc
xchg
adc
cli
fidivs
bound
cmp
sub
notl
add
repz
lahf
cmp
fnstcw
cli
and
dec
mov
aaa
daa
dec
mov
inc
xor
push
les
sbb
stos
lcall
enter
pop
or
push
cmp
cltd
icebp
aas
lahf
cli
arpl
xchg
sbb
das
jno
fiaddl
and
std
or
mov
cmp
call
dec
addr16
mov
ss
jecxz
fisubrl
subl
sbbl
push
aas
pop
jp
out
mov
lock
jns
test
out
lahf
shrl
push
gs
inc
inc
loopne
jne
xchg
mov
and
fmull
xchg
mov
fisttpl
in
xor
mov
adc
inc
in
outsl
or
sbb
fwait
dec
adc
stos
imul
icebp
inc
aas
mov
inc
jp
lret
push
fcmovnu
shlb
sbb
mov
mov
ds
lds
mov
xlat
int
inc
nop
xchg
mov
shrl
out
xor
xchg
inc
cmp
ret
out
push
pop
out
outsl
mov
mov
test
fdivl
inc
push
add
repnz
push
inc
gs
and
data16
sahf
inc
lahf
mov
xorb
or
pop
sbb
jo
jae
stc
fmuls
dec
cmp
aam
and
jns
rolb
jmp
mov
mov
fwait
aad
sub
xorb
sbb
mov
outsb
lds
pop
fidivrl
daa
mov
dec
call
mov
out
xchg
sbb
out
sbb
xchg
inc
loope
rorb
jo
mov
xor
subl
mov
push
mov
cmpsb
ljmp
sub
dec
lcall
xor
in
sub
mov
mov
mov
push
hlt
pop
fldcw
outsb
fisttpl
push
cmp
pop
lret
cmp
fwait
dec
mov
push
push
push
test
cs
jle
inc
sbb
mov
or
les
xchg
add
test
loop
jecxz
fs
ror
lret
mov
jg
ja
xchg
and
mull
push
sbb
push
shrl
add
dec
pop
sub
mov
out
sahf
jg
stos
xor
and
inc
and
sbb
push
cltd
dec
fcomp
hlt
mov
xchg
xchg
and
sub
xor
ficomps
daa
pop
push
sub
dec
cltd
pushf
and
std
test
xchg
ftst
cmp
or
aas
mov
aaa
cmc
imul
leave
push
sub
mov
loop
pusha
ljmp
daa
pop
test
addl
and
fs
push
sti
push
cmp
xchg
fidivrl
inc
xchg
sub
or
cmpsb
and
fidivrl
xchg
lods
js
pop
je
pushf
cmp
cmp
pop
push
cs
movsb
ljmp
scas
inc
cmp
dec
xor
cmp
pop
mov
pushf
push
push
and
int
xchg
movsb
pop
push
sbb
or
xchg
es
xchg
shll
cmp
push
push
push
xchg
dec
xchg
dec
inc
sub
cs
stos
inc
and
fsub
or
mov
xor
clc
adc
sbb
and
sub
adc
push
sarl
dec
sub
jns
scas
fiaddl
fldenv
mov
pop
clc
stos
dec
dec
jns
xchg
jb
pop
xor
movsl
pushf
inc
sub
jp
cmc
aam
dec
ss
in
sub
clc
mov
mov
xor
xor
sub
xor
cmp
xchg
pop
and
scas
and
stos
repz
jae
xchg
inc
jbe
sbb
jp
mov
pop
mov
add
ror
and
push
dec
sbbb
mov
ds
sub
arpl
push
pop
or
out
mov
adc
in
movsl
int3
fidivs
rcl
imul
xchg
pop
out
adc
leave
loopne
je
jns
shrb
inc
call
and
mov
loop
cmp
lds
imul
mov
cmpsb
add
adc
pop
jl
popf
mov
lret
jge
or
dec
xor
js
jecxz
mov
ret
out
pop
jnp
push
jmp
and
xchg
mov
into
push
and
aad
pop
pop
aas
scas
and
push
rol
jmp
lcall
sub
sahf
dec
jbe
bound
dec
inc
xchg
es
pop
xchg
lahf
lods
arpl
xchg
and
dec
dec
cld
xchg
out
pop
inc
aaa
shll
jmp
test
fwait
cmp
aaa
scas
mov
shll
iret
add
cmp
popa
push
push
cmpl
xlat
sub
popf
or
insl
je
mov
hlt
fwait
aam
cmp
inc
arpl
lods
push
push
into
pushl
xchg
xchg
push
lahf
cmc
in
dec
inc
jecxz
adc
pop
cmp
inc
push
sbb
pop
stc
push
nop
xchg
pop
xchg
stc
daa
cmovl
push
orl
mov
mov
mov
sub
sub
stc
and
in
loop
cmpsb
xchg
rorl
into
sti
cmp
cs
jmp
cltd
insb
fwait
in
push
in
inc
and
add
or
push
inc
pcmpgtw
pop
inc
cmp
add
mov
adc
inc
mov
sbb
sbb
xchg
jno
int
fstpl
xchg
aaa
jle
xorl
outsl
js
icebp
lock
cmp
inc
sbb
mov
jl
sbb
dec
inc
rol
lods
not
push
lcall
mov
jmp
cpuid
rorl
stos
jmp
sub
xchg
call
inc
dec
mov
or
mov
sub
jae
or
test
or
inc
cmp
mov
imul
scas
add
std
mov
bound
push
out
jge
and
push
lret
pop
jne
xchg
fisubrl
mov
dec
xchg
gs
cmpb
lea
scas
ss
xchg
lret
and
sti
out
cmpsb
pusha
jle
pop
and
inc
cltd
rorl
sub
roll
outsb
add
xor
bound
mov
xchg
sub
daa
sub
add
and
xchg
mov
add
push
mov
or
jno
pop
test
jno
pop
stos
push
xchg
inc
push
pushf
sbb
std
and
cwtl
loopne
jg
xchg
add
sbb
lahf
insb
cmp
ds
xor
xor
sbb
push
or
xor
pop
push
adc
or
push
scas
aas
jb
jl
ret
mov
aaa
inc
les
dec
mov
add
ret
out
mov
pop
cmc
xchg
mov
adc
jp
daa
lret
jns
ss
sbb
ja
sub
xor
pop
int
inc
fnstenv
popf
in
js
mov
sub
pop
mov
shrb
adc
lcall
jecxz
mov
outsb
ljmp
mov
outsl
arpl
cli
scas
outsl
dec
aam
inc
xlat
pop
outsl
mov
cli
mov
and
xor
stc
test
mov
sbb
xor
leave
or
hlt
push
sbb
imul
dec
stos
cltd
inc
add
leave
dec
pop
mov
and
inc
rclb
loop
xchg
cltd
testl
cmp
decl
es
stc
mulb
std
xor
popa
ljmp
cmpsb
inc
leave
mov
mov
jno
jb
and
push
dec
mov
daa
add
cld
scas
xchg
and
enter
fcomps
push
lret
popl
outsl
lds
ss
aad
adc
daa
pop
loope
xor
sub
popa
in
inc
cld
popa
xor
std
cmpb
pop
test
xchg
dec
and
push
ss
out
jbe
sbb
lds
les
ljmp
test
int
adc
les
mov
xchg
inc
movsb
movsl
lock
jb
and
fstps
jp
inc
outsb
hlt
popl
es
cvttps2pi
adc
pop
sbb
mov
std
xlat
adc
ja
xchg
stc
push
scas
push
pop
dec
lds
jb
inc
pop
jle
testb
sub
jae
shrb
add
push
inc
dec
shll
adc
lahf
addr16
jb
dec
add
cli
repz
add
out
mov
push
pop
test
loope
mov
mov
inc
cld
aas
scas
xchg
fwait
int3
cld
divb
movsb
adc
add
push
pop
mov
jmp
push
xchg
in
dec
mov
sub
in
sub
inc
inc
cli
jge
ret
and
jno
nop
push
cli
dec
xchg
adc
sub
pop
dec
jns
in
sub
leave
stc
lcall
ret
cmp
jmp
xchg
orb
pop
rcrb
loope
adc
sbb
idivb
inc
mov
mov
jl
fdivs
pop
mov
mov
cmpsb
ficoms
pusha
xor
insl
shrl
stos
orb
mov
or
xacquire
ljmp
mov
lods
pop
xor
inc
ds
add
jg
jle
loopne
jl
jp
scas
lds
sbb
cmpsl
push
push
fwait
sar
mov
fisubrl
and
dec
gs
in
inc
lret
cmp
push
je
sbb
push
leave
ret
pop
push
jno
cltd
push
push
mov
sub
pusha
sub
out
inc
leave
push
xchg
stc
inc
test
out
cli
int3
jle
leave
outsb
sbb
in
ret
sub
xor
rcll
push
loop
mov
lds
mov
aaa
pusha
cmc
in
add
jns
fs
cmp
loop
push
cmpsb
and
mov
cmp
add
jbe
arpl
jnp
mov
bound
mov
es
mov
sbb
xor
mov
incb
dec
shlb
xor
push
in
aaa
dec
cmp
push
add
icebp
scas
das
aas
fs
mov
mov
pop
add
sbb
jge
push
stc
mov
mov
jecxz
xchg
sub
xchg
cli
mov
xor
call
call
sbb
mov
pop
daa
xchg
adc
jae
sub
mov
sti
inc
sub
scas
push
inc
dec
nop
lahf
push
push
mov
and
inc
fnsave
add
fisttpll
pop
inc
or
fimull
popa
mov
push
pop
jo
cmp
or
jmp
cs
pop
xor
das
test
mov
pop
mov
ds
pushf
lods
cmp
shll
lahf
pop
daa
pop
jnp
into
btc
dec
popa
lods
jg
mov
pop
push
sbb
xchg
jle
push
jb
pop
inc
pusha
mov
xchg
jg
mov
push
xchg
mov
aaa
pop
push
fnstenv
mov
rcrb
dec
cmc
dec
jns
jmp
fistpl
lds
xlat
inc
sbb
dec
mov
add
xor
jmp
repnz
imul
cmp
notl
xor
pop
test
sub
sub
imul
cltd
bound
pop
mov
mov
imull
push
pop
into
mov
dec
cmp
loope
push
cld
mov
dec
pop
out
aaa
sub
adc
jns
in
xchg
movsb
adc
lcall
pop
push
mov
xor
enter
mov
and
mov
mov
xchg
pop
xchg
push
cmp
sbbb
jecxz
pop
pop
rcl
gs
jmp
inc
lock
sbb
pop
inc
into
popa
lcall
mov
arpl
jg
sbb
xlat
push
xlat
cmp
loope
cmp
cli
mov
dec
inc
adc
popf
mov
or
mov
push
rcll
pop
dec
push
imul
jl
mov
push
in
insl
dec
mov
sbb
cmp
jmp
mov
ret
repz
lret
xor
outsb
pushf
aas
sub
sarb
add
inc
sahf
lret
mov
fcmovb
arpl
sahf
cmp
xor
push
fisubrl
rorb
dec
mov
cmp
mov
mov
imul
fwait
sub
out
rorb
mov
sbb
aas
or
shrl
xor
pop
popf
cmp
dec
adc
cmp
pusha
test
and
push
clc
sahf
push
push
lds
enter
mov
aaa
xchg
ret
cs
cmc
negb
inc
cmp
sbb
inc
xor
rcrb
repnz
outsb
ljmp
inc
sahf
mov
lods
and
scas
push
pop
inc
sub
orb
stos
fdivrl
push
sbbb
fsubrp
push
ljmp
or
and
aaa
cmpsl
inc
or
outsl
push
dec
js
xchg
jmp
adc
ljmp
mov
jae
cmp
cmp
dec
mulb
mov
rcrl
mov
add
jnp
mov
call
pop
mov
pop
dec
into
xor
mov
mov
cmpsl
and
inc
cli
mov
fnstsw
sub
or
gs
lret
ret
pop
cmc
sub
fdivrs
push
push
sub
and
sub
jo
lret
sbbb
stos
dec
call
mov
les
sbb
lret
cmpsb
add
inc
mov
cmp
fisubrs
scas
ljmp
and
mov
pushw
insb
fstpl
pusha
jle
enter
jp
je
xor
scas
sub
cld
mov
ficompl
inc
add
das
adcl
lock
imul
jne
lods
es
pop
mov
inc
enter
das
xchg
test
enter
es
test
idivb
leave
scas
popa
or
stos
or
dec
adc
imull
fxch
and
ljmp
cmp
outsb
data16
mov
scas
pushf
sbb
dec
je
mov
xor
sbb
mov
sub
xor
cmpsb
push
mov
aaa
mov
out
mov
inc
jae
dec
loopne
fidivrl
sbbb
repnz
adc
cmp
mov
mov
push
push
inc
imul
insb
mov
inc
xchg
insl
ds
or
add
int
cmp
mov
ja
mov
scas
std
pop
and
fdivrs
inc
aad
jp
popf
fisttpl
icebp
adc
dec
push
and
jle
lods
sbb
ljmp
aad
in
sbb
inc
mov
outsl
and
push
mov
cltd
mov
adc
jmp
dec
pushf
in
sbb
pushf
mov
ds
inc
negb
daa
aaa
jecxz
xchg
mov
mov
cld
lock
push
iret
mov
insl
ficomps
mov
sbb
outsb
cmp
rclb
in
cmp
andb
lds
sbb
jbe
cmpsb
xlat
rcrl
inc
mov
xchg
stos
fs
fs
xchg
scas
xor
nop
loop
or
xor
inc
outsl
enter
dec
cmp
xchg
inc
adc
es
lahf
and
and
jg
iret
cmp
in
shll
popa
lds
lock
rol
jo
add
xchg
ds
add
stos
cmpb
sbb
js
xchg
out
lret
inc
jge
pop
dec
scas
outsb
je
or
push
inc
push
inc
jge
mov
lods
pop
jo
repnz
mov
sbb
icebp
or
sbbl
and
add
scas
cmp
addb
adc
pop
inc
cld
inc
lcall
jmp
leave
xor
or
pushf
stos
mov
lds
fwait
xchg
push
dec
xchg
lret
out
adc
bound
cmp
sarb
dec
or
stc
lock
pushf
dec
jg
outsl
stc
dec
xchg
sbb
jb
mov
jg
imul
arpl
cmp
js
dec
mov
cmp
xlat
popa
mov
test
out
push
cltd
out
cltd
rclb
loopne
adc
add
xor
sbb
xor
call
sbb
or
les
and
outsl
sbb
pushf
inc
sbb
mov
xchg
mov
mov
icebp
pop
sub
adc
das
test
and
jg
pop
sbb
js
es
shlb
loop
jbe
jb
mov
inc
pop
cmp
xchg
fiaddl
or
sub
test
pushf
repnz
dec
dec
jmp
mov
push
xchg
and
cmp
pop
and
sti
andl
and
cs
inc
dec
cmp
pushl
pop
sbb
pop
inc
mov
mov
fdivrp
push
sub
sbb
cld
mov
arpl
xchg
xchg
imul
mov
adc
add
testb
add
add
aaa
xor
adc
pop
add
jp
push
fs
pop
fisttps
bound
das
mov
inc
push
aas
inc
ret
push
dec
mov
mov
jns
xchg
jo
js
adc
cmpsb
and
cmp
fcmovu
sub
xor
push
mov
in
lock
xlat
jnp
nop
sub
dec
inc
adc
jl
pop
lock
out
dec
push
cltd
xchg
int
aas
or
or
aam
mov
mov
lea
arpl
ret
jmp
outsl
sub
mov
push
mov
cmp
icebp
adc
fiaddl
lds
jae
mov
pop
xchg
jo
lds
and
mov
mov
xchg
inc
hlt
mov
mov
test
sbb
cmpb
dec
int
mov
aam
adcb
ret
data16
mov
loop
push
cmp
cmp
adc
sbb
jle
aam
add
out
push
popl
mov
inc
lds
mov
push
and
fwait
cmp
inc
push
sti
add
mov
cmp
adc
push
pop
push
popf
mov
imul
mov
aaa
or
fiadds
lods
jnp
pop
push
mov
add
into
jnp
jae
push
push
imul
mov
sub
add
push
inc
addb
and
jo
lcall
dec
xor
shr
nop
jae
mov
int3
pushf
inc
jp
loop
xchg
icebp
jne
cli
cmp
inc
dec
push
sti
repnz
pop
push
dec
mov
sbb
imull
dec
and
pop
jae
shrl
sbb
pop
mov
ds
mov
imul
cmc
stc
push
fcompl
xor
fimull
ljmp
cmp
test
into
sbb
call
and
push
xchg
sub
cli
jle
cmp
cmp
inc
jne
dec
mov
inc
leave
ret
insb
jge
data16
sbb
sub
mov
xchg
push
push
test
jge
pop
pusha
push
sub
mov
sub
enter
orb
test
inc
sub
stos
or
mov
and
dec
rclb
outsb
mov
mov
push
mov
xor
cmp
dec
fidivrl
cmpsl
jmp
leave
in
lahf
popa
iret
dec
jl
jno
mov
in
sbb
dec
xchg
pop
cmp
into
cli
mov
ljmp
mov
jbe
cmp
mov
test
icebp
and
rcrb
sbb
or
or
mov
loop
mov
cmp
pop
out
mov
mov
sbb
cmp
cmp
push
cld
pusha
mov
scas
mov
pop
mov
and
push
ds
mov
sbb
dec
inc
adc
push
xor
push
insb
clc
outsl
push
ficomps
jmp
adc
lret
mov
je
hlt
sub
mov
std
jp
imul
stos
lahf
inc
jo
jne
js
push
popa
ljmp
dec
xchg
push
lret
add
jle
into
push
inc
stos
sbb
lcall
lahf
mov
cmp
test
mov
add
ljmp
dec
dec
sub
cld
loope
ret
adc
loop
or
daa
mov
push
into
jge
ss
aam
inc
in
testl
pop
xchg
scas
cmp
ret
mov
xchg
or
inc
mov
aad
jl
push
popf
pop
cmp
andb
pop
push
popf
loope
sub
pop
jge
and
push
outsl
pop
jmp
adc
repz
mov
push
fwait
call
lcall
in
movsl
lret
adc
aad
add
push
dec
cmpsb
fwait
push
lods
fisubl
push
jp
jecxz
aaa
pop
sbb
mov
inc
aad
or
inc
ret
jns
xchg
xchg
out
inc
hlt
lcall
jmp
push
pop
stc
pop
cwtl
test
or
stos
push
mov
mov
mov
cmp
in
out
scas
mov
out
adc
sub
daa
aaa
sbb
out
lods
leave
inc
xor
xor
inc
jecxz
stos
xchg
ret
imul
mov
scas
in
insb
xchg
decl
test
jo
jmp
mov
inc
inc
inc
xor
outsl
cltd
mov
in
insb
xor
sub
repz
jne
lds
lret
mov
pop
mov
sub
cmp
sbb
enter
cmpsb
xchg
adcl
aam
js
fcmovnb
aas
push
push
sub
aad
rcr
into
and
test
cmpsb
fs
outsb
mov
sbb
mov
adc
push
hlt
faddp
or
popa
mov
mov
dec
mov
mov
inc
jl
mov
daa
and
fistl
cli
pusha
lds
mov
mov
insb
mov
ret
adcl
lea
fwait
push
mov
or
pop
cli
xchg
aad
sbb
and
mov
test
mov
jo
sbb
jmp
xor
adc
outsb
jns
pop
sar
sbb
xchg
cld
fdivs
outsb
mov
std
jp
and
xchg
xchg
loop
adc
es
cmpsl
mov
mov
or
cmp
jle
xchg
cmp
test
je
stos
out
push
fdivrp
xlat
jb
pop
mov
jo
or
sbb
xor
jbe
rorb
iret
push
sub
loop
push
mov
push
sub
mov
call
sbb
push
pusha
lds
fistpll
mov
les
xchg
sbb
fists
andb
lds
outsl
test
sbb
fstps
ljmp
cwtl
xchg
mov
push
sbb
sbb
outsb
fisubl
cmpsb
mov
and
lcall
inc
xchg
and
pop
jmp
xchg
hlt
jmp
mov
mov
and
arpl
xor
das
mov
cmp
push
push
and
sub
jne
jb
mov
popl
stos
in
in
or
mov
jo
repnz
add
sub
mov
ljmp
push
out
imul
dec
xchg
jl
mov
adc
addr16
stos
ret
and
mov
repz
ljmp
push
xor
xlat
popf
mov
jne
pop
xchg
into
mov
pop
es
mov
pusha
push
mov
and
cmp
adc
or
sub
xor
mov
mov
mov
mov
mov
int
xchg
aam
lahf
cmovl
ret
adc
and
imul
fstps
inc
pop
jne
fwait
imul
cmp
push
lea
dec
mov
xchg
ss
leave
push
shlb
ret
cli
cmovo
mov
jae
ret
rcrb
dec
insl
into
loop
dec
pop
fisubrl
sub
pop
jae
and
in
push
subb
fdivrl
fwait
out
pushf
push
pop
cmp
sbb
arpl
ret
mov
scas
cmp
mov
jbe
pop
stos
and
mov
adc
out
jne
lret
jnp
cmp
aam
rorb
arpl
push
jl
shll
shl
mov
rolb
fstpl
ror
lea
or
mov
ljmp
rorl
notb
mov
and
inc
mov
xchg
lds
cli
daa
mov
mov
cmp
push
mov
rolb
cmp
test
add
push
aaa
jle
aas
push
mov
fwait
pop
dec
sub
and
loope
push
mov
pop
pusha
sbb
sahf
ss
test
mov
scas
push
and
shl
stc
popa
jns
in
clc
xchg
sub
inc
jnp
mov
inc
sub
cmp
sbb
fdivl
stos
stos
pop
ret
mov
jle
out
stos
out
pusha
or
jnp
in
out
lcall
jns
aam
mov
loop
inc
movsb
dec
dec
pusha
insb
xchg
movsb
outsl
shl
adc
jns
push
daa
sbb
xor
and
bound
bound
pop
ds
in
insl
outsl
xor
and
fisubl
ljmp
sahf
cmp
jbe
jns
xchg
mov
jmp
repz
mov
cwtl
scas
cld
pop
int
fiadds
pusha
dec
fwait
xchg
or
mov
cwtl
nop
pusha
gs
leave
ds
jo
jb
pop
js
mov
sub
ljmp
lds
cmc
fsubrs
popf
aaa
add
pslld
or
imul
fs
rorb
jp
jmp
lock
stc
jo
mov
lret
mov
lret
pop
xchg
fildl
cs
repz
jecxz
outsl
or
xchg
nop
add
xchg
dec
and
sub
cli
pop
sbb
push
pushf
sti
lods
outsb
inc
jae
mov
push
ret
mov
push
addl
imul
ljmp
std
fs
out
cmp
movups
clc
push
outsb
pop
outsl
sbb
aas
roll
jae
rcl
mov
cmp
dec
hlt
xor
or
lea
ficoml
ret
stc
inc
push
mov
mov
sub
iret
cwtl
bound
xchg
dec
leave
out
jnp
jmp
cmpsb
ja
rcrl
xchg
sahf
sbb
movl
cmp
push
arpl
sbb
leave
ficoml
pushf
imul
repnz
push
cli
mov
xor
ja
outsl
xor
mov
and
mov
fcoms
shl
imul
inc
inc
xchg
scas
jp
lahf
shlb
push
dec
pusha
xor
js
cld
sahf
je
mov
pop
pushf
cmp
repz
cli
push
push
mov
push
out
jle
push
sub
xor
lods
xor
out
and
and
push
jns
sub
inc
pop
loopne
test
dec
cltd
lods
in
cli
adc
push
ds
sub
adc
outsl
lock
into
xchg
and
cld
inc
scas
jbe
adc
sti
inc
mov
imul
sbb
pop
pusha
stos
mov
add
sbb
daa
inc
mov
out
mov
inc
stos
sbb
cli
testb
sub
jae
aam
sub
outsb
pusha
inc
pop
xchg
ja
dec
sub
fsubrs
dec
push
imul
jne
or
adc
pusha
out
insl
pushf
cmp
mov
dec
sbb
repnz
mov
or
pop
mov
mov
inc
fidivrl
jo
push
add
pop
cmp
mov
into
stc
es
or
jmp
dec
pop
scas
and
push
lea
inc
cwtl
ljmp
cs
and
lds
jae
cmc
add
jmp
and
pop
mov
outsl
xchg
mov
mov
cs
rcr
jmp
pushl
jbe
je
js
sbb
pop
adc
pop
adc
mov
xor
enter
jmp
xchg
movsb
cld
shrb
sub
lret
int
xor
enter
pop
jecxz
retw
xchg
mov
lods
and
mov
lock
dec
stc
cli
pusha
mov
call
mov
jae
fs
lret
mov
mov
adc
cli
jnp
dec
fdivl
int3
nop
les
dec
xchg
adcb
push
add
cmp
xor
shr
inc
call
cmp
xchg
inc
cli
fsubrp
dec
xor
fwait
push
inc
jns
xor
int3
aas
aaa
and
jp
and
and
ss
mov
sbb
lock
push
xchg
jp
jo
repnz
lock
inc
dec
mov
outsl
and
sub
incl
add
daa
dec
hlt
pop
popa
or
xor
mov
pusha
dec
xor
jmp
enter
ret
shrb
fwait
sbb
fstps
out
scas
cltd
cmp
pop
cli
mov
pop
or
inc
bound
jmp
cli
ficoml
jp
mov
and
aaa
jne
data16
cmp
jp
pushf
or
loop
int3
adc
jecxz
aaa
or
xorl
sub
mov
popl
gs
lcall
mov
fcmovne
cmp
es
sbb
inc
bound
sahf
sbb
and
and
pusha
jbe
aam
xchg
pop
das
jno
test
mov
cmp
pop
addr16
faddl
sti
cld
es
jle
jnp
jb
stc
sub
xchg
stos
clc
sahf
fdivrs
jb
sub
sarb
nop
jg
jecxz
jo
inc
jp
es
jns
enter
jns
fidivrs
popa
ljmp
repz
rcrb
mov
int3
data16
mov
jae
xchg
xlat
push
es
xchg
in
cmp
inc
cmp
xor
sahf
pop
and
mov
mov
iret
cmp
icebp
loop
push
push
dec
and
mov
xchg
xchg
xlat
dec
les
and
ret
adc
ficompl
mov
cli
loop
sbb
loope
ss
test
pop
adc
loopne
mov
xor
inc
pop
int3
pop
sub
mov
xor
cmp
add
in
push
xor
mov
stos
jg
into
xchg
in
sub
enter
stos
adc
lcall
jmp
loope
popl
outsl
jle
push
add
stos
mov
mov
repz
pop
mov
push
push
pop
xchg
dec
dec
xchg
ljmp
pop
sbb
mov
shlb
inc
shl
xchg
xor
adc
add
push
data16
lret
lds
lea
inc
lret
and
cmp
fidivrl
dec
push
pop
movsl
sbb
inc
dec
loope
std
cmp
ret
inc
into
loop
sbb
subl
mov
inc
pop
cmp
dec
ret
imul
xchg
icebp
mov
push
mov
inc
ds
jl
test
pop
out
push
outsb
mov
clc
popf
dec
inc
movsl
sbb
sub
push
adc
xor
clc
in
fs
or
mov
and
sbb
scas
fsubrl
push
movsb
inc
rcr
cmp
cltd
rorl
pop
das
mov
les
mov
adc
sbb
jp
hlt
adc
add
scas
dec
inc
mov
cs
pop
or
pop
jecxz
aas
xchg
sbb
adc
shlb
stos
addr16
ds
lahf
xchg
adc
out
mov
out
pop
arpl
pop
jmp
cli
dec
lds
xchg
mov
mov
or
push
loope
arpl
aaa
shll
xor
arpl
arpl
in
mov
lock
sbb
call
jmp
sti
das
loop
sbb
nopl
cwtl
fimuls
into
out
loop
jae
dec
cmp
pop
je
pop
adc
gs
push
dec
xchg
dec
stc
sub
sbb
push
imul
push
push
mov
push
jmp
jmp
cwtl
xor
push
dec
push
in
mov
sub
insb
cmp
or
repnz
stos
xor
ljmp
xchg
lds
jle
xor
xor
mov
sub
lea
cwtl
xlat
adc
mov
aas
sub
push
xchg
dec
ret
mov
mov
push
push
jo
jle
stos
jbe
cmp
lods
push
inc
add
jne
pop
fadds
or
sbb
mov
sbb
pop
or
je
sub
push
and
pop
out
inc
mov
push
pop
pop
movsl
dec
sbb
leave
mov
pop
pop
inc
pop
xchg
jecxz
and
sbb
xchg
add
pop
insb
inc
pop
and
xchg
push
jo
xor
sub
add
stos
push
push
addr16
lcall
mov
adc
movsl
shrb
rcll
aaa
and
jb
xchg
addl
xchg
mov
gs
push
jp
jle
cmp
insl
mov
pop
cmp
xchg
push
jb
push
pop
pop
push
gs
data16
push
mov
popa
push
mov
xor
add
mov
clc
jge
nop
inc
or
adc
mov
jmp
test
aaa
mov
add
xchg
pop
aad
inc
dec
loopne
xor
xchg
jo
add
inc
pop
xchg
sub
and
inc
out
rcll
push
and
sbb
xchg
xchg
ret
dec
sbb
ds
sbb
mov
ljmp
sub
xchg
inc
cmp
xor
cmp
arpl
jno
push
xchg
push
inc
repz
fisubs
xchg
cmp
stos
les
jp
jmp
jge
das
lods
imul
push
xor
movsb
popa
xchg
sbb
sub
cmp
lods
or
jmp
popf
inc
loopne
fdivrs
sbb
hlt
fstpl
xor
dec
jp
ds
sbb
enter
lahf
dec
std
jg
stc
push
sub
push
aas
pushl
pop
loopne
sub
push
jl
ljmp
mov
je
pusha
repnz
aas
sbb
or
test
add
mov
jl
scas
test
insl
aam
pop
jg
in
jo
inc
mov
lcall
loopne
sbb
stc
ljmp
out
rolb
and
lds
out
scas
cmp
pop
inc
jb
pop
adc
push
sbb
xchg
insl
out
sub
and
in
movsb
mov
enter
jbe
adc
icebp
or
push
cmp
sbb
sub
pusha
scas
jg
cmp
pop
es
pop
jecxz
fiaddl
jo
and
or
mov
jl
and
mov
add
cmp
lds
cmp
sbb
nop
mov
push
out
push
aam
mov
cld
insb
jecxz
sbb
scas
adc
movsl
jo
xor
dec
add
adc
add
sbb
scas
outsb
push
ds
and
xor
push
cmp
bound
bt
mov
test
sbb
stos
jb
jmp
pop
or
mov
sti
cmp
jns
mov
dec
fs
xlat
mov
sub
dec
cmp
mov
pop
imul
pop
sub
cltd
pop
popa
mov
lret
jecxz
addb
bound
and
pusha
dec
inc
js
pushf
pop
insl
test
inc
es
dec
lcall
add
in
push
pop
adc
cmp
je
js
mov
scas
mov
xor
ljmp
ret
xchg
cld
lcall
push
adc
aam
stos
or
adc
nop
int
inc
sbb
es
cli
jo
add
mov
push
inc
nop
inc
loop
adc
sbb
stos
repnz
pushf
loop
mov
ljmp
clc
rcrb
aaa
out
sub
inc
inc
and
mov
pop
jg
or
mov
outsl
fnstenv
sbb
sbb
subl
insb
dec
nop
adc
inc
jmp
mov
pop
mov
dec
pop
mov
fisubrl
das
jmp
stc
dec
bnd
nop
cmp
movb
ret
fistps
dec
subb
or
ja
inc
cmp
fdiv
sti
inc
mov
scas
mov
mov
xor
inc
xchg
ds
and
fwait
dec
xchg
sbb
mov
add
lock
outsb
sbb
jmp
mov
fldt
jl
xor
push
push
cli
aas
fucomip
mov
int
jo
xor
xor
in
inc
cld
push
add
xor
jp
sub
ljmp
xchg
and
dec
or
pop
stos
cmp
ret
jne
sub
push
mov
or
imul
ss
lret
jecxz
sbb
jo
sbb
jb
jp
ret
jnp,pt
add
dec
loopne
ljmp
dec
std
negb
sub
aaa
out
mov
xchg
lcall
dec
sub
cmp
rcll
jmp
add
pop
insb
cmc
pop
cmpsb
scas
mov
push
pop
pop
aad
push
es
mov
cmp
in
lret
outsb
xlat
jmp
cs
fimull
pop
ljmp
xchg
addr16
xchg
mov
iret
dec
vpxor
pop
mov
in
fwait
jmp
xor
out
aas
cmpl
pop
dec
xchg
inc
mov
decb
fcmovb
imul
insb
mov
je
sarl
cli
mov
mov
lea
push
xchg
jmp
xlat
cmp
cmp
das
jo
sbb
movsb
imul
leave
push
pushf
jmp
sub
and
jg
jp
je
add
ds
scas
push
push
push
js
mov
jp
and
push
adc
adc
dec
stc
xchg
out
dec
pop
cs
sbb
adc
lcall
lock
fsubl
jg
orb
pop
xchg
mov
inc
jnp
lret
xchg
sbb
fnstsw
ret
push
sub
mov
or
or
cmp
in
mov
jne
sti
xor
xor
push
into
mov
cmc
es
lea
ret
cld
mov
xchg
data16
hlt
dec
cwtl
dec
ret
jg
popa
jne
lock
stos
loopne
cltd
cmp
pop
mov
adc
add
inc
xor
ja
sbb
cmp
lret
loope
jo
hlt
pushf
out
imul
cwtl
xchg
arpl
mov
pop
xchg
inc
repz
addr16
and
mov
or
or
fldenv
data16
push
sbb
dec
xchg
push
push
and
sub
add
inc
stos
fcmovne
nop
sub
push
ficomps
push
add
add
xor
mov
mov
scas
ds
pushf
pop
int3
xor
inc
xchg
push
outsl
adc
test
data16
xchg
mov
pushf
call
mov
and
inc
mov
into
mov
in
bound
sbb
mov
gs
mov
or
fadds
push
pop
add
inc
cltd
std
jnp
test
jp
cmpsb
ds
sbbb
cmp
aaa
sub
scas
out
mov
jnp
lods
scas
adc
ret
pop
mov
std
add
pop
and
jg
ds
daa
dec
lcall
add
sbb
jmp
cmp
jae
inc
jg
pop
mov
in
jae
call
push
dec
adc
mov
ds
mov
incb
jg
test
dec
outsl
ds
and
jnp
loop
cmpsb
mov
bound
push
insb
fwait
sbb
ret
or
stc
pop
jnp
add
push
pop
stos
sbb
lret
ds
mov
add
ds
lcall
push
fwait
lret
xchg
out
lret
sahf
xor
fcmovnu
cld
cmp
insl
cmp
shll
mov
sarl
sbb
dec
loop
cmp
cmp
arpl
xchg
and
jb
imul
pop
pop
mov
push
ds
test
pop
jmp
and
inc
jae
mov
bnd
add
cmp
jmp
jno
cmp
icebp
push
push
sbb
cmp
stc
jno
push
xlat
les
jle
xchg
ds
dec
sti
sbb
cmp
jmp
mov
mov
mov
jno,pt
andb
xor
movsl
inc
cmp
add
cmp
ficoms
fcomps
orb
ds
adc
xor
imul
push
jbe
sub
fbld
sub
ds
ss
dec
ret
loop
mov
movsb
cltd
test
insl
daa
xor
lcall
pop
rcll
inc
insl
aas
adc
call
sahf
cmp
sub
mov
cmp
sub
stos
lret
push
sbb
or
adc
ljmp
sbb
repz
xor
outsl
push
adc
xchg
jmp
jg
cmp
cmpsl
imul
ljmp
jnp
cmp
and
movsb
stos
repz
fisubrl
xchg
es
mov
ljmp
pop
add
add
sbb
inc
xchg
cmp
test
cmp
aas
comiss
andb
lret
imul
outsl
jb
cmp
in
cmp
ja
daa
or
pop
sbb
mov
sub
stos
add
inc
ds
push
adc
xchg
sahf
add
sahf
mov
adcl
sbb
add
imul
imul
mov
jo
dec
sahf
nop
jno,pt
negl
inc
push
icebp
es
incl
xor
insb
sbb
xor
xchg
push
jmp
daa
rol
loop
xor
andb
lcall
and
mov
aam
cmpsb
cmp
scas
push
mov
push
mov
dec
xchg
repnz
push
xor
mov
pop
mov
xor
pop
shrl
cmpxchg
outsb
sbb
inc
xchg
pop
push
scas
xlat
pusha
dec
push
inc
andb
mov
int
push
insb
fnstsw
pop
cmp
dec
adc
popa
out
adc
adc
outsb
dec
mov
popa
xchg
leave
jmp
push
pop
aad
sbb
loopne
scas
push
lock
push
cwtl
mov
jmp
lds
sbb
add
lods
xor
lds
adc
cwtl
outsb
test
dec
sarb
pop
not
push
icebp
les
loopne
adc
inc
in
push
dec
mov
out
mov
mov
cmc
mov
add
sub
push
sbb
out
adc
dec
inc
cmp
push
imul
or
mov
mov
sbb
push
stos
xchg
iret
or
pop
fistpl
and
dec
mov
repz
mov
mov
dec
push
pop
testb
push
pop
inc
mov
enter
cli
jmp
arpl
aad
push
dec
lds
pushl
xor
in
mov
imul
test
shll
cmp
or
out
xor
push
rcr
mov
dec
adc
mov
ljmp
mov
loop
mov
sbb
xchg
call
xchg
int3
push
push
cmp
adc
aaa
imul
int3
jp
cmp
fdivl
je
sbb
xchg
adc
fidivrl
nop
push
push
leave
imul
add
jp
repnz
outsl
pop
mov
mov
call
pop
inc
xchg
add
out
xor
lods
clc
xchg
fsts
scas
aas
xor
cwtl
cs
mov
cmc
xchg
push
vpxor
outsl
jbe
push
sbb
dec
mov
pop
pop
jbe
scas
dec
dec
push
pusha
imul
push
xchg
dec
and
adc
cld
mov
mov
clc
pop
push
xchg
popa
repnz
pop
stos
push
xchg
lds
inc
arpl
ljmp
cmpsl
xchg
mov
aad
sbb
jo
mov
data16
mov
cmpsb
add
xchg
shl
lock
leave
stc
mov
xlat
jecxz
loope
pop
sub
sub
sbb
int
bound
mov
dec
bound
std
pop
outsl
ret
gs
repz
push
push
xor
lcall
arpl
add
inc
xchg
sub
jb
mov
push
aas
cmc
mov
push
lret
cmp
push
sahf
loopne
fwait
cli
push
cmpsl
adcb
pop
inc
daa
mov
fwait
xchg
inc
cmp
into
jp
xor
or
les
adc
and
movsl
loope
xchg
mov
stos
repnz
pop
jg
cmp
pop
ficoml
inc
xchg
dec
or
push
or
pop
outsb
pop
stos
mov
inc
movsl
test
xchg
add
into
jp
sbb
cmpsl
stc
cmpb
adc
in
stos
rcrb
or
ds
dec
and
fs
xchg
lea
xchg
push
fwait
and
fimull
pop
dec
andl
fisubrl
inc
xor
inc
dec
inc
add
pop
adc
sbb
roll
inc
vmread
jmp
das
jp
jmp
ljmp
int3
dec
pop
pop
inc
shlb
pop
dec
or
xor
insb
bound
push
js
pop
call
loop
push
add
jo
mov
add
mov
lcall
data16
mov
aaa
adc
cmp
sub
xchg
clc
inc
loop
or
ret
inc
scas
add
mov
adc
movsl
int3
lock
mov
lret
pushf
sbb
test
add
mov
int3
daa
das
scas
inc
sbb
adc
in
aaa
aam
imul
lods
incl
setns
fildll
loope
lds
push
shlb
cmpsl
cwtl
test
jge
jg
sub
fsubl
push
jge
mov
push
call
jl
shl
fwait
or
mov
dec
sbb
sbb
fisttps
jo
ja
cmp
lahf
stc
pop
scas
push
repnz
mov
xor
add
mov
add
xor
repnz
stos
sbb
mov
mov
movsl
gs
push
test
adc
xchg
pop
jg
scas
int3
daa
lds
into
aaa
sbbl
sbb
xor
push
nop
aaa
or
call
dec
mov
xchg
sbb
imul
out
ficomps
inc
jae
test
dec
and
fsubs
lods
dec
lret
xor
or
mov
cmp
mov
or
sti
pusha
mov
jb
add
ss
pop
scas
ret
fwait
adc
add
push
push
inc
rcrl
cmp
jo
outsl
push
bound
lds
pop
jle
push
stos
xor
faddl
les
inc
pusha
xor
jmp
mov
ds
fdivrl
xor
push
outsb
add
cmp
fwait
sbb
sub
mov
imulb
aaa
add
aam
mov
mov
sub
imul
inc
jle
incb
mov
mov
into
push
gs
mov
out
push
push
mov
mov
sub
jge
ret
scas
in
dec
xor
mov
scas
inc
lcall
adc
sub
xchg
test
pop
xor
inc
or
sbb
aaa
push
pushf
arpl
das
mov
aad
mov
stc
mov
push
sbb
xchg
adc
leave
ds
jle
xchg
inc
mov
push
mov
xchg
or
sub
fdivrs
pop
scas
jp
push
test
arpl
call
sbb
shlb
jno
shll
fsubrp
mov
sbb
mov
push
sbbl
xchg
movaps
mov
add
push
inc
insb
mov
into
push
push
and
out
mov
adc
mov
leave
pop
es
jbe
out
xor
xchg
lahf
test
mov
outsb
mov
cmp
je
dec
xchg
mov
mov
cs
cltd
out
push
lds
movsl
sarl
rol
jp
hlt
test
shlb
loop
pop
sub
mov
mov
ficompl
and
jecxz
and
movb
jne
xor
cli
mov
pusha
pop
pop
insb
fisttpll
fnstenv
pushf
inc
adc
in
ret
sti
xchg
test
test
push
push
outsl
cli
outsb
mov
or
pop
roll
adc
outsb
out
cli
movsl
fdivrl
sub
fs
clc
leave
repz
push
xchg
aas
dec
in
orl
sbb
sub
outsl
cmp
dec
mov
nop
mov
sub
cli
clc
xlat
push
push
sub
add
je
data16
mov
insb
inc
xor
test
cwtl
pop
xchg
stos
push
je
cli
dec
scas
popf
pusha
inc
mov
sub
mov
push
lea
and
mov
mov
mov
xor
xchg
lea
sbb
pop
push
call
cld
adc
in
loop
testb
add
cmp
pop
dec
bound
sub
rorl
and
loop
pop
mov
and
stos
test
cwtl
cmp
loop
test
cmp
icebp
jae
mov
cltd
push
jae
mov
cmp
dec
insb
mov
cmp
jmp
dec
xchg
xchg
push
aaa
sub
lea
mov
aas
or
nop
stos
and
xor
dec
adc
sub
in
ljmp
jae
adc
pop
cmovp
test
xchg
cmpsl
and
iret
fwait
fs
rcr
shll
and
mov
cmp
mov
inc
cmpsb
sbb
push
mov
call
xchg
adcb
xchg
xchg
sbb
inc
mov
jnp
and
mov
mov
push
dec
fiadds
fdivrs
sub
shrb
sub
testb
sbbl
sbb
in
setns
mov
movsb
stos
sub
or
xchg
jo
inc
fdivp
mov
mov
push
cmpsb
mov
scas
leave
and
popf
mov
cmp
mov
leave
pop
push
jb
push
sarb
add
rcrb
mov
mov
leave
mov
stos
sbb
mov
adc
bound
cmpsb
add
cli
xor
addr16
jle
mov
out
push
cld
hlt
jbe
jne
xor
adc
subl
mov
pushf
jno
shll
ss
cmp
scas
sbb
in
stc
sub
mov
mov
xor
js
mov
push
mov
jl
mov
mov
aad
je
roll
push
enter
mov
ljmp
inc
and
arpl
sti
push
jo
adc
test
scas
fbld
leave
pop
ljmp
daa
shl
dec
sbb
pushf
leave
stos
xor
dec
ficoms
loop
mov
pusha
lea
jo
out
dec
sub
cmpsb
mov
repnz
xor
xor
cmpl
inc
mov
je
xchg
sub
neg
call
mov
cmpsl
pop
fcomi
out
and
mov
insl
ljmp
cwtl
jmp
pop
mov
stos
pop
stc
xor
jo
aas
xchg
jmp
movsb
lret
or
jl
leave
popf
lret
in
ds
pop
sbb
das
ljmp
out
outsb
mov
stos
arpl
push
rolb
test
mov
sub
lock
lea
jne
xchg
mov
and
sbb
xor
cmpsl
push
scas
ljmp
cmp
cmp
ret
xchg
lods
stos
xor
enter
pop
shrl
cs
test
and
inc
adc
jo
jae
imul
inc
aas
daa
lods
dec
adc
fs
push
push
bound
cli
test
xor
sbb
sbb
std
mov
negl
cmp
leave
loop
cmp
jg
inc
sub
adcb
insl
sub
fsubl
add
out
out
popf
adc
adc
test
xchg
mov
insl
bnd
jecxz
pop
mov
xchg
mov
jae
sub
cli
adc
int3
daa
pop
sbb
cwtl
cli
test
adc
aaa
mov
lcall
fldt
sub
pop
insl
test
inc
dec
sbb
loopne
pop
xor
cli
aaa
stos
add
mov
pop
xchg
wbinvd
sub
dec
insb
adcb
adc
arpl
dec
jb
std
dec
pop
mov
dec
std
repnz
mov
or
and
jb
fldl2t
fs
pusha
cmpsb
add
icebp
adc
and
adcb
cmp
add
pusha
scas
data16
push
dec
pop
loop
ret
cmpl
test
inc
sbb
aaa
hlt
pop
xchg
mov
push
pop
gs
mov
adc
incb
xor
sbb
fisubl
mov
fbld
repnz
nop
loopne
xchg
mov
cli
pop
mov
mov
push
mov
mov
imul
ds
call
js
xor
jmp
pop
aaa
mov
xor
mov
mov
inc
daa
icebp
sub
fdivrl
mov
xchg
imul
mov
ljmp
imul
or
and
and
fsub
ss
testb
xchg
mov
lret
add
adc
mov
icebp
mov
dec
movsl
cli
push
xchg
inc
adc
mov
rclw
aaa
out
aas
mov
out
in
push
add
lret
adc
dec
xchg
cmc
aam
shl
mov
mov
dec
cmp
cmovns
xchg
cs
test
sti
cmc
or
and
sbb
push
into
shrb
jb
loope
in
and
pushf
add
mov
in
add
dec
pop
loop
data16
sub
int
sarb
movsb
js
stos
and
ja
loop
or
dec
and
push
inc
sub
and
cmp
xchg
fdivrl
lods
loop
xchg
mov
jno
test
imul
and
pushf
push
stos
out
lcall
inc
mov
xchg
inc
push
pop
pop
cmp
inc
sbb
aam
xchg
stos
mov
mov
into
push
push
subb
cltd
stos
ds
push
daa
inc
imul
pop
mov
xchg
addr16
xorb
divl
stc
fldenv
push
out
mov
add
in
pop
push
data16
repnz
xchg
movsl
cwtl
and
dec
scas
bound
cmp
sub
cmp
pop
add
add
loope
imul
jmp
mov
dec
mov
mov
arpl
jae
mov
cmp
adc
mov
test
jle
dec
and
cwtl
es
and
adc
enter
add
dec
jno
or
aas
jae
cltd
mov
pop
loop
pop
das
jle
cmp
test
cli
sbb
ja
test
pop
mov
mov
mov
nop
mov
add
cmpsb
lea
xor
hlt
sub
inc
mov
hlt
das
popf
lds
aaa
les
jo
cmp
jp
out
mov
std
ja
out
mov
test
cvtdq2ps
xchg
fnstenv
xchg
add
sub
dec
sub
add
mov
push
imul
mov
xor
mov
mov
inc
cwtl
cmp
mov
mov
repnz
push
jge
pop
shll
loop
scas
mov
out
mov
sbb
lahf
ja
bound
jg
pop
cld
outsl
lahf
fwait
cmp
sti
mov
outsl
xchg
lock
out
adc
xchg
cmpl
xor
stc
pop
sbb
clc
xchg
data16
push
orl
sbb
xchg
jo
enter
dec
push
sbb
add
icebp
arpl
cld
loop
ret
sbb
dec
mulb
push
aas
cmp
bound
pop
insb
pusha
sbb
cmp
cld
add
jno
xchg
push
inc
xchg
fdivp
mov
aas
rcr
cld
pop
mov
pop
jle
cmp
inc
and
sub
neg
xor
dec
push
push
mov
ret
lea
fdivrl
inc
repnz
lahf
out
or
inc
and
cmp
hlt
es
leave
cwtl
call
mov
in
xchg
sub
sarb
ds
insl
fidivrs
cwtl
xor
mov
ja
xchg
pop
in
and
push
and
add
add
sbb
dec
aaa
mov
insl
mov
ja
xor
call
std
cli
mov
imull
inc
int3
sub
loope
out
push
push
sub
lret
sub
mov
jmp
fsubs
enter
aam
jmp
push
lds
ret
into
mov
and
fisubrl
and
push
daa
outsl
aam
stc
repnz
mov
dec
flds
add
adc
xor
sub
jmp
pop
outsl
cld
cs
popa
sbb
mov
aam
pop
outsb
add
insb
jno
sbb
dec
jnp
dec
les
mov
pop
aas
int
xor
scas
fmull
rcr
lahf
fiaddl
out
fisubrs
adcl
mov
pop
xor
xor
dec
les
pushf
mov
je
es
into
outsl
sbb
and
push
xchg
fucomip
sbb
ror
mov
out
jb
or
push
cmc
ds
pop
call
push
or
mov
cmp
jne
daa
test
xor
dec
sbb
aaa
pop
xor
pop
pop
xchg
jmp
add
inc
fwait
ret
pusha
pop
push
imul
cltd
pop
dec
and
ja
int3
mov
imul
aaa
inc
jle
daa
test
push
dec
and
inc
jl
xor
iret
mov
mov
fwait
or
cmp
mov
rcrl
insl
pop
stos
decb
adc
ljmp
pop
adc
aad
inc
lret
ds
imul
enter
mov
scas
pop
push
sbb
mov
addl
mov
dec
sbb
dec
add
or
imul
cmp
js
incl
and
xlat
in
mov
mov
xchg
xlat
mov
scas
jae
ss
jne
pushf
add
inc
mov
push
xlat
inc
repnz
inc
or
arpl
shrl
inc
call
enter
xchg
leave
repz
sbbb
pop
fiaddl
mov
sub
cmp
mov
sbb
mov
xlat
insl
push
dec
push
push
outsl
sbb
inc
pop
insb
jp
loop
mov
xchg
stc
lds
xchg
jne
gs
je
xchg
mul
mov
jp
out
pop
pop
jmp
movb
call
out
cmp
aaa
imul
inc
dec
cmp
jp
inc
pop
pop
xchg
fisttps
test
mov
xor
dec
cmp
test
gs
push
mov
outsb
loop
mov
and
inc
enter
jae
and
inc
xchg
cmp
notb
rclb
jp
call
xchg
and
mov
repz
aas
fwait
imulb
in
and
sub
sub
ret
sbb
pushf
repz
stos
push
xchg
int3
std
cmp
cmp
scas
lds
xor
push
dec
xchg
psubusw
and
jo
mov
xlat
mov
jo
pop
dec
outsl
mov
inc
jmp
and
bound
xchg
sub
call
and
xor
mov
outsl
test
idivb
sbb
mov
xor
or
push
ret
push
jne
jg
add
imul
and
xor
and
add
decb
pop
add
xor
int3
loope
and
out
push
push
aas
fsubrl
sbb
sbb
dec
add
or
js
insb
jge
arpl
popa
popf
test
lods
std
mov
sub
roll
push
pop
mov
inc
shr
setne
push
inc
leave
pushf
sub
aaa
cmp
in
add
gs
mov
shrl
mov
fadd
pop
test
imull
mov
jge
xor
cmp
add
scas
out
fsubrl
pusha
clc
xchg
aas
xchg
std
xchg
mov
test
stos
mov
xor
sub
sti
lret
mov
xchg
sub
mov
fcom
sbb
loop
jp
push
test
jo
gs
and
inc
sti
push
push
addr16
pop
mov
inc
shrb
leave
out
inc
inc
test
pop
sarl
insl
inc
mov
xchg
in
cmpsl
sbb
mov
cmc
stc
popf
fimull
popf
rclb
into
stos
sbb
lahf
imul
push
adc
rolb
add
xor
idivl
and
sbb
std
leave
cwtl
sahf
xchg
pop
fisttpl
xchg
mov
mov
mov
loope
and
cmp
jae
rorb
xor
pusha
cli
adc
insb
dec
out
jmp
sbb
aaa
mov
adc
mov
dec
cmp
sub
sub
rorl
daa
pop
dec
scas
pop
add
dec
pusha
dec
cmp
pop
enter
cmp
inc
jp
ret
fnstenv
add
fwait
mov
ds
push
pop
mov
int
push
sub
lret
xchg
mov
xor
mov
aam
xor
adc
jle
int3
push
and
adc
clc
inc
cld
pop
jmp
ss
xchg
outsb
and
adc
movb
cmp
mov
sub
push
stc
popa
cmp
test
das
fbld
int3
adc
sub
rcrl
scas
jb
dec
or
pop
dec
loope
pushaw
cmpl
add
push
push
or
mov
fidivrl
pop
hlt
mov
sbb
pop
inc
aaa
adc
adc
cmc
cld
inc
cltd
mov
sbb
nop
sbb
add
popa
jecxz
sub
add
xor
leave
push
or
mov
jne
jns
leave
ds
mov
xor
ds
or
push
mov
cmp
mov
out
push
xchg
xorb
outsl
mov
shll
xchg
int
cltd
fs
xchg
inc
push
inc
inc
cmp
leave
rclb
dec
aam
sub
lret
jno
and
xchg
inc
bound
add
lret
in
sbb
mov
inc
cmc
dec
mov
xchg
sti
call
pop
mov
xor
mov
enter
pop
xor
aaa
adc
sbb
scas
adc
arpl
xchg
divb
in
addl
testl
add
mov
add
adc
jle
cmp
jp
cmc
arpl
test
push
pop
or
insb
cwtl
pushf
mov
sbb
leave
pushf
pop
js
ljmp
pop
or
aaa
out
idivb
cltd
aaa
jmp
hlt
scas
dec
dec
int3
pop
out
xor
fxch
std
and
insb
mov
data16
push
lea
fnstcw
jg
push
push
les
mov
sbb
adc
loop
sub
push
sub
das
mov
cmpsb
cmpsl
push
rcrl
test
fildl
push
mov
mov
data16
push
das
jp
mov
mov
or
fldt
loopne
popa
movb
test
cltd
sbb
lock
outsl
movsl
fsubr
push
sbb
rorb
jmp
xor
pop
jle
jg
outsl
mov
adc
push
pop
and
jne
jnp
fildl
les
js
shrb
testb
sar
sbb
ficoml
cmp
mov
das
pop
jmp
fnstcw
scas
test
cli
sbb
cmp
sub
lods
dec
xchg
inc
dec
or
xchg
arpl
aas
arpl
iret
sbb
jg
inc
sbb
sti
mov
icebp
shl
jae
inc
dec
test
cwtl
pop
in
mov
mov
jecxz
pop
add
xor
cmc
mov
outsl
push
xorl
mov
sbb
repz
add
xor
lods
setbe
cwtl
loope
xor
daa
adc
sub
aas
mov
lods
add
xchg
dec
and
fldenv
dec
nop
ss
cli
and
mov
cmp
cwtl
inc
sahf
mov
or
push
loop
jbe
inc
wbinvd
int3
loopne
jp
inc
mov
mov
arpl
pop
add
bound
add
loope
js
jmp
mov
or
xchg
stc
mov
pusha
sub
arpl
cmp
fnstsw
rcl
pop
inc
jb
sbb
pop
mov
mov
cmp
and
mov
mov
in
dec
sub
and
or
inc
jnp
add
jge
mov
ja
xor
mov
sbb
mov
mov
cwtl
adc
and
and
jge
loopne
jg
test
cltd
stc
push
fcompl
loopne
and
pop
jo
cmp
cmp
xadd
bound
adc
fsubrl
into
or
push
lods
sbb
mov
out
scas
repnz
mov
inc
cmp
jp
in
imul
jmp
ljmp
jno
sub
sbb
and
mov
xor
shlb
xchg
dec
mov
loope
xchg
adc
daa
int
insb
xor
sbb
add
pop
arpl
fnstenv
popa
pop
fdivl
ret
mov
fists
inc
hlt
or
push
sub
scas
loopne
jge
push
xchg
mov
mov
and
sbb
push
sbbb
inc
sbb
mov
mov
xor
inc
lock
xchg
bound
cmp
inc
shll
add
sbb
loopne
push
lock
jne
mov
and
xor
dec
mov
das
pusha
in
inc
xchg
sbb
faddp
lds
sbb
cmp
in
mov
jp
test
nop
mul
pop
lcall
inc
pop
xchg
jno
out
cmp
aas
out
cmpsb
or
mov
push
inc
jb
mov
or
sub
adc
xor
inc
pop
orb
or
enter
imul
mov
jg
sbb
loope
mov
fs
push
push
mov
mov
jnp
ljmp
ret
mov
js
push
sub
test
out
repnz
xchg
cld
mov
pushf
imul
mov
out
push
imul
mov
cmp
int3
orl
inc
xchg
lret
pushf
and
dec
push
movsl
cli
mov
call
jp
rolb
mov
mov
adc
push
rorb
jbe
mov
popa
jne
mov
and
in
lock
dec
sbb
cmp
mov
or
loopne
pop
inc
stos
mov
inc
sbb
cmp
pop
loop
push
cmp
pop
and
cmp
test
popa
inc
lods
test
add
dec
sti
inc
cmp
pop
adc
or
pop
aaa
imul
dec
mov
lcall
add
dec
pop
push
or
xchg
inc
dec
cmp
out
jmp
and
popa
adc
insl
aad
mov
inc
pop
out
lret
aam
mov
adc
mov
mov
pop
dec
cmp
pop
test
lods
or
ss
xor
outsl
xlat
lods
sbb
das
and
lods
add
pop
dec
jp
jno
xor
into
dec
bound
stos
xlat
adc
pop
stc
lcall
out
aas
xor
bound
sahf
mov
sti
xor
inc
jno
bound
outsl
lods
or
xlat
lods
jp
or
outsl
outsl
jnp
lcall
jle
mov
or
cmp
xor
cmp
push
pop
in
inc
adc
dec
xchg
lret
es
xchg
popf
adc
scas
mov
imul
nop
sub
aad
stc
xchg
mov
clc
mov
test
cwtl
push
das
into
push
lock
sub
and
dec
mov
sub
int3
addr16
mov
mov
leave
mov
test
or
sbb
cmp
sbb
inc
test
nop
push
jg
sbb
jle
push
es
cmp
mov
or
xor
add
lds
xchg
insl
jle
pop
or
fs
pop
imul
mov
inc
fimull
dec
pop
sbb
lea
dec
cmp
repz
lock
dec
cli
sbb
push
pop
xlat
mov
mov
orl
dec
bound
popa
sub
jns
pop
mov
fsubrs
mov
outsl
pop
pop
jnp
bound
mov
xchg
xor
mov
mov
xor
jne
mov
ret
and
ljmp
stos
adc
mov
push
sub
orb
je
cmp
push
bswap
push
sub
jns
jbe
stos
mov
leave
jae
lods
lret
jecxz
push
push
xchg
fiaddl
ficoml
lea
out
xchg
push
pop
or
lods
sub
sub
push
jo
enter
cmp
xorb
fists
jge
xchg
dec
mov
int3
outsl
stos
fidivl
pop
gs
call
mov
cmp
lds
cmp
add
mov
mov
add
mov
cltd
insb
push
iret
jp
cmp
sub
add
cwtl
repnz
scas
std
stos
cmpb
dec
add
xorb
xor
cmp
mov
cmp
enter
cmp
arpl
or
ret
xor
or
pop
xor
cltd
fmull
scas
mov
mov
inc
cmp
das
sbb
xchg
call
mov
push
mov
pop
sub
push
jl
insb
scas
shlb
lods
jmp
testb
test
xchg
ds
scas
pop
jo
sub
push
adc
jb
or
sbb
jp
or
and
push
nop
fidivrl
inc
dec
cltd
sub
pusha
int3
je
shll
lock
mov
lock
inc
jnp
jecxz
mov
cmp
adcl
loopne
or
add
jecxz
dec
jmp
pop
leave
in
ds
test
jo
sti
jbe
insb
push
cmp
mov
sub
ficoml
imul
scas
cmp
addb
ret
add
xchg
cld
pop
xor
inc
call
jb
or
fdivrl
js
pop
inc
xor
movsb
push
cmp
imul
jb
push
mov
sub
lret
aad
mov
stc
push
iret
sub
push
jae
mov
scas
fs
aad
or
inc
pop
out
push
xor
push
sbb
bound
jb
es
test
mov
ss
ljmp
mov
add
mov
sar
lds
add
sti
push
mov
cmpsl
je
and
ljmp
dec
inc
je
xor
inc
cli
dec
dec
je
add
dec
decl
dec
push
je
adc
push
fimull
je
ficomps
jmp
mov
fidivs
fistpll
es
fnsave
or
mov
sbb
popf
mov
fsub
ret
jp
push
mov
pop
mov
inc
push
test
pusha
cltd
push
aas
mov
push
pop
dec
aaa
xor
sbb
lahf
mov
push
xchg
xor
sub
imul
imul
mov
cmc
cld
xchg
jp
jno
push
or
xchg
fs
xchg
outsb
cmpsb
dec
imul
dec
clc
test
mov
int3
vmread
inc
pop
jno
mov
push
jecxz
push
icebp
sbb
aaa
repz
mov
dec
dec
or
cmp
jnp
es
xor
pop
shll
mov
mov
xchg
inc
xlat
jnp
adc
leave
fcomps
push
mov
pop
pop
xor
fwait
sbb
aaa
xchg
daa
pushf
loope
sti
test
shr
push
stos
push
push
fmul
mov
lret
jmp
xchg
cmpsb
out
jecxz
fisubrs
push
cmovo
clc
jg
dec
out
arpl
push
mov
cmp
mov
loope
sub
xor
pop
mov
andl
or
imul
mov
jg
mov
arpl
adc
inc
sub
fwait
lret
in
ret
push
xor
sub
stc
xchg
xchg
aaa
mov
stos
ds
cmpsl
push
aam
xor
stos
and
jge
imul
sbbl
pop
inc
push
inc
add
aas
dec
aad
mov
sbb
mov
mov
add
inc
and
sub
and
xor
mov
jns
xchg
bound
movntps
mov
push
or
mov
dec
sbb
or
pushf
cli
divb
pop
popa
ret
fs
fldpi
dec
in
in
mov
dec
jmp
xchg
fimull
fsubp
shrl
or
xchg
mov
xor
dec
push
jl
cmpsb
arpl
jae,pt
mov
shlb
jb
sbb
into
mov
aam
faddp
jge
push
hlt
push
inc
jle
sub
das
cmp
aaa
pusha
es
daa
add
dec
sub
or
push
imul
push
data16
into
push
xchg
pop
dec
push
xor
js
insb
dec
outsl
fcomi
xchg
jle
loopne
jmp
rclb
cmpsb
cmp
lods
scas
mov
mov
test
mov
popw
clc
std
dec
gs
push
jge
push
pop
out
ret
loopne
or
and
repnz
mov
imul
mov
sub
xor
rcll
jno
dec
imul
sbb
push
jbe
cmp
je
fsubs
mov
adc
cmpsb
xchg
and
push
repz
push
mov
aas
lea
cmp
xor
add
mov
test
and
shll
popa
mov
fcompl
xchg
dec
fidivrs
push
add
sbb
cmp
mov
sub
mov
clc
rolb
outsb
test
xor
sub
jmp
les
inc
push
outsb
xchg
ficomps
and
push
mov
mov
shll
insb
icebp
sub
mov
lds
dec
outsl
ret
popf
adc
test
cs
cld
ds
cmp
adc
pop
fs
pusha
fcomip
adc
jne
xchg
push
enter
and
cmp
dec
scas
ret
mov
out
and
push
cmp
push
int3
lods
lahf
test
mov
cmp
pop
pop
movsl
in
fimuls
mov
sbb
in
or
sub
aam
pop
in
icebp
stc
xchg
and
mov
push
xor
push
sub
lods
jge
xchg
stos
inc
enter
sti
inc
jns
rcrl
enter
push
xchg
sbb
xor
jecxz
inc
sbb
je
sbbl
repnz
mov
jp
aad
shll
leave
pop
pusha
es
stc
clc
ficomps
insb
mov
sbb
int
dec
stos
test
jmp
cmp
lret
bnd
es
dec
mov
sbb
mov
cmp
xor
stos
push
xchg
and
loopne
jo
std
push
fisubl
fidivrl
filds
inc
add
push
aas
ja
lds
arpl
scas
sbb
sbb
and
stos
test
xor
push
fmull
xchg
addr16
frstor
mov
test
mov
or
popa
cltd
stos
mov
mov
inc
sub
jmp
adc
or
adc
outsb
mov
mov
xchg
mov
mov
adc
daa
xchg
imul
sbb
jbe
dec
jecxz
scas
das
and
daa
sbb
inc
lret
or
dec
test
xchg
jb
stos
push
inc
scas
jb
ds
sbb
test
cmp
sbb
stos
cmp
stos
cltd
sbb
scas
call
jmp
ljmp
mov
fbld
adc
cmp
or
les
ret
pop
push
mov
inc
cmp
jp
int3
inc
pop
xchg
push
jne
xor
or
icebp
adc
pushf
imul
inc
cmp
arpl
cld
xchg
in
stos
jnp
jbe
mov
andnps
cmpsl
xor
mov
mov
mov
scas
push
mov
jg
das
imul
scas
int3
pop
and
or
push
loop
or
cld
mov
lock
es
and
test
add
or
popf
xor
jecxz
mov
adc
xchg
das
test
sbb
xchg
push
xor
adc
dec
inc
inc
cmp
mov
cmp
xchg
lea
sarl
inc
mov
ret
add
mov
xor
fldt
cld
lods
popa
mov
mov
outsl
scas
jo
xchg
jns
outsb
mov
lret
ja
stc
sbb
sbb
stos
out
rcr
pop
lods
xchg
and
aas
push
mov
mov
xchg
imull
adc
mov
pop
ret
es
adc
push
imul
mov
pushf
stos
lahf
dec
mov
stos
jg
dec
lret
mov
js
mov
xchg
fdivl
sbb
pop
sarl
int3
sahf
xchg
stos
pop
lret
and
lock
repz
cmp
mov
mov
sbb
add
mov
lods
inc
sub
mov
xchg
mov
into
xchg
insb
jae
in
pop
aaa
fiaddl
or
jne
idivb
sbb
push
xor
fwait
mov
mov
test
add
pop
outsb
ret
jbe
loopne
pop
mov
jecxz
out
scas
mov
or
dec
sub
faddl
gs
mov
cmpsb
and
gs
push
add
push
inc
jb
sbb
cmpsb
jle
test
loop
lret
pop
mov
jl
pop
ja
decb
push
das
in
outsb
sub
out
xchg
in
pop
xchg
nop
cmp
mov
adc
das
icebp
and
mov
popf
stos
subb
mov
mov
xchg
push
inc
or
mov
and
in
pop
jns
dec
cmpsb
ds
aas
xlat
loop
push
dec
pusha
cwtl
push
mov
push
push
das
jecxz
add
es
dec
mov
sub
out
sbb
xchg
mov
mov
cli
and
repz
mov
or
sbb
fnstcw
arpl
jne
icebp
and
aaa
std
pop
mov
test
jbe
jp
hlt
daa
cmp
out
imul
movsb
mov
xor
daa
js
inc
or
mov
add
cltd
das
mov
pop
out
dec
and
xor
inc
inc
enter
shrb
jecxz
jae
and
dec
ficoms
jne
xchg
adc
inc
aaa
repz
sub
xor
movsl
int
adc
sahf
dec
pusha
mov
pop
fisttpl
or
mov
in
mov
add
nop
arpl
insl
fs
pop
out
daa
push
test
int
cmp
sbb
jns
push
sbb
adc
into
ret
dec
add
fistpl
inc
scas
bound
add
ret
ret
push
movl
xchg
mov
xor
into
and
shl
and
dec
jg
xchg
fwait
sub
and
ljmp
mov
loopne
mov
lahf
cmp
imul
cmp
or
pop
dec
cmp
bound
cmpsb
push
ret
and
pop
mov
xor
mov
sub
push
xchg
jg
mov
mov
incl
mov
xchg
xchg
jp
sbb
loope
insb
sbb
pop
dec
sub
inc
mov
dec
mov
daa
cli
loopne
jno
mov
loop
pushf
xor
fcoms
sbbl
jp
push
xchg
outsl
dec
arpl
cmp
out
pop
cmp
test
stos
addr16
lods
push
jmp
inc
das
ret
sbb
mov
pop
cmp
lds
decl
xchg
rcrb
fisubs
ss
mov
mov
outsb
test
shrb
mov
jmp
xchg
arpl
push
and
inc
lret
cmp
push
inc
ja
mov
shll
xor
lds
into
mov
orb
inc
jno
and
sbb
stc
mov
xor
aaa
mov
jnp
out
mov
fdivl
jb
bound
es
mov
outsl
sub
xchg
std
mov
jo
gs
xchg
fdivp
sub
rcll
push
xchg
cmpsb
mov
inc
fsubl
cmpsb
sub
cmp
test
xor
sub
inc
es
xor
call
std
sub
and
cltd
mov
push
int3
sub
jae
pop
and
in
xor
mov
pop
sub
dec
std
pop
inc
stc
push
ds
enter
arpl
cmp
mov
es
inc
lods
and
pop
pusha
outsb
enter
fisubrs
insl
jecxz
cmp
outsb
dec
xchg
enter
imul
sbb
xchg
imul
mov
hlt
add
lret
sbb
divl
cmp
js
jmp
cmp
clc
cmp
lods
js
sub
jl
mov
cmp
xchg
dec
xor
sub
push
ficompl
pop
jl
or
inc
xchg
nop
gs
xchg
sti
stos
or
gs
pop
mov
insb
mov
sahf
decb
test
mov
cs
mov
aas
dec
scas
jmp
lods
push
mov
popf
into
cmp
jbe
mov
pushf
ds
cmp
fbstp
xchg
loope
cmp
mov
sub
mov
mov
decl
in
jnp
lds
sahf
jecxz
cltd
mov
inc
sbb
inc
popa
negb
inc
cli
mov
lds
lahf
repz
insb
xchg
pop
cld
imul
mov
lret
pop
fsubrl
imul
xchg
pop
test
aas
mov
or
aad
dec
jmp
cli
xchg
addr16
cmp
jle
rclb
xor
pop
sub
test
scas
mov
xor
stos
inc
cmp
dec
scas
ret
push
mov
add
xor
pushf
inc
lret
sub
in
adc
roll
imul
repnz
sbb
jbe
or
push
push
scas
mov
xchg
fs
push
ficoml
add
mov
into
xchg
sub
xchg
or
xchg
cmp
gs
dec
lcall
inc
inc
jae
push
je
jo
outsb
stos
jbe
loope
cmp
xchg
jns
add
or
push
movsb
and
call
pop
sbbb
push
push
xchg
fbstp
pop
inc
mov
or
jg
stos
data16
icebp
adc
add
and
ljmp
adc
inc
std
in
or
push
cmp
mov
xor
nop
shll
jno
lea
jmp
aas
lds
xchg
nop
cmpsl
inc
scas
inc
sar
sbb
dec
add
inc
fbstp
arpl
inc
jmp
data16
dec
push
es
xchg
outsb
sub
hlt
lret
push
push
xchg
sbb
cmp
lret
out
mov
stos
gs
es
pop
inc
insb
sub
dec
mov
rolb
sbb
mov
cwtl
mov
fwait
mov
lods
and
push
sbb
adc
enter
test
mov
fs
ss
and
fcmove
sub
and
outsl
cwtl
xchg
fsubrs
mov
call
test
je
xor
call
jbe
mov
mov
aaa
sbb
iret
mov
cld
lea
pop
ljmp
jle
imul
push
jecxz
fwait
pop
cltd
sbb
or
loopne
fwait
dec
xchg
pop
out
push
jl
xchg
popa
pop
mov
cld
or
insl
push
dec
lcall
xor
add
sub
dec
xchg
bound
jnp
dec
imul
and
jo
es
sbb
inc
or
hlt
andb
and
cmp
iret
inc
and
in
out
daa
test
xchg
vprotq
sbb
mov
push
mov
hlt
and
dec
sbb
sub
test
inc
pusha
out
loope
pop
lret
out
sbb
mov
inc
mov
xor
scas
adc
jmp
sub
popa
inc
iret
inc
ret
adc
pusha
mov
stc
jnp
adc
dec
adc
shrl
inc
mov
or
cmp
insb
jne
lods
movsb
sbb
xor
dec
fwait
bound
ja
jmp
push
insb
in
test
ds
adcl
daa
mov
negl
call
icebp
sti
lea
mov
pop
sub
xor
ficompl
leave
sub
shrb
adc
stc
push
inc
mov
ret
mov
jecxz
cs
imul
pop
jno
jnp
dec
dec
mov
mov
neg
adc
jnp
frstor
jb
adc
inc
mov
or
movsb
enter
bound
push
sbbb
subb
lea
sti
sub
scas
fistl
xchg
pusha
cmp
enter
mov
mov
movsl
mov
pop
sub
pop
xlat
int3
data16
cmpsl
jmp
xchg
xchg
mov
inc
add
mov
pop
fadds
mov
outsb
mov
popa
or
push
or
cltd
mov
mov
negb
fsts
out
repz
cld
push
jp
fs
loope
inc
xchg
lock
xor
inc
mov
data16
sub
sbb
ss
xor
sbb
or
repz
gs
cs
xchg
push
fstp
pop
ret
test
ljmp
dec
xor
loope
ret
xor
fisttps
xchg
xor
push
scas
outsl
add
lret
dec
push
sbb
ret
rclb
xchg
imul
push
jnp,pn
aam
inc
cmp
jmp
shrl
outsb
push
jnp
loop
mov
fsubr
call
ds
or
gs
stc
ljmp
fidivrl
out
xchg
cmp
inc
stc
insb
pop
jp
fcmovnu
xchg
cmpsb
xchg
hlt
adc
xor
sub
aaa
inc
pop
sub
cmp
pop
adc
pop
js
sbb
mov
xchg
jno
mov
mov
or
push
lods
js
bound
fld
loopne
cld
and
stc
sarb
cmc
xor
jle
call
add
jl
dec
sbb
sub
xor
insl
jle
inc
mov
popa
fisttps
dec
test
ret
mov
insb
and
std
outsl
ds
aam
out
icebp
xor
mov
test
inc
xchg
sub
xchg
jb
rcrb
jge
cmpsb
pop
mov
mov
dec
or
xchg
sahf
fwait
jns
pop
ljmp
or
lods
dec
push
jl
jg
pop
fimull
jo
cmp
popa
xchg
sbb
pop
inc
stos
test
leave
hlt
imul
sbbl
lods
imul
push
fisubs
cli
int3
push
sub
inc
jb
rorb
addb
scas
divl
dec
pop
das
xchg
mov
arpl
fsts
cli
sbb
arpl
dec
js
jbe
insb
sti
inc
mov
mov
xchg
mov
xchg
cs
xchg
pop
sar
lret
lcall
leave
aaa
pushf
jle
stos
xor
bswap
sub
fsubs
xchg
jmp
rolb
inc
or
mov
mov
or
loop
jp
mov
jno
xchg
clc
pop
mov
pop
push
fldcw
adc
jnp
into
xchg
lcall
or
adc
mov
js
stos
outsl
mov
lahf
mov
sbb
mov
mov
lods
push
mov
das
xlat
sub
inc
xchg
stos
out
inc
sbb
popa
insb
insl
pop
sbb
xor
cli
push
es
addr16
push
and
jo
and
lret
mov
ss
ficomps
mov
push
pop
dec
bound
stos
cmp
insl
push
out
inc
mov
mov
inc
cmp
sbb
mov
cmp
cwtl
sub
cmp
add
mov
pop
ficomps
cmp
sarl
cmovl
insb
imul
lret
or
std
cmpsb
pop
out
repnz
imul
enter
out
call
push
adc
add
xor
mov
push
sbb
push
shll
push
inc
xchg
mov
sub
dec
sbb
nop
insb
push
push
mov
test
and
jmp
mov
pusha
adc
dec
jmp
and
test
sbb
adc
lcall
movsl
dec
stc
addr16
in
inc
inc
jl
pop
out
xchg
pop
sub
loopne
bound
lret
xor
cmp
adc
or
lcall
mov
jp
and
pop
sbb
pushf
fists
xchg
add
cwtl
add
mov
js
psllq
test
pop
fsubr
int3
es
jae
pop
leave
cs
and
xchg
js
aaa
aam
imul
lcall
rcll
sbb
xchg
fwait
sbb
jnp
jbe
mov
imul
mov
addr16
sbb
add
fwait
sahf
sti
fisttpl
sbb
sbb
fisubrl
sbb
vpmaddwd
inc
dec
lock
out
and
iret
cs
sub
cmc
xor
xchg
fwait
cmp
mov
pushf
rcrb
ret
cmp
jo
cmp
into
and
xorb
or
lcall
mov
dec
gs
cwtl
sub
xchg
mov
jmp
inc
or
add
push
js
test
jnp
ret
pop
jg
mov
jb
or
bound
mov
inc
js
push
fisubs
or
inc
fs
test
mov
rol
test
lods
adc
ficomps
pop
shl
cli
and
mov
mov
popf
je
pop
stos
add
push
or
out
xor
pop
pop
inc
es
es
pop
popa
ljmp
sub
scas
addb
pop
dec
je
test
cli
push
es
outsl
test
dec
xor
sbb
jnp
cmp
mov
dec
orb
jnp
test
sub
mov
jns
or
outsb
out
xlat
test
lds
ror
fadds
cmp
lcall
inc
and
shrl
fidivrl
inc
sbb
lcall
aad
and
push
jge
ss
inc
xchg
xchg
orl
adc
lret
mulb
ds
cli
push
mov
into
shll
cli
xor
movsb
pop
xchg
pop
sbb
out
add
mov
test
xor
adc
add
imul
xor
aas
push
fadds
sub
xor
loope
enter
inc
sbb
mov
ret
addr16
cmp
data16
cmc
pop
inc
sahf
div
aam
bound
sub
sub
sbb
scas
out
lahf
cmp
into
je
mull
mov
js
ss
push
jo
and
sbb
xchg
rcl
mov
mov
cmp
mov
pop
adc
mov
or
jecxz
pop
orb
subb
pop
inc
ud1
cmpl
xchg
std
pop
pop
or
push
pop
push
cmpsl
add
dec
cli
and
inc
stos
mov
xchg
in
sbb
xor
popa
xor
xor
loopne
inc
push
js
rcrb
fisubl
fs
mov
add
pop
fs
rorb
lahf
dec
cmp
mov
stos
dec
sbb
bound
xlat
pushf
xchg
and
push
fiadds
mov
push
hlt
shll
cmp
xchg
pop
pop
pop
lcall
fiaddl
xchg
loopne
sbb
dec
mov
stc
inc
jge
ljmp
lds
scas
push
mov
sub
je
jns
lea
push
roll
cli
stos
ror
push
sbbb
enter
test
mov
sub
sub
enter
cmp
mov
jp
imul
fwait
inc
pop
xor
sbb
xchg
cmpsl
rcl
jno
sbb
iret
mov
int3
jp
push
or
push
jb
addb
icebp
jae
xchg
xchg
pop
mov
js
sbb
mov
pop
jmp
imul
or
inc
cmp
or
dec
int
jae
adc
push
cmp
fsqrt
mov
scas
sub
jge
outsb
in
xchg
inc
sub
ret
inc
pop
mov
cmp
pop
insb
jge
xor
cs
push
test
pop
ljmp
pusha
pushf
push
xchg
mov
mov
cmp
daa
pop
fsts
pushf
xchg
sub
idivb
ret
inc
push
xchg
sbb
ret
mov
push
insl
popa
inc
std
or
mov
das
inc
xor
loopne
fwait
dec
add
jb
jmp
mov
jo
push
xchg
cmpsb
cmp
enter
push
in
push
insb
mov
cmpsb
xor
push
lock
add
cmpsb
ficoms
call
push
in
ljmp
popa
or
mov
stos
cmpsl
insb
xchg
jbe
mov
add
mov
and
pop
test
mov
inc
dec
out
and
inc
fs
bound
mov
jns
sub
jl
jne
pusha
xchg
push
inc
xchg
sbb
shufps
jb
jle
inc
and
rol
scas
and
pop
cli
pop
add
fsubr
xor
in
jecxz
pop
sbb
dec
pop
aas
inc
pop
lods
jbe
ljmp
dec
inc
pop
xchg
xchg
push
mov
dec
stc
dec
jecxz
mov
lret
or
pushf
out
push
mov
add
aas
sbb
inc
fidivrs
or
stos
outsl
arpl
ret
inc
mov
or
ja
rcrb
dec
stos
jb
sbb
add
xor
and
adc
movb
add
dec
jnp
les
icebp
jnp
jmp
inc
mov
int3
movsb
cmpb
mov
call
mov
xchg
jecxz
pop
call
inc
push
jb
cld
xor
loop
jle
xchg
cmp
mov
cltd
lock
das
outsb
sbb
inc
sub
je
ljmp
out
out
shlb
sbb
sbb
pop
dec
pop
cmpsl
out
mov
xor
pop
inc
je
and
push
and
fcoms
pop
and
hlt
das
jb
aaa
xor
xchg
call
xor
jb
and
cwtl
mov
negl
xor
sarb
insl
adc
subb
sbb
aaa
mov
sub
addr16
out
outsl
imul
cmp
imul
outsb
fiaddl
jo
enter
push
cmc
or
das
jp
mov
cmp
aas
or
pop
into
cmp
daa
xchg
and
sti
dec
push
cli
fs
sbb
cwtl
mov
dec
sub
xor
js
int
in
das
out
lahf
push
push
sbb
xor
sub
jno
inc
ljmp
cmpsl
movsb
insw
inc
ja
sbb
cmp
das
mov
sbb
lock
cs
jp
push
inc
fwait
mov
bound
push
lcall
inc
xchg
shld
shr
or
inc
popa
pop
adc
xchg
mov
sbb
mov
lock
xor
xor
pop
clc
out
mov
sbb
jmp
ja
repz
adc
out
inc
test
jmp
faddl
insb
mov
lds
xchg
roll
cmp
outsb
mov
adc
or
push
push
and
push
lds
lahf
movb
xor
divb
test
or
mov
mov
les
jge
addl
sub
lea
popl
lds
imul
fidivl
sub
lods
mov
sarb
jo
mov
add
sahf
roll
subb
push
stos
pushf
jecxz
mov
push
dec
insb
xchg
jno
mov
dec
jecxz
lret
cmp
test
sub
idivl
sbb
mov
daa
dec
pop
stos
mov
add
jbe
inc
dec
jno
sbb
insl
push
ret
outsb
jae
inc
sub
or
jno
aas
pop
push
js
insl
ja
jge
aaa
sub
clc
stos
mov
scas
or
mov
ljmp
pop
scas
sbb
arpl
bound
xchg
or
dec
add
push
sub
dec
pop
adc
stos
add
repz
stc
daa
mov
sub
fsubl
daa
ret
lcall
aam
out
sub
xor
lahf
add
push
cmpsb
fsts
daa
insl
pushf
xorl
repnz
sbb
mov
loop
ds
add
mov
fpatan
dec
test
inc
js
out
push
adc
dec
dec
sub
mov
inc
lcall
out
imul
mov
and
into
leave
push
inc
stos
imul
out
cmp
jmp
or
imul
jns
jmp
imul
dec
scas
stc
mov
fdivrl
icebp
and
fdivl
loop
test
and
repnz
loope
fidivrl
scas
sub
push
sub
jge
mov
cmp
jo
repz
jns
mov
ja
cmp
negb
mov
popa
xchg
sub
xor
jge
sbb
mov
mov
jno
xchg
sbbb
adc
xor
jecxz
icebp
xor
mov
mov
pop
clc
nop
addb
dec
jg
mov
shl
scas
ljmp
sarb
scas
jb,pt
or
leave
imul
jbe
xor
sub
aaa
sub
sub
call
insl
inc
pop
lea
arpl
pop
mov
or
inc
ret
xor
scas
fdivrl
jg
add
shrb
clc
pop
xlat
pop
popa
jmp
ljmp
push
shlb
mov
mov
mov
repz
sub
imull
xor
pop
inc
dec
ja
repz
pop
cltd
pop
and
sbb
movsl
cmp
pop
sbb
imul
scas
aam
jae
js
loop
fmull
add
stos
out
lds
rcrl
in
ljmp
push
mov
jnp
out
xor
sub
test
out
loope
xor
add
add
jmp
sar
cmp
inc
xchg
pop
fwait
aaa
stos
pop
ret
call
dec
sub
scas
test
shlb
add
daa
pop
mov
xor
in
pop
mov
cmpsb
cli
inc
addr16
adc
mov
xchg
into
xchg
pop
mov
jmp
testb
mov
push
sti
push
call
inc
lods
mov
outsl
xor
cs
lock
mul
mov
push
leave
lods
push
mov
mov
pop
pop
dec
mov
cltd
movl
xor
lea
add
mov
adc
movb
mov
test
lea
xchg
dec
outsl
xor
cmp
dec
and
sbb
rol
pop
arpl
lahf
push
mov
jg
push
cmp
xchg
pusha
mov
es
mov
fmuls
fnstcw
and
xor
cs
mov
jbe
call
jle
mov
imul
dec
and
cwtl
mov
push
mov
shll
cs
adc
push
popa
out
push
and
imul
cltd
in
jmp
jns
sub
inc
push
mov
popf
dec
lea
jb
pop
imul
test
cmp
mov
push
pusha
mov
dec
cmp
cmp
inc
inc
inc
je
dec
test
jno
loop
pop
add
out
or
sub
xchg
imul
cmpsb
xchg
daa
aad
push
lea
push
cmpsb
scas
push
insb
push
mov
es
pop
cmpsb
cmp
push
jp
inc
enter
mov
outsb
inc
push
dec
stos
fisubrs
sbb
lahf
xchg
dec
sbb
and
inc
addr16
dec
mov
push
popa
adc
rcrl
les
or
test
stos
jnp
jbe
dec
fimull
mov
inc
sbb
jnp
and
xor
push
movsb
mov
inc
jbe
or
push
loopne
repz
lds
fdivrs
dec
ret
jo
cli
nop
in
mov
xchg
hlt
out
xor
daa
cli
fldcw
test
inc
loopne
jnp
mov
mov
jno
repz
jns
and
push
loopne
cs
cmp
mov
jns
imul
pop
je
int
aad
movsb
mov
push
call
cltd
hlt
pop
push
dec
jmp
push
push
adc
mov
mov
in
push
outsb
add
mov
jmp
je
cmp
rcrb
loope
dec
dec
cmp
mov
inc
sub
xchg
fisubs
aad
push
insl
jb
jnp
sbb
repz
pop
pop
mov
sub
xor
shr
out
lret
inc
insb
es
mov
es
mov
cmpsb
outsb
push
sub
add
fs
addl
xchg
pop
pushf
xchg
cmpsb
imul
scas
bound
pop
xchg
aam
hlt
je
mov
dec
enter
addr16
inc
cmpsb
adc
neg
jno
and
and
add
mov
nop
shrb
mov
jg
or
jle
into
xor
and
xchg
push
mov
and
cltd
xchg
popa
rcrb
push
inc
inc
pushf
xchg
mov
imul
inc
mov
jle
cmp
arpl
jb
push
push
rcrb
sbb
lds
imul
push
cwtl
sub
jecxz
push
mov
mov
push
jecxz
and
sbb
cmp
ds
dec
loop
bound
repz
or
sbb
hlt
add
stos
hlt
sarl
push
gs
into
cmpsb
xchg
sbb
fcoms
adc
dec
jmp
aaa
pop
les
shrb
int
add
cmp
sbb
mov
repnz
pop
cltd
cmp
and
hlt
adc
adc
xlat
push
stos
repz
adc
ja
lahf
sub
mov
addr16
js
cld
or
and
sti
fisubl
sbb
loope
push
cwtl
es
enter
xchg
and
adc
inc
or
dec
loopne
dec
pop
ljmp
ret
jno
loopne
xlat
or
stc
inc
pop
insb
xor
mull
mov
clc
xor
lock
sbb
jno
jle
mov
sbb
fwait
stc
xor
xchg
jmp
dec
mov
out
inc
ljmp
adc
or
jl
incl
test
mov
mov
cmp
rcr
mov
cmc
and
mov
push
fldpi
mov
push
sub
or
xchg
stos
lret
insl
add
and
les
test
and
in
inc
rorl
les
ja
add
imulb
leave
shl
movsl
mov
sarl
imul
in
bound
xor
stos
pop
jle
xor
push
inc
xchg
inc
rorl
enter
pop
sub
dec
fcmovb
fsubrl
lea
and
dec
jg,pt
stc
imul
ds
jb
je
pop
or
inc
sbb
mov
nop
add
sbb
inc
dec
xchg
add
xor
arpl
jl
sbb
scas
sbb
inc
mov
jb
mov
and
fistps
add
sbb
xchg
cmp
aaa
push
idivb
hlt
arpl
mov
clc
test
push
mov
hlt
out
sub
push
xor
in
push
idivb
or
jle
inc
rorb
push
mov
xor
cmp
or
or
xlat
lret
jnp
push
out
dec
and
xchg
rclb
testb
sbb
lret
and
cli
fnstcw
add
add
outsl
mov
add
mov
push
dec
push
mov
ss
pushf
lods
inc
fs
cmp
mov
fisubrs
and
daa
xchg
aas
outsl
mov
sbb
and
das
ja
out
incb
jb
jae
and
fsts
sub
adc
cmpl
sub
cld
mov
out
mov
mov
adc
add
adc
push
push
xor
add
jmp
dec
cmpsb
mov
cmp
xor
pop
jno
scas
ljmp
addr16
inc
ds
mov
sub
lods
add
sub
daa
mov
xor
leave
mov
in
lahf
push
into
ss
or
mov
scas
movsl
ret
sub
mov
test
add
test
jno
inc
sarb
ret
pop
and
sub
arpl
mov
arpl
adc
call
sub
pop
xor
xchg
arpl
loopne
stos
or
push
push
cmp
mov
das
enter
es
dec
aas
mov
flds
pop
xor
cmp
xchg
jne
stc
sti
addl
or
ficoms
mov
adc
jnp
test
jle
lcall
xchg
jnp
sbb
pop
leave
popa
insb
jle
movsl
loope
jno
add
ret
sub
lea
xchg
test
movb
out
mov
lods
call
push
stos
cmpsb
fimull
cmp
adc
cmp
mov
je
testb
sbb
fisttpl
es
pop
jp
xlat
add
es
pop
adc
dec
xchg
push
sub
jb
sahf
dec
inc
aas
sub
pop
dec
rorl
jbe
js
add
loope
pop
leave
mov
outsl
jp
pop
in
gs
loope
xlat
fldt
out
orl
cs
push
lods
cmp
roll
pop
daa
jmp
arpl
ljmp
jmp
outsb
movsl
cwtl
in
out
aaa
stos
mov
push
sub
push
mov
aas
sub
push
hlt
in
loope
rol
xor
aad
mov
test
out
mov
add
ret
data16
rcrb
pop
fisttpl
es
add
popf
dec
xchg
inc
jo
insb
fsubr
sub
repnz
xchg
subl
push
lea
xor
mov
hlt
pop
xor
mov
aaa
push
test
lret
and
mov
cmp
add
sub
pop
mov
mov
lret
outsb
insl
lock
xor
push
ret
inc
daa
jg
push
inc
xor
inc
ret
push
cmp
push
xchg
and
inc
in
cmp
out
cmp
popa
in
lea
mov
ja
cmp
std
pop
fsubl
mov
sarl
push
push
push
lods
add
jae
sub
pushf
push
inc
decl
imul
mov
inc
and
in
in
inc
mov
ret
in
mov
push
scas
inc
arpl
int3
mov
cmp
mov
outsl
insb
cmp
mov
loopne
xor
hlt
sub
cmp
push
jl
cld
loop
and
add
dec
ljmp
cmp
push
scas
sbb
mov
jnp
pop
es
mov
ds
popf
cltd
dec
jo
scas
pop
insb
cmp
xor
pop
jo
lahf
pop
pop
inc
leave
mov
sub
fsubs
add
fsubrl
stc
movaps
test
mov
sbb
ds
pop
ret
lcall
sarb
cmp
sbb
mov
push
inc
cs
mov
sbb
inc
xor
loop
sbb
lock
aaa
lcall
repnz
sbb
ljmp
pop
adc
dec
mov
movsb
xor
add
movsl
jae
shrb
cli
jl
pop
movsl
icebp
loop
pop
xor
rolb
adc
data16
testb
out
imul
mov
fmull
fidivrs
lahf
bound
stos
jae
popf
bnd
pop
outsb
push
push
xchg
imul
and
add
ljmp
jp
cmp
sub
mov
xlat
call
in
and
stos
fwait
inc
xor
sarl
and
sti
cltd
cmc
in
mov
or
insb
pop
push
mov
xchg
pop
jne
push
xchg
js
test
cmp
enter
or
lods
pop
cmp
xor
fisubl
mov
mov
jbe
cmp
ljmp
cmp
cmp
add
dec
out
sbb
or
mov
je
mov
mov
sub
xchg
clc
sbb
cltd
xor
lret
das
pop
ss
cli
add
aaa
ret
cli
int
inc
pop
fdivl
push
push
cmp
enter
adc
shll
add
xor
push
mov
push
aaa
xchg
in
sahf
es
inc
lcall
movsl
out
jecxz
xchg
fadds
notb
pop
or
in
sbb
cltd
scas
mul
inc
bound
out
inc
push
inc
mov
stos
and
cli
repnz
ret
ret
ja
lds
mov
pop
push
and
popa
sbb
mov
fidivrl
sub
ss
jp
ds
lcall
aam
push
jae
jmp
lahf
xchg
out
pop
fidivrs
jo
lds
xchg
and
sub
sahf
mov
mov
sub
sarb
mov
jmp
loop
mov
add
mov
outsb
fsubrl
cmc
inc
sbb
push
popa
or
es
sub
rorl
pop
lahf
inc
dec
pop
andl
shlb
cmp
inc
cmp
fisubrl
pop
or
jmp
xor
pop
into
adc
jg
ds
jb
imul
scas
addb
ret
push
xor
push
sbb
sbb
dec
push
jo
lcall
das
scas
lock
arpl
rorl
int3
addb
sub
jg
lcall
loopne
shll
jb
icebp
dec
sbb
aad
test
pop
imul
iret
pop
shrb
es
shr
popf
cmp
sub
mov
fcmovb
add
sbb
inc
stc
push
or
mov
adc
mov
push
dec
sbb
pushf
cmc
addl
mov
adc
std
dec
outsl
sub
jmp
inc
loop
ficompl
jp
xor
sub
inc
aaa
add
das
sti
insb
out
cmp
imul
cmpsb
js
ds
cmp
dec
pop
push
movsb
xchg
sti
pop
or
xchg
stos
xor
sub
adc
lock
sbb
jle
into
vmovapd
push
jns
bound
push
pop
fisubl
div
outsb
gs
dec
pop
aaa
adcl
adc
lea
in
xlat
lods
mov
dec
lahf
and
insb
negb
repnz
pop
cwtl
mov
and
xchg
in
pop
xchg
js
cli
adc
insb
inc
ret
add
outsl
push
sti
mov
enter
sub
mov
push
fld
fs
push
loopne
add
adc
ds
popf
fld
leave
stc
divl
jb
jmp
cmp
mov
and
leave
and
fistpl
int
ret
push
imul
popf
scas
repz
test
jbe
jmp
out
adc
mov
push
cld
js
xchg
cmp
lcall
push
xchg
xor
arpl
dec
mov
cmp
inc
out
lcall
pop
ds
push
xor
push
mov
jge
pop
pop
out
mov
mov
jns
and
xchg
or
out
cld
dec
push
ficompl
mov
insb
xchg
and
fldl
bound
dec
jb
addb
lea
cmpsl
cmpsl
dec
ljmp
ds
inc
or
mov
cmp
sbb
popa
or
mov
sub
pop
push
dec
sbb
jb
addr16
insl
ljmp
sub
jns
dec
and
lds
sbb
fdivl
loop
or
sbb
gs
je
nop
mov
sti
jmp
mov
scas
jp
sbb
test
jp
lods
xchg
mov
insb
adc
jg
mov
aaa
insl
cltd
lock
int
and
pushf
stos
xlat
push
scas
push
add
inc
xrelease
pushf
cmp
push
outsl
push
mov
outsb
cmp
fnstcw
outsl
loop
jp
dec
xchg
sub
cmp
push
addl
mov
icebp
out
or
cmp
mov
jno
cmp
push
mov
jb
sub
pop
fimuls
pop
rcl
dec
push
inc
adc
sbb
mov
sub
dec
and
mov
xchg
xchg
aas
inc
pop
scas
push
mov
sub
pop
xchg
stos
lock
mov
mov
imul
mov
gs
lods
jne
aaa
or
sub
pop
popa
or
sub
lods
out
lret
sbb
movsb
adc
sahf
xchg
push
jl
ss
es
and
in
push
pusha
jg
inc
or
xor
cmp
mov
arpl
lcall
mov
call
mov
cmp
cmp
insl
xor
popf
gs
daa
dec
jecxz
pusha
jg
sarb
inc
sub
push
inc
cmp
imul
vpsubsb
mov
lahf
imul
cltd
jnp
jl
loop
cs
xchg
fisttps
lock
in
add
repnz
leave
cld
repnz
lret
imul
jo
mov
popf
mov
faddl
rorb
xchg
ret
repnz
add
pop
xchg
adc
int
and
je
pop
hlt
push
xchg
mov
mov
push
lret
push
cwtl
push
fistl
sbb
pop
mov
leave
rolb
je
push
inc
or
add
inc
popf
scas
mov
daa
into
and
and
push
or
lret
inc
pop
push
jp
stc
pop
push
sbb
xchg
fildl
adc
jle
jmp
push
pop
sti
pop
xchg
jl
dec
les
ljmp
test
jb
aam
jb
cld
pop
xor
jge
hlt
push
out
mov
sub
push
sub
push
add
cmp
or
repz
loop
stc
add
ficoms
cmp
ret
jo
repz
mov
stc
sub
int3
pop
dec
fisubs
scas
or
xor
and
leave
jbe
cltd
xor
test
cwtl
jns
cmp
pop
loop
loopne
or
lock
fnstcw
cli
arpl
xchg
sbb
leave
push
cmp
outsl
test
jp
push
cmp
loop
out
test
mov
jp
insb
pushf
loop
pop
xor
add
daa
push
imul
lods
js
sub
cmpl
jmp
aad
dec
mov
test
mov
sub
cltd
es
popa
and
mov
stc
xor
and
daa
xchg
cmp
sbb
fimull
cmpsb
xchg
jae
or
scas
and
lods
inc
cwtl
add
sub
cmp
inc
xor
xchg
pop
call
ss
sbb
ds
cmp
sub
das
mov
sub
outsb
lods
dec
cmp
jp
push
clc
mov
repnz
js
repnz
insb
or
xor
jl
push
lea
sub
mov
enter
sbbl
mov
rcrl
cmp
lcall
xchg
movsl
loop
sub
pop
lods
cmpsl
cmp
nop
clc
xor
inc
jbe
cmpsl
and
std
dec
add
aaa
test
push
xor
inc
sahf
fcmovu
in
ja
adc
cmp
jmp
imul
stos
sbb
ss
jp
cmp
sbb
dec
pop
stc
subl
push
cmp
xor
call
mov
cmp
incl
xchg
add
cs
fisubrl
addr16
cli
imul
xor
es
mov
adc
popf
push
mov
pop
repz
lock
nop
movsb
test
scas
lds
ror
cmp
hlt
cs
repnz
push
sbb
mov
jmp
and
mov
icebp
add
idivb
jl
mov
imul
nop
mov
pop
aaa
rorl
sub
ja
and
adc
or
movsb
pop
mov
cmp
push
je
sbbl
cmp
dec
sub
rol
mov
ja
xchg
cli
xor
xchg
icebp
hlt
push
stos
add
shlb
sbb
sti
lods
mov
jmp
cs
lcall
adc
xchg
loope
ss
mov
popf
sbb
cmp
bound
lock
push
sub
out
paddsw
ficomps
mov
adc
cmp
push
inc
mov
push
sbb
mov
insb
and
repnz
cmpl
repz
fidivrs
cli
adc
add
cli
adc
in
xchg
imul
mov
ljmp
ds
int3
cli
out
mov
stc
dec
aam
mov
push
mov
pop
mov
out
cmp
and
bound
nop
push
lods
sahf
fcmovnb
ds
mov
jbe
bound
loop
jp
lret
lea
orl
push
xchg
xchg
lcall
mov
inc
dec
cltd
fs
mov
mov
or
fcmovnbe
popa
sti
and
mov
pop
mov
ds
testb
sahf
stos
sub
pop
ds
sti
popa
add
push
or
movsl
ljmp
not
cli
bound
sahf
fdivrs
jns
pop
data16
mov
push
adc
cmp
in
mov
cmpsb
mov
repz
loop
js
lea
mov
cmp
pop
push
inc
and
sub
je
pop
mov
loop
jo
pusha
dec
cmp
add
cmp
cli
lock
cwtl
mov
aas
je
jne,pt
lea
push
add
outsl
jnp
mov
jp
out
push
ret
loopne
sbbb
mov
loop
push
lods
popa
jb
ds
jge
inc
loop
and
mov
sbb
test
ds
inc
sub
mov
imull
pop
pop
sbbl
mov
lds
mov
cltd
pop
mov
jb
ds
idiv
fistpl
pop
arpl
inc
mov
fimull
or
push
rcll
jp
ds
mov
mov
add
je
nop
jg
sub
cli
in
pop
mov
push
push
les
push
fs
imul
jnp
push
in
jb
jle
lods
dec
sti
cmpsb
xor
aaa
ds
ljmp
sub
pop
lock
gs
dec
mov
adc
sub
incl
inc
and
clc
lock
hlt
inc
ficoms
add
outsb
jecxz
pop
lcall
pushf
mov
fistpl
imul
fsubrs
pop
cmp
ret
xlat
imul
sub
jmp
dec
stos
sbb
ja
cmpsb
jbe
mov
aas
push
inc
xchg
sbb
pop
cmp
xor
inc
sbb
jno
mov
cmp
roll
pop
ror
inc
cmp
inc
ds
icebp
dec
jns
adc
lock
push
subb
popf
add
frstor
mov
ds
xor
xor
mov
add
mov
ja
rcr
loope
loop
loop
les
fmuls
jo
xchg
jnp
pop
add
inc
fmuls
test
mov
push
adc
cmpb
pop
mov
rcrb
loop
sahf
mov
loop
lods
scas
std
mov
dec
sahf
ficoml
pop
dec
inc
cmp
ficoml
cmp
fwait
movsl
bound
cmpsl
push
push
dec
mov
or
inc
sahf
pop
sub
pop
ficompl
pop
es
lds
mov
jns
cli
mov
push
xor
cmp
fidivl
cmp
movsl
cmc
cmp
jecxz
fistpll
pusha
xor
sti
and
mov
sub
arpl
dec
imul
dec
inc
jmp
pop
push
rorb
jae
jo
mov
ficompl
repz
sahf
arpl
push
dec
inc
cmp
decb
sub
mov
sti
sub
inc
fimull
test
jne
inc
or
mov
push
aam
mov
divb
mov
lret
test
repz
std
ds
sub
dec
push
cmpsb
inc
sub
jbe
inc
xchg
lcall
mov
inc
jge
push
jns
add
js
in
and
popa
cmp
cmpsb
mov
bound
xor
mov
setl
movsl
iret
mov
arpl
popa
std
pop
cmp
std
mov
repz
aaa
jb
sahf
dec
stc
push
push
filds
jb
mov
stc
adc
dec
scas
repz
inc
and
mov
roll
push
mov
mov
push
add
neg
pushf
sar
xor
std
mov
and
test
sar
jbe
stc
inc
mov
and
pop
pop
lds
and
orb
ret
mov
push
push
inc
imul
cmp
mov
dec
arpl
xchg
pop
sub
dec
lds
xchg
loope
jmp
push
popa
dec
adc
adc
inc
aaa
xorb
call
jo
in
mov
rorb
iret
sub
add
xchg
lock
add
insl
das
clc
pop
imulb
iret
andb
mov
jmp
xor
push
and
dec
cmp
jns
sub
cmp
lret
mov
pop
mov
add
gs
outsb
push
mov
add
jle
arpl
insb
mov
jb
sub
mov
addr16
das
test
inc
stc
xor
test
mov
xorl
or
and
and
cld
aas
js
movb
scas
movsb
mov
incl
sub
sbb
push
out
leave
flds
mov
cmp
loope
es
dec
xchg
lods
add
pop
jmp
mov
ret
lock
cmp
cmpsb
mov
mov
mov
mov
cltd
das
or
out
ret
cli
xor
cmpsl
inc
add
xchg
imul
xchg
add
mov
inc
mov
pop
scas
aas
lcall
stos
ljmp
mov
fs
mov
sbb
mov
or
xor
std
sbb
jmp
mov
pop
das
jmp
sbb
inc
push
jmp
mov
sbb
dec
xchg
xor
clc
leave
aas
and
cmpsl
push
ficoml
jo
pop
mov
push
jl
shlb
loopne
push
mov
mov
cmp
enter
mov
js
ret
int3
incb
mov
movsl
test
stos
sti
iret
push
xchg
lcall
inc
mov
jnp
sbb
sbb
dec
jo
sub
sbb
pop
cmp
inc
repz
test
into
cld
and
jbe
push
gs
jl
jno
mov
jp
xor
stos
dec
sub
add
in
lock
and
or
pop
cmc
imul
cmp
and
and
out
clc
aaa
aas
xchg
jmp
enter
xor
int3
leave
xchg
adc
shl
mov
xchg
aaa
ret
xor
cmp
out
sbb
xor
loop
sbb
adc
inc
push
push
pop
inc
dec
dec
imul
std
xchg
adc
push
subb
adc
dec
pop
aam
xor
roll
ret
mov
jno
cmp
push
stc
int3
out
xchg
fcmovnu
inc
and
mov
cmc
ret
mov
adc
xlat
push
sbb
xor
stos
mov
pop
insb
repz
lea
jae
jle
shl
aad
imul
pop
addl
cwtl
add
jg
pop
movsb
or
sbb
out
sub
repz
xchg
arpl
sbb
roll
pop
xchg
ret
data16
pop
fisttpl
adc
sbb
pop
sti
and
push
jbe
fwait
lea
xchg
xchg
jb
jns
xor
pop
stos
loope
shlb
ret
dec
in
imul
push
mov
loope
push
mov
pushf
pop
pop
and
cmp
xorl
aaa
mov
push
xchg
cmp
sbb
cmp
arpl
outsb
inc
lcall
and
sbb
icebp
sahf
fmul
xor
jbe
sub
xchg
shlb
pushf
imul
insb
jne
mov
fdivs
stos
ds
jle
inc
rcll
mov
lret
out
dec
add
sbb
fiadds
decb
fstpt
in
dec
mov
inc
out
xlat
push
dec
xor
out
mov
stos
sbb
sti
mov
scas
mov
mov
cli
mov
dec
sbb
scas
pushf
dec
cmp
and
sub
int
repz
lret
repnz
pushf
lahf
loope
dec
dec
ja
ficoms
jle
jmp
sbb
fs
pop
mov
sarl
cltd
cltd
in
dec
xlat
add
imul
xchg
mov
fstpl
cmp
cmp
inc
and
aas
push
push
ja
popf
lds
inc
cli
inc
sarb
scas
fnstenv
mov
or
or
push
fscale
jae
test
dec
add
xchg
fcoms
jp
cmp
repnz
test
jmp
les
sbb
scas
mov
subb
stos
or
mov
scas
negb
pushf
lahf
int3
cmpsb
movsl
imul
ret
cmp
mov
dec
xor
jae
push
jg
push
stos
sub
imul
stos
sarl
jnp
adc
rolb
in
pop
mov
add
fwait
jecxz
or
xor
mov
mov
scas
xlat
rolb
jnp
jno
int
ret
dec
inc
add
mov
sbb
lret
ds
iret
sbb
inc
xor
loop
sub
call
sahf
xchg
or
adc
and
xchg
mov
outsb
ss
int
in
jecxz
std
mov
addr16
bound
dec
or
outsl
mov
call
daa
mov
sub
jecxz
mov
loop
scas
leave
dec
shlb
xchg
xchg
or
in
lods
pop
cmp
out
scas
aam
xor
popa
mov
mov
stos
jne
mov
pop
punpckhwd
mov
cmp
sbb
ds
ret
dec
incb
les
in
sbb
inc
xor
mov
and
xor
push
mov
fists
sbb
sbb
mov
leave
sbb
arpl
loop
pushf
std
lret
ret
test
pop
sub
and
dec
xor
loopne
sub
cmpsb
cmp
lret
add
jmp
dec
sarl
call
out
jp
sbbl
push
paddd
jo
push
rcll
fsubrl
inc
push
hlt
sti
dec
push
push
jns
push
sub
inc
dec
mov
xchg
xor
es
cmp
addr16
mov
test
pop
mov
ret
out
sti
push
pop
dec
aaa
adc
fisubrs
mov
ljmp
push
jno
xor
push
out
inc
imul
scas
fisubrl
or
out
es
or
pop
inc
in
arpl
xchg
incb
into
or
cltd
sti
xlat
inc
xor
or
clc
ret
cwtl
adc
lea
adc
pop
jno
cmp
inc
pusha
clc
fs
sbb
mov
sarl
int
mov
fisubrl
lret
clc
xchg
sti
mov
mov
test
cwtl
push
ret
imull
jmp
loop
movsl
hlt
pop
or
pushl
daa
lret
jecxz
cmp
xchg
sub
mov
jmp
mov
imul
je
cs
pop
jae
aaa
mov
in
pusha
fidivs
mov
mov
fs
xchg
sub
cmp
lods
mov
pushl
jnp
mov
orb
mov
out
ret
cld
ds
xor
test
cmpsb
inc
mov
xchg
dec
ds
scas
jecxz
loope
dec
mov
bound
mov
xor
fnsave
xchg
cmp
xchg
adc
adc
enter
dec
pop
jns
repnz
mov
xchg
inc
cmpsb
sahf
sub
cmp
xor
cli
and
sbb
xor
jecxz
dec
pop
ficomps
pop
adc
pop
jne
imul
cmp
xor
jp
push
or
daa
sbb
mov
mov
jbe
inc
imul
adc
gs
mov
mov
inc
aaa
adc
inc
and
cs
dec
mov
mov
outsb
cmp
fbstp
sub
jae
xchg
sbb
aad
xor
lret
push
lret
and
inc
xchg
bound
push
add
daa
or
dec
in
cmp
push
jmp
add
das
cmp
mov
sbb
mov
scas
fsubrl
fcomp
pusha
dec
mov
enter
imul
icebp
sti
jl
mov
xor
xor
outsl
sub
xchg
xchg
pop
scas
mov
and
and
xchg
push
mov
push
loopne
and
in
cmp
push
jecxz
imul
jle
aaa
xor
mov
out
ss
mov
jecxz
cmp
sub
and
mov
aas
inc
cwtl
insl
push
scas
test
xchg
lcall
xchg
test
mov
xor
sbb
adc
and
repnz
cld
xchg
hlt
mov
ss
push
mov
sub
lret
ds
sub
stos
or
vmwrite
xor
push
lcall
int3
dec
xchg
adc
inc
sub
pop
push
push
testb
lahf
pop
mov
and
rorl
and
xchg
cmpsb
clc
inc
lock
mov
lods
insb
loopne
ja
test
xor
ljmp
stos
add
ljmp
arpl
enter
loopne
ret
mov
ret
sahf
mov
fidivs
ret
cltd
stos
dec
sbb
jmp
mov
fsts
int
inc
loopne
fwait
push
push
je
cmp
push
dec
pushf
mov
outsl
cli
enter
push
xchg
xlat
or
sbb
push
pop
cltd
xor
pop
add
fidivrs
jo
das
stc
inc
adc
jge
and
repnz
pop
insl
jo
mov
dec
sub
scas
add
popf
add
sbb
pop
jecxz
sub
sbb
inc
mov
sub
cs
mov
outsb
push
dec
mov
out
test
lcall
aad
sub
and
mov
sbbl
repnz
dec
out
dec
imul
mov
into
es
int3
inc
sbb
xlat
icebp
mov
ret
out
iret
jg
rorl
dec
cmp
insb
ds
shll
mov
add
icebp
sti
mov
sbb
push
in
ret
mov
fildll
insb
jne
cmp
les
jns
lock
sub
sbb
inc
mov
fsubrl
adc
xchg
xchg
sub
stos
add
into
xchg
adc
lret
pop
xor
gs
sub
push
loop
add
sarl
mov
movl
ljmp
insl
daa
rorl
sub
pushf
loope
sub
or
lret
movd
fdivrs
and
dec
dec
fnstcw
sbb
jge
sub
imul
mov
pusha
pop
mov
add
add
cmp
jmp
cmp
aam
cli
cmp
mov
into
add
pop
mov
or
add
packssdw
mov
cmp
inc
push
jne
push
sahf
sti
jno
pusha
add
jae
sub
xor
pop
dec
daa
int
cmp
imul
arpl
lods
les
xor
cmpsl
cmp
cwtl
loop
inc
jae
push
xor
cs
bound
addr16
decb
pop
ret
jb
mov
ficoml
mov
adc
xor
mov
in
lret
stc
add
ficoml
jbe
filds
cmp
lret
or
sub
imul
insb
test
adc
xchg
inc
lock
mov
mov
pop
jo
and
hlt
adc
mov
shrb
push
xchg
imul
inc
mov
in
push
imul
cmp
test
out
dec
je
lods
xchg
loope
repz
sbb
adc
negb
aam
imul
in
jmp
fs
mov
jb
imul
out
outsb
outsb
cmp
or
sbb
mov
sbbl
ret
push
sub
xchg
jecxz
dec
inc
xor
dec
mov
imul
fbstp
mov
xchg
cltd
das
ss
and
add
sub
mov
movsb
and
xor
loop
inc
pop
xor
mov
test
sub
insl
xchg
or
xchg
jg
loop
into
shll
mov
outsl
stos
pop
subb
sub
popf
add
lcall
scas
pushf
adc
ljmp
loopne
stos
ret
fsubs
scas
jmp
jb
or
push
sbb
mov
fs
xor
mov
scas
mov
aaa
and
push
pop
or
imul
mov
lret
lds
mov
popf
insb
mov
stos
cmp
cwtl
icebp
pop
or
push
bound
mov
jecxz
lcall
shll
lds
pop
rclb
sub
or
sbb
scas
pop
dec
repnz
cmp
sub
mov
jg
out
mov
jnp
jg
aaa
push
and
lods
push
jp
pop
sbb
cmpl
hlt
jbe
cmpsl
cltd
add
es
lds
daa
mov
and
or
mov
gs
xchg
mov
cltd
popa
jns
pop
fists
sub
popa
into
shlb
loopne
ret
sub
jbe
outsl
or
dec
and
pop
or
imul
testl
mov
adc
mov
adc
dec
xor
lcall
es
aas
sub
or
and
test
cmp
out
imul
push
cmp
jne
subl
inc
jbe
and
inc
cmp
ret
shlb
pop
repz
xchg
cmp
out
es
and
clc
and
mov
ss
int
ss
mov
mov
cmp
lret
sub
mov
jnp
js
pop
pop
mov
data16
pop
mov
out
dec
jle
hlt
test
mov
mov
sbb
dec
outsl
sub
xor
xchg
push
cli
repz
cmp
cmp
push
jo
mov
push
cld
dec
out
dec
dec
mov
lods
cli
std
pop
scas
pop
pop
sbb
out
xchg
aaa
push
hlt
pop
pop
cwtl
out
adc
gs
ljmp
cmp
ja
cld
rorb
dec
cmpsl
mov
cmp
cli
loop
jg
mov
incb
lods
add
xchg
out
shll
insl
mov
aam
and
jo
mov
loop
fadds
inc
outsb
push
or
and
sahf
cs
mov
call
cmp
dec
lcall
rcrb
lahf
out
inc
adc
sbb
and
push
ljmp
inc
and
loope,pt
push
inc
or
scas
call
jno
jmp
std
push
jp
hlt
cmp
clc
daa
and
rorb
sub
mov
jmp
mov
sbb
mov
mov
in
into
sti
pop
xchg
sbb
pop
hlt
cs
sbb
inc
mov
addl
pop
push
mov
lock
mov
push
fisubrs
sbb
mov
pop
sarb
pushf
pushf
mov
lcall
jmp
scas
repnz
jne
fdiv
fwait
cmp
scas
stos
sbb
and
xchg
jge
cmp
sub
and
ret
enter
stos
mov
mov
mov
lcall
mov
in
inc
popf
insb
subb
cmp
mov
push
xor
shl
int
mov
push
fnstenv
add
pop
fcmovb
dec
mov
and
je
xchg
cmp
sbb
fmuls
dec
xor
mov
mov
pop
push
test
cld
into
ds
nop
mov
bound
divb
outsl
into
into
fs
mov
hlt
shrl
adc
sbb
lret
pusha
mov
or
int3
pop
movsb
jb
mov
mov
test
inc
out
inc
adc
lret
sbb
jae
movsl
mov
jle
outsl
in
outsb
push
xor
sbb
ja
mov
mov
mov
shlb
jae
outsl
jge
pop
inc
enter
add
pushf
and
paddw
cmp
and
and
xchg
out
jge
fcmove
xor
pushf
adc
cmp
pop
cmpsl
jne
jns
scas
jae
adc
mov
mov
jo
outsb
pushw
mov
cld
cmp
repz
xor
aas
mov
inc
add
loop
test
xchg
call
xchg
stos
xor
jne
pushf
inc
cmpsb
outsl
call
lcall
sub
cmp
dec
iret
mov
push
xor
xor
jge
inc
xchg
jecxz
test
sub
dec
int
xorl
shll
jbe
cmp
mov
ja
sbb
bound
inc
ljmp
mov
subb
outsl
clc
dec
push
ljmp
jns
push
out
jae
mov
sub
lret
push
sbb
pop
je
mov
ret
xchg
jecxz
rcrl
sbb
push
cmpsb
jbe
lahf
jmp
sbb
lcall
test
addr16
push
fcoml
fs
shr
sti
sub
mov
and
jo
and
inc
jbe
adc
subb
mov
movsb
mov
scas
mov
test
sbb
sti
inc
mov
jp
mov
imul
mov
push
mov
testb
ljmp
inc
pop
jl
cmc
push
stos
scas
xor
test
jge
adc
jae
pop
cmp
cltd
sub
jae
dec
pushf
xchg
sbb
outsb
xchg
ficomps
push
xor
jnp
cmp
mov
stos
dec
test
push
in
push
add
push
lock
sahf
add
std
pop
pop
stc
or
mov
ljmp
outsb
or
dec
cmp
xchg
bound
sbb
inc
out
scas
leave
outsb
int3
stos
scas
add
push
daa
pop
loop
mov
shll
push
jecxz
xchg
outsl
ficomps
mov
test
add
lahf
test
push
push
xor
shlb
xchg
data16
mov
mulb
xor
dec
fidivl
cmp
cmpb
and
sti
xchg
mov
mov
sbb
repz
jb
jl
cmp
push
or
sub
jmp
sub
dec
sbb
add
hlt
daa
outsl
or
inc
mov
add
sbb
pop
mov
add
xchg
insl
mov
sbb
mov
daa
repz
ret
adc
jbe
rolb
cmp
ja
in
or
out
fisubrl
xchg
ret
mov
add
xchg
in
push
sub
out
into
xor
into
sbb
mov
fidivrs
shrl
inc
icebp
sub
inc
mov
das
mov
mov
inc
pop
cmp
jecxz
cli
jmp
scas
repnz
lods
insb
insb
sbb
dec
mov
pushf
daa
inc
cmp
and
push
push
cmpsb
rorl
mov
pop
stos
push
sub
popa
addr16
cmp
sbb
into
cmpsl
add
add
out
fidivs
imul
inc
mov
test
jge
mov
or
loop
and
jecxz
cli
repz
mov
mov
mov
subl
jae
cmp
mulb
scas
imul
fisubrl
push
cmp
cmc
ret
mov
sbb
call
fsubr
xchg
mov
js
mov
xchg
test
pop
mov
inc
sub
sub
mov
and
lock
sbb
lahf
arpl
lea
sub
cmp
jge
sbb
jmp
movsl
dec
lds
arpl
or
divb
stos
push
loope
xchg
pop
cs
std
fimull
leave
test
pop
test
mov
lods
xor
sbb
and
xchg
sbbl
sub
xchg
lds
sbb
dec
pop
add
add
adc
shr
push
push
aas
push
lahf
mov
pop
sahf
mov
push
adc
fimull
xchg
mov
xchg
mov
leave
into
loopne
mov
mov
es
addr16
xchg
ret
popa
push
mov
jo
add
and
test
outsb
adc
push
addr16
fwait
push
jmp
jmp
loope
push
ljmp
enter
jp
jl
iret
popfw
sub
xchg
out
xchg
jo
xor
enter
add
jo
sbb
or
dec
out
daa
push
jge
add
pop
jle
pop
outsb
jg
orb
cld
xlat
sub
pop
and
and
popf
xchg
movsl
sbb
pusha
es
mov
adc
ja
add
fidivrl
cmpsl
mov
stc
inc
les
cmpl
cmp
fidivrs
int3
fs
mov
leave
sbb
dec
mov
jecxz
sbb
sbb
inc
add
ss
fisubl
fsubr
inc
and
xchg
loop
cli
movsbl
pop
jmp
mov
in
cli
and
sub
ds
inc
inc
xchg
and
imul
add
fmuls
dec
mov
dec
clc
xlat
dec
sti
push
cli
es
rclb
and
cmc
in
or
jae
cwtd
xor
dec
pop
ss
gs
or
pushf
xchg
cmp
testb
jae
test
inc
and
shrl
daa
out
and
add
pop
xchg
push
fidivl
cli
out
sbb
inc
dec
cmpb
orb
xchg
fs
ja
push
pusha
dec
fdivrl
adc
loope
nop
jo
jp
jge
movb
xchg
ret
xchg
jno
stos
stos
inc
xor
add
stc
xor
pop
aad
sbb
cmp
in
dec
fdivr
mov
jmp
xor
dec
loop
mov
cltd
sbb
push
push
rorl
xchg
and
and
jno
test
out
insb
orb
xchg
inc
mov
push
ss
repz
out
fiadds
movsb
push
int3
mov
push
xchg
push
jmp
fsubr
dec
mov
xchg
ljmp
mov
test
mov
xor
sbb
inc
stos
xchg
pop
daa
mov
jne
dec
push
xchg
movsl
adc
cs
fdivrs
out
mov
insl
add
sbb
je
inc
test
mov
or
mov
std
push
fidivl
pop
scas
sub
nop
and
lds
xchg
cmp
inc
in
pop
ret
daa
out
mov
subl
jg
sub
jo
adc
imul
jg
pusha
jb
dec
jo
fwait
xchg
push
sub
mov
or
fsubrs
mov
or
sub
cmc
bound
xchg
in
adc
sbb
sbb
fistpl
lret
sub
mov
xchg
adc
leave
push
in
outsb
xchg
outsl
es
orl
jmp
push
push
in
call
push
cli
and
sahf
jbe
jp
sbb
jmp
mov
cwtl
inc
adc
inc
adc
mov
lock
sbb
dec
fidivl
aaa
inc
push
push
inc
sti
sbb
faddl
jp
rcll
orb
je
test
push
jns
clc
repnz
je
and
mov
test
inc
mov
dec
cmp
ds
mov
mov
jmp
xlat
mov
shrl
dec
mov
add
sbb
pop
rcl
arpl
imul
jmp
sar
jb
ret
adc
mov
sbbb
mov
cmpb
imul
fidivrs
cmp
scas
sub
into
inc
aad
dec
jmp
add
sub
and
sbb
jmp
jmp
enter
adc
mov
aaa
pushl
or
je
cmpl
sub
fldz
out
xor
incb
sti
xchg
jns
arpl
push
jmp
ret
bnd
js
imul
popf
out
push
fwait
pop
leave
push
add
sbb
xchg
arpl
fs
sbb
jnp
add
pop
inc
das
pop
and
inc
ds
je
adc
mov
xchg
icebp
dec
out
inc
mov
and
enter
lock
jp
outsb
test
dec
and
mov
and
fs
out
dec
data16
sbb
pop
cltd
adc
dec
mov
mov
jo
addr16
data16
test
inc
sbb
and
inc
cmp
mov
sub
cli
mov
sbb
ds
mov
cli
cmp
mov
xchg
jmp
es
out
push
popa
push
pop
xor
mov
xor
aam
ljmp
outsl
sub
outsb
xchg
lds
cmp
jmp
pop
xchg
mov
aas
imul
sub
enter
hlt
andb
xchg
jns
pop
inc
aaa
xchg
fisubrs
adc
mov
das
in
mov
fcmovb
add
sub
int3
stc
push
jmp
xor
data16
rorb
leave
rorb
jo
sti
shll
pushf
push
push
inc
pop
inc
or
repnz
jmp
lea
and
and
out
aaa
aaa
mov
dec
pop
push
dec
mov
insb
sub
mov
fdivl
pop
out
out
arpl
cmp
cltd
and
xor
mov
in
mov
leave
ljmp
leave
pop
outsl
cmp
dec
popa
mov
daa
jo
cmp
pop
shl
decl
cmp
xor
cmp
lods
xchg
pusha
inc
add
fstpl
push
jmp
imul
aaa
loop
or
add
xchg
dec
and
push
cmp
sti
mov
or
mov
scas
inc
fcmovnu
fbld
mov
aaa
mov
fs
arpl
inc
shlb
mov
ret
andl
jnp
cmp
fldenv
and
and
mov
jo
fs
pusha
dec
leave
push
jno
xchg
or
repnz
fstp
and
stc
loopne
ljmp
mov
push
inc
mov
mov
push
cli
lret
into
sub
inc
jp
sti
loopne
sbb
push
push
insb
bound
leave
sahf
mov
data16
das
cmp
outsb
jo
and
out
aaa
mov
std
push
out
aaa
xor
dec
mov
or
pop
call
jmp
outsl
jl
test
cltd
lds
imul
or
dec
loopne
idivl
cld
out
push
stos
stos
pop
cmp
out
sub
ds
xor
xor
aad
ja
std
and
movb
sbb
push
add
outsb
mov
mov
stc
rcll
test
dec
dec
pop
insb
clc
or
push
adc
cli
jnp
jno
pushf
jle
pop
and
or
mov
lret
pop
scas
mov
aaa
mov
jge
addr16
jne
xor
mov
mov
outsl
mov
adc
pop
push
test
fdivr
cltd
flds
cmc
push
cmp
xor
leave
lret
jns
inc
push
enter
mov
and
push
dec
xor
js
xchg
mov
xchg
jo
mov
lcall
xor
pop
adc
xchg
jae
aaa
insb
cwtl
pop
mov
jo
push
cli
jmp
push
stos
xor
mov
imul
push
mov
hlt
dec
sub
pushf
adc
mov
ss
icebp
out
mov
icebp
pop
loope
adc
push
call
fisubrs
push
mov
ja
cmp
test
stc
adc
mov
or
xchg
dec
test
arpl
push
cmp
mov
or
push
cmpsb
int
aaa
jg
imul
cld
add
sub
sub
jo
addr16
push
adc
daa
pop
dec
repz
scas
pop
cmp
add
fisubl
movsl
inc
jbe
jl
cli
sete
ficomps
inc
or
outsb
xlat
into
outsb
xchg
mov
jns
lahf
mov
and
sbb
fdivp
add
mov
or
and
sahf
adc
mov
pop
push
fs
jbe
mov
cmp
and
mov
pop
sub
adc
inc
or
push
int3
mov
sub
cs
xchg
dec
dec
and
arpl
mov
cmp
jae
inc
sbb
mov
imul
bound
adc
cmp
imul
pop
stos
adc
test
sbb
jg
xchg
cmp
mov
das
add
push
push
dec
add
ret
push
cmp
mov
pushf
pushf
imul
mov
je
push
outsb
cmp
std
xlat
push
push
ss
xchg
add
fsubrp
int
fists
xchg
lea
adc
add
hlt
adc
pop
stos
mov
and
aaa
daa
loopne
and
stc
divb
lret
testb
xor
mov
jb
dec
clc
push
jg
xchg
add
xacquire
sbb
jge
out
adc
sbb
in
jg
out
jecxz
jecxz
inc
jg
push
leave
bound
inc
roll
stos
in
gs
cmpsb
mov
mov
mov
lds
inc
lods
out
xchg
add
sub
jne
push
call
mov
in
mov
stos
xchg
push
xchg
jnp
push
fwait
daa
sub
cmp
loopne
push
jmp
imul
pop
mov
sbb
push
jge
popf
test
push
xchg
mov
fsubrs
xrelease
mov
inc
and
and
outsl
loope
sbb
jne
in
lods
scas
inc
ja
pop
push
insb
repz
lret
pop
jo
sbb
xor
xor
test
push
movsl
jl
push
rorb
lret
and
mov
shlb
movb
aas
mov
jb
xor
jb
movsl
dec
mov
mov
dec
insl
jecxz
sarb
cmc
dec
imul
sub
and
je
mov
cwtl
leave
cmp
sub
cmpsl
cmpsb
push
jo
jnp
out
int
ljmp
roll
sbb
and
sbb
cwtl
clc
pop
mov
cmp
mov
jmp
and
and
mov
daa
into
loope
sub
stc
lcall
mov
pushl
cmp
out
ret
inc
lahf
nop
cld
leave
pop
lds
sbb
rcrb
or
xchg
pop
push
cmp
jg
sbb
push
cmp
dec
rclb
filds
addr16
call
lods
xchg
inc
jb
sti
push
jmp
fisubl
jbe
ds
jae
bound
or
out
jae
mov
pop
clc
push
lea
adc
jo
bound
lds
repnz
mov
sahf
mov
adc
imul
pop
test
cmp
lcall
call
lcall
inc
mov
inc
das
jno
mov
add
rorl
pop
inc
cmp
rclb
sub
dec
stos
ret
hlt
into
test
lahf
pop
xchg
dec
repnz
xor
dec
gs
sbb
mov
es
jae
daa
xor
addb
insb
jno
int
and
jo
add
mov
decb
adc
pop
imull
cwtl
int3
fidivl
hlt
and
xor
sti
bound
popa
out
dec
sbb
iret
aas
pop
insl
cmp
imul
inc
fxch
mov
dec
outsl
or
lret
cli
jle
cli
xor
stc
arpl
xchg
jg
xchg
cwtl
sbb
call
movsb
movsb
call
push
sbb
cmp
hlt
stos
notb
cld
stc
imul
inc
scas
leave
out
pop
in
adc
xchg
test
out
loopne
mov
mull
fldl
ficomps
jl
sbb
pop
inc
pop
int3
inc
xchg
inc
sub
syscall
loope
inc
cmp
mov
dec
or
pop
push
fadd
jmp
push
imul
xchg
pop
sarb
cmp
push
subl
and
xchg
mov
imul
xor
and
cwtl
jb
iret
adc
sub
cmp
jmp
cmc
out
mov
cmp
int3
call
repz
jns
popf
ret
rclb
addl
and
fmuls
or
sbb
and
jp
mov
dec
push
jl
xor
pop
xor
out
dec
dec
imul
pop
mov
ja
movsb
testb
push
push
hlt
mov
jp
sbb
hlt
imul
push
or
sbb
rorl
jns
xor
cmpsl
cmc
cmpsb
out
ret
jbe
add
fs
stos
outsb
ja
call
cmp
cmp
test
dec
sbb
les
and
leave
cld
cli
jmp
repz
jp
gs
nop
push
inc
cmp
ss
sbb
cmc
test
push
push
mov
insb
mov
fmuls
sbbb
sbb
jo
loop
push
xchg
arpl
popf
int
push
add
xchg
mov
or
cli
cmp
loope
push
or
inc
repz
cli
lds
xchg
push
jo
out
shr
lock
out
fdivrl
sbb
mov
xlat
cmp
mov
pusha
pop
inc
add
adc
daa
aam
inc
popa
hlt
call
aam
or
pop
jecxz
push
mov
cmp
push
adc
jno
mov
popa
sbb
int3
mov
loop
fidivl
mov
jmp
mov
mov
neg
cmp
cltd
data16
dec
and
movsl
hlt
xchg
xchg
dec
push
adc
sbb
pop
mov
sbb
and
test
aaa
xchg
jae
push
mov
sub
dec
push
fidivrl
push
ret
arpl
push
rorb
aaa
addr16
sub
jae
mov
jns
inc
mov
and
data16
adc
mov
xchg
cltd
mov
mov
mov
inc
mov
jmp
cmp
mov
lret
sub
sbbb
lods
nop
mov
pop
pop
aaa
mov
jmp
mov
adc
inc
pop
aam
inc
push
mov
adc
rcll
loop
dec
sbb
mov
dec
aad
mov
dec
xchg
mov
ss
cmp
push
add
xlat
ljmp
repnz
dec
das
jbe
cmp
push
push
cmp
mov
jne
cmp
add
cli
jl
shlb
sbb
mov
jmp
sub
sti
addl
pop
test
inc
pop
daa
xchg
xor
push
cmc
outsl
sbb
sub
jp
in
fidivrl
sbb
jmp
aaa
xchg
adc
mov
cmp
jns
stc
xlat
mov
mov
push
cli
in
hlt
fcmove
pushf
fimuls
jp
ja
xor
push
sbb
dec
loopne
je
pushf
sbb
push
pop
hlt
lcall
lds
jmp
jg
sub
or
pop
sbb
add
gs
ja
xchg
mov
jne
decl
dec
pop
fwait
adc
sti
and
jle
fwait
mov
jo
scas
add
inc
adc
enter
hlt
adc
sub
rclb
cltd
jg
sahf
sahf
cli
out
push
mov
cltd
outsb
xchg
inc
pusha
mov
and
push
xchg
jb
ret
stc
add
mov
lds
mov
cmp
sbb
outsl
and
leave
sahf
sahf
pushf
cmp
and
push
push
int3
sti
lods
cmpsb
push
stos
inc
je
rcrb
pop
sbb
add
mov
mov
inc
jmp
cmpsb
jns
mov
pop
sub
arpl
lods
js
mov
xor
out
int
push
adc
jle
inc
pop
and
std
jb
dec
ja
add
pusha
loopne
xchg
xchg
xchg
stos
cmp
aaa
xor
sbb
or
xor
lret
mov
sub
leave
and
pushf
ja
shr
inc
in
xchg
and
je
sahf
jle
or
fnstcw
mov
loop
sub
lods
or
test
mov
cmp
xor
scas
imul
xchg
stos
mov
mov
outsb
dec
and
sub
addr16
loope
dec
into
push
sti
dec
jne
mov
mov
psrld
jae
loope
pop
into
insb
xchg
lea
push
jae
int3
jp
sub
cwtl
cmp
xchg
pusha
xor
lds
adc
sbb
shrl
loopne
andb
clc
xlat
and
mov
inc
fldenv
dec
xchg
inc
push
movsl
adc
push
test
jnp
mov
in
dec
enter
cld
push
push
clc
inc
pushf
jg
mov
and
pop
adc
hlt
sbb
shrb
divb
and
sbb
or
mov
fsubl
stos
jno
and
jl
or
popf
lret
test
push
sub
or
repnz
add
xchg
dec
push
stc
test
pop
push
mov
adc
mov
add
imul
jp
xchg
lock
daa
mov
ljmp
adc
dec
jbe
xchg
or
sub
cli
inc
sbb
fisttpll
shrl
adc
js
push
jae
jo
ss
sub
cmp
push
and
nop
sbb
iret
mov
nop
sbb
jno
xchg
dec
pop
jae
jmp
int3
scas
or
mov
inc
not
xchg
cmp
jns
pop
push
insb
cwtl
or
jl
imul
mov
and
aaa
imul
inc
xorl
or
out
aaa
subb
cmp
xchg
inc
inc
inc
jmp
fdivrs
lret
cmp
sub
jae
out
imulb
lock
sub
xor
sub
mov
inc
es
cmp
adc
inc
je
dec
int3
add
jo
mov
push
ret
sbb
bound
pop
or
scas
and
cs
sub
cli
inc
or
out
mov
pop
fidivl
inc
cli
ret
fsts
cmp
and
mov
nop
mov
daa
es
mov
pop
repz
add
cld
mov
cmp
dec
dec
pop
scas
and
mov
jbe
push
sbb
and
cltd
mov
ljmp
add
inc
sti
push
leave
mov
lret
xor
js
mov
ficompl
enter
repnz
int3
and
aas
call
popf
dec
pop
adc
pop
cld
add
daa
jae
and
jno
fsave
cltd
ljmp
cmp
repnz
and
mov
sub
xor
dec
ret
jp
aaa
loope
cmpsl
test
fs
inc
mov
mov
lock
and
sti
push
xor
mov
test
sarb
adc
mov
addr16
icebp
das
jo
and
int3
std
enter
cli
fistpll
lds
sbb
and
aad
out
icebp
andb
out
adc
push
pop
mov
push
and
cmp
mov
sub
cltd
mov
dec
pop
sbb
fimuls
popf
lahf
jnp
inc
adc
xchg
cmp
mov
adc
mov
mov
outsl
loopne
cli
mov
pop
cmc
xor
loopne
icebp
sti
sub
add
ja
push
mov
mov
and
sbb
xor
shr
int3
and
dec
cmp
test
inc
inc
xchg
js
cltd
and
mov
inc
dec
int3
push
mov
xchg
imul
js
lods
mov
mov
mov
cmp
ret
int
xchg
mov
stos
outsb
sub
jp
cmp
int3
lock
lahf
aas
or
cs
add
cmp
pop
enter
mov
push
adc
movsb
jnp
push
push
mov
inc
lds
mov
aam
popf
adc
adc
scas
pop
outsl
pop
xchg
rcl
adc
addl
mov
adc
pop
ss
lock
dec
aas
xchg
daa
inc
mov
aas
mov
sbb
lods
xor
cmp
sub
aad
jl
inc
sbb
push
int3
xor
xor
pop
inc
stos
xor
xor
daa
pushf
mov
mov
mov
scas
rcll
clc
setnp
lock
mov
and
mov
xchg
je
enter
mov
ljmp
mov
fisubs
out
dec
push
lcall
add
inc
push
js
mov
setge
aam
insb
scas
fcmovnbe
cwtl
inc
jl
pop
inc
mov
adc
sub
lea
test
sbb
scas
push
xchg
shlb
or
add
ja
mov
dec
lds
or
nop
fnstcw
mov
out
aaa
sbb
sub
mov
mov
iret
push
shlb
sbb
mov
mov
add
pop
out
sub
xlat
in
jo
fdivrs
shrl
inc
adc
and
mov
imul
movsb
je
and
dec
mov
movsb
sbb
sub
cmp
dec
jo
push
lret
test
sub
es
jns
shll
sahf
movsl
lds
xchg
enter
cmp
cli
mov
xor
or
jecxz
inc
subb
fcomps
pop
mov
jecxz
add
mov
loop
stos
inc
lock
ljmp
mov
jmp
dec
lcall
bound
test
push
push
inc
add
popl
sbb
sub
ljmp
inc
cwtl
pop
cmpl
sub
insb
xchg
arpl
ret
mov
xchg
sub
js
loope
inc
mov
pop
xchg
aam
dec
and
add
sub
stos
xchg
cwtl
sahf
lods
mov
iret
push
jmp
lods
adc
adc
sahf
mov
int
inc
add
cli
pop
push
cmp
sbb
sbb
subl
pop
fistpll
pusha
or
jecxz
xchg
sahf
cmp
cli
cmp
push
aas
cli
or
inc
ss
jb
jns
and
sub
ret
xchg
mov
jo
xor
cmp
pusha
jle
xor
and
jmp
pusha
jnp
and
inc
pop
push
in
aas
mov
addr16
and
dec
pushf
lds
in
jo
cmp
stc
cmc
mov
andb
negb
pop
dec
push
jmp
cmpsl
or
ljmp
dec
dec
pop
push
stos
out
xchg
mov
outsb
int
sbb
xchg
mov
stos
push
fnsave
scas
cltd
shll
fldcw
or
mov
aaa
add
xchg
dec
sbb
sub
imul
movlps
scas
pop
xor
mov
jns
xchg
test
dec
daa
inc
addr16
jb
idivb
lds
call
test
aaa
adc
ficompl
sti
or
jmp
out
hlt
mov
pop
inc
cld
adc
cmp
jb
cmp
imul
mov
adc
or
rclb
sub
call
mov
imul
xchg
pop
cli
jae
and
cmp
cld
cmovnp
mov
sarb
test
in
shll
mov
mov
push
cld
adc
cltd
adc
loope
es
fldenv
mov
jg
sub
negl
pop
ror
jns
ficomps
mov
clc
sbb
es
das
mov
aam
negb
cld
addl
aam
hlt
adcb
fsubrl
push
add
scas
scas
jb
popa
fldcw
aaa
mov
sub
mov
sbb
loope
pop
arpl
mov
cmpsl
arpl
cmp
cltd
pop
pop
aad
pop
bound
adc
sub
pop
push
inc
or
jge
xchg
ss
fs
dec
insb
or
adc
jb
outsw
xor
mov
xchg
push
mov
int
cld
ss
mov
mov
outsb
mov
cli
fcmovb
mov
mov
shlb
inc
nop
in
pop
lahf
cmpsb
sub
xchg
iret
mov
lahf
je
lret
loop
push
mov
jns
dec
scas
mov
mov
fadds
lret
fimuls
scas
mov
push
and
pop
mov
mov
pop
lret
stos
cmpsl
subl
lds
outsl
shl
mov
xor
cmc
mov
mov
in
notl
mov
mov
xor
and
mov
imulb
jns
cmp
and
call
inc
sbb
ds
push
cmpsb
pop
jl
or
sbb
idivb
inc
push
cmp
es
enter
adc
jp
hlt
ljmp
fidivl
out
mov
xchg
insl
int3
roll
pusha
xchg
xor
push
mov
cmp
mov
inc
pop
xchg
ja
mov
sub
xor
lds
mov
push
ds
dec
cld
repz
mov
or
cmp
push
clc
flds
bound
mov
outsb
sbb
xor
movsl
fcomps
inc
mov
mov
push
jo
imull
or
clc
movsl
sbb
mov
pop
push
lea
pop
sub
xor
lret
xchg
push
lcall
mov
cmpsb
lds
mov
sub
dec
xchg
push
inc
repnz
hlt
pop
mov
rclb
cld
fidivrs
add
sbb
arpl
ret
fisubl
popf
and
ljmp
stc
in
jns
cmp
inc
cwtl
insl
insl
jp,pt
rorb
dec
inc
hlt
sub
popa
fs
aam
push
cmpsl
pop
insb
bound
aas
scas
mov
in
cwtl
xchg
jp
jl
push
xchg
push
and
and
xchg
jne
mov
mov
mov
testl
push
sbb
orl
enter
leave
mov
in
push
and
or
stos
inc
imul
ljmp
fs
pop
mov
into
lret
shrl
dec
jne
fiaddl
sti
push
inc
mov
inc
add
fidivl
jecxz
fimull
sub
movsb
push
cmp
inc
movsl
dec
sahf
jb
add
sub
mov
pop
test
dec
lds
mov
push
pop
sbb
mov
in
pop
dec
mov
push
mov
arpl
push
xor
dec
pop
push
ljmp
push
out
xchg
sarl
inc
jnp
es
test
dec
fsubrs
ljmp
mov
pop
jo
rolb
inc
sbb
xchg
sahf
aaa
mov
push
mov
pop
stos
add
lock
adc
pop
pop
xor
mov
lods
mov
mov
mov
rolb
imul
dec
psadbw
cmpsb
mov
cmp
test
sahf
push
outsb
lret
data16
sahf
push
addr16
ret
bound
jp
lods
xor
sarl
rorb
pop
dec
pop
pop
fiaddl
out
push
repz
sbb
gs
fstl
mov
stos
xor
ja
repnz
lea
adc
aas
push
bound
out
daa
lcall
cmp
dec
out
test
lods
pop
or
sbb
lock
xor
cmc
xchg
mov
sub
jae
and
add
mov
inc
add
outsb
pop
push
adc
jb
mov
xchg
rorb
int3
inc
test
arpl
and
adc
jecxz
add
sub
mov
cwtl
mov
nop
ret
fsubrs
stos
mov
dec
sub
gs
cli
mov
stos
jae
jmp
sbb
cmp
jno
mov
and
and
or
xchg
xor
sbb
or
pop
repnz
sarl
sbb
jns
mov
cmp
stc
sbb
mov
jae
mov
mov
lahf
iret
imul
je
xor
int3
adc
mov
xchg
outsl
mov
dec
movsl
adc
pushl
ds
rorl
push
adc
inc
aas
adc
jae
mov
outsl
jle
idivb
or
cli
iret
cli
push
add
mov
push
sub
loope
or
mov
shll
je
and
cs
jg
or
or
sbb
popa
mov
mov
push
mov
pop
fisubl
inc
das
cmp
ljmp
mov
sub
gs
not
aad
in
out
and
inc
sbb
rcll
cltd
fmull
sub
pop
std
fwait
subb
pop
lret
mov
mov
in
cmpsb
shll
jecxz
call
ds
sub
sbb
push
lret
or
jmp
daa
sub
outsb
jo
loopne
mov
mov
cmp
test
divb
dec
xor
push
and
das
dec
es
repnz
js
jg
jmp
loopne
cli
out
loope
sub
dec
mov
dec
add
adc
mov
ljmp
adc
lret
pop
jle
push
out
xlat
xchg
test
test
inc
xor
mov
add
lds
dec
jb
pop
inc
jbe
mov
lea
out
loop
test
mov
jae
insb
add
sahf
es
lds
pusha
xchg
push
cmp
orb
and
or
repnz
fs
cmp
dec
dec
cltd
popa
pop
fbstp
sub
sub
movsl
bound
add
push
sti
ret
inc
stos
or
inc
push
and
out
aas
addr16
fisubl
mov
dec
mov
push
aaa
push
ja
mov
pop
ds
mov
pop
jp
test
inc
insb
cmp
push
xchg
cli
sub
je
push
test
xchg
movsb
xchg
notb
outsb
aas
inc
xor
popf
imul
lcall
push
lock
inc
loopne
nop
imul
nop
push
dec
mov
aaa
mov
dec
scas
jp
repz
das
out
xchg
xor
loope
or
cmp
inc
sbb
aas
push
sub
sub
out
jae
push
rcrl
jnp
fidivrl
shlb
imul
sub
sbb
push
je
and
push
data16
inc
sbb
sbb
push
cmp
roll
xchg
sbb
lahf
inc
pop
cltd
cmc
xor
add
xchg
fwait
movsl
cmc
sarb
mov
in
jo
sbb
cmp
cwtl
add
push
jmp
inc
mov
in
inc
sbb
and
add
push
rol
loopne
fs
mov
inc
pop
add
or
sbb
shrb
fcoms
xchg
sub
idivl
aas
aad
scas
jb
lcall
in
out
cmpsl
ss
out
divl
adc
lret
negb
in
outsl
test
pushf
jge
ss
ds
or
aaa
fisubl
mov
fistps
xchg
repz
std
cmp
push
dec
adc
push
subb
repnz
call
push
aaa
pushf
out
mov
push
jl
addr16
dec
mull
cltd
loopne
cli
out
mov
out
push
xor
push
out
inc
cmp
test
outsl
sbb
cmpsl
addr16
jp
push
cmpsl
push
push
xchg
dec
das
sbb
mov
je
cld
push
sbb
stos
scas
cli
push
leave
and
mov
into
xor
daa
out
mov
les
inc
and
xchg
lret
lret
shrb
and
pop
mov
jge
cmpsb
int
sbb
shll
sbb
or
shll
jne
test
mov
xchg
xchg
mov
pop
outsl
sar
mov
es
dec
cli
push
loop
arpl
mov
sbb
push
sub
shlb
inc
aam
cmp
mov
dec
dec
xchg
sbb
popa
sbb
mov
arpl
jp
mov
fimuls
and
dec
jmp
mov
movaps
xchg
mov
leave
xor
vrcpps
mov
cmp
xchg
xchg
jg
jecxz
mov
clc
or
mov
and
mov
ret
pop
pop
pop
sbb
insl
add
sub
inc
arpl
pop
ja
into
xchg
loop
cli
sbb
sub
mov
pop
add
xchg
bound
cld
sahf
cmp
pop
xor
nop
or
fisubs
sbb
and
inc
sbb
push
and
imul
or
sahf
inc
jecxz
adcl
rorb
mul
test
mov
and
xchg
loope
fcmovnb
cs
and
inc
sbb
sbb
shll
sub
pop
shlb
outsb
imul
or
jnp
dec
xor
and
dec
decl
mov
lea
jmp
jl
mov
mov
jl
inc
pop
lods
cmp
cmp
xchg
out
push
mov
in
push
repnz
xchg
or
pop
push
sbb
imul
aas
loope
mov
ret
rorb
dec
adc
lret
mov
pusha
scas
jp,pn
inc
add
mov
sbb
lahf
mov
sub
mov
ja
inc
inc
es
das
sub
xchg
xchg
mov
mov
xor
das
sub
pop
ficompl
mov
notb
pop
popf
sbb
pop
cmp
mov
xchg
call
imul
inc
inc
rorl
scas
bound
fwait
bound
mov
cmp
mov
hlt
imul
lahf
cmc
cmp
xor
sub
xchg
aas
mov
or
ja
loopne
mov
call
jo
mov
cmp
push
pop
fildl
mov
xchg
push
push
sti
pop
outsl
cli
adc
inc
mov
sub
loope
xor
xor
push
bound
data16
dec
jmp
loope
add
and
dec
push
incb
adc
mov
add
aas
push
push
jb
fdivp
and
ret
mov
sub
xor
push
sbb
jns
ja
inc
or
iret
cmp
std
ret
shlb
pushf
or
mov
dec
movsb
sub
in
fs
xchg
mov
and
mov
loope
jl
add
rol
push
push
inc
test
ret
add
push
leave
orb
pop
leave
jne
sahf
loope
xor
inc
dec
adc
cmpl
mov
lcall
jge
lods
pop
inc
and
xchg
sbb
lea
push
xchg
pop
rclb
nop
cmpsb
mov
mov
and
mov
test
xor
jae
and
repnz
xchg
inc
xor
sbb
stos
outsb
mov
enter
xor
push
add
sub
fsubrl
mov
pop
xor
push
jmp
je
in
push
sbb
fdivrl
repnz
aad
jmp
push
cmp
fsub
iret
and
cwtl
sbb
out
jb
or
xor
jp
leave
jbe
je
pop
jae
push
leave
fsubr
xchg
or
adc
pushf
loop
fwait
ds
pop
push
jl
mov
sub
dec
cmp
mov
jne
cmc
xchg
roll
mov
sub
fcomip
xchg
pushf
mov
call
cwtl
in
negb
xor
inc
dec
sbb
adc
xor
sbb
fisttpl
sbb
je
shll
mov
mov
pop
in
sahf
loopne
and
dec
movsb
push
dec
push
je
push
dec
sbb
insl
jb
push
and
jmp
and
dec
sarl
lret
pop
insl
jb
xchg
movsb
adc
out
mov
cwtl
sub
leave
sahf
sbb
dec
movsl
xchg
pop
pop
test
mov
mov
mov
fdivr
inc
ficomps
test
mov
pop
test
in
test
pop
popf
adc
dec
insb
xor
dec
lret
jne
jmp
adc
hlt
loope
lea
lock
mov
pop
cmp
mov
jbe
data16
and
scas
imul
push
mov
add
push
in
sbbl
ljmp
dec
mov
pop
pop
jae
lahf
int3
pushf
pop
push
jmp
inc
ljmp
inc
rolb
nop
call
jo
pop
xchg
jmp
or
test
xchg
adc
pop
insb
fnstcw
adc
pop
ds
mov
int
test
cltd
ret
cmp
hlt
adc
popa
ljmp
fstpl
inc
mov
out
aad
fsubrp
aad
jb
nop
jp
shrl
inc
stos
stc
ret
and
idiv
sub
dec
lods
fwait
inc
adc
shl
lcall
je
shrb
repnz
mov
arpl
mov
push
add
loop
push
addb
or
push
insb
push
mov
in
pop
mov
mov
jo
push
cltd
std
pop
imul
mov
and
adc
xorb
fldt
lret
sub
jb
xchg
inc
push
xchg
xchg
dec
sub
sbb
ss
stc
leave
push
cmp
mov
add
cs
loopne
or
addl
adc
mov
inc
jnp
imul
xor
and
or
leave
cmp
push
xor
lea
sub
sbb
pop
inc
test
jecxz
test
cmp
mov
cwtl
adc
push
fstpt
subb
xchg
mov
mov
hlt
notl
and
push
pop
add
test
loopne
mov
test
pushf
repz
stc
xlat
push
ds
aam
mov
adc
dec
adcl
sarb
imul
clc
mov
inc
sbb
lret
lea
addl
sbb
ds
inc
popa
ss
jo
sbb
jo
xor
mov
das
cmp
outsl
popa
cmp
insb
insl
pop
inc
dec
ljmp
imul
mov
mov
jl
xor
sbb
push
fidivs
data16
xor
cmpsl
fwait
xor
std
mov
push
mov
repz
iret
bound
inc
xchg
mov
and
dec
shlb
popf
sub
sbb
mov
idivb
ffree
sub
fists
scas
icebp
cli
pop
pop
jl
insb
fstpt
xchg
jne
or
lahf
pop
imul
ret
jmp
imull
xchg
jnp
sub
dec
inc
test
or
adcl
cmpsl
and
cmp
fimull
sub
dec
cmp
pop
mov
ret
fnstcw
cwtl
sub
loop
fimuls
mov
fdivl
push
mov
mov
jo
and
sar
cmp
cmp
test
andb
in
aam
testb
insl
add
ds
adc
push
pop
jg
or
jb
fcmovbe
mov
sub
dec
add
nop
lahf
pop
xor
stos
popf
add
mov
sti
cli
lahf
repz
enter
push
popa
xor
sub
arpl
cmp
dec
adc
or
cmp
js
fidivrl
fldcw
mov
push
lods
pop
pop
add
sarb
xchg
inc
sub
stos
stc
lds
scas
test
jbe
mov
dec
inc
push
xor
cltd
lcall
mov
ljmp
sub
inc
bound
les
xchg
test
fs
lret
push
scas
pushf
push
pushf
call
test
aas
xchg
repz
cmp
loopne
xlat
inc
cmpb
adc
ds
ljmp
leave
adc
sbb
dec
pusha
repnz
in
pop
icebp
ss
inc
xchg
adc
test
push
mov
cmp
les
out
ret
mov
xchg
mov
dec
movsb
repz
cmp
fs
rorb
pop
push
dec
sbb
or
rcrl
push
and
xchg
sti
lock
pushf
jns
mov
lcall
stc
divb
sub
sub
je
inc
outsb
lret
pusha
and
dec
adc
lcall
pop
mov
je
xchg
in
js
mov
test
imul
ds
or
scas
movsl
jge
das
rcrl
and
pusha
loope
or
add
xor
cmp
lds
scas
inc
shll
push
jo
sub
xor
fwait
scas
and
mov
and
adc
jg
fiadds
and
cmp
idivb
inc
rorl
sbb
inc
dec
or
outsl
adc
jmp
daa
mov
cmpsb
jle
dec
mov
loope
adcl
jae
outsl
jnp
adc
xor
stos
lret
dec
mov
pushf
in
xchg
push
cmp
jno
movsl
cmp
test
gs
xchg
ret
push
push
push
and
lret
mov
adc
imul
push
ds
ret
mov
addr16
and
sub
jno
jle
pop
push
xchg
jg
push
fistpl
clc
icebp
jo
sarl
cltd
mov
and
out
xchg
sub
pop
lds
jns
pop
pop
pusha
or
and
add
aad
inc
ret
xchg
inc
enter
popf
add
mov
sarb
out
pop
add
pop
repz
xor
fstl
mov
nop
xor
lea
clc
lock
mov
cmc
lret
jbe
mov
mov
jmp
mov
jl
push
loopne
or
jecxz
ljmp
into
sub
jmp
sbb
call
push
popf
ficomps
xchg
mov
pop
in
iret
int3
adcl
and
andb
mov
cmp
sbb
aam
out
adc
out
mov
outsb
cs
ret
shlb
mov
push
out
inc
mov
test
cmp
jecxz
xchg
sub
push
fidivrs
sbb
imul
mov
out
pushf
fsubrp
xor
ret
sbb
jb
rol
jbe
pop
ja
mov
pop
aas
fistl
inc
shr
and
adc
mov
mov
test
dec
push
divb
dec
sub
sub
xchg
xor
jb
sar
mov
adc
scas
out
xchg
rol
mov
mov
push
mov
dec
add
jae
lds
push
inc
in
jg
push
sub
mov
pop
orl
cmc
sub
imul
imul
push
daa
xchg
cmp
or
test
enter
pushf
insb
mov
hlt
fistl
mov
ss
push
jle
mov
inc
mov
sub
xlat
xchg
in
and
mov
xor
in
mov
sbb
adc
es
or
test
dec
dec
sub
push
cmpsl
fwait
enter
and
test
je
mov
and
lods
loopne
adc
ret
xlat
mov
sub
push
shrb
pusha
mov
mov
mov
mov
mov
adc
ret
fisubrl
adc
outsl
lea
cmpsb
ret
sti
pop
mov
pusha
mov
xor
push
jno
insb
mov
inc
adc
sahf
sarl
clc
inc
mov
jb
or
add
mov
and
fcompl
rcrl
hlt
xorl
xor
inc
je
or
lds
xor
fisubl
sbb
add
dec
adc
inc
movsl
inc
adc
xor
add
scas
or
mov
fwait
repnz
test
xchg
adc
repz
mov
cld
mov
jne
xchg
test
cmp
pop
add
add
mov
incb
in
scas
jmp
xchg
xchg
ret
sub
fldt
rcl
loopne
push
push
int3
and
cmp
pop
js
inc
nop
rcrl
xor
lods
imulb
lock
shlb
pushf
mov
jae
and
mov
xlat
sbb
and
stos
lods
loope,pn
cmp
and
cmp
jae
cmp
xchg
sbb
cmp
adc
insb
jo
adc
fsubs
cli
data16
cltd
xchg
jle
sahf
push
stc
inc
pop
std
cs
xchg
push
addr16
pop
jo
test
jno
rorb
pusha
sub
insb
xchg
xor
push
mov
inc
xchg
sbb
sub
out
insb
sbb
jnp
add
mov
orl
movb
push
xor
xchg
das
sub
push
xchg
pop
in
mov
adc
xchg
test
adc
and
sub
ror
cltd
jmp
hlt
enter
add
test
pop
mov
outsl
sbb
test
mov
jae
add
stos
inc
mov
sub
cmp
cmp
sub
xor
outsl
jnp
js
test
or
or
xchg
mov
mov
bound
dec
nop
jbe
scas
cmp
adc
push
dec
sub
dec
imul
fcomps
mov
push
ljmp
mov
arpl
mov
fiaddl
jns
vmovd
sbb
dec
cmp
out
leave
lea
sub
jns
clc
es
cli
mov
lret
push
sbb
and
adc
insb
in
jo
lock
push
in
shlb
mov
mov
jb
js
insb
jmp
clc
aas
sbb
pushf
cmp
jge
out
xor
leave
sub
sub
lret
les
xchg
das
and
jbe
cmpsl
jnp
dec
jg
enter
cld
mov
and
push
dec
sbb
jnp
loop
shll
mov
dec
sbb
popf
loope
cltd
popl
movsb
xchg
pushf
lds
movsb
xor
sbb
jle,pt
fs
xor
xor
pop
daa
inc
shlb
dec
stos
ljmp
push
jo
int3
and
loop
or
inc
and
addr16
lcall
out
cmp
aaa
mov
les
mov
xor
in
inc
mov
es
mov
dec
cmp
xchg
scas
fimuls
sbb
mov
outsl
fidivl
lret
inc
gs
icebp
lret
dec
pop
dec
lods
and
das
mov
mov
inc
test
mov
and
inc
stos
aad
ret
push
fwait
jo
add
ds
mov
imul
or
ljmp
jmp
jp
and
xor
ss
ror
sbb
jnp
imul
sbb
inc
pop
aaa
mov
jae
or
pop
mov
dec
stos
out
lea
ss
push
xor
add
stc
sub
idivb
inc
inc
mov
sub
xchg
in
mov
jnp
dec
lret
stc
mov
jmp
dec
pop
inc
clc
xchg
cmp
inc
pop
inc
inc
daa
cmovae
mov
mov
pop
mov
pop
inc
mov
dec
loop
xorb
js
lds
mov
inc
lds
inc
les
cwtl
cmpsb
ljmp
mov
imul
stos
fdivl
inc
cs
inc
pop
sbb
sbb
pop
bound
lds
xchg
movsl
inc
mov
inc
dec
sub
iret
xor
mov
xchg
cmp
xor
inc
adc
mov
jae
sti
test
inc
mov
xchg
arpl
lods
cmp
imul
jmp
pop
rcrl
psllq
in
adc
mov
std
scas
inc
dec
dec
pop
cs
mov
ds
sbb
inc
int3
daa
inc
cmp
fidivl
mov
xor
dec
sbb
xchg
mov
ss
inc
push
push
outsl
jbe
popf
push
cltd
sbb
mulb
popf
out
dec
out
into
jo
ljmp
xchg
dec
testb
mov
mov
lds
mov
or
fnstsw
push
jmp
fisttpll
lret
jmp
pop
xchg
daa
sub
clc
rclb
ret
nop
bnd
ds
aad
enter
movzwl
mov
xor
jmp
test
push
int
xchg
loope
testb
dec
jmp
pop
adc
inc
pop
inc
dec
pop
sub
imul
lds
and
mov
je
stos
mov
fwait
mov
mov
push
das
leave
sahf
inc
mov
sbbb
add
test
ficoml
push
leave
data16
cmp
pop
sbb
cmc
out
rcrb
mov
loopne
insb
dec
sbb
xchg
jae
das
rolb
lock
inc
cmc
push
das
push
inc
cli
inc
mov
cmp
and
sub
cli
sbb
movsl
lret
mov
ds
push
imul
push
xchg
test
call
icebp
jecxz
and
fbld
jmp
stos
mov
adc
mov
pop
daa
xchg
pop
lods
dec
jp
cmc
stos
aad
out
and
retw
in
push
scas
call
dec
mov
lds
lret
add
sub
rorb
mov
xor
addr16
and
sbb
mov
ja
xorl
cmp
sbb
cwtl
cli
xor
mov
push
inc
push
hlt
fcmovnb
dec
jns
testb
sub
rorb
cmpb
mov
lea
sub
dec
ret
scas
es
dec
xor
jecxz
jbe
xor
cmp
fcmovbe
xchg
popf
and
or
adc
outsb
fsubr
loop
and
js
push
sub
jb
aas
cmpb
arpl
rcrb
fdivrs
fidivrl
ljmp
mov
and
mov
sar
into
adc
mov
jnp
add
cmp
mov
and
cmp
inc
in
mov
inc
pop
js
or
sub
test
dec
mov
cli
mov
add
lds
mov
and
xor
imulb
cmpb
cmp
mov
js
cs
push
sub
sbb
sbb
jmp
sbb
insb
sbb
xchg
jo
mov
stc
cmp
jne
inc
andl
fadd
sarl
loopne
test
outsl
xor
ja
and
mov
mov
scas
push
sub
dec
sti
dec
daa
jo
add
or
jae
fimuls
daa
or
xor
stos
aaa
imul
and
inc
les
or
mov
push
dec
mov
shl
dec
test
imul
xchg
lret
mov
out
ja
push
jnp
fiaddl
sbb
int
xchg
movsb
cli
adc
mov
xor
inc
xor
out
lock
loopne
cmp
xchg
pusha
out
push
push
adc
sbb
sub
adc
insb
sub
xor
jle
dec
std
lret
loopne
enter
out
loop
mov
insb
repz
popf
jmp
mov
xchg
or
mov
pop
xor
cs
lcall
lea
and
aas
adc
test
lret
test
xchg
cld
or
aad
mov
cmp
insb
fstpl
mov
data16
mov
add
xchg
out
add
cmp
and
inc
sbb
stos
cli
mov
mov
push
or
sbb
dec
cld
rorl
mov
sbb
arpl
and
pop
pushf
add
jle
stos
std
cmp
scas
mov
pop
or
cli
lcall
mov
mov
fldcw
xchg
mov
fsts
dec
and
and
sub
cmp
xor
or
scas
cli
push
inc
lods
push
xchg
push
into
jns
in
pop
sbb
out
aas
mov
cmp
add
dec
cmp
dec
xor
out
and
ds
sub
out
mov
stos
sbb
cmp
adc
xor
addr16
shll
cmp
push
sahf
jp
sbb
inc
pop
cmp
out
roll
mov
scas
outsb
inc
jns
iret
or
lods
sbb
xor
pop
mov
aas
icebp
jg
inc
mov
jbe
sub
inc
test
stos
or
jbe
fcmovnbe
inc
cmp
push
push
popa
stos
loop
sbb
adc
pop
movsb
jmp
stos
in
dec
aad
and
test
cmpsb
mov
aaa
mov
xchg
inc
mov
dec
fs
fimull
aas
outsb
aam
cmp
jg
into
imul
cmpsl
mov
inc
mov
rcrb
leave
addr16
push
scas
xchg
pop
dec
hlt
push
sub
cmp
addr16
mov
fiaddl
sbb
dec
jmp
movsl
add
and
fisubrl
mov
pop
push
cmp
and
cmp
push
push
insb
mov
pop
into
cmp
jmp
ret
cltd
ss
les
les
xorl
out
adc
mov
xorb
fiaddl
int3
and
xor
insl
jo
dec
into
and
pop
out
lds
sub
jle
ljmp
insb
fnstenv
mov
aaa
mov
fwait
ret
xchg
or
stos
imull
pop
inc
xchg
clc
pop
lcall
and
das
mov
lds
testb
fdivl
xor
dec
cmpsl
out
mov
mov
scas
addr16
inc
sbb
cmpb
sbb
sub
fsub
mov
push
cmpb
subl
cmp
pushf
int3
popa
es
jle,pn
push
lcall
xor
push
mov
pop
pop
imul
or
fiadds
dec
sbb
popf
jne
pop
lods
mov
out
ja
adc
out
push
out
inc
pop
cwtl
stos
lret
dec
ljmp
je
aaa
cmpsb
adc
sbb
cld
xor
dec
hlt
lea
pop
cmp
lds
mov
sub
add
jecxz
fldt
fistps
mov
mov
cmp
and
scas
or
sub
cltd
imulb
xorb
cltd
aad
std
scas
xor
jp
adc
mov
sub
cmp
inc
or
mov
cmp
aam
loope
pop
xor
and
pop
add
les
stos
bnd
aad
fcmovb
adc
leave
xchg
push
add
inc
pop
bswap
push
hlt
sub
test
sahf
ds
fyl2x
pop
adc
divb
jge
mov
xor
cmc
insb
push
push
lcall
cmp
std
jmp
push
mov
clc
fcompl
mov
fnstenv
mov
es
outsl
pop
inc
mov
xor
nop
or
imul
mov
pop
push
addr16
movsb
in
cmpsb
jmp
pop
adc
lods
dec
cmp
dec
cmp
fcoml
cmp
push
xchg
sub
jbe
gs
popf
jmp
inc
insb
push
loopne
adc
pop
gs
repz
jecxz
fwait
scas
stos
jg
cmp
int3
inc
push
faddl
jmp
mov
insl
dec
mov
xchg
ljmp
mov
adc
cmp
ljmp
hlt
outsb
or
pop
adc
xchg
xor
sti
pop
fidivrl
cmp
pop
pop
gs
push
jbe
stos
data16
cld
xor
push
fcompp
sbb
fldcw
pop
jb
outsb
ljmp
sub
jns
lock
push
jle
adc
inc
out
xchg
fcomp
cmpsb
cmp
test
sbb
adc
test
cli
jp
push
dec
add
xor
sub
sub
pop
dec
insb
loope
sub
mov
imul
sub
cmp
mov
arpl
sti
mov
fidivrl
sub
stos
ret
jns
or
adc
jmp
rorl
xchg
and
arpl
push
add
ret
bnd
cli
jecxz
inc
lds
movsb
in
mov
int
dec
mov
lahf
push
sbb
jns
popf
inc
jge
fidivrs
int3
mov
das
bnd
pushf
xor
jo
stos
push
xchg
inc
cwtl
mov
xchg
outsl
sbb
push
incb
add
mov
push
push
adc
rcll
or
fsubrl
jg
out
je
inc
shlb
test
xor
movb
pop
clc
xor
lahf
testb
in
xor
dec
test
data16
lcall
jb
cli
sbb
jle
push
jl
std
imul
xor
ds
lret
pop
bound
ret
enter
lea
loope
testb
jg
inc
scas
fildll
shlb
movsl
test
jl
push
dec
xchg
ss
xchg
jp
push
pop
inc
pop
jo
cld
ja
sub
adc
imul
imul
enter
mov
repz
aad
loopne
cmp
int
dec
std
jb
insl
add
pop
incb
mov
mov
rcr
imul
loop
inc
mov
arpl
fsubs
pop
bound
push
sbb
fldt
cli
pop
adc
scas
mov
daa
shlb
inc
push
rdpmc
mov
in
notb
into
bound
or
pop
stos
mov
stos
nop
add
inc
mov
sub
mov
popf
mov
pushf
fiadds
jp
xor
int
push
and
popa
nop
out
adc
test
lods
xchg
out
sbb
cmp
jecxz
mov
aaa
es
xor
fstps
popf
cmp
movsb
and
jecxz
cmp
scas
inc
jns
adc
sub
repz
sbb
push
push
testl
xchg
cmp
mov
and
cmp
mov
mov
xor
add
jmp
jb
enter
and
ljmp
pop
dec
psrlq
mov
adc
clc
jp
pop
les
andb
loopne
outsb
aas
bound
dec
jl
stos
jns
outsb
shll
jae
or
sti
daa
scas
add
push
push
xor
shr
scas
mov
mov
cmpsb
xchg
std
stos
repz
sbb
outsl
pop
lret
and
je
mov
and
sbb
xor
xor
mov
sbb
mov
mov
cmp
shl
insb
testb
jb
jl
out
mov
sbb
rolb
mov
in
ret
push
ja
imul
inc
movsb
inc
mov
repz
lea
jmp
fildl
scas
and
push
xlat
dec
into
sbb
mov
dec
dec
je
add
shlb
push
inc
clc
cli
bound
pop
test
addr16
push
jl
add
xchg
shlb
stos
mov
popa
cmp
add
mov
inc
shrb
dec
aaa
xchg
xchg
inc
cmp
loope
es
test
sbb
popa
inc
xchg
adc
pop
pop
and
mov
stos
mov
or
xchg
fwait
push
lods
jo
shll
gs
movsb
mov
orl
movsl
ds
jl
and
ja
fwait
sbb
and
inc
data16
loope
mov
roll
xchg
pusha
inc
inc
ds
or
pushf
sahf
into
dec
xchg
jmp
pop
sahf
mov
scas
mov
push
test
dec
insb
test
jae
sbb
sbb
test
test
pop
outsl
pop
cmp
mov
sarb
mov
and
ljmp
dec
mov
jae
jmp
lods
imul
sub
dec
and
mov
and
and
xchg
jnp
ss
outsl
and
push
jbe
jmp
mov
fiaddl
loop
fldcw
push
push
sahf
inc
daa
aaa
mov
xchg
inc
xor
mov
insl
adc
call
fsts
jmp
inc
inc
int3
dec
insl
sub
scas
pop
fadds
xor
ret
scas
cs
sahf
inc
inc
outsb
nop
inc
dec
sbb
int
add
lods
add
sub
push
pusha
jns
loope
cmp
pushf
xchg
xchg
push
popf
dec
xchg
lea
cmp
jbe
cmp
sahf
pop
cmp
mov
pop
add
mov
mov
push
jp
std
xor
push
push
sbb
add
mov
mov
adc
test
das
xlat
sub
jp
pop
mov
lds
nop
insb
mov
dec
add
inc
push
pop
sahf
into
pop
pushf
jge
js
insl
or
fcmovb
add
mov
xchg
xchg
arpl
xchg
and
ret
jb
cmp
jmp
sti
and
push
arpl
inc
rorb
dec
pop
lds
add
pop
enter
xor
jmp
inc
sub
xchg
and
mov
mov
outsb
int3
cli
mov
add
cs
out
ficomps
imul
push
push
ror
test
xor
dec
mov
or
sub
mov
push
adc
xchg
xchg
adc
mov
or
push
pop
lret
sub
jg
ljmp
xchg
mov
cmp
shrb
out
fs
and
fiaddl
xchg
popa
add
pop
pop
fldt
inc
sbb
inc
mov
jnp
out
sbb
outsl
lahf
sub
xor
add
add
stos
lcall
lcall
ljmp
xor
sub
aaa
pop
dec
in
push
pushf
or
add
pop
sub
push
pop
ja
lret
popa
add
pop
jno
enter
mov
mov
cmp
push
imul
jle
js
testb
pop
jb
dec
adc
aam
mov
xchg
cltd
pop
test
pushf
jno
and
pop
jp
adc
imul
imul
push
rcrb
in
imul
and
ss
lcall
icebp
inc
loop
mov
daa
rcr
jbe
pop
stos
es
pop
insb
jb
subl
push
int
cmp
adc
push
je
jne
add
sbb
lcall
xlat
jmp
lds
int3
jp
imul
stos
ret
bound
loop
jp
sub
insl
out
mov
add
and
ss
js
cs
pop
test
ljmp
mov
adc
or
adc
stos
movaps
add
mov
xor
aaa
insb
idivl
mov
inc
repz
sub
cmp
scas
ret
outsl
sbb
inc
inc
jmp
sahf
add
shrl
mov
or
daa
test
sbb
jo
stos
dec
xor
mov
stc
in
jo
mov
ljmp
or
push
loop
test
push
jp
iret
xchg
adc
inc
cmp
xor
and
mov
int
jle
adc
pop
ljmp
xor
xlat
lea
mov
dec
adc
mov
jno
jnp
mov
xchg
mov
mov
jle
cmp
cmp
push
cmp
scas
inc
leave
inc
xchg
sbb
stos
or
sbb
or
ficoml
inc
sbb
arpl
dec
push
mov
outsl
cmp
fimull
fstpl
add
fisubrs
out
and
nop
lea
pusha
in
xchg
xor
jmp
sub
call
out
jecxz
cmpb
ds
imul
call
arpl
or
jle
add
cli
dec
adc
stc
fs
dec
or
movsl
in
adc
cwtl
jae
fdivrl
lock
ret
lret
cmp
xchg
xchg
lea
mov
push
stos
sbb
cld
into
inc
fmull
fstpl
decb
cmp
shlb
cmp
lret
pop
outsl
clc
sub
xor
mov
mov
pop
mov
jp
in
out
in
dec
lds
sub
sbb
imul
in
sub
aaa
mov
les
jecxz
stos
sub
add
cmpsb
out
test
mov
adc
mov
mov
adc
push
sbb
aam
xchg
lret
lcall
adc
loopne
push
fcompl
jae
adc
dec
push
repz
daa
ss
push
pop
mov
pop
jae
cmp
adc
mov
cld
je
sti
out
lcall
test
add
mov
push
arpl
nop
inc
aaa
cmp
cmp
loope
lea
inc
inc
adc
mov
mov
insl
pop
pop
fs
rclb
cmp
sub
cmp
sub
bound
jg
dec
out
orb
or
mov
imul
inc
jo
int3
dec
xchg
adc
mov
shlb
jge
add
pop
fstpt
and
nop
loope
subl
loope
fucomp
sub
mov
inc
dec
lods
xchg
cmc
loopne
mov
mov
daa
sub
add
aam
jmp
aaa
jg
cmp
inc
cld
scas
mov
fidivl
in
fnstsw
int
inc
mov
mov
in
mov
push
out
test
xor
sbb
bound
adc
mov
dec
fs
aas
sbb
sti
fimuls
mov
jl
out
or
fldt
mov
inc
fisubrs
stos
sbb
mov
add
mov
pop
jae
lods
fcomps
pop
or
sbb
loopne
dec
scas
push
popa
mov
sbb
ds
sub
loopne
xchg
adc
xchg
clc
inc
adc
push
data16
and
dec
xchg
jno
data16
sbb
int
push
lea
mov
out
jo
and
sbb
int3
or
sahf
xchg
sub
push
movsb
jne
movsl
ljmp
inc
sti
pop
sti
inc
ds
sub
scas
dec
add
lods
ja
sahf
cmp
pop
lret
adc
inc
jp
inc
xchg
sbb
inc
out
pop
dec
xchg
cmp
idivl
jb
lret
lret
adc
and
inc
aas
loopne
xchg
inc
pop
or
inc
hlt
pop
rolb
sub
cmp
sbb
cli
outsb
ret
add
and
push
notb
mov
pop
addr16
aaa
mov
cmpsb
mov
xchg
js
jmp
push
xor
push
fsts
xchg
sbb
pop
leave
jo
dec
mov
cli
jmp
and
mov
stos
adc
inc
pushf
cmpsl
and
or
imul
lock
or
or
sahf
ss
fs
inc
sbb
in
inc
jle
push
out
out
aaa
es
addb
dec
lret
and
jge
into
cltd
pop
pop
clc
mov
push
cmp
out
push
fcmove
and
inc
mov
hlt
outsl
sub
outsl
clc
pop
and
sub
outsb
adc
or
or
cld
ss
mov
aaa
jne
hlt
adc
pop
ret
je
mov
jecxz
mov
aam
dec
popf
push
into
mov
dec
xchg
imul
jbe
in
out
ret
stos
out
add
add
out
bound
test
xchg
pop
mov
imul
movsl
movsl
xchg
sbb
fdivrl
pushf
fimuls
out
or
icebp
ljmp
sub
or
sub
arpl
fcomi
sub
xor
loopne
push
das
fldenv
sbb
mov
stos
repnz
or
mov
add
mov
pop
sti
in
inc
mov
sbb
or
or
xchg
xor
add
cmp
mov
jle
mov
ret
push
push
fwait
push
xor
pop
xchg
pop
and
mov
lods
xor
xor
lret
repnz
ljmp
ljmp
mov
ss
sub
cmp
mov
std
ds
test
jecxz
cmp
inc
dec
jbe
mov
cmc
xchg
cmpsw
jne
addr16
push
and
jg
pop
lods
mov
repnz
andb
cli
mov
inc
imul
jge
lods
inc
ljmp
insb
les
inc
xor
inc
add
sbb
cli
cmp
mov
addl
mov
dec
jbe
pop
push
jle
jne
xchg
xchg
pop
jno
mov
arpl
ret
jb
cltd
rorb
cwtl
dec
mov
mov
les
jg
imul
xchg
adc
ss
sahf
sbb
mov
enter
data16
and
ss
ds
cld
xchg
sbb
imul
cmp
inc
lea
or
in
mov
pop
dec
push
call
test
xchg
mov
pop
xor
push
stos
xchg
stc
mov
or
jle
sub
xor
insb
pop
push
inc
mov
or
stos
push
into
jg
add
mov
jo
daa
mov
andl
cmp
sbb
jae
or
inc
xchg
or
pop
ss
adc
mov
sub
jne
cltd
mov
jno
lds
cld
cld
shll
dec
and
and
subl
lret
leave
inc
leave
pop
ljmp
sub
aas
sub
fnstenv
repnz
xchg
mov
inc
mov
mov
in
andl
xchg
sub
cmp
sub
mov
jae
dec
mov
mov
xor
pop
pop
push
in
aaa
pop
js
pop
mov
mov
pop
outsb
insl
scas
mov
mov
mov
adc
out
inc
bound
jb
sbb
test
ds
xchg
cmp
push
lds
sub
dec
lods
xchg
and
cmp
xor
insb
es
jge
adc
pop
dec
loope
addl
xchg
test
push
adc
adc
and
fwait
or
ds
into
cs
sub
cmp
sub
cmp
mov
outsb
outsl
stc
inc
and
jecxz
mov
stos
mov
mov
mov
pop
mov
and
lock
fildl
and
lret
xor
mov
xchg
xchg
adc
or
outsl
in
push
mov
adc
add
fsts
xlat
fldpi
fldenv
xchg
jb
xchg
psadbw
leave
jnp
pop
fs
ds
xchg
pop
out
test
andb
xchg
loope
loope
xchg
push
mov
test
mov
pusha
dec
jp
in
es
or
xchg
repnz
gs
mov
cwtl
jmp
fs
ret
cli
cmpsw
leave
cmp
add
mov
mov
rcl
leave
xor
pop
addr16
daa
aas
imul
pop
mov
lcall
rcrl
cmpsb
mov
mov
mov
arpl
aas
rcrl
out
int3
mov
jb
mov
ljmp
dec
pop
pop
fimull
dec
jecxz
xchg
xchg
mov
xor
int3
cmp
pop
jmp
and
fwait
or
pop
call
dec
out
pop
es
lods
in
out
inc
xlat
stos
ljmp
popf
xchg
into
jnp
xor
jp
xchg
loope
js,pn
shr
push
xor
cld
nop
cs
je
and
dec
xor
adc
gs
ss
adc
mov
xchg
jmp
cmp
testb
sbb
jl
scas
and
int3
mov
call
cli
out
mov
test
dec
mov
xchg
add
ljmp
ss
and
test
jp
ja
mov
fmul
outsl
cmpsl
adc
mov
mov
mov
adc
mov
gs
arpl
inc
adc
xor
push
cmp
sub
aad
mov
ret
xor
jnp
sbb
push
mov
push
mov
loop
mov
mov
mov
pop
pusha
rcll
inc
cmp
and
inc
jmp
mov
inc
mov
or
add
jb
mov
daa
divb
int3
dec
cmp
mov
push
fnstenv
enter
mov
jnp
xlat
out
mov
cwtl
es
aam
sbb
leave
xor
aad
cmp
cmp
xchg
mov
loopne
lock
cmp
imul
testb
or
pop
incb
shl
xchg
sahf
mov
push
dec
out
cmc
enter
and
daa
xor
mov
lds
fiaddl
add
fimull
mov
cmpsl
cli
fdivrl
xchg
push
jnp
pop
sbb
xchg
popw
pop
aas
cmpb
test
jmp
fnstsw
cmp
mov
push
push
mov
imul
xor
ss
fiadds
adc
mov
ret
scas
jl
mov
orl
daa
mov
push
push
dec
fistpll
add
adc
sbb
mov
mov
ja
enter
dec
lock
stos
arpl
cmp
int3
mov
lcall
popf
js
mov
fld
jmp
sub
inc
popw
add
sub
and
out
push
push
adc
sub
out
cwtl
shrb
gs
xor
mov
push
mov
mov
sub
sub
push
call
sub
dec
push
mov
mov
xchg
insb
push
repnz
inc
insl
pop
aad
xchg
pushf
sub
outsl
mov
addb
mov
cld
clc
or
das
sbb
dec
mov
inc
data16
sahf
popf
int3
fmul
mov
lods
ds
xor
sub
popa
pop
inc
test
inc
stos
xchg
pop
stos
sti
test
mov
jb
lea
jo
mov
psrlq
pushf
repz
mov
sub
ret
adc
jp
sub
ja
adc
xchg
xchg
dec
mov
push
pop
inc
dec
mov
andb
cmpsl
push
mov
imul
pop
adc
xchg
cmp
in
xchg
dec
sub
data16
jle
mov
aad
dec
mov
mov
repnz
jns
jno
in
stos
test
dec
adc
adc
fistps
xor
xchg
in
ds
mov
inc
test
lds
enter
add
jle
sub
push
pusha
cmp
pop
dec
jnp
es
sub
cs
mov
aad
dec
cmp
and
mov
adc
cltd
in
stc
mov
nop
rcll
and
sub
insb
inc
mov
sub
cltd
xchg
and
pop
arpl
mov
push
or
xchg
ret
or
pop
outsl
movb
mov
push
ds
dec
fisubl
ljmp
xchg
cmp
lock
push
jae
xor
mov
cmpsb
je
outsb
out
dec
cmp
push
aas
sti
xor
adc
mov
imul
fildll
dec
inc
mov
cmp
push
mov
pop
inc
fidivrl
mov
sbb
push
pop
jp
adc
sbb
cmp
inc
adc
inc
dec
sbbb
out
ss
cmp
daa
shrb
inc
pop
xor
vpunpckhbw
mov
mov
mov
int
dec
popf
push
inc
ficoml
rcr
dec
jno
stos
dec
ficoms
insb
divb
xor
in
adc
and
inc
inc
cmp
les
sub
ljmp
stos
jae
jmp
je,pt
sbb
inc
xor
enter
push
add
das
jo
xor
and
push
pushf
add
cmpsl
addr16
imul
in
pop
fsubl
dec
fimuls
adc
cli
pop
lods
sbb
mov
cmpsl
daa
data16
jle
stos
mulb
repnz
cli
jbe
test
push
push
dec
sbb
mov
push
xchg
dec
mov
pop
cmp
lods
mov
dec
or
ljmp
add
push
pushf
sub
fstpl
fdivrl
jbe
push
stc
jmp
sarb
stc
nop
sbb
mov
fldenv
les
jns
loopne
sbb
notl
cmp
mov
sbb
pop
dec
add
xchg
jle
mov
mov
and
ds
mov
out
insb
dec
lret
pop
scas
adc
lods
in
sbb
mov
cltd
ret
inc
cmp
sub
outsb
pushf
lods
mov
cmp
sbb
fmuls
call
jmp
leave
push
imul
outsb
push
aaa
mov
aam
mov
jns
fidivrs
pop
xor
adc
stc
dec
xchg
ficomps
and
cmp
pop
and
fidivl
cli
xchg
lock
mov
movsb
inc
sbb
ret
jb
cmpsb
cmpsl
mov
mov
aaa
mov
push
sbb
test
sbb
jo
adc
or
movsb
push
cmpsl
imul
mov
jb
aaa
mov
roll
insb
xor
aad
push
addr16
dec
sarb
loop
push
or
fmull
test
adc
or
xchg
addr16
push
in
jecxz
pop
popf
sar
cmpsb
ficompl
sahf
sbb
jmp
leave
sub
mov
mov
sub
dec
cli
gs
mov
adc
mov
jns
push
lods
mov
in
data16
sbb
stc
loop
mov
fnsave
pop
push
add
out
out
mulb
push
divb
dec
jo
mov
mulb
inc
pusha
cld
outsl
fnsave
mov
shl
in
sbb
pop
test
and
add
aas
shlb
dec
or
xchg
push
das
sbb
push
xor
adc
jb
xor
mov
push
lock
mov
jmp
cmp
insb
cwtl
mov
imul
arpl
das
jmp
xor
lret
out
repz
fisubs
and
dec
pop
mov
mov
out
dec
jbe
sbb
movsb
cmp
sbb
hlt
sub
mov
mov
jae
xchg
test
inc
xchg
mov
addr16
mov
pop
push
lods
xchg
push
flds
sub
push
sbb
mov
mov
sub
pusha
mov
fisubrl
sbb
pop
mov
dec
or
sbb
cmc
jp
scas
inc
loop
fbld
jno
sub
xorb
push
cs
jg
sub
inc
xchg
mov
insb
xchg
jp
shll
push
sub
jl
jg
rcl
sbb
xor
inc
pusha
xor
push
jmp
fisttpl
fldt
imul
popf
jecxz
jb
out
leave
pushf
ret
mov
pop
pop
mov
and
mov
sbb
mov
xor
mov
push
mov
push
rorb
mov
push
js
mov
adc
push
mov
xchg
push
cmp
inc
stos
pop
xchg
ficoml
xchg
mov
popa
mov
in
add
pushf
push
inc
mov
fisubrs
stc
mov
les
es
fcmovnbe
test
mov
xchg
hlt
mov
push
push
test
xchg
movsb
add
sbb
inc
les
rcrb
cmp
mov
rorb
xchg
cmp
and
jmp
insb
dec
int3
push
scas
in
mov
xchg
jle
push
mov
adc
daa
xchg
jae
or
std
sub
sahf
pop
sti
cmp
movsb
addr16
out
or
sub
lcall
xchg
sbb
ja
in
or
sbbl
test
xor
loop
fs
scas
out
inc
insb
or
lahf
nop
popa
call
and
pop
mov
push
clc
fistpll
out
lock
jg
add
lret
les
dec
stc
shlb
fcompl
push
cmpsb
cmp
inc
jg
cltd
sbb
mov
stos
loope
stos
inc
js
rclb
scas
jmp
and
xchg
test
pop
call
and
cmp
inc
mov
mov
loopne
adc
xchg
aaa
lcall
imul
mov
xor
mov
or
out
fnstenv
mov
sbb
sbb
xor
mov
es
insb
jmp
inc
enter
mov
pop
and
rcrl
pop
nopl
es
cmpsb
mov
data16
dec
sti
push
dec
outsb
push
pop
insb
jne
mov
dec
lcall
inc
xlat
fsubs
jmp
loope
into
mov
mov
xor
pop
ljmp
or
sbb
adc
push
mov
jae
xchg
das
cltd
cmp
xchg
cmp
push
cmp
xor
cmp
js
pop
movsb
mov
out
add
cld
test
repz
arpl
sbb
ficoml
or
pop
xor
sarl
mov
in
insl
mov
xchg
stc
mov
imul
dec
mov
pusha
jo
xor
cmpsb
push
sbb
dec
dec
adc
and
mov
fisubl
adc
pop
mov
add
leave
into
jbe
push
fisubrs
jo
mov
pop
loop
ret
jb
push
xor
std
out
subb
xchg
inc
push
sbb
pop
ror
nopl
sbb
rolb
stos
inc
jns
jp
fcomi
divb
push
push
mov
ret
xchg
fildl
loop
xor
outsl
js
inc
dec
jle
mov
int
sbb
pop
loopne
jg
or
or
inc
adc
jmp
test
sub
scas
movsb
testl
je
lret
cs
or
cwtl
call
popf
ss
mov
mov
lret
fimull
mov
cmp
push
push
add
mov
sbb
adc
test
mov
outsb
sub
jg
jle
jb
ss
loopne
pop
jmp
sbb
ds
push
idivb
jae
sbb
scas
pop
out
xchg
dec
jbe
out
test
push
and
adcl
popf
es
mov
loop
test
nop
inc
push
lea
aaa
and
loope
adc
or
sarl
mov
bound
dec
aas
mov
jae
subb
sbb
mov
aaa
cmp
xchg
stos
xchg
insb
cwtl
sub
cmp
pop
push
rcrb
enter
jo
jge
scas
andb
lahf
xor
pop
fidivrl
nop
xchg
xor
call
fsubr
inc
push
fildl
xorl
iret
nop
add
xchg
cld
lahf
mov
daa
xchg
mov
jno
jg
sub
out
sub
jp
enter
divb
pop
mov
hlt
mov
add
loopne
sbb
call
imul
into
lret
pushf
xor
jns
mov
push
into
mov
jo
in
mov
imul
jo
test
jo
inc
and
or
sahf
daa
xchg
and
xchg
adc
add
push
jmp
scas
fdivrl
movsl
call
mov
push
inc
or
add
imul
int3
xchg
cmp
lahf
imul
testl
inc
push
pavgw
test
jbe
addr16
jmp
and
mov
push
inc
pop
aas
or
jne
icebp
xchg
mov
xor
outsb
aam
test
jae
jns
leave
cmp
call
mov
ret
daa
sarl
lret
push
std
sub
sbb
test
mov
out
aaa
cmp
ret
jmp
adcl
scas
bound
xor
lods
dec
pushf
test
mov
dec
lea
cli
loop
sbb
dec
or
mov
pop
jmp
inc
and
pop
mov
sub
enter
mov
out
xchg
xchg
nop
xchg
and
cmp
inc
pop
xor
gs
mov
jb
mov
dec
lcall
cmp
decb
bnd
sbb
leave
xor
push
xor
aad
lock
xlat
out
lret
je
jnp
add
leave
pop
pushf
jecxz
sub
setp
addl
push
sub
push
sbb
clc
jnp
fwait
addl
push
rol
sbb
ljmp
xor
lock
repz
mov
jae
mov
push
dec
dec
adc
lods
daa
sarb
mov
loop
add
mov
xor
sub
bound
ret
or
push
inc
push
cmp
and
movsb
xchg
js
mov
fcomi
cmp
xor
popf
lds
sbb
popf
fistpl
sbb
mov
ja
xor
or
push
arpl
push
inc
add
jmp
mov
mov
push
mov
xchg
lods
lret
jae
fstpl
cmp
fistpll
or
pop
into
mov
out
mov
daa
hlt
add
cmc
jnp
or
in
aad
sub
add
mov
cld
jne
pop
pusha
es
popa
push
sbb
mov
cmp
push
push
sti
fiaddl
mov
das
movsl
shll
cltd
enter
mov
xchg
lret
stc
jbe
js
rorb
mov
cmpsb
aas
dec
fidivl
mov
pop
inc
dec
mov
js
sbb
cmpsl
fcom
mov
jns
movsb
clc
mov
mov
pop
shrl
sbb
je
pop
inc
arpl
mov
and
pop
mov
cmpsb
dec
pop
adc
fprem1
cltd
mov
adc
fwait
and
inc
loop
xor
stc
into
add
jmp
cltd
jp
sub
mov
xchg
xchg
mov
ljmp
and
jbe
in
cmp
dec
xchg
sbb
in
xor
and
cmp
push
sbb
mov
pop
pop
repz
fimuls
flds
adc
ds
add
add
push
insb
dec
cmpsb
sub
cmp
test
std
cmp
cmp
adc
pop
mov
arpl
cmp
ljmp
shll
fldl
js
cwtl
mov
push
lds
cs
loop
hlt
ret
mov
cmp
inc
mov
mov
xchg
stc
sub
push
arpl
xor
loopne
cmp
mov
scas
push
arpl
sub
inc
pop
lock
sub
cmp
mov
test
ss
jae
leave
push
or
xor
insl
scas
or
popf
mov
inc
cwtl
das
jmp
mov
jnp
jmp
xchg
repz
sar
and
push
jmp
xchg
mov
popa
xor
inc
jmp
adc
filds
frstor
adc
stos
dec
push
xchg
pop
push
cmp
jbe
fistpll
aaa
aam
pop
xchg
pop
mov
rorl
das
or
xor
jp
cltd
es
shl
pop
add
out
adc
imul
and
ficoms
stc
or
stos
mov
jle
add
frstor
stos
out
or
jb
xor
and
orl
cmp
sub
mov
or
xor
loop
dec
jo
stc
fsubrl
cmovnp
inc
xor
mov
lds
enter
movsl
mov
cmp
xor
test
jae
add
jbe
dec
gs
xor
out
cmp
scas
mov
sbb
dec
adc
ds
jecxz
sub
sub
mov
or
fwait
sarb
cwtl
out
sti
mov
test
mov
xor
mov
scas
and
insl
ret
mov
inc
push
lds
mov
xor
pop
stos
xor
ret
xor
jo
pop
mov
inc
lcall
cmpsb
daa
lret
adc
jg
xchg
mov
xlat
loope
xchg
mov
scas
mov
cmp
push
push
adc
sahf
test
sbbb
sarl
aaa
pushf
cld
push
dec
push
andl
cli
rorl
popa
add
cltd
push
pop
add
jae
testb
mov
inc
or
adc
mov
loop
and
adc
sbb
xor
stos
push
cwtl
mov
in
scas
je
mov
mov
repnz
xor
jns
ds
loop
cwtl
mov
fildll
push
js
adcl
add
mov
fdivrp
push
orl
sar
addr16
fsts
sbb
dec
inc
jae
in
mov
mov
jnp
pop
movsb
aaa
jle
test
das
mov
data16
push
lds
testb
jp
push
xchg
lds
dec
in
xor
and
mov
add
inc
repnz
xchg
jg
mov
pop
test
movsb
shl
fldl
push
inc
dec
aaa
mov
mov
mov
mov
push
mov
leave
hlt
mov
adc
jno
into
jmp
dec
sbb
imul
sub
jmp
icebp
mov
enter
popf
push
dec
fnstenv
ret
mov
cltd
imul
in
jo
cltd
cli
stos
repnz
leave
inc
out
mov
jno
push
ds
call
push
je
imul
inc
arpl
mov
adc
stos
sbb
jecxz
lret
push
pop
pop
dec
mov
mov
int3
test
inc
dec
adc
sbb
ds
push
stc
inc
and
push
and
cmp
nop
lea
test
sub
mov
xor
pop
inc
inc
mov
ds
in
jne
push
mov
imul
jge
in
test
out
aad
imul
dec
jb
add
xor
and
std
add
gs
scas
or
fldcw
in
fidivrl
cmp
xchg
shlb
das
pop
mov
out
pop
mov
aas
jo
cmc
sbb
mov
dec
ss
imul
fsubl
bound
dec
xchg
cmpl
lods
or
push
sbb
or
mov
out
lret
dec
ljmp
add
fnsave
or
inc
xor
and
popa
push
or
in
sub
scas
fwait
push
stc
inc
pushf
sub
arpl
jb
jo
add
sub
inc
push
shll
jg
jle
lock
insb
into
sar
ds
and
imul
xchg
mov
je
loop
xchg
xchg
and
and
add
insl
js
loop
iret
add
push
lea
je
jmp
mov
fcoms
dec
out
xlat
dec
sub
into
ret
xchg
fiadds
push
mov
test
xchg
push
push
popf
dec
hlt
cs
rcrb
inc
adc
loop
push
push
cmp
imul
pop
test
pop
xchg
fldcw
cmp
imul
mov
fs
sti
out
and
mov
xchg
dec
cmp
lods
jge
or
add
lds
push
add
jnp
push
dec
cwtl
test
xor
mov
imul
mov
in
enter
in
mov
out
pop
xor
popf
mov
int3
xor
push
dec
les
cld
xchg
cmp
out
jp
dec
gs
out
pop
xor
xchg
es
cltd
or
or
and
pop
xor
es
cmp
cmp
mov
fcmove
orl
imul
jecxz
imul
adc
mov
mov
scas
nop
xor
setge
popl
push
into
pop
pop
jb
mov
popa
and
inc
imul
test
in
dec
sub
fdivs
sub
sbb
jle
outsl
push
bound
dec
cwtl
call
ret
mov
mov
and
icebp
lret
jecxz
pop
pop
test
les
mov
cmp
inc
mov
icebp
add
cmp
cmp
in
fisubs
jo
push
cmp
pop
scas
mov
dec
xchg
mov
pop
and
or
addr16
int3
hlt
push
adc
scas
push
ret
push
and
sub
mov
xchg
insb
and
fldl
mov
dec
mov
jmp
pop
out
stos
stos
test
pop
mov
addr16
dec
or
and
push
mov
fxch
loopne
stos
jbe
mov
mov
xchg
loope
push
ljmp
add
repnz
adc
xor
mov
mov
sub
dec
lret
fstps
jns
std
push
lcall
push
jne
pop
mov
lea
jns
pop
das
jmp
js
fs
loopne
and
pop
sahf
dec
and
nop
iret
mov
shll
sarl
imul
out
mov
sbbb
push
hlt
imul
xchg
push
dec
rorb
bound
call
aam
sbb
fisubrs
cmp
sbb
mov
gs
mov
xor
adc
mov
push
jo
addr16
out
imul
mov
xlat
hlt
lods
mov
push
mov
xchg
lret
jg
sbb
in
mov
lea
jo
cld
out
xchg
jle
dec
lock
fistpll
inc
xor
fbstp
vpackssdw
mov
jmp
xchg
scas
inc
adc
sbb
push
inc
mov
or
outsl
mov
dec
aam
mov
into
or
or
fcmove
mov
daa
aam
and
rolb
jne
jb
sbb
mov
out
insl
cmp
cmp
lea
fucomp
mov
mov
cmp
xchg
test
shlb
loope
fwait
mov
andl
loop
daa
out
fwait
jmp
daa
mov
ljmp
push
jg
loop
ss
xchg
mov
sbb
hlt
lea
inc
sbbl
push
orb
or
sub
sbb
mov
mov
loope
mov
ljmp
cmp
iret
sbb
or
and
iret
arpl
sub
inc
mov
xor
inc
sub
pop
jo
pop
mov
fildl
sub
pop
repz
daa
mov
les
jmp
and
adc
xor
bound
lock
pop
pusha
leave
pop
mov
jnp
pop
add
imul
je
cmp
mov
pop
mov
mov
les
addr16
stos
mov
repz
outsb
mov
jnp
sub
repnz
fs
mov
fisttpll
pop
pop
pusha
mov
xchg
lcall
xchg
and
pop
loop
ljmp
mov
test
insb
in
mov
sbb
dec
out
pop
rorl
cld
cmpl
mov
add
sbb
add
jno
mov
clc
js
imulb
jg
pushf
cmp
arpl
das
movsl
sti
hlt
int3
shll
in
cmp
aam
xor
mov
cmp
dec
les
mov
xor
arpl
inc
mov
mov
in
dec
js
and
cmp
cmpsb
pusha
call
fwait
mov
sbb
jns
mov
jg
jo
xchg
cwtl
add
test
ret
cli
jp
and
cmp
add
mov
jmp
jmp
jne
fs
lods
lds
out
imul
imull
mov
in
test
int
jle
sbb
ret
mov
jle
fnstcw
es
inc
jb
sti
pop
lea
imul
xor
jo
icebp
pop
or
test
test
push
push
out
jno
addr16
jno
and
dec
xor
fcomps
xchg
pop
movl
pop
cmp
sbb
jge
out
insl
sti
pushf
sbb
xorb
xor
daa
push
cmp
mov
jg
fdivrs
push
jae
and
jbe
adc
daa
dec
addr16
out
mov
imul
xchg
pop
add
mov
cld
sub
sar
push
arpl
xor
xor
inc
scas
xchg
rep
push
test
inc
fistpl
bound
popa
push
pushf
ds
xorb
dec
mov
push
cmp
lahf
push
push
mov
outsb
xchg
mov
fwait
mov
jne
fs
xor
xchg
scas
add
inc
repz
mov
mov
and
orb
jns
cmpsl
push
mov
aas
add
scas
dec
dec
arpl
sarl
jnp
lahf
ljmp
jbe
adc
leave
ror
out
or
sub
inc
pushf
and
je
fimull
outsb
mov
cmp
out
test
sarb
scas
lods
std
fisubrl
out
xchg
mov
and
jmp
cmp
jmp
jecxz
sbb
adc
test
leave
push
mov
jo
rcr
adc
ds
mov
mov
arpl
lret
jo
or
shr
mov
mov
loopne
nop
movsb
cmp
sub
adc
cmc
decb
xchg
cmp
or
pop
mov
mov
leave
aas
sub
enter
inc
inc
or
mov
fwait
inc
shr
jnp
movsl
dec
in
push
inc
pop
inc
mov
cmp
movnti
dec
jl
sbbl
sbb
jecxz
pop
std
insb
xchg
shlb
push
daa
hlt
cli
and
inc
movsb
das
subb
xchg
shr
cld
or
shr
inc
test
mov
sbb
xchg
test
inc
rorl
jnp
leave
xchg
test
push
pop
or
fadds
negl
into
movb
xor
xor
add
loope
loop
xor
adc
mov
xor
stc
push
cltd
cmp
dec
mov
cltd
incl
cld
push
test
nop
xor
rep
ds
lds
jmp
jp
inc
cwtl
jb
adc
xchg
stos
bound
shlb
jb
inc
jbe
outsl
push
data16
pushf
xor
and
pop
insb
cmp
sub
mov
xlat
nop
xor
mov
test
in
push
pop
xchg
mov
fiaddl
pop
dec
push
fs
xor
pop
or
xchg
loopne
js
jo
movsl
push
jnp
push
mov
cltd
mov
mov
test
es
jb
mov
sbbl
out
in
jb
std
push
and
cmp
mov
inc
pushf
sbbl
out
mov
insl
mov
int
pop
cld
movsl
out
push
dec
dec
pop
fwait
mov
inc
adc
sub
and
lea
aaa
std
mov
cmp
shrb
jne
lret
pop
mov
sbb
push
push
ret
dec
lret
and
ds
sbb
sub
xchg
sub
icebp
pusha
rorb
sbb
adc
mov
cld
insl
sub
cwtl
xchg
arpl
sbb
push
sub
inc
xor
dec
mov
test
sub
add
jb
lcall
popa
mov
add
pop
mov
gs
sub
sbb
fs
cli
or
insb
ja
push
int3
jmp
cli
or
sub
cmp
cltd
fidivrl
sbb
add
push
insb
cld
loopne
adc
pop
js
jb
ljmp
cmp
xorb
aad
icebp
or
lds
pop
inc
negb
fcmovu
mov
dec
fs
sbb
add
hlt
aaa
fisubs
test
data16
or
pop
fbld
pop
ret
mov
cmp
scas
je
xchg
shrl
leave
push
pop
loopne
mov
sub
cmp
imul
stos
sub
fs
fstl
jae
dec
pop
cmp
adc
mov
scas
idivl
push
push
sub
repz
outsl
pop
add
add
and
cmp
cmp
aam
stos
idivl
insb
push
sbbb
dec
push
arpl
dec
xchg
ds
scas
outsl
push
sub
rol
sarb
bndldx
fisubrl
mov
cltd
pop
enter
dec
push
punpcklbw
jae
stos
dec
adc
and
jo
pop
test
insb
cwtl
cmc
js
and
adc
test
gs
push
dec
xchg
add
test
jle
sbb
and
outsl
out
cwtl
mov
repnz
xor
das
cmp
mov
ret
push
movsl
inc
push
push
daa
sbb
add
loopne
pusha
jmp
sbb
lods
imul
inc
daa
cmpsl
dec
mov
js
pop
mov
ljmp
mov
gs
sbb
xchg
stos
sub
add
ret
xchg
ljmp
test
test
cli
mov
lret
dec
jl
shlb
aad
lret
cli
mov
mov
imul
je
les
mov
and
mov
sbb
lea
jno
mov
clc
push
mov
cmpsb
dec
push
sbb
popa
push
adc
stc
add
xor
cld
xor
add
sub
inc
mov
cld
jmp
cmpsl
mov
mov
test
and
loope
cwtl
or
inc
fadd
cmpsl
sub
sub
sub
sub
adc
push
mov
loop
stos
ret
loopne
inc
cmpsl
mov
mov
scas
loopne
insb
push
mov
mov
and
les
lahf
jae
inc
shlb
loopne
sar
call
sti
mov
inc
cs
int3
stc
fisubl
sbb
fimull
jecxz
shrb
enter
mov
and
xor
jmp
add
sbb
mov
ficomps
cld
mull
test
sbb
push
push
add
test
mov
jge
std
cld
lcall
in
ja
mov
and
fbstp
stos
add
sbb
out
jge
push
inc
mov
cmp
mov
mov
lcall
testl
inc
inc
cmp
cli
inc
pop
hlt
cs
popf
arpl
xchg
bound
dec
dec
call
sbb
or
insb
aad
stos
outsb
push
scas
bound
gs
jae
ret
aaa
je
xor
mov
pop
imul
icebp
inc
fistl
jmp
loop
nop
dec
sub
inc
inc
loope
mov
test
jne
fwait
cmp
cmpb
or
add
jb
insl
rcl
adc
cmp
shll
movl
subb
cmp
ds
stos
xchg
lock
sub
pop
in
test
push
sub
nop
jbe
adc
test
loope
jo
sbb
stos
jg
mov
movsb
sub
ret
divl
jb
jnp
addr16
inc
add
nop
in
inc
addr16
cmp
loop
xorb
mov
and
push
mov
ds
fs
mov
sahf
mov
jl
mov
and
push
or
dec
dec
cmp
std
jbe
xchg
xlat
mov
loop
adc
imul
ljmp
leave
test
dec
add
add
std
ret
addr16
inc
ds
test
out
sbb
cmp
and
push
pop
push
and
mov
pop
sbb
dec
sbb
add
out
rorb
jne
xchg
pop
getsec
mov
imul
fistpl
dec
je
inc
scas
or
and
or
dec
jnp
jb
stos
mov
ja
xchg
int
imul
imul
cmp
aad
loop
mov
rcrb
inc
mov
es
fwait
cmp
outsb
pop
or
shr
imul
lods
xchg
sbb
and
mov
push
inc
push
pop
pop
rorl
inc
inc
das
adcl
ljmp
dec
xchg
mov
and
xor
add
xor
outsl
jmp
mov
aas
mov
push
scas
out
fisubrl
adc
dec
loopne
mov
in
dec
call
push
and
dec
sti
in
add
lcall
out
mov
lea
in
cs
js
das
push
push
mov
dec
mov
test
sarb
in
mov
stos
mov
push
push
pop
jae
push
movsl
clc
fsubrl
push
loope
cmp
rolb
pop
fwait
and
jg,pt
pop
xlat
dec
je
push
xchg
popf
push
jecxz
scas
or
pop
test
mov
cmp
imull
push
rcr
add
sbb
mov
mov
cmpsb
mov
stc
xorb
test
or
push
cmpsb
jmp
scas
mov
les
and
and
out
dec
cmp
loope
pop
mov
inc
jb
sbb
cmc
pushf
sbb
popa
mov
cs
out
jmp
cmp
adc
cmc
push
test
test
push
push
sub
lods
mov
push
loopne
mov
imul
mov
sbb
push
mov
jl
pop
stos
dec
push
mov
add
rolb
lret
sbb
bsr
push
jecxz
sbb
mov
lret
jp
fiadds
push
popf
push
xchg
mov
fs
subl
mov
mov
ss
test
jecxz
cltd
push
lods
jae
lret
lahf
adc
rep
xchg
stos
jecxz
not
sbb
adc
xchg
ret
addr16
xor
xchg
negb
push
xchg
or
sub
scas
lea
jo
lea
aad
cmp
xor
dec
repz
jo
les
mov
inc
cmp
and
add
inc
mov
loop
mov
add
adc
loope
sti
mov
xor
nop
out
gs
mov
jno
and
inc
out
jne
inc
adcb
or
pushf
xchg
xchg
dec
and
xchg
and
add
lods
dec
xlat
cmp
addl
cmpsl
pop
int3
ss
test
and
inc
jge
cmpsb
daa
sub
push
or
adc
inc
mov
sub
dec
cltd
fists
mov
les
cltd
jne
mov
mov
dec
fcomps
ret
in
mov
fldcw
test
cltd
and
mov
xlat
mov
mov
adc
mov
inc
loop
outsl
mov
test
das
cmp
adc
sub
icebp
rclb
jb
stc
cltd
int
int3
iret
pop
sarb
imul
mov
test
push
sub
ret
stos
pop
mov
pop
ljmp
push
mov
popf
shr
mov
pusha
sub
pop
mov
xchg
xchg
push
sub
jp
fs
dec
jo
in
cmp
outsl
sub
xchg
xchg
or
push
lcall
adc
jl
push
adc
fistl
daa
fcomps
into
ficompl
xchg
dec
jp
sbb
inc
lahf
cmp
imul
test
push
dec
dec
xchg
push
test
shrl
fisubl
aaa
jle
stos
pop
add
movsb
jmp
je
sbb
outsl
aaa
lcall
aaa
mov
cwtl
mov
xchg
add
cwtl
js
pop
sub
jl
ficoml
aas
xchg
dec
push
add
push
inc
xchg
fmulp
imul
lcall
and
fimuls
mov
adc
adc
and
mov
pop
pop
push
push
jb
cmp
into
push
dec
js
in
jno
loopne,pt
je
inc
in
mov
ret
inc
mov
daa
fisubs
cmp
sub
mov
cmp
mov
push
imul
mov
test
icebp
or
cld
push
stc
inc
cltd
xchg
sarb
lock
cld
mov
cmp
pop
ret
and
mov
xlat
add
je
mov
lds
mov
jp
imul
frstor
push
repnz
mov
fsubs
rcrb
out
repz
dec
es
int3
ljmp
cmp
mov
bound
add
sahf
sub
pusha
dec
xor
cmp
or
dec
jae
in
adc
popa
scas
push
sahf
nop
jnp
xor
out
outsb
test
pop
xor
mov
pop
lret
pop
loope
les
xor
cmp
and
shrb
imul
and
cmp
push
and
testb
xor
inc
and
cmp
and
add
or
and
rclb
pop
xchg
sub
jbe
fildll
outsl
mov
push
fs
lds
aam
inc
pusha
lods
bound
scas
inc
lds
xchg
mov
rol
cmp
push
neg
ret
sbb
lods
adc
cld
scas
jmp
int3
push
or
test
xor
pop
stos
loop
push
add
lret
lock
out
test
jp
jl
pop
vmovdqa
dec
lret
add
push
lea
inc
test
mov
push
push
cmp
aaa
sarl
and
mov
cmpsl
sti
mov
add
out
jno
add
lret
inc
arpl
jb
pop
inc
xor
mov
les
fimull
call
jmp
test
ljmp
movhps
pop
jnp
pop
pushf
mov
imul
fidivs
cmpsb
pop
ret
xchg
add
adc
push
mov
mov
jae
adc
data16
push
and
mov
aad
in
sub
sub
sbb
or
sbb
bound
push
in
out
push
sub
rorb
inc
jo
xor
scas
push
add
es
pushf
mov
fistpll
jo
add
inc
or
and
aaa
daa
lahf
andb
cmp
test
sbb
pop
aad
sbb
add
xor
cmp
mov
sub
outsb
dec
ds
mov
mulb
inc
sub
mov
hlt
lds
mov
fisttpl
and
bound
push
cmp
xchg
sbb
fcom
xchg
pop
jg
sbb
mov
js
push
push
xchg
popa
test
mov
pop
je
sbb
mov
test
cwtl
fldt
or
gs
push
out
sub
imul
add
ret
cmp
xchg
xchg
jmp
inc
jae
insl
adc
sub
xchg
out
gs
pusha
imul
fsts
imull
sub
sub
xor
shrl
fsts
inc
dec
insl
cmp
js
idivl
fidivrl
lahf
lds
stc
mov
lcall
fisubs
adc
ss
sub
repnz
test
fdivl
xchg
call
and
test
sqrtps
jmp
sub
adc
inc
and
call
sub
inc
fldpi
pop
repz
inc
outsl
sti
cmp
or
jne
push
xchg
je
jne
das
or
aaa
jge
dec
cmp
inc
repz
sbb
fwait
lret
popl
aaa
sub
mov
pop
pop
repz
sbb
pop
and
adc
stos
jne
jnp
sbb
aad
xor
popa
in
inc
and
or
mov
cltd
or
mov
xchg
pop
adc
mov
push
sub
subb
outsl
mov
fidivl
mov
fisttpl
cmp
jmp
adcb
movsb
pop
addr16
dec
and
sbbb
dec
jp
mov
xchg
jp
imul
sub
mov
out
leave
mov
arpl
js
imul
push
xchg
mov
icebp
pushf
sbb
pop
ljmp
stos
pop
ret
scas
inc
dec
daa
mov
lcall
movsl
inc
cltd
cmp
loop
and
mov
lcall
adc
and
mov
daa
fs
mov
push
dec
mov
cmp
stos
sbb
jnp
mov
int3
cmp
rorb
mov
jae
daa
inc
test
dec
mov
lret
stos
sbb
xor
mov
sub
push
addr16
push
and
cmpsl
loop
cmp
and
insl
iret
push
fwait
sub
and
ret
and
cld
pop
out
lea
add
add
mov
lock
jle
inc
fs
mov
push
and
sbb
cmp
xchg
pop
xchg
xlat
mov
and
mov
cmp
pop
ljmp
xchg
cmp
cmpsl
mov
insb
xchg
ljmp
ja
shlb
pop
jno
cmpsb
push
mov
lds
jge
add
mov
jae
dec
mov
fwait
mov
add
sub
lock
xor
or
cmp
adc
xor
cwtl
ljmp
fldcw
jmp
xchg
jb
imul
xor
pusha
out
inc
sarb
cmpsl
lds
cmp
jmp
cmpsl
int
inc
outsl
in
inc
dec
out
mov
out
cmp
mov
aas
sbb
mov
xchg
ret
and
ljmp
insl
sub
cmpb
insb
out
dec
mov
mov
rcrl
aaa
add
jnp
xchg
push
test
ficomps
dec
mov
mov
push
sarl
cmovle
or
cltd
fwait
inc
mov
std
sub
cld
sbb
fyl2xp1
inc
dec
or
daa
addr16
repz
inc
les
stos
cs
xchg
std
aaa
mov
xchg
orl
mov
mov
fs
pop
jecxz
sub
pushf
lea
lock
jp
pop
dec
out
daa
mov
pop
lret
aaa
and
flds
mov
icebp
insb
clc
jl
fdiv
pop
sbb
jg
in
sub
inc
mov
pusha
push
fimuls
mov
data16
pop
subb
dec
cmp
mov
inc
pop
out
cmp
lahf
jecxz
loope
pushf
push
rcrl
out
cmp
sbb
in
ja
pop
in
jo
andl
and
adc
in
loope
imul
cmp
ret
push
push
pop
es
cmp
jg
xlat
mov
addr16
clc
cli
inc
cmp
stc
xchg
es
fnstcw
ja
imul
shlb
mov
and
shll
inc
in
and
push
inc
and
test
mov
mov
xlat
fisubs
ds
adc
jge
inc
push
mov
loope
jae
pop
pushf
mov
jns
push
rep
adc
bound
insl
xor
fwait
cwtl
mov
in
xchg
mov
lds
jae
pushf
cmp
dec
mov
test
mov
iret
jo
outsl
lcall
adc
push
fbld
es
pop
cmpsb
stos
push
add
add
dec
sbb
mov
sbb
push
sbb
in
add
loopne
cmc
xchg
call
lock
scas
mov
jo
dec
sahf
pop
push
inc
mov
addr16
sti
movsb
lods
aas
mov
cld
adc
jno
or
divb
mov
lea
cmpsl
cmc
and
repnz
or
mov
ljmp
sub
sbb
mov
xor
ss
jl,pn
push
scas
inc
sub
mov
fisubrs
arpl
jl
jnp
inc
sbb
loope
xchg
std
mov
jno
adc
xor
mov
jne
push
dec
daa
mov
mov
xor
sbb
xchg
mov
xchg
fisubs
insb
push
pop
ds
pop
pop
mov
test
mov
fdivr
xor
ficomps
cmpsl
mov
adc
and
lret
outsb
adc
shr
shll
test
and
sbb
movb
inc
push
lds
mov
sahf
cmp
pop
scas
sarb
xor
dec
rdpmc
popf
ljmp
xchg
dec
lcall
inc
mov
fdivs
and
sub
xor
mov
mov
les
push
hlt
mov
fcoml
lcall
ficoml
insb
jo
push
sbb
inc
js
mov
lahf
ljmp
dec
jb
push
out
mov
jns
cmp
push
push
push
push
dec
mov
mov
arpl
mov
adc
movsl
loop
dec
shlb
cmp
dec
xor
rcll
mov
mov
test
push
mov
push
sbb
mov
and
sbb
ljmp
loope
push
push
js
test
hlt
xchg
stos
sbb
push
xor
add
jp
jnp
pop
dec
js
xchg
push
loopne
and
dec
sub
scas
arpl
xor
out
jecxz
test
adc
pop
sbb
cmp
divps
cmpsl
and
push
mov
dec
rcl
pop
or
dec
pusha
and
push
loop
dec
xor
jg
scas
flds
rol
adc
test
and
mov
int
mov
inc
mov
xchg
dec
add
aad
cmp
inc
xorl
push
and
bswap
addr16
dec
and
sbb
xchg
arpl
mov
sbb
fsts
add
scas
bound
fdiv
mov
mov
jmp
add
into
mov
shrl
mov
cmp
es
ss
jmp
mov
fisttpll
lea
push
popf
fisttpll
stos
filds
sbb
jecxz
iret
sub
in
test
add
xor
lods
jae
mov
sahf
fisubl
mov
push
dec
pop
fistps
xchg
sti
je
cwtl
and
mov
shll
sbb
lds
push
ret
sub
fmuls
test
and
adc
outsb
inc
repnz
cmp
es
mov
js
inc
bnd
sbb
pop
shrb
jae
pusha
cmp
sbb
mov
adc
inc
sub
out
gs
mov
or
cli
std
aam
lcall
add
inc
push
add
lods
pop
test
jecxz
aaa
ret
dec
aaa
fadd
popa
mov
mov
dec
push
jecxz
cmpsb
nop
mov
xor
test
pop
sbb
lahf
or
jp
pop
mov
outsb
add
push
cltd
mov
jp
adc
aas
test
scas
popa
inc
mov
ja
sub
xor
push
cmp
fisubrl
and
rclb
push
mov
or
mov
fstl
daa
mov
rol
rorb
sbb
cs
jmp
cmp
mov
push
vprotw
pop
sbb
sbb
inc
inc
inc
xor
xchg
jmp
test
xchg
pop
cmp
repz
ud1
daa
dec
sarb
cmp
lea
push
xor
xchg
add
int
scas
sub
xor
test
pop
and
outsb
cmp
and
xor
mulb
pop
pushf
mov
xlat
and
cmpsb
out
mov
in
cmpsb
imul
cmp
xor
cltd
out
mov
sub
data16
cltd
cmc
and
cwtl
arpl
in
test
cmp
mov
js
fnsave
fstpl
shrl
pop
cmpsb
nop
mov
pusha
or
rolb
adc
repnz
push
sbb
mov
mov
pushl
jge
jmp
aaa
inc
xchg
mov
push
daa
movsl
ss
push
shll
cmp
mov
es
test
xchg
popa
dec
pushf
push
pop
cli
int
or
lods
cmpsb
xor
cmp
sub
or
ficompl
and
mov
sbb
fisubl
pop
adc
mov
push
aaa
out
imul
adc
es
sub
xchg
dec
lret
in
data16
imul
das
cli
jae
prefetcht2
repnz
aaa
aam
clc
xor
out
ja
add
dec
inc
subl
xorl
fcompp
dec
push
and
aam
lcall
xor
aas
ja
inc
cmp
inc
outsb
pop
adc
fsubr
dec
push
js
call
pop
cmp
adc
call
jo
push
dec
dec
or
cmp
vpcmpgtb
mov
adc
push
xchg
shufps
sbb
jnp,pn
call
adc
fs
mov
stc
mov
dec
out
push
test
daa
cmp
dec
imul
xchg
sbb
cltd
pushw
je,pn
call
push
push
bound
aaa
sbb
inc
dec
and
and
mov
jo
shlb
cli
jp
cmp
push
cmp
call
mov
inc
and
and
hlt
test
and
jp
jle
push
js
mov
rorb
mov
sahf
mov
inc
inc
xchg
insb
mov
gs
sahf
sub
mov
call
push
pusha
stos
addr16
inc
std
mov
inc
inc
subl
punpcklbw
push
mov
fcomi
insb
xchg
mov
jo
lret
push
rolb
test
imul
jno
fistps
test
mov
push
out
push
xchg
popf
add
jp
cmpsb
out
xchg
xor
push
sbb
lock
jb
stos
sub
cwtl
pop
pop
push
fdivr
div
push
pop
mov
dec
dec
cmp
cmp
ret
add
movsl
pop
xlat
push
lock
mov
call
inc
mov
mov
aaa
adc
in
lock
mov
into
cwtl
cwtl
mov
cmp
rolb
mov
mov
lds
scas
jmp
cmp
mov
push
inc
push
pusha
popa
lds
lret
cmp
in
fnsave
pushf
fwait
cmp
ja
adc
jmp
xchg
ds
lret
cmp
sbb
jmp
hlt
into
data16
mov
outsl
mov
stos
inc
rol
xor
faddl
mov
outsb
xor
aaa
lds
outsb
out
pop
cmp
ljmp
loop
add
adc
push
repz
js
fistps
mov
cmp
mov
bound
jge
hlt
notl
icebp
xor
push
mov
mov
or
pop
popf
rdtsc
pop
mov
jns
lods
sbb
push
jnp
pop
dec
ret
mov
jmp
push
jo
jg
fsubrp
rol
daa
sub
lods
bound
jns
sarb
push
pop
icebp
dec
jl
xchg
push
loope
cli
je
test
xchg
push
popf
js
les
fs
in
insl
js
cmp
ljmp
repnz
repnz
lea
inc
jge
jo
sbb
mov
orb
in
lods
repz
int3
xor
dec
scas
mov
ljmp
inc
cs
sbb
xchg
push
sti
mov
mov
cli
dec
stos
mov
pop
dec
sbb
ficompl
xchg
cli
out
scas
loop
mov
inc
add
cmp
orl
and
sub
push
ret
mov
xchg
lds
loop
push
xor
jecxz
adc
mov
aam
outsb
cmpb
dec
ss
stos
xor
test
and
or
mov
xlat
lds
jle
imul
scas
arpl
pop
leave
inc
les
mov
rorb
lahf
arpl
cs
mov
outsl
lock
popa
pop
add
sub
xor
mov
divb
mov
mov
push
ljmp
inc
xchg
stos
lea
add
dec
bound
mov
outsb
inc
into
addr16
std
xchg
cltd
mov
arpl
xchg
sub
lods
inc
mov
std
das
ror
lea
pop
loopne
fdivs
or
adc
into
iret
xchg
fcompl
xchg
jl
lahf
xchg
test
inc
je
cwtl
lret
cmpsl
and
and
loope
jno
mov
mov
jg
bound
xor
test
xchg
stc
mov
movsl
or
and
and
jge
mov
pop
cmp
mov
mov
daa
mov
fnstsw
cmp
push
or
popa
xor
fwait
xchg
test
push
rcrl
push
idivl
cmp
push
and
lea
cmp
mov
nop
loope
sbb
jae
jb
notb
subl
insl
jo
push
push
out
mov
inc
xlat
sbb
pop
fcmovnu
and
xor
ret
sbbl
inc
push
jbe
xor
sub
jmp
or
jb
cmp
loopne
negb
mov
shlb
cmp
mov
test
stos
sbb
pop
mov
addr16
std
pushf
out
inc
xchg
cltd
popa
pop
mov
mov
rcr
cmpsb
scas
adc
adc
lods
imul
fisubrs
std
push
negb
inc
jnp
outsb
jo
mov
idivb
scas
jnp
xchg
cld
adc
aad
cmp
mov
in
pop
sbb
pop
mov
adc
shll
dec
rorl
and
inc
or
xchg
orb
cmp
or
xor
pop
push
cmp
testl
push
mov
jge
jl
pop
mov
inc
xor
sti
sbb
dec
mov
mov
inc
push
jb
clc
dec
out
inc
fdivl
jo
xchg
fnstsw
test
arpl
mov
sub
cmp
mov
mov
add
jmp
rol
fs
out
rcrb
dec
push
sahf
inc
sar
ja
inc
cmpsb
daa
sub
loope
xorb
push
push
cs
jb
repz
mov
pop
mov
sbb
jg
test
pop
xor
pop
jo
jb
sbbl
dec
outsl
adcl
adc
xchg
lock
test
or
jb
addr16
in
add
or
fidivrs
cmpsl
nop
fisubs
push
pop
sbb
dec
sbb
dec
add
insb
negl
adc
adc
jle
je
pop
pop
adc
js
inc
in
cmp
outsb
dec
popf
sbb
mov
push
das
das
arpl
popf
imul
jnp
nop
outsl
out
xor
dec
int3
mov
sub
cmpsl
mov
jno
iret
movsl
xchg
scas
mov
add
inc
pop
imul
or
pushf
xchg
js
push
xchg
addr16
cli
jg
sti
inc
insb
out
fwait
test
lods
xchg
scas
stc
pop
cmp
push
mov
aaa
mov
xlat
lahf
mov
je
push
pusha
cmpsl
sbb
cmp
or
add
ret
sub
lods
add
xchg
cmp
rolb
dec
js
cmp
inc
dec
pusha
mov
arpl
sarb
mov
dec
or
mov
bound
cltd
jnp
lret
movsb
movsl
fsubrl
mov
sbb
neg
mov
pop
push
popf
push
xlat
aaa
rolb
and
nop
cli
js
mov
int
mov
sub
xor
icebp
sbb
imul
jae
inc
mov
dec
sahf
add
push
push
sbb
xchg
addr16
sub
mov
jae
inc
or
inc
stos
cli
jb
push
fnstenv
sbb
or
jns
das
ficoml
adc
push
cmp
or
sbb
outsb
sti
popa
push
push
imul
lea
out
je
out
dec
popa
fs
and
cld
push
add
loop
imulb
pop
sti
mov
cli
in
dec
es
pop
call
cmp
popw
xor
xor
lret
or
sbb
dec
test
sahf
leave
aaa
lret
subb
push
int
cmp
arpl
xor
stos
in
inc
push
out
inc
cli
sar
les
aam
and
cmp
jg
xor
outsb
adc
test
jmp
repnz
mov
or
sti
jmp
lret
mov
jge
pop
sahf
pushf
sbb
ja
lock
push
mov
int3
push
fiaddl
lea
ljmp
cmpsl
dec
cmp
sbb
cwtl
cmp
shlb
lret
mov
out
lds
lods
jmp
cmp
insl
pushf
xchg
adc
mov
xchg
push
cmp
int
xchg
xchg
jmp
sarb
int
insl
inc
mov
inc
lock
iret
lock
ss
push
sahf
sti
jno
inc
jnp
push
push
cmp
dec
ja
cmc
push
push
jae
xorb
mov
adc
mov
inc
js
stc
mov
dec
mov
bound
push
inc
mov
inc
inc
in
xchg
fcompl
imul
push
test
jg
or
insb
jle
scas
push
mov
imulb
pop
jnp
add
sbb
pop
fnsave
push
dec
shlb
jns
pop
popf
addl
ror
or
mov
test
adc
or
cmp
mov
in
mov
lds
and
mov
mov
sbb
xchg
or
movsl
test
xor
pushf
ret
adc
dec
and
adc
xchg
mov
sub
xor
ror
xor
pop
insb
pop
mov
testl
insb
jp
xor
aaa
cld
lahf
mov
les
sti
and
push
cltd
mov
sub
in
mov
dec
arpl
fidivrs
imul
inc
scas
out
pop
and
cmp
arpl
cmp
or
push
cmp
test
dec
push
mov
test
jle
add
or
int3
clc
jnp
mov
add
fsubrs
xchg
push
push
pop
enter
and
xchg
stos
loopne
aad
jmp
pop
mov
jb
or
jne
mov
cmp
and
mov
stos
mov
xlat
pop
pop
insb
mov
loopne
mov
test
out
jae
jmp
inc
sbb
mov
or
aas
loope
mov
repz
jb
mov
in
dec
pop
inc
jp
mov
mov
pop
ja
add
jmp
fldenv
jnp
insl
sti
pop
inc
jns
stc
pop
push
jb
add
jg
jns
dec
add
xchg
in
inc
jo
in
ljmp
dec
mov
outsb
mov
cli
repz
push
jg
sarb
test
sbb
mov
or
jae
cltd
fs
dec
xor
xor
inc
or
dec
rcr
inc
mov
popf
std
aad
cmp
stc
icebp
and
dec
cli
cltd
call
cli
fdivrl
mov
or
insb
sbb
or
rcr
cmp
cmp
fnclex
sub
xchg
xchg
or
mov
lahf
xor
int
add
int
xchg
leave
in
dec
and
or
leave
shrl
ficoms
insl
sub
mov
inc
push
inc
cmc
add
cmp
cmp
pop
aam
dec
lahf
clc
mov
lds
std
call
mov
or
xor
jp
cltd
push
in
scas
loopne
movsl
pop
ret
sbb
inc
stc
and
jmp
adc
mov
rolb
mov
xchg
ss
subb
fisubs
mov
jae
das
out
mov
mov
loope
rep
test
push
mov
out
xchg
stos
jecxz
sbb
inc
xorb
shrl
inc
js
or
scas
mov
sbb
mov
shr
mov
popf
sub
mov
dec
cltd
mov
fs
test
ds
ret
mov
outsl
jns
pop
xchg
pop
mov
rorl
sub
leave
jne
jne
and
xor
int3
pop
ds
mov
inc
pop
jae
fwait
jle
lea
bound
ficoml
js
lea
scas
sbbl
pop
loope
into
xchg
jae
or
dec
fbld
test
les
mov
jo
or
jnp
add
jno
pop
jg
sbb
shlb
mov
std
cmpsl
add
push
mov
cmpsb
and
fiadds
or
daa
shrb
adc
test
scas
repz
push
sub
xor
inc
inc
test
shrb
push
scas
lret
xor
dec
add
and
fsub
outsl
pop
mov
dec
sahf
push
xchg
xor
xor
mov
ror
je
jecxz
pusha
das
addl
jb
pop
repnz
jbe
xchg
sub
std
sbb
test
vpcmpgtb
fs
leave
ss
and
inc
jmp
cld
fisubl
sbb
inc
mov
push
in
mov
stos
and
cmp
push
push
sti
stc
adc
stc
pushf
cmp
mov
in
dec
ret
dec
ljmp
mov
popa
scas
cmp
cmpsl
and
xor
mov
jp
sahf
push
imul
es
jo
mov
jle
adc
mov
pop
mov
adc
cltd
loope
or
into
pop
loopne
ljmp
mov
mov
or
cld
add
ljmp
sbb
push
push
mov
movsb
sub
xchg
cmpsl
sbb
sbb
adc
xchg
add
adc
mov
inc
xchg
shlb
dec
cmp
or
and
sub
iret
fs
xor
pop
mov
in
push
cmp
cmp
xor
popa
outsb
jae
mov
add
sub
lods
pop
es
xchg
mov
ret
and
shll
addr16
xor
jae
pop
enter
outsb
mov
inc
pop
xchg
arpl
fisubrl
notl
repz
popl
fildl
cmp
pop
cwtl
cmp
sub
loopne
popa
mov
xchg
inc
jmp
jo
cli
xchg
stc
cltd
pop
sub
mov
inc
mov
mov
fwait
cmp
mov
inc
cwtl
outsb
pop
je
dec
and
xor
sbb
aaa
imul
sub
lds
inc
jns
sar
js
das
ja
inc
sbb
aas
scas
lret
cmp
pop
ljmp
fistpl
inc
sti
pop
push
sahf
mov
rcll
sahf
insb
sbb
movsl
cmp
push
test
cli
es
adc
mov
ljmp
int3
or
push
out
or
jg
and
mov
xor
cld
sarb
movsl
ljmp
inc
xor
loop
cmp
in
je
out
add
pop
test
cmp
xchg
lcall
shr
xor
cs
aam
mov
jle
mov
cmp
pop
push
and
pushf
and
and
xchg
inc
pushf
outsb
jo
data16
test
pop
shlb
push
les
out
adc
mov
jmp
sbb
pushf
xchg
bound
sarb
cmp
xchg
jo
add
jmp
sahf
rolb
inc
inc
inc
sbb
scas
pop
cmpsb
ror
push
es
aaa
xchg
sbb
push
inc
je
loope
sub
fucomip
dec
pop
fisubrl
fnclex
cmp
lcall
filds
adc
mov
aas
sub
adc
mov
cmp
cmpl
pop
lea
add
xor
mov
xor
inc
sbb
push
sub
adc
scas
push
dec
shll
and
jle
and
out
inc
lcall
sbb
jns
inc
pop
push
pushf
jae
ja
das
scas
mov
inc
mov
in
add
ljmp
xchg
in
imulb
faddl
mov
jmp
sub
fisubl
stc
mov
sub
and
inc
repnz
sbb
enter
int3
int3
cmpsb
add
jle
add
lds
loop
stos
xchg
cs
lret
jl
fistl
hlt
xor
mov
cmp
imul
popaw
push
rol
push
repz
xchg
outsb
stos
cli
dec
mov
add
dec
sbb
inc
jb
das
sbb
dec
adc
sub
fisubs
xchg
dec
out
push
pop
sbb
stc
pop
in
mov
push
aas
lods
and
jle
xor
in
inc
mov
addr16
cs
push
cmp
sub
fucomp
repnz
pop
or
cmp
push
jne
scas
adc
and
inc
mov
mov
sbb
mov
out
dec
sbb
idiv
subl
add
xor
jno
repz
fistpll
dec
push
pop
push
cs
loop
popf
cmp
cli
push
insb
cmp
cs
shr
add
mov
jae
jp
jl
jbe
inc
or
inc
sbb
mov
adc
dec
mov
fdivp
divb
inc
in
mov
inc
sub
arpl
rorb
mov
shl
decl
jmp
mov
jnp
sub
test
je
cli
test
jg
add
pop
pop
cmp
sbb
mov
jp
add
or
pop
int
cli
pop
and
insb
fidivrl
cmc
inc
and
out
add
jmp
insb
out
in
mov
arpl
mov
push
or
mov
mov
mov
pop
pop
push
cs
push
arpl
call
push
test
add
pop
loopne
fiaddl
das
int
pop
cmp
cmp
jns
insb
test
and
mov
inc
ret
or
loop
arpl
sbb
call
fprem1
push
lret
sbb
dec
cmc
xchg
push
stos
push
mov
out
cmpsb
lds
mov
jae
outsb
fs
add
pop
fmuls
std
ficomps
addl
sub
jb
cs
scas
jbe
clc
nop
push
mov
sbb
bound
inc
mov
sbb
cmp
lds
inc
push
aaa
or
subl
push
xor
mov
inc
lock
sbb
outsl
sbb
pop
jo
dec
ja
mov
mov
sahf
sub
rcll
push
pop
and
jo
push
mov
test
jbe
mov
pop
xor
scas
and
sbb
ret
adc
xchg
cmp
sub
lcall
adc
je
aas
sub
jmp
testb
insb
jmp
jb
lock
mov
xchg
dec
inc
mov
ret
mov
cmc
xor
testb
inc
mov
push
mov
in
cwtl
xor
dec
xor
sbb
sbb
jbe
test
insl
out
lds
cmp
or
mov
fs
fcmovb
loop
aaa
sub
data16
pushf
fdivrl
popa
xchg
sub
in
pop
nop
mov
sbb
loop
mov
sti
fidivrl
sbb
jg
outsb
xchg
dec
mov
bound
loopne
sbb
int
inc
cld
mov
test
sti
mov
dec
out
lret
mov
rcll
rep
fsubl
push
and
jnp
test
sbb
inc
mov
sbbb
add
push
stos
loope
add
fwait
sbb
jne
outsl
cli
fiaddl
pop
and
pushf
lock
aas
cmp
pop
mov
arpl
outsl
stos
jns
cmp
lahf
jg
test
pushf
pusha
pop
push
mov
je
out
or
imul
mov
loop
push
jns
mov
vmread
cmpsl
scas
cs
jo
push
adc
mov
insl
call
or
inc
push
mov
movsl
popa
call
or
xchg
nop
add
mov
mov
sub
aad
or
or
ficoml
ficoml
pop
inc
inc
jp
into
sbb
pop
dec
sbb
fsubs
jg
cwtl
cmpsl
push
inc
dec
dec
addr16
in
pop
cmp
push
xchg
xchg
sub
dec
jp
testb
dec
popa
sbb
inc
cmp
stos
dec
fistl
mov
cmpsl
sbb
mov
aas
iret
and
mov
call
xor
jmp
xor
sbb
inc
and
loope
dec
test
dec
ss
jmp
iret
out
je
jns
cmp
pop
divb
xchg
push
imul
xor
iret
stos
insb
ret
mov
sahf
cmpsl
sub
pop
mov
lea
fnsave
ds
std
or
pop
cmp
mov
lcall
mov
mov
mov
ds
push
pusha
inc
push
gs
xchg
mov
cmp
sub
data16
ds
out
inc
pusha
lock
push
xor
and
pop
jmp
push
out
das
ja
dec
insb
clc
and
lea
adc
fidivrs
or
xchg
stos
mov
or
push
imul
outsl
pop
fldcw
test
xchg
icebp
testb
sbb
cmp
mov
jge
leave
icebp
dec
outsb
push
pop
push
das
insb
jb
test
pop
test
and
sti
push
daa
aaa
push
arpl
aam
xchg
mov
dec
and
cwtl
sub
xor
lea
xchg
dec
inc
out
cs
push
mov
addr16
add
mov
fnstenv
pop
dec
mov
sub
scas
dec
cmpsl
fcmovne
xchg
cs
lods
inc
mov
mov
cmp
or
sub
enter
sar
rcll
and
and
std
inc
and
cmp
cmpsl
repnz
xor
rolb
jecxz
jg
insb
imul
xchg
mov
test
inc
inc
lcall
leave
testb
sarl
jns
push
shll
cmpsl
jecxz
push
arpl
adc
inc
jg
mov
push
lret
jae
out
aaa
xor
jmp
sub
pop
leave
adc
aaa
or
push
and
dec
xchg
stos
mov
outsb
dec
cmp
fdivrs
mov
inc
push
stos
adc
ljmp
insb
push
pop
lahf
jb
ja
and
mov
xchg
pop
inc
scas
sub
jae
and
lock
mov
out
push
aaa
sub
dec
lods
sti
repz
cmp
out
call
loopne
mov
in
inc
fdivp
jne
cmp
jmp
sub
inc
pop
xor
sub
jbe
sar
dec
xchg
sbb
mov
les
add
lahf
shr
mov
and
mov
inc
testb
psubq
aas
adc
icebp
adcl
push
insb
jne
lcall
or
dec
mov
into
je
mov
mov
sub
pop
jl
addr16
in
test
daa
add
mov
sbb
pop
test
repz
lock
pop
scas
xchg
js
mov
rcrl
cmpsb
leave
fadds
lret
pop
xchg
sbb
jb
pop
adc
mov
jl
xor
jle
mov
mov
test
les
lea
jne
mov
lods
push
in
lea
pop
arpl
les
jl,pt
inc
sub
repz
out
decb
inc
ret
push
es
test
pop
lods
sub
dec
leave
mov
push
dec
sbb
loop
sub
test
call
lahf
or
fs
cmp
loop
jo
push
mov
jecxz
xor
or
das
imul
sbb
xchg
sbbl
push
ljmp
xor
negl
mov
sbb
inc
push
jb
mov
pusha
lods
inc
mov
data16
mov
sub
iret
pop
xchg
movsl
test
xor
aaa
cmp
push
dec
mov
xor
dec
cs
fldt
jae
xchg
xor
mov
mov
and
outsl
fidivs
cltd
in
jo
pushl
pop
jecxz
jecxz
int3
sti
ja
adc
jns
lds
lock
push
cmp
push
movsb
addr16
stc
pop
notl
loopne
mov
stos
js
push
stos
xor
enter
inc
dec
repnz
add
daa
xchg
xor
emms
jle
inc
pop
push
push
add
lock
xchg
test
sbb
lea
outsl
call
or
and
pop
aam
mov
ret
cmp
xchg
mov
or
idivl
je
ret
push
fsubrl
imul
sbb
cmp
test
sahf
shlb
push
iret
sub
add
inc
push
sub
stos
cmp
push
icebp
outsl
and
mov
push
dec
dec
aaa
lahf
test
ja
cmp
cmpl
lds
cmp
shl
loop
pop
insb
bnd
imull
lea
in
mov
mov
int3
xchg
jae
inc
repz
pop
cwtl
bound
push
stos
push
pop
mov
xlat
dec
inc
push
pop
mov
lds
roll
cmp
push
xor
ds
sub
pop
out
add
popf
outsb
push
daa
adc
jmp
push
mov
imul
incb
pop
push
jns
pop
and
cmc
neg
inc
adc
hlt
daa
mov
ljmp
ret
push
repz
popa
sub
std
adc
fimuls
push
jecxz
adc
loop
dec
xchg
push
ss
lock
mov
push
ss
adc
stos
out
xlat
inc
xor
data16
es
xchg
cmp
clc
xor
sbb
pushf
popa
inc
js
cli
mov
cwtl
icebp
mov
rclb
dec
cmpsb
mov
fsubrs
clc
push
fdivs
lods
add
arpl
cmc
cmp
mov
sub
icebp
mov
mov
or
aaa
call
call
xchg
cmp
jmp
mov
jb
cmpsb
and
dec
js
cwtl
push
sbb
push
mov
jns
push
ljmp
inc
push
sahf
mov
or
movsl
movb
mov
adc
mov
xor
imul
fbstp
mov
in
mov
popa
cli
and
push
imul
mov
lahf
gs
jecxz
sbb
call
xchg
cmp
fidivl
and
aad
xchg
flds
xchg
pop
add
in
je
xchg
cmpsl
decb
dec
adc
mov
push
jo
sahf
push
repnz
mov
js
inc
push
sbb
stos
inc
mov
fcmovbe
sub
mov
add
outsl
pop
xchg
imul
shll
sub
adc
mov
fidivs
sub
mov
loop
sbb
jecxz
push
push
pusha
inc
push
es
arpl
xor
aaa
adc
popf
or
sbb
in
ret
ret
insl
xchg
xchg
outsl
pop
clc
mov
mov
insb
in
pop
push
xor
dec
xchg
insb
jno
aaa
xor
or
push
mov
sub
inc
and
ds
cltd
sub
push
daa
xor
jmp
arpl
das
mov
pop
jae
mov
cmp
add
sub
pop
sub
jb
mov
out
imul
adc
loop
inc
scas
cmp
arpl
jb
stos
loopne
inc
adc
xor
lahf
out
xchg
icebp
loope
mov
and
or
inc
xchg
mov
jbe
addr16
das
aas
imul
sub
pop
mov
jmp
pop
pushf
sub
aaa
sbb
nop
inc
pop
out
mov
orl
cmc
inc
mov
fsubrp
or
pusha
and
xor
jne
xor
push
mov
mov
push
leave
out
inc
insb
pop
rcll
xchg
cs
dec
fisubs
and
dec
insl
jo
inc
aas
push
imul
fstl
xchg
mov
aam
sub
fxch
sbb
ljmp
scas
sbb
jle
pop
gs
sahf
stos
push
mov
inc
leave
xchg
in
cmpsl
push
leave
sbb
ljmp
push
mov
mov
mov
add
mov
rorl
pop
sub
stos
and
mov
outsl
and
lea
push
mov
sbb
xchg
jmp
push
pop
mov
and
jbe
dec
xchg
inc
cmp
imul
scas
dec
mov
lds
jge
jbe
std
daa
ret
mov
iret
xor
xchg
subl
mov
repz
and
jecxz
xchg
ret
dec
mov
ljmp
aaa
cmp
jo
shrb
popf
mov
push
pushaw
aaa
push
ret
and
pop
lea
pop
es
push
mov
lock
pusha
repz
xchg
mov
rcr
fldenv
ror
and
sbb
mov
or
add
cs
push
frndint
shr
cmp
mov
addr16
mov
pop
mov
lds
es
mov
mov
mov
subb
in
test
xchg
fst
cmp
pop
inc
popf
and
xorl
mov
ret
jo
fs
jp
decb
sbb
cmp
cs
push
push
cmp
dec
and
xor
and
cmpsl
sub
add
jbe
icebp
pop
daa
dec
adc
lock
divb
add
jg
and
cmpsb
jmp
push
mov
jns
jmp
sbb
cmp
repnz
insl
mov
cmp
orb
mov
psubusw
mov
negb
fpatan
xchg
out
mov
push
dec
rcl
and
std
jb
push
push
jbe
andl
xor
jle
adc
adc
daa
dec
scas
imul
shl
call
sahf
les
mov
lea
js
adc
mov
inc
fmuls
xchg
dec
repnz
dec
push
shlb
pop
test
dec
pop
stos
insl
dec
sarb
jno
and
cwtl
icebp
mov
jmp
jns
mov
les
lret
scas
out
and
jne
mov
xchg
into
inc
xchg
hlt
jmp
adc
je
out
pop
pop
cmp
inc
jnp
fistl
les
rcrb
sub
cwtl
xchg
mov
push
adc
ret
ja
test
js
inc
cli
mov
push
cmp
out
cmp
cs
cld
xchg
clc
nop
imul
pop
mov
push
jmp
fidivl
es
das
sbb
fbstp
jns
scas
and
lock
jl
push
fistpl
fldt
je
dec
lret
je
sub
mov
loop
daa
adc
add
gs
subb
add
ss
lcall
inc
and
cli
gs
push
imull
or
popa
popa
dec
mov
notb
xor
repz
xchg
or
push
ljmp
cli
push
push
dec
out
pop
inc
movsl
xchg
adc
push
enter
dec
hlt
push
xor
bound
ret
fistl
outsb
int
fidivrs
call
loopne
mov
stos
inc
daa
subl
jb
jle
and
cmpsb
pop
mov
mov
xchg
push
sbb
jnp
subb
mov
orl
jbe
inc
jl
mov
out
adc
loope
sbb
and
in
es
sbb
sub
ja
mov
lret
jb
bound
outsb
idivb
adc
mov
sbb
mov
cmpl
pushf
mov
push
xchg
sbb
jnp
inc
push
sbb
sub
dec
inc
rep
in
dec
jb
movsl
aad
lret
xchg
daa
movsb
mov
inc
shl
xor
mov
mov
jp
inc
stos
cli
xor
loop
mov
fs
cmp
mov
inc
ss
mov
xchg
push
mov
mov
loope
idiv
lods
stc
adc
adc
push
sbb
and
cmp
cwtl
mov
aaa
mov
sahf
out
out
ret
stos
outsl
aas
adc
add
rdpmc
in
sbb
push
insb
mov
imul
push
gs
or
jg
xor
sbb
push
mov
sahf
mov
adc
scas
adc
dec
repz
enter
push
dec
and
sbb
mov
divb
adc
sub
lods
xchg
cmp
or
mov
clc
es
mov
ret
and
outsb
cmp
cmpsl
sbb
out
mov
mov
jmp
outsb
cs
push
add
pop
jl
sti
or
dec
test
cltd
addr16
out
es
rol
and
dec
jmp
rorb
push
mov
ret
data16
popa
or
lret
and
aaa
in
and
mov
sti
testl
cmp
push
mov
or
ret
shlb
xchg
out
push
scas
shlb
in
outsl
jmp
lcall
push
xor
xor
mov
adc
pop
stos
test
jp
push
in
inc
push
stos
mov
fsubrl
mov
call
sub
js
and
push
cmp
adc
sbb
das
lock
das
test
arpl
mov
inc
arpl
jbe
jg
cli
pop
or
pop
push
and
fwait
lds
push
or
jns
bndldx
lds
jg
cmp
stos
xor
sbb
mov
inc
inc
xchg
dec
push
leave
push
ds
test
arpl
fidivrs
or
mov
sub
fbld
ljmp
lea
test
out
pop
int
push
jae
inc
dec
lret
sbb
pop
popa
repz
pop
sub
xor
xor
jecxz
cs
xchg
out
or
mov
icebp
push
and
imul
lea
pop
lcall
pop
xor
dec
int3
xor
out
stos
sbb
sub
add
or
dec
cmp
je
mov
mov
outsl
mov
or
jnp
pop
push
data16
dec
jae
mov
int
mov
mov
dec
and
dec
pushf
into
outsb
and
or
adc
mov
mov
je
push
test
ret
outsb
cmp
lcall
xchg
arpl
arpl
js
xor
xchg
pop
test
cli
cmp
es
jbe
xchg
repz
cmp
call
sbb
jmp
jp
mov
push
fildll
sbb
rcll
jne
nop
insb
outsb
mov
test
shlb
xchg
adc
ror
mov
lock
push
jnp
push
pop
icebp
into
icebp
in
or
mov
outsb
jp,pt
lock
and
jns
adcb
pop
jmp
sarl
cmp
cld
mov
mov
movsb
or
stos
push
xchg
pop
in
pop
and
es
dec
jp
out
out
addr16
cmp
loop
int3
fists
outsb
mov
call
mov
lock
jns
sub
rol
jmp
aaa
mov
ds
xlat
and
out
out
ss
push
pop
negb
dec
mov
and
xor
mov
and
push
mov
je
lret
addr16
or
outsb
xchg
push
jb
inc
pop
sub
pop
ret
das
and
ljmp
test
jo
pop
mov
repz
sbb
ret
push
jle
in
pop
xchg
jle
lret
mov
jne
stos
push
xlat
pop
cli
push
jmp
pop
sbb
fcompl
mov
push
test
mov
dec
cs
mov
sbb
mov
push
jno
and
jge
pop
inc
sti
outsb
inc
cmp
dec
inc
xor
inc
sub
push
rorb
add
fidivrl
or
loop
dec
inc
jge
push
stos
mov
jbe
subl
xor
cmp
shll
jle
insb
fsts
push
sub
xor
out
mov
dec
ss
sbb
data16
insb
insl
cmp
sbb
les
stos
repnz
loop
dec
pop
mov
ficoml
js
push
fimull
mov
pop
sub
sarb
pop
pushf
cmp
cmpsb
cld
mov
pop
dec
cmp
pusha
jle
stos
push
jnp
cmp
test
add
jb
in
push
dec
ss
push
add
inc
push
inc
add
outsb
mov
mov
cmpl
push
fwait
jb
jae
jnp
scas
jo
and
clc
stos
xchg
cmpsb
add
lods
in
std
fisubs
fimull
fmuls
rcrb
fsubr
jno
rol
inc
imul
into
mov
pushf
adc
fidivl
cmp
ljmp
inc
fdivrl
inc
arpl
push
push
mov
roll
pop
pusha
inc
push
les
pop
push
mov
and
jecxz
shrl
out
cmp
mov
jbe
adc
in
mov
push
data16
test
mov
int
test
mov
push
cs
pop
aam
lcall
push
movsl
int3
enter
in
movsl
jo
sub
pop
outsb
jg
push
cmp
insl
mov
push
mov
cmp
hlt
pop
and
lret
pop
imul
push
cmp
xchg
push
dec
cwtl
mov
movsb
jecxz
pop
push
mov
leave
fsubl
dec
push
insb
push
loop
add
push
fwait
stos
and
mov
in
cltd
scas
sub
sub
stc
push
out
outsl
jo
mov
jb
push
in
arpl
divl
jns
push
mov
divb
jge
sbb
inc
fisttpll
cmp
cs
in
cli
mov
inc
dec
cmp
inc
dec
inc
frstor
push
add
sahf
sbb
lds
cs
adc
int
push
daa
cmp
pusha
mov
pop
std
lea
int3
mov
jns
in
ss
in
enter
push
mov
fimull
in
cltd
dec
lods
repnz
push
ficoms
ficompl
dec
enter
push
fidivs
mov
mov
in
mov
loopne
leave
ret
sbb
out
movsl
inc
push
push
rcrl
mov
test
push
pushf
inc
cs
stos
lea
cld
mov
imul
push
popf
cmp
jl
sub
jae
cmp
cmp
mov
dec
inc
fisubs
pop
fimull
xchg
pusha
xor
mov
into
lea
pop
ret
push
pop
mov
xor
sbb
stos
clc
mov
das
cmpsl
mov
fnsetpm(287
cltd
aas
cltd
pop
ficompl
in
ds
xchg
cs
test
lret
cmp
scas
push
mov
mov
test
cmp
cli
xchg
pop
mov
jg
push
add
nop
jmp
mov
dec
dec
mov
fidivl
cmp
fldt
jmp
ficompl
data16
xor
mov
sub
adc
stos
jbe
hlt
pop
shrl
je
movsb
mov
cmp
dec
mov
fstps
cmp
stos
sbb
ja
cli
push
mov
fs
aas
test
cli
or
add
and
jmp
inc
pop
dec
lcall
lahf
cmp
mov
pop
jp
lahf
jmp
lea
pop
xchg
data16
dec
sbb
sbb
popl
clc
xchg
jg
movsb
jae
stos
cltd
leave
jno
outsb
push
ljmp
pop
fstpt
out
mov
stos
sub
call
xchg
bound
mov
mov
lea
hlt
pop
xor
jno
test
pop
sbb
pop
mov
pusha
dec
insb
pop
cmp
scas
sub
test
dec
dec
out
push
push
insb
jg
js
xchg
jno
mov
pop
mov
pop
je
test
inc
movb
add
mov
dec
iret
push
ljmp
mov
or
sbb
pop
lock
out
and
push
fdivr
or
and
jo
hlt
in
pusha
xchg
jecxz
stos
jae
jge
pop
scas
jbe
pop
arpl
jle
sub
lret
ljmp
inc
push
push
mov
xor
sahf
push
xchg
push
insb
cwtl
cwtl
out
dec
add
cmp
or
jae
fldenv
sub
push
push
stos
and
decb
inc
cltd
lds
data16
pushf
ret
sbb
pusha
cmpsl
or
inc
inc
das
jbe
push
mov
jmp
popa
cmp
ds
pop
cwtl
lock
dec
jbe
jne
lea
pop
lds
inc
ds
cwtl
mov
call
push
sub
xor
dec
mov
in
mov
imul
shlb
push
rol
popa
out
add
in
sub
sahf
fcomps
sbb
shl
mov
fwait
jb
mov
insb
mulb
and
xor
mov
sub
cs
jne
test
nop
mov
loopne
adc
mov
jae
lock
pop
and
xchg
sbb
movsb
xor
mov
mov
jo
shrl
jns
ljmp
mov
and
inc
out
idivb
mov
stc
jae
jnp
je
pop
incb
mov
mov
or
add
arpl
shrb
inc
pop
push
and
dec
stos
arpl
out
cmp
push
push
sbb
mov
dec
cmp
mov
fidivrs
cmp
push
arpl
push
mov
jo
cs
std
cmp
outsb
insb
out
cmp
out
pop
push
ret
outsb
mov
inc
sbbb
push
dec
jg
pop
push
mov
in
and
jb
adcb
arpl
cmp
jmp
loop
xor
ficomps
sbb
add
test
push
push
shlb
fsubrp
mov
js
mov
movsb
push
and
sub
dec
ds
xor
pop
jno
xchg
lcall
push
daa
ss
mov
inc
pop
sahf
inc
into
pop
stos
lcall
add
and
mov
js
push
sbb
jno
cmp
jp
sbb
scas
sub
data16
stos
cmp
jbe
test
jmp
mov
aaa
push
mov
sub
and
sbb
insb
or
jne
pushf
out
mov
cs
or
mov
cs
jb
jmp
test
cltd
out
sbb
mov
cmp
jp
mov
or
mov
push
lahf
sbb
push
or
cmp
mov
and
inc
cs
sub
or
leave
fidivl
popa
ljmp
les
lret
mov
ret
imul
xor
fisttpll
push
into
and
push
je
dec
sbb
cmp
jl
ss
xchg
jnp
xchg
cltd
cmpsb
std
jg
pop
cmp
cmp
negb
xchg
push
pop
shll
and
ja
pop
cmp
xchg
lcall
mov
out
inc
mov
push
xchg
loope
xor
mov
inc
sti
jmp
adc
scas
repz
ficoml
ret
and
ds
ss
and
inc
ret
push
and
je
jbe
dec
adc
imul
incl
lock
jmp
jb
fidivl
movsl
int3
shrl
test
inc
daa
add
jbe
push
inc
movsl
mov
pop
sbb
cmp
sub
jns,pn
dec
add
push
imul
xor
pushf
aaa
mov
call
push
jnp
ds
and
dec
push
pusha
sbb
sti
gs
and
jb
jg
jbe
jl
repz
aam
jbe
cmp
pop
out
mov
stos
adc
mov
repnz
mov
lcall
je
inc
repnz
inc
cmc
mov
cmp
jmp
addr16
jnp
jbe
mov
and
filds
ljmp
mov
pop
mov
push
je
mov
call
push
lret
xor
or
inc
stc
jne
lret
outsl
mov
int3
cmp
mov
aas
dec
popf
ja
pop
push
out
lea
outsl
sub
outsb
dec
push
dec
fnsave
cmp
addr16
hlt
jg
rcrb
test
push
pop
cmpsb
mov
inc
push
lds
push
jno
push
pop
sbb
sub
cmpsl
popf
and
lahf
fisubl
cmp
and
xchg
push
bswap
or
dec
inc
mov
ret
inc
sti
sbbb
mov
pop
mov
loop
mov
mov
cli
iret
aaa
push
scas
rclb
pop
mov
mov
xor
movsl
cltd
loope
sbb
xor
scas
ret
and
xchg
cmc
xor
dec
fwait
cmp
inc
inc
mov
dec
kmovb
mov
sbbb
lcall
mov
lret
mov
dec
das
dec
sbb
jnp
fwait
test
mov
ljmp
mov
mov
pop
pop
xchg
adc
sub
jle
or
imul
daa
push
push
arpl
mov
xor
jae
outsb
xor
push
cmp
sub
or
into
sbb
xchg
ret
sub
inc
or
push
mov
fldt
pop
sbb
ficomps
pop
xchg
or
inc
mov
inc
mov
stos
inc
jne
push
fcmovu
mov
sub
dec
or
jb
push
inc
data16
sub
fistps
fldl
hlt
jb
adc
mov
cmp
or
andl
lcall
mov
jp
pop
and
pop
add
xor
lret
xchg
orl
ja
scas
sbb
mov
scas
pop
mov
call
mov
pop
mov
imul
fstps
pop
imul
mov
pop
jmp
xorb
pop
push
xlat
jecxz
jmp
hlt
adc
orl
mov
das
jg
scas
int
and
mov
mov
mov
fimuls
inc
sbb
xor
js
lcall
pop
dec
add
inc
das
and
js
daa
mov
cmp
lds
sub
into
das
sahf
mov
js
shll
mov
pop
pop
dec
cmp
loope
arpl
push
test
cltd
ljmp
xor
mov
imul
je
xor
or
ret
aad
mov
out
adc
stc
adc
inc
outsb
andl
sub
stc
movsb
out
call
push
fnstsw
pusha
jns
scas
xlat
mov
or
repz
mov
cli
loopne
push
sbb
mov
push
fldl
add
pop
and
xor
mov
aaa
xor
icebp
dec
sbb
cmc
ret
jno
sti
ljmp
mov
push
sub
inc
mov
repnz
pop
lock
jb
mov
sti
jp
lods
adcl
jmp
out
jp
push
mov
or
xor
repz
sbb
lcall
stos
push
sub
test
cmpsb
add
daa
dec
ret
or
inc
xorl
adc
jge
inc
xlat
dec
pop
outsb
pushl
cli
and
sti
out
xor
pop
test
and
mov
dec
add
cmp
sahf
mov
sbb
dec
ret
cmp
mov
je
xchg
mov
jmp
ret
dec
push
sbb
dec
inc
in
mov
fs
push
stc
mov
dec
fcomps
pushf
xchg
fwait
mov
test
add
lock
imull
and
lock
sbb
or
inc
orb
je
xchg
loopne
pop
cmp
push
sub
xchg
push
aas
sub
rol
add
and
jae
push
pushf
stos
divb
cli
cmp
pop
sbb
addr16
sbb
xor
or
enter
movsl
sbb
mov
sbb
mov
setb
aad
out
pushf
push
cmpl
and
data16
pop
mov
sub
insb
dec
shl
test
sbb
fisubl
clc
scas
fwait
push
insb
mov
mov
imul
lret
fcoml
jbe
jno
mov
addl
sbbb
xchg
cmc
mov
scas
dec
fistpl
cmp
mov
fstpl
dec
pop
dec
pushf
mov
mov
cli
mov
aas
push
in
pop
lahf
imul
js
push
repnz
adc
sbb
adc
das
pop
je
std
push
in
fwait
and
loop
cmp
add
sub
cli
inc
xchg
fldt
insb
pop
stos
xlat
lock
ds
loopne
push
int3
adc
xchg
dec
dec
les
loopnew
or
sub
ds
adc
add
mov
ds
pop
push
ds
movsl
ljmp
or
rcrb
xor
push
leave
loope
leave
jb
mov
pusha
imul
bswap
hlt
fcomip
dec
sbbl
and
or
bound
inc
leave
adc
and
cltd
adc
and
inc
test
inc
jmp
repz
fs
lods
sub
dec
and
pop
imul
push
sbb
ret
mov
outsb
das
push
xchg
mov
inc
add
sbb
insb
push
fisubrl
int
insl
scas
and
fistpll
loopne
xor
push
cltd
divb
xchg
pop
xor
and
sub
xorl
outsb
andl
pop
imul
pop
and
add
mov
movsb
add
aas
ja
cmp
push
jbe
lcall
ljmp
scas
fldcw
sbb
repz
mov
xchg
push
push
movsl
cs
lds
imul
push
pop
dec
xor
jne
shlb
bndldx
sahf
imul
rcrl
aas
scas
cmp
sub
mov
xor
xor
mov
mov
rep
sbb
fisubrs
push
aaa
xchg
and
push
mov
into
xchg
stc
push
xor
jo
jno
sbb
out
sahf
fcomip
mov
jno
cli
and
out
bts
xchg
and
pop
jo
mov
sbb
out
dec
fwait
xor
lock
out
xor
mov
fisubrl
lods
cmp
cltd
int3
js
icebp
in
cmp
fsts
add
push
jle
daa
arpl
testb
je
je
adc
ss
push
cmp
mov
mov
cmp
sbb
jns
andb
popa
add
call
mov
or
mov
push
sbb
pop
cmp
xor
ret
push
leave
push
sbb
ds
movsl
lret
add
jp
mov
push
out
adcb
sbbb
mov
das
sahf
imul
xchg
sub
add
out
sub
sbb
leave
jns
inc
es
loop
cld
and
push
out
gs
cli
iret
mov
pop
cmp
fildll
ret
daa
aaa
enter
jns
into
cltd
sbb
dec
xor
push
dec
mov
out
xchg
push
pop
cli
push
mov
fucomp
das
cmp
push
cmp
aaa
imul
inc
mov
xchg
in
cmp
nop
mov
outsb
stos
xor
xchg
movsl
idiv
gs
sub
jmp
sbbb
insb
sbb
or
pop
fidivrl
daa
jno
lds
fimull
adc
mov
mov
or
vpextrw
lds
inc
scas
jb
cmp
jb
repz
sub
xchg
xchg
in
lret
jns
cli
dec
cmp
push
ret
data16
cs
testl
rorb
sub
cmp
lcall
das
adcl
insb
jo
sbb
sub
out
dec
ret
cltd
out
testb
dec
or
rcrb
mov
lret
push
dec
lock
inc
xchg
fisttpl
inc
mov
jmp
leave
and
cmc
cltd
ret
and
scas
mov
bound
mov
leavew
rclb
cmp
xchg
sub
sti
add
inc
jmp
sub
push
mov
add
pop
add
stos
sub
mov
push
in
cmp
iret
pop
sub
sbb
push
add
or
daa
pop
xchg
arpl
sub
jl
out
addb
mov
sub
out
sti
aaa
ret
pop
movaps
fistpll
repnz
add
daa
and
and
jno
inc
cmp
adc
mov
popa
jg,pn
jnp
cmp
mov
mov
loop
cmpsb
sub
call
and
daa
fists
js
xlat
and
sbb
popa
shrb
xlat
lret
mov
rclb
cwtl
mov
loope
imul
cmp
test
arpl
push
mov
adc
mov
pop
xor
scas
call
mov
test
push
sbb
mov
cmp
xchg
xchg
dec
cmp
xchg
adc
jb
pop
pop
sbb
pushf
arpl
bound
cmpsb
mov
inc
outsl
out
push
stc
push
pop
mov
mov
loopne
lds
out
aas
mov
test
pop
inc
push
xchg
call
inc
fwait
imul
push
mov
xor
aaa
mov
daa
test
mov
subl
idivb
dec
sub
ljmp
mov
push
push
dec
xor
inc
sub
jge
adc
in
sbb
rcrb
cmpsl
ss
insl
fs
sbb
sbb
xchg
mov
repnz
or
jmp
push
inc
cmpsb
cmpsb
and
push
dec
sub
popa
push
inc
xchg
call
add
push
scas
popf
push
push
insb
jp
fmull
test
cwtl
clc
sbb
or
callw
pop
and
nop
lret
mov
inc
aam
ret
push
daa
jns
mov
jmp
and
or
dec
add
ds
stos
mov
xchg
mov
pop
jg
stos
stos
inc
fistpl
in
ret
pop
cld
sbb
dec
clc
fs
push
int
cmpb
outsl
hlt
aaa
mov
pop
cmp
je
and
je
mov
fdecstp
lds
xchg
hlt
mov
pusha
jmp
leave
and
fcmovu
sbb
and
sub
jg
into
or
cmp
push
sbb
mov
sbb
inc
lea
dec
cmpb
jbe
jge
fs
inc
fsubl
aaa
cmpsb
jbe
out
jg
repnz
pop
scas
dec
ret
pop
sbb
notb
xor
jl
fwait
lret
pop
rcr
sbb
testb
out
cs
lds
inc
inc
xor
push
cmp
insl
jo
loopne
xor
bound
lods
jns
adc
pop
jae
cmp
andl
or
add
push
stos
pop
adc
push
mov
pop
shlb
pop
bound
sbb
lock
aaa
dec
roll
mov
push
stos
daa
lds
insl
mov
adc
repz
iret
jle
popa
jmp
fs
cli
cmpsl
add
mov
subb
sub
jmp
inc
test
imul
mov
mov
mov
adc
mov
mov
jp
inc
and
cmp
fistpll
stos
data16
rclb
insl
and
out
call
lret
je
jno
cli
fstpl
cmp
push
or
and
mov
push
lea
cmp
push
cs
xchg
push
dec
mov
dec
sahf
sub
mov
pop
push
jne
jmp
test
mov
mov
loope
out
push
pop
adc
push
scas
int
icebp
cmp
pusha
cmpsl
mov
das
mov
mov
and
fs
jg
andb
insb
inc
daa
mov
or
push
push
int
in
inc
mov
inc
and
jno
sahf
and
ljmp
ds
cmp
ret
cmp
movsl
int
lds
mov
mov
jmp
psrad
jg
or
cmp
xchg
xlat
xchg
in
cld
es
fldcw
mov
push
stos
jne
cmp
jb
push
lcall
inc
repz
xor
jbe
push
loop
pop
inc
adc
inc
cli
mov
lcall
dec
ljmp
sbb
loopne
inc
mov
fistpll
mov
adc
push
ja
dec
cmp
lea
test
sbb
add
push
inc
pop
lret
cmp
jns
pop
jno
out
dec
pop
lret
int
dec
cmp
cli
pop
aam
shlb
bound
test
in
stc
imul
arpl
xor
dec
data16
je
insb
std
inc
pop
daa
sbb
aad
iret
mov
jnp
cmp
arpl
jecxz
dec
lret
sub
aas
loope
pop
fistl
je
jmp
mov
faddp
js
mov
shrl
scas
fstps
inc
iret
pop
mov
addb
pop
dec
mov
xchg
adc
loopne
mov
cvtps2pi
lahf
ret
imul
mov
dec
daa
sub
xchg
xchg
insb
outsl
mov
adc
scas
sub
sti
mov
pop
cmpb
push
sbb
mov
sub
add
mov
dec
repnz
fidivrs
imulb
cmc
cmp
adc
mov
rclb
cmp
aas
cmp
inc
imulb
and
aam
arpl
lret
scas
mov
xchg
fwait
mov
loop
mov
incl
and
ret
ss
pop
cmpsl
add
in
movq
sub
in
lods
sub
and
fiadds
rcrl
into
flds
fsubp
mov
inc
mov
push
loop
sahf
in
mov
dec
popa
pop
lods
outsb
or
xchg
push
fwait
ret
filds
mov
movsb
push
sarb
popf
dec
orb
aam
rclb
bound
mov
inc
js
push
xchg
mov
adc
out
inc
xchg
sti
ss
repz
mov
lods
rcll
mov
fnstcw
repnz
xor
mov
push
dec
jl
sub
mov
mov
sti
jb
rol
int
repz
mov
and
pop
dec
cmpsb
mov
mov
ds
inc
frstpm(287
jo
clc
imul
sbb
cs
out
cmp
movsl
mov
mov
lods
push
xchg
pop
jl
gs
xor
inc
out
loop
lcall
inc
sarl
aaa
cli
jecxz
sbb
out
gs
cmpsb
inc
push
ss
pop
fiadds
xchg
push
inc
mov
fistl
stos
inc
in
push
loop
and
aaa
xchg
push
and
ret
mov
inc
fwait
adc
ret
pop
repnz
sti
fidivrs
xchg
pop
and
push
sub
lret
mov
imul
inc
mov
dec
icebp
aad
inc
mov
mov
inc
pop
or
popf
jbe
jno
inc
mov
je
mov
cwtl
out
daa
push
insb
icebp
bound
push
pushf
cmp
inc
lret
push
cmpsb
or
sbbl
scas
cmp
mov
lret
add
lcall
int3
and
add
push
xor
fstps
mov
lret
jp
gs
xchg
jg
push
repz
pop
pop
shlb
stos
sbb
pop
or
and
arpl
ret
outsb
sub
pushl
mov
push
cmpsl
xchg
jae
sub
cmpsl
sbb
data16
ret
fldt
mov
shld
and
shll
imul
adc
or
rcll
mov
movsb
inc
dec
mov
negb
pop
jge
pop
add
sub
jecxz
fstps
add
fimuls
dec
outsb
or
push
ret
subb
and
stos
push
push
inc
pop
inc
cs
add
or
ret
sbb
jo
xor
push
ljmp
in
pop
adc
int3
push
pop
cwtl
into
xchg
ret
jb
pop
jb
rclb
jmp
ja
movsb
adcl
dec
push
xor
xchg
push
sbb
cmp
mov
pushl
pop
jge,pt
mov
in
xor
jle
dec
das
mov
adc
mov
or
push
mov
popf
scas
and
sub
insb
jae
sbb
js
lods
push
int3
fsubrl
scas
jmp
cmpsb
icebp
jb
push
fmull
loop
and
shlb
xchg
repz
inc
ret
cmpsb
shll
insl
das
or
ja
repnz
inc
xor
inc
push
jmp
or
into
ds
jb
pop
push
lret
xor
loop
sbb
faddl
pop
mov
fs
lds
fdiv
sbb
xor
daa
add
fistl
or
fcmovne
stos
data16
repz
xchg
and
xchg
cli
adcb
jge
fisubl
insb
repnz
mov
adc
sbb
loope
mov
xor
pop
insb
aaa
mov
jp
add
adc
mov
dec
push
ss
inc
pop
jbe
adc
push
xchg
add
jmp
into
ds
cmp
xchg
icebp
jae
and
xchg
mov
leave
cmp
movsb
mov
movsb
std
xor
leave
or
popf
test
adc
scas
jmp
aad
jne
das
loop
stos
dec
jno
xor
imul
test
xchg
push
ret
cs
enter
mov
arpl
dec
push
or
dec
sbb
mov
mov
lcall
xchg
inc
sahf
das
cltd
enter
inc
and
vpmaddwd
icebp
pop
xor
sbb
lods
dec
es
cmp
push
mov
sbb
cmc
cld
fimuls
loope
loop
pop
icebp
add
push
test
inc
nop
xchg
and
mov
sti
xchg
idiv
mov
lds
out
lahf
push
popa
repnz
cs
stos
inc
cmp
and
xorl
int3
outsb
stos
xchg
mov
fisubs
add
or
ja
mov
stc
ds
lock
inc
adc
cmp
repz
sub
fmull
lock
sub
and
sarl
cli
fidivrl
inc
cmpsb
outsb
dec
std
cltd
test
andb
fistpl
mov
dec
ljmp
lock
push
jmp
popf
and
repnz
lret
inc
ficoml
fs
mov
inc
mov
daa
fistpll
rcrl
lods
and
cmp
pop
sub
pop
out
mov
fisubrl
dec
es
inc
stc
pop
insb
jecxz
cmp
jg
mov
inc
loop
in
jg
repz
cmp
es
adc
fists
push
loop
addr16
push
push
out
cli
aad
dec
push
ficompl
enter
dec
mov
mov
xchg
and
test
aam
mov
mov
ss
sbb
jmp
pop
xor
mov
clc
hlt
test
andl
cld
fcoml
fldcw
xor
or
fs
ljmp
subb
push
cmp
or
fwait
cmpsl
sub
sbb
rcr
jb
int
in
cmc
jl
jo
jl
insl
loope
or
adc
dec
cmpsl
push
xchg
out
adc
push
mov
es
push
pusha
addb
mov
add
pop
pop
mov
mov
test
in
movsl
popa
call
out
lret
jno
fs
jns
aaa
push
pop
sahf
mov
and
adc
sbb
mov
add
daa
sbb
mov
fdivrl
xchg
fimuls
fisttpll
push
and
sbb
sbb
neg
mov
mov
sub
pop
sbb
scas
push
add
sbbb
mov
push
and
cmp
mov
xchg
dec
call
sbb
mov
mov
stos
rcr
fstl
leave
ffree
and
xor
sub
xchg
push
inc
push
jae
xor
out
xchg
and
add
lods
ds
and
add
sub
call
out
js
cmp
mov
rclb
jne
arpl
stos
push
cmp
xchg
sub
call
dec
jnp
xchg
lock
sahf
jae
js
mov
dec
pushf
bound
adc
lahf
enter
movsb
xchg
adc
or
insb
xchg
jp
and
pop
lds
and
cmp
leave
and
loop
imul
test
andl
push
cmp
push
jg
add
adc
adc
out
mov
or
sbb
push
push
xor
cli
pushf
push
ret
outsb
jns
movl
mov
adc
in
aad
iret
stos
ss
lea
data16
sub
sti
dec
pusha
aas
add
repz
mov
cmp
rcrb
stos
es
push
lret
negl
cmp
adc
jle
negb
fadds
mov
shlb
inc
movsl
inc
xor
aas
pop
cmp
pop
pop
in
dec
stos
and
cmp
and
int3
inc
and
dec
inc
loopne
xchg
imul
cmp
and
jbe
inc
mov
fcompl
movb
fstpl
mov
or
icebp
adc
mov
test
adc
xchg
push
add
stc
and
push
mov
jl
cmp
movsb
inc
out
inc
sbb
or
out
dec
jae
xchg
push
nop
cmp
sbb
gs
das
push
or
aaa
scas
dec
cltd
sub
xchg
cmc
in
icebp
or
xchg
fldcw
push
pop
mov
out
adc
inc
dec
sbb
ja
movsw
mov
jb
dec
xchg
scas
add
ljmp
insb
adc
or
pop
mov
jp
lods
js
mov
cs
in
lret
data16
push
stos
and
fdivs
arpl
outsl
or
stos
out
sub
bound
add
xor
clc
loop
popf
rcrb
lret
pushf
xchg
pop
lcall
xor
mov
bound
jne
xchg
ret
les
cmpsb
dec
or
inc
scas
cs
cli
xchg
je
movsb
sbb
cmp
rorl
cmp
lret
pushf
sub
pop
fiaddl
imul
dec
movsl
loopw
es
test
sub
fsubl
pop
les
or
or
jmp
jb
adc
js
xchg
sbb
xor
fstps
out
test
xor
outsl
and
pop
sar
les
rcll
and
rcrb
and
fistpll
mov
sub
mov
out
inc
bound
push
data16
lcall
jno
xor
movsb
mov
mul
and
outsl
lock
lret
es
jnp
cmp
adc
aas
pop
inc
xor
pop
inc
cmp
xchg
mov
mov
xchg
mov
aaa
mov
sbb
lds
mov
scas
repz
xor
sub
mov
and
out
ret
pop
inc
into
mov
inc
adcl
push
ss
xchg
es
dec
push
lods
jmp
xchg
sub
sahf
cld
push
mov
cmpsl
xchg
scas
stos
inc
jbe
loop
ja
bts
jecxz
jb
call
cmp
pop
inc
out
orb
sub
dec
pop
inc
es
inc
inc
xchg
lcall
inc
arpl
or
sbb
cli
ror
aaa
xchg
int
nop
cli
cmp
pusha
repz
incb
decb
cmp
stos
imul
sbb
hlt
outsl
mov
push
sbb
inc
push
stc
sbb
cmp
xor
push
and
mov
dec
enter
jmp
rcrb
xor
cmc
mov
pop
adc
addr16
out
andl
movsl
jp
jmp
pusha
jg
mov
test
mov
jae
mov
cs
or
pusha
add
push
lods
xchg
nop
adc
popa
push
cmpsb
je
push
aas
into
mov
cmc
sbb
pop
cmpb
pop
sahf
nop
ss
outsb
inc
push
jae
aas
pusha
int3
sbb
cli
bound
or
das
mov
call
fsubs
xor
into
mov
clc
cmp
pushl
sbb
add
dec
xchg
mov
cltd
pop
and
inc
pop
cmp
addl
jae
lahf
mov
sbb
mov
inc
cmp
sbb
push
add
and
mov
or
mov
sbb
pop
inc
insl
outsl
sub
mov
nop
es
gs
push
mov
ret
mov
scas
sahf
sub
ret
je
xchg
dec
flds
fwait
mov
cli
jne
scas
mov
mov
inc
jb
push
iret
cmpb
in
mov
gs
ret
imul
xor
inc
leave
repnz
push
cmp
jp
or
push
adc
push
ds
imul
ficoml
fsubr
xor
cmp
std
inc
jp
fnstsw
je
fs
mov
inc
aas
dec
out
push
sub
imul
xor
push
insb
pop
fs
sbb
lret
in
mov
dec
jnp
and
xchg
mov
cld
out
xchg
inc
push
cmp
mov
adc
sbb
and
mov
inc
shll
pop
mov
adc
es
aas
test
xchg
das
jno,pn
inc
lret
cltd
mov
mov
stos
sbb
or
push
out
push
xor
or
mov
add
in
cmpsb
and
repnz
loopne
imul
fs
orl
dec
lea
jno
aas
and
pop
sub
jo
pop
cmp
cmp
xor
inc
lcall
gs
cwtl
adc
push
mov
cmp
add
cltd
popa
and
aas
add
stc
fadd
inc
add
cmp
push
mov
cmp
imul
pop
xlat
and
lds
fimuls
and
xor
or
ret
and
mov
xchg
jo
daa
jge
dec
jb
cmpsb
les
and
sbb
xchg
clc
lods
mov
mov
fldenv
mov
or
sub
xor
fwait
add
movsb
test
ret
mov
push
mov
sahf
jae
fadd
or
dec
rcrb
fwait
into
push
pusha
icebp
mov
jnp
inc
inc
xor
ficomps
mov
out
and
fcoms
push
stos
dec
fdivrl
je
pop
cli
cli
ja
stos
jmp
scas
rclb
imull
or
push
mov
dec
inc
mov
sbb
arpl
vandnpd
add
gs
dec
xchg
popf
xchg
inc
das
sub
stos
sub
fadd
xorl
dec
fsubrl
mov
leave
add
adc
sahf
and
xchg
xchg
push
and
adc
insl
push
push
lods
mov
testb
in
mov
cmp
mov
aam
in
shr
js
sub
xor
and
inc
fucom
sahf
incb
aaa
jmp
lcall
cmp
fldt
lods
jl
fdivs
shl
imul
add
lahf
inc
sbb
pop
ljmp
or
loop
unpckhps
gs
ljmp
push
cmpl
test
sarb
ss
jb
sub
lret
pushf
pop
adc
push
push
pop
lret
test
lret
je
fcmovu
std
mov
pop
mov
pusha
addr16
mov
lods
divb
inc
sub
fs
xor
sub
sbb
sbb
sbb
xchg
pop
xor
dec
pop
shlb
test
mov
xor
mov
bound
test
int
inc
int3
rolb
push
mov
mov
test
popa
cwtl
add
jb
push
je
mov
push
imul
aam
es
lea
sbb
mov
dec
scas
xchg
stos
mov
rclb
inc
inc
mov
cmp
mov
cmp
sbb
stos
fwait
popa
scas
inc
cmp
mov
mov
or
mov
pop
xchg
mov
push
inc
push
pop
repnz
and
inc
mov
inc
repz
ss
stos
cmc
and
clc
sub
mov
int
cs
lds
add
adc
inc
std
push
cmp
mov
sub
cmp
jge
mov
adc
push
push
mov
fisttps
popl
sarb
inc
int3
add
xlat
mov
and
leave
mov
daa
in
cmp
cmp
push
loopne
push
pop
pushf
push
sbb
stos
movl
adc
xchg
push
aas
push
mov
pusha
jns
cmc
push
in
in
sbb
popa
and
and
outsb
mov
and
stos
out
leave
sbb
stc
popa
sti
mov
aad
testb
mov
cmp
adc
daa
lret
hlt
faddl
ret
bound
daa
lea
aaa
inc
push
scas
pop
fldenv
imul
inc
insb
dec
arpl
mov
jmp
adc
dec
inc
lds
xchg
dec
arpl
cmpl
mov
push
test
stos
cli
ljmp
dec
push
cmc
mov
push
fimull
mov
lods
loop
or
push
sbb
rcll
mov
mov
and
adc
shll
mov
mov
push
jbe
mov
mov
mov
inc
shll
insb
jp
pop
lcall
dec
sbb
add
mov
xchg
dec
cmpsb
lret
dec
ljmp
cmp
jno
jle
xor
mov
movsl
push
and
outsb
jo
loop
dec
dec
mov
push
fisubl
jno
aas
out
push
push
inc
pop
loop
nop
jnp
sub
xchg
cmp
inc
insb
push
ret
xor
xlat
dec
out
ret
scas
in
fdivs
cmp
pusha
xchg
xchg
push
xlat
mov
ds
dec
fwait
rorb
cmp
mov
jle
pusha
push
jae
stos
xor
inc
xor
pop
aaa
xor
lods
xchg
jl
pushf
cmp
es
dec
jp
dec
out
add
test
or
in
movb
push
adcb
cmp
mov
test
mov
xchg
dec
mov
mov
mov
xchg
cmp
push
ja
cmp
sbb
cli
or
push
cmp
divl
lcall
and
mov
lcall
push
andb
mov
ja
iret
stos
pushf
dec
inc
jmp
push
jg
fsubl
inc
int3
xchg
adc
and
je
sbb
cmp
sbb
mov
mov
or
je
xchg
adc
xorb
imul
xchg
mov
add
inc
rcr
or
dec
adc
add
xchg
xor
ret
push
jp
xor
cmc
test
fstl
pop
andl
xchg
mov
jb
xor
mov
dec
xchg
mov
dec
sub
inc
cmc
aas
js
cli
lods
idiv
stos
andl
mov
mov
and
fiaddl
mov
sub
pop
stos
lds
cs
pop
xchg
add
jmp
into
mov
fnstenv
pop
cmp
push
imul
sub
popf
xchg
add
aaa
or
jmp
inc
and
mov
out
pop
stos
stos
jl
popf
cmp
pusha
scas
cmp
mov
ds
dec
popf
mov
xchg
fiaddl
fwait
test
cltd
popl
and
test
xor
stc
int
push
jle
shrb
test
stos
jb
imul
imul
aad
stos
mov
push
push
inc
fistpl
lds
push
imul
push
cli
pop
stos
mov
lcall
out
flds
stos
pusha
in
ja
in
xchg
lahf
cmpsb
jl
ret
sahf
gs
lahf
les
setp
mov
adc
js
inc
sbb
out
scas
adc
inc
add
add
in
out
jae
xor
addr16
arpl
in
sarb
add
xor
std
je
popf
mov
ja
sub
repnz
pop
shrl
xor
push
jge
cmp
aaa
lds
push
stos
sbb
mov
mov
lahf
push
sarb
sbb
dec
xor
sbb
gs
dec
imul
mov
jmp
xchg
movsb
inc
and
inc
and
rcrb
roll
push
push
jp
dec
xchg
push
stos
inc
outsb
or
xchg
into
sub
movl
les
push
ud2
mov
scas
test
sub
call
lret
inc
outsl
push
test
mov
fimull
rorl
xchg
sub
xchg
and
leave
aas
push
or
mov
cmp
in
loope
add
in
push
lcall
or
fidivl
inc
mov
int3
loop
adc
loopne
dec
sbb
adc
arpl
daa
mov
aas
lret
stc
mov
sub
xor
pop
cs
or
mov
pop
mov
adc
push
test
cmp
je
sub
inc
imul
inc
inc
and
xchg
ljmp
fwait
pop
mov
cmc
stos
jmp
pop
dec
lea
aad
stos
dec
xor
xchg
ret
pop
or
push
sub
inc
lcall
cmp
jp
shlb
sbb
inc
or
ret
mov
outsb
mov
je
repnz
in
and
sbb
sub
mov
cmp
jecxz
dec
test
add
loop
inc
repnz
add
pop
cmp
mov
imul
fidivs
fcmovnbe
wbinvd
mov
cmpsl
mov
iret
leave
insb
adc
daa
repz
imul
ljmp
fs
cmpl
adc
jmp
cwtl
jns
add
lret
or
mov
popa
sub
js
push
xchg
dec
push
mov
push
mov
pop
aad
sbb
xchg
push
sbb
cld
and
inc
das
stc
xchg
jb
add
cmp
cmp
cmpsb
xchg
inc
dec
es
mov
mov
mov
push
dec
jae
imulb
inc
sbb
test
dec
pop
inc
ja
mov
sub
push
rcr
adc
popf
addl
fs
data16
pop
xor
in
add
sarl
inc
pop
test
imul
xor
leave
mov
pop
lds
adc
je
mov
cmp
fmull
adc
sarl
in
or
fnstenv
insb
pop
adc
jmp
jl
pushf
xchg
test
rcll
fsubr
rorl
lods
and
dec
leave
jae
jnp
or
xlat
loop
bound
jp
or
jg
insb
inc
adc
aas
xchg
sbb
add
dec
stc
adc
fidivrl
push
jle
mov
sub
sbb
cmp
lret
pop
aas
jae
cmp
mov
test
cs
sbb
mov
in
cmpsb
enter
int3
mov
sbb
sub
push
xor
into
mov
test
add
out
lret
outsl
pop
fadds
dec
jle
cmp
pop
dec
insb
xchg
push
sbb
mov
andb
imul
push
clc
ret
sbb
in
inc
add
aas
add
xchg
pop
or
lea
divb
sbb
adc
pop
sti
push
inc
out
ds
mov
xor
add
cmc
xchg
outsb
xor
or
mov
shlb
ss
nop
popa
clc
ljmp
or
jb
dec
leave
mov
fldenv
jnp
frstor
mov
or
stos
jns
jmp
jnp
bound
pusha
test
pop
bnd
scas
or
outsb
test
cmp
pushf
sbb
jo
and
sbb
test
cmpsb
cmp
imul
ljmp
cmp
aaa
daa
mov
clc
outsl
dec
pop
mov
push
mov
cmp
jmp
jo
out
pop
pop
pop
inc
stos
add
ret
push
test
pop
arpl
pop
popf
xor
cli
xchg
xor
rcrl
ret
push
mov
out
bndldx
jns
mov
ds
mov
test
popa
jmp
shll
dec
jmp
js
add
inc
sbb
xor
adc
cmp
sbb
icebp
dec
fimuls
add
pop
and
nop
mov
or
cmp
pop
jnp
xchg
mov
push
mov
imul
cltd
cld
push
xchg
xor
xchg
repz
test
jge
out
inc
inc
cs
xchg
jb
pop
mov
adc
jne
insb
pop
jb
into
les
daa
or
push
je
mov
imulb
jo
ret
sub
test
xchg
popf
xor
leave
idivb
testl
ja
lahf
and
mov
mov
jp
ja
lock
lds
stos
adc
inc
movsb
movl
lcall
test
sbb
sti
mov
pop
data16
stos
push
xchg
addl
mov
insl
cmpsb
cli
stos
push
inc
imul
mov
cld
add
aaa
add
jp
out
jmp
adc
dec
jp
sar
ret
cli
adc
aam
xor
push
ds
and
xchg
mov
xor
mov
data16
loopne
sti
mov
dec
jno
jle
dec
xchg
add
jo
cmp
pop
bnd
push
add
sub
pusha
test
cmp
mov
cmpsl
sbbl
dec
stos
and
out
cmp
or
cmp
test
jecxz
aas
mov
lret
ja
sbb
push
adc
fs
popa
xchg
xchg
loop
stos
add
cmp
mov
aam
sti
pop
push
insb
pop
out
stos
push
aas
fbld
push
cli
addr16
mov
lds
push
mov
insb
xchg
jmp
xchg
pop
testb
into
daa
dec
test
stos
loop
mov
pop
imul
lods
inc
idivb
inc
cmp
lds
pop
in
push
lds
sbb
cmp
call
pop
movsb
addr16
shlb
xor
mov
aaa
lret
cltd
sub
jns
fisubs
mov
adcl
mov
sub
mov
mov
mov
dec
sub
cli
sub
outsb
cmp
aam
inc
das
dec
addb
inc
push
mov
or
inc
mov
test
mov
bound
cmovp
aaa
mov
lds
negb
jb
insl
xchg
fcmovb
call
add
popa
inc
das
test
sbb
xor
repnz
pushf
push
lods
sar
cmc
sbb
into
xor
mull
mov
push
cmp
push
lret
inc
sahf
stc
adc
inc
paddd
push
sahf
cmc
outsb
sbb
lcall
call
in
ret
cld
dec
pop
sub
adc
out
in
fsqrt
lds
lret
adc
push
pop
mov
xor
out
popf
fidivrs
fdivl
dec
or
pop
jns
fs
pop
rcrb
mov
push
notb
pop
push
in
into
xchg
push
xchg
rolb
cltd
inc
test
dec
sahf
mov
pop
xor
rcr
inc
adc
mov
gs
sub
adc
or
es
imul
fdivrl
ljmp
in
ret
inc
jl
cwtl
xor
subl
clc
sbb
into
and
daa
push
cmp
push
pop
into
mov
ljmp
and
mov
lods
lret
repnz
outsl
imul
dec
push
jae
ja
rcr
mov
xor
xor
mov
dec
sub
cmp
gs
mov
xchg
xchg
mov
xorb
ljmp
push
cmp
pop
int3
in
inc
nop
xchg
loop
and
orl
repnz
fldlg2
push
mov
lcall
mov
popa
sbb
mov
mov
jle
fisubl
inc
sub
xor
jns
loopne
fisttpll
cmp
loop
push
lea
push
cld
dec
inc
arpl
hlt
jbe
pop
clc
sub
or
imull
insb
adcb
and
xchg
dec
imul
push
mov
dec
fstpl
mov
inc
mov
scas
pop
lea
cmovb
pop
jb,pn
cmp
sub
pop
daa
inc
mov
into
sbb
inc
or
arpl
or
xor
mov
mul
cmp
fiaddl
mov
push
dec
lret
cmp
jmp
mov
pop
push
js
stos
sub
imull
es
sbb
jno
stos
add
popa
loop
out
or
es
nop
pop
pushf
outsl
in
jecxz
xor
daa
sahf
lret
jmp
icebp
and
inc
inc
adc
mov
mov
mov
mov
adc
cltd
pop
jne
or
push
mov
scas
ret
inc
sti
mov
lret
mov
inc
mov
push
mov
mov
orb
fisubs
popa
cmpsb
jge
dec
and
pop
ret
fisubrl
ftst
mov
sub
into
stos
push
test
push
jo
sub
or
pop
sbb
int3
adc
sub
dec
xor
pop
lret
andb
loop
sarl
loope
dec
lret
mov
cmc
xor
push
jle
push
push
push
xor
adc
sbb
mov
dec
ds
mov
out
and
xchg
sbb
jle
inc
xchg
iret
into
aaa
js
push
push
adc
mov
neg
pop
xlat
sti
cmp
sbb
pusha
inc
sbb
mov
mov
sbb
mov
call
mov
std
cmpb
cmp
add
sbb
add
sahf
pusha
dec
insl
pop
movsl
and
lret
push
xor
insb
dec
and
dec
push
or
sbb
repz
mov
mov
movsb
iret
rolb
inc
inc
mov
adc
and
pop
cmp
push
jb
loope
dec
bnd
jne
ja
in
bound
imul
cmp
pop
ret
sbb
push
in
fidivl
test
int
fs
leave
stos
jb
ficomps
mov
jmp
adc
fdivl
scas
rorl
popa
aaa
fiadds
adc
lock
lea
cli
push
lahf
sub
cmp
push
xor
inc
inc
lret
pop
and
add
mov
inc
push
mov
and
stos
nop
xchg
jns
add
and
xchg
and
aas
rol
mov
lock
aas
cmpb
cmpsb
loope
xlat
add
or
jbe
addr16
loop
add
sub
sbb
in
push
insb
jp
scas
and
mov
sub
inc
dec
sbb
pushf
xchg
sub
jg
pop
jno
mov
test
aas
inc
scas
mov
faddl
aad
mov
push
sub
push
cli
bound
mov
fwait
dec
mov
push
push
mov
jne
es
dec
xchg
movsb
dec
pop
jb
mov
add
push
dec
xor
sub
add
iret
leave
fiadds
fildl
mov
daa
aaa
cwtl
push
fdivs
ja
add
ds
mov
pop
push
push
sar
push
ret
inc
ss
sbb
xchg
dec
out
filds
mov
sbb
xor
pop
xor
scas
popa
mov
iret
sbb
sub
nop
push
jmp
xor
stos
pop
outsl
add
pop
call
das
sub
ds
push
aaa
and
cmp
inc
and
push
or
mov
fimuls
mov
add
out
movl
int3
test
xor
andb
hlt
cld
movdqa
stos
stos
inc
movsl
mov
out
fists
push
mov
repnz
dec
js
shll
sbb
xor
pop
inc
jp
and
loopne
push
inc
fdivl
mov
sti
xor
adc
or
insl
xchg
icebp
cmc
sahf
call
pop
xchg
add
in
mov
divl
cli
sub
jg
inc
inc
mov
out
push
mov
jg
pop
lds
mov
sbb
jp
repz
sub
enter
pop
push
or
repnz
mov
mov
mov
inc
mov
fs
xor
leave
arpl
fs
scas
fnstcw
insb
loope
jb
stos
pop
xor
fistps
add
jmp
insb
les
bound
jg
cltd
scas
ffreep
pusha
andb
cmpsb
mov
aas
jecxz
dec
sub
dec
jmp
pop
pushl
fbld
inc
ds
aam
and
cmpsb
imul
ficoms
cli
pop
cmp
sbb
pop
data16
push
xor
jmp
ljmp
xor
jns
mov
jl
jb
je
ss
mov
mov
inc
jae
inc
mov
dec
push
js
add
in
lcall
sbb
xchg
adc
xchg
mov
mov
sbb
mov
lods
xchg
push
mov
stc
xchg
arpl
test
cmp
aaa
neg
shl
mov
dec
or
pop
xor
jp
jb
mov
cltd
and
mov
lock
lods
stos
gs
es
arpl
push
dec
dec
je
test
pop
fs
in
or
out
mov
cli
mov
insb
and
mov
movl
push
lods
jnp
cmp
mov
xor
pusha
dec
jge
cli
lret
adc
repz
inc
jg
push
dec
xlat
inc
sbb
fcomp
mov
push
mov
cltd
xchg
loope
xchg
mov
push
in
xchg
pop
or
mov
inc
or
xchg
pop
push
pop
xchg
cmp
iret
or
sahf
pop
divb
jne
adc
inc
cmp
xor
rorb
fldenv
and
test
mov
cmc
dec
insb
ljmp
sub
sub
lods
push
mov
add
stos
inc
arpl
cmpsl
jo
sub
rcr
and
scas
test
ret
jl
push
test
fnsave
leave
sub
jb
cmpsb
cltd
pop
push
inc
sub
cmp
ljmp
push
cli
rcrl
push
xor
orb
inc
cli
popa
xlat
push
scas
mov
xlat
repz
xchg
jae
pusha
inc
jno
push
sahf
jl
sbb
xchg
mov
hlt
or
and
xchg
or
and
rolb
inc
dec
sbbb
pop
and
jle
and
insb
pushf
jge
xchg
jo
dec
push
jo
inc
popf
mov
ss
or
jo
popa
loop
inc
out
mov
icebp
sbb
xor
pushf
popa
adc
mov
aaa
inc
test
ja
pop
aaa
mov
mov
sbb
adc
stos
sbb
in
jns
repz
fnstcw
inc
jb
scas
lcall
pop
push
lock
pop
mov
push
push
imul
mov
mov
insb
jno
das
aas
aas
lcall
sub
jg
add
sub
mov
cltd
flds
insb
lds
imul
dec
xchg
mov
addr16
mov
push
jns
cmpsl
ror
mov
lock
nop
out
ljmp
test
jl
mov
imul
fldenv
or
jmp
and
push
scas
xchg
pop
and
push
fmull
mov
cmp
or
or
and
jecxz
adc
arpl
pop
pushf
and
cltd
test
mov
bound
ja
sbb
add
add
mov
repnz
ds
cmp
sub
mov
rol
int3
sub
loop
xor
jno
mov
repnz
in
cmp
clc
out
xchg
cmovnp
pop
jecxz
ror
xchg
xchg
jl
mov
pop
xchg
add
cmp
fs
scas
lock
mov
xchg
inc
dec
stc
fistpll
push
mov
clc
pop
xchg
mov
in
pop
push
sub
add
push
rcll
mov
or
push
xchg
nop
pop
jo,pn
mov
nop
mov
popa
pop
fwait
nop
add
aam
or
inc
cltd
or
jae
mov
js
jmp
and
ret
fsub
loopne
leave
sbb
mov
dec
mov
adc
mov
pop
out
test
and
xchg
sbb
mov
and
out
clc
jecxz
cli
adc
dec
jbe
daa
xchg
xor
adc
or
dec
pop
aad
mov
insb
mov
test
mov
push
cmp
jne
mulb
inc
ja
rcrb
bound
pusha
mov
lock
adc
hlt
or
ret
mov
cmp
cmp
ljmp
bound
xor
pusha
loopne
pop
jae
sub
mov
out
cli
sub
cmp
inc
faddp
out
cmp
xor
cltd
mov
mov
adc
std
call
xor
outsb
insb
jns
jbe
inc
and
and
pop
dec
cltd
or
cli
dec
add
xorb
xchg
mov
sarb
and
pop
adc
mov
and
faddl
nop
add
test
movsl
rol
jl
jecxz
aaa
dec
fs
sub
ljmp
and
loopne
in
adc
push
mov
sub
pop
stos
daa
and
xchg
mov
lds
test
cmp
jae
and
xlat
lds
ja
inc
mov
mov
std
inc
dec
dec
jno
adc
outsl
dec
lods
insl
cs
dec
cmc
or
cmp
ljmp
in
inc
mov
and
ret
fistpll
rolb
int3
daa
gs
inc
ja
hlt
pop
loopne
jno
mov
mov
rep
inc
jl,pt
test
ss
cs
repnz
mov
inc
ds
add
dec
insl
andb
jle,pt
sub
repz
inc
xchg
cli
fimuls
add
ljmp
ficoml
cmpsb
inc
lds
jnp
daa
sbb
test
hlt
dec
enter
mov
mov
xor
pusha
adcb
adc
sub
add
inc
and
fisubl
push
sbb
cmpl
pop
pop
scas
push
inc
js
fildll
push
xor
xchg
mov
push
push
cmpsb
daa
jnp
xchg
fs
shlb
xchg
nop
pop
push
fs
decl
inc
jmp
daa
and
fidivrl
repz
cli
sub
pop
aaa
cli
push
mov
in
cwtl
dec
ljmp
pop
or
orl
and
xor
or
lahf
pop
shll
push
roll
push
sarl
stos
data16
push
imul
ret
loopne
loopne
vphaddbq
jl
fnstcw
repz
js
arpl
fbstp
xchg
js
loop
imul
mov
xor
mov
add
mov
insb
jne
xchg
fwait
lcall
std
xor
cmp
sub
sbb
inc
decb
mov
ss
daa
and
inc
test
jg
xchg
ds
mov
mov
cltd
pop
fistpl
repz
push
mov
xor
lods
test
pusha
leave
cmp
or
lret
xor
xor
push
cmp
jge
xor
and
sbb
in
jle
adc
dec
sub
test
pop
xchg
sbb
dec
mov
fidivrl
and
dec
jbe
out
inc
fimuls
push
bound
insb
loope
mov
push
pusha
mov
pop
pop
push
es
fcmovb
shlb
cmp
aad
les
jle
fnsave
and
shl
inc
pop
cld
lods
movb
pop
xor
imul
jae
inc
mov
jb
dec
push
jge
dec
stos
cmpsl
jb
push
cmp
mov
pop
jmp
ds
sbb
popf
or
sub
test
sbb
mov
fimull
mov
call
movsb
add
int
push
xor
mov
sbb
loopne
adc
dec
das
dec
jns
out
mov
clc
jb
push
push
in
ficomps
sub
jns
and
mov
inc
adc
outsb
push
dec
aaa
jno
sub
cltd
nop
call
xor
mov
enter
sbb
insl
xor
and
jne
mov
and
inc
sub
clc
stos
jb
jecxz
push
dec
push
movsb
mov
pop
sbb
and
lds
jmp
mov
lcall
jno
scas
dec
sbb
icebp
insl
aad
mov
loop
gs
and
mov
out
pop
pushf
sbb
inc
cmp
imull
mov
cli
sub
call
arpl
pop
ja
cmc
and
sub
push
or
or
dec
pushf
sbb
push
xor
ret
push
xchg
dec
xchg
adc
imul
inc
mov
or
arpl
ds
in
cltd
mov
addr16
mov
pushf
pushf
out
daa
pop
in
out
cs
push
inc
jne
mov
xchg
test
out
testl
jb
xor
cmc
mov
call
dec
outsl
iret
lcall
movsb
test
cmp
mov
ljmp
or
xchg
stos
pop
push
fcomps
incl
xchg
jnp
jb
xlat
xor
xchg
imul
dec
shll
xor
jo
sahf
xchg
hlt
into
pop
je
sbb
inc
or
mov
jns
incl
sub
ficomps
lcall
pop
mov
jg
dec
negb
push
cmp
addl
pop
incb
into
sub
mov
push
stos
jnp
mov
sti
cmp
lock
ret
or
in
fs
test
aaa
in
inc
ds
add
inc
fstpl
push
push
pop
push
ficomps
imul
lret
and
ds
jge
out
loope
es
xchg
je
outsb
mov
push
jecxz
out
or
movsl
fs
fstp
out
sbb
test
jno
icebp
xchg
into
cli
fwait
mov
out
into
subb
shl
inc
mov
jecxz
sti
stos
cmp
or
addb
jbe
mov
inc
xor
ds
hlt
push
xchg
sbb
dec
popa
cld
xchg
repnz
xlat
jo
push
loop
add
arpl
adc
fsts
sahf
dec
or
stos
fistpll
or
pop
xchg
mov
sub
push
imul
xor
test
or
mov
dec
sbb
jno
in
xor
es
out
adc
fisubs
popf
inc
repz
inc
inc
adc
dec
push
mov
leave
out
inc
loopne
push
leave
lret
jb
sub
ljmp
mov
outsl
inc
aas
pop
fisttps
shlb
scas
jecxz
adc
dec
jae
je
mov
loop
mov
and
xchg
sub
sub
mov
jp
fisttps
cltd
enter
sub
push
inc
add
pop
cmp
ds
add
stos
mov
repz
push
add
leave
jecxz
idivb
cld
and
and
xor
lods
dec
sahf
clc
fdivr
scas
hlt
pop
bound
sub
out
das
push
or
pop
and
loop
cwtl
and
inc
xchg
fistl
cmc
and
arpl
push
xor
in
lock
clc
mov
add
jns
xchg
cmp
add
sub
rcr
ja
cmp
add
mov
inc
sub
push
and
mov
jo
pop
mov
test
sbb
cltd
js
jmp
jmp
fistps
jg
and
dec
jecxz
and
fsubl
jo
stc
jecxz
push
add
ds
fists
negb
pop
xchg
aas
ja
gs
or
dec
jb
mov
mov
push
mov
aas
sbb
xchg
sbb
enter
xchg
jo
inc
sub
rcr
ret
test
or
mov
out
jle
jb
add
xchg
leave
jmp
mov
out
adc
push
jle
mov
mov
pop
jp
add
cs
mov
mov
aam
cwtl
aam
and
aam
mov
sahf
cltd
push
int
out
mov
cltd
push
mov
aas
dec
add
xchg
add
hlt
cmp
push
xchg
sub
dec
test
nop
pop
into
aaa
daa
or
cwtl
sbb
push
xchg
push
sbb
imul
mov
rcrl
int
mov
pop
inc
add
mov
std
out
cmp
sti
rclb
push
jb
push
and
xchg
mov
call
mov
cwtl
sahf
int3
dec
and
inc
icebp
popa
xchg
mov
jo
rorb
jnp
add
loop
cmp
add
mov
dec
xchg
dec
adc
mov
jno
inc
lods
fwait
cli
mov
xchg
push
push
scas
aad
mov
and
ss
xor
jbe
jge
jae
roll
inc
mov
dec
out
xor
imul
dec
enter
test
out
stos
hlt
in
cs
xorb
movsl
inc
mov
mov
ljmp
loop
or
inc
push
jbe
fwait
mov
sbb
dec
inc
sbb
pop
pop
sbb
xor
mov
xchg
pop
mov
mov
iret
cli
mov
bound
mov
stc
push
inc
sub
cmp
lret
fildll
sbb
inc
xchg
add
aaa
or
lods
mov
mov
dec
aaa
loop
les
cmp
iret
fwait
ret
cmp
jmp
xor
jns
pop
repz
roll
loop
xor
lea
lds
jmp
stc
mov
arpl
xor
add
and
faddl
dec
lret
out
movsb
stos
shll
jnp
jge
loop
lock
fidivs
stos
push
divb
icebp
push
jne
loope
das
xor
cmp
stc
repnz
jmp
sub
lret
decb
frstor
mov
and
lret
lret
mov
rorb
data16
xor
cmp
inc
ja
loope
pop
and
icebp
xchg
jp,pt
inc
fwait
in
mov
iret
xor
cs
sahf
stos
push
aas
jo
insb
cwtl
fimull
or
inc
rolb
adc
or
lds
mov
xor
and
sub
pop
sbb
mov
sahf
sbb
mov
pop
rcl
fs
minps
push
mov
ja
or
fs
mov
jb
cmp
xor
jo
and
pop
not
sub
dec
cmp
cli
dec
lret
shll
aam
scas
sarb
imul
rol
mull
and
lds
stos
inc
cwtl
fisubrs
inc
cli
mov
loope
lock
cld
loopne
add
xlat
lea
pop
inc
xor
mov
mov
daa
dec
dec
aaa
nop
out
test
push
outsl
dec
cwtl
dec
popf
xchg
ret
cmp
sub
push
jns
popa
mov
mov
pop
mov
cltd
xchg
addb
popa
pusha
cld
cmp
je
dec
sbb
dec
add
adcb
cli
and
dec
pop
dec
or
pushf
das
mov
and
and
data16
dec
adcl
sub
clc
jae
mov
js
push
in
pop
pop
and
lret
sbbl
inc
bound
inc
xchg
sub
add
packsswb
dec
xchg
jo
lea
pushf
ret
or
add
xor
lcall
xor
imul
and
imull
flds
xchg
ljmp
push
xor
lock
jbe
mov
in
and
fwait
iret
mov
dec
mov
push
lret
daa
bound
cmp
mov
and
test
loopne
push
call
adc
sarb
mov
aam
sti
cmpsb
pop
cmp
xor
sbb
and
jno
jno
sub
pushf
push
mov
jo
sub
fstps
mov
push
subb
mov
sub
pop
sub
loope
push
enter
cmpsb
mov
cmp
mov
fwait
jo
clc
lcall
nop
sbb
imul
lea
jns
ljmp
mov
sbb
pop
mov
sub
push
pop
mov
mov
xor
insb
repz
jge
add
add
inc
loop
cmpsb
arpl
outsl
mov
pshufw
jle
dec
or
cmp
testb
cwtl
idivl
jle
in
push
or
xchg
jne
jb
fldcw
shlb
adc
insb
test
xor
cmp
or
pop
mov
xor
inc
mov
adc
inc
stc
sbb
leave
and
push
dec
pusha
sbb
imulb
fidivrl
xor
mov
stos
std
ss
in
dec
inc
inc
mov
xor
mov
bound
pop
push
mov
dec
sub
stos
ret
and
into
xchg
jb
daa
or
leave
mull
push
insl
pop
push
jg
xor
add
adc
add
leave
cmp
stos
dec
push
pop
dec
xchg
js
inc
cli
aas
push
sub
hlt
mov
push
xchg
pop
repnz
push
cmp
jo
inc
ja
cmp
xor
stos
mov
dec
cmp
and
cmp
dec
fisubs
sbb
dec
out
mov
movsl
es
mov
cmpsl
fistpll
mov
jae
icebp
or
out
dec
xchg
daa
or
fisubs
dec
addb
xor
mov
daa
mov
movsb
sub
push
fdivrl
jl
loopne
imul
mov
dec
pushf
out
imul
ficompl
es
sub
pop
cli
pop
xchg
mov
test
mull
fsubrs
or
inc
loope
add
inc
pop
cs
jbe
shrb
mov
test
adc
mov
cmp
push
stos
pop
xchg
cmpsl
mov
cmc
add
xor
jecxz
mov
sub
inc
repnz
push
mov
mov
xor
push
xchg
dec
add
leave
inc
fildl
imul
pop
sub
stos
sub
pop
cwtl
push
cmp
aas
sub
aaa
mov
lret
and
aas
mov
test
stos
pop
mov
ja
mov
mov
stos
testl
stc
call
or
or
lret
add
cmp
repz
inc
dec
mov
cltd
mov
push
fwait
mov
ja
sub
popa
dec
xlat
rol
lahf
push
mov
dec
pop
popa
xor
filds
jp
jo
push
ljmp
push
sbb
enter
xor
mov
or
sbb
ljmp
inc
rcrb
or
mov
xor
lds
mov
fcompl
insb
dec
lock
out
jge
shlb
pop
mov
in
cmpsb
sub
mov
sbb
lock
outsl
pop
inc
jbe
and
ja
jmp
xor
shlb
dec
dec
and
cmp
and
jecxz
mov
arpl
loope
out
and
add
dec
scas
jecxz
insl
jb
cmpb
dec
popa
out
push
sub
mov
imul
es
sbb
ss
add
ja
sahf
and
add
cmp
movsl
and
or
into
jg
gs
push
es
rolb
clc
xchg
incb
cmpsl
insl
push
pop
scas
aaa
mov
int3
dec
dec
xchg
ljmp
test
loop
loop
sbb
ds
push
xor
push
mov
adc
mov
push
ret
mov
sub
fsubrl
xchg
and
fisttps
cltd
out
test
ljmp
xor
xchg
fsubrs
les
cld
pop
aad
sbb
xor
xchg
push
test
xchg
inc
lret
mov
call
sub
bound
adc
insb
das
pop
mov
sbb
sbb
mov
push
js
and
mov
es
mov
negb
pop
fistpl
stos
daa
pop
or
arpl
aaa
mov
shl
sbb
jle
idiv
push
das
sub
out
mov
ficompl
mov
jmp
arpl
lds
lret
bound
lret
xor
pop
mov
cmpl
jecxz
inc
rep
xchg
test
addr16
out
mov
outsb
lock
sbb
and
stos
es
out
int
inc
add
push
add
xorb
dec
mov
fisubl
test
stc
push
fsts
fidivl
sbb
xlat
mov
sub
mov
mov
sub
ljmp
fildl
negb
fildll
mov
inc
xor
inc
into
scas
push
sbb
push
sbb
js
ja
sub
and
rcr
mov
sbb
stc
mov
lret
pop
push
mov
cmp
add
aam
icebp
mov
rcll
ljmp
push
or
inc
inc
xor
push
mov
fstps
test
mov
movzwl
and
cwtl
out
into
xchg
andb
push
sbb
test
sub
mov
scas
push
mov
mov
call
mov
add
cmp
add
out
jbe
roll
mov
jecxz
leave
lods
daa
std
pop
into
push
testl
pop
mov
data16
xchg
cmpsb
dec
push
push
and
sbb
add
pop
imul
bound
jbe
inc
mov
jmp
bound
dec
xchg
loope
ret
xor
out
cmp
cmp
imul
dec
pop
fidivrl
jl
shrb
push
inc
add
or
cmpsb
ljmp
pop
jp
mov
ficoml
and
add
popa
mov
imul
jo
loope
popf
mov
mov
xchg
add
jns
inc
stc
roll
hlt
mov
fmuls
push
dec
sbb
jo
fs
mov
and
cmc
int3
dec
push
ja
inc
clc
jo
adc
sbb
inc
sbb
outsl
jb
push
jp
in
imul
aaa
mov
mov
and
push
dec
push
xchg
jb
pop
or
cmpsb
and
push
es
mov
and
sub
jbe
cmp
add
jb
lea
int3
cmp
lods
cmpsl
cmpsb
daa
sbb
dec
jecxz
sub
data16
dec
xchg
add
mov
sub
out
sbb
outsb
jns
movsl
stos
aaa
fcmovnb
and
mov
sbb
addr16
cwtl
rolb
xchg
mov
nop
hlt
jno
cmp
out
jae
fdivs
cmp
mov
scas
repnz
fisubrs
xchg
sbb
stos
xor
rcrl
lret
sub
test
imul
dec
and
int3
popa
and
push
pushf
fcmove
bound
ljmp
sbb
jo
fs
mov
jbe
pop
out
pop
stos
and
movsl
cmc
call
mov
mov
cmpsb
std
adc
out
xchg
dec
adc
mov
mov
cmpsb
sub
jmp
xchg
lods
jnp
test
outsl
mov
jo
jo
jo
popf
into
xor
cmpsb
cmp
pop
jle
and
mov
loop
jno
xchg
hlt
fldl
popa
jae
dec
inc
pop
imul
aad
dec
iret
add
dec
pop
push
leave
mov
cltd
sbb
psllq
cmp
imul
mov
mov
push
add
inc
out
add
outsl
xor
mov
mov
push
adc
dec
je
and
not
pop
push
pop
mov
adc
pop
pop
add
inc
in
shlb
jle
lahf
jnp
inc
push
inc
jb
cmc
repnz
xor
and
out
jmp
pop
inc
pop
ss
inc
jg
sbb
ds
sub
cli
mov
lret
lock
loop
sbb
leave
xor
dec
fstpl
loop
daa
cmp
mov
push
sbb
push
push
mov
mov
aas
pop
inc
and
out
push
push
ret
mov
iret
stos
jb
lea
add
xor
pop
in
mov
mov
mov
lods
loope
andl
mov
xchg
out
push
pop
xlat
xor
mov
xchg
push
xor
inc
inc
insb
mov
loope
fcomps
dec
xor
jae
mov
and
push
mov
cwtl
mov
fldl
loop
mov
lret
jno
fnstsw
jmp
and
jns
outsl
dec
nop
sti
sub
jae
cli
pop
sti
add
mov
imul
stc
adc
dec
fidivrs
dec
shrl
js
arpl
and
cmp
adc
popf
xor
mov
aam
rclb
xchg
and
jae
outsl
sub
dec
mov
sbb
add
mov
push
push
xchg
imul
sbb
mov
ljmp
inc
inc
xchg
cli
cli
mov
sbb
push
lock
imul
cs
cmpsl
cmp
bound
pusha
dec
dec
cltd
ds
jl
scas
push
sub
mov
xchg
mov
aas
mov
hlt
out
lea
out
push
jnp
test
pop
jecxz
or
dec
dec
loopne
sub
jp
popf
mov
into
sub
push
addb
xor
adc
loop
push
inc
sbb
pop
std
xor
mov
mov
rclb
jbe
sbb
test
inc
pop
mov
scas
push
dec
sbb
lock
loope
addb
cmp
mov
add
cmp
mov
filds
cmc
push
movsl
insb
cmp
and
xchg
and
aaa
inc
decb
mov
dec
adc
mov
aaa
dec
aad
xor
mov
ljmp
mov
in
fists
mov
and
je
loopne
xchg
xor
xchg
outsb
dec
stos
data16
stos
pop
dec
into
jo
dec
mov
add
stos
and
cmp
push
jecxz
xchg
or
mov
inc
sbb
sbb
lret
pop
loopne
stos
ljmp
cmpsl
push
pop
inc
fmul
pop
inc
mov
xchg
js
fld
or
repz
cmp
stos
jmp
in
insl
push
stos
out
mov
push
repnz
push
cmp
inc
inc
fdivs
and
jbe
mov
jl
sub
cmp
jecxz
sbb
es
imul
jg
nop
leave
enter
sub
fstpl
das
test
out
scas
cwtl
mov
mov
jmp
and
pop
dec
pop
sub
lcall
and
mov
stos
ret
mov
js
push
dec
rorb
sarb
jne
imul
bound
lds
sbb
mov
ret
push
std
nop
pop
jle
jns
js
mov
jne
cli
xchg
lock
mov
inc
test
addr16
or
push
repz
and
lcall
ror
fimuls
add
jp
rorb
pop
inc
fprem1
push
repnz
mov
adc
iret
sbb
inc
and
dec
inc
scas
xor
ss
out
pop
mov
sub
insb
andl
ds
sbb
mov
call
idiv
push
pusha
xchg
inc
sub
push
es
push
nop
jmp
mov
pop
ljmp
jmp
movsb
push
push
push
fcompl
movsb
pop
cmp
leave
pop
test
outsl
jmp
xor
es
mov
mov
inc
aam
stc
pop
sub
xchg
jg
sub
xor
lret
or
add
scas
mov
popa
pop
cltd
mov
sub
cmp
pop
flds
mov
mov
ljmp
lds
pop
in
sbb
add
push
fwait
decl
test
rorb
outsl
ds
and
and
inc
ds
cmp
push
imul
int
test
out
stos
repnz
imulb
or
mov
es
and
dec
push
inc
loop
ds
out
jnp
sbb
push
int
add
sub
leave
sbb
and
in
mov
cmp
test
ljmp
fisubl
repz
xchg
aaa
or
fwait
lret
das
or
bound
mov
inc
ss
add
sbb
sub
pop
mov
push
xor
push
aad
dec
outsb
repnz
loope
lds
inc
inc
js
imul
inc
dec
mov
scas
adc
xor
daa
lds
dec
int
adc
cmp
dec
pop
popf
imul
lret
mov
pop
lret
mov
pop
xor
dec
lret
push
push
cmp
and
gs
lds
ret
popw
push
push
ds
mov
inc
cmp
mov
iret
push
xor
push
stos
mov
fcomps
sub
addb
push
sbb
es
jl
and
sub
pop
addr16
push
dec
xchg
imul
push
data16
add
dec
jae
dec
stc
cmp
jae
sahf
and
mov
dec
pop
repz
div
or
out
repz
mov
ljmp
mov
lock
mov
cltd
mov
mov
je
outsb
mov
out
xchg
shll
xor
inc
xchg
add
push
adc
mov
adc
out
jae
sub
inc
inc
xor
out
sbb
inc
dec
movsl
cmpl
pop
out
mov
sub
push
mov
or
pusha
mov
push
cli
test
cmp
mov
sub
cmpsl
and
addr16
sub
ds
movsb
jecxz
mov
pop
aas
cmp
push
xchg
mov
sahf
lret
mov
xchg
insb
inc
sbb
sub
jg
inc
popa
jl
je
xor
and
add
out
test
pusha
mov
enter
mov
movsl
out
xor
aas
daa
sbb
sub
lahf
js
mov
mov
mov
pusha
stos
jbe
scas
fxtract
std
data16
cli
cltd
jo
jg
cli
dec
scas
or
jnp
pop
push
or
call
add
jp
hlt
ret
push
mov
adc
loop
mov
adc
jmp
xor
fisubs
push
int
outsl
cmp
dec
inc
out
mov
fmull
and
pop
aaa
sbb
lahf
lea
rclb
inc
imul
aas
mov
inc
nop
inc
jmp
imul
push
adc
cld
fnstsw
in
outsl
sub
out
push
push
or
xchg
or
cmpsb
repz
sbb
or
push
mov
sub
lret
pop
pop
fs
xchg
inc
adc
fimull
and
out
pop
fstps
mov
add
fdivrs
fwait
xor
pop
jg
loopne
testl
scas
js
inc
jg
stos
imul
and
ja
adc
push
inc
push
lret
cli
xchg
mov
jno
mov
repnz
jl
or
out
psadbw
mov
xchg
inc
pop
inc
push
mov
dec
and
insb
adc
cmc
xor
sbb
cmp
jns
adc
fsubs
rol
rcr
fisubs
pop
aad
xor
scas
inc
loop
and
out
mov
jl
cmpsb
cmp
fisubrl
fcoms
sbb
pusha
pop
sbbl
sub
cli
mov
adc
xchg
push
adc
jmp
addl
and
sbb
or
inc
lds
mov
xor
mov
mov
mov
mov
mov
jmp
fimuls
jmp
cltd
pusha
div
cmp
inc
push
arpl
outsl
mov
jg
push
icebp
jae
test
stos
mov
inc
dec
orl
in
dec
push
and
or
and
xchg
xchg
sbb
push
adc
pusha
pusha
cmp
jb
leave
sbbl
jo
lock
cltd
lods
sbb
hlt
neg
cmp
sbb
dec
push
pop
cmp
lahf
pop
mov
push
inc
fwait
js
int
xchg
je
dec
mov
sti
cmp
addb
push
pop
mov
dec
ficoml
test
pop
std
xchg
or
mov
popa
fiaddl
inc
insb
pop
pushf
dec
fwait
sbb
mov
cwtl
dec
sbb
dec
pop
sbb
orl
aam
repz
cli
sti
pop
jecxz
ss
adc
lock
imul
prefetch
dec
xchg
mov
jo
imul
mov
sub
stos
mov
dec
mov
and
mov
sahf
jle
pusha
jecxz
push
mov
out
hlt
xchg
pop
add
filds
inc
mov
out
dec
pop
xor
inc
cmp
loopne
es
sbb
xor
jp
scas
fimull
sub
mov
sbb
pop
fs
imul
mov
mov
imul
pop
out
js
sub
jg
jle
adc
jo
push
stos
sahf
imul
negl
movb
outsl
es
test
test
imul
out
inc
es
jns
jl
call
out
mov
and
enter
push
sbb
cli
jmp
dec
or
test
mov
push
and
sbb
push
push
bound
sbb
xchg
fisubrs
sbb
mov
test
jo
stc
pop
and
es
cmp
mulb
bound
stc
pop
cmp
inc
insb
inc
jp
cmp
pop
repz
rcrl
imul
add
sbb
sub
and
enter
aam
jmp
sbb
push
daa
aaa
lret
inc
xchg
fldl
bound
mov
jbe
mov
mov
fcomps
sbb
imul
or
inc
into
sbb
fwait
adc
mov
or
sbb
inc
pusha
ret
inc
adc
and
xchg
lods
sub
movsl
int3
jp
xchg
nop
les
aaa
sbb
mov
jmp
int
lods
fs
jle
add
jns
push
mov
sbb
xchg
ret
dec
sbb
es
ds
push
push
test
cmp
sbb
sbb
push
cmpsl
ds
mov
push
pop
jo
repz
and
in
ficoms
out
ret
push
adc
out
sbbl
bound
pop
js
enter
fs
inc
call
out
loopne
sbb
and
int3
jns
pop
sbb
fdivrl
jno
arpl
xchg
xchg
arpl
push
dec
lds
icebp
sahf
adc
lret
mov
pop
dec
jbe
arpl
sbb
push
lds
pop
in
pop
cmp
inc
sbb
add
fistpll
cmp
inc
je
aas
out
fisubs
ljmp
cmc
or
mov
xchg
bound
lock
repnz
jg
call
xor
mov
cld
mov
xchg
dec
push
mov
dec
int3
mov
adc
jno
movsb
push
mov
mov
jb
xor
jo
out
daa
lods
sub
cs
cmc
mov
pop
dec
test
xchg
andb
sub
test
inc
mov
loopne
imul
cmp
add
es
sbb
push
adc
fsub
push
stos
jle
mov
pop
and
fs
aaa
xchg
xor
andl
out
mov
sbb
fs
cmp
adc
xor
das
dec
push
xchg
stos
pusha
imul
lods
test
fisubl
jbe
cmpsb
test
jne
xor
xchg
dec
jno
icebp
xorb
stos
aad
xor
cs
push
push
xchg
pop
mov
add
push
push
cmp
aaa
push
lret
addb
cmp
stos
push
ret
dec
fnstsw
sbb
ret
xchg
test
mov
sbb
and
adc
arpl
lret
push
mov
pop
mov
xchg
loope
repnz
jno
mov
movsb
or
icebp
loop
mov
insb
out
nop
testb
enter
pop
out
fld
sub
and
cmp
enter
xchg
adc
loopne
ss
inc
pop
inc
aas
addr16
mov
fsubs
dec
stos
pop
xchg
ds
inc
add
or
pop
outsl
xchg
sub
shlb
inc
lea
add
mov
push
pop
lds
fwait
cli
enter
sub
daa
std
ljmp
cli
sbb
pop
movsb
es
xchg
and
cmp
imul
cmp
push
sbb
mov
hlt
push
popa
jo
cli
xchg
jmp
inc
add
pop
jg
mov
int3
dec
aaa
cmp
pop
pop
test
insb
test
pop
add
js
or
mov
xchg
lea
lcall
sub
fucomi
repnz
pushl
fidivs
jg
cmp
hlt
shll
stos
sub
les
add
adc
aaa
jno
cmp
outsb
push
or
cltd
ss
rcrl
jmp
mov
dec
sub
or
mov
cmpl
adc
xchg
cmpsl
cli
repnz
pop
sub
sbb
arpl
xchg
push
sub
jne
ret
push
scas
mov
push
push
pop
xor
out
cmpsb
xor
fwait
and
bound
pop
js
ret
and
test
pop
mov
jp
ret
inc
jno
adc
push
dec
test
mov
mov
sbb
mov
imul
cmp
mov
and
mov
sbb
pop
pop
pop
adc
sbb
dec
hlt
outsl
mov
sub
into
imul
lods
cmpsb
cli
test
call
mov
dec
daa
xor
fisubrl
addr16
xchg
pushf
outsl
push
push
outsb
inc
mov
imul
jg
nop
pusha
lcall
in
popa
pop
stc
xchg
jecxz
mov
imul
icebp
stc
cmp
divb
pop
in
cs
mov
jmp
call
das
leave
ret
push
ja
push
or
ret
data16
pop
mov
cmp
fidivs
jg
inc
cs
and
fdivrs
aaa
sbb
repnz
aaa
push
sub
jae
enter
sub
adc
add
or
ja
pop
out
jno
incb
sbb
cmp
sbb
loopne
dec
jno
ds
inc
sub
xchg
test
ljmp
push
adc
out
cltd
test
inc
jnp
sbb
fistpll
inc
xor
ds
jb
or
sub
aam
xor
sub
mov
sub
pop
and
sub
push
sub
fnstcw
jnp
mov
pop
mov
xor
fnstsw
mov
jmp
dec
insb
in
cmp
outsl
in
mov
js
cmpsl
scas
adc
faddl
in
insb
push
insb
dec
inc
aas
pusha
cld
sub
push
inc
popa
adc
sbb
dec
popa
mov
negl
ret
xchg
sti
js
push
add
outsl
insb
repz
lret
inc
mov
adc
fcmovb
mov
mull
outsl
lret
inc
inc
push
adc
cmp
jp
jge
loop
mov
pop
ds
rcrl
pop
and
xchg
fdivl
pop
push
loopne
xor
push
rclb
mov
pop
incl
aam
cmp
sbb
popl
jp
push
out
loope
rcrl
mov
mov
mov
adc
xchg
in
stos
pop
push
shll
xchg
je
push
or
mov
mov
in
hlt
push
pop
cmp
sbb
cli
negl
xor
add
movl
test
cld
sbb
push
xchg
sub
lds
pop
call
push
shrb
dec
ljmp
mov
sub
pop
pop
cmp
push
daa
outsl
repnz
jp
fsubrp
outsl
dec
or
dec
ss
dec
sbb
xor
xlat
xor
bound
scas
push
popa
ja
mov
ja
xchg
push
xchg
hlt
bound
fbld
fs
loopne
imul
je
sarb
scas
test
mov
xchg
stos
push
xchg
call
sub
jne
aas
lds
sahf
jae
pop
cmpsl
and
add
lret
dec
xor
adc
sub
xor
and
mov
aad
aas
stc
fidivrs
and
test
jg
mov
lds
mov
mov
inc
sbb
sbb
jo
fdivrs
push
dec
jg
gs
xchg
dec
cmp
mov
cmpsl
xchg
repz
add
cmpsb
dec
mov
mov
dec
cmp
jmp
shlb
cmp
test
gs
pop
inc
into
sbb
stos
jb
xchg
sbb
jns
mov
add
cvtpi2ps
pop
cmc
sbb
sub
test
mov
adc
inc
stc
push
scas
mov
pushf
in
mov
mov
xchg
pop
outsl
pop
mov
sbb
and
or
clts
nop
sbb
and
inc
rcrb
out
daa
ljmp
repnz
cmp
add
out
mov
xchg
pop
sub
les
repnz
js
ss
lea
ret
scas
mov
stos
sub
mov
mov
orb
inc
mov
pop
bound
inc
and
jae
push
inc
outsl
sbb
xor
sahf
or
cld
faddp
mov
xchg
sbb
sbb
lret
inc
orb
outsb
loopne
jae
add
in
sub
sub
pusha
jle
pusha
mov
pop
sbb
pop
jae
pop
dec
mov
xor
mov
xorl
mov
jecxz
cmc
sbb
sarl
push
test
pop
leave
out
mov
call
xchg
fstl
add
mov
sub
imul
movsb
lods
leave
gs
dec
jl
sbb
ljmp
rcr
jae
add
xchg
sbb
push
sbb
sub
mov
sahf
shrl
mov
mov
mov
out
hlt
ret
lcall
xchg
repnz
sbb
ss
cmp
aaa
mov
dec
mov
xchg
lock
pop
popf
pop
cli
les
lds
sbb
jmp
fidivs
jno
ljmp
xor
and
lock
jmp
stos
ljmp
mov
dec
push
insb
xchg
out
cltd
xchg
sub
cmp
mov
and
adcl
outsb
int3
add
loopne
jne
icebp
xchg
inc
lret
inc
dec
call
movsw
hlt
mov
inc
lds
outsl
push
add
fwait
lret
sub
ljmp
push
ljmp
jecxz
lahf
sbb
lret
adcl
insl
xor
dec
dec
sub
inc
xor
add
stos
cmp
scas
push
sbb
push
add
xorl
das
lret
and
and
into
cmp
movsb
stos
push
pop
ja
push
and
push
roll
sar
sarb
push
in
adc
sub
arpl
inc
push
cmpsb
push
cmp
cli
les
pop
inc
insb
mov
cmp
mov
lods
mov
enter
sub
stos
push
xor
inc
sub
pusha
insb
push
mov
fstp
jae
loope
jg
sti
mov
loop
pop
bound
jge
roll
or
xchg
xor
xor
sbb
das
scas
push
aam
push
rclb
mov
sbb
jno
fstpt
push
cmpsb
divb
popf
xor
movb
ret
push
lret
fwait
sub
xchg
cmp
push
inc
jne
dec
pusha
lods
into
dec
jbe
sbb
ret
cmp
and
push
leave
dec
xchg
sbb
mov
pop
ja
sub
sbb
sbb
daa
pop
imul
inc
gs
inc
jo
data16
jle
inc
lret
cli
and
mov
test
sti
idivb
dec
nop
ljmp
jle
dec
xor
lret
call
xchg
mov
into
js
push
xor
dec
aad
int3
mov
pop
test
dec
mov
mov
cmp
sbb
icebp
rcrl
pop
xchg
inc
lock
scas
jo
add
ljmp
inc
out
adc
xor
xchg
stc
push
repz
jle
sbb
jg
dec
cld
mov
cmpb
dec
push
repz
push
inc
mov
mov
repnz
or
mov
adc
pop
inc
ljmp
dec
stos
pop
clc
movsb
fsubl
dec
fidivl
cmp
data16
push
jp
dec
inc
scas
push
inc
add
push
sbb
les
jecxz,pn
and
gs
mov
ds
add
xchg
cmpl
daa
pop
out
pop
mov
xchg
sbb
sahf
ds
stos
xchg
push
xor
icebp
sub
dec
jno
out
add
push
aam
pop
jne,pt
orl
insb
jle
mov
dec
popa
xor
sbb
inc
scas
cld
xchg
js
push
xor
ds
push
mov
pusha
les
cmpsl
daa
pop
inc
mov
push
mov
sub
jne
outsb
call
push
scas
cmpsb
cmp
leave
mov
jns
inc
cmp
cwtl
test
out
sub
fwait
popf
pop
jp
jb
push
lods
jecxz
ret
fldl
inc
xor
in
jl
adcb
xor
fstps
sub
inc
jp
or
add
pop
out
push
sbb
mov
push
mov
popa
cmp
das
fadd
mov
inc
pusha
push
pop
inc
inc
xor
jge
bound
push
push
mov
adc
leave
adc
pop
mov
jg
cltd
fadd
and
jle
and
jg
jecxz
imulb
movsb
scas
fs
scas
cmp
loop
jp
inc
and
loop
shlb
and
clc
adc
test
out
or
lea
sbb
add
mov
sbb
sub
sbb
decl
rorl
out
push
sub
cmpsb
push
mov
xchg
sti
pop
ja
push
xchg
push
cmp
mov
ss
imul
movsb
mov
out
ds
mov
les
lcall
test
test
push
push
xor
insb
arpl
add
pop
fidivrl
mov
cmc
cmc
test
bound
movsb
mov
dec
push
pop
stos
or
jns
xor
je
arpl
cmpsb
and
mov
fs
sub
leave
js
pushl
adc
inc
and
pop
xor
daa
call
adc
rcll
mov
mov
out
insl
stos
cld
and
in
sub
jo
xchg
mov
js
es
dec
mov
and
mov
adc
sar
pop
push
ret
popa
cmp
arpl
loopne
dec
pop
dec
mov
call
stc
mov
mov
imul
sub
inc
cmp
outsl
cmp
fcoms
outsl
jmp
nop
out
stos
adc
insb
cmp
popa
or
mov
andl
outsl
stc
cmp
mov
cltd
les
mov
cli
push
inc
pop
sub
leave
xchg
add
dec
scas
push
hlt
stc
popf
sbb
sub
jne
xor
ljmp
rcr
jno
pusha
inc
push
push
mov
sbb
sub
pusha
imul
jnp
cltd
push
mov
mov
mov
in
lock
pushl
imul
push
jbe
pop
push
inc
daa
sub
mov
fs
add
dec
mov
xchg
outsl
mov
daa
jae
xchg
or
dec
dec
fdivrs
or
mov
popa
or
notb
imul
cli
xchg
negb
faddp
add
ds
mov
pop
and
cwtl
mov
pop
mov
popf
scas
out
xchg
mov
stos
cmp
rcrb
test
cli
inc
das
fidivrl
xlat
push
je
xchg
pop
cld
sbb
and
fsubl
or
jge
fildl
add
push
mov
sub
sbb
scas
arpl
and
scas
inc
lcall
mov
cmpsl
adc
mov
das
dec
dec
das
jo
daa
test
imul
mov
scas
daa
test
loop
lods
mulb
scas
add
negl
ljmp
rorb
mov
lret
call
or
cmp
or
icebp
bound
ljmp
cltd
outsb
nopl
sbb
push
cltd
jle
jmp
push
cmp
jp
stos
aaa
jns
mov
jge
pop
cmp
push
jg
out
fsubs
jl
inc
dec
test
enter
mov
out
insl
add
cs
scas
in
sbb
test
add
add
fdivrs
mov
into
xor
pop
popa
jnp
cmpsb
scas
lret
in
xor
mov
ret
mov
data16
dec
xor
ja
inc
imul
push
popf
pop
inc
fs
cltd
add
add
cmp
arpl
jp
scas
stos
xor
bound
xchg
lea
orl
jge
inc
cld
jb
mov
sub
xor
bound
add
push
add
jae
andl
xor
adc
popa
or
popa
adc
cmp
mov
pushf
xor
cmp
subb
insl
mov
ss
mov
jo
lds
sbb
inc
outsl
push
lods
xor
test
call
xor
pop
push
ds
outsl
sub
push
fidivl
out
dec
cmpsb
cmp
scas
shr
sub
xor
jbe
cmp
je
add
fiadds
dec
int
inc
cltd
and
push
cmp
mov
pushf
xor
loop
lods
imul
xor
daa
cmp
cltd
in
pop
arpl
dec
cmp
shll
pop
push
aad
je
addr16
popa
fcmovb
jo
adc
mov
fsubr
xor
jb
mov
sbb
loopne
imul
mov
cmp
pushf
outsl
pusha
sub
cmp
scas
test
dec
in
pop
test
stc
push
daa
sbb
cmp
in
jmp
js
mov
mov
neg
xorl
lea
mov
pop
roll
test
addr16
cld
arpl
mov
push
mov
outsb
push
inc
mov
hlt
push
out
bound
add
es
push
mov
xchg
movsl
outsb
mov
das
in
fwait
cmp
idivb
das
cmp
pop
xor
mov
mov
push
push
ret
pop
add
xor
mov
dec
adc
nop
stc
sbbl
gs
data16
mov
xchg
inc
ss
jno
jnp
ljmp
mov
repnz
sbb
inc
fbstp
dec
push
dec
adc
dec
inc
pusha
inc
pop
fisubrl
lock
lds
xchg
mov
imul
outsl
dec
mov
aad
scas
movsl
dec
add
stos
and
mov
xchg
enter
jbe
lods
push
xor
scas
dec
outsb
pop
xchg
aam
orb
mov
jp
and
jbe
fs
inc
dec
push
inc
and
int3
arpl
mov
scas
pusha
push
nop
jge
mov
lahf
push
mov
push
es
mov
fdivrs
imul
push
insb
in
mov
inc
cltd
adc
mov
aas
jb
push
test
les
into
aas
addr16
std
lock
repz
adc
jmp
xor
jmp
and
movsb
xchg
aas
nop
xor
push
pushf
pop
cli
cmpsl
push
addr16
aad
mov
decb
nop
dec
pop
inc
inc
imul
fistpll
dec
and
jnp
xor
bound
mov
dec
pusha
repnz
imul
adcb
xchg
jmp
std
push
out
lds
inc
lea
push
jb
fwait
pop
sbb
mov
je
lods
pop
arpl
cmp
into
fwait
xchg
into
push
jl
adc
addr16
in
xchg
jnp
push
push
jbe
adc
jmp
sbb
sub
ret
jns
mov
dec
dec
cmp
rcrb
pop
inc
or
adc
push
push
mov
dec
mov
js
mov
or
mov
lcall
xchg
int
inc
fwait
ljmp
in
cmpsb
mov
jg
mov
pop
cmpsl
vpunpcklqdq
xchg
data16
dec
in
xor
enter
dec
sti
dec
dec
js
stos
cli
jg
xor
mov
adc
mov
mov
dec
dec
dec
jp
cs
mov
push
addr16
sbb
mov
mov
out
insb
pop
addl
sub
sbb
ret
cmpsb
sbb
test
insb
jo
in
int3
pop
dec
push
push
xchg
jecxz
xchg
divb
push
push
pop
mov
push
push
xor
mov
insb
jno
and
mov
test
in
adc
pop
xlat
mov
int
sub
enter
dec
mov
mov
scas
jns
pop
push
mov
filds
mov
push
adc
pop
aad
xchg
aad
ret
xor
pop
jbe
mov
icebp
lahf
push
fistpl
cmpsl
add
or
imul
inc
test
pop
or
out
jecxz
bound
xor
stos
jg
std
imul
fisubl
pop
cmpsb
icebp
shlb
insl
stos
or
dec
jbe
cli
imul
adc
sbb
das
dec
aaa
fwait
pop
ljmp
imul
lods
pop
icebp
mov
sbb
push
fdivs
inc
shrl
sahf
mov
inc
js
int3
lret
ret
sahf
inc
pop
dec
mov
cltd
rcrl
fadds
ja
popf
je
popf
call
inc
popf
mov
movl
aas
addl
aas
iret
lds
sbb
addr16
push
out
jne
mov
cltd
sahf
cmp
xchg
adc
mov
xchg
sbb
cmc
popa
xor
into
and
dec
cmp
jo
shrl
mov
dec
cmp
es
xchg
lcall
sbb
ljmp
in
pop
add
cmpsl
fwait
mov
test
mov
adcl
xchg
pusha
loopne
inc
movsl
xchg
pop
imulb
ljmp
xchg
inc
imul
mov
and
insb
testb
add
sub
push
and
adc
push
mov
cld
or
dec
fs
mov
jae
pop
mov
call
faddl
pop
ret
pop
cs
inc
lcall
mov
pusha
stc
cmp
mov
arpl
addr16
add
cwtl
insb
xchg
or
add
nop
mov
and
lds
bound
inc
cwtl
sub
dec
fisttps
out
push
mov
mov
mov
push
mov
sub
cmp
mov
add
cmp
jp
inc
jle
cmp
pop
sbb
loope
dec
mov
inc
pop
xor
sub
adc
imul
out
dec
popf
mov
xchg
cmp
fildl
orl
and
add
jl
inc
or
pop
mov
das
scas
push
mov
fldcw
into
dec
xor
repnz
bound
fidivs
jnp
scas
outsb
dec
lret
loop
cld
in
fwait
mov
jl
mov
mov
pop
lds
pop
das
pop
call
pop
nop
lret
adc
mov
clc
ljmp
aaa
outsb
imul
dec
sbb
and
mov
int3
jo
mov
push
xor
in
inc
ds
pop
inc
orb
mov
cmp
jnp
daa
mov
push
je
gs
push
push
cmpsb
int3
dec
sub
or
sbb
xchg
inc
clc
cld
lods
out
cmp
test
aas
push
pop
adc
repnz
aad
in
insl
mov
loopne
jg
lret
addr16
xchg
mov
mov
stos
fisubs
sbb
arpl
sub
test
lds
andb
in
pop
pop
pushf
fsub
mov
int3
add
cltd
mov
or
mov
popf
inc
lock
adc
sub
sbb
jo
cmc
fdivr
pop
repnz
jecxz
push
leave
ds
jecxz
cmpsl
fstpt
xchg
adc
lcall
in
push
test
jb
pop
push
or
dec
mov
inc
imul
xchg
push
or
mov
in
cmp
jne
add
mov
push
mov
enter
icebp
mov
fwait
push
inc
mov
mov
paddd
sub
ret
push
jbe
push
jp
or
stos
jo
or
mov
sub
inc
dec
insb
add
mov
jns
inc
scas
sub
test
and
fs
mov
arpl
orb
fstp
lods
dec
cltd
dec
adc
fsubrs
push
leave
mov
imulb
mov
arpl
cmp
mov
inc
jl
sub
cld
idiv
adc
out
pop
mov
xchg
subb
dec
dec
je
xor
add
push
push
cmp
inc
cmp
or
and
mov
mov
lahf
push
mov
loope
aad
out
arpl
movsl
shll
call
lret
xor
push
pop
sbb
pop
mov
add
cmp
mov
sbb
and
mov
pusha
mov
hlt
cmp
mov
lock
shll
xchg
dec
push
ja
loop
rcr
dec
in
sahf
movsb
mov
cmp
mov
in
jnp
adc
repz
sbb
cmc
dec
mov
cmp
add
sub
dec
mov
and
xchg
imul
jmp
ss
insb
push
rolb
pop
dec
push
inc
shrl
mov
ror
sub
mov
stos
ds
decb
sub
jb
inc
test
mov
pop
inc
lds
sahf
popa
pop
pop
xchg
push
mov
pusha
ret
xor
xchg
xchg
movsl
mov
movl
push
scas
leave
hlt
repnz
push
inc
add
push
arpl
outsb
mov
mov
xor
cmp
mov
cmpsb
inc
das
repnz
sub
repz
pop
test
ret
sub
repz
mov
insb
xchg
in
and
loope
shrb
jmp
aas
in
imul
add
jo
lock
mov
xchg
in
out
cli
dec
xlat
cmp
notb
sbb
mov
push
ljmp
rcl
xor
lret
sub
xor
mov
movl
mov
mov
pop
jl
bound
test
aas
imul
and
mov
imul
dec
push
in
repnz
mov
aaa
loope
add
lea
loop
dec
mov
pop
add
push
and
dec
sbb
in
addr16
outsl
gs
outsb
inc
cmp
xchg
nop
mul
xor
mov
lcall
push
push
movsb
jg
inc
stos
xor
jecxz
popf
jns
call
mov
jo
and
pushf
fninit
scas
add
jg
or
daa
jns
adc
outsl
sub
xchg
xor
inc
xor
inc
adcl
stc
out
popa
icebp
push
fbstp
imul
jne
xchg
inc
push
lcall
push
push
dec
jb
into
movsb
push
mov
repnz
xchg
pop
mov
fdiv
rcrb
xchg
cmp
and
mull
pusha
leave
loop
mov
mov
push
notl
lret
sub
add
or
daa
cmpsb
adc
push
jmp
add
test
jp
inc
mov
lock
lret
dec
jne
mov
and
inc
push
push
adc
and
test
mov
cmp
mov
push
lcall
in
mov
push
dec
push
cmp
mov
arpl
out
jle
pop
xchg
cli
jl
inc
mov
fs
xlat
mov
es
imul
je
cmp
fnsave
push
push
inc
pusha
lret
sub
mov
cmp
or
mulb
mov
xchg
filds
arpl
jp
pop
sbb
add
filds
mov
fldenv
jbe
jp
sub
es
sbb
xchg
fnstsw
and
xchg
repz
mov
mov
xchg
jno
push
mov
mov
test
mov
add
jle
dec
cmp
dec
dec
pop
jmp
pop
jo
ret
xlat
gs
cli
out
inc
test
adc
cmc
sub
add
inc
fimuls
sbb
add
movsl
push
mov
sbb
jb
stc
sub
bound
xor
in
sbb
scas
sbb
push
cmp
xchg
mov
mov
enter
mov
xchg
jns
mov
jno
add
adc
inc
sbb
jno
in
mov
push
sub
mov
shll
ret
xor
inc
jg
and
shl
xor
imul
notb
icebp
push
mul
inc
pusha
or
jbe
rcrb
subl
cmp
and
inc
loopne
mov
cli
cmpsb
aas
cmp
push
mov
repnz
test
mov
aas
out
xor
mov
inc
pop
cld
fprem
mov
push
stos
sub
inc
stos
idivb
jb
fsubr
mov
dec
les
add
adc
fiaddl
es
movaps
fnstenv
call
stc
cmp
into
jno
xor
decb
leave
arpl
cmp
cli
imul
jns
scas
ss
out
scas
test
sbb
test
std
push
xlat
xor
cltd
cmp
pushf
enter
add
pop
stos
ja
in
test
clc
adc
cs
jp
and
stos
adc
push
outsl
or
add
dec
sbb
insb
sti
out
xchg
inc
mov
orl
ffreep
mov
popa
cmovne
aad
ljmp
pop
mov
and
in
cltd
or
pop
dec
add
jo
push
fisubrs
pop
in
hlt
ss
std
push
mov
jecxz
cs
mov
bound
mov
push
ja
outsl
vpacksswb
push
mov
xor
mov
jbe
cmp
in
lea
pop
add
out
mov
pop
nop
fidivrl
in
lret
out
push
push
ss
out
imulb
push
lds
and
sub
jl
mov
mov
pop
and
lea
pop
add
mov
push
mov
shll
xchg
fmul
insb
xchg
mov
sub
mov
push
push
cmp
repz
mov
adc
sahf
and
je
dec
fwait
cmp
sahf
ss
lcall
pushf
mov
je
es
fwait
stc
rcll
pop
and
mov
mov
sub
add
or
addr16
inc
int
inc
sbb
jbe
adc
xchg
mov
ss
mov
or
push
inc
push
push
mov
mov
sub
sbb
pop
jmp
ljmp
mov
call
ss
jo
cld
ja,pn
sub
lock
aad
xchg
inc
jno
adc
xchg
dec
push
popa
lds
or
roll
imul
cli
cs
fldl
shlb
sub
ficoml
mov
sbb
out
repz
int
mov
mov
lock
out
scas
mov
xchg
pop
movsl
add
jae
lods
add
mov
sbb
jmp
addr16
sub
xchg
mov
inc
daa
xor
daa
push
cltd
mov
xor
dec
in
and
push
mov
fabs
xor
addb
push
mov
insl
xchg
cld
push
rcr
ds
or
adc
dec
dec
addr16
inc
sbb
push
ljmp
mov
mov
jno
lds
jcxz
and
xor
fsubp
dec
adc
fsubrl
xor
sub
adc
and
or
mulps
lock
rolb
or
dec
ja
fs
stos
push
cmp
ret
adc
pop
mov
cli
push
jne
jne
dec
call
sub
sbb
jecxz
jecxz
je
jmp
push
mov
pop
dec
jae
inc
popa
sarb
out
mov
xchg
cmpb
inc
xor
clc
cmpsl
mov
pushf
cmp
call
insl
push
ja
cmp
mov
inc
orb
pusha
dec
aaa
mov
jb
loope
cmpsb
popa
or
fnsave
and
mov
cmp
push
and
or
sub
pop
rcll
cwtl
stos
inc
cli
test
shlb
ja
pop
push
test
repnz
fidivrs
es
mov
adc
sarl
mov
pushf
xor
addr16
inc
and
pop
mov
and
in
push
xor
and
sbb
jne
pusha
dec
pop
xchg
dec
outsb
imul
outsb
cmpsl
lret
mov
leave
lods
push
and
xlat
cmp
insb
adc
pop
push
push
inc
add
insb
out
repz
mov
in
inc
push
push
es
inc
dec
cmp
je
push
arpl
push
ljmp
ss
sbb
sti
mov
sub
bound
fstps
xchg
inc
sahf
sbb
outsl
lock
push
mov
or
mov
pop
aad
mov
jg
jno
jne
sbb
pop
inc
popa
push
pushf
sub
enter
stc
add
lret
xchg
dec
lds
jg
and
insb
pop
popaw
popa
xor
add
mov
data16
mov
rcr
push
mov
sbb
dec
xchg
frstor
in
push
jae
push
sub
test
lods
test
xor
sbb
mov
sbb
or
loop
jmp
pop
adc
cli
aaa
xor
andb
std
nop
xchg
fucomip
call
mov
das
push
int
push
jnp
loopne
decl
jb
leave
mov
cltd
xchg
add
or
lcall
cmp
fcomps
dec
jp
loope
adcl
cmp
cli
mov
xchg
jle
pop
je
jnp
nop
pop
dec
pushf
mov
popa
xchg
inc
jle
pusha
out
pop
fimuls
js
jo
scas
test
mov
jge
ret
jbe
fistps
movsb
cmp
lds
push
mov
jb
repz
leave
pusha
adc
outsb
and
neg
xor
xchg
and
cld
push
ljmp
cmp
cld
push
rorb
sbb
mov
cld
mov
loop
fdivrs
mov
dec
push
xchg
mov
dec
mov
loop
aas
dec
pop
jo
fnstsw
aaa
sbbl
inc
imul
outsl
jecxz
add
shl
mov
out
xor
pop
and
cmp
push
dec
lock
pop
inc
sbb
and
mov
push
add
mov
nop
cmp
ror
cmpsb
mov
mov
popf
out
ficoms
mov
ds
cli
loope
js
dec
inc
or
push
xchg
pop
or
arpl
jmp
add
cmp
add
inc
mov
je
and
jo
sti
pop
xor
jl
lock
pop
pop
in
outsb
push
fcompl
addl
out
adc
fistpll
push
lret
mov
out
cmpl
dec
sahf
cld
subl
ret
pushf
and
jno
add
inc
jae
into
outsl
pop
or
and
cmpsb
jb
xor
mov
dec
and
mov
mov
jb
pushf
cltd
jg
mov
cld
push
into
fstl
data16
fldl
sub
xchg
fs
imul
xchg
xor
aad
mov
es
in
imul
sub
out
stc
mov
movsb
dec
orb
jp
mov
js
adc
mov
ds
jmp
adc
jg
push
sbb
xchg
push
sbb
mov
pop
repz
mov
mov
fiaddl
pop
gs
xor
sbb
mov
dec
sbb
test
ss
pop
and
sbb
mov
sbb
pop
into
cltd
mov
fldenv
mov
rcr
js
jnp
push
push
dec
dec
adc
sbb
rcrb
mov
daa
aaa
loopne
sbb
inc
and
rcrb
adcl
imul
adc
or
stc
add
cmc
cmp
stos
sub
out
xchg
adc
dec
push
inc
sub
push
fcompl
cmp
cltd
notl
push
and
xor
shll
pop
push
pushf
jb
fidivrs
mov
mov
movsb
inc
or
sbb
cmpsb
add
mov
lcall
jl
movsl
mov
lret
xorb
imul
push
lds
int3
outsl
pop
stos
inc
jp
popa
mov
aas
cmp
aam
das
loopne
cmp
pusha
and
mov
aas
xor
sahf
inc
inc
pop
mov
lret
and
aaa
call
and
mov
lods
mov
push
lret
xor
dec
mov
mov
push
ficoms
lcall
mov
sbb
mov
dec
inc
lcall
push
sbb
inc
sub
jecxz
mov
sti
pop
out
push
pusha
dec
in
cmp
das
cld
aaa
es
xor
inc
sti
adc
push
push
into
xor
jno,pt
jnp
push
mov
addl
ret
arpl
mov
repz
push
adc
imul
mov
out
adc
movsl
push
scas
cmp
xor
daa
cmp
mov
and
xchg
in
pop
jmp
mov
push
inc
loope
mov
lahf
push
pop
shrb
or
push
out
lods
es
in
js
mov
dec
stc
jle,pt
jle
es
mov
rorl
call
aas
mov
imul
in
aam
mov
and
rorb
cmp
dec
pop
pop
cmp
mov
mov
arpl
orb
jmp
jmp
jnp
data16
dec
ss
lds
push
dec
push
dec
xor
ds
das
data16
daa
dec
and
out
mov
fisubrs
sahf
cmp
sar
cmp
xor
cmp
pusha
jge
jle
push
fwait
ds
add
gs
rcrb
je
call
pop
lock
jne
sbb
mov
mov
xchg
xor
enter
push
jb
sbb
outsl
jno
daa
mov
rcrl
and
fnstsw
ljmp
and
loopne
sub
sbb
mov
mov
pop
enter
pop
dec
jae
add
leave
push
ficoms
fsubrl
mov
into
mov
dec
mov
in
sarl
into
pusha
dec
js,pt
out
sbb
and
addl
xor
movb
jmp
in
jno
daa
xchg
mov
dec
jb
int
outsb
pop
imul
push
push
pushf
ret
inc
pop
cld
jb
fs
mov
mov
inc
push
mov
das
cmp
xchg
mov
lds
aas
push
es
sbb
insl
push
movsl
pop
jnp
mov
out
push
or
dec
inc
cwtl
or
daa
pop
dec
aas
or
in
jp
add
and
cmp
xor
add
mov
mov
jp
mov
fcmovu
sbb
push
pop
push
pop
inc
add
in
aas
pop
inc
dec
and
pop
rcll
mov
inc
add
daa
pop
fstpl
xchg
cmpsb
add
cmp
cltd
sub
pop
sbb
inc
vmload
mov
jmp
mov
push
push
dec
mov
pop
xchg
xorl
dec
sub
and
sub
popa
sbb
xchg
and
es
xor
pusha
mov
pop
xchg
inc
and
andb
mov
mov
cwtl
inc
dec
fld
adc
dec
xchg
jg
cmpb
xchg
mov
and
xchg
shl
mov
nop
stos
in
mov
cmp
test
sahf
dec
sahf
cwtl
dec
dec
push
xchg
jmp
dec
scas
ss
mov
loope
mov
push
jle
xor
imul
in
iret
test
adc
sub
imul
sbb
add
dec
fs
cmc
xor
push
mov
jge
jp
imul
mov
jg
ja
cmp
js
jp
dec
adc
mov
mov
jns
or
popfw
add
leave
sbb
mov
data16
cmp
cld
aaa
lock
xchg
inc
mov
in
add
sub
sbb
mov
pusha
jns
cmp
sub
mov
pop
inc
ds
or
xlat
push
enter
sub
xchg
scas
cltd
addl
xchg
sub
cmp
lds
pusha
jae
and
loope
or
ror
dec
inc
cmp
fs
addb
push
mov
or
ret
fiaddl
cltd
add
dec
pop
nop
jg
push
fsts
push
lea
cwtl
xor
xor
sarb
dec
jnp
xor
mov
push
dec
inc
inc
mov
cmp
stc
mov
stos
enter
popa
jns
outsl
cmp
popf
shrb
inc
push
gs
cmp
insb
stos
dec
xchg
cld
inc
rorl
jle
mov
jb
mov
jmp
js
mov
outsl
or
jl
pcmpgtb
adc
mov
test
add
scas
lods
rcrl
push
mov
lahf
cmpsl
xor
pop
out
orb
mov
sbbl
in
adc
lods
or
and
xchg
rcll
add
insb
or
cmp
mov
jno
aas
lds
in
stos
push
push
fdivrl
push
push
pop
scas
mov
sub
mov
mov
cmp
mov
movsl
cli
mov
sbb
adc
pop
push
aaa
sbb
bound
inc
mov
pop
imul
xchg
dec
mov
and
sbb
stc
js
jmp
shr
cmpl
popa
out
inc
les
push
pop
xchg
sbb
cmp
jno
pop
arpl
sub
inc
mov
cli
or
sbb
iret
xchg
pop
inc
andl
cmp
inc
cmp
mov
icebp
pop
in
nop
mov
push
mov
cs
loop
loop
cmpsl
inc
lock
scas
dec
push
dec
imul
inc
pop
push
push
sub
mov
les
gs
xchg
ljmp
leave
cli
out
jg
mov
and
ds
insb
dec
sub
mov
xchg
lds
sub
imul
mov
ja
stos
push
dec
cld
and
out
jg
jnp
xchg
mov
mov
jmp
fldenv
mov
xor
push
repz
lret
sar
repnz
pushf
icebp
xchg
push
fs
fwait
cs
cmp
fcompl
je
cli
push
pop
ret
out
mov
nop
je
into
fs
mov
mov
xor
sbb
loop
orb
mov
scas
cmp
call
inc
inc
dec
adc
cmp
xchg
or
inc
fiaddl
clc
aam
dec
pop
ss
leave
add
add
mov
cmpsb
mov
add
pop
lock
js
mov
aaa
cmpsl
cmp
repz
xchg
dec
cld
fnsave
pusha
mov
cmc
ret
cmp
data16
gs
or
enter
clc
sbb
jb
mov
xorl
adc
or
jp
cmp
pop
pushl
imul
inc
push
inc
sub
lds
and
sub
sub
mov
stc
pop
lds
mov
cwtl
in
pop
inc
aaa
mov
in
addr16
bound
sbb
out
mov
lods
movsl
out
adc
gs
es
cmpb
ja
into
das
clc
scas
les
xor
mov
test
xor
push
sbb
jns
jbe
lcall
sahf
cmp
into
or
imul
rclb
mov
sbb
mov
cmp
insb
jae
outsb
sti
pop
push
or
dec
stc
xchg
sahf
in
push
loopne
popa
lcall
negb
out
popl
leave
pop
sbb
and
pop
mov
or
pop
lds
mov
mov
rcrl
cmp
repnz
jl
sub
jmp
arpl
insb
imul
pop
mov
sbbb
push
add
dec
pop
jnp
mov
sti
daa
aaa
in
xor
adc
loopne
mov
sti
pop
and
mov
add
sbb
in
ss
fdivl
push
sahf
idivb
mov
sahf
pop
sbb
mov
shrl
test
aaa
adc
inc
pop
fwait
add
cmp
jbe
inc
jb
rcll
pushf
fstps
push
aas
inc
sub
push
popa
sub
xchg
inc
inc
insb
out
leave
pop
sub
lds
mov
cmp
mov
notb
movsb
pop
bound
jl
mov
shr
sti
es
xchg
pop
in
es
mov
pop
sub
xchg
outsl
xchg
jns
leave
xlat
or
adc
sub
stos
sahf
test
aam
testl
bound
lods
jmp
leave
aaa
stos
mov
in
inc
lods
es
outsb
pop
test
xchg
pop
shrb
scas
push
insb
pop
aas
leave
xor
std
loope
in
sbb
inc
xchg
mov
aaa
jmp
aas
aad
test
xor
cld
mov
ds
push
xchg
pushl
pop
leave
mov
mov
sub
pop
mul
dec
arpl
daa
testl
sarb
mov
mov
adc
mov
addr16
and
cmp
sub
loope
dec
and
mov
sub
je
push
bound
out
outsb
fistl
mov
jnp
mov
dec
stos
sbbl
ljmp
fisubl
cmp
xor
pop
out
dec
fldln2
or
fwait
out
cmpsb
mov
js
sbb
fldt
and
ret
or
push
pop
stos
mov
cwtl
fs
mov
dec
pop
jle
sahf
sbb
insb
cmp
fisubs
cmp
dec
jo
je
daa
imul
mov
pop
fldcw
scas
sbb
call
pop
and
data16
mov
out
inc
aas
rcrl
insl
or
cs
scas
sahf
lods
ljmp
lcall
cmp
push
or
mov
adcb
js
mov
movsb
jns
and
jle
and
fimuls
and
push
lock
leave
jnp
scas
inc
lret
rcrb
in
inc
inc
sub
or
and
sub
push
pushf
add
push
pop
pop
mov
icebp
hlt
sbb
andb
cmp
cltd
adc
outsb
xchg
or
divb
and
cmpsb
add
adc
aas
imul
rolb
jo
outsl
jno
pushf
in
cli
sub
cld
test
fcomi
call
mov
repz
or
and
and
pop
ja
lds
int
push
xchg
ja
cmpsl
push
mov
fldl
inc
rolb
jno
out
xor
iret
xor
cmp
jne
daa
sbb
out
cmpsb
sub
mov
fwait
insl
pop
dec
and
imul
ss
loop
or
sub
add
cmp
inc
mov
mov
cmovp
sub
rclb
adcb
addb
call
xchg
xor
jae
stos
xchg
lock
and
bound
xchg
add
inc
mov
movsb
mov
jmp
mov
inc
and
inc
adc
repnz
loop
sbbl
jecxz
pop
call
or
out
into
push
fcompl
mov
imul
fbstp
push
aam
and
outsl
xor
jp
jmp
mov
ss
shr
ds
push
sbb
xor
in
mov
arpl
pop
divb
daa
mov
pop
jecxz
dec
jnp
stos
xor
sti
ljmp
mov
sahf
mov
mov
shrb
out
push
imul
and
int
or
xlat
je
dec
lods
xchg
push
mov
cmp
jl
dec
mov
cmp
or
js
xor
dec
pop
das
jae
cmpsb
jp
lret
enter
sub
aaa
mov
data16
push
lds
sub
outsb
mov
jnp
dec
repz
pop
es
mov
xor
addr16
adc
clc
push
imul
mov
or
jo
sbb
pusha
sbb
nop
fldenv
movsl
int3
jne
je
test
push
jo
xor
ds
mov
rclb
pushw
inc
mov
stos
fwait
lret
js
lret
hlt
push
dec
pop
sbb
insb
loope
or
pusha
mov
loopne
fnsave
mov
push
sbb
bound
je,pt
xor
and
mov
call
daa
ds
inc
ja
test
sti
test
in
add
add
jae,pn
mov
push
push
idivb
mov
test
inc
sbb
xchg
cmpsl
mov
ds
jmp
and
sub
ljmp
rcrb
mov
fs
fisubl
inc
inc
ret
bound
out
jecxz
sub
mov
test
int3
test
ret
sbb
pop
inc
stos
dec
aaa
sub
cmpsb
sub
stos
test
insl
ss
xchg
sahf
movsw
rcr
lea
inc
jge
dec
dec
repnz
ret
cmpsb
push
es
xchg
mov
adc
dec
adc
dec
popa
clc
add
bound
loopne
rcrb
inc
dec
lea
xor
mov
dec
dec
inc
add
xor
push
sbb
gs
dec
push
cli
push
clc
stc
into
pop
les
test
js
bound
xchg
fldenv
sbb
pusha
cmpsl
fs
int
add
or
aad
fdivl
rcrb
imul
xor
adc
enter
hlt
ret
loope
cli
lret
lds
or
inc
flds
aas
daa
dec
cmp
dec
push
mov
leave
mov
sub
xchg
out
sub
fcomi
inc
mov
mov
cli
mov
xor
inc
pusha
daa
in
inc
jle
sbb
or
mov
fs
lcall
in
lcall
sbb
scas
sub
sbb
inc
sub
pop
xchg
sbb
dec
mov
or
dec
ja
mov
cmc
dec
negb
jl
jo
gs
aad
add
and
loope
jbe
rolb
and
call
sahf
cltd
aaa
stc
clc
sub
mov
dec
into
sahf
pop
dec
sbb
aam
imul
fs
push
pop
pop
insl
sbb
jne
push
xchg
out
stos
xor
push
imul
adc
movsb
adc
shll
aaa
aaa
dec
in
push
xor
scas
test
mov
jbe
add
icebp
hlt
and
xchg
mov
cltd
and
push
mov
bound
jl
xchg
mov
push
push
aas
ret
sub
adc
push
mov
jo
in
roll
popl
pop
pop
icebp
jge
mov
pop
pushf
clc
or
pop
cmp
mov
jge
sbb
xor
rcrl
or
cmp
xor
fsubrl
push
insl
nop
cmp
and
ss
push
in
jo
daa
inc
sahf
nop
push
nop
pop
sbb
dec
outsl
cmp
mov
mov
rorb
out
sub
in
mov
ret
mov
mov
hlt
mov
fldcw
dec
or
cmp
sbbb
movsl
add
mov
insb
xchg
pop
sbb
fs
inc
cmpsb
inc
mov
mov
xchg
xor
push
fldt
xchg
xchg
adc
push
dec
pop
std
mov
test
jmp
scas
adc
jl
lret
repz
cmp
fisubrs
stc
stos
mov
in
mov
adc
dec
test
cmp
xor
movsb
push
jb
xor
jb
fimull
xchg
sbb
lds
sub
push
inc
fldz
xchg
dec
adc
sub
push
imul
insb
inc
dec
or
push
into
scas
cli
lar
fistl
and
test
push
imul
ret
repnz
icebp
sbb
add
mov
and
mov
jmp
arpl
fs
sbb
and
mov
jnp
jno
xchg
dec
xchg
pop
outsb
xchg
cli
sub
push
jbe
mov
out
mov
inc
xor
lods
arpl
pusha
lds
cwtl
and
std
flds
out
daa
nopl
loope
xchg
push
orb
or
jmp
movsl
cmp
cmpsb
cmp
add
lsl
dec
jl
sub
push
stc
mov
mov
pushf
into
jo
imul
divb
pop
pop
inc
mov
stos
iret
mov
dec
cs
dec
or
or
movsl
hlt
subb
sub
adcb
movb
inc
jp
push
data16
or
punpckhwd
push
mov
int3
and
push
lret
je
popa
data16
stc
cmp
pusha
mov
mov
ficompl
inc
mov
jae
sti
xlat
add
mov
enter
js
fst
mov
repz
in
inc
ja
loop
daa
mov
repnz
cld
xchg
loope
bound
movd
pop
xchg
orl
lock
fldenv
sbb
push
push
stos
bound
fdivrs
jmp
clc
dec
int3
adc
push
cmp
popa
adcl
mov
push
cmp
and
ss
daa
loope
pop
mov
pop
cmpsl
bound
fcoml
push
jecxz
sbb
jns
ss
addr16
fmuls
cmp
inc
outsl
cmp
mov
cmp
test
fwait
sarl
pusha
dec
sub
pop
inc
std
out
es
mov
insb
in
cltd
lcall
mov
or
add
add
inc
inc
xchg
xchg
mov
push
jns
mov
jb
push
in
mov
dec
sub
imul
jno
dec
pop
mov
adc
xchg
mov
cmc
stos
in
ds
dec
fwait
xchg
idivl
out
push
out
jnp
inc
daa
ljmp
xor
inc
push
into
pop
lock
push
inc
stos
ljmp
cmp
loope
inc
sbb
sbb
out
inc
stos
mov
imul
jp
ds
int3
ds
fildl
and
push
dec
push
push
sbb
cmp
inc
pop
sub
mov
inc
jmp
mov
cld
jns
leave
jl
dec
test
mov
out
xchg
popa
loope
hlt
scas
pop
add
pop
ds
loop
les
pop
cmpsb
add
adc
fidivl
and
cwtl
sub
push
mov
sti
pop
fcomps
xor
mov
fdiv
imul
insb
jle
mov
push
pop
ret
out
and
jp
ss
scas
fadds
and
jp
test
add
ja
scas
jmp
ds
mov
pop
sbb
inc
jle
xchg
icebp
ss
cmpl
dec
sahf
ljmp
in
adc
ss
lret
add
cmp
out
inc
jns
fs
ss
lcall
addr16
cmp
jmp
loope
repz
jb
sbb
ljmp
sarl
sti
add
pop
ret
loop
fistps
lds
lods
movsb
xchg
mov
sbb
fwait
sbb
call
sbb
testb
fs
mov
dec
mov
popa
pop
mov
and
lcall
cmp
test
aaa
xchg
xchg
popw
sbb
stos
movsl
push
lcall
cs
movb
fistl
ret
inc
jge
cld
mov
fidivrs
es
add
fwait
rol
dec
bound
push
sbb
arpl
pop
inc
xchg
sub
sub
in
shl
stc
mov
incb
jge
and
cmp
jo
cmpsl
mov
cmp
jnp
outsl
daa
dec
push
xor
push
jo
bound
cltd
data16
jne
pop
aad
dec
mov
pushl
pop
mov
push
lret
mov
roll
pop
sub
xchg
cmpsb
push
push
sbb
jmp
outsb
pop
pop
popa
pop
data16
and
mov
mov
testl
ja
mov
iret
inc
je
pop
aam
add
stc
lea
inc
frstor
fxch
xchg
testb
push
sub
or
sub
scas
pop
fnstsw
add
dec
adc
ret
adc
pop
jmp
cmpsl
lret
je
xchg
mov
sub
push
jl
mov
pop
mov
dec
lcall
cli
insb
fisttpl
std
add
inc
push
std
mov
mov
daa
mov
in
idivb
lea
cmp
fnstenv
dec
push
jp
std
push
shll
in
pop
outsb
jg
mov
in
xor
leave
cwtl
cmp
inc
hlt
fwait
cmc
jecxz
js
dec
sub
leave
cmp
sbb
es
mov
jmp
loopne
jns
call
rol
psubsb
mov
add
aaa
mov
frstor
add
outsb
add
popa
pop
aaa
mov
shll
push
adcb
sub
insb
mov
jg
push
arpl
imul
sbb
es
xchg
les
jp
in
cmpsb
adcb
or
mov
mov
mov
arpl
lds
test
add
shrb
repnz
cmp
jge
aas
xorb
adc
dec
dec
push
loop
out
into
ret
int
inc
gs
js
mulb
out
jl
and
in
add
fstl
hlt
push
sbb
or
lds
stos
aas
rorl
inc
lret
in
and
add
pop
add
mov
rolb
sbb
push
pop
mov
ret
mov
cmp
faddp
push
stc
xchg
cmp
aas
mov
and
sbb
or
mov
mov
fwait
sub
mov
push
lds
add
mov
or
aas
into
xor
scas
jo
inc
test
xchg
xor
bound
pop
cld
stos
ret
mov
xor
pop
xor
inc
mov
out
or
dec
fdivl
pushf
fcmovb
cmc
cmp
sub
ljmp
add
das
sbb
dec
and
lcall
loope
fcmovb
call
sub
fwait
mov
pop
in
cmp
cmp
std
ljmp
sbb
test
push
jp
aaa
mov
fwait
xlat
js
ljmp
nop
aam
cwtl
inc
push
jp
sub
daa
adc
inc
and
and
loop
int
daa
sbb
mov
mov
pushf
cmp
inc
in
and
sbb
ljmp
mov
jp
jbe
push
test
push
adc
cmp
dec
jmp
mov
ss
jb
xor
cmp
or
ds
push
lods
fisubrl
iret
cmp
push
and
xchg
mov
ljmp
jle
outsb
lea
dec
daa
addr16
and
push
xlat
out
mov
fs
stos
add
adc
adc
sbb
ss
das
lea
mov
addr16
adc
cld
out
and
and
mov
daa
jb
push
and
int
sub
pop
xor
or
sbb
or
mov
pop
gs
mov
je
fisubl
mov
imul
pop
jne
push
sbbb
cltd
out
test
mov
mov
pop
fsts
ja
cmp
jle
push
loopne
jnp
js
ja
cmp
jle
push
out
fstpl
jle
or
cmc
pop
aad
xchg
dec
mov
and
mov
pop
idiv
adc
xor
cmp
pop
push
push
sbb
cmpsb
pop
pop
shlb
ljmp
pop
sahf
mov
and
pop
out
fwait
adc
out
outsb
push
sbb
pop
je
loopne
push
bnd
add
mov
mov
sbb
cmp
jle
negb
sarb
loopne
fsubrl
push
cld
jge
lcall
lcall
test
xchg
push
xchg
ljmp
xor
add
push
mov
enter
inc
xor
jnp
and
outsb
dec
std
imul
arpl
sbb
cwtl
xlat
iret
mov
mov
push
fisttpll
push
add
cmp
cmp
loopne
out
mov
mov
sbb
addr16
push
jg
push
aas
xor
out
ss
cmpsl
xor
xor
lret
loopne
push
dec
sarl
sbb
imulb
cmc
cmp
pop
fwait
and
fimull
loope
subb
loopne
fldl
in
cmpsb
cli
pop
fisubs
cmp
sahf
or
xchg
push
pop
insb
aas
out
jmp
or
push
mov
sbb
imul
ljmp
imul
cmp
sbb
and
ficompl
jmp
ds
cmp
and
loop
imul
lock
pop
add
ss
mov
cmp
jp
inc
inc
push
jl
int3
fiadds
loop
imul
inc
ljmp
lcall
cmp
lcallw
ds
push
cs
sub
popa
dec
sbb
add
dec
gs
fnstenv
jmp
cmpl
cmp
movsb
lret
push
xlat
push
subb
fldenv
stos
loope
or
dec
out
mov
scas
pop
lret
push
mov
stos
outsb
xlat
pop
rcrl
dec
fisubl
push
fisttps
stos
sub
and
dec
arpl
andb
pop
je
ljmp
out
scas
mov
loop
arpl
lahf
call
sbb
movsb
movsb
sbb
mov
sbbb
and
loop
es
cmp
and
sbb
pop
push
mov
mov
inc
push
jge
inc
lcall
pusha
xchg
jo
or
fiaddl
pusha
jns
addr16
jb
pop
or
add
lea
into
mov
out
scas
jmp
sti
and
cli
pop
dec
pop
or
sahf
jae
mov
pusha
lahf
sbb
sub
xor
pop
push
inc
stos
ficoms
cltd
xor
cmp
jnp
jmp
ja
and
enter
jp
imul
mov
and
jnp
cmp
jo
stos
xchg
push
mov
scas
in
dec
sti
leave
xor
popa
jbe
bound
push
jnp
dec
pop
mov
push
and
adc
rol
addr16
xchg
xor
fwait
jns
addr16
jo
push
lods
ret
fstpl
sahf
mov
sbb
cwtl
jp
insl
sahf
push
popa
ret
pusha
fstl
sahf
mov
and
cmpsb
loopne
push
cmp
leave
out
add
adc
in
cli
push
cmp
mov
sbb
fnstsw
or
mov
ljmp
in
cmp
sub
pop
stos
lret
jae
mov
xlat
mov
repz
rclb
jp
mov
add
xchg
lea
pop
in
inc
push
mov
mov
lcall
int
sbbl
sbb
call
xchg
pusha
sti
inc
add
push
cmp
decb
loop
mov
iret
pusha
lea
pusha
cmp
loope
push
sbb
lods
icebp
jge
push
sahf
pusha
lahf
pop
xorl
jecxz
aaa
data16
mov
push
sbb
pop
and
mov
push
push
call
cmpsl
int3
daa
sbb
aaa
mov
push
mov
ljmp
popf
out
and
fldlg2
ret
out
inc
jae
sbb
push
pop
fldl
sub
cmp
mov
push
jbe
lret
sbb
dec
mov
pop
sbb
scas
pop
mov
xor
mov
cmp
ficoml
fildl
mov
test
fstpt
ficoms
loopne
inc
sbb
cmp
loopne
inc
shrb
ljmp
jae
pop
rclb
dec
lcall
loopne
out
pusha
jnp
aas
and
sub
ja
cmp
out
sbb
mov
pop
push
lcall
sub
sahf
pop
dec
ret
pop
xchg
dec
cmp
xor
add
ds
imul
xchg
mov
push
outsb
test
jae
cmpsb
ja
or
subl
dec
sub
rclb
stos
test
aaa
ljmp
inc
push
cmpsl
dec
mov
dec
stos
cmp
or
jnp
adc
push
sar
cmp
out
into
sub
scas
cli
sub
pop
cmp
insl
and
mov
cmp
pop
aas
in
imul
or
mov
pop
inc
mov
inc
andb
sahf
cmp
cmp
loop
imul
dec
std
add
pop
pop
jg
cmp
imul
mov
mov
inc
sbb
pop
scas
out
std
adcl
add
outsl
xor
ljmp
test
outsb
nop
daa
ds
dec
xchg
or
pop
bound
pop
xlat
inc
sub
adc
cmpsb
repz
jb
mov
test
dec
fildl
sub
daa
in
and
push
call
pusha
adc
mov
and
and
fisubl
lret
stos
xlat
sub
push
leave
test
mov
jnp
mov
lret
stos
mov
mov
mov
repz
jle
lret
mov
decl
aam
stos
jmp
jmp
mov
aaa
stos
push
imul
clc
pop
out
cmc
mov
mov
pop
adc
incl
jbe
or
sahf
jg
jp
xchg
mov
fsubrp
mov
inc
lret
mov
inc
push
push
mov
xchg
mov
pop
lret
aam
mov
cli
loop
aaa
lcall
pop
jns
pop
pop
jb
inc
imul
push
testl
and
jg
test
loop
aam
inc
stc
imul
jnp
xlat
or
and
inc
lret
popa
dec
adc
xlat
dec
scas
xchg
out
idivb
pusha
ljmp
repz
adc
jnp
movb
in
mov
push
dec
xor
addr16
sbb
shlb
mov
icebp
fcmovu
std
dec
add
sbb
mov
xchg
jnp
test
dec
fbstp
pop
and
pop
fsubrl
aas
leave
and
dec
lahf
cmpsl
mov
ficoms
scas
mov
jmp
mov
sub
xor
in
mov
push
or
mov
push
popa
fidivrl
mov
cmc
sbb
xchg
mov
add
cld
cmpsl
mov
pop
add
test
in
out
lret
sbb
sub
and
and
add
xlat
rcrb
test
into
dec
pushf
jg
daa
lret
enter
outsl
bound
sbb
ret
or
int
lds
cmpsl
loopne
mov
imul
neg
dec
out
or
xchg
inc
sbb
add
fisubl
pop
roll
jecxz
arpl
rorb
imulb
imul
push
out
loop
inc
outsl
lret
data16
fisubrl
imul
push
jno
fldcw
js
sbb
fdivs
mov
jbe
in
andl
shrl
cmpsl
xorl
push
lcall
rolb
outsb
sub
fcomps
daa
mov
stos
sub
fldt
sub
aaa
push
fxch
int
cmp
rorb
dec
xor
inc
sti
mov
into
dec
outsl
pop
mov
sahf
mov
ds
test
loop
push
imul
push
and
cmp
loop
imul
inc
and
bound
and
pop
pop
and
inc
and
push
push
push
adc
pusha
stc
inc
jns
push
sbb
loop
mov
push
mov
pusha
loope
or
ja
dec
sbb
sbb
in
push
js
pop
stos
scas
inc
xchg
push
fisubl
mov
fisttpl
das
dec
out
leave
pop
scas
sbb
rorb
pop
jnp
sbb
sbb
fimuls
add
and
aas
ficoms
iret
cli
out
rclb
cmp
imul
push
cli
xor
jnp
mov
inc
test
es
push
orl
arpl
lcall
outsb
xor
lret
ficomps
pop
jbe,pt
aaa
imul
aaa
mov
in
mov
repz
ja
cmp
or
fs
sub
jnp
sti
pop
pop
or
invd
test
cmp
or
inc
in
fbstp
ds
mov
push
fwait
stc
mov
je
leave
xor
jno
sti
popa
pop
outsl
cmp
adc
aaa
movsl
jb
sbb
bound
pushf
inc
ds
dec
push
aas
lcall
bound
jp
and
xor
in
lcall
cmp
push
cli
fmull
xchg
sbb
lds
push
inc
shll
loopne
jle
xchg
pop
dec
dec
ljmp
inc
fsubrl
cld
xor
ficoml
idivb
insb
or
push
mov
and
cmpsl
adc
or
pop
sbb
cmp
cltd
push
pop
sbb
xor
in
daa
pushf
dec
ret
sbb
fwait
jmp
dec
push
les
aad
notb
sub
xor
fildl
adc
lds
xor
jo
sbb
pop
cmp
xchg
ret
sarb
fldenv
daa
ret
lret
stc
and
ds
cmp
lahf
shlb
cltd
loop
ljmp
push
push
inc
xorl
push
fdiv
test
mov
cmp
jnp
pop
ja
sbb
jle
mov
in
mov
lods
lock
dec
push
sub
into
inc
mov
pushf
dec
lds
popa
shll
imul
add
lahf
fs
jo
sarl
mov
out
adc
jae
mov
fbstp
jle
lds
xor
insb
pop
neg
test
sub
dec
pop
rcll
and
das
jb
mov
in
aaa
mov
clc
decb
popa
lds
fadds
fbld
jnp
ja
jno
jne
jp
adc
adc
xchg
cmc
xor
dec
mov
bound
sbb
out
jp
push
pop
ljmp
jo
jle
mov
imul
xchg
in
imul
mov
mov
scas
mov
in
xchg
mov
mov
mov
dec
xchg
fiadds
push
xor
cmp
cmp
jmp
bnd
jp
imul
push
adc
jmp
dec
sub
inc
pop
jp
jo
cmp
in
bound
pop
jne
push
stc
cwtl
lret
das
push
inc
bound
push
icebp
jbe
push
psllq
int3
mov
mov
call
pop
cmpsl
mov
cmp
out
push
jo
outsl
fs
dec
ret
adc
pop
jp
pushf
aas
fistps
jle
enter
jb
push
jae
icebp
gs
mov
in
and
dec
imul
jb
lds
xor
scas
mov
xchg
lock
cmp
mov
pop
cli
jne
mov
cmp
adc
push
jno
cmpl
mov
mov
insb
inc
sbb
push
sub
push
mov
loope
inc
sahf
out
push
xchg
pusha
sbb
jg
push
push
mov
daa
jmp
dec
and
clc
xchg
cwtl
dec
bound
xchg
call
aam
add
push
sub
lds
nop
jno
inc
cmpsb
stos
and
test
sbb
outsl
sub
in
lret
jmp
sub
jnp
xchg
jl
cmpsl
lcall
jne
fwait
xor
mov
lret
inc
fidivl
cmp
test
dec
fwait
mov
cli
insb
bound
sub
cltd
push
jns
fwait
sbb
and
cmpsb
xor
jb
dec
mov
sub
pop
sub
pop
sub
pop
inc
pop
aaa
jge
jecxz
push
mov
cmp
cmp
xchg
inc
subb
out
inc
adc
sub
out
mov
xchg
pop
xchg
stos
jmp
sbb
adc
jg
dec
cmpsb
xchg
out
xor
pop
push
or
hlt
xchg
mov
sbb
mov
fists
stc
stos
addr16
add
and
cmpsb
push
adc
adc
sub
call
shl
pop
jg
scas
outsb
jns
jno
pop
cmp
enter
mov
inc
test
mov
loopne
or
mov
psubsb
lods
jp
adc
sub
mov
sub
out
ljmp
mov
push
jae
mov
add
mov
lret
push
cmp
xchg
add
adc
push
jo
jo
cld
and
dec
rcrb
push
push
imul
in
into
adc
xor
and
ds
bound
and
inc
insl
mov
cmpl
lds
cmp
lea
add
mov
mov
mov
push
mov
cmp
sub
mov
push
push
ret
and
add
pushf
adc
push
mov
rorl
push
mov
cmp
popa
scas
xor
dec
xchg
xchg
or
test
dec
inc
leave
fstpt
out
inc
or
outsb
lret
mov
lret
popa
xchg
or
mov
sbb
push
mov
xchg
popa
and
das
mov
cli
xor
sbb
pop
add
mov
fcmove
shlb
push
jle
ljmp
push
inc
inc
inc
out
xor
sbb
int
shrl
cltd
jbe
jg
push
popa
xor
lcall
jmp
cli
jp
les
movsb
lret
mov
push
iret
xchg
inc
add
sub
jp
mov
xchg
cmp
inc
es
ja
mov
mov
or
jmp
mov
lds
mov
out
pop
out
or
xchg
loopne
adc
popl
test
sub
popf
mov
mov
cli
pop
jo
ljmp
mov
pop
mov
sbbb
dec
sarb
in
or
cli
cld
scas
out
ret
icebp
add
in
bound
and
cli
out
dec
leave
jp
cmovo
fisubrl
into
decl
hlt
mov
ds
test
inc
mov
add
sahf
std
sbb
fs
mov
dec
out
or
xchg
mov
cmp
mov
or
mov
incb
push
xor
sbb
add
shrb
mov
stos
shll
jle
lock
jp
fsts
sbb
xchg
pop
dec
cmp
gs
and
movsb
ljmp
sub
test
popf
jne
das
dec
xor
sub
pop
inc
jno
fistl
lret
dec
cmp
jecxz
xchg
imul
jp
aam
push
adc
pop
mov
and
lret
push
cwtl
mov
fcmovnu
mov
fiaddl
xor
sub
in
cmp
imul
into
repz
out
pop
mov
popa
cmpsb
push
jo
cmpsb
mov
jns
pop
clc
arpl
adc
sbb
ficoms
sbb
jp
mov
inc
popw
in
xor
and
xchg
imul
pop
ss
dec
imulb
fs
add
jp
jmp
dec
lds
aam
scas
ret
push
mov
xor
icebp
jge
xlat
js
sbb
incb
andb
outsb
jnp
imul
in
mov
into
in
stc
cmp
xchg
imul
inc
adc
adc
popf
push
and
dec
sub
sbb
loop
ja
push
push
push
mov
cli
push
pop
leave
jne
inc
cwtl
fs
mov
jno
popf
push
mov
mov
mov
sbb
test
out
sub
cli
notb
push
loope
pop
mov
mov
xchg
jb
jge
jne
jae
sub
pop
insl
push
adc
loop
repnz
cmp
fs
lea
sub
in
mov
out
jnp
dec
ljmp
xchg
ss
and
xchg
pop
or
inc
bound
out
popa
mov
lods
push
xchg
ret
das
mov
add
imul
or
or
pop
outsb
pop
stos
lret
loope
lret
and
test
cld
and
lcall
mov
pop
out
mov
sub
sbb
inc
jl
jne
xor
nop
fsub
iret
cmpsl
and
adc
bound
mov
fimuls
imul
icebp
js
mov
add
jno
lea
gs
stos
ret
push
mov
mov
inc
and
sbb
clc
flds
iret
icebp
jle
mov
jo
dec
push
ljmp
clc
mov
xor
je
fs
sub
dec
aaa
jne
ds
sub
cltd
ljmp
cli
fimuls
mov
pop
or
xor
dec
imul
mov
pushf
dec
and
shll
sbb
jns
cmpsl
fldl2e
fwait
pop
push
inc
inc
pop
inc
mov
or
push
or
dec
shrb
adc
mov
lock
negl
fadds
inc
cmpsb
pop
sub
sub
xor
divb
fsubrl
and
add
test
mov
les
outsb
loop
packssdw
and
push
add
inc
jnp
cmp
jnp
imul
cmp
ja
outsl
sbb
shlb
jne
cmp
cmp
lcall
push
cmp
inc
loope
fsubrl
daa
dec
sub
jo
outsb
sti
mov
push
pop
dec
outsb
daa
push
test
xchg
jecxz
lock
sbb
sti
sub
in
aas
mov
es
orb
movsb
or
dec
xchg
push
scas
jecxz
cmpb
sar
pop
mov
icebp
inc
arpl
jb
dec
call
ljmp
sbb
mov
and
scas
mov
xorb
enter
or
and
enter
jae
cmp
orl
shll
cmp
hlt
and
lods
sbb
mov
aam
adc
cmpsb
ja
repz
sub
xchg
es
mov
inc
insb
jno
mov
sub
imul
jne
push
adc
int3
out
jp
jmp
dec
push
mov
adc
imul
xchg
adc
mov
cmpsl
hlt
mov
bound
test
sbb
xchg
decb
mov
jbe
in
es
ja
pop
or
daa
push
and
outsl
or
jae
xor
sbb
das
bound
jo
push
leave
xor
xchg
shrb
mov
sbbb
notl
insb
pop
mov
fdivrs
xlat
addr16
cmp
push
imul
arpl
cmp
sbb
out
adc
out
xor
addr16
in
stc
adc
inc
jl
insb
xchg
test
cltd
mov
cmp
loope
jge
outsl
xor
mov
imul
pop
enter
rcrl
ficompl
jg
dec
sbb
data16
dec
inc
sbb
push
and
jb
jecxz
enter
push
test
adc
inc
or
xor
xchg
and
cmp
mov
pop
mov
lcall
enter
mov
out
jl
sahf
cmpl
xor
ret
mov
nop
sbb
sub
mov
xchg
fstl
ficoml
jb
mov
dec
inc
xor
mov
xchg
popa
push
sub
mov
mov
popf
fst
incl
aam
xchg
imul
sub
push
sarb
sub
jmp
popf
lods
imulb
ljmp
xchg
and
jbe
mov
das
xor
or
inc
cmp
cwtl
cmpsl
inc
ds
push
stc
leave
les
test
pop
outsb
addr16
stos
test
aad
dec
repnz
mov
dec
dec
cld
dec
add
or
xor
pop
xchg
jmp
push
clc
neg
daa
roll
cwtl
lret
push
or
bound
jecxz
jo
add
and
jmp
daa
and
es
sbb
cs
ds
pop
and
or
xchg
mov
cmp
mov
push
push
ret
test
int3
movsl
addr16
cld
push
repnz
cmp
sbb
int3
mov
or
imul
xchg
mov
jo
cmpsb
jnp
ja
cld
xor
inc
mov
adc
mov
and
fstpl
loope
xchg
stc
inc
js
sahf
mov
leave
pop
jp
mov
jne
cmp
push
cli
pop
inc
push
inc
jb
imul
cmp
lds
test
shll
inc
fucompp
pop
bound
int
cmp
add
insb
sub
ja
loop
inc
insb
inc
cs
cmp
push
mov
mov
pop
xor
mov
fstp
adc
mov
add
jp
mov
mov
ret
push
leave
inc
fldl
inc
mov
gs
lods
dec
jg
cmp
inc
xor
test
fdivs
lea
cwtl
movsl
jl
inc
mov
pop
push
dec
xor
cmpl
dec
js
into
fwait
scas
xchg
pop
and
dec
jnp
out
and
clc
ljmp
js
arpl
mov
jns
cmc
imul
mov
push
add
pop
rcll
push
leave
sarb
popf
jmp
and
jmp
add
add
pop
jnp
xor
pop
inc
pop
lds
mov
fldcw
sbb
movsb
je
jecxz
inc
and
cwtl
mov
outsl
adc
pop
jge
cmpsb
mov
lcall
xor
call
xor
jno
inc
sub
int3
inc
stc
xchg
cmp
test
data16
mov
movsb
cmpb
into
jae
push
adc
adc
inc
mov
leave
cmpsb
mov
sub
imul
mov
pop
xor
out
push
rcll
mov
inc
lcall
dec
sbb
pop
out
and
lcall
sub
add
jmp
ljmp
sbbb
pusha
nop
dec
fs
bound
cli
pop
xchg
mov
out
sbb
xchg
test
mov
movd
cmpsl
push
jnp
xlat
dec
xor
jmp
sub
arpl
pop
les
inc
scas
fwait
out
inc
and
and
jns
bound
inc
push
cmp
jb
jbe
cmp
scas
out
cmp
adc
icebp
mov
cwtl
pusha
decl
or
aaa
pop
addr16
fdivr
sub
xchg
xchg
in
fistpll
stos
pop
cs
clc
mov
fdivs
cwtl
inc
jne
add
xchg
cli
pop
push
push
stos
imul
stc
and
mov
lahf
sti
sub
inc
addl
mov
and
cmp
lds
mov
hlt
inc
or
mov
mov
inc
cli
sbb
pcmpeqw
rol
sbb
or
and
mov
add
inc
adc
sbb
pop
mov
dec
aaa
pushf
xor
stc
add
pop
enter
jp
inc
mov
clc
lods
jns
cmp
xor
lcall
faddl
or
sub
jns
test
stos
bound
xchg
fisttps
stc
mov
ret
test
data16
scas
jmp
leave
xchg
mov
and
sbb
sbb
rol
jb
imul
xor
fmuls
inc
hlt
sti
cmp
push
mov
xchg
shl
adc
sbb
lods
mov
clc
cwtl
aad
int3
and
push
add
nop
out
popf
and
aaa
sahf
xor
cli
out
jg
mov
stos
fistpl
pop
and
scas
and
dec
es
sub
stos
adc
leave
sbb
push
mov
and
lds
mov
dec
aaa
sarb
sbb
stos
sbb
mov
xchg
lret
add
hlt
mov
xchg
cmc
hlt
dec
cmpsb
inc
mov
call
cmpb
sub
lret
iret
jg
cmp
inc
stos
test
stos
cmp
adc
or
test
data16
fwait
add
psubb
testb
das
mov
inc
outsb
dec
pop
lea
mov
arpl
inc
shl
pop
call
jns
mov
and
test
cmp
inc
sbb
pop
test
xor
fs
xchg
imul
shlb
addb
mov
mov
imul
dec
cli
cli
mov
xchg
and
push
in
popa
push
sbb
ja
mov
ja
inc
dec
jmp
out
ja
dec
out
imul
mov
jge
out
imul
cwtl
popa
push
pusha
jl
inc
inc
addl
jp
and
mov
insb
sbbl
cmpsb
xchg
cmp
arpl
jb
sbb
xor
mov
repz
sbb
pop
adc
ret
test
lret
pop
mov
insb
pop
leave
insb
sahf
pop
mov
aad
mov
mov
pop
adcb
lds
in
les
mov
movb
sbb
or
jg
push
mov
mov
jb
cwtl
push
sbb
sbb
jmp
mov
jbe
inc
imul
inc
andl
pop
pop
out
ret
fistl
jbe
popa
mov
mov
mov
arpl
jp
inc
js
outsb
mov
or
pop
stos
mov
es
cwtl
enter
shll
cli
movsb
ss
aas
ret
mov
ret
jle
es
mov
ficoml
xchg
mov
imul
bound
jae
pop
and
scas
xchg
add
hlt
mov
add
sbb
xchg
pushf
cli
dec
push
mov
sub
mov
icebp
outsb
push
sbb
negl
dec
sbb
rclb
lret
scas
mov
sarb
aad
stos
cmpsb
adc
adc
and
inc
xor
jb
and
mov
cli
mov
js
cmp
xor
mov
kmovw
xchg
inc
shll
fmul
insb
mov
aas
sub
jp
push
inc
mov
jmp
or
aad
repnz
cmp
cltd
mov
cwtl
idivb
push
ret
pop
mov
push
mov
dec
out
faddl
pushf
in
dec
add
pushw
hlt
push
push
cmp
fisubs
movsl
lahf
mov
xor
pop
repnz
sub
sbb
sarb
pop
fsubr
in
push
icebp
xor
push
ds
mov
daa
cld
icebp
push
sub
loope
lret
jp
mov
cmc
pop
data16
sbb
nop
mov
hlt
nop
ret
cs
test
je
push
inc
faddl
imul
ds
cmp
ret
pop
imul
jecxz
stos
addr16
jne
push
sub
clc
and
mov
push
inc
cmp
xchg
cmp
sub
xchg
sarl
xor
iret
ret
fisubrs
insl
and
push
out
jp
xor
int3
ljmp
sub
cmp
enter
loopne
clc
jecxz
or
mov
scas
and
push
pushf
sbb
sbb
das
lods
mov
mov
xchg
sbb
jb
push
repnz
mov
mov
sub
and
dec
and
pop
jb
pop
or
mov
dec
add
xor
ficomps
sbb
mov
ret
ss
mov
or
popf
dec
or
je
clc
pop
dec
adc
idivb
rorb
dec
int3
inc
outsb
mov
dec
and
cmp
sbb
xor
loopne
iret
aaa
add
gs
mov
inc
push
fsubrl
dec
mov
jge
mov
inc
cltd
inc
mov
cmc
js
mov
xor
ret
cli
lahf
aad
iret
sub
fisubrl
ss
mov
jecxz
and
out
and
gs
out
loopne
decb
jle
push
inc
push
in
pushf
add
push
scas
and
or
sbb
ss
add
lret
xchg
out
and
rcrb
insb
adc
daa
aam
dec
inc
mov
scas
daa
pop
pop
stc
pop
lds
jo
add
call
popa
clc
rol
scas
repz
test
les
loope
push
inc
pop
jmp
push
scas
and
pop
mov
int3
out
sti
rclb
cld
pop
imul
in
pop
ror
xchg
mov
orb
push
cwtl
mov
push
fs
cmp
inc
xchg
decl
and
pop
and
daa
jge
xor
shl
movsb
mov
push
fcomps
test
out
je
adc
xor
lea
push
je
mov
js
pop
and
call
mov
ficomps
xor
or
and
test
loop
mov
mov
adcl
pop
lea
mov
pop
in
add
aaa
pop
lds
stc
pop
adc
pusha
lods
sub
rorb
icebp
and
sub
jno
xor
dec
int
int
into
sbb
aas
fwait
xlat
out
dec
cli
jl
stos
push
mov
stos
imul
xchg
imul
mov
dec
movsb
cli
mov
pop
clc
popf
fisubrl
dec
push
cmp
mov
inc
stos
movsl
mov
dec
cld
sbb
mov
fistpl
push
es
loope
bound
push
mov
lods
nop
mov
pop
adc
pop
scas
stos
pop
cmpsb
and
fwait
push
xor
popa
insb
loope
fs
repz
icebp
pop
mov
jp
xor
int
push
lock
sti
pop
cmp
fs
jno
imul
jb
adc
imul
loop
sbb
mov
fs
mov
jmp
cltd
mov
gs
cmp
mov
push
sub
and
insb
repz
test
jmp
mov
sub
or
mov
xchg
je
push
xor
fldl
cmp
inc
jb
sti
fdivrl
xchg
arpl
jmp
push
xor
xchg
sti
mov
mov
push
mov
repz
fcmovbe
mov
pop
adc
jns
scas
jbe
mov
sahf
push
fimull
mov
cli
sbb
adc
out
sbb
out
sbb
jb
and
push
xor
push
stc
cmp
sbb
fimull
fsts
pop
jmp
fadd
jb
xor
push
stos
fcomps
cli
dec
push
mov
or
mov
sti
cmpsl
test
ss
cmp
or
ss
mov
push
adc
mov
test
pop
adc
sbb
mov
ja
imul
ds
pop
xor
lds
maskmovq
mull
mov
loop
sbb
lcall
cltd
stos
mov
cli
ficoms
mov
and
sub
daa
out
in
mov
inc
or
xchg
sbbl
outsl
add
inc
sub
enter
rclb
pop
or
aas
dec
filds
pop
insb
mov
or
mov
lods
sbb
push
cmp
loop
jb
fwait
sar
fistpl
es
ja
stos
xorb
fwait
shrb
push
testl
negb
jle
sti
push
cs
adc
dec
cld
push
xchg
push
lock
push
sbb
and
outsb
idivl
scas
xlat
cmp
arpl
mov
test
fimull
outsb
loop
test
xor
subl
lcall
test
fcmovu
dec
and
xchg
ret
mov
cmp
inc
shrl
sti
xchg
call
stos
pop
and
xchg
data16
push
jae
into
cs
cmp
dec
xchg
jbe
mov
imul
fdivl
loop
cli
add
xchg
push
daa
add
and
push
cwtl
jl
mov
inc
scas
xchg
jne
inc
lods
ret
push
sub
andb
enter
cmp
movsb
mov
fcmovb
test
jo
popa
sbb
push
xchg
cmp
mov
and
pusha
push
enter
scas
sbb
enter
dec
sub
hlt
data16
add
dec
jmp
ret
mov
xchg
xchg
ret
cli
pop
js
and
xchg
dec
punpcklwd
popf
sub
hlt
xchg
mov
mov
inc
test
cmp
sbb
add
push
loope
test
ljmp
test
mov
arpl
mov
test
mov
mov
jne
cmpsb
cltd
es
cmp
jne
push
fadd
lcall
fnstenv
xor
dec
cmpsl
lock
push
insb
push
add
mov
jae
fisttpl
mov
andl
movsb
arpl
les
jmp
stos
notb
mov
jnp
shl
push
jns
jmp
aam
push
jnp
roll
ret
dec
sbb
sbb
sbb
inc
sub
aad
lea
xor
shlb
das
mov
in
loop
ljmp
jb
mov
sub
jmp
leave
aad
mov
nop
mov
out
outsl
gs
add
cltd
jecxz
sbb
dec
loop
inc
jne,pt
or
fdiv
sbb
sub
out
or
jle
xor
jecxz
dec
cltd
mov
push
jnp
mov
dec
pop
lock
test
sbb
popf
js
jne
fstps
add
imul
loop
out
cmp
xlat
dec
push
lock
loop
xchg
xor
pushf
shr
js
jae
push
nop
dec
mov
pop
push
push
std
outsl
mov
popa
and
lret
mov
movsb
xchg
ljmp
fisttpll
rcrb
into
inc
pop
mov
dec
in
insl
inc
jne
pusha
leave
loopne,pt
mov
sbbl
push
dec
push
add
daa
std
sarl
mov
mov
decl
mov
mov
fdivp
imulb
sbb
mov
jae
sbb
xlat
scas
add
dec
mov
mov
sbb
mov
push
inc
push
mov
inc
xor
dec
outsb
stos
loop
gs
pop
add
scas
sbb
mov
mov
xor
push
mov
jle
es
mov
jno
xor
sub
nop
or
aas
mov
mov
sub
jae
ljmp
fsts
push
push
push
ficoml
mov
aad
jg
das
or
loop
cmp
fdivl
cmp
adc
inc
cmp
pop
andps
xchg
sbb
ja
add
sbb
jb
inc
jns
pop
sbb
shlb
rolb
into
shrl
or
mov
add
int3
mov
scas
pop
aas
jnp
cmp
or
imul
xorl
mov
stc
dec
das
and
push
je
dec
sarb
or
push
jge
lods
fidivrs
pop
subb
lods
xor
mov
and
out
shll
loope
adc
stc
mov
flds
jp
cmp
and
popa
sarb
cli
jbe
fsubrl
adc
and
xor
sar
shrb
outsb
stos
adc
sbb
popa
pop
js
dec
jae
inc
cmpl
shlb
add
push
sub
xor
and
jns
insl
cmpsb
add
insb
testb
int
inc
jg
loopne
test
or
sub
ds
mov
and
add
sub
push
or
sub
jnp
adc
push
stos
or
jmp
les
fs
movsb
int3
jp
imul
dec
jmp
pop
insl
jns
xchg
pop
out
scas
xchg
push
lret
jnp
jg
scas
pop
push
hlt
sbb
dec
push
and
mov
xchg
mov
and
cmp
cmpsl
and
gs
outsb
mov
scas
or
or
test
ret
add
fidivrs
push
imul
fidivrl
cli
push
pop
ret
loope
xor
sbb
subb
sbb
adc
into
push
pop
cmp
cmpsb
in
incl
inc
cmp
stos
pusha
loopne
jge
mov
ja
out
dec
xor
in
push
adc
pop
xchg
jae
push
pop
cmpsb
inc
cmp
cwtl
jo
lds
cmc
rcl
rcrl
bound
aaa
cli
push
ret
aaa
push
dec
loop
test
push
dec
mov
sbb
sub
dec
shrl
rcrl
lds
loopne
and
push
stos
imul
shlb
stos
xor
lcall
mov
addr16
inc
es
xchg
jae
inc
mov
mov
push
in
les
aad
push
lahf
addr16
inc
cs
nop
inc
addr16
inc
in
sbb
pusha
in
fldcw
mov
lret
mov
and
adc
test
push
fwait
push
bnd
cmp
mov
cmpsb
inc
sbb
adc
mov
je
cmp
cmp
jmp
inc
out
sbb
arpl
sub
imul
sarl
mov
test
fdivr
jno
fdivrs
push
dec
call
mov
push
out
cmpb
push
pop
xor
imul
add
jo
xchg
mov
dec
push
push
and
loopne
icebp
test
xchg
addb
or
push
mov
and
insl
adc
adc
jg
shll
mov
sbb
inc
in
rcrl
jmp
push
cmc
sbb
dec
aaa
push
jp
cltd
inc
mov
into
sub
xchg
cmp
cs
pop
push
out
testb
mov
leave
test
pop
mov
fxch
scas
push
repz
outsb
arpl
mov
fwait
lods
les
xorb
jne
das
in
lret
push
and
leave
mov
cmp
jmp
mov
jecxz
jb
adc
mov
xorb
xchg
dec
adc
jecxz
jb
mov
dec
xchg
xchg
xchg
insb
jmp
mov
test
xor
cmpl
ret
cmp
insb
mov
push
cmp
adc
movsb
pop
js
cltd
es
dec
flds
stc
inc
test
scas
cmp
adc
or
leave
movsl
hlt
mov
adc
push
sub
push
test
dec
addr16
dec
mov
sub
insb
pop
mov
cmp
and
inc
les
sub
adc
push
push
mov
cmp
and
inc
cmpsb
out
popa
and
mov
sti
inc
sub
ficompl
push
scas
xor
jg
hlt
mov
bound
nop
imul
arpl
mov
gs
cmpsl
out
cmp
mov
adc
cli
sahf
pop
xchg
fcompl
fnstsw
mov
xchg
mov
out
fdivrl
fidivs
push
pop
mov
insl
ja
mov
sub
xchg
sub
dec
aas
pop
cmpsb
aaa
pop
inc
mov
ds
das
popf
andl
in
imul
popf
xchg
lock
movsl
pop
into
dec
gs
push
xchg
jg
or
insb
jp
pop
and
pushf
xor
rorl
sarb
jp
jge
loop
jp
insb
dec
push
xchg
popf
pusha
iret
and
xor
inc
jge
mov
xor
mov
add
inc
pop
push
repz
jne
sbb
das
mov
dec
or
inc
lret
rcr
bound
scas
mov
outsb
jb
cmpb
mov
cmp
shlb
jae
outsl
loopne
and
scas
out
push
dec
imul
call
add
push
sbb
sub
test
sub
lds
push
jmp
nop
les
shlb
aaa
cmp
and
notl
inc
scas
xchg
fimuls
xchg
push
popf
mov
sub
negl
pop
inc
sbb
ljmp
cwtl
or
ret
cltd
inc
mov
fwait
and
out
sbb
popf
jg
sbb
jge
push
sub
sbb
shlb
xchg
dec
js
fs
fildl
call
xor
inc
loope
ss
cmp
sub
add
pop
jle
popa
fldcw
cmp
out
sbb
mov
xor
aas
push
inc
cs
pop
pop
arpl
and
pop
loope
inc
sbb
bound
xchg
stos
leave
mov
out
ret
xchg
push
dec
pushf
lret
sub
ss
adc
xchg
std
daa
push
cltd
cmp
lea
jmp
je
lcall
mov
inc
mov
mov
pop
cmp
inc
push
add
or
scas
dec
cmp
aaa
inc
in
dec
test
je
mov
jo
shlb
shll
aas
iret
jp
pop
dec
outsl
sub
or
mov
mov
mov
cmp
ja
stos
lds
sbb
ss
dec
movsl
fwait
je
pusha
test
jbe
push
and
add
pop
jb
inc
mov
sbb
mov
ds
and
test
ffreep
pushf
ret
fsubrs
sub
loopw
xchg
fisubl
inc
inc
ret
jbe
mov
test
inc
insl
and
jbe
or
add
sub
in
fadds
jns
jl
jb
cltd
and
pop
cmp
sahf
lret
inc
movsl
test
sbb
mov
stc
push
add
data16
push
call
scas
xchg
int3
jae
inc
sbb
sbb
add
out
jle
jmp
dec
aaa
xor
inc
xchg
stos
aaa
inc
pop
aad
inc
mov
fisubl
outsl
sahf
ret
subb
test
mov
mov
mov
imul
pop
and
mov
stos
lock
cwtl
iret
insb
adcb
sub
mov
jg
jmp
add
sbb
mov
ja
rcrb
dec
inc
jnp
sub
test
jg
mov
jmp
cmpsl
pop
and
xor
cmp
cmc
imul
lret
cwtl
ja
cmp
or
dec
and
mov
loope
dec
sahf
dec
fldenv
shlb
cmpsl
adc
jge
pop
push
mov
popa
popf
jae
adc
push
adc
xor
dec
loope
andb
popa
idivl
jl
pop
sti
aas
ss
jns
dec
mov
sbb
lret
xlat
add
sbb
and
sub
sbb
addr16
test
jnp
lds
jecxz
mov
out
mov
xor
int
into
sbb
outsb
mov
repz
bound
xor
loop
imul
xor
popl
sbb
cwtl
xchg
fidivrs
movsl
int3
xor
add
jp
jo
fcmovb
or
pop
jne
rcrl
fwait
arpl
jbe
mov
aam
mov
fst
hlt
stos
mov
sbb
data16
or
aaa
push
xchg
xchg
shlb
xor
mov
aas
gs
sbb
stos
xchg
pusha
mov
cmpsb
es
gs
mov
int
xor
xor
mov
sub
lahf
fst
xchg
mov
cltd
je
xorl
xchg
mov
out
jae
daa
ds
push
and
xchg
inc
outsl
jl
and
pop
mov
scas
clc
lds
pop
xor
mov
push
cmp
pushf
push
cld
out
adc
xchg
dec
cmp
jns
mov
push
mov
mov
stos
mov
jb
xor
mov
push
adc
xchg
xor
push
cmpsb
scas
ja
cmpsb
int3
aas
dec
push
xor
movsl
add
cmc
mov
outsb
aam
js
xlat
nop
xor
sub
ja
pop
lret
imul
mov
test
xchg
adc
mov
repnz
out
fdivl
sbb
jno
xchg
daa
lret
sti
mov
inc
in
xlat
outsl
in
jo
adc
adc
push
push
mov
pop
push
rcl
mov
sbb
idivl
mov
inc
dec
push
scas
pop
jnp
aam
xor
and
rcrl
xor
out
inc
push
jno
es
pop
mov
inc
push
adc
inc
lds
push
shl
fcomps
push
aad
jp
inc
cwtl
sbb
stos
mov
sub
aaa
je
sbb
fs
insl
rorb
daa
mov
ficomps
lds
mov
gs
cmp
and
pop
addr16
fstpt
cmp
loope
mov
push
jae
mov
das
mov
inc
inc
sbb
mov
adc
xchg
jae
pop
inc
and
add
inc
stc
cwtl
add
or
lea
and
and
sbb
aaa
inc
cs
and
cmp
push
lods
cmpsb
lea
es
dec
cmpsb
dec
jae
cli
jo
and
sahf
fidivrs
imul
loop
sub
pop
mov
push
loop
insl
andl
dec
in
push
es
jl
sbb
add
daa
insl
lea
push
pop
sbb
xor
xchg
lock
sbb
fiaddl
jg
hlt
cmpl
lcall
int
sbb
sub
les
lret
inc
mov
daa
mov
aas
sbb
pop
cmpsb
stos
add
out
movsb
fdivr
leave
push
mov
jecxz
mov
aad
insl
jne
and
mov
mov
lock
popa
add
push
mov
pop
jmp
xchg
pop
loopne
xchg
xor
jo
pop
pop
outsl
into
pop
in
out
ljmp
mov
mov
lahf
adc
stos
pop
fdivp
in
or
out
sbb
mov
cmp
and
lods
ja
hlt
xor
sub
mov
xchg
scas
push
rclb
ret
xor
fstpt
sbb
outsb
popa
xchg
sahf
push
cs
shrb
insb
ss
std
xor
dec
mov
dec
sahf
or
loop
fnsave
inc
or
iret
nop
push
insb
adc
lahf
xchg
lahf
cmp
mov
testb
xchg
pop
sbb
sbb
stos
fists
inc
pop
imul
repz
ss
cmpl
es
pop
fidivrs
insb
ret
or
sbbb
cmp
fwait
insb
shrb
insl
jnp
xchg
push
cmp
data16
dec
aad
sbb
push
pop
shr
les
sbb
pop
xor
xor
inc
imul
cmp
loope
xchg
push
inc
out
xor
mov
sahf
ret
sub
sub
sbb
mov
pushl
cmp
ret
pop
jl
jo
jne
leave
inc
sub
fisubrs
shr
cwtl
les
out
xchg
sub
testl
or
mov
fiaddl
and
pop
rorl
test
cltd
jp
inc
mov
arpl
inc
jmp
test
jmp
or
shlb
mov
inc
fimuls
xor
jecxz
sub
pop
mov
cmp
nop
xor
cmp
mov
cltd
sbb
xchg
xor
repz
fwait
dec
lahf
je
iret
cltd
in
push
xlat
lret
or
repz
sahf
dec
lahf
jae
pushf
out
inc
pushf
push
inc
dec
les
jbe
and
adc
int3
dec
ja
dec
or
cmp
or
notb
adcl
ljmp
subb
bound
push
inc
dec
das
icebp
mov
add
cmp
pusha
out
cli
popf
inc
lret
inc
call
cltd
xor
lock
mov
fnstcw
jo
test
cwtl
dec
fwait
pop
xchg
ja
jae
fs
xor
cmp
jne
or
out
shlb
scas
aad
push
leave
cltd
in
mov
dec
int3
pop
nop
inc
flds
mov
cmpl
sbb
jle
incl
push
arpl
call
pushf
cmp
mov
jp
stc
cmp
mov
arpl
xor
cmpl
sbb
add
fidivrs
hlt
mov
nop
fsubr
iret
mov
mov
jmp
scas
loope
imul
inc
addl
dec
xchg
in
inc
out
fdivl
mov
jg
sbbl
xor
add
sbb
jecxz
inc
inc
add
popf
add
cmp
hlt
inc
int
add
fistl
cli
mov
jae
cmp
leave
jae
or
orl
or
inc
fisubl
jbe
rorb
les
mov
xchg
lods
mov
xchg
nop
mov
ret
sub
push
dec
push
push
mov
aad
inc
pop
daa
lea
movsl
lds
test
jp,pn
aaa
lods
or
lahf
add
aaa
mov
arpl
loope
push
dec
lahf
fcmovnb
jno
stc
addr16
adc
lds
cmp
xchg
xchg
stc
and
loopne
lds
pop
cmp
lock
pushf
inc
insl
mov
insb
aas
mov
lret
iret
sbb
adc
push
inc
les
pop
sti
and
scas
jae
in
fimull
pop
lcall
inc
dec
scas
sahf
adc
jle
jecxz
xor
jge
fstl
dec
push
jmp
mov
inc
stos
xchg
test
ljmp
les
jle
arpl
std
scas
add
shr
xor
mov
sub
aad
sbb
ljmp
mov
jne
test
push
sahf
xchg
loope
lret
enter
xor
cltd
adc
cmp
push
and
mov
test
cmp
mull
and
je
sub
outsl
jl
dec
push
insl
cmp
cmp
addr16
xlat
ret
es
in
fisubl
aas
mov
push
push
sub
inc
and
lods
mov
add
rcrl
add
imul
dec
je
mov
out
inc
pop
inc
out
pop
jnp,pn
sti
inc
mov
mov
sub
adc
sbb
pop
dec
int3
push
or
mov
test
mov
jae
dec
out
or
or
mov
jo
lea
xchg
cmpsl
lret
je
dec
cmp
pushf
dec
mov
insl
test
leave
push
mov
test
aas
ljmp
sbb
sbb
pop
mov
sbb
test
sbb
out
lock
mov
sbb
push
inc
aaa
and
push
push
push
sub
pop
rclb
xor
aaa
enter
outsl
sbb
jb
cmp
in
outsl
xor
out
imul
shrb
sbb
inc
jo
jmp
xor
fcomps
pop
push
push
daa
sub
pop
test
lcall
es
cld
and
fimuls
xlat
inc
xor
xchg
jne
mov
xor
push
jg
lods
aas
inc
pop
xchg
popa
pushl
jo
adc
nop
mov
sbb
stos
pop
addr16
cmpsb
pop
iret
out
inc
jae
pop
cmpl
xor
jmp
dec
aas
shlb
test
repz
xor
push
pextrw
add
fisttps
mov
xor
add
sub
stc
int
addb
jns
sub
lds
icebp
in
pop
sub
and
pusha
ret
lods
jnp
test
sub
mov
xchg
addr16
sub
mov
fisubrs
sbb
push
loop
int3
pop
into
dec
xchg
loope
sub
push
ficomps
cld
mov
sbb
sbb
loope
sbb
out
mov
xchg
stos
es
lds
insb
sbb
pop
scas
aam
pushf
fimuls
push
lcall
inc
sbb
pop
mov
shrl
test
dec
mov
or
mov
int3
fstl
xchg
or
ja
push
pusha
jbe
mov
xor
cltd
into
jp
out
out
jmp
push
sbb
pop
je
mov
negb
sahf
dec
xchg
jmp
out
stos
pop
ret
fwait
mov
es
stos
mov
imul
xchg
jmp
push
or
inc
mov
adc
mov
cwtl
vmovmskps
or
adc
sbb
stc
cmp
jbe
pusha
insb
jno
pop
daa
aaa
cmp
mov
or
jmp
and
arpl
hlt
mov
out
aam
lock
ds
push
sub
loopne
stos
in
xchg
ss
xor
dec
adc
in
sbb
dec
arpl
fucom
sbb
out
mov
sbb
and
insb
repnz
mov
sti
jb
xchg
out
jp
ljmp
xchg
push
pushf
add
aaa
adc
adc
inc
dec
sbbl
xor
aaa
idiv
cmp
jne
lods
mov
jbe
push
jnp
sub
lea
aas
or
and
fisubl
jns
orl
mov
mov
pop
ret
scas
pop
outsb
aaa
js
jnp
scas
sub
cmpb
pop
mov
ja
shll
orb
fwait
xor
cli
popa
sbb
dec
xchg
hlt
push
mov
fcmovnbe
stc
arpl
add
cmp
xchg
cmp
test
lds
jmp
adc
cmp
in
movb
rorl
js
scas
pop
gs
mov
insl
lods
xor
and
push
cmp
xor
ja
out
sbb
xor
pop
lret
push
ret
jns
arpl
rorb
adc
mov
fldenv
push
mov
cltd
fidivrl
pop
xor
aam
and
jl
pop
mov
sub
xchg
faddp
sbb
sub
inc
jle
and
and
mov
inc
mov
xor
inc
imul
xorb
ret
or
jecxz
ret
stos
aaa
add
inc
lret
xor
fwait
add
sbb
call
push
ret
lods
mov
in
and
adc
stc
mov
push
movsl
xor
in
out
mov
inc
je
or
cmp
stos
inc
fidivs
arpl
push
xor
mov
mov
stc
xchg
pop
cmp
sbb
int
int
push
lret
nop
pop
sub
mov
push
pop
lods
pop
sub
xor
xchg
bound
push
imul
jl
add
pop
push
enterw
mov
jle
ret
dec
add
jb
jb
xchg
dec
test
adc
out
sub
out
adc
insl
cwtl
daa
jp
sub
and
jae
rcr
adc
mul
xor
test
inc
mul
jbe
jae
and
sahf
lret
pop
jg
inc
stc
scas
push
xchg
data16
push
clc
fstl
mov
mov
pop
inc
lds
test
pusha
test
lahf
inc
inc
dec
std
adc
scas
mov
aaa
xchg
lock
push
outsb
rep
sbbl
mov
dec
xorl
daa
aam
push
leave
gs
jp
xor
stos
shr
push
out
lea
xor
hlt
xchg
push
jne
ds
imul
pop
imul
mov
or
test
je
inc
stos
inc
push
pop
xor
dec
inc
jnp
shlb
test
sbbb
or
je
sti
xor
fwait
inc
jmp
mov
je
or
cmp
lret
sbb
aam
adc
pop
dec
jns
add
mov
mov
out
aam
jnp
adc
cltd
jl
jl
inc
sbb
dec
aam
jnp
sub
lcall
mov
outsb
cltd
out
fstl
rorb
decl
sub
inc
mov
pop
pop
lret
incb
repz
xor
mov
ficoms
lds
sub
xor
imul
inc
insl
inc
xchg
ret
lock
pop
dec
pop
cmp
pushf
adc
jb
cltd
push
stos
xchg
xor
popf
vpshaq
sbb
push
repnz
decl
jnp
aas
ljmp
pop
sub
kxorw
mov
inc
lea
mov
sbb
inc
xor
sub
dec
adc
into
jp
je
std
mov
jecxz
and
daa
push
ds
in
jp
shlb
dec
jne
pop
xchg
int3
hlt
mov
sub
leave
add
mov
xorl
aaa
mov
adc
imul
cmp
xchg
fs
or
pushf
in
sub
orl
loop
adc
xchg
ljmp
cmp
cltd
mov
gs
xchg
loop
test
or
loopne
aaa
adc
inc
mov
push
stc
mov
in
test
scas
sarl
lods
xchg
inc
jmp
and
loopne
out
push
jo
outsl
int3
cli
ds
ss
cmp
adc
and
call
inc
and
aas
inc
ret
data16
inc
lcall
and
clc
into
mov
fdivl
dec
inc
sar
inc
or
xlat
inc
mov
fbld
mov
push
int3
cmp
xor
in
xchg
imul
lcall
dec
jg
jo
mov
and
xor
cmpsl
sahf
fidivrl
stc
lcall
or
cmp
ss
and
pop
out
fwait
and
test
aaa
daa
in
push
mov
xchg
pushf
mov
leave
std
mov
sbb
popf
aas
lods
lcall
cmp
add
fptan
mov
rclb
xchg
pop
mov
ds
dec
or
ret
bound
xor
test
jmp
cltd
jmp
nop
std
mov
fs
inc
adc
nop
hlt
dec
xor
pop
andb
sbbb
test
jo
andb
pop
or
jo
and
gs
je
mov
cmp
arpl
cmp
adc
enter
mov
mov
pop
xlat
popf
cmp
imul
cli
mov
pop
dec
lock
sub
dec
and
mov
imul
mov
sbb
sbb
jmp
js
pop
inc
popf
xchg
cwtl
inc
mov
xor
and
xor
mov
popl
pop
sbb
and
faddl
and
push
jge
inc
jge
cmp
test
add
mov
sti
loope
jl
and
mov
mov
xor
mov
sar
dec
aaa
ljmp
lods
dec
pushf
xlat
and
cmp
test
and
cli
aas
and
push
repnz
lds
jnp
repz
outsl
dec
dec
outsb
adc
jp
enter
mov
fildl
jnp
pop
cmpsb
fcompl
lock
movsl
sar
push
pop
pushf
sbb
pusha
arpl
into
aas
fcom
iret
push
mov
cmp
mov
hlt
aas
adc
and
std
push
adc
jo
ret
and
out
xchg
mov
outsl
in
mov
cmpsl
mov
in
mov
testl
adc
jne
mov
pop
jmp
test
test
out
mov
shrb
lret
xchg
mov
ljmp
push
mov
add
add
clc
mov
add
fwait
test
pop
js
pop
jp
repz
fs
xchg
pop
dec
out
cwtl
ret
mov
shrb
xchg
insl
sbb
mov
xchg
jne
fisttps
or
sub
pop
cmp
mov
loopne
repz
and
loop
enter
jg
pop
push
je
out
pop
jae
xrelease
xchg
mov
scas
cli
xchg
lret
cmp
dec
hlt
push
xchg
jbe
ja
mov
inc
insb
repnz
dec
inc
mov
iret
push
push
cltd
xor
loopne
fwait
and
mov
mov
repnz
cmp
arpl
mov
lret
stos
dec
out
mov
test
jle
inc
movaps
sub
inc
ds
imul
imul
dec
cmp
jmp
push
xchg
out
and
in
mov
xlat
cmp
inc
mov
cwtl
push
push
cli
cmp
aas
adc
cli
outsb
adc
fcomp
sbb
mov
adc
xchg
or
sub
and
jo
add
fwait
inc
cmp
sbb
ret
dec
xchg
push
fiadds
fwait
ss
sbb
test
jle
and
inc
and
push
cmp
stc
decl
out
hlt
insl
sbb
ret
mov
cmp
or
aas
inc
inc
mov
aad
inc
cmp
pushl
cwtl
addr16
fs
and
outsl
jge
movsb
cmp
inc
dec
inc
inc
xlat
std
jecxz
inc
pshufw
faddl
mov
pushf
mov
testb
shrl
or
icebp
pop
test
add
mov
fsubs
dec
stos
cli
xor
mov
sbb
xchg
and
sub
xchg
push
and
dec
sub
mov
imul
and
xorb
inc
inc
jg
inc
idivl
jne
xorl
mov
incl
inc
out
lock
dec
inc
cmp
ds
fadds
push
cmp
inc
push
dec
cmp
mov
je
push
addr16
inc
push
test
push
out
and
inc
lea
arpl
in
out
ss
xchg
inc
mov
lock
mov
inc
les
pop
fldl
xlat
imul
sar
push
cmp
or
jbe
push
lock
push
dec
jbe
mov
inc
testl
push
ds
xchg
cli
imul
lcall
lock
out
mov
and
ret
stc
xchg
cmp
cli
into
lahf
sub
imul
xlat
and
mov
pop
scas
jne
xchg
into
xchg
inc
and
das
sbb
test
adc
insl
sar
xchg
mov
xchg
mov
loope
out
mov
imul
push
fdivr
push
test
inc
jp
lcall
adc
ficoms
outsl
push
mov
mov
jmp
stos
call
mov
arpl
in
push
mov
insl
xchg
je
or
out
es
clc
inc
mov
xor
inc
movsb
xchg
mov
stos
mov
adcb
jae
xor
test
in
jae
and
dec
mov
or
pop
das
aaa
sahf
shlb
push
ficoms
push
mov
lret
stc
arpl
and
adc
test
nop
je
xor
xchg
mov
outsb
pop
jg
fnsave
cwtl
pop
lea
sub
xor
fmul
daa
stos
pop
mov
xchg
mov
call
stos
loop
pop
lcall
pushf
xlat
test
mov
dec
or
inc
or
adc
insl
jmp
or
shrl
into
loopne
push
pop
es
ss
pop
mov
imul
es
xchg
jnp
int3
cmpsb
daa
inc
shll
out
mov
inc
andl
sbb
stos
inc
es
in
cvtpi2ps
dec
xchg
or
pop
pop
cmp
je
dec
in
cmpsb
inc
lret
addb
test
adc
in
push
lahf
inc
dec
xchg
in
sbb
xor
dec
out
adc
les
inc
cmpsl
je
dec
and
adc
add
inc
arpl
out
xor
daa
orb
sbb
jae
adc
imul
rcrb
ret
std
andb
push
xchg
and
jo
test
addb
hlt
mov
or
outsl
cmp
dec
push
jb
mov
inc
jae
push
loope
xor
sbb
nop
lods
pop
push
test
add
sbb
repz
sub
repz
or
scas
addr16
ss
pop
xchg
cmp
lahf
cmp
xchg
fistpll
lods
jb
aas
sbb
scas
cli
push
fidivrs
hlt
xchg
shrl
and
and
sbb
arpl
arpl
and
inc
repnz
fs
into
in
inc
inc
xchg
push
push
cltd
push
push
mov
and
dec
adcl
pop
leave
sbb
or
movsb
int
dec
imull
jo
push
push
es
mov
arpl
add
call
inc
out
clc
cmp
lahf
in
test
aaa
daa
inc
fisubrs
push
stos
popa
mov
jns
cmc
mov
xchg
mov
ss
dec
cmp
sub
je
gs
call
lret
out
fdivs
mov
ja
faddp
push
inc
call
push
jecxz
push
stos
ja
fisubs
cmp
ja
adc
adc
jl
jns
orl
inc
sub
pop
sub
mov
repz
adc
out
adc
jl
inc
xchg
mov
adc
xor
outsl
pop
cmp
and
sub
xchg
stos
ret
add
aad
test
fsts
push
fcoml
movsl
test
pop
fnstenv
hlt
inc
cmpsl
and
adc
and
ja
imul
push
test
scas
das
loopne
jp
adc
or
inc
sbbb
xchg
lahf
mov
lods
gs
jecxz
aam
jne
js
movb
stos
decl
aaa
cmp
bound
cmp
js
jb
push
mov
dec
add
and
clc
call
cmp
sub
inc
cwtl
ret
fcoml
pop
je
and
rcll
push
test
xchg
sbb
sub
mov
enter
cs
test
lea
popf
add
sbb
push
inc
jnp
test
daa
xor
into
mov
cmc
pop
push
out
mov
jl
fisubrl
adc
dec
push
push
fs
jecxz
mov
addl
test
cmpsb
pop
cmp
in
cwtl
sub
pop
enter
sub
cmp
fcmovnb
mov
inc
and
test
adcb
into
addl
shlb
xchg
pop
adc
sub
sub
jno
call
daa
movsl
dec
inc
call
jo
dec
push
pushf
call
fisubs
pop
cmp
add
push
fmul
xchg
sbb
jns
fidivrs
outsb
das
aam
pushf
lret
sbb
in
sahf
push
mov
dec
test
mov
fldenv
fcompl
xchg
jnp
int
sbbb
sub
jae
push
push
aas
jle
pop
xchg
scas
jl
pop
loope
lahf
cmp
add
sub
cmpsb
cmp
insb
add
shrb
into
aas
or
out
or
xchg
push
mov
sub
ds
imul
pop
shlb
mov
and
sbb
xchg
out
xchg
enter
dec
push
mov
cld
into
xor
add
mov
pop
lret
mov
adc
ss
jmp
call
sub
aaa
pop
outsl
lahf
mov
and
ja
lcall
cmp
sbb
pop
movsl
sbb
movsl
cmp
sub
adc
in
dec
call
xlat
cltd
cmp
sbb
mov
imul
fidivrs
push
lods
aas
imul
mov
out
mov
gs
push
xor
add
add
xchg
out
arpl
and
jo
push
cmp
mov
movl
pop
rorb
enter
mov
push
cmp
pop
js
mov
cld
mov
ja
imul
aam
inc
shl
ret
sbb
rorb
mov
in
cmp
pop
ljmp
pop
aas
inc
aam
push
cmovs
por
adc
clc
inc
jp
arpl
mov
pop
inc
push
jmp
jp
cmp
inc
mov
das
and
xor
pop
jp
call
lods
mov
push
inc
jp
ljmp
sarb
jp
inc
mov
hlt
aaa
cmp
stos
mov
test
daa
test
jbe
pop
inc
movsl
clc
out
sti
adc
fmull
and
mov
movsb
xor
in
out
fcoms
daa
sbb
push
mov
push
sbb
inc
push
std
aad
aad
mov
in
das
or
inc
jae
and
fs
das
or
pop
cmp
cli
sub
dec
out
or
sub
xor
or
out
aas
fs
xchg
stos
jg
sub
or
pusha
aaa
mov
cmp
scas
pushf
and
adc
mov
mov
xor
out
jae
cwtl
inc
pop
or
pop
js
mov
jge
sbb
jne
lods
jg
jne
mov
imul
fimuls
mov
jmp
jns
sub
in
mov
popf
adc
rcrl
pop
cmp
enter
inc
sbb
xchg
in
icebp
inc
pop
js
pop
fs
scas
leave
xor
pop
sahf
rol
daa
leave
adc
les
std
inc
repnz
shlb
mov
jb
xchg
cmp
mov
adc
xchg
jmp
je
lods
pop
aas
pusha
push
xor
ja
xor
enter
stos
jg
mov
adc
jo
ret
fs
aaa
inc
mov
nop/reserved
mov
fucomi
mov
insl
jo
dec
and
mov
xor
adc
daa
pop
into
mov
cmpsb
popa
test
fsubrs
loop
cmp
dec
arpl
inc
insl
es
out
jecxz
pop
sbb
dec
cmp
adc
pop
jg,pt
and
ffreep
stc
cs
cmp
push
jnp,pt
inc
das
int
push
stos
sub
and
add
adc
mov
inc
push
hlt
push
repz
push
cs
xor
add
lahf
sub
sbb
xor
xor
pushf
aaa
stos
pusha
ds
insl
in
add
xchg
mov
aaa
data16
sub
rolb
sbb
push
aas
mov
fisubrs
xor
mov
pop
loopne
sbb
imul
jbe
nop
mov
aas
das
cmp
rcl
repnz
cmp
fistpl
sbb
leave
pusha
je
and
cmp
inc
push
push
das
outsl
cmp
icebp
pushf
inc
pop
pop
mov
cli
cmp
add
in
xor
nop
daa
mov
xor
dec
shl
xchg
sbb
or
js
or
inc
mov
xchg
push
fldt
subb
cli
mov
scas
mov
cmp
outsl
dec
aaa
sbb
and
ss
imul
vcmptruepd
insl
fsub
outsb
les
pushf
add
leave
call
jecxz
nop
aaa
or
mov
inc
push
jg
mov
add
cmpl
mov
sbb
repnz
test
dec
inc
push
idivl
hlt
pop
lahf
inc
lods
out
inc
out
aam
xchg
or
test
push
mov
cmp
aam
sub
xchg
dec
imul
popf
push
ds
xchg
pop
xor
or
lds
cmpsb
dec
dec
cli
fsts
cmpsb
repz
cmp
jns
ss
jbe
xchg
jae
sub
ljmp
daa
dec
insb
xchg
sub
cli
mov
cmp
fidivs
cmp
jae
data16
sub
pop
jmp
jp
xchg
mov
es
inc
rcr
mov
xchg
into
popa
cmpsl
sbb
outsb
mov
into
daa
pop
and
dec
aad
fsubrl
inc
xorl
stc
rcrb
cld
xchg
fimull
incb
sbb
les
fldenv
incl
ret
push
xchg
loop
test
dec
bound
mov
jae
popf
test
filds
sbb
mov
sbb
data16
jb
outsl
push
shlb
add
inc
scas
loop
lcall
imul
inc
rep
jnp
jnp
test
xor
hlt
mov
jno
ss
cwtl
inc
test
cmp
sub
jae
sbb
ljmp
pop
lods
mov
mov
jb
pop
call
sti
sti
fcos
pop
pushf
adc
and
xchg
and
dec
push
xchg
enter
cltd
loope
and
adc
jae
pusha
and
adc
ret
push
add
out
jbe
lods
mov
and
jne
xor
adc
les
addr16
cli
loop
testb
jb
cmp
sbb
sbb
and
sbb
imul
adc
inc
sbb
xchg
push
mov
popa
jne
xchg
stos
add
pop
mov
fldcw
out
inc
and
sbb
push
enter
je
push
movsb
or
sbb
imul
xchg
aas
sub
inc
mov
inc
imul
xor
add
popa
mov
xchg
outsl
pop
sub
movsl
ds
sub
jg
dec
in
mov
adc
mov
and
adc
sbb
addb
fistpll
neg
xchg
loope
imul
inc
rcrb
add
pop
push
cmp
dec
lock
mov
mov
hlt
add
mov
cmp
inc
jmp
mov
jb
pop
pusha
mov
xchg
lea
cmp
push
and
js
push
and
add
xchg
push
inc
sbbl
sbb
test
popf
xchg
shll
cmp
mov
xchg
scas
xor
iret
mov
sbb
ljmp
insb
into
sbb
push
dec
dec
and
cmp
and
inc
inc
mov
mov
dec
xchg
cwtl
and
or
pop
xor
push
lret
dec
nop
aaa
jl
mov
lcall
pop
xor
jmp
sbb
jg
pop
xlat
ficoml
pop
fnstenv
mov
rolb
loop
fwait
and
cltd
movsl
jnp
cmovp
arpl
pop
addb
mov
mov
aam
sub
mov
andb
in
pop
into
lcall
xor
adc
cmp
shl
stos
shll
movsl
test
mov
xor
dec
cmp
mov
mov
push
setg
cmp
add
xchg
cmpsl
clc
dec
aaa
xchg
sub
out
jge
pop
jp
pop
add
push
dec
imul
je
daa
mov
ja
push
flds
sahf
negb
cmpsl
ret
mov
stos
es
mov
dec
jb
scas
mov
jae
xchg
adc
mov
mov
and
incl
or
test
and
mov
xlat
cmp
sbb
loop
gs
stos
pop
pop
mov
repz
and
jo
out
cmp
nop
mov
mov
xor
imul
frstor
sarb
shl
or
push
dec
lea
stos
adc
cwtl
jo
enter
mov
push
mov
lock
ss
push
loope
lds
adc
xor
sbb
aad
xor
or
sbb
jp
aaa
mov
sbb
pop
cmp
cmp
jl
daa
lahf
and
pop
push
rorb
push
out
cmp
imul
jg
adc
dec
nop
and
stc
adc
pop
bound
mov
aaa
pop
pop
pop
mov
aam
push
jp
iret
in
es
mov
cmp
fsub
stc
add
push
iret
lret
fiaddl
popf
xchg
and
mov
dec
xor
inc
mov
inc
lds
sbb
sub
sub
cmp
rorb
xor
nop
ret
loopne
out
test
leave
sbb
xchg
pop
mov
ret
pop
popf
jp
int
aad
xchg
nop
jo
push
faddp
xchg
push
shll
lahf
ljmp
mov
mov
loopne
jne
xchg
push
cmpsl
out
push
sub
mov
enter
movsl
imulb
mov
xor
jbe
jne
out
cwtl
inc
push
call
movsb
mov
cmp
mov
pop
ret
mov
mov
fwait
mov
xor
call
pop
rclb
xchg
push
jmp
inc
xchg
push
fwait
ds
mov
cmp
scas
push
enter
cltd
cmpsb
jb
add
inc
nop
adc
sub
mov
ljmp
cmp
int
cltd
jnp
push
sub
ret
and
sub
pop
push
mov
cwtl
mov
jb
mov
testb
call
pushf
es
cli
dec
in
jne
neg
dec
psubsb
jbe
cmp
jne
les
adc
sbb
decl
push
shl
mov
cli
adc
jns
es
cli
pop
lods
imul
xchg
dec
stc
das
fcomps
iret
loop
xor
xor
cmpl
incb
popa
into
sarl
nop
inc
out
xor
cmp
push
mov
mov
insb
shrb
jg
fs
out
test
dec
mov
jecxz
bound
stc
push
int
inc
aad
ljmp
mov
cmp
and
xor
test
mov
cmpsb
pop
and
xor
mov
mov
ret
arpl
adc
dec
lret
arpl
out
lret
xor
popf
enter
inc
add
mov
cmpsb
ficoms
sahf
testb
sbb
test
xor
inc
and
pop
push
jne
cmp
fwait
cli
lcall
jnp
fimuls
arpl
cmp
xor
scas
pop
mov
test
pop
aaa
out
fimuls
and
insl
mov
cs
dec
mov
jmp
pop
mov
idiv
mov
push
push
cli
ficompl
mov
cli
mov
es
lret
and
xchg
and
push
mov
outsl
jg
adc
mov
mov
push
push
imul
sbb
mov
mov
inc
iret
push
lods
loop
and
jbe
insl
pop
jnp
cld
jb
push
mov
push
dec
add
cmp
pop
cli
push
js
xchg
imulb
jns
inc
sbb
and
dec
jecxz
je
or
mov
or
arpl
cltd
hlt
fsts
jg
sti
push
pop
leave
sbb
enter
mov
ret
imul
ret
jmp
fstps
jnp
loopne
popf
repz
or
faddp
sub
mov
cmp
stc
sbb
fldl
jno
adc
inc
popa
jg
jae
fimull
ljmp
sbb
out
rcrl
enter
imul
inc
stos
imul
pop
jmp
imul
je
cmp
fs
push
fmulp
sub
xchg
sub
out
pop
mov
mov
mov
inc
int
in
into
lcall
dec
cmp
push
xor
xlat
fimull
jecxz
sub
ficoms
pop
mov
out
push
ss
dec
fldcw
inc
clflush
movb
dec
dec
or
stos
sub
pop
jmp
sbb
loope
sub
sbb
fimuls
mov
xor
sub
imul
out
nop
lahf
mov
fidivrs
add
je
imul
adc
and
jns
pop
pop
xchg
push
stos
into
jge
movsb
xchg
sub
fiaddl
aam
das
mov
pop
outsb
inc
jne
fildll
xrelease
and
ret
outsb
jns
insl
scas
sub
lds
mov
stos
fidivrs
or
jmp
addr16
mov
lds
arpl
push
pop
dec
push
std
jo
pop
or
xchg
mov
dec
push
sbb
mov
data16
iret
cmc
xlat
aam
pop
popa
inc
push
jne
mov
movsl
pop
mov
mov
sbb
imul
cmp
mov
popa
sub
cltd
fstpt
and
fs
ja
rorb
mov
jg
sarb
mov
xchg
pop
mov
jge
mov
and
ljmp
mov
dec
addr16
into
shll
dec
cltd
cmpb
inc
push
popa
mov
mov
stos
inc
popa
mov
inc
popa
sarl
popa
stos
mov
popa
fwait
mov
je
mov
xchg
xchg
dec
pop
cmp
mov
mov
mov
push
mov
int
xor
dec
lea
xchg
jb
add
fisttpl
pop
add
cli
mov
jp
scas
minps
push
adc
daa
lret
cmpsb
pop
sbb
dec
ja
cmpsb
xor
je
in
nop
inc
out
jae
ret
jae
fidivrs
in
ss
jae
lcall
pop
mov
cmp
stos
and
scas
or
fnstcw
jg
mov
mov
lock
xchg
push
das
sbb
jb
xchg
dec
pop
es
fnstenv
adc
jo
movl
mov
push
and
cmp
testl
mov
cmp
in
dec
add
scas
sub
xchg
into
xchg
push
arpl
lods
scas
push
out
outsb
je
stc
jecxz
imul
xor
outsl
inc
aam
ljmp
jo
cmpsl
mov
xor
imul
sub
out
push
ret
arpl
pop
mov
ficoms
imul
pop
cmpsb
nop
andb
out
jmp
jnp
cs
fwait
jle
jp
pop
shll
inc
pop
sub
rcrb
ret
cli
push
jo
sahf
add
repnz
cmp
mov
fsubl
imul
not
add
lret
sbb
inc
inc
pop
mov
imul
mov
or
stos
sbb
out
rorl
lret
mov
stos
push
cltd
call
out
imul
or
arpl
les
scas
cmp
out
jnp
fcmovnu
cmp
aas
lret
ss
lea
mov
into
or
fcmovnu
sbb
in
or
xchg
gs
arpl
mov
pop
cmp
jmp
sbb
out
in
in
push
xor
push
mov
cmp
ficoms
xor
rclb
dec
jae
out
pop
in
aad
arpl
sbb
mov
clc
fidivl
les
xor
fidivs
decb
test
movsl
test
dec
fidivl
fidivs
sbb
inc
xchg
push
push
imul
cmp
lds
inc
push
push
ds
imul
xlat
loope
ficomps
stos
sub
shlb
xor
test
push
mov
jmp
lock
out
mov
imul
sbb
inc
mov
jns
ret
or
jl
mov
mov
gs
mov
push
add
sub
mov
sti
stos
xor
xchg
adc
shl
bound
sbb
js
jo
pop
jne
rcrl
xchg
scas
mov
jp
jmp
sbbb
lods
push
repnz
cltd
cs
loope
xchg
jg
insb
jne
aaa
ds
jo
sub
imul
mov
push
push
inc
xchg
out
sti
dec
sub
push
jg
jb
xchg
cmp
sub
push
push
pushf
jbe
mov
scas
loope
inc
into
jl
mov
nop
cmp
dec
pop
cmp
mov
jo
jne
pop
jb
mov
dec
ja
loop
push
jle
mov
loop
roll
dec
adc
pop
cmp
inc
mov
aad
js
lds
aaa
test
ret
mov
xorl
cli
dec
aaa
iret
data16
scas
into
fists
dec
aaa
test
movsb
daa
mov
and
mov
rclb
adc
stos
jbe
sbb
popa
cmp
mov
xchg
adc
out
lds
daa
pop
ljmp
imul
sti
adc
fisubl
out
push
cmp
sbb
push
cmp
imul
pop
xchg
inc
jp
jo
xor
and
scas
push
cmpsb
int3
aas
imul
mov
xchg
ja
arpl
mov
arpl
pusha
pop
icebp
test
movsb
xor
data16
push
cwtl
push
push
dec
or
push
push
aaa
pop
mov
jg
push
inc
xchg
insb
lods
addb
dec
jmp
rcrl
dec
dec
daa
loope
mov
push
insb
imull
add
mov
clc
jle
cmpb
and
and
sub
in
xchg
jo
call
inc
lock
mov
or
rcr
fisttpll
inc
sbb
pop
imul
mov
lea
sbb
repnz
push
mov
sbb
jmp
dec
pop
dec
mov
pop
cmp
ficompl
popf
ret
and
cmp
and
cmp
das
add
pop
jnp
mov
inc
imul
pop
mov
pushf
lcall
lret
ds
xor
inc
and
hlt
xor
push
pop
mulb
add
outsl
lret
mov
pop
call
fsubrs
enter
xor
mov
orl
sti
jmp
mov
hlt
cmp
jnp
out
popf
out
adc
add
ja
sub
sbb
cmp
mov
jmp
popa
mov
cmp
and
add
sub
mov
cmpl
lret
scas
scas
fildll
arpl
mov
ds
mov
cld
xchg
daa
inc
sbb
and
ss
push
lds
xchg
mov
rorb
inc
pop
dec
mov
orb
sbb
fcmovbe
scas
ljmp
add
lcall
jge
test
stc
inc
jae
xor
lret
push
negl
insl
lds
repnz
xchg
sti
out
jo
imul
sbb
mov
daa
push
daa
sbb
mov
adc
jbe
les
push
push
mov
loope
inc
push
in
flds
mov
repz
jne
sbb
sti
fidivl
pop
fstpt
jle
fsubl
jae
je
ds
sahf
jne
in
cmp
gs
and
add
pop
inc
movsl
shlb
add
xlat
sbb
or
sbb
mov
add
adc
stc
cmp
fcmovb
into
cmpsb
sbb
jecxz
negb
filds
es
sahf
mov
xchg
sbb
ffree
mov
or
imul
mov
adc
sub
test
pop
andb
xchg
xchg
xor
enter
out
jae
xor
inc
ljmp
call
fmull
hlt
imul
lahf
hlt
inc
insb
loop
lcall
pop
scas
mov
sub
mov
jb
gs
cmp
or
mov
fists
test
xchg
mov
ljmp
ret
xor
xor
push
jns
shr
inc
sti
mov
jo
leave
inc
iret
push
dec
dec
fwait
sub
cmpsl
fldenv
inc
insl
add
and
fiadds
dec
pop
push
pop
lret
enter
lea
mov
sarb
or
out
arpl
sbb
loope
pusha
jo
aas
scas
aam
mov
imull
lret
push
rorl
pushf
push
pop
sbb
lret
and
lods
add
scas
inc
loop
repnz
addr16
outsl
sub
into
sbb
call
ljmp
jbe
fldln2
push
sbb
clc
xlat
imul
aas
mov
cltd
and
int
dec
or
push
ss
rcr
fnstcw
add
xchg
and
sub
fistpl
jg
pop
mov
std
and
out
cmp
push
ljmp
cmp
push
jmp
adc
das
stos
mov
inc
ror
scas
sbb
adc
sbb
std
xor
imul
mov
sti
pop
mov
scas
ss
dec
popa
push
mov
dec
std
out
push
sbb
mov
lock
icebp
dec
add
mov
out
lret
in
out
aas
int3
xorb
ds
inc
movsb
mov
dec
push
arpl
and
insl
mov
jge
dec
adc
arpl
cmp
inc
push
mov
mov
push
lahf
xchg
fmulp
mov
cmp
mov
mov
adc
sbb
lret
push
mov
into
jns
mov
pushf
cmp
dec
idiv
mov
sbb
repnz
jo
dec
mov
mov
dec
je
and
test
jg
inc
jnp
arpl
mov
or
pop
jnp
jl
dec
and
or
mov
cmp
lret
inc
jl
sub
sbb
ffree
js
dec
into
call
pop
gs
pushf
mulb
movsb
jg
jae
push
sbb
popa
mov
popa
add
adc
sbbl
sub
sub
jmp
mov
add
mov
stos
cmc
popa
or
and
pop
mov
fldenv
mov
stos
cmpsb
repnz
ret
imul
cwtl
pushfw
cmp
mov
pop
xor
sbb
inc
loopne
shrl
and
or
mov
xchg
push
leave
xlat
and
mov
pop
sbb
push
cmp
loopne
jbe
ss
mov
xchg
inc
dec
cmpl
cld
dec
push
dec
push
fwait
inc
popa
push
repz
mov
rcrl
jecxz
sbb
and
cli
iret
aaa
and
pop
adc
sbb
and
push
out
jo
dec
push
pop
adc
loope
and
data16
addr16
repz
or
sub
lcall
adcb
and
and
or
repz
addr16
test
lods
out
shl
cmp
push
fisttpl
mov
inc
cmp
inc
adc
jl
sti
sub
lods
dec
int3
ret
addr16
cmp
dec
mov
mov
push
fisttpl
dec
inc
mov
int3
lcall
or
mov
adc
cmp
sbb
inc
test
icebp
or
aas
mov
loop
repz
cmc
stos
cmp
inc
testl
rol
mov
or
daa
repz
add
mov
and
fisubrs
mov
and
outsb
or
int3
or
mov
data16
inc
aaa
sbb
mov
popa
inc
ljmp
stos
push
ljmp
movsb
orl
imul
ficoml
sbb
and
or
push
ret
adc
add
or
sbb
insb
mov
outsl
enter
in
test
sbb
stos
and
enter
call
cmp
cmp
dec
sbb
sbb
xchg
aad
xchg
cmpsl
dec
xchg
jmp
and
mov
sbb
xchg
ja
imulb
push
js
repz
enter
or
out
pop
es
jge
sbb
leave
jg
pop
inc
andl
inc
xchg
cmp
jg
jae
cld
lret
loop
cmp
les
addr16
push
js
mov
ret
xor
ljmp
lret
push
jb
cmp
data16
push
scas
sub
cmp
xchg
dec
push
sbb
add
or
xor
and
push
and
outsb
xor
jbe
popl
les
cmp
or
sub
xchg
ret
or
jmp
es
push
arpl
lea
adc
cmp
scas
add
and
clc
sub
inc
mov
scas
insl
jb
sub
lds
and
popf
adc
mov
sub
jg
pop
daa
ret
push
loop
js
das
sub
addr16
jbe
jg
cltd
pop
inc
js
fs
lahf
inc
out
jecxz
mov
dec
ljmp
mov
pushf
ds
mov
insl
xor
push
das
adc
xchg
cmp
into
lret
mov
stc
inc
pop
inc
mov
fs
stos
es
in
dec
addr16
fisubrl
loop
popa
lods
mov
fldenv
pop
xchg
test
adc
enter
mov
mov
xchg
mov
out
jbe
call
cmp
inc
cmp
jl
pop
sub
jmp
pop
adc
fimull
cmp
push
testl
fisubrl
sahf
mov
add
in
xchg
sub
and
jno,pt
mov
sbb
add
sahf
addr16
dec
scas
mov
imul
dec
test
jbe
subl
cmp
sbb
out
push
mov
daa
xorb
fs
mov
cli
xchg
loope
inc
aaa
pop
addr16
fstl
outsb
inc
lock
cmp
fisubrl
lret
mov
pop
mov
out
outsl
jb
mov
jp
adc
nop
test
mov
inc
inc
sbb
bound
std
pushf
and
movsl
sub
int3
stos
orl
jbe
pop
pop
insb
jp
test
mov
out
popa
out
push
sub
in
jo
fldenv
xchg
inc
out
jnp
pop
and
pop
cmp
in
cmp
leave
cs
sbb
test
xor
add
mov
jmp
or
out
sub
ljmp
pop
inc
sbb
pop
imul
sbb
rcrb
nop
ds
jecxz
or
push
hlt
shll
pushf
into
pop
sbb
fdivs
and
arpl
ret
loope
fcmovbe
neg
push
pop
clc
dec
out
stos
into
xchg
loop
jg
insl
scas
ss
inc
cltd
dec
xchg
aaa
or
dec
cmp
or
lahf
cmp
aam
inc
stos
outsb
fs
push
test
stos
xor
inc
jg
sahf
push
std
dec
cmp
mov
out
outsl
pop
lods
imul
sbb
cltd
inc
cmpsb
loope
insl
sbb
sti
xor
mov
mov
cmp
mov
add
jl
mov
arpl
cmp
pop
jp
cmp
leave
adc
fisubs
jns
inc
xor
inc
mov
arpl
inc
jmp
fisttpll
or
pop
je
adc
sub
leave
or
inc
test
imul
imul
add
xchg
les
nop
dec
loopne
es
inc
clc
dec
dec
mov
pop
cltd
push
xor
scas
scas
sub
lods
adc
push
repz
or
mov
mov
jae
arpl
adc
mov
sub
or
push
push
sbb
inc
push
incl
repnz
inc
jb
fldt
fistl
fdiv
jno
xor
cmp
pop
sub
dec
and
inc
imul
mov
or
mov
lock
cmp
ficompl
dec
out
sbb
mov
sbb
sbb
leave
add
std
cltd
sbb
call
rcrb
jae
cmpsl
ja
out
or
cltd
pop
imul
fucom
imul
ljmp
jno
in
repz
enter
fiaddl
sub
lods
cmp
loop
in
dec
popa
mov
nop
pop
xchg
jg
push
xchg
dec
mov
mov
xchg
cmp
dec
and
xor
nop
mov
mov
fnstcw
ljmp
xchg
cwtl
icebp
test
test
pop
mov
in
jae
imul
add
and
imul
out
mov
push
fcos
das
lds
push
jns
and
das
sub
sbb
xchg
in
inc
or
push
dec
sub
idivl
loop
mov
fisubl
sar
jno
jns
out
jb
mov
jmp
inc
or
mov
jo
loop
dec
imul
imul
dec
dec
stc
sub
arpl
fbstp
pop
insb
adc
leave
fdivp
xchg
inc
push
xchg
sahf
into
subl
and
pop
dec
mov
popa
mov
pop
xchg
mov
loop
push
out
mov
inc
loopne
xchg
fcomi
fstl
jbe
movl
jge
orl
int
ficoms
xchg
pop
adc
xchg
sahf
mov
pop
xchg
jbe
cmp
pop
jecxz
lock
jl
jbe
sbb
mov
mov
fsub
inc
insb
addl
xchg
fimuls
ja
lds
cmp
fwait
mov
test
scas
sbb
jle
jno
cmpxchg
mov
mov
in
push
push
je
test
jge
cmp
lret
cmp
mov
mov
mov
les
xor
imul
xchg
lds
bound
stos
mov
sub
out
pusha
jmp
xor
cmp
lret
sahf
data16
mov
sbb
push
in
outsw
pop
lea
and
mov
ljmp
mov
loope
imul
lea
mov
stos
pusha
fsub
test
popf
int
inc
jnp
lds
insl
xchg
ja
mov
cmp
mov
hlt
notb
mov
sahf
std
xchg
aam
stos
xchg
aad
adc
inc
stos
xchg
sti
mov
push
add
cs
in
imul
dec
scas
sti
test
jnp
jp
mov
xlat
test
popf
adc
inc
push
adc
ret
mov
cltd
mov
test
mov
aaa
jo
mov
shr
jo
sbb
mov
jbe
jb
into
testl
mov
or
xchg
inc
cmp
arpl
mov
cmp
loop
ja
cmp
out
mov
pop
pop
inc
fmulp
sbb
es
pushf
add
adc
scas
lret
jo
mov
test
outsl
cmp
aaa
mov
xchg
addr16
sbb
jmp
test
sub
mov
out
mov
movsl
ss
ds
out
jne
cmp
sub
mov
pop
mov
pop
xor
lods
sbb
cmp
cli
shrb
test
xor
adc
fidivs
cmp
insb
mov
arpl
cmp
pop
loop
imul
arpl
sub
cli
mov
push
mov
add
inc
stos
hlt
push
insl
pop
cmp
mov
insl
jle
jae
xchg
gs
cmp
loopne
mov
js
cmp
imul
jp
cmp
lret
push
aaa
cmp
inc
jl
pushf
jb
cmpsl
in
out
imul
jno
shlb
or
or
pop
loop
mov
inc
mov
xchg
push
and
mov
js
push
jne
push
outsb
out
nop
inc
sbb
pop
sbb
cmp
xchg
sub
out
xor
out
sub
xchg
imul
lcall
xor
dec
push
stos
insl
mov
imul
and
ljmp
lea
shlb
test
cs
lods
jl
addl
mov
sub
push
ljmp
jge
or
std
pshufw
into
arpl
pop
and
cltd
mov
fcomp
std
mov
mov
lret
shl
movsl
sbb
sbb
jge
loop
mov
test
bound
dec
pop
sbb
pop
cmp
jp
orl
adc
add
mov
cmp
or
or
popf
out
fwait
jecxz
jns
stos
add
mov
dec
aas
outsl
or
pop
cmp
shlb
sbb
ret
jae
fiadds
dec
enter
outsl
sub
sub
mov
cli
addr16
dec
enter
inc
sub
ficomps
jmp
mov
push
jp
cmp
rcrl
test
sub
fidivrs
or
stos
loope
cltd
jge
sti
mov
js
jp
and
cmp
cwtl
xchg
xor
pop
fwait
cltd
dec
pop
stc
jb
fmull
movsl
fstl
and
cmp
or
fstpt
aad
jbe
lds
shll
mov
cmp
sbb
leave
push
push
fildll
fcomps
mov
xchg
ja
orb
div
nop
pop
jno
push
add
pop
hlt
jmp
imul
rorb
jae
fdivrp
and
and
jns
xlat
iret
faddp
stos
mov
jno
add
jecxz
jns
fidivs
imul
or
jecxz
sub
jns
icebp
fidivrl
call
add
es
mov
xchg
mov
arpl
jno
in
xchg
rorb
cli
xor
imul
sub
fldl2e
mov
mov
mov
mov
dec
je
iret
out
xor
orl
mov
mov
dec
daa
xchg
ret
jg
lret
sbb
adc
sbb
shrb
cmp
mov
fisubrs
cli
imul
fstl
test
popf
inc
shll
jo
xchg
lods
mov
mov
aad
jbe
mov
mov
cs
xor
insb
add
mov
aas
dec
mov
je
jmp
out
fldcw
push
shr
stc
sub
xor
out
push
jge
fstpl
dec
push
ja
dec
cmp
imul
mov
jp
and
mov
in
sbb
repz
leave
mov
lcall
stos
jae
xchg
sbb
jnp
cmpsl
push
pop
jle
fisubrs
ret
xchg
lds
or
stos
jle,pn
addr16
xor
lahf
xchg
dec
cmp
test
xchg
movsb
stos
cwtl
mov
push
or
sbb
adc
int
lds
lds
sahf
and
pushl
arpl
ds
dec
daa
pop
std
pop
xchg
bound
xchg
or
arpl
mov
ss
outsl
fmulp
call
cmpsl
adc
popf
or
mov
out
inc
icebp
pop
adc
mov
xchg
jmp
xor
push
mov
jo
mov
daa
xor
jo
addr16
call
xchg
icebp
sub
scas
pop
ljmp
les
into
pop
and
mov
and
inc
lret
jb
jno
mov
jne
cltd
or
call
rcrb
std
pop
cmp
pop
push
out
cmpsl
pop
scas
les
sub
not
sub
dec
data16
push
mov
shl
mov
mov
out
pop
jg
stos
mov
and
sub
cmp
xchg
popf
mov
mov
pop
neg
loop
out
mov
fucomi
jo
aaa
xchg
subb
daa
jmp
push
cmp
outsl
aas
lret
scas
sub
mov
cmp
mov
lahf
push
pop
shl
mov
fsubrp
popa
xor
or
scas
std
leave
push
loop
cmp
out
push
adc
cwtl
jg
xchg
imul
pop
addr16
adc
mov
sub
shlb
sbb
adc
imul
sahf
jns
pop
and
jae
loop
daa
cli
cmpsb
negl
adc
ds
daa
je
sub
mov
pop
aaa
ret
loop
add
ret
and
push
xchg
lcall
push
jne
sbb
xor
mov
mov
mov
je
in
push
arpl
push
lcall
ret
cmp
dec
lret
rorb
repnz
ds
ljmp
mov
mov
mov
imul
sbb
dec
pop
cmpsb
insb
xchg
lret
into
xchg
mov
sub
dec
jg
loop
sbb
leave
cs
lcall
lods
hlt
add
or
hlt
aaa
popf
xchg
out
outsl
loop
icebp
push
cmpsl
ret
test
sub
dec
mov
jle
sub
cmp
out
call
push
imul
sbb
fdivrs
ja
inc
out
cmp
sbb
scas
push
scas
popa
mov
cli
lds
inc
pop
xchg
and
and
sub
sub
idivl
sti
ds
jbe
or
push
xor
adc
mov
mov
push
daa
sub
inc
mov
mov
sub
ja
repnz
push
cmp
mov
xchg
sti
adc
aaa
fistps
popf
sbb
mov
arpl
pop
sbb
push
stos
pushf
mov
cmp
dec
inc
xchg
pop
hlt
mov
or
call
aaa
arpl
cvtpi2ps
mov
lds
xorb
into
xlat
sub
push
ss
sbb
cmpb
jo,pn
cwtl
insl
mov
dec
shlb
and
sarb
cltd
popa
inc
adc
mov
scas
cmc
pop
and
je
roll
sahf
mov
mov
in
push
je
or
lret
ret
add
repnz
jne
jo
and
jmp
shr
cmpsb
mov
in
or
loopne
imul
push
enter
push
xchg
push
ret
inc
cli
jae
cmp
lds
dec
inc
pop
jb
mov
inc
lods
call
les
inc
mov
daa
sbb
cs
or
sbb
movsb
xor
bound
imul
imul
loope
xor
jmp
pop
dec
mov
repnz
mov
sbb
push
fwait
mov
dec
and
loope
sub
or
push
pusha
std
imul
mov
push
gs
out
mov
in
cmpb
mov
mov
leave
mov
xchg
xchg
jp
bound
adc
push
stos
mov
xchg
out
loop
sbb
mov
and
mov
or
lds
inc
daa
scas
mov
lds
xor
fbld
int3
xchg
nop
lea
std
arpl
sub
cmpsl
imul
xchg
cltd
rcr
dec
push
jae
test
inc
xchg
sbb
inc
mov
jnp
aam
lock
out
push
jb
and
pop
mov
xchg
test
sub
adc
mov
je
fdivrp
clc
not
loop
mov
cmp
jecxz
in
arpl
cmp
sbb
ret
mov
mov
fdivl
jmp
addr16
jecxz
cli
dec
dec
adcl
popf
mov
insl
fildll
insb
xchg
sbb
mov
stos
lods
cmp
sbb
xchg
xchg
inc
xor
fsubrp
jmp
mov
xor
sub
xor
aas
in
stos
ss
cli
mov
dec
pushf
fcompl
fstpt
pop
pop
xor
mov
dec
loope
sub
sub
sub
sbb
sbb
cltd
fimuls
lods
shl
xor
push
dec
inc
mov
dec
dec
or
pop
push
mov
dec
in
and
jmp
mov
sbb
cli
or
pushf
imul
or
loope
ljmp
jmp
cmp
mov
cmp
add
pop
pop
fs
mov
adc
dec
xchg
push
mov
add
mov
xchg
dec
pop
ja
and
enter
stos
sti
loop,pn
push
mov
sti
jo
sbb
mov
mov
test
nop
shll
aam
loopne
xor
shlb
pop
je
add
cmp
sbb
jl
sbb
sub
divb
arpl
xchg
fldenv
jl
movsl
inc
sub
lock
mov
jmp
lcall
gs
jp
jb
sbbb
pop
movsb
cmp
aam
mov
xchg
mov
pop
shrl
test
cltd
ret
outsl
mov
mov
ss
test
dec
nop
jge
imul
bound
arpl
nop
fidivrs
fsubrl
push
dec
inc
test
xor
dec
popl
adc
mov
or
je
pop
inc
adc
inc
pop
or
mov
insb
jne
xchg
aam
and
popf
rcll
cmp
loope
push
lcall
loop
shlb
daa
cmp
mov
pushf
ljmp
ja
inc
cmp
outsl
adc
jo
cmc
dec
arpl
and
pop
sti
rolb
add
aam
scas
push
out
dec
rorl
jnp
movsl
xlat
mov
and
outsl
xor
ror
add
lds
sub
aaa
dec
jp
adc
ljmp
and
pop
lea
cmp
mov
push
rcll
sbb
cwtl
or
mov
icebp
xor
aas
pop
les
mov
xor
enter
in
inc
jno
inc
cmp
in
stc
cli
aaa
xchg
mov
out
dec
pop
add
push
mov
popa
mov
xor
in
cmp
and
jle
mov
cwtl
dec
dec
pop
les
es
or
jae
loope
aam
into
and
lret
mov
aam
xchg
dec
mov
cmp
jmp
sarl
mov
das
mov
scas
push
dec
sahf
mov
cmp
push
testb
add
out
xchg
gs
arpl
sub
or
ss
xchg
xchg
mov
sbb
imul
cld
out
hlt
or
std
mov
push
xor
jo
dec
sub
enter
jnp
mov
dec
push
sbb
jae
sbb
and
xchg
jno
xor
lret
out
adc
jno
cmp
fstl
add
xchg
outsl
and
jne
xchg
push
lock
outsb
fwait
incl
cli
notl
je
xor
ds
xchg
mov
xor
dec
scas
movsl
cmpsl
cmp
adc
dec
cli
or
arpl
and
cmpb
in
arpl
in
xorb
mov
ret
jo
stos
jnp
or
jg
inc
ds
enter
test
pop
daa
out
xor
add
stos
adc
outsb
inc
inc
fldcw
jns
pop
push
repnz
je
scas
scas
fsubr
jae
les
mov
add
mov
push
sbb
out
xor
xchg
sbb
jl
in
divb
cmp
out
sarb
shlb
cmp
fwait
push
pop
pop
arpl
daa
mov
enter
sbb
sub
xchg
je
mov
push
jnp
and
std
add
dec
xchg
xor
mov
test
sbb
out
idiv
outsb
jmp
mov
jne
repnz
and
stos
and
jl
packuswb
outsb
mov
fdecstp
rclb
loop
sub
fistps
out
cmp
sbb
xor
dec
xchg
sub
leave
cmc
push
test
jmp
push
cltd
leave
mov
cmp
inc
pop
jns
std
push
and
scas
sub
out
sbb
call
je,pt
dec
xchg
stos
insl
xor
sti
lock
inc
stc
jmp
jecxz
das
mov
fisubs
inc
lods
mov
test
cmp
pop
rol
es
out
repnz
cmpsb
arpl
mov
inc
inc
pop
imul
sbb
nop
mov
int3
lret
add
fdivr
inc
mov
add
and
lcall
inc
xchg
xor
lds
cmpsl
cmc
cmp
bound
daa
sbb
leave
lods
movb
lahf
cltd
push
aas
ret
pop
call
sbb
inc
mov
push
imul
inc
mov
ja
loop
mov
lcall
data16
addr16
jnp
dec
sahf
aad
loop
jmp
pop
or
ljmp
push
and
cmp
lret
sbb
cltd
addr16
ret
imul
sahf
mov
idivl
mov
jnp
jg
lods
add
mov
sbb
fwait
jns
mov
call
frstor
aas
sbb
std
shrb
and
int3
adc
dec
xchg
inc
inc
ror
arpl
ja
pop
cs
add
inc
inc
arpl
popf
inc
inc
cmp
jecxz
or
inc
data16
jl
cmp
or
xlat
and
jbe
inc
cmp
pop
mov
stos
orl
push
sub
mov
push
mov
xor
push
scas
sub
push
inc
adc
sarb
inc
xor
dec
jg
hlt
mov
ss
cmpsb
inc
pop
cmp
mov
mov
mov
xchg
sbb
cs
test
cltd
push
lock
pop
cltd
mov
dec
cltd
popf
scas
imul
repnz
cmp
mov
stc
rcrb
cmc
loop
xor
mov
mov
popf
sbb
lahf
mov
into
sub
xor
outsb
mov
fwait
sbb
jo
pop
mov
insb
cvttps2pi
dec
jo
mov
dec
push
stc
mov
test
push
push
mov
nop
in
std
dec
mov
loope
adc
mov
lahf
adc
xchg
and
cmpsb
mov
test
out
leave
dec
xchg
ficoms
xchg
pop
aaa
mov
jge
mov
mov
cmp
ror
in
mov
cli
mov
mov
pop
jo
xchg
mov
mov
test
enter
mov
pop
out
mov
fdivp
jmp
fsub
cmp
ficompl
xchg
sbb
dec
cmp
mov
mov
subb
jmp
mov
fimull
mov
mov
movsl
push
xchg
push
leave
outsb
push
xchg
inc
fs
stos
test
pop
mov
sub
imul
loopne
sbb
add
icebp
cmc
xchg
sub
push
mov
xacquire
loopne
scas
xchg
pusha
mov
cmp
cmp
cli
mov
cmpsb
in
cwtl
movsl
sub
jp
xchg
cltd
jmp
mov
out
sub
xchg
xchg
mov
sbb
and
or
pop
cmp
jp
test
jno
pop
fidivrs
jecxz
leave
sub
push
and
mov
add
lds
jae
call
lds
fldz
jmp
push
dec
sbb
lds
cmp
aaa
das
fstp
ljmp
mov
push
call
cmpsl
stos
mov
scas
mov
pop
mov
pop
daa
in
push
mov
jp
jp
out
pop
adc
dec
std
stos
repz
cmpsb
cmc
mov
cwtl
xchg
and
pop
stos
mov
inc
fwait
dec
sbb
stos
dec
std
js
sub
rolb
pop
ja
inc
pop
test
jb
mov
inc
and
ljmp
sbb
sti
aam
and
cmp
dec
aas
or
add
push
and
xor
shll
sbb
sahf
sbb
aas
xlat
cmp
gs
pop
movsb
cmp
std
xor
out
and
test
push
ret
push
out
and
lods
push
jo
xchg
jle
or
push
inc
jp
jp
cmp
push
jg
push
pop
mov
jb
xor
dec
sub
loope
jnp
fcomps
jns
mov
subb
lea
sbb
jo
lea
mov
aaa
ret
ljmp
fs
mov
sub
cmp
pop
fistpl
push
fisubl
push
lcall
mov
in
lock
mov
sbb
or
lcall
cmp
push
mov
iret
cs
push
rorb
cltd
xchg
adc
or
cmp
push
sbb
and
lock
cmp
fsubrl
mov
jno
push
mov
add
cwtl
insl
cmpsb
xchg
jl
lods
popf
jns
push
mov
in
jecxz
nop
ss
or
xor
inc
testb
rcr
daa
stos
push
fisttps
out
jae
out
lahf
xchg
jb
inc
lds
out
sub
daa
cs
push
and
hlt
fldenv
add
adc
adc
outsl
sub
ficompl
call
lea
adc
sub
and
je
cmp
mov
adc
mov
jne
push
popa
jb,pt
pop
lret
mov
loop
xor
cmp
cmp
data16
sbb
iret
add
jg
sbb
inc
fbstp
mov
pop
stc
scas
fiadds
push
pop
and
negb
xor
mov
test
in
mov
andl
inc
mov
pop
pop
hlt
gs
sub
lods
add
stos
push
inc
call
sbb
push
inc
push
push
stc
jno
mov
fcompl
cmp
je
jg
cmp
fcmovnu
pop
imull
adc
imul
daa
pop
xchg
lea
jge
push
xlat
leave
bound
dec
inc
fstl
pop
xchg
outsl
dec
stc
andl
sbbb
test
movsl
dec
jp
jo
mov
dec
mov
xchg
pop
push
xchg
cs
sub
mov
pop
push
or
sbb
sbb
jo
xchg
cmp
test
fsub
imul
mov
ret
imul
jnp
imul
loopne
js
xor
pop
jge
dec
ret
pop
pop
push
sub
cmp
fwait
popf
cli
push
sub
dec
inc
movsl
imul
and
lods
push
inc
mov
and
test
das
xor
fidivs
mov
mov
jl
lahf
adc
xchg
push
dec
xor
shlb
sbb
imul
cmp
inc
sbb
icebp
imul
inc
movsb
mov
ljmp
add
cli
adc
dec
je
popa
fstpt
rolb
push
push
dec
cltd
nop
adcl
xor
jns
arpl
shrb
fisubrl
pop
jp
push
mov
jo
inc
imull
aad
or
aaa
bound
sar
adc
lahf
subl
mov
out
imul
dec
push
push
shl
popa
fistpll
push
cwtl
andl
out
imul
jo
pop
stos
add
addb
inc
arpl
bound
outsl
push
xchg
stos
pop
mov
scas
mov
push
inc
je
jecxz
cwtl
cs
mov
leave
test
ja
mov
test
or
mov
aaa
and
test
incb
rclb
mov
ror
aam
mov
push
shrl
sub
sub
mov
data16
push
pop
jl
push
lds
mov
dec
push
sub
in
jle
and
aaa
or
out
stc
xchg
addr16
je
fcoml
scas
inc
or
bound
push
mov
or
add
sub
add
dec
and
fwait
pop
ss
and
loope
cli
cmp
push
and
push
mov
sbb
jno
cmp
test
mov
outsb
fnstenv
scas
pop
or
mov
mov
mov
arpl
fmul
loopne
adc
xchg
dec
dec
xor
pop
out
ss
adc
cmp
hlt
jns
xor
cwtl
jns
frndint
popa
fisubl
mov
fs
xchg
stos
jne
jns
jnp
inc
mov
lret
cmc
push
mov
mov
cmp
or
inc
jnp
dec
cmp
jns
mov
iret
inc
jns
inc
and
imul
mov
pop
add
insb
popl
mov
dec
imul
fs
xchg
mov
out
inc
mov
inc
std
rcrl
nop
fsubrs
push
xor
test
xor
dec
or
xor
xchg
cmp
iret
test
add
mov
pop
fdivrp
nop
jmp
pushf
jg
setnp
mov
adc
add
out
sub
mov
mov
lcall
imul
loope
mov
aaa
stos
pop
fisubrs
imul
iret
jle
mov
stos
push
mov
mov
ljmp
mov
mov
push
cmp
inc
jae
mov
add
stos
js
mov
push
and
test
cmp
push
clc
xlat
inc
add
xor
add
jmp
jbe
out
and
int
or
mov
lea
movsb
stos
lea
stc
lret
jo
sbb
shll
lret
mov
les
test
sub
cld
and
xor
push
inc
ds
jbe
sub
adcl
adc
daa
out
daa
rcr
aam
repnz
xor
ds
xchg
or
jle
loope
jae
jnp
scas
cli
jmp
decl
ljmp
mov
in
pop
ret
xchg
std
or
mov
loop
mov
jnp
pop
gs
pop
imul
or
outsb
and
sub
cmpl
and
and
or
ss
sub
aam
imul
push
aad
or
lcall
pop
in
shlb
test
sub
mov
or
in
push
jle
or
inc
sub
jo
mov
mov
pop
pop
das
jnp
xchg
push
mov
jmp
imulb
push
and
data16
inc
cmp
pop
cmp
and
fsub
push
inc
adcb
lcall
pop
shll
lcall
push
sbb
std
adc
add
push
pop
mov
pop
mov
xchg
adc
dec
xor
test
out
dec
sub
lcall
sbbl
push
ljmp
je
mul
mov
xchg
jl
xchg
dec
test
xor
or
add
xchg
xorl
incl
loope
pop
jge
stc
data16
daa
xchg
lock
ffree
push
mov
shrl
test
dec
das
roll
aas
jbe
lock
fsubrl
int3
nop
pushf
and
vpcmov
imulb
notb
jle,pt
ret
or
iret
lcall
mov
pop
pop
push
in
pop
pop
imul
jp
das
or
adc
fbstp
xchg
jae
js
test
mov
or
mov
mov
stc
in
sub
lock
inc
pop
cmc
jp,pn
xor
cmpb
sarl
mov
lds
dec
or
and
lds
in
mov
push
jb
sub
push
jg
sub
or
adc
in
sarl
push
daa
xchg
add
das
or
ljmp
aaa
rcl
dec
or
sub
or
and
jne
and
lds
out
das
mov
daa
cli
imul
insb
fldl
push
scas
sub
aas
mov
pop
test
dec
std
lcall
sbb
mov
xor
dec
adc
ja
imulb
add
lock
imul
pop
loopne
mov
jmp
outsl
lret
cmpsb
adc
xorb
inc
mov
xorb
outsb
or
or
imul
or
loopne
inc
sbb
or
iret
sub
dec
pop
rorb
stos
loop
adc
and
inc
nop
not
test
or
fidivrs
cli
fwait
cmp
fidivrs
out
push
pop
mov
cmpsb
out
cmp
out
ret
and
xor
imulb
and
fs
dec
cltd
mov
cmp
call
insb
loope
lahf
xor
shlb
mov
mov
push
sub
or
jg
push
popa
mov
cmp
and
sbb
mov
fldcw
push
and
cmp
test
push
jo
mov
lods
mov
jo
leave
loope
cli
movsb
fcoml
cmp
push
cltd
jo
pop
lret
leave
jl
cltd
pop
out
inc
adc
hlt
mov
ss
mov
iret
xchg
mov
fisubrl
fisubs
lock
lds
sbb
jo
mov
mov
adc
ljmp
mov
test
sub
inc
sub
or
sub
xchg
mov
jns
sub
pushf
inc
push
aaa
mov
into
and
sub
mov
dec
nop
test
stos
nop
insl
xchg
xor
sub
cwtl
insl
jmp
loop
cs
sub
or
mov
push
stos
adc
mov
adc
je
pop
jg
sti
ds
pop
mov
jae
in
or
and
sub
leave
add
pop
cmp
inc
outsl
test
ficoml
ja
les
lret
sbb
jmp
jl
pushf
pusha
bound
test
in
movq
ja
push
dec
movsb
push
imul
sbb
sti
or
mov
loop
cmp
sub
cltd
add
repz
pop
add
ja
cmp
outsl
xor
pop
rcrl
pop
jns
pop
cmp
aam
push
jmp
stc
mov
cmp
sub
test
xchg
in
jecxz
sub
mov
or
aam
int
pushf
cmp
and
sarb
xor
mov
clc
sub
loop
add
and
mov
and
orl
sub
inc
fdivl
aad
mov
fisubs
idivb
in
popa
push
loop
xor
mov
stos
xlat
fnstcw
das
fs
jg
imul
push
sbb
and
lcall
mov
add
mov
xor
mov
imul
inc
and
lods
comiss
sahf
cli
notb
mov
jl
into
mov
and
das
mov
shrb
mov
ret
out
mov
into
xor
clc
push
jb
pop
inc
jae
jns
inc
lcall
jp
adc
fstpl
call
rolb
add
cmpsl
sub
inc
dec
pop
rolb
inc
inc
push
jae
jbe
lret
call
sbb
xchg
cmp
jno
xchg
cmp
adcb
pop
or
movsb
xor
dec
or
and
or
imul
adc
mov
out
cmc
cmpsb
xchg
dec
and
mov
insb
gs
pop
jp
jg
push
stos
jle
ss
into
test
jecxz
imul
jo
mov
adc
pop
mov
sbb
and
addb
loop
stos
mov
loop
mov
jne
push
test
inc
lds
fiaddl
insl
in
sub
imul
jnp
popa
and
jecxz
dec
test
aad
dec
push
popf
pop
daa
lds
repz
out
test
daa
sbb
fisttps
xor
decl
inc
cmpsb
add
imul
stos
addb
xchg
pop
aaa
xor
xor
stos
out
pop
cwtl
sbbb
ret
clc
out
jecxz
inc
jmp
out
mov
das
mull
dec
pop
dec
jl
scas
cmp
nop
or
lahf
mov
lahf
out
cmp
ljmp
xor
xchg
stos
addl
xchg
sbb
enter
pushf
fists
lock
arpl
incl
sub
rclb
movsb
and
fs
mov
fdivrs
stos
xor
add
sbb
roll
inc
fdiv
imull
mov
ljmp
fisubrl
inc
test
jmp
negb
inc
push
jbe
loop
sbb
jle
inc
sub
in
or
mov
addr16
cmp
ficoms
cmp
pop
push
mov
sbb
dec
in
idivb
jge
imul
jmp
sahf
jp
inc
stc
dec
push
push
cmp
in
cmp
dec
mov
rcl
mov
je
mov
shll
test
pushf
pop
fsts
fldcw
aas
xor
inc
inc
jae
imul
lds
ret
lcall
cmpsb
dec
mov
in
loopne
out
shll
fsubrs
xchg
rorl
hlt
jae
aas
mov
sbb
push
mov
loop
add
leave
mov
and
mov
sar
cmp
andl
mov
pop
and
int3
outsl
lcall
inc
mov
les
hlt
mov
aaa
popf
rol
cmpl
push
mov
mov
mov
loop
cmp
add
pop
jo
and
pop
lock
fs
fldl
xchg
scas
jbe
dec
inc
dec
adc
fiaddl
dec
sbb
aaa
mov
jmp
testl
push
out
lods
sub
fstpt
mov
cltd
daa
aaa
xor
jno
je
cmpsb
jns
int
and
push
pop
jp
dec
dec
stc
cmp
fistpll
addr16
mov
cmp
mov
repnz
paddsb
push
cmp
sarb
jb
dec
sbb
mulb
and
out
xor
xor
sbb
inc
shl
das
or
mov
xor
sbb
scas
push
pushf
sbb
xchg
dec
dec
pusha
push
leave
mov
repz
push
enter
jge
mov
scas
inc
xorl
movsl
out
test
adc
arpl
add
mov
movsb
pop
lds
stos
testb
lahf
pusha
mov
mov
stos
xchg
jnp
sti
sub
jg
cmp
xlat
aad
rcrl
xchg
outsl
out
fisubs
inc
int3
push
sarb
dec
inc
add
mov
daa
push
sub
mov
rcr
and
cmp
push
hlt
and
ret
cmp
push
cmc
add
or
adc
mov
jo
or
into
rcll
dec
mov
scas
inc
mov
sbb
fldcw
sahf
sub
sbb
push
inc
jbe
push
and
loop
mov
push
aad
ss
jge
stc
enter
jae
sub
aas
sahf
and
dec
outsl
dec
stos
stos
outsb
mov
xchg
fdivrs
ljmp
add
fs
jns
push
bound
stos
ss
ficoms
movsl
pop
push
inc
or
inc
scas
pop
pop
lahf
add
pop
add
pop
xchg
sub
or
es
fsts
mov
push
and
or
mov
jmp
ja
inc
push
dec
enter
fisttpll
dec
sbb
ljmp
cli
iret
inc
outsb
mov
cwtl
arpl
xor
sti
and
fidivs
stos
imul
xor
daa
jmp
xor
sbb
cltd
sahf
cmp
or
cli
cld
mov
test
neg
mov
cpuid
ljmp
dec
jb
add
add
js
mov
mov
sbb
stos
fnstcw
negb
pop
sbb
scas
ss
popf
cmp
push
jne
jecxz
or
add
cmp
inc
cmp
pop
jle
aad
sub
insl
jp
cmc
andl
mov
ss
mov
mov
incb
lock
sbb
xor
inc
mov
inc
sbb
out
test
jae
push
cwtl
aaa
ror
ret
dec
flds
pushl
mov
cwtl
add
pop
add
cs
cld
data16
test
cmp
jmp
and
shr
dec
sub
faddl
mov
cmp
pop
test
stos
fs
daa
pushf
lahf
xchg
sub
and
stos
fsubs
inc
cmp
cltd
push
sarb
cmp
aaa
cmp
inc
pop
movsb
push
je
add
orb
mov
outsb
jns
xor
adcb
mulb
into
mov
into
xor
fisubrs
cs
popf
mov
mulb
adc
mov
xor
mov
inc
inc
mov
and
jne
adc
dec
ja
xor
andb
ret
cmp
ja
and
push
mov
and
inc
rorb
es
xchg
testb
pop
lds
daa
mov
mov
aas
push
mov
xor
mov
xchg
jecxz
xor
mov
mov
lds
les
aaa
jno
dec
cmpsl
mov
xchg
mov
cwtl
mov
xchg
mov
adc
or
stc
add
iret
mov
jg
ficompl
je
jne
out
sbb
jo
aaa
fisubl
pop
int3
pop
add
lahf
jno
xor
and
sub
inc
mov
or
cwtl
aaa
pop
fdivrp
ss
jo
jmp
addr16
lds
fnstenv
inc
dec
scas
dec
outsl
aas
paddd
ret
pop
cmp
scas
xchg
jp
mov
mov
call
add
loopne
mov
xor
sahf
insl
rclb
out
adc
sbb
jb
pop
sub
fs
bound
cmpsl
mov
cmp
mov
dec
mov
lahf
aas
xor
loop
fildl
rorl
jmp
movsb
dec
xor
dec
cmp
out
aaa
pop
mov
sub
mov
dec
cwtl
mov
jmp
aas
xor
jmp
dec
jp
test
xchg
push
sbb
or
fdivs
cli
pusha
nop
cs
mov
cmp
mov
mov
mov
iret
dec
cmp
hlt
and
ret
es
call
fldt
test
int
cld
sbbl
add
mov
cld
mov
out
ss
sub
jmp
push
mov
iret
mov
cli
lret
and
lret
testl
sub
dec
add
daa
push
pop
xchg
mov
mov
lret
je
adc
dec
and
adc
mov
push
negl
sub
jl
adc
or
mov
movsl
mov
aas
in
cmpb
fidivrs
jp
leave
jg
push
mov
enter
daa
mov
push
xor
imul
sub
fsubl
inc
xchg
cmp
adc
sbb
ret
xor
lret
insb
lcall
cmp
nop
sbb
sbb
or
sbb
or
push
jl
inc
lods
cmp
mov
sbb
xchg
xor
push
daa
dec
enter
cmp
xchg
fisubl
cmc
adc
push
addb
pop
dec
sbb
inc
adc
push
or
mov
sbbb
mov
or
pusha
mov
movsl
inc
push
add
aad
or
loope
jle
mov
aaa
adc
mull
push
stc
sbb
es
adc
lcall
std
jle
mov
dec
xor
pop
inc
scas
jb
mov
pop
inc
push
arpl
adc
inc
dec
nop
sbb
sbb
leave
sti
in
push
dec
fimull
mov
pop
inc
stc
inc
cmp
stos
mov
and
ret
lcall
xorl
inc
cmpsb
push
imul
stos
dec
inc
jecxz
xchg
leave
imul
sahf
and
pop
insb
and
addl
mov
push
push
push
xchg
jns
out
movsl
stos
push
daa
and
stc
mov
call
xchg
and
fidivrl
cli
ret
js
shll
mov
mov
mov
mov
data16
cmp
popf
mov
nop
subl
sbb
dec
ret
fadds
shrd
sbb
adc
daa
out
fcompl
push
dec
sub
es
jns
pushf
cmp
and
push
xor
and
cld
mov
adc
nop
sbb
mov
and
daa
aaa
push
lahf
ljmp
lods
out
adc
leave
pusha
enter
sub
mov
cld
fs
push
addr16
mov
cmp
insl
xchg
xchg
sbb
xchg
fidivl
ficomps
fistpll
and
cmp
cmp
jo
xchg
dec
inc
inc
sub
daa
inc
and
test
nop
mov
aad
adc
fisubl
inc
adc
stos
repnz
inc
jae
or
and
push
out
cmp
popf
leave
ds
test
ret
ret
inc
or
sub
ljmp
or
daa
pop
popf
jg
or
pusha
mov
mov
jmp
xlat
and
rcrb
stos
cmp
in
sbb
dec
stos
outsb
aaa
cmp
imul
sbb
push
ljmp
mov
aam
pop
lds
mov
lret
mov
adc
inc
pop
js
xor
out
and
dec
xor
cs
imul
inc
add
sbb
push
jp,pt
mov
sbbb
shrl
xor
mov
loope
xor
dec
jecxz
sub
test
test
cmp
movsl
shrb
sub
push
cs
xor
ljmp
jns
cmp
adc
fisubl
inc
inc
subb
or
pop
xchg
cmp
mov
pop
stos
stc
cmpsb
scas
mov
mov
jb
fimull
xor
es
pop
setne
in
insb
fldcw
sbb
fisubrl
shll
push
pop
jb
roll
pusha
in
push
dec
or
inc
jb
movsl
popa
inc
dec
sbb
and
loopne
mov
push
das
rorl
add
xchg
rcl
aas
in
jno
pop
xor
lods
fcoml
jle
jb
cmp
in
cltd
mov
jno
ret
out
out
mov
sub
xor
mov
icebp
sbb
jg
push
stos
int3
negb
jnp
test
test
jno
jp
outsl
scas
test
or
scas
popf
sub
das
dec
pmaddwd
int
int3
ja
xor
adc
rcl
dec
lret
fimull
sbb
aad
and
mov
inc
imul
mov
xor
inc
inc
push
inc
jo
mov
push
int3
mov
repnz
ljmp
sbb
and
push
ljmp
push
xchg
pop
mov
hlt
testb
mov
or
pop
mov
lret
push
push
mov
das
mov
pop
xchg
pop
mov
add
mov
frstor
cmp
addr16
sbb
and
popf
fcomps
sbb
imul
imul
lahf
adc
cmc
iret
inc
jp
jns
dec
mov
je
in
push
add
fistps
jge
mov
scas
jo
push
je
sar
inc
je
push
push
outsl
add
mov
sarb
popf
mov
hlt
mov
push
jmp
jp
xor
repz
xchg
test
or
je
pop
ja
aam
and
add
jmp
cmp
imul
into
mov
or
fwait
adc
jp
sub
push
sub
or
and
leave
clc
mov
jmp
scas
mov
aas
sbb
cmp
xchg
or
mov
push
rclb
ds
push
repz
xor
add
in
inc
add
cwtl
daa
mov
adc
or
pop
ja
arpl
add
dec
lods
scas
adc
pop
mov
dec
or
lds
cmp
iret
out
mov
adc
lcall
mov
in
movsl
xor
jmp
sub
into
xchg
pop
jmp
adc
pusha
fidivl
mov
scas
cmp
aas
jp
cmp
incb
test
cmpsl
mov
lret
jae
adcb
mov
cmp
outsl
shrl
push
xchg
mov
imul
sbb
sahf
icebp
inc
inc
xchg
push
outsb
and
scas
or
mov
icebp
mov
add
addr16
xor
in
mov
adc
jo
daa
xor
aad
pop
fcoml
push
dec
mov
jp
outsl
inc
xor
inc
insb
inc
sbb
adc
mov
lods
js
push
adc
jbe
aas
int3
ljmp
mov
or
shll
in
mov
cmp
sub
imul
stos
push
add
arpl
inc
pusha
int
mov
sahf
and
je
fcompl
push
out
das
mov
popf
or
jae
das
aad
sbb
aaa
sahf
xchg
je
xchg
jl
gs
inc
cs
dec
xor
js
test
jle
cltd
mov
push
fisttpl
sahf
cmc
outsb
jno
std
dec
xor
sbb
pop
pop
jmp
lahf
jno
cmp
push
mov
js
jnp
lahf
and
sbb
dec
jnp
push
popa
sub
outsl
add
mov
xchg
push
es
addl
cmp
andl
jbe
add
cmp
jmp
rcll
aaa
mov
icebp
int3
push
shll
out
flds
sub
aam
and
test
fidivrs
pop
js
fidivrl
mov
mov
testb
jp
testb
out
push
testb
cltd
outsl
out
cmp
mov
mov
adc
xchg
adcb
das
jp
jae
fsubrp
lahf
lock
cltd
mov
mov
inc
idivb
mov
imul
bound
jns
dec
icebp
fidivs
sbb
mov
enter
adc
pop
insl
xor
dec
cmc
scas
xchg
pop
mov
and
and
mov
pop
daa
lcall
pop
xchg
roll
jae
cltd
das
lahf
pop
imul
dec
pop
inc
sbb
scas
rolw
mov
dec
test
push
inc
lcall
mov
clc
mov
fisubrs
mov
push
and
mov
or
fwait
xchg
imul
fstpt
xor
fdivl
cmp
cltd
push
xor
cwtl
push
rcrl
arpl
fsubp
rcr
lahf
imul
mov
lahf
jl
push
jbe
out
lds
arpl
ficoms
xor
push
out
and
inc
mov
lock
push
out
jo
push
sar
push
push
pusha
mov
xchg
mov
popf
inc
xchg
imul
ljmp
inc
mov
sbb
hlt
mov
adc
mov
lods
mov
daa
lret
repz
xchg
subl
xchg
in
sub
pop
or
or
mov
movsl
shl
imulb
or
outsl
adc
popf
and
xor
sub
cmp
daa
imul
popa
ljmp
lahf
leave
lods
ficoms
mov
jl
pop
or
idiv
xor
aaa
jno
mov
mov
pop
adc
mov
sahf
push
push
xchg
lret
ds
outsb
push
scas
adc
bound
adc
xor
pusha
or
fsubrs
jnp
inc
jb
xor
gs
lret
stos
addr16
pop
adc
inc
jge
test
int
inc
mov
mov
jnp
mov
adc
iret
nop
mov
jbe
cmp
and
adcb
cmp
sub
sarl
jb
into
jbe
rcl
pop
xor
dec
xchg
idivb
shlb
pop
popa
pop
cmpsl
adc
inc
pop
stc
xor
out
outsl
mov
js
mov
mov
cmp
inc
mov
mov
stos
ret
sub
out
jp
out
sbb
ficompl
and
out
fmuls
adc
ret
sbb
sub
sbb
jns
ficomps
sub
inc
jns
dec
dec
jg
jle,pt
lahf
cmp
mov
lcall
scas
dec
push
mov
push
adc
out
jp
bound
stos
das
ds
pop
cmpsl
mov
xchg
cmp
bt
in
pop
jmp
lret
xor
nop
push
add
inc
inc
xor
test
inc
aaa
gs
xchg
cmp
sub
cmp
jae
fwait
xor
lahf
incl
cmp
jns
pop
mov
mov
lods
ss
lret
mov
sub
dec
rep
mov
inc
cmp
push
mov
aaa
mov
xor
imul
xchg
stos
xor
and
push
jo
test
call
sub
loop
popa
sti
xchg
jp
pop
fmul
sbb
ret
jmp
jp
lret
xchg
in
aaa
call
ljmp
or
das
fwait
into
incl
inc
adc
mov
loopne
cmpsb
cmp
cwtl
daa
ret
cs
mov
imul
mov
xor
xchg
inc
mov
das
lea
pop
outsl
cmpb
inc
push
sti
jb
sar
out
mov
repz
ss
rcl
mov
push
sub
sbb
lock
pop
push
push
int3
cmp
repz
outsb
pop
xchg
cld
mov
jo
push
sbb
jl
stos
out
inc
mov
xorl
inc
fistpl
xchg
add
dec
rcrl
ret
cmp
inc
repz
xor
das
xor
subb
mov
jmp
inc
movb
inc
sub
cmp
or
frstor
adc
loope
mov
and
sbb
dec
jnp
add
and
and
inc
mov
mov
inc
adc
ficomps
cwtl
gs
pop
push
popf
mov
fmull
push
cmp
mov
fcompl
xor
sub
mov
insl
mov
mov
cmp
xor
sbb
pushf
jle
and
cmp
push
test
and
leave
sub
sub
mov
xor
push
cmp
mov
outsl
mov
mov
mov
sbb
outsl
mov
push
xchg
shlb
in
mov
fs
sub
inc
pop
inc
push
sti
push
and
cmc
stc
stos
cltd
lcall
out
jmp
jecxz
test
or
int3
push
bound
jle
inc
leave
pop
jmp
xor
pop
je
mov
sbb
pop
and
xor
cmc
dec
jnp
inc
lret
lods
leave
pusha
adc
inc
cltd
xchg
inc
idivb
mov
aad
xchg
in
jo
sub
int
dec
mov
mov
shlb
sub
lret
push
push
mov
pop
lods
and
xchg
hlt
jns
and
adc
es
sti
incl
in
jno
stos
mov
mov
std
outsl
sub
cmp
mov
pop
xchg
mov
aam
xor
call
mov
daa
pushf
push
inc
js
aaa
xor
sbb
repnz
into
loope
xor
popf
xor
cld
mov
iret
and
loope
xor
jp
addr16
test
ljmp
jo
sbb
sarb
push
fs
xchg
cli
testb
jne
cmp
xchg
jno
dec
push
push
cmp
jmp
cmp
or
jge
popa
jnp
add
cmpsl
je
test
or
sahf
mov
cld
test
dec
cmp
jp
scas
sti
test
rcll
xor
mov
scas
adc
lcall
leave
ficoml
sbb
sub
or
ja
sbb
pop
fbstp
fistl
jbe
shl
xchg
subb
xor
xchg
adcl
dec
jo
data16
lahf
sbb
mov
push
sub
sarb
lea
push
xchg
mov
loope
jle
add
icebp
test
dec
nop
ret
dec
pop
xchg
imul
push
movsl
imul
cmp
push
les
ret
xchg
aam
xchg
cltd
inc
fcmovb
lret
push
mov
pop
mov
mov
or
adc
fnstsw
push
daa
inc
pop
rcl
arpl
mov
xchg
push
rorl
pop
pop
add
bnd
push
mov
adc
dec
xor
push
lods
mov
sub
testb
repz
into
in
sub
mov
or
dec
xchg
je
imul
xchg
jae
inc
sub
mov
mov
mov
leave
loop
xchg
stos
iret
mov
mov
enter
vpsubw
xchg
test
jo
inc
clc
mov
push
fisubs
add
push
pop
cmpsb
sbb
fiaddl
aam
cltd
mov
sbbl
outsl
into
push
cs
popa
mov
xor
inc
out
xor
inc
into
in
notb
and
sahf
stos
push
addr16
fadds
push
outsb
mov
push
mov
push
mov
test
dec
push
adc
adc
lods
add
inc
xor
jb
jecxz
loop
imul
sarl
ja
andb
xor
sbb
jbe
push
and
clc
add
bound
mov
stc
adc
sbb
mov
pop
das
inc
inc
inc
inc
nop
arpl
mov
fsubrl
xchg
fbstp
jl
sub
scas
mov
roll
add
sbb
or
lea
adc
and
jno
push
out
xchg
out
ss
lds
inc
je
and
fcoms
xchg
pushf
cmpsl
pop
mov
push
iret
xor
hlt
inc
adc
cmp
push
shrb
xchg
jmp
aas
std
dec
cld
shrl
scas
adc
mov
pushf
pop
and
outsb
or
imul
cmp
fisubrl
cmp
and
loopne
aad
mov
leave
gs
hlt
outsl
bound
imul
push
roll
xor
xchg
fwait
lret
mov
sbb
mov
dec
jecxz
ss
cmp
cmpsl
lahf
leave
in
push
outsb
jno
or
inc
pop
out
and
aas
or
repz
add
inc
sarb
push
xchg
mov
jnp
mov
loopne
lds
ja
out
mov
pop
add
out
fiaddl
mov
mov
sub
dec
test
test
mov
test
push
dec
or
inc
out
outsl
sbb
out
add
jmp
cmp
and
stos
jl
mov
popf
sbb
inc
scas
cmc
xor
js
jp
stos
js
lret
jmp
mov
dec
inc
inc
jp
sub
jg
hlt
mov
and
shll
pop
enter
test
jae
mov
test
mov
mov
sbb
xchg
and
call
hlt
mov
and
test
sub
inc
stos
xlat
sbb
mov
std
push
pop
sub
stos
arpl
xor
out
xchg
popa
sbb
pop
test
int3
das
jmp
cld
sub
loop
xchg
mov
inc
sbbl
lods
loop
inc
mov
scas
dec
pop
loope
out
loop
addb
pop
movb
mov
pop
loope
mov
daa
test
popf
test
shlb
jmp
loope
emms
or
dec
std
push
es
mov
or
pushf
inc
mov
loope
xchg
mov
outsl
adc
push
loope
sti
mov
test
mov
jle
xor
mov
push
es
mov
cmpsb
mov
push
out
mov
sahf
jmp
mov
add
cmp
cld
sub
ljmp
sbb
mov
imul
add
addr16
cmp
adc
push
push
sti
imul
dec
cmp
fs
addr16
int3
cmc
and
jb
fisubrs
push
jp
inc
xchg
stos
inc
lods
jmp
sub
sahf
inc
add
push
orl
test
push
pop
jmp
jmp
mov
and
and
mov
or
mov
sbb
lahf
cmp
mov
movb
xchg
loope
cmp
fdivl
push
jp
mov
sbb
xchg
mov
enter
mov
dec
cltd
ds
roll
out
and
icebp
repnz
sbbl
outsl
pop
or
lret
jmp
cmp
aaa
add
cmpsl
dec
and
and
andb
sahf
mov
push
jecxz
dec
lret
aad
push
jo
stc
mov
cmp
jns
xor
and
loope
stos
mov
sub
and
or
movsb
and
and
imul
fldl
jb
cmp
loopne
ficoml
xchg
mov
add
add
jge
stos
and
push
push
test
imul
xchg
push
imul
or
or
xchg
das
loop
out
pop
push
test
pop
mov
test
lods
mov
jecxz
mov
fbstp
div
mov
adc
push
mov
imul
dec
daa
sub
scas
fistps
es
dec
divb
stos
xchg
mov
or
ja
sbb
fldt
mov
sti
dec
cmpsl
adc
test
scas
sub
mov
jge
out
arpl
cmp
lahf
aaa
inc
icebp
lods
and
sub
and
sbb
jp
and
lock
sub
aaa
lahf
jae
ja
icebp
je
fdivrl
jp
movsl
ds
shlb
fwait
stos
bound
iret
sbb
xchg
dec
int
jecxz
mov
jmp
aaa
arpl
stos
fistpll
stos
add
push
xchg
and
lods
fimuls
and
les
es
sbb
in
xor
or
std
test
inc
add
scas
jae
mov
enter
add
scas
andl
mov
sbb
shr
mov
shl
cwtl
or
div
jo
imul
repz
dec
ficoml
insb
pop
js
or
js
mov
popa
imul
outsl
add
aas
repz
out
repz
mov
stos
cmpsb
mov
mov
or
pop
inc
mov
imul
push
mov
icebp
cld
push
ret
mov
xor
mov
inc
inc
mov
lret
jg
inc
mov
mov
scas
cmp
test
push
movsb
daa
inc
mov
dec
mov
cmp
mov
rcl
es
cwtl
jecxz
jmp
leave
xchg
inc
imul
sti
aaa
and
aam
es
xor
pop
jns
ja
test
bound
mov
sub
rcrl
mov
aaa
push
aad
jecxz
leave
push
in
sub
pop
jnp
into
jp
cwtl
mov
mov
test
sbb
xor
subb
rorl
mov
push
lds
dec
hlt
aaa
leave
add
in
adc
lea
loope
pop
push
loopne
sub
fimull
mov
add
mov
xchg
push
mov
scas
rcrl
sbb
add
loopne
push
popf
loope
pushaw
fisubl
hlt
add
loopne
std
mov
sbb
mov
or
test
stc
lock
out
jmp
xor
rorb
hlt
add
mov
stos
or
ret
ss
xor
popa
imul
jecxz,pt
adc
and
mov
sbb
test
sti
push
movsl
ret
sub
cmpsb
mov
mov
loop
add
enter
jecxz
nop
daa
mov
scas
dec
inc
jmp
stos
cmp
jl
pop
scas
ret
dec
idivl
add
xor
mov
jle
sub
test
mov
mov
out
mov
les
jle
sbb
cmp
mov
mov
sub
int
bound
rol
sahf
pop
les
mov
mov
cli
push
loop
mov
mov
pop
xchg
cmp
movb
push
ljmp
repz
and
pusha
jg
outsl
cs
lcall
ret
lret
add
jnp
fdivr
adc
ret
jbe
lds
jae
jle
add
jecxz
call
mov
cltd
adc
cmp
shl
and
and
jp
xor
test
sub
cmpsb
jle
loope
jmp
out
pop
fstpt
inc
mov
pop
sbb
add
aas
or
shlb
mov
movb
pusha
push
sti
jne
les
adc
lods
xchg
cmp
sub
stos
pop
inc
sahf
mov
cmp
call
nop
jmp
mov
xchg
jbe
popf
popf
outsl
push
cli
int3
mov
dec
mov
adc
sbb
inc
aas
sub
mov
xor
sbbl
ljmp
pop
and
ljmp
loop
push
xchg
dec
xchg
pop
or
xchg
ss
in
add
subb
jp
jno
xor
out
repnz
scas
dec
aas
jg
xorl
mov
ja
mov
nop
out
and
inc
je
test
xor
out
adc
jl
push
adc
jb
inc
push
mov
pop
enter
sub
mov
jmp
fimuls
xchg
cmpsl
fcmovbe
pop
add
adc
stos
inc
into
xchg
add
xor
repz
ljmp
dec
push
jg
mov
jb
mov
adc
lcall
out
insb
inc
jae
and
pusha
mov
iret
cli
vpmuludq
push
or
sbb
fucomp
mov
scas
enter
mov
icebp
inc
clc
jbe
sub
jbe
pop
lahf
push
sbb
xlat
daa
inc
lds
and
daa
mov
mov
xchg
push
mov
or
arpl
je
xorl
or
or
jmp
aas
pushf
jmp
mov
leave
pop
aaa
test
mov
pop
stos
add
out
scas
xchg
ja
aam
mov
mov
enter
daa
shlb
imul
xor
test
cmp
ror
mov
dec
push
mov
dec
lds
xlat
aad
cld
xchg
jae
in
clc
cmpl
jle
insb
imul
scas
cmp
rorl
aas
sbb
loop
ds
cmpsl
push
out
add
repnz
or
cmp
fiadds
sbb
dec
imul
push
cmp
fs
add
and
xchg
cmpsl
inc
inc
stos
gs
jmp
shl
mov
jns
mov
inc
inc
cld
dec
sbb
pop
test
xlat
dec
push
pop
add
pop
lods
and
sub
pop
or
cmp
mov
dec
call
fwait
cmp
or
in
xor
stos
dec
jg
ljmp
xor
sbb
sbb
nop
adc
mov
push
mov
and
lods
stos
or
popf
jne
xor
mov
pop
leave
decl
loopne
out
and
push
and
jnp
stos
cmpsb
xor
inc
mov
push
nop
out
stos
push
ret
inc
or
addr16
sbb
nop
fsubl
ret
outsb
js
jg
sbb
fs
or
adc
pop
sbb
bound
xor
mov
out
mov
ljmp
les
inc
ret
arpl
mov
rorl
add
ficoml
mov
pop
pop
mov
jmp
ljmp
pushw
sbb
dec
loop
jg
dec
mulb
mov
xchg
cmp
or
jno
sub
push
push
or
xchg
cmp
mov
pushl
mov
movsb
inc
adc
dec
hlt
and
nop
mov
xor
bound
aam
mov
xchg
sub
mov
inc
call
xchg
sbb
jmp
or
jo
bound
push
in
je
jp
push
dec
cs
sbb
cmp
arpl
sub
popa
mov
sub
aam
out
and
jmp
inc
out
pop
jns
addr16
fidivrs
sbb
clc
imul
sbb
repnz
adc
fmulp
pop
cmp
sbb
lahf
stos
dec
pop
mov
fidivrl
aas
out
mov
lcall
addr16
inc
ljmp
sbb
ds
sbb
and
pop
sbb
or
pop
cli
mov
sub
pop
aaa
mov
and
sti
pop
adc
jnp
push
lret
and
mov
out
out
out
xchg
sub
call
test
sub
out
fs
xchg
out
push
aad
into
cmp
inc
ret
subl
cmp
rcl
or
incl
and
int3
dec
arpl
ds
imul
jge
mov
jns
jg
mov
mov
ficoml
pop
loop
mov
ljmp
popa
ret
stos
fisttpl
bound
jl
sbb
lret
push
insb
mov
sub
daa
dec
jno
sbb
adc
dec
cs
xor
mov
jo
jnp
mov
lret
mov
fsub
dec
sbbl
mov
jl
inc
add
add
mov
xor
add
sarb
and
test
pop
divb
cmp
int3
out
imul
ss
fidivrs
lods
mov
mov
lods
popa
jo
or
dec
and
jge
jb
in
aas
adc
sahf
xchg
imul
lcall
xor
cmp
fs
dec
push
xor
xor
pop
push
jne
popa
sbb
xor
dec
dec
add
mov
sub
and
cmp
int
mov
or
idiv
sub
add
and
xor
mov
add
jne
movsb
lea
pop
mov
shrd
inc
push
inc
cmp
nop
repnz
and
mov
mov
inc
jg
dec
mov
jg
lock
mov
enter
rclb
and
ss
cltd
push
int
cld
xchg
popf
fdivr
sbb
ffree
std
xor
inc
mov
hlt
jo
sub
adc
dec
movb
jmp
call
fwait
and
and
aaa
pop
sbb
insb
pop
mov
pop
jnp
mov
mov
pop
arpl
cmp
fsubrs
into
pop
mov
push
mov
mov
sub
jo
fwait
ret
sub
cmp
xor
pop
lcall
mov
xchg
loop
mov
xor
popf
cmp
lahf
mov
cmp
nop
hlt
sub
dec
mov
mov
mov
or
int
int
push
xor
mov
test
xchg
sbb
loope
or
jmp
call
xchg
and
aaa
movb
es
cmp
outsb
push
jo
mov
push
int3
push
pushf
stos
push
bound
adc
scas
and
jp
pushf
loop
aaa
pop
enter
xor
and
xor
ret
scas
fiaddl
movsl
xchg
sbb
sti
loopne
push
hlt
outsb
and
out
fisubl
jl
dec
ljmp
xchg
gs
cmp
movsb
jnp
push
mov
sbb
xchg
loopne
imul
jae
xchg
push
inc
inc
ficoms
call
xor
inc
and
dec
xor
add
jb
adc
test
xchg
ljmp
hlt
push
push
jp
add
jae
cmp
xor
and
movsb
xor
sub
jmp
jmp
push
mov
sti
pop
sbbb
push
push
mov
jno
aas
cmp
mov
push
lock
jno
inc
js
xor
cmp
addl
cmp
repnz
stos
dec
push
out
arpl
insl
into
and
div
daa
enter
push
stc
jp
test
lods
aaa
sarl
aas
rorl
add
imul
cld
aas
aaa
mov
ficompl
stos
cs
pushf
mov
sub
nop
and
in
pop
inc
jo
sub
imul
mov
mov
leave
ret
mov
sbb
cwtl
pop
xlat
mov
repz
dec
or
aaa
arpl
in
data16
xchg
dec
sub
fiaddl
lds
dec
lods
inc
test
push
inc
cltd
idivl
decb
pop
mov
inc
add
stc
dec
adc
cltd
aam
test
das
ret
flds
les
iret
repnz
add
out
jae
inc
mov
std
int
cwtl
inc
cmc
loop
dec
mov
jecxz
cmp
test
inc
cli
xor
fdivr
aam
adc
inc
imul
pusha
jnp
lds
fs
lret
xor
xor
pop
addl
mov
ja
aas
je
push
loop
mov
fmul
push
mov
or
pop
mov
jg
cmp
jbe
lods
xchg
xchg
push
ljmp
outsl
lock
scas
inc
pop
ds
ljmp
sbb
inc
aaa
fs
xchg
jae
xchg
rcl
imul
jo
fstps
int3
sub
pusha
sbb
test
mov
sbb
fmull
pusha
sahf
mov
adc
mov
jne
and
ljmp
push
inc
ss
in
and
aad
clc
movsb
sub
loope
mov
inc
shr
mov
mov
nop
add
mov
andb
mov
mov
cmpsb
jmp
in
in
stos
pop
hlt
dec
cmpsb
out
mov
scas
push
sub
push
psrld
mov
roll
ror
out
je
ljmp
mov
sarb
lock
sbb
lock
lock
ret
stc
repz
stos
cmp
mov
mov
push
repz
cmp
cli
cmp
push
adc
call
and
xchg
sbb
inc
push
push
cmp
loop
dec
or
jle
inc
lds
outsl
jle
das
xchg
jns
in
sub
lods
out
add
movsl
adc
dec
test
jecxz
push
xchg
mov
fisubs
inc
or
test
imul
outsb
insb
pop
sbb
pop
es
fsubs
jp
pop
xchg
mov
inc
mov
sbb
popa
imul
cmp
mov
push
mov
inc
pop
scas
or
sub
mov
and
pop
cmp
dec
bound
scas
sub
pushf
es
adc
out
out
nop
jle
mov
inc
clc
cmp
rcrl
inc
faddl
repz
fsubs
push
push
insl
xchg
sub
outsb
cwtl
flds
dec
ret
hlt
data16
fmull
lcall
sti
cmp
pop
fcmovb
dec
ds
push
nop
push
xchg
fnstenv
inc
jmp
dec
pop
fldenv
sbb
iret
outsl
out
jbe
in
sub
enter
push
and
jbe
ja
mov
aas
jle
dec
jmp
push
and
add
dec
aaa
jbe
pop
xor
add
ja
sbb
ficoms
mov
call
fcoms
mov
adc
pop
lods
xchg
cmp
jle
shr
mov
xor
aas
sti
pop
pop
pop
rol
adc
mov
mov
mov
adc
shl
fimuls
xor
cltd
repz
xchg
lock
out
test
push
add
mov
arpl
cmp
ljmp
cmp
out
scas
int3
sub
xchg
es
push
pop
jmp
out
or
out
sbb
lcall
ljmp
testb
inc
das
movups
xor
into
fldt
inc
std
rcll
pop
mov
dec
pop
lcall
jge
mov
push
xlat
popa
sub
cwtl
dec
fidivs
jg
lret
ss
push
je
mov
mov
sub
mov
sbb
xor
test
jmp
push
popw
insb
test
scas
cmp
and
cmp
sbb
cli
ds
fidivl
and
inc
out
loop
fwait
lea
pop
and
and
inc
push
jo
fnstenv
outsl
jmp
push
andl
lods
in
insl
daa
je
cmp
insb
pusha
lock
adc
and
and
push
cli
rcr
dec
dec
push
insb
jae
or
shll
je
int3
mov
ds
aas
push
push
dec
ss
arpl
pop
pop
outsb
clc
lret
inc
jle
mov
sbb
mov
cltd
ja
push
sbb
stos
sbb
adc
loop
push
mov
int3
aaa
or
lahf
jge
jno
push
sarb
add
cli
sbb
jo
fiadds
push
call
xchg
pop
sub
jb
xchg
cltd
idivb
dec
mov
fsubs
imul
dec
fwait
dec
sbb
stos
ds
scas
sbb
and
or
ds
jns
or
mov
stos
push
adc
mov
mov
sbb
mov
push
inc
mov
sbb
and
mov
jp
add
stos
inc
pop
pushf
push
ljmp
scas
mov
fdivp
xchg
xchg
and
lock
and
arpl
push
jbe
popa
incb
lock
aas
jne
ficoml
push
enter
rclb
xchg
xchg
mov
inc
mov
xor
sub
popl
or
sbb
testl
lock
loopne
lcall
out
sub
sub
iret
jmp
push
sbb
cli
je
lahf
mov
mov
adc
insl
fisubrs
mov
dec
adcb
es
scas
jmp
jl
push
and
aad
rep
out
pop
test
inc
push
mov
and
std
addr16
in
and
fsubr
mov
addr16
xor
stos
inc
jne
push
jge
inc
jnp
sbbb
push
movsl
pop
adc
popf
jb
fsts
push
jne
iret
fnstenv
inc
nop
stos
adc
movsb
add
sub
dec
mov
cmpsb
cmp
jle
cmc
push
in
or
mov
and
mov
sub
pop
int3
aas
or
mov
push
in
ret
lds
xchg
jns
cmp
test
or
fwait
push
in
or
dec
add
adc
sbb
fst
adcb
pop
sub
aaa
xchg
scas
adcl
lds
mov
cmp
vaddps
sbb
xchg
sbb
mov
mov
or
aas
pop
pusha
xchg
insl
stos
dec
push
push
lea
lret
and
inc
dec
roll
jo
ret
pop
push
jae
and
pushf
fnstcw
xor
insb
or
test
int3
loop
gs
mov
xor
add
cmp
push
push
cwtl
cli
outsb
testb
bound
stos
xchg
dec
sbbb
into
cmc
push
or
push
inc
lret
repz
test
je
add
adc
sub
leave
push
pop
or
inc
cmp
sub
lods
cmpl
rcll
call
dec
inc
fucomi
mov
cmp
lret
and
push
lcall
mov
stos
and
pop
xor
xchg
sbb
repz
cli
xor
mov
fisubrl
daa
and
mov
ret
or
pop
test
xor
inc
cwtl
sub
xor
cmp
loop
jmp
cmp
ja
fisubrs
or
pushf
mov
cmp
jnp
jl
dec
inc
jne
sub
call
inc
xor
cmp
es
insb
movsb
repz
cmp
mov
imul
out
setge
insb
ficoml
or
push
lcall
push
sub
pop
scas
push
cmpsb
xchg
insb
fsts
xchg
sti
repnz
repz
addl
sarb
negb
das
imull
lods
and
sbb
sbb
pop
add
popf
test
jbe
pusha
mov
adc
xor
and
mov
jge
sbb
outsb
jp
hlt
ja
mov
add
or
sbb
out
mov
mov
loop
mov
cmp
pop
frstor
out
out
and
jmp
subl
mov
dec
inc
push
mov
iret
adc
cmp
add
mov
inc
dec
cmp
es
loope
lea
cmp
mov
sbb
jnp
sub
sub
and
pop
and
fcomps
out
test
nop
mov
lea
xchg
fadd
jb
xor
xchg
cmc
and
call
dec
mov
pop
mov
mov
jb
jo
sbb
int3
nop
mov
pop
sub
fdivp
scas
push
cmp
outsb
ds
stos
psrlw
sub
popf
insb
mov
nop
hlt
ljmp
sub
stos
lret
mov
and
cmp
aaa
loope
dec
jbe
fiadds
mov
pop
mov
fwait
bound
pushf
and
dec
and
mov
xor
and
sbbl
push
adc
dec
ja
cli
sbb
repnz
mov
lret
shl
adc
dec
mov
popf
ret
push
stos
pop
inc
sbb
sbb
insb
out
aaa
shr
bound
jo
sbb
shll
jns
xor
fcomps
adc
jg
lods
dec
xor
push
mov
das
dec
inc
push
aaa
jns
and
push
push
cmp
out
or
inc
jno
leave
aas
aad
sub
mov
inc
fldenv
jp
sarl
fcompl
dec
mov
sbb
and
add
jmp
dec
fnstenv
or
inc
xchg
push
mov
imul
xchg
aaa
mov
mov
mov
push
repz
xchg
dec
sub
adc
pushf
inc
sub
jns
mov
adc
sets
ret
cmc
add
fistpl
popa
pop
push
scas
dec
xchg
inc
push
aas
ljmp
scas
xchg
pop
pop
sbb
das
outsl
adc
jnp
pop
cld
mov
xchg
ds
xchg
fs
aaa
fsubrp
xchg
sbb
dec
ret
cli
shll
jecxz
test
ficoml
or
addl
adc
fnstenv
outsl
xchg
pop
and
cli
mov
sub
xchg
jp
cmp
jnp
scas
ds
push
aaa
test
cmp
ret
push
mov
sub
imul
dec
pop
jns
or
push
sarb
cmp
roll
arpl
rolb
js
mov
mov
push
jns
or
stc
outsl
mov
sub
loop
sbb
icebp
pop
cmp
inc
jne
aaa
shlb
loopne
jo
xchg
inc
mov
jp
dec
mov
push
stos
mov
jo
add
in
ljmp
jo
stos
xlat
push
jp
filds
adc
or
xor
jmp
popa
sti
jns
enter
sbb
or
lret
mov
xchg
inc
and
pop
xor
lds
stos
and
dec
aas
xor
inc
add
sbb
sub
mov
xchg
pushf
out
std
pop
push
jo
mov
xchg
mov
test
cmp
imul
jecxz
insl
pop
and
ds
cltd
and
mov
loope
pop
pushf
lea
mov
lahf
mov
push
mov
mov
mov
stos
xchg
and
xorl
dec
dec
rorl
jg
mov
dec
pop
mov
rcrl
or
inc
movsbl
aaa
popf
inc
arpl
stos
and
out
dec
fidivrl
dec
lds
jb
cli
mov
mov
dec
or
ljmp
ret
ret
mov
movsb
imul
inc
mov
outsl
cmp
adc
push
mov
lcall
js
arpl
xchg
call
cmp
cmp
push
mov
jl
mov
loop
cli
pop
test
and
out
lcall
xchg
ljmp
mov
mov
mov
xchg
or
stos
pop
imulb
ss
mov
loop
les
push
sub
sbb
movl
je
and
mov
pop
repnz
ds
mov
xchg
mov
inc
cld
pop
out
xor
sub
repz
mov
xchg
stc
dec
fs
clc
cmp
adc
mov
ret
jmp
int3
dec
adc
nop
mov
cmp
pop
mov
and
shll
lret
fmul
shlb
xor
mov
leave
xchg
mov
cmp
add
dec
cmp
inc
or
pusha
enter
jns
aas
lea
jge
cmp
pop
fisttpll
xor
fsts
test
jno
cmp
push
lcall
test
xor
jae
mov
or
sub
lea
xchg
sub
psrad
das
xor
jle
js
icebp
mov
sub
hlt
arpl
gs
insl
push
pushf
test
and
mov
inc
sti
fwait
les
jmp
lret
or
mov
aam
sbb
ficompl
aaa
dec
cli
cli
jb
fs
das
xchg
mov
inc
dec
jno
movsl
sub
test
xor
inc
xchg
add
mov
lahf
mov
imul
mov
jnp
push
scas
lcall
scas
fiaddl
lds
mov
pop
loopne
ss
lds
xchg
enter
das
sub
sub
jle
push
xchg
leave
mov
jle
jbe
and
jg
ss
push
shlb
push
rorb
push
pusha
insb
push
add
inc
mov
ret
outsb
incb
mov
push
stos
jle
xchg
cmp
sub
sub
out
push
ljmp
out
xchg
cli
cmp
cmp
aaa
daa
mov
sarl
sub
push
xor
mov
inc
jp
repnz
mov
jbe
jo
xchg
insb
mov
das
xchg
ja
mov
pop
fnsave
cli
adc
sahf
js
sbb
fidivrl
out
jg
fwait
inc
dec
jae
imull
and
cli
stos
divl
mov
into
dec
pop
cmp
into
cmp
sti
pop
mov
or
adc
xchg
and
dec
dec
xor
mov
aam
iret
push
repnz
mov
cmp
sub
inc
inc
daa
repz
and
mov
pop
lret
dec
push
sub
jno
jns
ret
mov
pop
fldenv
sbb
mov
aad
je
stos
cmp
rcrb
add
mov
in
sub
fs
sbb
stos
fsubr
dec
inc
stc
outsl
jl
or
add
xor
add
lds
jae
stos
ret
aaa
mov
cmp
jmp
sbb
inc
xor
shrl
pop
loop
mov
sbb
popa
add
mov
imul
pop
stc
bndstx
imul
mov
sbb
test
ljmp
js
dec
shrb
pop
sub
in
xor
adc
js
dec
xchg
adc
mov
jg
sub
mov
push
cmp
xor
xor
sbbb
je
stos
cmc
adc
js
pop
pop
add
ds
cmpsb
cmp
pop
mov
mov
jp
test
add
mov
xchg
fidivs
mov
dec
inc
fdivrs
js
loopne
adc
lcall
pop
rclb
aaa
test
test
inc
sbb
pop
pop
stos
pop
aas
sbb
mov
mov
mov
fiadds
sbb
sub
and
cmp
pop
pop
ds
fcomps
loope
mov
mov
lock
into
das
xor
cmp
mov
mov
lock
pop
scas
jecxz
aaa
cmp
imull
cs
leave
jbe
jg
ss
lret
xor
xchg
xchg
xor
inc
xchg
jb
ret
jne
and
dec
stc
test
movsl
ret
jns
test
add
pop
inc
sbb
cmp
jb
insb
xchg
cmp
sub
dec
mov
push
xchg
sub
cmp
in
push
jmp
mov
cmp
mulb
inc
daa
scas
lret
test
das
add
adc
mov
jnp
xor
and
adc
mov
jo
pop
sub
cs
daa
push
cmp
subl
xor
push
fbstp
test
das
sbb
mov
push
cmp
aaa
dec
or
mov
mov
push
lock
subl
stos
loopne
insl
mov
inc
stos
lds
dec
cmp
cmpsl
mov
lea
pushf
das
push
cmp
test
sub
sub
std
xchg
push
xchg
loopne
push
ret
cltd
aaa
mov
add
js
pop
cli
mov
sbb
pop
or
jl
and
in
push
out
int
sbbl
cmp
cmp
aaa
lds
xchg
adc
jae
inc
orl
insl
jbe
cmc
push
cmp
fildl
push
mov
jp
dec
mov
rcll
imul
ds
mov
cmc
sbb
inc
mov
sub
mov
dec
decb
xor
add
decb
out
xor
jnp
dec
pop
push
pop
dec
add
lock
inc
lds
sar
or
movb
inc
jns
jae
jne
scas
cmpsb
leave
dec
mov
outsb
imul
inc
sbb
ja
ds
lret
push
ljmp
gs
fwait
lret
pushl
inc
pandn
push
fsubrp
add
test
and
cmp
in
push
inc
fwait
or
cmp
std
xchg
and
lds
sahf
cmp
mov
cmp
lahf
pop
lret
pop
js
jno
push
es
int3
push
sub
loopne
and
movsb
xchg
repnz
cmp
sbb
push
inc
lds
xchg
ror
push
dec
and
inc
mov
sbb
cli
xor
and
adc
mov
nop
push
out
mov
popw
jbe
rep
mov
sub
popf
ljmp
add
push
ljmp
lret
and
sub
xchg
jne
or
pop
mov
inc
mov
lods
int3
mov
mov
cmp
mov
push
cmpsl
sub
xchg
jb
jno
dec
ljmp
inc
movsb
add
jb
push
xchg
test
and
inc
pop
sbb
gs
jnp
push
lret
dec
stos
fs
fs
mov
jne
sbb
jnp
adc
jnp
sbb
stos
pop
push
stos
push
dec
cmp
push
lahf
out
scas
jne
lret
jecxz
sarb
lds
mov
xchg
jbe
bound
and
cltd
dec
inc
add
mov
aas
add
inc
sub
ret
into
pop
sub
movsl
lds
push
sub
fsubr
loope
cmp
setp
xchg
xor
push
fcoml
mov
pop
inc
mov
hlt
mov
outsb
push
aaa
sub
mov
stc
js
rolb
mov
or
cmp
add
cmp
inc
cld
fstpt
inc
test
inc
adc
aad
ret
mov
lds
fwait
add
xchg
inc
sbb
and
cli
je
jnp
push
push
ficompl
sub
pop
imul
push
inc
xor
mov
jae
xor
jnp
cmp
lcall
cmp
cmp
outsl
or
cmp
testb
mov
lds
sub
and
stos
aas
pop
out
push
in
mov
es
sub
xor
xor
dec
xor
adc
jnp
xchg
dec
push
es
mov
imul
push
sbb
outsb
pop
and
inc
inc
cld
sub
push
sbb
mov
mov
leave
daa
inc
mov
enter
leave
dec
je
dec
shl
cmp
leave
ret
push
push
add
xor
fcoms
push
mov
mov
sbb
sub
in
pusha
dec
push
sbb
mov
mov
lods
std
sbb
pop
push
stos
std
xchg
lock
fidivrs
pusha
je
jns
nop
daa
add
test
cmp
and
imul
fstpl
es
not
push
or
push
inc
bound
outsb
jo
shll
outsl
popa
addr16
xor
mov
cs
pusha
mov
fcmovnb
scas
pop
out
ret
inc
or
stc
rol
loop
jne
or
cmp
cld
mov
and
sbbl
sarb
outsb
je
pop
jecxz
cmp
stos
or
jo
pushf
sbb
jecxz
sub
or
xor
shrl
sbb
es
adc
test
pop
loopne
fnstenv
scas
aas
mov
fcomip
mov
scas
sub
xor
in
imul
mov
cmp
inc
cs
push
in
arpl
jg
ds
push
pop
xor
addr16
out
sbb
aaa
popf
sbb
movb
xchg
sbb
mov
scas
out
scas
arpl
mov
lahf
xor
adc
out
lock
mov
dec
jno
stos
dec
test
repnz
cmp
pop
cltd
or
cmp
adc
adcb
push
fstps
sbb
inc
jae
xchg
test
jmp
fs
out
fs
push
mov
imul
cmp
ss
lds
xor
popf
sbb
gs
mov
stos
test
inc
das
jmp
push
rep
xchg
inc
stos
loope
pop
std
fisubl
xchg
xor
aaa
cwtl
sbb
add
shll
js
aaa
xchg
fidivs
add
aad
pusha
and
mov
loope
pop
mov
pmulhuw
jnp
add
lret
push
test
cld
aas
cmp
sti
ja
jl
cmp
shrb
ret
dec
sarb
ss
inc
pusha
sub
push
data16
cmpsl
scas
jb
dec
jne
xchg
and
sub
cmp
push
push
xchg
cld
sbb
idiv
push
mov
sbb
fnstsw
in
pop
mov
mov
gs
jne
leave
jmp
or
scas
or
push
or
adc
mov
jecxz
repz
aam
and
and
lods
lcall
sbb
sti
xor
push
sbbb
cmpsl
aaa
pop
push
fnstcw
sub
inc
fsubrl
sbb
sbb
pushf
imulb
adc
mull
loopne
xorl
enter
or
xor
popa
arpl
mov
addr16
lret
jb
ljmp
lcall
or
xor
xchg
push
ret
outsl
mov
fs
lds
jb
cmp
aas
pop
fimull
sub
in
out
inc
fadds
jg
shrb
sbb
mov
push
and
and
sub
inc
test
scas
dec
adc
sbb
sbb
dec
inc
mov
cli
jb
into
push
loope
dec
loop
xor
es
incb
sahf
sbb
and
lods
test
fdivrs
or
jo
adc
and
cwtl
cmp
jmp
stos
scas
loop
mov
ret
push
ss
iret
int3
inc
ja
arpl
xchg
xchg
pop
popl
pop
mov
sbb
int
and
xlat
xchg
adc
add
adc
mov
in
fdivl
cmp
push
mov
idivb
lds
nop
fists
cmp
adc
sub
push
lds
fs
sarb
orb
je
pushf
data16
outsb
ficoms
fisubrs
cmp
mov
pop
outsl
mov
pop
scas
inc
push
fistpll
add
in
sbb
ret
push
dec
cmp
cwtl
cmp
int
insb
lds
adc
js
sbb
sahf
adc
fxch
xchg
pop
bnd
bound
cwtl
mov
sarl
jbe
dec
repz
popa
inc
inc
pop
rcrl
loop
sbb
out
incb
push
pop
lds
js
dec
rcrb
lret
incb
bound
shlb
icebp
lcall
inc
sahf
lds
lock
xchg
push
jg
lods
imul
test
mov
repz
cmpsb
dec
dec
mov
mov
mov
cmp
sub
sarl
arpl
add
pop
jecxz
imul
xor
xchg
lds
xor
and
xchg
fnstsw
ss
jle
movsb
pop
scas
lods
int3
or
jns
mov
mov
mov
imul
outsb
xor
inc
insb
fwait
cli
ret
es
mov
fimuls
lods
out
scas
imul
mov
inc
lret
out
out
arpl
pushf
cmp
sbb
scas
add
inc
insb
enter
fsubl
and
out
cs
loopne
inc
cmp
dec
out
mov
inc
inc
jb
sbb
sbb
xor
dec
lahf
imul
mov
repnz
sbb
into
fwait
or
shufps
gs
xor
cmpsb
add
ficoml
jbe
inc
mov
test
mov
mov
loop
out
and
add
or
pop
mov
sub
pushf
scas
push
ficompl
jo
roll
cmp
inc
repz
jecxz
inc
push
add
pop
insb
fnstcw
adc
insl
xor
push
inc
outsb
cmc
inc
out
sbb
popf
and
xor
xchg
mov
stc
stos
inc
shr
xor
xchg
sub
sti
out
jg
and
clc
call
xchg
outsl
inc
mov
xchg
push
inc
pop
in
pusha
sub
cli
aad
loopne
int
sbb
icebp
aas
add
jnp
dec
mov
rcll
sbb
adcb
test
int3
dec
xchg
bound
mov
ds
cmp
sub
mov
insb
lcall
test
rolb
neg
testl
sbb
inc
sbbb
mov
icebp
call
pop
out
pop
cmp
push
or
push
add
pop
add
bound
or
ljmp
fdivr
inc
sbb
adc
adc
adc
adc
fdivrp
imul
fiadds
ret
sbb
jle
and
sub
jle
arpl
imul
scas
imul
and
and
out
ficomps
sbb
xor
push
jo
dec
daa
repnz
inc
pop
cmpsl
ljmp
int3
fstl
inc
xor
into
sbb
mov
dec
pop
jle
xchg
and
adc
mov
xchg
push
dec
outsl
cmp
xchg
mov
and
xor
mov
inc
stos
test
mov
xchg
push
cwtl
push
jle
add
call
in
arpl
lcall
bound
fsubrs
mov
bound
jecxz
xchg
push
adc
jle
push
stos
fisubs
and
jo
mul
add
rcl
arpl
insb
mov
ss
popa
lcall
jno
sbb
dec
loope
push
imul
mov
and
xchg
jo
xchg
and
cmp
fidivl
jmp
aam
cwtl
and
adc
cmpsb
cld
or
mov
loop
adc
in
xchg
int3
dec
imul
adc
aad
dec
mov
mov
movsb
sub
pushf
inc
rclb
dec
xchg
cmp
xor
xor
das
mov
nop
xchg
cmp
sbb
mov
push
sarl
mov
dec
cmp
lea
adc
std
jne
mov
sbb
imulb
inc
adc
add
or
mov
fsubl
pop
xchg
das
jmp
xchg
ffree
fucomip
push
pusha
mov
push
iret
dec
das
ja
jle
xchg
dec
inc
es
push
mov
imul
mov
fbld
and
lret
dec
shll
xchg
mov
scas
adc
lods
sbb
notl
popa
xchg
pop
cmc
mov
sbb
mov
sti
sbb
sub
xchg
test
imul
adc
push
adc
push
push
xchg
int3
dec
mov
inc
mov
and
pop
xchg
xchg
lret
in
movsl
lahf
stos
xchg
loop
cs
and
and
sub
mov
mov
stos
mov
xchg
scas
adc
mov
fnstcw
xor
jle
gs
mov
lds
std
lea
xchg
cmpsl
cltd
xchg
insl
es
sub
testb
ds
adc
cmp
jp
jb
push
jb
and
cs
push
jp
pushf
jmp
mov
or
mov
jnp
jp
add
and
test
and
push
out
test
fdivrs
jmp
mov
lock
test
lcall
jno
or
push
je
cmp
adc
data16
ja
lret
lret
sti
fsubs
dec
mov
xchg
arpl
sbb
dec
sbb
fdivrp
sbb
push
mov
icebp
jg
outsb
test
xchg
cmp
and
lds
pop
ljmp
pop
mov
cltd
stos
int3
lds
sub
mov
cli
mov
incl
pop
ds
mov
popaw
xchg
jmp
push
dec
dec
cmp
jmp
jae
ja
shr
xor
daa
test
aaa
shlb
les
xor
scas
mov
outsl
lds
in
out
sub
and
push
add
aas
inc
arpl
les
or
jb
dec
or
sbb
xor
stos
mov
mov
movsb
dec
fiadds
pop
cld
insb
loope
popa
mov
adc
sub
push
imul
inc
and
aam
testb
xorl
and
cmpsw
inc
push
mov
dec
inc
lds
data16
xchg
enter
imulb
outsb
mov
sub
jmp
jp
push
ds
es
les
jp
test
aam
sub
xchg
in
lret
xchg
ds
adc
jno
scas
cli
into
sbb
mov
popa
das
dec
lcall
data16
pop
cmp
lds
ja
sahf
inc
push
or
mov
aaa
mov
mov
leave
adc
cmp
jecxz
pop
pop
adc
lds
out
lea
and
or
insb
les
rcll
or
mov
push
add
push
xor
rcrb
es
mov
push
and
mov
xchg
neg
cmpsb
out
mov
rcr
jnp
inc
dec
jne
ljmp
repz
ja
imul
adc
pop
int
and
insl
int3
in
pop
jl
xchg
ss
mov
js
pusha
dec
pop
mov
scas
loopne
push
lcall
and
or
ljmp
addr16
fisubl
jns
mov
dec
cmpsb
sbb
insl
aaa
ret
push
gs
cmpsb
adc
lds
stos
inc
cwtl
out
sub
add
imul
pop
lock
ret
push
divl
adc
shr
lods
lock
jp
ret
nop
jb
add
inc
sti
sub
cmc
adc
mov
adc
arpl
mov
inc
jl
jb
push
inc
adc
fisubrl
xor
jp
ljmp
jae
nop
and
sahf
sub
test
and
push
pop
mov
jmp
xor
nop
mov
xchg
stc
xchg
iret
dec
fdivp
shr
loope
sub
sub
xchg
inc
nop
mov
mov
imul
outsb
rclb
lret
and
or
sub
inc
cmp
push
pop
mov
imull
ds
jg
sub
out
dec
dec
mov
les
sub
testb
xchg
sbb
aas
xor
fidivl
pop
sbb
ljmp
test
std
dec
and
push
in
fsubrl
cmp
loopne
out
adc
xchg
cmp
sbb
data16
test
and
mov
xchg
xchg
push
ja
and
in
mov
cli
xchg
leave
sub
idiv
pop
jo
dec
and
fnstcw
popl
or
test
pushf
fdivs
int
cmp
or
lock
sbb
lcallw
iret
xor
jp
pop
aaa
hlt
dec
daa
out
jne
dec
and
xchg
aam
adc
adc
daa
lahf
mov
dec
or
push
mov
mov
out
aaa
and
icebp
xor
dec
mov
dec
push
sub
dec
mov
fwait
push
cmp
inc
leave
in
adc
push
cmp
pop
cmp
daa
aam
pop
mov
ret
dec
repnz
ret
xor
mov
subl
insb
mov
jp
mov
daa
sbb
int
aas
pop
out
lcall
xadd
push
jp
data16
mov
mov
pop
iret
xchg
lret
fstl
lds
and
push
and
xor
and
push
inc
mov
sbb
sub
sbbb
dec
cltd
mov
jg
stos
push
add
jg
jg
out
mov
mov
jb
gs
movsb
mov
inc
lods
enter
je
test
sbb
fstps
mov
rol
loope
cli
shrl
xchg
or
je
clc
cltd
sub
inc
pop
jg
fwait
inc
rcr
mov
cmp
adc
cwtl
call
fistps
bound
or
inc
or
es
xchg
movsb
lock
out
aad
pop
adc
sub
stos
lret
leave
xchg
lret
xchg
xchg
mov
loopne
jb
mov
and
sbb
and
jns
sub
and
jg
data16
out
cmpsb
add
add
jbe
mov
adc
push
aas
inc
fs
jg
stos
add
sarb
push
into
jle
std
adc
in
cmp
scas
adc
into
add
jmp
push
adc
add
mov
adc
xor
fwait
add
js
inc
cmp
xchg
out
insb
dec
jno
fsubl
push
stos
sarb
inc
mov
rorl
imul
je
push
sub
enter
sbb
push
pop
mov
pop
and
xor
inc
int3
push
stos
xorb
jmp
xchg
pop
dec
mov
loop
pop
and
dec
jo
loopne
mov
inc
cmp
test
push
jl
repz
fdivr
dec
dec
pop
pop
jae
ja
inc
stc
add
insb
shrb
sbb
mov
int3
and
dec
jle
cmp
sub
inc
into
adc
pop
xor
jno
inc
test
xor
test
mov
add
push
sub
or
dec
jns
out
add
sbb
leave
ret
sbb
repz
push
jle
icebp
repz
test
inc
cmp
sbb
inc
mov
in
ds
cmovb
adc
cmp
dec
int3
mov
dec
int
jle
add
enter
es
sub
inc
int3
repnz
jb
jp
cmpl
int3
xor
sub
jecxz
lods
mov
cmp
cwtl
nop
std
cld
sub
jae
pop
call
push
cmp
aad
jmp
and
mov
ret
fidivl
cmp
fnstcw
xor
xchg
shlb
insb
popa
cmpl
mov
and
fs
add
sbb
insl
lods
inc
ret
lcall
mov
ljmp
arpl
pop
lahf
idivl
mov
adc
cmpsb
xchg
adc
and
scas
hlt
aad
mov
rclb
popa
movsb
aaa
test
test
int3
cli
adc
inc
clc
lods
adc
sbb
mov
sub
add
pop
in
or
stos
dec
loopne
jbe
arpl
pushl
sti
clc
inc
out
std
and
push
es
pop
test
lcall
and
jae
jge
scas
mov
into
and
jp,pn
das
ret
test
je
sub
cmp
addr16
dec
xor
pop
shlb
and
mov
mov
loope
ret
mov
inc
call
repz
notl
scas
sub
jbe
repnz
jae
mov
xor
je
jge
adc
xor
sbb
aaa
jle
xchg
mov
mov
aad
xor
sbb
lahf
dec
xchg
xorl
mov
cmpsl
lods
inc
test
movsl
loope
lds
mull
jg
enter
xor
out
jbe
inc
ds
filds
shr
out
xor
sub
mov
gs
lret
push
bound
add
aaa
pushf
jmp
pop
xor
pop
mov
loope
and
mov
mov
mov
lret
outsl
add
lret
loop
sbb
xchg
push
decl
jo
ljmp
movsb
and
mov
fidivl
inc
xchg
daa
lcall
jg
cmovno
and
push
out
sbb
mov
fsubl
add
inc
cmpsl
mov
cmp
data16
mov
mov
jbe
push
xor
pusha
popf
mov
outsl
mov
rcr
loopne
dec
jb
repnz
jnp
pop
adc
pusha
xchg
orb
xchg
mov
std
mov
leave
xchg
shrl
inc
ja
cmp
inc
cltd
pusha
sub
not
hlt
add
jb
mov
push
and
out
inc
or
out
pop
fwait
arpl
add
test
cmp
jbe
lcall
inc
or
xchg
in
and
xor
cmp
xchg
and
stos
mov
fs
push
mov
nop
add
into
adcl
mov
les
pop
push
rcrl
scas
fiaddl
push
scas
mov
inc
call
insb
into
pop
lcall
jg
daa
xchg
mov
mov
testb
cld
cmp
stc
bnd
outsl
clc
addr16
or
dec
ja
inc
or
mov
and
jnp
jle
mov
mov
mov
fidivs
insb
and
das
sbb
adc
push
test
push
mov
shll
stc
out
cmp
repnz
dec
mov
fidivl
test
leave
mov
push
and
mov
ret
mov
test
fwait
iret
ds
xor
outsb
jg
stc
stos
jbe
xchg
fdivl
int
cwtl
jnp
call
mov
jl
scas
aas
stos
out
popa
aaa
and
aaa
mov
mov
xor
inc
insl
lds
pop
ljmp
stos
test
push
push
lcall
mov
scas
je,pt
mov
jp
ficoml
jnp
push
popa
shl
or
pop
je
scas
xor
push
sbb
sbb
in
xor
mov
and
xchg
les
inc
cmp
jg
in
out
into
xchg
ds
xlat
pop
and
xor
cmp
into
xor
movsl
insb
inc
add
sbb
sub
add
inc
adc
std
aas
inc
hlt
sbb
adc
xchg
dec
lret
hlt
mov
outsl
pusha
lds
mov
pop
stos
and
in
out
pop
or
mov
sbb
sub
std
rcll
testb
mov
inc
test
out
mov
push
jp
int
jecxz
ljmp
std
xor
push
xor
xor
fistpl
or
xchg
scas
popa
fsub
fisttps
jl
cmp
out
loope
or
cmpsb
add
dec
jp
mulb
das
pop
mov
sbb
mov
ret
cmp
cwtl
enter
imul
xor
push
sub
pop
cmc
fimuls
lcall
xor
jle
lretw
mov
mov
inc
or
sbb
cmp
aad
adc
mov
inc
test
popf
ficoms
movsl
loop
cli
xchg
jl
sbb
lcall
sub
daa
sub
scas
mov
loope
stos
add
add
stc
sbb
lcall
cmp
into
jmp
sub
cs
lods
cmp
or
push
sub
xchg
imul
lcall
dec
ds
mov
jae
nop
testb
add
cmp
das
imul
dec
xchg
pop
fidivl
jnp
jecxz
cmp
arpl
push
dec
and
sbb
lds
icebp
outsl
into
or
mov
in
cmp
sbb
into
push
push
fs
mov
into
push
lock
dec
pop
into
rorl
mov
fstps
push
mov
mov
lods
sti
xlat
sbb
and
cmpsb
cmp
daa
sub
ret
repnz
sbb
and
mov
sarb
mov
bound
mov
repz
and
xchg
pop
jmp
mov
mov
mov
cmp
insl
imul
pop
fucomip
scas
jg
mov
addr16
mov
cltd
sub
sub
bswap
sbb
pop
inc
dec
cmp
xchg
xor
mov
in
adc
xchg
jp
and
xchg
jns
cmp
add
jo
out
sti
les
xchg
lea
jecxz
mov
sbb
and
cmpsb
js
xor
inc
lcall
clc
and
fistl
test
loop
pop
push
jb
lcall
dec
lret
fidivrs
or
es
loop
movsl
dec
arpl
scas
lods
out
push
mov
hlt
cli
mov
bound
inc
stos
loopne
cmp
stos
inc
mov
clc
mov
cmp
stos
jp
repz
pop
add
popa
jb
sti
jo
push
pop
in
push
jb
sub
or
sub
mov
push
call
sub
or
stos
ss
and
and
push
dec
mov
pushf
jne
inc
mov
rclb
daa
mov
frstor
out
inc
cmp
es
mov
test
fldcw
ret
stos
adc
out
adc
mov
data16
sub
test
ret
mov
lret
jp
cmp
add
and
inc
jo
jp
ret
push
test
in
mov
scas
fisttps
pushf
xor
sub
jmp
adc
and
adc
sub
shrl
cmp
pop
inc
or
int3
inc
jmp
mov
clc
nop
ret
sub
jno
inc
inc
push
jo
cmp
fistpl
add
fidivrl
pop
ds
mov
cmp
pop
jnp
aas
mov
mov
scas
push
xor
loopne
cmp
sub
push
clc
mov
ljmp
pop
mov
rol
push
pop
dec
addr16
insb
dec
or
loope
andl
xorb
jbe
arpl
mov
jne
mov
pop
mov
repnz
push
cmp
dec
cmc
lcall
fcoml
scas
nop
enter
loope
add
call
ret
add
xlat
shlb
lock
sbb
pop
pop
jecxz
xchg
dec
and
and
xchg
cmp
mov
pop
pushf
pop
cmpsb
adc
or
aaa
imul
repnz
sbb
xor
inc
fs
sbb
leave
adc
pop
aas
jl
js
xor
ds
loope
sub
fmul
icebp
push
xor
and
adc
sub
xor
xchg
int3
mov
xchg
outsl
orl
adc
sub
dec
lock
sub
mov
pop
imul
int3
xor
pop
sbb
mov
push
ret
xor
aad
jg
lahf
stc
arpl
stos
pusha
repz
popf
pop
mov
cmp
or
pusha
inc
jmp
pushf
mov
test
test
cmp
lcall
sbb
mov
and
stos
and
lock
mov
dec
sub
stos
test
loop
cmp
stos
and
clc
xor
adcl
pop
pushf
dec
mov
cmp
mov
sbb
jmp
mov
adc
fidivs
pop
jnp
popa
dec
stos
inc
imul
ror
mov
fsub
gs
xchg
mov
cmp
stos
das
nop
ds
push
das
pop
and
mov
sbb
or
loopne
sbb
fs
xor
cld
cltd
xchg
push
adc
psubd
testb
jp
mov
out
dec
ds
lcall
push
cli
bound
mov
and
cmp
sbb
lock
mov
dec
jo
daa
imul
cmpsb
jb
inc
sub
aad
sub
ds
or
fucomp
lcall
ds
daa
sbb
mov
pusha
lret
mov
dec
add
pop
pop
mov
mov
loopne
cmp
xchg
out
push
and
sar
xor
fldcw
sbbl
jecxz
pop
pop
cmp
aas
ljmp
fcomp
lock
mov
sbb
mov
adc
pop
test
push
and
fidivrs
ds
jae
out
mov
mov
or
ss
jle
sub
arpl
daa
mov
jp
out
fsubr
sbb
and
add
je
lock
xorl
je
imul
dec
sbb
cmp
popf
aas
jbe
xor
add
mov
pushf
scas
xchg
inc
sti
scas
xchg
lea
jbe
fucomi
jp
data16
mov
es
outsb
popa
arpl
lret
pop
stos
push
cld
lods
mov
fists
sbb
adc
outsb
sbb
pop
xor
dec
mov
outsb
jmp
mov
sahf
aas
or
mov
ds
pop
adc
cltd
incb
and
movsb
test
lods
imull
outsb
xchg
jae
aas
push
mov
push
xchg
jbe
pop
sbb
pop
sbb
jne
lock
sub
pop
aaa
stos
inc
jns
daa
push
mov
out
sub
imul
fimull
jp
cmc
push
sahf
cli
bound
inc
cmpb
lds
cmp
xchg
mov
rcrb
inc
pop
sbb
adc
or
cltd
push
jb
sti
dec
sub
fcmovbe
negb
jg
jns
and
add
outsl
sbb
out
fimuls
cmp
mov
mov
repnz
popa
inc
adc
test
mov
insb
xorl
ljmp
lods
fwait
cmp
mov
sbb
cld
inc
xor
scas
sbb
andl
pop
xor
inc
mov
sbb
jnp
sub
jp
mov
sub
test
or
cmp
xchg
xor
add
jne
cwtl
es
movsb
out
std
jnp
pop
scas
std
sarb
jno
lcall
into
push
mov
arpl
cmp
pop
xchg
mov
inc
mov
jbe
fstpl
push
add
jnp
xchg
mov
mov
and
jle
push
xchg
imul
xchg
cltd
sub
push
jp
cmc
bound
mov
mov
inc
sub
xor
lock
lahf
add
xchg
in
xor
jg
sub
sbb
pop
or
mov
mov
mov
leave
ss
mov
cmp
sbb
je
sbb
jno
push
les
xchg
inc
cltd
outsb
lods
and
lahf
aam
inc
mov
lods
cmp
ret
stc
sti
aam
inc
and
mov
inc
cmp
inc
cs
dec
inc
cs
cmp
repz
adc
or
pop
jg
xchg
je
cltd
mov
and
je
and
mov
cmpl
mov
lahf
xchg
inc
xchg
xchg
inc
das
popa
mov
xchg
mov
and
int3
scas
fstps
sbb
scas
vsqrtps
pop
or
leave
cmp
hlt
add
cmp
and
and
jle
inc
sub
xor
and
mov
ret
fstpl
xchg
push
loope
xchg
dec
shrw
outsb
pop
inc
leave
xchg
test
add
popa
dec
xlat
cmp
jge
jmp
mov
stos
jp
cli
inc
dec
pusha
push
pop
cwtl
adc
loope
jecxz
ss
dec
stc
pop
cmpsl
pop
push
in
mov
xlat
and
lds
adc
mov
xchg
loopne
inc
cmp
fiaddl
xor
inc
pushl
test
xchg
mov
mov
aad
sbb
out
movsl
sub
sbb
adc
adc
fistl
sbb
cmp
sbb
jl
cmp
inc
inc
or
testl
sub
xor
adc
fs
push
and
xor
mov
mov
sbb
enter
outsl
sub
or
cltd
xor
xchg
fdivr
xlat
push
imul
and
sbb
and
jmp
adc
mov
and
mov
in
imulb
dec
lds
iret
adc
jl
sub
push
fadds
push
xor
in
std
or
fsubl
mov
jp
mov
out
mov
sarb
jmp
nop
in
pop
cwtl
sbb
stos
dec
xchg
mov
lcall
icebp
fs
pop
pushf
scas
push
sub
dec
cli
in
ljmp
pop
xchg
stos
mov
dec
dec
or
jmp
xor
mov
cmp
dec
ss
mov
daa
lahf
ret
sub
fbld
es
xor
outsl
pop
fnstcw
out
mov
lret
jns
sub
and
adcb
and
cmp
sbb
inc
repnz
out
sub
mov
scas
pop
enter
mov
jo
xchg
cli
cmp
mov
mov
decl
insb
xchg
ds
dec
jecxz
scas
adc
or
in
cmp
xor
pop
es
inc
inc
cltd
push
imul
or
adc
sub
dec
sub
int3
ljmp
mov
lcall
fs
inc
and
push
stos
xchg
fisubrl
add
mov
iret
repz
mov
mov
lret
mov
ret
sti
jp
mov
loop
add
imul
dec
lods
mov
push
mov
in
mov
mov
ljmp
mov
pop
mov
mov
sahf
cmpsb
das
nop
test
nop
inc
wbinvd
mov
sub
jp
push
test
aaa
sbb
sbb
xchg
pop
cmp
cmp
stos
jmp
jbe
dec
pop
movsl
adc
cmc
and
es
mov
sbb
ret
sub
fcmovu
aaa
mov
cli
ljmp
hlt
jecxz
imul
das
push
push
xor
mov
and
loop
scas
xor
shll
jp
xchg
sub
mov
imul
push
dec
cmpsb
hlt
push
pop
dec
jne
push
ljmp
and
mov
add
cmp
ss
mov
rol
pop
dec
mov
dec
xchg
mov
mov
sub
cwtl
mov
inc
sbb
dec
dec
pop
mov
loope
fmuls
push
cmp
pop
xor
jl
bound
jle
bound
ds
movsl
add
insb
out
fists
stos
xor
xor
test
sbb
inc
ret
cmp
into
fnsave
mov
cmpsl
cmp
or
dec
dec
adc
sub
mov
xchg
fs
cmp
aaa
or
pop
push
mov
cs
inc
dec
inc
dec
stc
pop
insb
test
jns,pt
pop
out
mov
and
dec
mov
aas
adc
movsl
ljmp
pop
cs
jle
add
sti
sbbb
jl
mov
arpl
inc
cmp
adc
mov
fwait
jo
mov
sbb
inc
sbb
scas
andl
push
gs
pushf
data16
stos
cmp
out
js
jl
int3
shll
dec
data16
push
ja
jbe
sub
and
sub
enter
mov
pop
lods
gs
xor
cmp
push
bound
mov
mov
popa
xchg
cmp
leave
sahf
jmp
sbb
pushf
mov
inc
mov
mov
cmp
xchg
dec
and
cmp
mov
push
dec
jo
sar
leave
icebp
sahf
jg
ljmp
fmull
inc
lcall
test
inc
outsw
xchg
outsl
lea
cmp
mov
pop
cld
mov
jle
fdivrl
adc
hlt
jmp
loope
popf
xor
xchg
stc
sbb
lret
ret
dec
cmp
js
push
xchg
scas
jmp
sbb
cld
adc
xlat
daa
ret
ret
cs
pop
and
repnz
mov
sti
push
push
pop
ror
inc
and
loope
mov
or
sbbl
sbb
paddusw
jg
jnp
adc
or
push
int
das
jb
xchg
test
stos
mov
pop
adc
dec
inc
jb
in
insb
cltd
mov
jae
jb
bnd
pop
ret
int
or
add
cli
sub
cmp
sub
sub
pop
sbb
sub
pop
cmp
jo
and
bound
movsl
rcr
cmp
aas
sub
inc
xchg
je
cmpsl
mov
sbb
mov
inc
fidivrs
imul
mov
pop
les
and
mov
mov
adc
cmpsb
mov
inc
and
shr
pop
sub
fidivs
out
or
je
jge
inc
cmp
mov
push
cltd
jmp
mov
lods
insb
mov
in
pop
leave
imul
into
jne
sub
fcoml
or
sbb
rol
insb
push
pop
test
cmpsb
xchg
adc
cmpsl
test
jmp
ret
cmp
sbb
ret
push
inc
lret
xchg
cmp
ljmp
jnp
jo
sub
sahf
adc
xchg
popa
jp
lds
xor
jo
mov
push
lock
pop
call
mov
adc
mov
or
sub
push
cmp
inc
aas
divb
fcmovu
inc
lcall
xchg
sbb
sub
push
cli
jle
add
andb
push
mov
cmp
mov
inc
jmp
xchg
sub
ljmp
pop
es
jno
mov
mov
imul
daa
sbb
pushf
adc
stc
xor
orb
icebp
stos
in
xchg
idiv
sub
cltd
adc
jmp
stc
call
xor
xor
cmp
out
or
fldenv
jmp
inc
xchg
jmp
out
test
out
xor
pop
repnz
arpl
inc
test
and
sbb
shlb
out
dec
mov
aas
sbb
mov
jmp
imul
mov
dec
add
sub
fdivr
popa
out
pop
cwtl
lahf
jg
mov
sbb
aad
inc
mov
and
and
lds
test
jp
mov
dec
cwtl
js
inc
cmp
mov
push
call
xor
fisubrs
pop
ljmp
and
cmp
lea
xchg
jge
js
adc
push
dec
mov
adc
cltd
add
in
jns
jge
insl
adc
aas
inc
inc
cli
dec
sbb
push
add
xchg
or
adc
pop
fsub
mov
pusha
lods
add
test
std
xchg
jnp
pushl
int
cmp
xchg
test
fnstcw
loop
cld
jg
jmp
jb
enter
addb
inc
cmp
imul
or
sub
sti
or
pop
jo
dec
imul
enter
xchg
sbb
and
test
xor
mov
out
mov
pop
ret
jns
js
iret
shrl
lods
or
fmul
push
jmp
repnz
sub
je
fsubr
fcmovnu
dec
pop
cmp
jp
jb
bound
or
xchg
push
aaa
pop
jmp
fsubl
jo
pop
pusha
add
test
sbb
cltd
pusha
jnp
cmpsb
ret
dec
push
push
push
cmp
jle
xchg
jmp
fsts
sbb
ljmp
jg,pn
jae
in
adc
stc
adc
mov
mov
inc
dec
scas
xchg
aaa
mov
inc
and
pop
adc
popl
push
mov
dec
cmp
pop
and
fidivl
pop
dec
sbb
push
jne
lock
inc
or
outsb
mov
xor
scas
jge
and
adc
sarb
negb
lcall
dec
xchg
ret
out
fimull
cmp
mov
xchg
imul
inc
push
inc
lods
inc
test
add
xor
movsb
jl
iret
xor
sti
in
test
pop
mov
pushf
ss
jge
nop
xor
push
sti
push
inc
jg
enter
mov
push
es
mov
out
add
cmp
sub
inc
jb
fsubrl
enter
idivl
ret
movsl
mov
shlb
push
sub
insb
ffreep
fnstsw
lods
xor
inc
lret
ret
xchg
stos
adc
ret
bound
mov
cmovae
fsubl
push
sub
jl
loope
push
popa
imul
daa
notb
push
ss
gs
dec
fwait
lahf
movsb
pop
mov
insb
xchg
gs
repnz
push
sbb
dec
pusha
mov
jmp
cmp
lds
adc
and
add
mov
jle
inc
imul
inc
stc
cmpsb
jge
leave
bound
dec
mov
push
pop
je
lods
mov
adc
add
mov
addr16
and
scas
adc
fs
rolb
repz
xchg
sbbl
pusha
dec
pop
mov
mov
lret
mov
nop
push
ljmp
das
loopne
dec
pop
push
jae
cmp
gs
lds
pop
xchg
ret
std
ss
cmp
gs
stos
and
outsl
cli
lea
sbb
jecxz
out
push
inc
ljmp
ds
stos
sahf
sbb
outsb
mov
sub
jae
inc
mov
mov
stc
test
outsl
mov
in
push
mov
insl
stos
repz
hlt
repz
adc
and
addr16
cmpsl
mov
xorl
xchg
outsl
data16
rorl
push
inc
sub
pushf
popa
jbe
shll
xchg
aad
push
dec
adc
mov
xchg
mulb
js
and
scas
inc
daa
leave
adc
pop
pop
icebp
pop
xchg
mov
inc
xor
imul
add
lea
jns
repnz
lods
xlat
inc
negl
xchg
xchg
jmp
lds
push
fidivl
fnstcw
les
or
aaa
xor
xchg
mov
inc
or
push
jle
es
jb
and
pop
insl
push
cmp
iret
out
pop
jge
inc
push
sub
and
scas
mov
push
fwait
outsb
jno
les
and
sti
mov
dec
rclb
jno
divb
fwait
dec
loop
or
jne
push
sbb
mov
push
ljmp
test
subl
push
jbe
cs
cmp
lods
mov
mov
mov
dec
pop
lret
test
push
pop
inc
fistpl
nop
add
divl
testl
or
xchg
ud1
fdivrl
xor
add
mov
push
test
pminsw
cmc
adc
push
push
push
rcrl
lea
fstps
cs
pop
imul
outsb
incb
rcl
jecxz
mov
xchg
adc
xor
push
pop
mov
mov
cmovno
jnp
sub
mov
push
es
cwtl
dec
rcrl
fwait
or
sti
jne
stos
shll
cmp
and
or
mov
adc
addr16
dec
cli
cwtl
lea
jbe
fcmovb
pop
stc
cmp
xor
jbe
or
pop
aad
test
push
fwait
dec
sub
stc
mov
jge
fs
mov
xchg
repnz
insb
xor
mov
imul
call
mov
push
xlat
out
mov
mov
jnp
es
push
out
sub
pop
xchg
sti
xor
mov
xor
ss
sub
and
stos
sbb
push
cmpsb
mov
mov
repnz
jp
inc
adc
adc
test
mov
or
and
test
push
xor
jmp
and
sub
loopne
stos
mov
sub
add
mov
insl
push
fwait
imul
mov
lods
lds
daa
mov
jmp
pop
test
jbe
sahf
mov
orb
sub
outsb
or
insl
lds
aas
push
cltd
lods
jle
cmp
mov
push
pushf
sub
pop
shlb
push
lods
or
xchg
fildll
aaa
fidivs
out
gs
pop
inc
cmp
dec
mov
xorb
mov
pop
enter
ljmp
mov
shrl
cltd
movsl
cmpsb
mov
loop
mov
stos
xor
push
xchg
cld
cmp
mov
or
loope
sub
out
jbe
ret
ljmp
insb
pop
shll
mov
inc
shlb
inc
push
pop
repz
mov
sub
cwtl
cli
cmp
pop
add
dec
pop
mov
movsl
sub
aas
repz
sub
fwait
adc
fdivp
or
or
or
push
popf
mov
lock
xchg
outsb
outsl
dec
push
fs
cmp
loop
arpl
or
out
in
movsb
ja
nop
hlt
pop
enter
adc
adc
and
out
jmp
inc
and
mov
xchg
scas
push
fldenv
pop
pop
mov
sbb
sbb
cltd
dec
mov
push
lret
mov
loopne
and
xchg
xor
out
rcrl
pop
adc
cltd
mov
ljmp
cmp
cmpsl
dec
and
jno
insb
and
ret
add
aaa
jmp
in
loop
out
lret
mov
push
push
mov
sub
rcr
and
stos
into
aas
ret
ljmp
inc
jle
adc
mov
or
pop
or
cmp
and
cmp
sub
test
cltd
push
movl
mov
jmp
adc
lock
mov
inc
stos
adc
or
and
push
cmp
scas
pop
fs
cmpl
jnp
adc
fimull
outsb
xor
cmp
xor
mov
stc
testl
aas
fildll
xchg
dec
jbe
inc
cmp
stos
stos
pop
xor
xchg
outsb
loop
mov
pop
bound
ret
lea
scas
mov
push
push
xor
sub
push
sbb
fs
mov
fucomp
add
mov
mov
fwait
mov
dec
add
add
inc
inc
push
push
cmp
insb
cmpsb
jno
dec
jmp
mov
ret
fisubl
mov
loope
test
movsl
dec
inc
aaa
xor
push
cmp
xor
arpl
fimuls
inc
jmp
mov
add
mov
cmp
mov
inc
shll
add
or
incb
push
push
imul
cwtl
inc
jge
xchg
add
icebp
testl
lock
xor
adc
orb
testb
inc
cmp
jp
mov
stos
jmp
cmp
int3
stos
sbbb
mov
adc
xor
addr16
cltd
jmp
jmp
mov
cmpsb
mov
test
jge
fisubrs
lds
ret
xchg
push
mov
jle
push
xchg
in
pop
aas
push
mov
push
and
outsl
inc
imul
movsl
inc
outsl
sbb
push
jbe
jecxz
xchg
lds
jmp
or
sbb
cmp
xchg
dec
dec
mov
jae
or
das
mov
or
cs
xor
pushf
cmpsl
jle
adc
mov
xchg
jecxz
insb
arpl
sub
or
mov
pop
pop
int
ja
xchg
cmc
sbb
dec
fldenv
sbb
jl
fwait
sahf
xchg
cs
pop
hlt
jnp
iret
sarl
xchg
stos
inc
test
lds
xor
mov
mov
jmp
sbb
test
xor
loope
add
test
mov
lret
aam
es
outsb
shll
cwtl
xor
rcrb
insb
jecxz
sub
movsb
sbb
jo
and
in
nop
ror
mov
jb
mov
or
inc
xchg
xchg
dec
and
cmp
inc
and
ss
dec
ss
pop
enter
and
add
outsb
xor
lret
or
cmp
insb
inc
fisubrl
cmp
adc
aas
adc
in
cld
inc
incl
add
addr16
mov
ss
jb
insl
lock
setge
mov
sub
jns
ljmp
lock
sbb
or
xchg
push
lret
js
fs
add
ljmp
lock
and
pop
and
fstpt
add
cmpsb
out
dec
les
lcall
mov
add
loop
mov
push
adc
nop
lret
sbb
dec
mov
mov
and
inc
jp
dec
das
ja
xor
into
es
jp
outsb
mov
je
dec
sbb
push
cmp
popa
push
mov
test
std
je
pop
dec
jo
fcmovb
jno
flds
je
and
test
mov
out
into
cmp
inc
push
nop
sub
test
xchg
ficompl
xor
pushf
incb
xchg
gs
adc
lock
jns
mov
cmp
mov
mov
loope
cmp
sbb
clc
mulb
push
je
and
pop
pop
push
inc
pop
scas
pop
cmp
dec
xchg
add
test
fldcw
fsubl
pop
xchg
sub
sbb
lods
pop
inc
scas
adc
cmp
jno
les
xchg
loope
mov
jae
test
pop
out
out
shlb
add
lret
cmp
or
es
icebp
sarb
rcl
loop
cli
lock
jmp
sbb
jmp
cmp
mov
add
push
aas
int
pop
push
xchg
pop
outsl
pop
push
sub
pushf
jae
adc
clc
push
pop
sahf
rolb
shr
sbb
aam
cmp
faddl
or
push
push
repnz
push
fwait
pop
push
sbb
fdivs
ficompl
rcrl
push
pop
mov
or
cmp
jg
fidivl
cmp
mov
pop
and
pop
inc
cmp
push
push
and
xchg
jne
xor
and
movsl
add
enter
nop
jne
sub
repnz
and
mov
out
aad
sbbl
jg
out
push
sub
inc
pop
cli
mov
or
mov
xchg
out
mov
daa
mov
out
cmp
popf
ljmp
mov
test
sbb
cmp
adcb
ret
push
mov
xor
jnp
cmp
sbb
hlt
imul
jae
cltd
mov
add
mov
fsubrl
jmp
adc
jmp
push
jmp
pop
enter
scas
dec
lahf
daa
mov
aam
outsl
jge
out
push
cmp
mov
daa
vdivpd
cli
xchg
loopne
aaa
cmp
fwait
jmp
mov
repnz
push
arpl
lret
pop
jge
and
mov
xchg
insb
pop
and
lds
aad
inc
mov
lret
push
imul
sarb
sti
dec
jbe
sub
and
cmp
xor
mov
sbb
mov
xchg
imul
stos
jp
push
sbb
decb
mov
in
sub
ret
xchg
icebp
popf
imul
daa
scas
mov
sbb
mov
mov
cli
sub
popf
out
xchg
loop
int
xchg
lock
xchg
movsl
aas
fwait
jne
in
test
jb
testl
dec
xor
negb
or
xor
leave
imul
sub
or
lea
or
pushf
jmp
pushf
jmp
lret
push
popa
inc
loop
or
sub
xor
cmp
sbb
fists
pushf
inc
jmp
outsb
gs
jg
outsl
out
data16
dec
xchg
adc
out
sti
sub
jno
pop
mov
or
arpl
mov
jae
add
aaa
pop
xchg
pop
popl
push
lret
rcrl
inc
cmpsl
pop
mov
cmpsl
outsb
sti
mov
jp
pop
xor
push
mov
mov
ret
xor
in
sub
fsts
orl
ud2
or
sahf
test
popf
xchg
xchg
fdivs
loopne
insb
jno
push
shll
lods
xor
pop
jne
mov
fwait
inc
or
loopne
push
xchg
fdivrs
jp
lret
sbb
adc
dec
and
push
cmp
jo
andb
stc
out
push
jp
aas
add
lock
or
cmp
popa
adc
inc
adc
popa
xorb
cmpsb
pushf
inc
pop
lds
dec
leave
push
test
jae
push
int
mov
dec
push
xchg
neg
jecxz
mov
repz
and
jno
cld
or
arpl
cmp
out
cmpl
mov
das
sbb
in
clc
inc
cld
inc
and
sbb
insl
lret
cmp
mov
inc
cmpsb
sub
arpl
mov
aad
fwait
mov
sub
sub
std
pop
add
inc
mov
jp
add
incb
cmp
sahf
dec
mov
cli
pop
rorb
imul
push
pop
sbb
inc
add
sbb
roll
mov
fcoml
xchg
test
cmp
xchg
push
xchg
out
ud1
push
jae
sbb
aaa
mov
add
rol
pushf
jl
ja
mov
movsb
dec
xor
push
call
and
xor
nop
jg
scas
or
subb
jg
jno
ljmp
mov
sbb
enter
sahf
xchg
sbb
mov
add
mov
add
fwait
mov
mov
jp
inc
jbe
addr16
bound
pusha
gs
xchg
testb
mov
jge
and
aaa
xor
pushf
cmp
dec
into
scas
pop
sbb
xor
mov
cmp
dec
sbb
add
jg
push
push
ret
push
jne
addr16
xor
xchg
pop
mov
subl
es
pop
jp
inc
or
mov
and
push
addr16
scas
outsb
mov
xor
add
cmp
in
mov
mov
adc
inc
out
aad
sbb
jg
lock
scas
out
cmc
out
cmp
pop
fcompl
outsb
inc
scas
es
fcmovb
test
testl
mov
and
test
dec
sub
and
sbb
cmp
rcl
stos
cli
sbb
jb
shrb
bound
mov
jmp
into
dec
nop
xchg
sub
sti
jb
xor
lock
scas
cmp
gs
jb
cmp
cmp
jb
negl
lea
xor
cltd
stos
bnd
outsb
ljmp
jmp
lds
movnti
scas
lock
mov
mov
and
mov
leave
mov
imul
arpl
and
int3
rorl
frstor
out
dec
xor
pop
cltd
inc
push
arpl
sbb
les
in
daa
dec
mov
push
dec
loop
sbb
cmpsl
les
mov
decl
fidivrl
pop
bound
ljmp
lcall
das
jp
mov
ds
dec
dec
inc
mov
jae
jns
cmc
pop
inc
inc
xor
cmp
push
sub
jb
push
bound
cmp
jae
xor
mov
push
leave
aad
sbb
xor
arpl
pop
sub
gs
pop
daa
das
mov
or
sub
and
hlt
mov
ljmp
aaa
lret
cli
ds
xor
movl
jns
sub
out
rolb
jmp
arpl
arpl
jmp
dec
enter
mov
outsl
in
mov
es
and
inc
test
dec
fdivl
mov
inc
fcmove
ljmp
sysret
inc
incl
out
aaa
mov
or
xor
and
push
test
adc
adc
rcrb
inc
mov
lcall
ljmp
repnz
jmp
xor
icebp
fsubrl
in
sbbb
jmp
or
imulb
fucomp
push
je
es
ds
mov
jbe
int3
sub
mov
sbbb
xor
cmp
inc
cmc
daa
sub
popf
and
xor
push
dec
adc
dec
ret
mov
xchg
lds
pop
bound
ljmp
adc
mov
or
sub
inc
ss
sets
mov
mov
int3
outsb
repnz
sub
sbb
inc
in
mov
sub
mov
stc
cwtl
pushf
data16
dec
imul
mov
cmp
push
mov
clc
xchg
data16
dec
sti
bound
rcrb
inc
and
pushf
pop
pusha
sub
lods
bound
in
inc
std
cmpsb
and
push
jge
mov
mov
fcmovnu
ret
push
xor
gs
push
xchg
mov
subb
push
sbb
push
and
fisttpll
pop
cld
or
pop
dec
cmp
or
cmpsl
push
inc
push
and
push
leave
mov
mov
stos
je
inc
xchg
popa
xchg
xchg
push
adc
setl
scas
ret
scas
or
lahf
lea
das
mov
and
dec
outsl
and
jne
call
int
mull
scas
out
ds
inc
dec
inc
ja
pop
inc
dec
js
movsb
mov
inc
pusha
adc
outsb
dec
inc
pop
jle
sbb
jb
into
cmp
popa
push
imul
mov
xchg
test
pop
sbb
adc
jmp
pushf
mov
xchg
scas
and
mov
insb
bnd
iret
mov
fiaddl
idivb
mov
push
cmp
jbe
mov
adc
lcallw
roll
mov
cmp
pop
cli
imul
mov
add
xchg
ljmp
ljmp
stc
aaa
loope
cmp
inc
mov
pop
inc
sbb
psllw
ret
mov
outsb
or
gs
mov
mov
dec
dec
inc
jbe
inc
mov
dec
mov
bound
pusha
fidivrs
ljmp
jb
sbb
cltd
int3
std
sbb
or
iret
adc
mov
mov
jmp
pop
popa
sub
lcall
mov
insb
dec
fldcw
mov
mov
pop
push
mov
stc
cmp
pop
imul
mov
and
aam
fsubrs
dec
cmp
roll
insb
xor
scas
mov
inc
sti
xchg
mov
loope
imul
pop
pop
jle
mov
xchg
dec
jne
lahf
and
fsubl
mov
cmpsl
push
pop
cmp
outsb
movb
xchg
in
in
sbb
jg
aas
scas
lds
mov
loop
lret
and
sbb
imul
loope
dec
aad
push
push
mov
arpl
hlt
adc
cs
imul
or
push
push
xor
inc
fldt
mov
aas
unpckhps
dec
in
fcompl
lret
jb
jns
lret
push
adc
mov
scas
sbb
and
push
xchg
xchg
mov
adc
aad
out
popa
lret
mov
dec
insb
fs
stos
rolb
inc
pop
stos
mov
dec
lods
inc
cmp
lods
push
lcall
mov
or
fs
gs
outsb
outsl
imul
das
or
jb
push
frstor
cmp
and
mov
dec
fcompl
outsl
sbb
imul
notl
and
test
outsl
xor
dec
sbb
push
cli
movlps
pop
stos
cmpsb
orb
mov
xor
cmp
fsubrs
imul
loopne
push
mov
dec
adcl
stos
xor
in
sub
lds
inc
push
push
xchg
out
psrad
add
int3
mov
pusha
sbb
or
cmpsb
dec
gs
popa
sub
inc
bound
mov
ret
stos
sub
mov
adc
popa
mov
jp
out
mov
pop
mov
push
repnz
jb
xchg
sbb
pop
ds
or
sub
aaa
xor
repnz
insb
cmpb
push
push
fidivrl
loopne
add
sub
lcall
int3
pop
pop
cli
or
push
imul
ficompl
push
push
jo
jmp
shll
pusha
in
mov
je
dec
inc
dec
push
in
ljmp
enter
sarb
and
dec
pop
jb
in
pop
or
loop
mov
or
pop
sti
bound
aaa
jge
fisubl
pushf
stc
jb
cltd
movsl
int3
enter
in
or
enter
mov
sub
sub
pop
out
mov
or
leave
arpl
sbb
push
or
imul
jp
add
test
cmp
outsl
mov
push
repnz
or
dec
add
push
mov
push
cmp
dec
int
loope
fs
mov
xlat
inc
push
stc
ljmp
ret
fst
les
imul
xchg
cs
nop
out
int3
inc
xor
mov
adc
dec
lods
arpl
pop
cmp
and
pop
aas
ret
dec
std
push
push
fsubrp
jns
mov
dec
std
std
sarb
jb
cwtl
fwait
outsl
pop
mov
sahf
scas
dec
test
jle
pushf
mov
cmp
orl
sub
mov
movsl
lock
ret
in
lahf
movsb
ret
mov
lahf
mov
or
int
and
cmpsb
cmp
stos
imul
lds
sti
cld
sub
push
pusha
data16
fiadds
shll
xorl
push
dec
lock
and
aas
andl
inc
xor
xchg
add
pushf
xchg
add
inc
push
mov
sbb
push
pop
out
jp
and
mov
js
or
xor
test
add
hlt
fwait
mov
xorl
jg
sub
dec
scas
ds
test
dec
inc
and
out
fimull
pop
inc
test
push
inc
pop
push
mov
inc
clc
out
jb
outsb
cli
pop
movsb
lret
inc
pop
dec
lcall
mov
outsl
loopne
sbb
neg
sbb
xchg
xor
scas
ja
inc
or
gs
lods
push
jo
inc
into
jne
fs
dec
cs
stos
mov
or
dec
scas
lea
sub
dec
outsl
cmp
lds
stos
add
cmp
sti
stos
and
test
mov
inc
fimull
add
pop
cmp
pop
outsl
leave
mov
and
xchg
push
push
pop
arpl
xchg
or
or
xchg
pop
lret
mov
out
ret
ret
call
mov
mov
stos
sub
mov
sarb
in
jp
mov
out
mov
sbb
sub
and
in
cmp
outsb
pop
daa
and
pusha
cli
lea
cmp
sbb
ljmp
inc
mov
aaa
xchg
outsb
clc
mov
enter
sub
fdivrs
pop
scas
mov
jb
inc
jbe
out
call
lds
out
cli
out
or
into
scas
in
in
in
and
sbb
cltd
sub
and
fwait
push
arpl
sbb
inc
pop
adcl
ss
jmp
xchg
xchg
loope
add
xchg
sbb
cltd
xor
mov
loope
push
stos
adc
pop
aas
sub
xchg
enter
and
cmp
jbe
inc
scas
jp
imul
adc
lds
dec
cmpsb
and
jne
es
pop
decl
add
jb
fisttpll
addb
push
jbe
mov
dec
pop
cwtl
iret
jne
jnp
sbb
mov
mov
pop
xor
pushf
test
mov
shll
jp
adc
push
loop
lcall
mov
icebp
jl
sbb
enter
or
out
popa
ja
jmp
cli
in
sbb
jnp
call
xchg
insb
fsts
sub
pop
pop
inc
icebp
sar
sahf
push
xchg
push
mov
cmpsl
repnz
sbb
je
mov
es
cmp
adc
push
or
dec
push
xchg
ret
jb
dec
ret
jge
dec
sub
loop
xchg
push
sbb
cmpsl
ja
mov
outsl
sub
jle
call
add
cmp
and
lret
and
enter
cmp
mov
ret
sahf
jae
mov
call
ret
push
inc
jns
pop
stc
in
jnp
leave
mov
adc
lret
das
pop
out
xchg
sbb
fisubrl
push
or
dec
push
mov
pop
cmpsb
inc
mov
ljmp
mov
lret
in
and
push
push
xchg
ret
in
pop
mov
jbe
push
jno
pop
ss
inc
inc
sub
stos
sahf
jne
mov
dec
lea
js
sbb
dec
xchg
pusha
dec
push
ja
mov
push
fidivl
or
adc
sbb
inc
mov
orl
lret
mov
sub
xchg
ljmp
aas
pop
push
pop
add
out
pop
and
in
xchg
leave
cltd
cmp
out
daa
sbb
push
mov
insl
jp
cmpsb
mov
mov
das
stos
push
out
xchg
xor
imul
mov
xor
inc
loop
enter
and
lock
add
or
pusha
and
mov
mov
xlat
xchg
mov
sahf
ficoml
pop
lcall
repnz
lahf
scas
inc
dec
sbb
pop
jnp
popf
mov
mov
and
mov
sbb
loop
sub
imul
lahf
add
popa
mov
mov
mov
inc
pop
xor
cmpsl
push
pop
add
pop
jmp
sahf
daa
sub
pop
mov
out
dec
dec
stos
push
jmp
incb
pop
pop
jp
aam
lods
insb
icebp
push
add
inc
dec
mov
sub
imul
xor
push
rcrb
dec
pusha
scas
xchg
cmp
add
rcr
out
and
fidivl
pop
clc
cmp
mov
xor
mov
pop
jb
jb
push
sbb
daa
pop
into
cmp
cmpsl
repz
mov
dec
ss
or
lcall
jo
stos
mov
int
jg
mov
adc
cwtl
jns
imul
aas
mov
jg
shlb
fdivr
jo
jbe
push
and
cmpsl
jae
cmpsb
add
rclb
das
mov
jg
or
mov
xor
pop
cmpsl
arpl
outsl
mov
dec
cmp
and
dec
inc
lahf
push
dec
pop
dec
shl
lahf
call
or
ret
rorl
jbe
mov
cmc
andl
pushf
and
lds
push
jo
in
inc
mov
es
xor
mov
push
push
mov
lock
pop
lcallw
pop
add
cmp
lods
jb
sbb
mov
icebp
adc
inc
adc
dec
jne
jp
jae
cltd
pop
es
jle
sub
mov
mov
popf
cs
jle
inc
push
mov
xchg
mov
lock
xor
inc
fimull
push
adc
negb
inc
dec
fisubs
jnp
dec
into
int3
test
add
int3
scas
in
sub
inc
loopne
mov
pushf
daa
fldcw
decb
repnz
sub
xor
xchg
and
mov
aas
enter
sar
cmp
lea
ja
mov
mov
mov
adc
inc
sarl
dec
test
sahf
jb
push
out
sub
or
fs
in
jg
cmp
and
in
cmp
scas
scas
bound
ret
leave
xor
hlt
pop
bound
xchg
das
sub
rcrl
pop
imul
pop
push
test
jns
or
inc
mov
es
and
cld
call
cmp
ret
sub
jg
test
cltd
push
mov
adc
repz
jb
xor
xor
std
shlb
mov
add
int3
push
inc
cmp
stos
jbe
lret
add
dec
push
sbb
mov
or
push
and
add
add
jmp
mov
push
sub
add
pop
lahf
and
iret
push
mov
test
insb
pop
mov
xor
daa
xchg
inc
jnp
xlat
pop
pop
inc
cmpsl
push
jb
xor
imul
or
insl
adc
push
hlt
bound
adc
jecxz
dec
ljmp
mov
xchg
stc
add
sub
das
push
mov
dec
bound
cltd
push
push
fdivl
inc
and
and
sbb
sbb
sahf
xchg
xor
xchg
fidivrl
sbb
add
lods
and
outsb
mov
adc
out
aas
or
cmp
dec
push
addr16
jg
stos
cs
push
addr16
ss
push
xchg
scas
xchg
out
enter
inc
cmpl
cmpsl
hlt
jmp
in
call
dec
push
loopne
fldt
outsb
jb
adc
sahf
mov
inc
stos
jno
push
aas
out
repnz
test
xchg
push
frstor
inc
scas
test
xchg
into
dec
mov
cmp
pop
in
xchg
add
daa
xchg
lods
cmp
cmp
gs
sbb
stos
fnstcw
mov
enter
xchg
xchg
mov
dec
sub
inc
bound
sahf
jmp
repz
fwait
sub
in
xlat
fbstp
je
call
fcomps
jno
cltd
jne
pusha
add
jbe
xor
jnp
mov
push
dec
sub
lahf
dec
push
dec
cmp
push
mov
dec
push
pop
outsl
cmp
mov
mov
add
jle
jae
jo
loope
pop
push
out
sub
mov
inc
inc
pop
cmc
xor
push
shl
imul
bound
jecxz
xchg
jp
dec
add
xchg
jne
mov
sbbl
sbb
enter
divb
adc
ret
jmp
std
dec
cmp
cmpsb
and
pushl
and
dec
mov
mov
movsl
push
ret
adc
gs
pop
fnstsw
mov
pop
push
cltd
cmc
xchg
and
scas
jbe
mov
lds
mov
xor
fldenv
in
fldenv
push
jnp
adc
push
test
jle
xor
jb
stos
pop
xchg
stos
pop
xchg
fsubrs
outsl
pop
jns
xor
fdivr
push
ret
or
sbb
lret
stos
dec
push
imul
rcl
mov
lcall
lcall
jmp
andl
psubd
mov
pusha
std
push
hlt
sub
dec
inc
mov
cmp
sarb
sub
xchg
lahf
pop
jp
xchg
fisubrl
ja
js
and
sbb
rclb
hlt
mov
ret
imul
fisubrl
sbb
push
add
push
jp
inc
cmc
pop
mov
push
or
or
hlt
aaa
mov
stos
sub
mov
cli
mov
into
cli
aam
popf
dec
xor
dec
mov
fildl
push
mov
jo
fucompp
cmp
sbb
xchg
sub
inc
and
xor
mov
sbb
fs
lods
mov
inc
in
test
jnp
rcrb
inc
scas
fyl2x
inc
xchg
dec
cmp
test
jl
call
cmp
mov
dec
movb
cmpsb
fildl
inc
cmp
pusha
outsb
shrl
jns
aaa
dec
or
subl
jbe
or
sub
jne
cmpsl
push
sbb
inc
cld
test
xchg
cli
cwtl
xchg
fdivs
sub
jb
jp
aad
lret
cld
cmc
pop
inc
bound
push
scas
xchg
add
ficoml
mov
arpl
sub
mov
dec
pop
les
out
and
or
sbb
push
lcall
push
loopne
dec
adc
ret
loope
adc
ljmp
jle
in
shlb
push
outsb
cmc
xchg
mov
into
insb
cltd
addb
xor
cmpsl
clc
cmp
mov
lcall
insb
negb
xchg
sub
mov
pop
xchg
mov
cmp
mov
out
scas
cmpsl
ds
fs
jg
mov
inc
cmp
sbb
cmpsl
and
test
inc
scas
xchg
xchg
mov
inc
or
fs
lret
xor
jmp
and
or
rorl
mov
stc
and
mov
outsl
leave
std
dec
aas
sbb
or
cltd
sub
or
scas
loopne
add
test
aad
sar
lods
xor
push
sub
and
mov
mov
sub
aaa
sti
xor
push
ret
xor
mov
sub
xor
shll
cmpb
stos
mov
mov
inc
xchg
jb
inc
scas
repnz
xor
idivl
test
add
push
lret
cmp
xchg
mov
pusha
xchg
lds
fiadds
test
dec
push
sbb
cmp
std
pushf
ljmp
dec
sbb
cld
pop
inc
outsb
mov
sbb
or
aaa
sahf
cli
cmp
or
aad
cltd
daa
shrl
mov
mov
or
lcall
and
and
cmp
jns
rcrl
aaa
and
push
jecxz
test
fwait
test
mov
xchg
cmp
mov
cmp
and
sbb
xor
ljmp
cmp
pop
inc
cmp
leave
lahf
ljmp
je
lock
or
fmull
jp
out
add
lret
test
mov
pop
lods
mov
cmp
loope
inc
mov
stc
leave
pop
xchg
gs
stc
xor
cmp
imul
jmp
sbb
gs
and
in
push
sub
sahf
gs
fstps
inc
scas
sahf
jb
mov
imul
push
push
imul
dec
mov
dec
push
in
outsl
sub
mov
mov
sbb
inc
xchg
xchg
es
pop
dec
fidivrl
cld
notb
rcll
mov
or
hlt
mov
daa
sbb
jp
xor
cli
pop
cltd
ss
push
push
dec
cs
jecxz
cli
enter
dec
popa
mov
cmp
xlat
dec
dec
dec
push
ljmp
jno
daa
dec
mov
xchg
dec
cmp
sbb
hlt
data16
repnz
xrelease
push
dec
popa
mov
stc
xchg
inc
sbb
mov
fimuls
inc
jne
filds
inc
mov
mov
imul
push
in
imul
pop
xchg
fisubl
loop
leave
dec
dec
add
jmp
sarl
test
xor
mov
repnz
xor
outsl
xor
sbb
inc
pop
inc
imul
sbb
repz
pusha
cmp
icebp
jae
xchg
out
aas
loopne
imul
adc
aaa
std
ja
sub
sahf
sbb
ljmp
stos
ret
push
inc
fs
imul
mov
xchg
stc
gs
data16
sub
imul
add
ljmp
test
addl
ret
test
xlat
hlt
cmpsb
out
pop
test
cmp
add
xchg
loope
addr16
addr16
lds
push
mov
je
xchg
cmp
fists
xchg
cmp
lods
insb
cwtl
loopne
ret
mov
push
sub
cli
jae
arpl
add
adc
test
push
sbb
inc
cs
adc
pusha
dec
pop
pop
xchg
stos
push
push
dec
into
sbb
in
mov
mov
xchg
jp
add
jg
hlt
int3
mov
sub
pop
jg
push
push
dec
stos
xor
fdiv
ds
aaa
fists
bound
cltd
or
clc
mov
mov
scas
dec
fisubrl
pop
shll
loopne
scas
fiadds
inc
fs
ljmp
scas
dec
jns
xor
movb
mov
rcll
cmp
scas
fsubl
dec
jp
repz
insl
push
and
adc
add
cli
mov
add
or
sbb
out
sub
and
sbb
jmp
jnp
movsl
cmpsl
pop
push
mov
in
daa
xor
stc
add
xchg
jp
lock
cmpb
outsl
stos
jmp
lahf
jno
push
mov
lds
cmp
stos
and
xchg
and
enter
ljmp
push
loope
and
sbb
ss
bound
insl
into
sti
cwtl
out
in
cmp
es
xchg
xchg
out
push
pop
int3
mov
imul
jle
dec
les
xor
dec
mov
arpl
cmp
imul
cli
mov
fwait
sbb
insb
mov
arpl
cmc
or
cs
dec
jp
pop
lods
push
xor
and
out
mov
sub
dec
cli
cld
push
dec
pushf
xchg
inc
loopne
jo
out
dec
adc
icebp
jecxz
dec
jae
test
pop
jae
dec
iret
insl
loop
shr
xorl
adc
or
test
sub
mov
fldl
xchg
aas
xchg
bound
hlt
imulb
aas
xchg
iret
adc
daa
inc
das
sub
cltd
scas
out
mov
repz
ljmp
cli
test
lods
popa
lds
jae
mov
sbb
mov
in
sub
pop
dec
cmp
into
xor
negl
dec
shll
xchg
mov
xchg
dec
lcall
pop
cmp
jno
inc
popa
sub
mov
dec
xor
or
sub
popa
sub
mov
dec
pop
daa
jne
lahf
mov
loope
cwtl
out
into
inc
adc
sbb
mov
xchg
ficompl
mov
sub
and
outsb
and
clc
mov
add
or
and
aas
aas
xor
sbb
or
rclb
add
pcmpgtd
or
dec
imul
push
repz
dec
cmpsb
decl
adc
inc
je
movb
fwait
add
xchg
dec
sbb
popa
push
out
inc
pop
pusha
inc
ljmp
jb
xchg
jbe
pop
add
inc
xchg
lods
dec
clc
shlb
mov
nop
ds
cltd
inc
pushf
popf
push
push
fildll
addr16
fiaddl
dec
xchg
stos
add
sahf
sbb
arpl
imul
sbb
push
cltd
inc
in
daa
test
cwtl
in
cmp
sbb
dec
mov
dec
iret
inc
andl
inc
adc
js
mov
jmp
jb
sbb
sbb
repnz
cmpsb
cltd
mov
mov
adc
popa
and
fisubs
out
push
pop
inc
and
xor
inc
sbb
scas
adc
pop
and
hlt
mov
or
ljmp
cwtl
dec
sub
pop
es
cmp
pop
push
ret
mov
ljmp
inc
xchg
sub
jmp
and
mov
int
ficompl
and
push
flds
fcoms
loop
dec
xchg
cld
mov
lahf
fdiv
iret
popf
xor
lods
lods
lret
stos
xchg
fwait
xchg
ret
jle
adc
xor
clc
inc
xchg
jg
or
imul
and
push
cld
jns
mov
lds
push
mov
sbb
int3
xchg
ljmp
out
les
imul
aam
jp
adc
clc
cli
or
jae
inc
jp
ja
out
shr
stos
pusha
mov
test
rcrb
inc
mov
arpl
dec
arpl
movsb
test
mov
outsl
adc
cmp
mov
sahf
scas
mov
dec
das
push
lcall
inc
dec
sub
lret
fsubrs
das
jnp
inc
inc
push
aaa
mov
sbb
das
push
pop
jecxz
aam
arpl
mov
dec
fcomp
mov
lods
inc
je
aam
repz
push
out
sub
xor
out
mov
fnstsw
adc
cmc
sub
xorb
ja
scas
pop
sbb
ret
sahf
outsl
mov
call
hlt
adc
add
rorb
popf
xor
imul
sbb
add
cltd
loopne
in
adcl
int
popf
dec
aas
xchg
test
push
popf
aam
les
sub
adc
inc
ja
jb
mov
mov
jecxz
cmp
mov
out
sub
shlb
jno
mov
xchg
ds
sub
fisubrl
imul
or
fbld
stos
lahf
dec
push
test
stc
imul
paddw
testb
inc
jo
push
cs
test
mov
scas
test
addr16
nop
jne
sbb
fstps
pop
mov
fcoml
lods
sbb
dec
add
fisubrl
pop
shrl
xchg
cmp
fwait
adc
adc
mov
fwait
mov
adc
and
mov
decl
mov
inc
test
xchg
push
aaa
fcomi
mov
mov
shlb
jne
add
jmp
dec
sub
jb
mov
push
pushf
cmp
or
mov
xchg
sub
loope
inc
inc
cmc
dec
mov
jae
and
jb
fidivs
dec
jnp
sbb
popa
push
push
jo
xor
jbe
mov
sub
jae
or
shll
mov
loop
imul
lds
movsl
cmp
push
in
lods
sub
and
out
inc
or
sarl
lret
fisubl
je
mov
outsb
sbb
mov
insb
pop
popa
mov
mov
mov
mov
bound
scas
push
pop
mov
loope
xchg
xor
mov
fcompl
mov
adc
aad
mov
mov
les
cmp
test
inc
sbb
xchg
es
inc
aad
push
push
pop
push
sbb
mov
dec
popf
sub
into
xor
mov
ffree
in
inc
mov
jp
mov
mov
push
lcall
insb
cmp
add
and
or
notl
sub
test
fisubl
sbb
xor
popf
fdivrl
cmp
test
notb
mov
mov
hlt
mov
cld
stos
dec
repz
and
daa
pushf
cmpsb
cltd
movb
lret
dec
jge
jp
inc
mov
push
xchg
je
cmp
push
and
xchg
cmp
sti
outsl
mov
mov
popf
adcl
aam
push
xchg
sub
and
add
mov
cmp
inc
fwait
enter
push
xchg
mov
lret
jo
dec
mov
mov
or
sub
inc
cmp
std
sub
mov
inc
pop
mov
fistl
jnp
lret
stos
jle
js
mov
hlt
pop
invd
cli
loop
xchg
dec
mov
cmp
addr16
adc
mov
arpl
sarb
ret
negb
cs
enter
repnz
push
loop
insb
test
push
dec
sti
fdivrl
cmpsb
loopne
mov
fdivrs
push
dec
lret
mov
pop
divl
dec
mov
push
mov
das
dec
mov
inc
lcall
pop
imul
push
lds
sub
aaa
out
addl
fcoml
fsubrp
pop
mov
cmp
into
sbb
xchg
arpl
repnz
mov
outsb
cmp
leave
pushf
or
pusha
shll
jbe
xchg
or
scas
add
scas
stos
mov
inc
movd
cmp
push
xchg
out
lret
mov
sbb
es
fidivrs
xor
add
outsl
xor
or
xor
sub
ja
test
adc
xor
enter
add
shrl
loop
jp
lret
xorb
ret
bound
daa
xchg
dec
xor
leave
outsl
mov
jae
test
call
and
or
cmp
movb
test
idivl
bnd
pop
mov
imul
aaa
and
push
stos
inc
sub
js,pn
lds
pop
roll
mov
jae
je
push
mov
pop
or
fsubr
insb
inc
push
scas
and
lods
add
das
mov
bound
xor
out
in
dec
mov
fidivrl
sbb
insb
bound
bound
ds
dec
fdivs
and
jno
dec
jbe
repz
loopne
je
cmp
mov
mov
out
or
clc
jae
js
mov
xorl
pop
bound
loop
adc
sbb
push
sbb
imul
leavew
loop
lds
aaa
out
push
ret
xor
inc
cmp
xchg
and
or
mov
out
push
jg
push
push
mull
sbb
mov
fimuls
mov
pop
jl
in
sti
or
jl
and
xor
ds
dec
cli
addr16
dec
and
es
mov
pop
test
aas
std
addl
movsl
in
xor
enter
pop
mov
mov
mov
in
inc
jg
cltd
xor
mov
clc
jne
sti
aaa
sbb
pop
sbb
sbb
ficoml
sub
out
inc
mov
xchg
mov
scas
out
jmp
xchg
cmp
insb
lahf
push
lea
mov
loope
ror
sahf
lods
xchg
and
pop
ficomps
out
mov
or
stc
jmp
xor
push
cmpsl
jnp
xchg
xchg
fcoml
cwtl
push
pop
pop
outsl
mov
fcomi
jmp
mov
addr16
std
and
and
pop
and
fidivrs
or
out
jmp
mov
jmp
stos
into
popf
cmp
ret
jg
mov
fs
sbb
dec
out
push
aaa
xchg
mov
leave
vaddsubps
inc
sbb
subl
imul
sbb
decl
mov
xchg
adc
outsb
test
sbb
adc
jp
sbb
repnz
push
outsl
out
rcrl
sarb
stc
mov
je
xchg
arpl
jb
or
fs
fstps
dec
shr
jne
cwtl
les
xchg
arpl
fiadds
daa
data16
out
out
shlb
gs
shr
lcall
fs
push
clc
sub
cmp
repnz
aad
in
sbb
outsl
adc
fwait
jp
test
mov
and
xor
jle
mov
pop
mov
int3
xchg
xor
pop
sub
push
hlt
bound
sub
bound
or
es
imul
push
pop
je
in
mov
adc
xor
data16
adc
lcall
je
mov
xchg
negb
add
cmpsl
notl
mov
inc
mov
xlat
mulb
sbb
stos
push
lret
adc
stos
cmpsl
dec
push
mov
cmp
cmpb
bnd
daa
lret
bound
pop
or
inc
shll
dec
mov
imull
adc
pop
and
lahf
outsl
call
pop
push
out
lds
pop
mov
pushf
enter
fisubrl
and
ljmp
xor
xchg
add
push
dec
pushf
pop
aaa
sbb
or
jne
xchg
mov
aam
leave
out
pop
xor
scas
jae
xchg
rorl
insb
push
lcallw
stos
pop
dec
cwtl
cmp
subl
mov
sbb
dec
pop
add
jmp
cmp
imul
jno
mov
rcrb
lahf
lds
jecxz
aaa
or
incl
push
xchg
inc
outsl
hlt
icebp
ds
mov
addr16
lret
out
cmp
jo
loope
jmp
add
push
out
adc
pop
in
xchg
jb
stos
mov
mov
mov
rorb
imul
movsl
ret
js
enter
mov
dec
ss
push
xchg
mov
jge
loopne
aad
js
jl
sbb
jecxz
jbe
pop
mov
imul
pop
cmc
int3
out
jo
xor
pop
jp
cmp
cmp
inc
ds
inc
lret
in
add
adc
dec
mov
cmpsb
mov
inc
out
das
push
adcl
and
mov
adc
stos
aas
imul
cs
xchg
push
mov
mov
cmp
incb
andb
mov
push
mov
push
mov
adcb
mov
mov
imul
lds
pop
loop
jo
lods
fdivrl
inc
insb
mov
sbb
insb
inc
cmp
into
and
mov
add
test
add
xor
push
dec
adc
jnp
inc
mov
cmp
mov
stos
or
push
xchg
mov
jbe
aaa
mov
mov
mov
push
imul
pop
adc
sbb
cmp
das
xorb
out
out
clc
cmpsl
mov
jecxz
mov
gs
cmpsb
nop
jns
repnz
shll
xchg
jbe
dec
xor
mov
pop
or
xchg
jbe
cmp
repz
mov
jg
out
ljmp
shrb
cmp
ret
clc
and
popa
xorl
leave
gs
push
sub
fisttps
and
aas
andl
and
or
xor
cmpsb
movsb
dec
into
push
mov
jb
xchg
jecxz
mov
cmp
stc
sahf
scas
lods
out
movsl
mov
xchg
inc
dec
jnp
cs
repz
push
jmp
pop
std
mov
xchg
jno
jno
out
jg
fidivl
shlb
lock
dec
test
sbb
imul
stc
fidivs
push
stos
jl
es
js
sub
pop
push
lcall
fidivs
push
bound
mov
lock
test
xchg
push
rclb
out
leave
inc
add
ds
stos
pop
pop
imul
cmp
mov
repnz
outsl
shrl
movb
loop
sub
adcb
out
jmp
pushl
xchg
lock
fistl
sbb
out
or
inc
outsl
jge
push
xchg
stos
fs
jo
add
pop
outsl
sub
cmp
repz
in
arpl
pop
dec
cmp
pop
out
repz
lea
mov
xchg
cltd
fsubp
dec
sahf
stos
push
sbb
pop
cmp
dec
or
lods
sub
cmp
push
xor
cltd
sub
iret
dec
es
dec
jae
jp
mov
xor
out
xchg
mov
mov
jb
pop
fstps
inc
hlt
out
mov
lea
sub
cmp
loop
out
mov
mov
stos
mov
inc
push
ja
ret
and
inc
sbb
dec
xchg
xor
mov
lea
mov
or
jns
sub
aas
mov
ss
je
negl
adcb
inc
in
xchg
repnz
in
ficoms
xchg
ret
pop
ljmp
jb
rcrb
iret
inc
and
pop
scas
jnp
mov
inc
lcall
cmp
adc
mov
sbb
icebp
out
mov
gs
insb
jmp
and
jl
sub
sbb
movb
lret
pop
mov
mov
mov
mov
mov
inc
or
rcr
add
sub
and
int3
inc
push
ficomps
sarl
inc
arpl
rol
jmp
ret
jo
lea
or
jmp
mov
mov
fs
mov
xchg
fistpll
xchg
ljmp
imul
mov
dec
dec
mov
mov
pop
xchg
daa
mov
jo
dec
fs
loop
pop
xor
popf
and
pop
shlb
sbb
sub
cmp
pusha
pop
lret
ret
sub
ljmp
js
jb
and
stos
bound
push
sbb
fiaddl
xchg
loop
sbb
dec
sahf
cmp
push
xchg
push
fdiv
leave
stos
fcoms
add
pop
xchg
ds
sub
xchg
dec
pcmpgtb
bound
mov
scas
in
xchg
mov
add
xchg
sbb
sbb
inc
scas
lock
jns
mov
pop
and
or
pop
dec
dec
jp
adc
cmpsb
dec
mov
push
clc
leave
xor
rolb
mov
repz
fidivrs
std
insb
out
sbb
add
mov
jns
xlat
push
sub
hlt
outsl
fisttpl
push
jbe
fcompl
xchg
mov
push
xchg
sbb
fstpl
cmp
inc
dec
xchg
mov
push
and
leave
call
or
nop
loop
dec
ret
bound
and
call
xor
sbb
dec
aaa
sub
loopne
cmp
shrb
insb
xor
punpckhdq
ds
cmc
out
mov
orl
test
push
add
out
aaa
fidivrs
leave
mov
bound
fwait
mov
jo
sbb
inc
mov
push
xchg
shll
fstpl
testb
inc
add
es
bound
mov
jb
mov
sbb
jno
adc
sti
push
jb
dec
jnp
add
ss
leave
dec
cmp
bound
jg
push
popf
pop
xchg
in
sahf
jno
push
cwtl
sbbb
sbb
arpl
adc
push
pop
arpl
xor
or
cltd
test
add
mov
into
mov
jecxz
inc
sub
jmp
fs
repnz
xchg
je
xchg
inc
movsb
aaa
scas
ret
shrb
popf
mov
and
jb
sbb
xchg
data16
adc
mov
and
or
xor
and
les
push
in
es
lcall
cmp
adc
scas
and
or
data16
pop
mov
mov
mov
sub
rcrb
dec
pop
mov
adc
enter
test
mov
lock
adc
cmp
fisubrl
xchg
cli
pop
orl
sub
mov
rorl
jne
dec
inc
scas
adc
sbb
xchg
repnz
mov
mov
sub
int3
ret
test
xchg
stc
fcmove
dec
xor
fimull
push
cmpsl
cli
mov
xor
call
stos
into
push
ds
mov
cmpsl
out
jmp
outsb
inc
sub
fsubr
pop
dec
mov
jmp
jb
stc
ret
rolb
mov
xchg
shrl
sbb
fs
push
cltd
hlt
and
jo
jno
ret
mov
mov
and
test
jo
adcl
or
push
scas
cltd
sub
pop
mov
add
and
movsb
add
mov
arpl
cmc
addr16
xlat
in
mov
mov
dec
icebp
insb
push
mov
push
fidivrs
dec
insl
jnp
and
push
inc
andb
shlb
dec
sbb
pop
out
mov
lock
mov
popf
jne
mov
or
xchg
sbb
fnstcw
out
pop
and
fsubrl
pop
fucomip
mov
jmp
nop
test
arpl
xchg
js
insb
ficompl
dec
sbb
and
leave
mov
xor
mov
dec
lcall
adc
addr16
dec
xchg
jmp
xchg
js
shll
push
and
int3
clc
out
cmpsb
xor
out
aam
imul
cld
aaa
outsb
lods
jmp
jae
jg
in
or
call
das
aaa
aaa
jo
jl
aad
repz
mov
loope
loop
mov
pop
xor
ds
stc
mov
inc
push
pop
xor
scas
das
icebp
popa
or
lock
cli
imul
ds
ret
xor
sbb
mov
mov
call
jmp
push
jmp
pop
leave
cltd
sub
outsl
push
inc
adc
mov
bound
ljmp
cmp
icebp
xchg
ljmp
ds
fisubrl
cli
imul
and
sahf
xchg
or
movl
jno
pop
adc
sbb
xchg
mov
or
sbb
dec
outsb
cmp
cli
or
pop
inc
pop
dec
cld
ficoms
push
in
pusha
ljmp
xor
mov
xchg
lret
sahf
xchg
cmp
ds
pusha
jecxz
scas
repnz
jp
add
ficompl
push
dec
xchg
pushf
imul
test
inc
push
lds
mov
scas
push
mov
dec
lds
gs
das
add
sbb
pop
out
sbb
inc
xor
arpl
inc
aad
andl
sahf
and
mov
lea
pop
ret
nop
lahf
cli
pusha
idivb
nop
sbb
stc
mov
stos
mov
iret
scas
insb
lret
cmp
adc
insb
mov
in
lcall
fisubs
mov
jns
cltd
pusha
ficomps
lret
pop
aas
sub
dec
das
xor
mov
and
xchg
pop
stos
shlb
push
inc
fnstcw
dec
repnz
cmp
outsl
aad
or
mov
pop
dec
jo
or
cmpsb
and
jg
cmp
pop
ficompl
mov
lea
imul
bound
test
mov
cmp
cli
xchg
sub
pop
insb
pop
pop
jle
cltd
cmp
push
sbb
sub
loope
adc
push
dec
mov
pop
pop
push
add
push
dec
gs
jmp
mov
in
repnz
sbb
sub
push
stos
ja
add
push
pushf
xor
daa
pop
lret
cmpsb
mov
mov
out
jmp
je
cmp
mov
mov
jg
mov
and
mov
mov
sbb
data16
mov
scas
repz
sub
dec
lods
sbb
mov
sub
pushf
das
orl
pusha
ficomps
cmp
mov
sbb
mov
fidivrs
fidivrs
adc
movb
cwtl
inc
stc
scas
add
adcb
pushf
arpl
jp
test
addr16
cmp
mov
popf
adc
mov
jg
fildl
xchg
mov
mov
xchg
out
into
jp
add
addr16
outsl
inc
dec
xchg
lcall
pop
sub
push
sbb
and
lea
mov
adc
aas
mov
mov
mov
add
sbb
incb
and
pop
adc
daa
fs
pop
sub
pop
hlt
lcall
fcmovb
or
xor
mov
jno
pop
or
loop
adc
enter
and
imul
pop
sbb
sub
imul
xchg
stos
mov
sbb
cs
push
xchg
push
cmp
fsts
out
push
ret
xchg
sarb
je
mov
cmp
arpl
std
js
dec
push
push
dec
popa
js
mov
cltd
sahf
xor
lds
out
sbb
repz
ljmp
loop
mov
cs
push
xchg
jmp
ja
lret
out
fisubrl
lcall
jmp
rdpmc
adc
mov
inc
push
dec
adc
lret
fldl
add
cli
xor
cmpsb
mov
pop
mov
jle
scas
fs
mov
push
cli
push
sub
testb
mov
aas
and
mov
dec
out
mov
and
call
hlt
xor
inc
adc
jae
push
out
daa
idivb
cmp
das
mov
inc
stc
cmp
or
mov
movsl
push
ss
leave
sbb
hlt
xchg
idiv
outsl
jl
lahf
inc
mov
lds
push
xor
shl
mov
mov
lcall
mov
and
mov
out
mov
cmc
dec
mov
fs
setl
sub
aaa
inc
je
js
mov
and
leave
lods
mov
lock
xchg
xchg
cmc
addr16
ds
jg
push
cmpb
insb
cmpsl
sbb
sbb
jb,pt
xchg
xlat
push
cmp
icebp
xchg
xor
mov
dec
fsubr
adc
repnz
sbb
mov
call
dec
mov
lcall
jbe
jmp
mov
fiaddl
adc
fldl
fs
mov
mov
subb
icebp
cmp
stc
fsubl
mov
scas
mov
jg
and
jnp
add
sbb
std
insl
inc
sbb
aad
pop
mov
imul
jnp
push
jmp
mov
mov
cwtl
test
adc
cmpsb
jno
mov
loopne
icebp
fwait
inc
test
xor
mov
bound
inc
subl
sub
pop
jno
adc
pop
mov
cld
setp
inc
and
xor
sub
leave
xchg
aam
jmp
loop
or
ss
xchg
inc
jp
out
imul
je
aaa
leave
fiaddl
jo
mov
nop
pop
inc
popa
dec
push
or
cmpsb
std
stc
xor
mov
cmpb
xchg
out
mov
jae
mov
cltd
sub
push
mov
pop
sub
inc
test
push
fimull
outsb
mov
lea
lds
rclb
movlps
nop
mov
sbb
and
mov
mov
xchg
sub
jbe
or
flds
or
ret
jb
stc
mov
dec
fiadds
and
xchg
test
mov
lea
out
aam
or
xchg
lcall
lcall
push
mov
jmp
pushf
ds
push
mov
sbb
inc
xchg
push
xchg
lea
inc
push
adc
ja
push
out
pop
es
adc
sub
cmp
push
fisttpl
add
movsl
pusha
jle
int3
push
rolb
cmp
leave
inc
stc
ja
loope
sbb
xchg
insb
clc
fwait
mov
popa
sub
and
mov
mov
push
imul
sub
add
fstp
xor
iret
int3
lret
ret
minps
shlb
and
sahf
pop
out
loop
pop
jbe
arpl
cmp
shrb
dec
sbb
push
cwtl
pop
repnz
mov
in
push
and
mov
push
inc
pop
mov
add
shll
scas
lods
ret
jbe
stos
stos
imul
dec
fidivl
mov
mov
jno
fisubl
mov
lock
js
cwtl
mov
inc
repz
js
mov
cli
roll
mov
out
cmp
js
scas
adc
sbb
adc
mov
xchg
inc
pop
push
jne
mov
mov
inc
icebp
rcll
jp
inc
stc
xor
int3
imul
or
pop
cmp
push
cmpsb
bound
xchg
ficoml
ret
cmp
mov
inc
ljmp
and
push
inc
stos
cmp
cmp
shlb
fwait
insb
and
scas
push
aad
outsb
inc
cwtl
dec
out
mov
enter
pop
rcrl
push
cmp
jb
imul
fnsave
dec
inc
cmp
inc
push
or
pop
lds
inc
or
adc
xor
cmp
imul
popa
and
xor
sbb
incl
and
and
and
ja
into
outsb
sarl
in
jae
mov
inc
fisubl
cltd
push
xchg
xchg
dec
sub
int
cltd
cli
loop
push
out
clc
jl
stos
pop
test
hlt
push
mov
jmp
insb
inc
cmp
xchg
inc
xchg
sti
add
lret
loop
xor
ja
jae
pop
insl
shll
fisubrl
mov
jae
push
lods
cmp
ficompl
bound
hlt
and
mov
fcoms
pop
sbb
xchg
inc
xchg
dec
inc
fstpl
cli
dec
das
mov
fcoml
jecxz
fisubs
cld
mov
add
and
test
lret
int3
aaa
add
ret
or
and
xor
out
pop
dec
popa
and
outsb
sbb
sbbl
and
and
out
sub
jns
and
jmp
inc
adc
sub
pop
ljmp
or
lods
scas
push
push
and
mov
jae
sbb
dec
int3
jp
add
pop
mov
addb
cli
push
jge
fld
cmc
push
orl
sub
imul
push
scas
push
mulb
xor
mov
ljmp
xchg
xlat
sarl
xor
mov
pop
inc
cld
daa
sbb
sbb
sub
and
jno
xchg
out
push
dec
push
out
jl
loope
sub
sti
mov
cltd
outsb
cmp
xor
adc
sbb
mov
cmp
xchg
hlt
cltd
fstl
out
lea
ret
push
arpl
mov
mov
lret
imul
insb
or
je
in
fiaddl
std
cmpsb
xchg
jecxz
in
inc
or
jge
subb
roll
sbb
add
sub
popa
xchg
test
adc
mov
or
fs
cs
add
lcall
push
scas
hlt
ret
stos
fs
rclb
pop
cmp
mov
pop
imul
imul
stc
mov
daa
sub
sub
in
cmp
sub
and
lahf
mov
push
enter
rcrb
jp
out
stos
xor
sti
push
lcall
sarb
out
outsb
or
inc
push
jo
stos
pop
push
add
les
xchg
jb
push
cli
xchg
inc
in
push
jecxz
fdivrl
mov
jg
mov
push
sub
and
fidivrs
outsw
sti
cmp
icebp
mull
cmp
in
jns
cmp
lock
and
xor
js
imul
mov
and
mov
sbb
adc
cmp
jecxz
sbb
pusha
lock
insb
hlt
jae
pop
inc
shlb
xor
cs
rcl
or
mov
scas
inc
pop
or
jo
dec
dec
lea
mov
mov
and
push
outsb
movsl
push
dec
fs
pop
cltd
sub
mov
mov
push
xor
daa
push
out
cmpsb
daa
mov
dec
or
dec
cltd
pop
pushf
xor
shll
outsl
es
jb
addr16
dec
cmp
xchg
sub
pop
insl
xchg
dec
or
cmp
div
bound
arpl
pop
ret
jbe
pushl
lods
sbb
cmpsl
je
arpl
and
loop
stos
push
and
cmp
aas
and
xor
out
lock
dec
mov
sti
lahf
pop
add
stos
cmp
mov
xchg
repnz
inc
xchg
shr
inc
fidivrl
loopne
cmp
stos
xchg
sbb
jmp
or
ficompl
fwait
mov
adc
fnstcw
in
xor
cmp
push
xor
ret
fisubrl
cmp
je
ljmp
movsl
int3
loop
mov
cmp
lret
inc
mov
leave
shrb
outsb
sahf
push
insb
pop
xchg
sbb
test
or
repnz
push
je
mov
icebp
scas
int
mov
sbb
add
outsl
push
adc
dec
cs
mov
mov
fsubl
sahf
inc
ss
scas
cltd
lods
sbb
rorb
fdivp
xchg
les
jae
aaa
les
push
inc
out
stos
xor
mov
call
xchg
add
sbb
cmc
inc
add
cltd
cmp
sub
jo
cs
orl
pop
in
sbb
pop
stos
cmp
mov
xchg
jne
pop
shlb
mov
xor
leave
mov
clc
push
mov
scas
mov
fstpl
pop
pop
lret
les
mov
ljmp
daa
xchg
and
test
es
insb
sub
aaa
popf
sbb
gs
xchg
stos
add
cmp
fisubrl
stos
cmp
lret
push
cmp
orb
cmp
call
clc
xchg
xchg
jo
shll
add
stc
sub
bound
scas
f2xm1
xchg
imul
scas
mov
mov
dec
jo
lahf
pop
or
mov
es
int3
sbb
dec
inc
das
inc
adc
out
sub
movsl
mov
sti
cmpxchg
es
ret
sbb
inc
arpl
and
dec
dec
gs
sbb
push
icebp
cmp
inc
inc
dec
jge
out
cmp
lock
add
add
mov
push
aaa
andl
outsl
mov
inc
pop
add
fisttps
jae
and
cmp
lret
jp
fnsave
sub
mov
jb,pt
xchg
lcall
cli
xor
push
adc
dec
pop
or
inc
es
sahf
sub
and
push
dec
dec
jo
jo
xchg
mov
shrl
push
mov
lahf
mov
out
arpl
call
rolb
jmp
lret
imul
jbe
sarl
xor
adc
insb
push
or
fnsave
push
lock
mov
jp
mov
sbb
mov
sub
loop
xor
cli
sbb
gs
fldenv
pop
mov
mov
test
and
repnz
inc
xor
dec
sbbb
in
fcmovnu
mov
mov
imulb
sbb
jnp
or
push
adc
dec
dec
ret
movsb
cmpsb
imul
sarl
in
scas
cs
stos
dec
mov
push
fiadds
insl
or
iret
push
mov
and
xor
ja
cmp
imul
fisubl
cmp
repz
pop
loop
pmaxsw
pop
jae
push
dec
dec
add
cmp
or
test
ds
sub
es
mov
fisubrl
mov
push
xchg
mov
push
inc
push
cmp
xor
push
adc
stos
mov
lods
emms
and
inc
jle
cmpsl
mov
push
pop
imul
ss
push
repz
cwtl
push
fisubrl
jmp
ds
cmp
ret
lods
in
pop
jmp
in
loop
imul
inc
adc
mov
icebp
cmp
push
add
je
inc
xor
scas
or
mov
je
sbbl
xor
mov
addl
jg
bound
ljmp
dec
cmp
fdivrl
ret
cmp
jae
fxch
test
jle
adc
aaa
call
dec
cmpl
pusha
dec
inc
mov
xor
mov
cmp
int3
sbb
xor
popf
outsl
into
jo
bound
inc
cli
call
push
ljmp
or
jns
je
ss
in
into
xor
inc
stos
testb
dec
dec
adc
das
inc
dec
dec
push
pushf
inc
fwait
pop
xor
sbb
hlt
push
ret
jp
mov
jmp
and
xor
jne
jno
fwait
push
cmp
popa
and
inc
pop
dec
stc
jb
cmp
add
stos
lret
and
adc
insb
lods
rcrl
sub
cs
fisubrs
sub
jne
add
mov
aas
into
dec
cmpsb
bound
push
jo
aaa
fs
pop
shl
fidivl
jns
jge
aaa
ljmp
aas
xor
add
and
push
fdivrl
xor
daa
shrb
outsl
mov
int
lahf
hlt
jo
pop
xchg
jb
sbb
cmp
sub
jnp
pop
cli
mov
dec
sub
jb
mov
jb
mov
pop
bound
ffreep
pop
xchg
jo
sbb
push
mov
pop
loopne
mov
andl
fs
cmp
sbb
test
jno
pusha
mulb
xor
scas
out
xor
add
and
stc
xorb
mov
inc
arpl
add
out
jnp
dec
cmp
lea
mov
push
cmp
cmp
loope
xor
and
xor
leave
divb
sub
mov
fs
and
xor
sub
mov
lods
pusha
inc
aaa
sub
jmp
bound
pop
jmp
and
pushf
fimuls
jnp
jbe
push
sbb
mov
cmp
xor
inc
inc
popf
aaa
out
ret
aas
jmp
or
inc
jbe
jo
sub
test
xchg
cmp
xor
or
fidivl
outsl
add
mov
out
adc
mov
pop
loop
pushf
pop
xchg
add
sbb
lcall
jns
cmpb
lea
sbb
les
and
inc
push
jns
inc
and
cmp
mov
mov
das
jp
pop
callw
leave
or
cmpsb
sub
pop
or
adc
imul
jp
pop
clc
and
pop
push
xchg
sbb
mov
popf
insb
sub
inc
int
notb
ljmp
cmp
ds
jne
xlat
subl
push
nop
jae
mov
test
xchg
pop
pop
jmp
dec
add
lods
adc
insb
loopne
dec
lock
mov
push
pop
pop
inc
popa
ljmp
xchg
nop
loopne
dec
pop
jo
sub
and
sti
outsb
jp
loopne
dec
insb
jmp
jne
push
cmp
mov
mov
fwait
and
stos
add
mov
loope
arpl
popf
xor
ret
cmp
push
dec
sbb
push
dec
cmp
or
and
mov
rcrl
xor
stos
mov
fbld
nop
xor
loope
call
jnp
fiaddl
sub
enter
adc
push
shll
mov
imul
aaa
rcl
stc
xchg
daa
inc
mov
jbe
ds
push
xor
mov
pop
mov
push
mov
out
leave
jmp
bound
pop
es
xor
adc
mov
push
mov
stc
push
sbb
push
jl
pop
xchg
ss
jp
mov
loope
and
cmp
lods
adc
out
das
gs
jb
ficomps
repnz
mov
data16
push
and
pop
addr16
pop
sbbl
sub
pop
push
dec
cmp
push
and
cmp
sub
xlat
in
dec
and
jp
and
imulb
sub
test
test
mov
dec
sahf
jmp
jmp
inc
xchg
mov
cmp
jmp
xchg
mov
dec
ljmp
idivb
add
jl
test
mov
mov
inc
lahf
mov
inc
mov
pop
scas
mov
pop
sub
push
pusha
out
xchg
xchg
cltd
jno
in
cmp
mov
jmp
es
pushf
inc
cmp
xchg
loopne
bound
push
inc
cmp
je
pusha
add
shrl
jbe
sbb
ret
jmp
push
adc
pop
push
setl
xor
adc
shlb
pusha
push
pop
enter
fcomps
fs
jg
add
push
out
loop
adc
loop
sub
xor
arpl
ret
jbe
sarl
hlt
xor
push
lods
and
mov
sti
xor
cmp
sub
dec
mov
shrl
adc
aas
adc
jp
and
dec
dec
leave
fnsave
dec
cmp
pushf
repnz
jp
add
mov
xchg
clc
push
mov
divb
call
repz
dec
sbbl
mov
std
lret
or
sti
jno
fdivr
sub
push
fcomi
sbb
cmpsb
cmp
pop
mov
sbb
cmp
inc
sub
xorl
es
mov
divb
sahf
dec
xchg
inc
cmp
sub
mov
decb
cltd
push
dec
stc
cli
dec
xchg
push
inc
push
aad
insl
and
sbb
lret
xchg
cmp
aaa
in
aad
je
xchg
leave
in
jns
sbb
cmpsb
xchg
or
or
outsb
mov
xchg
or
outsl
cltd
and
loopne
jp
and
mov
sbb
cld
add
pop
sub
or
and
xchg
aaa
aas
mov
cmpsb
rcr
rorb
test
push
aaa
icebp
stc
test
jp
push
stos
pop
in
into
mov
jmp
stc
mov
mov
adc
jle
and
add
mov
daa
lea
ficompl
push
dec
push
sbb
in
or
test
mov
lcall
js
and
and
dec
les
xor
pusha
fdivr
dec
jecxz
lds
jno
imul
xor
mov
sbb
popa
ljmp
repz
ljmp
mov
shlb
add
and
lods
out
xor
call
in
and
pop
call
add
arpl
roll
sbb
pop
push
fisubrl
ja
push
and
sub
incb
cmpsl
push
sub
lock
xchg
mov
repnz
xor
pop
cmp
mov
test
imulb
mov
arpl
inc
push
sbb
inc
sub
ljmp
call
fimull
mov
popf
mov
jae
and
std
push
cmpsb
jo
aaa
sbb
push
or
sbb
cmp
pushf
xlat
sub
inc
add
cltd
add
adc
dec
shlb
xchg
inc
inc
and
in
cmp
sbb
rsqrtps
and
mov
test
nop
aam
mov
dec
mov
pop
jp
inc
jbe
mov
xor
push
test
push
adc
aaa
sub
mov
inc
dec
xor
das
sbb
push
push
push
xchg
leave
inc
xchg
xchg
dec
sub
adc
jnp
dec
inc
jae
loop
xor
es
cmp
inc
repnz
ljmp
imul
adc
es
popa
mov
jmp
fdivp
test
xor
cmc
loope
jno
jnp
ret
cmp
xor
ljmp
incl
cs
cmc
xor
bound
rorl
lahf
dec
test
sbb
or
lds
aam
pop
lds
jo
lock
and
dec
adc
mov
addb
fwait
jbe
sbb
pop
inc
sub
sub
inc
ljmp
fisubrl
or
cmpsb
and
ret
sbb
scas
xlat
and
fxch
mov
lock
pop
sbb
mov
and
das
jl
pop
out
pop
lds
inc
outsl
lea
jg
daa
lds
lret
or
jb
pop
dec
push
pop
sub
test
dec
adc
repnz
jle
insb
add
pop
jmp
stos
scas
ds
subl
inc
and
pop
or
xchg
pop
mov
jmp
cmp
je
or
and
jp
dec
mov
into
pop
xor
jle
stc
sub
pop
ret
cld
pop
jecxz
jmp
mov
cmc
xor
add
add
xor
loopne
aaa
inc
sbb
xor
xchg
imul
adc
data16
push
sbb
outsb
or
dec
mov
aas
adc
cmp
push
cmp
dec
lahf
or
add
xchg
addl
mov
out
mov
mov
pop
repz
inc
mov
mov
lods
mov
jle
stos
xchg
call
out
stos
out
push
rolb
fidivrs
xor
sbb
inc
xor
dec
ficoms
inc
int3
test
mov
ss
mov
xor
ret
stos
mov
fldcw
sbb
xchg
aaa
inc
adc
push
popf
mov
xchg
fwait
insb
and
push
sbb
aad
dec
cmp
sbb
and
sti
es
jae
xchg
jb
jecxz
xor
cmpsb
imul
jmp
mov
lock
fimull
or
sub
push
frstor
ret
jmp
add
xor
data16
mov
loope
popa
mov
cs
sbb
xor
mov
mov
pop
inc
mov
push
cmpsl
jmp
xchg
sub
jl
mov
lea
std
lods
mov
ret
and
mov
test
ljmp
jne
inc
xchg
sbb
mov
adc
lret
inc
mov
sbb
mov
cmp
ret
mov
add
push
jae
bound
stos
mov
inc
jno
in
xchg
les
aas
push
outsb
pop
stc
pop
lds
hlt
and
andl
lahf
out
lock
and
aad
pop
inc
xor
push
lea
add
add
je
lock
stos
mov
lods
popa
lea
call
pop
or
sub
mov
mov
dec
push
jns
pop
jmp
adc
jo
push
and
dec
outsb
fs
cs
mov
push
sbb
and
in
arpl
mov
jo
es
adc
jle
aas
cmp
cmp
insl
push
jge
jge
adc
and
mov
lcall
jnp
fimull
int3
rol
jne
dec
ret
and
xchg
cmp
ss
movsb
test
push
fs
arpl
xchg
gs
aad
fcomi
add
pop
jg
mov
or
popa
call
ljmp
fidivl
xchg
or
add
fidivl
inc
test
ja
inc
inc
outsb
subl
insb
in
adc
push
es
outsl
dec
iret
mov
mov
add
sti
jecxz
push
and
test
loop
ret
repz
lret
sub
sbb
pop
and
mov
inc
push
into
out
cli
xor
test
inc
daa
sbb
test
mov
repz
ss
cmp
xchg
or
inc
jo
shrl
notl
out
cwtl
fimull
push
mov
xchg
jo
mov
mov
cs
mov
js
mov
cwtl
jo
mov
std
ret
cld
into
stos
rcrb
mov
xchg
xchg
test
adc
bound
stc
pushf
push
sub
mov
mov
mov
cmp
cmp
xlat
enter
enter
hlt
pusha
jb
dec
movsl
data16
in
movb
mov
dec
hlt
jae
fimuls
test
clc
imul
xchg
hlt
pop
les
popa
and
sbb
outsb
mov
stc
sahf
addl
js
cltd
fdivrp
jmp
adcb
sbb
cmp
cs
and
js
xchg
jae
sub
ja,pt
mov
dec
sub
jae
ss
fcmove
fwait
cmp
push
adc
cltd
stos
jns
cmp
and
test
xchg
js
cmp
pop
loopne
cltd
enter
lret
adc
and
insl
call
cmp
and
fsub
and
js
ja
inc
add
ds
cmpsb
mov
imul
and
pop
xchg
inc
icebp
bound
lahf
aaa
push
mov
jo
stos
shlb
pop
repnz
lret
cmpsb
jmp
push
and
dec
jbe
jmp
dec
adc
bound
jno
jb
pop
nop
jge
insl
sbb
movsl
jmp
cmp
xchg
pop
faddl
mov
jne
mov
inc
pop
lahf
mov
loop
in
push
stos
xchg
ljmp
push
mov
ret
dec
ret
fistpll
inc
js
jb
push
neg
jle
scas
xor
mov
mov
push
cmp
mov
push
iret
stos
pusha
js
movsb
clc
lea
pop
sbb
mov
inc
cli
out
das
js
ficoml
push
lock
jecxz
xor
rcrb
cmp
push
stos
ljmp
clc
push
sub
sahf
pop
push
sub
enter
test
mov
mov
sahf
test
rorb
pop
jae
incl
imul
push
scas
ljmp
and
add
mov
lcall
data16
dec
insb
orl
pop
jno
sub
out
pop
xchg
add
cmp
sbb
outsb
sahf
sub
sar
inc
and
dec
inc
xchg
aaa
test
pop
xchg
es
push
add
push
jmp
mov
outsl
clc
cmp
adc
pusha
sahf
mov
dec
aas
and
loop
dec
xor
mov
inc
fiaddl
pop
push
dec
inc
push
jp
negb
pop
js
inc
sbb
ljmp
jns
cmc
and
neg
testb
aas
or
mov
movsl
and
repnz
mov
pop
cs
sti
mov
daa
stos
aas
adc
add
shlb
mov
lea
imul
cmp
xor
nop
fdivrl
mov
lret
psubsw
push
inc
pop
mov
lods
outsl
xor
inc
loop
adc
stos
add
push
loop
loopne
sti
inc
dec
xor
aam
je
es
sahf
adc
dec
sbb
imul
inc
addr16
cmp
sbb
jns
cmp
imul
fidivrl
cmp
mov
pop
cmp
inc
das
jmp
xor
nop
push
cmp
mov
jns
sub
pop
cmp
pop
mov
xor
push
xchg
pop
sbb
add
insb
inc
inc
jg
lahf
jb
scas
movsl
dec
mov
mov
loop
cmp
mov
aas
xor
iret
push
jno
stos
fbstp
ret
inc
call
inc
ja
pop
aas
jmp
sub
fsts
xchg
icebp
mov
push
jmp
jnp
lock
pop
mov
pop
sub
mov
xor
faddl
sbb
jae
bound
jb
repz
rcrl
pop
sahf
pop
ret
xor
jg
push
xchg
xchg
xor
in
repz
lahf
movb
jnp
sbb
fs
push
mov
fnstsw
popa
xchg
xchg
fiadds
jmp
sbb
and
aas
bnd
sub
idiv
aam
mov
xchg
jmp
lcall
push
outsl
sbb
sub
dec
jp
repnz
fldenv
mov
roll
pop
cmp
pop
or
ret
adc
adc
dec
movsb
pusha
inc
mov
xorl
out
sub
ds
cli
mov
or
lcall
dec
sti
dec
movsb
sbb
and
sub
dec
mov
push
lcall
jo
pop
add
jp
dec
inc
outsl
ljmp
cmp
dec
mov
mov
inc
bndstx
xchg
ljmp
jmp
div
daa
subl
mov
fsubrs
lods
out
je
lahf
adc
and
inc
push
sbb
jae
cli
inc
negl
mov
outsl
adc
addl
sbb
stos
inc
mov
lahf
ds
test
sub
pop
es
mov
iret
es
repz
shlb
add
add
adc
dec
loop
jo
push
stos
cli
ret
out
popf
push
hlt
cmp
mov
fdivrs
mov
repz
pop
dec
sbb
mov
inc
sbb
mov
push
mov
outsl
sub
and
inc
outsb
dec
xor
adc
xor
xor
cmc
lea
pop
repz
jbe
jle
cwtl
sub
out
fdivr
daa
sbb
push
clc
xlat
mov
xchg
cmp
es
js
push
shll
idiv
nop
rorb
jbe
ljmp
ljmp
fisttpl
sub
repnz
inc
roll
cltd
orl
sbb
or
daa
repz
cli
data16
repnz
adc
repz
xor
push
or
xlat
testb
outsl
data16
jmp
fidivl
pop
insl
pusha
jmp
or
mov
out
leave
faddl
aam
inc
mov
mov
lfs
shlb
and
imul
int3
pmullw
jmp
movb
xchg
loop
ss
das
mov
and
jl
lds
sub
push
stos
mov
sahf
fisubrl
xchg
fcmovnu
ret
scas
fwait
mov
imul
inc
sub
xor
das
mov
bound
test
cmp
sbb
fiaddl
dec
cmp
adc
mov
xor
aam
inc
and
aas
sbb
xor
inc
cmp
mov
jecxz
js
adc
sub
sbb
push
out
sbb
in
cli
push
clc
js
inc
mov
lret
push
dec
mul
les
bound
jnp
fucom
and
jle
lds
xchg
movsb
push
dec
fcoms
dec
sbb
sahf
test
jmp
pop
out
push
das
jl
inc
and
sbb
sbb
clc
mov
insb
xchg
adc
pop
out
fldenv
sub
pop
pop
inc
je
or
xchg
pop
cli
jg
adc
pop
inc
sub
daa
mov
ss
in
dec
cmp
lahf
fldenv
cld
leave
imul
scas
out
stos
aaa
xchg
add
mov
cmc
movaps
sub
scas
mov
dec
sub
call
bound
xor
and
cmp
repz
in
into
dec
push
scas
push
sbbl
push
inc
xor
inc
xor
daa
jp
imul
add
sbb
cwtl
imulb
add
imul
and
cli
sub
loope
aaa
ret
and
pop
aam
xor
int3
addr16
inc
rclb
daa
aaa
fidivs
dec
je
lcall
push
add
inc
inc
sub
paddq
mov
xchg
inc
roll
mov
loope
add
inc
bound
lcall
int3
mov
and
sub
sbb
xchg
rolb
inc
add
pushw
stos
mov
cmp
pop
outsl
cmpb
ret
cmp
sbb
stc
lock
call
xchg
stos
fsubs
das
cld
mov
sub
push
add
ja
rep
adc
mov
jge
cmp
jecxz
and
xor
das
aam
jae
popa
mov
mov
imul
mov
es
jno
inc
jecxz
repnz
mov
xchg
rolb
ja
jb
cmp
dec
push
pop
and
xchg
mov
data16
mov
xchg
xchg
out
xchg
mov
vaddsubpd
mov
hlt
fsubrp
cld
mov
add
pusha
in
daa
loop
mov
movsl
add
push
jb
and
mov
cli
or
cltd
out
sub
addr16
mov
xchg
stos
add
mov
scas
sbb
daa
movsl
repnz
push
mov
aad
dec
hlt
fsin
loope
icebp
and
ret
imul
xchg
mov
push
ljmp
sarb
inc
pop
pop
mov
xor
push
daa
ficoml
jns
sub
cltd
jl
sbb
inc
mov
mov
jns
es
mov
and
pop
inc
hlt
mov
daa
inc
inc
mov
jmp
sahf
out
mov
xor
xor
inc
enter
inc
mov
out
mov
pop
repnz
in
adc
or
lock
mov
mov
mulb
jecxz
mov
xor
lcall
icebp
mov
cltd
mov
sub
xchg
xchg
movsl
inc
mov
pop
push
dec
fucom
cmp
or
lods
jmp
push
mov
sbb
pusha
pop
jne
inc
jmp
xor
pop
int
insb
fnstcw
push
cmp
xor
insb
push
aaa
dec
lods
aas
jp
xor
inc
stos
arpl
lret
jmp
and
mov
mov
hlt
lcall
mov
stos
sbb
sbb
loope
and
dec
cmp
mov
dec
out
rcr
mov
rcrb
mov
adc
in
xchg
mov
xchg
xchg
test
lds
inc
mov
and
mov
push
or
adc
cs
jp
mov
mov
popa
mov
fwait
xor
out
xchg
mov
or
push
sbb
sbb
imul
mov
mov
loop
mov
add
fbstp
mov
mov
into
test
xchg
xchg
jle
aaa
popf
hlt
ds
dec
sbb
lret
mov
mov
push
xchg
ficomps
mov
cmpsb
and
cmp
fs
xor
loope
cmc
gs
les
in
cmp
lods
dec
pop
pop
cltd
in
cli
pop
sbb
sti
sbb
mov
jle
sbb
xor
sbb
shl
pop
mov
push
in
ja
ret
mov
cltd
xlat
dec
sbb
push
xchg
bound
push
inc
lods
pop
out
and
cwtl
mov
mov
cmp
add
jb
xorl
incb
push
sbb
xchg
push
jle
daa
sbbb
shrl
stos
andb
push
dec
aaa
sbb
fcmovu
pushf
test
into
mov
daa
pop
lret
dec
add
push
ss
and
and
sub
add
nop
rcrb
dec
add
mov
dec
push
sahf
add
sahf
es
les
mov
sbb
enter
xchg
test
sub
aad
cmp
dec
xchg
sbb
push
push
or
nop
push
sub
push
fcmove
and
popl
push
mov
and
into
cltd
test
add
aaa
aaa
jge
xor
mov
and
stos
add
dec
test
push
xor
cltd
mov
loope
jg
fldcw
out
mov
cld
sarl
or
dec
cmp
pop
into
lea
incb
imul
sbb
xchg
mov
jae
repnz
sti
jg
and
stos
inc
orb
push
fwait
sub
cltd
lods
mov
and
mov
outsl
cmp
mov
pop
mov
xchg
mov
scas
or
popf
cltd
stos
lds
push
and
mov
cli
int
cmp
sub
mov
scas
adc
mov
popa
push
cwtl
inc
xor
loop
stos
mov
sbb
aaa
jp
sub
imul
push
xchg
pop
sbb
mov
js
push
out
fisubrs
cmp
jp
stos
lods
sub
sub
sbb
dec
rol
fcoml
insb
js
cmp
dec
ret
lcall
bound
bound
fcompl
dec
cmp
mov
adc
push
sub
mov
imul
or
add
imul
loop
and
sbb
mov
and
pop
lret
pop
push
push
inc
mov
or
pushf
adc
mov
fisubs
dec
pushf
pop
jae
xor
jae
xor
cltd
out
jno
or
int3
test
inc
xor
in
sti
imul
outsb
jo
adc
push
icebp
push
decl
jbe
dec
das
fwait
je
stos
out
inc
insb
mov
pop
xchg
rcr
and
out
loop
lock
enter
sarl
jae
fwait
mov
fcom
lahf
adc
push
ja
stos
addr16
pusha
outsl
push
jbe
jo
aad
inc
call
jmp
cmpsb
adc
dec
test
inc
sbb
add
scas
sbb
mov
cwtl
pop
mov
int
scas
xchg
jg
roll
add
lahf
adc
inc
loop
fiadds
cmp
cwtl
add
aaa
adc
sub
dec
mov
push
xchg
dec
data16
scas
and
dec
inc
sti
inc
fs
ret
mov
cmp
cmpsb
cmp
fistl
lds
jb
lea
pop
call
jb
cmp
sbb
inc
xchg
xchg
mov
insb
xchg
ret
rol
and
insl
fistps
imulb
dec
leave
ss
shll
inc
jae
jns
inc
fisubs
out
inc
lds
pop
push
cmp
clc
outsb
mov
stos
out
mov
lahf
xlat
fwait
cmc
jns
lds
cmp
lds
mov
dec
pop
and
add
daa
jo
movsl
xor
incb
es
and
inc
iret
mov
ja
xor
xchg
mov
daa
jmp
ljmp
xchg
sub
push
imulb
sub
hlt
mov
dec
and
mov
inc
pop
jmp
into
outsl
loop
or
inc
test
push
xchg
dec
test
push
sub
lock
stos
mov
das
sbb
mov
sub
mov
xor
stc
push
mov
mov
addr16
daa
lods
push
xchg
cld
xor
roll
pop
les
in
jno
cmp
int
cmp
xor
rcll
setb
mov
and
dec
cli
cmp
cltd
cmp
sbb
hlt
or
sub
sbb
loope
jge
push
dec
rdpmc
jb
mov
push
vhsubpd
ret
scas
js
cld
je
push
test
mov
popa
push
ret
fidivrs
inc
stos
mov
mov
inc
inc
roll
xchg
dec
jmp
mov
ret
ja
pop
xor
out
cltd
icebp
cld
mov
cmpsb
inc
lahf
pop
pop
xchg
loope
dec
lds
into
bound
mov
mov
into
orl
ret
outsb
out
into
ja
and
jnp
outsb
out
cli
xchg
jae
cmp
mov
dec
pop
pop
ret
and
data16
mov
sahf
and
hlt
cmc
popa
lods
mov
mov
pop
call
jo
mov
mov
push
sbb
xchg
sbb
or
lds
jp
stos
negl
dec
cmp
xchg
adc
fs
ret
and
inc
cmc
push
push
xchg
mov
lea
xchg
lcall
xor
in
add
mov
dec
push
pop
enter
mov
xchg
dec
insb
mov
xchg
xchg
push
and
xchg
popf
push
sbb
sbb
dec
sti
jns
mov
int3
pop
xor
loop
orl
int3
subl
hlt
pop
dec
dec
mov
mov
push
jp
gs
jnp
adc
and
sbb
fstps
dec
mov
jl
or
sub
nop
jecxz
es
xlat
add
xchg
outsl
xchg
ljmp
sbb
add
cmpsl
mov
lcall
stos
pop
dec
les
loope
or
inc
test
push
xor
rorl
cmp
jle
lret
ret
inc
aad
xchg
dec
sbb
sub
push
loop
addr16
loop
adc
push
push
bound
push
scas
dec
jle
push
pop
rorb
popa
mov
int
jnp
sbb
pop
xchg
xchg
sbb
push
sub
inc
inc
add
clc
jnp
push
out
sti
push
xor
cmp
jge
mov
aas
cmpsl
lcall
mov
ficoml
mov
sub
imul
neg
mov
xlat
xchg
xor
ja
dec
fdivr
imul
xchg
hlt
int
mov
pusha
xchg
jmp
jb
insb
mov
test
mov
jae
mov
fidivl
bound
js
fwait
insb
push
stos
jnp
lods
jbe
jno
mov
add
push
sbb
lret
sub
arpl
mov
leave
cmp
int3
clc
xlat
bound
pusha
fistpl
out
fisubl
cmp
inc
dec
push
jmp
mov
fwait
mov
xlat
push
int3
mov
xor
rclb
mov
fwait
decl
pusha
mov
lret
fs
dec
dec
pop
scas
into
push
sbb
inc
push
cmp
sub
jne
lods
shlb
inc
jg
ljmp
in
push
aam
inc
es
aad
jmp
dec
in
jne
cmp
inc
cmpsb
fists
enter
ret
pop
mov
inc
jecxz
xchg
ljmp
fwait
jb
inc
data16
pusha
out
sub
pop
lock
scas
scas
insb
repz
push
sbb
push
fimuls
ss
loope
push
mov
and
mov
cmpsb
mov
arpl
xchg
xchg
iret
sub
jno
jae
pop
iret
push
je
push
cmp
cmp
inc
cmp
and
sbb
popf
or
push
xor
xchg
push
dec
divb
jmp
pop
outsl
scas
pop
push
loop
and
outsb
pop
pusha
dec
dec
ja
mulb
jmp
and
sub
or
add
inc
add
sub
sbb
sub
push
lcall
sbbb
insb
pusha
inc
sbb
lods
test
testb
inc
sbb
dec
xor
in
dec
in
pop
jae
cmp
sub
inc
and
mov
fiadds
ficoml
mov
loopne
lock
push
idivb
inc
xchg
lcall
rcrl
aas
and
sbb
cwtl
cmp
repnz
mov
fimuls
pop
ret
push
test
fdivs
mov
add
push
lds
std
arpl
sub
scas
fcoml
inc
xchg
sbb
lds
xor
add
popa
pop
shlb
adcl
iret
lcall
adc
orl
pop
mov
jb
cmp
mov
inc
mov
pusha
inc
fidivl
xchg
cltd
stos
shll
pop
jnp
inc
mov
mov
enter
pop
mov
test
cmpsw
fisubrl
xchg
addr16
sbb
mov
xchg
pop
sbb
push
inc
clc
inc
add
inc
sub
fs
xchg
incb
adc
mov
aam
or
dec
scas
sbb
fisubrl
scas
mov
mov
cmp
je
out
xchg
stos
call
sbb
cmp
mov
xchg
in
popf
pop
mov
pushf
fisttpll
arpl
xchg
dec
xchg
push
xor
int3
sub
mov
adc
test
jo
jp
xchg
mov
mov
shll
daa
mov
dec
movsb
icebp
jecxz
or
mov
lods
add
pop
sbb
xchg
bound
lret
fs
mov
out
mov
sbb
sarb
pop
leave
mov
jns
sbb
jg
xchg
das
or
mov
sub
pushf
cld
xchg
popf
dec
mov
sbb
clc
add
shl
push
xchg
rorb
daa
cmpsb
fidivl
pop
mov
inc
push
push
fstl
mov
inc
xchg
int
cmp
pop
faddp
iret
ds
push
lds
sub
loop
cmp
xchg
out
ret
sbb
dec
lock
and
sbb
cmp
roll
pop
mov
shl
ljmp
cmp
mov
mov
pop
xlat
pop
sahf
fidivl
cmp
xlat
mov
mov
es
pop
cmp
mov
push
ja
sub
jnp
and
mov
andb
es
les
sbb
push
shr
sub
out
jae
sub
scas
jo
ret
cmpsl
mov
push
dec
inc
push
sub
mov
out
xor
sarl
out
data16
bound
jnp
test
hlt
fbstp
adc
and
xor
cmp
jle
adc
cmp
lds
sbb
fidivl
sub
push
fcoml
loop
dec
sti
in
pop
push
xchg
faddp
add
dec
pop
inc
jle
fdivrl
cmpsl
jae
sti
mov
or
mov
test
and
std
outsb
sbb
mov
ljmp
nop
nop
into
mov
push
jle
mov
ret
clc
addr16
imul
daa
mov
loopne
xorb
or
cmp
fldenv
cltd
jmp
mov
leave
shrb
xchg
loope
ds
mov
or
xchg
mov
mov
ljmp
jp
sub
andl
mov
sub
in
inc
rorb
fs
push
mov
mov
push
shr
lret
adc
les
inc
test
xor
and
stos
mov
stc
pop
daa
inc
insl
jnp
aas
out
mov
in
dec
add
xchg
pop
dec
lds
jno
mov
mov
sbb
stos
and
mov
xlat
dec
in
scas
call
xchg
jo
test
shlb
push
adc
sub
and
add
cmpl
mov
addr16
pop
inc
ficomps
jnp
jg,pt
push
mov
push
ds
push
repz
jb
mov
or
in
aad
push
shrb
inc
fimuls
mov
cmp
mov
jmp
dec
repnz
cmp
stos
jne
mov
lret
movsb
and
xchg
inc
push
shlb
cmp
lea
jno
arpl
movsb
insb
std
stos
cmp
rol
cli
add
adc
sub
imul
sub
mov
sbb
mov
jmp
jb
sbb
jecxz
dec
mov
mov
mov
lret
jns
push
cmp
dec
nop
repz
cli
or
dec
scas
xchg
leave
lds
cltd
mov
dec
pop
jp
xchg
sbb
scas
xor
scas
int
sub
cwtl
xchg
and
negb
test
sbb
fwait
std
je
or
stos
push
mov
adc
sbb
mov
add
sbb
movb
inc
xchg
mov
adc
push
outsl
cmp
add
xchg
fucomip
lock
xor
insb
imul
int3
out
je
pushf
out
xor
dec
push
cwtl
loop
stc
dec
sbb
xchg
pop
ret
xor
pop
lock
ja
insb
pop
dec
loope
push
arpl
add
dec
in
ds
mov
rcrl
mov
test
and
mov
pusha
push
inc
dec
jp
sahf
neg
movsl
and
pop
mov
mov
scas
sbb
mov
xchg
sbb
aas
nop
inc
and
lret
inc
sbb
jge
and
mov
roll
aaa
mov
sahf
mov
aaa
push
mov
adc
daa
push
mov
fsubrl
cmpb
ret
fisubl
mov
adc
adc
and
test
jg
stos
fwait
mov
mov
jmp
jnp
mov
add
jno
sbb
lock
bound
test
cmc
insb
out
jmp
in
push
cmp
sbb
mov
mov
cmp
aaa
adcl
lds
inc
fcmovbe
mov
xor
and
scas
xchg
cltd
sub
and
leave
push
jo,pn
xor
xor
mov
test
dec
cs
shrb
mov
daa
decb
jns
dec
data16
dec
or
das
add
imul
lods
int3
xchg
into
cmp
out
jmp
push
push
push
jle
cmp
dec
gs
rorb
inc
dec
stc
adc
mov
int
enter
mov
ds
cmc
push
push
mov
inc
stos
mov
sbb
mov
adc
shlb
jbe
out
jb
test
or
sub
cltd
loop
mov
in
jo
stos
dec
mov
scas
sbb
mov
or
inc
mov
loop
adc
push
addr16
popa
inc
jne
sub
cwtl
popf
ret
jecxz
addr16
stos
push
dec
cs
xchg
fcmovnbe
cmc
or
xadd
cmp
jae
es
je
mov
jns
lea
outsl
jo
mov
repnz
lock
cmpsb
mov
jp
pusha
mov
aad
ret
xlat
test
icebp
push
mov
fnstenv
xchg
repz
inc
push
jbe
jmp
or
adc
inc
fisubrs
xchg
mov
scas
jecxz
pushl
mov
jb
xor
inc
and
push
dec
aas
pop
ret
push
insb
negb
xchg
jno
andb
loopne
sub
xor
pop
and
lock
loop
push
repz
xor
lds
push
inc
daa
dec
shll
xchg
mov
fxch
repz
or
fcomp
in
stos
xor
jnp
pop
xchg
jb
into
xchg
test
add
or
adc
jmp
sahf
cmpsb
and
xchg
sub
scas
jg
scas
bound
sbb
sbb
and
out
or
fldenv
adc
pop
sub
push
stos
add
lret
out
lock
cli
pushf
fs
xchg
out
add
mov
sub
lret
bound
push
jl
mov
das
lret
das
dec
adc
sub
mov
jo
adc
aad
sbb
push
and
xor
jb
js
dec
ljmp
pop
jbe
ds
scas
hlt
nop
fld1
cs
leave
leave
insl
xchg
out
test
sbb
push
popa
xchg
popa
sbb
ret
sbb
cmp
add
adc
cmpb
sub
mov
je
cmp
lock
push
adc
or
test
into
lds
xor
jmp
xor
ds
daa
aaa
xchg
fcmovbe
jg
lds
mov
inc
add
xor
fmul
mov
pop
inc
mov
and
cmc
imul
loope
xor
mov
cmpsb
aas
dec
inc
test
and
in
push
jp
lods
ss
stos
out
dec
push
pop
xor
dec
mov
jae
inc
lods
repnz
or
lret
or
outsl
nop
xchg
mov
call
ss
cmp
sti
jge
mov
clc
ja
mov
sub
out
jnp
inc
ds
cmp
fisttps
lcall
aam
hlt
das
in
mov
fucom
and
cltd
cmp
push
mov
ljmp
push
js
aam
das
clc
push
insb
sub
lods
cmovp
push
cwtl
jp
push
fdecstp
subb
or
sbb
into
aam
pushf
in
sbb
jns
stos
mov
aad
popf
lock
fidivrs
mov
insl
sbb
in
jo
sarl
sub
repnz
or
push
xor
cltd
xor
add
cmp
fcmovnb
xor
inc
outsl
rolb
mov
fs
mov
mov
in
sbb
and
stos
sbb
and
arpl
movsl
xchg
stc
repz
pop
imul
rcll
fstps
sbb
mov
out
loop
test
mov
jl
rcrl
stos
lcall
lahf
out
or
stos
out
jb
lahf
lret
jo
fistl
cmp
pop
cmp
cltd
and
int
cmp
pop
jb
sarl
inc
xchg
dec
hlt
mov
repz
outsl
shrw
aam
mov
test
rol
xchg
je
stc
lahf
adc
adc
pushf
cmp
sbb
testl
jecxz
aam
jp
xlat
insb
mov
sub
push
mov
xchg
loopne
aaa
stos
adc
xchg
xor
mov
imul
pop
sub
imul
dec
cmpsb
nop
xchg
sub
aad
test
mov
es
push
js
mov
jp
sub
inc
jo
push
test
pop
inc
sub
fwait
aad
fwait
inc
mov
or
fstpl
xchg
dec
cmp
jne
insb
or
scas
lret
dec
mov
subl
or
fisubs
push
scas
inc
pushf
cmpsb
cmp
notb
je
cmp
filds
fists
push
cmpsl
or
sub
in
xor
addr16
outsb
add
ret
loopne
jl
int
fldl
cmp
or
xchg
out
pusha
or
mov
dec
and
xor
push
xor
dec
adc
mov
fsubs
lcall
and
push
mov
cmp
movsb
jne
out
orb
jnp
lods
lock
leave
fisubrl
sbb
pop
sbb
pushf
in
xchg
popa
add
sti
aas
loopne
fucom
imul
mov
sbb
mov
jg
inc
inc
fisubs
mov
xchg
mov
adc
push
push
je
cmp
push
sub
mov
stos
mov
xor
mov
pop
mov
xchg
push
xor
dec
dec
popf
cmpsb
outsb
mov
push
ror
mov
arpl
xchg
inc
sub
cmp
in
push
pusha
mov
or
pop
jle
jb
jnp
cmp
inc
xlat
dec
cmp
pop
or
cmc
pop
xor
mov
dec
sub
ret
es
sbb
stc
imul
bound
sbb
ficoms
leave
pop
repnz
jle
xlat
sbb
lcall
adc
push
dec
es
mov
imul
pop
mov
inc
and
pop
ljmp
nop
in
dec
xor
push
adc
mov
pop
mov
xor
mov
out
cs
out
je
lret
ja
pusha
and
or
stc
fdivl
jg
jmp
push
arpl
pop
popa
iret
jle
inc
xor
imul
add
xor
cmpsb
add
pusha
pop
dec
in
xchg
jle
add
pusha
movsb
jb
cmp
sub
add
daa
fwait
mov
faddl
push
inc
jae
cli
fcompl
mov
add
inc
dec
js
push
xchg
or
dec
cmpl
xchg
cmpsb
jle
pop
arpl
xchg
dec
cmp
cs
outsb
inc
ljmp
stc
jb
push
mov
push
add
aaa
mov
inc
push
or
mov
ret
push
push
outsl
arpl
dec
mov
aas
enter
inc
daa
in
mov
mov
ljmp
and
gs
xor
scas
jg
dec
jl
mov
cltd
inc
ja
sbb
bound
sub
int3
mov
divb
cld
jmp
jns
pop
imul
cmp
imul
sbb
pop
pop
test
mov
adc
sub
inc
jne
jmp
mov
xchg
stos
push
ret
fcmovb
sub
sbb
inc
enter
pop
mov
aas
push
fisubl
loope
add
push
popa
mov
jle
sub
aas
xchg
sbb
loopne
cmp
adc
jge
outsb
iret
push
lods
mov
orl
test
inc
jbe
call
sbb
mov
movsl
lret
mov
call
stos
outsb
jge
pop
rcrb
inc
inc
pop
ja
jmp
paddsb
cmp
pop
pop
mov
pop
sub
xchg
dec
mul
shrl
or
adc
mov
hlt
pop
mov
cli
cmp
lds
insb
jge
subb
pop
push
nop
loope
inc
mov
mov
fld
xchg
pop
xor
rol
pop
bswap
push
je
ljmp
jne
out
xor
in
insb
xor
imul
pop
loop,pt
cli
sub
mov
imul
mov
adc
or
or
dec
mov
dec
mov
dec
or
jne
add
mov
movsl
sbb
cmp
js
inc
and
fadd
insb
dec
jg
jp
dec
xor
dec
or
cltd
mov
flds
jno
add
push
sub
cmp
pop
jne
adc
je
aas
lahf
add
sbb
or
stc
cmp
xchg
sub
and
inc
mov
dec
sbb
mov
pop
in
data16
jmp
in
hlt
lcall
mov
subl
push
lds
dec
or
ja
adc
loope
mov
inc
roll
or
test
mov
pop
mov
pop
sub
xchg
lds
repz
or
lds
jle
add
outsb
fadds
inc
adc
lods
jp
push
inc
cmp
jns
jne
iret
mov
pop
rorb
lods
sub
out
js
adc
loopne
scas
jns
or
fidivrl
pop
aaa
sbb
fdivp
pop
sbbl
icebp
sbb
leave
dec
cmp
clc
pusha
dec
aaa
mov
int
out
mov
ljmp
ljmp
xor
xchg
idivl
lahf
insb
rcrb
push
or
inc
adc
out
rcrb
mov
cmp
lods
call
sbb
insb
aam
jns
hlt
add
cmp
rcrb
and
loopne,pn
outsl
mov
inc
jae
decb
movl
add
outsb
lds
and
ds
sub
out
xchg
or
loop
mov
loop
mov
sub
push
dec
outsb
mov
push
jae
push
arpl
ret
hlt
daa
scas
hlt
pop
arpl
jo
xchg
xchg
daa
sti
add
add
cmp
arpl
adc
cmp
mov
cld
lret
sarl
in
pop
sbbb
xchg
out
jne
push
scas
or
dec
dec
xor
fadds
stos
jnp
cmp
dec
fnstsw
out
sbb
jbe
mov
bound
mov
leave
push
jae
adc
add
daa
cld
es
or
cmp
ljmp
jge
sbb
aaa
adc
ljmp
and
fwait
loop
cltd
int3
cmp
push
sbb
dec
adc
aam
test
pop
jnp
loopne
xchg
fcmovu
sbb
sbb
xchg
lahf
or
mov
sub
subb
xchg
dec
sub
sahf
jae
pop
and
mov
add
adcb
imul
jle
push
sbb
jmp
jle
cmp
jnp
out
push
sbb
out
push
test
aas
aam
dec
jb
pop
idivb
mov
adc
mov
xchg
and
call
jecxz
scas
lods
test
inc
xchg
push
scas
mov
push
mov
inc
sahf
xchg
push
insl
or
jo
lods
jecxz
in
and
lods
pop
rcl
ljmp
mov
inc
inc
out
imul
mov
loop
inc
pop
jg
daa
cmp
and
sbb
test
xchg
fsubrp
popa
lds
sbbb
es
scas
xchg
inc
xchg
mov
nop
push
inc
stc
dec
insb
pop
and
test
fdivrs
aaa
sub
inc
out
movsl
xor
inc
jecxz
cmpsb
xor
inc
pop
jbe
mov
inc
jb
sub
stc
jo
in
jnp
sbb
cmp
int3
iret
sub
mov
sub
shl
int3
mov
rcll
jo
xorl
pop
pop
scas
popf
xchg
xorb
test
hlt
mov
ja
arpl
in
mov
xor
out
cmp
daa
test
je
dec
bound
mov
in
std
or
dec
fsubl
sub
inc
pop
stos
mov
sbb
fs
inc
orb
cltd
mov
aaa
imul
mov
push
loop
mov
hlt
cmp
xor
mov
inc
incl
je
xor
pop
and
outsl
mov
push
lods
push
in
nop
cmp
aas
jp
push
push
pop
test
outsl
sbb
popw
mov
cmp
jns
or
js
lods
je
test
xchg
inc
inc
mov
ljmp
inc
mov
stc
cmp
sbb
inc
mov
imul
orb
cli
dec
ja
ret
mov
sbb
jle
and
and
aaa
pop
iret
cmpsl
cli
sbbb
cmp
fisubrs
pop
cli
add
dec
sbb
push
lcall
ror
cmc
outsb
out
mov
ljmp
outsl
cmp
cmp
mov
test
int
hlt
sbb
mov
into
bound
lock
pop
or
dec
inc
lahf
fildl
pop
mov
mov
cs
je
pop
mov
repnz
fnstsw
jbe
adc
jne
mov
lds
insb
inc
lcall
xchg
popf
jnp
scas
out
cltd
sbb
dec
out
leave
iret
xlat
pop
mov
push
arpl
insl
negb
int3
ljmp
clc
sub
push
outsl
ds
xchg
mov
lds
and
push
adc
cmp
pusha
rclb
fisubrl
out
or
or
adc
sub
lods
fcoml
stos
pop
int
insl
vpmaddwd
jmp
dec
pushf
push
cltd
or
ds
lds
or
add
fldenv
xor
movsb
push
push
sbb
push
push
nop
jmp
xor
in
nop
enter
inc
ds
sub
pop
adc
cmpsl
imul
addb
filds
xor
clc
mov
arpl
lcall
xor
push
hlt
bound
cmc
push
push
adc
leave
rolb
pop
lds
ja
repz
pop
xchg
imul
div
aas
clc
cmp
cmp
dec
test
loop
jmp
xchg
dec
fadds
cmp
imul
scas
push
sarl
add
scas
mov
mov
js
jo
icebp
iret
mov
inc
imul
sti
ljmp
fimull
or
dec
fcompl
inc
shl
cld
sub
fsubrs
jne
sub
test
mov
les
outsb
out
xchg
lds
and
dec
sub
xor
fisubl
arpl
jp
mov
jle
dec
popf
js
push
scas
push
sbb
cli
leave
lcall
dec
xchg
outsl
pusha
pop
sbb
lds
scas
jp
inc
int3
scas
js
fidivrs
jns
cmp
jbe
mov
mov
std
mov
outsb
test
xor
mov
cmp
fcompl
popf
xchg
rorb
ret
and
xor
mov
or
inc
xor
rol
jae
mov
test
pop
mov
xor
loope
lret
push
mov
pop
lods
enter
test
pop
inc
add
jecxz
sti
movsl
xchg
inc
loop
push
fs
jmp
mov
pushl
mov
dec
dec
push
push
jmp
pop
cmpsb
and
mov
push
xrelease
push
adc
popfw
ret
mov
and
stos
dec
adc
arpl
cmp
loope
add
scas
jbe
xlat
mov
sbbl
js
push
sahf
jae
inc
xchg
lcall
adc
test
pop
movsb
sahf
mov
jle
in
out
and
cmpsb
cmp
sbb
xchg
stc
mov
mov
mov
push
cmp
fs
lock
movsb
sarb
imul
out
sbb
fisttps
pop
xchg
and
inc
pop
add
stos
sti
adc
push
daa
mov
push
xchg
jb
aas
pop
test
pop
mov
mov
push
inc
fisttpll
out
xchg
nop
roll
adc
mov
mov
inc
add
loop
jno
inc
jecxz
inc
dec
arpl
dec
cmpsl
push
rolb
and
insb
fistps
fst
jp
arpl
rcrl
add
sbb
xchg
cli
outsb
popf
ss
insl
lcall
cwtl
push
dec
mov
lds
aas
cmpsl
xchg
push
ret
sub
or
or
loope
pushf
inc
lods
jle
addr16
sarb
sbb
cltd
adcb
mov
shll
int3
pop
popa
ja
pop
aas
mov
int
subl
cmp
jb
ja
test
inc
loop
repz
pop
pop
xor
or
adc
cmp
push
fwait
mov
and
inc
mov
pop
inc
test
mov
xor
xlat
ds
out
jbe
sbb
lcall
ljmp
ljmp
cmp
ja
enter
lods
push
push
mov
jbe
inc
and
sbb
test
push
out
fisttpl
addr16
and
scas
inc
inc
das
stos
insb
cmpsl
mov
insb
mov
nop
jle
ret
rcr
divb
cmp
lret
dec
std
mov
fisubrl
sub
fnstenv
lret
push
mov
jmp
negb
mov
inc
jp
out
icebp
insb
and
fcomip
and
cmp
mov
popl
and
sub
pop
es
cmpl
scas
push
push
je
xchg
loope
inc
cmpsb
mov
faddl
cltd
test
jg
push
scas
dec
mov
imul
aas
inc
test
lods
cmpsl
pop
notb
and
leave
sub
or
lcall
pop
stos
aaa
mov
sbb
inc
outsb
mov
cmp
pop
lret
ja
stos
mov
jle
add
pop
lret
sub
dec
push
outsl
cmp
in
jmp
stc
cmp
std
inc
inc
cmp
pop
cmp
imul
push
dec
cli
lcall
stos
mov
pop
inc
mov
jg
pop
or
popa
adc
jp
sbb
rorl
or
test
lock
lods
aas
jmp
xchg
xorb
pushf
sub
lret
leave
mov
sbb
int3
jo
addr16
and
adc
cmpsb
cmp
int
test
out
xchg
dec
xchg
inc
rclb
imul
decb
sbb
lcall
jmp
dec
jl
xchg
aad
cmp
adc
cmp
popf
xor
das
cmpsl
lcall
fldcw
mov
mov
test
lahf
cs
xlat
push
ret
xor
shrl
imul
ljmp
xor
aad
dec
cmp
cwtl
sti
push
push
inc
aad
dec
lcall
sbb
inc
and
cmp
mov
aaa
sti
incl
push
adc
and
push
xchg
cli
xchg
and
xchg
daa
aad
fdivl
sbb
ds
repz
aam
outsl
loop
inc
bound
mov
xchg
notl
out
dec
adc
and
inc
and
loop
lahf
leave
daa
imul
push
ret
push
jg
sub
and
test
cmp
dec
push
pop
xchg
push
pop
addl
dec
adc
bound
add
test
inc
push
dec
fs
inc
jb
int3
call
sub
push
les
mov
push
aaa
xor
ja
popa
aam
mov
or
psubsw
insl
jo
nop
fidivrs
add
bound
fcompl
loopne
xor
das
dec
mov
dec
std
out
cmp
xlat
stos
cli
inc
stos
pop
inc
sbb
mov
icebp
inc
lret
inc
pop
pop
cltd
ljmp
and
insb
pop
in
cmp
cmp
mov
popf
or
push
pop
dec
cmp
push
cmp
mov
repnz
mov
scas
jae
pop
mov
mov
mov
jbe
mov
movsb
out
push
or
ss
stos
push
insb
ljmp
daa
fdivs
scas
or
into
xor
cmp
int
repnz
dec
sbb
call
dec
jge
push
ds
push
jo
jbe
mov
pushf
cli
adc
jno
mov
popa
sbb
adc
pushl
cmp
icebp
shlb
xor
outsl
dec
ficoms
mov
stc
cmp
stos
jmp
dec
cltd
xchg
bound
rcrl
aaa
pop
rcrl
stc
xchg
std
cmp
mov
lret
inc
shll
cmp
inc
mov
in
xchg
stos
pop
mov
lea
push
icebp
data16
jne
or
lcall
push
aad
sub
test
scas
xchg
dec
sub
sub
cmp
mov
sub
push
mov
cltd
add
mov
and
mov
pop
push
lds
ficompl
jns
inc
sub
mov
daa
mov
inc
pushf
filds
inc
ret
pop
or
push
mov
adc
dec
push
cmp
pop
dec
push
jne
xchg
movl
dec
push
imul
call
mov
mov
outsb
mov
pushf
xlat
adc
xchg
inc
movsb
lods
sub
int
out
repz
sub
insb
xor
adc
sbb
or
dec
inc
mov
aas
xchg
add
cmp
jb
jle
mov
push
stc
or
lea
cmp
push
outsl
jne
xchg
inc
push
xchg
ss
cmp
fsubl
scas
inc
sub
je
aaa
cmp
adc
inc
fxch
fiadds
cli
pushl
sbb
popf
dec
scas
mov
xor
cmp
cmp
nop
pop
jne
ds
xor
adc
adc
orl
push
stc
dec
stos
push
pop
fimull
int3
cmp
xor
testb
mov
inc
jg
outsb
aaa
ljmp
xchg
jg
fisubrl
test
ret
cs
mov
adc
jle
and
loop
xchg
fwait
je
scas
arpl
mov
xchg
loop
pop
daa
cmp
ds
js
outsb
and
xchg
dec
inc
and
mov
outsl
inc
inc
insb
popf
lcall
cmpb
pop
mov
repz
adc
push
mov
movsb
bound
mov
and
xor
and
in
push
rol
mov
into
add
and
outsl
ret
jp
push
mov
xchg
icebp
in
inc
enter
data16
fsts
push
jp
std
mov
cwtl
jecxz
aaa
aaa
sbb
ffreep
clc
aad
scas
and
cmp
push
dec
stc
pop
push
push
mov
in
testb
or
mov
bound
test
add
pop
icebp
cmp
add
pop
mov
cmp
rcrb
push
mov
arpl
dec
out
and
stos
mul
rclb
jo
outsb
push
pop
pop
mov
push
mov
mov
insb
fnstcw
bndldx
lret
test
cli
out
ret
push
sub
popa
in
les
jb
adc
pop
cs
out
jae
mov
les
mov
push
cmp
into
mov
mov
sub
cmpsl
scas
notb
pop
repnz
mov
mov
mov
and
je
add
daa
pushf
shll
inc
mov
into
ljmp
push
jp
pop
ret
ljmp
stos
iret
or
ret
dec
sti
inc
mov
repz
shll
shll
mov
stos
rcrb
inc
jns
outsl
mov
inc
mov
mov
jb
add
sti
cmp
xor
push
das
pop
sub
fdivp
pop
push
mov
xor
mov
clc
cltd
sub
sbb
and
push
cwtl
push
gs
jo
test
std
jecxz
mov
repnz
mov
aaa
notl
punpcklbw
scas
das
in
push
inc
xlat
lods
push
leave
adc
inc
stos
sbb
loopne
dec
pop
shr
lds
rcr
js
mov
or
pop
pop
loop
and
xchg
add
xchg
outsb
jp
cmpsb
stos
xchg
inc
fmul
dec
inc
cmp
lods
ljmp
cli
inc
lds
rclb
das
xchg
fs
jl
mov
call
push
jl
sahf
mov
scas
pop
xchg
sahf
push
push
fidivrs
xor
xchg
fistl
ret
lea
pop
in
xchg
sub
pop
leave
push
mov
js
in
loop
popa
xchg
xor
sub
arpl
dec
out
push
xlat
fwait
mov
cmpsb
mov
push
fcmovnb
jb
dec
xlat
out
loop
xor
dec
lcall
sbb
mov
loop
and
aam
ss
aad
test
std
and
add
sbb
push
addr16
or
nop
add
inc
dec
jbe
imul
data16
divb
cmpl
pop
cmp
and
ja
out
ds
cmc
rorb
add
adc
addr16
jb
dec
outsl
push
repz
xlat
sbb
sbb
arpl
cmp
rcrb
sbb
or
lds
and
stos
or
sub
inc
rorb
ret
cmp
fucomip
lods
push
mov
jp
stc
sub
mov
cmp
jg
lcall
pop
shlb
fnstenv
and
xor
cmp
leave
jle
nop
mov
movsl
fidivs
mov
sub
stos
push
xchg
inc
mov
adc
push
mov
cmp
clc
in
push
imul
out
popa
sbb
mov
sbb
jle
push
push
or
sbb
pop
cs
daa
cmpsb
pop
jle
int
mov
sbb
mov
pop
sbb
mov
mov
out
cltd
jg
in
clc
test
and
fstpt
sbb
cmp
xchg
or
orl
test
jecxz
jae
mov
in
sub
lds
push
dec
aad
fwait
xchg
ret
push
jae
jno
lret
out
mov
jbe
pop
rclb
test
push
xchg
loop
xchg
mov
cmpsl
scas
cmp
inc
fiaddl
adc
pop
inc
ja
aaa
stos
mov
jnp
iret
loop,pt
sbb
insb
xchg
out
jns
xor
andl
js
ljmp
ud1
fxch
fldl
aad
rcr
out
jp
aas
cli
jo
cmpb
shll
push
cli
dec
loop
sbb
dec
dec
pop
cmp
inc
nop
adc
lds
fmull
xchg
push
and
subb
mov
dec
fucomp
jb
dec
sti
mov
loop
jbe
mov
xor
xchg
and
mov
push
cmp
das
in
js
adc
outsb
repz
push
xor
jmp
arpl
push
lret
lds
inc
push
xor
inc
mov
pop
shlb
or
pop
aam
pop
mov
sbb
pop
jg
bound
sub
add
xorl
sub
les
inc
lea
sub
xchg
pop
insb
lcall
mov
mov
es
mov
out
popa
jne
test
mov
mov
pop
aaa
stos
pop
pop
stc
cmp
mov
test
push
xchg
inc
cwtl
xchg
adc
push
imul
dec
aaa
inc
dec
stos
lcall
sbb
push
and
test
in
mov
push
jle
les
and
lds
loop
scas
jmp
test
xchg
es
dec
pop
sub
xor
fsubr
mov
mov
arpl
rorl
dec
arpl
adc
mov
nop
mov
mov
xor
dec
sbb
and
cmp
push
mov
in
jle
aas
pop
clc
lds
push
clc
or
dec
jbe
aaa
inc
pop
or
clc
push
push
pushf
xchg
push
inc
push
or
adc
negb
ds
outsl
into
xchg
imul
popa
in
aaa
jle
iret
pop
sbb
rcrw
or
cli
inc
xchg
aam
aaa
and
bound
das
push
jae
insl
cltd
pop
into
inc
xchg
inc
mov
push
fwait
orl
push
ljmp
push
jnp
mov
jae
dec
outsl
jl
mov
dec
jle
arpl
jmp
bound
sarb
lock
test
xchg
xor
adc
mov
imul
bound
fsubrl
cmp
sbbl
rep
shll
xchg
or
mov
das
pop
out
xchg
stos
jmp
dec
jp
dec
and
insb
cmp
sub
outsb
sub
in
outsb
ret
sub
pop
sbb
jp
lea
push
incl
cs
cmp
scas
xchg
jnp
push
mov
inc
push
call
jle
loope
stos
pop
scas
lds
out
pop
aad
ja
fnstenv
sti
outsl
cmp
scas
adc
inc
and
inc
jae
insb
push
add
popa
mov
xchg
adc
pop
call
sbb
pop
sahf
sbb
add
fsubl
push
scas
in
xchg
lcall
and
ljmp
push
jo
fimull
sbb
mov
mov
repnz
out
push
je
or
or
push
mov
insb
mov
sbb
sub
dec
lds
xchg
jb
lods
cmpsl
lret
inc
dec
pop
mov
mov
hlt
das
push
jle
lock
loopne
mov
aad
jo
int3
fstp
ret
idivb
push
fwait
jp
mov
dec
insb
jle
lahf
cmp
notb
arpl
sub
jno
into
test
push
or
popa
xchg
push
in
icebp
test
fiaddl
lds
mov
jno
push
std
dec
mov
fsubrl
pop
push
dec
lds
mov
dec
push
inc
hlt
pop
ds
out
mov
lcall
mov
loop
dec
ja
xchg
lcall
push
lcall
and
xor
fcoml
mov
scas
int
into
iret
adc
sub
xchg
push
ds
cltd
mov
rcl
negb
icebp
add
and
push
sti
push
inc
xchg
sub
mov
cld
pop
test
cmp
push
xchg
xchg
sbb
fsubr
insb
jne
outsb
outsb
cli
ljmp
movsl
add
fimull
sbb
data16
add
out
cld
inc
shl
lret
push
mov
aam
clc
and
stos
jae
dec
cli
add
dec
adc
or
jnp
insb
pop
cmp
ja
scas
mov
adc
mov
push
mov
sti
mov
lods
xor
ret
sub
push
fisubl
sub
xchg
cmp
xor
push
fs
and
cmp
add
test
rolb
pop
sbb
mov
test
xchg
test
dec
mov
shrb
or
popf
sbb
sti
notb
mov
mov
data16
jge
dec
add
jnp
mov
cmp
adc
inc
inc
pop
cmp
mov
mov
xor
std
data16
inc
stos
mov
push
mov
fsubrl
ret
std
in
hlt
loop
imul
inc
enter
pop
lods
add
lods
mov
popa
mov
add
xor
fsubrl
xchg
xchg
mov
inc
xor
mov
sahf
sbb
inc
dec
cwtl
ljmp
xchg
jl,pn
mov
and
scas
push
stos
cwtl
nop
cmp
mov
fldt
ret
xchg
push
sub
push
rorb
insl
jecxz
insl
es
mov
xchg
lds
out
lret
jns
inc
fs
loope
sbb
pop
cs
enter
test
xor
daa
mov
xchg
add
mov
dec
sub
jnp
lds
scas
cld
aad
jo
sbb
push
push
push
pop
mov
adc
cmp
inc
and
push
push
push
cs
jns
jmp
xor
fcomps
out
fwait
pop
mov
lock
lock
loope
fs
test
test
loopne
inc
outsb
dec
leave
fdivl
sbb
jmp
adc
sbb
and
aas
movsl
or
jae
fdivp
es
push
dec
and
jb
mov
adc
ret
mov
mov
movsl
sub
fsubs
lock
sub
popf
mov
cmp
inc
or
sub
aad
cmp
push
subb
pusha
popl
ds
sub
xchg
jns
inc
and
mov
inc
push
adcl
mov
sub
rolb
aas
addr16
es
and
xor
dec
stc
les
cwtl
jg
addl
cmpsb
inc
jae
xchg
jle
push
and
rcrb
cld
dec
sbb
cli
sbb
mov
pop
les
fs
jo
push
or
ss
fs
push
repz
repz
filds
push
leave
fldenv
push
sbb
mov
mov
push
fidivrl
dec
pusha
jg
insl
mov
sti
dec
leave
insl
ss
jp
loop
mov
pop
imul
cmp
insb
test
add
dec
cmp
outsb
and
push
fiadds
ficoms
xchg
mov
sub
mov
sbb
ds
lods
out
test
mov
push
or
xor
xorl
mov
xchg
and
sbb
jno
jg
inc
stos
shl
outsl
cli
vmovss
ss
and
fidivl
pop
adc
repnz
add
repnz
inc
mov
sbb
fistpll
loope
dec
cmp
xchg
inc
lds
jl
data16
mov
sbb
or
adc
wrmsr
int
push
shll
pop
mov
jp
xchg
stos
movsb
lds
push
outsl
ljmp
mov
insl
insb
hlt
or
dec
cmp
mov
repnz
jp
add
cmp
sub
jns
rcll
in
mov
push
add
cltd
fstpt
and
sahf
xchg
mov
aas
movsb
das
out
mov
dec
fs
adc
arpl
pop
test
dec
add
pop
mov
lcall
push
stos
xchg
push
dec
or
sbb
pop
and
lock
ret
sbb
stos
lcall
inc
inc
mov
and
ja
xchg
inc
imul
aas
outsb
add
fsubr
and
arpl
pop
cld
jae
lds
mov
adc
xchg
inc
push
cmp
cli
enter
stc
mov
addr16
xor
or
aad
testb
aas
cli
and
push
xchg
or
cld
or
popa
or
bound
bound
dec
jb
aam
mov
jo
inc
jmp
cmp
sbb
sub
pop
fwait
popa
out
mov
pop
fidivrl
mov
push
fs
insb
imul
test
dec
cmp
pop
xchg
and
les
xorl
sbb
jg
xchg
sbb
nop
push
fs
adc
xlat
xor
test
imul
test
sub
jo
sub
cmp
cmp
inc
push
aad
adc
lds
dec
imul
mov
scas
pop
jno
mov
jbe
cli
xchg
lds
mov
lret
test
inc
mov
mov
faddl
jge
fcomi
or
push
jle
pop
scas
and
sub
mov
arpl
ljmp
fstps
push
inc
shll
xor
adc
mov
scas
mov
lock
ss
test
fiaddl
sub
in
test
push
or
enter
icebp
xchg
push
xchg
mov
insb
mov
push
jmp
jp,pt
lods
jnp
aas
hlt
scas
stc
ljmp
push
es
mov
jb
xchg
push
cli
jp
mov
sbb
inc
cltd
mov
lds
cmp
test
lahf
xor
and
xor
cmp
or
test
cs
cmp
idivl
ficoms
mov
mov
jne
aas
dec
dec
or
cli
inc
scas
cmp
pushf
mov
enter
mov
push
out
inc
pop
mov
dec
cmp
popf
mov
rolb
xor
pop
jecxz
inc
popf
and
sub
in
xchg
in
pop
dec
pop
push
cmpsl
push
mov
sbb
cwtl
jp
push
cmpsl
repnz
int3
or
ret
sbb
push
pop
pop
popf
jnp
je
leave
and
cmpl
fsubrs
mov
imul
bound
or
in
sbb
sub
orb
mov
in
push
out
cltd
cmp
dec
hlt
aaa
and
xchg
scas
and
jb
not
sarl
cmp
fldenv
cmp
sahf
adc
mov
lds
inc
sbb
mov
mov
and
xchg
push
add
jle
or
ret
lock
sbb
inc
mov
pop
int
mov
mov
pop
shrl
mov
mov
mov
xlat
popa
jp
mov
movsb
jo
lds
and
ret
jbe
iret
mov
pushf
aaa
jns
imul
insl
or
mov
add
sahf
xchg
push
fistl
lcall
inc
cmpsl
ret
sbb
pop
out
mov
jo
mov
in
dec
cltd
inc
xchg
data16
xchg
push
outsb
mov
sti
sbb
lcall
mov
and
push
mov
insb
xor
pop
test
insl
dec
aaa
test
inc
cmpsb
xchg
imul
push
push
dec
cmpl
dec
push
fisubrl
test
mov
adc
jb
scas
cmp
and
cmpsb
sub
outsb
jp
cmp
or
jg
mov
out
sbb
mov
mov
addr16
xchg
imul
jne
es
fwait
js
inc
add
out
stc
std
jp
mov
pop
das
xchg
fldt
push
jge
test
lds
mov
cmp
inc
pop
cmp
push
or
mov
ficompl
push
incl
inc
cmpsb
pop
aaa
dec
pop
push
pushf
cmp
gs
stos
ret
test
es
push
not
pop
leave
loopne
pop
inc
sbb
sbb
jp
lahf
imul
inc
xchg
sub
mulb
test
movaps
and
xor
jge
sbbb
add
mov
fwait
inc
pop
cld
das
mov
xchg
jbe
das
les
shlb
xor
xor
lcall
sbb
ja
aas
and
in
mov
sbb
mov
outsl
mov
pop
call
dec
jne
loop
outsb
aaa
shll
cs
mov
push
aam
fimuls
ja
loope
mov
cmpsl
out
adc
loope
fbld
lds
addl
push
int
and
es
fsts
mov
mov
mov
sub
inc
bnd
push
loopne
outsb
test
xchg
jmp
dec
dec
push
lret
pop
jo
sub
stc
lock
xor
shlb
add
mov
cmc
jo
stos
stos
inc
in
dec
scas
xlat
cmp
jmp
lds
push
jp
in
shll
cmp
pushf
les
imul
fildl
sub
daa
loop
pop
push
push
pop
and
mov
pop
fsubl
jmp
sbb
movsl
push
fisttpl
xor
jo
lds
sahf
rorb
sub
testb
or
int3
sub
xor
xorl
mov
cmp
lret
mov
xchg
cmp
and
or
adc
or
fwait
or
push
into
mov
jns
mov
cmp
imul
push
popf
scas
jle
mov
or
vmovd
add
test
into
gs
ret
in
push
addb
test
clc
pop
pop
jno
mov
mov
in
add
outsl
or
ficoml
lret
adc
pusha
das
jbe
cli
push
aam
mov
addr16
dec
fstps
sbb
cmp
insb
jp
mov
push
xor
dec
cltd
xchg
mov
cmp
inc
cmp
sbbb
daa
in
lock
test
lea
sbb
loopne
sbbb
inc
aam
pop
int3
testb
daa
xchg
subl
ret
fcomi
sbb
repz
inc
dec
jb
je
mov
loopne
or
test
data16
ljmp
push
addl
xchg
and
les
mov
xor
fs
dec
sbb
push
dec
aam
jp
sbb
mov
push
inc
in
int3
jp
push
adc
jg
adcl
outsl
es
pop
jae
cmp
jnp
pop
nop
scas
push
fidivrl
sti
fstl
xor
and
or
sbb
inc
aas
ja
mov
lds
cwtl
inc
adcl
sub
cld
jp
stos
es
sub
out
cmp
inc
mulb
jle
add
inc
xor
xor
push
sub
inc
pop
in
inc
cltd
and
cmp
std
cmpsl
or
xchg
push
loopne
cmp
adcb
cwtl
mov
xchg
stos
shll
je
test
mov
cmp
jmp
aam
imul
jno
scas
popa
sti
mov
cwtl
repz
dec
dec
jp
mov
jg
add
xchg
xor
imul
repz
test
pop
jg
mov
mov
jb
cmpsl
mov
fwait
xchg
cmp
jge
jmp
loopne
repnz
cmp
cli
daa
aaa
push
mov
or
cltd
lds
jmp
push
xchg
xchg
inc
ja
cmpb
xchg
xchg
in
fwait
popf
cmp
add
add
aas
inc
sbb
push
mov
mov
fisttps
or
xor
dec
jmp
cld
or
mov
lock
jmp
pop
jo
shrl
jmp
imul
in
sub
push
dec
pop
filds
cmp
lods
int3
inc
mov
out
packssdw
cmp
sbb
push
dec
push
dec
xchg
imul
pop
cmp
andb
xchg
lahf
and
sub
or
xchg
sub
inc
and
sbb
xor
xchg
pop
and
inc
ja
das
out
sbb
xchg
push
push
pushw
push
stos
push
in
cmp
pop
sahf
sti
sub
das
sar
in
sbb
sub
ds
and
add
mov
aad
push
je
lock
sbb
daa
push
mov
out
ljmp
nop
testb
fdivrp
push
xchg
cmp
push
pop
insl
jbe
sub
int
and
ds
test
jo
push
cli
pop
xchg
stos
sub
xchg
mov
sbb
scas
push
stos
jg
mov
xor
sub
popf
sbb
daa
mov
das
jl
lcall
pop
and
ljmp
xchg
ljmp
xchg
mov
pushf
outsb
push
scas
jge
pop
addb
cmp
movsb
cltd
xchg
dec
pop
lret
repz
and
nop
mov
in
cmp
test
xchg
xchg
sub
mov
ss
fbstp
jg
daa
aam
dec
or
xchg
and
add
push
imul
mov
and
add
xor
push
mov
jp
lret
pushf
call
popf
jno
pushf
test
lock
xchg
roll
lret
push
mov
and
mov
lods
pop
cmp
jb
ficoml
push
inc
mov
bswap
aas
xor
lea
dec
cltd
jae
mov
pop
insl
mov
popf
stos
jb
stos
and
jg
xchg
push
lods
test
mov
push
test
cwtl
inc
out
push
cwtl
gs
pop
dec
sbb
stos
mov
xchg
movnti
lock
insb
shrb
shrb
sbb
jb
pop
jne
cmp
or
stc
in
leavew
mov
jo
imulb
mov
stos
xlat
filds
aaa
popf
sbb
mov
idivl
test
leave
jno
mov
jo
sub
mov
es
leave
mov
and
cmp
sub
jb
pop
xor
scas
in
insb
dec
push
xchg
jne
outsb
push
xor
cmpsl
nop
sbb
xchg
xchg
enter
mov
ds
ja
sbb
and
jo
mov
shlb
sub
mov
ficompl
cmp
or
fs
mov
mov
jle
cmp
pop
pushf
jg
xlat
stos
and
jle
xchg
fisttps
xchg
ljmp
jle
shrl
scas
xchg
shll
push
sub
ds
sbb
push
outsb
out
scas
gs
adc
or
std
test
iret
jnp
inc
lcall
mov
das
lret
xor
dec
mov
jnp
out
xchg
sbb
jecxz
stos
imul
lock
stc
imul
out
mov
shll
es
insb
cmc
adc
daa
xor
cli
xchg
sbb
lcall
cld
or
stos
jmp
daa
mov
sti
lds
leave
or
scas
lea
mov
je
jns
gs
shr
xchg
jae
gs
xor
mov
sub
xchg
adc
ds
ljmp
cmpl
inc
mov
xchg
js
jp
mov
stos
lahf
pusha
sbb
xchg
out
or
fimuls
ret
gs
cmp
mov
xor
test
mov
add
int
in
jno
and
and
ss
test
mov
pop
stos
loopne
jmp
mov
add
es
movsb
popa
push
pop
neg
push
lcall
pushf
add
int3
mov
jl
out
xor
loope,pt
out
scas
pop
enter
and
aaa
push
faddl
repz
outsb
ds
fdivs
xchg
stos
jne
pop
inc
push
sti
lock
jmp
clc
jo
stc
cmp
lds
cmp
mov
ss
ds
mov
sub
sbb
loopne
mov
fdivrp
ret
fwait
xchg
sbb
sbb
std
hlt
sub
cmpb
jecxz
sbb
xchg
call
into
test
jle
imul
and
cmpsb
mov
jmp
or
ljmp
repz
scas
sbb
lret
and
adc
testl
gs
xchg
leave
xchg
repz
lret
fadds
insb
les
arpl
xchg
jp
ret
mov
push
leave
mov
add
push
inc
push
mov
dec
mov
push
lds
or
std
je
fisubl
ret
pop
sub
inc
pushf
pop
xlat
imul
jne
cmp
push
pop
lret
push
popa
mov
add
xor
and
fdivp
mov
repz
and
or
and
xchg
outsb
rorb
push
jmp
andb
in
mov
cmp
push
push
push
int
movb
cmp
jae
push
call
xchg
jg
fcmove
cmp
sbb
inc
push
std
and
xor
pop
or
mov
ljmp
fs
cmpsl
and
cld
fldl
insl
pop
sub
dec
and
stos
mov
jge
daa
or
pop
jmp
adc
ret
mov
inc
jmp
imul
mov
xor
in
lods
shll
jbe
push
push
cmp
pop
mov
aas
subl
push
imul
shr
insb
sub
inc
bndldx
sub
lock
mov
pop
mov
pop
push
outsb
cld
push
xchg
and
jnp
pop
sub
push
stos
into
push
dec
scas
div
fisubl
stc
adc
add
dec
jmp
add
push
dec
inc
cmp
dec
xchg
stos
and
mov
mov
xor
int3
lret
jg
ret
sbb
imul
inc
mov
js
popa
add
test
loop
and
outsb
sbb
pop
pop
add
in
push
arpl
or
jnp
pusha
sub
aad
add
add
push
lds
inc
std
jns
dec
and
sbb
lds
ret
outsb
sub
int
push
rorb
sbb
xlat
pop
stos
mov
mov
mov
aaa
adc
mov
ss
or
inc
cmpl
outsb
pop
mov
adc
daa
adc
scas
mov
sti
arpl
adc
repz
jp
pushf
fbstp
xchg
ljmp
xor
das
jge
cmp
rclb
or
insb
fdivr
xor
push
mov
sbb
enter
or
aam
mov
movsb
inc
jne
jg
inc
mov
gs
psubsw
ds
lods
out
sub
lock
dec
mov
dec
pop
sbb
cmp
scas
pop
lods
in
std
xchg
insb
pop
xchg
call
mov
stos
test
clc
inc
out
imul
add
xchg
scas
jne
jp
outsb
inc
push
test
ret
push
ss
pusha
mov
test
fidivs
out
jl
out
pop
jae
lea
imul
loope
adc
imul
jmp
loop
stos
push
out
mov
loope
or
inc
xchg
stc
filds
test
jg
jmp
ret
les
ljmp
data16
sbb
push
adc
push
imul
or
int3
pop
fld
push
mov
test
push
sub
bound
scas
pop
and
mov
insb
cmp
daa
mov
pop
cmpsb
nop
pop
xchg
sub
jns
cli
repnz
adc
inc
adc
movsb
aas
push
scas
jecxz
ljmp
lds
cmpsb
add
xchg
push
mov
sub
push
stos
stc
scas
push
and
xchg
fwait
dec
ljmp
movsl
jo
aaa
outsb
or
cli
push
stc
push
dec
push
mov
add
mov
decl
int3
inc
fcomp
inc
jae
das
in
ret
or
mov
xchg
fimull
add
dec
xor
loop
sub
and
xchg
pop
jne
push
test
fnstenv
push
xchg
imul
sarb
jns
mov
addr16
outsb
pop
lds
addr16
orl
mov
and
xor
dec
jae
fnstenv
cmp
mov
outsb
mov
cs
test
mov
out
mov
movsl
mov
into
test
jne
fcmovbe
cmpsb
jp
es
dec
loop
stos
call
nop
mov
call
inc
gs
loop
daa
xor
sarb
and
mov
push
rolb
mov
xchg
dec
inc
dec
aaa
lds
pop
in
hlt
mov
or
mov
test
cmp
imul
and
mov
fstpl
and
mov
push
test
fs
sbb
dec
jo
mov
jo
jl
jp
jno
addb
or
adc
ret
sahf
ljmp
inc
repnz
pop
jo
fwait
lock
outsb
xlat
test
loope
ljmp
movsl
dec
dec
jg
xchg
cwtl
xchg
stos
push
aad
jg
push
inc
sub
shr
shlb
jge
daa
call
fdiv
repnz
stos
xchg
dec
dec
mov
add
and
in
and
aam
ja
clc
cmpsb
sub
sbb
imul
and
cmpsb
mov
mov
add
leave
jb
call
sbb
mov
insl
addb
mov
test
sub
dec
jl
ljmp
std
push
divb
insl
mov
sub
xor
insb
push
push
out
pop
mov
push
xor
pop
sbb
movb
imul
add
dec
mov
add
mov
pusha
dec
push
mov
and
fwait
scas
shll
inc
or
pop
cwtl
and
inc
and
xchg
repnz
xchg
fldl
pushf
jmp
sub
xchg
xchg
sbb
pop
sub
imul
pusha
inc
stos
ds
shrb
cmp
insb
leave
mov
mov
add
ljmp
stos
cmp
test
pop
mov
or
jb
ja
cli
mov
test
subl
int
aad
ret
shlb
sub
push
sub
fisubrl
sbb
pop
xor
lock
adc
in
mov
inc
fstpt
dec
out
xor
ret
jb
dec
fcos
movsl
scas
loope
jae
in
stc
inc
out
inc
xlat
pop
lea
mov
fdivl
inc
jmp
pushf
cmp
repz
cmpsb
inc
mov
stos
jl
aaa
andb
xchg
sub
xchg
outsl
pop
dec
mov
sbb
je
popa
mov
lea
mov
lods
outsb
gs
cs
jg
sub
into
pop
gs
jl
jno
mov
cltd
xchg
cmp
cmp
cmpb
and
xchg
test
mov
inc
icebp
pop
inc
dec
sti
dec
dec
mov
cmpb
mov
mov
sti
mov
js
repz
lods
or
test
xchg
mov
xor
jp
cwtl
mov
add
xor
sbb
mov
pop
sub
sub
addr16
or
push
jbe
mov
fnsave
adc
lock
shlb
shlb
push
lds
jnp
mov
enter
jg
sub
sbb
jno
das
mov
ljmp
fisubl
cs
addb
pop
es
xor
int
out
inc
and
rcll
inc
mov
in
pop
xlat
mov
xor
mov
rcrb
inc
pop
sub
fwait
mov
sbb
cmp
fstps
push
adc
mov
subb
xchg
jp
sbb
push
mov
xchg
aaa
sbb
mov
insb
adc
test
inc
jae
aaa
dec
mov
das
pop
js
test
and
lret
cmp
fsubrs
add
xchg
xor
adc
insb
xchg
ds
stos
ss
cmpsb
or
std
les
lret
inc
ret
sti
sahf
cmp
loope
cmp
mov
and
xor
mov
mov
in
push
shlb
ficoml
div
fnstcw
movsb
dec
es
in
adc
dec
and
inc
jmp
daa
add
adc
cwtl
add
pop
mov
fimull
mov
sbbb
mov
out
dec
push
fwait
mov
ret
push
aas
shrl
jnp
and
inc
mov
push
lret
test
cmp
sbb
add
xor
fdivr
int
mov
aam
out
in
and
lret
cmpb
push
stos
mov
jo
shlb
and
cwtl
inc
xchg
mov
ja
push
mov
pop
scas
xor
xchg
jns
rclb
mov
repz
xor
inc
mov
lahf
icebp
popa
cmp
jl
mov
sahf
sub
xor
in
ficomps
xchg
jb
mov
xor
loop
sbb
push
jmp
insl
outsl
inc
sbb
stos
adc
jle
fs
insb
mov
call
mov
mov
out
pop
lds
pusha
jb
outsb
sbb
ret
into
shrl
cmp
cs
inc
push
cmp
dec
mov
out
cli
leave
dec
pop
jl
mov
ss
mov
out
lods
shll
xor
sub
cmp
xor
insb
loop
out
xchg
pushf
icebp
out
inc
push
inc
mov
shll
mov
es
mov
nop
pop
into
lods
xor
iret
jb
pop
cmp
mov
jno
call
jle
aad
mov
das
xchg
fwait
pop
xchg
mov
pop
ljmp
push
cwtl
jb
clc
mov
adc
shlb
xor
outsb
ljmp
cmp
enter
cmp
data16
daa
mov
das
mov
ds
jb
clc
cmp
lea
adc
ds
jmp
xor
pop
and
mov
mov
out
out
rolb
or
sub
and
outsl
mov
in
pop
push
adc
imul
cld
xor
popf
mov
inc
aaa
popa
mov
aam
push
adc
cmp
push
dec
inc
cmp
vmovdqu
or
xchg
sbb
push
mov
cmc
stos
xor
inc
inc
cli
mov
push
pop
sbb
xchg
lret
rclb
inc
xchg
jg
es
sub
sti
pop
fsubs
dec
shll
hlt
push
stos
xchg
aas
jmp
inc
notb
xor
push
mov
adc
in
push
jns
cli
push
hlt
push
nop
pop
adc
and
jae
inc
cmp
shll
pop
cmp
mov
mov
cli
stos
lods
mov
sub
xchg
push
push
push
cmp
and
xchg
xlat
push
sti
jg
into
xor
and
sub
jns
psubw
mov
add
jl
jl
and
loop
dec
xchg
mov
data16
nop
jns
cmp
mov
inc
or
add
fstpt
loop
pop
jp
jb
mov
dec
push
or
test
mov
inc
jle
lahf
cmp
cltd
stos
lret
loop
sub
inc
dec
and
ret
adc
xchg
jns
call
sub
xor
ds
xchg
xchg
mov
sarl
rcl
adc
mov
lds
leave
mov
shrb
stc
mov
push
or
fnsave
lods
jmp
subl
cli
xchg
int3
mov
jbe
fwait
out
dec
not
jle
inc
hlt
xchg
pop
sbb
xlat
into
sbb
sub
in
and
dec
sbb
pop
jmp
cmc
inc
mov
jg
inc
xchg
add
dec
out
push
aad
push
jo
pop
jb
fwait
scas
jnp
mov
lahf
gs
stos
pushf
mov
pop
inc
fwait
xchg
loop
jne
sbb
loope
jae
idivl
push
insb
stc
sahf
orb
inc
cmp
lret
loop
sbb
mov
jecxz
aaa
aaa
push
mov
ret
stos
les
std
in
ret
rcll
shlb
inc
dec
pop
cmp
ret
movsl
cmp
push
push
sub
inc
sbb
dec
addr16
mov
cmp
xchg
pop
sbb
jb
mov
test
mov
xchg
in
inc
sub
xchg
xchg
int
push
aas
push
xchg
mov
pop
jo
bound
pop
sub
call
lods
outsl
pop
jo
xor
pop
inc
and
sbb
sub
loop
scas
gs
stos
or
jo
loope
and
scas
mov
push
jp
add
fidivrs
xchg
jmp
cmp
pop
jecxz
arpl
inc
inc
leave
aad
pushf
test
jle
push
pop
push
mov
mov
mov
inc
fs
sub
out
push
imul
jbe
sub
push
xchg
add
sub
add
es
xlat
dec
push
scas
pcmpeqd
sub
xchg
adc
ds
fiaddl
aas
fwait
inc
test
add
shr
pop
inc
cmpsl
test
cmp
jg
mov
mov
sub
stos
mov
xchg
inc
rcll
cmp
outsl
jne
sbb
push
rcl
inc
ljmp
mov
je
es
stos
arpl
sub
inc
sub
outsb
cmp
sub
cltd
loope
push
sarb
mov
in
lea
lahf
mov
cld
cmp
jg
cli
test
and
push
inc
ret
pop
shrb
sbb
sub
mov
cwtl
mov
pop
sbb
mov
cwtl
loopne
je
fisubrl
xor
insb
jns
mov
xchg
jnp
ljmp
incl
mov
aam
adc
push
pop
imul
fnstenv
add
or
pop
ss
loopne
push
cmp
iret
sub
ds
test
ja
fmuls
lahf
xchg
jge
xor
mov
jns
cmpsl
mov
cmp
jecxz
sbb
cld
test
mov
or
ret
push
ss
leave
mov
mov
sti
inc
cmp
out
dec
nop
push
mov
lcall
inc
jle
push
adc
push
mov
xor
hlt
mov
arpl
sub
ds
fstpt
fldenv
dec
xchg
inc
jle
sub
arpl
mov
or
pushf
jecxz
stc
xchg
jno
pushf
pop
sbbb
es
and
pusha
in
xchg
fmull
stos
push
mov
cmp
add
and
aas
push
pop
aaa
call
out
js
jmp
inc
sbb
js
repnz
xchg
das
loopne
cmp
pushf
aam
lret
imul
popf
ret
call
lods
arpl
inc
iret
sbb
out
ljmp
loop
popl
out
mov
dec
pusha
js
and
dec
lret
leave
jnp
dec
lds
fs
and
jge
fisubrl
and
test
outsl
sbb
lock
iret
fisubl
movb
mov
push
cs
pop
xor
cmp
imul
cmp
jp
dec
xchg
cmc
sti
jecxz
inc
sbb
inc
flds
sbb
sbbb
jmp
fld
les
jne
scas
sub
mov
idiv
fwait
and
in
add
mov
hlt
mov
mov
push
mov
jnp
mov
mov
mov
std
sub
pop
xor
imul
fistps
es
add
pusha
cmp
in
pop
xor
inc
mov
bswap
mov
loopne
cmp
inc
insb
clc
mov
jns
pop
ds
mov
decl
popf
pushf
aam
push
das
sbb
or
movsl
pop
aaa
imul
stos
pop
stos
adc
and
mov
cltd
xor
testb
cltd
lret
sbb
dec
cltd
addr16
in
mov
ja
ljmp
sbb
dec
out
sub
push
cltd
addl
cmp
push
das
and
rcl
fisttpll
mov
mov
push
push
aaa
pop
adc
cmp
cwtl
mov
jge
outsl
push
push
ljmp
cltd
test
cltd
adc
stos
loopne
outsl
jnp
js
mov
ds
cwtl
lock
xchg
xor
inc
add
das
push
movsl
dec
popa
rorb
jmp
xor
rcr
inc
mov
pop
insb
cltd
jle
inc
xchg
jns
cmp
test
jnp
mov
inc
push
sti
push
jmp
pop
push
scas
xor
pop
stc
add
xor
test
fstps
icebp
popa
xor
outsb
bound
mov
loop
mov
rcr
mov
sbb
sub
sbb
ljmp
jmp
pushf
cmp
out
jo
inc
pop
test
loop
fdivs
sub
bound
push
into
pop
jg
ds
mov
fstpl
aaa
lock
xchg
shrb
ljmp
mov
mov
push
adc
insl
pop
and
dec
push
and
push
pop
jae
daa
insb
mulb
cmp
std
leave
scas
push
ss
jle,pt
xchg
sti
hlt
cmp
add
cmp
xlat
dec
cmp
test
adc
mov
lret
jo
and
mov
jmp
cmp
cmp
cmpsb
sub
mov
push
gs
cmpsl
mov
scas
ljmp
xlat
mov
cmp
inc
lahf
mov
call
dec
dec
pop
das
cmp
inc
arpl
scas
ret
mov
and
loop
dec
fsqrt
push
scas
or
outsl
es
inc
fstp
pop
push
push
loope
pusha
mov
mov
lds
rcll
aas
sbb
hlt
or
lds
inc
mov
fbld
test
push
inc
dec
dec
mov
rcrb
icebp
call
sbb
popa
stos
jnp
mov
lea
outsl
lds
mov
sub
orb
lock
aaa
dec
pop
push
jnp
mov
push
lcall
mov
sub
lock
loope
loop
xchg
inc
sub
dec
xor
mov
movsb
push
pop
and
dec
popa
push
or
mov
push
inc
outsb
je
xor
adc
orb
xchg
inc
fwait
outsb
push
neg
xchg
lock
arpl
and
pop
xchg
movsb
push
addr16
pusha
ljmp
mov
cltd
dec
in
cmc
jecxz
ficomps
add
fadds
insb
xchg
push
sub
call
push
pop
sahf
pop
sub
jns
xlat
divb
inc
shrb
mov
int
fildl
enter
mov
adc
insl
cmp
in
xor
shlb
push
xorb
dec
xor
gs
mov
sub
dec
dec
das
imul
je
or
jnp
scas
imul
jnp
into
addr16
mov
sbb
xor
mov
fisubl
sbb
add
mov
sub
lds
jge
ret
add
xchg
pop
inc
mov
dec
aaa
pop
mov
pop
icebp
mov
cmp
out
xchg
aad
jns
ret
xor
cmp
js
cmp
xchg
bound
xor
jne
jb
test
fwait
mov
jecxz
in
add
sub
pop
inc
mov
jbe
cli
mov
outsl
sub
pop
push
adc
sarl
adc
lret
jecxz
add
jnp
xchg
lea
insb
adc
adc
es
mov
adc
xor
rorl
jb
pop
pop
cmp
jmp
or
std
mov
lock
movsl
je
dec
pop
addb
push
jp
sbb
inc
scas
ret
mov
sub
cmp
shld
inc
cmp
cld
mov
lds
rcrl
mov
into
inc
arpl
std
out
jg
shl
xchg
push
into
ds
idiv
mov
jg
jl
adc
cmp
out
push
cmp
hlt
sar
enter
xor
sub
cli
movsb
mov
cli
sub
dec
push
leave
mov
cmp
pop
test
lcall
pop
addb
pop
test
push
inc
sub
lods
scas
xchg
cmpsb
jnp
arpl
cmp
push
js
loopne
outsl
sub
sub
das
insl
pop
aad
shll
shrb
mov
out
psubusw
and
sub
mov
fs
daa
jle
into
push
add
mov
daa
inc
mulb
cltd
xchg
mov
mov
adc
push
mov
pop
lods
and
sub
mov
nop
scas
mov
pop
clc
mov
sub
sahf
shrl
fcmove
add
or
in
daa
clc
and
lds
xchg
lods
fs
insl
aaa
and
and
popa
dec
nop
sbb
mov
xchg
inc
outsb
xchg
arpl
cli
lret
dec
adc
cmp
fisubl
cmp
out
cmp
ficompl
jae
test
sub
scas
push
jg
or
mov
mov
mov
inc
test
jp
clc
jnp
push
xor
jb
add
sub
add
icebp
lret
sbb
rcl
inc
adc
mov
aas
add
scas
push
leave
jo
call
xchg
jl
ja
stos
pop
jp
inc
test
xchg
push
jp
sarl
xor
in
push
xchg
arpl
ljmp
in
test
arpl
jmp
jg
mov
adc
xor
sbb
dec
out
repnz
cld
scas
shl
stos
loopne
push
test
or
mov
push
enter
pop
rorl
xchg
into
popa
jno
je
clc
mov
xor
scas
testb
add
shrb
mulb
shrb
mov
clc
dec
mov
fwait
repnz
mov
decl
or
add
test
or
call
bound
movsl
and
mov
add
push
push
pop
data16
stos
subb
or
mov
jbe
inc
fmuls
cld
shl
cmp
lods
adc
out
scas
and
pop
or
popa
xor
icebp
adc
add
push
or
dec
test
xor
cltd
xchg
inc
lret
sbb
testl
sub
sarb
sub
rolb
dec
stc
push
and
jp
out
loop
test
pop
mov
push
fwait
das
movsb
ret
and
dec
mov
cmp
fsubrl
mov
notb
lcall
add
mov
add
clc
call
loop
fwait
loop
cmp
leave
cmp
stc
addr16
mov
mov
xchg
xor
in
mulb
dec
dec
popf
es
adc
outsl
pop
jle
repnz
mov
cmp
xor
or
and
sbb
inc
jns
jo
mov
scas
xchg
xchg
adc
jle
sbbb
xlat
push
mov
sbb
arpl
lods
hlt
cmpsb
or
jne
jo
add
js
outsl
dec
popa
jnp
mov
ljmp
jb
arpl
loop
in
xor
movsb
mov
and
arpl
scas
pop
adc
loopne
xchg
sbb
push
fdivl
and
jae
push
enter
das
cltd
sbb
or
inc
sarb
fcoms
mov
jecxz
add
daa
cmp
mov
clc
or
xchg
rorb
push
jge
pop
jg
pop
sub
xor
push
sub
movsb
push
test
push
push
gs
adc
mov
sti
xchg
outsl
push
push
pop
xchg
loop
mov
xlat
add
addl
cmp
push
mov
cmpb
fmuls
adc
ss
fdivrs
mov
push
js
ret
mov
adc
cmpsb
xor
movsb
dec
mov
andb
cmp
mov
repz
add
mov
cli
xor
cmp
cmpb
pop
shl
and
adc
pop
mov
sar
popa
sahf
xor
aam
imul
mov
fsubrl
push
ss
xor
sbb
repnz
outsl
dec
mov
sbb
scas
filds
jno
aaa
dec
es
push
xchg
push
inc
outsb
sbb
jmp
mov
cmp
push
xorb
mov
mov
fwait
and
xor
cli
jge
fwait
addl
cmpsb
mov
mov
in
cs
adc
jbe
push
sti
icebp
shll
xor
fistpl
fwait
into
inc
es
xor
pop
push
stc
push
cmp
pop
or
jbe
imul
add
mov
cmp
ss
fidivrs
sub
add
and
dec
andl
test
sbb
stos
mov
add
adc
cwtl
int3
and
inc
std
mov
cli
test
sti
hlt
mov
clc
mov
dec
gs
jp
pop
push
dec
xor
inc
xchg
pop
mov
xchg
out
push
hlt
aaa
lcall
stos
lret
sbb
pusha
mov
imul
sbbb
pop
out
cmp
jb
insl
lods
cmp
pushf
add
xchg
aaa
fcmove
ds
cmp
lds
sbbb
in
push
mov
xor
cmp
enter
in
jns
sbb
xchg
outsb
add
inc
mov
and
sub
mov
mov
mov
scas
pop
add
jbe
clc
or
add
ljmp
loopne
push
js
jb
repnz
scas
pop
push
inc
cmp
add
cltd
cmp
mov
cmpsb
fisubrs
sbb
ljmp
out
into
adc
pushf
mov
cs
push
xor
sbb
cmp
inc
adc
add
push
xor
push
dec
xor
pop
sbb
push
lahf
fs
mov
cli
loopne
xchg
pop
jnp
dec
lcall
sub
loop
sahf
jb
in
rorb
pop
cltd
insb
je
pop
cmp
stos
pushl
or
aaa
and
push
fwait
push
inc
xor
repnz
adc
push
dec
pop
and
xchg
pop
jmp
jmp
mov
push
cmp
mov
imulb
dec
daa
xchg
sub
xchg
repnz
jnp
loopne
dec
push
add
sbb
dec
or
ds
aaa
mov
pusha
ficoms
frstor
in
sahf
mov
std
mov
fsubl
dec
cmp
and
jae
mov
pop
xor
stos
mov
jl
or
bnd
xor
and
sub
arpl
mov
or
mov
test
ja
add
xor
sarb
jne
cmpsb
ret
cli
rcll
fidivrl
push
push
and
cmp
xchg
adc
pop
dec
clc
sub
insb
pop
or
in
or
fcoms
pushf
add
aas
sub
mov
mov
dec
imul
fnstenv
pop
pop
jp
cmpb
icebp
repnz
std
xor
mov
inc
inc
js
lahf
inc
imul
rcrb
jns
xor
fisubrs
or
andps
mov
enter
es
sbb
notl
imul
push
stos
out
fdivrs
jp
test
and
sub
add
pop
ret
pop
xor
jno
test
imul
jb
inc
dec
push
xchg
xor
clc
repz
addr16
sub
daa
jmp
das
jae
cwtl
add
fcomps
jbe
out
mov
ljmp
mov
hlt
scas
sub
adc
pop
aad
repnz
push
cmp
mov
sahf
xor
push
push
jge
cmp
mov
mov
cli
fdivl
es
faddl
sbb
pop
enter
jbe
inc
push
shll
jmp
jo
insb
mov
fidivrs
shlb
decb
mov
jmp
or
popa
mov
sbb
xor
in
clc
aaa
stos
fisubrs
jl
es
push
and
jge
push
jecxz
jbe
inc
mov
mov
and
sarb
sbb
add
mov
adcb
fmuls
cmovg
ja
mov
fisubrl
pop
jmp
pushf
clc
mov
popf
jns
aas
push
ss
ficompl
push
hlt
inc
adc
mov
mov
clc
cmp
sbb
adc
jmp
sub
cltd
and
cli
cmp
sub
dec
jg
nop
xor
es
mov
pop
test
mov
out
lds
icebp
and
mov
cwtl
sbb
es
les
mov
jp
es
andb
inc
push
mov
sbb
jae
push
adc
pop
shrl
sbb
insl
or
jecxz
jae
cltd
jge
stos
jo
sbb
les
imul
clc
adc
aam
sbb
inc
fwait
jns
add
jp
mov
add
es
in
fs
addr16
mov
inc
push
into
imul
mov
sbb
out
mov
inc
lcall
add
outsb
dec
out
jecxz
push
and
insb
xor
jg
dec
jmp
dec
sbb
and
mov
nop
or
xor
mov
out
jmp
jp
out
cmp
dec
push
or
and
andl
aas
inc
adc
xor
sar
pop
jmp
js
fs
insb
aas
je
inc
cmp
loop
jns
push
sbb
xor
jno
movsl
gs
das
mov
leave
pop
cld
imul
insl
test
ud2
cld
jnp
addr16
out
xchg
fildll
lahf
in
sub
out
xchg
inc
fs
push
repz
xchg
dec
ja
inc
or
cmp
sti
lds
and
or
std
push
dec
das
out
scas
pop
cwtl
ds
adc
push
fdivr
incb
mov
and
dec
inc
imul
pusha
xlat
cmp
outsb
arpl
jnp
pop
in
stos
lods
nop
test
cmpsl
loopne
xor
push
xor
fcoms
aaa
mov
add
pop
pop
sbb
jmp
jmp
pop
ds
cmpb
jp
in
or
lods
cwtl
cmp
jge
dec
xchg
ds
repnz
fs
lds
inc
loop
clc
push
xor
stc
mov
inc
bound
jg
xor
imul
std
or
call
jmp
repnz
inc
and
ds
push
mov
cli
fxam
imul
and
mov
dec
das
sbb
pop
mov
sbb
popf
push
popa
ret
and
test
les
push
mov
nop
sahf
aas
add
sub
popf
sub
imull
inc
sub
fdivrs
test
inc
pop
aam
pop
test
add
inc
shrl
jae
lcall
je
stos
jne
mov
insb
dec
dec
arpl
movsb
insl
cmp
sub
daa
sub
call
mov
inc
fdivrl
daa
inc
aad
sub
or
and
arpl
ljmp
pop
jge
add
mov
jae
in
iret
jmp
stos
mov
mov
fdivrs
dec
push
outsb
mov
arpl
loop
adc
add
inc
call
pop
push
jb
dec
xor
je
out
dec
dec
sbb
dec
imul
jno
mov
adc
repz
mov
push
stos
mov
pop
lods
pop
cmp
pop
add
bound
fs
inc
add
xchg
mov
sub
gs
or
loop
pop
stc
pop
hlt
sub
jae
xchg
mov
adc
mov
inc
scas
imul
mov
inc
push
movsl
lods
imul
or
pop
jns
sahf
xor
stos
mov
inc
pop
daa
jmp
push
or
xchg
das
cmp
faddl
dec
loop
jae
aaa
stos
out
cmc
mov
bound
dec
xor
inc
dec
gs
or
pop
lea
dec
aaa
les
imul
pushf
inc
jmp
repz
cmp
jecxz
xchg
scas
jae
adc
sub
fisubrl
dec
cs
dec
ret
xor
jae
mov
jmp
out
fdivs
fdivl
mov
jnp
dec
inc
stos
repz
ss
data16
mov
adc
xchg
dec
pop
loope
cmp
jae
shll
test
xor
mov
mov
jle,pt
adc
or
enter
cwtl
sbb
push
inc
das
mov
addr16
imul
mov
aas
aaa
lock
cwtl
inc
shl
sarb
mov
mov
inc
cli
mov
and
dec
inc
aam
shrb
pop
dec
movsl
shrb
test
sbb
push
mov
scas
sbb
mov
cmp
push
or
lret
cs
in
push
arpl
ljmp
movsl
xchg
and
dec
pusha
gs
fcmovnb
imul
cmc
jge
inc
lret
subl
inc
mov
xor
cmpsl
mov
sub
jp
shll
sub
ret
add
sub
fidivrl
test
pop
jns
hlt
ds
stc
pop
jge
or
adc
bound
xchg
xchg
xchg
ja
sub
outsb
cwtl
out
adc
adcl
incl
inc
repz
sub
popa
dec
inc
pop
in
push
lahf
cmp
int
mov
lahf
aas
mov
push
call
test
stc
push
jae
mulb
mov
lahf
jae
test
iret
pop
inc
xor
cld
xor
add
es
lret
cld
mov
fsubrl
inc
cmc
or
xchg
fucomip
mov
mov
aad
addl
xchg
in
mov
cmp
adc
xor
xchg
pop
add
push
rol
outsl
pop
fs
cmp
cmp
repnz
std
aad
loopne
mov
inc
and
cli
frstor
or
jmp
stos
hlt
xor
sub
pop
push
push
stos
mov
orb
loop
and
out
lcall
push
popf
cs
lret
jbe
andb
cmp
scas
inc
add
ret
adc
loopne
cli
inc
jbe
fs
insb
xchg
and
sub
push
mov
negb
rclb
je
dec
rclb
loope
push
negb
xchg
or
jmp
in
popa
clc
add
in
add
add
dec
fistl
lret
xchg
mov
mov
inc
jmp
mov
and
leave
inc
xchg
lret
or
sub
jecxz
rcr
aas
cmp
push
popa
loopne
adc
dec
sbb
jo
xchg
cwtl
repnz
xor
jmp
or
in
shrl
push
dec
xor
sub
xchg
mov
je
add
daa
ss
cmc
add
daa
into
stc
clc
push
inc
popa
pop
pop
sbb
push
lcallw
jne
lds
test
jg
mov
add
push
add
repnz
push
mov
or
add
xor
popf
loope
jns
or
imul
jmp
bound
pop
fildll
repnz
mov
ret
jb
push
iret
out
bound
sbb
xchg
or
dec
cmp
sbb
cmp
cmp
and
shlb
mov
xchg
andl
cmp
push
or
movsl
mov
test
xchg
pop
in
cmp
movsb
mov
out
adc
sbb
mov
mov
mov
dec
or
cltd
dec
pop
mov
mov
sub
mov
call
jno
rcrl
leave
aas
lds
inc
cmp
addl
scas
cli
shrl
jne
data16
int3
clc
adc
xchg
push
mov
sahf
adc
aaa
xor
pop
stos
lea
test
or
and
bnd
hlt
out
xor
subl
fistps
fisubrl
xchg
lcall
mov
xlat
aas
push
sub
dec
stos
fldt
dec
inc
bound
pop
mov
out
pop
mov
cld
dec
mov
into
cli
inc
mov
push
stos
xchg
mov
lods
pop
jae
dec
mov
or
mov
insb
xchg
sub
out
mov
adc
sarl
movsl
and
dec
sbb
aas
mov
cmp
or
in
lret
and
push
mov
xor
xchg
lahf
cltd
xchg
sub
jecxz
adc
dec
scas
mov
and
mov
mov
mov
add
dec
je
imul
sbb
rcr
mov
lea
scas
in
fsubs
jge
mov
xchg
dec
pop
fsubrs
aaa
mov
inc
xchg
or
cmp
xchg
adc
adc
jbe
ficoml
adc
and
fistps
ficoms
cs
sbb
enter
jae
jle
fwait
adc
sar
outsb
insb
push
mov
mov
push
or
out
scas
push
movsl
xor
inc
movsl
cli
add
aas
or
mov
lret
std
pop
out
ror
loope
stos
xor
jno
adc
push
sbb
mov
push
dec
stos
inc
ja
fiaddl
mov
ljmp
push
xor
es
aaa
jle
movsb
sub
scas
dec
pop
iret
rolb
fistps
mov
jecxz
loope
mov
adc
jmp
jb
fdivs
int
cmp
mov
and
adc
cmp
outsb
out
add
ret
outsb
mov
out
mov
cmp
call
mov
inc
xor
lock
inc
cltd
mov
xchg
outsl
sarb
cmp
cld
outsb
jg,pn
lods
shr
jp
pop
xchg
fstl
push
xchg
out
in
dec
call
sub
lcall
dec
mov
and
outsl
cmpl
push
adc
call
cmp
cmp
nop
rcr
add
movsb
push
jb
or
push
cmp
leave
pop
das
imul
dec
jo
cltd
enter
sub
cmp
stc
adcl
jbe
cmp
xchg
add
adcb
gs
mov
push
outsb
sbb
xor
pop
stos
pushaw
push
arpl
pop
loop
mov
lret
mov
cmp
jns
and
dec
jg
scas
pop
out
mov
fisubrl
lret
adc
push
daa
xor
pop
push
sub
cmp
mov
push
fcomip
mov
test
shrb
push
popa
xor
incb
imul
xchg
stc
and
pop
in
inc
rol
xchg
movsb
iret
leave
mov
pop
add
arpl
or
push
add
mov
push
or
leave
push
cs
insb
xchg
jae
push
loop
cmp
inc
cmpsl
adc
jle
pop
shll
add
push
cmp
sbbb
shlb
or
and
clc
pusha
dec
adc
sub
ficoms
test
xor
popa
and
outsb
dec
inc
movsl
int3
mov
fwait
cmp
lods
aad
pusha
int3
pop
or
fldcw
hlt
inc
sbb
jns
sbb
jae
or
mov
enter
pop
shll
xor
adc
push
in
dec
fidivl
and
xchg
cmpsb
and
scas
push
fstpt
in
mov
mov
lret
pop
push
test
addb
dec
and
ds
jecxz
cmp
push
sbb
outsb
mov
pop
dec
lds
cld
ret
pushf
call
dec
cmpsl
fisttps
push
xor
xor
outsb
insb
dec
push
loopne
pop
mov
xchg
cmp
or
pop
frstor
lea
and
sbb
xor
cmp
lret
ret
mov
imul
jg
or
sbb
out
scas
mov
pop
dec
xchg
imul
test
aas
imul
pop
aad
lds
xchg
filds
fs
jle
rorb
mov
pop
and
xor
imul
mov
aaa
jae
sbb
inc
vmovaps
icebp
clc
and
jnp
push
sub
inc
pop
fldt
sub
xor
mov
mov
mov
sub
pop
or
push
push
mov
ja
mov
dec
mov
cli
sub
jae
xorb
into
mov
jnp
xor
push
icebp
mov
in
scas
and
pusha
call
jmp
inc
outsb
xchg
sbb
aaa
mov
inc
das
imul
jb
push
js
pop
jg
shl
sub
or
pop
add
xor
add
and
cltd
lds
xchg
cs
fstl
shl
stos
mov
fwait
pop
fstpt
sbb
mov
test
add
daa
xchg
xor
mov
jmp
jnp
test
inc
frstor
add
dec
xor
inc
sbb
cli
mov
mov
bound
movb
push
je,pt
push
xor
sub
inc
jle
dec
jnp
jne
jp
sbb
jae
pop
cmp
dec
pop
mov
arpl
or
sbbl
fisttpl
push
aad
jp
out
mov
mov
ljmp
cmp
jge
mov
xor
push
mov
inc
scas
push
lock
orb
pop
aas
jno
inc
scas
icebp
xor
lea
xorl
fsubrl
scas
fcmovnb
lods
mov
sub
cmp
cvtpi2ps
aas
subl
cmpsl
sub
xchg
mov
out
stc
imul
leave
push
jl
repnz
daa
jmp
nop
and
sbb
in
mov
stc
data16
jne
mov
hlt
loope
imul
ss
or
ret
cmpsb
loop
cmp
sti
daa
ljmp
insl
xor
inc
and
lea
mov
mov
dec
pop
stos
sub
scas
mulps
mov
dec
cli
jbe
sbb
mov
rcrl
movb
or
xchg
cmp
out
jnp
aaa
mov
ja
js
or
fistl
pop
mov
sub
cmp
pushf
mov
add
add
push
jns
mov
lret
rcr
mov
mov
loop
sbb
lods
xchg
sbb
jle
sbb
sub
jle
lret
sub
stos
and
nop
mov
push
iret
mov
cmpsb
and
dec
int3
pop
jbe
xor
mov
jp
inc
aaa
push
pop
pop
sbb
outsb
ret
cli
mov
call
movsl
hlt
scas
inc
dec
xor
shlb
jp
pop
and
movsb
jecxz
dec
cli
lods
test
test
imul
push
dec
in
inc
adc
mov
dec
jp
mov
or
incl
test
sbb
pop
addr16
cmpl
int3
repnz
cmc
je
orb
in
push
xchg
sub
adc
pushf
jae
mov
pusha
sti
das
jp,pt
cmc
pusha
imul
rorb
jae
fsubrl
cltd
pop
cmp
pop
sbb
arpl
imul
je
jbe
mov
jecxz
xor
jo
xor
out
jge
and
arpl
cmp
pop
inc
cmc
fbld
mov
loop
mov
test
cmp
sbb
mov
pop
shrl
xchg
add
jb
cmpsl
subb
jo
jbe
int
mov
loop
fdivl
rorl
lea
or
cmpsb
add
fmull
out
stos
pop
out
sbb
insb
std
sti
loope
cmp
cmp
ds
mov
and
pop
arpl
test
pop
nop
fnstsw
mov
rcrb
sti
mov
and
sbb
and
jg
pop
pushf
nop
cmp
pop
pop
jecxz
aas
mov
jg
sbb
jge
and
pop
add
ficoml
jnp
dec
inc
insl
and
xchg
push
lret
add
sbb
sub
lahf
shrb
stos
cld
push
aam
and
inc
cli
mov
push
test
lea
int3
scas
lret
add
rorb
in
js
pop
jb
sbb
fldcw
aad
mov
fs
dec
push
mov
xor
sbb
push
sarb
pop
imul
push
sbb
adc
ljmp
addr16
out
cltd
push
out
mov
mov
mov
jg
stos
sub
leave
adc
inc
lcall
test
cwtl
xor
jns
lods
orb
stos
jmp
xor
sub
sbb
pop
mov
sub
rcll
decb
rolb
pop
imul
ja
xor
jo
xor
popa
dec
mov
call
or
loope
test
sub
mov
insb
fistpl
sbb
enter
loopne
inc
push
push
add
mov
jp
fld
push
jp
mov
push
insl
je
mov
out
sbb
in
out
xacquire
xor
ljmp
adc
imul
or
pop
jne
lds
sub
inc
ss
xchg
sub
clc
adc
xor
dec
adc
add
dec
ds
pop
imull
fdivl
push
rorl
and
jno
out
std
mov
pop
cmp
mov
and
test
loop
mov
sub
repnz
push
or
cmp
outsl
xlat
mov
scas
add
push
and
int3
cltd
sub
xchg
lret
into
stos
inc
into
repnz
and
xchg
inc
xchg
pushf
push
ljmp
sti
adcl
push
jno
stos
xchg
pop
add
xor
dec
faddp
sub
jle
sub
out
xchg
push
aas
sub
xor
jge
mov
nop
xchg
stos
enter
cli
xor
movsb
mov
imul
call
and
xchg
lret
adc
bound
loope
cmp
add
push
adc
sbb
imul
fcompl
jg
dec
movb
daa
sti
lret
jp
ret
insl
or
xchg
je
lds
ljmp
and
insb
mov
adc
fwait
lret
std
bnd
mov
xor
mov
das
xor
fmuls
push
ds
push
mov
add
pusha
repz
xchg
mov
scas
push
jne
xchg
pop
outsl
sti
repnz
pushf
int3
lret
mov
dec
stc
xchg
cmp
cmp
mov
add
sbb
inc
je
push
pushf
aam
xor
pop
insl
sbb
dec
push
and
arpl
pop
lods
test
fisubrl
jle
dec
pusha
push
or
add
xor
or
mov
xchg
ljmp
or
sub
cmpsl
out
cmp
hlt
sbb
and
mov
pop
push
aas
lods
movsl
pushf
stc
add
cmc
mov
sahf
xchg
jmp
inc
stos
mov
icebp
sbb
movsl
xor
decb
lret
add
stos
dec
pushf
sub
loop
jae
test
and
and
xor
inc
sub
push
mov
loope
add
imul
jp
mov
inc
popf
jbe
and
test
mov
mov
shrb
icebp
je
pop
sbb
xor
xor
inc
sub
push
aam
inc
call
clc
jg
xchg
add
pop
ja
mov
out
mov
mov
dec
jge
mov
mov
adc
ja
jmp
daa
and
cwtl
sahf
enter
add
jp
mov
mov
scas
in
ja
fimuls
mulb
das
cmp
fistpl
lods
repz
leave
int
popl
addr16
insl
into
push
cmp
jbe
mov
push
mov
nop
lcall
out
xchg
xchg
ret
dec
xor
fsubl
test
xchg
addr16
mov
ja
mov
lock
hlt
push
lret
xor
loopne
inc
pop
sarb
push
rolb
shlb
and
incb
fdivrs
jns
jecxz
mov
lret
mov
push
ss
pop
out
jmp
sbb
rcl
sarb
sbb
pushf
lods
push
xlat
aaa
shlb
xchg
inc
dec
outsb
nop
mov
into
push
xor
rol
aaa
shrb
std
cmp
or
pop
insl
xlat
fstp
inc
adc
cmp
jae
mov
push
lock
mov
cmpsb
cmp
leave
stos
lock
int3
adc
mov
out
jo
mov
aas
cmp
mov
xchg
ret
or
sub
push
sub
rolb
pop
add
sub
stc
call
ficoml
icebp
fwait
sbb
orb
mov
cmp
sahf
sbb
xchg
movsb
xchg
push
cmp
inc
bound
scas
ret
sti
mov
cmp
fmull
mov
fsubl
jne
dec
xor
mov
in
stos
sbb
sub
popa
pop
xor
mov
int3
xchg
fbld
lods
inc
and
fisubrl
dec
pusha
fcompl
lahf
lcall
push
sbb
ljmp
cmpsb
and
scas
sub
mov
push
mov
out
cli
std
aas
ljmp
nop
cld
xorl
mov
shll
mov
repz
inc
das
test
add
push
cmp
push
jno
mov
sbb
insl
fcmovb
cli
push
push
data16
sub
shr
pushf
xor
outsb
add
jp
sahf
sub
xor
mov
outsb
cli
push
mov
mov
xor
sbb
jmp
mov
sti
iret
paddsb
sub
scas
jae
mov
testb
dec
int3
aaa
pushf
push
jb
je
xor
fwait
mov
push
repnz
fwait
test
mov
cltd
das
subb
xor
adc
dec
ficoms
sub
cmp
add
sbb
jb
mov
add
arpl
dec
xor
gs
das
mov
shrb
ss
jne
call
pop
cmp
arpl
xchg
pop
test
xchg
fcmovb
mov
dec
loopne,pt
mov
jo
nop
jo
cmp
test
cmp
cmp
xchg
cmp
jl
outsl
aad
push
adc
mov
sub
pushf
cmp
jb
cmp
pop
or
add
bound
mov
inc
or
int
andb
cld
xchg
mov
mov
mov
jp
push
mov
out
enter
sbb
call
and
inc
mov
out
adc
cli
out
pop
dec
fidivrl
lahf
jno
push
outsl
lods
and
cmc
push
jnp
push
stos
sbb
popf
sbb
pushf
out
pop
fsubs
jp
push
cmovae
add
imul
pop
jnp
inc
sbb
inc
aas
pop
dec
dec
push
jae
test
or
jno
clc
notb
cli
mov
or
mov
sbb
sub
insb
xchg
lret
dec
xchg
aas
imul
cli
mov
pop
pop
cmova
sub
pop
lds
mov
xor
sbb
in
pop
xor
push
jns
lcall
test
mov
fwait
and
mov
xchg
fmuls
rcrl
xchg
aad
nop
ds
xor
and
pop
ljmp
and
add
shlb
and
dec
das
xchg
rcpps
mov
and
pop
in
push
and
inc
cmp
stos
out
clc
and
and
test
lock
push
fnstsw
pop
jecxz
mov
imul
movsl
jo
pop
popf
lahf
fiadds
jbe
jg
das
inc
sub
sub
nop
and
push
and
jnp
scas
and
and
xchg
arpl
add
xor
mov
ljmp
add
xchg
jnp
cmpsl
mov
mov
lock
adc
push
mov
popf
sbb
scas
loop
xchg
or
mov
inc
rcll
and
cmp
add
add
out
xchg
sub
jo
add
mov
jg
notb
inc
xor
push
iret
pop
aaa
lds
mov
std
insb
fisttpl
sbb
jl
dec
ljmp
inc
push
cwtd
mov
xor
dec
js
lret
dec
jo
jae
ja
lret
ret
mov
ret
and
push
or
cli
xor
sub
and
cs
ljmp
xchg
jp
xchg
pop
mov
dec
mov
test
loop
adc
xchg
sbb
inc
sbb
cli
cmp
nop
loopne
pop
sub
xchg
dec
hlt
testb
jo
pop
fcoms
aam
aas
cmp
jae
rorb
bound
jo
cli
cmp
jg
push
sahf
pushf
inc
into
test
xor
ljmp
negb
in
sub
cmp
lret
pusha
jo
lret
out
insl
pop
cmp
sbb
ljmp
pop
mov
pop
movsb
and
out
fidivrs
push
negl
cli
xor
jae
lds
push
dec
jns
or
pop
mov
pop
xor
stos
mov
push
cmpsl
add
inc
mov
mov
jne
outsl
fstpl
mov
ret
es
cmpsb
and
das
xor
mov
leave
test
out
jno
and
xchg
les
pusha
xchg
add
xchg
data16
loopw
stos
push
xchg
and
stos
xchg
aas
pushf
pop
fxam
sbb
ret
mov
pop
xor
push
negb
and
jle
cld
dec
pop
ret
push
mov
in
mov
xchg
sahf
pop
adc
dec
mov
mov
push
cmc
pop
movsl
aam
addb
inc
jb
cmp
pop
rorb
aaa
mov
popa
and
dec
push
mov
xchg
cmp
ret
pop
out
sbb
call
repnz
imul
outsb
dec
add
cwtl
imul
push
dec
inc
cmp
jg
xor
push
movsl
jp
jg
push
sbb
inc
mov
and
movsb
xchg
mov
bound
aaa
jb
sub
repz
fs
cmpsb
jb
repz
adc
inc
iret
dec
jmp
into
cli
nop
mov
cmp
mov
insb
cmp
xchg
fs
out
int
add
es
mov
sub
addr16
or
fiaddl
add
push
ljmp
mov
cmp
mov
sub
imulb
xor
jae
mov
bound
push
xlat
ret
outsb
fcmovb
xchg
fimull
lcall
xchg
mov
push
loope
das
arpl
cmp
xor
sub
add
sahf
sti
cmp
jg
jg
xlat
cmpsl
or
add
mov
mov
inc
cmp
pop
es
jne
adc
add
ljmp
jecxz
add
pop
sub
ds
bound
xor
js
add
cmpsb
pop
js
xchg
aas
pop
call
pop
sti
mov
push
imul
cmp
stos
push
ss
je
and
ret
sub
adc
sbb
mov
mov
sahf
cwtl
mov
and
addr16
mov
cmp
stos
cmp
sub
mov
mov
cltd
push
add
iret
in
sbb
dec
add
mov
shll
jp
outsb
lret
dec
mov
mov
outsb
xor
xchg
inc
imul
mov
sbb
fwait
jo
adc
mov
idivb
sub
test
repnz
mov
push
mov
fists
es
and
gs
or
push
pop
mov
add
stos
fmull
dec
cmp
pop
idivb
xor
mov
xorl
jo
mov
mov
mov
inc
inc
out
xorl
aam
and
jne
push
cmp
scas
popl
jecxz
dec
ror
jbe
ss
sbb
sub
data16
cmp
call
xchg
mov
and
or
xchg
and
mov
dec
or
outsb
ja
popf
inc
xlat
lds
inc
xlat
call
jnp
push
pop
in
ja
cmpsl
lret
fwait
xor
idivb
xchg
int3
jl
dec
sbb
mov
repnz
mov
fs
xchg
xor
xchg
rclb
inc
add
and
or
int
dec
ljmp
push
and
std
xchg
xchg
fs
daa
lds
int3
stos
rcrl
jbe
add
jmp
loope
data16
sbb
xor
sub
in
aas
mov
ret
jb
xchg
mov
in
pop
popf
je
bound
dec
cmpsb
mov
mov
sbb
add
dec
xchg
arpl
cli
les
xor
jo
inc
enter
je
bound
cld
ret
insb
pop
pop
pop
mov
popf
and
pop
xchg
pop
adc
inc
mov
cmp
jno
mov
mov
pop
mov
cmp
jg,pt
mulb
xor
xor
cmpsl
mov
mov
xor
imul
push
jg
ret
pop
sbb
out
mov
cmp
sti
call
pop
lods
push
pop
lea
cwtl
insb
pop
inc
mov
xor
shll
ja
sub
loope
pop
scas
dec
stc
mov
mov
inc
cmp
ret
adc
and
cmp
lea
mov
imul
test
je
daa
cmp
mov
sbb
ficomps
sub
adc
mov
sbb
dec
lock
sub
dec
cli
pop
xchg
lds
ds
push
js
jae
push
ret
mov
fldenv
xchg
imul
scas
xchg
test
out
arpl
out
pop
out
push
aas
mov
popa
ret
lods
pop
sbb
out
xchg
or
outsb
jb
ljmp
pop
xchg
and
adc
outsl
jecxz,pt
leave
movb
fsubrp
mov
lret
xor
cwtl
in
inc
rcll
stos
or
add
pop
pop
fdivrl
xchg
vmovntpd
sub
ret
arpl
mov
jmp
lcall
andl
or
dec
movsl
cmp
inc
mov
push
push
pop
loopne
fdivl
popf
repnz
push
mov
shlb
dec
jmp
aad
out
loop
pop
inc
inc
dec
and
pop
sub
out
imul
inc
push
test
adc
push
pop
xchg
xor
sbb
loope
sbb
xchg
push
or
adc
aas
mov
mov
fwait
mov
dec
popa
loop
cltd
adc
sbb
pop
call
jne
std
dec
or
in
ret
insb
xchg
out
fidivl
cli
mov
fistpl
add
lea
xor
lds
sub
daa
inc
insl
cmp
stc
push
add
sti
xchg
call
mov
push
jb
imul
test
pop
stos
sub
movsb
cmp
lahf
cmp
loop
cmp
shlb
lcall
pcmpgtw
add
rorl
jae
inc
inc
cld
pop
outsb
lods
cmpsl
pop
scas
shlb
inc
fwait
insb
xor
into
fdivr
fs
addr16
sbb
add
insl
fidivrl
ret
xor
shlb
lcall
jae
dec
sbb
push
enter
push
xchg
out
cltd
lds
aas
sbb
push
shl
xchg
cmpsl
sbb
ljmp
divb
xchg
pop
jp
or
das
jmp
mov
lcall
loope
mov
adc
pop
outsb
lcall
xchg
xchg
inc
mov
xchg
sub
sbb
daa
stos
xchg
mov
sub
clc
divb
sbb
mov
cmpsl
lcall
xchg
push
outsb
inc
popa
cmp
xor
mov
ret
mov
fisubs
cli
pop
iret
add
sbb
sub
scas
lret
xor
adc
or
cmpsb
jno
repnz
loopne
xor
mov
fwait
sub
cmp
inc
movsl
pop
mov
jno
push
ljmp
adc
nop
lods
xchg
ljmp
lods
adc
into
cmp
stos
cwtl
mov
ficompl
sbb
out
ljmp
add
lods
out
pop
jns
test
aam
dec
adc
xchg
lds
jbe,pt
jecxz
lds
pop
into
adc
push
push
inc
xor
insl
stos
or
ret
imul
hlt
sbb
inc
lret
outsb
jg
lcall
inc
aaa
xor
ljmp
jo
mov
mov
mov
pop
sbb
scas
cmp
and
repz
stc
dec
and
gs
xchg
mov
jo
push
fcomp
sbb
ja
lcall
outsb
call
adc
leave
dec
xor
test
xchg
sbb
mov
loop
stc
xchg
ljmp
sbb
lds
data16
fistpl
stos
dec
mov
out
xor
leave
ficomps
orb
decl
inc
pop
aaa
ret
sub
inc
jb
pop
sub
loop
sahf
in
popl
scas
cmp
pop
and
test
aas
inc
into
xor
pop
xchg
mov
add
scas
sbb
loop
ficompl
and
daa
dec
bound
ret
inc
xchg
inc
and
daa
mov
xchg
cmp
test
xor
push
pop
dec
inc
fwait
loopne
mov
lret
jnp,pn
sahf
sbb
mov
movsb
test
inc
fiaddl
aaa
repnz
roll
mov
push
fstl
xchg
loope
imul
ds
or
pushf
inc
inc
pop
mov
xor
xor
stc
inc
lea
pop
fildll
pop
sbb
sub
dec
scas
fcmovu
stc
aad
cmp
xor
stos
addps
jbe
dec
xchg
lods
inc
mov
fistpl
mov
repz
iretw
pop
jo
or
xor
pop
shlb
movsl
in
in
or
cld
mov
ffree
nop
inc
mov
push
cmp
push
mov
clc
xchg
mov
sub
cmp
sub
cmp
jb
data16
dec
les
hlt
and
dec
adc
add
pop
stc
sti
in
mov
mov
dec
dec
outsl
and
aas
inc
push
cmpsb
mov
daa
pop
idivl
dec
pop
xor
aas
js
jp
outsl
push
sub
test
pop
in
mov
sub
leave
insl
mov
roll
gs
inc
jae
lods
and
call
adc
mov
push
dec
lea
mov
out
mov
lret
cmp
add
dec
data16
pop
pushl
scas
mov
loope
and
jp
mov
cmp
cmp
jbe
inc
stos
pusha
into
ja
cmp
inc
das
fmuls
and
push
fstpl
enter
repnz
pop
inc
and
mov
sti
sbb
xchg
imul
push
pop
inc
push
or
pop
and
mov
daa
xor
scas
sbb
add
aas
je
lret
fcmove
enter
packssdw
or
mov
stos
or
pop
out
call
mov
rep
pop
outsl
movsl
cmp
mov
jmp
popl
scas
push
mov
adc
push
inc
shl
shlb
xchg
orl
sub
xor
inc
jno
or
test
popa
adc
cli
test
mov
mov
push
mov
ror
divb
xchg
pop
rcll
arpl
cmc
adc
outsl
cld
lret
mov
mov
push
popa
js
mov
stos
lods
shrd
jb
push
popa
xchg
dec
pop
stos
pop
cmp
push
jbe
mov
jl
sbb
push
aaa
pop
xchg
lret
pop
pop
daa
cmp
dec
add
add
cltd
add
jbe
repnz
mov
and
ret
pusha
lods
and
mov
insb
lea
testl
aas
or
aad
leave
cmp
mov
xor
imul
pop
addr16
and
jecxz
std
ds
cwtl
inc
cmpsb
sub
xchg
or
xchg
adc
inc
scas
jecxz
or
jne
inc
adc
arpl
sub
mov
xchg
mov
adc
sbb
ret
jecxz
inc
xchg
popf
ficomps
cwtl
push
hlt
and
inc
pop
fdivl
push
jns
sti
das
es
or
call
xchg
pop
dec
pop
dec
add
jb
movsl
xchg
in
idivb
push
add
fs
sbb
xor
hlt
sbb
xchg
pop
xchg
ds
dec
dec
arpl
into
cmp
loope
stc
scas
mov
sub
call
ret
pop
mov
xor
mov
dec
mov
push
ficomps
fisttpll
out
inc
ds
mov
xchg
dec
ja
sti
mov
lds
jne
into
lds
adc
add
ret
mov
movl
xor
sbb
push
push
clc
sbb
pop
sbb
icebp
std
add
outsl
xor
in
xchg
sub
jns
bound
xchg
sub
int
and
sub
scas
scas
xor
xchg
mov
mov
aaa
ret
subb
jg
ficoml
mov
adc
cmp
xchg
popa
cmp
mov
sbb
lcall
sub
ficoml
xor
test
scas
or
dec
les
mov
mov
push
pop
adc
cmp
pop
mov
lds
aas
and
mov
add
sti
push
popf
mov
mov
pushf
pusha
mov
xchg
inc
cmp
xchg
xchg
xchg
mov
push
jp
imul
xchg
pop
inc
adc
and
shlb
add
jmp
inc
cltd
xchg
mov
jae
and
repnz
mov
dec
jle
or
les
cmp
adc
bound
repz
push
xchg
es
stos
mov
aas
xchg
daa
sub
fs
sub
xor
cmp
adc
gs
and
jl
cmp
loop
stos
rolb
imul
into
loope
and
mov
adc
push
xor
stos
and
xor
and
jmp
lahf
pop
sub
cmp
xacquire
mov
and
or
leave
xchg
push
inc
sbb
xchg
repnz
mov
cmp
mov
inc
jno
fwait
sub
sub
les
xchg
in
add
jmp
adc
dec
aas
xchg
je
icebp
sbb
out
jmp
jbe
aaa
mov
imul
repnz
dec
repnz
inc
arpl
das
adc
fs
int
inc
fs
sarl
ljmp
lcall
cs
movsl
pop
ja
insl
sti
fistl
aad
cmp
pop
dec
or
lret
daa
mov
inc
xor
sbb
add
push
inc
sbb
aad
into
movsb
or
dec
ret
cmp
stc
inc
sub
sarl
jecxz
je
sub
scas
mov
int3
dec
vpclmulqdq
call
ljmp
data16
cmp
sbb
sbb
mov
nop
jns
pop
jae
xor
inc
fld
push
pop
std
add
cmp
and
inc
adc
repnz
hlt
leave
pop
cli
xor
xor
addr16
stc
push
jg
or
addr16
test
data16
and
out
jecxz
xchg
subl
into
imul
ljmp
cmp
subl
jl
ljmp
adc
push
adc
icebp
or
sbb
xchg
sbb
je
rorb
jmp
outsl
pop
xchg
jl
pop
test
cmp
stos
and
xchg
pop
add
sub
mov
xchg
and
or
sbb
mov
shrl
mov
jge
repnz
aam
adc
or
fs
xor
stos
or
inc
push
stos
push
mov
jmp
push
pop
inc
jb
inc
push
imul
mov
sub
lds
rcrl
lcall
cltd
mov
adc
push
inc
pop
mov
xor
pop
push
ret
xor
mov
loope
push
enter
stc
stos
stos
xor
jmp
mov
push
jno
mulb
mov
jae
mov
push
mov
out
xchg
imul
mov
subb
lret
stos
add
mov
push
scas
mov
xchg
xchg
fimuls
in
fcmove
jp
push
jo
sbb
push
vmaxpd
ljmp
shll
ds
arpl
or
sub
push
push
scas
sub
hlt
rcr
or
or
adc
jmp
add
push
cs
hlt
xor
cmp
jbe
jae
shl
test
shll
xorb
pop
dec
cmpsl
fisubrl
and
out
ret
sub
daa
mov
add
ret
add
lock
mov
mov
jne
push
xor
int
xchg
xchg
loope
cmp
cmpsb
cmp
xchg
and
mov
sub
jge
and
sbb
pop
rcl
imul
pop
pop
js
dec
pop
push
arpl
lea
cmp
aad
imul
fbstp
rclb
test
sbb
inc
js
xchg
sub
int3
dec
push
or
xchg
jo
mov
sbb
jnp
push
xor
add
inc
sub
push
mov
push
sbb
js
jp
scas
sbb
mov
cmpsb
stos
ss
das
sbb
lcall
or
frstor
addl
repz
push
dec
cmp
fidivrl
adc
test
fldcw
movsl
lea
orl
stos
stos
cmp
daa
xor
test
sarl
arpl
xchg
lret
xchg
fwait
cmc
dec
xor
push
cmpsb
sub
jge
mov
dec
iret
dec
pop
add
or
adc
xchg
outsl
mov
outsl
in
or
repnz
aad
cmp
mov
cmp
mov
mov
movsb
inc
cmp
daa
clc
adc
mov
mov
adc
jle
dec
mov
and
jo
mov
xor
sub
pop
adc
xor
dec
jno
imul
inc
or
xlat
jns
mov
xorb
mov
outsl
xor
bound
pop
dec
adc
ret
roll
mov
pop
cmp
fsts
les
mov
xorb
xor
shll
mov
popw
mov
mov
ljmp
aaa
sub
mov
and
stos
outsl
fildll
push
loope
lret
jo
je
iret
inc
roll
decb
sbb
fdivl
fstp
aas
lock
lock
xlat
mov
insb
xchg
dec
nop
stos
int3
pop
fidivl
jne
ds
insl
push
aaa
daa
test
es
leave
out
adc
cmpsb
xor
cli
aaa
mov
sbb
pusha
fistpl
xchg
mov
mov
adc
fildl
test
xor
pop
mov
dec
movsb
pushf
outsl
aaa
fdivl
cld
movsl
mov
pop
or
mov
add
testb
jmp
and
or
in
outsb
dec
gs
cmp
dec
and
stos
pop
shrb
mov
sbb
xchg
out
sub
test
jle
sbb
xor
testb
das
repz
cmp
and
jne
addl
lock
lds
mov
cmp
or
subl
push
xor
aas
out
jno
ss
outsb
dec
sbb
sbb
sub
and
mov
call
xor
mov
and
movsl
xchg
popa
lds
fcompl
jae
jg
push
subb
and
loop
push
repnz
inc
into
dec
jle
jg
xchg
sarl
sub
cmp
dec
ret
fadd
and
mov
mov
addr16
sbb
adc
sbb
fisubrl
inc
jb
hlt
xor
arpl
cmp
ss
or
mov
push
hlt
clc
jns
lret
xor
daa
sub
test
sub
out
pop
outsb
cmp
loope
cmp
jge
cli
fs
cmp
je
cmp
loope
inc
sbb
divb
pop
dec
negb
and
imul
fidivrl
cmp
sti
test
clc
in
repnz
sub
ljmp
adcl
or
clc
movb
pop
stos
pop
dec
ret
pop
aaa
ret
andl
fdivrl
inc
jb
cltd
push
adc
jecxz
aaa
jmp
pop
pop
cltd
mov
push
lahf
das
gs
sub
pop
mov
fnstsw
popf
pop
int3
adc
rcrb
or
gs
imul
mov
shrl
push
or
dec
dec
mov
ljmp
ss
ds
jmp
out
in
loope
mov
add
cmpsb
jmp
and
dec
jmp
xor
insb
xor
loop
cltd
outsl
iret
inc
xor
jne
jecxz
inc
sbb
imul
outsl
xchg
loope
cmp
xor
and
mov
dec
adc
lods
cwtl
mov
mov
fdivs
sbb
call
lds
inc
scas
stos
sahf
pop
push
jnp
nop
push
test
and
mov
or
popa
shll
cmp
sahf
sbb
xor
mov
decl
sti
or
nop
mov
mov
into
pop
pop
mov
mov
inc
dec
cmp
inc
sub
sbb
xor
pop
mov
adc
xchg
inc
leave
push
stos
data16
fildll
mov
dec
xor
cmp
dec
push
lret
loop
xchg
imul
inc
scas
arpl
xchg
add
fdivrl
in
mov
loope
mov
lock
sub
sub
cmp
mov
shl
mov
cmp
lcall
mov
adc
add
jb
lock
arpl
vpslld
push
add
dec
into
mov
mov
add
jmp
cltd
jle
sub
sbb
pop
pop
pushf
pusha
dec
dec
js
push
lock
repz
pop
add
cs
cmp
mov
sub
adc
mov
push
aas
popf
in
cmc
fwait
mov
scas
icebp
xor
cltd
int3
test
lcall
xchg
and
imul
hlt
cmp
pusha
imul
mov
out
inc
popf
mov
or
daa
loop
cmp
repnz
push
std
xchg
mov
add
pop
cltd
pcmpeqd
clc
cmp
dec
pop
mov
roll
mov
and
bound
shlb
fcos
fs
int3
cmc
push
inc
enter
jae
mov
mov
push
shrb
movsl
push
in
mov
dec
mov
dec
and
dec
dec
test
and
and
rcll
sub
in
mov
in
ljmp
iret
filds
jnp
js
rcll
add
imul
dec
jo
repz
test
xor
push
jg
ds
inc
arpl
sub
addw
movl
and
mov
and
mov
pop
ret
insb
push
xchg
arpl
push
xor
les
push
add
jns
dec
push
xchg
outsl
insb
mov
jb
dec
cmp
mov
ss
mov
imul
and
test
ljmp
cli
xor
pushf
stc
popa
inc
addl
mov
xchg
lret
mov
push
push
jbe
inc
push
movsl
sbb
bound
in
xor
pop
scas
lds
cmpsl
fisttpl
ficoml
dec
fsts
sbb
enter
out
andb
mov
insb
or
rcrb
andb
mov
ud2
repz
dec
daa
test
shll
aad
int
mov
jg
push
xchg
mov
iret
das
push
jmp
test
inc
sub
cmp
mov
dec
cmp
jmp
sbb
sbb
cmp
add
icebp
cmp
jne
pushl
test
jmp
das
leave
inc
cltd
into
pop
xchg
sub
add
in
jg
and
insb
sbb
xlat
pop
mov
stos
cmp
sbb
xchg
and
inc
jae
xchg
ja
mov
addr16
inc
subl
push
out
inc
leave
mov
mull
or
xor
outsl
imul
xchg
daa
popa
push
pop
in
push
cmp
add
xor
push
je
arpl
iret
int3
data16
jmp
mov
out
sbb
enter
mov
lds
and
push
out
ljmp
fs
dec
fwait
or
jo
pop
test
adcb
ljmp
add
std
add
imul
daa
xor
and
lock
dec
rcr
lret
or
std
or
and
pop
loopne
push
insb
jg
lea
xlat
ljmp
lds
int
ficompl
repz
loop
xchg
cmc
xchg
ja
mov
add
aad
repz
test
jbe
int3
add
pop
mov
jo
fsubrs
fsubr
sub
xchg
sub
sub
cmp
lret
mov
ds
shrl
dec
flds
stos
cmp
xor
insb
sbb
inc
js
dec
mov
incl
inc
xchg
cwtl
add
sarl
in
aaa
incl
outsl
sbb
enter
jbe
imul
lds
lret
je
xchg
sahf
push
ljmp
cli
clc
dec
sub
push
jl
dec
sub
sub
push
dec
pusha
lods
idivb
adc
add
jmp
and
fistpll
inc
dec
imul
movsl
test
cmp
sub
xor
pop
shl
pop
jg
lret
cmp
sarb
bound
jecxz
sahf
inc
jae
add
cmp
aas
push
and
fldenv
call
popa
ret
sbb
stos
iret
test
mov
jle
out
rcrb
mov
xor
adc
inc
sub
fldenv
jmp
or
xchg
bound
cmp
cmp
fdivrs
outsb
dec
pop
lds
jmp
sbb
inc
adcb
leave
adc
or
fiadds
jne
or
jns
fsubr
mov
jecxz
xchg
jmp
xor
lods
push
cld
sbb
xchg
inc
int3
jo
insb
stc
sub
stos
mov
sti
push
lcall
push
sub
lcall
or
fsubs
imul
mov
mov
adc
or
xchg
xor
pop
movsl
std
pop
xlat
mov
and
mov
cmp
test
mov
mov
mov
xor
aas
sti
xor
rcll
ljmp
mov
mov
pop
rclb
add
sbb
aaa
bound
cmp
insb
shll
xchg
movsl
inc
dec
sbb
jne
shlb
arpl
sub
push
mov
ss
pop
inc
xchg
inc
xchg
push
ljmp
mov
pop
into
ss
xchg
aad
fnstsw
sub
inc
rolb
pusha
lock
rorb
es
or
mov
out
jge,pt
mov
add
jp
mov
inc
jbe
or
mov
es
test
ss
sbb
cs
es
ficoms
xor
stos
ljmp
mov
mov
loope
jno
adc
fnsave
imul
fistl
lret
mov
mov
jp
scas
jnp
push
or
mov
sub
push
sub
mov
mov
xor
jg
shrb
test
fcmovbe
cld
sub
mov
jns
jecxz
scas
adc
push
xchg
push
in
sub
sbb
gs
sbb
das
in
hlt
inc
fwait
cmpsl
adc
pop
lock
push
repz
lds
lret
and
mov
jb
push
sbb
ja
insl
jae
leave
int3
inc
dec
imul
ret
cli
lock
pop
and
lea
jmp
sbb
mov
rorl
dec
mov
push
mov
cmp
mov
add
jne
add
xor
sbb
loop
jmp
pop
xchg
aam
faddl
dec
xor
hlt
loope
out
sbb
mov
movsb
pop
xor
cld
cmp
mov
adc
in
sub
sub
inc
or
xor
mov
in
jecxz
jnp
rol
sub
sbb
lcall
mov
pop
test
insb
sbbl
mov
pop
dec
dec
xchg
or
xor
das
cmp
mov
or
movsl
jp
inc
inc
int3
repz
inc
imul
jbe
dec
in
cmp
mov
jge
jae
stos
insb
aad
sbb
xchg
mov
lds
fdivl
rclb
lahf
fs
mov
push
push
inc
enter
sbb
lea
adcl
cmp
jmp
dec
sbbl
pop
push
dec
test
push
sbb
fsubrl
add
lcall
add
mov
pop
jnp
pop
inc
xchg
and
xchg
out
xor
jg
dec
xchg
mov
cs
inc
lods
loope
mov
inc
xchg
loope
stos
xor
jae
and
es
inc
lret
ss
in
push
xchg
ss
lds
xchg
mov
mov
mov
lock
mov
fs
stos
pushf
pop
icebp
pop
cwtl
dec
jb
adc
xorl
inc
lds
dec
jo
rclb
push
sub
cmpsl
fwait
xchg
ds
lea
fiaddl
mov
daa
das
ljmp
outsb
cmp
add
jnp
sub
popa
cli
cmp
mov
fwait
dec
jbe
sub
mov
sub
pop
cmp
fwait
xor
cmp
lods
fs
xchg
cmpsl
arpl
adc
arpl
pop
in
or
pmaddwd
fnstenv
mov
jo
dec
dec
pusha
inc
scas
fistl
dec
dec
loopne
test
popa
sbb
mov
sub
cmp
jb
jo
test
jne
or
std
mov
pop
andl
aam
mov
cli
ficomps
andb
mov
xorl
pop
jle
sbb
pop
add
pop
mov
jmp
cli
xchg
mov
pop
pop
sub
lds
leave
jle
lods
pop
shlb
mov
push
xchg
inc
pop
inc
outsb
outsb
jg
push
mov
or
sub
adc
push
cmp
jne
jle
adc
dec
xor
mov
mov
and
leave
popa
jbe
pop
cmp
sahf
stos
shlb
or
sub
stc
mov
loope
fiadds
xchg
scas
repnz
test
repz
imul
push
xchg
andb
push
sbb
inc
mov
sti
cmc
test
mov
mov
ret
imul
and
lea
rcl
mov
mov
subb
mov
jecxz
pop
aaa
push
adcl
dec
xchg
fimull
lock
negb
mov
lds
jg
cmpsl
add
in
nop
out
bound
movntps
inc
push
jns,pt
shrb
mov
sub
mov
dec
fisubrs
inc
imul
ret
pop
int
mov
outsb
mov
bound
mov
testl
or
mov
push
ret
lret
xlat
lahf
cmp
fisubrl
add
in
adc
daa
decb
fisubl
cmp
aam
cmpsb
mov
pop
mov
out
add
inc
mov
int
in
dec
js
sbb
loope
mov
and
stc
dec
ss
adc
sbb
mov
jbe
sub
dec
aad
daa
ret
test
sub
xor
push
jl
stc
lret
sub
jb
add
inc
adc
cwtl
pop
inc
xchg
push
sub
cwtl
mov
or
jle
lea
or
mov
jg
cmp
inc
mov
mov
add
cmp
aas
sbb
push
sub
test
jmp
lret
and
loopne
inc
aaa
loop
ret
repnz
mov
cmpsb
inc
xor
pusha
mov
push
es
cwtl
stc
out
insb
adc
jne
lods
cmpsl
or
repnz
xchg
pop
mov
and
aad
mov
pop
int
lock
sbb
repz
imul
in
aad
daa
test
jp
test
movb
mov
mov
mov
inc
icebp
xchg
lds
ljmp
rclb
leave
adc
jnp
sub
ficompl
stos
xchg
insl
push
xor
xchg
or
add
sub
call
lds
xchg
sbb
cmc
push
lret
sub
xchg
adcb
cmp
pop
sbb
icebp
xorb
mov
out
outsb
jmp
imul
fs
addr16
mov
dec
cmp
arpl
rolb
imul
into
pushf
lods
je
cwtl
adc
je
mov
aas
pop
dec
cmp
test
push
sbb
nop
add
or
fwait
cs
mov
cmpsl
push
cltd
sub
call
outsb
loope
arpl
js
jns,pn
mov
cs
dec
insb
pop
adc
and
pop
outsl
jmp
jns
inc
xchg
out
xor
adc
in
xor
call
inc
dec
mov
push
inc
dec
fsubrs
aad
add
xchg
inc
imul
mov
test
leave
pop
jno
rol
testb
jp
and
mov
add
xchg
jg
pop
les
ljmp
mov
stos
bound
cmp
push
pop
aad
popf
les
push
push
cmpsb
cmp
mov
rcrl
mov
sub
hlt
mov
stos
inc
jp
mov
dec
aas
xor
outsl
cmp
stos
add
ficoml
stos
cmpl
enter
movsb
subl
jmp
es
dec
stos
stos
mov
gs
mov
out
push
repnz
bound
adc
jno
mov
mov
das
imul
pop
mov
loope
pop
popf
cmpb
push
mov
in
arpl
jae
ljmp
mov
insb
push
out
sub
jecxz
mov
arpl
and
je
ffreep
push
clc
fcmovb
add
outsl
push
xchg
std
outsb
scas
sub
aas
shll
pop
jb
shrb
dec
xchg
push
inc
or
cmp
add
into
movsl
mov
push
daa
loope
sbb
cmp
inc
jg
ret
pop
pop
je
mov
mov
ret
mov
loop
mov
push
xor
test
sti
cmp
out
ljmp
dec
pop
cmp
push
arpl
sbb
adcw
out
test
jns
and
incl
test
into
and
and
and
inc
inc
leave
push
outsb
mov
adc
cmp
test
es
stos
xchg
mov
push
mov
sbb
sub
cwtl
jecxz
or
mov
int
pop
or
sub
ret
ret
mov
fdivl
pop
sub
or
pop
data16
push
cmc
xor
mov
push
enter
stos
scas
xchg
push
out
mov
xchg
aas
xchg
jmp
inc
push
dec
adc
movl
fdivs
sbb
xchg
xchg
js
sbb
nop
dec
lds
pop
jmp
dec
and
stc
aaa
or
sbb
repnz
ret
ret
and
data16
mov
inc
pop
test
popa
push
cld
mov
mov
pminsw
jns
mov
pop
xor
xor
mov
add
lea
lds
cmp
and
pushw
mov
repz
daa
add
pop
out
push
push
jae
cmpl
loop
add
ret
inc
xchg
push
pop
nop
sub
shrl
into
cli
leave
jp
jmp
mov
inc
pop
stc
inc
ret
bound
mov
das
jp
lds
flds
dec
test
or
stos
cmp
arpl
lahf
pusha
sub
cmp
jne
hlt
jb
gs
inc
mov
lods
sub
cld
adc
test
add
xor
cmp
push
dec
xor
lods
inc
addr16
clc
inc
xchg
outsb
data16
arpl
ret
addl
cmp
cmp
jg
xor
fwait
dec
jb
mov
in
and
pop
xor
cli
jp
add
cmpsb
pop
mov
lods
jg
xchg
add
sub
and
popa
mov
sbb
in
cli
jb
mulb
decb
ja
mov
xor
cmp
cmpsb
fmull
push
and
inc
dec
imul
mov
sbb
jl
adc
mov
ja
mov
vpshab
testb
loopne
lret
dec
sbb
push
cmp
mov
js
lds
daa
mov
icebp
mov
mov
pop
dec
xlat
in
outsl
nop
stos
addr16
or
xchg
xor
lods
cmp
jb
xor
into
pop
insb
push
jno
push
push
shll
pop
lahf
outsb
enter
xor
outsb
imul
inc
test
mov
and
lds
addr16
ja
pop
movsl
data16
lcall
loope
adc
and
add
popa
mov
dec
ja
mov
add
adc
ljmp
sbb
mov
sbb
loope
movsl
mov
mov
mov
sti
shlb
mov
pop
sub
cmp
es
pop
aad
and
and
adc
pop
pop
daa
sbb
aad
scas
dec
into
add
pusha
ljmp
xchg
and
push
and
shr
adc
inc
xchg
stos
pop
mov
inc
shrl
mov
loop
jp
adc
mov
xchg
or
lods
mov
add
imul
lock
into
lods
cmp
cmp
loopne
ret
cld
in
pmaxub
sbb
pop
decb
adc
clc
shlb
fwait
shr
out
ljmp
js
and
inc
push
into
add
pop
sub
lret
test
push
jp
rol
test
mov
mov
fwait
sub
dec
push
push
inc
dec
and
add
xor
pop
inc
sbb
ljmp
sub
dec
test
rclb
adc
xchg
fimull
nop
and
mov
push
dec
lret
ds
dec
js
push
mov
scas
imul
imul
gs
and
pushf
cli
xchg
ret
or
pminub
test
pop
mov
cmp
mov
pand
lcall
push
push
mov
inc
and
cmpsb
sub
fwait
jno
inc
lea
or
inc
push
xchg
insb
loopne
dec
sub
scas
jno
cmp
sbb
insb
cmp
xchg
ret
jb
dec
sbb
rcr
mov
mov
adc
xchg
dec
push
ljmp
mul
jb
push
scas
cmc
cmp
adc
pop
roll
xor
sub
and
xchg
stos
outsl
sub
cli
mov
in
inc
rcl
dec
jae
nop
mov
data16
push
xlat
lods
pop
lcall
scas
in
aas
xchg
mov
call
push
or
or
test
ror
dec
sub
sub
ret
arpl
pop
daa
jae
mov
add
out
mov
cmp
aas
cltd
mov
or
jns
xchg
fdivl
cmpsb
jbe
repnz
dec
cmp
lret
in
adc
mov
pop
jb
out
loop
add
dec
pop
push
fdiv
lret
xchg
es
sub
popa
jp
lock
movsb
inc
xchg
in
or
ret
xor
mov
xchg
lea
mov
inc
mov
jne
sbb
dec
inc
sub
jo
mov
push
mov
sub
bound
lret
andb
stos
jge
mov
jmp
jno
xchg
mov
xchg
push
jmp
mov
jbe
dec
inc
jae
jecxz
sub
aad
xor
call
jge
xchg
jg
stos
cltd
dec
orl
out
dec
lds
aas
xchg
xor
mov
into
scas
xor
push
movl
cwtl
and
sbb
cmc
in
bound
out
test
int3
outsb
sub
out
mov
mov
insb
out
cmp
ficoms
sub
jb
inc
imul
mov
fisttpl
sub
push
cmp
xchg
jg
dec
addr16
mov
sub
jmp
popa
mov
bound
mov
pop
sti
jo
mov
jl
jge
jb
dec
sbb
scas
push
data16
out
sbb
push
push
stc
lcall
mov
mov
inc
dec
fisubrs
sub
xor
dec
xor
roll
inc
sub
xchg
pop
shl
std
cs
inc
imul
and
push
jle
cmp
shr
stos
push
jnp
jne
xor
sti
enter
mov
stos
les
xchg
dec
xchg
or
testl
or
sub
stos
ds
pop
xchg
outsb
mov
insl
push
loop
in
ss
je
pop
mov
sbb
mov
negl
je
aaa
jmp
arpl
stos
jnp
mov
mov
ficompl
mov
dec
add
pop
bound
aaa
cwtl
test
and
push
cli
push
repz
sbb
addb
mov
add
pop
dec
ss
jbe
push
scas
jmp
sbb
arpl
adc
adc
lods
test
jo
sub
and
popa
addr16
aas
fimuls
xorb
div
sub
jecxz
push
daa
test
in
data16
inc
cs
sub
pop
dec
mov
xor
outsl
mov
cwtl
mov
push
pmovmskb
inc
aam
xchg
pop
aas
sub
xor
xor
aas
push
push
mov
shll
mov
and
dec
icebp
in
xor
out
xor
mov
insl
xor
aad
subb
mov
enter
fdivs
orl
bound
movsl
mov
divb
pop
insb
push
and
inc
sbb
jb
roll
sub
testl
inc
jae
xchg
mov
add
fs
sarb
cmp
inc
inc
mov
jae
adc
jl
dec
mov
xor
jb
push
mov
cmpsl
iret
cpuid
iret
in
movsl
xchg
pop
cmp
sbb
pop
inc
pop
stos
jg
push
js
pushf
dec
inc
insl
mov
loopne
and
push
aas
push
test
bound
jle
loop
sub
test
or
test
fsubrp
push
xlat
sub
lods
enter
mov
adc
sub
and
movsb
or
fcmovbe
ret
andb
sub
mov
insl
sbb
cmp
divl
cli
mov
push
mov
loope
imull
cmpsl
lret
pop
stos
jmp
sub
loopne
lds
cmp
mov
ficoms
and
fnstcw
lds
mov
cmpsb
ficoml
and
sarb
xchg
mov
xchg
mov
mov
inc
sbb
mov
cmp
mov
and
mov
mov
lret
xor
sub
mov
mov
in
inc
into
xor
mov
loop
aas
pop
ljmp
lcall
idivb
cmpsl
insl
add
sahf
das
add
cwtl
push
adc
cli
bound
mov
cli
adc
ficoml
scas
inc
xchg
cmp
pop
movsl
repz
movsl
bound
or
test
cmp
jb
sbb
mov
jg
lds
mov
xchg
ja
xor
sbb
add
popf
sti
pop
pop
pop
push
les
jns
rorb
imulb
popf
aam
sub
adc
push
ret
jb
sub
pusha
jnp
shlb
fnstenv
bound
ss
sub
xchg
adc
jne
daa
cli
cwtl
out
pop
gs
sbb
insl
lcall
movsl
clc
stos
loop
pusha
push
cltd
out
jae
pop
sub
xchg
cmp
pop
dec
mov
dec
pop
ret
in
lahf
lds
bound
fs
mov
adcl
cmpsl
xchg
aaa
pop
jbe
inc
jns
inc
jbe
and
pop
shl
cli
mov
and
xor
lds
fstps
or
inc
xchg
sbb
movsb
adc
mov
lds
in
outsl
push
leave
fidivl
and
pushf
imul
mov
lods
and
je
in
adc
stos
lret
adc
xchg
push
inc
stos
mov
xchg
nop
aas
pop
cmp
add
or
sub
xor
insb
iret
pop
shl
insl
mov
aad
sbb
xor
in
neg
roll
test
push
jnp
aas
sub
xchg
test
aam
ljmp
push
mov
mov
dec
xchg
add
popf
xlat
test
sub
stos
cmp
notl
loopne
push
ljmp
mov
pushf
sub
rorb
cmp
out
sub
outsl
in
xchg
ljmp
mov
or
sub
mov
jbe
sub
add
das
repnz
jnp
sbb
mov
std
dec
dec
lret
xor
dec
aad
aad
shl
popf
outsb
dec
ds
mov
dec
dec
xchg
lahf
je
in
mov
dec
mov
repnz
call
hlt
sbb
mov
rcrl
stos
cmpsb
test
out
inc
mov
xor
and
jnp
and
sbb
outsb
cmp
arpl
pushf
imul
mov
fsin
out
iret
inc
push
into
out
cmp
xorl
and
shlb
sub
xchg
mov
pop
xchg
pusha
push
xchg
dec
add
fcoms
repnz
add
jb
sub
xchg
inc
int
and
push
push
int
in
jb
mov
push
cmp
loopne
sub
sub
push
fs
pop
xchg
in
sti
jmp
push
pop
lea
mov
and
pop
pop
and
jbe
cmp
mov
pop
ljmp
je
fs
push
mov
scas
sbb
in
push
int3
inc
pop
adc
inc
pop
xor
push
push
pop
ds
adc
adc
movsl
outsb
mov
mov
xchg
movsl
jns
push
cwtl
push
nop
sahf
xchg
mov
notl
cmp
ret
jb
stos
inc
lods
mov
add
inc
sbb
ret
mov
xchg
xchg
mov
jecxz
inc
push
lret
ret
cli
sbb
loop
cmp
and
insb
js
mov
insl
loop
mov
push
shll
addb
and
inc
jb
bound
push
xchg
xchg
sti
cmp
pop
js
jne
pop
jb
xchg
vsqrtsd
pusha
jno
stc
xchg
xchg
rclb
xor
cwtd
add
aas
sub
cmpb
mov
pop
jle
push
xchg
and
cmpsl
icebp
mov
dec
cld
inc
push
jle
jo
adc
cmpsb
cli
out
mov
and
pushf
pop
or
pop
bound
xchg
sub
add
xchg
jle
pop
aam
and
adc
xor
sbb
sahf
pop
xchg
mov
sub
dec
mov
mov
mov
addr16
or
jecxz
test
outsb
imul
fsubr
xor
jo
mov
mov
push
jb
arpl
cmp
xor
and
stos
jl
sub
das
jb
inc
jb
stos
sti
gs
bound
ljmp
and
adc
dec
mov
inc
pop
jl
mov
mov
inc
add
xchg
cmp
mov
lcall
popa
cmp
xchg
xorl
ret
ret
outsb
jmp
lgs
cli
cwtl
pop
and
push
xchg
push
fmulp
add
int3
mov
shll
test
fists
mov
inc
adc
push
and
cmpsb
scas
add
push
sti
add
arpl
in
addr16
inc
mov
pop
push
pop
les
mov
xor
aaa
pop
jp
bound
push
stc
jb
ja
xchg
out
fs
lods
dec
sti
in
or
andl
in
gs
sbb
and
and
je
dec
shl
outsb
xchg
out
pop
pop
inc
adc
cwtl
mov
imul
mov
jae
ret
out
cmpps
insb
imulb
ds
lods
rcl
adc
jecxz
xorl
mov
mov
add
fwait
push
fdiv
pop
add
lods
jo
add
es
cmpl
mov
adc
ret
xor
cmp
mov
repnz
out
scas
sbb
mul
sbb
mov
adc
aam
jge
push
test
insb
mov
adc
daa
and
and
mov
pushf
cmp
sbbl
jne
repz
cwtl
cmp
fstl
fisttpl
xchg
pop
fldenv
rcrb
loope
and
call
dec
jg
xor
jne
or
data16
popf
mov
test
add
xchg
mov
cwtl
rclb
xor
mov
test
stos
mov
mov
jb
cmpsb
mov
push
stc
xchg
and
jb
stos
lods
andl
popa
nop
fs
gs
push
inc
shrl
xchg
cmp
xabort
xor
inc
add
xorb
push
inc
repnz
pop
call
cmp
mov
pop
push
inc
xchg
sbbl
out
imul
arpl
stos
jmp
cmp
loop
repz
aam
add
fbld
cmpsw
push
and
mov
pop
ret
out
inc
jne
outsl
ds
dec
cmp
xchg
pop
mov
mov
ljmp
lds
sbb
and
cmpsl
add
outsb
sub
lcall
sbb
ret
mov
or
lcall
and
jp
scas
fidivrs
in
sub
lds
stc
mov
mov
fwait
and
neg
jmp
cmp
and
push
cmp
rolb
mulb
lods
inc
sarb
mov
lds
cld
popl
aaa
xchg
xchg
mov
les
hlt
and
inc
into
dec
jbe
add
mov
push
xor
xor
pusha
sbb
fpatan
push
mov
mov
sub
fstpt
lcall
mov
dec
addr16
inc
or
scas
xchg
int
ud2
xchg
outsb
pop
xor
xchg
push
in
push
in
pop
sarb
cmp
sbb
enter
and
mov
in
mov
dec
adc
sti
fs
sub
pop
divl
mov
jo
stc
mov
addb
out
movsb
loop
ljmp
push
cmp
push
pop
loop
push
xor
add
int3
or
repz
pushf
add
mov
popf
mov
test
sub
sub
lret
aaa
and
push
out
push
ss
push
jns
sbb
addr16
scas
push
movsb
movsb
ficomps
test
pop
push
jb
jae
outsl
mov
xchg
icebp
sub
xchg
mov
push
out
jmp
jb
jmp
mov
jnp
pop
movsb
jecxz
lds
mov
rorb
sti
add
or
mov
inc
pop
ljmp
les
insb
jno
retw
xor
into
fistl
ds
xchg
jl
fs
fs
aas
jae
fnsave
dec
sbbl
cs
mov
cmpsl
addb
dec
cli
adc
mov
faddl
dec
aas
mov
sbb
lea
stc
fbstp
ficomps
leave
scas
mov
and
sbb
xlat
xchg
jae
cmpsl
adc
orl
fcmovne
xchg
imul
xchg
pop
hlt
movsw
xchg
jmp
mov
xchg
or
cli
mov
mov
lret
and
pop
and
jne
or
ljmp
rol
call
cmp
xlat
cmp
out
arpl
shlb
aad
fbld
pop
jo
sub
bound
mov
mov
jne
mov
sub
add
pop
dec
insb
xchg
mov
out
xchg
shll
pop
scas
test
push
sbb
push
pop
ret
daa
push
mov
fstpt
gs
cmp
pop
insb
pop
push
incl
cmp
fs
lcall
std
mov
xlat
and
mov
inc
inc
sti
adc
xchg
jae
mov
lret
xchg
pop
inc
fwait
jo
mov
lea
adc
insb
jne
or
xchg
inc
cmp
add
cmp
sbb
jle
jg
and
pop
sbb
xchg
in
or
scas
int3
xchg
adc
xchg
xchg
repnz
add
pop
fsubl
dec
pushf
outsl
icebp
insb
jge
or
repz
xchg
into
fstps
push
leave
fs
push
jmp
mov
ret
imul
lcall
hlt
pop
and
or
jge
add
mov
push
dec
flds
icebp
jae
mov
icebp
push
mov
jmp
cli
cmp
into
and
mov
pop
sub
mov
mov
loope
and
sbb
cltd
inc
mov
and
mov
jmp
mov
cmp
jmp
push
cmpsb
sti
sbb
lret
lcall
insb
ljmp
mov
xchg
or
sub
adc
cwtl
push
bnd
notl
subl
dec
pop
sti
insb
in
mov
mov
or
loop
push
dec
adc
xchg
hlt
mov
test
insb
pushl
mov
stos
mov
es
xchg
xchg
pusha
sbb
fcmovne
xchg
xor
shr
icebp
ret
cmp
pusha
stos
into
jg
lret
mov
movl
aaa
and
roll
cmc
or
andl
dec
xchg
inc
or
pop
mov
faddl
cld
sub
add
outsb
mov
scas
add
rolb
xor
repnz
es
stos
sbb
cltd
shrl
cmp
enter
rorb
sub
lret
mov
sub
imul
je
pop
pushf
mov
pop
push
sub
mov
and
lods
outsl
add
fs
and
dec
subb
and
push
mov
rclb
jno
xlat
cmp
mov
ja
outsb
arpl
fsubrl
cltd
jo
cmp
stos
imul
stc
fs
fs
call
in
loop
push
loop
push
loop
push
aas
mov
mov
jl
sbb
lds
pushf
mov
and
popf
add
loop
pop
psllw
lret
sbb
dec
jp
sub
cmp
xchg
inc
mov
ljmp
xchg
dec
loope
mov
sbb
push
js
and
outsb
lock
mov
jb
test
dec
push
jo
je
pop
stos
addr16
fcoml
push
mov
and
cli
mov
jo
and
or
mov
inc
cmc
dec
jno
das
inc
xchg
mov
out
pop
out
xchg
jb
cmp
dec
jp
and
les
repz
add
xor
mov
rolb
mov
xchg
or
mov
sti
jno
mov
inc
mov
push
dec
insl
push
leave
lcall
add
rolb
je
ja
into
or
imul
insb
test
push
aam
mov
push
dec
jmp
int
xor
loopne
dec
mov
push
cmp
ds
popa
mov
jecxz
lea
add
roll
out
adc
sbb
push
jg
out
stc
xchg
cmpsb
push
mov
dec
test
cmp
dec
fmuls
lret
pusha
push
cmp
testb
movsl
xor
insl
sbbl
scas
dec
xchg
enter
xchg
imul
sti
lret
adc
insl
push
sub
mov
test
loope
popf
sub
dec
cmpsl
test
cmp
mov
push
push
xchg
lret
lahf
sbb
rorb
out
aaa
xchg
mov
andl
daa
scas
mov
jmp
call
orb
mov
jnp
mov
test
push
xor
adc
push
ss
popf
fcmovb
aaa
inc
sar
cld
insb
sbb
push
inc
dec
ficompl
jno
mov
or
sub
cli
inc
pop
stos
dec
and
shll
cmpsl
pop
into
fidivl
and
mov
mov
gs
ret
pusha
or
inc
insl
lock
jmp
ljmp
repnz
push
or
int
lock
shlb
sti
jg
mov
ja
hlt
imul
stos
adc
pop
stc
push
in
jb
outsl
insb
out
pop
add
and
jbe
xchg
cs
xchg
push
sti
cmp
xchg
test
testb
mov
lret
rclb
mov
jp,pt
or
sbb
mov
pop
test
es
cli
test
loope
fstps
sbb
in
out
lahf
xchg
dec
popf
sti
lds
jl
inc
insl
jb
or
mov
sti
pop
push
xchg
mov
or
or
xor
cltd
daa
scas
enter
cmp
out
mov
mov
inc
xchg
arpl
push
jo
or
ret
sub
mov
pusha
aas
adc
push
sub
jno
test
fwait
stos
xchg
test
pop
int3
ljmp
arpl
push
adc
jbe
dec
sbbb
subl
adc
mov
sbb
addr16
adc
daa
shr
bound
inc
xor
fs
stos
sub
in
arpl
and
jp
cli
mov
ds
sbb
push
ds
filds
and
nopl
mov
cmp
lret
mov
sub
add
inc
push
enter
sub
leave
cs
es
mov
pop
lods
fwait
loopne
jnp
xor
jecxz
jp
push
insb
add
repz
cli
test
sbb
push
mov
cmp
cmpsl
dec
fisubl
inc
imul
jns
xor
nop
int3
cmp
call
xor
aad
fisubrl
cmpsb
cmp
and
rolb
aaa
and
mov
push
add
jae
sub
xor
and
sbb
push
or
call
pop
dec
jb
xchg
dec
mov
repz
adc
loope
addr16
cltd
lret
sub
movsb
sbb
pop
jne
inc
jl
add
sbb
mov
out
push
pop
mov
adc
cmp
pop
mov
push
mov
and
sbb
mov
jb
aas
mov
mov
out
fimull
js
mov
sbbl
lret
add
push
test
push
pop
pop
rcl
data16
test
dec
arpl
sub
cwtl
sti
outsb
outsb
lds
xor
call
lcall
aas
cmp
jne
std
lea
mov
sbb
imul
dec
ret
mov
scas
sbb
and
mov
adc
cmp
jns
cmovl
nop
ret
lret
dec
sbb
mov
cmp
pop
lds
adc
fbld
and
repz
jne
imul
das
movsl
xchg
call
add
push
or
loopne
loopne
dec
cmc
dec
faddl
xchg
jg
and
ljmp
jp
mov
decb
or
dec
aas
inc
xchg
jl
add
mov
andl
out
scas
or
jns
addl
outsb
xor
sbb
mov
ss
xor
cs
ret
aaa
pop
inc
and
cmp
sub
ljmp
hlt
mov
cmpsb
and
enter
fwait
lret
xchg
sbb
insb
loope
mov
adc
sub
cmpb
insb
mov
jo
fimuls
fnstcw
inc
adc
cmpsl
popa
lret
sub
shrl
aaa
faddl
cli
sbb
jp
fnstsw
pop
push
shrl
add
inc
addr16
fnstenv
scas
mov
outsb
push
inc
pop
inc
ficoml
cmp
in
popa
mov
cs
push
push
inc
sbb
sub
inc
pop
cmpsl
scas
sub
jo
pop
fldcw
xchg
sti
ljmp
jle
loop
xor
add
and
push
xlat
lcall
fnstcw
int3
iret
adc
arpl
fstpt
ja
and
push
in
inc
xchg
and
pop
outsb
lmsw
dec
push
aaa
inc
addr16
or
jbe
pop
jne
dec
in
dec
stos
and
outsl
not
in
imul
pop
adc
sub
jl
adc
mulb
cmp
lea
mov
xchg
jle
daa
dec
sub
ret
lcall
sbb
inc
xlat
or
push
sub
ljmp
cmpsb
inc
jb
push
mov
inc
mov
stc
test
sbb
movb
ss
add
rcrb
stos
fimull
vcvttsd2si
test
js
aaa
imul
pop
outsl
cli
shll
mov
sti
inc
sbb
push
dec
xor
jb
xchg
insb
in
pusha
test
pop
shll
push
mov
mov
push
mov
testl
push
fmull
movsl
sub
and
jg
or
rorb
pop
loope
lds
dec
cli
xchg
repnz
xchg
mov
mov
mov
data16
push
scas
xchg
imul
xorl
leave
inc
sbb
jne
sbb
rorl
fs
xchg
cmp
cmp
add
mov
sbb
xchg
bound
and
sub
jne
das
ret
es
pushf
push
jno
lret
in
repnz
negl
xchg
mov
sbb
in
xchg
rcrb
dec
das
ficompl
jae
jecxz
adc
mov
inc
push
lds
std
je
inc
inc
sbb
adc
or
cmp
fstl
sub
test
inc
sti
cmp
jno
cltd
cld
ds
imul
bound
cmp
cmpl
popa
cmp
mov
sbb
inc
cltd
aad
push
dec
les
push
push
pop
push
int3
mov
dec
shr
jns
fsubp
inc
jno
dec
andl
adcl
mov
push
jle
mov
mov
cltd
mov
ret
imul
neg
dec
nop
sbb
cmp
mov
insb
dec
and
or
jae
mov
push
aas
sub
sub
push
popa
add
push
test
mov
and
lds
pop
cwtl
loop
jp
sbb
aaa
mov
xchg
push
sub
inc
xchg
es
or
xor
xor
cmp
hlt
inc
push
stc
test
stos
pop
ret
push
push
xchg
fs
jg
dec
pop
pop
shl
pop
inc
mov
push
ja
std
sub
jns
addr16
scas
push
nop
xor
jne
ss
push
inc
ss
addb
inc
jp
sahf
push
sbb
inc
ficomps
cmp
jno
mov
stos
out
test
push
pop
mov
xor
fs
imul
pop
fwait
mov
pop
sbb
outsb
fistpl
sbb
lea
push
mov
xor
scas
les
daa
inc
xchg
aas
scas
das
loop
xchg
in
xchg
pop
cmp
mov
mov
cmp
sbb
add
outsb
pop
aaa
loop
push
mov
popf
sarb
testl
sbb
mov
cmpb
sbb
pop
ljmp
pop
mulb
xor
pop
xor
cmpb
xchg
mov
dec
sbb
mov
mov
mov
sbb
repnz
xor
test
xor
je
cmp
ss
orl
cmp
in
fiadds
imul
out
or
insb
stos
sbb
jp
xchg
je
out
mov
push
inc
adc
jp
mov
and
jmp
sbb
push
decl
xor
inc
js
bound
dec
sbb
pushf
out
shrb
pop
lret
fcmovbe
addb
leave
xlat
lock
cmpsb
add
fs
shlb
sti
xor
in
les
and
repz
dec
outsb
retw
fs
enter
pop
divl
cmp
repnz
cli
out
jecxz
lea
jecxz
dec
dec
xor
imul
lds
jecxz
fisttpl
push
leave
xor
mov
lret
mov
add
andb
cmpsb
cmp
aaa
adc
dec
push
fiadds
mov
lret
loop
test
lea
imul
jae
rcrl
cmp
or
mov
mov
jmp
or
push
inc
or
mov
dec
push
cwtl
es
shll
adc
mov
lods
inc
pop
dec
in
into
rorl
popf
sub
jle
add
and
inc
mov
sub
test
lcall
iret
mov
lcall
cmpsb
and
das
mov
add
adc
pushf
lds
idivb
out
and
or
sub
cli
pop
in
mov
mov
xchg
insl
cs
add
out
call
cmp
xchg
movsb
xlat
inc
ds
loop
imul
inc
dec
and
ljmp
pop
sti
sbb
scas
fidivrs
mov
ret
int3
inc
aad
insb
jb
and
fs
push
or
mov
or
cmp
sbb
xchg
inc
testb
mov
popf
push
inc
stos
mov
repz
xor
xchg
aas
jb
xchg
jne
decb
mov
ret
addl
push
mov
pop
cmpsb
xchg
stos
xchg
push
cli
cmovle
scas
add
imul
jb
mov
push
daa
daa
mov
or
lds
push
scas
and
cmpsl
jb
jbe
push
pop
lds
repz
adc
fnstsw
sub
cli
stos
push
and
insb
cmp
cli
push
mov
loope
stos
test
mov
cs
out
pusha
pusha
out
ss
mov
inc
fwait
dec
dec
cmp
xor
test
inc
sub
xchg
xchg
dec
mov
xor
bound
mov
mov
cmp
aas
call
xorl
lods
push
or
aaa
aaa
mov
add
mov
out
aaa
dec
mov
push
fdivrs
add
notb
je
cmp
add
pop
xlat
outsl
pop
out
mov
push
in
cmp
popa
add
cmp
arpl
insb
scas
dec
inc
xor
mov
arpl
in
push
test
out
lcall
add
cmp
jmp
call
sub
lret
push
out
push
xchg
inc
rcll
stc
dec
aaa
sub
mov
push
cwtl
xchg
mov
ljmp
inc
cmp
mov
or
adc
pop
jp
mov
sbb
insb
lahf
test
pop
pusha
frstor
mov
stos
dec
imul
pop
sbb
roll
js
aas
sbb
push
mov
inc
sbb
sbb
mov
cmpsl
pusha
dec
mov
jns
scas
push
and
sbb
fcmovnu
lcall
je
lock
iret
cli
ret
cmp
movsb
sub
lods
orb
dec
jge
jne
sbb
pop
and
cld
xchg
sahf
inc
add
inc
sbb
orl
adc
and
outsb
mov
daa
in
in
mov
adc
mov
sbb
mov
or
xor
mov
pop
push
imul
adc
sbb
ds
mov
imul
shrl
lcall
arpl
out
jne
mov
es
mov
xor
ss
lcall
mov
sbb
insb
jp
lret
in
inc
das
add
push
sbb
mov
enter
iret
dec
daa
xchg
mov
inc
ds
pop
cmp
lods
int
and
out
or
sahf
test
ret
leave
orl
fwait
les
sarb
pushf
repz
sbb
inc
xor
out
lcall
add
ficoml
dec
dec
sub
test
sub
stos
cmpsb
fsub
stos
das
dec
push
mov
dec
cltd
jnp
call
ficoms
imul
rorl
xor
mov
enter
stos
adc
xor
aas
pop
mov
or
clc
xor
call
outsl
out
inc
inc
mov
call
pop
jg
xchg
in
push
cmpb
adc
adc
sbb
cmp
call
ror
mov
dec
mov
dec
sub
scas
push
xchg
add
ret
mov
dec
mov
sbb
xchg
icebp
daa
adc
pop
clc
mov
mov
jb
and
mov
and
adc
mov
xor
lds
rorb
mov
repnz
sub
dec
dec
or
xchg
call
inc
jp
cmpsb
pop
ljmp
divb
mov
sub
lods
stos
cld
pop
xchg
and
enter
and
imul
fs
jb
mov
jns
out
pop
xchg
fiadds
dec
xchg
lret
and
sbb
mov
popf
ret
adc
andl
negb
je
stc
in
daa
cld
subl
sub
cmc
or
push
pop
push
xchg
mov
sbb
add
mov
mov
stos
icebp
ds
sbb
jnp
dec
divb
out
sbb
repnz
cli
xchg
insb
stos
bound
cmpsb
mov
outsl
inc
nop
shl
mov
mov
cwtl
leave
cmp
cmp
outsb
loop
pop
push
fsts
stc
xchg
jle
repnz
bound
push
push
or
sbb
mov
mov
jbe
cli
out
xchg
push
dec
push
inc
int3
fs
inc
and
cltd
jb
xchg
outsb
mov
jns
xchg
push
mulb
adc
sbbl
inc
pop
ljmp
out
xor
ljmp
cmp
cmp
xchg
out
xor
or
cmp
imul
xor
out
cmp
mov
scas
popf
jb
stc
xor
out
mov
fisttpll
xor
mov
sub
test
ss
cmc
nop
repz
and
data16
fsts
sbb
xor
and
fistps
nop
data16
lret
lods
aas
outsl
xchg
icebp
inc
mov
inc
sub
mov
mov
cmp
lds
imul
leave
cmp
push
cmpsl
iret
sub
divb
jle
and
add
cmp
inc
xchg
fldenv
xor
bound
iret
imull
lds
pop
in
and
or
mov
je
push
iret
mov
stc
ds
dec
cmpsb
ret
inc
pop
ret
jmp
bound
xchg
jecxz
jo
dec
outsl
mov
cs
lret
cli
or
add
inc
lret
add
sbb
mov
out
xor
fs
adc
faddl
add
mov
je
imul
dec
mov
es
in
dec
push
cmp
pop
ror
loop
add
push
or
sub
or
inc
hlt
loop
xor
push
pop
sbb
or
hlt
adc
ja
and
sub
lods
add
cs
cld
xor
repz
sahf
in
push
mov
imul
mov
cmp
std
lods
push
dec
pusha
jle
pop
xchg
and
insb
sub
add
jae
ja
out
in
test
ds
lock
push
jl
shrl
dec
mov
sub
push
inc
arpl
js
inc
adc
das
test
mov
pop
adcw
lret
out
test
pusha
and
lret
lods
pop
pusha
out
xchg
inc
seto
incl
ss
sarb
sub
aaa
mov
fwait
sbb
mov
es
pusha
aaa
add
clc
mov
pushf
inc
fidivl
js
fdivs
fldcw
lea
sbb
iret
int
push
mov
mov
popa
shrl
shlb
fdiv
lahf
and
inc
shlb
or
mov
aad
xlat
inc
jp
cltd
data16
cmp
mov
xchg
dec
xchg
pushf
das
enter
mov
pusha
lock
push
imulb
nop
lods
sub
inc
pop
call
jecxz
imul
add
mov
inc
dec
dec
add
sbbl
push
xchg
sahf
dec
inc
out
aam
sbb
adc
pusha
add
inc
or
jbe
mov
repz
jecxz
mov
mov
adc
mov
cli
mov
clc
mov
xchg
mov
je
inc
incl
push
dec
nop
lea
xor
inc
mov
out
cli
inc
sub
or
cwtl
cltd
inc
xor
mov
or
cmp
dec
xchg
xor
fiaddl
or
cltd
lods
lahf
scas
mov
loope
je
pop
loope
xor
rcll
jmp
or
cbtw
cmp
out
stos
repnz
adc
lock
cmp
subb
out
sbb
cli
jns
mov
es
jns
idivb
sub
int
jl
jl
cmp
int3
inc
dec
out
and
mov
dec
and
inc
mov
insl
rcr
cmp
push
movsb
adc
and
mov
pop
mov
bound
fisubs
push
fsubrl
test
pop
push
pusha
mov
push
xor
leave
cwtl
cmp
jne
imulb
mov
fadd
outsb
insl
jno
insb
addr16
mov
xchg
add
push
cli
test
jnp
rorb
mov
das
inc
call
pop
and
and
into
sbb
xchg
fisttps
rorb
xor
popl
mov
loop
mov
aad
mov
pop
and
jo
rol
lret
addr16
xchg
decb
mov
inc
leave
xchg
xor
push
les
jmp
jg
shll
movsb
imul
push
int3
jmp
fmul
sbb
pop
popa
cmpsb
sub
ljmp
cwtl
and
cmpsb
and
sbb
outsl
xor
bswap
data16
sbb
and
bound
mov
mov
test
mov
push
ja
xchg
xchg
out
pusha
xchg
mov
dec
sub
jae
sti
fwait
cmp
xor
mov
pop
xchg
cmp
xorb
and
adc
jp
inc
mov
adc
ss
leave
into
shll
mov
inc
dec
fsubr
lret
cmp
mov
addr16
lods
add
adc
lea
mov
sub
fiadds
fstpt
and
ljmp
add
icebp
js
push
fs
testl
outsb
nop
into
mov
or
dec
xchg
mov
rcll
jp
notl
das
ret
mov
jne
jb
inc
loop
push
mov
jge,pn
jp
push
fld
movsb
xor
jge
xchg
cmp
movsb
mov
add
mov
cs
inc
scas
inc
adc
sti
pop
ret
push
pop
push
dec
inc
mov
mov
sbb
and
and
cmp
cwtl
push
cli
outsl
scas
loop
cmpsl
bound
sbb
jo
xchg
inc
sbb
or
das
and
push
daa
mov
mov
xchg
mov
add
sub
test
pop
repnz
lret
and
xor
pushf
jo
bound
jg
or
into
pushf
dec
fcmovb
sti
cmp
inc
cltd
sbbl
xor
outsl
and
sub
sub
dec
in
sbb
sahf
fisubrs
xor
or
pop
cmp
sbb
sub
imul
push
mov
aaa
and
lds
repz
addr16
pushf
lods
dec
popa
sub
or
ss
cmp
sub
push
xor
fisttpl
add
scas
pop
daa
in
pop
out
cmp
cltd
cs
sarl
add
xor
sbb
push
outsl
pop
mov
pop
orb
jp
jne
outsb
mov
pusha
test
nop
sti
mov
fildl
mov
mov
aas
push
cmp
adc
dec
ficoms
adc
dec
in
pop
sub
jb
cmpsb
sub
sbb
xlat
pop
hlt
pop
xchg
jecxz
xchg
or
je
jecxz
or
xchg
daa
inc
inc
push
mov
aam
mulb
adcl
inc
hlt
leave
adc
mov
fwait
inc
gs
sbb
outsl
sub
loope
dec
js
xor
out
mov
add
lret
sbb
in
adc
add
dec
xor
scas
jns
xor
jle
push
das
mov
push
sbb
mov
pusha
shlb
stos
mov
repz
nop
jb
imul
aas
adcl
dec
loopne
cmp
cmp
scas
pushl
scas
xor
bound
sub
lds
inc
push
pop
push
sub
lret
inc
es
mov
mov
sbb
mov
in
aas
sub
push
stos
data16
pop
cmp
xor
push
imul
sbb
lahf
popf
xor
out
lods
insl
mov
sbb
rorb
push
mov
xor
jge
sbb
pop
movsb
out
outsb
sub
stos
mov
test
pop
jns
jnp
nop
pop
xor
loope
sub
mov
cwtl
mov
mov
xor
add
push
fsub
jns
insb
inc
sarl
mov
adc
les
inc
xchg
loopne
lds
add
in
jne
mov
les
pop
sbb
iret
ljmp
lea
and
xor
jle
jg
add
xor
inc
push
mov
pop
ds
setns
jle
js
push
mov
pop
inc
mov
xchg
mov
dec
pop
cmp
int3
mov
push
ja
jp
mov
and
aas
mov
inc
mov
inc
jno
xchg
fcompp
addr16
lcall
jmp
jecxz
sub
jno
pop
je
mov
cmp
shlb
in
aam
sub
sbb
lcall
stos
dec
hlt
mov
mov
adc
fs
mov
cli
inc
loope
or
mov
push
lcall
push
insb
ficoms
lods
fwait
xchg
cli
inc
sbb
mov
test
xor
sbb
mov
inc
popa
es
fsubr
pop
cwtl
jns
sbb
mov
loopne
mov
inc
xchg
push
sub
mov
sub
fwait
jnp
aas
push
mov
stos
jae
popf
rcrb
pop
nop
jnp
sub
repz
je
data16
xor
inc
movl
dec
imul
fsubl
in
aaa
jb
cmp
sub
test
inc
adc
inc
fsubrp
mov
mov
inc
lods
test
pop
insb
cli
vpsrlq
stc
pop
pop
scas
cmp
push
arpl
fisubl
outsl
loopne
in
loop
gs
jle
out
les
inc
lahf
or
std
jno
dec
sub
jae
adc
les
add
scas
std
shl
mov
mov
jge
jmp
pusha
pop
or
mov
adcb
arpl
jp
inc
data16
lcall
fsubs
pop
ret
inc
push
popa
popf
xchg
cld
loop
mov
mov
lea
cmp
pop
jmp
mov
fidivl
add
jg
cmp
jb
dec
sbb
daa
jmp
insl
xchg
sahf
test
dec
push
add
out
lahf
popa
aaa
das
lahf
cmc
pop
push
andb
add
xor
or
outsl
popa
push
inc
ds
call
das
adc
inc
sub
push
nop
and
cltd
mov
nop
sub
pop
sub
sbbl
push
jns
test
mov
js
push
xor
jno
mov
pop
pop
mov
push
lods
dec
loop
cmp
mov
cltd
in
pop
or
adc
ss
push
pop
icebp
mov
pop
inc
dec
jb
xchg
dec
cld
cmp
sahf
cmc
dec
dec
mov
push
stc
shll
call
imul
stos
test
lds
cmpl
pop
mov
ljmp
orl
lds
jg
push
xchg
arpl
pop
sub
inc
xchg
inc
scas
fstl
insl
subl
inc
ret
into
cmp
push
push
ja
dec
push
pusha
into
arpl
xchg
jmp
and
pop
or
pop
push
push
pop
push
push
ret
lods
popa
lds
insl
lcall
test
pushf
dec
mull
jle
cld
fwait
dec
push
popf
imul
xchg
mov
pop
cmpsl
xor
in
sbb
fwait
adc
shr
xor
into
pop
imul
cmp
lods
pop
adc
inc
mov
cltd
jle
mov
and
andl
inc
add
das
push
push
imul
sbb
sub
loop
cmp
dec
lock
mov
ficomps
pushf
pop
std
xchg
jle
fs
xchg
mov
les
pop
push
and
push
mov
jb
imul
adcb
xor
dec
mov
in
jo
xchg
out
jno
out
mov
inc
cli
xor
mov
xor
sbb
dec
jno
sub
sbb
data16
fiadds
sbbb
pop
imul
stos
imul
popf
xchg
popf
fistl
fidivrl
loop
aas
les
bound
cltd
adc
arpl
inc
aas
jb
ret
push
repz
jge
mov
leave
test
repnz
ds
sbb
xchg
scas
out
pop
mov
pop
lock
int3
sahf
stc
and
rorb
lret
cmp
int
jbe
or
mov
mov
xor
leave
mov
scas
add
fadd
ja
es
lret
cmp
mov
xor
sub
fbld
mov
es
cmpsb
pop
adc
nop
repnz
inc
addr16
mov
nop
iret
cmp
and
sbb
inc
setne
inc
jo
aad
sub
or
jmp
in
cmp
sbb
inc
mov
or
sti
xchg
xchg
lret
xor
or
test
xor
addr16
scas
mov
xchg
std
orb
jae
ret
fistps
mov
vcomiss
repz
fcmovnb
lods
add
stos
das
das
mov
xchg
push
add
xchg
jnp
loopne
ljmp
mov
push
xor
inc
adc
xchg
pusha
add
jg
sub
push
sub
fsubrl
dec
imul
sbb
push
pop
ljmp
outsl
shrb
nop
fsubl
pop
loope
jns
sbb
push
push
mov
popa
fistl
movsl
mov
orb
xchg
xchg
push
dec
jle
in
fwait
jle
cmp
jne
inc
dec
inc
cmp
sub
xchg
jecxz
wrmsr
mov
jg
hlt
stos
or
inc
xchg
jo
or
cmpsb
dec
mov
pop
mov
inc
int3
in
pushf
and
mov
fmull
lods
sahf
ljmp
add
and
sub
in
test
jp
xor
xor
fnstenv
int3
mov
mov
pop
test
or
fstpt
add
or
lret
fildll
push
cltd
pushf
inc
outsb
mov
sub
ds
sub
pop
lret
cltd
lds
or
pop
pushf
adc
push
mov
ret
nop
mov
test
push
push
cmp
xchg
mov
sbb
fcoml
ds
sub
xchg
inc
jae
fmul
into
pop
mov
fs
sub
ret
jp
enter
inc
in
cwtl
repnz
sbb
imul
test
fcomi
inc
mov
and
je
or
loope
loop
adc
and
dec
stos
inc
jb
and
pop
ljmp
inc
ret
jecxz
pop
pop
mov
cmp
insb
js
cld
into
insl
lea
insl
stc
jae
loopne
xchg
ljmp
nop
add
and
ret
arpl
or
repnz
push
cmp
test
mov
loope
xor
inc
mov
rorl
cld
hlt
push
loop
test
push
outsl
movb
jns
mov
adc
push
mov
pop
push
xchg
add
in
adc
sbb
inc
adc
iret
jle
or
jae
dec
inc
lret
xor
xchg
outsl
cmp
jns
popl
pop
inc
stc
ret
aas
xchg
sub
sti
mov
dec
testb
jns
idivl
jle
xchg
into
adc
jbe
cmpsl
pop
cltd
xchg
push
push
insb
cmp
push
pop
dec
mov
sbb
mov
push
pop
sbb
lret
cltd
sbb
arpl
test
stos
shrb
or
lret
out
adc
js
cltd
fnstcw
adc
jp
lock
xchg
mov
enter
nop
push
ss
sub
std
dec
popa
cmp
outsl
push
lret
stos
xchg
add
sub
mov
push
push
jbe
or
lock
sbb
sbb
mov
push
cmp
sbb
popa
insb
jns
xor
arpl
jp
cmp
daa
inc
and
loop
and
ret
fdiv
das
inc
jb
ret
adc
lods
add
stos
lea
out
jecxz
or
mov
cmp
std
mov
and
shlb
xor
jecxz
inc
push
mov
sbb
out
mov
clc
sbb
mov
mov
cli
cmp
dec
sub
mov
inc
inc
jecxz
mov
test
mov
adc
mov
inc
push
mov
aaa
sti
int
adc
ds
lcall
test
mov
mov
ret
inc
jg
xor
or
arpl
or
sub
in
stos
out
sti
cli
mov
mov
inc
sub
jge
and
and
cmc
in
sub
aaa
adc
subl
adc
nop
out
and
pop
xchg
or
xor
pop
xor
mov
in
neg
pop
sbb
and
mov
jne
enter
in
pusha
shlb
and
pushf
movsl
rcr
xchg
dec
sub
stos
pop
jmp
jnp
aad
int3
push
js
nop
add
and
mov
aas
push
outsl
and
inc
sti
lds
xor
lock
pusha
insl
cltd
je
cmp
loop
cmp
cmp
cmpsb
lcall
dec
nop
inc
insb
jle
xor
and
jg
mov
lds
push
subl
js
dec
sbb
jo
inc
xor
inc
dec
lahf
jno
jg
call
mov
mov
movsb
and
outsl
loopne
ds
sbb
stos
or
sub
outsb
fidivrs
ljmp
push
pushf
push
xchg
pop
ror
push
mov
sbb
pop
mov
sarl
and
fildl
mov
jmp
pop
pop
jl
stos
dec
cmp
mov
cmp
arpl
ljmp
in
test
add
push
add
arpl
fisubrl
mov
inc
dec
fs
mov
popa
pop
cwtl
sarb
test
push
xor
fildl
mov
scas
mov
fistpll
outsb
test
sbb
and
loopne
fs
mov
pop
jmp
shl
pop
arpl
mov
or
or
push
out
cltd
mov
mov
aas
in
or
jne
inc
repnz
inc
or
sub
inc
xor
movsl
cmp
push
and
xchg
mov
bound
sti
sbb
repz
xchg
inc
scas
dec
cltd
imul
mov
xor
hlt
xchg
jmp
mov
lcall
mov
inc
stos
ss
xor
call
cmp
cli
jo
cld
ret
push
es
lds
jmp
inc
adc
cmp
xor
push
aas
stos
test
packsswb
fs
sbb
outsb
bound
scas
mov
xchg
mov
enter
add
and
mov
js
xchg
ja
jnp
jae
outsb
adcl
xor
xchg
orl
cli
and
imul
and
xor
xchg
pop
sbb
pop
arpl
pop
and
inc
lea
push
cmp
fnstenv
faddl
shl
ret
es
push
loopne
jae
test
sub
jg
ficomps
xchg
pop
mov
icebp
pop
scas
sub
cmp
out
xor
mov
lret
inc
loop
daa
imul
stos
sbb
xor
out
dec
xchg
rcrl
jbe
test
dec
repnz
js
pop
movsl
aam
ret
sub
ljmp
sub
push
je
xchg
into
ss
ret
jmp
dec
cmpsb
fisubrs
pop
aad
inc
adc
push
pushf
inc
mov
xor
pop
jnp
and
out
stos
hlt
aaa
outsl
lret
leave
je
adc
xchg
lahf
cltd
inc
test
xchg
outsl
mov
imul
shrb
add
mov
mov
jl
out
inc
out
fs
lds
ja
out
dec
push
push
sbbl
cli
jo
sub
insb
test
adc
inc
sbb
in
jmp
shl
jmp
lcall
inc
adc
insb
scas
daa
cmpsb
cmp
jb
jo
or
in
push
xor
xor
mov
fwait
mov
jbe
xchg
mov
cli
push
je
sub
mov
lcall
push
pop
daa
nop
mulb
insl
mov
cmp
and
jecxz
outsb
ljmp
bound
fs
pop
out
ror
adc
fisttps
xor
inc
insl
icebp
push
je
hlt
push
cmpsb
idivb
subl
dec
aad
xchg
scas
das
sub
cltd
xchg
push
push
push
daa
aam
jne
sub
inc
dec
sbb
aaa
lds
xor
insb
aad
mov
mov
dec
xor
xor
jno
sbb
sti
sarb
movsb
jmp
rclb
mov
popa
xor
and
adc
scas
ljmp
mov
sub
stos
addr16
in
mov
or
shrl
sbb
test
idivb
cmpsl
mov
test
in
mov
into
dec
leave
in
mov
ficoms
popf
outsl
cld
inc
test
and
lret
adc
inc
dec
sub
inc
aaa
mov
inc
inc
mov
shrb
cmp
cli
sub
dec
popf
repnz
pop
pop
inc
sub
mov
cmp
scas
stos
xchg
stos
rcl
cmp
mov
cwtl
and
mov
jbe
mov
xchg
mov
shll
shrl
jmp
jle
test
aas
lds
faddl
push
ret
cltd
push
cwtl
out
xchg
xor
imul
cli
pop
sbb
xchg
daa
jns
lods
hlt
les
call
mov
hlt
cmpsl
mov
in
cmpsl
loope
inc
cltd
das
cmpsb
jo
imul
pop
test
push
cmp
lds
cmp
pop
xor
mov
inc
xor
mov
mov
xchg
xchg
lea
hlt
sbb
insb
xchg
push
stos
faddl
xor
insl
sbb
sub
ret
in
or
lcall
mov
jb
stos
sub
insb
xchg
lahf
shll
mov
cmp
dec
test
xor
mov
dec
dec
cli
xor
mov
xchg
push
pop
scas
sub
insb
cmp
sub
cmp
cmp
stos
mov
scas
jb
test
cmp
xchg
adc
adc
inc
cmp
rorb
pop
sub
push
inc
xchg
push
out
pop
packssdw
xchg
push
sub
sbb
daa
or
pop
pop
mov
enter
rcr
mov
shrb
ss
rcll
pop
mov
ret
fucompp
push
and
rolb
jle
cmc
mov
pop
xchg
cmp
fsubrl
jae
xchg
xlat
fcmovnbe
scas
shll
daa
mov
xchg
sbbb
dec
cmpsb
fldt
jae
pop
or
push
lret
dec
pshufw
and
ret
cmpsb
repnz
inc
xchg
pop
loope
fwait
mov
ret
sub
stos
vpsubw
mov
inc
jmp
cwtl
aas
dec
cmp
imul
fnstenv
icebp
jl
iret
dec
xor
pushf
popf
cmc
push
es
test
xchg
ds
loop
daa
xor
out
sub
mov
push
jl
mov
bnd
jl
lds
outsl
loope
out
lds
mov
cmp
xchg
adc
movsl
lea
popa
daa
js
sub
xchg
stos
jg
adc
mov
pop
push
add
insl
loopne
lret
movsl
pop
stos
mov
cltd
scas
icebp
jg
test
or
test
js
push
push
mov
imul
xchg
aad
pusha
cli
loop
test
lea
dec
ficoml
xchg
cmp
and
pop
pop
mov
je
popa
jg
stos
push
mov
mov
inc
cwtl
push
pop
cmp
sti
push
pushf
stos
jne
fimull
int3
push
push
js
ss
adc
in
jp
ljmp
push
lea
jnp
lret
mov
fstl
cld
fimuls
xchg
cmp
fs
mov
add
jle
aas
sbb
mov
jns
lock
xor
shr
es
dec
aam
push
in
loopne
mov
sub
add
jno
leave
pop
rcr
push
push
cltd
icebp
test
fucomp
cmp
xchg
jg
mov
jg
fwait
stos
mov
mov
cmp
nop
xchg
pop
jo
mov
call
mov
and
adc
cmp
call
xor
mov
mov
pop
push
and
dec
ja,pt
jle
push
sub
aas
rcll
inc
ljmp
popf
add
popf
xor
out
dec
fwait
ljmp
cli
adcb
push
inc
stos
push
aas
shll
mov
sbb
imul
pop
push
icebp
mov
inc
sub
push
ret
gs
shl
test
fdivrl
faddl
mov
subb
sub
xchg
addr16
stc
daa
inc
aaa
cmp
test
out
loop
mov
mov
xor
and
xchg
subl
test
xchg
lock
mov
sub
xor
or
lods
movsb
cmp
jnp
outsl
fwait
push
push
in
lret
jne
mov
push
jmp
add
call
jo
test
cmp
mov
sbb
mov
xchg
push
sti
fistps
add
cmp
daa
adc
sub
push
push
and
and
sbb
outsb
std
test
cli
adc
por
mov
out
mov
or
mov
ja
fcompl
cmp
sbb
iret
aaa
xor
cmp
cmp
inc
sub
cltd
out
adc
push
cltd
pop
repz
push
jb
gs
pop
bound
mov
or
jp
adc
add
cmp
dec
dec
sub
clc
fdivrl
orb
pop
loopne
js
and
sub
jb
in
popf
imul
jge
mov
push
int3
inc
xor
xchg
inc
push
mov
inc
push
inc
scas
imul
xor
imul
fdivrl
bound
sub
xchg
adcl
jbe
scas
sub
jne
ret
xchg
sub
mov
dec
and
dec
pop
push
js
mov
push
xor
pusha
lds
sahf
cmp
mov
xchg
idivb
lret
mov
inc
xor
mov
fisubrl
sti
fiaddl
dec
insb
xchg
bound
sub
xchg
xor
in
sahf
adc
pop
add
shl
out
stos
cmpsl
in
aaa
inc
hlt
push
lock
test
fsts
sbb
hlt
xor
sub
inc
imul
dec
pop
sub
jb
imul
jmp
fstpt
filds
jmp
in
inc
lret
daa
cli
outsb
dec
mov
nop
inc
lea
insb
stos
insb
repz
inc
mov
jns
popf
sbb
mov
out
inc
pop
loop
cmp
scas
and
aaa
and
enter
mov
call
jmp
sub
cmpsl
inc
pushf
sbb
inc
daa
mov
mov
repz
ljmp
stos
and
push
mov
scas
cmpsb
xchg
xchg
repz
mov
xchg
test
je
add
scas
pmullw
pop
insb
jle
xchg
out
stos
adc
jb
fdivrs
ret
pusha
jb
scas
lds
inc
sbb
shll
push
stos
inc
lods
push
stc
mov
std
inc
cli
shrl
mov
adc
aam
sbb
mov
or
sbb
push
push
push
arpl
cmp
nop
push
pop
bound
push
js
sbb
mov
and
xchg
or
push
into
ja
and
cmp
ds
das
pop
mulb
scas
and
mov
cmp
lds
fnstenv
cltd
cmp
dec
xchg
stc
cs
das
push
dec
sub
xchg
movl
decl
dec
pushf
mov
test
arpl
cmp
arpl
outsb
adc
test
jp
or
push
ss
xor
cli
das
cmp
je
jp
test
insb
mov
hlt
dec
pop
dec
lret
mov
adc
call
lea
jns
fs
or
test
jge
clc
popa
out
sbb
ret
inc
mov
jp
mov
mov
and
pop
add
jne
sub
xchg
arpl
inc
outsb
inc
lods
cmp
adc
and
out
sbb
cmp
pop
cmp
loop
icebp
mov
cli
cmp
mov
inc
and
stos
lds
cwtl
pop
insb
leave
orb
sbb
or
adc
jns
jmp
push
sub
jb
cmp
addr16
loop
mov
fisttps
xchg
mov
add
pop
pop
aaa
dec
and
pop
mov
sub
xchg
sub
mov
sub
insb
shll
mov
xorl
in
xchg
sbb
sub
in
imul
cwtl
nop
cmp
sbb
loop
mov
mov
mov
push
out
test
inc
fidivl
scas
push
daa
aad
arpl
leave
notl
inc
xchg
repz
movsl
or
mov
inc
rorl
dec
clc
jge
dec
xor
dec
mov
xchg
in
xchg
inc
js,pt
out
movnti
cmp
add
adc
and
aad
data16
insb
cwtl
jge
cmp
cmp
fiaddl
aas
out
inc
sti
fistps
mov
fsubr
push
test
popf
pop
fbstp
xchg
or
nop
mov
dec
imul
sbb
adc
or
mov
adc
mov
std
fmuls
fistps
cwtl
rorl
sar
cmp
inc
mov
lret
ja
ret
fidivrs
in
ja
out
mov
pop
xchg
cs
daa
repnz
aas
add
mov
xchg
outsl
and
pop
push
mov
cmc
aad
push
sti
mov
es
add
cltd
and
push
cmp
adc
popa
pop
data16
addr16
scas
fimull
mov
push
push
in
rdtsc
mov
or
mov
adc
stos
js
push
shlb
imul
out
das
inc
cld
mov
sub
mov
in
pop
sub
lods
mov
mov
inc
inc
mov
sbb
addb
jnp
ret
push
and
add
dec
adc
test
icebp
imul
fwait
push
fnstcw
push
push
adc
inc
negl
cs
shrl
dec
cmp
in
pop
mov
mov
mov
jne
inc
and
leave
scas
bound
out
shll
mov
addl
stos
ljmp
push
xchg
jp
jp
lock
jo
mov
jnp
sbb
dec
and
cltd
mov
out
pop
push
sbb
bound
sbb
cmp
push
jb
inc
cmpxchg
test
jae
cmp
nop
mov
lret
push
mov
or
jle
mov
xlat
inc
es
push
sbb
sub
sub
dec
add
inc
and
xor
mov
push
cltd
out
out
stc
xor
shrb
repz
cmp
mov
dec
ljmp
jp
sbbb
arpl
push
std
dec
aam
pop
push
push
leave
jb
shrl
leave
mov
jns
loop
jns
pop
push
scas
inc
test
ret
inc
add
jg
dec
inc
push
push
sub
out
cs
mov
andb
pop
inc
dec
jp
add
ja
mov
mov
mov
pop
enter
test
jno
sti
push
imul
popa
ds
imulb
xchg
sbb
adc
pop
sbb
inc
loopne
lock
or
es
ficoms
xor
pop
push
out
out
jnp
mov
lcall
imul
mov
fimull
dec
inc
dec
sub
fwait
xchg
insl
bnd
inc
out
xor
jmp
inc
into
pop
out
cltd
jg
jmp
arpl
scas
cmp
imul
xchg
jnp
fsubr
cmp
test
and
sbb
mov
mov
rorl
xchg
or
xchg
les
push
dec
pop
xchg
out
mov
hlt
lock
xchg
push
addb
mov
cmp
ret
fldenv
add
mov
mov
mov
popa
stos
mov
jmp
push
stos
cmp
push
dec
aaa
addl
shr
vpavgb
push
lea
stos
cmp
push
test
nop
mov
nop
sbb
xor
add
lods
lds
and
cmp
dec
jno
nop
dec
mov
jp
sbb
fninit
cli
lret
mov
scas
mov
sub
test
sub
pop
inc
bound
arpl
popa
fisubrl
xor
popa
fstpl
scas
xor
jp
add
mov
imul
xorl
bound
lahf
dec
xchg
pop
add
aam
xorb
inc
test
xchg
xorl
dec
sbb
stos
add
xchg
lea
inc
dec
push
cmp
les
push
cmpsb
and
cmp
imul
inc
sbb
imul
out
pushf
fcmovu
repz
cmp
jecxz
xchg
lds
xor
mov
inc
jl
mov
sbb
ss
and
push
add
adc
lods
leave
fbstp
mov
aas
fnstcw
push
hlt
mov
dec
inc
clc
mov
mov
xchg
sbb
scas
dec
je
xchg
jecxz
xchg
pop
aam
lds
ret
jbe
xchg
movsb
mov
fldcw
sbb
jo
leave
imul
mov
in
pop
jg
mov
mov
pop
xor
jb
les
dec
orps
int
cmpsb
bound
mov
hlt
adc
xchg
push
inc
cmp
inc
sub
xchg
and
jb
ficomps
bound
and
mov
xchg
sbb
mov
xchg
jb
clc
inc
mov
cmp
and
jns
cmpsb
imulb
mov
repz
pop
mov
mov
scas
add
pop
test
push
aas
dec
xor
sub
push
test
sbb
cmp
mov
cmp
in
sbb
cli
sbb
sbb
shll
loop
jmp
inc
dec
mov
cmpl
and
jns
lea
out
lds
lods
pop
dec
jle
aaa
mov
sub
xchg
mov
jnp
lret
add
dec
adc
sbb
pop
cmp
mov
sbb
mov
pop
add
movsl
pop
imul
stos
adc
sbb
inc
push
imul
insb
xchg
jne
or
dec
addb
push
fdivs
lea
stc
cli
cmp
or
lahf
es
xchg
xor
sbb
adc
adc
mov
test
add
ficompl
jmp
and
mov
xor
sub
mov
loop
sbb
xchg
test
scas
mov
jae
shlb
pop
in
sub
addl
roll
push
or
scas
cmp
pushf
stos
rcr
cs
cmpb
daa
movsl
mov
stc
popf
or
decb
mov
sbb
test
test
loop
sbb
or
nop
out
divl
mov
dec
cs
adc
inc
scas
jg
daa
imul
dec
jge
idivl
ljmp
xchg
test
mov
push
aaa
decl
aas
fidivrl
ret
ds
push
sbb
add
jle
les
mov
mov
dec
mov
jno
or
jo
test
xchg
idivl
xor
imul
xor
cmp
push
aam
mov
pushf
add
outsb
ficoml
lods
pop
or
add
mov
adc
fs
jae
mov
mov
xchg
sbb
jno
push
pop
xor
mov
mov
fistpl
mov
sarl
inc
and
sbb
addb
int
sub
jmp
rcrb
cmp
xlat
push
arpl
push
add
cli
mov
clc
xchg
mov
aaa
pop
mov
popf
lock
cmp
shlb
mov
sub
enter
out
fnstsw
inc
ret
sub
mov
iret
lcall
or
into
jno
jnp
or
push
mov
adcl
jl
mov
dec
jmp
mov
push
scas
jae
push
ret
repz
loope
mov
popa
mov
mov
dec
add
xchg
mov
xchg
loopne
pop
lret
sbb
lock
and
aad
fsub
inc
cmp
mov
sbbb
mov
pop
inc
rcrb
mov
mov
and
mov
inc
xor
aas
popf
aam
pop
insl
lds
mov
xor
fwait
mov
mov
sbb
test
sti
pop
rcrl
cltd
test
inc
imulb
ret
push
adc
pushf
mov
pop
push
frstor
mov
and
out
sbb
xor
and
stc
inc
outsl
xor
sub
lods
cwtl
xchg
ljmp
loopne
or
push
jo
fldz
push
cmp
pop
and
push
inc
rorb
mov
arpl
mov
cmp
adc
decl
sbb
fildll
xchg
pop
das
inc
stc
xchg
imul
scas
xchg
cmp
or
cmpsb
sbb
loopne
sbb
xchg
popa
lret
mov
test
inc
lods
imul
sub
push
or
jbe
push
jnp
mov
xchg
pop
xchg
add
cmp
add
add
stos
ficoml
insb
mov
imul
mov
jnp
pop
add
sbb
fistpll
mov
xchg
scas
repnz
dec
aad
jg
out
cltd
cmp
stc
ds
jmp
pop
jno
or
fs
pop
cli
fsubl
push
or
cli
js
and
cmp
add
xchg
add
ljmp
push
cli
mov
sbb
xchg
xchg
mov
insl
cwtl
test
aas
cs
daa
and
mov
jnp
adc
adc
ret
fcmove
push
push
xchg
movl
mov
cli
push
scas
mul
movsl
pop
movsl
int3
pushf
lock
mov
out
insb
hlt
mov
ret
pop
and
stos
shrl
add
outsb
shr
inc
mov
pusha
cmp
je
cmp
or
aaa
cli
mov
adc
pop
lock
lods
pop
push
or
repnz
jne
jno
mov
sub
mov
daa
mov
fwait
mov
cmp
pop
adc
int
add
js
movb
icebp
insb
es
orb
outsb
mov
cmp
push
fisttpll
pop
cli
popl
fcomps
arpl
xor
sbb
sub
push
xchg
mov
mov
adc
lcall
inc
outsl
xlat
push
push
jg
xchg
popa
std
daa
cmp
xor
mov
fisttpll
out
xchg
mov
aas
or
test
daa
ret
dec
sub
push
ret
cmp
xor
push
xchg
icebp
es
sti
fldenv
cli
ret
sbb
cmp
xchg
loopne
and
cmpsl
andl
inc
insl
bound
icebp
xchg
loop
push
shl
in
jecxz
out
fs
les
cmp
fwait
aas
ja
ret
and
or
inc
leave
or
divb
stc
imull
aas
push
dec
pusha
xor
add
mov
nop
in
popf
xor
scas
jmp
cmp
test
es
mov
mov
sbb
imul
imul
into
stos
sub
inc
push
sub
push
lea
or
pusha
fiadds
dec
insl
sub
add
xor
and
adc
sub
mov
popa
xchg
cltd
mov
mov
rorb
cmpsl
aam
cmp
andl
sub
in
test
imul
xchg
mov
adc
popf
repnz
lock
fimuls
push
test
mov
outsb
data16
push
in
clc
out
jne
inc
sub
add
mov
sbb
cwtl
mov
xor
popa
pop
cmp
xchg
mov
sub
call
mov
xor
das
mov
mov
mov
add
sub
addr16
mov
lods
int3
outsb
testb
mov
jnp
and
js
adc
cmp
ret
sbb
leave
mov
aaa
jns
inc
mov
fnstcw
test
pop
cmp
shrl
loop
dec
jnp
fsubs
sub
lods
in
inc
push
jl
jnp
aaa
out
insb
jp
xor
push
push
rolb
push
sbb
and
lret
jns
fstl
and
and
sahf
jb
xchg
loope
js
je
inc
loopne
adc
mov
mov
jo
xchg
ljmp
push
inc
aaa
mov
mov
cltd
mov
dec
enter
cli
push
pop
gs
movb
jb
cmp
jg
mov
xorl
sbb
xor
add
sub
add
sub
sbb
int
sarb
enter
dec
loopne
pop
and
xor
push
jmp
add
cmpsb
std
cli
jo
rcrb
mov
test
sbb
xor
inc
jecxz
aaa
testl
repnz
pop
dec
jmp
mov
push
leave
sub
dec
sbb
pop
mov
and
jne
mov
cmp
sub
lds
subb
sbb
sbb
xchg
dec
cltd
ret
push
mov
inc
cmp
push
das
and
pop
adc
fstpt
dec
mov
xrelease
push
gs
and
or
add
xchg
ljmp
jmp
sub
int
mov
pop
hlt
add
cld
sti
pop
xchg
ret
inc
cmp
sbb
stos
and
sarl
pop
mov
fwait
das
sub
mov
aas
dec
dec
jmp
dec
ret
cltd
insb
pop
cmp
inc
gs
push
push
sarl
inc
cmp
in
inc
push
outsl
push
enter
call
dec
fs
sub
ret
cmp
js
cmovp
xorl
dec
call
and
pop
push
loop
test
pushf
push
inc
push
jp
mov
out
aam
mov
mov
dec
inc
out
add
cwtl
jb
adc
mov
pop
aas
pop
out
mov
push
fisubrs
pop
rorb
jmp
mov
jecxz
sbb
cs
sbb
imul
push
cmp
or
inc
pop
add
flds
fisubrl
es
cs
or
jbe
push
pusha
out
loop
cmp
push
fidivrl
mov
fwait
daa
aas
fwait
push
pop
jnp
cs
mov
loopne
ret
movsb
hlt
sub
fcomps
loopne
sbb
mov
imul
cmp
mov
push
fstps
and
or
sub
inc
fldt
rcrb
inc
outsl
and
dec
cmpsb
mov
in
das
daa
jae
dec
adc
out
inc
jl
imul
sbb
mov
outsl
das
sub
out
iret
sbb
notl
ja
negb
pop
jno
nop
jp
sub
call
loop
imul
inc
push
adc
stos
cmp
xor
subb
inc
push
push
mov
jno
mov
pop
inc
pusha
and
ljmp
push
imul
mov
inc
stc
and
ljmp
pop
imul
dec
ljmp
push
fstpl
mov
sub
jno
mov
shrb
push
inc
andb
ljmp
loop
sub
jns
inc
sub
imul
dec
loop
imul
inc
dec
and
and
push
cmpl
push
mov
data16
mov
cmp
jns
mov
lcall
mov
mov
add
js
or
fsubr
pop
cmp
ret
loop
imul
adc
ret
cmp
and
loop
imul
ljmp
test
sub
inc
stos
and
xor
ret
add
pop
jo
push
sub
sbb
mov
imul
les
mov
mov
fildl
push
inc
mov
cltd
loop
imul
inc
test
call
and
loop
mov
popa
fistpll
imul
ljmp
mov
pop
and
clc
push
sub
ficoml
dec
or
enter
xchg
imul
ljmp
push
cltd
cmpsb
cmp
mov
ljmp
adc
push
ljmp
add
stc
jne
shr
inc
pause
add
jae,pt
stos
ljmp
mov
stc
dec
inc
mov
shr
call
loop
imul
inc
arpl
lcall
pushf
push
mov
mov
call
loop
imul
inc
push
and
stos
cmp
fidivl
inc
pop
and
and
loop
imul
inc
imul
ljmp
push
mov
imul
inc
popa
and
and
loop
imul
pop
roll
push
jo
cmp
ds
inc
jnp
ljmp
mov
fs
mov
arpl
lcall
mov
cmp
and
loop
fs
mov
incb
sbb
sub
es
loop
imul
pop
pop
in
mov
in
and
cmp
loop
imul
call
inc
jmp
decb
in
push
inc
inc
jbe
jb,pt
cmp
bound
test
movb
push
or
push
push
repnz
imul
mov
cmp
mov
sarb
and
loop
repz
stos
imul
shlb
cwtl
ljmp
bound
cli
imul
inc
cmp
xor
jmp
andb
sbb
pop
inc
inc
and
ljmp
imul
inc
dec
and
ljmp
cmp
test
cwtl
and
add
mov
dec
loop
imul
inc
inc
and
ljmp
clc
imul
ljmp
ds
ljmp
sbbl
mov
sub
out
xor
scas
insl
sbb
roll
shrb
adc
add
adc
neg
jo
pop
push
fwait
push
and
cltd
bound
cmpsb
mov
lcall
or
xchg
fistps
rcll
xor
mov
jnp
out
pop
mov
pop
in
or
shll
mov
ja
pop
sbb
in
jae
ljmp
mov
xor
je
iret
dec
stos
bound
jg
lahf
daa
xchg
and
add
adc
pop
and
lock
daa
mov
push
xchg
shl
xor
imull
pop
xlat
iret
shrl
mov
mov
pop
cltd
mov
push
xor
test
subl
dec
fucomip
hlt
cmp
and
mov
xor
mov
cmp
lret
cwtl
aam
loopne
imul
shlb
iret
mov
push
sub
jo
dec
mov
fiaddl
pop
push
std
cmpb
jno
sarl
inc
add
sbb
arpl
lret
jmp
int3
pusha
out
cmp
out
jecxz
sub
mov
ficompl
shr
xlat
mov
imul
mov
aaa
sub
mov
jbe
repz
out
xor
push
pop
jmp
fwait
push
call
stos
imul
cmpsb
mov
repz
jmp
xchg
sub
jecxz
fsubr
cmpsl
hlt
test
dec
outsl
mov
push
sub
xlat
and
adc
ret
xor
arpl
pop
inc
bound
shll
inc
push
filds
jl
push
mov
sti
mov
xchg
aas
popa
cmp
or
loopne
pop
and
pop
add
stos
fisttpl
jo,pt
or
jne
roll
daa
inc
aas
insb
sahf
outsl
push
mov
mov
fsts
or
imul
lahf
ret
dec
repnz
in
cltd
stos
xor
mov
fwait
and
and
bound
pushf
mov
adc
and
inc
sub
repz
sarl
sub
jnp
aas
dec
js
test
aas
daa
fldt
jecxz
push
dec
adc
cmp
xor
mov
mov
and
test
outsb
mov
pop
scas
clc
es
in
mov
inc
adc
push
pop
add
push
outsl
dec
dec
sarb
inc
mov
ret
jo
cmp
lea
add
pop
fldl
adc
in
mov
mov
jbe
in
jnp
add
push
shl
pop
jnp
bound
mov
xchg
fwait
xor
add
jnp
pop
sub
or
repz
mov
mov
out
leave
fistps
xlat
xor
addr16
ljmp
or
in
push
xor
lcall
push
and
stos
xchg
jecxz
ret
pop
loopne
dec
test
daa
add
ret
inc
in
xchg
xlat
leave
cli
les
and
sti
imul
sub
mov
les
inc
adc
mov
ds
nop
loope
mov
es
mov
push
inc
iret
fsubs
sbb
aas
gs
adc
loope
out
pusha
inc
ljmp
and
inc
fbld
dec
addr16
xor
pop
lock
pop
pop
out
mov
repz
lret
xchg
daa
fists
jecxz
mov
or
cmp
add
and
add
dec
dec
xchg
jp
xchg
fidivl
or
sub
or
arpl
mov
xchg
aas
out
js
and
mov
fistpll
cwtl
cmp
mov
mov
jge
sbb
push
dec
outsl
jb
adc
lret
pop
scas
mov
push
push
lahf
pop
inc
inc
in
sub
out
mov
mov
mov
xchg
add
mov
incb
repz
mov
out
mov
mov
lret
jmp
loopne
pop
outsl
jmp
dec
insb
and
and
nop
jae
ljmp
bound
sbb
dec
sub
jmp
mov
lds
cmp
fildl
arpl
sub
ss
pcmpgtb
out
inc
mov
cmp
nop
aas
popa
stos
mov
push
dec
fcoms
aad
or
packssdw
addr16
jp
and
out
mov
push
cli
pop
hlt
pop
add
cmpsl
lods
decl
push
cmpsb
sar
mull
ljmp
loope
out
sbb
jnp
dec
cmc
cmpsb
dec
stos
sub
and
cmp
and
jmp
add
pop
mull
xorb
lods
fwait
stos
inc
stos
repz
and
mov
bound
sbb
shl
sarb
cs
mov
mov
dec
inc
rcrl
xchg
repz
push
pop
xchg
cmpsl
xor
ds
push
arpl
fildll
jo
lock
fwait
dec
mov
out
imul
std
mov
jmp
sub
mov
test
mov
and
add
outsl
mov
cmpsl
std
rcll
pop
jg
cmp
dec
jmp
popf
repz
fwait
sbb
adc
adc
sti
cmp
mov
jp
addr16
adc
mov
mov
rorl
scas
shll
sti
pop
sbb
fwait
jle
inc
push
push
cmp
pop
test
jo
push
push
out
and
test
lock
cs
sub
mov
ss
pop
iret
pop
inc
fildll
mov
sub
lret
cmp
inc
jb
loop
imul
sbb
mov
or
dec
fnsave
adc
out
mov
arpl
outsb
int
test
fisubs
jnp
add
mov
cmc
push
xor
push
scas
sbbl
dec
inc
dec
stc
or
xor
cmc
push
push
mov
fisubs
stos
mov
and
popa
mov
jecxz
sahf
mov
sub
out
push
and
inc
sti
imul
and
sub
dec
adc
ret
nop
dec
xor
data16
pop
cmp
pop
insb
ds
arpl
adc
xlat
out
jns
cmp
icebp
out
adc
cmpsb
sbb
push
out
je
testl
xor
stos
jecxz
xchg
xor
mov
sub
push
test
insl
inc
sub
sub
aaa
cmp
lret
jmp
push
push
push
fxch
and
stos
js
sbb
sub
scas
push
xor
shlb
push
pop
jne
cli
outsb
aaa
bound
cmp
xchg
mov
mov
xor
aaa
push
push
clc
fisubs
add
inc
lret
ljmp
mov
nop
cmc
xchg
vorps
sub
jno
jno
cmc
pop
sbb
cmp
sub
add
lock
clc
mov
stos
push
bound
adc
sbbb
jae
lret
fadds
dec
xor
mov
inc
loopne
cmp
imul
fwait
sbb
jns
repnz
inc
iret
ljmp
adc
mov
mov
icebp
lret
in
jecxz
dec
inc
push
pop
insb
fucomi
ret
or
out
mov
in
ljmp
inc
push
popa
mov
aad
test
cs
cmp
bound
test
enter
movsb
jecxz
cmpsb
inc
repnz
sub
orl
fidivrs
ds
int3
or
lock
jns
inc
bound
es
inc
sti
inc
adc
out
movsb
jnp
mov
pop
test
sub
in
or
ljmp
inc
out
jb
dec
sub
pop
sbb
pop
dec
add
adc
jl
and
ljmp
sbb
fidivl
das
popa
or
jnp
dec
cmpsl
mull
lea
js
sub
cmpsb
es
xchg
mov
loope
jge
ss
or
dec
andl
sub
dec
cwtl
fwait
push
jle
mov
jge
popa
push
push
jecxz
daa
mov
lods
call
idivb
fwait
push
cmp
ss
dec
mov
dec
cli
add
mov
and
test
pop
into
outsl
pop
push
jmp
iret
xor
incb
fxch
ficompl
stos
mov
inc
inc
adc
js
dec
sbb
mov
pop
mov
testl
push
movsb
jmp
out
arpl
cmp
inc
adc
rolb
cmp
out
outsl
mov
xor
cwtl
pop
outsl
imul
jge
push
stos
aad
out
mov
gs
adcb
or
mov
divb
stos
outsl
fwait
iret
pop
nop
and
pop
stos
dec
sub
clc
xchg
jo
ss
sarl
dec
pop
pop
or
sub
leave
notl
add
arpl
dec
or
xchg
push
pop
add
or
js
scas
cwtl
push
out
outsl
outsl
fisubl
sbb
movsl
inc
cmp
loop
jo
ficomps
jp
inc
or
jnp
arpl
inc
shlb
es
imul
sub
jecxz,pt
addr16
mov
pop
sbb
scas
sub
into
inc
xor
adc
cmp
imul
dec
flds
ret
sbb
dec
dec
repnz
sub
cmpsb
mov
sub
fwait
out
cmpsl
and
idivl
je
pop
inc
jmp
and
push
roll
xor
js
arpl
push
and
popf
xlat
ljmp
and
hlt
sbb
sub
xor
jmp
loopne
mov
popa
xor
test
xor
addb
in
adc
jg
cmp
mov
xor
pop
push
inc
loop
dec
mov
aam
xchg
mov
dec
adc
push
js
pop
sub
jp
and
jl
lds
incb
in
sbb
push
ret
test
jge
mov
mov
pop
lea
cs
scas
loop
loop
cmp
aam
shrb
and
inc
pop
adc
jmp
push
sbb
cmp
inc
jno
mov
ss
push
and
ja
insb
xor
sbb
aas
push
sbb
jle
adc
push
imul
pusha
jmp
cwtl
mov
aas
das
adc
sti
pop
push
fists
cs
mov
mov
out
stos
sbb
loopne
ret
sub
cmp
xor
test
sbb
dec
and
out
enter
push
push
ljmp
mov
pop
xchg
rorl
xor
add
rclb
add
cmp
add
imul
ljmp
iret
repz
imul
cmp
roll
lock
mov
lret
pop
ret
aam
roll
out
inc
rcrb
aas
jl
and
jne
test
mov
into
arpl
jecxz
into
imul
nop
dec
push
dec
ljmp
popa
pop
repnz
inc
mov
mov
jmp
es
shrb
inc
and
xchg
xacquire
imul
sbb
cmpsb
adc
xorl
movsl
aaa
push
or
or
mov
push
pop
sub
jnp
ja
sub
adc
dec
dec
ljmp
push
add
sahf
mov
pop
fisubrs
jnp
inc
and
jnp
and
dec
jp
ds
rorb
sub
mov
imul
push
cmp
jns
push
in
jns
jnp
rcrb
out
push
jno
pop
stos
add
sbb
pop
jmp
loope
or
push
sbb
pop
adc
sti
adc
cmp
lahf
cli
add
mov
stc
mov
jnp
cmp
xchg
ljmp
and
push
cmpsb
arpl
test
ljmp
sbb
jns
mov
insl
inc
or
sbb
fwait
addl
jmp
lahf
mov
fisttpll
mov
pop
shlb
jns
inc
mov
sbb
and
nop
jp
jmp
jnp
cmp
cmp
adc
push
cmp
adc
test
dec
dec
mov
in
lahf
cmp
fs
add
shrb
in
jmp
outsl
mov
add
jl
shl
mov
or
lock
jnp
add
sahf
add
fwait
sbb
lock
dec
cli
inc
in
bound
loop
cmp
cli
or
sub
lcall
cmpsb
jns
cmp
add
or
xor
adc
cmp
mov
pop
mov
imul
repnz
es
mov
xor
jnp
jnp
and
and
lahf
xor
jnp
cmp
xchg
cmpsb
jnp
jo
lahf
sub
jo
inc
pop
lret
cli
push
pop
mov
mov
pop
fdivp
pop
inc
adc
cli
push
daa
fiaddl
popa
jo
pop
cld
dec
repz
push
push
and
mov
rcrl
sbb
fsts
jnp
fidivl
sub
push
pop
sbb
outsb
mov
popf
and
cli
and
push
imul
push
add
pop
and
mov
sbb
out
sbb
ret
mov
pusha
addb
adc
jbe
jg
mov
popf
fs
out
fldcw
add
cwtl
in
inc
or
mov
cmp
lret
mov
push
stos
pop
push
outsb
mov
push
push
cwtl
xor
sbb
sbb
cli
adc
mov
loope
inc
sahf
sbb
mov
lods
push
insb
push
jbe
jne
cmpl
adc
sbb
jbe
jbe
pop
sbb
adc
loopne
push
into
jbe
mov
cli
and
popf
dec
test
jbe
sub
and
and
and
inc
fucomi
add
sti
sbb
mov
clc
pop
daa
loopne
loop
pusha
cli
sbb
sub
cmp
fwait
jmp
inc
sbb
cmp
cli
sahf
sti
fidivl
cli
mov
lock
outsl
pusha
bound
flds
cli
or
xor
cmp
mov
and
pushw
pusha
stc
inc
shr
mov
push
ja
out
and
cmp
mov
jnp
ja
out
and
cmp
sarl
add
jnp
data16
ds
or
mov
mov
out
subb
cmp
jp
sub
mov
jns
cmp
pop
cmp
jp
mov
pop
jmp
outsb
adc
pop
cs
lahf
mov
mov
loop
imul
ljmp
imul
inc
mov
cmp
xor
cli
mov
sbb
mov
sbb
and
enter
arpl
or
dec
pop
and
sub
push
shl
pop
jno
mov
icebp
fbstp
aam
push
sub
jno
rcrl
stc
push
pop
jmp
ffreep
mov
add
fmull
outsb
repz
pop
hlt
sbb
jecxz
dec
out
push
jl
pusha
mov
cmp
ficoml
xor
jmp
fists
sbb
lret
out
cli
and
das
in
and
pop
add
rorl
call
xor
into
popf
mov
fst
imul
cmp
and
push
movsb
cli
cmc
inc
sbb
jle
fisubrl
fwait
inc
stos
adc
cmp
mov
pop
gs
mov
and
out
dec
das
jmp
dec
aaa
jp,pt
in
inc
out
outsb
sahf
push
pop
cli
les
loopne
push
in
dec
pop
out
jmp
push
pop
add
pop
cwtl
dec
pusha
lock
push
dec
mov
jo
leave
xchg
xor
mov
insl
cmp
imul
popf
fldl
enter
push
pushf
lret
out
out
ljmp
jnp
test
xchg
push
pop
mov
fstps
inc
loope
adc
mov
pop
ficompl
sbb
out
inc
or
add
and
mov
jecxz
out
jb
lds
in
mov
pop
cli
outsb
jb
inc
clc
dec
imul
pop
cmp
push
and
cmp
pop
push
fisubs
jmp
and
jecxz
lock
fldt
cmp
and
fs
mov
pop
ficoms
pop
in
mov
loope
xchg
and
pop
or
mov
jmp
cmpb
in
push
pop
outsb
add
push
ret
cmp
adc
jle
sahf
xchg
stos
xor
aaa
xchg
dec
lds
cmp
fildll
cmpsl
or
cs
cmp
stos
test
xor
mulb
mov
fidivrl
ss
es
mov
shll
lret
or
divb
mov
les
add
jo
sahf
mov
out
pop
insb
outsl
js
fwait
stos
fwait
out
out
rorl
sub
call
jae
xlat
mov
lret
dec
arpl
arpl
jnp
mov
dec
cmp
dec
daa
je
cwtl
scas
negl
lods
or
mov
xor
cmpsb
dec
fildll
cs
mov
push
dec
std
jmp
and
mov
pop
jnp
aas
add
cli
bound
push
and
mov
loop
inc
jl
test
fwait
cmp
push
loopne
pop
fwait
ds
lret
cmp
sub
dec
imull
test
stos
out
hlt
jnp
stos
pop
inc
push
aaa
cmpsb
jg
mov
cmpl
ds
dec
pop
into
mov
and
ljmp
dec
sbb
and
imul
cld
xchg
xor
mov
scas
sbb
pop
xor
jae
aas
jae
mov
cmp
inc
subb
cmpsl
stos
mov
and
mov
jmp
pop
push
fbstp
mov
out
mov
mov
and
stos
roll
in
dec
sbb
push
pop
fwait
sub
xlat
repnz
pop
fwait
dec
stos
sub
mov
out
cmp
xor
insb
mov
xchg
mov
fwait
sbb
cld
cmp
and
fldcw
cli
xor
adc
and
mov
jecxz
jns
mov
or
pop
xor
sbb
pop
inc
lock
lret
cmpsb
xor
pop
lock
shr
scas
or
push
cmp
and
jecxz
adcb
leave
and
and
das
cmp
push
pop
pop
add
sahf
dec
jmp
jmp
aaa
mov
mov
in
cltd
out
cmpsl
xor
rclb
scas
or
lods
int
repnz
aaa
dec
pop
mov
aas
orl
daa
outsl
sti
movsb
bound
cmp
push
inc
fcompp
into
adc
je
filds
rorb
bound
dec
jge
shll
or
in
out
cmp
or
loop
cmp
mov
outsb
cmp
xor
push
popf
xor
aas
icebp
push
outsb
sub
das
cmpsl
out
mov
test
subb
cmpsl
mov
sub
fidivs
mov
xlat
cltd
arpl
or
sub
fiadds
lahf
pusha
mov
push
dec
mov
imul
fldcw
xchg
push
sbb
shr
jb
fsts
inc
sti
sbb
nop
mov
inc
inc
cli
sbb
cmp
dec
inc
cs
rcrl
and
scas
mov
cmp
cmp
ljmp
sub
inc
incb
fwait
cmp
mull
xlat
jns
push
lret
add
sub
pop
scas
push
stos
or
sub
mov
cmp
fcomps
cmovae
sub
iret
aas
test
mov
and
mov
jnp
ret
adc
or
daa
ficoml
inc
mov
jae
add
cmp
sti
push
adc
xor
stc
lret
sub
movsb
popa
loope
out
pop
stos
dec
mov
sahf
sbb
outsl
pop
loop
sub
fiadds
and
or
nop
rorb
loope
adc
cmp
pop
rolb
push
or
sarb
fidivl
mov
and
pop
push
notl
cmp
scas
fxch
or
test
jmp
jns
sbb
sbb
mov
mov
and
fnstenv
add
fcos
mov
inc
mov
loop
ja
pop
jmp
inc
call
mov
mov
frstor
jno
pop
out
sub
stc
idiv
js
lret
rorl
mov
fidivrl
andl
push
cmp
mov
pop
mov
pop
lret
mov
mov
cmp
daa
xlat
rep
push
mov
leave
or
xchg
imul
push
sub
adc
fists
lret
loop
dec
int3
insl
js
cmp
adc
out
into
fwait
mov
sti
addb
dec
cmpb
test
jae
daa
scas
shlb
push
xchg
mov
mov
fiaddl
sahf
cmp
add
mov
add
sahf
sub
cltd
cmp
pop
push
movsb
mov
popa
add
push
loopne
fisubl
ljmp
repnz
dec
mov
sbb
ljmp
lods
push
jns
cli
mov
jnp
add
inc
mov
mov
push
lock
sbb
adc
sbbb
mov
je
jmp
cmp
adc
jecxz
and
lods
aas
cmp
sbb
inc
nop
loopne
dec
push
leave
ds
pop
sbb
lcall
dec
fidivrl
cmp
or
pop
fisubl
mov
pop
jmp
sub
mov
clc
ret
test
pop
xchg
sub
je
out
outsl
loopne
cmp
and
xlat
fcomi
outsl
mov
loop
jmp
repz
fwait
jl
push
sbb
cmp
mov
cli
jle
cmpsl
pop
and
mov
mul
arpl
fstps
xor
aaa
and
xor
sti
cmp
dec
dec
add
ret
mov
cli
cli
jae
loopne
lahf
cs
sub
sbbl
xor
add
cmp
aas
shlb
dec
outsb
cli
std
mov
jl
out
mov
imul
aam
jns
and
pop
or
cli
sahf
xor
rcrb
imul
je
fildl
rclb
mov
fbld
lret
icebp
sbb
mov
and
xchg
lcall
stos
fsubrs
mov
subb
mov
dec
daa
aas
imul
mov
fwait
xor
rcrl
xchg
add
pop
stos
xlat
movsl
fs
mov
xchg
and
lret
sbb
rcl
dec
call
mov
sbb
lretw
daa
jmp
jmp
and
fwait
xchg
inc
xchg
sarl
sbb
in
subl
sub
jg
xlat
cmc
xchg
push
dec
mov
jp
inc
into
sahf
sti
sahf
insb
lret
jb
sbb
jecxz
add
pop
sbb
lock
push
fsubrp
sub
cli
cmp
hlt
mov
and
lock
dec
pop
fstpt
and
sbb
adc
shrb
outsl
jmp
addr16
inc
not
scas
es
jae
pop
add
outsl
and
aad
icebp
mov
test
mov
fisubl
cld
jo
sarl
xlat
mov
or
test
cmp
imul
sbb
pop
call
mov
insl
mov
and
repz
push
cmp
or
sub
repz
sbb
inc
test
fcmove
mov
cmpsl
dec
and
mov
test
or
cli
or
and
sub
xchg
iret
mov
in
cmp
mov
pop
sub
cmp
mov
cld
mov
jnp
xchg
arpl
hlt
or
jmp
pushf
popf
mov
aaa
xchg
aam
xlat
sbb
imul
push
leave
sub
pop
jle
or
ret
pop
mov
cmp
xlat
cmp
stos
jb
dec
jmp
dec
sub
mov
inc
je
xchg
adc
inc
cli
out
mov
sbb
in
sub
xor
add
mov
out
add
push
inc
push
lock
pop
ds
bound
outsl
fcomps
testb
and
sub
sbb
fwait
in
xor
adc
rcl
data16
pushf
cltd
mov
mov
lcall
push
lcall
sub
jnp
sub
fwait
dec
shr
pop
xor
sub
mov
loopne
addr16
or
addr16
mov
sub
or
and
std
outsb
push
jp
adc
cli
xor
mov
adc
cltd
sar
xchg
pop
addl
mov
sbb
das
arpl
sbb
mov
scas
shlb
cmp
aaa
cmp
dec
pop
shll
inc
jge
ja
fimuls
pushf
sahf
aas
push
outsl
test
push
cs
xor
js
mov
ljmp
ljmp
daa
out
sbb
add
rorb
out
dec
divb
cmp
mov
jp
pop
addr16
dec
pop
shlb
iret
mov
cmpsb
ds
ljmp
les
jle
cmp
xor
inc
sub
jns
les
pop
jns
cmp
push
fs
and
loop
aaa
loopne
push
and
and
cli
stos
cwtl
inc
inc
and
jns
flds
push
pop
imul
nop
sbb
je
fisubl
mov
inc
inc
jns
pop
jle
xchg
cltd
and
stc
popf
fwait
push
push
and
inc
push
mov
cli
mov
xchg
mov
push
jns
mov
inc
xchg
es
pop
add
cmp
cli
idivb
mov
pop
mov
cmp
pop
jmp
jecxz
push
loop
jae
push
push
rcrb
add
addr16
lcall
push
push
jnp
adc
sbb
mov
push
jnp
jnp
ja
fstpt
cmp
sub
jnp
cli
outsl
cmp
and
and
jbe
inc
clc
and
push
testl
fs
and
sti
sbb
cli
sbb
clc
cmp
sbbb
jmp
addb
xor
int3
fistpl
cmpsl
jbe
jo
orl
xchg
loope
dec
pop
ss
stc
test
cli
movsb
push
jb
fdivrp
jmp
mov
pop
rorl
push
into
out
cmp
inc
add
push
sub
push
jae
sbb
lods
pop
inc
cmp
sbb
mov
data16
adc
dec
push
rcl
push
out
pop
sahf
cli
pop
pushf
clc
les
or
mov
imul
and
ljmp
fisubrl
incb
popa
bound
in
rorb
pop
sti
dec
cltd
cwtl
sbb
and
inc
loop
imul
inc
push
and
and
fisubl
sbb
nop
data16
loop
add
push
inc
ljmp
dec
and
push
addl
ljmp
xchg
imul
xor
cmp
jecxz
outsb
mov
imul
dec
xchg
insl
mov
inc
cmpsl
cmp
jbe
lret
xor
imul
push
inc
and
cli
fidivrs
dec
sbb
ja
mov
cli
inc
daa
cmp
aaa
mov
lret
dec
cli
iret
sub
and
loop
ja
mov
mov
fs
push
jo
cmp
mov
in
and
clc
fwait
ja
mov
cmp
dec
xlat
dec
hlt
mov
je
orl
imul
into
stos
jnp
fildll
adc
xchg
sub
inc
mov
push
movsl
es
mov
ljmp
xor
js
sbb
mov
pusha
jne
push
add
fwait
and
pop
imul
pop
outsb
inc
pop
and
bound
loop
outsb
push
cmp
and
mov
orb
cmp
sbb
mov
push
mov
push
push
leave
sbb
mov
cmp
xor
sbb
jle
cli
mov
push
inc
and
loop
imul
ljmp
subl
inc
mov
imul
and
sbb
and
dec
call
andb
cmp
pop
loop
imul
inc
cltd
and
sarl
jne
inc
jno
push
imul
inc
and
push
fwait
or
mov
cmp
repz
ljmp
inc
inc
push
sbb
sbb
mov
loop
imul
pop
pop
fwait
inc
sbb
inc
ljmp
jns
sbb
mov
adc
xor
cli
and
ljmp
sub
sub
sbbb
jbe
and
push
cmp
and
loop
imul
inc
fisubl
cltd
ljmp
and
loop
imul
sbb
sbbb
pop
inc
mov
inc
sahf
pop
add
sahf
mov
cmp
flds
jp
push
imul
cmp
and
loop
imul
sti
and
ljmp
pop
imul
pop
bound
cmpsl
and
ljmp
pop
push
test
jae
bound
mov
inc
aas
and
and
loop
imul
dec
and
ljmp
cmp
sbb
pop
inc
jnp
and
sbb
daa
and
loop
test
das
ljmp
aaa
imul
inc
fldenv
ljmp
imul
inc
or
pop
ljmp
fwait
imul
inc
loopne
fistpll
jns
jecxz
sbb
mov
push
cmp
imul
ljmp
shrl
fwait
inc
shlb
ljmp
cmpsl
imul
scas
and
ljmp
sbb
mov
and
loop
imul
ljmp
jp
in
ficompl
fisubrl
jbe
mov
test
sti
ljmp
inc
sbb
hlt
loopne
imul
int
test
cmp
cmp
sbb
pusha
jno
push
outsl
mov
ljmp
imul
inc
jl
xorb
cmp
cmp
and
std
inc
pop
and
ljmp
or
cmp
imul
ljmp
mov
push
jbe
add
cmp
xor
push
cs
fdivrp
jle
push
cmp
fidivrs
xor
xchg
addr16
cmp
and
mov
fiadds
add
rclb
addr16
mov
mov
ss
push
and
cmp
push
cmp
add
and
mov
aad
mov
jl
mov
cmp
jl
cli
xchg
fidivrs
cmp
push
and
add
push
adc
cmp
cmp
push
inc
cli
xchg
addr16
cmp
xchg
fiadds
add
push
pushf
addr16
and
cmp
push
sbb
mov
fidivrs
jle
push
cmp
inc
push
and
mov
jl
jns
xchg
jl
stc
xchg
fidivrs
cmp
xchg
fdivrp
jle
push
cmp
cmp
and
inc
xchg
fiadds
jle
push
cmp
lea
stc
xchg
addr16
cmp
mov
mov
mov
jl
sti
xchg
fidivrs
inc
xchg
add
and
adcl
jl
jp
sbb
push
jp
jl
mov
cmp
sti
xchg
addr16
inc
mov
jl
rclb
fdivrp
jle
push
cmp
fidivrs
adc
xchg
addr16
cmp
and
mov
fiadds
add
rclb
addr16
mov
mov
addr16
loope
push
and
cmp
push
cmp
add
and
mov
aad
mov
jl
mov
cmp
jl
cli
xchg
loop
and
inc
inc
sti
cmpsb
xchg
mov
pusha
les
fwait
cmp
aam
cmp
rcrb
pop
fcomps
sbb
jno
add
fstcw
or
sbb
adc
cmp
pop
cmp
add
mov
pop
and
sbb
fnstsw
pop
or
sbb
inc
sbb
cmp
lock
sbb
andb
je
es
cltd
mov
jnp
add
lcall
je
dec
fnstenv
sbb
cltd
in
cmp
cltd
sti
and
clc
popa
cmpb
pop
push
daa
push
lret
pusha
ja
je
mov
lcall
pop
jmp
lret
pop
add
outsb
jo
shrb
push
inc
out
insb
pusha
mov
and
popf
mov
inc
pop
adcl
mov
sub
into
sbb
ljmp
loopne
mov
test
fidivrl
push
das
push
cs
lcall
jb
pusha
jnp
push
lcall
jl
sbb
xchg
fstp
dec
add
sbb
fucomp
jg
mov
fimull
pop
fwait
cli
cmp
sbb
mov
imul
sbb
pop
aas
loopne
inc
dec
dec
sub
rcrl
pmullw
mov
mov
sbb
ficoms
in
fisubs
jmp
push
enter
decb
cs
xchg
fwait
call
test
movsb
mov
movsl
nop
sbb
data16
lahf
bound
pop
je
arpl
lock
in
jnp
mov
jo
rolb
dec
and
pusha
mov
jns
add
rcrl
push
sbb
fstpl
push
sbb
mov
sbb
ficoml
jecxz
lods
push
sub
loope
bound
jne
imul
mov
pusha
loopne
jl
mov
movsb
rcrb
mov
lret
jns
push
data16
in
cli
ds
addr16
and
fwait
sti
sti
add
test
jnp
pop
out
addr16
jo
ljmp
fisubrl
movsb
imul
mov
imul
loopne
imul
jmp
jecxz
punpckldq
pop
jl
inc
shr
sub
movsb
mov
lret
loopne
lock
and
popa
sub
imul
pop
sti
mov
fs
cltd
fimull
push
add
pop
xor
xor
test
jl
sbb
mov
daa
jb
jno
mov
popa
sub
mov
inc
ds
mov
jo
rcrb
addb
pusha
nop
inc
jl
sbb
mov
push
cmp
mov
dec
pusha
sbb
mov
or
sub
mov
mov
adc
lcall
fdivp
data16
fstp
lahf
bound
sbb
ljmp
fiaddl
push
inc
mov
inc
sbb
imul
push
fcomps
fcompl
mov
jns
cltd
push
pusha
pop
cmp
in
fimull
cltd
fwait
clc
pop
cmp
jl
shlb
lret
xor
imul
or
test
pop
dec
loop
outsl
xor
sbb
dec
imul
repnz
pop
xor
and
dec
mov
sarl
loopne
jmp
pop
popa
shl
jmp
out
push
int3
xor
push
mov
stos
in
ja
fidivrl
out
shrl
lods
fimuls
jecxz
scas
pushf
jmp
daa
jb
mov
lods
and
cs
imul
cmpsl
sub
add
andl
xchg
movsl
mov
enter
add
mov
inc
pop
mov
out
fildll
mov
push
mov
fcoms
in
arpl
and
call
cs
mov
or
fisubrl
sub
and
lret
and
mov
or
jnp
xchg
pop
xor
packssdw
xor
lret
clc
xchg
jnp
ret
inc
cmp
xchg
or
ds
test
or
popa
mov
nop
out
leave
test
movsl
adc
xor
and
mov
push
dec
out
lret
sub
mov
repnz
push
mov
inc
sub
adc
and
call
out
test
bound
imul
jmp
mov
xor
mov
ret
shlb
scas
add
cmp
dec
mov
out
mulb
and
sbb
dec
jmp
mov
repnz
cmp
mov
push
ss
mov
or
and
std
leave
sub
and
scas
sahf
cmp
and
lahf
push
loop
mov
mov
xor
xor
dec
negl
mov
mov
xchg
xchg
pop
mov
sti
cmpsb
or
inc
adc
mov
adc
jecxz
mov
sarl
or
and
sar
jno
mov
shlb
daa
jmp
xor
dec
adc
out
fistps
jae
xchg
and
sub
enter
mov
lret
dec
lret
mov
add
dec
cs
cld
pop
add
ss
clc
test
mov
sbb
push
jp
addr16
outsl
mov
push
ja
cmp
lock
jp
xgetbv
movaps
mov
iret
mov
cmpsl
add
push
scas
lret
stos
jns
clc
jp
xchg
iret
mov
cmp
nop
and
pop
pop
lcall
stos
jecxz
movsl
sahf
push
rolb
or
cli
dec
aam
movsl
clc
sub
push
pop
push
pop
outsb
sbb
or
push
mov
les
lret
adc
bound
pusha
aam
cmp
sub
bound
pop
add
push
ds
xchg
mov
jbe
fisubl
insl
inc
jp
mov
inc
sbbb
sub
push
inc
jl
lods
inc
cwtl
sbb
pop
xchg
pop
pop
fwait
pop
add
repnz
push
push
out
lock
ljmp
pop
mov
xor
jecxz
sub
les
aam
mov
dec
inc
outsb
and
push
and
mov
stos
ret
sub
adc
push
mov
daa
stos
dec
fcmovu
dec
rcr
lcall
push
lea
add
sbb
adc
mov
sub
outsb
scas
or
add
lret
jp
adc
mov
mov
arpl
inc
les
lret
push
ficomps
pusha
xor
inc
rolb
or
aam
pop
xchg
inc
xchg
adcb
cltd
fidivs
sahf
push
push
data16
push
loope
xlat
fisttpl
xchg
sahf
and
hlt
xchg
jnp
fsts
aad
push
adc
sbb
stos
hlt
dec
sub
mov
ret
std
scas
in
and
adc
inc
mov
push
subb
mov
mov
pop
push
sbb
mov
xor
loop
push
insb
push
jne
pushf
cmp
pop
pop
ljmp
and
xchg
je
push
cmp
inc
inc
test
xor
fs
mov
pop
daa
cmp
rorb
imul
add
out
cmp
inc
les
push
imul
and
add
stos
in
jb
lret
repnz
mov
mov
repz
push
out
add
adc
sbb
enter
ljmp
mov
jno
btc
sub
jle
dec
push
fmul
sub
test
jnp
fwait
mov
imull
outsb
sub
rcl
jmp
pop
mov
inc
dec
lret
das
xor
xor
ror
shrl
adcb
xlat
mov
cmp
test
loopne
repnz
or
hlt
push
and
and
mov
cmp
loop
pop
mov
mov
sbb
ja
loope
jg
push
jmp
test
data16
sbb
jmp
push
pop
inc
out
sti
test
aas
ja
adcl
sub
jb
test
xchg
rcrl
and
dec
daa
dec
cmp
or
sbb
arpl
outsl
mov
data16
iret
ret
dec
pop
andl
cmp
cmp
movsb
fisttpl
add
add
lods
fistpl
in
dec
adc
andb
xchg
xor
lret
scas
stos
sbb
sbb
cld
testl
je
lds
fwait
jl
mov
rcrl
sti
fwait
rorl
xor
js
ja
push
mov
nop
xchg
hlt
ljmp
adc
neg
add
add
stos
aad
or
mov
mov
sbb
stos
rclb
movaps
mov
int
adcl
lds
cmp
add
divl
push
les
and
lahf
pop
adc
mov
fwait
jmp
mov
inc
stc
xor
dec
cltd
mov
stos
sub
inc
mov
jecxz
mov
jnp
jb
sbb
loop
ljmp
mov
sbb
xchg
adc
out
jl
daa
inc
mov
sbb
ja
icebp
pop
jo
in
mov
jmp
je
fcompl
add
lock
pop
push
pop
pop
and
mov
arpl
stos
cmp
pushf
mov
jns
daa
cmp
push
aam
and
mov
pusha
subl
je
fxch
movd
out
fwait
dec
jl
cmp
push
pusha
lret
cmp
mov
pop
test
out
sub
xor
sbb
sub
or
stos
mov
mov
adc
xchg
insl
cmp
mov
mov
stos
lcall
sbb
sbb
pop
les
pop
imul
sarl
addr16
pop
mov
fnstenv
push
cmp
neg
pop
icebp
jbe
mov
ljmp
fnsave
shlb
lret
and
push
jbe
mov
mov
lods
scas
jb
dec
pusha
and
sbb
inc
fnstcw
push
cltd
xor
andb
cli
cmpsl
movsb
mov
dec
add
test
push
mov
xor
sub
lods
ficomps
stos
sbb
loop
cltd
push
sbb
aam
jecxz
pop
mov
aam
mov
push
icebp
mov
cmp
sbb
sbb
lock
bound
pop
fwait
push
cmp
sti
xorb
sbb
pusha
shll
mov
dec
pop
jnp
mov
shll
or
pop
popf
in
push
popf
sti
fidivrl
popf
mov
inc
lcall
push
adc
or
fimull
xchg
inc
inc
cmp
iret
push
pop
dec
push
mov
adc
ficoml
test
daa
fnsave
xchg
dec
enter
dec
cs
scas
and
dec
cs
mov
jle
out
aaa
cmpsb
out
add
adc
je
into
outsl
cmp
jg
mov
ss
and
test
or
xorl
sbb
sbb
fstps
push
xor
push
mov
xor
lds
lahf
or
add
xor
push
adc
int
pop
les
sbb
xor
movsl
aaa
fwait
sbb
in
sbb
push
pop
in
fstpt
pop
addb
aam
call
sbb
xchg
flds
mov
xchg
push
pop
inc
xchg
inc
push
test
cld
sub
push
jns
push
jp
ret
enter
sub
cmp
fldt
mov
jbe
mov
sbb
sbb
pop
dec
pop
sbb
sbb
cmc
loop
cmp
mov
mov
cs
pushw
mov
jp
cltd
pop
shl
jp
jbe
push
push
adc
jae
pop
and
test
push
aaa
pop
mov
test
push
inc
cmpsl
mov
jb
jae
lret
and
push
xchg
pusha
out
push
xchg
mov
mov
incl
dec
cmp
push
test
mov
sbb
pop
or
xchg
cmp
jbe,pt
push
ljmp
cmp
bound
jmp
xor
or
mov
push
ds
cmp
imul
aam
cmp
repnz
cmp
add
and
mov
sbb
icebp
bound
test
xchg
std
xchg
enter
mov
xor
jns
hlt
mov
mov
pusha
bound
aam
cmp
xor
ret
push
or
mov
dec
arpl
inc
xchg
mov
push
jmp
ss
shrb
dec
cmp
adc
xor
popa
bound
inc
xor
sub
fistps
pop
cmpsb
rclb
xor
js
pop
xchg
in
ljmp
imul
lods
es
out
fimuls
jbe
push
ficomps
push
arpl
and
cmp
fwait
jb
outsb
xchg
pop
frstor
cmp
jae
ficoms
jl
loop
imul
jb
inc
add
stc
ret
fwait
hlt
push
adc
loope
pop
xor
cltd
push
fsts
pop
lock
cmp
sbb
sbb
xchg
ss
jle
pop
mov
ficomps
and
pop
sbb
cmp
out
push
out
ds
fsubrp
cli
ficoml
mov
ds
idivb
mov
dec
sbb
sub
pop
jnp
bound
jnp
loop
add
ljmp
xor
pop
repz
dec
inc
bound
sarl
out
cmp
movsl
inc
movsl
and
mov
sbb
js
and
or
inc
repz
mov
or
js
push
pop
push
sbb
int
cli
mov
aas
mov
dec
add
or
jb
ficoml
pop
mov
lods
fistl
mov
cmp
inc
divb
xchg
shrb
loopne
xchg
popf
aaa
xchg
adc
sub
mov
mov
sub
or
dec
inc
sbb
cld
rcr
xor
and
ret
push
dec
jb
adc
add
ficoml
mov
mov
push
aas
out
dec
cltd
cmpb
adc
sbb
shrl
sbb
jmp
or
cmp
mov
xchg
mov
cmp
outsl
push
add
jmp
pop
js
jl
dec
loopne
cmp
jmp
adc
mov
jb
dec
add
sbb
inc
cmc
mov
xchg
mov
outsl
dec
pop
in
stos
imul
and
add
mov
dec
mov
jo
inc
mov
push
call
push
jns
ret
xor
adc
out
cmp
js
sub
jl
outsl
fidivrl
adc
cs
jbe
fisubs
sub
sbb
xchg
fwait
or
jmp
cmp
inc
lock
insl
add
push
in
mov
mov
adc
jmp
dec
mov
push
lock
fiadds
and
andb
push
adc
adc
in
jb
js
insb
adc
xor
adc
mov
fidivrs
and
jno
fldcw
call
push
scas
mov
lret
sbb
sarl
inc
add
ljmp
sarl
notl
fs
xchg
dec
enter
sbb
push
sbb
jmp
jo
mov
xchg
dec
or
sbb
nop
das
xchg
add
lret
jl
jecxz
adc
daa
fsubrs
sub
cmp
adc
dec
lods
xor
lea
lcall
mov
pop
ret
or
add
les
dec
dec
fadd
mov
es
push
or
mov
add
fs
adc
stos
sub
rcl
sarl
clc
jmp
cmp
inc
pop
stos
sahf
inc
xor
inc
dec
sbb
add
lock
inc
mov
ljmp
push
push
inc
cli
lock
fnstsw
mov
mov
push
out
repz
xor
dec
js
imulb
subb
ljmp
jmp
imul
xlat
sbb
mov
filds
fwait
ja
inc
mov
cltd
mov
sub
rcl
adc
ljmp
adc
jb
sub
fucomi
jle
repz
imul
xchg
fwait
fwait
mov
inc
mov
loope
repz
dec
sub
pop
sub
cmp
mov
mov
pop
ljmp
das
mov
call
stos
jmp
cmp
call
or
fs
nop
pop
sub
and
inc
mov
sub
fildl
fcmovnbe
popa
ss
mov
mov
imul
inc
jb
pop
ja
sbb
sub
ficompl
push
pop
and
xor
lcall
dec
ds
outsb
hlt
lcall
push
dec
xchg
cli
push
sbb
stos
xor
push
push
jbe
inc
ds
data16
mov
adc
lcall
imul
adc
ja
lods
push
jb
xor
subb
jecxz
push
dec
repz
sbb
xor
fwait
outsb
push
jbe
rcrl
enter
sbb
iret
mov
shlb
pop
mov
test
leave
notb
test
fucom
sbb
dec
fidivrs
mull
push
lcall
jb
cltd
mov
dec
clc
push
lods
and
jnp
fwait
push
sub
mov
fwait
repz
sub
ds
scas
and
shrb
cltd
push
and
pusha
fldcw
push
clc
mov
hlt
cmpsl
js
mov
cmp
scas
sbb
jo
dec
loop
cmp
js
subb
inc
jo
data16
add
jle
cmp
es
mov
frstor
cmp
jno
test
jo
arpl
cmp
inc
inc
arpl
jecxz
inc
std
jbe
mov
sbb
jmp
mov
jp
and
stos
push
lock
adc
lock
adc
ljmp
repnz
ret
sub
push
add
inc
push
pushf
sbb
or
sub
bound
jbe
shr
jmp
jb
mov
jb
imul
outsb
repnz
xlat
das
pop
jp
pusha
dec
jecxz
inc
imul
push
or
imul
push
jl
sarb
push
in
and
cmp
push
add
or
arpl
outsb
shll
lock
mov
stc
inc
adc
jp
dec
imul
or
push
and
jb
fmuls
test
out
out
cli
inc
push
pop
inc
jl
adc
jb
jp
fidivs
and
add
lahf
ret
cmp
mov
dec
mov
add
pop
and
mov
sbb
pop
xor
cmp
xchg
test
xor
loopne
sbb
cltd
cmp
inc
xchg
lock
jl
lret
push
bound
xor
je
sahf
sti
jb
cwtl
scas
rclb
nop
pop
adc
pop
adc
mov
sbb
dec
cmp
loop
sarb
jnp
ds
sub
mov
outsl
mov
shr
xchg
test
mov
sbb
sub
lods
imul
mov
xchg
push
mov
lret
ds
inc
xor
in
xchg
aad
inc
dec
sub
sbb
stos
ds
rorl
inc
jbe
fdivrs
cmp
loopne
ljmp
ficoml
lret
lods
ss
and
daa
movsb
shrl
dec
call
arpl
sbb
pop
mov
sti
jp
mov
dec
cmp
fsubp
or
pushf
push
and
sbb
mov
jmp
and
and
push
pop
repz
jbe
add
imul
out
pop
das
xor
stos
cmp
xor
sbb
sub
rolb
movsb
ret
in
xchg
xchg
cltd
stos
popf
popa
inc
pop
popa
jo
loopne
ret
cmp
dec
sbb
out
and
arpl
call
loopne
mov
cmp
insb
inc
mov
mov
push
ds
sbb
mov
jb
mov
cwtl
or
sar
xchg
enter
sti
inc
pop
iret
inc
sub
mov
xor
bound
shrb
sarl
insb
and
nop
cmpsl
sub
sbb
sub
add
jg
aam
jno
and
cmp
call
lcall
fwait
cmp
das
and
sbb
mov
lock
cmp
push
stc
jmp
lea
out
mov
das
or
insb
jp
xlat
mov
test
inc
loop
and
push
in
push
scas
or
xor
add
pusha
mov
in
mov
in
push
cmp
inc
cmpsl
loopne
inc
sahf
push
in
rolb
mov
jge
pushf
dec
fisttpl
push
cli
pop
lret
fucomi
xchg
pusha
jle
fwait
popa
mov
cltd
jmp
roll
lods
dec
xor
sub
cmp
and
cmc
sub
out
push
stos
mov
mov
sbb
jb
dec
inc
jecxz
pop
fldt
sub
push
mov
inc
xor
js
inc
inc
cmp
adc
mov
cmpsb
push
push
mov
fadd
or
dec
sti
inc
jno
pop
data16
int
push
mov
lahf
mov
sbb
mov
inc
stos
out
scas
add
cli
mov
mov
xor
mov
in
sub
xchg
and
cmp
xor
push
ja
subb
mov
mov
ror
ss
inc
mov
cmp
aas
adc
push
add
sbbb
inc
roll
imul
adc
push
les
pop
and
aam
sub
clc
test
cltd
rcl
cmp
mov
add
cmp
lcall
pop
cmp
pushf
jecxz
fistpl
stos
xor
scas
call
jbe
out
ret
cmp
arpl
sti
test
dec
test
les
loop
sbb
jl
sbb
xor
sub
daa
fwait
shr
cltd
and
jne
pushf
mov
lock
mov
popa
or
xor
cmpsb
dec
xor
pop
in
xor
sahf
sub
stos
cmpsb
pop
rcrb
inc
test
add
shl
pop
int
iret
mov
inc
clc
or
push
dec
jmp
int
and
ss
test
and
jb
adc
enter
push
fwait
push
sbb
cmp
loop
or
pop
sub
js
mov
mov
add
cltd
fwait
jns
enter
cmp
jb
imul
sub
daa
lcall
xchg
inc
inc
in
push
adc
jb
add
or
push
xchg
cmp
adc
call
rol
mov
pop
pushf
outsb
mov
push
test
xor
mov
sub
mov
sbb
cmp
adc
jb
sub
mov
cmp
xorl
les
mov
out
rcrb
lock
repnz
shll
adc
xchg
mov
xchg
or
sub
add
call
push
negl
aas
push
push
testl
dec
adcb
daa
jmp
sbb
and
mov
repnz
add
jnp
jp
sti
and
adc
jae
jbe
jge
sub
cmpsl
or
ficoml
ds
xchg
mov
fldl
xor
push
jmp
inc
or
push
dec
scas
and
xor
jbe
adc
ljmp
xchg
test
jb
jecxz
or
stos
sbb
push
pop
ljmp
dec
cmp
xchg
out
fs
dec
dec
aaa
stc
test
xchg
fwait
inc
xor
mov
in
aas
ja
jno
mov
mov
or
xabort
jb
adc
rcrb
insb
ret
dec
and
bound
sbb
sub
and
push
sbb
pushf
stos
pop
adc
cmp
cs
or
arpl
dec
cmpsl
jmp
rolb
sbb
jmp
inc
cltd
test
xor
mov
sarb
jp
push
mov
jmp
cmp
jb
and
cmp
add
hlt
int3
push
push
sub
rclb
ljmp
sti
adc
jae
lds
dec
inc
mov
cmp
out
popa
mov
mov
dec
imul
cmp
dec
repnz
aam
pusha
sti
adc
ret
mov
scas
sbb
jecxz
pop
push
push
cmp
call
out
push
aaa
jg
push
jmp
mov
addr16
stos
add
and
fwait
inc
add
sbbb
mov
mov
xchg
hlt
outsb
xchg
push
pushf
repnz
cmp
inc
xlat
jb
movsl
cltd
pusha
ljmp
repnz
ss
mov
pop
mov
test
mov
popf
add
inc
xor
fbld
test
and
ja
sub
js
push
dec
sarb
pop
add
and
cmp
repnz
repnz
pop
and
push
xor
or
mov
lods
push
xchg
lret
mov
not
fisubl
push
and
test
loop
mov
cld
mov
imul
cltd
xor
inc
jl
push
aaa
aas
jmp
cmp
addb
stos
test
sbb
out
add
popa
imulb
pop
fwait
and
les
sub
and
imul
and
adcl
call
mov
add
inc
in
test
jbe
adc
cmp
cld
mov
stos
cld
sub
mov
xchg
sub
cmp
xchg
je
push
test
xor
clc
add
push
dec
xor
inc
cmp
imul
mov
popf
sub
inc
call
inc
mov
dec
xchg
mov
jne
in
and
add
and
cmp
ret
fisubrs
pop
cltd
inc
fsubrs
sbb
sub
xor
in
gs
push
clc
loop
jmp
stc
push
dec
dec
imul
inc
dec
mov
arpl
xchg
push
mov
mov
stos
arpl
notb
test
fwait
add
adc
jmp
leave
in
dec
fadds
ljmp
xchg
dec
enter
fldt
or
mov
cmp
xchg
xchg
inc
cmpsl
pop
jb
push
xchg
mov
cmp
adc
fwait
lods
popa
je
cmp
add
fsubrl
dec
mov
jae
int
cli
pushf
imul
mov
and
xchg
sub
or
cld
fldt
cmp
cmp
fimull
mov
push
movsb
rcll
sub
push
sbb
clc
frstor
shlb
das
xchg
sahf
pusha
dec
ret
push
shrb
push
aaa
mov
test
mov
jp
jae
hlt
sbb
sbb
bound
loope
ljmp
fnclex
push
sub
ljmp
sub
mov
pushf
push
bound
xor
mov
jp
pop
xlat
inc
sub
add
shlb
xor
sub
repz
hlt
int
push
sbbb
shll
fsub
cmpb
xchg
jecxz
sbb
cli
or
adc
insl
inc
mov
shlb
mov
jo
out
out
dec
mov
addr16
jb
loop
ljmp
add
mov
jb
or
idivb
repz
aas
jo
jnp
and
xor
inc
sbb
xlat
cmpxchg
xor
in
sbb
ja
inc
inc
sub
sbb
xor
xor
mov
xchg
cmp
mov
jo
loop
fdivl
mov
xor
cmp
cmp
add
loop
sub
ret
in
cmpsl
xchg
jmp
pop
push
out
sbb
jb
pusha
and
pop
rcr
add
mov
pusha
das
sub
mov
xor
out
sub
notb
jmp
and
inc
xbegin
sahf
outsl
nop
lret
push
mov
cmp
imul
shl
add
jl
cmp
inc
add
xor
inc
add
imul
loopne
stos
es
daa
sbb
mov
cs
xlat
gs
push
sbb
dec
jae
out
push
push
xchg
lds
jnp
cmp
mov
cmp
ror
mov
test
mov
aas
push
fdivl
ja
or
fwait
lcall
outsl
adc
xor
mov
jmp
shll
xchg
cld
dec
lea
shlb
mov
bound
clc
clc
repz
mov
js
or
fsubl
mov
test
out
cmpsl
rol
add
dec
jns
sub
inc
cld
pusha
cld
lods
cs
pop
push
or
idivb
mov
popf
xchg
cmp
mov
xor
sub
fwait
les
cwtl
mov
rol
adc
lods
xchg
push
or
mov
rol
popa
push
pop
cmpsl
sbb
dec
loopne
iret
push
cli
sub
inc
outsl
fisttps
inc
mov
nop
dec
cld
inc
push
xorl
sbb
ret
inc
pusha
mov
mov
dec
jbe
push
adc
and
hlt
jp
aas
nop
rcl
adc
cld
xchg
or
jp
shll
jp
jp
jnp
inc
lock
jmp
mov
aad
cltd
out
pop
push
imul
ljmp
pop
xchg
jmp
sbb
ljmp
aas
mov
orl
sub
shrl
ds
and
jae
sub
lret
repz
xchg
pop
cltd
adc
pusha
in
cmpsl
or
sbb
stos
pushw
and
pop
xchg
add
imul
lcall
lret
and
test
sbb
fisubl
jo
mov
sub
cmpb
inc
pop
jb
lock
jbe
lret
imul
test
ljmp
inc
mov
cltd
fisubrl
inc
imul
dec
pusha
inc
jmp
shl
sbb
stos
cmp
inc
mov
loopne
push
loop
imul
push
xor
or
bound
ljmp
sbb
push
mov
cli
loop,pn
imul
pop
xor
inc
dec
ss
and
loop
cli
push
or
loop
imul
pop
add
inc
test
nop
loop
or
cmp
mov
subb
pop
push
lock
cmp
fs
and
loop
fisubrs
cmp
imul
imul
or
fs
and
loop
repnz
imul
cmp
mov
mov
lcall
or
push
imul
cmp
sub
leave
ljmp
outsb
mov
sbb
rcrl
sub
in
xchg
cmp
and
sub
mov
inc
sub
sub
jnp
addr16
sub
xchg
fiaddl
lret
jle
sarb
xchg
cli
sbb
lahf
pop
fstps
jl
fidivrl
sbb
jns
pusha
bound
rclb
data16
or
sbb
jnp
dec
and
mov
cli
in
loop
ljmp
ret
pop
dec
sbb
stos
sbb
enter
adc
cmp
jmp
mov
cmp
jb
cmp
dec
push
jmp
xchg
sarb
jae
pop
push
fstpt
lret
xchg
ja
popa
push
jmp
aaa
sbb
call
cmp
mov
pushw
fwait
mov
cmp
mov
pop
insl
mov
bound
push
je
and
pop
stos
jbe
and
sbb
cli
or
xor
or
push
jmp
lcall
jae
lock
loopne
jmp
pop
sahf
cmp
pop
cli
add
divl
or
cmp
pop
push
stc
cmp
scas
push
andb
add
or
pop
imul
pop
mov
lock
mov
cmp
inc
lret
cmp
lret
pop
and
inc
pop
xor
jmp
sub
out
xor
lods
stos
pop
fsubr
jmp
mul
test
mov
jnp
ljmp
pop
inc
jmp
fwait
push
ret
cmp
imul
les
cmp
pop
mov
ds
push
push
jmp
out
mov
mov
inc
mov
xor
loop
jp
pop
out
decb
and
add
mov
add
lret
sti
add
cmp
dec
and
mov
fwait
inc
scas
mov
cld
cmp
or
inc
adc
fisubrl
mov
push
test
xchg
jmp
stos
loop
insb
mov
inc
inc
push
jmp
jg
lock
cmp
push
dec
jmp
inc
sub
insb
cld
cmp
push
lahf
cmp
loop
negb
fwait
and
inc
push
adc
pusha
pop
sbb
pop
cmp
xor
jnp
mov
loopne
jnp
mov
pop
xchg
cmp
inc
stos
dec
ss
outsb
outsb
pop
data16
inc
je
inc
sbb
daa
sub
loop
outsl
mov
imul
cli
add
cmp
mov
or
push
ds
out
ljmp
cmp
je
sti
cmp
jp
lcall
xor
mov
mov
jp
pop
out
popfw
sbb
dec
fcmovb
push
jmp
xorb
jb
daa
inc
jmp
cli
add
push
cmp
int3
lret
xor
jo
loopne
out
jnp
out
lock
push
pop
inc
jmp
dec
push
mov
pop
ja
loop
ficompl
and
imul
cmp
jmp
sbb
hlt
sarb
dec
push
push
push
jg
sti
push
push
fisubs
and
dec
mov
cmp
mov
push
cltd
ja
nop
andb
push
adc
data16
out
out
in
lods
push
loopne
cli
jmp
jge
jle
sub
dec
nop
sub
sbb
dec
sbb
rorb
fildl
scas
cmp
mov
jmp
in
and
in
dec
jmp
sbb
cmp
cld
jmp
sbb
cmp
and
jmp
sub
out
out
inc
dec
push
sti
cmp
mov
mov
add
cmp
in
ficoml
and
test
sub
lock
stos
jmp
mov
cmp
and
lcall
dec
xchg
jmp
js
loopne
lods
mov
pusha
push
sbb
and
cmp
mov
hlt
mov
adc
push
stc
inc
mov
xchg
fisttpll
xor
sub
ret
pusha
mov
hlt
cmp
mov
mov
fisttps
add
cmp
mov
dec
xor
outsl
jo
mov
jecxz
jp
arpl
jo
in
mov
sbb
mov
into
cmp
iret
pop
cmp
insl
mov
call
cmp
test
adc
cmp
add
out
ficompl
fidivl
hlt
cmp
cld
jmp
sbb
lcall
ja
mov
push
hlt
mov
ljmp
ja
loop
outsl
jbe
mull
mov
ljmp
or
mov
dec
jmp
pop
imul
sti
mov
jo
jl,pt
loop
fstps
mov
and
sub
xchg
sti
shrb
sti
inc
jp
imul
lock
cmp
jl
push
nop
sbb
out
and
sbb
mov
xchg
dec
mov
and
xchg
lcall
dec
sub
mov
ss
mov
movd
sbb
cmp
dec
lock
cmp
pop
in
mov
mov
pop
rolb
mov
jmp
cmp
mov
xchg
jp
inc
ficompl
lret
dec
sub
or
mov
mov
push
call
cmp
lret
mov
insb
nop
mov
mov
jnp
je
jns
nop
mov
jmp
sbb
inc
sbb
inc
xchg
jb
adc
push
inc
lret
lret
sub
or
nop
mov
mov
lock
xchg
pop
stos
lock
mov
hlt
insl
push
pop
rcrb
lock
fistpl
jb
mov
repz
fistps
jnp
enter
ss
inc
pusha
jmp
push
jmp
fidivs
pop
cmp
arpl
jmp
sub
scas
mov
dec
jmp
inc
divl
cmp
cltd
push
cmp
jns
cwtl
pusha
pop
out
xor
lea
sbb
mov
add
cmp
pop
inc
push
std
out
lock
enter
sub
jb
dec
jmp
inc
xchg
scas
insb
cld
cmp
or
test
and
insl
mov
mov
adc
sub
ja
jns
jmp
out
mov
jbe
and
mov
adc
jmp
mov
push
js
hlt
xchg
jmp
aas
ljmp
clc
jmp
push
push
imul
inc
push
imul
and
and
jnp
sbb
jbe
dec
jmp
arpl
dec
cmp
dec
stos
jmp
dec
push
sarl
pop
sub
in
dec
fs
mov
jmp
add
pusha
in
jbe
dec
add
cmp
xor
cmp
push
inc
push
push
sub
es
sbb
mov
fdivl
dec
lods
pop
loope
pop
ljmp
add
dec
push
cmp
mov
mov
push
sub
ret
jmp
gs
mov
and
fs
inc
fldl
jbe
jp
jmp
sbb
cmp
and
jmp
sub
mov
sbb
imul
cmp
dec
daa
daa
mov
cmp
mov
sub
inc
outsb
cmp
fidivrs
sbb
cmp
std
pop
mov
cmp
das
push
mov
daa
sti
jmp
cmp
loopne
cmp
cli
neg
and
nop
sbb
cmp
out
and
loop
mov
aaa
lcall
cmp
and
mov
out
mov
mov
pop
adc
pop
sarb
lret
push
test
push
out
ficompl
lcall
test
push
daa
imul
and
cmp
jmp
and
pushf
mov
or
addr16
jle
loope
jg
push
jmp
fidivrs
sbb
push
or
loopne
jnp
dec
cli
dec
cmp
cmp
and
mov
dec
jns
inc
lret
mov
push
pop
mov
ljmp
je
cmp
imul
sub
fdivs
aas
xchg
outsl
pop
out
pop
jmp
mov
fstpt
test
fcmovnbe
cmp
ds
lret
mov
push
dec
pop
and
jnp
sbb
jnp
adc
insl
push
xchg
jmp
js
popa
cmp
jecxz
jmp
subb
lcall
and
stos
outsb
inc
cmp
cmp
push
jmp
fimuls
fisubrl
jmp
dec
fimull
sbb
lret
out
jb
sbb
dec
imul
ss
andb
xlat
cmp
inc
popf
nop
sub
repz
loope
ss
and
popa
sub
mov
addb
stc
movsb
jo
negl
es
aam
add
lods
jo
mov
movsb
test
mov
repnz
test
mov
push
dec
ret
jmp
or
mov
inc
stc
jg
sti
or
cmp
cmp
in
mov
aas
cltd
test
shrb
push
shlb
inc
jmp
outsl
lock
cmp
cmp
loop
fidivrl
mov
lret
sub
cmp
adc
xchg
fisttpll
hlt
cmp
iret
loop
jb
xchg
jle
or
mov
fisubrl
dec
outsl
arpl
mov
or
cmp
push
sbb
jmp
fisttpll
jge
call
imul
sbb
push
jmp
stos
sarb
ret
fwait
push
cli
and
sbb
lcall
dec
push
repz
push
mov
lret
xchg
fwait
lahf
loop
mov
rclb
pusha
arpl
lahf
fimull
and
pop
pop
cld
movsl
ljmp
cmp
insl
pop
xchg
cmp
call
inc
pusha
jno
fs
push
jns
negl
ds
dec
repz
jo
or
lret
cmp
dec
lcall
cmp
jle
jmp
lcall
pop
jb
dec
mov
nop
repz
imul
pop
or
and
fisttpl
xchg
and
stos
out
lahf
push
or
dec
in
ss
mov
out
and
mov
push
lret
pop
out
mov
je
cli
push
movsb
ret
lret
mov
out
jmp
out
bound
gs
fisubl
imul
stc
stos
and
rcrl
xor
cli
imul
mov
jecxz
mov
add
sahf
out
loop
aad
insl
cwtl
and
or
and
test
mov
push
pop
jb
and
lock
pop
inc
cmp
sub
lret
inc
ljmp
lods
loopne
cmp
test
ljmp
lock
fstpt
loop
add
ja
out
shll
insb
mov
push
pop
lcall
loope
sub
in
out
and
popf
or
in
pop
and
cmp
jle
or
pop
inc
cmp
mov
stc
xor
cli
movsb
sbb
mov
dec
push
lds
leave
imul
loopne
and
sarl
imul
neg
pop
js
mov
mov
inc
call
and
in
cli
jmp
xor
or
mov
out
loope
and
clc
push
scas
pop
ja
imul
outsl
inc
xchg
and
les
inc
enter
sub
cmp
cmp
subb
adc
cli
cs
mov
mov
fyl2xp1
inc
mov
arpl
ds
xor
cli
test
ljmp
sbb
lods
xchg
imul
sub
mov
inc
jnp
subb
and
sbbb
pop
jns
xlat
cmp
loopne
es
je
push
sbb
packsswb
jmp
imul
aam
and
push
lock
jge
cli
inc
lret
mov
dec
pop
mov
xor
cmp
loope
push
std
jnp
addr16
test
ljmp
fs
jo
nop
jae
jmp
aaa
jmp
inc
dec
push
push
sbb
cmp
mov
aas
cli
jecxz
adc
cmp
inc
lret
cli
orb
xor
cli
test
ljmp
push
cli
cmp
and
out
loope
fiaddl
loopne
push
cli
cmp
add
fistps
push
loop
adc
pop
jno
fldcw
fidivrs
inc
pop
lcall
and
cli
loop
imul
pop
dec
fnclex
jno
xor
cli
cmp
add
das
cli
or
out
and
push
sbb
ficoml
mov
inc
inc
fdivrp
std
sub
lret
cli
jns
add
out
into
or
xrelease
ljmp
pop
and
loop
ja
insl
cmp
nop
fwait
inc
idiv
std
shlb
jp
sbb
lea
push
es
in
pop
cli
jmp
cmp
and
mov
xor
cli
lods
mov
jp
inc
sub
std
loopne
sbb
pop
or
cmp
es
in
cmp
pop
cli
jmp
or
push
clc
adc
xor
xor
cli
movsb
lcall
cli
jle
adc
pop
dec
jp
ljmp
xor
cli
movsb
or
mov
lds
and
out
imul
mov
inc
and
loop
push
cld
daa
sub
jae
dec
cmp
pop
cli
loop
fstpt
repz
add
dec
mov
sarb
dec
int3
out
movsl
xor
cli
test
mov
cli
cmp
mov
pop
inc
mov
mov
push
pop
cmp
cmp
and
insl
mov
mov
sbb
dec
jnp
insl
push
pusha
dec
mov
jo
push
cmp
sbb
push
cltd
dec
sbb
leave
dec
push
fistpl
jp
pop
cmp
sub
sbb
mov
aam
cmp
ss
lcall
push
sbb
sub
or
fwait
adcb
pop
out
push
popa
cmp
mov
sbb
imul
loop
mov
ljmp
pusha
push
pusha
out
fnstsw
repnz
stc
mul
lcall
out
mov
xor
jo
jnp
imul
mov
jecxz
inc
hlt
mov
popf
adc
dec
test
pop
clc
dec
jp
ja
loop
and
adc
in
jbe
lcall
mov
inc
lret
jl
dec
mov
inc
push
adc
push
ljmp
and
mov
cmp
cmp
fdivrp
in
add
addb
dec
and
mov
adc
cmp
push
mov
inc
loop
jmp
inc
dec
mov
lret
jl
mulb
cmp
add
fmulp
jmp
xor
and
sahf
inc
mov
dec
fisubrs
inc
pop
pop
stc
cmpsl
stos
jmp
lret
out
mov
jecxz
bound
call
push
stos
sbb
sub
stos
gs
cmp
loopne
pop
cmp
pusha
or
cltd
add
jp
pusha
fwait
mov
fs
inc
sbbl
push
add
and
xchg
pop
lock
mov
or
or
lock
loop
cmp
fisubrl
lret
inc
jg
les
jnp
jo
stos
add
jmp
adc
mov
jle
lcall
decb
mov
mov
jp
incb
dec
pop
test
fs
imul
fistpl
sti
cli
inc
jge
sar
mov
mov
sbb
jo
push
nop
hlt
jae
or
push
dec
pop
dec
ds
les
jns
or
ror
int3
mov
pusha
cmpsb
in
jle
sahf
mov
bound
sub
and
dec
in
mov
aas
imul
and
or
sbb
sti
and
jnp
aas
push
dec
stos
sbb
lret
add
pop
mov
xchg
fildl
jg
push
xchg
fimuls
lahf
mov
pop
mov
sub
add
xlat
sub
pop
cli
dec
mov
fwait
dec
jnp
pop
inc
aas
xor
fildll
ljmp
jnp
data16
mov
jnp
sbb
add
push
jnp
popf
fmull
notb
jnp
jnp
fwait
arpl
mov
stos
mov
mov
not
inc
inc
jnp,pn
adc
cwtl
mov
push
xor
es
sbb
sbb
mov
xor
aaa
nop
fisubrl
jnp
xchg
je
stos
shl
lahf
adc
pop
bound
daa
movntps
fisubl
sbb
pop
int
push
mov
cmp
xor
ljmp
pop
sub
fidivrs
jmp
bound
popa
sub
add
scas
adc
jmp
fisubrs
subb
or
dec
or
xor
ja
pop
push
jnp
add
mov
pop
jb
pop
mov
jecxz
hlt
enter
cmp
stos
jb
pop
sbb
pop
push
jg
adc
pop
lock
mov
into
fiadds
sub
cs
lret
addr16
jnp
dec
xor
fistps
fistps
jp
and
hlt
es
cli
aad
andb
add
cmp
push
sub
or
jnp
pop
sbb
dec
mov
add
push
cmp
inc
sub
inc
fwait
test
es
add
stc
push
aaa
xchg
stos
pop
outsb
shlb
cmc
and
mov
pop
lret
mov
jmp
and
and
outsl
int3
lret
cli
sub
cmp
and
mov
fstps
dec
pusha
dec
mov
cs
mov
jle
gs
mov
add
xor
out
aas
dec
inc
cmpsl
mov
jbe
mov
aaa
sbb
mov
dec
mov
mov
icebp
clc
es
fwait
sub
movsb
daa
xor
xor
sub
aaa
loopne
cli
jnp
stos
pop
lcall
sbb
ret
ss
cmc
js
mov
dec
jnp
xor
test
in
ljmp
push
das
cli
inc
add
push
out
or
adc
dec
test
stos
aas
sbb
xor
jns
jb
mov
push
adc
ss
jnp
sub
ljmp
cmpsb
aas
ljmp
nop
ss
es
ljmp
and
pop
mov
sbb
fcoms
jnp,pn
adc
add
arpl
lods
pop
xlat
xor
jb
push
mov
add
cmpsl
idivl
mov
sub
mov
sub
fldcw
icebp
sbb
shr
dec
hlt
push
je
imul
jnp
sbb
fisubl
outsl
jmp
dec
or
xor
pop
jp
shrl
ret
out
dec
mov
dec
xor
imul
jbe
xchg
fidivl
dec
sub
cmp
scas
and
xcrypt-ofb
cmpsl
scas
mov
sub
mov
add
lea
clc
adc
aaa
fwait
cli
ja
push
and
and
outsl
dec
repnz
bound
push
xlat
jmp
lock
test
icebp
mov
jge
cmp
mov
mov
inc
bound
mov
lcall
mov
cmp
xchg
mov
movsb
jnp
test
sub
mov
test
loopne
push
jnp
adc
fisubrl
xchg
out
mov
nop
push
loop
je
mov
lret
xchg
and
cmpsb
jecxz
jae
push
daa
xchg
fdivrs
ja
iret
jo
push
stc
pop
dec
adc
daa
mov
mov
cltd
iret
shl
sub
add
add
sbb
sbb
ds
push
sbb
mov
imul
xlat
mov
sub
loop
push
xor
push
sub
push
cmp
dec
nop
and
adc
lret
orb
pop
push
mov
cmp
call
sbb
outsb
ds
cmp
fcmovbe
add
aad
test
lret
mov
jae
jmp
les
sbb
repnz
or
add
fistpl
ss
push
jge
add
outsb
jnp
sub
stos
fwait
les
stos
mov
cs
stos
je
push
add
scas
jecxz
mov
imul
lret
xchg
inc
out
rol
push
stos
push
sub
xchg
daa
lret
pop
xchg
lret
sbb
or
xor
loopne
jmp
aas
test
inc
repnz
addr16
jns
aas
rcr
mov
mov
xchg
mov
mov
shll
in
loopne
sbb
jnp
and
dec
jmp
jmp
xchg
ret
jo
loope
sti
repnz
fnstcw
lret
shrb
shrb
mov
add
imul
jge
daa
xor
cmpsb
sbb
sbb
into
cmpsl
mov
stc
div
cmp
adc
daa
insl
cmc
ljmp
addr16
sbb
mov
sbb
sub
mov
outsb
jnp
push
aas
xchg
in
pop
lret
mov
inc
lods
and
adc
iret
cmpsl
jecxz
scas
inc
lcall
ss
push
ret
sbb
and
ret
arpl
or
lods
fimull
and
add
add
jge
sub
or
out
sbb
ljmp
imul
fimuls
nop
mov
insl
pop
mov
addr16
lret
je
lcall
stos
hlt
data16
xor
lea
mov
jns
inc
js
sub
outsb
lcall
imulb
mov
cltd
mov
aas
pop
xor
push
loope
fwait
jecxz
aas
push
sbb
shl
dec
out
jmp
jecxz
inc
cmp
or
mov
cmp
mov
imul
adc
cmp
int
add
cmp
dec
mov
imul
lret
aas
loope
arpl
and
into
sbb
cmpsl
mov
pop
lcall
arpl
sbb
data16
mov
pop
mov
pop
jmp
ljmp
imul
rcr
iret
mov
lea
or
data16
push
movsb
out
icebp
xlat
mov
out
pop
pop
popf
push
andb
pop
push
fs
shrl
cmp
bound
push
and
cli
mov
lcall
inc
out
sub
or
sbb
jmp
test
sub
push
lret
mov
test
sahf
lcall
jno
cli
cli
sub
pop
mov
add
imul
mov
aas
arpl
iret
sub
mov
sub
sahf
add
push
filds
outsb
inc
lcall
add
mov
test
cli
lds
dec
ror
sti
jae
adc
cmp
sahf
outsl
pop
sub
xchg
pop
das
fwait
lcall
inc
lcall
shlb
jecxz
xor
stos
cwtl
inc
in
and
sbb
push
sahf
bound
cmp
push
lcall
shlb
sti
sahf
sbb
sti
and
lret
clc
mov
data16
dec
scas
or
push
movsl
cwtl
dec
jae
stos
cmp
sbb
and
imul
jecxz
ljmp
mov
mov
xchg
mov
and
hlt
movsb
cmpsb
ficomps
ret
test
lret
pop
lcall
and
aaa
or
mov
lcall
and
push
lret
ljmp
inc
push
ljmp
outsl
hlt
bound
cli
outsl
pop
jecxz
dec
js
scas
mov
mov
dec
mov
add
repz
push
out
xor
mov
mov
je
pushf
jg
adc
dec
mov
sti
mov
lahf
bound
mov
imul
arpl
sbbb
or
mov
xor
enter
sbb
fistpl
inc
jae
or
and
inc
int3
cmp
pop
push
dec
sbb
out
inc
xchg
repz
pusha
insl
data16
imul
jp
bound
lods
jle
call
jmp
outsl
outsl
out
dec
lret
sbb
mov
and
pop
jl
sub
jnp
mov
sbb
icebp
xorb
sbb
sbb
jbe
dec
mov
and
arpl
xchg
sbb
inc
mov
add
inc
adc
fiaddl
dec
mov
inc
add
lcall
fists
outsl
push
cmp
or
xchg
or
ljmp
add
int
repz
mov
pop
inc
dec
pusha
cmp
stc
or
out
aaa
fildl
mov
and
out
jns
sub
mov
mov
fstpl
xchg
lods
fsubrp
imul
xor
and
or
and
pop
mov
add
lcall
test
mov
rolb
mov
ficoml
push
lds
pop
aam
in
sbb
sbb
mov
inc
push
ja
sti
dec
sub
pop
or
movsb
cli
dec
and
das
cmpsl
xor
mov
arpl
and
jecxz
stos
pop
outsb
ljmp
push
inc
clc
ljmp
ficoml
dec
sub
lcall
jg
pop
rcrl
sbb
clc
pusha
fiaddl
mov
cmpsl
mov
add
negl
jmp
jo
outsl
sbb
adcl
aad
push
mov
pusha
xor
or
ljmp
sub
mov
jmp
push
add
lcall
mov
pop
outsl
add
addr16
mov
fisttpll
inc
xor
dec
add
stos
js
fimull
inc
lcall
mov
adc
pop
fcomp
pop
cmp
bound
lcall
mov
imul
ret
xor
xor
xchg
loopne
lret
jmp
aas
rsqrtps
clc
stos
jl
ror
pop
lods
sub
in
fs
insb
fsubl
mov
fisubl
push
and
lcall
adc
adc
rep
arpl
dec
dec
sbb
outsl
les
lret
xor
push
push
fcmovnu
and
mov
dec
arpl
dec
and
dec
ljmp
inc
sbb
ror
cmpl
cmp
ljmp
insb
sub
icebp
fimuls
das
out
push
sub
mov
imul
sbb
jp
xor
imul
sahf
rorb
pop
dec
filds
fs
cmp
rcrb
add
stos
rcr
mov
leave
inc
loop
and
xchg
or
xor
clc
mov
lods
div
in
cmp
push
movsl
push
imul
push
lcall
push
imul
jae
jg
cs
or
lcall
pop
sub
into
sub
mov
mov
pop
xor
sub
sti
add
or
sub
xor
sub
outsl
or
ss
rol
in
or
xlat
xchg
mov
fidivl
fldenv
or
nop
ficomps
ljmp
in
shrb
pop
vmulsd
data16
push
inc
pusha
lcall
aaa
in
cmp
cmp
in
xchg
out
sbb
shrb
or
add
aam
imul
xor
lret
sahf
add
es
sbb
and
es
imul
mov
pop
pop
mov
add
mov
push
dec
mov
add
jmp
lock
rcr
shrb
push
jb
movsb
dec
mov
xlat
mov
mov
and
call
or
loopne,pn
insl
fwait
xor
inc
sti
dec
mov
fwait
and
pop
dec
pop
gs
sub
aam
vmread
mov
jecxz
adc
bound
sub
daa
outsl
mov
cmp
jnp
dec
and
ljmp
mov
lcall
aas
aas
into
adc
lcall
mov
bound
les
ret
cmpsb
or
adc
scas
lods
fildl
xor
push
dec
jg
jp
mov
stos
add
add
fmull
sub
adc
add
call
push
mov
mov
mov
out
insl
shl
dec
fwait
stos
lock
or
repz
adc
fldenv
push
sbb
jnp
inc
sub
mov
xchg
fidivl
pusha
and
fmul
jecxz
mov
dec
push
pop
ret
test
inc
adc
sbb
mov
inc
xor
mov
into
pusha
push
dec
inc
pop
cli
xor
dec
and
dec
mov
jns
add
add
xor
loope
dec
lret
push
ss
dec
adc
sub
pop
cmp
idiv
cs
mov
cmp
sub
sbb
imul
je
add
sub
jmp
pop
stos
inc
std
cmpsb
xchg
jae
aas
jo
or
push
add
add
mov
dec
cmp
dec
jg
movsb
fwait
repnz
iret
inc
push
addr16
rcl
sub
fisubrs
sti
jnp
sbb
add
xor
inc
ss
inc
jnp
jmp
arpl
je
lret
jg
mov
mov
in
pop
loopne
mov
stc
mov
mov
jmp
mov
fidivrs
adc
test
dec
in
shll
pop
clc
lock
cmpsb
dec
imul
rcll
mov
add
addr16
mov
lds
js
mov
lahf
mov
sbb
imul
push
mov
push
or
cmp
lret
cmpsl
jno
push
mov
or
jnp
inc
xlat
sbb
daa
cmpl
arpl
mov
xor
and
mov
push
es
mov
lcall
in
xchg
hlt
jmp
sbb
outsl
popf
insl
lret
lea
mov
shrl
cmp
push
loopne
mov
loopne
cmp
add
push
imul
push
xor
adc
and
in
daa
inc
inc
ja
pop
jae
insl
sub
fildll
in
aas
sahf
cli
or
sbb
dec
push
inc
std
mov
aad
pop
mov
stos
inc
add
and
dec
push
and
pusha
lcall
dec
stos
push
and
sbb
cmp
cmp
adc
mov
faddp
jle
xchg
or
in
adc
lahf
imul
or
push
jo
nop
fnstenv
pop
pop
rclb
std
sub
mov
fcompl
lret
xor
fwait
mov
fabs
jo
insb
sub
push
aas
sbb
sub
leave
or
jmp
call
pop
je
push
fidivs
std
cld
shl
jge
sub
lret
loope
stos
cs
call
ficoml
les
mov
cli
sarb
pop
pop
fwait
mov
dec
out
stos
mov
imul
xchg
mov
sub
push
ds
lret
loopne
mov
js
mov
popf
pushf
lret
pushf
inc
mov
xchg
ret
arpl
add
dec
jecxz
cld
rol
dec
dec
fwait
push
sbb
test
inc
sbb
ljmp
das
cmp
xorl
into
ror
add
sbb
pusha
mov
or
lock
cmp
loop
cmp
add
dec
cmp
cmpl
js
add
mov
imulb
pop
push
pop
or
cmp
test
cli
in
xchg
dec
cli
sub
jno
cli
cmp
push
ret
sbb
jb
or
in
mov
mov
mov
xor
lret
imul
pop
sub
sub
cmp
hlt
add
ljmp
fcmovbe
mov
cmpsl
push
fsub
pop
sub
nop
fstps
cmp
stc
push
mov
and
dec
sahf
addr16
into
and
in
lret
add
jle
fwait
lcall
aam
jg
pop
and
sub
pop
stos
push
or
inc
loop
mov
fisubrs
inc
lcall
mov
mov
pop
dec
mov
fwait
xor
loopne
pusha
cli
fidivl
lock
xor
and
xor
inc
sub
push
cmp
int
add
fiaddl
sahf
mov
jae
mov
dec
out
jecxz
push
add
test
xchg
cld
fcmove
mov
dec
loop
add
dec
xchg
pop
sub
fwait
roll
lock
lcall
fsubrp
pop
leave
jne
mov
add
jae
and
xor
sub
stos
ljmp
lcall
lcall
mov
arpl
mov
or
xor
je
jl
fisubrs
mov
push
icebp
jecxz
and
and
je
aas
sbb
mov
cmp
jns
jo
pop
sbb
jmp
jnp
push
out
add
out
stc
or
data16
mov
add
stos
je
add
scas
loop
daa
lret
xchg
sub
aas
aaa
imul
imul
fwait
xor
adc
jnp
sbb
sti
je
jbe
add
movsl
sbb
shl
je
dec
dec
push
jmp
arpl
test
mov
sbb
ficoms
add
mov
sbb
xor
dec
jmp
mov
lret
pop
inc
pop
and
cmp
out
movsb
mov
adc
sub
lahf
cwtl
adc
test
sbb
outsb
es
cmp
shlb
jo
push
fbld
cmp
cli
loop
stos
xor
in
add
sub
ds
into
pop
or
sub
pusha
dec
fildl
and
inc
push
xor
or
xor
fidivrs
jecxz
mov
adc
cli
cmp
mov
nop
ss
fxch
mov
mov
test
mov
mov
out
or
and
xor
arpl
insl
lcall
add
out
scas
sbb
lret
or
loopne
cmc
mov
mov
mov
fsubp
dec
mov
lret
loope
ljmp
jmp
mov
lcall
add
ds
push
fisubrl
cmpsl
out
mov
jmp
fwait
push
xorb
xor
shlb
flds
jno
or
dec
ljmp
sbb
sub
idivl
fprem
and
fsubrp
adc
cmp
loopne
loop
jo
int
sub
orb
dec
dec
cmp
mov
cmp
jp
mov
add
xor
dec
idivb
lret
lret
mov
cmp
fldcw
adc
jecxz
mov
sahf
cli
mov
fs
and
dec
scas
sahf
cmp
outsb
push
daa
repnz
stos
sti
cmp
push
data16
sbb
sub
ljmp
into
pop
cmp
negb
mov
mov
jp
mov
dec
push
fisubs
and
inc
inc
in
stos
imul
data16
loopne
pushl
das
ss
loop
cmp
pop
ficoms
inc
in
dec
xchg
inc
sub
lock
inc
icebp
push
sarb
nop
dec
je
ret
sub
js
out
and
inc
push
bound
jmp
sarb
out
cmp
inc
out
cli
sti
inc
imul
cld
ljmp
cmp
and
add
bound
adcb
cmp
loop
fwait
xchg
shl
cli
inc
lret
or
imul
xchg
hlt
jle
cli
imul
ret
dec
cmp
cmp
aaa
cli
loopne
push
sbb
out
aas
scas
sarl
sbb
or
fisubrl
es
mov
leave
xor
sbb
or
inc
mov
sbb
fidivl
mov
imul
arpl
sub
mov
out
push
jmp
xor
fcmovne
shrb
loop
loop
pop
xor
inc
cli
arpl
sub
sbb
lahf
inc
inc
fidivs
jo
jns
insl
lock
inc
leave
inc
add
or
mov
lcall
push
mov
pause
scas
lods
data16
jg
lret
cmp
push
xchg
jb
add
jo
add
aam
jg
lock
xchg
inc
mov
mov
adc
inc
mov
repz
test
bound
cmp
inc
cmp
outsl
imul
adc
and
push
inc
cmp
fdivrp
push
dec
xlat
pushf
cld
ljmp
icebp
lods
dec
loop
pop
out
push
push
adc
sbbb
lock
stos
fwait
mov
es
fsubrs
lock
or
imul
add
inc
dec
fidivrs
cmp
or
sub
out
inc
pop
loop
bound
push
mov
rolb
lret
mov
push
sbb
lcall
fucomi
ret
loopne
mov
jnp
mov
dec
bound
mov
dec
and
fstps
sbb
lret
repnz
pop
mov
cmpsl
cli
cmp
ret
xchg
ljmp
mov
jp
sub
aas
es
cli
sbb
push
lcall
or
loope
jmp
or
cmpsl
inc
adc
inc
adc
sbb
and
jp
inc
jo
dec
dec
loopne
lret
and
inc
cmp
mov
jnp
cmp
lcall
call
into
pusha
ficompl
test
das
jecxz
call
jmp
fcoml
lret
mov
aaa
push
ror
mov
sbbb
pop
jo
das
aaa
jl
sub
cmp
push
call
mov
imul
xor
xor
jmp
mov
cmpsb
nop
sbb
cmpsl
mov
xor
jnp
fstps
push
fsincos
cs
fwait
jecxz
lock
jo
cmp
rclb
jecxz
cs
sbb
add
adc
fimuls
clc
xchg
addr16
ss
lock
imul
dec
and
adc
loopne
pushf
out
addb
lcall
sbb
stos
es
negb
push
ficomps
mov
daa
mov
pop
stos
in
mov
sbb
and
mov
hlt
aaa
xorb
cli
in
mov
fwait
sub
dec
push
mov
sahf
loope
jne
fimull
sbb
and
popa
cmpsl
cmpsl
mov
stos
mov
test
mov
mov
subl
fwait
lret
push
test
jnp
dec
xchg
mov
fistps
sub
mov
test
push
jecxz
xorb
add
or
inc
add
loopne
sbb
xchg
adc
into
popa
sahf
xchg
or
bound
test
mov
cltd
mov
scas
push
push
cmp
stc
dec
pop
xor
push
mov
sub
push
mov
pop
dec
dec
pop
shlb
jbe
sub
sahf
jnp
lock
pop
jg
data16
pop
add
lock
jo
mov
adc
inc
jb
stc
and
cmpsl
sub
stos
mov
jbe
xor
mov
jmp
jecxz
xor
fidivrs
inc
in
stos
and
xchg
cli
fiadds
xchg
cmp
mov
lret
idiv
addr16
mov
inc
pop
mov
imul
xchg
sbb
jmp
xorl
cltd
pop
or
mov
loopne
push
jno
push
or
fwait
jno
xor
mov
sub
and
test
pop
cmp
sub
cs
inc
fldcw
movsl
jo
jp
jo
pop
push
xor
lret
jmp
xlat
mov
stos
cmp
sbb
push
sbb
pop
jle
leave
cmpsl
fs
frstor
shl
jecxz
stos
ficomps
incb
jecxz
fiadds
cmp
add
movb
cmp
decb
fisubrs
pusha
dec
decb
pusha
loopne
shlb
lret
dec
cli
jnp
sub
movntq
repnz
add
stos
lock
ret
mov
push
jnp
mov
xor
ljmp
mov
leave
sub
insb
jns
sbb
lret
push
sbb
movsb
jle
sbb
fidivrs
std
aad
out
sub
inc
nop
lcall
lods
test
inc
push
jb
pusha
sub
mov
push
sub
imulb
or
fbld
and
arpl
sub
lods
dec
outsl
ret
inc
ss
add
sbb
sbb
repnz
sub
insb
sub
xor
mov
cs
xlat
out
sbb
insb
insb
jle
cmp
dec
adc
pop
push
jns
out
lahf
cmp
test
imul
ljmp
mov
xor
lret
into
cli
es
inc
dec
out
pusha
sbb
jo
fs
push
mov
mov
lcall
inc
cmpsl
inc
fwait
add
pop
or
stos
js
lcall
lahf
nop
rclb
rclb
or
jmp
mov
xor
or
lret
sbb
cli
sbb
fimull
mov
fnstcw
rorb
sub
outsl
cli
mov
outsb
cmp
in
cli
leave
add
cli
ss
and
pop
mov
fildl
imul
fimull
mov
rcrb
xor
fs
lcall
stos
add
nop
mov
pop
inc
mov
pop
sbb
mov
mov
lcall
nop
jmp
pop
cli
cmp
mov
cs
dec
aaa
or
pop
push
cltd
cmp
fwait
pop
sub
dec
cmp
mov
daa
mov
aad
incb
lcall
nop
xor
sub
leave
shrb
out
and
andl
sti
mov
loop
pop
mov
cmpsb
enter
jp
arpl
lcall
bound
or
pop
push
lcall
dec
push
jg
imul
lret
std
fwait
call
push
andl
push
pop
cmpsb
xchg
jmp
xor
jmp
les
dec
lcall
stc
out
push
sub
dec
pop
push
ja
inc
mov
mov
mov
mov
mov
dec
cmp
sub
fwait
cmp
les
fwait
jno
mov
jge
and
sbb
jnp
mov
lret
cmp
mov
aam
inc
lds
pop
mov
stos
lret
fwait
repz
and
je
ficoms
lret
and
pop
and
bound
stos
push
or
pop
pop
sbb
stc
mov
sbb
std
fimull
dec
cmc
and
xchg
push
jg
sub
mov
push
cmp
popf
xchg
cmp
jp
mov
jmp
lock
cmpsb
test
repnz
scas
jmp
jg
pushf
mov
aam
or
push
pushf
fwait
cmpsl
mov
mov
xor
add
cmp
xor
lcall
arpl
sub
jg
sub
mov
add
andb
or
push
shl
mov
rcl
or
ret
fmul
test
pop
lret
shlb
addb
push
icebp
mov
dec
ficompl
rclb
cmpsl
test
test
xor
lret
cmp
inc
jp
repnz
repz
mov
sub
mov
xor
in
dec
repnz
out
sti
pop
xor
sub
sarb
cmpb
mov
popl
pop
into
push
sti
cmp
adc
mulb
mov
and
adc
add
cmp
lock
fstpt
pop
inc
es
ja
xor
imul
fiadds
cli
inc
pop
mov
addr16
nop
inc
lcall
jg
sub
aad
mov
cmp
or
adc
mov
lods
call
pop
mov
jnp
lret
add
cmp
inc
or
sub
add
stos
mulb
fs
inc
fimuls
fsubrp
xchg
stos
mov
add
push
ds
jnp
sub
gs
into
sub
cli
fsts
test
js
jmp
mov
sbb
fisubrs
add
shlb
dec
in
jns
xchg
arpl
sub
loopne
pop
jnp
ja
sub
sbb
mov
popf
fwait
push
ror
vcvtsi2ssl
sbbl
sbb
imull
clc
popf
xor
repnz
ret
mov
test
jle
add
stc
mov
inc
inc
mov
or
mov
add
fwait
mov
das
pushf
xorb
fwait
sbb
lret
and
fwait
push
and
mov
cwtl
into
das
dec
pop
mov
lcall
cli
inc
pusha
jnp
arpl
sahf
mov
inc
lcall
call
arpl
nop
xor
insb
mov
daa
stos
sub
negb
sub
jns
adc
or
mov
shrl
cli
xor
cltd
push
or
dec
pop
cmp
jb
nop
mov
into
imul
pop
mov
sub
dec
fwait
sahf
stos
ds
jno
sub
cltd
sahf
pop
pusha
popf
ds
inc
rcrb
sub
jmp
sahf
mov
pusha
or
sbb
movsl
jg
xchg
mov
mov
add
sahf
pop
mov
nop
xchg
and
stos
enter
fimull
inc
movsl
push
mov
xchg
inc
jecxz
stos
shrb
test
xchg
leave
nop
sub
add
mov
lcall
dec
fbld
xchg
in
lret
out
lret
mov
stos
mov
xchg
mov
push
shl
mov
add
sub
adc
xlat
pop
mov
rcrb
mov
add
sub
sbb
test
loop
mov
and
cmp
xchg
push
and
xchg
cmpb
fwait
stos
scas
inc
lret
fcomip
or
mov
sti
add
sbb
cmp
mov
lds
sbb
fidivrs
in
mov
pop
out
add
mov
dec
or
fisubl
mov
shrb
lods
loop
dec
ret
dec
jmp
cmpsl
fistps
mov
lcall
sbb
stc
outsb
jbe
xchg
sub
pop
mov
fsubl
mov
lret
pop
aam
sahf
pop
dec
push
pop
fidivl
cli
xor
mov
sbb
xor
xchg
inc
rcr
stos
pop
jle
popa
test
jns
jo
fs
sbb
dec
dec
pop
xchg
pop
xor
or
sti
push
add
ljmp
stos
fisubrs
in
push
imul
mov
add
dec
dec
mov
adc
aam
outsl
mov
cmp
ja
fisubrl
cmpsb
push
stos
push
arpl
stos
scas
sbb
add
jecxz
lret
imul
ljmp
mov
xor
lret
dec
cltd
xchg
repz
dec
lcall
fstpt
jnp
test
xchg
fistl
insb
lcall
inc
ss
shl
pop
jg
lock
imul
adc
jnp
adc
ja
xchg
cmp
insb
in
sub
imul
mov
faddp
dec
ret
sbb
mov
mov
jmp
mov
mov
push
adc
xor
negb
inc
jge
mov
mulb
cmp
lret
repz
cmpsl
mov
lock
xchg
enter
xchg
cmp
and
mov
hlt
movsl
sbb
mov
cmp
cmp
pop
pusha
es
rorb
ficompl
sbb
push
lcall
adc
ret
fidivrl
fwait
loopne
and
xchg
into
pop
arpl
cmp
imul
push
dec
xor
pop
cmpb
xor
fwait
arpl
add
ljmp
sbb
cmp
stos
outsl
lcall
fcomp
xchg
xor
sub
mov
cmp
jo
push
in
xchg
out
repz
lea
aad
loopne
imul
mov
js
cmpsl
das
and
adc
inc
mov
rcrb
scas
mov
ja
push
push
out
dec
sarb
scas
loopne
sahf
jg
shlb
cs
ja
inc
mov
pop
xor
mov
into
outsl
lock
rcl
es
testb
mov
cltd
jne
outsb
jcxz
ficoml
aam
ja
xchg
into
fwait
movsl
int3
ficompl
shrl
out
sbb
imul
lcall
xlat
inc
fwait
xchg
xchg
je
addr16
sahf
pop
adc
ja
push
cmc
jae
push
lret
nop
xor
push
mov
out
pop
sub
je
mov
adc
and
dec
cmpsb
arpl
mov
out
xor
jmp
pop
mov
rcrb
push
std
cli
popa
sub
adc
stos
jg
mov
cmp
push
lcall
xchg
add
inc
lea
ffree
loope
and
add
mov
out
pop
ljmp
mov
addr16
xlat
arpl
repnz
push
aaa
es
cmp
scas
daa
xlat
ja
out
ficomps
loopne
icebp
pop
cmpsl
jmp
mov
sbb
cmpsb
cmp
popf
imull
mov
lret
dec
add
sbb
push
out
movsl
pushf
and
mov
adc
cli
ljmp
or
call
lds
sub
cmp
ret
aaa
in
out
outsl
mov
dec
lods
repz
cmp
arpl
inc
or
sub
sbb
xor
int3
sbb
cmp
push
mov
push
mov
ret
movb
jmp
andl
jo
xor
or
std
call
or
add
push
inc
les
jle
jmp
arpl
inc
imul
mov
ret
inc
adc
and
nop
aas
sub
xor
repnz
mov
mov
push
adc
pop
pop
addr16
lahf
dec
subb
pop
out
push
inc
ret
sti
stos
mov
ret
sub
out
pushf
sbb
ret
inc
or
xchg
lret
mov
push
out
cmp
fwait
fwait
and
xchg
inc
add
mov
decb
mov
push
pop
dec
ja
dec
in
adc
jb
pop
clc
mov
adc
aam
xor
sbb
js
cli
inc
add
fcoml
arpl
xor
push
iret
xor
push
mov
cmp
xor
sbb
fwait
stos
jg
rclb
mov
lret
arpl
lea
fst
clc
ret
and
mov
xlat
hlt
push
inc
aaa
mov
popf
dec
push
cwtl
and
xchg
cmp
mov
out
call
rolb
xchg
cli
jo
adc
call
les
into
enter
enter
das
cmp
or
movsl
aas
inc
hlt
mov
daa
mov
and
mov
fists
int
pop
lcall
adc
push
notb
mov
jmp
cmp
or
mov
cmp
testl
xor
aas
cmpsl
fwait
ljmp
shlb
fidivrl
inc
mov
loope
fldenv
push
inc
imul
lret
ret
cltd
xor
xchg
pushf
orl
add
jo
js
fdivrs
jno
xchg
sbb
cmpsl
inc
test
or
add
ret
clc
xor
adc
inc
popa
adc
lock
inc
cmc
je
push
jae
mov
jecxz
stos
dec
mov
inc
dec
fistps
add
stos
out
mov
push
mov
cmp
and
push
fistpl
pop
and
cmp
out
mov
xchg
iret
push
add
jmp
loope
sbb
lock
fldl
sbb
test
or
pop
imul
orl
stos
jns
test
lock
ss
jmp
sahf
iret
ljmp
add
jnp
shlb
js
xchg
and
nop
adc
mov
outsl
stc
hlt
sub
inc
inc
jnp
mov
daa
jns
xor
icebp
mov
fimull
mov
xor
xor
out
mov
sub
ljmp
out
lock
mov
cmp
inc
addr16
xor
xchg
cmpsl
and
mov
cmp
in
jo
mov
addr16
arpl
out
ljmp
lods
adc
xlat
adc
fstps
adc
mov
insb
adc
test
lret
or
or
imul
shll
mov
pop
sub
shl
setnp
rorb
jecxz
fsubrl
test
and
sbb
arpl
or
xchg
in
int3
loop
jmp
imul
pop
scas
lods
pop
push
fmull
dec
fstl
cmpsl
aam
jbe
or
add
packssdw
push
test
adc
inc
loopne
add
sub
aas
inc
into
jge
ja
push
and
mov
and
je
outsl
inc
pop
aaa
imul
stos
sbb
mov
iret
add
lcall
ss
xchg
fimuls
ljmp
out
lcall
sub
clc
mov
xchg
mov
out
ljmp
movl
add
pop
mov
leave
xor
sti
pop
jmp
mov
leave
mov
fldenv
inc
adc
mov
in
arpl
add
inc
popa
adc
cmp
or
popa
adc
mov
mov
xor
and
scas
mov
idivl
aas
outsl
out
ret
imul
mov
or
loop
das
mov
jl
stos
aas
out
push
call
pop
lret
jns
and
jp
fwait
xor
sarl
mov
loop
push
or
mov
adc
js
inc
test
popa
mov
ss
push
or
imul
or
popf
and
ret
mov
pop
rcrl
dec
mov
mov
rcrb
mov
inc
push
pop
xchg
mov
push
pop
mov
push
dec
adc
jecxz
arpl
ljmp
mov
lcall
sarl
shrl
push
xchg
es
adc
fldcw
sarl
iret
mov
ret
jno
rorb
mov
mov
mov
dec
cmp
cmp
cmp
push
repnz
pusha
xor
mov
sbb
push
and
add
xor
cmpsl
and
stos
jle
sub
dec
fwait
subl
jns
imul
aas
mov
or
mov
out
sub
out
pop
testl
mov
mov
fiadds
or
dec
and
jae
and
aad
cmp
psrlw
fwait
sarb
mov
lea
ret
and
ss
pop
sbb
pop
out
fisubrs
lods
sbb
jecxz
lcall
mov
and
fucomip
into
movsb
mov
sub
mov
mulb
xor
dec
push
xor
mov
add
sub
cld
xor
lahf
cmp
stos
sub
into
sub
cwtl
jp
adc
dec
mov
out
add
inc
jg
mov
sub
jg
out
push
ret
in
mov
push
clc
mov
test
sub
ret
fimull
shr
lock
inc
shl
xor
add
imul
cmp
mov
test
aaa
push
mov
lret
out
ss
jg
push
hlt
sub
cmpb
scas
xor
out
cmp
movsl
shll
push
jp
mov
das
jecxz
shl
add
mov
out
imull
in
mov
xlat
daa
fidivl
push
iret
and
inc
cs
mov
into
inc
mov
imul
mov
pusha
hlt
xchg
mov
jg
shlb
ds
incl
xor
cwtl
add
inc
fstpl
inc
psllq
ret
pop
rorl
fwait
dec
loop
faddl
test
sub
inc
inc
mov
ljmp
pop
imul
test
add
loop
xor
repnz
lock
ds
jmp
mov
aam
cmp
inc
sarb
inc
pop
xchg
jge
test
add
jle
popa
pop
push
mov
shll
sbb
or
js
adc
adcl
mov
iret
dec
cmp
and
repz
loope
popa
pop
mull
or
daa
leave
cwtl
adc
cmp
adc
cmp
xchg
xor
cmp
mov
mov
sbb
faddl
pop
fcmovnb
or
hlt
mov
mov
outsl
popa
repnz
or
adc
popa
or
dec
lret
xor
les
and
or
xor
jmp
ja
cmp
jl
out
jo,pt
inc
cmp
dec
xor
stos
and
cmp
ror
dec
dec
mov
inc
decl
mull
aaa
add
jb
aaa
or
inc
mov
xor
out
cmp
dec
sbb
xchg
xor
fwait
inc
test
inc
mov
add
fbstp
adc
testb
lock
into
js
mov
into
pop
xor
jg
xchg
rclb
cmp
test
jmp
dec
inc
push
idivl
rcrb
mov
inc
mov
imul
inc
jge
mov
scas
sbb
or
sarb
or
push
xchg
lret
sbb
rclb
push
repz
lret
push
ret
mov
mov
lret
movsb
push
inc
and
out
inc
inc
sbbl
inc
hlt
mov
mov
cmpsb
loop
ret
lret
pop
xor
add
add
test
or
mov
iret
jmp
inc
mov
add
dec
in
add
pop
mov
pop
push
outsl
mov
mov
pusha
stos
jae
sub
ljmp
fwait
test
iret
repz
into
test
mov
imul
sbb
movsb
hlt
lds
jge
or
in
fisubs
or
mov
jb
lods
pop
ror
imul
aaa
push
lock
stos
and
xor
fidivrl
daa
aas
adc
lock
push
push
jmp
jne
mov
popa
cltd
jecxz
out
or
sub
aaa
inc
sbb
imul
negl
pop
testb
jg
sbb
mov
stc
fidivrl
or
lock
daa
lock
mov
push
xor
vsqrtss
pop
jmp
daa
sti
mov
stos
test
rolb
sub
mov
int3
add
sbb
dec
and
in
mov
int3
cmpsl
out
adc
mov
xor
cmp
test
pop
sbb
push
and
nop
cli
and
xor
stos
dec
mov
add
movb
sub
dec
loopne
or
sarl
and
mov
adc
cmpl
xlat
mov
sub
enter
ds
lcall
xor
add
fisubrs
into
pushf
mov
and
push
jnp
and
sub
sbb
nop
jg
adc
icebp
outsb
pop
add
fiaddl
and
mov
out
cli
repz
sbb
enter
push
bound
mov
jge
pop
push
daa
aas
add
xor
mov
rorb
dec
out
pop
ja
mov
out
sbbb
jo
jg
xor
dec
nop
lea
in
push
xor
cmp
in
idiv
andb
jecxz
mulb
fcmovbe
xor
push
out
test
shrb
cmpsl
movsl
mov
out
mov
ljmp
lds
scas
sub
cmpsb
jb
test
cmp
dec
add
and
sahf
sbb
inc
test
dec
jmp
pushf
ret
sub
sub
into
aaa
shlb
cmp
pop
adc
mov
push
mov
fists
and
sbb
or
adc
push
and
xor
lods
jmp
and
xchg
mov
fiaddl
mov
sbb
xchg
rol
pop
xchg
sahf
or
sub
inc
cmp
insl
mov
stos
imulb
jno
fwait
leave
cs
push
add
daa
xchg
dec
arpl
int
in
xchg
out
repz
lea
int
sbb
shlb
sub
mov
pop
jle
ret
stos
mov
or
mov
lock
sub
movsl
sbb
jae
ficompl
shll
out
xchg
ds
ljmp
out
inc
mov
mov
dec
and
loope
inc
stos
jmp
xor
popf
in
insl
sbb
lods
and
cmp
fwait
xchg
mov
mov
lret
jle
xchg
and
les
jae
cmp
jno
pop
jmp
insb
inc
mov
aas
insb
inc
lods
out
or
mov
loop
mov
ljmp
add
inc
or
movsl
in
and
imull
inc
mov
testl
inc
mov
jnp
mov
xchg
mov
xor
sbb
lods
mov
out
mov
adc
mov
cmp
cld
je
imul
push
push
xor
push
mov
fbld
inc
mov
aas
push
mov
sti
mov
push
xor
cmp
adc
aad
jns
ljmp
pop
rol
call
xchg
inc
loope
sbb
outsl
cmp
imulb
adc
or
int
in
out
leave
in
std
ret
mov
cmpsb
lcall
loope
xchg
sub
mov
faddl
sbb
aaa
push
shl
stos
test
out
mov
jp
sti
cmp
cmpb
aad
movsb
sub
push
jecxz
cld
shll
mov
ret
in
mov
mov
hlt
lret
or
fsubs
mov
clc
push
arpl
and
and
xor
adcb
sub
movsl
cmp
data16
inc
rolb
out
enter
pop
mov
int
adc
cs
mov
or
fwait
inc
cmpsl
repz
xorl
inc
sub
cmp
sub
add
and
jo
xchg
repz
jbe
and
jmp
fwait
or
adc
jecxz
cmp
mov
mov
dec
inc
std
mov
mov
orb
mov
cmp
lods
stos
int
jl
jp
mov
push
mov
imul
xlat
inc
mov
and
adc
mov
xor
sti
xlat
repnz
and
and
xchg
pop
jns
ss
cmc
mov
lods
mov
and
sbb
ret
sub
es
pop
sub
call
cmp
inc
out
lds
mov
ficomps
std
sbb
mov
ja
std
lods
or
adc
subl
xor
mov
mov
test
dec
mull
movsl
leave
movsl
sub
adc
pop
std
or
rorl
push
mov
out
ss
dec
inc
aaa
iret
outsl
jmp
add
and
mov
imul
pop
ret
bound
cmpsl
leave
add
inc
cmp
mov
sub
in
test
stos
and
call
sbb
into
jg
mov
xchg
sbb
cld
hlt
addl
mov
cmpsl
rorb
lret
lods
std
fs
inc
sub
addr16
lret
enter
mov
dec
mov
sbb
pop
jns
push
mov
scas
mov
sbb
in
fnstsw
ljmp
mov
sub
into
jo
imul
fiadds
pop
mov
shl
adc
xlat
mov
sbb
stos
jmp
mov
xchg
insl
lock
xor
jmp
into
fmull
push
sar
xor
inc
les
push
cli
cmp
xor
les
jg
fwait
jb
pop
sbb
push
cmp
xchg
pushf
cmp
rcl
or
aas
mov
cltd
lock
mov
sarl
push
scas
iret
sub
jmp
and
push
adc
call
cmp
repnz
int3
cmp
mov
xchg
out
fwait
test
divb
sub
movsl
lret
sarb
add
sub
data16
lods
dec
or
psrlq
adc
fsubl
push
and
sub
imull
mov
mov
sub
mov
jmp
cs
loopne
insb
sbb
icebp
sub
sub
sar
loope
mov
mov
push
push
mov
stc
lcall
add
stos
inc
sub
das
rclb
jnp
mov
loopne
mov
mov
lret
jae
std
inc
mov
psubsw
ds
or
inc
pop
testb
xchg
mov
lret
mov
fsubrl
out
ret
aam
xor
jnp
xchg
int3
lock
jnp
repz
aam
or
icebp
sbb
int
ljmp
rcl
mov
mov
adc
sarl
mov
mov
jg
repz
popa
or
adc
fidivrl
dec
cli
das
mov
lahf
push
cmp
popf
pushl
pop
icebp
or
mov
xchg
call
sub
imul
sub
icebp
test
stc
push
shlb
into
cli
inc
jnp
and
sarl
sub
cmpsb
cmpsl
sub
sbb
je
outsl
testb
ljmp
jecxz
dec
lea
cli
push
pop
cmp
push
out
addb
sub
cmp
or
cmp
xchg
pop
add
out
out
dec
ljmp
sbb
repnz
fdivrs
pop
repnz
pushf
sub
xor
ljmp
push
nop
int3
mov
mov
adc
test
pop
xchg
or
negb
push
dec
push
sub
into
add
sbb
lret
pop
adc
xor
dec
adc
roll
cmp
xor
and
or
add
mov
addr16
dec
jmp
lret
jg
xor
sub
inc
stos
nop
in
mov
out
inc
cld
mov
lds
test
mov
ss
into
arpl
es
dec
adc
jp
stc
cli
fwait
mov
xor
mov
out
xchg
orl
mov
out
imul
jo
push
sub
pop
cmp
outsl
add
xor
inc
mov
cmc
inc
sub
into
fisttps
and
jp
in
mov
push
mov
insl
and
stc
jg
push
mov
cwtl
repz
and
xchg
int
inc
lock
es
cltd
mov
ljmp
aas
subb
xor
cmpb
pop
fwait
sub
lcall
pusha
xchg
or
jns
loop
adc
inc
mov
sub
jns
mov
jo
icebp
mov
mov
mov
test
stos
push
mulb
scas
mov
sbb
rcll
lods
loopne
out
insb
sub
jmp
ffreep
in
add
hlt
xchg
jle
mov
scas
xor
scas
and
in
loopne
test
push
mov
push
mov
jl
scas
sbb
ret
and
sub
call
xchg
add
sbbl
push
out
and
cmp
mov
push
xlat
xor
addr16
mov
test
test
xchg
cmp
mov
add
arpl
stc
cld
jmp
ret
clc
push
hlt
mov
inc
xchg
lods
int3
mov
cmpsl
lret
xor
adc
pop
hlt
ds
iret
jnp
shr
aam
cmp
cmp
mov
xchg
enter
scas
or
out
cmc
mov
rorl
rcrb
insl
mov
xor
jns
pusha
mov
loopne
pop
mov
or
ds
xchg
fildl
xchg
or
dec
xor
in
mov
and
sarl
xchg
cmp
out
pop
xor
test
xchg
scas
add
out
rol
sub
mov
push
shlb
les
add
add
orb
pop
je
lahf
aaa
pop
imul
in
stos
add
mov
pusha
test
adc
jo
xchg
mov
cmp
or
cmpsb
adc
mov
rorb
outsb
cmp
or
adc
xor
jp
scas
fsubr
aaa
scas
loopne
in
fcom
out
int
lea
sub
add
adc
enter
mov
mov
xchg
lret
pop
mov
sbb
fadd
xchg
aam
sarb
and
aas
mov
mov
lret
hlt
into
imul
imul
mov
cmp
mov
inc
stos
fdivrl
jno
pop
jecxz
xorl
rolb
jae
mov
orb
not
ds
lock
daa
insl
hlt
std
scas
ret
or
add
rcrb
loopne
arpl
adc
jge
lret
jmp
inc
cmpsl
jns
jge
xchg
sbb
fwait
das
mov
aas
out
mov
lcall
das
adc
sbb
pop
mov
inc
mov
xor
adc
inc
ljmp
and
je
push
sarb
xor
mov
enter
push
shl
add
insl
mov
jb
shrb
in
rorb
mov
imulb
jnp
mov
sbb
cmpsl
fwait
hlt
xor
mov
loope
xchg
pop
mov
fmul
lahf
aaa
cld
add
mov
xor
loopne
or
add
int
stc
jbe
enter
cld
rcll
std
hlt
in
inc
sub
int
and
jge
cld
fwait
inc
jge
jmp
sbb
xchg
and
adc
sbb
iret
dec
in
xchg
cmp
fldl2t
xchg
cmp
clc
sub
loope
xor
les
test
lock
sub
into
sti
and
or
and
into
mov
sub
pop
or
test
push
and
jmp
cmpsl
andnps
mov
sti
cmp
xor
jle
mov
stos
push
add
loop
sti
inc
lock
outsl
mov
mov
pusha
dec
mov
jns
pop
cmpsl
add
es
popa
pop
cmpsl
sub
xchg
mov
and
jg
cmp
sarb
ljmp
repz
mov
out
xchg
or
inc
loop
shlb
and
enter
jl
mov
inc
mov
and
mov
inc
or
pop
inc
jge
repz
cwtl
into
stos
ror
shlb
push
dec
push
ljmp
jmp
mov
std
leave
cmpsl
cmp
or
mov
and
icebp
push
pop
out
aas
fcoms
rcl
leave
inc
sub
cmpsb
xchg
xlat
mov
jg
cmpsl
xor
std
add
mov
sti
cmp
mov
cmp
adc
mull
and
push
add
sbb
stos
hlt
push
sbb
cmp
out
sub
mov
ror
jmp
cmp
xchg
clc
add
jnp
push
and
mulb
sbb
jp
cs
test
jg
xor
mov
repz
outsl
cmc
cmp
lock
or
push
jmp
inc
xchg
out
cmpsl
shrb
lret
mov
outsl
xor
and
push
mov
sbb
push
test
iret
cmp
dec
in
cmp
into
rclb
fdivr
std
addl
cltd
test
test
sub
mov
add
sbb
lcall
ds
rclb
cmp
xor
testb
imul
add
jne
adc
stos
mov
inc
sub
cmp
rcrb
lsl
or
popf
dec
insl
cmp
mov
insb
dec
jmp
sbb
push
and
cmp
lock
jns
mov
aaa
pop
dec
cmpsl
pop
push
mov
push
call
and
movsb
cmp
mov
shrb
mov
and
fwait
sarl
sbb
pushf
push
jmp
lods
inc
mov
scas
push
jle
test
sbb
jle
in
and
aam
cmpsl
and
mov
inc
pop
pop
mov
fiadds
push
imul
sbbb
sbb
mov
push
fldl
cmpsl
jo
test
fistpll
hlt
roll
icebp
mov
cmp
fwait
push
adc
mov
ret
xchg
jmp
les
mov
ja
icebp
mov
xorb
mov
mov
add
movl
shr
dec
inc
shrb
cmp
mov
mov
repz
sbb
mov
fcmovb
icebp
mov
pop
shlb
loop
inc
pop
fcompl
addl
nop
cmpsl
and
sbb
cmp
hlt
cltd
aam
mov
sub
sbb
mov
xor
adc
sub
mov
inc
pusha
lret
fistpl
lcall
cmp
out
lret
dec
incl
dec
cld
jns
mov
jno
xchg
xor
addr16
popa
sub
xor
movsb
faddl
cmp
adc
sub
shlb
in
sbb
std
cmpsl
push
inc
jmp
ljmp
jae
pop
xchg
sahf
movsl
aam
sbb
add
outsb
mov
cmp
mov
lcall
lods
xor
xlat
sub
mov
pop
lds
mov
icebp
scas
shrb
fisubl
cmp
loopne
mov
push
inc
imulb
pop
mov
xor
mov
cmpsl
iret
loopne
daa
jecxz
pushl
xor
xor
imul
pop
adc
adc
pop
aas
xchg
and
stos
hlt
and
hlt
adc
jmp
int3
stos
and
and
sbb
push
leave
cmpsl
cmp
xchg
lods
mov
adc
inc
pushf
std
test
lahf
fucomip
sub
outsl
push
into
cmp
test
and
mov
rclb
and
ljmp
push
sahf
lcall
xchg
or
jle
adc
out
pop
sbbb
int3
adc
xor
add
sbb
xchg
mov
xchg
push
lods
es
leave
sub
nop
xor
dec
sbb
xchg
into
pop
lret
insl
rorb
test
pop
fnstenv
add
out
mov
inc
nop
mov
xchg
sbb
pop
jo
adc
add
test
lds
test
push
mov
test
sbb
xchg
movsb
leave
add
ret
cmp
test
lret
push
mov
jo
dec
testb
push
das
push
mov
sbbl
and
mov
xor
sub
xor
ss
imul
or
sbb
push
imul
lcall
xchg
jno
cltd
sarl
xchg
mov
jmp
lret
push
or
or
sub
sub
call
xor
cmpsl
fildl
pxor
sub
jns
mov
sbb
cltd
jnp
mov
in
daa
stos
test
sub
lods
mov
mov
or
mov
dec
aas
loope
cmp
sbb
call
cli
mov
call
test
fnstcw
push
xchg
out
cmp
push
negb
mov
mov
mov
mov
sbb
test
and
sbb
stc
jae
inc
scas
sub
xchg
sub
shll
mov
sbb
cltd
dec
push
sub
xchg
add
mov
sub
lods
cltd
into
outsl
enter
sub
xchg
mov
or
aas
sbb
sbb
mov
shl
push
xor
push
mov
daa
mov
adc
xor
imul
lret
es
xchg
lret
arpl
cmp
divb
dec
lahf
jae
mov
aas
push
scas
xchg
add
pop
lret
push
sbb
mov
xchg
xchg
cmp
jle
jmp
sbb
in
lods
cmp
data16
cmp
push
dec
jg
cmp
pop
mov
dec
sbb
cmp
dec
sbb
pop
ja
out
xor
cmp
cli
jmp
mov
or
pusha
cmp
jb
sbb
loopne
jne
pop
cmp
cli
add
fldenv
push
cli
test
cmpb
in
sbb
imul
cli
dec
push
mov
jbe
jnp
lret
cmp
lret
fwait
das
fadd
daa
fistpll
jmp
xor
sti
bound
aas
dec
pop
cmp
cli
jecxz
mov
pop
fwait
iret
push
ja
out
and
inc
stc
sbb
je
mov
sahf
jp
sbb
jae
push
cmp
jns
cli
mov
mov
mov
jecxz
xchg
lock
sbb
push
cltd
inc
dec
fistpl
jmp
mov
or
daa
inc
cli
push
loopne
inc
add
loopne
pop
mov
out
push
push
pop
cmp
cmc
and
imul
adc
cltd
clc
sbb
fwait
jae
out
and
addb
pop
pop
daa
mov
inc
jnp
sbb
dec
inc
inc
pop
and
es
ja
out
xor
push
dec
push
inc
and
add
dec
jnp
pop
ja
out
xor
sbb
popf
in
stc
mov
or
pop
jnp
push
or
sub
sbb
fcmovbe
sbb
pop
cmp
sbb
cmp
rorb
clc
jnp
cs
fwait
cli
cmp
in
pusha
mov
push
pop
cli
loopne
jnp
rcr
dec
ss
jns
idivl
jnp
pop
cli
stc
pop
daa
fsqrt
out
xor
cmp
lret
sbb
dec
imul
jnp
sti
pusha
test
sbb
sub
jnp
fucomi
cmp
or
push
out
xor
sti
imul
mov
pop
insl
cmp
dec
cmp
jae
mov
inc
jp
jmp
lahf
cmp
pop
adcb
and
cmp
jg
or
pop
ja
ss
jb
mov
sbb
mov
orb
jae
mov
fisubrl
mov
dec
andb
pop
cli
cmp
loope
ficomps
and
or
cltd
imul
cli
pusha
out
push
ja
out
inc
fstpl
lcall
popf
or
pop
daa
int
out
and
inc
jle
out
sbbb
clc
mov
sbb
mov
cmp
cmp
cmp
dec
cmp
dec
mov
cmp
lahf
sbb
negb
cli
out
xor
jnp
xor
cli
cmp
jnp
sbb
pushl
cmp
add
lahf
or
pusha
mov
add
or
pushf
xchg
push
lods
imul
jb
xlat
push
sbb
pop
sub
test
fwait
dec
cmp
adc
sub
in
inc
lcall
cmc
pop
xor
test
cmp
ss
inc
or
incb
and
fsubrp
and
xor
stos
dec
popf
xor
idivb
or
inc
jnp
fisubrl
das
push
pop
cmp
inc
cmp
ljmp
dec
cli
mov
push
cmp
push
ret
lret
out
cmp
sbb
cmp
and
movsb
xor
out
sti
out
outsb
mov
pop
sbb
or
pop
mov
and
add
or
ds
jo
sbb
dec
add
jb
outsb
sub
dec
addb
mov
adc
dec
and
dec
ljmp
add
push
and
dec
andb
cmp
bound
or
mov
mov
xor
jo
cmp
jmp
stos
loopne
jecxz
mov
outsl
or
subb
out
ror
lcall
inc
outsb
mov
xor
imul
sahf
jnp
cmp
adc
pop
mov
imul
lock
mov
lock
inc
dec
and
sub
sub
pushf
in
and
stos
insb
jbe
out
inc
xor
shlb
pushf
imul
sub
sbb
pop
jg
or
rcrb
shlb
imul
jl
and
ret
jae
adc
jl
sub
das
fstpt
das
jmp
iret
sub
xor
push
pushf
imul
rorb
adc
jl
sti
cmp
test
mov
xchg
inc
add
sub
addr16
xlat
sbb
cmp
jmp
iret
sub
jnp
js
inc
adc
jl
dec
add
mov
xchg
inc
pop
and
adc
out
xlat
sbb
cmp
jmp
iret
sub
fisttps
push
and
loop
addr16
jecxz
imul
push
outsb
jb
jbe
cmp
cmp
inc
loop
imul
push
and
repnz
push
jmp
cmpb
and
loop
imul
inc
test
fidivrl
jnp
sbb
jmp
pusha
loop
mov
clc
fnclex
loopne
repnz
cwtl
mov
cs
sti
and
dec
jmp
push
jp
repz
ljmp
or
pop
mov
jle
ss
xchg
fwait
jl
mov
mov
mov
cmp
outsb
cmp
scas
cmp
jno
sahf
and
lret
push
sbb
stos
adc
xorb
xchg
mov
sahf
add
lret
add
mov
cmp
push
and
sbb
es
adc
cltd
jl
orb
mov
and
and
pop
pop
adc
mov
dec
fwait
push
jge
sbb
arpl
jmp
leave
mov
subb
sub
insb
loopne
sub
jo
cli
mov
call
sahf
lcall
stc
pop
js
sahf
dec
mov
mov
sahf
or
xor
out
inc
sahf
mov
mov
jns
pop
inc
and
cmp
cmp
imul
ljmp
inc
loopne
imul
cmp
dec
push
imul
fidivrs
imul
mov
jnp
pop
and
mov
rcrb
jae
test
fstpt
hlt
sub
pop
ds
fisubrs
shlb
fwait
and
and
dec
mov
pop
imul
and
cmp
mov
fwait
and
add
outsl
xor
pop
mov
xchg
out
jmp
psrad
cmp
dec
lock
subl
and
stos
inc
pop
push
fimuls
ds
shlb
stc
jmp
outsl
les
ljmp
cmp
outsl
pop
ss
fimuls
dec
lods
loopne
add
jecxz
xor
push
in
and
mov
push
loop
mov
call
psrad
cmp
jmp
lret
lock
lock
push
imul
imul
out
jmp
psrad
cmp
jmp
lret
and
cltd
andl
sub
stos
inc
sub
jl
cmp
add
ljmp
shlb
dec
jmp
outsl
adc
ljmp
cmp
mov
jl
ss
std
add
cmp
mov
add
mov
stos
dec
lock
stos
dec
push
push
and
stos
inc
cltd
push
fisubrs
and
test
shlb
lcall
xchg
dec
lock
push
and
stos
inc
loopne
ficoms
mov
fimuls
fidivrs
fiaddl
dec
push
imul
out
ljmp
push
shlb
pop
pop
faddp
mov
cwtl
mov
cmp
and
loop
imul
inc
push
and
ljmp
fisubrl
loop
jo
dec
sarb
and
repnz
jmp
sbb
fwait
and
loop
inc
dec
aad
sbbb
lcall
and
cmp
sub
ljmp
adc
or
fidivl
mov
inc
xor
mov
adc
andb
jp
movsl
sub
cmp
sarl
mov
movd
and
loop
neg
ds
cmp
mov
mov
dec
sbb
divl
cmp
push
fwait
xor
jl
cmp
cmp
inc
cmp
sbb
addl
jmp
and
add
imul
jl
or
jl
stos
mov
sti
and
ljmp
and
mov
cmp
loope
ljmp
repz
subl
loop
or
jp
xchg
cmpl
add
or
mov
fldln2
mov
subb
mov
jo
or
sub
bound
loopne
idiv
cmc
pop
out
push
xlat
mov
cmp
and
ljmp
leave
ja
and
mov
andb
cmp
fisubrs
aam
mov
imul
jnp
outsb
cmpsb
adc
pop
xor
mov
sub
subb
lcall
sbbb
mov
cmp
xor
mov
cmp
xorb
mov
mov
cmp
lock
sbb
xor
pop
sub
xor
mov
mov
cltd
cmp
inc
xor
imul
mov
jae
cmp
cmp
lret
and
out
jmp
arpl
dec
dec
mov
dec
push
lret
mov
mov
sbb
out
push
cmp
das
outsb
lock
mov
sub
dec
mov
push
jmp
mov
sti
mov
xor
mov
dec
push
aam
icebp
bound
cltd
and
test
and
inc
pop
push
pop
sub
andb
test
push
pop
mov
cltd
std
mov
and
cmp
inc
sbb
mov
mov
mov
lret
andb
mov
push
jl
xor
mov
andb
cmp
and
mov
je
xor
mov
addr16
and
out
jmp
arpl
cmp
jae
inc
incb
shlb
sub
xlat
lcall
jae
inc
push
cmp
sub
or
rorb
and
pop
push
mov
mov
push
xorb
mov
push
mov
andb
cmp
and
test
dec
fadds
out
push
xlat
mov
push
je
add
mov
mov
fidivrs
enter
enter
push
pop
fiadds
loopne
fimull
loop
lock
out
imul
fdivl
lcall
out
loop
mov
jmp
ljmp
out
js
and
fidivl
fildl
mov
mov
outsl
repnz
cs
hlt
cltd
sub
lret
sub
sub
mov
lret
mov
lcall
adc
cmpsb
aam
push
fiaddl
ret
jmp
cmpsb
and
movsb
cmp
and
shlb
cmp
lcall
fldt
dec
cltd
cmp
jecxz
mov
and
cmp
mov
sub
into
mov
mov
in
sub
adc
xchg
cmp
je
test
rolb
mov
jnp
or
push
sti
fsubrp
dec
sub
lret
fadds
flds
jnp
xor
mov
andb
pusha
fcomps
mov
mov
fmulp
and
loop
and
cli
sbb
scas
or
pop
mov
or
fidivs
push
mov
sub
push
cs
addb
jp
mov
mov
cmp
fidivrs
mov
pop
test
mov
jae
xchg
fisubrl
and
jle
ret
pop
mov
jb
jbe
cmp
ds
ja
out
and
cmp
dec
mov
ja
out
imul
clc
inc
sbb
arpl
pop
add
and
es
cmp
jmp
fucomip
cli
cli
and
jns
or
dec
sahf
jnp
fistpl
add
sbb
add
lcall
inc
push
push
jmp
jecxz
adc
loop
imul
leave
or
jae
out
and
cmp
leave
mov
push
inc
mov
sti
jmp
mov
fldenv
lock
or
or
push
xor
sub
sahf
sbb
jecxz
mov
jnp
stos
and
mov
or
ds
jb
sub
shrb
inc
nop
es
push
cmp
fwait
and
loop
ds
inc
dec
and
lret
push
mov
or
sbb
adc
loope
jns
imul
jmp
mov
stc
gs
xor
jge
fmul
sub
or
sbb
sub
push
sub
fistps
sub
jg
pop
lcall
sbb
imul
and
dec
or
mov
mov
cmp
mov
dec
mov
and
fldt
xor
jno
jecxz
mov
add
inc
cmp
lret
inc
mov
sub
outsb
loop
ja
cmp
jmp
mov
mov
orl
lock
mov
sub
arpl
push
fidivrl
lret
and
imul
data16
dec
cld
cmpsl
jnp
dec
test
xor
jmp
js,pt
sbb
pop
sub
aam
dec
mov
imul
and
out
jmp
jp
mov
inc
je
lret
inc
and
sbb
test
cwtl
and
lcall
and
test
outsl
sub
mov
mov
loop
addr16
cmp
push
jne
outsb
dec
lret
dec
lret
sub
mov
jo
sub
and
hlt
loop
imul
inc
in
jne
push
cmp
cmp
ds
es
cmp
imul
pop
and
add
cmp
and
sbb
push
loop
mov
sub
cmp
stc
pop
mov
nop
pop
jns
loopne
cmp
lcall
jmp
stc
mov
sbb
inc
mov
sbb
stc
cld
ror
mov
fsubrl
sub
inc
stc
das
and
cmp
sub
pusha
mov
pop
push
bound
cmp
outsb
inc
jns
xor
adc
and
xor
sbbb
popf
stc
cmpsl
jo
ds
js
jge
aam
and
mov
aaa
jbe
into
jnp
add
mov
pop
mov
push
lret
lea
mov
fldt
and
mov
lret
push
sub
xor
dec
test
adc
xor
pop
ljmp
stc
imul
rorb
stos
push
fimull
ss
cmp
les
sti
sub
nop
mov
jo
push
push
imul
add
cmc
mov
lahf
mov
dec
ljmp
dec
fldcw
mov
imul
cmp
push
mov
loop
out
imulb
sbb
cmc
inc
xchg
mov
xor
push
mov
mov
push
adc
cwtl
inc
lret
pop
mov
cwtl
dec
loope
fimull
inc
add
mov
ret
mov
inc
adc
mov
pushf
cli
loope
fimull
inc
movsl
jo
push
mov
mov
and
icebp
pop
pop
xor
mov
inc
add
fisubrs
mov
inc
test
inc
pop
push
lret
out
and
inc
addb
push
or
inc
loopne
addr16
loop
ja
cmp
fcmovu
and
inc
test
dec
xlat
mov
jmp
push
inc
pop
adcb
adc
cmp
add
inc
test
push
xlat
mov
cmp
outsl
imul
lret
incl
subb
mov
pop
andb
imul
mov
lret
and
push
sbbb
test
cs
jno
adc
divb
pop
aaa
jns
fisubrs
jmp
mov
dec
nop
and
test
ss
jne
or
mov
jne
jns
pop
xorb
mov
mov
cli
cmp
mov
stos
ret
adc
rorb
shll
pop
cltd
sbb
test
xor
outsl
outsb
push
leave
mov
add
adc
lock
dec
jmp
pop
lahf
push
sub
mov
jmp
cli
stos
pop
ja
out
and
cmp
jmp
sub
pop
into
cmpl
push
sbb
leave
xchg
and
or
cli
imul
inc
dec
inc
cmp
imul
imul
fwait
and
ljmp
pop
inc
cld
or
xchg
imul
jmp
push
dec
sahf
jo
mov
loope
out
xor
mov
imul
rcrl
lock
mov
clc
leave
movsb
cli
loop
inc
lcall
push
xor
jle
aam
pop
dec
inc
sbb
nop
stos
test
ja
jmp
ficoml
inc
rclb
xchg
test
imul
sub
imul
inc
mov
daa
clc
lret
test
seto
out
mov
inc
add
mov
jb
inc
xchg
xchg
dec
in
mov
or
ss
jmp
or
push
mov
test
xor
lds
mov
jb
loopne
into
mov
xor
mov
pop
xorb
mov
pop
loopne
jecxz
xchg
out
or
dec
scas
loop
cmp
leave
rolb
inc
leave
mov
sub
jbe
lods
or
xchg
xor
nop
shr
fldcw
mov
or
int
sti
daa
mov
imul
mov
xor
dec
fldz
rcrl
sbb
sbb
mov
add
inc
lock
sbb
rclb
xchg
in
dec
pop
mov
cltd
add
inc
or
add
mov
mov
mov
or
and
mov
test
hlt
in
or
or
mov
or
sbb
mov
sbb
or
xor
lock
mov
lock
imul
sbb
cmp
lock
cmp
xor
lock
push
loope
out
adc
mov
jo
inc
inc
or
nop
lock
mov
movb
out
test
test
popa
jns
std
or
adc
jp
mov
lods
sbb
mov
mov
andb
cwtl
lock
shlb
shrb
mov
ljmp
inc
outsb
movsl
lock
inc
cmp
mov
call
push
mov
xor
cmp
cmp
jmp
faddl
lock
inc
push
jmp
addr16
mov
mov
ljmp
jp
aaa
cmp
sbb
jnp
out
lcall
and
jle
jg
rcrb
or
or
out
dec
inc
fwait
leave
shl
and
cmp
lcall
idiv
sub
mov
mov
cmp
sahf
call
adc
out
inc
faddp
jmp
mov
inc
std
movb
push
imul
xor
cmp
loop
out
insl
in
mov
into
and
mov
fisttpll
mov
cld
mov
inc
mov
cmp
and
test
xor
push
cmp
mov
mov
pop
sahf
je
fnstcw
mov
leave
mov
sub
andb
mov
jp
mov
rorb
mov
test
push
mov
aam
cmp
cmp
push
cmp
jge
test
cmp
or
fildl
mov
sbb
es
cmp
cli
sbbb
data16
inc
adc
hlt
lahf
fiaddl
lock
lret
or
and
imul
jmp
jo,pt
jge
push
loopne
push
fsts
xor
or
lahf
mov
jmp
mov
lret
and
out
and
out
stos
jno
imul
and
mov
imul
imul
fistpl
arpl
sub
pop
mov
xor
mov
mov
or
sbb
lea
cmp
fisubrl
inc
xchg
xchg
jns
jns
push
add
push
ljmp
aaa
cmp
cmpsl
jo
jo
int3
add
lcall
pop
pop
insl
add
sahf
mov
aaa
stos
test
jns
cmp
cmp
adc
ds
mov
fiadds
arpl
lret
test
mov
mov
inc
dec
jmp
imul
push
sahf
sbbl
bound
push
push
push
mov
jnp
push
sub
imul
shlb
lret
ds
xchg
mov
add
stos
adc
sarb
lret
out
adc
imul
inc
jo
shlb
fwait
xchg
mov
je
and
dec
mov
imul
mov
fadd
mov
sub
ja
arpl
arpl
jge
and
ret
sub
and
mov
je
sub
add
call
jb
cmp
lcall
ljmp
jnp
jl
sbb
inc
lret
mov
inc
test
imul
int3
inc
std
adc
lea
sub
leave
ljmp
mov
cmp
into
add
cmp
lcall
inc
jo
or
pop
sub
test
xor
cmp
or
or
jne
mov
cmp
inc
adc
pop
sub
and
adc
adc
notb
lret
jle
ret
fsts
mov
inc
fld1
jnp
ror
push
mov
jns
fsubr
fldl
dec
jnp
jns
int
mov
jns
fsubr
loope
mov
sub
int
mov
popf
aaa
cmp
mov
in
jnp
aaa
push
cmp
mov
shr
pop
dec
cwtl
or
mov
xor
cmp
mov
push
cmp
and
test
ss
test
adc
fwait
xorb
lret
fimuls
and
push
sub
and
xor
lret
or
ja
fcompl
ror
out
cmc
std
mov
ja
addr16
in
test
call
mov
and
mov
sbb
sub
lret
fisubl
bound
notb
loope
in
int
loop
addl
xor
jnp
mov
xchg
rorb
loopne
add
addr16
mov
xchg
subb
lret
sub
add
negl
cmp
mov
out
push
and
or
fstpt
adc
stc
sbb
jbe
sbb
fisubrl
imul
mov
cmp
or
xor
mov
cmc
mov
notb
loopne
loope
mov
stos
mov
mov
xor
mov
cmp
pop
cmp
mov
fs
iret
fucomi
adc
mov
add
jg
dec
test
mov
mov
sbb
cmp
scas
sub
or
cs
fnstenv
jmp
jns
js
adc
cmc
fidivl
jle
jae
sbb
ss
dec
jmp
mov
jle
popf
sub
sbb
jnp
add
or
mov
ja
addr16
jge
pop
xchg
sbb
sbb
inc
jp
mov
sbb
push
mov
inc
fucomi
sbb
loopne
pop
pusha
mov
loopne
mov
sbb
mov
and
je
push
mov
sbb
cs
ljmp
jp
mov
cmc
push
push
rcrl
cmp
jp
scas
dec
sbb
jp
inc
sbb
test
mov
or
xor
lahf
and
mov
add
nop
je
adc
in
mov
pushf
pop
stos
aam
fisubrl
pop
jns
cltd
jmp
push
cmc
lret
pop
push
mov
stc
mov
and
jecxz
rcl
scas
test
loope
scas
cwtl
dec
movsb
cltd
mov
dec
cmp
sbb
ficomps
mov
sbb
mov
in
sbb
push
mov
cmp
aas
mov
sbb
mov
imul
sbb
mov
pop
push
push
movsb
popf
scas
jnp
rcrb
mov
shlb
mov
sub
xchg
inc
test
int
movsl
sbb
aad
sbb
inc
mov
adc
mov
mov
cld
lahf
lret
inc
movsl
scas
enter
sub
cmc
outsb
test
imul
cs
xchg
sbb
iret
mov
nop
sbb
push
mov
mov
add
ss
scas
rorb
bound
lcall
pushf
xchg
jo
shll
push
es
pop
inc
stos
sbb
stos
jmp
mov
and
call
ljmp
nop
or
leave
and
inc
mov
sub
nop
jmp
cmp
and
out
cmp
mov
or
mov
jmp
fmul
pop
dec
js
mov
mov
sub
mov
adc
scas
fadd
or
jp
mov
mov
add
add
or
outsb
dec
test
xchg
lret
xchg
dec
rorb
xor
and
xor
xor
mov
inc
std
stos
mov
or
add
jp
inc
mov
and
mov
inc
xchg
scas
or
xchg
scas
and
jle
mov
jge
enter
mov
inc
addb
lock
push
xchg
lock
sar
imul
stos
sti
pmuludq
pusha
loope
mov
jmp
fcmovnbe
ds
pop
add
cmp
stc
inc
lret
jmp
imul
mov
int3
mov
jmp
cmp
cmc
sbb
mov
sbb
jns
aam
hlt
or
cld
xchg
sub
lret
aam
inc
mov
lret
jle
and
mov
sbb
mov
test
cmp
push
lahf
push
lods
cltd
loope
push
jnp
mov
mov
dec
hlt
sbb
jb
cmpb
movsb
stc
cmpsb
ds
imul
insl
cmp
cmp
jle
and
adc
mov
mov
leave
sbb
ret
arpl
pop
cwtl
addr16
ljmp
lret
push
ret
out
sbb
jmp
loopne
addr16
loope
sub
test
sbb
and
fimuls
and
add
lea
add
sahf
dec
inc
mov
mov
sub
jnp
xor
mov
xor
mov
xor
or
repnz
and
imul
inc
dec
and
ljmp
cmp
movl
stos
jnp
shlb
adc
int
int
mov
xor
cld
cltd
movsl
inc
pop
sbb
sbb
mov
cltd
in
popf
fwait
push
mov
das
add
pop
jmp
aam
fisubrl
jecxz
adcl
pop
mov
mov
ljmp
insl
ror
pop
sbb
jp
enter
mov
mov
or
loop
xor
popa
inc
sub
push
mov
cltd
mov
mov
dec
cltd
movsl
adc
pop
pop
mov
adc
mov
int
mov
cwtl
cmp
pop
rcl
mov
push
subb
pushf
xchg
mov
cwtl
pop
fisubrs
repz
xor
mov
sub
pop
flds
mov
fimull
xchg
pop
sahf
ficomps
cli
xchg
mov
pop
cmc
mov
pop
pop
sbb
or
fsubp
repnz
jo
xor
pop
int
mov
cwtl
cmp
pop
sbbl
int
mov
ljmp
mov
dec
aam
mov
pop
mov
mov
andb
push
pop
add
pop
pusha
pop
mov
mov
pop
mov
mov
mov
out
pop
sbb
mov
pop
push
pop
in
mov
pop
idiv
dec
or
std
sbb
inc
icebp
pop
and
sti
movl
mov
mov
push
xchg
push
pop
ja
adc
and
ficoml
add
mov
hlt
mov
cmp
pop
sarb
jae
fisubrs
loope
mov
js
push
xchg
into
or
mov
in
movsl
inc
popf
loope
sarb
mov
arpl
push
jmp
mov
popf
lahf
sub
inc
inc
mov
and
push
jmp
mov
imul
mov
lret
sub
mov
jmp
push
loopne
xchg
ficoms
xchg
jmp
dec
pop
sbb
int
repnz
mov
lock
mov
leave
xor
mov
jmp
dec
cmp
stc
lahf
dec
shl
sub
push
lret
mov
mov
pusha
insl
jmp
push
outsl
jmp
lret
add
movsl
jmp
push
mov
stos
loopne
sete
xor
jns
sbb
sti
jnp
lret
and
cmp
add
pop
mov
inc
pop
scas
nop
fildl
lcall
add
adc
push
xchg
stos
sbb
mov
jns
jmp
dec
test
mov
in
stos
pop
rorl
fimull
mov
stos
mov
mov
lret
mov
and
cmp
mov
mov
sub
das
ja
jp
sub
cltd
mov
lcall
or
and
mov
das
ja
fcoml
mov
sbb
popa
mov
and
loop
imul
lcall
ljmp
stos
out
mov
xchg
sarl
stos
mov
mov
mov
push
lret
add
add
pop
and
pop
lcall
out
sub
iret
cmp
xchg
mov
movl
add
sub
mov
jmp
add
xchg
mov
fwait
lea
jmp
fcmovnu
mov
icebp
jmp
cmpl
pop
scas
jmp
rcll
cltd
mov
lahf
imul
lret
inc
lret
inc
into
and
into
push
and
sbb
loope
adc
push
jl
imul
icebp
lcall
lret
mov
sahf
or
shr
leave
mov
jmp
mov
mov
jmp
test
mov
add
dec
scas
sahf
mov
mov
jmp
mov
adc
mov
jmp
mov
sahf
nop
mov
jmp
lock
dec
nop
ds
inc
test
lcall
jmp
ja
jmp
cmpl
mov
cmpb
cmp
mov
mov
mov
mov
shr
nop
cmp
sbb
ljmp
decl
imul
stos
ja
inc
xchg
loopne
out
lret
or
out
test
mov
cmp
fwait
push
xor
or
xor
jnp
dec
test
lock
movsl
jge
dec
or
dec
cltd
data16
cld
and
push
pop
scas
xchg
ljmp
pop
push
mov
jnp
mov
test
int
hlt
xlat
jnp
outsb
mov
pop
pop
adc
pop
push
pop
mov
aam
stos
pop
adc
sbb
loope
shlb
cmp
push
imul
mov
adc
iret
mov
subl
mov
sti
push
mov
das
xchg
scas
fwait
imul
stos
cmp
arpl
cmp
pusha
sub
mov
mov
mov
int
pop
pop
adc
jl
imul
cmp
pushl
pop
cltd
mov
stos
and
mov
mov
push
mov
ds
xor
popa
mov
ja
xor
and
mov
pop
inc
inc
adc
adc
fwait
aad
lret
inc
sub
cmp
cmp
and
int
fmull
push
mov
mov
cltd
inc
aas
mov
mov
mov
jmp
adc
jecxz
pop
sbb
mov
pop
push
sbb
mov
xchg
adc
stc
mov
sub
sbb
adc
mov
ss
mov
jp
int
rcl
xor
inc
scas
loope
mov
sub
cmp
xchg
addr16
leave
rclb
in
loope
mov
lret
mov
scas
insl
fwait
iret
mov
mov
lcall
lret
xchg
gs
cltd
addr16
orl
inc
idiv
jns
repnz
mov
inc
nop
decb
insl
dec
cmp
cmp
mov
cltd
mov
sti
test
xor
imul
cmp
movb
cmp
dec
push
mov
inc
insl
push
fadd
imul
mov
cmc
sub
mov
and
imul
lock
sbb
fwait
arpl
mov
sbb
xor
daa
mov
shlb
outsl
sub
shr
mov
sub
xor
leave
iret
push
lret
cmp
jmp
cmpsb
and
pop
sub
call
leave
loopne
addr16
sub
outsb
sahf
rorb
fsin
sahf
dec
lcall
mov
jo
mov
stos
sbb
xor
in
je
fistpll
mov
fmulp
xor
mov
cltd
and
push
and
js
fwait
inc
fidivs
mov
mov
jp
addr16
jl
loopne
jl
cs
mov
xlat
mov
inc
jg
pop
ret
addb
outsl
inc
inc
loope
sahf
sub
imul
in
subb
cmp
mov
inc
ja
cmp
into
inc
xor
movb
sar
inc
in
pop
xchg
xabort
test
dec
add
inc
mov
popf
stos
and
and
xor
cmp
icebp
dec
adc
push
pop
jnp
inc
jl
adc
shlb
adc
dec
lcall
inc
mov
push
adc
pop
or
nop
lahf
sbb
adc
outsb
adc
dec
ljmp
leave
push
jne
cmp
mov
xchg
jle
xor
and
fldcw
dec
pop
imul
or
and
mov
cltd
imul
ds
fnstcw
sbb
pushf
ret
pusha
loop
jnp
jae
add
jne
cmp
sarl
mov
das
push
adc
or
mov
dec
cmp
outsb
sub
outsl
jns
jbe
mov
mov
aaa
imul
xorb
lahf
cmp
dec
stos
cmp
sti
xchg
mov
mov
insl
ljmp
ljmp
fimuls
jecxz
scas
out
fwait
out
add
cmp
push
mov
scas
addl
fstpt
inc
or
aam
stc
and
decl
clts
mov
mov
adc
aam
add
stos
stos
inc
pop
pop
xor
addr16
pop
in
cmp
dec
lahf
fldt
aad
cmp
xor
xor
xor
jnp
mov
mov
mov
push
mov
je
pop
cmp
adc
push
push
mov
out
xor
test
xor
mov
cli
ret
fisubrl
pushf
pop
ljmp
jmp
cmp
or
jo
decl
test
lock
pop
rorl
inc
push
sahf
fisubrl
ljmp
cmp
and
add
sub
sti
outsb
adc
ss
in
push
jo
addr16
rcll
cld
adc
ficoms
adc
nop
pop
jo
rcl
call
es
jae
mov
out
adc
mov
je
ret
sbb
mov
ja
cmp
ror
arpl
dec
out
or
lcall
shr
stos
cmp
adc
rol
arpl
adc
pop
mov
or
add
orb
imul
mov
imul
adc
inc
xor
sub
sarb
mov
cmpsb
lock
pop
addr16
cwtl
dec
sub
aas
mov
ret
mov
popa
mov
mov
ljmp
mov
or
dec
fwait
cmpsb
add
into
sti
or
lret
out
mov
mov
sub
dec
lock
std
inc
test
insl
jnp
inc
fsub
iret
xor
inc
iret
xchg
inc
sub
mov
std
ljmp
xor
sarl
inc
mov
mov
aam
ljmp
xor
mov
push
ljmp
test
rcrb
aam
movsl
push
mov
mov
ljmp
lret
call
or
outsb
sti
sub
mov
sti
pop
lods
ljmp
mov
mov
mov
add
xlat
mov
inc
cli
decl
and
leave
ljmp
sub
mov
add
pop
cltd
pop
mov
stos
std
inc
test
add
mov
sbb
test
je
inc
mov
arpl
xor
or
inc
insl
mov
mov
fdivrl
inc
mov
mov
loopne
xor
jae
pop
aaa
mov
shrb
mov
test
lret
in
mov
push
mov
sub
inc
sbb
stc
int
test
adc
sbb
pop
inc
cmp
mov
cmp
mov
mov
sbb
and
push
mov
test
imul
in
inc
push
sub
movsl
pop
push
mov
lret
push
lcall
inc
into
cmp
dec
popl
inc
mov
or
inc
popa
and
lcall
mov
jb
pop
popf
scas
inc
xchg
adc
in
popf
jnp
mov
and
inc
lcall
outsl
dec
jge
jo
scas
mov
rcrb
int3
lcall
push
add
mov
lcall
mov
rcl
lcall
push
sub
and
mov
jns
mov
adc
pop
push
push
jo
pop
inc
xor
pop
mov
cmpsl
xor
push
or
pop
ja
loop
xchg
shr
mov
mov
cmpsb
jecxz
jg
or
out
pop
mov
push
and
jnp
lea
inc
pop
out
fidivrs
jns
inc
cmpsl
stc
cld
mov
xchg
out
mov
push
andb
cmp
jmp
jns,pt
test
test
outsb
or
imul
inc
sbb
jecxz
inc
adc
mov
add
movsb
add
jmp
mov
sarb
jns
mov
lret
mov
and
pusha
scas
jp
inc
scas
les
fs
sbb
push
push
push
lret
mov
ds
cld
adc
cmp
cmp
cld
jmp
loop
flds
ficoml
loopne
jne
sbb
mov
lret
xor
test
add
sahf
fwait
inc
mov
lret
xor
das
cmpsl
cmp
fwait
ljmp
nop
loop
aas
cltd
lcall
mov
pop
sbb
je
and
and
mov
inc
jl
sbb
mov
inc
mov
lret
inc
dec
push
fsubp
jle
and
dec
ljmp
push
inc
mov
adc
dec
push
mov
stos
dec
mov
xor
shr
mov
ret
inc
lret
jle
push
sub
and
dec
mov
and
sbb
jnp
and
shrb
pop
adc
inc
jp,pt
adc
sub
les
out
sub
loopne
xor
dec
sbb
xchg
loop
and
mov
sub
loopne
cmp
sbb
cmp
mov
inc
mov
repz
and
jge
rolb
stos
sbb
ficompl
outsb
into
xor
sub
lock
jmp
add
mov
cmc
push
jmp
stos
xchg
mov
fldt
push
cmc
subb
or
insl
push
cmp
cli
pusha
subl
nop
push
arpl
sub
jb
mov
outsb
fcompl
fnstsw
push
mov
pop
add
push
adc
sbb
cltd
cmp
stc
or
push
and
inc
or
jmp
push
push
lods
adc
pop
lret
call
adc
adc
and
mov
cmpb
push
dec
add
pop
push
pop
mov
sbb
and
orb
dec
aam
lds
pop
out
sub
xor
inc
mov
lret
fldl
push
pop
sbb
fnstcw
outsb
pusha
jnp
sbb
push
arpl
dec
mov
lock
in
loopne
rcrb
sub
imul
mov
cmp
inc
lcall
jg
xchg
push
in
mov
or
into
call
sub
bound
ja
addr16
mov
jnp
ret
mov
mov
orb
in
subl
inc
fwait
jg
stos
or
jl
inc
adc
inc
fmull
ja
inc
lock
aaa
adc
fimuls
in
or
cmp
sub
mov
hlt
daa
jmp
adc
or
push
xor
mov
shrb
ficomps
bound
xor
mov
testb
pusha
xor
mov
jp
mov
mov
int3
push
or
sub
enter
xchg
mov
fnstcw
test
mov
inc
pop
cmp
pop
test
out
mov
int
cld
jne
loopne
repnz
ja
sbb
sbb
mov
push
sub
pop
mov
movsb
mov
enter
sub
pop
or
pusha
in
popf
jp
addb
test
mov
xor
push
xor
into
add
sbb
push
mov
sub
add
sbb
push
xor
lcall
mov
das
int
push
ficomps
mov
add
test
lock
xor
insl
xchg
push
out
aaa
mov
mov
out
aaa
pushf
test
jns
mov
addb
test
iret
fcmovb
push
imul
jmp
imul
imul
jle
add
sub
dec
shlb
sbb
jb
loopne
mov
imul
cmp
mov
push
fldenv
xor
imul
mov
loope
jmp
inc
xor
movsb
roll
dec
movsb
mov
sub
xor
imul
inc
lret
or
rcl
add
dec
cmp
test
pop
sub
mov
adc
fsts
popa
lret
push
pop
adc
adc
sub
sub
movsb
cli
das
lret
sbb
xor
mov
mov
orl
push
mov
mov
sub
stos
pusha
push
clc
nop
pop
mov
cmp
mov
xchg
inc
ret
addr16
pop
in
pusha
mov
push
pop
loope
sbb
mov
js
pop
lcall
scas
inc
repnz
addr16
jns
out
das
insl
jns
imul
inc
mov
mov
loope
xor
lret
js
popa
lock
and
cmp
outsl
inc
ficomps
mov
stos
cmp
jge
sbb
cmpb
stos
cmp
jnp
jae
mov
mov
aas
loop
mov
out
and
test
xor
cmp
inc
cmp
inc
mov
mov
imul
inc
aam
mov
test
dec
loop
ja
cmp
je
sbb
mov
push
sbbb
test
push
dec
xchg
inc
mov
out
inc
sub
sti
xor
mov
or
and
pop
push
lcall
jb
test
cmp
mov
xor
mov
and
jmp
sbbl
mov
test
xor
mov
inc
inc
mov
fwait
jb
lea
shlb
imul
mov
mov
fidivs
and
out
int
sub
xor
fisubrs
xchg
add
aaa
xor
xorb
sti
inc
mov
shlb
push
pusha
jb
inc
cmp
arpl
or
nop
andb
sub
fsubr
jnp
xchg
mov
pushf
sbb
xor
lds
mov
daa
imul
decb
es
mov
sbb
push
sbb
cmp
jmp
ja
jmp
cli
sti
jae
adc
xor
jnp
push
lahf
adc
jg
push
jp
cmp
adc
jg
push
test
jmp
in
xor
jg
push
cmpsl
cmp
loop
test
xchg
ja
lds
adcl
jmp
pop
nop
sbb
call
push
les
push
sti
xor
les
push
shlb
push
stc
push
jp
push
add
fimuls
lret
mov
xchg
ja
or
insl
fisubrl
or
add
sub
cmpsb
aas
mov
sbb
jmp
xorb
lret
mov
or
sti
ljmp
push
cmp
jo
pop
mov
es
ret
nop
lcall
jmp
loopne
or
xor
nop
mov
cmp
and
xchg
add
subb
ds
lods
adc
and
xor
subl
pop
sbb
sbb
scas
insl
stos
mov
jns
pop
xor
lcall
inc
jmp
mov
shlb
and
cmp
cwtl
out
mov
mull
out
pushf
rcl
lcall
pop
jns
jns
push
std
inc
inc
fidivrs
pop
lahf
lcall
inc
popa
or
xchg
fcmovnu
lret
fsubl
test
stos
jmp
xlat
xor
or
dec
push
jl
sbb
pop
and
lds
push
ljmp
push
push
mov
mov
cltd
inc
dec
iret
mov
out
imul
lcall
mov
lret
mov
dec
fdivrl
mov
jmp
mov
cmp
addb
inc
adc
cmp
cli
add
and
cmp
icebp
ljmp
inc
add
xor
xchg
jl
dec
outsb
test
cmp
mov
icebp
imul
jmp
aas
mov
and
sub
mov
mov
push
out
lds
push
mov
sbb
jp
test
jne
loopne
ja
and
push
imul
rcrb
cmp
std
pop
arpl
jbe
cmpl
loopne
xor
rorb
pop
and
sub
jo
into
test
enter
mov
lahf
cmp
push
mov
in
inc
cs
pop
decl
sub
cmp
lock
push
inc
inc
addl
ss
mov
cli
test
call
mov
or
hlt
sbb
mov
in
sbb
dec
xlat
inc
jmp
sti
mov
sbb
shll
in
jmp
ror
push
mov
inc
fsub
push
ja
cmp
inc
adc
inc
mov
mov
nop
rcr
into
sbb
sbb
mov
xor
rol
inc
sbb
sbb
adc
in
mov
sar
adc
mov
cmp
mov
cmp
nop
ror
push
mov
popf
aaa
test
jp
scas
cmp
mov
cmp
or
mov
shlb
ds
outsl
sub
mov
addb
mov
subb
mov
push
jmp
jecxz
pop
sub
mov
pop
xor
jnp
sarb
jo
test
xor
loop
je
mov
and
addr16
xor
sub
inc
das
inc
sbb
loopne
adc
mov
sti
lahf
stc
or
cltd
adc
test
inc
mov
cltd
loope
mov
or
mov
mov
mov
mov
dec
pop
lock
dec
jge
jo
xchg
mov
mov
sub
pop
sub
pop
sub
mov
mov
sbb
ljmp
pop
pop
ljmp
arpl
push
mov
mov
clc
dec
pop
test
roll
sbb
inc
subl
jp
mov
push
out
sbb
fidivs
mov
cwtl
push
jo
int
or
mov
int
and
add
clc
push
rorb
mov
add
mov
mov
loop
imul
ljmp
or
mov
cmp
hlt
mov
add
sbb
fimuls
fidivrl
imul
pop
sbb
fisttpll
push
adcb
sbb
or
xor
lcall
sbb
adc
ficoms
test
mov
or
ljmp
jnp
jmp
or
out
idiv
inc
fistl
or
jp
add
ret
mov
pushf
addr16
rcr
loop
out
pop
cmp
cmp
and
mov
cmp
or
and
call
fwait
sub
fnsetpm(287
mov
call
and
lock
mov
sub
stos
lahf
in
ret
pop
fistpl
mov
and
fucomi
jmp
inc
jmp
xchg
addr16
imul
js
in
rolb
in
xor
out
ja
mov
mov
imul
xor
out
ja
mov
and
mov
rcrl
mov
hlt
mov
shlb
call
pop
fwait
jae
pop
aas
adc
mov
sub
cmp
xchg
and
mov
or
lds
andl
xor
jns
rclb
or
test
negb
test
cmp
fcmovb
mov
imul
cmp
inc
sbb
leave
mov
jle
xor
jp
mov
inc
cmp
push
adcb
sbb
mov
int3
jae
fst
mov
cmp
jnp
mov
add
imul
lods
jp
lock
sbb
mov
mov
mov
rcrb
jp
push
outsb
ret
mov
or
mov
mov
stos
lock
mov
mov
and
mov
pop
in
adc
cmp
push
mov
out
cmp
shl
adc
lahf
sar
mov
xchg
sbb
shlb
ret
sbb
mov
shlb
sarb
mulb
mov
sarb
shl
mov
fnstcw
lret
adc
sarl
pop
fwait
adc
rolb
dec
cmp
hlt
cwtl
pop
and
xchg
ret
movsl
iret
nop
inc
mov
mov
iret
mov
sub
aaa
notl
sbb
mov
nop
mov
fwait
and
mov
and
imul
mov
inc
xor
mov
xchg
lcall
sub
xchg
mov
mov
mov
and
dec
lcall
out
mov
xor
popf
mov
pop
sbb
add
inc
mov
outsl
lcall
mov
pop
jmp
lcall
xor
mov
dec
imul
mov
hlt
cs
lcall
leave
out
stos
pop
nop
lcall
dec
daa
lcall
sub
mov
xor
inc
sub
lcall
sub
mov
or
mov
mov
push
outsb
nop
pop
call
sarl
adc
xor
or
sub
sub
sbb
cwtl
fwait
sbb
imul
scas
sbb
mov
jmp
push
push
inc
pop
or
jle
dec
sar
lret
xchg
loop
adc
cltd
or
subl
push
mov
xor
or
arpl
adcl
and
in
fildl
pop
push
incl
adc
fldt
test
or
and
cmp
mov
mov
cmp
cmp
ret
sbb
stos
cmpsl
inc
mov
jnp
leave
cmp
jns
sub
jmp
xorl
dec
nop
pusha
sbb
sub
xor
dec
addr16
mov
test
fs
mov
lcall
lcall
lret
cmp
and
pusha
test
lret
add
sbb
loop
insb
out
dec
lret
mov
popa
push
mull
inc
stc
push
or
sbb
cmp
test
sub
fnstenv
add
fildl
outsb
sub
dec
adc
pop
shr
lock
push
and
xor
sbb
mov
or
jge
test
pop
into
pusha
mov
adc
neg
loope
scas
outsb
cltd
mov
popf
cmp
outsb
jecxz
mov
popf
and
mov
jp
inc
sub
out
inc
xchg
pop
or
imul
push
fistl
mov
fidivrl
or
fisubrl
jp
inc
sahf
lret
fidivl
lock
inc
and
leave
pop
push
pop
data16
xor
inc
scas
out
jecxz
inc
mov
adc
aam
xor
jae
pop
xor
inc
dec
sub
into
out
jmp
or
das
push
dec
or
mov
jl
inc
sbb
dec
ja
dec
push
sub
into
xchg
mov
popf
cmp
dec
jae
pop
xor
cli
push
and
dec
mov
mov
sbb
or
push
sbb
inc
mov
sbb
adc
push
mov
push
dec
enter
sbb
ficomps
push
mov
loop
out
jmp
and
xchg
mov
popf
adc
sub
mov
lcall
jb
cltd
adc
sub
mov
mov
mov
cltd
fidivs
or
mov
mov
xchg
call
dec
scas
mov
sub
or
mov
leave
xor
xor
insl
cmp
sub
pop
jbe
mov
into
xor
stos
ja
addr16
sbb
mov
test
flds
add
mov
xor
lock
mov
enter
xor
pushf
pop
shr
cli
sub
or
cli
jns
rclb
mov
repnz
lahf
nop
ljmp
xor
faddl
inc
pop
xor
sbb
mov
in
and
ret
add
add
mov
mov
sbb
jns
mov
nop
mov
mov
in
sbb
mov
sub
pushf
rorb
sub
fcomi
test
repnz
or
jmp
sbb
cmp
mov
mov
lcall
and
out
lcall
addr16
pop
lret
add
dec
ret
lea
lret
sbb
inc
mov
inc
mov
cmc
and
add
ja
repz
pop
xor
mov
sub
cltd
jbe
sbb
sbb
fadds
dec
ss
int
test
nop
stc
xor
mov
jmp
pop
std
daa
mov
xchg
mov
push
jae
out
hlt
xchg
nop
shlb
or
shlb
inc
cmp
jnp
mov
xor
dec
test
mov
loopne
jmp
cmp
pushf
std
mov
addr16
push
xchg
fwait
nop
and
adc
cmpb
aad
lock
cmp
ds
xchg
scas
stos
inc
push
scas
or
push
scas
fisubrl
scas
popa
fisubrs
pop
cmp
scas
or
loop
or
out
fwait
out
je
fsubrp
scas
cmpsl
subl
scas
imul
sbb
push
lcall
pop
out
idivb
iret
lcall
test
xor
cmp
inc
dec
dec
inc
push
jle
inc
ficomps
je
stos
cmp
jmp
adc
ret
das
push
aad
adc
repnz
add
lret
xor
sub
or
je
mov
repz
mov
xor
stos
stc
ja
mov
mov
outsb
loope
stc
inc
lcall
test
loopne
bound
mov
popf
jo
cwtl
ret
add
or
mov
push
dec
in
mov
dec
pop
orb
testl
xchg
mov
rorl
mov
stos
mov
mov
dec
adc
push
mov
mov
pop
fsubl
lret
pushf
adc
sbb
jp
enter
sbb
cld
ja
mov
adc
dec
sbb
dec
pop
pop
ljmp
cmp
mov
pop
mov
mov
xchg
idivl
jmp
cmp
pop
std
mov
or
pop
sbb
cld
popf
lcall
cmp
xorl
cli
sbb
push
adc
mov
xor
fisubrs
ficoml
scas
jns
mov
lcall
pop
push
mov
cmp
fprem1
jnp
jmp
lcall
addr16
ja
inc
addr16
pusha
sub
add
mov
sub
sub
shrb
jae
jae
dec
cmp
mov
jo
movsl
inc
cmp
or
adc
mov
imul
test
loop
mov
add
inc
cmp
lcall
dec
mov
mov
cmpb
cmpsl
leave
cs
pop
ds
jmp
lea
jns
jge
cld
stos
je
movsl
fstpt
or
inc
imul
xchg
or
mov
sarb
imul
mov
nop
dec
sub
sub
ds
leave
inc
outsl
xor
imul
jp
aaa
pop
mov
or
sub
test
lret
mov
xchg
sbb
cmp
cmpsl
test
mov
pop
jnp
int
mov
imul
inc
dec
mov
cs
sub
fidivrl
out
mov
fimuls
push
mov
cmp
jbe
adc
xor
xchg
mov
mov
dec
mov
pusha
inc
scas
push
and
mov
or
cmp
push
xor
stos
mov
jmp
into
cmpb
xchg
mov
xchg
mov
fisubrs
inc
push
mov
insl
dec
imul
mov
push
push
mov
sub
jle
cmp
repz
aaa
add
inc
std
pop
add
mov
inc
imul
mov
sub
sti
cmp
outsl
rcll
and
insl
pop
lcall
dec
pop
push
mov
outsl
pushf
mov
mov
movd
sbb
pusha
sub
pop
ljmp
pusha
cmp
mov
dec
in
popf
and
subb
das
daa
pop
jmp
stc
pop
sub
xchg
je
mov
andb
jp
fstl
rcrb
fadds
mov
in
hlt
mov
subb
leave
lcall
ljmp
sub
jmp
out
xchg
jmp
in
fiadds
mov
test
jmp
out
loop
sbb
cli
iret
mov
ret
out
fdivl
stos
outsb
int3
nop
jp
dec
je
xor
lods
iret
mov
mov
scas
mov
icebp
popf
pushf
std
push
push
mov
aaa
pop
cmp
mov
sbb
sub
testb
mov
leave
push
pop
fwait
push
xor
mov
shll
data16
je
or
pop
push
mov
cmp
push
bound
jmp
inc
jo
std
pop
mov
or
pop
mov
lret
pop
dec
sub
lret
stc
mov
dec
or
xlat
sub
ljmp
sarb
nopl
mov
mov
cmc
push
test
fisubrl
scas
in
leave
cmp
popf
inc
test
lret
cld
mov
adcl
push
cli
fdivrl
mov
inc
or
rclb
push
rorl
dec
inc
fisubrs
outsl
incb
jo
inc
push
adc
xchg
lahf
sti
mov
push
jae
xchg
and
xor
xchg
insl
pusha
fdivr
push
lea
sbb
or
jb
cmovg
mov
jmp
lea
nop
push
lret
xchg
cmp
mov
out
out
jmp
xchg
xor
mov
inc
sub
jmp
mov
mov
sbb
pop
add
test
push
out
mov
aam
out
mov
call
repz
mov
xchg
mov
jmp
shrl
scas
mov
and
pop
and
in
mov
jmp
add
rcl
stos
mov
cltd
push
jge
xor
repnz
pop
outsl
xchg
jmp
sbb
cmp
sub
in
cmp
and
loop
jmp
outsb
mov
sbb
and
pop
adc
popa
scas
xor
shll
mov
mov
push
mov
jg
push
xchg
jg
add
fnstenv
add
jbe
push
inc
adc
mov
dec
jmp
and
push
arpl
jo,pn
inc
pop
js
push
cmp
call
fsts
jmp
ja
push
dec
jb
xchg
pop
push
mov
sbbb
test
xchg
pop
mov
jbe
add
add
arpl
dec
loop
pop
mov
pop
mov
ds
mov
jge
xor
jno
pusha
lock
aad
sub
bound
pop
add
cmp
jl
dec
pop
and
bound
jecxz
enter
mov
scas
mov
dec
sbb
leave
ljmp
pop
pusha
push
mov
mov
pop
rcrl
and
mov
push
push
xor
jbe
dec
jbe
jb
fistps
out
fldenv
mov
jb
mov
cmp
mov
adcb
fs
fidivs
fs
adc
adc
mov
inc
je
pop
jle
dec
fidivrl
push
lret
iret
inc
lret
push
outsb
addr16
mov
jns
mov
push
mov
lret
adc
mov
in
loop
inc
fldenv
outsl
pop
imul
xlat
dec
lret
dec
dec
jmp
sbb
sub
ficomps
loop
cmp
je
push
jnp
dec
jl
rolb
dec
stos
adc
pusha
inc
xor
sub
cmp
fmul
adc
push
jnp
ljmp
stos
xor
and
andl
mov
cmp
enter
pop
lret
je
jl
test
adc
inc
mov
les
lods
add
xchg
out
mov
out
xor
sub
pusha
in
push
xlat
push
sub
push
adc
lret
je
sbb
je
and
out
ljmp
and
jecxz
ss
and
test
jae
mov
mov
mov
sub
ljmp
mov
std
xchg
cli
mov
into
cmp
loop
inc
fcmovnb
shlb
sbbb
and
mov
imul
sub
sbb
movsl
jb
sub
mov
addb
sbb
mov
jl
repnz
ljmp
lahf
pop
hlt
sub
mov
push
push
iret
inc
fwait
add
lcall
sub
cmp
arpl
loopne
jnp
fsubl
jnp
and
xor
in
jnp
outsb
shlb
jnp
xchg
incb
mov
jmp
cmpsl
or
ficoms
jo
pop
enter
jb
xor
lcall
inc
cmp
cmp
push
or
movsl
jg
lahf
rolb
pop
loop
pop
lock
mov
or
fisttps
cmp
pop
out
inc
ljmp
outsl
fldpi
fucomp
jnp
dec
loop
in
mov
dec
arpl
push
add
aas
sub
cmpsl
inc
dec
cmp
and
ret
xlat
fldenv
mov
xchg
hlt
sbb
fistpl
pop
dec
fwait
out
outsb
out
sub
hlt
dec
popa
mov
or
sbb
bound
stos
mov
ja
imul
or
push
mov
loopne
dec
cli
jl
xchg
mov
xchg
cmp
adc
movsl
aas
je
loope
jmp
sub
leave
inc
or
cwtl
dec
lcall
cld
loopne
sbb
sbbb
lock
dec
imul
imul
imul
lock
sbb
sbb
lret
adc
jp
repnz
sub
fistl
inc
scas
imul
jmp
inc
xor
mov
and
and
pusha
jecxz
cmp
lcall
daa
movsb
nop
adc
sub
jp
sbb
js
ljmp
cmp
add
cmp
jecxz
cmp
out
mov
data16
popf
push
dec
lods
fnstcw
add
leave
cmp
cli
icebp
stos
das
dec
sub
sbb
cmp
adc
sbb
sbb
jo
aas
inc
cmpsl
dec
mov
sbb
das
rclb
out
mov
lcall
iret
ljmp
lret
ret
cmp
mov
sub
pop
cmp
imul
jo
loopne
jae
fs
inc
and
inc
repnz
pop
lahf
sti
add
fcompl
mov
cmpb
call
xor
sbb
jae
pop
cs
and
stos
adc
jae
ds
fiaddl
push
ror
shlb
mov
pusha
sub
subb
and
les
lock
add
and
sub
push
mull
lcall
rolb
ret
aaa
mov
in
mov
addb
imul
imul
popa
mov
push
and
mov
dec
add
pop
pusha
add
stos
pushl
xor
rorb
pusha
jmp
mov
sahf
and
sti
js
xchg
sahf
pop
into
popa
sbb
imul
call
dec
arpl
imul
addr16
or
jae
je
inc
sub
lock
pop
lret
in
repnz
lret
jmp
clc
shrb
cwtl
shlb
cs
imul
lret
jmp
movsb
stc
popf
sub
push
lcall
lcall
outsl
fwait
adc
gs
sub
sub
sub
jo
pusha
ljmp
es
pop
or
inc
cs
stos
fwait
arpl
subb
mov
arpl
add
pop
and
iret
sahf
xor
pop
imul
adc
mov
push
inc
sub
push
lret
test
repnz
sub
sub
mov
int3
ja
out
push
jge
xchg
or
jmp
out
fnstcw
add
mov
mov
inc
cmp
imul
push
sbb
hlt
out
add
fiaddl
fwait
out
and
das
sbb
add
jg
push
and
xor
scas
lret
pop
sahf
hlt
cmp
add
sub
inc
jmp
xor
mov
cmp
out
push
jg
into
imul
mov
cmp
fistpll
test
movsb
xor
add
mov
inc
into
lock
pop
ds
popf
mov
or
out
jnp
dec
or
add
adc
js
and
sub
xor
popf
stc
lret
pop
sub
add
cmp
and
idivb
jle
stos
fsubs
mov
ds
aam
and
sub
stos
pop
cmp
jmp
add
dec
sub
xor
jbe
push
shl
add
pop
mov
negb
jne
push
sahf
mov
out
repz
jmp
testl
push
pop
push
enter
dec
repz
repnz
pop
pop
stc
or
mov
sub
or
dec
sbb
cmp
sub
pop
sarb
or
dec
dec
pop
and
sti
mov
pop
rolb
outsl
ret
xchg
mov
iret
jo
push
sbb
xchg
add
and
push
mov
or
sahf
or
das
inc
popa
add
pop
or
js
mov
mov
mov
loop
ja
jnp
out
mov
mov
sarb
shl
and
cmpb
and
cmp
and
mov
add
out
popa
vpsubd
xchg
shl
fiaddl
dec
and
add
mov
or
jg
das
out
pop
xor
sbb
popa
out
inc
je
lret
lock
lret
push
bound
push
sbb
jmp
and
mov
lret
mov
push
repnz
imul
mov
jg
stos
fdivrs
rorb
shrl
movsl
stos
call
mov
dec
mov
sub
dec
dec
xor
in
push
pop
pop
pop
cli
or
outsl
stos
mov
fwait
push
jl
shrb
xlat
aas
cmpb
push
push
mov
jnp
and
jecxz
test
fimuls
pop
hlt
loopne,pt
fcmovnb
pop
lahf
orb
out
inc
lock
fwait
jns
flds
adc
and
fistl
std
jnp
pop
push
xchg
pop
and
add
pop
lahf
push
pop
repnz
movsl
pop
mov
jo
add
mov
dec
div
aad
cmpsl
pusha
mov
out
bnd
std
jp
dec
push
jl
mov
sti
repnz
pusha
fiadds
repnz
cmpb
test
lock
stc
lret
xor
out
mov
fwait
add
mov
or
repnz
xchg
cmp
cli
enter
jmp
add
mov
shlb
aaa
xchg
dec
ret
jge
ja
in
popf
jnp
out
cld
shr
mov
mov
popa
stos
add
sbb
loope
repnz
push
add
mov
out
sub
rcrb
xchg
mov
test
aaa
mov
push
cmp
jmp
les
iret
bound
repnz
jp
andb
fimuls
push
mov
sbb
mov
loopne
incb
stos
jns
inc
iret
addr16
loopne
stc
add
fldt
mov
sub
sbb
mov
fs
out
pop
xor
ficoms
xchg
or
lea
scas
incb
std
loopne
xchg
mov
mov
lcall
fcmovb
push
jl
rclb
mov
sahf
lods
mov
xchg
ret
jp
cs
jne
clc
adc
pop
or
into
cmp
cltd
ds
shlb
and
xor
pop
inc
cmpsb
jp
hlt
cmp
pushf
mov
test
in
add
or
push
cmp
loope
pop
mov
xor
shl
jp
popa
xor
aas
fists
inc
jns
cmp
inc
outsb
fwait
and
sub
adc
mov
jae
out
adc
clc
cmp
sbb
dec
mov
lock
fcmove
xor
xor
out
cmpsl
leave
sbb
lcall
or
jb
fwait
and
insl
push
test
les
scas
adc
cs
test
loop
pop
ds
ljmp
data16
adc
loopne
imul
push
mov
rclb
loop
pop
repnz
xor
jb
fwait
dec
pop
and
mov
mov
pop
sub
mov
add
in
mov
mov
jmp
sbb
int3
xchg
and
xchg
jmp
and
push
or
dec
loopne
mov
mov
loopne
js
shlb
cmpsl
sbb
pop
dec
cmp
ljmp
xor
inc
ljmp
leave
inc
dec
inc
adc
push
dec
sbb
xchg
sbb
and
int3
push
sub
ds
shrl
and
cmp
inc
pop
enter
sub
in
bound
inc
sub
xor
push
xor
imul
jp
test
fsts
cmp
fiaddl
dec
adc
cs
jp
mov
cmpsb
dec
xor
dec
inc
xor
pop
js
es
aas
xchg
sub
imulb
fldt
pop
sub
dec
mov
adc
cwtl
fcoml
fmull
in
imul
mov
ret
xor
in
dec
sub
push
scas
jg
inc
lret
or
sbb
ljmp
or
fdivl
cmovb
pushf
idivl
stc
inc
add
xorl
icebp
mov
mov
dec
mov
ret
and
in
push
jmp
and
jp
cmp
cmpb
call
dec
nop
inc
push
pop
pop
add
cmp
pop
sarb
pop
call
cli
sbb
cmpb
ret
push
bnd
pop
jle
cwtl
lret
adc
xlat
dec
aaa
out
inc
sar
inc
dec
cmpsl
pop
jle
dec
data16
sbb
cmp
inc
repnz
or
fwait
addr16
lock
aaa
push
and
loope
add
jns
in
imul
fscale
sti
xor
cwtl
dec
mov
out
and
loope
add
ss
arpl
cmp
and
cmp
inc
stos
dec
shrb
stos
test
out
icebp
icebp
test
addr16
ja
jmp
icebp
push
inc
cmc
mov
sti
sub
or
add
inc
sbb
fcmove
mov
xor
stc
add
add
pop
dec
fiaddl
jae
and
leave
aam
leave
nop
pushf
nop
mov
pop
or
mov
ret
add
xor
fmull
adc
jnp
je
sbb
test
mov
push
sti
add
dec
hlt
aam
out
das
popf
stos
movsl
jnp
inc
out
ljmp
das
mov
mov
sub
sti
imul
cmc
aas
push
les
sub
pusha
sarb
inc
cmc
or
rcl
fwait
rorb
adc
adc
sub
pop
jb
or
push
pop
outsb
nop
dec
adc
jns
mov
stos
test
sbb
inc
inc
dec
mov
xlat
adc
lret
mov
cmp
pop
les
lret
push
rclb
add
sbb
into
add
mov
sbb
xchg
bound
in
in
nop
insl
stos
pop
mov
or
out
mov
imul
push
jecxz
cmp
jae
sub
mov
cmpl
lcall
subb
mov
sbb
or
ja
inc
stos
jecxz
pop
outsl
pop
imul
stos
jns
sbb
mov
shrl
fwait
push
js
push
pop
in
lcall
into
sahf
ja
mov
and
add
push
mov
and
push
jnp
and
leave
inc
jl
xchg
mov
out
sbb
je
hlt
and
aas
jnp
ret
sbb
mov
push
inc
pusha
fistl
adc
lret
push
aas
pop
stc
stos
fwait
movsb
mov
shll
loope
daa
cmp
jo
jge
das
rcl
fwait
add
add
jae
stos
dec
pop
movsb
mov
push
xor
or
and
jbe
sub
inc
jecxz
call
test
xor
bt
mov
cli
mov
xlat
out
orb
jnp
xor
mov
jae
addr16
lret
sbb
push
out
dec
mov
ret
pop
aam
xor
pop
stos
cmp
push
push
repnz
cmp
call
add
std
stos
and
add
pop
ss
lcall
adc
orb
mov
xchg
cmp
xchg
sub
nop
jns
jle
sbb
xchg
adc
xor
outsl
cmp
pop
cmp
mov
pop
adc
out
addl
mov
fsub
mov
mov
fistps
stos
dec
inc
cmpb
and
lret
pop
push
lcall
test
pop
xchg
out
mov
xor
inc
push
hlt
lcall
sub
inc
pop
mov
mov
mov
sbb
jae
jp
or
aas
out
ret
push
fmuls
dec
pop
outsb
sbb
inc
mov
mov
je
cltd
inc
int3
fwait
sbb
lea
test
jbe
push
pop
fwait
test
sbb
push
mov
je
push
test
bound
rcr
adc
mov
sbb
sub
xor
js
push
or
sbb
pop
aam
mov
ficompl
pushw
aas
mov
cld
sbb
lcall
jmp
push
imul
push
sbb
sbb
pop
or
xor
mov
out
cmp
dec
into
outsl
adc
rol
cli
adc
out
inc
push
fmull
mov
sbb
xor
out
and
jbe
lret
fistpll
pop
es
pop
inc
mov
sbb
inc
cli
daa
fwait
dec
std
sbb
mov
mov
into
mov
pop
imul
jg
push
repnz
pop
sbb
adc
outsl
cmp
aam
jmp
addr16
fisubrs
outsl
aaa
push
rclb
out
and
fnstcw
int3
or
sub
jmp
cs
push
jmp
mov
fmulp
sbb
arpl
push
out
add
sbb
sbb
jno
adcl
adc
insl
fwait
cmp
adc
test
add
nop
sbb
inc
pop
xor
loope
push
or
fidivrs
jns
mov
enter
repz
cs
jecxz
or
adc
pop
dec
ljmp
and
xor
sub
lods
xor
sarl
test
add
mov
int3
call
pop
sub
cltd
das
test
popa
pop
into
adcl
sti
int
jnp
out
test
dec
in
jecxz
sub
and
xor
and
popa
aas
stos
adc
bnd
je
mov
scas
daa
jecxz
jnp
hlt
mov
shrb
cmpsb
adc
addb
cmpsl
imul
shl
sub
jmp
mov
mov
clc
adc
out
test
jae
dec
cmpsl
mov
cmpsl
add
repnz
loope
ret
fcomps
and
lret
xor
aas
or
and
addl
stos
cmp
fwait
push
and
xor
add
fidivl
dec
test
sub
pop
test
jmp
das
sub
aas
bound
imul
pop
imul
icebp
pop
je
enter
or
xor
jb
movsb
adc
cmp
cmp
mov
mov
push
push
mov
cwtl
sub
pop
xchg
or
outsl
repz
mov
jl
outsl
dec
mov
fbld
pop
insl
iret
xor
ret
fistpll
fsubs
xor
mov
divb
sbb
call
fistl
aaa
cld
rcrl
pop
lret
ror
or
mov
xchg
ret
in
repz
les
stos
sub
jmp
stos
push
cli
sbb
sti
ss
ljmp
or
and
lret
ljmp
mov
test
pop
fidivrl
repz
nop
inc
jmp
shrl
shrl
dec
lahf
scas
cmp
mov
lret
mov
sub
test
ljmp
add
test
jmp
cld
xor
les
sti
imul
dec
hlt
jge
cmpsb
mov
dec
cmpsl
dec
mov
lcall
inc
lock
mov
mov
inc
cmp
jmp
aaa
dec
mov
mov
ja
cs
stos
cmp
inc
ljmp
hlt
sbb
xlat
sub
int3
sbb
jmp
arpl
lret
mov
int3
lret
lcall
loop
out
mov
sub
inc
xlat
jns
rol
fs
pop
not
int
repnz
mov
out
push
push
jp
push
mov
arpl
les
mov
cmpsb
sbbb
andl
es
inc
pusha
cmp
cmp
mov
dec
je
repz
jmp
ret
cs
sub
mov
mov
cmp
out
pause
and
push
sub
into
fwait
sub
arpl
out
icebp
mov
adc
and
sbbl
lock
xor
int3
xor
and
mov
inc
stc
loop
mov
clc
negl
pop
fistpll
jnp,pt
fisubrl
mov
divb
mov
sub
and
mov
inc
shrb
clc
xchg
add
rolb
mov
jb
xor
fdivl
pop
je
out
and
adc
add
test
stos
cli
out
mov
imul
sub
xchg
sbb
mov
xor
and
ja
ret
sub
ret
js
ret
mov
mov
and
jae
xchg
mov
dec
or
js
mov
and
idiv
sub
decl
mov
cmp
xor
push
and
cmp
add
sarb
cmp
in
mov
sbb
cmp
jg
inc
or
or
mov
int3
or
mov
sub
pop
push
repz
cmp
fiaddl
mov
mov
out
push
stc
jecxz
xor
mov
aas
sbb
or
push
sub
cmp
sub
xchg
or
imul
test
mov
test
in
dec
pop
pop
push
fldenv
mov
fwait
cmp
repz
test
stos
pop
enter
lret
cmp
dec
pop
mov
sub
sbb
mov
or
mov
call
push
mov
repz
shl
mov
sbb
inc
aas
mov
inc
loopne
test
sub
adc
and
adc
repz
mov
arpl
cmc
inc
adc
ret
sub
test
mov
pusha
addb
mov
pop
and
mov
jae
add
sub
mov
sub
cmpsb
into
imul
jg
and
push
or
ja
outsb
push
add
lods
lods
mov
sbb
ret
cld
arpl
mov
jmp
mov
loop
test
xor
cmpsl
lock
ja
ss
test
push
movsb
cli
push
push
arpl
out
bound
ret
jo
scas
sti
jg
imul
inc
mov
add
pop
jg
scas
adc
sbb
and
inc
subl
outsl
sar
out
xlat
jg
mov
xor
mov
into
fists
dec
xor
inc
and
push
pop
and
mov
movl
push
ret
test
mov
into
lret
fld1
mov
xchg
dec
int3
cmc
and
repnz
mov
mov
cmp
ret
cmp
sbb
imul
push
cmpsl
icebp
inc
dec
add
shll
cld
repz
into
ja
push
daa
dec
add
inc
push
arpl
in
loop
enter
jnp
enter
xchg
es
repnz
loopne
shl
inc
outsl
or
mov
xchg
mov
jmp
pushf
inc
jmp
mov
cwtl
daa
lcall
mov
sub
mov
addr16
loope
dec
cmpsl
inc
test
in
xchg
mov
pop
mov
jnp
adc
pusha
and
sbbb
pop
idivb
bound
das
aam
cmp
add
in
cmpb
sbb
cmp
and
jmp
push
mov
cmp
fwait
or
cmc
dec
xor
pop
push
outsl
xor
jge
pop
rorb
mov
cmp
xor
aaa
inc
imul
rorb
cmp
mov
out
rorb
dec
adc
and
mov
mov
sub
sbb
xor
sub
add
mov
into
mov
loop
mov
mov
xchg
jae
or
jle
aas
add
and
and
add
add
add
push
xchg
fwait
into
push
daa
ret
loope
ds
mov
js
repz
mov
jmp
call
orl
lret
sar
xlat
sub
shlb
jmp
jns
test
adc
sbb
pop
push
sub
push
aam
and
inc
cld
adc
cmc
mov
sbb
out
scas
rcrb
insb
ficompl
add
jge
and
push
inc
mov
sti
or
jmp
or
add
ret
cmp
lahf
adc
outsl
mov
ret
sub
ret
mov
les
ficompl
movsl
jo
arpl
shrb
cmp
shr
push
iret
imul
mov
mov
mov
mov
mov
xor
stos
mov
push
inc
and
popa
mov
sbb
add
imul
inc
push
sbb
mov
test
or
out
imul
xchg
out
mov
fdivs
icebp
aam
fstp
xchg
rol
rolb
dec
lods
adc
cmp
aaa
pushf
and
out
mov
mov
mov
roll
aaa
adc
cwtl
xor
jmp
imul
xchg
push
adc
lret
outsl
enter
xlat
sub
mov
and
jno
pop
popf
add
rdmsr
dec
popf
orb
sub
inc
xor
adc
cmp
mov
je
popf
pop
xchg
shll
or
pop
dec
cwtl
mov
test
mov
or
sub
dec
sti
addr16
cld
imul
lods
adc
cltd
xor
add
lock
ret
test
mov
dec
mov
sbb
arpl
outsl
cmpsl
inc
inc
sub
jle
push
mov
lret
inc
mov
sub
xlat
adc
sbb
inc
pop
shl
jns
xchg
jmp
ffreep
mov
ret
mov
add
adc
jmp
lock
jle
mov
sub
nop
lcall
ret
and
sbb
and
and
das
insl
inc
inc
or
cmp
cmp
das
sbb
and
or
ret
nop
pop
adc
pop
push
daa
sarb
push
andb
push
icebp
fwait
cmp
aam
rol
mov
and
jmp
mov
dec
cmp
add
fidivrl
ret
cmp
lahf
out
mov
cmp
inc
sub
call
xchg
into
es
outsl
repnz
rolb
pushf
arpl
enter
dec
cmp
mov
scas
mov
and
mov
mov
jge
push
test
dec
cmpsl
sbb
enter
adc
mov
mov
sbb
adc
loope
insl
push
add
rcll
mov
jo
lcall
jmp
notl
jno
idivl
sub
sub
test
lock
into
mov
mov
lahf
sarl
inc
ret
pop
nop
test
das
adc
testb
mov
js
notb
inc
out
std
cmpsl
jecxz
subb
rolb
sbb
dec
add
adc
inc
push
fwait
pop
and
clc
push
lods
sbb
sub
cmp
mov
cli
daa
xor
mov
dec
mov
repnz
inc
xor
mov
popa
pushf
pop
in
jmp
and
into
xor
push
int
cmp
ret
orb
into
movsb
subl
sbb
inc
call
fiadds
sub
imul
add
jmp
mul
and
jecxz
jle
pop
sbb
or
adc
bnd
adcb
sbb
push
andb
cmpb
repnz
cmp
ficomps
mov
lods
rolb
daa
clc
dec
dec
das
rcrb
shl
pop
mov
popa
add
cli
inc
add
mov
cmp
cli
scas
mov
std
ds
inc
mov
into
dec
outsl
mov
or
outsb
xchg
mov
or
push
out
cli
jbe
or
fiaddl
push
pushf
and
push
lock
jae
mov
xchg
inc
xor
inc
lods
dec
cwtl
jle
xor
testb
cmp
push
dec
inc
mov
cmp
mov
add
shll
inc
cmc
cwtl
hlt
jle
add
idivb
dec
lahf
xchg
and
call
jge
cli
ret
cmc
dec
test
jmp
daa
inc
popa
sbb
cmp
in
sub
mov
lods
adc
sub
push
push
iret
add
outsl
data16
leave
jmp
add
jmp
pop
test
int3
jae
cmp
xchg
push
into
cmp
push
test
or
stos
imul
mov
test
mov
cmp
xchg
mov
ds
xor
out
fsubrs
test
adc
and
mov
cmp
es
in
dec
or
or
seta
push
adc
xchg
xchg
mov
pop
mov
xchg
bound
adc
mov
mov
js
xchg
js
or
inc
inc
jge
sbb
jns
cmp
dec
cmp
jns
mov
push
mov
js
out
repz
pop
rep
lret
rcll
push
es
dec
lcall
in
xchg
cmp
mov
pop
enter
jp
xchg
add
cltd
ret
mov
and
cmp
aam
shlb
cmp
cmp
clc
adc
pop
inc
mov
sbb
lret
inc
mov
push
add
mov
in
rolb
daa
and
aam
and
ret
mov
hlt
pop
cmp
shll
adc
adc
test
xchg
ret
lods
or
mov
stos
stos
lea
push
outsl
or
pop
imul
sub
and
and
xor
ret
test
int3
ret
cmp
pop
jmp
jmp
mov
mov
hlt
mov
push
les
mov
cmp
sub
aas
arpl
mov
add
stos
loop
inc
pop
sub
fidivrl
add
adc
push
rcll
push
inc
push
cmp
cmovo
das
call
mov
adc
cltd
nop
shlb
clc
int
rorb
cli
push
xor
call
pop
stos
xor
imul
and
push
jle
pop
sbb
xchg
loop
fldl
das
insl
addb
jge
cmp
mov
das
xor
add
xor
mov
mov
jle
and
add
test
sbb
push
xchg
call
xchg
in
lock
ret
mov
push
cmp
mov
xchg
cmp
pushf
inc
bound
sub
fstpt
cmp
loop
scas
pmovmskb
ret
scas
cmp
inc
xor
rolb
inc
pop
or
mov
inc
cmp
sub
cwtl
xchg
sub
ret
push
cld
xchg
inc
test
and
xor
jmp
aad
enter
lret
inc
mov
xchg
aas
pop
ss
aam
mov
push
or
outsl
adc
cmp
or
mov
fists
and
pop
int3
and
xor
adc
push
sarb
aas
adc
adc
mov
push
stos
cmp
jle
fsubs
sub
inc
les
sar
pop
cmp
aam
adc
and
xchg
cmp
xchg
mov
into
mov
mov
and
or
adc
inc
jecxz
scas
movsl
mov
jmp
sub
mov
cmp
inc
pop
jae
push
dec
inc
lret
pushf
insl
mov
or
negb
clc
inc
sub
pop
inc
out
mov
sar
pushf
xor
push
mov
pop
out
cltd
dec
aad
or
call
ret
cmp
arpl
lret
mov
outsb
ja
add
xor
pop
lret
adc
mov
cwtl
or
pop
out
and
xor
jg
cli
lock
xor
ljmp
jle
mov
and
loope
cmp
roll
ljmp
sbb
xor
lret
cltd
enter
out
cmpsl
js
sub
xchg
ret
pop
add
call
cmpsl
adc
in
rcl
xlat
inc
in
xchg
xchg
jns
xor
mov
dec
loope
lret
negb
nop
push
jle
xchg
daa
pop
jmp
xor
movsb
jmp
testb
push
incl
rclb
push
xchg
aas
mov
inc
xor
adcl
ljmp
out
mov
mov
je
and
xor
sub
popa
jmp
mov
jae
dec
or
dec
mov
cmp
jnp
sbb
sbb
push
and
scas
xchg
out
sbb
jmp
dec
jne
xchg
xor
outsl
sub
xchg
add
pop
fcompl
mov
movsl
ret
xlat
inc
push
fcmovb
pop
fcmovnb
push
xor
pop
cwtl
lock
outsb
mov
inc
ja
inc
fiaddl
adc
sbb
inc
inc
lds
add
mov
jb
and
aad
xchg
and
xchg
mov
adc
mov
das
roll
out
stos
xor
pop
sbb
fwait
pop
arpl
test
aad
mov
sbb
nop
dec
dec
pushf
inc
jp
lock
mov
jne
cmc
cmp
sbb
repnz
xor
clc
mov
push
xchg
testb
mov
xchg
cmpsb
adc
mov
mov
mov
enter
scas
mov
call
inc
popl
daa
mov
mov
mov
dec
cmp
pushf
out
leave
add
xchg
negb
cmpl
ret
jle
sbb
xor
repz
and
test
push
call
push
inc
and
insl
jmp
int3
test
mov
mov
mov
bound
addr16
imul
push
push
subb
shr
enter
adc
jne
inc
jmp
adc
or
ret
pop
clc
arpl
mov
inc
rcrl
mov
ja
xor
jns
mov
xor
mov
push
xchg
in
pop
fcoms
sub
pop
nop
adc
add
test
js
add
cmp
aas
pop
or
daa
xchg
mov
repz
out
mov
lods
xchg
xchg
aas
mov
test
add
jp
subl
test
iret
jno
imul
loop
cmc
cwtl
xchg
fst
mov
cmp
jb
roll
aaa
cmp
jns
jp
and
mov
xor
or
fxtract
sbb
adc
cli
adc
mov
mov
adc
imul
pusha
das
and
dec
sbb
cmp
in
fdivrs
cmp
xchg
mov
loope
in
push
inc
jne
mov
xor
lahf
mov
nop
cmp
cmp
or
xorl
cmp
adc
lret
mov
xchg
and
xor
mov
mov
mov
std
mov
movsl
nop
jmp
loope
inc
mov
test
mov
loope
scas
outsl
jmp
xchg
push
add
xor
xchg
inc
mov
inc
add
cwtl
cwtl
fs
stos
mov
nop
stos
mov
and
xor
cmp
sbb
scas
pop
push
int3
pop
xor
or
pop
std
out
add
sub
xor
lock
mov
icebp
enter
lret
and
lds
call
call
pop
sbb
roll
popa
inc
test
mov
add
movsl
ljmp
inc
fldt
fiaddl
mov
ror
popf
jns
adc
mov
rcrb
mov
add
adcl
adc
lods
loope
xlat
mov
stos
dec
add
adc
mov
mov
mov
jmp
das
fcmove
mov
adc
mov
fimuls
push
xchg
ret
rcrb
shlb
mov
add
mov
adc
xchg
iret
test
pushf
insl
lret
adc
or
sub
sub
sbb
or
loope
inc
sub
daa
push
push
mov
scas
mov
jno
pop
mov
cmp
adc
loopw
mov
sub
cmc
aas
scas
dec
cmpl
push
mov
and
mov
cwtl
and
and
and
dec
push
and
jmp
inc
divb
insl
sbbb
adc
inc
xchg
rolb
or
mov
subl
inc
hlt
mov
mov
test
xchg
xor
jmp
adc
icebp
cmp
adc
call
sub
jae
lock
push
jp
fstps
orl
loope
iret
dec
aam
xor
xor
inc
mov
repz
lahf
mov
test
sub
inc
or
pushf
shlb
add
sbb
dec
int
call
mov
mov
mov
xchg
add
mov
out
dec
in
shlb
aas
add
cmp
dec
cmp
mov
cli
sbb
sbbb
mov
lret
jmp
fldenv
fadds
dec
cmp
xchg
sbb
inc
push
xor
loope
cs
inc
test
sub
add
aas
aaa
lock
je
repnz
mov
in
cltd
ror
aaa
push
repnz
mov
pop
and
pop
into
or
leave
loope
dec
xchg
icebp
lea
push
out
mov
sbb
mov
in
xchg
or
ret
je
and
adc
cmp
mov
add
sub
fmull
stos
mov
mov
mov
mov
or
xchg
sahf
fwait
pushf
xlat
add
mov
mov
into
dec
dec
xchg
aam
mov
pop
add
xor
enter
sbb
xorb
cmpsb
lcall
lahf
ficoml
mov
inc
or
enter
jnp
cmp
mov
testb
rdpmc
xor
nop
xchg
mov
es
lcall
scas
in
lret
in
call
stos
popf
add
int
mov
adc
ret
fldl
stos
or
xlat
mov
dec
xchg
mov
and
jnp
or
xchg
cmp
es
sbb
push
and
sbb
jnp
ret
sub
lcall
js
ds
mov
stos
jae
sub
or
xchg
dec
sbb
out
mov
pop
add
xchg
mov
je
jmp
xchg
mov
pop
dec
mov
push
je
adc
sub
jnp
inc
xor
notb
mov
mov
and
pushf
lahf
xchg
jmp
xor
dec
mov
test
stos
add
test
push
dec
xorl
sbbl
loop
shlb
pop
scas
mov
push
mov
sbb
adc
add
mov
dec
cmpsl
or
jne
fsubl
jecxz
imul
push
int
xchg
ret
loope
and
or
push
addb
dec
sti
inc
into
jb
xchg
cmc
adc
call
test
mov
fadds
ret
cld
mov
shl
xor
cwtl
adc
pop
lcall
shl
xchg
push
or
mov
jge
mov
mov
subb
or
shrb
loop
stos
xor
das
cmp
xor
xchg
cld
inc
sub
add
sbb
mov
movq
adc
es
test
cwtl
lret
xor
mov
shlb
cli
fwait
outsb
mov
add
imul
lods
rcrl
jo
adc
sbb
fwait
jle
mov
ret
sarl
movsb
dec
jmp
cmp
jmp
int3
in
call
lret
sub
aas
stos
imul
jmp
jnp
loop
push
not
mov
repz
sub
or
jmp
cld
dec
mov
xchg
sub
clc
jno
clc
inc
sbb
fwait
pusha
call
lret
add
int3
adc
xor
mov
test
cmpsl
fmuls
call
add
sbb
mov
adc
inc
das
ss
mov
mov
into
xchg
or
fdivr
sub
or
xchg
jge
out
movsb
xor
ret
jo
xlat
xor
lds
mov
xor
testb
punpckhwd
call
push
cmpsl
leave
and
cwtl
mov
push
dec
pop
and
les
movsl
pop
jl
adc
xchg
jmp
xor
dec
mov
sti
inc
lcall
xor
sub
lret
cmc
lret
loope
jne
add
inc
sub
test
stos
stos
or
adc
mov
fwait
subl
jmp
mov
sbb
pop
sbb
ret
imul
outsl
sub
stos
popa
jle
xchg
xchg
mov
and
mov
scas
popf
dec
outsl
lahf
lea
sub
push
cmc
cli
xchg
pop
loope
mov
jp
and
scas
in
jo
xchg
lahf
loop
jo
imul
dec
jns
aam
jle
ret
and
cmp
lock
lds
inc
rorl
mov
into
int
lods
hlt
adc
jmp
sbbl
xor
jns
jle
mov
xchg
outsl
fwait
orl
or
and
testl
nop
adc
xor
rclb
fldcw
inc
scas
xchg
or
pushl
aaa
ljmp
lock
xchg
arpl
repz
add
aam
mov
cmp
sub
loopne
mov
repz
jns
lret
shll
pop
nop/reserved
ficompl
add
sarb
clc
clc
push
test
xchg
jg
push
gs
add
inc
and
ljmp
sub
xor
push
ljmp
sub
mov
xchg
mov
loop
clc
and
call
xorb
shlb
sub
and
mov
out
nop
mov
mov
jg
inc
xor
fwait
cmp
adc
mov
xchg
jecxz
sbb
xor
shl
xlat
jnp
loopne
cmp
stc
pushf
rep
getsec
mov
xchg
cld
jecxz
mov
ret
xchg
and
negb
and
into
sub
test
fstpt
shr
inc
cld
xchg
lea
push
and
add
pop
into
mov
add
fiaddl
dec
aas
jecxz
and
adc
idiv
mov
adc
mov
mov
cmpsl
fdivs
and
das
cmc
sbb
mov
mov
xchg
out
jmp
into
mov
sub
fcompl
out
hlt
pop
sbb
rol
and
fstpt
and
in
jno
jl
repnz
aaa
aad
lock
jp
loopne
jge
mov
xchg
lock
add
imul
or
mov
sbb
cmp
fwait
dec
cmp
or
adc
sbbl
add
inc
mov
loop
sti
xchg
shl
arpl
and
xchg
and
shlb
ja
sub
cmpl
xchg
push
roll
mov
lock
xor
shrl
sub
mov
adc
mov
or
xor
pop
pusha
and
lds
mov
xchg
jp
xchg
push
cmp
aaa
and
repz
addb
mov
stos
add
test
vpackuswb
add
cmp
inc
int
jno
inc
sub
xchg
imul
jnp
test
xchg
lock
jb
movsb
mov
arpl
inc
add
push
les
jne
aas
out
stos
add
stc
mov
testl
sbb
std
fwait
and
inc
test
imul
iret
and
movsb
xchg
inc
jg
jmp
addr16
push
push
xchg
clc
ficoml
and
sbb
xchg
shlb
sub
cld
mov
or
icebp
cmp
mov
adc
xor
cmp
sub
adc
xchg
xchg
pop
lds
idiv
mov
xchg
lea
mov
lock
cmp
out
das
dec
mov
xlat
xchg
adc
and
adc
mov
inc
pop
inc
sarl
mov
pop
int
test
mulb
or
scas
imul
xchg
and
mov
ret
or
cmp
or
xor
xchg
stos
xor
clc
pop
sub
sbb
por
mov
mov
pushf
call
jo
ljmp
ds
xchg
repz
nop
mov
pop
push
imul
mov
jmp
cmpsl
cwtl
mov
mov
ror
xchg
int
jge
call
and
sbb
mov
xlat
add
mov
pop
insl
sbb
repz
xchg
and
inc
xchg
cmp
push
mov
fistl
mov
xor
fmull
sbb
or
cmp
cmp
inc
sbb
inc
cmp
call
lock
lret
xchg
and
lock
mov
clc
inc
dec
shl
rcr
ret
lret
sbb
addb
and
xor
cltd
pop
mov
stos
sbb
repnz
pop
clc
xorb
sti
cmp
mov
jl
inc
mov
int
sub
fwait
call
cmc
lret
dec
or
xor
outsb
vrsqrtps
lods
dec
dec
rclb
add
sub
mov
inc
mov
cmpsl
imulb
addr16
jno
dec
add
nop
daa
jmp
push
add
lret
sub
mov
mov
rclb
xchg
pop
sti
mov
fbstp
enter
adc
outsl
lret
hlt
in
lret
mov
inc
xor
lods
jb
leave
loop
in
dec
sub
bound
and
test
lahf
jecxz
inc
or
test
pop
jmp
clc
shr
fxtract
mov
mov
adc
push
pop
ja
addb
push
push
pop
jns
int
sub
lret
sub
lret
dec
fs
pop
fsubr
inc
xor
xchg
loope
xor
or
sub
push
jp
hlt
jecxz
or
test
pop
adc
fmull
clc
hlt
xor
bound
inc
mov
cwtl
into
out
add
cmp
cli
xchg
cmp
test
icebp
inc
daa
jae
pop
fucomp
ret
sbb
pushf
jns
push
es
pop
dec
push
in
mov
mov
popf
xchg
jp
aam
pop
cmp
lcall
mov
or
test
mov
mov
dec
jb
test
add
ljmp
rol
ret
mov
inc
mov
rclb
mov
xor
mov
adc
inc
jg
xchg
jle
lock
inc
test
pop
hlt
arpl
pop
add
sbb
loope
hlt
aad
jo
int3
loope
loope
testl
jmp
out
mov
add
inc
aas
das
test
sbb
ljmp
hlt
xchg
loope
sub
jo
out
mov
jmp
mov
adc
push
bound
fmul
mov
pushf
outsl
rcr
loopne
das
push
push
dec
inc
dec
cmpsl
imul
lcall
into
das
push
push
cmp
roll
ret
out
mov
cmp
aad
mov
or
sahf
pop
lcall
lret
pop
popf
inc
syscall
mulb
std
mov
aas
pop
cmp
dec
test
out
jmp
test
sub
xchg
mov
jnp
out
iret
int
clc
adc
jns
aam
lahf
pusha
mov
add
dec
dec
mov
push
mov
mov
mov
inc
adc
add
shll
rcr
add
dec
faddl
mov
mov
icebp
mov
jp
xchg
mov
mov
std
cli
ret
mov
test
pop
mov
push
pop
shlb
push
mov
inc
xor
jnp
out
repnz
dec
xor
cmp
enter
and
jle
jmp
and
scas
mov
cwtl
xchg
pop
rclb
sbb
sub
repnz
arpl
test
mov
repnz
cmpb
pop
pmullw
test
lcall
mov
pop
fdivrs
hlt
push
movsl
mov
and
leave
int3
inc
test
mov
test
fcos
jnp
movsl
popa
adcl
sbb
sbb
aam
jecxz
pop
inc
mov
cli
mov
mov
cmp
jle
jmp
cmp
cmc
xchg
xlat
daa
push
cmpb
arpl
les
out
push
sbb
in
push
js
xchg
cmp
xchg
sub
test
stos
or
mov
add
dec
xchg
test
sbb
fcmove
cwtl
add
mov
inc
jns
pop
std
bound
or
jns
mov
mov
rolb
adc
push
int3
int
mov
xchg
fdivl
lock
jb
leave
inc
les
sub
testb
inc
sbb
testl
test
and
mov
sub
shrb
inc
xlat
xor
inc
lea
lock
mov
loope
jle
cmp
testb
jo
in
enter
insl
mov
xchg
xchg
fiaddl
movsb
test
lods
test
add
rcrl
into
ss
jle
mov
fsubl
shl
or
cmp
add
mov
subl
pop
test
jne
and
test
pusha
inc
mov
push
mov
add
enter
mov
cmp
les
mov
aaa
cmc
push
ror
in
and
xor
mov
adc
cmp
fs
imul
jmp
cmp
fidivs
std
cmpsb
inc
add
ret
outsl
pop
imul
jecxz
and
inc
lock
adc
out
mov
ja
push
xor
mov
cmp
scas
insl
aaa
fcom
loope
stos
adc
xchg
mov
insl
jp
pop
xchg
out
sbb
jge
ret
or
xor
cmpsl
repnz
test
jle
inc
hlt
mov
xor
ljmp
pop
test
rorb
pop
mov
add
cmp
jge
or
push
lods
mov
cmpsl
aaa
mov
sbb
pop
cmp
icebp
repz
into
loopne
lods
pop
xchg
aam
xchg
aam
mov
adc
scas
sbb
sub
aam
pushf
std
bound
dec
test
icebp
xlat
movl
mov
xor
repz
mov
aad
in
mov
cmp
sbb
add
cmp
fcompl
fisubrl
lock
lret
orl
mov
lods
ss
xchg
popa
adc
xchg
testb
mov
mov
mov
inc
or
add
into
xchg
cmpsl
dec
or
xor
inc
inc
ss
adc
loope
mov
icebp
adc
inc
or
push
lea
lock
cld
shrl
sbb
mov
push
xchg
sbb
push
mov
cld
pusha
test
adc
imulb
mov
add
cmp
mov
pop
or
les
loop
popa
xchg
add
adc
ret
outsl
filds
into
pusha
mov
pop
jp
hlt
in
xchg
rcr
mov
jmp
imul
jecxz
outsl
int
adc
call
push
fdivs
ret
push
adc
fwait
mov
push
dec
fwait
movsl
or
lock
adc
pop
mov
dec
mov
sub
pmaxsw
pop
inc
sub
add
in
out
lret
sbb
jnp
cmpsl
add
xor
fiaddl
pop
cmp
hlt
xor
add
mov
push
mov
mov
out
xor
stos
imul
or
arpl
pushf
xor
dec
inc
shlb
cmp
add
enter
cmpb
mov
dec
or
sub
xchg
mov
or
sub
mov
dec
adc
fistpll
mov
cmp
cmp
jb
mov
mov
lods
cmc
mov
xchg
cmp
push
ljmp
xlat
cmp
sub
test
fcompl
sbb
jmp
cwtl
in
std
jp
xchg
xchg
push
xor
aad
andb
loope
mov
rcrl
jns
xor
cmp
push
and
xor
aam
sbb
stos
lcall
lock
lcall
fisttpl
pop
cmpl
sbb
fcoms
xchg
cwtl
cmp
push
sarl
mov
enter
jge
pop
sub
push
push
sub
out
scas
out
jmp
sub
and
mov
sbb
movsl
lret
cmp
movsl
mulb
sbb
dec
in
mov
pop
xor
in
xchg
dec
sub
or
and
dec
testb
push
dec
test
ret
scas
sub
mov
mov
jnp
add
mov
scas
jmp
add
or
push
add
mov
je
out
stos
into
push
sub
inc
and
int
cltd
in
mov
jae
repz
aad
push
imulb
maskmovq
divl
sbb
adc
xor
and
cmp
dec
xlat
ret
arpl
sub
scas
hlt
adc
mov
mov
jmp
push
and
sbb
andb
pop
jp
das
mov
sub
mov
sbb
push
std
outsb
incl
dec
lock
pop
cli
aas
stos
mov
cmpsl
adc
and
push
cmp
add
push
pop
pop
std
sbb
jb
push
push
mov
fs
jl
jnp
divb
jg
andb
addb
jl
dec
xchg
pop
xchg
sub
cmp
or
sbb
in
xchg
cld
xchg
int3
xchg
fcoml
mov
jne
inc
xchg
push
xchg
and
xchg
adc
fldenv
les
jg
jmp
mov
push
out
xchg
gs
jnp
and
jg
jmp
mov
cmpsl
mov
sub
in
andl
xchg
gs
and
dec
movsl
sbb
push
movsl
add
xchg
movsl
mov
xchg
push
jmp
stos
cltd
jg
pop
jp
mov
mov
mov
mov
mov
mov
jg
push
xchg
mov
shl
pop
adc
fs
mov
cmp
cwtl
dec
addr16
pop
sub
loopne
jnp
jmp
jg
push
sbb
out
mov
xchg
scas
xchg
jg
mov
aas
xchg
dec
xchg
pop
xchg
das
xchg
call
out
xchg
mov
xchg
scas
xchg
adcl
xchg
inc
xchg
push
xchg
and
xor
add
adc
in
hlt
xchg
les
push
xchg
mov
cld
sub
sub
fisttpll
push
ja
neg
ja
idiv
jl
cld
movsl
inc
sbb
cmp
jmp
push
mov
pop
lea
scas
or
pop
mov
and
mov
jle
add
out
push
xchg
mov
dec
cmp
test
pop
xchg
fisttpll
repnz
ja
mov
mov
xchg
pusha
xchg
mov
popa
jl
and
xor
push
not
ja
mul
mov
xchg
mov
aam
dec
cmp
jg
and
or
rorb
jle
jmp
lock
jns
cwtl
jp
jg
xlat
mov
cmpsb
pop
cmp
lods
mov
loopne
jg
popa
xchg
xchg
jmp
fmuls
jbe
cmp
jbe
mov
out
or
cmp
mov
push
jnp
ljmp
push
cmp
fisttps
daa
fcomps
or
mov
in
stos
lods
andb
pop
fstps
inc
jmp
rcrb
push
xchg
mov
sbb
in
aas
leave
mov
xchg
cmp
pop
xor
push
ret
xor
sahf
bound
lcall
stos
jl
cld
arpl
cmc
sbb
aaa
cmc
adc
out
cmc
shl
mov
insb
shl
add
sbb
clc
cmc
aam
mov
mov
popa
cmc
cmp
icebp
adc
sahf
scas
mov
or
mov
mov
popa
sbb
push
sbb
xchg
adc
and
xor
add
xchg
lock
rclb
xchg
nop
xchg
pop
xchg
imul
stc
xchg
or
leave
xchg
cltd
xchg
test
fldcw
mov
sbbb
sub
ficoml
lret
sbb
mov
cmp
sub
fisttpl
lret
mov
mov
mov
push
mov
mov
mov
fisubl
rorb
jns
nop
mov
imul
or
test
mov
scas
push
cmp
dec
lods
sbb
and
fisubl
lcall
movsl
pop
movsl
imul
movsl
sti
movsl
or
mov
movsl
stos
movsl
andb
movsl
inc
movsl
push
movsl
and
adc
shlb
movsl
jns
nop
movsl
pop
cltd
or
push
mov
jnp
push
adc
cwtl
push
inc
push
mov
sub
in
or
in
movsl
dec
movsl
add
xchg
cltd
data16
test
xorb
rcrl
xchg
push
pop
cli
push
push
push
repnz
into
pop
stos
std
bound
dec
jle
jle
jle
jle
jle
lea
jle
jle
jle
sbb
ret
xchg
std
pop
fnstsw
stos
cwtl
xor
jo
imul
xor
xchg
lock
rclb
xchg
jns
nop
xchg
pop
xchg
imul
stc
xchg
or
mov
xchg
test
mov
cmp
sub
sbb
sbb
cmp
lret
mov
or
pusha
stos
repnz
addb
mov
jno
xor
ljmp
scas
push
dec
pop
rclb
jmp
mov
push
push
jns
sub
sbb
mov
cmp
xchg
sub
xchg
test
sahf
sbb
pop
push
push
repnz
mov
cmp
add
jl
insl
xchg
adc
xchg
adc
push
mov
sub
push
stos
adc
push
andl
in
push
lods
ljmp
movsl
cmp
out
lret
movsl
mov
ret
test
jle
stos
mov
and
push
and
pop
xchg
push
je
or
repnz
sahf
ljmp
mov
lret
pop
stc
add
sub
loopne
cmpb
mov
or
fidivl
in
sbb
rcll
and
les
dec
mov
sub
in
ja
lret
gs
inc
loope
cld
sbb
cmc
loope
mov
cmc
xchg
fnstsw
cmpsb
sbb
out
sbb
call
xchg
repz
mov
mov
xor
les
icebp
or
xchg
movsl
or
adc
aad
mov
test
mov
mul
ja
shl
mov
test
in
cli
jnp
cmp
mov
scas
rcrl
sbb
sbb
sbb
sbb
cmp
push
mov
push
fistl
push
mov
push
stos
cmp
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
stos
nop
leave
mov
cmc
sub
cli
jne
cmc
ljmp
cmc
stos
cmc
jnp
mov
pop
cmc
imul
in
dec
and
movsl
or
mov
cmc
inc
cmc
push
cmc
and
xor
jns
stos
insl
mov
or
push
in
cwtl
orb
mov
adc
push
push
sbb
jbe
mov
div
imul
aaa
jl
hlt
repz
movsl
in
shlb
xchg
imul
cmc
xchg
rcll
jb
sbb
push
ljmp
pop
xchg
test
jbe
push
xchg
ljmp
sub
push
pusha
sbbb
sbb
sub
in
aas
test
mov
test
cmp
sbb
sub
ljmp
jle
sbb
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
ljmp
mov
sub
inc
xor
adc
push
lock
sarb
sbb
cmp
jle
jle
jle
stos
adc
mov
or
test
fwait
jg
push
cmp
lock
sbb
push
or
aas
push
mov
stos
cmc
jnp
mov
pop
jmp
movsl
sbb
mov
jle
jle
scas
loope
arpl
or
or
stos
push
sub
insb
lcall
fsubs
and
ds
or
jge
fndisi(8087
leave
inc
or
scas
lock
mov
ljmp
push
or
pop
adc
jmp
mov
lret
sbb
pop
jle
jle
jle
jle
mov
xchg
je
dec
xchg
xor
sub
fcmovne
adc
insb
loopne
push
and
iret
lcall
push
cltd
and
adc
sbb
sub
push
xchg
jns
nop
xchg
pop
ljmp
jg
add
mov
inc
fistl
push
push
xor
stc
adcb
out
mov
sub
or
cmp
sub
adc
iret
xor
sub
fwait
call
xchg
rcll
mov
adc
lret
push
adc
sbb
push
fdivrl
popf
fimuls
xchg
repnz
imul
xchg
rclb
xchg
jns
nop
xchg
pop
xchg
adc
rcrl
andb
push
lods
pop
popa
add
or
jle
stos
cmp
mov
repnz
nop
sbb
jbe
xchg
pop
ljmp
sbb
inc
jmp
stos
int3
scas
add
orl
mov
adc
jbe
jnp
out
xchg
and
int
pop
push
orb
push
lea
adc
in
lods
out
fwait
and
les
adcb
lret
sbb
jnp
xchg
push
cmp
dec
push
and
push
cli
dec
xor
cmp
pop
xchg
mov
cmp
sti
add
push
adc
shrl
pop
pop
mov
data16
divb
mov
mov
jg
shrl
jne
jb
cmp
dec
cltd
data16
inc
mov
cmpsb
jb
dec
cld
push
xor
and
mov
cmp
mov
xchg
sbb
cld
xchg
and
cmp
psubusw
jp
jbe
adcb
fistl
push
inc
push
rcrb
jnp
shll
lahf
jnp
shlb
add
inc
xor
jns
jg
jmp
mov
sub
adc
inc
divb
ja
neg
jo
mov
leave
repz
stos
test
clc
mov
nop
bound
push
push
push
push
out
sbb
es
push
stc
pop
push
push
inc
jecxz
dec
mov
es
clc
movsl
mov
mov
cmp
scas
aas
dec
imul
shl
xor
cmc
inc
in
cwtl
fnstcw
dec
mov
stos
jae
das
addb
mov
jbe
sti
fwait
dec
cld
pop
lret
mov
push
mov
addb
inc
paddb
lahf
cmc
fs
pop
jmp
test
pushl
out
pop
jl
lahf
jne
cmc
cmp
sbb
mov
and
sbb
loop
pop
cmovne
negb
mov
in
jne
push
add
nop
xchg
mov
and
into
sub
gs
arpl
ja
call
ficoms
jb
push
cmp
shl
pop
push
popf
daa
jle
jle
ljmp
cmp
push
imul
jnp
adc
push
out
adc
popa
addb
and
cmp
cmc
cld
cmc
lods
cmc
xchg
cmc
jno
and
movsl
movsl
xchg
cltd
dec
jg
jmp
xchg
push
sbbl
mov
inc
pusha
insb
repnz
sahf
sub
inc
ljmp
sti
inc
add
jg
fstps
pop
repnz
cmpsb
dec
out
adc
sti
inc
lock
lahf
lret
loope
and
xchg
cmp
dec
subb
inc
or
jle
jle
jle
jle
jle
stos
xchg
mov
fwait
imull
jne
cmc
fnstsw
dec
jnp
xchg
mov
mov
testb
adc
and
in
sbb
fildll
inc
mov
leave
push
test
addb
out
lods
mull
subb
mov
push
jb
push
imul
push
sub
inc
or
mov
jle
jle
test
cmp
cwtl
adcb
and
nop
mov
jg
js
mov
xor
ret
push
jmp
cmp
js
stos
popa
push
adc
push
xor
sbb
sbb
sub
push
mov
adc
mov
mov
jl
in
xchg
repnz
sbb
leave
fwait
and
cltd
cmp
outsl
lock
cmc
or
fstpl
cmp
mov
ret
inc
mov
je
jmp
add
mov
push
stos
push
adcb
pusha
inc
jo
loop
adc
mov
bnd
repnz
xor
sub
xchg
sub
add
bound
dec
sbbb
sub
ficoml
mov
cmp
mov
cmp
jle
jle
jle
jle
jle
jle
jle
jle
stos
cmp
push
jo
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
mov
sarl
jmp
lea
push
cmp
cli
pop
mov
fidivl
xchg
mov
or
mov
imul
ljmp
or
pop
jmp
jbe
fwait
in
stos
and
mov
stos
mov
mov
test
xchg
loopne
lock
fistpll
mov
jns
nop
jle
jle
jle
jle
stos
push
stc
mov
mov
mov
mov
xchg
jp
mov
jg
sarb
sbb
sbb
sub
xor
cmp
or
xor
dec
xor
outsb
shr
pop
inc
xchg
cmp
cmp
stc
in
cmc
leave
cmc
mov
idivb
ja
negl
je
jl
jne
cmc
fucompp
ljmp
pop
insb
xor
push
cmpl
xchg
sub
fistl
lret
push
loope
cmp
shlb
mov
push
aas
xchg
and
dec
lahf
push
sbb
pop
cli
push
push
lcall
sub
and
mov
lahf
or
cmp
jle
sub
dec
xlat
xor
xchg
cmp
lret
add
lahf
imul
mov
cwtl
fwait
lods
aam
sar
imul
xchg
sub
stc
jl
jmp
cltd
mov
push
jp
mov
subb
push
dec
sbb
adc
sbb
push
ficompl
sbb
sbb
sbb
sub
inc
mov
mov
sub
sti
cmc
or
fcomi
jmp
mov
cmc
stos
cmc
xor
cmc
pusha
cmc
jo
inc
cmc
push
jmp
adc
xor
in
inc
mov
stos
cs
sbb
idiv
fimull
xchg
mov
sub
xor
jl
cmp
dec
in
sbb
push
stc
mov
xor
loop
loopne
leave
mov
cmp
add
lret
add
inc
fiaddl
add
jmp
sbbl
divb
jae
cmc
and
xor
xchg
adc
jae
cmp
dec
jp
imulb
fstp
or
jle
jle
xchg
jo,pt
sti
dec
push
jp
xor
push
dec
push
dec
sbb
adc
sub
fstps
mov
sbb
xor
pop
cmc
imul
cmc
dec
jmp
sti
xchg
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
loopne
rorb
jns
nop
in
pop
sarb
testb
stc
in
or
xchg
jmp
mov
jge
sbb
cli
sub
lcall
sbb
or
mov
dec
stos
insl
sti
insb
xchg
xchg
pop
xchg
imul
sub
loopne
jmp
mov
andb
cmp
cltd
ljmp
dec
push
cltd
sbb
sbb
sbb
jns
sahf
push
cmp
dec
loopne
sub
fimull
lret
leave
push
jnp
cltd
xchg
pop
imulb
mov
sti
jle
adcb
push
mov
push
stos
push
adcb
pusha
push
inc
push
push
push
and
adc
loopne
fwait
shlb
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
or
popf
sub
ja
push
xchg
jmp
jl
pop
testl
jns
xchg
inc
sbb
xchg
push
push
inc
push
push
pop
ss
addr16
push
aas
or
inc
sbb
add
nop
add
mov
adc
imul
mov
mov
add
cwtl
xor
mov
out
cmp
sarb
mov
add
mov
lret
stos
in
test
je
popa
pop
lret
mov
inc
shll
inc
push
repz
shlb
lcall
dec
cmp
inc
sub
sub
xlat
push
repnz
sbb
sbb
xchg
push
push
pop
call
addb
inc
mov
add
inc
sub
sbb
dec
mov
loope
push
loop
dec
mov
add
fstpl
xchg
js
adc
mov
sub
test
xlat
mov
call
icebp
cmp
adcb
gs
test
xchg
xchg
rcrl
mov
jge
rcrl
notb
add
outsl
jg
sbb
pusha
out
clc
pop
mov
jle
jle
test
jne
push
gs
cvttps2pi
in
popa
lods
push
gs
stos
xchg
or
movsl
aam
test
rcll
std
gs
icebp
mov
dec
xchg
and
push
outsl
rol
inc
mov
test
add
and
std
fstps
mov
sbb
sub
sbb
stos
div
jbe
mov
xchg
jp
xchg
or
arpl
shl
xor
addb
sti
mov
pop
inc
popa
dec
sti
mov
outsl
iret
sub
xchg
cmp
jmp
fsubrs
lret
sbb
cmp
jbe
push
adc
arpl
mov
loop
mov
mov
adc
inc
and
scas
inc
lock
not
jo
and
mov
jle
jle
jle
cmpsb
push
push
or
push
mov
cmc
mov
sub
xchg
or
mov
into
pop
jl
jmp
outsl
mov
add
xlat
sbb
cmp
sub
cld
loopne
mov
int3
push
and
cmpsb
xchg
test
mov
ja
jmp
xor
popa
pop
mov
inc
jae
and
xchg
xchg
xchg
jae
dec
push
xchg
pop
inc
jecxz
rcrl
mov
cwtl
clc
xchg
mov
test
in
rcll
gs
mov
ljmp
xlat
lcall
mov
jp
ror
adc
loopne
repnz
adc
mov
and
jnp
push
test
jge
xorb
cmc
sub
cmc
movsl
cmc
lea
push
ja
out
pop
and
test
dec
cmp
mov
leave
scas
inc
mov
jl
pop
divl
jne
cmc
adc
in
flds
pop
adc
mov
repnz
je
jg
jns
cmp
ljmp
xchg
orb
dec
pop
pusha
fidivl
lcall
push
insb
sbb
sub
cmp
sbb
cmpsb
std
dec
stos
lret
loop
xchg
mov
ja
imul
subl
mov
jle
jle
ret
ds
rcr
mov
push
push
push
adc
fnsave
aaa
jae
scas
aas
pop
push
pop
fsubl
mov
mov
es
fisubs
mov
jle
jle
jle
jle
stos
mov
lds
jnp
rcll
rcrl
test
pop
test
inc
dec
stc
fsts
push
push
bound
jo
das
sub
sbb
sub
xchg
dec
pop
jmp
pop
adc
mov
adc
xchg
jae
sub
in
mov
mov
mov
pop
inc
ficompl
fs
pusha
in
push
sahf
mov
add
push
mov
jg
incl
pop
jns
in
push
les
fcompl
push
xor
mov
xchg
inc
push
mov
daa
scas
xchg
dec
xor
pusha
mov
std
xor
or
mov
sub
in
mov
out
and
xchg
cmp
insl
or
and
nop
mov
imul
lea
xor
fadds
fnstsw
sub
and
andb
in
arpl
addb
outsl
and
jo
dec
inc
add
jno
dec
xchg
push
jno
or
out
fwait
mov
sbb
cmp
adc
inc
add
add
or
jecxz
add
mov
mov
stc
pushf
jbe
mov
fidivrl
out
aas
mov
rcll
les
pop
stos
mov
inc
push
mov
mov
outsb
jg
dec
into
sub
add
xchg
push
ret
mov
jb
xchg
call
xchg
push
aaa
in
adc
pop
lds
push
xchg
pop
jbe
xchg
push
loopne
imul
or
loopne
pop
bound
insb
sub
gs
loope
ret
sbb
and
mov
sti
jecxz
loop
lret
pop
sub
enter
inc
scas
repz
test
mov
cltd
or
sub
call
sbb
lock
xor
ljmp
fildl
out
or
in
mov
loopne
imul
addl
mov
push
jp
xchg
add
mov
lds
test
pop
pop
inc
rcrl
scas
insl
xchg
cmp
mov
js
lret
or
add
xor
and
xor
push
aad
jle
data16
ljmp
mov
push
inc
push
xchg
mov
popa
rcll
rcll
inc
sub
mov
mov
nop
jns
jl
testl
fldl2e
fiaddl
xchg
jb
add
push
movsb
sub
inc
mov
adc
dec
xor
out
cmp
leave
inc
movsb
stos
xchg
decl
mov
mov
mov
pop
mov
ret
push
call
dec
and
clc
or
dec
add
repnz
jae
sbb
xor
insb
ret
lcall
push
cmpsb
mov
mov
lods
jp
shl
rcrl
popf
push
mov
xchg
inc
push
lock
addb
push
push
gs
mov
sub
in
and
or
and
addb
sti
dec
test
mov
test
push
and
in
mov
mov
and
jg
add
lods
cmc
pop
push
addb
cmp
call
es
mov
loopne
push
inc
mulb
ja
jmp
jp
ljmp
jle
jle
jle
jle
shrb
movsl
or
fcompl
or
sub
or
push
sbb
cmp
cltd
test
add
into
adc
push
out
sbb
es
pop
ljmp
loope
inc
pop
insb
pop
mov
jo
outsb
es
out
andb
and
pop
je
xor
cwtl
imul
andl
leave
daa
test
and
dec
sti
mov
adc
mov
imul
cmp
pop
imul
mov
mov
loope
or
pop
sbbb
arpl
clc
inc
ljmp
test
sub
mov
dec
push
cltd
repnz
sbb
sbb
add
inc
push
cltd
jb
cmp
adc
stos
mov
adc
push
imul
jp
mov
jl
divb
xor
jnp
inc
sbb
lock
mov
cmp
jl
call
rcl
sub
out
sti
xor
imul
xchg
mov
and
cli
repnz
xchg
pop
and
pop
sub
and
push
and
sub
cld
pop
jmp
lcall
daa
push
mov
push
pop
jge
adc
js
pop
inc
ret
jp
int
dec
vpshufhw
mov
clc
addl
cmp
jp
mov
rcll
ds
loopne
ficoml
sbb
mov
mov
cmp
xchg
pushf
stos
orb
jp
sarl
mov
loope,pt
or
fnstenv
testb
xor
bound
push
ds
scas
cmpb
insb
inc
dec
loopne
adc
dec
push
fnsave
jg
nop
xchg
xchg
sbb
cmc
adc
out
nop
mov
out
fs
pop
jle
test
enter
cwtl
insb
arpl
pop
cltd
or
push
pusha
xchg
jl
pop
jmp
pop
xchg
push
and
mov
sub
xor
test
fstpt
or
outsb
ds
decl
dec
or
bound
mov
xchg
ljmp
popa
mov
fwait
and
inc
es
sti
sub
mov
imul
lds
test
out
cmp
push
mov
mov
loopne
add
movsb
cltd
inc
into
mov
sti
pop
pop
push
push
pop
cmp
push
xchg
jge
push
xor
aas
fstpl
bound
and
fcmovnb
mov
aaa
aas
adc
stos
mov
scas
movsl
fwait
aam
inc
cmp
aas
std
cmp
xor
lods
cld
iret
cmp
sub
mov
scas
cld
jecxz
das
cmp
aas
add
sub
loope
xchg
stos
or
dec
inc
mov
xor
xchg
out
aaa
loopne
out
mov
test
push
ret
inc
cmp
adc
ror
mov
jo
cmp
xchg
cmc
xchg
cltd
push
sbb
mov
dec
popf
sub
insb
lret
movsl
dec
mov
in
loopne
movsl
mov
jo
insb
loope
test
pop
push
movb
push
dec
push
aaa
cmp
lahf
popa
or
cmc
jmp
adc
sub
insb
or
std
aaa
push
stc
bound
movsb
sub
shlb
pop
stos
ficomps
mov
repnz
lock
jnp
jns
xchg
ds
and
stos
push
xchg
pop
cltd
jns
sbb
mov
insl
xchg
loope
stos
fs
and
shll
pop
sbb
sahf
xor
stos
push
xchg
iret
push
js
cmpsb
mov
sbb
in
je
in
fsubs
jne
fwait
test
mov
dec
pushl
inc
mulb
inc
inc
jmp
rorl
push
jg
adcb
add
aam
jne
mov
addr16
add
sbb
fs
fstl
xchg
cmpsb
sbbl
add
pop
cmp
add
aaa
xchg
push
pop
xor
xchg
dec
xchg
inc
popf
sti
xchg
aam
clc
adc
xchg
mov
fdivs
das
fsubrs
por
loopne
sbb
mov
fwait
stos
mov
sbb
mov
xchg
lock
loopne
cmpb
loope
mov
fdiv
out
xchg
xchg
cwtl
mov
jl
xchg
test
xor
pop
outsb
outsb
cltd
jno
cwtl
mov
jno
add
popa
mov
mov
into
es
mov
sbb
sbb
sbb
sub
mov
mov
jmp
xchg
icebp
xchg
int
outsb
jbe
es
out
faddp
mov
xor
in
je
clc
mov
addl
push
mov
mov
in
je
or
stos
push
adc
bound
sub
ss
arpl
call
shl
pop
adcb
stos
xchg
or
loope
adc
mov
sbb
aas
lcall
ret
cmpsl
scas
jo
dec
lds
popa
inc
mov
mov
push
ret
xchg
int3
xchg
jne
adc
rcrb
adc
ss
xchg
inc
fwait
cmp
cmp
or
test
out
push
add
stc
fcompl
mov
sti
ret
inc
sub
dec
sbb
frstor
add
cmp
repnz
cmp
push
icebp
push
stos
scas
mov
push
add
adc
pop
dec
out
jnp
xchg
push
sub
inc
dec
lahf
loope
in
outsb
cltd
fsubs
push
and
dec
xchg
push
call
inc
mov
rolb
mov
xchg
add
cmp
shll
xchg
test
insl
push
imul
inc
dec
sarl
fldt
add
mov
mov
iret
xchg
lahf
imul
testb
jmp
jno
sub
sbb
sbb
je
mov
lods
shll
scas
jbe
aam
mov
pop
loopne
sbb
test
xchg
ljmp
push
lret
cmp
dec
ja
and
jb
adc
in
lret
fsubl
or
xchg
cmp
inc
jae
mov
xchg
sbbb
les
imul
mov
mov
cltd
fimull
and
and
or
lea
arpl
loop
adc
mov
mov
xor
imul
stos
adc
dec
sbb
notb
icebp
aas
test
test
jge
jne
imul
sub
mov
pop
xor
dec
and
lods
and
cmp
mov
sbb
sti
xchg
inc
push
insb
cmp
test
xchg
sub
std
add
mov
mov
pop
stos
mov
cmp
xlat
insb
shlb
inc
fsub
add
test
bound
mov
jle
loop
negb
jmp
sub
sbb
ljmp
pop
pop
dec
mov
gs
push
gs
sub
stc
mov
pop
lds
mulb
adc
inc
dec
fdiv
fistpl
and
int
sti
outsb
bound
inc
adc
adc
cmp
nop
bound
dec
or
sahf
scas
daa
xchg
inc
sub
fwait
lock
adc
roll
mov
xor
out
jl
jmp
mov
mov
arpl
inc
stc
cmp
xor
push
aas
aaa
outsb
xchg
sub
call
adc
xor
popa
push
mov
jns
popa
loop
sahf
cmpsb
out
outsb
jns
cwtl
inc
popa
xlat
mov
push
dec
jne
mov
mul
push
cmp
lock
jg
sub
add
ret
lcall
jl
mov
cmp
mov
and
cmp
mov
lret
cmp
push
out
sahf
jmp
scas
jo
add
xor
add
out
ljmp
mov
cmp
cli
jnp
xchg
push
data16
test
adc
es
jecxz
in
or
mov
mov
cmp
xchg
mov
dec
scas
xor
lcall
sub
outsb
jno
fsubrl
call
push
scas
fidivl
pop
outsb
data16
mov
adc
fldcw
jbe
cs
outsl
loopnew
clc
test
cmp
pusha
icebp
mov
shlb
jmp
stc
jp
inc
mov
and
stos
mov
jbe
mov
out
xor
push
ds
sub
cli
push
xchg
mov
in
push
imul
fwait
lret
jmp
outsb
lcall
adc
bound
adc
es
cmpsb
push
jno
dec
sti
sbb
add
out
mov
cmp
cmpsb
out
bound
inc
mul
pusha
jb
stos
jg
das
sets
jecxz
adc
mov
dec
add
sbbl
in
pushf
cmp
pushf
jmp
and
stos
xchg
rorb
out
cmp
gs
aad
outsb
scas
push
and
push
inc
gs
or
sub
pop
and
inc
mov
pop
adc
mov
dec
xor
cltd
add
sub
mov
pop
xchg
inc
frstor
mov
test
push
push
mov
gs
sub
cmp
push
cmc
outsb
cli
xchg
call
fwait
sar
inc
data16
push
or
push
bound
imul
jne
test
adc
movsb
mov
mov
dec
daa
es
cmp
sub
mov
lock
fsubl
scas
mov
sti
repz
inc
repz
ret
adc
or
push
sbbb
jl
jmp
mov
fcoms
cmpl
sbb
loopne
inc
leave
out
mov
pop
int3
jmp
ret
mov
sbb
inc
or
outsb
jg
sub
cmpsb
cmp
jnp
sub
in
imul
ret
cmp
add
jnp
loop
inc
repnz
mov
lods
push
mov
jecxz
mov
cmp
mov
bound
push
sub
popa
imul
call
lock
mov
aas
mov
addr16
aam
cwtl
inc
mov
inc
lret
mov
aas
jbe
xor
psubusw
jge
shll
mov
add
repnz
xchg
loopne
loop
mov
pusha
sbb
ficoms
lcall
sub
test
push
pop
mov
mov
or
adc
and
nop
adc
out
xchg
pop
rclb
push
call
cmc
lods
shll
jp
or
inc
cmp
pop
and
adcb
push
mov
sub
in
int
xchg
mov
lret
repnz
add
push
jp
fwait
inc
sub
stc
push
sahf
mov
xchg
into
mov
aam
xchg
into
lret
stos
xor
inc
std
jmp
sbb
jge
sub
inc
sub
mov
int
xchg
inc
dec
int
adc
mov
mov
push
xor
rorl
mov
in
loop
andw
and
jp
xor
imul
add
xchg
cmp
lock
mov
loop
inc
or
push
xor
insl
or
push
sarl
sbb
add
sti
test
jmp
stos
ret
adc
push
mov
pop
pop
cmp
mov
lret
rcrl
jnp
ficomps
push
insb
pop
shrl
mov
ret
incl
dec
jb
xor
fimull
enter
and
xchg
fwait
jmp
sbb
fwait
dec
cmp
and
pop
mov
loopne
out
xchg
jns
lret
and
mov
sub
xor
xor
mov
rorb
out
jns
out
xchg
or
push
sbb
fiaddl
fldt
or
fdivrs
out
andl
fsubrs
jae
push
insb
out
mov
scas
jge
test
sub
and
subb
or
mulb
push
ss
gs
cmpsb
cmp
mov
or
mov
and
cmpsb
dec
cmp
push
xor
mov
cmp
pushf
mov
push
jle
fisubs
pop
jns
repnz
mov
shl
out
sbb
inc
stos
shrb
les
call
cwtl
fldt
xchg
rol
stos
xchg
into
clc
dec
fnstcw
inc
hlt
lcall
mov
or
mov
mov
xchg
sarb
les
lahf
adc
les
cmp
jnp
mov
repnz
fisubrl
es
jno
shrb
sub
aas
push
and
cmp
test
add
mov
jp
and
adc
xchg
jecxz
fwait
pop
push
iret
xchg
cmpsl
cmp
sub
sub
and
push
mov
shr
sub
sub
les
and
enter
sub
mov
outsb
xor
lock
cltd
subl
lods
inc
test
cld
test
jmp
aad
imul
mov
sub
stos
jnp
push
mov
dec
push
cltd
mulb
call
sub
adc
and
nop
repz
insb
pop
cmp
test
icebp
xor
lods
jp
xchg
adc
and
sbb
js
sbb
mov
orl
stos
push
xor
xor
sub
call
mov
out
jg
mov
std
lods
xchg
sub
call
jl
cmp
mov
mov
push
lret
jl
sub
add
xor
bound
jbe
jecxz
and
dec
je
mov
cmpsl
jmp
mov
mov
pop
mov
push
sarl
rcll
das
into
or
ret
and
in
pop
jl
out
jb
lret
jmp
mov
arpl
inc
inc
mov
fldl
repz
sti
jb
adc
rcl
sub
push
pop
xchg
js
popa
adc
push
bound
jp
out
mov
mov
mov
jns
mov
mov
test
je
movsb
cmp
fisubrl
pop
lcall
mov
adc
cli
inc
inc
mov
jecxz
pop
push
pmaddwd
pop
cmp
sbb
lods
xchg
mov
sbb
lock
mov
xlat
mov
sub
cmp
mov
repnz
mov
mov
test
outsl
mov
das
hlt
sbb
cmp
pop
mov
lcall
cmp
paddusw
xchg
inc
popa
mov
push
mov
cmp
jae
mov
stos
push
hlt
mov
xchg
je
movsb
jp
out
jge
and
add
jp
mov
xchg
ret
add
icebp
mov
imul
testb
push
sbb
popa
sub
shrb
xchg
lret
mov
mov
ret
mov
xchg
aas
enter
xor
rcl
bnd
push
jo
jnp
xchg
fldenvs
jg
sub
call
mov
mov
push
mov
sub
in
inc
test
or
fwait
call
push
scas
xchg
push
xchg
dec
push
dec
inc
sub
add
sbb
xchg
addr16
pop
mov
cwtl
cltd
filds
lcall
mov
xor
test
mov
xor
in
jecxz
ret
adc
scas
jns
or
lods
scas
or
insb
arpl
sub
in
mov
jne
jmp
xor
fmuls
pop
mov
sti
aad
push
push
enter
xchg
add
pop
pop
inc
xchg
add
jnp
cltd
loop
jbe
mov
outsl
ja
fistps
mov
adc
xor
or
out
adc
and
movsb
call
xchg
jo
mov
mov
xchg
jo
sub
cli
ss
test
sar
test
sbb
in
xchg
cmp
fwait
push
les
inc
jne
nop
add
mov
and
cltd
dec
adc
stos
and
sahf
xor
xchg
ret
xor
stos
outsl
mov
hlt
sub
inc
ss
inc
stc
sbb
in
cmpsl
push
and
aad
enter
adc
mov
stos
ret
mov
leave
out
cmpsb
push
push
push
sbb
inc
or
gs
fldcw
pop
in
sub
sti
out
insb
sub
xchg
rcrl
stos
js
les
jno
rolb
stos
sbb
sub
fld
dec
mov
int
pop
std
mov
gs
in
loope
adc
imul
mov
jecxz
cmp
sbb
clc
jno
outsl
mov
shll
loope
mov
jle
dec
push
daa
mov
cmp
jl
lcall
adc
enter
or
scas
rcl
out
mov
sub
call
bound
or
adc
jmp
test
pop
inc
pop
repz
mov
test
arpl
xor
out
push
add
xchg
std
mov
xor
mov
mov
ret
stos
dec
fnstenv
mov
and
adc
xchg
and
fdivs
inc
stos
gs
ljmp
stos
jb
jg
xchg
shlb
sub
fnstcw
testl
fcmovbe
inc
popa
mov
add
or
adc
lret
es
mov
pop
mov
ret
ss
or
fildl
fnstenv
adc
repz
fs
fcmovne
mov
jle
popa
xchg
movsb
adc
add
sbb
clc
push
and
ds
icebp
fnstcw
jnp
push
sub
xor
fsts
insl
and
je
push
push
clc
cli
xchg
or
add
fistpl
push
lahf
lahf
fcmovnb
ss
adc
push
push
jo
sub
subl
int
cmp
les
out
fstpt
aas
jbe
mov
fwait
pushf
mov
mov
push
call
xchg
das
cmp
pop
push
sbb
fldt
mov
sbb
nop
inc
outsl
sub
jmp
andl
mov
in
mov
adc
xorb
or
pop
dec
and
fcoms
add
fwait
push
es
lcall
sub
jg
into
sub
sub
es
jo
pop
mov
and
inc
sub
jg
xchg
cmp
ljmp
rolb
adc
inc
push
mov
dec
push
cld
jmp
mov
jno
in
jge
jmp
or
mov
bound
shrb
jecxz
push
inc
rcr
sbb
mov
push
push
push
cli
mov
lods
jp
and
test
xchg
mov
loopne
lcall
jl
cmp
jmp
mov
and
xor
push
mov
push
and
clc
sbb
cmp
loopne
inc
sbb
or
insb
jp
in
cmp
xchg
pop
push
adc
push
adc
jl
hlt
inc
int
xchg
inc
mov
mov
lock
shll
test
fwait
ds
lret
lahf
xchg
xchg
ret
mov
add
adc
rclb
cmp
push
xchg
mov
inc
sub
mov
rorb
inc
jmp
es
mov
xor
out
lcall
xchg
xchg
inc
inc
clc
cmp
mov
jb
push
adc
push
mov
fcmovne
mov
xor
sub
adc
cwtl
cmp
jno
push
lds
cmc
mov
stos
insb
adc
pop
push
sbbb
ds
xchg
fldt
jmp
mov
shrl
stos
leave
adc
mov
cmp
push
mov
pop
push
cmp
sarb
es
in
sahf
les
pusha
and
sub
pop
mov
test
sti
mov
jnp
sub
sbb
mov
and
ret
ret
dec
mov
lods
test
mov
add
mov
and
dec
mov
xchg
cmp
jb
fxch
and
loope
adc
and
mov
push
fldt
sub
sub
je
mov
jmp
sbbb
sti
adc
pop
push
icebp
mov
cmpsb
mov
loopw
iret
sub
sub
roll
add
xor
and
mov
mov
xchg
icebp
xor
cwtl
loopne
xor
sbb
mov
dec
push
mov
mov
cld
es
mov
out
push
mov
pop
test
sbb
inc
inc
push
mov
pop
sub
sbbb
ljmp
mov
mov
xor
es
cltd
xorb
cli
xlat
push
sbbb
inc
sub
mov
dec
cltd
add
push
loopne
sub
sbbb
inc
pop
jp
sahf
or
andl
shl
je
xadd
mov
bound
sub
arpl
nop
loop
jo
add
jg
cmp
add
push
mov
sub
pushf
push
leave
mov
test
popa
cmp
js
into
cmpb
sub
testb
cmp
xlat
popa
inc
ss
mov
lods
xchg
jge
inc
adc
inc
stc
loope
cltd
add
ljmp
imul
mov
popa
aas
std
sbb
xchg
stos
push
scas
add
cli
and
mov
push
pop
insb
popa
shrl
and
inc
xchg
loop
add
std
fs
adc
jg
ret
popa
bound
sub
mov
mov
xor
adcb
aas
xor
lock
xor
xchg
insb
inc
xor
in
cmp
xchg
out
popf
pop
sbb
inc
inc
cld
sub
jmp
add
call
fisttps
sbb
and
repz
mov
jg
sarb
sbb
xorl
or
pop
insb
dec
sub
stc
push
ss
movsb
mov
dec
lds
cltd
outsb
call
mov
loope
xchg
aad
lods
gs
mov
adc
adc
pop
sbb
sbb
push
lcall
je
je
aam
add
daa
lods
jl
mov
stos
jns
into
scas
sbb
pop
push
xor
or
test
insb
or
push
loopne
jns
mov
push
add
popa
movl
pop
mov
aas
xchg
mov
pop
ss
push
jo
mov
loop
xlat
push
shlb
stos
xor
add
ret
xchg
sub
fwait
shlb
imul
add
push
xchg
aad
test
sahf
xor
or
or
xor
fcomip
pop
std
idivl
xchg
into
fcompl
adc
test
sub
xor
loopne
adc
cmp
xor
lret
into
nop
repz
ret
jl
cld
jo
rol
test
jecxz
add
xchg
jp
out
mov
xor
sub
pusha
test
jnp
cwtl
cwtl
es
rcrb
sti
pop
mov
loope
inc
repnz
sbb
out
sub
stos
nop
jmp
inc
push
lods
roll
pop
js
andb
adc
aas
and
insb
and
mov
xor
pop
stos
popa
fcmovu
inc
add
lock
inc
fdivs
lcall
dec
inc
mov
mulb
adc
mov
out
mov
cmp
xchg
xor
aam
add
sbb
cmp
stos
xchg
popf
adc
jo
xchg
fcoms
fistpll
pop
cmp
insb
adc
in
test
add
hlt
bound
push
xchg
fimull
mov
stc
sub
xor
dec
into
pop
fldl
mov
sub
push
fldcw
cmp
sti
xchg
rcl
test
call
andb
fs
repnz
sbb
jmp
pop
push
jbe
inc
stos
mov
mov
pop
push
jnp
jmp
lahf
leave
pop
cltd
add
jne
jle
jnp
mov
push
imul
cltd
mov
mov
test
mov
dec
cmp
xchg
sbb
test
jns
xchg
imul
xchg
cmpsl
les
insl
add
sbb
out
loop
jo
dec
cmp
loopne
call
xchg
out
test
mov
xor
pop
inc
imul
jg
test
roll
fldcw
jbe
inc
and
mov
xor
xor
cmp
es
insb
sbb
call
aas
add
adc
inc
aas
xor
scas
cltd
cltd
mov
aas
xor
rcll
xchg
inc
cli
mov
adc
push
push
or
out
jnp
pop
cli
add
mov
arpl
popa
jmp
push
jae
jo
rorb
add
das
loopne
insl
sbb
sub
mov
sub
notl
outsl
or
fldt
test
jge
sahf
in
sti
icebp
pop
popa
mov
test
cli
push
pushf
push
add
aaa
frstor
fs
sbb
and
sbb
les
sub
div
mov
clc
lret
dec
sbb
sub
xchg
and
sbbl
mov
adc
call
sbb
and
xchg
ljmp
push
sub
fsubs
ljmp
test
cld
and
mov
clc
es
cmp
cmpsb
add
sub
leave
cwtl
aas
jl
or
pop
push
mov
cwtl
popa
stos
xchg
sub
push
enter
shl
mov
push
rorb
clc
andl
push
jp
test
mov
xchg
adc
sub
mov
fiaddl
push
xchg
xor
and
shlb
lahf
out
push
xor
fprem1
popa
jae
in
mov
mov
xor
mov
mov
in
mov
pop
lret
js
jno
add
es
call
and
add
cmp
mov
mul
imul
pop
adcb
ljmp
into
fwait
sub
and
ret
dec
xor
fisttps
add
or
insl
sarl
es
mov
ror
subb
mov
mov
adc
adc
push
jge
out
sbbb
popa
cli
sub
sub
inc
out
xor
mov
push
jp
mov
push
cmp
aaa
fstp
xchg
push
sbb
inc
inc
fistps
and
bound
push
mov
dec
or
xchg
add
fldt
xchg
and
imul
ss
adcb
pop
and
push
ja
ljmp
js
mov
cmpsb
jp
cmp
lock
jb
jae
call
mov
hlt
mov
cltd
xchg
test
rolb
insb
cltd
leave
and
xchg
je
addr16
sbb
xchg
dec
push
add
imul
sarb
and
lock
vpaddd
bound
sbb
mov
push
pusha
outsb
loop
pushl
inc
mov
sbb
fbstp
jecxz
sbb
sbb
loop
stos
shlb
mov
jg
aas
shrl
adc
add
into
add
arpl
pop
fld1
ret
iret
mov
add
gs
xchg
inc
mov
cmp
mov
nop
xor
pop
pop
cmpsb
ret
andb
stos
lods
cmp
ss
fwait
jo
add
dec
imul
sbb
jg
cwtl
lcall
mov
test
push
pop
ljmp
stos
mov
into
jnp
mov
loope
or
and
jbe
out
xchg
mov
pop
xor
mov
mov
test
pop
lcall
mov
push
ja
add
pop
jno
stos
push
jbe
aaa
xlat
push
mov
sbb
adc
scas
inc
inc
stc
in
or
xchg
shrb
fimull
mov
pop
mov
push
cltd
cmp
adc
inc
or
xor
es
fsts
xor
and
jg
sarb
stc
enter
sub
push
gs
and
stc
je
cmp
xchg
adc
adc
pop
pop
scas
rcll
sub
cmp
inc
cltd
lcall
sahf
inc
add
jge
mov
daa
lret
neg
test
sbb
cmc
repnz
jl
adc
mov
inc
mov
push
cmp
push
ss
ss
call
hlt
sub
loope
into
add
jecxz
mov
imul
jb
sub
lcall
into
pop
jmp
stos
ljmp
sub
into
scas
jae
mov
aas
mov
push
pop
inc
hlt
popf
sbb
and
test
lds
ret
inc
insl
adc
push
mov
rcll
divl
out
repz
cmp
fwait
jb
out
cmp
stos
dec
sbb
sti
decb
or
push
dec
and
adc
add
pop
stos
push
sub
sub
dec
loope
cmp
stos
add
popa
popa
push
push
adc
inc
pop
xchg
fcom
pusha
sbb
addb
shll
sub
pop
xchg
fisttpl
and
jo
sahf
and
mov
fwait
jnp
pop
mov
push
push
leavew
stc
adcb
adc
scas
into
push
mov
mov
pop
dec
jle
js
rolb
xchg
repz
sbb
mov
xlat
insb
inc
int
out
fwait
sub
int3
push
and
mov
mov
push
xchg
cltd
and
jmp
cmp
jge
or
mov
neg
sub
mov
aad
orl
hlt
or
bound
pushf
sbb
pop
das
dec
ljmp
adc
mov
test
jbe
loopne
int3
pushf
inc
loop
dec
inc
cmpsb
movsb
fistps
cmp
loope
imul
mov
inc
or
cmp
ret
bound
or
xchg
mov
clc
test
sub
xor
loopne
sbbb
repz
dec
push
sbb
push
cli
inc
or
push
ljmp
jnp
mov
nop
push
imul
dec
cmp
aas
call
jle
xchg
lret
cmp
stos
mov
test
and
add
and
add
mov
ds
stos
sub
mov
test
jae
sbb
adc
mov
xor
cld
in
xor
lahf
adcl
mov
cld
lahf
mov
adc
mov
in
fnstcw
jne
orl
or
cmc
fnstenv
nop
hlt
push
loope
test
loope
and
xchg
push
loope
mov
sbb
inc
jns
faddl
jp
xchg
dec
and
pop
mov
xlat
cmp
ficoml
aam
int
inc
add
leave
mov
mov
xchg
rclb
shll
leave
lret
aam
into
sub
sbb
adc
int3
inc
cld
cltd
mov
adc
sbb
sub
mov
adc
and
push
int
test
xchg
mov
push
mov
push
add
mov
mov
mov
push
cmp
sbb
cli
adc
dec
fidivrs
xchg
xor
sbb
mov
nop
jns
pop
mov
cmp
lcall
testl
repz
cmp
push
jle
loopne
es
and
or
push
or
jg
mov
mov
mov
ds
pop
das
push
mov
push
pop
push
jp
and
in
mov
imul
bound
cmp
xlat
xchg
cmp
sbb
push
dec
into
dec
pop
icebp
mov
adc
lcall
je
je
fwait
insb
inc
jnp
and
jg
sbb
nop
and
inc
pop
jmp
std
cld
fstp
mov
xchg
into
int
add
sbb
ss
mov
clc
mov
insb
leave
and
dec
test
inc
gs
xor
jnp
xor
or
fsin
jg
and
sbb
inc
mov
mov
in
and
addr16
lcall
sbb
clc
inc
mov
loopne
cmp
sub
pop
mov
lret
xor
cltd
add
push
stos
testl
sub
jnp
nop
push
jg
add
test
pop
aas
push
fldz
and
inc
andl
mov
std
inc
frstor
xchg
and
loopne
dec
sub
inc
jae
inc
jno
mov
jnp
jg
out
xor
cld
or
ds
cld
push
in
adc
inc
pop
mov
xchg
push
xchg
push
mov
cmp
mov
inc
icebp
ss
hlt
push
or
dec
movsl
lock
cltd
stc
mov
push
inc
pop
cld
add
imull
dec
mov
xorb
and
idivb
imul
and
mov
jp
or
or
push
adc
and
sti
insl
cmp
test
fst
mov
arpl
aas
sub
cmp
or
cmp
jmp
sub
loop
xor
je
fprem
jl
or
test
add
mov
sti
das
mov
jbe
xchg
pop
sarl
ret
hlt
xchg
lcall
imul
mov
and
hlt
mov
sbb
cmp
sub
cmp
pop
add
fistps
out
sbb
lock
lcall
push
imul
push
push
mov
push
adc
and
inc
int3
pop
mov
xlat
sbb
sarl
dec
inc
or
cmp
xor
loopne
ja
test
pop
clc
push
cmpb
insl
repnz
jp
sbb
dec
test
xchg
pop
dec
adc
sbb
mov
push
mov
cmp
jo
aaa
leave
repnz
lret
nop
mov
imulb
adc
fldenv
cmpsb
mov
push
or
aas
jo
jmp
push
test
rolb
ds
xchg
in
movsl
frstor
mov
aaa
fldl
loope
dec
inc
stc
mov
cmpsb
adc
fldcw
mov
xchg
fadd
stos
dec
jb
andb
cltd
adc
mov
ja
outsl
push
ror
fisttps
std
stos
dec
dec
jmp
inc
shlb
xorb
aas
push
sbb
push
dec
sub
int
popa
rclb
imul
ds
xchg
sbb
pop
out
nop
pop
mov
and
rcl
sbb
dec
mov
adc
and
fnstenv
xor
jns
mov
repnz
or
jbe
jp
gs
test
flds
test
outsb
adc
fistpl
popf
inc
scas
mov
ja
filds
scas
mov
or
ljmp
ds
mov
es
dec
push
mov
inc
das
xchg
jno,pt
sbb
push
fldcw
xchg
lock
mov
mov
cltd
aas
addb
jecxz
test
scas
jmp
sub
scas
sahf
dec
push
xchg
imul
mov
loopne
cmpl
leave
cs
xchg
inc
push
xchg
fadds
sbb
push
inc
out
pop
adc
adc
sbb
ljmp
and
add
sbb
or
shlb
call
mov
jp
testb
insb
imul
mov
pop
push
mov
idivb
xchg
mov
fists
inc
stos
sbb
xchg
jne
jb
mov
in
shrl
adc
popa
xor
lods
fucomp
mov
bound
ljmp
adc
insb
push
and
js
push
sbb
dec
mov
mov
mov
dec
cmp
shlb
sbb
mov
inc
flds
inc
mov
sub
mov
aad
outsl
call
shll
dec
cmp
shll
inc
bound
cmp
dec
push
sub
sub
fisttps
lret
jnp
xor
aam
stos
insl
inc
std
adc
rorb
pop
and
push
xlat
and
cmp
movsb
push
stos
rcll
iret
cmp
lret
imul
lret
xchg
sub
test
bound
imul
cmp
sbb
pop
inc
xchg
scas
mov
cli
inc
jmp
ss
aas
call
mov
adcl
mov
test
mov
mov
mov
rcrl
xchg
lret
add
pop
bound
subl
movsb
je
shll
ror
jmp
cmp
sub
ljmp
pushf
fildll
inc
xchg
and
inc
xor
lcall
push
fsubl
adc
cmp
int3
cmp
dec
sub
les
ret
sbb
icebp
sbb
ds
mov
ret
push
jmp
dec
xor
fcoms
sbb
shr
adc
imul
adc
sub
fstpl
fimull
jmp
sarl
lea
stos
outsb
and
nop
cmpsb
pushf
outsb
or
test
fwait
cli
push
dec
mov
les
and
nop
inc
jb,pt
xor
dec
dec
loopne
mov
and
jo
loopne
negl
fsubs
xor
add
in
jo
bound
xchg
sub
mov
jb
push
sahf
and
push
lock
icebp
xchg
jmp
and
sbb
adcb
xchg
scas
adc
push
mov
loop
pop
stos
sub
sub
inc
ss
push
mov
sub
inc
or
out
or
fldcw
and
shl
mov
add
out
mov
popf
in
mov
cmp
jg
iret
inc
jp
or
dec
ret
push
mov
mov
imul
jecxz
shll
and
xchg
jp
add
jmp
sbb
lret
pop
ds
jbe
ljmp
jg
xor
or
out
int3
pop
test
jle
stos
adc
arpl
enter
xor
jp
dec
ljmp
inc
mov
dec
int
inc
cmp
jae
jg
pop
stc
out
lret
lods
into
pop
pop
sbb
xor
xor
and
imul
gs
dec
gs
and
stc
jnp
pusha
jbe
xor
xor
mov
outsl
ret
lds
insl
xor
or
pop
sbb
cmp
ret
push
pop
push
jmp
cld
pop
xchg
aad
fxch
repnz
push
scas
sbb
cltd
leave
xor
stos
mov
xor
cmpsl
push
sbb
aad
loop
fidivrs
add
cltd
js
nop
dec
and
cmp
or
loopne
sbb
push
ja
dec
sbb
les
testb
xchg
mov
test
sti
dec
cmp
pop
inc
jns
into
insb
fldl
or
xchg
xor
or
std
mov
sarb
pop
or
sub
inc
shrl
inc
mov
xchg
lods
push
scas
daa
leave
or
mov
pop
cltd
dec
jnp
sbb
push
adc
ss
mov
loopne
ja
neg
je
cltd
call
lcall
xor
push
or
sub
mov
sbb
ret
jns
jp
aad
adc
nop
hlt
fistpl
out
jmp
cmp
mov
inc
dec
cltd
dec
cmp
sbb
call
dec
shlb
mov
jl
sub
or
mov
fcmovbe
imul
adc
sub
mov
xor
lret
pushf
inc
mov
dec
sub
add
pusha
sub
test
cmp
xchg
loopne
push
cltd
sub
push
and
push
cmpb
push
inc
push
faddl
stc
rclb
shlb
lret
pop
jecxz
jl
popf
out
mov
outsl
sub
lock
popa
and
stc
push
push
xor
adc
jnp
xchg
loop
pop
mov
jbe
xchg
addr16
in
xor
sub
sbb
jle
ret
mov
jg
inc
into
xor
dec
inc
cmpb
pop
nop
cli
mov
xor
jno
cs
shlb
mov
icebp
inc
pop
mov
pop
std
out
ljmp
shr
mov
ret
test
inc
fistpll
lret
aam
mov
enter
cltd
xor
sti
pusha
mov
es
push
pop
cmp
sub
shl
mov
push
xor
je
lret
push
sbb
test
test
lcall
adc
jo
cmpsl
jp
stos
push
adc
jo
jp
add
push
imull
cltd
push
inc
les
mov
ljmp
inc
mov
sbb
push
pusha
insl
fnstcw
adc
push
test
fldenv
mov
adc
mov
outsl
leave
shl
sbb
push
hlt
and
mov
rorl
cmp
add
xchg
sbb
cmp
sbb
or
push
jmp
push
mov
lock
mov
mov
jl
inc
or
push
sub
mov
pop
stos
cmpsb
xchg
cmp
repz
inc
push
pushfw
push
lock
inc
push
mov
leave
mov
jge
cmp
fcoms
stc
into
je
scas
sarl
test
cltd
xchg
mov
and
add
sti
rclb
jns
pop
cwtl
cmp
mov
fildll
sbb
xlat
inc
arpl
or
jp
ds
xchg
bnd
add
inc
inc
dec
cltd
sbb
leave
in
dec
inc
and
push
or
test
ds
lcall
imul
test
push
cltd
inc
xchg
sub
and
popa
push
lcall
push
xor
sbb
cmp
mov
lds
lock
pop
inc
mov
js
in
inc
test
mov
push
mov
inc
ret
fwait
or
dec
push
jmp
mov
out
jl,pn
jmp
test
cmp
enter
sbb
sbb
xor
dec
xlat
inc
add
and
test
push
rorb
push
sub
xchg
mov
inc
popa
cwtl
lret
push
outsl
jmp
add
cld
sbb
and
ds
mov
sti
pop
push
sbb
mov
je
sub
pop
xchg
in
mov
lcall
or
pushf
je
mov
push
mov
mov
inc
xchg
push
push
test
lret
loope
add
mov
scas
shlb
cmp
jle
lret
leave
into
nop
fldl
movsl
lret
add
dec
ds
stos
and
xchg
out
mov
jae
cltd
imul
adc
xor
cmp
test
ljmp
push
push
push
inc
or
pop
ret
inc
mov
mov
ret
negl
shrl
pop
cmp
inc
test
adc
sbb
pop
pop
ja
repnz
push
int3
inc
xchg
inc
stc
dec
xchg
add
popa
sbb
stc
or
fabs
xor
xor
leave
xor
fbld
adcb
mov
or
xchg
pop
in
xchg
test
inc
or
mov
popa
repz
mov
xor
push
push
inc
cmp
jl
mov
ljmp
pushf
jmp
inc
pop
mov
xchg
xor
or
cwtl
out
mov
movd
and
ljmp
mov
lret
jl
mov
in
jge
fwait
out
int
and
scas
and
and
cmp
into
dec
fildl
mov
cwtl
mov
daa
ds
push
int3
sub
push
imul
pop
jnp
jp
aas
out
testb
adc
clc
repz
lock
shr
xchg
or
push
pop
adc
cmp
in
sub
cmpb
xchg
mov
lret
out
ds
loopne
lcall
popa
jno
shrl
mov
imul
neg
sti
sub
cmpl
rolb
jns
rcll
sbb
call
out
insb
nop
jno
test
xchg
not
pop
jecxz
xchg
ds
stos
push
and
jno
scas
push
fst
aaa
ljmp
push
adc
out
pop
je
popa
leave
xchg
into
frstor
mov
andb
out
inc
mov
outsl
imul
xor
adc
xchg
adc
xor
enter
nop
mov
push
shll
sbb
mov
xor
mov
mov
sarb
test
push
clc
cmp
jbe
cmpsb
mov
xchg
aaa
push
test
push
dec
mov
pop
push
push
push
dec
loope
fimull
xchg
jbe
outsl
out
test
inc
imul
fucomip
lds
mov
or
lds
sahf
and
test
jmp
add
call
lods
popa
fnstcw
inc
xchg
hlt
mov
scas
arpl
jo
loop
lock
jle
cmp
fwait
cmp
pop
push
and
pop
aas
push
push
ds
loope
ljmp
jg
out
jg
test
loopne
pushl
jecxz
push
push
mov
inc
inc
sbb
mov
mov
enter
sbb
cmp
int3
sub
shll
leave
leave
jo
lcall
mov
inc
bound
loopne
int3
mov
sbb
mov
fldt
inc
js
cltd
xchg
mov
sti
in
xchg
je
add
push
mov
pop
les
stos
mov
sbbl
mov
dec
stos
pushf
loop
fcompl
fldl
push
push
call
test
lock
and
push
and
sub
cmp
push
xchg
popf
adc
lods
jmp
mov
adc
xor
add
nop
add
popf
pop
adc
sbb
push
inc
fisttpl
shrl
nop
ret
xchg
inc
ret
testb
inc
leave
mov
test
jbe
xchg
insl
js
add
sub
pop
inc
jg
inc
push
negb
je
dec
xchg
aad
sahf
mov
mov
mov
xor
sbb
lret
movsb
loopne
xchg
mov
leave
push
ret
sbbl
js
xchg
jmp
imul
fisttpll
mov
inc
out
test
sbb
in
js
jmp
stos
pop
mov
or
imul
cmp
ds
xchg
jp
mov
xchg
bound
inc
imul
adc
add
sub
adc
sbb
jb
nop
push
xchg
pop
jo
pop
icebp
push
cmpsb
xchg
call
jo
loopne
fmulp
mov
je
xchg
cmp
mov
inc
jb
stos
jnp
out
je
stos
or
push
lods
dec
imul
add
test
sti
jp
loope
cwtl
xchg
stc
push
inc
imul
pop
or
lcall
jae
test
sbb
or
jp
notb
or
jo
stc
cmp
cmp
or
sbb
mov
lea
loop
into
mov
mov
mov
add
jmp
jbe
add
aad
fsqrt
or
sbb
cltd
cltd
mov
jns
into
push
mov
sbb
ret
adc
xor
and
stos
repz
xchg
in
arpl
adcl
cmp
ret
push
notb
inc
sbb
cmp
and
cmp
sbb
dec
push
andb
pop
imul
xor
pop
ljmp
fstl
push
test
test
jmp
stc
lock
lcall
mov
push
dec
int3
fldt
pop
out
sub
mov
xchg
inc
inc
ret
pop
mov
jno
adc
and
pop
cmp
mov
rcll
xchg
inc
cmpl
pop
popa
mov
jmp
jg
movl
addb
pop
inc
add
push
ljmp
cmpsl
pusha
cmp
in
jns
jns
inc
and
xchg
inc
xchg
push
lock
divb
lock
pop
out
push
fwait
xor
mov
shrl
fisttpl
add
pop
fildll
inc
xchg
push
cwtl
mov
pop
inc
sarb
out
xor
mov
leave
ret
xchg
jbe
adc
cltd
or
mov
push
or
imul
mov
adc
call
jb
sbb
pop
ds
and
sbb
inc
pop
loopne
scas
jp
adc
mov
mov
mov
bound
testb
xchg
int3
xchg
inc
xchg
cltd
cmp
popa
sbb
adcb
sub
sub
sti
out
inc
adc
clc
pop
movsl
inc
or
fwait
xor
push
xor
pop
inc
cli
xchg
jnp
mov
cltd
or
jl
and
jle
xor
dec
into
popf
pop
test
adc
mov
add
cmp
rcrl
enter
jmp
mov
imul
stc
push
cmp
mov
adc
rorl
cmp
fxch
repnz
adc
iret
popf
stos
xchg
loope
out
inc
pop
push
sbb
jbe
jne
int3
stc
dec
stos
stc
mov
inc
mulb
ret
jb
adc
xor
inc
shll
hlt
inc
sbb
mov
stc
push
push
xchg
fcomps
xchg
outsb
mov
xchg
jo
or
loop
lods
adc
cwtl
xchg
ds
fwait
adc
daa
call
insl
push
xor
fldl
cmpb
add
pop
bnd
inc
sub
jnp
loop
lcall
fneni(8087
sbb
mov
pop
mov
pop
mov
mov
aas
sbbl
sbb
gs
jg
or
xor
repz
push
jmp
adc
daa
xchg
je
lahf
cmpl
cmp
cmp
in
test
or
and
rclb
cmp
aas
mov
inc
cwtl
js
add
sbb
sbb
mov
mov
gs
sub
mov
jnp
jnp
testb
data16
mov
push
xchg
cmp
mov
push
popa
push
std
cmp
dec
push
sub
scas
jp
mov
jecxz
mov
xchg
jle
cmpb
nop
mov
mov
js
sub
mov
xor
fcomps
mov
ret
outsl
mov
push
cmp
adc
jb
fcoms
mov
xchg
mov
sbb
adc
fidivl
mov
ret
inc
das
jmp
xchg
mov
add
xchg
leave
stc
leave
push
xchg
push
mov
pop
xor
nop
bound
mov
ss
loope
out
lahf
pop
cltd
xor
leave
mov
fisubl
xchg
popa
call
mov
xchg
jle
test
xchg
aas
neg
fldl
loop
and
leave
and
push
push
pop
jp
sbb
add
and
inc
inc
imul
cmp
f2xm1
push
mov
jo
movb
sbb
cmp
xchg
xchg
shlb
mov
inc
sub
insb
jno
popa
rorb
sbb
and
jmp
mov
ds
mov
test
inc
xlat
push
mov
jmp
dec
mov
cmp
push
sbb
mov
mov
push
adcb
stos
push
out
mov
pop
mov
leave
inc
pop
pop
addr16
cmp
sub
hlt
or
aad
add
int
bound
imul
aas
cmp
xchg
push
mov
inc
lock
mov
inc
popa
sub
rcrb
pop
mov
pop
enter
xor
xor
clc
into
aaa
pop
jmp
fistl
setno
out
adc
repnz
mov
sbb
add
and
dec
jle
xor
stc
loop
inc
scas
fxch
sbb
mov
sub
test
gs
popa
test
das
add
jne
or
jle
adc
es
add
or
ret
leave
jb
mov
jp
dec
rclb
sub
adc
sbb
cltd
mov
mov
xor
bound
inc
aad
pop
lret
sbb
push
and
push
mov
push
sahf
jl
in
inc
push
push
scas
push
daa
fcoms
mov
ljmp
and
shrb
xchg
cltd
push
and
test
jl
push
pop
push
mov
andb
sbb
pusha
mov
and
push
sarb
xor
inc
or
inc
insb
fnsave
inc
test
mov
mov
mul
insl
imul
sbb
adc
mov
mov
push
push
scas
push
fcompl
insl
sub
cli
das
je
aas
nop
loop
inc
ffreep
inc
cmp
mov
popa
mov
fstl
xchg
fldcw
xchg
clc
fcomp
and
rcrl
stos
pusha
mov
mov
push
bound
leave
mov
ljmp
or
ret
inc
sbb
mov
mov
je
scas
clc
adc
sbb
andb
mov
and
sbb
cmp
ljmp
inc
jl
shlb
stc
mov
test
pop
adc
mov
inc
or
mov
dec
xchg
pushf
ds
mov
fwait
lret
aas
push
inc
xchg
mov
inc
and
or
ds
mov
icebp
inc
nop
jo
in
leave
add
test
cmp
fldenv
inc
lcall
sti
or
sti
mov
addb
mov
test
icebp
cmp
fisttpll
test
aas
mov
xor
xor
adc
sbb
sub
pop
stos
mov
xor
sub
push
mov
pop
cmp
ret
mov
push
sub
insl
lret
enter
mov
or
mov
repnz
mov
jae
fwait
add
popa
and
nop
mov
xor
jo
cmp
pop
ss
jmp
in
jo
inc
rcrl
pop
test
push
punpcklwd
sbb
jge
or
stc
push
js
fldenv
inc
sub
jmp
andl
movsl
jmp
addr16
push
xor
xchg
adcb
roll
lahf
sbb
adc
es
lcall
and
sbb
dec
add
sub
jmp
mov
int
push
call
ss
ljmp
ret
pop
mov
or
cmp
or
sub
mov
sbb
jg
inc
xchg
xor
js
adc
sbb
ret
mov
popf
adc
ret
jbe
popa
sub
adc
push
jbe
test
adc
mov
inc
sbb
mov
inc
push
lret
add
push
add
jo
adc
push
jmp
push
xor
shll
sbb
mov
xchg
popa
jb
fwait
call
out
xor
sbb
cltd
loopne
mov
sbb
xor
movsb
mov
fisttpl
inc
xor
popa
jecxz
fwait
jns
xchg
inc
inc
push
jno
popa
jbe
out
mov
pop
sub
popa
jns
xor
push
sbb
mov
sbb
cmp
jbe
jmp
stos
movsb
cwtl
xchg
rorb
loopne
xor
jge
mov
xchg
out
inc
jmp
sub
jb
xchg
negb
or
sub
out
jbe
shll
popa
pop
cmp
mov
fadds
shrb
sbb
cld
mov
pop
es
xchg
mov
pop
push
lcall
mov
sahf
andb
fwait
mov
mov
fprem
dec
mov
enter
mov
sti
xchg
push
nop
push
shrb
add
mov
mov
mov
fnstcw
fldenv
jmp
filds
cld
and
ss
repnz
fistl
xor
inc
add
sbb
fadd
sbb
stos
cmc
aas
or
negb
xor
sbb
stos
mov
aad
iret
popa
dec
enter
sbb
out
test
das
push
dec
sub
loopne
jnp
fldcw
lahf
call
xchg
mov
xchg
sbb
call
jmp
jle
push
lcall
mov
jo
or
sub
into
jp
out
mov
ds
push
sti
arpl
imul
ljmp
roll
cmp
mov
sub
mov
cli
fstps
jns
out
mov
xchg
negb
dec
adc
loopne
lret
sub
mov
repz
test
movd
sbbl
fdivl
mov
xchg
jle
add
jae
sub
adc
inc
and
sub
jecxz
leave
pop
dec
sub
jne
adc
shrl
arpl
cltd
mov
roll
lret
fldt
sarl
pop
ret
jmp
cmpsl
fsts
xchg
popa
inc
dec
pshufw
mov
xor
test
loopne
xor
adc
add
pop
jbe
push
outsl
sub
stos
ret
jg
mulb
push
arpl
mov
adc
sub
cltd
mov
test
mov
es
mov
fsubrs
mov
imul
lcall
mov
adc
lods
inc
loope
movsb
cmp
push
sarb
mov
or
cmpsl
rcrb
fistpll
push
fidivl
adcb
out
leave
pop
pop
js
mov
loopne
mov
out
mov
ja
pop
jnp
into
dec
je
sbb
xor
and
pop
and
xchg
leave
xor
sub
add
mov
add
ret
rcll
xchg
mov
xor
mov
rcrb
mov
pushf
cmp
and
inc
push
cmp
adc
or
scas
jb
jmp
into
daa
jo
lahf
shr
push
cld
lock
fsubrs
sahf
mov
nop
movsb
jno
jae
fwait
lock
sbb
fidivrl
adcb
into
lahf
jl
xor
sbbb
ret
xor
cmpsl
inc
push
xorb
mov
xchg
cmp
jmp
sahf
cld
ljmp
pop
mov
mov
xchg
loope
add
and
cmp
xor
dec
movl
sbb
xchg
je
repz
into
mov
pushf
fbstp
out
shr
mov
cmp
inc
and
jo
xor
into
fwait
inc
adc
jmp
jp
outsl
mov
mov
lea
shlb
stos
iret
sub
push
xor
dec
sti
xchg
stos
xlat
mov
xor
adc
popa
and
das
pop
mov
sbb
mov
fucomp
inc
xchg
jmp
out
inc
int
ss
mov
pop
jmp
int3
jns
mov
cmpsb
push
mov
ss
jp
andb
cmp
incl
and
outsb
mov
mov
xchg
pop
xlat
inc
xchg
in
jno
xchg
xchg
sub
inc
xchg
mov
xor
int
dec
jae
int3
pop
sub
sub
insb
popa
push
test
mov
ss
cmp
loope
push
shll
mov
xchg
push
bound
jno
and
inc
sar
sbb
sub
push
push
sarb
mov
arpl
push
pop
and
add
and
in
outsl
mov
add
cmp
mov
adc
jae
inc
mov
dec
fisttps
jmp
int
xorb
loopne
xor
ljmp
sub
inc
cmp
jp
inc
sbb
stos
fwait
cmp
outsb
cmp
jle
clc
sub
lret
shrl
xor
shlb
inc
push
out
jae
adc
in
pop
mov
arpl
push
sub
jmp
cmp
aas
imul
xchg
mov
jnp
das
aas
ret
mov
rolb
dec
test
sub
scas
lret
fldcw
jge
sub
sub
jmp
mov
es
or
shlb
jno
add
pop
icebp
mov
imul
mov
mov
jnp
jae
add
mov
sub
rclb
sbb
fildll
inc
xchg
popa
xor
stc
push
popf
outsl
mov
mov
sub
ljmp
rdtsc
mov
push
imul
sti
mov
popa
add
jns
leave
push
lret
testl
shrb
and
inc
ret
push
loopne
sub
cltd
pop
ret
cltd
pusha
outsb
call
pop
push
test
in
push
sbb
mov
aaa
mov
cmp
jmp
repz
dec
add
mov
mov
lret
fistpll
push
and
or
mov
mov
popa
jb
xor
mov
push
push
cmp
mov
stos
je
sahf
mov
adcb
mov
testl
ds
pop
dec
xchg
mov
and
mov
stos
pop
std
mov
push
fnsave
in
adc
sub
jo
call
ds
sti
lret
push
adc
enter
mov
nop
xchg
cmp
movsb
xchg
adc
imul
negb
roll
pop
xor
and
call
cmp
lea
ds
dec
push
push
push
cmpl
fwait
mov
pop
jo
sbb
loop
jmp
xchg
jl
movsb
in
jnp
ljmp
mov
out
cmp
mov
dec
call
popa
or
cmp
inc
loop
adc
loopne
mov
mov
popa
or
pop
mov
into
std
fst
imul
cmp
stc
xchg
inc
das
gs
lahf
adc
push
mov
rcr
into
push
fwait
arpl
mov
mov
and
rorb
sbb
mov
out
sub
mov
pop
and
pop
nop
clc
ss
stos
aas
sbb
sbb
add
enter
ret
test
fsubrs
ljmp
pop
insb
push
and
sbb
mov
std
push
sub
shlb
or
push
aas
add
sub
repz
mov
leave
mov
fwait
and
xchg
test
shlb
clc
fwait
and
sub
mov
adc
rcrl
ret
adc
stos
inc
outsl
ds
pusha
addb
jg
or
and
ja
lcall
cmp
ds
inc
or
outsl
mov
cs
dec
into
xlat
push
sbb
push
cmp
fstps
or
push
repnz
jecxz
push
or
ljmp
je
cs
or
sub
push
cltd
dec
or
push
stos
push
jle
xchg
cmp
scas
leave
cmp
mov
cmp
ljmp
pusha
sti
xor
adc
jmp
test
notb
jo
jmp
jmp
push
mov
xor
cmp
xlat
and
and
cmp
pop
mov
inc
call
icebp
cmp
loopne
xchg
adc
push
rol
inc
es
pop
in
jne
xchg
scas
ja
inc
imul
nop
mov
cmp
push
movsb
sub
leave
inc
push
xchg
mov
arpl
pop
mov
xlat
ds
out
je
fdiv
rcrb
test
icebp
out
jo
cli
xchg
jmp
shl
popa
pop
sub
outsb
add
mov
or
cltd
sub
andl
push
out
sahf
fildll
xchg
push
sub
sub
push
adc
test
ds
fstps
push
push
jmp
fnstsw
loope
not
sbb
aas
mov
out
flds
xchg
insb
and
in
gs
mov
ss
mov
adc
sbb
xor
mov
push
ret
pop
fcoml
inc
pop
pop
repnz
sbb
out
or
loopne
pop
insb
mov
sahf
mov
movl
add
cltd
sub
sbb
ret
mov
jge
pop
adc
stc
loopne
test
into
lret
adc
cmp
mov
fwait
push
fs
sbb
cli
inc
cli
xor
dec
int3
inc
pusha
lret
xor
outsl
lock
pop
rclb
or
xor
stos
mov
imul
les
jmp
or
pop
pushf
orl
xchg
cltd
out
xor
inc
icebp
mov
sbb
and
pop
dec
cmp
mov
lret
sahf
enter
call
daa
jno
cltd
les
ljmp
out
mov
ljmp
imul
push
jmp
lret
and
cmp
jp
jns
mov
cmp
flds
cmp
pop
lcall
ret
push
pusha
inc
and
dec
imul
sbb
jmp
adc
inc
into
fimull
jnp
cmp
sti
enter
ret
icebp
xchg
cld
rolb
ror
adc
jmp
mov
jp
add
push
stos
gs
imul
push
and
into
xor
in
shlb
mov
push
sub
or
leave
sub
cli
mov
push
or
inc
arpl
shr
bound
sub
popa
mov
stos
popf
mov
imul
mov
sbb
ret
mov
sub
scas
xor
jp
icebp
sbb
ror
push
and
mov
jmp
xor
xchg
ror
repz
imul
hlt
xor
sbb
je
mov
inc
xchg
insl
jnp
out
imul
test
ret
cmp
fidivrl
cwtl
mov
stos
xor
or
fiaddl
stos
fwait
clc
pop
jmp
lock
lds
mov
insb
into
loop
dec
inc
mov
cmp
sbb
je
jmp
sub
fidivrl
cmpsb
adc
mov
sbb
loope
nop
and
loope
mov
cmpb
rcr
stc
scas
arpl
xchg
fidivrl
js
fwait
daa
addb
imul
test
mov
and
and
imul
xchg
test
sub
add
push
loope
rclb
addb
lds
adc
and
cmp
test
lcall
mov
aas
lock
mov
xchg
lock
sub
leave
ljmp
loope
stos
fld
adc
jmp
daa
repnz
stos
and
loop
imul
inc
jo
je
pop
cwtl
movsl
pop
cmpb
and
xlat
out
or
cmpsl
xor
lret
shr
jecxz
notl
add
inc
bound
dec
jb
ret
jmp
jbe
loopne
testl
dec
jb
sub
test
sub
adc
push
push
jg
aaa
mov
in
adc
adc
or
mov
push
int3
inc
lock
scas
push
push
xor
aaa
pusha
push
mov
int
bnd
mov
jle
divl
sub
out
data16
and
cltd
decl
hlt
push
xcrypt-cbc
cmpsl
pop
cs
lcall
insb
sbb
data16
das
pop
inc
xor
out
mov
adc
fisubrl
jbe
cmpsl
stos
notl
jl
xlat
loopne
sahf
ss
push
pop
lret
sbb
shlb
sub
cmp
iret
cwtl
cwtl
pop
stos
fists
adc
mov
out
loop
xlat
sbb
mov
push
fimull
pop
cmpsl
arpl
sub
fcoml
imulb
pop
lret
imul
push
out
sahf
add
ss
ret
mov
add
dec
mov
cmpsb
fwait
push
in
xchg
adc
or
fs
and
push
cmp
pusha
and
mov
movsb
jb
cld
pop
inc
mov
daa
stc
jbe
in
cmpsb
ret
mov
pop
jbe
movsl
mov
sbb
dec
cmc
mov
movsb
adc
pop
jl
lds
ret
addb
lea
mov
xchg
int3
adc
cmp
into
jecxz
dec
push
inc
push
lahf
xor
dec
sub
mov
mov
mov
inc
mov
aam
add
ficoms
lret
js
pop
pop
ja
ret
mov
mov
mov
ds
and
xor
sub
fistps
push
xchg
xchg
and
loop
sub
pop
jmp
xchg
movsl
cld
pop
jbe
adc
call
dec
jo
in
xor
push
fistpll
jae
sbb
xor
push
in
pop
out
cmpl
xor
dec
lods
int
les
pop
cmovge
sbb
pop
push
pop
lods
fdivrl
jo
sub
xchg
mov
arpl
clc
pop
and
jmp
daa
jbe
sub
cmpsl
xchg
pusha
lea
jo
shrb
mov
push
out
nop
cli
push
cmp
cmpsl
loopne
add
test
or
jecxz
push
mov
lea
sub
adc
insl
shrl
push
mov
mov
mov
loopne
pop
inc
inc
sbb
push
xchg
pop
iret
cmpsl
fcmovbe
repz
loopne
fdiv
fildll
xchg
pop
fwait
ja
xor
xchg
nop
add
fucomip
les
insb
aaa
negb
orb
mov
out
cmp
push
fstl
bound
xchg
pusha
pop
test
bnd
gs
out
movb
adc
mov
and
jo
jg
je
cmpb
push
push
mov
fcoml
sbb
push
popf
mov
xchg
ficoms
xchg
in
push
cltd
mov
xor
jns
es
icebp
pop
sbb
dec
fwait
mov
cmp
arpl
xor
dec
pop
add
sahf
movsl
push
sub
adc
ret
es
push
push
dec
in
adc
pop
xor
popa
pop
les
push
std
push
xlat
out
loopne
inc
push
nop
mov
icebp
mov
pop
shlb
loopne
xchg
mov
pop
dec
mov
arpl
test
xchg
jo
jne
mov
andb
mov
cmpsb
pusha
movsl
cmp
xchg
adc
dec
pop
shrb
mov
data16
and
rclb
jle,pn
in
adc
push
shll
dec
iret
pop
push
sbb
xor
pop
ret
jo
mov
lret
sahf
inc
popa
in
fs
dec
mov
pop
jb
cmp
outsb
mov
sahf
or
sbb
xor
xor
clc
mov
sub
cmp
cmpb
pop
jns
cwtl
lcall
outsb
fwait
mov
in
fcmove
mov
imul
inc
jp
and
mov
ljmp
es
out
push
das
inc
cmpsb
pop
pushw
sub
or
nop
fcomps
adc
movsl
push
out
lret
pop
lods
ljmp
nop
negl
popa
out
pop
jae
push
pop
add
movsl
mov
dec
xchg
mov
cltd
sub
xchg
pushf
testb
fisubs
es
insl
push
add
pop
aaa
les
pop
fcompl
push
ret
les
out
xor
movsl
hlt
daa
adc
mov
jg
out
cmp
pushf
pop
jne
mov
pop
add
sbb
cld
pop
test
push
in
pop
inc
ret
fisubl
out
sub
dec
mov
inc
push
sbb
leave
adc
fwait
sahf
outsl
mov
xlat
ljmp
div
arpl
xchg
sbb
add
addb
adc
add
sahf
ficomps
cli
inc
bound
push
inc
mov
add
lds
or
xor
les
pop
fwait
icebp
xchg
sbb
adcb
pop
shr
push
out
pop
jp
push
xor
in
mov
xchg
mov
sub
pop
mov
adc
pop
mov
sub
mov
or
rep
insl
pop
test
out
push
mov
push
pop
pop
sub
repz
or
repnz
or
dec
mov
mov
inc
xchg
jnp
mov
ror
insb
arpl
jo
pop
mov
lret
das
push
into
mov
mov
xchg
sbb
cmp
sub
cmc
and
cli
fs
out
xchg
outsb
out
pusha
push
mov
jl
cld
aad
xor
push
and
lods
inc
pusha
jl
leave
sub
push
test
stos
pop
fdivr
dec
cmp
mov
and
mov
pop
jbe
xor
jbe
cmp
and
aad
xchg
push
mov
fsubs
xor
mov
add
or
in
and
push
lods
jb
cmp
test
push
hlt
pop
shl
jb
sub
pop
xor
sbb
sbb
sbb
pop
xchg
sub
inc
in
mov
push
imul
mov
cmp
push
scas
int
insb
ljmp
fcompl
pop
inc
inc
xchg
outsb
and
pop
cmp
mov
pop
mov
ja
jecxz
mov
add
mov
mov
xchg
cmp
mov
sbb
fwait
ret
mov
mov
push
in
add
fcmovnb
jecxz
fmul
pop
cmp
mov
into
cwtl
out
push
in
dec
pop
push
out
mov
or
fidivrs
rcrb
addr16
push
test
popf
andb
push
imul
mov
hlt
popf
pusha
fldenv
mov
test
shll
aas
jne
sub
and
pop
xchg
jns
insl
jbe
mov
jmp
in
fwait
loopne
sbb
xchg
pop
and
and
scas
xlat
push
fadds
push
jnp
pop
cmp
cmpsb
jnp
dec
jp
pop
jecxz
inc
call
push
xchg
jae
pop
das
clc
fwait
add
sub
sbb
and
stos
xor
data16
inc
add
pop
pusha
adc
push
pop
sub
pop
or
cwtl
icebp
mov
cmp
ss
xor
bound
mov
clc
out
inc
push
es
rcrl
dec
cmp
inc
aaa
fbld
stos
sbb
push
jbe
pop
and
jmp
mov
and
inc
inc
sub
ret
jg
cmc
je
lcall
sub
push
and
mov
mov
inc
push
sbb
sbb
pop
call
loopne
push
stos
pop
xor
addb
movsl
xchg
mov
dec
fldenv
push
in
fsubr
insl
jbe
stos
push
ljmp
xchg
add
push
pop
mov
mov
xorb
jg
shrl
popa
sahf
dec
test
pusha
inc
sbb
push
fdivr
stc
data16
inc
repnz
mov
mov
aas
mov
xchg
pop
aam
cltd
clc
das
mov
aam
fisttpl
fbld
pop
aas
sub
cli
mov
add
pop
ja
jmp
and
int3
dec
adc
jns
push
xchg
or
jl
mov
push
push
pop
push
mov
pusha
adc
xlat
imul
inc
sub
pop
nop
clc
push
jle
out
fistpl
pop
dec
ret
or
aam
add
stos
pop
pop
and
mov
pop
push
in
cmpsb
push
or
data16
add
jns
cmc
mov
stos
addr16
mov
icebp
lods
sarb
pop
test
ret
pop
fistps
xchg
add
sub
pop
fnstenv
add
outsb
imul
pusha
data16
fidivrl
mov
fistpl
sbb
clc
js
cs
xor
mov
sub
or
mov
mov
decl
sub
stos
aad
sahf
dec
sub
inc
adc
repz
addr16
pop
jg
ja
adc
and
push
out
loopne
sti
loope
or
mov
cmp
std
icebp
insl
aaa
mov
cmpsl
xchg
pop
jge
in
ret
jg
cmpl
adc
dec
sbb
dec
pop
jmp
arpl
push
mov
jns
flds
pop
je
add
loop
and
fs
jmp
pusha
imul
repnz
sub
pop
mov
fstpl
out
xchg
ljmp
sub
in
adcb
sub
pop
adcl
aas
adcl
push
sub
scas
dec
adc
mov
inc
imul
loopne
outsl
rol
pop
sbb
mov
pop
mov
lods
xor
test
stc
push
or
cwtl
negb
or
dec
cmp
pop
in
repz
ss
inc
push
jb
ja
call
es
pop
push
xchg
cmpsl
cmp
dec
negb
mov
mov
adc
lods
mov
addl
pop
test
pushf
push
push
sub
cltd
cmpsl
outsb
orps
mov
inc
fbstp
addr16
jo
stos
or
inc
je
pop
scas
sar
xchg
add
scas
push
cmp
stc
stos
jnp
xchg
sbb
fidivrl
lods
ja
adc
enter
rcrb
test
xchg
and
mov
push
dec
popa
push
subb
inc
xchg
lcall
push
outsl
push
or
dec
add
das
popa
cmp
and
jp
mov
inc
cmp
lcall
pop
sbb
cltd
and
mov
cwtl
in
data16
mov
data16
push
pusha
mov
movb
and
loope
mov
pop
and
adc
pop
fwait
mov
mov
pop
sub
insb
jp
lcall
mov
arpl
pop
adc
lahf
out
xchg
out
push
xlat
or
sbbl
popf
mov
pop
pusha
mov
pop
inc
pop
imul
das
dec
inc
push
cmp
inc
lea
cmp
les
jne
dec
mov
gs
mov
mov
mov
adcl
ljmp
test
aas
js
mov
out
pop
xor
sbb
jl
mov
loope
icebp
push
outsb
in
ja
inc
pop
sub
cmp
aaa
mov
hlt
pop
sub
cmp
ficompl
loopne
fcoms
jns
and
push
adc
xor
pusha
xchg
push
lcall
int3
push
push
push
cmpsb
inc
int
pop
mulb
js
sub
ror
cmp
and
sbb
jmp
sub
cmpsl
int
mov
shlb
pusha
scas
out
sub
mov
sub
lea
cmp
test
add
or
xchg
pop
lds
or
xchg
sub
cmc
negl
jne
and
aas
push
pop
arpl
push
movsl
pop
mov
push
cld
jbe
pop
pop
in
xchg
outsl
das
mov
cmp
and
cmp
cmp
aad
pop
mov
pusha
pop
imul
or
push
test
pop
vmwrite
sub
rcrl
or
aad
cwtl
ficomps
push
xorb
mov
cli
pop
jns
pop
hlt
imul
lret
pop
lea
jns
pusha
dec
xchg
mov
fstpt
xlat
pop
js
mov
xor
xor
out
cmpsb
in
pop
notl
inc
push
or
adc
pop
cmovne
fwait
dec
xchg
pop
jb
rcll
xchg
jecxz
pop
arpl
mov
int3
inc
sbb
out
fmuls
mulb
xlat
repnz
mov
xchg
lds
adc
jl
push
xor
dec
xchg
mov
sub
in
pusha
loopne
jno
and
xlat
bound
dec
xor
cmp
push
incl
sbb
push
xor
push
and
lods
or
push
xchg
jnp
aaa
xor
outsb
xchg
adc
ret
lret
pop
sahf
or
mov
add
cs
mov
add
mov
loop
fidivrl
mov
bound
mov
and
xor
sbb
fisubrl
sahf
pop
xlat
sbb
xor
icebp
dec
and
outsb
jge
fldcw
pusha
cmp
pop
or
inc
and
mov
push
pop
sub
sub
and
test
daa
repnz
cltd
cmp
pop
nop
dec
imul
flds
insl
jnp
pushf
cmp
xor
popa
dec
push
enter
call
insb
repnz
sbb
es
nop
lret
mov
mov
and
cmp
jg
test
adc
lds
mov
clc
push
data16
cmpl
add
push
pcmpgtw
lret
mov
pop
sub
negb
dec
addr16
jbe
sbb
lods
jl
mov
movsb
pop
ss
fstpt
addr16
and
movsl
jecxz
mov
stc
add
jge
pop
mov
mov
leave
repz
add
pop
push
pop
mov
jge
lret
or
adc
pop
aad
mov
lret
in
bound
popa
in
cmp
mov
imulb
adc
lock
jge
cwtl
push
xchg
cs
dec
inc
jbe
sub
add
outsb
sahf
push
adc
inc
jb
addl
mov
jle
fistl
cmp
add
jns
sbb
push
jae
inc
pusha
mov
ja
outsb
pop
mov
add
and
pop
inc
sub
sbb
sub
aam
stos
inc
loope
jae
jo
jno
push
hlt
dec
ss
mov
dec
jecxz
xor
inc
push
adc
sub
sbb
fs
aas
shr
ja
jnp
mov
sbb
lret
sbb
lcall
jo
stos
mov
cld
xor
pop
js
idivb
add
std
or
jmp
push
mov
inc
stc
sbb
into
jbe
sbbw
mov
les
push
push
sbb
rcrl
aaa
sub
jg
cltd
adc
nop
jae
int
ficompl
xchg
mov
loopne
lea
dec
jge
pop
fs
imul
and
jnp
scas
rcll
fwait
int3
pop
dec
add
imul
rcr
pop
mov
shrl
sub
jge
and
shll
sub
add
mov
fucomp
data16
xchg
sbb
stos
jns
jecxz
or
pop
xchg
aam
pop
pusha
lea
jae
seto
mov
movzbw
shld
mov
bts
xor
neg
pushf
mov
cmc
movb
stc
xor
pusha
call
sbb
shrd
stc
mov
call
push
scas
scas
xor
pop
push
pop
in
lds
jb
adc
sar
inc
cltd
mov
inc
leave
mov
scas
mov
xchg
sbb
cmpl
xor
inc
pop
inc
mov
mov
mov
mov
jecxz
movsl
adc
out
or
mov
fbld
jmp
push
adcl
inc
lock
jb
and
mull
push
push
cmp
in
xor
jb
dec
pop
and
xor
sub
inc
cmp
es
cs
dec
fs
add
stc
popa
adc
das
and
in
jp
adc
mov
fimuls
xchg
dec
lea
aaa
out
push
xchg
cmc
inc
negl
push
push
stos
ret
jbe
ss
js
inc
sbb
pop
and
mov
jae
push
outsl
daa
shlb
jb
out
jge
push
sbb
in
orl
mov
or
sbb
cmp
sub
pushf
cwtl
repnz
cmpsl
dec
out
pop
sarl
adc
js
push
pop
sub
mov
std
lret
xor
aaa
and
movsl
loop
fwait
xchg
pop
and
int3
insb
dec
pushf
push
loop
adc
mov
inc
adcl
loope
rolb
or
dec
dec
xchg
daa
repz
fcmovnb
or
push
push
add
jae
insl
pushf
cmpsl
sti
push
lock
push
leave
popa
jns
stos
scas
lea
test
add
not
push
movzbw
not
mov
pushf
movl
pusha
lea
jmp
mov
movw
jmp
imul
movb
call
cmc
test
cmp
call
repnz
jmp
cmp
aaa
aaa
cmpl
lock
rcr
jns
mov
push
lock
std
push
jle
xorb
outsl
and
sbb
andl
imul
inc
pop
adc
mov
jg
add
add
test
out
push
int
jge
out
mov
inc
mov
dec
sub
aaa
movsb
fisttpll
mov
add
cltd
fisttps
or
mov
jg
inc
xchg
and
inc
sub
into
jno
pusha
mov
ror
insb
add
jg
cltd
outsl
dec
jle
pop
or
loope
push
fildll
mov
into
aaa
nop
add
mov
aaa
cwtl
fwait
sarb
adc
and
cmp
ret
adc
cmpsb
lret
sub
dec
mov
xor
stos
dec
pop
dec
fs
push
sbb
das
cmp
mov
jmp
push
inc
jmp
movl
mov
lea
jmp
add
pusha
add
call
in
ss
aaa
mull
ror
mov
shll
mov
cmp
mov
fcmovnb
cmp
dec
test
inc
xor
jae
ret
push
dec
outsl
inc
out
stc
into
les
fildll
jo
jecxz
lcall
lahf
sbb
int
repnz
add
xchg
das
mov
sub
mov
add
aad
enter
sbb
flds
adc
dec
ffree
in
push
mov
jecxz
enter
ret
arpl
mov
and
add
lea
jmp
push
pushl
popl
pusha
movb
pushf
movl
pushl
ret
lea
je
and
sub
pusha
bt
xadd
mov
btc
or
ror
movsbw
mov
dec
or
adc
shr
add
sub
cmp
neg
mov
stc
or
pushf
mov
pusha
lea
je
xor
pusha
movb
add
not
sub
rcr
not
shr
xadd
mov
neg
shr
sub
pushf
add
movw
not
lea
jl
rcr
add
bsr
pushf
rol
mov
pusha
push
shr
bt
lea
jnp
cmp
pusha
jmp
lea
jne
neg
aad
pushf
shl
xor
mov
stc
pushl
bsr
mov
sete
or
clc
add
inc
pusha
mov
jmp
pushf
jmp
pusha
pushl
call
movb
movsbw
push
mov
movzbw
pushf
lahf
lea
movw
pusha
pushl
movl
push
jmp
jmp
jp
push
push
inc
inc
sub
push
push
push
pop
inc
push
push
inc
inc
push
sub
pop
inc
pop
push
push
push
push
push
inc
push
push
pop
push
sub
pop
pop
push
pop
pop
push
push
sub
push
pop
pop
push
push
push
pop
pop
pop
push
push
pop
push
inc
push
inc
dec
push
pop
inc
ss
push
cmp
iret
adc
repnz
adc
add
scas
ret
jle
aaa
outsb
mov
or
and
sbbb
mov
xchg
sti
loopne
loopne
lea
ja
push
mov
mov
movzbw
xchg
bswap
mov
call
push
pusha
movl
jmp
lock
cmp
insb
push
push
nop
jno
sbb
or
jmp
mov
scas
jae
rcrb
push
jge
or
xchg
or
cmp
jae
ret
pop
lds
fdiv
sbb
jns
pop
xor
insb
inc
adc
xchg
jb
push
mov
xor
jg
mov
mov
mov
pop
inc
xor
dec
les
push
outsb
xchg
mov
mov
push
inc
jecxz
pop
inc
mov
inc
loop
xor
scas
push
fcmovnu
sub
call
push
or
inc
aaa
and
jo
in
insb
fidivrs
dec
xor
cltd
outsl
push
adc
add
scas
rorb
fwait
xor
jg
add
pop
jns
js
cltd
mov
popa
es
je
sub
jge
pop
jecxz
mov
dec
cmc
aaa
sahf
jl
push
mov
xchg
fsubs
add
xchg
add
popf
push
and
call
into
mov
and
inc
shll
outsb
sti
pushf
lea
call
call
cwtl
movl
call
mov
call
lea
je
mov
mov
lahf
bswap
lea
pusha
push
xchg
pusha
pushl
popl
call
jmp
imul
cmc
add
pusha
mov
push
movb
lea
jmp
pusha
call
movl
push
push
movb
mov
lea
jmp
call
lea
jbe
bsf
mov
pushf
pop
clc
add
bsr
cmc
sub
mov
dec
add
sar
movl
adc
mov
call
pushf
movzbl
mov
movsbw
movzbl
mov
not
not
jmp
rcrb
cmp
add
push
sbb
lock
sub
negb
push
dec
adc
and
cmpsl
dec
jle
xchg
pop
jbe
push
pop
shl
rcl
frstor
outsb
lods
out
xchg
into
jmp
outsb
rcrb
push
ds
mov
mov
pop
pop
inc
es
call
mov
pop
movsl
fiadds
scas
jmp
addr16
shlb
cmp
aaa
dec
jns
bound
mov
ret
push
jg
and
out
fimull
loop
add
hlt
cwtl
inc
bnd
xchg
pop
fildll
pusha
cmpsb
xchg
jl
cltd
pop
and
cmp
imul
outsb
and
add
mull
xlat
xchg
jb
enter
mov
pop
mov
std
and
pushf
dec
xorb
mov
xchg
nop
insb
cmpb
dec
lret
adc
jo
aad
popf
jl
insb
adc
cmp
iret
push
out
mov
aad
push
lahf
outsl
sbb
cmc
xchg
imul
push
rorl
arpl
push
jp
lahf
call
cltd
pushf
clc
test
xor
bt
clc
test
mov
jmp
xchg
or
cmp
aaa
push
sub
mov
fldenv
jmp
xchg
iret
mov
outsl
mull
insl
inc
lcall
outsb
mov
out
dec
popf
dec
fildl
lret
fcmovnb
mov
mov
and
movsl
mov
jne
push
enter
xchg
popa
sahf
pushl
test
call
mov
pusha
push
movw
pushf
pushl
ret
dec
pushl
test
call
push
pushl
call
push
lea
jne
movsbw
sub
mov
cmc
or
pushf
lea
je
movzbw
pushf
not
call
pushf
dec
pushf
pushf
jmp
dec
pushf
push
pushl
rol
mov
call
jmp
shr
jmp
jmp
test
xor
push
movl
jmp
ror
push
pusha
call
call
in
push
xor
add
jecxz
insb
nop
fldenv
into
mov
jbe
add
add
jbe
mov
je
adcb
cld
mov
dec
lods
idiv
loope
jge
and
adc
imul
or
xchg
sti
lcall
or
add
clc
add
movb
push
push
mov
lea
jmp
movl
push
lea
jmp
add
ds
aaa
out
sbb
jno
and
mov
add
add
add
fcmovne
push
cmp
loop
hlt
bound
add
into
test
push
mov
jge
cmp
stc
pop
add
mov
outsb
mov
add
mov
lds
push
sarl
out
add
subb
and
je
call
pushl
lods
movb
pusha
dec
sar
stc
or
neg
xor
not
pushl
dec
stc
rol
mov
jmp
xchg
call
jmp
outsl
movsl
je
inc
aaa
mov
dec
in
sub
test
leave
mov
loope
aaa
push
mov
jae
sub
jle
xchg
outsb
out
das
call
test
cmc
popa
jnp
fisubs
dec
in
in
push
fcmovnb
pop
imul
shll
out
mov
add
in
mov
jmp
out
mov
add
lock
bswap
push
shl
add
setg
cmc
mov
stc
bt
sub
test
push
sar
dec
inc
push
pusha
rcr
mov
cmp
mov
sub
lahf
pushl
lea
pusha
mov
jmp
jmp
fwait
outsl
sarb
aaa
stos
adc
icebp
movsb
jle
sub
lods
mov
jo
loopne
divl
cbtw
mov
jmp
dec
lock
lock
ja
add
shlb
ror
mov
scas
mov
mov
add
mov
std
rorl
insl
int3
sahf
in
imul
neg
loop
sub
mov
out
neg
xchg
mov
bswap
jecxz
mov
dec
mov
aaa
out
mov
pushf
sbb
cmp
inc
sbb
and
jnp
pop
cs
dec
cmp
lods
pop
test
sbb
jbe
xchg
pop
fcoml
outsb
addr16
nop
pop
adc
xchg
flds
xor
cmc
inc
pcmpgtd
aas
inc
mov
cltd
mov
sbb
clc
mov
out
sbb
mov
sub
sub
aas
dec
mov
sub
cmp
cmp
imull
sahf
xor
cmpl
push
int3
lds
into
cli
pop
add
jae
dec
js
sbb
orb
fdivl
lods
cmp
mov
jb
jb
cmp
mov
xchg
add
enter
mov
xlat
pusha
pop
push
cmp
xchg
mov
out
idivb
push
cltd
out
adc
dec
mov
outsl
cs
or
sbb
fisubl
jo
cmc
pusha
lea
jo
pushf
adc
lea
push
pushl
ret
jo
leave
inc
inc
aaa
mov
push
fldt
movsb
rorb
pop
adc
inc
push
fidivs
js
fs
inc
daa
adc
loopne
stos
fdivl
pop
inc
add
iret
or
aas
out
fsts
insb
stos
or
loop
push
cltd
cmp
xchg
dec
xchg
sub
inc
sub
jb
add
fcomp
mov
pop
cmp
lret
arpl
rcrl
aaa
lahf
xchg
mov
sub
push
mov
ss
dec
shrb
add
adc
cltd
adc
sarb
cs
sbb
xor
push
mov
mov
dec
arpl
adc
mov
xor
pop
aaa
sbb
cmp
cmp
je
mov
jo
mov
adc
popf
rdtsc
nop
push
pushf
pushf
call
push
sub
aaa
add
mov
jbe
sahf
pop
pop
jmp
pop
rcrb
test
mov
fldcw
mov
adc
ret
aad
and
jp
add
push
or
pop
sub
push
push
sub
jl
mov
push
adc
gs
push
xor
insb
test
mov
mov
xor
pop
xchg
xchg
rorb
jecxz
inc
pushf
jmp
pushf
lea
jae
cmc
jmp
mov
mov
pushf
lea
jmp
pushl
lea
jne
not
sete
bt
rol
mov
clc
stc
or
push
lea
je
movsbl
mov
xchg
lea
pushf
movsbw
not
movzwl
movw
mov
lea
movzbw
mov
jmp
movsl
and
inc
inc
aaa
bound
sbb
aad
lods
push
adc
fildl
jbe
jbe
test
sahf
into
xchg
mov
lods
mov
add
sbb
mov
fidivl
mov
fadd
ss
inc
mov
jge
test
xor
popa
lcall
lret
jmp
add
push
inc
inc
aaa
gs
lcall
mov
mov
mov
hlt
in
test
pusha
in
sarl
xchg
repz
pop
leave
adc
into
push
negb
and
fwait
xorl
mov
lret
icebp
sub
xor
fstl
cmp
jo
test
and
jae
cmc
pusha
test
jmp
cld
sub
inc
inc
aaa
or
aaa
sahf
cli
lods
jmp
out
pop
fsubr
stc
mov
mov
jb
lret
push
xchg
or
outsl
push
and
cmp
jne
inc
je
and
imul
push
pop
lods
jnp
fwait
aam
lock
lods
push
ss
jle
iret
cmp
insl
xchg
jae
sub
push
dec
out
add
inc
movsb
sahf
fwait
aam
rclb
rcr
pop
inc
stos
sub
jg
stos
mov
dec
mov
movb
and
sub
adc
lock
repnz
inc
mov
push
inc
mov
mov
jge
shl
push
scas
fnstcw
xor
mov
fs
ja
mov
dec
pop
divl
scas
push
int
lcall
mov
ja
add
cmp
lcall
xlat
ror
movsl
inc
lahf
gs
mov
mov
push
inc
ss
xor
lcall
dec
cmovp
lcall
cmp
test
icebp
mov
in
aaa
pop
inc
sete
test
divb
jo
aam
pusha
mov
pusha
inc
setl
call
lods
movb
not
dec
adc
shl
shl
or
xor
call
add
inc
js
je
jb
arpl
jae
divl
inc
inc
aaa
stc
xor
fadd
incb
mov
sahf
mov
sbb
push
hlt
rcrl
xchg
dec
mov
push
popf
dec
vpshlb
cmpsb
incl
adc
inc
xor
out
mov
dec
ss
ljmp
pop
mov
dec
pusha
mov
or
jle
mov
test
jne
sbb
movsl
jmp
test
cmpsb
ror
mov
mov
push
loopne
xor
lret
mov
push
mov
add
pusha
dec
rcl
rol
pushf
call
bt
pushf
pusha
or
jmp
push
mov
dec
movb
cmc
not
push
rol
call
pushf
shl
shrd
cmp
mov
cmp
mov
test
pusha
and
jmp
pusha
pushf
mov
movl
pusha
movl
pushf
push
mov
pushf
lea
jmp
call
movl
call
pusha
xchg
pop
inc
inc
aaa
shrb
pop
loop
addr16
in
hlt
xchg
push
popf
jmp
push
mov
add
and
lret
push
fxch
addb
mov
xor
push
enter
popa
xchg
pop
arpl
xchg
sub
cmp
inc
sbb
iret
in
inc
mov
mov
xor
or
test
xor
or
and
call
jmp
repz
pusha
jmp
movb
pusha
push
movl
pusha
mov
push
movw
lea
jmp
pushf
lea
jne
bsr
mov
test
add
pushf
movw
mov
movzwl
bts
bsf
stc
movsbw
mov
pusha
mov
add
stc
mov
pushf
mov
cmc
call
jmp
lods
xchg
pop
dec
inc
aaa
shr
xchg
or
cmp
sbb
push
popa
dec
fbld
into
sbb
inc
testb
or
jp
cmp
pushf
sub
pop
push
cmc
dec
mov
sbb
mov
mov
lret
jle
cltd
mov
jnp
inc
lods
test
mov
outsl
cmp
push
jae
div
jns
icebp
mov
xor
aad
jbe
sub
inc
mov
add
adc
lcall
dec
or
or
or
ret
dec
inc
aaa
sbb
psubsw
mov
jmp
fst
add
sbb
mov
je
mov
or
scas
scas
sub
loope
test
sub
jp
inc
adc
add
cmp
loope
adc
ss
pushf
mov
aas
push
mov
insl
adcb
in
push
mov
scas
mov
cmp
pusha
push
scas
fcmovne
xchg
add
std
xchg
cmp
test
out
in
add
jg
jne
dec
push
lcall
mov
dec
mov
inc
fistps
xchg
ret
movsbl
pushf
xchg
mov
movsbw
pop
movsbw
xchg
mov
push
mov
movzbl
jmp
lea
call
push
movb
call
pusha
pusha
pushf
mov
not
movw
pop
pop
pushl
popl
push
movzbw
mov
movzbw
pushf
movl
pushf
lea
pushl
movw
pushf
movl
jmp
dec
pop
xchg
dec
inc
aaa
lahf
and
adc
mov
imul
cmp
insl
adc
stos
stc
rcrl
das
push
int3
das
xchg
jo
mov
push
stos
xor
repz
icebp
push
es
xor
pop
mov
sub
xchg
sub
xchg
jnp
pop
repz
mov
inc
adc
cld
inc
mov
inc
mov
xchg
or
mov
mov
shrb
and
loop
add
bswap
mov
jmp
mov
jmp
mov
lea
je
pusha
or
pusha
pushf
call
mov
lea
pop
push
movw
pushl
ret
add
add
and
adc
push
add
and
xor
pop
add
add
fsub
sub
aaa
add
mov
jno
ja
push
sahf
jg
jmp
jnp
push
xchg
adc
push
xchg
insb
add
xor
std
aad
sti
sub
or
outsb
pusha
push
inc
and
mov
pusha
pop
test
add
stos
dec
lahf
icebp
daa
fld
cmp
xor
iret
xor
pop
inc
inc
int
mov
lods
out
mov
jns
pop
aaa
mov
out
daa
jmp
out
call
add
or
add
out
std
xlat
or
fwait
adc
das
aad
jo
inc
or
sti
cld
dec
out
mov
or
lods
push
add
fsts
mov
push
push
pusha
movb
lea
jmp
imul
inc
aaa
cmpsb
push
mov
lds
dec
lods
inc
add
scas
jae
js
mov
adc
mul
push
lea
or
test
rcrl
mov
add
popf
idivl
cmp
and
or
lods
mov
inc
clc
decl
movl
lea
movzbw
lea
mov
call
cmp
pusha
clc
cmp
push
jmp
mov
aaa
test
jmp
push
push
jge
add
sbb
jae
jnp,pn
mov
sahf
lret
test
outsl
adc
pop
fiadds
addb
lret
mov
incb
femms
adc
cld
fmul
leave
in
xor
into
xchg
cmp
insl
icebp
add
das
addr16
in
das
dec
and
xchg
push
mov
pushf
push
arpl
insb
dec
mov
addl
pusha
push
test
cltd
dec
xchg
lock
sbb
not
setp
lea
mov
lea
pusha
call
xor
call
lea
ja
push
jmp
cmp
out
dec
inc
aaa
push
in
decb
sub
jb
test
out
add
inc
xchg
cmp
dec
inc
sbb
nop
outsb
out
mov
enter
jae
or
dec
cwtl
xor
sti
xor
xchg
enter
outsb
js
mov
cld
sbb
popa
inc
jnp
pop
lea
movntq
mov
pushf
movb
lea
jmp
cmp
push
lea
je
bt
cmp
pusha
pusha
mov
lea
je
push
pushf
pushf
lea
jmp
xor
daa
aaa
add
add
xchg
frstor
xor
roll
jbe
push
jns
lcall
adc
pop
fdivrl
ljmp
clc
mov
jbe
cwtl
adc
ja
movsl
call
fs
je
pushf
movb
mov
push
mov
pushf
jmp
dec
call
bswap
sete
shr
jp
mov
pusha
cmc
and
test
clc
add
add
pusha
pusha
test
add
call
call
xor
test
cmp
pushw
popfw
mov
inc
call
rcl
clc
or
push
sar
push
seto
dec
clc
push
ror
push
bt
shrd
push
neg
mov
cmp
mov
jmp
push
lahf
outsb
dec
inc
aaa
mov
dec
xor
jg
xor
aaa
outsb
pop
xchg
shr
aaa
inc
sub
push
leave
test
cmpsl
mov
movsl
add
mov
int3
jne
std
movsl
insb
std
dec
and
lods
daa
xlat
outsl
cltd
lds
sub
insl
jne
dec
cmp
dec
out
add
mov
cmp
mov
or
pusha
jo
std
pop
outsb
cmpsb
add
add
add
popa
insb
inc
jb
gs
pop
push
add
lea
ja
pusha
movl
jmp
jnp
pop
pop
pop
push
push
pop
dec
push
pop
pop
inc
pop
push
push
inc
inc
inc
inc
push
pop
inc
sbb
or
mov
mov
cmp
mov
xor
mov
and
aam
lods
insl
outsb
sahf
inc
je
enter
cld
fs
lock
dec
pop
xorb
fucom
ret
cld
cmpsl
and
push
push
sahf
mov
ds
scas
xchg
xchg
mov
fs
lea
call
jmp
inc
bsf
bts
mov
bsf
ror
lea
bsr
mov
cmc
clc
pushf
sub
call
jmp
push
lock
std
std
xchg
imul
stc
ret
jp
ds
sub
pushf
mov
pop
sub
inc
jo
outsl
dec
mov
xchg
test
inc
sub
adc
pop
pop
movb
fsubs
adc
test
mov
adcl
shlb
xchg
push
cmpsb
mov
ljmp
leave
sbb
daa
nop
enter
fimull
es
inc
aaa
sbb
ret
xchg
and
scas
mov
les
mov
cmp
inc
std
cmp
ja
mov
sbb
mov
mov
scas
nop
sub
mov
fistpll
add
xchg
push
xchg
out
mov
sub
xchg
sahf
cmpsb
pop
push
fwait
bound
arpl
dec
mov
fadd
mov
add
loopne
push
add
jno
xor
mov
fdivrs
cmp
inc
scas
aad
notb
lods
adc
popa
dec
cmp
mov
sbb
ret
jnp
es
add
addr16
pop
mov
sbb
mov
cmp
add
cvtdq2ps
mov
or
divb
jmp
sub
inc
adc
xchg
adc
sbb
or
xorl
mull
or
clc
cwtl
fs
mov
mov
jno
jo
pop
cmc
and
mov
xorl
fs
aas
cmp
xlat
sub
pop
mulb
or
movb
mov
pop
mov
cmp
repz
mov
js
scas
cltd
sbb
xchg
cmp
sbb
push
pop
mov
mov
adc
rcll
lods
mov
mov
inc
xor
test
fnstcw
insb
movsb
or
xchg
test
int3
popf
pushf
jmp
call
out
jl
push
inc
aaa
mov
add
imul
jno
xor
scas
jae
mov
daa
mov
pop
ret
aaa
pop
cmp
pop
testl
outsb
push
daa
filds
xor
in
and
bt
stc
pusha
sub
lea
pusha
inc
lea
pushf
lea
call
pusha
call
xchg
loopne
push
inc
aaa
add
mov
ficoml
and
and
add
push
sarb
or
xorb
pop
call
je
lcall
push
lea
std
push
push
je
test
mov
adc
inc
call
sub
fistl
aaa
push
jmp
xchg
mov
jg
sahf
xchg
sub
push
mov
adc
pop
fwait
repz
xchg
pop
in
xchg
inc
jmp
and
cmp
push
outsl
cltd
pop
xor
or
nop
or
ljmp
push
or
fsubrs
inc
sub
xchg
push
adc
push
cmp
bound
xor
leave
clc
ret
add
loopne
xor
fbld
dec
xchg
sub
xchg
sarl
ret
test
mov
or
push
push
cmpsl
cmp
out
jo
mov
cs
ficoms
xchg
add
xor
xchg
movsl
xlat
stos
clc
push
push
stos
mov
mov
sti
cmp
cltd
sbb
xlat
imul
js
cli
mov
ja
aam
jbe
adc
and
jecxz
mov
aad
xor
xor
out
pop
loope
sbb
add
cmpsb
dec
fwait
jns
ret
cmp
test
popa
icebp
adc
xchg
and
movb
jne
ds
cmc
out
jle
jo
jo
dec
ret
inc
and
mov
aaa
jno
pop
jg
cli
popf
ljmp
fnsave
inc
lret
cmc
add
in
push
adc
jb
cmp
lret
mov
int
loop
aam
mov
int3
sbb
add
aam
popa
mov
test
add
and
xchg
mov
cmp
lods
adc
ret
mov
lcall
cmpsb
push
push
loope
roll
aad
sub
pushf
in
dec
hlt
lea
ss
xchg
les
sbb
popa
cwtl
push
scas
mov
and
out
das
mov
jbe
push
ds
mov
cmc
xor
imul
adcb
rclb
fisubl
xor
pop
pop
mov
mov
inc
lock
push
mov
int
mov
cmp
dec
pop
outsl
cmovle
cmpsl
and
xor
sbb
adc
test
push
fistl
lcall
scas
cmp
xchg
loope
sbb
pop
int
rcrl
ret
xor
xchg
cltd
dec
mov
adc
cmp
xorb
lcall
stc
dec
inc
nop
notb
adc
sub
mov
sub
or
inc
mov
jle
lret
inc
cmp
repz
dec
sub
adc
cld
and
adc
mov
pop
push
xchg
pop
jp
push
mov
dec
enter
icebp
fdivs
shlb
push
call
lcall
fwait
call
insl
adc
mov
adc
stos
ss
mov
push
popa
mov
and
push
aam
cmp
mov
cltd
std
mov
neg
cmp
out
fisttpl
lret
pop
jo
testb
into
dec
xor
and
dec
loopne
fcoms
lock
xor
mov
sbb
pop
inc
into
aad
in
xchg
and
push
insb
cli
add
adc
pop
sti
push
lds
adc
hlt
inc
movl
arpl
int3
dec
cmc
xchg
push
stc
cli
outsl
mov
add
xor
xor
lahf
out
jno
cmp
icebp
cmp
cmp
xchg
sbb
es
stos
and
fidivrs
inc
sub
mov
mov
in
push
push
rcrb
sbb
lret
fiaddl
pop
out
and
cmp
jle
fnstenv
cmovg
fdivs
mov
cmc
push
ret
hlt
movsb
std
sub
or
push
sub
xor
stos
cmp
mov
push
jae
mov
cwtl
leave
test
scas
daa
adc
decb
jmp
add
xlat
xchg
push
loope
add
movsb
lahf
add
lret
les
cld
dec
push
adc
adc
addr16
inc
push
jmp
sbb
aaa
pop
pushf
stos
mov
movsl
inc
xor
jmp
repnz
in
scas
jae
test
jnp
push
ja
ss
push
negl
cmpl
pop
xchg
sbb
jge
aad
jp
add
and
scas
push
mov
jg
sti
sub
push
mov
mov
jo
add
arpl
mov
jle
mov
pop
sarl
imul
outsl
inc
les
addr16
outsb
xchg
push
jp
cmpsb
ret
jns
enter
repnz
test
sbb
int
call
add
push
pushf
lea
jmp
pushf
pushl
push
pushl
popl
mov
pushf
pushl
ret
es
iret
push
inc
aaa
loope
push
loop
dec
sub
push
xchg
leave
sub
mov
mov
mov
lods
call
xor
stos
add
push
lds
scas
popa
int
cmp
pop
xchg
and
es
push
inc
aaa
jle
fstpt
daa
or
and
dec
xor
jge
out
pop
mov
sti
or
enter
ja
xchg
in
or
or
jmp
jmp
ja
cmpb
mov
push
cwtl
xchg
pop
setb
inc
lcall
rorb
aas
push
ror
or
mov
fisttpll
adc
mov
mov
cmp
xor
mov
fnstenv
mov
cmp
jno
jae
mov
subb
add
mov
cs
inc
aaa
add
inc
xchg
adc
ret
cmp
or
jge
sub
cmp
inc
negb
outsb
dec
sub
push
outsb
fwait
pop
pop
mov
sahf
push
mov
cmpsb
mov
jmp
or
dec
nop
add
sahf
sub
cmpsb
movsl
add
push
jno
pushf
push
into
iret
cmp
or
pop
inc
aaa
mov
lahf
push
loope
das
mov
pop
cmp
xor
fdivrl
sub
adc
movsl
fwait
adcb
mov
mov
les
mov
rorl
pop
sbbl
cltd
arpl
mov
sarb
push
xor
fwait
ret
jne
movsb
or
dec
or
lret
sub
bound
jo
out
inc
out
sbb
add
xor
mov
adc
mov
sbb
shrb
arpl
xor
mov
mov
jo
xchg
cmp
add
sbb
mov
adc
mov
fs
je
test
clc
add
push
test
cmp
pusha
lea
jb
cmp
stc
pusha
cmp
pushf
pusha
lea
jae
not
mov
jmp
movsbl
mov
call
pushf
movl
pusha
movl
mov
lea
jmp
arpl
fisubs
mov
xlat
cli
pusha
xlat
jle,pt
inc
in
aad
mov
addb
clc
stos
pop
xchg
bound
aaa
sbb
mov
mov
xchg
mov
int3
pop
mov
adc
outsl
push
fadd
sbb
push
test
adc
scas
jbe
or
xor
jbe
pop
jne
sub
dec
xlat
test
mov
shl
add
or
sbb
mov
cmp
jbe
out
fs
fnstsw
mov
stos
adc
mov
push
into
dec
or
dec
sub
fwait
ret
lods
das
repnz
xchg
aas
inc
das
out
nop
sbb
clc
pop
dec
adc
repz
xlat
or
and
das
xchg
adc
dec
gs
inc
mov
cmp
out
dec
xchg
sbb
aas
jnp
jl
or
pop
inc
mov
imul
outsl
sub
or
bound
mov
lahf
mov
sbb
mov
xchg
add
mov
sti
adc
push
pusha
movl
pushf
pushl
jmp
fs
sti
sbbl
lock
loop
mov
pop
xchg
push
pop
shlb
std
lods
and
sti
mov
sti
cmp
mov
sub
xchg
dec
gs
lock
movsb
mov
inc
sub
lret
pop
jne
enter
fiadds
pusha
call
push
mov
jmp
pusha
pushl
pushl
movl
pushl
call
movsb
cmp
pop
inc
aaa
jg
lds
and
xchg
repz
iret
orb
aaa
outsb
and
mov
repnz
shll
dec
xor
nop
cmp
ret
call
xor
xchg
cwtl
movsl
orl
popa
adc
les
lock
or
mov
call
movl
pushl
pushf
pushf
lea
jmp
adc
aaa
add
cmp
fs
std
mov
xchg
inc
insl
fwait
ds
frstor
dec
aas
ss
adc
negb
loop
pop
je
out
cmc
and
pop
aad
pop
out
aaa
xchg
xchg
inc
insl
sub
movsb
test
sub
adc
outsb
dec
insl
ret
xor
iret
cmp
daa
insb
mov
or
inc
aaa
addr16
out
call
jp
lret
fstps
xchg
inc
insl
je
dec
and
xchg
pusha
cmp
mov
pop
fstl
cs
mov
loopne
and
mov
mov
movsl
dec
fnstsw
push
mov
mov
mov
insb
and
cmp
test
sbb
dec
adc
push
out
xchg
push
shl
es
add
imul
push
out
xor
push
mov
fadd
js
inc
mov
aaa
scas
je
cmp
fwait
inc
repnz
jmp
dec
clc
bt
jmp
pushf
pushf
lods
clc
clc
xor
pushf
pushf
cmp
push
neg
test
stc
xor
pusha
mov
dec
clc
cmp
jmp
mov
pushf
pusha
pushf
movb
lea
jmp
jmp
movb
pushl
popl
pushf
pushl
ret
mov
aaa
insl
aad
loopne
cmp
pop
ficoml
jbe
filds
nopl
popf
repz
icebp
jno
lcall
addr16
ja
fiaddl
in
les
addl
mov
mov
sbb
in
push
mulb
sbb
and
icebp
insl
sub
sub
test
mov
xchg
jg
mov
mov
bound
lret
jae
cwtl
mov
xchg
orb
pop
inc
mov
fs
call
pusha
pushf
jmp
fs
pop
inc
aaa
push
mov
jmp
pop
xor
xchg
add
rorl
jno
outsb
gs
rorl
add
xor
fmull
dec
inc
test
ret
or
sarl
xchg
cwtl
addr16
mov
js
pop
enter
dec
cmc
mov
xchg
lea
xchg
mov
setl
pusha
mov
lea
push
not
dec
dec
mov
mov
mov
mov
pusha
pusha
inc
cmc
cmp
call
call
pushf
lea
je
pushf
jmp
or
pop
inc
aaa
mov
testl
fsts
popf
xchg
inc
insl
stos
stc
movsb
add
jns
sub
shll
mov
mov
ja
dec
lcall
lret
and
stos
xchg
fistpl
push
dec
and
push
ret
pop
inc
jp
pop
bswap
hlt
or
mov
daa
ja
loopne
push
enter
pop
fwait
cli
lock
cmp
enter
js
xor
nop
outsb
pop
inc
jmp
push
into
jp
fiaddl
xchg
pop
jae
fcmovnu
stos
push
das
adc
sub
pop
inc
aaa
xor
cmp
test
mov
imul
jae
inc
ficomps
insl
sub
mov
push
xchg
pop
outsb
aaa
mov
aas
sbb
loope
dec
xor
add
insl
adc
andb
loopne
sbb
mov
repnz
dec
fldcw
test
pop
sbb
mov
cmp
shlb
dec
mov
xor
pushf
dec
push
ljmp
pop
je
into
mov
and
adc
jb
xor
and
sbb
add
mov
cmp
add
mov
in
pop
mov
and
sbbb
push
jae
inc
scas
in
and
add
and
iret
cmp
pusha
xchg
inc
pusha
inc
aaa
das
push
add
lcall
mov
pop
pop
mov
sbbb
add
ja
stos
mov
ret
jmp
mov
add
lds
add
inc
subl
outsb
jne
subl
cltd
push
xchg
mov
out
movsb
imul
mov
clc
mov
fwait
or
and
test
mov
enter
test
xor
cmc
and
mov
adc
lock
inc
mov
popa
rcrl
push
adc
lret
insb
sub
and
or
add
sbb
pop
mov
call
dec
inc
inc
dec
ret
aaa
test
pushf
testl
lock
inc
push
add
ret
js
dec
push
sbb
mov
inc
jbe
inc
scas
and
aam
and
lcall
mov
es
adc
loope
rorl
xchg
loope
xchg
push
mov
mov
nop
repnz
insl
dec
mov
cmpsl
mov
into
jge
cmc
or
mov
nop
xchg
loopne
rorb
rcrl
xchg
jnp
jmp
mov
add
jae
aam
ss
cmp
jbe
mov
scas
rclb
sub
add
mov
xlat
iret
cmp
or
shl
popa
into
popa
inc
aaa
movsl
pop
shl
dec
mov
add
iret
adc
xchg
mov
dec
cli
les
and
cwtl
scas
enter
dec
stos
in
fbld
xor
pop
lds
aaa
sbb
movsl
inc
aaa
leave
push
ja
and
int3
imul
sbb
nop
imulb
in
lret
jle
lds
lret
adc
js
cli
mov
movsl
fcomps
jne
sbb
out
inc
out
xchg
gs
mov
push
inc
les
fldcw
xor
push
push
fcmovnu
inc
xchg
push
mov
shl
inc
test
xchg
mov
adc
int3
lahf
add
adc
lods
repz
popf
push
orb
add
notb
mov
jecxz
xchg
mov
pop
bound
clc
push
fs
and
fadds
fcoms
inc
dec
enter
bound
or
sub
pop
mov
mov
fs
testb
icebp
sbb
sbb
shlb
pop
jmp
inc
jno
inc
orl
xor
jno
mov
xlat
fwait
or
mov
jle
mov
jo
rorl
and
or
mov
inc
lahf
mov
in
sbb
xchg
addr16
jne
lret
jle
pusha
lea
call
pusha
call
cmp
pushf
mov
pushf
jmp
mov
aaa
aaa
int
or
lret
out
push
in
xlat
aaa
mov
nop
je
lock
lods
int3
shlb
or
test
push
ljmp
rorb
fs
mov
fs
xor
and
xor
and
and
mov
cmp
adc
out
es
push
dec
int3
into
sub
lret
sub
cs
popl
lret
adc
sahf
or
iret
arpl
loope
sub
adc
pop
mov
hlt
push
dec
test
mov
test
scas
add
incb
and
push
outsb
add
daa
pop
adc
out
mov
lcall
aad
dec
jno
testb
jb
push
push
adc
test
int
pop
xchg
lret
packsswb
or
cmp
aad
repnz
jp
cmp
add
xchg
or
add
movsl
inc
mov
nop
iret
ja
in
cmp
and
jae
pusha
lea
je
call
lea
jbe
bts
test
bsf
sub
shl
not
mov
lea
rcr
mov
xor
add
not
shrd
bts
shr
shl
or
xchg
pusha
mov
sbb
add
jmp
pushf
movl
movw
adc
mov
pushf
mov
lea
jmp
push
mov
lea
jb
call
xchg
loop
gs
aaa
jg
lret
ficompl
xchg
aad
jle,pn
jmp
cltd
push
fs
scas
jae
pop
inc
test
push
cmpl
cmp
aam
lds
jno
xchg
lcall
lock
sub
rclb
aad
lds
outsl
xchg
or
cmp
arpl
jl
push
mov
std
mull
mov
adc
les
movl
sbb
sti
adc
pop
in
mulb
roll
insb
sbb
enter
fs
gs
aaa
out
les
pop
lds
sbb
jecxz
movsl
cmp
jae
inc
jno
lret
jno
pop
xor
dec
out
addb
mov
or
dec
inc
add
mov
xchg
mov
push
ja
mov
insb
icebp
loopne
mov
ljmp
sub
jno
pop
xor
cltd
cmc
sahf
fldcw
push
inc
sbb
and
pop
aam
add
aaa
out
sahf
xchg
or
arpl
loopne
divb
cmc
inc
in
pop
xchg
nop
cmc
push
add
and
add
add
adc
mov
sub
jo
outsl
rep
not
mov
push
movb
lea
jmp
mov
lea
ja
cmc
push
jmp
pusha
pushf
mov
movl
push
lea
jmp
pusha
pusha
mov
movl
push
jmp
lea
jnp
push
pushf
dec
cmc
push
rol
pushf
push
pushf
dec
call
stos
call
mov
dec
das
cwtl
int
cmp
nop
add
in
push
fimuls
imul
rorb
or
lock
jns
push
pop
cmc
pop
and
jo
mov
add
push
adc
aad
outsl
mov
fadds
xchg
sbbl
adc
popf
sub
mov
cmp
jge
xchg
mov
inc
jne
pop
xorb
rcrb
lock
decl
sub
incl
sbb
addr16
aaa
pop
movsb
xchg
jo
fidivs
cmc
sbb
jg
cmp
mov
mov
iret
ret
sub
lods
outsb
hlt
gs
stos
sahf
lods
cmp
xchg
mov
das
pusha
push
jo
inc
js
filds
pop
cmp
mov
mov
inc
scas
insl
mov
inc
shrb
popf
adc
mov
cmp
mov
jmp
mov
loopne
cltd
mov
popa
ss
add
pop
pop
enter
aas
mov
jge
inc
aaa
divb
jne
pusha
push
mov
sbb
xor
cmp
jbe
mov
mov
mov
imul
add
jne
test
ds
decl
insl
add
stc
mov
imul
cld
sbb
cmp
aaa
loope
jno
rorl
ret
or
mov
insb
stc
and
in
push
arpl
inc
push
das
mov
inc
shll
repz
stc
push
push
lea
jmp
lods
lock
cmp
movsb
repz
add
ss
enter
gs
or
and
pop
and
mov
into
lods
sbb
jmp
leave
sbb
push
adcl
rclb
pop
aas
add
pop
in
es
in
dec
andl
aam
push
enter
cltd
fadds
out
mov
ret
mov
fistps
xchg
adc
cld
inc
stos
icebp
ds
or
push
int3
inc
inc
aad
jnp
insl
inc
push
adc
fimuls
stc
loope
test
jo
pop
mov
inc
aam
popa
xor
push
pop
sub
dec
outsl
xorb
lcall
xor
mov
cmp
inc
adc
cli
or
inc
fists
and
fnstsw
sahf
arpl
add
xchg
mov
sub
leave
sahf
adc
xchg
cmpsb
sub
and
xchg
dec
jnp
imul
es
ficoms
enter
in
inc
aaa
dec
aaa
fstpt
rcrb
call
mov
add
ret
jmp
mov
xchg
push
outsb
pop
imul
push
push
scas
ret
filds
aad
or
mov
dec
mov
emms
jae
cmc
das
mov
or
je
mov
jne,pt
jge
fcomi
and
imull
es
or
mov
fwait
lds
cmp
sbb
inc
aaa
stc
inc
mov
inc
and
push
push
cmc
and
push
mov
add
and
xchg
push
fs
xor
gs
std
loope
outsb
push
xor
or
cmp
ret
ret
dec
imul
sbb
xchg
imul
add
sbb
mov
push
jp
leave
inc
adc
ljmp
js
setae
lods
mov
adc
or
lcall
shrl
push
leave
sbb
mov
pop
jnp
sub
mov
aad
fstl
push
xchg
inc
jle
imul
xor
aad
pusha
lea
jmp
adc
aaa
dec
cwtl
inc
lahf
call
jmp
aam
add
xchg
movsb
scas
jo
cwtl
cwtl
std
push
jns
ror
push
das
mov
sahf
inc
hlt
xor
cltd
shrb
cmp
mov
sub
xchg
scas
dec
xor
call
test
push
and
sbb
push
and
xchg
cld
and
xchg
dec
call
push
jae
mov
xchg
mov
lret
xor
inc
pusha
pushf
movw
pushf
lea
jmp
not
not
pushf
jmp
divps
dec
jp
and
cmp
jmp
lcall
jno
sub
into
mov
xchg
push
push
loop
test
icebp
addr16
and
aad
push
scas
ss
lret
jmp
cmp
lahf
sbb
and
loope
adc
push
loope
scas
mov
adc
add
mov
out
int3
mov
inc
aaa
xchg
movsl
jae
cmp
and
add
push
xchg
aaa
inc
movb
push
push
dec
dec
setae
sbb
xor
call
sahf
xchg
pop
insb
inc
aaa
shrl
pcmpgtb
stc
lds
jl
inc
add
sbb
dec
xchg
ret
pushf
adc
add
hlt
xchg
push
sahf
push
cli
inc
out
sbb
out
sahf
sbb
push
pop
int3
pop
xlat
test
mov
addl
fsubrs
push
inc
dec
popa
mov
cmp
das
mov
loopne
cmp
sarb
leave
pop
adc
imul
call
rclb
aaa
filds
add
out
ljmp
mov
enter
daa
pop
push
fldl
insb
in
xchg
inc
inc
jae
cmp
ja
add
dec
add
test
mov
insl
jb
lcall
jbe
add
ret
push
fnstenv
mov
js
pop
scas
jmp
call
sbb
data16
push
fisubrl
pop
inc
int
pop
lea
shlb
bound
push
jmp
mov
pop
aas
inc
sarb
adc
call
jae
addl
mov
movsl
push
gs
mov
lock
enter
pop
inc
out
jmp
jmp
push
movb
lea
jne
not
push
call
shld
bswap
neg
push
cmp
mov
setne
jb
push
shrd
cmc
movsbl
ror
push
xor
push
stc
push
mov
inc
movzbw
rol
push
clc
mov
push
bswap
mov
shrd
pop
mov
test
or
call
dec
cmc
jmp
setp
movsbw
bswap
mov
movzbw
call
push
pusha
xchg
cwtl
pusha
movl
not
pushf
pop
lea
movl
movl
call
cs
outsb
inc
aaa
jmp
mov
sub
mov
mov
in
mov
fnstenv
pusha
js
mov
pop
mov
or
adc
inc
pop
or
adc
dec
push
lcall
std
inc
and
out
call
jp
inc
test
cmpsl
cmp
xchg
int3
sub
adc
push
xchg
push
repnz
icebp
insl
lahf
mov
sbb
mov
jnp
or
push
lcall
mov
dec
mov
lock
xor
xchg
add
nop
in
dec
rcll
enter
out
ljmp
insb
jo
xchg
mov
mov
dec
jmp
movsbw
movzbw
mov
mov
jmp
push
movl
push
movb
pusha
pushl
lea
jmp
dec
jmp
mov
mov
lea
lea
jno
pusha
push
lea
mov
mov
pushf
call
sub
sar
btr
dec
cmp
mov
aaa
aas
not
test
mov
dec
shr
add
adc
xor
bswap
mov
test
pushf
cmc
bt
or
mov
push
lea
je
shrd
add
shl
sub
adc
shr
setb
mov
stc
add
xor
bsr
shl
add
bt
pusha
sbb
shr
mov
stc
push
jmp
inc
test
int3
jae
inc
dec
or
add
rolb
dec
fmull
rcrb
out
int3
ds
aas
or
mov
mov
out
mov
dec
jnp
sub
ja
cmp
outsb
jb
cmp
rol
es
or
jne
clc
stos
add
inc
sbb
daa
incl
movsb
int3
aad
sbb
in
cmp
mov
jo
aaa
mov
jle
insb
cmc
adc
std
mov
rol
es
inc
mov
stos
push
fidivrs
dec
sahf
lcall
lret
pop
shll
xchg
sub
push
sub
loop
lret
aam
sarl
inc
add
out
cmpsl
or
stos
inc
or
adc
cmpsb
daa
mov
daa
cmp
inc
in
repnz
les
and
gs
cmp
js
jo
aaa
mov
hlt
dec
sub
add
repz
lds
lret
addr16
cmc
hlt
clc
stos
fistpll
mov
pop
xor
aas
fwait
in
lcall
loop
dec
call
icebp
nop
mov
ja
dec
mov
arpl
mov
stos
push
sarl
les
cmpsl
jge
ret
ss
daa
test
loop
je
adc
adc
xor
push
loop
lds
loop
adc
test
cli
inc
call
movb
lea
jne
shl
bswap
sbb
movsbw
mov
bt
pusha
test
cmp
pushf
lea
ja
lea
pop
pushf
mov
pushf
mov
bswap
pop
mov
pushl
mov
mov
call
adc
jno
aaa
cmpb
jno
mov
std
xor
ret
sub
mov
add
pop
xor
scas
push
jmp
lcall
stc
jge
mov
cmc
sbb
daa
jp
stos
shlb
pop
adc
imul
aad
mov
add
pop
call
clc
repz
and
xor
fists
xchg
jns
insb
les
test
ret
clc
lds
inc
jae
cmp
ss
out
dec
push
mov
xchg
add
scas
or
subl
ljmp
addr16
call
cmpsl
aas
popa
push
push
roll
cmp
ss
mov
xor
stc
pushf
mov
pop
scas
in
push
pop
hlt
daa
adc
push
adc
sub
mov
popf
xor
push
adc
data16
cmp
add
lods
xor
repnz
push
int
cmpsl
cmc
mov
xchg
push
hlt
sbb
shlb
mov
or
cmp
into
aaa
push
mov
xchg
sti
mov
hlt
mov
movsb
cmp
push
lcall
arpl
mov
cmp
mov
clc
mov
or
inc
pop
leave
add
cmc
add
pinsrw
fs
mov
test
scas
fistpl
fdivr
addl
ss
mov
lock
dec
popf
xchg
sub
movsb
mov
dec
aad
lods
mov
pushf
inc
or
movzbw
add
dec
btc
shr
mov
cmc
jmp
mov
mov
sub
repz
outsl
pop
xchg
stos
push
ljmp
inc
dec
add
fisttpl
es
mov
fldt
fidivrl
mov
xchg
repz
in
adc
mov
xchg
scas
test
pop
cltd
ljmp
inc
cmc
mov
fwait
jl
mov
sti
mov
insb
int3
fistps
cmp
mov
cmc
fldl
pop
outsb
and
mov
push
inc
repz
cmp
and
lahf
sub
mov
sbb
imul
aaa
popf
fs
push
add
daa
lcall
sub
lret
dec
shrb
scas
inc
push
or
leave
aas
sbb
jmp
lcall
daa
mov
dec
sbb
imul
add
mov
mov
sbb
fsts
xchg
lret
insb
cmp
pushf
movsl
fucomi
sbb
pop
jbe
int
enter
ds
jnp
pop
hlt
mov
and
push
mov
pop
cmp
xor
mov
lods
dec
sahf
dec
dec
jb
ds
pop
insb
jbe
push
jmp
lret
cli
xor
or
jae
out
and
loop
pop
scas
mov
stos
cmp
push
pop
mov
notl
jmp
and
dec
dec
popa
cmp
pop
xor
add
xor
scas
ficomps
out
cmpsl
shr
lret
push
loop
sbb
cmp
lret
imul
cltd
stos
mov
or
clc
outsb
out
push
mov
and
or
sbb
and
jo
je
andb
and
dec
jbe
inc
or
ljmp
cmp
and
dec
mov
cmp
sub
xchg
pushaw
add
cmp
insb
enter
cmp
fsts
stc
or
repnz
pop
rorl
pop
inc
bound
fnstenv
dec
xchg
push
lcall
jp
data16
jae
jle
jbe
jle
and
pushf
sahf
mov
fidivrl
and
notl
sbb
pop
add
push
js
mov
addr16
inc
aaa
fidivl
jnp
sbb
or
mov
adc
das
mov
outsb
sbb
stos
pop
inc
test
out
jecxz
sub
scas
fnstenv
pop
dec
imul
inc
dec
daa
aas
push
outsw
sub
push
addr16
jl
shr
stos
adc
jecxz
mov
push
ljmp
inc
pop
dec
dec
mov
mov
nop
in
and
mov
repnz
aas
sub
ljmp
sub
stos
sahf
inc
cmp
sarb
sti
push
rcrb
cmp
mov
jmp
repz
imul
stc
mov
leave
rolb
ds
imul
add
mov
ds
subb
imul
add
fimuls
push
cmp
stc
ds
jmp
imul
xor
cmp
cmpsl
sbb
push
fsubrp
mov
loop
stos
outsl
sbb
and
loop
imul
leave
and
loop
mov
push
loop
outsl
stos
sub
shrb
mov
mov
call
lcall
sbb
sbb
inc
adcb
shlb
pop
aas
imul
pop
sti
add
ja
pop
push
sbb
pop
js
test
xchg
xchg
fnstsw
aas
jl
imul
push
fwait
add
push
shl
sbb
sbb
jecxz
pop
negl
lcall
dec
repnz
cli
inc
push
or
jb
dec
mov
cmp
pop
dec
fwait
mov
jnp
in
cmovbe
jecxz
fldt
pop
aad
add
cli
inc
inc
jmp
dec
mov
flds
ljmp
inc
push
fcmovnu
dec
out
pop
lret
jns
dec
mov
jo
sbb
inc
imul
pop
mov
movlhps
sti
cmp
imul
lock
sbb
cmp
push
mov
cmp
jb
jmp
mov
push
push
leave
cmp
fldcw
repz
jg
mov
push
jnp
mov
repz
fstpt
imul
movb
sbb
or
mov
leave
cs
sbb
or
jae
ds
inc
sub
stos
jmp
stc
movsb
sti
or
or
fucomi
stos
cmp
mov
ds
push
cmpl
or
clc
push
pusha
push
jmp
and
add
jae
mov
dec
loop
dec
outsl
jmp
lods
sti
mov
ljmp
jmp
sub
or
add
stc
inc
push
push
subb
xchg
test
ds
jmp
mov
push
push
adc
push
sub
fptan
mov
mov
arpl
repz
sub
pop
and
jle
in
shrb
imul
push
cmp
and
cmp
sbb
dec
sbb
dec
sbb
out
jmp
sbb
sbb
mov
pop
xchg
pusha
push
push
test
sbb
mov
pop
cltd
mov
loop
lcall
cmpsb
add
out
fdivrs
pop
lret
xor
lretw
fisubl
filds
mov
mov
sahf
jp
incb
loop
imul
mov
and
cmp
inc
dec
cli
bound
push
lret
and
mov
add
add
or
sahf
loopne
daa
inc
addb
and
adc
loop
jns
sbb
mov
cli
bound
out
mov
cli
arpl
cmpsb
rcrb
jecxz
out
stc
inc
fsqrt
mov
pop
orl
leave
clc
cli
fs
inc
or
insl
jp
cli
cmp
or
push
ljmp
adc
or
sbb
push
or
push
nop
out
push
cli
pop
data16
sbb
ficoms
cmpsb
imul
sbb
ja
loop
daa
sbb
popf
fptan
cli
lcall
sub
mul
jnp
sub
mov
cs
ja
fimuls
push
sahf
cmp
dec
jg
or
and
cmp
and
cmp
jmp
imul
js
push
out
fstpt
ljmp
mov
in
pusha
mov
dec
push
ficompl
cltd
mov
jp
add
dec
repnz
leave
jg
cli
push
push
fwait
ret
scas
out
mov
adc
cmp
and
loop
imul
inc
xchg
and
cld
cmp
mov
pop
lret
cmpsb
and
pop
icebp
xor
imul
mov
xchg
cli
call
jmp
and
or
mov
or
in
mov
sbb
pusha
and
pop
lods
push
dec
push
mov
jmp
cmp
adc
mov
aad
pushf
insl
test
adc
or
pusha
xchg
inc
imul
lret
and
mov
arpl
cwtl
ljmp
jmp
mov
pop
inc
dec
adc
fisubrs
or
leave
jo
outsl
jo
sub
mov
push
aaa
loope
push
ss
leave
ret
imul
hlt
jns
arpl
stc
sbb
mov
sub
adc
push
or
or
mov
pop
push
mov
sub
xchg
dec
jmp
mov
jmp
mov
xchg
xor
cmp
outsl
jmp
mov
inc
pop
jnp
xor
jo
xchg
lret
sub
cld
cli
sbb
jo
imul
je
stos
jmp
inc
mov
mov
add
cltd
mov
call
loopne
lcall
mov
rorl
and
ljmp
cpuid
add
mov
xor
gs
inc
sub
nop
adc
popf
jo
jbe
ds
std
sub
ds
sub
pop
dec
cli
and
cmp
stos
pusha
pusha
ret
pop
pusha
in
aaa
dec
scas
cli
ficomps
loop
sbb
mov
insb
push
push
pop
jp
data16
jmp
lret
out
sahf
insb
jae
mov
mov
inc
popa
arpl
mov
imul
or
ss
jmp
flds
jbe
dec
jbe
outsb
push
jp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
into
fistps
out
jmp
out
xchg
cmp
push
fwait
push
mov
jp
fwait
iret
fwait
roll
xlat
insb
inc
lahf
insb
mov
push
mov
jecxz
flds
fldenv
stos
test
cmpsl
sbb
push
dec
cmp
lret
dec
push
ret
pop
lock
out
mov
scas
mov
mov
aas
loopne
jp
ret
stos
ds
dec
inc
sub
fsincos
in
pop
push
inc
pop
stos
bound
mov
sbb
lcall
jecxz
pop
and
scas
cmpsl
mov
adc
mov
shr
aaa
xlat
mov
rep
jmp
sbb
inc
pop
lahf
push
push
loop
or
mov
lcall
out
mov
push
push
inc
outsl
orb
subl
fldt
sbb
leave
xchg
and
sbb
push
sub
sbb
adc
sbbb
push
jae
inc
sti
fwait
pop
pop
and
mov
lcall
inc
sar
ret
call
sub
add
jmp
xor
xlat
and
mov
mov
imul
stos
addr16
inc
stc
addl
aas
pop
repz
rclb
shrl
negl
sub
lcall
lret
loop
iret
aaa
jo
push
xor
sub
jmp
pusha
call
cmp
out
iret
stos
stos
xor
scas
mov
jp
rorl
addr16
test
fwait
inc
jns
fs
jmp
push
sbb
mov
mov
ljmp
push
or
dec
iret
shrl
mov
aaa
lret
test
sub
out
lcall
outsl
or
outsb
or
loop
fidivl
mov
mov
pop
dec
add
scas
enter
lret
fisttps
clc
jg
and
dec
stos
les
or
out
mov
sbb
iret
pop
outsl
or
int3
mov
inc
lcall
sarb
dec
dec
adc
mov
mov
mov
ljmp
sbb
outsb
cmp
pop
adcl
add
push
cmpsb
push
mov
and
or
test
push
and
or
loope
ror
iret
xor
adc
xor
mov
inc
xor
add
xor
sub
repz
mov
cmpb
mov
mov
lcall
jb
pop
imul
mov
jbe
cld
test
sub
movl
pop
dec
sbb
stc
jecxz
cmp
and
popa
orb
div
push
fisttpll
movsl
dec
lods
out
fisubl
xor
push
xchg
sbb
inc
xlat
or
jg
sbb
push
test
xchg
inc
pop
jo
sub
mov
sub
adc
or
mov
add
cs
movsl
jns
cld
lahf
bound
in
aaa
aas
push
or
cmpsl
sub
pop
iret
mov
cmp
aam
ffree
adc
jne
inc
adc
loopne,pt
pusha
and
push
orb
out
lret
sahf
push
push
mov
stos
mov
in
cmp
mov
cs
test
arpl
mull
dec
mov
scas
ljmp
scas
sbb
clc
and
fbld
cmp
jg
mov
mov
mov
lahf
call
dec
and
or
loop,pn
cmpsb
push
sbb
scas
push
repnz
cltd
jmp
jp
rol
sub
mov
pop
inc
cmp
dec
ljmp
or
jmp
mov
cmp
inc
xchg
mov
mov
nop
ljmp
mov
mov
call
dec
xchg
mov
arpl
xor
fwait
fwait
sbb
mov
imul
and
jecxz
iret
hlt
imul
sub
out
lret
inc
cld
xor
dec
xor
dec
cmp
and
inc
insl
mov
dec
adc
dec
jo
jnp
fdivrs
inc
pop
aaa
and
cwtl
jno
cmp
fistpl
jecxz
aaa
jo
andb
leave
sahf
lret
jecxz
dec
xchg
cltd
or
xor
pop
sub
sub
in
mov
push
sub
mov
adcl
and
sub
adcb
sub
inc
inc
sub
adc
shlb
inc
cmpb
sub
pusha
daa
pop
dec
and
jnp
out
cmp
pop
dec
inc
js
push
pop
sbb
adc
sahf
or
pop
fstpt
test
ret
lahf
mov
andb
fistpll
popf
addr16
call
push
out
mov
fwait
or
jg
ret
mov
and
lods
idiv
jae
jae
add
jecxz
and
jnp
sub
mov
int
and
push
add
sar
push
lahf
test
iret
dec
inc
fcoms
xor
jmp
loope
cmp
lock
lret
push
sub
inc
cmpl
jnp
inc
mov
ja
mov
fcomps
fnsetpm(287
mov
lahf
jecxz
sub
dec
dec
xor
and
scas
pop
pop
mov
rcr
repnz
lcall
push
dec
scas
inc
loopne
xor
cmp
mov
and
cmp
cmp
xchg
loopne
stos
sti
dec
sub
and
mov
inc
mov
jmp
pop
push
jge
idiv
pop
or
or
fcmovnb
xor
bnd
adc
or
cmp
inc
fs
mov
lcall
repnz
adc
testl
aas
dec
movl
dec
pop
and
sub
xchg
push
mov
loop
fs
push
aad
in
sbb
xchg
lock
add
add
incl
dec
sub
insl
fistpl
out
inc
test
fdivs
pusha
icebp
push
xchg
mov
shl
arpl
or
loopne
daa
push
jp
jo
inc
push
imul
jmp
pop
mov
jo
bound
cmp
or
mov
pop
cli
inc
dec
push
mov
sub
shlb
data16
test
jg
or
mov
aad
lret
fildl
rcll
repnz
sub
dec
mov
out
lret
daa
inc
iret
or
mov
and
xchg
loop
or
imul
loop
fwait
jno
sti
mov
ficompl
cmpl
shll
inc
iret
subb
mov
push
sub
loopne
jno
and
imul
jae
nop
jnp
inc
stc
outsb
cwtl
ljmp
add
dec
push
and
jp
mov
arpl
cmpsl
mov
jge
test
adc
xor
sbbb
leave
test
adc
rcl
xor
jmp
fsubp
dec
and
mov
daa
push
sub
dec
imul
inc
fistl
ret
jo
sub
mov
enter
rcl
stos
cmp
pop
dec
dec
test
add
test
cmp
insb
pop
lcall
cmp
rorb
adc
mov
popa
mov
push
insb
arpl
sti
push
or
or
insb
push
adc
sbb
mov
inc
cmpsl
out
out
shrl
out
mov
nop
push
or
scas
andl
mull
jp
repnz
cmp
iret
push
lret
jecxz
sbbb
mov
inc
mov
and
mov
stos
lcall
or
sbb
xchg
std
fidivrl
jecxz
mov
jbe
lea
ficoms
cwtl
and
cld
ret
test
bound
fwait
call
inc
cmp
cmp
mull
pop
adc
std
arpl
addr16
inc
imul
jmp
mov
rorb
inc
dec
in
cmp
dec
clc
xchg
shll
shr
xor
push
mov
ret
pop
xchg
imul
pusha
test
imul
push
nop
adc
mov
daa
iret
pop
cmp
stos
cltd
popf
lcall
pusha
gs
pop
add
jne
push
into
sub
jno
sub
or
jmp
pop
mov
mov
cmp
out
xlat
dec
push
fs
pop
dec
cli
mov
sub
stos
test
mov
push
jg
sub
mov
mov
xor
rcrb
mov
dec
sbb
ret
outsl
cli
push
add
adc
cmp
incl
jecxz
loop
imul
pop
les
ret
mov
xchg
mov
shl
adc
icebp
sbb
roll
ret
push
cmpsb
fwait
push
sub
and
ljmp
jecxz
sbb
mov
daa
jb
cmp
xchg
out
cmp
in
xacquire
fcmovb
lret
adc
cmp
test
fiaddl
ja
mov
neg
stos
decb
mov
in
xchg
rorb
add
cmp
push
aam
outsl
lods
addb
add
jp
sar
pop
mov
adc
lret
test
xorb
or
push
pusha
jno
cmp
mov
jnp
and
jg
pop
pop
push
mov
mov
push
lcall
sbb
add
xor
fcmovu
pop
push
xchg
outsb
cs
and
negb
cmp
rclb
dec
or
or
test
and
jne
or
or
jb
rcrl
and
push
jbe
push
or
icebp
movd
push
stc
gs
lahf
lret
sbb
mov
jg
sub
ficompl
cmp
sub
jnp
sub
jns
or
push
std
adc
mov
lret
or
sbb
test
cmp
mov
sbb
push
jmp
cmc
lcall
std
dec
stc
lods
pop
cli
stos
push
cmp
shrb
mov
sbb
insb
and
lahf
inc
push
cmp
repz
add
inc
and
dec
mov
mov
or
xor
mov
jo
dec
fstpt
xor
adc
sub
push
push
enter
and
in
ret
imul
aad
mov
imul
lahf
loopne
leave
cmp
fcoml
or
jnp
mov
rcrb
loope
int3
sbb
mov
sti
adc
or
icebp
ljmp
jmp
dec
add
lcall
sub
dec
scas
mov
fstps
dec
dec
cltd
mov
fiaddl
mov
adc
pop
mov
std
hlt
dec
push
fstps
dec
mov
cmp
sti
adc
lahf
in
and
sub
xor
clc
scas
sbb
nop
cmp
cmp
in
lcall
push
xor
cmp
lret
push
pop
inc
lcall
xor
dec
jnp
xor
or
movsb
loop
and
jp
push
in
fidivl
and
jl
ret
adc
adc
mov
inc
sti
adc
das
xor
andb
repnz
lahf
shl
add
and
adc
jns
jne
sti
jae
imul
jnp
add
mov
fistpll
pop
adc
fsubs
leave
cmp
cmpsb
scas
fiaddl
adc
mov
insb
pusha
loope
jle
lock
sbb
jae
jnp
repnz
stos
mov
popf
inc
or
adc
ret
jnp
push
test
dec
add
lahf
cmp
jae
fucomi
cmp
push
mov
sub
pop
das
stc
fsts
mov
insl
jmp
stc
sub
fsts
aam
fidivl
inc
shlb
int3
jp
sbb
sbb
inc
in
sbb
sub
mov
lock
dec
xor
test
int3
add
lcall
and
lahf
push
cmp
or
xor
inc
stos
jnp
jecxz
test
icebp
inc
push
loope
popf
scas
or
pop
lea
outsb
xorb
cmp
xchg
push
or
push
xchg
jne
and
xchg
out
jl
cmp
dec
fstl
nop
es
pop
pop
out
push
push
push
pop
add
xchg
cmpb
fdivl
inc
pop
adc
inc
cli
jmp
dec
mov
jne
pusha
xor
pop
push
test
push
add
ds
xchg
push
cmp
les
scas
sub
or
add
dec
repnz
sub
push
cmp
repnz
inc
push
and
inc
jo
movsl
in
cli
cltd
cmp
push
outsb
dec
pop
and
push
pusha
shrl
dec
jbe
test
push
addb
imul
xchg
shll
fs
inc
push
outsb
xor
xchg
xor
shlb
jl
sub
cwtl
jo
es
or
push
inc
fcomps
xchg
jmp
es
gs
mov
pop
insb
sub
ret
outsb
xchg
jl
push
inc
shlb
int3
incl
leave
jo
dec
push
je
js
cli
push
sub
dec
cli
int3
movb
out
inc
lcall
jbe
jmp
and
pop
sub
outsl
es
pushf
mov
imul
addb
push
adc
push
je
push
inc
je
out
or
jl
divb
inc
cs
sbbb
or
push
mov
ds
inc
js
adc
dec
dec
stc
inc
xor
outsl
pop
mov
add
sbb
push
insb
push
mov
push
inc
push
pop
xchg
mov
cs
jo
icebp
pusha
dec
xchg
rolb
xchg
sub
push
out
jl
xor
enter
dec
stc
push
pusha
leave
push
mov
and
lahf
repnz
stos
dec
bound
jl
jb
xor
sub
ljmp
insb
dec
in
mov
or
inc
mov
cli
push
es
cmp
mov
sbb
cmp
or
es
loopne
lds
push
sbb
repnz
pop
pop
jbe
test
mov
imul
decb
mov
dec
cmpb
or
lcall
add
cmp
test
pop
mov
lock
mov
sub
push
fsubp
mov
ljmp
pop
dec
add
and
fsubrs
pushw
push
sbb
push
push
testb
mov
ds
add
ds
scas
scas
xchg
faddl
rcll
lahf
adc
and
push
add
mov
sub
jg
stos
sub
iret
ror
cli
pushf
inc
cs
lods
sbb
insb
cmp
out
fwait
stos
xor
int
cmp
jne
lods
ljmp
push
or
dec
cld
stc
push
dec
and
cmp
daa
pop
jnp
outsb
cmp
xchg
fs
cmp
push
ja
js
dec
xor
push
push
or
pop
lods
push
mov
jo
fidivs
xchg
ss
and
push
pop
xchg
dec
push
sub
inc
dec
lahf
fdivrl
jb
mov
push
fld
imul
test
mov
xor
test
jl
sbbb
dec
xor
pushf
addr16
push
dec
lea
in
aaa
es
and
sbb
add
pop
loope
jg
pop
or
adc
lock
stos
inc
and
movsl
fwait
jb
in
aam
test
push
mov
xchg
add
mov
pop
jl
aam
fadds
scas
adc
outsl
leave
push
lods
sti
adc
xlat
add
mov
clc
sbb
push
dec
push
add
and
mov
dec
push
fisubl
loop
mov
loopne
icebp
cli
aas
dec
ds
sub
mov
push
loope
xorl
or
pop
hlt
bound
push
stos
push
pop
cwtl
inc
mov
in
dec
or
inc
xor
pop
imul
addr16
jo
scas
push
push
dec
insl
pop
roll
enter
push
inc
ret
cmp
push
push
pop
lcall
xor
out
cmp
jne
push
jns
or
mov
pushf
adc
loope
inc
pop
mov
mov
pop
push
push
sbb
pop
mov
push
mov
sub
cmp
sbb
xor
xchg
jle
incb
mov
daa
mov
arpl
mov
ficoml
xor
push
push
ljmp
stc
into
push
and
je
push
pop
into
icebp
scas
pop
icebp
ds
jnp
mov
pusha
inc
popaw
push
enter
push
mov
inc
dec
cmp
insl
or
mov
xchg
loopne
push
es
in
sbb
scas
nop
or
incb
popf
in
cmp
or
cmp
bound
mov
inc
fildll
insl
push
dec
data16
mov
lea
add
repnz
add
fstpt
cmp
pop
dec
in
inc
ret
out
outsl
sbb
push
xor
mov
xchg
in
adc
mov
pop
jp
ret
xor
jo
dec
mov
jns
daa
popa
xchg
rolb
outsb
cmpsl
stos
or
dec
subl
mov
jl
cmp
inc
cli
dec
pop
cmpl
enter
and
and
ret
mov
mov
sub
xchg
xchg
or
push
dec
ljmp
xchg
pop
bound
dec
pop
sbb
pop
cmc
fcmovbe
jae
sbb
jle
inc
pop
dec
push
or
pop
jns
dec
inc
xchg
stos
fcoms
bound
push
and
jae
pusha
push
inc
lahf
dec
sbb
cltd
dec
pop
pop
dec
stc
in
push
jo
push
inc
outsb
inc
push
pop
pop
rorb
jb
lock
fcmovu
pop
jl
enter
add
cld
jecxz
cmc
jnp
lret
push
inc
sbb
xor
int3
bound
dec
push
adc
imul
sti
stos
inc
jne
rcrb
aam
dec
outsb
mov
fisttps
je
hlt
insb
push
xchg
add
and
xchg
call
push
jle
in
dec
pop
cmp
in
fisttpll
jl
sti
scas
outsb
js
hlt
pusha
fwait
les
ret
pusha
fisubrs
jl
jae
jb
push
pop
aam
lahf
dec
aam
fldenv
dec
mov
push
inc
push
dec
cltd
loope
jmp
push
js
dec
xchg
xor
dec
stc
mov
pop
add
xor
sti
inc
jae
int
dec
jae
xor
inc
ljmp
sub
dec
dec
fsubrs
dec
cmp
sbb
add
add
sbb
int
mov
fs
xor
push
pop
lret
sbb
aaa
clc
int3
notl
dec
mov
bound
outsl
jmp
xorb
popf
ljmp
popa
lret
or
push
dec
xor
gs
lret
and
clc
and
sbb
js
dec
es
adc
sub
int
popa
push
push
mov
mov
insl
push
stos
dec
inc
fs
cmp
adc
or
cmpl
dec
fs
lock
mov
sbb
or
dec
push
les
jo
or
cmp
sub
push
jg
inc
test
outsb
sbb
sbb
mov
inc
push
sbb
and
enter
xchg
cs
push
inc
std
ret
test
in
dec
rorl
jmp
xor
cltd
ss
subb
fucom
mov
cmp
clc
jns
fwait
push
add
mov
ss
adc
rcrb
pop
fcoms
sub
js
dec
hlt
outsl
out
sbb
out
jae
sahf
xor
hlt
ljmp
in
adc
sahf
dec
fcoms
fildl
jmp
sbb
or
outsb
pop
aam
pop
arpl
sahf
mov
adc
shlb
mov
fwait
xor
lock
je
dec
mov
lods
mov
imul
ss
mov
push
jo
lret
fidivrl
dec
cs
mov
xor
clc
negl
iret
andl
jb
cwtl
mov
adc
mov
je
adc
dec
inc
inc
push
lret
test
pop
or
arpl
cli
push
cmp
xchg
aam
cmpb
test
sub
fwait
push
fsubl
jo
aam
loope
outsl
inc
imul
jle
cli
cs
or
cmp
push
push
mov
clc
xor
push
pop
cli
test
dec
cs
sub
stos
bound
xor
dec
loopne
test
adc
or
push
dec
lods
xchg
pop
outsb
push
mov
and
sub
mov
dec
jnp
push
mulb
and
out
inc
es
clc
pop
cmp
cli
jl
push
ret
cmp
out
push
and
xor
test
inc
outsb
inc
dec
int
push
and
push
cmp
and
mov
fimuls
cli
xor
xchg
test
incb
pop
jb
and
xchg
in
adc
sub
out
inc
lea
pushf
inc
jb
cmp
insl
jecxz
in
adc
js
sub
pop
clc
xchg
lods
pusha
push
dec
inc
outsb
push
fmuls
mov
in
pop
jnp
mov
ret
xchg
cmc
sub
fisttpll
jnp
shl
pusha
sti
jo
addr16
outsb
push
movsl
push
sbb
aam
jp
pop
adc
sahf
js
pop
and
adc
popa
sub
pop
or
pop
ja
sub
pop
inc
mov
imul
push
dec
lea
push
cmp
daa
inc
pop
adc
stos
sbb
add
pop
popa
mov
jmp
pop
repnz
lods
pusha
jge
dec
dec
outsb
dec
divb
lcall
push
cmp
xor
pop
push
or
and
pusha
cwtl
outsb
or
movsb
outsb
cmp
imul
repnz
mov
or
mov
dec
movsb
loope
dec
pop
adc
xchg
in
jb
mov
fs
mov
dec
mov
shrb
lock
es
fcom
addl
cmp
cmp
sarb
push
jl
cli
enter
shll
xchg
inc
sub
hlt
fadd
aas
sub
adc
push
jge
mov
push
add
in
lret
test
sbbl
add
xor
in
mov
aam
or
in
jb
mov
dec
or
data16
pusha
xor
ds
mov
sub
icebp
xor
mov
test
jno
jne
pop
lcall
jnp
cmc
out
jb
xchg
mov
scas
xchg
push
iret
xor
sub
mov
jle
jbe
push
sub
pusha
jecxz
jl
mov
sub
inc
inc
inc
push
pusha
lds
dec
inc
pushf
xchg
pop
fs
push
insl
push
push
xchg
pop
lcall
push
inc
xchg
cmp
popf
push
pusha
leave
xchg
jb
xchg
cmp
xchg
popa
insb
xchg
mov
inc
mov
mov
sbb
pop
xchg
ja
mov
cmp
popa
pop
movsb
out
in
mov
cmc
jo
fldl
insb
pusha
movsl
out
xchg
push
cmp
std
jl
pop
pop
popf
loope
xor
fisubrs
push
cmp
arpl
sub
sbb
xchg
mov
or
sbb
insb
xchg
call
sbb
cmp
pop
lahf
jo
mov
pop
sbb
jne
jo
ljmp
jg
cld
pusha
movsb
jne
jp
pop
fistpll
pusha
cmpsl
mov
pop
pop
jp
pop
push
fldenv
jbe
cltd
fisubl
dec
jg
insl
cwtl
cltd
xchg
out
push
jecxz
xchg
and
imul
push
clc
sbb
ljmp
xchg
mov
aas
jp
inc
push
inc
xor
clc
fisubs
es
jbe
mov
pusha
les
pop
fisubs
stos
lret
cmpsl
mov
std
push
sub
out
lock
sbb
cmp
fdivrp
mov
adc
and
sbb
mov
mov
or
and
dec
pusha
xor
xchg
test
xchg
dec
push
fistps
pop
xchg
mov
cs
pop
sbb
sub
mov
pop
push
sbb
loop
jecxz
inc
jp
sbb
push
dec
loop
mov
sbb
dec
jle
dec
jl
inc
mov
cmpsb
gs
out
push
cmc
imul
jl
dec
mov
into
push
adc
push
jl
aas
sbb
mov
xchg
xchg
xchg
push
dec
cli
jne
fimuls
fcmovu
jp
sbb
fstps
fisubs
pusha
pusha
xchg
push
xchg
mov
pop
jbe
popa
xchg
push
inc
rcll
or
pusha
adc
sbb
jp
mov
and
cmp
scas
inc
cmp
cmpsb
outsw
sbb
lret
and
negb
pop
test
push
jp
xchg
dec
push
js
push
pop
mov
sbb
inc
fcoms
cwtl
arpl
jbe
pop
push
int
lret
push
sbb
add
mov
sbb
xchg
push
xchg
das
movsl
mov
iret
or
lock
out
test
mov
dec
dec
push
and
adc
sbb
shlb
daa
fcmovu
push
out
jbe
imul
cmp
fnstcw
push
bound
rol
lahf
mov
xchg
mov
push
in
sbb
jl
push
pop
js
cli
push
sbb
push
pusha
cmp
int3
sub
push
inc
and
cmpsl
mov
outsl
push
data16
and
nop
shlb
adc
jo
xchg
xchg
xchg
pop
push
fldenv
test
dec
mull
cmp
mov
test
es
jnp
mov
outsb
or
jb
adc
push
lahf
and
push
push
or
or
sbb
jmp
fldcw
in
pop
cmpsb
and
pop
cli
lahf
push
and
jg
push
jne
sbb
mov
or
aas
pop
inc
jne
mov
adc
jnp
stos
cmc
sbb
std
jbe
or
in
adcb
cmpb
icebp
les
push
fwait
push
cmp
in
mull
xor
in
sub
pop
sub
xor
jb
jmp
fisttpll
cmp
mov
sbb
sbb
mov
sti
sahf
pop
cltd
lahf
loop
add
stc
fs
pop
pop
cmp
or
inc
sbb
stc
xor
sbb
adc
cmpsl
ficoml
push
sbb
xchg
mov
push
jnp
inc
add
jnp
cmp
out
lods
sub
jmp
sub
add
ja
data16
push
dec
std
sub
jmp
sub
cmp
dec
in
ret
in
jmp
jnp
pop
inc
cmp
jns
fidivrs
and
lock
into
mov
cmpl
lcall
outsl
mov
movsl
ds
dec
stos
or
loopne
ja
out
add
ds
dec
fisubrl
dec
xor
ljmp
cmpsb
xor
lret
ds
inc
test
pop
dec
daa
pop
stos
mov
ja
out
add
ds
adc
out
cmpsb
stos
mov
lret
jo
mov
cmp
int3
ljmp
pop
push
mov
or
enter
or
pop
repnz
cmp
enter
lock
data16
test
and
jl
jmp
inc
outsb
add
mov
dec
pop
mov
xlat
shlb
dec
xor
push
stc
movsb
sub
sbb
test
dec
ror
cmp
sbb
dec
imul
sub
lcall
jmp
pop
push
dec
or
mov
and
jnp
cld
in
pop
ja
adc
sbb
sub
ja
or
sub
push
dec
icebp
lret
jo
sar
jmp
xchg
inc
fldcw
lcall
sub
loopne
xor
rclb
and
add
lret
xchg
fiaddl
cmp
xor
out
fwait
sbb
ds
cmp
inc
mov
scas
cld
pop
mov
cltd
lods
push
adc
jmp
repz
mov
adc
pop
cmp
pop
adc
mov
incl
and
add
and
das
mov
sbb
in
pop
frstor
fidivl
xchg
shlb
sub
in
push
inc
dec
mov
ds
xor
push
cmc
lock
aas
xor
inc
pop
and
ja
fidivrs
push
jmp
lahf
mulb
cmp
pop
imul
mov
lret
cmc
hlt
sbb
and
mov
mov
es
ret
push
nop
psubusw
inc
sbb
sahf
sub
or
into
cmc
add
mov
mov
rclb
lret
jmp
mov
push
inc
data16
out
out
repnz
pop
adc
push
aas
fisubs
cwtl
add
cli
popa
roll
pusha
inc
push
jb
sbb
lcall
aas
cs
fidivl
inc
dec
mov
jb
jbe
pop
cmp
ja
mov
sub
gs
mov
jne
ficompl
into
push
jl
xchg
mulb
push
sti
push
mov
jp
sbb
orb
push
mov
xchg
push
jne
xchg
jns
adc
fnsave
or
push
and
push
jb
sbb
jmp
lods
dec
test
dec
rolb
shl
rorb
cmp
sub
push
push
lock
lahf
imul
fs
mov
mov
imul
test
pusha
cli
push
cmpsb
jmp
jnp
push
aaa
or
stos
cmpsb
lret
test
mov
repz
cmp
cmpsb
jge
mov
inc
mov
lods
add
jo
gs
rclb
sbb
inc
push
in
pop
sahf
cmp
bound
ljmp
and
stos
test
imul
pop
ja
jnp
fwait
js
push
dec
or
or
jmp
stos
inc
cmp
jmp
mov
lods
xchg
push
cmpsb
mov
mov
mov
cltd
add
mov
push
es
sub
lret
mov
sti
pop
mov
dec
test
cmpsb
dec
add
push
dec
imul
daa
sbb
mov
jo
es
sub
xor
imul
sub
pop
mov
aad
ja
mov
mov
cs
jmp
clc
lret
ja
pop
cmp
lret
cmp
mov
mov
aad
sub
jg
dec
or
jmp
loop
cli
add
decb
add
cmp
lods
xlat
dec
or
push
sub
jmp
orb
mov
sub
xchg
lock
lret
cmp
imul
and
inc
ud2
out
test
push
adc
or
clc
sbb
adc
loop
out
outsb
sub
jmp
sub
mov
shll
sub
mov
mov
sub
push
dec
push
fidivrs
loop
push
jnp
adc
push
fidivrl
dec
je
push
cmpsb
or
int3
into
lds
or
sub
pop
sbb
jbe
dec
es
push
inc
and
inc
aas
repnz
imull
mov
dec
dec
sbb
xor
pop
cmp
ds
test
jp
bound
ljmp
dec
gs
or
ds
cmp
lea
jecxz
fucomi
pop
fadds
aad
add
adc
sarb
loope
jnp
daa
jns
out
push
pop
insb
mov
push
ja
bound
sub
ss
sbb
dec
lret
push
cli
and
mulb
cmp
imul
pop
int
and
mov
mov
jp
mov
xchg
jmp
hlt
pop
cld
mov
sahf
or
clc
jnp
notb
xor
xchg
fs
data16
insl
adc
ds
idivb
add
mov
and
inc
xchg
jnp
xor
jnp
push
inc
dec
loopne
bound
pop
mov
arpl
xor
pop
ret
sbb
fbstp
ljmp
add
mov
leave
mov
adc
cmp
inc
lods
adc
ficompl
in
sbb
inc
mov
hlt
fistps
ret
mov
mov
pushf
cmp
jmp
push
mov
out
jno
mov
inc
pop
pop
mov
das
xor
es
pop
fisubrl
mov
adc
push
pop
pop
insl
and
aas
sbb
iret
cmp
cmc
inc
sub
and
ds
jne
pop
frstor
add
hlt
dec
cmp
jnp
addr16
mov
outsb
push
xor
pop
ljmp
cmp
jnp
pop
inc
es
dec
or
cmp
daa
inc
fldcw
mov
scas
pop
js
mov
jmp
adc
dec
nop
loop
loope
sub
pop
cmp
push
pop
aam
dec
jo
ds
cmp
push
xor
stos
push
sbb
add
stos
sbb
nop
enter
sub
in
lods
or
dec
mov
sbb
mov
rorb
lea
scas
xchg
and
sti
jnp
stos
loope
jl
and
dec
pop
pop
jo
inc
jp
loope
dec
push
fidivrl
cld
lahf
inc
shlb
xor
add
pop
cmpb
shll
jnp
xchg
shlb
shl
imul
pop
popf
xor
mov
sbb
mov
mov
jmp
inc
and
mov
neg
jnp
lcall
scas
sbb
dec
xchg
or
push
jmp
or
lods
add
and
je
les
add
cli
mov
jbe
adc
push
dec
add
dec
mov
add
push
aas
mov
or
xorb
inc
movsb
bound
mov
ljmp
bound
xor
insb
and
popf
push
sbb
or
mov
cltd
mov
sbb
sub
leave
cwtl
lock
pusha
xor
mov
mov
mov
insl
retw
ljmp
int
test
jb
sbb
add
dec
int3
fsincos
loope
f2xm1
loope
dec
outsb
dec
push
add
dec
popf
jmp
mov
and
push
pop
mov
lcall
inc
stc
xlat
sti
jo
push
rclb
and
sub
loopne
push
push
fs
sub
sub
push
sbb
nop
hlt
fiadds
adc
mov
dec
inc
or
out
pusha
xor
cli
dec
sti
ret
movsl
and
ss
into
fisttpl
or
or
sbb
sub
lcallw
add
jb
stc
xchg
sti
mov
push
mov
cmp
jl
icebp
mov
mov
xorl
loopne
jge
ja
out
in
jnp
nop
cmp
popa
sub
int3
mov
xor
fistpl
and
fwait
sub
lahf
pusha
xor
cli
dec
mov
dec
jp
sub
fwait
dec
lahf
mov
xlat
mov
sub
jnp
bound
fwait
or
jo
fucomi
ljmp
xor
mov
and
lret
jp
lahf
pop
fs
jl
fsubrl
fucomp
jmp
rcrb
or
mov
push
inc
adc
mov
ds
adc
stos
ret
dec
mov
int3
jp
imul
fs
cwtl
sbb
pop
cmpsb
add
cmp
or
dec
lods
pusha
adc
or
xor
mov
mov
push
ret
imul
mov
test
dec
mov
nop
pop
jns
stc
repnz
fidivrl
sbbb
std
ss
push
in
in
jmp
repz
stc
pop
fdivrs
pushw
insl
sbb
jecxz
fxch
adc
and
bound
jno
imul
rcll
inc
mov
imul
in
jg
in
lret
or
jmp
mov
mov
lahf
ret
dec
sub
sbb
jl
ret
or
and
cltd
adc
and
mov
mov
inc
shrb
dec
inc
fucomip
push
out
mov
sbb
or
pop
in
and
lret
pop
sub
sub
add
out
in
outsl
nop
jns
cmp
inc
jmp
jl
xor
stos
stc
out
ds
jo
mov
test
loope
loope
dec
jbe
sub
or
out
cltd
scas
andb
imul
xchg
outsb
mov
adc
sti
and
pop
mov
add
jl
test
mov
inc
cmp
mov
or
negb
push
outsb
sbb
and
mov
gs
sbb
popa
sbb
sbb
dec
push
sbbb
sbb
imul
sti
fcmovnbe
std
cmp
sbb
test
cmp
pop
dec
lret
inc
jle
sbbb
leave
rorb
xor
adc
imul
fwait
mov
ja
cs
jp
xor
push
xor
sbb
jae
cli
call
dec
add
mov
or
stos
fisubrl
add
insl
jle
sahf
bound
pop
xchg
sbb
test
push
lcall
sti
jp
add
fistpll
mov
and
insl
jo
push
xor
cltd
rcl
push
jno
pusha
mov
jnp
and
jo
cmp
xchg
sbb
add
push
int
cs
cmp
xchg
shlb
addr16
loope
pop
pop
ds
sub
insl
adc
pop
inc
mov
xor
stos
or
dec
arpl
repnz
pop
xchg
outsb
cmpsb
xor
iret
jle
nop
and
call
sbb
xchg
loop
aam
pusha
jno
dec
in
data16
mov
fnstcw
sti
sbb
and
jns
lret
cmp
mov
adc
or
xchg
inc
outsl
les
sbb
and
sbb
cmp
xlat
out
add
jl
inc
nop
test
stos
mov
ret
mov
mov
daa
fisubl
mov
cli
mov
add
ljmp
push
data16
cli
add
nop
lock
mov
pop
les
dec
add
and
das
data16
xchg
inc
sub
adc
adc
mov
std
push
out
sbb
out
hlt
or
inc
jg
dec
xchg
sbb
mov
dec
cmp
mov
xor
ret
or
add
fwait
std
mov
sub
je
pop
sub
sub
pop
sbb
cwtl
sub
mov
push
outsl
stos
sub
sbb
rorl
in
mov
pusha
xchg
imul
fptan
and
and
xor
in
jnp
jns
pop
or
jnp
add
jmp
bound
mov
adc
dec
or
mov
xor
jmp
lcall
test
inc
and
sbb
dec
and
sti
inc
dec
mov
call
sar
pop
xchg
adcl
cli
mov
sarl
lds
jnp
stos
pop
fnstsw
inc
adc
ds
or
stc
fwait
loope
sbb
ljmp
subl
repnz
sarb
nop
add
cmp
jecxz
repnz
pop
sub
fnop
mov
pop
inc
push
cmp
jmp
and
xor
cmp
sub
loop
pop
sbb
push
pop
mov
add
sub
insb
mov
scas
cmp
add
mov
cld
cmp
push
mov
inc
sbb
or
add
dec
aas
sbb
sub
loop
xor
cltd
or
or
and
push
dec
jno
sbb
mov
sarb
and
jns
leave
inc
mov
nop
inc
imul
inc
fcoms
lret
pop
lcall
and
fwait
inc
and
cmp
stc
xchg
subb
dec
mov
nop
cltd
ja
cli
ret
jne
xor
out
fldenv
jl
sbb
or
cltd
jge
push
std
inc
dec
mov
imul
mov
mov
inc
repnz
mov
xor
out
lcall
icebp
jl
outsl
push
fnsave
std
or
inc
stc
bound
push
mov
xor
adc
insb
flds
sub
ficompl
movsb
pusha
into
sarb
aas
sbb
jbe
sub
or
dec
leave
sbb
ror
cmpl
xor
test
inc
mov
ljmp
or
cmovbe
and
pop
jno
sub
inc
mov
pop
sbbb
fldl2e
push
jnp
xchg
inc
or
and
sub
ror
mov
xor
subb
pop
clc
sub
add
imul
into
ss
jp
sbb
dec
jmp
jge
sub
aas
sub
jl
or
sti
adc
mov
cli
jo
std
lcall
mov
jp
xor
popa
stos
adcb
sub
push
mov
mov
in
pop
dec
adc
dec
or
test
ret
sub
mov
pop
dec
sbb
mov
mov
xlat
push
inc
adc
cmp
cltd
inc
clc
or
add
adc
cld
push
cmp
xchg
and
ja
loop
imul
inc
bound
add
mov
mov
xchg
and
jg
and
ljmp
loope
or
shll
pop
nop
inc
adc
and
bound
pop
pop
aas
imul
lret
sub
rcrb
ljmp
mov
stc
aam
lret
ficompl
fisubrs
ljmp
push
adc
sbb
mov
jmp
add
sbb
cli
sbb
stc
lret
sub
dec
repz
je
in
sub
mov
ds
imul
and
pop
jmp
add
sarb
popa
jb
adc
fcoml
push
stos
sbb
add
push
mov
fwait
std
or
push
pop
sub
cli
fdiv
cli
add
ja
push
push
pop
add
in
ljmp
pop
data16
jp
test
inc
nop
imul
arpl
fisubrs
sub
sub
ficompl
je
xor
push
das
add
push
lock
data16
out
cmp
pop
sbb
imul
cmp
fdivp
and
cmp
sub
lock
cmp
and
dec
dec
ret
cmp
lock
call
stos
mov
imul
cltd
sahf
add
xor
sar
or
mov
inc
pop
sar
mov
vaddsubpd
inc
cmp
cltd
jg
or
inc
mov
aas
mov
imul
mov
push
pop
ljmp
sub
outsb
mov
aas
jo
mov
loope
imul
add
imul
push
into
sub
lret
xchg
xor
pusha
mov
jnp
das
add
ljmp
gs
xor
add
hlt
pop
icebp
cli
js
in
scas
inc
push
cmp
subb
shlb
or
nop
notb
inc
stos
ljmp
sbb
jns
inc
add
ljmp
jecxz
xchg
mov
cmp
data16
jle
es
imul
xor
nop
adc
imul
jnp
pop
cltd
ljmp
sub
mov
inc
fimull
push
push
nop
lcall
mov
mov
mov
in
inc
inc
std
and
in
jo
adc
std
mov
aam
jnp
popa
mov
les
xchg
vmovaps
push
mov
jle
pop
movsb
idivb
roll
in
cmp
dec
push
jo
inc
dec
sbb
imul
imul
jbe
inc
incb
fcmovnu
push
rorb
jb
mov
mov
fnstcw
repnz
mov
loop
xor
sub
lret
sub
xor
mov
or
bound
add
outsb
sub
mov
movsl
mov
cwtl
cli
movsb
jns
imul
shld
add
cli
pop
pop
jbe
nop
ja
and
sbb
cli
inc
sub
sub
jg
in
jnp
aam
lret
or
pop
inc
shrb
and
bnd
sub
fnstsw
adc
in
pop
in
lods
dec
inc
pop
add
mov
lock
push
and
pop
cmp
sub
push
push
add
pusha
daa
jl
xor
and
dec
dec
fdivrs
jmp
dec
cmp
xor
mov
ljmp
popf
add
aas
lret
push
jb
int3
cltd
inc
mov
loope
push
pop
movsb
rolb
pop
pop
push
sub
es
loopne
push
cmp
dec
sub
or
data16
mov
jo
sbb
test
dec
loop
sub
xor
sarb
pop
mov
lock
nop
pop
jns
rsqrtps
or
std
mov
sub
lds
lcall
xorb
pop
pop
push
in
cli
in
push
jnp
and
rclb
scas
andl
xchg
mov
sarb
inc
stc
hlt
repnz
inc
jno
cli
popa
add
movsb
fucomi
inc
mov
cmp
stc
cmp
mov
jb
mov
add
sbb
pop
add
inc
lahf
add
mov
inc
adc
mov
call
mov
push
aas
xchg
and
mov
xor
dec
sbbb
lret
imul
add
cld
pop
inc
and
jp
dec
and
sbb
sbb
xchg
xlat
aad
add
movsb
ss
and
jnp
sbb
fistpl
cmp
lahf
push
add
lock
lcall
ds
or
jp
adc
jmp
pop
in
jp
cld
inc
sub
cmp
pop
xor
jp
ss
cmp
daa
sbbb
jp
out
hlt
test
or
aas
loope
fwait
xor
dec
xchg
mov
mov
ljmp
cmp
inc
sub
popa
pop
cmp
pop
pop
popf
ljmp
ds
and
mov
jns
daa
pop
int3
sub
sbb
shlb
ljmp
xor
data16
cmp
roll
and
pop
cli
inc
push
bound
scas
cmp
xor
out
and
imul
push
es
jle
fld1
cmp
jae
fwait
jae
mov
push
xchg
cmp
out
mov
orb
push
jp
xchg
in
sbb
cltd
xlat
mov
and
test
push
jle
ficompl
insb
clc
pop
xor
inc
repz
jp
mov
xchg
iret
sbb
nop
jmp
pop
icebp
movsl
lea
sub
pop
xor
cmp
mov
mov
idivl
mov
cmc
rorl
cmp
xchg
sbb
adc
pop
outsb
in
pop
cmp
mov
and
jp
aad
cli
or
inc
fs
lret
pusha
loope
cli
xchg
lock
fdivp
jle
push
pop
mov
inc
sbb
jmp
ret
jae
lock
and
xor
enter
push
xor
data16
inc
xor
and
popf
lock
jnp
or
push
sub
loopne
dec
adc
fxch
pop
sub
nop
pop
fildll
sub
enter
lea
adc
cmp
xor
cmp
shlb
stos
inc
jp
and
cmp
popa
add
pop
pop
push
push
fwait
mov
and
push
xchg
loopne
mov
mov
jnp,pt
and
cmpl
sbb
inc
pop
insb
dec
mov
jp
out
cmc
sbb
ret
lock
pusha
pop
jno
imul
mov
mov
cmp
imul
xchg
sub
push
add
push
sbb
nop
xlat
and
jp
inc
popa
jmp
pusha
int
sub
add
sub
or
loopne
xor
fistpl
jnp
imul
push
pop
popa
or
adc
sub
sbb
push
rclb
inc
or
lods
adc
mov
adcb
or
sub
imul
xor
ljmp
sarb
pop
pop
mov
push
stc
xchg
inc
fistpl
jnp
add
push
ret
arpl
sbb
pushf
int3
mov
jecxz
sub
out
mov
xor
std
stc
out
pop
pop
inc
inc
mov
sar
sti
pop
cwtl
xor
in
cmp
outsb
ljmp
mov
mov
bound
hlt
push
stos
dec
jno
fidivl
xor
sbb
pusha
incl
testb
dec
fisubl
cltd
jnp
imul
jnp
sub
aas
loopne
add
ljmp
jo
inc
add
cltd
outsl
or
mov
sti
sub
jbe
lock
xor
cmp
popf
pop
xchg
bound
sbb
imul
jecxz
adc
shlb
mov
inc
or
ds
out
dec
xor
mov
loope
xor
lcall
loope
jnp
inc
mov
imul
lods
jo
jo
pop
loope
mov
rcrb
pop
cmp
idivb
jmp
xor
sti
popf
or
loope
xor
dec
arpl
bound
fs
jp
or
sub
sub
loope
or
pushf
cmp
imul
inc
data16
push
push
inc
loopne
sub
inc
lcall
lcall
nop
lock
sub
fistl
inc
rcrb
push
stc
xor
cmp
cmp
sti
jno
inc
jmp
hlt
cmp
imul
sub
cwtl
inc
sub
arpl
lods
es
sarb
inc
mov
add
sub
in
pop
cld
dec
ds
es
or
xchg
ljmp
pushl
push
pop
outsl
jb
or
mov
push
out
jnp
adc
daa
add
ss
subb
cmpb
sub
fidivl
sub
dec
sbb
insl
imul
nop
sub
stos
lcall
cmp
rcrb
dec
orb
insb
loopne
lcall
and
mov
or
sub
orl
imul
inc
cltd
mov
add
xchg
inc
int
or
inc
popa
mov
repnz
and
into
dec
xchg
insl
pop
cmp
bound
jle
mov
xlat
mov
shlb
in
push
call
imul
fstps
loope
sbb
stc
fbstp
xor
add
mov
sarb
icebp
jo
enter
inc
hlt
shrb
mov
sbb
aas
xlat
dec
testl
dec
nop
inc
sbb
sbb
stos
data16
aam
pop
push
inc
loopne
test
sub
or
popf
dec
cmpsb
bound
sub
sub
movsb
fcmovbe
into
pop
scas
cli
ret
xor
lock
xchg
cmp
inc
pop
fimull
sub
fisttpll
aas
pusha
fimull
std
sti
pop
dec
orb
stc
inc
sbbb
lahf
aas
jno
mov
jge
lahf
inc
or
loop
test
and
inc
stc
nop
jnp
lock
ds
jo
mov
jns
dec
and
push
sahf
stc
lcall
mov
adc
lock
imul
xchg
mov
shlb
ljmp
cltd
ljmp
push
insl
ficompl
dec
popf
lock
xchg
pop
add
ds
push
outsb
pop
jno
mov
ret
xor
out
imul
mov
stos
fcom
xchg
jge
fstsw
aas
ljmp
dec
enter
add
sub
in
jns
imul
ds
mov
push
adc
cwtl
cmp
pop
divb
mov
or
ficoml
ljmp
add
rol
pop
mov
ds
lcall
sbb
jb
cmpl
sub
sbb
mov
jmp
and
jns
jno
xchg
fistpll
stos
inc
ds
jb
stos
add
fwait
loopne
jnp
fisttpl
mov
stos
dec
mov
mov
lret
pop
or
xor
cmp
lret
ljmp
jmp
jb
subb
jnp
dec
or
cmp
scas
in
push
stos
shlb
add
mov
stos
cli
dec
jns
adc
and
xor
scas
cltd
aas
jmp
mov
push
push
cmpsb
sub
test
pop
or
lock
callw
loopne
stos
sub
sub
inc
dec
sbb
test
or
jmp
mov
add
mov
imul
dec
enter
ljmp
test
adc
repnz
pop
or
fwait
push
sub
jns
mov
mov
jb
add
xor
shrb
xor
sub
std
je
and
sbb
sub
jo
test
sti
sub
or
fisubrl
int
mov
adc
stos
ss
mov
cmp
cwtl
dec
sbb
loopne
pusha
and
jb
sub
aas
cltd
adc
lret
dec
les
xor
mov
push
ljmp
dec
push
es
out
and
dec
cmp
fwait
mov
mov
fldcw
mov
add
jmp
pop
out
fwait
ss
xor
dec
sub
ret
dec
sbb
or
sar
data16
fisubl
sti
xchg
bts
sub
popa
fidivrl
inc
pop
scas
stos
lcall
test
inc
jecxz
ljmp
xor
lcall
std
aas
sahf
add
shrb
mov
stos
repz
jmp
pop
xchg
ljmp
enter
inc
dec
pop
pusha
sub
or
or
mov
por
push
push
inc
cmp
sub
out
scas
push
imul
cli
lods
imul
xchg
imul
imul
scas
hlt
jp
shrb
xor
push
pusha
mov
stos
int
adc
outsb
xor
lea
pop
inc
loope
and
sub
xor
jo
idiv
stc
das
dec
leave
xchg
ja
jg
decb
add
inc
pop
add
insl
dec
loope
jnp
push
lods
fwait
jnp
push
inc
fnstenv
sub
pop
loopne
mov
xor
sbb
shrl
or
repnz
dec
stos
add
sub
imul
repz
jbe
out
push
imul
add
sbb
push
jge
imul
dec
mov
xor
pusha
sbb
add
out
sarb
jns
rcll
scas
leave
add
fisubrl
pusha
es
mov
jnp
mov
push
mov
enter
push
rolb
mov
out
push
lret
mov
stos
push
pushf
lret
bound
mov
stc
ret
test
dec
bound
sub
lret
cs
sbb
pop
nop
and
pop
sub
inc
mov
cmp
dec
mov
dec
mov
inc
pop
cmp
test
cs
in
ficoms
out
cmp
push
cs
sub
ficomps
jmp
test
xor
es
or
mov
sub
in
cmp
dec
mov
xor
push
sub
and
sub
jno
addb
fwait
sbb
and
pop
sbb
push
ja
sbb
mulb
cs
call
mov
push
jb
test
aas
stc
mov
pop
dec
jnp
mov
inc
mov
jl
cmp
fyl2xp1
imulb
bound
dec
cli
mov
popl
in
leave
push
fcoml
xchg
xchg
push
and
pop
cli
lock
mov
fcompl
lock
push
or
jmp
ljmp
jmp
and
cmp
mov
scas
jg
push
mov
jp
out
nop
dec
fstps
scas
cltd
sbb
mov
jnp
data16
sti
add
push
cmp
adc
bound
dec
nop
mov
add
pop
dec
sahf
fwait
jns
fnstsw
sub
popa
pop
or
dec
xor
ja
es
ljmp
fs
and
mov
hlt
mov
jo
nop
pop
inc
jge
lock
je
jae
and
cs
push
mov
or
fdivrs
fcomi
lock
int3
sub
sbb
aas
push
imul
cmp
dec
lret
sub
ficompl
inc
ds
test
adc
dec
ret
dec
push
push
ljmp
pop
and
pushf
sbb
inc
jl
out
mov
outsl
fisttpl
inc
movaps
mov
jnp
aaa
shrb
mov
je
and
fwait
pop
sahf
xor
ljmp
pop
out
and
cmp
fisubl
sbb
leave
or
lret
in
push
loopne
fldcw
push
mov
mov
jo
dec
fs
sub
inc
pop
sbb
daa
sbb
jo
cli
iret
sti
pop
sub
mov
pop
shlb
push
rol
movsl
je
xchg
jns
ljmp
dec
xchg
xchg
cmpsb
scas
into
hlt
mov
pop
pop
xor
jae
bound
xchg
loop
push
cmpsb
pusha
outsb
mov
jo
dec
movsb
pop
bound
jmp
push
popf
sbb
mov
jb,pt
outsb
xor
cmp
push
or
pop
xor
scas
sbb
dec
push
mov
lret
jb
out
pop
dec
inc
push
mov
cmc
sbb
imul
jmp
fwait
lret
into
ja
fidivs
rcrb
pop
add
sbb
sub
jb
imul
adc
push
mov
imul
inc
jbe
into
pop
scas
pop
imul
mov
cwtl
loopne
test
ljmp
cli
pop
jbe
lret
xchg
pop
fldl
outsl
cmpb
scas
dec
js
push
pop
xchg
imulb
outsb
xor
add
cwtl
xchg
jecxz
push
dec
sbb
sub
sahf
xchg
inc
mov
sub
push
jl
mov
xchg
xchg
and
sbb
pop
jmp
xlat
cmp
sbb
inc
fwait
test
xchg
cmp
and
lcall
mov
and
stos
jnp
mov
sub
jb
bound
mov
push
fmuls
test
cmp
repnz
aad
lods
or
inc
mov
ret
movsl
jecxz
into
xchg
int
aas
cli
sub
xlat
dec
or
inc
push
jns
das
pusha
mov
pop
cmp
mov
push
inc
inc
cmp
cs
adc
adc
ret
adc
sbb
push
fcomps
jg
sub
sbb
outsb
mov
pop
fcoms
add
push
cmp
pop
loop
lock
xchg
popf
jb
or
imul
aaa
pop
cmp
aas
or
sti
ds
int3
push
inc
stos
xor
push
inc
sbb
outsb
xchg
out
cld
sub
cmpsb
lcall
sbbl
lahf
mov
in
arpl
ljmp
stos
mov
jbe
sub
cltd
fstpl
xor
test
repnz
imul
outsl
popa
in
stos
pop
mov
and
loope
mov
and
negb
lock
xor
sub
pop
test
in
lods
xor
mov
cmp
mov
mov
ja
divl
mov
push
or
ret
fsub
dec
xor
das
scas
lcall
push
outsb
mov
pop
pop
and
frstor
sub
mov
popf
out
jb
fs
cs
popa
and
ss
das
mov
out
loope
insb
push
push
xchg
cmp
adc
stos
push
sub
dec
jmp
shrw
pop
enter
andl
inc
lock
pop
pop
rorb
xchg
or
pusha
les
add
test
or
iret
and
fcoml
pop
adc
push
pop
daa
loope
jne
jmp
mov
pop
test
out
je
and
iret
mov
mov
xor
insl
hlt
lock
mov
mov
xchg
repnz
cli
pop
outsl
fldenv
dec
ja
iret
sar
test
adc
arpl
lcall
mov
and
adc
inc
test
ljmp
xchg
fildll
or
and
ja
xor
mov
mov
aam
adcl
cmp
pop
sbb
gs
das
xchg
pop
and
repz
mov
push
mov
lea
jecxz
adc
icebp
inc
or
pop
sbb
adc
cvtps2pd
nop
dec
leave
add
shll
adc
fnsetpm(287
add
mov
cs
inc
jne
mov
fisttpll
jg
int3
addr16
pop
or
lea
adc
jae
push
dec
test
jne
addb
cmp
push
repnz
xchg
pop
in
lcall
cltd
pshufw
mov
imul
test
xchg
sbb
cmpsb
pop
adc
int3
xchg
pop
outsl
xchg
cmp
into
shlb
mov
cmc
das
mov
movsl
pushf
fstps
mov
pop
mov
and
fnstsw
jns
cli
jno
pop
imul
jl
push
call
pop
dec
data16
push
imul
mov
into
ffree
pop
popf
imul
and
stc
jle
dec
jge
mov
pop
sbb
fucomip
mov
scas
fisubs
sub
pop
mov
or
jmpw
pop
push
mov
lock
pop
jbe
cld
dec
cmc
scas
push
shrb
dec
mov
out
mov
into
push
push
mov
icebp
jg
fs
mov
nop
aaa
jns
jb
pop
mov
jne
mov
movsl
sub
xor
nop
xlat
jae
sbb
imul
xorl
fcmovb
out
push
pop
inc
xchg
faddl
or
mov
mov
add
xchg
add
mov
add
pop
jmp
and
cmp
idiv
aad
pop
xor
bound
js
mov
std
or
notb
jge
test
sub
sbb
cmp
lret
adc
aad
or
bsf
pop
fwait
movsb
adc
nop
add
int
xchg
mov
shlb
pop
aam
mov
xchg
adc
adc
jbe
or
cltd
stc
sub
sahf
jp
scas
mov
mov
push
mov
out
lods
dec
xchg
loope
movsl
pop
shl
daa
pop
sbb
mov
xlat
mov
cmp
test
jne
andb
icebp
jmp
push
mov
sbb
test
adc
mov
or
pop
mov
dec
out
in
jle
or
lcall
pushf
xchg
movsb
stos
pop
jg
sub
jge
mov
inc
out
or
aad
mov
inc
sbb
or
int3
jne
repnz
insl
jnp
mov
inc
jl
ja
fwait
xchg
adc
call
outsl
jg
aad
adc
imul
mov
xchg
push
pusha
ds
sbb
dec
cmp
or
xchg
adc
cmpsb
pop
push
out
adc
mov
and
pop
or
mov
mov
pop
sub
mov
or
cwtl
pop
xor
shrl
pop
das
out
out
cmc
pop
push
cltd
push
adc
pop
and
iret
xor
mov
mov
xchg
cmc
fcmovne
xchg
iret
pop
rcl
out
bound
sbb
mov
pop
jno
mov
jae
imul
iret
add
pop
xchg
inc
push
test
mov
pop
imul
rcll
push
sub
pop
mov
out
aaa
iret
cwtl
jbe
jl
movsb
mov
xor
int
xchg
sbb
insb
pop
pusha
shrl
pop
int
arpl
mov
pusha
call
adc
jno
mov
fidivrs
lds
push
pop
lret
orl
or
insb
add
mov
jns
mov
jbe
xbegin
inc
mov
out
adc
test
jle
push
push
mov
pushf
xchg
test
out
mov
sarb
mov
fwait
or
or
sbb
inc
mov
sbb
idivl
movl
mov
push
fsubrl
addr16
pop
mov
xchg
roll
jns
push
lds
out
xchg
mov
xchg
ds
cld
pushf
lods
mov
rclb
adc
cmp
pop
cmc
frstor
js
and
mov
pop
stc
lea
andb
push
add
in
pop
push
sbb
rcrl
and
mov
out
aaa
dec
jns
pminsw
xchg
ja
sbb
pop
stos
data16
push
addr16
roll
sti
pop
xchg
in
sahf
insl
dec
sbb
sub
mov
std
cmp
pop
rorb
lret
ror
xor
mov
gs
or
out
xchg
scas
pop
mov
jne
bswap
pusha
shr
sbb
pop
rclb
fdivr
push
lea
or
inc
fisubl
jle
adc
jne
in
pusha
xchg
imul
ss
pop
push
data16
mov
mov
mov
je
push
xchg
pusha
sub
pushf
movsl
and
in
mov
pop
inc
aas
jne
test
dec
pop
add
sbb
push
ljmp
rcr
mov
lds
xchg
dec
enter
pop
mov
aaa
lods
inc
dec
bnd
cmp
lds
scas
lahf
push
add
xchg
xor
cmp
adc
outsl
mov
enter
test
xchg
rcrb
xchg
hlt
stos
mov
or
rclb
xor
xchg
cmp
popf
cmpsl
push
lahf
lea
lret
adc
mov
shlb
icebp
mov
pop
mov
push
enter
cli
je
in
sub
cmp
fcompl
push
adc
adc
cmpsl
push
cmc
test
sub
adcb
gs
fistl
pop
add
in
jl
xor
hlt
pop
xor
and
cwtl
jmp
cmp
xor
pop
rclb
xchg
jae
pop
dec
mov
xchg
sub
xorl
or
loope
pop
dec
sub
clc
test
out
pop
cmpsl
mov
cmp
pop
fdivrl
xchg
and
test
pop
std
pop
and
sarl
pop
into
lahf
pop
ja
test
mov
mov
lock
fldcw
jbe
jnp
dec
iret
pop
pushf
mov
int
push
or
or
pop
jnp
aas
dec
push
lods
insl
inc
mov
data16
clc
push
bound
loop
repnz
xchg
pusha
and
cs
sbb
popa
movsw
ds
jnp
lock
inc
dec
imul
and
dec
dec
imul
repz
scas
lret
dec
jb
mov
and
add
or
jb
add
fisubrs
sub
fwait
push
inc
xchg
pop
adc
data16
orb
mov
call
push
or
adc
mov
sbb
jo
xchg
pop
add
cmc
lods
mov
popl
or
push
mov
jecxz
das
cmp
in
cmp
cs
pop
push
scas
lret
test
xlat
pushf
and
out
fisubl
aam
sub
idiv
ja
sub
rep
sbb
arpl
jl
and
jb
mov
or
sub
inc
fstpt
es
and
jbe
dec
aas
imul
jbe
mov
mov
mov
out
popa
iret
popa
push
dec
outsl
daa
je
push
sti
sub
dec
fistps
scas
pop
ja
sbbb
mov
sbbl
and
aas
and
neg
ret
pop
cltd
scas
mov
sti
cmp
dec
push
cmpsl
imul
mov
stos
mov
push
mov
lahf
pusha
subb
pop
dec
mov
cmp
cmp
cmpl
mov
cmp
ret
sahf
cmp
ss
divb
inc
mov
ljmp
xor
mov
mov
push
push
inc
arpl
mov
sarl
cmp
out
push
pop
or
inc
ljmp
stc
jmp
inc
sub
mov
xor
xchg
cltd
inc
cli
pop
push
dec
pop
mov
sub
xchg
pop
js
dec
and
hlt
cmc
outsl
xor
pusha
xor
cli
sarb
popa
cmp
push
sub
bound
mov
and
jecxz
and
fwait
sbb
mov
cmpsl
inc
fwait
cwtl
das
cmp
test
ret
jb
fwait
jbe
cmp
xchg
jbe
cli
push
stos
push
fwait
adc
shll
icebp
push
out
iret
push
inc
rcrl
or
mov
dec
cwtl
sti
jbe
out
stos
fisubrl
not
mov
lret
aaa
or
addr16
mov
leave
daa
mov
jg
pusha
jg
notb
addb
or
lret
mov
or
seto
inc
out
mov
jp
mov
rcr
jbe
mov
mov
xlat
push
sub
mov
in
sbb
repz
imul
push
ja
jns
mov
sar
fwait
inc
sti
imull
lcall
mov
sub
idivb
mov
or
sub
imul
cmpsl
out
mov
sbb
jl
or
xorl
scas
cmp
into
jecxz
dec
push
fcomps
jg
out
or
cmpsb
cmp
cmpsl
cmp
fisttpll
jae
fcmovu
fs
orb
pop
xchg
stos
mov
mov
dec
scas
mov
orl
lcall
imul
add
add
cmpsb
imul
stos
mov
les
testb
lds
jmp
push
add
movl
push
push
lods
ja
push
cmpb
jp
mov
inc
sub
faddl
repz
mov
sub
cmp
sbbb
push
pop
sahf
sbb
sub
sub
and
cmp
cmpsb
lcall
and
mov
jl
sub
das
inc
fsubl
ss
mov
cmp
fwait
mov
test
leave
inc
gs
out
ds
add
into
push
push
test
mov
movb
ret
mov
sbb
jmp
xor
mov
ret
mov
jnp
xchg
loop
xchg
xchg
push
lret
and
mov
dec
adc
push
lds
cmp
pop
inc
lret
sti
jp
shl
scas
aam
stos
aas
mov
inc
out
cmpsb
cmp
out
movsl
xchg
cmpsb
mov
fs
lea
dec
add
int
mulb
pop
pop
mov
xor
dec
cmpsl
popf
jge
shl
lret
ljmp
inc
imul
add
mov
call
cmp
aas
out
icebp
cmp
daa
jae
pop
int3
ja
addl
jne
mov
mov
je
bound
pushw
push
outsb
mov
in
pop
lods
jb
mov
adc
add
jb
jbe
inc
push
cmp
adc
adc
or
dec
mov
push
push
scas
data16
or
loope
mov
sbb
call
imul
jb
or
add
adc
adc
jnp
cmp
push
pop
pop
jmp
mov
cs
jecxz
frstor
mov
stos
daa
sub
pop
test
cmpsl
popa
scas
imul
pop
in
lods
mov
sub
stos
gs
loope
repnz
rcrb
jo
outsl
jae
mov
xor
in
cmp
jmp
scas
out
je
sbb
cltd
jnp
pop
sti
mov
jns
pop
stc
mov
mov
les
std
mov
inc
add
test
or
mov
roll
push
push
jb
cmp
pop
outsb
pop
les
mov
sub
pop
out
cs
mov
stos
addr16
out
call
cmpsl
outsb
and
movsb
sub
fcmove
repnz
mov
das
mov
jno
gs
xchg
pop
mov
lods
out
jae
or
mov
push
lods
mov
jle
dec
mov
mov
leave
das
stc
pop
int3
movsb
aaa
jecxz
insl
lsl
pop
xchg
sbb
pop
cmp
incl
pop
xor
fwait
mov
xor
cmp
xchg
pop
pusha
adc
orb
push
lcall
sbbl
jo
sbbb
iret
xlat
dec
int3
jno
xchg
pop
sub
roll
fsubs
pop
test
pop
mov
sar
fwait
xchg
pop
fdivrl
dec
pop
out
mov
pop
out
fcmovbe
mov
sbbl
jbe
jmp
and
mov
fwait
sbb
cli
inc
mov
pop
pop
jl
mov
cmp
xchg
jb
cld
out
xchg
pop
dec
add
inc
inc
pop
jne
sahf
mov
or
mov
gs
stos
or
sti
mov
test
pop
push
xlat
fisubs
lret
shrl
mov
or
mov
sub
inc
inc
mov
and
mulps
push
add
adc
es
push
inc
sbb
push
mov
and
jnp
ds
aam
int
push
aas
leave
jb
stos
cmp
pop
sub
pop
fstps
test
xchg
push
imul
adc
mov
mov
ss
mov
jne
pop
aas
rolb
loopne
rcrb
cmpsb
and
push
dec
xor
loopne
inc
mov
xchg
adc
ss
clc
jne
pop
jae
ret
adc
pop
mov
mov
inc
or
mov
sub
sarb
pop
dec
mov
shrd
pop
shll
negl
sbb
insb
adc
fsubr
mov
cwtl
mov
hlt
ss
dec
jge
pop
sub
mov
and
jl
jmp
pop
add
jg
push
stc
pop
sbb
sub
mov
xor
cmp
test
sbb
in
or
lds
dec
mov
sahf
cmp
push
pop
fidivs
mov
fmull
negl
push
cmp
out
icebp
lahf
pop
movsl
pop
or
push
jno
es
mov
pop
and
inc
push
rcr
movl
loopne
lret
jno
int
adc
mov
push
pop
push
ja
sarb
test
fdiv
pusha
mov
mov
push
fldcw
sub
xchg
loope
pop
aas
rorl
incb
ja
and
jnp
xor
pop
notb
mov
mull
dec
or
fs
into
fdivrl
mov
mov
je
sbb
xchg
inc
icebp
xchg
insb
lods
push
hlt
enter
ds
imul
ja
jne
jge
pop
pushf
repz
xor
unpcklps
sbb
pop
dec
in
jne
mov
aad
ss
insl
daa
inc
pop
adc
loope
xchg
call
cmp
xchg
fcmovbe
xor
mov
in
pop
scas
inc
enter
pop
mov
xor
sti
and
lcall
fldenv
std
cmpsb
cmp
add
mov
add
cmp
cmpb
jae
pop
and
push
inc
and
repnz
jno
push
das
pop
pop
imul
jge
cmp
push
lods
cmp
adc
in
out
lcall
push
mov
mov
sbb
inc
mov
push
xlat
mov
fistl
pop
inc
mov
jno
jle
test
leave
cmp
mov
pop
test
lret
add
repz
frstor
sub
cmpsl
xor
adc
adc
xor
test
xor
xchg
dec
mov
pop
mov
clc
add
adc
adc
xchg
dec
cmpsl
ljmp
jmp
jne
pop
and
adc
pop
insb
mov
jle
pop
cmp
xchg
xchg
add
pop
lods
sbb
rorb
lret
ds
outsb
sbb
add
fistl
into
xchg
out
push
or
mov
jmp
pop
call
add
clc
mov
pop
cmp
push
pushf
adc
jnp
js
call
repnz
or
cmp
jns
or
imul
dec
pop
dec
push
xchg
fnstcw
jns
adc
test
pop
lahf
adc
jbe
xlat
stos
fcoml
ljmp
movsl
pop
aaa
cmp
dec
ja
ret
xchg
aam
cmp
pop
cld
push
aas
pop
pop
inc
xor
test
vdivss
insl
and
in
pop
mov
popf
fldl
scas
and
jne
jl
stc
inc
cmpsb
adc
pop
les
mov
pop
dec
iret
lahf
add
popa
stos
jbe
imul
lock
fwait
push
lcall
mov
cmc
loopne
push
mov
xchg
xor
xchg
cmp
cwtl
movsl
out
adc
mov
jae
dec
nop
sbb
push
mov
in
fcmovu
ljmp
pop
cld
sub
and
mov
outsb
lea
or
pop
int3
add
in
rcrb
sahf
push
pusha
sbb
sub
pop
ds
and
jmp
icebp
xor
or
pop
movsl
jl
inc
fst
loope
ss
xor
mov
cmp
pop
xor
pop
push
out
sub
cmpsl
push
xor
mov
jnp
fimuls
idivb
jo
int3
scas
jl
loopne
sbbl
pop
mov
jne
pop
shll
sbb
pop
cmp
or
test
xchg
cmpsl
out
rolb
inc
push
jg
pop
xor
popf
repz
fidivl
stos
or
shrb
ja
lcall
pop
ficoml
and
xchg
mov
inc
xchg
pop
jl
stos
add
sbb
nop
and
insb
dec
pop
inc
adc
mov
sti
dec
ficomps
sub
sub
je
das
xor
outsb
mov
test
pop
sbb
adc
mov
sahf
popa
test
jbe
dec
jmp
fwait
sbb
add
push
push
push
pop
movsb
jbe
negl
lret
mov
dec
xlat
xor
shrl
mov
outsb
sahf
in
mov
cld
dec
enter
mov
mov
test
arpl
ret
and
xchg
pop
repnz
dec
add
lock
inc
lret
xchg
pop
loope
push
or
pop
or
xchg
pop
in
or
dec
pop
repnz
inc
pop
cltd
pop
push
jnp
frstor
push
prefetch
pop
push
sbb
cmp
jbe
aaa
dec
dec
ja
xor
aam
adc
aas
cmpsb
pusha
movl
sbb
int
icebp
fdivrs
inc
in
inc
out
xchg
push
xor
jle
rcrl
cmc
popa
jmp
fwait
sbb
ds
jne
sbb
rorl
jae
pop
pop
jmp
nop
mov
mov
lods
jp
loope
dec
pop
dec
mov
ja
or
pop
movsl
std
loopne
or
pop
xchg
sbb
fs
out
dec
mov
mov
lcall
push
and
jp
out
and
push
push
aaa
pop
movsl
and
mov
lea
xor
xchg
imul
test
pusha
xor
jmp
and
scas
ret
or
fcoms
push
sbb
jbe
sbb
cmpsl
les
lahf
int3
push
push
daa
leave
cltd
pop
jp
cmp
shrb
ljmp
inc
sahf
sarl
fmuls
mov
notl
pop
xchg
fldt
mov
loopne
or
mov
sub
pop
fadds
push
fs
inc
sahf
fstl
fidivl
jle
xor
in
cmpsl
std
cmp
mov
push
fsts
mov
ficoml
pop
mov
outsb
jae
sub
adc
arpl
repnz
push
mov
sbbb
pop
cmc
mov
mov
sbb
pop
jb
fdivrl
sub
ds
pop
xchg
push
jb
xor
pop
push
xchg
adc
subl
push
xlat
mov
inc
lret
add
fsub
js
es
arpl
mov
mov
movsl
pop
push
fs
cmp
xchg
pop
push
mov
inc
hlt
pop
in
pop
aaa
daa
dec
stos
out
lret
jnp
inc
push
cltd
cmp
push
lock
or
jne
mov
xor
pushf
movsl
js
cwtl
outsb
mov
pop
clc
or
loop
or
ficomps
call
ljmp
cld
sbb
and
mov
cltd
push
ret
jge
add
cli
pop
repz
pop
mov
pop
dec
decb
and
cmp
xor
fmuls
or
mov
jo
icebp
pop
push
cmpsl
lcall
int
inc
pop
jbe
and
push
sti
and
pop
int3
sahf
jg
shll
jnp
movsl
mov
test
loope
jns
mov
fs
lahf
adc
jle
or
sbb
or
push
xchg
mov
pop
rorb
add
sub
pop
in
loope
repz
xchg
jnp
fwait
pop
scas
idivb
push
or
gs
test
cmp
sub
push
xchg
adcb
add
and
push
inc
cmp
pop
and
insl
ret
pop
xchg
mov
lea
pop
fidivl
adc
out
mov
pop
and
test
repnz
test
aad
and
out
data16
add
sub
gs
cmc
insl
pop
adc
in
ficoms
mov
es
aas
pusha
in
icebp
or
cmp
or
mov
mov
fisubrl
jbe
ljmp
push
xlat
leave
mov
pop
mov
test
cltd
into
out
inc
fidivrl
jne
mov
pop
jle
pop
enter
in
pop
mov
jl
cmp
addb
es
sbb
add
movsl
ja
push
xchg
mov
xor
pop
stos
lea
adc
inc
jg
xor
movsb
loope
push
dec
in
push
mull
loopne
pop
and
push
push
pop
in
fstpl
xchg
cltd
xchg
jne
imul
mov
ljmp
inc
cmp
dec
sarl
sbb
in
js
jne
xor
or
pop
or
xchg
jg
add
add
icebp
jmp
jae
or
cmp
or
add
mov
mov
fiadds
push
leave
xlat
mov
aas
fstps
out
cmpsl
cmp
imul
pop
lcall
popl
movsl
sbb
mov
rcll
mov
or
stos
sbb
pop
pop
cld
add
into
cli
lahf
jge
lods
inc
mov
push
negl
inc
jns
arpl
xchg
popf
jecxz
out
push
in
repz
jp
in
iret
lods
adc
mov
imull
pop
lret
dec
sub
mov
hlt
adc
pop
gs
fadds
add
xchg
push
pushf
into
mov
pusha
sub
mov
shrl
mov
repnz
stos
xchg
dec
int
or
push
mov
or
imul
xor
pop
jmp
mov
inc
sbb
lods
bound
out
or
test
leave
push
stos
mov
xchg
cmp
mov
dec
inc
sti
popf
inc
push
cmp
rolb
sub
jae
xorl
pop
jbe
mov
push
shll
js
pop
adc
jb
pop
dec
jbe
jno
and
jge
out
xchg
lret
cmp
sbb
lods
jns
fwait
cltd
inc
jb
sahf
inc
loope
or
pop
or
pop
jp
mov
cmp
push
lret
jmp
lahf
ds
add
jo
es
test
xor
in
test
data16
xchg
add
pop
mov
stos
fmul
sbbl
movsb
sbb
lret
pop
mov
push
sar
cs
pop
push
sbb
sub
cvtps2pd
lcall
sub
or
pop
lock
push
jg
ds
mov
mov
subl
inc
enter
icebp
and
in
mov
and
call
inc
mov
jle
xor
mov
mov
mov
fists
mov
add
cmpsl
jmp
pop
lods
jecxz
and
pop
test
mov
xchg
out
lea
lds
add
pop
les
ret
add
jge
mov
xchg
lds
mov
ficoml
pop
jb
pop
enter
lock
mov
fcoml
mov
dec
sbb
popf
pop
inc
pop
cmp
push
jne
out
ret
pop
inc
or
and
popw
lds
sbb
lahf
pop
pop
ja
arpl
pop
pop
sub
inc
addr16
cltd
int
jmp
pusha
xor
xchg
bound
xchg
adc
xor
mov
cld
rol
loope
pop
push
les
pop
and
fsubrs
pop
ret
pop
dec
js
add
push
int3
mov
rcr
mov
pop
mov
xchg
add
iret
jg
data16
shlb
cli
popa
lcall
test
sbb
movsl
dec
jle
test
ds
pop
mov
push
inc
faddl
or
sarb
movl
rcll
dec
xchg
scas
xchg
and
imulb
or
push
cmpsl
rcll
leave
jbe
dec
mov
cmp
xchg
mov
pop
xchg
outsl
and
orb
jbe
jecxz
pop
jle
dec
sbb
stc
in
xchg
and
and
mov
pop
and
insb
in
xlat
dec
pop
fs
push
jle
jno
add
pop
sahf
xchg
mov
cltd
xor
rolb
xchg
mov
mov
cwtl
loopne
pop
xlat
pop
or
push
and
jno
jnp
pop
imul
pop
out
shll
or
lcall
xor
imul
pop
sbb
clc
cmc
dec
ss
aaa
pop
sbb
into
pop
loop
cmc
push
aad
mov
and
jne
outsb
cwtl
clc
gs
cltd
je
dec
cmp
out
ficompl
mov
sarb
push
imul
adc
int
in
mov
test
push
jle
mov
or
ds
and
jmp
pushl
inc
inc
scas
lret
push
in
push
push
icebp
cld
pop
subl
jne
popl
aad
add
cmpsl
cmp
pop
icebp
dec
lret
mov
xchg
add
adc
jle
push
int3
bound
pop
insl
lock
xchg
pop
sub
pushl
sbb
or
popa
mov
push
cmp
fstps
xchg
sub
push
jb
stos
mov
pop
and
mov
pop
push
idivb
lahf
out
sbb
insl
fmull
push
or
cld
pop
push
fstpt
pop
xor
cmp
add
loopne
sahf
jno
in
bound
mov
jp
pop
fwait
stos
add
sti
pop
jmp
pop
jb
leave
divl
pop
movsl
je
xchg
sub
les
lsl
lahf
mov
cmp
mov
xchg
dec
adc
push
pop
dec
aas
pop
test
and
imul
cltd
pop
int
js
xchg
lret
sbb
outsl
sub
stos
js
push
ds
ljmp
jbe
int
addl
daa
rclb
xor
in
repnz
sub
lcall
js
stos
ja
push
push
aad
mov
ficoml
add
adc
ja
in
cmp
xor
hlt
jne
cmp
push
in
mov
push
lods
lods
xlat
push
push
cmp
pop
adc
dec
dec
sub
sub
push
mov
int3
push
dec
sbb
arpl
mov
xor
leave
js
mov
stc
lock
add
jl
xchg
sub
dec
fldcw
arpl
xchg
arpl
pop
push
jbe
or
shll
shr
leave
add
and
sbb
lods
jg
stos
xchg
push
and
xchg
pop
iret
inc
inc
jnp
sbb
insb
jle
dec
jbe
mov
dec
movsl
cs
and
loopne
pop
mov
mov
popf
cli
push
movsb
negl
push
mov
lret
pushf
xor
fwait
nop
pop
adc
pop
adc
sbb
cmpsl
mov
pop
iret
jle
icebp
cmp
aad
movsl
sbb
push
loope
xchg
pop
ljmp
fcomip
lret
divb
inc
pop
pop
jne
mov
mov
jl
dec
add
mov
jne
je
sub
mov
andl
push
cmp
cmpsl
dec
test
add
pop
imull
sbb
mov
pop
push
in
adc
rcrl
mov
cmp
or
mov
psllq
pop
test
cli
and
loop
xlat
and
xchg
idiv
push
mov
test
mov
mov
mov
fldenv
jae
add
hlt
or
and
stos
xchg
ret
mov
dec
jecxz
icebp
dec
jl
outsl
pop
rolb
push
dec
jp
push
mov
jo
xchg
adc
sub
xlat
cmp
repnz
mov
call
aam
sbbl
dec
arpl
pop
mov
aad
mov
lds
repz
addr16
xlat
mov
pop
ljmp
dec
pop
loop
out
ss
pop
int3
pop
int
pushf
add
std
stc
pop
pop
push
aam
shlb
outsl
iret
push
or
mov
shl
and
inc
inc
cmp
push
mov
push
sbb
pop
leave
xchg
inc
std
jge
pusha
push
call
sbb
bound
and
mov
out
ljmp
push
xchg
popf
xchg
divl
fiaddl
mov
repz
push
xchg
ret
sbb
lcall
jle
cli
bound
pop
data16
jbe
bound
pop
mov
sbb
ds
data16
cmp
jbe
bound
rcl
sbb
jle
int
jae
mov
ficoms
loopw
adc
rcrb
ljmp
jae
sbb
xorb
pop
pop
dec
xchg
xchg
lods
and
xchg
daa
push
push
push
jp
inc
pop
or
mov
pop
mov
push
xchg
xchg
xchg
sbb
cmp
clc
pop
mov
xchg
push
data16
jbe
outsb
clc
add
ds
push
xchg
pop
pop
mov
jmp
lcall
les
jne
test
in
sub
ss
jb
punpckhdq
aas
ds
jbe
cmpsl
adc
push
idivb
or
inc
sti
adc
pop
pop
out
and
push
pop
inc
inc
fisubs
xchg
cltd
lock
inc
cmpsb
jecxz
pushw
sub
rorb
mov
std
rcrl
pop
mov
or
mov
icebp
pop
fdivrs
inc
mov
cmp
lcall
mov
cmp
dec
loope
jl
nop
mov
inc
inc
mov
and
mov
jmp
jo
bound
fisubrs
cmp
xor
dec
cmp
cmpsl
mov
mov
jp
bound
jb
pop
push
pushaw
loop
xor
jae
stos
arpl
add
mov
mov
movsb
cmp
pop
cli
daa
cli
sbb
and
pop
stc
mov
push
stos
shll
mov
cmp
jae
jle
cmp
xchg
lds
sbb
push
sbb
int3
incb
push
mov
stos
mov
es
mov
arpl
scas
cs
sub
jne
and
mov
mov
sbb
and
cmp
mov
cmp
mov
pop
sahf
dec
mov
dec
bound
jbe
mov
shll
lea
loop
imul
pushf
call
imul
dec
xchg
cwtl
inc
adc
cmp
sbb
mov
and
and
sbb
mov
ljmp
shrb
or
sbb
aas
cs
add
or
mov
fsts
pop
mov
mov
jp
dec
pop
outsb
and
sub
out
ret
pop
sub
or
lock
push
push
testb
rorl
xchg
outsb
rcll
andb
push
push
cmp
xor
cmovge
outsb
cmp
push
push
pop
dec
bound
inc
stos
mov
and
arpl
test
out
cmp
pop
shll
dec
mov
ror
repz
push
dec
jmp
loop
out
sub
cmpsl
imul
enter
and
shrl
dec
inc
subb
dec
stos
and
push
int
pushw
mov
dec
add
sub
addr16
fidivs
jg
test
js
inc
inc
stos
jmp
jecxz
push
stc
ret
xor
add
sahf
rcrl
je
ljmp
mov
push
outsb
adc
inc
xlat
ds
jo
cs
ret
xchg
push
jae
cmp
clc
sub
nop
inc
clc
pop
dec
jns
stos
pop
adc
clc
sub
add
xchg
sub
xchg
pop
loope
scas
leave
jle
push
jb
and
in
pusha
imul
sub
pop
add
add
dec
aas
stos
shrl
dec
std
jmp
pop
arpl
cmp
cltd
pushf
pop
test
data16
mov
jecxz
jb
jmp
sbb
sbb
pop
cmp
orl
fcmove
inc
out
testb
out
in
lret
cmp
stos
lret
mov
fdivrl
outsb
or
xor
fwait
dec
sbb
push
jb
push
and
stos
sub
scas
xor
sbb
cmp
pop
test
bound
push
inc
lea
jns
popa
loope
lods
push
fidivs
loop
lret
stos
notl
and
outsb
icebp
ljmp
push
repnz
daa
dec
xchg
push
pop
jns
or
sbb
inc
jp
cli
js
cmpsb
cmp
lret
ds
pop
sbb
rcrb
inc
dec
jmp
cmp
inc
fldt
and
and
sti
ds
fidivrl
test
fidivrl
mov
or
cmp
push
ljmp
push
mov
stc
stc
imul
and
scas
push
dec
mov
js
loop
jnp
dec
jb
inc
add
in
lret
xor
dec
lods
out
add
stc
mov
push
inc
add
loop
das
mov
std
vpminsw
jmp
lea
mov
scas
and
jne
test
add
cs
cmp
add
push
fisubrl
mov
dec
dec
jo
inc
mov
lods
mov
jb
retw
xchg
clc
js
pop
fwait
sub
jae
shl
jo
mov
stos
ret
xor
mov
mov
pop
fwait
push
cmp
jmp
mov
rcrb
adc
dec
mov
or
clc
pop
jle
cmp
xchg
arpl
mov
inc
adc
mov
int3
popf
push
lret
fptan
ljmp
xchg
outsl
lock
repnz
cmp
les
ret
xchg
decl
mov
mov
inc
jno
mov
push
lock
xor
lods
or
jae
js
fcmovnu
mov
mov
fs
sub
cmp
insl
insb
xchg
jecxz
mov
icebp
pop
in
stos
test
sub
mov
cmp
jne
sub
insl
cmp
or
lahf
js
mov
xchg
adc
mov
mov
mov
mov
arpl
dec
sub
mov
imul
add
xchg
mov
or
imul
inc
sbb
dec
ljmp
and
jmp
pusha
sub
cs
inc
outsl
cmp
inc
and
mov
ss
fwait
das
out
ljmp
icebp
xchg
adc
stc
sub
mov
js
sbb
add
jl
pop
popf
inc
testb
push
popa
push
sub
jo
jnp
lret
sub
ret
jmp
mov
lret
call
push
mov
jmp
out
lea
ret
mov
scas
sbb
idivb
mov
test
outsb
leave
lods
dec
test
int3
in
addr16
dec
out
ljmp
ljmp
loopne
imulb
sub
ljmp
push
sub
adc
add
sahf
adc
sahf
scas
call
jae
and
orb
adc
test
push
arpl
inc
stos
xlat
mov
imul
fcmovnb
insb
mov
sbb
push
mov
mov
fwait
outsb
jb
and
mov
out
xchg
or
add
stos
in
sbb
dec
jl
inc
inc
xchg
loope,pt
scas
fstpt
stos
sahf
jb
sub
imul
das
jecxz
adc
push
cmp
sub
mov
lret
in
jae
adc
sub
cmpsl
fldl
adc
cmp
jne
ja
and
mov
pop
push
movsb
sub
xor
out
mov
push
adc
sbb
push
inc
data16
mov
xor
dec
lret
push
lods
lods
arpl
sub
lods
dec
loope
stos
adc
xchg
xchg
stc
cmp
xor
iret
lds
fidivl
aas
or
xchg
sarl
lret
repz
jnp
mov
or
cmp
lahf
or
pop
mov
fimuls
sbb
jb
mov
pop
fmul
shll
clc
or
leave
loope
dec
dec
scas
subb
inc
lret
push
mov
mov
aaa
and
inc
jmp
cmp
and
loop
imul
cmp
ljmp
outsb
out
adc
in
rolb
push
cmp
dec
pop
inc
jmp
aas
hlt
sub
cmp
imul
mov
aas
ljmp
lcall
cmp
pop
adc
mov
cli
jae
inc
xor
sub
ss
mov
pushf
mov
cli
repz
stos
outsb
or
pop
inc
pop
push
pop
mov
jl
xchg
sbb
pusha
rcl
clc
pop
jnp
pop
movsl
stos
push
mov
fisttpll
ss
aad
stc
pusha
loop
cmp
adc
fsts
dec
sbb
lods
mov
push
mov
adc
mov
loop
fwait
jbe
or
pop
sbb
xlat
cmp
icebp
mov
push
jnp
insl
jne
xchg
icebp
jecxz
pop
stc
sub
sbb
dec
cs
fiadds
mov
jecxz
push
mov
orb
leave
mull
push
repnz
inc
ljmp
dec
lea
cmp
jmp
sub
sbb
sbb
xchg
lock
jo
jmp
movsb
es
dec
pop
and
cmp
mov
ljmp
push
or
pop
push
inc
popf
hlt
aas
cmp
cli
daa
out
test
adc
dec
pop
xor
push
ret
mov
push
imul
push
ss
pop
xlat
adc
sbb
imul
bound
or
mov
mov
ljmp
pop
pop
popa
cli
push
jbe
cmc
jbe
jmp
adc
add
cmc
add
xchg
ret
or
nop
and
xor
jmp
and
mov
cmp
jae
psubsw
pop
push
adc
fcmovu
cmp
and
adc
pop
xchg
mov
pop
sbb
xlat
jb
dec
and
xchg
inc
push
add
sahf
lcall
enter
dec
ficoms
jmp
dec
jmp
cmp
dec
sbb
scas
idiv
cmp
arpl
cli
test
inc
push
sub
mov
adc
std
mov
popf
mov
and
push
jecxz
sti
daa
cltd
es
stc
leave
jmp
cmp
gs
stos
or
and
push
lret
or
sbb
pop
mov
add
or
sub
mov
out
jmp
addr16
out
out
mov
inc
ljmp
lahf
jp
sbb
xchg
xor
push
loop
push
cmp
lret
jb
mov
mov
arpl
fistpl
pushf
hlt
cld
sbbb
add
mov
leave
ret
sub
jae
sub
push
mov
jbe
dec
clc
test
ljmp
leave
jmp
sbb
mov
inc
adc
lret
ds
imul
or
jmp
cmpsb
testb
or
push
push
sub
jb
jmp
xchg
xorb
ficompl
push
leave
fs
add
or
fbld
pop
mov
inc
std
aas
adc
mov
dec
data16
popa
xor
adc
mov
xor
push
repnz
sbb
arpl
jg
outsb
dec
jo
and
stos
push
mov
jb
lea
add
fwait
je
sub
push
test
push
inc
stos
and
in
add
popaw
pop
icebp
sub
leave
sub
test
or
sub
xor
inc
inc
or
or
lahf
int
mov
jg
sub
mov
enter
jbe
pop
lea
inc
fidivl
lods
jbe
pop
cltd
imul
leave
sti
sub
sub
ja
pusha
inc
mov
loop
sti
sub
jbe
mov
fsts
pop
pop
fstpt
shll
lahf
jmp
popa
pop
mov
add
fwait
lock
push
sub
add
lret
jnp
ljmp
or
and
and
pop
push
xchg
cmc
jns
push
or
mov
scas
movsl
fldcw
lds
mov
mov
xchg
fldenv
cmc
push
jae
add
sub
daa
add
mov
inc
rclb
mov
shll
sbb
lret
xchg
add
bound
arpl
and
or
hlt
adc
sub
xor
dec
cmpsb
push
fidivs
or
push
pop
sub
xor
loope
and
shl
sbb
aas
out
sub
imul
fisttpl
jae
mov
jns
imul
mov
out
stos
pop
ja
sahf
push
pop
sbb
inc
cmp
add
sbb
ret
imul
mov
fldenv
pushf
mov
inc
and
inc
or
push
xchg
cli
xchg
cmp
mov
testb
sub
rolb
mov
adc
lahf
mov
divb
in
call
jg
fs
pop
rcl
cmp
jmp
notb
inc
sub
cwtl
cmp
inc
push
call
jo
fmull
out
cmc
dec
sbb
sbb
xchg
or
mov
adc
stc
and
test
push
cmp
gs
push
out
sti
fwait
inc
daa
sub
stos
push
xchg
sub
xchg
jae
nop
bound
cmp
hlt
push
xor
dec
pop
bound
leave
test
sub
pop
int3
and
out
sbb
popa
pop
or
pop
mov
mov
test
or
add
aas
pop
aad
lcall
mov
mulb
insb
sbb
push
movsb
mov
fistpl
xor
lods
stos
sub
mov
or
ret
mov
push
inc
pop
repnz
or
repnz
and
push
fistl
cmp
sub
inc
jnp
cmp
dec
outsb
je
cltd
sbb
mov
push
popa
jno
inc
mov
stos
inc
add
loop
outsl
or
cmp
jns
cli
cmpps
ud0
cmp
cmp
sub
loope
add
cld
mov
fists
push
int3
stos
and
inc
dec
imul
push
loopne
inc
fcomp
negl
mov
pop
fdivrs
mov
inc
inc
insl
inc
enter
jo
jp
fabs
mov
cmp
in
iret
and
jecxz
test
cmp
sahf
and
mov
dec
mov
or
push
repnz
fsubr
and
jbe
stos
je
jbe
fwait
je
scas
mov
inc
sbb
and
imul
jg
orb
jb
xorb
jb
mov
mov
or
jp
xchg
sahf
lret
jb
mov
mov
les
sub
xchg
inc
fistl
stos
cmp
fs
ficomps
adc
fucomi
arpl
mov
test
rcr
iret
aad
fidivrl
push
dec
fs
jmp
pop
jecxz
push
cmp
cltd
xchg
popf
xor
or
xchg
xor
adc
push
pop
int
jb
cmpb
out
test
outsl
jb
add
insb
sub
cmp
adc
jmp
xor
repnz
adc
sbb
add
add
dec
sti
pop
fldpi
out
cmp
negl
mov
dec
mov
pop
or
jmp
jle
ret
inc
push
scas
jnp
sbb
cmp
stos
xchg
push
dec
dec
loop
xor
mov
inc
pop
push
push
ret
mul
inc
jnp
arpl
test
sbb
cmpsl
pop
mov
stos
dec
mov
xchg
jg
cld
test
jb
add
lret
sbb
ret
call
xchg
fdiv
xor
adcb
test
ret
in
adc
sti
inc
fnsave
outsl
cmp
popf
pop
dec
loopne
jno
aad
jae
mov
push
mov
lahf
test
push
add
push
pop
jo
test
aad
orb
es
push
lock
out
flds
mov
inc
cmpsb
stos
xor
ja
xor
jmp
jl
imul
stos
jnp
popf
mull
sub
jecxz
mov
das
imul
stc
imul
scas
jl
movsl
rol
and
mov
mov
push
xor
pop
mov
lods
push
and
cmpsb
movsl
test
stos
lahf
or
stos
leave
pop
cltd
adc
add
sub
push
jg
mov
mov
jae
lret
xor
aas
pop
jnp
cmp
ret
dec
mov
hlt
hlt
mov
sbb
pop
fildl
lods
fs
inc
fidivrs
push
iret
xlat
sbb
sarl
out
aas
xchg
sub
mov
cmpsl
jmp
lret
push
addb
sub
out
repz
pushl
sahf
fdivrp
imul
or
imul
movsb
mov
mov
insb
push
enter
mov
sbb
repnz
mov
push
repz
addr16
insl
fmull
or
jb
mov
jnp
or
fstpt
or
fsubl
call
inc
sub
pushw
mov
jmp
xor
stos
and
loop
outsl
sub
jb
dec
rcll
dec
push
inc
lods
xchg
lock
sar
lcall
inc
shrb
jp
sbb
pop
jp
lcall
push
jmp
iret
enter
repnz
fwait
test
mov
shll
mov
jb
movsb
pop
loopne
mov
cmp
jge
or
sbb
cmp
and
je
bound
cmp
std
mov
iret
lret
or
pop
and
inc
negb
jae
mov
call
sbb
lret
cmpsb
loop
pop
fcmovb
repz
fcmove
arpl
sbb
data16
repz
arpl
out
fistps
pop
jo
jae
or
arpl
jl
in
js
xor
lret
mov
in
pop
and
cmpsb
push
push
fiaddl
enter
sbb
je
xchg
or
and
pop
out
sub
xchg
push
bound
mulb
mov
hlt
jmp
dec
push
cld
sbb
out
fidivs
in
dec
sub
mov
in
inc
ficoml
and
pop
fldl
ja
enter
je
mov
sbb
jbe
fwait
insl
or
dec
inc
imul
sub
ficompl
cmp
push
daa
out
push
out
inc
std
push
sbb
repnz
fisttpll
das
outsb
pop
lcall
fisttpll
cmpsb
pop
ds
in
imul
daa
mov
aaa
cld
loop
orb
insl
enter
andl
sbb
mov
leave
inc
pushf
sbb
cmpsb
adc
pop
mov
dec
je
pusha
shlb
lods
jmp
sarb
cmp
pop
jo
xor
arpl
loopne
push
test
out
jmp
inc
je
push
les
loopne
or
scas
scas
addr16
sub
pop
cmpsb
cmpsl
mov
in
lds
lcall
jecxz
andl
loopne
bndldx
adc
inc
sub
outsl
jmp
jae
push
pop
adc
rcll
dec
mov
movsl
push
fwait
adc
insb
cmp
and
js
cmp
jb
pop
push
add
fistl
fstps
fldt
insl
or
push
jb
fists
adc
xchg
push
jecxz
jbe
jge
popa
cmpsb
jbe
xchg
stc
push
jb
sbb
jl
lahf
jb
sbb
jl
out
jle
or
rclb
sub
mov
test
push
push
and
dec
sub
into
mov
jecxz
rcll
imul
pop
sub
out
in
mov
adcb
aas
dec
je
rsm
mov
jecxz
scas
jb
outsb
push
mov
gs
fimull
cwtl
pop
fidivrs
bound
loop
and
or
xchg
push
pop
push
mov
jmp
adc
sti
cmp
pop
sbb
imul
imul
and
inc
mov
xchg
in
mov
fildl
mov
into
repnz
jg
in
dec
mov
inc
ret
inc
jp
arpl
cmp
inc
ret
inc
jle
inc
inc
shlb
shrb
mov
fs
gs
push
loop
and
int
inc
adc
fmuls
fldt
add
xchg
inc
mov
fnstsw
dec
sarl
xchg
dec
int3
enter
lea
and
push
sbb
arpl
mov
jnp
adc
cmp
clc
inc
insl
or
loopne
outsb
fwait
jg
xor
in
dec
adc
je
pop
jl
dec
ret
mov
jb
lret
push
or
fsubl
dec
ret
js
sbb
lret
imul
loopne
adc
in
imul
lcall
sbb
push
cmp
dec
push
lret
push
and
fistl
inc
mov
pop
push
sbb
icebp
sub
add
inc
push
mov
test
inc
mov
sbb
loope
push
cmp
sti
mov
je
xchg
call
in
and
mov
and
xchg
xchg
loop
loopne
adc
cmp
sub
mov
mov
jae,pt
adc
imul
or
hlt
inc
cli
xor
mov
aad
into
fsts
or
lcall
pop
xchg
cmp
ror
in
jae
test
push
arpl
and
sub
mov
inc
push
mov
idiv
popf
inc
jnp
bound
fiaddl
adc
fistps
aaa
call
test
addr16
call
mov
sbb
fwait
sahf
sub
xchg
pop
inc
ficomps
sbb
repz
lcall
push
hlt
sbb
cs
mov
cmpb
mov
xchg
pop
adc
testl
loope
sub
dec
adc
pushf
outsl
stc
sahf
fidivl
cmpsb
dec
fs
adc
sub
cmpsb
mov
or
lret
jno
stc
sbb
das
mov
mov
mov
mov
mov
and
mov
dec
in
push
adc
inc
popa
fwait
inc
add
jmp
sahf
or
enter
rcrb
outsb
pop
dec
sbb
mov
push
and
sbb
mov
imull
mov
movsl
fldcw
jmp
imul
int
mov
cmp
pushl
cltd
push
adc
sbb
sbb
call
imul
or
push
xchg
addb
repnz
jnp
mov
cmpsb
addb
pop
dec
adc
sti
and
outsl
shrb
test
push
jp
frstor
and
xchg
cltd
loop
pop
inc
mov
pop
cmpb
cmp
and
mov
cmp
mov
andb
stc
and
dec
jns
rcrb
mov
out
dec
fiaddl
sbb
and
mov
sub
sbb
ljmp
and
mov
je
xor
inc
stos
repz
sbb
je
sub
or
xor
pop
leave
push
repz
inc
movsb
push
push
sbb
insl
xchg
xor
lock
outsl
push
jmp
mov
jae
testb
mov
sub
ret
imul
mov
or
cmp
push
inc
jbe
std
jnp
and
dec
std
jp
jmp
ds
add
mov
and
mov
iret
dec
add
inc
mov
lret
jbe
adc
inc
ficoms
mov
lods
jmp
cmc
cli
lds
sbb
lods
xchg
mov
jae
hlt
jg
or
inc
int
imul
adc
rcr
inc
pop
xchg
inc
movsl
mov
cld
xlat
lock
add
ficoml
push
xor
and
cmp
std
dec
or
push
and
je
xchg
xchg
or
lcall
push
jb
ja
adc
push
idiv
lret
mov
neg
mov
add
jb
imul
in
and
dec
fidivrl
pop
add
inc
dec
loopne
or
jmp
xchg
mov
les
ss
sub
fidivs
imul
addr16
shl
popf
loop
loope
xchg
push
or
cli
pop
push
inc
sbb
add
and
xchg
push
out
mov
addr16
aam
subb
rclb
addr16
imulb
mov
adc
jne,pt
enter
push
ficomps
push
pop
cmc
mov
sub
inc
shr
ret
imul
inc
call
mov
mov
cmp
popf
loop
loope
imul
ljmp
in
xor
adc
pop
dec
adc
shl
loop
jmp
mov
in
sar
sbb
xor
imul
icebp
jae
imulb
push
pop
ja
mov
cmp
lock
lahf
jae
push
or
inc
inc
cmp
lahf
cmp
push
lret
jge
xlat
hlt
and
jo
xor
mov
js
fiadds
sti
jo
dec
leave
sarb
pop
aad
cmp
mov
add
or
outsb
adc
es
jbe
sub
sub
push
jnp
push
inc
dec
or
int
inc
add
and
test
sub
xlat
cld
pop
mov
sub
imul
es
lea
push
dec
daa
es
inc
sbb
mov
pop
inc
sub
addr16
ljmp
sbb
dec
js
mov
daa
pop
addb
xor
cmpb
cmp
mov
add
dec
cli
arpl
inc
mov
clc
add
or
rclb
rcll
push
out
das
adc
mulb
mov
mov
call
sub
loope
call
push
mov
or
scas
mov
scas
dec
repnz
sub
addr16
mov
jae
cmp
hlt
jg
jnp
and
cmp
pop
adc
ss
scas
jmp
mov
mov
pusha
pushf
jecxz
lcall
jns
jo
sti
and
jne
repnz
jno
ret
fisttpll
pop
cs
out
sbb
lods
mov
sbb
sti
xor
mov
inc
cmpsl
jl
fldln2
push
addl
adc
cmp
movsb
popa
or
xchg
pop
out
mov
dec
icebp
inc
xchg
cltd
fidivs
ljmp
cmp
lods
and
mov
dec
xchg
lret
xor
mov
pop
stos
sti
inc
jns
test
int3
push
stos
scas
xchg
sub
clc
dec
xor
mov
leave
cli
aam
std
cmpsb
push
sbb
inc
fxch
or
sbb
sti
les
imul
imul
xor
push
push
fcmovb
jb
xchg
inc
jb
stos
call
rep
cmp
mov
ljmp
jge
push
mov
dec
imul
jnp
cli
shrb
loop
imul
cmp
mov
mov
push
mov
movsl
adc
aad
add
pop
rorb
cmp
dec
js
pop
push
jmp
ds
cmp
and
loop
imul
push
inc
sub
sbb
sti
pop
mov
add
jne
pop
and
fnclex
dec
jmp
mov
arpl
aam
jmp
push
mov
outsl
je
sbb
pop
adc
adc
sbb
lea
das
cltd
jmp
ljmp
inc
outsl
push
add
adc
jne
xchg
cli
scas
xor
inc
and
leave
repz
icebp
adc
test
mov
sbb
jno
mov
lret
adc
mov
lret
insl
adc
outsb
mov
imul
jb
jne
add
bound
mov
mov
dec
adcl
sub
subb
movsl
mov
sbb
jbe
mov
xchg
fs
jmp
pop
ds
into
cmp
outsl
jle
ss
xor
pop
cmc
add
ljmp
pop
lret
repnz
jmp
cwtl
cmp
sbbb
imul
add
int3
test
jge
lea
push
lock
leave
imull
out
ss
aam
in
mov
push
cwtl
pop
push
mov
sub
dec
mov
popa
mov
andl
adcl
cmpsb
repz
jae
loope
test
jp
inc
loop
mov
add
lret
xchg
test
adc
and
sbb
dec
xlat
add
or
mov
insl
es
ljmp
rcll
pop
cmc
inc
scas
clc
pop
sub
bound
pop
fst
mov
sbbl
mov
sub
xlat
out
adcl
xchg
add
mov
or
mov
lea
push
es
enter
push
leave
in
inc
jle
xchg
jl
sub
jns
fistl
outsl
icebp
test
sbb
adc
sbb
rcrl
xchg
mov
mov
pushf
aaa
mov
dec
dec
xchg
cmpsl
and
je
add
sarl
adc
scas
imul
and
cmp
call
lcall
xchg
cld
repnz
pop
arpl
sub
test
popa
lods
adc
jno
and
cwtl
push
and
cmpsl
mov
je
xorb
sub
jecxz
sahf
in
sbb
imul
adc
mov
sub
xchg
data16
adc
lds
adc
add
jbe
movsl
pop
cmpsb
mulb
fcomip
les
sar
lea
je
bt
pushf
mov
add
push
lea
jmp
or
aaa
xor
pop
je
outsl
push
mov
xchg
outsl
push
data16
shll
cmp
mov
inc
es
ds
push
add
sub
jbe
cmc
aas
jns
addl
mov
adc
sbb
arpl
inc
pushf
inc
sub
cmp
fbld
sub
std
sub
movsl
icebp
movsl
insl
test
pushf
stc
fildll
clc
outsl
adc
fisubrs
add
adc
pushf
pusha
pushf
pushf
movl
pushf
push
mov
pushf
movl
mov
mov
push
lea
jmp
dec
cmc
mov
xor
jmp
pushf
movl
push
movl
pusha
lea
jmp
jmp
pusha
movb
lea
jb
push
pushf
pushl
pushl
pushl
ret
lods
push
jmp
call
push
mov
movb
lea
ja
push
sar
call
add
add
add
dec
outsl
popa
fs
imul
add
jmp
inc
aaa
inc
js
push
movsl
inc
cmp
xchg
movsb
push
sub
aam
push
bound
loope
stos
push
shll
mov
sub
sbb
dec
inc
scas
jmp
xchg
jne
mov
xor
adc
mov
out
cmp
cmp
in
rcrl
aam
add
aaa
or
xchg
and
and
fdivrs
stos
rcll
push
movsl
xor
sub
jl
push
fldenv
cli
popa
fisttps
dec
inc
pop
je
jnp
test
pushf
rcr
mov
cmp
pop
ss
mov
call
push
in
iret
stc
loope
add
loopne
cli
sbb
adc
xor
pop
aam
sbb
aam
jno
pop
mov
sub
mov
ds
fisubs
cmc
cmpsb
les
pop
push
fdivs
test
call
repnz
and
and
fisttps
jmp
out
std
aad
movsb
jp
cmp
push
clc
pop
arpl
add
aaa
loop
lcall
stos
cs
movsb
push
dec
dec
and
icebp
fbstp
xchg
popa
sti
stos
mov
lret
lcall
add
push
inc
mov
push
mov
loopne
inc
adc
ja
add
mov
push
popf
cmc
loop
dec
inc
pop
imul
add
repnz
inc
jnp
jl
ljmp
shrl
test
loop
xor
int3
fists
hlt
lret
aaa
mov
repnz
cmp
add
rorl
stos
out
pop
je
out
push
and
and
leave
popa
test
cmp
mov
push
out
repnz
xor
fs
je
pushf
add
pushf
pushf
bt
bt
cmp
call
cmp
inc
aaa
cmpb
dec
lahf
hlt
into
xchg
out
dec
mov
stos
inc
push
push
inc
adc
in
mov
dec
xchg
stos
xchg
or
outsb
pushf
cmpsb
xchg
cmc
adc
pushf
out
not
dec
jecxz
lock
fs
fistl
adc
or
pop
dec
inc
fldenv
repz
lea
je
test
clc
pusha
call
outsl
std
xor
inc
aaa
jl
xchg
dec
stos
nop
dec
mov
outsb
jbe
inc
inc
sub
pop
fadds
adc
call
stc
lahf
push
addr16
std
imul
out
push
jp
movsl
fisubs
adc
cmpsl
std
outsb
repnz
mov
pop
push
ret
into
and
dec
lea
xchg
push
repz
nop
fadds
fs
push
sar
mov
xor
push
cmp
mov
aaa
das
call
pop
loope
pop
jmp
or
inc
lcall
add
fsubrs
push
inc
aaa
jmp
outsl
dec
push
push
adc
mov
in
lcall
adc
testl
xchg
out
inc
mov
mov
imul
inc
cmovne
inc
pop
or
cmp
shll
aas
pop
andl
adc
jmp
data16
adc
insl
adc
addr16
inc
imul
daa
cmp
dec
fucomp
lret
push
lret
and
sub
ret
cmc
or
pushl
jmp
pusha
jmp
add
clc
cmc
test
jmp
mov
daa
subl
pop
inc
aaa
mov
out
jo
adc
dec
fdivr
fstl
pop
ja
pop
lcall
test
flds
cli
jecxz
cltd
data16
fs
lret
out
shlb
enter
jno
or
shll
cmp
jne
ret
mov
or
je
inc
mov
je
leave
inc
inc
mov
xor
jae
jb
xor
mov
xor
ljmp
inc
cmpsb
jb
mov
cli
xchg
mov
loop
mov
add
pop
add
add
lods
jge
hlt
and
icebp
mov
daa
push
adc
pushf
pushl
ret
pushl
lea
je
call
mov
push
lea
call
push
adc
pushf
lea
jae
pusha
push
push
lea
jne
pusha
movb
movw
call
test
add
movb
mov
bts
sub
mov
push
cmp
jmp
push
inc
lods
or
ret
cmp
lcall
pop
jnp
add
fabs
lret
insl
xchg
mov
sub
jnp
mull
call
add
pop
fadd
xchg
or
scas
jne
mov
xchg
mov
adc
xor
lcall
and
ja
shl
sub
add
sbb
mov
pushf
cmp
movb
pushf
mov
lea
jb
cmp
cmp
call
pushf
pushl
popl
pushf
push
pushf
pushf
pushl
ret
call
add
inc
gs
outsl
fs
gs
imul
add
jp
test
shl
mov
push
bt
pushf
clc
and
clc
clc
mov
movl
add
pusha
movb
movb
push
lea
jmp
mov
mov
lea
push
mov
jb
push
pushf
lods
jmp
not
push
dec
clc
jmp
call
pusha
stc
pushf
ror
movb
call
sub
setp
sub
add
and
call
jmp
fwait
adcl
aaa
fstps
ficoml
out
push
xor
out
sti
ret
dec
xor
adc
rcrb
lret
mov
and
sbb
popa
mov
add
xorb
pusha
insl
xchg
adc
mov
data16
inc
aaa
mov
xor
imul
divb
mov
mov
or
push
orb
cltd
mov
cwtl
xchg
mov
test
les
pop
jg
xchg
dec
sti
sbb
and
sub
fwait
mov
es
inc
mov
push
in
cmp
or
es
cmp
sahf
fmuls
pop
push
cltd
imul
push
loope
push
out
icebp
sub
push
xor
leave
out
sbb
iret
mov
xor
out
inc
xor
sub
push
jmp
pop
out
pcmpgtd
xlat
out
in
cmp
lcall
mov
stos
inc
icebp
mov
xor
rcrl
jl
mov
sub
cmc
gs
adc
jmp
inc
aaa
cmc
fcomp
jecxz
aam
mov
leave
lret
sub
shlb
mov
sbb
jg
pop
les
mov
faddl
ss
mov
cmpsb
push
es
shlb
inc
sub
cmc
mov
icebp
pushf
mov
cmp
scas
dec
stc
mov
mov
cmp
pushf
jmp
sbb
mov
jo
mov
fnstsw
jb
mov
aas
ljmp
movsl
add
mov
aaa
mulb
mov
lcall
cmp
popa
push
je
dec
or
aaa
and
popf
cmpsb
or
sub
loop
dec
dec
push
loope
inc
gs
mov
aaa
xor
pop
clc
push
cli
mov
gs
mov
movsb
mov
xchg
das
pop
sub
icebp
jno
push
mov
in
orb
aaa
pusha
inc
adc
cli
insl
movsb
ljmp
add
jns
call
or
ja
adcl
out
xchg
les
arpl
rcr
or
jmp
in
sub
js
mov
imul
or
ja
subl
int3
fbld
daa
adc
cwtl
repz
mov
cld
iret
push
or
or
and
aad
xor
mov
lods
xchg
jae
push
adc
enter
or
and
repz
inc
pop
push
sbb
sbb
sub
mov
les
add
cmp
into
aam
or
push
jle
aaa
pop
push
xor
sub
add
out
add
mov
fistps
pusha
push
dec
call
cmp
movw
lea
ja
dec
call
call
pusha
cmc
pushf
sub
pusha
pushf
pushf
lea
jne
jmp
sbb
aaa
sub
faddl
dec
cld
sbb
mov
movsl
scas
rolb
outsb
and
test
imul
xor
lahf
dec
lahf
cmp
cmp
fadd
repnz
int3
loop
sbb
leave
out
pop
pusha
dec
out
out
or
popa
in
add
imul
add
add
add
add
add
imul
in
xchg
add
dec
pop
add
imul
hlt
xchg
add
mov
add
insb
pop
dec
clc
test
xor
pushf
dec
cmc
call
inc
sbb
rol
xchg
lea
das
add
movzbw
mov
sub
mov
test
pusha
mov
adc
add
rol
mov
test
push
sub
call
pushf
pusha
mov
push
pushf
xchg
pushf
not
movl
lea
push
lea
pushl
pushf
call
shlb
inc
aaa
jb
stos
mov
sbbl
rclb
mov
inc
cmpsl
pop
loope
fmuls
repz
cmpsl
fwait
rolb
int3
or
inc
and
jmp
push
adc
mov
cmp
cmova
popa
fucomi
cmovle
pop
jge
scas
mov
sub
std
push
pop
or
jnp
mov
mov
push
and
lret
add
lret
sub
ret
fadds
and
hlt
imul
stc
mov
or
cwtl
pushl
lea
pusha
lea
jp
pushf
push
mov
lea
setbe
pushl
popl
not
push
not
push
lea
bswap
pushf
lahf
lea
pusha
movb
pusha
movl
pushf
pushf
jmp
ss
test
insl
adc
add
pop
scas
mov
mov
xor
or
cmp
dec
xchg
js
enter
xor
enter
popf
dec
repz
mov
ret
mov
test
xchg
mov
mov
or
enter
dec
repz
inc
incl
pushf
mov
mov
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
shlb
mov
jmp
call
mov
movb
dec
clc
pusha
rol
push
dec
stc
jmp
and
inc
in
fbstp
adc
test
jl
cmpsl
jg
push
sbb
iret
ret
andl
push
cmpb
lret
pop
xchg
das
sub
pop
rcl
inc
dec
cmp
jnp
xchg
sbb
inc
insl
ret
inc
mov
dec
cmp
xor
pushl
test
shr
mov
lea
je
pusha
adc
pushf
pusha
mov
push
lea
jmp
movl
pusha
call
movl
pusha
pushl
lea
jmp
rol
ror
setp
not
setno
pushf
dec
clc
rcr
rcr
bt
rol
setne
dec
push
xor
not
stos
jmp
stos
mov
adc
cmc
lea
sbb
xchg
flds
push
pop
test
push
or
jbe
outsb
adc
mov
cmp
popf
shrl
jae
das
leave
mov
or
cmp
xor
sub
push
in
push
aam
rolb
repnz
scas
dec
mov
out
mov
or
xchg
std
dec
push
cs
pusha
sub
mov
xchg
pop
dec
mov
or
outsb
sahf
sub
dec
add
add
adcl
sub
jmp
add
iret
sbb
sub
stc
bt
cmp
pushf
movb
lea
jae
push
lea
jmp
lea
jne
lea
jmp
push
movsbw
lea
lea
movzbw
mov
not
movzwl
pushf
call
jmp
int3
aam
adc
or
or
pop
sub
leave
test
or
pop
mov
adc
das
sub
and
enter
es
or
in
dec
out
lods
insb
rcr
ret
test
cmp
push
icebp
pop
cmp
xchg
adc
in
leave
popa
mov
adc
jne
gs
xor
fs
insb
add
xor
jmp
pushl
mov
pushf
pushl
ret
in
scas
scas
adc
rorb
fdivs
cmpl
test
pop
ds
repz
push
mov
push
bound
inc
int3
inc
cmpsb
pop
ss
add
push
mov
cmp
or
mov
pop
ds
jbe
icebp
push
cmp
sbb
jno
mov
cmp
in
scas
aas
push
adc
gs
mov
jp
cmp
mov
ret
sbb
cmp
sbb
push
jne
shll
test
iret
push
popf
data16
dec
imul
mov
adcb
je
movsb
lods
inc
pop
mov
arpl
enter
pop
loop
jae
pushf
lea
jne
jmp
je
sub
inc
aaa
adcb
push
adcb
push
lahf
mov
inc
imul
ja
sbb
mov
mov
pushf
pusha
adc
cmp
jmp
pop
outsb
test
push
adc
sbb
test
js
and
add
hlt
sub
sahf
loop
add
imul
aad
cltd
outsb
push
pop
movsb
js
push
js
sarb
pop
cmpsb
sbb
mov
sbb
xlat
mov
cltd
imul
push
aad
xlat
dec
mov
ret
xchg
hlt
aam
push
cs
adc
xor
daa
cltd
inc
mov
inc
cmp
cmp
push
stc
mov
sub
stc
inc
adc
and
imul
sub
daa
or
out
lds
mov
cmpsl
pop
aas
jns
ret
je
jle
cld
popa
jmp
or
icebp
in
testb
pop
xchg
jg
and
xchg
push
or
fstl
adc
sbb
mov
je
mov
jge
ljmp
xor
repz
test
jmp
pop
out
cwtl
sub
rcrb
inc
mov
dec
rcr
movsbw
shl
cmc
mov
test
test
bswap
call
cmp
pushf
lea
jne
call
pusha
call
mov
aaa
ret
les
cmp
mov
enter
das
mov
test
ss
mov
xchg
dec
inc
lcall
mov
sub
scas
mov
push
xor
loop
cmc
in
aad
jmp
sti
sbb
inc
jnp
ss
mov
inc
jge
cmp
push
das
stos
inc
and
adc
je
or
lret
xor
jmp
xchg
jmp
mov
mov
not
shr
xor
add
rcr
sub
and
call
test
jg
inc
aaa
hlt
mov
xchg
incb
hlt
push
daa
sbb
rol
cmpsb
push
ret
sub
dec
mov
lea
loop
repz
fisttps
outsb
mov
mov
jp
xchg
movsl
lock
in
push
lret
xchg
pop
mov
and
push
into
out
mov
cwtl
lea
jnp
xchg
call
adc
xor
mov
mov
test
popa
adc
popf
push
test
sub
pushf
push
movb
pushf
rep
bswap
mov
pusha
push
lea
jmp
mov
mov
pusha
mov
pushf
pushl
pushf
push
mov
not
pop
pushf
movl
pushl
ret
ljmp
jmp
jmp
sbb
fwait
imul
lods
xchg
mov
push
add
xchg
iret
mov
mov
stc
cmc
cmp
das
jne
dec
ja
mov
push
and
pop
test
into
and
popf
jle
sub
xchg
or
test
xor
adc
mov
sbb
pop
bound
or
pushl
not
call
pushl
push
pushl
popl
mov
mov
pushl
ret
test
bt
cmp
pushf
call
pushf
btr
movsbw
mov
mov
cmp
pushf
pusha
shl
call
sub
fsub
addr16
xchg
loopne
shr
dec
push
sub
leave
out
popa
mov
dec
or
or
std
iret
cwtl
mov
imul
mov
ljmp
xor
dec
cmpb
sti
jae
cli
xor
cmp
pushf
add
testb
add
in
movsb
xchg
rcl
mov
xchg
into
int
mov
ljmp
sbb
xchg
or
lock
push
into
shr
adc
add
xchg
cmp
iret
shlb
inc
and
sbb
dec
jne
pusha
pushf
jmp
pusha
call
lea
lea
pusha
movzwl
not
lea
bswap
bswap
lea
pusha
lea
mov
push
jmp
pushf
lea
jae
cmp
push
cmp
pushf
pushl
pusha
lea
jae
push
jmp
imul
sbb
dec
add
adc
mov
je
mov
push
data16
je
push
cmpsl
push
mov
stos
dec
pop
negl
scas
or
mov
test
push
js
pop
sbb
xlat
outsb
in
mov
mov
sub
test
push
pop
mov
xor
std
test
fsubs
and
js
lcall
adc
xchg
inc
orb
mov
add
fs
jb
pushf
push
push
mov
cmpb
push
pusha
jmp
xchg
bswap
movl
bswap
movsbw
lea
pushf
lea
jne
push
pushf
movl
pusha
mov
jmp
movb
jmp
aad
bsf
call
pushl
pushl
popl
pushf
pushl
ret
pusha
pusha
cmp
or
pushf
pushl
lea
je
stc
cmc
push
movb
cmp
lea
push
pushl
jmp
cmp
pushf
mov
call
pushf
lea
je
call
xchg
and
inc
aaa
mov
fldl
popf
cld
pop
inc
adc
jg
cmp
lds
dec
xor
pop
and
cmp
pop
outsl
adc
xor
cmp
das
sub
fisttpll
xchg
ret
mov
lea
jmp
ljmp
and
cmp
iret
out
rcr
pop
or
leave
and
jge
into
call
aas
les
xchg
int
or
add
shll
jns
pop
and
add
subl
dec
cltd
add
dec
xchg
sahf
out
shrb
xchg
inc
inc
mov
jmp
shll
xlat
insl
xchg
mov
fwait
jp
xchg
push
repnz
sbb
hlt
popf
dec
pop
imulb
loope
ret
sub
pop
add
cltd
and
or
outsl
mov
rorl
dec
popa
test
pop
test
mov
call
pushf
mov
pushf
push
pushl
ret
bswap
pushf
mov
pushf
pushl
ret
dec
clc
pushf
pushf
rol
pushf
call
cmp
mov
lea
je
cmp
bt
test
jmp
cmp
call
pushl
lea
jae
cmp
pushf
sub
pushl
lea
call
call
cmc
xchg
bswap
rol
xchg
mov
shl
rcl
clc
sub
shld
bt
aaa
push
pusha
or
bts
mov
shrd
aad
bt
clc
mov
bswap
aas
inc
mov
movzbl
bswap
mov
bt
test
call
call
not
inc
pushf
call
sbb
pop
sbb
push
add
cmp
jecxz
mov
and
mov
jae
cwtl
je,pn
pop
repnz
jle
sbb
addl
and
lds
cmp
or
adc
and
xor
mov
mov
sub
xor
or
sub
outsb
jne
roll
push
mov
nop
pop
jmp
insb
or
jno
popa
js
rcl
or
push
xor
jne
iret
cmp
inc
cltd
sbb
cmp
test
or
inc
fnstsw
lock
inc
sahf
inc
jo
aas
push
sbb
pop
xchg
fistpl
inc
or
fdivrs
jo
dec
jae
inc
jp
popa
jp
adc
popw
fcomi
xor
xor
imul
mov
pop
inc
mov
sarl
or
jb
hlt
jp,pn
mov
push
mov
inc
js
clc
in
pushf
popf
xlat
sahf
dec
push
aas
xor
sub
aaa
adcl
mov
add
push
add
ret
std
cltd
jge
cli
ss
ja
xchg
dec
xor
sub
jno
std
xchg
pop
in
call
cwtl
pop
frstor
bound
ljmp
push
sub
add
xchg
mov
sbb
scas
movsb
or
mov
in
or
cld
sbb
push
arpl
dec
js
test
jnp
mov
cld
ds
pop
add
push
lea
adc
jne
btc
bswap
bswap
xor
xchg
call
call
out
test
dec
sbb
inc
es
cmp
test
pop
call
cltd
cltd
sbb
pop
adcb
jne
fcompl
mov
lcall
push
aas
lahf
dec
mov
mov
fcomps
add
jo
pushf
jecxz
push
jno
push
xchg
std
jnp
xchg
xor
roll
std
addl
loope
or
mov
aad
and
dec
sub
pop
filds
mov
push
iret
mov
popf
js
outsl
call
mov
sub
mov
aaa
test
sbb
and
xor
jle
stos
lods
js
jge
adc
outsl
dec
in
outsb
out
into
mov
jnp
adc
cmp
pop
jecxz
iret
pop
xor
fimull
fidivrs
dec
push
je
sub
pusha
movl
pushf
movb
mov
lea
jmp
pushf
pushf
pushf
lea
jae
push
lea
jne
pushf
stos
push
push
pusha
pushl
lea
jmp
lea
jne
pusha
stos
push
lea
jmp
call
lea
jne
btc
mov
call
jmp
pop
adc
sbb
in
jns
mov
mov
xor
je
pop
adc
stc
pop
int3
dec
cwtl
adc
std
cmp
sbb
mov
fcmovnb
mov
cli
mov
ljmp
xchg
push
vmovapd
negl
mov
sub
cmp
scas
pop
xor
push
ss
bound
orb
lods
mov
sub
xchg
loope
imul
out
sbb
fs
mov
jae
ja
cwtl
cmp
shlb
mov
out
pop
add
jbe
lret
jo
shrd
rolb
push
lea
jl
pushf
dec
movb
pushf
ror
pushf
not
pusha
jmp
pusha
pushl
jmp
add
push
add
add
add
add
add
lock
pop
add
pop
pop
add
pop
pop
add
add
add
add
pop
pop
add
and
aad
push
orl
pusha
in
push
fucomip
jmp
lret
rcrb
in
dec
ret
mov
mov
jl
repz
cmp
lahf
ljmp
xlat
mov
pop
or
cmp
inc
lret
jmp
pop
sbbl
in
insl
adc
xchg
scas
cmp
cld
lock
mov
adc
orb
ja
pop
push
cmp
ds
jg
mov
mov
pop
add
mov
dec
les
fdivl
in
call
mov
xchg
roll
hlt
xor
xor
mov
sbb
arpl
add
nop
rol
add
mov
popa
mov
subb
sar
stos
outsb
hlt
xor
mov
xchg
fmuls
lods
cmp
push
cld
mov
jge
sbb
xor
int
lods
repnz
jbe
jle
ljmp
loope
xor
decb
std
sub
mov
out
cmp
cmp
movsl
sbb
in
sub
dec
scas
sahf
dec
pushf
enter
and
popl
mov
mov
das
jle
xor
xchg
xchg
ret
std
movsb
add
xor
es
call
pop
adc
out
test
dec
scas
insl
xlat
shll
test
jmp
testb
ficoms
test
push
insb
outsb
add
or
fwait
mov
xchg
mov
adc
lea
mov
xchg
filds
jb
mov
mov
jmp
in
scas
jl
push
push
cmc
push
xchg
jmp
mov
lock
mov
xchg
in
mov
fcomps
mov
lds
jge
ffree
lret
ss
mov
xor
mov
or
dec
outsb
fldt
out
bound
add
cmc
mov
or
pop
cmp
js
fldt
nop
cmp
add
mov
xchg
pop
push
out
lahf
mov
popa
add
ret
mov
mov
cwtl
negb
sub
test
ja
dec
leave
ljmp
int3
aam
xor
or
ret
xchg
idivb
es
xor
decb
cs
jno
mov
sbb
add
adc
mov
sahf
or
dec
fiadds
stc
in
in
pop
mov
and
jns
pushf
dec
cs
mov
inc
aad
mov
inc
mov
testb
cmp
mov
out
add
addr16
and
pop
jmp
jge
cld
xchg
push
or
stos
xor
aas
pop
lret
jmp
xor
mov
sub
pop
add
mov
fbld
jp
fs
shll
int3
xor
sbb
std
or
xchg
cmp
push
push
imul
jge
mov
push
xor
aas
xchg
ret
es
pop
iret
sub
imulb
sub
pop
mov
les
xchg
sbb
push
adc
add
sub
les
xor
mov
or
add
leave
in
les
arpl
ds
fcomps
adc
popa
int
aaa
pop
test
or
inc
adc
mov
stos
cmp
jle
cli
push
pop
push
xor
dec
mov
mov
mov
adc
cmp
mov
lods
hlt
inc
inc
lods
das
cmp
pop
loope
lcall
mov
ds
or
data16
arpl
scas
inc
cld
inc
mov
xchg
inc
lock
lea
lods
and
in
pop
imul
xchg
dec
push
lds
aaa
dec
and
das
mov
dec
daa
clc
outsl
lret
sub
out
sub
leave
push
shll
lahf
outsl
cmpsb
aad
mov
push
dec
push
mov
mov
mov
mov
lods
sub
and
es
xchg
jge
lods
sbb
push
xlat
add
rol
sbb
adc
mov
mov
lret
mov
clc
enter
int3
xor
xchg
icebp
mov
jnp
js
and
inc
gs
repnz
leave
adc
outsl
inc
out
adc
hlt
sti
clc
xchg
not
mov
fsts
loopne
lret
adc
nop
mov
fsts
xchg
fsub
jge
popa
mov
aad
incb
inc
insl
push
mov
jle
xor
cs
and
in
push
shufps
sub
jl
repz
cmp
xor
ljmp
cmp
popa
fmull
mov
push
cld
mov
inc
jmp
fimull
fdivrl
mov
mov
stos
push
push
fs
xchg
in
cmpsb
mov
andl
sub
mov
adc
pop
or
mov
inc
pop
pop
mov
mov
add
add
rol
mov
decl
pusha
pop
and
and
xchg
insl
rcl
dec
mov
jmp
mov
aad
into
dec
adc
shlb
movsl
je
jbe
cmp
test
lods
jp
dec
cmpsb
cwtl
sarb
xorl
pop
ret
cld
mov
adc
mov
fiadds
add
into
adc
ss
fs
in
pop
xchg
movsb
inc
xor
and
cmp
cmp
bound
and
pop
dec
inc
xchg
mov
pop
dec
xor
pop
movsl
fdivrp
pusha
jae
cmp
leave
mov
mov
dec
rcll
mov
lcall
cmp
test
push
sub
pushf
cmpsl
lret
int3
xchg
cmpsl
push
or
adc
push
mov
test
mov
sbb
fsts
mov
imul
mov
pop
sub
lret
ret
cmovae
dec
leave
jo
jp
mov
jecxz
mov
or
mov
hlt
ja
sub
push
out
jne
es
inc
dec
sti
or
imul
lahf
pop
fs
sti
aaa
clc
les
sub
cmc
cmp
mov
adc
das
lahf
and
cmp
aam
ja
out
xchg
fstl
xchg
int
inc
xchg
outsb
jg
cld
jp
mov
shlb
xchg
nop
jle
lea
xchg
bound
popa
sbb
xchg
push
fldl
jmp
pop
pusha
xor
adc
fsub
rcrl
mov
push
dec
mov
mov
mov
adc
mov
lcall
mov
or
aaa
xor
and
ljmp
mov
pop
scas
push
fmuls
sbbb
cmp
cltd
mov
xor
aas
pop
adc
jae
push
dec
add
and
or
push
and
dec
loop
and
lret
add
push
dec
test
adc
push
adc
sbb
push
in
jle
dec
adc
mov
push
fsubp
shrb
shl
movsl
into
test
jecxz
scas
xor
mov
dec
inc
inc
jb
scas
mov
sub
or
shrb
in
flds
stos
pusha
mov
das
out
or
dec
inc
xchg
inc
dec
mov
mov
or
mov
scas
enter
lock
pop
iret
cltd
int3
cmp
xchg
lea
cmpsb
mov
mov
adcb
lods
xchg
push
mov
sub
jg
push
mov
push
pop
aas
rep
xchg
or
fsub
cld
fucomip
pop
repnz
lret
pop
push
adc
dec
dec
std
sti
test
pusha
mov
pushf
ret
add
cmp
jp
jmp
aam
fdivrs
pop
dec
jnp
lds
fwait
lds
cld
paddsb
sub
push
mov
jl
jo
mov
fisubs
sub
mov
pop
mov
push
sub
and
fs
cs
imulb
jae
mov
cmp
ljmp
and
lret
aaa
lahf
jb
in
aad
inc
or
add
cmp
icebp
stos
pop
jno
lock
add
xchg
or
inc
jecxz
jp
cltd
out
mov
adc
and
sbb
es
cmp
xor
outsl
jl
loopne
repz
sub
lock
and
aad
test
mov
sbb
push
into
mov
inc
pop
je
xor
cwtl
stos
mov
subl
jl
repz
ud2
outsb
push
adc
lea
adc
sbb
das
jp
stc
inc
jo
mov
lcall
adc
ret
push
lea
aam
mov
add
rclb
insl
shl
sti
pop
adc
call
sbb
out
ja
repz
lea
cmp
loope
fcomi
jns
cmp
das
add
xchg
mov
sarl
popf
pop
inc
lret
stos
in
call
mov
cmp
pop
int3
fstl
aam
or
scas
sarb
pop
test
arpl
mov
xchg
jp
jp
andb
data16
dec
adc
out
mov
leave
insb
outsb
xor
adc
jl
xchg
mov
push
mov
push
inc
xor
stos
xchg
add
test
pusha
add
mov
adc
adc
sub
loopne
fldl
rcr
xor
jns
xchg
push
repnz
and
dec
jnp
lea
mov
movsb
mov
dec
inc
push
addr16
in
test
pop
lret
outsl
jl
jne
ret
ror
mov
mov
imull
repnz
adc
dec
inc
out
mov
sbb
mov
cmp
hlt
mov
add
xor
or
js
push
daa
xlat
in
mov
jle
push
pop
xchg
cmp
sbb
xchg
outsb
xor
sub
data16
sti
xchg
clc
mov
dec
lahf
loope
arpl
jno
add
es
roll
push
fadds
fsub
js
in
pop
pop
cwtl
pop
ss
fdivs
out
pop
cmp
sbbb
rep
adc
out
push
fildl
inc
ja
outsb
inc
not
popa
mov
adc
popa
test
bnd
ror
jbe
jle
and
push
pop
mov
stos
pop
dec
or
push
xchg
mov
cltd
cmpsb
push
mov
rcll
add
inc
adcb
xchg
mov
in
ret
push
sbb
inc
xor
pop
cmpsl
pop
loope
mov
scas
jle
mov
fnclex
test
inc
lods
in
mov
lea
and
mov
sub
test
dec
mov
loopne
inc
xor
leave
inc
mov
shl
push
imul
mov
bound
shlb
dec
pinsrw
shlb
addl
sub
dec
mov
pop
push
or
les
adc
icebp
xor
sbb
cmpsb
icebp
pop
lcall
xor
add
aaa
push
xchg
adc
insl
or
jmp
aaa
mov
jae
inc
ds
lahf
lahf
fs
rolb
cmp
jno
inc
xchg
inc
mov
and
cli
das
inc
jb
arpl
pop
xor
sbb
cmp
jno
xor
push
xchg
ja
mov
inc
add
pop
mov
push
insl
pushf
inc
and
les
fadd
add
sbb
sbbb
cmp
popa
scas
xchg
xor
mov
cmc
pusha
pushf
movl
call
push
lahf
push
sub
aaa
inc
jns
arpl
dec
scas
mov
cmp
and
aam
xchg
jp
mov
mov
fs
push
sahf
dec
dec
cmpsl
mov
pop
inc
fadd
mov
cmp
jnp
cmc
fld
mov
fcmovne
sbb
popa
push
subb
sbb
jo
lcall
mov
lea
jmp
imul
push
sub
mov
in
adc
pop
lea
jne
bound
xchg
mov
dec
cmpsb
adc
inc
sub
xrelease
xchg
cmp
rolb
outsb
push
pop
or
cli
mov
mov
lret
mov
int3
jne
sahf
out
mov
fnsave
iret
flds
xor
jae
es
jns
ret
mov
fs
jge
shr
pop
ds
faddl
je
jmp
pop
nop
pushf
adc
adc
mov
push
scas
add
call
adc
inc
adc
or
scas
bound
lea
ret
lods
lock
or
cmpsl
adc
mov
ficoms
xchg
aas
fwait
cmp
and
loope
test
mov
arpl
insb
jno
fs
loop
je
mov
jo
xchg
mov
jecxz
add
pop
addl
test
sbb
scas
leave
sub
cwtl
xchg
clc
les
aas
stos
ja
adc
stc
dec
stos
push
dec
in
dec
cmp
int3
dec
dec
aad
and
into
pop
fimuls
loopne
hlt
xchg
mov
pop
mov
ja
not
xor
stos
pushl
push
aam
out
data16
jge
sub
pop
cmp
xorb
xchg
dec
add
cmp
xlat
dec
or
mov
or
pop
xchg
adc
mov
mov
push
sbb
popa
rorb
and
push
arpl
ficoms
call
and
addl
dec
call
jmp
adc
mov
call
adc
add
inc
aaa
call
sti
and
fs
sub
int3
insb
lcall
popf
or
or
dec
fistl
int
lcall
sub
adc
insl
mov
jg
loop
adc
cmc
call
pusha
bt
cmp
add
movb
lea
jmp
push
dec
bt
pushf
clc
cmc
rol
mov
call
pushf
movw
xor
mov
pusha
push
lea
call
pushf
movb
pusha
pushf
lea
jae
inc
push
mov
jmp
call
add
adc
add
addl
pop
add
pop
add
mov
add
inc
pop
add
push
add
add
add
cld
cmp
das
inc
aaa
ljmp
push
mov
test
dec
pusha
jmp
sub
mov
scas
jae
xor
or
mov
cwtl
inc
mov
les
dec
ret
cwtl
xchg
in
mov
push
inc
cmp
fidivrs
shll
inc
add
rcrl
jnp
fnstenv
mov
jae
lret
aaa
pop
std
xor
and
add
fwait
incb
xchg
dec
enter
mov
xchg
push
cmpsb
cwtl
add
and
mov
negl
push
xchg
pop
test
aaa
sbb
xorb
aaa
lods
lcall
in
mov
mov
cmpb
xor
cli
lods
inc
sub
push
mov
enter
hlt
mov
xor
mov
pop
mov
cmpsb
inc
popa
inc
lret
popf
xchg
pop
sub
sbb
popa
or
popl
out
mov
ret
xor
test
out
pop
test
mov
jns
imul
sbb
sbb
mov
jmp
mov
stos
adc
sbb
cmp
xchg
into
cld
icebp
mov
aad
outsb
push
sub
xor
push
aas
fidivs
insl
aad
adc
xchg
out
fldcw
xchg
inc
sub
sbb
adc
insl
int
mov
xchg
nop
std
outsb
add
adc
cmpsb
push
popa
mov
repz
les
in
bound
shlb
jle
push
arpl
inc
nop
call
lea
cmpsb
adc
ja
cs
mov
inc
push
sub
xchg
aam
jmp
jmp
sbb
sbb
push
imul
adc
inc
cmp
jp
xor
sbb
cmp
mov
dec
sbb
dec
lea
movsl
inc
xor
xor
jmp
daa
movsl
push
pop
xor
test
xor
popf
sbb
clc
jbe
sub
pusha
les
scas
adc
out
ret
out
cwtl
and
mov
push
push
call
repnz
shll
mov
push
std
xchg
in
test
dec
sub
mov
imul
and
add
push
adc
push
pusha
adc
rorb
scas
pop
addr16
icebp
dec
and
xor
notl
fwait
mov
scas
in
pushf
loope
mov
icebp
jo
adc
lods
cmp
jbe
enter
mov
lds
xor
mov
pushf
jmp
inc
idivl
xor
xor
insl
push
dec
rorb
mov
mov
enter
sub
loopne
add
pushf
cmpsb
or
add
mov
mov
xchg
inc
sub
fstl
scas
mov
mov
ds
es
sbb
dec
imul
jo
test
ret
icebp
dec
adc
je
mov
cltd
int
and
lea
jecxz
xchg
push
loopne
mov
aaa
rorl
fiaddl
dec
pusha
jmp
scas
adc
enter
in
ljmp
jg
mov
ficoms
cmpsl
roll
push
arpl
xchg
sti
leave
jae
jns
lret
dec
loopne
mov
or
dec
std
es
xchg
mov
dec
jbe
imul
push
sbb
lret
adc
into
cmpsl
cmp
push
push
test
pushl
subl
icebp
sbb
sbb
insb
test
jns
pop
mov
das
scas
dec
lea
sbb
das
into
pop
lcall
xlat
ss
mov
sbb
ja
ret
fadds
cs
mov
or
sub
inc
mov
sbb
les
into
push
jbe
dec
add
mov
stos
inc
test
cmp
lcall
movsl
xor
arpl
and
out
lret
test
push
fisubs
dec
test
mov
fidivrl
aad
cltd
addr16
cmp
movsl
mov
cltd
jmp
dec
or
int3
sub
int3
shrl
push
jae
repz
in
pop
or
movl
jle
xchg
add
hlt
sbb
or
cli
mov
lds
test
fs
inc
scas
insl
bound
rclb
jns
jmp
insb
bnd
mov
pop
jmp
into
jo
push
dec
dec
push
sti
sub
pop
loop
sub
inc
aaa
pusha
imul
mov
dec
pusha
jmp
sbb
push
pop
leave
scas
jae
jle
adc
or
int
imul
jmp
insb
int3
dec
add
mov
dec
add
mov
jle
ja
add
gs
ljmp
nop
xchg
out
push
lahf
add
jne
sbb
outsl
add
mov
jae
sti
push
or
ret
fistps
mov
orb
or
icebp
ljmp
adc
notl
xchg
das
or
nop
test
enter
push
push
sbb
adc
sar
xchg
dec
jmp
movl
movb
movw
pushl
popl
push
mov
mov
pusha
pushl
ret
mov
aaa
xlat
shlb
add
jg
push
ja
shl
mov
popf
fmull
cmp
lods
inc
xor
jmp
imul
and
ret
pop
xchg
arpl
js
sub
mov
inc
test
push
leave
ret
insb
cmp
cmp
mov
adc
test
adc
jbe
inc
dec
cmp
jmp
test
cld
and
adc
mov
and
cmc
ss
push
fidivl
gs
push
adc
jbe
stos
in
push
aaa
cmp
or
rolb
pusha
call
in
stc
dec
ss
aaa
and
inc
jmp
xor
pushf
loope
xor
pop
jnp
pop
sub
inc
cmp
fwait
call
cltd
cmpl
add
outsb
pop
ja
cmp
lock
enterw
xchg
rcrl
and
push
and
adc
jl
lock
pop
pop
push
push
or
cmp
xchg
cmp
test
pop
lds
imul
nop
xor
inc
ds
lahf
inc
or
dec
loop
pushf
test
jg
daa
push
lcall
push
add
jns
rorl
sub
push
scas
loop
jmp
in
inc
aaa
dec
mov
sub
jmp
bound
push
inc
ljmp
fsubrs
popa
or
push
mov
fstps
cmp
cmp
movsb
cmp
clc
mov
roll
dec
mov
pop
stc
sub
enter
repnz
push
inc
int
inc
aaa
cmpsb
fiadds
mov
mov
inc
sub
push
cmp
mov
jl
jle
cmp
mov
mov
jmp
xchg
mov
in
pushf
jns
mov
xchg
mov
or
das
mov
outsl
push
popf
sub
push
jge
pop
dec
fnsave
or
jl
dec
sbb
sbb
inc
jns
aam
cmp
ret
adcl
popf
dec
push
mov
cli
sbb
aas
and
test
lcall
and
fs
jmp
adc
aaa
inc
aaa
fisttps
aad
pushf
fmull
push
dec
or
jmp
add
inc
adc
scas
jae
pop
dec
lea
mov
ss
imul
fsubl
sub
sub
cmc
jmp
out
mov
inc
aaa
aas
shlb
out
nop
in
adcl
pop
add
sub
cmpsl
adc
or
xchg
gs
ror
mov
scas
xor
push
leave
inc
push
xor
das
sbb
xchg
xor
or
ret
mov
into
cmpsl
mov
ficomps
test
lock
rorb
or
or
hlt
roll
jecxz
xor
jp
sarb
or
xchg
into
sub
inc
xchg
pop
shrl
sarb
xchg
inc
cmpsl
jno
pop
adc
fucomip
mov
outsb
rorb
shrl
addr16
inc
aaa
aas
outsl
popf
inc
jne
in
cmc
jmp
pop
jnp
inc
shrb
movsb
dec
mov
xchg
inc
shlb
or
ret
dec
xlat
dec
push
frstor
sub
scas
lret
xchg
xchg
cmp
mov
adc
ret
pop
outsb
mov
jg
cmp
fsts
push
and
adc
in
ret
jl
jbe
inc
aaa
mov
mov
ret
loopne
loop
lds
xchg
jbe
cwtl
add
mov
push
or
dec
pushf
bound
adc
sbb
es
cli
mull
jge
pop
fs
mov
cmpsl
cmp
push
mov
sub
in
hlt
cmp
cmp
imul
in
xchg
fdivr
in
les
scas
sarb
jb
xchg
mov
cmp
mov
mov
loop
dec
fisubrl
rorb
inc
sub
xchg
fdivl
test
pop
mov
inc
incl
mov
mov
iret
push
imul
outsb
pusha
fcomp
add
inc
aam
and
mov
jnp
mov
test
call
movb
movl
push
pushf
movl
pushl
lea
jmp
pushf
pushl
lea
je
pushf
lea
jmp
icebp
mov
bound
repnz
jns
adc
pop
sar
mov
xchg
enter
dec
sbb
out
jg
ret
mov
into
mov
or
ret
nop
inc
jnp
sti
sbb
lds
lods
push
imull
or
out
push
stos
inc
or
lahf
mov
pop
and
mov
lea
call
push
mov
pusha
lea
jmp
cmp
push
lea
je
jmp
sub
cmp
jne
das
sub
in
cld
pop
mov
add
rolb
es
xchg
pop
and
cli
dec
icebp
test
stc
xor
sbb
and
test
cli
test
mov
out
pushf
xchg
mov
repnz
push
test
scas
dec
push
les
push
cmp
out
cld
pop
mov
imul
rclb
jo
sbb
xchg
mov
add
scas
adc
mov
loop
add
rol
call
movl
call
cmp
sub
push
pusha
call
pusha
push
pushl
mov
lea
ja
pusha
imul
pushf
bt
stc
pusha
add
mov
movb
lea
jmp
adc
cmp
sbb
in
es
and
lret
cmpsl
mov
inc
push
test
jns
test
jo
call
cmpsl
outsb
xchg
xchg
popf
fmull
mov
scas
jmp
mov
negl
fidivl
add
dec
pop
cs
mov
jns
lcall
cmpsl
jno
pop
mov
dec
push
push
and
add
mov
push
out
dec
jecxz
push
dec
sbbl
sti
inc
loope
sbb
inc
aaa
pop
pop
outsl
xorb
pop
out
test
jmp
psubsw
jbe
inc
fwait
stc
jl
js
repz
mov
fs
xchg
roll
jmp
daa
xchg
filds
pop
pop
negl
test
fcmove
push
mov
jno
mov
ret
jge
mov
sub
push
cmc
jl
incb
mov
inc
lcall
daa
dec
lahf
mov
mov
ret
pop
cmp
or
outsb
jmp
push
jae
shl
scas
pusha
lea
jne
rcl
mov
clc
pusha
sub
pushf
rol
btr
sar
lea
cmc
cmp
cmp
sub
jmp
pushf
push
movb
or
jmp
lea
lea
mov
pusha
lea
call
push
pushf
pusha
movb
lea
jne
jb
mov
not
lahf
mov
pushf
lea
jmp
cmp
cmp
or
pushf
jmp
push
in
cmp
push
ficompl
and
lods
push
cld
mov
scas
jae
popa
pop
sub
les
loope
or
loop
xor
outsb
push
cmp
sbb
mov
dec
xchg
dec
xchg
cmp
sbb
pop
lods
jmp
mov
ffree
shrl
std
test
adc
testl
sub
mov
xchg
decl
and
orb
in
adc
imul
incb
sarb
subb
testb
fsubs
ds
aaa
mov
add
test
arpl
push
pusha
jmp
sub
shrl
aaa
decb
movsl
cmp
call
pop
pop
mov
mov
push
cs
adc
fmuls
outsb
adc
pop
rorb
jle
inc
pop
pop
push
pop
mov
enter
push
shrl
pop
imul
imul
std
icebp
push
jns
fadds
imul
ffree
cltd
fistpll
std
out
mov
in
mov
lea
je
bt
jmp
pushf
pushl
popl
pushf
mov
mov
pushl
ret
outsl
jne
ds
aaa
xor
push
cmp
jl
jno
sbb
add
popf
mull
outsb
adc
cltd
pop
and
pop
cmc
add
pop
in
pop
dec
pop
cmc
std
loope
and
and
inc
les
fdivrl
fmull
ret
sti
mov
or
stos
mov
frstor
lea
mov
sbb
scas
push
fcmovne
adc
xchg
or
bt
lea
jge
ror
push
pushf
pusha
jmp
mov
push
aas
inc
aaa
fbld
mov
mov
addr16
jo
loope
and
pop
mov
les
lea
add
push
add
fcompl
mov
subb
pop
mov
leave
and
mov
loopne
fisttpll
sbb
xchg
fsts
or
imul
add
mov
add
xorl
lea
shll
mov
xor
add
mov
or
insl
sbb
int3
add
jg
jg
adc
push
aas
stos
shrb
lea
bound
sub
pop
shlb
je
bound
push
push
gs
ja
add
mov
sahf
jg
dec
mov
out
inc
xor
mov
inc
add
popa
dec
ja
or
lret
leave
inc
mov
cmp
push
cmp
add
divl
test
mov
mov
add
cltd
pusha
push
fxch
xchg
ds
and
in
leave
mov
push
add
inc
dec
mov
or
imul
push
mov
pushf
push
lea
jmp
push
lea
je
pushf
cmp
sub
clc
cmp
call
dec
pushl
test
cmc
cmp
movzbw
movsbl
lea
lahf
pop
movzbl
pushf
mov
movl
pushf
pushf
lea
ja
pusha
lea
jb
push
cmpb
push
lea
jne
shr
mov
clc
add
push
movzwl
add
bsr
movzbw
mov
test
pushf
pushf
pushf
add
pusha
pushf
stc
mov
cmc
test
mov
movb
jmp
push
and
inc
inc
aaa
or
xchg
and
pop
pusha
jmp
xchg
push
pop
scas
jae
jge
add
sbb
adc
outsl
inc
mov
pop
xor
dec
mov
cli
dec
add
ds
aas
test
ljmp
aad
out
jecxz
outsl
adc
push
add
lret
xlat
inc
ret
inc
adc
cmc
lods
in
arpl
popa
fs
xchg
movsl
jge
movsb
jns
std
enter
test
enter
adc
aaa
sub
push
outsl
rorl
lea
pop
icebp
push
pushf
aaa
jmp
ss
inc
inc
aaa
push
call
jl
and
shrb
xor
or
push
pop
addr16
jae
sbb
jno
xchg
loopne
icebp
aam
fisubrl
js
inc
mov
jp
lea
push
fnsave
sub
mov
hlt
cltd
data16
test
lahf
mov
lods
or
in
es
in
xchg
jecxz
xchg
push
pop
add
icebp
dec
fidivrs
ret
shlb
add
sti
pop
xchg
mov
jl
cmc
loop
jp
arpl
and
jmp
cmp
dec
inc
inc
aaa
and
pop
push
and
and
mov
psrlw
rcr
in
or
jge
jle
and
ror
arpl
and
and
pusha
popf
xor
mov
pop
movsb
xchg
adc
insb
jmp
pushf
lods
call
pushf
pusha
push
movl
call
cmp
add
lea
cmc
push
or
jmp
lea
js
pusha
movl
pushf
pusha
pushf
lea
jmp
jns
pusha
pusha
movl
movw
call
cld
dec
roll
out
out
dec
cmp
push
pop
mov
xor
andl
inc
ss
mov
dec
repz
inc
dec
cld
pop
sbb
adc
aad
nop
pushw
mov
mov
orl
dec
dec
jmp
xor
mov
sbb
mov
sbb
sub
and
fldl
lea
adc
pop
cmp
aaa
pusha
sbb
pop
popa
mov
dec
aaa
xchg
pop
popa
shl
adc
loopne
les
push
or
jl
fsub
popa
sbb
loopne
call
aad
add
add
mov
cmc
sub
cld
data16
stos
adc
aaa
cmp
shr
mov
mov
stc
aaa
add
in
mov
mov
cmp
adc
push
in
shlb
stos
pop
xor
shll
in
test
xorb
aad
aam
lret
rcr
lods
sti
ljmp
xchg
jp
dec
add
push
outsl
repnz
jbe
mov
fsubl
aas
sbb
jecxz
push
and
mov
pop
aas
xor
add
jb
test
fdivp
lock
or
outsb
jo
add
cld
add
dec
jle
mov
movsl
xor
mov
ds
dec
inc
cmovl
out
or
pop
das
adc
adc
gs
cmpsb
mov
popa
xor
jge
push
bound
push
push
push
das
mov
push
xor
movq
cld
push
movsl
stos
push
jg
jmp
push
sbb
shl
sahf
sbb
andb
xchg
adc
je
push
and
mov
aam
test
fsts
sub
mov
loope
pop
push
cmpsb
push
mov
pop
sub
mov
sarl
ret
pop
int
cltd
aas
fildll
inc
cwtl
xor
loopne
call
mov
lea
pusha
call
jmp
fabs
dec
inc
inc
aaa
and
or
pop
sbb
popf
mov
out
cmpsl
dec
scas
shlb
rorb
loopne
inc
cmp
dec
sub
sbb
or
ffree
xchg
or
sub
cmpsl
inc
lret
push
inc
sahf
lods
call
jbe
lahf
inc
inc
aaa
rcrl
mov
sub
and
pop
dec
xchg
push
mov
popf
insl
mov
cmp
aam
aad
push
mov
cmpsl
stc
jnp
cmp
xor
dec
call
sti
pop
jo
sub
idivl
out
rcrb
sahf
xchg
or
sbb
add
sub
mov
sbb
mov
daa
unpckhps
dec
dec
cmp
lret
mov
mov
jb
and
sub
sbb
dec
rol
push
add
js
and
cmp
mov
call
stos
xor
bnd
cmc
ficompl
sub
push
jne
mov
add
push
xchg
sarb
mov
xchg
call
dec
dec
mov
aad
push
stos
jmp
or
dec
lock
sbb
jmp
mov
movw
lea
je
bt
movsbw
jmp
aam
faddl
aaa
push
scas
mov
cli
in
adc
push
xchg
rcrb
jae
bound
adc
mov
pop
jb
popa
pop
mov
or
mov
cmp
ja
out
outsl
lret
jg
xchg
mov
jne
push
data16
out
ret
movb
dec
push
push
mov
scas
mov
push
add
movl
push
xchg
cmpsb
jae
mov
leave
aas
mov
sub
or
pop
add
sarl
sub
adc
mov
ss
cmpsb
push
sti
mov
fyl2x
in
push
xchg
fidivs
arpl
jbe
mov
xchg
cmp
cmpsl
mov
addr16
mov
addr16
scas
bound
aaa
leave
mov
sub
push
push
les
stos
xor
orb
je
cmp
mov
jle
lds
inc
sub
addr16
je
inc
sub
cmp
mov
stc
or
lods
add
xor
sub
sbb
adc
inc
sbb
cld
sub
cld
mov
push
lock
mov
sub
push
add
push
push
repnz
push
add
jnp
mov
and
aad
popl
and
adc
inc
test
outsb
add
aaa
cmpsb
enter
addr16
dec
adc
inc
adc
or
mov
dec
inc
aaa
sub
push
xor
call
mov
inc
xor
dec
fistl
mov
and
mov
pop
enter
cmc
pop
mov
jg
sub
test
clc
nop
or
cmp
sbb
push
inc
jnp
adc
pushf
pop
arpl
addr16
mov
dec
xor
std
repnz
and
sbb
xchg
push
or
xor
scas
cmp
sbb
xchg
out
jbe
jae
lret
xchg
pop
xlat
cltd
xchg
ss
xlat
daa
fdivrl
mov
in
stos
insl
jno
loope
pop
pop
lds
add
mov
adc
lcall
pop
mov
mov
sbb
xchg
jo
mov
aaa
jle
cmp
fimull
mov
ljmp
aam
sahf
mov
mov
sub
fdivrl
shrl
add
ds
add
std
in
out
and
daa
mov
xchg
mov
push
int3
jecxz
mov
xchg
or
inc
cltd
decl
sbb
sub
rorb
xor
lret
jp
imul
jge
std
popa
cli
aas
insl
cli
insl
test
data16
in
add
xchg
mov
movsl
lret
xor
pushf
call
mov
call
pusha
movl
lea
jne
push
movl
pusha
lea
jmp
jmp
movl
push
movb
movw
lea
jmp
mov
aaa
out
imul
enter
loop
dec
stc
outsb
push
pop
scas
mov
filds
xor
popf
mov
cmp
mov
lahf
dec
imul
pop
insl
pop
adc
lods
sti
out
adc
push
and
ret
and
popa
cmp
bnd
mov
inc
inc
inc
push
push
sub
push
push
push
pop
pop
inc
dec
push
inc
inc
pop
pop
pop
push
pop
push
push
push
inc
inc
push
sub
pop
inc
pop
push
push
push
push
push
inc
push
push
pop
push
sub
pop
pop
push
pop
pop
push
push
sub
push
pop
pop
push
push
push
pop
pop
pop
push
push
pop
push
inc
push
inc
dec
push
pop
inc
add
dec
gs
popa
addr16
outsl
js
add
lods
decl
mov
mov
dec
setnp
mov
jmp
lea
lea
jmp
pushl
rol
jmp
clc
cmc
pushf
or
call
pusha
bt
cmp
sub
pushl
clc
cmc
cmp
jmp
adc
add
addl
pop
add
pop
add
mov
add
inc
pop
add
push
add
add
add
ror
incl
int3
call
aam
cmp
mov
test
shl
jmp
inc
lea
setne
mov
push
inc
add
shl
or
xchg
rol
or
or
mov
or
add
inc
dec
mov
clc
push
ror
btc
adc
mov
jmp
push
or
jmp
call
dec
clc
clc
clc
stc
rol
jmp
jnp
push
pusha
call
call
mov
jmp
jmp
pushf
movl
movw
call
imul
gs
xor
cs
insb
add
pop
stos
cmc
pushl
dec
inc
aaa
imul
sbbl
popa
pusha
fdivrs
pusha
add
xchg
filds
scas
test
cs
and
daa
fsubr
mov
fstpl
scas
xor
sub
fbstp
shll
add
inc
adc
xor
ss
xor
and
aaa
les
inc
inc
or
jmp
movl
movb
movb
lea
jmp
not
mov
push
mov
movsbw
movsbw
pushl
pushf
mov
movzbw
movsbw
pusha
pushf
lea
push
movl
jmp
lret
pop
mov
inc
aaa
clc
xor
in
push
jno
mov
sahf
push
pop
dec
mov
add
call
lds
and
test
gs
sarl
push
outsl
mov
mov
int
rorb
pop
and
sbb
inc
jge
mov
jl
inc
call
rcrb
xchg
jno
daa
scas
and
mov
leave
mov
inc
pop
jge
and
pop
test
loope
push
das
mov
decl
test
clc
jmp
jmp
xor
dec
inc
aaa
imul
mov
aam
jp
xor
inc
mov
pop
inc
in
push
lods
stc
aaa
jo
and
inc
lret
xchg
cld
xchg
lcall
push
sbb
fimull
out
test
lahf
xchg
outsb
xor
push
adc
scas
daa
enter
adcl
daa
mov
mov
add
jl
adc
daa
mov
pushf
mov
std
jl
mov
xor
jns
filds
xor
fadds
shrl
cmp
lea
je
bt
cmp
call
pusha
neg
cmp
pushf
call
movl
jmp
cmc
cmp
call
test
pusha
cmc
pushl
popl
test
push
pushf
cmp
jmp
call
jmp
frstor
dec
inc
aaa
mov
lds
aam
pop
jecxz
xchg
sbb
pop
adc
test
aam
jnp
sti
fs
xchg
je
lahf
imul
xchg
pop
je
mov
outsb
pop
test
mov
xchg
loop
and
dec
cwtl
jns
mov
orb
cmp
cwtl
fwait
aas
jo
fmull
loope
rclb
mov
inc
clc
or
inc
jo
lret
inc
sbb
xchg
mov
cmpsb
adc
add
xor
pusha
call
push
call
cli
inc
orl
lods
pop
fwait
sub
fs
xchg
ds
es
cmc
add
push
addb
mov
pop
push
rclb
popf
fisttpl
push
push
pop
movsb
addb
or
js
cmp
lock
lds
cld
xchg
mov
andb
mov
mov
nop
push
lock
aam
out
into
or
int
aad
adc
repnz
push
mov
add
fxtract
in
mov
dec
mov
lret
push
or
sar
popa
dec
pop
and
xchg
or
pop
adc
adc
cmc
dec
lods
push
mov
ret
push
sahf
mov
mov
and
popw
or
mov
inc
or
adc
push
arpl
iret
fsub
pushf
jmp
clc
jmp
dec
add
movl
mull
rorl
rclb
add
out
jecxz
sldt
bt
pushf
call
lea
jne
setnp
setne
not
pushfw
pushf
dec
setnp
mov
pushf
push
dec
test
xor
call
xor
aaa
jmp
mov
mov
ss
mov
cmp
mov
mov
cmp
cld
mov
mov
inc
sbb
js
dec
dec
cmpsb
lahf
mov
gs
lds
or
aas
inc
scas
aad
popa
jae
jnp
pop
xchg
pop
or
inc
xor
push
jo
clc
clc
xor
pushf
mov
mov
pushf
lea
call
jmp
pusha
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
mov
lea
jae
pusha
add
lea
jge
mov
pusha
pusha
lea
jmp
movsl
sti
xor
inc
aaa
jp
in
push
jp
mull
fs
dec
sahf
add
out
push
pushf
mov
inc
push
lahf
cmp
cmpsb
js
mov
lret
mov
adc
lahf
dec
hlt
out
xchg
inc
or
mov
mov
out
cltd
fwait
aaa
mov
dec
call
stos
push
inc
aaa
add
cwtl
inc
jno
ret
mov
cli
jnp
add
inc
inc
xchg
sti
sbb
rcrb
cmp
or
idivl
call
inc
sti
adc
shlb
movsl
jo,pt
mov
and
adc
test
gs
dec
mov
adc
or
call
adc
jmp
call
mov
aaa
fisubs
stos
cmp
sbb
aas
mov
or
dec
push
add
clc
push
repnz
dec
dec
pop
adc
xorl
and
lods
popa
or
stos
sub
pop
dec
xlat
cltd
inc
outsb
dec
fcoml
inc
jle
inc
xor
pop
lds
push
movsl
xor
pop
loopne
std
pop
xchg
mov
mov
shlb
stc
roll
aam
pop
xchg
mov
addr16
fstl
stc
in
sub
loopne
aad
xor
push
leave
je
adc
xor
call
add
sbb
push
cmp
loop
or
jno
imul
push
mov
sbb
enter
sub
stos
or
pop
adc
repz
inc
lea
mov
jae
lret
lahf
or
add
mov
xor
push
jmp
jns
add
mov
loop
sarl
mov
lock
clc
xabort
fs
mov
repz
outsl
push
faddl
loope
hlt
inc
leave
adc
arpl
movsb
int3
arpl
rcrl
pop
sti
pop
and
xchg
imul
mov
jnp
aad
lods
ja
cli
dec
imul
lock
fisttpl
add
mov
mov
inc
pop
ljmp
cmpsb
xor
mov
pushf
lea
jg
pusha
mov
pusha
pushl
ret
stos
mov
jmp
jmp
xor
pop
push
inc
aaa
pop
outsl
sbb
mov
push
popw
addr16
mov
lahf
ss
lret
in
mov
push
jge
mov
mov
out
out
movsl
rcll
xchg
dec
ret
sub
pop
dec
in
fmuls
dec
dec
not
dec
lods
pop
test
cmpsl
xor
cmpsb
push
leave
sarb
push
xor
push
sahf
push
inc
aaa
rcrb
test
cmpsb
push
mov
insl
sub
arpl
ret
sub
sub
jno
dec
data16
mov
in
jbe
mov
scas
xchg
leave
mov
pop
dec
je
add
pop
lcall
jb
and
xchg
ret
lods
cmp
rorb
xchg
mov
aam
scas
cmpl
iret
stos
faddp
mov
popa
test
or
icebp
lock
sub
sahf
mov
loop
dec
loopne
pop
push
push
mov
push
in
and
push
inc
aaa
es
mov
loope
frstor
out
loope
mov
push
aaa
or
mov
mov
xchg
out
sub
mov
inc
fstps
mov
ss
dec
push
pusha
js
jl
mov
push
out
pop
imul
sbb
ds
mov
adc
fwait
adc
arpl
jbe
cs
out
add
ss
xchg
test
add
cmpl
inc
rcrb
mov
cmp
xchg
sbb
ss
pop
inc
inc
or
fldenv
mov
xor
push
cli
mov
adc
gs
and
call
or
jle
and
xor
out
pop
push
jmp
test
pop
mov
pop
xchg
rorl
mov
add
push
sub
ljmp
nop
pushf
push
lahf
in
imul
push
cmp
repnz
fcoms
pusha
or
sub
cs
and
xchg
jg
mov
into
xchg
loop
outsl
aaa
cmp
call
or
testl
xchg
pop
int
iret
xchg
adc
sub
cmp
shr
shlb
jge
pop
lret
iret
mov
add
adc
cld
cmp
aas
aaa
and
cld
sarb
cwtl
movsl
fnsave
pop
movaps
out
push
mov
jne
mov
jnp
push
jmp
rcl
into
add
push
xor
and
jle
hlt
inc
cmp
dec
clc
test
test
xor
jmp
call
movb
adc
pushf
pushf
lea
call
pusha
call
lea
jae
pusha
mov
cmp
pushf
xor
pushf
lea
call
call
shr
jmp
mov
aaa
lret
jecxz
sahf
xchg
and
in
adc
xchg
ljmp
mov
push
add
shr
es
lods
jge
insl
rorb
sub
stos
add
imul
lcall
in
sbb
sbb
push
stc
ds
jle
ret
xchg
pop
rclb
mov
jae
mov
leave
inc
cmp
adc
gs
xchg
jbe
cmp
jne
cmp
mov
add
movl
pusha
lea
jmp
call
push
pusha
push
inc
aaa
mov
ljmp
bound
inc
pop
insl
idiv
inc
push
xchg
jnp
jge
xchg
push
mov
test
lds
pop
or
pop
outsb
add
push
inc
jg
popa
shrb
test
stc
adc
addr16
add
and
leave
sbb
aaa
push
pushw
push
ljmp
pop
mov
pop
pushf
pushf
pushf
pushl
ret
lea
call
push
lea
jae
call
faddl
push
inc
aaa
xchg
push
mov
inc
pushl
push
out
xchg
add
sub
mov
std
aam
in
adc
sbb
and
fcoms
fbstp
cmp
in
add
inc
mov
int3
sarb
jl
xchg
inc
pop
inc
aaa
push
cwtl
and
lcall
and
dec
jge
xor
xchg
adc
bound
xchg
js
sbb
mov
mov
and
inc
outsb
out
lcall
add
idiv
xor
and
or
and
pop
inc
aaa
jbe
repnz
sub
outsl
push
lock
cltd
push
rol
icebp
dec
leave
xchg
inc
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
adc
lret
or
aaa
jecxz
jl
mov
jmp
movsl
mov
fs
xchg
mov
jno
js
lahf
cmp
mov
lret
orl
adc
mov
sub
mov
out
xchg
mov
or
lock
out
jle
shll
cmp
pop
xor
stos
pop
insl
and
mov
fiaddl
mov
daa
into
sarb
cltd
insb
arpl
dec
pop
inc
aaa
and
daa
cmp
lret
pop
adc
cmp
movsl
call
call
movsl
faddl
enter
leave
ljmp
movsl
shlb
xchg
cmp
pop
mov
lahf
dec
xchg
mov
sub
fidivrl
pop
mov
in
add
cmp
adc
jno
xor
xchg
xchg
cli
je
fst
fs
insb
pop
or
sbb
inc
sbb
pop
daa
mov
mov
sarb
jmp
mov
insb
cmp
mov
mov
rcrl
jno
pop
xchg
cmpsb
inc
std
ficompl
in
mov
ss
das
shrb
add
pop
pop
dec
testb
sbb
lcall
cmp
and
dec
mov
and
jmp
fsubs
outsb
xorl
and
xlat
push
xchg
fxch
outsb
stc
incb
mov
jl
and
mov
sti
xchg
fneni(8087
push
mov
adc
or
test
mov
out
in
daa
push
subl
outsb
lahf
jne
out
dec
daa
jge
scas
es
jmp
push
add
add
pushf
rorb
xor
dec
inc
leave
and
inc
jmp
lds
je
cld
rcll
test
mov
add
pop
or
les
xchg
pop
sub
popf
std
xor
inc
mov
cmp
pop
push
jl
test
pusha
pusha
lea
jb
test
cmc
push
cmp
call
not
mov
not
mov
mov
pushf
mov
pushf
jmp
jne
jg
inc
aaa
hlt
lea
jno
xchg
test
fisubrl
mov
and
iret
push
lods
out
dec
xorl
imul
in
test
push
repz
cmc
sbb
sarb
mov
lea
lea
movb
movb
movl
jmp
mov
movl
pushf
pusha
pushf
lea
jmp
xor
movl
movw
neg
jmp
pop
add
add
fisttpll
xchg
rcl
hlt
adc
cmp
dec
add
mov
pop
gs
lock
out
mov
xchg
ret
inc
jns
divl
pop
pop
sub
add
mov
push
jle
mov
and
pop
lahf
lret
lock
dec
adc
clc
orl
push
dec
mov
cwtl
ljmp
push
ret
les
mov
jns
outsb
fiaddl
mov
adc
push
scas
pop
lahf
dec
sbb
mov
add
cmp
stos
sub
lock
xlat
lretw
lcall
dec
pop
ds
movl
pushf
jmp
bt
push
jmp
xor
lds
scas
jmp
mov
out
pushf
mov
mov
sti
jnp
jnp
mov
out
idivl
mov
inc
enter
inc
push
lds
fs
je
cmc
cmc
cmp
pushf
movb
pusha
lea
je
push
pushl
movw
lea
jmp
movb
push
pusha
lea
je
bts
rcr
cmc
btc
add
jmp
call
lea
je
jmp
popf
cpuid
nop
jno
push
pushf
jmp
jmp
js
jo
inc
aaa
sti
subb
add
jnp
enter
loop
popf
inc
ret
jg
mov
push
shl
decb
mov
mov
xchg
lahf
jecxz
push
out
mov
loop
inc
ret
inc
mov
test
fiaddl
lods
jle
push
xchg
sarb
rolb
aaa
clc
jno
mov
xchg
and
dec
pop
fidivrl
push
dec
xor
popf
inc
ret
movhps
mov
out
mov
and
rcll
leave
jmp
inc
mov
jo
cmp
shll
push
leave
lahf
xor
sub
and
pop
jo
add
jmp
push
jge
lock
stos
inc
mov
mov
scas
xlat
movq
out
cmc
add
push
hlt
dec
adc
loopne
dec
call
sub
ror
xlat
lahf
dec
xor
jae
outsl
xchg
xchg
je
cmp
xchg
in
mov
push
out
shrl
and
mov
es
out
in
push
add
repnz
imul
mov
stc
jne
or
mov
clc
cmpb
pusha
lea
jns
pusha
lea
jne
test
sub
xor
bt
sbb
mov
shl
rcr
add
rcl
stc
mov
clc
test
push
jmp
jle
gs
inc
aaa
into
dec
ja
or
add
dec
imul
nop
mov
mov
in
inc
stos
inc
inc
xchg
xchg
test
push
mov
add
dec
xor
in
push
rep
xchg
mov
into
cwtl
cs
test
or
xor
jbe
nop
testb
xor
xor
aaa
cmp
cmp
mov
pop
jle
mov
lret
es
scas
jae
jns
shl
inc
mov
ret
add
outsb
addr16
or
inc
subb
mov
jmp
xlat
inc
sbb
je
xor
dec
xor
dec
push
push
cmp
sbb
jo
enter
adc
jno
in
popf
mov
cmp
rolb
pop
jecxz
push
cmp
or
sbb
es
xor
adc
lea
hlt
test
leave
bt
mov
call
sbb
jmp
shrd
mov
test
call
not
dec
pushf
jmp
scas
mov
pusha
inc
aaa
repnz
stos
sbbb
sub
popf
inc
mov
add
aaa
xor
scas
shlb
into
dec
mov
arpl
push
push
sbb
or
ret
and
dec
and
popa
jne
lock
push
sub
sub
fldt
inc
xor
or
mov
aas
addl
lods
clc
decb
hlt
mov
stos
sbb
out
push
sbb
stos
push
cmp
add
cmp
pusha
movb
movl
mov
mov
pushf
push
lea
jmp
stc
cmc
shr
pushf
lea
je
call
push
movw
lea
je
pushf
push
push
lea
jmp
or
jmp
call
cmp
bswap
setl
lea
not
call
sbb
je
cmp
dec
jbe
sbb
je
cmp
jno
cmp
je
cmp
mov
lcall
dec
adc
sbb
sahf
dec
je
cmp
adc
popf
dec
je
cmp
es
outsl
sbb
hlt
mov
lret
sbb
hlt
inc
cmp
xchg
or
cmp
jbe
sbb
hlt
out
scas
mov
adc
aaa
scas
es
je
xor
imul
sbb
hlt
or
nop
sbb
icebp
popf
dec
hlt
jmp
repnz
popf
dec
je
jo
cmp
jecxz
cmp
stos
dec
hlt
das
cmp
insb
or
je
cmp
in
fstps
hlt
cmp
loopne
sbb
hlt
jl
mov
mov
popf
dec
hlt
les
jbe
das
sbb
je
ds
shlb
dec
je
cmp
push
cmp
sub
scas
sbb
hlt
xchg
cmp
loopne
rcrl
hlt
cmp
insl
rcr
sbb
je
cmp
inc
pop
rcrb
hlt
xchg
cmp
push
movsl
sbb
hlt
loopne
mov
int3
push
sbb
mov
adc
sub
sbb
hlt
out
cmp
sub
mov
dec
hlt
in
cmp
add
adc
xchg
popf
dec
je
cmp
lcall
xchg
ss
or
out
dec
hlt
inc
cmp
in
sbb
je
cmp
lods
std
sbb
hlt
add
scas
outsb
icebp
pop
sbb
hlt
out
adc
lcall
iret
xor
sub
dec
je
cmp
add
sbb
je
cmp
xchg
mov
cmp
fwait
jp
sbb
hlt
out
scas
in
mov
add
loop
lcall
sbb
rolb
movb
pusha
lea
jmp
call
jmp
lods
cmp
bound
es
testb
sub
xor
ja
xchg
and
int
sbbl
dec
inc
notb
mov
cmpsb
xchg
pop
pop
jbe
pop
nop
out
es
lahf
adcl
push
adc
jmp
clc
sub
lahf
xor
push
fidivs
ficompl
mov
cmp
imul
sub
das
pop
cltd
fs
push
das
mov
sub
int3
ds
sub
mov
dec
test
jno
push
fistpll
mov
loop
lret
sbb
sub
cmp
xchg
inc
add
and
inc
ljmp
sbb
in
inc
sbb
outsl
pop
xchg
jbe
push
shlb
push
sbb
jbe
movsb
decb
xor
std
mov
sbb
cwtl
add
test
sarl
imul
bnd
and
push
ret
rcrb
cmp
mov
mov
xor
push
cmc
movsb
adc
ss
inc
xchg
xorb
inc
adc
mov
xchg
aam
mov
enter
aaa
mov
add
notl
iret
movsl
and
ret
jecxz
lods
pop
pop
or
test
sbb
js
adc
dec
inc
cmp
cmp
cmc
shrl
pop
xchg
push
jle
cmp
daa
mov
sbb
cmp
push
out
xchg
rorl
push
loopne
inc
cmp
cmp
cmc
icebp
jmp
jmp
mov
loop
lock
arpl
insb
jl
lods
rorb
hlt
xchg
push
push
out
jns
push
movb
movl
pushf
pushf
pushf
movb
lea
jmp
pushf
lea
jae
push
jmp
call
rol
adc
inc
aaa
pop
gs
mov
stos
lcall
fs
mov
and
sar
sbbl
je
fsubr
sub
mov
xor
js
leave
mov
jae
mov
sub
scas
and
ljmp
lock
cmp
ficoml
sbb
jnp
fsub
icebp
sbb
mov
cmc
cld
sub
stos
or
hlt
cwtl
test
fiaddl
adc
sbb
xchg
in
call
inc
insl
stos
loopne
jno
fnstenv
loop
cmpb
or
mull
mov
cmp
mov
enter
icebp
add
aas
clc
xchg
leave
sbb
lahf
movsbl
movsl
dec
jle
jnp
xchg
clc
jecxz
popf
xor
orl
lcall
push
pushl
popl
pushf
push
movb
mov
pushl
ret
mov
call
pushf
mov
lea
je
push
cmp
cmp
pushf
jmp
jmp
repz
popl
call
lahf
mov
pusha
movb
pusha
push
mov
pushf
mov
mov
push
push
lea
jmp
jmp
pushf
pushf
call
mov
call
pushl
popl
pusha
push
mov
pushf
lea
jmp
lea
jae
mov
pushf
push
lea
jmp
jmp
mov
bsr
bsr
pop
mov
sete
test
rcl
mov
push
sub
jb
test
add
pusha
shrd
call
cmp
sub
pushf
xor
stc
sub
call
pushl
popl
push
lea
jmp
cmp
pushl
popf
pusha
push
mov
lea
jmp
sbb
or
mov
bt
clc
call
pusha
pushl
popl
push
mov
movb
pushf
lea
jmp
shld
sbb
ror
bt
mov
clc
cmc
bt
add
pusha
lea
jmp
movw
mov
pushf
mov
movb
call
sub
shr
mov
call
lea
push
jmp
pushf
pushl
sub
push
mov
jmp
push
test
sub
jmp
pushf
popl
pushf
push
pushl
popl
pushf
pushf
movb
lea
jmp
rcr
pusha
rol
mov
pushf
xchg
rcr
rol
bts
setg
pushl
popl
lea
push
call
aam
lahf
inc
mov
adc
neg
push
mov
call
rol
shl
cmp
mov
clc
bt
pusha
call
xadd
stc
bswap
aaa
mov
cmc
xadd
or
lea
mov
test
cmp
sub
mov
pusha
movw
cmp
add
jmp
pushl
popl
movw
push
lea
jmp
pushf
movl
test
pushl
popl
cmp
add
pushf
pushl
popf
mov
pusha
pushf
mov
lea
jmp
movb
mov
pushf
push
push
lea
jmp
jmp
cmp
push
mov
dec
inc
mov
jge
mov
fbstp
mov
ljmp
push
mov
incl
dec
mov
lcall
mov
jmp
pop
mov
mov
dec
mov
pushl
sti
pop
mov
decl
mov
jl
mov
fbstp
mov
jmp
mov
pushl
pop
mov
jl
mov
jmp
aaa
mov
call
xor
ljmp
dec
mov
decl
dec
mov
decl
dec
mov
inc
inc
mov
lcall
dec
mov
push
pop
mov
jl
mov
dec
inc
mov
ljmp
mov
lcall
cmp
pushl
jmp
dec
mov
call
inc
mov
ljmp
push
mov
call
inc
mov
ljmp
mov
call
inc
mov
call
xor
call
inc
mov
cmp
fistl
call
inc
mov
lcall
cmp
call
inc
mov
decl
push
mov
pushl
pop
mov
call
inc
mov
ljmp
mov
call
inc
mov
jmp
mov
call
inc
mov
cmp
fistl
call
inc
mov
incl
push
mov
call
inc
mov
jmp
pop
mov
call
inc
mov
ljmp
push
mov
call
inc
mov
jmp
mov
call
inc
mov
push
cmp
call
inc
mov
call
dec
mov
call
dec
mov
decl
dec
mov
lcall
jmp
cmp
jp
mov
fdivrl
mov
mov
cmp
ljmp
dec
mov
lcall
lcall
cmp
ljmp
dec
mov
dec
inc
mov
lcall
dec
mov
dec
inc
mov
call
xor
jmp
aaa
mov
ljmp
dec
mov
xor
lcall
push
mov
decl
mov
push
pop
mov
decl
mov
pushl
xor
jl
mov
fdivrl
mov
call
xor
ljmp
push
mov
decb
cmp
pushl
dec
mov
call
inc
mov
ljmp
mov
ds
mov
incl
push
mov
jnp
mov
cmp
jp
mov
jl
mov
ljmp
dec
mov
jmp
inc
mov
ds
mov
clc
push
mov
jmp
dec
mov
ljmp
dec
mov
inc
dec
mov
jmp
aaa
mov
mov
cmp
jl
mov
inc
inc
mov
incl
dec
mov
jmp
mov
clc
push
mov
ljmp
mov
decl
mov
incl
mov
jl
mov
cmp
cld
cmp
jl
mov
decl
aaa
mov
lcall
xor
call
in
cmc
lea
mov
clc
cmc
test
sub
call
xor
call
push
pusha
pusha
jmp
mov
movb
lea
jmp
mov
pusha
pushf
push
cmc
add
call
call
jmp
rcr
call
pusha
call
sub
cmp
notl
cmc
movsbw
bts
pusha
mov
clc
sub
bt
bt
call
mov
pushf
call
mov
movb
pushl
pushl
ret
call
jmp
pushl
push
jmp
pushf
popl
push
lea
jo
pusha
pushl
popl
pushl
push
mov
lea
jmp
mov
push
pushf
lea
jmp
stc
shr
push
mov
push
mov
movw
pushf
popl
push
call
call
movb
pushf
mov
push
call
lea
jg
pusha
pusha
mov
movw
repz
popl
jmp
pusha
call
push
stc
sub
pushf
pushf
jmp
jmp
call
jmp
pushf
mov
jmp
xor
mov
jmp
mov
pushf
lea
jmp
call
ror
rcr
movzbl
cmp
sub
sub
mov
seta
inc
bsr
push
cmc
neg
neg
movsbw
btc
ror
neg
jmp
mov
jmp
pushf
pushl
popl
push
pushf
pushl
pushf
lea
jmp
pushf
push
pusha
pushl
popl
pusha
movw
pushf
pushf
lea
jmp
movzbw
not
bswap
rol
sar
sub
lea
movsbw
xor
pushf
inc
movsbw
seta
bsf
movzbl
push
call
push
pusha
pusha
mov
pushf
mov
pushf
push
mov
jmp
repz
popl
push
push
mov
pushf
call
sub
neg
movzbw
mov
call
movw
lea
jne
pushf
shrd
sbb
mov
lea
jbe
and
bt
clc
call
push
jmp
pushl
clc
sub
cmp
cmp
stc
sub
call
test
cmp
movb
pusha
mov
pushf
lea
ja
btc
aaa
movsbw
shrd
mov
rcr
shld
lea
aaa
lea
test
sub
bsf
lea
das
shld
lea
bts
xor
clc
push
and
rcl
pusha
sbb
or
sub
pop
call
mov
pushf
call
xor
mov
cwtl
mov
btc
add
not
bswap
mov
jmp
push
mov
call
pushf
mov
movb
call
stc
push
test
cmpl
pusha
pushf
call
bt
not
pusha
pusha
clc
bt
rol
mov
pushl
sub
call
add
pushf
mov
jmp
movsbw
cmc
bswap
add
add
bt
shrd
neg
shrd
mov
movsbw
rol
or
mov
xor
movsbw
pusha
inc
btc
btr
bt
ror
bsf
xor
bt
shl
pop
cmp
xor
pushf
movzbl
not
bswap
ror
bsr
mov
cmp
lea
cmp
mov
pushf
neg
mov
clc
add
jmp
movw
pusha
mov
jmp
jl
pushf
mov
jmp
pusha
mov
jmp
sub
call
call
call
jmp
mov
aad
bsr
sar
mov
push
or
mov
test
call
aas
bsr
stc
mov
cmc
sub
call
call
push
xor
neg
test
mov
stc
jmp
jmp
jmp
mov
movb
pushl
popl
push
pushf
lea
jmp
cmc
sub
pushl
mov
pushf
movb
call
xchg
pusha
pushf
push
call
decl
pusha
call
jmp
jmp
push
pushf
popl
movb
mov
pushf
lea
jae
popl
push
mov
pushf
movb
lea
jmp
cmp
call
push
mov
mov
push
pushf
repz
popl
call
test
sub
pushf
movl
push
pusha
lea
jne
jb
xor
pushf
call
mov
call
shl
shld
aad
shr
mov
rol
clc
or
mov
cmc
test
sub
clc
pushf
stc
shr
push
push
pushl
mov
pushf
pushf
pusha
pushf
popl
mov
call
bt
add
push
mov
push
lea
jmp
aam
clc
mov
bsr
sar
mov
test
pushf
clc
not
cmp
not
cmp
push
and
pushf
call
pushf
mov
mov
lea
jbe
push
pushf
pushl
popl
mov
push
pushf
pusha
lea
jmp
bts
mov
or
add
rcr
mov
test
pusha
test
add
pusha
push
jmp
movw
mov
pushl
pushl
movb
movb
lea
jmp
push
call
push
mov
ror
xchg
aad
pusha
mov
jmp
pusha
movl
pushf
mov
pusha
pushf
call
add
add
add
setge
xor
mov
shl
pushf
pushl
inc
mov
cmp
movb
sub
bt
add
jnp
cmc
shr
push
pushf
pusha
mov
call
pushl
mov
pushf
jmp
call
pushl
popl
pushl
push
mov
pushf
lea
jmp
jmp
seta
bswap
mov
ror
rcl
or
not
add
ror
or
shld
setns
xor
call
push
call
test
sub
stc
stc
not
mov
pushl
stc
ror
movl
clc
pusha
sub
mov
movw
cmc
sub
call
push
call
lea
jae
xchg
jmp
pushf
mov
movw
mov
jmp
cmp
xor
sub
jp
cbtw
clc
call
stc
clc
lea
jmp
neg
neg
adc
movzbl
jmp
jmp
pusha
mov
jmp
pusha
mov
mov
pushf
jmp
pushl
popl
movb
lea
jmp
mov
pushf
movb
mov
jmp
call
div
lea
jo
push
mov
push
mov
push
mov
push
pushf
popl
jmp
call
mov
mov
movb
call
cmc
cmp
pusha
mov
mov
pushf
test
push
sub
jmp
mov
jmp
call
shld
mov
mov
jmp
mov
call
mov
call
pushf
pushf
mov
jmp
cmc
bts
rcl
mov
cmc
test
add
push
pushf
lea
jmp
cld
cld
cld
push
mov
push
pushf
rep
shl
mov
sub
shl
mov
pusha
cmc
pushf
pushl
popf
push
pushf
lea
jmp
mov
movb
push
push
lea
jmp
repz
popl
push
pushl
call
mov
push
pushl
pushl
pusha
lea
jmp
test
pusha
mov
call
pusha
mov
mov
jmp
pushf
mov
push
jmp
jmp
cmc
sub
pusha
sub
push
movb
mov
pushf
pushf
push
lea
jmp
call
pushf
mov
movb
mov
pushf
mov
call
mov
call
pusha
mov
pushl
lea
jmp
mov
clc
mov
stc
sub
pusha
lea
jmp
push
bswap
pusha
cld
mov
jmp
pushf
pusha
pusha
call
pushf
mov
jmp
mov
push
pushf
pushf
lea
jmp
jmp
jmp
jmp
jmp
push
pushf
mov
movb
mov
jb
pusha
push
movw
mov
mov
mov
movb
push
movw
mov
movw
pusha
pushf
mov
call
pusha
pushf
popl
mov
pushf
pusha
pushl
popl
pushf
pushf
lea
jmp
mov
lea
js
push
pusha
pusha
pushf
popl
call
call
setne
mov
movsbw
bswap
mov
mov
pushf
mov
pushl
ret
movb
push
push
mov
pushf
pushf
lea
jmp
stc
add
pushl
pushl
lea
jmp
lea
jae
lea
push
mov
call
pushf
mov
pushf
mov
push
mov
pusha
call
mov
pusha
pusha
pushf
push
mov
push
movb
pushf
pushl
popl
movb
pushf
push
movw
lea
jmp
movb
movl
mov
jmp
inc
shl
mov
test
xor
mov
cmp
jmp
sub
movb
stc
clc
mul
mov
call
mov
not
not
repz
popl
call
pusha
pushl
mov
push
pushl
pushl
pushf
lea
jmp
jmp
bt
shld
lea
stc
mov
push
add
movl
mov
movb
lea
jmp
mov
mov
pushf
mov
pushf
pushl
popl
pushf
movw
mov
movl
lea
jmp
pusha
mov
pushf
pusha
jmp
pusha
mov
mov
pusha
pushf
lea
jmp
jmp
mov
mov
lea
jne
clc
cmc
xor
xorb
bswap
push
push
mov
pusha
mov
lea
jmp
call
pusha
mov
mov
mov
pushf
pushl
pushl
pushl
ret
bsf
bsr
xadd
mov
bts
xor
xadd
pushl
popf
movzbw
bswap
mov
mov
bswap
lea
mov
xchg
lea
pop
movsbl
mov
pop
pushl
movsbl
mov
lea
jmp
jmp
pushf
popl
call
jmp
call
cmp
cmc
sub
stc
jmp
sub
call
mov
jmp
cmc
jmp
pushf
mov
mov
call
jmp
bt
add
or
mov
clc
xor
pushf
cmc
bt
not
cmc
cmc
bt
rol
pushf
jmp
mov
pushf
cld
jmp
dec
shr
xor
stc
cmp
sar
and
sbb
mov
stc
cmp
clc
clc
add
call
push
pushf
pushl
popl
push
pushf
lea
jmp
aam
not
or
rcr
mov
shl
setp
sub
setne
mov
pushf
jmp
clc
pushf
call
jmp
clc
lea
call
ror
neg
call
pushf
mov
pushf
mov
movw
pushf
pushl
ret
mov
mov
mov
mov
jmp
mov
pushf
movb
jmp
jmp
jmp
jmp
pushf
popl
push
call
sbb
shr
adc
ror
mov
cmp
test
add
push
pushl
lea
jmp
pushf
call
push
pushf
mov
push
lea
jmp
mov
jmp
repz
popl
pusha
push
mov
pushf
mov
jmp
add
dec
not
mov
jmp
mov
pushf
lea
call
push
push
repz
popl
pusha
mov
pusha
jmp
pushf
mov
pushl
lea
jmp
jmp
test
call
aad
not
inc
mov
push
push
clc
mov
sub
pushf
sub
jge
test
add
test
stc
pushf
xchg
bt
stc
mov
jmp
sub
mov
jmp
bt
pushf
mov
movb
cmp
or
pushf
lea
je
bt
xor
stc
cmp
test
xchg
jmp
mov
jmp
pusha
mov
push
repz
popl
movw
jmp
mov
call
stc
call
push
pushl
popl
pushf
lea
jmp
not
bsf
sub
dec
not
shl
sub
clc
cmp
ror
rcl
mov
call
pusha
mov
pusha
pushf
jmp
jmp
seto
setl
movzbw
push
mov
jmp
mov
pushf
push
mov
pushl
popl
movb
pushf
lea
jmp
mov
pushl
movw
pushf
pusha
lea
jmp
mov
call
pushf
mov
movb
call
call
bswap
push
pushf
movzbw
xchg
mov
movzbw
push
pusha
movzbw
call
repz
popl
bt
mov
stc
rol
call
push
cmc
movzbl
call
mov
pusha
pushl
popl
movb
push
pushf
lea
jmp
call
movb
mov
jmp
call
add
push
cmc
lea
pusha
cwtl
jmp
pushf
popl
pusha
pushl
popl
pushf
pushl
lea
jmp
mov
pusha
jmp
call
pushf
pushl
mov
pushf
popl
jmp
call
mov
pushf
lea
jmp
lea
lea
js
push
mov
not
mov
not
mov
push
cld
push
pushf
pushf
jmp
xor
clc
mov
pushl
sub
clc
clc
pushf
bt
shl
call
pushf
movb
mov
push
jmp
mov
mov
pushl
lea
jmp
pusha
pusha
pushl
popl
push
pushf
lea
jmp
pusha
add
clc
shrd
call
movb
pushf
clc
ror
pushf
jmp
aas
bsf
seto
mov
dec
jmp
pushl
popl
pushf
push
lea
jmp
bswap
mov
push
pushf
pushl
mov
call
mov
jmp
pushf
xor
jmp
mov
lea
pushl
popl
rcr
movl
lea
setb
mov
rcr
rol
rcl
cmp
neg
bswap
inc
dec
pushl
cmp
lea
sub
adc
shld
xchg
sub
xadd
cmp
xchg
or
mov
lea
sub
mov
sar
add
neg
lea
rcr
mov
stc
bsr
push
dec
xor
lea
dec
inc
cmc
setbe
ror
stc
neg
xor
shl
xor
pop
shl
and
movzbl
cmc
rol
pusha
mov
movw
bt
bt
lea
movb
neg
cmc
clc
add
pushl
mov
pushl
pushl
ret
jmp
adc
add
call
btc
das
movsbw
not
mov
bt
add
call
pushf
mov
pushf
lea
jmp
dec
btr
mov
pushf
add
mov
mov
push
pushf
push
pushf
lea
jmp
lea
push
lea
jae
pushf
push
mov
push
lea
jmp
push
jmp
mov
mov
jmp
call
cmc
sub
cmp
pusha
pushf
shl
call
mov
pushl
call
jmp
movw
jmp
push
movb
mov
call
bswap
sub
jbe
sub
stc
stc
call
bt
sub
test
pusha
stc
cmc
shl
call
push
pusha
call
push
pusha
mov
pushf
pusha
call
jmp
call
push
mov
movw
pushf
lea
jmp
push
movl
bswap
mov
pusha
pop
setne
rol
and
ror
test
movzbw
neg
movzbw
inc
shr
lea
sar
sub
add
mov
movsbw
bsf
test
bts
mov
call
clc
pushf
test
push
add
mov
xchg
bt
pusha
jmp
pusha
pushf
popl
pushf
pushf
pushl
popl
mov
push
lea
jmp
push
push
pushf
mov
mov
pushf
push
movb
lea
jmp
xor
stc
mov
stc
bt
sub
call
dec
clc
not
or
xor
pushf
sete
and
sar
cmc
neg
mov
call
push
jmp
bts
mov
clc
test
sub
bt
add
push
jmp
mov
jmp
ror
xadd
mov
rcl
call
movb
mov
pusha
pushf
push
lea
jmp
pushf
mov
mov
mov
movw
repz
popl
call
pushf
pushf
jmp
call
cmc
neg
bt
pusha
pusha
ror
jmp
xchg
pusha
pushl
movl
call
pushf
popl
call
pushf
mov
jmp
btr
cmc
mov
stc
sbb
add
not
not
mov
mov
jmp
std
pushf
mov
mov
pushf
mov
jmp
xor
clc
cmc
sub
stc
neg
stc
jmp
call
call
not
mov
call
call
mov
pusha
mov
movb
lea
jmp
shl
call
mov
push
lea
jmp
mov
jmp
pushf
lea
je
pushl
pushf
push
movb
pusha
lea
jmp
mov
cmp
cmp
add
push
lea
jmp
pushf
jmp
rol
mov
add
and
add
pop
lahf
movzbl
jmp
mov
call
push
mov
jmp
pushf
popl
jmp
pushf
sub
call
mov
inc
mov
jmp
mov
mov
jmp
pushl
lea
cpuid
call
pushl
popl
pushf
push
movw
lea
jmp
call
bt
sub
stc
clc
cmp
jmp
mov
pushf
lea
jmp
pushl
popl
mov
mov
push
lea
jmp
call
mov
mov
mov
lea
je
push
pusha
pushf
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
pushf
popl
call
xor
mov
ror
call
mov
pusha
movb
pusha
jmp
pushf
popl
jmp
pushf
shr
pushf
cmp
or
jmp
mov
or
mov
cmp
call
mov
mov
push
pushf
lea
jmp
pushl
repz
popl
movb
mov
call
call
lea
movb
mov
pusha
movb
pushf
pushl
lea
jmp
add
movw
movl
pushf
lea
jmp
push
inc
bt
sub
call
lea
jns
pusha
pushl
popl
push
pushf
movb
pusha
lea
jmp
lahf
push
cwtl
mov
pusha
call
mov
push
pushf
mov
call
clc
clc
call
mov
push
call
xor
stc
clc
clc
ror
test
cmp
pusha
add
cmc
pusha
movb
push
sub
movb
movb
call
jmp
test
inc
or
rol
mov
pushf
stc
cmc
sub
sub
jb
neg
call
call
mov
pushf
mov
call
movzbw
test
bt
movzbw
neg
shl
cmp
shl
test
sub
neg
rol
or
xor
push
clc
jmp
shrd
and
clc
mov
bsf
bts
mov
jmp
pushf
call
inc
call
pusha
cwtl
bt
mov
bt
mov
add
pusha
sub
movb
jmp
pushf
mov
pushf
pushf
movl
mov
mov
mov
pushf
movb
jmp
jmp
push
call
mov
jmp
mov
pushf
pusha
jmp
mov
call
mov
mov
pushf
pushf
popl
jmp
mov
pushf
push
jmp
pusha
mov
movw
movl
lea
jmp
lea
not
sbb
aas
mov
sar
cmc
bswap
neg
mov
cmp
add
jmp
jmp
cmp
and
jmp
cmc
add
push
jmp
mov
pushl
mov
jmp
call
mov
pushl
mov
push
repz
popl
pushf
mov
mov
mov
mov
push
movb
mov
pushl
popl
push
pushl
push
lea
jmp
test
add
call
mov
jmp
mov
pushf
call
jmp
pushf
pushf
and
stc
pusha
call
pushf
mov
lea
js
push
jmp
ror
jmp
repz
popl
push
jmp
lahf
cwtl
cwtl
mov
lea
lea
mov
jmp
cmp
pushf
push
call
jmp
movb
pushl
popl
pushf
lea
jmp
pushf
pushf
pusha
pushl
popl
pushf
push
pushl
pushl
lea
jmp
movl
push
jmp
mov
mov
or
call
jmp
jmp
sbb
xchg
movzbl
shl
xor
shld
bsr
sub
shr
jb
neg
test
push
sub
shl
shl
xor
cmp
stc
inc
add
or
dec
bsf
mov
test
add
pusha
mov
pusha
lea
jmp
pushf
pushl
popl
mov
pushl
pushf
lea
jmp
shl
daa
mov
stc
test
sub
jmp
call
pusha
jmp
call
push
cmp
movl
jmp
shr
movw
call
pushf
call
movsbl
mov
bt
pusha
pushf
add
movw
pushf
lea
jmp
push
lea
jo
push
pusha
pusha
call
rep
and
adc
sbb
mov
call
add
lea
js
pushf
pusha
mov
mov
push
lea
jmp
pushl
popl
push
push
pusha
lea
jmp
mov
call
mov
movl
call
lea
jne
push
mov
pusha
lea
jmp
push
mov
pushf
movl
mov
pushf
call
stc
cbtw
cmp
push
cwtl
test
movb
pushl
add
test
mov
mov
test
sub
push
mov
pusha
mov
lea
jmp
call
stc
bt
add
call
pushl
mov
pushl
pushf
pusha
lea
jmp
push
pushl
mov
pushf
call
stc
shld
cmp
bt
mov
shl
dec
sbb
rol
mov
shl
inc
mov
pusha
push
cmp
cmc
sub
call
xchg
lea
lea
jle
pusha
mov
xchg
movsbw
movzbw
bswap
pushf
xchg
jmp
jmp
pushf
popl
pushf
pushl
pushl
popl
pusha
pushl
mov
mov
lea
jmp
jmp
call
mov
mov
mov
mov
lea
jmp
jmp
rcr
ror
dec
rol
mov
clc
mov
pusha
push
test
add
call
pushl
mov
call
push
jmp
mov
push
movb
mov
movw
pushl
popl
push
pushf
movb
lea
jmp
pusha
lahf
mov
jmp
mov
jmp
push
bt
pusha
sub
push
bt
stc
call
pushf
mov
push
push
movl
lea
jmp
test
add
movb
pushf
mov
movb
lea
jmp
cmc
bt
test
push
jmp
mov
pushf
pushl
movb
movb
lea
jmp
jmp
sub
mov
pushf
push
cmc
add
movb
movw
lea
jmp
mov
pushf
call
movb
mov
push
pushl
popl
movw
movb
lea
jmp
mov
push
pushl
popl
mov
pushf
pushl
lea
jmp
pusha
push
mov
pushl
repz
popl
jmp
pushf
pushl
mov
pusha
mov
pushf
lea
jmp
call
push
inc
mov
movw
call
jmp
pushf
cmc
not
cmp
not
test
sub
pusha
cmc
test
and
mov
jmp
lea
jne
shld
shl
shld
bts
xorb
call
not
jmp
push
jmp
call
mov
jmp
clc
clc
mov
call
mov
jmp
add
bt
sub
jge
cmp
push
sub
push
mov
pushf
pushf
pusha
pushl
lea
jmp
call
mov
pushl
popl
movb
mov
mov
mov
lea
jmp
jmp
pushf
mov
pushf
movb
pushl
ret
pusha
call
mov
jmp
push
pushf
popl
lea
js
popl
push
mov
lea
jmp
push
pushf
repz
popl
call
mov
sub
pusha
shr
cmp
add
not
mov
mov
pushf
call
btc
and
shr
shl
mov
call
mov
call
pushl
pushf
mov
pushf
pusha
mov
pushf
jmp
cmp
stc
bt
shld
movb
pushl
pusha
call
mov
pushl
call
push
repz
popl
jmp
neg
lahf
sub
shld
rdtsc
pushf
jmp
pushf
repz
popl
call
pushf
mov
push
mov
jmp
ror
cmc
jmp
jmp
push
call
push
divl
push
mov
mov
mov
jmp
pushf
mov
pusha
mov
lea
jmp
pushf
movl
pushl
popl
pushf
movb
pushl
lea
jmp
jmp
push
pushf
pushl
popl
pushf
pushf
pusha
lea
jmp
mov
pushl
pusha
pushf
popl
jmp
not
bt
call
bt
push
push
sub
call
pushf
mov
pusha
pushf
pushl
popl
pushf
push
pushf
lea
jmp
jmp
add
mov
lea
jmp
add
pushf
pushf
mov
mov
mov
lea
jmp
push
mov
pushf
jmp
add
jmp
pushf
pushf
popl
jmp
pushl
popl
push
push
lea
jmp
sar
ror
mov
stc
pushf
xor
movb
jmp
call
shrd
push
neg
sbb
mov
stc
cmp
pushf
add
test
xchg
mov
clc
cmc
xor
jmp
pushf
mov
jmp
mov
jmp
call
call
mov
jmp
jmp
pusha
mov
movw
pushf
mov
push
lea
jmp
