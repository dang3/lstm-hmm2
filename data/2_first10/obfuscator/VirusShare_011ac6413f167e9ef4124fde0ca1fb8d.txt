das
mov
test
sahf
jo
aas
aad
mov
loope
test
push
ss
mov
ljmp
je
dec
aad
scas
inc
sub
sbb
inc
outsb
popf
add
lds
push
pop
mov
jne
in
mov
and
insl
push
pushf
subb
sub
out
movsl
pusha
lcall
stc
mov
fwait
stc
fninit
dec
and
push
mov
fsubs
dec
in
xor
sub
mov
add
popa
repz
cmp
mov
or
icebp
pop
outsl
push
out
or
or
jl
xchg
dec
out
pop
sub
pop
or
fsts
mov
cmp
push
xchg
push
sbbb
jno
push
push
mov
in
loop
adc
negb
cmpsb
pop
or
dec
clc
or
sahf
push
dec
daa
popf
into
and
shlb
lea
jae
xchg
pop
rcl
mov
xchg
test
sub
xchg
leave
fnstsw
lds
mov
stc
xlat
shlb
pusha
dec
jno
push
jbe
xchg
movsb
ljmp
push
pop
pusha
push
mov
loope
xchg
jne
mov
pop
lock
scas
adc
pop
in
scas
mov
imulb
xchg
movsl
jge
in
mov
xchg
jne
sbb
inc
in
stos
sub
iret
add
mov
push
push
shlb
xor
mov
lcall
jp
adc
dec
pop
push
cmp
pusha
adc
rcr
jae
dec
jns
xor
cli
inc
rcll
es
mov
ret
jecxz
stos
cmpsb
icebp
cmp
jg
xchg
js
fsubl
fsts
pop
jge
mov
out
lods
inc
xchg
out
lret
out
cmp
ss
xor
call
xorb
dec
test
cwtl
pushl
inc
adc
adc
mov
xchg
aas
int3
xor
in
jnp
inc
push
dec
lds
add
mov
mov
sub
xchg
clc
das
repnz
aas
dec
jmp
jl
fs
mov
cmp
fcmovnb
js
rcrl
and
out
pop
daa
jno
sbb
or
stc
push
xchg
in
push
pop
add
dec
cmp
cs
test
and
je
inc
sbb
mov
and
mov
sub
mov
inc
test
lret
and
and
repz
call
icebp
out
push
in
jge
aad
je
sub
movsl
add
dec
ljmp
loopne
das
mov
sbb
lcall
mov
xlat
xlat
ret
sbb
shll
sbb
cmp
xchg
push
das
cltd
dec
mov
jno
je
lcall
adc
cltd
inc
aad
lahf
xchg
cmp
in
sbb
aas
sbb
in
sbb
xor
stc
mov
int3
pop
add
popf
rorl
sub
mov
push
adc
cmp
movsb
inc
out
mov
mov
iret
in
fcomps
out
dec
mov
xor
vgetexpsd
pop
mov
lret
pop
imul
push
aad
mov
stos
pop
or
xor
push
xchg
sbb
xchg
movsl
aas
into
pop
jne
xchg
sti
dec
and
sub
xor
ss
push
or
fnsave
inc
and
fisubl
pop
stos
push
push
insl
outsb
mov
lahf
push
roll
mov
add
adc
bswap
pop
lret
data16
fisubl
add
cli
jge
or
adc
sub
lods
mov
test
inc
mov
repnz
push
mov
adcb
imul
xor
mov
dec
jns
dec
adc
in
lret
faddl
shlb
dec
imul
std
ljmp
sub
xchg
outsb
cmc
aam
jmp
cmpsb
mov
cmpb
sub
xchg
int3
mov
dec
xchg
mov
aam
mov
add
loope
push
mov
and
xor
cvttps2pi
loop
push
cmp
inc
movsb
push
jecxz
clc
mov
mov
inc
pop
pop
sub
pop
mov
jne
inc
fists
out
mov
sbb
imul
pop
in
and
scas
punpckhdq
jle
insl
sbb
cmc
in
jge
or
lret
and
sub
jbe
mov
cwtl
jge
das
push
data16
outsb
xor
sahf
jo
sub
pop
xor
aam
jecxz
arpl
je
xchg
or
lods
js
adc
lcall
fisttps
jmp
mov
cli
leave
fsts
stos
mov
adc
xor
jne
in
out
and
push
gs
rolb
sub
or
push
movsl
lcall
mov
testl
enter
xchg
inc
dec
xor
mov
andb
into
jge
cmp
add
adc
xchg
mov
pop
pusha
cmpsb
popa
xchg
je
jmp
out
mov
mov
cmp
adc
mov
sub
cli
xchg
adc
dec
in
fcoms
cltd
lds
sbb
sahf
rolb
das
mov
mov
mov
or
pop
pop
dec
andl
pop
and
cld
fld
mov
mov
outsl
nop
ror
cs
lret
sub
out
inc
xor
jae
push
mov
mov
inc
cmp
adc
push
sbb
rcrb
ret
fdivrl
and
pop
dec
in
xor
and
mov
xchg
pop
mov
mov
add
push
adc
mov
add
cmp
je
inc
lcall
jno
ret
iret
mov
pop
imull
dec
push
popa
inc
inc
call
inc
jbe
jl
stc
mov
int3
xor
sub
pop
mov
leave
pop
add
jl
dec
sub
loop
les
aam
xchg
test
fisubrs
inc
or
xor
ret
daa
xchg
js
imul
bound
stos
sbb
xchg
xchg
in
loop
mov
or
pop
loope
mov
in
fsubrs
outsl
xchg
fwait
mov
inc
inc
fiaddl
and
repnz
mov
clc
jg
mov
or
jmp
fmuls
mov
sbb
mov
loope
repnz
jns
pop
rorl
bound
jns
jnp
cli
out
je
pushf
sti
cmc
out
out
into
add
imul
in
push
jg
out
xor
test
xchg
and
fnstcw
jb
pop
out
test
push
and
lahf
les
enter
lds
push
and
sub
rcrl
mov
sbb
jne
fstp
and
fldcw
push
in
xchg
and
clc
pop
fists
mov
pop
inc
jmp
cmpsl
icebp
enter
adc
xor
les
sub
out
sub
lds
sub
jno
ror
inc
sub
jbe
pop
cmp
dec
ss
or
movsl
out
mov
push
repz
jmp
or
addb
pushf
adc
adc
dec
imul
mov
mov
mov
adc
out
sub
pop
xor
xchg
sahf
mov
xor
fbld
xchg
subl
test
jmp
hlt
shrl
pop
xor
addl
fcmovb
cmp
jp
sbb
mov
mov
ret
jle
fwait
jp
inc
bound
push
xchg
mov
mov
test
arpl
int
in
arpl
sbb
inc
cmp
insl
and
stc
and
push
loop,pt
xchg
test
cmc
das
mov
sbb
push
push
out
xchg
jecxz
jle
push
or
loopne
pop
ret
inc
ffreep
adc
inc
xchg
push
mov
clc
add
inc
inc
sahf
pop
xor
stc
fbstp
bound
xor
popf
cmc
ficompl
push
mov
cmp
and
add
aad
enter
lret
or
cmp
push
pmuludq
movsb
mov
mov
cmc
and
jg
mov
dec
mov
mov
lds
rcrl
jg
cwtl
cwtl
lea
aam
xchg
outsb
dec
rcr
scas
test
sub
out
loop
nop
sub
add
pop
and
mov
add
insl
repz
add
sub
add
fidivs
inc
add
add
adc
inc
add
pusha
add
add
mov
add
rcll
xor
mov
idivl
es
xchg
lods
push
in
xchg
fucomip
xchg
scas
adc
mov
div
into
dec
or
push
shll
fldl
loop
rcll
xchg
andl
das
lret
sti
lea
mov
divl
mov
or
jbe
fiadds
shl
popa
dec
mov
jno
imul
push
inc
leave
dec
pop
fisttps
repz
adc
xchg
out
pop
icebp
loopne
cmp
jbe
in
adc
scas
mov
outsb
mov
jo
add
jl
aaa
js
hlt
js
jp
arpl
add
js
mov
in
test
test
stos
mov
lock
fdivl
adc
add
push
push
clc
push
pop
push
in
data16
xor
imul
out
add
push
push
daa
push
pop
les
mov
jge
or
lret
push
inc
lods
dec
imul
lds
jnp
lret
inc
aaa
mov
xlat
lods
and
jbe
adc
lock
cmp
sbb
push
loop
inc
and
xor
icebp
and
xlat
sub
mov
cmpsl
mov
add
sbb
mov
fsubrl
adc
xor
faddp
hlt
in
fsin
inc
mov
insl
jnp
cltd
jmp
aaa
addl
mov
into
sub
cmpsb
sub
enter
pop
movsb
lret
int3
cmp
cmp
or
je
jg
add
and
cli
shrb
loopne
loope
push
sti
in
inc
lods
and
adc
dec
es
jb,pn
mov
out
sub
push
filds
imul
inc
loope
lret
mov
aam
loop
or
inc
sbb
mov
pop
pop
mov
test
dec
pushf
inc
in
data16
pop
xor
fldcw
inc
les
popa
sub
push
cmp
ljmp
xlat
aas
scas
adc
test
xchg
pop
pop
mov
sbb
outsb
test
xor
lock
into
cltd
imul
das
loope
lret
sub
dec
jno
leave
bound
pop
pop
mov
ficoml
dec
ds
xor
xor
fisubl
hlt
cmpsl
ss
dec
jp
cmp
call
out
or
dec
mov
idivl
adc
es
xchg
sub
into
std
jo
sbb
jne
sbb
push
sub
adc
cltd
add
dec
inc
fwait
sbb
inc
sti
add
shr
fnstenv
cmp
push
dec
or
mov
out
jg
test
fcmovbe
insb
dec
out
test
pop
mov
and
ret
arpl
test
cld
adc
das
int
cmp
popa
xor
pop
jmp
or
js
mov
ljmp
mov
fnstsw
and
out
shl
out
adc
mov
and
xchg
xchg
add
jne
inc
push
and
cmc
ror
or
xor
pop
and
dec
mov
dec
jge
jnp
push
sbb
pop
andb
lahf
test
clc
add
outsl
mov
hlt
dec
rorl
adc
cmc
fyl2xp1
pop
cmpsb
loopne
lds
call
inc
dec
sub
cltd
xchg
xchg
and
jmp
js
stc
lret
push
jne
cmp
les
xchg
std
add
or
mov
dec
test
jge
movsl
test
sar
sbbl
adc
fiaddl
fsubs
insl
dec
shll
mov
xchg
adc
adc
sub
and
sbb
js
xchg
int
xor
ret
lcall
jge
mov
adc
mov
aad
jnp
aad
sub
push
mov
mov
mov
pop
jg
in
jge
push
das
shrl
out
or
inc
lcall
mov
jge
lahf
test
inc
mov
gs
ret
data16
push
xchg
jbe
divl
cmp
js
scas
push
pop
sahf
fcomp
repz
add
adc
lods
jge
dec
inc
sbb
fwait
sti
push
jle
data16
and
sub
push
adc
sbb
sbb
dec
push
les
subb
and
push
xchg
lahf
test
pop
movsb
cmp
cmp
roll
out
push
mov
inc
pop
mov
mov
daa
adc
mov
inc
ficomps
dec
popa
in
fldenv
jmp
lret
inc
negb
int3
add
xchg
jp
test
int
mov
outsl
mov
fs
cld
cli
or
sbb
data16
xor
push
mov
movsl
lret
je
pop
int3
imul
xor
popf
jo
sbb
adc
orl
in
das
call
jb
jle
push
add
sbbl
cmp
lods
rclb
mov
jne
dec
jno
adc
jne
mov
xor
out
mov
filds
pop
push
inc
inc
add
les
inc
call
mov
dec
dec
movsl
adc
mov
sbb
mov
fisubs
cs
or
mov
test
fnstenv
adc
in
js
adc
out
xor
clc
or
push
cmpsb
adc
pushf
cmpsl
fimuls
mov
dec
cmp
adc
mov
cmp
fsubrl
bound
jp
cmp
push
in
xchg
into
mov
int
les
xor
add
cmpl
pushf
jbe
loop
mov
jg
iret
jge
push
and
es
xor
sub
sub
mov
cmp
sub
cs
sub
mov
and
sub
cs
sub
mov
aad
sub
sub
mov
sub
aad
dec
cmp
inc
push
icebp
xor
movsb
repz
dec
xchg
mov
dec
roll
or
dec
dec
outsb
clc
repnz
sti
sub
js
and
cltd
cwtl
cmp
and
sahf
fisubl
inc
mov
push
xchg
or
mov
mov
fs
test
push
pop
cmp
leave
shrl
fisubrs
jae
lods
sbbl
cmpsl
outsl
pop
popa
daa
mov
or
out
push
imul
cmp
pop
leave
call
adc
push
fstpt
mov
pushf
stos
pop
jle
sub
pop
and
dec
loopne
popf
mov
insb
shlb
mov
mov
fsubs
sub
mov
iret
stos
lret
cmovl
xor
into
and
aaa
pop
add
jl
mov
lock
xlat
pop
lahf
cs
sub
or
mov
fs
xor
lock
add
ja
pop
fisubrl
xchg
push
dec
leave
jo
cmp
pop
dec
cmp
outsl
xchg
insb
xchg
shlb
aas
jp
cmpsb
xchg
rcr
test
addr16
insb
rolb
dec
mov
mov
std
dec
gs
in
pop
jo
xchg
je
ss
push
xgetbv
je
sti
jns
popa
mov
js
push
repnz
cs
stos
shll
out
fwait
pop
int3
push
js
and
mov
mov
leave
fstpt
push
das
cmp
not
sub
adc
xchg
adc
rorl
and
outsl
in
push
div
repnz
lds
test
mov
sti
sti
mov
cmc
sar
loop
ret
sub
add
in
jp
mov
add
xlat
out
mov
or
aaa
jns
inc
adc
inc
into
filds
mov
ss
inc
addr16
jb
std
dec
mov
sti
push
in
or
dec
js
ret
ss
push
js
cmp
flds
add
mov
popa
mov
bound
out
cmpsb
in
dec
pop
rolb
data16
popa
mov
shll
testb
stc
outsb
jle
push
jne
lahf
mov
or
xorl
out
inc
sbbl
stc
ljmp
cmp
mov
cld
jns
in
mov
mov
mov
mov
cmp
mov
fdivr
mov
fcomip
xor
jge
mov
mov
push
mov
std
add
scas
sti
scas
lret
clc
add
push
xlat
or
leave
enter
add
jmp
pop
pop
mov
ss
test
ret
insl
dec
add
aas
mov
mov
popa
cmp
shrb
sub
daa
xor
movsb
push
and
pop
mov
lods
inc
repz
movsl
sub
pop
in
sbb
iret
ds
loop
std
sbb
aad
xor
sbb
into
jge
in
sub
ret
jno
loopne
pushf
fmull
push
mov
je
jnp
adc
insb
shlb
loope
dec
imul
xchg
xchg
mov
test
jge
lds
bound
sbb
fprem1
and
and
loop
and
out
sbb
lods
add
les
pushl
lret
aas
mov
push
stos
andb
add
xor
mov
dec
orb
mov
arpl
ds
pop
adc
out
or
cmp
mov
xchg
popf
sti
dec
popf
mov
adc
sahf
es
sahf
stos
xchg
xor
cmp
pop
pushf
mov
shrb
dec
and
push
pop
mov
iret
or
pop
push
inc
xchg
push
fcoml
or
shl
dec
outsb
test
aas
xchg
cmp
bound
xchg
jl
lahf
and
ror
rorb
int3
sbbb
jae
ds
in
rolb
divl
int
ja
mov
int
fs
fdivs
sbb
and
ss
out
scas
sbb
inc
popa
movsl
pop
and
mov
popa
fwait
out
js
and
cmp
push
scas
jb
mov
fcmovu
push
out
dec
add
xor
xor
adc
cmp
mov
je
adc
int
mov
pop
test
fsubl
arpl
in
cmp
test
cmp
rclb
mov
add
cmp
add
add
add
inc
add
push
data16
sub
aas
xor
pusha
clc
cmp
push
adc
dec
outsb
push
push
cwtl
pop
lock
lret
mov
xchg
or
add
add
add
add
add
add
sub
add
adc
data16
jns
sbb
dec
enter
xchg
mov
mov
fwait
gs
adc
ret
ret
daa
out
div
repnz
inc
push
xor
push
push
jle
dec
popa
gs
mov
inc
mov
cli
shl
pop
adc
or
ret
add
lahf
jb
leave
lds
nop
add
popa
and
cmp
mov
sbb
push
lret
pop
pop
test
cmpsl
jnp
push
push
xchg
push
xchg
dec
mov
add
loope
aad
pushf
lret
xor
sub
js
out
sbb
pop
mov
js
lds
and
xor
or
leave
jl
xchg
pop
xchg
jnp
shlb
sbb
sub
pushf
lods
push
cltd
in
ljmp
rcll
pop
or
repz
xlat
in
push
sub
add
ds
repz
loope
scas
pop
ret
in
cmp
pop
adc
fisttps
rclb
in
sbb
loopne
xor
rorb
aad
shr
bound
fisttpl
push
mov
fabs
push
cmp
sub
lret
pmaxub
sub
and
push
xor
out
std
shll
jg
sbb
pushf
xor
and
cmc
daa
inc
fisubrs
jmp
xchg
gs
daa
in
pushf
clc
sub
outsb
pusha
js
fstp
sahf
sbb
js
cs
inc
mov
and
imul
lods
xchg
xchg
xchg
adc
lcall
lds
pushf
cmpsb
sbb
out
xchg
imul
dec
out
outsb
mov
xor
out
xor
andb
jle
out
jne
fimull
inc
lahf
mov
into
scas
jmp
lea
or
push
jne
loop
push
fs
sbb
test
xchg
out
sbb
sub
addr16
adc
cmpsb
in
test
xchg
fs
rclb
xor
pop
xor
add
rclb
fstpt
into
sbb
pop
sub
jecxz
movsl
lea
in
mov
sbb
mov
xchg
push
jns
in
and
mov
lret
inc
fnstsw
push
outsb
mov
addr16
repnz
cld
and
pop
lods
add
jge
mov
mov
fsubs
std
rcll
pop
sbb
stos
lds
cld
sub
loopne
enter
sbb
mov
inc
fists
inc
mov
addl
pop
ss
xchg
jbe
nop
pop
mov
xor
cs
leave
shrl
fldenv
or
test
mull
mov
jp
cmp
mov
adc
jl
fwait
xor
ret
inc
pop
push
cmovns
xor
xor
mov
cmpsb
sbb
jle
or
in
dec
sahf
adc
fmull
fildll
ljmp
roll
mov
in
cld
and
fstps
fildl
aaa
cmpsb
or
movsl
fdivp
mov
push
mov
jge
mov
lahf
jl
cmp
inc
xchg
mov
lods
in
andb
dec
fs
mov
push
mov
fcompl
je
lock
test
ljmp
les
notb
cmp
or
scas
push
into
and
inc
lret
mulb
push
or
imulb
out
imul
cmp
sbb
addl
adc
lahf
jbe
fildl
sbb
insl
lods
sub
mov
arpl
sub
call
scas
je
lea
mov
lcall
dec
sahf
inc
sbb
cli
sbb
mov
andb
add
mov
sbb
outsb
fadds
inc
push
or
leave
xor
ja
sub
lahf
insb
cltd
adc
jp
mov
in
jge
mull
cmp
movsb
shl
adcl
and
push
mov
sub
add
pop
pop
lds
loop
or
push
adc
jae
pop
jnp
popf
inc
fdivrl
icebp
mov
sbb
repnz
ss
arpl
sbb
xchg
test
mov
loope
adc
stc
rorb
jmp
test
ret
push
mov
call
push
mov
dec
or
repz
mov
inc
pop
pop
and
mov
subb
push
or
inc
daa
push
sbb
scas
fs
loopne
lret
lahf
pop
xchg
inc
and
xchg
push
daa
shll
push
fsubl
pop
dec
mov
popa
cmp
fistpl
adc
enter
decl
sub
mov
pop
mov
xchg
popf
ret
xor
rcl
pop
cmc
sti
adc
sbb
clc
outsl
xchg
mov
lock
dec
test
jmp
test
push
hlt
push
mov
mov
outsl
arpl
out
cmp
jno
sub
jg
imul
std
and
push
aas
dec
js
ljmp
jmp
and
jb
xor
incl
shl
jecxz
pop
fstpl
push
sbb
and
mov
jbe
inc
dec
pop
dec
mov
popa
incl
xchg
pop
push
imul
inc
mov
push
add
mov
out
mov
sub
push
inc
sbb
lods
push
jle
addr16
add
js
movsb
dec
mov
cmp
jnp
mov
xchg
cmp
es
dec
inc
jl
icebp
cmp
addb
adc
loope
out
cmp
fimuls
outsb
push
push
pop
into
pusha
jle
out
imul
push
push
inc
jg
pusha
sub
pusha
add
xchg
jmp
xchg
jae
push
pop
cmp
loope
pop
xor
sbb
adc
test
pop
mov
stc
repz
out
push
inc
push
sub
lods
jecxz
iret
pop
and
out
outsl
jb
jb
jle
dec
inc
push
and
mov
xor
dec
clc
cli
shll
inc
addr16
mov
sub
mov
fldenv
xchg
popf
cli
mov
push
loop
mov
cmp
shlb
cmpsl
jg
push
add
pop
pushf
add
or
scas
or
lods
dec
adc
cmp
or
xchg
or
push
inc
jmp
imul
leave
or
jnp
and
push
push
or
cmpsl
mov
cmpsl
cli
enter
push
push
jns
pop
adc
xchg
sahf
and
cmp
test
or
adc
or
aaa
rol
js
mov
add
jno
mov
lahf
push
xchg
addl
mov
dec
mov
outsl
divb
out
pop
stos
sub
cmp
daa
popa
push
clc
lds
mov
xchg
jp
negb
and
cmp
mov
icebp
loopne
pusha
add
test
dec
repnz
xchg
rcrl
sub
dec
and
mov
adc
call
push
push
add
scas
mov
call
fwait
sti
clc
dec
fistl
push
divb
lret
or
test
clc
push
ljmp
add
loop
aas
pusha
mov
jmp
push
repnz
push
fisttps
push
popf
gs
lahf
pop
call
xor
mov
mov
call
lea
push
sbbb
negl
nop
jle
inc
in
push
fwait
xchg
cwtl
or
cmpsb
sub
mov
pop
jmp
push
fdiv
sbb
jno
add
xorl
fldcw
adc
dec
inc
cmp
xor
lcall
jae
imul
fmull
and
inc
ja
movsb
cmpsb
int
pop
add
data16
cmp
xor
in
sbb
stos
push
cmp
shll
xchg
dec
iret
ret
dec
divl
loop
std
adc
cmpsb
mov
jae
ret
popf
gs
pop
adc
sub
je
fimull
lahf
scas
repnz
mov
adc
mov
jmp
and
xor
cli
mov
mov
add
jno
xor
lods
iret
push
cmpb
lret
decl
inc
repz
popf
fistpll
addr16
je
popa
inc
pop
jmp
sub
out
xor
cmpl
cmp
mov
cmpsl
fmulp
fadd
insb
outsb
dec
pop
inc
ljmp
cmpsb
repz
sbb
or
daa
rolb
mov
dec
lods
mov
or
fscale
mov
adc
push
pop
pop
adc
clc
lahf
pop
cmp
insl
xor
inc
lahf
mov
clc
mov
out
xlat
pop
push
or
js
push
add
ljmp
or
lret
pop
mov
mov
sbb
jp
dec
shlb
mov
lcall
pop
push
rcll
sbb
loop
aas
imul
in
inc
and
dec
pop
xor
jae
pop
jmp
rorl
aaa
fdiv
in
out
sbb
je
mov
fwait
lcall
pop
add
rcll
pop
mov
repnz
cmp
sub
sbb
stc
and
addr16
push
inc
jle
adc
cs
cwtl
cmp
cmc
in
ja
xor
push
jl
pop
pop
mov
fidivs
mov
int3
mov
adc
lcall
and
ja
mov
in
mov
stos
fwait
or
push
dec
movsl
xor
adc
mov
std
jle
loopne
aad
repz
in
and
xchg
xchg
clc
pushf
mov
fiadds
leave
adc
xchg
or
pop
jl
sbb
loope
add
ljmp
out
sahf
sbb
push
push
jle
dec
xchg
in
mov
sbb
and
and
mov
sar
or
or
xlat
repz
adc
jle
mov
cltd
fiadds
aas
jno
lahf
in
cltd
ds
stos
or
add
mov
xor
cld
imul
jmp
add
push
pop
sbb
jl
jl
scas
xchg
test
pushf
mov
mov
fadd
sub
push
push
sahf
mov
and
cmp
mov
xor
je
sbb
push
and
popa
stos
outsl
push
ret
pop
loop
xchg
and
inc
rolb
pop
jge
dec
sbb
push
loop
call
hlt
js
inc
clc
pop
sub
dec
mov
fwait
mov
mov
add
addr16
stos
mov
ljmp
daa
sbb
push
into
mov
ja
lods
jne
sti
and
mov
iret
push
xchg
adc
lret
test
lods
pop
incl
mov
in
std
insb
pop
push
in
jl
popf
push
ret
orb
ret
in
aaa
test
movsl
mov
je
out
cmp
dec
pop
fs
std
mov
lea
add
lcall
jecxz
adc
mov
pop
scas
xor
jmp
fstpt
shll
call
inc
sbb
lds
mov
cs
sbbl
adc
jle
in
and
cli
or
inc
push
push
or
shll
loop
mov
leave
mov
dec
or
push
lods
fsubrl
add
inc
popa
add
jb
lahf
stc
mov
cld
sarl
mov
cs
xchg
xchg
push
push
mov
lcall
adc
popa
clc
stos
inc
cmp
dec
jl
aaa
pop
xor
sbb
mov
inc
int
les
int
or
pop
and
inc
out
mov
jb
imul
cli
pusha
xchg
ljmp
ja
xchg
insb
adc
jmp
loop
arpl
cld
out
pop
xor
lcall
in
inc
cwtl
into
leave
or
loopne
and
fmull
bound
xchg
mov
clc
fdivl
lret
lea
out
shlb
mov
pushf
subb
pop
fstl
stos
or
fbld
je
imul
cmp
aas
mov
xchg
mov
bound
cmp
stos
sbb
gs
lret
popa
fsubr
clc
mov
dec
fmul
call
mov
or
push
jne
dec
dec
mulb
aaa
mov
pushf
and
mov
ret
test
pop
dec
mov
pop
push
gs
lret
xchg
addr16
or
mov
push
in
inc
lods
leave
sub
lods
scas
daa
mov
mov
sub
orl
mov
ljmp
mov
adc
dec
es
scas
imul
xor
add
inc
adc
loope
pop
insb
lahf
cli
sub
fsubrs
sbb
ja
repz
and
cmp
jns
scas
mov
in
xor
out
mov
sub
movsl
test
sub
movsb
mov
hlt
icebp
bound
cmc
cmp
fisubl
rcr
and
push
cmp
jl
mov
inc
dec
pop
sar
xor
dec
inc
in
cmpsb
fdivl
jbe
adcb
adc
push
in
imul
mov
cwtl
nop
push
jg
jns
mov
sbb
call
in
jge
mov
jae
test
fidivrl
popa
adc
xchg
adc
lret
stos
cmpsb
popw
jbe
ja
push
mov
rcl
push
add
dec
orb
dec
jecxz
mov
imull
mov
loope
ret
mov
adc
nop
xchg
mov
or
mov
jno
inc
push
nop
cmpsl
and
xchg
cld
sbb
adc
jb
fs
xchg
dec
pop
mov
sahf
movsl
dec
sbb
sub
movsl
ret
push
repnz
mov
cmp
out
adc
lock
out
dec
xchg
stos
mov
in
adcl
pop
sbb
adc
sub
add
dec
lret
ss
and
cltd
jne
and
xor
mov
insl
lcall
mov
test
stos
sbb
adc
sbb
cwtl
and
mov
mov
outsl
mov
stos
adc
dec
xchg
ret
test
daa
nop
sub
cwtl
or
aaa
sub
and
aas
or
cmp
lods
fsubp
in
stos
mov
fstpl
cmp
dec
cmp
push
jae
lods
cwtl
sub
fcoml
add
das
mov
shlb
adc
mov
mov
pop
mov
rolb
sub
ss
cmpsb
fisubrl
rcl
ljmp
ret
adc
add
lds
sub
xchg
xchg
loope
loop,pt
cmp
xlat
and
imul
xchg
or
in
mov
inc
std
push
lods
mov
or
shll
cmp
jmp
mov
jge
xor
stos
dec
mov
testl
out
fisttpll
mov
in
stc
repz
test
xor
sbb
pop
cmp
and
push
ja
stos
pop
int
testl
mov
ds
pop
add
jo
push
lods
sub
or
lods
dec
jmp
fists
js
data16
xor
clc
es
test
pop
sahf
jg
and
jae
cld
push
and
pop
out
inc
xchg
inc
xor
insb
stos
imul
pop
sbb
add
rol
jb
and
bound
test
and
dec
sub
mov
cld
sbbl
add
imul
mov
mov
mov
push
pop
clc
aam
imulb
or
xchg
das
fwait
or
das
cmpsb
hlt
jg
int3
js
popf
sub
repnz
jge
test
xor
xor
sub
mov
mov
mov
push
sbb
jge
push
xchg
js
loopne
popf
fisubrl
ds
enter
pop
adc
imul
fcompl
and
xchg
nop
inc
test
xchg
cltd
int3
push
out
jne
dec
idivb
aas
pop
fucomi
cmp
or
jne
adc
adc
test
push
cmpsb
jp
out
jns
xchg
push
shlb
int
pop
or
fadd
in
rol
mov
ret
inc
dec
out
mov
jle
xchg
das
stos
sub
xchg
scas
test
xor
repz
xchg
sbb
pop
add
imul
add
mov
ljmp
fisubl
int
data16
pop
lods
stos
sbb
jnp
decb
pushf
repnz
mov
pop
adcb
test
imul
fsubrs
xor
inc
stos
pop
sbb
sahf
lock
icebp
dec
in
sub
inc
add
pusha
pusha
lea
cli
nop
jne
stos
push
cmp
fstpt
pop
test
cmp
fdivrs
adc
lock
jecxz
bound
rcll
pop
int
cmpsl
add
adc
cmp
mov
mov
adc
pop
adc
mov
mov
sahf
div
repz
jno
arpl
icebp
xor
mov
mov
ja
xor
pop
push
cmp
mov
or
xchg
add
es
aad
add
xchg
sbb
add
xor
mov
lds
nop
lock
rclb
push
push
ret
adc
aam
loope
pop
loope
jno
mov
jb
mov
dec
fmull
pop
aam
lock
in
mov
mov
divl
ret
leave
ljmp
and
add
dec
cld
mov
mov
ljmp
or
add
loope
and
add
jne
fwait
sbb
and
daa
lds
imull
pop
dec
jbe
adc
int3
xchg
adc
jp
mov
mov
add
test
loopne
pop
sbb
or
mov
jns
test
fstpt
jne
stos
cmpsl
dec
ret
jno
jecxz
lock
xchg
pop
jl
repz
mov
push
xchg
or
ficomps
ja
inc
sub
ret
inc
shlb
sub
fsubl
es
test
jbe
push
dec
or
or
imul
jecxz
movsb
cmp
mov
xchg
mov
mov
adc
rorl
add
imul
pop
test
cli
lock
and
lret
data16
test
test
flds
scas
test
aad
sbb
leave
into
sbb
and
inc
in
add
clc
add
mov
loope
out
xchg
xor
sbb
ja
in
mov
add
inc
outsl
movshdup
sti
cli
rolb
mov
bound
xor
in
jmp
pop
mov
sub
jle
leave
pop
jne
push
test
decb
decl
add
pop
xchg
cmp
clc
dec
jp
mov
adc
push
xchg
ret
mov
cld
sbb
notb
les
loop
jmp
bound
mov
lods
pop
jae
scas
imulb
push
xor
aad
int
aas
pop
cli
mov
pusha
pop
jnp
mov
inc
cmp
pop
mov
clc
cs
jbe
push
cs
mov
mov
xchg
mov
sub
out
shr
mov
or
or
cs
lret
inc
cli
popa
add
pop
cwtl
mov
dec
test
cmpsb
fs
jge
lret
int3
adc
test
push
jge
test
cmc
int
fcomps
or
out
in
inc
jge
gs
xchg
das
stos
jns
std
mov
addl
cmc
imul
mov
sub
int
xchg
aam
jae
lods
add
cmp
xor
push
in
mov
cwtl
in
push
fildll
lret
gs
jg
jnp
sub
aaa
cmp
push
adc
jl
cwtl
fadd
aam
lret
je
xchg
fbstp
dec
and
xchg
dec
adcb
addr16
adc
adc
mov
out
sti
pop
loope
inc
sbb
or
mov
add
mov
gs
mov
adc
pop
jne
arpl
jae
push
out
into
mov
dec
cmp
stos
sub
sub
mov
jge
and
ret
xchg
arpl
xchg
in
in
insb
xchg
aas
jno
das
sub
inc
fldenv
cli
xchg
insb
cs
cmp
hlt
lods
daa
fisubrl
lods
repnz
sub
sahf
enter
das
ret
adc
mov
and
or
sub
fsts
cmp
pop
daa
call
mov
or
mov
push
inc
push
dec
xor
or
lret
movsb
mov
cmc
mov
dec
lods
xor
adc
test
arpl
cmp
and
mov
and
or
inc
pop
arpl
mov
xchg
and
enter
pushf
imul
into
sar
jnp
mov
sahf
push
movsl
xlat
xchg
mov
cmp
pop
push
xchg
out
insl
jbe
pop
mov
sbb
iret
pop
lret
ljmp
adc
fisubrs
sub
sub
mov
dec
and
push
aad
inc
jmp
sbb
dec
pusha
mov
js
shlb
xchg
xchg
ds
xchg
or
fistps
enter
push
mov
lods
add
push
ds
and
xchg
mov
ja
adc
adc
out
adc
shrl
jle
mov
shrd
or
rcll
and
mov
adc
xor
in
and
jb
call
pop
mov
in
sahf
int3
jmp
or
adc
xlat
repz
pusha
xchg
mov
loop
or
out
das
dec
aad
mov
sub
mov
loop
lds
lcall
rcl
mov
jmp
xchg
or
and
mov
adcb
lods
enter
cmp
repnz
mov
fstpl
rcrl
and
jp
push
dec
jmp
xor
cld
pop
fbld
inc
int
sub
jno
movb
aas
xchg
jmp
es
in
inc
pop
adc
jg
sub
sbb
repnz
call
cld
push
mov
icebp
xor
ds
movsl
cmc
sarl
aam
push
enter
cltd
les
xchg
mov
mov
xchg
inc
add
xchg
sub
adc
push
cmpsl
sbb
leave
das
rorb
push
mov
xchg
mov
pop
mov
ficoms
ret
sbb
mov
insb
notl
cmp
adc
cmp
add
jae
test
lock
inc
dec
mov
int3
mov
push
ficompl
add
int
cs
divl
mov
jmp
fstpl
sbb
les
and
rol
jl
shlb
and
mov
mov
inc
sbb
popa
mov
push
out
addr16
ja
xor
inc
add
fldenv
adc
mov
nop
mov
decl
movsl
adcl
mov
push
gs
into
cli
loope
jecxz
push
pop
jl
inc
sbb
and
xchg
lods
clc
push
xchg
push
in
in
sbb
shrl
scas
xchg
in
xor
add
inc
shrl
cmp
loope
gs
pop
lret
push
pop
pusha
mov
xor
mov
mov
gs
in
movsl
and
xor
add
sbb
cs
fxch
nop
mov
fistpl
add
jb
lahf
adc
out
aam
xchg
mov
sti
dec
shrb
sti
scas
jge
fcmovne
inc
fistpll
sub
lret
or
xchg
mov
hlt
xchg
pop
sbb
sbb
dec
xor
stc
stos
push
dec
adc
mov
or
jecxz
aaa
mov
or
xchg
test
add
lds
lods
push
mov
nop
push
push
out
insb
xor
and
jmp
push
idiv
pop
xor
lock
aaa
out
cli
mov
rcr
mov
and
mov
aam
loope
sarb
xchg
nop
jecxz
sbbb
jb
in
jae
dec
lahf
cli
add
cs
daa
lods
inc
sub
je
addps
jle
mov
notl
repnz
lds
hlt
push
sub
or
push
daa
sti
inc
ds
adc
icebp
mov
pop
int
sbb
int3
scas
movsl
jo
shlb
pop
adc
jns
subl
mov
pop
jbe
subl
push
imul
dec
sbb
sub
mov
mov
sbb
jne
sbb
into
pop
dec
mov
xchg
hlt
pop
add
fprem
xor
push
push
rcrl
andl
repnz
in
pusha
lahf
pop
adc
mov
pop
movsb
es
pop
sub
rol
pusha
add
adc
mov
aas
and
inc
shrb
mov
test
lea
mov
divl
xchg
les
mov
test
mov
cmp
cwtl
dec
data16
daa
sti
sbb
adc
icebp
xchg
mov
int3
outsb
push
xchg
addr16
push
mov
mov
ss
adc
fs
jne
add
ja
adc
and
aas
lock
cmp
jmp
mov
fisubrs
cmp
sbb
jp
jl
pop
mov
test
lds
test
lods
loope
mov
ja
inc
data16
mov
dec
je
mov
push
mov
lock
push
out
out
lret
fldenv
aad
inc
shll
loop
stc
lahf
sbb
lret
xchg
inc
aas
xor
cld
xor
cmp
incb
daa
mov
xor
cs
jae
ds
inc
xor
inc
fidivs
dec
mov
and
dec
daa
cli
add
pop
negb
fwait
add
xlat
inc
dec
mov
jno
push
adc
out
aad
adcb
xchg
cmp
xchg
and
jmp
pop
jae
in
shrl
icebp
jbe
cmp
aam
push
in
xchg
sbb
mov
mov
cmp
xorl
mov
mov
jnp
push
xorl
enter
cwtl
ss
sbb
add
jecxz
repz
mov
imul
jmp
lret
mov
cmp
xchg
xchg
and
or
in
push
cs
dec
push
lret
shrb
jge
mov
ss
rorb
xchg
iret
js
scas
stc
out
and
aad
jae
orb
idivl
hlt
call
loope
data16
fs
repz
std
addr16
mov
in
jmp
adc
shll
cmp
in
aad
sub
test
mov
mov
jns
cli
sti
mov
pop
xchg
in
inc
jge
jg
sahf
xchg
rcrb
fbld
rclb
call
fmull
addl
test
cmp
loop
insl
adc
lods
mov
gs
ss
and
jae
jo
test
add
sbb
cmp
dec
dec
and
popf
les
in
xor
bswap
fwait
lea
gs
stc
push
imul
and
mov
cmp
pop
fbld
inc
push
adc
repnz
popa
sbb
and
adc
lods
or
or
or
lcall
push
adc
ja
stc
dec
mov
pop
pop
out
rol
in
push
sahf
into
lea
scas
dec
daa
ret
push
push
xlat
lret
hlt
fwait
mov
aaa
aas
pop
stos
jne
in
pop
pop
fildll
cmpsb
sub
cwtl
into
xor
das
fiaddl
mov
xchg
je
data16
in
leave
das
cmpsb
pushf
mov
das
fs
arpl
mov
icebp
pushf
push
loope
pop
mov
dec
mov
ffreep
jb
mov
cltd
inc
rorb
scas
or
imul
movsb
lret
sbb
bound
insl
add
outsl
mov
out
mov
xchg
popf
into
sahf
push
mov
sub
sbb
add
xor
lea
mov
fiadds
mov
aas
push
and
pop
jno
pop
jmp
rorl
adc
pop
sub
pop
pop
add
dec
adc
lret
sub
pushf
imul
ljmp
adc
push
testl
or
sbb
inc
xlat
in
jmp
sub
in
push
fwait
sub
inc
stos
push
add
cltd
mov
popf
lods
test
xlat
hlt
js
jns
sbb
lcall
sbb
add
out
icebp
dec
jbe
popa
dec
rclb
push
outsl
pop
xchg
inc
add
dec
mov
lret
xchg
jbe
mov
cmpb
pop
loop
adc
ja
xor
out
movsb
mov
sub
push
js
mov
pop
cmp
add
push
pushf
jo
ret
insl
pop
leave
pushf
or
dec
pop
mov
push
stc
pushf
sub
bound
mov
lods
ss
add
push
or
inc
loopne
movsb
cmc
and
dec
jmp
inc
icebp
cmp
adc
sti
and
pop
cwtl
imul
subl
mov
pop
fwait
lcall
xchg
mov
mov
out
dec
push
xchg
push
mov
inc
repz
sbb
das
divl
por
ss
cld
adc
cmc
sbb
insb
jl
jb
mov
add
fwait
push
jl
lahf
dec
adcb
arpl
xchg
mov
inc
cli
xchg
loop
sti
cmpsb
dec
sbb
or
fnstenv
pop
mov
cmpsb
in
aad
xor
sbb
mov
inc
mov
push
xor
cs
loope
mov
aad
pop
xor
mov
mov
scas
sbb
stos
add
addb
inc
leavew
jne
loope
pop
ret
xlat
stc
and
cmp
adc
mov
sbb
stc
iret
adc
xor
pushf
repz
push
push
popa
xor
jg
lea
add
push
add
dec
outsl
mov
sbb
popf
mov
sbb
subb
test
adc
push
jnp
std
or
call
mov
pop
cmp
ljmp
add
mov
clc
imul
pusha
cmpsl
push
loope
mov
imul
aas
sub
mov
add
clc
cmpb
imul
lretw
aad
stc
xchg
ret
or
fistpl
push
pop
xchg
xor
pop
adcl
mov
insb
loop
mov
pop
or
pcmpgtb
daa
push
push
dec
ds
pop
dec
repz
push
jecxz
xchg
mov
lret
hlt
add
pop
xor
movsl
aaa
in
out
xchg
mov
mov
or
mov
in
jbe
xchg
fildll
fnstsw
cmp
sbb
cmc
add
xor
into
movsl
cmp
xchg
out
pushf
mov
gs
rcrb
mov
push
mov
scas
lret
int3
mov
mov
sbbl
mov
pusha
lahf
dec
mov
mov
mov
sbb
inc
ljmp
fnstcw
hlt
ds
imul
push
sbb
sahf
mov
add
out
iret
das
inc
mov
cs
inc
aad
ja
insb
fcompl
adc
xchg
imul
sub
xchg
pop
push
pandn
stos
xor
cmp
sub
sub
cmp
ss
push
adc
xchg
pop
adc
jnp
mov
addr16
sbb
ljmp
ja
cmpsb
xchg
add
xchg
mov
push
cmp
test
fiadds
xchg
inc
xchg
add
dec
or
and
jmp
adc
cli
arpl
ret
rcrl
loop
cwtl
stos
int3
add
push
jno
and
mov
and
shl
push
or
gs
inc
dec
inc
push
mov
in
or
inc
push
lods
out
mov
adc
cli
movsb
aad
sub
ror
mov
ja
or
cli
mov
jb
jno
jb
mov
rcl
xchg
je
adc
mov
or
xor
popa
lods
or
ret
pop
adc
and
cmc
jno
inc
lcall
push
xchg
in
les
data16
jmp
or
in
or
or
pop
arpl
dec
dec
jg
sub
cmpsl
fldt
mov
mov
test
sbb
orl
outsl
aam
icebp
insb
sbb
mov
push
in
sub
push
es
inc
pushl
es
aad
push
push
addb
cmpsl
push
mov
lret
sub
adc
mov
push
sahf
xlat
mov
cmc
push
pusha
call
lock
push
or
rorl
sub
mov
popf
cli
insl
stos
incb
cld
and
std
push
in
out
adc
movsl
cs
mov
fildl
ss
xchg
in
gs
pop
cmp
dec
mov
aas
jmp
mov
inc
das
fmul
loopne
test
push
aad
cmpsb
lods
data16
mov
imul
pop
bound
push
mov
pop
out
aam
inc
fldenv
fcoml
mov
flds
dec
xor
mov
out
or
stos
mov
sbb
loop
mov
je
jecxz
adc
pusha
add
mov
xchg
xchg
push
mov
push
cs
dec
les
pop
dec
sub
cwtl
mov
push
sbb
daa
std
push
xor
insl
push
adc
mov
pop
stos
lods
ja
in
pop
push
cmovns
divb
jnp
stos
lahf
push
dec
sbb
loopne
loop
inc
les
shlb
lods
mov
leave
shl
ficomps
pop
mov
mov
and
shll
mov
rclb
fistpl
lds
xchg
mov
sbb
mov
cmp
xor
cmpsl
filds
mov
mov
aad
pop
or
and
pop
test
dec
int
mov
jns
push
ds
cmpsl
and
push
mov
pop
cld
sbb
pusha
xchg
call
test
loope
nop
mov
andnps
sarb
mov
icebp
pop
push
icebp
mov
mov
mov
adc
or
aam
pop
jne
lret
dec
jbe
dec
gs
or
outsb
cmp
loop
push
fs
jle
orl
dec
stos
add
loope
bound
or
iret
and
sub
into
int3
adc
cmp
bound
icebp
xor
push
mov
movsl
jns
imul
aam
ret
iret
outsb
mov
push
pushf
out
mov
scas
push
inc
fsubrs
jp
add
repnz
and
and
inc
inc
in
hlt
mov
mov
lret
lcall
ret
cltd
sbb
adc
pop
jbe
ja
ljmp
lea
cs
pop
jecxz
and
out
sbb
mov
std
pop
out
and
xchg
cltd
loop
insb
mov
in
jecxz
pusha
jp
punpckldq
idivl
aaa
cmp
enter
push
cmp
sub
add
mov
inc
scas
sub
ret
dec
xor
xchg
mov
xor
test
cmp
je
jns
dec
inc
subl
xor
aad
repz
sbbl
loope
dec
push
mov
in
test
sbbb
call
adc
mov
mov
sbb
pcmpeqd
pop
popf
fidivl
pop
sub
fdivrl
cltd
xor
inc
sub
pop
in
mov
jae
push
int
mov
inc
pop
dec
es
cmpsl
mov
push
jb
mov
xchg
lcall
add
sbb
push
mov
pop
adc
aas
je
in
aas
xchg
sahf
xchg
add
xor
adc
push
test
test
sbb
inc
ret
inc
xor
mov
sub
iret
sub
dec
int
sar
sub
lods
rorb
aas
add
ret
mov
mov
iret
out
popa
xchg
addr16
mov
scas
cmp
xor
push
repz
ss
and
pop
mov
push
fmuls
les
mov
cmp
testb
dec
and
adc
mov
xchg
xchg
adc
jl
in
daa
popa
clc
aaa
sub
pop
pop
not
sbb
clc
push
sub
push
frstor
repz
xchg
pop
push
sub
pop
imul
inc
mov
dec
mov
lret
je
jns
jb
out
loopne
xchg
push
in
mov
mov
hlt
adc
mov
mov
xor
pop
stc
cmp
rclb
inc
inc
clc
rorl
adc
dec
mov
lcall
mov
jp,pt
pop
sahf
dec
sbb
xchg
cmp
les
sbb
add
adc
push
jmp
repnz
sbb
jmp
push
stos
jmp
jge
xorb
and
inc
sbb
ja
adc
push
in
sti
stos
imul
out
fdivrp
cmpsl
psubb
cmp
push
dec
addr16
pop
fisubs
sbb
and
inc
sub
ja
inc
sahf
mov
sarl
stos
out
sub
add
ja
fwait
jg
jg
mov
dec
and
add
sti
divb
psraw
lock
mov
les
in
push
push
cmc
imul
jmp
jp
movsl
shl
push
mov
scas
loope
fucomip
add
sti
mov
outsl
lods
jno
xchg
lds
repz
mov
xchg
xor
mov
inc
dec
pop
add
push
jb
js
jbe
xlat
cld
jnp
in
movsb
aas
mov
sar
loopne
mov
test
out
test
dec
dec
gs
sub
sbb
push
sbb
dec
mov
xor
jo
mov
negl
add
mov
xlat
or
scas
out
mov
dec
xchg
aas
or
imul
mov
stos
scas
mov
inc
pop
mov
xor
mov
pop
stos
aas
or
add
dec
or
mov
mov
outsb
daa
jmp
rcrb
mov
push
adc
xchg
adc
data16
in
jle
add
in
adc
je
lea
lahf
outsb
icebp
sub
inc
push
jae
add
stc
mov
mov
inc
lahf
jne
sub
inc
ss
xchg
rcrl
cld
dec
loop
rcrl
or
int3
push
lret
mov
cwtl
lods
cltd
xor
pop
or
test
icebp
pop
fcom
insb
push
lock
add
or
pop
sbb
inc
mov
cmp
mov
pop
int
mov
mov
pop
and
jae
mov
cmpsb
addr16
jle
mov
or
cmpsl
xor
xor
sub
ja
jo
bnd
xchg
icebp
push
in
mov
in
test
mov
mov
aas
leave
lret
xchg
push
and
sbb
pop
pop
cmpsb
sub
push
repz
push
dec
mov
dec
mov
push
aaa
add
in
inc
or
push
and
in
mov
sbb
orb
icebp
scas
loopne
lods
push
mov
ds
dec
inc
insl
push
dec
inc
dec
sbbl
in
inc
icebp
or
std
rcll
mov
mov
xor
in
dec
mov
gs
movsl
dec
clc
cmp
inc
ret
mov
push
mov
int3
or
add
packuswb
movsl
outsl
fcompl
cmp
inc
xchg
pop
xorb
loop
repnz
scas
mov
adc
int3
and
enter
sbb
sub
adc
cmpsl
fcoms
and
xchg
mov
add
pop
sbb
lea
aas
hlt
popa
mov
sub
iret
mov
icebp
pop
adc
hlt
ficoml
fs
sub
icebp
ja
inc
mov
and
outsb
sarb
int3
rep
mov
jle
mov
adc
lahf
dec
fdiv
add
and
push
dec
adc
xchg
adc
ljmp
xchg
and
pop
push
imul
scas
and
frstor
inc
xchg
xlat
push
es
and
js
gs
cs
scas
dec
nop
in
test
inc
fldl
adc
add
js
out
stc
test
ds
cmp
lcall
or
xchg
jae
mov
adc
out
adc
es
fld
mov
mov
add
out
and
pop
shll
inc
add
and
in
push
movsb
add
or
mov
add
mov
sub
sbb
xchg
adc
repz
lahf
adcb
adcl
inc
inc
push
mov
fwait
out
cmp
xchg
pop
shll
xchg
jmp
lgs
loopne
lock
pushf
mov
cmp
cltd
pop
jge
fcmovnu
ss
cmp
cmp
aaa
push
in
movl
add
dec
loope
cmc
jne
pop
mov
and
mov
xor
outsl
mov
jnp
pop
movsb
cmp
or
idivb
dec
ret
movsb
lock
cwtl
push
inc
movsl
pop
cmp
mov
sbb
in
or
push
lcall
es
addr16
std
movsl
ss
andb
adc
lcall
cmc
dec
adc
cwtl
outsl
rcll
int3
pop
cmp
xabort
xor
in
fcmovu
fists
sub
mov
dec
jo
iret
aad
pop
mov
adc
outsl
xchg
push
pop
pop
aam
jmp
or
xchg
xor
or
xor
out
out
xchg
mov
mov
xor
add
jo
in
scas
cmp
dec
push
and
jge
lcall
xchg
repz
pop
push
inc
push
push
mov
mov
jmp
lods
jmp
mov
enter
cmp
aam
mov
js
aas
repnz
iret
push
aaa
aas
in
mov
cld
lretw
pushf
add
mov
push
scas
lds
mov
es
xor
cmc
sbb
dec
test
lds
cmp
pop
pop
sub
repz
fucomp
das
and
push
lahf
xchg
fildl
sbb
je
mov
mov
xchg
scas
adc
and
jle
cmp
rcll
push
xchg
add
mov
add
dec
cli
leave
pop
inc
lcall
dec
lcall
sbb
or
sub
inc
imul
dec
mov
pop
dec
clc
mov
jg
call
and
adc
inc
pop
mov
loopne
push
push
repnz
xchg
aas
jecxz
xchg
xor
and
xchg
cmp
mov
cmpsl
lds
js
adc
or
into
je
fidivrs
ja
mov
das
mov
std
or
adc
or
push
ss
sbb
rcl
pop
mov
cmp
in
pusha
sub
jle
and
insl
and
idiv
enter
enter
inc
mov
sbb
into
nop
jns
mov
mov
pop
insb
add
sti
das
mov
pop
dec
loop
insb
xchg
sub
xchg
loope
cmp
and
push
lock
sbb
sub
mov
ss
in
iret
inc
dec
les
push
loope
add
mov
lahf
cmpsb
out
imul
loop
and
push
pop
fs
jge
xor
imul
push
shlb
xchg
psllq
mov
scas
aam
out
jbe
movsb
jo
inc
int
push
cmp
mov
jmp
push
push
sub
jnp
and
cli
jbe
xchg
jb
cld
cs
xlat
mov
movsb
popf
pushf
add
inc
add
sbb
or
xchg
mov
push
shrl
adc
inc
add
lret
daa
clc
hlt
fisubl
cwtl
mov
fdivrs
or
mov
xchg
ds
sbb
jg
mov
in
add
aam
pushf
add
aaa
sub
dec
dec
sub
and
sub
jns
das
insl
sbb
adc
lahf
push
mov
into
inc
or
shlb
pop
sub
mov
data16
xor
int
and
jno
xor
js
sub
insb
and
aad
jnp
shr
mov
sahf
outsl
lahf
jp
loope
mov
cmp
test
aam
subl
je
cltd
jno
dec
jbe
mov
sarb
and
dec
fsubs
and
jnp
add
in
xchg
mov
aas
ljmp
hlt
jns
les
lods
pop
mov
sub
and
xchg
mov
dec
testl
xor
sbb
add
ret
xorb
dec
data16
xchg
adc
jns
scas
cltd
test
push
div
mov
pop
ss
sbb
std
add
dec
test
dec
inc
and
repnz
aaa
cmpsl
and
pushl
adc
jae
inc
outsl
xorl
loope
repnz
or
jg
cltd
aas
mov
sub
cmp
sbb
xlat
fadd
es
daa
and
mov
repnz
add
mov
mov
mov
enter
testb
lock
cld
fbld
jl
xchg
cmc
push
ret
jo
mov
imul
add
pop
dec
mov
dec
mov
add
lret
sbb
lods
outsl
pop
sub
sahf
arpl
stos
cwtl
add
dec
lret
sbb
ret
pop
inc
sub
jo
popa
push
sbb
dec
rcrl
jno
outsb
lods
and
mov
stc
lods
and
insl
out
add
lock
scas
pop
jae
push
jo
outsl
out
inc
pop
outsl
inc
shr
push
push
dec
or
les
fdivr
loope
sbb
xchg
inc
mov
arpl
es
in
xchg
lahf
and
incb
xlat
pop
push
xor
mov
xchg
adc
adc
add
cmp
sbb
scas
stos
dec
push
je
iret
movsb
dec
pop
xlat
sub
adc
xchg
pop
int3
or
jmp
mov
scas
mov
sub
or
xchg
das
in
or
mov
xor
sbb
int
shrb
and
jmp
jg
movsl
mov
xor
cld
sub
lds
nop
cmp
je
xchg
orb
jmp
sub
movsb
pop
lret
cmp
or
pop
cmc
cs
ds
xchg
out
sti
fcomps
xchg
inc
mov
fisttpl
lahf
pop
dec
pop
dec
mov
movsl
cmp
jle
les
andb
push
js
test
cmp
or
push
sti
cmpsl
push
pop
or
sbb
adc
push
jmp
mov
mov
ja
into
test
push
popf
lds
cmc
xchg
arpl
fldcw
aas
mov
fisttpl
sti
rcr
and
push
push
and
cmp
outsb
or
dec
push
mov
lcall
pusha
icebp
subl
xor
shlb
lock
les
lds
jle
cltd
fldpi
xor
mov
inc
das
xchg
xchg
popf
inc
cmp
inc
xlat
xchg
pop
jmp
clc
sub
sub
les
and
movsl
cmp
test
aas
and
mov
js
ds
ljmp
in
jmp
xor
ret
or
gs
xchg
ficoms
js
jg
movsb
jns
fisttpl
popa
sbb
dec
mov
sub
decl
arpl
pop
int3
adc
inc
xchg
dec
xor
jnp
in
subl
arpl
adc
xchg
pop
pop
movsb
add
pop
sbb
fsubrs
mov
cmpsl
sub
xor
popf
push
test
xor
sbb
out
and
push
jbe
stos
pusha
push
lea
sbb
cmp
mov
leave
pop
lcall
sub
adc
fsubp
mov
sbb
scas
lods
xor
xchg
ljmp
jo
cmp
xchg
out
hlt
cwtl
scas
cmp
push
or
pop
movsb
sbb
adc
in
ja
jmp
shll
pop
mov
xor
outsl
dec
mov
imul
jecxz
adc
ret
aaa
fnstenv
not
xor
shlb
lods
pop
dec
xchg
stc
insb
test
xchg
sbb
jl
pop
vprotd
cmpsb
cmpb
pusha
adc
adc
and
sbb
xor
movsl
test
jp
enter
push
outsl
jno
push
mov
inc
cmc
mov
jne
fwait
xchg
cli
and
push
inc
cmp
pushf
ret
shrb
orb
rcrb
scas
inc
pop
inc
jne
roll
loop
dec
fnop
aaa
rorb
outsb
add
inc
jge
mov
or
pop
mov
jb
cmpsl
jb
jecxz
adc
or
sti
sbb
loopne
cmp
xchg
gs
daa
in
pushf
clc
push
dec
lea
cmp
cmp
push
and
in
cs
adc
sbb
enter
xchg
loope
adc
dec
call
sub
out
push
pushf
fwait
jo
es
sub
jnp
js
add
pop
gs
jmp
jb
push
aas
lret
pop
or
rcr
ja
cmp
shr
jmp
gs
mov
popf
xor
xchg
or
pop
xor
mov
mov
cmp
xchg
icebp
jbe
mov
sbb
cli
inc
push
repnz
popa
and
or
cmp
test
lds
mov
push
or
call
scas
push
pop
loope
pop
lds
xchg
jno
mov
xchg
gs
sub
hlt
les
mov
add
xlat
enter
out
leave
incb
push
pushf
inc
les
xor
lahf
cmpsb
dec
ds
cli
lods
fwait
mov
mov
rolb
dec
add
jl
fsubrl
adc
adc
into
rcrb
inc
rcrb
pop
mov
jmp
pop
fistps
xchg
or
addr16
xchg
mov
cmp
dec
adc
ret
add
lcall
lods
icebp
lret
cmp
jmp
cmp
pop
xchg
push
mov
inc
sub
or
decl
std
insl
cmpsl
ror
mov
inc
das
mov
cmpsl
je
aam
xchg
jmp
cwtl
add
loopne
cltd
bound
cmp
push
and
cmc
cmp
pop
ljmp
inc
fisubl
stc
sbb
cmp
jne
push
xor
lock
push
xor
pop
jge
pop
out
push
adc
ds
scas
fimuls
mov
lahf
das
sub
lock
cmp
mov
out
xchg
xlat
aaa
dec
jmp
pop
jl
xor
dec
or
dec
movsb
sub
cli
xchg
es
enter
scas
inc
push
shl
insb
jbe
add
jae
ficompl
lds
lahf
leave
rol
stos
cltd
cwtl
dec
jle
sub
inc
fwait
xchg
push
fwait
xchg
adc
repnz
mov
icebp
xor
popa
mov
push
lret
inc
ret
insl
cmc
es
mov
xlat
jg
xchg
sub
xchg
xchg
or
jne
or
mov
xchg
adcb
fdivrs
pop
jg
jo
out
shrl
into
test
shlb
pusha
aad
loop
cld
outsl
and
adc
jno
push
or
lret
inc
fistpl
pop
mov
push
jl
mov
push
or
stc
xchg
nop
dec
lcall
dec
add
lea
adc
jmp
pop
fimuls
test
push
stc
into
cmp
adc
add
testb
adc
rolb
push
cmc
ret
jb
jge
idivl
imul
adc
out
out
add
or
jp
inc
imul
sahf
roll
push
jbe
cmpl
jmp
mov
pop
mov
fwait
in
cmp
mov
pop
jo
cmp
fdivl
push
and
mov
clc
subl
jae
adc
push
sti
imul
mov
ss
add
jb
or
dec
inc
dec
push
xchg
mov
cmp
cwtl
mov
mov
push
sbb
adc
mov
int
add
mov
xlat
loope
clc
push
scas
pop
sti
icebp
inc
add
pop
lret
repz
cli
cs
mov
xchg
sahf
mov
mov
pop
pop
pop
add
cmp
lea
and
xchg
enter
cmp
loop
movsb
mov
fs
jne
jge
repz
fs
dec
out
cmp
lret
mov
pop
hlt
jl
xchg
pop
pushf
shl
call
dec
ljmp
inc
push
in
in
adc
outsb
addr16
dec
das
fwait
add
lahf
arpl
repz
incb
add
sub
stos
cwtl
add
aad
aad
and
pop
fs
adc
sub
stc
lods
ret
push
xlat
xor
mov
rorb
cli
fnsave
jmp
lahf
insb
xor
aas
pop
mov
enter
sti
add
mov
inc
mov
loopne
rcl
ss
inc
sbb
in
jo
jo
push
decl
jecxz
aam
fisttps
mov
lods
shl
inc
stos
aaa
mov
in
push
xor
iret
imul
dec
push
in
sub
fidivrl
mov
popf
sbb
out
jmp
xor
cmpl
jp
daa
hlt
clc
push
cmp
test
xor
cli
scas
loopne
je
inc
fidivs
cmp
out
pop
enter
ja
fistl
mov
jbe
inc
add
aas
mov
push
sbb
sbb
lcall
mov
jge
scas
imul
xchg
mov
out
movsb
cmpsb
out
mov
mov
inc
popa
cmp
ljmp
and
lock
xchg
sub
adc
rcr
jae
push
add
sub
or
xchg
jecxz
mov
and
dec
lock
mov
cmp
test
subl
pop
stc
xchg
test
in
xrelease
bound
enter
xchg
sahf
xchg
jecxz
aad
push
jne
adcl
daa
int3
mov
ljmp
sahf
stos
les
or
mov
loop
loope
andl
add
cs
jnp
into
xchg
into
inc
mov
out
sbb
pop
mov
ret
mov
inc
sub
xlat
fucomp
subl
mov
add
mov
inc
lock
in
add
insb
add
enter
rolb
adc
daa
jnp
inc
xchg
dec
or
out
je
mov
push
add
pusha
lcall
cmc
pusha
mov
lret
jbe
fidivl
fxch
xlat
cmc
sbb
mov
nop
sub
xchg
imul
call
jl
stos
mov
ljmp
xor
arpl
sub
ss
dec
mov
push
inc
das
add
xchg
push
cwtl
dec
sub
push
cmp
xchg
jnp
adc
mov
sti
stos
outsb
cmp
mov
xchg
mov
movsl
dec
clc
cmp
ffree
sub
into
push
out
mov
xor
pop
push
mov
addr16
inc
cmp
mov
jge
adc
xor
sub
mov
pop
stos
int
fs
scas
mov
insl
stc
pop
adc
mov
dec
repnz
inc
enter
into
lcall
sub
addr16
sub
fdivrs
out
pop
mov
lea
inc
out
push
mov
lods
push
repz
jp
xor
sbb
mov
gs
dec
mov
fwait
dec
fdivl
xchg
sarl
mov
dec
andl
movsb
scas
rcrb
fsts
ljmp
or
insl
insb
fs
jns
popa
adc
mov
xchg
mov
xor
xchg
xor
mov
mov
sbb
push
std
mov
outsl
imulb
cbtw
xchg
xchg
ljmp
or
cmp
cmp
inc
in
leave
cld
xchg
lods
xor
pop
jno
mov
add
ja
add
inc
rcrb
pop
push
in
fistpl
mov
out
sbb
xchg
push
insl
mov
es
jmp
aam
mov
ljmp
call
fsubr
jle
insb
sbb
xchg
mov
mov
aas
xchg
cwtl
mov
mov
push
add
mov
pop
cmp
mov
pop
cmp
push
push
dec
ret
cmpsl
test
arpl
jp
pop
sub
and
arpl
out
sub
xchg
sbb
out
outsb
pop
mov
mov
icebp
data16
movsl
add
cltd
sbb
xchg
icebp
loope
xchg
push
push
xor
jns
daa
mov
leave
loop
pop
xor
stos
int3
out
and
sbb
mov
lcall
insb
mov
js
mov
test
idivb
lahf
dec
or
jo
mov
std
shrl
loope
inc
lock
stc
mov
pop
shrb
adc
jne
xchg
mov
mov
inc
sbb
fs
ret
pushf
mull
mov
std
cmp
mov
scas
jecxz
loop
cmp
xchg
lods
mov
cmp
inc
and
pusha
cmpsl
mov
data16
adc
xor
enter
imul
xlat
out
jecxz
ljmp
cmpsl
xor
outsb
ficomps
mov
sbb
ret
lea
out
jmp
cld
xchg
cli
dec
out
pop
adc
cmc
add
adc
push
inc
cmp
push
loopne
xchg
mov
pop
not
pop
xchg
mov
xor
xchg
ret
scas
or
cmp
dec
pop
inc
loop
test
dec
or
and
mov
int3
repnz
test
mov
inc
cmp
jno
idiv
inc
sahf
fs
sar
or
les
cltd
rcrb
mov
xchg
xchg
lret
cli
mov
sub
xchg
fistpl
neg
clc
sbb
inc
mov
insl
loope
dec
daa
mov
out
aas
aas
push
sbb
jl
cmp
lcall
jecxz
pop
adc
dec
ja
int3
mov
leave
subl
ljmp
outsl
ret
jp
pop
or
dec
insb
add
loope
jno
mov
inc
mov
jns,pn
push
mov
loop
cld
fildll
fdivr
icebp
xor
sbb
nop
add
aam
add
xor
add
clc
fisttpl
into
in
lods
stos
push
sbb
xor
mov
sub
cmpsl
loopne
fisttpl
call
aaa
stc
add
fisubrl
push
xorl
cmpsb
jl
and
xlat
scas
leave
aaa
ja
in
sbbl
rcll
es
ret
movsb
xchg
loopne
aaa
arpl
fimuls
shlb
jmp
xor
decb
adc
cmp
sti
pop
inc
ret
in
out
mov
push
fiadds
jl
test
cmp
out
add
sbb
and
mov
mov
and
in
insl
sbb
sbb
and
mov
dec
aad
mov
inc
test
inc
lds
dec
cmp
loop
das
aas
or
sbb
pop
shll
shrb
stos
push
add
or
addr16
xor
sub
in
mov
arpl
jle
ds
loopne
enter
xchg
cmp
mov
jbe
mov
shll
xchg
gs
mov
xorb
xor
and
and
add
pop
dec
cmp
sbb
repz
jp
dec
arpl
idivl
movsb
jo
loope
xor
rcrb
pop
daa
std
and
aam
adcl
add
and
lret
pop
mov
nop
sbb
jg
xchg
sub
into
push
or
jbe
inc
mov
test
xchg
movsl
jmp
cwtl
movsl
sbb
ror
mov
jge
fs
dec
push
enter
scas
lods
shlb
cmp
adc
push
ds
rol
into
sbb
pop
stc
and
xchg
push
sbb
popf
sbbl
rclb
adc
addr16
in
repz
stos
lcall
cmp
sub
dec
mov
jne
rcrl
stos
fcoml
jle
push
sub
nop
in
das
es
in
je
push
xchg
das
rcrl
inc
pushf
lods
inc
lods
sub
and
dec
fiadds
insl
pop
test
jg
inc
icebp
lea
jb
jnp
arpl
cs
adc
mov
or
popfw
sub
lret
lret
sti
cmp
push
jg
mov
stos
mov
gs
or
jmp
adc
incb
pop
jl
add
adc
pop
sahf
add
sbb
and
cmp
xchg
addr16
addr16
push
jp
jae
push
xchg
out
sarl
push
pop
into
mov
movl
popf
cwtl
lret
push
popf
les
xchg
sbb
rcll
test
shrb
add
das
adc
inc
out
xchg
cwtl
or
stos
xor
mov
mov
jmp
popfw
mov
xor
sub
adc
jbe
imul
in
std
ja
insb
cmp
push
push
shlb
inc
jb
sub
xchg
jmp
xor
jl
sbbb
aas
jge
je
xchg
jne
mov
and
dec
hlt
adc
pop
pusha
push
nop
insb
xchg
test
jecxz
call
sbb
sbbl
adc
sub
push
or
jl
mov
ja
fiaddl
sbb
div
push
mov
rolb
mov
push
push
mov
rcl
mov
pop
adc
loop
or
outsb
sub
in
push
push
fdivs
fs
imul
or
pop
push
or
push
inc
inc
les
mov
dec
lahf
adc
inc
push
xchg
aas
xlat
jl
cli
cmp
test
inc
push
test
in
add
ret
ljmp
mov
dec
daa
and
shrl
rorl
jno
or
cltd
sub
mov
and
divb
clc
sbb
sub
mov
fdivs
push
jnp
dec
lret
xlat
pushf
dec
jle
cmp
mov
cmp
push
lahf
inc
mov
mov
scas
mov
pop
dec
pop
popf
xlat
xchg
jae
lsl
mov
push
negb
testb
fsubrl
mov
inc
js
je
aaa
notb
adcb
cmp
cmp
dec
push
or
ljmp
fistps
adcl
popf
in
or
push
test
mov
inc
mov
or
or
fxch
jne
out
loop
inc
rcr
or
jmp
mov
jge
sarl
push
cmp
clc
add
mov
pop
ss
jp
add
sti
lock
pop
cli
scas
mov
cmpl
push
pop
or
dec
and
out
fcoms
out
pusha
adc
adc
adc
mov
stos
jl
xchg
mov
scas
fcmovnbe
xchg
sub
mov
xchg
sbb
aam
pop
inc
and
cmp
mov
pop
imul
mov
mov
lds
sub
push
add
inc
and
adc
cmp
cld
sbb
inc
xchg
xchg
dec
jge
cmc
pusha
mov
pop
fistl
lds
add
aad
cli
adc
and
call
push
dec
push
insl
cs
fdivrl
cwtl
push
jmp
into
jnp
icebp
out
sbb
xchg
push
loopne
lock
and
jg
fldln2
inc
jno
ret
jae
sub
cs
out
jns
jg
jmp
mov
jge
int
movswl
push
test
xchg
cmc
mov
aas
cmp
fs
or
or
cmc
mull
sbb
xor
cmp
scas
subb
xchg
std
and
jbe
pop
fadds
or
test
mov
cmp
mov
pop
dec
and
xor
int
out
pop
fstpt
icebp
insl
aas
daa
leave
andl
cltd
pop
pop
jmp
push
cmp
mov
imul
aam
adc
pop
or
jg
cmp
das
fsubrs
cmp
lock
xor
std
stos
cmp
jecxz
inc
ljmp
and
or
jae
fwait
pop
lahf
cmp
iret
jne
fwait
das
imul
adc
test
dec
ja
cmp
inc
add
sbbb
push
int
ror
lods
rep
shr
aaa
in
cwtl
ja
jl
jle
add
or
cwtl
pop
mov
mov
lcall
jge
rol
sub
xchg
stos
or
mov
mov
xchg
sub
pop
push
inc
pop
jne
add
cwtl
pop
test
test
and
scas
enter
testb
jb
arpl
push
mov
inc
jne
mov
mov
cwtl
es
pop
iret
sub
aad
in
test
cwtl
bound
popf
cmp
xor
inc
or
out
jne,pt
loop
dec
or
xor
sub
lcall
aad
push
iret
jmp
andl
mov
pop
jle
lret
jae
movsb
mov
jne
inc
dec
xchg
mov
push
pop
push
dec
jmp
pushf
pop
int
pop
jbe
icebp
lahf
lea
repz
scas
mov
loop
and
fsts
leave
xchg
icebp
xchg
out
dec
jo
outsl
iret
inc
add
sbb
ds
nop
imul
mov
xchg
inc
xor
or
sub
mov
add
push
daa
mov
cmpsb
mov
jle
mov
jno
je
pushl
sbb
mov
push
daa
out
lret
test
cmp
push
in
std
cmp
dec
shll
cmp
jbe
adc
pop
scas
mov
jns
pop
scas
cmc
repnz
xor
std
jbe
arpl
xor
pop
jnp
iret
sti
repnz
push
xor
rep
adc
push
adc
js
sbb
int
sbb
pop
sub
aad
test
mov
or
scas
mov
mov
fs
loop
sbb
fistpll
jae
rorb
push
mov
add
mov
push
xchg
in
popl
cmc
jecxz
lea
mov
sbb
pop
adcb
add
stos
sub
inc
pop
pop
xor
test
adc
pop
cmpsl
jae
mov
mov
pop
movsl
data16
mov
cwtl
icebp
lret
xor
push
mov
and
or
xchg
jle
push
in
jae
in
jp
pop
xchg
xchg
pushf
jae
fists
addr16
mov
sub
stos
pop
adc
mov
cmp
cwtl
lret
enter
inc
lock
aas
lahf
lahf
aam
imul
pushf
dec
das
movsb
in
fstpl
adc
into
dec
cmc
in
mov
push
outsb
lret
clc
jecxz
aad
jg
add
cld
ss
cmp
push
pop
cmp
cli
jp
cmp
nop
inc
mov
cmpb
mov
and
data16
cmp
inc
outsl
cmp
mov
out
pop
mov
pop
divb
mov
cmp
out
add
addr16
repz
fiaddl
gs
lock
gs
sub
lcall
cmc
test
pusha
scas
jnp
test
mov
and
scas
inc
or
jae
xlat
fdivs
cmp
bound
mov
push
repz
mov
dec
shlb
jae
addl
inc
or
jnp
popf
xor
pop
aaa
dec
outsb
fsubrs
lcall
dec
jecxz
push
mov
cmp
sbb
mov
push
pop
addr16
adc
mov
fimull
pop
test
jnp
cmc
test
add
test
rcrb
pusha
xorb
in
and
int3
inc
push
sub
test
enter
decl
mov
cmp
lret
aad
iret
or
sub
insb
sahf
ret
jp
adc
das
bswap
dec
subb
adc
enter
xchg
sbb
in
js
imul
data16
push
mov
dec
sbb
dec
cs
js
arpl
dec
fwait
push
mov
test
repz
cmp
je
pop
or
push
mov
aam
jmp
into
pop
inc
and
lock
rcr
dec
outsl
mov
and
sbb
jno
mov
and
push
pop
into
xchg
sti
mov
scas
insb
add
cmp
xor
dec
push
imul
into
add
in
fiaddl
sbb
adc
fcmovu
push
orps
sbb
roll
dec
push
mov
dec
enter
sub
sub
sub
lahf
mov
mov
jb
je
pop
out
in
ss
cs
ss
pop
jge
movsb
mov
add
adc
lea
sub
clc
das
incl
and
in
mov
cmpsl
fcmovnu
jp
dec
adc
jo
roll
xchg
jmp
scas
test
push
xor
sub
jle
vmovaps
or
or
mov
pop
outsl
clc
out
mov
sbb
rcll
outsb
push
pop
pusha
and
jle
pop
scas
sbb
adc
clc
adc
inc
mov
pop
rorl
insb
push
fdivs
xor
push
imul
pop
ret
popf
arpl
in
cmp
or
cmp
push
mov
mov
inc
repz
insb
jge
lahf
ja
mov
push
les
cmpsb
fldt
hlt
pop
mov
or
bound
mov
fisttpll
and
out
push
iret
dec
nop
inc
xchg
jne
jl
dec
jecxz
pop
rcrb
stos
add
stos
jmp
sbb
xchg
inc
lret
outsb
xlat
cmc
jae
rolb
fists
add
mov
movsl
xchg
mov
dec
push
je
xchg
sbb
inc
add
popa
xor
xchg
mov
xor
jl
push
loope
arpl
aad
xorb
adc
inc
clc
adc
mov
or
shl
push
adc
jbe
cwtl
mov
rcll
mov
adcl
stc
mov
push
xor
fnsave
xchg
mov
aad
rclb
or
dec
shl
push
outsb
lods
movsl
push
mov
sbb
cli
xchg
cld
sub
jbe
call
fs
movsb
out
cld
mov
adc
mov
out
imul
mov
gs
jp
pop
xchg
test
jmp
pop
enter
lods
push
mov
pop
int
sarl
sti
pop
dec
push
push
and
push
add
in
add
repnz
pop
or
push
xor
cmpsb
mov
xor
cmc
or
cmp
xor
mov
jmp
xchg
ret
mov
sub
scas
jb
inc
jno
sbb
imul
add
mov
popw
mov
mov
and
add
cmc
ret
add
fwait
sahf
cltd
sub
sub
pop
hlt
xor
pop
pop
loopne
imul
sub
cld
pop
mov
mov
enter
mov
xchg
push
xchg
cmp
adc
test
pusha
mov
fldt
imul
aad
inc
call
in
ret
aaa
sbb
and
mov
mov
xchg
movsb
fsubrl
into
daa
lea
xor
mov
in
jg
sti
jp
pop
notb
add
dec
push
cld
mov
dec
push
lahf
pop
fcompl
inc
in
add
jbe
mov
ljmp
mov
enter
sar
mov
push
add
gs
data16
lret
divl
cltd
xlat
inc
cld
push
or
mov
rol
pop
cmp
cld
sub
push
pop
and
insb
daa
cmp
cmpsb
scas
lods
adc
sbb
sti
push
and
call
hlt
aas
xchg
mov
mov
inc
xchg
fbld
pop
repz
insl
add
xor
inc
je
movsb
push
test
jp
mov
aaa
push
adc
imul
in
cmp
mulb
mov
scas
movsb
lahf
mov
loopne
jle
addl
pop
xchg
clc
push
lock
mov
pusha
ss
pop
outsb
xchg
jo
mov
mov
hlt
inc
fistl
shll
fisttps
or
push
addl
xchg
cli
lock
enter
sti
addr16
push
adc
sarb
jl
loope
xchg
das
out
inc
mov
sub
xor
cmpsl
cmpl
stc
xor
cmc
mov
add
push
fstpl
sarb
clc
xor
mov
sub
mov
cmp
xchg
pushf
sbb
add
xor
mov
xchg
fbstp
addr16
xlat
les
subl
and
ljmp
mov
ljmp
push
aad
fcomps
cmp
shl
push
push
ds
fucomp
in
mov
out
rcrb
popf
loope
aaa
pop
push
rcrb
fcmovbe
test
inc
jnp
lods
dec
aaa
pop
xchg
pop
jb
lods
cmp
push
insb
fsubl
jnp
out
add
sbb
and
out
adc
addl
sbb
loope
mov
cmp
push
inc
jmp
insl
int3
lock
pop
ss
lret
js
sbb
cwtl
pop
js
outsl
jg
cmp
mov
sbb
ds
add
das
sub
sub
mov
test
fbstp
mov
out
sub
je
adcl
mov
xchg
imul
mov
xor
mov
scas
lea
sub
or
inc
popa
dec
mov
mov
inc
xchg
dec
das
add
jbe
fsts
es
pop
test
hlt
repnz
add
ss
or
mov
std
stos
inc
dec
mov
aad
stc
loope
sti
xchg
inc
leave
pop
jo
xor
pop
es
cli
and
mov
or
sahf
xchg
das
pop
inc
imul
xor
and
stos
jne
add
push
arpl
incl
lock
sub
ljmp
xchg
sub
cmp
xorb
or
iret
arpl
das
std
mov
rcr
cmp
aaa
scas
lea
cmp
fistpl
subb
daa
call
pop
dec
jl
adc
es
test
fisttps
aam
aad
aam
cmpsl
sub
mov
bound
imul
in
mov
insl
rcl
frstor
xorb
fdivr
mov
incl
popa
hlt
sub
arpl
adc
mov
fdiv
push
jnp
xchg
xor
push
sbb
and
adc
cmp
pop
add
rolb
fildl
cmovl
andb
test
aam
out
jns
add
and
sar
repz
push
or
ret
adc
sbb
mov
inc
outsl
test
pop
repnz
pushf
xchg
lret
cmpsl
fcomps
int3
in
lcall
dec
jecxz
in
fcmove
mov
mov
je
fimull
clc
ss
pop
sarl
mov
sub
xchg
ret
shrb
lods
cli
pop
bound
loopne
sbb
push
fcoml
xorb
push
addb
dec
push
cmp
dec
xchg
in
cmp
inc
mov
mov
ret
push
fnstsw
cmp
dec
sbb
ret
hlt
aas
mov
out
jmp
or
cld
or
lods
mov
push
pop
sub
lock
and
idivl
xchg
push
cmp
lret
xchg
xlat
push
lods
dec
sub
xor
stos
pop
dec
aam
insl
mov
jne
jp
mov
or
jmp
scas
js
test
mov
loopne
mov
lods
icebp
sub
cmc
sub
jb
xor
outsl
inc
movsl
fbld
shlb
inc
in
stc
push
xchg
test
subb
sar
lret
faddl
aas
in
and
lcall
fstpt
push
xlat
bound
push
push
xor
gs
inc
fnsave
test
push
les
or
jl
sub
cmc
jo
test
loopne
sbb
das
aaa
insb
push
sub
jl
push
insb
cmpl
in
pop
shl
mov
mov
imul
adc
add
or
cmpsb
jb
mov
push
dec
adc
incl
cmpsl
sub
rcrb
lods
or
mov
xor
mov
pusha
cmpsl
stos
repz
ja
xchg
xor
inc
dec
jmp
pop
sti
sbbb
xor
lds
hlt
call
sbb
dec
cmp
sub
lret
subb
xor
add
test
cli
pop
daa
popa
loopne
outsl
jl
mov
and
cmp
pop
addr16
scas
ret
jne
sub
sub
popf
dec
pop
push
repz
fnstsw
sbb
js
call
and
rcl
cmpsl
jb
adc
aam
out
mov
cmp
das
lea
mov
add
sub
mov
out
ret
jl
inc
pop
mov
fistl
cmp
call
shll
jns
jp
add
mov
sbb
imul
stos
imul
fwait
int3
inc
shlb
jp
in
out
out
sub
mov
mov
xlat
pop
jb
aam
and
cmpsb
das
sahf
cmpsl
sbb
dec
into
jbe
adc
das
mov
mov
push
adc
stos
or
icebp
lahf
enter
or
mov
and
dec
add
test
dec
cltd
addr16
and
fisubrl
cld
sbbb
std
imul
sub
lock
fwait
dec
movhps
sub
sbb
add
jmp
mov
pop
js
pop
call
xchg
and
and
jmp
pusha
pop
aas
push
add
subb
sub
mov
pop
jae
gs
out
lret
imul
idivb
mov
aad
inc
bound
pop
dec
inc
sbb
mov
out
jecxz
hlt
sbb
jp
lcall
mov
call
ret
movsb
mov
das
mov
xor
push
das
mov
les
iret
mov
jno
scas
cmpsb
adc
sbb
stos
dec
call
inc
and
test
dec
repz
int3
and
cwtl
push
inc
sbb
cmp
or
add
sub
sbb
or
sti
pop
or
xchg
js
xchg
cmp
test
mov
insl
or
cmc
jge
mov
or
mov
inc
sub
inc
xor
adc
pop
lea
adc
mov
and
int3
cmp
sub
das
enter
jb
test
lock
sbb
fs
pop
repnz
xchg
and
and
sub
out
mov
push
out
out
mov
push
aaa
daa
scas
into
sub
lcall
pop
xor
loop
add
imul
jecxz
cld
pop
and
out
pop
das
adc
push
jnp
enter
pop
pop
fidivrl
push
mov
cmp
test
stos
mov
std
in
adc
add
pop
mov
lahf
xor
repz
adc
xor
cmpsl
clc
or
js
jmp
rcll
xchg
mov
pop
add
cld
out
pop
adc
xchg
xlat
push
arpl
xor
mov
inc
xchg
pop
cmp
pop
add
sbb
push
or
inc
pop
loop
cmp
cmp
js
bound
mov
cld
mov
dec
dec
pop
or
dec
jbe
mov
push
pop
mov
outsb
cmpsb
mov
adc
or
aas
mov
jno
outsl
pop
xor
ss
je
cmpl
inc
scas
jle
add
jg
test
and
icebp
lea
in
sub
dec
mov
lea
loopne
jae
inc
or
cmp
loop
js
aad
cmp
aam
test
inc
push
aam
adc
ret
xchg
xor
xchg
xchg
dec
aam
shr
mov
icebp
popf
in
das
out
mov
cmp
rcrb
inc
xchg
and
push
jecxz
ss
mov
in
xchg
lcall
or
mov
das
and
insl
aaa
or
addr16
cs
dec
dec
jbe
hlt
push
je
pop
mov
js
std
mov
das
adc
subb
push
rorl
int3
aad
push
cli
push
cmpsl
dec
jle
sub
xlat
out
lahf
cmp
mov
mov
cmpsb
loopne
mov
or
rolb
aad
push
mov
sub
xchg
stc
cmp
mov
in
out
push
sub
scas
out
and
and
pop
bound
sbb
ret
stc
mov
adc
jg
push
jg
sub
mov
insb
cmpsb
fdivs
stc
xlat
push
sbb
jl
cmpsb
pop
lcall
xor
cmp
enter
inc
shl
loop
mov
add
add
call
das
addr16
xchg
das
inc
xchg
mov
and
push
in
mov
rcll
mov
pop
xor
and
imul
andb
iret
fsubl
jmp
mov
cs
mov
mov
hlt
cmpsb
movsb
push
adc
xor
js
loop
nop
idivb
les
jl
and
and
jo
push
cmpb
pop
int
ficoml
aas
mov
pop
adc
out
ja
xlat
jb
xchg
jl
ret
mov
push
loop
outsl
mov
push
mov
jle
outsl
fnstcw
push
cmovg
lds
add
loope
jle
sbb
fsubp
mov
int3
ljmp
mov
lods
sti
inc
es
les
dec
jle
sbb
and
sub
jp
sbb
hlt
popa
ljmp
faddl
mov
ret
out
sub
shll
mov
xchg
sti
scas
shlb
shlb
int3
add
xchg
pop
push
sub
fstl
sub
mov
pushf
sbbl
dec
push
mov
stc
xchg
add
sahf
ss
mov
out
mov
dec
leave
cmp
das
xor
aaa
mov
push
xchg
addb
stos
rcrl
lcall
push
push
dec
push
je
mov
lea
xor
pop
dec
dec
ds
sbb
jge
cmp
or
fimuls
sbb
dec
sbb
out
cmp
out
xchg
mov
test
movsb
rcrb
loopne
jno
jge
mov
lcall
mov
mov
xchg
in
fidivs
fstp
jmp
out
shl
add
lock
lret
fdivr
scas
fcoms
add
mov
enter
jecxz
xchg
xchg
movsb
mov
mov
mov
jge,pt
jbe
xchg
data16
mov
bound
outsl
movb
in
or
in
repnz
sub
aam
cmp
clc
push
or
push
lret
dec
fists
stos
sti
push
xchg
jecxz
push
addb
cmpsb
or
aad
jno
inc
add
jae
lods
xor
out
fld
xlat
je
shr
sti
stc
nop
and
sbb
mov
ss
cmp
subps
sbb
jo
cmp
xchg
push
push
stos
sub
scas
cltd
lahf
inc
imul
imul
decb
rorb
lret
sarb
push
pop
jno
jp
in
push
movsb
js
out
jo
xchg
test
adc
in
xlat
pop
jl
adc
cmp
stos
dec
cs
xlat
sub
int
arpl
jno
cmp
std
leave
xchg
dec
ficoms
pandn
icebp
mov
sbb
push
mov
sti
sub
dec
cmp
mov
mov
xor
mov
and
inc
jmp
out
loopne
mov
lods
sub
add
popa
xchg
sarb
inc
movb
sbb
rcrl
rorl
mov
or
xchg
jne
cltd
jg
mov
pushf
mov
ror
lret
dec
shrb
aam
mov
das
add
fadd
out
dec
xorl
xor
movb
mov
dec
int
cmp
sub
mov
or
nop
push
xchg
push
push
sbb
jg
adc
push
mov
mov
inc
jno
insl
jnp
cltd
mov
loope
stc
fwait
punpcklwd
push
int3
push
int
test
xor
data16
mov
xchg
cmp
inc
js
mov
mov
push
push
es
movsb
lods
jecxz
scas
add
mov
pop
xorb
inc
adc
inc
and
sbb
mov
mov
and
mov
xor
mov
mov
sub
inc
ss
fyl2xp1
popa
lret
bound
jg
daa
rcl
adc
xchg
leave
xor
int3
push
push
mov
mov
sahf
xchg
mov
cmpl
in
test
loop
popa
adc
es
scas
enter
ret
xchg
xchg
repz
lcall
dec
xchg
mov
xor
mov
mov
mov
fbstp
push
adc
pop
dec
push
out
xor
mov
mov
sub
lods
push
aas
push
xor
in
sub
mov
cmp
scas
lret
jecxz
subl
enter
or
out
scas
in
push
mov
mov
xor
jecxz
cmpsl
dec
mov
outsl
pushf
jmp
aas
mov
jns
lret
sarl
xchg
jg
gs
jmp
jecxz
in
xor
and
sub
jbe
push
push
stos
adc
test
sti
mov
fwait
push
imul
pop
lods
pop
repz
arpl
add
inc
bnd
popf
test
adc
in
ds
mov
mov
mov
outsl
addr16
fidivrs
mov
pop
push
lock
xor
mov
cmp
mov
push
lods
push
out
push
mov
int3
shll
in
dec
and
xor
aad
fmull
popa
leave
xor
inc
cs
cmp
pop
xchg
mov
repnz
mov
dec
aaa
xchg
lds
addr16
repnz
and
xchg
sub
mov
pop
dec
into
push
enter
mov
les
mov
xor
lret
push
out
jbe
hlt
mov
mov
popa
in
and
ss
data16
jno
hlt
mov
adc
sti
jns
cwtl
pushl
hlt
shrl
in
dec
jecxz
les
lar
insl
fisttpl
aad
add
adc
scas
fcoms
jmp
jne
xchg
pop
jecxz
dec
addl
cwtl
sti
gs
xchg
daa
jle
in
pop
mov
ja
mov
push
mov
ja
lret
pop
ljmp
adcl
inc
xor
push
rclb
sub
int3
mov
adc
insl
es
xlat
xlat
rcl
mov
pop
ret
outsb
mov
xchg
inc
rolb
fidivrs
int3
std
sub
aad
leave
or
xchg
jl
or
xor
subb
or
mov
xor
stc
loopne
jp
adcb
incb
rol
mov
das
xchg
or
sub
fwait
xlat
fwait
loop
pop
lds
mov
clc
movsb
imull
imul
inc
sbb
push
rcll
sub
pop
adc
test
pop
jl
xchg
push
and
mov
dec
movsl
and
mov
add
xchg
push
jl
adc
loop
insl
dec
jbe
nop
push
adc
cld
and
add
dec
daa
inc
lds
insb
mov
jb
add
repnz
cmp
cmc
adc
mov
mov
das
inc
mov
and
inc
adc
push
xchg
mov
lret
sub
shlb
sbb
int3
jnp
call
clc
jbe
stc
xchg
pop
lret
cwtl
push
inc
sti
mov
cs
pop
mov
sub
stc
test
jmp
popa
push
mov
fucompp
sub
mov
xchg
imul
push
je
scas
cmpsb
test
les
xchg
sub
mov
movsb
testl
mov
cmp
cmp
mov
xor
stos
mov
xchg
mov
push
lods
test
stos
repz
pop
mov
aam
repnz
dec
jecxz
xchg
jg
out
mov
pop
dec
xchg
cmc
pop
ret
push
lods
lock
jne
lcall
cmp
ja
test
cwtl
je
adc
jo
test
pop
or
leave
sub
sbb
mov
and
cmp
jbe
leave
loope
pushf
jbe
into
sub
inc
xlat
mov
addr16
xchg
jle,pn
and
or
pop
lock
loope
movsl
sti
cmp
mov
dec
mov
pop
xlat
ja
and
mov
pusha
pop
es
dec
mov
xchg
xchg
cmp
xchg
sbb
or
add
jle
cld
xchg
or
push
xchg
cltd
fnsave
cmp
mov
data16
pmuludq
cmp
cmp
pop
insl
lret
mov
stos
jge
aam
dec
mov
jne
lret
cs
mov
rcrb
adc
mov
mov
and
cld
mov
std
test
dec
inc
test
xor
mov
insl
out
fisttps
mov
add
xchg
jle
jo
push
insb
les
lds
insl
rolb
or
gs
and
push
enter
jb
mov
sub
pop
mov
mov
sbb
pop
inc
hlt
lods
popa
inc
add
loopne
and
ja
in
and
es
sub
jno
xor
xlat
loopne
sbb
push
adc
adc
pop
mov
xchg
insb
fmuls
pop
mov
rcrb
test
ret
cmpsb
jns
push
jbe
and
fdivl
xchg
je
loopne
adc
sahf
sahf
xlat
jecxz
mov
sbb
es
fwait
adc
das
test
out
lea
pop
test
repz
out
lods
cmp
lahf
sbb
push
mov
loopne
xchg
out
insb
pop
push
sub
repnz
pop
int3
dec
int3
add
push
mov
outsb
mov
jne
js
dec
lods
addr16
inc
ret
cmpsl
fists
shlb
cwtl
icebp
mov
xbeginw
add
mov
and
movsl
aas
in
push
push
nop
shrb
fmull
cld
mov
pop
add
jo
movsl
push
loope
pop
into
in
push
push
lock
dec
push
pop
add
js
pop
jbe
mov
mov
pop
xchg
jb
dec
mov
lcall
neg
pushf
cmp
jo
and
cmp
sbb
js
mov
movsl
int
xchg
xor
mov
or
and
mov
pop
pop
imul
ret
fcmovb
fwait
stos
dec
fldcw
cli
xorb
adc
mov
popl
imul
mov
rorb
and
mov
xchg
out
adc
into
iret
cmc
movsb
xor
pop
outsb
add
push
ret
lods
dec
push
fwait
mov
dec
jmp
shll
test
push
xorl
xor
out
mov
jp
int3
xchg
mov
test
sti
gs
mov
cmpsb
cmp
pop
xchg
and
ficompl
inc
push
and
es
jb
mov
inc
data16
stos
mov
pop
and
xor
testb
cmc
flds
cmpsl
mov
add
xchg
imul
in
dec
aad
mov
add
fwait
aad
out
mov
and
jo
in
xchg
sbb
adc
not
add
mov
cmp
push
xor
lahf
dec
idivb
sbb
cmp
lods
adc
ucomiss
mov
leave
in
add
adc
inc
es
xchg
mov
orb
jg
mov
cmp
faddl
dec
cmpsl
rcl
movsl
outsb
add
mov
lods
jae
cmp
lahf
mov
sub
pop
test
icebp
fisubl
out
pop
bound
push
repz
sarb
xchg
jge
sti
push
sub
mov
push
das
ror
hlt
addr16
mov
rclb
mov
fadds
jl
cltd
in
pop
dec
push
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
dec
cmp
shrl
sub
arpl
push
jne
mov
mov
xchg
sub
push
push
sbb
sbb
dec
or
inc
div
js
adc
or
push
in
loopne
adc
lock
movsb
inc
cmp
rcll
xchg
nop
push
push
fidivs
sub
push
addr16
andb
sub
movntq
insb
adc
jge
das
es
arpl
jl
pop
call
addl
jns
fidivrs
ljmp
fisttpl
mov
cmp
xlat
repz
or
outsl
scas
jo
mov
fs
cmp
add
loope
cmc
push
mov
inc
dec
cmpsb
mov
outsb
dec
jl
fadds
shrb
clc
xor
daa
stos
popa
and
mov
aas
bound
fcomps
movl
loope
xchg
cmc
mov
lcall
pop
loope
dec
push
push
imul
mov
ficoms
xor
mov
gs
movsb
sub
je
sbb
dec
push
shl
cld
sbb
ret
bound
test
fidivs
adc
pushf
lods
dec
sbb
push
mov
lods
in
jb
and
push
in
inc
cmp
out
mov
and
mov
scas
stos
dec
and
scas
and
mov
mov
add
gs
arpl
and
adc
int3
test
and
push
pusha
add
sub
es
ja
call
sub
int
xlat
xchg
in
cmp
adc
sbb
ja
int
or
xchg
fimull
test
mov
push
or
inc
popa
fsubrp
push
movsl
call
fstpt
xchg
push
push
jp
push
mov
sti
dec
cmp
mov
bound
mov
in
adc
aad
stos
sub
xlat
push
frstor
mov
jge
push
cwtl
int
mov
jb
in
fsubl
sbb
dec
and
sbb
getsec
inc
repz
cmp
shrl
sub
cwtl
push
pusha
shll
cwtl
cmp
dec
mov
cmpsb
daa
imul
cmp
divl
ja
aam
xchg
ljmp
mov
shrb
div
cld
jb
add
aam
mov
repz
sbb
arpl
pop
jg
popa
push
and
cmc
shl
inc
cmp
xchg
cmc
pop
xlat
push
cmpl
inc
movsb
js
jmp
mov
and
dec
cs
sub
aad
lods
sub
sbb
outsl
pop
loopne
or
cmp
pop
xchg
adc
and
aad
jecxz
push
lock
xor
aas
sbb
aas
pop
cli
inc
sbb
dec
pop
ret
lahf
insl
dec
cmp
xchg
dec
in
mov
cmp
and
movsl
jno
and
into
add
pop
jbe
std
push
cmp
sub
clc
out
or
jnp
mov
xor
pop
fldcw
cmp
jmp
fs
xor
lods
inc
jbe
inc
ss
lahf
loope
pop
lahf
leave
mov
movsl
push
icebp
and
fnsave
jmp
icebp
stos
sbb
rorb
pop
sub
aad
dec
cmc
adc
pop
roll
jl
jecxz
mov
xor
push
mov
mov
push
inc
add
pop
and
rcrl
xorl
xchg
lret
int3
mov
int
pop
mov
sub
test
pusha
int
and
or
loop
lods
movsl
pop
sarb
fistl
jo
ljmp
je
out
pop
ss
and
push
xor
jp
test
dec
mov
repnz
mov
inc
cli
out
jo
pop
jne
mov
imul
adc
and
mov
mov
leave
int3
movsb
enter
mov
fidivs
sub
shrl
shl
in
mov
lret
mov
mov
into
push
ss
or
push
push
into
subb
xchg
out
inc
shrl
xchg
mov
or
add
push
xor
mov
push
loope
mov
js
les
push
mov
sbbl
ret
sbb
mov
inc
test
adc
mov
imul
call
xchg
dec
pop
scas
jnp
scas
inc
clc
push
mov
sti
sti
enter
xor
cmp
cli
or
jb
lea
sbb
mov
add
push
loopne
and
push
mov
aaa
enter
mov
add
add
test
in
in
cmp
mov
dec
daa
xor
ljmp
out
int
or
ror
add
adc
push
or
lret
jge
push
jmp
push
daa
inc
clc
bound
jge
mov
sbb
adc
out
pop
or
or
sub
sbb
push
aam
pop
inc
aam
sti
repnz
test
pop
jns
cwtl
push
stos
or
adc
inc
or
inc
push
mov
or
pop
xor
hlt
pop
int3
ljmp
xor
xor
jne
push
cmpsb
or
cmp
scas
jnp
insl
imul
call
mov
dec
xchg
jno
std
push
pop
test
jl
cmp
loopne
xchg
sub
or
into
sub
mov
loope
nop
cs
outsb
call
cltd
ret
xor
push
mov
imul
adc
push
pusha
mov
cld
pop
xor
sbb
sub
mov
mov
jmp
lahf
xchg
xor
aad
push
fisubl
or
movsb
in
jae
dec
int3
insl
shll
out
xor
sbb
dec
mov
test
pop
cmp
cmp
lret
add
pop
xor
push
mov
mov
add
dec
lods
shlb
lret
sub
jg
sbb
mov
and
cmp
daa
mov
jg
ret
fmul
inc
int3
gs
daa
mov
call
cs
ss
dec
lods
stos
jg
and
xchg
ss
jge
lcall
jnp
adc
push
rcr
sbb
jp
sbb
shll
sbb
jge
sub
out
cli
inc
lods
nop
jecxz
cld
mov
adc
popf
mov
sbb
jae
cmp
pop
xor
aas
xorl
inc
xchg
inc
test
icebp
mov
sbb
repz
out
dec
int
popw
push
jg
pop
ret
push
xor
testl
lea
mov
pop
xchg
xchg
mov
adc
mov
fisubs
sahf
add
jp
xchg
cltd
shrb
rcrl
push
addl
and
movsl
fsubrs
dec
adc
test
cmc
adc
inc
lret
out
fcomps
cmp
adc
insb
push
insl
loope
xchg
mov
pusha
mov
mov
inc
clc
xchg
mov
dec
cltd
xor
mov
cld
mov
test
mov
pop
sbb
mov
xchg
clc
add
mov
xchg
pop
clc
push
addb
jns
icebp
sbb
aaa
clc
and
push
cwtl
push
mov
into
inc
add
push
jmp
cmpsl
mov
repnz
fidivs
jmp
hlt
ljmp
mov
mov
adc
ja
int
xor
inc
cwtl
test
out
loope
mov
xchg
jbe
push
cmp
inc
popf
cmc
or
cmpsb
mov
or
out
dec
gs
sahf
hlt
pushf
adc
sub
jl
jns
adc
cmp
lea
cwtl
les
test
push
lahf
dec
out
lock
xor
xor
sbb
add
xor
sbb
sub
jno
stos
insl
or
mov
lods
arpl
cmc
sub
fucomp
cmpsl
or
jmp
xor
fbld
mov
mov
mov
xchg
push
xorl
test
repz
inc
sbb
sub
fldenv
xchg
mov
fstp
add
mov
in
pop
das
dec
pop
insl
rcr
pop
stos
xor
pop
xchg
jbe
xchg
sbb
gs
out
jge
jmp
mov
sbb
je
jae
inc
enter
nop
int3
rcrb
jecxz
icebp
lods
sbb
sbb
pop
pop
xchg
xchg
dec
lods
inc
jmp
je
push
and
fsubrl
add
cmpsb
and
cmpsb
ja
aas
push
jge
inc
sarb
leave
dec
adc
aas
mov
hlt
lret
movsb
inc
ret
dec
sbb
mov
xchg
and
lea
in
pusha
maskmovq
divl
and
cs
add
popa
or
int
fwait
adc
aaa
aam
ss
cmp
cli
sbb
jo
inc
or
or
cmp
test
fimuls
addb
mov
shrb
push
dec
xor
fwait
arpl
mov
out
sar
push
into
jmp
rcrb
fcomps
and
and
roll
ret
fs
ret
xor
inc
test
psubw
icebp
xchg
inc
fucomp
and
xchg
adc
test
ss
jo
jns
push
cmp
inc
rolb
in
xor
aam
sti
push
cmp
cwtl
mov
dec
icebp
push
cmp
jnp
idivl
ss
mov
pop
pop
cli
and
jbe
push
mov
xor
jge,pn
ss
idivl
addr16
adc
inc
cli
mov
adc
dec
lcall
add
jl
popf
push
or
dec
or
cmc
loop
rcl
xor
dec
jae
or
fisubrs
adc
aaa
cwtl
xchg
mov
and
pushf
push
push
push
and
and
push
inc
jmp
push
inc
fdivs
pop
xor
and
jo
lods
jne
cmp
mov
xlat
xor
imul
out
mov
outsl
cmc
fs
sbb
sub
ficomps
and
ret
sti
stos
aam
pop
popa
cmp
idiv
inc
adc
cmp
sbb
test
inc
mov
cwtl
fisubrs
jg
call
xchg
mov
shll
sub
xor
sarb
mov
mov
cmpsl
mov
stc
pop
mov
adc
sti
dec
cmp
pushf
or
lock
rclb
push
scas
cli
lds
hlt
adc
clc
adc
inc
adc
aam
or
xchg
leave
jnp
sbb
jl
filds
push
push
loopne
imull
push
in
mov
mov
adc
push
jns
test
ret
out
in
sub
pop
dec
jp
loope
lea
push
fmulp
cmp
jae
repz
clc
sub
mov
leave
sub
mov
sbb
cmp
out
enter
in
jnp
in
arpl
push
xchg
rcl
jbe
std
push
sbbl
lcall
test
out
ret
iret
jae
jbe
out
xor
in
stos
imul
flds
out
loope
sub
jo
mov
fsubl
rclb
cs
pop
xchg
aas
adc
testb
loope
bound
test
jbe
xchg
adc
or
or
rclb
pushf
jno
push
mov
add
xchg
mov
jp
cmp
cmp
xchg
movsl
mov
jmp
scas
out
lea
loope
cmpl
xchg
push
and
leave
mov
shrb
loopne
jmp
jmp
divl
add
hlt
pushf
mov
das
pop
mov
inc
popa
std
inc
cmp
ja
add
mov
repnz
aam
ds
xchg
push
outsl
test
push
arpl
repz
fimuls
cmp
xlat
sub
pop
mov
mov
mov
sbb
lods
and
into
xlat
sbb
into
fisttpll
mov
sub
pop
fstpl
roll
dec
add
insb
lods
dec
xor
ljmp
inc
sarl
push
in
aas
addr16
cmc
es
dec
xchg
pop
lock
aad
mov
inc
mov
pop
and
gs
lods
jmp
pop
cmp
inc
xchg
xlat
xor
test
loop
mov
mov
add
xchg
jge
hlt
sub
aas
pop
adc
sbb
movsl
or
pop
or
iret
xchg
add
or
lods
xchg
pop
clc
sbb
push
imulb
cs
outsl
enter
jae
loopne
rolb
mov
cli
or
jno
int
fnstsw
and
lods
push
sbb
jbe
syscall
je
dec
sbb
dec
push
mov
lea
shll
in
inc
hlt
or
add
leave
mov
and
test
test
cmc
mov
int3
int3
xchg
jecxz
jecxz
divb
outsb
mov
push
arpl
mov
cmp
stos
out
jp
jns
fs
adc
icebp
lea
and
jecxz
adc
aas
int
jmp
hlt
add
inc
sbb
in
dec
jmp
testl
pusha
pmullw
mov
adc
or
ja
roll
push
ljmp
sbbl
ret
push
mov
insb
add
sub
add
ss
scas
test
jbe
subb
mov
xchg
insl
push
xor
cltd
push
andl
cmc
fs
xchg
jmp
pop
aam
jecxz
mov
add
cltd
jg
or
add
dec
xchg
mov
dec
imul
xor
mov
sub
icebp
push
cld
les
xor
popa
xchg
das
mov
cli
cli
sbb
sbb
push
mov
adc
in
icebp
loope
cs
add
add
bound
xor
mov
scas
adc
das
add
inc
ret
sub
fwait
shlb
and
jne
leave
fisubl
dec
movsb
jecxz
xchg
lret
in
add
or
and
adcb
push
fwait
imul
or
cmpsl
push
hlt
or
rolb
xor
hlt
in
cmp
push
pop
mov
push
mov
je
mov
sbb
mov
stos
sub
pop
je
mov
jle
sbb
mov
mov
rorb
nop
sti
fwait
addr16
mov
dec
cwtl
jmp
push
jecxz
push
push
mov
add
aas
push
push
fs
stos
ljmp
arpl
clc
sbb
inc
imul
lret
std
inc
sbb
jle
lds
jo
enter
push
cmp
xor
loopne
mov
or
jg
mov
adc
mov
fnstcw
jge
sub
cmpsb
dec
lods
fwait
push
push
adc
lock
scas
xchg
mov
fists
lahf
inc
or
aad
sub
leave
dec
iret
dec
pop
mov
add
popa
call
adc
add
popa
call
adc
add
push
push
jmp
mov
ljmp
mov
int
outsb
jb
mov
push
jl
or
jge
les
into
cltd
inc
jbe
clc
loopne
adc
outsl
roll
sbb
je
xlat
xchg
sub
loope
faddl
pushf
addr16
xor
dec
cmp
jge
testl
mov
adc
movl
pop
scas
lea
cmp
cmpb
dec
shll
pushf
xor
cli
inc
data16
mov
add
inc
mov
daa
sub
mov
adc
jne
mov
sbb
testl
mov
ljmp
push
push
jbe
add
aad
pushf
mov
scas
repnz
jle
cmp
add
fwait
jg
int3
push
aam
dec
mov
test
xchg
cmp
int
out
mov
es
mov
inc
int
lock
daa
xchg
xor
jns
mov
add
lahf
loop
test
add
and
std
faddl
sub
push
jle
ljmp
mov
mov
dec
nop
jo
jp
push
push
xor
and
jno
pop
sbb
adc
xchg
ds
scas
dec
inc
sti
nop
repnz
mov
xchg
sub
jmp
or
mov
subl
sbb
incb
xchg
gs
daa
in
pushf
clc
pop
push
push
ss
pop
popf
insl
or
jl
aaa
scas
and
mov
cmp
int
xor
sbb
enter
xchg
sub
jecxz
mov
call
movl
mov
into
stc
dec
aas
stc
pop
gs
mov
sbb
es
push
cmpsl
add
inc
outsb
add
lcall
cmp
cmpsb
in
test
fdivs
inc
lret
lahf
out
les
out
jb
lea
mov
lods
imul
popf
faddl
jns
int3
xchg
ljmp
push
jo
mov
cmpsb
cmp
add
pusha
add
xchg
fsts
scas
popa
pusha
jmp
shrl
push
popf
and
push
cmp
xchg
xor
out
mov
lcall
and
xchg
pop
imull
fnsave
and
xchg
repz
negl
add
mov
ljmp
out
lods
or
outsb
rol
call
stos
shll
mov
and
push
xchg
sbb
arpl
jecxz
mov
call
fcmovnbe
sub
xor
vpsubw
jg
inc
repz
negl
add
in
jae
xchg
lods
xchg
inc
sub
addr16
shrl
xchg
push
xchg
popf
ret
add
int
int
xchg
dec
jb
mov
scas
push
ds
adc
lahf
roll
lcall
pop
arpl
cwtl
jl
iret
push
leave
enter
fucomp
jbe
xchg
movsl
outsb
inc
iret
movsb
sahf
add
mov
lods
push
and
fildll
loop
or
sbb
pop
mov
dec
dec
xor
lods
xor
inc
xchg
mov
imul
add
in
jbe
sub
dec
adc
lods
dec
mov
int
bound
imul
cmpsl
insl
or
cmp
popf
push
sahf
adc
lea
aad
mov
aad
cmpsl
push
xchg
add
aam
inc
pushf
pop
adc
or
pushf
sbb
xor
dec
lahf
inc
sub
push
and
test
jne
mov
and
inc
roll
mov
mov
cmp
rolb
loope
sub
into
cwtl
push
aam
and
sub
les
jmp
and
fstl
fbstp
negb
loopne
xchg
add
test
mov
test
movsb
inc
ret
add
leave
lret
arpl
xchg
and
lods
mov
xchg
scas
jno
or
cmp
rclb
je
mov
fnop
jns
out
lods
pop
xchg
cmp
ffreep
rorb
inc
mov
ret
mov
repnz
cmpsb
xchg
xchg
mov
sub
and
lods
mov
push
mov
cmp
cli
cltd
dec
and
hlt
and
leave
test
test
sub
push
std
jmp
inc
push
mov
inc
outsl
jno
cmp
adc
add
mov
push
push
aad
ljmp
inc
and
mov
cli
enter
rcrl
gs
or
xchg
std
notl
jle
es
shl
xor
push
mov
repz
js
ret
or
lods
xchg
mov
or
push
mov
and
mov
div
pop
scas
ret
mov
dec
cs
add
mov
in
dec
mov
pop
mov
sha256rnds2
push
out
push
gs
dec
popf
movsb
ret
xor
test
jmp
pop
jbe
inc
sbb
xchg
rolb
xor
sarl
enter
stos
adc
mov
xor
aaa
and
xlat
push
add
mov
into
lea
sahf
and
imul
insl
ret
dec
iret
inc
rol
adc
mov
push
mov
sarl
add
push
mov
ss
or
jb
mov
popf
mov
mov
icebp
push
std
pop
aam
addr16
lahf
and
in
fdivs
lahf
insl
add
xchg
pop
pop
pop
cmpl
pusha
test
leave
iret
sbb
xchg
cwtl
sub
pop
test
sub
jbe
mov
daa
in
pushf
clc
sti
mov
ret
adc
leave
mov
push
sahf
pop
fcomps
xor
mov
jmp
repz
lret
test
inc
sub
xor
enter
popa
add
dec
insb
insb
outsl
sub
xchg
jmp
xchg
das
inc
andb
dec
shl
mov
stc
loop
rorb
jge
dec
xor
out
cmc
mov
aas
adc
jecxz
mov
push
xchg
fnsave
mov
xchg
shrb
inc
add
push
dec
dec
leave
push
dec
lds
pop
sub
or
jno
add
je
dec
add
add
sub
nop
and
lahf
ja
icebp
iret
sbb
scas
hlt
or
mov
shrb
insl
repnz
popf
push
xchg
xchg
cmp
dec
les
mov
sbb
and
dec
imul
or
iret
or
xorl
popa
push
fbld
mov
test
add
out
xchg
inc
mov
xlat
jle
dec
jl
mov
inc
adc
and
add
inc
mov
pusha
adc
test
adc
xor
inc
pop
imul
out
push
xchg
mov
or
imul
pop
jp
mul
inc
jns
iret
adc
mov
fcoml
add
sub
and
adc
jge
jmp
pusha
push
rcll
xchg
addr16
jne
push
imul
in
push
loopne
sbb
arpl
call
in
es
push
lret
sbbl
pop
fsubrs
pop
xchg
icebp
aas
movsl
mov
outsb
inc
and
xor
push
fucomp
js
inc
mov
in
pushf
lock
xor
sub
mov
repnz
ret
xchg
jl
push
repnz
cmpsl
and
cmp
xor
gs
fidivrl
pop
mov
out
cli
push
scas
jae
data16
leave
adc
mov
aad
mov
push
into
inc
pop
pop
dec
outsl
stc
xor
jno
loop
pop
lcall
stos
push
aam
sbb
pop
lds
mov
xchg
out
jae
adc
dec
jb
mov
out
or
data16
sbb
cld
sub
xor
ljmp
add
stos
sub
outsb
outsl
js
jns
push
cli
cmp
mov
add
test
add
pop
loop
and
imul
adc
fstpl
mov
xlat
cwtl
xor
push
cmp
cmc
or
lret
mov
xchg
jbe
pusha
pop
mov
pop
add
jo
sahf
pop
lcall
push
hlt
xlat
jmp
outsl
je
push
in
shlb
sub
psrlq
cld
cmpsl
add
xor
mov
mov
or
dec
ljmp
aas
int3
jns
pusha
jns
push
mov
inc
fiadds
inc
xlat
inc
xchg
imul
mov
xchg
fiadds
sub
repz
insl
in
pop
out
and
push
sub
in
sub
push
mov
sbb
cmp
pop
shrb
les
mov
and
inc
call
out
shlb
data16
sbb
mov
pusha
adc
call
iret
movb
nop
shl
or
mov
lock
adc
test
insl
lahf
pusha
inc
sti
insl
jg
clc
and
jo
out
push
lds
push
push
pop
sbb
arpl
sub
sbb
je
pop
ret
call
into
movsl
sbb
jge
cwtl
cmp
jle
les
sarb
adc
mov
notl
jg
fdivrl
sahf
xchg
mov
push
scas
add
mov
or
fdivs
sbb
push
or
stos
call
loop
xchg
sti
aad
ret
adc
int
sub
dec
jp
or
add
test
leave
loope
loop
inc
lret
dec
rorb
adc
loop
xor
sbb
fwait
sbb
scas
or
and
movsb
and
int
push
lock
sbb
mov
mov
xchg
push
xor
adc
sub
cmp
inc
ficompl
stos
call
lds
lock
push
std
pop
pop
repnz
mov
mov
jecxz
aam
jge
or
hlt
and
aad
jnp
bound
pop
faddp
clc
int
pushl
leave
sub
sub
fsubs
mov
hlt
jecxz
out
and
dec
outsb
xor
fsts
gs
hlt
mov
cmpsb
add
mov
xchg
cmp
ror
mov
push
sub
pop
adc
loop
jecxz
sub
lret
mov
add
aad
add
int
xchg
lret
popf
sub
loopne
cmc
sarb
leave
mov
cmp
hlt
mov
out
sub
cmc
mov
mov
imul
pop
jne
popf
roll
pop
pusha
stos
rcrl
and
sub
cmp
cmp
rcrb
ss
dec
pusha
fsub
outsb
test
dec
dec
xor
outsl
gs
add
mov
pop
mov
fsts
ss
push
mov
xor
xchg
test
mov
pop
popa
push
or
jmp
iret
addr16
pop
pop
mov
shrl
mov
xchg
sbb
pop
test
jb
push
mov
mov
mov
fsubrs
fwait
or
or
cs
sub
xchg
add
mov
aam
xor
mov
cmp
pushl
add
mov
sbb
pop
popf
pusha
out
call
xchg
rorb
jne
jb
xchg
iret
cmp
sub
call
loopne
sbb
mov
mov
adc
test
or
push
mov
inc
rcrl
mov
test
mov
pop
dec
sub
vandnps
fistpll
shll
xchg
inc
push
sub
jbe
or
mov
cli
lahf
es
shll
into
add
sub
pop
mov
mov
pop
rorb
sbb
sahf
jge
push
std
xchg
xchg
push
retw
repnz
cmp
lret
push
clc
mov
movsb
xchg
jmp
repnz
stos
xor
adc
push
cmp
jb
mov
inc
push
mov
in
fwait
mov
mov
sub
in
jle
bnd
add
mov
and
adc
adc
mov
test
fildll
xchg
sbb
sbb
push
jae
pop
inc
popf
cmpsl
sbb
loopne
mov
sub
leave
in
push
xor
mull
je
inc
jmp
lea
pusha
jmp
rorl
mov
idivl
out
and
push
outsb
sbb
mov
or
sbb
xchg
cmpsb
add
dec
popa
pop
dec
lock
std
rclb
imul
xchg
jbe
xor
cmp
xchg
pop
addr16
fsubrl
sub
data16
jo
add
out
push
sbb
jns,pn
mov
push
aaa
movsl
mov
mov
out
jne
sarl
push
jge
adc
fdivl
pop
scas
pop
xor
adc
pop
and
jg
rcll
xchg
bnd
bound
push
sbb
popf
xor
or
mov
push
les
cs
js
clc
xor
icebp
imul
into
test
sbb
mov
xchg
fs
sbb
jle
in
test
sub
es
jecxz
push
jecxz
dec
movsl
jno
xchg
mov
jae
lret
cmc
and
clc
test
xchg
mov
out
adc
cmp
ljmp
xor
stos
sahf
je
imul
pop
movsl
shll
popa
in
or
inc
sub
cmp
jns
js
pusha
shl
xor
jecxz
test
cltd
fwait
testb
xorl
push
xor
cmp
mov
add
sub
fidivl
jmp
lock
sub
ror
int
stc
out
push
push
push
inc
adc
pusha
addr16
pop
rcl
scas
xchg
rol
aam
les
mov
adc
fadds
pop
ds
or
cld
lcall
mov
pop
clc
fildl
shlb
test
mov
leave
sahf
lods
sub
mov
xor
push
loopne
push
test
stos
jmp
cmp
adc
jl
fimull
popf
xor
out
in
jae
divb
mov
lret
jmp
scas
and
decl
push
push
mov
xchg
lahf
lret
sub
jge
jge
movb
cmp
ss
addr16
gs
loope
pop
mov
insl
mov
xor
inc
fnstcw
mov
aam
dec
xchg
in
dec
in
je
movsl
xchg
add
fcmovbe
push
in
sbb
mov
add
mov
ficomps
sbb
clc
mov
sub
fs
insl
adc
bound
dec
outsl
mov
inc
popa
loop
aam
pop
xorl
sarl
add
inc
std
pop
pop
xchg
mov
mov
das
test
in
outsb
sub
das
adc
pop
and
adc
outsl
mov
mov
in
add
xchg
fmull
lods
dec
fidivrs
rol
push
cltd
pop
in
pop
push
sbbb
rorl
pop
movsb
fsts
or
rcrl
fstl
adc
xor
filds
inc
pop
test
mov
repnz
mov
es
daa
mov
dec
cmc
jns
jbe
inc
mov
bound
imulb
inc
pop
xchg
cmp
mov
mov
xor
outsl
repnz
or
jnp
fisubl
pop
and
lret
in
and
jg
jno
xchg
out
movsl
hlt
out
inc
jmp
dec
test
jmp
xchg
icebp
mov
push
add
int
jecxz
inc
mov
shrl
popa
add
pop
cmc
mov
test
jmp
lock
push
repnz
ljmp
movsb
pop
xor
cld
sbb
sbb
adc
sub
and
pop
push
stc
lock
repnz
pop
loopw
pop
loop
or
data16
dec
idivl
mov
hlt
or
js
ds
pop
push
mov
fnstsw
adc
or
rcll
ss
cmpb
test
test
xchg
cmp
ret
out
mov
repnz
cmp
movb
cmpsl
xor
imul
cmpsb
loopne
dec
ret
leave
leave
leave
and
pushf
inc
sub
inc
mov
inc
idiv
aas
inc
int
inc
pushf
ss
ss
ss
pushf
fprem
lret
inc
lret
inc
test
inc
rolb
test
inc
enter
fnstcw
inc
pushf
flds
inc
ret
inc
lret
inc
movl
mov
or
leave
leave
leave
leave
test
sahf
and
or
jp
mov
pop
adc
imul
push
je
jno
scas
cmp
sarb
and
mov
test
xor
and
cmp
stos
push
mov
orl
jmp
jmp
iret
lret
add
int3
popa
or
in
shl
dec
jmp
stc
push
pop
dec
mov
adc
pop
lea
xor
pop
cmp
call
lock
movsl
mov
push
loop
fcoms
mov
movsb
push
push
pop
loopne
ja
push
push
andl
test
imul
dec
loop
xor
or
mov
sbb
fdivs
bound
lea
pushf
imul
mov
jae
mov
out
mov
push
stos
popf
sbb
lods
xor
divb
mov
sahf
ljmp
jne
bound
push
cmc
adc
rcrl
repnz
push
mov
xchg
xlat
roll
in
loope
sub
mov
insb
lods
cwtl
xor
xchg
stos
dec
sub
aam
and
xchg
cmpsb
test
xchg
pop
xchg
imul
popa
xchg
ss
jnp
sub
lret
or
loop
xor
xor
sbb
cmp
dec
shl
scas
or
adc
sbb
cs
xchg
xchg
aaa
cmp
xor
mov
xchg
insb
pop
pop
xor
gs
cmp
push
sti
dec
mov
cmp
sub
sub
iret
jno
dec
mov
fiaddl
inc
pop
mov
loope
mov
xor
fstps
cmp
pop
js
adcl
mov
cltd
xor
sub
iret
dec
or
cmp
add
insl
mov
jg
sub
mov
imul
sub
fs
mov
cmc
iret
iret
imul
cmp
sarl
hlt
cmpsl
mov
sbb
and
gs
dec
fisttps
jbe
icebp
fimuls
jo
insl
insl
fwait
loope
test
push
xchg
js
xchg
mov
add
out
push
xchg
jno
popf
cmp
into
cmpsb
iret
xor
or
jge
mov
jne
mov
cmp
cltd
and
cmp
push
push
int
insl
mov
leave
mov
pop
loop
mov
mov
test
inc
dec
add
push
jg
test
and
std
test
jmp
ja
xchg
data16
xchg
in
or
adc
pop
filds
add
and
int
or
pop
pop
jb
mov
xchg
call
xor
clc
scas
shlb
mov
ret
sbb
jne
mov
dec
iret
push
push
lret
das
repz
cli
shll
imul
cmp
lds
fsub
mov
cmpsl
fnstsw
in
mull
rclb
push
insb
ds
add
push
jne
push
ljmp
fstps
shr
loop
fadds
mov
cmpsb
jle
cmc
dec
das
sub
aad
sahf
test
push
mov
dec
rcrl
les
or
inc
adc
fcoms
xor
xchg
aad
mov
or
xor
cmp
rolb
fldl
outsb
outsb
mov
cs
and
les
sbbl
ror
add
aaa
jmp
inc
mov
lcall
notl
add
rolb
xor
pop
xor
mov
inc
mov
jae
inc
subl
and
daa
bound
in
inc
cmp
lea
ja
add
scas
js
or
sub
dec
pusha
mov
xor
movsl
sub
push
or
rcrl
loope
push
into
negl
pop
shrb
dec
pop
ror
cmp
outsb
stos
lods
mov
dec
pusha
imul
rclb
bound
divb
movsb
sub
bound
sbb
push
dec
jmp
mov
jne
sub
cltd
jecxz
sub
mov
outsl
mov
push
out
xor
test
stos
cmc
test
adc
fs
mov
inc
or
cmp
dec
data16
mov
fists
stc
pop
insl
inc
aad
lea
xor
push
lcall
cmp
jge
push
popf
add
jns
ret
rorl
icebp
push
sbb
xchg
dec
fidivrl
imul
mov
xchg
in
push
gs
cmp
out
cmp
xchg
decl
mov
test
decl
mov
jns
pop
adc
mov
adc
mov
lock
jmp
fldlg2
cwtl
pop
rclb
mov
pop
jmp
dec
stos
mov
outsl
adc
mov
into
rorb
mov
int3
cld
jb
cmp
inc
nop
std
dec
dec
outsl
dec
pop
dec
aam
iret
push
fstpl
mov
int3
pop
dec
xor
xchg
cmc
xchg
ljmp
inc
mov
in
mov
cmpsb
repz
test
and
arpl
shll
ja
xchg
test
in
sbb
push
es
out
xor
adc
ljmp
mov
push
pushf
mov
lds
pushf
faddl
jns
sbb
pop
mov
and
or
mov
xchg
pop
mov
push
mov
lahf
out
push
lds
cli
xor
bound
adc
push
outsl
lea
jae
sahf
push
push
lea
and
in
sbb
test
loope
mov
aas
pop
fnstsw
sbb
adc
lret
loop
pop
fmuls
lret
adc
test
jl
xchg
shlb
clc
shrl
add
mov
outsb
mov
cmp
jb
cltd
shl
sub
aad
fdivrl
pop
pop
jbe
shr
mov
cltd
cmpsb
add
sti
mov
sbb
cmp
pop
pop
mov
add
stos
cmpsl
sbb
dec
xchg
dec
push
fwait
mov
lea
adc
jl
adc
mov
mov
add
in
scas
lods
jle
in
bnd
lock
js
jmp
inc
sbb
and
les
xchg
icebp
fcoms
jnp
iret
or
int3
dec
mov
js
cld
loope
jmp
je
pop
jne
sub
das
daa
loopne
push
mov
pop
cmp
push
int
cmp
popf
es
lahf
mov
jmp
pop
add
imul
xor
cltd
sbb
subl
jne
ja
pop
test
pop
cmp
jne
xchg
hlt
insb
addb
cltd
push
cld
adc
hlt
sti
das
es
loope
loope
and
push
out
aas
roll
shl
std
int
sti
sbb
push
ret
repnz
xchg
pop
jecxz
mov
fldl
cli
insl
lea
dec
inc
push
stos
push
xchg
pop
push
fimull
sbb
in
cld
adc
pop
mov
inc
adc
mov
push
std
inc
inc
fildll
in
lret
out
add
xchg
lods
xor
jl
cmpsb
sub
mov
cld
les
adc
daa
xor
scas
call
outsl
pop
dec
jecxz
pop
jg
int3
push
dec
pop
mov
mov
pop
jno
add
mov
leave
addr16
out
aad
add
or
aas
dec
shrl
in
cmp
lods
leave
das
test
inc
into
pop
mov
dec
mov
mov
enter
or
dec
gs
mov
sub
das
jmp
push
mov
and
les
cmp
fistpl
movsl
stos
enter
jae
inc
popa
push
lahf
pop
cld
repz
xor
jae
inc
pusha
jnp
pusha
inc
out
movsb
pop
fucom
shll
scas
add
lock
adc
push
or
inc
inc
std
pop
test
in
pop
xchg
mov
mov
js
inc
sbb
adc
int
add
fsubr
xor
xor
in
push
xchg
adc
gs
xor
pop
stc
xor
in
daa
jno
dec
push
out
inc
or
fmul
lods
fmuls
sub
sub
mov
popf
mov
mov
xor
mov
adc
pop
or
in
sbb
jne
test
pop
push
out
les
xchg
pop
or
or
mov
push
mov
xor
mov
and
std
in
lahf
js
mov
push
arpl
dec
inc
mov
jge
repz
repz
ret
sbb
call
fildll
aas
xor
iret
sub
mov
arpl
jecxz
pop
scas
loope
jl
mov
xor
nop
pop
cwtl
das
subl
call
pusha
mov
push
mov
add
pushf
ds
add
call
ss
in
fldt
inc
cld
scas
mov
or
add
xor
lock
add
shrl
xchg
aas
bound
inc
roll
sbb
gs
mov
dec
or
cmp
out
mov
fisubl
sti
mov
push
inc
sbb
movsb
and
pop
mov
dec
jg
in
xor
cld
mov
push
jne
xor
negb
repz
out
aam
cld
or
mov
outsb
enter
repz
sbb
enter
cmp
or
inc
dec
out
aam
imull
or
dec
push
mov
subb
mov
push
jnp
push
enter
aas
imul
hlt
sbb
ja
and
mov
icebp
bound
lahf
stc
mov
aam
insl
insl
emms
inc
inc
cli
int3
adc
test
cwtl
mov
popa
fxch
sbb
jg
negl
notl
mov
cmpsb
sub
cld
jne
inc
fdivl
xchg
pop
mov
and
xchg
cmp
sbb
mov
test
mov
cmc
addl
int
into
push
push
sub
ret
das
ja
adc
push
mov
cmp
and
xor
cmpl
jo
inc
push
test
or
aad
mov
sahf
mov
out
inc
imul
jg
inc
mov
inc
jecxz
daa
cltd
or
cmpsl
mov
pop
in
sub
jo
bound
ja
mov
daa
or
push
inc
push
cmp
adc
lret
sbb
push
and
jmp
mov
out
imul
mov
cmp
mov
sahf
pop
and
or
out
sub
fldcw
dec
bound
push
push
in
in
pusha
mov
push
into
jmp
xor
les
shll
popa
push
xor
hlt
lods
cli
stos
stc
shlb
outsb
stc
jl
adc
mov
mov
fs
adc
or
pusha
test
rcl
popa
pop
add
shlb
push
out
push
mov
cwtl
jo
sbb
mov
test
repz
pop
jae
push
push
in
or
call
movsl
in
loopne
test
repz
jnp
mov
jo
add
fcmovne
push
inc
inc
loop
test
jmp
push
repnz
aas
movsl
xor
pop
fdivs
pop
mov
push
bnd
test
mov
out
cmp
mov
xchg
sub
pushf
js
jo
dec
add
jbe
sahf
pop
loope
and
cld
test
in
dec
dec
fnstenv
mov
mov
sbb
jo
sti
mov
dec
mov
loope
dec
cmc
nop
ljmp
das
iret
mov
lds
mov
dec
inc
ja
and
call
mov
xchg
jecxz
aaa
jmp
sbb
xchg
adcb
and
pop
dec
cli
jnp
push
pop
dec
repz
pop
mov
fldt
push
cmpsb
lahf
inc
jbe
call
aam
mov
add
xchg
sbb
subb
cmp
sub
or
jbe
push
jp
mov
dec
sbb
xor
adc
mov
adc
and
aas
or
je
mov
jl
mov
jl
fistps
pop
mov
mov
sub
les
scas
test
es
ret
outsl
pop
jge
push
push
mov
mov
call
mov
leave
sbbb
hlt
xchg
dec
and
xor
add
movb
pop
jmp
xchg
mov
mov
and
cmpsl
pushf
xor
add
cmpsb
int3
in
sbb
ret
bnd
xor
add
dec
mov
adcb
rcrl
inc
mov
int
lret
in
adcl
jns
push
jb
ss
jle
mov
cmpsb
push
and
out
push
and
shrl
incl
push
adc
cmpsl
hlt
cmpsb
xor
mov
pop
loop
imul
inc
emms
push
nop
call
pandn
leave
push
mov
shl
and
scas
adc
mov
and
xchg
inc
ror
js
xchg
scas
xchg
scas
dec
jle
pop
cs
cmp
cmpsl
dec
lods
mov
xor
add
mov
mov
lahf
xor
jl
in
lret
jmp
fisttpl
xor
xorb
lds
lock
jnp
in
aas
lahf
rorl
or
and
pop
popa
sarl
vaddsubps
inc
dec
jo
aad
xchg
pushl
cld
dec
dec
push
addr16
inc
sbb
inc
dec
xchg
mov
inc
stos
push
fisttpll
or
flds
rcll
xchg
nop
into
aas
push
and
imul
pushf
ret
aas
mov
push
shl
sbb
stc
sub
xor
push
mov
inc
clc
mov
and
aas
sub
mov
jns
inc
imul
fidivl
or
xor
push
add
sbb
sbb
lret
xchg
dec
mov
adc
movsb
iret
data16
in
aas
xchg
and
ja
or
mov
mov
rcll
jns
mov
movsl
cli
btr
jg
or
push
test
loop
test
push
enter
pop
push
add
add
cwtl
in
mov
pop
stc
cmp
lods
mov
push
fistpll
fstpt
xchg
push
mov
xchg
jmp
mov
cmp
out
or
fwait
cli
jle
nop
xchg
or
xchg
cmp
insb
push
mov
jno
clc
inc
shrl
ja
sbb
insl
push
jne
pop
ja
gs
jbe
sbb
sbb
mov
push
jp
stc
jns
stos
and
dec
arpl
push
fildll
sub
mov
push
inc
mov
scas
adc
jl
aas
jge
out
or
mov
aaa
jb
add
in
cmp
aas
scas
insl
push
inc
push
add
mov
cltd
xlat
mov
xlat
outsl
stos
push
pop
shrl
mov
mov
int
or
call
out
and
rdmsr
mov
jle
sbb
jmp
test
outsl
sub
std
xchg
push
mov
push
shr
test
out
and
mov
pop
loopne
out
je
ja
jns
clc
adc
fisttpl
in
lods
pop
and
mov
adc
sub
mov
mov
sub
and
into
push
xchg
lea
loopne
ds
xchg
xchg
dec
shlb
icebp
inc
das
ret
xchg
fisttps
or
psubd
mov
pop
rcll
xlat
jns
and
lcall
sahf
test
in
notb
pop
xor
outsl
cltd
push
sbb
mov
dec
inc
test
push
scas
xor
out
aam
push
je
imul
stc
dec
xchg
push
add
in
mov
out
fstps
movsl
cmpsl
jb
fs
loop
and
inc
and
imul
jns
in
les
inc
jae
fwait
mov
push
fwait
call
je
cmc
add
xchg
sbb
xor
ds
ret
mov
jg
inc
pop
xorb
cmpsb
sub
mov
es
lret
and
in
or
fistps
pusha
pop
adc
movsb
icebp
or
or
pop
xchg
mov
in
nop
adc
mov
test
jb
inc
push
mov
cli
jmp
or
and
outsl
popa
adc
add
daa
mov
fistps
cmp
out
jne
imul
fwait
arpl
enter
pop
inc
sti
lock
mov
inc
lret
or
in
mov
divb
jp
cmc
mov
sbb
dec
jg
int
pop
lods
test
and
cmp
jg
lods
push
fdivrl
jmp
leave
jge
cltd
add
xor
push
jae
outsl
push
push
sbb
testl
jne
fs
pxor
cmpsb
jbe
jp
iret
mov
mov
cmp
les
pop
mov
mov
insl
sbb
jp
cs
test
push
divl
xchg
jmp
pop
scas
test
adcl
movsb
mov
in
jmp
rclb
xchg
test
jmp
push
sbb
lret
shr
xchg
pop
aas
sbb
xchg
mov
push
shr
or
push
subl
ss
pop
loope
jmp
cltd
inc
inc
xchg
fucomp
dec
mov
push
movsl
test
add
mov
cmp
pop
add
stos
in
push
lret
or
xor
dec
stos
add
test
add
cmpsb
adc
and
mov
mov
fwait
adcl
sub
mov
push
cmp
fwait
jle
loop
pop
test
pop
push
ds
and
xor
cwtl
sbb
sbb
inc
sub
lods
mov
movsl
jbe
sub
mov
mov
repnz
pop
in
stc
ljmp
adc
mov
jbe
and
jae
jb
mov
test
push
loopne
pop
sub
cs
jecxz
adcb
cmp
imul
mov
jmp
lcall
in
pop
out
xchg
out
and
push
xor
test
rorl
inc
shlb
push
mov
and
js
xchg
cmp
jne
cmp
and
lock
xchg
das
xchg
loopne
push
sub
sti
test
fcoms
std
es
pop
jle
mull
stos
fs
shl
cmp
fiadds
jae
add
in
cmpl
inc
gs
push
xchg
lods
jle
lock
mov
repz
push
fs
dec
mov
repz
jecxz
add
fwait
xor
hlt
ret
lea
dec
dec
inc
inc
fwait
sbb
adc
pushf
add
xorb
mov
sbbl
xchg
hlt
inc
pop
shrl
xchg
push
mov
fmuls
mov
dec
dec
sub
ja
add
dec
or
add
jp
and
mov
adc
pop
push
repz
cmp
out
sbb
adc
addb
icebp
repnz
or
sub
add
cltd
stos
fistps
lcall
scas
outsl
mov
mov
adc
inc
mov
xchg
clc
fdiv
out
idivl
adc
sahf
cs
fmuls
dec
push
aaa
adc
mov
mov
sti
fsubrl
cmp
pop
in
xor
aad
cmc
pushf
inc
frstor
mov
adcb
icebp
iret
sub
std
mov
adc
in
jmp
jns
xor
mov
cmp
pushf
fsubrl
xchg
push
xor
sarb
arpl
bound
sbb
outsl
rolb
dec
push
dec
rcrb
iret
sbb
push
andb
jbe
notl
lods
xlat
lea
jl
fwait
push
mov
xor
rorl
mov
mov
cmp
mov
in
and
push
out
sub
in
xchg
dec
xchg
add
dec
repnz
loopne
adc
mov
mov
insb
push
in
test
xor
xor
sub
jno
and
lret
scas
jbe
cmc
imul
mov
dec
stos
mov
out
and
imulb
inc
pop
outsb
aaa
lret
push
and
inc
mov
orl
adc
pop
leave
int
call
bound
lret
or
mov
addr16
in
in
sbb
scas
pop
test
sbb
divl
push
mov
mov
loope
jb
mov
push
pop
adc
in
sbb
imul
movsb
jg
sbb
mov
or
sbb
sbb
inc
push
scas
pop
cmpsl
pop
lret
test
xchg
sbb
mov
adc
push
add
dec
inc
aad
sub
xchg
pop
adc
insb
pop
aas
leave
subl
and
leave
enter
push
test
aad
mov
ss
xchg
jnp
pop
push
mov
and
sbb
xor
in
es
insl
mov
fwait
and
das
je
dec
lods
aad
and
adc
push
insl
imul
sbb
subl
lahf
xchg
mov
push
xchg
push
cmp
enter
sub
sbb
icebp
add
bound
cmp
sti
test
xchg
in
and
faddl
test
rorb
cmp
hlt
mov
sbb
jnp
cmp
repz
pop
jne
jb
jne
sbb
cmp
jb
mov
mov
add
shr
test
mov
cmp
cmp
xchg
sub
imul
dec
mov
mov
dec
out
cmp
sti
pop
cld
xchg
in
pushf
mov
pop
loop
and
jle
or
icebp
imul
jno
aad
and
adc
movsb
std
lods
mov
out
jecxz
fiadds
pusha
mov
std
leave
jno
xchg
add
adc
andb
mov
cmp
pop
addl
test
jns
xor
add
nop
test
js
or
lcall
or
xchg
pop
and
and
dec
imul
xor
mov
pop
add
ret
xor
fcomp
and
scas
mov
flds
and
pop
mov
and
fldpi
mov
mov
lret
pop
popf
pop
sub
push
lock
fisubrs
pop
test
jns
xchg
push
fcmove
pop
leave
cli
shll
subl
push
in
jmp
pusha
add
push
scas
or
cmpb
mov
dec
push
pop
adc
addr16
aam
cld
xor
cwtl
nop
daa
std
cmp
xchg
arpl
cmp
jl
jecxz
das
pop
into
push
aas
fs
mov
inc
or
fs
fld
push
sarb
mov
add
and
sbb
std
push
cmp
or
mov
xchg
mov
mov
into
jae
loop
aaa
jns
negl
dec
sbb
dec
out
or
cmp
push
xchg
sbb
icebp
dec
xchg
xchg
cmp
cs
cmp
pop
lret
mov
sbbl
data16
idivl
jo
mov
add
rolb
jb
xchg
xchg
lea
inc
es
cli
push
in
fisubrl
lcall
pop
xchg
clc
and
ss
inc
pop
sbb
adc
cmpsl
lahf
cs
ja
fsubrs
dec
ljmp
js
mov
fs
dec
int3
data16
ljmp
fsubs
ds
call
int
nop
addl
inc
mov
push
into
cmp
adc
mov
sar
pusha
mov
pop
mov
aas
mov
adc
pop
dec
xchg
int3
xor
jno
xor
inc
mov
inc
xor
mov
movsb
sub
ljmp
fsubr
pop
sbb
or
pop
xchg
push
cmp
fsts
aaa
ret
adc
inc
mov
arpl
icebp
in
div
xlat
fcompl
or
lods
sbb
mov
and
movsb
pusha
sbb
outsl
cmp
nop
jmp
lahf
jmp
arpl
mov
mov
inc
lret
xor
loope
jnp
lock
pop
imul
sbb
push
push
jns
out
sub
add
add
fistl
push
jno,pn
out
or
jmp
jb
stc
aad
pop
and
das
and
inc
insl
cmpsb
and
and
pop
cmpb
iret
xor
mov
cli
gs
inc
xor
xor
sub
pop
or
mov
stos
xchg
mov
sbb
popa
ds
or
push
mov
sub
xchg
mov
lock
jge
insb
inc
dec
and
jae
fwait
in
and
and
mov
jle
stos
loopne
aas
jle
jbe
aam
outsb
inc
decb
lret
push
fdivr
enter
push
mov
scas
loope
hlt
pop
push
adc
xor
push
incl
pop
xchg
jl
bound
adc
inc
xchg
mov
loope
xor
outsl
cmc
dec
dec
rcl
push
pop
dec
enter
and
mov
sub
and
add
sub
cmp
movl
jnp
jg
jl
push
mov
jl
dec
std
pop
pop
add
push
sbb
jecxz
or
sub
cwtl
cmpsb
cs
repz
dec
popa
in
jbe
repz
and
or
lods
in
lret
add
xchg
add
push
mov
jae
pop
repnz
fbld
lods
divl
aas
pop
mov
mov
push
mov
cli
icebp
xchg
lahf
add
arpl
sbb
shl
insl
call
pop
rcrl
mov
mov
jp
loopne
mov
imul
jp
lret
andl
adc
scas
ljmp
aas
jbe
test
push
std
pop
inc
dec
cmp
adc
lods
popf
std
rol
in
sub
add
ljmp
mov
ficompl
pop
and
lds
mov
xchg
sub
fstpt
dec
shll
xchg
sbb
push
push
imul
sub
ret
pop
rcll
xchg
sbb
sub
rol
xor
xchg
push
ds
pusha
loope
jnp
cltd
outsb
pop
aam
insb
mov
cmp
lret
sub
inc
into
sbbl
sbb
or
push
cmp
mov
ret
dec
or
stc
push
lea
shrl
sbb
sub
cltd
pop
pop
inc
aaa
ljmp
dec
sti
test
pop
pop
jg
fwait
push
mov
jns
shrb
and
pop
in
jb
inc
stos
bound
aas
idivb
enter
imul
mov
mov
push
rol
or
lcall
and
push
out
xor
or
mov
testl
iret
test
lret
xchg
jl
pop
loop
fmull
scas
xchg
jno
sbb
xchg
fadds
cmp
mov
mov
add
or
loopne
clc
jge
daa
mov
and
std
cmp
or
lods
jae
sbb
ja
jg,pt
ja
aam
shl
pop
xchg
xor
fidivl
fsts
imul
ficomps
dec
bnd
int
mov
mov
int
push
jbe
aas
or
lahf
mov
or
aam
std
outsb
jecxz
jne
jmp
mov
or
repnz
jge
aas
test
sti
jnp
repnz
pop
fcoml
mull
fisubrs
leave
pop
xorl
inc
cs
pop
pop
or
or
adc
xlat
in
repnz
add
out
rcll
pop
outsl
pop
or
and
mov
or
mov
sarb
shll
jns
call
inc
mov
notb
ja
mov
pop
jmp
pop
adc
sbb
fisttpl
cmc
rcll
pop
pusha
hlt
jg
enter
mov
cs
sti
add
into
ret
fxch
in
lds
cwtl
cwtl
mov
inc
imul
fwait
push
out
mov
pop
add
shrb
lock
push
cltd
mov
fwait
inc
push
std
or
and
cmpl
jl
loop,pn
sub
mov
or
lcall
push
dec
int3
xchg
lock
xchg
push
push
rorl
push
movsl
lret
push
xchg
add
push
and
xor
ljmp
sbb
nop
add
push
mov
imul
daa
mov
shlb
in
mov
xor
push
jecxz
xchg
or
fs
cwtl
out
stos
leave
mov
cmc
sub
mov
jae
roll
and
jne
mov
adcb
int
push
cmp
cli
push
daa
sub
jge
stc
addr16
add
jg
sahf
xchg
cmp
mov
movsb
out
ja
lret
cs
jecxz
fwait
lret
and
mov
cmpsl
leave
fdivs
ret
idivl
push
sub
pop
xor
mov
mov
rcrb
into
pushf
mov
mov
xor
in
mov
mov
mov
push
pop
mov
mov
popa
xchg
insl
xor
xlat
sti
or
cmp
cmpsb
rolb
pushf
sub
mov
push
or
call
rcll
imul
mov
jae
mov
int
sub
out
pop
or
test
or
xchg
stos
dec
popa
jle
add
inc
test
incb
dec
popf
pop
mov
data16
xchg
in
mov
cmc
push
fistps
fisubl
xor
pusha
ret
or
int
in
adc
pop
jmp
cld
and
sbb
jg
inc
dec
cmp
cmpsb
push
mov
leave
and
inc
push
adcb
into
mov
add
dec
sbb
inc
xchg
sti
in
shlb
addl
and
xchg
lahf
and
sahf
divl
dec
pop
loop
out
sbb
cmpb
enter
shll
mov
mov
xor
lret
cmp
ljmp
sbb
xor
dec
xchg
popf
adc
in
sub
pop
push
rcrb
adc
jge
mov
mov
push
add
mov
fistps
push
mov
outsb
mov
jb
fs
hlt
push
xor
and
outsb
dec
mov
cmp
mov
sti
ja
fdivl
cli
movsb
iret
sbb
sbb
fisttps
addr16
movsb
shl
out
sub
mov
add
andl
add
inc
add
pop
inc
add
add
xlat
inc
inc
add
add
add
inc
add
movl
cmpsb
inc
add
add
push
and
add
arpl
inc
add
add
add
inc
add
cmp
push
add
add
inc
add
adc
enter
sub
add
jmp
inc
add
es
add
add
add
and
add
mov
add
add
add
add
mov
pop
inc
shll
fisttpl
gs
sub
in
cs
ror
xchg
add
cmp
rclb
fcmovnb
mov
mov
fisubrl
std
jmp
sti
stos
adc
adc
cld
subb
pop
xchg
jecxz
fsubrp
outsb
pop
and
mov
faddl
and
loop
fcomps
call
dec
xchg
fidivl
out
iret
mov
lods
or
pop
std
mov
jle
popa
out
fiadds
lcall
lods
mov
inc
mov
cmpsb
in
out
ljmp
or
push
cmp
mov
bound
push
jmp
push
gs
cmp
stos
cmp
movsl
dec
mov
lahf
sub
jnp
call
cmc
hlt
int3
pushf
mov
mov
push
incl
mov
jg
les
jp
repz
mulb
imul
ret
std
or
sub
leave
inc
jge
adc
or
pop
adc
es
mov
push
fstl
xchg
mov
out
out
out
sbb
or
inc
pop
inc
xlat
add
int
cmp
xor
inc
sub
xor
cld
and
adc
scas
mov
push
push
pop
cmp
xor
xor
pop
sub
and
ret
clc
loop
dec
xor
adc
fidivl
jo
add
dec
and
pop
es
xchg
or
cmp
nop
or
rcrb
hlt
add
push
call
dec
test
xchg
pop
call
xchg
xor
cmp
out
out
xor
mov
and
push
int3
push
push
sar
aad
xchg
cmp
mov
pop
sbb
mov
mov
mov
test
bound
xor
jmp
andb
or
lcall
cmp
dec
mov
xor
or
xchg
leave
sarb
cmpsl
repnz
sub
sub
or
jno
cmp
xorb
sbb
xor
inc
out
in
and
sub
out
iret
add
in
stos
adc
jae
push
sbb
cmpsb
fs
mov
add
in
cmpsl
push
sub
out
mov
icebp
and
sbb
sbb
push
xor
push
into
mov
cmpsb
xchg
fcoml
xsha256
cmpsb
rcrl
loop
aas
bound
add
jl
sbbb
adc
pop
data16
cmpsb
into
loop
std
ss
das
add
dec
jb
sbbb
mov
aam
mov
pop
repnz
rcll
mov
fisttpl
cmpsl
cli
adc
jp
jns
jne
add
scas
pop
stos
or
orb
lds
in
push
addr16
shrb
rcl
outsl
xor
and
xchg
jno
jg
ret
mov
sahf
jp
jmp
add
jmp
add
and
jmp
add
mull
mov
add
add
rorl
add
pushl
rcll
push
push
call
mov
movzbl
push
pushl
pushl
call
add
cmp
jb
mov
pushl
pushl
call
nop
pushl
pushl
xor
pushl
pushl
call
xor
call
add
cmp
jb
call
call
leave
popa
ret
add
add
add
daa
mov
cmp
aaa
add
movsb
lret
fsubrs
jg
adcl
adc
shll
cmp
fs
add
out
inc
mov
jb
nop
or
in
icebp
mov
inc
stc
cmp
xor
pop
stos
sub
or
mov
mov
mov
jns
paddusb
dec
test
imul
push
lahf
inc
pop
adc
inc
scas
cmp
mov
outsl
xchg
xchg
testl
loopne
cmpsb
jbe
sbb
in
mov
xor
movsb
test
lcall
push
jb
push
pop
jne
divl
es
imul
xchg
push
es
mov
nop
ja
push
adc
sbb
push
xor
adc
add
jns
xlat
imul
leave
inc
pop
pop
inc
mov
cmp
xchg
xlat
sub
mov
cmp
mov
jo
push
bndstx
fwait
test
insl
rcr
into
cmp
xchg
push
adc
test
shrd
mov
mov
out
jne
sbb
and
adc
pop
mov
xlat
push
int3
popa
les
out
popa
add
and
inc
adc
ret
pop
shrb
cs
popf
xchg
mov
enter
jno
add
imull
call
data16
xchg
push
cli
mov
cs
repz
jns
mov
psubb
push
mov
xorb
push
imul
mov
jmp
jbe
xchg
imul
cmp
or
mov
sub
sub
pop
cld
jp
and
adc
cmp
mov
jg
ja
xor
es
cmp
add
xchg
outsb
lret
jp
push
xchg
push
cli
jecxz
pop
sub
xor
add
mov
push
jae
insb
pop
and
test
shll
dec
lret
movsl
sub
adc
sbb
sub
pop
add
mov
mov
push
mov
dec
adc
insb
mov
test
cmp
sub
lea
mov
orb
xor
mov
les
adc
xchg
dec
aaa
in
orb
xor
jno
ss
cmp
aad
push
xchg
xor
jns
aad
fidivl
pop
jp
and
jnp
sub
inc
es
stc
js
mov
out
inc
mov
push
mov
sahf
sbb
jl
pusha
cmp
mov
cs
clc
pop
jle
jne
stc
push
shrl
pop
xchg
mov
jle
cmp
adc
mov
cmp
mov
fidivs
cmp
mov
enter
jo
jg
lret
jb
shrl
and
out
inc
cmp
popf
push
xor
mov
rcrl
push
mov
add
out
push
cwtl
push
pop
inc
xor
xor
mov
mov
xor
xor
add
dec
pusha
xchg
pop
fidivl
and
adc
inc
cltd
mov
sbb
dec
faddp
dec
popa
pop
push
movsl
jne
push
lods
dec
in
test
add
mov
test
js
inc
jnp
fcoms
jmp
adc
adc
leave
cmp
insl
test
or
out
xchg
imul
out
mov
loopne
je
jns
mov
iret
sbb
scas
jp
xlat
mov
mov
sbbl
cmp
int
test
xchg
enter
ficoml
stos
push
std
data16
ret
fstpt
cmpsb
mov
xor
jns
aas
push
push
out
add
incl
jle
xor
and
push
xor
cmp
sbb
ds
mov
cmp
lahf
mov
cmp
andl
inc
daa
xchg
ljmp
mov
push
jl
adc
or
mov
subb
lret
scas
rcrb
jmp
ss
dec
xchg
inc
loopne
stos
scas
xchg
xor
mov
pop
adc
jne
pusha
lahf
scas
pop
pop
or
xchg
push
mov
sub
sti
xor
cmp
jle
cmpb
and
cs
xor
sar
in
and
into
call
inc
pop
jae
mov
pop
or
add
sbb
sub
pop
arpl
call
rcrl
vfrczps
cli
loop
es
ret
scas
rorb
aaa
nop
enter
mov
or
es
movsb
pop
and
into
cmovb
aaa
aad
or
push
ret
dec
inc
dec
xchg
dec
cmpsb
adc
into
pop
mov
jp
aam
movsb
xchg
mov
sbb
add
fbld
fiaddl
out
dec
iret
inc
and
xchg
repz
call
xchg
jge
or
int
add
test
jb
sub
xor
dec
fldl
xor
and
cwtl
pop
incl
neg
dec
ds
movsb
inc
addr16
stos
es
sub
add
movsl
jl
testb
adc
imul
xchg
fiadds
and
mov
sarb
dec
gs
jp
das
mov
cmpsb
ss
mov
sbb
adc
mov
pop
mov
and
or
xchg
out
cmp
mov
jmp
sbb
xor
iret
and
sarb
fstp
out
inc
xchg
shll
sahf
add
sahf
fstps
cltd
mov
fistpll
pop
xor
mov
xorl
or
js
dec
ljmp
mov
mov
andl
fwait
sbb
leave
ret
fistps
lock
sahf
mov
fcmovb
sahf
and
xchg
mov
mov
movsb
push
sub
ljmp
push
xor
jge
sub
pop
xchg
rcr
lods
into
cli
mov
push
sbb
mov
add
xchg
or
jg
mov
out
insb
inc
rclb
or
jge
shlb
shlb
and
mov
adc
pushf
jnp
inc
or
aad
adc
jmp
sbb
adc
cmpsl
nop
lods
mov
mov
sbb
insl
jbe
xlat
mov
jmp
pop
dec
or
and
cmp
inc
lahf
in
pushf
outsl
in
out
sbb
jne
pop
mov
pop
push
dec
out
sahf
sub
xor
xor
add
add
mov
ret
and
test
ret
mov
mov
fists
int
cwtl
dec
leave
inc
arpl
imul
jge
dec
stc
push
pop
add
push
xchg
or
out
je
rcrl
xor
shlb
xor
pop
lods
nop
jl
dec
xchg
enter
jp
sbb
and
lret
mov
jg
rclb
pop
push
bound
pop
pop
fwait
inc
lcall
or
idivb
sub
jnp
mov
pop
repz
sub
jae
push
pop
pop
add
or
insb
pop
xchg
movsl
inc
or
cmp
pop
call
ljmp
lcall
inc
movsb
outsl
test
insl
jg
lds
test
scas
out
in
mov
repz
testl
jmp
jl
push
daa
movb
mov
leave
or
mov
mov
decb
fcompl
stos
sar
dec
int
pop
pushf
and
mov
stc
mov
outsl
cld
adc
xchg
and
popf
cmp
cmp
ja
scas
into
arpl
pop
mov
mov
lcall
xchg
into
sbb
lods
imul
dec
adc
pop
es
mov
push
cmp
aaa
push
xchg
inc
push
hlt
je
cmc
cmovnp
fildll
lods
shll
xchg
lcall
add
or
mov
imul
or
iret
sbb
add
sarb
xchg
out
pop
inc
jg
xlat
mov
or
js
jo
inc
cs
jo
pop
xchg
push
je
mov
lds
push
adc
mov
push
insb
test
jne
cmp
jp
out
push
push
or
push
lahf
sub
in
leave
setp
cs
jo
xchg
mov
adc
push
xor
cmovl
fmulp
rorl
cli
push
lods
out
jle
ss
mov
lret
push
mov
mov
test
rcrl
mov
test
add
dec
lcall
pop
or
sub
cmc
cmp
jnp
push
in
fwait
and
loop
adcb
jle
stos
xchg
movsl
shl
inc
pop
in
sahf
sbb
and
outsb
daa
ja
jl
test
xor
addb
out
jmp
int3
lcall
movsl
lret
mov
and
cmpsl
jmp
or
mov
mov
scas
inc
inc
shrl
xor
lods
add
sbb
adc
jae
adc
sahf
mov
cmpsl
inc
xchg
sbb
orb
jle
mov
adc
add
sbb
cmc
adc
mov
jecxz
jmp
or
xor
mov
pop
fldcw
lcall
lcall
roll
push
add
scas
insl
mov
je
pop
xchg
xchg
sub
push
jnp
dec
cli
jno
adc
sbb
xchg
arpl
xchg
xchg
push
adc
mov
cwtl
add
fldenv
inc
shlb
xor
or
cmp
lcall
and
fidivrl
xor
sub
or
pop
adcl
fisubl
inc
inc
jg
mov
mov
add
leave
jle
stos
ljmp
cmp
adc
mov
jg
std
xor
pop
sub
pop
and
jbe
out
pop
dec
lods
pop
std
mov
or
xor
jp
movsb
sahf
iret
in
inc
mov
push
cmpsb
push
scas
or
inc
inc
repnz
jbe
push
lret
lock
mov
push
aad
mov
xor
xchg
mov
dec
xor
pusha
bound
out
shlb
call
insb
mov
cwtl
jb
imul
arpl
std
sbb
push
mov
jb
cwtl
fs
sub
jl
mov
mov
js
mov
cmc
cmc
hlt
mov
cli
cmp
add
out
jge
sub
jmp
jp
sub
out
cmp
pop
test
sub
inc
mov
movsb
inc
les
sub
divb
dec
sbbl
dec
loop
add
mov
hlt
cwtl
mov
jb
push
dec
pop
out
js
in
xchg
inc
and
ja
sbb
aad
fldz
cmp
test
loopne
jp
add
pop
clc
test
bound
jo
push
add
fwait
lods
inc
mov
dec
mov
test
je
arpl
jecxz
cmp
out
fimull
in
mov
mov
fsubs
lret
mov
outsl
add
outsb
rolb
mov
nop
mov
mov
dec
rorb
inc
fisttps
test
test
test
sbbb
iret
popa
pop
fdivrs
dec
push
mov
icebp
lret
mov
imul
lds
mov
test
rorb
sub
mov
inc
or
mov
outsl
adcb
mov
out
loopne
and
jo
out
add
mov
loope
or
call
ds
lds
imul
and
scas
fildll
adc
mov
repz
pop
nop
into
cmp
dec
jmp
sbb
pop
imul
leave
mov
pop
cmp
jmp
pop
push
dec
and
je
or
mov
orb
dec
sbb
pop
loopne
adc
in
movsl
dec
inc
inc
int3
in
fidivrs
dec
push
pop
test
aam
jnp
xchg
cwtl
sub
lods
jbe
and
outsb
jg
push
fcomps
out
xlat
int
pop
fs
out
addl
sbbl
pop
outsb
imul
jne
enter
ret
adc
out
push
enter
and
cmp
mov
xchg
loop
push
leave
ss
sub
out
jne
xchg
or
ljmp
jbe
pop
sub
and
jae
push
lods
in
dec
push
mov
pop
in
and
dec
mov
pop
xchg
mov
sbb
out
js
cmpsb
sbb
jge
movsl
ret
adc
fmull
add
add
pusha
push
mov
mov
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
jmp
les
mov
les
cs
mov
dec
in
loope
xor
jae
js
cmp
xchg
push
dec
push
insl
in
fstps
cmp
fcomi
in
mov
push
stc
push
mov
das
jnp
cmp
mov
fidivrs
out
sub
popf
cmc
adc
lock
mov
popf
mov
ret
out
xor
xor
xchg
inc
int3
pop
fdivrs
popf
push
pop
lcall
stc
decb
decl
push
inc
bound
imul
repz
and
ret
mov
fsubl
dec
pop
aad
mov
dec
jbe
sar
shlb
enter
scas
test
orl
fs
pop
movsl
push
aaa
inc
movsl
dec
repnz
adc
int3
test
insb
into
test
scas
ret
mov
bound
jb
dec
mov
test
lock
lahf
out
jle
fmull
mov
fucompp
and
out
fnsave
sub
rorb
add
ret
mov
pop
mov
xor
bnd
or
jmp
inc
jle
pop
nop
adc
andb
pop
push
jne
ret
lds
pop
insl
xor
push
mov
mov
mov
xchg
mov
std
test
mov
insl
cmp
out
negb
inc
fcompl
xchg
outsl
rcrl
sub
and
test
cli
test
call
pop
jb
and
test
test
and
jg
repnz
sarb
push
into
out
mov
aad
divl
leave
push
jle
pop
in
out
cwtl
test
shrl
mov
sbb
out
jb
push
fs
sub
jmp
rcl
scas
xchg
mov
sbb
adc
das
int3
lods
pop
ror
maskmovq
negl
sub
xlat
pop
orl
mov
sbb
das
daa
mov
cmpsl
inc
mov
lods
lret
addb
sbb
sbb
pop
ja
dec
imul
push
mov
js
or
push
nop
or
pop
fmulp
or
cmp
push
sbb
call
push
scas
bound
ljmp
push
inc
iret
pop
mov
je
cwtl
jo
xor
sub
bound
dec
jns
ror
and
push
rclb
mov
les
cmc
mov
lds
fsubrl
out
pop
insl
cli
cmpl
sti
push
jmp
adc
mov
ficoml
add
inc
and
fnstsw
test
and
call
pop
xor
hlt
push
popf
aad
and
rcr
out
jbe
push
xor
push
arpl
jbe
jg
push
mov
mov
scas
push
xor
sbb
fsubrl
or
push
mov
dec
sub
dec
xor
xchg
js
xchg
and
mov
mov
fadds
adc
les
mov
pop
xor
dec
out
pop
pop
inc
adc
movsb
loopne
jb
xchg
lock
and
int3
fnstsw
push
pop
fildll
jnp
push
jne
cmp
gs
shrl
and
pop
ja
mov
mov
addr16
cmpsl
cmpsl
cmc
and
lret
adc
and
xor
push
rcrb
xchg
push
push
ljmp
clc
into
jp
daa
out
sub
aaa
fmuls
es
loop
in
iret
cli
lret
mov
int3
stos
imul
adc
inc
sbbl
stos
insb
jnp
mov
and
add
mov
push
imul
in
xor
sbbb
dec
fsubl
cmp
icebp
pop
pop
scas
sub
mov
xchg
aad
jmp
push
loope
in
mov
not
sub
inc
or
cs
das
mov
lcall
dec
fmuls
jmp
sub
mov
push
jnp
mov
pop
add
repz
cmpsb
lea
adc
inc
test
mov
push
stos
pop
ljmp
xor
cltd
pop
xor
jge
push
and
add
jmp
pusha
sbb
jp
or
in
lods
xorl
shlb
out
fstpt
cmp
or
out
adc
mov
adc
mov
testl
insb
dec
aaa
fwait
out
push
gs
aas
adc
gs
xchg
pop
ret
das
loopne
outsl
push
xchg
xor
sbb
repz
mov
cmp
call
stos
ret
xor
arpl
hlt
sbb
insb
fcoml
cmpsb
adc
push
mov
mov
or
inc
jg
push
mov
mov
inc
mov
sub
pop
add
mov
pop
sub
pop
cmp
pop
jecxz
lods
jp
mov
sbbl
test
imul
push
mov
gs
add
fwait
aas
jo
push
inc
push
jbe
sub
out
lcall
cs
test
xchg
imul
mov
movsb
cmpl
jle
arpl
fsubrl
push
pop
lahf
sbb
inc
mov
jge
sbb
jo
pop
stos
addr16
test
lock
xchg
or
inc
jns
pop
idiv
adc
cmp
push
jmp
sbb
dec
pop
cmp
lcall
js
stos
cmpsl
lds
cs
cmpsb
int3
push
mov
jmp
es
cmp
aam
mov
aaa
dec
add
mov
cld
fwait
lret
inc
es
stos
jne
and
adc
mov
rolb
add
enter
gs
stos
and
ficoms
cmp
sub
jbe
idiv
add
mov
lea
or
into
xor
push
push
lock
jbe
mov
xor
dec
outsl
xchg
inc
cmp
insl
loop
or
jg
cmp
push
xchg
jge
das
cmp
mov
mov
push
jbe
add
jbe
in
into
ret
mov
inc
ret
or
rolb
push
scas
out
xor
lahf
sub
ret
push
mov
mov
sbb
shl
int3
aas
xchg
sub
notl
pavgw
lock
or
jmp
dec
out
mov
in
loope
sbb
jl
mov
lods
sbb
sbb
push
loope
in
int
loop
sbb
sbb
cmpsl
jle
or
sub
cld
stc
cli
mov
shlb
mov
rorl
sub
pop
ret
pop
rclb
jne
fisttpl
into
jno
js
int
cmp
or
and
outsl
and
push
jecxz
rorl
enter
jno
nop
xor
inc
in
and
mov
popf
jno
ja
scas
in
pop
shr
lods
sbbb
inc
adc
cmp
push
dec
jae
and
mov
int
addb
ds
loope
adc
mov
dec
adc
rcrb
mov
aas
lret
or
and
mov
mov
cs
jb
fistl
imul
jle
add
xor
int3
js
mov
mov
mov
xchg
adc
pop
pop
dec
pusha
fisttps
jne
fistl
and
pop
popf
aad
cwtl
xchg
stos
enter
ret
pop
testl
adc
mov
xor
andl
pop
and
out
ss
push
outsb
cmp
push
call
pop
mov
push
or
in
jo
ja
or
hlt
push
pusha
pop
push
and
ljmp
push
stos
out
scas
inc
cmpsb
mov
rclb
loopne
test
or
addb
pop
out
cmp
xchg
loopne
push
and
mull
fwait
and
xor
mov
mov
sub
cmp
movsb
xor
mov
inc
jb
sub
popf
mov
pop
jecxz
jae
jmp
bound
stc
fisubs
dec
inc
mov
cmpsb
in
cmp
and
push
xchg
jae
push
sbb
ret
mov
jmp
mov
outsl
into
jb
pushl
arpl
push
test
icebp
push
dec
push
xchg
and
into
mov
pop
xor
or
sub
pushf
push
subl
pushl
push
sub
sub
mov
xchg
push
dec
imul
xchg
mov
dec
mov
mov
jns
ret
inc
popa
cmp
lock
ds
pop
js
jecxz
scas
jae
lods
ja
push
lods
inc
or
cwtl
out
and
in
stc
roll
movsb
jp
push
xchg
inc
mov
dec
test
xchg
jns
ffreep
xchg
cmpl
mov
arpl
out
sbb
lahf
xor
jae
ret
jge
xchg
inc
shll
sbb
push
ds
lret
stos
dec
adc
pushf
in
sub
loopne
idivl
add
aas
lret
mov
or
sbb
xor
push
decb
pop
loope
pop
jnp
pop
jbe
jne
xchg
jo
dec
xchg
into
xor
or
add
fistl
les
mov
sbb
fucomip
loope
push
xor
mov
dec
jmp
jbe
or
cld
repnz
stos
mov
or
inc
push
in
sbb
mov
or
repnz
das
xchg
jp
or
fwait
lea
shlb
adc
jae
push
mov
ret
out
pop
and
lea
dec
dec
xor
mov
imul
push
mov
jge
stos
mov
xor
insl
cmp
hlt
mov
push
daa
cli
mov
adc
mov
scas
mov
imul
into
into
sbb
or
push
cmp
sbb
cmp
ja
mov
inc
movsl
adc
in
fwait
xchg
mov
adc
add
push
mov
jle
cmp
dec
bound
fisubrl
cs
xchg
sahf
mov
mov
mov
punpckldq
sahf
mov
mov
cmpb
pop
sti
mov
or
popa
jno
jno
pop
stos
into
mov
sbb
into
mov
inc
jno
jno
sti
addb
mov
add
ss
jno
fisubs
jno
jno
dec
mov
sti
imul
dec
xchg
pop
jle
add
add
in
shll
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
sub
pusha
push
mov
add
add
xor
add
add
pop
popa
leave
ret
add
add
std
push
xchg
push
sub
shlb
das
dec
mov
sub
std
push
stos
jne
movsb
push
mov
and
cmp
adc
push
loopne
lret
cli
push
xor
call
ud2
jo
jne
or
lea
jbe
xor
inc
lods
dec
sub
loopne
mov
sub
xchg
nop
mov
cmpl
fists
xchg
cmp
adc
and
sub
pushf
dec
xchg
in
sub
xchg
sarl
jo
aam
movsb
lcall
or
shr
aam
mov
jo,pt
loopne
adc
inc
inc
out
pushf
or
inc
adc
sahf
xchg
add
and
pop
lret
jnp
mov
xor
dec
pusha
cs
pop
arpl
xor
setns
leave
test
cmp
add
sbb
xchg
mov
jns
or
enter
jp
push
arpl
fnstenv
sahf
xchg
div
lcall
add
aam
mov
lret
fmuls
subl
sarb
cmp
test
sub
adc
xchg
repnz
rol
stos
addr16
es
mov
popf
mov
in
in
mov
add
shrl
cmpsl
shlb
mov
test
test
cli
xchg
push
mov
adc
cmpsb
stos
movsl
jo
daa
fcoml
mov
out
pop
in
out
call
pop
jecxz
and
ss
mov
enter
loopne
xlat
inc
dec
xorb
xchg
or
mov
mov
testl
cmp
mov
cs
aas
cld
icebp
xor
scas
xchg
push
sub
jbe
xor
je
int3
push
lds
mov
jne
xor
cli
mov
out
adc
bound
pop
stc
scas
inc
xchg
cmp
loopne
add
nop
mov
fidivrl
mov
push
and
xchg
fwait
scas
jge
push
dec
jns
xlat
fisubrl
icebp
pop
mov
or
dec
lcall
mov
fldenv
adc
add
or
push
std
push
inc
imul
in
pusha
push
xor
cmpsb
arpl
sti
inc
sbb
sub
mov
and
jl
add
xchg
hlt
sub
aad
jbe
mov
push
mov
andb
mov
std
sti
sbb
cltd
icebp
sub
cmpsb
mov
mov
shlb
sbbb
xchg
sbb
loop
inc
add
mov
loop
push
and
movsb
mov
repnz
stos
xchg
jae
pusha
pop
add
int3
movsb
and
and
shrb
mov
pop
movsl
stos
add
jg
mov
stos
mov
shl
iret
ljmp
int
push
push
cltd
mov
daa
in
pushf
clc
sub
outsb
pusha
js
cmp
scas
jecxz
cld
je
jp
ret
xchg
sub
mov
mov
adc
dec
pusha
mov
sbb
adc
push
or
mov
and
xchg
sbb
xchg
xchg
in
jnp
test
movsb
stos
xlat
pop
push
dec
pop
sbb
xchg
mov
xchg
lds
nop
pop
jge
gs
test
aad
cld
mov
mov
fistpl
mov
push
or
xor
test
mov
stos
std
testl
dec
push
pop
ja
push
subl
dec
pop
cmp
mov
pop
dec
hlt
add
sub
movsl
push
in
mov
mov
xor
ds
arpl
add
repnz
divl
add
lds
outsb
leave
es
stc
clc
mov
sbb
jg
lcall
jns
dec
not
push
xchg
scas
in
sub
std
cmp
fcomps
mov
mov
into
xchg
sbb
add
adc
mov
test
pushf
xchg
pop
adc
into
int
je
inc
mov
in
cmpsb
sarl
and
adc
leave
into
repnz
icebp
cmp
rorb
clc
xchg
popa
int
cli
or
pop
int
sub
mov
add
and
push
cmp
sbb
aaa
repz
add
das
push
loop
and
sbb
push
popf
pop
jb
mov
sarl
sub
aaa
mov
inc
fbld
cmpsb
xor
sbb
inc
jno
pop
popf
add
ret
popa
scas
sub
jg
dec
stos
insl
mov
movsl
lcall
cwtl
repnz
xchg
lahf
add
movsb
mov
lea
ja
sbb
mov
jbe
sarb
mov
lret
jo
xchg
dec
stc
mov
test
arpl
push
icebp
mov
inc
xchg
jns
loop
test
ja
inc
or
xchg
mov
inc
out
imul
out
add
imul
xchg
in
mov
test
jbe
lock
loopne
add
pop
rorl
test
pop
rclb
scas
loopne
jecxz
cs
push
out
lods
enter
jns
ds
push
hlt
mov
andb
int3
dec
and
inc
mov
or
pop
aam
shlb
scas
dec
leave
rcl
lahf
test
je
mov
or
or
in
push
cli
add
mov
shrb
mov
jmp
mov
ss
pop
sbb
int
xchg
pop
hlt
clc
inc
lds
jle
mov
or
lahf
push
fprem
dec
in
mov
jb
push
ja
iret
std
pop
and
push
popf
dec
out
leave
enter
lea
hlt
rcll
mov
inc
call
push
xor
aaa
sbb
xor
push
or
dec
in
jge
xor
or
xor
cmp
mov
int
or
jecxz
mov
xchg
cmpsb
mov
std
mov
stos
std
les
scas
orl
and
push
cwtl
scas
shlb
mov
mov
stc
cmp
test
adc
xchg
cmp
ror
sbbb
xchg
stos
jne
in
ret
push
inc
mov
and
sbb
push
or
aas
mov
sub
pop
daa
mov
popa
push
pushf
mov
or
outsb
insl
jg,pn
lock
mov
bound
enter
xor
mov
push
add
test
mov
fmuls
in
scas
mov
es
movsb
rcl
fisubs
mov
enter
in
fidivl
xchg
outsl
inc
fwait
mov
xchg
jb
mov
dec
cmp
ret
and
adc
push
jge
das
adc
mov
jb
jnp
add
enter
icebp
rorb
ljmp
push
or
pop
decl
daa
jae
pop
dec
push
test
sub
add
jg
xchg
mov
push
add
sub
xor
push
push
loope
xor
jmp
call
scas
shrb
icebp
mov
int3
pop
jmp
pop
stos
nop
out
fstl
add
dec
mov
sbb
loop
inc
or
mov
pop
add
pop
mov
or
mov
push
xchg
imul
and
jle
cmp
iret
mov
std
lea
out
and
gs
loop
daa
test
mov
mov
xor
shll
cs
pop
adc
shlb
addr16
inc
jge
fwait
mov
adc
sbb
mov
les
int
jb
mov
repz
hlt
inc
mov
pop
dec
test
and
repnz
aas
sahf
adc
mov
mov
outsb
xor
jb
in
mov
sbb
xchg
push
in
add
into
mov
std
sar
cltd
ja
adc
inc
leave
lods
sbb
cs
and
pop
add
nop
jb
cli
test
adc
nop
insb
push
aam
or
faddl
dec
sub
dec
push
aaa
jbe,pt
xor
fcmove
and
jae
nop
cmpsb
es
test
je
filds
lret
in
dec
jno
call
mov
mov
out
xor
dec
adcl
outsb
dec
cmp
cwtl
sbb
adc
imul
mov
fwait
mov
xor
andl
rorl
pop
scas
enter
push
jg
cmc
jb
movsb
dec
mov
push
testl
arpl
gs
sub
or
and
movsl
mov
mov
je
pop
imul
jmp
lret
stos
jns
jne
or
daa
push
andl
fisubs
sub
cmc
mov
rcrb
xor
jo
adc
mov
dec
aas
sub
ret
sbb
jg
dec
pop
pop
in
les
pop
mov
arpl
hlt
test
std
inc
jns
imul
das
mov
orl
movb
gs
daa
in
pushf
clc
pushf
lcall
push
push
jo
inc
push
xor
mov
xchg
cmp
pop
nop
sub
sub
dec
sarb
mov
and
aaa
sti
xchg
in
add
inc
add
mov
in
or
stos
inc
testb
jl
jl
pop
in
mov
out
movsl
mov
pusha
in
ficompl
sub
xchg
push
lret
xchg
and
add
add
xchg
rclb
pop
push
pop
or
lds
pop
inc
sub
sbb
cmp
mov
adc
ret
orb
fcmovnu
cmpb
scas
jge
pop
mov
inc
lcall
or
xor
ja
fldenv
mov
push
and
jne
add
add
push
mov
pusha
mov
mov
movzbl
xor
mov
inc
dec
test
jne
popa
leave
ret
add
add
add
add
fsubs
ficomps
imul
jno
ljmp
xchg
xchg
stc
divl
push
loopne
daa
mov
fistpl
mov
and
sti
imul
jp
fisubl
or
dec
ss
add
in
xchg
lcall
inc
add
adc
daa
inc
fld
lret
xlat
xor
ljmp
loope
inc
ret
rcrl
fmull
add
out
mov
sub
jge
in
cmp
inc
jns
lahf
dec
jmp
adc
xor
jge
sbb
mov
insl
inc
sbb
jnp
insb
xlat
int
jecxz
xchg
jbe
inc
in
cmpl
xor
into
hlt
hlt
xchg
enter
or
lcall
push
push
loop
add
mov
dec
mov
add
fdivrl
mov
dec
and
shrb
add
and
jmp
cmpsb
popf
xor
push
insl
stc
pop
xchg
or
mov
sub
orl
aas
mov
pop
int3
mov
out
mov
ljmp
fstpt
cwtl
lcall
repz
test
push
hlt
loop
in
scas
in
push
jle
in
cli
adc
push
mov
fsubrp
push
mov
mov
insl
pop
fisubrl
pop
push
dec
xchg
cwtl
dec
or
call
pop
sahf
daa
push
xchg
pop
out
in
mov
cmp
mov
ret
cmp
pop
imul
leave
mov
push
xor
lret
cmp
and
push
bound
sbb
mov
push
pop
into
mov
push
fdivl
mov
mov
mov
scas
shll
jp
out
ds
leave
pop
imul
jbe
cmp
mov
push
or
mov
xchg
int
jle
dec
lcall
mov
seto
fnstenv
pop
sbb
inc
cmp
xor
push
and
stc
jl
and
xor
mov
adc
nop
addr16
and
mov
leave
sbb
add
lret
loopne
test
into
stos
aad
adc
xchg
push
std
jb
shl
call
xchg
adc
outsl
repnz
and
mov
iret
jl
enter
inc
jnp
lock
mov
xchg
mov
shrl
inc
adc
pop
test
cmpsl
jo
ficompl
int
xor
fimuls
pop
loopne
movsb
jle
sahf
mov
arpl
pop
xlat
mov
shll
cld
es
inc
aas
jbe
xor
jg
cmpsl
xchg
insl
addr16
mov
in
push
inc
mov
movsb
mov
fildll
mov
xor
stos
fs
imul
sub
xor
adc
inc
dec
scas
mov
shl
push
cwtl
cmc
xor
jb
sbb
sbb
dec
dec
rclb
sarb
xchg
dec
ficoml
mov
dec
repz
outsl
fs
pop
int3
sub
dec
xchg
shr
mov
inc
xchg
mull
mov
aas
mov
aad
push
dec
mov
fcoms
cmp
mov
add
inc
mov
inc
loopne
imul
and
imul
call
shlb
xchg
mov
in
or
dec
mov
cmp
pop
out
outsb
or
jmp
lods
imul
inc
test
xchg
xchg
push
sub
add
shl
insb
add
std
test
or
xlat
add
daa
outsl
loope
ljmp
and
sarl
jbe
push
mov
gs
adc
push
sub
mov
popa
cltd
cmp
ds
leave
lret
jo
pop
push
xor
pop
aad
imulb
dec
mov
popf
cmp
mov
adc
sahf
pop
dec
push
loope
lds
adc
jb
sbb
inc
sbb
addb
mov
pushf
jecxz
add
scas
aad
fistpll
dec
dec
mov
push
jnp
cs
cwtl
imulb
xlat
jge
call
cmpsb
xlat
dec
sub
jg
popa
dec
dec
xor
js
out
test
pop
push
rcl
push
sbb
mov
sti
push
xor
out
shll
sti
std
mov
push
dec
sahf
jle
and
sbbl
rol
shlb
lods
xchg
std
jmp
pop
sti
lcall
add
sbb
xchg
inc
outsb
fnstenv
dec
popa
mov
cmp
mov
lods
fcom
jnp
cmpsb
bound
aad
popa
call
fs
push
data16
pushf
sub
nop
test
rep
and
rcl
push
loop
push
leave
inc
rolb
inc
inc
cld
push
fistpl
jnp
pop
and
shlb
scas
fcoml
and
xchg
jmp
adc
xchg
jmp
ret
jmp
ljmp
add
insl
fcoml
fcmovb
mov
aad
push
push
ds
xchg
iret
pop
fsubr
in
adc
mov
mov
movsb
mov
adc
sub
pop
cs
sbb
cmpb
loop
xchg
push
sub
jle
cmp
pop
iret
lds
push
mov
and
fcompl
lcall
xor
push
imul
fcmovne
movsb
xor
and
dec
fistpll
adc
clc
lret
or
mov
loop
sbb
mov
imul
ds
sub
test
mov
adc
inc
xchg
les
inc
ds
lcall
enter
in
mov
push
pop
pusha
and
std
sbb
push
shlb
xor
imul
arpl
mov
movsl
sub
inc
fwait
sbb
adcl
cli
fsubp
call
loopne
rcrl
pop
cmc
arpl
and
faddl
adc
dec
mov
loop
out
test
test
adc
mov
ss
xchg
int3
and
cwtl
dec
mov
movsl
push
mov
mov
pop
mov
pop
in
cmp
inc
cmc
jle
cmpsl
sbbl
dec
xlat
sbb
mov
cli
cmp
dec
push
repnz
addb
lods
add
mov
mov
fsubp
cmp
adc
pop
sarl
movsb
nop
inc
xor
ret
adc
loop
mov
mov
fnstcw
pushw
int
jnp
xchg
jle
mov
cld
fnstsw
inc
mov
xor
pop
push
mov
pop
mov
or
test
mov
push
mov
jecxz
mov
xchg
test
aas
push
repnz
lret
test
mov
xor
ja
jae
adc
inc
jp
add
and
inc
fisttps
popa
add
and
repnz
in
decb
mov
loope
pop
adc
fs
lds
xchg
mov
inc
jbe
stos
push
jbe
push
repz
cmpsb
xlat
iret
pop
inc
in
add
dec
sub
leave
ja
mov
push
loope
aas
mov
xchg
mov
push
and
pusha
dec
sbb
sub
in
xchg
nop
mov
push
pop
pusha
hlt
fistl
cs
dec
adc
adc
call
add
pop
mov
dec
ds
jo
sti
sub
neg
mov
ja
push
add
xchg
inc
daa
insb
outsb
out
jae
xchg
roll
pop
popa
mov
dec
mov
xor
jmp
sbb
xchg
jg
lea
or
inc
cmp
nop
je
loop
mov
pop
arpl
mov
inc
lcall
sbb
stos
add
movsb
aas
aam
dec
in
adc
test
sub
mov
dec
jge
lahf
ret
adc
mov
ret
pop
adc
cs
inc
das
jbe
xchg
imul
inc
jecxz
dec
fldt
adc
dec
mov
adc
ret
jg
fidivs
push
shlb
rcr
je
mov
rcll
scas
sub
mov
jle
xchg
fstps
test
clc
ret
xor
mov
adc
clc
cld
push
sbb
adc
mov
jmp
xchg
movsl
add
inc
rorb
sbb
int3
movzbl
sub
scas
mov
aaa
pop
inc
xchg
sub
or
stos
bound
out
inc
scas
cmp
sarb
test
push
out
or
jno
cmp
jg
scas
xchg
ja
std
push
cmp
push
scas
leave
push
repz
inc
xchg
mov
sbb
out
or
or
sbb
je
jo
sub
das
dec
sub
fldcw
inc
and
idivl
mov
or
add
sbb
imul
xor
repnz
fimuls
push
push
imul
xchg
dec
adc
adc
repz
push
repz
jno
sub
test
pop
pop
mov
push
jnp
outsl
or
dec
inc
and
fldl
jb
dec
adc
lahf
jle
or
inc
mov
jmp
lret
cmp
fldcw
push
inc
or
ljmp
cmp
loop
popf
cltd
lahf
and
jne
insb
test
xchg
push
xlat
dec
add
mov
in
in
mov
dec
pop
xchg
lock
rolb
add
iret
and
popf
movsb
insl
xor
dec
dec
lcall
or
adc
cmp
or
fsubs
pop
repnz
mov
fcmovne
pop
push
dec
fisubrl
ficoml
mov
fidivl
icebp
cld
xor
mov
in
and
sub
mov
cmp
mov
push
shlb
mov
test
test
push
cmp
fwait
or
out
popf
pop
mov
lret
imul
sbb
das
orl
aam
jae
or
icebp
into
jbe
insl
lret
pop
push
push
mov
jo
outsl
push
mov
shl
idivl
fs
ljmp
xchg
mov
sub
in
out
dec
mov
cld
mov
cmp
mov
nop
test
andl
es
cmpsl
aam
pop
adc
dec
mov
mov
movsb
inc
xchg
fsubr
fs
sub
mov
ljmp
loop
dec
testl
je
sti
push
adcb
push
push
scas
cs
fists
std
pop
push
sbb
or
adc
pushf
inc
xor
jae
aam
out
xchg
clc
shlb
jl
inc
fwait
fwait
pop
xor
sub
imul
or
sete
decb
inc
enter
pop
popa
xchg
int3
xchg
xchg
lea
cmpsl
mov
stc
pop
or
fnsave
int3
popa
lods
lahf
push
fwait
cli
adc
add
ljmp
sarb
jmp
pop
xchg
fs
pop
inc
rcrl
mov
ret
and
mov
sub
arpl
and
std
xchg
push
daa
sub
pop
mov
hlt
xchg
aad
adc
pop
cmpsl
ja
or
xor
int
mov
sbb
ja
mov
cld
fisttpl
mov
inc
pop
pop
pop
mov
push
inc
cwtl
outsl
pop
test
shll
cmc
jp
outsb
push
jnp
out
fwait
jne
lret
sbb
repnz
dec
or
dec
jae
fsts
out
stos
mov
fdivrs
popf
imul
push
pop
mov
mov
sub
repnz
js
pop
mov
pop
clc
inc
add
dec
inc
rorb
jnp
push
cwtl
sbb
lahf
out
push
in
mul
adc
cmp
mov
sbb
and
cmc
push
xor
leave
xor
push
cmpb
fists
adc
addb
inc
rcl
leave
sub
movsb
int
nop
insb
sbb
ret
jge
in
jle
adc
inc
cmp
dec
adc
xchg
out
mov
xor
lahf
mov
dec
cs
hlt
push
cld
jae
arpl
int
push
addr16
mov
ss
adcl
push
mov
push
fidivs
xchg
xchg
pop
bound
movsb
mov
jmp
fmull
and
pop
pop
or
mov
popl
stos
push
and
imulb
repnz
lock
gs
or
out
shlb
outsb
out
mov
lds
cld
mov
test
inc
pop
dec
push
test
push
outsb
outsb
xchg
mov
sti
lahf
cmp
jb
js
mov
mov
les
sbb
test
jl
lods
addb
in
dec
pop
jno
pushf
popa
add
sbb
std
stos
cmpsl
pushf
push
jnp
xor
std
fdivp
mov
popa
add
dec
adc
popf
and
test
push
and
cmp
sbb
adc
shll
cmpsb
inc
scas
mov
xchg
out
aam
xchg
cmpsb
ljmp
clc
fimuls
sbb
outsb
sbb
adc
js
mov
adc
test
mov
xchg
test
sbb
mov
gs
dec
push
out
repz
lahf
or
mov
xchg
daa
push
or
addr16
ret
adc
pop
pop
leave
xor
mov
daa
push
add
aad
pop
jae
addr16
cmp
cmp
cwtl
in
jl
mov
andl
adc
add
sbb
cmp
lds
sbb
adc
shlb
adc
adc
mov
inc
xlat
sbb
mov
testb
les
adc
popl
dec
push
in
or
int3
movb
xor
xor
stos
andb
das
sbb
imul
mov
mov
xor
add
sub
aas
fsubrs
dec
shlb
mov
pop
in
stc
loopne
out
add
sti
stos
mov
pusha
nop
push
iret
push
ljmp
fadd
call
adc
add
push
or
pop
adc
mov
leave
cvtps2pi
xchg
inc
mov
jae
loop
rclb
mov
cmp
xchg
dec
mov
int
ja
insl
sub
sbb
sub
xchg
xchg
idivl
sbb
sbb
cld
icebp
cmp
shll
dec
push
pusha
scas
in
fisttps
imul
imul
adc
mov
pop
and
jge
movsb
addb
jno
add
icebp
jl
int3
push
sbb
inc
xlat
ret
lock
rcl
insl
decb
cmp
jnp
jne
inc
fs
cwtl
lcall
nop
clc
movsb
std
sbb
popa
nop
shrl
cmp
inc
xor
rcr
ds
hlt
mov
mov
ja
jne
jns
aaa
inc
inc
mov
inc
std
fdivrl
mov
and
imul
dec
ljmp
rep
imul
mov
adc
mov
add
add
push
mov
fidivrl
cmp
push
mov
insl
jp
sbb
inc
je
push
pop
or
aaa
loopne
mov
push
push
insb
popa
mov
fst
rclb
insb
into
mov
loopne
mov
popf
iret
test
and
int3
mov
xor
mov
push
das
aas
cli
mul
jno,pn
mov
sub
pop
mov
cs
rolb
jmp
or
fcompl
xchg
push
mov
enter
addr16
jmp
aam
cwtl
or
push
ficomps
leave
dec
push
mov
sub
mov
lcall
notb
xchg
idivb
sub
daa
push
xor
cmpsl
paddsb
adc
sub
jmp
test
jecxz
daa
mov
xchg
adcl
cmp
icebp
cmp
or
jne
mov
push
and
das
cld
cli
pop
dec
dec
test
fsubr
sbb
adcb
adc
cmp
aaa
negl
addl
cli
jle
sbb
out
jge
sti
je
in
xor
fisubl
push
jnp
xor
dec
arpl
pop
or
clc
in
pushf
jecxz
mov
nop
in
cmp
jne
in
lcall
push
cmp
addr16
cli
and
and
cmc
jl
out
dec
icebp
int3
cmp
sbb
shll
mov
testl
sbb
adcb
cmp
shrb
mov
xchg
imul
mov
lods
clc
mov
repnz
pop
decl
xor
adc
adc
je
gs
out
sahf
ljmp
popf
call
mov
mov
icebp
pushf
jmp
aas
cmp
jae
and
loope
sub
cmp
in
cmp
jbe
inc
sbb
xchg
test
xchg
xchg
js
int3
mov
adc
orl
jge
jecxz
fucomp
cli
jno
xor
les
rol
xchg
ljmp
push
xchg
aas
ss
leave
add
les
popa
pop
or
cmc
jb
xor
imull
adc
pop
aam
pop
stc
push
loop
add
cs
jae
push
add
dec
or
sub
rol
insl
xchg
inc
movsl
jl
mov
addr16
cmp
push
pop
les
out
leave
cmp
cs
pushf
mov
mov
mov
dec
lock
aad
clc
jp
cmpsl
jle
sub
pop
push
ss
jle
push
in
roll
fsubrs
cs
in
jl
fcoml
push
movsb
in
xlat
in
jge
inc
and
or
fs
lret
addb
dec
popf
rolb
enter
shrb
ljmp
int3
stos
pop
stos
push
rolb
xor
push
pop
inc
dec
rclb
idivl
sti
scas
int
mov
jl
push
mov
fsubrl
jno
test
inc
cmp
sub
daa
push
subl
mov
push
and
lods
push
add
subb
add
cmpsl
push
add
scas
add
rorl
inc
or
lods
gs
sbb
ss
xchg
jne
sbb
xchg
inc
jno
cmpl
sbb
add
jl
jl
sub
js
dec
jle
dec
orl
xchg
mov
sub
idivl
xor
divl
jbe
cmc
jge
incl
or
sub
divl
jle
jb
cmp
jle
jnp
jp
mov
jo
jl
jl
sbb
sbb
pop
loopew
dec
mov
jb
pop
inc
lret
fs
or
pop
inc
dec
insl
add
mov
stc
dec
mov
and
dec
std
scas
mov
dec
lcall
pushf
or
jne
xor
or
enter
imul
push
or
mov
aam
scas
jno
jmp
pop
loopne
mov
xor
popa
aad
int
add
mov
sbb
ret
and
aad
test
or
jecxz
mov
xchg
fs
cmp
scas
shll
sub
mov
and
clc
sub
cmp
shrl
addr16
cmp
adc
out
in
dec
pop
into
jns
fdivrl
dec
je
inc
icebp
das
aad
push
mov
push
add
jbe
mov
inc
inc
cmpsl
or
sti
lea
lods
xchg
shl
xor
jle
jnp
dec
xchg
and
pop
mov
push
dec
inc
mov
push
jnp
inc
arpl
das
clc
repnz
loop
cmp
add
aad
movsl
shrb
xchg
dec
sbb
xchg
sbb
push
pop
cmp
outsb
mov
jne
daa
mov
lods
scas
out
iret
pop
js
cld
cmp
sbb
sub
shr
fisttps
sub
jmp
push
call
lahf
in
push
movsl
and
pop
push
sahf
xchg
xchg
mov
es
out
and
push
inc
inc
jbe
outsl
es
cltd
pop
ja
mov
jbe
mov
in
adc
mov
in
sbb
xchg
orb
push
les
pop
rcrl
mov
xchg
push
arpl
loope
cmp
aaa
xchg
jle
dec
add
pop
fcomps
inc
cmpsb
push
or
int3
int3
dec
bts
push
jl
pop
xor
mov
mov
ds
jb
sbb
xor
fstpl
out
push
or
xor
mov
push
dec
xor
mov
cmp
mov
xlat
cmp
idivb
inc
push
outsb
xorb
jbe
sbb
dec
xor
clc
daa
lret
cmp
gs
not
repnz
scas
call
cmpl
sub
xor
fidivrl
imul
test
stos
lea
sbb
dec
repnz
jmp
dec
cli
imul
enter
or
mov
ja
gs
scas
mov
jno
xor
mov
mov
and
aam
outsl
jo
je
and
or
clc
cmp
push
push
js
jns
xchg
jg
sbb
arpl
push
fdivs
ds
nop
jns
mov
mov
or
push
ficoml
or
fistpl
je
andl
adc
jne
aas
adc
adc
mov
xor
insb
fsts
shll
icebp
rol
add
test
int3
pop
push
mov
subl
popf
or
in
push
xor
nop
jmp
lock
imul
sub
sbb
push
ljmp
lret
add
out
cmp
jb
js
mov
dec
xor
js
adc
loope
popf
iret
adc
insb
push
aaa
bswap
into
dec
xrstor
dec
sbb
push
mov
popf
cmpsb
sbb
andl
mov
jb
lock
inc
push
aaa
push
cmp
pop
test
and
mov
xor
imul
imul
loop
jne
lret
push
mov
add
pop
push
in
lods
out
mov
inc
pop
inc
scas
data16
jae
test
stos
jnp
dec
mov
adc
jne
das
add
push
int3
nop
addr16
inc
ret
mov
or
jae
xchg
sub
scas
dec
pop
aam
in
loope
arpl
movsl
mov
fbstp
dec
std
jp
mov
push
loopne
jl
roll
outsl
cli
movsb
incb
out
mov
xlat
dec
loop
aas
popf
rcrl
mov
mov
sub
jmp
movsl
xchg
push
sahf
jae
push
mov
dec
jae
out
loope
jge
and
loopne
cltd
xchg
dec
loopne
inc
fsub
sbb
sub
push
sbb
xchg
ja
bnd
xor
mov
shll
int3
sub
mov
lahf
cmc
scas
jnp
enter
cwtl
or
mov
aas
scas
iret
roll
and
fnstsw
inc
xor
cmc
push
je
adc
scas
jmp
sub
jmp
mov
mov
ja
adc
imul
sub
push
adc
sbb
hlt
scas
idiv
lods
loop
rcrb
jae
addr16
shr
dec
fnsave
and
cmpsl
dec
aad
addr16
cmp
and
out
inc
push
lret
aaa
les
and
pop
in
add
adc
ror
mov
push
mov
pusha
cmpsb
arpl
jmp
mov
imul
or
push
inc
sarl
push
xor
test
sub
pop
cmp
aam
repz
shr
hlt
mov
xor
clc
nop
in
out
das
je
xchg
pop
inc
push
and
in
mov
add
sbb
jg
pop
sbb
in
fildll
mov
addl
dec
ss
lret
xor
xchg
movsl
mov
fdivrs
push
jb
sbbl
inc
adcl
pop
cmp
mov
lock
dec
fadd
lods
sahf
add
outsl
fnstcw
sbb
lret
cs
mov
lods
je
dec
cs
lods
and
outsb
cli
jne
sarb
bound
shrb
cli
mov
xchg
addr16
push
negl
jg
pminsw
data16
xor
mov
sub
lcall
mov
jo
dec
addr16
cwtl
or
lods
xchg
mulb
mov
dec
imul
sbb
insl
push
mov
adc
lods
mov
mov
mov
xchg
out
repnz
insb
xlat
sar
int
fs
test
pusha
mov
jp
roll
sti
fmul
and
cmp
jle
repnz
xor
push
xor
add
idivb
fstpl
outsl
cmpsb
mov
or
hlt
int3
mov
lahf
loope
out
mov
push
orl
mov
push
or
inc
out
xor
repnz
rol
xor
in
sti
test
ja
xlat
jle
pop
and
push
pusha
fsubrs
ljmp
je
jnp
cld
xchg
and
adc
mov
add
or
in
jl
rolb
pop
adc
test
fsubrs
jecxz
push
int3
daa
and
addl
pop
and
lods
ficoml
adc
jp
mov
xchg
xor
fdivs
xorl
pop
push
and
stos
mov
dec
sub
pop
cli
lahf
cli
jae
pop
shr
lock
sub
or
fcoml
jmp
rcll
lods
xor
arpl
shlb
fs
out
inc
jo
xor
in
stos
mul
and
iret
push
xchg
pop
mov
and
jns
test
cltd
loop
xorl
mov
mov
push
ret
mov
shll
mov
mov
addr16
inc
or
adc
fildl
lds
push
jne
mov
sbb
insl
mov
or
cmp
sbb
xor
cmpsl
jbe
inc
cwtl
into
adc
jecxz
es
push
ja
and
cmp
nop
adc
mov
or
int3
jge
mov
leave
adc
xchg
inc
stc
scas
mov
mov
inc
cmp
and
xchg
dec
push
pop
push
aaa
mov
scas
mov
mov
sub
stc
jbe
insl
in
aam
mov
pop
mov
push
mov
xchg
lds
dec
jne
mov
sub
jecxz
add
push
nop
dec
das
adc
cmpsb
in
pop
dec
mov
or
cltd
mov
int
adc
inc
icebp
xchg
scas
or
in
lahf
mov
out
bnd
test
mov
sub
repnz
push
popf
popa
push
dec
in
mov
enter
dec
lds
fmul
pop
ljmp
leave
incb
lods
jle
test
jbe
mov
xchg
rorl
lods
xchg
rcr
fiaddl
bound
pop
mov
test
xor
std
adcb
push
cld
mov
sbb
out
add
js
outsb
lret
es
out
jb
cwtl
jo
rolb
stc
mov
xchg
out
ficoms
sub
fldt
into
shll
jnp
cs
mov
mov
mov
push
dec
inc
cwtl
xchg
stc
inc
scas
push
mov
xor
add
shl
dec
lock
pop
mov
je
xchg
cmpsb
iret
jbe
mov
insb
popa
sub
xchg
addl
enter
mov
in
jne
mov
outsl
je
aas
nop
sub
lods
xor
xor
dec
xchg
dec
mov
lods
jne
add
and
inc
jnp
jno
push
nop
cmpsl
pop
add
mov
gs
sbb
lods
ds
dec
push
test
inc
scas
clc
inc
mov
mov
imul
pop
add
adc
push
dec
push
movl
add
add
pop
rol
adc
cmp
in
mov
rcr
lcall
int
call
icebp
ret
out
mov
jmp
rcrl
dec
jl
dec
xchg
fs
sti
lcall
scas
dec
inc
jne
add
cmp
cmp
sahf
stc
mov
sub
adc
mov
jns
gs
lods
ret
enter
movsl
add
outsl
insl
xor
add
mov
inc
jns
push
jl
fcmovnu
sahf
sbb
xchg
pop
mov
fld
mov
dec
mov
push
xlat
shl
test
dec
cld
jbe
lods
cmp
shll
cmp
mov
jo
pop
mov
jle
lods
and
mov
adc
enter
cmp
sub
push
icebp
rcr
imul
or
cs
sahf
iret
sbb
aas
aas
and
fildl
cmp
insb
imul
mov
out
fistpll
xor
cmpsl
gs
fidivs
ret
rol
icebp
inc
dec
rcrb
dec
xor
cmp
inc
xchg
pop
mov
out
fs
xchg
pusha
pop
lea
daa
shlb
add
enter
sbb
adc
jp
mov
shr
pop
test
out
into
out
push
or
xchg
dec
rolb
xchg
nop
clc
jmp
add
mov
inc
jno
mov
or
sub
arpl
inc
insb
dec
jmp
leave
pop
fs
js
pop
sub
call
lods
mov
mov
and
ljmp
int
stos
lret
xchg
fwait
mov
out
int3
mov
mov
mov
pop
jo
adc
out
daa
push
jmp
div
mov
xor
aaa
pop
fwait
ljmp
mov
aas
mov
xchg
pop
sahf
cli
insb
dec
mov
test
push
adc
dec
inc
pop
hlt
adc
aam
data16
mov
iret
push
ja
pop
xchg
adcb
fldenv
xor
mov
inc
pushl
daa
lock
add
xor
fldl
inc
movsl
ja
xchg
xchg
mov
pop
dec
pop
ret
xchg
test
jp
leave
xchg
movsl
dec
leave
das
xor
xchg
lods
int
adc
push
xchg
push
decl
js
mov
pop
nop
add
mov
shll
dec
and
mov
movsl
push
test
or
inc
add
jb
aas
jno
mov
gs
add
sti
insb
sbbl
lds
inc
ror
mov
adc
cmpsb
pop
in
xchg
ja
sahf
movsl
push
jmp
inc
icebp
inc
outsb
inc
push
filds
jmp
sbb
aaa
repnz
fidivl
lea
inc
out
add
shr
jmp
add
cmpsl
enter
xor
cmp
inc
stos
push
cmp
pushf
jle
push
dec
jnp
insb
pop
and
xchg
das
mov
xor
out
xor
dec
lock
mov
iret
lahf
test
mov
and
fs
mov
push
mov
std
ja
mov
icebp
add
aas
jl
push
pop
pop
inc
mov
mov
mov
mov
sub
jb
adc
jle
and
call
mov
leave
roll
sub
sub
pop
mov
mov
xchg
or
pop
dec
push
jns
jle
pop
fdivl
jg
test
sub
fs
and
dec
sub
fsts
fsubs
cwtl
xchg
in
dec
adc
sub
movsb
mov
sub
popa
jle
jns
mov
mov
jle
inc
je
jg
dec
xchg
fildl
jge
cli
pop
movsb
push
fdivrl
inc
fs
adc
cmp
mov
sti
inc
int
ljmp
xor
lds
pop
pop
lods
push
pop
aad
fld
sbb
lcall
xchg
dec
push
jl
inc
sbb
sbb
dec
push
jnp
inc
jae
mov
hlt
adc
mov
xor
or
cmpsl
sub
xor
xchg
enter
jns
inc
aaa
rorl
pop
xor
fldt
out
mov
cli
imul
negl
mov
popf
or
sbb
sbbb
fidivrs
out
or
adcl
and
xor
cmp
mov
xchg
mov
add
dec
aad
lcall
inc
loope
or
movsb
pop
mov
ja
leave
test
sub
loopne
jns
mov
ljmp
in
jp
push
ljmp
fistpll
aas
mov
pop
xacquire
daa
sub
daa
xchg
test
fisttpl
movsl
push
mov
xlat
sbb
in
out
out
mov
out
out
mov
out
out
mov
out
out
mov
out
out
mov
out
out
mov
out
out
mov
out
out
mov
out
out
mov
out
out
mov
out
out
mov
stc
stos
adc
push
mov
and
cltd
out
daa
std
xchg
jp
mov
inc
pop
sysenter
cmpsw
adc
or
lcall
sub
inc
dec
cmp
jae
movlps
mov
pop
jo
clc
mov
fadd
movsl
stos
lret
jge
pop
test
decb
ret
cwtl
pusha
jae
rcl
idivb
jl
and
inc
lds
cli
mov
dec
jae
nop
test
adc
inc
lock
mov
fwait
sti
ljmp
and
shl
cmpsl
nop
xor
sub
ljmp
fcomi
xchg
lahf
pushl
stos
mov
sbb
inc
mov
aas
jae
cltd
xchg
fisttpll
cmp
or
xchg
jg,pn
notb
mov
inc
inc
cmc
add
int3
in
mov
and
cmp
inc
mov
adc
inc
xchg
add
insb
mov
adc
popf
jl
sub
and
mov
jne
sbb
popf
xor
add
cmp
and
es
test
and
mov
rcrb
mov
sub
lret
ja
outsb
jg
push
test
addb
sti
bound
xor
cmpsb
addb
add
in
lcall
les
or
iret
pop
cli
cmpsl
push
sub
push
int3
xchg
dec
rorb
xchg
out
xchg
jp
lds
pop
cmpb
call
cmp
jg
push
xor
loop
xchg
addr16
nop
orb
xor
mov
andl
mov
sbb
rcrl
and
mov
pop
sub
loopne
arpl
sti
lret
push
inc
repnz
call
push
push
cmp
out
cmp
fsubl
push
cmpsl
push
int
in
loopne
repnz
ljmp
aad
adc
ljmp
add
and
jecxz
mov
xchg
ret
fistpl
cmpsb
daa
dec
aad
jmp
in
pop
sub
and
shll
test
inc
sub
fisubl
das
sbb
cli
sub
pop
roll
dec
in
data16
mov
loopne
pop
push
and
fistl
cmp
jp
xor
aaa
adc
jge
repnz
orl
gs
adcl
dec
adc
xchg
outsb
inc
xchg
jbe
repz
fwait
loop
inc
int3
jmp
cmpsb
xchg
setle
jns
cmpsb
push
sub
cwtl
decb
xor
insl
into
push
pop
inc
adc
mov
xchg
clc
cld
adc
out
xchg
pusha
addr16
clc
push
add
add
sbb
sbb
int3
fnsave
mov
sahf
out
xor
mov
cmp
iret
movsb
loopne
xchg
inc
inc
sbb
ds
out
divb
jb
pop
cmc
mov
int3
hlt
cld
jb
int
leave
mov
mov
dec
das
mov
push
xchg
dec
pop
push
mov
mov
movb
xchg
test
bound
jmp
lret
mov
stos
pop
js
icebp
lods
testb
add
push
leave
test
movsb
loope
lds
subl
fsts
fistpl
lcall
xchg
ja
stos
mov
push
insl
pop
decb
outsb
imul
imul
or
and
pop
sbb
popf
subb
mov
add
xchg
fists
dec
inc
adc
or
aas
mov
sub
push
pop
ds
repnz
jae
nop
sbb
jo
sahf
mov
cmp
xchg
pushf
popa
xor
mov
push
or
sub
insb
mov
fwait
lea
push
and
lods
dec
in
imul
push
clc
xchg
cmpsb
daa
inc
sti
sub
xchg
subl
test
pop
inc
xchg
cmp
enter
cmp
inc
mov
jbe
jecxz
mov
test
insb
sub
lds
lret
adc
into
add
mov
les
xchg
xchg
aam
in
jno
ja
jne
repnz
sti
idivb
lds
xor
hlt
cmp
out
push
sbb
rolb
int3
xchg
and
dec
fs
lea
adc
gs
hlt
and
js
jmp
dec
aam
sub
cmp
sbb
pop
cmpb
xchg
xorl
rcrb
push
mov
ja
xor
sbb
and
xchg
mov
sysexit
fnstsw
mov
pusha
pop
dec
ljmp
mov
lret
adc
std
xchg
xor
insl
outsl
push
sbb
imul
xchg
inc
ret
sub
loop
mov
fwait
daa
test
add
cmp
push
ss
in
sbb
mulb
sub
sbb
into
xchg
dec
inc
pushf
lods
sub
clc
clc
orb
push
les
sbb
sbb
push
mov
stos
insl
aas
int
xchg
xchg
shlb
and
lds
scas
jne
fdivrs
mov
dec
add
movsl
jns
add
pop
dec
cmpb
jb
push
pushf
inc
mov
push
rolb
ficompl
fldt
push
aaa
shlb
lret
dec
mov
movsl
sub
push
mov
call
mov
imull
fisttpl
lcall
fs
adc
pop
out
mov
inc
or
mov
inc
add
cmpsl
cltd
lods
add
sbb
adc
mov
out
and
out
dec
inc
pop
pop
sub
mov
icebp
push
adcl
sub
into
cmp
repz
test
stos
in
popa
ret
shl
mov
sub
outsl
cs
cmpsb
mov
repnz
xchg
pop
pop
adc
outsb
shl
dec
xor
xor
adc
into
cmpb
aam
xchg
push
pop
and
adcb
and
enter
fdivrl
cli
fdivl
fsts
xor
add
push
cmp
xchg
push
int3
cmp
aas
mov
mov
adc
pop
jp
jmp
inc
in
mov
shl
and
popa
jb
mov
sub
push
gs
push
mov
stc
and
scas
out
inc
out
mov
pop
dec
mov
push
bound
cmpsb
mov
int
popa
jb
push
dec
cli
lret
xchg
mov
cmp
cmp
mov
aad
lcall
jns
pop
adcb
hlt
adc
movsl
lahf
xor
xchg
push
adc
test
rorl
scas
insb
jbe
in
push
mov
cltd
jl
jae
and
cs
out
cmc
mull
or
into
push
push
push
mov
inc
lods
add
std
xorl
pop
sub
aam
push
pop
cmp
push
imulb
sbb
sahf
or
gs
shll
fldenv
clc
aaa
repnz
addr16
mov
xlat
xchg
push
scas
lcall
insb
jl
cli
jae
pop
mov
adc
jbe
and
leave
mov
adcl
jno
popa
inc
test
aam
add
leave
lahf
sub
jmp
faddl
pop
inc
xor
aas
inc
fnstcw
inc
dec
stos
mov
inc
pop
rol
inc
adc
inc
ja
ljmpw
ljmp
inc
dec
mov
cmp
mov
jnp
push
movsl
push
xor
inc
outsb
hlt
add
movl
xchg
pop
xchg
in
jg
movsb
sbb
xchg
add
pop
into
fcom
in
xor
push
popa
ret
add
pop
daa
lret
xchg
ja
rcr
push
leave
mov
or
icebp
pop
pop
xchg
imul
arpl
leave
data16
pusha
jl
clc
lods
insb
daa
or
ds
pop
dec
jnp
mov
pusha
xchg
pshufw
popa
pop
ljmp
sub
aas
in
stc
dec
in
mov
push
mov
xchg
inc
mov
shrb
cmp
and
adc
ror
stos
ret
test
xchg
pop
mov
xor
test
adc
cltd
xchg
scas
jne
mov
outsb
inc
or
and
mov
xlat
test
into
pop
or
loopne
or
cmp
add
push
dec
mov
lock
jne
xor
xor
and
push
fstp
fwait
push
sub
sub
adc
mov
mov
inc
test
dec
push
xchg
adc
sub
shlb
mov
loop
add
sub
outsl
push
adc
cld
lcall
ds
lret
test
out
adc
or
jnp
and
popf
mov
adc
mov
das
jle
daa
ss
mov
mov
mov
pop
jae
lds
or
sbb
test
ss
bound
sahf
stos
jbe
push
xchg
mov
ret
imulb
push
lock
and
orl
ljmp
fimuls
out
dec
test
xor
cmp
sbb
sarb
gs
es
fstpl
adc
dec
gs
cwtl
adc
mov
inc
in
dec
cld
push
mov
mov
sahf
or
mov
xor
and
loope
addr16
mov
pop
divb
out
sub
and
jbe
sbb
sub
xchg
outsb
adc
cmc
adc
and
outsl
and
mov
adc
sbb
adc
es
arpl
and
mov
addr16
xchg
pop
jg
mov
and
cmp
adc
das
and
cltd
xchg
test
sbb
sbb
mov
dec
scas
mov
fbstp
insb
cmc
inc
mov
out
mov
sub
sbb
arpl
push
cltd
out
cmp
rcll
bound
cmc
sub
inc
push
test
sub
aad
pop
mov
lods
fidivl
xchg
stos
cmp
arpl
mov
outsl
sub
push
jne
push
mov
inc
mov
push
fsubp
and
ss
jno
pop
cli
mov
dec
pusha
cmp
inc
test
mov
fs
popf
popa
inc
rclb
jmp
loope
sub
and
sbb
ret
rolb
inc
xchg
lea
sbb
int3
xchg
or
cmp
push
das
jnp
add
inc
mov
and
popf
icebp
xor
mov
jae
ret
cmc
nop
push
das
sarb
dec
call
xchg
and
in
push
fwait
push
daa
mov
enter
mov
stc
dec
fists
or
dec
mov
fdivrl
testb
int3
mov
out
mov
xor
lcall
scas
in
pushf
les
pop
cmp
movsl
xor
jmp
mov
xor
mov
push
inc
sub
and
flds
rcr
ss
rclw
inc
adc
cmc
dec
jmp
mov
dec
inc
arpl
pop
add
jl
or
mov
out
cwtl
push
test
fsubrp
dec
notb
sub
sbb
pop
mov
aas
andb
xchg
add
imul
pop
mov
push
lahf
popf
or
cmp
fs
push
int
iret
frstor
pop
jnp
scas
nop
cmc
or
jle
in
loope
cmpb
mov
and
inc
test
fcmovnb
push
inc
leave
jno
outsb
fidivl
or
xchg
test
roll
dec
mov
mulb
dec
mov
popf
aad
cmpl
jg
iret
inc
jno
outsl
xchg
fs
push
dec
mov
mull
mov
clc
cmp
shll
xchg
cs
jmp
lea
mov
sbb
sub
lock
sbb
out
int
cmp
xor
and
data16
imul
mov
sbb
outsl
hlt
bnd
xor
add
push
dec
mov
fsqrt
into
cmp
mov
xor
jp
adc
rclb
in
sub
aad
push
stos
dec
mov
sub
and
fdivrs
fstl
outsb
sahf
pop
fcomps
lea
ss
xor
shrl
bound
rclb
xchg
jl
push
jbe
sub
andl
add
adc
jge
fisttpll
lahf
and
xchg
mov
out
enter
lcall
pop
pushl
icebp
mov
mov
movsl
test
lock
andl
and
inc
lret
add
int3
ficoml
mov
or
jnp
cmp
ja
mov
lea
lds
insl
mov
in
shlb
je
aas
or
scas
sahf
gs
int
loop
ret
stos
jns
push
sbb
mov
adc
outsl
adc
or
lock
ret
jge
xor
jbe
test
popa
mov
mov
and
scas
jae
xor
test
pop
mov
fildll
aam
push
jbe
andl
jno
inc
arpl
movsb
out
lcall
je
add
push
lds
loop
das
imul
mov
cmpsl
xor
mov
dec
dec
orl
jecxz
dec
lods
repnz
jg
pop
shll
lcall
jg
enter
bound
cltd
sub
shll
femms
jg
outsb
pop
push
lcall
out
stos
sub
mov
add
dec
jecxz
sahf
jl
or
out
push
cwtl
mov
xchg
mov
jl
outsb
mov
inc
in
xor
or
mov
dec
inc
mov
fnop
out
arpl
and
jnp
clc
inc
xchg
push
jne
or
sbb
je
sub
mov
jo
xchg
add
dec
push
xorl
sbb
mov
push
clc
mov
and
dec
aad
cmp
jnp
mov
test
mov
out
divb
js
mov
mov
enter
in
xor
lret
sbb
fistpl
gs
pop
dec
lret
testl
mov
or
sub
jp
aaa
xor
fwait
sbb
add
and
cmpsl
adc
es
dec
jmp
adc
mov
sahf
sub
pusha
mov
mov
add
push
inc
add
scas
mov
arpl
adc
iret
shlb
push
fwait
jne
rolb
shrb
add
imul
leave
in
fucomp
or
mov
cs
push
rcl
mov
push
dec
ja
inc
and
inc
mov
popa
in
push
dec
mov
pop
push
dec
lcall
jp
push
lcall
lcall
lcall
mov
jne
adc
repz
dec
jne
mov
lahf
inc
aaa
loope
inc
outsb
test
adc
sahf
push
mov
sub
cmp
mov
or
sbb
push
and
jge
mov
mov
sbb
push
out
and
dec
mov
repz
test
testl
mov
daa
push
push
add
js
mov
mov
aaa
dec
sbbb
jg
mov
movsl
and
repz
lds
ret
aas
movaps
lret
adc
sbb
and
repz
sbbb
data16
cmp
stos
add
in
inc
setns
pop
xchg
ss
adc
jmp
push
pusha
aam
sti
gs
jns
adc
loopne
push
icebp
adc
in
aaa
repz
lcall
je
fsubs
push
cmp
jmp
ror
out
lods
pop
pop
dec
xor
mov
pop
imul
mov
sub
xchg
stos
pushf
xchg
lret
adc
pushf
mov
hlt
fidivrs
mov
dec
int
mov
jg
sub
repz
lea
mov
xor
pop
xor
std
sbb
movsb
jne
push
popf
push
int
notl
push
shlb
test
xchg
iret
mov
add
out
and
adc
xchg
dec
dec
push
outsl
adc
jns
sub
jmp
nop
xchg
fldt
mov
mov
ficoml
sub
dec
add
out
je
dec
cmp
lret
and
pushf
mov
pop
xor
xchg
xor
ds
gs
mov
fldl
incb
js
in
cmp
xor
je
mov
sbb
int
int3
cmp
nop
pop
adc
mov
add
or
out
jbe
lahf
push
pop
xor
call
movsl
push
fprem1
mov
push
cmp
test
jge
fidivrl
push
or
mov
enter
stos
xchg
aad
arpl
out
mov
push
fcmovb
pushl
cltd
inc
xchg
test
aad
add
pop
pop
js
andb
addr16
rolb
scas
sahf
je
lahf
jl
xlat
mov
xchg
stc
jnp
inc
mov
movsb
fcmovbe
es
and
sub
push
push
mov
mov
insb
pop
mov
jne
fdivrs
xchg
pop
repnz
jo
data16
or
roll
fldt
leave
cmpsb
addr16
and
test
sbb
sub
jnp
xor
jle
outsb
add
and
add
out
jo
or
sbb
pop
push
mov
test
packuswb
arpl
outsb
and
arpl
lock
inc
mov
mov
stc
adc
jp
mov
ss
ss
add
mov
add
pop
pop
jne
ss
and
nop
lock
je
xchg
pop
add
pop
mov
in
aad
inc
pop
add
inc
ss
ds
pop
pop
lock
fmull
into
in
mov
sbb
mov
push
lds
pop
jb
faddl
incb
jne
mov
mov
mov
mov
xlat
mov
mov
test
adc
jp
jb
mov
mov
push
mov
push
clc
jb
out
xor
clc
clc
mov
mov
mov
mov
mov
mov
test
adc
jp
ss
push
mov
push
mov
push
clc
jb
out
add
clc
clc
pop
mov
mov
mov
inc
sti
mov
mov
incb
push
pop
pop
jne
xchg
pop
add
pop
inc
test
add
data16
lds
pop
pop
mov
scas
pop
dec
push
iret
cmp
push
jne
adc
iret
sub
pop
ljmp
xor
mov
mov
xor
pop
push
cmp
jo
cmpsl
shrl
cmc
cli
dec
aaa
sub
nop
adc
or
sahf
xchg
push
push
int3
lret
lods
test
add
mov
dec
imulb
pop
mov
out
icebp
mov
or
fcmovne
enter
add
js
ret
xchg
push
ljmp
xchg
mov
int
into
mov
mov
bound
cmp
dec
mov
shl
cmpsb
jb
nop
jne
xchg
sbbl
push
lcall
jmp
dec
xchg
pop
pop
mov
aad
jne
and
and
jge
push
push
aam
adc
shrl
lock
jl
and
aad
add
dec
leave
dec
imul
lods
mov
or
fsubrl
out
int
adc
ja
fisttpl
mov
jne
mov
mov
adc
clc
scas
mov
ret
push
push
and
xor
adc
jo
ret
int
pop
loope
pushf
jnp
popa
xchg
iret
loop
dec
fildl
popf
pop
mov
jae
cmp
aas
sbb
popa
shl
dec
mov
inc
nop
mov
inc
inc
push
insl
inc
cld
adc
js
dec
lea
int
xchg
ret
mov
xchg
fmull
nop
mov
cmp
outsb
pop
mov
icebp
bound
pop
into
pop
cli
xchg
xor
outsb
cmpb
sbb
stos
and
add
scas
adc
lret
cmp
push
adc
je
js
mov
xor
gs
pop
insl
xor
mov
in
lods
inc
jle
sbb
inc
push
cmp
dec
cmp
sub
mov
mov
jmp
into
sahf
orl
adc
cmp
sti
daa
jg
repnz
jbe
or
sub
lcall
mov
call
or
jmp
cmpsb
loope
mov
add
xchg
clc
cwtl
cmpsb
xchg
mov
lret
leave
or
negl
mov
mov
sub
and
aaa
cmp
shll
test
mov
sub
lcall
cmp
adc
or
xor
jns
fisttps
adc
lods
jo
xchg
adc
cli
enter
mov
dec
or
mov
and
loopne
push
adc
add
scas
scas
push
inc
or
insb
adc
popa
jae
lods
in
mov
movsl
leave
adc
push
jo
lret
cmpsl
pop
icebp
mov
cmp
ds
enter
jp
rolb
bound
test
mov
sub
mov
pop
add
dec
mov
test
leave
sub
mull
jnp
cmp
xchg
pop
xor
or
cld
push
dec
ret
or
xor
dec
jb
jge
rcrl
test
sub
xlat
sti
or
mov
repnz
pop
add
jl
dec
notb
movsb
xchg
fldenv
xchg
fnstcw
mov
inc
xchg
jle
inc
bound
xor
pop
clc
xchg
sbb
lahf
les
cmp
jl
push
dec
mov
xchg
sbb
fbstp
rcrw
sarl
lea
mov
aaa
hlt
cmc
test
in
int
jmp
arpl
lock
pop
inc
testl
and
orl
jle
rcrl
fmull
mov
push
jmp
mov
xchg
pop
pop
jb
clc
gs
mov
xchg
sbb
push
fs
cmpsl
fcoms
shrb
imul
hlt
mov
push
mov
jp
mov
fldt
dec
ljmp
lock
pop
test
imul
in
movsl
mov
inc
or
dec
dec
ret
dec
mov
loopne,pt
mov
pop
push
dec
or
jmp
out
loope
test
lret
lods
inc
test
sub
int3
iret
addb
jmp
sbb
repz
xchg
add
aad
cltd
fcmovu
sarl
and
mov
out
ret
and
popf
cwtl
xchg
jge
dec
add
push
and
jbe
pop
dec
loop
jae
inc
adc
mov
and
jl
ljmp
shll
repz
repnz
xor
and
push
sarl
bnd
das
add
out
inc
sbb
inc
sarb
stos
pushf
mov
push
inc
shll
lcall
sub
out
mov
jo
outsl
mov
ret
std
and
sbb
xchg
pop
std
mov
ret
adc
mov
mov
ds
pop
xlat
sub
mov
icebp
iret
and
jne
xor
push
fiadds
nop
in
dec
dec
adc
and
int3
jb
and
test
into
adc
rclb
pop
lret
xchg
loope,pn
outsb
into
ja
sbb
and
inc
call
mov
das
cmp
push
icebp
cmp
and
sbb
or
push
and
dec
outsb
leave
insl
cwtl
dec
push
fnstsw
stos
mov
bound
dec
or
mov
pop
jecxz
sbb
.byte
.byte
.byte
